mov
mov
in
addr16
adc
mov
jb
daa
push
or
test
pop
pop
mov
xchg
sbb
sub
or
fsubs
dec
jne
das
xchg
mov
ja
dec
add
nop
cmpsb
jle
sbb
lock
cmpsb
jo
sub
jae
mov
test
cs
repz
mov
mov
loope
and
or
or
cmp
in
das
mov
cwtl
jmp
dec
cs
sbb
daa
movsl
and
sub
xchg
out
icebp
cmpsl
aam
ljmp
imulb
push
jmp
lcall
inc
sub
push
pop
push
mov
push
or
imulw
mov
sbb
xchg
imul
dec
or
jge
sbb
fidivl
or
push
out
repnz
lcall
ja
fldcw
andl
xor
hlt
imulb
mov
and
xor
add
xlat
movb
out
or
sbb
adc
or
daa
fadds
or
ds
fsubl
ja
out
mov
and
loope
push
mov
cmp
sub
sarl
je
push
cmp
mov
dec
call
mov
bound
and
push
iret
cmp
sub
cmp
jbe
adc
sub
aad
mov
adc
pop
clc
lret
xor
orl
js
in
enter
sti
add
xchg
cmpsb
fisubrs
aad
push
test
scas
popl
sub
outsl
jb
sub
sbb
rorl
adc
or
and
int3
rcrl
xor
jnp
pop
fs
imulb
cmp
add
or
mov
or
insb
andl
jbe
sub
in
shll
test
in
push
jecxz
imul
shlb
sub
push
sub
mov
imul
dec
cld
mov
inc
arpl
push
xchg
mov
test
inc
adc
cld
pop
adc
scas
sub
add
or
popf
jp
or
push
inc
insb
mov
test
xor
xlat
nop
pop
sub
mov
cmpsl
mov
pushf
cld
cmp
xlat
cmpsb
inc
mov
adc
push
dec
movsl
push
adc
out
fsubrp
lods
xchg
add
sub
xor
adc
sub
inc
ss
push
dec
addr16
or
mov
fs
scas
in
mov
adc
test
jnp
push
popf
xchg
sbb
add
adc
movsl
sti
lds
dec
jmp
sub
xchg
test
mov
xchg
data16
aaa
test
loop
pushf
jbe
cmp
pop
dec
lret
mov
scas
sub
lock
mov
add
nop
mov
bound
jo
mov
stos
mov
cmp
int3
lods
daa
mov
test
pop
jno
ja
adc
dec
xchg
dec
lock
in
push
scas
iret
outsl
test
cli
mov
test
inc
or
aas
shrl
dec
inc
or
sbb
sub
add
sbb
ret
pop
sarb
scas
adc
push
pop
ljmp
fadds
and
mov
and
xor
out
fcompl
push
adc
xor
dec
or
push
cltd
mov
stos
pop
ja
mov
stos
fistps
test
outsl
xchg
lea
repnz
insl
cmp
xor
scas
mov
cmp
dec
ficomps
bound
dec
inc
jmp
or
jne
aam
insl
je
fwait
aam
test
sbb
lahf
lods
in
xchg
sbb
out
lcall
cmp
test
or
fidivs
imul
push
test
out
and
and
ss
fsubr
out
mov
xor
hlt
mov
js
cmp
repnz
sub
in
out
js
mov
test
jmp
into
mov
push
xchg
and
imul
jle
test
or
gs
mov
data16
cli
out
xlat
jo
les
loopne
imul
pop
jnp
pusha
out
in
jno
jbe
clc
adc
add
es
imul
push
bound
cmc
clc
dec
sbb
fistl
cld
test
inc
pop
pop
sbb
xor
and
rol
dec
das
frstor
movsl
es
jns
in
ljmp
lahf
inc
fwait
xchg
push
mov
lods
xor
push
mov
xor
mov
cld
add
cmp
push
cmpsl
xorb
sub
jnp
outsb
dec
xor
sub
aam
imull
test
dec
add
aad
mov
rcrb
dec
push
pop
cs
xor
int3
insl
aaa
outsb
cmpsl
daa
addr16
jns
cmpsb
xor
mov
pop
inc
sub
push
jne
aad
add
inc
dec
dec
aaa
xrelease
dec
leave
stos
dec
xchg
mov
and
jl
pop
push
jb
pop
out
fidivrs
cli
pop
pop
adc
test
stos
fwait
xor
dec
mov
rclb
popf
jno
add
push
popf
sti
sub
or
jno
and
xor
aaa
pop
fdivrp
mov
pop
lds
push
mov
jmp
xchg
jo
cmpsl
iret
push
dec
jle
push
or
pop
inc
std
sbb
and
mov
xor
movsb
push
pop
enter
dec
cltd
mov
and
test
lret
sub
das
xchg
lea
clc
or
pop
movsl
adc
xchg
add
leave
lcall
lret
dec
adc
xlat
jmp
sub
cltd
pop
mov
pop
pop
pop
pop
cmp
xchg
and
cmc
fsubrs
inc
in
shlb
out
xor
and
rdtsc
adc
sbb
and
cmp
sbb
enter
cmc
imull
lea
js
dec
lahf
xchg
ja
insl
xor
add
scas
add
adc
xchg
out
add
daa
inc
ss
xchg
mov
mov
sbb
je
lea
mov
inc
ds
in
imul
cmc
cwtl
xchg
xchg
xchg
inc
inc
pop
aam
adc
adc
dec
push
jmp
push
jle
jne
dec
addr16
xor
jp
outsl
push
push
nop
or
adc
mov
addr16
mov
jecxz
push
out
ljmp
jbe
test
lea
fldcw
in
nop
xchg
out
out
arpl
aam
data16
and
in
push
or
pop
adc
dec
add
cwtl
mov
std
mov
lock
adc
scas
mov
dec
cltd
mov
test
lds
cmpsb
mov
and
outsb
push
sbb
movsb
inc
cmpsl
pop
mov
cwtl
xchg
in
xor
lret
dec
test
insb
xchg
jns
ja
mov
sub
adc
xor
fwait
ds
add
nop
add
sub
inc
imul
xchg
es
mov
xchg
fs
ja
push
dec
js
xor
push
cmp
sbb
and
pop
sbb
lret
mov
insl
insb
aam
mov
je
mov
aaa
js
fisubrs
in
ljmp
rcrb
and
push
xchg
and
fisttpl
lock
je
outsl
stc
fildl
fwait
xor
sub
add
push
notb
in
stc
sbb
roll
or
js
jne
dec
lods
xchg
cmpsl
inc
pop
jge
xor
pop
in
aas
outsb
jl
lcall
add
addr16
push
xchg
push
dec
inc
test
je
cs
mov
sub
pusha
pop
jno
or
mov
cwtl
mov
push
dec
cmp
lods
icebp
xchg
data16
sti
sbb
xchg
pop
movl
dec
stc
scas
mov
int3
mov
jbe
call
aas
outsl
mov
outsb
xchg
in
js
cld
in
ss
mov
mov
or
fdiv
jl
jno
mov
push
jg
fwait
stc
mov
js
pop
adc
sub
or
lret
or
test
scas
daa
test
cmp
push
popa
scas
pushf
inc
and
adc
repnz
and
or
push
push
lcall
push
xchg
shlb
cmc
pop
dec
jne
lods
jb
mov
mov
ljmp
push
ljmp
gs
xchg
xchg
cmp
pop
add
scas
lods
sbb
jmp
cmpsl
sub
dec
enter
aaa
gs
dec
fsts
daa
sub
mov
daa
ja
sbb
movsb
inc
gs
fisubrl
mov
jge
dec
out
mov
push
cld
adc
out
pop
fdivl
jns
outsl
test
daa
push
xor
jbe
sbb
xor
push
fistl
int3
lods
pop
add
sub
movsl
jae
cmp
ficoml
dec
loop
pusha
dec
sbb
popf
lods
out
pop
repnz
lock
push
pop
adc
in
or
out
adc
or
outsl
pop
addr16
movsl
adc
dec
push
lcall
sub
insl
adc
sbb
push
pop
daa
add
out
dec
push
mov
stos
sub
cmpsb
movsl
mov
cmp
ret
cs
imul
loopne
adc
push
sbb
fildll
es
loope
xchg
subl
outsl
stos
shll
lods
sub
aad
testl
testb
and
jbe
aas
stos
jae
push
pop
jae
inc
sbb
fwait
sbb
cs
mov
negb
daa
bound
stc
test
or
xchg
sbb
nop
scas
jno
enter
dec
aad
jo
test
push
mov
stos
push
push
pop
sub
sbb
lcall
and
notl
je
clc
dec
clc
out
in
mov
xchg
js
in
out
mov
stos
lcall
adc
pop
cs
inc
pop
aas
inc
cmc
repnz
lock
xchg
xor
xchg
mov
bound
lea
pop
adc
inc
inc
xchg
pop
cld
enter
in
sahf
sarb
inc
fidivrs
movsl
sbb
cwtl
or
push
scas
mov
push
add
test
ja
adc
ucomiss
jb
enter
pop
pop
repnz
lcall
sub
cmc
mov
cmpsl
addl
sbb
inc
insl
push
stos
cmp
push
ds
jbe
shlb
ror
jnp
jno
cmp
dec
sarb
cmpsb
loopne
push
mov
cmp
jbe
test
aas
mov
or
inc
or
sbb
js
pop
ss
clc
sbb
jo
outsl
add
lcall
push
psllq
lret
sahf
jne
pop
inc
rcll
aad
sub
xchg
adc
sbb
cld
dec
lcall
mov
push
loopne
jnp
cmp
jbe
add
adc
fdivrs
mov
dec
mov
inc
mov
aas
mov
cwtl
loopne
ja
pop
and
dec
rcrb
lods
mov
push
mov
or
push
adc
in
or
cli
and
push
outsb
sbb
mov
cmp
leave
lret
sbb
scas
lret
call
mov
in
xor
pusha
roll
sub
pop
test
jae
mov
cmp
incl
fistpl
jmp
pop
or
pop
idiv
mov
xchg
pushf
dec
loop
add
outsb
ds
mov
scas
movsl
daa
push
cmp
add
hlt
jo
and
xchg
ss
ret
sbb
inc
aaa
mov
jg
cmc
movsl
mov
or
push
mov
or
or
sub
test
and
pop
cmp
aaa
add
insb
lret
cmpsl
movl
bound
xor
push
stc
loop
aaa
loop
mov
jle
jg
jbe
clc
or
lea
insl
mov
out
addl
imul
or
iret
and
jp
sbb
dec
cli
sbb
cmc
stos
addr16
lock
add
insl
sti
sub
inc
mov
test
cmp
or
fistpl
jb
xor
mov
inc
ficompl
out
mov
pop
adc
popf
shl
pusha
mov
popa
iret
stos
or
add
mov
adcl
mov
or
xor
mov
rcrl
adc
pop
or
push
xor
cli
fisttpll
inc
mov
sub
and
jns
pop
popl
cs
movsb
sub
sub
xor
add
mov
mov
nop
cld
into
sub
adc
mov
fisubrs
into
mov
dec
pop
sbb
outsb
add
inc
sbb
adc
mov
int
push
stos
dec
pop
or
or
imul
cmp
ret
inc
outsb
xchg
and
lods
clc
xchg
cmp
out
mov
lods
lret
pop
jl
fsubrl
nop
pop
mov
mov
stc
adc
int
cmp
and
mov
inc
fwait
ljmp
mov
and
push
mov
mov
xchg
ljmp
mov
pop
push
fistps
add
out
cli
jmp
xchg
mul
xor
adc
jle
mov
cmp
sub
js
ja
ss
orl
pop
xor
fildl
pop
js
dec
cltd
fnsave
dec
into
adc
or
sahf
mov
push
rorl
jno
icebp
in
mov
push
xor
aas
pop
repz
out
push
out
mov
mov
pop
aas
push
test
cli
in
loop
mov
nop
mov
loopne
dec
cmc
lods
mov
imul
mov
cld
mov
push
stos
lahf
lret
mov
je
push
jmp
notb
push
xchg
bound
push
dec
or
push
stc
xor
test
lods
mov
or
outsl
adc
cld
cmp
dec
insl
scas
jle
mov
pushf
out
adc
int
insb
mov
in
out
pop
ficoms
imull
or
xor
dec
call
xchg
xchg
mov
lcall
mov
ja
or
xlat
mov
sbb
ja
mov
cmpsb
push
xchg
push
popa
std
js
mov
jg
js
dec
imul
stos
jb
xchg
dec
out
out
fnsave
rcrl
js
sbb
xor
mov
push
into
or
lcall
out
outsl
xor
cmpsb
push
push
pop
hlt
cmp
or
pop
rorb
shlb
andl
push
int
xor
addr16
fwait
dec
push
xchg
insl
push
mov
hlt
xor
inc
mov
xchg
jge
into
cltd
js
dec
jmp
jb
in
xor
xchg
shlb
gs
sbb
data16
lock
test
pop
and
push
push
dec
pop
push
cmp
cmp
xlat
pusha
aam
pop
dec
jae
inc
sub
imul
cli
in
inc
mov
jno
into
cmp
jae
push
xor
lods
dec
fsub
dec
add
ret
aam
add
push
mov
mov
dec
or
xor
jnp
lods
mov
sbb
inc
pusha
sub
inc
js
das
cmpl
mov
xlat
out
ret
pop
outsl
inc
imul
mov
jmp
xor
call
jl
in
jne
dec
rcl
mov
imul
sub
or
gs
je
loopne
cmp
sub
inc
in
in
xor
std
in
fwait
test
mov
clc
addr16
out
push
xor
or
mov
dec
add
jae
into
test
insl
aam
jnp
add
call
ds
in
inc
test
pop
push
xchg
ds
dec
test
pop
push
and
pop
jmp
aad
push
hlt
cmp
flds
cmpsb
popa
cld
push
and
xchg
or
cmp
xchg
mov
scas
mov
enter
idivl
push
cltd
mov
mov
fcompl
popa
and
mov
dec
xchg
outsl
or
out
addb
outsl
dec
mov
jbe
inc
outsl
into
cltd
or
sub
aaa
sarl
movsb
mov
dec
pop
jl
pop
jo
mov
cmpsl
pop
ds
out
addb
cmp
push
hlt
scas
mov
or
test
les
lea
pop
dec
xchg
push
adc
xor
addr16
je
xchg
lret
aas
mov
xor
in
xchg
sub
mov
mov
dec
outsl
and
xchg
daa
outsb
push
inc
fidivs
xor
pop
add
xor
fwait
mov
nop
out
stos
dec
jns
pop
stc
repnz
mov
aas
das
push
pop
dec
xchg
add
movsl
clc
div
mov
outsb
das
cltd
out
cmp
dec
xchg
aam
add
and
mov
push
imul
add
addr16
adc
sub
movsl
and
jmp
insl
push
adc
add
stos
enter
lea
sub
jo
pop
mov
mov
cmp
add
test
movsl
adc
and
mov
xchg
add
add
adc
adc
imul
xchg
fmull
in
mov
fildll
into
aam
movsl
sub
in
fidivrs
and
iret
test
ss
cmp
or
sub
pop
inc
jle
cmpsb
test
in
mov
mov
loopne
bound
test
or
test
fs
sub
bound
jb
aad
xchg
outsb
daa
xchg
dec
fxch
jo
mov
push
dec
fst
scas
inc
add
dec
or
lea
andl
outsl
mov
inc
mov
and
xor
bound
outsb
add
or
cmp
push
call
subl
insb
test
mov
mov
out
insl
cmpsl
push
sub
sub
xlat
mov
leave
add
jle
sti
cli
decb
out
cmp
pop
enter
fcmovnb
popa
and
lods
cld
aad
lock
adc
xchg
jp
js
push
subl
mov
xchg
ficomps
insl
jmp
outsb
xor
adc
mov
xchg
sti
lods
stos
jb
stos
push
imull
xchg
ds
mov
mov
xchg
push
xchg
jecxz
stos
jp
push
or
mov
fiaddl
lock
sti
repnz
cli
pmulhuw
inc
outsb
call
adc
and
fwait
int
std
pop
loope
add
xchg
and
push
push
dec
sub
lock
lock
inc
cmp
std
bound
movsb
fldl
in
pop
adc
jnp
inc
lods
rolb
mov
sbb
xchg
cltd
jp
sbb
mov
push
pop
sbb
int3
ret
push
or
add
les
movl
pop
addr16
xchg
mov
xchg
jmp
dec
mov
xchg
fists
adc
dec
inc
mov
mov
add
push
pop
inc
sbb
leave
fcompl
mov
cmovb
imul
fimuls
cmp
fimuls
outsb
jnp
js
scas
nop
repz
or
pop
add
xchg
cmc
xor
icebp
mov
out
aas
leave
pop
and
cld
push
or
movsl
jns
mov
sub
xor
mov
inc
and
imul
and
lcall
sbb
and
rcll
jne
jno
repnz
and
fstpt
sub
dec
call
and
test
sbb
lock
sbb
jnp
or
lcall
outsl
cmpsl
stc
push
pop
xor
pop
adc
mov
in
cmp
sbb
mov
js
mov
mov
or
inc
insb
inc
mov
insl
inc
fimuls
aad
mov
cmp
adc
imull
xor
push
cwtl
sbb
sbb
lcall
popa
stos
nop
inc
or
stc
pop
movb
loope
xchg
test
jb
stos
cmpsl
stos
cmp
xchg
cmpxchg
aas
inc
mov
add
or
cld
push
xlat
lods
cmp
add
cwtl
xchg
cmp
out
cld
adc
neg
sbb
daa
int3
add
fstpl
dec
adc
xor
push
sbb
add
lods
test
inc
mov
in
outsb
mov
push
inc
dec
aaa
dec
pop
cmp
aad
mov
stos
mov
xchg
pop
sub
sub
adc
jns
jo
sbb
sahf
mov
push
or
push
aad
adc
addl
add
inc
movlps
xor
cwtl
sub
sub
and
cmpsb
xchg
and
adc
adc
and
adc
fsubs
or
scas
push
aam
notb
fwait
inc
dec
dec
dec
je
dec
out
jg
cmp
out
mov
cmp
add
es
add
pop
push
rcll
cs
adc
xchg
add
dec
pop
push
ja
push
adc
mov
icebp
fsubrs
das
mov
xchg
je
or
mov
adc
or
nopl
xchg
push
xchg
sbb
inc
mov
ss
roll
ss
xchg
cmp
inc
xor
mov
sub
insl
cltd
xchg
clc
inc
xchg
dec
hlt
xor
psubd
inc
test
dec
imul
jns
pusha
les
inc
lret
test
inc
stc
cld
fwait
pop
and
adc
out
adc
in
or
std
add
cmp
mov
stc
jnp
sub
outsb
cwtl
inc
push
sub
adc
cld
sub
lcall
jb
mov
mov
out
stc
add
adc
fs
dec
inc
dec
add
add
lret
and
and
add
add
mov
pop
xor
jnp
mov
inc
xor
sub
adc
ja
test
pop
out
push
into
push
xlat
sahf
sub
xchg
jp
fwait
mov
push
or
testl
sub
pop
sbb
inc
jo
outsb
dec
jmp
cmp
pop
arpl
mov
cmp
aam
popfw
pusha
mov
pop
mov
add
cwtl
into
sub
jge
cmp
loope
insl
popf
cmp
pop
xchg
adc
ja
mov
outsb
add
imul
push
mov
loope
and
repz
cmp
outsl
in
pop
pop
aaa
movsl
loope
and
gs
int
dec
jg
out
pushf
test
repnz
inc
sub
cmp
sbb
inc
inc
ret
call
outsl
or
push
fildll
sbb
mov
lret
into
dec
or
int
push
test
testb
xor
mov
inc
or
xor
sub
mov
or
sub
arpl
pushf
mov
and
imul
cmovae
xchg
lret
xor
cmpsb
incl
std
fsubrl
xchg
xchg
xchg
mov
pop
lods
or
out
fmull
and
jno
movsl
shl
push
and
or
hlt
xchg
pop
mov
aas
adc
pop
fistl
lods
xchg
mov
fst
push
sbb
ficomps
push
ljmp
adc
inc
mulb
xor
shrl
mov
add
ljmp
rorl
orl
dec
add
leave
cltd
lahf
stos
cmp
add
mov
test
out
int3
mov
std
or
clc
addr16
out
mov
or
or
je
sub
nop
ja
nop
adc
and
out
bnd
jne
push
xchg
sub
xchg
shll
sbb
daa
jge
testb
leave
loopne
fisubs
out
ja
sub
js
fstl
dec
pusha
mov
outsl
or
add
sahf
pop
lret
lret
ja
xchg
stos
xchg
sahf
out
push
pushf
adc
fwait
push
mov
or
sahf
fdivs
hlt
or
inc
stos
movsb
inc
nop
test
es
sbb
stos
popa
out
jle
dec
push
js
movsl
arpl
int
add
mov
daa
xlat
fs
dec
cli
hlt
aas
movsb
pop
push
dec
aaa
mov
aas
mov
cwtl
aaa
shll
ja
mov
xor
xor
or
xchg
loop
xchg
sub
imul
and
push
push
lods
in
push
ljmp
in
or
shlb
push
add
add
repnz
and
ja
in
ss
cld
dec
call
or
push
pusha
in
bound
faddp
cmp
in
call
push
jmp
icebp
out
aad
imull
out
or
push
in
out
mov
je
pop
cmp
ret
push
addr16
push
imul
imul
xor
ja
jl
jno
and
mov
xchg
sub
push
inc
jmp
es
lret
cltd
movsl
inc
mov
out
movlps
dec
js
or
mov
jg
adc
xor
lods
jmp
push
adc
mov
inc
jbe
clc
lret
gs
xchg
mov
out
push
mov
clc
jno
inc
mov
or
mov
or
xchg
cwtl
test
jmp
dec
insb
xor
lea
aad
addl
push
pop
mov
adc
rorl
inc
andb
and
sub
mov
xchg
push
insl
dec
push
sub
sbb
add
mov
repnz
mov
dec
shr
aaa
sbb
sub
in
arpl
jno
add
iret
sub
neg
jg
xchg
sub
outsl
imulb
xchg
add
fcoml
push
inc
lock
fmuls
inc
inc
sbb
pop
and
cli
scas
mov
dec
pop
popa
insl
call
lods
push
mov
jnp
mov
sahf
or
jmp
pop
bswap
mov
and
nop
add
xchg
mov
xchg
xchg
pop
insl
data16
clc
ljmp
aaa
outsb
jge
pusha
xor
lcall
lea
cli
cmc
jnp,pn
test
lea
mov
inc
js
push
outsb
dec
cli
jne
sbb
sbb
outsb
int
mov
xchg
lcall
xchg
xor
cmp
push
xchg
xchg
sub
or
or
mov
sub
call
lret
mov
push
addr16
aaa
and
mov
push
sahf
jmp
add
or
stos
mov
and
jne
sub
in
or
sub
loopne
pop
push
sub
sbb
movb
and
inc
hlt
push
into
test
xor
xlat
lret
clc
mov
add
imul
inc
or
pop
imul
data16
dec
cld
sub
mov
enter
cs
and
cmp
jbe
shr
orl
frstor
loope
mov
and
ds
out
imul
mov
sbb
cs
cmp
lea
or
int
test
dec
sub
jnp
and
std
cmp
xchg
rol
or
mov
push
popa
or
scas
jbe
add
imul
fildl
lock
xor
mov
iret
sbb
lret
fidivs
pop
adc
xor
xchg
pop
add
jl
mov
in
push
mov
in
adc
sbb
insb
xchg
cmpsb
push
leave
int3
cli
stos
lret
or
cmp
and
jb
fistpll
roll
cmp
push
sub
adc
inc
daa
push
pop
cmp
push
cmpsb
pop
add
jle
sar
cmpsb
adc
ss
push
out
lret
daa
sub
jge
test
repnz
movsb
push
inc
push
cmp
mov
jmp
pushf
xor
xchg
mov
pop
adc
mov
sub
jo
sub
adc
sbb
aad
scas
mov
inc
notl
es
cmpsl
daa
dec
or
out
decl
mov
adc
inc
ss
loope
sub
dec
imul
rorl
sbb
sub
fs
sti
adc
out
jg
hlt
and
arpl
ss
xor
mov
outsb
call
dec
bound
cmp
int3
testl
popa
or
outsb
fmul
mov
cwtl
push
iret
ljmp
jno
xchg
xor
aaa
xor
add
mov
mov
sbb
push
out
lock
data16
jg
int
cmp
es
or
and
rorl
add
push
scas
sbb
es
xor
push
ss
add
ss
add
cltd
repz
xor
xchg
mov
mov
add
stc
inc
daa
cli
or
out
xor
data16
ds
je
out
cltd
mov
es
push
gs
dec
enter
adc
jb
in
pop
not
hlt
imul
popa
call
aas
adc
pusha
mov
ss
and
in
push
arpl
hlt
jne
cmc
push
sub
xchg
mov
cltd
push
add
pop
dec
push
movsl
and
bound
push
push
add
xchg
int
les
scas
and
or
lahf
dec
dec
sub
jmp
xor
push
call
mov
sub
aaa
push
xchg
ss
or
jnp
add
scas
in
adc
loopne
mov
lcall
xchg
in
outsb
xor
xchg
dec
cmc
push
push
aad
out
mov
inc
addr16
mov
add
adc
mov
test
pop
mov
daa
inc
into
dec
dec
lcall
das
mov
inc
ret
outsb
lea
xchg
sbb
dec
in
pop
out
add
test
mov
hlt
leave
mov
or
hlt
dec
jb
stos
or
mov
cmp
or
outsl
insb
shll
or
mov
mov
sbb
scas
es
xor
sbb
adc
mov
push
push
or
mov
pop
insl
js
jne
or
cmp
xlat
xchg
imul
xor
mov
lret
push
roll
sub
cmpsl
adc
sbb
add
mov
lea
cmp
pop
or
or
dec
and
out
fstps
jl
jbe
push
mov
and
iret
pop
out
dec
cltd
pushf
test
fsubp
dec
xchg
insl
cltd
or
das
push
fwait
pushw
inc
sub
add
mov
movsb
ja
fnstenv
dec
xchg
ja
cmp
scas
sub
dec
inc
ss
stc
fsubl
mov
mov
out
aad
and
or
jbe
dec
ss
clc
xchg
mov
xchg
hlt
out
push
jae
mov
inc
sub
xchg
lds
loope
je
mov
ja
mov
cld
inc
jae
vunpcklpd
shr
inc
sub
les
in
call
push
cltd
push
and
xchg
sub
xor
cmp
add
arpl
insl
push
xor
int
test
incl
push
xlat
std
jbe
xlat
hlt
jbe
xlat
jbe
xlat
add
xlat
pushl
xchg
xor
xchg
sbb
inc
nop
cwtl
out
repnz
out
scas
insl
addl
push
ljmp
gs
jnp
dec
les
loop
jecxz
sarb
add
dec
add
mov
aas
mov
lcall
rorl
xor
push
mov
ret
add
insb
mov
cmp
aad
xor
dec
inc
jo
clc
jbe
into
push
cmp
push
lret
jb
lock
mov
push
push
lret
addr16
pop
fbld
and
or
or
cwtl
lcall
or
scas
movsl
mov
movsb
push
jae
push
sbb
lods
add
pusha
and
in
add
stc
jecxz
push
xchg
pop
cmp
cs
loop
cmp
mov
jb
mov
and
inc
cmp
push
aaa
mov
pop
addr16
loop
xchg
jmp
xor
mov
push
cmp
sbb
xchg
dec
out
inc
or
jno
lds
mov
jno
mov
scas
sub
mov
lcall
push
dec
inc
into
fists
cmp
fsubrs
ljmp
test
and
add
mov
push
pop
adc
pop
sub
sub
lds
shrb
lds
inc
xchg
sbb
mov
sub
inc
xor
cli
sub
jo
dec
push
out
xor
in
ret
pop
sub
xchg
xchg
xor
dec
std
mov
ficoms
adc
arpl
dec
lock
inc
xor
mov
fs
cli
hlt
adc
and
and
inc
jge
pop
fists
pop
scas
mov
push
inc
ljmp
and
stc
mov
sbb
mov
setle
sbb
push
fsubrl
sbb
dec
movsb
sbb
scas
and
xchg
nop
add
xchg
lds
lea
inc
push
inc
jmp
adc
jno
insb
inc
fwait
les
cmp
inc
sbb
xor
xor
mov
add
sbb
xorb
sbbb
add
sub
inc
pop
aaa
insl
scas
or
pop
ds
lods
push
push
pop
xchg
push
pop
xor
mov
pop
ljmp
sbb
cltd
test
jno
xchg
movzbl
mov
fs
jns
int3
popa
imul
lcall
xor
lret
pop
sub
sub
mov
out
ret
sbbl
nop
stc
fcomi
cs
push
sbb
or
cmp
addb
in
add
pop
inc
jne
mov
iret
mov
gs
movsl
mov
in
into
popa
push
mov
xor
xor
jne
imul
mov
or
adc
xchg
push
call
push
push
adc
xchg
xchg
shl
mov
leave
int
add
sbb
leave
xchg
adc
cmp
add
jno
sbb
push
ss
in
push
out
xor
push
sahf
out
dec
es
or
cmp
jp
xor
inc
mov
pop
sahf
or
jbe
push
jae
das
out
fwait
mov
cltd
sub
jge
bound
popf
and
mov
push
into
dec
pusha
pop
movsb
sub
sub
sbb
ss
lret
jmp
data16
dec
sub
or
pop
mov
or
addl
adc
sub
idivb
gs
or
into
push
lods
add
cli
jno
mov
push
pshufw
cli
mov
fisttpl
out
fwait
orl
jns
or
dec
dec
call
cs
rolb
test
lret
aam
roll
shrl
out
in
in
jnp
mov
sahf
sbb
jns
xor
mov
rcll
stc
or
ja
inc
fwait
stos
stos
pop
lods
shr
fisubl
inc
add
xchg
xchg
inc
pop
xor
mov
add
sbb
or
scas
adc
xchg
push
daa
roll
arpl
pop
shld
xor
and
mov
sbb
inc
lods
out
in
daa
mov
out
adc
movsb
xlat
lea
mov
push
mov
xchg
inc
push
and
lea
or
or
push
adcb
stos
xchg
mov
adc
js
push
xchg
cmp
push
psubsb
mov
in
sub
push
inc
cltd
scas
push
iret
repnz
mov
cmp
cmp
xchg
imul
rorl
popl
das
sub
mov
inc
movaps
pop
adc
mov
sbb
sbb
testb
mov
xchg
cmp
in
dec
aas
leave
fs
addr16
sub
clc
sub
in
outsb
sub
out
lret
or
outsl
and
push
stos
mov
sub
cmpsb
js
test
outsl
nop
cs
jle
daa
mov
push
dec
mov
xor
movsb
sub
stc
dec
addr16
in
scas
jge
xchg
lcall
sub
rolb
add
adc
mov
lret
jbe
add
nop
in
mov
imul
cmp
mov
pop
inc
out
and
jo
js
and
lock
leave
add
bts
cmc
xchg
les
fwait
lods
fnstcw
mov
mov
mov
orl
cmp
psubsw
arpl
pop
push
jp
in
xchg
pop
rcr
lock
cld
mov
jns
rcr
pop
push
add
decb
mov
dec
andb
mov
es
in
fwait
mov
push
cmp
mov
pop
into
gs
pop
inc
rcll
rdtsc
lock
rolb
out
test
jns
sub
pop
loop
enter
push
add
inc
pop
call
mov
mov
push
and
fs
daa
arpl
add
jmp
pop
wbinvd
mov
jmp
inc
dec
push
add
sti
cli
xor
popa
cmp
sub
jno
insl
push
mov
jnp
mov
add
pop
les
add
xchg
out
xchg
test
ss
push
xor
push
dec
inc
cld
mov
ljmpw
pusha
outsl
testb
fsubrl
scas
or
scas
mov
ds
adc
xchg
inc
dec
iret
and
mov
xlat
adc
lds
adc
testb
into
or
sbb
jl
xor
push
lods
cmpsb
in
push
cmpsl
push
adcl
mov
cmpsl
sub
fildl
std
out
adc
lahf
cltd
scas
lds
and
js
sub
sub
cmp
ficoml
mov
add
jae
pop
mov
insl
xchg
into
xchg
imul
pop
and
lock
sbb
shrl
shlb
mov
mov
in
into
dec
xor
je
dec
jno
subl
and
fcmove
add
frstor
mov
mov
lret
adc
repnz
cmpsb
inc
cld
jno
xlat
and
aaa
pop
xor
xchg
push
dec
or
es
ds
daa
cli
insl
stos
call
pop
cmpsl
int3
aam
mov
pop
pop
add
popf
mov
sub
insb
negl
es
js
popf
outsb
outsb
leave
sbb
out
popf
or
out
cmp
inc
push
pop
pop
inc
pop
xchg
mov
sti
jp
push
mov
xor
push
aaa
mov
fs
dec
dec
jo
iret
movsb
iret
pop
std
cld
xchg
inc
addr16
or
mov
add
loope
and
je
or
push
lods
insl
insb
xchg
sbb
cld
cmp
mov
push
into
leave
int
stos
enter
sbb
scas
push
icebp
xor
clc
clc
jne
adc
pop
or
or
lods
mov
sub
pop
cmp
xchg
inc
cmpsw
test
inc
dec
lcall
mov
cs
mov
sub
fstpl
pop
lds
pushf
jp
inc
insb
lods
rcl
jo
pop
nop
cld
or
outsl
mov
cld
rorb
jne
mov
sub
loop
imull
rcr
add
ja
lock
bound
lods
stos
or
xchg
fisubs
movsl
popa
lcall
das
stos
in
or
cmpsl
pop
push
pop
into
call
push
fsubrl
test
out
aaa
mov
push
mov
xchg
xor
lea
adc
adc
lods
faddl
and
and
xchg
push
jge
pop
jge
xchg
inc
mov
ss
sbb
mov
or
cmp
lods
in
xor
pop
cs
cmpsb
clc
pushf
lods
ss
sti
iret
daa
in
insl
bound
jmp
mov
sarb
test
and
mov
and
pop
es
inc
xchg
mov
mov
mov
ds
cmp
sbb
test
sbb
movsb
dec
hlt
decb
lret
int
pop
pop
pop
shl
in
adc
lea
int3
in
sbb
adc
xor
in
sti
repz
test
mov
sbb
xchg
testl
popf
cmpsb
xor
mov
add
int3
or
cmc
dec
mov
lcall
dec
xchg
and
int3
and
dec
cmp
xor
push
lods
xor
nop
push
xchg
cwtl
scas
push
iret
sahf
pop
out
in
lahf
ficoms
lret
sbb
xchg
adc
add
pop
push
xor
jmp
jb
or
cmp
rcr
mov
inc
push
sbb
sbb
pop
jno
movntq
out
or
xchg
pop
bound
and
adc
ror
pop
cli
cmp
in
mov
enter
inc
adc
aam
jno
or
clc
subl
sub
sbb
push
pop
xchg
out
movsb
in
jmp
jne
iret
mov
jmp
jmp
push
repnz
mov
add
adc
cmp
dec
xchg
cld
dec
int3
addr16
outsb
in
into
mov
push
daa
int
out
push
add
adc
inc
roll
jo
mov
or
rorb
nop
fidivrl
dec
sbb
cwtd
sbb
inc
adc
into
pop
sub
push
cs
aaa
dec
xchg
xor
pop
int
jbe
add
push
test
jae
nop
jmp
sbb
pop
xor
dec
fwait
pop
or
xchg
ss
add
cli
ja
gs
adc
imul
xchg
inc
shrb
cmp
je
cmp
or
sbb
add
or
add
int
cld
aaa
out
or
out
xor
mov
cs
int3
pop
ljmp
fcompl
push
repz
push
jmp
push
fcmovbe
lock
mov
cld
cwtl
cmp
pop
outsb
mov
mov
popf
insl
and
push
push
imul
xchg
dec
ja
xchg
divb
inc
or
aaa
xchg
rcll
push
xchg
pop
shll
and
outsl
imull
aaa
or
xchg
rcrl
aaa
lds
aad
xchg
or
int3
add
rclb
imul
punpckhbw
and
scas
cmp
xor
cli
cmp
adc
fmul
adc
sub
mov
popa
into
dec
jbe
add
fwait
jae
fwait
dec
enter
jge
shll
xlat
add
cmp
out
jne
sbb
sub
pop
or
cmp
jmp
add
std
aas
cmp
dec
lods
insl
xchg
add
xchg
pop
lea
lret
adc
lock
data16
mov
into
clc
out
in
xor
inc
dec
cmp
push
js
and
mov
enter
or
dec
pushf
push
pop
std
adc
cmpsl
ja
and
xchg
add
out
out
ficoms
test
or
or
inc
aaa
dec
adc
add
inc
push
shll
test
ds
sbb
aaa
xchg
push
pop
and
xor
std
enter
lods
xor
jbe
outsb
lods
fstpl
shrl
lea
sbb
cmp
adc
mov
ds
mov
push
aas
mov
push
jb
mov
cmp
jnp
mov
inc
or
cmc
mov
pop
xor
cltd
sub
adc
clc
adc
cmp
test
xchg
or
push
mov
mov
mov
adc
sub
add
sbb
pushf
test
rcll
xor
push
cwtl
cmc
push
lds
cli
xor
test
jno
fsubr
pop
sbb
add
mov
sbb
outsb
jg
lahf
adc
ret
cmp
mov
dec
xor
clc
data16
jle
in
dec
xlat
mov
ja
imul
das
scas
lret
mov
lret
pop
xor
push
mov
mov
push
push
cmpsl
mov
sub
xlat
jo
xor
jns
pop
sub
inc
lock
adc
or
clc
mov
xor
in
imul
sub
cmp
pop
cltd
popa
mov
popa
xchg
in
fldcw
dec
xlat
dec
ror
jb
sub
jb
push
iret
dec
jle
jp
insl
mov
mov
nop
pushf
fadds
and
sub
movsl
lahf
or
sub
aas
inc
mov
rclb
test
push
xor
pop
jecxz
jmp
insb
xchg
lods
bound
xor
movsb
xchg
pop
into
xor
ss
dec
jl
into
repz
jb
push
in
in
js
pop
push
test
add
daa
cli
cmp
cld
in
mov
dec
push
shlb
mov
cld
xchg
mov
sub
lock
xor
mov
in
jnp
mov
cmc
xor
push
xor
ljmp
and
shrb
xchg
push
push
sub
aaa
pop
out
iret
fwait
aas
or
adc
aaa
pop
ja
push
jne
and
jge
xchg
rcrb
push
pop
lea
rcrl
xchg
dec
or
adc
adc
mov
jbe
xchg
xor
or
test
std
out
mov
mov
mov
sub
pop
push
mov
pushf
rorb
mov
enter
mov
jne
ljmp
sub
push
cmp
outsb
outsl
loop
mov
push
test
push
cli
sub
les
xchg
adc
dec
insl
mov
clc
mov
hlt
dec
adcb
sbb
cmp
xor
jo
adc
js
lea
leave
sbbb
mov
mov
stos
or
arpl
jge
test
aaa
pop
mov
mov
jbe
test
sub
mov
ss
inc
push
subb
xor
in
and
xchg
push
sub
mov
mov
xchg
mov
fcmovu
ret
pop
add
imul
cld
repnz
xchg
ret
mov
xchg
xchg
pop
dec
jge
ja
mov
add
sbb
mov
add
or
or
cmpsb
andb
leave
jg
movsl
fnsave
sti
jge
sbb
mov
stos
push
cmp
inc
push
xchg
inc
dec
adc
sbb
scas
outsb
jl
shll
xor
mov
sbb
insl
xchg
inc
shrd
lahf
push
push
or
test
xchg
sbb
test
adc
cmpsb
ret
test
and
xchg
call
cmp
out
shll
dec
pop
xchg
add
arpl
or
push
mov
cmp
mov
shlb
std
sbb
arpl
mov
mov
inc
pop
cmp
sub
sbb
movsl
stc
xchg
out
mov
out
sbb
loop
fdivrs
push
cmc
sub
add
push
mov
fcomps
pop
call
inc
pop
cmp
adc
int
ja
aam
in
in
xchg
es
push
es
sbb
pop
inc
imul
adc
xchg
cmp
clc
int3
inc
mov
cwtl
repz
pop
mov
pop
mov
lret
test
hlt
jb
jbe
repnz
lcall
xor
gs
in
inc
popa
jns
daa
je
mov
fists
dec
dec
aam
aas
insl
pushf
cs
pop
imul
insl
sbb
test
lock
xchg
jae
jne
mov
mov
cmpsl
pop
iret
call
in
jmp
or
mov
in
jp
pop
xchg
dec
test
and
bswap
mov
in
adc
mov
and
wbinvd
stos
jb
test
mwaitx
aad
es
outsb
pop
enter
out
adcb
stos
inc
push
insl
sbb
nop
mov
adc
sbb
out
aaa
fsubl
loopne
adc
jns
adc
inc
pop
push
mov
ss
adc
xchg
out
add
or
cmp
vprotq
daa
es
sub
stc
mov
xorl
adc
lock
fdivl
fisttpl
push
addr16
js
outsl
popf
push
push
dec
js
cmp
mov
stc
jne
mov
and
cmp
in
jg
push
adc
repnz
push
dec
cmp
std
in
or
adc
cli
shrb
mov
fucomp
jo
lea
repnz
sbb
mov
in
inc
sub
mov
subb
out
ret
xor
es
stos
fwait
lahf
push
xchg
js
sub
jb
insl
push
mov
outsb
popa
or
or
aad
push
push
or
mov
in
mov
sub
jae
testl
orl
loop
mov
jp
add
das
outsb
jno
mov
jecxz
mov
popw
fwait
dec
inc
mov
clc
shrl
and
stos
ja
popw
sahf
jmp
bound
in
pop
lea
test
jmp
and
and
xor
imul
add
pop
mov
pop
loop
mov
mov
cmc
ja
or
jmp
jmp
sbb
mov
pushl
fiaddl
jle
mov
lds
inc
pop
inc
mov
lcall
sti
fists
push
repnz
iret
sub
jmp
cmc
cmp
ja
sub
lods
ss
xor
sahf
and
inc
out
mov
int
xor
arpl
pop
sbb
ss
push
mov
or
mov
push
or
push
ds
or
lcall
ljmp
out
lahf
mov
out
fucom
dec
mov
dec
mov
mov
sbb
shll
pop
pop
lret
enter
push
lds
int3
test
scas
adc
and
mov
xor
mov
xchg
movsl
cld
or
mov
adc
test
push
adc
pusha
loop
aaa
popf
dec
out
adc
lea
jbe
paddsb
push
movsb
inc
les
or
testb
push
mov
or
call
xor
clc
jns
das
cli
add
mov
mov
push
lods
lock
cli
inc
sahf
sub
in
or
lock
inc
inc
pop
or
pop
sub
inc
imul
mov
fimull
sub
mov
dec
jecxz
sub
sub
push
es
xor
clc
test
sbb
lcallw
jns
mov
cmpsl
and
lcall
hlt
push
inc
jae
in
mov
dec
dec
mov
clc
inc
out
sub
xor
mov
lret
rclb
push
sbb
out
pop
insb
cmp
ja
stc
imul
cs
dec
cmp
dec
xchg
pop
inc
sbb
mov
test
sbb
ss
fwait
movsb
push
add
data16
jbe
add
or
iret
cmp
aaa
sub
or
outsb
sub
adc
mov
shlb
stc
addr16
or
sbb
mov
inc
xchg
xor
loop
stos
cwtl
sbb
in
ret
jbe
mov
lret
or
add
xchg
adc
iret
inc
testl
fadds
repnz
cli
insl
notl
icebp
test
stos
hlt
mov
sbb
shrl
lock
dec
mov
mov
or
mov
xchg
imul
xchg
push
outsb
xchg
outsb
inc
xor
or
loope
test
xchg
adc
pop
lret
add
ss
outsl
je
aad
lret
test
jmp
xor
xchg
lock
pop
mov
into
jnp
scas
add
in
adc
xchg
pop
or
push
jp
jb
push
mov
or
add
push
adcb
nop
in
insb
mov
loopne
pushf
fdivs
add
pop
pop
push
paddq
and
jne
mov
mov
inc
sbb
sub
dec
jmp
cmp
lret
cmp
in
out
mov
ljmp
popf
out
dec
inc
scas
xlat
jecxz
out
pop
cmp
sub
mov
fs
in
into
push
cmp
stos
fidivrs
idivl
xor
cwtl
xchg
add
jg
addr16
sbb
aam
cmp
sti
jo
fs
popa
in
fisubs
data16
repz
sub
andl
push
cmp
ret
cltd
adc
cmpsb
push
push
loop
repnz
rcrl
stos
cld
or
sub
movsb
imul
xchg
mov
loopne
or
sbb
es
adc
sub
add
lock
fidivl
das
inc
push
fldt
add
mov
into
ss
inc
ret
mov
pop
leave
dec
jle
xchg
fiaddl
push
fiadds
push
sub
adc
push
fisubrl
xor
xchg
dec
fsubrs
aam
scas
out
out
dec
pop
xchg
mov
dec
leave
insl
pop
sbb
inc
push
das
add
outsl
lock
lret
xorb
shrb
in
jmp
cltd
xchg
stc
inc
cmp
rdmsr
in
insb
icebp
sub
jb
mov
jnp
mov
push
int
inc
sahf
xchg
xor
push
xor
icebp
add
dec
imul
sbb
out
sub
mov
xchg
fs
pop
cltd
adc
or
jns
sti
in
aad
jg
fdivrs
sub
das
fcmovne
sbb
mov
repz
inc
mov
mov
fistl
call
insb
inc
adc
aam
push
adc
fidivs
out
xor
mov
sub
shll
mov
sbb
sbb
adc
addl
in
adc
fisttpl
ja
xor
xorb
xchg
adc
and
and
scas
xchg
and
addr16
push
sub
push
fstpl
stc
popf
inc
cmp
test
sub
js
notl
mov
pop
in
mov
out
add
mov
call
xor
incl
pop
cmp
jb
sbb
mov
inc
ss
inc
js
in
mov
and
ficoml
xlat
pop
mov
bswap
dec
or
call
imul
mov
lock
sub
pop
xor
mov
jne
mov
mov
xlat
rorb
std
or
push
dec
test
sbb
cli
pop
sbb
jle
loopne
or
or
ja
pop
and
mov
out
or
ljmp
mov
dec
rorl
xchg
shr
jae
aad
push
ds
push
xchg
sub
sti
dec
fcmovnbe
xchg
dec
push
ficomps
add
sub
mov
int
or
test
dec
and
in
push
int3
scas
out
imul
add
adc
push
xchg
mov
xor
ds
inc
cmp
ja
dec
mov
pop
loope
shlb
movsb
mov
int
or
ja
pop
sub
mov
lods
scas
into
imul
xchg
fcmovu
xor
sti
stos
popa
pop
in
xor
lods
fsts
push
lea
dec
xchg
jo
repnz
mov
inc
ljmp
xor
fs
pop
mov
mov
push
mov
lds
in
gs
mov
add
loop
in
int
aaa
xchg
orl
dec
mov
jae
faddl
fs
cmp
mov
stos
cmc
or
es
push
cwtl
stc
xchg
mulb
pop
cmp
fdivr
xor
je
xlat
adc
jno
ljmp
pop
shr
lods
jb
xchg
aas
cmpb
fiadds
repnz
icebp
pop
or
mov
pop
inc
add
adc
nop
test
int3
jecxz
xchg
pop
ljmp
adcb
and
das
sbb
push
cmpsl
add
push
cmpsl
or
sub
jp
movsb
aad
mov
jle
hlt
sbb
imul
in
fsubs
aad
cmpsb
or
pushf
lds
pop
lcall
dec
add
adc
push
or
jle
cltd
enter
ficompl
mov
jle
lock
enter
roll
leave
fmuls
ret
leave
xchg
icebp
sub
andb
or
aas
mov
clc
fdivrs
stos
scas
push
adc
xchg
imul
popa
iret
aam
cwtl
pop
in
pusha
adc
xchg
sbb
pop
xor
cmp
xchg
aas
sbb
stos
imul
popa
xor
push
icebp
pop
jmp
je
xchg
loope
je
inc
xor
pop
insl
hlt
sbb
jle
and
das
jbe
xor
dec
out
leave
hlt
push
push
stc
mov
sub
mov
and
popa
es
pop
push
lcall
aad
pop
iret
dec
loope
jl
adc
lock
movsb
mov
loope
mov
pop
int
cltd
push
sub
call
hlt
push
and
scas
xchg
pop
dec
das
pop
ja
cwtl
inc
jbe
inc
popa
jbe
andb
jmp
xchg
push
adc
mov
pop
inc
ss
fisubs
mov
xchg
imul
jle
xchg
sub
loopne
or
xlat
xchg
popf
adc
into
or
and
lods
xchg
movsb
outsb
pop
xor
adc
insb
push
xor
xchg
push
dec
sahf
outsl
jae
pop
clc
les
xor
sub
jb
sbb
cli
inc
popf
xchg
sub
jp
sub
push
testb
loop
sub
and
lea
aaa
adc
cmp
outsb
cmc
iret
push
lahf
adc
daa
push
clc
jnp
xchg
scas
mov
inc
jb
movsl
bound
push
std
mov
mov
cmp
dec
xchg
xor
mov
inc
fxch
loope
insb
out
test
aam
imul
popf
cltd
sub
mov
addr16
push
push
jo
jmp
in
mov
jle
stos
data16
nop
mulb
shll
push
aas
ret
ja
xor
lret
repz
inc
cmpsl
paddw
xchg
repz
rclb
pop
xor
xor
dec
js
xchg
dec
sbb
xor
pop
outsb
imul
movsl
repz
fsubrl
fbld
jle
jb
subl
testb
daa
stos
or
push
cmp
adc
cwtl
or
gs
lcall
int3
push
pusha
xor
push
xchg
lcall
lret
in
xchg
cltd
es
lea
cmp
adc
xor
lea
push
sbb
push
mov
cmp
inc
gs
mov
test
pop
clc
and
push
leave
sbb
inc
adc
cmp
inc
cli
xchg
in
sub
jp
sub
es
mov
mov
cltd
shrb
add
xor
mov
cmp
push
cmpsb
aam
or
aas
loop
jo
out
push
push
decb
pop
les
mov
aas
test
imul
push
mov
xlat
add
pop
pop
ja
outsb
mov
or
add
adc
cs
mov
xlat
or
push
dec
pop
out
mov
mov
out
xor
das
mov
loope
shlb
pop
pop
and
imul
jge
test
inc
push
cmp
xlat
pop
cmp
lds
mov
orl
sub
mov
cmpsl
cs
cmp
adc
cmpb
shll
adc
lret
jae
mov
out
aaa
popf
adc
das
mov
jne
fbstp
pop
cwtl
je
adc
lcall
mov
jl
test
jns
pop
mov
xor
out
in
add
sub
mov
push
pop
mov
lea
lcall
or
mov
cmp
or
xor
fcompl
in
push
and
dec
or
pop
xor
ret
push
in
adc
scas
imul
or
iret
xor
xor
jge
cmp
jmp
sbb
out
mov
push
mov
cltd
imul
dec
pusha
adcl
sarb
or
fs
inc
push
and
daa
cmp
clc
ret
sbb
repnz
enter
and
xor
or
fs
out
sti
addr16
dec
pop
sbb
lret
sbb
dec
adc
push
jmp
cmc
ret
in
pop
out
sub
mull
and
fwait
xor
adc
sub
lcall
js
jns
call
add
je
mov
inc
lods
lahf
sbbl
mov
push
jns
outsb
xor
sub
mov
mov
mov
lea
or
push
cmc
pop
mov
jne
sbb
ja
sbb
stos
pop
inc
sti
and
shll
mov
idivl
cmp
into
sarl
pop
imulb
sbb
pop
or
adc
shrl
test
adc
sub
jg
movsl
insb
pushf
adc
xchg
repz
dec
fsts
sub
cmp
inc
lea
sub
or
push
out
mov
jg
decl
adc
inc
xchg
das
mov
pop
cmp
arpl
push
adc
push
jo
js
lahf
adc
jne
dec
les
xchg
in
cld
push
mov
movsl
in
dec
das
xchg
test
xchg
pop
pop
jmp
insb
setg
das
sahf
or
lahf
add
test
adc
mov
stos
xor
movd
jge
mov
jae
in
imul
nop
lcall
xchg
lcall
js
xor
push
dec
xor
enter
inc
aad
cmpsl
or
add
inc
mov
or
push
adc
adc
xchg
sub
adc
push
outsb
sub
ret
outsb
push
xlat
sub
jns
or
jg
pop
sub
adc
jmp
dec
jbe
mov
xchg
adc
divb
or
jmp
andb
add
scas
imul
js
in
nop
mov
inc
inc
mov
shll
inc
sbb
gs
in
js
push
scas
mov
fldl
xchg
les
in
pop
es
dec
in
roll
xchg
lea
sub
inc
out
mov
lea
ret
mov
cmp
adc
push
lret
push
push
imul
xchg
mov
fsubrl
mov
xchg
push
xrelease
je
std
shll
arpl
fbstp
es
pop
or
in
push
test
mov
cltd
data16
jle
xchg
add
pop
call
fsubrp
push
or
jo
les
movsl
push
jmp
lret
inc
div
xor
lea
test
leave
pusha
jle
push
sbb
adc
push
in
or
xor
sbb
inc
aas
xor
outsl
orl
fldt
cmpsb
pop
xchg
sub
test
sbb
xchg
imul
xchg
insb
cli
insl
mov
jl
fildll
sbb
daa
outsl
sub
adc
inc
pop
push
adc
mov
fsubr
sbb
and
mov
xorl
loop
and
enter
xchg
loopne
cmpsl
fwait
pop
into
push
xlat
adc
imul
adc
ficomps
fucomp
or
mov
outsb
dec
and
leave
or
dec
je
xchg
and
into
ljmp
mov
mov
in
enter
lret
sub
jmp
xchg
jns
or
jl
and
jo
rcr
sbb
repz
push
mov
mov
jge
inc
fdivrs
push
subl
movsb
pop
sar
pop
out
in
rclb
sbb
push
sbb
xchg
sbb
aas
movsb
sub
xchg
mov
mov
imulb
out
das
test
pop
dec
fimull
mov
xchg
jg
cmpsl
ficoms
sub
scas
jb
sub
dec
sti
daa
or
fcoml
or
iret
test
jecxz
mov
sbb
push
xchg
push
std
aam
cmpb
je
imul
stc
adc
xchg
jecxz
fldt
adc
push
mov
movsl
pop
adc
mov
sub
xor
fdivrl
and
xchg
and
js
lea
add
pushf
hlt
mov
call
addl
push
pop
dec
stos
sbb
out
bound
leave
xchg
ss
mov
jle
dec
mov
jbe
mov
out
jno
repz
xchg
pop
imul
mov
mov
sub
pop
sbb
scas
push
flds
or
daa
mov
fsubr
bound
sti
inc
and
paddsb
adc
or
nop
dec
cs
jle
push
leave
das
insb
cltd
xchg
imul
out
sub
add
add
insl
mov
rep
or
scas
mov
insl
fs
lret
jns
sbb
shrb
dec
stos
sbb
in
mov
adc
push
test
jle
sbb
mov
jmp
jne
jl
mov
jnp
ror
and
loopne
fiaddl
cld
jbe
mov
clc
mov
mov
xchg
aam
test
add
cmpsl
icebp
push
dec
jnp
negb
sbb
imul
fstpt
inc
jmp
in
or
bound
pushf
add
jle
inc
lahf
xchg
mov
outsl
mov
pop
cmp
xchg
mov
cltd
xor
loope
mov
ds
adc
or
imul
cmpsb
fmuls
add
cltd
lcall
mov
inc
arpl
xchg
lods
sub
xor
pop
xlat
out
fwait
jmp
push
pop
cmp
cltd
jg
mov
out
mov
xor
int
inc
push
add
lock
sub
fcomi
es
movsl
sub
push
enter
stos
sbb
aaa
xorb
daa
or
arpl
lods
pusha
mov
aad
idivb
dec
jnp
push
fwait
clc
icebp
ja
mov
mov
sub
add
aad
cli
popf
or
sbb
out
into
fxam
aaa
ret
in
movsl
jne
and
dec
out
push
shr
fsubrs
clc
and
mov
push
dec
cmc
fadd
movsb
jmp
gs
adc
push
idivb
mov
or
xchg
mov
mov
inc
div
aaa
mov
pop
mov
leave
rorl
sbb
pop
sahf
adc
mov
add
lahf
xchg
sub
xchg
push
fdivr
push
push
push
lahf
hlt
sarl
xor
dec
out
pop
add
popf
sub
ret
mov
call
lret
sub
cmp
movsl
add
xor
jnp
lods
sbb
sub
adc
mov
out
cs
dec
cltd
xor
pop
aam
loope
sahf
sub
or
mov
cmp
mov
mov
loope
mov
mov
xchg
xor
pop
xor
push
mov
sbb
cs
out
xchg
push
mov
sbb
push
fsts
fidivs
jmp
pushf
in
mov
mov
imul
roll
out
ljmp
push
adc
xchg
je
aad
mov
mov
mov
gs
scas
mov
xchg
jns
xchg
aam
cmp
int
cmp
leave
hlt
pop
cmp
inc
jno
cmp
adcb
xchg
test
aad
pop
nop
mov
orb
adc
mov
mov
push
outsl
subl
int
rcll
xchg
stos
sub
xor
xorb
xchg
and
mov
jmp
ret
inc
fmull
imul
and
mov
jns
leave
adc
adc
lret
sub
mov
movsl
dec
dec
mov
shrb
add
andl
lgs
push
sbb
cmpsb
dec
xchg
stos
mov
adc
xor
shll
adc
jb
jmp
mov
mov
dec
mov
dec
pop
xlat
mov
jo
mov
aas
imul
sarl
or
inc
jno
clc
push
mov
fwait
xor
adc
loope
pop
jo
push
inc
ret
rclb
xchg
dec
in
dec
push
lahf
cmpsb
insb
insb
xchg
pop
sub
inc
mov
push
test
out
lock
adc
movl
add
push
push
imul
outsb
jp
addr16
jns
push
jb
aam
gs
jb
nop
add
pusha
gs
call
ss
fsts
cmp
pop
add
dec
div
sub
push
adc
dec
xchg
xor
sbb
mov
imul
les
ffree
outsb
jecxz
stc
xorb
dec
pusha
xchg
push
mov
in
xor
sub
mov
inc
mov
xchg
push
lret
pop
and
sub
arpl
test
stos
sub
out
lods
xor
inc
in
out
mov
rorl
cmp
stos
add
jnp
in
lret
mov
add
popf
push
jne
xor
mov
adcl
mov
and
loop
es
ljmp
adc
pop
jmp
pop
clc
cmp
inc
lock
loop
adc
pop
mov
jbe
lea
xor
push
stos
lea
test
stos
icebp
inc
cmovnp
movsl
sbb
dec
and
pop
adc
mov
inc
or
xchg
pop
mov
cs
loop
daa
sub
jmp
scas
cmpsb
inc
cld
mov
stc
xor
push
pop
lds
mov
and
cld
xor
test
add
inc
out
jo
jp
cmp
test
sahf
adc
fldenv
xor
pop
into
and
jb
out
or
test
rcl
jcxz
add
mov
mov
idivb
lahf
xchg
mov
jg
sub
xor
frstor
sbbb
mov
lcall
jge
mov
inc
in
or
out
in
xlat
push
clc
loop
inc
sub
leave
js
cmp
orb
jno
aam
add
push
mov
andb
sub
cltd
push
nop
xor
lret
popa
cli
dec
insl
adc
cmp
fwait
subb
lret
pop
mov
iret
scas
fdiv
sbb
and
jo
aad
icebp
sbb
cmp
pusha
xor
inc
or
xchg
scas
mov
push
mov
dec
push
fidivrl
push
mulb
cli
fs
insl
lea
or
dec
xor
rcrb
in
or
clc
or
xor
out
cltd
in
or
push
adc
mov
sahf
dec
int
mov
popa
imul
lods
pop
inc
lret
shl
push
dec
clc
scas
jmp
sbb
and
loope
or
leave
mov
aad
std
nop
jo
insl
sbb
adc
ja
xchg
stc
or
fimuls
mov
cmovno
and
lds
popf
dec
outsb
loopne
imul
gs
jmp
inc
stos
jns
cmpsl
add
aad
xchg
sub
jb
pop
push
push
mov
and
jne
into
rcr
rcll
loope
pop
xor
cmp
adc
or
jl
hlt
or
mov
daa
testl
mov
cmp
cmc
mov
or
popf
xchg
aaa
jns
out
pushf
insl
divl
adc
xor
fmull
mull
push
fwait
cmp
or
imul
mov
or
adc
mov
cmpl
lock
out
dec
jo
or
xchg
or
add
dec
jae
mov
std
and
or
push
cmpsl
xor
mov
cmp
cs
xchg
movsb
enter
pop
out
cmpsb
mov
int3
test
xchg
es
int3
shll
mov
aam
pop
adc
pop
das
and
mov
sti
loopne
shll
pop
icebp
inc
mov
cwtl
fs
loopne
inc
daa
jns
inc
fucomp
in
stos
movsb
pop
and
cs
scas
out
loop
xor
push
out
out
sub
outsb
pop
insl
fisubrl
mov
mov
cmp
jmp
in
adc
adc
add
cmpsb
lret
std
clc
push
mov
xor
jl
xor
cmp
cmp
mov
and
inc
lds
xchg
pushf
or
mov
ret
cmpsl
push
mov
sbb
lret
shrl
lret
orl
out
call
dec
sbb
xchg
scas
int3
xor
aaa
roll
je
sarl
or
or
and
repnz
scas
or
push
adc
mov
pop
sub
jbe
call
mov
popf
pop
insl
mov
or
icebp
jmp
outsb
pop
jg
or
jo
test
push
xchg
loopne
cltd
push
sbb
sub
pop
adc
ss
xor
sbb
sub
jl
arpl
subl
pop
shll
lret
jns
js
aad
jbe
scas
popf
in
xchg
sbb
push
cmp
hlt
mov
mov
je
dec
subl
lds
xlat
push
jg
push
das
mov
push
inc
enter
and
es
lea
aaa
in
aaa
insl
imull
cmp
xor
dec
mov
data16
stc
inc
sub
int
cmp
loope
bound
sbb
inc
adc
mov
push
outsl
xchg
xchg
xor
adcl
in
mov
xchg
xor
int
and
push
rcrl
lcall
cmp
mov
out
or
sub
xor
pushf
pop
jg
int3
mov
sbb
add
push
and
ror
call
clc
jae,pn
sub
xor
gs
repnz
gs
test
les
aaa
adc
adc
testb
dec
adc
push
int
jae
inc
in
jnp
leave
xchg
jnp
xchg
add
or
test
rcrb
or
outsb
push
das
xchg
ss
out
sbb
loopne
shrl
xchg
jmp
iret
jno
adc
iret
mov
bound
dec
fxch
or
loop
nop
jno
dec
add
mov
sub
js
out
sub
mov
fstpl
jns
repz
add
jo
sbbb
pop
lret
jmp
add
xchg
fmul
dec
mov
add
sub
fstpl
inc
ds
jne
mov
sbb
add
daa
inc
adc
jle
in
inc
ds
cld
xor
out
xchg
xor
ja
cld
popf
sub
jecxz
subl
inc
mov
pop
fwait
cmpsl
mov
jbe
sbb
aaa
rorb
and
je
mov
cmp
cmpl
xchg
mov
out
xchg
addl
jle
jecxz
popf
push
adc
shrl
and
pop
aam
sbb
add
ret
xor
fimuls
jge
out
cmp
scas
insb
xor
inc
ja
add
inc
cmpsl
mov
icebp
scas
ljmp
lahf
mov
lcall
mov
mov
lock
fcmovu
xor
cmpsb
mov
xchg
mov
mov
cmp
or
dec
sbb
clc
adc
js
das
push
int
cmpsb
jl
fldcw
test
adc
fwait
jns
je
add
adc
cmp
push
xlat
lea
shlb
es
das
call
repnz
std
sbb
jp
pop
jl
test
cwtl
cs
jg
mov
test
icebp
es
outsb
stc
add
lahf
cmp
mov
lahf
add
test
pop
inc
push
cwtl
dec
push
icebp
inc
scas
popl
insl
adc
push
bound
mov
das
enter
or
push
jo
dec
sub
test
loopne
xor
and
add
imul
scas
stc
adc
jg
sub
sub
jmp
scas
add
pop
cmp
stc
sub
testb
pop
dec
bound
push
inc
xchg
lret
jo
mov
mov
pop
shl
add
insl
pop
xchg
add
bound
out
cmp
sbb
xor
or
pop
mov
ss
lods
fcomps
mov
mov
sbb
or
jno
addr16
pop
xor
dec
loope
xchg
adc
push
xor
in
mov
mov
pop
into
push
sarl
in
ret
inc
jmp
push
push
iret
xor
xchg
mov
lcall
dec
ds
xchg
mov
stc
sub
or
in
enter
inc
and
push
mov
iret
sbb
les
rclb
cmpsl
push
pop
inc
popa
cmp
cmp
push
popf
fldl
in
dec
or
or
cmpsb
rolb
xor
adc
bound
fcompl
dec
xchg
es
js
call
mov
lds
cli
in
jae
mov
jo
scas
jmp
outsl
inc
add
cmc
mov
inc
test
mov
push
rorb
jne
cmp
in
pop
mov
push
push
and
or
clc
cwtl
lods
test
dec
cmp
dec
dec
dec
sahf
xor
push
pop
xor
jnp
adc
dec
in
mov
mov
cwtl
cli
in
xchg
or
sahf
and
icebp
and
jl
popf
jge
cmpsl
adc
cmpsb
and
push
xor
nop
daa
aam
xchg
push
out
xor
mov
out
xor
push
mov
xor
or
mov
stos
lea
out
mov
repnz
lea
push
fistps
sbb
aaa
dec
pop
popf
cmp
fs
xor
outsl
push
push
jae
xor
xchg
mov
mov
shlb
repz
xchg
dec
cmovae
and
inc
into
in
adc
ret
sub
pop
sub
inc
xchg
fwait
sub
test
lret
in
or
scas
sti
mov
mov
cmpsb
adc
push
ljmp
stos
jle
and
mov
pop
outsl
fcmovb
lcall
xchg
mov
push
xor
rolb
add
pushf
ds
and
out
jno
inc
mov
or
fs
sub
insl
out
jle
leave
sbb
mov
xor
aaa
outsl
divb
aad
test
hlt
ja
and
dec
cmpsb
xlat
push
mov
scas
mov
and
push
inc
cmp
lock
sbb
movsl
incb
xchg
mov
mov
inc
fs
stos
pop
add
movsb
mov
fdivp
jmp
inc
or
adc
add
xor
push
adc
outsl
mov
and
call
sub
mov
jl
daa
sti
pop
mov
fisubl
jge
cld
sbb
jle
ljmp
inc
push
xchg
or
xchg
daa
insl
int
push
jno
lods
push
inc
mov
pop
testl
or
idiv
cmpsl
pop
jnp
or
adc
test
cld
pop
push
js
inc
mov
mov
sar
sub
mov
rorl
loope
cs
jl
push
test
mov
mov
por
cltd
cmovb
push
push
mov
outsb
mov
fidivrl
jmp
cmp
shl
cmpsl
jle
daa
and
push
dec
jbe
aas
cmc
fsub
les
xor
repz
xchg
int
in
test
cmp
inc
into
insb
mov
fucomip
sub
pop
fldt
inc
bound
mov
mov
test
js
dec
fwait
cwtl
daa
cmp
mov
arpl
or
insb
pop
test
test
nop
add
pop
pop
lret
jnp
pop
inc
lds
fxch
fldl
mov
xchg
sbb
stos
add
cmp
mov
mov
testb
cmp
les
fisttpll
imul
xchg
push
adc
xchg
dec
xchg
out
in
add
push
pop
cmp
ja
imul
stos
jecxz
cltd
pop
ds
out
xchg
cmc
jmp
and
imul
xchg
xorl
rcrl
mov
mov
dec
dec
cmp
add
cmp
mov
aas
lods
jnp
dec
or
pop
sahf
ret
adc
pushf
push
add
xchg
jne
sub
cmpl
inc
jbe
xchg
cmp
cmpsb
jmp
inc
je
adc
outsb
cli
sti
adc
push
jno
sub
pop
pop
repnz
jno
pushf
pop
out
mov
jg
call
data16
xorl
fwait
xchg
lods
jp
movl
aaa
cmpsb
xchg
cld
dec
xchg
push
jg
mov
adc
aas
xorb
dec
insl
pop
scas
cwtl
pop
sub
clc
jnp
and
sbb
dec
sbb
sbb
mov
sbb
pop
sub
dec
aas
das
jne
shlb
ss
fidivs
or
out
sahf
adc
push
adc
xchg
into
sbb
iret
lds
cltd
ljmp
test
jecxz
ss
fs
cs
sbb
inc
xor
or
in
loopne
add
mov
ljmp
lods
xor
xor
subl
sar
pop
mov
mov
cmpsb
dec
lret
js
xchg
mov
in
pusha
xchg
cmp
lcall
add
sahf
adc
sub
clc
jno
inc
push
dec
int
aaa
adc
pop
and
mov
sub
xor
inc
imul
and
cmp
mov
iret
dec
sbb
xchg
xchg
push
cmp
popl
mov
loope
or
adc
jne
and
or
push
or
inc
dec
push
aas
or
and
jp
mov
dec
add
ja
push
mov
scas
pusha
rcl
push
push
push
shr
pop
fucomp
cmp
jae
xchg
stc
jbe
push
int
pushf
call
pop
inc
jecxz
fnstenv
je
adc
in
dec
lret
fmulp
or
lea
mov
lret
in
or
push
movsb
and
sub
mov
je
in
stos
negb
outsb
stos
fsubrp
adc
jns
ja
or
pop
ret
mov
mov
sub
repnz
in
dec
cwtl
scas
stos
inc
ficompl
mov
jge
sub
fnstenv
push
xor
dec
aam
push
jb
test
in
div
cmp
or
call
pop
push
xor
dec
or
notl
push
adc
ror
add
cld
mov
das
xchg
mov
movsb
jae
ja
push
js
adc
push
lret
repnz
scas
ja
add
rcr
pushf
xchg
call
mov
icebp
in
xor
sbb
xor
push
mov
ja
mov
imul
sbb
xor
lret
sub
adc
mov
dec
rorb
js
xor
pop
jmp
stos
into
pop
out
xchg
leave
call
xchg
or
mov
lea
arpl
mov
push
or
dec
rorl
out
das
es
jg
gs
je
pop
lret
mov
out
jp
xor
jo
cmp
xchg
xchg
pop
popa
push
sub
xchg
sub
test
lret
jg
das
dec
out
out
lods
sbb
push
dec
in
out
int3
cmc
sub
jge
mov
pushf
cmpsb
push
mov
push
pop
fs
sub
in
out
repz
sub
icebp
push
cmp
js
imul
jns
inc
test
test
jbe
cmpsl
jae
or
jmp
mov
fwait
loope
cltd
push
push
mov
out
or
lahf
dec
mov
dec
cmp
sub
jbe
push
dec
dec
mov
pusha
push
clc
xorl
add
xor
mov
std
cmp
pop
cli
push
xchg
mov
xchg
or
or
iret
pop
mov
sub
xchg
or
jmp
jmp
popf
es
int3
aam
mov
xchg
or
movsl
sub
mov
or
xchg
jl
and
xor
cltd
xor
divb
cli
push
pop
xchg
andb
int
call
in
sarl
dec
bound
cmpsb
cltd
ret
add
imul
ss
mov
push
xor
jne
dec
xchg
or
das
mov
in
sub
jae
sub
shrl
mov
xorl
inc
pop
arpl
dec
leave
scas
cltd
out
cmpsb
dec
push
lds
jne
xor
push
hlt
stos
or
dec
xchg
inc
ds
fs
es
test
or
loopne
mov
mov
movsb
imul
pop
mov
or
adc
es
cmp
xchg
sbb
xor
push
repnz
or
mov
cmc
lods
pusha
dec
jno
mov
fisubrl
xlat
push
mov
adc
fnstcw
insl
mov
leave
mov
ljmp
push
add
mov
sub
js
jmp
push
outsl
mov
adc
dec
pop
stos
aas
aam
lock
mov
dec
sbb
stos
ss
out
std
adc
mov
mov
adc
sub
dec
test
push
xchg
movsb
cli
and
sbb
adc
ja
adc
in
pop
mov
jl
dec
sbb
bound
mov
shlb
insb
lods
jne
bound
xchg
insl
add
pop
mov
call
test
and
lods
sub
dec
pop
lods
fcompl
lds
mov
cltd
xchg
loopne
leave
inc
jns
aaa
adc
mov
mov
xor
adc
mov
dec
cmp
das
dec
mov
js
out
iret
shlb
mov
mov
or
rcrb
or
pusha
xchg
inc
lcall
or
ss
mov
dec
push
lea
sub
xchg
mov
cmpsb
xor
insb
imul
adc
push
or
pop
cmp
mov
stos
cmpsb
loopew
aaa
pop
pop
shrl
cmp
xchg
dec
mov
and
sub
inc
jnp
bound
js
jbe
mov
scas
adc
sub
jnp
inc
sub
outsb
sub
xchg
and
xchg
bound
les
sahf
out
mov
dec
aad
add
pop
sbb
push
testl
mov
and
outsb
sub
cmpsl
or
mov
jecxz
dec
jo
out
xor
dec
jo
loop
cli
add
dec
fmulp
in
stos
jmp
dec
adc
xchg
std
rorb
xor
sbb
add
aas
adc
leave
jl
int
mov
js
jbe
dec
adc
aaa
nop
sub
stos
loop
sbb
pop
mov
sub
out
js
dec
mov
test
xor
and
test
das
stc
jp
in
int3
adc
mov
mov
or
and
call
xor
sbb
mov
lock
pop
pop
mov
pop
shrl
or
mov
std
test
mov
cmp
and
enter
cmc
iret
lods
and
mov
lods
pop
xor
push
aad
mov
mov
jmp
xor
es
or
jno
adc
sbb
loop
adc
xchg
mov
addr16
bound
shlb
adc
sbb
xchg
in
sbb
pop
das
insl
cmp
push
jns
shrb
enter
aad
add
pop
or
orl
movsb
scas
pminsw
inc
jg
and
jecxz
les
fucomp
fs
cmp
sbb
inc
jmp
inc
rcrb
inc
push
jnp
push
pop
add
stos
push
popa
clc
mov
dec
inc
fidivrs
mov
sahf
pop
adc
sbb
addb
movsl
push
sbb
cs
sbb
mov
and
push
cwtl
out
sbb
imul
xchg
cwtl
push
movsb
in
int
xor
add
push
xchg
xchg
nop
sbb
data16
das
or
xor
add
mov
adc
arpl
stc
mov
push
insl
xchg
outsl
lods
es
or
and
ljmp
out
sbb
mov
fimull
inc
sbb
add
lea
mov
inc
sub
fsub
dec
loop
xor
add
bound
adc
add
ret
loope
sbb
test
pushf
xchg
enter
sub
add
or
add
adc
data16
adc
mov
fwait
pop
pop
testb
xor
into
sub
xchg
aas
fisubs
pushf
mov
mov
arpl
jno
dec
push
jmp
insl
ret
bound
pop
xor
dec
xorb
into
jbe
mov
in
jno
cli
dec
cmpsl
movsb
push
dec
adc
pop
pop
shld
push
and
in
cmp
jg
js
movsl
pop
pop
inc
mov
mov
xchg
icebp
pop
xchg
push
nop
jns
filds
aas
fildl
clc
lcall
or
dec
ret
push
fwait
push
cmp
aas
inc
mov
push
out
add
and
sti
ds
int
cs
mov
in
sbb
or
ret
adc
out
xchg
push
pop
fisttpll
loop
orb
pop
mov
imull
mov
and
mov
cmp
sub
mov
cmp
mov
je
lea
jle
sub
or
or
dec
inc
popf
jge
adc
ss
jo
lahf
pop
mov
cmp
pop
into
mov
and
movsb
lea
je
insb
fnop
jne
pop
mov
or
pop
xchg
jp
ss
and
ljmp
ja
pop
clc
inc
push
lret
cmp
fsubl
adc
mov
inc
mov
pop
das
fsubs
xchg
incb
icebp
pop
imul
aaa
jae
into
adc
es
mov
jle
or
decl
mov
fnstsw
ja
jge
push
es
outsb
into
pusha
int
sar
mov
mov
mov
sub
mov
push
jno
pop
das
mov
sbb
bound
inc
scas
pop
add
or
test
std
jbe
xchg
pusha
out
or
push
adc
add
add
cmp
mov
ret
fiadds
pop
imul
xchg
inc
jg
adc
pop
mov
aas
stos
xchg
or
out
sub
pusha
out
movsl
jns
jns
push
jmp
push
or
inc
insl
add
aaa
jb
stos
ds
pop
lret
push
stos
pushf
sub
mov
jp
mov
cmp
sbb
scas
sbb
imul
push
mov
xchg
pushf
notl
int
inc
mov
pop
lret
test
outsl
xchg
cwtl
mov
sahf
push
call
lahf
push
ljmp
repnz
adc
mov
ficoms
xchg
dec
xchg
pop
jl
xor
rep
mov
clc
dec
out
sti
dec
or
adc
xchg
or
movsl
xor
ret
int3
ret
ficoml
imul
xor
push
sub
mov
sbb
in
sub
shl
dec
in
inc
push
scas
jb
in
mov
cmp
mov
insl
test
testl
test
jns
lret
clc
mov
std
xchg
jle
stos
sbb
testl
jle
out
int
cs
xchg
adc
or
scas
mov
cmc
adc
pop
fnstsw
and
jno
adc
xor
adc
ret
insb
mov
sbb
push
movl
sbb
jecxz
ds
outsl
lcall
cmc
roll
test
jmp
mov
pop
out
jmp
outsl
sbb
adc
cmp
fidivrl
lock
mov
repz
cmp
sbb
xor
adc
and
aaa
sbb
outsb
adc
movsb
push
das
pop
lock
add
push
enter
jecxz
xchg
jbe
xchg
loopne
icebp
mov
adcl
in
in
sub
aas
imul
rcr
push
nop
and
fidivrl
push
cmp
aad
cmc
push
xchg
xchg
jmp
loope
adc
xchg
out
pop
cwtl
jbe
repz
stc
lock
push
xchg
into
fiadds
mov
or
js
xchg
push
fnsave
out
and
and
int
int3
inc
push
and
dec
test
das
jge
insl
clc
add
jl
lea
mov
sbb
insl
mov
sahf
mov
add
vunpcklps
ss
sbb
push
mov
stc
mov
cld
lcall
jns
mov
mov
jns
pop
sub
lea
xor
in
iret
or
xchg
cmp
push
xchg
movsl
adcb
mov
inc
orl
stos
dec
cs
notl
aas
xor
xor
es
jnp
add
sub
push
lcall
adc
add
fildll
xor
enter
lock
addb
gs
into
or
add
insb
jns
cs
dec
orb
sub
lods
in
sub
in
xor
outsb
lea
push
ja
xchg
mov
xchg
shrl
or
lcall
jl
shr
or
mov
aad
nop
xchg
xorl
push
jno
in
sub
xchg
pop
push
shr
xchg
xchg
out
mov
sub
out
sti
negl
push
jne
jbe
cmp
lods
movsl
stos
test
icebp
pavgb
add
xor
shll
adc
rorb
cld
gs
xchg
or
icebp
push
jg
and
sub
pop
pop
js
xchg
scas
scas
enter
arpl
lahf
lea
insb
fstl
pop
and
mov
outsb
cwtl
jp
in
inc
insl
mov
in
fimuls
in
ds
in
push
add
jge
cs
pop
test
daa
cmp
xor
das
push
in
cmp
dec
pop
pop
loopne
out
mov
and
mov
frstor
pop
aad
or
cmp
enter
add
iret
xchg
mov
xchg
mov
std
sub
enter
mov
mov
sqrtps
and
call
repz
sub
and
addb
ret
xchg
insl
jo
int
mov
xchg
inc
xor
repz
jo
push
dec
stos
xorb
outsb
xchg
dec
push
cs
or
test
sbb
mov
ljmp
pusha
imul
pop
fidivrs
movsl
cli
adc
outsl
jo
in
adc
aad
das
jnp
xchg
mov
xchg
xchg
gs
jmp
rorb
dec
push
arpl
lock
lea
in
pop
mov
fbld
adc
out
mov
push
mov
add
nop
lods
xlat
mov
jmp
push
xor
mov
sti
andb
ret
mov
mov
cli
mov
fldenv
insl
orl
jp
xchg
cmpsl
cmp
pop
xor
das
sbbl
and
mov
push
mov
inc
push
inc
js
cmpsb
insb
test
mov
movsl
sub
mov
enter
inc
add
add
cmp
pop
mov
xchg
jmp
sub
mov
movb
lcall
or
jnp
aam
in
lret
test
cmp
in
subb
sub
cmpsl
mov
push
fidivs
mov
xor
pop
push
push
jae
iret
mov
insb
movsb
fsubrs
sub
xlat
mov
xor
movsl
mov
lods
out
stos
lret
dec
mov
in
dec
and
mov
in
cltd
jecxz
ds
sub
out
lods
mov
xlat
mov
dec
xchg
jno
jnp
adc
icebp
jno
scas
mov
popl
lds
mov
xchg
pop
std
pop
enter
out
sbb
lds
into
mov
inc
sub
adc
cli
dec
mov
loop
inc
aaa
outsl
xchg
mov
ja
mov
jne
pop
inc
adc
insl
xor
cmpsb
lret
ficoms
lcall
das
cmp
jle
insl
imul
clc
cld
nop
sar
daa
scas
xor
dec
pop
mov
fs
inc
and
lcall
dec
mov
adc
xchg
or
fcmovu
push
inc
popa
out
pop
jae
out
mov
sbb
inc
pop
inc
dec
hlt
in
gs
in
and
mov
movsb
jp
dec
out
pop
enter
dec
xor
or
in
sbb
push
movsl
movsw
std
fwait
cmp
xchg
sbb
popf
gs
pusha
ja
xor
sbb
cmp
add
adc
int3
mov
addl
sub
and
and
cmp
jns
xor
sbb
dec
and
div
sub
add
pop
cmp
cmpsb
adcb
aaa
outsl
or
xchg
pop
cltd
out
scas
pushf
data16
push
sahf
ja
xchg
cmc
or
lock
sub
in
cmp
mulb
sub
cmpsb
lods
xchg
ljmp
push
dec
sti
insl
incb
pop
in
xor
mov
or
shll
cmp
idivb
xor
jp
out
lcall
out
jb
pop
fs
out
dec
inc
gs
aad
mov
mov
mov
mov
xor
push
arpl
xchg
das
mov
push
stos
fnsetpm(287
xchg
cmpsl
maskmovq
divl
cmpsl
fsubrl
push
jecxz
lods
mov
xchg
sbb
sahf
pop
mov
mov
cld
jno
scas
out
scas
push
scas
xchg
repnz
jnp
mov
clc
mov
add
and
fcmovb
sbb
jbe
xchg
adc
aas
jmp
xor
dec
fs
jg
daa
cmp
fimull
out
mov
add
scas
mov
out
adc
inc
sti
or
sub
or
cmpsb
mov
out
sub
and
gs
sbb
mov
dec
ds
sti
add
and
incb
fsts
cmc
mov
add
and
cmp
add
mov
test
stos
outsl
mov
out
and
fnsave
and
arpl
push
mov
stos
cmp
shll
lret
mov
jl
in
add
mov
sbb
push
fistpll
leave
cmp
push
into
xorl
icebp
mov
shr
sbb
aad
xor
cmp
sub
sahf
sbb
pop
xchg
jp
xchg
pop
mov
lret
and
fwait
jp
sbb
adc
into
xchg
cwtl
scas
sub
jle
mov
sub
add
popf
jo
lret
pop
push
add
lea
pop
pop
push
pop
sub
adc
xchg
rorb
nop
dec
add
idivb
aam
push
fsts
jnp
jb
and
adc
dec
imulb
clc
es
fmull
fistps
inc
cmp
icebp
add
sbb
je
out
sub
cmpsb
mov
jne
push
adc
jl
sti
stc
adc
jmp
std
or
incb
lcall
aaa
ja
arpl
adc
xor
pop
dec
xchg
les
push
xor
cli
cmpsl
leave
jge,pt
push
sbb
xchg
stos
lret
and
cmpsl
cmpl
test
movsl
icebp
inc
bound
mov
das
daa
incb
fidivrs
out
nop
pop
add
dec
rorl
pop
loope
daa
adc
pop
cmpsb
sbb
xor
inc
repnz
adc
mov
mov
das
insl
sub
sub
movsl
push
dec
daa
lea
imul
icebp
or
sub
cwtl
cltd
cld
xchg
push
jne
test
repnz
repz
in
push
inc
insl
div
fmull
out
cltd
idivb
mov
mov
mov
dec
cmp
clc
sub
leave
ss
sbb
push
cli
adc
xor
int
dec
jo
testb
sahf
repnz
mov
jbe
insl
and
out
jp
and
push
bound
sub
sti
jns
sbbb
mov
or
dec
in
cmp
mov
shlb
scas
mov
mov
aaa
pop
jne
and
lcall
fstl
add
iret
fs
dec
jne
push
inc
mov
test
and
mov
fisubrl
outsl
sbbl
add
leave
cld
mov
scas
mov
inc
insl
mov
dec
das
mov
movsb
xchg
xchg
and
xor
pop
fisubs
clc
push
inc
jne
or
sbb
movsb
imulb
cmpsl
pop
inc
adc
lds
jo
jno
rcr
movsl
push
or
bound
dec
cmp
push
lea
bound
or
mov
test
mov
out
addl
mov
call
pop
rorb
sub
add
push
mov
inc
mov
push
xor
scas
pop
pop
les
cmp
lret
sub
inc
pop
pop
sahf
push
aas
enter
mov
nop
and
xor
fsubrs
sbb
repnz
out
jmp
push
je
aas
push
sbb
int
or
movb
orl
mov
push
jo
push
jecxz
sub
arpl
mov
loop
idiv
mov
test
loopne
push
insb
rcrl
aad
inc
push
jns
ficoml
cmpl
jmp
in
lcall
and
in
mov
pop
lods
mov
outsl
jae
sub
syscall
stc
popa
fdecstp
out
adcb
sub
stos
ret
mov
adc
mov
jo
in
nop
pop
and
enter
out
fidivrl
punpckhwd
push
enter
mov
bt
xchg
push
sahf
and
into
inc
inc
ja
jb
cwtl
cltd
sbb
vandps
imul
push
dec
push
push
and
es
fnstsw
popf
pushw
inc
loope
clc
pop
int
mov
scas
xchg
jno
sub
lret
jle
adc
daa
mov
cltd
or
insl
fistl
dec
xchg
mov
dec
or
cmp
adcl
jns
push
xchg
cwtl
xchg
rclb
sbbl
aaa
mov
popa
jmp
inc
imul
js
inc
pop
mov
mov
xchg
aad
and
out
loope
mov
inc
add
push
bound
fmull
mov
mov
aaa
in
jmp
xor
aas
sub
push
sub
or
or
xchg
push
imul
lcall
push
jo
addl
mov
push
in
addb
mov
jmp
out
push
orb
cmp
lcall
push
sti
lret
sub
sbb
loop
cmp
outsl
or
popf
stos
push
insl
adc
sub
xchg
out
adc
ds
fs
int3
and
inc
enter
xor
lods
dec
push
aad
stc
mov
rol
adc
mov
xchg
and
pop
lea
xlat
sbb
fimull
sti
jno
fsts
mov
mov
outsb
aad
cmp
sub
cmpsb
jge
mov
outsb
clc
cld
adc
and
lcall
loopne
loopne
divb
mov
ds
fisubrl
out
push
test
add
fwait
sub
ds
repnz
fidivrl
lahf
fndisi(8087
push
sub
jmp
sbb
xchg
add
mov
pop
add
inc
push
or
or
xchg
sbb
loope
xchg
fcoml
pusha
sbb
jge
mov
cwtl
sahf
inc
or
pop
int
mov
jns
push
stos
jmp
xor
pop
icebp
push
cli
out
jae
stos
or
enter
cld
sub
in
outsb
mov
pop
fwait
lret
repz
mov
inc
insl
sub
ficomps
cmc
xchg
mov
outsl
jl
or
in
call
movsb
pop
loope
and
jnp
push
mov
xchg
test
fs
push
popf
lods
insb
xchg
gs
and
dec
cld
or
mov
add
int3
xchg
subl
mov
movsl
test
aas
pop
adc
sbb
leave
setp
adc
outsb
cli
std
cmp
pop
inc
shrb
dec
int
mov
xchg
lds
addr16
dec
rorb
pop
dec
mov
outsl
packssdw
xlat
xor
push
mov
and
mov
shrb
repz
lea
mov
sub
inc
xchg
cmpsl
ret
or
jno
das
mov
loopne
and
clc
lret
daa
cwtl
xor
xor
dec
lret
nop
sub
call
ljmp
adc
pop
popa
or
movsb
xor
cmc
push
ljmp
ss
and
stc
push
jge
inc
adc
fisttpl
sahf
fadds
divb
xor
mov
sbb
xchg
cmpsb
sbb
mulb
mov
sahf
inc
or
mov
rcll
mov
movsl
mov
jne
clc
out
pop
ljmp
jb
int
push
mov
fwait
rclb
or
out
lahf
and
inc
cmc
mov
inc
stos
cwtl
test
or
dec
ror
or
cld
sbb
es
xchg
les
out
mov
arpl
and
add
mov
adc
and
in
scas
xchg
clc
sahf
adc
sub
mov
dec
inc
push
icebp
scas
dec
dec
test
xacquire
clc
imull
push
push
push
mov
inc
fsubp
push
mov
push
fsubrp
ja
pop
xchg
mov
mov
in
in
ds
push
mov
xor
xchg
jno
lods
cmc
in
xor
in
sub
push
mov
addr16
mov
in
testb
es
adc
pop
xor
or
lods
ret
xor
repnz
std
mov
jnp
sub
jae
push
push
jnp
stos
cmp
xchg
enter
pop
call
push
lret
dec
xchg
repz
cmp
sbb
pusha
out
xor
std
insl
pop
icebp
lcall
cmp
xchg
inc
inc
push
imul
mov
cwtl
in
in
push
cmp
or
cltd
dec
ljmp
outsb
loop
outsb
adc
aam
stos
gs
push
and
jge
pusha
imul
pop
inc
leave
lock
or
inc
add
lods
andb
leave
push
daa
stos
jge
sbb
adc
jp
insl
pop
outsb
out
dec
pop
jbe
cmp
push
js
mov
int3
stos
out
hlt
xor
push
push
mov
jo
mov
jb
cmp
jne
lahf
das
sbb
inc
int
scas
in
mov
lock
loop
movsl
add
lret
ficoms
leave
clc
sahf
sbb
mov
jge
hlt
xor
inc
ljmp
cmp
sbb
jns
cli
in
mov
mov
call
arpl
lock
ja
mov
popf
xchg
and
jb
xchg
dec
sbb
xchg
jge
pop
xchg
cltd
sbb
enter
rclb
cmp
jnp
cmpsl
adc
add
add
xor
das
push
mov
or
dec
jae
int3
shrb
jbe
or
lock
inc
jp
je
xor
into
sqrtps
bound
stc
stos
lahf
dec
int3
lods
out
lock
push
loop
mov
xor
clc
movsl
cwtl
xor
rcll
jb
inc
pop
daa
stc
jne
fmul
das
loop
cmp
push
push
outsb
addr16
orb
adc
out
add
repz
adc
xorl
adc
xchg
dec
arpl
inc
popf
mov
fidivrs
add
cmp
int3
dec
testl
jmp
pop
ljmp
inc
sbb
rcll
jae
rorb
ja
scas
bound
xor
mov
dec
mov
fstps
ljmp
out
mov
stos
add
ret
jne
cmp
and
xchg
mov
ret
gs
loopne
and
sub
jb
dec
dec
adc
push
into
or
mov
mov
mov
aaa
stc
shrb
sub
idivl
js
gs
stc
jae
lea
mov
js
xchg
lds
bound
mov
jl
or
xor
mov
add
popa
adc
xchg
pop
js
ja
pop
or
pop
or
xchg
add
insl
or
notb
bound
enter
out
inc
xor
sahf
sub
mov
jno
loop
jp
insl
mov
dec
fsub
or
pop
jge
jg
popa
sahf
adc
in
das
cmp
xchg
add
scas
fdivr
xlat
xchg
jmp
or
shrl
xor
cmp
stc
pop
cmp
cmp
je
inc
sarl
cs
scas
arpl
shrb
dec
cmp
cs
test
fwait
lds
test
fdivrs
sbb
fsubl
sub
adc
mov
push
divb
pop
loope
mov
mov
jae
lea
notb
adc
int3
or
lods
jbe
sbb
in
divl
mov
rorl
es
dec
pop
cmpsl
rolb
or
std
xchg
ss
lret
rcll
jae
xlat
stos
or
jecxz
int3
dec
sub
jmp
pop
xchg
xor
mov
adc
clc
inc
in
and
sbb
test
je
lock
test
sub
les
cmp
int3
addr16
stos
inc
fwait
in
shlb
add
push
sbb
lock
push
pop
mov
pop
lahf
pop
add
sub
je
push
mov
xorl
test
fucomi
xor
enter
je
cmpsl
lea
xor
sti
fists
ss
fiaddl
test
xchg
mov
sbb
and
jns
pop
rcrl
push
push
addb
rclb
xor
mov
pop
jbe
enter
xchg
call
popa
sbb
enter
add
sub
movsl
sbb
jp
or
int
sub
adc
out
sub
jbe
cmpsl
sub
jns
inc
repnz
lret
add
int3
negb
pop
stos
pop
out
xchg
mov
int3
mov
addb
ja
or
jo
dec
mov
sbb
mov
repz
fisttpll
add
cmp
mov
ja
cmp
fists
mov
into
xor
lahf
cmp
enter
or
pop
mov
push
jo
or
adc
mov
jno
push
mov
fs
jb
orl
jecxz
mov
jge
mov
out
fiaddl
into
dec
xor
xor
cmp
das
xchg
adc
sahf
and
mov
dec
into
mov
loope
mov
fs
bound
popa
push
insb
sbb
jmp
cs
test
push
mov
bound
aam
subb
add
rorl
jae
out
jbe
int3
leave
int3
cltd
pusha
dec
jmp
negl
jl
in
adc
cmpsb
inc
das
cmp
jne
cmp
or
and
aaa
inc
sub
push
popf
inc
fsub
stc
push
scas
ja
cli
jl
in
jb
xchg
push
mov
popa
std
popf
test
hlt
neg
iret
sahf
negl
fs
aaa
sbb
mov
cmc
rorl
push
jge
in
fadds
push
dec
scas
mov
sahf
fidivs
pop
out
dec
and
popf
imull
push
stc
lds
adc
out
xchg
push
xchg
daa
mov
dec
xor
imul
pop
daa
mull
push
cmp
push
jp
popf
push
scas
lds
ja
jns
push
sub
out
cltd
sbb
outsb
push
sub
imul
je
mov
dec
mov
sub
shrb
sbb
adc
push
bound
mov
sbb
xchg
sub
sbbl
ret
lcall
cltd
int3
mov
ror
scas
mov
push
subl
push
dec
mov
lcall
jno
ljmp
jp,pn
test
xchg
dec
dec
ret
push
mov
cwtl
or
xchg
or
mov
outsb
dec
aad
inc
stos
stos
enter
sub
cwtl
and
sub
in
in
sub
or
mov
daa
loope
push
test
stc
mov
jno
out
les
scas
sub
insb
sub
addr16
cmp
push
push
xor
mov
divb
cmpsl
xor
inc
lea
push
movsl
and
hlt
imul
dec
sti
ror
aam
shl
adc
xchg
or
inc
notb
mov
xor
testb
mov
cmpsl
stos
testb
or
xlat
jle
scas
xchg
pop
lea
dec
adcb
cmp
xchg
loop
lds
pop
fildll
push
fwait
cltd
jo
lods
push
in
test
mov
stc
xor
in
adc
pushf
je
pop
popf
push
icebp
cmp
leave
sbb
insl
roll
int3
sbb
push
daa
sub
sbb
es
div
ss
pop
jo
loopne,pn
dec
iret
bnd
xor
aam
cmp
lcall
or
notb
xchg
push
rclb
xchg
inc
mov
or
lock
push
and
xor
fiadds
dec
bnd
and
or
inc
lahf
xlat
mov
cwtl
or
pop
repz
sbb
movsb
push
ficomps
mov
shlb
push
add
mov
sub
sub
shr
mov
jg
xorl
dec
shr
xchg
pusha
push
or
dec
popa
popf
sub
mov
das
outsl
sub
into
inc
xchg
scas
sub
icebp
int3
enter
sti
push
inc
dec
stos
cmpsb
ror
ss
pop
jnp
pop
movsl
mov
in
pop
push
test
jne
out
pusha
popa
pop
stc
or
sub
rorl
pop
fildll
js
jne
adcb
fistpll
mov
jo
mov
and
add
sbbb
flds
aam
orb
pop
cmp
xor
fwait
leave
mov
xor
mov
mov
jns
mov
and
inc
jbe
mov
push
or
jl
xchg
jge
cmc
adc
in
arpl
xchg
loopne
pop
push
int3
jnp
or
cmp
add
jg
push
repnz
xor
ret
cmpsb
adc
pop
cmpsl
mov
cmp
and
sub
loopne
add
jmp
dec
adc
dec
sahf
sbb
imulb
dec
xor
icebp
sub
xor
lcall
bound
inc
int
mov
push
xor
and
cltd
inc
loopne
and
mov
xor
idivl
andb
ss
xor
ret
lods
lock
add
jo
dec
jno
idivl
fstl
ret
or
inc
or
xchg
dec
in
mov
lcall
mov
insb
lock
pop
or
cltd
push
mov
mov
or
addr16
push
add
leave
insl
pop
push
into
push
push
lods
scas
inc
push
mov
pop
push
pop
or
xchg
mov
sbb
fidivrs
js
stos
fcoml
lods
mov
xchg
clc
cmpsb
int
inc
inc
ret
inc
mov
xchg
and
push
aad
test
pop
dec
add
pop
cmp
out
cmp
hlt
xchg
cs
mov
test
cmp
jmp
cwtl
adc
jecxz
pop
lcall
dec
mov
xor
add
out
icebp
movsb
into
repz
inc
out
dec
xchg
jmp
jge
dec
push
push
jbe
lea
clc
jne
xor
xchg
push
sbb
stos
xchg
dec
pop
lds
mov
scas
adc
cs
pop
sub
cltd
in
divb
adc
sbb
divb
lds
mov
mov
in
lcall
jns
mov
dec
inc
fcmovbe
or
mov
inc
popf
pop
ret
xchg
mov
push
push
andl
imul
daa
sti
in
dec
dec
push
jle
aaa
leave
or
cmp
add
into
inc
sbb
push
jmp
outsl
std
xor
xor
jne
push
jnp
ljmp
das
pop
mov
add
enter
xor
add
xchg
ret
sbb
cmpsb
xor
xchg
icebp
mov
or
rcr
aam
loopne
mov
sar
mov
sti
mov
and
mov
orl
dec
loopne
jge
push
xchg
adc
adc
and
or
sub
or
cmc
mov
sbb
in
jl
in
leave
push
mov
shr
fiadds
xchg
mov
negl
ret
cmp
fstl
adc
jns
cmp
fcmove
ljmp
cmp
rorl
das
mov
push
es
addr16
imul
lods
test
dec
mov
hlt
fisubrl
jne
mov
addr16
mov
push
pop
andb
adc
jne
frstor
add
int
outsb
push
push
sub
push
or
cmpsb
sub
xchg
adc
mov
cmpsb
pop
dec
push
mov
popa
rcrl
jne
or
push
dec
arpl
clc
mov
xorl
and
jmp
add
das
push
sub
xor
cmpsl
sub
sbb
jno
xor
push
hlt
outsb
stc
inc
cs
out
push
xor
pop
pop
fwait
mov
fdivl
xchg
mov
mov
test
xchg
iret
fs
outsl
xchg
outsb
mov
int
addl
or
push
mov
mov
idivl
repnz
xor
pop
xor
mov
push
mov
movsl
push
int3
lea
mov
fs
cmpsl
pusha
ljmp
adc
aaa
or
out
daa
fyl2x
pop
push
or
or
std
test
mov
repz
lret
jmp
sbb
data16
cmpsb
stos
divb
or
sbb
sbb
addr16
jno
adc
mov
das
xchg
mov
dec
inc
imul
jbe
jns
jge
pop
sbb
addl
nop
rolb
xchg
fsubrs
dec
ret
cld
mov
sahf
inc
out
daa
cmc
ljmp
push
movsb
jmp
xorl
lds
mov
inc
outsb
lret
mov
gs
push
sbb
push
push
mov
lods
cmp
cwtl
in
mov
test
or
jo
das
mov
xchg
xor
mov
imul
stos
sbbl
outsb
insl
mov
xor
inc
inc
stos
inc
or
xchg
scas
pop
roll
scas
inc
jg
push
cmp
push
pop
sahf
mov
fld
aad
ds
push
xor
movb
push
sbb
push
and
mov
nop
adc
jbe
lds
push
jo
lea
sti
jg
jae
arpl
call
ror
sbb
sbb
movsl
push
movsl
cmpsl
mov
roll
push
xchg
push
outsb
insl
dec
xchg
movsb
ss
jecxz
mov
push
mov
jno
jnp
es
movsl
lods
pop
faddl
in
movsl
insl
test
popf
pop
mov
fidivs
jge
or
dec
sarl
enter
pop
or
std
sub
xchg
js
dec
xchg
and
outsl
int3
xchg
add
cpuid
in
inc
rolb
sbb
mov
push
push
aad
in
jae
or
mov
add
ljmp
xchg
sbbl
adc
add
or
lods
test
stos
sti
push
add
xchg
sub
sub
imul
js
xor
xor
pop
rcl
stc
shl
cld
enter
test
test
int3
push
imul
jb
enter
dec
cmp
ja
stc
mov
inc
cltd
ja
stos
insl
stc
shlb
cmp
and
jns
mov
mov
iret
ret
sub
xchg
lock
lds
pop
test
and
das
pusha
dec
sbb
iret
sub
mov
cmp
pop
out
lahf
outsb
mov
imul
fdivrp
cmp
dec
fadds
push
enter
jge
rolb
mov
dec
sar
sti
xor
out
mov
push
jmp
sbb
jno
enter
lret
or
xchg
imul
xor
sub
xchg
mov
aaa
push
add
dec
mov
jnp
mov
in
sti
insb
mov
or
cmpsl
nop
xchg
in
aaa
adc
rcr
mov
popa
jle
test
inc
nop
lea
and
cmp
and
pop
mov
push
popf
and
lret
mov
pop
or
int
movsl
lret
das
ss
jecxz
mov
aam
mov
dec
and
stos
inc
xor
mov
scas
lea
inc
mov
sub
xchg
push
or
and
std
arpl
xchg
test
push
mov
add
and
mov
lret
outsb
ss
xor
jne
sub
fnsave
or
aaa
in
cmp
xor
inc
or
sub
xchg
jl
xlat
sbb
xorb
pop
shll
in
pop
cmp
dec
arpl
prefetch
push
loop
aam
cmp
cmpsb
jb
lods
xor
shrb
cmp
inc
scas
iret
aad
in
orb
xchg
dec
imul
jmp
mov
ljmp
mov
int
sub
lds
outsb
inc
sub
in
daa
nop
cmp
and
pop
push
cmp
pop
xchg
push
add
sub
movsl
xchg
int3
mov
std
xor
jmp
out
gs
inc
push
pop
sub
movsb
push
mov
sub
mov
icebp
fistpl
daa
cmpb
test
clc
mov
arpl
sub
mov
or
adc
pushf
push
fdivr
ficompl
cmp
push
enter
popf
out
cmpsb
mov
jnp
pushf
leave
push
cs
cmp
addr16
dec
push
insl
in
sbb
sub
cmp
inc
mov
mov
adcb
push
cmp
xchg
cmp
xor
xchg
daa
inc
mov
clc
xchg
dec
mov
jmp
mov
sub
loop
addl
pop
les
fisubrs
in
add
mov
sarb
fmul
mov
xor
mov
jge
or
jle
loopne
sbb
fsub
pop
jno
mov
nop
loopne
movb
xlat
or
cmp
scas
scas
push
adc
mov
sbb
push
rorb
inc
cmp
gs
enter
fwait
mov
xchg
pop
outsb
or
inc
inc
mov
imul
stos
aaa
pusha
loop
mov
inc
push
mov
jnp
idivl
xchg
or
jno
mov
stos
push
stos
pushf
dec
xor
push
pop
leave
xchg
and
mov
insl
mov
lods
daa
sarl
xor
cmp
add
shlb
jbe
into
aad
leave
arpl
fisttpl
inc
cmovge
xor
xchg
sbbb
fstps
fisubs
add
jl
daa
pop
int3
data16
mov
add
pop
or
roll
clc
add
and
mov
push
js
sub
add
test
jl
popa
enter
or
add
leave
pop
push
out
inc
scas
inc
sub
stos
sahf
sbb
push
imul
jecxz
cmpsb
js
loope
mov
mov
push
testb
ret
cmp
inc
pop
subl
mov
cmp
jecxz
mov
inc
jns
sti
stc
adc
mov
mov
cld
mov
and
or
mov
sar
icebp
insl
popf
add
sub
addr16
jecxz
adc
aam
cmp
xor
adc
mov
dec
loopne
fiadds
push
jns
xchg
mov
movsb
pop
adc
mov
sbb
mov
sbb
test
mov
or
leave
mov
daa
movsl
mov
cmp
mov
ds
imul
pop
scas
dec
insl
dec
in
ds
sub
dec
mov
testb
dec
push
mov
scas
sti
aam
sub
lcall
test
and
es
stos
lock
iret
mov
mov
cmp
push
sti
inc
push
xchg
sub
lock
inc
xchg
mov
sub
test
or
xchg
in
push
pop
and
or
mov
in
push
dec
dec
loopne
int
xor
push
push
or
jmp
and
loopne
push
daa
ret
test
in
rcrl
jns
popa
pop
int
dec
cmpsl
mov
jbe
or
pop
jns
mov
mov
dec
into
pop
addr16
sub
scas
out
dec
out
cltd
into
add
and
push
aad
loope
mov
sbb
lds
outsb
pop
mov
adc
mov
cmp
in
or
in
fsts
popf
cmp
testb
into
xchg
pop
cmp
into
mov
inc
repz
idivl
push
jg
lahf
add
clc
xor
dec
test
push
xlat
scas
lahf
pop
mov
and
hlt
sub
fdivrs
pop
add
sub
clc
imulb
scas
lcall
and
aam
test
lahf
movsb
pusha
mov
inc
jno
cmp
in
push
add
loopne
into
xchg
lea
js
imul
sbb
jne
xor
dec
ret
cmp
fidivrl
lods
insl
push
aad
je
imul
adc
push
cmpsb
mov
cs
sub
jno
and
pop
adc
inc
inc
pop
aas
dec
into
jae
dec
sbb
mov
adc
mov
mov
outsb
cmp
sub
adc
jl
leave
mov
out
sahf
mov
pop
scas
sbb
push
push
dec
or
bound
iret
je
and
push
xchg
jns
adc
sbb
lcall
jmp
lcall
add
dec
ret
and
testb
fwait
int3
inc
or
clc
lahf
mov
shr
inc
loop
cmp
mov
inc
lret
stc
adcb
sbb
in
dec
nop
js
push
sbb
cmpb
loopne
adc
cmp
cmp
cli
clc
mov
pop
cmp
into
leave
stc
mov
pop
cmp
into
lods
stc
mov
pop
cmp
push
repnz
aad
pop
ljmp
test
mov
orl
ljmp
cltd
ficoms
loopne
and
cs
ja
adc
sub
inc
cs
loopne
out
lret
not
mov
cmp
aaa
lret
stc
scas
mull
and
mov
into
push
sbb
sbb
jbe
je
push
mov
sbb
push
cmp
cmp
negb
and
cmovne
cmp
cmp
add
sbb
and
je
sub
int
sub
xchg
mov
mov
fistl
cmp
cmp
movsl
push
cmpsl
mulb
push
cmp
mov
push
pop
jo
cmpb
popf
into
dec
mov
push
push
push
cmp
mov
cmpsl
fwait
sbb
ljmp
fsubrl
xchg
iret
ss
cmp
dec
jmp
sbb
or
ret
sti
outsb
lahf
mov
add
sub
pop
and
push
push
pop
insb
or
inc
out
es
mov
fcos
inc
pop
adc
in
lods
and
lock
clc
popf
mov
add
test
push
mov
aas
jmp
dec
hlt
cwtl
dec
cld
or
mov
push
les
dec
fdivrs
ret
cmp
rcll
jmp
mov
add
jg
lods
fmulp
or
stc
aad
ljmp
and
out
lea
xor
mov
ljmp
and
cli
jo
cmpl
mov
pmaxub
test
mov
push
sbb
jb
bound
pop
and
fistps
sahf
mov
inc
popa
aad
cld
mov
sbb
cwtl
je
lahf
xor
sub
jno
xchg
sbb
scas
fdivrl
xchg
popa
popa
aaa
jns
inc
adcb
jae
mov
mov
xchg
popl
cltd
sbb
cmpsb
cmp
sbb
mov
mov
pop
mov
scas
ss
mov
adc
dec
cmc
xor
push
addr16
cmp
xor
push
adc
inc
sub
pop
dec
dec
mov
adc
dec
mov
test
mov
add
add
fldcw
subb
les
mov
jnp
mov
add
dec
lcall
mov
ljmp
xchg
sbb
loopne
je
ss
hlt
aaa
sub
lock
in
scas
or
mov
mov
add
pop
jbe
cmp
xor
xor
insl
and
inc
stc
pop
lret
sbb
jecxz
adc
mov
fcoml
lcall
dec
test
lods
inc
stc
cmpsb
push
or
es
dec
mov
dec
out
ret
sub
outsb
ret
outsb
mov
into
icebp
jecxz
xchg
dec
in
movsb
inc
int
into
sub
lahf
ljmp
pop
mov
push
inc
xor
push
int3
cmp
push
sti
mov
pop
scas
xor
inc
add
or
out
push
jmp
sub
lcall
xor
adc
jb
inc
insl
jbe
nop
or
outsb
pop
xlat
ljmp
es
xchg
lahf
sbb
test
mov
aas
jmp
fdivrl
cld
fbstp
leave
bound
je
sbb
push
mov
adc
push
cmp
shl
pop
scas
jge
out
je
ljmp
stos
ds
mov
test
dec
and
fists
jne
or
jle
pop
ljmp
push
stc
and
ror
or
daa
call
inc
sub
sbb
pop
in
cmp
ffreep
pop
pusha
adc
loop
xchg
arpl
inc
es
jle
sbb
aad
mov
sub
pop
inc
leave
push
push
cld
or
add
pop
stos
mov
push
jle
mov
cmp
pop
xor
dec
mov
fcmovnb
push
lea
test
mov
cmc
out
dec
push
movsl
je
imul
mov
mov
mov
outsl
xor
add
push
sti
or
outsb
lea
add
cmp
push
in
icebp
jmp
inc
fs
scas
repz
inc
sarl
out
lds
dec
pop
jno
jl
out
insb
jecxz
push
movsl
mov
or
fsub
fsubs
icebp
push
cmc
dec
fwait
mov
jg
inc
inc
stos
lret
sbb
test
call
lahf
dec
adc
xor
out
pop
mov
arpl
and
cmpsl
push
ss
mov
push
inc
into
repz
mov
and
scas
sub
cmp
mov
arpl
lahf
sarl
cli
imul
insb
cmpsl
add
dec
into
loop
xchg
ds
xchg
mov
or
xor
jp
lcall
in
xor
fldt
cmpsl
insl
shlb
mov
cmp
or
xchg
xor
mov
fisttps
inc
xor
outsl
ds
ljmp
cmp
ss
or
push
test
push
cmpsb
movsl
add
mov
mov
in
lds
lret
out
xlat
popf
jns
mov
into
cli
dec
into
mov
xchg
sub
aad
jnp
call
push
cmp
cmp
sbbl
sbb
lret
sub
fildll
pushf
push
xchg
lds
mov
leave
shrl
mov
xchg
pop
mov
adc
sbb
jle
push
jmp
addb
sub
cmpsb
dec
xchg
test
xchg
stos
mov
sub
or
ja
pop
adc
jae
int3
xchg
or
in
jle
xchg
mov
mov
jae
xchg
add
popf
cmp
daa
leave
or
push
dec
sbb
mov
and
test
je
mov
or
stc
cltd
loope
dec
pop
mov
in
sub
nop
xlat
adc
xor
aas
add
add
popaw
sbb
add
xor
rcll
mov
addl
jnp
out
cltd
dec
test
mov
add
mov
mov
addl
dec
or
out
cmpsl
cmp
jo
and
cmpsl
inc
mov
int
loopne
jle
js
daa
aas
arpl
out
addl
imul
inc
add
iret
in
cmp
xor
stc
dec
dec
sub
and
data16
add
in
enter
push
cmp
bound
lods
cli
stos
or
jne
push
lock
sbb
jb
adc
sbb
shlb
leave
inc
insl
mov
xchg
push
out
popf
mov
test
jmp
xor
adc
in
adc
cmp
jmp
pop
imul
mov
cmp
js
adc
out
xchg
push
jno
or
pusha
sub
testl
ja
xchg
outsl
test
and
mov
loope
or
or
inc
scas
jle
sub
movsb
mov
xchg
pop
inc
out
fiaddl
in
jno
std
adc
test
mov
scas
adc
push
incl
add
lods
pop
cs
test
and
pop
xchg
add
cmp
fldt
xchg
hlt
or
cmp
movsl
add
outsb
jge
cmp
fs
xor
xlat
addr16
mov
leave
mov
ret
push
stc
push
inc
add
adc
mov
pop
outsl
out
clc
aas
mov
mov
mov
mov
ljmp
and
dec
daa
scas
roll
sti
and
aam
cmovne
fwait
xor
mulb
push
or
and
rcrl
pop
adc
shr
lods
les
insl
cmp
cmp
push
rorl
shrl
mov
in
movsb
mov
inc
sarb
sti
js
push
jnp
mov
add
pop
adc
shrl
sbb
cs
leave
out
pop
insl
cs
push
cmp
push
aaa
sbb
or
or
push
into
divb
orb
in
pop
pop
test
xor
push
mov
addb
add
adc
jmp
in
or
xor
sbb
int
and
leave
or
mov
ret
mov
fnstcw
fadd
rclb
or
pop
mov
sub
cs
pop
push
dec
rorl
addr16
lahf
jae
fcompl
sub
mov
sub
mov
sub
and
mov
cld
enter
loopne
adc
dec
adc
fwait
and
inc
cmp
lods
sbb
xchg
add
pop
sbb
sub
jns
sub
aam
mov
ljmp
or
inc
cs
inc
into
loope
das
mov
enter
ss
mov
cmpsl
insl
adc
iret
shlb
mov
lret
xchg
xor
popf
outsb
push
xchg
shlb
jb
lahf
lahf
iret
mov
push
icebp
bound
pop
mov
adc
sub
adc
push
or
or
nop
fdiv
pop
mov
dec
cs
aad
cmp
pop
push
loop
push
stos
sbb
imul
adc
mov
and
xlat
lea
add
js
dec
pop
fbld
pop
add
inc
xor
jge
ret
orb
xor
push
lret
iret
push
leave
add
sbb
fdivs
mov
add
pop
pushf
xchg
popf
call
loop
aam
or
stc
sbb
sbb
shll
lods
sarl
xchg
xchg
adc
sbb
std
inc
lret
and
int3
fstps
std
jne
and
xchg
mov
pop
mov
fucomip
cmp
out
jno
insb
out
xchg
es
sub
insl
mov
mov
pushf
popf
jns
add
jnp
dec
pushf
stc
inc
dec
pushf
into
mov
int
nop
or
lret
cmc
pop
rcrl
or
mov
or
inc
or
ss
ret
outsb
push
hlt
sbbl
pushf
push
cmpsb
adc
das
mov
nop
fidivl
inc
mov
xorl
orb
into
lds
sahf
out
ret
mov
or
xor
pop
dec
cmp
push
adc
mov
and
das
cli
pop
out
xchg
out
imul
push
daa
or
sub
dec
cmp
sbb
jmp
xor
xor
lahf
jmp
add
pop
dec
xor
call
jo
cltd
movsb
subb
pop
sub
lcall
pop
cmpsb
dec
xor
jae
fisubl
sbb
popa
xchg
push
shll
sbb
out
in
fcompl
mov
pop
xchg
test
push
call
sub
mov
mov
jns
xchg
xchg
xchg
mov
xchg
inc
fcompl
push
cmp
adc
jmp
sub
sub
or
ja
enter
stc
add
xchg
test
jns
imul
std
ljmp
adc
movsl
add
addr16
sbb
mov
repnz
in
ret
jge
ret
xchg
out
sti
xor
inc
out
pop
fisubs
pop
cli
rolb
data16
push
out
or
das
scas
imul
sti
xor
lea
in
js
push
dec
icebp
add
das
dec
xchg
fcomps
subb
mov
popa
scas
or
xor
xor
cwtl
adc
rorl
mov
xchg
call
into
aaa
push
xchg
adc
cli
sub
inc
adc
movsl
fistl
dec
push
aad
push
es
out
notl
ret
sub
cmp
stos
xchg
pop
jbe
jecxz
scas
sbb
movsb
xchg
cmp
jbe
xchg
out
pop
test
mov
pop
rorb
push
lret
mov
mov
xor
loope
mov
fcomp
push
js
mov
or
inc
pop
inc
add
out
ja
push
loope
ds
loope
js
lea
mov
mov
mov
nop
mov
and
cltd
aas
hlt
pop
xchg
inc
scas
xchg
repnz
push
or
mov
mov
and
add
movsl
dec
scas
pop
mov
sahf
jbe
xor
inc
lock
mov
jno
rcll
ljmp
inc
mulb
sbb
shl
push
xor
es
popf
cmpsl
or
push
int
mov
xchg
dec
iret
push
icebp
add
leave
adc
insl
pop
mov
pop
loope
js
leave
nop
imul
in
adc
outsb
sahf
pop
mov
mov
scas
jge
out
sub
test
testl
cmp
xchg
cltd
dec
xchg
sub
insl
imul
push
pusha
sub
dec
test
es
in
hlt
cmp
js
and
shrb
push
out
repnz
lahf
out
lret
push
sahf
lods
adc
inc
or
sar
lea
jge
jae
inc
sub
inc
es
pushf
ret
pop
push
xorb
into
push
lret
adc
cmp
je
pop
cmp
cld
les
test
dec
les
aas
stc
adc
loop
xchg
repnz
repnz
out
push
xchg
mov
cmp
inc
cmc
jge
push
xchg
sbb
dec
rorl
repnz
cmp
icebp
cwtl
jle
ja
or
mov
mov
mov
mov
cmp
mov
xchg
push
dec
cmp
jns
lcall
add
and
add
dec
mov
nop
stos
lods
and
in
ss
push
cli
jecxz
mov
adc
lcall
push
add
sahf
push
and
jb
test
sbb
ss
test
inc
xchg
jecxz
rorb
adc
outsb
cmp
inc
jmp
daa
xchg
xchg
adc
mov
adc
xchg
arpl
fistps
cwtl
adc
xchg
in
lret
pop
ljmp
test
scas
push
sub
jp
jo
mov
or
icebp
sub
inc
mov
push
mov
mov
imul
push
or
pusha
jle
and
or
sbb
push
xchg
add
shl
jno
movsb
jno
es
pop
push
stc
mov
in
lea
push
ljmp
cmp
dec
mov
xchg
dec
hlt
xor
ljmp
popf
test
inc
sub
daa
xor
fsubs
cmp
or
jno
out
adc
add
pop
push
ret
lock
mov
int3
and
cmp
repnz
and
mov
test
outsl
cmp
mov
mov
in
jae
push
out
mov
xor
dec
jl
loop
mov
adc
clc
jo
popf
or
mov
sbb
xor
jle
xchg
es
mov
xor
test
leave
pop
sub
mov
insl
int
lods
push
popf
sub
repz
pop
lock
notl
or
or
movsb
and
mov
push
pushf
ja
or
shll
or
dec
adc
mov
sub
pop
mov
jp
jbe
js
xchg
aas
ss
imul
adc
dec
xchg
nop
push
cwtl
push
lret
mov
push
lret
mov
xor
dec
bound
in
aam
mov
stc
lcall
inc
jg
xor
push
outsb
repnz
cs
jge
mov
int
sub
fstps
jo
int3
sub
sbb
dec
sub
inc
mov
push
idiv
push
xchg
pop
and
xchg
jl
ficoml
adc
dec
adc
decb
inc
lret
scas
dec
push
cmp
sbb
add
lcall
lret
mov
dec
aam
inc
xchg
push
jle
lods
test
mov
scas
xchg
insl
pop
or
pop
cmp
ss
int
sbb
mov
nop
and
test
das
inc
daa
push
or
jle
or
inc
or
enter
stos
xchg
adc
std
call
andb
ljmp
mov
mov
push
outsb
push
push
push
mov
mov
adcb
push
xor
adc
push
outsl
pop
add
and
xor
xchg
lds
stos
aaa
mov
adc
das
movsl
pop
cltd
xchg
sub
mov
ret
dec
ficomps
iret
inc
je
ss
push
mov
mov
fsts
pop
mov
test
xor
fisttpl
incb
xor
mov
test
repz
leave
int
or
mov
cmp
ds
leave
divl
scas
xchg
xchg
push
mov
inc
mov
jle
outsb
mov
mov
or
push
int3
push
mov
pop
jno
xor
enter
mov
cmp
jne
mov
ds
insb
es
sub
xchg
inc
aaa
adc
xor
jp
movsl
lea
jo
fidivl
movsl
push
idivl
pop
out
or
push
push
push
xchg
inc
inc
sub
enter
cmpsb
pop
ljmp
inc
push
inc
pop
cmp
adc
inc
lahf
lds
decl
fisubl
mulb
cltd
test
loopne
jle
fiadds
movsb
fadd
jp
fiaddl
sub
fsts
js
sbb
popa
push
dec
jge
adc
or
out
cmp
clc
ret
adc
out
inc
test
xchg
adc
mov
xchg
sarb
test
daa
ljmp
daa
and
movsb
adc
sub
gs
in
xor
std
xchg
sbb
and
les
or
jle
dec
sub
jb
xor
jns
xchg
rcll
lock
ss
decl
test
es
add
dec
loope
mov
in
mov
data16
leave
mov
scas
push
sbb
inc
je
fwait
push
xchg
adc
mov
inc
aad
mov
adc
out
dec
dec
dec
cmp
xchg
dec
repnz
inc
aaa
push
xlat
addl
and
adc
mov
adc
cs
pop
jns
xchg
aam
sbb
or
lods
cmpsb
adc
arpl
jns
ret
jge
xor
sub
repz
ljmp
arpl
mov
jbe
fwait
cmc
into
mov
add
mov
mov
add
mov
inc
repnz
push
sbb
subl
sub
adc
or
out
cmpb
cld
insl
pop
das
cmp
sub
xchg
jae
cmp
pop
mov
rcrb
sti
pop
rcl
mov
pop
inc
std
cltd
cmp
lods
push
inc
cs
dec
lods
aad
gs
push
jo
pop
ss
jns
divl
sbb
pusha
int3
loop
xchg
push
mov
pop
pop
and
cmc
cli
out
lret
jb
push
xor
popa
push
orl
xchg
outsb
jnp
mov
mov
clc
movsl
ret
gs
xor
inc
mov
adc
outsb
dec
loope
insl
xchg
fcmove
xchg
cmp
push
stc
push
mov
insl
cmp
adc
fiadds
xor
test
ss
test
sub
jp
add
push
adcl
sbb
aaa
dec
imul
mov
push
and
ss
cmpsl
fidivrl
punpckhwd
dec
lret
push
sub
mov
push
fisttps
dec
hlt
inc
mov
push
fdivs
mov
lods
addr16
push
insl
mov
cs
push
inc
in
inc
mov
mov
into
pop
mov
xor
enter
shlb
push
push
outsb
pop
jns
sbb
test
loop
dec
daa
mov
adc
jo
movsb
xchg
loope
loope
lods
xor
mov
scas
jns
fimuls
cmpsl
repz
orl
sbb
cmp
vcvttps2dq
inc
dec
outsl
inc
dec
xchg
lock
dec
push
fisubs
cmc
inc
or
lcall
xchg
pop
jmp
xchg
jle
xchg
jl
jb
mov
rcr
hlt
inc
pop
movsb
cwtl
add
into
les
cmpb
jl
insl
dec
mov
lock
xchg
push
aam
es
test
adc
iret
cmp
orl
mov
test
push
insl
or
imul
sti
insl
stos
aas
xchg
or
pop
roll
or
push
dec
pop
push
jmp
and
ret
push
repz
xchg
mov
lock
fs
add
lods
enter
cmp
inc
mov
lds
nop
js
adc
jnp
and
pop
push
movsb
sub
in
and
inc
mov
pop
aam
pop
and
jno
xor
ret
loope
mov
add
insl
shrb
repz
scas
xor
loop
dec
jo
inc
ljmp
into
jp
jb
and
rorl
mov
mov
fwait
push
shrl
fwait
in
inc
sub
adc
dec
pop
clc
ja
push
test
or
dec
int3
lds
add
and
inc
repnz
xor
pop
into
push
add
cmpsl
lds
adc
std
mov
ljmp
pop
gs
pop
push
out
push
int
cmpsb
cld
or
out
imul
in
jno
ljmp
sub
jmp
cwtl
jae
rorl
adc
cwtl
xor
adc
pop
sti
xchg
pop
xchg
fldt
pop
xor
adc
icebp
in
and
into
inc
daa
movsb
mov
ret
lcall
lcall
push
stos
or
pop
das
mov
dec
cs
xchg
cwtl
jp
jl
insb
es
xchg
neg
xor
xor
hlt
pop
jl
hlt
xor
and
sbb
push
mov
cwtl
jae
nop
pusha
loope
ret
fsubrl
mov
cli
sbb
dec
add
cld
inc
pop
pop
insb
shlb
cmp
xor
or
imul
popf
add
mov
int
out
std
push
adcb
inc
aas
int3
pop
inc
inc
dec
add
xor
loop
jmp
pop
lahf
jmp
xchg
cmp
inc
sub
loope
imul
imul
and
jp
jo
xchg
pusha
fisttps
xchg
popl
sahf
mov
ds
inc
inc
push
push
mov
or
pop
mov
sub
cmpsl
sub
push
lret
clc
push
mov
and
adc
mov
mov
adc
inc
mov
push
pop
sub
movsl
cmpsb
sti
test
fsubrs
jle
out
mov
pinsrw
nop
fimull
mov
xor
dec
dec
mov
pop
push
repz
inc
cs
pop
out
dec
dec
mov
lcall
push
stos
mov
sti
mov
ljmp
cmpsl
stos
fwait
addr16
les
movsw
or
jmp
call
inc
in
pop
or
and
lock
out
jbe
push
sti
mov
jge
push
das
into
ret
cltd
and
lret
sub
imul
pop
rdtsc
xchg
mov
xchg
stc
or
sbb
ds
xor
or
mov
mov
dec
push
inc
jecxz
loope
jno
jl
pushf
cmp
pop
call
sbb
pop
rcrb
loopne
cwtl
inc
loopne
ss
adc
push
adc
js
fisubs
xor
adc
jge
or
pushf
xlat
ja
dec
in
push
mov
andl
cmpsb
push
out
ljmp
sub
push
ja
mov
add
inc
int
cmp
mov
mov
adc
out
xchg
out
sbbb
loop
movsb
aas
mov
sbb
jmp
add
jl
ret
lcall
push
subl
ret
push
popf
je
insb
andb
mov
leave
sub
shrl
rolb
inc
xor
xchg
aad
mov
lods
stos
std
andb
pop
and
pop
push
aam
add
or
mov
or
loopne
ja
sub
insl
mov
mov
call
js
loop
loopne
fnsave
mov
fwait
or
loope
and
add
clc
xor
std
ja
jae
shrb
outsb
mov
inc
cmc
and
sbb
inc
jecxz
cmpb
loop
test
mov
inc
xchg
stos
jns
mov
mov
adc
xchg
orl
xlat
in
or
push
pop
lret
popa
std
or
ficoml
fucom
fs
stos
sub
mov
jecxz
add
aaa
dec
push
ret
imul
sub
inc
popf
lds
sbb
or
mov
movsl
notb
mov
push
scas
fcmovbe
shrb
cmp
mov
adc
pop
inc
cmp
mov
dec
sub
arpl
xchg
adc
and
lret
fstpt
lock
mov
lock
ljmp
xchg
push
inc
sbb
mov
ljmp
push
cmp
mov
adc
repnz
movsl
out
aaa
insl
inc
jmp
ja
xchg
movsl
jl
mov
cs
cmp
and
and
test
inc
mov
sti
jne
pop
sub
mov
or
dec
xchg
lret
aas
jp
sub
iret
lret
mov
xor
dec
icebp
push
push
inc
test
jae
pop
push
xor
jbe
or
inc
ja
inc
nop
out
into
ss
aad
popf
fdivrs
clc
int
jb
push
cmp
push
jmp
mov
xorl
arpl
dec
adc
or
or
int3
aas
jne
inc
std
dec
mov
or
jmp
scas
into
nop
in
cmp
loop
jle
sti
dec
xchg
push
loope
mov
push
jecxz
push
lods
adc
adc
dec
sub
dec
scas
or
repnz
ljmp
test
lock
movntq
out
adc
jb
repnz
sub
xchg
push
shrl
xchg
popf
mov
int
dec
mov
push
pop
xchg
jns
lock
mov
call
arpl
sbb
mov
aaa
or
mov
push
add
shrb
shll
mov
mov
stos
push
in
jmp
insl
add
movsb
dec
jecxz
cmp
fcoms
shl
xchg
xor
mov
loope
xor
inc
loop
mov
xor
incb
cld
xchg
out
notb
mov
pop
mov
dec
xor
mov
pop
inc
inc
mov
jmp
jmp
pop
cs
cmp
aam
ja
cli
mov
scas
xlat
std
cmp
cmp
push
repnz
in
jl
pop
xlat
pop
les
dec
jl
test
or
repz
xchg
adc
xchg
jg
sbb
arpl
mov
fmul
push
out
adc
and
bswap
adc
faddl
lock
repz
xor
clc
lcall
mov
out
jnp
int
sbb
jo
ror
or
in
pop
cmpsb
das
pop
rol
jl
lret
aaa
aas
dec
sub
or
lcall
ss
xchg
xor
ljmp
add
mov
in
fwait
leave
mov
popfw
ss
imul
cmpsb
sub
pop
les
push
outsl
lcall
rcrl
push
sahf
pop
popf
pop
pop
outsb
inc
js
mov
inc
pop
int
and
or
mov
jns
push
jl
out
push
sub
jl
mov
sub
mov
into
jge
lret
outsl
mov
sbb
jmp
xchg
insl
push
push
inc
push
pusha
nop
push
outsl
loop
ud2
lods
mov
loopne
lds
scas
lahf
mov
cmpsl
cmc
adc
adc
in
pop
imul
push
inc
push
stc
sub
ljmp
cwtl
and
pop
inc
and
andl
cmp
push
sbb
mov
iret
jp
cli
movb
je
lock
aas
push
jne
flds
mov
inc
mov
aad
loope
add
mov
sar
lcall
sbb
out
and
mov
dec
cltd
mov
mov
mov
xor
in
cmp
divl
cwtl
popa
mov
pop
into
cld
sub
ret
jno
stc
out
and
arpl
and
adc
and
lret
lds
das
outsb
mov
xchg
js
jae
xor
lcall
jae
std
mov
push
xchg
cs
mov
adc
and
xlat
sbbb
into
jb
jne
add
dec
rorl
int
scas
dec
or
mov
sub
daa
dec
rcl
cmpsb
push
addb
sbb
adc
jns
mov
rcl
pop
fs
fdivr
cmp
adc
lcall
mov
shlb
adc
outsl
insb
xchg
inc
push
inc
pushf
ret
inc
icebp
lahf
fsubp
stos
into
pop
cld
adcl
dec
sub
shrb
sub
fildll
and
and
mov
leave
xchg
mov
neg
neg
bound
lret
pop
outsb
jl
insl
mov
fwait
sti
cmp
pop
stos
xchg
int
cmpsl
int3
jno
int
xor
xor
inc
lods
adc
lcall
add
fbstp
inc
inc
jmp
es
sbb
push
jne
jp
repz
aam
sbb
ja
mov
cmp
in
push
adc
xor
xchg
data16
add
stc
cs
sub
enter
cli
aaa
bound
pop
cmp
xchg
arpl
or
movb
xchg
xchg
lods
sub
loope
mov
push
pop
arpl
shll
or
cmc
test
mov
ret
loope
and
push
and
lcall
and
shlb
shrl
shl
jne
fldenv
adc
int
mov
sbb
roll
inc
in
or
jg
mov
pop
dec
stos
das
cmp
icebp
imul
fiaddl
pop
icebp
cld
fs
sub
sarl
and
adc
sub
int
lret
imul
dec
mov
popa
push
adc
insl
jbe
push
insl
cmp
jle
sbb
adc
scas
xor
mov
sbb
rcl
jne
mov
popa
movsb
sbb
out
mov
out
cld
or
add
mov
ja
pop
inc
out
jmp
dec
and
xor
movsl
rclb
test
shll
adc
dec
pop
fwait
and
pop
mov
fistpl
inc
xchg
enter
xor
nop
adc
cld
push
mov
mov
xchg
mov
stos
xchg
pop
or
sub
outsb
adc
push
mov
add
cmpsb
inc
or
or
mov
outsl
stos
aad
lods
xorl
dec
aad
aas
imul
inc
aaa
xchg
sbb
and
lea
stos
sti
inc
push
cli
xchg
fists
jg
lea
enter
je
shlb
icebp
mov
xchg
jl
jge
loop
and
xchg
test
fisttpll
lret
das
xchg
cli
shlb
movsb
pop
mov
jmp
call
mov
cmp
cmc
fs
scas
rcrb
int3
cs
jns
loope
mov
push
push
in
inc
push
jmp
mov
xor
insl
imul
inc
push
mov
mov
mov
loopne
or
loopne
in
or
cmpsl
out
into
push
repnz
je
ljmp
std
pushf
mov
movsb
and
mov
js
testb
and
clc
shlb
pushf
cmp
or
mov
pop
movsb
xor
dec
xchg
pop
sub
inc
mov
insl
mov
cmp
xchg
push
aas
cmp
cwtl
jo
adc
in
mov
mov
mov
les
std
and
pop
sub
inc
cli
jo
jge
inc
sub
cmpsl
sbb
pop
xchg
icebp
add
dec
jno
cmpsl
idivb
push
sub
ret
cs
rorl
mov
cmpb
repnz
pop
adc
stos
mov
mov
jecxz
mov
or
xorl
dec
fcmove
iret
lock
and
pop
fs
aad
sbb
jae
ds
adc
out
xchg
add
mov
inc
xchg
js
jle
mov
js
movsl
mov
sub
insb
push
lret
xchg
cltd
roll
stc
inc
cmp
mov
push
or
cmp
pushf
pop
inc
lock
fucomp
push
fcomip
mov
into
das
rolb
call
inc
xchg
mov
jno
out
add
repnz
adc
fimull
adcl
ljmp
hlt
pop
imul
fs
or
xchg
in
pop
ja
sub
std
mov
bound
sbb
cmp
mov
gs
call
outsl
je
mov
imull
pop
cmpsb
mov
divl
subb
add
push
icebp
fbstp
adc
hlt
mov
mov
in
mov
push
imul
rorl
call
stc
mov
loopne
jg
push
cwtl
sbb
es
fistps
lcall
push
scas
inc
xchg
in
xchg
and
pop
xchg
add
mov
push
sub
pop
xor
in
xchg
jmp
dec
pop
mov
out
ja
stos
cmc
call
ja
es
fsubrs
aad
fs
sub
sub
test
or
shll
stos
movsb
ds
sti
mov
cmc
push
adc
sbb
sbb
push
repnz
das
jle
jg
movsb
insl
fwait
outsb
dec
mov
sub
pop
or
add
xor
pop
pop
popf
pusha
bound
jp
xorl
jge
cmpsb
das
cmp
test
xor
mov
fistpll
shl
sub
jns
lret
int3
ficoms
les
adc
das
jnp
repnz
ss
les
filds
into
or
and
mov
mov
inc
cmpl
or
es
xchg
stos
sti
jle
in
sub
cltd
aaa
inc
jo
pop
pop
dec
cltd
jbe
loop
mov
pop
aas
push
sbb
inc
cmp
insl
pop
cs
aam
ljmp
imul
enter
adc
jle
mov
dec
jno
in
xchg
call
pop
jae
sub
jmp
sahf
pop
fwait
lahf
syscall
mov
scas
xchg
insl
enter
pop
push
test
jbe
mov
je
ss
movsl
dec
mov
lcall
pop
bound
sbb
mov
adc
sub
ss
cltd
fdivrs
push
adc
in
xchg
cli
sar
inc
jb
mov
insl
insb
mov
popf
sub
jle
frstor
mov
xchg
xchg
lret
sahf
arpl
andl
test
push
in
scas
xor
push
push
xor
outsl
test
mov
adc
xor
add
cltd
lods
sbb
or
lds
xor
sub
push
ds
daa
sarl
shll
repnz
cwtl
pop
icebp
push
cli
imul
ror
inc
mov
cs
or
out
stc
psrlw
dec
pop
test
cli
push
cltd
dec
and
sub
dec
popf
mov
adc
jg
xchg
das
lcall
jmp
push
rcr
jb
or
pop
mov
stc
adc
and
push
push
adc
adc
subl
dec
mov
outsl
mov
clc
and
jle
pop
push
out
mov
nop
lods
lcall
mov
push
ljmp
std
lds
shll
mov
xor
add
sti
fs
imul
xchg
lcall
pop
jg
sub
mov
arpl
xor
out
popa
push
aas
mov
mov
lcall
dec
hlt
scas
jecxz
leave
pop
jbe
xor
cmpsb
pushf
push
rorb
xor
inc
lea
add
adc
or
fidivrl
mov
xchg
mov
mov
ret
data16
dec
fwait
call
test
dec
inc
ss
xor
repz
mov
pop
cmp
outsb
fdivrp
icebp
push
pusha
test
inc
inc
push
cmp
imul
push
inc
incb
cld
into
cmpsb
int
mov
adc
push
cmp
cmp
inc
inc
mov
test
mov
mov
adc
test
pop
mov
push
leave
mov
std
sub
xor
or
hlt
insl
xchg
xchg
dec
cwtl
or
and
and
dec
test
sti
arpl
adc
addb
clc
pop
or
cmpsb
xor
push
test
xchg
ds
aad
cmp
fucomp
mov
into
or
mov
and
inc
clc
or
mov
lea
mov
add
xchg
jne
sarb
in
mull
dec
xchg
xchg
pop
gs
mov
cmpsb
inc
mov
dec
bnd
sbb
pop
sbb
mov
imul
or
mov
mov
xor
add
mov
nop
insl
sub
fwait
push
add
or
push
subl
xchg
or
mov
sbb
cld
sub
es
jns
js
push
add
sub
lods
add
icebp
sub
mov
scas
clc
lret
dec
mov
rcrb
stos
pop
aas
sbb
xor
shlb
xor
xchg
fdivp
dec
test
sarl
adc
xor
cmpsl
movsb
jl
mov
cltd
fisttps
lret
stos
movsb
mov
repnz
js
mov
add
xchg
inc
rcl
lahf
fwait
mov
jae
clc
xorb
out
jae
aas
pop
lahf
lods
jmp
pop
lock
mov
cmp
movsb
cmp
out
add
xchg
popa
push
jo
sub
loop
nop
push
out
pop
sub
out
xor
pop
pop
call
int
push
ret
adc
cmp
int3
outsl
int
or
loope
clc
mov
call
adc
add
mov
loop
fidivrs
and
jge
in
ja
mov
out
stos
add
xchg
cld
sub
dec
decb
cmp
jne
xchg
gs
scas
xchg
add
movsb
inc
popa
dec
clc
push
mov
mov
daa
loop
add
cmpsl
mov
das
mov
jns
jmp
insl
lcall
jno
cld
out
xchg
out
jg
jmp
sbb
loop
jno
add
int3
stos
lcall
mov
cmp
dec
cmp
pop
js
aam
mov
push
rol
rclb
adc
xchg
push
mov
jbe
popa
jg,pt
mov
or
popa
or
in
push
loop
and
bound
xor
fdivs
dec
sub
xchg
sub
xor
aas
shl
in
pop
xor
roll
imul
xor
inc
xchg
jle
add
loopne
stos
sbb
das
insb
jmp
jb
dec
sbb
xchg
jmp
insb
push
jle
jno
mov
lahf
ljmp
pop
jg
dec
mov
loopne
lcall
scas
insb
je
pop
scas
cld
sub
adc
popl
test
pop
dec
dec
les
push
fldl
jbe
adc
call
adc
mov
jnp
das
push
mov
inc
clc
or
nop
repz
aaa
lds
je
scas
inc
xchg
sbb
jnp
sti
cltd
lret
jb
outsb
out
dec
cmpsb
jle
ret
xchg
add
xor
jnp
rorl
mov
icebp
into
xchg
roll
add
retw
pop
jecxz
lret
cmp
mov
stos
ret
out
lret
sti
arpl
mov
pop
add
out
push
rolb
push
push
sahf
adcl
enter
sbb
jb
iret
sbbb
mov
pop
or
stc
imul
or
mov
sub
sarl
mov
xchg
mov
sub
stos
outsb
fdivl
aas
std
loope
arpl
sub
ljmp
insb
mov
xchg
in
pushf
scas
add
push
lods
nop
iret
ret
repz
cmp
push
jno
push
pop
test
push
ss
imul
stc
adc
ret
xor
pop
push
mov
or
out
arpl
xchg
inc
and
sub
inc
in
inc
pop
pop
and
push
pusha
test
push
into
sub
fbstp
sbb
cld
aaa
stos
jmp
test
outsl
inc
xchg
mov
loope
adc
lret
adcb
ja
out
xchg
mov
adc
sub
jmp
mov
fdivs
sbb
dec
sbb
sub
addl
lcall
adc
shlb
sbb
cld
shrl
pop
or
out
inc
push
sbb
adc
pop
adcb
jbe
ss
addr16
out
icebp
inc
mov
inc
iret
addb
in
push
xchg
lahf
push
ficompl
scas
adc
test
test
dec
leave
int
pop
cltd
cld
add
add
push
int
sbb
push
jle
movsl
cli
mov
or
dec
stos
mov
push
dec
ljmp
xor
shlb
pop
add
popa
repnz
xchg
mov
cmp
or
mov
icebp
adc
out
dec
int
lock
pop
movsb
mov
adc
mov
mov
jb
xchg
pop
sbb
or
les
outsl
aas
lods
cmp
or
insl
jge,pn
roll
fdivl
xor
dec
jmp
xchg
aaa
inc
fldenv
pop
sub
jno
sbb
dec
jnp
loope
sub
aaa
roll
hlt
push
mov
or
xchg
dec
inc
pop
adc
adc
mov
dec
mov
stos
out
decl
dec
mov
mov
pop
jnp
lds
dec
test
jae
or
mov
jbe
and
rorb
loop
sarb
xchg
gs
lock
clc
int
inc
into
in
lahf
gs
shlb
dec
adc
lock
test
xchg
out
mov
cld
xor
push
pop
in
or
icebp
stc
out
xor
inc
mul
pop
dec
daa
inc
xchg
or
mov
adc
lcall
into
hlt
fisttpll
std
pop
xchg
std
xchg
mov
fs
dec
mov
bndstx
jmp
mov
jne
xchg
fisubrs
jmp
rorb
mov
dec
xor
inc
leave
test
sbb
out
mov
les
out
xchg
jbe
or
mov
pop
in
cwtl
mulb
es
ljmp
outsl
push
jmp
dec
jmp
jmp
adc
mov
loop
mov
ret
lods
ret
xor
dec
mov
xchg
mulb
cmovp
fistpll
mov
cli
cmp
dec
je
adc
xor
stos
pusha
fnstcw
xchg
hlt
movsl
rclb
cmp
ja
mov
or
insb
and
stos
enter
xorl
aaa
pop
into
in
push
inc
inc
in
cmc
cld
movsl
cld
lds
add
or
xor
jl
in
mov
faddl
jne
or
cmpsl
mov
icebp
in
hlt
jo
mov
popf
hlt
sti
dec
iret
inc
icebp
aaa
out
aas
icebp
aad
mov
sub
pop
scas
pop
sub
ret
pusha
push
pop
mov
into
sub
adcb
push
out
out
lods
sbb
add
stos
rcr
aam
xchg
test
push
rcrl
cmp
mov
jge
inc
mov
mov
lods
xchg
fsubrs
sahf
adc
pusha
dec
pop
or
push
mov
test
xor
aaa
pop
loope
mov
jl
xchg
jno
mov
sub
movl
ficoml
adc
mov
je
nop
aam
fimull
inc
mov
sub
xor
push
into
jno
fmuls
dec
xchg
je
aam
insb
xchg
pop
mov
aad
fistl
lds
mov
pop
int
cmp
outsl
inc
int
and
hlt
xor
mov
repz
xor
jo
in
test
add
sbb
pusha
call
testl
jo
xchg
push
sbb
pop
sbb
cmp
lea
sub
js
daa
jo
in
mov
dec
jmp
lret
je
mov
fstl
push
mov
gs
inc
xor
aas
fs
jns
ja
mov
pop
and
jns
divb
pop
pop
mov
dec
aad
aas
ja
testl
inc
add
ret
mov
push
or
dec
adc
mov
testb
aas
jmp
fcmovbe
ljmp
mov
xchg
dec
dec
add
push
data16
js
shl
test
das
sbb
insl
dec
sub
shrb
xor
pop
cmpsl
lea
lret
jp
fwait
mov
scas
push
pop
or
lds
jp
or
das
inc
and
test
insl
aad
stos
in
or
rolb
xlat
xor
ds
mov
mov
es
rcll
adc
popf
ljmp
push
insl
push
dec
bound
lret
inc
js
cmp
mov
arpl
inc
jmp
dec
daa
push
sub
push
stc
add
add
xor
pop
mov
movsb
jg
scas
mov
adc
or
mov
les
and
xchg
inc
enter
add
test
push
bound
outsb
mov
mov
and
and
mov
add
lock
mov
sbb
or
sahf
mov
iret
adc
repz
cld
sbb
mov
or
aas
jne
push
sbb
push
cmpsb
add
sbb
inc
dec
subb
sbb
sub
sub
mov
sbbl
fucomp
mov
push
shlb
adc
sub
test
testl
mov
loop
iret
pop
sbb
orl
repnz
or
fcompl
pop
das
sub
hlt
repnz
dec
test
or
lcall
leave
mov
xor
fcomps
fidivrl
dec
outsl
xorl
arpl
test
sti
movsl
clc
cbtw
pushf
out
add
add
or
ds
pop
or
pushf
pop
jno
shll
es
cmp
xor
or
adc
xchg
xchg
push
repz
or
adc
shrl
pop
cld
or
push
jmp
clc
or
or
rcll
aaa
pop
test
fucomip
stc
outsl
aas
popa
dec
mov
inc
adc
adc
jo
push
movsb
shrl
loop
sbb
in
or
mov
dec
out
push
push
ss
inc
lock
orb
adc
xchg
or
imul
add
mov
int3
xor
nop
mov
outsb
adc
push
movsb
scas
fcmovnb
lds
pop
movb
aaa
mov
jno
cmp
ss
mov
stc
lcall
gs
mov
sbb
leave
fildl
aaa
leave
xor
int3
inc
jbe
in
in
aam
lcall
rolb
push
xchg
jne
pop
push
or
and
mov
sub
scas
fldt
fdivs
mov
and
inc
mov
pop
lock
clc
or
shll
lods
jmp
out
push
shrb
jae
xchg
cs
add
scas
pusha
push
icebp
jle
jecxz
xchg
popf
sbb
dec
into
cmp
pop
es
mov
adc
xchg
lret
add
shlb
sub
dec
das
scas
fldl
lea
cmp
insb
push
push
das
sbb
int3
int3
jno
push
jmp
dec
mov
mov
mov
add
arpl
mov
mov
das
or
mov
xchg
or
mov
call
inc
cmp
rcrb
xchg
in
je
xchg
xor
or
jnp
adc
adc
sub
adc
pop
mov
loope
popf
and
int
fnstsw
mov
add
aam
jo
jne
outsl
clc
aad
mov
jecxz
insb
ret
push
cmp
inc
into
or
pop
sub
cmc
pop
shl
cli
hlt
sti
mov
cmpsl
jae
pop
movsb
test
imul
imul
inc
cli
sbb
jne
aam
loopne
jo
daa
fdivl
xchg
xchg
xchg
push
mov
pusha
lock
sub
or
and
jecxz
mov
jl
pusha
test
inc
daa
lea
mov
mov
push
pop
xchg
int
fists
lret
ss
loope
inc
popf
ret
add
push
out
xchg
paddd
inc
inc
test
aaa
popa
jg
xchg
cwtl
add
cmp
cmpsb
inc
xchg
subl
mov
and
int
inc
xchg
or
push
push
mov
and
jge
sbb
lods
adc
cs
dec
daa
mov
adc
mov
inc
pop
cs
loopne
cmp
sub
dec
or
dec
push
xchg
push
loop
push
xchg
in
lret
push
in
jle
dec
test
stc
jl
push
test
lock
add
out
leave
mov
fisubrs
out
fildll
jno
ljmp
add
jle
add
fs
test
fldcw
stos
lock
or
or
mov
xor
sarl
lods
pop
pop
sti
stos
icebp
xor
adc
cmp
adc
mov
std
imul
das
ja
or
stos
pusha
push
mov
addr16
jnp
xlat
loopne
jns
add
call
mov
icebp
out
sub
xchg
mov
mov
arpl
pop
jnp
cli
xor
lods
andl
aad
pop
fbstp
icebp
stc
push
test
cs
arpl
jmp
push
push
testl
push
pop
jne
mov
das
sub
cmp
fst
or
lds
cli
packuswb
xchg
aas
mov
iret
cmp
scas
sbb
lock
pop
xor
into
subb
fs
pop
fcoms
aam
scas
add
orb
sub
rcrb
push
add
movsb
mov
and
xchg
out
add
dec
loop
mov
xchg
push
imul
jg
insb
cwtl
lods
jno
lds
sbb
dec
lods
sbb
loope
sub
cmp
push
pop
add
pop
push
or
mov
ss
adc
cmp
inc
adc
into
pop
insl
lods
cmp
scas
pop
test
push
mov
cmp
xchg
es
jbe
cmp
mov
mov
lea
fidivrs
addr16
pushf
cmp
sub
or
cmp
xor
ss
or
jg
scas
push
dec
rcl
mov
ret
arpl
xchg
pop
ljmp
repz
popf
mov
mov
mov
mov
fsubl
xor
lods
push
dec
aam
or
jp
mov
icebp
mov
ret
iret
or
int
rcrl
jl
pop
jae
inc
imul
insb
nop
jns
dec
sbb
fldcw
push
out
adc
push
scas
inc
pop
sbb
and
sub
clc
orl
arpl
dec
out
adc
mov
aas
and
jo
xor
and
jge
mov
mov
dec
lea
xchg
cmp
out
pop
inc
xchg
es
and
inc
inc
mov
pop
fcmove
loopne
jle
jbe
int3
stos
sbb
enter
enter
int3
sarl
mulb
sub
jl
pushf
mov
push
arpl
outsl
jne
or
sbb
insl
lahf
jnp
xor
leave
cli
lret
mov
scas
sub
das
mov
repz
xor
mov
fmuls
in
sahf
adc
inc
aam
lds
sbb
push
inc
mov
and
jo
sarl
pop
ss
hlt
je
inc
out
jl
mov
rcrl
imul
push
inc
push
inc
mov
mov
adc
ljmp
adc
sub
insl
stos
xchg
sbb
mov
nop
inc
cmp
pop
xor
test
pop
icebp
out
mov
popf
pop
mov
add
idivl
adc
xchg
testb
xor
dec
sub
xlat
xchg
adc
dec
dec
lock
fs
xchg
into
nop
sti
in
jp
and
into
in
push
xlat
push
xor
mov
popf
mov
xchg
dec
xor
mov
jl
testl
cld
notl
iret
test
sbb
insl
call
out
mov
aas
lods
fmull
ja
sahf
cwtl
fcompl
xor
ret
out
in
jecxz
test
jns
ss
push
mov
sub
xor
dec
jmp
xchg
or
lcall
notl
mov
daa
and
jge
ficompl
test
mov
push
mov
sub
cs
and
dec
imulb
pushf
cmp
mov
sti
mov
hlt
push
sub
mov
dec
lret
push
add
test
xor
cmpsl
cmpsl
inc
ljmp
sti
aad
jns
xor
push
pop
imul
inc
scas
lret
add
xor
jo
sub
dec
movsb
mov
inc
or
daa
sbb
mov
icebp
jmp
aam
adc
sub
mov
cmpsl
call
jmp
push
fsubl
sub
cmc
shlb
pop
ja
sbb
sbb
and
lcall
iret
mov
pushf
lods
mov
out
repz
and
and
pop
sub
lods
adc
mov
outsb
xchg
imul
xor
shll
mov
aas
pop
cs
nop
push
mov
cld
testb
scas
dec
mov
xchg
fisubrl
insl
push
xchg
jge
mov
xchg
test
add
xor
cmp
or
stos
adc
push
ds
push
pushf
lds
pop
adc
cmp
and
movsb
pop
ficompl
std
push
mov
xorl
mov
sub
cli
in
fildll
push
leave
xchg
sti
push
popf
out
dec
sbb
stos
mov
cmp
sarl
adc
push
mov
sarb
xor
rclb
sti
lret
jo
xor
fs
cld
icebp
int3
cltd
js
push
or
lods
dec
sub
daa
cs
push
inc
mov
scas
fisubs
stos
or
lret
push
sub
xchg
stos
aad
es
sbb
push
daa
mov
jns
xchg
addr16
jb
pop
cmp
lret
inc
xor
adc
or
push
shrl
pop
pushf
jae
push
scas
enter
aaa
pop
or
fadd
lock
xor
push
xchg
iret
mov
cltd
roll
dec
push
mov
xor
jae
mov
test
ret
push
iret
mov
data16
hlt
into
fnstcw
sbb
add
adc
jmp
sub
dec
mov
inc
clc
cmp
mulb
ret
xor
ret
sub
and
lret
and
rdtsc
sub
xor
xor
lahf
push
pop
inc
sahf
subl
lahf
lods
cmpsb
mull
daa
rol
loop
dec
leave
sub
sahf
jno
xchg
inc
mov
aas
or
mov
xor
push
rorb
sbb
js
jbe
sbb
and
mov
lret
lsl
iret
mov
cmp
stos
test
xchg
cs
mov
cs
xchg
lds
push
dec
test
fsubp
xor
ss
jge
ffreep
push
out
repz
arpl
test
push
daa
pop
scas
sbb
pop
int3
pushf
dec
push
pop
cs
and
push
push
popf
inc
adc
iret
xor
xchg
jnp
cwtl
add
add
adc
in
mov
adc
cld
cmp
lea
fcmovbe
xlat
scas
clc
leave
or
adc
subb
push
cmovbe
pushf
fistpl
add
adc
mov
clc
lret
popf
pop
scas
outsl
jp
es
out
aaa
mov
dec
mov
mov
xor
add
dec
sub
mov
cmpsb
jg
sub
jecxz
pop
cmp
pop
cmpsl
mov
test
mov
jmp
adc
icebp
outsb
movsl
imul
and
jns
xor
xchg
in
lea
mov
inc
adc
sbb
orl
lds
dec
fidivs
sbb
iret
test
sbb
or
fldcw
out
fdecstp
cs
nop
dec
loop
loopne
scas
mov
loop
in
add
cmp
stos
test
cmp
and
sbb
mov
sbb
add
fisttps
cmp
xor
std
pop
lret
imul
pop
in
pusha
jo
and
jo
scas
daa
lret
adc
cmpsl
adc
push
fstpl
outsb
test
sub
iret
sti
aaa
aam
dec
mov
jo
jge
inc
sub
ss
movsl
rol
mov
xchg
inc
dec
ljmp
rcrl
aam
repnz
or
fldt
test
sub
mov
dec
pop
push
cli
jmp
mov
fld
mov
add
sub
enter
pusha
ja
jl
mov
cwtl
add
lcall
inc
lds
xor
icebp
insl
mov
aaa
pushf
or
sub
int3
into
sahf
fbstp
sub
mov
jnp
orl
mov
cs
cli
mov
loope
ret
sub
hlt
adcl
add
cmp
push
lds
into
push
int
jae
insb
sub
mov
idivb
fldl
fnstenv
fists
mov
add
pop
fdivrs
cli
and
mov
mov
lock
in
sbb
pop
hlt
add
pop
psllw
jmp
aad
mov
outsb
adc
and
das
neg
jbe
sub
or
mov
xorb
cli
cmp
sbb
pop
pop
fwait
loop
es
orb
sbb
dec
jge
and
mov
out
lea
data16
sahf
pop
and
rcrb
cmp
xor
lret
stos
divb
sub
xchg
inc
in
jne
in
mov
ljmp
dec
lods
sbb
lret
aaa
and
sbb
clc
xchg
sub
mov
adc
or
adc
das
push
insl
cmpl
mov
pop
sub
or
in
push
cld
ja
push
rorl
dec
and
imul
stos
cmp
xchg
enter
cmpsb
xchg
mov
lods
ffree
iret
xor
sbb
cmpsb
mov
dec
sbb
mov
inc
lea
lret
mov
push
cli
fiaddl
push
mov
scas
out
xchg
sbb
inc
call
and
aaa
loope
dec
fstl
jp
shrb
cwtl
push
outsb
out
lahf
push
and
pushf
mov
scas
dec
mov
clc
faddl
daa
es
jg
aad
push
or
shl
jg
mov
pop
int
push
xor
call
or
sub
pushf
test
icebp
add
addr16
jle
fs
add
aas
les
cld
adc
push
inc
push
jl
dec
dec
push
das
add
push
movl
dec
sub
push
cmp
into
pop
xlat
sbb
push
out
out
ret
mov
xor
cld
out
pusha
push
push
in
mov
fisubrl
imul
pop
xor
clc
mov
jno
or
inc
jmp
xorl
js
in
xchg
xor
push
xchg
das
mov
or
inc
outsb
xchg
movlps
sub
jmp
pop
ficomps
adc
mov
push
pushf
shlb
adc
clc
movsl
test
test
into
xor
movsb
inc
cs
xchg
call
inc
leave
mov
js
daa
out
test
add
add
cwtl
mov
jo
iret
dec
lea
ja
jecxz
icebp
outsl
pop
mov
loop
push
push
test
adc
sub
sub
add
dec
cmp
aad
jb
jmp
push
mov
aaa
stos
adc
pop
jle
jmp
mov
insb
negb
insl
sub
fdivs
dec
popa
xchg
pop
xor
imul
nop
jnp
mov
pop
push
mov
dec
ror
mov
popf
lahf
sub
xchg
cltd
es
mov
lea
mov
xchg
mov
imul
adc
std
in
jp
or
popf
outsl
add
jbe
addl
aas
jne
jg
cmp
mov
push
sub
stc
xor
repnz
and
push
add
roll
push
xlat
arpl
fsubrl
adc
and
std
lret
add
inc
xchg
xor
add
sti
addr16
mov
xor
pop
cwtl
xor
jecxz
popf
or
inc
insl
lret
xor
pop
add
jb
rolb
inc
roll
mov
mov
push
mov
stos
xor
pusha
fisubrl
scas
mov
imul
cmp
inc
sbb
mov
lcall
stos
xor
add
pop
test
push
push
mov
sbb
inc
stos
jo
push
addr16
lahf
xor
aam
test
ds
pop
inc
cmpsl
cwtl
mov
pop
daa
iret
xor
or
xchg
jno
inc
pop
inc
adc
mov
xor
sub
push
xchg
adc
pop
lods
inc
scas
mov
movsl
lret
or
sub
gs
fldcw
bound
jb
lcall
fcomps
out
push
out
fbstp
pushf
negb
or
lea
cwtl
pop
jae
out
push
sti
push
std
xchg
push
adc
inc
inc
aad
mov
ljmp
sahf
mov
mov
psubusw
jmp
pop
inc
cmpsl
or
jae
push
fmuls
out
push
cmp
sub
adc
mov
je
and
mulb
xor
or
lods
fisubrl
popf
inc
pop
iret
mov
outsb
push
mov
add
imul
roll
das
xor
mov
sbb
dec
int3
fstl
in
dec
out
setbe
sarb
pop
mov
das
sub
lock
push
lods
mov
mov
mov
lahf
sahf
fwait
mov
or
push
fiadds
or
push
xchg
lds
pop
cltd
push
cwtl
add
xchg
or
push
cli
sub
ljmpw
stc
mov
adc
mov
push
xor
daa
xor
call
imul
pop
es
lret
mov
dec
cmp
jp
push
push
xchg
dec
arpl
ljmp
stos
sub
adc
adc
pushf
push
add
mov
xchg
or
sub
sub
push
push
add
xor
mov
xor
inc
xchg
lret
flds
adc
sbb
arpl
idivb
out
mov
and
idivl
xchg
pop
not
lea
aam
and
cltd
popf
scas
sbb
inc
hlt
int
cmp
ja
mov
adc
xor
inc
push
les
cmp
adc
lds
sub
iret
notl
js
movsb
push
out
leave
mov
mov
imul
push
shrl
adc
adc
cmp
sbb
and
pop
fdecstp
mov
pop
xchg
inc
stc
mov
popf
xorl
adc
jge
push
and
and
jp
arpl
movsl
cmp
loope
mov
mov
adc
jne
sub
sahf
pop
push
rorb
push
jnp
pxor
and
fdivl
inc
repnz
loopne
loope
js
ja
mov
in
shll
lods
in
jo
repz
mov
pop
inc
jns
or
out
je
in
inc
scas
mov
repnz
sub
mov
inc
insl
sub
aad
inc
cmp
inc
mov
mov
adc
jbe
pop
sbb
ficoml
or
sbb
mov
push
das
jns
push
lahf
sbb
ficoms
or
scas
leave
insl
fs
xchg
enter
jbe
pushf
fwait
iret
xlat
or
push
mov
arpl
sbb
inc
fnsave
scas
popa
or
mov
jbe
icebp
xor
or
aad
adc
int3
stos
pop
insl
pop
xlat
or
mov
pop
cmp
xlat
mov
adc
and
fwait
cltd
push
cmp
or
jno
push
fimuls
sub
rcrl
ret
push
mov
lcall
xor
jnp
sbb
loope
movb
mov
sbb
fsubrl
outsb
mov
cmp
push
adcl
out
addr16
mov
mov
inc
inc
cmc
add
insl
push
fidivs
cmp
movsb
adc
in
adc
pop
add
jge
orl
iret
sub
or
cmp
push
pusha
loop
dec
sub
imul
lods
mov
movsl
push
in
mov
stos
add
adc
orl
sbbl
insl
ret
lret
xchg
stc
out
mov
jmp
jnp
je
outsl
iret
xor
xor
popf
mov
mov
jne
outsb
out
and
mov
stos
adc
lock
insl
jge
push
xor
mov
adc
rclb
jne
jle
stos
inc
sbb
or
sub
test
jge
mov
sub
repnz
xchg
mov
xchg
jns
push
xchg
std
out
out
xor
movsb
mov
orb
add
mov
jg
sbb
gs
inc
inc
inc
jg
add
cld
jbe
or
fisttpll
sahf
mov
push
mov
test
jb
add
aas
jno
aaa
or
in
cltd
push
inc
nop
fidivrl
sti
daa
in
je
xor
das
mov
stos
ljmp
add
jmp
jnp
inc
sbb
push
push
std
fidivs
jno
xor
inc
pusha
stos
mov
jg
adc
stos
cmp
icebp
fisttps
cltd
xchg
addps
push
clc
pop
scas
sbb
imul
divb
mov
push
mov
xor
out
mov
stos
add
jns
jmp
subl
leave
scas
pop
call
rcll
and
cld
in
imul
xor
or
mov
cmp
inc
ret
jnp
outsb
sub
inc
scas
or
popf
jp
push
dec
loope
out
mov
adc
insb
jl
ljmp
imulb
push
xchg
pop
mov
mov
dec
scas
es
js
cmp
inc
mov
dec
mov
test
in
enter
scas
scas
xor
addl
sub
lahf
adc
and
setg
out
dec
cmp
and
adc
jnp
inc
lods
pop
mov
sub
lock
cwtl
lcall
dec
aaa
lods
imull
inc
mov
push
ss
jmp
imul
push
jp
movsl
push
adc
pinsrw
xor
outsl
pop
loop
outsb
pop
pop
fisubrs
andb
test
sbbl
loopne
dec
sub
inc
js
jno
inc
test
loop
sti
imul
imul
dec
aas
sbb
mov
stc
fadd
sub
inc
mov
jle
add
inc
adc
adc
jmp
fdivl
es
int
not
cmp
pop
jno
push
fiadds
xor
mov
push
lods
jmp
sbbl
mov
lret
xor
pusha
mov
xor
pop
xchg
test
imul
arpl
int
and
xor
outsb
pop
push
pop
push
or
jmp
sub
sbb
je
ss
jecxz
aad
sbb
mov
es
add
adc
loop
pop
push
push
movsb
mov
push
inc
insl
jle
and
pop
cmp
fwait
inc
add
jo
popf
cwtl
xchg
out
out
mov
sub
push
mov
push
and
push
push
sub
lret
mov
mov
call
aas
test
xchg
cli
lcall
pop
imul
cmp
inc
jle
pop
cli
mov
xchg
sbb
imull
fstpl
ds
jb
rcrb
dec
adc
sbb
pop
lds
push
xor
pop
jbe
xor
adc
lods
or
ret
adc
roll
fucomp
jnp
les
and
cli
dec
xchg
or
xor
xchg
pop
lahf
sub
testl
dec
inc
mov
aaa
bound
scas
push
fsub
les
add
sbb
jno
vmread
inc
outsb
mov
imulb
adc
stos
out
movsl
xchg
test
xchg
push
subb
pop
aad
data16
cltd
xor
xor
mov
in
insl
or
imul
in
insl
cmp
js
std
add
cmp
rcrl
mov
sub
inc
in
aas
xchg
stc
lretw
push
mov
stos
stos
out
sbb
call
pop
packuswb
or
xor
aam
shll
imul
push
aas
push
ret
nop
outsb
pop
adc
pop
rcrl
sub
scas
jmp
outsb
je
xchg
jae
lret
push
iret
push
xchg
into
mov
pop
cmp
push
pop
stos
std
cmp
adc
add
sbb
aaa
xor
xor
cltd
fimuls
push
dec
adc
dec
sbb
fadds
outsl
in
lods
add
lcall
mov
movsl
lret
inc
clc
jb
pop
mov
cmp
push
arpl
lret
orb
cmpsl
loopne
cmp
sub
test
in
js
repnz
lcall
popw
clc
dec
xchg
adc
push
fidivrs
daa
inc
stc
sarl
dec
outsl
adc
jo
push
dec
push
icebp
or
adc
push
inc
cli
pop
ss
dec
mov
xlat
les
add
cmp
enter
test
push
movsb
outsl
fcmovb
and
cwtl
cmp
into
jnp
stos
test
test
pop
jne
mov
ljmp
sbbl
pop
and
jb
pop
in
and
in
das
add
xor
test
aam
pushf
mov
aaa
add
push
mov
or
sub
aam
xlat
dec
repnz
adc
shrl
xorb
nop
mov
lahf
sbb
lea
sbbl
mov
adc
sub
fstps
add
xor
test
stos
lods
repnz
rorb
mov
pop
jbe
ljmp
jmp
cs
dec
movzwl
push
loope
sbb
into
fdivs
xlat
adc
arpl
in
in
ret
cmp
shrb
sub
aas
neg
lea
je
scas
lea
rcll
mov
mov
js
rcll
add
jl
add
adc
dec
sti
movb
jl
or
sub
mov
out
aaa
or
cmpsb
sahf
cli
inc
out
cmpsl
adc
mov
in
cs
subb
js
xor
sub
enter
and
push
lret
mov
mov
loopne
enter
aad
mov
cmp
inc
scas
adc
sub
xlat
pop
jg
loopne
dec
sbb
nop
outsl
inc
rclb
aam
pop
cli
push
add
shrb
adc
jmp
cmp
sub
imul
fsqrt
ja
cmp
add
ljmp
sbb
push
mov
fsubrl
cmp
imul
and
lods
add
out
hlt
sbb
sbb
dec
fists
and
mov
imul
outsl
cmp
enter
popa
adc
lock
dec
jp
push
ret
loopne
jp
dec
xor
fisttps
pop
bound
sbb
lods
out
sub
mov
sub
jnp
jp
jge
sbb
adc
leave
ljmp
nop
pop
bound
mov
sbb
popf
mov
fdivrs
jae
arpl
dec
xor
and
bound
aas
mov
ja
xchg
push
mov
dec
enter
jecxz
mov
scas
stc
and
sbb
add
jb
adc
sbb
mov
ret
shrl
mov
bound
mov
les
out
jbe
inc
dec
lcall
mov
les
xorb
push
add
jbe
outsb
mov
insl
aas
fidivrs
mov
pushaw
push
jge
push
lret
data16
cmpsl
movsb
inc
sti
fistl
sbb
cmp
int3
mov
push
fisubrl
sub
andl
add
pusha
cmp
mov
stc
xor
pop
sar
and
xorb
mov
jmp
int
and
mov
dec
sbb
push
outsb
scas
pop
dec
cld
jl
stos
sbb
stos
movsb
icebp
sti
bound
sarl
push
enter
push
sub
push
xor
lret
lret
mov
lahf
push
je
xchg
inc
push
ret
mov
cld
sbb
cmpsb
js
dec
popf
cmpsb
jg
cmp
sbb
push
xor
dec
jno
sub
sbb
test
xor
sub
daa
adc
out
sbb
mov
jl
mov
and
aam
xlat
in
cwtl
jge
pop
pop
mov
cmpl
inc
inc
ds
xor
ss
ret
loop
nop
cld
lret
mov
scas
fmul
xchg
jmp
inc
xchg
sub
lods
cmc
and
bound
pushf
pop
fidivs
mov
cmp
cmp
mov
jb
lcall
cmp
cmpsl
pop
ss
cmp
sbb
lods
xor
cwtl
inc
cmp
xchg
pop
sbb
ja
sbb
cs
push
jnp
adc
sbb
xchg
imul
stos
dec
push
sub
fs
inc
ss
inc
outsb
imul
pop
cs
jge
stc
call
ja
xchg
push
repnz
cmc
mov
repz
pusha
mov
xchg
dec
out
sub
adc
popa
push
push
sbb
sub
insl
sub
ljmp
jge
aaa
push
into
mov
cmpsl
test
push
imul
popf
ljmp
adc
lahf
pop
dec
cs
aas
std
stc
sub
push
test
jmp
add
pop
push
movsl
mov
andl
inc
mov
add
mov
std
dec
mov
add
andl
or
or
int3
arpl
sub
cmp
lods
verw
movsb
pop
aaa
sbb
call
imul
cmp
sarl
stc
xlat
clc
cwtl
mov
pop
mov
jbe
pop
aad
and
mov
xor
stos
cmp
out
aas
and
lods
push
sbb
outsb
pop
and
and
test
mov
imul
and
jge
scas
mov
or
clc
jecxz
add
ret
mov
les
jno
add
sti
movsl
in
enter
test
mov
mov
cmp
je
jbe
sub
push
adc
sub
or
sub
or
push
push
pop
cs
push
lret
nop
shlb
mov
mov
stos
ret
repnz
js
add
and
inc
cmp
rcrb
push
std
inc
cli
mov
push
iret
dec
dec
das
iret
aad
lret
adc
repnz
lcall
inc
in
movsl
dec
data16
jg
push
xchg
mov
lahf
nop
mov
inc
pusha
cmc
subb
or
mov
pop
bound
xor
xor
or
mov
movsl
jns
stos
cli
daa
movsl
xchg
and
and
scas
gs
push
leave
ljmp
adc
ret
movsl
jns
into
gs
fs
cwtl
inc
pop
outsl
push
outsb
movsl
ret
adc
stos
movsb
scas
sub
pop
iret
sti
xchg
daa
dec
xchg
push
cltd
into
adc
add
xchg
test
xchg
in
mov
mov
pop
rolb
xchg
xchg
push
pop
out
addr16
jbe
popa
outsl
stos
sbb
aas
loope
mov
mov
adc
mov
testb
dec
xchg
dec
xchg
std
pop
mov
std
jb
mov
fs
push
out
pushw
out
push
inc
sbb
jecxz
iret
cmpsl
cltd
vfrczsd
shlb
push
std
xor
inc
call
sbb
or
inc
pop
lods
push
test
scas
cmpsb
cltd
stos
leave
add
push
lds
fnstsw
dec
dec
mov
xor
sub
subl
ffreep
outsl
mov
mov
or
jnp
pop
ljmp
jno
xchg
xor
inc
lds
mov
sarl
jecxz
lret
fisubrl
stos
test
mov
lock
imul
inc
sbb
in
clc
adc
repz
sub
push
aad
dec
xchg
scas
out
and
adc
mov
add
cmp
sbb
or
push
jnp
cld
out
add
pop
jecxz
mov
add
jg
sbb
lds
fildl
push
xor
xchg
in
cs
pop
daa
shll
xchg
push
mov
imull
arpl
pop
iret
sahf
xchg
sub
rcrb
jp
xchg
das
add
jmp
jno
enter
rorb
cmpsb
addr16
das
jbe
cmp
xlat
cmpl
nop
xchg
sbbl
movsb
mov
in
xchg
and
or
inc
xor
arpl
xchg
iret
mov
rclb
stos
call
or
jb
jne
lea
jo
js
xchg
push
loop
lret
push
jmp
fldt
cmp
lret
les
xchg
mov
lock
mov
mov
pop
push
les
imul
stos
aas
dec
aad
ret
sub
std
clc
lods
jge
push
and
jns
push
loope
bound
outsl
and
inc
and
jne
jge
jbe
sbb
imul
adc
adc
sbb
outsl
mov
ret
subl
loope
lods
subb
pop
xchg
jp
fcompl
mov
jnp
lea
sub
pop
mov
jle
lret
outsl
xchg
imul
jmp
mov
stc
arpl
mov
nop
sub
push
es
lcall
push
mov
movsb
nop
rclb
or
fsubrs
lea
mov
inc
addl
sbb
cmpl
pop
xor
popa
std
leave
lret
jno
or
pop
clc
lods
in
pop
cld
out
call
arpl
scas
lds
pusha
lods
xor
leave
jno
scas
xor
sub
xchg
push
shrb
mov
lcall
das
inc
lds
xor
imul
jnp
jmp
les
adc
inc
dec
push
ficompl
clc
cli
dec
mov
inc
xchg
jle
lea
xchg
or
leave
inc
movsb
xchg
mov
adc
lret
je
enter
push
or
mov
mov
ret
or
lock
and
pop
in
sub
dec
push
jg
inc
dec
outsb
in
xchg
dec
push
sub
cs
pop
test
jns
or
lods
xchg
int
outsl
adc
insl
and
pop
shlb
jp
dec
aad
mov
pop
out
outsl
dec
xchg
fbstp
rcl
xchg
andb
pop
cmp
jp
push
test
sbb
jl
mov
jno
rorl
and
mov
xchg
rcrl
aaa
repz
hlt
lgs
xor
jecxz
loop
stos
stos
ss
pusha
cmpsb
cmpb
pushf
enter
sbb
cmp
enter
sub
jecxz
push
add
jno
and
jns
fisttps
add
push
dec
ja
test
adc
mov
push
add
mov
and
gs
xchg
repnz
xchg
push
movsl
outsb
or
or
sbb
data16
pop
sbb
mov
adc
jecxz
loopne
pop
pop
aas
push
jp
movsl
xor
arpl
imul
movl
lods
scas
mulb
das
std
nop
popf
mov
test
scas
jmp
xchg
js
xchg
cwtl
cli
pop
mov
mov
mov
les
dec
xor
scas
pop
mov
xchg
ds
icebp
out
sub
repnz
das
push
std
aad
insb
es
jmp
or
sti
xor
pop
mov
nop
aaa
dec
mov
inc
add
shrb
dec
jbe
cli
inc
ss
fbstp
sub
bound
push
daa
pop
scas
je
jno
adc
jo
jge
std
push
cs
push
fwait
cmc
xor
cmp
cltd
arpl
aaa
insl
push
jb
loopne
enter
cli
inc
pop
fstpt
mov
mov
xchg
pop
cmp
cmp
das
scas
push
or
or
adc
pop
shrb
push
popf
cmpsl
in
adc
clc
shll
jns
adc
inc
addl
dec
cs
push
dec
sub
fcompl
sarb
xchg
or
ja
and
xchg
xor
and
and
test
cli
jmp
sbb
or
mov
aad
addr16
ret
bound
lods
pop
popw
fnstenv
call
jge
repnz
push
aas
adc
sti
cmpsb
jge
push
jp
cmp
cli
hlt
popf
outsb
in
add
sub
push
enter
jecxz
movsl
mov
dec
rolb
adc
sbb
pop
shlb
mov
jle
outsl
xor
lcall
int3
and
arpl
in
shrb
push
int
adc
xor
movsl
jo
add
push
inc
mov
pushf
stos
int
ljmp
sbbb
and
cmc
pop
pop
test
push
aas
in
dec
enter
xchg
fscale
or
push
and
outsl
es
fmuls
in
or
mov
out
mov
inc
addr16
rcll
mov
adc
into
mov
mov
stos
imul
jno
mov
fs
popf
sub
cltd
out
repz
xchg
test
xor
mov
pop
cmp
jmp
jb
rcrl
notl
mov
cmp
fs
imul
imul
jne
sub
mov
insl
gs
fs
inc
lods
adcb
adc
pusha
dec
faddl
and
sbb
xor
dec
outsl
out
mov
or
mov
push
push
fwait
xorl
test
or
outsb
shll
mov
je
repnz
lods
sub
sub
repnz
lret
dec
cld
cmp
xor
fwait
outsl
ret
mov
aam
xchg
jbe
jl
cwtl
push
orb
dec
popf
popa
repnz
xchg
ds
push
out
lods
push
xchg
in
ljmp
xchg
movsl
add
push
xchg
mov
push
cmpl
enter
filds
dec
xchg
inc
lret
test
and
jecxz
femms
push
out
mov
mov
xor
pop
xor
push
mov
mov
mov
xchg
cmp
faddl
movsl
rol
loopne
or
icebp
stos
push
std
lods
cld
imul
mov
jb
add
es
outsb
inc
and
lods
fsubrs
cld
out
and
das
out
aam
leave
adc
mov
sub
xor
out
jle
sahf
dec
lock
in
pop
xchg
mov
pminsw
inc
mov
das
popa
fs
pop
mov
scas
clc
adc
lahf
sbb
daa
popf
xchg
xchg
pop
clc
clc
js
or
mov
xor
out
test
scas
aad
push
fs
push
push
popf
int3
jns
cmpsb
out
pop
lock
shll
pop
imull
mov
data16
pop
adc
cld
lods
aaa
cmp
mov
push
sub
jae
leave
in
repz
jmp
pop
repz
jl
dec
mov
mov
data16
stos
push
and
rorl
jp
or
addl
xchg
mov
lret
mov
sub
imul
mov
imul
pushf
push
xor
fistl
push
xchg
push
mov
jmp
scas
mov
aaa
jecxz
fldcw
scas
mov
daa
inc
ljmp
and
add
and
ja
adc
and
pop
aaa
dec
imulb
cmpl
loopne
sbb
jb
adc
xor
mov
mov
aaa
jno
fstl
jne
push
sarl
lods
hlt
ds
mov
test
cmc
jmp
sahf
das
stc
sbb
cmp
push
jl
mov
xor
cmp
add
aas
jno
or
insb
lea
xlat
dec
es
cmpsb
fwait
popa
mov
pop
negw
push
pop
jae
adc
pop
inc
mov
xchg
adc
sub
xchg
mov
call
jns
in
adc
or
sbb
lds
into
insb
in
int
jp
lock
and
or
add
ss
add
in
dec
js
pop
aam
ret
loopne
push
mov
das
scas
xchg
das
cmp
xchg
int3
imul
ds
test
pop
xor
inc
popf
jno
fs
mov
cmp
mov
cld
inc
xchg
aas
cmp
cli
pop
jge
xchg
push
jmp
mov
mov
inc
mov
xor
mov
adc
lea
lret
jmp
mov
mov
and
mov
add
scas
xor
leave
lret
xor
jbe
sub
negb
int3
clc
hlt
inc
out
daa
sbb
sub
lcall
mov
mov
in
jbe
adc
mov
jp
mov
je
sarb
cmpb
mov
cmc
ret
push
add
frstor
rclb
dec
cmp
insl
stos
xor
push
pop
mov
lock
test
clc
inc
aad
in
ds
imull
loop
pop
mov
test
in
mov
stos
aas
lsl
insb
mov
lret
inc
outsb
mov
xor
repz
movsl
sarl
mov
clc
aad
add
std
or
js
and
pop
pop
xor
jl
or
movsb
daa
mov
mov
in
or
insb
sub
or
jmp
push
lock
cmp
or
or
sub
or
leave
in
cmpsl
mov
pop
fistpll
leave
sbb
jp
pusha
and
fwait
sbb
mov
xchg
sbb
outsl
lahf
mov
test
push
xlat
or
cmp
pop
pushf
lret
sub
daa
orl
fisttps
jmp
cmpsl
and
inc
lea
scas
mov
daa
pushf
lret
movsb
push
das
fs
jmp
add
cs
add
popa
add
or
stc
and
cs
adc
ret
in
mov
fstpt
mov
xor
push
scas
pop
xor
cmp
icebp
lods
lcall
call
mov
or
aaa
and
add
or
inc
inc
mov
dec
or
icebp
outsb
and
lcall
seto
push
es
cmp
sbb
lahf
pop
lret
aad
jnp
lret
or
shll
ds
lock
iret
ja
or
fisubrl
movsb
xchg
in
ret
cmpsl
sti
add
mov
and
jns
aas
std
fidivrl
imul
adcb
mov
or
jp
add
mov
rcll
cmpsl
decl
pop
jbe
push
loope
pop
cli
adc
adc
ret
xor
add
and
aaa
sub
push
sahf
in
inc
mov
insb
sarl
sbb
lcall
das
mov
neg
imul
sbb
sub
rcrl
sbb
das
add
mov
add
icebp
sub
sbb
mov
lret
loop
insl
pop
aaa
mov
xchg
divl
sbb
cmp
add
rclb
push
arpl
in
xor
dec
mov
push
mov
and
mov
pop
push
movzwl
mov
mov
outsl
or
pushf
sbb
fiadds
or
jp
and
mov
sub
cmp
notl
sbb
out
add
fldl
jle
test
dec
xor
lea
aaa
out
pop
xchg
imul
pop
sahf
out
idivb
xchg
dec
mov
sbb
mov
and
int
shrb
ja
inc
mov
scas
adc
dec
fwait
scas
mov
pusha
push
ljmp
cmp
mov
jl
lret
into
jnp
jns
or
idiv
inc
pop
pop
das
test
xor
into
out
fwait
push
std
mov
sbb
out
mov
arpl
rol
push
mov
nop
push
test
add
adc
fstp
out
xor
dec
fldl
int
mov
xchg
fs
pop
daa
fstl
mov
dec
mov
sarl
pop
jge
push
gs
mov
jnp
xchg
xor
ret
or
ljmp
jbe
mov
in
push
aaa
jmp
lock
cmp
dec
pop
stc
pop
and
pop
xlat
inc
jb
xor
cmp
lock
ss
inc
and
out
cli
cmp
test
mov
xchg
popa
icebp
adc
movsl
or
jno
pop
or
call
xor
adc
pop
mov
pop
adc
push
xchg
add
mov
xor
iret
xchg
nop
sub
icebp
mov
inc
sub
cmp
fsubs
call
mov
dec
add
pop
fwait
iret
jg
ja
dec
daa
subl
outsb
xor
sti
aaa
movsb
sub
inc
repz
push
cmpsl
imull
and
mull
push
sub
mov
and
popf
stos
pop
mov
push
push
xchg
test
stos
outsb
addr16
imul
outsl
xor
aas
cs
test
inc
or
and
imul
out
movsb
daa
mov
scas
mov
push
inc
jmp
lock
subb
sub
enter
dec
push
sbb
or
xchg
mov
aas
scas
mov
xchg
test
fnsave
mov
stos
pop
mov
repnz
je
sti
push
or
mov
out
xor
mov
inc
imul
out
xchg
mov
xchg
sbb
scas
andl
lds
nop
inc
mov
fisubs
jge,pn
xor
add
cmpsl
vunpcklpd
cmp
repnz
jns
sub
popa
adc
out
cmp
addb
pop
aad
outsl
mov
imul
enter
mov
dec
fildll
xchg
mov
push
arpl
cwtl
xchg
ss
sti
push
mov
jp
dec
out
add
cs
jno
daa
sub
stos
dec
js
mov
arpl
push
repz
fcmovnu
enter
dec
jmp
cmpsl
jo
insl
cs
mov
dec
inc
test
fs
inc
stos
data16
cmp
push
xor
xchg
jbe
psubq
jb
xchg
and
test
mov
ds
xor
repnz
in
scas
loopne
scas
mov
je
jl
scas
inc
and
into
xlat
aam
sarl
je
mov
ss
pushf
fsubs
sub
sbb
or
outsb
fistpll
iret
jmp
or
imul
shll
out
imul
inc
or
mov
pop
jns
push
jb
mov
sbb
outsl
das
inc
mulb
push
push
idiv
push
inc
inc
insb
addr16
ja
iret
in
cmp
jp
sub
js
mov
xchg
iret
std
lock
sahf
bound
je
lret
fmuls
lret
dec
jecxz
sub
sub
movsb
out
aas
mov
gs
adc
into
aas
testb
sbb
stc
fxam
pop
cmp
leave
enter
or
dec
ja
or
pop
hlt
jmp
and
aaa
mov
push
mov
xor
cli
add
lcall
in
or
cmpsb
out
loope
push
inc
add
sub
mov
cld
test
outsb
loope
imul
xchg
push
aad
jle
push
or
in
cmp
or
inc
dec
scas
inc
lock
cwtl
mov
xor
int3
push
outsl
push
mov
pshufw
out
cmpsl
jg
aam
pop
out
aas
pop
jge
push
test
mov
testl
sarb
jns
sbb
jp
push
leave
xchg
xchg
test
mov
sbb
dec
xchg
xor
xor
dec
mov
inc
xlat
mov
out
pop
adc
mov
cmp
cltd
not
or
pop
push
mov
xchg
jp
fsubl
xchg
lret
xor
pusha
push
cmp
dec
decb
or
adc
fcomip
fisubrl
or
in
pop
js
or
xor
hlt
cmp
iret
jl
aas
sti
xlat
dec
push
or
mov
sbb
sbb
shr
movsl
dec
adc
and
shlb
insb
and
sbbb
sbb
adc
push
testb
call
dec
insb
lods
in
repz
adc
jns
lret
dec
or
mov
stos
pop
dec
sarl
repz
sub
ds
jmp
adc
sbb
paddw
mov
or
and
out
insl
lret
push
push
xor
inc
mov
or
mov
imul
mov
fwait
or
adc
into
test
loop
jg
mov
or
push
or
push
jp
cld
xchg
cmp
adc
andl
mov
mov
xor
inc
fsubrl
jge
ja
call
push
aam
ds
mov
dec
mov
ss
js
jg
mov
push
dec
mov
mov
or
push
mov
jmp
push
not
jns
out
scas
xor
scas
dec
ss
adcb
xorl
sub
cmp
aam
mov
rclb
js
mov
scas
in
out
adc
and
jge
shrb
and
inc
into
mov
fwait
mov
sub
push
repnz
xchg
pop
cmp
sub
call
pushf
dec
out
push
push
add
push
jne
mov
fidivrs
or
hlt
adc
push
shl
mov
addb
mov
push
xchg
inc
movsl
orb
push
test
adc
cmp
out
insl
sbb
cld
pop
mov
hlt
dec
mov
cli
dec
gs
adc
add
lock
xchg
lock
lods
outsl
clc
mov
gs
dec
outsl
cmp
push
mov
scas
push
pop
mov
or
mov
shll
unpckhps
xchg
addb
pop
frndint
sbb
mov
push
ja
or
cmp
dec
and
int
mov
pop
cmp
roll
hlt
and
cmp
fidivs
or
or
dec
inc
repz
mov
jnp
mov
mov
movb
mov
mov
mov
xchg
jmp
xlat
inc
stos
filds
push
lock
into
repz
mov
dec
cmpsb
and
dec
arpl
mov
das
and
or
sub
movb
xlat
add
xchg
fwait
sbbb
jg
vaddss
push
outsl
cli
flds
cmp
mov
jne
xchg
and
or
or
adc
add
fbstp
ret
jb
lds
adc
stos
xchg
div
stos
sbb
outsb
adc
fs
pushf
dec
xchg
push
or
fimull
and
jne
inc
nop
mov
inc
sbb
imul
mov
adc
fstl
lcall
movsb
fstps
xor
cwtl
es
sbb
push
pop
stos
lods
adc
dec
std
lods
xchg
jp
clc
xchg
call
push
out
mov
aad
lods
push
ljmp
inc
adc
aad
stos
mov
sub
mov
cmp
xchg
test
nop
xchg
jg
fwait
or
dec
add
pop
in
lea
sbb
loop
mov
out
nop
call
and
cmp
jmp
je
ror
sbb
xor
cmpsl
dec
loop
jge
icebp
rcll
jl
out
stos
ja
pop
cli
fcmovb
pop
int
dec
add
mov
fwait
int3
xor
gs
cmpb
dec
pop
add
fisubl
sbb
fbstp
lret
cs
dec
outsl
jecxz
jg
and
test
inc
jmp
push
stc
sbb
insl
mov
inc
sub
cmp
fdivr
nop
mov
outsb
add
insb
mov
add
pop
rcl
push
fwait
aam
lea
adc
scas
sub
xor
pop
push
mov
cwtl
and
lods
xchg
mov
jge
add
lcall
sahf
popf
jns
lret
push
int
fcmovbe
test
jl
mov
xor
dec
sbb
dec
faddl
or
push
loope
sub
stc
push
push
jns
data16
xchg
xchg
test
sbb
sbbl
and
dec
fldl
je
ret
and
jo
es
and
test
mov
or
jl
icebp
jl
out
sub
cmp
adc
test
pop
bound
mov
dec
insb
imul
sub
int3
imul
mov
mov
fmull
fstpl
ss
push
sbb
leave
adc
or
int
mov
stos
test
add
pop
pop
cmp
and
pushf
ja
and
insl
adc
mov
dec
popf
sbb
or
push
mov
pop
shll
or
xor
fildll
ret
xor
or
test
xchg
sub
jo
xchg
sbb
inc
mov
in
test
jns
movsl
test
fs
movsl
adc
pop
mov
aas
jmp
xor
testb
popf
fcomps
iret
popf
dec
sti
adc
xor
jl
inc
clc
repz
mov
mov
std
push
test
jecxz
mov
ss
sbb
pusha
testb
stos
sahf
cmpsb
out
out
adc
test
pop
das
xchg
shl
and
scas
jo
jl
mov
cs
fsubs
icebp
loope
push
gs
jp
jp
xchg
jge
dec
sahf
das
mov
lds
mov
push
or
outsb
xchg
sbb
aas
pop
adc
sub
out
arpl
mov
pop
mov
push
shl
sti
mov
jle
aad
or
bound
mov
test
or
xchg
add
rolb
jg
repz
lock
sbb
push
cwtl
loopne
push
je
push
xchg
in
popa
sahf
mov
cs
sub
lea
adc
jnp
cmp
cli
hlt
mov
bound
fs
sti
xor
mov
das
adc
sub
in
icebp
cmp
and
or
xchg
leave
cli
xchg
movsl
dec
aam
push
xor
fadds
stos
adc
daa
or
fndisi(8087
mov
jl
orl
leave
mov
in
sbb
sub
dec
stos
mov
sub
adc
sub
idiv
or
mov
pop
jnp
scas
fldl
enter
dec
jge
fsubs
dec
push
xor
cmp
sub
fisubl
xchg
in
cmp
sub
test
inc
in
scas
mov
inc
fsubrl
icebp
ljmp
out
cmp
out
imul
cld
or
or
popf
inc
add
push
into
fidivs
add
scas
mov
or
push
xor
xchg
out
or
mov
rcll
inc
cld
lods
aam
ljmp
sbb
cmpsl
cwtl
xor
push
mov
pop
sub
add
xchg
and
cmc
sub
popf
mov
mov
out
lret
cmp
pop
adc
scas
cmp
imul
pop
or
mov
or
dec
repnz
outsl
ss
nop
out
cltd
mov
add
dec
cmp
xor
jb
enter
or
pop
sbb
push
xchg
sub
addr16
out
and
mov
push
test
repnz
in
push
push
lret
pop
pop
cmp
push
cmpsb
sub
adc
inc
xchg
xor
jmp
sub
imul
das
adc
repnz
add
pop
lret
mov
push
push
insl
or
sub
lea
sbb
sbbl
adc
mov
ss
mov
out
cli
ss
outsb
cmp
mov
cmp
outsl
jno
xchg
in
inc
add
cwtl
jbe
xor
test
cli
fwait
int3
pop
or
jbe
pop
jmp
popa
mov
orb
push
subl
mov
dec
dec
dec
ljmp
cwtl
out
cmp
sub
xchg
dec
je
jbe
push
pop
js
push
je
fldenv
cmp
fnsave
pop
fbld
inc
mov
pusha
or
imul
imul
xchg
sub
int3
call
xor
rclb
ja
dec
ss
aaa
pop
pop
mov
daa
sbb
or
and
mov
inc
or
and
pop
dec
mov
dec
or
lods
fwait
cmp
fildl
mov
inc
xor
sti
fstl
aad
je
add
aas
enter
out
addr16
and
push
dec
out
ja
mov
jge
movsb
or
jnp
push
jnp
inc
add
jb
mov
sub
clc
push
push
xchg
cmpsl
or
rclb
cmp
shl
lds
sar
ficoms
out
movsl
outsb
popa
in
test
xor
pop
or
repnz
push
adc
es
loopne
enter
xchg
lret
test
sti
fists
xor
xchg
xchg
mov
negb
gs
out
jp
sub
xchg
icebp
lods
insl
adc
mov
data16
cltd
mov
sub
aad
andl
jl
mov
sub
cwtl
mov
jne
sti
dec
in
rcrb
dec
push
inc
mov
jmp
scas
clc
clc
xor
inc
pop
movb
cltd
adc
ret
dec
test
push
leave
xor
and
cmp
lea
out
flds
ljmp
inc
sub
fsubl
repz
ja
test
ja
clc
jmp
and
movsl
mov
push
in
movsb
andb
aas
es
nop
lds
pop
and
cld
addl
aam
push
push
mov
xor
pop
call
mov
or
jbe
scas
jmp
cmp
xor
call
mov
mov
sub
or
out
es
mov
bound
repnz
xchg
cmc
enter
lea
sub
insl
sub
out
xor
adc
pop
sub
or
imul
loop
adc
inc
lret
push
das
rcrl
inc
sub
xchg
add
movsl
jg
sbb
fimull
mov
dec
xor
pop
or
fs
aas
call
addb
fcmovbe
add
mov
and
inc
pop
sub
fstpt
and
and
ds
fs
add
xor
outsl
and
and
shr
sub
and
arpl
pushf
jecxz
or
xor
aas
aaa
sub
out
pusha
mov
or
aad
dec
fbld
fimuls
in
xchg
sarl
push
lods
stos
pmaxsw
call
ljmp
cmp
in
out
xchg
call
outsb
and
fmul
aam
aas
inc
push
fs
jp
andl
dec
ds
and
hlt
xor
or
out
cmp
outsb
pop
sahf
jbe
nop
add
call
es
gs
loopne
sbb
push
mov
es
xchg
jnp
cmp
leave
enter
or
jns
mov
lcall
sarl
and
ljmp
cmp
cmp
out
add
or
je
ja
lret
out
iret
leave
fnstenv
inc
xchg
repnz
ljmp
div
push
cmp
jo
sbb
push
mov
mov
adc
movlps
lcall
fwait
cld
push
cmp
xchg
inc
push
mov
jo
jne
jns
mov
xchg
jae
mov
into
int3
push
pop
sbb
jp
aad
push
or
pop
mov
push
mov
mov
imulb
mov
sub
setp
sbb
movsb
dec
outsl
repz
hlt
dec
pop
or
fdivrl
sub
push
push
xchg
cli
pop
cmp
ret
popf
imul
icebp
repnz
pop
lcall
jae
sub
jns
xor
sbb
lahf
mov
xor
pop
cmp
adc
jmp
std
cmc
test
mov
add
scas
or
inc
fbld
out
push
pop
idivb
and
aaa
push
or
ja
jns
sub
inc
sub
adc
idivb
adc
imulb
orl
xchg
jnp
cmp
cvttps2pi
push
dec
push
test
cmp
cmc
sarl
pop
inc
cmp
inc
cmp
aas
rorl
or
push
pop
xchg
call
xor
jge
jns
iret
mov
inc
sub
cmp
inc
outsb
push
pop
mov
xor
cmc
xor
pop
pop
lahf
in
add
stos
and
fwait
test
mov
xchg
repnz
inc
idivb
push
sbb
dec
shlb
dec
ss
das
sub
xor
mov
dec
lea
or
rcrb
sub
es
xor
jg
xor
xor
sbb
add
in
pushf
cmp
das
xchg
mov
insl
scas
mov
pop
mov
and
mov
in
push
int3
cmpsb
popa
pop
mov
mov
sahf
sub
pop
mov
test
aas
out
xor
lea
sub
mov
out
adc
sub
adc
mov
loope
mov
out
mov
cmp
sbb
je
pop
add
int3
sub
adc
das
stos
ss
movsb
enter
dec
out
sahf
or
adc
jbe
scas
repz
mov
mov
sbb
stc
push
rol
lods
imul
fnstsw
repnz
sbb
jb
mov
das
call
sub
dec
out
mov
dec
jns
mov
xchg
cmp
add
push
jl
pop
or
mov
mov
dec
adc
outsb
mov
adc
in
cmpsl
insl
xlat
add
cld
mov
pop
sbb
xor
js
pop
imul
cld
popf
cmp
adc
mov
inc
xchg
xchg
ret
mov
das
or
inc
xor
dec
pop
add
repz
cmc
mov
aad
sbb
ret
inc
jp
or
out
sar
lea
icebp
stos
pop
out
dec
jp
sub
jne
pop
lret
inc
stos
or
inc
cli
pusha
lret
bound
pop
or
test
hlt
sub
jae
pop
ljmp
jg
dec
sbb
push
push
cmp
add
ja
add
cmp
insl
clc
icebp
fiadds
rorl
in
stos
ljmp
jmp
aas
mov
dec
sub
or
push
gs
push
mov
add
std
out
add
outsl
sub
or
xor
fstps
movsb
les
cwtl
jbe
cmc
pop
xchg
pop
push
fnstsw
lods
mov
or
xchg
adc
stc
jle
inc
aam
divps
aad
push
xchg
call
out
mov
xor
cmpsl
clc
repnz
sub
repz
loop
push
ret
into
movsb
pop
push
push
inc
lret
cli
jno
adc
xchg
fiadds
push
pop
push
mov
fsubp
call
cs
push
cmp
cmpsl
fdivrs
sbb
test
push
mov
mov
mov
out
xchg
or
add
or
addr16
pop
dec
fs
cmp
enter
or
pop
xchg
fstpt
mov
push
mov
dec
mov
cltd
cs
push
jp
jl
cmpsl
xor
and
cmpsb
pop
test
push
dec
pop
sahf
push
sub
ljmp
push
pop
scas
mov
jle
and
ds
push
or
and
enter
pop
fwait
out
outsb
ds
cltd
in
ss
fwait
cmp
es
lahf
adc
or
push
in
mov
xchg
pop
cmp
call
jno
lea
sbb
inc
in
sbb
xchg
push
lahf
stos
push
mov
jmp
cmp
imul
mov
data16
in
out
inc
fists
push
xor
cmpsb
popf
enter
mov
lret
addr16
xchg
out
xchg
pushf
ja
stc
dec
stos
ret
out
add
or
je
das
dec
outsb
pushl
enter
adc
push
daa
add
pop
push
mov
sub
pop
cltd
or
leave
cmpsb
shrl
aas
push
push
mov
stc
and
lcall
sahf
cli
mov
push
loop
test
cmp
adc
scas
shll
loop
inc
bound
add
lret
adc
and
pop
mov
add
or
pop
or
dec
das
gs
mov
pop
xchg
in
stc
icebp
mov
loop
loope
xchg
cwtl
mov
mov
cmp
inc
mov
bound
push
sbb
das
pop
das
mov
and
fistl
push
int
mov
mov
mov
call
inc
pop
jbe
in
lods
jne
fbstp
popf
inc
jg
outsb
idiv
popf
sbb
push
loope
out
xchg
ljmp
cmp
int
punpcklbw
stc
xchg
rorb
and
fs
je
push
jmpw
repnz
shl
addr16
cltd
mov
cli
sbb
aaa
in
es
sarl
lret
lahf
fisttpl
insb
mov
mov
add
pop
mov
cmp
mov
push
dec
test
call
ss
sbb
or
out
mov
push
push
and
jg
mov
cmp
es
sbb
fcoms
popa
mov
repnz
aam
jge
lea
or
pop
cmc
repnz
fiadds
xor
cmpsb
out
int3
cmp
das
movsl
inc
les
decb
push
jge
out
adc
sub
insl
xchg
pop
inc
jmp
and
int
pop
ljmp
push
pusha
or
jns
into
mov
repz
adcl
pop
add
mov
xchg
jo
push
fisttpl
sub
inc
hlt
inc
cmpb
mov
in
dec
mov
fimull
inc
and
stc
push
xchg
daa
loope
inc
icebp
aas
jne
and
enter
test
jae
push
add
mov
jb
cmpsl
xor
add
mov
sahf
pop
pop
inc
mov
pop
xor
popa
lea
nop
loop
cmp
fs
mov
ret
jl
fs
cmpsb
aaa
shlb
or
fwait
dec
ds
adcl
aas
sahf
inc
lock
xchg
into
adc
xchg
or
push
shrb
or
dec
xchg
cli
mov
adc
mov
mov
sub
cli
cld
mov
push
dec
sub
lret
pop
ret
add
orl
sbb
sub
adc
and
js
dec
int3
enter
das
lods
xchg
add
outsl
stc
lea
aaa
sub
pop
mov
xor
or
ja
out
popf
in
movsb
testb
sbb
jl
inc
test
or
fptan
aam
neg
movsb
sbb
andb
sahf
cmp
or
jp,pn
clc
add
test
fistl
addr16
mov
nop
popa
sub
sub
aam
ret
mov
std
out
add
fstps
in
xorps
nop
cld
pop
fcomp
sub
mov
incl
jo
mov
pop
test
unpcklps
call
inc
and
sub
fsubs
and
mov
and
aam
push
outsb
in
lods
addr16
ljmp
push
xchg
mov
sub
cwtl
ljmp
sti
imul
pop
rorb
jbe
and
cmpsb
lods
pop
dec
xchg
testb
ja
lock
cmp
fcoml
dec
pop
mov
je
sub
mov
sub
sub
les
cs
ja
xchg
push
push
cli
gs
outsl
jbe
or
jge
cmp
jp
lea
push
push
lahf
test
leave
xor
repnz
jae
mov
mov
data16
pop
imul
mov
cmp
push
mov
int
xchg
add
xor
aam
or
xchg
dec
sub
push
mov
repz
jb
jge
js
dec
int
icebp
popf
arpl
ds
jnp
mov
std
mov
xchg
push
and
aaa
cmpb
sbb
repnz
imul
aas
shll
addr16
leave
inc
lock
filds
ror
lds
imul
outsb
hlt
std
xor
neg
data16
pusha
push
test
cmp
mov
stos
push
xor
jae
xchg
lcall
sub
adc
xchg
cli
push
add
movsl
cmpsb
stos
das
push
cmp
cmpsl
cltd
inc
into
jge
sbb
jbe
push
nop
mov
in
or
and
jne
outsl
lock
fidivrs
xor
lea
xchg
sbb
mov
nop
jl
push
add
jecxz
mov
into
psrld
lahf
jp
js
ret
push
xor
or
popa
or
cmp
sbb
mov
dec
or
adc
insl
xchg
sbb
mov
outsl
in
loope,pn
mov
and
leave
lds
ficoml
andl
xor
push
xor
xor
jae
inc
test
adc
insl
into
dec
mov
and
inc
cltd
xchg
sub
cmpsl
adc
jo
sub
inc
sbb
cmp
cmp
dec
or
dec
sbb
shll
xor
add
jl
int
inc
and
iret
dec
jge
repz
enter
movl
test
cs
pop
xchg
inc
add
dec
fcomps
sub
push
ss
aad
xchg
nop
xchg
mov
outsb
mov
leave
js
out
mov
pushf
xchg
inc
cli
out
and
push
mov
sub
sbb
mov
jbe
outsb
and
fucomi
shrl
jmp
lds
addr16
mov
xor
push
repz
and
cli
cli
inc
icebp
daa
test
sbb
pop
inc
jp
or
adc
neg
lock
cmp
lea
mov
or
mov
and
and
in
add
cmp
lods
mov
in
adc
mov
aam
and
add
add
sti
dec
cli
cmp
lods
mov
or
adc
out
imul
xchg
cmp
dec
bsr
dec
cli
or
cltd
jg
ss
sub
cltd
mov
stos
push
and
dec
fldcw
or
mov
addl
and
cmp
lcall
shlb
sbb
in
push
inc
sub
cmpsb
imul
loop
psrlw
sbb
jo
push
inc
jo
xor
int3
inc
push
mov
or
popf
pop
aaa
adc
stos
aam
inc
mov
pop
aaa
mov
cmpsb
cs
cmp
and
ret
lret
sbb
xchg
or
test
cmpsb
mov
mov
mov
mov
sbb
add
dec
lahf
jle
sub
aas
ss
mov
xor
jg
pushf
xchg
adc
cmpsb
les
jmp
pop
fdiv
lcall
cmp
insb
fmuls
push
cmc
dec
jo
hlt
pop
in
sub
fiadds
lods
shrb
inc
idivb
jg
idivb
dec
mov
and
mov
and
daa
lods
jae
cmp
sarb
hlt
cmp
push
push
fcoml
mov
ds
cmc
inc
pop
notb
pop
jbe
mov
addr16
pop
xchg
repz
es
in
sti
dec
add
adc
dec
js
and
jo
test
adc
mov
test
fs
jge
out
movsl
subb
pop
lcall
into
repz
sbb
or
sub
push
cmp
loopne
or
xchg
cmp
mov
in
dec
mov
add
mov
xchg
xor
test
push
or
imul
test
add
push
mulb
int
arpl
cmp
out
xchg
arpl
jecxz
push
cmp
roll
scas
mov
xchg
sti
xchg
mov
sub
sti
push
dec
xor
fs
aad
mov
mov
and
xor
gs
jmp
add
lahf
iret
sub
mov
cmp
ret
sub
fildll
and
lret
xor
push
pop
pop
outsl
and
and
lret
cltd
or
xor
mov
mov
sub
push
adc
orl
repz
leave
imulb
int
cmp
inc
xchg
inc
loope
mov
cmc
cmp
loope
or
xchg
xchg
jmp
movsl
xor
sbb
subb
lods
xor
faddp
and
sub
cmp
push
jp
test
stos
sahf
adc
outsb
mov
mov
outsb
jae
mov
pop
fwait
and
sub
jl
or
inc
insl
xchg
fs
aad
mov
mov
test
push
imul
add
fidivrl
or
sbb
cmp
push
sbb
in
jg
jae,pt
dec
mov
adc
jle
sub
outsb
subb
ja
int
sub
push
ss
int3
pusha
clc
out
xchg
popf
ret
loope
lea
sub
mov
adc
or
outsl
sbb
daa
push
pop
rcll
cmp
push
push
adc
and
pop
push
push
mov
and
mov
and
jnp
sub
mov
cmp
clc
inc
jne
jae
mov
push
divl
mov
cmpsb
mov
sbb
push
popf
out
int3
cmp
mov
add
jecxz
jnp
jp
or
mov
out
adc
jbe
aas
xchg
push
xor
clc
gs
pop
dec
mul
and
mov
add
leave
fwait
sub
pop
out
jno
jnp
jo
sub
cmp
fcmovb
mov
fldt
mov
adc
xchg
imul
and
ret
jmp
mov
adc
mov
inc
out
out
call
aam
scas
xchg
stos
lock
xchg
in
add
mov
sti
xor
jp
movsl
push
xor
testl
bswap
into
cmpsl
cwtl
mul
jo
jns
or
mov
push
adc
in
imul
pop
lcall
inc
mov
cmp
mov
jno
jecxz
movsb
enter
mov
fcomi
and
xchg
data16
cmp
xor
test
sbb
pop
or
sbb
mov
lahf
xchg
lcall
out
fdivs
xlat
adc
cli
sbb
dec
mov
aad
push
scas
int
test
sub
and
lret
hlt
scas
fwait
mov
out
push
jne
mov
sub
pop
ljmp
xor
call
push
inc
fistps
cmc
dec
inc
dec
adc
loop
push
push
and
out
test
out
sbb
xor
mov
jo
lock
dec
mov
or
sub
dec
fldt
inc
sbb
jae
add
cmpsb
outsl
push
pop
sub
or
pop
push
jmp
and
cmp
in
jnp
jecxz
push
sbb
lea
xchg
dec
sbb
test
std
repnz
jmp
jns
add
popf
sbb
add
cmp
pop
stos
and
mov
lods
dec
xchg
or
scas
mov
mov
xchg
rclb
mov
cmp
xlat
add
enter
aaa
rclb
lods
insb
lea
lods
dec
aad
cltd
inc
lahf
or
leave
adc
sahf
mov
daa
pop
cmp
and
clc
and
sbb
push
test
dec
or
std
dec
loope
dec
cli
fwait
or
pop
xchg
sbb
cltd
mov
inc
adc
das
notb
leave
lret
push
xor
dec
or
mov
xor
test
andb
inc
lcall
and
sbb
push
xor
fcoml
adc
mov
cmc
sub
adc
arpl
adc
mov
or
xchg
push
fdivs
gs
xor
mov
jns
cmpsb
subb
imul
jg
fwait
sahf
and
or
aad
mov
fiaddl
testb
outsl
lret
mov
xor
xor
xor
mov
pop
ja
adc
cmp
xchg
adc
jp
cltd
push
xchg
jne
xchg
add
stc
pop
pop
mov
ds
lret
pop
or
push
cmp
fsubr
xlat
mov
xor
cmp
inc
pop
loopne
pop
jbe
and
repz
mov
dec
lcall
lock
mov
jmp
jne
mov
push
push
mov
push
andl
int3
mov
mov
lds
roll
sbbb
or
out
lods
sub
cmp
aas
testl
jecxz
cmc
leave
rcrl
push
xchg
pop
mov
arpl
mov
into
fstpl
dec
sbb
ljmp
cmpl
add
xlat
scas
mov
push
jo
or
gs
jne
pop
dec
add
nop
xchg
pop
cmpb
stos
in
mov
push
hlt
aaa
cs
test
cs
loop
xchg
adcl
and
add
xor
int
sahf
enter
xor
push
ljmp
rcrl
inc
or
xchg
les
push
dec
cmp
sub
lret
adc
xor
hlt
outsb
fwait
gs
fiadds
adc
mov
sarb
dec
cmp
cwtl
push
cltd
pop
inc
sub
mov
dec
aad
sbb
xchg
or
dec
int
ja
sbb
pop
fwait
insb
insb
ficomps
adc
xor
jl
or
mov
sub
cmpsb
aam
push
dec
pop
xchg
lahf
sbb
cmp
cmpsl
scas
insl
fs
mov
ss
adc
mov
les
mov
mov
and
jns
mov
xorl
aaa
jne
daa
cmp
lock
inc
dec
mov
dec
mov
cmc
sbb
daa
add
xchg
test
xchg
das
sub
xchg
loopne
mov
add
xchg
adc
cmpsl
mull
orl
add
out
jne
xchg
sub
dec
cs
or
inc
imul
push
inc
mov
xlat
gs
fwait
pop
cmp
adc
ret
lods
adc
movl
cmp
push
ret
adc
jns
inc
inc
fildll
sahf
sahf
sbb
sub
dec
int
xor
insl
mov
or
pop
sti
sbb
adc
xchg
std
push
or
aad
or
and
push
daa
leave
testb
outsl
daa
xchg
in
cwtl
jne
ficomps
loop
pop
cwtl
dec
test
mov
rorl
andb
xchg
cld
and
test
imul
inc
out
sbb
popl
or
mov
and
call
pusha
ds
and
inc
mov
movsl
or
data16
jl
enter
insl
adcl
popa
clc
data16
sub
xor
jbe
outsb
inc
nop
inc
xchg
sub
push
das
dec
xor
sti
xchg
xchg
call
fimuls
sbb
insl
cmpsl
sbb
ss
xor
pop
aam
push
adc
sbb
aaa
fbstp
xchg
sub
adc
mov
daa
inc
or
lahf
mov
dec
cwtl
mov
and
shlb
xchg
mov
push
je
add
ss
fwait
sahf
call
sub
sbb
push
rorb
inc
mov
sub
sub
mov
sbb
loop
push
inc
cmpsb
fldenv
outsb
mov
sub
push
mov
mov
dec
pop
mov
lahf
ret
sub
push
movl
dec
mov
or
test
xor
mov
in
inc
xchg
cmc
dec
popl
jno
cmpsl
mov
adc
lret
leave
push
cmp
mov
push
test
mov
inc
push
mov
pop
adc
ljmp
jo
xchg
dec
aad
push
inc
popa
repnz
mov
adc
lcall
imul
adc
mov
sub
mov
test
inc
in
popf
test
sbb
out
add
add
loop
mov
sub
inc
push
xchg
inc
xorl
sub
mov
and
mov
gs
or
mov
popa
xor
enter
scas
pop
nop
repnz
push
mov
sub
dec
into
xor
repnz
cmp
bound
nop
or
inc
or
inc
add
inc
es
mov
or
sbb
cmp
ficoms
push
jecxz
jne
cmp
lcall
lcall
mov
cmp
lods
cwtl
fdiv
cmp
sbb
mov
jo
packsswb
adc
pop
pop
lret
and
inc
dec
dec
sub
sub
popf
out
sbb
cmp
dec
or
fwait
sbb
dec
mov
sbb
xor
sbb
outsb
fsub
test
insb
insb
pop
imul
dec
sub
imul
mov
dec
cmp
test
faddp
jmp
pop
add
sub
outsb
imul
xor
roll
and
cmp
aad
push
pop
ret
push
dec
add
sub
bnd
adc
fiadds
outsb
jle
adc
daa
push
or
cmc
lret
gs
fwait
push
sbb
rcll
push
outsl
jns
cmpsl
fs
rcll
mov
inc
jle
lret
adc
mov
mov
outsb
add
loopne
lret
inc
and
pop
jl
daa
jne
push
ret
test
lret
dec
dec
pushf
mov
inc
xchg
xlat
pop
pop
mov
inc
in
sub
hlt
jecxz
ror
pusha
loopne
sub
adc
movsl
mov
cs
push
jge
test
or
fs
xor
push
not
aas
popf
push
pop
add
adc
add
stos
dec
mov
pop
in
xchg
lret
outsl
idivb
lock
lret
imul
ss
sub
lcall
push
jns
and
pop
in
mov
ret
daa
sub
ss
mov
jecxz
cmp
ss
nop
jo
in
xchg
imul
cs
mov
mov
mov
mov
popa
enter
out
dec
aaa
dec
cmc
fmul
xorl
in
data16
add
fidivs
aas
daa
xor
cmp
ret
and
aaa
in
sbb
xchg
mov
push
fdivl
shll
add
push
jge
sub
xor
mov
ret
xchg
into
or
clc
xor
clc
mov
sub
lods
jge
xchg
test
lods
xor
cmp
push
xlat
inc
into
data16
sub
xchg
dec
push
test
out
xor
ss
xor
cmp
das
cmpsl
add
add
dec
or
fdivrl
das
sbb
loopne
pop
xchg
addr16
cmpsb
cmpl
sar
cmc
aaa
cmpsb
push
pop
lods
loop
mov
aaa
or
fsts
xor
inc
aas
lret
sub
daa
adc
push
insb
aaa
or
xchg
imul
std
cmp
jmp
clc
pushf
or
fistpll
ficompl
enter
rorb
or
xchg
push
clc
cmp
daa
inc
outsl
pop
fnstcw
imul
inc
sub
mov
and
or
es
jbe
lods
ja
aam
loopne
lret
daa
fbld
push
sahf
push
insl
xor
ja
stc
ja
mov
scas
cwtl
push
popa
stos
push
jl
call
pushf
sbb
ds
adc
mov
jg
cmp
dec
sbb
test
icebp
in
or
push
jnp
dec
dec
call
fsubl
icebp
and
dec
outsl
jns
sbb
push
dec
sub
in
inc
dec
xor
mov
es
pusha
cld
movsb
ret
pop
jg
aad
mov
call
loope
push
call
ficompl
mov
in
stos
inc
push
fwait
and
cmp
pop
mov
fucom
and
stos
movsb
lods
dec
mov
jo
mov
inc
xor
sub
fstl
dec
lea
xchg
pop
jne
popf
inc
popf
xor
cmpl
adc
flds
es
js
test
or
fcoms
push
mov
or
dec
mov
addb
sbb
mov
and
gs
adcl
push
ror
das
shr
dec
xchg
mov
mov
mov
and
movsl
mov
inc
push
in
subl
rclb
repnz
jae
sub
out
pop
lea
push
jl
orb
sub
jmp
inc
sti
outsb
adc
or
fidivs
jge
mov
add
in
cmp
push
fisttps
jno
mov
xor
mov
inc
xor
in
std
lds
dec
arpl
stos
jmp
xchg
fiadds
or
dec
sbb
inc
xor
pushf
stos
push
es
inc
dec
cld
sbb
xor
cmp
leave
push
xor
jp
fcmove
dec
push
movsb
ds
or
out
xchg
es
inc
sub
imul
mov
jg
popa
sbb
es
into
jno
add
mov
outsl
fwait
popa
divb
insb
aam
lahf
outsb
movsb
pop
jo
leave
insl
clc
sub
mov
aas
fcompl
mov
sahf
scas
add
call
bound
cltd
push
jbe
and
sub
adc
imul
mov
stos
cmp
popa
mov
int
xchg
jae
dec
xor
dec
adc
mov
dec
test
dec
or
add
adc
jge
xor
mov
mov
cmp
mov
sbb
fidivrl
mov
cmp
int
push
cmp
jb
cmpsb
pop
xor
mov
mov
arpl
lds
das
push
movsb
scas
loopne
mov
dec
sub
or
dec
or
jbe
and
and
hlt
mulb
ficoml
testb
and
out
lock
mov
mov
out
cmp
jb
cmpsb
getsec
pop
mov
pop
push
icebp
sbb
pop
xor
dec
cli
adc
inc
in
jns
in
mov
xchg
in
int3
mov
add
insb
cwtl
dec
pusha
sub
idiv
or
adc
test
add
push
cwtl
add
and
jns
das
push
out
imul
into
repz
loope
push
ror
clc
xor
or
fmull
hlt
sub
adc
xor
adc
jne
daa
sub
dec
les
shrl
xor
and
aas
nop
and
pop
cmp
adc
stos
jno
repnz
rcrb
cltd
mov
xchg
and
pop
in
iret
push
hlt
dec
inc
dec
and
js
scas
inc
sar
insb
jg
outsl
jno
inc
sarb
mov
rcll
add
pop
rorb
or
or
jae
aaa
out
fmull
or
repnz
jo
fisttpl
jns
ljmp
imul
inc
out
in
mov
push
lods
xchg
jge
nop
fwait
adcb
xchg
data16
pusha
mov
cmpsb
decl
into
dec
outsb
ss
or
adc
pop
sub
divl
pushf
push
fcoms
jnp
gs
fdivrl
repz
xchg
and
push
mov
sub
lret
mov
sbbb
inc
fsubs
mov
inc
stos
int
cltd
xor
out
into
jo
test
or
jge
sti
int
in
addr16
jmp
imulb
push
mov
mov
popf
aad
mov
push
sub
push
into
sbb
xchg
xlat
pop
mov
or
sub
pusha
aaa
addr16
pop
fucomip
repnz
movsb
dec
ret
hlt
push
rorb
dec
imul
cmp
popa
pushl
imul
inc
aad
pop
shlb
into
sbb
out
and
bound
jmp
inc
and
in
mov
in
test
stos
xchg
inc
shrb
gs
jp
or
xor
xor
sahf
fisubrs
mov
and
cltd
jl
mov
pop
stos
xor
lahf
mov
or
cwtl
xor
fsubl
shlb
adc
cmpl
xchg
clc
ljmp
push
jne
out
jge
cmpsl
out
cmp
or
lcall
rclb
mov
cwtl
push
push
stos
jecxz
xchg
push
mov
icebp
jecxz
jbe
dec
stos
outsb
repnz
adc
inc
pop
dec
movsl
add
push
cmp
adc
mov
js
and
cmp
movl
inc
add
and
loop
popf
orb
sahf
lds
flds
pop
or
mov
jl
inc
sub
addr16
lret
push
divb
lahf
arpl
adc
fwait
cmp
adc
fstps
orb
sar
pusha
scas
js
imul
and
adc
icebp
sbb
dec
inc
sbb
pop
cli
test
mov
orl
jecxz
popa
aam
push
ljmp
xor
sub
push
stc
dec
in
out
sti
jle
xchg
push
inc
jbe
icebp
les
mov
fistps
mov
fisubs
fwait
insl
int3
daa
mov
adc
mov
in
test
adc
pop
and
mov
xchg
addr16
mov
jne
mov
push
fisubl
dec
pop
mov
pop
xchg
cmpsb
inc
cmp
xchg
iret
aam
jecxz
push
sbb
je
rolb
jle
icebp
xor
pop
mov
jl
xor
dec
pop
sub
or
rcrl
in
adc
ds
shl
shrl
and
add
rorl
fwait
ds
xchg
adc
jp
frstor
cli
xchg
xor
cmp
xchg
divl
mov
sub
ljmp
pop
popa
add
sarb
xchg
popa
scas
sti
gs
ljmp
mov
mov
aaa
std
mov
inc
xor
pop
add
aad
dec
push
inc
mov
or
pop
pop
das
sti
out
jmp
or
test
stos
aaa
mov
mov
xchg
inc
repz
aad
xchg
mov
scas
mov
mov
xchg
sub
rcrb
xchg
daa
jge
ret
pop
push
ja
jecxz
push
lcall
pop
ja
mov
sarl
jno
mov
addr16
xor
int
push
imul
xchg
roll
sub
sub
xor
push
fdivs
xchg
pop
adc
or
jae
jns
mov
jl
xchg
jae
cmc
inc
scas
push
xor
popl
pop
lahf
cmpsb
jg
jle
inc
xor
adc
xor
push
aam
sub
jo
push
cld
in
je
push
jp
stos
sar
xchg
dec
loopne
or
jle
mov
or
pop
lahf
fistps
mov
adc
in
inc
imul
jp
ret
pop
inc
movsl
test
pop
dec
xor
jo
arpl
or
cmc
dec
mov
ljmp
fs
js
pop
dec
jp
pop
push
jne
je
jp
mov
sub
push
cmpb
flds
popf
xor
jbe
pop
out
icebp
insl
push
mov
gs
jg
or
rorb
out
push
sar
jecxz
lret
or
test
mov
jo
xchg
adc
jg
outsb
inc
xchg
push
jno
add
fidivl
pusha
out
xchg
jecxz
xor
mov
mov
dec
xor
jl
sbb
imul
movsl
dec
push
loope
sub
xor
xor
and
jl
mov
int
pop
mov
inc
rorb
aas
inc
mov
rcrl
out
pushf
rorl
mov
sub
mov
loope
xchg
sbb
mov
aas
dec
cmp
or
lods
pop
xor
mov
in
or
push
aam
lahf
push
outsl
mul
imul
bnd
pop
mov
mov
mov
inc
push
in
add
sub
xchg
inc
cmp
and
mov
mov
adc
inc
pop
in
sub
jns
scas
adc
lahf
add
loop
cmp
dec
xchg
bound
test
cs
add
mov
sbb
enter
nop
cmpsb
push
inc
or
sti
mov
arpl
in
popf
mov
fldenv
cltd
or
inc
bound
lea
into
xchg
negb
arpl
cmp
sub
cld
mov
pop
aaa
push
pop
adc
aad
ja
cmp
push
idivb
jp
dec
popf
and
repnz
mov
jae
movsl
cld
loope
mov
mov
std
push
or
insb
pop
insl
mov
icebp
cmpsb
punpckldq
xlat
add
ficompl
lret
insb
rolb
aas
or
pop
fcoml
mov
arpl
xchg
push
je
cli
test
mov
mov
outsb
gs
iret
mov
sub
nop
mov
and
mov
xchg
xor
jg
rol
mov
aaa
and
cmp
push
pushl
insb
cmpsl
mov
sub
mov
rolb
xchg
mov
aad
je
sbb
dec
inc
push
hlt
dec
shll
push
insl
int
dec
dec
rolb
cmp
push
faddl
jae
addr16
mov
dec
cmp
fld
fstpl
push
addr16
fiaddl
adc
jno
adc
push
fs
testb
stos
adc
flds
popa
sahf
ss
lock
hlt
ficompl
sub
xor
rol
xchg
nop
and
sti
lock
xchg
div
sti
pop
movups
fidivl
push
cwtl
inc
mov
lea
mov
pop
cld
mov
mov
cmp
mov
stc
sub
mov
lock
inc
cmp
cmc
adc
inc
pop
xchg
out
xlat
shrb
push
fstps
cmp
inc
jmp
lret
popa
xchg
lock
in
inc
out
flds
in
mov
stos
imul
out
lcall
fisubs
dec
push
jg
adc
jle
cmp
fldl
arpl
fldt
or
mov
ss
dec
in
out
pushf
sbb
imul
iret
repnz
push
xchg
shl
imul
mov
cwtl
jns
adc
insl
popa
mov
sahf
xlat
pop
lret
push
loop
sbb
es
or
insb
sub
push
pop
and
pop
lods
dec
xor
stos
adc
dec
push
pop
pop
out
xor
imul
cmp
push
rcll
insl
out
loop
cli
push
adc
cld
out
xor
ret
stos
jle
mov
adcl
test
popf
add
pop
dec
pop
pop
sbb
adc
sub
nop
popw
lods
push
jb
xor
rep
repnz
and
jae
daa
and
jb
sub
xor
stos
xchg
xor
ljmp
cmpsb
ficoml
lock
dec
dec
inc
lods
sub
bound
movsb
ficoml
lcall
mull
out
jo
push
hlt
inc
jo
cmp
xchg
pop
push
add
sbb
ss
out
cli
lea
xchg
lcall
dec
fsubr
mov
sbb
dec
dec
and
xchg
jp
cmp
lods
mov
push
into
jmp
mov
pop
jo
std
or
or
push
add
mov
xchg
sbb
mov
mov
ss
std
into
ja
inc
pusha
sub
sti
hlt
jns
pusha
push
lahf
push
cmpsb
xor
test
or
mov
data16
movsl
adc
jl
pop
or
mov
jg
out
in
neg
mov
pushf
inc
repz
lret
inc
adc
add
testb
dec
rclb
sub
pusha
dec
add
jmp
jno
xchg
pop
lret
jns
inc
out
les
jns
sub
add
repz
popa
pop
lods
pop
andl
fcoml
fdivr
or
mov
sub
mov
popa
xor
outsb
or
pop
jae
js
das
cmp
push
jne
inc
in
pop
jle
jmp
sbb
cmpsb
inc
lret
insb
stc
or
pusha
div
popf
dec
sub
out
outsl
dec
inc
loop
sub
orl
jae
sub
or
ror
jo
bound
sub
mov
mov
test
int
xchg
popf
or
pcmpeqw
enter
out
sub
mov
xchg
adc
mov
adc
popf
pop
scas
mov
mov
out
lret
add
les
lea
push
andl
ffreep
sbb
cwtl
out
data16
arpl
mov
cltd
sahf
pop
xor
jle
or
shrb
cmp
sbb
jno
leave
sbb
cmp
ds
loopne
sbb
jmp
mov
sub
sti
and
xor
popf
dec
jecxz
ret
push
push
lea
push
aad
loopne
push
cli
add
imul
hlt
cld
mov
push
mov
dec
push
mov
enter
ret
nop
adc
mov
add
adc
outsb
and
mov
cmpsl
and
cmp
add
sub
pop
imul
mov
push
dec
adc
xchg
mov
xor
ffreep
fsts
push
cwtl
imul
push
fsts
xor
icebp
out
popa
movsb
insl
xor
pop
in
pop
jnp
mov
jbe
adc
ja
push
rclb
adc
push
test
in
dec
jae
add
jmp
pop
lret
ret
sbb
jge
sub
fsubp
and
add
in
mov
dec
fldl
mov
jmp
sbb
and
addr16
std
sub
lret
mov
adc
adc
push
sub
lock
pop
outsb
inc
fisttpll
arpl
or
imul
sub
xchg
mov
and
mulb
inc
cmpsb
movsl
aas
push
ss
sbb
mov
repnz
out
add
xchg
imul
je
fisubl
sbb
jno
je
cmp
jbe
or
jecxz,pt
and
jl
and
jnp
cmc
jp
cli
xor
movsl
fwait
sbb
xchg
add
add
hlt
aas
pop
out
mov
cli
je
filds
test
es
xchg
xor
mov
push
add
movsl
mov
sub
loope
out
out
inc
mov
xchg
mov
mov
pop
adc
stc
aam
fsubr
ss
jbe
clc
mov
jno
add
scas
sub
jbe
clc
lods
out
inc
mov
push
xchg
or
popa
sbb
in
into
lret
xchg
jb
scas
lods
jnp
sbbb
mov
cmp
hlt
pop
add
mov
sub
sbb
mov
cld
dec
xor
xchg
cmp
jbe
push
and
ret
loop
push
ja
icebp
scas
stc
je
in
xchg
lock
mov
fbld
lock
dec
pop
dec
bnd
insl
shr
das
jl
inc
mov
xchg
mov
or
std
iret
push
loope
stos
sahf
xor
mulb
cld
sahf
or
add
adc
stos
mov
mov
arpl
or
lock
int3
xor
fwait
cmp
loop
sub
ljmp
xor
fsubrl
jle
testb
sahf
mov
divb
ds
or
repnz
jno
pusha
test
jo
or
cs
sbb
cmp
imul
sbb
push
clc
inc
out
lret
pop
insb
imul
xor
adc
fsubrl
enter
sbb
cmp
sahf
mov
xor
icebp
mov
cwtl
adc
hlt
or
and
adc
mov
sbb
push
adc
or
xor
pop
pop
jg
pushf
mov
inc
pop
sahf
cmp
and
scas
test
cmp
rcll
lock
call
ficompl
rorb
pop
xlat
fimull
pop
sti
imul
outsb
sbb
sahf
movsl
out
pop
fucomip
mov
sub
jmp
jo
js
movntq
pop
inc
mov
out
mov
lahf
pop
pop
xchg
mov
popa
jl
inc
mov
sarb
dec
jmp
in
scas
hlt
sti
add
xchg
mov
mov
sarb
xchg
sbb
lods
xchg
cld
sbb
fisubrl
xchg
mov
out
fcomip
inc
cmp
push
out
in
mov
mov
rolb
push
aam
aaa
sbb
or
sbb
dec
inc
test
inc
cli
or
addr16
xchg
das
popa
or
jae
fwait
push
fldcw
jae
mov
pop
in
dec
lret
icebp
mov
hlt
loopne
cmp
xor
ret
ja
subl
xor
in
dec
lea
stos
ret
pop
lds
inc
addb
sub
pop
pop
inc
jp
outsl
mov
jo
mov
ficompl
jl
mov
push
add
xor
les
insb
sub
aam
dec
das
mov
fisubrl
pop
stos
and
scas
call
insl
inc
push
ret
clc
mov
andb
push
cmpsl
mov
mov
xchg
add
std
push
loop
mov
xchg
push
stos
std
xchg
mov
insl
cmc
adc
fstl
xchg
or
popf
ljmp
ds
push
nop
mov
push
mulb
cmpsl
and
in
xlat
cmp
or
cmp
and
xor
add
std
xchg
lea
xor
or
push
bound
imulb
movl
push
push
mov
jo
xor
xchg
inc
shll
int3
js
jbe
loop
xchg
mov
sbb
imul
lcall
in
pop
xor
shl
dec
cltd
jp
cmp
jecxz
xor
cltd
mov
lods
sub
insb
aad
and
xchg
rcll
adc
loope
add
pop
sub
out
into
flds
mov
fldcw
mov
mov
pop
sbb
leave
lds
pop
adc
hlt
loope
dec
jmp
testb
pushf
insl
mov
movsl
mov
push
cld
test
xor
loopne
cltd
clc
out
fmuls
shlb
nop
xchg
dec
mov
imul
cmp
lods
gs
testl
ja
cmp
iret
jg
stos
xor
fstpt
lret
call
mov
ret
call
sbb
xchg
cmpsl
std
in
andl
imul
jmp
inc
cli
sbb
test
fistl
std
mov
add
outsl
int
pop
inc
cs
add
sub
sub
pop
push
outsb
popf
push
or
ljmp
or
fldl2e
xor
jmp
add
adc
addr16
push
sbb
ja
cmc
idivb
cmp
repnz
add
lret
or
dec
clc
dec
inc
mov
pop
aam
inc
imul
xchg
dec
ftst
pop
es
ds
pusha
test
cld
andl
div
adc
sbb
mov
dec
rorl
cmpsb
mov
into
mov
mov
xchg
lahf
and
push
mov
push
dec
xchg
cmp
fidivs
rcll
or
and
arpl
rorb
cmp
adc
ds
mov
dec
mov
push
pop
lea
out
cmc
ljmp
sub
adc
icebp
mov
aaa
or
ret
or
test
iret
clc
iret
imul
cli
jns
jl
pop
out
cmp
mov
scas
insb
fucomp
xor
sbb
jae
iret
adc
fs
js
pop
xor
adc
add
mov
dec
lcall
and
cltd
int
mov
adc
inc
sub
arpl
adc
stc
data16
push
push
lret
stos
lods
cmp
add
lds
mov
in
stos
jl
cltd
cmp
ret
data16
xchg
mov
stc
cltd
or
mov
or
das
lret
les
cmpsb
int
inc
sti
cmp
jno
scas
stos
pop
mov
mov
push
adc
imul
fyl2x
xchg
sub
call
cmpsl
mov
into
jnp
xchg
pop
sub
mov
mov
xchg
add
lcall
xchg
imul
jb
mov
test
mov
cmp
sahf
cmp
stc
stc
xorb
inc
sub
or
pop
mov
ljmp
jo
cmp
push
lods
cli
das
pop
pop
xchg
sbb
mov
inc
or
std
negb
ret
and
xchg
push
movsl
mov
cmp
sub
adc
jae
pop
sub
int3
fs
mov
and
mov
xor
jne
mov
jns
xchg
idivb
pop
int
push
lea
push
fnsave
cmp
push
leave
xor
insb
mov
pop
sahf
arpl
nop
sbb
and
push
test
mov
mov
dec
scas
cmp
push
inc
cmpsb
mov
sub
stos
or
xchg
daa
data16
cmp
mov
xchg
jo
mov
scas
ret
fwait
sahf
push
and
jp
pop
psadbw
insb
pushf
mov
mov
sar
out
dec
mov
leave
push
xchg
or
or
decb
leave
int3
inc
and
bound
mov
add
daa
repnz
jo
xchg
std
unpckhps
mov
mov
int3
es
dec
push
mov
incl
lret
inc
cmp
sub
dec
sahf
rcrb
mov
jecxz
mov
icebp
and
shll
mov
scas
je
mov
mov
jecxz
stos
xlat
mov
or
frstor
imul
and
jne
out
lods
lea
xchg
ficoml
test
or
int3
cmp
stos
push
xchg
jge
dec
dec
mov
push
mull
outsl
loop
jmp
scas
inc
inc
and
insb
out
sarl
add
push
jne
inc
cli
and
nop
cmp
imul
cli
test
rorl
mov
int3
adc
jl
push
mov
cmp
or
addr16
adc
fs
leave
psubw
into
sti
xchg
imul
das
lahf
arpl
dec
or
xchg
jno,pn
dec
leave
mov
cs
pop
jp
rcll
add
jecxz
add
daa
test
out
xor
mov
pop
dec
push
lock
jno
jnp
sub
adc
or
adc
mov
ret
cmp
inc
xor
cmp
and
pop
lock
sbb
inc
out
inc
je
gs
adc
sbb
data16
jns
in
mov
loope
lea
scas
or
add
inc
inc
mov
shlb
imul
add
dec
rcrb
outsb
xor
cmpsl
sbb
xchg
sub
push
aaa
pop
cmp
push
out
arpl
inc
js
mov
mov
jmp
orb
mov
arpl
cmp
loopne
cmp
mov
and
pop
jp
jle
sub
stos
lret
sar
lret
rorb
push
rolb
ds
sub
sbb
mov
bound
mov
fcomip
mov
push
pop
ss
push
loope
imul
pop
cs
jbe
sbb
and
mov
inc
or
js
mulb
sbb
loopne
addr16
mov
and
xor
js
pop
icebp
or
or
mov
adc
inc
in
mov
rcr
call
jmp
adc
fcoml
or
int
fs
mov
lret
lock
mov
cmp
sub
cmp
stos
in
xchg
and
les
xchg
jns
mov
jmp
cwtl
push
dec
fstp
insl
lds
mov
stos
fs
cmp
repnz
adc
dec
ss
mov
sub
push
inc
mov
cltd
in
mov
mov
pop
hlt
fldcw
xchg
pusha
sar
jo
mov
call
sti
push
push
das
pop
add
and
insb
xor
iret
cld
mov
add
cld
out
rclb
push
cmpsl
push
xchg
pop
clc
and
push
adc
mov
sahf
pop
xor
cmp
adc
in
aam
push
inc
test
add
es
mov
pop
mov
push
pop
fstl
lods
testb
lcall
roll
mov
sub
outsb
jmp
pop
mov
es
lods
push
xchg
lods
fstl
xchg
or
scas
in
call
mov
sub
push
and
mov
adc
insb
xchg
mov
mov
pop
mov
or
jmp
incl
insb
mov
xor
adc
inc
call
pop
sub
les
dec
pop
out
test
notb
lock
pop
xor
mov
push
lock
pushf
push
cmp
sub
subl
dec
ficomps
dec
test
sbb
test
lret
xchg
fs
das
xchg
adc
test
mov
dec
jge
mov
gs
loop
shrb
and
mov
sub
cmc
jnp
mov
pop
or
mov
push
push
xor
jae
xchg
sbb
adc
lret
sub
jo
push
inc
push
and
lods
jmp
xor
sub
push
aaa
lock
push
or
adc
jecxz
inc
sub
push
in
fwait
cmp
bound
les
xlat
stc
dec
inc
lahf
sbb
mov
mov
cmp
adc
push
xchg
or
mov
push
cmp
mov
cmp
jno
lods
repnz
shrb
aam
pop
pop
xlat
xchg
push
xchg
adc
lcall
mov
xchg
into
into
cmp
mov
lods
mov
loopne
and
popf
outsb
inc
xlat
aas
and
and
cmp
and
jg
fs
rolb
sub
jmp
sub
pop
push
or
repz
daa
cmp
imul
jo
mov
and
addl
dec
jmp
push
xor
rorl
call
sub
xor
lea
cltd
xchg
call
adc
push
sub
push
stos
cmp
stos
mov
fdivr
shrb
test
leave
mov
or
cmpsl
and
data16
xchg
int3
out
sbb
xchg
add
jae
fs
jo
jns
fucom
test
fidivl
mov
jne
sub
pop
pop
inc
sub
sub
xor
push
lret
fnstsw
scas
sbb
movsb
push
shll
ret
lahf
mov
sub
sti
faddl
jo
test
in
add
mov
jbe
push
sub
or
clc
loop
loop
cmpsb
xchg
push
cmpsb
add
pop
xor
stc
push
cli
daa
or
and
lea
addb
push
jae
stc
sbb
cmpb
mov
ljmp
outsl
add
mov
out
jp
nop
fstl
dec
cmp
icebp
fsts
data16
mov
lods
sti
and
rorb
pusha
push
cltd
daa
or
ss
insl
inc
icebp
pop
lock
and
pop
adc
in
lods
insl
mov
out
test
inc
pop
fisubrs
pop
or
mov
mov
repnz
pop
in
mov
dec
pop
pop
xor
add
push
sub
enter
insl
call
stos
pop
push
lds
arpl
push
insb
mov
loopne
lahf
add
out
out
mov
sbb
test
int
lock
fdivs
cmp
out
fdivrl
shrb
mov
cmpsl
sub
mov
ss
add
jne
pusha
ds
jae
push
xor
sti
test
fldt
ja
sub
rcrl
pop
out
pop
mov
les
cmc
mull
xor
lea
sahf
mov
daa
es
fistpl
int3
outsl
imul
sbb
xlat
dec
mov
dec
mov
inc
int3
roll
mov
mov
adc
push
out
dec
sti
or
addr16
and
je
xchg
pop
push
popa
call
pop
push
mov
inc
jns
mov
push
sub
lds
aad
cmp
pop
into
push
int
inc
inc
ret
push
sub
hlt
adc
push
or
dec
sahf
mov
stos
lahf
popa
xlat
rcll
les
push
les
xchg
adc
call
aaa
out
mov
push
movb
test
cmp
movsl
es
jmp
stos
cli
adc
test
in
pop
mov
in
cmp
dec
add
imul
sbb
jae
adc
jmp
mov
inc
mov
mov
xchg
mov
je
adc
mov
mov
push
jp
imul
cmp
mov
lret
aas
into
xchg
xchg
insl
lret
push
repnz
pop
cmp
insb
cmp
sub
jmp
mov
les
or
cmp
lahf
lds
test
pushf
ja
or
pop
jp
pop
mov
fildll
lahf
push
pop
shr
pop
add
mov
push
or
test
jl
lahf
fwait
xchg
pop
push
icebp
inc
pop
mov
mov
jl
cmp
movsl
jecxz
add
cmp
pushf
xchg
or
out
movsb
aas
or
mov
adc
add
cmp
fidivl
leave
outsl
adc
inc
jecxz
aad
pop
jo
popf
pop
addr16
fdivl
dec
or
pop
stc
rdmsr
pusha
call
inc
or
rcll
insb
jno
xchg
jge
mov
xor
sbb
mov
jp
sti
stos
add
lock
ret
push
mov
out
push
scas
repnz
ret
mov
sbb
push
stos
imul
or
adc
lret
in
aad
movsb
cmp
add
out
mov
and
ret
pop
loop
xchg
dec
std
push
push
xchg
bound
fists
and
mov
cs
mov
xor
push
push
out
imul
dec
repz
psllw
push
js
push
ror
xchg
mov
pop
std
out
out
mov
pop
dec
dec
fnstsw
dec
int3
xor
cmp
dec
mov
jmp
shll
addr16
push
mov
inc
std
hlt
sub
push
lret
aas
mov
cwtl
and
outsb
test
jo
ljmp
sub
push
or
fisttpl
or
fxch
mov
fistps
jle
movsl
push
cmpb
push
xchg
movl
xor
mov
or
daa
es
or
pop
sar
clc
call
lea
mov
ja
jnp
jp
inc
pop
cwtl
mov
jnp
pusha
das
inc
sub
scas
xchg
push
mov
jle
mov
rcll
fldenv
testl
pushf
cmc
mov
sbb
push
push
insb
clc
xor
das
dec
fcompl
inc
and
mov
dec
shlb
fstps
mov
push
dec
and
mov
inc
stos
sbb
pop
cmp
pusha
sbb
adc
test
push
notb
mov
fldl
les
adc
lret
cld
xchg
cmp
push
jle
lods
pop
mov
ja
into
mov
out
addl
out
lcall
and
orb
add
out
inc
dec
adc
cmp
test
mov
addr16
repz
daa
or
pop
adc
adc
and
int
shlb
xor
sbb
or
mov
fadd
mov
mov
cli
pop
xchg
adc
cli
adc
ja
add
xchg
jo
mov
sbb
idivb
cld
and
out
jae
popf
xor
je
adc
aad
jo
mov
inc
push
sbb
mov
dec
push
push
mov
adc
lea
inc
sti
adc
dec
adc
insb
xor
out
int3
test
sti
jp
mov
cmpsl
pop
xorl
dec
test
out
adc
adc
sbb
sbb
xor
xor
mov
push
jge
icebp
dec
adc
dec
sbb
fnstcw
es
push
outsl
shlb
sub
ffreep
jge
pop
or
dec
or
xchg
xor
std
or
dec
fcomps
and
xchg
mov
ds
and
xor
fwait
test
dec
in
sub
je
ljmp
dec
mov
js
xchg
xchg
jae
hlt
inc
and
ror
and
fildl
push
adc
out
pcmpgtd
or
cmpsl
jae
popf
jnp
adc
in
push
mulb
lods
imul
sub
mov
push
xchg
ja
xor
setne
stc
jno
fisubl
push
or
jb
push
lret
dec
mov
fists
cmp
in
fldcw
clc
jge
mov
ljmp
push
sbb
xchg
sbb
cmp
sub
das
push
dec
mov
pop
mov
js
in
popf
jecxz
jmp
insl
popa
sahf
pushf
xchg
test
mov
sbb
or
pop
pop
and
sbb
imul
outsl
das
or
jae
and
pushf
xlat
test
push
movsl
push
push
mov
jne
out
mov
xor
sub
loope
insl
push
add
and
cmpsb
mov
push
inc
ds
stc
xchg
jbe
mov
sub
lock
mov
mov
fwait
ret
xchg
cltd
adc
push
push
cmc
adc
das
in
dec
pop
and
cmp
arpl
cmc
add
pop
addr16
insb
cmc
pop
adc
cmp
fidivrl
lahf
jge
imul
cltd
icebp
cmp
int
jmp
and
lods
cmp
mov
mov
dec
rorl
pop
repnz
add
cltd
mov
mov
pop
inc
sbb
jne
cmp
cmpsl
and
and
lds
push
insb
lods
test
ss
or
or
add
ds
aaa
cltd
out
and
or
push
mov
cmc
loop
mov
sti
sbb
adc
jl
inc
sbb
mov
or
or
mov
sbb
xchg
xchg
push
sub
sub
cmpl
jbe
in
xor
jg
ficomps
pushl
xor
add
ljmp
imul
js
movsb
pop
jecxz
adc
setge
jno
xchg
sub
ds
mov
fldl
xchg
jnp
into
ljmp
add
inc
nop
adc
jo
iret
iret
xor
add
cli
jae
or
jnp
daa
icebp
leave
sbb
ja
sbb
pop
packsswb
jle
and
fwait
mov
mov
or
push
test
js
scas
stos
mov
aaa
daa
testl
or
ds
iret
mov
mov
mov
sbb
lea
mov
jl
nop
and
pop
bound
adc
push
ss
adc
stc
and
push
sbb
outsb
add
jecxz
aad
ret
ljmp
xchg
adc
xchg
push
sbb
push
pop
imul
insb
push
mov
dec
je
mov
jno
out
icebp
or
sarb
jno
addb
sub
add
adc
xchg
mov
mov
movq
nop
or
push
outsl
ret
repz
ror
test
test
pop
mov
push
jno
lret
cltd
mov
xor
push
ror
stos
sbb
fsubr
jmp
xor
pop
in
dec
jg
adc
sub
ja
fcomip
mov
gs
sbb
arpl
jo
push
fstp
fistpll
mov
test
pop
cs
pop
into
cmp
cmp
sahf
iret
lret
xchg
fwait
inc
mov
test
ja
in
bound
pop
fsubrs
gs
lret
rcrl
stc
sub
pop
or
popa
out
xchg
lcall
in
out
leave
mov
imul
xor
rcll
sti
fcmovu
mov
nop
pop
repz
jge
cmpsb
mov
add
xchg
mov
mov
fcoml
fildll
mov
mov
inc
clc
sbb
aam
inc
push
xor
pop
cld
outsl
mov
or
xchg
pusha
mov
stc
and
dec
aaa
ds
test
mov
inc
and
mov
cmp
mov
notl
cmc
or
sub
adc
sub
ljmp
fstl
decb
test
in
mov
mov
mov
pop
jb
cmp
push
dec
test
jns,pt
sub
jg
pop
inc
fcmove
int
mov
popf
pop
fldcw
pop
pop
mov
fcmovu
xlat
fsts
inc
mov
fidivl
pop
enter
ds
inc
icebp
cmp
and
lock
pop
add
dec
push
arpl
or
pusha
pop
cmpsl
lds
insb
mov
push
xorl
xor
stos
or
mov
mov
jecxz
mov
xor
mov
pop
es
repnz
xor
cmpxchg
cmp
adcb
push
sub
ja
pop
push
mov
lods
addl
sahf
and
add
nop
scas
jb
xor
nop
jecxz
mov
or
aam
and
sub
lret
rcl
dec
fisubrl
push
cltd
addr16
sbbl
mov
aaa
popa
or
bound
mov
mov
jno
stos
imulb
pop
jo
or
sbb
fisttpll
adc
cld
or
pop
int
xor
xor
je
fldl
lods
popf
or
inc
cmp
jmp
stos
mov
inc
jno
cwtl
pop
push
add
jp
adc
pop
cmc
jge
sub
mov
in
lea
insl
xchg
js
imul
add
lods
xor
cmpsl
or
xchg
das
push
scas
cmp
add
mov
dec
and
cmp
aad
adc
into
sbb
mov
rol
data16
insb
push
xchg
outsb
dec
mulb
pop
xor
xlat
dec
inc
jae
insl
fsubp
mov
mov
jg
addr16
je
fsubrl
fwait
mul
fs
lods
pop
test
or
ja
ja
cli
data16
arpl
mov
push
lds
jns
int
movsb
ss
push
insb
shlb
sub
sar
fsubl
loope
ffreep
test
cmp
gs
push
divl
sbb
arpl
mov
into
mov
mov
bndldx
mov
nop
cs
mov
push
jle
mov
and
pop
dec
jl
xor
test
mov
sub
jge
adc
pop
ja
or
mov
cmp
mov
mov
in
jl
and
cmpsl
arpl
sbb
sti
dec
push
and
inc
flds
imul
aaa
in
add
scas
scas
or
pop
std
ret
or
xchg
nop
sbb
insl
xor
or
cmp
jns
push
push
cli
sub
cmpsl
xor
fsubl
xor
in
call
sbb
sbb
cmc
test
outsl
or
test
mov
mov
daa
lods
push
out
xor
sub
call
rolb
outsl
mov
out
or
lock
test
or
movsl
push
leave
mov
cmp
sbb
scas
mov
loop
fcomi
xor
scas
push
fwait
inc
fsubr
xchg
mov
scas
fs
mov
xor
fs
mov
dec
sbb
cmpsl
cwtl
xchg
xchg
ss
enter
loop
jbe
ret
xchg
into
sbb
mov
lea
into
inc
push
jp
es
and
jl
movsl
sbb
orb
movsb
sub
enter
add
pop
mov
pop
int3
sub
push
lock
or
sbb
inc
shrb
push
pusha
sahf
es
lret
or
xchg
pop
inc
xchg
cwtl
outsb
cmp
inc
cmp
jno
mov
cmc
xor
lock
sti
fstp
aam
fildll
push
daa
xor
mov
clc
lods
xchg
jns
bound
mov
mov
fidivrs
xchg
movsb
and
sbb
adc
cwtl
cmpsb
das
xchg
pop
cmp
inc
sub
or
bound
inc
stos
mov
cs
adc
jns
sub
pop
test
xabort
mov
lds
jecxz
xchg
xchg
adc
push
sahf
ds
and
pop
dec
pop
test
jle
dec
xchg
and
pop
or
mov
push
push
into
into
lret
adc
je
xlat
mov
adc
mov
cmpsl
sub
adc
cli
push
popf
pop
or
add
mov
icebp
out
adc
or
aad
sbb
xchg
dec
dec
repnz
into
xor
cmp
insb
fldenv
push
in
popf
push
imul
imul
insb
jnp
xchg
je
notl
inc
gs
inc
jg
mov
adc
xchg
sbb
popa
xor
and
in
add
gs
pop
decb
mov
fdivrs
xchg
dec
push
fsubp
out
sbb
lcall
mov
mov
movsb
sub
shrl
xchg
push
mov
sub
or
dec
pop
sub
add
mov
leave
mov
loope
adc
xchg
cmc
insb
pop
aam
mov
test
imul
sub
push
xchg
xchg
sub
xchg
cmpsb
out
cmp
add
pop
inc
xor
outsl
push
cs
imul
repz
ljmp
sub
ljmp
int3
push
dec
sbb
or
xchg
fsubrs
dec
loope
push
mov
decb
jne
fisubrl
mov
sub
sbb
mov
sbb
ds
and
dec
sub
mov
push
adc
dec
mov
enter
xor
sub
cmpsb
pop
xchg
inc
jnp
and
cmpsb
lds
sbb
xchg
pushf
incb
inc
lods
lock
int
movsb
out
shlb
mov
cmp
push
aam
outsl
cli
lcall
mov
enter
mov
mov
mov
andl
imulb
es
or
es
pop
das
pop
ficoml
mov
out
loope
call
cmpsb
stos
int3
addb
xchg
enter
or
xchg
mov
in
inc
mov
inc
xchg
xchg
scas
push
push
xchg
out
and
dec
imul
or
das
adc
add
mov
sub
call
xor
or
lock
and
jne
push
mov
mov
push
jbe
out
xchg
cld
divl
subl
mull
test
jbe
or
mov
sub
and
repnz
ss
mov
or
daa
cli
xor
out
and
cmp
pop
lret
stos
int3
dec
pop
pop
xchg
sub
imul
add
add
outsb
mov
lock
pushf
add
or
dec
sub
dec
stos
cwtl
cmp
es
jecxz
leave
mov
insl
or
xor
test
mov
jns
gs
adc
xchg
sbb
fnstenv
or
mov
or
dec
inc
mov
pop
lcall
xor
ss
loopne
out
jo
cltd
adcb
scas
xor
adc
mov
outsl
mov
mov
dec
ret
ss
jmp
cli
fnstcw
mov
push
lahf
sbb
jmp
scas
clc
rorl
cmpsl
outsb
push
and
fidivrl
rorl
into
addr16
pop
pop
js
fildl
cmc
dec
sbbl
jecxz
cmpsl
jge
jp
lret
pop
xchg
mov
pushf
bound
es
cmp
jae
mov
das
ret
cmp
and
xor
sbb
mov
pop
in
add
lods
in
xor
push
sub
gs
pop
int
sub
cmpsb
insb
sub
fst
pop
jle
jne
mov
xchg
fmuls
add
in
sub
xchg
jb
inc
mov
clc
dec
fldcw
movsb
cli
daa
outsb
xor
js
inc
div
push
xchg
testb
xor
cmp
ret
xor
mov
pop
orb
dec
inc
mov
jb
ret
pop
or
and
popf
movsl
push
cmp
js
fstpt
sub
cmpsl
imul
fbld
xchg
add
add
push
mov
add
jecxz
cwtl
push
lret
or
iret
insl
sbb
or
xchg
sub
sti
cmpsb
sbb
push
popl
xchg
sbb
xchg
ret
decl
mov
loope
inc
inc
cmc
dec
hlt
or
popf
adc
inc
sbb
adc
or
dec
sbb
adc
or
data16
adc
loope
push
push
mov
test
ret
ret
subb
sub
inc
dec
cmp
popa
insl
jno
xor
jno
xor
dec
or
out
dec
xchg
dec
xchg
xchg
fcmovnbe
add
xchg
add
jp
dec
outsb
pop
nop
xchg
mov
xbegin
or
mov
mov
xchg
inc
sub
fsubs
jl
js
mov
or
sub
bound
adc
fildl
loope
xchg
jae
jbe
fcmovne
lods
xor
push
mov
lcall
mov
adc
jmp
jb
push
pop
pop
sti
fwait
ret
test
movsl
mov
push
jp
sbb
adc
stos
stc
mov
js
cmp
cltd
ja
ljmp
lock
pop
and
ror
adcb
aam
imul
xchg
inc
fimull
mov
aas
jge,pt
dec
cmc
insb
out
xor
pusha
std
cli
pop
xor
sbb
ret
mov
icebp
in
and
pmuludq
dec
in
mov
xchg
or
call
and
fisubrs
mov
out
mov
push
add
or
dec
shll
popfw
pop
sub
push
es
inc
mov
pop
sbb
mov
mov
or
outsl
insl
icebp
data16
mov
sbb
lret
mov
pop
jmp
xchg
cmp
hlt
jmp
lret
sbb
lret
or
inc
push
movsb
xchg
fmuls
cvtps2pi
mov
xor
pop
mulb
push
jbe
xor
mov
imul
and
jne
out
clc
sub
ss
push
loope
jb
or
pop
dec
push
sbb
xchg
push
inc
sbb
inc
inc
add
add
mov
imul
dec
cmp
push
dec
pop
sub
adc
lock
pop
cmpsb
sbb
mov
jno
lret
outsb
test
inc
and
xor
cmpsb
pushf
rol
leave
ret
mov
inc
push
andl
adc
inc
xchg
cmp
inc
mov
cltd
sub
lcall
mov
jne
dec
dec
push
aad
xchg
or
push
aad
repz
fidivrs
jno
lods
mov
stc
in
pop
add
sub
stc
imul
adc
clc
add
push
cwtl
idivl
aam
pop
sbb
movsb
push
xlat
shr
clc
xchg
or
jp
imul
pop
daa
jne
mov
xor
fwait
cmpsb
xchg
sub
dec
js
jmp
inc
push
and
daa
or
leave
cmpsb
ja
popf
into
or
inc
lcall
mov
dec
push
aas
add
cmp
push
sarl
lahf
pushf
cltd
je
or
mov
mov
add
nop
mov
insb
incl
dec
and
sbb
dec
xchg
mov
cs
cmp
dec
inc
scas
dec
add
sub
sub
dec
into
scas
mov
js
mov
dec
xor
movsb
pop
pop
jns
dec
or
mov
mov
pop
loopne
or
adc
push
pop
cmc
jns
and
xchg
inc
or
addr16
xchg
inc
adc
movsl
out
into
mov
jmp
sub
xchg
dec
mov
or
in
test
lret
scas
arpl
stos
jle
mov
pop
ret
jge
cmc
es
dec
cmc
loopne
sub
jnp
out
xor
dec
lds
out
lock
sub
mov
add
inc
pop
push
es
mov
and
sub
jb
fcoml
les
lcall
push
sahf
push
dec
or
rcrb
xor
adc
xor
lds
testl
inc
or
cmp
sti
aas
pop
mov
out
add
jo
repnz
lods
outsl
or
add
adc
int
mov
nop
int
js
insw
lcall
pop
cmpsb
add
pop
mov
pop
popf
jmp
daa
lret
cltd
lock
shll
mov
movsb
cmp
dec
mov
adc
ja
test
sahf
sub
arpl
test
xor
push
cmc
std
insl
jle
das
mov
mov
jno
loope
lret
pop
scas
sub
pop
xor
mov
sub
enter
arpl
lcall
pop
dec
mov
js
shl
adc
add
sar
cmc
mov
dec
clc
movsl
pop
das
push
add
xor
out
jns
push
xchg
das
vmaxps
xchg
mov
cmpsb
aaa
insl
sahf
pop
dec
faddp
stc
and
push
sbb
or
repz
mov
out
out
inc
testl
cli
or
mov
daa
xchg
adc
jb
jecxz
cli
sarl
mov
flds
jl
sub
sub
sbb
stc
xchg
push
mov
dec
lahf
aas
sahf
sub
or
jb
out
insl
or
in
call
ret
inc
dec
push
imul
je
add
lret
insb
mov
jbe
lea
xor
pop
scas
lea
mov
xor
scas
sub
push
ror
out
add
or
ljmp
inc
out
add
fimuls
jne
mov
and
ret
je
in
mov
or
out
xor
in
xor
push
mov
or
stc
icebp
mov
shrb
jle
xchg
mov
mov
dec
cmpsb
and
sub
inc
data16
in
lret
div
or
and
push
or
aam
mov
jbe
test
scas
xchg
sbb
aad
jle
push
pop
cmp
cs
loop
out
sub
lea
sub
jg
dec
pop
mov
push
call
xchg
cmc
xlat
or
cmp
dec
pop
filds
dec
xchg
stos
jnp
out
jmp
or
pop
sbb
jnp
mov
or
sub
scas
call
leave
mov
adc
xorl
add
fabs
ja
cld
ret
sbb
xchg
jnp
sarb
sbb
lds
xlat
imul
into
mov
jmp
pop
aaa
mov
and
pop
xchg
xchg
jne
into
and
pop
xchg
in
movsl
int
jp
sub
jl
sub
xchg
imul
xlat
sub
popa
clc
push
sbb
daa
mov
dec
sub
scas
test
inc
sub
stos
mov
cmp
and
cmc
jno
lea
mov
mov
mov
adc
dec
popf
mov
adc
dec
lahf
push
jl
stos
pushf
fdivs
addr16
movsb
neg
push
or
jecxz
inc
into
dec
test
sbb
xchg
adc
scas
push
cli
xchg
push
fidivrl
fcoms
enter
inc
loop
or
sbb
mov
mov
cmc
inc
out
rorb
icebp
dec
mov
movl
adcb
and
xlat
adc
insb
xchg
and
into
dec
pop
or
das
jg
es
sbb
or
repnz
clc
dec
aam
cli
sbb
inc
add
je
adc
push
sbb
les
jge
mov
dec
lea
add
pop
sub
xor
adc
dec
loop
xor
or
push
push
cmpsb
pop
mov
test
push
xchg
dec
test
add
es
mov
add
push
ljmp
adc
and
fsubrl
int3
or
loop
xor
out
jecxz
mov
or
jno
sarb
xchg
leave
test
mov
popl
cmpsl
fbstp
xchg
push
mov
test
lcall
call
xor
cwtl
gs
sbb
push
pop
stc
inc
stc
xorb
loope
pop
lods
stos
daa
sub
sub
bound
jp
add
fwait
cwtl
pop
imul
or
mov
or
sub
inc
push
inc
aad
dec
jmp
mov
adc
call
ficoml
aam
lods
cmp
mov
aas
push
push
sti
lods
sub
xor
scas
lcall
jg
cmpsl
inc
fs
push
dec
cli
sbb
sub
or
and
es
data16
or
pop
dec
test
cwtl
adc
aas
cltd
sahf
mov
in
push
jno
in
mov
push
xchg
mov
ret
or
and
insl
jmp
popl
fildl
mov
xchg
into
nop
sub
lods
mov
mov
add
sub
xchg
outsl
cltd
hlt
fbld
cmp
loopne
test
push
mov
into
int
mov
xchg
mov
sub
jno
clc
into
push
mull
pop
push
xlat
call
jmp
jne
pop
lcall
dec
shlb
push
cmp
jp
roll
mov
jno
cltd
pop
out
roll
inc
xor
frstor
pop
ljmp
insl
and
cmc
sub
stos
aaa
nop
setp
or
in
lret
push
fsubrs
or
dec
cmp
mov
mov
scas
lea
cld
and
xchg
jnp
push
fists
mov
sub
push
jg
mov
insl
rorl
jg
ljmp
or
pop
pop
ret
push
pop
lret
adc
sub
pop
dec
clc
arpl
push
or
or
inc
xor
leave
push
roll
xchg
add
and
das
data16
dec
dec
idivl
jbe
mov
jnp
popf
or
std
xchg
data16
ret
mov
mov
rcrl
addr16
aas
mov
clc
xor
sbb
rcrl
loopne
mov
push
test
lods
mov
icebp
add
xchg
push
cmp
ret
in
fs
adc
xor
mov
fsubrl
pusha
shrl
and
stos
insl
mov
outsb
mov
dec
clc
js
and
or
xlat
jbe
lret
mov
sbb
lahf
inc
or
jg
push
fdivl
or
lock
loopne
cli
cmovno
jo
adc
ljmp
nop
mov
pop
shrb
mov
data16
dec
mov
ret
and
movsb
out
lods
and
imul
dec
sub
jmp
aam
inc
rol
add
adc
adc
cli
scas
pop
xor
scas
mov
sbbb
dec
or
cli
mov
jnp
int3
push
adc
mov
lods
aam
test
fwait
add
imul
cltd
dec
stos
icebp
into
push
push
std
push
jno
lret
mov
fistpll
flds
rcrb
ljmp
stos
imul
and
leave
out
inc
adc
xchg
scas
movsl
and
mov
xor
bound
dec
es
lds
aas
cmp
into
dec
or
pusha
sub
into
dec
cwtl
js
sahf
push
into
jnp
sub
adc
adcb
mov
lds
push
iret
sbb
cmp
or
add
xchg
adc
je
jmp
int3
stos
xor
push
xlat
dec
sti
fimuls
cmpsb
xchg
mov
adc
scas
lea
in
inc
mov
data16
std
popa
lret
imulb
cli
cltd
fwait
pop
outsb
cs
cltd
stos
je
xor
cli
insl
repz
push
mov
iret
scas
adc
pop
xor
jns
in
in
mov
push
je
jb
sub
sub
lret
and
xchg
mov
es
popl
hlt
jge
inc
in
dec
test
jge
jge
and
or
xor
rol
cmp
inc
inc
adc
and
cmp
arpl
push
outsl
lods
cltd
loope
mov
mov
or
addr16
pop
aas
fistl
inc
scas
inc
out
push
sbb
adc
lock
shrb
pop
or
ds
scas
ss
into
test
orl
sbb
or
add
jno
push
jae
scas
cmp
pop
mov
and
mov
repnz
add
dec
aad
jns
arpl
cmp
mov
cmp
arpl
jbe
inc
into
fldcw
mov
pop
fisttpll
popf
stc
push
popf
out
sub
sub
pop
cltd
in
insl
arpl
test
test
cs
cld
addb
push
stos
rcr
mov
cmp
inc
rol
mov
cli
out
and
sti
inc
inc
addl
pop
pop
xor
adcl
jno
mov
inc
cwtl
sub
ljmp
jne
xchg
mov
cmp
mov
aad
fcmovnu
insl
mov
inc
test
xor
into
decb
mov
out
push
mov
jbe
sub
push
lods
sub
pop
dec
cltd
xor
outsl
movsl
scas
mov
cmpsb
imul
lods
sbb
dec
jmp
out
xor
ret
lcall
mov
in
sbb
in
ficomps
push
jp
pop
rolb
jb
ret
cmpsb
lods
mov
jns
popf
cmp
or
out
jmp
push
add
jne
sarl
lock
mov
add
xor
popf
adc
push
inc
shrl
int3
lea
out
leave
sti
jecxz
call
ljmp
sahf
inc
or
push
aad
inc
sub
aaa
sub
jbe
mov
jne
sarl
leave
sarl
sub
loop
adc
mov
jmp
lahf
and
sti
xlat
cltd
movsb
inc
dec
cmp
xor
or
data16
cmp
mov
addr16
or
xorb
jecxz
clc
sub
and
mov
jmp
pop
pop
popf
pop
stos
out
gs
addl
daa
fsubrl
roll
lods
loopne
mov
pop
inc
xchg
and
jb
fisubrl
jne
jmp
push
ret
mov
fiadds
jp,pt
mov
test
fldl
les
lods
cmp
or
sub
je
jmp
jne
jecxz
or
aam
jp
pop
sub
into
xor
mov
cmp
pop
lock
es
push
je
dec
pop
xchg
sub
aad
inc
stos
ja
xchg
mov
adc
pop
sbb
sub
inc
movsb
xlat
das
sbb
fwait
test
popf
ss
jb
cmp
and
jns
mov
roll
aad
mov
lea
mov
enter
mov
push
call
adc
test
pop
xlat
notl
adc
lea
call
loope
and
mov
fldl
mov
sahf
adc
pop
or
jnp
dec
sbb
das
xchg
out
aas
insl
cmp
lock
sbb
cmpsb
and
jl
aam
push
and
cmpsb
stos
andl
and
push
xor
pop
sbbb
repz
jge
enter
je
notb
test
lea
test
pop
dec
daa
mov
cli
cmp
test
out
jnp
stos
jmp
cmp
mov
loop
push
add
test
je
add
sub
push
dec
mov
jb
popf
mov
cltd
cmpsl
dec
out
xchg
sub
jno
leave
and
dec
out
in
clc
inc
mov
les
imul
sbb
movsl
pop
add
enter
fsubrs
xchg
mov
sub
out
imul
xchg
mov
data16
xchg
cli
cmc
xor
es
call
mov
leave
xor
unpcklps
in
insb
push
cltd
aam
xchg
dec
popa
adc
sbb
xor
into
jecxz
pop
add
outsb
jmp
int
stc
cld
iret
xchg
pop
mov
jae
jp
insl
lods
jae
addl
cld
mov
jge
pop
popf
mull
pop
popf
hlt
pop
dec
sbb
pusha
fwait
sti
jbe
mov
add
mov
pop
adc
shr
cld
sbb
push
dec
cwtl
xchg
dec
ret
insb
pop
jb
jno
imul
fcmovu
xor
jb
stc
outsl
nop
pop
mov
dec
jbe
aad
sbb
pop
ret
lods
inc
or
jno
mov
push
es
pop
cs
gs
xchg
aam
test
xlat
cmp
xchg
stos
adc
cmpl
mov
out
mov
xorl
add
push
test
push
push
adc
jmp
enter
jle
xchg
inc
mov
cltd
sub
jns
into
jb
sbb
dec
insb
or
xor
outsl
pushf
test
xlat
sub
lahf
pop
sub
ja
xchg
insb
out
jbe
xor
xor
jmp
lcall
sbb
scas
sub
fmul
arpl
and
xor
idiv
in
aad
lret
rol
std
push
mov
insl
mov
je
adc
fwait
bound
hlt
mov
cltd
notb
mov
shl
jecxz
pop
cmpsb
pop
add
add
push
movsb
dec
cltd
and
arpl
sbb
fst
arpl
xlat
leave
mov
hlt
adc
lock
inc
sbb
xor
jg
fdivs
xor
add
cltd
or
js
bnd
cmp
inc
xor
repnz
rcl
clc
inc
scas
out
xchg
xchg
sub
mov
div
shll
out
jno,pn
imul
shlb
jbe
push
push
push
in
pop
insb
push
inc
fwait
mov
cmpsl
iret
lcall
pop
test
in
ds
adc
push
cli
jbe
push
insl
pop
and
sarb
or
add
in
dec
fisttpll
jmp
enter
in
mov
dec
movsl
testb
dec
cli
sub
and
mov
in
fisubs
sub
and
push
sbb
pop
jle
scas
outsb
imul
push
mov
dec
data16
jl
imul
pop
push
imul
inc
lahf
popf
push
sub
es
test
fimuls
pop
testl
sub
sub
mov
inc
mov
sub
xchg
jbe
push
inc
add
mov
gs
insb
mov
push
jbe
mov
outsb
testb
sbb
out
inc
sbb
les
mov
outsl
in
mov
jle
xchg
mov
out
mov
push
imul
clc
js
or
movsl
cs
shrb
fcmove
pushf
scas
cmp
mov
cmp
or
push
adc
inc
and
and
sar
stc
cmp
ficoms
scas
arpl
and
popf
movsl
je
popf
pop
test
and
or
xchg
hlt
outsl
lahf
adc
inc
hlt
mov
out
jno
adc
mov
add
xor
add
hlt
aaa
out
xchg
pop
inc
lods
out
ja
mov
pop
adc
xor
fmull
lret
call
add
sbb
cs
inc
out
push
adc
sahf
jle
pop
fisttps
pop
lret
mov
shl
inc
push
push
punpckldq
sub
sahf
imul
pop
icebp
int
mov
fildll
xchg
pop
jmp
adc
dec
ret
and
xchg
out
hlt
daa
mov
in
push
and
mov
xorb
pop
xor
adc
sub
aaa
in
nop
jp
dec
or
inc
cmp
jmp
xor
cmp
sub
adc
repnz
sub
into
xchg
sub
jle
cwtl
adc
stos
movsb
fists
imul
push
enter
mov
das
mov
cs
dec
push
jle
shrl
jecxz
xchg
pop
mov
sbb
xchg
push
inc
adc
inc
push
jae
and
bound
aas
imul
inc
mov
pop
ss
shll
mov
testl
into
sbb
inc
es
cmp
push
daa
xchg
cmp
inc
inc
inc
imul
and
decb
movsb
push
cwtl
inc
pop
pushf
mov
cmpsb
xor
loop
or
cmpsb
sub
rorb
cmpsl
push
cmp
scas
popa
jbe
jne
std
addr16
jbe
loopne
or
dec
pop
jb
fwait
int
imul
ficompl
adc
jne
push
adc
stos
das
or
inc
jnp
mov
fimull
sbb
sub
call
fucomp
push
xchg
adc
out
push
data16
je
clc
adc
mov
mov
pop
in
xor
pushf
push
rcll
sbb
mov
push
hlt
ret
fdivl
popa
call
push
lret
rep
js
sub
dec
clc
stc
sub
subl
ret
sub
jo
fnstsw
sub
jle
lea
or
rcr
cmp
enter
lret
cmp
out
std
sahf
mov
lods
js
cmp
jecxz
in
in
lret
adc
adc
clc
or
in
push
and
sub
xor
sub
orl
xchg
adc
dec
lea
and
cmp
lds
jle
add
lods
out
add
fnstcw
fwait
xor
pop
cmp
or
pop
pop
xor
sub
pcmpeqw
jmp
push
nop
popf
test
pop
ficompl
icebp
cmp
jo
insl
cmp
mov
aas
sub
xchg
cs
xor
mov
mov
inc
fidivl
addr16
push
add
and
test
mov
divl
inc
addb
popa
addl
pop
dec
loope
pop
insl
mov
js
std
imul
pop
jb
shll
push
stos
cltd
hlt
rcrl
idivb
inc
cltd
stc
fs
leave
mov
jo,pt
mov
mov
push
cmc
cmpsl
jmp
push
fsubrl
add
push
cs
jecxz
into
xor
lret
xchg
add
mov
movsb
jo
call
xor
mov
jecxz
jne
mov
adc
sahf
xor
mov
cmp
jle
xor
test
adc
je
push
in
ljmp
ret
pop
fimuls
cmp
dec
insl
pop
mov
adc
pop
inc
sbb
mov
shl
hlt
ret
mov
sbb
push
imul
aad
add
jp
int3
and
aam
xor
mov
ret
jo
clc
or
sbb
cli
mov
test
pop
out
adc
xchg
cmp
dec
or
mov
dec
xchg
stc
mov
mov
adc
jge
jo
idivb
pop
add
jle
das
jl
sbb
jg
les
push
dec
push
or
cmp
shll
jo
inc
dec
adc
pop
pop
cmp
ret
into
jp
sbb
stos
je
add
add
sub
jp
mov
daa
push
xchg
repz
mov
insb
cmpsl
roll
and
mov
lcall
insl
push
jb
test
addr16
or
loopne
pop
movsl
bound
sbb
in
pushf
clc
xlat
add
insl
mov
inc
lcall
test
push
xor
adc
push
and
lds
add
sbb
adc
shll
cmpsl
mov
sub
pop
mov
jge
pop
or
jl
inc
in
fidivs
cmp
popl
xor
or
jmp
cmp
mov
aaa
dec
push
xor
mov
sbb
jbe
xlat
or
sbbb
out
sbb
dec
lods
xchg
clc
dec
aad
jbe
dec
push
sub
fildl
imul
mov
xor
ret
pop
or
or
inc
arpl
aaa
lock
adc
jno
pusha
stos
out
jbe
fmuls
jo
fldt
or
adc
stos
subl
inc
and
insb
int
cld
cmp
movsl
ret
mov
or
pop
mov
movb
movsb
xlat
mov
mov
jns
push
push
xlat
add
dec
push
push
sub
shrb
daa
xor
dec
jnp
cwtl
mov
and
jmp
lds
ss
pop
dec
inc
xorl
call
stc
fimuls
cli
sub
adc
in
pop
dec
sub
clc
dec
adc
dec
aaa
or
mov
or
lds
movsb
jl
insb
mov
cmp
push
mov
mov
xor
xchg
inc
in
out
or
lcall
pop
aaa
jnp
sub
add
scas
add
shrb
push
aad
sbb
sbb
inc
les
dec
cmp
es
mov
sarl
mov
iret
xchg
cmp
cmp
sbb
mov
pop
in
fsubs
inc
dec
ret
cmpsb
fdivrp
adc
adc
fidivrl
stc
lods
ficomps
push
imul
lcall
pop
xor
inc
outsb
mov
cmpsb
fmulp
into
test
mov
repnz
or
cmp
mov
mov
and
inc
cmp
pushf
cmc
pop
aad
repnz
or
mov
rcr
push
movsl
lock
bound
dec
mov
inc
into
data16
push
xor
es
or
orl
call
sbb
cmc
leave
add
pop
or
fcoms
stc
lods
div
imul
mov
sahf
aaa
leave
mov
mov
adc
or
stos
js
mov
push
mov
mov
cmp
mov
or
cmp
xlat
dec
insl
push
or
cs
ja
or
or
mov
call
push
mov
mov
icebp
jl
xchg
ja
sub
push
int3
dec
sahf
rclb
and
sub
jnp
int
xchg
push
jge
loope
inc
add
sub
mov
inc
cmp
jmp
mov
out
or
adc
test
inc
sbb
dec
push
ljmp
sub
dec
loop
adc
mov
push
lea
mov
and
cmp
call
and
mov
fmuls
xlat
sbb
mov
std
jo
mov
xorl
sbb
push
clc
pusha
lcall
inc
mov
inc
clc
enter
push
push
push
cmpsb
xchg
inc
nop
cwtl
movsl
inc
push
cltd
push
mov
xlat
cmc
adc
sub
in
xor
mov
decb
mov
outsb
or
lds
xchg
add
add
addr16
jno
pop
jg
jno
mov
pop
int
jle
jp
jmp
stos
cmp
or
mov
and
lret
sbb
xor
loope
inc
in
mov
psrld
movsb
sub
movsb
xchg
lock
add
xor
sub
xchg
cwtl
or
stc
je
fidivl
pusha
out
push
repnz
popa
daa
push
cmp
mov
les
push
mov
cmp
xor
xor
mov
js
mov
add
mov
lods
adc
inc
lods
adc
dec
sbb
jg
popa
ljmp
mov
jae
mov
gs
push
imul
jne
xlat
mov
gs
jns
cmp
das
mov
in
or
pop
dec
sub
cltd
jl
movl
sbb
aad
aaa
jmp
dec
lahf
lret
pop
ss
and
sub
test
inc
insb
pop
adc
or
xchg
add
push
pop
lahf
test
mul
inc
mov
and
jge
imul
xor
or
outsl
and
xchg
outsb
xor
mov
in
mov
cmp
xor
adc
sbb
pop
repz
xchg
pop
add
sub
test
inc
test
sub
cmc
xor
inc
mov
mov
mov
xor
adc
cltd
sbb
cs
jne
inc
je
mov
shll
ss
mov
rcrb
fldcw
movw
xchg
and
sbb
mov
std
dec
outsb
lret
dec
push
in
or
inc
jp
jo,pn
xchg
lahf
cmp
into
sub
xchg
pop
inc
movsl
adc
adc
xor
pop
lret
insb
mov
push
sbb
sti
dec
inc
mov
out
lods
cmpsb
in
xchg
inc
movsl
je
mov
jbe
dec
sbb
mov
mov
lds
push
ds
xor
and
ss
dec
add
inc
cwtl
pop
push
es
xor
add
fdivr
push
adc
mov
std
cli
movsl
adc
lods
jo
scas
or
pop
nop
aas
push
mov
popl
lock
dec
sub
push
dec
sub
jl
aad
dec
dec
cltd
popa
xchg
xchg
std
push
stos
sahf
cmp
mov
and
out
orb
cltd
add
out
sbb
sarl
jge
mov
insl
insl
or
pop
push
mov
fcmove
jno
popa
inc
lock
cmp
push
jns
jnp
cmp
ss
shrb
into
scas
add
mov
clc
jno
mov
aam
pop
or
ljmp
jbe
push
push
push
fildll
std
lods
sub
addb
sub
xorl
cs
aaa
mov
cmp
adc
lods
aas
fwait
xor
daa
push
add
pop
dec
jmp
and
aaa
fsubr
xchg
test
push
leave
aaa
sbb
or
lock
jno
insb
adc
rorl
inc
dec
mov
ret
loop
lret
xchg
movsl
ret
sub
aam
xchg
jae
xchg
lds
pop
mov
dec
pop
sub
cmp
pop
clc
lea
jle
mov
jae
dec
aad
cmpb
adc
sub
push
xchg
adc
push
movsb
xor
ss
sub
cmp
mov
push
and
stos
add
mov
push
insl
xchg
xchg
mov
adc
out
push
aaa
das
pop
loopne
mov
pushf
scas
out
xchg
cmp
jge
add
mov
into
dec
cmpsl
test
mov
xchg
xor
xchg
jnp
rorb
dec
clc
push
cmp
add
imul
dec
nop
lods
js
mov
addb
pop
pop
stos
lods
adc
ret
std
in
push
lahf
sub
sub
push
arpl
adc
cs
push
icebp
cmp
jbe
push
jge
mov
and
leave
jle
cmp
ret
jmp
fwait
ja
ja
push
mov
jmp
jg
scas
pop
mov
js
push
sbb
jno
test
cmp
loop
lds
imul
fidivrl
insl
inc
insb
popf
fisttpl
or
imul
cmpsb
lea
mov
xor
shrb
iret
sub
or
popa
fadds
mov
add
jno
cli
hlt
cmp
lock
inc
ds
adc
cmpsl
fistl
inc
mov
sub
xchg
in
aad
mov
clc
mov
pop
sub
sub
pop
clc
insb
inc
mov
add
cmp
xor
push
in
aam
adc
push
add
inc
add
xor
popa
adc
stos
shl
push
jbe
das
fiadds
pusha
cld
movsb
add
mov
dec
aam
pop
outsl
sub
dec
and
adc
sahf
mov
lods
or
pop
loope
xchg
ret
fcom
insl
aad
adc
clc
test
jnp
repnz
push
dec
push
aam
mov
rorl
addr16
mov
inc
test
lret
add
jbe
loop
jnp
clc
sbb
cltd
lds
jbe
inc
cmp
or
mov
stos
dec
ja
fwait
ljmp
mov
nop
and
adcb
fbld
or
push
imul
and
addr16
sub
lahf
jns
pop
pop
adc
pop
sti
mov
push
or
arpl
call
push
adc
notb
xchg
xor
jmp
fnstenv
sbb
push
push
sarb
sub
das
divb
imul
lds
mov
neg
and
push
cmp
push
cwtl
jmp
mov
ljmp
fisubrl
hlt
xchg
push
mov
loop
xor
test
cmp
mov
xchg
xchg
inc
and
ret
out
gs
add
or
insb
jbe
rorl
pop
fistl
jo
pop
mov
das
sahf
mov
sahf
mov
push
imul
movsl
push
mull
mov
repnz
pop
mov
enter
mov
lods
sub
lock
jl
fwait
stc
push
cli
and
mov
push
pop
lcall
test
fistps
shr
pop
dec
and
and
bound
into
dec
aaa
sub
jns
mov
movsb
orl
fsubrl
pop
adc
daa
or
imul
jbe
push
adc
jecxz
jb
ds
jl
filds
dec
mov
adc
testl
scas
jp
sub
push
scas
cmp
ds
or
mov
add
adc
andb
lea
lds
and
mov
test
sbb
cli
push
ds
pop
es
dec
add
sub
fldl2e
push
sahf
in
in
add
popf
int
jbe
ret
pop
jmp
mov
sbb
lcall
out
xchg
xor
adc
xor
rolb
push
inc
dec
out
adc
lds
inc
scas
inc
repz
scas
jo
loop
mov
or
sbb
add
adc
sbb
ja
loop
mov
adc
out
dec
mov
aaa
in
out
dec
mov
jno
dec
mov
push
in
mov
or
popa
adc
into
sbb
lret
in
fistpll
lds
xchg
cwtl
xor
rcll
test
in
and
fisttpll
mov
and
adc
jnp
mov
mov
aaa
or
jno
arpl
movsb
lret
push
arpl
mov
leave
cld
push
aaa
push
pusha
imull
dec
bound
or
cmpsb
xor
fiadds
sbb
mov
or
ret
xchg
push
mov
push
cmpsl
loopne
lods
xor
hlt
dec
xor
lret
or
jmp
cmpsl
inc
roll
sbb
fs
icebp
push
add
jbe
js
dec
pop
dec
xchg
xchg
xchg
pop
movsl
and
push
arpl
or
ret
in
and
in
push
and
pop
mov
scas
nop
pop
cwtl
out
push
push
sub
adc
stos
stos
ror
pop
scas
inc
ljmp
xchg
dec
into
pop
xlat
push
mov
ss
daa
jle
scas
mov
mov
sbb
lahf
loopne
stos
decb
xchg
jecxz
cli
or
xor
add
insb
dec
call
or
and
sub
das
repz
cwtl
cmp
pop
or
push
jae
mov
push
out
mov
pop
mov
mov
lods
push
fsub
push
xor
pop
jp
je
dec
inc
std
fcomp
push
push
ss
fisttpl
dec
jns
out
inc
fwait
adc
mov
inc
fisttpll
test
sub
inc
jo
jne
pusha
cs
cld
xor
adc
in
or
stos
out
inc
jecxz
mov
mov
mov
add
sbbl
scas
stos
or
xchg
les
cs
pop
int
lock
outsb
xchg
scas
adc
sahf
lods
inc
mov
cmp
fsubr
jle
stos
sub
jle
or
imul
cmp
inc
repnz
movsl
lcall
pop
fisubrs
pop
lds
xchg
out
xchg
hlt
sbb
clc
adc
pop
sub
lds
testb
add
inc
push
cmpsb
dec
xchg
imul
push
pop
dec
imul
push
pusha
dec
inc
ficoml
or
sub
enter
int3
shrl
leave
mov
ret
fidivrl
into
popa
inc
pop
insl
daa
sub
mov
push
lret
xor
pop
out
or
ret
std
and
cwtl
mov
cltd
adc
shrl
cld
ret
das
loop
enter
mov
sub
add
fs
and
mov
push
mov
dec
popa
mov
pop
test
or
orl
imulb
push
push
xor
mov
pop
dec
stc
hlt
lea
fwait
popa
hlt
stos
ja
into
cli
leave
xchg
sbb
push
push
stc
loope
jo
stos
sub
movsb
daa
cmp
pop
pop
xor
rcll
bound
or
jecxz
dec
xor
xor
call
xchg
add
cmpsl
movsl
clc
enter
in
cld
scas
push
xchg
sub
inc
jns
aam
and
cmpsb
jae
dec
xchg
scas
sub
lds
icebp
jmp
cmpb
add
inc
dec
or
xlat
cwtl
out
gs
mov
nop
lcall
push
cmpsb
clc
es
and
adc
inc
dec
dec
jne
xor
cli
jo
ret
push
pop
xchg
mov
jne
xchg
mov
cmp
lea
pop
inc
dec
mov
sbb
or
adc
lret
lock
push
sbb
imul
mov
inc
cmp
push
cmpsb
cmp
push
cmpb
cld
cs
sbb
in
add
in
sub
cmpsb
mov
lcall
addr16
add
test
adc
popf
xchg
sub
imul
dec
xor
xchg
into
ror
and
sbb
xchg
hlt
sbb
cmp
adc
add
pusha
les
dec
int
cltd
sbb
cmp
or
jg
sub
xchg
mov
push
maxps
push
and
sbb
lds
push
lcall
sub
in
pop
ljmp
aam
cmp
std
ljmp
cmpsl
dec
jle
int
andb
int3
addr16
sub
or
push
leave
dec
or
add
mov
out
and
int3
aad
es
mov
cmpsl
pop
jo
xchg
out
cmp
add
cmp
xchg
leave
cwtl
or
adc
aaa
cs
adc
scas
idivb
inc
jecxz
test
orb
sbb
cmpb
movd
cmp
jecxz
adc
xchg
xchg
mov
nop
xchg
mov
push
pop
movsl
scas
dec
out
mov
cmp
push
aas
jmp
fninit
gs
and
jmp
push
or
jge
mov
xor
adc
jo
mov
insb
pushf
ror
adc
imul
xor
and
inc
pusha
pusha
stc
mov
push
mov
cmp
fsubrs
xchg
ljmp
fsubs
lea
test
adc
aaa
add
cmc
mov
test
test
cs
cmp
rorb
jbe
adc
loope
add
mov
test
aaa
dec
dec
icebp
mov
mov
dec
test
adc
fmull
and
cmp
or
jno
add
nop
inc
adc
pop
loope
add
imul
mov
imul
jo
inc
fmuls
imul
adc
lds
push
or
lods
ds
in
and
gs
out
aad
mov
jae
mov
add
rcrl
or
xchg
xchg
rcr
push
or
sete
add
sbb
and
and
mov
xor
arpl
in
push
cltd
iret
aaa
jnp
cmc
jle
mov
cmpsl
mov
jnp
cmp
cmp
cli
mov
inc
mov
sub
inc
sti
xchg
in
shlb
mov
bound
in
mov
dec
mov
push
push
in
mov
add
xor
es
aas
add
cli
test
add
lock
jnp
add
xor
hlt
sub
pop
je
sar
push
divb
cmpsb
clc
sub
sti
xor
xchg
jge
pop
sbb
stc
or
push
orl
cmp
push
dec
sahf
cmc
add
cmp
cltd
inc
inc
movsb
or
dec
or
push
icebp
xor
sbb
cltd
mov
movsl
enter
rclb
cld
sbb
xchg
fnstsw
push
xor
and
and
fs
dec
shlb
push
movsl
xchg
dec
cld
fldcw
popw
xlat
pop
cmp
test
jae
fcoml
notb
xor
cmp
inc
outsb
insb
mov
and
daa
pop
inc
cmp
lret
loopne
ja
or
data16
xchg
inc
in
pshufw
jno
fistl
dec
sub
xchg
mov
pop
inc
clc
xchg
xchg
or
data16
ret
mov
or
movsb
inc
or
das
mov
das
lcall
dec
stos
out
jo
and
roll
lret
cmp
in
xor
pop
ret
movsl
mov
inc
inc
mov
addr16
push
xorb
js
add
inc
fidivs
pop
lea
xchg
in
push
adc
daa
mov
mov
nop
mov
call
inc
dec
jno
adc
lahf
in
push
es
jb
mov
mov
sbb
dec
jbe
pop
cmp
in
adc
xchg
insb
inc
test
mov
es
xchg
shrb
test
flds
out
xor
adc
movsb
pop
mov
cld
cwtl
mov
sti
jl
outsb
xchg
adc
dec
shl
scas
mov
add
add
addr16
insb
dec
fldcw
out
shrl
out
or
popf
daa
pop
sbb
daa
out
adc
and
mov
push
loope
or
jne
fisubrl
jmp
xchg
bound
pop
jnp
xchg
out
jns
lods
sbb
push
sahf
inc
cmp
xchg
nop
call
rcr
sbb
or
into
mov
mov
jne
jbe
movsl
jp
stc
fxch
jbe
lds
mov
cmp
icebp
bound
loope
inc
orl
mov
jge
or
inc
sbb
cs
push
std
cmc
pop
aam
insb
lret
pop
fisttps
cmpl
and
stc
pop
and
pop
sbb
loope
cmp
push
in
mov
xchg
push
test
scas
fucom
sbb
jl
xchg
or
call
mov
sbb
dec
mov
sub
add
pop
stos
inc
imul
icebp
and
sub
push
negb
xlat
jp
popf
mov
out
outsl
sbb
aam
xchg
pop
mov
jns
and
rclb
cmp
and
add
push
inc
pop
push
push
push
add
inc
mov
mov
inc
mov
and
mov
xor
cmp
cmp
cmpsl
ds
loopne
stos
xor
cmp
adc
xchg
ja
les
xor
int3
jae
lret
cmc
popa
das
imul
call
jno
cli
cltd
mov
mov
dec
push
adc
clc
inc
jge
push
sbb
mov
inc
lock
mov
mov
arpl
inc
mov
push
inc
xlat
gs
mov
xchg
xor
leave
cmp
and
fs
mov
mov
push
xlat
gs
jbe
inc
es
sub
insl
push
std
pop
cmp
pop
or
mov
cmp
into
fnsave
cmp
dec
mov
decl
ja
dec
test
in
inc
dec
loopne
je
iret
ds
push
mov
clc
lds
jb
orb
ds
popa
std
and
and
mov
xchg
adc
cmp
xorl
cmp
xchg
adc
adc
and
xacquire
xor
pop
sub
lds
in
sar
outsb
sub
enter
pop
xchg
cmp
sbb
outsl
dec
sbb
xor
inc
inc
cmp
inc
mov
movsb
pushf
movsb
arpl
out
mull
xchg
push
mov
jnp
nop
fdivrl
mov
mov
es
loope
push
inc
mov
jno
inc
jae
jl
xor
popf
scas
pop
in
outsl
sbb
xor
mov
dec
jae
mov
movsl
std
mov
sub
mov
pop
sbb
xchg
or
xor
das
test
mov
xchg
cmp
lock
and
addr16
xchg
jle
pop
repz
mov
ret
xchg
push
cmpsl
aas
stc
or
ja
cwtl
sbb
xchg
repnz
out
jle
lds
cmp
xor
dec
or
nop
jp
xchg
cs
mov
and
xchg
or
xor
dec
adc
dec
sbb
fisttpl
push
int3
add
aad
lods
pop
and
cmp
jecxz
nop
push
and
shlb
xlat
cs
xchg
adc
into
cmp
in
mov
test
cmc
fiadds
std
call
in
leave
mov
jno
pop
into
or
lock
sub
cmp
jb
testb
nop
mov
and
imull
lock
imul
sub
push
repz
adc
mov
fincstp
out
push
mov
mov
push
fcoms
cmpsb
or
dec
lcall
pushf
sbb
fs
xor
cwtl
add
in
js
pop
imul
ss
call
mov
cs
xchg
sbb
imul
sbb
inc
std
xchg
inc
out
loop,pt
sahf
pop
xchg
bound
push
mov
daa
out
dec
lods
in
jecxz
vpmuludq
int
jns
test
aaa
sbb
cmp
pop
mov
dec
sub
lret
dec
outsl
iret
dec
xor
push
xor
jp
or
std
mov
dec
in
insl
adc
jmp
add
inc
jmp
sub
les
pop
inc
sbb
mov
nop
mov
push
insl
cmc
je
scas
sub
push
jecxz
outsb
xchg
dec
dec
loope
repnz
dec
test
repz
mov
cli
cmp
cli
fisubl
xor
mov
adc
scas
xchg
data16
cmp
pop
lea
scas
adc
adc
out
rcll
fcompl
out
cli
imul
enter
in
xlat
push
orl
mov
adc
cmp
jle
jp
shrb
lds
mov
imul
call
mov
call
push
jmp
cmovle
push
addb
pop
nop
decl
xchg
fsubl
inc
pop
nop
or
imul
mov
repnz
mov
and
dec
popa
daa
dec
repnz
xchg
sbb
iret
mov
stos
ljmp
cli
mov
insl
jl
adc
cs
cwtl
inc
dec
inc
sub
dec
adc
test
scas
mov
xchg
repz
sub
sbb
sub
ja
or
push
iret
adc
or
mov
stos
push
and
dec
rcll
sub
insl
mov
push
xor
inc
pop
and
inc
mov
push
mov
pop
repz
mov
cmp
xor
sub
cmpsb
cld
test
and
scas
dec
fiadds
hlt
cmpsb
or
mov
jno
dec
dec
jns
sub
testl
mov
cmp
stos
hlt
and
mov
aaa
rcl
movsl
int
or
add
xor
stc
pushf
in
mov
push
adc
add
mov
mov
push
inc
cmp
mov
mov
not
ss
mov
pusha
xor
test
icebp
hlt
mov
jbe
lret
sbb
jg
rep
jge
outsl
and
mov
cmp
movsl
out
dec
or
mov
add
gs
shl
movsbl
fistps
pop
flds
testb
cmc
adc
lcall
out
mov
test
mov
jno
and
push
out
in
mov
filds
mov
std
test
xor
movd
sbb
out
out
insb
pop
add
cmp
xchg
sub
hlt
into
sbb
push
movsl
arpl
sbb
iret
inc
aaa
push
or
mov
cmp
mov
test
dec
dec
fucomp
xchg
push
xor
ss
imull
daa
test
sbb
mov
rorl
sub
cwtl
aad
lock
pushf
or
je
sub
inc
in
test
ss
xchg
mov
ljmp
ss
fwait
nop
ret
dec
push
add
inc
int
sbb
or
jg
jno
rcll
aas
in
fimull
je
pop
addr16
lahf
lock
mov
ret
xchg
xchg
popa
loop
fs
adc
pop
pop
mov
or
jno
cmp
pop
cmp
sbb
ja
add
stos
xchg
jnp
jp
aas
jno
push
fisubl
pop
mov
mov
out
mov
hlt
in
mov
insl
mov
sbb
mov
sub
xchg
int3
sbb
lret
mov
out
in
aaa
pop
cmc
mov
xchg
inc
cmp
push
xchg
jecxz
add
sti
jns
dec
jae
popf
out
inc
cmp
fstpt
js
roll
roll
cld
and
lods
stc
adc
loop
lods
or
repz
sbb
or
es
jo
in
and
out
ret
push
insb
out
add
aad
push
data16
push
dec
push
xchg
xor
xor
stos
nop
mov
sti
ss
mov
xchg
jne
push
rolb
adc
and
inc
sbb
mov
scas
lods
xchg
mov
push
cmpsb
std
inc
in
cltd
lods
jg
jecxz
xchg
add
or
jmp
les
test
cmc
ficoms
cmpsb
mov
push
sub
mov
sub
cmp
data16
int
dec
out
icebp
fs
sub
mov
xlat
sub
ret
neg
addl
orb
scas
lods
cltd
divb
popa
les
push
std
stos
cmp
lods
sbb
sub
push
movsl
clc
lcall
orl
inc
out
imul
pushf
push
lods
out
inc
adc
push
mov
mov
inc
leave
cmp
scas
or
ds
incb
iret
mov
inc
dec
lds
mov
jbe
mov
mov
mov
inc
xchg
jae
push
ja
adc
inc
cli
mov
cmp
cmp
aam
daa
mov
xchg
out
pop
xchg
aas
call
aad
loop
and
push
lods
lret
lds
mov
leave
xor
cmp
sub
scas
push
decb
inc
inc
cld
sbb
cmp
scas
mov
pop
mov
add
and
enter
sbb
mov
ds
xor
popf
jmp
movsb
iret
js
int
and
mov
dec
pop
insl
std
pusha
dec
icebp
fcoml
scas
push
std
enter
mov
jbe
jl
call
fimuls
sub
mov
fidivrs
aaa
and
daa
roll
xchg
lahf
lds
push
mov
jae
leave
shlb
test
das
mov
notb
mov
mov
add
std
cmp
lock
mov
inc
daa
dec
dec
jno
jmp
aas
popa
lock
inc
in
mov
in
jns
fidivs
loop
in
cmpsl
mov
shlb
fs
mov
stc
fs
dec
nop
add
mov
decl
lods
fisubrs
xchg
std
aas
fs
movntps
les
cmc
or
push
mov
data16
pop
inc
xor
xor
subl
data16
dec
xchg
sub
test
or
mov
fs
pop
testb
adc
cli
adc
jno
pop
mov
or
das
cmpsb
fisubs
test
add
sbb
jge
jo
push
leave
jne
xsaveopt
lahf
pop
fstpl
mov
scas
cmp
movsb
scas
mov
sub
aas
mov
outsl
pop
xlat
sub
and
mov
add
xchg
push
and
pushf
into
adc
sub
outsb
cltd
mov
sub
iretw
in
jge
imul
push
mov
dec
cs
enter
js
mov
jns
and
adc
inc
xchg
lret
sbbl
sarl
scas
add
sub
mov
xchg
push
pop
mov
sbb
inc
sub
and
mov
inc
xchg
push
xchg
ror
pop
and
cmpsb
or
cmp
push
push
sub
push
ljmp
xor
mov
xchg
xchg
movsl
sbb
xchg
loope
ds
sub
js
or
ss
sbb
pop
or
lock
fsubl
pop
mov
out
aaa
jae
js
call
decb
aad
std
xchg
loope
xchg
scas
jne
loopne
push
mov
xor
outsb
dec
inc
xchg
lods
jmp
stc
popa
jnp
sbb
jb
pop
sub
xor
sub
and
add
js
dec
jo
imul
and
dec
cmpsb
mov
aas
mov
test
fimull
xor
insl
icebp
inc
add
mov
clc
insl
lods
leave
fsts
daa
stos
fwait
mov
or
pushf
sub
push
arpl
dec
mov
cmp
fsts
movsl
add
ficoms
jmp
push
popf
cli
sub
mov
daa
sbb
push
lret
shl
xchg
dec
shlb
into
sti
lret
mov
jle
daa
add
dec
push
leave
leave
dec
inc
pop
dec
packssdw
aaa
das
in
mov
push
cmp
pusha
lods
ljmp
into
adc
jg
mov
dec
pop
sbb
lds
repnz
dec
data16
pusha
dec
fistpll
ret
popf
and
mov
je
pop
add
xchg
dec
loop
mov
loope
sub
aad
popa
adc
loop
data16
adc
xor
mov
mov
pushaw
fldl
dec
es
xchg
fucomi
xchg
js
roll
jnp
fwait
xchg
adc
movsl
mov
push
jns
pop
mov
iret
aas
pop
sub
pop
divl
sbb
mov
lock
scas
push
jecxz
repnz
mov
imul
adcb
inc
mov
mov
stos
insb
inc
inc
stos
push
ret
inc
rorl
jo
push
or
sahf
inc
shr
imul
shlb
xchg
js
std
push
push
js
adc
cmpsl
outsb
jbe
in
mov
jmp
lea
call
or
ss
dec
adcb
into
sti
subl
xlat
popf
push
adc
divl
sbb
push
cmpsb
insl
pop
scas
loopne
mov
push
inc
and
dec
push
jecxz
push
mov
insl
sbb
dec
jp
lock
push
mov
or
inc
fidivrs
mov
cmp
adc
inc
jge
pop
and
fs
insl
and
cmp
pop
test
test
sti
sub
scas
out
dec
jno
jp
cli
sbb
xchg
push
push
cli
pop
loop
jmp
fiadds
addb
add
adc
fcomp
mov
jl
ret
movsl
loopne
stc
cmp
or
int3
ja
and
mov
fadd
jne
divb
cmpsl
stos
bound
jns
lea
cmp
push
sub
pusha
insb
out
outsb
call
inc
call
jg
nop
sub
movsb
lret
xor
loop
inc
hlt
std
test
lds
ficoms
aad
jmp
pop
mov
rcll
out
sbb
or
repz
insl
inc
jmp
and
ret
dec
out
jecxz
xlat
or
aaa
movl
or
dec
mov
mov
clc
cmpsl
sbb
or
jecxz
mov
inc
sbb
loop
xor
xor
or
sbb
test
mov
adc
adc
movsl
lods
mov
popf
cmp
adc
or
add
jb
popf
xchg
push
in
mov
popf
inc
lea
test
xor
pop
mov
sbb
inc
fdivr
pop
scas
test
dec
inc
or
daa
loop
cs
mov
sub
sub
lcall
arpl
pop
push
pop
mov
stc
rorb
jl
inc
fadd
std
xor
mov
shrb
sub
mov
jae
add
dec
jae
faddl
mov
insl
hlt
dec
sbbb
out
leave
mov
pop
imul
mov
xchg
xchg
cmp
hlt
pop
xor
popa
fidivs
jo
push
ja
or
stos
xlat
jne
or
push
fsubr
fldt
rcrl
sub
testl
out
aas
sbb
xchg
lock
popa
xchg
movsb
dec
pop
pop
or
mov
mov
mov
mov
addl
add
cltd
cmp
adc
pop
adc
mov
test
cmp
test
vpackuswb
mov
or
jbe
insb
clc
or
mov
mov
dec
or
pop
jle
xchg
push
dec
ljmp
push
xor
movsb
adc
jae
or
cmp
or
jne
sub
jne
or
insl
jno
mov
cmpsl
or
orl
out
adc
repnz
lods
dec
lret
mov
ljmp
pop
pop
mov
rclb
fstps
out
imul
fs
jne
fadd
and
pop
jp
daa
into
lods
lcall
lock
ss
mov
xchg
testl
xchg
stc
lds
inc
mov
test
adc
mov
push
adc
jmp
lods
cmp
imul
js
decl
fcomps
shll
dec
mov
jecxz
popf
clc
std
xchg
out
cmc
int
rorb
loopne
add
out
xchg
les
mov
ret
shlb
adc
push
adc
jg
or
addr16
inc
mov
adc
data16
lahf
mov
clc
leave
lcall
lods
rcl
sub
int
mov
adc
mov
xor
in
add
insl
xchg
test
orl
mov
pushl
push
sub
sub
pop
jnp
inc
into
das
jbe
xchg
xchg
adc
loopne
mov
sahf
int3
jg
cmp
orb
sub
cmp
or
jbe
adc
outsl
ljmp
inc
je
adc
aas
sub
adc
mov
adc
xor
jo
cmp
sub
add
popf
push
mov
sub
inc
nop
data16
jb
cmpsl
push
xchg
sub
adc
xlat
loop
nopl
sarl
dec
mov
sahf
outsb
out
mov
adc
jnp
andl
lahf
lcall
ss
out
inc
jp
mov
movsb
xorl
shr
adc
ret
stos
ljmp
xor
repnz
pop
xor
jmp
xchg
lcall
xchg
test
ret
cwtl
inc
xchg
mov
lret
xor
inc
xchg
jecxz
cmp
cld
xchg
push
shr
cltd
mov
jmp
sub
adc
popa
es
xchg
xchg
sub
daa
xor
sub
pop
xor
jle
mov
push
or
je
lock
fnstsw
mov
mov
mov
jmp
mov
xor
mov
pop
sbb
cs
cmpsl
scas
jo
mov
test
test
fwait
xor
dec
dec
fwait
mov
lret
push
test
jns
adc
imul
jnp
adc
les
fwait
push
test
loopne
jo
sub
xchg
mov
inc
mov
es
push
sub
cmp
cld
jae
fsubs
js
sub
fdivs
sbb
push
ret
outsb
mov
sbb
push
in
dec
sbb
dec
pop
aaa
fisubrl
lock
mov
out
cltd
outsl
das
dec
push
popf
loop
fs
pop
dec
cmp
ret
insb
ljmp
es
lcall
int3
cmp
sahf
fidivrs
ja
mov
cltd
push
cld
out
outsl
adc
adc
pop
push
xor
sub
add
popa
mov
or
pusha
xor
cmc
mov
push
pop
arpl
or
mul
adc
cmpsb
cltd
std
mov
inc
sahf
outsb
sub
xor
adc
das
movl
ljmp
out
mov
shlb
mov
cmp
dec
jbe
inc
mov
xor
ror
mov
subl
sbb
shrb
dec
mov
pushf
stos
test
sbb
lea
mov
ja
sti
cli
test
aad
jle
mov
push
into
js
and
pop
call
jmp
bound
cmp
iret
adc
dec
or
testl
xor
cmp
add
inc
push
push
and
pop
push
mov
xor
loopne
push
rolb
insb
cmpsl
loopne
daa
cli
xor
mov
repz
aaa
mov
push
pop
aaa
dec
jg
fst
loopne
clc
inc
or
in
jle
rcr
mov
enter
cmc
sbb
stos
jnp
outsl
in
push
dec
sub
pusha
inc
ffree
inc
scas
sub
jnp
scas
xlat
gs
fcmovne
push
clc
mov
mov
xor
mov
ljmp
xor
cmp
and
or
cmp
stos
xchg
cmc
scas
imul
cltd
mov
add
xchg
or
imul
jp
sbb
push
cmp
and
sarl
sbb
mov
or
push
pop
cwtl
out
or
push
sbb
inc
sub
outsl
mov
dec
aaa
aam
jg
popa
inc
pop
lret
push
cmpl
fwait
mulb
aad
cmp
mov
ucomiss
ret
jae
push
repz
mov
pushf
call
jb
xchg
scas
and
aad
jmp
lods
addr16
in
cld
gs
shll
jb
dec
jmp
xor
jno
fistpl
sub
dec
ss
out
clc
inc
cli
out
dec
lcall
js
scas
sub
popa
xor
dec
inc
cmp
xor
pop
xor
xchg
fiadds
sbb
sub
mov
adc
push
jg
rcl
inc
lahf
jecxz
imull
out
xchg
iret
dec
adc
inc
adc
inc
sti
out
dec
add
mov
pushf
sbb
fsubl
sbb
and
in
add
add
xor
inc
pop
sub
pop
cld
jb
jg
sahf
decb
loope
lock
in
gs
in
stos
jmp
fs
jp
push
mov
sub
cmp
mov
or
mov
or
pop
int
mov
sub
cmc
mov
leave
js
mov
mov
jo
inc
scas
cltd
mov
cmp
lret
insl
push
outsl
js
scas
cmp
daa
out
jp
jge
xlat
std
sbb
movsb
aaa
mov
nop
ja
dec
outsl
popf
ljmp
mov
pop
lret
cmc
push
enter
ss
xor
adc
push
ljmp
push
pop
ss
outsl
lods
rorl
push
shll
and
lahf
add
movsb
das
push
cmc
or
outsb
lcall
push
push
cmp
movsb
aam
in
xchg
rcrl
clc
lahf
or
cmpsl
push
fildll
hlt
loop
mov
mov
inc
pop
imul
xor
in
push
mov
stc
mov
aaa
dec
mov
popa
insl
mov
bound
push
dec
in
lods
out
into
add
cmp
movsb
insl
jmp
push
adc
ds
lock
das
ficomps
push
lods
fidivl
cmp
add
sbb
push
pop
mov
int
adc
mov
stc
dec
jge
mov
out
and
leave
add
inc
bound
sahf
dec
mov
push
xchg
jne
shl
dec
lret
int
repz
cmp
sbb
arpl
div
mov
icebp
jge
pop
rcrl
push
add
jle
dec
sbb
jg
mov
sub
lret
sbb
lcall
xchg
adc
shrl
daa
mov
and
test
gs
bound
ret
inc
dec
inc
xlat
jns
add
and
div
aam
sti
lret
out
imulb
hlt
idivl
adc
testl
add
mov
pop
outsb
pop
data16
cmpsb
data16
jb
fistl
enter
out
mov
push
dec
cwtl
mov
sahf
xor
adc
rcrl
jge
xchg
push
pop
dec
shll
hlt
negb
stos
xchg
dec
dec
jne
outsb
je
dec
push
lods
jmp
adc
sub
dec
jle
aaa
dec
scas
sub
jge
sub
cmp
arpl
dec
jne
decl
pop
out
lret
sbb
enter
mov
dec
subl
push
xchg
or
inc
int3
call
inc
lods
xor
fmull
addr16
js
addr16
push
mov
jne
nop
mov
or
push
jbe
aas
cmc
and
mov
clc
popa
sub
lock
sahf
xor
adc
fsubs
adc
sub
mov
pop
mov
lock
std
inc
push
lcall
xchg
xor
outsb
movsb
stos
popa
jg
stc
pusha
add
xlat
mov
icebp
or
inc
sub
dec
jge
pop
ret
roll
push
inc
in
in
or
mull
jmp
out
sub
fdivr
xchg
mov
mov
xchg
sub
mov
xchg
sahf
out
inc
jl
jnp
rclb
sub
sarl
call
ljmp
mov
movl
xor
cwtl
jle
xchg
out
push
pop
pusha
aas
ret
stos
lcall
push
pop
movsb
es
negb
pop
jg
xchg
adc
and
fwait
or
jae
cld
inc
movsl
xchg
sti
lods
pusha
lret
out
std
lods
popa
roll
or
icebp
jns
arpl
inc
pushf
dec
push
aam
mov
cli
fwait
into
cmpsb
or
mov
mov
into
aas
xchg
xor
outsb
sti
mov
jne
jmp
stos
popa
stos
add
xor
mov
int
lret
sbb
outsb
imul
stos
adc
dec
xor
add
adc
int3
mov
popa
rol
jl
sbb
fdivrs
int
cmp
adc
leave
xchg
adc
insl
test
sbb
jne
into
dec
jmp
es
mov
inc
adc
jle
cmp
xchg
push
add
int
iret
add
mov
bound
iret
sub
jg
dec
filds
bound
daa
add
pop
dec
cmp
mov
imul
add
int
fiadds
jmp
pop
dec
movsb
inc
mov
inc
cmp
jmp
sti
sub
inc
lea
or
mov
data16
mov
lods
push
add
add
jle
imul
and
scas
ret
inc
into
lahf
in
mov
cmpsb
fldt
clc
addr16
pop
mov
arpl
xor
adc
imul
mov
adc
fs
ss
hlt
pushf
mov
mov
sbb
push
push
popf
cli
pusha
fsubs
fcompl
lret
mov
stc
stos
mov
mov
cmp
or
ljmp
out
add
add
push
sub
jne
cs
adc
adcb
shl
jl
jns
popa
addr16
ror
cmc
dec
push
out
jp
fs
adcb
ds
addr16
mov
dec
push
ds
xor
imul
orb
daa
inc
mov
and
pop
loope
aam
into
mov
sub
stos
call
insl
and
dec
cmc
pop
stos
jne
pop
pop
mov
push
xor
jno
outsb
jbe
mov
call
ds
shll
in
xor
lock
lcall
lret
or
mov
adc
stos
jno
insl
xchg
sqrtps
mov
inc
mov
fistpl
cmp
cmp
lar
js
jecxz
stos
or
je
jl
adc
rolb
jb
mov
add
push
or
lea
int3
xchg
scas
mov
and
mov
pop
inc
sbb
add
ror
inc
les
mov
cmpl
xor
ds
enter
in
je
sbb
pop
xor
mov
jb
mov
int3
insb
insl
imul
mov
loope
std
mov
sahf
enter
popf
inc
into
arpl
inc
not
int3
push
xor
out
jle
push
stos
push
imull
and
jg
cli
mov
adc
test
jns
int3
mov
mov
push
lock
pop
pop
sub
and
into
cmpsb
xor
inc
cs
add
outsb
pushf
in
adc
popa
pop
sbb
jne
mov
pop
mov
pop
add
inc
sub
mov
pushl
cmp
in
aam
and
int3
push
dec
in
fldcw
stc
inc
outsb
in
cmp
pusha
or
das
sub
popa
mov
mov
icebp
jne
cmc
lea
fldt
mov
sar
aas
fld
test
xchg
test
scas
insb
add
and
cmp
fcoml
add
sub
test
dec
aaa
or
gs
add
mov
dec
rcrl
ret
lea
mov
push
mov
mov
adc
gs
xor
nop
insl
xchg
lods
jmp
icebp
pushf
lea
cmp
xor
adc
inc
push
push
pop
sub
inc
idivb
add
push
addb
out
xchg
dec
popa
icebp
test
popa
pop
outsl
adc
fwait
cld
ss
sub
jno
addr16
push
inc
insl
bound
xor
out
xchg
clc
and
xor
and
cld
cltd
shll
dec
mov
sub
shrl
mov
test
push
cld
push
insl
jb
xchg
test
inc
jno
and
add
gs
mov
adc
mov
sbb
mov
and
test
or
sti
mov
pusha
sbb
rorl
or
sbb
daa
stc
lahf
imul
jno
out
arpl
mov
rolb
das
repnz
bound
sbb
adc
push
mov
mov
xor
pop
jno
into
stc
dec
sub
xchg
imul
xchg
in
movb
jecxz
scas
or
or
nop
cs
pop
es
out
scas
sub
or
mov
adc
xchg
add
adc
cmp
inc
dec
add
repz
dec
int3
pushf
xlat
sbb
inc
sbb
cwtl
and
xchg
jnp,pt
or
hlt
fwait
test
adc
mov
insb
mov
mov
arpl
aad
mov
xchg
push
jp
jae
and
sbb
incl
xchg
dec
nop
dec
rorl
mov
cltd
jae
clc
iret
cld
bnd
out
rorb
nop
mov
xchg
mov
fwait
addr16
push
scas
jp
adc
xchg
xchg
or
mov
mov
rorl
jns
cmp
sbbl
or
pop
add
mov
shlb
xor
incl
in
lea
aad
add
pop
jl
mov
and
ss
push
fwait
outsb
and
data16
js
in
jl
mov
aam
hlt
push
int
test
mov
or
inc
sub
inc
inc
in
clc
pop
xbegin
sbb
scas
inc
jmp
lock
imul
pop
lods
sub
sbb
inc
sub
push
sbb
xchg
jle
dec
rolb
and
js
sub
out
inc
in
add
popf
icebp
dec
ficompl
mov
mov
repnz
inc
cmc
scas
popf
mov
incl
imull
pop
in
mov
pop
lock
popa
lret
and
orps
jl
inc
daa
pop
fistpl
mov
cmc
and
mov
aas
jb
outsb
lock
icebp
adc
iret
mov
pop
ss
ss
jb
and
jo
ja
sbb
iret
movsl
repnz
lret
push
popa
cld
loop
push
cli
pusha
push
fdivl
call
mov
data16
inc
adc
sub
out
inc
fcompl
dec
aas
adc
sti
cmpl
sub
insb
rcrl
jae
shll
out
dec
out
jge
scas
and
sub
jmp
sub
jecxz
jne
loopne
cltd
add
jg
das
sarb
dec
ss
adc
testb
push
pusha
in
and
sbb
add
cmp
and
mov
mov
push
stos
dec
and
ret
dec
push
fwait
jl
xchg
xchg
adcb
pusha
push
inc
pop
pop
movsb
mov
jmp
or
aas
xchg
into
jnp
xorb
mov
lret
push
and
in
push
jnp
ja
insl
mov
movsl
push
jbe
mov
push
push
cmp
idivb
sbb
insb
add
jnp
pop
dec
push
add
pop
pop
xchg
bound
push
pusha
insl
adc
pop
mov
adc
xchg
enter
ja
mov
jmp
les
xchg
int
inc
push
jae
repz
out
mov
push
push
in
push
or
jge
sahf
dec
cmp
mov
jge
dec
push
dec
xor
jo
mov
out
lds
lret
push
pop
jb
frstor
cltd
cli
mov
adc
les
scas
popa
xchg
jb
lods
ds
dec
adc
jmp
pop
push
xchg
sbb
pushf
jne
push
sub
dec
adc
push
movsl
test
fbld
int3
es
and
iret
push
xlat
pop
mov
out
cltd
iret
pop
call
out
ret
xchg
push
lods
pop
movsb
jno
in
lret
sbb
dec
inc
cltd
push
lds
idivl
pop
or
ret
sbb
cmp
mov
sbb
mov
push
iret
inc
mov
imul
jae
cmp
stc
fmull
xor
mov
out
add
add
xchg
adc
or
out
in
movsb
out
push
cmpl
jp
push
clc
test
lret
cwtl
jp
negl
insb
lods
popa
aad
gs
cs
cmp
xchg
inc
mov
xchg
insb
into
sbb
xchg
cmp
jo
loopne
es
out
insl
js
insl
fldcw
jg
lcall
sbb
and
adc
mov
mov
or
jo
insl
and
xchg
dec
sbb
pop
dec
lock
aaa
rolb
sarl
xlat
cwtl
or
fdivrl
push
faddp
cmp
xchg
je
adc
in
mov
shll
or
jmp
aad
pop
pop
push
and
stos
fsubrl
sbb
push
in
mov
dec
or
cmp
sub
fnstenv
addr16
xchg
adc
push
sub
pop
xchg
mov
cmpsb
dec
dec
cs
lcallw
push
int3
push
sub
jg
mov
out
jmp
fmulp
in
stos
pop
mov
lcall
jmp
inc
cli
push
xor
add
push
out
jmp
lods
icebp
outsl
ret
js
insl
pop
xchg
pop
mov
mov
or
pop
mov
adcl
cmp
push
lods
push
jp
lcall
xor
ret
test
in
rorb
add
xchg
add
cld
jbe
outsl
mov
push
movsl
pushf
in
push
xor
sub
clc
jo
xchg
das
fwait
jle
mov
push
add
faddp
inc
pusha
xchg
bound
stos
mov
add
push
jnp
pop
mov
sub
sti
scas
push
sbb
call
insl
cs
sub
in
xor
inc
or
pop
add
mov
out
stos
fdivs
aad
fisubs
int
int
flds
mov
push
sub
xor
scas
push
pop
adc
outsb
push
dec
negl
xchg
push
adc
xor
adc
mov
xchg
stos
xchg
or
mov
imul
jecxz
xlat
cmp
loop
idivl
jbe
fidivs
lods
xor
test
out
push
jb
cltd
mov
pop
cmp
gs
cmp
dec
or
clc
cs
xchg
xchg
movsb
imul
fstl
mov
xchg
scas
inc
sub
rcl
out
mov
xchg
sbb
mov
inc
int3
addr16
sbb
xor
cmpsb
movsl
and
sub
mov
iret
lret
add
xchg
orb
shl
daa
adc
mov
pop
cmp
adc
lods
or
clc
les
rep
jo
in
fistpl
out
into
pushf
insb
dec
jo
push
inc
and
inc
outsl
lcall
push
pop
push
rorb
inc
push
adc
es
loop
inc
mov
pop
cmp
cmp
enter
imul
inc
dec
nop
sbb
cmp
in
cmp
xchg
clc
cmpsb
cmp
sub
sti
mov
lods
cmc
cltd
jmp
pop
adc
subl
das
outsl
sti
ja
cmc
cs
jmp
addl
lret
ficomps
mov
jne
xor
pop
push
cs
in
lret
dec
jmp
bound
pop
pop
cmp
xchg
mov
stos
jmp
jg
or
rolb
adc
mov
rorb
cmp
inc
ss
ds
in
add
loopne
mov
dec
icebp
push
ds
mov
gs
adc
xchg
ds
and
dec
lock
xchg
loop
inc
ljmp
adc
stos
aas
jge
jg
cmp
decb
sub
and
aas
ss
jecxz
mov
outsl
xchg
mov
sbb
iret
add
ret
das
jge
inc
inc
push
in
sub
inc
sub
movsl
add
xlat
mov
hlt
inc
and
jae
call
xchg
cmp
adc
fsub
push
addb
adc
inc
lcall
fbld
xchg
iret
adc
lds
sti
xchg
in
scas
sti
xchg
fisubrl
das
cmp
and
adcl
shl
xchg
test
inc
or
clc
dec
cld
xor
mov
sub
mov
xor
xchg
pop
pop
aad
fwait
xor
mov
inc
or
and
cmp
push
jp
inc
cmc
xor
dec
mov
jmp
insl
sub
adc
sub
push
pop
aam
mov
ss
int
push
mov
xchg
mov
xor
mov
fwait
xor
sub
in
push
or
adc
cwtl
and
sub
cwtl
inc
icebp
xchg
inc
in
test
repz
pop
pop
push
notl
movsb
repnz
hlt
adcl
addr16
push
inc
sub
push
pop
lret
sbb
sub
rclb
in
loopne
xor
mov
sub
pop
mov
les
push
iret
inc
adc
fs
dec
lahf
push
adc
sub
pop
ljmp
pop
mov
pop
sbb
or
jno
dec
jbe
cmpsl
pusha
jle
rcl
inc
fildll
pop
dec
sahf
sub
lods
fcmovnb
sub
or
jge
mov
dec
call
and
jg
dec
pop
xorb
pop
xor
cmc
push
cmp
dec
cmp
mov
xor
js
leave
cltd
movsl
lods
inc
loope
inc
test
enter
pop
fidivrl
lret
cmp
xchg
sbb
loope
jbe
imul
mov
push
sub
pop
ljmp
outsl
fstpt
stc
xor
jns
loop
jl
xor
ss
cmp
fisubl
loop
shld
out
mov
dec
jp
or
scas
in
cmpsb
inc
fld
cmp
sbb
jl
out
orl
test
sbb
adc
push
mov
in
xlat
dec
fwait
mov
ficoml
pop
cmp
cli
pop
dec
mov
fdivl
pushf
sbb
bound
dec
inc
test
push
jecxz
inc
popa
lods
jnp
popa
mov
imul
daa
sbb
dec
lods
dec
fistpl
rcrb
sti
jno
cli
cli
pop
sub
paddq
cmp
mov
imull
inc
in
inc
frstor
cld
mov
adc
cmp
cmpsb
mov
gs
jbe
ret
std
dec
repz
cli
frstor
or
sub
incb
rcrb
testb
xor
mov
jmp
cmp
xor
push
je
cmp
sbb
les
add
jl
cli
mov
fiadds
sub
in
imul
mov
dec
fs
mov
int3
jnp
out
in
adc
mov
stos
xor
inc
inc
mov
ja
inc
pop
jnp
xor
int
ljmp
in
add
leave
jmp
les
fldcw
jp
push
push
dec
and
fnsave
dec
jmp
dec
daa
push
or
jmp
stc
fldt
push
out
jecxz
sbb
cmp
fdiv
add
pop
mov
into
dec
inc
add
icebp
inc
orl
jmp
pop
movsb
or
dec
push
aaa
insl
insl
loope
aas
inc
xchg
xor
cmp
push
xlat
lahf
mov
xor
stos
ja
add
movsl
outsl
sahf
test
push
xor
jg
pop
mov
push
arpl
jae
mov
or
jo
xchg
sub
fimuls
dec
loope
test
fidivl
cmc
xorb
js
mov
cld
xchg
ljmp
adc
mov
inc
pop
xchg
cmp
outsb
testb
test
out
movsl
outsb
testl
nop
and
lcall
cld
int3
sub
andb
divb
cli
clc
fldt
sbb
pop
stc
add
rorl
test
cmp
push
sbb
push
push
mov
xchg
outsb
out
xor
add
int3
mulb
xor
and
es
dec
jmp
sahf
mov
aaa
pop
dec
inc
aad
add
xor
test
jne
loop
int
inc
and
mov
in
xor
push
movsb
push
push
mov
push
stos
fwait
mov
jns
jmp
ficoms
mov
gs
jmp
mov
in
and
cmpsl
xchg
aas
pusha
js
mov
xor
push
mov
mov
orl
icebp
loop
lock
push
sbb
mov
xor
push
mov
ljmp
loope
not
mov
aas
jmp
loopne
mov
push
jno
push
or
cmpb
add
call
cmp
xchg
ss
push
std
jnp
and
cmpsl
jo
ds
xchg
xor
lahf
shl
adc
stc
aam
or
jmp
sahf
in
push
cmp
jns
or
test
pop
add
mov
call
or
push
das
jnp
xor
cld
jle
and
inc
sbb
add
push
mov
bound
loopne
xchg
lcall
cmpsb
push
int3
ljmp
fdivp
lds
sahf
inc
lods
push
outsl
jp
xchg
cmp
dec
mov
call
out
cmpsb
adc
jg
out
push
inc
and
stc
inc
les
mov
repz
inc
jbe
test
mov
enter
adc
push
xchg
fmull
xchg
test
mov
and
cmc
mov
insb
je
jae
fucomip
fldenv
cmp
mov
sti
rcll
jg
mov
gs
cwtl
cwtl
cmp
scas
xlat
cmp
enter
or
jl
xchg
xor
sbb
mov
jmp
mov
inc
ret
leave
adc
or
mov
call
loop
pop
jo
repz
add
cmp
mov
jne
lret
xlat
outsl
sub
cmc
scas
xchg
pop
rep
imull
aaa
mov
ds
shll
push
insl
cld
call
gs
pop
jbe
or
fisubs
pop
xor
adcb
aam
mov
fwait
cmp
jp
ror
cld
and
leave
pop
lea
push
sbb
adc
pop
leave
mov
xchg
enter
mov
xor
add
push
xchg
sbb
mov
addr16
mov
cmp
sahf
adc
jbe
fs
push
mov
int
js
jbe
js
pop
add
ret
mov
aas
xor
push
daa
xlat
idivl
xchg
mov
int3
imul
mov
jge
xor
sbb
add
dec
sbb
push
cmpb
test
jmp
xchg
inc
or
aas
mov
push
lods
fimuls
ficoml
adcl
out
aad
cs
jle
xchg
out
arpl
lret
into
test
xor
js
pop
dec
call
insb
dec
js
lret
outsb
in
popf
fs
sarb
push
xor
mov
and
lcall
sahf
sbb
and
xlat
in
add
mov
cltd
sahf
push
push
ret
jg
loop
aam
cmpsb
aaa
ss
js
xlat
out
jne
add
push
imul
mov
repnz
mov
cmp
mov
add
inc
popa
mov
sub
mov
pop
jp
cmp
add
adc
imul
push
mov
sbb
adc
pop
imul
adc
and
add
xor
je
push
testl
sbb
mov
mov
push
stc
sbbl
xor
sbb
push
out
or
stos
leave
xchg
aas
fdivs
xor
mov
ds
in
push
aad
cmp
jno
das
dec
cwtl
jl
dec
xor
push
sbb
cld
mov
sub
sbbb
adc
repz
rorl
incl
clc
testb
les
mov
cmpsl
shl
sub
das
xchg
lret
sahf
dec
mov
hlt
adc
jo
cwtl
add
mov
mov
push
cmpsb
mov
aas
pop
sub
lret
mov
mov
or
push
into
and
leave
fdivl
sbb
or
int3
scas
and
lock
adc
outsl
lods
dec
fadd
enter
cwtl
pop
adc
mov
bound
and
pop
adc
pop
sub
outsb
mov
scas
lret
jle
mov
mov
test
je
out
inc
fistl
jmp
rcl
adc
pop
mov
out
add
cmp
mov
add
push
cmc
push
add
ds
rcll
or
inc
rorl
mov
xchg
adc
incl
cmp
xor
inc
sahf
cld
out
push
lods
cmp
shl
or
dec
sbb
dec
mov
mov
pop
pop
ret
and
cmpsl
fldenv
cmp
xor
out
sub
pushf
in
cmp
sti
test
mov
xchg
stc
loope
mov
lret
or
push
dec
mov
cwtl
adc
jmp
adc
add
lock
test
ss
out
js
jmp
cmpsl
adc
and
in
xchg
xor
mov
rorb
sbb
sti
inc
or
mov
mov
imul
rorl
pop
daa
xor
mov
or
push
lret
add
rcll
fisubrs
daa
xchg
daa
jle
mov
pop
sbb
adc
xor
sti
mov
das
inc
aas
mov
test
leave
xor
pop
push
test
xchg
cmpsl
dec
jbe
jecxz
lods
test
in
xchg
pop
cmp
out
in
aas
xor
cli
push
mov
xchg
dec
mov
ret
pop
and
xchg
cmp
jle
inc
mov
lret
xor
dec
jmp
xchg
movsl
rcl
andb
test
push
arpl
scas
ss
fnstenv
out
sbb
jg
mov
jae
jnp
or
out
roll
xor
cmp
xor
inc
jmp
dec
shr
insb
jle
std
cmp
scas
pop
push
enter
daa
fistl
stos
pop
out
xchg
sbb
mov
and
pop
and
incb
test
sub
pop
pop
xchg
out
int3
dec
pop
pop
outsb
jno
pop
test
sub
jecxz
push
xchg
mov
in
sbb
insb
mov
popf
jns
xchg
imul
fwait
cmp
sahf
xlat
aam
cmpb
adc
pop
icebp
mov
jo
outsb
sbb
mov
scas
jge
fiadds
aam
lcall
mov
insb
shl
arpl
push
iret
in
mov
xchg
lods
movsl
std
mov
loop
pop
cmpsl
mov
idiv
stc
pusha
adc
mov
out
in
xchg
sti
or
aam
xlat
cs
adc
sub
pop
adc
push
or
aaa
cmp
daa
sbbb
sbb
test
mov
pop
xor
fstpl
cld
cmpsl
in
out
xchg
adc
sbb
jne
cmp
add
push
scas
fiadds
pop
cmp
push
test
inc
cs
jo
sub
add
xchg
ret
dec
call
jnp
push
fwait
rcrb
adc
add
mov
jecxz
repz
cs
adc
add
ss
loope
jge
shrl
subl
lock
fists
dec
add
mov
xor
fs
and
ss
test
xchg
out
les
fildll
mov
cmp
mov
daa
icebp
aaa
xchg
out
enter
xchg
push
dec
icebp
pop
and
add
sbb
pop
addr16
pusha
sbb
daa
test
jecxz
sub
sub
lret
es
aas
call
lahf
das
mov
adc
xor
test
pop
sub
ja
rorl
out
lds
pop
divl
je,pn
and
cmpsb
stc
stc
dec
and
sti
push
int3
cmp
clc
or
inc
imul
dec
push
push
ret
xchg
sbb
sbb
icebp
adc
mov
adc
or
insl
test
or
mov
sbb
nop
add
cs
dec
pop
stos
call
mov
cltd
mov
in
gs
popf
push
dec
out
sub
xchg
in
or
jne
adc
lods
ret
and
repz
mov
clc
pop
in
mov
arpl
std
dec
mov
sbb
cmpsl
sub
mov
scas
test
sub
roll
out
das
cmpsl
adc
lret
jae
mov
dec
out
sub
scas
data16
push
push
lahf
push
push
mov
out
out
jmp
jnp
pop
sub
scas
or
push
out
pop
cmc
icebp
cmp
ja
jp
aam
jbe
push
cmp
cmp
adc
pop
adc
push
pop
sahf
ja
sbb
mov
adc
sbb
pop
sbb
push
xchg
push
jne
jl
cltd
repz
jge
pop
sub
subb
out
cmp
dec
aad
adc
fstps
bound
and
jo
push
inc
aaa
ljmp
push
jecxz
dec
push
jne
fisttpl
rolb
nop
inc
cmpsl
pop
enter
add
sub
mov
or
jp,pt
or
jg
jmp
rcll
sub
loop
es
jns
or
aad
imulb
and
das
lret
xor
add
xor
jb
out
cmp
cmp
or
icebp
sti
pop
or
fidivs
into
hlt
cltd
mov
sbb
adc
and
mov
std
out
xlat
mov
dec
ljmp
daa
add
loope
cmp
sub
mov
mov
sarb
cmp
mov
dec
test
outsb
adc
popa
or
rcl
xchg
rcl
jne
cs
mov
cmp
mov
js
cmpsb
add
and
push
push
in
inc
jne
inc
inc
daa
jno
adc
andl
xchg
xor
adc
lahf
jg
repnz
dec
rorl
jbe
or
push
lahf
inc
decl
jge
mov
cmc
xorl
mov
jno
cltd
xor
pop
ja
inc
or
push
shl
repz
cmp
in
xchg
test
stos
je
mov
pop
gs
test
mov
xor
movsb
mov
add
shrl
sub
sub
adc
xor
xchg
lods
sub
lock
or
loope
jg
xchg
push
or
xchg
std
iret
cmpsb
cwtl
and
mov
inc
pop
cmpsb
dec
test
jmp
mov
sti
fistpll
jl
in
and
fnstenv
popa
addb
jns
add
leave
adc
jo
daa
je
mov
lret
adc
int
cli
jp
adc
dec
scas
push
push
outsl
dec
push
imul
mov
mov
cwtl
cld
in
daa
pushf
loop
mov
mov
orl
repz
push
xor
inc
aaa
int
subb
loop
mov
jne
in
xchg
in
sub
jo
inc
test
cmp
and
das
popf
cmp
fisubs
and
push
xchg
imulb
cmp
pop
aas
xchg
movsl
ljmp
clc
adc
jno
repnz
insl
lea
cmp
or
idiv
xchg
test
aaa
push
push
sbb
mov
cmp
mov
out
cmpsb
les
xchg
sar
cmpsl
push
sahf
mov
adc
fcmove
inc
movsl
jo
leave
sub
add
sbb
mov
cltd
pop
sub
or
xchg
mov
cmpsb
dec
cmp
lahf
cmp
sbb
adc
loop
sub
out
mov
pushf
xchg
dec
xchg
inc
jp
xor
inc
add
add
mov
mov
mov
sub
mov
sub
daa
ss
jle
out
add
fmulp
sbb
shrl
pop
xor
xchg
jecxz
int
or
les
or
imul
std
mov
loopne
js
call
jb
sub
jns
aas
pop
mov
jg
dec
push
mov
nop
pop
and
lahf
arpl
sub
in
mov
mov
xor
sub
ds
stos
fs
mov
xor
mov
and
fwait
pop
sub
out
dec
lds
xchg
mov
pop
mov
shrl
xor
mov
stos
ljmp
movsl
pop
imul
out
loopne
jge
lods
push
cmp
loope
bound
sub
stos
int
adc
cltd
sbb
push
xchg
xchg
xchg
leave
jb
inc
pop
inc
fmull
stos
jecxz
in
or
sub
push
mov
or
test
pop
test
outsb
ret
call
sbb
in
cmp
or
psubusw
cs
xchg
pop
fadds
xlat
aaa
movsb
push
dec
sub
and
push
xchg
lock
mov
sub
jns
out
in
inc
xchg
sub
or
mov
stos
stos
icebp
adc
scas
xor
loop
outsl
out
sbb
sbb
inc
lahf
es
cmp
fbstp
mov
push
pop
mov
cmp
rcrl
jno
call
imull
in
loop
gs
inc
popa
fimull
pushf
xor
pop
call
cli
mov
jecxz
xchg
adc
in
xchg
out
lcall
push
enter
mov
in
es
xchg
sub
outsl
add
call
inc
and
xchg
lock
inc
repnz
jmp
daa
xor
out
clc
rcll
ds
mov
jecxz
inc
sbb
xor
iret
push
xchg
dec
into
sbb
xchg
adc
jecxz
inc
shl
adc
sbb
repnz
inc
xlat
sub
sbb
dec
add
lret
mov
gs
outsl
sub
cli
mov
repz
mov
iret
xor
jnp
out
into
cmpsl
inc
jns
nop
pop
ret
cmp
ds
sub
outsl
or
loop
mov
sahf
ljmp
cs
inc
jbe
sub
cli
and
sarl
mov
les
enter
sub
movsl
mov
bound
jge
addr16
or
push
in
ljmp
lret
dec
push
mov
and
xchg
jg
sbb
xor
jg
mov
clc
popf
xor
insb
sub
sahf
imulb
push
sub
xor
push
mov
insb
cmpsb
sbb
sub
mov
dec
insl
dec
out
jecxz
or
push
xor
pop
ss
insl
sti
pop
roll
dec
push
sahf
je
lea
test
icebp
sbb
xor
pop
push
sub
imul
ljmp
in
add
xchg
push
push
mov
sub
mov
mov
in
xlat
es
mov
adc
and
cmp
mov
jbe
jne
data16
cs
or
lcall
mov
jb
and
mov
rorl
dec
sti
pop
loope
add
mov
je
insb
aaa
cmpsl
pop
sub
fstpl
mov
stos
aas
fwait
mov
fcompl
addr16
nop
orb
sub
fucomp
js
adc
mov
jg
dec
mov
jg
mov
xchg
insb
in
jo
add
and
jecxz
aaa
popl
xchg
lock
jp
sub
shrb
or
adcl
shlb
ljmp
xor
xchg
inc
movsb
jo
mov
push
movsb
sbb
shl
mov
dec
stos
dec
sbb
mov
sub
clc
rorb
mov
xor
in
push
js
sahf
adc
xchg
jae
pop
into
jb
xor
shlb
dec
lea
scas
pop
or
into
scas
in
dec
out
insl
mov
rcrb
arpl
mov
jnp
and
loopne
aad
xor
dec
cmp
push
inc
cmp
and
stos
add
dec
dec
loope
sub
aas
insl
jnp
insl
insl
inc
iret
addl
jl
fidivl
dec
jnp
inc
sti
push
push
push
mov
cld
imul
pop
dec
xchg
pushf
gs
outsb
fimuls
daa
or
shrb
dec
add
fisttpl
bound
ljmp
mov
or
xlat
aaa
xchg
mov
dec
ret
dec
stos
xchg
or
insb
aad
mov
es
in
push
push
mov
push
clc
sub
movsb
jo
daa
lea
movd
mov
xchg
fsubl
sub
jne
cmp
jmp
mov
or
push
movd
leave
ljmp
xchg
test
mov
fcomi
rorb
in
imul
icebp
call
loop
mov
cmp
je
das
add
loope
mov
sbb
and
sti
xor
inc
adc
movsb
sbb
roll
out
pop
pop
stos
xchg
out
mov
xor
pop
dec
rcll
pop
dec
movsl
adcb
loope
subl
adc
hlt
shl
mov
inc
mov
out
imul
sub
and
mov
adc
xor
push
add
and
add
push
and
test
and
test
aas
test
inc
test
andb
cmp
test
push
js
ljmp
js
flds
js
flds
loop
add
flds
js
fsin
js
frndint
js
fsqrt
js
fprem
js
fdecstp
js
fstps
js
fpatan
js
fyl2x
ja
cmp
movsb
dec
subl
xchg
or
dec
ret
sub
mov
pop
das
in
in
or
inc
push
shr
or
push
das
aaa
outsb
out
leave
test
sub
sub
push
loop
jno
lock
or
out
in
add
cmp
es
andl
and
sbbb
sarl
ds
dec
flds
sbb
cmp
idiv
jns
sub
pop
stc
or
clc
loope
mov
loop
sbb
sub
lcall
cmc
mov
sahf
fidivl
jne
into
add
into
ljmp
adc
out
pop
fs
addr16
icebp
sub
push
into
dec
push
stc
mov
in
fists
push
cmp
nop
decb
cltd
js
mov
scas
adc
dec
sbb
out
dec
sarl
in
loop
loopne
pop
add
mov
sub
ljmp
dec
mov
mov
mov
mov
push
jb
or
sahf
mov
mov
cwtl
nop
scas
mov
subb
gs
popf
inc
fsts
jbe
or
jecxz
xor
in
xchg
cmp
pop
fnsave
clc
lea
hlt
push
inc
jno
jp
jge
lea
cs
addr16
push
xchg
fcomps
rorb
jne
sbb
int
jne
in
dec
wrmsr
ds
movups
dec
sub
adc
inc
xchg
daa
dec
pushf
mov
in
xchg
xchg
lcall
cmp
iret
vunpckhps
sti
popa
xor
aad
sbb
jno
sub
out
movsl
in
xchg
mov
ret
scas
add
mov
pop
xchg
adc
arpl
xor
fildl
mov
inc
jp
in
ljmp
imul
xor
cmp
pop
outsl
out
dec
lcall
xchg
daa
mov
xor
or
inc
sbb
adc
dec
adc
pop
punpckldq
or
scas
test
sbb
jg
lods
xchg
mov
jmp
dec
inc
cmp
inc
leave
mov
sub
imulb
dec
jmp
jne
sub
inc
and
pmuludq
sarl
xchg
adc
enter
popa
scas
lret
adc
test
sbb
cmp
mov
dec
ja
dec
mov
mov
xor
ret
es
out
in
push
jnp
push
lcall
sub
popf
lcall
mov
lds
rolb
xchg
sub
mov
xchg
pop
out
lahf
stos
adc
hlt
inc
nop
and
es
int
out
mov
push
inc
pop
repnz
out
mov
pop
cmove
push
xchg
lods
and
cmpsl
inc
add
or
popf
or
stos
add
and
call
adc
mov
hlt
pop
ret
clc
pop
popf
pop
pop
int3
stc
lock
add
and
mov
inc
movsb
movsb
mov
js
fabs
js
ja
push
mov
mov
pushf
and
add
ret
or
inc
das
cs
movsb
stos
scas
cltd
dec
addr16
xchg
pop
or
xchg
sbb
dec
cmp
cmpsl
jae
and
ljmp
out
cmc
or
pop
negl
mov
or
xchg
push
push
popf
xchg
sub
shr
sub
and
je
int3
out
jns
insl
testb
jle
cmpsl
mov
out
mov
sub
out
inc
xor
inc
scas
and
jg
jge
dec
mov
or
call
fimull
aaa
push
xchg
data16
xchg
mov
pop
out
ja
cmc
sbb
dec
sub
nop
add
das
inc
scas
sahf
mov
in
ja
xchg
lock
call
faddl
mov
test
cmp
xor
sub
sub
dec
shl
fs
adc
and
fimuls
in
dec
ss
lret
lds
icebp
adc
push
pop
aas
lods
sub
lea
stos
std
adc
adc
sbb
int
inc
cltd
jl
sub
aas
jmp
adc
and
xchg
hlt
cmpsb
mov
xchg
orl
test
aaa
pop
pop
jp
insb
jecxz
insl
dec
in
sahf
lcall
shll
xchg
xor
int3
push
in
mov
scas
les
mov
jle
sub
adc
hlt
and
fnsave
mov
in
cmp
pop
sub
push
push
int
xor
pop
aam
dec
xor
jmp
jno
rcll
add
movsl
add
divb
jne
stos
mov
mov
mov
daa
xchg
mov
sub
stos
adc
and
dec
icebp
mov
ret
pop
pop
test
or
cmp
jge
jb
add
out
and
pop
inc
pop
cmp
fcoml
inc
loop
adc
outsb
je
lcall
add
and
sub
xchg
daa
imulb
insl
rcrb
xor
push
xor
jecxz
jo
inc
cmp
inc
stos
movsl
cmpsl
push
mov
jbe
xlat
pusha
out
mov
jecxz
mov
pushl
mov
or
cmp
cmpsl
push
sub
cmp
pop
lcall
or
xor
ret
inc
bound
jae
jns
lea
dec
inc
xchg
and
jbe
lock
cs
daa
push
inc
movsl
lahf
dec
push
cmpsb
mov
ljmp
cs
nop
repnz
xor
mov
and
xor
xor
push
jecxz
neg
xor
xchg
cmc
fstpt
sarb
jo
lods
pop
push
sahf
loopne,pn
push
adc
push
subb
int3
aaa
fiaddl
sbb
dec
into
pop
add
xor
lods
add
rclb
adc
jae
lods
outsl
data16
js
nop
jns
jnp
mov
inc
stc
push
stos
shrl
dec
scas
sub
into
stos
stos
xchg
and
inc
movsl
fldcw
mov
or
std
mov
cmpsl
sub
jnp
fwait
cltd
int
xor
test
jmp
mov
fstpt
nop
inc
sbb
test
xchg
stc
cmp
insl
jb
mov
inc
sub
pusha
cmp
pop
cmp
jo
aad
stc
js
mov
and
sub
lock
dec
pop
pop
call
cmp
enter
mov
sarb
out
enterw
ret
das
mov
aas
fsubs
xor
scas
fwait
pop
push
fsqrt
add
mov
bound
cmp
cmp
xchg
nop
cld
mov
lods
and
mov
call
leave
cmp
adc
scas
cwtl
pop
push
and
ret
icebp
ljmp
jnp
ss
xor
outsb
nop
inc
dec
xchg
jnp
mov
push
sub
fdivl
cmp
push
mov
adc
dec
push
lods
pop
shrb
inc
cmp
push
fidivl
loopne
setle
dec
push
xchg
in
xor
push
daa
jb
push
push
xchg
jle
cltd
push
jns,pn
jo
lcall
xor
insl
ss
jmp
inc
outsb
out
and
cli
mov
sti
test
sbb
shlb
sub
ds
or
mov
or
aad
outsb
sti
in
xor
sti
mov
jae
xchg
out
into
mov
bound
cmp
ret
ljmp
push
or
or
in
out
jbe
dec
sqrtps
sub
xchg
push
cmp
arpl
mov
lahf
jb
dec
mov
mov
in
adc
imul
rolb
mov
push
jmp
sub
xor
das
cs
cmp
jle
ficomps
push
hlt
stos
popa
in
out
nop
jns
mov
jbe
movsl
adc
cmp
xor
jge
pop
jne
jne
jmp
dec
mov
jns
iret
pop
mov
adc
out
pop
cmp
and
mov
pusha
popf
outsl
cmp
xor
je
push
inc
cmp
adc
clc
lds
fprem
mov
jl
leave
fnstsw
dec
jmp
inc
outsl
test
insl
fdivs
dec
sub
or
adc
ret
test
or
add
pop
mov
fs
adc
int3
outsb
adc
lds
mov
int
orb
pop
ja
jne
outsb
hlt
insl
sub
push
cli
xor
outsb
adc
mov
clc
mov
adc
inc
test
je
ret
mov
nop
sub
push
dec
jge,pn
movsl
fists
fisttpl
scas
jns
fwait
in
mov
sub
push
ja
jae
icebp
lahf
mov
xchg
insb
aas
stos
jne
fiaddl
xchg
outsb
rclb
mov
pop
fs
pop
leave
ljmp
rorb
add
mov
jo
push
inc
test
or
cmpsb
mov
jle
cli
and
shl
xor
mov
jge
xor
push
mov
cmc
jmp
push
cmc
adc
xor
cli
sub
adc
cwtl
push
and
pop
xchg
sub
cmpsl
mov
push
ss
addr16
mov
mov
fistps
pop
sbb
mov
add
mov
add
ljmp
pushf
mov
sub
movsl
adc
xchg
xchg
pop
daa
inc
cmp
test
fildll
lahf
sbb
adcl
out
fisubrl
js
cmp
push
and
add
cmp
push
repz
rorl
data16
call
cmp
jmp
mov
cs
divb
adc
xchg
hlt
or
adc
xchg
scas
cmp
arpl
es
cltd
adc
movsb
hlt
cmp
xchg
jnp
les
mov
dec
add
pop
dec
push
cmp
test
inc
movb
popa
es
inc
mov
dec
into
jbe
inc
adc
jnp
xorl
test
lds
mov
mov
in
in
nop
push
fsubr
pop
ss
lret
jo
iret
add
scas
testb
call
dec
jo
and
pop
fbstp
xor
dec
das
mov
sbb
ljmp
dec
ss
jle
out
adc
lahf
imul
loop
sbbl
js
pop
inc
stc
mov
enter
ficoml
push
imul
lret
xor
mov
das
cmp
outsb
movsb
jge
add
gs
sub
subl
pushw
mov
inc
ret
hlt
mov
clc
daa
add
and
loopne
sbbl
inc
lret
push
mov
sub
dec
jo
icebp
pop
lock
clc
cmpps
inc
jns
clc
mov
fildll
jb
jns
dec
xchg
ret
aaa
rclb
or
aaa
rcr
or
mov
cwtl
dec
mov
sbb
std
inc
in
clc
dec
mov
push
push
inc
or
rclb
loop
es
push
rol
jb
insl
sub
stos
int
inc
mov
fwait
lret
mov
inc
jne
xchg
test
push
and
les
mov
lods
xor
inc
adc
fadds
lahf
or
xchg
push
jb
addb
jmp
dec
sub
ret
inc
cs
es
lret
xchg
je
push
push
test
mov
and
inc
xor
jg
dec
test
loopne
inc
push
arpl
fadds
mov
mov
add
mov
jecxz
scas
push
jb
fnsave
mov
dec
push
sbb
lods
dec
shll
fcmovu
adc
loope
es
rol
arpl
mov
xor
arpl
in
mov
xchg
mov
es
loopne
xchg
jp
out
sbb
add
mov
divl
pop
adc
sub
fisubs
push
sbb
loop
mov
gs
popa
mov
ljmp
cmpsb
adc
mov
or
push
jp
xchg
adc
shrb
jl
mov
pop
aam
les
sbb
adc
push
xor
fs
push
or
sub
sbb
push
dec
pop
arpl
das
bound
jl
cmp
xor
shl
or
cmp
fs
sub
push
ficoml
mov
aam
sar
aas
cmpsl
aas
push
push
out
push
fstl
jo
cld
xchg
mov
mov
lcall
xchg
or
sub
leave
out
sahf
mov
cmp
ja
sbb
push
lret
das
bswap
popf
test
pop
ss
sub
mov
jge
push
in
jb
or
push
leave
rcrl
ds
xor
stos
cld
cltd
daa
lcall
ret
cmp
repz
sti
jmp
dec
shll
hlt
subb
out
jge
mov
and
cwtl
test
mov
push
xchg
pop
aas
pop
leave
lcall
mov
fcoms
add
mov
jmp
or
and
mov
jns
jge
adc
cmpsb
jecxz
xor
or
fstp
push
cmp
jae
jge
add
out
inc
xchg
fidivrs
add
movl
rolb
into
into
dec
enter
pop
test
fmull
jns
cmp
sub
pop
push
in
mov
add
mov
mov
decl
aaa
mov
sub
ljmp
lds
xchg
push
leave
xchg
sti
js
test
jp
xor
es
inc
arpl
cli
in
sbb
dec
mov
out
aad
movsl
xchg
cmp
int
lret
lock
cmp
fst
mov
mov
and
nop
sub
inc
ja
mov
mov
stc
cltd
shll
fwait
xchg
outsl
clc
inc
popa
leave
push
daa
js
out
push
enter
call
cwtl
test
inc
nop
andl
int
les
inc
mov
bound
push
aas
imul
fimuls
repnz
and
data16
jnp
xor
cwtl
cmpsl
scas
cs
call
push
xchg
push
dec
dec
mov
ss
pop
cmp
push
scas
loope
cmp
mov
push
lds
int
sub
mov
cmp
jbe
xchg
call
in
pop
sbb
and
adc
mov
cmc
ja
jno
mov
cmp
dec
and
xchg
push
std
out
cmp
scas
mov
out
fwait
mov
out
in
mov
mov
xor
or
icebp
int
mov
push
xchg
lret
sbb
outsl
pop
sub
lret
mov
outsl
xor
fstl
inc
and
inc
mov
mov
subb
push
lcall
test
push
xchg
or
jns
dec
jnp
xchg
sub
in
sub
mov
and
adc
js
adc
cmp
out
into
pusha
popl
fdivrl
mov
out
sbb
in
or
data16
jo
cmp
shl
jl
sub
test
fmull
mov
push
mov
in
add
cltd
inc
ljmp
pop
cld
push
sbb
rorl
fcompl
or
cmpsl
arpl
xlat
fisubrl
push
out
std
mov
inc
das
dec
sub
mov
jbe
push
repz
cmpsb
add
outsb
xor
jne
xchg
jns
jmp
or
daa
inc
leave
dec
jo
xor
xchg
cmp
sub
aas
xor
sbb
out
adc
js
adc
sub
pop
in
xlat
repnz
nop
pop
mov
xchg
test
sub
mov
insl
es
xor
jns
je
sbb
pop
lcall
repnz
push
add
xchg
sub
notb
addr16
icebp
inc
into
add
mov
sub
jns
sub
movsl
imull
inc
add
pusha
daa
or
push
negl
jg
and
sahf
push
into
cmp
mov
je
daa
or
out
push
pop
shrb
test
movsb
dec
repnz
adc
sbbb
inc
jmp
enter
jbe
dec
rorb
push
mov
cmp
push
es
jge
adc
repnz
lret
or
xchg
jl
movb
xor
push
jl
imul
jb
sbb
loope
jge
pop
movsl
ss
add
lahf
loope
dec
sub
lahf
test
fcoms
cmp
and
or
mov
in
inc
and
pop
xor
sub
dec
icebp
popf
jmp
in
mov
orb
sub
cmp
into
cld
xor
pop
mov
dec
call
xor
pop
push
pop
add
jne
jmp
inc
outsl
xor
movsb
xchg
mov
mov
mov
jle
adc
and
outsl
bound
cltd
arpl
mov
pop
bound
shll
gs
imul
mov
or
lock
fs
jge
loop
add
cmp
mov
aaa
sti
jns
enter
xchg
insb
dec
or
pop
nop
or
pop
popf
ss
or
cmpb
imull
sub
movsb
sub
nop
mov
cmp
sub
xor
inc
dec
gs
xchg
and
cmp
push
scas
outsl
pop
jbe
xor
les
sbb
cmpsl
es
add
or
jno
jecxz
mov
lods
sbb
daa
cwtl
push
mov
and
daa
outsb
movzbl
int3
leave
ss
jns
insb
cmpsl
mov
cmp
mov
push
pop
inc
add
jg
mov
ret
push
push
data16
pop
xor
subb
ljmp
inc
fmul
inc
push
rorb
mov
jb
cli
ret
add
fwait
jle
pushf
cmp
adc
imul
mov
popf
mov
fisubrl
pop
inc
add
cmp
inc
push
sub
ja
adc
jb
xorl
insb
frstor
subb
xlat
or
ss
sbb
loop
fstpl
iret
dec
xchg
lret
or
mov
and
jle
out
push
jl
lods
clc
ret
lods
pop
pop
cli
aam
jp
dec
mov
xor
mov
or
scas
and
mov
push
sahf
mov
pop
or
loop
scas
jae
sub
xchg
mov
adc
jmp
or
mov
leave
and
rcrl
add
adc
lcall
sub
jl
cltd
xor
sub
push
scas
into
fbstp
subl
sbb
push
pop
aad
xchg
and
sbb
sbb
xchg
sbb
andl
sbb
scas
addl
fstpl
cmp
xchg
pop
mov
js
cmp
mov
jl
sbb
pop
fucomip
jbe
cmp
jg
adc
fsubr
sti
pop
jge
jo
aaa
test
es
aam
inc
lret
xor
adc
and
iret
mov
dec
jno
cs
adc
and
movsb
out
jecxz
and
sub
mov
adc
lock
pshufw
xchg
sub
cmp
imul
fxch
lcall
dec
push
sbb
andb
negb
mov
sub
insb
adc
scas
xchg
adc
shrl
fisubrs
iret
add
sub
cmp
lds
pop
dec
push
lret
sbb
je
push
jns
fstl
fcoml
aad
daa
push
aad
nop
push
and
jp
ffree
test
xlat
hlt
mov
dec
lret
push
pop
insb
and
mov
es
sub
cmpb
cltd
js
xor
cmp
mov
adc
fdivrs
lret
stc
test
into
inc
lret
mov
push
mov
push
push
xor
push
cs
mov
lock
jl
mov
shll
jecxz
mov
inc
fcoml
pop
inc
xchg
mov
jg
dec
notb
sub
sbb
sub
add
sub
xor
jmp
out
xchg
cwtl
gs
jmp
fidivl
aas
cli
syscall
mov
mov
lahf
addl
or
lods
jp
or
mov
or
sbb
jge
leave
mov
ret
mov
push
xchg
and
dec
loope
pop
mov
xchg
and
mov
push
and
jno
ret
add
mov
pop
idivl
outsl
cltd
mov
xchg
psrlw
add
cmp
mov
cmc
xor
and
es
test
lds
sub
fimuls
adc
add
cs
cwtl
jecxz
or
and
dec
mov
mov
shrl
xchg
jno
ss
jns
lods
hlt
outsb
mov
aad
jge
cmpsb
cltd
pop
jo
data16
jecxz
inc
dec
out
dec
loope
cli
stos
icebp
lods
call
cmpsb
inc
push
int
insb
loop
lods
outsl
stos
in
push
mov
cltd
imul
out
mov
cmp
or
dec
xchg
popa
stc
mov
rorb
mov
fdivp
sbb
fwait
insb
hlt
mov
jecxz
nop
sbb
testb
pop
js
jmp
push
inc
dec
push
dec
push
cs
adc
popa
or
push
pop
fwait
push
ret
lea
stos
sbb
mov
aas
pop
jle
mov
outsb
push
outsl
rcrl
dec
add
insl
daa
enter
xchg
das
push
sub
jp
sahf
shrl
inc
push
out
cmpb
repz
xchg
jbe
ljmp
icebp
cmp
lcall
repnz
adc
fstpl
jne
adc
adc
pop
lock
sbb
cmc
xor
stc
sub
jns,pt
inc
adc
push
scas
popl
out
jle
adc
jg
movsb
dec
daa
mov
dec
mov
in
pop
xor
jp
add
data16
cltd
popf
inc
push
insb
jb
add
test
add
xchg
sbb
sar
jecxz
test
sub
scas
jne
jnp
mov
adc
mov
pop
xlat
cmp
xchg
test
cld
push
sub
pop
mov
adc
movsb
pop
cmp
stos
jbe
add
fiadds
push
scas
das
dec
mov
mov
and
mov
ret
jnp
inc
push
fcoml
ret
mov
and
mov
adc
ljmp
aad
sahf
outsl
insb
mov
ds
imul
xor
mov
xor
dec
testb
ss
dec
lea
leave
cs
cmp
add
mov
addl
cmp
arpl
int
or
testb
jl
jnp
xchg
mov
jle
fcomps
jo
sub
adc
add
stos
out
adc
mov
adc
cwtl
xchg
mov
insb
mov
sbb
add
and
push
in
in
cs
adc
pushf
mov
inc
aaa
shlw
dec
int
fwait
xor
out
mov
mov
dec
dec
jmp
and
adc
imul
xorb
cmp
outsb
sahf
jmp
test
hlt
scas
lret
add
xor
out
lods
cmpl
dec
stc
push
push
out
fs
push
pop
dec
dec
pop
test
adc
sub
cmp
sti
insl
leave
enter
andl
jnp
repz
pop
or
xchg
sub
in
add
loop
sub
pop
push
in
xor
lds
je
pop
dec
push
pusha
inc
scas
jns
inc
leave
test
insl
mov
pusha
or
add
jb
test
lods
data16
mov
jle
inc
enter
aaa
cmp
add
rol
es
sub
sbb
push
jns
sub
sub
push
ficompl
bound
adc
out
pop
push
mov
xchg
and
clc
mul
xchg
or
jp
inc
pop
mov
in
add
cmp
mov
or
js
inc
xchg
push
lea
sahf
dec
sbb
sub
mov
xor
mov
imul
add
cmp
test
push
sbb
jns
xor
sbb
std
sbbl
movsl
mov
iret
scas
cli
jae
in
sub
shrb
imul
adc
mov
add
out
lcall
mov
inc
aaa
negl
in
sbb
popf
add
jb
cli
out
repz
in
or
dec
ljmp
adc
leave
into
fsubrp
bound
fldenv
adc
push
sub
push
std
jg
in
pop
out
fstpl
cld
adc
das
sub
sti
inc
roll
jge
test
jnp
xchg
out
clc
push
bound
cli
mov
stos
js
je
jo
mov
clc
stc
lods
cltd
sub
pusha
test
inc
jns
lret
mov
cmp
imulb
push
imul
push
sub
pop
cmp
and
jo
mov
cmpsl
push
in
dec
arpl
in
sbb
cmp
je
mov
icebp
scas
and
adc
hlt
pop
lret
gs
stos
push
xchg
mov
jecxz
testl
add
push
incl
pop
icebp
mov
jns
sub
test
inc
fwait
mov
inc
cld
lods
or
insb
cmp
js
cmp
push
clc
jno
xchg
mov
fwait
jno
fs
jp
mov
cwtl
int
fwait
and
inc
cld
cmpsl
pop
int3
xlat
mov
push
sbb
push
lock
shr
imul
std
clc
jg
xor
xchg
dec
inc
jo
mov
sbb
ds
enter
insl
mov
shlb
loopne
repz
inc
fildll
stc
cs
shlb
fwait
xor
xchg
or
shrl
adc
cmp
bound
mov
mov
mov
xor
lea
xchg
std
lea
lods
jg
adc
adc
mov
push
test
lea
and
stc
addr16
adc
sub
imul
sub
fnstsw
fldl
mov
lea
cmp
daa
pop
std
leave
cmp
cltd
dec
and
cmpsl
cld
and
fs
and
xor
imul
test
xchg
sub
pop
sahf
fcoms
adc
adc
mov
or
lock
jnp
dec
fisubl
subb
cmp
or
dec
or
mov
lcall
out
lea
cmp
mov
inc
outsl
sub
pop
je
shrl
cmp
aam
mov
xor
pop
pop
pop
cmpsb
add
sbb
pusha
dec
jp
push
call
xchg
sub
sti
inc
fmuls
into
outsb
dec
or
loope
cs
test
stos
mov
sub
hlt
je
jne
enter
sbb
push
mov
pusha
ret
ret
push
lds
push
out
or
dec
repnz
jge
gs
jg
test
repnz
enter
mul
arpl
mov
mov
jge
pop
mov
push
loope
sbb
dec
fldcw
add
pop
jl
sub
mov
mov
push
wrmsr
test
mov
mull
push
push
jl
ret
sub
shrl
data16
orl
or
cli
jg
and
sahf
pop
sub
jge
jmp
lock
jge
or
mov
sub
in
aaa
xchg
inc
repnz
cmp
rorb
mov
std
cwtl
stc
insl
mov
jbe
lds
scas
outsb
aam
jnp
ljmp
sbb
leave
imul
xchg
push
push
mov
scas
mov
dec
sahf
xor
daa
sub
push
lds
icebp
cmp
sbb
mov
ja
jae
push
movsb
cmp
cmpsl
ss
notb
outsb
out
stc
jo
test
fucomi
pushl
lret
xchg
movsl
jg
add
mov
cmpsb
push
xor
fadds
cmpsb
push
sub
mov
lret
ljmp
leave
cmp
and
jb
cmp
sbb
std
adc
mov
lcall
imul
and
je
xchg
xchg
addr16
xchg
adc
pop
shl
fiadds
lods
dec
cmp
xchg
js
mov
push
outsb
fxch
or
stos
movsl
aaa
inc
aaa
push
jmp
test
sub
inc
sar
fwait
je
cmp
sbb
xchg
pop
xor
pop
sarl
dec
mov
xchg
push
xchg
jnp
ret
fildll
lret
mov
jmp
call
cmp
xchg
sub
test
or
rcrl
out
adc
xchg
jno
arpl
xchg
mov
inc
mov
adc
bnd
add
loop
push
cmp
xor
and
inc
mov
inc
out
or
cmpsb
cmp
cs
lods
inc
repnz
xchg
mov
pop
pop
adc
cli
out
lret
int
push
push
jmp
cmp
lea
jbe
shll
repnz
rorb
pop
lahf
das
mov
xchg
les
add
or
cmp
sub
lds
ficoml
call
push
mov
fdiv
test
and
scas
mov
mov
enter
js
and
mov
sub
mov
jp
loope
aaa
sti
push
mov
sbb
push
arpl
push
pop
enter
xor
sbb
xor
arpl
call
cld
dec
cwtl
outsl
jge
mov
push
add
lock
inc
iret
mov
pop
mov
inc
dec
rolb
sub
xchg
int
jg
dec
mov
data16
jne
mov
add
jo
mov
jo
daa
sub
sub
jle
je
cmp
repnz
sub
jae
add
out
jbe
orl
pop
xor
pop
stos
jl
or
cmp
pop
and
addl
test
or
pop
xchg
push
ja
push
fisubrl
lret
push
fistps
or
mov
aam
shll
out
cltd
mov
pop
pop
jno
movsb
lods
loopne
fidivrs
ret
orl
add
lds
ljmp
dec
lret
jne
mov
push
xorl
aas
and
addl
fsubrl
clc
inc
ja
mov
jge
push
ss
movsb
scas
push
mov
jb
sbb
fisttpll
cltd
push
add
addr16
and
xchg
pop
mulb
nop
ja
ja
pop
lret
inc
mov
cmpb
out
adc
and
inc
lea
or
test
pusha
push
pop
pop
pop
jae
cmp
xor
fldcw
pop
push
out
imul
cmp
sbb
fadd
fisttpl
nop
pop
cmp
imul
push
jg
stc
and
lea
cmpsl
or
ja
fistpll
sbb
daa
push
pushf
dec
cmp
sahf
xchg
cmpsl
mov
rcrb
xchg
test
mov
or
cmpsl
add
mov
jecxz
imul
imull
pop
push
xchg
mov
lds
fimuls
mov
inc
and
sbb
lea
loop
jno
add
loopne
inc
int3
test
stc
aas
push
jle
jns
into
ds
pop
aaa
dec
dec
cmp
or
enter
sub
mov
cmc
cmp
inc
das
loop
xlat
cmp
sbb
adc
adc
sbb
repnz
lods
imul
sub
sub
pop
mov
or
sarl
add
mov
mov
test
pop
mov
inc
xchg
add
push
icebp
xor
scas
mov
and
pop
push
cmpsl
and
lcall
lea
adc
cli
ficomps
mov
xchg
mov
int3
jns
in
pop
jno
dec
fcomip
lcall
jo
data16
mov
push
popa
dec
mov
adc
jb
shr
push
pushf
int3
movsb
stc
xor
in
push
mov
insl
adc
xchg
inc
cmc
dec
add
stos
dec
xchg
dec
adc
in
dec
push
mov
clc
fisttpll
jnp
ss
std
or
into
mov
loopne
repnz
test
jnp
jg
data16
or
cmp
mov
adc
dec
fs
xor
movsl
push
add
sbb
jecxz
lahf
imul
xchg
mov
shlb
insl
or
sti
pop
inc
call
pop
cs
or
lcall
scas
rorl
cmp
mov
add
mov
mov
sub
les
ja
fidivl
mov
jbe
lret
insb
movsl
and
jo
cmpsb
fidivrs
mov
mov
cli
sbb
nop
stc
iret
imul
ss
pop
push
lcall
les
fistl
push
sbb
mov
mov
mov
stos
leave
sub
negb
push
test
or
pop
test
cs
xor
pop
popa
shll
bswap
mov
test
repz
aad
push
xor
rcll
int
cmp
push
lds
dec
idivb
aad
or
das
sbb
bound
push
cmc
imul
inc
les
mov
leave
and
sub
rorl
sarl
mov
or
xor
jns
mov
fwait
sbb
mov
push
popf
pop
std
jg
popf
add
adc
dec
mov
lcall
xor
dec
jns
out
xchg
into
xchg
add
icebp
loope
cltd
popf
ss
outsb
iret
es
imul
and
jp
or
mov
jge
and
add
mov
test
out
stc
and
xchg
fidivs
rcll
outsl
insl
cs
and
test
pushf
or
jo
sub
lea
data16
out
outsb
lcall
sbb
popf
dec
sub
inc
jno
mov
insl
xor
nop
ljmp
rcl
loop
movsl
test
push
ds
sub
jl
xor
jge
loope
xlat
hlt
cmp
push
jp
pop
xchg
or
or
movsb
rcrl
fs
lret
xor
xchg
cmp
push
inc
push
mov
add
test
jecxz
jnp
mov
out
add
sahf
es
mov
ss
mov
mov
add
fwait
jne
sub
cmp
mov
jp
in
mov
cmp
pop
in
aam
into
addl
push
jbe
test
gs
cmp
ret
xor
les
jg
fnstcw
push
jbe
enter
add
daa
scas
push
xor
sahf
mov
cmp
mov
loop
fisttps
insl
fldl
cs
lods
dec
inc
dec
inc
inc
jp
jge
xchg
call
push
xchg
dec
cmp
push
andl
rol
stc
cs
push
cmp
bound
cmp
popf
aas
aam
fwait
aad
pop
xchg
das
loop
pop
pop
cmp
mov
cmp
adc
jecxz
mov
int
add
cmp
inc
enter
sbb
test
cmp
cmp
call
lods
repnz
mov
lock
jecxz
dec
or
pop
xor
lahf
adc
lret
adc
nop
lcall
jle
or
pop
jl
xor
data16
xor
inc
pusha
inc
out
insl
sub
dec
inc
out
lea
pop
push
mov
jl
xor
mov
cs
cltd
in
dec
pusha
xor
push
pop
dec
shlb
shl
lods
nop
and
push
jle
imul
leave
stc
mov
cld
cmp
inc
add
mov
xor
rolb
jne
xchg
cwtl
pop
and
jno
pop
xchg
xlat
or
push
mov
lock
lea
cmpsb
add
insl
sbb
cmpsl
lret
js
out
mov
mov
adc
idivl
sbb
or
mov
add
data16
int3
fbld
mov
or
jl
jmp
or
std
xchg
adc
mov
adc
ds
stc
sub
pop
jbe
mov
insl
jb
sub
push
lcall
mov
mov
mov
ljmp
cld
jmp
daa
and
push
lahf
add
imul
push
pop
imul
pop
and
imul
cmp
jg
pop
adc
cmp
xor
sub
sub
inc
movsl
push
xor
sub
aaa
lahf
push
fildll
lods
mov
add
jge
jmp
cmp
jno
ds
sbb
mov
or
add
inc
ret
loope
push
arpl
and
mov
sbb
addb
enter
jmp
adc
sub
addr16
pop
jg
std
int
aas
and
add
pop
xchg
jl
repnz
push
xor
cwtl
enter
xor
push
lcall
jl
xchg
pusha
cmp
xchg
mov
xchg
sbb
jp
mov
fisubl
ss
sbb
jb
js
adc
sbb
and
out
stos
cmpsl
cld
xor
mov
or
into
jns
shr
cmp
int
or
outsb
je
repz
lret
imul
rcl
mov
int
inc
enter
lcall
xchg
dec
jnp
pop
dec
inc
inc
leave
mov
push
pop
inc
jmp
mov
cmpsb
fwait
es
add
inc
ja
sbb
lret
out
stos
xchg
mov
mov
push
std
hlt
sar
adc
arpl
inc
or
mov
adc
mov
out
rcrb
les
sbb
mov
push
out
loopne
ficomps
lods
cmpl
cmp
cmpsb
dec
nop
inc
dec
out
mov
add
ficoms
xor
dec
lret
jg
xchg
jo
push
imull
cmp
xchg
pop
cmc
jno
push
les
sbbl
push
xchg
add
or
jmp
xor
sub
inc
insl
call
inc
clc
in
sbb
clc
pusha
or
fildll
mull
cmp
add
mov
add
mov
cmovo
xchg
jb
mov
in
cwtl
dec
test
jmp
dec
dec
xchg
nop
sub
and
push
dec
inc
ret
jl
and
daa
sub
inc
or
adc
dec
daa
ret
sub
push
notl
push
dec
lret
pusha
packssdw
mov
mov
dec
dec
xchg
sub
xchg
inc
dec
xchg
bswap
fnstenv
insl
sbb
push
lea
ss
imulb
mov
outsl
test
icebp
aas
mov
fldcw
xorb
orb
shll
sub
es
adc
sub
adc
dec
lds
jmp
subl
pop
or
sbb
test
insb
xor
xchg
mov
aaa
mov
test
dec
shll
cmpl
fimuls
sub
jo
lea
jb
fcmove
int3
fwait
sbb
dec
pop
push
or
dec
into
cwtl
rcrb
xlat
negb
mov
adc
stos
arpl
pop
pop
lret
push
pop
ret
cltd
outsb
call
pop
nop
in
add
add
loopne
loopne
test
movsl
pop
jecxz
lret
jp
in
push
mov
xchg
pop
sahf
inc
movsb
data16
into
add
xchg
inc
cltd
rorb
cli
scas
les
and
xor
jg
cli
rolb
mov
adc
lock
pop
dec
in
xor
pop
sbb
loope
fidivs
add
cld
dec
sbb
in
cmc
cmc
test
sbb
das
mov
in
icebp
and
cld
jge
in
sbb
loopne
push
data16
lahf
dec
test
in
or
add
sbb
jge
sti
xchg
pop
pop
and
fistl
pop
cld
jl
jge
mov
movl
xor
repz
sbb
and
sub
data16
mov
ljmp
jg
lea
xor
sbb
mov
and
inc
pop
jae
into
mov
adc
sub
push
ss
faddl
cmp
out
stc
mov
das
dec
outsb
pop
jno
lret
sbb
and
add
mov
and
jo
in
xchg
xchg
lock
aas
int
xchg
or
sbb
sub
push
pop
mov
gs
test
xlat
popa
xchg
lcall
cwtl
outsl
ja
mov
cmpsb
add
push
stc
push
adc
cwtl
fcom
scas
outsl
sbb
xor
xchg
cmpl
cmp
loopne
mov
inc
add
sets
pop
das
jp
adc
movsb
pushl
pop
lea
sub
pop
sub
arpl
pop
scas
jae
xor
dec
jge
mov
xchg
lea
jb
sbb
jno
xor
in
sbb
mov
pop
out
mov
cmpsl
clc
fs
mov
and
mov
cmc
mov
sarl
test
adc
or
cmp
or
icebp
movsl
bound
fldt
lods
ss
stc
push
cmp
or
pop
sub
cmp
mov
ds
dec
cltd
adc
sub
add
adc
cs
inc
fwait
dec
repnz
shrb
adc
out
xor
xchg
mov
xchg
hlt
lret
sbbl
push
cmp
cmp
mov
jo
dec
dec
fs
clc
test
lock
sysret
ret
lahf
movl
mov
mov
or
xor
shlb
jecxz
mov
fadds
stc
inc
cmp
je
subl
adc
mov
les
cmp
sub
outsl
mov
sub
iret
jbe
xchg
cld
inc
loopne
pop
xor
or
xchg
xchg
mov
mov
lret
sbb
xchg
data16
inc
or
leave
lret
mov
outsb
xchg
cmc
sub
das
dec
mov
jae
and
mov
dec
in
jnp
fidivrl
jae
fs
fidivrl
sub
push
inc
stc
fstpl
fcompl
ficompl
gs
inc
incl
adc
add
adc
lods
jnp
outsb
adc
or
int
fisubrl
movb
popf
leave
bound
arpl
aaa
iret
jns
inc
inc
xor
xchg
lods
lock
mov
test
cli
sbb
push
mov
pop
xor
testl
mov
xor
fstps
mov
stos
out
add
imul
jno
int
pop
les
dec
out
sti
insl
clc
xor
dec
lret
mov
cmpsb
pop
in
lret
pop
test
pop
cmp
xchg
mov
mov
in
mov
hlt
mov
sub
add
or
xor
out
arpl
sub
int
scas
cmp
mov
movsb
js
and
pop
stos
enter
mov
es
mov
loop
in
enter
push
std
lock
inc
xor
mov
int3
cs
mov
in
inc
daa
ret
mov
in
cmp
in
inc
cmp
test
jp
out
fs
jg
and
jl
aas
add
push
xor
das
pop
push
cmpsl
mov
inc
cmpsb
fsts
inc
jbe
xor
sub
out
imul
inc
imul
fidivrs
push
adc
or
push
arpl
or
xlat
xor
shrb
ficompl
rorl
clc
incb
push
out
xchg
js
outsb
mov
imul
dec
in
and
jge
outsb
in
sub
fwait
or
push
xchg
nop
les
adc
mov
push
jbe
adc
mov
push
sub
sub
jle
dec
sbb
ss
sbb
mov
nop
test
pushf
push
xor
rep
enter
sbb
mov
mov
cmpsl
cmp
adc
sbb
jge
outsl
cmc
es
and
jp
cmp
daa
or
leave
sbb
lcall
jbe
leave
xchg
in
dec
adc
add
pop
dec
pop
push
ret
add
jecxz
jnp
push
push
dec
test
inc
dec
dec
inc
jne
push
mov
es
xchg
test
push
aad
cli
sbb
inc
mov
icebp
jb
inc
es
lods
in
push
int
fsubl
test
sbb
or
scas
fwait
adc
xchg
sub
jp
xchg
scas
or
sub
js
jp
xchg
jbe
ja
pop
fstpl
mov
movsb
and
in
inc
lock
icebp
mov
sbb
test
xor
in
in
jg
mov
loop
fcmovbe
imul
insb
mov
aas
sbb
leave
mov
orl
sub
xor
push
xchg
pop
mov
sbb
and
mov
inc
fstl
jae
push
mov
scas
mov
in
decl
dec
subl
or
ret
imull
sub
aam
dec
loop
into
mov
or
lods
dec
pop
jl
and
stc
add
jecxz
outsb
lcall
mov
in
dec
adc
xor
lods
loop
repz
mov
jmp
mov
push
adc
aas
mov
pop
nop
out
fldt
push
test
cltd
out
push
xchg
pop
adc
das
xchg
ror
cs
xchg
pop
mov
jmp
cs
out
xchg
mov
fsubrs
mov
and
rcll
adc
enter
scas
enter
inc
xchg
jg
fsubrl
popf
ljmp
cmp
xchg
push
out
mov
mov
enter
scas
add
ljmp
int
clc
inc
mov
mov
jbe
or
xor
scas
dec
xchg
outsl
xchg
imul
mov
jb
cmp
mov
enter
imul
orb
mov
nop
addb
mov
sti
aas
lcall
enter
arpl
ret
pop
jno
dec
mov
outsb
and
sbb
sbbl
adc
data16
sarb
jmp
insl
pop
jno
xchg
fisubrl
cmp
jns
or
rcrl
scas
aaa
xchg
arpl
in
adc
pop
sub
lret
pop
inc
xor
mov
cwtl
aas
cli
ds
dec
mov
mov
sbb
clc
mov
fwait
jge
mov
mov
xchg
daa
sar
ud1
fsubrl
push
fsubrp
cmc
inc
push
imul
lods
xchg
mov
jnp
sbb
rol
aaa
dec
adc
and
sbb
aad
add
xchg
je
push
or
xchg
addr16
in
test
xorb
cld
push
shrb
inc
push
ret
sub
mov
adc
stos
inc
rorl
inc
or
lret
jge
clc
hlt
and
pop
cwtl
cmpsl
mov
or
inc
mov
dec
add
ret
pop
push
lea
int
xor
push
inc
mov
cmc
mov
stc
dec
in
js
dec
into
cwtl
cli
imul
or
xchg
ss
out
lds
in
pop
push
mov
cmp
movsl
lods
and
push
or
repz
push
aaa
xchg
int
sub
imul
mov
scas
int3
enter
lds
outsb
out
lcall
pop
imul
popf
jb
or
fwait
in
imul
fsubrl
sarl
pop
xor
pop
add
push
fcmovu
inc
xchg
sub
or
dec
adc
cmpb
mov
mov
dec
pop
cs
pop
imul
mov
sbb
xor
sub
subl
xor
mov
imul
sub
push
fbld
pop
mov
pop
aas
xchg
inc
es
sbb
xchg
popf
or
xchg
sbb
loop
mov
push
es
push
adc
mov
and
jne
ds
mov
into
jmp
mov
testb
add
cmp
js
xor
mov
iret
ljmp
mov
dec
or
pop
xchg
adc
push
or
iret
das
dec
dec
adc
mov
sbb
sbb
out
inc
dec
stc
cmp
inc
xchg
pop
or
mov
in
stos
leave
sub
mov
lahf
insb
cmp
fcoms
lret
mov
test
addr16
mov
mov
adc
mov
mov
inc
lahf
stc
gs
not
test
fstps
sbb
div
jns
jb
sub
and
cmp
cmp
sti
and
xor
hlt
sbb
cli
or
jbe
js
or
adc
pop
push
arpl
xchg
cmpsl
or
movsl
loope
adc
es
sbb
sbb
jl
rsm
fcompl
xor
mov
es
das
jg
adc
cmp
imul
test
adc
lods
inc
cli
test
mov
sbb
lea
pop
jnp
stc
icebp
inc
enter
jnp
mov
jnp
shrb
fs
inc
ljmp
mov
adc
mov
hlt
and
repnz
adc
mov
pushf
out
cmp
inc
lods
adcl
es
insl
or
mov
jge
notb
jo
popf
icebp
pushf
jecxz
lds
test
imul
mov
das
fdivl
mov
mov
mov
or
inc
jns
add
lods
fldcw
inc
lock
xchg
jnp
and
inc
stc
shrl
push
js
jge
mov
jp
cltd
aam
nop
or
pop
or
shll
add
test
insl
mov
cmp
pushf
pop
outsl
jle
sub
add
pop
js
and
mov
popf
pop
stc
pop
mov
ror
movsb
out
push
enter
jecxz
cmp
inc
pop
dec
roll
call
push
jl
mov
in
jno
shlb
sarl
inc
andl
les
cmp
pusha
or
xor
sahf
enter
mov
popf
arpl
xchg
outsb
in
pop
pop
mov
lods
cmp
xchg
imull
cltd
jnp
aaa
fisubrl
push
inc
jne
pop
ret
lds
outsl
out
subl
and
xchg
xchg
popa
xor
andl
mov
fimull
lds
test
fists
icebp
xchg
shll
loopne
lock
xchg
sbb
dec
jne
or
rcr
sbb
or
movsl
adc
ss
lret
push
addr16
setp
push
divb
add
lret
out
aaa
sbb
mov
fwait
sbb
fcoml
leave
ss
cmp
cmp
pop
pop
pop
sbb
inc
iret
jg
pusha
ficomps
imul
pop
cs
ss
sti
mov
cmp
add
mov
in
mov
imul
pop
add
fs
clc
sbb
insb
sbb
das
rcl
pop
and
push
lea
xchg
inc
scas
pop
jb
ja
dec
mov
addr16
sbb
add
std
std
adc
and
jmp
mov
and
rclb
fldt
jne
std
xor
cmc
test
hlt
pop
adc
adc
mov
sub
sbb
mov
leave
ja
xor
insl
icebp
adc
xor
out
ret
sbb
push
sub
jo
repz
mov
popf
and
addb
xor
and
add
mov
outsb
xlat
or
test
aad
in
ret
jnp
push
jne
test
pop
cli
cmp
nop
adc
daa
and
mov
pop
fimuls
jp
shlb
fnsave
daa
push
or
and
jbe
sbb
adc
dec
xchg
inc
rcrl
lcall
sub
mov
xor
outsl
cmpsl
mov
sti
adc
lret
jno
rcl
or
iret
or
sti
mov
adc
and
adc
sbb
shl
xor
pop
xchg
adc
xor
movsb
push
sub
push
sub
jg
cli
push
mov
sbb
daa
pop
imul
mov
mov
sbb
cmpsb
adc
jnp
mov
mulb
icebp
mov
cld
mov
push
mov
sahf
fcmovnbe
pop
cwtl
loopne
sub
xchg
jmp
cmpsl
shl
jae
shll
call
mov
lock
es
lret
enter
aaa
pop
xlat
push
pop
fcomps
pop
inc
cmpsl
add
mov
repnz
imul
xchg
cmp
push
lcall
jecxz
mov
jge
dec
pop
mov
dec
mov
and
repnz
sbb
push
mov
stos
xor
jno
addr16
cli
cli
inc
xor
or
mov
xor
push
stc
pop
aad
cmp
mov
push
aaa
mov
cli
rorl
push
jnp
pop
shlb
cli
insb
lret
jp
or
mov
inc
push
es
push
fwait
outsb
pop
rcrl
stc
sbb
cmpsb
arpl
neg
out
add
fwait
add
push
std
or
push
xlat
dec
fiaddl
subb
xor
push
ss
xchg
cltd
loopne
push
push
je
jb
loope
xorl
cs
add
mov
clc
test
or
mov
pop
data16
cmpsl
inc
js
push
mov
jb
mov
sahf
jmp
and
push
sub
cmc
xchg
jbe
mov
mov
pusha
icebp
push
push
cmc
int3
jb
enter
outsl
dec
daa
or
lods
sbb
mov
inc
into
orb
out
into
flds
add
sahf
outsb
add
rcr
and
mov
mov
dec
std
ja
jecxz
add
lds
adc
xchg
aam
movsl
inc
sbb
add
mov
dec
inc
pop
push
ja
pop
add
add
rcr
pop
daa
sahf
cmp
sub
stos
xchg
adc
inc
sub
dec
cmp
sti
mov
popa
mov
imul
push
mov
jmp
adc
in
dec
jle
out
testl
shl
pop
sub
and
enter
xor
sbb
daa
ret
jne
pop
arpl
lcall
inc
data16
dec
lods
and
out
in
jecxz
movsb
jle
dec
mov
insl
sbb
imul
out
mov
sub
mov
imul
bswap
mov
inc
ja
loope
mov
ret
imul
clc
sbb
push
jo
mov
ss
pop
adc
push
cli
push
inc
push
fwait
les
xlat
dec
or
push
add
dec
push
out
jg
adc
call
adc
push
popa
or
stos
inc
aad
cmpsl
or
stos
dec
push
sub
cmp
test
push
adc
fsubp
mov
sub
call
sbb
loop
cs
gs
iret
int
mov
sub
popf
xor
in
lock
sbb
rolb
xor
mov
cld
sahf
cmp
das
push
rclb
outsl
test
dec
push
mov
push
jo
mov
bound
in
xor
fwait
subb
popf
sbb
out
adc
xchg
xor
pop
pusha
xchg
xchg
push
testb
sub
dec
jmp
xchg
sub
loop
xlat
xor
pop
push
or
dec
out
push
xor
ljmp
inc
cmc
dec
xchg
inc
cli
or
mov
arpl
sub
sar
in
adc
and
fcoms
or
or
jns
lcall
test
jp
in
or
mov
int3
enter
and
jno
cmpsb
sub
xor
xor
inc
test
fwait
insl
mov
movb
inc
sti
jge
fsubrs
mov
pop
add
push
mov
push
fcompl
call
mov
lock
pop
cli
sbb
sbb
and
out
xchg
jb
jno
fisubl
imul
mov
pop
adc
mov
decl
insb
push
sub
mov
aaa
imul
push
call
jge
inc
push
push
stos
call
pop
sbb
in
dec
in
jo
scas
das
pop
xchg
push
sarl
pop
test
mov
js
stos
ds
xchg
das
mov
loopne
lock
mov
jmp
shll
adc
or
imul
push
lret
adc
dec
mov
jns
lea
cltd
jp
dec
xor
push
js
mov
mov
jno
aas
mov
pop
imul
mov
push
jae
aad
or
f2xm1
cmp
or
mov
adc
js
out
sub
pop
cmp
mov
das
jl
and
or
add
cld
outsb
mov
stos
push
and
dec
push
mov
aam
jge
fcoms
or
jl
out
sbb
xchg
inc
push
loop
shll
sbb
jno
aam
jecxz
fsubl
ss
push
test
add
dec
shll
jle
repz
xchg
jb
lcall
test
dec
xor
push
scas
aad
jno
mov
cld
xchg
pop
ljmp
mov
and
cmp
push
mov
loopne
push
inc
icebp
lea
sbb
jmp
negl
sbb
mov
pop
cmp
jns
pop
adc
out
mov
inc
adc
adc
scas
sub
int3
popa
arpl
cmc
ret
pop
ljmp
sub
dec
insb
dec
sub
dec
stc
shr
pop
xor
das
xchg
in
push
arpl
fwait
dec
mov
xchg
sub
int
imul
push
jge
fiadds
jge
xor
idivl
test
dec
insl
call
jmp
stc
dec
xchg
les
daa
mov
pop
adc
xor
cmp
xchg
or
jle
mov
clc
jb
ljmp
jae
mov
fstl
aas
mov
push
arpl
inc
loopne
cmc
stos
or
pop
xor
push
xchg
cmpsb
dec
lret
sbb
cs
lods
popa
dec
int
mov
filds
xor
mov
mov
inc
mov
jbe
sbb
jo
sub
in
cwtl
subl
mov
adcl
mov
rcrl
jle
mov
and
cmpsb
jns
outsl
fadd
cltd
sub
mov
cs
push
jns
loope
adc
mov
pop
mov
sub
push
dec
icebp
lcall
mov
and
or
loope
mov
bound
stos
and
and
test
in
xchg
jns
jp
mov
pop
pusha
pushf
stc
shll
fistpll
add
lds
out
test
mov
xchg
dec
dec
xchg
cli
leave
xchg
jno
fidivrl
cltd
lahf
outsb
jo
lea
push
pop
in
pop
xchg
xchg
imulb
push
outsb
mov
sub
in
mov
push
inc
decb
fstps
mov
es
or
es
add
lea
sbb
jecxz
jle
rorb
icebp
dec
jg
sti
jae
ret
lea
xchg
mov
iret
jbe
nop
dec
cmp
les
cmc
mov
mov
mov
shl
pop
sbb
or
je
idivl
lds
fadds
jp
cmc
jge
ss
mov
addr16
jge
xchg
daa
and
pop
stos
cltd
sub
call
inc
or
insb
jl
mov
sbb
xor
cmovle
inc
and
jp
cmp
or
sbb
or
ss
inc
inc
mov
cmpsl
pop
pop
lret
and
jmp
push
jg
mov
adc
pop
das
or
mov
test
outsl
mul
out
adc
add
shrl
inc
xchg
cs
sbb
mov
hlt
pop
adc
adc
inc
cmpsl
push
jp
add
xchg
ss
sarl
dec
jmp
cmp
or
xor
inc
out
aas
out
fstpt
inc
pop
adc
scas
loopne
jmp
aaa
mov
xor
mov
in
lret
outsl
ficoms
jecxz
inc
mov
movsb
inc
pop
clc
mov
add
arpl
add
push
leave
cmc
jbe
xchg
jae
loopne
cli
add
mov
cmp
cmp
sub
lea
incl
dec
mov
dec
lock
repz
fwait
out
stc
notb
and
pop
push
add
xor
xchg
cmp
icebp
jae
jns
push
or
pop
orb
mulb
jae
in
leave
cmp
fldcw
mov
and
dec
clc
xor
repnz
and
xchg
pop
jnp
mov
das
enter
mov
adc
mov
mov
or
pop
mov
loopne
jmp
dec
stc
fcomp
dec
pop
clc
xchg
hlt
aas
xor
cmp
mov
aaa
ret
and
outsl
xor
lret
or
mov
movsb
xor
inc
mov
mov
xchg
stos
icebp
cld
xchg
push
std
out
sahf
push
and
adc
xorl
cwtl
push
sub
sbb
mov
and
mov
rcr
in
mov
in
inc
fxch
add
cmc
sbb
pop
ljmp
cld
test
sbb
std
jae
loope
popf
pop
xor
mov
adc
mov
xor
dec
out
and
enter
mov
cwtl
xor
mov
mov
imul
outsl
jbe
sar
jno
mov
icebp
cli
ficoms
sub
mov
insb
cmp
jo
aad
cmp
mov
cmc
push
inc
add
jg
ds
mov
mov
adcl
mov
insb
and
fidivrl
loop
push
xchg
lcall
cwtl
and
scas
jns
ret
andl
test
das
xchg
pop
popf
fildl
outsl
jae
xchg
or
aas
jl
mov
repz
mov
fiadds
inc
cmpsb
add
jae
test
jmp
loop
xor
push
mov
fisubl
sub
xchg
cli
inc
and
push
xchg
adc
dec
push
in
inc
popf
sub
and
sbb
in
stc
jmp
inc
lret
movsb
test
int
jbe
bound
aaa
data16
enter
dec
es
sub
into
adc
adc
mov
sub
xchg
xor
add
out
jecxz
jecxz
cs
jmp
or
fnsave
pop
mov
lods
imul
push
fisubrl
mov
es
push
out
xchg
test
jno
push
scas
xor
inc
lds
jge
imul
cli
dec
and
xor
test
sarl
xchg
adc
xor
and
rcrl
in
dec
fstps
out
arpl
mov
add
xchg
out
test
xor
mov
pop
mull
loope
pop
scas
lds
xorl
adc
or
xchg
jle
pop
hlt
daa
clc
stos
insl
repz
dec
push
pop
insl
imul
push
pop
pop
outsb
adc
popf
mov
out
in
into
and
adc
push
dec
out
popl
mov
or
arpl
or
push
mov
or
add
or
jo
ret
imul
ljmp
int
repz
adc
mov
dec
test
leave
pop
ror
test
int3
lahf
push
subb
jbe
popa
sbb
call
xor
sbb
int
aas
stc
ss
push
inc
sbb
push
lahf
adc
inc
jae
push
lods
mov
and
sub
shl
test
jecxz
mov
dec
ljmp
inc
pop
outsb
enter
movsl
sub
jge
subb
push
push
cmpsb
mov
push
jo
pop
lret
sbb
rclb
dec
mov
ja
pop
mov
insl
jmp
insb
out
in
stos
in
mov
xor
mov
sub
mov
cmp
dec
imul
in
add
shrl
pushf
dec
roll
push
mov
cli
scas
or
sbb
ds
mov
out
movsw
dec
fs
cmp
out
or
cs
scas
jns
mov
xor
inc
imul
cltd
jge
cmpsl
dec
jnp
mov
mov
out
pusha
shrl
jne
mov
push
inc
xor
mov
jo
leave
adc
inc
add
xor
fwait
or
popa
pop
jmp
mov
ja
das
mov
cwtl
jae
adc
pxor
xchg
popf
cltd
mov
sub
or
sbb
inc
mov
cmp
andl
adc
inc
mov
xchg
sti
xor
ljmp
xor
sbb
mov
adc
push
fdivrl
fs
mov
in
jnp
cmc
in
sbb
lret
pop
stc
lret
dec
dec
cltd
out
imul
add
rorl
aam
data16
mov
or
mov
shlb
data16
jbe
mov
gs
mov
or
jl
mov
fisubrl
dec
fildl
add
xor
rorl
or
dec
dec
sahf
popl
push
mov
pop
fstpt
call
xchg
xchg
mov
scas
pop
or
dec
call
jne
mov
sub
lea
out
test
into
mov
or
push
jp
xlat
or
loope
fildl
inc
add
test
sbb
cs
sub
cwtl
call
das
mov
pop
jecxz
arpl
inc
out
pop
loopne
add
jle
inc
in
lods
cltd
push
dec
xor
sbb
fcmovnb
dec
addr16
lods
mov
cvtps2pi
or
fldcw
push
xchg
lahf
js
push
push
lahf
jae
push
push
add
adc
mov
ret
lods
push
sub
jb
pop
shl
bound
imul
lods
mov
out
outsb
pop
inc
jne
in
adc
xor
cmc
into
dec
shlb
xchg
insl
mov
inc
adc
out
mov
adc
clc
dec
xor
mov
xor
jp
jp
cs
sbb
or
in
add
pusha
push
jne
jo
cmp
push
mov
and
dec
stos
mov
loop
fdivrs
mov
xor
sub
jno
mov
daa
das
clc
xchg
loop
inc
or
testb
clc
jecxz
or
xchg
repz
mov
jb
xchg
or
and
cmpsb
mov
mov
add
or
sub
fildll
inc
fs
insb
push
arpl
inc
stos
adcb
stc
push
je
test
dec
jp
or
mov
mov
sub
pop
mov
jecxz
outsb
or
pop
xor
into
jle
pop
xchg
jge
mov
ret
cs
or
lret
or
push
lahf
mov
fisttpll
ds
cmp
mov
cs
mov
pop
aad
icebp
cmp
jp
and
cli
sub
sbb
sub
mov
inc
sbb
xor
sti
mov
push
push
mov
testb
sub
hlt
hlt
outsl
dec
dec
and
xchg
test
add
add
std
fcmove
icebp
je
or
arpl
xor
or
mov
fstl
es
or
movsl
shrb
mov
xchg
or
xchg
sti
jno
aaa
fsubr
lret
and
andl
sbb
notl
jl
or
sbb
push
scas
cmpsb
lret
adc
sub
repz
or
int
daa
mov
test
dec
or
mov
lock
outsl
cli
adc
stos
dec
xchg
push
popa
sbb
scas
or
xor
sbb
int3
push
xor
dec
jge
imul
or
inc
mov
or
mov
sbb
stos
mov
test
xchg
out
cmp
jmp
jne
lods
push
loop
arpl
dec
in
jbe
sbb
cmpsb
shl
cs
xor
aam
test
lods
nop
pop
fsubs
nop
je
insl
cmp
mov
jmp
add
aad
mov
imul
push
sbb
push
sub
or
jns
cli
arpl
mov
imul
cmp
mov
xor
and
fimull
sub
xchg
addr16
xchg
xor
sbb
clc
inc
cli
or
adc
push
negb
jecxz
xchg
mov
adc
pop
mov
in
fprem
jge
in
sub
push
mov
ror
xchg
mov
lock
sub
fwait
nop
mov
or
addl
dec
pop
call
xchg
sarb
or
mov
xchg
xchg
cmp
sub
cmp
and
and
sahf
jecxz
xor
add
lods
xchg
fistpl
jmp
popf
pop
pop
dec
mov
xchg
out
lahf
rdpmc
addr16
loope
cmp
xor
inc
jae
xor
adc
ss
pusha
and
leave
mov
xor
and
xchg
sbb
jmp
sbb
inc
adc
addr16
es
mov
fcomip
out
jmp
cltd
xchg
dec
outsl
sub
lock
or
adc
scas
stos
cmpsb
out
popa
js
cmpsb
sub
sub
cmp
pop
decb
sbb
popa
lahf
aam
stc
adc
sub
mov
and
or
xchg
mov
mov
int
in
pop
xchg
sub
adc
sbb
mov
imul
xchg
xchg
loope
lea
test
sbb
adc
dec
aas
out
or
or
cmpsl
scas
aaa
popf
dec
pop
mov
mov
out
cltd
sub
sahf
lods
mov
mul
mov
mov
push
pusha
fsubrp
fldl
push
jns
shrl
cli
aaa
es
cmpsl
scas
mov
ret
out
jle
push
mov
test
or
into
test
outsl
push
cmp
push
cmp
stos
push
sbb
out
pusha
out
lea
inc
loop
loope
push
repnz
into
sbb
call
cli
mov
and
stos
or
sub
fwait
shrb
cmpsl
adc
outsb
mov
sub
sbb
add
sbb
add
inc
inc
cltd
push
cld
push
icebp
mov
call
mov
ret
dec
outsl
dec
mov
mov
rorb
jo
mov
add
cmpsb
xchg
mov
mov
dec
mov
inc
push
into
jg
dec
xchg
mov
mov
adc
pop
fninit
lret
mov
aad
movd
repnz
lret
jmp
lret
sbb
pop
ret
adc
pusha
rcl
hlt
and
aas
cmpsb
cmpsb
outsb
ret
xchg
popa
xchg
scas
shlb
mov
or
sub
push
std
clc
and
lahf
mov
in
xchg
push
xchg
cmp
cwtl
outsb
psllq
pusha
xchg
popf
in
pushf
fiaddl
movsl
in
in
nop
and
sub
call
mov
shlb
dec
sbb
lea
xor
xchg
pop
fs
add
iret
push
adc
cmp
ficoms
rolb
addr16
cmpsb
jo
xchg
sbb
jbe
mov
stos
cmp
call
lea
xor
aam
mov
and
inc
mov
lahf
push
setne
and
pop
nop
in
jle
sbb
stos
push
les
mov
and
and
cld
lods
inc
sbb
mov
jmp
xchg
js
xchg
inc
push
xchg
iret
cmpsl
push
js
push
adc
fwait
enter
dec
cs
push
fwait
sahf
mov
xchg
stos
adc
add
xchg
mov
inc
xor
addr16
mov
lret
mov
xchg
push
test
lods
xchg
adc
loope
dec
gs
sbb
std
push
jns
push
xchg
loope
push
jbe,pt
xchg
sub
push
hlt
mov
sub
or
pop
in
test
push
sbb
repnz
cmc
bnd
cmc
cmp
jb
mov
jecxz
in
mov
cmp
cwtl
arpl
popf
sti
mov
das
idiv
jae
inc
pop
inc
push
ss
fstps
sub
js
mov
dec
and
jo
popf
pop
and
inc
fwait
in
mov
mov
mov
cmp
dec
pop
or
bound
daa
cmpsb
dec
and
push
or
inc
into
cs
adc
out
jno
jo
fildll
adc
cld
mov
leave
pop
test
mov
bound
mov
fistpl
ficompl
gs
out
das
test
mov
in
and
in
xchg
xchg
mov
add
fiadds
insl
repnz
imul
xchg
cmp
push
mov
pop
cmc
iret
sub
and
mov
cmp
popa
aas
sub
fldcw
pop
push
fcompl
add
or
lea
push
rolb
cmpb
jmp
ret
fdiv
and
lods
testb
in
push
outsl
jp
inc
insl
push
xlat
cmp
or
xor
add
inc
ja
leave
push
addr16
insb
lea
mov
cmpsl
outsl
cmc
fmull
inc
inc
xchg
inc
add
in
ret
mov
jecxz
clc
mov
std
imul
lods
or
pop
mov
pop
daa
arpl
jns
cmp
jg
mov
dec
pushf
mov
es
sbb
fwait
imul
lds
mov
dec
fs
shr
push
mov
bound
push
cmpsl
inc
bnd
dec
sarl
cmp
fwait
mov
pop
mov
fcmovbe
mov
sub
mov
or
mulb
aam
bound
cli
adc
cmpsl
fwait
stos
repz
sub
arpl
ss
mov
aaa
cmpsl
xor
or
add
push
mov
lods
or
jecxz
push
adc
mov
fsubrs
push
inc
mov
int
inc
fwait
dec
jp
and
in
pop
pop
pusha
add
loope
push
lock
mov
mov
xchg
adc
mov
add
mov
ret
mov
ret
sbbb
xchg
jo
pop
das
sahf
add
jno
jle
push
sub
xchg
rorb
or
xchg
pop
mov
mov
jl
cmpsl
roll
les
mov
xor
jle
push
test
inc
pushf
add
push
iret
test
sti
iret
cmp
out
push
dec
inc
fs
and
and
shlb
js
adc
sbb
dec
cmpsl
pushf
push
cwtl
loopne
mov
scas
imul
dec
cmpsb
dec
mov
cs
cs
add
inc
pushf
mov
out
ljmp
push
int3
xor
in
mov
aas
pop
fcmovne
jb
jp
mull
inc
xor
jl
pop
jnp
dec
inc
les
sub
hlt
jbe
sbb
cs
lds
cmc
test
arpl
pop
mov
xor
xadd
cmpl
lods
dec
mov
sti
mov
out
sub
insl
daa
icebp
mov
adc
push
rcrb
out
mov
cmp
sub
sarb
leave
enter
call
sub
adc
mov
sbb
popa
leave
push
mov
shll
aaa
dec
lret
mov
sbb
dec
cs
push
ljmp
xchg
mov
sbb
fadds
dec
mov
mov
dec
lcall
jmp
dec
jo
test
and
aaa
sbbb
and
sbb
in
xchg
inc
aad
mov
fsubrl
mov
insb
ljmp
out
pop
lea
pop
aaa
mov
xor
push
xor
pop
imul
mov
cmp
cmpsb
or
push
filds
lcall
push
xchg
lcall
in
test
fsubrp
mov
decb
or
xorl
xchg
lods
or
xchg
imul
imul
cmpsb
daa
dec
push
in
jo
cmp
and
inc
push
ret
push
add
cmp
movsl
cmp
cmpsl
and
adc
cmp
mov
fadd
cmp
xchg
ja
lods
pop
and
dec
xchg
mov
dec
les
rolb
mov
or
and
sbb
or
and
fwait
adc
loopne
dec
pop
add
or
movsb
ja
pop
aaa
cmp
xchg
dec
movzwl
test
sbb
inc
cmp
roll
lret
mov
sub
subb
mov
xor
mov
fs
jmp
pop
seta
xor
mov
pop
dec
and
and
cs
and
ja
mov
cmp
or
dec
cmp
lods
fidivrl
pop
loop
out
inc
and
jne
lcall
mov
fcoms
mov
out
cmp
aaa
xchg
popf
mov
jbe
mov
xchg
test
aad
mov
inc
movsl
jge
stos
inc
adc
aaa
rol
sub
xlat
lahf
psllq
mov
rol
les
pop
cmp
mov
std
adc
outsl
sub
sub
test
cs
cmp
clc
jo
cwtl
or
aad
mul
mov
ret
sub
out
in
and
loopne
or
cmp
dec
ja
popf
add
xchg
or
dec
push
sub
inc
das
jne,pn
dec
dec
imul
sahf
out
lock
sbb
adc
lock
xchg
scas
cwtl
push
dec
mov
ret
flds
jp
pushf
cmp
arpl
iret
mov
movsl
mov
or
das
and
xor
push
fadd
test
subl
xchg
fsubrs
aas
sub
push
insl
enter
sub
scas
insl
mov
aaa
adc
cmpsb
repz
sbb
xor
insl
xor
js
daa
cwtl
mov
sub
xor
sbb
insl
inc
in
or
cmp
sbb
push
or
lahf
mov
or
mov
adc
xchg
fnstcw
int
int3
or
add
gs
xchg
outsl
pop
jnp
sub
popa
loope
mov
pop
ljmp
push
aaa
mov
mov
mov
loope
add
das
push
test
sub
shr
std
pop
out
imul
mov
lock
outsl
mov
es
dec
clc
popa
repnz
inc
ss
sub
into
and
push
inc
ficomps
xor
fcmovbe
cmp
sarb
in
adc
adc
mov
fnstsw
add
sub
cli
sub
xor
sbb
add
rorb
cmp
xchg
xchg
inc
scas
orl
lods
pop
add
jns
mov
rcrb
xchg
pop
in
out
push
sub
ret
mov
dec
jbe
mov
pop
testb
sahf
insb
pop
pop
ljmp
xor
add
cmp
sbb
movsb
nop
mov
dec
scas
shll
ficoml
dec
jnp
pop
pop
rol
adc
push
and
test
mov
out
mov
loopne
aam
or
add
sub
popf
and
leave
push
dec
sarb
sarb
lahf
pop
repz
daa
lcall
xchg
stc
lret
leave
inc
pushf
push
sub
lock
insb
popa
stos
sbbl
cld
pop
sbb
cmpsb
pop
shrl
push
movsb
push
out
mov
adc
enter
lods
daa
gs
push
inc
push
pop
adc
pop
mov
sub
fsubl
addr16
mov
mov
daa
int
cmp
shrb
cmpb
out
std
or
outsl
mov
xorl
adc
xchg
or
loop
insl
mov
sbbb
outsb
adc
jle
sub
xchg
inc
cmp
sti
or
test
sub
jge
push
ds
pop
jmp
sti
fiadds
mov
push
inc
lods
sbb
fimull
cmp
and
xor
sbb
insl
das
ret
sub
and
or
imul
daa
push
les
fsubp
mov
xor
xchg
mull
cmp
xchg
push
pop
or
jb
inc
adc
icebp
xor
mov
sub
aam
sub
sub
divl
pop
popa
pop
push
push
add
add
xchg
sub
aas
cwtl
inc
and
fists
cmp
jecxz
fwait
mov
pusha
sbb
mov
in
cmpsl
aad
loopne
or
and
pop
ficomps
inc
int
fiaddl
dec
push
aaa
jg
loop
jge
and
les
out
scas
push
shl
dec
cmp
xor
xor
outsb
mov
jecxz
pop
pop
lret
xlat
subb
or
pushf
cmp
or
mov
mov
arpl
lock
xor
push
fdivl
iret
jecxz
pop
scas
push
or
adc
mov
ds
inc
xchg
enter
lods
dec
movsb
pop
push
or
or
cmpsb
sbb
scas
into
mov
aam
call
pop
pop
psubw
pop
stos
dec
lods
or
sub
xor
rorb
test
pop
sub
adc
sbb
sbb
xor
cmc
jno
push
adc
push
jnp
cld
jnp
dec
xchg
arpl
sub
push
rcl
mov
push
cli
sti
repz
cmpsb
out
push
mov
cmp
call
rcrb
pop
mov
fstpl
pop
gs
fisttpl
orb
fs
imul
clc
shlb
ljmp
add
int3
mov
cmp
leave
add
pop
add
mov
ja
and
mov
push
mov
adc
add
test
mov
movsb
fnstsw
stos
addr16
test
add
jb
sti
dec
dec
stos
dec
call
sbb
popf
arpl
inc
ret
test
sub
mov
sub
ds
xor
pop
xchg
or
xor
ss
adc
xchg
inc
add
jo
sub
mov
mov
mov
push
rcrl
icebp
inc
mov
in
cmp
dec
out
xor
shrb
repz
orl
daa
cmp
push
inc
and
in
fwait
xor
outsb
pop
inc
pushf
xchg
push
jb
imul
cmp
xchg
mov
sarb
inc
or
sub
lahf
shld
sbb
outsb
sti
rclb
stos
xor
jne
push
mov
adcb
jbe
in
xor
pushf
and
flds
fadds
push
stos
clc
mov
inc
jg
xor
repnz
std
movsb
push
adc
test
sub
shl
mov
sbb
jle
lcall
xor
mov
idivb
sub
dec
xor
pop
xchg
cmp
inc
adc
mov
js
adc
jo,pn
inc
adc
ficompl
cmp
inc
pop
or
pop
cmpsl
popl
jae
pop
lods
add
and
sub
pop
pop
or
lods
mov
xor
test
mov
sarb
xlat
test
rorl
cltd
xchg
jne
stos
dec
jnp
mov
inc
and
push
shl
push
jns
popa
icebp
mov
adc
or
rorl
sti
lods
cltd
xchg
push
data16
sahf
xchg
cmp
fisubl
xchg
cmp
ret
sub
cmpsl
imul
into
add
sub
lods
sti
fidivl
sahf
clc
shrb
and
incl
adc
inc
xchg
sbb
mov
push
cmpsb
icebp
imull
add
jl
int
lea
lock
test
inc
mov
sub
adc
mov
sub
xchg
mov
jo
es
mov
insb
daa
out
fldenv
adc
lods
mov
jne
daa
movsl
fimuls
fisubrl
faddl
rcl
notl
hlt
dec
outsb
loope
mov
sub
cmc
add
mov
pmulhuw
and
xor
add
enter
dec
outsb
cltd
pop
js
xchg
add
sahf
imul
lret
sbb
in
pop
or
fwait
xchg
mov
insl
mov
jmp
pop
aaa
inc
inc
cmpsl
loope
inc
into
stos
jnp
popf
lea
jp
push
adc
iret
sbbl
and
fcomps
cwtl
cmpsl
popa
fisttpll
call
cli
int
mov
inc
push
fstpl
out
data16
xchg
cs
xchg
adc
cmp
inc
fistps
mov
inc
inc
push
or
adc
es
inc
mov
adc
pop
fwait
insb
roll
andl
sbb
aam
push
jb
imul
inc
scas
pop
dec
outsl
imul
cmp
adc
les
lods
call
stos
je
in
outsb
jge
xlat
mov
lcall
pop
fbstp
push
cmp
shlb
or
xchg
pop
fimull
cmp
mov
mov
push
dec
and
sub
and
fwait
mov
xor
test
sbb
pop
ret
cli
loope
adc
pminsw
lea
sbb
ret
push
mov
push
sbb
movsb
push
adc
jmp
adc
push
adc
xorb
vmwrite
sub
jno
test
fwait
adcb
mov
dec
mov
stos
dec
xchg
into
inc
push
sub
pusha
leave
cmp
out
add
into
sti
std
mov
xchg
jmp
cmp
or
rcll
inc
sbb
addr16
ja
stos
push
mov
sub
ficoms
xlat
dec
aad
push
mov
mov
sahf
pop
pop
test
push
push
jnp
jne
aaa
out
mov
mov
jle
icebp
int3
push
pop
mov
imul
dec
sbbb
cmp
and
sbb
mov
pop
mov
pop
adc
cs
int
ss
xor
sub
loop
mov
mov
aaa
xlat
stos
ret
sbb
loopne
cmp
dec
xchg
pusha
or
jge
sub
mov
stos
jg
cmpl
cmp
shl
add
mov
cmp
movsl
cld
jbe
loope
aas
in
scas
pop
mov
sub
ljmp
and
loop
inc
ss
lock
xchg
push
aaa
and
aas
subb
cmp
add
or
mov
popa
sub
add
xor
sbb
stc
ret
add
cltd
lods
nop
or
imul
jo
cltd
outsb
inc
sbb
addr16
or
insl
dec
arpl
push
and
pop
inc
xchg
adc
jb
pop
not
xchg
icebp
scas
mov
testl
ss
insb
mov
sbb
in
xchg
call
data16
sbbl
push
test
and
cli
adc
sbb
sbb
inc
xor
ljmp
aad
push
out
jg
inc
and
fcompl
pop
push
and
dec
xor
lret
mov
dec
sti
aam
and
hlt
test
pusha
std
xchg
ret
or
inc
clc
jne
adc
ss
xor
aad
std
subb
jmp
sbb
inc
in
push
cwtl
mov
or
push
imul
push
cmp
sub
fstpl
mov
dec
mov
pop
std
aas
adc
pop
jg
fistpl
or
negb
in
fldt
imul
leave
stos
cmp
rcll
fbstp
sahf
out
movsb
mov
add
sub
std
add
adcb
decl
dec
cmp
test
out
lret
sti
xchg
xchg
push
sub
pop
popf
xchg
cmpsl
pop
sbb
shl
outsb
out
sbb
or
mov
pusha
dec
insl
pop
lret
cld
or
jbe
mov
or
sub
mov
icebp
lds
lods
shrb
inc
add
sahf
adc
cmpsl
xchg
out
pop
pop
mov
mov
adc
xor
sub
daa
pop
das
gs
enter
cmpsb
mov
or
push
jle
out
iret
outsb
bound
inc
imul
mov
jecxz
lock
mov
mov
stos
push
jne
adc
cmpsb
mov
xchg
xchg
mov
xor
and
data16
sahf
das
mov
sbb
lret
dec
das
imul
push
or
push
pop
add
lret
dec
mov
out
ds
lret
inc
cmpsl
dec
and
jnp
sub
stc
outsl
inc
lea
fwait
outsl
loop
les
dec
mov
es
xor
add
adc
scas
mov
stos
pusha
jno
les
dec
movsl
ss
xchg
jns
inc
sbb
inc
rcll
in
clc
scas
xlat
jge
adc
cwtl
inc
fistpll
fisubrl
hlt
sub
sub
aas
xor
arpl
inc
roll
mov
jl
lret
cld
inc
movl
dec
push
lahf
push
push
movsl
sbb
adc
sahf
gs
push
js
out
outsb
divb
add
and
push
outsl
lds
push
into
shl
push
les
or
mov
daa
and
xchg
jmp
sbb
xor
enter
fsubl
cltd
mov
inc
or
and
js
or
cli
mov
imul
push
rcll
imul
daa
xor
jno
xor
sub
cmp
cmp
imul
cmp
sub
mov
jmp
scas
mov
mov
cwtl
jbe
sti
incl
mov
out
mov
leave
dec
loop
testb
cmp
or
adc
and
test
mov
or
lret
pop
test
sbb
cmp
sub
popa
jne
inc
mov
stos
xchg
cmp
jbe
inc
inc
push
mov
push
add
or
sbb
cli
ss
and
bswap
fisubrs
sub
push
pop
cmp
xchg
dec
cmp
or
cmp
cmp
insl
insl
int3
into
imull
in
fimuls
ljmp
gs
stos
mov
mov
out
jecxz
adc
jb
subb
xor
dec
ret
or
lcall
inc
push
arpl
ud1
cmp
sub
mov
mov
add
sub
repnz
and
les
in
mov
insb
out
mov
jmp
test
aas
dec
out
cs
and
insb
lods
push
es
outsl
push
xor
movsb
dec
xor
mov
xchg
mov
push
pop
push
cli
or
aaa
push
push
mov
adc
idivb
cwtl
dec
push
jae
leave
out
xor
mov
les
xor
jmp
addb
mov
test
ds
outsb
cmp
jns
dec
xor
out
jne
mov
xor
push
xor
push
add
lds
push
pop
sub
adc
jp
xor
mov
jge
rolb
repz
push
sbb
aaa
test
pop
cmp
mov
in
sarl
es
push
adc
add
test
std
nop
push
aas
inc
gs
or
push
imul
in
cmpsl
cmc
mov
jns
dec
jg
stc
mov
or
in
add
fwait
cltd
push
pop
mov
mov
sbb
je
and
xchg
test
fcoml
mov
outsl
xor
pop
fldcw
jle
push
push
add
xchg
inc
jmp
dec
cmp
mov
mov
push
jge
adc
xchg
mov
xchg
push
jo
inc
lods
scas
mov
ljmp
pop
lock
cmpsb
adcb
enter
repz
sbb
stc
dec
cld
sarb
pop
sbb
jle
fwait
nop
and
popa
adc
sbb
xchg
mov
mov
jl
test
pop
outsb
lret
shl
or
dec
or
in
gs
sahf
iret
jge
test
stos
std
stos
xrelease
xchg
cmp
scas
test
das
cmpsb
sbb
push
sahf
pop
cmp
mov
in
dec
inc
xchg
vmread
mov
cmpsl
mov
mov
into
into
rol
pop
mov
dec
test
clc
push
jnp
jb
xchg
jo
push
push
and
xlat
fdivl
in
dec
mov
adc
push
sub
xorl
push
aad
add
lahf
adc
and
sub
mov
sbb
addr16
sbb
mov
or
lds
stos
push
jns
movsl
dec
int
mov
mov
add
or
xor
or
adc
add
xchg
dec
inc
cvtpi2ps
xor
jmp
sub
jmp
and
sbb
jo
cmp
or
adc
cmp
xchg
push
dec
mov
fidivrs
mov
sbb
movsb
clc
arpl
pop
mov
pop
jo
scas
mov
cmc
dec
lea
imull
adc
jp
clc
mov
fadd
add
mov
xchg
inc
test
bound
jbe
inc
cwtl
sbb
cmpsb
jnp
mov
add
clc
lcall
aad
mov
shll
outsb
lea
js
test
or
shll
aaa
pop
sub
push
or
popf
mov
mov
shlb
or
ret
icebp
cli
sbb
lahf
adc
push
das
sub
adc
idivl
xchg
inc
imul
out
rolb
cltd
jmp
mov
lcall
ret
cmp
push
adc
sub
inc
ss
xchg
dec
jecxz
adc
pop
add
in
popf
ljmp
cmpsb
cmpsb
ja
mov
shll
shr
repz
icebp
out
shrl
add
idiv
sbb
adc
cmp
test
bound
stos
clc
fsubr
mov
aas
clc
outsl
cli
or
fsubs
enter
jbe
insl
jmp
inc
cmc
shl
repnz
xchg
and
cmp
cltd
fcoml
cmpsb
pop
dec
pop
fst
nop
ss
aaa
arpl
pop
loopne
cltd
inc
shr
cmp
adc
ss
neg
aas
xchg
fsubrp
xor
push
outsl
inc
jo
in
mov
test
dec
push
pop
dec
mov
sbb
mov
sbb
enter
sbbl
xchg
popa
push
sub
cli
test
cmp
orl
mov
das
pop
pop
push
xchg
pop
insl
movsl
jo
mov
inc
cmp
mov
cmp
cmpsl
xorb
add
mov
cvtdq2ps
mov
and
mov
dec
mov
cmpsl
mov
mov
and
arpl
sbb
mov
xchg
sub
daa
ret
mov
shlb
insl
les
movsl
mov
xchg
adc
scas
cmp
push
rclb
sub
repnz
dec
or
push
insl
aaa
inc
ss
js
out
mov
or
xchg
add
mov
xchg
sbb
push
mov
mov
adc
cmp
mov
and
loopne
pushf
mov
inc
fwait
and
aas
mov
jp
je
in
lret
fstl
jle
push
mov
adc
enter
out
aam
mov
xchg
push
xchg
push
movsl
lock
sub
xchg
std
ret
mov
adc
adc
lret
nop
and
lock
aaa
mov
xor
mov
ficomps
cmp
mov
mov
mov
fldenv
data16
bound
data16
out
pop
push
pop
sub
movsl
xlat
push
sbb
fdiv
aaa
jmp
dec
lahf
aas
outsb
dec
loope
xchg
xchg
mov
or
fs
mov
and
inc
xchg
cs
enter
jmp
push
pop
stos
push
pop
mov
jp
fsubs
push
xchg
dec
or
pop
clc
dec
pop
mov
iret
dec
lock
fists
or
adc
cmp
add
jecxz
movsl
mov
addr16
fucomp
jp
lock
inc
xchg
ret
xchg
pop
outsb
adc
sbb
les
imul
push
fidivs
pop
dec
sub
sub
shll
stos
xchg
js
add
daa
out
xchg
test
das
jo
dec
sub
or
ss
mov
call
and
pop
test
or
cltd
add
pop
movsl
in
cmp
ret
push
call
fwait
sbb
inc
adc
inc
daa
or
mov
jne
dec
icebp
push
sub
es
leave
enter
cltd
in
imul
xchg
fs
shll
outsb
xor
sbb
popf
push
sbb
ja
jb
sbb
std
inc
and
mov
mov
outsb
mov
xor
iret
mov
adcl
out
loopne
fsubrl
push
aaa
push
adc
inc
mov
iret
xor
pop
repnz
xor
notb
pop
imul
inc
add
js
imul
sub
mov
mov
pop
jns
clc
test
lcall
fnstsw
mov
pop
push
ljmp
aas
mov
clc
gs
fistl
or
jns
mov
cld
sar
mov
addl
pushf
jb
add
call
cmp
dec
imul
shlb
xchg
repnz
mov
mov
inc
adc
loopne
xor
adc
dec
popa
push
adc
sub
aad
es
push
in
inc
roll
or
dec
xchg
fimull
icebp
fldenv
pop
movsl
dec
jge
loopne
popa
lret
push
icebp
xor
out
arpl
sub
shlb
pop
into
fstpt
lcall
fwait
xchg
repnz
pop
sahf
or
and
nop
fstpl
xchg
cmc
stc
push
fildll
bswap
add
adc
sub
fsubrs
je
repnz
aad
out
fstps
fisubs
xorb
mov
xchg
aaa
jbe
ss
cmp
xor
ss
aam
lea
cmp
outsb
call
movsl
data16
add
imul
xorl
mov
stos
sbb
sbb
xchg
pop
cli
fdivs
dec
stos
jmp
daa
cltd
and
add
xchg
fdivrs
iret
inc
mov
dec
in
inc
sbb
lods
cmp
add
addr16
and
out
jno
cmp
sub
test
xchg
mov
sbb
lahf
pop
dec
sti
pushf
mov
sbb
sub
repz
std
nop
and
adc
push
add
sbb
inc
cmp
lcall
cli
dec
divl
push
into
mov
mov
xor
mov
sbb
pop
icebp
cmpsb
sbb
push
loope
cltd
xor
mov
add
loopne
int3
fwait
es
dec
sbb
shrl
pusha
test
std
mov
retw
or
mov
sbb
mov
stos
dec
jno,pn
push
fwait
jnp
dec
mov
loop
das
sub
dec
mov
fucomp
pop
jecxz
xor
or
pop
jl
add
ljmp
fildl
sub
cmp
mov
mov
lahf
in
jecxz
aas
fmull
jmp
mov
mov
and
jle
mov
outsb
sti
mov
cmpsl
shrd
mov
cld
xor
dec
pop
jne
xor
pop
pop
fsubr
loopne
ret
in
roll
jo
out
cwtl
or
decl
outsl
cmp
data16
es
dec
insl
aad
jg
mov
xor
imul
mov
out
aaa
dec
mov
shll
jae
mov
sbb
pop
jp
es
mov
popa
dec
pop
xchg
push
dec
inc
cld
push
push
insl
ja
out
stc
adcb
lea
fistl
or
push
ds
movsl
lcall
or
mov
sti
mov
test
gs
fsubrl
js
mov
adc
jae
pushf
push
fstp
mov
mov
in
shll
stos
stc
int
adc
mov
or
sub
xchg
in
cld
sub
loope
test
lods
xor
mov
cmpsb
mov
dec
xchg
adc
mov
inc
inc
test
scas
addr16
mov
gs
push
cmp
adc
mov
xlat
repz
jo
imul
movsl
jns
dec
es
imul
out
inc
dec
jo
add
push
dec
pushf
in
push
movsb
xchg
mov
and
or
pusha
into
ja
inc
or
pop
sar
sbb
fstps
cmpb
or
lret
or
pop
jbe
add
push
lahf
cmp
or
xor
or
adc
fiaddl
sar
cmp
xchg
dec
inc
lret
inc
aam
mov
inc
mov
pop
push
test
fisubl
shrl
adc
inc
addb
lahf
int
data16
push
lods
stos
push
push
lea
inc
add
xchg
mov
and
in
cmp
push
lods
xlat
mov
cmpsl
and
or
iret
sarb
scas
adc
mov
clc
mov
test
movsb
and
loope
adc
pop
imul
add
scas
cld
aam
sub
stos
push
mov
loop
adc
ss
mov
dec
sub
bound
and
pop
inc
mov
aaa
adc
adc
push
or
xchg
jbe
xor
push
nop
adc
jp
mov
leave
or
mov
push
icebp
fwait
inc
add
mov
mov
cltd
lods
jl
add
shl
sbb
mov
mov
sub
cmpsb
mov
nop
push
shrb
addb
jmp
lds
and
les
mov
lods
ret
iret
lods
adc
add
pop
add
fs
daa
push
jp
pop
cli
test
add
mov
push
inc
xchg
insb
mov
or
push
xor
adc
add
out
mov
push
adc
pop
push
inc
outsl
popa
xchg
ja
jmp
xor
push
sub
aad
test
jns
fisttpl
jle
nop
popl
jg
clc
mov
icebp
aad
jns
sbb
push
xchg
js
mov
inc
push
sub
xor
sarb
xor
std
mov
mov
xlat
aad
xor
test
adc
cmpsl
stos
add
jne
jecxz
arpl
sub
loop
add
sbb
sub
cmpsl
jle
jmp
xchg
and
decl
cld
sub
or
lods
or
jp
sub
movsb
test
testb
push
xlat
cmpl
push
xor
mov
outsb
add
ja
or
repnz
cmp
loopw
sahf
ret
movhps
jecxz
daa
xchg
mov
es
mov
jne
sub
loope
xchg
mov
sub
into
or
lret
hlt
lock
push
aaa
shl
in
ljmp
cmpsb
xchg
sbb
pop
push
mov
fcmovnbe
lahf
xchg
add
into
cmpsl
mov
xchg
cmpsb
rcrl
sbb
adc
movsb
inc
dec
dec
push
inc
or
jne
cmp
xchg
cwtl
xorl
pop
mov
lds
xchg
ss
mov
xchg
and
jb
subb
jbe
outsb
outsb
lret
pop
mov
push
outsb
or
das
lcall
decl
pop
dec
cld
sbb
mov
jae
mov
mov
mov
xchg
push
lea
fwait
rorb
inc
or
test
push
icebp
bound
adc
or
std
stc
mov
xlat
arpl
stos
in
fldcw
out
dec
cmp
xor
sbb
in
popf
inc
rcrb
mov
es
test
push
mov
mov
movsb
je
std
loopne
fildll
cli
or
push
or
mov
jbe
aad
call
mov
imul
es
test
pusha
neg
jmp
dec
repnz
pop
stos
add
out
lods
push
dec
dec
cmpsl
mov
jle
mov
insb
stos
push
bound
fwait
sahf
dec
jne
ret
jecxz
inc
jnp
xchg
iret
fwait
leave
stos
stos
push
push
ret
nop
adc
loopne
imul
sub
cwtl
add
mov
cltd
int
push
imul
push
loop
sub
xchg
aaa
or
lods
mov
outsb
sub
inc
cmp
mov
aaa
out
adc
sub
mov
inc
gs
push
adc
inc
mov
cmp
mov
adcb
dec
jecxz
mov
aas
cltd
loope
bound
jnp
cli
or
mov
in
adc
xor
scas
push
std
push
push
lahf
jns
pop
lods
adc
scas
xor
mov
xchg
adc
sbb
cmp
cld
pop
vmovupd
jne
shrb
add
or
or
mov
and
fucomi
aad
mov
dec
mov
arpl
adc
divb
mov
jge
xchg
ret
inc
int
lret
or
movsb
jmp
insl
add
shl
or
mov
pop
sbb
shlb
loopne
rolb
adcl
cli
xlat
nop
dec
loop
sahf
sar
mov
adc
inc
adc
and
cmpsb
push
inc
add
lea
adc
jb
shrb
xchg
xor
loopne
add
loope
sub
sub
addb
lret
xchg
or
jle
dec
push
cwtl
shrb
mov
test
inc
sub
xchg
jno
jns
or
or
jo
mull
mov
inc
sub
rclb
and
fdivl
ja
mov
dec
xchg
and
cmp
lods
insb
inc
xor
sbb
mov
lcall
mov
mov
and
inc
je
shll
sub
ffree
adc
jno
cmp
adc
sbb
imull
or
adc
pushf
sbb
shrb
push
arpl
mov
sbb
cmp
into
int3
add
or
pop
or
xchg
ficoml
push
or
insl
mov
test
out
dec
mov
mov
popf
cmpl
lcall
orl
test
inc
dec
mov
jl
movsl
push
push
popf
jl
pop
ja
adcb
sarl
je
lods
inc
ret
test
sub
cli
cld
adc
sbb
inc
in
shl
dec
xor
rdtsc
xor
jnp
popa
cmp
es
jo
cltd
xor
rorl
lahf
mov
aas
repz
push
setns
roll
mov
pusha
sbb
or
xchg
lahf
into
xchg
push
enter
jns
sbb
xor
push
adc
inc
or
rorl
cmp
int
nop
sbb
inc
or
rolb
jno
imul
daa
lock
imul
xor
push
mov
call
bound
jae
fldl
mov
ds
test
lret
enter
bound
cmp
jmp
fcoml
mov
aad
movnti
xchg
lcall
imul
jns
data16
and
dec
pop
pop
fnstsw
imul
fisubl
xchg
loope
and
insb
aaa
cmp
dec
sbb
dec
ret
jl
inc
in
andl
and
adc
jo
jmp
cltd
sbb
adc
fcmovnu
cmc
es
ss
mov
mov
pop
test
insl
call
dec
xor
faddl
sbb
cmpsl
fstl
shrl
loope
pop
xchg
orb
hlt
mov
loopne
aam
out
jecxz
cli
out
clc
mov
mov
inc
jl
xchg
jno
cmp
mov
fcomip
mov
mov
push
cwtl
movsb
out
pusha
int
sub
and
sub
lock
scas
adc
cs
inc
sub
push
xlat
and
aad
sbb
push
ss
nop
push
adc
int3
rorb
iret
ss
lret
adc
out
shrl
inc
ret
adcl
repnz
push
jp
orl
pop
xchg
insl
and
xchg
cltd
sub
push
call
imul
xor
mov
insl
leave
xchg
adc
nop
mov
ss
cmc
adc
mov
mov
xor
cmp
mov
leave
cmpsb
arpl
std
test
mov
ret
push
push
test
imul
jl
mov
mov
test
or
aam
xchg
lods
adc
sub
lahf
insl
pop
or
xchg
dec
out
adc
jnp
adc
popa
cli
cmpsl
rorb
adc
adc
xor
pop
mov
cmp
hlt
mov
sub
stc
das
or
jno
test
int
mov
lods
stc
imul
mov
jge,pn
pop
jmp
loopne
test
in
push
lods
movsl
stos
inc
jl
inc
sub
dec
out
loope
cs
dec
add
mov
mov
cmpsb
push
sbb
aaa
adc
sbb
and
loopne
cmpb
mov
sub
xor
in
mov
sbb
lods
cmpsl
js
push
cmp
imul
loopne
cmp
or
fsubs
push
pop
push
inc
push
pop
ret
pusha
out
mov
sarl
xor
add
sahf
sbb
scas
mov
pop
add
into
pop
xchg
mov
pop
push
nop
pop
sbb
add
mov
mov
lcall
xor
dec
push
and
push
aaa
ja
push
pop
cmp
lret
out
fs
popa
cmpsb
decb
sub
or
sub
pop
mov
xor
xor
add
sbb
shrl
dec
in
inc
or
add
pushl
mov
cmpsl
or
enter
leave
mov
out
imul
and
aad
shll
icebp
and
lret
jo
push
jae
add
add
sbb
inc
mov
scas
push
sub
and
jmp
into
sbb
imul
inc
pop
and
pop
xchg
arpl
push
pop
pop
xchg
test
push
or
in
pop
lock
mov
mov
shr
pop
std
jge
jo
add
insb
rcll
int3
pop
loopne
mov
rcr
inc
cwtl
repz
into
fwait
xor
push
rol
in
aam
cmp
pop
lret
mov
mov
xor
push
mov
clc
mov
das
lret
mov
in
xchg
lds
pop
jne
iret
dec
or
test
adc
aaa
pop
add
xchg
js
cs
jge
sub
scas
faddl
jecxz
push
jno
push
int
inc
ljmp
cld
mov
call
loopne
mov
pop
push
mov
mov
inc
imul
push
mov
cmp
cmp
cmc
xchg
mov
jmp
aaa
dec
mov
mov
mov
adc
lret
add
test
mov
call
ffreep
and
lahf
mov
int
pop
dec
cmp
data16
mov
adc
or
in
sbb
pop
dec
or
js
aam
xchg
mov
sub
dec
sbb
aaa
cmp
add
jecxz
lahf
jge
inc
mov
add
shlb
lock
mov
fsubrl
lea
mov
mov
jnp
xchg
loope
dec
icebp
xor
jne
mov
call
mov
ss
sub
xchg
cmc
out
and
xlat
adc
sbbb
into
push
push
in
leave
fimuls
ficoml
cmp
cld
or
loope
or
dec
xor
or
sub
push
pop
js
divb
push
pushf
and
jae
es
xchg
pop
je
mov
dec
inc
in
out
mov
sub
cmp
jae
psrlw
ja
cltd
mov
cmp
cmp
xor
jae
add
sbb
xchg
mov
orl
dec
lock
mov
adc
dec
int3
sbb
adc
cli
sbb
imul
pop
addb
add
pop
sbb
mov
cmp
cmp
cmp
int
jg
stc
xchg
dec
mov
fs
push
dec
adc
pop
adc
daa
sub
das
sub
or
inc
imul
push
xor
push
scas
mov
or
mov
mov
sub
cmpsl
xchg
shlb
in
xor
lods
or
sbb
push
add
loop
mov
mov
in
cmc
mov
sbb
ficompl
xor
in
mov
mov
and
mov
pop
out
push
imull
fwait
insb
inc
dec
pop
dec
pop
dec
test
push
arpl
sub
into
xchg
pause
or
xlat
sbb
push
jle
sbb
inc
mov
cs
pop
cmpsb
mov
shl
jo
mov
lahf
aaa
pop
ds
mov
jmp
push
jecxz
mov
dec
jle
imul
adc
rclb
mov
sub
jl
mov
arpl
cld
dec
xchg
mov
push
push
sub
xchg
popf
adc
cmp
and
push
adc
dec
xlat
aas
xchg
dec
repz
fisubl
aam
mov
xlat
xor
inc
aam
stos
jo
pop
add
sbb
fidivrl
std
inc
mov
pop
cmp
cmp
test
and
stc
sub
mov
das
cwtl
jb
mov
ret
pop
mov
mov
inc
cmpsl
and
push
and
dec
ss
leave
notl
jl
inc
movsl
jno
jge
lock
add
jae
imul
mov
or
mov
imul
lret
lcall
in
cmpsl
cmpsb
push
jo
ss
adc
sbb
xor
push
push
jp
mov
inc
or
push
imul
push
mov
cs
ss
pusha
jo
cmp
xchg
xor
cmp
inc
test
pop
xor
lea
push
jmp
dec
frstor
cmp
mov
push
mov
jno
push
dec
or
nop
cmp
ljmp
push
ja
outsl
jae
push
ss
mov
jne,pn
jno
pop
inc
aaa
mov
push
pop
jg
mov
sbb
or
mov
rcl
insb
fldl
filds
jge
cli
jp
mov
loop,pt
jecxz
pop
stc
jl
and
jge
mov
lret
sub
int3
pop
std
movsb
cltd
repz
adc
jbe
xchg
mov
out
mov
into
pop
cmp
int
adc
or
scas
adcl
out
jae
arpl
push
xor
dec
jmp
push
push
je
rcr
xchg
pop
and
aas
dec
filds
dec
cmp
orl
pop
pushf
lret
add
mov
hlt
ljmp
mov
pop
sbb
and
pop
push
fmull
add
push
sub
xor
notl
stos
pop
adc
fwait
push
cli
inc
fldz
push
jns
scas
or
pop
insb
cmpsb
rcll
movb
pop
mov
sub
mov
stos
in
outsb
and
shrl
fs
shlb
jge
in
adc
cwtl
fsts
and
xchg
hlt
or
popa
call
push
aas
insb
inc
inc
push
xchg
mov
nop
test
testl
push
add
push
jp
jne
ja
xor
ss
ror
mov
fs
cmpl
mov
out
in
cltd
bound
xchg
pop
mov
test
lea
xchg
mov
pushf
pusha
movsl
in
lock
in
add
inc
inc
push
int3
testb
pop
jl
and
sub
leave
jge
stc
mov
pop
testb
dec
popf
mov
insl
xchg
xor
mov
xchg
int3
pop
pop
dec
fwait
dec
stc
insb
and
cmp
pop
stos
mov
in
adc
mov
inc
ficoml
sub
ret
pop
icebp
and
jns
sub
daa
out
shlb
divb
cmp
lahf
sub
push
push
test
loopne
push
push
dec
lahf
mov
adc
adc
pushf
and
jl
out
or
bound
jmp
adc
fimuls
icebp
adcl
mov
xchg
lea
jp
vpinsrw
ja
insb
sbb
jo
fidivl
movsb
lea
test
add
add
pop
aas
sbb
pop
sbb
mov
js
shr
insl
aad
lock
xor
sbb
add
test
jge
iret
in
jle
or
enter
pop
or
or
cmpsl
sbbb
out
movsb
test
pop
mov
testl
or
aad
clc
xchg
dec
xchg
ja
ficoms
imul
pop
and
repnz
sub
push
cld
mov
outsb
add
stos
das
xchg
int
ja
xor
fistl
cltd
add
daa
xor
jae
mov
adc
push
cmc
cmp
inc
inc
xlat
subl
inc
adc
fbstp
das
das
popf
ja
jne
rclb
add
repnz
or
adc
jns
or
cwtl
jg
loope
lahf
xor
pop
adc
jae
and
jp
or
xchg
daa
dec
push
dec
xor
push
and
lret
test
xchg
into
or
test
or
xchg
mov
insb
push
jae
outsl
jmp
das
push
and
or
cmp
push
cmpsl
jbe
pusha
cmpl
push
mov
leave
roll
or
xor
pop
rcl
dec
pop
daa
scas
mov
mov
push
cmp
adc
adc
push
xor
lret
adc
xor
xor
pop
sub
dec
je
xor
sbb
int
adc
mov
je
cmpsl
inc
inc
cmpsl
adc
sub
outsb
popf
mov
or
out
mov
cmpsb
popf
into
call
lea
btc
push
sub
out
scas
lods
sbb
clc
pop
xchg
adc
pop
add
and
sub
or
repz
or
das
or
mov
xchg
fdiv
jne
inc
sbb
movsl
mov
sbb
mov
push
test
jl
sbb
cmpsb
adc
rcrl
into
pop
rorb
dec
xchg
jge
je
mov
push
into
add
ljmp
rorb
mov
sar
js
dec
cmpsl
scas
insl
nop
pop
cmp
and
and
dec
push
inc
loope
mov
cltd
inc
in
pop
cmpsb
outsl
adc
and
xchg
cwtl
mov
or
loope
and
nop
rcr
lret
cmc
cs
push
xchg
sbb
loope
jg
push
add
xchg
sti
mov
jmp
push
je
xor
popf
add
cltd
xrelease
orb
cmpsb
sub
scas
in
pcmpeqb
jmp
xor
dec
ss
dec
mov
das
mov
sub
int3
cmpsb
mov
inc
out
sub
outsb
enter
in
arpl
sbb
and
mov
mov
or
movsb
fmull
sub
ljmp
xchg
js
xor
push
mov
nop
sub
and
pop
fwait
cli
cmp
xchg
fstpt
fdivrs
xchg
stos
cmp
adc
nop
add
xchg
bound
fidivs
pop
or
bound
mov
stos
orl
jbe
cmp
dec
shlb
add
fwait
outsl
add
dec
lret
and
dec
mov
into
pop
sub
xlat
dec
adc
mov
sbb
lea
test
lock
cltd
and
sub
or
pop
mov
bound
jmp
aad
cmp
jle
jne
jecxz
dec
sbb
add
rorl
sub
or
mov
push
adc
mov
mov
and
xor
add
jmp
sbb
dec
dec
mov
out
es
bound
enter
es
test
push
pop
jle
cmp
sbb
cmp
push
inc
jbe
inc
or
xchg
push
lds
sub
fmul
xchg
clc
mov
mov
sbb
daa
or
cwtl
or
push
dec
cld
lds
xchg
in
je
pop
xchg
push
js
sbb
insb
inc
scas
clc
mov
and
cmp
jmp
idivl
sbb
push
push
stos
ror
push
daa
bound
dec
adc
and
shlb
push
push
fwait
loope
dec
cltd
insl
test
cmp
testb
mov
loope
insl
dec
push
xor
cmp
xor
insb
nop
cmp
cwtl
sub
in
mov
add
lock
sub
xlat
xchg
int
orl
ss
test
stos
lods
and
xor
std
repz
lahf
xchg
in
push
data16
lcall
pop
gs
clc
xchg
popf
mov
pop
lea
jo
fdivrl
pop
xchg
out
dec
mov
and
idivl
push
mov
daa
cmpsb
sbb
into
imul
dec
and
mov
xor
push
popf
xchg
sub
das
xchg
adcl
sbb
mov
mov
inc
lret
cwtl
ret
sub
sub
pop
ret
pop
cmp
push
lret
out
mov
sar
jo
int
push
fs
cli
stc
pop
fs
jmp
les
jo
mov
or
push
mov
or
add
test
jbe
inc
push
add
mov
xlat
stos
push
in
xor
lods
cli
dec
jbe
insb
or
pushf
add
mov
mov
jno
mov
pop
or
into
xor
rcll
stos
or
add
mov
jp
sub
jnp
jnp
pop
mov
adc
enter
mov
and
push
cmp
in
add
inc
loop
lods
mov
insb
pop
imul
subb
stos
cmp
movsl
dec
test
iret
mov
sbb
std
xor
jae
iret
minps
cmp
sub
daa
mov
xchg
lahf
or
and
cmp
sbbl
decb
in
add
push
push
out
mov
out
pop
aas
add
cmp
jo
sbbb
xor
fs
adc
nop
sub
sub
dec
sbb
int
enter
stos
and
ret
stos
inc
out
insl
xor
rcll
rdpmc
lcall
sub
loope
mov
jbe
mov
cmp
xchg
adc
xchg
inc
mov
inc
and
ss
int3
jle
ror
lret
lods
les
dec
pop
loopne
das
dec
xchg
cmp
aam
sbb
imul
adc
mov
jg
inc
mov
pop
mov
dec
cmp
test
push
fnstenv
adc
mov
dec
inc
cmc
out
shrl
pop
or
lods
pop
mov
jno
sbb
jno
jbe
or
push
and
das
sbb
or
mov
cwtl
es
cld
aam
cwtl
fcmovnbe
or
ficoml
je
or
inc
sbb
out
mov
push
cwtl
or
pop
testb
dec
adc
loopne
daa
insl
outsb
lahf
cmc
cmpsb
out
pop
stc
fwait
lret
or
rcll
hlt
inc
adc
mov
js
cmp
lret
mov
xor
or
imull
dec
iret
add
addr16
popa
dec
ja
cltd
and
addr16
data16
pop
add
enter
push
out
aad
out
mov
popa
jns
shrb
movntq
adc
sub
sbb
dec
push
sub
pusha
pop
and
jbe
sbb
and
jmp
lahf
cmp
lcall
mov
xchg
xor
xor
cs
ss
out
cwtl
loope
clc
and
add
push
sahf
cmp
and
sub
aas
fnstcw
mov
mov
subb
sbb
mov
into
adc
insl
std
cli
movsl
aam
stos
xor
insb
push
daa
jp
fadd
daa
jo
xor
out
movsl
pop
test
jl
inc
dec
mov
jmp
jb
mov
lret
movsb
xor
mov
pop
mov
stos
jae
and
mov
fdivl
pop
outsl
mov
in
daa
pop
jg
dec
mov
lcall
imul
imul
dec
stos
ret
jo
imul
pushf
mov
cmp
insl
or
lret
pop
movsl
or
fdivrl
sarl
cmp
adc
or
les
jnp
pop
dec
stos
mov
loope
ss
lahf
add
and
or
pop
adc
loope
adcb
test
pop
notb
mov
roll
mov
dec
xchg
sbb
jl
dec
sub
jmp
jns
ror
int3
push
or
jne
dec
mov
mov
fs
cmp
mov
inc
shll
pusha
xchg
in
add
loope
jg
add
push
pop
pop
lods
jp
test
cwtl
add
xor
adc
subl
inc
mov
and
add
xchg
pop
fisubrs
adc
aaa
in
pushf
or
cltd
dec
cs
lret
jp
sbb
xchg
imul
loop
mov
pop
testb
push
pop
popf
in
dec
cltd
cmp
dec
dec
ds
sti
popf
aam
push
jns
addl
push
repz
pop
js
pop
xchg
sbb
dec
rcll
enter
sbb
scas
push
fwait
scas
fldl
inc
dec
mov
lds
sbbb
cmp
sbb
cmp
aam
out
loop
jmp
aas
lret
adc
inc
idivb
and
mov
cmpsl
repnz
xchg
popf
sbb
jb
dec
addr16
xchg
cwtl
stc
add
orl
scas
add
cmova
call
ds
adc
xchg
inc
je
iret
fnstsw
add
aaa
inc
cmp
int3
loope
ds
sarl
loope
lea
xorb
jp
in
inc
mov
adc
mov
cmp
adc
ss
shrl
imul
push
inc
push
xor
xchg
imul
cli
push
add
ss
cs
and
inc
les
lods
fisubs
pop
movsl
pop
adc
jno
les
inc
call
cli
test
mov
sbb
xor
aam
or
icebp
daa
mov
inc
arpl
add
out
dec
es
insl
push
and
test
push
add
pop
mov
ds
dec
jns
fstpl
adcb
push
add
jnp
dec
iret
push
jge
faddp
xor
in
jmp
movsl
rolb
dec
xchg
inc
add
dec
lock
mov
test
mov
and
sub
mov
xchg
outsb
and
cmp
adc
mov
ss
fbstp
movhps
jle
popf
cs
test
xor
stc
adc
xor
minps
aad
pusha
jg
es
movb
leave
lods
dec
inc
ds
out
cmp
dec
pop
cli
jmp
xchg
xor
ficompl
in
imul
mov
jl
fldcw
xchg
pop
outsb
push
add
dec
push
pop
sub
mov
popa
jae
aad
or
cmpsb
and
cld
loopne
sbb
es
lea
mov
mov
dec
mov
pop
mov
jmp
jbe
ljmp
mov
jl
scas
in
mov
xchg
jge
into
jnp
subl
dec
push
dec
add
xchg
sbb
pusha
jae
cmp
dec
push
jmp
push
sub
aas
mov
test
gs
popa
sub
pop
xor
mov
fldt
ljmp
cltd
das
pop
cmp
push
and
pop
sbb
sub
fs
pop
das
push
packuswb
insb
mov
mov
mov
scas
mov
xor
lods
add
lret
mov
out
jg
pop
cmp
or
jp
js
pop
xlat
xchg
fldz
xor
mov
sub
mov
pop
dec
ja
dec
sub
sbb
or
mov
ss
and
push
mov
xor
test
adc
dec
popa
fldcw
cmpsb
jnp
stos
push
and
fsubl
sbb
stos
pop
in
add
sub
mov
sbb
out
adc
test
sbb
dec
enter
sbb
imul
xchg
dec
xchg
or
aam
ss
enter
pop
push
push
int3
inc
mov
add
xor
xchg
out
insl
add
cmp
ss
repnz
popa
aaa
out
adc
rorb
nop
sub
sub
std
adc
sub
pop
adc
test
add
nop
stos
inc
push
cmp
and
addl
cmc
lea
cmp
in
pop
push
outsb
scas
pop
pop
jmp
push
xchg
hlt
dec
ja
and
jmp
mov
xchg
movl
dec
sahf
aad
pushf
arpl
mov
sub
sahf
lock
pop
push
repz
adc
dec
mov
push
imul
jmp
xchg
sub
cli
into
test
pop
popf
pop
test
and
ljmp
mov
dec
mov
or
xchg
int3
jnp
sub
lcall
cwtl
imul
outsb
rcrb
lock
aaa
leave
xor
sub
cmp
mov
insl
cmp
dec
out
fisubrs
xor
das
inc
sub
pop
repz
mov
adc
push
loop
in
mov
popa
xor
cmpsl
fcoml
adc
sbb
cli
arpl
arpl
pop
mov
mov
sahf
arpl
mov
pop
fsubrl
adc
pop
cs
loop
mov
mov
mov
lahf
xchg
lods
inc
mov
cld
jae
and
jecxz
push
fisttps
or
sub
pand
andb
stc
lds
lods
mov
insl
imul
sbb
sbb
mov
mov
xchg
and
fcoml
imul
push
aas
mov
ljmp
outsb
aad
aad
inc
mov
test
jno
imul
lods
cmp
lods
lods
sub
aad
sbb
xchg
stos
jl
mov
adc
imul
aas
lods
sbb
les
jmp
adc
ret
sub
inc
mul
or
out
pop
cmp
dec
or
test
out
dec
test
fildll
scas
jecxz
or
jo
out
xchg
call
loopne
pop
ret
xchg
sub
cli
adc
sub
or
cs
mov
jae
inc
stc
jg
jbe
jne
xor
cs
adc
or
push
or
outsl
inc
adc
mov
jp
adc
std
in
out
imul
xor
cmp
xchg
pop
enter
push
mov
aas
stc
pop
adc
test
addr16
or
xor
adc
push
lock
xchg
pushl
pop
fiadds
aas
xor
mov
loop
xchg
outsb
adc
dec
xchg
in
fcomp
aam
mov
int3
jb
add
movsb
loopne
aaa
sti
dec
nop
inc
push
insl
sbb
gs
into
add
lds
aaa
push
lcall
dec
sbb
rorb
imul
bound
je
ret
enter
out
int
adc
cmpsb
pop
mov
sub
cmpsb
fsubrl
sbb
mov
cwtl
cmp
jl,pn
lock
xchg
pusha
mov
push
hlt
jge
jge
cmp
push
push
pop
mov
cmp
out
jb
mov
imul
xchg
push
ret
cltd
outsl
into
or
inc
negl
cmpsb
testb
xor
clc
add
pushf
lahf
jbe
xchg
popa
cmp
mov
and
cmc
dec
clc
or
fsub
out
mov
pop
and
push
sub
je
pop
lret
jl
imull
and
cltd
sub
jae
gs
div
stc
cmp
fstpt
xchg
inc
mull
shl
int
add
clc
lahf
mov
jle
xchg
repnz
lahf
pop
sbb
icebp
cld
ss
lret
aas
scas
cwtl
pop
or
adc
jg
lea
or
jge
pushf
imul
ret
pushf
aam
mov
cld
xor
das
xchg
inc
push
daa
nop
enter
inc
jl
sbb
xlat
jp
pop
jbe
xor
js
mov
ja
and
sbb
mov
aaa
pop
repnz
xor
decl
aad
sahf
cmp
lahf
and
lcall
dec
lods
sub
leave
xchg
ret
cmp
pusha
dec
movsb
mov
shll
stos
outsl
inc
lods
mov
push
adc
scas
nop
mov
test
push
cmp
outsb
ds
push
adc
xchg
jne
cmp
shll
inc
adc
mov
scas
fidivs
fs
or
xchg
jle
mov
mov
scas
inc
ljmp
fcoml
aaa
jno
sti
xchg
test
push
je
es
xchg
or
sub
cmpsl
sbb
enter
sub
and
test
mov
addb
repz
maxps
inc
sub
push
sub
out
in
jo
scas
xchg
or
lahf
and
mov
icebp
sbb
lods
push
std
lret
outsb
ficoml
mov
scas
mov
stos
clc
test
insl
cmp
cmp
and
mov
lahf
pusha
pop
out
hlt
xchg
scas
push
add
sub
and
in
dec
mov
sub
lods
loop
xchg
xor
lcall
inc
cmpsl
lcall
xor
jno
mov
arpl
pop
cmovl
mov
das
jle
fisubrs
add
and
mov
xlat
std
gs
cli
in
scas
inc
ja
add
out
adc
es
ret
adc
fisubrs
pushf
mov
in
sbb
cltd
adc
push
mov
cmp
lock
lret
sub
mov
scas
xor
enter
push
jecxz
gs
sbb
and
add
outsl
aad
cli
int
sbb
roll
jnp
cli
adc
sarb
insl
testl
pusha
lret
cmp
xchg
cmovo
inc
leave
inc
xchg
notl
fs
dec
movsl
lods
out
jae
adc
jge
sub
fimull
push
sbb
test
aam
pop
jg
xorl
adc
adc
scas
cmovae
jns
xchg
add
mov
cmp
adc
mov
mov
mov
cwtl
test
xor
arpl
mov
inc
jg
xor
and
cltd
jne
jmp
rsm
rcll
out
or
mull
sbb
ds
xchg
hlt
cmp
iret
andl
hlt
bound
push
icebp
das
insl
or
test
dec
repnz
outsb
xor
add
sub
cmp
adc
hlt
sub
shrl
xchg
js
outsb
into
sti
inc
xor
add
xchg
xor
aam
xor
xorb
push
fs
cmp
adc
lock
or
imul
jo
xor
gs
lcall
adc
mull
enter
lahf
adc
adc
jmp
jno
xchg
loop
cmpsb
leave
sub
add
rcrl
push
pop
lds
movsl
push
push
push
stc
sub
sti
lods
shll
jns
mov
sub
and
add
clc
daa
xchg
xlat
mov
scas
sub
xchg
adc
aaa
in
imul
shrl
clc
xchg
or
lods
sub
shll
sbb
xor
sbb
dec
lock
ja
addr16
ficoms
jns
sub
push
push
stos
in
addr16
xchg
sahf
into
repnz
xchg
mov
xchg
sti
dec
push
mov
push
jnp
cmc
xor
cwtl
sahf
push
xor
ficomps
dec
jp
adc
xchg
ljmp
jp
sbb
lcall
sub
repnz
mull
cmp
in
sbb
xchg
dec
imull
loope
dec
mov
pop
test
incb
and
imul
xor
sbb
xlat
divl
jb
pop
adc
adc
mov
sbb
je,pn
pop
jmp
pop
mov
xor
ss
cmp
imul
or
dec
clc
in
es
mov
xchg
sbb
sbb
ja
and
leave
push
cmp
stc
test
hlt
or
xchg
hlt
jge
cltd
push
ljmp
jp
sahf
iret
jnp
and
out
pop
inc
outsl
mov
add
mov
cld
aad
imul
mov
into
in
mov
cld
pop
inc
cmp
repnz
jno
lcall
mov
stos
jns
cmpsl
jecxz
leave
daa
or
xor
adc
xor
mov
das
and
sbb
lea
int
lret
cmp
ja
inc
es
sub
hlt
or
mov
sahf
test
notl
popf
xor
repnz
jbe
outsl
out
dec
push
xor
mov
jns
xchg
ss
cmc
add
imul
hlt
dec
clc
mov
push
dec
aam
mov
cmp
arpl
jns
das
dec
or
leave
add
push
std
and
sub
insl
ret
push
xlat
in
gs
mov
aam
jne
or
comiss
shrb
jo
into
jnp
js
adc
push
popa
xchg
int
lods
xor
xor
xor
test
push
cld
push
mov
mov
xchg
nop
std
sti
loope
movb
xchg
or
movsl
push
lock
adc
test
xchg
aas
aad
lock
xchg
jnp
ss
out
jl
xchg
call
sub
aaa
adc
int
ja
enter
pop
out
push
arpl
inc
popa
or
xchg
or
add
and
cmpsl
movsb
imul
repnz
push
call
sub
pop
in
orl
push
repz
xchg
dec
cmc
xor
test
sbb
cmp
sbb
scas
sahf
push
add
dec
add
cmpsb
es
dec
test
aaa
insb
repnz
ja
cmpsl
fildll
adc
and
push
test
push
jl
sub
sahf
dec
dec
dec
shlb
lds
leave
xor
scas
push
dec
dec
cmc
dec
fs
daa
subb
outsl
ljmp
adc
fmuls
dec
mov
iret
gs
arpl
or
test
jl
xchg
xchg
imull
xchg
adc
pop
sub
dec
or
or
dec
dec
adc
popf
mov
xchg
sub
cmpsb
and
mov
cmpsl
mov
xor
sub
clc
and
dec
ljmp
imull
xchg
push
outsb
pop
leave
xor
xchg
cmp
inc
adc
inc
rcll
dec
orl
std
inc
int
shrb
pop
dec
dec
sahf
es
add
jle
lcall
mov
out
test
and
xchg
testw
outsl
inc
lea
mov
or
jmp
or
sbb
dec
cmpsb
insb
fdivs
mov
mov
call
push
rol
or
sbb
loopne
or
rorb
cmp
xor
cld
cli
cltd
push
adc
insl
sbb
push
ja,pt
jecxz
das
gs
push
dec
je
out
mov
test
repz
and
outsb
aaa
scas
mov
subb
test
sub
lods
push
adc
jge
and
in
pop
add
stc
subl
test
ret
lahf
hlt
inc
in
and
push
popl
xchg
out
adc
gs
pusha
cmp
daa
jb
dec
jle
and
add
ret
in
add
out
std
adc
xor
es
jae
push
mov
jbe
and
xor
mov
mov
cmp
cli
jmp
stos
xchg
sub
test
dec
jo
pop
outsb
push
test
mov
pop
ss
pop
cmp
sub
fld
and
xor
ss
xchg
fisubs
repnz
sti
push
pop
lods
inc
pop
mov
dec
jp
in
outsb
fstpl
mov
adc
in
into
sub
movsl
mov
inc
into
movsl
lock
ds
jp
lcall
push
jnp
push
ret
mov
std
movsb
add
std
mov
test
popf
in
xor
push
sub
loop
lea
add
push
jmp
leave
jl
rcll
fiadds
movsb
cmpb
xchg
nop
or
mov
out
ja
add
push
dec
push
add
nop
inc
pop
lret
cs
pop
or
shrl
imull
xor
mov
adc
sbb
mov
test
sub
or
imul
sub
mov
in
out
in
xchg
jnp
push
mov
stc
or
mov
or
sbb
dec
fstpt
mov
pop
hlt
dec
les
push
mov
arpl
pop
xchg
outsl
mov
adc
mov
loop
out
xchg
insl
sbb
repnz
negl
adc
jecxz
test
push
xor
loopne
pop
or
shrb
aaa
mov
call
movsb
add
loop
push
cmp
dec
in
std
lds
ret
mov
inc
call
test
mov
sub
ss
stos
mov
mov
cmpb
lds
mov
test
mov
roll
pop
mov
test
mov
out
add
cmp
sbb
mov
ja
adc
lods
mov
sub
adc
das
or
movl
mov
jmp
dec
pop
ficomps
stos
or
out
or
cmp
std
lods
push
popa
ja
push
pop
pushl
mov
pop
inc
inc
push
in
pop
sti
arpl
bound
popa
cmp
xchg
inc
nop
inc
ds
inc
xchg
push
add
movsl
mov
xor
xor
fwait
xor
cmp
fisubrs
fmuls
sub
andl
pop
hlt
push
rcl
movsb
xor
dec
mov
jle
dec
aad
mov
outsl
notb
sbb
adc
cmp
mov
or
mov
ja
out
jp
push
mov
mov
cli
pop
cmp
les
outsl
cltd
sarl
mov
pop
mov
mov
mov
inc
jns
lret
jl
shrb
pop
sbb
or
or
jb
pop
lret
hlt
inc
ret
imul
fcompl
sub
jp
shrl
mov
cli
mov
insl
andl
mov
jg
xor
je
enter
sbb
lret
jae
jmp
test
cltd
stos
negl
mov
push
dec
adc
hlt
cli
adc
pop
inc
add
fyl2xp1
xchg
faddp
sub
mov
cmpsl
ret
sub
mov
fcoml
cmp
sub
adcl
jl
stos
cmc
lret
mov
jecxz
mov
scas
sbb
add
aaa
shll
movb
dec
lret
ret
xchg
and
jo
and
push
mov
cmpsb
xor
cwtl
dec
mov
pop
mov
loop
ljmp
inc
lcall
stos
mov
and
mov
pop
bound
push
mov
dec
cwtl
add
add
dec
movsb
jno
jle
push
xor
jmp
jl
in
or
mov
cmp
jno
inc
adc
hlt
push
jno
sarb
mov
mov
pop
jg
jl
cmp
jge
jns
or
fisubl
ja
cltd
mov
adc
xchg
sub
pop
out
sub
cltd
arpl
leavew
std
loopne
xchg
pop
xlat
jns
adc
scas
leave
pop
mov
or
in
push
pop
push
jecxz
jne
adc
enter
mov
into
pop
jmp
lcall
loopne
inc
test
shll
adc
outsb
cmpsl
ljmp
adc
and
sbb
cmpsl
inc
cmp
sbb
int
pop
popa
cli
jmp
mov
orl
in
pop
addr16
jg
push
jno
jmp
cltd
dec
cmc
loope
stos
lret
out
mov
mulb
cmp
mov
cmp
and
jns
cli
in
xchg
or
fldcw
xor
js
mov
jg
outsb
ret
in
sbb
ljmp
cmp
ja
xchg
push
pop
ss
in
mov
add
aad
out
lahf
and
insb
push
sahf
leave
xchg
pop
add
pop
and
repnz
rorl
data16
mov
cli
xchg
mov
adc
cmp
sub
ds
inc
fidivs
icebp
sbb
imul
push
pop
cmp
cmp
push
ret
sbb
cmp
jp
cmp
push
mov
xor
dec
andl
push
push
inc
ret
mov
stos
pop
loop
mov
jmp
pop
xchg
xchg
xchg
cltd
pop
sahf
inc
loopne
adcb
inc
pop
pop
mov
sar
or
or
pusha
fs
cmc
adc
xor
pop
fmull
test
hlt
push
faddl
dec
fsubp
dec
lea
rolb
mov
adc
loopne
xchg
fnstenv
enter
or
xchg
push
popa
jnp
xlat
fs
in
jo
insb
popa
das
sbb
and
push
stos
push
imul
test
das
repz
add
inc
jge
ja
inc
rolb
movsb
test
gs
push
cmovne
jge
sti
cwtl
mov
leave
push
sub
and
cmp
adc
mov
mov
mov
push
dec
dec
and
repz
popa
push
imul
dec
xor
sti
pop
xchg
pop
int
dec
push
lock
mov
int3
negl
cwtl
rcll
shrb
adc
aam
mov
xor
add
jp
fadd
xchg
cmp
add
and
pop
out
loopne
test
test
cld
xor
repnz
fdiv
out
jne
mov
or
xor
pop
fisubrl
xor
rclb
pop
imul
test
arpl
jle
shlb
mov
popf
cmp
xlat
lods
cld
in
adc
inc
sub
or
push
gs
pop
xor
mov
or
fiaddl
jno
iret
fmuls
inc
js
xor
mov
das
or
mov
iret
popf
sbb
adc
jae
and
test
lea
iret
adc
push
dec
lret
insb
pop
shrb
cmp
outsl
push
cs
mov
or
mov
aas
jle
iret
adc
stc
inc
jb
bound
jmp
popf
and
add
out
into
test
cmc
xchg
ja
dec
adc
sarb
push
mov
pop
jns
mov
cmp
insl
jge
test
inc
outsb
push
gs
push
ljmp
outsb
fidivrs
in
push
mov
cmp
xchg
pop
das
jae
mov
cmp
jnp
aad
in
sahf
jns
fs
add
test
cmpsl
xor
cltd
lods
adc
bound
sti
push
lods
cmp
sbb
dec
xor
xchg
popf
xor
push
add
scas
addr16
xchg
gs
xor
call
cs
das
mov
dec
loopne
cltd
bound
pop
inc
jns
icebp
enter
or
cs
xlat
inc
push
inc
fnsetpm(287
mov
xor
jecxz
mov
fcompl
iret
dec
test
decb
fcmovb
pop
jecxz
sbb
and
pop
into
cwtl
test
cltd
fcoml
ss
and
lds
stc
jno
xchg
jecxz
xor
rorl
or
mov
call
lea
js
and
and
dec
pop
mov
dec
lcall
xor
xlat
jge
cmp
inc
mov
hlt
out
rorb
dec
pop
xchg
dec
enter
cmp
adc
push
mov
adc
test
rcll
dec
dec
ja
aam
mov
popf
addb
mov
xorb
pop
xchg
insl
out
add
mov
pop
mov
and
stos
scas
inc
adc
lcall
nop
mov
imul
test
sub
clc
das
mov
ja
cmpsb
sub
push
pop
mov
mov
cwtl
cltd
and
fisubrs
sub
push
cli
mov
es
outsb
jle
addr16
shl
push
pusha
imull
gs
imul
dec
incb
dec
push
and
sub
pop
push
ds
xor
leave
and
adc
daa
cmp
xchg
pop
push
and
lock
or
xor
icebp
cmp
fs
push
test
and
addr16
in
lods
fisttpl
push
orl
lock
dec
inc
jbe
mov
jb
sbb
test
sub
testb
ss
sub
in
lret
mov
xchg
lods
pop
push
rol
cld
and
lods
push
repnz
subb
inc
jne
mull
add
dec
xor
and
or
and
insl
xor
dec
fisttpl
or
cs
sbb
cli
nop
clc
xorb
inc
scas
xchg
dec
lret
stos
mov
sub
ljmp
sub
jae
movsl
mov
sub
ss
xchg
test
test
loopne
mov
dec
rolb
test
pop
addr16
in
in
jmp
out
xchg
pop
add
call
cmpsl
cmp
sbb
es
mov
mov
jge
cltd
and
mov
jb
ror
cwtl
ret
jecxz
dec
push
icebp
inc
orb
shlb
icebp
das
push
xor
inc
jp
jbe
cmpsb
int3
dec
aad
add
inc
stos
out
or
push
dec
xor
dec
cmp
xchg
test
cltd
cmpsl
clc
dec
push
sbb
push
dec
in
push
pop
shlb
sbb
mov
fsts
hlt
push
cmpsl
sub
sbb
mov
or
xor
outsl
dec
mov
mov
push
inc
dec
xor
out
adc
push
cli
xorl
pop
pop
jb
das
mov
clc
cmc
xor
sti
ss
push
jmp
pop
mov
pop
and
loope
and
push
xchg
outsb
xchg
mulb
arpl
imul
lds
jl
cld
jmp
outsb
pusha
test
xchg
mov
clc
jo
aad
jle
insb
loopne
xchg
push
push
xor
fs
sub
loope
xchg
pop
pop
scas
dec
imul
lds
xchg
adc
imul
mov
xchg
xchg
test
dec
inc
fcmovu
push
les
lea
popf
arpl
jne
arpl
hlt
into
add
lcall
add
orl
mov
push
mov
das
xchg
mov
push
shl
jb
enter
mov
pop
in
stos
sub
lods
or
jl
daa
out
in
sbb
mov
sub
dec
sub
cmp
jno
in
pop
iret
rorl
lcall
out
aad
test
jb
scas
mov
inc
inc
jbe
outsl
mov
or
sarb
lds
adc
push
out
ss
adc
or
jns
insb
push
pop
push
xor
es
xor
ss
pop
xchg
push
push
jmp
xor
inc
jnp
std
stc
add
or
cmc
add
jmp
xchg
mov
or
pop
xchg
fsubr
sbb
dec
adc
and
dec
out
mov
sbbl
andb
push
repnz
mov
push
xchg
add
data16
ss
divb
mov
mov
xchg
mov
cmp
or
sbb
fadds
or
or
or
add
cmp
shrb
outsb
push
insb
mov
push
push
int3
pop
jp
add
sbb
dec
stc
or
xchg
pop
shrb
sbb
sbb
into
fldcw
lock
cmpsb
cmp
or
pusha
sbb
mov
addl
and
ret
int3
bound
mov
loope
lcall
sub
jle
decl
js
sbb
cmpsl
or
jo
popa
dec
lods
sub
jmp
das
inc
leave
pusha
push
and
psubusb
int3
cmp
xchg
sbbb
into
jb
jp
jmp
movsl
mov
jle
movsl
sub
xchg
adc
and
aad
lcall
and
mov
mov
in
bound
inc
dec
or
stc
add
mov
pop
xchg
jns
bound
lcall
push
pop
add
testb
pop
fsubs
lahf
mov
enter
divl
add
imul
into
and
ds
bound
mov
les
mov
stc
jne
push
bound
in
mov
loopne
adc
imul
out
stos
out
mov
in
es
push
mov
test
jne
mov
aas
pop
jno
popa
call
mull
lcall
pushf
out
adc
hlt
push
daa
adc
pop
xchg
sbb
mov
xor
arpl
int
mov
push
push
test
in
xchg
or
and
xorl
push
out
mov
add
push
rolb
rolb
mov
nop
push
ss
ljmp
dec
dec
mov
loope
and
scas
aad
fs
lds
mov
imul
pusha
es
pop
dec
push
inc
insl
fsubrs
shll
fsts
jae
aad
dec
aad
xor
out
mov
xor
rorb
icebp
or
leave
or
xor
aaa
jp
fidivl
inc
cmc
inc
cltd
subl
push
insb
dec
and
jns
ret
fiadds
lea
testl
out
mov
push
sub
or
repz
mov
mov
mov
imul
add
fwait
sbb
in
adc
xorb
mov
add
int3
dec
mov
cmp
rolb
pop
pop
jb
popf
inc
push
jl
divb
push
xor
mov
or
adc
ja
jne
sti
pop
aaa
movsl
outsl
fisttpll
enter
mov
rcl
je
dec
sbb
stos
cltd
xchg
adc
mov
sbb
out
loop
push
xor
data16
jns
movsb
sub
out
ds
inc
scas
test
push
push
mov
mov
repnz
mov
push
cmp
xor
into
mov
ficompl
or
movsl
adcb
sarb
lods
push
imul
cmp
fsubrp
xchg
inc
pop
xor
frstor
mov
into
jmp
adc
cmp
dec
mov
inc
push
cs
pushf
dec
ljmp
ljmp
fisttpll
lahf
adc
xchg
and
cld
xchg
inc
inc
loop
sarl
shrl
and
shll
add
mov
xor
lea
clc
jmp
imul
and
pop
insw
out
sub
lods
test
sub
mov
dec
mov
loopne
in
inc
mov
jle
xor
inc
push
adc
xchg
and
je
mov
pop
dec
std
out
cmpsl
sarb
xchg
ds
xchg
xor
xchg
insb
cmpsb
adcl
jge
mov
test
sub
insl
jmp
push
xor
add
sbb
ret
adc
mov
into
jae
or
shll
shrb
push
rorl
xchg
jo
das
xchg
mov
insb
push
mov
adc
outsl
fstpl
sbb
aaa
out
sbb
daa
cmpsl
sub
jno
fisubl
leave
xchg
data16
pop
jo
in
loope
cltd
cmpsl
hlt
cmp
insb
aaa
jle
in
leave
or
shl
sbb
cmpsb
add
xor
xor
cli
repz
jns
cmpsb
stos
pop
inc
shld
dec
mov
mov
ljmp
in
or
add
cmp
xchg
fbstp
or
mov
into
aas
mov
test
cld
xor
jge
std
insb
push
push
call
lea
push
mov
mov
fbstp
scas
xchg
divl
mov
cmpsl
jbe
add
add
mov
mov
pusha
cmp
ret
xchg
mov
inc
cltd
enter
lods
pusha
imul
stc
sub
cld
jg
cwtl
xchg
fs
fidivl
mov
loop
iret
push
and
fistpl
push
xor
push
sbb
dec
faddl
enter
call
and
dec
das
pop
fs
pop
jo
add
xchg
lock
or
push
lods
or
fldcw
dec
lds
std
in
xor
out
jae
pop
adc
pop
out
jne
mov
outsl
insb
subl
cli
imul
std
or
cld
adc
popa
dec
outsb
shll
ror
das
insb
adc
ljmp
xor
rorb
out
in
enter
pop
arpl
xor
js
jecxz
adc
mov
insb
mov
js
jb
mov
lret
push
int3
dec
or
xchg
je
data16
lea
cmp
movsb
data16
rep
cmp
les
insl
and
or
dec
add
xor
add
xor
mov
jg
dec
stos
stc
mov
dec
and
insb
aad
gs
outsb
lret
iret
jne
mov
cs
adc
test
lret
mov
fmull
xor
cmp
sahf
test
sub
mov
push
adcb
sub
es
mov
or
out
xchg
push
fcoms
shrl
icebp
in
mov
cld
dec
out
inc
adc
add
leavew
fsubrs
or
mov
imul
mov
es
test
xchg
outsl
mov
mov
sarl
pop
push
test
lret
sbb
orl
push
xchg
xchg
iret
jmp
xchg
shrl
fimull
movsb
inc
loope
into
or
dec
mov
sbbl
in
cmc
outsl
push
jns
or
add
pop
lea
cli
xchg
cmp
dec
leave
mov
lret
and
clc
adc
mov
jns
xchg
mov
adc
push
xchg
dec
push
flds
mov
lock
jae
in
sar
adcl
and
sti
mov
or
or
push
pop
cld
xchg
int3
test
mov
dec
arpl
adc
mov
xchg
cmpsb
or
xor
jmp
dec
sti
fwait
and
adc
xor
stc
gs
mov
jmp
icebp
aaa
js
xor
es
mov
mov
mov
jae
cwtl
xchg
mov
lahf
mov
sub
jne
out
aas
aad
pop
adc
push
push
xchg
xor
nop
jno
push
xor
or
out
test
stos
push
lds
repnz
mov
jg
iret
push
and
inc
aas
pop
jo
mov
cmp
or
outsb
icebp
movsl
pop
out
pop
pop
ljmp
inc
xchg
or
les
and
xchg
jle
leave
pop
dec
inc
cli
jno
scas
sahf
mov
cmp
dec
aaa
push
xor
mov
int3
in
mov
xor
mov
and
mov
mov
lea
je
in
inc
xchg
nop
sar
jb
iret
mov
xchg
jl
sub
and
cmp
jmp
or
dec
and
shll
sub
xchg
sbb
dec
and
cs
xor
xchg
insb
adc
xchg
push
movsb
flds
push
in
out
and
movsl
pop
sbb
sub
ret
jns
mov
adc
xor
adc
out
mov
cld
jmp
inc
sub
pop
nop
lock
adc
sbb
repz
test
lahf
sub
cmpsl
fld
cmpsl
popa
push
shld
xchg
stos
or
cmp
push
repnz
xor
pop
jg
push
push
sub
es
aad
bound
data16
outsl
cmp
dec
or
dec
mov
mov
imul
mov
mov
aas
sbb
cmp
and
test
cmc
xchg
dec
pop
xor
cwtl
cmc
xor
sti
mov
xchg
jns
inc
insl
xchg
rclb
push
mov
mov
sub
mov
shrb
push
movsb
stc
test
insl
mov
cmp
add
inc
out
xor
fistpll
imul
mov
and
movd
pop
or
xor
roll
pop
outsl
push
jbe
xor
or
xor
nop
push
mov
pop
lock
jge
fdivs
mov
dec
movsb
rorl
push
dec
sub
aad
push
pop
nop
sbb
sub
or
jle
lcall
dec
dec
push
lcall
xchg
pop
jae
jb
xor
into
mov
and
inc
xchg
xchg
xor
cltd
aad
das
mov
and
sub
jo
leave
push
scas
popf
mov
xor
jae
xchg
mov
mov
cmp
xchg
adc
daa
xor
adc
lods
and
test
iret
cmc
int3
int3
outsl
nop
add
adc
stos
xchg
test
testl
cmp
ret
cmp
fsts
cmp
push
xor
std
push
cmpsl
insb
lock
lret
repnz
idiv
fwait
mov
pop
or
pop
mov
sub
loop
or
or
lret
push
push
dec
repnz
lcall
insl
movsb
xchg
push
outsb
es
sub
ss
sub
inc
xchg
dec
daa
fmul
mov
insl
out
push
lock
xchg
lods
xor
fisubs
outsl
fs
fidivrl
xchg
popf
cs
or
repz
mov
push
in
ss
pop
mov
decl
ficoml
sub
test
adc
aaa
mov
lea
push
mov
lret
popa
xchg
inc
push
push
je
pop
xchg
sub
int
or
fs
jmp
mov
adc
mov
push
and
cmpsb
push
mov
stos
push
push
call
fimuls
inc
sub
mov
in
ret
imul
inc
push
mov
sub
leave
push
inc
data16
and
loope
mov
mov
inc
lods
jne
mov
cmc
repnz
inc
negb
mov
gs
leave
cs
pop
pop
mov
lds
sub
sub
or
into
aas
repnz
or
push
jb
jno
pop
pop
repz
xchg
mov
xchg
hlt
imul
xchg
int
add
pop
dec
cld
inc
jne
adc
rcr
insl
fwait
mov
mov
mov
data16
iret
xchg
mov
or
xchg
mov
or
shlb
pop
ficoms
inc
cmc
lds
fcompp
sub
cmp
and
inc
dec
rcl
mov
popf
test
sub
pop
inc
or
test
cmp
cmp
add
push
xor
hlt
hlt
lcall
cmc
xchg
rorl
cmc
ret
hlt
int
sub
fildll
pop
aam
mov
rolb
mov
rolb
scas
and
lods
fs
stos
xor
and
test
lret
loop
mov
out
xchg
sub
orl
aaa
add
shlb
inc
lods
test
push
sub
std
test
movsl
mov
mov
lea
cs
mov
xor
sahf
mov
out
jns
mov
scas
lahf
adc
lret
push
and
leave
adc
popfw
mov
mov
or
mov
mov
sub
out
fistl
iret
rorl
dec
lcall
dec
mov
out
icebp
and
lds
scas
or
out
adc
dec
push
cltd
xchg
ret
inc
shlb
cs
mov
loop
lds
xor
mov
bound
cmp
adc
xchg
xchg
out
divl
out
popf
add
enter
pop
sub
imul
jb
out
inc
lret
clc
and
psrlq
push
inc
ss
pusha
shrl
stc
sti
cmp
leave
and
add
out
div
test
je
xchg
mov
lahf
fxch
xor
dec
sbb
testb
cmp
cmp
pop
cmpsb
sbb
sub
mov
adc
cwtl
pop
negb
push
ss
lret
orps
lret
andl
xchg
jne
pop
jl
pop
outsl
out
into
stos
fs
cmp
dec
sub
cmpsb
in
sub
stc
addr16
aam
or
outsb
fisubrl
lret
mov
cmp
clc
dec
addr16
jae
pop
add
mov
lret
xorb
cmp
jl
sub
loope
rorb
lret
mov
pop
sbb
sub
gs
rorl
jle
shll
fdivs
fwait
and
dec
enter
stos
popa
lods
and
sub
cmp
sub
xchg
sub
xchg
pushf
dec
iret
mov
shlb
jmp
dec
ss
mov
pop
cmpsb
test
loope
cmp
pop
cmp
aaa
push
lret
push
outsb
sub
jle
mov
dec
pusha
jmp
in
icebp
stos
incl
fsubrp
jns
push
or
lock
and
add
sub
xor
pop
pop
mov
jae
pop
ret
daa
pop
mov
int
cltd
dec
fists
jnp
push
ret
pop
and
sbb
jne
mov
push
adc
or
cs
push
insl
xchg
dec
jp
popa
inc
mov
daa
inc
mov
and
xor
loopne
push
jo
sahf
sahf
dec
imul
push
cmp
sahf
and
mov
pop
mov
aaa
in
rcr
dec
in
sbb
notb
cld
clc
ja
int
es
or
adc
sub
push
decb
test
or
add
mov
lods
cmpsl
mov
mov
and
inc
es
mov
shrb
push
xor
xor
rcrl
xchg
divl
push
xchg
sti
xor
popf
lods
nop
jl
into
movsb
mov
cmc
sbbb
popf
push
dec
aas
leave
xchg
insl
push
mov
shlb
push
ret
mov
mov
push
sbb
push
cmp
xchg
mov
jno
leave
pop
loopne
sbb
push
das
xor
loop
pop
dec
test
push
or
adc
xchg
push
and
jp
mov
jl
int
push
das
aad
pop
sub
jns
dec
cmp
sub
aad
int
mov
sbb
nop
js
ficoms
ja
insl
out
push
dec
push
out
cmp
cmp
lcall
jb
inc
call
ljmp
pop
loopne
repz
jns
pop
ja
pop
lahf
outsl
or
and
jne
mov
outsb
mov
out
add
cmp
mov
sub
push
scas
jne
loop
outsb
pop
into
lea
and
jecxz
jnp
int
push
cltd
fs
scas
iret
dec
aas
xor
cmp
mov
push
iret
xchg
rolb
xor
push
jge
pushf
xchg
and
es
fisttpl
pop
dec
dec
mov
and
push
sub
cwtl
outsl
pop
pop
jge
mov
dec
cmc
jmp
daa
cmp
mov
mov
xchg
bound
mov
xlat
fcos
cmpl
inc
ljmp
jmp
jp
out
sub
out
mov
cmp
mov
inc
sub
int3
cmp
or
call
xchg
mov
insb
cmpsl
pushf
ret
int
push
aas
dec
mov
lea
iret
ja
sbb
cmpsl
mov
cs
lea
xchg
mov
pop
bt
inc
xchg
stos
fs
sub
dec
call
and
stos
jo
addr16
test
or
and
mov
or
pop
push
scas
sub
jb
xchg
xchg
sub
or
adc
sub
push
pop
dec
mov
call
ljmp
add
add
cli
push
shll
xchg
js
jmp
push
cmp
xor
rorl
mov
xorl
mov
test
jecxz
mov
and
mov
loop
cmp
adc
es
outsb
mov
jno
add
inc
push
push
fiaddl
mov
jnp
aaa
pop
popl
imul
fildl
jl
dec
sub
pop
fwait
xchg
popa
mov
fadd
lock
dec
mov
cmpl
jp
adc
dec
xchg
dec
pop
aam
jp
dec
notb
cmp
cs
icebp
dec
push
pushf
jbe
adc
addb
cmpsl
lods
xor
insl
jle
icebp
dec
shll
mov
loop
lret
cwtl
lock
pop
int
loopne
rolb
in
into
cs
mov
push
mov
mov
mov
popa
ret
cs
lret
or
mov
lea
mov
call
orl
adcb
cmpsl
xchg
cmpsl
ret
out
jb
mov
add
fisubrs
mov
cwtl
out
mov
sub
outsl
dec
mov
inc
mov
shrl
aad
mov
mulb
pop
push
push
push
testl
mov
ret
sbb
decl
sub
test
fisttpll
adc
mov
xchg
push
out
in
dec
rcll
and
outsl
das
mov
sub
cmpsb
ret
xchg
xor
out
in
cmp
xor
dec
pop
int3
push
push
daa
filds
dec
xchg
jmp
aas
jl
cltd
daa
popa
xchg
xor
leave
out
sub
adc
aas
gs
pop
cmp
xchg
popa
test
imul
subl
bound
push
or
mov
mov
xor
fildll
push
dec
je
ds
or
rcll
dec
dec
mov
sbb
aaa
xchg
cmpsl
mov
addr16
and
jno
pop
inc
mov
or
cmpsb
insb
cs
mov
imull
cmp
and
adc
jp
rcll
jbe
push
pop
outsb
cmp
push
cld
lcall
ja
mov
data16
mov
in
and
adc
adc
xor
sub
adc
out
xor
dec
push
xchg
out
test
jno
stos
fisttpll
pop
aaa
mov
outsb
jg
shll
repnz
or
stos
or
cltd
jg
cmp
mov
inc
wrmsr
push
fwait
add
mov
roll
jbe
test
mov
movsl
daa
jmp
addr16
rcrb
imul
sbb
cmp
push
pop
jne
loop
xor
dec
sti
cmc
aas
mov
daa
mov
icebp
movsl
ret
cmp
dec
push
into
ljmp
xchg
sti
jecxz
repnz
pusha
xorl
out
lock
out
sub
fwait
pop
repnz
pop
push
xchg
stos
insb
adc
sub
dec
mov
sbb
dec
mov
mov
test
cmpsl
adc
pop
xlat
push
or
lods
scas
sbb
xor
dec
sub
ret
iret
dec
in
subb
sub
and
inc
aam
sbb
nop
push
sbb
js
jns
lods
lock
aam
cmp
jb
shrl
enter
mov
xchg
in
inc
mov
sub
pop
push
cs
lds
jmp
pcmpgtb
jne
pop
jge
xchg
dec
repz
test
popf
adc
inc
sti
mov
lahf
jo
and
or
pop
jne
mov
add
inc
mov
cli
xchg
orl
xchg
sbb
std
cmpsb
pop
ljmp
pop
cmp
pop
mov
in
sbb
xchg
out
dec
mov
cld
and
xchg
aaa
cmpsb
js
mov
add
mov
lcall
ret
loope
add
cli
jb
repnz
mov
add
sub
push
scas
out
add
shl
shlb
stc
jle
adc
xchg
es
mov
sbb
jl
ja
or
xor
mov
mov
jp
inc
xor
inc
fcompl
and
jo
jecxz
jle
dec
sub
fs
jbe
outsl
ds
hlt
sub
into
in
mov
inc
xchg
ret
std
scas
mov
es
xor
jle
enterw
xor
push
into
test
pop
out
jne
js
enter
xor
pop
xchg
or
fcoml
adc
xchg
cmp
inc
lret
subl
mov
push
or
cli
movsl
dec
sub
mov
add
xor
inc
pop
aam
or
in
or
inc
cli
adc
out
rcll
rorl
insb
xchg
lret
cmp
aas
imul
and
insb
outsb
jp
mov
aaa
cmp
adcb
jecxz
jbe
cmpsb
xor
mov
add
sub
imul
cld
inc
ja
popf
addr16
push
ljmp
into
xor
push
pusha
cld
or
add
or
mov
and
popa
inc
xor
push
and
and
lods
cmp
or
xchg
lods
leave
or
stos
lret
inc
or
push
mov
inc
mov
inc
stos
daa
fstpl
sub
inc
sub
push
popf
xchg
dec
ljmp
inc
or
add
mov
sub
mov
ja,pn
mulb
mov
aad
jns
int
mov
outsl
popf
or
xchg
push
loope
or
mov
clc
int3
pop
scas
sbb
sbb
push
shl
out
mov
outsl
out
stos
pop
sub
push
out
loope
sahf
or
jmp
ss
inc
repnz
xchg
inc
test
lcall
cmpsb
js
dec
mov
add
or
call
ljmp
stos
xchg
mov
mov
add
fsubrs
test
loope
mov
and
mov
lods
fldt
mov
out
mov
mov
jnp
divl
scas
int3
lds
lea
aam
cmpsl
mov
out
bound
ss
fstl
or
sub
daa
dec
loop
insb
cwtl
adc
mov
sub
sub
xor
imul
push
jmp
sbb
loope
mov
orb
push
add
jge
js
fnstsw
inc
stc
xchg
and
notb
subb
adc
sbb
dec
adc
and
dec
fmull
test
mov
and
mov
aad
push
pop
jnp
pop
leave
or
or
xor
push
fmul
adc
adc
xor
mov
test
sub
mov
jmp
mov
adc
js
pop
cs
push
sub
scas
movl
push
daa
aad
push
out
cmpsb
je
ss
pop
pop
sub
outsl
out
and
addr16
int3
xor
popa
adc
in
cld
in
sub
fisttpll
pop
ffree
dec
mov
push
pop
lods
sti
cwtl
fimuls
add
and
push
and
jmp
lods
inc
cmp
test
adc
sahf
add
pop
mov
mov
pushf
dec
pusha
stos
movsb
repz
cmp
mov
stc
dec
insl
test
nop
adc
repnz
xor
or
movsb
inc
xor
jns
sub
out
jne
scas
test
xchg
and
dec
or
mov
loope
cmp
test
jmp
int
mov
fnstsw
stc
pushf
aaa
jge
rcrb
or
sarl
dec
sub
mov
lods
sbb
in
xlat
or
xchg
sbb
push
shll
pop
insl
stos
daa
push
cs
sbb
les
out
cwtl
ljmp
inc
xchg
xchg
imul
je
lods
inc
mov
gs
mov
fisubrl
loopne
push
inc
push
ret
xchg
dec
rclb
xchg
sub
lret
jo
cmp
daa
outsb
int3
ds
mov
mov
rolb
xchg
mov
inc
inc
dec
dec
cmp
lods
fistpl
xchg
xchg
push
dec
pop
daa
push
inc
push
fwait
mov
push
in
jecxz
xchg
lds
arpl
ds
lods
test
add
jle
addr16
and
sub
jo
movsl
sarl
sbb
mov
daa
or
popa
enter
inc
sti
dec
mov
mov
pop
cmp
push
dec
pop
or
and
int
xor
lock
mov
adc
scas
jno
daa
pop
es
xor
js
adc
xchg
and
xor
inc
push
push
dec
test
fdiv
cmpb
in
lods
xor
sub
out
xor
mov
repnz
mov
fs
insl
mov
adc
mov
out
dec
sub
jbe
or
imul
loopne
jns
push
xchg
dec
je
and
pop
dec
xchg
cmp
outsb
mov
xchg
out
cmp
adc
sti
sbb
or
xor
loopne
cmp
pushf
inc
xchg
es
or
rorl
dec
sub
scas
xchg
das
idivl
push
cmp
rorl
dec
pop
data16
inc
xchg
pop
scas
jno
leave
cmp
sub
outsb
push
dec
jmp
or
out
push
sub
cwtl
iret
xchg
or
sub
dec
into
das
and
pop
cmp
xchg
dec
movsb
cwtl
pop
or
lahf
pop
out
dec
lods
rcll
cmp
adc
scas
fcomps
sub
adc
xchg
fdivs
push
adc
inc
int
mov
adc
lods
push
cli
xor
inc
aas
mov
pop
jo
cmpsl
rcrl
cmp
cld
push
ret
lret
std
push
dec
push
add
sbb
push
sub
cmp
popa
in
cmc
xor
cs
out
shll
pop
aaa
or
movnti
jno
mov
addb
fcompl
out
cmpsb
xor
clc
in
fcoml
add
enter
or
mov
jl
dec
jnp
cmp
inc
push
and
mul
sbb
xor
repz
nop
or
push
push
push
lcall
lods
cmpsb
add
cli
test
add
add
pop
xchg
inc
lahf
dec
lea
lcall
jbe
dec
pop
mov
shll
int3
push
jbe
or
mov
push
cs
cmp
lods
mov
sbb
jb
les
stos
dec
subb
inc
mov
mov
pusha
mov
dec
or
sub
and
or
rcrl
rcrl
subb
icebp
push
xchg
call
sub
inc
cmp
stc
push
xchg
sbb
and
inc
out
xor
insb
divb
popf
pushf
call
in
seto
add
mov
mov
xchg
loop
scas
mov
cmp
cli
or
ss
xor
xchg
jbe
addr16
dec
addr16
inc
call
popa
lea
adc
push
jecxz
mov
lods
jae
mov
sbb
mov
dec
mov
sahf
and
push
fistpll
cs
push
push
dec
jl
stos
fwait
jmp
adc
lahf
add
popa
out
sub
mov
or
mov
xchg
ja
xchg
lcall
sbb
popf
adc
adc
push
ja
fdivrl
lret
jns
cmpb
cmc
cmpsl
out
pop
xor
dec
enter
xchg
ds
in
mov
lahf
cld
inc
xor
in
in
xor
pop
xor
ds
aad
cmpsl
xchg
mov
mov
mov
xor
dec
inc
mulb
mov
add
jmp
cmp
mov
sub
ret
imul
dec
out
add
cmp
insb
ds
subl
jno
xor
push
popa
sub
in
xorb
inc
shll
es
lock
pusha
les
ds
sbb
cld
xor
movsb
jg
in
lods
dec
pop
jne
mov
sahf
and
xchg
and
dec
cs
adc
add
outsl
fs
mov
in
lcall
inc
daa
popa
inc
cmp
push
in
cmp
bound
adc
nop
add
sbb
loopne
mov
jmp
sahf
mov
test
sub
aas
sbb
add
sbb
xchg
xor
mov
jne
sub
in
sbb
dec
add
sbb
lret
fs
cmp
int3
xchg
jae
xor
pusha
test
imul
or
ds
pop
in
dec
dec
jo
sbb
imul
loope
pop
ret
and
je
push
lret
cwtl
bound
cmp
lods
outsl
clc
jns
xlat
add
test
dec
sbb
push
pop
mov
push
stc
adc
and
cltd
ret
outsb
mov
out
dec
pusha
or
lea
xlat
jns
insl
in
adc
jp
rcrb
add
pop
mov
mov
into
sub
lods
bswap
push
cltd
add
sub
dec
sub
xchg
mov
out
test
js
adc
or
int
adc
nop
mov
push
ja
push
pop
sbbl
cs
jg
out
clc
pop
xor
jne,pn
js
js
inc
push
test
jns
pop
fs
sub
cmp
push
out
jge
test
out
fildll
loop
dec
dec
sbb
mov
cmp
mov
lock
imul
clc
test
mov
add
jnp
lret
xor
sbb
jge
pop
mov
loopne
das
cmpsl
xor
inc
insb
mov
jp
mov
aam
push
enter
xchg
jae
pusha
sahf
leave
arpl
notl
xchg
add
cmpsl
push
push
sub
and
jge
call
in
xlat
or
fldcw
dec
leave
sub
pop
xchg
sub
lret
push
repz
mov
inc
cltd
jp
bound
clc
mov
dec
dec
push
mov
in
in
add
mov
xchg
mov
insb
sti
add
pop
movsb
bound
gs
leave
and
cli
jl
inc
lcall
subl
pop
add
imul
imul
fwait
in
and
jmp
inc
jecxz
inc
icebp
inc
stos
xor
imul
xorb
xchg
insl
push
leave
sbb
xlat
lret
enter
or
and
push
iret
ljmp
mov
inc
loopne
xchg
xchg
outsb
fsts
enter
cwtl
dec
test
and
dec
fisttps
cwtl
mov
xchg
pop
into
icebp
add
gs
xor
xor
imul
xor
lods
or
or
jg
insl
iret
fsts
scas
mov
pop
imul
daa
inc
sbb
sbb
sub
gs
cmc
sub
pop
icebp
sub
mov
rol
mov
aaa
lahf
scas
pop
popa
imul
aaa
jg
push
enter
xlat
jl
and
push
in
lock
popf
add
sub
test
cmpb
mov
mov
imul
sbb
jge
stc
in
mov
das
dec
pop
lods
push
xchg
or
cwtl
xor
ljmp
into
mov
jmp
jp
adc
jno
ljmp
repz
rorl
out
les
mov
ljmp
loope
rcl
sbb
or
cmp
test
rcr
or
cmpsb
pop
mov
outsl
into
pop
jno
or
rep
cwtl
mov
sub
dec
xchg
pop
nop
dec
dec
inc
test
iret
xchg
jnp
subl
sub
xchg
imul
popa
bound
leave
or
adc
test
jb
dec
movsl
mov
adc
pop
inc
scas
mov
je
lcall
cmpsl
push
add
pusha
fmull
or
test
sti
push
lret
xchg
rcll
cmc
and
adc
and
test
push
jno
xor
ret
pop
mov
cmpl
dec
imul
jge
sbb
movsb
imul
ret
sahf
inc
jmp
aad
cli
add
fidivrs
lahf
cmpsl
lea
cmpb
stos
push
cmp
xor
mov
pop
adc
push
popa
in
sub
push
xchg
mov
out
mov
or
xor
test
repnz
scas
dec
push
mov
decl
nop
mov
aas
push
loope
test
mov
cli
dec
or
icebp
scas
stos
pop
cli
lock
lret
imul
add
jne
rolb
lcall
lret
xchg
jmp
adc
cltd
push
and
mov
push
adc
std
cmp
sbb
xlat
lds
mov
dec
in
mov
movsb
inc
fwait
jp
rolb
int
or
lea
mov
inc
inc
sub
sbb
shl
pop
mov
mov
pop
mov
loopne
cmp
xor
ljmp
jmp
lock
fidivs
mov
push
or
jmp
push
pop
cmp
mov
or
sti
out
stos
xchg
xchg
repnz
mov
daa
andl
pop
fldt
sti
adc
sbb
ror
and
loopne
adc
push
icebp
sub
nop
pushf
and
sub
adc
push
jmp
push
pop
pop
mov
mov
mov
rorb
out
insl
sub
or
sub
mov
cmp
dec
adc
stc
pop
or
jmp
sub
jb
lret
and
inc
jo
or
dec
dec
xchg
fs
sub
cmp
mov
clc
outsb
cmpsl
add
inc
int
sbb
or
ficoml
cmc
adc
push
sub
push
daa
das
xchg
insb
or
aad
mov
test
mov
jae
iret
in
jnp
mov
es
lea
jp
sub
mov
iret
add
scas
mov
push
cltd
out
sub
or
test
push
dec
xchg
stos
testl
mov
iret
cmpsb
sub
fstps
outsl
sbb
cmp
je
dec
fstpt
mov
std
jno,pn
mov
pop
mov
xor
lahf
dec
iret
and
pop
mov
idiv
cmp
les
jb
outsb
popa
add
aaa
bound
adc
and
push
loopne
or
xchg
sub
loopne
push
popf
pop
cli
cmpsl
pop
dec
mov
scas
dec
and
mov
xchg
jmp
lret
or
inc
stos
inc
movsl
call
ret
popf
add
pop
aad
mov
test
sub
mov
adc
mov
out
lcall
aaa
mov
xchg
or
imul
call
inc
sbb
cwtl
insl
xor
in
xor
in
lods
push
xor
nop
pop
insl
mov
jbe
cmpsb
mov
dec
fisubrl
mov
enter
cmp
sahf
test
out
loopne
cld
pop
cmp
dec
add
pop
dec
or
sub
in
fsubp
inc
int
stos
cmpsl
outsl
push
daa
dec
test
pop
mov
jnp
push
bound
imul
sarb
adc
daa
repz
lcall
adc
leave
cli
scas
inc
or
jg
sahf
or
pushf
adc
dec
jle
cltd
aad
int3
mov
xbegin
jl
test
mov
addr16
push
in
inc
or
xor
jbe
movaps
mov
in
push
test
and
cs
lcall
adc
lcall
test
cmpsb
daa
lret
mov
and
es
movb
lock
cmpsb
or
xchg
outsb
js
mov
movb
popf
sbb
push
pushf
mov
adc
out
lret
cmpsb
arpl
dec
ds
ds
daa
ds
out
iret
jl
outsl
enter
push
jle
aam
mov
xchg
adc
cld
ljmp
cmp
das
or
adc
gs
push
in
pop
xor
pop
sti
fsubs
cwtl
cmc
sahf
sbb
inc
inc
xchg
xlat
sub
mov
mov
dec
or
fcoms
data16
lock
fmulp
push
cmp
insb
repnz
lret
test
jmp
cli
enter
pop
mov
mov
adc
leave
stos
adc
xor
lret
in
les
js
test
pusha
fisubrs
push
add
dec
push
sbb
out
sub
lret
cmp
arpl
jp
jbe
jp
push
call
xchg
insb
std
lret
or
jns
or
add
adc
push
ja
sbb
sub
inc
cmpl
arpl
xlat
add
jl
out
jns
jl
stc
xchg
test
fists
and
mov
and
ja,pt
pop
sub
add
xchg
inc
cmpl
ss
out
fmuls
push
sbb
pop
scas
and
jp
cmp
out
pusha
out
dec
and
out
push
sub
adc
cmp
adc
mov
scas
dec
pop
mov
negl
pop
scas
test
loop
push
repnz
xchg
fs
mov
xor
and
movsl
push
push
sahf
cmpsb
iret
sub
dec
mov
out
jp
sbb
insl
or
add
scas
pop
and
cli
out
imul
jae
inc
lods
add
roll
ss
push
pop
mov
inc
jmp
sbb
ficoms
popa
int3
in
aas
loope
pop
loop
adc
xor
scas
sti
xsavec
addr16
stos
and
jb
pop
mov
sbb
adc
or
movb
mov
insb
push
daa
mov
mov
or
lahf
xor
fimuls
dec
sub
cmp
cs
data16
test
xchg
jno
fiaddl
xor
cmp
lock
mov
push
jmp
out
addl
dec
mov
sbb
lock
loopew
add
inc
sub
scas
adc
ss
inc
dec
xchg
pop
push
lea
dec
cli
push
scas
das
pop
adc
call
xor
sub
and
push
mov
loope
push
jno
inc
fcmove
mov
movsl
mov
xor
cltd
dec
repnz
pop
sub
dec
cli
sub
leave
cmpsb
cmp
mov
inc
scas
push
mov
xor
inc
or
add
inc
push
shlb
push
mov
xchg
cmp
cwtl
gs
fiaddl
cmpsl
cli
loopne
add
ffree
mov
ftst
leave
stc
xchg
in
xchg
cmp
sub
mov
jecxz
push
dec
nop
or
jo
pop
mov
ja
rcll
mov
jge
mov
push
mov
sub
out
xchg
jp
sub
inc
scas
inc
mov
adc
cmp
sub
out
sub
mov
cmp
cli
add
fistpll
sbb
mov
pop
ret
sbb
and
adc
jmp
cli
rcl
sbb
pop
scas
xchg
lea
push
jns
fbstp
lods
ss
jnp
inc
cmp
mov
scas
sbb
cld
popf
ds
inc
scas
push
adcl
add
lods
or
fdivrp
inc
mov
and
inc
daa
or
fsubrl
daa
icebp
movsl
adc
jp
jo
mov
mov
ficoms
repnz
xchg
pop
popf
lret
cmp
sub
mov
dec
sbb
and
push
popf
movl
xchg
adc
int
push
jo
inc
movsb
pusha
jb
mov
xchg
sub
sbb
sub
mov
pushl
sbb
fiaddl
xchg
xor
sub
inc
adc
rolb
mov
xlat
push
and
xor
push
jle
in
pop
xor
inc
mov
cmp
popf
mov
ret
pusha
filds
sub
int3
or
jo
addl
mov
loopne
shl
sbb
add
xchg
stos
mov
or
sti
adc
movsl
push
lahf
cmc
stc
ljmp
xchg
add
mov
inc
test
mov
cmc
cmpsl
cmp
lcall
repz
divb
outsb
lahf
sbb
cmp
adc
sub
shrb
int
xchg
test
imul
nop
out
fs
int
mov
inc
cmc
or
jo
mov
xor
dec
cmpsl
xor
mov
add
testw
jo
into
or
add
dec
iret
mov
and
outsb
loop
movl
test
shll
dec
cmc
or
clc
sub
inc
int
mov
push
xchg
mov
iret
mov
or
jne
sarl
xchg
inc
dec
xor
ret
into
adc
pop
jg
lods
adc
outsb
push
sub
jo
sbb
outsb
push
stos
sub
test
lcall
dec
dec
push
or
add
mov
popa
cmp
call
dec
push
sub
and
cmc
insb
out
mov
nop
insb
mov
pop
and
mov
sbb
lea
xchg
fnsave
sub
mov
cltd
call
ss
inc
xlat
pand
out
mov
xchg
sub
sub
sub
aad
xor
lcall
sub
and
popf
push
and
cmp
loope
dec
insb
xchg
or
pop
sbb
or
ds
iret
fdivrs
sbb
or
add
in
inc
or
test
xchg
cmp
lea
mov
fwait
or
or
int
dec
push
ret
push
mov
sbb
xchg
sub
hlt
mov
out
clc
into
cmp
push
adc
sub
inc
aaa
cmp
dec
add
dec
jl
push
xchg
cmp
lahf
push
stos
jg
shll
test
stos
mov
int3
sub
push
or
adc
orb
shll
rolb
mov
inc
loope
and
xchg
sbb
ss
xor
fdivr
mov
adc
push
dec
xchg
and
enter
adc
push
jb
rep
cs
cltd
mov
mov
xchg
in
ljmp
pop
jae
mov
push
lock
dec
fnsave
adc
into
sub
out
sbb
xchg
in
push
jp
ljmp
imul
test
mov
mov
imul
mov
popa
cmpsb
jno
jmp
add
gs
cltd
das
or
push
sub
mov
inc
outsb
imul
mov
inc
mov
lods
adc
shll
push
lock
mov
dec
mov
sub
jbe
push
in
mov
addr16
mov
dec
mov
adcb
adc
xor
or
out
sbb
and
mov
out
push
mov
xor
dec
fsubrs
sbb
leave
inc
dec
stos
movsb
dec
xchg
cld
mov
add
outsb
mov
jp
xorl
push
shlb
xor
fs
xchg
out
aad
sbb
or
mov
push
dec
push
or
in
pop
jmp
push
add
leave
sub
xor
cmp
divl
or
iret
push
in
bound
pop
sahf
out
lcall
aas
sub
ss
das
fcoms
push
movl
or
andl
fiaddl
int
sub
fisubs
fisttps
mov
inc
icebp
ret
aad
xchg
push
ljmp
or
and
fs
cmp
push
mov
decb
popf
out
cmp
and
sub
xor
std
into
bnd
outsb
out
ret
inc
or
cmpsb
pop
or
mov
xchg
in
hlt
adc
add
daa
jnp
and
mov
ja
sbb
jb
mov
inc
inc
sub
cltd
adc
dec
push
sub
adc
cwtl
ret
mov
imul
push
test
xchg
pop
scas
cmpl
inc
lods
lods
sbb
stc
mov
test
push
xor
sbb
push
mov
loopne
mov
addr16
inc
pop
jle
out
lcall
xlat
cmp
in
repnz
and
add
lods
mov
addr16
mov
mov
insl
cmc
test
inc
jo
xchg
dec
inc
je
icebp
adc
pop
inc
test
pop
sub
push
jmp
lahf
loop
cmp
adc
pop
cs
and
in
call
mov
mov
xchg
mov
cmp
sbb
testb
mov
push
ja
sub
pop
outsl
cmp
hlt
sub
cmp
push
jnp
mov
or
adc
in
and
xor
into
bound
out
test
rclb
stos
mov
nop
out
faddl
mov
and
icebp
ficompl
stc
xor
mov
xchg
dec
idiv
push
jo
or
pop
pop
mov
leave
fmull
faddp
repz
push
and
idivl
jmp
dec
scas
pop
cmp
sub
adc
jno
sub
sub
or
add
inc
and
mov
icebp
icebp
outsl
gs
inc
es
out
sbb
jnp
push
and
loop
mov
inc
sub
lds
cltd
inc
mov
xchg
lret
add
cmpsb
push
push
mulb
movsb
dec
xchg
cmp
ss
sub
roll
mov
xchg
xor
loopne
dec
sbb
push
cmpsb
xchg
stos
add
sbb
aad
and
mov
dec
add
scas
ja
pop
fists
mov
loopne
movsl
daa
aaa
daa
gs
add
scas
mov
add
and
nop
loopne
repz
int3
push
stc
or
clts
mov
fisubrs
xor
jae
faddl
or
pop
repnz
jle
repz
mov
cmovae
arpl
jo
out
in
out
cs
xchg
xorb
sbb
jne
dec
xor
sub
and
imul
inc
add
pop
sub
adc
sub
pop
imul
mov
sti
es
xchg
or
es
cld
outsb
pop
clc
cs
ljmp
pop
fisubs
jbe
sbb
mov
xchg
pcmpgtd
fnstsw
movb
mov
dec
in
cmp
jae
pop
or
add
negl
and
lods
xlat
fldt
inc
push
sbb
inc
cmp
sub
pop
std
dec
idivl
imul
add
mov
sub
or
or
lret
adc
pop
push
jmp
mov
ss
sub
cmpsb
xor
inc
xchg
stc
aad
in
ud2
inc
ret
ret
and
mov
out
outsb
icebp
mov
sbb
outsl
nop
pop
and
xchg
call
outsb
stos
push
fsts
adc
xor
mov
nop
jns
out
cltd
ret
fstpl
cmp
jae
lahf
ret
inc
push
mov
adc
pop
rcrl
fsub
push
mov
inc
add
scas
add
or
and
scas
or
sbb
ret
out
addr16
cmp
jmp
jne
dec
or
pop
sbbl
mov
mov
or
jmp
sbb
mov
cltd
dec
jne
xor
and
sti
sub
sub
int3
movsb
inc
or
jbe
xchg
iret
xor
shrb
jnp
inc
push
cmc
dec
mov
inc
or
iret
cli
in
dec
jmp
dec
adc
jg
repnz
push
inc
sbb
dec
xchg
in
and
outsl
add
icebp
push
sub
aaa
lcall
jbe
push
xchg
fwait
pop
popa
std
or
popf
adc
shrl
mov
add
lock
sub
jl
jmp
mov
out
sbb
add
stos
xlat
cmpsl
filds
cmp
mov
xchg
es
stc
mov
ficoms
pusha
sbb
pop
mov
daa
sbb
aaa
mov
mov
insl
fdivs
out
push
sub
cltd
pop
dec
pop
repz
adc
cwtl
dec
pop
idivl
cwtl
fistl
pop
dec
pop
add
stos
xchg
outsb
adc
mov
cvtps2pd
cld
stos
enter
mov
jge
sti
sbb
mov
mov
inc
push
sub
sub
or
dec
or
add
pop
cli
xchg
sbb
and
jbe
push
add
dec
xchg
stos
push
xor
xchg
mov
xlat
lock
adc
mov
inc
lea
push
ljmp
imul
mov
xlat
stc
jle
xor
insl
sbb
jmp
les
xor
aas
cmpsb
mov
cmp
hlt
fwait
mov
xchg
push
ljmp
mov
repz
lret
push
sub
imulb
rorl
mov
test
movsl
call
jp,pn
popa
cmpsb
es
test
cmp
xchg
rcr
adc
jl
dec
sbb
xor
cmc
mov
mov
sub
xor
js
pop
addr16
sbb
pop
jns
aas
clc
call
push
es
out
sbb
es
test
out
and
test
out
insl
clc
incb
cmp
or
inc
enter
mov
enter
mov
xchg
xchg
jmp
aaa
andb
or
lea
repnz
outsb
pop
outsb
push
fstpt
out
inc
add
sub
xchg
push
lcall
or
xchg
and
xchg
cmova
mov
cmp
pop
int
fcoml
ljmp
in
int
addr16
pop
add
xor
jmp
jg
xor
or
packssdw
in
dec
mov
sub
push
pop
popa
xchg
xchg
mulb
fsubs
rorl
aaa
fcmove
pusha
popf
jle
or
adc
mov
stos
lret
in
data16
cmp
sbb
mov
xor
jns
push
dec
daa
xchg
lcall
fdivrp
loop
push
mov
movsl
aas
push
push
or
jmp
subb
dec
faddl
cmpsl
repz
shr
out
pusha
std
xchg
and
ss
sbb
lahf
mov
fcoms
mov
sbb
ds
cwtl
push
jbe
aas
outsb
rorb
pushf
sbb
mov
ds
cmp
cwtl
cmp
inc
jmp
push
sbb
jb
xchg
popf
aas
lret
daa
mov
push
or
sub
mov
pop
and
or
outsl
out
out
or
out
push
stos
leave
xchg
scas
mov
xor
and
mov
and
shll
xor
inc
sbb
sbb
cmp
test
nop
sbbl
ss
adc
into
mov
xchg
loope,pn
push
add
dec
stc
mov
hlt
orb
imul
testb
or
cmp
adcb
jns
dec
xor
cmp
xor
or
push
mov
mov
aad
int3
jns
add
scas
mov
aas
test
lea
data16
cltd
dec
outsl
out
dec
lea
jmp
cmpb
cmp
lock
stos
lock
imul
mov
sub
fnstenv
or
pop
scas
push
sbb
mov
cli
dec
mov
adc
push
adc
inc
pop
and
movsb
sub
bound
jae
sbb
js
das
dec
fwait
adc
inc
jnp
aam
in
add
in
mov
mov
and
jo
and
xor
xor
add
aas
and
xchg
mov
les
sbb
xchg
scas
arpl
popa
js
test
rorb
mov
xor
inc
testb
imul
lods
sahf
or
pop
test
leave
jbe
mov
xor
jbe
loopne
mov
cmp
xor
subb
inc
jge
inc
add
or
das
sahf
pop
repz
and
enter
lods
add
fwait
iret
sbb
inc
cmp
cmpsl
adc
mov
pop
aas
fsubl
movsb
cmpsl
jmp
sbb
dec
sbb
mov
lahf
imul
sub
and
lds
mov
sub
or
xor
sub
cli
mov
shr
dec
out
aas
cmp
jno
insb
or
stos
pop
xor
out
push
aaa
nop
pop
ds
sub
cmpsb
adc
and
pop
std
and
scas
aas
jne
insb
or
add
mov
jb
xchg
adc
aad
add
fisttpl
push
cmp
ret
rorl
addl
xchg
adc
jns
jae
pop
cmp
mov
test
shrl
adc
sar
sub
xchg
inc
iret
sub
ret
cltd
sbb
fwait
mov
xchg
das
dec
ja
not
xchg
data16
xchg
xor
lret
iret
mov
push
jp
rcrl
fstpl
enter
out
cs
cmp
mov
cmp
sbb
or
leave
imul
mov
push
mov
cltd
cmp
rcrl
dec
fildl
push
xchg
imul
in
imul
icebp
stc
lds
jmp
divb
in
mov
push
or
pushf
data16
sub
push
pusha
add
outsb
icebp
pushf
mov
sub
shrb
int3
and
mov
leave
inc
fnstsw
mov
cmp
add
xor
push
je
cmp
je
cmpsl
rcr
mov
jp
push
movsl
outsb
fidivrs
jg
adc
or
mov
push
add
lds
mov
adc
ljmp
or
test
cmp
lcall
sbb
pop
push
dec
rep
out
jmp
arpl
add
ficoml
cvttps2pi
inc
add
dec
jl
fimuls
and
icebp
jne
push
xor
je
xchg
icebp
in
dec
popf
in
iret
out
dec
loop
push
pop
jle
add
sbb
xorb
test
pop
outsb
dec
stos
sbb
loopne
movsb
sub
ficomps
lds
push
adc
negb
jns
pop
popf
cs
les
lret
push
pop
xorl
int3
outsl
bound
lds
push
pop
mov
add
push
xor
cmpl
mov
fnstsw
mov
or
fistpl
cwtl
xor
mov
fsubrp
loope
stos
add
ljmp
ljmp
push
jne
xorl
push
insb
dec
cli
add
or
es
repnz
aam
clc
jge
dec
cli
xchg
xchg
sub
push
pushf
fsub
xlat
es
jb
xchg
add
xchg
jo
push
push
out
adc
mov
push
stc
mov
clc
mov
push
sub
clc
data16
xor
clc
lahf
xchg
dec
adc
and
mov
dec
fwait
pop
sbb
xchg
xorb
add
jo
gs
sbb
in
lret
cmc
inc
adc
das
dec
adc
fs
mov
mov
sub
jb
xchg
mov
add
in
mov
lcall
stos
rorb
mov
hlt
cwtl
xchg
std
add
arpl
xchg
or
dec
and
cld
call
inc
and
and
inc
inc
push
mov
pop
pop
sbb
and
mov
loop
orl
push
imul
das
arpl
std
mov
or
xor
leave
cmc
ret
lods
or
jns
lret
call
in
add
pause
stc
mov
aaa
sub
popa
mov
xchg
lods
movsl
mov
xchg
lret
out
xor
push
dec
xor
aas
aam
loop
inc
sbb
jb
stos
xor
sbb
sub
fdivrp
lcall
in
lret
bound
sahf
fdivs
pop
mov
xchg
dec
sahf
sbb
leave
lods
adc
adc
jb
add
hlt
loopne
arpl
rcrl
imul
das
ljmp
lds
xchg
dec
mov
xchg
mov
pop
jg
mov
addr16
out
cmpb
ret
mov
xchg
ror
sub
pop
stos
push
leave
adc
inc
xchg
xlat
push
sub
dec
pop
inc
adc
mov
pop
dec
adc
inc
int3
iret
xchg
loop
cmp
mov
add
lea
add
imul
fld
call
into
sub
adc
inc
popf
inc
fisubrl
push
std
call
jp
lock
sbb
jge
leave
mov
addb
rcll
divl
aad
jecxz
test
sbbl
mov
sbbl
lds
mov
pusha
ret
scas
add
popa
int
lret
pop
mov
pusha
xorl
pusha
das
jno
fsubrl
or
sub
arpl
gs
call
push
movsl
and
aam
sub
dec
mov
xor
xchg
ljmp
inc
shrb
fisttpl
aaa
das
and
jp
scas
stos
push
insl
or
cli
jns
pop
dec
fcoml
aaa
adc
push
dec
testl
xor
and
cmp
xchg
add
cmp
aaa
or
xlat
xchg
test
add
inc
and
dec
addb
dec
outsl
icebp
jle
or
ss
jmp
dec
dec
test
lock
xchg
js
fists
insl
pop
mov
pusha
pop
out
in
inc
and
dec
fidivl
jae
sahf
int3
or
arpl
aas
mov
cmp
pop
sar
rolb
cmp
lret
adc
push
mov
dec
out
sub
out
data16
and
mov
mull
dec
mov
add
sub
shlb
aad
cs
mov
mov
jp
ds
xor
or
jg
pop
enter
mov
dec
loopne
pop
imul
scas
das
pop
or
icebp
and
test
jle
mov
in
dec
pop
popa
push
push
pop
dec
pop
decl
and
jge
or
lods
push
addr16
in
mov
insl
cmp
dec
inc
test
xchg
pushl
jne
cmp
pop
dec
mov
jns
hlt
cld
dec
in
movsl
inc
leave
shll
imul
repnz
in
sbb
pusha
add
mov
in
in
push
cmp
std
shr
faddl
jl
sahf
in
shlb
es
jae
lret
stos
shll
add
mov
stos
pop
jbe
push
iret
sub
scas
cs
mov
int3
xor
enter
fcoml
xchg
cli
loopne
lahf
rorb
out
cld
add
ds
sbb
dec
roll
cmpsb
push
jns
jne
cmp
mov
in
jns
mov
cmp
mov
xchg
add
test
jp
xchg
iret
push
cld
add
or
loopne
jbe
mov
xorl
xchg
mov
icebp
xor
jno
and
stos
push
jo
pop
aaa
insl
push
cmp
fimuls
dec
push
and
popf
xchg
and
ss
xchg
enter
sbb
jl
xchg
sub
clc
movl
loope
adc
inc
add
pushl
scas
cli
ret
inc
jp
clc
icebp
or
rcrl
in
sbb
add
adc
pushf
fsubrl
sbb
mov
sub
dec
jnp
mov
daa
adc
lods
test
or
push
lods
outsl
cmp
push
jbe
and
fists
mov
hlt
push
mov
testb
dec
rclb
roll
pushf
insb
fwait
aam
xchg
scas
mov
stc
ds
mov
sahf
lret
dec
je
jns
mov
subps
xor
cmpsl
ds
push
mov
arpl
add
gs
lods
rsm
dec
cmp
stos
cwtl
repz
mov
sub
or
xor
aas
xor
mov
pop
sbb
mov
test
cmp
inc
cmp
cmp
sbb
aam
push
and
cltd
cmp
mov
cmp
xchg
pop
sub
fcoms
xchg
push
sub
scas
adc
cmp
cmp
jl
dec
pop
jle
sub
mov
pop
jle
xor
mov
pusha
popf
sub
dec
xchg
clc
out
dec
rorl
xchg
jne
cmpsb
ds
pop
lcall
or
jb
cmpsl
add
jb
cld
cmp
xchg
dec
xor
add
add
xchg
fdivrs
loope
sub
pop
in
into
push
or
loop
out
inc
push
addl
xchg
jle
sbb
ja
fwait
dec
sub
pop
mov
jbe
push
stos
insl
cltd
fisubrl
leave
sub
clc
into
adc
sbb
cmpl
mov
lds
push
outsl
out
aas
insl
jo
or
inc
jmp
popa
int3
arpl
mov
inc
xor
or
out
mov
inc
loopne
mov
and
scas
cmp
xchg
jge
fmul
jg
inc
mov
lahf
or
push
pop
faddl
stos
test
sahf
sbb
or
sahf
test
lcall
hlt
xchg
rclb
dec
mov
adc
mov
mov
cmp
dec
call
hlt
adc
push
push
xor
push
cli
in
jae
and
mov
gs
cmp
xchg
je
fwait
cmpsl
and
insl
jp
in
mov
sbb
fildll
scas
fists
xor
sbb
movb
cmp
mov
or
pop
jne
fdivl
inc
pop
jno
xchg
dec
xlat
dec
mov
pushf
inc
es
add
decb
shlb
dec
dec
xchg
pusha
sub
dec
mov
or
jo
pop
mov
mov
add
mov
xchg
sub
inc
cltd
in
enter
shr
mov
pop
inc
sub
mov
xor
loopne
aad
shl
pop
or
dec
popa
ja
jge
stos
sar
or
dec
cmpsl
in
rorb
sub
fstpt
push
cwtl
in
push
rclb
in
leave
xlat
es
out
push
pop
repz
cmc
dec
movsb
insl
or
xchg
jnp
mov
ljmp
jmp
cs
in
mov
xchg
aad
mov
pop
sbb
push
out
inc
imull
push
ds
mov
test
add
xor
xchg
xchg
fcmovb
xchg
or
scas
mov
and
add
out
sbb
jns
les
xor
push
cmpsb
jo
jmp
mov
inc
sti
mov
mov
insl
mov
adc
aam
popf
mov
xlat
stos
push
je
lods
bound
sub
jge
mov
sbb
cli
add
dec
or
jno
inc
ret
sbb
push
xchg
inc
pop
sbb
push
xorb
cmp
sti
xchg
test
out
aaa
cwtl
mov
into
cmp
lock
roll
push
fwait
loop
dec
push
jbe
enter
and
mov
xchg
sub
dec
or
repz
xchg
jle
pop
xchg
jno
jp
push
inc
scas
jo
xchg
int
mov
out
add
add
sbb
cmp
mov
push
mov
push
aaa
jns
or
and
mov
sti
andl
sbb
out
xchg
cs
pop
inc
or
add
sub
test
notb
ja
cs
loop
insb
outsb
fiaddl
adc
jmp
cmp
cmpsb
mov
rolb
inc
jl
imul
xchg
cmp
xchg
scas
fstps
xchg
sbbl
sbb
xor
int
add
inc
lods
push
and
xchg
ret
dec
ja
xor
ljmp
std
or
inc
repnz
in
sysexit
cld
pop
jo
fst
ret
inc
xchg
gs
cmp
cs
out
divb
pushf
test
hlt
dec
sub
sub
jmp
pushf
adc
or
pop
inc
imul
and
xlat
test
lods
jp
add
lods
out
push
jle
sbb
lcall
movsl
and
ss
je
lret
leave
pop
aaa
ljmp
lods
cmp
cmp
lea
sbb
cmp
add
push
and
std
jp
jle
mov
fcoms
daa
arpl
cli
int3
iret
push
mov
cmpsb
push
clc
cmp
dec
mov
dec
jg
loopne
sbb
xchg
mov
cmp
sahf
lret
jecxz
adc
push
inc
stc
pop
jge
mov
mov
jno
loope
cmc
into
int
mov
mov
jns
aad
into
mov
jb,pn
shr
sahf
adc
lcall
jb
adc
jbe
add
sbb
add
and
cs
jmp
addr16
insb
inc
ja
mov
dec
mov
in
lea
out
and
out
mov
and
mov
or
lods
inc
inc
cs
imul
fs
xorl
push
dec
inc
xor
jp
add
jge
cmpsl
sub
dec
and
dec
in
sbb
sbb
or
ret
cltd
mov
cld
xor
ret
sbb
js
jb
stc
fnstsw
adc
push
outsb
mov
pop
sbb
out
inc
or
mov
notl
test
js
pop
push
aad
bound
mov
sub
imul
and
push
sbb
adc
movsl
jle
dec
jge
dec
cs
or
vpsllw
pushf
dec
mov
mov
lret
or
or
shrb
jno
mov
cli
sbb
ret
ja
pop
dec
test
ret
push
rcll
sub
sub
xchg
add
imul
ljmp
cmc
jns
out
mov
test
aad
xlat
lea
lock
in
insb
push
xor
test
pop
mov
jmp
stos
mov
jo
pop
pop
xchg
pop
lea
adc
sub
or
sub
or
orb
dec
jl
add
or
or
cs
sbb
pop
stos
cmp
repz
dec
arpl
inc
sub
fcoml
mov
dec
cmpsb
ds
jl
and
mov
xchg
jb
int3
mov
out
cmp
xchg
xor
dec
xchg
cli
mov
mov
out
scas
std
or
stos
adc
nop
lret
sbb
mov
or
jecxz
mov
xchg
inc
in
jo
jo
lcall
imul
xchg
pop
pop
add
pop
pop
adc
imul
xor
cmpsb
xor
xchg
mov
enter
xchg
imul
push
cwtl
fisubrl
push
lods
add
xchg
mov
mov
xchg
cmp
or
mov
adc
adc
aam
xchg
cmp
cmp
stos
xchg
add
leave
add
ret
mov
arpl
sti
adc
lods
movsl
mull
imul
add
xor
mov
pop
inc
bound
lcall
lret
je
repnz
pop
pop
call
push
jbe
ret
mov
cmpsb
inc
sub
out
sahf
out
mov
sbb
int
ja
movsl
fstp
aaa
jnp
and
or
push
add
jp
jb
mov
lret
repz
cmp
push
rorl
xor
sbb
es
push
mov
sub
insb
lock
mov
inc
fimuls
jo
push
inc
or
and
xchg
jl
and
enter
mov
sub
test
fcompl
outsb
xchg
imul
push
outsl
xor
pop
mulb
shlb
mov
out
xor
or
xor
and
jle
add
outsl
xchg
lods
xchg
xor
rcl
popa
call
adc
push
cmp
popl
pushf
fmuls
sub
add
aaa
cmc
outsl
imul
ja
add
cmc
loope
jno
data16
dec
mov
push
mov
inc
mov
cmp
lahf
gs
fdiv
mov
mov
sub
nop
and
cli
xor
push
fdivr
clc
movsl
cmp
std
add
add
add
mov
and
bound
inc
movsb
adc
test
or
outsl
lea
mov
xlat
sub
ds
stos
test
or
xchg
mov
jnp
sbb
push
movb
ret
clc
adc
aaa
xchg
stc
or
or
dec
icebp
adc
mov
cmpsb
sahf
xchg
and
ds
div
rcrb
lock
ficoms
dec
cld
cs
adc
jl
sti
out
insl
inc
lods
xchg
loop
les
sbb
add
popf
in
jmp
xchg
sti
adc
xor
jmp
xchg
rorb
lods
ret
ljmp
sub
das
lods
dec
clc
loopne
jnp
cmp
and
bound
arpl
out
cmp
adc
add
mov
jle
repnz
loope
push
out
arpl
and
dec
sub
or
sbb
xlat
pusha
mov
in
or
xor
stos
inc
ljmp
xor
mov
fwait
mov
sbb
lods
inc
mov
cmpsb
push
cmp
mov
cmpsl
jmp
mov
xor
xchg
or
sbb
cwtl
fwait
cmp
lea
iret
mov
push
testb
ljmp
fdecstp
ss
lods
insb
pcmpeqb
xor
push
nop
cmp
xlat
xor
adc
in
popa
clc
adc
xchg
cli
or
cmpsb
and
sub
jecxz
jns
sbb
adc
add
sub
iret
dec
cmp
js
shl
and
inc
pop
sbb
mov
gs
lcall
sbb
mov
push
pop
mov
out
jmp
in
push
or
or
push
es
outsl
pop
not
xchg
jb
sbb
dec
popf
push
cmc
repnz
pop
or
adc
movsl
sbb
mov
ss
dec
and
push
mov
jl
mov
pop
mov
stc
insl
push
add
inc
xchg
sbb
jb
mov
pop
or
adc
ror
inc
xchg
push
or
sbb
cvtps2pd
pop
ss
or
adc
mov
inc
jne
xlat
test
daa
jo
into
push
jo
popf
hlt
imul
cld
gs
jl
iret
xor
jo
mov
ja
lock
xchg
inc
jnp
cmp
xor
dec
adc
xor
sti
push
scas
pop
lcall
cmp
andl
mov
scas
jp
inc
out
or
mov
sbb
jb
enter
and
lret
dec
jno
push
dec
sbb
dec
ljmp
test
jae
cmp
lods
cld
mov
sbb
cmp
dec
xchg
movsl
ret
mov
jp
gs
loope
pop
shrl
ljmp
sbb
mov
push
out
cmp
hlt
rorb
push
push
imulb
sbb
sbb
lret
sbb
and
cmpsb
pop
cmp
mov
fadds
jns
or
pop
sbb
dec
cmpsb
shlb
inc
out
push
rcl
bound
ds
fsubs
int3
insb
ljmp
out
adc
mov
js
in
add
xchg
push
setle
addr16
pop
sbb
outsb
out
outsb
mov
mov
aas
inc
daa
jecxz
push
mov
mov
ss
jge
imul
ljmp
sub
lahf
xchg
jb
out
in
adc
stc
es
and
mov
cmp
mov
test
sbbl
adc
push
loopne
iret
gs
and
mov
push
jg
loopne
sub
push
dec
ret
iret
dec
pop
inc
or
scas
sbb
shrd
test
ja
jo
es
and
fmull
pop
and
call
adc
call
mov
sbb
push
insb
sbb
arpl
pushf
push
int3
sub
mov
fcmovnbe
sub
fists
shll
into
push
push
mov
or
aam
shlb
add
xor
dec
insl
push
jae
mov
xchg
data16
fisubrs
push
jle
es
jae
popa
js
dec
pop
test
dec
ds
clc
addr16
test
in
rorb
jnp
pop
loop
jb
mov
adc
or
out
or
clc
addl
loopne
stc
or
stos
cwtl
and
or
mov
and
das
cmc
in
imul
jbe
jns
pushl
divl
mov
shr
adc
adc
inc
xor
or
inc
jo
into
outsb
dec
xchg
fsubrs
dec
iret
cmp
add
movsb
sbb
sub
ret
ss
mov
jns
dec
add
scas
fs
fwait
xchg
xchg
push
adc
fcom
int3
sarb
mov
shr
pop
and
dec
insb
pop
int3
xor
out
xor
enter
xchg
out
xchg
or
fidivl
subb
cs
jle
leave
or
test
mov
dec
pop
fimull
lock
jg,pt
mov
xchg
add
or
xorl
xlat
and
or
cltd
push
cmc
imul
and
jecxz
mov
dec
mov
or
xlat
sbb
cli
dec
fldt
push
icebp
pop
setae
pop
sbb
clc
mov
add
mov
enter
jg
icebp
andb
xchg
cmpsl
xchg
add
lcall
pushf
jno
lods
push
cwtl
adc
aad
xchg
cld
lods
xor
jnp
push
cmp
mov
sub
xor
lcallw
or
lret
pop
pop
lcall
enter
add
repnz
pop
aad
int
jmp
sbb
push
jecxz
xorl
leave
mov
adc
fiaddl
in
test
mov
dec
inc
adc
lret
or
leave
push
dec
das
rolb
cwtl
out
or
xchg
cmp
add
inc
sti
insb
pop
insl
adc
stc
xchg
decb
or
adc
imul
gs
lods
fimull
cmpsl
jge
sbb
jbe
lret
fs
insl
addr16
stos
nop
inc
lds
xor
aam
fdivr
and
in
xorb
inc
jnp
loopne
movsb
aam
jne
lock
push
addr16
cs
movsb
mov
sub
cmc
mov
jo
inc
in
dec
add
adc
outsb
mov
push
das
ficoms
push
xchg
js
xchg
and
test
lcall
popf
es
jmp
lcall
add
pop
mov
xchg
inc
movsl
pop
das
adc
mov
cs
ja
cmpsl
pop
mov
jns
mov
add
lret
or
rcrb
ret
dec
pop
mov
push
dec
push
mov
and
adc
pop
in
push
push
scas
lods
sub
ret
fimull
dec
xor
sbb
cs
sbb
cs
imul
fisttpl
pop
ret
xor
cmp
xor
cmp
insl
dec
inc
mov
xchg
scas
imul
in
mov
aaa
cmpsb
xor
cmp
scas
add
or
cmp
lcall
pop
std
dec
jb
pop
jecxz
xor
sarb
or
pop
cmp
mov
mov
push
test
cmpsl
sarb
jle
cwtl
ret
pop
inc
push
jae
lds
mov
and
cld
pop
les
or
adc
sbb
mov
mov
xchg
das
jo
loop
in
add
scas
and
inc
mov
aam
jnp
js
es
ret
cmpsl
subb
test
ljmp
sbb
mov
ljmp
sti
lcall
jg
sub
cmp
lock
or
adc
mov
aas
sub
jecxz
or
adc
jo
mov
mov
xchg
sbb
jns
dec
fwait
pop
shrl
sti
lea
int
jbe
pop
jge
rcll
subb
repz
movsl
jl
cs
and
out
jne
mov
adc
mov
dec
in
jge
aas
iret
lret
rolb
jb
cli
push
sub
cld
out
pop
mov
mov
push
mov
and
in
push
push
repnz
mov
jne
sub
into
jmp
movaps
xchg
push
jae
pop
xchg
loope
xchg
mov
lods
lret
jle
xchg
scas
and
mov
pop
daa
adc
popf
jns
xchg
test
insb
stos
push
mov
icebp
adc
ret
sarl
jnp
fcompl
mov
mov
rol
mov
cmp
loopne
clc
push
inc
in
loopne
xchg
fstps
cmpsb
inc
jno
lods
and
jg
aas
dec
orl
fistpl
mov
fdivl
adc
stos
aam
xor
dec
mov
js
dec
imul
mov
mov
imul
mov
push
in
cmp
adc
add
fisttpll
pop
fistps
filds
jnp
subl
out
cmp
ss
fsts
mov
pop
push
or
sub
jnp
inc
and
popa
scas
pop
movsl
ja
or
ljmp
or
movsl
xchg
rcll
push
int3
sbb
cmp
mov
nop
adc
pop
dec
add
cmp
das
outsb
cs
enter
out
lea
fidivrs
pop
outsl
cs
xor
and
lock
jns
push
or
pop
mov
rcr
pop
xchg
outsb
inc
xlat
xlat
add
mov
xchg
mov
cmpsl
push
xor
sbb
pop
cmpsl
mov
xor
lods
rep
popf
test
lods
sub
dec
cmp
rcrb
jecxz
inc
sub
adc
jp
xchg
lahf
push
daa
cli
lahf
insb
out
enter
clc
loope
popa
dec
addr16
insl
gs
fisttpl
xor
mov
popa
js
loop
adcl
dec
jp
cmc
mov
cmp
dec
mov
orw
addl
sub
jg
gs
scas
insb
add
jae
loop
outsl
adc
push
cmp
pop
shlb
int
mov
adc
mov
mov
xchg
bound
jno
or
or
xor
add
popa
fcoml
inc
dec
popf
cmc
mov
jns
add
jecxz
inc
xchg
pop
stc
iret
lods
into
data16
subb
ficoms
int3
stc
or
fwait
leave
inc
xor
mov
daa
bound
aas
dec
xchg
scas
cmpb
test
or
xchg
stos
iret
addr16
mov
xlat
ss
mov
jo
add
mov
dec
movsl
mov
dec
outsl
push
cmp
mov
iret
adc
shrb
in
push
dec
lds
int
jne
mov
mov
and
cmp
cmp
ja
pop
fadds
mov
or
subl
mov
lods
daa
call
lcall
sbb
rolb
insb
xchg
xchg
cmpb
mov
fldcw
cmpsb
mov
faddl
mov
push
jns
lret
dec
xor
add
shrl
lret
leave
jns
pop
out
inc
lcall
mov
cmp
mov
popa
pop
cmp
fwait
data16
shlb
iret
fcoms
and
icebp
aam
rcrl
pop
fistpll
shlb
mov
xor
xor
or
or
aas
jecxz
lea
jbe
jmp
into
scas
incl
movsl
aad
insb
mov
push
shll
mov
aam
popf
rorb
rclb
dec
and
out
sub
xor
ja
mov
jecxz
es
jg
leave
test
xor
ficompl
test
inc
pop
push
lods
out
add
xor
popf
or
cltd
or
fcoml
repz
adc
lret
ljmp
sbb
addr16
xor
and
jg
sbb
lock
leave
fdivr
cmpsl
sub
add
cmp
push
mov
sub
jp
lods
popf
sub
cmp
sti
mov
dec
inc
push
jmp
and
fistps
hlt
es
sub
int3
push
adc
cmp
sub
xor
outsl
imul
popf
jno
shll
imul
int3
cmp
adc
stos
xchg
das
mov
xor
jo
aaa
sub
jl
and
lods
cltd
inc
adcb
mov
jo
test
push
sub
pshufw
lods
fadd
jp
out
lea
or
pop
loop
mov
cmc
cmp
inc
out
lods
fisubrl
dec
cmpsb
sub
adc
mov
outsl
mov
gs
jle
stc
pop
popa
jp
punpckhdq
fstps
dec
fldl
orb
push
inc
iret
mov
bound
mov
jl
into
gs
mov
arpl
dec
push
ret
mov
mov
stc
inc
adc
jae
push
sub
dec
subl
mov
xor
xchg
inc
cmp
cmp
dec
andl
out
add
push
lret
xchg
xchg
xor
shll
sub
push
pop
or
sub
movsb
and
loope
push
xchg
ret
imul
scas
fldcw
inc
int3
in
nopl
test
jecxz
add
adc
popa
and
rcl
xchg
pop
mov
das
sub
jle
imul
dec
pop
cmp
pop
leave
in
inc
add
mov
mov
mov
jle
xlat
sbb
shr
loopne
mull
push
ret
sub
cli
lock
add
pop
sar
dec
ret
stc
jno
push
and
mov
pop
add
and
ret
clc
push
xchg
push
mov
lods
div
insb
movsl
or
mov
loope
cmc
movsl
ds
inc
pop
roll
push
fisubl
inc
aam
les
sbb
inc
jnp
stc
aaa
adc
or
ljmp
stc
stos
cmpb
xorb
and
into
push
and
cmpsb
das
dec
psrlw
or
shlb
aas
adc
inc
fs
push
sub
cmp
in
test
mov
insl
pop
inc
stc
inc
lcall
je
jecxz
cld
daa
andl
into
out
xchg
and
xchg
mov
jo
gs
jno
iret
push
adc
cmp
jo
inc
insl
gs
stos
mov
lcall
cs
pop
mov
add
and
scas
mov
and
pop
stos
in
mov
out
andl
mov
push
lods
loop
xchg
std
addb
sbb
mov
mov
ret
mov
stos
sub
in
push
lods
repz
aam
sub
mov
popf
in
clc
dec
test
xor
mov
cmpsb
xlat
mov
dec
js
jle
jg
subb
in
xor
fmulp
jo
mov
xchg
ds
sbb
out
nop
add
jne
cmp
mov
jnp
fwait
cld
jbe
addr16
ror
push
push
rcll
xor
mov
sbb
jge
clc
lret
fiaddl
mov
fnstsw
sub
mov
in
inc
enter
ror
cmp
popf
ficomps
or
mov
cmp
lods
rol
pop
mov
mov
movsl
push
rorl
mov
push
mov
adc
jecxz
setae
sbb
push
sbb
cmp
add
cmp
pop
shll
cltd
outsb
cmp
dec
or
ret
dec
lea
add
adc
xchg
dec
daa
popa
xor
inc
imul
aaa
scas
test
int
inc
inc
push
test
out
sbb
ds
out
cmpsb
mov
push
lds
cltd
leave
js
adc
jecxz
sarb
inc
mov
mov
mov
and
inc
cld
mov
and
shr
pop
ret
in
inc
mov
in
lock
in
nop
clc
fwait
and
inc
repz
cmp
push
cmp
push
sarl
xchg
ret
push
lret
daa
imul
cs
in
mov
loop
test
adc
int
lods
pop
push
insl
jg
aaa
mov
mov
cmp
in
iret
push
aam
sti
popf
xchg
test
shrb
jnp
mov
sbb
iret
pop
lods
cmp
es
or
flds
mull
scas
xor
mov
rol
dec
test
jecxz
push
xchg
mov
push
push
or
push
das
into
jp
fs
shrb
or
inc
lods
mov
or
dec
or
sbb
cmp
lea
adc
or
xchg
lcall
xorb
mov
roll
push
xor
lods
sbb
daa
movsl
pop
icebp
or
popa
enter
arpl
push
pop
mov
or
mov
sbb
in
jno
mov
cmp
int3
clc
inc
lret
lods
add
mov
jl
mov
daa
gs
and
icebp
jo
xchg
arpl
je
inc
sti
stos
mov
push
xor
addr16
cvtpi2ps
push
dec
ret
cltd
aam
lea
mov
sub
cld
push
dec
add
push
int
arpl
in
pop
and
jno
sbb
pushf
or
jge
pop
xor
repz
hlt
sarl
dec
xchg
dec
lock
stc
ds
out
hlt
mov
sbb
push
cltd
cmp
insl
cmpsl
les
push
xchg
mov
push
repnz
inc
sub
and
mov
sti
das
xchg
sub
fdivr
fcmovnu
sub
sbb
jge
mov
lods
mov
and
mov
rcr
xlat
push
scas
dec
stc
xor
pushf
pop
or
js
out
inc
cmpsl
aaa
sub
lea
inc
dec
adc
fldt
push
dec
scas
out
sub
inc
push
sub
jo
sbb
pushf
es
lods
mov
jbe
cmpsl
fildl
adc
pop
ret
sbb
cld
mov
push
es
dec
pop
stos
adc
sbb
jns
xchg
jns
sbb
fs
call
pop
dec
sbb
push
loopne
jo
movsl
push
add
outsl
out
stc
adc
inc
xor
cwtl
and
dec
fcom
cli
pop
jl
in
cmp
sub
iret
dec
sub
ficoms
or
xor
lds
dec
jbe
dec
dec
inc
rcrb
aaa
fcoml
ja
ja
rolb
mov
in
mov
mov
clc
pushf
jmp
loope
imul
icebp
xchg
inc
cld
fdecstp
movsb
data16
push
addr16
in
out
scas
cltd
pop
jbe
push
stc
mov
decb
aam
scas
jns
arpl
fisubrs
out
stc
adc
and
loope
cmp
addr16
aaa
inc
lret
dec
cs
and
outsb
xchg
dec
scas
das
mov
imul
and
fwait
into
mov
sarl
or
mov
xchg
js
into
xchg
aas
mov
jne
lods
or
xchg
mov
fcompl
in
xchg
mov
scas
out
pop
ret
lret
fidivl
lods
rep
adc
into
dec
mov
inc
sub
xor
push
inc
dec
lods
adc
lock
andb
test
inc
xchg
and
insl
add
mov
popa
testb
subb
push
mov
mov
inc
xchg
ret
cmp
xchg
xchg
scas
dec
in
orb
into
dec
jecxz
and
scas
xchg
inc
and
fs
pop
mov
lret
mov
jle
loopne
repz
repz
stos
cmpxchg
jae
adc
adc
les
aas
scas
and
mov
pop
adc
mov
pop
sub
imul
nop
enter
add
mov
pop
xlat
mov
lahf
popf
dec
push
shrl
ljmp
sub
push
movsl
mov
dec
xchg
xlat
jle
pop
mov
es
adc
inc
mov
sti
pop
push
stos
xchg
xchg
cmp
sub
int3
lahf
lahf
sbb
ja
jmp
dec
xchg
jbe
insl
aam
je
inc
aas
mov
lcall
imul
mov
ret
pop
es
jmp
pop
cwtl
mov
inc
xchg
sti
insl
xor
push
ljmp
push
inc
int
dec
imul
shrb
stos
push
pop
pop
jp
lahf
jecxz
dec
sub
mov
adc
xor
mov
test
inc
lea
in
mov
lret
dec
into
push
ret
scas
cmp
jne
aas
or
sub
adc
push
push
rcrl
cmp
insl
ss
and
or
xor
test
pop
cli
movsl
mov
pop
cmp
popa
leave
xor
imul
into
sub
out
pop
push
fdivrl
imul
xchg
in
shlb
daa
int3
inc
jbe
push
push
jle
sbb
cmp
rolb
cld
jl
es
mov
clc
adc
push
outsl
jle
mov
fldt
arpl
or
sarl
data16
mull
shr
shl
rolb
push
pop
or
fst
sbb
pop
add
sub
pop
out
scas
adc
out
lods
mov
fadd
dec
aad
pop
movl
lods
push
imul
sub
inc
imul
jns
into
xchg
aad
cs
and
int
xchg
stos
ds
or
xchg
fldt
push
fnstsw
dec
lret
shll
cmpb
imul
xor
and
jl
daa
data16
sub
lods
inc
loope
xchg
test
or
arpl
jg
mov
cli
jns
mov
les
dec
jns
xchg
sbb
dec
insl
pop
nop
add
and
scas
and
mov
mov
mov
enter
in
cmc
out
cwtl
subb
and
fucomp
xor
push
out
cltd
jns
repnz
jmp
cli
xor
jmp
pop
into
or
cmp
cmpsl
xor
push
mov
mov
lret
fwait
div
cmpsl
fdivrs
push
daa
data16
xchg
inc
dec
sub
and
and
std
dec
fdivrp
into
orb
xor
stos
sub
mov
mov
in
lock
pop
or
lock
jbe
pusha
enter
fistpl
loopne
cmp
or
enter
jg
xchg
aaa
mov
inc
mov
clc
fdivs
sub
sub
movsb
jecxz
movsb
inc
lret
stos
mov
fimuls
test
insb
lret
and
xor
inc
pushf
stos
mov
sbb
nop
arpl
pop
add
jmp
lods
sub
jbe
fldt
inc
dec
pop
sbb
int
insb
in
push
adc
test
sti
adc
les
sub
sbb
xchg
and
loop
xchg
or
and
sbb
enter
stos
out
mov
mov
mov
jle
mov
test
insl
sbb
das
out
push
imull
shll
xlat
imul
mov
cmpsl
cmp
lret
int
inc
shrl
add
or
nop
cmpsl
mov
xor
test
test
dec
mov
and
in
movsb
imul
int
aam
in
jb
fcomps
mov
push
sub
loope
jae
in
in
or
scas
and
cs
outsl
jmp
push
jno
inc
in
stos
mov
stos
pushf
cmpsl
movsb
push
les
cmpsl
xor
mov
inc
pop
loop
xchg
insl
idivb
inc
mov
xor
insl
xchg
and
jnp
mov
fdivrs
lret
mov
andb
or
push
and
pusha
sbb
mov
jle
out
stos
jge
cli
data16
into
stos
push
test
inc
lock
cmp
adc
xor
dec
ds
and
pushl
fsubrs
xchg
hlt
mov
sub
xchg
lcall
xchg
dec
xor
push
dec
push
or
sti
jno
xor
xchg
add
xchg
lret
test
xor
inc
sub
lods
js
or
xor
andb
xchg
iret
psubsb
dec
mov
fwait
test
lea
gs
push
aad
push
sub
sub
jnp
cs
ret
and
test
pushf
movsb
ret
push
cmpsl
aam
iret
in
cltd
mov
adc
lahf
xor
nop
or
insl
push
add
mov
outsl
pop
mov
pop
and
and
xor
mov
pushf
push
pop
cmpl
lds
pop
add
mov
ja
stos
stos
sti
mov
add
push
jl
mov
pop
dec
out
rcrl
mov
sbb
jnp
stos
enter
pop
or
mov
shll
xor
clc
add
sub
lds
cmp
mov
xchg
mov
cmp
cwtl
sbb
add
adc
xor
cmp
or
add
mov
movsb
out
pop
jne
js
out
mov
xchg
shlb
xor
rcr
mov
mov
adc
mov
lock
out
shl
es
and
test
or
sub
stos
push
fildll
push
sbb
add
mov
cmpsb
sbb
stos
mov
add
inc
cmp
lods
mov
mov
orl
sub
sub
add
mov
pushf
loopne
cmp
mov
insb
stos
test
psubb
sar
jne
in
adc
xor
jae
cmp
ret
xorb
es
mov
mov
dec
add
into
or
lret
sub
push
and
fisubrs
es
std
cmp
sahf
data16
mov
adc
jns,pn
dec
movsl
fwait
inc
add
fmull
sub
gs
insb
ret
xchg
int
or
mov
adc
push
stc
or
mov
outsb
mov
out
cmp
xor
popa
movsl
jmp
xchg
les
mov
mov
push
mov
aas
mov
in
cld
lahf
or
xor
loope
gs
sbb
rorl
into
jne
jmp
jnp
scas
pop
xor
loope
into
jge
add
jns
cmp
xlat
push
fcoms
xchg
sbb
or
dec
xorl
scas
push
dec
lcall
add
loop
cmp
xchg
sub
or
movsb
mov
and
es
insb
xchg
xor
mov
jnp
sub
dec
test
adc
or
mov
mov
jl
inc
mov
hlt
push
adc
imul
js
push
mov
sub
cmp
out
pop
lcall
stos
cli
divl
pop
and
loope
in
or
or
jg
mov
mov
daa
cli
cmpsl
pop
in
sub
fwait
cwtl
shll
xor
nop
aaa
mov
das
mov
in
aad
dec
adc
pusha
inc
out
popa
cld
mov
xchg
xchg
dec
int
xchg
mov
add
adc
pop
or
dec
mov
cmpsl
scas
add
stos
mov
test
jge
inc
or
mov
push
push
dec
dec
jno
das
sub
ret
inc
in
cli
in
xchg
arpl
xchg
int
scas
mov
or
mov
rorb
cmp
in
and
arpl
mov
inc
cmc
xchg
scas
push
ja
mov
add
xchg
jnp
out
imul
lret
mov
mov
jp
sub
sbb
dec
into
cmp
push
sub
add
jae
int3
aad
mov
or
iret
out
pushl
cltd
fcomp
or
ljmp
adc
hlt
mov
jnp
xor
mov
mov
push
cmp
sbb
xchg
insb
out
mov
jnp
jmp
sidtl
popa
addr16
inc
into
adc
into
aas
push
sbb
jmp
adc
repnz
sbb
pop
or
lods
mov
cmp
dec
push
fcmove
mov
rcrl
pushf
pop
lods
insb
loopne
fnstsw
dec
add
fisubrl
or
mov
bound
mov
sub
jmp
mov
jge
cs
rol
pop
jl
lret
xor
and
push
mov
dec
dec
adc
mov
dec
sbb
cmpsb
out
iret
pop
pushf
es
sbb
jns
dec
mov
arpl
mov
pop
in
jl
lcall
ss
pop
or
add
rcrb
or
pushf
loopne
mul
insl
mov
outsb
repz
call
fwait
sub
dec
inc
add
pop
jns
sbb
adc
call
jecxz
nop
adc
test
stos
pop
dec
out
mov
mov
jb
sub
jbe
add
and
inc
fsub
or
leave
and
push
imul
xorb
or
jg
add
call
lret
dec
sahf
filds
cmp
xchg
xor
scas
or
jbe
repnz
xchg
rorl
inc
dec
pop
pop
or
test
popf
mov
xor
sbb
jne
jne
push
xor
iret
outsl
inc
enter
lods
int3
pop
pop
inc
dec
add
dec
cmpsl
imul
into
and
mov
sub
shll
xor
mov
sbb
xchg
aaa
clc
roll
cmp
fisttpll
sub
jl
ljmp
cmpsb
xchg
jg
mov
mov
stos
arpl
push
addps
fisttpl
dec
jge
insl
xchg
ds
jle
test
pop
add
and
lods
cltd
jae
xchg
in
jnp
imul
xchg
sbb
xchg
sbb
popa
mov
mov
push
sbb
push
xor
mov
and
lock
inc
cwtl
adc
mov
lret
xchg
push
xchg
xchg
jo
bound
dec
sub
out
movsb
sti
push
sahf
dec
pusha
arpl
in
mov
movsb
inc
ds
push
pusha
adc
daa
dec
pop
bound
mov
scas
push
mov
xor
movsl
insl
xchg
fnstenv
mov
add
mov
hlt
or
push
xchg
cwtl
in
lcall
dec
pop
sbbl
repnz
xchg
jns
dec
es
lret
out
shrl
cmp
pop
out
push
cltd
insb
push
mov
ss
scas
sbbl
roll
xchg
ss
pop
or
and
sahf
push
ret
lret
in
lods
fld
push
xchg
aam
outsb
aad
aad
pop
push
mov
popa
fnstsw
lock
and
sub
shll
fld
add
dec
pushf
add
out
xor
rorl
dec
out
xor
out
or
cli
push
sbb
lret
and
aad
loopne
inc
pushl
cmp
mov
leave
push
es
int
mull
inc
neg
gs
loope
xchg
loopne
xchg
outsb
xchg
rolb
das
sub
push
dec
outsb
xlat
lock
cmpsb
test
dec
test
or
jno
lock
fildl
test
clc
std
scas
adc
cmp
pusha
clc
xor
inc
out
or
divb
lahf
pop
mov
int
imul
pushf
cmp
push
sub
cli
dec
lods
add
bswap
sbb
dec
dec
mov
cmp
test
push
fldcw
add
pop
es
and
adc
outsl
popf
cmpb
cli
cmp
add
mov
mov
add
cmp
lcall
xchg
pop
lret
into
and
mov
mov
or
ret
ljmp
adc
pop
xor
push
sub
test
add
xor
mov
push
cs
out
jecxz
xor
adc
lods
cmp
and
and
mov
scas
or
inc
mov
mov
mov
rorl
xchg
adc
mov
aam
int3
leave
mov
lea
pop
mov
mov
les
mov
lds
popf
jg
pop
inc
ret
cmp
xor
push
insl
testb
push
in
cmp
mov
dec
icebp
mov
rclb
jae
add
mov
inc
push
out
ds
jbe
adc
data16
cmpsb
icebp
lret
into
dec
and
push
xchg
pop
jbe
inc
imul
in
popf
imul
adc
adcb
mov
rol
inc
ja
rolb
jae
loopne
jno
lcall
xor
sbb
push
add
cli
mov
mov
mov
insl
inc
lods
test
xor
mov
aas
roll
dec
inc
dec
inc
test
in
lret
jo
ficomps
in
push
jecxz
in
or
inc
adc
test
lahf
cmp
inc
cld
pop
cmp
xor
icebp
jp
fwait
movsl
ror
push
xor
sbb
test
mov
adc
clc
leave
andb
and
and
dec
in
cmpsb
inc
fnstcw
xchg
xor
sbb
and
imul
das
and
lret
incb
push
push
pop
jo
push
sub
push
js
sub
jo
scas
les
or
or
pop
out
stc
aaa
jle
jo
repz
and
ds
cs
pop
mov
test
push
enter
inc
jae
sub
lock
lods
shll
adc
jp
cmp
scas
inc
ja
inc
push
xor
imulb
xchg
mov
or
sbb
inc
test
rcl
test
lret
add
xor
scas
fmull
cmp
bound
jae
or
adc
pop
stc
or
mov
add
xchg
inc
aam
adc
push
sub
jne
xlat
mov
add
daa
push
out
test
xchg
inc
inc
jns
xchg
pop
mov
iret
push
jecxz
hlt
sub
add
dec
cmpsl
dec
ss
lea
int3
in
cld
push
mov
mov
mov
dec
jp
nop
sbb
sahf
idiv
xlat
adc
cli
sbb
popf
and
mov
jne
and
xlat
shr
xor
sub
xchg
lahf
aas
sbb
loop
xchg
ja
jl
sub
jae,pn
shrl
or
or
das
pop
xchg
sub
nop
push
jnp
rorb
test
lret
pop
loopne
cli
adc
shll
cltd
test
mov
push
dec
test
sub
cli
cmp
cwtl
dec
push
pop
cmc
dec
iret
lea
jmp
cltd
xchg
push
lock
lret
in
xlat
cld
in
sti
mov
cmp
pop
into
js
or
push
jp
jg
in
cmp
fwait
inc
outsl
test
inc
lock
cmp
sarb
fcmovnbe
movsl
or
mov
push
pop
hlt
nop
leave
std
mov
mov
loop
dec
les
mov
xor
mov
jbe
adc
test
and
aaa
mov
aaa
pop
stos
xor
ljmp
cmp
out
imul
nop
adc
cli
jg
inc
dec
push
jae
sbb
adc
pusha
lahf
push
dec
popf
adc
xor
insl
cs
inc
cmpsl
jns
mov
adc
flds
loopne
rorl
push
add
push
cmp
mov
addb
mov
dec
loopne
cmp
es
ds
inc
test
adc
int
pushf
in
mov
push
pop
loopne
sbb
rorl
sbb
push
push
nop
mov
cmp
pop
adc
inc
push
mov
dec
stos
into
rorb
cmc
jo
pop
stos
push
cwtl
push
jecxz
push
push
inc
adc
cmc
dec
loop
aam
xor
jecxz
sub
jle
mov
mov
ds
in
and
stc
fs
in
sbb
test
adc
lods
pusha
addl
sub
inc
or
pop
cmpsb
xor
xor
inc
dec
mov
mov
mov
in
mov
pop
lret
sbb
scas
into
dec
sbb
enter
or
in
adc
mov
adc
xor
pop
arpl
push
cmp
das
hlt
inc
scas
jg
or
nop
fadds
fstpl
cmp
xchg
sahf
xor
scas
mov
mov
fwait
sbb
sbb
jle
cli
mov
aas
sub
or
push
negb
adc
lods
mov
push
add
ljmp
adc
stos
pop
mov
in
data16
enter
hlt
in
adc
imul
shlb
out
adc
mov
vpmaddwd
add
cli
sub
pusha
mov
mov
inc
adc
add
push
mov
insb
mov
push
adc
push
lret
mov
mov
test
add
mov
sbb
mov
push
lock
push
into
jns
inc
mov
sahf
dec
icebp
iret
iret
add
push
mov
cmc
daa
sbb
rcrl
xor
test
sti
dec
dec
push
mov
fwait
nop
push
out
outsb
lahf
sbb
shrl
push
outsb
dec
jbe
ljmp
mov
pop
cmp
sti
and
lcall
adc
xchg
jne
dec
mov
sbb
cmp
sub
pushw
pop
rcl
pushf
addr16
and
int3
push
cmc
fdivr
leave
or
jnp
adc
add
jns
test
lret
xchg
cli
iret
add
sbb
stc
cli
shrl
scas
shrl
xchg
pop
mov
jnp
lods
jp
aam
jbe
cmp
xor
push
packsswb
outsb
lret
and
sbb
adc
or
out
sbb
shl
xchg
dec
loop
imul
dec
std
xchg
dec
dec
jbe
cli
inc
sahf
xor
mov
sbb
adc
lret
pop
or
cmp
adc
xor
test
sub
sub
pop
inc
stc
cltd
jmp
mov
cmp
adc
lea
cmpsl
lea
mov
aaa
negl
mov
mov
cwtl
sbb
insl
mov
filds
dec
aas
inc
mov
pop
gs
test
cli
push
lcall
popa
mov
pop
sahf
bswap
mov
xchg
cvtpi2ps
fstps
test
int
pusha
pop
outsb
inc
outsl
stos
add
pop
adcl
mov
add
fstl
std
adc
xor
mov
test
sbb
popa
mov
push
icebp
inc
push
ljmp
sub
in
inc
ret
jl
nop
ja
cmpsb
mov
sub
xor
inc
push
xorb
dec
and
sub
or
jmp
dec
vcmppd
in
pusha
lds
bt
jmp
xchg
xchg
cld
inc
dec
in
and
filds
rcrb
jb
and
mov
cld
shlb
inc
inc
or
ret
pop
cmpsl
fwait
lea
mov
mov
sbbb
adc
adc
lcall
push
sahf
sub
and
movsl
sub
sarb
rorb
push
dec
fldt
adc
jp
mov
scas
int3
fsub
ss
mov
sub
arpl
in
mov
push
in
nop
mov
sbb
push
pop
and
mov
fstps
push
das
ljmp
sub
xchg
hlt
and
xchg
jg
dec
cmp
fbstp
leave
pop
mov
inc
mov
sub
xchg
dec
mov
inc
xorl
sbb
adc
pop
idivb
dec
fsubrl
shl
loop
sti
add
push
std
idivb
inc
push
inc
loopne
push
push
and
inc
repz
and
ret
fs
imul
mov
add
xor
in
xor
test
push
lods
andb
push
push
and
dec
shll
pop
cmp
and
aad
push
xchg
test
inc
mov
dec
movsb
fcomps
cmc
jecxz
dec
cmp
popf
pushf
nop
ds
in
pop
xchg
jne
xchg
stc
imul
cmpsb
ret
cmpsl
outsb
cmp
les
push
test
sbb
pop
and
int
mov
inc
jbe
dec
sbb
cli
popf
or
imul
adc
lea
add
lret
mov
and
mov
xchg
jg
popf
and
je
jl
push
sahf
push
nop
add
cmpsb
jle
shll
outsb
das
xchg
and
xchg
imul
jb
ljmp
push
cmp
negl
cmp
stc
adc
mov
std
mov
mov
or
in
and
pop
sub
int
lret
xor
push
daa
cmp
orb
cs
mov
mov
push
enter
xchg
out
xor
sbb
jge
mov
addl
jae
outsb
stos
je
jns
pop
lock
nop
mov
jo
and
aad
inc
xchg
aas
xchg
pushw
popa
cs
sub
dec
lahf
sub
cwtl
mov
decl
cmpsl
mov
cmpsb
mov
pop
ja
xchg
mov
inc
jle
push
dec
xor
sbb
fmul
jl
aaa
popf
jge
icebp
aas
dec
daa
push
mov
testb
or
or
jle
dec
aad
jl
fisttpll
xchg
ljmp
cmp
pop
insl
cmpl
andl
mov
mov
daa
pop
jo
or
out
into
jle
lock
jns
cmp
test
add
pop
inc
fcomps
mov
shll
pop
pop
pop
mov
pop
or
jge
stc
inc
das
cmp
outsl
lods
nop
sub
jg
mov
inc
in
adc
adc
rcpps
js
imul
and
mov
push
pop
jno
adc
dec
pmaxsw
cmp
divl
inc
inc
int
std
loop
cli
mov
adc
rcr
imul
pop
fsubs
scas
push
dec
mov
fadd
cmp
xor
arpl
push
imul
jns
divb
push
push
mov
jmp
fwait
push
lock
ljmp
ds
xchg
icebp
xchg
and
lcall
xchg
je
aad
mull
out
stos
push
std
inc
sbb
imul
in
ficoml
mov
je
add
cs
daa
lock
jmp
mov
xor
push
xchg
test
push
cld
fcomip
xchg
inc
dec
aas
sub
mov
and
test
into
cmp
push
mov
adc
in
loopne
mov
rep
mov
inc
push
xchg
loop
jmp
popa
or
or
add
dec
subl
xor
adc
inc
mov
adc
push
or
xor
and
push
and
lods
pop
push
xchg
mov
push
dec
cli
jae
fcomp
cmp
stc
sbb
pop
stc
clc
sbb
out
insl
xchg
mov
xchg
pop
sub
jg
ljmp
push
and
stos
int
idivl
fiaddl
std
and
popl
push
cmpsb
sub
repnz
lcall
dec
adc
sub
push
dec
jne
ljmp
inc
add
push
lcall
pop
add
call
insb
or
pop
movsb
jae
icebp
cld
pop
dec
xchg
lock
int
incb
or
into
ljmp
pop
lods
dec
pop
out
fnstcw
mov
fdivp
xchg
and
adc
fnstenv
add
pusha
mov
mov
adc
push
mov
adc
xor
rorb
addb
push
pop
add
jae
ret
lcall
xor
leave
lret
sub
lahf
pop
xor
mov
mov
push
xor
cltd
pop
sbb
fdiv
lret
adc
cwtl
mov
sahf
mov
mov
dec
mov
hlt
shrl
mov
sbb
or
mov
mov
xor
lret
sbb
push
stos
cmpsl
inc
test
push
leave
js
pop
fwait
aad
adcb
cmp
scas
js
out
jge
ss
test
mov
cmp
xor
cld
inc
xchg
cwtl
sub
test
push
into
adc
mov
adc
ljmp
leave
testl
lea
jo
or
jge
and
pop
inc
rcl
push
pop
and
jnp
mov
push
inc
clc
xchg
jns
outsl
lret
loopne
fstpt
lcall
adc
in
dec
bound
adc
or
dec
inc
imul
jne
cmp
jmp
sub
push
jp
xchg
or
or
mov
dec
pop
bound
mov
add
dec
push
push
and
dec
negl
xchg
pop
add
push
into
cltd
cmpsl
mov
repz
ds
in
jbe
mov
adc
hlt
scas
inc
push
shrl
mov
in
sub
aaa
mov
cmpsb
push
pop
loopne
ds
and
fiadds
adc
ja
movsb
cld
add
xlat
push
repz
pop
aaa
hlt
imul
pop
iret
aaa
ss
xchg
dec
cmp
stos
sbb
in
add
inc
push
call
adc
insl
out
inc
scas
popf
cmc
negl
sub
in
sahf
dec
es
aaa
idivl
mov
jg
mov
pop
test
ljmp
pop
call
cs
std
cmp
addr16
cli
dec
test
jg
xchg
or
mov
ljmp
aas
mov
sub
nop
out
das
mov
ss
es
jns
out
adc
mov
pop
adc
jae
fwait
repnz
sbb
mov
jle
loop
push
dec
cwtl
and
dec
test
in
push
jg
jo
mov
xchg
divl
xchg
push
cmp
pop
les
mov
in
xchg
mov
sbb
lods
and
je
mov
adc
xor
pop
sub
mov
mov
adc
fstps
les
pop
xor
ret
fs
aad
rolb
ja
decb
and
dec
lret
out
or
in
mov
into
insl
or
and
or
sbbl
inc
or
iret
jbe
decl
xchg
scas
movsl
iret
loope
add
and
inc
orl
mov
pushl
ret
mov
call
mov
std
sar
in
mov
xchg
adc
adc
inc
mov
adc
jae
jle
jns
int
jae,pn
stos
orl
sti
insb
push
inc
xor
ss
outsb
aam
push
xlat
add
popa
lods
mov
test
pop
scas
and
mov
push
sub
push
inc
sbb
test
pop
xchg
pop
fisttps
inc
mov
aad
jge
mov
mov
jmp
daa
mov
adc
mov
dec
je
daa
sub
loop
pop
push
pop
pop
in
pop
xchg
dec
dec
in
ja
leave
fwait
repnz
or
stos
mov
outsb
jns
jo
push
xor
or
rcll
call
insb
cs
or
xor
in
mov
and
xchg
fdivrs
sbb
fs
insb
jb
jo
ja
mov
cmp
sarl
std
pop
xchg
xchg
sub
cmpsl
cmp
xchg
lea
arpl
push
sbb
outsb
xchg
jmp
lods
push
mov
cmp
pop
xchg
mov
push
fstps
inc
cltd
lea
jp
sub
mov
xchg
lea
fucomip
push
xchg
repnz
loopne
xchg
push
aaa
push
sbb
xchg
ret
sbb
fisubrs
xchg
cmp
or
and
arpl
subl
or
pop
scas
fmul
popf
ret
ds
xchg
call
pop
fstl
sub
imul
or
sub
adc
and
or
dec
clc
sub
adc
inc
jg
jno
fwait
adc
xor
and
gs
sbb
push
inc
and
fsts
or
lea
mov
out
lret
mov
lcall
push
mov
scas
je
sbb
dec
or
or
jmp
push
mov
or
sub
test
jnp
pusha
dec
ljmp
sub
ss
or
movsl
mov
dec
dec
adc
mov
loopne
fs
or
mov
or
or
addr16
ljmp
xchg
dec
iret
cmpl
and
sub
xorb
fsts
xchg
and
out
lds
movsl
dec
sub
cli
add
sub
xchg
leave
cmpsl
add
push
cmpsl
mov
dec
jmp
pop
hlt
aad
sbb
mov
pop
ljmp
int
dec
leave
xchg
scas
in
mov
pop
iret
inc
pop
jbe
xchg
and
or
adc
cmp
mov
test
and
or
std
mov
push
js
fwait
mov
imul
jl
insl
pusha
cs
mov
ljmp
sub
jg
or
push
jmp
inc
jp
bound
jo
push
ds
jge
cmp
xor
test
xor
je
jl
mov
in
xchg
jno
leave
aam
mov
cmpsl
pop
inc
push
and
sbb
or
push
cmp
cmpsb
dec
or
icebp
cli
notb
dec
jge
dec
jle
out
xor
daa
addr16
dec
dec
cmpsb
pop
adc
mov
imulb
sub
lea
dec
popa
pop
mov
cmpsl
fdivrl
mov
mov
aad
mov
jno
orb
jecxz
popa
addr16
jne
ljmp
dec
std
les
inc
lea
imul
xchg
in
sti
mov
inc
mov
sbb
lock
lds
xchg
out
or
jo
xor
add
gs
sbbb
aad
and
mov
mov
js
insl
roll
in
pop
cwtl
xor
push
mov
in
push
lock
xchg
dec
pop
cmc
ljmp
mov
hlt
adc
stos
ret
out
xor
add
cmpsl
or
mov
push
jae
aad
popa
jg
mov
xor
insl
xchg
or
xchg
hlt
imul
add
pop
sub
add
icebp
sub
outsl
or
enter
sub
call
mov
jecxz
loope
mov
fidivs
lea
out
push
cmc
movsb
mov
add
test
push
mov
rolb
sbb
movsl
repz
xchg
orb
imull
dec
mul
cmp
pop
sub
jg
cli
das
mov
imul
jo
out
push
cmp
xor
dec
add
xchg
mov
mov
xor
inc
repnz
movl
sbb
int3
or
add
idivb
pusha
shrb
fimull
add
aas
push
sarl
pop
lahf
xchg
push
cmp
popf
cld
pop
push
fidivl
repnz
pushl
cmpsb
xchg
sti
jecxz
ffree
sub
insl
cmp
in
aas
mov
out
jne
push
dec
xchg
sub
stos
sbb
cmp
xchg
and
cmpsb
sbb
pop
xor
mov
and
fcomi
mov
sub
popa
mov
fnstenv
fcoml
push
mov
adc
add
mov
xor
fucomp
imul
fstps
lcall
lods
sub
xchg
add
test
movsb
nop
adc
cmp
icebp
es
mov
shr
or
out
loopne
insb
icebp
outsb
sti
mov
add
mov
ja
cmp
dec
jmp
aaa
jno,pt
xor
nop
xchg
and
ljmp
dec
xor
and
mov
mov
mov
dec
cmp
xchg
imul
push
insl
jne
ss
mov
out
jle
nop
daa
jno
subl
out
dec
scas
xchg
adc
mov
adc
mov
vmovups
xor
insl
call
outsb
fisubl
fisttpll
jne
push
mov
jle
lock
or
popa
sbbl
mov
xor
push
fisubs
jp
aad
fsubrl
mov
push
gs
es
shrb
pop
test
mov
fsub
addr16
xchg
cs
jns
mov
mov
int
ja
cmpsl
leave
fwait
adc
sahf
xchg
adc
lcall
mov
xchg
dec
notl
mov
lea
push
daa
scas
aaa
mov
mov
outsb
shrb
cmpsl
mov
dec
mov
ret
test
ljmp
adc
rorb
pop
in
xor
and
add
fidivs
or
mov
nop
loop
out
jns
sbb
inc
and
sub
jne
movsb
notrack
and
xor
sbb
or
divb
mov
add
in
jns
dec
push
aas
mov
push
lods
mov
add
cmp
jno
sbb
cmpsl
lock
js
cmp
mov
cmpsl
cmp
gs
push
pop
or
pop
and
add
jo
pop
mov
push
xchg
add
and
jno
lds
xor
mov
xor
xor
sbbb
in
cmp
add
pushl
pusha
loop
pop
push
loopne
xlat
pop
mov
dec
aad
dec
cmpsl
jno,pt
clc
xchg
ss
jmp
cld
imul
es
in
scas
and
cltd
cli
icebp
push
or
mull
pop
lea
in
rcrl
push
cmp
pop
and
and
lcall
lret
pusha
popf
inc
mov
es
mov
push
pop
daa
lahf
cmp
leave
add
cmpb
daa
xor
outsl
push
aas
popf
idivb
push
call
lds
ss
jne
jmp
lods
jo
mov
orb
xchg
icebp
into
mov
into
adc
pushf
push
repnz
les
sub
incb
or
cmp
jl
ret
inc
divl
cmp
or
mov
stos
push
in
push
jo
push
ja
int
or
jle
dec
out
ret
arpl
mov
cmp
and
xor
jle
in
stos
aam
xor
mov
mov
and
sbb
or
xorl
loopne
test
jne
daa
xchg
xor
jmp
adc
scas
mov
xlat
mov
xlat
nop
test
adcl
pop
xchg
rep
or
mov
inc
pop
and
cmp
fwait
inc
stos
js
jmp
cwtl
or
jbe,pn
inc
test
xor
pusha
insl
cld
push
push
adc
scas
mov
jb
pop
call
test
call
jbe
daa
aas
cmp
mov
mov
in
fistpl
cmpsb
add
das
lret
mov
pop
mull
imul
int
cltd
mov
call
jp
shr
add
pop
lods
and
mov
dec
aas
outsb
lcall
outsb
hlt
xor
jg
jb
out
cmp
sbb
cmp
ret
mov
mov
xor
test
and
xchg
jno
adc
mov
orl
xchg
call
in
xchg
add
push
cmpsl
inc
jg
out
inc
pusha
out
subb
gs
jo
xor
cmpsl
sub
subl
cmp
int3
and
imul
jo
and
sub
xchg
loopne
int
pop
sub
in
out
adc
push
jmp
inc
adc
sub
and
adc
dec
inc
movsb
lret
gs
xor
jb
test
lcall
rorl
xchg
mov
add
dec
jle
inc
sub
xchg
push
cmc
mov
aam
push
pop
and
pop
and
aas
leave
dec
pop
cmp
inc
mov
rclb
imulb
mov
cmpb
inc
and
ljmp
mov
and
lods
add
loope
cltd
sbb
scas
inc
push
pop
and
aad
jecxz,pt
inc
add
ret
pop
int
inc
pushf
sbb
xlat
jns
push
or
icebp
mov
xor
aam
xchg
xchg
add
pop
lock
push
lods
movsb
pop
xchg
xor
stos
jae
push
arpl
or
push
dec
adc
in
push
repz
pop
pop
ret
loope
xchg
cmpsl
leave
ds
jp
sbb
rclb
or
add
jge
sub
dec
lea
mov
xor
sub
sub
push
pop
in
and
pop
mov
xchg
aad
jne
xchg
sub
mov
push
adc
imul
in
dec
mov
pop
imul
aad
jp
sbb
jge
lds
lods
xchg
jnp
and
sub
cwtl
fisttpl
mov
push
aaa
mov
bndstx
aam
pop
push
and
xchg
and
xchg
push
ss
je
push
push
arpl
ret
fisubrl
adc
out
hlt
cwtl
pop
je
sarb
mov
cmp
mov
pop
test
sbb
and
mov
fildll
cs
aaa
aad
mov
mov
and
stos
mov
lods
sbb
adc
xor
imull
sub
dec
je
lcall
imul
cmp
push
jb
mov
cmp
or
sub
inc
cmp
jg
mov
or
fldcw
ja
inc
cmp
jecxz
mov
das
xchg
jmp
inc
ret
push
stc
out
enter
insl
push
in
imul
ss
or
nop
xchg
or
add
das
add
push
in
ja
sub
lret
push
push
pop
xor
push
in
push
xlat
dec
jp
mov
imul
int
jns
jbe
dec
aad
in
sarb
fwait
xchg
lea
cmp
sbb
das
ds
and
incb
jno
outsl
cltd
dec
ja
nop
aad
aas
xchg
xchg
shll
inc
xchg
inc
xor
into
dec
add
add
inc
cli
cmp
stc
sahf
push
aaa
lods
inc
push
sti
out
sub
test
adc
sbb
xchg
sub
mov
lds
jge
insl
mov
ja
test
cmp
xchg
cvtdq2ps
xchg
mov
sub
pop
cs
push
add
push
repnz
jae
xchg
cmpl
or
cmp
loopne
test
rcll
cli
ret
outsl
pop
int
sub
or
mov
jl
lods
fnstcw
out
test
or
fs
adc
and
aas
xchg
jnp
hlt
push
stc
or
in
das
int3
adc
pop
xlat
shrl
xchg
mov
inc
js
shlb
addr16
jns
and
push
shlb
xlat
hlt
jbe
adc
lods
dec
cmp
add
and
cmp
cwtl
dec
rorl
sub
insb
loope
or
ljmp
push
movsb
xor
orl
mov
and
jns
inc
stc
outsb
dec
mov
fldt
or
jnp
lea
add
call
inc
test
mov
frstor
mov
stc
and
mov
shll
and
cs
loopne
cmp
or
ljmp
jbe
out
popa
jge
fld
rolb
xchg
aas
mov
sub
inc
addr16
idivl
and
popf
or
outsb
ljmp
jmp
inc
pavgb
cmc
cmp
push
lahf
inc
mov
fstl
fiadds
setp
cmp
jo
inc
std
lds
fisttpll
and
in
cwtl
leave
cli
cmp
sti
sahf
out
out
pop
push
or
cmovbe
leave
scas
xchg
adc
cmpsl
pop
nop
add
ljmp
or
mov
jno
sti
es
or
mov
enter
pop
fbstp
mov
iret
mov
adc
imul
pop
shrb
mov
in
pop
mov
add
xchg
mov
sub
xchg
lret
loopne
cs
stc
dec
jne
adc
adc
insl
push
mov
xlat
xor
sub
or
icebp
in
dec
cmp
call
pop
out
mov
aam
out
repnz
inc
adc
jb
fcoml
fmul
push
roll
in
leave
sarl
movsl
ret
pop
lods
xchg
pusha
mov
dec
and
adc
cwtl
sbb
cmp
or
xor
or
push
jp
and
xor
push
into
mov
cs
stos
cld
push
xor
sub
dec
daa
and
cmp
insb
fmul
xor
negb
lret
ss
inc
testl
int
xorb
testb
jb
out
int3
in
nop
cltd
cmp
xor
out
mov
sub
repz
lds
push
popa
stos
xchg
mulb
pusha
loop
sbb
mov
les
es
xchg
mov
push
push
shlb
repz
stos
mov
lods
jo
mov
pop
xor
inc
lret
fisubl
sub
inc
sbb
xchg
mov
gs
mov
scas
clc
in
pop
in
cmp
inc
sbb
xor
dec
jbe
sbb
sub
sti
cmp
shlb
push
push
pop
insb
fstpl
jae
stc
push
aaa
cmp
add
jp
jne
cmp
cmp
rcl
push
icebp
inc
rcrb
inc
outsl
push
and
call
imul
or
shr
pop
adc
dec
sahf
out
mov
in
ds
dec
add
dec
test
outsb
ljmp
pop
addr16
sbb
lahf
cmpsb
pop
mov
jl
nop
cmc
fwait
jb
xchg
push
mov
pop
cli
adc
scas
lret
xchg
cmp
data16
push
and
mov
stos
fidivl
out
sti
or
imul
jns
movsl
dec
test
jecxz
push
stos
leave
lahf
das
mov
jmp
shr
test
or
dec
or
jnp
ja
mov
cld
xchg
sbb
aad
aaa
push
xor
pop
cmp
push
movsl
es
sbb
sub
sbb
dec
push
pop
loop
test
dec
mov
inc
mov
shll
cmp
rolb
dec
pop
pushf
fildll
dec
mov
sub
or
outsb
jecxz
sbb
lock
pop
cmc
aam
insl
add
cli
cmp
sbb
xor
adc
cmpl
ret
mov
ds
fisttpll
cmp
icebp
pop
mov
mov
mov
push
jb
push
test
jne
or
fxch
fidivrl
or
fisubrs
scas
pop
and
or
push
sub
ret
int
jbe
push
push
jne
add
lahf
jp
push
pop
out
hlt
cmp
or
cs
pop
mov
and
sti
sub
loop
lock
xchg
mov
jne
pop
cmp
out
test
or
aaa
lds
push
popf
jae
mov
push
xchg
repnz
push
xchg
inc
and
pop
xchg
xor
vmovaps
adc
fidivs
lods
jge
ss
mov
insl
cmp
or
loopne
mov
pop
je
push
nop
call
sahf
adc
insl
cmp
mulb
push
xor
mov
mov
rcl
xor
mov
inc
sub
sbb
fstp
push
push
jmp
push
rcll
or
push
push
inc
int
repz
jae
mov
inc
or
pop
sbb
pop
les
xor
ficompl
pop
inc
xchg
pop
xchg
dec
or
add
xchg
aas
repnz
data16
sub
xor
cmpsb
add
push
cltd
inc
je
jns
adcl
mov
xlat
inc
cld
iret
dec
fs
fnstsw
mov
adc
out
dec
outsl
cmp
adc
sbb
sti
shlb
imul
daa
outsb
jne
mov
subl
sub
dec
pop
je
inc
test
or
pop
add
idiv
push
addr16
jbe
ss
outsb
fwait
imul
and
into
int
mov
pop
mov
mov
mov
dec
out
in
scas
mov
stc
push
int3
jno
push
inc
pop
sbb
jecxz
clc
xchg
inc
pushf
cmp
xor
lret
shlb
sar
adc
daa
cmp
mov
out
xchg
mov
pop
lods
inc
cmpb
pop
gs
mov
lret
dec
xor
and
mov
fstpl
leave
or
cmpsb
mov
out
lret
adc
lret
xor
cmc
cmpsb
rclb
pop
adc
mov
jg
inc
pop
test
xchg
idivb
loop
in
lcall
adc
jecxz
aaa
mov
pop
jb
inc
pop
adc
jnp
into
dec
out
jge
xchg
fstl
mov
adc
or
in
adc
xchg
sbb
xor
xor
daa
push
es
test
xchg
and
mov
lock
fists
sbb
stos
and
decb
gs
xor
cmp
fwait
pop
aam
xchg
push
sub
imul
push
call
int
adc
iret
stos
call
jae
stos
jb
insb
adc
int
cwtl
arpl
jae,pn
out
push
insl
fimull
push
fwait
or
mov
cld
or
imul
movsb
xor
xchg
cmp
dec
or
or
inc
mov
dec
mov
cli
addr16
mov
jbe
push
pop
xor
xchg
out
into
adc
mov
cmp
icebp
push
cld
icebp
int
sbb
jns
ss
cmp
fnsave
fdiv
imul
sub
dec
jl
xlat
shlb
sub
ljmp
adc
and
sbb
or
aam
cmp
pop
and
and
mov
lret
adc
pushf
in
pop
push
lret
mov
push
mov
pop
lahf
data16
in
jle
cs
mov
movsb
out
cmp
or
push
adc
rcrb
pusha
cmp
cmp
cmpsb
movsb
lcall
addr16
xor
and
iret
inc
call
je
mov
jmp
into
loopne
pushf
jg
mov
imul
and
inc
add
mov
test
and
clc
into
sub
jae
or
ret
sub
and
xor
testb
xor
xchg
sbb
cmp
pushf
pushf
out
lock
enter
lea
test
jmp
ss
mov
adc
mull
and
in
xor
pop
rcl
cmp
fsubr
sti
xchg
dec
jg
aaa
xor
fisubrs
push
daa
enter
cld
jb
insb
loope
test
xchg
scas
xchg
negb
out
mov
dec
hlt
outsb
std
negl
cmp
gs
jb
inc
push
mov
lcall
cld
push
sub
outsb
dec
pop
pop
lahf
lds
and
cmc
lret
ret
mov
adc
xor
mov
dec
jle
mov
adc
aas
push
roll
mov
and
jecxz
mov
mov
mov
sbb
push
daa
loop
jno
and
cs
xchg
pop
jmp
mov
out
enter
mov
jp
and
pop
pop
data16
ja
xchg
fsts
lds
lock
mov
sbbb
out
cmp
mov
and
lock
xor
cmp
inc
inc
jle
sbb
stos
ja
inc
addr16
shrl
outsb
pop
scas
sbbb
aas
add
mov
arpl
xchg
cmpsb
mov
fwait
mov
ljmp
cmp
lret
dec
jmp
aaa
pop
jne
jp
push
push
sbb
out
lea
mov
push
jnp
das
sbb
imul
xor
int3
sub
out
stc
sub
mov
and
push
push
loope
or
mov
push
sub
sbb
imul
je
push
js
movb
or
sub
jp
and
sub
mov
mov
mov
lods
cltd
sbb
push
jge
leave
cmp
sahf
push
adc
push
sahf
push
arpl
jbe
daa
out
cmc
cmp
mov
scas
mov
cmp
test
push
jns
cmpsb
test
mov
xor
mov
loop
dec
shrb
jnp
xor
xchg
pop
jns
movsb
fiadds
adc
out
out
and
add
outsb
jnp
add
clc
mov
aaa
iret
inc
add
inc
jmp
lahf
je
push
add
xchg
bnd
mov
imulb
or
or
sbb
rorb
popa
loope
dec
push
dec
aaa
icebp
pusha
loope
mov
push
ljmp
pop
icebp
loope
xchg
add
insl
ss
daa
sti
adc
out
mov
sbb
icebp
imul
adc
xchg
push
push
or
pop
nop
std
ret
xor
mov
push
les
push
push
dec
mov
daa
adc
and
inc
jp
aas
xor
xor
cs
mov
js
fsts
inc
adc
pop
fsubr
push
xchg
cmc
sub
mov
das
jle
inc
add
push
ret
xchg
ret
mov
or
test
pop
iret
add
xchg
ss
cmp
cmp
clc
and
test
dec
fidivs
cltd
test
xchg
pop
int
pop
xchg
jns
cmp
adc
clc
or
fwait
outsl
jmp
inc
std
sub
mov
dec
xchg
add
cmp
push
inc
out
subb
cmc
std
xlat
loopne
sub
or
xchg
scas
popa
jle
jb
cmp
stos
push
shl
pop
pop
cs
negb
std
mov
inc
stos
sbbb
in
cmp
adc
lods
sub
push
mov
cmpsl
xchg
int3
aas
enter
repnz
cmp
xchg
rclb
repz
or
loop
aaa
sbb
dec
ret
jnp
shl
mov
xchg
mov
cltd
xchg
fcomp
pushf
test
inc
and
cmp
jae
mov
push
mov
cs
pop
mov
pop
jb
push
mov
inc
cmp
lods
cmpl
cmp
xor
adc
or
das
into
add
mov
mov
movl
or
mov
sbb
pop
xlat
mov
outsb
pop
insl
push
lea
pop
adc
xchg
sub
push
xchg
ja
int
testl
pop
mov
cmp
inc
dec
clc
push
movsl
int
xchg
mov
std
sahf
loopne
cmpsl
call
iret
jl
movsl
xchg
jne
jbe
cld
sbb
ds
add
jns
cmpsb
or
iret
std
cmc
and
xchg
ljmp
insl
cs
test
and
pusha
inc
xlat
and
mov
pushf
insl
fs
out
movsl
or
or
subb
xchg
pop
and
xor
push
or
mov
add
rcl
sub
aad
xor
or
cltd
push
adc
aam
or
mov
push
mov
pop
jl
test
scas
rolb
outsl
jno
adc
imul
jmp
sbb
xchg
shrb
xlat
adc
ret
notl
test
push
and
shll
inc
outsl
jmp
xchg
cltd
cli
rcr
push
dec
dec
das
inc
nopl
ss
loopne
dec
imul
cs
push
sub
or
xchg
dec
movsl
outsb
or
sub
mov
mov
pop
das
out
imul
xchg
xor
push
lret
dec
cmc
daa
into
inc
test
push
ljmp
dec
push
mov
cmc
fcmovnbe
movsb
iret
outsb
cltd
cmpsl
cmc
cmp
or
mov
inc
in
mov
push
mov
sbb
clc
outsb
mov
pop
aaa
outsb
adc
dec
jl
cmc
add
adc
cmp
or
fwait
lea
in
xchg
stos
into
mov
xor
push
and
clc
push
mov
push
jns
jecxz
sti
pop
xor
dec
out
bound
js
in
or
or
dec
or
jbe
shr
cwtl
es
mov
cmp
mov
dec
xor
mov
jo
xchg
mov
adc
xchg
mull
mov
add
xor
push
xor
scas
sub
out
idivl
stos
cmc
stos
xchg
js
inc
fwait
inc
ret
aas
ljmp
pop
sub
into
sub
push
out
sub
push
test
leave
iret
xlat
mov
xchg
sub
cmpsl
in
call
cli
enter
mov
add
mov
addl
push
sbb
ja
adc
inc
xor
loopne
adc
daa
int
cli
shlb
sti
leave
insb
xor
stos
jmp
xchg
daa
shr
xchg
pop
dec
adc
push
and
dec
idivl
push
sbb
loop
mov
movsb
ja
push
sahf
dec
or
push
lods
push
rorl
cltd
loop
or
cmc
xchg
xlat
leave
out
jbe
lds
mov
incl
imul
pop
iret
test
or
out
mov
mov
cmc
mov
lcall
sub
sub
out
cmc
mov
loop
mov
xor
dec
rcl
stos
pop
jae
xchg
cmovle
dec
sbb
adc
outsb
or
bound
cs
int3
inc
or
mov
int3
push
sar
jmp
push
dec
shrl
mov
cmp
mov
cmp
push
scas
pop
push
cmpsb
cmpsb
pop
mov
pop
ja
aas
mov
rcrl
ret
lcall
mov
cltd
sbb
xorb
adc
cltd
or
fldpi
hlt
jb
mov
test
imul
inc
push
out
and
or
push
das
and
push
push
sbb
cld
test
in
fwait
lea
negl
jno
das
hlt
jecxz
push
cltd
pop
cltd
cmp
push
jl
out
sub
mov
sbb
imull
stos
jge
imul
dec
imul
mov
mov
xchg
sub
mov
push
ret
imul
pop
scas
add
in
imul
ficomps
jo
jmp
inc
xchg
pop
jnp
push
or
sbb
sbb
jo
arpl
push
or
jp
xchg
pop
in
pop
dec
sbb
and
xchg
and
xor
jge
lret
mov
enter
decb
xor
push
cli
je
jns
lret
xor
add
cs
jnp
cwtl
in
add
popf
loop
test
loop
and
jbe
aas
je
lock
enter
in
into
push
pop
leave
or
out
lods
inc
cmp
and
push
xlat
jg
outsb
mov
ss
xchg
jp
xor
push
repnz
cwtl
sub
sub
jae
in
mov
xchg
adc
jae
mov
xor
shr
scas
mov
outsb
xlat
xchg
xor
sbb
dec
dec
jg
mov
loope
mov
or
sub
dec
cmp
stc
outsl
and
sbb
lea
daa
data16
int3
imul
pop
je
shrb
sbb
xor
or
call
mov
bnd
int
mov
or
cmp
hlt
imul
push
les
dec
std
mov
dec
test
adc
pushf
das
pop
xchg
or
out
clc
push
pop
xchg
pop
cmova
loop
cltd
fstpl
ffree
pushf
pop
cmp
cwtl
addr16
mov
dec
test
inc
jnp
mov
mov
xchg
dec
repnz
pop
pushf
imul
pop
fiadds
inc
mov
rcr
flds
or
sub
inc
xchg
push
cs
inc
pop
imul
aas
sarl
testb
test
jp
int3
inc
jbe
hlt
pop
adc
dec
out
lcall
test
xor
xor
inc
outsb
xchg
into
pop
or
inc
ds
int3
cmp
subl
lods
push
sahf
iret
sub
in
into
mov
push
sub
jg
lret
popa
cltd
je
xlat
push
sahf
jbe
outsl
jae
fists
push
or
add
dec
imul
pmaddwd
push
daa
jle
lea
jo
test
outsl
and
sub
cmp
into
lods
movsl
cmp
test
inc
imul
fnstcw
nop
jo
js
imul
pop
mov
int
or
mov
dec
inc
out
cmp
mov
jns
or
push
mov
cmp
andb
stc
xor
daa
jnp
pushf
add
pop
sbb
or
pop
xchg
int
cmp
js
out
xchg
popa
addr16
mov
push
mov
inc
repnz
in
jecxz
mov
daa
or
lds
out
mov
iret
sub
push
sub
dec
push
and
jmp
mov
dec
and
jbe
sub
xchg
sbb
lret
cmc
lret
pop
xchg
sub
out
xorl
fnstsw
mov
cmp
inc
dec
in
mov
sbb
enter
enter
add
or
js
mov
and
out
out
roll
das
sub
pop
adc
or
decb
cs
frstor
jmp
mov
cmc
jo
mov
sub
xor
jge
mov
adc
push
pop
loopne
dec
loop
leave
inc
adc
bound
mov
cld
cwtl
in
sub
mov
ljmp
addl
xor
test
lcall
adc
inc
stc
call
movsl
int
iret
das
add
ficompl
out
adc
cmp
add
xor
insb
push
hlt
nop
jb
xor
ja
or
pop
mov
xor
popf
jo
in
inc
ss
push
lods
loope
push
aas
adc
dec
pop
push
maskmovq
testl
ja
sbb
mov
int3
ret
jae
and
scas
fiadds
mov
lret
pop
lahf
or
imul
cmpsl
int
insl
mov
push
add
pop
movsb
pop
leave
jmp
xchg
or
les
jge
aaa
adc
jnp
aas
pop
push
lods
mov
cmp
pop
mov
sub
push
inc
add
sub
shl
sub
xchg
pop
cmp
pop
dec
sbb
push
and
dec
lret
xchg
sub
sbb
jg
lahf
fsts
push
rcrb
into
iret
sahf
add
or
and
aaa
mov
lods
dec
stos
adc
inc
dec
out
xor
push
cmpsb
imul
jmp
shlb
outsb
sbb
repnz
xchg
int
xor
movd
or
push
icebp
mov
daa
jo
adc
icebp
sysret
rclb
xchg
mov
mov
xchg
dec
icebp
sub
pushf
inc
sub
dec
pop
sub
scas
and
outsl
cmp
insl
lock
clc
pop
jb
into
mov
lcall
pop
cmp
rolb
das
jp
inc
jno
iret
cmp
jge
ss
cmp
out
jnp
inc
mov
into
decb
cmp
int3
push
push
cs
push
jmp
adc
fdivs
push
wrmsr
or
or
shrb
mov
repnz
lods
mov
inc
xor
push
sbb
cmpsb
jo
mov
lea
jp
cmp
inc
mov
sbb
pop
aaa
icebp
testb
xchg
jbe
cmp
ret
pop
sub
xor
iret
scas
and
outsl
cmp
insl
lock
pop
jb
into
mov
imul
rolb
das
dec
icebp
inc
jno
iret
cmp
icebp
ss
cmp
out
dec
icebp
inc
mov
into
into
mov
or
int3
push
push
cs
jb
nop
or
adc
fdivs
push
wrmsr
or
or
shrb
aad
repnz
lods
mov
inc
xor
push
cmp
cmpsb
jo
mov
lea
jp
pop
scas
ror
sub
mov
mov
idivl
and
add
adc
mov
imul
ja
push
stc
pop
fsubrl
and
das
mov
jb
int
in
mov
mov
xchg
les
lea
pop
aaa
mov
sbb
push
mov
adc
mov
and
xchg
mov
add
outsl
dec
imull
cs
pop
or
cli
and
addr16
and
sahf
xchg
loopne
inc
jg
push
push
inc
or
sub
xchg
push
cmp
adc
mov
mov
scas
stos
enter
es
mov
cmp
sbb
jns
xor
aaa
adc
dec
xor
ljmp
repz
jb
xorb
mov
push
push
scas
mov
es
fisttpll
cs
sbb
outsb
xor
fs
inc
jmp
adc
jl
testb
jno
scas
xchg
adc
cmc
cmc
lods
jle
push
cmp
sub
cmpsb
xchg
mov
mov
sub
mov
ss
xchg
clc
test
adc
and
repnz
or
lods
cwtl
pop
dec
xchg
dec
scas
mov
sahf
mov
or
adc
mov
adc
sub
xor
dec
imul
sub
cmpsb
mov
dec
fisubs
test
sub
sub
or
pop
mov
sbb
mov
es
jae
dec
out
jne
and
sub
push
mov
dec
xchg
and
bnd
cltd
cmp
scas
out
popf
daa
sti
push
js
imul
push
xor
imul
mov
sub
dec
pop
xchg
xchg
pop
push
xor
inc
pop
out
dec
xchg
nop
or
mov
pop
xor
jp
push
addr16
xor
jbe
cli
cli
pop
mov
dec
jp
xlat
daa
cli
out
mov
imulb
mov
push
pop
mov
or
push
test
dec
jo
rcrb
shlb
sub
sahf
daa
add
cltd
mov
xor
xor
mov
cmp
dec
inc
cs
out
adc
and
dec
cli
inc
int3
or
pop
dec
nop
aam
out
sub
pop
xor
out
jmp
cli
dec
pop
out
xor
arpl
sub
pop
jo
dec
popf
sub
push
mov
data16
and
js
into
hlt
jmp
das
xor
mov
lret
pop
into
call
mov
nop
sti
sbb
xor
inc
cmpsb
insl
test
cmp
std
mov
call
jb
or
ffree
push
inc
pop
loope
imul
call
xor
mov
push
add
dec
inc
mov
and
mov
popf
mov
inc
in
dec
stc
lahf
scas
xchg
idiv
lret
xchg
push
popa
lods
pop
lcall
ljmp
jl
mov
mov
daa
mov
call
movsb
mov
pop
inc
addr16
sub
sahf
sbb
jns
mov
daa
loop
enter
cmpsb
call
int3
sub
pop
neg
xor
jb
lds
ja
pop
ja
dec
shr
into
ds
jg
outsl
es
push
je
cltd
mov
and
imul
or
push
and
mov
dec
fisubrs
jmp
cmp
push
sbb
pop
sub
xchg
xchg
outsb
movb
int
sbb
inc
sbb
outsb
mov
add
push
xlat
xchg
push
arpl
ja
into
loop
imul
jle
push
or
test
ljmp
leave
cmpsl
push
cltd
pop
out
outsb
mov
call
sub
jnp
jns
mov
mov
mov
int
incl
inc
sbb
aas
and
and
push
ret
sub
ss
mov
inc
flds
call
dec
bound
add
das
inc
fwait
cmp
outsl
gs
mov
push
jmp
pop
jns
popa
sub
movsb
jns
dec
cld
push
nop
xlat
pop
and
sbb
mov
shrb
xchg
in
or
rolb
and
inc
and
icebp
xor
and
mov
jo
sub
pop
mov
sub
enter
or
in
xor
int
xlat
aam
icebp
popa
cmp
adcb
jge
insl
rcrb
cmp
and
push
mov
lock
dec
sbb
xchg
cld
cmp
cs
lret
inc
aas
cmpsl
sbb
fcmovu
in
inc
mov
sbb
xchg
rcrb
adc
jg
mov
cmpsl
xchg
xchg
lret
in
dec
icebp
push
insb
lret
adc
pusha
xor
cmc
cmp
pop
dec
loopne
add
lock
pop
imul
mov
testb
push
pop
cmp
daa
cld
mov
int3
decb
sahf
jbe
pop
mov
and
inc
push
and
dec
push
push
scas
sub
pop
sub
dec
in
dec
lea
icebp
xchg
xchg
cmp
sub
scas
jbe
fcomps
jp
faddl
xchg
sub
and
lret
and
add
and
add
push
mov
sub
mov
int
or
int
insl
and
mov
out
or
push
icebp
scas
adc
pop
adc
int
bound
cmp
or
mov
pop
sub
jg
rolb
in
imul
dec
outsb
cmpsb
jp
cmp
mov
dec
bound
ds
xor
or
xor
aad
cwtl
out
mov
lahf
orb
shl
imul
lcall
mov
jo
mov
movsl
fdivs
xchg
ljmp
or
lods
jle
jecxz
scas
addr16
das
inc
inc
push
inc
xor
shlb
push
add
adc
sar
push
shll
lcall
out
xlat
fsubrs
gs
lods
fsubrs
and
ret
dec
mov
add
lods
lcall
add
ss
cmp
ss
enter
jnp
push
icebp
insl
dec
scas
in
mov
mov
gs
daa
pushf
ljmp
orl
call
ret
sarb
fcomps
pop
pop
rcrb
jmp
pop
movsl
ds
and
and
push
sarb
loopne
pop
sti
rorb
jo
cmp
xchg
sbb
mov
cli
push
movsl
loopne
xor
sbb
mov
push
cmpsl
mov
dec
mov
popa
dec
test
jne
xor
das
pop
xlat
mov
inc
xchg
pop
dec
dec
shll
or
and
fidivs
add
push
cmp
mov
je
clc
adc
rcll
gs
movsb
jp
xchg
push
cmc
notl
lods
dec
xor
push
pandn
jle
cltd
or
and
sbb
icebp
xor
sbb
repnz
xchg
pop
jne
dec
mov
jo
in
test
int
pop
out
mov
pop
jo
jae
mov
scas
movsl
jne
or
mov
cmp
and
loopne
outsb
mov
jne
popl
jo
adc
nop
mov
lods
ds
jbe
xchg
sahf
dec
cmc
inc
cmp
js
pop
jle
dec
cmc
testb
rcll
scas
lds
lock
inc
sub
in
sbb
mov
add
push
aaa
lret
mov
add
dec
push
bound
js
test
inc
into
cld
xor
leave
popa
mov
test
test
in
inc
test
pop
nop
imul
fistpl
aad
sahf
push
xchg
repnz
idiv
cmpb
sbb
xor
mov
pop
push
xor
aaa
jp
aad
jo
mov
jmp
push
mov
or
lock
mov
aad
and
and
aam
popw
dec
jne
je
sbb
add
jae
xchg
dec
mov
or
pop
cli
ja
or
xchg
inc
xor
dec
pop
push
repz
pop
push
pop
mov
jl
icebp
cs
push
adc
rorb
xchg
jbe
adc
and
jae
jp
push
cli
cmp
inc
ja
jle
push
fldz
jnp
sahf
or
mov
mov
movsl
add
js
and
adc
out
xor
cltd
xor
dec
cmpsb
testb
mov
push
xchg
push
push
mov
cwtl
es
xchg
out
stc
push
or
outsb
or
xchg
sbb
xchg
sbb
push
js
dec
hlt
repnz
call
xchg
lea
add
xchg
imul
cltd
sub
ss
jae
hlt
xchg
push
dec
fmull
mov
jns
aad
cmp
fcoms
aad
sbb
adc
pop
repnz
es
or
cmpsb
xor
sub
insl
push
adc
cmc
lret
inc
and
cmp
imul
fsubs
dec
insl
test
es
mov
mov
out
push
mov
and
outsl
nop
movsl
push
loope
xor
dec
jecxz
mov
lods
cmp
data16
mov
sbb
shl
pop
xchg
fstps
push
jl
clc
data16
push
mov
inc
ljmp
iret
jno
and
leave
mov
loop
push
cmpsb
add
adc
repnz
add
xlat
inc
pop
lahf
out
mov
xchg
out
mov
test
pop
fidivs
mov
jmp
daa
sub
cld
arpl
jmp
xor
in
mov
jno
sbb
pushf
lret
inc
lods
js
or
enter
inc
xchg
shl
movsb
or
pop
sub
pop
div
jp
mov
fbld
and
add
popa
sub
in
xchg
xchg
and
cmpb
in
sti
pop
sub
rcrl
pop
outsb
pop
jecxz
popa
sbb
sbb
mov
in
mov
xchg
clc
cltd
std
push
mov
test
call
test
mov
push
std
shll
int3
adc
jne
rorb
ss
xabort
fsubrl
rcll
or
adc
rorl
in
jae
cmpsl
int
sti
xchg
cld
aam
xchg
sbb
xchg
sbb
lods
mov
insl
addr16
gs
mov
repz
xor
mov
xchg
adc
and
in
aas
sbb
jge
dec
sub
push
jg
out
adc
movsl
xchg
fadd
dec
push
adc
push
shr
jl
mov
and
or
lock
stc
scas
popa
or
int3
mov
das
je
sahf
out
pop
xor
out
jns
inc
ja
inc
or
xchg
std
mov
leave
fs
mov
inc
in
sbb
dec
or
push
aam
cmp
push
xor
xor
shl
sbb
adc
ret
in
mov
leave
bnd
cmp
cmc
movsl
xchg
cmp
sub
dec
and
dec
stos
sar
add
imul
or
mov
xchg
popa
out
test
aad
and
data16
out
cmp
mov
and
jbe
dec
mov
mov
sahf
push
loope
inc
aad
repnz
inc
test
sbb
adc
dec
xor
jno
fstpt
sti
jl
mov
adc
inc
jo
pusha
arpl
cmp
mov
sub
add
dec
xor
push
push
and
dec
lret
faddl
mov
inc
insl
je
jbe
or
add
clc
pop
fwait
cmpsb
shl
fcompl
mov
stos
mov
jne
dec
cwtl
sub
xchg
lret
mov
push
push
push
lods
test
cmpsl
sub
test
pop
mov
sbb
cli
ret
stos
dec
jecxz
sbb
inc
pop
mov
sbb
pop
clc
xor
shl
ret
pop
mov
test
inc
es
adc
rorl
xor
or
ljmp
movsb
dec
or
cmp
jns
and
pop
adc
add
jbe
movnti
in
sti
mov
xor
shl
and
mov
sbb
roll
inc
lea
in
inc
jno
scas
adc
dec
fnstenv
inc
ds
jns
pushf
and
adc
and
ret
inc
repz
sub
mov
or
and
lock
or
int
fstpt
stos
rcl
das
aad
ljmp
xor
loopne
add
aaa
aad
arpl
lcall
loopne
adc
and
addr16
xor
aad
push
cld
divb
or
sub
jo
lret
fstps
out
das
mov
pop
xchg
cmp
adcl
aaa
int
and
dec
jp
xchg
test
dec
push
cmpsl
jne
sbb
mov
or
add
xchg
repnz
mov
pop
jo
lock
xor
ljmp
push
sub
xchg
xor
scas
xor
xchg
stos
testl
dec
add
mov
out
or
push
pop
into
in
sub
js
ljmp
or
fwait
out
pop
aad
imul
xchg
out
les
xchg
sub
xchg
sbb
adc
daa
out
and
daa
orb
xchg
xchg
fsubrl
jb
popa
imul
mov
mov
jp
popa
popa
adc
adc
xchg
mov
cmp
cmpsl
xorb
enter
gs
js
jbe
sub
imul
daa
add
popa
xchg
inc
mov
and
and
dec
outsb
out
push
leave
hlt
inc
lret
xchg
outsb
fdivrs
mov
mov
js
cs
or
data16
mov
ja
adc
pusha
inc
dec
mov
adc
sub
dec
jns
sbb
adc
orl
sti
sub
xchg
test
mov
scas
bound
arpl
adc
aaa
dec
and
push
push
xchg
rclb
mov
lds
fs
fdivrl
cli
out
add
out
data16
gs
xchg
pop
jg
mov
adcl
mov
mov
subb
test
cmc
fcmovb
rcl
push
fildll
sub
stos
fdivrs
mov
repnz
ja
mov
out
imul
ljmp
mov
adc
inc
cmp
and
xchg
sub
outsb
fisttpll
aam
pop
pop
ljmp
jle
and
inc
jmp
cmp
mov
dec
testb
or
xchg
fwait
mov
jo
sub
sbb
fldcw
push
lds
pop
push
call
iret
into
cmp
repnz
mov
pop
xor
dec
adc
xor
lcall
dec
arpl
sub
fiaddl
pop
inc
js
fidivrl
daa
or
imul
pop
data16
push
add
stos
loopne
xchg
xchg
xchg
aam
add
cmpsb
jnp
or
and
jl
inc
sub
jge
lcall
out
mov
dec
daa
call
stos
les
jg
dec
cld
shll
mov
jns
ret
bound
test
xor
pop
xchg
add
mov
push
sbb
or
mov
cs
sub
mov
pop
inc
nop
jb
jge
or
push
or
push
adc
lods
xchg
shlb
adc
sbb
stos
mov
shrb
hlt
subb
sbb
negb
fucomp
mov
jno
or
mov
outsl
dec
arpl
insl
ja
divl
std
fsubrs
push
adc
jbe
or
es
js
cmp
adc
dec
xor
lea
sbb
imul
sbb
mov
or
cmp
dec
mov
push
clc
repz
aaa
push
push
mov
xorb
jp
jle
call
lcall
jg
xchg
mov
arpl
cmc
dec
out
push
adc
sub
push
jno
xchg
lahf
ss
jo
mov
jg
ffree
mov
jge
jle
cmp
adc
jp
xor
loope
shlb
adc
mov
lea
mov
fnstsw
xchg
push
cmp
das
lods
pop
aam
or
and
xchg
into
shlb
push
xchg
jne
testl
call
or
or
imul
daa
mov
mov
clc
aas
jbe
pop
sbb
subb
hlt
jns
lcall
add
mov
and
mov
mov
inc
cmp
mov
cmpsb
xor
xchg
jne
lea
mov
outsl
push
das
or
jno
inc
or
ret
stos
cmp
xchg
js
push
rorb
iret
or
xchg
and
outsb
scas
or
outsl
imul
test
xor
andl
mov
cmp
cmp
leave
sbb
lea
mov
dec
xchg
inc
daa
and
lret
sarb
mov
movsl
cld
jnp
inc
and
push
jbe
mov
push
or
add
push
shr
sub
insl
out
rol
jae
dec
jne
jecxz
sbb
push
adc
sub
clc
jmp
ljmp
fdivl
scas
movsb
cs
or
jns
or
push
push
inc
cmc
ffreep
repz
shl
jp
jmp
dec
mov
je
int3
xchg
jg
scas
sbb
popa
rcrl
cs
sbb
push
jecxz
gs
cmp
js
jns
jnp
outsl
and
iret
sbb
or
insb
inc
fiadds
or
inc
fs
loope
mov
pop
xor
fs
shll
sub
mov
mov
ja
add
dec
mov
movsl
cltd
fildll
arpl
jp,pt
mov
cmp
mov
xchg
lret
and
mov
ljmp
fwait
mov
sub
in
dec
mov
jns
jmp
das
inc
dec
xchg
lods
subl
xor
test
mov
outsb
adc
leave
rcrb
fucomp
jecxz
cmp
mov
out
sbb
daa
push
movsb
pop
jbe
movsl
xor
data16
mov
mov
dec
jge
addl
and
daa
sahf
push
out
sub
dec
inc
sbb
ss
fcoml
mov
fdivs
aas
dec
adc
adcb
out
sub
pop
fmull
mov
xchg
dec
outsb
mov
in
xchg
dec
fsubrs
test
jbe
loopne
inc
push
notb
push
ljmp
xchg
movq
pop
js
push
divl
jg
pusha
mov
mov
mov
lea
jp
dec
push
mov
inc
push
jns
mov
jns
lcall
in
xlat
fnstsw
push
adc
dec
sbb
orb
sub
dec
gs
icebp
xchg
je
popf
xchg
cli
push
cltd
mov
ret
or
dec
xor
cmp
jmp
js
dec
icebp
cwtl
aad
and
push
adc
fnsave
cmp
cltd
mov
xor
and
inc
sub
mov
inc
xchg
outsl
sbb
adc
pop
mov
imul
cmp
mov
sbb
xchg
test
jns
cli
push
mov
xchg
push
cmp
mov
into
pop
fs
lods
mov
jno
and
cmp
inc
add
xor
sub
cmpsb
mov
ljmp
or
stos
cmpsl
in
push
das
aaa
add
jns
stos
mov
aas
pop
int
add
lea
push
repz
dec
inc
pushf
dec
stc
lods
shll
scas
out
push
out
call
sbb
scas
es
call
and
sahf
and
sub
imul
notl
lods
sub
popf
or
push
jno
pop
sbb
loopne
movsl
adc
sbb
cli
js
xchg
scas
jnp
out
mov
or
mov
lock
sbb
dec
xchg
mov
cmp
out
add
test
test
xchg
mov
ret
pusha
ljmp
repnz
cmpsb
jp
lcall
and
aad
xchg
dec
leave
mov
fs
mov
stc
mov
sub
in
xor
xor
push
dec
ret
inc
sub
dec
mov
fimuls
mov
push
mov
mov
and
mov
dec
jns
jo
cmpsb
mov
rcrl
shrb
dec
cmp
adc
xor
jl
or
inc
cmp
andb
push
mov
sub
jb,pn
fldl
leave
repz
ja
jae
xor
xchg
repz
std
jp
jb
xchg
fldt
pop
int
pop
cs
push
loop
rolb
cmp
test
push
mov
adc
and
popa
mov
dec
pop
mov
fldcw
stos
mov
hlt
sbb
lcall
cmp
mov
sbb
cli
xor
xchg
faddl
mov
fcoml
scas
aad
subb
push
cltd
pushf
push
nop
shll
jbe
inc
or
push
inc
dec
push
cmpsl
jl
jbe
outsl
pop
push
imul
cmp
jp
outsb
or
icebp
pop
outsb
aaa
int
outsb
adc
dec
pop
jbe
and
incl
pop
test
js
dec
jg
idivb
push
inc
or
in
jle
pop
daa
dec
pop
js
jne
out
inc
stos
mov
jns
cs
jne
hlt
je
jl
mov
clc
out
add
dec
jl
in
inc
rol
dec
repnz
arpl
dec
push
jnp
aaa
push
lea
sub
jge
sub
outsb
leave
add
mov
add
push
scas
leave
sub
cmp
imul
jp
add
popf
lcall
cltd
ja
mov
outsl
mov
xchg
arpl
add
out
sub
push
jno
outsb
hlt
push
popa
notl
inc
mov
lods
sub
lea
mov
pop
scas
ss
mov
add
test
pop
and
jne
jl
cltd
mov
std
faddl
xchg
sub
jmp
sbb
dec
mov
sbb
sbb
call
sahf
sub
subb
mov
gs
pop
scas
inc
leave
les
in
jbe
jo
or
or
pop
dec
fisttps
daa
hlt
into
mov
cmp
lods
inc
es
inc
repz
sbb
adc
push
jl
icebp
cmp
xchg
push
mov
sbb
adc
mov
xor
mov
jp
pop
adc
push
xchg
fsubrs
fildl
out
leave
cs
dec
and
daa
cli
sahf
int3
jp
xor
inc
scas
pop
jb
add
cmpsb
ja
pop
cmpsl
insb
negl
sub
popf
test
cmp
dec
das
jl
cmpsl
cmp
shll
jbe
dec
and
sbb
repz
xchg
std
fldcw
or
inc
pop
cmpsb
and
lds
push
mov
jle
jl
pop
sub
or
out
movsl
or
insb
dec
cmpsl
cs
mov
dec
pushf
int
xor
es
lods
int3
xlat
jb
adc
aaa
mov
xor
out
ss
jg
mov
xchg
mov
test
xor
dec
sub
mov
cmp
inc
sub
movsb
sbb
popa
ret
lock
loope
jle
cwtl
push
inc
xchg
cli
or
testb
pusha
imul
mov
rorl
inc
addb
jnp
adc
dec
pusha
adc
dec
inc
cmp
jae
add
adc
sbb
shrl
popa
cmp
lds
dec
stos
movsb
and
pop
je
ss
add
xor
inc
push
inc
insl
push
nop
adc
xchg
xor
push
add
dec
mov
out
sbb
lods
fsubrl
inc
mov
jmp
dec
lcall
push
push
cmc
lea
or
pop
out
jmp
fldcw
sahf
dec
sbb
dec
add
bound
roll
insb
push
mov
lods
adc
mov
rorl
sub
adc
mov
mov
lahf
pop
pop
or
lcall
dec
xchg
pop
push
pop
xor
rcrl
xor
or
cwtl
sub
sub
aad
add
test
sbb
or
or
push
cmpsb
cwtl
pop
insb
fsubl
jbe
xor
out
jmp
stos
adc
inc
or
push
and
pop
imul
xchg
movsb
xchg
dec
fcoml
popa
cmpsb
test
cmp
je
push
cmpsb
inc
xchg
lods
lret
cltd
es
or
bound
sbb
outsl
repz
inc
inc
jmp
out
lret
es
pop
push
inc
lods
push
adc
cld
or
fcmovb
xor
in
icebp
inc
cmp
jb
push
notb
mov
stc
or
sbb
push
enter
stos
pop
repnz
inc
sbb
enter
jge
enter
mov
leave
pop
cmp
loopne
mov
lea
cmpsl
cmp
dec
jbe
jmp
notl
or
lea
jmp
dec
int3
fidivs
out
push
dec
mov
int
lret
mov
aaa
jge
aam
push
push
inc
pushl
inc
push
iret
cmp
dec
movsl
and
cmpsb
faddl
mov
cltd
push
sub
lods
xchg
cmp
jmp
cmp
or
xchg
add
stos
cmpsl
cmp
insl
xlat
sbb
fcmovnbe
iret
xrelease
cmp
es
dec
pop
xor
call
into
scas
inc
inc
mov
lcall
insb
testl
insl
mov
xchg
movaps
imul
stc
loope
int
idivl
inc
insb
fidivrl
enter
jbe
mov
jno
or
das
mov
es
repnz
lret
xchg
sti
imul
lods
ja
cmpsb
loopne
jp
sbb
fstl
out
in
scas
out
jmp
insb
cs
hlt
cmc
pop
xchg
inc
dec
mov
jl
repnz
es
imul
daa
jb
mov
je
mov
cmpsb
cld
ja
xchg
xor
scas
and
xchg
mov
daa
dec
dec
xor
xchg
xchg
mov
jp
mov
pop
repnz
shl
testb
icebp
int3
scas
mov
int
mov
int
scas
xchg
jbe
cli
int
dec
dec
mov
dec
push
leave
inc
pop
dec
imul
mov
jno
and
jmp
cld
cs
aad
gs
xchg
mov
std
lods
lock
clc
pushl
xchg
cmp
cs
lea
cltd
lea
pushf
or
jb
dec
push
mov
dec
or
or
cmp
jl
push
enter
enter
enter
cmpsb
and
aaa
shll
mov
je
mov
cmpsl
push
sub
cmpsl
pop
pop
inc
add
movsb
or
ret
inc
add
dec
dec
push
movl
push
scas
jns
pop
scas
roll
push
loope
push
sub
sub
cmpsl
nop
pop
xor
jbe
fstl
jle
insl
xchg
xorb
test
adc
int
into
or
dec
mov
dec
mov
cmp
rorb
mov
or
mov
or
mov
or
push
mov
add
mov
dec
push
mov
std
push
repnz
mov
imul
in
jb
leave
lock
leave
hlt
or
lret
fdivs
xorb
push
sahf
sbb
or
mov
xchg
pop
test
scas
jns
cmp
dec
fs
sbb
fcompl
jnp
adc
sub
int
test
ret
xchg
movsb
repz
cltd
sbb
inc
jge
mov
sub
and
insl
mov
mov
stos
test
fists
stc
rolb
lea
inc
pop
adc
test
jecxz
fmulp
mov
cmpsl
mov
das
ret
fidivl
cmp
fsub
or
mov
repnz
jno
jo
jns
gs
pop
test
ss
out
jns
cli
popf
inc
mov
mov
loope
add
aas
push
jecxz
enter
pop
ret
cmp
test
push
aam
jecxz
fistpll
ja
xor
add
or
cmp
jmp
cmc
jmp
aam
xchg
daa
lcall
test
sti
mov
jne
scas
mov
out
scas
sarb
int3
test
ss
jbe
adc
stc
dec
add
jp
rol
out
daa
jecxz
ret
add
call
inc
adc
imul
pop
mov
pop
or
pop
xchg
add
test
dec
sub
iret
mov
push
inc
xchg
sub
popf
call
jge
in
and
in
and
pop
and
js
fistl
adc
loopne
loop
mov
or
outsl
jecxz
enter
ja
cmpsl
in
or
dec
mov
add
rorb
sbbb
sbb
clc
xor
mov
movsl
std
fildll
sbb
clc
or
adc
xor
in
adc
jne
test
cmpsl
loop
cwtl
sbb
int
push
mov
xchg
stc
es
in
out
sbb
dec
adc
sbb
mov
lea
repnz
outsl
dec
lods
fwait
jno
sbb
repnz
pop
ss
xchg
es
adc
bound
adc
inc
aaa
xchg
adc
ds
insb
sub
or
insb
dec
sub
ret
jbe
mov
test
cmc
mov
dec
push
push
aas
dec
sbb
fdivr
sbb
repnz
jecxz
aas
pop
mov
xlat
mov
hlt
addl
and
insb
push
daa
cmc
pop
dec
lcall
imul
dec
sti
ss
hlt
lea
cmp
cs
dec
adc
jbe
loope
out
cmpsb
mov
js
shlb
lcall
call
daa
out
mov
and
or
shlb
das
cltd
fwait
sbb
outsb
dec
jo
pop
push
and
mov
cld
push
jo
lods
loop
cmpsl
adc
cld
xor
scas
cmpsb
add
cmp
mov
mov
adc
into
xchg
push
xchg
icebp
pop
mov
outsb
loop
fs
and
outsb
jp
add
jle
jne
push
pop
pushf
push
mov
inc
insl
cwtl
out
in
cmp
cli
dec
push
fisttpl
lods
mov
int
call
pop
outsb
push
dec
add
adcb
sub
cmp
gs
in
dec
cli
fildll
sbb
add
xlat
add
insb
and
into
pop
mov
adc
mov
pushf
xchg
or
mov
inc
add
mov
xor
imul
adc
pushf
aam
daa
test
out
fwait
and
icebp
or
cmp
cli
jbe
and
push
cmc
mov
mov
andl
inc
jecxz
lcall
lea
jno
fwait
sbb
jmp
or
imul
pop
sbb
pop
jne
and
dec
jnp
xchg
or
scas
jge
adc
xor
and
dec
stos
pop
rcr
adc
out
movsb
aad
stos
call
pusha
icebp
sbb
or
inc
cmpsl
sbb
jno
stc
bound
nop
es
or
xchg
not
dec
stc
stos
insl
rcrl
enter
jne
popa
mov
cld
inc
enter
xchg
lock
lock
enter
sub
jae
push
imulb
cmp
ret
add
leave
ficompl
mov
mov
jo
or
jbe
jnp
jno
pop
xor
or
mov
stos
jnp
lahf
lock
add
inc
pushf
int
sub
xor
loopne
aad
jnp
cmp
clc
aad
shll
sub
shrl
out
es
cld
int
add
mov
iret
push
xor
mov
push
dec
stc
roll
jp,pn
fbstp
mov
push
aaa
pop
mov
dec
enter
lea
add
dec
pushfw
ret
hlt
add
into
mov
mov
jl
mov
adcb
pop
jge
inc
xchg
pop
std
mov
lcall
push
cmp
in
scas
cmp
lretw
ja
pop
insw
mov
pop
sub
inc
sarb
jno
sbb
mov
cmp
xchg
enter
push
insl
add
jp
aad
or
daa
mov
mov
lock
xor
lret
hlt
imul
ss
mov
cli
mov
and
push
sub
stos
push
jge
sub
aas
in
mov
clc
push
test
or
and
aam
outsl
xchg
xchg
xchg
mov
cmpsl
lret
insl
mov
cmp
xor
pusha
int
ja
cmpsl
push
je
and
nop
jl
push
xor
fists
ss
xchg
arpl
fstps
inc
leave
push
adc
imul
add
dec
aad
testl
loopne
aaa
lea
or
sub
push
ljmp
arpl
xchg
leave
test
push
out
inc
insl
dec
inc
push
cli
mov
and
lcall
mov
outsl
mov
sub
std
nop
or
inc
sbb
sub
pop
lret
jnp
rolb
mov
adc
shll
push
fldcw
jb
jns
mov
xchg
mov
mov
fs
bound
popf
outsb
hlt
dec
pop
out
jp
dec
mov
popf
cld
sub
mov
lahf
dec
xchg
or
cmp
xor
notl
add
cs
and
mov
loop
adc
push
adc
leave
clc
sub
orl
push
jno
insb
jne
hlt
dec
iret
shrb
adc
inc
dec
pop
cli
xchg
adc
fxch
outsl
inc
out
add
mov
aad
scas
cli
inc
ret
adc
lods
jmp
or
sub
or
xchg
cmc
xchg
adc
shlb
js,pn
mov
xchg
fimull
into
mov
pop
stos
push
xchg
jbe
pop
xchg
lcall
xchg
sub
mov
push
lods
lcall
xor
xchg
push
aaa
lds
out
inc
ss
or
lcall
js
sahf
push
cmp
cmp
cltd
mov
js
test
or
adc
out
jne
popa
scas
adc
les
into
pop
imul
fdivrs
into
out
rolb
pop
in
ffreep
push
das
jae
xchg
xorb
adc
in
dec
ljmp
out
or
sbbl
adc
std
outsl
adc
and
stos
jnp
fs
mov
mov
mov
adcb
and
mov
popl
bt
enter
frstor
ficoms
mov
jge
fisubl
jg
lret
outsl
jbe
cmpsb
jge
repz
lods
cmp
rorl
mov
fisubs
pop
rorb
movsb
int
xor
outsb
repz
push
ss
or
mov
shlb
mov
inc
push
xor
ret
cmp
mov
lock
lds
inc
aad
fwait
sahf
outsb
xor
dec
ret
ljmp
das
xchg
cmp
inc
aas
ds
out
gs
jle
stc
or
loope
sub
xor
leave
xor
mov
jno
lret
cmp
jge
sub
cld
fstpt
push
nop
cmp
dec
arpl
daa
push
xchg
aas
pop
inc
sbb
or
mov
sub
jle
dec
pop
popa
jb
and
sub
mov
movsb
mul
pop
push
xchg
stc
xor
fsubrl
fcoms
movb
xor
add
test
les
fiaddl
mov
cmp
out
pop
outsb
shl
outsl
mov
xlat
clc
fisubl
roll
mov
cmp
imull
or
or
movsl
mov
mov
lahf
lea
push
xor
mov
aad
jmp
mov
imul
out
cmc
mov
pop
out
jle
into
stos
shl
scas
mov
stos
fisubrl
imul
cs
push
adc
jb
jge
test
xchg
pop
cli
push
int
inc
mov
add
xchg
out
sub
mov
cli
xor
cmp
cli
test
xchg
adc
daa
add
fucomip
movsl
es
lret
dec
repnz
ret
out
filds
mov
ja
jbe
fwait
in
mov
mov
fwait
dec
es
mov
and
rorb
scas
icebp
add
sbb
mov
jo
or
in
mov
sub
push
cmp
jle
lods
lods
pusha
aad
push
mov
fcmovne
in
sbb
push
repnz
arpl
insl
lcall
test
sub
in
pop
not
push
out
mov
fisubs
or
sbb
out
push
xchg
cmpsl
inc
xchg
push
lret
aad
mov
sbb
mov
add
out
adc
xchg
stos
jp
pusha
pusha
mov
pushf
mov
es
jmp
dec
mov
int3
mov
or
cltd
loope
scas
inc
cltd
push
cmp
cmpsl
push
cli
or
xchg
out
hlt
fwait
mov
andb
xor
inc
repnz
and
mov
jmp
inc
sbb
adc
cld
or
mov
cmc
fdivrs
jo
xchg
cli
pushf
in
jns
mov
std
leave
iret
rcrl
insl
ret
fists
mov
adc
enter
mov
jp
sbbl
cwtl
mov
test
mov
ljmp
xchg
andb
ret
sbbb
push
rol
cmp
sahf
mov
and
push
mov
int3
sub
out
xchg
xchg
fisttps
out
add
stos
add
push
xchg
and
pop
or
enter
mov
push
int3
filds
cmp
loopne
data16
mov
movsl
inc
fs
stc
cmpsb
dec
lcall
test
push
push
and
hlt
std
xchg
dec
fstps
ds
sub
scas
enter
inc
ret
lret
and
fnstenv
pop
jg
xchg
repnz
push
pop
sbb
dec
cmp
aas
fsubr
jg
fnstenv
cmp
arpl
test
cmp
xchg
and
loop
jo
aad
into
in
jb
adc
jmp
jbe
cmpsl
sub
sbb
shrl
stos
insl
jns
out
cmp
xchg
xor
lcall
loopne
and
rcrl
xor
pop
ss
xchg
nop
cmp
lds
dec
cmpsl
dec
mov
push
mov
jno
mull
inc
fistpll
or
push
ret
cwtl
sbb
dec
jmp
test
push
dec
pop
bound
xchg
mov
lret
stc
push
mov
lock
pop
sti
xor
xchg
pop
push
mov
mov
stc
inc
xor
lock
stos
sbb
xchg
out
inc
aad
mov
sub
dec
out
or
dec
clc
adc
loop
xor
fimull
xlat
cli
mov
push
cmpsl
jle
push
sub
cmp
ja
cltd
cwtl
cli
adc
mov
xchg
jne
nop
test
push
pop
sub
lods
stos
mov
lods
xchg
mov
mov
xchg
jmp
lret
lock
xchg
xchg
cmpsb
clc
ficoml
out
xchg
icebp
roll
jp
jae
jns
or
cli
xor
shrl
dec
dec
jecxz
add
sbb
daa
xchg
push
aam
xchg
jbe
sub
xlat
inc
pop
xor
outsl
ret
dec
jnp
orl
sarb
sti
mov
jmp
in
or
sub
mov
out
adc
push
mov
and
dec
pop
out
or
jmp
push
mov
xor
lods
insl
jecxz
test
aad
fisubrs
inc
pop
lods
jns
mov
adc
mov
xor
sbb
imulb
mov
in
pop
cltd
lds
aad
dec
clc
mov
fwait
pop
and
mov
outsl
dec
out
and
pop
aas
sub
cs
scas
cmp
fsubrl
or
dec
push
cmpsl
cld
cwtl
and
inc
out
leave
aad
ja
sbb
daa
jo
sub
sbb
aad
cmp
jbe
shrl
jge
cmp
xchg
bnd
mov
mulb
pop
adc
adc
test
mov
mov
sbb
xor
sahf
jno
je
pop
jbe
lock
gs
push
adc
add
call
mov
int
cs
inc
sub
sbb
mov
mov
sti
and
mov
cmp
les
das
dec
es
push
add
dec
pop
xchg
data16
dec
mov
mov
repnz
movb
adc
pop
aad
fwait
in
vucomiss
cmp
xlat
negb
loope
arpl
pop
adc
mov
scas
ss
dec
inc
dec
add
enter
or
push
push
imul
mov
pusha
fnsave
or
xchg
mov
jle
dec
jbe
xor
mov
jo
push
sbb
xor
pop
pop
xlat
insb
xor
or
add
dec
and
mov
cmp
push
cmp
arpl
imul
xor
loope
stos
outsl
fidivs
mov
jne
jmp
mov
xor
ds
cmpsb
push
pcmpgtb
mov
push
xchg
ficoms
test
nop
insl
leave
mov
lret
scas
mov
test
or
jl
pop
std
outsl
xor
cld
in
repnz
inc
in
ds
and
movsl
pop
cmpsl
cmp
push
les
stos
sbb
push
hlt
xor
stos
in
test
sub
dec
dec
inc
xchg
fisttpl
or
xor
test
mov
js
jnp
xor
dec
mov
js
icebp
aad
popf
xchg
loopne
mov
je
mov
ficompl
lods
enter
out
inc
nop
xchg
xchg
pop
adcb
and
adc
aam
mov
inc
test
and
ds
aam
jmp
je
ja
rcll
aaa
push
cli
test
add
cltd
dec
and
jb
mov
cmp
dec
mov
mov
das
dec
and
push
sbb
sub
insb
push
call
push
icebp
js
repz
sbb
js
xor
sti
mov
xchg
ss
jg
dec
in
push
add
jns
out
aaa
mov
in
and
insb
sbb
dec
out
jl
push
outsl
lods
jno
or
inc
mov
out
subb
bound
lods
pop
ljmp
xchg
adc
insl
imul
lods
inc
ret
lcall
into
jbe
and
and
imul
jg
push
pop
inc
mov
js
xchg
mov
dec
adc
imul
push
lret
push
sbb
xchg
inc
dec
push
xchg
fisubrs
ret
dec
pop
pop
in
or
cs
jnp
mov
inc
test
xchg
push
cmp
mov
mov
fistpl
xchg
dec
andl
insl
inc
cs
cmc
jmp
int
cmp
mov
insl
sub
mov
mov
enter
movsl
pop
xor
or
pop
pop
sub
pop
cli
and
dec
ds
mov
lock
push
neg
cwtl
mov
lods
lock
jns
xchg
add
fucomip
pusha
in
ss
gs
addb
pop
out
add
imul
sbb
push
outsl
jo
or
lea
jne
cmpsb
lcall
notb
jmp
call
in
mov
das
xor
aaa
and
outsl
add
or
dec
pushf
addr16
les
bound
dec
mov
ficoml
lret
cwtl
adc
leave
push
imul
xlat
js
push
fsts
mov
xchg
lods
enter
add
loope
ja
jp
mov
aaa
ljmp
sub
jmp
insl
dec
mov
mov
jmp
add
cli
adc
ficoml
mov
ljmp
cld
sbbl
fisubrs
adc
cwtl
pop
dec
popf
out
push
loope
add
outsl
sti
sbb
lods
fcmove
dec
sub
out
or
lds
in
in
stc
clc
incb
fsubs
shl
pop
push
xorl
and
stos
negl
jl
pop
xchg
sub
jne
jbe
in
jmp
jg
movsb
mov
popl
out
lret
insl
outsl
jbe
adc
int3
inc
test
mov
inc
xor
insl
cwtl
or
sub
or
loop
dec
lret
leave
pusha
je
xlat
std
mov
fldl
loopne
adc
xor
inc
push
add
dec
dec
repnz
and
mov
mov
or
lock
outsb
gs
xchg
jmp
pop
mov
fwait
mov
movsb
and
jno
cld
les
insl
pushf
mov
inc
movsl
hlt
or
adcb
inc
mov
push
cmc
add
mov
shlb
pushf
in
shlb
xor
movsb
daa
aas
xchg
pusha
xor
push
mov
outsl
test
mov
mov
pop
cmpsb
xlat
jmp
adc
sub
pop
cs
pop
mov
fwait
mov
cmc
jns,pn
filds
dec
adc
jae
lahf
sbb
jp
outsl
push
sbb
movsl
aaa
dec
inc
adc
xchg
sub
imul
sbb
inc
pop
or
inc
mov
test
ja,pt
fwait
lahf
sub
movsb
lahf
jle
jne
or
sbb
jbe
out
fstpt
data16
gs
adc
fwait
dec
pop
dec
mov
dec
lods
sub
and
mov
fs
sti
pop
pop
inc
rsm
loop
cmp
mov
stos
xchg
and
imulb
jmp
push
mulb
xchg
inc
jmp
aas
lods
add
mov
sbb
inc
xchg
or
mov
call
in
sbbl
mov
mov
lea
fisttpll
xchg
jo
lcall
idiv
es
jle
adc
insl
hlt
lea
pop
mov
ret
adc
and
jo
sub
sub
mov
mov
outsb
test
arpl
aad
icebp
mov
and
out
mov
cwtl
inc
mov
bound
roll
icebp
push
pop
mov
pop
incl
push
cmp
or
enter
xor
and
ja
pop
inc
inc
xchg
adc
shrb
fimuls
and
and
imul
mov
xor
mov
cmpl
pop
loopne
js
sub
sbb
mov
inc
add
enter
es
or
pop
jg
shr
in
jle
adc
fwait
pop
out
fidivrs
div
and
jnp
inc
mov
mov
push
rorb
add
push
mov
stos
cmp
adc
push
pop
dec
inc
enter
popf
lret
cmpsb
mov
mov
pop
leave
xchg
mov
cmpsb
inc
jns
das
decb
push
or
sbb
dec
dec
push
cmc
out
push
insb
daa
out
loope
pop
mov
push
cmp
aad
stos
and
push
xorl
xlat
and
or
and
cmp
mov
fldl
out
push
push
mov
int
jb
inc
bnd
cmp
and
dec
mov
push
inc
test
subl
hlt
lcall
adc
sbb
or
xchg
or
fdiv
roll
xchg
jmp
pop
xchg
movsl
shlb
cs
mov
cli
inc
dec
imul
in
mov
push
repnz
pop
sub
lea
xchg
xchg
stos
rcrb
stc
or
jl
and
push
shl
cmp
daa
fistl
jne
mov
imul
and
mov
call
imul
idiv
add
push
fxam
cmp
xor
dec
sbb
arpl
repz
xchg
cwtl
cmp
adc
sti
xchg
sahf
jne
insb
stc
inc
leave
loope
mov
push
shll
sbb
jmp
mov
orl
cmp
mov
mov
cmp
dec
mov
mov
sbb
bound
push
lret
and
dec
lcall
sub
or
push
jno
stc
or
ds
mov
dec
sub
pop
sbb
sub
push
sub
imul
clc
sub
jl
xchg
sub
push
hlt
fwait
test
mov
mov
enter
xlat
orl
divb
in
test
cli
in
add
fildll
cli
adc
jne
es
sub
test
adc
mov
cltd
js
xor
test
cmp
bound
fistl
push
clc
nop
sbb
dec
sbb
xor
movsl
dec
int
mov
pop
sbb
das
adc
adc
push
xchg
and
mov
cwtl
in
push
sbb
jle
mov
lods
cmp
stos
cwtl
test
push
data16
jmp
adc
pop
or
jbe
pop
arpl
mov
iret
jb
and
jb
scas
rclb
stc
add
mov
inc
ljmp
jb
cmp
or
shl
dec
sbb
popa
sub
jo
push
pop
xor
mov
fidivl
push
mull
mov
lods
and
xchg
mov
adc
add
ficoml
rolb
fmuls
add
divb
mov
jo
es
insl
sbb
xchg
jo
adc
xchg
xor
pop
insl
mov
pop
cmpsl
mov
imul
jmp
inc
push
dec
ljmp
test
data16
imul
outsb
jns
pop
inc
pop
xchg
mov
jb
lods
lret
and
mov
pop
push
repnz
jle
push
dec
cld
outsb
subl
push
mov
mov
sbb
lret
dec
lahf
pop
inc
dec
js
mov
cmpsb
inc
es
cld
in
jge
enter
dec
fsubl
xchg
add
adc
sub
out
adc
hlt
lock
jo
jmp
repnz
enter
adc
cli
repnz
mov
xor
sub
sub
xor
mov
icebp
movsb
inc
mov
mov
mov
dec
dec
icebp
int
push
fwait
sbb
aam
add
lret
adc
aad
mov
lods
mov
cld
loope
out
xchg
ror
push
stos
inc
push
adc
or
into
rorl
scas
notb
xor
cmc
inc
ljmp
or
inc
out
jecxz
gs
ljmp
das
mov
aad
jg
jb
sahf
sbb
dec
out
or
and
fists
lods
xor
push
pushf
jmp
or
cmp
int
mov
or
push
sahf
cmp
mov
add
fwait
push
test
imul
sbb
inc
adc
popf
add
std
maskmovq
add
add
cld
dec
lahf
negb
inc
int
push
ret
leave
add
test
push
push
into
pop
negl
ficoml
mov
ret
scas
jge
mov
lds
stos
dec
lock
and
jne
test
fcmovnbe
dec
rcll
cmp
or
popa
mov
push
insb
jbe
aaa
pop
add
adc
inc
xchg
inc
fmuls
cld
addr16
mov
jne
jno
mov
insb
xchg
sbb
jae
dec
lcall
mov
cs
bound
loopne
mov
and
add
lret
adc
lea
jecxz
clc
mov
out
ljmp
sub
cmpl
leave
or
inc
movsl
repz
fnstsw
xchg
enter
mov
inc
inc
test
pop
enter
es
lret
and
in
insl
sahf
xchg
xchg
pushf
or
add
inc
je
push
xchg
lret
jno
test
mov
push
mov
ja
jg
pop
ja
in
push
out
add
jmp
xchg
mov
xchg
push
push
mov
mov
das
cs
mov
je
mov
sbb
adc
add
dec
in
adc
ja
and
cmpsl
or
dec
loop
leave
push
cmp
rcrl
mov
xorb
and
movsl
mov
sub
iret
dec
sbb
xchg
adc
cmc
push
push
xchg
test
or
call
push
jo
pop
in
cmc
je
daa
mov
ja
dec
das
pop
and
ljmp
or
dec
or
mov
scas
inc
xchg
push
cli
push
xchg
pop
inc
xchg
sbb
cmp
sub
imul
test
xor
jp
jbe
jns
lods
push
lock
cmpsb
dec
stos
pop
cmpsb
das
mov
mov
cmp
mov
and
push
inc
inc
sub
cli
dec
das
aam
scas
mov
mov
movsb
std
adc
or
out
sub
push
sub
jo
sahf
in
mov
jmp
sbb
jne
jns
cmpsb
sbb
cli
inc
insb
imulb
jne
outsl
loopne
cmp
jnp
loop
mov
test
sbb
push
cld
and
sub
je
lcall
stos
xchg
lods
jae
sbb
fidivrl
ljmp
cmp
pop
mov
out
enter
shll
jno,pn
ret
ljmp
pop
enter
adc
ds
lods
scas
dec
sbb
repnz
xchg
dec
jp
lods
lea
add
or
cmp
es
test
lahf
daa
mov
xchg
stc
sbb
dec
lods
cmpsb
mulw
lods
jne
fimuls
pushf
lods
out
mov
rorb
outsb
sub
pop
sbb
lock
jcxz
popf
outsb
in
repz
xor
aaa
shll
or
into
stos
inc
fnstsw
shr
in
mov
jae
repz
sbb
mov
mov
addr16
cmpsb
nop
mov
test
ljmp
ljmp
adc
pop
repz
or
insl
jmp
out
sarl
mov
lods
adc
push
movsl
sbb
fidivl
add
jecxz
cli
mov
push
pusha
mov
push
dec
dec
cwtl
out
je
xchg
aad
xchg
sbb
xlat
xchg
enter
orb
inc
daa
inc
int
cmp
pop
pop
pop
mov
enter
push
pop
cli
sub
and
addr16
push
out
test
xchg
out
leave
sub
mov
divb
push
pop
adc
push
mov
bound
and
xlat
mov
adc
imul
add
xchg
inc
mov
adc
or
jne
mov
xor
lds
push
jae
repnz
cmp
lret
cmp
js
cli
xchg
xchg
outsb
test
dec
scas
mov
mov
es
lock
int
test
test
mov
int3
js
lods
push
jnp
and
shlb
outsl
int
scas
std
adc
push
inc
jmp
or
mov
lret
add
lret
inc
sub
sbb
in
sbb
movsb
add
adcl
inc
push
push
and
xlat
ret
ljmp
rcl
popa
pop
push
cmp
cmp
scas
adc
setbe
in
mov
add
bnd
leave
or
adc
mulb
insb
dec
inc
fmulp
fcmovb
outsb
in
stos
dec
jg
xchg
leave
jns
mov
cmp
std
stc
outsl
or
pop
xor
out
fs
push
mov
lock
sub
adc
decb
cwtl
in
jbe
cmpsb
dec
lods
jb
cmp
adc
mov
ret
xchg
cmp
loope
add
lods
push
and
and
pop
aaa
pop
sub
outsb
sub
push
sub
cmpsb
cmp
addb
inc
jnp
add
xchg
sbb
push
or
and
mov
imul
mov
jo
adc
cmp
fwait
adc
dec
dec
jl
stos
js
push
imul
aas
jl
xchg
in
negb
adc
incb
push
push
ret
sub
mov
out
enter
push
cli
xor
in
push
ja
js
int3
sbb
les
and
mov
sub
std
out
ficoml
xor
fmull
popa
lahf
mov
mov
cmp
adc
ss
jl
sbb
push
in
sub
mov
push
adcb
inc
insl
lock
daa
sbbb
mov
mov
lods
lds
lret
pop
jl
pop
lret
aad
into
adc
ficoml
inc
pop
pop
or
insl
cmp
jb
xchg
dec
pop
bound
cmc
inc
cld
lret
dec
xchg
repnz
mov
aad
mov
addr16
push
dec
adc
data16
int3
xchg
dec
scas
mov
sbb
jne
mov
sub
adc
pop
lcall
addr16
ljmp
sub
mov
inc
pop
push
pop
add
inc
lahf
inc
xor
pop
jg
mov
aam
lret
cli
js
imul
xor
jge
enter
test
add
insl
xor
xchg
cmpsl
and
loope
cmpsb
addr16
fstl
xor
sub
stos
lods
add
pop
and
aaa
data16
std
shl
mov
movsbl
daa
sbb
lea
nop
xor
pop
inc
xchg
mov
arpl
sbb
loop
mov
fwait
stos
fnstenv
mov
ljmp
mov
xor
sub
mov
cmp
push
out
mov
pop
dec
mov
push
pusha
dec
mov
lea
sub
jns
pop
test
fstpt
ss
clc
add
hlt
jo
pushf
inc
xor
xor
and
fdivrl
lock
fdivrl
inc
sub
std
mov
mov
rorl
pop
xor
or
sub
lret
xor
mov
data16
mov
cmpsl
push
pop
inc
dec
sbb
xor
jp
adc
push
jbe
stos
fimuls
js
mov
mov
setge
sahf
ljmp
pop
sbb
adc
pop
push
and
insb
add
loope
dec
jns
adc
mov
gs
sbb
movd
stc
push
std
shrb
adc
mov
xchg
fiaddl
push
pcmpeqd
andb
in
and
xchg
dec
pop
mov
ss
xor
fmull
aas
stc
fucomip
sub
pop
sbbl
sbb
rcrl
int
adc
sbb
rclb
sbb
aaa
lahf
imul
ljmp
aaa
mov
xlat
or
lret
add
outsl
lcall
jae
fisubrs
jle
in
int3
pop
mov
dec
test
out
adc
test
jg
ret
shl
inc
push
pushf
sbb
dec
cmp
fucomip
dec
fiadds
add
bnd
out
adc
sbb
adc
adc
xor
pusha
or
push
fnstcw
inc
mull
mov
mov
hlt
outsb
add
add
dec
xchg
stc
orb
cli
std
xchg
jo
jl
mov
out
incb
jbe
adc
cli
dec
jge
adc
mov
xor
aad
jnp
xchg
movsl
push
daa
movsl
jge
imul
add
out
add
cmc
lret
add
nop
les
mov
mov
hlt
and
xchg
adc
mov
sub
aad
pop
jp
xchg
iret
pusha
mov
push
pop
pop
arpl
inc
rorl
xor
lea
mov
inc
rcll
std
sub
jecxz
in
ja
das
sti
iret
push
lock
inc
xor
xchg
mov
arpl
jne
fcmovnu
mov
pop
fsubs
popf
loope
cmp
rcll
xchg
mov
out
add
icebp
es
in
dec
pop
jne
cmp
fxch
ss
daa
xor
stos
sub
inc
mov
push
mov
in
sbb
jmp
sbb
les
in
mov
ret
test
insl
adc
incb
jno
cs
push
or
imul
lret
lret
adc
loope
mov
adc
movsl
inc
sbb
mov
movsl
mov
ja
jmp
xchg
inc
push
pop
sbb
lods
cmp
add
out
mov
test
jbe
pop
sub
push
pop
push
or
push
out
and
mov
mov
call
aas
push
jp
mov
jmp
in
pop
sub
push
icebp
push
fidivrs
or
wbinvd
jae
in
xchg
in
int3
arpl
cmpsb
std
shrl
jge
es
nop
in
mov
sbb
das
and
fidivrl
leave
and
jne
pop
js
imul
lock
sub
inc
aam
pop
sub
std
mov
es
push
push
dec
inc
push
jbe
xchg
int
dec
xor
movl
daa
sub
push
mov
ss
in
std
test
js
mov
stos
cmpsb
in
dec
fidivrl
push
mov
mov
lcall
sbb
adc
notb
call
loope
pop
jo
loope
out
xor
push
mov
mov
push
pop
jbe
jnp
jae
mov
or
scas
dec
push
push
cmp
cltd
sub
lahf
sub
aas
ja
adc
addr16
add
in
sti
test
lret
test
add
mov
cmpsl
push
jo
dec
sahf
jge
mov
aaa
cmp
pop
jp
fwait
jecxz
rorb
movsl
jg
adc
xchg
and
mov
jbe
adc
xor
cmpsb
ss
loopne
sub
mov
or
mov
rcll
mov
sub
mov
xchg
movsl
mov
cmpsb
test
adc
ja
outsb
and
mov
inc
lret
fnstsw
jb
sbb
dec
dec
imul
sbb
mov
das
adc
imul
gs
push
orb
or
outsb
push
xchg
arpl
mov
adc
mov
int3
and
sahf
popa
inc
jnp
mov
sbb
lea
fmull
sub
movsb
and
popf
push
mov
lock
lds
sbb
lds
imul
add
cmpsb
js
add
mov
insl
adc
test
loop
xor
fbstp
adc
out
dec
es
jb
mov
fs
mov
test
xchg
pop
sub
push
jmp
inc
jbe
cmp
fisubl
dec
jle
xor
sbb
repnz
pop
orl
movsl
notb
pop
mov
inc
xlat
aaa
adc
cli
pop
adc
mov
or
ficomps
clc
cltd
in
pusha
pop
in
fstps
pop
and
stc
mov
sub
cs
fstl
rorl
lcall
int3
dec
or
fstpt
push
jnp
loop
aas
mov
repnz
sub
mov
add
fsts
inc
cmpsl
sub
inc
daa
xor
mov
in
push
jae
dec
repz
iret
inc
loopne
inc
cltd
ljmp
addr16
test
out
lret
scas
outsl
sbb
mov
xor
sbb
imul
push
and
repnz
or
xlat
pusha
in
jb
es
mov
pop
insl
das
rorl
popl
mov
xchg
call
mov
jo
xor
and
cmpsb
cmp
xor
lock
add
or
pop
dec
shrl
addl
cmp
shlb
sbb
mov
cmp
dec
rcrb
jmp
fwait
mov
mov
sbb
int
dec
mov
pop
pusha
aad
pop
push
sbb
mov
mov
inc
jmp
and
test
mov
cmp
sub
push
dec
jp
lcall
out
mov
mov
mov
and
add
loopne
add
pop
add
jecxz
out
dec
cmpsl
dec
inc
xchg
test
cwtl
dec
lods
inc
dec
xchg
sub
icebp
dec
ror
repz
pop
cmc
mov
sub
pop
hlt
sahf
cwtl
jl
icebp
ss
inc
mov
in
ss
push
mov
mov
dec
or
in
jp
xor
out
inc
xchg
data16
mov
or
xor
mov
test
stc
out
jle
cmc
lods
push
sarl
stos
jmp
mov
sub
jecxz
scas
gs
dec
cmp
mov
add
or
mov
mov
subl
and
scas
movsb
test
pop
pop
adc
addr16
inc
xchg
xchg
lds
and
outsb
cmp
leave
push
mov
insl
sarb
loop
sub
lds
std
push
adc
cmp
push
sub
pop
cmp
mov
aaa
sbb
inc
gs
sarl
fwait
js
fdivl
loope
jns
ja
xchg
mov
int
or
or
cmp
xor
jmp
adc
pushf
lods
out
sbb
add
outsb
and
cltd
mov
out
sub
dec
imul
pop
and
mov
clc
adc
in
out
or
push
sti
gs
mov
add
sti
mov
sbb
outsl
inc
scas
add
sub
rclb
xorl
cmp
jno
das
out
aas
cmp
mov
and
lock
popf
out
mov
dec
aam
in
pop
cs
out
loopne
in
sub
inc
or
aas
scas
cmp
adc
mov
lods
jns
xor
jge
je
adc
pop
mov
sahf
call
cmc
test
sbb
cvttps2pi
es
ljmp
mov
movsb
flds
je
stos
pop
enter
scas
sub
lret
add
ja
mov
xchg
jae
and
xchg
mov
jae
mov
lock
std
in
fwait
test
mov
sbb
pop
call
mov
push
ja
inc
jbe
jmp
dec
mov
xchg
push
iret
jbe
mov
sahf
and
out
xor
mov
scas
adc
mov
insb
dec
jp
jle
mov
popf
movd
inc
push
out
mov
test
cmp
stc
jb
lcall
jecxz
sub
sbbl
jp
mov
fwait
call
popa
rorl
cmpsl
decl
test
dec
aad
insl
addb
out
dec
std
adc
sbb
int
loopne
lods
sarb
xor
mov
cmp
adc
and
inc
jl
ja
adc
pop
mov
push
test
cmpsb
or
jae
adc
ret
dec
cli
xor
mov
lds
rcl
xchg
subl
dec
out
shlb
iret
mov
cmp
enter
lods
pop
mov
js
sbb
push
or
dec
push
test
dec
call
xchg
cmp
in
ss
lds
adc
shll
jle
cmp
loope
pop
test
push
dec
or
fimull
push
adc
aaa
rcll
out
mov
xchg
cmp
stos
test
mov
fs
das
dec
ss
push
fcmovu
test
mov
and
sub
adc
cltd
in
ret
fs
jle
or
sbb
mov
cwtl
clc
les
je
aas
jbe
repz
je
or
in
clts
stos
push
andl
add
jne
mov
out
insl
inc
mov
mov
sub
sbb
lahf
pop
jae
pushf
lea
or
lock
pop
xchg
push
xorl
mov
add
and
inc
inc
insl
push
in
push
arpl
fcomps
shlb
pop
add
leave
lret
inc
dec
clc
and
push
outsl
pop
ss
push
pop
xchg
jle
sbb
dec
jno
inc
jno
xor
jae
adc
inc
jle
out
add
repnz
add
jnp
add
outsb
fadd
stos
imul
mov
mov
clc
inc
dec
fildl
cmp
sbb
push
lret
pop
or
jmp
ss
mov
fs
cli
sub
adc
push
rep
fldt
in
mov
jp
jne
cmp
sub
cli
sub
in
and
aaa
push
inc
int
clc
push
mov
out
popf
adc
repnz
inc
lods
ror
jns
pop
dec
dec
fsubrp
aas
add
negb
jge
enter
lcall
dec
mov
dec
add
mov
stc
scas
fldcw
push
xchg
ret
xchg
movsb
decl
out
or
in
loope
add
leave
xchg
shrl
lret
adc
out
pop
xchg
push
movsl
push
jae
es
mov
test
clc
adc
mov
xor
jb
or
cs
dec
sbb
xchg
jp
cmp
stc
jg
mov
jmp
cmp
add
ljmp
shll
fbstp
push
xchg
and
enter
or
adc
in
imul
sbb
xor
int
fdivr
sbb
xor
mov
lods
inc
bnd
outsl
ficoml
stos
movsl
and
or
sbb
sbb
je
in
add
sti
jmp
cmp
cs
jl
mov
add
in
jne
dec
or
sub
and
ret
pusha
sub
sbb
hlt
jle
sahf
pop
pop
clc
sub
inc
pop
fisubs
idivl
mov
fnstenv
dec
or
jl
xchg
sub
ret
enter
adc
hlt
jae
jmp
cmpsl
pop
cmpsb
insl
push
dec
sti
mov
lods
sti
sub
xorl
std
lds
jb
inc
push
xchg
sahf
imul
pop
adc
sbb
stos
das
add
pop
fucomp
push
sub
mov
pushf
mov
int
pop
mov
dec
push
mov
sbb
scas
decl
inc
jmp
xor
div
mov
ss
arpl
sub
lods
lock
test
repnz
xchg
pop
or
adc
mov
out
add
cmpsb
shrb
inc
or
leave
inc
jo
repz
icebp
insl
or
adc
lods
jle
jb
push
mov
xchg
push
icebp
jge
add
xchg
fildll
jl
or
fs
aam
aad
dec
mov
jne
jno
mov
mov
mov
push
inc
cli
dec
push
dec
fs
add
test
xorb
test
or
xchg
stos
dec
mov
nop
out
lock
xchg
fisubrs
fstpl
cmp
dec
test
jmp
stos
jmp
sbb
mov
jb
loopne
inc
nop
out
and
sahf
bound
test
and
adc
dec
mov
adc
mov
leave
xchg
inc
hlt
lcall
and
push
sbb
js
sbb
pop
mov
adc
movb
aaa
aaa
adc
and
add
mov
lret
pop
xchg
idivb
sub
push
jg
sbb
arpl
mov
roll
loope
fsubl
out
fdiv
ret
and
jb
jb
mov
scas
sbb
inc
lock
mov
dec
pop
fldl2e
and
jnp
mov
hlt
push
pop
std
fisubrs
sub
add
outsl
incl
push
push
negl
out
push
fldenv
sub
jnp
adc
xchg
mov
jne
loope
adc
ss
scas
dec
push
ljmp
xchg
cs
dec
push
push
stc
mov
dec
movsl
into
jmp
out
js
scas
fsin
mov
imull
push
fldl
jecxz
xor
xchg
shlb
dec
int
ja
mov
ss
aas
out
push
push
ss
sub
fnsave
ja
mov
ja
mov
lea
ret
xor
sub
cmp
xor
and
cwtl
leave
or
dec
ret
dec
fisubrl
dec
test
inc
push
js
out
jp
push
inc
addl
inc
jle
jns,pt
cmp
jecxz,pt
std
int
mov
adc
and
and
jg
pusha
js
aas
test
outsl
mov
ds
imul
xchg
fwait
ljmp
movsl
jbe
outsb
lds
xchg
adc
xchg
mov
sbb
add
in
dec
sub
pop
ret
outsl
insb
cli
lods
push
or
and
xor
call
adc
aaa
out
stos
outsb
xchg
jmp
mov
adc
xchg
add
test
gs
out
jmp
xor
adc
or
ss
dec
xor
outsb
or
js
push
mov
and
push
or
jle
jnp
in
pop
lods
jle
cli
jecxz
adc
mov
gs
popa
pop
jae
negl
shl
in
xor
jnp
mov
add
or
shlb
add
and
mov
outsb
adc
inc
fisubrs
mov
cmp
and
rorl
in
push
repnz
sahf
sub
pop
xchg
pop
pop
lret
std
xchg
lcall
add
cmp
sub
pop
jbe
xor
jp
and
test
xor
enter
stc
sbb
mov
mov
sbb
jnp
call
push
mov
lea
in
mov
push
lods
repnz
xchg
jg
inc
push
add
aaa
lret
fchs
test
xor
xor
and
pop
jns
nopl
or
jne
lret
ja
xchg
dec
imul
push
in
xchg
bound
jmp
mov
out
xchg
fs
enter
subb
push
xchg
aaa
aad
gs
out
mov
xchg
mov
jmp
xor
pop
and
mov
xchg
andb
sbb
repz
inc
inc
cld
jo
ja
lret
lea
mov
add
push
push
out
stc
xorl
inc
cmpsb
enter
mov
insl
fsubrl
add
mov
in
bound
inc
push
mov
lret
test
lods
popa
xchg
cmpsb
mov
insl
mov
orb
mov
mov
stos
mov
neg
das
leave
packssdw
addr16
es
lcall
or
push
xchg
lock
clc
pop
sub
out
jno
adc
jne
jo
jl
sbb
and
adc
cmp
dec
pop
xchg
out
repnz
and
into
leave
repnz
imul
jnp
popf
insb
push
push
test
ljmp
mov
xchg
stc
jns
add
rorl
inc
add
gs
xchg
jbe
xchg
jmp
ret
adc
add
insl
rcll
adcb
dec
loop
cmc
aaa
cmpsb
xor
fildll
lcall
mov
out
adc
insl
xor
push
loop
data16
inc
lea
aaa
or
in
rorl
jg
inc
test
aaa
bound
es
lds
sahf
repnz
test
cmp
adc
inc
xchg
and
movsl
aam
xchg
push
inc
xchg
push
sub
cwtl
cs
mov
call
das
leave
cmp
or
add
xchg
pop
mov
xchg
jbe
lods
or
jne
icebp
cmc
mov
cwtl
xor
inc
orl
ja
icebp
imul
std
sbb
mov
jb
fisubs
in
push
lcall
mov
fwait
loopne
and
mov
or
jecxz
int
mov
pop
mov
aam
dec
xor
xchg
out
and
add
insl
jmp
mov
in
pop
mov
dec
dec
mov
xor
jno
push
sar
xchg
cmp
xor
mov
mov
jo
aam
outsl
nop
push
sahf
sbb
imul
jnp
es
pop
mov
and
xchg
lock
fs
mov
mov
and
es
xchg
mov
mov
lock
insb
lods
adc
pop
adc
enter
clc
sahf
loop
adc
sti
movsl
jg
push
insl
cmp
repz
iret
mov
adc
push
inc
inc
in
adc
jmp
cmp
mov
dec
xchg
fmul
enter
arpl
sub
xchg
ret
cltd
mov
or
or
fdivrl
mov
inc
pop
xor
fists
jno
mov
testl
test
dec
mov
fsub
decb
xchg
aaa
mov
fwait
jbe
sub
mov
mov
jge
cmp
or
mov
hlt
mov
popa
rcl
pop
dec
or
mov
sbb
lahf
mov
and
call
ffree
lahf
jp
inc
sbb
pop
cltd
das
jge
xchg
adc
sbb
scas
fxam
lea
fidivl
pop
bound
aas
hlt
out
ss
push
jecxz
ds
mov
push
je
insb
call
stos
mov
nop
jp
int
in
std
out
mov
cld
shll
ja
dec
setp
addr16
xor
and
xchg
ret
adc
lahf
fiadds
jle
or
ss
shl
xchg
push
pop
jo
andl
add
jae
stos
adc
push
stc
and
popa
scas
fsubrl
cs
inc
xor
xor
cmp
dec
add
leave
xchg
ficomps
fs
mov
xor
mov
xor
jbe,pn
push
lea
ljmp
enter
xlat
xchg
arpl
aaa
inc
outsl
notl
shll
xor
sbb
fidivs
add
aam
outsb
mov
inc
int
dec
pop
fisubl
pop
jnp
push
xor
iret
or
es
pop
idivl
xchg
pop
inc
imulb
cmp
ss
aaa
popf
pop
out
jae
shlb
xchg
mov
adc
lahf
and
dec
push
insl
shrb
popa
mov
mov
or
pop
int3
jg
jmp
xchg
imulb
sbb
negb
mov
push
outsl
lods
out
insl
lods
ja
gs
stos
fimuls
mov
mov
mov
mov
add
adc
faddp
push
add
add
dec
frstor
pop
lods
jmp
push
or
push
push
push
popa
icebp
iret
fadds
sbb
aas
lods
loopne
mov
cli
add
lret
clc
bound
mov
sbb
add
jnp
or
sti
insb
mov
sahf
out
mov
mov
addr16
arpl
xor
repz
insl
rcrb
in
imul
ret
mov
movsb
bound
ror
push
shll
xchg
add
and
mov
mov
dec
sub
lea
in
subb
cmp
ds
adc
mov
cmp
loope
dec
pop
ss
ds
enter
mov
cs
dec
insb
add
adc
cmp
fstp
popa
insb
push
ds
mov
repz
mov
lcall
scas
jmp
cld
hlt
cmp
or
cmpsb
out
lcall
into
int
aas
fstps
hlt
sbb
lcall
dec
fadds
push
insl
loope
mov
fwait
xchg
mov
or
testb
mov
fmull
iret
add
jns
jge
lds
adc
cmpl
aaa
dec
cmpsl
test
add
pop
cmp
xchg
dec
je
jb
rcr
fidivl
pop
ss
insb
test
jnp
movsb
adc
xor
fnsave
js
xor
dec
jge
cmp
inc
inc
sbb
lods
fs
jns
in
rorl
fisttps
stos
movsl
jnp
lret
pop
div
ss
lock
pop
mov
jmp
in
hlt
call
dec
or
enter
fdivrl
add
or
pop
es
lods
and
push
xchg
insb
ljmp
lds
inc
js
adc
pop
xor
or
popf
jg
xorb
or
sub
xchg
aad
sbb
test
or
aas
flds
jle
sub
pop
pusha
pop
inc
shrb
movsl
xchg
mov
dec
nop
test
stc
aaa
pop
ss
pop
fs
cmpsb
and
sub
outsb
pop
xchg
mov
cmp
es
cmp
push
fs
jle
mov
std
and
fldl
test
xchg
jbe
pop
and
loope
jne
mov
mov
push
ljmpw
cmpsb
xchg
enter
adcb
mov
mov
out
jl
faddl
pop
sbb
adc
adc
and
outsb
sbb
push
lcall
fimuls
sub
outsb
pop
pop
cmp
xor
xor
lods
lret
adc
insb
movsb
mov
dec
inc
sub
sub
push
divb
cmc
cmp
inc
pop
cli
push
enter
mov
enter
movsl
pushl
imul
cltd
mov
mov
push
mov
inc
cmp
dec
push
gs
push
daa
aad
mov
push
or
xchg
lahf
dec
out
xchg
out
in
mulb
lret
jns
xchg
test
sahf
jg
mov
sub
in
int
mov
push
xchg
jno
lds
mov
fistpl
aaa
test
mov
fs
mov
adc
aas
sub
cmpsb
mov
int
adc
mov
ja
fdivrp
xchg
sahf
dec
repnz
ss
shrl
repz
adc
stos
pushf
xchg
imul
inc
cwtl
sub
test
cmpsb
inc
not
cmp
or
inc
movsb
loope
lret
aas
in
test
mov
scas
pop
shr
push
shll
fwait
aad
fcmovu
mov
pusha
xchg
xor
push
popf
pop
xor
sub
loop
lret
pop
cwtl
in
pop
inc
lea
sbb
inc
add
lds
outsb
xchg
mov
cmp
mov
xor
repnz
dec
aad
mov
mov
in
mov
clc
push
xchg
popf
js
mov
push
stos
sti
daa
mov
lock
inc
daa
cmp
push
pop
movsl
subl
xchg
inc
pop
enter
int3
hlt
or
or
jo
add
cmp
mov
hlt
sbb
inc
aas
xor
mov
mov
fdivl
adc
xor
call
jne
cltd
dec
int3
in
add
push
xor
std
cmpsl
clc
or
inc
sub
push
mov
iret
push
xchg
daa
push
les
sbb
aaa
divb
xchg
and
adc
mov
mov
sbb
push
out
out
gs
add
repz
data16
push
outsb
adc
sub
and
mov
stc
pop
xchg
lahf
cmp
lea
in
ss
lret
mov
cltd
testb
pop
dec
pop
and
rdtsc
call
sub
jno
fs
sub
mov
lods
mov
adc
pop
ds
aas
jge
lret
mov
scas
cmp
scas
rorb
out
mov
popf
xchg
mov
xor
xlat
mov
stc
lock
xor
std
adc
and
cmp
xor
xchg
or
dec
sbb
or
ss
aaa
outsl
inc
adc
adc
in
inc
cmp
push
dec
leave
xchg
icebp
sub
or
xchg
and
dec
subb
loopne
sbbb
rorl
adc
in
aad
or
xor
fstpl
xor
mov
xchg
add
xor
xor
cld
fwait
test
ljmp
add
pop
loop
jle
add
clc
mov
ja
or
icebp
and
aad
test
movsl
fs
in
rolb
mov
dec
xchg
mov
enter
xor
repnz
sbb
xchg
or
shll
frstor
or
push
adc
mov
mov
fsubl
cmc
lds
mov
sti
mov
push
mov
jl
cmp
push
or
inc
mov
pop
jl
pop
dec
clc
mov
and
xchg
in
adc
and
lahf
imul
pop
xor
fists
icebp
lret
out
sub
sub
addl
scas
and
dec
inc
xchg
insb
mov
std
adc
mov
push
cmp
mov
push
lret
into
movsb
enter
daa
mov
xor
loope
enter
push
and
xor
lods
xchg
mov
cmp
ja
fbld
test
insl
sub
mov
jmp
sub
outsb
sub
push
fldenv
dec
jnp
sti
daa
cs
imul
out
std
xchg
mov
xchg
mov
dec
xor
hlt
mov
or
jl
mov
lock
inc
and
pushf
stos
cmp
addr16
or
shl
les
dec
and
xorl
ds
icebp
dec
adc
inc
or
fistps
loope
imul
fs
enter
mov
adc
iret
sub
test
sub
lods
das
add
dec
popa
sarb
enter
lret
sub
in
movsl
jb
pop
mov
inc
out
inc
mov
ret
inc
nop
inc
or
xchg
fnstsw
mov
orb
mov
test
xor
xor
mov
mov
imul
inc
cmp
testl
push
fsubr
es
rclb
decl
or
mov
icebp
mov
jbe
mov
add
mov
in
insb
push
cwtl
insb
jge
xchg
dec
or
xor
sbb
scas
pop
aam
mov
push
int3
and
mov
add
xchg
fwait
mov
pop
js
loope
fdivr
or
xchg
cwtl
ds
push
lea
stos
adc
jge
dec
jo
jne
and
outsb
movsl
jmp
fildll
jns
aad
inc
aad
movsl
fwait
loopne
and
stos
mov
aaa
dec
and
push
sub
scas
cltd
xorb
jge
xchg
adc
inc
das
cmc
xchg
pop
scas
sub
jb
or
stc
pusha
lahf
aam
ss
sub
pop
pop
cmp
and
sbb
xchg
xchg
int3
inc
push
mov
xchg
lods
ret
or
mov
inc
loop
cmpsl
jae
dec
call
lret
in
jbe
les
and
and
xchg
in
insb
imul
sub
xor
addr16
inc
js
test
mov
rorb
cs
push
test
lods
in
and
and
mov
cmpsl
test
jecxz
fimuls
test
mov
push
lret
data16
cmpsb
inc
out
mov
int3
fstpl
cltd
lods
cmp
sti
cmc
mov
inc
es
and
imul
add
setno
shlb
xor
cmp
push
out
sub
xor
insl
movsb
lock
xchg
inc
adc
fiaddl
out
mov
add
mov
fisubl
insb
xchg
in
inc
push
xchg
test
stos
rcll
sub
cmpsl
sarb
leave
mov
mov
hlt
popf
jl
stos
push
ljmp
lods
dec
sub
inc
lock
jne
dec
insb
pop
xor
or
xlat
mov
mov
and
xchg
jmp
pop
lea
fwait
clc
js
xchg
sub
das
add
or
pcmpgtb
cmp
test
out
test
sbb
insl
cmp
ret
repz
addr16
adcl
addr16
lret
pop
lods
push
sub
jecxz
dec
inc
lods
lea
stos
adc
mov
or
mov
out
or
addr16
out
ja
outsl
fstps
dec
jb
lds
gs
data16
pop
mov
fistl
mov
push
dec
adc
mov
in
loopne
add
test
fwait
and
psraw
stc
movsl
enter
push
mov
or
and
sub
sub
out
inc
aas
lahf
mov
dec
aaa
pop
and
adc
lret
lret
mov
mov
mov
sbb
cmpsb
lea
insl
outsb
xchg
stos
fcomi
mov
xchg
hlt
in
xor
arpl
ficoml
jno
and
xor
and
pop
mov
inc
test
add
push
mov
mov
ja
xchg
hlt
hlt
inc
dec
sbb
stc
or
daa
jnp
cmp
aam
fwait
push
das
outsl
in
sbb
lcall
sahf
pop
gs
adc
cmc
out
push
and
call
or
fimull
stos
cld
leave
fdivs
mov
inc
cli
inc
cltd
sub
dec
or
mov
call
sahf
ret
mov
stos
fiaddl
mov
inc
lret
pop
push
mov
pusha
aas
lea
inc
mov
lcall
xchg
scas
lcall
sbb
testb
cs
adc
and
jne
mov
pop
jp
pop
mov
dec
aaa
imul
dec
in
push
mov
sub
outsb
xor
push
inc
mov
flds
adc
out
sbb
nop
mov
in
out
mov
or
aaa
cmpsl
or
mov
dec
call
jmp
add
sub
out
or
mov
cmp
xchg
jecxz
push
ret
adc
inc
and
idivl
jl
xchg
dec
out
and
out
cwtl
jae
pushf
out
mov
arpl
xor
fsubl
xor
int3
pushf
sbb
or
loope
stc
cmp
add
sahf
lock
or
pop
and
dec
std
mov
lock
mov
jecxz
pusha
mov
xlat
enter
adc
outsl
sahf
mov
cs
std
adc
fnstcw
adc
sbb
out
ret
movsb
mov
mov
mov
adc
pop
nop
nop
and
cli
push
scas
xchg
xchg
push
add
fs
mov
jl
shrb
fs
push
scas
fsubl
test
and
rcll
aaa
cli
xor
and
adc
ljmp
fcomps
cli
sbb
test
sbb
jecxz
xor
sub
scas
data16
dec
or
mov
sbb
cmp
lods
scas
or
pop
dec
push
leave
mov
lret
xchg
lcall
xchg
pop
mov
orb
mov
sbb
popf
outsb
sbb
fucomip
adc
mov
lea
inc
incb
ss
jl
fbld
ss
roll
sbb
add
aad
roll
fwait
push
out
daa
inc
outsb
push
stos
dec
adc
stc
jg
or
in
inc
addr16
mov
dec
fldenv
bound
ja
ja
xor
push
js
push
dec
mov
fwait
subb
pusha
jle
outsb
mov
fidivl
sbb
js
data16
xchg
das
mov
mov
sbb
imul
into
cmp
inc
cmp
xor
mov
jns
outsl
sub
cmpsl
in
sbb
push
sbb
sbb
pop
out
mov
add
sbb
jne
xchg
mov
and
xchg
cs
lahf
mov
insl
mov
jp
je
lcall
adc
sar
xor
dec
xchg
hlt
mov
sbb
es
and
mov
push
push
and
mov
scas
fsubp
js
pop
push
bound
mov
hlt
testl
outsl
scas
xor
sub
loop
push
ja
dec
xchg
pop
jnp
and
in
push
push
scas
and
sub
mov
adc
inc
out
repnz
aam
sti
loope
mov
dec
jne
inc
push
adc
in
xchg
pop
mov
sub
adc
es
xor
xchg
add
pushf
or
jns
das
pop
aad
sub
test
cmpsb
ljmp
jge
insb
aaa
mov
add
or
icebp
pop
mov
bound
enter
adc
pop
shrb
cmp
sbb
stos
pop
dec
mov
xor
hlt
cwtl
into
into
push
jbe
ss
scas
jae
bound
lock
adc
xchg
mov
mov
lods
in
clc
mov
push
divl
lods
jbe
lea
incl
xor
add
stos
out
sbb
popf
js
scas
jno
xor
cmp
movsb
dec
xchg
push
add
adc
sub
cmpsb
dec
flds
sub
stc
or
fimull
mov
mov
jns
mov
xchg
push
mov
dec
ljmp
dec
push
scas
int
push
xor
test
jo
pop
enter
out
jmp
sbb
mov
adc
push
pop
adc
mov
sti
cmp
jl
mov
sbb
scas
adc
imul
shll
jae
pop
mov
push
in
or
mov
xor
and
adc
rclb
cmc
fistl
repnz
sub
and
lea
xor
and
std
ror
xchg
clc
inc
cld
fnstcw
xor
xchg
or
bound
jp
mov
cmpsb
lret
in
fbstp
pop
imul
mov
mov
mov
sub
fsubs
and
icebp
inc
data16
add
fnsave
outsb
insl
pop
and
test
xchg
or
sub
xchg
jns
stos
aaa
dec
adcl
insl
arpl
sarl
or
fcomps
fsubrl
cmp
fwait
outsb
pavgb
inc
call
mov
repnz
pop
aad
and
jmp
fld1
out
stc
or
adc
push
jp
jno
fisttpll
pushf
sbb
test
rorl
sub
xor
mov
xor
cs
cli
pushf
or
repnz
adc
frstor
insb
inc
adc
aas
adc
adcb
push
push
fwait
inc
jns
daa
cvtps2pi
dec
sbb
imul
aaa
cli
jp
outsl
cltd
je
xor
mov
lcall
shlb
mov
popa
sub
or
xor
dec
in
pop
or
int
das
mov
cmpsb
stos
jmp
jle
ja
icebp
mov
mov
and
xlat
ljmp
aaa
sbb
inc
in
pop
lret
fsubl
xchg
and
inc
popa
test
xchg
hlt
call
xchg
clc
test
jmp
loop
xor
and
dec
xchg
imul
cmp
stos
push
ss
shrb
pop
xchg
adc
or
sbb
popa
adc
jbe
fstl
out
inc
out
ds
into
and
ljmp
push
push
push
adc
in
jo
stos
jns
xchg
int3
jl
and
cltd
xor
jle
push
mov
movsl
pop
push
or
icebp
sbb
jo
mov
inc
and
icebp
test
jne
int
test
rorl
and
mov
xchg
xor
lea
loop
sub
clc
iret
mov
push
into
in
cmp
mov
int3
lcall
test
lea
nop
imul
shrb
or
jl
jbe
mov
jne
sti
jo
adc
enter
add
movsb
clc
jae
popf
and
jp
cmp
out
iret
mov
fs
mov
sbb
or
daa
outsl
pop
pop
pop
iret
sar
icebp
cli
dec
orl
into
mov
imul
push
sbb
sbb
lock
jbe
xor
pop
popf
and
push
mov
lock
jno
xor
or
sbb
push
ret
sub
call
pop
loop
inc
xor
stc
pop
jnp
dec
jb
mov
inc
sub
adc
daa
cli
pop
rorb
or
mov
dec
inc
call
cs
inc
in
out
push
pop
adc
pop
push
je
cwtl
jle
dec
scas
or
ja
movaps
sbb
inc
out
pop
and
in
cmpl
push
mov
es
or
adc
movsl
pop
push
fdivs
les
mov
ss
mov
sub
lods
sbb
movsb
push
stos
xor
xchg
add
repz
in
jb
sub
xlat
cmp
cli
xor
jno
int
xor
loop
aas
push
mov
arpl
bound
test
mov
inc
cwtl
dec
test
cmp
ret
ja
imul
mov
into
push
enter
jns
ja
and
std
cmp
out
push
xchg
xchg
mov
jge
lahf
jb
adc
lods
bnd
scas
sbb
ret
or
lock
mov
fucomi
out
in
xchg
or
lea
rorb
push
pop
and
pop
in
in
nop
jl
sbb
pop
or
shr
sbb
das
jecxz
add
sub
and
mov
scas
out
shll
fists
push
in
cs
sbbb
mov
sub
insb
sub
sub
push
cmp
xlat
adc
ss
repz
mov
dec
jge
jno
jno
adc
int3
cmc
mov
push
jg
add
inc
dec
rsqrtps
xor
mov
xchg
jno
sbb
arpl
sub
popf
addb
add
les
and
xor
nop
mov
ja
jbe
ljmp
std
les
mov
pusha
das
imul
hlt
movsb
aaa
sub
lret
dec
call
js
add
cmc
mov
sahf
xor
rorl
mov
dec
or
cmp
sarb
dec
add
xor
lods
push
int
divl
xchg
push
fstpl
faddp
mov
xor
shrl
sub
aam
ja
test
bound
push
adc
add
adc
bound
outsb
fstl
inc
cmpsb
pushw
lds
add
roll
ljmp
jo
int3
lret
jns
std
iret
ret
mov
xor
sbb
out
ret
mov
mov
sbb
loopne
push
or
test
insb
jae
jl
hlt
mov
test
sbb
cwtl
ljmp
sub
sarb
sahf
adc
or
mov
sub
mov
adc
jae
cltd
addl
in
adcl
and
sub
mov
xor
sub
popa
dec
lea
push
xchg
mov
lahf
or
and
add
in
lea
lock
push
es
fcoms
out
sbb
push
push
jmp
js
shrb
dec
js
pop
insl
outsb
repz
iret
lea
dec
lret
mov
or
dec
pop
outsb
imul
xor
xchg
lods
sub
add
fdivl
cld
repnz
xor
push
enter
ret
sbb
out
mov
xor
pop
adc
fdiv
pop
mov
movsb
cwtl
and
imul
push
sbb
leave
dec
cli
mov
xlat
xor
adc
sar
adc
insb
inc
aam
xlat
pop
dec
fcmovu
in
arpl
cmc
das
jl
cmp
pop
jo
jne
sub
outsb
xchg
mov
mov
sbb
jl
xchg
sahf
incb
fcmovbe
mov
sub
insl
mov
cmp
pop
jno
daa
popf
xchg
or
sahf
xchg
mov
bnd
mov
scas
mov
xchg
cltd
or
sbb
or
out
mov
movsb
cmpb
inc
push
hlt
xlat
xchg
hlt
je
sub
test
mov
xor
sub
cltd
aas
sub
add
dec
jmp
fs
mov
ja
stc
mov
mov
inc
ret
je
sbb
cs
into
cmp
jb
sbb
cld
fcomp
adc
mov
jne
test
push
sbb
cld
mov
subb
lods
std
push
mov
mov
jge
mov
xchg
lock
dec
int3
mov
sub
adc
lahf
rcrl
xor
lds
shrb
into
lret
ljmp
call
mov
cmp
xor
pop
adc
cmp
cs
and
shrl
sub
test
cmp
jle
xchg
out
sti
inc
aad
sub
leave
pop
add
jbe
push
add
dec
dec
sub
push
cli
push
inc
push
arpl
lret
pop
dec
scas
xlat
or
in
mov
and
popa
or
mov
mov
adc
jg
xchg
cmpsb
scas
pop
enter
aam
insl
push
mov
or
sub
lock
imul
dec
xor
sbb
xor
adc
iret
adc
fimuls
stos
mul
rorl
add
cli
stc
outsb
jbe
push
xchg
dec
pop
jne
xor
dec
sahf
mov
sub
lods
cmp
jle
std
scas
aaa
push
js
xor
pop
cld
inc
push
adc
inc
pop
pop
adc
popa
and
lods
std
in
cmp
call
aas
orl
in
leave
fnsave
popa
or
mov
push
jnp
jb
sbb
pusha
movsb
notb
inc
mov
ret
addr16
jle
mov
cmp
orl
lahf
test
mov
sbb
jmp
sub
lea
mov
popf
dec
es
pop
jns
push
mulb
pop
sarl
in
shrl
fiadds
jecxz
push
add
adc
int3
int3
or
call
push
imul
inc
inc
sub
divl
sub
dec
lret
loopne
loop
mov
lods
stos
push
add
aad
test
push
sub
adc
ljmp
ss
mov
push
je
xchg
and
dec
dec
pop
and
xor
push
divb
or
and
nop
daa
pop
cmp
aas
lods
and
push
imul
mov
xchg
hlt
sarl
mov
push
dec
pop
jbe
lods
push
xchg
or
and
inc
addr16
out
xchg
xor
cmp
adc
mov
mov
push
nop
popf
int
mov
cmpsb
push
jbe
js
ja
std
inc
pop
mov
fs
add
mov
mov
insl
push
lds
or
lret
push
fcoml
inc
lret
repz
sub
cmc
stc
stc
lods
lret
pop
popa
sbb
mov
into
pop
outsb
inc
lret
add
and
mov
popf
frstor
out
stos
dec
xchg
inc
ja
das
push
mov
cmc
ja
jo
dec
add
jle
cmpsl
add
jo
jecxz
enter
cmp
shrb
and
dec
out
cmp
xor
cmp
push
out
popl
adc
jo,pn
dec
and
sub
jmp
push
push
out
test
dec
jbe
cmp
test
xchg
adc
rolb
cmpsl
adc
jecxz
mov
mov
jle
dec
mov
je
testl
fnstenv
cmp
ret
adc
mov
xchg
std
bound
jne
jo
add
or
arpl
add
iret
mov
cmpl
aad
pop
jl
popa
stc
cmpsb
sub
sahf
sub
cld
and
nop
icebp
xchg
inc
setge
push
jge
pusha
jl
jnp
dec
jns
or
ja
cmpsl
xchg
sub
bound
out
push
int
inc
mov
aad
push
push
leave
or
sbb
or
ror
cs
dec
ss
inc
sub
add
cmpsl
imul
aaa
aaa
loope
mov
pop
sub
mull
and
xchg
mov
js
test
mov
or
in
sub
push
in
dec
outsl
divb
fisttps
flds
dec
ss
lea
std
stos
clc
jno
lock
mov
jg
sub
lahf
dec
xor
ror
ds
sahf
and
push
setno
xor
xchg
cmp
pop
cmp
aaa
sub
dec
push
fimuls
xor
mov
lea
mov
dec
cmp
jbe
push
pop
scas
push
sahf
arpl
mov
mov
idivb
lea
sbb
inc
mov
or
jne
and
dec
mov
flds
loopne
mov
fdivr
and
adc
incb
ss
es
push
mov
adc
scas
out
jg
sub
dec
xchg
push
mov
cs
stos
xor
pushf
cmp
push
or
int
jl
fisttpl
sub
addb
mov
imul
sub
idiv
scas
jns
inc
sub
rorb
push
mov
sbb
icebp
sti
ror
addr16
jno
jne
ss
lock
test
out
dec
sub
test
sub
cmpl
mov
or
dec
int3
or
outsl
push
sub
add
fs
jle
loope
sub
mov
fiadds
jmp
in
das
and
mov
jne
jge
jge
lods
push
push
loope
sub
mov
sub
inc
jle
pop
mov
sub
mov
jnp
outsl
jae
cmp
sti
pop
aad
fdivl
ss
pop
mov
pop
adc
sub
call
jg
mov
mov
nop
imul
jg
mov
push
cltd
cwtl
and
or
test
push
adc
rorl
jae
hlt
insl
and
jge
sbb
scas
sbb
lock
pop
loope
lds
fyl2x
hlt
js
out
dec
or
push
jno
ret
mov
test
cmpsb
mov
call
cmpsb
popa
bnd
andl
mov
xchg
lahf
test
cli
jns
cmpsb
pop
sub
jmp
je
cltd
mov
xor
rol
or
sbb
sbb
sub
daa
pop
cmpsl
mov
popa
out
test
loopne
add
xchg
pusha
sbb
cmpsb
in
in
scas
add
and
nop
jae
mov
sub
cmp
dec
lcall
or
xor
inc
inc
lret
or
jnp
pop
push
adc
push
jg
repz
das
loop
xor
push
fnstcw
test
mov
jno
xchg
cwtl
out
cmp
lock
shrl
add
dec
mov
inc
rcrb
test
cmp
testl
xor
das
fsubrl
xor
icebp
fwait
cmp
lret
mov
and
cmp
xchg
mov
dec
and
push
pop
fidivl
cltd
test
roll
xor
out
in
test
dec
notl
jge
jbe
xchg
jmp
notl
and
sbbl
jmp
dec
addr16
push
sub
outsb
cmp
cmp
dec
xor
idiv
or
in
pop
ljmp
hlt
out
add
cmpsb
xor
call
popf
adc
sub
in
in
int3
arpl
add
movsb
lds
add
and
icebp
repnz
push
testl
sub
cltd
mov
or
mov
inc
dec
cwtl
xor
aaa
jne
push
rorl
loop
jmp
sti
int
inc
loop
pop
fidivs
mov
rcrb
icebp
test
movsb
push
inc
fistpll
and
xlat
dec
cmc
rcrl
xor
sbb
test
neg
jmp
pop
pop
dec
out
add
rclb
mov
repz
lods
popf
and
orl
andl
clc
and
push
or
hlt
and
aad
lock
or
icebp
leave
lret
xor
sbb
or
push
xchg
out
inc
jecxz
into
mov
es
cmp
jo
cmp
stos
pop
adc
or
nop
fmuls
mov
repz
pop
or
inc
mov
cmpsl
add
push
xchg
pushf
je
shrb
jmp
stos
push
pop
xor
cmp
dec
jns
cmpsb
or
push
push
sbb
notb
jmp
pop
push
sysenter
mov
cmp
repnz
out
dec
sub
testl
dec
mov
out
imul
fwait
or
arpl
or
aam
popf
les
clc
daa
fdivr
xchg
shlb
fisttpll
aad
enter
push
stc
mov
lret
fbstp
push
fidivl
out
mov
xchg
ds
xor
daa
xor
call
or
mov
rcr
call
out
sbb
mov
in
adc
lcall
sbb
sub
mov
ret
stos
sub
mov
cmp
inc
dec
ja
or
and
aad
inc
push
and
sti
mov
inc
cmpsb
pop
add
addr16
adc
lods
mov
out
leave
jmp
out
jae
ret
xorl
sub
test
inc
xchg
icebp
daa
inc
xor
int
andl
insl
lds
sub
xchg
cmpsb
data16
push
daa
pop
pop
jbe
add
jmp
and
movsl
add
jnp
lea
inc
or
adc
aas
stos
lret
xchg
ja
scas
enter
jb
out
inc
out
mov
or
out
nop
pop
dec
mov
dec
sahf
adc
rolb
lea
push
adc
or
jne
xchg
inc
aaa
roll
out
push
fs
icebp
inc
sub
fcoml
sarl
xlat
outsb
xchg
push
es
lea
test
pop
mov
ror
dec
iret
mov
insl
icebp
or
repz
jle
pop
inc
push
outsb
push
mov
pusha
jle
pop
jge
aas
adc
or
or
nop
mov
iret
cmpsl
and
movsb
xor
mov
not
call
fdivp
and
or
shll
pop
push
shrb
stos
jmp
jne
jnp
repz
cs
jno
push
sub
mov
clc
jbe
ret
lods
cltd
iret
or
popa
push
cmpsb
or
mov
idiv
xchg
call
in
xorb
sub
jne
inc
add
jmp
mov
or
leave
pop
or
dec
fsubr
fsubl
push
adc
mov
jmp
pop
cmp
sub
repnz
or
out
jmp
shl
sbb
push
xor
enter
mov
cli
loope
ljmp
xchg
in
cs
out
sbb
inc
jne
sti
adc
leave
push
mov
sub
adc
sbb
dec
shr
fsqrt
imul
add
dec
dec
aad
xor
mov
stos
inc
movnti
test
testb
repnz
or
fistpll
mov
aaa
fyl2x
test
or
cmpsl
xor
push
xchg
sbbl
push
std
js
xchg
jbe
and
lea
leave
mov
pop
xor
in
loope
xchg
mov
jb
int
in
push
mov
pop
jne
xlat
xor
mov
push
cli
stos
pop
ss
testb
lea
lcall
enter
loopne
or
xchg
ds
cmpsl
adc
pop
or
or
xor
frstor
fisubl
xchg
cli
add
js
adc
pop
push
or
dec
call
push
pusha
les
test
call
jecxz
imul
dec
pop
cmp
test
out
mov
dec
ljmp
pop
mov
mov
sahf
jmp
daa
mov
mov
cmp
cltd
pop
xlat
stos
pop
mov
test
jecxz
cmc
cmc
mov
xlat
mov
add
jg
inc
mov
push
sub
out
inc
and
push
pop
jle
movb
jno
sub
cltd
scas
test
out
xchg
jecxz
stos
fistpll
cltd
lret
fs
aad
push
ret
neg
lret
mov
and
dec
mov
jns
push
and
xchg
cwtl
enter
push
or
int3
sbb
add
scas
in
cmp
adc
push
push
mov
pop
dec
inc
xchg
jmp
lods
fstl
cmpsb
jo
lea
in
pop
sub
orl
sbb
pop
outsb
aaa
add
and
lods
cs
std
cli
stos
adc
aas
mov
adc
movb
jbe
rcr
testb
das
jae
mov
cmp
add
or
jge
aas
push
dec
add
lahf
and
cld
dec
mov
loope
sub
dec
negl
lret
push
xorb
in
adc
mov
push
xor
aas
sub
jmp
ficompl
insl
shll
dec
xchg
loopne
push
xchg
faddl
sbb
stos
add
jb
lahf
or
dec
pop
popf
ret
push
fimuls
int
sub
mov
negb
loope
int
ss
popa
sbb
dec
cmpsb
xor
imul
sub
lret
adc
dec
xchg
inc
dec
repz
add
adc
xor
cwtl
aaa
xchg
or
sbb
out
call
fadd
pop
cmpsb
ljmp
mov
sub
adc
cmp
outsb
mov
stos
test
lds
fsub
and
mov
cmp
inc
add
outsl
in
cmc
fwait
in
data16
push
dec
test
mov
xchg
inc
loop
out
jae
cmpsl
pushf
mov
dec
fucomp
outsb
and
adc
jno
xor
loopne
pop
in
lret
dec
sbb
or
adc
add
aad
or
push
js
in
dec
pop
mov
movsb
xlat
mov
jae
jmp
sub
data16
push
or
sub
sub
lret
lods
shlb
popf
imul
or
stos
fidivl
fisubrs
shrl
sub
mov
mov
movsl
xor
imulb
out
mov
lret
scas
gs
dec
dec
pop
mov
fildll
out
arpl
sbb
mov
in
pop
cmp
mov
push
insl
and
mov
inc
pop
inc
pop
mov
sub
pop
mov
cli
mov
add
push
dec
mov
cmp
sub
mov
stos
adc
push
ja
sbb
xchg
daa
ret
mov
outsb
or
mov
mov
dec
les
inc
or
mov
fldt
mov
in
test
cli
mov
lock
xor
push
sub
arpl
dec
or
push
inc
aaa
sub
cmc
sub
jge
cmp
out
scas
outsl
stos
cli
push
mov
cmpsl
out
sub
push
jnp
inc
pop
test
testb
adc
jl
cmp
mov
adc
push
outsl
jmp
icebp
dec
jmp
dec
subl
test
pop
mov
mov
enter
imul
sbb
pop
mov
cmpsl
ja
pop
lahf
fs
dec
nop
cmp
int
dec
xchg
add
pop
jl
icebp
lods
push
aam
inc
fstpt
sbbl
dec
test
icebp
and
and
sub
mov
xchg
jb
mov
cmp
mov
sub
std
inc
das
sub
jo
add
inc
mov
push
xchg
fmuls
js
fdivrp
test
loop,pt
repnz
xor
out
and
jle,pn
enter
cmp
and
out
sar
ss
jecxz
xbegin
adc
mov
lods
cmpsb
cmp
xchg
jmp
lods
cmp
outsl
inc
and
ror
mov
gs
mov
fs
in
loopne
add
stos
cs
jno
mov
pop
cmp
cmpsl
into
in
cmp
ficomps
aad
push
call
or
pop
mov
jbe
stos
xor
and
in
in
scas
stos
or
pop
into
aaa
rclb
push
xor
insl
scas
cltd
jp
push
xchg
cli
sub
movsl
lret
push
cs
js
add
jae
pop
xlat
imul
cs
leave
push
mov
and
xchg
mov
xor
mov
mov
or
jae
and
adc
iret
fstl
mov
andl
int
popa
sub
jo
inc
push
cmpsl
mov
mov
push
outsb
xlat
das
lahf
sub
iret
cmpsb
cs
lods
ficoml
mov
inc
mov
push
push
dec
push
adc
jle,pn
jno
adc
int3
dec
outsb
xchg
cld
mov
test
fidivs
mov
aas
cs
test
arpl
leave
into
pop
std
dec
push
out
sbb
push
xchg
jns
fmull
inc
mov
push
pop
dec
pop
repz
inc
mov
in
int3
push
testl
pop
adc
insb
adc
and
nop
out
lcall
mov
dec
mov
pop
push
push
jecxz
mov
insl
or
fdivrs
cmp
jg
lea
sub
pop
or
push
mov
es
mov
add
lock
lcall
shr
cmc
int3
push
xor
stos
call
in
ja
mov
mov
lahf
mov
jl
inc
xchg
enter
shlb
fildll
shlb
outsb
or
dec
dec
fisubrs
outsb
dec
dec
lahf
sbb
push
lahf
xchg
or
fcoms
push
or
test
loope
jp
pop
xchg
jl
fs
cs
in
dec
idiv
in
and
jge
jae
xor
pusha
pushf
test
sbb
sbb
dec
cs
inc
sub
cmp
add
push
or
pop
addr16
mov
out
cmp
push
movsb
jge
sub
leave
mov
mov
ja
inc
mov
cwtl
xchg
add
inc
dec
ficoml
mov
sub
sahf
in
lock
push
dec
jp
stos
mov
cltd
dec
out
cmpsl
xor
mov
sub
ljmp
fidivrs
or
test
dec
xlat
xor
pop
xchg
pop
mov
negb
int
push
scas
sub
notb
data16
in
jo
or
mov
jnp
jne
adc
jo
mov
out
mov
nop
and
sarb
ror
pop
xor
decb
or
mov
mov
sub
cwtl
push
in
or
dec
or
enter
enter
or
dec
sub
inc
ljmp
jle
mov
std
jb
aaa
test
cmp
xchg
enter
daa
pop
test
or
and
pusha
lods
mov
lods
gs
pop
ss
or
mov
lods
sbb
sbb
test
stos
adc
outsl
cmpsl
sarb
insl
inc
ja
negb
dec
cmc
mov
lahf
and
pop
mov
scas
push
pop
mov
or
jb
clc
or
push
and
call
jl
scas
add
inc
in
insl
sbb
sbb
xchg
inc
ja
mov
mov
add
lcall
mov
jo
sbb
pushf
adc
ja
jns
adcb
lret
mov
inc
jo
push
pop
insb
push
dec
xchg
repnz
loopne
or
pop
cwtl
and
lock
addr16
xor
cld
jbe
xor
daa
cs
sub
sahf
mov
cs
lret
mov
lods
iret
xlat
daa
or
cli
sub
pop
std
shr
push
mov
mov
push
jge
inc
loope
out
fwait
inc
sub
pop
sbb
aam
outsl
aad
es
cmpl
add
adc
mov
lret
inc
outsl
dec
mov
or
adc
mov
xlat
dec
int
in
aaa
ds
jnp
lret
sti
mov
lods
xchg
sub
pop
xchg
fdivl
sub
xchg
dec
push
insl
and
mov
xor
div
mov
idivb
pop
sub
or
arpl
adc
jl
lahf
dec
xchg
lods
insl
inc
adc
and
mov
inc
jb
adc
dec
in
sbb
aas
fldl
adc
cmpsb
xor
cmpsb
push
add
and
mov
aaa
mov
push
cmp
fisttpl
adc
cli
rol
in
inc
cmp
inc
mulb
subb
and
sbb
outsl
adc
rorb
cli
ss
push
cli
sbb
pop
push
sub
fcomps
cmp
sub
roll
mov
xor
bound
sub
test
out
js
call
xlat
dec
fcmovbe
jle
lahf
mov
jp
mov
jmp
test
push
inc
movsl
jle
dec
dec
mov
push
adc
xchg
ds
lcall
push
scas
ljmp
sub
or
or
inc
mov
fisubl
push
xchg
or
adc
mov
lock
pop
mov
rolb
cmp
mov
add
push
mov
cmpb
icebp
cmp
xchg
inc
mov
dec
xor
mov
jle
enter
mov
mov
scas
push
dec
pop
mov
in
jbe
cmpsb
aaa
pop
push
nop
loopne
enter
and
call
adc
dec
pop
jecxz
sub
fwait
mov
imul
cmpsb
bnd
in
pop
jb
fstpl
cld
insl
mov
out
addr16
jnp
mov
sbb
repnz
aad
ror
push
and
fwait
cltd
das
popf
sahf
movsb
arpl
sub
or
adc
ret
arpl
mov
in
out
fcomp
mov
frstor
dec
rol
loopne
mov
popf
mov
and
adc
dec
dec
sahf
cltd
enter
ja
addl
mov
mov
jns
xlat
dec
pop
pop
les
imul
pop
sbb
mov
test
inc
cs
add
into
jns
push
mov
js
in
cs
cmc
in
ds
scas
push
cmp
scas
xchg
scas
test
mov
test
subl
test
cmp
mov
pop
jp
cs
inc
pusha
movsl
pop
xchg
stos
int3
push
fimuls
pushf
lret
sub
cld
iret
je
repnz
push
shll
test
subl
mov
jle
jnp
pop
sbb
push
sub
fdivr
test
dec
cmp
std
sbb
push
sbb
addr16
mov
push
int
push
pop
inc
ljmp
xor
dec
jle
leave
add
iret
addr16
xchg
outsb
adc
and
fildl
data16
pop
pop
mov
rorl
cmpsb
push
jo
ja
inc
or
stos
jmp
inc
inc
inc
adc
repz
addr16
not
in
aaa
inc
sti
lcall
cmp
dec
mov
xchg
ret
mov
inc
in
cmp
jl
sbb
test
dec
out
int
pop
stc
xor
fwait
mov
jp
mov
push
ss
pop
sahf
adc
add
imul
and
daa
sbb
jo
mov
xchg
jns
jle
add
xchg
mov
int3
and
dec
insl
jne
lods
pop
addr16
and
adc
movsl
in
jae
bound
dec
mov
jbe
xor
aas
dec
ret
mov
adc
jmp
mov
xor
daa
scas
mov
ljmp
mov
sbb
fsubrp
add
fcoml
add
stos
dec
push
xchg
pop
std
leave
jecxz
dec
test
jle
outsl
jmp
pusha
stc
test
addl
adc
or
xor
pop
or
sub
xorps
jne
test
fsubp
clc
sub
pop
addr16
test
lahf
std
mov
jmp
iret
aas
insl
pusha
dec
mov
out
xchg
in
cmpsb
sbb
sbb
mov
fisubrl
xchg
and
lcall
xchg
leave
into
stos
mov
lahf
jnp
loope
js
xor
push
fwait
mov
and
xchg
inc
movsl
mov
cmp
bound
fcom
in
rcr
ret
mov
pushf
inc
pop
fs
in
cmpsb
cmp
es
xor
pop
out
popf
icebp
or
push
pop
inc
push
sti
jge
cmp
daa
ret
xchg
test
fsubl
lea
enter
push
ss
daa
jecxz
sub
jl
lahf
xchg
daa
cmpl
mov
push
or
cmpsl
sbb
lret
out
adc
mov
test
pop
enter
test
push
clc
les
sub
mov
stc
pop
jp
jnp
or
loopne
test
push
in
test
out
xchg
mov
ret
shr
out
inc
adc
test
aam
mov
and
push
addr16
and
mov
aaa
or
inc
inc
push
repz
out
out
cmp
inc
and
test
mov
out
cmp
xor
pop
mov
xchg
inc
inc
and
in
fcomip
jne
add
xor
mov
push
fldl
pop
out
push
shl
jns
hlt
xor
test
jg
xor
push
cmp
or
stos
mov
jmp
push
decl
repz
pop
mov
filds
cmp
dec
repnz
outsb
in
ljmp
and
std
xlat
dec
sbb
sub
dec
stc
or
sarl
mov
pop
mov
jns
sub
cmp
insl
popf
push
lea
test
adc
aaa
mov
cmpsb
mov
jne
cmp
xchg
aam
sub
lock
test
mov
xchg
inc
aaa
das
icebp
cltd
mov
or
mov
xchg
out
sti
xchg
jnp
push
mov
cmp
add
push
or
fs
clc
test
adc
lock
in
mov
mov
dec
jge
push
cmpsb
mov
pushf
int
jb
sub
inc
shrb
xor
xlat
jge
and
out
idivl
xchg
mov
xchg
inc
dec
aad
xchg
test
dec
pop
movsl
ret
imul
mov
scas
nop
xchg
cmp
sbb
ret
lcall
mov
mov
or
mov
in
dec
aaa
or
push
out
mov
cmp
movsl
and
shlb
xchg
xor
jp
lahf
and
loopne
int
dec
cld
jae
cmp
xor
pop
imulb
popa
cli
mov
cwtl
xor
stos
cli
out
fnstsw
iret
jne
adc
sub
xor
jb
xchg
dec
cli
movsb
testb
call
xchg
loope
sub
dec
jne
mov
and
inc
xor
add
loope
inc
std
outsl
jae
faddl
aad
cli
stos
fisubrl
mov
fldcw
jae
mov
stos
fsts
mov
cld
and
jnp
xchg
stc
dec
jb
popf
or
cwtl
push
scas
or
addr16
out
flds
and
add
or
sbb
push
out
xor
pop
cwtl
movsl
mov
mov
in
or
mov
sbb
fsubr
ljmp
mov
pusha
lret
out
pop
push
push
imul
cli
movsb
outsl
idivl
fistl
push
aad
icebp
pushl
out
or
sub
mov
push
and
or
adcl
fld
jp
push
jbe
fists
bound
cmpsl
cld
sub
dec
sti
ffree
outsb
aad
sub
or
cli
pop
and
arpl
aaa
cs
cmp
les
jo
in
mov
pop
sbb
stc
fnop
shll
pop
jmp
insb
sbbl
lret
mov
nop
push
scas
stos
imul
push
push
loopne
pop
jge
push
mov
adc
sahf
xchg
dec
outsb
movsl
add
or
mov
insl
xor
jb
pop
popl
es
inc
xchg
cmp
shll
pop
mov
leave
cmp
mov
sbb
and
mov
insb
cmp
ret
mov
insb
sbb
daa
mov
mov
aam
adc
sbb
and
cltd
cltd
push
mov
and
sarl
cmp
sub
pop
add
jns
or
mov
popa
sub
stos
cmp
stos
and
in
outsl
mov
pop
sbb
xor
out
add
sbb
cmc
inc
pop
push
pop
aas
mov
das
aad
imul
notl
or
insb
ret
xchg
sub
and
inc
sub
mov
mov
dec
lahf
cmp
sub
push
cmp
sbb
enter
or
dec
mov
fldcw
or
ja
dec
mov
jne
fdivs
daa
mov
xlat
andb
push
das
test
xor
pop
mov
insl
pop
xchg
mov
pop
pop
mov
mov
test
push
xor
push
mov
xchg
and
or
pop
divb
cmp
insl
push
cvtdq2ps
into
inc
xor
push
sbb
inc
sbb
pop
xor
ja
outsl
in
mov
pcmpeqb
xchg
cmp
xchg
xchg
aad
cld
ds
cs
stos
xchg
cmpsl
out
pop
pop
mov
sbb
mov
repz
sub
or
jl
push
xchg
fs
pop
lret
xor
sbb
imul
pop
cld
jbe
in
bound
js
xchg
xlat
lcall
test
test
push
negb
inc
push
insl
enter
out
pop
dec
lock
xchg
push
cmp
xchg
out
cmp
jo
dec
cli
hlt
jno
outsb
cwtl
push
daa
jp
outsl
imul
scas
js
je
pop
das
ss
js
mov
das
scas
das
xchg
mov
jnp
test
aaa
mov
inc
cs
sub
xor
dec
scas
jno
sub
jbe
push
mov
repnz
cmp
cwtl
mov
ret
push
push
sbb
sbb
cmpsb
xor
add
pop
dec
js
das
sbb
sbb
in
mov
lods
les
dec
jb
pusha
int3
out
xorb
lcall
push
cwtl
scas
repnz
out
mov
xor
in
sbb
pop
mov
cmp
sbb
push
loope
xchg
pop
push
xchg
sbb
jae
sub
mov
push
or
mov
sbb
mov
stc
adc
sub
dec
imul
push
imul
dec
inc
push
and
lods
sub
dec
xor
or
dec
jp,pt
dec
sbb
adc
pop
mov
jp
jp,pt
nop
cmc
and
mov
sub
push
jmp
lea
loope
dec
pop
sti
xchg
divps
mov
cmp
insl
lea
jae
test
cmp
call
sti
xchg
aaa
cmp
cmc
and
dec
inc
mov
sbb
pop
aam
fidivs
insl
int
rorl
jbe
mov
inc
cli
imul
lret
inc
mov
mov
xor
call
xor
xchg
icebp
push
cmp
insl
mov
mov
pop
outsb
push
jnp
dec
add
jle
push
mov
dec
lcall
cmp
fidivs
imul
mov
adc
daa
out
and
mov
fimuls
popf
les
in
mov
stos
inc
loope
jecxz
imul
frstor
sarl
lds
aas
pop
test
jno
mov
jo
test
mov
mov
pop
sub
mov
out
pop
mov
xor
pop
mov
cwtl
mov
sbb
jnp
mov
sub
mov
adc
mov
insl
push
repnz
sbb
sub
bound
and
loop
cmp
lock
das
push
loope
insl
and
call
sub
es
or
dec
mov
pop
jbe
mov
rcll
in
sbb
int
push
dec
mov
sahf
and
push
or
add
adc
mov
es
and
inc
call
mov
mov
fs
push
mov
mov
lcall
push
push
cs
cmp
insl
fsubrs
inc
xchg
sub
push
sub
je
leave
outsb
xchg
hlt
int
push
mov
sub
push
xor
idivl
int
sbb
add
data16
mov
inc
lock
jle
loopne
pop
out
mov
fsubr
inc
pop
clc
push
inc
ds
jns
ss
sub
mov
mov
xchg
jle
jmp
stos
addr16
outsl
adc
jmp
mov
xchg
cmp
push
adc
cmp
inc
push
push
push
mov
inc
loope
xor
cmp
mov
mov
cmp
lods
sub
rcl
data16
xor
dec
sbb
push
mov
sub
scas
in
jns
mov
cs
repz
adc
adc
popf
cmpb
in
mov
jp
ja
mov
cmp
lock
pop
in
aam
pop
daa
inc
add
inc
outsb
dec
jbe
imul
int3
cmp
enter
jns
in
pop
scas
daa
xor
mov
in
mov
outsl
sbb
push
aad
or
test
mov
adc
push
mov
cmp
sub
inc
ds
les
or
mov
dec
dec
push
push
adc
js
das
movsl
push
sbb
add
sub
inc
bound
out
outsb
pop
push
adc
bound
aas
imul
stc
nop
dec
lods
mov
cld
xchg
dec
cmp
mov
loopne
push
add
in
dec
mov
adc
jmp
stos
lock
cmp
or
push
sbb
push
out
mov
fistpl
mov
cmp
leave
stc
cmp
pop
pop
push
test
imul
bnd
pusha
arpl
xor
mov
push
push
mov
lcall
dec
cmp
and
pop
mov
pushw
inc
xor
aad
scas
jns
mov
mov
stos
in
pop
xlat
adc
in
cli
mov
add
xchg
inc
enter
mov
jle
dec
xchg
inc
ss
rcrl
inc
imul
ss
push
test
lret
testb
fnstenv
sbb
jo
mov
xchg
stos
inc
adc
stos
pop
inc
cmp
sbb
cmp
ss
mov
cmp
imul
sub
pop
ret
inc
sbb
or
int
mov
or
cmp
sbb
dec
std
push
enter
shll
mov
cmp
pop
mov
push
ss
ss
bound
inc
xchg
sahf
jno
inc
dec
mov
add
imul
inc
bound
sub
negb
in
out
lahf
sbb
mov
cmc
or
cwtl
jecxz
sbb
mov
insl
adc
pop
xchg
mov
pop
mov
sbb
and
sbb
in
divb
sarl
cmp
xchg
add
int3
mov
arpl
pop
mov
mov
or
inc
sbb
pop
inc
cmp
cmpsb
rcll
test
dec
mov
sbb
lea
lret
nop
push
in
fwait
add
adc
cmp
ss
out
lock
jno
cmp
in
sub
mov
cld
insb
xor
mov
mov
test
cs
out
add
xchg
loope
and
xor
lods
jae
jecxz
mov
arpl
pop
mov
nop
pop
cmp
or
test
jns
dec
adc
mov
push
or
lods
stos
jg
test
sahf
fdivrl
roll
cmpsl
add
mov
xor
dec
sti
cltd
sbb
les
aas
lret
xchg
jmp
in
imul
popa
outsl
pop
ljmp
or
cmp
or
sub
cmp
dec
jp
filds
adc
loopne
cmp
ror
pop
inc
test
gs
jns
lret
popf
cltd
idivb
jb
mov
inc
inc
ljmp
sarb
jnp
cs
push
jbe
iret
stc
loope
and
xchg
scas
mov
cmp
int3
dec
jae
mov
enter
cltd
inc
mov
xor
bsf
and
mov
or
pusha
mov
push
mov
int3
push
jnp
orl
sub
ss
push
xor
adc
sub
push
cmp
pop
std
pop
mov
sbb
push
imul
mov
js
fidivrs
sub
imul
jp
out
lods
dec
mov
and
js
addr16
je
jg
insb
pop
lds
dec
xchg
std
test
or
pop
jns
push
iret
repnz
es
mov
aaa
pop
mov
jmp
loop
lock
int
fcmovbe
js
xor
mov
push
into
mov
lcall
lret
paddw
pop
fldl
fisttps
test
jno
sub
sar
leave
dec
pushf
call
cmp
cwtl
jno
push
pop
xchg
mov
dec
je
cmpsl
or
lock
and
cs
sarb
and
test
pop
hlt
lds
mov
nop
cs
add
pop
mov
cmp
aaa
and
insl
pop
mov
sub
js
or
fdivrs
dec
xor
push
dec
sub
xchg
jmp
lock
add
mov
mov
shrb
or
pop
fbld
cmpb
into
hlt
or
jb
sub
out
int
cmp
sub
aas
cmp
and
or
fisubrs
scas
scas
mov
and
outsb
jmp
sub
xchg
pop
xor
sti
xorb
xor
jno
sub
inc
sub
push
mov
fldcw
pop
jge
sbb
lea
scas
pop
mov
call
imul
das
pop
pop
notb
dec
cmpsb
sub
add
dec
pop
inc
int
imul
inc
xor
jns
cwtl
pop
inc
aad
dec
xor
jne
stc
push
push
push
mov
cs
jb
dec
cmp
dec
sub
icebp
jbe
call
sti
lods
mov
cmp
jne
iret
cltd
nop
int3
sbb
xor
data16
pushf
xchg
sbb
mov
and
je
xor
xor
int
testb
pop
pop
cmp
pop
push
and
lret
push
pop
faddl
scas
push
jle
jle
fcompl
jle
int3
cwtl
scas
push
in
sti
xor
cmpsb
ss
mov
inc
push
inc
insb
cmc
in
jne
cmp
mov
cmp
cmp
pop
jne
in
insb
movsb
pop
mov
mov
fcmovnbe
insl
sarb
jo
mov
xchg
xchg
add
in
aas
mov
cmp
inc
imul
xor
shrl
ss
adc
cmp
out
sub
pop
add
xchg
movsb
inc
loope
incb
sbb
xchg
cmp
or
xor
and
jb
add
pop
cmp
add
insl
mov
push
xor
jne
dec
in
ret
mov
imul
jb
mov
mov
out
cmp
cmp
push
pusha
cli
pop
mov
push
insb
std
shll
jne
repnz
inc
cmp
lahf
lock
pop
aad
imul
cs
pop
mov
pushf
inc
cmp
pop
xchg
and
push
jle
fwait
ss
pop
sub
cmpb
ss
pop
pop
adc
pop
mov
rcll
push
lcall
cmpsb
aaa
ds
push
addr16
sbb
or
push
push
ljmp
fidivrl
and
pop
ja
mov
testb
add
push
stc
jbe
mov
cwtl
push
movsb
xor
mov
xor
dec
inc
or
pop
sti
pusha
jle
xchg
cmp
jp
inc
cmp
int
xor
cmp
adc
lock
stc
mov
mov
mov
das
lahf
mov
int
rolb
push
repnz
bound
xchg
daa
push
nop
xchg
mov
clc
in
sbb
mov
xchg
cmp
mov
mov
mov
ret
shrl
push
int
fdivs
push
push
ljmp
cmp
push
addr16
mov
jnp
mov
push
movsb
sub
jns
pop
or
ss
mov
inc
xor
fdivl
jnp
mov
pop
out
pop
jne
xchg
push
xor
repz
subl
jbe
int3
mov
xchg
cli
pop
mov
inc
imulb
jns
inc
jae
outsl
mov
scas
or
push
push
sub
sub
outsl
mov
adc
test
imul
scas
sarb
leave
sbb
in
out
xchg
push
ja
cs
and
dec
repnz
xor
repnz
insl
or
xorl
pop
pop
jbe
cmp
inc
scas
pop
cmp
fwait
sbb
mov
fsubs
inc
scas
aaa
sbb
ret
imul
imul
cmp
rcr
cmp
mov
cmp
xchg
and
mov
aam
fdivrs
cmp
jmp
jbe
jge
xlat
andl
mov
stc
push
push
push
fnstcw
pop
aaa
cmp
xor
xchg
cmp
stos
leave
cmp
popa
in
enter
cmp
inc
mov
imul
cmp
mov
cmp
add
sbb
out
dec
cmp
xor
xchg
add
xor
jp
fiaddl
imul
int
scas
fbld
cmp
lea
mov
cmp
mov
outsl
cmp
ret
cli
iret
out
and
rclb
addr16
test
push
cmp
xor
sub
xchg
daa
sbb
ss
sub
ret
mov
xor
loopne
push
and
add
iret
sbb
pop
mov
mov
inc
and
sub
mov
cltd
xchg
in
jmp
xlat
jnp
aas
push
push
fdivrs
inc
xor
test
lods
jae
and
rcr
sbb
popf
pop
xchg
add
aaa
jnp
jno
das
cmp
jb
ja
gs
stos
pop
cmp
sbb
jns
push
dec
mov
ds
test
xor
xchg
xor
ljmp
adc
dec
or
fucomp
and
jns
add
sub
xor
leave
in
mov
sbb
aad
dec
insb
mov
pop
inc
and
movsb
sub
std
fiaddl
or
dec
cmp
int3
and
filds
aaa
pop
ds
jb,pt
rcll
cmp
cmpb
fwait
test
mov
mov
xor
es
xorb
adc
ss
cld
xlat
jl
jmp
mov
lcall
cmp
sbb
pop
add
sbb
cmp
cmp
xchg
shl
cmp
push
mov
jg
lods
out
mulb
push
push
xchg
sub
push
jae
mov
or
cmp
push
outsb
iret
and
mov
jns
addr16
fdivrs
stc
inc
ja
rcrl
or
xor
xchg
cwtl
out
ret
in
aam
cmp
das
mov
dec
into
and
lds
pop
dec
sub
push
adc
js
cmp
cmp
int3
push
dec
stc
fwait
imul
push
fld
push
test
cmp
adc
decl
decb
push
mov
jo
push
mov
adc
stos
mov
inc
cli
pop
mov
or
push
pop
mov
lods
stos
adc
sub
setl
push
repnz
push
lret
inc
pcmpeqd
call
jbe
sbb
filds
and
ljmp
push
stc
push
jp
jae
cli
pop
inc
adc
stc
mov
sub
push
sbb
rolb
mov
idivl
pop
or
jns
mov
fimull
aaa
dec
ljmp
cwtl
jo
je
add
js
xchg
insl
pop
mov
dec
lods
xchg
jo
jmp
mov
fdivs
fdivrl
cmp
sti
mov
movsb
stos
xor
pop
mov
mov
and
dec
mov
sbb
push
cmp
mov
pop
push
nop
xor
or
or
aad
cmp
iret
pop
push
mov
push
push
jecxz
fadds
xchg
sbb
psllq
das
stos
adc
xor
fimuls
sbb
or
cwtl
out
pop
cmp
and
outsl
jge
imul
xchg
xchg
and
pop
stos
sbb
sbb
inc
push
cmc
mov
fsubrs
xchg
dec
push
dec
dec
std
fs
pushf
xor
jle
cmc
addr16
cs
stc
out
xchg
sbb
lret
pop
or
push
adc
inc
stos
xchg
cmp
push
mov
and
test
fs
mov
pop
xor
sbb
aad
addr16
mov
cmp
ljmp
popf
lock
pop
roll
mov
ret
out
inc
cld
loope
sbb
jmp
test
sub
adc
call
xlat
aad
repnz
insl
cld
push
or
add
push
mov
arpl
testl
bound
dec
xor
and
add
subl
hlt
aaa
hlt
sbb
cmp
mov
add
xlat
pop
xchg
lcall
and
call
sbb
lock
in
loope
mov
fwait
pop
and
stos
xchg
mov
popa
scas
and
daa
cli
cmp
ja
es
sub
push
xchg
push
data16
or
stos
jo
sub
mov
mov
pop
std
out
pop
aad
sub
sub
mov
addr16
popf
ss
sbb
push
rol
xor
aad
dec
mov
sarb
dec
daa
jno
pop
jmp
outsl
dec
mov
adc
push
or
insl
out
icebp
sti
push
xor
and
jl
xor
cmp
js
mov
int3
mov
js
lods
or
pop
shll
xor
dec
movsl
mov
mov
shl
vmwrite
sarl
test
shlb
and
push
mov
hlt
cli
jecxz
cmp
test
sub
into
pop
mov
addb
aaa
inc
loop
test
mov
jle
adc
scas
cmpsb
iret
cld
inc
fmuls
movsb
cmpsb
mov
adc
lret
fwait
pushf
fwait
and
imul
shl
and
fildl
xor
pop
or
mov
add
lods
push
pop
jbe
fsubrl
jmp
mov
pop
dec
lds
fcompl
inc
shrb
js
outsw
lret
pop
pop
or
pop
lret
std
jle
add
or
aam
loope
imul
xor
into
or
mov
mov
es
pop
popa
and
cli
and
mov
sub
add
lret
out
mov
inc
fdivl
sbb
aaa
mov
jne
xor
shrb
cltd
scas
jecxz
enter
pusha
xor
lcall
fcomps
sbb
aaa
fcmovnb
outsl
inc
jns
fisttpll
std
adc
lods
or
insl
cli
mov
cmpb
pop
jle
fildll
lea
fcomps
cmpsl
jmp
fistpl
mov
ret
adc
loope
out
stc
es
fildll
pop
repnz
xor
loopne
xlat
aaa
inc
stos
jecxz
scas
jnp
stc
sub
push
pop
sbb
jmp
daa
cmp
mov
sarb
ficoms
stos
fcom
mov
clc
xor
pop
test
mov
mov
push
fldcw
cmp
pop
aaa
inc
xor
cmp
mov
fiaddl
cmp
jge
jo
int3
scas
ja
adc
dec
and
or
popa
pop
stos
popf
inc
and
sbb
inc
and
xor
mov
cmp
or
and
add
xchg
xchg
shll
movsb
or
mov
pop
imul
fmull
xor
jge
outsb
pop
add
mov
mov
inc
insb
adc
and
out
test
jo
jae
loope
mov
push
ret
inc
inc
mov
sub
scas
cmpsl
xchg
loop
mov
sub
dec
cmp
jno
sub
mov
xchg
ss
xchg
jb
popa
push
or
pop
xchg
dec
sarl
scas
orl
andb
cmp
fdivl
sub
sbb
jl
test
xorl
dec
imul
push
inc
insb
jl
lods
push
dec
mov
dec
shl
cmp
nop
in
sub
aad
shrb
xchg
sahf
in
fucomp
or
fwait
lods
adc
jnp
sub
das
imulb
xor
ja
sub
jmp
cmp
ja
sbb
xchg
loop
jb
sbb
or
daa
xchg
enter
pushf
mov
addr16
rclb
push
lret
mov
push
jmp
in
pushf
and
lock
pop
push
mov
out
ss
pop
jbe
std
lret
pop
out
jmp
xchg
or
sbb
in
scas
mov
mov
push
fisttpll
lds
xchg
xchg
mov
push
pusha
push
cmc
xor
mov
mov
xchg
insl
lds
arpl
cmova
xchg
and
stc
jge
adc
ret
mov
mov
pop
movsl
je
test
ljmp
xor
push
pop
adc
lcall
cmpsb
jno
cmc
sub
lods
cmp
sub
pop
stos
aad
imull
imul
sub
loopne
in
adc
scas
pop
or
mov
mov
nop
mov
xchg
cmpsb
push
adc
sub
stc
in
inc
or
push
repz
lret
xchg
mov
insl
jp
xchg
inc
and
lahf
fidivs
mov
std
dec
sbb
rcr
push
mov
xchg
cmp
fsubl
mov
imul
cmpb
sub
mov
ljmp
out
mov
jmp
lock
mov
fwait
pop
rcrb
push
icebp
inc
push
ss
jns
mov
fdivrl
movsl
mov
sbb
or
fcmovnb
sbb
mov
jns
jle
mov
outsb
xchg
jo
imul
lret
outsl
call
out
pop
icebp
lods
ret
cmc
sti
pusha
jle
stos
push
fsubr
je
xchg
adc
hlt
insb
push
pop
andb
mov
xor
mov
call
or
push
inc
dec
call
pop
repnz
jns
push
dec
jge
popf
push
loope
es
adc
subl
enter
fxch
call
cli
imul
xchg
cli
inc
mov
fcomps
je
mov
jnp
xor
jp
pop
adc
das
xchg
inc
cmp
push
bound
dec
inc
inc
flds
dec
push
in
outsl
cs
dec
into
jne
fsubr
popf
in
fsubrl
mov
mov
ret
mov
inc
lea
scas
rcrw
xchg
adc
xchg
or
and
adc
xchg
sub
dec
sub
adc
xlat
mov
aas
jg
sub
xchg
add
jno
inc
stos
insl
mov
pop
imul
xor
je
pop
dec
and
cmp
das
xchg
push
lock
push
notb
push
test
sbb
jo
pop
repz
dec
sub
outsb
addr16
jmp
sub
outsb
sbb
mov
stos
adc
frstpm(287
adc
inc
push
adc
cmpsl
xchg
and
sbb
js
pop
clc
mov
cmp
cmp
loope
jno
jg
loope
push
fincstp
xorl
dec
dec
or
xor
mov
sahf
pop
shrb
jne
mov
mov
cmpsl
movsl
ffree
push
cmpsl
ljmp
mov
das
push
mov
mov
adc
hlt
div
popa
xchg
mov
cmp
les
repnz
sub
fs
push
mov
jge
scas
je
xor
imul
in
dec
cli
jle
add
divb
cld
mov
add
ret
push
repnz
push
jecxz
bound
add
in
lds
popf
mov
mov
and
jo
imul
imul
xchg
push
dec
pop
imul
orl
push
adc
jne
scas
iret
sbb
adc
mov
daa
cld
mov
pushf
in
lods
pop
or
insl
fsts
bound
cwtl
faddl
push
out
repnz
fldenv
mov
lock
jns
ret
repz
push
mov
das
mov
and
shl
push
mov
dec
or
mov
jmp
jge
rorl
xchg
filds
imul
pop
and
pop
adc
pop
sub
cld
sbb
cmpsb
mov
pop
repnz
mov
dec
jg
lcall
cmpsl
xchg
out
popf
fbld
push
leave
rorb
mov
add
cmp
cmp
or
andps
fsubs
inc
adc
in
in
je
ljmp
and
das
shlb
movsb
dec
cmp
adc
es
outsb
imul
nop
mov
ljmp
jecxz
xor
push
ja
and
outsb
xlat
lock
push
popf
ljmp
jp
sub
dec
addr16
movsl
inc
outsb
int
jne
jle
inc
cs
in
insb
xchg
mov
movsb
mov
cmpsb
imul
xchg
out
jo
les
cmpl
leave
call
cmp
xchg
mov
sti
sub
ja
lods
add
push
mov
xor
ljmp
sub
lret
mov
adc
inc
lret
insl
add
test
mov
xchg
dec
mov
xchg
sub
cmpsl
sbb
jle
lret
push
or
dec
sbb
push
cli
pop
lcall
jns
inc
ja
pop
js
push
and
scas
push
push
xchg
jmp
sbb
scas
int3
mov
mov
cmp
inc
pop
popa
dec
out
dec
sub
scas
or
negl
xor
dec
cs
mov
sub
cmpsb
sti
out
call
cmc
mov
mov
pusha
xlat
bound
mov
ja
aas
scas
push
mov
xor
dec
inc
dec
ds
mov
jae
movsb
iret
mov
push
adc
or
fimuls
subb
call
rcll
movsl
or
or
push
stos
push
or
jbe
add
jmp
fs
jbe
lea
pop
mov
mov
mov
push
or
aad
mov
in
inc
xor
imul
push
sub
pop
jecxz
ficoml
cmpsl
cltd
js
popa
cs
sahf
jecxz
in
std
sahf
fwait
sbb
sbb
daa
int3
cld
xor
jne
jnp
dec
or
loop
fmull
xorb
mov
jo
mov
es
inc
xchg
sub
cld
imul
jo
out
jo
sahf
dec
xor
enter
sti
sbb
pop
iret
add
stc
xchg
add
into
lret
sbb
push
and
push
jle
cmp
cli
sub
test
testb
xor
dec
sub
jp
mov
xor
adc
cmp
repz
xor
xor
ds
loope
cmc
mov
les
negl
jnp
shr
push
out
xchg
lcall
rorl
and
not
push
or
lret
push
mov
and
or
sub
mov
or
sahf
push
jbe
xchg
rcr
adc
rolb
adc
jae
neg
pop
out
notl
pop
or
lock
push
insb
fwait
insl
inc
pop
jp
shlb
cmc
xor
lea
xchg
jne
in
movsb
jb
mov
leave
ljmp
lds
sub
stc
push
xchg
cmp
sub
ds
dec
jnp
clc
lds
sti
jb
jmp
pop
out
jns
adc
push
inc
into
inc
pusha
je
das
adc
sbb
popf
push
call
nop
lcall
dec
mov
movsl
adc
sbbb
idivb
in
outsl
adc
and
sbb
mov
or
insl
inc
fildll
mov
pop
cmp
aam
cmp
gs
test
adc
mov
inc
push
xchg
insb
inc
insl
cltd
and
insl
iret
popa
addr16
xchg
mov
xchg
mov
bound
push
popf
xchg
rorl
push
mov
cli
push
sahf
sti
xor
enter
jo
add
pushf
sub
fists
push
lods
pop
add
xor
push
ret
popa
cmp
loop
popa
push
mov
iret
adc
inc
aad
lret
pop
mov
repz
insb
add
arpl
fisubrs
cmc
xor
into
adc
imul
cmp
in
push
inc
hlt
test
and
lcall
das
adcb
push
pop
cmpsb
dec
xor
mov
mov
mov
cmc
xor
outsb
das
cmp
push
cmp
loopne
or
or
inc
push
inc
js
adc
inc
ret
sub
jecxz
pop
xor
cld
sub
add
fistpl
inc
xor
pop
ds
cmpsb
mov
cmp
add
sub
pop
aaa
aam
jg
sub
addr16
cltd
ss
mov
icebp
mov
cmp
xor
das
jp
dec
xchg
mov
fidivrl
mov
jae
test
aad
in
cmp
aaa
loopne
lahf
jmp
cltd
mov
insl
cld
in
es
ficompl
jbe
dec
jl
enter
ds
pusha
dec
mov
push
cmpsl
xchg
rcll
movsl
pop
mov
xor
lock
or
mov
aam
imul
into
flds
fcoml
es
mov
cmp
in
test
jmp
ret
and
xorl
dec
lret
clc
add
stc
mov
adc
pop
pop
stos
lea
scas
and
test
fcomip
dec
push
aad
or
dec
in
xchg
popa
inc
gs
popa
jnp
loope
jmp
pop
add
fisubs
or
popf
mov
and
in
add
xchg
mov
or
outsb
cmp
popf
jge
push
es
mov
jnp
adc
imul
mov
int
out
jp
insl
int
lret
icebp
mov
jle
sbb
repnz
sbb
sub
sub
out
push
jg
lcall
xchg
hlt
cmp
and
xchg
cmp
cld
cmp
jo
add
mov
xor
xchg
sbb
data16
arpl
mov
cmc
fcomi
add
sbb
sbb
xor
sub
dec
xchg
pushf
cs
mov
mov
inc
sti
and
lcall
push
test
stos
lahf
movsl
lock
int
push
inc
adc
idiv
mov
lahf
jno
dec
inc
testb
pop
jle
testb
out
xor
andl
test
das
aad
push
setnp
fiaddl
xchg
lahf
lcall
push
aaa
xchg
jo
push
int
add
or
adc
cmp
sbb
std
or
add
mov
das
imul
fisttpll
dec
cli
and
xchg
or
daa
mov
inc
xor
iret
out
jle
pop
es
xlat
mov
inc
adc
je
stos
cmpsb
mov
push
dec
enter
push
sbb
pusha
jne
push
adc
dec
push
cmp
cwtl
testb
mov
bnd
push
xor
jae
jb
outsl
xchg
loop
sub
pop
je
orl
mov
popa
enter
add
xor
loope
sub
fucom
sbb
pushf
hlt
xchg
scas
cltd
aaa
inc
imul
xor
sti
xor
leave
jge
inc
jle
cwtl
mov
mov
sbb
pushf
pop
and
jns
shrb
inc
xor
dec
neg
icebp
jge
stos
rcrb
xor
xor
xor
or
pop
lret
std
icebp
mov
pop
mov
sbb
int3
cmpl
scas
sbb
xor
or
mov
mov
scas
mov
pop
push
add
mov
push
dec
fistpll
cmp
jo
mov
loopne
mov
or
dec
sbb
iret
xor
ret
lock
es
adcb
sbb
pop
test
mov
push
andb
pushf
inc
es
lahf
sub
test
mov
xchg
leave
mov
xor
mov
push
xor
mov
scas
adc
dec
in
or
cmp
pop
sub
inc
pop
aaa
push
add
subl
xchg
inc
cmp
pop
sub
adc
xchg
adc
and
in
mov
jo
lcall
pushl
sbb
mov
mov
das
lea
insl
aam
pop
mov
fstpt
inc
cmpsl
or
test
in
push
call
iret
scas
jbe
cmp
hlt
or
icebp
push
and
cmpsb
cmpsb
js
arpl
add
jb
mov
pushf
or
mov
aad
push
mov
pop
and
and
aaa
stos
pusha
sub
mov
pop
xchg
cmp
cmp
int
or
lret
mov
mov
xor
inc
xchg
jb
les
mov
mov
ret
mov
les
call
mov
lea
nop
dec
in
push
out
sbb
notb
pop
adc
les
mov
sub
in
push
mov
add
or
call
inc
and
or
jne
outsl
stos
lret
enter
xor
je
imul
int
push
fstp
xor
and
into
mov
mov
in
lret
xchg
push
mov
dec
and
enter
mov
into
cwtl
addb
dec
loopne
pop
mov
sub
pop
sub
insb
cmpb
repnz
frstor
xlat
adc
xor
mov
icebp
in
lcall
shrl
inc
in
sbb
xor
setp
shr
or
dec
hlt
and
and
stc
outsb
push
into
jecxz
outsl
mov
scas
stos
movsl
out
add
and
cwtl
add
and
inc
xor
enter
and
add
stos
ss
imul
xor
mov
adc
push
push
jmp
fildll
mov
push
imul
jno
xchg
push
cmp
out
sub
dec
push
in
lods
pop
loop
lea
push
mov
fstpl
cltd
mov
in
lret
bound
jge
popf
pushf
or
cmp
mov
mov
cmp
xchg
xchg
mov
jge
std
insl
mov
jl
mov
sub
jo,pn
sub
dec
push
repnz
mov
in
and
cmp
jl
sub
rorb
mov
ja
dec
cmp
mov
or
shlb
sbb
scas
xchg
and
pop
pop
test
jb
int
jns
pop
dec
loop
sti
jnp
or
lea
sahf
test
jbe
mov
pop
aas
jmp
into
and
or
and
aad
cmp
bound
dec
mov
aas
adc
dec
loop
xor
ljmp
shlb
std
call
fldl
push
adc
dec
pop
inc
inc
in
mov
sbb
xor
out
pop
hlt
cltd
and
pop
mov
rorl
push
xor
das
test
aaa
cs
stc
dec
popf
mov
add
data16
or
dec
pop
loope
icebp
add
aaa
pop
js
adc
jmp
test
ljmp
pop
clc
insl
imul
and
in
jbe
sbb
push
adc
pusha
xor
push
push
fwait
push
mov
cli
mov
icebp
mov
push
inc
xchg
fcmovne
subl
loope
add
adc
dec
lds
mov
sti
dec
sub
insl
sub
xchg
push
out
sbbl
es
push
xchg
pop
adc
test
sbb
jbe
jmp
lahf
inc
mov
rcrl
push
repnz
out
jg
jle
outsb
dec
mov
out
dec
ret
js
aaa
jg
mov
in
pusha
xor
cmp
inc
xor
push
cmpb
cmp
adc
leave
mov
push
xchg
and
push
xor
jnp
inc
cmp
or
das
dec
les
push
xor
stos
mov
dec
daa
call
cmp
imulb
jmp
inc
sbb
or
sbb
xchg
gs
mov
cmpsl
push
xchg
idivb
dec
imul
push
inc
out
pushf
add
xor
ja
inc
enter
adc
jp
out
andl
or
and
aas
mov
notl
ljmp
xor
movsl
push
orb
push
sbb
fildll
cld
test
or
hlt
leave
mov
sub
pusha
cmpsb
imul
scas
out
adc
inc
int
xor
xor
pop
cmp
scas
jge
shrl
push
and
mov
adcl
or
aaa
or
mov
push
fnsave
ret
mov
ljmp
ret
pop
pop
lock
xchg
cli
fistl
inc
arpl
incb
sti
lret
jnp
cmc
or
jo
pop
iret
bnd
rclb
mov
pop
cmpb
mov
mov
in
fwait
js
inc
rol
sbb
jge
or
sub
inc
imulb
sti
push
andl
out
arpl
fnsave
lret
sbb
cs
test
sarb
inc
popa
stc
mov
outsb
mov
fsubr
push
mov
sbb
shl
jno
out
jns
mov
pusha
dec
mov
jbe
push
dec
out
push
jmp
xchg
fucomp
sbb
fdiv
out
mov
dec
loop
inc
aaa
push
adc
dec
jns
cmp
xlat
ret
shll
es
push
outsb
adc
movsb
cld
call
mov
adc
daa
and
out
jno
test
mov
enter
rcll
cmpsb
adc
addr16
decl
or
lret
inc
pop
add
inc
rcrl
ss
mov
cltd
cmp
clc
int3
xor
mov
xor
sub
lahf
enter
loop
nop
sahf
and
xlat
jb
inc
fildll
gs
sti
ljmp
push
adc
pop
mov
push
mov
adc
out
aad
xor
push
or
imul
notb
mov
mov
sub
shl
imul
dec
les
cmpsb
outsb
mov
imul
repz
fdivs
xor
cmp
ljmp
xchg
lahf
mov
daa
sti
sub
pop
arpl
popf
mov
sub
cmp
mov
daa
cmp
sbb
cwtl
inc
sarb
push
adc
add
stc
andl
cmp
dec
cmp
fmuls
add
mov
push
pop
cmp
push
shll
scas
cltd
pop
ds
test
bound
and
fs
mov
or
ficompl
dec
inc
and
outsl
imul
adc
pop
sahf
jp
dec
shr
imulb
outsl
enter
add
push
dec
icebp
lods
scas
enter
adc
clc
test
iret
inc
xchg
cmp
rclb
mov
adc
aam
push
fldl
sub
mov
pop
out
push
adc
loope
cmpsl
scas
stos
fnstenv
mov
je
xchg
adc
sbb
jg
pop
ret
xchg
mov
into
insb
xchg
sbb
addr16
insb
and
and
mov
add
dec
or
cmpsb
mov
adc
xchg
insl
loop
inc
xchg
enter
loope
cmpsb
or
cmp
enter
xchg
push
ret
pop
xor
out
pusha
orl
movsb
or
jge
fdivs
cmp
cmc
stc
or
pop
lcall
lods
outsl
divb
aad
cmp
mov
mov
mov
ds
cmp
dec
sub
add
lock
push
loop
sub
pop
jge
sub
or
and
mov
jns
adc
fwait
lea
xor
xchg
jmp
jae
xchg
xorb
daa
lcall
mov
jp
push
and
jmp
cmp
lret
push
jns
and
jle
stos
ret
cmp
sub
orb
je
sub
push
lods
jbe
xor
call
stos
mov
sti
lea
and
xchg
inc
inc
mov
std
sub
int
das
jo
push
xor
out
xlat
push
cmp
pop
ds
ficomps
ds
insb
dec
nop
lock
data16
push
divl
fwait
sti
jnp
lahf
mov
push
movsb
inc
add
push
pop
scas
das
adc
in
leave
popf
push
xchg
inc
push
mov
into
adc
popa
lret
ret
inc
aaa
vmread
add
jecxz
stos
bnd
lock
rclb
movsl
enter
jmp
xchg
into
adc
pop
mov
daa
pop
adc
and
push
fnsave
ret
mov
push
lret
insb
cmpb
data16
sti
mov
sbb
clc
xchg
jb
add
aas
int
daa
mov
inc
std
mov
add
pop
ret
ret
pop
cmp
jns
mov
sti
pop
ljmp
sbb
add
dec
enter
subb
pop
test
mov
stos
jp
mov
lcall
jle
mov
push
and
jg
lcall
mov
test
sahf
mov
imul
test
into
cli
jl
jnp
test
pushf
das
test
fwait
dec
add
pop
jo
xchg
pop
xchg
cmp
pop
cmp
cwtl
sub
inc
ljmp
std
stos
inc
orb
cmpsl
cmc
push
xor
or
cmpsl
repnz
add
out
xor
mov
shlb
or
xor
cmpsb
dec
lods
cld
arpl
cmpsb
lret
cmp
push
adc
cmpsl
mov
adc
mov
in
cmp
xchg
or
push
outsl
gs
test
imul
cmpsb
je
jecxz
inc
pop
in
push
roll
loope
jle
mov
into
sub
je
push
lock
sbb
xchg
push
scas
push
sub
pop
pop
adc
lret
cs
clc
xchg
test
das
fidivrs
cmpsl
push
femms
repnz
movsl
mov
in
aas
lret
or
jno
fldenv
pop
fbstp
xchg
in
std
adc
test
cli
adc
xor
ja
cld
jl
cmc
dec
test
lret
fcompl
sbb
fs
dec
clc
adc
xlat
mov
fwait
sbb
repnz
mov
mov
sarb
loop
push
out
adc
mov
jo
lock
ss
cli
lock
sbb
imul
int
sbb
push
ja
or
mov
bnd
lcall
mov
in
or
and
mov
das
cmp
insl
dec
cld
lret
mov
out
mov
xchg
jns
push
int3
fs
inc
or
push
mov
ficompl
das
cmp
lret
into
adc
mov
or
jle
int
mov
xchg
adc
and
shl
push
das
cmp
dec
add
mov
pop
or
xchg
int
das
outsl
stc
dec
jbe
cmp
jnp
shlb
pop
jp
mov
lods
loopne
in
out
mov
add
in
orl
ss
adc
xor
pop
mov
cmpsl
inc
push
xchg
and
jb
mov
sub
inc
or
dec
je,pn
adc
mov
popa
xchg
inc
inc
adc
fdivrp
out
in
dec
arpl
pushf
ljmp
cmp
push
jne
pop
lea
sbb
dec
cmpsl
dec
data16
dec
push
lahf
add
ss
pushf
out
popa
mov
pop
fiadds
mulb
jp
shll
xor
inc
dec
inc
xlat
inc
push
into
or
leave
clc
je
enter
pop
jo
stc
push
cmp
sub
movsl
pop
dec
jo
pusha
ljmp
xchg
xor
insb
jo
mov
sub
je
adc
enter
in
scas
adc
enter
outsl
or
pop
inc
hlt
std
stos
xor
push
stos
sub
xor
pop
and
lods
mov
mov
mov
mov
sub
clc
xchg
xor
sub
outsb
cmp
mov
lods
aas
in
ss
cmp
or
mov
mov
aaa
inc
xchg
xchg
cs
ret
arpl
add
or
mov
pop
daa
and
pusha
xchg
mov
pop
inc
cmpsl
inc
sub
mov
sbb
push
in
in
repnz
sti
enter
pop
cmp
or
pop
std
inc
adc
and
shl
aam
insl
lahf
outsb
cmp
dec
pop
xchg
pop
cs
in
push
dec
insl
sarl
outsb
lods
fdivl
repz
sahf
sbb
ljmp
popf
lret
mov
jmp
jmp
pop
popf
mov
or
dec
push
inc
icebp
and
aaa
pop
mov
mov
fcom
inc
mov
adc
mov
insl
or
sub
mov
or
addr16
adc
dec
or
or
outsl
pop
mov
adc
std
push
push
push
dec
shll
sub
in
ficomps
outsl
cmp
and
xor
dec
mov
add
adc
jne
movb
stos
dec
cmpsb
pop
mov
jne
or
push
ss
adc
pop
jecxz
pop
mov
dec
sub
push
clc
push
add
cltd
or
int
mov
ret
add
inc
or
es
cmc
mov
data16
les
mov
add
scas
or
push
mov
push
mov
daa
cmp
inc
movsl
out
inc
mov
insb
data16
fs
loop
mov
fmull
std
cmc
dec
jbe
test
test
fsubrp
sbb
sub
mov
rcll
test
daa
out
cmpsl
in
add
loop
mov
hlt
xchg
push
out
push
xchg
mov
mov
test
pop
mov
xor
in
icebp
and
es
jmp
push
ss
adc
dec
inc
stos
incb
and
jmp
push
xor
faddp
sbb
sub
xchg
push
sub
mov
lret
dec
js
or
ret
mov
add
lods
or
stos
adc
and
lock
leave
sbb
xchg
xchg
out
jne
xor
sub
adc
int3
adc
mov
cmp
inc
lods
push
adc
fisttps
fwait
jg
adc
insl
enter
icebp
jecxz
insb
loop
test
jae
icebp
sbb
ret
cmp
mov
loop
push
rcr
ficoms
xor
shlb
jb
cmpsb
inc
dec
mov
sbb
xor
scas
aad
adc
xorb
daa
and
dec
in
lock
dec
pusha
mov
push
jmp
and
sub
ret
addr16
sub
or
roll
cmc
sarl
push
clc
xchg
outsl
push
js
xchg
xchg
mov
mov
xor
fstps
pop
daa
mov
aad
idivb
fistl
iret
arpl
inc
ljmp
jbe
std
dec
ffree
mov
stos
addr16
test
fs
inc
sbb
lret
das
addb
or
inc
inc
pushf
mov
sub
xchg
xor
das
xor
popf
orl
adc
sbb
mov
testl
xor
rcrb
or
imul
push
insl
jle
daa
test
push
push
bound
push
or
push
inc
out
and
jl
call
adc
xor
cmp
out
ss
xchg
jne
cld
rorl
and
cmc
pop
dec
push
inc
pop
imul
adc
pop
or
outsb
jns
loope
jns
pop
inc
popf
push
fmull
xchg
mov
push
lahf
sbb
lret
or
or
cmp
sub
dec
sbb
sti
imul
jns
les
sub
mov
clc
sbb
sahf
repnz
mov
adc
mov
inc
or
aam
or
andb
loope
lahf
add
xchg
incb
pop
sub
or
or
mov
sub
cli
xchg
imul
cmp
cld
outsb
pop
stos
mov
cmp
out
xor
mov
or
filds
scas
sbb
add
lea
dec
adc
xchg
scas
loopne
sbb
stos
leave
add
sub
xor
shll
sarl
cld
pop
js
ficoms
imul
mov
mov
mov
dec
shr
test
xor
test
leave
pop
fbld
mov
push
mov
push
mov
popf
dec
or
cmp
jns
mov
push
adc
xor
xchg
es
lock
je
sahf
jmp
sbb
push
in
adc
jo
jo
aas
fnstcw
pop
orb
enter
xor
add
inc
mov
daa
ljmp
dec
dec
loopne
sub
cmp
call
inc
cmc
mov
dec
mov
and
jbe
pop
addb
mov
jle
ds
js
pop
push
jle
push
out
jb
dec
xor
add
cmp
pop
es
je
gs
mov
sbbl
mov
xlat
adc
jge
ds
test
jp
xlat
test
inc
adc
sbb
gs
out
xor
fwait
jmp
iret
and
xchg
sub
fldl
jo
sbb
cli
xor
sbb
fisubs
movsb
fisttps
icebp
pusha
or
and
add
cmp
push
or
test
mov
xor
push
xchg
and
cmovp
push
sbb
add
pop
inc
clc
cmp
nop
aam
push
push
pop
jbe
in
fcmovbe
sahf
mov
or
mov
lods
add
pusha
mov
shrl
ss
loop
push
ljmp
pushf
aad
push
ljmp
stos
or
inc
adc
and
loop
and
and
or
rcll
and
jg
pushf
push
push
mov
push
and
sub
mov
xchg
adc
dec
sbb
sub
arpl
adc
mov
aam
std
icebp
fucomp
lret
lret
sub
adc
hlt
pop
or
add
sub
xor
sub
scas
mov
test
mov
fisubl
aas
loope
pop
stos
dec
inc
cmpsl
std
mov
and
pop
and
or
daa
cltd
mov
aaa
pop
in
jo
je
fidivs
jg
or
pop
add
repz
xchg
adc
fucomip
sub
jl
mov
push
test
sub
add
add
xor
daa
push
pop
test
or
repnz
pop
bound
daa
jg
push
xor
lahf
data16
dec
and
gs
fstpl
les
movsl
stc
ret
cld
adc
inc
sahf
lret
jmp
xor
negb
mov
daa
ss
adc
inc
jns
push
and
xchg
fcmovb
jno
sahf
mov
icebp
xor
sub
ljmp
push
iret
pop
xchg
mov
fsubrs
imul
jno
mov
sub
xor
aam
loop
daa
imul
pop
iret
lret
fidivs
jge
sub
jge
inc
inc
xchg
loopne
xor
je
int3
stos
bound
add
lret
inc
adc
lods
mov
push
inc
lahf
cmpsb
mov
bound
pop
cwtl
or
pop
cmp
arpl
and
mov
dec
dec
adc
mov
lret
xchg
or
fwait
fs
push
jmp
mov
pusha
daa
ret
fnsave
shl
pop
dec
sub
xchg
js
adc
xor
or
mov
mov
into
push
xor
and
add
dec
mov
mov
add
test
outsl
mov
lret
arpl
jl
push
sbb
dec
cmp
xor
inc
cmpsl
lds
sub
aas
insl
adc
fldl
sbb
xor
cmp
xor
rorl
xchg
stc
and
push
adc
push
xchg
je
xor
mov
fstpl
sub
adc
stos
sbb
das
inc
out
jae
push
rorb
lds
icebp
pop
cmp
xor
dec
sub
cli
iret
lahf
jbe
lahf
outsl
and
stc
adc
cmpsb
mov
mov
inc
imul
out
mov
pop
incl
les
in
adc
inc
push
mov
pop
lock
dec
fiadds
add
dec
outsb
xchg
sbb
test
mov
jp
in
cmp
dec
sbb
jle
das
xor
push
test
icebp
and
xor
mov
cs
aam
pusha
stos
pop
xor
sub
adc
insb
or
ficomps
popf
sub
and
inc
mov
daa
xchg
sbb
add
cld
push
enter
or
imul
pop
ja
inc
cmp
inc
enter
outsb
pop
imul
cwtl
loop
and
xchg
nop
add
out
sbb
fsub
xchg
xchg
sbb
mov
fldcw
pop
cmp
push
cmovne
xchg
inc
push
sub
mov
add
inc
outsl
in
repz
pop
adc
addr16
inc
rclb
sub
mov
push
mov
push
call
lret
mov
shll
adc
adc
aas
movsl
nop
sub
mov
and
pop
aas
enter
out
outsl
sbb
iret
pusha
dec
mov
push
idiv
pop
loopne
inc
jno
xchg
xor
lds
lret
or
int3
mov
dec
and
mov
adc
jl
movsb
sub
pop
sbb
lock
or
mov
cmp
aaa
jbe
icebp
out
pop
ret
out
into
xor
stos
jns
or
xchg
push
mov
pop
mov
into
in
jnp
imul
testb
loopne
arpl
xor
xchg
out
clc
in
xor
das
daa
dec
movsb
scas
mov
push
xchg
in
es
jl
test
in
leave
pop
adc
mov
xor
or
pop
pop
mov
cmp
call
in
test
mov
dec
out
lea
dec
jne
xchg
inc
popa
jg
inc
mov
push
out
xchg
pop
daa
mov
xor
xor
dec
push
divb
aam
mov
fwait
test
fdivl
insb
pop
sbb
subb
pushw
xor
rcl
dec
pop
std
in
or
pop
incb
xchg
push
add
or
jecxz
mov
jge
pop
int
pop
cmpsb
shrb
or
push
int
daa
ret
lret
push
dec
outsl
cmpsb
mov
cmp
mov
sahf
jmp
stc
inc
push
sub
jnp
mov
xchg
inc
stc
jbe
xchg
decb
pop
sub
dec
out
dec
daa
into
mov
mov
fisubrs
data16
xor
jns
push
out
arpl
mov
ljmp
inc
daa
cltd
stos
lcall
push
test
loop
out
addr16
mov
sub
scas
movsb
jmp
or
sub
pusha
aad
sbb
mov
jb
ds
dec
jle
jmp
lret
pop
js
mov
int
js
sub
inc
dec
stos
nop
call
sub
test
xor
mov
rolb
out
addr16
and
je
mov
inc
xchg
push
and
mull
or
addr16
inc
or
pop
scas
sbb
sti
faddl
sbb
mov
loop
jge
das
gs
push
idivl
movb
jmp
cmp
shr
aas
testb
or
add
inc
jne
lea
sub
dec
loop
push
inc
adc
imul
pop
push
add
inc
fldenv
fidivs
pop
loope
leave
inc
xor
lea
pop
adc
jge
push
lods
jne
lea
mov
ret
notb
ficompl
adcb
xchg
xchg
adc
std
xchg
lods
jnp
out
pop
pop
scas
arpl
mov
test
in
push
mov
repz
xchg
push
iret
subb
es
pop
fldcw
popf
jae
mov
sbb
das
and
mov
in
es
cmp
jmp
push
sbb
jmp
fisubrs
mov
clc
sbb
xchg
cld
or
das
xchg
lods
sub
pop
pop
jns
dec
fistl
repnz
xchg
jne
lret
dec
lea
std
push
jmp
xor
fildl
and
jge
and
outsl
divl
sub
mov
notb
test
testb
mov
jmp
sub
mov
jge
mov
pusha
iret
xor
das
in
mov
xor
sahf
mov
and
inc
mov
and
inc
adc
cwtl
and
mov
add
mov
cltd
movsb
insb
addl
mov
jbe
push
js
push
cmp
rclb
cmp
loop
ficoml
ficompl
imul
push
in
push
popf
shrl
push
cli
in
jb
xor
inc
xchg
stos
sbbb
test
sbb
mov
jg
jnp
xor
das
xchg
jge
cld
cmpsl
adc
adc
jp
mov
push
xchg
sbb
in
xor
mov
xchg
xor
cs
movzbl
mov
sub
stos
xchg
out
or
sub
and
mov
sub
stc
stc
sarl
ret
mov
mov
xchg
ss
dec
inc
sbb
add
sub
int
outsb
cmp
imul
fists
mov
push
xchg
mov
jp
cli
xchg
lods
in
jae
xchg
mov
cmp
out
dec
or
aaa
lea
jbe
add
scas
dec
out
call
jae
xchg
inc
sbb
popf
and
or
cld
xchg
mov
cmp
and
jb
imul
add
jl
or
rorl
jp
shrl
shl
sub
test
or
xchg
mov
ss
and
ja
lods
push
ficompl
dec
pop
ficompl
dec
xor
lret
xchg
inc
mov
leave
dec
push
inc
mov
ds
cli
adc
lock
push
and
jns
sarb
shrb
iret
add
or
fwait
test
loop
fsts
push
adc
xlat
cli
push
repnz
nop
adc
cmp
into
jno
adc
sbb
outsb
mov
jl
sarb
dec
mov
jge
out
jo
jbe
lds
clc
roll
xor
mov
dec
test
push
adc
sub
xchg
pop
mov
cmp
dec
mov
and
push
mov
inc
gs
mov
sti
cmpsl
mov
je
ret
ret
out
fwait
cmc
push
add
inc
outsb
xlat
test
dec
fmull
or
push
jnp
ds
lds
sahf
clc
mov
mov
sub
sbb
arpl
and
inc
pop
pushf
lret
sbb
push
subl
cmp
xor
icebp
push
sub
ds
jg
or
addr16
sti
push
or
inc
popa
mov
or
mov
or
and
mov
insb
jns
pop
mov
aaa
push
es
push
xor
test
shrb
cltd
inc
and
add
dec
inc
xor
popf
ret
stos
lds
stos
pop
fs
lods
jo
aas
ret
xor
sbb
sub
frstor
jmp
cs
movsb
out
fcmovnb
imul
xor
mov
dec
pop
movsl
loopne
sbb
dec
cltd
mov
cmpsb
rorb
xchg
adc
test
in
mov
adc
test
cmp
imul
out
sbb
inc
jnp
add
xchg
and
sbb
sub
aaa
lock
xor
lea
inc
inc
or
ljmp
loop
xchg
or
je
and
and
or
xlat
arpl
xchg
inc
ds
jp
add
xor
dec
pop
sti
lahf
pop
in
pop
cmpsl
sub
cmp
out
adc
pop
jbe
dec
cmc
dec
adc
push
adc
xchg
inc
inc
mov
xor
mov
fs
sbb
stos
je
repnz
test
sub
xchg
dec
sub
push
push
out
mov
pop
out
lret
xor
cltd
cltd
mov
stos
jnp
leave
pushf
rorl
adc
adc
and
lret
icebp
push
jmp
push
push
pop
movl
xor
mov
rcrb
testl
xor
ja
sub
bound
jmp
mov
pop
ret
pusha
test
hlt
mov
push
jp
lcall
sub
lcall
xchg
xchg
inc
and
mov
push
sub
loopne
clc
stos
or
lahf
cmpl
xor
xor
and
mov
xchg
int
iret
sub
or
outsb
divl
insl
ss
lods
xor
adc
mov
jo
jbe
cmp
sbb
mov
add
mov
pop
imul
cmp
shll
mov
shlb
outsb
sub
mov
mov
xor
mov
or
sbb
pop
jo
shl
push
xchg
dec
push
jle
fstpt
mov
push
jb
js
ja
dec
push
dec
movl
mov
sbb
int
outsb
or
pop
jmp
jl
dec
dec
mov
call
pop
jle
std
push
xchg
loope
out
push
loopne
mov
mov
daa
push
mov
int3
pop
or
ja
mov
xor
mov
push
xor
mov
scas
adc
shrl
mov
xchg
inc
lret
xor
push
scas
xor
sub
andl
adc
mov
cld
mov
lcall
or
inc
negl
mov
fdivrs
aaa
cs
popw
adcb
cmp
xchg
dec
jnp
je
sub
xchg
bound
mov
jle
into
jno
hlt
test
pop
not
mov
or
jnp
cltd
jmp
leave
insb
sbb
xor
push
sahf
cli
pop
sub
cmp
mov
cmp
mov
mov
fidivrl
mov
xor
sbb
sahf
add
cmpsb
test
fs
hlt
mov
cs
rorb
mov
mov
clc
arpl
hlt
stos
insl
cwtl
xchg
pushf
in
jae
mov
push
cmpsb
or
in
jecxz
adc
jmp
in
inc
or
xor
mov
daa
jbe
dec
or
mov
mov
in
push
pop
xor
push
repz
mov
cwtl
push
xchg
ja
fstl
je
pop
ret
xchg
es
outsl
popf
aam
xchg
xlat
xchg
sub
cmpsl
jl
scas
roll
pop
mov
rolb
add
fdivs
lahf
inc
jb
sbb
call
cmpsb
sub
mov
pop
sub
sub
adc
mov
in
sbb
hlt
enter
or
mov
je
nopl
dec
xchg
inc
shr
leave
cltd
repz
stos
push
loope
xor
jmp
dec
xchg
je
dec
insb
pop
adc
cmp
xchg
movsl
dec
int
rcll
push
inc
aad
call
jle
pop
inc
xor
scas
fsub
lea
out
les
sbb
adc
out
sub
ss
scas
cs
sahf
cmpsl
mov
pop
or
inc
sahf
andl
push
mov
sbb
sbb
pop
inc
stos
push
clc
mov
leave
stos
push
cmp
push
mov
cmc
push
jne
mov
or
outsb
adc
aaa
lods
xchg
repz
and
mov
loopne
push
sub
mov
sub
sub
mov
sub
or
xchg
lds
loopne
test
imul
add
pop
mov
loope
shl
add
jbe
or
inc
sub
jecxz
popf
xor
jl
dec
out
xor
sarl
xlat
mov
sub
add
sbb
dec
sahf
mov
ret
jno
or
addl
insl
push
xchg
mov
aad
filds
mov
sti
cltd
scas
jecxz
push
push
sub
push
jns
inc
adc
xlat
sbb
sub
adc
loopne
mov
imul
sub
adc
bound
rorl
lods
enter
or
stos
loopne
imulb
dec
inc
sub
inc
mov
adc
push
fiaddl
into
aad
lock
arpl
pusha
dec
jg
mov
sahf
jbe
aaa
roll
mov
sub
lods
jns
leave
push
lcall
xorl
gs
inc
jg
cli
test
mov
fistps
cli
imul
enter
sbb
add
fiadds
mov
and
push
jno
jno
jnp
or
out
fdiv
cmp
int
pop
mov
push
pop
push
and
xor
add
or
enter
stos
js
push
dec
sbb
push
xor
fstps
scas
xor
bound
push
repnz
dec
add
out
in
dec
loop
jo
das
std
xchg
std
push
lret
lods
push
pop
repnz
rorl
test
popa
pop
jb
fwait
dec
nop
pop
popa
repz
mov
or
ret
stc
cld
pop
cmpsl
loopne
pop
repnz
cmp
sub
ljmp
push
lds
dec
push
shr
notl
push
fsubs
fwait
jle
in
mov
repnz
icebp
pusha
int3
and
jge
les
mov
ret
imul
pop
das
mov
xor
test
pop
xor
hlt
xor
in
push
enter
dec
pop
out
jne
push
aaa
dec
fdivl
loope
daa
andb
pop
xchg
mov
test
add
and
push
imul
enter
pusha
mov
cli
dec
dec
mov
ljmp
or
test
dec
aad
cli
inc
outsb
mov
jp
cwtl
jl
adc
movsb
fmuls
push
in
insb
push
sub
jnp
shrl
testl
adc
inc
or
or
jmp
push
adc
push
dec
and
jge,pt
dec
test
lea
sbb
sbb
and
out
in
fldl
mov
cwtl
inc
xchg
mov
mov
fs
add
cmp
add
pop
adcb
cwtl
xchg
std
imul
in
dec
jmp
lea
push
icebp
sbb
add
jmp
movsb
dec
cwtl
int3
clc
xchg
neg
fldcw
xor
dec
lods
test
aam
cmpsb
sbb
mov
fbstp
jo
outsb
out
fsubs
data16
rcrb
ja
mov
rcrb
pop
fs
jecxz
pop
lret
sbb
repnz
ljmp
jb
sbb
addb
push
in
ret
in
push
push
push
or
into
out
fadds
ja
lret
bound
dec
adc
mov
bound
and
fnstenv
jne
rcl
cmc
cmpsb
stc
mov
mov
leave
mov
insl
pusha
xchg
out
inc
jge
rcll
mov
xor
sub
out
xchg
mov
fwait
jno
inc
stmxcsr
inc
pop
ficoml
jnp
lret
jnp
rcl
loope
stos
sub
iret
and
fmulp
push
arpl
mov
ljmp
jno
pop
ja
add
mov
mov
rcrb
inc
jmp
repz
add
outsb
push
daa
add
gs
mov
lahf
adc
leave
xchg
jle
push
out
mov
std
aas
addl
stos
push
xchg
or
xor
inc
mov
xlat
sbb
std
clc
push
lcall
mov
jmp
loop
aam
push
inc
imul
out
loope
cld
je
outsl
fnsetpm(287
add
pop
cs
adc
pop
daa
cltd
divl
mov
push
shlb
xchg
data16
mov
pop
mov
pushf
fcmovbe
sub
jne
pop
test
icebp
fsts
xor
pop
push
pop
xchg
push
sub
arpl
pop
gs
dec
lcall
movsb
jecxz
push
lret
add
das
jmp
sar
js
fs
rorb
mov
mov
or
test
xchg
movsl
scas
stos
repz
mov
cmpl
dec
jge
movsb
adc
mov
jle
addl
adc
or
aas
leave
lret
jo
inc
ss
ds
lret
and
loopne
mov
dec
iret
lret
into
imull
dec
scas
mov
mov
pop
mov
mov
push
push
movsl
cs
mov
hlt
jle
and
call
inc
lods
fldt
cmc
cwtl
fldenv
and
cmpb
or
lods
jbe
paddq
test
lods
dec
push
inc
bound
fistl
jbe
add
cld
mov
aas
sub
inc
imul
add
and
lods
imul
popf
dec
inc
mulb
dec
mov
stos
pop
inc
dec
rolb
mov
xor
add
sbb
imul
jnp
call
xchg
fildll
and
sbb
cmp
sub
out
clc
xchg
sub
add
pop
cs
add
push
sahf
adc
clc
xor
push
lret
ret
xor
push
jae
dec
movsl
pop
pop
pop
in
inc
fstpl
adc
push
cmpsl
sarl
fisttps
or
cmpsb
clc
lea
mov
push
adc
mov
sub
std
outsl
outsb
inc
sub
dec
aas
jns
inc
loope
or
add
sbb
pushf
nop
sub
fstl
jecxz
mov
sub
mov
std
push
and
mov
in
ss
inc
cmp
and
ds
fldcw
dec
dec
sbb
mov
loopne
sbb
pushf
nop
cmp
rcll
adc
mov
movsb
push
fsubrl
adc
das
inc
xor
and
inc
repnz
xchg
sbb
neg
fs
adc
leave
fs
xchg
lcall
inc
cmp
add
dec
in
jo
push
mov
dec
mov
mov
adcl
mov
shrl
or
pop
adc
call
shrb
mov
mov
xor
jbe
cmpsb
mov
in
mov
out
pop
cltd
rcrl
add
xlat
push
lock
inc
pop
sub
std
iret
sub
icebp
xlat
int3
push
ret
lcall
cmp
sbbl
xchg
sbb
pop
sahf
pop
sub
popa
rorb
mov
inc
cmp
frstor
out
fcompl
out
int3
jae
addl
pop
push
inc
and
mov
adc
shll
and
imul
fwait
pusha
scas
mov
or
jns
loop
jge
addr16
enter
jne
hlt
mov
or
sahf
std
sbb
movsb
push
push
sub
fiaddl
out
out
or
inc
in
sbb
mov
jb
add
mov
mov
add
icebp
mov
push
ss
cmp
lahf
decb
bound
ret
or
add
in
enter
fidivl
pop
mov
and
shr
ficoml
or
dec
popa
and
xlat
fldcw
mov
pop
mov
xchg
ret
adc
sbb
out
dec
stos
push
adc
scas
mov
test
out
jge
and
int
std
popf
xor
filds
jl
pop
or
pop
mov
nop
cs
cs
cmc
ds
xchg
dec
std
popf
orl
mov
dec
add
shll
cmp
xchg
jle
mov
inc
jp
push
xor
pop
call
dec
xchg
into
jb
mov
mov
in
jmp
dec
mov
in
jns
ds
mov
sub
jl
push
cltd
xlat
or
jle
cmp
scas
pop
adc
xchg
push
out
jmp
sbb
aas
shll
nop
pop
lcall
xchg
sti
xor
jo
call
or
sub
mov
jne
jmp
mov
mov
out
sub
dec
daa
mov
add
fstl
xchg
mov
in
mov
add
jmp
mov
jle
sbb
test
push
cmp
sub
pop
js
jp
xor
es
leave
daa
jae
jle
pop
inc
push
out
jnp
xor
mov
fsubs
jmp
aam
into
icebp
popf
mov
push
jo
daa
cwtl
adcl
dec
push
out
xlat
cmp
cmp
in
jmp
sbb
push
mov
cmp
sbb
lea
stos
aaa
add
lcall
jno
in
cmc
xchg
loopne
repnz
pushf
outsb
jbe
ret
and
mov
test
mov
aam
and
push
cmp
sahf
mov
into
sahf
sub
jns
rcrl
shl
lahf
xchg
adcb
mov
sub
hlt
into
cmp
outsb
lock
shlb
inc
das
mulb
mov
insl
adcl
shrb
sub
xchg
jecxz
inc
out
mov
cmp
cwtl
repnz
fs
add
cli
sbb
xor
push
jnp
push
int
mov
push
mov
dec
mov
std
pop
pop
lcall
in
jg
push
add
adc
popl
inc
or
ss
add
mov
mov
sub
jle
rep
xchg
loopne
dec
int
or
xchg
push
je
pop
xchg
sbb
sub
xchg
push
inc
sahf
dec
jne
orps
scas
movsb
pop
jmp
stos
in
outsb
and
inc
push
mov
sub
inc
push
add
jmp
mov
pop
dec
js
mov
scas
aam
pop
nop
pop
repnz
dec
scas
xor
shll
xchg
sub
jns
sub
pop
or
int3
imul
xchg
mov
adc
sub
and
pop
pavgb
sbb
sbb
add
pop
clc
xlat
dec
mov
iret
inc
test
test
ss
and
imul
sti
pop
cmp
lock
fnstcw
pop
pop
cli
mov
push
cltd
or
and
pop
stos
cmpsl
push
push
imul
mov
push
lea
push
cmp
adc
mov
popa
and
add
mov
cmp
aam
or
dec
repz
push
xchg
push
jno
sub
push
mov
int3
mov
xchg
test
mov
popf
dec
mov
push
mov
inc
adc
ss
adc
sbb
adc
int3
sub
loopne
in
and
mov
in
pushf
out
ljmp
std
mov
sbb
add
mov
mov
popf
dec
sbb
dec
xchg
and
fcomi
mov
mov
mov
cmp
test
xchg
inc
or
xchg
leave
sub
popa
dec
push
pop
cmc
adc
inc
cmp
mov
cld
and
jb
pop
xor
out
popa
fadds
jne
adc
xchg
and
sti
xchg
push
arpl
push
xorl
lea
sbb
pop
jne
xchg
mov
or
mov
shrl
dec
sbb
sub
sti
xchg
inc
cwtl
push
pop
sub
in
or
jge
push
notb
sbb
ljmp
shlb
adc
sbb
push
sub
xor
push
aaa
xor
outsb
das
fadds
pop
push
cmp
jns
push
mov
sbb
or
xchg
iret
sbb
call
dec
leave
icebp
push
xor
cmpsl
adc
scas
aas
inc
pop
ja
add
add
fisubs
in
hlt
mov
dec
hlt
push
pop
in
or
orb
aas
cli
loop
sbb
fs
arpl
rolb
xor
mov
dec
mov
dec
mov
mov
shrb
sub
mov
in
add
das
mov
lods
xchg
mov
into
out
push
dec
xchg
pop
jno
fstps
repnz
popf
aas
ljmp
js
cmpsb
push
insl
stc
sub
xchg
mov
add
dec
into
fsubrs
cmp
or
inc
add
and
cld
mov
lahf
fcmovbe
ja
xchg
push
out
cmpsl
outsb
idiv
mov
cli
repz
inc
pop
lcall
xor
pop
mov
adc
std
or
mov
test
shl
aam
lcall
jnp
mov
xchg
outsb
aas
mov
dec
daa
fstpt
popf
cmpsb
jo
sub
xchg
add
sbb
std
pushf
and
fistpl
or
xor
lret
mov
imul
inc
call
xchg
or
pop
mov
lds
jns
pop
adc
inc
cmc
jl
xor
sbb
push
xchg
ljmp
leave
dec
fucomp
xor
jns
cli
inc
or
pop
pop
out
jl
popf
bound
add
adc
push
pop
divl
mov
int
je
xchg
jno
stos
cmpsl
jp
push
leave
pop
and
js
aaa
js
js
dec
sub
mov
mov
push
push
push
popa
add
jns
adc
cmpsl
xlat
or
negl
jp
out
mov
adc
add
inc
cmp
pop
repz
pusha
lods
insl
fucom
mov
lods
pop
sub
inc
outsl
imul
jae
ljmp
mov
push
sub
push
aas
pushf
int3
rorb
xchg
cmpb
lcall
cmp
and
mov
or
cs
aaa
push
adc
pop
ss
out
cwtl
cmp
xor
dec
jnp
jo
outsb
jne
iret
pop
add
neg
cld
mov
push
sub
inc
pop
les
xor
sbb
mov
in
jb
adc
int3
leave
sbb
xor
iret
stos
sub
loop
adc
in
leave
or
or
jnp
xor
pop
push
sbb
dec
mov
pop
add
and
rorl
jge
pop
mov
inc
sar
xor
xchg
xchg
shrl
xchg
pushf
clc
in
in
sarb
mov
mov
repnz
push
fnstenv
jge
or
push
movsl
repz
stos
push
mov
mov
push
dec
dec
or
into
mov
xchg
aaa
jbe
or
mov
jl
add
jmp
push
push
loope
adc
stos
and
and
outsb
and
add
adc
cmpb
ja
and
dec
popf
adc
cmp
iret
cmp
xor
xchg
adc
cmc
xchg
dec
int
ret
out
xor
jbe
test
or
popf
in
or
push
test
sar
cmpsl
sub
cmp
movsl
sub
mov
frstor
das
add
cmc
es
jbe
shrb
aaa
dec
bound
aaa
cltd
stos
out
in
jbe
shlb
sbb
data16
popa
sysenter
xchg
call
mov
sub
mov
stos
nop
loop
std
inc
pusha
mov
or
mov
stos
jnp
push
mov
cmp
jbe
push
sahf
cmp
ja
jl
inc
stos
in
add
das
rcrl
add
pop
pop
add
ljmp
stos
jne
cld
testb
out
jns
and
add
cmp
add
xchg
out
notb
inc
xor
add
or
sbb
popa
leave
inc
mov
es
jno
bound
cmpsl
arpl
repnz
push
ret
adc
bound
inc
inc
cmp
sbb
push
push
lea
dec
sub
dec
dec
and
mov
and
outsl
jmp
pop
push
mov
test
jns
jmp
lahf
add
jge
jg
sub
loope
dec
aad
mov
fidivrs
adc
add
push
and
mov
xchg
je
pop
add
mov
sub
pop
jb
nop
mov
mov
pop
pop
sub
add
adc
xchg
mov
aas
in
pop
mov
push
mov
jle
in
imul
mov
lods
fisttpll
sti
push
lock
add
les
je
sub
stos
pop
jo
push
shll
in
xchg
sbb
into
mov
add
pop
into
stos
dec
push
lret
test
sahf
jmp
pushf
loopne
addr16
inc
sub
fwait
xchg
stos
push
jge
imul
push
stc
or
inc
jo
lds
ss
mov
fmuls
jns
and
jbe
subb
daa
inc
jo
out
stos
dec
xbegin
jo
sub
push
pop
out
inc
mov
popa
sub
jmp
out
jp
pop
popf
push
push
ret
sbb
test
jle
xchg
fisubl
loope
insb
sub
loop
test
mov
pop
pop
xchg
lock
js
sub
mov
jmp
adc
or
enter
dec
and
cmpsl
sti
and
inc
inc
lahf
imul
mov
lea
rcr
mov
jle
popa
pop
jl
lahf
sub
ret
clc
fldz
pop
pop
pop
je
sti
pop
sarl
push
jb
push
fnsave
mov
arpl
rorl
stos
push
xchg
shll
insl
mov
cmp
outsb
loopne
xchg
jo
jo
inc
fimull
xchg
mov
cmp
push
out
adc
jnp
and
ss
pop
cltd
in
cmp
into
ljmp
sub
addr16
test
addr16
cmp
sub
ds
in
sbb
inc
lea
shll
test
idivl
xor
mov
xor
cmp
cwtl
sbb
mov
inc
test
adc
xchg
pop
pop
push
pop
dec
iret
lret
mov
mov
or
xchg
or
xchg
sti
cmc
dec
cmpsb
inc
push
and
push
ljmp
xor
xor
loope
sbb
pop
cmpsb
hlt
stos
mov
and
gs
push
outsb
or
mov
adc
xchg
or
add
mov
cli
sub
mov
xorl
xchg
push
push
popl
fwait
stos
mov
out
inc
adc
xchg
cltd
sub
in
iret
jno
iret
mov
gs
insb
fisttps
sbb
sub
cmp
dec
and
std
mov
jbe
xchg
iret
in
pop
add
sbb
add
jmp
repz
cmpsb
mov
test
cmp
mov
dec
lea
xchg
arpl
cli
adc
or
cmpsl
xor
adc
notb
inc
mov
lcall
cmpsb
shll
sub
jbe
cmp
add
sbb
cmp
xchg
xor
lods
inc
lea
push
pop
dec
cmc
out
inc
lahf
inc
rolb
cwtl
incb
loope
push
push
lock
or
mov
lea
mov
mov
ss
push
rcrl
test
sub
flds
std
in
dec
xor
pop
dec
std
xor
cmp
mov
xchg
pushf
iret
lret
scas
clc
outsb
inc
hlt
popa
rorl
dec
mov
loopne
mov
pushf
jns
inc
or
imul
xor
push
jo
adc
sbb
xor
lds
cmc
push
mov
outsl
sub
cs
out
pop
shr
int
stc
dec
lret
pop
jno
jbe
mov
mov
divb
fldcw
jns
fidivrs
or
add
iret
push
xchg
test
dec
addr16
sub
pushf
push
sub
xchg
in
push
inc
insb
das
mov
dec
xchg
pop
xor
inc
out
add
xchg
xchg
and
pushf
and
fldcw
mov
add
jo
clc
je
sti
dec
cld
mov
and
xchg
subl
or
inc
movd
and
push
bound
push
scas
popf
jns
pop
mov
inc
aaa
cmp
jne
xchg
mov
in
mov
insl
cli
addr16
mov
mov
out
out
clc
xchg
call
or
stos
mov
mov
sahf
in
fwait
xor
sbb
dec
shrl
mov
xor
xchg
sahf
xchg
jbe
sbb
std
jbe
xchg
in
std
cmc
jns
mov
lea
lret
fdivrl
test
adc
idivb
movsb
int
or
inc
mov
cli
sbb
mov
fistl
ret
dec
fmul
pop
out
xchg
lea
push
out
xchg
sub
mov
xor
dec
ss
js
pop
xchg
pop
pop
jne
lret
fstps
movsb
jge
mov
lock
imul
or
sahf
add
add
sub
push
push
daa
xor
mov
sti
popa
mov
add
mov
jbe
xchg
js
xchg
pop
mov
int3
fwait
int
pop
stc
push
pop
arpl
negb
scas
sub
cmp
cmp
jle
push
js
push
paddq
movl
sub
cmp
xchg
dec
ss
sub
cmp
sub
adc
out
inc
aas
test
xchg
dec
dec
mov
sbb
xor
cmp
push
xchg
loop
mov
mov
fiadds
xor
movsl
push
out
mov
xor
sbb
movsb
repz
adc
sbb
lods
mov
enter
add
cmp
movsb
or
inc
xchg
out
jp
xchg
stc
mov
adc
push
repnz
sbb
pop
dec
idiv
xchg
hlt
xor
push
adc
dec
cmp
jge
je
dec
xchg
jp
mov
mov
clc
ss
cs
int3
push
addr16
xchg
clc
loopne
test
inc
pop
scas
adc
mov
jno
rcr
mov
and
test
pusha
test
mov
or
stos
shll
mov
or
xchg
adc
cmp
mov
xor
int
mov
jl
loop
cmpsb
lds
sbb
dec
jo
jb
xor
cmpsb
cs
cmp
push
lret
repz
cmp
faddl
jecxz
sub
push
push
clc
stos
out
xchg
dec
xchg
mov
je
fnstcw
stos
jmp
jmp
sti
shl
or
push
push
dec
xchg
movd
call
in
mov
dec
arpl
jae
jne
arpl
stc
xchg
stos
push
pushf
in
mov
add
dec
push
leave
xor
or
popa
inc
sub
out
or
test
flds
cmc
add
mov
xchg
loope
js
movsl
std
dec
shl
xchg
xchg
jns
in
pushf
mov
sub
outsl
push
bound
ret
mov
cmp
daa
sub
ljmp
cwtl
pop
xchg
loop
jae
mov
cmc
aas
inc
sbb
xchg
mov
cmp
dec
outsl
adc
mov
push
in
push
stc
or
shr
cmp
sbb
test
les
xchg
or
adc
inc
push
pop
push
sub
mov
cli
cld
lcall
fwait
es
xchg
add
les
ss
test
and
push
out
lcall
es
aaa
gs
xchg
out
xchg
fldenv
xchg
inc
push
fldenv
std
mov
cmp
subb
ljmp
insb
inc
in
dec
push
jne
cmp
push
lret
test
decl
adc
push
push
outsl
inc
mov
movsb
clc
inc
or
push
xchg
out
jne
sbb
cli
aad
idiv
xchg
testl
jg
mov
insb
jp
add
cld
cltd
shr
mov
mov
mov
hlt
pushf
shll
sbb
cmpsl
add
push
int
cmp
jmp
lods
lods
or
adc
loop
inc
push
push
push
rorl
mov
fistpl
inc
out
fbld
jae
sbb
push
or
jg
sub
pop
xchg
adc
mov
test
or
cltd
mov
adc
into
pop
inc
std
xor
mov
dec
nop
lret
xorb
xchg
imul
push
cmp
push
iret
loop
sbb
in
fsub
imul
popf
loope
ss
jle
mov
jo
xchg
sub
lods
adc
xchg
sbb
push
sub
inc
push
pop
mov
or
stc
push
repz
pop
or
mov
cmp
stos
imull
ss
cwtl
sub
into
in
mov
imul
cmp
into
mov
sub
mov
lcall
push
jp
sub
js,pn
add
jmp
arpl
cmp
cli
mov
mov
stos
enter
insl
jle
xrstor
call
icebp
xchg
stos
inc
inc
fnsave
insl
cmp
into
cmp
shlb
pushf
xor
and
dec
or
fucomi
sbb
gs
jmp
mov
dec
mov
clc
adc
int
jne
pmulhuw
jns
mov
inc
imul
aad
xlat
outsl
xor
xchg
jecxz
inc
scas
cld
cmp
insb
sti
sub
test
int
lods
xchg
mov
sub
xchg
popf
jmp
mov
inc
aad
mov
pop
in
bound
mov
movsb
xchg
push
add
aaa
cmp
movsl
xchg
push
aad
pop
xor
flds
mov
sbb
jno
mov
in
cmp
mov
mov
or
xchg
push
scas
loop
sbb
jp
cmp
mov
mov
or
out
ljmp
fldenv
xchg
call
inc
leave
jb
aad
sbb
inc
xchg
mov
push
pop
and
pop
jecxz
cmp
xor
aam
dec
inc
cltd
lcall
jge
jge
in
sub
lds
stos
jno
mov
fdivrs
jg
out
push
inc
fiadds
popf
sub
sub
int3
pop
js
test
or
mov
sub
fisttpll
mov
add
or
jb
push
sub
rolb
ljmp
pop
adc
test
inc
or
adc
and
icebp
cwtl
sub
lods
mov
andb
mov
inc
xor
aam
decl
push
cmp
ret
mov
lret
fidivl
xor
inc
int
and
testb
dec
sahf
scas
dec
mov
push
mov
dec
mov
stos
push
in
outsl
xor
push
jb
scas
clc
push
add
xor
imul
push
hlt
xchg
lea
aad
insb
or
ljmp
adc
test
in
inc
lods
sub
and
dec
lcall
shl
shlb
xchg
adc
adc
imul
out
mov
les
adc
dec
out
sub
pusha
cli
or
inc
lret
stc
cmpsl
lcall
pop
in
mov
xchg
notb
loopne
mov
es
repnz
xor
sub
inc
fwait
mov
push
and
movsl
mov
xlat
testb
pop
or
push
out
jb
clc
jmp
mov
outsl
ljmp
sub
repz
das
jmp
push
mov
push
into
movsb
sub
popl
fwait
cmp
rcrb
ficompl
jne
iret
jae
or
lcall
fidivs
ljmp
test
cld
mov
add
mov
imul
adc
outsl
popf
add
fmull
outsl
xchg
xor
iret
xor
mov
sbb
push
cli
ret
sbb
push
mov
mov
pop
jbe
cli
in
lods
sub
pop
cmp
test
mov
gs
cvttps2pi
call
mov
addr16
int3
xchg
or
bound
push
xchg
cmp
hlt
mov
and
call
mov
xchg
test
jbe
push
pushl
or
mov
mov
into
push
pop
pop
aas
leave
fs
fnstsw
stos
stos
aad
xchg
add
cmp
cltd
sub
mull
push
inc
push
inc
loope
cmc
orl
mov
aam
mov
sub
cs
inc
aad
outsb
incl
sbbl
mov
out
or
ljmp
add
cmpsb
ss
movsl
xor
aas
mov
ret
imul
pushf
and
cmp
cld
notb
aad
sbb
ljmp
push
ficompl
js
mov
popa
sbb
imul
testb
pop
imulb
arpl
ss
cmp
cmc
inc
and
cmpsb
in
and
aaa
loop
push
push
in
mov
cmpsb
xor
cmpsb
mov
xor
popa
test
cld
ljmp
stc
outsl
pop
pop
push
pop
out
sub
push
dec
sbb
xchg
push
jno
sub
bound
movsb
movl
jg
mov
pusha
mov
hlt
test
sahf
or
dec
mov
scas
jecxz
cmp
insl
jbe
popf
fisubs
rclb
push
cmp
pop
shll
outsb
mov
jl
rolb
insl
ljmp
push
jo
les
push
mov
iret
and
sbb
imul
add
data16
jl
mov
fistpl
icebp
in
rcl
sbb
cmpsb
cmp
aam
mov
aaa
and
mov
ret
mov
mov
mov
push
inc
xchg
hlt
in
pop
mov
sbb
in
jno
or
xor
jmp
push
sub
mov
imul
mov
fcmove
adcb
mov
ficoml
cltd
mov
sub
int3
pop
adc
mov
imul
clc
jle
dec
and
push
and
jne
out
loope
jle
cmp
inc
push
imul
daa
aam
out
mov
sahf
lds
mov
notb
out
inc
xchg
and
push
add
lret
jge
sub
bndldx
sub
out
cmp
leave
xor
test
ljmp
lock
iret
cmc
arpl
cs
and
push
inc
arpl
mov
ss
push
repnz
pop
jnp
stos
das
cwtl
add
jge
sbb
mov
int
ja
pop
sub
rcrl
cltd
sti
call
jns
sub
push
or
mov
jb
orl
cmp
cmp
xor
or
mov
and
repnz
arpl
push
adcb
push
pushf
mov
mov
scas
andb
xchg
sbb
sbb
cmp
popa
mov
inc
sub
mov
in
dec
insl
mov
mov
sub
inc
push
orb
sub
fxch
mov
fistpl
mov
rcrb
xchg
jmp
mov
fisubrs
dec
cmpsl
mov
lcall
xor
push
es
sub
test
jge
xor
sub
inc
sub
hlt
test
popa
out
and
and
inc
fcoms
aam
sti
scas
jmp
pop
pop
scas
lds
jb
out
lea
pop
in
sbbb
inc
mov
push
lea
add
clc
daa
adc
stc
inc
movsl
add
daa
xor
mov
orl
sbb
mov
clc
cmp
xor
push
clc
std
les
add
inc
int
cmpsl
mov
dec
imul
mov
in
out
iret
pop
loop
dec
or
and
xchg
mov
cmpsl
dec
mov
jge
aaa
and
cli
scas
fwait
outsb
sbb
push
push
into
lea
nop
popa
cmp
je
mov
leave
popa
mov
push
cltd
push
mov
xorb
or
and
inc
jmp
pop
out
pop
lock
push
mov
xchg
pop
ds
push
je
mov
dec
loope
push
lcall
cmp
xchg
outsb
cltd
lea
andl
jg
sarb
cli
pop
jl,pt
cltd
es
push
rclb
das
popa
push
sub
lods
mov
or
mov
imul
push
pop
add
dec
jnp
jp
cmp
jno
js
stos
fidivl
dec
movl
pop
dec
decl
ja
lds
or
imul
cmp
not
popl
jno
aas
inc
dec
dec
insl
in
sub
mov
dec
cltd
mov
enter
sub
out
rclb
test
sahf
cmp
in
xchg
movsl
rorl
sti
xor
or
aas
mov
adc
jmp
movlps
pop
dec
push
mov
mov
in
lret
mov
repnz
push
outsb
lret
adc
iret
addb
das
xor
jmp
rclb
or
rclb
roll
lds
js
push
mov
sub
add
gs
or
ss
aaa
adc
lret
cld
dec
aas
dec
out
cmp
xchg
and
mov
test
stos
sar
xchg
dec
jne
sub
dec
sub
fldcw
loopne
test
adc
sbb
mov
xor
pusha
enter
pop
jmp
mov
adc
je
loop
test
xor
inc
cli
sub
hlt
bnd
dec
push
testl
sub
nop
add
adc
pop
imul
aas
out
mov
and
test
fwait
pop
nop
mov
jne
mov
ss
dec
xchg
xchg
inc
in
mov
ficoml
int3
mov
xchg
xchg
out
sbb
sub
pop
and
fmull
in
jle
in
push
imul
sarb
xor
ss
push
sahf
stos
insl
notb
stc
dec
mov
and
cmp
jmp
push
fwait
xchg
subl
sub
fistl
arpl
movsb
inc
mov
xchg
ss
data16
lar
dec
sub
dec
sbb
lret
js
pop
inc
enter
sub
mov
mov
loope
in
nop
sub
add
jno
out
inc
mov
sub
fs
emms
stc
jecxz
sub
cmp
sti
lds
stos
ret
rcrl
jg
add
movsb
call
aas
sbb
fsubrl
mov
and
hlt
mov
mov
gs
or
daa
sbb
nop
xor
cs
xor
dec
cwtl
dec
xchg
pop
xor
cmp
jno
sbb
lds
mov
push
ret
xor
incl
cli
xchg
jae
or
aad
nop
clc
dec
mov
cltd
nop
sub
add
into
in
mov
xor
sbb
fsubs
mov
pop
mov
push
aaa
psllw
enter
cmpsb
frstor
cmpsb
ljmp
testl
insb
insb
jno
mov
adcb
push
pop
lea
xchg
call
insb
insb
gs
fiaddl
enter
lret
fcoml
je
push
stc
adc
test
sub
and
test
or
mov
int3
and
sub
cmp
jmp
jno
into
jmp
fs
xchg
shll
ret
cmp
cli
fstps
or
and
pop
test
mov
mov
loop
aaa
xor
popf
mov
inc
jno
mov
adc
aas
sub
sbb
mov
insl
stos
adcb
mov
inc
or
sahf
pushf
jo
add
mov
pop
imul
stos
mov
dec
cwtl
xchg
xchg
dec
xor
fs
xchg
mov
hlt
mov
mov
adc
leave
and
sbb
adc
jg
push
ja
in
jno
xchg
xor
xchg
in
gs
mov
divl
into
xchg
loopne
inc
jp
pop
pop
xchg
sbb
sub
out
mov
and
test
rol
pop
cld
sarl
mov
jno
dec
adc
jne
mov
fucom
into
orb
push
mov
mov
ss
int
into
jno
leave
cli
inc
or
inc
pop
adc
mov
push
and
inc
lds
push
out
das
loope
fxch
jmp
ss
inc
lret
js
xchg
xchg
xchg
jae
out
dec
daa
cmp
lods
daa
xchg
jae
push
and
jnp
orl
testb
jp
mov
rcrl
and
ljmp
jnp
addr16
bound
or
add
dec
ss
movsl
push
test
jbe
or
mov
ds
jge
data16
inc
dec
xchg
push
and
jmp
sub
inc
gs
aaa
fstp
lcall
cmp
addr16
inc
push
push
lcall
jmp
xorl
and
sbb
loope
add
push
mov
add
aaa
out
and
lret
xchg
pop
cld
and
dec
push
lods
in
mov
mov
fucomp
mov
insl
je
pushf
pop
xchg
adc
scas
or
fnstcw
and
jl
sub
cmpsl
mov
orl
jnp
mov
arpl
iret
mov
stos
sti
out
pop
in
dec
cld
lea
push
jnp
ja
stos
stos
es
nopw
lret
push
add
push
fwait
mov
pop
js
and
inc
xchg
sahf
cs
arpl
push
lret
pop
lds
nop
xchg
cmp
push
jle
jecxz
sub
jnp
xor
je
xchg
hlt
adc
inc
adc
and
movsl
push
mov
sub
add
loop
mov
std
popf
pop
sub
shrl
inc
ds
mov
adc
mov
jno
pop
sub
cmp
jno
push
sahf
ljmp
imul
xchg
movsl
mov
jb
add
into
clc
pop
sub
pop
movsb
xor
push
js
pop
fcmovb
sbb
pop
jns
cmc
cmpsb
pop
mov
push
fsubs
in
dec
or
lds
add
xlat
pop
hlt
sti
or
push
or
mov
lahf
test
scas
push
mov
adc
jne
je
mov
push
mov
addr16
cmpsb
inc
cmpsl
mov
ljmp
enter
sbb
push
stc
jge
das
jns
dec
add
cmp
das
or
mov
les
pop
insb
push
shr
bound
xchg
sbb
mov
insb
mov
or
sub
shlb
xchg
jmp
leave
sub
out
jp
test
cmp
lea
or
shll
ffree
cmp
xchg
pop
leave
pushf
jp
and
jbe
cmp
fcoms
pop
dec
es
insl
js
xchg
mov
or
cmp
sbb
xchg
fdivl
imul
inc
adc
imul
jecxz
es
push
imul
mov
mov
pop
mov
mov
addb
popa
popf
xor
bound
ljmp
inc
push
jl
push
and
pop
ss
leave
mov
mov
push
fstps
push
popf
mov
hlt
mov
int3
inc
push
cmp
push
leave
sbb
lods
sbbb
stos
lea
ss
loopne
sbb
or
push
add
out
pop
arpl
and
pop
xchg
test
ljmp
pop
arpl
pop
subb
cmp
dec
mov
testl
xchg
idivl
add
rorb
jnp
sub
ret
cmp
nop
sub
cmpsb
fwait
and
ret
ror
sbb
lods
int3
xor
paddsw
inc
int3
or
push
into
loopne
sbb
mov
or
lahf
in
insl
push
outsl
ja
mov
pushf
or
cmp
jp
loope
divb
dec
inc
call
pusha
add
mov
pop
lods
test
jmp
push
cmp
mov
inc
addr16
add
sahf
add
test
adc
push
hlt
mov
bound
icebp
jge
mov
mov
push
or
sti
jl
cmp
gs
pop
mov
movl
sub
dec
loopne
enter
sti
xor
add
inc
stos
out
int
outsb
roll
push
sub
in
test
dec
or
scas
leave
movsl
push
loop
mov
lahf
xchg
mov
or
dec
int
xchg
xchg
dec
xor
fldenv
dec
sub
xchg
mov
outsb
dec
pop
rep
inc
sbb
jo
or
adc
fsubl
cmp
loope
popa
xor
fists
mov
adc
sub
ja
cmpsl
mov
add
and
pop
mov
adc
mov
frstor
sbb
pusha
aaa
xchg
mov
insb
add
test
imul
pop
adc
rclb
jle
xor
mov
push
dec
aaa
push
pop
push
lea
dec
nop
test
sbb
cmpsb
cmp
out
enter
sbb
inc
adc
cmp
ret
int3
inc
push
fnsave
sub
faddl
mov
or
mov
jno
int3
daa
mov
cltd
add
inc
sbb
inc
mov
mov
xchg
test
add
sub
iret
pop
stos
and
ss
cmpsb
or
ret
mov
int
mov
sub
dec
fisubrl
mov
int3
or
cmp
ret
push
inc
arpl
pop
std
lods
sbb
je
rcrl
push
call
xchg
and
push
mov
fldenv
jl
and
pop
xor
shrb
ret
xchg
mov
cmp
sub
test
jo
mov
sub
scas
dec
test
divb
jno
gs
adc
cmp
xlat
fcompl
sub
addr16
jo
adc
inc
sub
dec
imul
fisubs
adc
jne
mov
popa
and
mov
adc
xchg
and
outsb
std
xchg
outsb
mov
xorb
or
pusha
mov
fmuls
repnz
std
or
pop
pop
mov
mov
adc
pop
imul
sbb
mov
sub
xor
jle
mov
dec
pop
sbb
sub
pop
es
testl
int
sti
pusha
pushf
push
lret
xchg
int
push
loopne
cmc
mov
aaa
cmp
jp
mov
sbb
xor
fldenv
mov
enter
int
jbe
or
adc
popa
daa
pop
aaa
add
pushf
adc
in
adc
loopne
mov
jecxz
std
loope
bound
and
ret
fildll
mov
das
insl
out
sbb
adcl
cmpsl
mov
pop
sbb
lcall
mov
stc
xor
popfw
inc
cmp
push
or
fisubrl
jo
cld
adc
test
push
sub
pop
xchg
scas
or
mov
je
adc
jl
cmp
fistps
hlt
scas
mov
aad
push
or
enter
lahf
pushf
jbe
arpl
or
lock
out
xchg
sahf
xchg
clc
movsb
xchg
scas
pop
cmp
arpl
test
lea
jle
sbbl
dec
stc
or
pushf
aam
scas
xchg
push
cli
or
sbb
cmp
lods
adc
out
dec
mov
sub
imul
dec
gs
clc
pop
rorl
pop
mov
inc
mov
mov
imul
clc
mov
xor
pop
sahf
scas
insb
mov
into
aas
inc
icebp
ss
and
dec
insl
mov
or
decl
out
ja
outsb
scas
jle
and
or
lret
inc
xor
lret
push
jnp
mov
jnp
jae
pop
push
mov
mov
and
mov
decb
aas
push
fcoms
mov
mov
outsb
xchg
and
add
pop
adc
pop
sub
cltd
jb
daa
lcall
sbb
xor
xchg
out
xchg
leave
xchg
test
jae
cli
dec
sub
xchg
inc
enter
lds
xchg
push
ds
fsts
call
push
stc
and
sti
negl
jb
stc
sbb
inc
dec
out
stos
xlat
ja
jmp
ds
mov
ret
lds
add
add
xchg
inc
fldcw
adc
jnp
mov
adc
insl
shlb
ret
dec
or
scas
ljmp
sub
outsl
jp
xchg
shll
ret
aam
or
jne
test
jbe
and
mov
mov
push
cmpsb
mov
xor
ja
popl
xchg
jae
aas
nop
push
dec
movzwl
iret
hlt
push
into
adcl
mulb
cmc
mov
add
out
out
ficomps
mov
xor
movsb
dec
or
shlb
xor
pop
adc
fmuls
mov
lret
ss
stc
mov
sti
sbb
stc
push
or
dec
adc
fnstcw
cmp
out
push
dec
js
imul
fwait
fwait
ret
sahf
jmp
js
mov
jns
lods
cld
jns
dec
or
sub
icebp
push
and
lcall
mov
fnstsw
outsb
jl
xlat
push
jle
jae
mov
ja
lods
pop
jae
inc
insb
jae
sbb
mov
hlt
sbb
or
xor
pop
in
mov
jbe
push
xor
pop
push
xchg
inc
pop
xlat
sbb
cmp
inc
pop
mov
shlb
insl
hlt
pop
scas
jp
jns
jle
jb
mov
popf
incl
push
mov
xchg
ss
jmp
mov
movlps
aaa
jg
fldenv
scas
sbb
cs
inc
and
out
xchg
lcall
cwtl
loopne
pop
cmp
xor
out
js
ja
push
rcll
mov
int
xor
sub
dec
xchg
push
push
xchg
lahf
push
shrb
jne
jmp
aam
xchg
outsl
stos
stos
xchg
iret
mov
and
push
mov
dec
mov
mov
aas
popf
sub
cltd
cmpsb
xor
divb
jnp
push
sbb
pop
hlt
mov
movsl
dec
inc
enter
push
push
jl
pop
or
cmc
int
pushf
ret
xlat
pushf
dec
pop
push
xlat
je
mov
pop
test
aad
push
push
push
push
pop
mov
aad
sub
aam
xchg
or
or
push
insl
adc
ljmp
orl
xchg
and
jp
xchg
and
int
frstor
push
aaa
pop
or
daa
lock
push
test
xor
and
in
inc
repnz
cld
jns
test
dec
cltd
sbb
or
xor
data16
cmp
int3
and
jns
pop
mov
xor
imul
int3
pop
lahf
out
pop
cwtl
imul
ret
adcb
dec
fisttpl
push
mov
pop
ds
adc
adc
repnz
inc
lret
dec
insl
sarl
cmp
mov
cmp
rorb
jmp
lea
dec
pop
outsb
call
fdivs
inc
xchg
dec
adc
test
fwait
xor
lds
in
mov
out
insl
fists
cld
repz
push
das
xor
ss
pop
dec
add
fcompl
xchg
call
imul
jg
loop
mov
daa
dec
inc
cmpsb
sbb
or
pop
dec
lods
dec
pop
mov
popf
out
cmpsl
mov
mov
arpl
mov
test
jmp
outsb
push
inc
cmp
xchg
mov
lds
jae
pop
loop
imul
or
outsl
cwtl
scas
ja
cwtl
insb
or
pop
daa
mov
test
sub
aaa
cmp
in
push
enter
xchg
push
xor
dec
fldl
xchg
mov
push
test
jmp
sbb
in
sbb
xchg
ja
mov
loop
repnz
fildl
jge
clc
out
hlt
cltd
loope
mov
decl
icebp
pop
rcrb
pop
rorl
mov
sub
xchg
imul
push
ret
test
mov
mov
push
dec
icebp
inc
test
xchg
ret
jae
out
pop
sub
cwtl
lock
mov
cmp
mov
ss
jge
fmull
out
xchg
cmp
cmp
hlt
aad
fcmovbe
ret
inc
sbb
dec
add
movsb
jmp
fs
cmovge
dec
sub
or
popf
cmpsb
cltd
imul
sub
xor
into
outsb
or
add
and
es
les
mov
movsb
jne
or
sub
scas
xor
xchg
sub
imul
insl
sub
jae
pop
scas
ret
xchg
jne
jge
or
bound
fdiv
push
dec
cmpsl
pop
xchg
mov
bound
cld
dec
pop
add
xor
rolb
mov
dec
lahf
stos
cli
add
mov
out
sbb
or
pop
pop
div
ljmp
mov
dec
xor
das
push
xlat
mov
adc
out
cld
mov
dec
sub
daa
or
dec
lods
or
insb
out
lahf
nop
jnp
loopne
mov
inc
ficomps
mov
call
pop
add
or
xchg
and
loopne
or
mov
jle
addr16
or
xchg
sub
xchg
xchg
sub
out
outsb
repz
pop
insl
mov
xor
stc
cwtl
dec
jp
shll
sub
xor
incl
sbb
sub
mov
jno
rolb
and
push
clc
int
iret
and
inc
xor
xchg
adc
lds
pop
xlat
or
loope
xchg
imul
imul
xchg
ds
jmp
repnz
inc
sti
xchg
insl
out
lret
xchg
cmpsl
lcall
cmp
mov
loop
cmc
aas
fldenv
mov
pop
pusha
inc
ret
or
jne
add
movsl
sub
ljmp
or
fists
ficomps
jnp
lods
mov
ljmp
fildl
in
inc
out
into
jle
push
or
test
sbb
aam
dec
mov
les
mov
sbb
loope
ret
jg
ss
add
mov
not
es
dec
outsl
mov
lea
enter
or
push
mov
stos
inc
jg
jne
inc
std
push
sub
or
sbb
lods
push
add
mov
in
cmpsb
aas
jae
push
fwait
xchg
xor
jns
xorb
add
add
stos
sbb
push
pop
rcll
stos
aad
sub
ljmp
adc
shl
mov
ss
cmc
and
and
push
lea
iret
lret
movb
sti
xchg
xchg
lods
jns
jnp
dec
cmc
and
rcrl
js
out
incl
stos
cmp
test
xchg
mov
and
test
dec
rorb
outsl
in
or
jmp
lcall
jo
and
inc
out
inc
inc
inc
jge
in
scas
in
add
in
adc
in
xor
xor
movb
test
or
mov
dec
add
adc
jg
outsb
dec
repz
pop
xor
popa
push
test
jmp
je
mov
push
icebp
mov
cmc
adc
leave
push
jb
icebp
mov
push
rcrb
shrl
jne
lea
jne
push
xchg
mov
jg
xchg
fdiv
test
jno
lcall
ds
cmpsb
jno
nop
aas
push
pusha
jge
jle
ss
adc
dec
push
ds
lea
dec
cli
sub
adc
adc
and
testl
xor
test
jns
ss
mov
adc
cmp
or
and
lret
cmpsb
sub
xchg
in
ret
pop
add
push
imul
dec
lods
mov
outsl
stc
je
cli
clc
es
scas
lds
dec
repz
loop
stc
ret
icebp
inc
add
out
into
or
popf
shll
stos
pop
and
movsb
fsts
lcall
xorb
mov
fisttps
dec
xor
je
dec
add
ljmp
rolb
in
aam
dec
les
into
pop
testl
movsb
fildll
loope
clc
push
cmp
mov
hlt
mov
stc
mov
sub
inc
xor
jno
cmc
xor
ficoms
imulb
xchg
adc
jg
inc
inc
xor
mov
push
aas
sbb
xor
inc
inc
mov
loop
mov
mov
mov
push
inc
cmp
jle
popa
imul
bound
js
ds
loopne
jno
adc
lock
push
popf
inc
pop
bound
mov
cmp
jno
stos
in
fisubrs
cmpsb
or
stc
popa
imul
popa
cmp
inc
arpl
dec
loop
dec
cmp
sbb
fbstp
jle
or
push
push
fidivs
push
xchg
pusha
cmp
mov
mov
fistps
lahf
inc
loopne
roll
mov
cmp
xchg
pop
fs
rclb
cmp
notb
sbb
mul
pop
mov
mov
inc
pop
stos
xchg
sub
cmp
inc
inc
fisubl
call
ficomps
outsb
add
pop
pop
das
loop
pop
orl
cmpl
jnp
jp
test
pop
scas
add
fstl
aad
rcr
pop
inc
fbld
lods
loope
dec
sbb
sbb
fstpl
xor
pop
and
lcall
stos
out
ds
mov
mov
adc
or
mov
fadd
inc
sti
cmp
add
pop
pop
mov
pop
jecxz
or
jge
mov
jle
xor
sub
sbb
fcompl
mov
jge
jbe
pop
imul
xchg
fimull
jne
or
data16
jl
iret
push
stos
pop
pop
adc
xor
xchg
inc
pop
xchg
out
fisttpl
stos
pop
testb
mov
jl
enter
adc
jl
mov
pop
leave
jg
cmpsl
mov
xor
xchg
ja
or
cmp
jnp
sub
das
jp
cmp
pop
xchg
clc
fidivrl
cmc
xchg
inc
cmp
xlat
pop
pop
lock
pop
pop
xchg
xchg
pop
mov
das
jnp
push
jbe
push
imul
push
cmp
sub
pop
mov
loop
jp
scas
aaa
jle
pop
imul
push
cmp
and
jb,pt
mov
xor
ret
mov
jno
jle
xchg
pop
inc
orb
out
push
icebp
dec
jmp
cwtl
scas
aaa
cmc
sysenter
mov
jb
jne
mov
pop
add
lret
push
cmp
popf
xchg
push
stos
std
xlat
das
std
or
shlb
inc
xlat
add
push
in
adc
jbe
sbb
xor
cmp
aad
imul
xor
add
jle
jo
mov
aam
scas
loop
jecxz
cmp
mulb
adc
adc
push
inc
aam
lret
mov
aaa
cmp
sub
jle
push
imul
mov
push
mov
add
je
mov
push
lock
call
mov
and
out
pop
ficoml
lock
into
pop
inc
push
aaa
jmp
into
xor
fcomps
mov
jmp
cltd
dec
cmp
divb
mov
and
pop
in
push
jge
fmull
out
add
mov
pop
inc
mov
mov
jbe
jecxz
mov
adc
test
or
fisttpll
repz
cmp
and
aad
lods
fmull
testb
jg
out
shr
pop
pop
shr
or
jmp
or
std
lret
sub
dec
or
cwtl
or
je
mov
push
dec
and
mov
fs
out
test
imul
dec
and
mov
mov
xor
vcvtdq2pd
mov
mov
cli
cmp
mov
movsl
out
sbb
xchg
out
push
outsb
scas
pop
or
fdivrl
mov
int3
sbb
out
mov
push
push
lods
testb
jnp
cmp
ja
ss
aas
jns
movsb
lods
adcb
mov
das
xor
dec
sub
cmp
sub
sbbb
cmp
sbb
xchg
sbb
inc
sbb
dec
loope
pop
or
or
lret
xlat
mov
insb
imul
imul
or
mov
jo
fsubrl
mov
rorl
cmp
stos
cli
in
popf
pop
xchg
cmp
stos
push
jmp
aad
ja
je
stos
sbb
or
and
rcrb
ss
jge
fmull
out
xchg
cmp
arpl
push
mov
pop
hlt
mov
into
inc
in
cmp
imul
pushf
shll
push
scas
dec
xchg
inc
rorb
imul
mov
icebp
dec
stos
test
insl
mov
cli
mov
adcb
mov
jnp
mov
cwtl
adc
add
ss
push
dec
mov
mov
xchg
cmp
or
out
pop
scas
mov
out
stc
leave
cwtl
test
test
test
mov
sti
push
ret
or
push
lods
mov
mov
imul
jae
sti
incl
orb
fmul
mov
push
xor
fs
xchg
push
jo
test
rcrl
mov
scas
pop
imul
sub
cmp
arpl
enter
arpl
or
imul
dec
dec
dec
mov
test
aam
scas
pop
and
jns
mulb
js
stos
dec
sub
rcrb
xor
outsb
or
repz
adc
dec
jnp
add
sub
cmp
push
subb
sbb
push
jns
xchg
out
xchg
leave
push
test
gs
or
or
inc
or
mov
push
lea
dec
cmp
jmp
cs
sub
jp
imul
bound
sub
mov
imul
sub
cmp
jne
jle
dec
imul
dec
cmp
lret
sbb
mov
subl
sti
dec
testb
fs
xor
xchg
dec
add
push
cmpsb
sti
xchg
dec
out
pop
sbb
sub
sbb
dec
lods
std
sub
mov
dec
cwtl
sub
in
shlb
sub
xor
mov
rol
test
cmp
mov
scas
clc
imul
sub
mov
mov
inc
and
dec
mov
jbe
push
jmp
add
inc
test
test
aam
push
mov
imul
jecxz
out
xchg
push
jbe
xor
xchg
pop
sti
int
test
mov
lock
sub
fmull
out
sub
jnp
bound
outsb
mov
xor
nop
cmp
insb
and
dec
and
test
sti
loop
subl
pop
sub
scas
cmp
and
ja
aas
loope
aaa
lods
adcb
mov
bound
fs
sub
cmp
push
adc
mov
dec
mov
xlat
jbe
xor
nop
cmp
cli
jmp
adc
cmpsb
jge
fs
sub
cmp
cmp
fadd
mov
nop
dec
adcb
mov
jno
sbb
sub
mov
test
cli
incl
fcoms
push
out
fdivrl
popf
sbb
rcl
lock
shlb
adc
icebp
sub
xchg
pop
fs
or
sub
mov
clc
cmp
and
inc
mov
ss
add
pop
mov
aad
lret
cmp
clc
jmp
inc
arpl
enter
test
add
mov
fisubl
xlat
pop
lret
cmp
mov
or
add
inc
dec
out
mov
test
sbb
xor
ret
dec
mov
or
xchg
adc
mov
stos
sbbb
in
mov
inc
pusha
cli
adcb
adc
rorl
sbb
jle
sub
mov
incb
push
lock
mov
dec
arpl
lock
mov
cmp
mov
pop
rcrb
xor
repz
pop
fmull
xchg
ds
lea
mul
dec
sub
dec
movsl
stos
shl
sub
and
jle
leave
cmp
addr16
pushl
add
pop
and
sub
ss
outsb
loopne
xchg
popa
cmpsb
pop
out
icebp
jg
mov
add
mov
stos
push
inc
push
mov
popa
adcl
jbe
addl
imul
mov
cmp
xchg
and
and
or
jbe
or
mov
or
mov
sarl
addr16
sub
sbb
inc
iret
xchg
adc
fdivl
es
rcrb
push
xorl
xor
ret
and
add
jge
icebp
ja
push
imul
push
arpl
es
scas
fildl
xchg
or
mov
inc
bound
and
cmp
pop
call
enter
arpl
and
movsb
inc
cmc
xor
ret
mov
out
enter
enter
out
inc
fwait
je
cmc
xor
ret
adc
lods
shl
bound
es
out
cmp
int
mov
push
adc
pop
popa
addr16
inc
cmpsb
dec
and
mov
inc
int
pop
addr16
push
outsl
mov
or
outsb
or
and
mov
add
inc
test
mov
pop
pop
jno
inc
sahf
outsb
xorl
rorb
mov
ret
mov
je
mov
mov
aas
adc
cmp
xchg
rorl
pushf
pop
or
cmp
pop
mov
xor
bound
mov
xor
and
daa
and
cmp
sub
jle
adc
mov
sub
push
cmp
daa
xor
aas
xchg
jb
aas
xchg
fistpll
das
negb
shl
cmp
stos
and
cmp
inc
pusha
lcall
inc
cmpb
dec
mov
pop
pop
enter
pusha
or
pop
lcall
pop
out
lret
inc
cmp
xchg
adc
mov
nop
popa
xor
xor
and
loop
shlb
and
sbb
aas
adc
sub
xor
push
bsf
mov
mov
addr16
enter
adc
pop
xor
xor
das
insl
xlat
add
mov
repnz
push
stos
rep
pop
jl
and
jle
cmp
pop
cmp
lods
in
cmp
inc
stc
cmp
inc
mov
sbb
mov
addr16
pop
lcall
pop
cmpsl
ss
mov
mov
pop
pop
sub
addr16
pop
lcall
cs
cmp
dec
fdivrl
int3
aad
push
stos
out
push
cmp
iret
sbb
mov
cmp
lods
mov
cmp
in
adc
pop
pop
int3
inc
ljmp
lds
cmp
push
mov
mov
pop
pop
cmp
inc
outsb
mov
mov
cmp
jb
push
xchg
lea
cmp
addr16
aas
jne
sbb
mov
inc
sahf
jp
nop
jmp
imul
andl
or
jno
je
add
sti
popa
mov
and
pop
lcall
iret
in
pop
repnz
pop
push
shll
xchg
jmp
and
sub
aaa
sbb
add
fsts
dec
cmp
pop
push
inc
push
fs
lds
mov
mov
or
test
insw
cmpsb
add
pop
or
mov
add
sbb
cli
jbe
lcall
shll
aaa
lds
xchg
xchg
dec
outsb
mov
push
or
push
out
je
inc
cmp
adc
scas
shrb
sub
call
out
xchg
mov
lea
jne
xchg
out
xchg
lea
out
shll
pop
in
xchg
xor
cs
adc
sbb
dec
sarl
adc
arpl
inc
sahf
dec
push
fisttpll
or
or
movsb
sbb
xchg
outsb
or
mov
push
outsb
inc
outsb
jb
rorl
push
pop
cmpsb
or
push
jae
push
adcb
mov
fsubrp
dec
insb
test
jo
and
dec
push
popf
dec
sbb
gs
cmpb
pusha
dec
cs
adc
mov
push
jns
adc
pop
lds
mov
or
push
mov
xor
xor
jne
test
add
add
jge
in
in
scas
xor
push
scas
lea
jne,pn
out
fld
inc
mov
pop
xchg
mov
xchg
mov
jns
lds
mov
stos
jecxz
or
leave
lea
dec
cmc
xchg
pop
out
std
call
outsb
inc
adc
ja
dec
mov
pop
into
cwtl
push
push
inc
inc
sbb
push
pop
xchg
sub
mov
or
xchg
dec
jae
push
stc
jnp
xchg
dec
hlt
stos
dec
push
hlt
jmp
and
jb
cmp
mov
out
fs
je
jp
stc
sbb
leave
popa
fdivrl
and
int3
es
add
mov
xchg
addr16
in
les
ss
nop
xor
xchg
aas
movsl
insb
daa
lds
or
and
stos
pop
push
repnz
push
insl
fisttpll
or
es
stc
or
add
push
ss
out
xor
sub
inc
and
lea
je
push
ja
scas
in
pop
lock
mov
inc
push
adc
aaa
ss
ja
xor
push
mov
stc
xchg
add
stos
or
xchg
inc
pop
xor
subb
fisttps
sub
adc
int3
sti
sbb
das
insl
pop
push
mov
sbb
aad
test
fisubs
cmpsb
ror
flds
repnz
repnz
imul
jecxz
stc
dec
jg
ds
enter
std
mov
jl
addr16
lods
and
inc
or
mov
mov
pop
cmp
in
or
xchg
xchg
sbbb
push
or
pop
jmp
adc
adc
fnsave
jmp
int
dec
mov
mov
pusha
out
and
fidivl
outsb
imul
xchg
ficoml
mov
sub
adc
fsubrl
jnp
push
stos
jg
frstor
repz
mov
neg
shlb
test
inc
inc
lea
pop
and
jae
add
jp
push
jl,pt
out
xor
mov
add
jbe
mov
int
add
mov
sarb
lret
into
aas
jb
cwtl
sub
dec
xchg
pop
sahf
xor
sahf
adc
pop
xor
or
cmc
xor
jno
movsb
and
test
pop
dec
filds
sub
cmp
fxch
cmp
shrb
in
int3
neg
out
mov
outsb
pop
mov
xor
movsl
adc
stos
int
xchg
mov
jmp
pop
aas
xor
push
dec
inc
adc
or
mov
push
dec
jb
arpl
cmc
ss
xor
imul
push
lret
sub
cmp
jmp
scas
in
push
fldl
lods
and
and
jle
lahf
adc
push
mov
popa
lcall
push
lods
cmp
inc
pop
jne
aam
imul
jns
dec
stc
sub
mov
mov
push
lods
xchg
clc
out
call
into
push
push
add
xchg
jno
jmp
xchg
test
sbb
cld
xchg
ss
push
stos
movsl
push
push
lcall
jbe
out
dec
lds
andb
das
and
sub
push
mov
pop
xor
jnp
inc
pop
add
scas
inc
lock
cwtl
pop
cmp
movsb
ja
mov
inc
iret
pop
leave
arpl
sub
outsb
inc
sub
aaa
jno
mov
push
mov
jp
jnp
adc
mov
push
ret
and
mov
add
int
pop
xorl
lahf
xchg
cli
lods
jo
data16
je
popa
mov
jge
sbb
test
mov
inc
jo
scas
or
lea
xlat
pandn
sbb
sbb
mov
xor
mov
cmpsl
adc
stos
mov
sbbl
mov
iret
adcl
outsb
cmpsl
scas
mov
or
insb
sub
push
stos
adc
cltd
ficompl
xchg
dec
in
gs
dec
add
shrb
dec
bound
cmp
addl
mov
and
push
jns
mov
cmp
sbb
or
mov
xor
out
test
adc
dec
js
shll
aaa
or
inc
mov
mov
xchg
cmp
push
fwait
loope
cmp
cmp
andl
jo
cwtl
das
dec
test
xor
sbb
or
jae
inc
push
lods
inc
or
int3
sbb
ficoms
pop
xchg
xchg
adc
mov
and
dec
mov
outsb
pop
out
sbb
inc
or
cs
fsubs
pop
mov
sbb
add
cmp
or
lcall
and
call
stc
rorl
scas
add
cltd
mov
mov
mov
inc
jo
lahf
or
setne
cmp
inc
dec
mov
pusha
pop
cmp
dec
mov
cmp
cmp
sarl
mov
mov
das
cmpsl
and
scas
xchg
in
jmp
mov
jl
test
or
insl
cmp
addr16
aas
notb
mov
aas
test
xor
pop
ficoms
adc
xchg
jbe
popf
notl
lods
sti
xlat
test
mov
xchg
test
dec
stos
xor
enter
insb
adcb
dec
xor
pop
xchg
jne
sbb
adc
push
andb
lret
mov
sbbb
cmpsl
test
dec
scas
and
sbb
enter
adc
sub
push
sahf
jns
fsubs
cmpsb
or
xor
push
dec
lock
stos
dec
arpl
mov
adc
pop
xor
pop
push
pushf
lds
shlb
xor
cmpsb
xchg
mov
or
test
inc
ret
lods
lods
divl
and
aas
mov
xchg
bound
out
dec
xor
inc
dec
aaa
xchg
stos
push
sub
cwtl
mov
mov
test
je
cmpsl
cmpsl
cwtl
mov
lods
mov
cmp
loop
dec
sbb
jns
sbb
orl
xor
lock
and
inc
mov
adc
mov
sub
xlat
cs
sub
loopne
mov
push
pop
adc
jle
stos
xchg
mov
mov
fisttps
out
cli
pushl
hlt
sub
add
pop
fcomps
sbb
sub
push
sub
jle
mov
popf
push
pop
mov
push
pop
inc
push
and
scas
dec
dec
inc
sbb
cli
mov
add
or
pop
or
sub
sub
jmp
dec
add
push
popa
lock
mov
cmp
aaa
ljmp
nop
push
dec
cmp
mov
add
out
add
jl
mov
paddsb
mulb
sbb
imul
mov
inc
insl
aas
mov
and
in
das
divb
mov
pop
inc
inc
inc
adc
rol
dec
pop
pushf
out
xchg
push
sbb
outsb
cwtl
enter
and
sahf
sahf
jle
stc
pop
mov
rclb
mov
inc
jns
cmp
and
adc
sbb
mov
dec
mov
stos
enter
mov
sub
or
sbb
shll
mov
mov
mov
out
inc
xor
sub
add
dec
xor
push
xchg
mov
push
cmp
cmp
push
call
mov
push
popf
and
pop
jmp
and
cmc
adc
inc
xor
add
dec
inc
add
adc
rcr
inc
add
insb
and
insb
pop
sub
xchg
dec
jb
push
fwait
and
test
out
and
or
pop
fwait
dec
cmp
and
xor
add
outsl
add
mov
and
jmp
clc
inc
mov
inc
sahf
and
loope
cltd
arpl
movsb
inc
ss
mov
outsb
and
pop
jl
inc
lret
call
pop
cmp
add
cs
insb
stc
sahf
jns
cmp
sbb
es
ret
fdivr
and
mov
adc
xor
xchg
rclb
or
jp,pt
ret
pop
sti
lods
adc
cmp
pusha
push
push
cld
lcall
push
jo
ficoml
xchg
cli
stc
popf
daa
insb
and
xor
add
sahf
das
mulb
mov
pushf
mov
aas
mov
fnstcw
xor
scas
lret
or
aas
sub
subb
and
jecxz
adc
dec
data16
mov
cli
fldl
mov
xchg
movsl
add
lea
and
aad
lahf
incl
pushf
movsl
int
mov
xchg
mov
ds
dec
int
push
xchg
sbb
lret
bound
xchg
sbb
cmp
inc
ss
push
faddl
dec
adc
jmp
fbld
setp
rcrb
xor
aas
or
adc
mov
aad
cmp
sbb
pushf
lcall
push
nop
sbb
cwtl
mov
shl
mov
push
mov
dec
sbb
xor
mov
add
popa
adc
lret
mov
dec
negb
xchg
out
sbb
sbb
cmp
xor
push
pop
scas
shrl
push
sbb
jno
push
stos
jle
das
testb
jnp
int
pop
lods
adcb
mov
sbb
and
xor
mov
idivb
jecxz
cs
add
mov
push
sub
fisubrs
or
nop
xchg
stc
sti
sbbb
pushf
inc
sahf
lret
sub
arpl
xlat
pop
cmpsb
dec
cmp
adc
cmp
xor
cmp
stc
das
dec
dec
cli
push
sbb
cmp
das
push
ljmp
dec
out
in
data16
icebp
cmp
adc
adc
xor
mov
mov
dec
mov
rcrb
ss
xor
das
stos
mov
outsb
mov
jb
jle
push
and
or
cmp
and
clc
stos
setp
lret
jb
pop
cmpsb
jno
inc
loope
mov
jb
stos
xor
adc
jbe
fsubs
add
cmpsb
inc
test
movsl
add
not
pop
lods
push
push
adc
not
mov
ss
enter
xor
aaa
lcall
ss
clc
stos
out
idivl
or
cmp
arpl
enter
loope
xchg
pop
scas
jle
sub
inc
push
mov
daa
push
cmp
jo
lods
lret
xor
cmp
cmovne
pop
ret
enter
adc
sti
push
cltd
std
mov
jl
xor
andb
out
repz
lahf
sub
xchg
adc
mov
movsl
adc
sub
jecxz
jmp
in
xchg
xchg
adc
stos
or
das
and
xor
mov
inc
inc
pop
cmpsl
jb
lods
testl
decl
xchg
out
xchg
nopl
enter
enter
sti
bound
mov
cltd
ss
cmc
das
dec
xor
push
xchg
sahf
cmc
or
sti
xchg
adc
push
test
adc
inc
adc
adc
dec
lret
lods
cmc
mov
xor
mov
jae
icebp
ss
sub
scas
push
push
test
jne
sub
xor
sub
dec
push
cmc
push
xchg
mov
xor
xchg
fimuls
scas
dec
push
adc
xchg
pop
testb
dec
data16
or
pop
sbb
mov
lods
push
adc
popa
adc
sbb
fdivl
sbb
xor
outsb
pop
pop
scas
sbb
sarb
inc
repnz
or
icebp
aaa
or
clc
mov
jnp
aas
push
inc
in
adc
or
jnp
ss
adc
xchg
sbb
stos
add
cs
xchg
jae
adc
pop
pop
lea
scas
mov
or
seta
xchg
push
stos
mov
xor
in
xor
ss
es
xor
cmp
jo
or
cmp
roll
lock
xchg
adc
jmp
lret
pop
jmp
jae
movsl
jle
jg
mov
insl
xor
jo
adc
in
push
iret
cs
mov
movsl
cwtl
mov
jno,pn
ret
pop
jp
lds
mov
cwtl
ja
movsl
call
fwait
iret
out
out
or
cmp
push
stos
add
mov
push
mov
jle
stos
and
mov
test
jno
jno
je
push
stos
dec
std
test
jae
daa
stos
sti
xchg
push
popf
pusha
scas
xchg
adc
jmp
inc
cli
inc
repz
lods
push
divb
cmpsb
mov
cmp
inc
das
sbb
pop
sub
ja
jecxz
jp
mov
shr
flds
ss
sub
inc
xchg
xor
mov
mov
lcall
aad
test
jg
sub
ds
push
mov
xor
fisubrs
xchg
adc
cmc
cmp
loop
jns
cld
not
test
sub
icebp
out
gs
pop
push
iret
pop
pop
cmpsb
cmpsl
adc
sub
fisttpll
test
xlat
mov
and
test
sub
notb
ret
lret
dec
scas
adc
dec
or
pop
gs
mov
addr16
sub
cli
out
push
jnp
mov
push
scas
insl
xchg
mov
sbb
std
addb
cmp
or
dec
add
cmp
cwtl
jno
cmp
sub
idivb
aad
mov
movsl
int
cli
fnstsw
stos
mov
push
scas
sbb
sahf
test
adc
push
leave
jnp
rorb
push
sahf
cld
das
sbb
cmpsb
jmp
or
mov
std
pop
cmp
dec
enter
fs
adc
rorb
sub
fimuls
sbb
xchg
mov
pop
ficompl
sahf
jle
cmpsb
aaa
xchg
call
adc
sub
or
xchg
stos
fs
xor
rdpmc
addr16
int3
mov
dec
xchg
adc
inc
or
daa
cmp
test
je
or
xchg
sub
movsb
dec
hlt
test
xchg
into
and
bound
lods
ja
sbb
push
outsb
inc
in
sbb
mov
std
dec
mov
xlat
inc
xchg
cwtl
out
mov
or
mov
jnp
xchg
dec
mov
out
jb
and
out
mov
push
out
inc
fldenv
sub
fsubs
cwtl
inc
push
cmpb
imul
or
mov
mov
fwait
daa
or
xchg
jl
add
dec
outsb
lods
shll
cmp
ja
or
push
pop
push
inc
add
inc
or
inc
xchg
data16
lods
cltd
insb
mov
ret
outsl
in
sbb
daa
imul
mov
enter
int3
mov
in
orb
and
jmp
pusha
push
repz
cld
das
lods
and
fwait
jle
sbb
jbe
push
mov
int
xchg
clc
and
fldenv
test
cmpsb
push
es
stos
mov
lods
xor
mov
out
xor
jmp
enter
daa
ret
icebp
daa
jmp
cmpsl
mov
and
lahf
ret
stos
push
sbb
add
dec
mulb
sub
sti
adc
adc
lds
and
fdivl
or
jl
orb
mov
or
or
mov
mov
dec
jnp
jb
or
adc
mov
add
inc
test
mov
push
imul
adc
mov
ret
xlat
lds
dec
test
ja
mov
and
mov
mov
andb
fs
popa
fidivl
mov
xor
add
dec
jbe
icebp
and
imul
xor
je
cmp
ret
test
push
sbb
mov
es
int3
inc
lcall
dec
and
imul
xchg
cld
inc
je
mov
jno
dec
addr16
lods
jo
or
pop
hlt
mov
insl
push
sti
adc
and
inc
pop
aaa
push
outsl
mov
pop
sbb
xor
int
addb
fs
pop
jb
push
int
aad
lds
mov
stc
jecxz
xor
ficoml
sub
add
mov
bound
push
mov
out
xchg
out
arpl
enter
cli
int
out
jle
lods
lret
popf
das
in
scas
lret
pop
push
xor
mov
and
xor
mov
and
enterw
cmpb
aad
pop
inc
add
inc
cmc
push
insl
lds
loop
fstl
fcomps
xor
rol
and
testl
cmp
das
fimuls
add
dec
mov
push
test
pop
sbb
jnp
popa
popf
cmp
arpl
out
and
and
inc
in
adcl
into
mov
pushf
subl
jne
repnz
mov
mov
test
jmp
and
xor
sub
nop
mov
testb
cmpsb
dec
inc
inc
bound
popa
gs
xchg
das
gs
or
ret
imul
rcll
loop
aad
jecxz
andl
pop
les
shrl
add
insl
mov
out
cmp
sbb
push
push
test
dec
add
xor
jo
pop
dec
mov
push
pop
and
add
addr16
jecxz
mov
dec
js
int
pop
add
xor
or
sarb
sahf
xor
orl
loop
lcall
xchg
orl
mov
es
std
sub
xchg
sbb
cs
clc
or
data16
in
lcall
push
sar
loop
jle
and
push
pop
and
cmp
jae
loop
xor
nop
out
xlat
mov
enter
scas
mov
mov
stc
inc
es
or
insb
xchg
push
xor
call
popf
repnz
sti
mov
cmp
loopne
lcall
inc
jg
aaa
mov
loop
clc
jmp
stos
fs
popl
ljmp
call
cld
and
jp
sti
arpl
jp
dec
push
ja
adc
out
gs
cmp
push
loop
pop
es
aad
loop
adc
clc
scas
lcall
push
in
xchg
xlat
xor
xchg
imul
imul
aam
or
aaa
out
and
iret
adc
out
mov
std
loop
lcall
or
leave
stos
cmp
cs
stos
sbb
inc
out
sbb
jge
cmp
daa
loop
or
dec
cmp
into
pop
push
xchg
mov
nop
xchg
inc
adc
push
testl
inc
das
jle
jno
jbe
or
addr16
test
out
and
adc
push
andl
ficomps
sub
mov
sub
xchg
push
xchg
and
gs
mov
or
or
aaa
fsts
jmp
data16
mov
inc
popa
inc
cmp
test
or
iret
loope
divl
cmpsl
out
dec
sbb
cli
das
xchg
mov
mov
repz
int3
mov
lahf
sub
fwait
lods
cmp
inc
dec
inc
dec
sarb
shrb
sbb
and
in
jne,pn
loop
or
xchg
push
dec
cmp
adc
movsl
loopne
incl
sbb
mov
or
imul
jp
aaa
out
inc
loop
repz
loop
fst
imull
adc
flds
lahf
and
add
sub
jnp
push
pushf
aaa
lret
daa
pop
lods
push
pop
ss
dec
or
dec
cwtl
sub
jge
fsubrl
movsl
mov
lock
icebp
cmpsl
pushf
cli
loop
mov
fisubl
scas
cmp
jg
push
bound
and
fwait
xor
and
ret
push
xchg
clc
je
jne
sbb
lea
daa
sub
rdpmc
inc
fimuls
mov
mov
xor
in
mov
outsb
jle
scas
xchg
out
mov
shlb
subb
insl
aaa
gs
fimuls
jbe
ret
cs
icebp
mov
mov
or
jl
pushf
lea
ss
push
outsb
aaa
aam
jb
dec
pop
mov
aas
outsb
mov
xchg
sub
rorl
add
adc
out
inc
sub
mov
sbb
shr
or
inc
pop
adc
cmp
lea
scas
jge
cmp
dec
lds
fmull
imul
imul
incb
lock
xchg
xor
jmp
jne
popf
mov
bnd
sbb
adc
sub
xchg
push
inc
std
cmp
inc
jge
testb
or
incb
ss
or
and
xor
mov
ljmp
cmp
jg
jb
movb
mov
jg
dec
and
mov
xchg
push
rorl
mov
pop
jbe
clc
mov
xchg
inc
jae
jbe
mov
lcall
sahf
aas
hlt
lock
jge
divl
je
rcl
mov
adc
rcrb
xchg
dec
daa
adc
lea
jle
out
jae
dec
mov
aaa
jb
inc
mov
loope
mov
sub
push
and
stos
cli
int3
mov
adc
stos
jg
cmp
insl
inc
jmp
cli
std
jo
push
xlat
popa
xchg
push
mov
leave
pop
mov
inc
repnz
xchg
pop
cld
movsl
sbb
dec
mov
xchg
enter
lods
pop
sbb
addr16
inc
sub
sbb
push
push
adc
ret
aam
out
fstl
inc
std
imul
add
out
jmp
fsubl
in
call
lods
xchg
sub
gs
sbb
scas
mov
sbb
iret
mov
aaa
cmc
pop
out
jle
mov
pop
movsl
jae
cmp
icebp
mov
fbstp
fdivr
inc
aaa
and
push
inc
inc
mov
inc
push
add
pop
cmp
es
mov
sbb
sbb
sub
mov
mov
sbb
sbb
xchg
push
sbb
lcall
stos
xchg
xor
loopne
mov
jb
cmp
daa
addl
orl
pop
cmc
sub
stos
xchg
jmp
ret
dec
pop
pop
or
jo
fucomi
repz
mov
les
xor
mov
call
mov
lea
bound
aas
sub
movsl
push
sbb
pushf
cmpsl
push
lahf
lock
adc
sub
outsl
sub
or
pop
pop
notl
fsubrs
int
pop
add
adc
push
lods
inc
jno
add
adc
out
shrb
cmp
mov
xchg
popa
push
mov
fnstcw
jl
mov
and
imul
pop
imul
out
cs
cmp
lods
nop
mov
sub
cmp
push
dec
push
adc
push
out
cmpsl
enter
icebp
adc
outsb
jg
push
inc
mov
or
push
xchg
xor
dec
subb
mov
insl
out
or
movsb
insl
inc
jb
sub
and
bnd
adc
mov
fs
cmpsl
daa
sbb
mov
push
inc
es
icebp
nop
sbb
mov
or
lea
sbb
out
into
int
test
xchg
dec
xchg
lods
adc
sub
mov
jb
aas
inc
icebp
mov
hlt
pushf
xlat
or
adc
dec
outsb
xchg
lea
cmpsb
adc
xchg
ja
addr16
movsb
or
sarl
mov
scas
or
mov
int3
jbe
lods
adc
test
sbb
cmp
mov
push
movsl
mov
test
or
mov
xor
xchg
adc
cmp
jo
mov
jbe
jg
lock
scas
movsl
push
and
mov
or
sub
fnstenv
dec
xchg
fiadds
shll
sahf
push
imul
pop
cmp
pop
fcos
xchg
rcrb
lods
es
inc
mov
jb
sub
or
or
inc
push
daa
mov
addr16
scas
mov
push
jmp
xchg
xchg
cmc
adc
movsl
push
inc
mov
jns
sbb
adc
push
pop
dec
jns
jbe
adc
incb
pop
fnstsw
push
mov
into
push
push
jne
lea
jp
cmpsb
jge
mov
pop
popa
inc
or
pop
cmp
xchg
imul
jns
mov
int3
sbb
xor
repz
add
movsl
or
inc
or
jns
lea
xchg
cmc
jb
lods
cltd
inc
jg
jecxz
adc
inc
imul
mov
xor
test
mov
sbb
mov
xchg
inc
mov
outsb
dec
xor
jb
pop
jl
sub
scas
sbb
fmulp
adc
repnz
push
pop
sbb
pop
push
push
jno
cmp
stos
mov
sbb
enter
loop
sub
add
repnz
pop
ret
mov
cmp
xrelease
fmull
dec
pop
mov
out
inc
lods
mov
iret
or
sbb
aas
rcr
jp
loop
jb
cmp
jns
inc
jge
gs
xchg
pop
stos
cmp
adc
jl
leave
in
loop
test
jp
bound
push
fwait
mov
lods
sub
xor
in
sarl
adc
fs
lret
inc
mov
dec
int3
mov
jecxz
adcl
stos
dec
jg
cwtl
cmp
sbb
push
out
jp
inc
pop
sub
or
xor
cmp
sub
cwtl
dec
outsb
mov
cmp
xchg
mov
push
xor
add
repnz
mov
inc
lds
jmp
movb
aad
dec
pop
fisttps
cwtl
sub
ret
std
sub
rcrl
or
jb
or
fs
sub
dec
pusha
mov
test
in
mov
and
fsubrs
inc
pop
adc
pop
mov
inc
push
cmpsw
scas
nop
dec
rdtsc
cmpsl
xchg
pop
inc
mov
and
mov
movsl
lods
out
and
add
mov
sti
inc
mov
jl
rorb
dec
xor
mov
or
xor
fucom
cmpsl
inc
push
xor
pop
dec
mov
lret
in
loop
dec
sub
push
movsl
xlat
stos
popa
testb
outsl
or
jmp
lret
inc
xor
loopne
jle
xchg
pop
cmp
xchg
adc
imul
dec
out
or
dec
into
adc
cmp
and
notl
enter
hlt
inc
out
mov
ret
push
push
repnz
push
cmp
and
or
inc
call
xor
scas
jmp
out
push
push
test
cmp
addl
inc
scas
mov
inc
cs
in
mov
insl
inc
mov
mov
or
stc
jmp
pop
jecxz
movsl
test
aaa
add
fs
mov
fdivrs
ret
xchg
sbb
jne,pt
stc
mov
les
mov
nop
ljmp
sbb
jge
or
cmp
adc
mov
cmp
dec
mov
fisubrl
stos
test
aas
into
xchg
sbb
cmpsb
or
aaa
aad
inc
push
frstor
xchg
fcomps
or
sub
and
dec
cmpsb
sbb
ja
xor
loop
xchg
testb
push
xor
inc
movsl
test
ffreep
movsb
int3
cmpsb
and
in
xchg
outsb
orw
inc
ja
andl
pop
insl
mov
gs
cmc
loop
int3
or
push
les
sub
lds
aaa
aad
ficoms
push
loopne
sub
and
inc
test
and
dec
movsl
sbb
push
push
or
out
dec
fdivl
incb
loop
add
cwtl
call
pop
jmp
shll
inc
push
out
repz
xchg
ljmp
inc
out
aaa
push
pop
inc
pop
cld
add
cld
aas
push
enter
mov
sub
adc
inc
xchg
lods
mov
lea
and
push
sub
inc
jge
add
out
mov
add
shr
and
add
xor
aas
jmp
xchg
out
lods
cmpsl
xchg
sub
xor
xchg
scas
dec
push
dec
mov
adc
add
out
imul
cmp
push
lea
cmp
sub
in
xchg
push
dec
std
dec
data16
push
xchg
clc
mov
xchg
pop
je
mov
enter
inc
out
cwtl
nop
or
inc
ljmp
test
push
test
or
dec
ljmp
pop
inc
nop
or
idivb
nop
insl
gs
vpunpcklwd
pop
stos
int3
jno
jb
test
lock
adc
clc
cmp
push
dec
cmp
dec
or
insb
bound
xor
daa
imul
cs
sub
outsb
mov
es
shrb
in
or
nop
enter
or
push
pop
fsubr
pop
mov
cmp
fcomip
push
adc
lcall
scas
xchg
xchg
xchg
or
cmp
mov
fsubs
xchg
ja
mov
lret
imul
cmpsb
rcr
ss
and
testl
adc
pop
shll
ss
cmpsb
sub
das
in
inc
cwtl
push
jbe
sbb
xchg
push
lcall
adc
movsl
xchg
testb
adc
pushf
mov
sbb
aaa
rorb
xchg
push
outsl
xchg
add
sub
cltd
lea
outsb
xchg
xchg
into
dec
mov
lods
mov
dec
xchg
push
inc
lods
adc
divl
icebp
sub
insl
add
dec
add
push
adc
in
pop
add
sbb
push
lret
dec
xchg
or
or
cmpsl
and
jbe
lea
mov
bound
and
fsubs
dec
cld
mov
daa
jmp
or
xchg
or
xor
stos
leave
cltd
enter
push
mov
add
or
cs
xchg
incb
dec
push
scas
push
dec
clc
test
orl
scas
xor
mov
mov
daa
les
rep
xor
adc
addr16
fnstenv
mov
ljmp
sub
push
sbb
xor
adc
xchg
jno
push
jmp
or
jl
lret
mov
xor
stos
orb
lret
xor
or
bound
or
xchg
repnz
and
je
jg
out
jno
cmp
cmpsl
add
je
jno
adc
push
adc
push
aaa
aaa
mov
fiadds
enter
jp
inc
scas
jg
inc
std
cmp
mov
mov
test
push
or
mov
das
mov
dec
cs
nopl
mov
or
imul
or
xor
jne
cmpsb
stos
sbb
mov
mov
xchg
push
dec
push
or
adc
lds
mov
idiv
ds
mov
pop
add
xchg
push
test
mov
cwtl
inc
dec
leave
mov
xchg
loope
ss
inc
mov
outsb
lea
testl
mov
testl
adc
push
dec
lods
movsb
pusha
fimuls
push
and
mov
lds
scas
aaa
daa
leave
inc
in
divl
xchg
pop
xchg
or
std
mov
imul
negl
fwait
data16
es
jae
nop
aaa
cmc
push
test
gs
xlat
pushf
sbb
xchg
aaa
cmpsl
jle
dec
push
xchg
and
add
mov
adc
lods
push
xchg
jo
xchg
xor
mov
sub
xor
jo
mov
aaa
lock
ds
popf
jl
adc
popa
sbb
out
bound
push
pop
add
sbb
adc
ljmp
mov
ss
push
mov
aaa
insb
cmpsb
cmc
adc
notl
xchg
mov
or
cs
divl
adc
push
aaa
mov
dec
mov
xor
daa
push
std
imull
push
dec
mov
aad
cwtl
out
push
push
xor
notl
aad
aas
jns
sbb
add
pop
jle
xchg
mov
cmc
add
movsl
push
aaa
insl
enter
mov
inc
mov
add
movsl
add
push
movsl
adc
mov
cmc
outsl
insb
popa
cmp
add
adc
push
test
push
repnz
popf
ss
or
rorl
in
lret
push
cmp
test
cmc
dec
jns
out
jo
addr16
cmp
cmc
xor
mov
dec
mov
in
sbb
mov
adc
xchg
inc
pop
jne
movb
arpl
xor
les
insl
mov
cmp
jno
xchg
les
xor
in
scas
add
xchg
int
pop
pop
or
push
call
fidivl
xchg
ljmpw
int
push
cmpsb
sbb
stc
call
cli
push
sub
mov
out
xchg
mov
popf
push
imull
movsl
mov
push
adc
aaa
imul
outsl
insb
mov
popf
adc
imulb
es
les
dec
gs
xchg
dec
das
xchg
dec
lcall
cli
push
push
dec
jno
loop
scas
mov
push
dec
int
inc
mov
mov
leave
pop
inc
scas
in
push
push
dec
std
dec
data16
arpl
jb
orl
add
xor
or
in
inc
mov
xchg
inc
mov
jno
and
adc
cmp
push
leave
push
fcomps
inc
stos
aaa
fistpll
out
mov
fidivl
sub
or
lahf
xchg
out
add
sub
push
popf
push
pop
mov
ljmp
cmp
xor
xor
fcoms
mov
ss
add
scas
adcl
push
mov
daa
xor
outsl
sbb
int
ja
cmpsl
mov
fnstcw
inc
sub
outsb
pop
xchg
xlat
dec
insl
dec
and
hlt
divl
test
shrb
out
outsl
jle
out
or
xchg
cmp
mov
fsubrs
ljmp
adc
ret
dec
cmp
xchg
sbb
xchg
cltd
add
mov
pop
icebp
xchg
xchg
push
in
push
or
clc
mov
popf
or
leave
mov
lret
dec
ljmp
cmp
outsb
fisttpll
jb
sub
lret
daa
ret
xor
in
jb
jno
dec
enter
mov
shrl
scas
nop
jb
cltd
cli
les
cmp
pop
xchg
sbb
shlb
adc
fs
mov
push
bound
xchg
dec
pop
mov
or
leave
jmp
scas
adcb
dec
and
mov
push
imul
insb
cwtl
inc
or
test
mov
sub
into
cmp
ss
or
xchg
outsb
inc
xchg
mov
push
bswap
dec
pop
mov
ljmp
inc
push
mov
cli
inc
out
loope
paddusb
fiadds
stc
pop
pusha
out
fisubs
jecxz
pushf
lret
sbbb
imul
test
dec
aad
popf
xchg
xchg
fistl
repz
jbe
ret
incb
pop
js
sub
dec
fdivp
fildl
xchg
push
mov
or
testl
es
pop
xchg
aas
or
push
ja
cmpsl
ja
test
push
adc
jl
or
dec
mov
jmp
xchg
or
clc
inc
test
data16
pushf
cmp
test
mov
in
imul
xor
data16
lret
fadds
ljmp
mov
dec
xchg
js
xchg
ljmp
dec
dec
xchg
push
loop,pn
jns
test
cmp
sbb
and
mov
ss
push
xchg
or
or
xchg
inc
out
movsl
call
mull
fsub
es
mov
jbe
fadds
mov
jl
pop
push
aad
ja
adc
mov
xchg
jb
cs
lret
outsb
mov
filds
dec
cli
jp
push
leave
cmpsb
imul
add
adc
jmp
in
inc
ljmp
inc
cmpsb
lea
push
mov
daa
cmp
daa
bound
and
dec
adc
adc
jb
shll
push
push
ds
inc
xlat
xchg
das
cmp
jbe
pop
mov
stos
mov
wbinvd
mov
daa
scas
lret
pop
test
inc
add
adc
add
sbb
and
out
xchg
sub
xor
lret
clc
pop
sub
les
pop
dec
jnp
pop
not
pop
xor
stos
daa
xchg
mov
int3
insb
or
jbe
popa
popa
ja
pop
mov
or
scas
add
pop
xchg
mov
dec
hlt
dec
adc
out
sub
and
test
ja
dec
filds
daa
sub
mov
int
or
aas
mov
sbb
pop
pop
mov
xchg
pmaxsw
hlt
push
out
push
jmp
sub
jbe
dec
out
cli
call
sub
rorb
lret
dec
pop
adc
sbbb
and
mov
fisubrs
loopne
adc
mov
dec
xor
in
dec
ljmp
lret
aaa
pop
in
movsb
daa
dec
mov
int3
mov
in
imul
imul
popa
dec
rclb
inc
cmp
ja
dec
sti
fistpll
sbb
cld
jbe
pop
push
and
lea
sub
aam
or
lods
mov
xchg
inc
out
movsb
call
sub
xchg
divl
pop
in
adc
sub
pop
inc
inc
ja
and
or
jle
add
out
subl
add
pop
or
or
jle
add
and
sarl
add
add
and
jmp
push
fsubs
mov
rolb
adc
and
mov
add
dec
add
int
in
and
mov
mov
cs
ja
and
mov
in
dec
inc
in
aad
dec
mov
xor
dec
pop
xlat
mov
inc
inc
jno
mov
and
sarb
xor
push
sub
pop
pop
scas
loope
push
cmpsl
xlat
push
out
dec
fildll
fistps
inc
adc
call
aas
lods
sbb
push
out
repnz
pop
ja
sbb
stos
xchg
adc
std
and
jo
mov
cmp
notb
aad
out
jbe
in
js
inc
mov
cmp
jae
gs
xchg
dec
inc
dec
xchg
jge
ss
repnz
cli
orw
push
xchg
stc
fucomp
push
loopne
jno
imul
insb
mov
je
leave
aaa
sub
pop
shll
movsw
rclb
sub
es
cmp
inc
xor
dec
xchg
icebp
test
push
frstor
cltd
push
insb
push
mov
sub
adc
bound
push
add
test
mov
push
pop
hlt
fsubrs
pop
lods
cmpsl
dec
adc
xor
xchg
pop
jle
mov
sbb
hlt
cmpsl
faddl
sbbb
cltd
jge
add
dec
pop
shlb
push
inc
out
push
andl
push
fildl
xor
dec
hlt
push
cld
dec
imul
dec
mov
sbb
rolb
push
push
xorl
dec
cmpsb
inc
clc
ret
jne
xchg
stos
jg
cmp
inc
roll
sti
out
adcb
arpl
mov
pop
in
or
push
mov
mov
jnp
dec
cmp
ret
cltd
dec
push
or
test
xchg
or
jmp
into
testb
dec
pushf
mov
jns
ss
xlat
jle
inc
sbb
mov
or
mov
or
mov
or
mov
or
lret
xchg
sub
cli
mov
enter
xchg
out
or
imul
sub
negb
ret
mov
cmp
ficoml
or
fsubrl
mov
xor
sbb
pop
add
je
jl
icebp
stos
mov
pusha
in
enter
jmp
sbb
jp
stos
or
out
xchg
out
jmp
gs
ret
or
pop
sbb
lret
in
sub
inc
inc
jl
xchg
adc
inc
sahf
ss
test
and
xchg
jle
fisttps
aad
push
daa
repz
or
js
cs
ja
adc
mov
push
add
xchg
adc
gs
pop
cli
ss
push
jno
pop
rorl
mov
sub
clc
mov
daa
sub
sub
fiadds
inc
mov
pop
push
add
sub
jns
pop
mov
cmc
movhps
mov
inc
lock
or
mov
lret
sbbl
in
and
or
dec
addr16
add
sahf
mov
sbb
lahf
xchg
ljmp
adc
test
movsl
xchg
repnz
adc
out
jbe
sbb
test
xchg
pop
fimuls
popa
cli
leave
dec
push
fs
rol
push
dec
pop
sbb
gs
push
or
sti
push
or
push
out
push
sub
outsl
lods
xor
mov
lods
ret
push
aas
cmc
outsb
mov
jle
xor
out
dec
or
sub
test
jbe
add
adc
fs
pop
mov
dec
adc
sub
jb
lcall
shll
add
stos
inc
mov
pushw
jo
sub
cmp
cmp
and
pop
pop
sbb
shrb
fcomps
jbe
lret
sarl
xlat
xor
push
pop
xchg
inc
xchg
push
loop
add
repz
cmp
sbb
pop
inc
outsb
inc
and
mov
mov
inc
into
ss
push
push
rdmsr
popa
sbb
cmp
mov
and
push
mov
or
repnz
jno
das
into
std
mov
fsubrs
jae
xor
xor
shll
pop
dec
mov
and
cld
pop
push
aas
repnz
pusha
ljmp
mov
in
cmp
movsb
int3
mov
jmp
dec
dec
shll
add
daa
shll
sbb
out
jae
jb
xlat
jmp
fucomp
inc
and
loope
out
adc
mov
push
mov
dec
cmpsb
mov
daa
mov
and
sub
outsb
mov
push
movsl
push
push
clc
subl
and
xchg
lock
jo
push
leave
inc
or
call
sub
push
popf
dec
out
adc
out
and
outsl
push
xchg
inc
or
fs
cmpsl
xchg
sub
cmp
sub
push
lcall
leave
insb
bound
sub
daa
rolb
sbb
dec
dec
dec
push
sub
add
enter
hlt
ja
xchg
adc
dec
test
gs
cltd
test
mov
fisubrs
xchg
cmp
outsb
int
ja
cmpsl
subb
sub
into
andb
fistpll
test
leave
or
lret
roll
ja
cmpsl
sub
xor
xchg
mov
cs
jmp
dec
jle
xor
stos
push
stc
outsb
and
outsb
jmp
dec
mov
push
fprem
adc
popf
dec
sbb
icebp
subb
lods
or
int
ja
mov
or
outsl
mov
int
ja
cmpsl
loopne
push
mov
push
xor
gs
jns
mov
pop
pop
rorb
dec
cli
lea
bound
lea
and
xchg
dec
jns
test
and
scas
leave
push
inc
dec
cmc
dec
push
sbb
xchg
add
cmp
or
outsb
rcll
mov
movsl
clc
fldcw
cmc
divb
sub
push
push
pop
outsl
xchg
xchg
mov
ret
ja
cmpsl
hlt
push
sub
dec
add
pop
clc
xchg
test
lds
cli
leave
lock
xor
xchg
or
cmpsl
mov
repnz
aaa
lea
out
jno
sub
and
xchg
mov
int
sbb
scas
mov
dec
push
mov
daa
subb
outsl
xchg
lock
imul
int
inc
push
mov
xchg
mov
out
shlb
cmpsl
cld
sbb
das
outsb
out
imul
test
mov
lods
ja
cmpsl
fsubrl
adc
cmp
insl
test
cltd
or
leave
shlb
xchg
mov
dec
int
ja
cmpsl
jo
stos
sbb
xchg
mov
cmpsl
cltd
push
or
dec
xor
adc
or
int
jae
xor
das
shll
push
test
xchg
lods
or
int
ja
xchg
or
push
push
push
clc
mov
test
lret
push
not
aaa
out
pop
test
mov
mov
popa
pop
dec
xchg
mov
inc
int
ja
cmpsl
sub
sub
sahf
outsb
push
xchg
into
xchg
repz
mov
dec
dec
mov
test
stc
add
cmp
or
mov
jge
mov
movsb
ficoml
int
cli
leave
hlt
ljmp
cmp
jb
push
sub
cmp
sub
adcb
push
scas
lds
cmp
dec
data16
daa
mov
aad
or
or
outsb
lods
xchg
and
dec
inc
xchg
push
test
mov
push
leave
or
leave
lock
dec
clc
jge
jo
mov
leave
mov
scas
pop
pop
into
dec
jge
repnz
int3
out
push
push
inc
or
push
mov
daa
scas
push
std
outsb
xor
fimuls
mov
sub
dec
dec
mov
daa
jb
and
fmull
adc
add
aas
push
or
dec
jle,pn
jne
test
push
rorl
leave
in
scas
lea
out
popa
push
pop
or
and
dec
mov
pop
xchg
rclb
cmp
scas
in
push
dec
add
daa
sahf
push
in
push
pushf
or
mov
es
outsl
xchg
xchg
test
mov
movsb
ja
cmpsl
les
repnz
cmp
pushf
mov
push
jne
movsl
test
mov
lret
push
out
in
sbb
push
int
ja
cmpsl
pop
sub
sbb
xchg
mov
popa
dec
sub
fwait
push
das
leave
and
scas
lds
ss
in
pop
mov
daa
mov
leave
outsl
add
jbe
das
lods
and
pusha
outsl
xchg
xchg
test
mov
test
fisubl
mov
aaa
mov
cwtl
pop
mov
data16
ja
cmpsl
subb
and
outsb
jge
imul
pop
xchg
out
cmpsl
pop
sub
cmp
mov
sub
lea
cmp
sub
adc
scas
add
cmc
imull
dec
pop
decb
dec
es
es
push
popf
outsl
into
xchg
mov
ja
cmpsl
add
xor
add
inc
clc
jns
push
or
leave
push
ljmp
dec
ja
cmpsl
insb
sub
inc
sub
in
inc
xlat
adc
int
dec
cmp
sub
and
push
or
push
sbb
dec
inc
mov
outsb
push
mov
or
leave
sbb
dec
rorl
mov
test
fisttpll
adc
add
xchg
push
into
out
push
push
dec
clc
jge
js
mov
mov
mov
icebp
xchg
push
int
ja
cmpsl
sub
and
xchg
ret
and
push
scas
lds
pop
dec
sbb
mov
jne
hlt
ss
and
add
daa
ret
sbb
cmp
cmc
sub
xor
cmc
or
jle
cmp
mov
notb
pusha
bound
dec
dec
ret
and
not
es
push
leave
dec
ds
icebp
push
dec
sbb
mov
daa
ret
or
es
sub
adc
cmpsb
testb
cli
adc
cs
es
push
lods
outsl
ficoms
sub
outsb
rcll
push
mov
test
mov
ret
pop
ficoml
out
stc
xchg
pop
call
mov
sbb
mov
es
push
jl
stos
xchg
xchg
or
int
ja
cmpsl
les
repnz
mov
cmp
loop
lea
jmp
or
out
orl
mov
jbe
bound
add
inc
into
mov
nop
adc
leave
cs
into
incb
cs
and
nop
pop
popf
shr
jne
and
inc
inc
fstl
dec
push
aas
mov
cmp
xchg
cli
test
jg
cli
leave
shlb
mov
cmp
and
pusha
jg
jge
push
mov
push
es
int
pop
mov
aaa
mov
sahf
xor
mov
add
inc
lods
push
jb
cltd
xor
notb
bnd
outsl
out
arpl
sahf
push
jmp
fiadds
add
xchg
shll
lock
adc
push
fidivs
pushf
dec
push
jmp
dec
push
sub
outsb
mov
mov
add
mov
pushl
mov
insl
aaa
jp
gs
ss
cmp
dec
jae
xor
cmp
sbb
lcall
cmc
mov
pop
xchg
or
push
outsb
sbb
add
pop
push
dec
rorl
sbb
push
lods
fsubr
scas
sub
iret
outsb
dec
add
mov
cmpsb
xchg
xchg
push
repnz
sbb
mov
sahf
or
cmc
mov
scas
repnz
sub
stos
test
aas
out
pop
out
pop
ret
cld
mov
pop
cmpl
daa
daa
sub
sbb
sbb
leave
js
repnz
sub
inc
mov
call
mov
or
push
repnz
je
pop
pop
sbb
xor
jmp
in
jg
mov
push
cmp
maskmovq
imull
lret
lods
pop
mov
inc
sub
cli
jno
ss
repz
adc
pop
out
add
adc
out
gs
sbb
push
fisubrs
jo
push
rorl
ds
and
push
inc
fimull
ja
mov
les
or
ds
dec
xchg
out
dec
xor
addr16
jno
cmp
leave
mov
jbe
iret
out
imul
out
out
mov
cmpsl
lret
pop
dec
sub
rclb
mov
outsb
popa
mov
push
aas
mov
push
imul
jne
dec
repnz
dec
js
mov
iret
jp
xchg
in
mov
jbe
jns
icebp
popf
fidivs
cltd
daa
inc
inc
xorl
ret
loope
add
cmp
jle
sbb
add
mov
aad
xor
cmpsb
insb
daa
cmpsb
push
cmp
lods
dec
sbb
or
mov
inc
mov
xchg
dec
out
das
subl
xchg
out
mov
jp
loope
lock
dec
imul
mov
push
mov
out
aad
mov
lahf
adc
adc
push
insl
pusha
das
mov
adc
in
push
pop
dec
ss
mov
adc
flds
inc
ror
mov
popf
pop
jp
sti
insb
jae
lea
cmp
sahf
xchg
movsb
ja
sub
add
xchg
xchg
adc
add
dec
out
xor
popf
ljmp
lods
adc
shrb
or
into
ss
cs
rorb
inc
popl
xor
ja
cmc
ss
das
and
mov
outsb
lahf
fsts
push
outsb
jge
push
incl
sbb
lods
adc
jp
std
or
inc
inc
mov
jg
push
push
jbe
mov
jbe
shll
jmp
cmc
inc
dec
pop
fisubs
and
lcall
mov
es
mov
lods
fstps
fs
mov
mov
lahf
mov
sahf
push
jg
lcall
jmp
cmp
std
aaa
aaa
into
fcomps
das
mov
int3
das
or
das
and
lret
ficompl
enter
test
jae
add
loop
jmp
add
jo
out
push
mov
jbe
cmpsb
pop
push
xchg
push
and
jbe
inc
pop
mov
cmpsb
sbb
mov
jne
push
pop
jae
push
adc
and
push
cmp
mov
or
in
sbb
imul
pop
ss
sub
dec
loope
push
lret
jno
shufps
xchg
add
xchg
jns
pop
xor
xor
mov
push
stos
sub
inc
add
push
stos
xchg
sub
test
es
dec
lcall
mov
dec
repnz
mov
divb
inc
out
xorl
cmpl
push
fwait
xchg
push
leave
shll
or
clc
xchg
sbb
ret
clc
rcrb
jne
ficompl
jge
loop
mov
add
test
jne
xchg
outsl
cmc
es
cmc
cmp
mov
pop
aam
cmc
gs
cmc
insl
aam
cmc
jne
jge
sbb
xchg
cmc
addr16
jne
push
pop
mov
push
outsl
aad
push
jg
test
mov
push
lahf
mov
push
scas
mov
push
mov
mov
push
fbstp
sbb
sub
pop
cltd
dec
dec
das
mov
push
push
xorl
dec
lahf
sbb
sbb
mov
cmp
cmpsl
cmp
add
imul
scas
push
mov
sub
fidivrl
push
hlt
pop
cmp
stos
je
mov
add
mov
mov
pusha
xchg
call
dec
push
out
clc
push
and
and
cmp
and
ret
xchg
and
hlt
fcomi
cmp
cmp
xchg
ljmp
cmp
jne
aam
int3
cltd
push
inc
pop
and
inc
mov
xor
mov
in
push
negl
pop
inc
sti
inc
pop
cmc
jmp
xchg
and
xchg
idivl
fisubrs
xchg
stc
test
mov
in
add
or
mull
pop
sbb
and
add
mov
in
inc
inc
mov
out
mov
lcall
andb
inc
inc
push
mov
inc
dec
jmp
push
stc
mov
adc
ja
sbb
mov
jg
sbb
sub
pop
out
in
pop
pop
paddd
jbe
push
and
fidivs
mov
lds
scas
and
stos
cmovge
mov
push
out
minps
enter
loop
xchg
ss
pop
lcall
mov
rcr
jge
sbb
pop
push
sub
push
aad
push
aam
imul
cltd
fisttps
mov
pop
rolb
sahf
mov
and
inc
sbb
insl
sub
sub
insb
subb
out
push
lahf
int
idivl
out
mov
ss
pop
stos
and
add
xor
bound
insl
iret
sub
lods
mulb
sbb
mov
mov
cmp
adc
mov
dec
and
stos
mov
cmc
lods
mov
aad
inc
int
int3
pushf
or
mov
repnz
in
or
scas
std
sbb
adc
mov
jns
in
test
pop
push
stc
cmp
dec
pusha
jns
jae
test
add
ds
cmc
pop
ficoms
mov
shrl
sbb
repnz
insl
xor
sbb
push
or
dec
orl
jmp
push
in
cmp
inc
cmp
pop
jb
xor
push
mov
mov
outsb
addr16
xor
push
pop
pop
mov
pop
popa
and
ret
popa
loope
dec
arpl
inc
lods
xor
cmp
jae
xchg
and
lret
adc
jne
test
pop
mov
push
dec
negl
leave
pop
je
push
out
push
lret
xor
push
testl
movsb
subl
loop
orl
into
inc
jno
push
jns
faddp
xorl
fs
or
arpl
inc
test
js
aam
lods
cmc
push
aam
cmc
arpl
int3
cmc
jae
fdiv
or
fs
xchg
cld
enter
jmp
test
sub
rcl
cmp
jecxz
dec
cmc
repz
aam
out
adc
aam
mov
int
insb
fcmovne
add
jmp
adc
sti
outsb
out
cmc
test
loopne
push
add
stos
hlt
adc
mov
add
mov
movsb
pop
lds
movsb
insb
lds
movsb
jl
and
jne
lret
mov
push
adc
sti
mov
dec
or
test
aaa
sub
and
cmc
and
lret
std
xor
inc
pop
jmp
push
pop
sti
std
fs
or
je
sbb
test
sub
xchg
pop
cmp
movsb
pop
dec
mov
pop
inc
pop
imul
pop
jnp
in
mov
pop
xor
sbb
sub
sarl
movsb
add
je
pop
ds
andb
movsb
add
les
stos
fs
mov
fs
add
fs
jmp
adc
sti
xor
ds
pop
fwait
aas
add
stos
inc
adc
mov
inc
xor
fildl
dec
jmp
jge
mov
test
sub
xchg
and
add
and
lds
imul
and
in
mov
and
and
and
je
movsb
inc
push
lds
movsb
je
sbb
lds
movsb
movsb
lds
mov
pop
movsb
lds
aam
jnp
in
mov
hlt
dec
fwait
dec
add
stos
mov
lret
jmp
or
or
push
or
or
je
sbb
test
cmp
movsb
stc
mov
jecxz
or
repz
out
push
int
cltd
mov
cwtl
call
cmc
fcmovnbe
inc
cmc
jmp
push
adc
or
mov
xor
pushf
sbb
lods
sbb
mov
sbb
fcompl
xor
jne
js
fwait
mov
add
fs
fbstp
filds
jnp
movsb
jle
fbstp
stos
adc
fldenv
mov
pop
movsb
lds
aam
jnp
in
out
hlt
ret
add
stos
and
lret
mov
inc
push
lds
movsb
je
sbb
lds
movsb
movsb
lds
mov
pop
movsb
lds
aam
jnp
insb
cmp
jle
stc
push
test
aad
js
movsl
imul
out
int
testb
loop
cmp
lret
mov
ljmp
push
add
fs
pop
aas
xchg
push
scas
and
test
and
test
and
test
and
test
and
test
and
jl
rorl
jae
xchg
hlt
movsl
adc
jne
xchg
push
cmc
cmc
aad
ds
in
dec
cmc
cmc
rcrl
add
popf
ffreep
jmp
add
and
and
xlat
and
cmpsl
arpl
lock
push
lods
clc
push
push
mov
add
and
cwtl
push
inc
in
mov
lds
movsb
xchg
fnsave
rcrl
jno
mov
lock
inc
and
jb
push
and
mov
pushf
and
lret
and
fcmovb
mov
and
sbb
ljmp
inc
fisubrl
push
loop
sbbl
xchg
and
into
xorl
test
and
test
and
test
cmp
pushf
call
cs
mov
or
lea
dec
and
push
imul
and
add
dec
and
pop
lds
movsb
xchg
mov
ja
aaa
push
dec
jmp
in
icebp
cltd
imul
mov
jmp
or
imul
xchg
cmpl
cmpsb
orl
test
and
jns
pop
repz
mov
insl
and
add
pop
and
test
insl
test
and
test
and
test
and
test
and
test
and
test
and
test
and
sbbb
push
pop
lcall
push
mov
xchg
inc
mov
push
jne
sahf
push
xorl
mov
cltd
mov
push
lods
scas
out
out
mov
pop
gs
pop
insl
rcrb
jne
ljmp
xor
sub
shrl
cmc
int
xor
in
data16
or
aam
cmc
sbb
aam
cmc
sub
aam
cmc
insl
aam
cmc
jne
jge
loop
xchg
cmp
jae
xchg
and
leave
or
fistpll
pop
push
out
fs
mov
les
xchg
or
inc
in
mov
jne
fimuls
mov
out
insb
xchg
imul
cltd
stos
in
lods
jmp
or
fucomp
inc
or
in
jmp
or
sub
xchg
or
cmp
jmp
loop
dec
jns
xor
insl
inc
sub
stos
dec
jne
adc
lds
inc
and
add
cmc
add
std
add
add
mov
stos
lds
mov
add
fsin
js
flds
js
fstps
iret
jl
pop
movsl
xchg
or
lods
adc
jo
sti
and
jp
push
xchg
insb
or
insb
lcall
insb
int
insb
out
test
pushw
pop
das
dec
push
mov
pop
es
push
jo
call
add
and
into
inc
mov
les
and
out
xchg
and
dec
shrl
push
push
xor
jne
push
popa
mov
push
xorl
pop
sbb
decb
pusha
imull
aas
pop
xor
push
lock
test
adc
jbe
sbb
and
dec
pop
mov
cmp
fdivrp
adc
xor
inc
push
arpl
mov
adc
pop
mov
es
pop
mov
pop
imul
jp
mov
fwait
pop
rol
sub
ds
adc
or
imul
pop
push
sub
lods
ret
test
xchg
and
mov
cmpsl
lds
scas
lds
mov
pop
popf
mov
xchg
mov
repz
sbb
inc
sub
mov
mov
rcrl
cmpsl
rol
and
inc
xor
cmp
scas
push
aas
fbstp
xchg
in
call
add
xchg
loopne
popa
mov
mov
dec
cmpsl
lcall
icebp
jb
data16
scas
insb
jb
scas
xor
shll
cmp
pop
shlb
push
add
mov
cmp
rclb
aas
push
movsl
xor
int3
incl
fldcw
and
fisubl
aas
inc
dec
mov
js
fldenv
push
adc
adc
outsl
xor
adc
and
pop
mov
imul
dec
and
mov
mov
inc
out
out
cltd
adc
cmp
icebp
cli
xor
jno
fcomps
mov
push
mov
pop
pop
pusha
sbb
cmp
imul
std
and
divb
jg
mov
enter
and
or
dec
mov
ret
mov
sbb
mov
cmpsl
mov
out
mov
scas
push
test
rcl
sahf
aad
outsl
mov
je
or
sahf
pop
dec
std
jmp
imull
pop
jae
pop
adc
cld
dec
mov
push
or
xchg
or
sbb
mov
out
cvtps2pi
scas
inc
pop
test
js
inc
or
or
pop
jae
pop
pop
mov
jle
cmpsl
add
fs
add
inc
inc
xchg
and
cld
shll
arpl
xchg
lcall
and
mov
movsb
call
mov
pop
cltd
mov
jl
dec
shrb
int
andb
sbb
mull
pop
push
mov
adc
xor
cmpsl
fs
pushf
pop
inc
lods
pop
pop
mov
pop
jnp
xor
inc
repz
lea
mov
sbb
mov
push
add
addr16
jno
jge
ds
out
inc
gs
xor
int
dec
incl
cmc
cmp
imul
xor
cmc
pop
cmpsb
dec
testl
add
das
cmp
jbe
std
inc
mov
bound
xchg
adcl
jns
or
or
clc
xchg
xor
xor
mov
xchg
stc
mov
lods
jmp
jne
and
aaa
stos
pop
pop
xchg
sbb
dec
dec
in
leavew
push
mov
add
dec
in
int3
adc
inc
dec
mov
addr16
sti
add
les
xorl
or
push
call
rcl
xchg
rclb
pop
xchg
adc
notb
sbb
test
sub
test
cmp
adc
cmc
sub
gs
xor
popa
mov
scas
insb
xchg
lret
inc
jle
lds
out
leave
aas
out
addl
popa
sub
addr16
icebp
sbb
cmp
and
push
sarb
mulb
sub
sub
cmp
in
ds
jle
fbld
jae
mov
push
popf
scas
shrl
mov
gs
add
test
and
sahf
dec
mov
call
sbb
adc
push
mov
dec
pop
daa
pushf
jmp
jbe
mov
pushf
sub
lods
ja
ficomps
iret
cmc
movsl
pop
aam
out
outsl
inc
pop
xor
lcall
xchg
and
in
mov
ljmp
mov
loope
leave
icebp
mov
insb
cmc
int
or
xor
cmpsl
xor
add
mov
negb
xchg
sub
fstps
xor
dec
and
jp
data16
add
stc
push
rcll
inc
icebp
xlat
push
mov
lcall
jg
mov
test
jbe
cmp
xor
lcall
cmpsb
add
xchg
sub
mov
insb
ret
insb
ror
stc
insb
or
cmp
out
mov
add
mov
and
dec
pop
xchg
in
std
push
and
arpl
or
outsb
pop
sbb
jg
popf
inc
dec
xor
pop
in
lret
insb
fcmove
add
adc
xlat
inc
stos
ljmp
test
adc
cwtl
inc
int
mov
mov
les
hlt
xorl
pusha
xchg
inc
testb
pop
jle
fistpll
xor
or
stos
test
into
xorl
test
mov
push
out
mov
shl
cs
in
jbe
out
inc
and
add
in
add
lods
pop
pop
jmp
outsb
add
dec
push
cltd
or
movb
and
lret
and
ds
or
and
popf
rcrb
push
clc
ficompl
pop
mov
push
pop
inc
inc
dec
faddl
push
xor
jbe
jmp
mov
mov
jmp
pop
cs
xor
cmp
push
cli
scas
inc
sub
and
imul
fdiv
or
pop
inc
imul
add
or
and
mov
push
mov
sub
mov
gs
in
pusha
lcall
ljmp
xor
or
and
xchg
xchg
push
test
lods
addr16
inc
subb
repnz
scas
mov
sub
sbb
enter
ret
mul
xchg
or
movsb
into
pushf
sahf
test
daa
std
xchg
test
adc
aaa
inc
in
xor
clc
and
adc
adc
pushf
es
scas
cld
and
mov
push
add
repz
xchg
inc
leave
divb
add
sbb
jae
push
push
cmpsb
push
addl
ja
pop
mov
pop
ret
dec
add
loopne
cmpl
mov
arpl
and
dec
sbb
xor
mov
lds
push
pop
lret
cmp
adc
mov
fwait
das
aad
insb
clc
pop
mov
stos
push
cmp
sahf
mov
push
jmp
push
cmp
fsts
icebp
pop
jns
sahf
sbb
sub
iret
aaa
frstpm(287
jne
and
xchg
push
mov
adc
and
lock
mov
les
and
add
or
mov
cmp
mov
pop
les
push
js
sbb
aas
cmc
popf
icebp
rcrl
add
push
adc
jp
and
mov
mov
mov
imul
shl
dec
adcl
inc
stc
pop
stc
dec
gs
push
push
icebp
jnp
push
stc
add
or
int
stc
test
mov
shll
mov
daa
push
and
lea
ds
js
pop
stos
jnp
cmp
cmp
insl
cwtl
push
lods
shrb
mov
xor
mov
adc
out
mov
push
sbb
cld
cmp
push
push
mov
dec
jge
fs
sub
addr16
cltd
and
movb
pop
inc
dec
lret
sub
out
lock
jo
cmp
insl
loopne
mov
aad
and
sub
int
inc
lds
xchg
push
jecxz
loop
sbb
hlt
sub
mov
movsb
into
lds
lds
fidivrs
pop
shll
std
inc
pusha
add
outsb
loopne
cmc
sti
ds
in
iret
outsb
xchg
push
pop
mov
mov
out
ficoms
inc
ficoms
sub
fcmovbe
xchg
pushf
outsl
fnstsw
outsl
inc
test
mov
mov
into
mov
jns
dec
test
rcll
and
das
sbb
ds
mov
mov
jp
sbb
push
or
jb
and
mov
push
push
or
xor
lret
inc
bnd
dec
add
pop
sub
xchg
xor
das
and
ds
iret
inc
test
sbb
testb
sbbl
sbbl
gs
jno
out
and
pushf
nop
mov
and
bound
jmp
or
pop
test
mov
sub
shll
pop
popa
inc
push
mov
fs
jno
jb
xchg
mov
jle
adc
out
jb
adc
insl
clc
dec
and
xchg
ret
call
xchg
ljmpw
or
mov
sbb
mov
imul
xor
mov
mov
xor
cltd
push
data16
jne
push
push
mov
push
pop
scas
jle
mov
jne
push
xchg
scas
mov
xor
add
sub
or
xchg
aas
hlt
cltd
lods
shll
xor
icebp
pop
mov
fsubrs
xor
gs
rorb
pushf
lods
inc
popf
push
add
jnp
and
ror
aaa
xchg
adc
mov
jnp
jae
mov
mov
inc
cli
mov
lret
lea
aaa
sbb
push
xchg
mov
ret
mov
fcoml
or
cli
imul
mov
fwait
push
imul
int
dec
push
dec
nop
stos
jb
push
fidivl
stos
inc
ljmp
iret
pop
push
fwait
ljmp
push
fwait
mov
xchg
cmpl
inc
lcall
mov
iret
pop
xchg
xor
push
shll
xlat
xor
sub
int3
adc
cmp
or
aad
filds
les
xchg
mov
clc
fildl
inc
inc
pushf
idivl
push
mov
pop
jns
add
arpl
dec
or
add
jmp
ss
mov
mov
arpl
jne
lcall
inc
test
push
xchg
loop
incl
jmp
fsincos
movsl
in
or
and
sub
lods
mov
scas
lret
jnp
push
movb
pop
jns
clc
jge
xor
jne
shr
sub
mov
xchg
jns
xor
icebp
mov
jae
xchg
xchg
and
xor
sbb
inc
push
in
push
outsl
shrl
push
iret
jo
ds
jp
cmp
mov
stos
sbb
add
and
pop
push
mov
push
insl
pop
dec
sbb
and
ljmp
push
test
or
cmp
mov
and
sbb
mov
push
aad
cli
lods
je
xchg
mov
mov
cwtl
pushf
std
mov
dec
aaa
push
sub
add
mov
cwtl
test
test
xor
lods
imul
push
movsl
jle
and
cmpb
jb
movups
xchg
movsb
pop
int3
xchg
push
imul
add
or
sbb
movsb
mov
movsb
aam
test
sbb
pop
movq
cmp
xchg
inc
mov
inc
add
mov
sub
sbb
loopne
mov
pop
jno
pop
push
add
and
push
inc
dec
inc
movsl
cmp
pusha
sarb
dec
sbb
testb
xor
aaa
mov
or
test
fld
adc
cmp
sbb
cld
loopne
fwait
push
arpl
sahf
pop
pop
cld
test
xchg
mov
mov
inc
mov
pushw
adc
data16
loopne
jmp
dec
adc
mov
gs
ja,pt
jno
es
add
test
lods
hlt
jle
lret
pop
mov
sbb
loopne
in
in
sub
xor
ljmp
push
xchg
nop
sub
adc
imul
dec
dec
mov
ljmp
and
sbb
cmp
test
cmp
fldl
imul
or
lret
jle
addl
sub
or
sub
cmp
scas
hlt
sub
stc
in
lds
data16
cmp
decl
xchg
xor
jmp
jecxz
loope
add
and
aam
inc
popa
and
sar
mov
jbe
sub
lods
gs
xor
mov
pushf
mov
outsb
icebp
fimuls
jg
and
inc
pop
mov
hlt
mov
and
clc
sub
dec
in
jp
movsb
inc
and
stos
pop
lds
cmp
ljmp
or
mov
inc
and
daa
movsb
in
pop
jne
mov
movb
ss
pop
cmc
add
mov
ss
jge
into
adc
jbe
cmp
sub
mov
out
dec
movsl
cmp
xchg
fs
cmc
insb
adc
outsl
xchg
sub
sub
push
jmp
xchg
bound
in
pop
mov
andl
push
sub
sahf
adc
std
hlt
inc
les
xchg
sub
cmp
and
jbe
insl
insl
adc
push
mov
adc
pushf
jne
stos
cmp
push
mov
jbe
jle
mov
dec
jae
movsl
xchg
xchg
call
push
lea
inc
mov
mov
or
jbe
test
pop
adc
push
xchg
sub
pop
jge
adc
pop
int3
cld
int3
pusha
fisubs
xor
dec
xor
cs
shrb
mov
divb
mov
or
mov
lret
cmc
ss
inc
xchg
ljmp
cmp
adc
popa
insb
inc
int
insb
dec
int
insb
push
fidivrl
inc
and
mov
imul
cld
std
popa
push
or
icebp
push
mov
jne
into
add
pushf
ret
xor
push
adc
sub
pop
add
dec
xorl
in
fbld
cmp
in
nop
sbb
cmp
lods
andb
or
jo
adc
out
cmpsl
fisttps
ret
or
daa
shlb
ret
insb
mov
jne
push
add
enter
arpl
or
sbbb
sbb
fs
fwait
in
jns
insb
jne
aas
test
dec
stos
nop
dec
fadd
ret
femms
add
add
jmp
mov
xchg
sbb
popa
stos
sbb
test
and
add
or
stc
xabort
call
daa
pop
fimuls
and
test
sbb
mov
imul
iret
sbbl
orb
ror
mov
fs
lock
push
int
ljmp
sub
pop
fldcw
fdivrl
mov
daa
test
add
add
cmp
sbb
and
inc
inc
mov
in
dec
pop
clc
std
pop
sahf
arpl
test
adc
dec
sbb
or
xchg
ret
or
xor
dec
mov
sbb
xchg
inc
jns
fisubrs
out
iret
push
call
mov
outsb
add
mov
xorb
rcll
and
mov
cmc
or
cmpsb
mov
jl
loop
jmp
in
pxor
cmp
push
xor
jmp
out
xchg
fistpll
jle
adc
ja
xlat
push
pushf
sub
out
roll
daa
fxch
mov
push
jno
adc
mov
cmp
out
out
pop
shrl
cmp
aam
dec
push
inc
sub
inc
push
dec
ja
and
mov
and
iret
mov
xor
xor
je
lods
test
sbb
inc
les
dec
mov
mov
jmp
adc
push
pop
mov
popf
movl
in
push
subl
arpl
jmp
popa
xchg
dec
pop
mov
into
jmp
mov
mov
cmp
sub
out
lea
popl
mov
int
adc
lds
pop
cmp
sbb
dec
loopne
adcl
dec
imul
dec
lds
pop
jp
jl
add
shll
faddl
mov
add
xchg
adcb
mov
push
pop
cmp
mov
aad
std
and
test
sbb
cwtl
iret
push
test
stc
cmp
movsl
sbb
sub
or
mov
mov
shll
sti
test
pop
mov
jmp
and
jl
dec
scas
int
jo
jmp
mov
cmpsl
push
movsl
ret
mov
sub
fdivl
test
inc
jns
cmp
pushf
push
sub
loop
push
sbb
fcoms
dec
lret
fs
dec
std
mov
or
orl
inc
add
scas
pop
bound
jne
add
call
pop
and
cld
jne
es
lea
pop
sub
jle
stc
aad
adc
out
out
mov
out
jne
clc
pop
shlb
push
jl
cmp
gs
cmp
cwtl
jnp
cmpps
sub
pusha
sbb
xlat
stc
dec
jb
shll
jns
cmc
push
and
outsl
cld
adc
lea
call
add
outsl
sbb
mov
and
pusha
fistps
dec
shrl
or
or
enter
jno
jmp
and
rolb
sbb
mov
cmc
stos
xchg
sar
movsb
mov
inc
dec
jns
sbb
add
cld
js
aaa
dec
mov
dec
pop
stos
or
leave
sahf
jnp
fbld
or
cmc
pop
or
sahf
lock
dec
out
mov
popf
addb
xchg
xchg
mov
aam
icebp
cmp
movsb
lock
mov
in
outsb
lahf
lea
mov
aam
dec
inc
pop
xor
sub
push
jmp
cmp
push
mov
jge
das
fdivl
int
and
ret
mov
or
push
jge
imul
xchg
cwtl
mov
pusha
adcb
mov
ja
mov
int
lahf
dec
ja
inc
lock
sahf
in
pop
int
jle
daa
aam
cmc
das
aam
cmc
aaa
shlb
push
xchg
jb
xchg
in
sbb
icebp
xor
roll
pop
nop
cmc
sub
mov
sbb
cli
lods
mov
shlb
dec
pop
cmc
subb
js
sti
cwtl
stc
mov
sub
test
nop
push
ja
mov
and
lods
sbb
dec
xor
fs
pop
shlb
in
fsubr
or
xchg
pop
xorb
push
imul
mov
ljmp
ds
sub
movsb
mov
and
js
pop
fists
push
cmp
sub
loop
pop
xchg
mov
dec
test
ja
fsubrl
stos
xchg
shll
out
jle
jge
int3
cld
xor
scas
loop
test
repnz
add
cmp
outsl
mov
insl
push
mov
or
test
sbb
cmp
push
push
mov
loope
and
in
dec
shlb
add
adc
cmp
xchg
sarl
or
cli
push
push
ret
inc
adc
sub
push
scas
pop
pop
sbb
xchg
and
aam
fimuls
or
add
add
inc
xor
movsb
jno
cmp
push
out
jge
mov
sub
sarl
mov
icebp
adc
sub
call
adc
jg
sub
mov
inc
cmp
mov
jge
jbe
jecxz
out
pop
pop
les
stos
and
xlat
rcr
add
or
cs
inc
push
push
divl
push
cs
sti
addr16
jns
test
pushf
js
mov
jb
fwait
insb
dec
pop
data16
add
je
shlb
je
push
push
add
dec
pop
mov
insl
dec
adc
imul
cmp
in
cmpsl
sbb
aad
int3
ret
pop
pop
shrl
mov
mov
and
push
and
push
mov
scas
ss
xor
mov
add
cmp
sub
test
jns
jno
and
mov
jge
inc
push
or
sar
or
mov
mov
sbb
les
mov
xlat
xor
cld
stos
je
outsb
lods
int
jmp
adc
or
push
loop
cmpb
adc
dec
fs
jo
int
aaa
cmp
mov
jg
and
in
cli
push
xchg
push
cmpsl
test
push
cmpsl
mov
aaa
add
fsts
xor
lods
mov
mov
shll
sub
sbb
inc
test
out
sbb
and
inc
cmp
insb
std
repnz
cltd
stos
cld
adc
lds
imul
sub
pop
xchg
fcoml
das
aas
cs
xchg
push
std
ss
xor
outsl
repz
and
mov
movsb
movsl
push
cmp
jbe
sub
inc
jecxz
in
sbb
nop
jge
mov
cltd
add
cmp
cltd
dec
lahf
popa
mov
jmp
mov
add
xchg
adc
enter
pop
mov
xchg
jbe
pop
inc
pop
hlt
mov
dec
mov
add
mov
aad
pusha
loope
mov
sbb
push
ss
rcll
sbb
cmp
fwait
inc
inc
sbbb
adc
pop
pusha
sub
cmp
in
mov
cmc
mov
popf
xchg
int
lret
out
jecxz
inc
push
and
pop
jp
xor
push
inc
xchg
imul
cld
jecxz
xchg
and
ret
ficomps
inc
jl
adc
push
cld
call
pushf
mov
in
pop
movsl
mov
mov
outsl
xchg
mov
pushf
cmp
xchg
mov
ljmp
add
fidivl
xlat
outsb
les
dec
lds
jg
adc
mov
out
sbb
shlb
cmp
push
add
jb
adcl
shl
sub
xlat
jp
test
add
xchg
and
shll
test
push
adc
mov
test
pop
aad
subb
sbb
lods
addr16
mov
test
lcall
call
add
jae
push
inc
sbb
testb
push
pop
outsl
mov
rcrb
push
jne
enter
xlat
fdivr
add
or
push
fbld
xchg
mov
push
pop
and
sub
push
jp
jnp
outsb
push
sub
and
jl
jmp
and
mov
js
sub
sbb
sub
inc
xor
pop
aam
xchg
data16
push
jge
lods
lods
pop
stos
pop
rolb
fs
ljmp
inc
sahf
cmp
mov
pop
fstp
inc
jno
mov
sbb
imul
fdivl
push
sbb
outsl
xchg
icebp
fidivs
add
xor
mov
je
and
std
jle
iret
push
add
sbb
cmp
mov
mov
cmp
js
dec
mov
jo
adc
push
xchg
outsb
daa
aas
out
xchg
cmp
mov
syscall
dec
adc
xor
add
movsl
or
pop
mov
ja
or
pop
pop
iret
inc
out
xchg
xorl
hlt
movsl
aam
adcl
les
mov
gs
andb
add
or
jmp
je
std
scas
cs
xor
outsb
pop
popa
cld
insl
xchg
mov
inc
rclb
xchg
pop
cmp
lahf
movsb
mov
sbb
sti
push
sahf
sub
insl
cmpsb
imul
fsubr
inc
xcrypt-cfb
cmpsl
loop
cmp
adc
or
div
add
sbb
push
aam
icebp
jl
into
cmp
xchg
stos
or
cld
jmp
cld
xchg
icebp
cmp
sbb
jne
sbb
pushf
call
xchg
xlat
push
lcall
adc
or
imul
push
iret
pushf
enter
push
or
roll
dec
mov
sbb
dec
inc
and
add
cltd
test
fxsave
mov
mov
std
mov
iret
out
and
jb
push
or
inc
push
jle
push
inc
stos
push
pop
imul
popf
lcall
pop
add
mov
or
rclb
adc
pusha
push
hlt
mov
sar
xor
dec
add
in
fbld
or
add
pushf
and
idiv
loop
addl
add
pop
aam
into
pop
dec
cmp
int3
add
xor
out
loop
inc
nop
inc
in
aam
out
testl
cmp
and
leave
inc
sbb
mov
test
cs
xchg
add
cmp
dec
inc
ret
pop
jae
or
jno
add
cmc
jl
movsl
jno
sbbb
out
cmp
aas
jle
jno
in
cmpsl
movsl
mov
dec
push
mov
jb
mov
fcompl
jecxz
and
sti
and
inc
sub
out
adc
add
sbb
or
xchg
pop
push
dec
adc
inc
push
cmp
push
mov
add
stc
xchg
aaa
call
push
mov
fmuls
out
addps
sub
lahf
insl
mov
sub
push
cmpsl
cmp
adc
in
adc
or
sub
or
fs
add
or
out
xlat
xor
dec
and
or
inc
gs
mov
mov
pop
sbb
lods
stc
push
inc
orb
into
add
add
push
lods
incb
mov
cmc
push
mov
lock
arpl
xor
add
or
pop
adc
and
sahf
xor
test
jns
or
jne
out
test
inc
push
dec
push
xor
loope
xor
iret
subb
add
mov
movsb
roll
lods
mov
xchg
dec
mov
push
jno
jecxz
nop
outsb
test
mov
adc
shll
scas
lcall
mov
ja
std
out
pop
pop
and
mov
adc
mov
rcpps
in
fbld
into
sub
stc
and
sbb
pop
test
into
cmp
inc
and
das
push
dec
pop
enter
add
clc
rcr
fdivs
mov
test
shlb
lock
mov
out
in
lods
adc
jnp
imul
clc
add
cwtl
inc
scas
jbe,pn
in
iret
aaa
or
jnp
jns
test
push
lret
sbbl
xor
fldl
lds
fwait
xchg
test
xchg
mov
jp
and
mov
push
push
and
sub
push
pop
fcompl
pop
jp
pop
fstpt
mov
dec
scas
call
jmp
cmpsb
xchg
and
cmp
in
dec
mov
pop
sub
movsb
ret
xchg
repz
jne
jp
ja
pop
sub
ret
sbb
in
insb
ret
jl
pop
xchg
mov
push
daa
xor
loop
and
mov
ja
iret
loopne
inc
test
sbb
les
dec
out
pop
pop
les
out
stos
rcl
fdivl
mov
xchg
adc
jnp
subl
inc
fsubrp
dec
push
inc
pop
pop
stc
push
pushf
insl
test
scas
int
push
pop
stc
loopne
or
call
push
jno
xchg
adc
mov
loop
aaa
pop
pop
cmp
outsl
mov
mov
lret
repnz
insl
mov
cmp
push
inc
jmp
jb
mov
dec
loop
and
sbb
aam
stos
out
push
pop
pushf
out
cmp
dec
inc
mov
cmp
add
ja
cmp
fwait
test
mov
jns
iret
jno
push
ucomiss
xor
xchg
jp
std
mov
jle
adc
arpl
or
sbb
cmp
sub
mov
mov
or
or
jmp
into
sar
hlt
adc
mov
xor
push
jns
imul
call
cmc
pop
das
inc
cmp
jns
or
push
sarl
fisttpll
xchg
loopne
fmuls
std
inc
xor
sbb
sbb
xlat
xchg
adc
ja
lahf
int
test
xchg
and
and
and
sub
xor
fsubl
xor
mov
and
add
mov
lret
jge
or
mov
cmp
cmc
cmp
in
pushf
mov
icebp
les
roll
ss
flds
push
xlat
mov
mov
test
hlt
jno
bound
fld
sub
push
xor
bound
adc
pop
adc
mov
lock
mov
mov
gs
gs
pop
leave
out
mov
mov
pop
frstor
iret
movsb
xchg
mov
rorb
test
inc
dec
shlb
jns
fsubp
shr
xchg
loopne
arpl
movsl
mov
pusha
sbb
daa
sub
loop
xchg
pop
inc
pop
lods
les
and
dec
test
mov
dec
mov
or
outsb
xor
cld
out
insl
xlat
sub
leave
fdivrs
inc
lret
es
aas
mov
inc
jg
cmp
xor
ss
stc
icebp
xor
movsl
in
sub
out
in
loope
hlt
mov
lcall
in
dec
cmpsl
dec
add
xchg
cwtl
popa
cmp
and
fdivrl
mov
popf
imul
jae
mov
cmp
das
xchg
ja
jmp
xor
fnstenv
lcall
or
jbe
sub
adc
negb
test
mov
push
fistl
in
and
roll
jge
mov
idiv
js
sti
cmp
scas
push
fadds
fsts
push
cmp
fdivr
mov
inc
xor
sbb
push
out
loop
add
jo
rclb
mov
pushf
iret
roll
cmp
mov
sub
out
xchg
pop
jnp
je
cmc
mov
lret
push
mov
inc
xchg
mov
cmp
hlt
repnz
xor
xlat
gs
cld
dec
mov
cmpsl
cs
mov
sub
mov
mov
mov
push
movsl
lock
repnz
sbb
push
lahf
sbb
aad
fwait
or
mov
push
pop
pop
test
out
hlt
push
jne
in
rcrl
std
in
pop
or
out
das
popa
popa
push
push
push
cwtl
lgs
push
pusha
dec
arpl
addb
js
inc
xchg
jne
push
leave
aaa
push
push
xor
gs
sub
stc
jne
outsb
fbld
out
les
fbstp
and
xchg
cltd
inc
dec
mov
jns
adc
add
xchg
mov
jmp
mov
dec
inc
cmpb
fdiv
cmpsl
data16
cmc
xchg
movsb
xor
test
mov
leave
or
xchg
stc
into
or
adc
push
cmp
mov
in
int3
enter
insl
mov
and
addr16
xor
adc
push
add
outsb
enter
or
xorb
jp
lcall
mov
xor
clc
dec
data16
setge
push
jp
mov
xor
mov
les
jecxz
mov
jmp
cmpsl
pop
mov
push
dec
filds
ret
jnp
jbe,pt
inc
or
mov
test
sbb
inc
icebp
jbe
dec
shlb
pop
icebp
push
cmp
push
adc
cld
test
jl
lahf
cmp
mov
in
adc
pop
popf
push
cmp
xor
sub
testl
or
into
or
and
es
dec
loop
out
jno
push
mov
mov
cmp
adc
addb
in
daa
mov
or
adcl
aaa
adcl
or
dec
adc
scas
cmp
pusha
inc
cld
addr16
push
pop
stos
push
ss
dec
in
and
pusha
lds
push
adc
sbb
scas
imul
lock
aas
push
mov
inc
xchg
push
shlb
inc
sahf
imul
jae
fs
in
sub
sahf
pop
sbb
push
roll
dec
stos
inc
ficoms
int3
jo
push
mov
add
lea
mov
sub
aam
or
mov
jno,pn
cmpsb
dec
gs
inc
jg
and
mov
ret
inc
xchg
cmp
stos
mov
lret
push
xchg
xor
js
aaa
fidivrs
sbb
stos
push
mov
push
mov
mov
xor
mov
loopne
movsb
dec
icebp
lcall
lods
cmc
mov
mov
ror
xor
sub
outsl
pop
inc
sbb
pop
inc
lret
dec
cmpsl
pusha
ret
mov
insb
and
lret
jg
in
test
inc
les
add
cld
mull
pushf
mov
inc
hlt
out
lock
cmp
loop
or
jmp
or
fsubs
mov
call
enter
call
mov
fimull
mov
js
fsubrs
nop
icebp
js
test
and
jl
inc
inc
lods
inc
xorb
jecxz
lods
add
int
insb
repz
insb
sti
int
insb
add
sub
adc
inc
rol
dec
js
fcoms
clc
fs
add
mov
ret
iret
sub
jmp
clc
inc
sbb
stos
loope
jo
push
or
sub
push
dec
nop
dec
xlat
fs
and
in
and
clc
jb
mov
jecxz
add
fmull
cmp
and
xor
and
idiv
push
fidivrl
jb
push
int
inc
add
into
lret
jne
popa
mov
inc
imul
scas
inc
orb
dec
cmp
sbb
push
and
jo
jbe
adc
jnp
pop
push
movsb
mov
rcr
lods
cmp
pop
fstpt
lea
sbb
and
and
dec
xchg
jnp
mov
inc
mov
jl
sub
stos
xor
dec
outsl
mov
or
mov
sahf
int
mov
push
dec
adc
xchg
mov
sbb
scas
jne
inc
add
xchg
or
fwait
xchg
mov
adc
sbb
cmp
testb
mov
enter
cmpsb
test
out
sbb
jns
cmc
cwtl
and
pushf
lret
push
cld
sub
mov
jg
daa
out
lea
es
push
adcl
std
jp
sahf
sti
push
push
and
fs
roll
cmp
jl
sbb
outsb
jg
ds
lahf
iret
pop
test
neg
push
movsb
adc
xchg
xor
jecxz
sub
jno
adc
pop
in
cmp
jo
out
into
scas
ror
jo
cmc
jo
cmp
fmuls
dec
xchg
shlb
aam
push
adc
das
and
sub
movsb
mov
pusha
dec
jno
jns
testb
fs
sahf
fs
xchg
mov
les
cmpsl
int
cmp
ficoml
sbb
jno
mov
xchg
mov
scas
dec
popa
xchg
shrb
fsubrl
pop
sar
aas
pop
out
dec
pusha
nop
jne,pn
dec
stos
int
insb
fcmovne
or
jns
into
cmpsb
cmp
lds
push
shl
xor
xchg
fsubp
les
fs
loopne
pusha
addl
mov
mov
fiadds
into
testl
imul
adc
pop
jge
cld
mov
orl
std
or
mov
pushf
jne
mov
loopne
fsubl
xor
out
popa
or
lea
pop
repz
push
inc
dec
fsubl
xchg
sbb
cltd
test
cmpsb
nop
or
push
adc
nop
xor
jmp
xor
sub
mov
inc
xchg
dec
aas
mov
dec
adc
call
dec
jns
test
testb
gs
jmp
push
cli
inc
rcll
pop
insl
push
rcll
mov
mov
and
sbb
stos
mov
and
adc
pop
lods
aas
cmp
push
les
inc
sub
setp
aad
jnp
bound
es
xchg
pop
in
cmpsb
jp
push
push
xor
mov
mov
cmp
dec
sbb
xchg
inc
jbe
fwait
data16
mov
outsb
arpl
insb
mov
jle
mov
or
hlt
or
jbe
pop
inc
adc
dec
idivb
js
shrl
lcall
and
enter
xor
pusha
cwtl
dec
push
out
cmp
xchg
dec
cmc
sbbl
pusha
out
and
lods
xlat
inc
pop
mov
xchg
dec
ljmp
popa
or
in
or
orb
dec
push
stc
sub
cmp
mov
push
jge
push
xor
rorl
icebp
push
sbb
add
enter
inc
cld
int
insb
add
sub
pusha
xor
xor
cwtl
cmp
inc
lret
and
ficoms
adc
pop
rorb
push
jecxz
add
cwtl
cmp
pop
shlb
push
icebp
sbb
cwtl
sbb
pop
xor
adc
mov
mov
and
jb
stc
dec
and
mov
push
push
fisubrs
mov
pushf
in
cmp
inc
sbb
std
mov
iret
das
ret
sbb
test
cmpsl
xchg
cmc
lods
sbb
js
xchg
pop
loopne
icebp
pop
std
fimull
jmp
cvtps2pd
and
fld
mov
test
fwait
adc
sub
mov
dec
or
inc
mov
leave
test
cmp
sub
mov
sbb
mov
arpl
es
sbb
mov
and
adc
sub
outsl
push
xorl
add
aad
jbe
leave
lahf
testl
lcall
push
push
mov
std
inc
mov
and
loope
xlat
fsubrp
daa
sbb
jns
and
mov
out
aaa
shll
bound
push
icebp
mov
or
and
mov
push
xchg
or
test
fldt
shlb
popf
add
imul
es
cmp
sahf
and
mov
or
popa
mov
dec
popa
rorl
inc
gs
jecxz
outsb
add
lahf
sub
das
and
cmp
cmp
pop
shll
dec
push
data16
int
lock
mov
dec
jecxz
sbb
cmpsl
sti
xor
inc
mov
orb
shll
int3
or
sbb
push
xchg
mov
test
sbb
stos
dec
mov
xchg
adc
scas
outsl
dec
adcl
pop
lret
cmp
jge
iret
in
mov
in
adc
or
ljmp
movsb
ljmp
dec
addr16
pop
or
pop
mov
cmp
inc
pop
adc
dec
add
or
int3
mov
aaa
in
xchg
outsl
inc
add
cmp
lcall
xchg
outsb
inc
sbb
add
movsl
dec
leave
mov
icebp
iret
test
pop
daa
imul
mov
int3
sbb
xor
flds
in
and
leave
jns
fiadds
movsl
shrb
into
frstor
es
fidivrs
jl
mov
shl
cmp
lds
xor
xlat
pop
cmp
rol
aam
dec
out
pusha
pop
add
test
adc
sub
push
es
inc
lahf
push
pop
mov
mov
fdivrs
daa
lret
jo
lahf
pop
and
mov
js
incl
nop
xchg
jmp
adc
adc
mov
mov
xchg
out
popf
mov
es
inc
jge
adc
add
push
pop
mov
call
xchg
movb
push
stc
fidivs
push
shll
fdiv
mov
fdivl
test
in
rol
sub
rol
cmp
out
xlat
ds
cmp
fadd
test
lds
jbe
and
sbb
es
fidivrs
sahf
xor
out
and
sbb
movb
fs
dec
nop
dec
pusha
push
or
sti
js
enter
mov
push
fwait
xchg
sub
fisttpll
jo
cmp
cmpl
fbstp
pop
xor
jg
das
scas
sub
out
adc
out
push
popf
mov
cwtl
mov
jp
mov
jle
mov
dec
je
fdivrl
push
pop
add
jo
mov
scas
out
push
sbb
pop
inc
xor
push
cmp
stc
jle
push
test
cwtl
mov
ds
push
roll
pop
fnstenv
incb
pop
push
shrb
sbb
xchg
sbb
roll
cmc
movsl
mov
xchg
in
and
int
addr16
scas
cltd
scas
adc
shll
inc
pop
adc
mov
or
sub
out
out
pop
dec
pop
cmp
cmp
test
outsb
inc
mov
gs
nop
iret
psubusw
add
pop
mov
mov
lods
cmp
sbb
sbb
bound
dec
adc
scas
mov
mov
sbbb
lcall
add
xor
and
push
fstpt
jp
bound
scas
jo
insb
test
adc
inc
ljmp
out
mov
decb
in
lahf
in
aad
aaa
mov
ss
call
stos
jl
cs
inc
cmc
jecxz
sbb
lock
lods
and
insl
pop
pop
arpl
inc
pusha
sahf
idivl
adc
dec
in
mov
jle
loope
push
fs
pop
mov
cmp
in
aam
test
xor
jbe
lcall
jecxz
lds
mov
in
dec
loop
aad
cmp
imul
subl
xchg
sub
dec
xchg
pop
rorb
adc
mov
push
stc
scas
and
sbb
imul
mov
jmp
lods
xor
pop
test
cmpsl
xchg
push
jg
popf
fisttpl
add
push
clc
les
cwtl
mov
jmp
sbb
les
xor
aaa
cmpsb
sub
and
add
adc
push
ja
mov
lahf
mov
sbb
sbb
adc
dec
into
push
pop
or
pushf
pusha
not
fldenv
or
cmp
fcompl
jge
pop
cmp
xor
adc
icebp
jg
xchg
inc
xchg
in
mov
xchg
xor
aas
sbb
mov
sub
stc
cmp
fsubs
std
imul
sbb
idivb
jmp
inc
xor
sub
pop
or
add
push
or
std
or
clc
nop
sbb
clc
cwtl
sbb
std
insb
test
outsb
in
push
iret
scas
hlt
sub
mov
scas
addr16
cmc
outsl
aam
clc
xor
in
xor
push
cmp
rorl
inc
sub
dec
adc
sahf
fidivl
ret
dec
pop
mov
pop
or
jb
in
lods
xor
adcl
mov
jne
movsl
jecxz
cmp
subb
pop
loope
ss
sti
iret
fs
mov
sbb
push
iret
call
add
ljmp
sbb
xor
es
inc
inc
mov
hlt
and
xorl
les
jne
and
imul
aad
mov
mov
out
into
int
imul
out
aaa
cld
pop
rorb
arpl
daa
mov
lret
add
testl
add
mov
cmp
sub
inc
call
cmpsb
jge
mov
fisubs
mov
test
and
cmp
xchg
inc
adc
subb
roll
jae
and
inc
mov
fsubr
pop
xchg
call
shlb
or
shl
data16
idivl
mov
jae
sbb
inc
out
push
jge
sbb
scas
push
test
hlt
cwtl
lds
movsb
nop
jg
cld
loop
insb
fcoms
out
mov
add
les
jne
xchg
cli
push
pop
inc
scas
icebp
jns
mov
ljmp
or
cmp
mov
sub
jmp
rcll
mov
push
addr16
or
jp
jo
xor
std
push
adc
sub
sub
push
gs
int3
add
adc
insl
aam
call
xchg
jl
pop
lret
push
jmp
in
and
jmp
mov
sub
mov
and
mov
lcall
mov
ret
neg
and
adc
mov
movsb
ds
adc
push
sbb
test
imul
cmpsl
cltd
insl
dec
shrb
sub
jg
or
out
xorb
in
or
jge
mov
jne
push
rorb
cmp
mov
mov
lcall
clc
mov
dec
and
sahf
sbb
sbb
or
mov
movsl
lcallw
add
test
xchg
or
xchg
cld
dec
and
push
mov
push
sub
call
dec
pop
out
add
popf
pop
repz
and
jmp
je
xchg
mov
jl
xor
xchg
and
shlb
jmp
mov
push
outsl
out
out
sub
popf
xor
push
and
mov
cmp
xor
inc
jge
in
outsb
mov
dec
std
jno
push
jecxz
test
sub
idivb
das
mov
push
das
or
cmp
insb
push
lds
arpl
jmp
movsb
xchg
mov
mov
xor
inc
das
test
xchg
pop
pop
das
out
std
into
add
clc
xchg
and
ret
in
and
adc
adc
in
ret
movsl
inc
or
in
iret
adc
ret
pop
sub
mov
pop
lods
loop
sub
js
imul
pusha
lahf
rclb
imul
mov
je
and
aas
in
lcall
xchg
inc
pop
aaa
inc
daa
test
jp
test
std
scas
loopne
dec
hlt
call
aaa
or
dec
jns
and
pop
clc
xchg
jne
sbbl
pushf
push
outsl
mov
inc
mov
adc
mulb
push
pushf
stos
push
outsb
mov
cmp
out
fs
push
mov
cld
out
loope
movsb
xor
push
aam
cld
cwtl
xchg
iret
lds
popa
cmp
lods
or
popf
lcall
rorb
outsb
push
cmp
jl
das
ja
jp
mov
sarb
fidivl
adc
pcmpgtw
dec
add
clc
or
or
fld1
lods
sub
pop
int3
push
mov
popw
mov
out
xchg
and
inc
cmc
or
cmp
add
ret
daa
js
xor
or
mov
jg
add
lds
fsubrs
or
aas
xchg
mov
cmpsl
xchg
int
push
xchg
xchg
arpl
mov
lds
sub
mov
jno
jecxz
loopne
mov
mov
mov
adc
loop
fwait
adc
shrb
sbb
rorl
jnp
sahf
pop
popf
out
sub
jge
cmp
and
sbb
pop
mov
lock
mov
shlb
or
out
xchg
jmp
dec
das
mov
mov
mov
pop
shrb
jge
movsb
push
ds
data16
test
mov
je
testl
and
ficoml
lock
and
jno
dec
jae
sub
cmp
jno
or
jge
fs
into
out
push
xchg
arpl
and
subl
fisubrs
rcl
mov
ret
ds
fildl
fisubrl
pop
mov
pop
xor
mov
mov
sbb
cmp
cld
jecxz
out
mov
dec
loope
pmullw
or
jp
sub
jno
inc
jns
xchg
dec
push
jnp
add
jle
ja
jno
mov
cli
inc
fidivrs
cwtl
push
mov
mov
test
jg
mov
aaa
dec
and
and
push
cmpsb
jl
call
scas
in
push
sub
inc
or
jle
orl
push
mov
loop
cmp
fildl
test
out
jns
push
push
xor
in
inc
out
xlat
jbe
popa
xor
data16
call
and
rorl
dec
pushw
sub
xchg
pop
xorl
jne
mov
bound
pop
popf
ljmp
enter
xlat
dec
ljmp
pop
xchg
cli
imul
std
int
insl
lods
push
mov
mov
dec
movsb
mov
xchg
stos
mov
inc
jp
daa
sub
push
arpl
push
subb
jae
mov
or
lcall
inc
fisttpll
sbb
push
mov
cmp
or
mov
movsl
xchg
push
mov
xchg
cli
gs
jnp
jo
cmp
mov
inc
cvtdq2ps
and
ret
cmp
mov
dec
xchg
or
dec
leave
xor
fsubrl
inc
mov
dec
add
test
nop
ds
mov
mov
out
or
push
gs
js
mov
mov
dec
das
adc
cmp
cwtl
xor
fsubrl
and
icebp
lahf
rol
movsb
jle
adc
std
xchg
mov
mov
jl
fcomp
loopne
fiaddl
out
sahf
sub
jne
pop
or
dec
in
dec
xchg
aad
jb
lds
jp
js
or
or
pop
cli
in
leave
jge
pop
jo
nop
mov
fidivs
mov
adc
mov
sub
or
cld
xchg
shlb
std
and
and
push
outsl
sbb
or
mov
icebp
pop
in
inc
fs
lret
inc
adc
adc
mov
inc
dec
gs
xor
xor
scas
popf
sub
int
das
jge
nop
in
xor
jge
dec
add
mov
adc
popf
stos
divl
mov
enter
inc
xor
fidivrl
or
jle
xchg
push
je
out
sbb
test
xor
and
roll
jg
inc
xchg
es
pop
inc
test
xlat
pop
ret
pop
into
xlat
push
mov
jp
repnz
dec
cmp
or
daa
fmuls
repnz
mov
cmpsb
push
scas
pop
int3
adc
inc
int3
push
push
cmp
push
jg
push
xchg
mov
jbe
data16
adc
je
dec
es
dec
scas
cmc
adc
adc
pushf
aad
cltd
sub
sbb
or
pusha
loop
lret
push
inc
pop
mov
lods
and
shll
add
lods
push
mov
js
pop
push
inc
sti
rclb
cmp
pop
into
pushf
jno
addl
sbb
jbe
pop
into
les
and
fwait
cmp
leave
jp
mov
adcl
cmp
lcall
fwait
add
cld
dec
sti
xchg
out
xchg
sub
fwait
mov
fwait
cmp
pop
pop
gs
lcall
pop
lods
and
sub
xorb
lods
imulb
lcall
lret
imul
cmp
pusha
rcrl
push
test
adc
mov
movsl
std
pop
fs
inc
test
or
xchg
les
xchg
int3
sbb
pop
inc
push
lock
adc
icebp
and
sub
hlt
push
sbb
ret
xor
std
lahf
nop
cld
xchg
rcrb
jle
scas
xor
ds
pop
test
mov
pushf
ror
jne
fcmovu
and
mov
mov
hlt
adc
aas
push
testl
push
scas
jns
popf
insl
imul
mov
xor
sbb
mov
inc
in
or
fsubs
sub
add
jnp
rorl
or
icebp
enter
add
push
xlat
push
ret
mov
jp
push
fsub
cs
inc
add
ret
bnd
pop
clc
xor
xor
outsb
mov
test
into
cltd
pop
addr16
push
stos
cs
cmp
int
loop
icebp
sub
sub
clc
fprem
daa
inc
push
cld
add
or
mov
xchg
mov
push
pop
nop
rolb
and
mov
out
mov
xorl
and
adc
cmp
mov
in
sbb
jmp
pop
xchg
cli
push
ret
or
add
shl
lds
cmp
dec
dec
fiadds
mov
lret
inc
inc
movsl
add
andb
jmp
scas
mov
xchg
xchg
xor
sub
mov
sbb
and
mov
or
pushf
cmp
mov
bound
inc
stos
dec
pop
sti
jge
fldenv
ret
mov
pop
lods
or
mov
gs
out
and
clc
push
cmp
mov
jp
xchg
jl
mov
pusha
std
pop
jg
xor
add
pop
dec
stc
cld
pop
shl
xchg
test
lds
cwtl
jmp
add
pop
dec
jbe
sbb
clc
push
push
sub
js
push
xor
pop
into
sbb
xor
push
fbld
mulb
mov
push
dec
ds
mov
or
addl
inc
xor
fsts
fnstcw
sub
mov
out
fwait
cltd
lds
pop
mov
ss
aam
outsl
scas
sub
lret
push
push
cmc
or
outsb
mov
inc
ds
in
mov
xor
call
ljmp
push
push
scas
imull
cmp
cmp
or
idiv
lea
pop
jne
push
out
cltd
sub
cli
push
inc
mov
push
dec
xchg
test
pushf
push
inc
jae
and
fcompl
or
syscall
ljmp
jmp
or
sub
jge
test
dec
lret
pop
adcl
jle
jmp
dec
out
pop
xchg
std
xor
cmp
push
imul
stos
loope
into
inc
pop
add
gs
sbb
push
sub
orl
dec
pop
sub
add
inc
dec
fwait
mov
imul
stc
iret
nop
cld
ja
jne
lret
negl
jmp
outsb
jle
or
xor
pop
in
pushf
pop
sbb
jo
ds
in
movsb
add
nop
mov
dec
sub
pop
jno
mov
push
ja
mov
pop
sub
xor
stos
xlat
in
jle
test
popa
jns
cmp
lods
push
int3
adc
out
dec
inc
push
sbb
cmp
and
add
xor
inc
dec
adc
pusha
aas
das
lret
cwtl
inc
and
jge
scas
insl
inc
les
jmp
xchg
dec
mov
jp
pop
pop
jne
xor
mov
imul
lret
inc
adc
push
mov
dec
dec
out
mov
pop
push
notl
inc
dec
or
call
sbb
add
xor
or
add
push
pop
sbb
mov
das
mov
xor
aaa
or
sub
jns
movsl
xor
and
enter
xchg
loop
aam
push
dec
sti
loop
pop
add
jne
sbb
cmp
idiv
jae
xchg
loop
sbb
into
mov
int
pop
cwtl
mov
xor
mov
xchg
xchg
pop
xor
dec
lods
dec
retw
aad
cmpl
jl
sub
xchg
push
data16
jecxz
dec
std
and
sti
mov
or
jo
fnstcw
jae
push
subl
or
pop
dec
or
outsb
add
das
cli
lret
sub
xchg
or
sub
and
cli
lds
lret
inc
and
popf
dec
mov
fwait
mov
sub
pop
dec
mov
ret
pop
sarb
or
push
stos
push
push
enter
ret
mov
test
sub
mov
pop
mov
sub
jbe
push
nop
leave
les
subb
add
sub
push
movsl
sub
cwtl
movsb
push
adc
pop
mov
push
push
add
fistl
mov
pop
sbb
popa
les
pop
pop
jl
cld
ret
test
sub
lahf
ds
add
and
pop
cs
mov
or
inc
movsb
jo
cwtl
and
dec
jle
popa
inc
mov
or
and
int3
pop
push
cwtl
ror
sbbb
and
jecxz
jg
jecxz
fcom
hlt
fsts
mov
sahf
sbb
out
out
pop
out
jbe
jae
sbb
testl
mov
call
xor
cmp
hlt
mov
andl
jmp
mov
add
xor
clc
lcall
std
insb
pop
or
arpl
jmp
lods
push
jg
daa
push
sbb
jl
cmc
call
out
ja
in
leave
adc
push
mov
dec
ss
imul
and
mov
test
xor
add
and
lods
xchg
push
insl
movsl
add
pop
into
mov
sbb
cltd
shrb
sbb
inc
push
adc
into
jle
and
mov
add
xchg
out
pop
and
out
jns
stos
xor
insb
add
dec
pop
das
xchg
leave
inc
mov
add
mov
cmc
adc
add
add
push
or
mov
xchg
sbb
test
pusha
mov
push
inc
ss
into
mov
jns
cmpsl
daa
push
add
les
enter
jmp
push
xchg
jl
push
cmp
mov
imul
pop
fwait
aas
sbb
xchg
pop
hlt
dec
xlat
pop
insb
cmp
lods
insb
dec
sub
and
aam
stos
cmp
cmpsl
inc
mov
xor
sub
lret
sub
push
xor
pop
stos
mov
mov
xchg
sub
jbe
jnp
jno
mov
xor
bound
push
dec
test
sbb
movsl
cmp
add
mov
pushf
in
sub
cmp
or
jmp
xchg
bound
lods
pop
out
jmp
shlb
cwtl
cmp
lcall
lock
gs
sub
popa
jge
sbbb
sbb
inc
xorb
adc
xor
pushf
or
hlt
or
sub
inc
into
and
push
xchg
and
push
xchg
jmp
inc
jne
int
gs
xchg
sub
mov
lcall
dec
jne
mov
adc
test
xchg
push
cmc
fs
sub
and
mov
or
jns
int
adc
or
aas
inc
aas
sub
xchg
lahf
or
xor
xor
adc
outsl
dec
outsb
pop
mov
sarb
jge
jne
mov
lret
or
mull
pop
push
jne
push
stos
adcl
sub
and
push
loope
dec
push
imul
testb
std
movsl
inc
add
loop
stos
xlat
adc
test
push
mov
fmull
mov
fs
cmp
jae
xchg
loop
xchg
popa
sbb
imulb
add
shll
push
lods
push
mov
jecxz
rcr
push
sub
subl
lods
xor
dec
jp
fwait
push
sbb
data16
movsl
mov
pop
mov
addr16
fs
or
rcr
inc
test
enter
pop
push
sti
push
addl
sbb
std
push
gs
lea
in
adc
mulb
xchg
sbb
add
pop
cmpsl
push
fidivs
push
popa
push
jp
xchg
jp
cmp
pop
ret
jmp
clc
mov
push
fbld
mov
addr16
ds
arpl
jl
test
xchg
pop
xor
or
mov
rcl
sbb
cld
jmp
dec
jmp
fwait
push
push
and
imul
sub
xor
dec
fidivrl
fiadds
push
rorb
xor
pop
ret
les
clc
xlat
cmp
fnstsw
mov
fcomi
xchg
roll
stos
mov
lea
imul
mov
rcrb
lret
out
push
push
push
jno
mov
leave
sub
pop
adc
scas
xor
lock
fdivs
daa
or
jle
shlb
ds
popa
gs
fldl
jle
dec
sti
test
mov
pusha
pop
loopne
cmpsb
outsb
mov
clc
fmull
push
adc
push
dec
sub
bound
jbe
or
mov
xor
pop
shlb
mov
es
pop
cmpsl
leave
shlb
cmp
push
movsl
jl
dec
lock
cmp
and
mov
mov
cmpsb
jge
into
ljmp
or
leave
ret
les
mov
jle
adc
sbb
fildl
fnstsw
jae
inc
insb
cmp
jne
mul
mov
je
jle
adcb
mov
and
xchg
out
and
cmp
gs
mov
popa
sbb
aaa
push
lock
mov
xchg
push
popl
dec
mov
pop
jo
adc
test
test
sbb
in
mov
outsl
lea
cmc
mov
subb
fists
mov
mov
lds
dec
movsb
mov
into
push
imul
dec
pop
in
push
out
adc
stos
add
xchg
sub
xchg
and
cmp
rclb
cli
cltd
in
jnp
jge
gs
in
jne
inc
pop
gs
popa
adc
ret
outsl
idiv
nop
or
je
ja
adc
sub
xor
mov
xchg
mov
xor
jmp
js
addl
int
test
in
test
mov
inc
dec
add
cmp
out
arpl
adc
rolb
xchg
xchg
pop
adc
lret
adc
clc
push
inc
sub
mov
lret
mov
or
cmp
inc
jae
into
jge
inc
inc
movsl
scas
adc
clc
push
repnz
sarb
cmpsl
sub
sbb
inc
mov
xchg
stos
test
or
mov
inc
daa
mov
addr16
fdivp
ret
in
pcmpeqw
lcall
jns
aad
cs
movsl
test
push
push
and
ret
inc
mov
stos
pusha
sbbl
jecxz
sahf
push
adc
xor
adc
scas
outsb
sub
jno
xchg
inc
xchg
push
lock
jg
push
movsb
mov
mov
sbb
push
test
addl
mov
js
sarb
or
test
std
sbb
enter
adc
imul
cld
cwtl
and
mov
aam
andl
jno
daa
jo
cmc
push
rol
cld
mov
cld
test
outsl
scas
bound
daa
test
aaa
ss
adc
lds
adc
mov
fs
gs
mov
repnz
mov
cmpsb
pop
insb
fs
add
mov
sbb
mov
cmpsb
gs
push
inc
add
mov
ss
loopne
into
cmpb
cltd
divb
mov
fs
out
cmp
sub
sbb
jp
movsb
cwtl
std
fisttps
ret
sbb
sub
and
stos
pushf
pop
insl
das
pop
mov
test
sahf
loope
arpl
mov
mov
sbb
test
repnz
xor
inc
mov
mov
jne
lcall
add
insb
cli
scas
popl
mov
mov
sbb
mov
jo
shrl
cltd
push
enter
cwtl
notl
inc
add
cmp
or
lods
push
sbb
mov
es
inc
sbb
push
xchg
dec
ret
xchg
scas
shl
jne
xchg
mov
mov
repnz
sub
jp
sbb
fwait
out
lea
pop
jmp
push
dec
push
lcall
daa
bound
pop
push
call
sbb
jno
pop
xor
int
mov
enter
js
sti
call
sbb
mov
mov
loope
popf
cmp
sub
add
ljmp
pusha
and
mov
dec
rorb
or
mov
aas
out
or
cmp
fnsave
nop
sbb
jle
adcl
mov
xchg
shl
xor
xchg
xor
sbbl
fistps
xchg
je
bound
pop
ja
in
test
xor
ljmp
and
mov
fsts
dec
inc
xchg
jo
pop
js
xor
mov
icebp
dec
ret
adcb
adc
pusha
mov
add
xor
xor
fistl
or
movsb
test
xchg
int
add
pushf
addr16
xor
xor
in
out
sbb
adc
jo
es
push
es
out
mov
or
adc
sub
or
jecxz
out
jmp
mov
push
push
jne
jae
cmp
cmp
mov
fisubl
rcr
cwtl
movsb
cmc
js
and
icebp
fists
mov
jne
aaa
mov
iret
pop
test
xchg
sahf
jo
loopne
or
js
cmc
xor
test
jl
scas
inc
cld
adc
orb
mov
lcall
aad
cltd
adc
mov
aam
rcrl
mov
js
gs
pop
pop
sbbl
rolb
sub
push
insl
ja
mov
sbb
push
sbb
push
inc
add
mov
das
mov
xchg
mov
mov
jne
xchg
dec
imul
adc
jecxz
dec
pop
and
lock
cld
mov
out
pushf
cmp
into
std
xchg
nop
push
xor
fistpll
fwait
jne
pop
add
xor
mov
jns
dec
sbb
cmp
pop
xlat
xchg
bound
std
std
addr16
and
bound
adcb
mov
test
mov
push
lret
or
mov
movsl
or
dec
lods
push
das
aas
sub
or
fisttps
push
jne
ret
shll
xchg
lds
call
iret
xor
les
push
sub
sub
xor
fwait
sbb
dec
inc
jge
jbe
push
add
adc
and
xor
stc
les
sub
add
and
andl
out
bound
sbb
push
int3
cwtl
inc
add
cli
add
mov
sahf
push
and
cmp
jae
jbe
call
aaa
mov
lods
push
adc
cmp
divb
or
jg
insl
push
xchg
mov
add
addr16
adc
ret
add
cmp
and
cs
xabort
mov
push
imul
and
push
sbb
das
int
push
sbb
mov
rcrl
adc
xchg
js
outsl
cmp
icebp
inc
aad
pop
xchg
rclb
or
cmp
push
or
cmp
das
out
cmp
in
ja
or
enter
loop
sbb
les
ret
cmpsb
or
lds
inc
pop
fwait
call
push
push
rcll
out
mov
xchg
push
leave
add
jbe
cmp
mov
in
jg
or
jmp
jp
ss
std
cmp
fcmovnu
jmp
jg
int
in
mov
jno
aad
inc
mov
push
and
scas
into
adc
or
lock
and
lock
mov
fdivrs
push
in
mov
adc
dec
hlt
cmp
mov
and
aas
mov
inc
adc
js
add
mov
sub
test
cmc
pushf
xor
or
ja
mov
bound
pushf
fidivl
cmp
mov
lds
loopne
xchg
push
in
in
push
push
out
pusha
mov
pop
xchg
mov
daa
push
in
nop
mov
pushf
add
sub
or
mov
pushf
and
pop
andl
mov
icebp
push
mov
xor
xor
sub
fwait
ja
sbb
jno
push
pshufw
mov
lods
push
jl
and
pop
cmp
pop
mov
add
adc
jbe
and
scas
or
cmove
pop
mov
dec
mov
dec
iret
mov
dec
adc
ja
int
and
idiv
push
in
inc
daa
and
pop
xor
jp
add
sub
les
test
jnp
je
in
push
mov
subl
or
jne
pop
int3
outsb
cmpl
push
in
mov
fs
mov
mov
cs
push
xor
inc
mov
xchg
xchg
mov
pop
das
push
fwait
add
or
or
movsl
or
sub
xchg
js
xchg
pop
outsl
mov
jmp
pushf
rolb
aad
cmp
adc
scas
jmp
cmp
push
pop
sbb
add
push
addb
fs
popf
xor
xlat
adc
in
xor
call
mov
out
out
sbb
test
hlt
test
insl
sbbl
sub
mov
cmp
or
gs
imul
and
add
loope
cmp
xchg
cmc
mov
aas
call
loopne
dec
stos
push
sub
push
add
nop
gs
xor
fdivs
sbb
scas
je
lcall
xlat
lret
mov
pushf
lds
cwtl
mov
jg
add
rclb
gs
sub
out
lods
mov
dec
shlb
les
xor
loopne
cmp
roll
test
and
sti
or
inc
rcll
xchg
int3
into
dec
xor
and
sub
adc
lret
rol
stos
mov
sbb
jne
addr16
sbb
push
in
push
sbb
shl
adc
std
push
or
xchg
les
adc
sbb
jae
iret
push
xchg
mulb
js
into
mov
movsb
pop
fwait
arpl
movl
js
test
xchg
inc
mov
movsb
adc
jge
push
lcall
pop
xor
add
inc
ljmp
test
inc
push
xchg
ror
icebp
mov
push
cmp
sub
mov
jnp
push
adc
arpl
sbb
cmpsb
or
push
test
jo
fwait
enter
xchg
gs
das
mov
pusha
aam
test
jo
sub
pop
sub
in
jmp
jl
movsb
idivl
orl
into
add
das
addr16
test
arpl
pop
jge
divb
ss
cmc
sub
push
pop
mov
sub
or
dec
mov
cmp
mov
fbld
das
lret
loop
jnp
cmp
cmpsl
testl
sub
shlb
dec
fistps
lods
jp
mov
lods
lds
scas
xchg
mov
test
and
popa
mov
push
cmc
xorb
cmp
test
repnz
clc
mov
std
outsb
pop
out
shll
cmp
subl
or
xchg
inc
adc
push
sbb
push
or
lock
push
and
jne
icebp
lcall
sbb
mov
or
mov
inc
sbb
xor
popa
fdivl
pusha
or
in
popa
and
sbb
xchg
gs
jbe
loop
data16
es
xor
push
push
mov
mov
test
sub
dec
mov
ret
popf
les
add
sbb
shll
orl
xchg
rol
aam
cmp
jp
dec
adc
jg
test
dec
fcompl
ret
inc
aas
adc
cli
inc
xor
call
movsb
mov
xor
jge
fwait
sarb
or
xchg
xor
in
or
andl
mov
jno
mov
int3
mov
sbb
jle
in
mov
hlt
push
in
cmp
aaa
call
lods
dec
cmpsb
stc
in
pop
rcrb
mov
jp
out
xchg
mov
cli
dec
mov
sbb
sarl
sub
mov
xchg
repnz
pop
adc
jl
ja
xchg
jne
xor
clc
fwait
xor
pop
sahf
enter
imul
ss
fstpt
cmp
hlt
cmp
mov
sbb
addb
jle
push
sbb
pop
jl
into
fisubs
mov
imul
mov
pop
ficoms
mov
mov
pop
and
xlat
or
jns
and
repz
sub
pop
daa
mov
sub
xchg
adc
pop
stos
je
inc
inc
and
test
clc
out
loopne
jae
xchg
mov
insl
add
and
ret
dec
mov
mov
imul
cmpb
fstpt
jnp
jge
cmc
and
pop
call
lret
test
push
cmpsb
cmp
fstps
add
sbb
mov
out
or
mov
into
incb
adc
movsl
idivl
js
inc
sbb
test
inc
mov
fsubr
lret
insl
add
out
xchg
mov
filds
xchg
outsl
mov
aad
fs
push
mov
pushf
pop
push
pop
sbb
lahf
fisubs
jge
fcompl
xchg
dec
xchg
out
std
mov
cmp
mov
jnp
dec
pop
insb
hlt
fisttpl
mov
imul
push
mov
add
das
jp
ret
js
jne
data16
or
jl
jae
enter
ficoml
inc
fsubp
std
jle
mov
mov
inc
mov
add
adc
jne
cmp
mov
jae
lcall
les
rolb
adc
clc
or
inc
sti
nop
stos
mov
jns
stc
loop
lds
repz
jnp
push
mov
mov
jo
movsl
pop
test
jp
mov
pop
pop
inc
inc
or
fs
icebp
mov
fldl
pop
cld
in
hlt
fisttpll
rcrl
call
dec
gs
les
dec
cmp
outsl
or
pop
push
iret
and
idiv
sbb
inc
xor
shlb
mov
sub
lea
loop
xor
notb
adc
imul
jb
mov
aad
sub
cs
gs
test
jae
ljmp
lock
sub
out
int
aas
stos
push
cmpsl
pop
jl
es
pop
adc
mov
repz
aas
push
pusha
rolb
movb
or
cli
imul
xchg
cs
pop
cmp
mov
stos
loop
outsl
int
push
dec
cmp
cwtl
xor
rol
stc
push
inc
test
jl
adc
push
shlb
rcr
ja
mov
gs
fiaddl
pop
in
lock
inc
xchg
jle
insb
cmp
ss
push
and
cwtl
jge
sub
lahf
mov
outsl
dec
mov
mov
add
popa
gs
push
das
sub
aad
negb
cmovge
push
clc
and
cwtl
nop
faddl
push
mov
jmp
popa
nop
in
enter
jnp
clc
jnp
test
pop
imul
in
jmp
fwait
lock
inc
mov
mov
push
ficompl
push
adc
cld
loop
cs
out
std
sub
sarb
pusha
sbb
sbb
inc
das
and
popa
cs
test
dec
or
mov
or
jmp
inc
dec
mov
gs
out
xchg
jns
mov
in
sbbl
or
loop
in
cli
xor
inc
test
mov
jp
arpl
and
js
jae
nop
mov
pop
into
int
dec
pop
cmc
xchg
pushf
sbb
inc
fucomi
inc
or
add
lret
pushf
inc
xchg
inc
imul
out
adc
ds
or
sub
iret
or
stc
cwtl
add
rorl
idivl
sub
loop
sbb
sahf
bound
outsl
bound
idiv
movsl
xor
lds
out
adc
mov
mov
int3
mov
mov
push
xor
mov
ljmp
sbb
sub
sub
push
addl
xchg
sbb
push
jns
rclb
out
mov
in
pop
push
dec
rorl
fwait
mov
mov
je
in
dec
js
lret
mov
movsl
push
mov
insl
loopne
sahf
mov
lahf
cmpsl
popa
or
inc
mov
xchg
cmpsl
shll
push
cmc
cli
sarb
out
jnp
js
in
icebp
shll
or
add
adc
lahf
incb
pop
pop
xchg
cmc
push
xor
mov
mov
test
and
mov
mov
mov
add
xlat
insl
into
rcll
jne
bound
sarl
out
cltd
push
mov
xor
cs
push
push
pushf
nop
sahf
ss
inc
insl
sbb
mov
arpl
pop
and
xchg
pop
jl
jb
insl
push
aad
mov
jbe
pop
push
lds
mov
aas
stc
pop
fbstp
popf
stos
xor
push
xor
orps
mov
cli
jnp
movsl
test
push
push
int
lcall
out
inc
js
cs
cmp
mov
push
mov
aas
xchg
pop
cmp
mov
mov
stc
aaa
stc
fsubs
add
aaa
and
repnz
adc
xor
add
xchg
pop
test
mov
cltd
loop
mov
shlb
pop
orb
dec
xor
stos
cmp
sub
and
das
push
int
jecxz
mov
mov
lret
cmp
pop
mov
cmp
and
xor
lods
lods
pop
mov
xorl
ss
inc
daa
loop
fcmove
mov
movsb
out
dec
mov
negb
imul
xor
sahf
lds
cwtl
movsl
and
xor
das
rcrb
pop
mov
xchg
adc
dec
add
scas
and
add
pop
lahf
mov
mov
mov
xchg
mul
and
sbb
inc
aas
jae
sub
jae
adc
jl
push
testl
xor
ret
lret
jnp
dec
pop
imulb
push
adc
jl
aam
mov
aaa
int
std
ds
or
aas
cmc
fdivs
xor
cmc
stos
xor
jne
repz
mov
mov
stc
lret
adc
jg
xor
daa
sbb
xor
xchg
gs
out
mov
mov
cmp
js
and
push
push
test
movl
daa
bound
imul
test
xchg
xor
xchg
mov
adc
pushf
out
dec
jl
mov
inc
call
mov
jb
inc
idiv
lcall
js
fsub
outsb
cmp
repnz
pushf
xor
das
add
lods
pop
push
cmp
pushf
clc
fisubs
daa
jae
pop
out
xchg
movl
insl
adc
jnp
out
inc
clc
jae
inc
add
dec
sbb
dec
mov
inc
test
xchg
or
aad
loop
pop
repz
ja
pop
sbb
and
stc
ret
inc
xor
and
jge
cmp
shll
xchg
shl
std
adc
shlb
mov
mov
lds
xchg
std
sub
mov
fbstp
addb
xor
mov
call
cli
cmp
dec
jne
aam
add
clc
mov
push
ja
mov
sbb
xor
jbe
loopne
movsb
pop
repz
cmc
inc
ret
or
xchg
cltd
xor
cmpsl
test
jne
dec
popf
xchg
ss
nop
push
dec
pop
push
mov
cli
inc
insb
rorb
jns
dec
loope
xor
shrl
aaa
mov
jns
leave
divb
cli
mov
or
jns
mov
rcll
mov
xchg
popa
mov
lods
loopne
stc
jno
or
mov
dec
xchg
fisubs
mov
mov
out
or
and
pop
and
xchg
fcmovu
cld
xorb
jns
sub
and
push
jno
xchg
sahf
adcl
or
test
dec
inc
rcll
fcoms
sub
fs
inc
pop
iret
out
es
decl
mov
shrl
add
and
les
dec
aad
ret
mov
jo
sarl
adcb
addb
aas
leave
sub
mov
inc
enter
mov
das
mov
fwait
push
inc
push
sti
jbe
jb
movsb
push
das
mov
ljmp
bound
mov
sub
lret
xabort
lret
fcmovnbe
dec
test
fimull
aad
imul
sub
pop
sti
mov
lcall
and
push
add
sub
add
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
jo
test
add
push
jge
cwtl
pop
and
xchg
or
add
jmp
and
push
call
into
clc
dec
adc
ret
pushf
cmp
jge
adc
fsubl
filds
xlat
rclb
gs
imul
push
inc
stos
in
and
jb
jo
addl
ret
pop
push
out
push
call
inc
cmp
push
mov
scas
push
xchg
addr16
adc
mov
inc
stos
mov
fstp
scas
int
notl
push
cli
ja
mov
cmp
call
in
cmp
clc
push
push
mov
mov
sbb
or
pop
je
mov
and
mov
jo
and
ds
inc
sbb
sbb
mov
je
pop
xchg
fisttps
pop
and
aad
jmp
rclb
or
add
out
rcrb
sub
mov
fcmovb
inc
fcomps
or
push
inc
mov
cmpl
mov
or
xchg
adc
arpl
fsubl
es
ret
push
add
dec
inc
jb
add
mov
movl
ret
mov
inc
mov
push
add
jecxz
daa
sub
add
mov
mov
stos
aaa
andps
ror
invd
dec
cmp
add
and
bound
mov
mov
jb
rcrb
cmp
sub
aas
popa
jmp
adc
test
and
pop
stos
jmp
jp
and
jle
jl
or
jl
adc
pop
cmpsb
pusha
dec
sbb
push
push
xor
testb
mov
and
sbb
test
jae
outsb
cmpsb
sarb
subb
ret
push
mov
push
pop
pusha
mov
xor
and
aaa
add
jne
mov
out
or
xor
loopne
pop
rorl
roll
add
add
push
and
jne
mov
mov
add
adc
movb
test
xor
jns
mov
add
lret
push
call
movsl
imul
mov
and
xor
add
mov
push
adc
dec
rolb
out
add
xor
cmpsl
lret
lock
je
add
fcoms
cmpb
jne
and
je
add
cmp
mov
jg
shl
sub
fadds
pop
test
je
mov
dec
add
ret
sub
pusha
int3
push
pop
pop
pop
mov
fsub
push
cmp
add
adc
orb
je
or
and
adc
jbe
sub
jp
inc
adc
jp
push
jmp
and
clc
int
or
jge
sbbl
add
inc
rep
jmp
pop
push
clc
pop
insl
enter
push
hlt
test
dec
shll
lock
cmp
loopne
jb
shrb
fisttpl
sti
lock
or
ja
jmp
xchg
and
cli
or
or
pop
dec
ret
or
or
or
aaa
and
test
pop
lock
add
mov
shlb
cltd
stos
es
pop
cmp
cmp
jb
mov
stos
cmp
mov
mov
cmova
pop
cli
dec
jno
push
mov
sub
jbe
add
pop
push
gs
std
pop
jae
es
pop
ljmp
ja
xchg
test
cmp
loop
add
sub
adc
test
test
jmp
pop
les
add
andb
push
les
adc
jo
xlat
rcrb
in
call
pop
push
inc
out
cmpsb
sbb
lret
xor
cmpb
pop
jbe
movups
icebp
cmp
inc
xchg
cs
adc
add
in
nop
push
cmpb
add
xchg
inc
push
orl
divl
repnz
or
mov
or
out
iret
push
in
or
mov
pop
mov
out
dec
test
inc
pop
xorl
push
repnz
adc
jae
or
js
or
sbb
seto
dec
or
jle
xor
test
adc
jne
mov
aas
out
or
out
into
xor
addr16
in
adc
inc
xor
sbb
pushf
mov
les
or
stos
stos
push
mov
adc
and
dec
pusha
pop
sub
push
cmp
daa
mov
mov
xchg
inc
inc
jmp
into
idivl
mov
add
fsub
mov
jmp
addr16
std
adc
cmpb
xchg
fiaddl
dec
filds
or
lcall
popa
pop
enter
inc
push
inc
add
sub
cli
enter
pop
hlt
add
or
mov
popa
jbe
ljmp
add
jae
rcl
es
icebp
pop
sub
adc
adc
xor
and
add
clc
lods
bnd
xchg
add
rclb
in
fidivl
shrb
pop
mov
push
pop
add
bound
push
cmpsl
dec
nopl
loop
sbb
or
sub
test
add
outsb
mov
js
mov
lret
adcb
pop
dec
pop
add
xchg
cmp
cmp
int3
or
imul
sbb
punpckhwd
cmp
jmp
mov
js
add
adc
test
inc
imul
cld
pushf
fs
xor
add
sbb
mov
testw
arpl
mov
push
pop
pusha
and
fsubp
push
in
push
fnstenv
call
aam
dec
sbb
mov
adc
and
mov
mov
mov
jno
orb
pop
jae
mov
jge
xchg
inc
add
and
cmp
mov
add
inc
inc
outsb
jo
add
pop
out
dec
add
shll
imul
inc
test
push
lret
ficomps
mov
sbbl
int3
xchg
push
stc
cltd
jl
sbb
mov
xchg
push
roll
inc
cld
push
or
sub
sub
or
int
jle
fidivs
out
addl
fldl
jo
jne
outsb
into
pushf
je
cmp
iret
imul
insl
fmuls
fimull
adc
loop
nop
push
fcoml
outsl
enter
xchg
push
cmp
pop
shr
movsl
add
inc
pusha
push
dec
push
je
add
cmpsb
movsb
add
xor
ret
xchg
cmp
mov
sbb
sub
or
or
cmp
mov
add
insl
add
push
dec
fnstsw
and
add
jecxz
mov
iret
pushf
cmp
ret
jns
fucomi
or
jmp
mov
and
xor
add
gs
jne
repz
adc
push
and
fisttpl
jp
rcl
enter
rcr
xchg
xchg
add
xchg
mov
or
pop
nop
xorl
adc
test
faddp
fsub
and
outsb
jns
sbb
jp
sbb
xor
and
ftst
inc
pop
push
pop
xor
mov
sbb
loopne
leave
rclb
dec
cmp
shlb
mov
stos
lret
out
pop
mov
pushf
data16
pop
aad
push
out
lock
inc
test
and
rclb
int3
mov
sbb
cmc
je
jae
aas
imul
imul
loop
add
xchg
scas
xchg
pop
mov
sbb
mov
mov
xor
mov
sahf
lods
clc
pop
ret
add
pushf
aaa
jns
add
ret
adc
or
movsb
sub
leave
sbb
adc
mov
xorb
cmpb
adc
out
lods
adc
aam
in
mov
jg
jle
add
les
and
xchg
adc
mov
mov
add
sbb
cmp
mov
add
ret
lea
pop
jno
outsl
xchg
in
out
push
subb
pop
das
arpl
je
and
xor
negb
sbb
fnstenv
and
add
add
and
mov
lea
roll
jns
mov
xor
cmp
pop
fwait
pop
pmaxub
daa
sarb
push
prefetch
cld
jae
in
adc
hlt
xor
add
jmp
outsl
jb
add
inc
testb
repz
xchg
dec
test
adcb
add
xchg
sub
push
xlat
je
push
jmp
and
cmp
push
fiaddl
sbb
fsubs
aam
adc
cld
repnz
cwtl
ja
or
or
xorb
cmc
outsl
in
pop
adc
scas
jnp
cmp
dec
push
sbb
jno
add
pop
clc
addr16
xor
or
mov
add
mov
test
dec
add
mov
jns
or
bound
rcl
sub
and
or
xlat
lods
pop
sub
pop
out
add
in
popa
adc
inc
shlb
cltd
xchg
sbb
ljmp
clc
push
mov
push
push
mov
jl
adc
jo
cld
jb
int
add
or
mov
jmp
mov
inc
jns
adc
iret
lea
int
xor
in
ljmp
add
sahf
jno
pop
pop
call
pop
subb
sub
mov
pusha
iret
test
inc
test
and
shlb
aam
into
pop
int3
xor
cs
enter
inc
std
aam
dec
rolb
mov
pop
jo
rclb
xchg
es
xor
addb
sbb
arpl
add
scas
lret
cmp
push
mov
push
cmp
test
mov
mov
out
add
pop
out
pop
xchg
rcrl
push
push
mov
loopne
inc
xchg
setne
cwtl
pop
mov
push
mov
fiaddl
pop
xchg
outsb
ja
or
out
and
icebp
js
dec
ror
add
pop
ffreep
mov
iret
or
cld
pop
mov
jmp
clc
outsb
mov
add
xor
dec
mov
sti
dec
pop
sub
inc
add
or
xor
jp
rcr
sbb
jle
sbb
inc
in
adc
pop
jl
push
aam
dec
pop
xor
pop
jae
pop
push
imul
push
test
cmp
adc
push
or
dec
cmp
es
fs
add
rorl
popa
in
andl
shll
faddl
sbb
cld
push
mov
in
add
xchg
mov
mov
or
jmp
fmull
roll
rcrb
cmp
nop
add
outsb
add
pop
out
arpl
or
add
movsb
adc
insb
shlb
sqrtps
insl
dec
pop
lock
out
pushf
add
shlb
jne
mov
xlat
add
push
adc
inc
sub
loopne
rol
adc
jle
or
xchg
fucomip
sub
add
adc
pop
adcb
addb
fisttpll
cwtl
inc
xchg
loopne
loop
js
push
inc
fdiv
divb
cmp
outsl
pop
insb
sub
mov
int
or
and
xor
inc
hlt
jne
push
shl
out
imul
cmp
add
movsb
popa
sbb
add
into
pop
pop
mov
lret
mov
pop
in
and
sbb
mov
xchg
aam
mov
je
mov
imul
and
xor
push
mov
and
testl
pop
callw
mov
add
scas
aam
xchg
mov
jno
add
fwait
xor
fstl
mov
imul
adc
mov
cmc
mov
xchg
xor
xchg
add
fnstcw
add
and
xchg
int3
cmp
push
mov
inc
shl
icebp
nop
shlb
or
adc
test
je
sbb
sbb
dec
rcll
lcall
add
and
lahf
and
push
js
je
rcll
xor
mov
pushf
cltd
or
test
pushf
jg
int3
cmp
data16
xchg
fdivrl
and
lcall
test
add
pop
mov
add
pop
int3
add
les
inc
mov
push
jne
test
sbb
je
pusha
pop
inc
mov
ret
aam
rolb
adc
out
push
dec
pop
add
lret
or
jns
fiaddl
sbb
adc
mov
add
dec
pop
gs
test
add
dec
addb
add
cltd
js
cmp
ljmp
je
push
enter
xor
loope
jnp
xor
inc
rorb
lret
pop
push
push
sub
dec
mov
inc
lret
add
add
add
test
lret
rcr
lods
mov
test
cmp
cmp
loopne
outsl
mov
shrb
cmp
and
jbe
cmpsb
pop
pop
pop
add
push
hlt
or
cmpb
loopne
mov
loope
inc
call
inc
cmpsb
add
lds
cmpb
jl
adc
add
ret
out
dec
das
dec
gs
adc
jne
cwtl
push
inc
cli
add
pop
roll
lock
xor
mov
jns
les
inc
pusha
or
dec
xchg
movsb
cmpsb
roll
sti
cmp
aas
cmp
out
and
xor
inc
xchg
xchg
shll
inc
call
dec
inc
xchg
popa
cmc
mov
outsb
icebp
add
loopne
shll
push
lds
mov
and
hlt
fwait
ret
faddp
inc
cmp
add
in
je
adc
add
xor
xchg
aad
inc
add
call
hlt
pop
cmpb
add
cmc
xchg
out
sbb
push
adc
or
test
pop
push
xor
scas
test
and
push
pop
add
ret
add
add
xchg
lods
mov
jbe
ret
popa
adc
inc
and
test
cmp
loope
popa
jo
and
add
xor
inc
pusha
pusha
jno
add
xor
enter
jo
sbb
jo
adcb
loope
jne
popa
cmp
nop
xor
xchg
mov
mov
add
aaa
nop
mov
pop
jmp
orb
add
inc
sar
sbb
lcall
mov
push
push
sub
sbb
push
jp
mov
mov
outsb
jl
lret
sbb
xchg
push
add
or
clc
addr16
cltd
add
adcl
adc
gs
dec
sahf
enter
push
dec
or
push
shlb
push
outsl
and
inc
jo
adc
movsb
dec
add
fisubrs
lds
cmc
or
add
push
stos
lock
xor
adc
fs
clc
in
inc
jo
add
movsl
or
in
cmp
mov
ja
or
cld
and
adcb
popl
xchg
mov
and
pop
hlt
add
fiadds
cld
add
es
mov
cmp
push
fs
jo
dec
add
cmp
inc
dec
pop
cmp
xchg
pop
je
mov
ret
repz
jns
jl
mov
popa
sti
mov
dec
or
and
mov
cli
fildll
sub
push
hlt
pop
dec
add
inc
outsb
das
xchg
pushf
out
cmp
stc
int3
rcrl
lods
cwtl
inc
jnp
jmp
inc
pop
and
add
dec
insb
lret
das
nop
add
adc
sbb
es
add
or
outsl
jns
lock
inc
jo
or
push
inc
arpl
fwait
pop
stos
cwtl
sbbl
cli
pop
sbb
lds
cmp
push
push
data16
add
outsb
and
sahf
cmp
cli
add
ret
js
imul
and
call
pusha
ja
lds
jmp
mov
mov
std
es
sbb
and
pop
rolb
dec
outsl
xor
ss
mov
mov
imul
lahf
pusha
in
xchg
stc
in
and
testb
pop
jg
and
jge
add
xor
push
pop
popa
dec
xor
test
and
push
cmp
out
mov
popl
in
rolb
adc
mov
mov
mov
mov
ret
fisubl
or
add
cmp
negl
jne
lcall
mov
mov
and
mov
testb
js
xchg
dec
sarb
mov
lea
inc
sbb
cld
or
mov
scas
into
inc
scas
movsb
repz
sbb
arpl
pop
shl
xchg
add
xor
cmp
shlb
and
push
push
xor
mov
fwait
inc
push
mov
js
shlb
ja
sbb
inc
mov
in
jae
sbb
fsubrl
fwait
aad
inc
mov
enter
sub
inc
inc
xor
inc
sbb
arpl
gs
adc
and
mov
xor
mov
cmp
dec
in
test
imul
adc
pop
ret
fwait
ret
adc
cmp
jae
adc
adc
in
cmc
adc
add
pop
ret
repnz
scas
cmp
aas
dec
jae
inc
mov
roll
lcall
dec
add
ret
sbb
fcompl
adcl
pop
cld
pop
or
aam
jo
xchg
into
in
pushf
scas
bound
inc
and
mov
lds
leave
dec
dec
xor
jle
push
rolb
xor
sbb
inc
shll
sub
into
das
push
xlat
movsb
and
add
movb
repz
inc
xchg
push
mov
pusha
lock
or
pusha
add
xchg
outsl
jo
push
sub
xor
add
add
enter
dec
lret
or
stc
fcmovnb
mov
inc
hlt
or
dec
inc
in
dec
jmp
pusha
jmp
mov
in
add
jns
and
add
and
in
sbbl
jo
je
test
aam
xor
leave
out
xlat
mov
and
andl
inc
ljmp
cmp
mov
sub
pop
cmp
nop
push
inc
les
mov
add
mov
mov
fiaddl
rolb
and
nop
cli
into
enter
jae
push
and
and
add
add
inc
xlat
xchg
sti
xlat
and
stos
cltd
xor
jecxz
cs
or
mov
add
jo
mov
dec
inc
ljmp
rol
mov
sub
out
and
filds
sbb
cwtl
repnz
xor
loopne
add
nop
outsb
xor
sub
rclb
adc
loopne
cld
fmull
loop
movsl
sbb
adc
addr16
fsubrs
daa
add
sbb
mov
mov
nop
lret
sub
jb
mov
mov
scas
rclb
jp
hlt
or
sub
roll
pop
mov
and
dec
mov
and
ja
inc
aas
pop
and
pop
shlb
xor
fcoml
cmp
dec
xor
inc
sbb
andl
xor
mov
imul
fldl
cmp
xchg
add
pop
clc
mov
popa
xor
test
iret
loop
leave
sub
js
pushf
cmp
inc
leave
cmp
xor
push
add
fsubr
adc
lahf
and
mov
cli
mov
add
push
jg
add
test
or
sub
ja
arpl
inc
cmc
push
add
pusha
and
push
cli
lea
xor
mov
or
js
or
leave
lods
addb
adcb
rol
cmp
stc
lds
xchg
cwtl
test
jo
clc
cmp
sub
insb
into
cli
lods
inc
hlt
cmp
cmp
shl
and
inc
mov
jae
lods
sti
or
fildl
scas
cmpsl
inc
loopne
lcall
adc
sbb
add
add
movsb
and
add
loope
push
aaa
out
test
sbb
add
fmuls
test
or
adc
sub
mov
or
or
shlb
xor
cli
int
daa
mov
xchg
addl
test
cmp
cld
xchg
cmp
add
xor
nop
ljmp
xchg
pushf
push
push
mov
and
cltd
xor
pop
fdivs
pop
xor
mov
inc
add
push
arpl
imul
test
jae
jbe
test
sub
pop
push
mov
ficoms
leave
mov
insb
xchg
cmpsl
jo
or
mov
add
fidivs
inc
xor
inc
sbb
adc
inc
dec
inc
push
cmp
in
pop
jmp
add
mov
out
inc
or
or
sbb
adc
cs
sbb
cmp
push
jo
xor
dec
jno
sub
add
andb
mov
flds
ror
xchg
add
aad
and
aam
adc
xorb
cwtl
outsl
pop
mov
add
mov
cwtl
sub
dec
add
mov
in
out
andb
xchg
aas
sbb
fisttps
cmpsl
icebp
rolb
adc
fstpt
lock
and
add
xchg
inc
or
test
mov
insl
mov
jmp
ja
sub
sub
mov
fadds
cmp
f2xm1
or
jo
sub
cmp
ret
mov
add
subl
sbb
pop
jae
xor
shlb
sbb
rcl
notb
add
mov
and
xor
hlt
test
jmp
fwait
and
nop
outsl
ret
xor
out
mov
pop
fwait
cmpb
ljmp
mov
subb
push
sar
fdivrs
add
inc
push
add
scas
das
adc
sbb
pushf
or
enter
sti
cltd
inc
or
xchg
xor
cmp
push
pushf
add
add
sub
sub
xchg
out
mov
inc
lods
pop
mov
lock
mov
filds
rorl
movsl
sub
adc
int3
pop
dec
loopne
jo
mov
aas
sbbl
sbb
cwtl
pop
and
pop
xor
jns
ljmp
push
sub
dec
jae
mov
jle
add
ljmp
std
fcoml
fcmovbe
pop
in
movsl
inc
mov
je
mov
jl
fldenv
xor
lods
dec
and
sbb
cmp
xor
shrl
stos
clc
mov
popa
cmpl
lea
in
pusha
clc
cmc
test
pusha
subl
sbb
mov
xor
rorb
xchg
into
dec
sub
push
outsl
loopne
clc
xchg
xchg
cmp
sbb
add
cmc
add
pop
roll
notl
xchg
mov
xchg
adc
js
mov
jl
outsl
nop
mov
push
lods
jmp
dec
imul
xchg
pop
or
jle
mov
dec
mov
lock
pusha
push
cmc
add
and
andl
xor
inc
int3
lock
and
ds
push
and
or
popa
xor
cmpsl
jmp
jns
mov
add
xor
sub
xor
dec
in
add
fwait
pop
cmp
notb
and
dec
aas
or
lds
stos
mov
movsb
push
outsb
std
fadds
mov
jecxz
shrb
loopne
and
adc
repz
icebp
pop
add
sbb
and
push
adc
repnz
movsb
rolb
call
in
add
mov
add
jbe
in
imul
cmp
mov
leave
scas
mov
add
inc
outsb
mov
mov
xchg
cmp
lods
ret
xor
fistl
cmp
pop
push
loope
inc
and
insb
addl
movsb
push
iret
add
scas
cmp
jns
or
sahf
subb
pop
fmuls
lahf
loopne
ljmp
int3
adcb
xlat
sbb
mov
fcoms
mov
inc
std
add
jb
jb
repnz
hlt
or
movl
movsb
icebp
scas
insl
adc
sub
cltd
mov
ret
cmp
aad
add
in
and
dec
adc
and
loopne
sub
imul
mov
jns
mov
shrb
add
pop
stc
add
mov
data16
xchg
fmuls
insb
or
pushf
adc
cmp
cmc
cs
mov
cmp
xor
fstps
dec
pop
sbb
adc
sbb
repz
ds
mov
and
ret
push
insl
shl
jns
pop
es
clc
and
sbb
cmp
push
xchg
mov
push
cmp
add
bound
test
pop
fistpll
and
jbe
mov
cli
or
js
leave
andb
pop
hlt
retw
stc
cwtl
je
or
lret
daa
out
push
shrb
sbb
and
scas
pop
inc
ror
fsubrs
imull
or
dec
pop
fstl
or
xchg
sbbl
out
shll
nop
mov
int
jl
nop
call
not
push
add
or
jecxz
dec
adc
inc
outsl
xor
mov
fbstp
push
dec
sub
movsl
xchg
sbb
loop
adc
xchg
cmp
insb
xorb
mov
js
cmpsb
loop
lods
repnz
xchg
add
lret
push
bound
mov
repnz
cwtl
inc
ret
cmp
fmulp
fmuls
and
or
mov
popf
xchg
loopne
orb
inc
xor
add
pop
inc
scas
pop
or
xchg
add
sahf
iret
add
sbb
xor
sub
xchg
out
sbb
test
jge
das
call
nop
pop
xor
or
je
jns
xor
gs
sub
mov
hlt
call
dec
jbe
shl
dec
rcrl
cmp
or
fs
shrb
add
cld
cmp
jno
adc
xchg
cmp
roll
rolb
push
lret
sub
dec
andb
pop
lock
fildll
jge
int3
push
sbb
pop
sbbb
repnz
pop
inc
pop
lret
test
or
add
sub
or
fdiv
mov
or
out
and
and
xor
inc
xor
pop
pop
sbb
insb
pop
push
add
jne
inc
ds
out
rolb
js
cwtl
jp
lods
adc
mov
je
add
insb
or
dec
lret
out
adc
and
sub
mov
faddl
xor
pop
and
xchg
icebp
xchg
jmp
xor
insb
enter
mov
push
repnz
icebp
out
mov
mov
jne
sub
mov
pop
scas
add
cmpsb
sub
cmp
ja
loope
cmp
das
rorb
cmp
lds
stc
fidivrl
and
jmp
test
xchg
add
aas
xor
imul
adc
or
int3
xor
loop
cmp
lock
shrb
xor
fisttps
mov
movlps
and
bound
mov
pop
push
faddl
mov
lahf
pop
pop
out
rolb
mov
jne
int
bound
mov
test
pop
cwtl
jne
adc
rolb
xchg
int3
test
add
cmp
push
rclb
xor
push
mov
sahf
cwtl
or
push
in
mov
ljmp
xchg
push
jae
pushf
cmp
cltd
xchg
insl
inc
xchg
es
out
cld
addr16
mov
and
inc
add
addr16
sub
pop
and
or
arpl
movl
jmp
enter
test
shlb
pop
add
sbb
jl
mov
mov
rcr
fldlg2
sbb
add
aaa
in
cltd
fcmovnu
xor
fists
stos
mov
jmp
stos
mov
cwtl
jb
adc
xchg
lahf
sub
lock
stc
push
es
leave
jae
and
or
xor
jecxz
mov
lock
mov
inc
push
cmp
inc
mov
xor
inc
jo
aam
fiaddl
ret
clc
cmc
or
data16
sahf
sub
dec
sub
xorb
lock
xchg
dec
ss
dec
push
inc
sbb
int3
lods
jp
push
aas
rep
sub
vcmppd
fs
push
jnp
movsl
xor
dec
pop
xor
nop
nop
dec
mov
pushf
push
out
imul
pop
mov
xor
or
jo
dec
mov
imulb
nop
cwtl
add
cs
jae
inc
insl
or
ret
insl
or
dec
cmovno
addb
push
cli
sbb
ja
push
in
pop
push
test
sbb
adc
es
jns
push
mov
add
and
mov
pop
mov
xor
xchg
lcall
add
insl
sbb
mov
push
test
inc
pop
sub
add
cltd
or
or
mov
add
xchg
xchg
sbb
adc
or
xor
xchg
pushf
and
jmp
call
xor
sbb
sbb
push
rolb
ds
lods
clc
addl
mov
and
movsl
negb
adc
inc
adc
xchg
mov
sbbb
dec
adcl
push
dec
or
xor
cwtl
sbb
adcb
sbb
pop
adc
ret
add
and
sti
addb
cmovb
mov
add
and
test
loopne
add
pop
outsl
in
add
cwtl
cmp
mov
and
sub
out
ss
xchg
sbb
pusha
data16
push
inc
add
jmp
fadds
cmp
lret
add
dec
inc
add
nop
pop
ret
xor
loopne
movsl
addb
dec
jo
jle
jmp
mov
sub
nop
pusha
ds
cmp
lcall
inc
andb
mov
mov
jl
imul
aam
scas
imulb
ret
jb
push
aam
pusha
adc
push
repnz
leave
add
lock
cwtl
jle
adc
int
sub
and
push
enter
rcrb
pop
sarb
cwtl
les
addr16
xor
jae
dec
inc
xchg
push
daa
lock
sbb
int3
cmp
add
add
inc
out
mov
mov
imul
dec
jno
mov
mov
fwait
rcrl
and
adc
dec
cs
enter
int3
xchg
in
add
push
jge
insb
pop
aad
pop
ja
sub
aaa
add
dec
insl
mov
daa
mov
and
out
sbb
rclb
jle
aam
adc
cmp
clc
aam
ss
sub
xchg
idivl
fimuls
test
xchg
dec
xor
cmc
xor
inc
jmp
enter
out
imul
lret
or
mov
add
push
int3
xor
sbb
or
insl
cltd
inc
setae
dec
add
mov
mov
ficompl
fs
xor
or
mov
call
aam
or
shlb
xor
xchg
lret
lods
add
andb
dec
add
pop
or
stos
nop
pop
push
rol
fs
rclb
in
jl
push
movsl
cli
lods
bound
cmp
cmp
ds
mov
sub
adc
inc
fidivrs
shlb
inc
ss
push
mov
stos
mov
push
adc
inc
ds
in
sub
inc
sub
iret
test
xor
cmpsb
imul
es
icebp
mov
nop
stos
dec
arpl
les
pop
push
inc
mov
fs
les
adc
test
ja
bound
fcoms
pop
cmpsl
cmp
mov
jp
push
dec
inc
sub
ljmp
ret
js
mov
add
add
mov
sbb
fiaddl
outsl
pop
push
push
and
inc
adc
or
sbbb
cld
mov
nop
imul
sbb
xchg
push
shrb
ja
add
ret
in
inc
icebp
cwtl
sub
lods
dec
and
mov
inc
mov
lods
jl
movsb
pusha
inc
cmc
outsb
nop
out
psllq
cld
shlb
and
push
adc
cmp
popf
push
cmpsb
aad
js
fadd
mov
out
fdiv
add
fidivl
cmp
or
and
xor
cmpb
cli
les
js
addr16
popa
inc
xchg
fstl
mov
inc
mov
sbbb
add
sub
clc
cld
mov
or
repnz
jns
pop
inc
push
jne
pop
push
insb
stos
push
mov
sbb
cmc
sub
mov
andb
mov
popf
data16
and
sub
outsl
mov
in
out
aas
mov
jae
jl
sarl
in
sbb
or
cwtl
mov
in
pusha
jecxz
pop
mov
push
jl
hlt
mov
sub
cli
cwtl
jae
ret
cmp
xchg
aas
and
loope
adcl
shll
or
mov
fdivs
js
es
loope
lahf
sub
adc
in
dec
mov
repz
shlb
mov
pop
add
notb
sbb
emms
aam
inc
mov
xor
adc
shrb
sbb
add
push
xor
dec
xor
fwait
lock
add
cmc
stos
push
mov
sub
dec
enter
mov
test
jmp
xor
shlb
jl
lds
mov
add
jge
adc
adc
xchg
test
xlat
or
insl
dec
jecxz
je
dec
out
cwtl
leave
pop
repz
xor
popf
xchg
hlt
adc
orl
lock
xchg
pop
arpl
mov
nop
mov
adc
adc
dec
shrb
jo
mov
les
int3
and
sub
pop
adc
ret
xchg
cmp
sbb
shl
aam
dec
imul
add
cwtl
push
jmp
dec
inc
pop
pushf
or
jmp
sbb
push
add
out
pop
iret
push
push
xor
pop
ja
jg
popf
adc
sub
and
call
xor
add
in
int3
mov
cmp
inc
aam
mov
xor
mov
jle
add
out
es
mov
xrelease
inc
movsb
xor
mov
arpl
shl
push
jmp
mov
aad
test
jmp
dec
inc
fs
mov
add
out
push
xor
and
push
repnz
inc
xchg
scas
add
add
arpl
adc
add
pop
inc
pushf
or
add
into
jmp
cwtl
add
mov
ja
mov
nop
mov
sbb
fsubrs
int3
lcall
cld
or
mov
adc
das
lahf
xchg
insb
add
cmp
sbb
std
ljmp
repnz
adc
in
and
inc
call
out
cmpsl
sub
cli
sbb
adcb
pop
sti
or
xchg
cli
loopne
sub
daa
ds
mov
enter
pop
or
fistl
jo
setne
sbb
add
ror
inc
cmp
or
adc
mov
add
ljmp
jl
stos
jae
push
mov
push
in
mov
rolb
mov
add
sbb
or
push
or
and
xor
nop
je
sbb
scas
adc
add
add
dec
mov
aas
jb
add
inc
ficoml
ret
xchg
add
push
xchg
mov
lret
mov
aaa
mov
icebp
mov
fadds
out
cld
sbb
popf
pop
adc
dec
pop
pop
call
cld
mov
add
fcoms
jbe
ret
xchg
add
lds
or
cmp
cmpsl
mov
fistpll
adc
add
mov
in
mov
in
add
testl
add
filds
pop
int3
aaa
fs
pusha
xchg
popf
add
dec
aaa
mov
mov
inc
add
push
ret
orb
and
out
and
nop
mov
out
adc
pusha
int3
hlt
lret
push
xchg
test
pop
cmp
inc
dec
and
dec
jle
and
hlt
mov
add
cltd
mov
js
jmp
adc
mov
sbb
sub
pop
ljmp
mov
rcrl
sub
push
sub
inc
mov
mov
pop
adc
aas
out
dec
xchg
arpl
fldcw
in
std
pusha
int3
cmpb
inc
nop
lock
and
into
sbb
pop
es
inc
mov
lret
fidivrs
mov
test
mov
jne
xorl
adc
and
push
cmpsl
xchg
orb
incl
dec
lds
pop
push
lret
mov
fadd
sub
jb
fcoms
nop
dec
addb
inc
jle
in
xchg
and
fs
sbb
pop
inc
add
subb
clc
icebp
xlat
sbb
loopne
mov
adc
sbbl
cs
xor
adcl
ljmp
jnp
clc
mov
lods
rolb
loop
dec
and
loopne
xchg
mov
addb
jae
and
inc
out
mov
mov
pop
push
mov
push
aas
cmp
lods
daa
mov
push
idivb
lea
in
push
mov
jns
inc
fs
aaa
pusha
sub
mov
push
rol
cli
jp
and
pop
jl
cmp
nop
adc
fiaddl
cmp
js
sbb
fadd
cmp
out
popa
cmpsl
das
outsl
jo
popf
cmpb
cmc
xchg
add
fisubs
test
gs
fsubl
add
mov
pop
and
mov
rolb
ret
pop
fldl
jl
or
mov
testl
or
je
push
xor
jns
icebp
negb
scas
aas
ds
or
cmp
adc
or
cld
cld
in
cmp
xchg
cmp
inc
push
mov
sub
in
sbb
cwtl
adc
jle
xchg
outsl
sbb
cmp
add
das
sahf
xlat
inc
cwtl
in
and
out
add
clc
jmp
cli
sbb
sub
lods
jnp
movsb
daa
fadds
insl
cwtl
pusha
push
dec
shlb
in
xor
xchg
inc
adc
mov
orb
adcb
xchg
movsb
pop
or
insb
add
jecxz
pop
jmp
inc
pop
adc
cmpsl
or
fimull
mov
pop
hlt
jbe
pop
inc
aam
imul
ds
sub
sbb
xchg
and
add
xchg
sub
jmp
stos
icebp
add
and
out
jmp
cld
in
add
out
into
mov
mov
dec
jle
mov
inc
pusha
mov
adc
pop
sub
fdivrp
loope
mov
enter
add
das
xchg
and
out
xchg
loopne
or
mov
xlat
ret
pop
mov
sbb
aam
or
aas
outsl
clc
jae
cs
pop
adc
xchg
add
imul
jge
xor
jge
add
add
iret
shr
xchg
int
mov
add
add
fdiv
sub
rorb
mov
cmp
xor
fisttpll
in
test
sub
shll
insl
cwtl
out
enter
xchg
push
pusha
mov
push
enter
arpl
mov
dec
mov
enter
add
test
mov
sbb
sbb
roll
mov
add
cwtl
fpatan
push
outsl
fidivs
cmp
clc
nop
add
scas
mov
hlt
xor
sub
stos
mov
je
inc
pushf
out
roll
loopne
movsb
rolb
test
filds
insl
stos
cwtl
or
outsl
test
test
inc
ds
jl
add
hlt
and
loop
es
lods
mov
add
or
xchg
mov
adc
add
and
and
add
jae
sahf
lods
lods
inc
mov
pushf
mov
cli
and
int3
jno
sbb
outsl
into
jg
stc
mov
int3
mov
enter
dec
xor
mov
cwtl
add
mov
aam
and
lret
mov
imul
sbb
repz
pop
cmpsb
mov
dec
sub
xchg
clc
rorl
pop
loopne
sub
mov
jl
cmpsl
call
mov
cld
adc
aas
xor
xor
nop
mov
jl
ss
cmp
dec
push
push
loopne
pop
es
push
rcrl
mov
jbe
sarl
or
fadds
dec
arpl
or
add
jns
mov
mov
pop
pop
addl
dec
adc
test
into
sbb
cmp
js
mov
arpl
fcoms
add
cld
adc
mov
and
hlt
addr16
imul
adc
mov
pushf
pop
mov
loope
add
push
inc
xor
cmc
es
nop
ret
mov
or
movsb
mov
andb
and
xchg
movsl
aaa
xchg
cmp
int
stc
and
adc
mov
ret
cmpl
cwtl
rolb
fidivs
flds
add
movsl
ds
sbbl
int3
icebp
scas
lods
add
push
outsl
in
pushf
nop
jbe
inc
ficoms
jo
push
xor
ds
xlat
xchg
xchg
or
negl
mov
call
imul
and
sti
jno
fdiv
out
sub
sub
or
xchg
das
lds
shl
hlt
sub
sub
sub
ja
jne
adcb
nop
out
and
add
and
mov
add
aam
fimull
repnz
repnz
in
cmp
and
enter
adcb
xchg
pop
idivb
pusha
add
cli
adc
nop
pop
fistl
out
sbb
xlat
roll
xchg
mov
loop
test
int
leave
mov
xor
dec
jmp
mov
jbe
sti
dec
push
sarl
ret
lret
call
sub
stos
push
push
push
aam
inc
int
or
xor
insb
loope
jl
mov
rcr
mov
arpl
jns
inc
jmp
xor
push
xor
idiv
add
xor
outsb
mov
in
xor
add
insb
sub
adc
movq
repnz
fsts
add
in
aaa
aas
push
dec
dec
roll
hlt
imul
dec
xlat
or
inc
mov
nop
popa
xor
push
xchg
sbb
repnz
xchg
aas
add
pushf
cmc
mov
test
xchg
jo
enter
test
mov
out
adc
rcr
sbb
into
out
adc
lock
and
dec
mov
sbb
cwtl
pop
mov
lahf
repnz
add
fwait
pop
add
sub
cmp
pop
mov
dec
addl
nop
rclb
ja
xor
adc
xchg
inc
sub
pop
jae
push
mov
int
in
add
enter
mov
xchg
and
nop
mov
test
and
icebp
sbb
lahf
pusha
pop
mulb
loop
add
ja
add
sti
movsl
and
cmp
pop
inc
inc
pop
dec
ds
cld
sbb
push
lret
int3
ficompl
sti
scas
in
push
cmp
xor
add
filds
stc
pusha
adc
add
insl
lods
inc
dec
imul
sbb
add
ja
adc
and
icebp
adc
cli
enter
daa
push
sub
leave
mov
in
push
fldz
popf
and
stc
add
out
sub
out
jecxz
mov
lret
adc
sub
sub
in
xchg
sbb
orb
inc
pop
mov
popa
add
and
adc
pop
sub
sub
test
dec
and
inc
lea
mov
stos
mov
mov
push
repnz
xchg
rorl
mov
leave
adc
or
int3
xor
ja
sub
mov
rorb
fcmovnu
lahf
xor
cmp
and
and
out
rcrb
mov
inc
repz
enter
dec
sahf
clc
or
hlt
sub
mov
xchg
add
pop
and
inc
fisubrs
cmp
ror
mov
pop
and
add
fildll
test
clc
xchg
and
xchg
sbb
loop
frstor
and
insb
dec
in
popa
push
lret
pusha
push
and
ret
popf
popa
rcrb
push
pusha
cmp
dec
mov
clc
mov
in
cmp
aam
aas
xchg
inc
scas
push
adc
sub
xchg
test
into
dec
movl
negl
pop
int3
clc
sbb
fwait
mov
lods
dec
mov
popf
xchg
hlt
lahf
adc
lret
popa
repnz
ja
push
sbb
mov
and
sbb
pop
mov
repz
cmpl
aaa
inc
add
mov
out
sub
pop
testl
cwtl
adc
fisubrl
jp
jb
mov
fstpt
inc
dec
mov
push
out
push
cli
in
jl
test
jb
sub
add
andb
inc
scas
xchg
or
xchg
je
mov
pop
add
or
mov
movsb
nop
test
cltd
add
fildll
sub
push
add
pop
enter
shlb
clc
les
inc
pop
popa
jo
xor
ret
gs
ror
cmp
mov
and
xchg
popf
cmp
xor
or
mov
lret
rorb
data16
jecxz
push
mov
fsubs
sbb
jg
inc
xchg
pop
mov
or
outsl
lahf
scas
and
stos
inc
xchg
dec
pop
add
push
xchg
movsb
xchg
cltd
push
dec
xchg
lock
rorb
stos
pop
inc
xor
xor
rorl
popa
add
adc
sub
jb
jmp
enter
subb
pop
inc
in
push
outsl
nop
lcall
loop
into
jo
dec
sub
stos
and
xor
nop
adc
outsb
add
in
pop
mov
cmp
or
cli
int
fsubs
xchg
add
and
cmp
rclb
add
loop
pop
xchg
cmpsb
jo
jnp
aam
mov
and
jne
adc
loopne
loope
cwtl
aas
fcomps
push
repnz
pop
jb
adc
xor
mov
js
mov
lods
adc
dec
push
cmp
les
and
xor
or
push
test
out
mov
fdivp
cmpsb
cmp
sub
or
into
push
lret
mov
sbb
or
movsb
out
pusha
insl
mov
inc
mov
push
push
jae
xchg
mov
and
sub
sub
arpl
add
in
jo
mov
mov
inc
xchg
lret
fcomip
inc
push
cli
mov
cvttps2dq
dec
cmp
test
cwtl
and
and
lea
insl
mov
call
cli
pop
pusha
mov
bswap
add
and
sub
and
je
inc
insl
js
testb
imul
call
dec
inc
xorb
sub
cmp
ds
enter
push
jno
or
push
jne
and
outsb
repnz
jle
mov
add
add
xchg
cmp
scas
ja
add
cmc
xor
xor
ds
mov
pop
cld
adc
adc
cltd
fnsave
pop
fwait
leave
sbb
xchg
push
push
sbb
xchg
inc
push
and
and
cltd
sbb
jmp
sbb
daa
jmp
ret
dec
and
inc
ficoms
xchg
repnz
sbb
inc
adc
les
shlb
push
scas
cmpsb
and
call
ffreep
and
out
jae
or
mov
aaa
xchg
es
and
or
xchg
and
pop
and
and
pop
xor
push
or
mov
movsb
inc
xchg
cmc
arpl
and
push
cmp
ds
loope
insl
fldenv
bound
cld
inc
test
jb
jmp
mov
rcll
or
push
iret
add
negb
mov
loop
or
cld
lock
sbb
inc
sti
pop
fnstenv
or
xor
mov
lods
or
clc
faddl
faddl
inc
xor
test
imull
sbbb
add
lock
testl
mov
bound
push
xor
fwait
or
sbb
xor
mov
out
jp
jns
or
ret
adc
clc
test
nop
sbb
sbb
push
dec
mov
or
mov
adc
int3
sub
sar
inc
fcom
inc
icebp
sar
fisubrl
mov
insb
arpl
jo
xchg
pop
inc
and
outsl
sbb
cs
or
or
inc
ret
andb
push
out
push
dec
jno
pop
subb
test
mov
or
xlat
add
movsl
fsubrl
mov
sub
inc
jp
bound
push
addl
sub
or
rclb
fists
outsl
jecxz
cmpsl
insb
and
or
adc
and
push
xchg
mov
outsl
xor
pop
inc
adc
adcl
clc
add
cmp
push
pavgb
xor
insl
sbb
add
add
push
test
pop
sbb
dec
insb
cmp
push
test
adc
push
fucomip
ret
int3
mov
cs
mov
ja
rorb
aaa
cmpl
jge,pt
scas
xchg
push
inc
xor
xchg
add
fcoml
and
mov
gs
fwait
pusha
xor
fimuls
pop
xor
add
test
inc
stc
jecxz
and
movsb
sub
in
add
push
sbb
pop
outsl
or
bound
and
push
in
out
add
inc
lahf
les
lret
mov
repz
outsl
movsl
fiaddl
sub
push
jne
pop
inc
pusha
or
sub
sub
aas
scas
add
lods
cwtl
inc
clc
inc
push
mov
int3
test
add
sub
in
movb
out
add
xor
add
pop
inc
pop
and
adc
lcall
addb
ret
push
cmp
imul
push
daa
movl
out
mov
jb
and
jp
adc
jecxz
inc
mov
fidivl
sbb
lea
cs
and
push
in
inc
mov
fdivl
gs
dec
or
movsb
data16
add
adc
rorb
nop
jne
cwtl
movsb
add
cmp
mov
mov
pop
mov
xchg
sbb
and
ret
and
add
mov
add
addr16
adc
andl
aad
or
icebp
adc
sub
lahf
repnz
daa
adc
test
pop
in
and
bound
call
mov
adc
aas
inc
add
sub
insl
out
inc
or
stos
jns
xor
sti
add
mov
enter
subl
fdivrp
mov
cmc
pusha
adcl
enter
jl
lds
jg
cs
mov
test
les
bound
and
add
cmpsb
test
fsubl
pusha
jae
icebp
xchg
push
add
jp
pop
stc
ret
adc
dec
mov
push
mov
and
repz
cli
je
rorb
mov
inc
stos
insb
mov
xor
outsl
mov
adc
fdivr
test
je
xor
fistpll
dec
pop
in
sbb
dec
sahf
nop
movsb
xor
test
inc
das
xor
in
add
cli
stos
cwtl
mov
mov
mov
sub
ret
and
and
dec
aam
xor
and
popa
pop
push
and
cltd
sub
loopne
inc
and
xor
das
test
daa
sbb
jnp
pop
out
cmp
xor
iret
scas
clc
inc
mov
enter
addb
in
ja
xchg
movsb
sbbb
adc
mov
push
decb
insl
mul
sub
orb
fildll
lea
pop
test
xor
pop
sbb
push
pop
fdivrl
and
int
dec
sti
cmp
outsb
pushf
sbb
sbb
shrb
mov
and
rcll
xchg
das
pop
and
xor
inc
add
test
pop
setb
xchg
iret
or
popa
push
les
cmp
sub
pop
mov
addb
or
xor
fldenv
add
loop
mov
sbb
dec
mov
and
mov
lock
pop
and
jne
add
repnz
mov
nop
mov
cld
pop
push
test
push
dec
dec
adc
mov
xor
cmp
cs
hlt
js
cltd
popa
xlat
push
sbb
xchg
lds
mov
loopne
leave
adc
divb
dec
inc
push
adc
jno
es
cmp
adc
and
or
mull
xchg
jo
dec
aam
sub
xchg
clc
and
lcall
add
scas
adc
mov
add
enter
jle
fcoml
mov
rcrl
jns
imul
mov
sbb
rolb
xor
lret
mov
pop
int
hlt
addb
inc
sbb
adc
add
test
xor
movl
add
ret
and
shrb
jp
mov
sbb
les
loopne
jb
xchg
xor
mov
in
sub
and
pop
lahf
sub
inc
negl
loopne
add
clc
jge
stc
jbe
adc
lock
xchg
jo
add
notb
orl
enter
fnstcw
inc
enter
and
insb
xchg
mov
movsb
mov
jle
sub
leave
or
sub
add
jge
mov
data16
movsb
aam
xchg
or
xor
xchg
cmp
sbb
cmp
das
and
cli
push
or
stos
movsb
outsl
idivl
shll
pusha
push
scas
add
andb
add
xor
dec
jp
adc
rorl
leave
stos
ljmp
xchg
xchg
insl
mov
stos
pop
jmp
daa
jno
mov
movsb
dec
dec
nop
dec
dec
sub
mov
insb
hlt
cmp
les
in
insb
test
shrb
mov
mov
dec
ret
imul
xor
xchg
xchg
xlat
dec
xor
outsl
test
xor
cs
push
inc
ja
inc
mov
subb
mov
nop
scas
pop
pop
cmpb
ljmp
adcl
sub
and
movb
es
xchg
or
add
ret
test
dec
das
dec
loopne
and
jb
adc
or
inc
mov
pushl
add
repnz
loopne
imul
leave
mov
jl
xchg
outsl
cmpsb
or
es
in
mov
pop
push
cmp
mov
lock
xor
push
cmp
in
pop
iret
mov
inc
lock
push
xor
sarb
mov
addb
inc
sbb
xor
dec
insb
and
mov
sti
repnz
add
mov
lret
and
xchg
inc
inc
inc
and
add
and
cmp
xchg
cwtl
and
pop
mov
pop
cld
insl
cmove
fadds
subb
cli
es
je
test
sbb
scas
aaa
fildll
fwait
lods
sbb
bound
mov
xor
aad
inc
pop
xchg
xor
nop
insl
out
daa
and
test
fmull
mov
lea
add
imul
pop
rcrb
lcall
xchg
popa
xchg
inc
mov
inc
add
lock
andb
nop
movsb
cmp
and
fildl
repz
mov
xorl
je
mov
leave
nop
cmp
addb
and
mov
sub
add
inc
andl
and
add
or
fstps
rcrb
mov
pop
std
loopew
fs
bound
cmp
sub
packsswb
xorb
adc
dec
xchg
sbb
cs
and
imul
and
rolb
scas
fidivl
sbb
lods
dec
xorl
adc
push
cwtl
xor
add
mov
and
add
call
adc
sbb
cwtl
and
pop
gs
and
nop
lock
add
stos
mov
pop
and
clc
cmpsl
or
andl
push
xchg
adc
add
adc
xor
inc
loopne
pop
cmp
add
mov
pusha
xor
adc
or
inc
repnz
jno
adc
cmp
adc
xchg
inc
mov
cmp
clc
add
lods
inc
sub
xor
adc
and
add
popf
push
mov
mov
int3
loopne
mov
sub
imul
mov
and
sbb
mov
pop
ds
xchg
xor
sbb
lcall
test
add
sub
hlt
repz
push
test
dec
jae
int3
lock
cmpb
cmp
fstl
sub
ret
rclb
int3
or
mov
test
push
unpcklps
and
dec
lods
mov
lock
push
mov
loopne
imull
test
in
pop
fwait
xor
mov
mov
push
pop
repz
add
jl
subb
xor
in
pop
and
and
rorb
enter
and
bound
popf
dec
addl
les
leave
loopne
shll
adc
aam
mov
adc
es
dec
push
ret
repz
adc
ja
mov
jae
pop
pop
lock
test
loopne
pushf
add
hlt
clc
das
orl
mov
fwait
pop
add
lock
sbb
jns
pop
ss
insl
inc
hlt
push
xchg
add
or
int3
cmp
add
rolb
add
lahf
or
fadds
mov
sub
pop
hlt
inc
xchg
enter
push
jmp
lds
pusha
inc
mov
sbb
mov
adc
inc
sti
mov
mov
cmp
mov
add
cmp
lahf
addl
adc
cmc
call
pop
cli
mov
jo
das
mov
jecxz
lret
mov
lea
inc
cs
pushf
ror
jp
insb
inc
clc
sbb
and
add
mov
add
and
add
das
test
stos
es
lret
clc
mov
daa
adc
ret
dec
lsl
jg
and
mov
inc
shll
subb
jg
add
pusha
sbb
and
adc
scas
nop
add
fnsave
repnz
adc
adc
cmp
jp
add
push
ss
mov
movsb
loopne
jle
dec
add
adc
pusha
test
fcmovb
pusha
inc
rcr
fwait
sub
lock
mov
in
inc
lcall
lock
inc
add
fwait
pop
add
jecxz
sbb
hlt
mov
das
leave
mov
in
cmp
imul
js
data16
jno
lock
pop
lea
aaa
bound
enter
dec
mov
or
lods
cmp
bound
pop
xor
cmp
in
mov
jb
dec
and
push
lahf
sbb
loopne
int3
xchg
xorb
daa
lods
xor
fidivl
mov
mov
testl
or
nop
xor
xor
ja
adcl
xchg
outsl
mov
and
in
sahf
movsb
add
mov
xchg
popl
mov
inc
insb
pop
jne
and
jp
add
and
popl
push
in
add
mov
pop
xchg
add
or
add
lods
jo
cmp
jl
test
cmpsl
xchg
leave
movsb
lret
inc
mov
jo
or
js
cmpsl
and
add
or
push
loop
bound
inc
mov
jecxz
aad
sub
add
xlat
or
movsb
or
xchg
fiaddl
mov
xorl
xor
sar
dec
xchg
mov
or
jp
xor
jecxz,pn
pop
and
cwtl
mov
dec
xorl
aad
xchg
shll
in
shl
test
test
sub
sub
cmpsb
add
popf
mov
lods
or
jo
pop
sbb
adc
sub
inc
cld
cmp
jne
adc
inc
sbb
adc
pop
imul
leave
lock
or
fcmovb
add
lcall
popf
and
add
in
jns
xorl
fstps
arpl
or
in
add
or
add
popa
and
xor
fisubrs
ljmp
mov
add
cwtl
mov
aam
mov
sub
movsb
into
and
sub
mov
mov
sbb
jle
lock
pusha
inc
and
test
lcall
add
adc
pop
cltd
ja
xor
data16
dec
pop
xchg
xor
mov
test
mov
inc
add
push
adc
addr16
movups
inc
push
add
pop
adc
or
rol
pop
dec
into
and
and
xor
adc
pop
int3
pop
push
fwait
lahf
dec
je
push
xor
shlb
lcall
push
in
movb
loopne
idivl
xor
xor
mov
mov
in
fwait
xchg
xor
out
or
add
ret
iret
xlat
std
addr16
dec
sahf
sbb
xor
jp
lret
loopne
adc
and
mov
jno
rsqrtps
mov
cmp
or
cwtl
movsb
in
fsubrs
add
std
orb
mov
outsb
push
call
icebp
aam
and
xor
pushf
insl
sbbb
fnsave
sub
dec
sbbl
ljmp
jo
add
movsb
aad
orb
mov
cwtl
fwait
lods
outsb
rcrb
test
addb
add
movl
mov
adcb
repz
mov
decb
shrb
and
xchg
mov
stos
js
in
enter
fcomps
add
mov
fmuls
test
in
scas
add
mov
inc
lret
or
jae
sub
jo
cld
xchg
je
ja
aam
repz
mov
rcl
in
in
or
test
sbb
push
xchg
add
sbb
xchg
dec
ds
and
mov
enter
repnz
pop
in
mov
add
imul
xor
xor
dec
sbbb
cld
das
lea
pop
out
aaa
xchg
repnz
dec
sub
or
xor
add
push
int3
pop
lret
push
aaa
add
fwait
add
lcall
gs
inc
call
fwait
dec
adc
orb
imul
sahf
pop
mov
xor
pushf
dec
xor
scas
inc
adc
dec
insb
mov
out
jmp
add
jb
loop
add
cmovle
ss
jno
add
popa
sub
mov
ret
jne
or
cmp
pushf
in
add
int3
xor
and
ror
dec
sub
mov
fwait
leave
adc
cwtl
inc
xor
and
orb
subl
inc
add
cmpsl
fnstenv
sub
nop
mov
fcoms
sub
fcoml
xor
inc
add
sarl
jecxz
mov
fcoms
mov
int3
cli
cmp
in
movsb
adc
cmp
xor
pop
cmp
add
adc
popa
xor
add
sub
xchg
into
ds
xchg
mov
repnz
stos
dec
or
repz
sbbb
popa
or
sar
loopne
xlat
rol
les
pusha
inc
sbb
inc
sbb
cs
shrl
lea
inc
in
mov
repz
int3
aam
inc
call
xchg
loope
out
daa
insl
test
mov
dec
insb
cmp
xlat
shl
clc
and
lcall
pushf
ljmp
adc
add
setns
dec
xchg
and
or
xor
xchg
adc
addb
sub
or
mov
jns
pushf
fwait
sub
mov
nop
cmp
test
popa
add
inc
pop
pop
add
jno
mov
jo
out
and
inc
push
loopne
repnz
mov
jg
movsb
mov
sub
xchg
roll
xor
xor
test
add
lods
test
and
or
or
xor
or
rorl
fmul
mov
push
jnp
pop
ja
nop
adc
sub
inc
and
arpl
fwait
test
cmc
orb
data16
int3
rolb
xor
cmp
xchg
out
sbb
or
inc
dec
test
les
pop
mov
or
pop
add
mov
les
add
in
push
add
xlat
cmpsl
lret
stos
push
push
fiaddl
daa
mov
in
push
add
cmp
sub
clc
xchg
mov
sub
fisttpl
or
imulb
ja
pop
popf
and
xchg
in
sub
jne
ret
add
jmp
cli
cmp
leave
cs
sbb
sbb
xchg
and
pop
mov
es
adc
xchg
or
or
test
insb
sbb
sub
inc
es
mov
sub
mov
sbb
jecxz
orb
and
pop
jo
or
add
fdiv
xchg
cmp
sbb
adc
bound
nopl
clc
jge
iret
mov
arpl
test
add
stos
jmp
shl
out
or
cmp
and
pop
popf
nop
cmp
add
sbb
shlb
ss
push
fsubs
in
jo
pop
je
js
add
pop
cmp
aas
insb
int3
mov
sbb
fadd
cli
adc
stc
xorb
dec
cwtl
mov
add
sbb
mov
and
pop
sub
xchg
mov
jge
testl
icebp
mov
mov
sbb
andb
test
out
adc
fcoms
inc
jg
negl
add
ja
xor
lock
testl
xor
dec
mov
pusha
movsl
sub
jp
xor
dec
outsb
xchg
push
aaa
add
xchg
fincstp
adc
mov
ret
and
lods
fdivl
or
and
enter
bound
cwtl
lods
add
or
arpl
lds
je
sbb
test
xor
fimull
scas
and
add
and
pop
int3
sahf
orl
adc
cli
sub
adc
out
in
movsb
or
add
sub
jp
dec
pop
loopne
mov
nop
ljmp
sete
sub
or
xchg
cmp
fistpll
jbe
sub
rolb
popa
ret
sub
or
pop
cwtl
outsb
xor
rcr
mov
mov
xchg
scas
inc
inc
or
in
dec
insb
icebp
jmp
loope
imul
std
pusha
mov
mov
inc
mov
push
adc
and
dec
in
xchg
mov
inc
fs
ffreep
sbb
fidivs
aaa
lods
or
stc
push
add
hlt
and
jle
add
dec
subl
xor
je
nop
js
js
mull
sub
and
adc
and
add
iret
ljmp
movl
loopne
xchg
xchg
add
adc
loope
dec
xchg
sbb
add
sub
cmpsl
scas
pusha
push
les
pop
push
add
or
or
add
add
call
in
fsubl
add
inc
jo
sarb
pop
testb
xor
cmpsl
loopne
out
nop
sub
js
loop
cs
add
int3
inc
mov
lods
je
push
call
jl
clc
lahf
push
mov
jmp
ljmp
loop
cmp
imul
lods
iret
add
subb
push
and
repz
xor
loopne
cs
mov
ds
int
add
imull
add
xor
mov
addl
loopne
in
in
pusha
xchg
out
enter
add
add
sbb
ss
mov
call
and
mov
lock
mov
pop
cs
cmc
sub
pop
pop
xchg
and
add
sbb
push
out
xchg
mov
pusha
test
loopne
or
jmp
push
jne
push
daa
mov
inc
or
insb
loope
jmp
sbb
mov
daa
push
imul
cmp
pushf
jne,pt
scas
es
je
mov
push
sahf
cmp
jmp
add
bound
add
adc
std
cmpsb
dec
iret
add
push
inc
nop
adcl
cmp
lret
xor
shll
adc
mov
pusha
leave
daa
int3
xor
sub
insl
testl
sub
jb
cwtl
rolb
mov
addl
mov
insl
inc
int3
addb
and
pushf
rorb
add
test
xchg
je
enter
push
dec
pusha
fsts
pop
xchg
add
add
in
jmp
mov
fadds
dec
rolb
pushf
add
out
xchg
adc
and
mov
cmpl
or
out
pushf
xor
lods
ds
int3
lods
and
push
adc
les
fcoms
add
add
sbb
mov
movsb
test
inc
pop
and
leave
push
out
pusha
out
sahf
inc
push
loopne
loopne
enter
popa
pop
inc
pop
push
mov
add
jns
cmp
js
imul
sub
pop
and
es
adc
bound
inc
or
enter
hlt
test
and
mov
add
mov
subb
arpl
or
jmp
lods
pop
sbbl
dec
test
mov
jnp
jbe
adc
gs
jle
lods
std
xor
inc
daa
out
cltd
popa
push
cmp
mov
jl
iret
adc
in
dec
cmp
arpl
add
addr16
add
pop
jne
sub
jmp
mov
jnp
in
loopne
push
cld
and
adc
adcl
push
call
sbb
pop
jmp
into
shrb
sti
sbb
lret
rclb
dec
ss
push
int
jmp
inc
dec
adc
dec
int3
pop
nop
and
inc
add
xchg
adc
mov
xchg
or
out
cmp
pusha
sbb
clc
fcoms
push
mov
mov
add
repnz
sub
pop
sbbb
xor
xor
aad
cld
in
add
and
add
repnz
add
mov
push
sbb
xchg
sbb
add
push
mov
add
or
or
jne
add
push
lock
push
sbb
ljmp
mov
test
and
pop
or
adc
test
stos
sbb
imul
inc
push
cwtl
xor
cmp
sub
ljmp
pop
call
push
mov
ss
loope
in
push
into
push
mov
stos
or
and
fimuls
outsb
sub
clc
mov
subl
mov
enter
or
sub
xlat
mov
icebp
dec
xchg
ljmp
dec
in
pop
lods
aam
xor
mov
push
ljmp
sub
fwait
ret
fwait
xor
ljmp
inc
mov
sbb
pop
add
add
mov
out
add
add
mov
je
addr16
stos
mov
sti
mov
fdivrs
cmp
or
dec
dec
bound
cld
push
out
sbb
and
loopne
mov
push
inc
loope
and
push
add
dec
or
xchg
cmpsl
jnp
and
add
push
xorb
sub
lret
adc
inc
adc
cmpsl
pop
aas
inc
add
jbe
mov
push
xchg
add
hlt
fstl
mov
imul
cmp
outsb
imul
or
dec
sub
add
add
inc
add
sbb
in
adc
out
inc
inc
scas
mov
add
ljmp
mov
imul
or
xor
adc
popf
es
push
clc
fistps
mov
das
xor
mov
pop
add
mov
pop
ss
stc
pop
dec
adcb
shr
xor
pop
daa
idivb
or
mov
test
mov
xchg
inc
xchg
mov
push
mov
sub
mov
outsl
sbb
xlat
orl
or
mov
roll
xor
repz
or
add
dec
sub
push
orb
push
ja
popa
lds
pop
and
dec
dec
inc
sub
ljmp
and
mov
enter
xor
dec
shrb
cli
mov
xor
popf
addr16
mov
xchg
loop
imul
and
addr16
imulb
clc
ljmp
jmp
adc
pop
adc
or
sub
mov
jns
push
lock
push
cmpsb
xchg
sbb
add
daa
add
xchg
add
lds
ja
nop
out
nop
mov
xchg
lcall
jecxz
push
push
push
fcoms
push
push
imul
add
repz
rcrb
mov
or
jge
or
inc
jp
pop
test
sbb
dec
push
cs
pop
push
push
adc
enter
or
push
push
pop
fs
xor
insl
imul
pop
push
push
mov
cwtl
std
and
sub
push
enter
fldcw
repnz
cli
ss
push
cmp
fs
mov
adc
inc
int
scas
dec
ficoml
mov
inc
dec
lods
mov
out
add
pop
jo
repz
nop
sub
mov
pop
ja
or
or
mov
or
mov
decb
push
mov
ljmp
rorl
cld
xchg
fiaddl
hlt
push
pushf
mov
out
lea
mov
ficoms
pop
test
xor
adc
xor
or
or
pop
sbb
aam
lea
jb
clc
das
fwait
ljmp
data16
imul
pop
pop
add
fisttpll
cmp
adc
pop
xor
pop
cwtl
cmpsb
push
rcrl
and
addb
and
add
cwtl
jle
xor
clc
sub
ret
xchg
dec
inc
ss
ljmp
mov
hlt
subb
inc
and
pop
std
loope
fstps
pushf
mov
loopne
movsb
lret
jmp
sub
sub
outsl
mov
xor
xor
add
test
and
sub
push
or
dec
jecxz
es
pusha
ja
sbbl
pop
in
dec
push
add
xor
test
pusha
xor
mov
inc
and
xchg
pusha
sub
push
push
mov
mov
mov
mov
inc
push
test
pop
clc
aam
fsubl
xor
bound
pop
mov
rclb
pop
js
xor
push
xor
add
daa
mov
loope
dec
out
hlt
add
mov
mov
adc
add
adc
or
pop
fcompl
rorb
sbb
and
nop
dec
mov
adc
repnz
lods
mov
and
sti
jo
dec
hlt
add
push
adc
and
imul
dec
mov
push
mov
orb
ljmp
cwtl
int3
mov
pop
mov
sbb
loope
clc
xchg
sub
pop
xor
subb
addr16
cmp
ljmp
test
add
out
addl
and
dec
inc
inc
call
loop
cs
sub
push
xchg
dec
lock
pop
mov
xchg
in
sub
fmull
sbb
bound
cmp
add
fildl
inc
sub
fidivs
xor
rcll
xchg
pop
inc
rol
add
add
pop
or
sbb
xor
mov
add
push
push
pop
push
or
mov
jmp
push
and
fs
xor
mov
in
adc
cwtl
mov
outsb
xor
mov
jecxz
mov
sub
ret
or
sbb
xor
push
or
push
mov
adcb
gs
cmp
lidtl
loopne
xchg
jmp
push
push
push
mov
addl
sbb
xchg
cmpsb
add
push
aam
mov
jb
nop
out
jno
lock
xlat
push
pop
cmp
add
movsl
pop
stc
ljmp
sbb
xor
fists
jae
push
out
pop
mov
push
lahf
or
or
imul
xchg
sub
call
outsl
inc
pop
push
add
fstpl
jge
adc
push
inc
mov
sub
shl
and
cltd
cmpxchg
jmp
mov
sbb
out
pop
rorb
add
outsb
pop
mov
mov
xor
sub
xlat
out
sbb
add
fsts
jmp
push
push
push
test
ds
lret
adc
inc
push
out
adc
and
inc
jl
pop
xchg
es
xor
iret
or
mov
fstpt
lds
push
js
not
dec
push
imul
clc
adc
add
cs
pop
xor
pop
dec
mov
cmpsb
inc
adc
int3
aam
fldenv
cld
aas
arpl
xchg
push
jmp
pusha
clc
sbb
addps
xlat
pop
rclb
mov
jge
push
pop
add
rcrl
pop
or
xchg
mov
cwtl
mov
fldl
push
ss
clc
add
cmp
shll
sbb
pop
mov
adc
mov
pop
or
or
in
add
enter
mov
and
jp
adc
call
xor
jb
shrl
dec
cmp
pop
punpckhbw
push
in
gs
add
sbb
xor
int
popf
xchg
xchg
sub
mov
xorb
in
hlt
inc
mov
sub
lock
add
stos
mov
pop
je
and
push
push
inc
sub
xor
ret
push
inc
flds
adc
or
add
das
incb
pop
pushf
jmp
addr16
push
jno
sbb
mov
sbb
das
cmpb
flds
add
push
pop
testl
int3
or
push
cmp
sbb
adc
xor
lret
bound
adcb
mov
jg
jmp
out
and
xchg
cmp
lret
or
xor
mov
and
inc
mov
pushf
sbb
mov
sub
and
add
aad
xchg
inc
or
and
or
in
dec
and
loope
pop
dec
xor
adc
push
push
mov
mov
and
xor
and
addl
and
pop
mov
inc
andb
not
jmp
mov
outsl
sbb
dec
dec
sub
in
repnz
push
pusha
inc
add
and
orb
push
rorb
add
jbe
int
shll
inc
jl
push
cmp
or
pushl
sub
fwait
add
loopne
push
lock
test
les
inc
notb
mov
jmp
dec
inc
push
mov
cmp
js
adc
add
push
push
push
mov
cs
push
ret
dec
inc
xor
xor
cmp
mov
mov
dec
nop
push
xchg
inc
popf
pop
add
pop
rcrb
fsubs
xor
mov
imul
lock
ljmp
xchg
xor
dec
addb
xor
jnp
shll
pop
rcrb
mov
cmpsb
sbb
cmp
pushf
movsl
clc
call
repz
push
cmp
cmpsb
outsl
sahf
xor
rclb
jmp
and
out
mov
aas
aad
cli
cmp
push
jo
xchg
jmp
outsl
pop
fs
inc
mov
cs
xor
jecxz
push
lods
mov
loop
xorl
sbb
mov
push
lock
addr16
xchg
xchg
sub
das
or
xor
test
adc
jns
sbb
adc
sbb
popa
adcb
adc
icebp
sbb
xor
rorl
inc
imul
push
sysenter
push
mov
test
fadds
int
mov
pusha
adc
aaa
or
add
pop
rcrl
out
or
push
mov
mov
dec
mov
mov
jp
loopne
xor
push
fsubl
stc
das
icebp
add
ret
push
shll
clc
mov
inc
je
pushw
push
jb
and
push
mov
sub
xchg
pop
mov
call
pop
and
xchg
fwait
bound
inc
sub
push
in
fisttps
pop
dec
push
test
mov
and
out
sbb
mov
shrb
in
sub
in
or
pop
push
cmpl
das
cs
call
lret
add
into
pop
inc
and
add
lret
mov
cld
roll
shl
pop
jns
andb
pop
into
jecxz
inc
push
fldl
fstpl
xor
dec
lret
roll
pop
dec
popl
adc
sbb
data16
shlb
add
mov
pusha
adc
adc
fldl
and
xor
sti
and
pop
loope
iret
add
add
inc
pop
add
and
pop
jne
sub
pop
iret
inc
inc
ljmp
mov
popa
add
mov
sbb
mov
std
in
jmp
sub
mov
mov
inc
icebp
popa
push
jmp
cld
xor
ret
mov
ret
movsb
pop
scas
xchg
punpckhdq
in
xchg
insl
ret
lds
mov
aas
dec
and
jb
enter
mov
push
iret
add
add
addb
sub
sbb
adc
jb
imul
push
subl
bound
and
and
add
jb
fwait
jmp
and
sub
roll
icebp
dec
and
pop
sub
sub
push
mov
push
mov
test
xchg
incb
xor
xchg
lret
or
inc
fwait
popa
pop
inc
mov
sbb
inc
jne
xor
and
mov
mov
jmp
mov
add
pop
xor
add
sub
mov
pop
jmp
pop
add
psadbw
mov
es
pop
push
nop
dec
mov
stc
cmp
and
loope
cmpsb
push
mov
in
add
pop
jl
and
xchg
adc
push
inc
xchg
fdivl
and
inc
mov
or
fmuls
jmp
call
stc
push
push
mov
dec
test
lret
dec
pop
xor
jmp
ret
fldl
mov
aam
je
int
cmp
adc
lock
stos
shrl
aaa
shr
and
aas
fs
addl
push
loop
or
pop
not
andb
cmp
les
sbb
add
sub
dec
les
lods
mov
jle
fwait
jnp
xlat
inc
pop
add
lock
in
int
les
jecxz
add
shl
inc
iret
and
dec
out
out
xorb
les
orl
jmp
out
push
test
jmp
pop
push
loopne
push
or
stos
add
or
adc
hlt
jne
xor
cmp
mov
push
incl
pop
sarl
push
scas
add
stos
sub
jmp
leave
pop
sub
insb
jmp
add
add
icebp
pop
xor
add
bound
lret
pop
push
pop
dec
mov
addr16
rorb
lods
pop
push
clc
xor
outsl
xor
gs
movsl
jne
cmp
add
shrb
xor
rep
mov
test
jmp
push
rcrb
dec
push
rcll
pop
add
pop
test
cs
sub
pop
sar
data16
jae
sbb
dec
adc
pop
push
and
push
cmp
mov
add
mov
mov
xor
test
pusha
xor
inc
sar
cmp
addb
shr
outsb
jg
movsb
dec
cmpsl
cmpsl
fwait
aas
loope
cltd
je
fcomps
ljmp
mov
jae
pop
jb
pop
xchg
sbb
and
mov
pop
ret
pop
pop
push
cs
pusha
pop
adc
mov
movsb
andb
mov
stos
or
neg
clc
xor
cmp
mov
push
aaa
in
inc
les
mov
ret
sub
enter
and
jo
cmp
xchg
pop
clc
and
cmp
xor
mov
jbe
notb
jg
push
adc
scas
fisubrl
ja
insb
add
dec
mov
pop
shll
inc
xor
or
mov
push
add
jg
mov
pop
fadds
add
inc
in
xor
ds
or
and
adc
sbb
test
mov
les
add
jmp
not
lcall
mov
add
cld
sub
pop
jl
in
xchg
jp
cmp
sarl
in
and
inc
add
call
shll
mov
sub
xor
lock
dec
add
daa
pop
std
mov
fwait
xlat
push
jmp
sub
sub
mov
das
int
push
and
xor
add
add
fistl
loop
pop
sahf
addr16
mov
dec
pop
jmp
adc
and
icebp
mov
nop
pop
sahf
add
popa
lods
arpl
and
push
pop
pop
out
insl
push
pop
or
js
test
push
cmp
sub
imul
lret
inc
insb
jmp
mov
pop
sbb
or
mov
xchg
lock
out
in
xor
or
add
jecxz
pop
es
cwtl
leave
pop
cmp
adcl
ja
xor
xor
or
add
hlt
imul
push
jle
pop
loop
jns
and
popa
test
mull
sbb
out
inc
adc
cmc
mov
push
pop
cmpsb
mov
sbb
pusha
pop
sub
dec
add
pop
push
fs
and
pop
add
fistpl
mov
sub
shll
or
out
mov
mov
and
int
inc
pusha
data16
jmp
push
cmpsb
add
add
jp
add
push
outsl
inc
xor
fsts
adc
pop
cltd
cmp
shr
push
pop
mov
or
pop
xlat
rcrb
xorl
or
sub
outsb
in
sub
jbe
mov
aaa
add
inc
and
add
xor
lock
mov
mov
es
cmc
loopne
out
push
rorl
mov
inc
hlt
inc
add
js
adc
push
mov
and
nop
dec
ds
push
enter
sbb
add
std
pop
nop
test
pop
xor
sub
jmp
mov
shr
or
push
mulb
mov
and
xchg
dec
adc
pop
add
shr
add
sbb
jmp
int3
ret
pop
sub
dec
or
jno
shr
jb
mov
lods
pop
jmp
adc
pop
add
push
push
fldenv
push
mov
xor
jmp
ljmp
cmp
mov
cs
popa
repnz
pusha
push
or
pop
inc
aam
es
mov
pop
out
add
daa
insb
jo
icebp
cmp
shl
add
inc
xlat
jmp
jbe
xor
or
stos
or
sbb
add
mov
sahf
mov
in
nop
jecxz
mov
repz
fsubl
enter
ss
les
pop
lods
imull
xchg
xchg
sti
and
or
pop
fs
or
mov
dec
in
sub
push
jbe
fimuls
ret
pop
push
or
adc
mov
and
dec
dec
shl
add
xor
into
adc
add
scas
lods
dec
ret
add
add
out
je
sti
sbb
not
push
clc
xchg
mov
cmp
ds
adc
sub
pop
data16
push
jp
xchg
add
repnz
push
push
pop
adc
pop
jno
jnp
dec
clc
cmp
aaa
loope
mov
icebp
push
add
pop
nop
add
pop
push
and
arpl
add
jge
sti
nop
call
xor
cmp
mov
sbb
lock
ljmp
ret
sbb
or
cmp
xor
inc
jae
dec
mov
aam
div
or
jmp
rolb
push
inc
loope
nop
xlat
mov
pop
add
sub
pop
dec
xchg
xchg
jle
pop
sbb
jmp
jae
jmp
and
pop
jge
inc
nop
clc
je
adc
mov
sub
or
lahf
adc
mov
pop
and
pop
push
push
cld
xor
inc
cwtl
arpl
jns
sbb
jnp
mov
shlb
sbb
or
adc
jmp
mov
lret
rolb
dec
jo
inc
sub
inc
or
clc
mov
or
adc
repnz
rcrl
mov
push
mov
pop
jmp
push
cmp
repnz
mov
add
popa
inc
mov
js
push
push
cli
leave
and
inc
push
xor
lods
add
addr16
js
rcrl
jno
mov
push
test
push
out
sub
pop
dec
das
xor
faddl
pop
xor
xchg
sbb
mov
insb
cmp
rorb
mov
mov
or
out
adc
push
push
add
add
js
add
hlt
imul
sbb
in
lods
movsb
hlt
ss
pusha
jmp
shrl
dec
sub
pop
or
ret
inc
sub
stos
add
int
sub
sub
add
jne
pop
adc
or
pop
dec
addr16
pop
or
push
add
loope
sar
pop
dec
jae
aam
je
icebp
dec
sub
push
inc
add
mov
push
mov
mov
sbb
jb
xor
push
add
jno
cmp
roll
mov
or
lock
pop
or
or
jmp
stc
pop
dec
pop
test
inc
push
and
dec
rcl
add
or
rorb
andb
enter
push
adc
and
adc
in
out
xchg
cmp
push
inc
sub
xor
adc
pop
stos
lret
out
dec
pop
push
pushl
into
shll
dec
jg
jg
dec
mov
in
add
arpl
cs
aaa
push
data16
fsubr
inc
mov
mov
rolb
sub
rcll
or
insb
push
push
push
cs
sub
adc
mov
rolb
lahf
xchg
inc
fmuls
sub
sub
adc
adc
jbe
mov
mov
pop
iret
adc
and
jl
pushf
scas
inc
push
xor
es
cmp
push
fs
jl
add
nop
cmp
push
in
sub
pop
fistps
in
inc
and
inc
push
xor
push
shll
adc
and
dec
test
xchg
into
sbb
rcll
xor
adc
addb
rcr
xchg
cwtl
popa
dec
jmp
push
mov
cmp
add
mull
or
repz
mov
add
ret
or
jmp
nop
out
inc
sub
loop
adc
ds
xchg
or
push
mov
mov
es
loope
lods
insl
pop
xchg
or
sub
mov
sbb
sarl
push
pop
negl
adc
loop
mov
dec
orl
ss
testb
jle
add
pop
push
jecxz
xor
fadds
or
push
dec
sbb
pop
pop
imul
or
es
mov
push
mov
or
out
dec
pop
popa
daa
xchg
gs
insb
insb
lea
push
adc
data16
pop
pop
add
iret
push
lock
jmp
imul
jg
mov
out
cmpsl
imul
pop
int
cmpsl
sub
pop
pop
sbbb
sarl
cltd
ja
jns
pop
pop
push
mov
popa
xchg
mov
pop
push
outsb
mov
fsubl
or
pop
or
jmp
inc
xchg
cli
jo
mov
sub
mov
data16
ljmp
outsb
and
pop
sbb
test
mov
xchg
cmovs
dec
inc
iret
in
sar
ljmp
arpl
or
lea
pop
fiaddl
or
and
pop
add
cmp
adc
inc
sbb
hlt
xor
mov
push
mov
shl
pop
xchg
jmp
inc
je
mov
sbb
push
fstp
inc
loope
mov
dec
add
pop
mov
mov
cmp
mov
mov
sbb
and
bound
out
inc
sub
out
xorl
adc
rcpps
mov
orl
push
ret
stos
inc
fdivrs
or
jno
sbb
ja
xor
jmp
mov
pop
or
push
jmp
test
xchg
push
movsb
imul
xchg
inc
mov
sub
pop
push
and
out
out
adcl
xor
jge,pn
and
in
add
inc
in
movsl
stos
jbe,pt
xchg
dec
and
cmc
and
jmp
cmp
sub
sub
jbe
jg
sub
test
or
cli
dec
pop
and
lret
shll
xor
xor
push
mov
sub
adc
jmp
push
push
sbb
xchg
pusha
fidivl
push
sub
pop
add
dec
xor
pop
xchg
and
push
lret
or
xor
lock
pop
push
jmp
dec
imul
ja
jp
xor
cltd
jmp
xchg
es
andl
pop
and
add
sbb
adc
dec
jb
cmp
push
jmp
or
add
lcall
pop
push
sub
cmpsb
ret
and
adc
xchg
ret
les
invd
jmp
xchg
push
mov
subb
inc
or
insb
jg
adc
out
add
push
add
sahf
push
lds
adc
add
out
adc
xchg
add
mov
pop
adc
lret
push
sbb
xor
fsubr
sbb
push
push
sbb
lds
or
mov
jno
mov
stos
mov
sahf
imul
rcll
inc
push
rcrl
addl
fstps
or
imul
aas
pop
xor
ljmp
cs
mov
jnp
jmp
pop
test
pop
sub
jmp
pop
cmp
daa
xchg
popa
pop
shl
divb
paddq
sarb
cltd
popa
sub
add
fistps
or
push
gs
fmuls
rcl
and
or
js
daa
out
mov
addr16
fidivl
pop
jecxz
loopne
cmp
imul
or
jmp
leave
in
or
push
push
aaa
xchg
push
fnop
insl
xor
push
test
add
add
jns
subb
jno
xchg
les
sbb
mov
jmp
cmp
push
les
add
xchg
imul
gs
push
push
xchg
int3
in
lret
push
pop
insl
das
sub
xrelease
pushf
in
and
or
sub
jb
jo
cwtl
cmp
imul
test
addb
xor
or
shrl
jmp
ftst
sbb
mov
adc
add
jmp
aaa
and
add
std
jb
ss
cmp
dec
loope
nop
mov
out
mov
out
mov
sub
mov
jmp
inc
mov
ljmp
jecxz
mov
not
shl
sbb
xor
orb
cmp
data16
or
cmpsl
sbb
sbb
push
xor
test
push
inc
jl
mov
mov
adc
enter
xor
dec
dec
sbb
mov
adcb
arpl
loop
push
lret
push
pop
or
int
cmc
fdivs
pop
jae
adc
movl
cmp
sub
sub
push
in
enter
lds
out
test
test
call
mov
cmp
popf
mov
inc
pop
jo
sub
mov
push
fs
jmp
jnp
data16
xchg
iret
das
mov
inc
out
mov
add
cmp
ss
loopne
mov
fcomps
xor
jp
sub
jmp
scas
xchg
fcmove
in
xchg
std
addb
mov
cli
cwtl
jb
aad
mov
jg
add
repnz
jmp
pop
pop
and
mov
lock
imul
xor
cmp
mov
lahf
mov
pop
push
push
sub
movsb
and
sub
jb
shll
add
inc
add
and
adc
test
adc
push
dec
ja
mov
sub
idiv
cmp
jnp
push
enter
loope
fistl
test
push
lret
enter
jmp
subb
push
xor
insw
sub
ret
ret
cwtl
jns
sub
dec
inc
gs
jl
add
push
jg
jae
dec
or
jo
sti
cmp
inc
jbe
repz
rol
jne
add
push
into
add
pop
and
repnz
and
push
push
test
int3
add
clc
nop
ret
adc
pop
push
lret
cmp
lea
push
add
cmc
mov
jg
out
lret
push
dec
orb
ficomps
xchg
jmp
add
je
pop
cmp
sub
add
add
jne
xchg
sub
pusha
add
pop
cs
cmp
das
loopne
add
lock
inc
add
inc
mov
outsb
jmp
fisttpl
xchg
adc
mov
push
stc
or
cwtl
pusha
out
cmp
gs
jo
sub
or
rclb
add
arpl
mov
dec
xchg
push
add
aaa
test
gs
rolb
rorb
jle
push
push
push
and
mov
daa
js
and
cmpsb
sub
add
pop
gs
or
jl
jo
add
add
push
push
loopne
jecxz
adc
add
out
iret
mov
and
cmp
push
sbb
out
leave
xor
cmp
sbb
or
adc
sub
xor
adc
sarl
add
mov
lock
icebp
jg
dec
in
cmp
repz
dec
xor
in
xor
pop
pop
inc
mov
ret
ljmp
ret
repnz
inc
popa
push
cmp
cmp
add
mov
pop
addr16
test
cmp
lds
or
lods
fs
push
mov
inc
nop
pop
cwtl
pushw
subl
cmp
in
outsl
inc
rcrl
pop
adc
pop
push
push
sbb
jae
adc
add
mov
xchg
add
xor
in
add
sub
stc
fs
pop
pop
xchg
mov
dec
adc
add
push
ret
fildll
sub
add
mov
cmp
push
pop
mov
loope
adc
xor
mov
cltd
int
push
dec
inc
adc
shrb
sbb
add
xor
es
dec
adc
insb
dec
xor
inc
ret
call
cmp
add
dec
cmp
push
add
push
stc
rcrb
fmull
inc
test
leave
add
imul
int
push
and
aad
xor
mov
xor
pop
add
sub
bound
mov
mov
nop
inc
push
or
lock
lds
inc
lods
xor
xor
test
in
out
test
jecxz
jg
pop
or
mov
add
xchg
loope
pop
sub
and
nop
adc
enter
mov
inc
mov
sub
add
pop
cld
inc
pop
jmp
sbb
mov
push
ds
sbb
adc
or
push
or
and
inc
sbb
add
repnz
lret
fisubrl
mov
sarb
mov
push
jae,pt
mov
iret
xor
rcrl
push
loope
mov
jbe
shr
cmc
test
add
popa
orb
aaa
int3
dec
add
xor
hlt
sub
call
pushl
jb
sub
cmp
sub
stos
adc
xchg
pop
mov
fsts
jp
das
xor
les
mov
push
and
cmp
outsl
or
sub
sub
jno
andl
rcr
push
mov
adc
pop
loope
cli
pop
arpl
pop
adc
pushf
sub
fsubp
lahf
daa
lret
ret
incb
push
scas
push
dec
mov
push
shrb
jne
mov
xchg
jo
cmp
pop
iret
dec
test
loope
jae
lret
or
rcrb
cmp
daa
add
cmp
mov
or
rclb
add
dec
loopne
loop
xchg
cmp
xor
push
mov
mov
int3
jl
xchg
sub
sub
sub
adc
sub
xchg
inc
jmp
dec
mov
outsb
push
jmp
pop
push
xor
pop
pop
xchg
jmp
inc
mov
jp
adc
sbb
roll
jmp
femms
or
pushf
mov
jle
or
jmp
jmp
jmp
aaa
insb
test
jmp
mov
and
xor
in
push
test
xchg
lock
xchg
out
mov
or
inc
dec
push
or
dec
rolb
mov
pop
shl
add
adc
out
pop
insb
test
aas
test
xor
add
mov
bound
ret
enter
mov
mov
lds
mov
shll
mov
or
sub
rolb
xor
jae
daa
mov
or
not
orb
push
pop
pop
dec
jmp
sub
sub
sub
insb
cmp
pop
lret
cltd
loop
sub
jmp
adc
ficompl
add
jp
jl
push
push
cwtl
imul
jmp
cmp
inc
int3
xchg
pusha
and
js
add
pop
add
push
xlat
enter
loop
sub
pop
push
mov
xor
jle
popa
mov
sub
or
sub
xchg
xchg
inc
xor
xchg
icebp
add
xlat
sub
add
push
jp
call
ja
mov
jg
cmp
addr16
xor
pop
sub
cwtl
adc
inc
das
xchg
inc
mov
mov
sub
jmp
add
out
pop
or
dec
out
jnp
add
sbb
bound
add
notl
dec
insl
dec
nop
andb
sub
in
push
adc
fistpl
push
xchg
jae
mov
rcrb
shlb
push
pusha
mov
mov
add
cmpsl
test
xchg
or
leave
sar
rclb
mov
or
push
out
addr16
xor
aaa
mov
pop
add
adc
lret
mov
add
xor
jbe
sahf
popa
ret
jo
push
js
pop
push
jle
sub
dec
les
lcall
inc
mov
or
cmova
fwait
imul
mov
out
xor
lcall
fstl
loope
pushf
fcomps
enter
and
repnz
and
push
pop
jmp
in
faddl
jmp
out
mov
movsb
jecxz
ffreep
mov
or
add
dec
jmp
jmp
push
lds
pop
rcrl
sub
pop
jmp
push
mov
mov
push
mov
pop
inc
not
data16
mov
pop
xor
jl
push
jne
add
out
jmp
mov
outsl
aad
xchg
add
sbb
xor
push
test
cltd
adc
jp
loop
push
inc
insl
and
loope
push
pop
mov
push
mov
xchg
xlat
cmp
shrl
and
pop
mov
mov
hlt
inc
sbbb
loop
dec
push
lret
test
dec
int
and
mov
fstpt
cs
and
loop
sbb
jle
fs
sbb
jge
sub
push
push
mov
sub
or
lock
mov
out
lret
push
js
adc
push
scas
xor
rolb
push
inc
dec
sub
jne
fs
adc
sub
in
outsb
add
or
inc
sub
push
sub
add
xchg
icebp
cmpsb
xor
dec
inc
and
add
add
or
aam
mov
cmp
mov
shl
or
addr16
in
jnp
and
mov
mov
arpl
pop
hlt
sub
inc
mov
pop
andb
xchg
rorl
bound
loope
mull
inc
cmp
add
xchg
movsb
jmp
shr
or
pop
add
ds
xor
add
rcrb
add
pop
cwtl
test
rolb
add
xlat
mov
leave
mov
shl
fs
cld
scas
stos
inc
mov
popa
pushf
add
jl
mov
and
mov
cltd
lret
rorl
movsl
or
mov
add
jmp
sbb
ret
cmp
add
and
repnz
xor
and
ret
pop
pop
in
aaa
jp
xchg
cs
pop
es
add
pop
fcoml
add
mov
jns
push
or
sbb
add
fdivr
leave
imul
ret
decl
in
rcrl
mov
jmp
and
loope
inc
mov
ror
and
out
jmp
shrl
je
iret
or
int
movsl
mov
push
add
sub
out
out
int
add
push
inc
push
add
enter
in
xchg
mov
rorb
lahf
nop
call
or
pop
mov
dec
insl
rclb
je
mulb
out
adc
cmp
ss
push
inc
xchg
xor
add
mov
add
fsubrl
mov
mov
cwtl
lock
lret
sbbl
test
push
imul
sbb
imul
leave
fdivs
imul
dec
dec
cmpl
xchg
mov
push
enter
mov
fs
call
ss
arpl
lods
sbb
leave
int
je
or
popa
push
or
pop
pop
pop
pop
mov
xchg
mov
add
insb
dec
or
xchg
inc
mov
sbb
popa
push
shll
addl
cmpsb
add
test
pop
std
add
lea
mov
and
cli
cmp
sbb
add
mov
jmp
and
and
cmp
lods
pop
add
ret
pushw
jmp
adc
std
movsl
adc
push
addr16
outsb
jns
add
dec
lcall
popa
inc
or
mov
pop
ret
push
xor
scas
pop
xchg
xorb
sub
lea
ret
pop
adc
dec
add
cltd
fs
pusha
cmp
andb
push
lock
adc
dec
loope
popl
daa
jnp
mov
fs
mov
inc
mov
adc
or
xor
lahf
sbb
xchg
mov
inc
in
cwtl
enter
xor
sbb
sahf
mov
imul
pusha
and
neg
cs
or
xor
cmp
add
sub
push
xor
jle
in
mov
sub
int
adc
out
inc
pop
lcall
cmp
xchg
leave
jbe
xor
jle
cmp
inc
xor
mov
and
pusha
aam
shlb
pop
push
std
or
pop
icebp
fisubrl
push
test
movsb
mov
push
xlat
cmp
and
fadds
movsb
and
jmp
pop
insb
sub
imul
or
jo
jg
call
add
dec
icebp
add
in
adc
sub
stc
cmp
xor
push
call
push
cmp
insb
or
mov
int
in
sub
les
pushf
dec
push
jmp
repz
sbb
cli
not
sbb
shlb
jo
out
push
mov
fidivs
inc
loopne
dec
into
xor
mov
xchg
rcrl
push
pop
call
push
stc
divl
pop
and
dec
inc
xorl
sub
dec
mov
xor
ljmp
xorb
mov
repnz
lock
or
cmp
jecxz
les
cmpsb
cmp
das
add
and
jo
mov
xchg
divl
in
sbb
push
jnp
cld
std
imul
cmp
pop
enter
push
cltd
lret
or
mov
cmp
or
mov
xor
pop
sub
shrl
mov
dec
rclb
push
out
jl
sub
add
mov
lret
xchg
daa
sahf
aad
cld
test
jmp
inc
dec
arpl
mov
jmp
ret
ret
pop
nop
sbb
push
sub
push
jl
popa
repnz
xchg
mov
loop
movswl
mov
scas
lock
inc
testl
roll
pusha
or
mov
bound
aad
loopne
pop
fidivrs
xor
push
lcall
jmp
sbb
insb
mov
dec
sbb
arpl
and
je
mov
les
ss
sbb
pop
dec
or
iret
add
rcrb
call
dec
sub
jmp
and
movsb
add
mov
mov
pop
ret
lret
mov
pushf
push
push
dec
lock
movb
ret
push
or
push
adc
imulb
mov
push
mov
xlat
mov
cmp
pop
sub
pop
dec
push
lock
cltd
pop
xor
adc
stos
inc
mov
stos
dec
xchg
hlt
and
cld
stos
sbb
clc
jp
push
sub
bound
or
and
fildl
test
pop
xchg
xor
repz
jnp
fwait
inc
xchg
xlat
sub
jmp
enter
mov
je
das
icebp
js
rcrb
jmp
mov
sub
nop
jbe
add
in
push
or
adc
sti
mov
or
outsl
add
ret
cmpsl
rolb
not
fs
xchg
push
xchg
mov
jl
inc
mov
xchg
lea
pop
add
enter
xor
add
add
sub
push
cltd
or
fsts
mov
pop
push
addr16
loopne
loopne
adc
mov
sub
mov
adcl
push
sub
orb
mov
sbb
out
add
sti
test
xor
iret
xlat
and
add
out
cld
or
fiaddl
sub
loopne
push
xlat
cmp
sub
arpl
pop
adc
adc
fsubrs
or
adc
fildl
les
xlat
ret
jne
inc
mov
dec
xor
add
or
add
enter
inc
inc
cltd
ds
pop
mov
rorb
enter
pop
push
jmp
cmc
ret
fcoms
mov
mov
adc
add
pop
lds
cmpsl
enter
rcrl
lock
movsl
add
mov
loopne
jbe
adc
insl
adc
test
pop
xchg
and
js
mov
es
jecxz
lods
mov
adc
mov
fimuls
in
add
mov
dec
adc
cli
lock
leave
int
arpl
pusha
sub
jle
dec
lret
push
add
lods
and
add
out
sti
adc
aad
jb
jne
push
push
push
inc
pop
out
mov
in
sub
lahf
gs
and
push
xchg
je
push
hlt
test
movsb
mov
xchg
pop
mov
mov
dec
rcll
rolb
pop
inc
aaa
fs
in
imul
xchg
jg
dec
push
jo
roll
call
jo
jmp
icebp
lahf
loopne
push
inc
loopne
cwtl
sub
pop
movsl
dec
pop
xor
icebp
fdivl
adc
shlb
add
jo
ja
sub
stc
pmaddwd
addr16
jg
pusha
jo
cltd
repz
lahf
xchg
lahf
loope
sub
dec
fldenv
outsb
sahf
push
lods
add
mov
out
mov
xchg
push
add
mov
outsl
enter
popa
jmp
xor
rclb
jbe
add
sub
sub
push
jmp
movw
xchg
into
adc
out
loopne
sub
xor
or
add
and
loop
xchg
jmp
imul
xor
push
arpl
fsubr
es
test
mov
push
pop
adcl
xchg
add
int
mov
hlt
sub
dec
imull
sbb
pop
inc
mov
jp
mov
inc
add
push
or
jae
dec
shlb
or
pop
xor
push
mov
or
mov
sub
dec
pop
gs
adc
push
aam
add
ja
xchg
jmp
and
jg
sbb
lock
clc
jmp
in
mov
mov
repz
sub
adc
add
cmp
xor
fs
in
movsl
clc
or
push
sbbl
pop
cmpsl
leave
dec
xlat
fwait
lcall
into
xor
adc
pop
jns
add
pop
sbb
je
or
mov
push
push
cmp
jg
sbb
or
sub
aas
not
dec
xor
push
dec
enter
pop
rorb
into
test
sub
ljmp
jmp
ds
push
test
add
pop
jno
imul
popf
add
mov
pop
add
dec
call
sub
mov
shlb
mov
lock
cmc
or
push
mov
xor
lods
in
pusha
push
sbb
jno
and
test
lret
dec
popf
adcl
adc
repz
sbb
jecxz
aaa
pop
mov
outsb
dec
andb
jne
jno
fsts
mov
test
insb
popa
mov
in
lret
icebp
jne
rdtsc
pusha
dec
push
lahf
ret
fwait
jmp
mov
pop
js
or
loopne
adcl
and
cmp
pop
dec
xchg
add
xor
pop
test
adc
leave
clc
bound
cmpsb
sbb
jno
divb
mov
and
incl
nop
mov
enter
popa
jmp
fsts
add
jo
addl
or
ret
sbb
jle
call
pop
dec
bound
adc
push
movsb
sub
inc
or
in
push
sub
pop
adc
mov
push
call
adc
add
add
ret
rolb
xchg
aam
jecxz
jmp
pop
addr16
jno
pusha
mov
sbb
in
adc
dec
in
fisttpll
jmp
mov
and
pop
xor
mov
pop
inc
lahf
pop
pop
push
repnz
fistl
imul
sub
adc
clc
add
push
mov
mov
dec
push
mov
mov
mov
mov
sbb
ds
and
cs
ret
adc
sub
fsub
insb
push
pop
or
inc
ret
sub
sti
push
inc
push
or
dec
mov
bound
cld
dec
aad
push
add
shr
leave
clc
cmp
ss
jmp
movsb
fldenv
inc
js
mov
xor
dec
lods
imul
adc
sahf
pop
mov
push
mov
xchg
sarl
adc
fstps
sbb
adc
les
pop
pushf
push
sbb
mov
lods
inc
dec
flds
test
xchg
mov
sbb
into
lcall
mov
adc
and
inc
or
popa
frstor
dec
mov
push
inc
adc
pusha
jl
ret
push
ret
gs
mov
add
xor
cld
data16
mov
or
rcr
cmp
fists
pop
neg
or
mov
add
sbb
rorb
or
insb
dec
jle
daa
pop
xlat
jge
call
and
sub
gs
and
dec
xchg
int3
lds
into
imul
inc
inc
push
call
repnz
dec
push
cwtl
jbe
pop
lods
xor
or
adc
std
xlat
or
pop
addb
push
add
or
dec
aad
add
push
push
mov
push
jp
test
jo
sub
xchg
cmp
inc
push
rcrl
out
xor
jmp
pop
sub
xchg
and
push
mov
adc
pop
imul
es
iret
add
fldln2
in
sbb
push
adc
pop
pop
or
sub
fadds
or
test
je
pop
pusha
pop
mov
cmp
jecxz
add
push
cli
sub
dec
ret
jg
jl
das
jmp
les
pmulhuw
neg
add
out
ret
and
push
pop
ret
sahf
aam
arpl
lret
mov
adc
inc
out
push
mov
shr
push
add
mov
inc
mov
sub
ljmp
push
push
dec
inc
mov
mov
pop
xchg
iret
loope
loopne
hlt
mov
and
adc
or
sub
add
clc
pop
rcrb
adc
dec
into
add
cmp
lahf
add
sbb
add
pop
mov
adc
ret
shlb
sub
sub
and
es
fistps
add
pop
js
mov
jmp
mov
push
adc
mov
add
ljmp
sahf
enter
push
aad
mov
and
mov
xor
sub
jmp
mov
jge
mov
jo
cltd
shlb
add
add
mov
dec
mov
or
bound
sbb
movsl
dec
ror
fwait
xor
das
and
cwtl
adcb
pop
push
adc
int
mov
and
leave
xchg
mov
add
pop
xchg
inc
ss
sahf
cmp
xor
pop
push
xor
or
push
jmp
adc
rcrl
test
stos
push
ret
lea
dec
aas
mov
dec
ror
stc
sarb
mov
inc
or
prefetch
clc
push
adc
stc
mov
cmp
sarb
das
dec
jae
pop
movzbl
mov
cmp
imul
je
jnp
repnz
jmp
lcall
sub
cld
add
lcall
pop
push
loopne
shr
adc
in
cmpsl
add
and
enter
mov
sub
nop
test
xchg
jle
push
add
xchg
push
sub
sbb
pushf
pushw
fs
insb
add
mov
xchg
stos
andl
xchg
or
dec
jl
cld
ljmp
push
movsb
xchg
adc
icebp
mov
push
xor
scas
and
or
mov
aas
int
mov
or
loopne
push
mov
in
sbb
pop
xor
dec
pop
lcall
or
mov
add
add
mov
sub
adc
mov
rcrb
nop
dec
jge
add
jge
cmc
call
cmpsl
jne
int3
sub
js
or
or
xor
negl
cmp
int3
arpl
push
fisttpll
sub
ret
jno
sub
ds
cmp
add
pop
push
sub
push
fwait
mov
into
orb
adc
inc
sti
pop
lahf
addr16
movb
lock
test
push
lods
sahf
push
andb
mov
add
inc
push
dec
leave
and
and
pop
mov
mov
out
jmp
add
pop
push
cld
shll
xchg
and
adc
mov
in
add
push
addl
push
loopne
jle
push
sub
xor
push
jmp
shl
addl
push
cmp
mov
cmp
jg
icebp
outsl
sub
lcallw
xchg
add
mov
push
mov
add
mov
rcr
sbb
push
pop
inc
pop
sub
add
xchg
mov
insb
mov
push
adc
add
push
bound
jbe
sub
add
sub
jle
add
mov
sub
inc
clc
dec
lods
xor
pop
div
xchg
cwtl
pushf
add
xchg
aad
test
fmull
enter
and
add
xchg
roll
gs
inc
jno
loope
push
xor
call
xchg
adc
dec
adc
outsl
cmp
cmp
mov
sub
xor
je
mov
lods
push
das
fcompl
divb
jo
jle
inc
pop
pop
push
jbe
add
fs
or
out
pop
xchg
in
shll
fstps
sub
stos
out
adc
sahf
shl
mov
xchg
xorb
or
inc
add
xabort
adcb
xor
add
out
push
es
out
lock
or
add
aaa
xchg
pop
loopne
aas
mov
ret
push
lret
xlat
or
jns
mov
xor
dec
jmp
push
fldcw
aad
mov
sub
push
adc
xor
repnz
or
inc
and
pop
jb
cwtl
xlat
or
push
adc
out
adc
and
stos
hlt
xorl
pop
out
and
mov
mov
add
inc
lock
daa
cmovae
pop
add
push
jno
add
xchg
pop
shrl
push
pusha
and
pusha
movl
pusha
and
stos
jno
lcall
movsb
std
test
lock
bound
daa
pop
ss
sub
loopne
jbe
jmp
mov
pop
sahf
mov
daa
in
xchg
jnp
mov
notl
in
ret
ss
adc
adc
cmp
mov
jmp
call
or
cmpsb
adc
loop
inc
outsl
push
and
mov
aad
jno
test
push
xlat
mov
in
outsl
push
xchg
test
mov
icebp
out
fists
add
call
add
mov
xchg
lar
in
xlat
mov
jle
adc
into
mov
out
xor
sbb
out
bound
in
xchg
mov
xorl
shl
pop
cmp
ret
add
dec
jg
test
jmp
ja
push
lods
or
add
test
loope
mov
inc
xchg
push
cmp
dec
sub
xchg
sub
mov
jo
mov
push
mov
pop
add
das
sub
mov
sbb
mov
aas
pop
rcll
lods
stc
sbb
rol
fwait
sti
insl
into
sub
sbb
jnp
gs
imul
sub
xor
adc
or
in
adc
add
lds
punpcklwd
idivb
or
rolb
push
je
or
test
and
fwait
jo
inc
pop
jg
iret
pop
jns
movsl
jl
dec
fcmove
addl
pop
mov
mov
pop
pop
or
roll
mov
sub
mov
clc
add
adc
mov
notl
xor
xchg
loop
inc
mov
scas
stc
jge
dec
data16
or
sbb
mov
jmp
jns
daa
enter
leave
ljmp
pusha
cmp
sub
adc
enter
add
pop
and
and
sub
xor
rcrb
fidivl
ljmp
mov
iret
add
inc
jmp
dec
add
mov
push
adc
jmp
inc
xor
xchg
scas
addb
es
test
xchg
cmpw
test
test
cmp
jne
pop
jo
push
or
jmp
movsb
push
add
mov
adc
mov
inc
adcb
outsb
js
xor
mov
push
xlat
jmp
loopne
lret
testb
mov
jmp
sub
push
test
cltd
mov
das
xchg
jno
in
outsl
xchg
and
dec
sub
repz
or
add
gs
jne
dec
nop
cmpsl
inc
xchg
mov
xor
adc
xchg
jb
nop
push
and
testb
jbe,pn
add
add
sub
clc
add
mov
sub
sub
xor
inc
or
sbb
and
pop
cmp
ret
push
test
xchg
sub
pop
dec
xor
push
aad
adc
mov
inc
daa
sbb
and
sub
push
or
push
imul
out
dec
push
pop
cwtl
push
push
pop
pop
inc
lds
jae
xchg
xor
punpckhbw
pop
jge
push
or
pop
add
test
or
adc
sub
sub
push
arpl
inc
push
and
rcll
add
faddp
test
lret
pop
push
clc
sbb
cltd
and
stc
ds
xchg
lret
lods
pop
add
mov
fwait
add
xchg
adc
outsl
movnti
and
movsb
clc
lret
subb
in
repz
xchg
jge
daa
pop
insl
xchg
pusha
pop
mov
pop
lock
jne
jbe
mov
divb
pop
xor
and
pusha
aam
fdiv
mov
adc
add
movsb
and
mov
or
jmp
sti
mov
arpl
addr16
sub
cmpsl
cli
ss
mov
and
mov
test
cwtl
imul
std
popf
mov
adc
and
pop
arpl
mov
sarb
imul
ret
ret
lods
das
test
call
int
dec
mov
inc
nop
inc
xchg
mov
in
sub
jl
cmc
and
lods
repz
movl
iret
in
sub
adc
pop
and
int
pusha
sbbl
jmp
dec
mov
add
lret
push
and
outsb
ljmp
orb
jnp
push
jmp
outsb
pop
xor
dec
rcrw
or
sub
or
dec
or
imulb
imul
pop
pop
push
mov
xorb
loop
popf
mov
xchg
leave
jns
xchg
pusha
add
pop
sub
fcmove
inc
mov
mov
mov
cwtl
mov
sub
xchg
and
push
push
pop
inc
jmp
xchg
roll
test
mov
insb
add
addl
sbb
inc
mov
cmpsb
sub
pop
push
cmp
mov
jne
movsb
adc
hlt
or
or
ret
xchg
or
ljmp
shlb
pop
push
push
xor
in
inc
xor
push
jo
dec
or
int3
mov
push
add
pop
cmp
push
add
negb
sbbb
mov
mov
test
push
cmp
sti
add
lods
push
lds
xchg
sub
mov
sete
lea
dec
push
push
loope
fsts
clc
stos
adc
mov
inc
leave
ret
xor
daa
inc
jns
xchg
jmp
jg
xchg
subb
push
and
cli
pop
cmp
or
jp
jmp
std
sbb
dec
add
mov
dec
sbb
cwtl
shrl
loope
push
bound
jl
aas
add
xchg
gs
pmuludq
shlb
lahf
sub
pop
dec
inc
sub
es
ss
add
out
filds
add
or
dec
add
ret
mov
jne
sbb
daa
and
inc
scas
es
inc
or
xor
jno
xor
daa
repnz
mov
adc
xor
cmp
das
and
sub
or
adc
cmp
sti
popa
outsb
mov
aaa
outsb
push
adc
inc
int3
push
cmp
push
nop
lret
add
pushf
in
jmp
icebp
jno
pop
cmpsb
push
jae
subb
jg
mov
push
mov
sub
push
inc
ss
jae
jp
add
mov
push
mov
add
sbb
cmp
int
hlt
pop
test
and
xlat
mov
je
inc
adc
das
leave
jmp
rclb
call
push
xor
in
sub
lds
daa
adc
jp
daa
sub
mov
push
inc
xor
jno
popa
pop
rorb
add
or
shl
push
sub
xchg
mov
mov
mov
cmp
jle
std
lods
pop
movsl
mov
push
sti
pop
call
lods
dec
sbb
mov
sub
xor
add
xor
jmp
fisubs
jo
test
sbb
das
sub
ljmp
lock
leave
rcrl
sub
addl
jno
mov
jmp
mov
jno
inc
pop
daa
xchg
push
or
mov
jg
add
jmp
fidivl
cmp
or
stc
nop
add
inc
push
sbb
sbb
mov
ss
or
jle
push
xor
outsl
jp
dec
arpl
or
push
add
loopne
sbb
sbb
ficompl
fsubrs
cwtl
xchg
clc
pop
or
dec
std
mov
dec
sbb
negb
jmp
shlb
add
add
loop
pop
mov
mov
mov
fcoml
outsl
sub
ret
js
popf
or
pop
cmp
jns
lea
aaa
bound
js
jnp
push
xor
jl
scas
or
inc
and
mov
and
sub
push
in
mov
sarl
jp
lret
jmp
rorl
push
adcl
mov
aam
lret
nop
bnd
add
push
dec
and
pop
dec
inc
shl
adc
cmpsb
or
jp
sbb
cmp
mov
push
cmpl
orl
adc
pop
jnp
lock
pop
stos
jle
dec
pop
test
enter
sahf
push
out
rolb
ljmp
mov
mov
push
test
sahf
cmp
repnz
sarl
sbb
push
push
or
icebp
push
or
cmpsl
push
loopne
sub
inc
enter
add
movsl
adc
or
add
jmp
ret
aaa
or
sub
mov
pop
and
jmp
jl
cmp
xor
mov
pop
out
sbb
scas
jecxz
fcoms
stc
in
cmp
inc
daa
cld
loope
adc
popa
inc
sti
add
jb
pop
jne
xor
out
or
fsubs
jp
push
sbb
in
dec
cmpsl
es
xchg
add
mov
in
xor
push
mov
or
das
jl
loopne
in
mov
insb
xchg
sub
or
sbb
ret
fstps
xor
cmp
adc
push
out
push
add
pop
inc
sbb
sub
jmp
out
ds
loop
int
sbb
or
mull
dec
mov
dec
sub
mov
fildl
and
cmp
push
mov
sbbl
mov
andb
imulb
shrb
repz
decb
int3
ret
ret
or
pop
or
les
push
xchg
xlat
scas
mov
imul
inc
arpl
push
std
jl
in
cmp
dec
jo
xor
shll
aas
gs
xor
inc
test
lds
jbe
mov
sahf
adc
push
scas
pop
xorb
mov
adc
push
mov
decl
lahf
jle
mov
xor
sub
jae
popf
inc
sub
into
sub
xor
add
insl
js
dec
add
xchg
pop
shrl
popf
mov
sarl
jl
fmul
or
jbe
xor
jmp
out
lods
dec
jmp
in
jns
idivb
xchg
loop
andb
push
and
xor
xchg
shll
jmp
mov
xchg
add
aas
add
jae
pop
push
repnz
pop
lods
sub
push
shr
adc
pop
repz
push
mull
rcll
fistps
mov
and
ds
xchg
inc
aaa
in
jo
aad
in
rorl
in
add
nop
fsts
ret
add
icebp
push
jecxz
in
and
insb
inc
and
mov
lock
pop
mov
popa
push
or
xorb
cmp
mov
rolb
jl
add
mulb
test
xchg
rcrb
pusha
pop
scas
or
ljmp
sbb
and
push
lds
lods
lcall
loop
sbb
clc
mov
xchg
mov
mov
movsl
repz
cld
cwtl
pop
shll
sbb
mov
push
out
les
adc
fcomi
jmp
mull
jl
inc
mov
add
push
fbld
movsl
mov
sub
ficoms
ret
shlb
sbb
arpl
lea
fcoml
or
inc
imul
cmp
push
jmp
lret
out
adc
sub
add
adcb
mov
gs
jl
daa
rclb
jno
mov
adc
dec
lods
jb
push
rorb
mov
pop
xor
fistpll
add
sbb
aad
cs
popf
push
and
sbb
push
ja
cltd
sarb
daa
bound
movsl
mov
mov
outsl
shr
push
pusha
mov
shr
push
not
subb
jecxz
movl
jbe
cwtl
outsb
push
cmp
sbb
or
sub
pop
sub
pop
add
push
pop
mov
test
ljmp
arpl
out
je
pop
fmulp
add
cmp
pop
shll
jmp
call
bound
or
arpl
cltd
cs
inc
adc
das
bound
xchg
xchg
sbb
or
mov
or
loop
or
push
sub
lods
sbb
pop
dec
cld
push
pop
loope
outsb
lret
mov
jmp
sub
pop
fsubrs
mov
cltd
push
sbb
aad
xorl
add
not
dec
sbb
mov
inc
icebp
jl
or
dec
cmpsb
pop
pop
adc
mov
add
push
fstl
adc
mov
dec
shl
add
push
pop
aas
pop
push
gs
scas
inc
cmp
mov
daa
jg
outsl
mov
outsl
adc
out
loop
insb
dec
xchg
jnp
lds
scas
test
popa
adc
pop
cmp
addb
mov
add
js
inc
pop
mov
imul
or
addl
jmp
rcrl
xchg
sub
mov
int3
mov
pop
add
incl
inc
or
pop
xchg
fcmovb
loop
sub
or
push
adc
jmp
sub
pusha
add
negb
xchg
push
imul
jmp
sbb
sarb
jle
cmp
push
add
inc
jmp
mov
ret
andl
add
jecxz
add
cwtl
repz
in
push
daa
mov
shrb
add
ds
mov
data16
mov
lock
in
or
jg
inc
mov
add
aas
insb
clc
or
jno
int3
test
ss
sub
mov
mov
subps
xor
jmp
fiadds
push
push
push
mov
xor
movsb
rcrb
jmp
rolb
lret
in
ret
setb
cmp
pop
and
lock
push
cmp
gs
outsl
xchg
jmp
ljmp
and
cmc
and
push
push
lds
pop
test
mov
cmp
push
mov
adc
test
imul
lea
xchg
aas
push
cli
call
subb
push
cwtl
movsl
pop
cmp
mov
loope
mov
xor
cwtl
imul
mov
mov
xor
into
mov
jmp
push
mov
clc
push
pop
lahf
dec
sbb
pusha
xchg
popf
jp
je
repnz
inc
pop
pop
jmp
mov
jno
jns
add
inc
sar
cmc
aam
sbb
js
mov
inc
push
nop
mov
inc
popa
out
loopne
test
jle
sbb
add
iret
or
lods
mov
orl
add
cmp
sbb
ds
subl
xor
subb
jbe
arpl
imul
sub
inc
scas
ss
pop
loopne
out
fcomps
cli
aad
or
sbb
mov
lret
daa
faddl
test
ret
inc
fidivrl
push
adc
dec
sbb
rcrb
not
dec
mov
mov
add
call
mov
sub
cld
inc
shll
addr16
jo
jb
or
xchg
adc
dec
lret
iretw
les
call
mov
and
mov
rcrl
cld
jb
call
jnp
sbb
cmp
mov
push
push
push
jmp
adcl
xchg
dec
xor
stos
das
popf
dec
add
sub
dec
xchg
imul
push
test
xlat
ljmp
mov
int
mov
push
and
push
data16
mov
sub
push
fadd
push
mov
in
push
mov
cmp
jbe
repz
or
adc
aas
mov
xor
sahf
imul
mov
pop
loop
std
sbb
jmp
mov
inc
movsl
add
cld
jp
mov
push
loope
rcll
je
sbb
out
push
jmp
mov
ffree
imul
pop
pop
push
mov
dec
daa
xchg
clc
inc
push
push
mov
adc
call
mov
adc
or
scas
inc
rcrb
dec
push
pop
loopne
bnd
jae
push
dec
add
inc
sahf
aas
and
and
mov
mov
pop
pop
push
mov
add
xlat
adc
sbb
push
adc
mov
sbb
mov
and
adc
insl
dec
mov
fs
xchg
sbb
les
dec
fsts
cmp
adc
out
pop
add
mov
je
cmc
pop
xchg
xor
cmp
lods
je
add
sub
add
leave
je
push
icebp
fiadds
out
or
xchg
push
pop
add
dec
mov
pop
shrl
ljmp
push
popf
bound
push
inc
add
push
in
dec
aam
andb
sub
mov
push
enter
bnd
mov
xchg
push
fstpl
pusha
dec
sub
xchg
mov
jge
test
pop
and
cmp
addl
cltd
dec
cmpsb
daa
mov
jno
add
add
in
lret
sub
jle
add
lock
add
js
and
add
or
aad
xor
aas
or
test
xchg
cmp
push
in
leave
add
dec
addb
and
push
sub
add
or
or
loopne
in
loope
repz
adc
sbb
arpl
mov
lods
jg
movsb
nop
or
mov
xchg
rolb
xchg
test
pop
mov
jecxz
loope
jp
mov
inc
mov
xchg
mov
dec
add
sub
push
cmp
int3
out
mov
testb
ss
mov
outsb
fs
in
clc
hlt
sbb
int3
fwait
push
aad
mov
push
insl
incb
icebp
and
or
add
pop
pop
mov
xchg
or
mov
icebp
dec
sub
hlt
inc
lcall
fmul
push
gs
adc
repz
das
push
pusha
cwtl
add
add
jecxz
fistps
mov
inc
mov
adc
pop
mov
sti
and
xchg
dec
enter
push
push
inc
pop
sti
imul
or
or
push
inc
xchg
loopne
and
aaa
pop
adc
pop
dec
add
out
pop
jle
inc
add
mov
jmp
sub
popf
call
pop
pop
jo
cltd
sbb
pushf
add
movsb
add
ljmp
mov
mov
or
jge
xchg
lock
jne
hlt
sub
jns
mov
add
jmp
xchg
push
adc
or
push
jle
mov
add
jmp
mov
icebp
pusha
hlt
sbbl
rcl
mov
and
xchg
lock
inc
hlt
mov
dec
sub
xchg
loope
jnp
jmp
adc
bnd
pop
inc
and
and
jnp
sub
xor
adcl
inc
pop
nop
mov
cmp
mov
inc
push
sbb
aad
adc
pop
rolb
mov
pushf
xchg
and
lret
outsb
pop
dec
leave
fidivl
adc
lret
adc
cli
fbstp
les
ret
subl
jmp
mov
push
pop
mov
adc
jne
lahf
adc
adc
rolb
es
and
sbb
xor
adcb
mov
jle
sti
xor
bound
loop
cmpsb
adc
or
or
or
enter
mov
pop
lods
mov
movsb
cmp
enter
jns
and
inc
xor
jbe
addr16
je
test
mov
jmp
lods
push
test
scas
nop
int3
lods
cmpl
mov
sbb
xchg
inc
mov
xchg
sbb
fs
out
adc
add
mov
add
and
popf
call
dec
arpl
push
add
sub
loope
add
and
cs
or
sub
xor
pop
push
mov
add
aas
mov
test
add
and
push
orl
sub
stc
pusha
push
and
loope
loope
cmp
dec
mov
das
lock
pop
icebp
scas
jb
xor
out
and
movsl
sbb
push
mov
faddp
adc
xorb
sbb
shl
int3
pop
jecxz
pop
sbb
sbb
jb
in
hlt
daa
popw
jno
shlb
int
sub
imul
add
ss
jmp
lods
pop
daa
mov
ret
fidivrs
pop
add
pushw
aad
xor
or
jbe
fs
jmp
inc
popa
xchg
stos
add
shll
repnz
dec
mov
ds
push
int
sub
pop
xchg
inc
or
jo
in
jle
sub
or
in
dec
xor
mov
pop
sub
adc
pop
shll
ret
mov
insl
aam
lahf
ficoml
or
mov
pop
lahf
mov
stc
pop
cltd
sti
and
sbb
repz
subb
and
jnp
in
out
or
cs
pop
test
or
mov
jge
xchg
xor
call
cs
jmp
add
lods
mov
mov
in
push
jnp
push
js
push
test
pop
cmpsb
mov
push
popa
xchg
sahf
loopne
mov
adc
mov
ljmp
jl
jp
jmp
pop
push
jae
mov
sbb
iret
pop
push
mov
or
add
jo
or
mov
and
movsb
popf
ret
mov
inc
and
loop
inc
inc
sarl
adc
decb
pop
mov
insl
sbb
push
jne
clc
adc
xor
dec
jmp
sub
dec
ja
out
daa
lcall
shrl
adc
sub
sub
in
hlt
into
lahf
enter
cmp
cmpsb
add
rorb
lahf
pop
call
loop
or
aam
add
sti
shlb
out
roll
mov
pop
ror
mov
lret
ret
ljmp
inc
aam
xor
dec
daa
jmp
movl
bt
inc
xchg
jne
aaa
sub
mov
sbb
fistps
cmp
das
repnz
push
push
iret
xchg
pop
push
add
dec
cs
cmp
sti
rorb
jbe
daa
jl
rcrl
adc
es
arpl
add
mov
sub
aad
stc
push
testl
sub
rcrl
scas
xor
push
push
cmp
scas
push
inc
ja
push
pop
dec
out
lock
stos
sub
adc
inc
clc
js
pusha
sub
mov
add
mov
dec
push
out
pop
loope,pt
add
loop
aam
push
push
push
sub
adc
xor
add
push
xchg
adc
fxch
aam
cmpsl
dec
sbb
mov
jge
neg
xchg
pop
xchg
mov
jle
mov
jge
popf
dec
xor
or
xchg
je
xchg
dec
mov
sub
mov
adc
pushf
scas
pop
jge
or
pusha
dec
xor
inc
testb
xor
pop
add
jmp
cmp
and
and
sbb
jmp
push
lds
ljmp
jmp
and
cmp
inc
pop
ja
jmp
cmp
push
dec
push
lods
ljmp
lret
push
shlb
jne
lock
cmp
jle
push
cmpsl
stos
sub
xchg
into
cli
inc
je
inc
mov
orb
push
cmp
out
inc
adc
jg
or
outsb
inc
dec
inc
inc
mov
data16
or
repnz
sbb
jbe
mov
sub
test
test
inc
and
xchg
pop
or
xchg
out
mov
cli
sbb
xor
stos
sub
push
pop
push
inc
das
js
js
popf
xor
sbbb
push
rorb
mov
mov
or
arpl
adc
add
dec
and
icebp
xchg
imul
add
movsl
mov
sub
insb
adc
pop
cltd
ret
cld
pop
aaa
pusha
popa
lods
inc
cmp
xor
std
mov
jmp
push
ret
lea
out
jmp
jp
das
sbb
mov
popf
push
jl
mov
icebp
sub
mov
jne
push
sub
std
add
push
icebp
dec
es
sbb
adc
jecxz
sbb
xlat
adc
orb
das
push
rorl
imul
push
cltd
sbb
jmp
mov
push
out
add
cmpb
enter
loope
cmp
cmp
jmp
push
xor
xor
aas
lret
and
push
popf
jno
sbb
ret
stos
jmp
sub
sub
and
outsb
pushf
cs
loop
jle
adc
roll
addr16
xchg
loope
mov
stos
js
add
out
and
filds
xor
loop
jb
roll
movsl
dec
daa
clc
or
cmc
es
std
adc
xchg
jae
add
sbb
aad
jb
sbb
lcall
das
divw
sbb
movsb
hlt
pop
out
mov
push
mov
xchg
mov
inc
pop
outsl
pop
adc
enter
stc
push
add
pop
jg,pn
or
jne
or
dec
xor
push
add
inc
and
lret
lock
sbb
rcrl
fisubl
cwtl
imul
cmp
add
test
sbb
rorb
sahf
mov
das
xor
inc
lahf
inc
xor
shr
in
cmp
cmp
add
and
xchg
pop
mov
pop
test
cmp
std
push
inc
or
dec
sub
imul
adc
push
add
jmp
orb
imul
and
sub
adc
mov
or
jecxz
inc
flds
sub
jns
cmp
pop
xchg
in
or
add
pop
test
rcrl
mov
sbb
pop
sub
ljmp
cmc
push
jbe
sub
xchg
fldenv
dec
in
das
fs
dec
or
pop
sub
dec
in
mov
daa
inc
icebp
pop
addb
mov
loopne
adc
dec
lods
in
ret
and
inc
push
sub
lock
pusha
ficoml
mov
pop
movsl
mov
repz
sbb
clc
add
inc
jne
cmp
js
addr16
jmp
pop
push
fstps
mov
xor
push
sbb
sbbb
cmpb
nop
cmp
add
pop
mov
sbbb
arpl
call
sti
push
imul
pop
imul
pop
int
test
push
test
push
xor
out
and
or
pop
sub
xchg
xchg
inc
outsb
outsl
loope
loopne
pusha
leave
cmc
clc
fiadds
pop
cmc
xor
and
add
jne
rcll
mov
or
cwtl
leave
push
adc
cmp
lods
or
fwait
sbb
and
add
je
sub
xchg
pop
nop
push
push
or
js
dec
sub
test
lods
push
leave
std
scas
nop
jmp
pop
sbb
jmp
fnstcw
js
dec
pop
rclb
add
out
pop
xchg
cs
sarl
mov
nop
rorl
xchg
ret
pop
stos
add
test
adc
fneni(8087
push
mov
stos
rcr
ds
outsb
cmpb
mov
adc
shrb
xchg
les
mov
jg
xrelease
xor
lock
sbb
jne
in
xor
fisttpl
mov
add
push
inc
test
test
adc
stc
int
das
xor
rorl
push
lret
pop
outsl
imul
mov
loopne
int3
xor
mov
mov
notl
cmp
pop
mov
jmp
mov
sub
rcll
xchg
or
std
and
dec
push
nop
push
sbb
cmp
adc
or
mov
arpl
cs
inc
pop
rorl
pop
push
enter
cld
xor
add
push
jne
dec
xchg
mov
in
jp
mov
mull
jg
in
lahf
inc
pop
test
fistpl
xor
dec
aad
add
xchg
sbb
loopne
arpl
jle
mov
adc
mov
mov
mov
orb
xor
les
shlb
jmp
mov
xchg
leave
jp
dec
and
cmp
mov
jo
scas
xchg
cli
and
mov
js
das
sub
add
inc
outsb
notb
je
inc
push
push
and
clc
clc
mov
repz
sbb
push
mov
pop
jmp
xchg
pop
mov
add
ds
jae
ss
sub
insb
jmp
in
xchg
ret
loop
mov
adc
pop
out
cmp
jmp
adc
or
jns
ret
add
cmp
repz
or
jb
jns
jmp
push
dec
fnstsw
adc
ds
add
sub
int3
sub
add
lock
pop
cmpsl
jno
loope
sbb
mov
aas
and
jno
icebp
jmp
lds
push
iret
xor
pop
clc
fdivp
xlat
push
push
into
cmp
pop
dec
leave
hlt
orb
add
ljmp
push
xor
notb
fistpll
lahf
daa
test
pusha
xorl
add
repz
cmpsl
pusha
jmp
or
popa
pop
or
sub
sub
sarb
push
push
jle
iret
push
leave
ja
xor
inc
inc
nop
fwait
xchg
insl
pop
pop
mov
inc
pop
shr
popf
xorb
xor
ret
sub
pop
lea
lock
popa
pop
cmpb
pop
and
xor
adc
test
dec
and
aaa
jl
leave
push
or
test
push
scas
add
sarb
jle
push
ss
add
or
loopne
cld
aaa
and
dec
or
dec
add
pop
je
pop
ja
push
jmp
inc
add
sub
dec
mov
bnd
jb
sub
ss
cmp
and
pop
add
xchg
xor
pop
ror
add
cmp
mov
pop
push
shll
push
xchg
sti
fsubrp
sbb
out
add
push
sbb
movsb
inc
add
pop
push
ljmp
xor
dec
and
imul
test
push
call
pop
pop
cmpsb
daa
pop
test
ja
lods
or
divb
adc
mov
dec
jmp
push
and
cs
inc
jmp
mov
dec
mov
add
lods
add
pop
sub
and
ja
lahf
adc
dec
jle
sarb
dec
loope
push
push
aam
aas
adc
ret
and
sub
jmp
rcll
les
test
repnz
pop
pop
inc
xor
ds
push
mov
mov
mov
pushw
mov
sbb
sbb
sub
or
neg
and
push
inc
mov
push
pop
or
hlt
pop
and
popf
imulb
and
ljmp
decl
hlt
inc
imul
jg
push
push
cmp
push
ljmp
gs
pop
repnz
and
pop
pusha
fldt
nop
mov
and
cmpsb
lahf
imul
add
push
sub
imul
ret
cmp
jnp
adc
or
sub
call
imul
mov
in
mov
es
or
ljmp
add
dec
cmp
ret
outsb
add
aas
mov
and
push
in
js
adc
out
push
dec
mov
mov
jmp
orl
sbb
repz
cmp
xchg
sbb
and
adc
cmp
sbb
stc
pop
mov
push
mov
or
stos
xchg
jg
mov
jle
pop
dec
lods
inc
push
add
mov
mov
pop
pop
push
sbb
popa
sub
sub
jns
pushf
mov
jl
push
add
sub
cs
shl
mov
mov
push
inc
or
mov
test
mov
cld
ficomps
push
ret
inc
mov
xor
ljmp
sbb
fldcw
call
adc
jl
clc
mov
std
mov
push
dec
out
test
decb
jmp
popl
xchg
jbe
xor
inc
mov
mov
arpl
insl
inc
push
std
and
push
movsl
push
rcl
add
jl
fistpll
jp
mov
mov
xchg
in
jo
xchg
jmp
xor
ljmp
and
push
lcall
add
sbb
or
mov
mov
jmp
push
pop
negb
xchg
cld
aaa
adcl
mov
cmp
pop
daa
sub
pushf
mov
dec
mov
mov
leave
into
icebp
insb
push
xor
inc
cmc
bound
popa
dec
outsl
adc
stc
inc
into
rcr
jmp
rolb
jne
lea
dec
xchg
push
lret
adc
add
inc
or
mov
and
ja
movsl
mov
sub
pop
adcl
mov
test
and
pop
push
push
sbb
adc
inc
or
jecxz
neg
lret
call
fcomp
or
stos
sub
or
sbb
call
daa
jmp
inc
jb
sbb
jmp
mov
addb
push
mov
add
xchg
sahf
add
in
lds
inc
gs
dec
imul
ficoml
push
ss
mov
adc
and
and
stos
inc
icebp
push
mov
into
fldl2e
sub
inc
shl
sbbl
leave
xor
out
push
popf
loopne
inc
cmp
push
and
mov
sbb
mov
dec
and
xor
outsl
ficoml
aam
add
add
push
and
jb
shrb
sbb
mov
imul
shl
mov
rolb
inc
or
inc
lret
and
add
xor
sar
jne
add
into
jmp
xor
arpl
sarb
or
pop
fs
sbb
inc
or
mov
or
jae
xchg
cwtl
lods
mov
push
sarb
push
aas
xchg
xor
imul
and
ljmp
dec
inc
arpl
add
add
pop
in
pusha
jle
and
adc
ja
or
cmp
aad
push
stos
fldt
dec
lods
and
xchg
jecxz
cli
add
test
push
add
mov
sbb
mov
pop
aaa
std
adc
jmp
mov
xor
imul
pop
nop
jge
andl
mov
divb
mov
imulb
add
mov
sarl
popa
adc
cmp
pop
push
repnz
orb
push
push
idivb
fmuls
jle
sahf
jg
sbb
push
popa
arpl
push
mov
hlt
cmpsb
sub
roll
inc
fdiv
inc
and
icebp
push
fs
je
stos
cltd
rorl
sbb
dec
stos
cltd
inc
or
pusha
das
push
mov
cmpb
or
jmp
xor
aaa
pusha
mov
pusha
mov
test
push
add
sub
mov
outsb
inc
cmpl
push
cmp
pusha
sub
sub
pop
jge
jmp
imul
test
push
fnstsw
push
int3
pop
inc
push
nop
push
push
fldcw
imulb
or
xor
fldl
add
jg
xor
sub
mov
icebp
inc
icebp
fstl
int3
or
js
lahf
xchg
cmc
push
out
scas
xor
pop
loopne
mov
outsb
xorb
or
adc
in
mov
das
pusha
inc
popf
adc
aas
test
add
push
mov
xor
xor
cli
in
or
jbe
es
or
inc
mov
or
pushw
mov
daa
pop
and
sarb
xor
push
pop
pop
clc
cmp
xchg
mov
push
adc
insb
rclb
mov
xor
pusha
mov
mov
add
or
call
add
scas
xchg
jbe
xchg
jle
mov
js
mov
dec
pop
sub
jmp
push
test
aaa
loopne
push
ljmp
in
push
mov
mov
pop
popa
dec
les
push
aad
iret
add
lahf
popa
popf
push
and
push
ja
pop
dec
xor
or
mov
sti
dec
imul
ficoml
fs
pop
push
mov
mov
xchg
or
je
xor
and
popl
mov
ror
and
xchg
and
cmp
xchg
cmpsl
sub
aam
negb
in
xor
sarb
push
aad
rol
vmovaps
idivl
loope
mov
dec
mov
push
mov
bound
mov
das
or
inc
inc
push
scas
sub
dec
inc
gs
nop
lcall
out
adc
inc
stos
xor
add
sub
aas
cs
pop
testl
in
add
add
sub
ljmp
lock
inc
sbb
pop
jae
mov
dec
sbb
mov
out
jmp
dec
cmp
nop
mov
inc
sub
jmp
cmp
ficomps
out
addb
inc
push
out
xchg
movsb
inc
in
jp
mov
mov
test
xchg
mov
jecxz
adc
dec
cs
mov
push
test
mov
jne
or
ret
or
mov
mov
cltd
sub
int
pop
jl
das
aam
dec
std
adc
clc
aaa
es
loop
js
pushf
pop
mov
mov
imul
repnz
fbld
test
xchg
mov
mov
dec
pop
mov
sti
pop
hlt
xchg
add
dec
repz
lds
or
sbbl
sahf
xor
rolb
jnp
or
jmp
jp
inc
cmpsl
push
mov
dec
xor
notb
mov
sub
bound
and
xor
dec
sub
add
aad
jnp
inc
outsl
subl
clc
pusha
pusha
imul
jecxz
cs
push
sti
popa
sbb
leave
das
and
push
stos
pop
test
lods
or
and
faddl
in
add
push
adc
push
jno
cmpsb
adcl
aaa
sub
inc
and
fisttpl
lds
mov
loopne
push
test
sub
and
pop
pop
mov
xchg
add
mov
mov
mov
adc
aam
andb
sub
xadd
add
mov
pop
adc
dec
mov
jl
mov
nop
int3
stos
pop
add
jno
inc
pop
push
sbb
fwait
mov
pop
push
sbb
not
or
pop
sub
jle
sbbb
out
add
jmp
jmp
mov
xchg
jmp
or
jp
jae
jle
or
push
pop
dec
jns
add
enter
in
mov
imul
jns
dec
add
icebp
lret
jge
add
and
stc
mov
insl
fisttpll
and
adc
dec
mov
ret
test
jno
test
bnd
push
and
or
adc
loope
scas
mov
or
std
mov
das
fsubrs
inc
popa
add
pop
sbb
out
push
rol
or
adc
push
or
and
sub
lcall
fwait
bound
push
mov
bound
lcall
sub
pop
and
pushl
lahf
jecxz
lret
mov
or
cmp
mov
adc
jmp
popf
mov
push
pop
and
and
add
insl
add
rcr
jle
pop
and
adc
and
push
jmp
or
adc
jb
pop
add
das
add
out
rclb
mov
inc
sub
lret
das
lock
mov
dec
ljmp
or
aad
stc
and
andl
cli
pop
or
inc
and
pop
xor
push
sar
test
rcll
jmp
insb
in
daa
mov
fidivs
xchg
mov
out
mov
add
daa
mov
cmpsl
mov
jns
mov
shrb
push
int3
sarb
cmpsl
pop
add
cmc
add
inc
in
in
filds
or
pop
xor
xor
loop
pop
mov
inc
or
clc
push
xchg
jmp
xor
pop
dec
cmp
mov
fnstsw
adc
je
loop
es
daa
and
jnp
sbb
lret
std
or
sahf
sbb
popa
or
inc
pop
pop
adc
hlt
daa
xlat
adc
out
or
push
sub
jo
push
push
loopne
int3
jno
pop
daa
movsl
jl
arpl
mov
jne
inc
cmpsb
pop
push
jmp
clc
push
sub
add
dec
push
jg
icebp
fsubrl
pushf
jg
dec
ljmp
adc
push
xor
or
lret
int3
sbb
add
addr16
cmp
in
mov
add
fisubrs
fidivs
scas
inc
jmp
sub
lahf
cmpsl
xor
add
or
daa
and
adc
add
xlat
xchg
xchg
imul
dec
loopne
push
push
xorl
int
in
or
jp
sub
movlps
mov
ret
jmp
insb
hlt
push
insb
xchg
pop
jbe
mov
sub
adc
aad
inc
adc
insl
adc
push
leave
pop
data16
dec
jg
xor
fwait
iret
or
flds
and
mov
in
mov
cltd
cli
pop
push
adc
add
push
sbb
cwtl
dec
and
lcall
mov
cli
add
incl
or
add
push
mov
jmp
adc
mov
scas
daa
push
jp
jmp
xor
push
scas
add
call
mov
not
xchg
repz
sub
loopne
in
dec
or
add
stc
xchg
cmpsb
pop
jmp
add
inc
clc
mov
pop
cmp
mov
adc
cmp
adc
or
jno
cwtl
xorb
lea
in
pop
popf
add
adc
in
xor
jo
sub
mov
pop
sbb
pop
mov
inc
sub
popa
add
jmp
test
mov
in
push
out
es
xchg
add
inc
mov
jmp
xorl
push
pop
push
mov
adc
dec
mov
mov
adc
enter
addr16
lods
outsb
fmulp
stos
xchg
test
xchg
push
and
mov
dec
inc
cld
in
sub
pusha
or
lahf
mov
repnz
lock
cld
and
daa
push
cltd
xchg
add
mov
rcll
bound
lds
test
inc
xchg
push
add
add
hlt
cmpsb
xchg
inc
and
pop
call
loope
hlt
dec
pop
lahf
bound
and
pop
adc
aaa
test
mov
and
pop
cmc
adc
fstps
and
jne
mov
outsl
add
aas
cmc
inc
pop
xor
shrl
pop
orl
jbe
or
add
ret
dec
rcrl
xchg
push
push
adc
jecxz
in
or
sub
push
xor
push
jae
imulb
adc
push
imul
adc
mov
and
inc
daa
pusha
mul
push
outsb
inc
repz
mov
xchg
pop
ds
jae
mov
push
inc
pushf
push
andl
jg
jge
insl
jne
outsl
add
fdivr
add
add
ret
addr16
push
aam
imul
loopne
jmp
pop
pop
insb
pushf
sbb
xchg
add
enter
nop
push
and
std
mov
mov
mov
shr
add
cmpl
imul
xchg
push
les
arpl
jmp
out
dec
insb
sbb
mov
lods
outsl
popf
pop
and
xor
xor
add
lods
add
push
in
push
mov
jb
push
aad
mov
cmp
dec
les
clc
out
popa
mov
cld
rcrb
push
mov
pop
sarb
or
cmp
jmp
cld
lods
push
rcrl
mov
in
mov
lcall
xor
inc
neg
add
ja
inc
dec
jp
adc
cmp
xor
cmp
cs
jo
mulb
inc
loopne
push
pminsw
add
jl
jp
xchg
nop
sbb
ret
sbb
shr
je
mov
aas
mov
dec
rolb
test
mov
aas
fsub
cmp
imul
xor
ja
push
sbb
sub
push
out
push
clc
in
add
dec
adc
add
mov
sahf
jge
sub
clc
jmp
mov
ret
push
sub
dec
dec
add
sub
test
cld
inc
and
inc
imul
je
and
clc
out
jns
repnz
and
popf
test
cmpsb
jne
adc
xchg
or
jae
lahf
icebp
jecxz
adc
fnstenv
jmp
popf
mov
stos
pushf
mov
push
inc
mov
xor
push
loopne
add
or
cld
jb
dec
arpl
in
bound
and
stos
fbstp
mov
or
lcall
fnstcw
mov
jnp
mov
push
jno
xor
push
push
sub
andb
push
mov
jmp
pop
cmpsl
adc
xor
jne
jb
lcall
push
shl
xchg
mulb
or
into
arpl
mov
mov
cmpsb
daa
sti
mov
dec
sbb
sbb
in
sbb
fisubrs
jmp
push
mov
pop
shr
mov
shl
daa
jae
clc
jge
jmp
ss
rcl
fs
aas
adc
mov
ret
ja
subb
jne
js
pop
or
pushf
sub
dec
dec
xor
daa
lods
add
jno
fs
mov
fisubrs
and
movsl
push
dec
test
and
es
mov
xchg
jb
test
or
mov
mov
add
mov
int3
daa
xor
fnsave
mulb
lret
sbb
jbe
jg
fists
test
jae
insb
jp
pop
cltd
les
imul
add
mov
fdiv
ss
cmpsb
jmp
inc
add
add
jmp
xor
leave
rolw
enter
pop
out
es
stos
sub
dec
adc
inc
repz
or
nop
rcr
stos
push
jmp
fmulp
push
mov
cmp
xchg
hlt
pop
add
xchg
or
mov
mov
fcompl
test
jo
or
not
leave
xchg
add
xchg
sub
jno
pop
push
sbb
push
outsl
add
mov
mov
xor
arpl
das
pop
jns
inc
push
fwait
stc
insl
mov
push
add
mov
and
jle
pop
iret
test
cmp
jmp
orb
push
pop
rolb
cmpb
icebp
outsb
test
and
adc
fisubrl
cmp
inc
addl
cli
jmp
or
in
and
imul
dec
push
mov
and
in
push
and
sbb
daa
and
mov
das
mov
ret
adc
mov
jmp
subl
pop
in
dec
pop
pop
xor
dec
ljmp
sahf
fimull
xchg
outsl
adc
in
pusha
stos
cs
jnp
icebp
loop
outsl
adc
push
adc
or
cltd
pop
or
or
sub
pop
nop
or
cmp
testl
xor
cli
sub
rol
fiadds
inc
pop
aas
push
fwait
in
or
in
pop
pop
pop
out
xlat
add
cs
rclb
mov
jae
inc
adc
mov
pushf
dec
push
shl
push
add
das
and
out
or
pop
hlt
mov
lea
sbb
dec
mov
dec
add
jmp
loopne
dec
dec
dec
scas
bound
adc
filds
loope
cmp
jne
dec
adc
clc
out
xchg
push
cmp
jecxz
sub
xchg
xor
jge
mov
fnstsw
popa
sub
jo
adcl
sub
ficoms
cs
enter
in
lock
notl
jmp
sub
out
xchg
push
add
jmp
xor
outsl
lahf
adc
and
outsb
or
sub
loopne
push
sbbl
xchg
es
or
das
cmp
mov
add
loope
or
lahf
leave
and
shrb
pop
dec
jecxz
rorl
psrld
fdivl
dec
inc
rcrb
nop
jg
in
and
or
loopne
inc
or
icebp
out
ret
add
call
movsb
and
sbb
or
test
jns
dec
dec
into
and
mov
sub
and
imul
xchg
cli
mov
add
jbe
icebp
fs
mov
or
jmp
cwtl
pop
inc
cmpsb
data16
or
cmp
adc
and
pop
test
xchg
daa
mov
jl
sub
cmp
pop
mov
scas
add
xchg
sub
or
pop
add
inc
add
add
fwait
pop
bound
push
push
push
jo
and
mov
push
xor
cli
jmp
nop
add
and
fnstcw
or
cmp
mov
add
pop
jbe
scas
dec
lods
jl
inc
add
imulb
jno
imul
cwtl
lods
pop
pop
jnp
sub
testb
pop
push
xchg
add
fwait
test
xor
and
jo,pn
in
aad
fsubrs
xchg
push
ds
add
sbb
pop
and
imul
push
out
xor
jp
ficoms
or
ja
inc
sub
or
jae
push
int
and
notb
adc
cmp
pop
in
enter
inc
mov
add
jmp
mov
mov
dec
inc
movl
adc
adc
iret
sub
movsb
sub
stos
gs
cmp
lock
or
lahf
cmp
icebp
add
dec
pop
outsl
imul
pop
dec
dec
jp
pop
in
int
out
mov
push
mov
mov
adc
mov
cwtl
xor
dec
push
popa
mov
scas
jns
lahf
pusha
adc
incb
push
cwtl
sbb
loop
or
adc
sbb
pusha
sarl
dec
hlt
push
pusha
pop
sub
add
outsl
add
or
dec
pop
cmc
pop
mov
int
lods
lcall
push
insb
sarb
and
xchg
xlat
or
sbbb
pop
push
pushw
mov
into
push
insb
xor
push
or
mov
mov
imul
jne
ds
add
add
jle
dec
stos
fdiv
sbb
psraw
sbb
repz
orl
test
mov
pop
push
pop
xchg
idivb
and
ret
mov
jmp
push
and
inc
sub
add
mov
xor
rorb
add
test
or
aam
or
popa
dec
mov
ss
hlt
lahf
outsb
pushf
loope
sahf
lea
xor
push
sarb
push
cli
mov
pop
clc
dec
pop
push
xchg
into
popa
push
icebp
pop
pop
xchg
sbb
std
or
and
push
pop
push
iret
mov
ljmp
jle
sbb
and
stos
push
les
adc
add
jb
cmc
xor
stos
arpl
bound
xlat
pop
add
push
push
jno
popa
jmp
in
fisubl
hlt
nop
push
daa
movsb
divb
jecxz
out
and
push
pop
ds
fisubs
jmp
adc
mov
dec
movb
adc
daa
jmp
dec
push
or
in
dec
adc
adcb
pop
adc
incb
lds
xchg
inc
and
add
sub
fstps
out
enter
or
and
sub
xor
inc
push
cltd
mov
cmp
lock
pop
push
mov
sub
cltd
or
loopne
or
add
mov
mov
mov
push
xchg
add
push
cmp
push
movsb
es
xor
add
pop
or
cmovne
fcmovb
jae
mov
cmp
decb
rorb
pop
sub
dec
roll
imul
add
xchg
idiv
dec
sarb
cmp
sub
clc
jecxz
bound
jge
jp
pop
adc
push
das
incb
adc
movsl
lea
fstps
xor
out
add
mov
mov
dec
mov
push
add
pusha
or
lahf
out
sub
sub
xchg
pop
mov
fadd
add
push
fsubrs
rorl
push
dec
fs
cld
stos
cmp
push
sbb
add
fldcw
fildll
and
adc
inc
add
adc
xor
mov
mov
cmp
sbb
jge
fwait
or
pop
enter
adc
jb
xchg
mov
jno
cwtl
push
cmp
jae
inc
push
in
mov
gs
cmp
mov
jmp
dec
inc
sbb
sub
push
loope
dec
dec
fmull
fnsave
shlb
repnz
push
jb
and
sbb
andl
inc
push
or
outsb
mov
fisttps
sbb
jle
add
cmp
adc
push
mov
push
sub
nop
and
push
mov
shl
lcall
push
scas
adc
jmp
sbb
jb
and
sahf
enter
inc
std
xchg
rorl
or
hlt
das
pop
rol
lcall
add
sbb
fcmovnb
lcall
aas
and
push
and
dec
xor
inc
testl
cmp
in
sub
add
inc
lret
ret
je
push
push
sbbl
adcb
imul
and
mov
cli
and
add
push
bound
jo
addb
mov
inc
jg
mov
or
lods
or
int
push
dec
xchg
push
dec
daa
adc
mov
add
pop
cmp
out
daa
out
dec
insb
cmc
test
or
out
rclb
pop
xchg
jecxz
cmovl
dec
pop
xchg
mov
xor
jne
jge
cli
xchg
xor
mov
fs
mov
push
mov
aam
jmp
pushf
aas
push
cs
loop
sbb
shlb
sub
int
jns
loop
add
icebp
imul
pop
push
adc
mov
aam
ficoms
xor
xor
or
mov
stos
mov
xor
or
pop
jne
roll
push
jle
add
roll
fwait
arpl
mov
push
mov
aaa
shl
add
xchg
sub
fdivrp
cmc
jecxz
sbb
push
add
mov
nop
mov
daa
pop
xchg
dec
pop
hlt
mov
sbb
mov
ljmp
aaa
adc
or
adc
cmp
outsb
stc
test
and
aam
cltd
add
jb
iret
jmp
out
cmp
jmp
loopne
add
mov
jne
in
in
dec
test
cli
iret
mov
incl
fwait
aas
in
dec
jmp
loop
cmpsb
mov
add
fnsave
test
mov
cmpsb
push
shl
movsb
or
fs
jge
ja
jl
filds
data16
mov
mov
pop
xor
or
subb
bound
lret
rorl
lock
mov
jmp
jmp
aam
inc
daa
jmp
ljmp
mov
and
sbbb
out
cmp
data16
or
jge
mov
aam
jnp
sub
dec
add
pop
mov
sbb
sbb
xor
mov
cmp
lock
leave
leave
and
dec
stos
roll
das
sbbb
not
repnz
add
jecxz
push
inc
pop
add
call
add
mov
daa
mov
rcrl
shrb
rcll
leave
mov
repnz
add
inc
std
push
test
mov
push
mov
push
sub
mov
mov
fs
frstor
data16
add
ret
add
stos
aam
scas
rclb
or
pop
sub
icebp
nop
adc
pop
jmp
dec
daa
sub
sub
pop
icebp
imul
push
nop
cmp
sub
add
jmp
adc
jns
jno
jp
inc
repnz
and
ret
clc
adc
loope
mov
push
dec
jbe
cwtl
sub
mov
xchg
xor
push
cmc
mov
xchg
jmp
aas
lods
xchg
popf
out
dec
jnp
mov
adc
ja
ret
mov
mov
add
outsl
mov
dec
mov
push
add
fsubrs
ja
pop
sbbb
push
and
sub
aad
cs
sti
out
insb
gs
pop
inc
jno
sbb
xchg
add
pop
stc
daa
lcall
idivl
jnp
mov
push
lods
ds
test
add
gs
sarl
or
lret
arpl
add
orb
push
or
ja
dec
popa
daa
pop
push
pop
push
es
imul
into
jp
mov
stc
sbb
jle
gs
adc
lock
cmp
push
jbe
mov
sub
nop
icebp
cmp
mov
sub
addr16
push
cmp
and
pop
inc
insl
cli
push
data16
jmp
sub
fdivrp
ret
or
daa
out
push
sbb
ret
mov
jmp
mov
mov
push
cld
outsl
dec
testb
hlt
pop
in
in
xchg
sbb
orl
sarb
repz
aam
pop
fisubl
inc
adc
xor
dec
xor
mov
imul
add
jno
dec
or
xor
icebp
or
ret
out
cmp
xor
dec
insl
mov
dec
and
mov
xor
push
fistpl
pop
add
cwtl
cmp
jno
push
nop
leave
jg
loopne
loope
les
bound
stc
jg
adc
stos
sub
cmp
inc
cmp
xor
and
bound
sub
mov
int
sub
imul
mov
mov
adc
xor
ljmp
mov
aas
fst
sub
mov
or
sbb
xchg
inc
loope
stc
xchg
cwtl
pushf
mov
pushf
ror
out
adc
inc
add
jmp
ficompl
outsb
test
add
and
add
sub
pusha
loope
mov
add
dec
push
je
rclb
mov
shr
out
repnz
loope
imull
std
cld
mov
inc
inc
cmp
fs
repz
cld
jg
gs
xchg
bound
push
rclb
shlb
subb
test
add
addl
pop
or
or
jp
pop
jnp
or
jmp
mov
xor
xchg
lret
or
or
push
pop
mov
mov
pop
and
cmp
dec
and
or
inc
cmpsb
mov
push
sar
jmp
jle
clc
out
bound
mov
das
push
push
inc
push
cltd
inc
sbb
outsb
inc
or
pop
xorl
mov
ja
out
fwait
xor
jmp
cmp
cld
ljmp
inc
dec
push
xchg
xchg
add
shr
xor
push
test
push
lock
in
imul
or
imul
dec
mov
je
ljmp
stc
cmpsl
je
dec
push
sbb
dec
repnz
pop
ds
jo
clc
pop
jnp
test
daa
pop
dec
cmc
inc
out
cli
jo
mov
cmp
int3
fists
jmp
mov
fwait
daa
sub
pop
mov
fwait
push
sub
sub
dec
pop
std
jne
lret
shr
jmp
add
cltd
enter
dec
mov
repz
stc
jno
sbb
fcoml
cmp
sbb
and
add
sub
push
jmp
faddl
adc
inc
adc
dec
cmp
fisubl
inc
pop
dec
lods
sbbl
or
or
inc
pop
and
inc
cmc
add
jl
lret
stos
loopne
sub
rolb
cs
sar
and
cmp
xor
jbe
aad
shll
ljmp
dec
sti
cmc
and
mov
pop
add
push
nop
adc
push
add
pop
mov
test
push
cltd
cli
sub
push
xor
aad
ja
or
adc
dec
jae
outsb
adc
sti
or
mov
add
sbb
jns
cmc
jo
push
insb
sub
pop
mov
push
or
nop
lret
fs
aaa
and
in
lods
mov
jg
nop
inc
pop
nop
or
dec
jmp
mov
add
lock
cld
xchg
adc
sti
and
mov
sub
push
cvtps2pd
test
pop
nop
mov
mov
and
and
add
mov
xor
sbb
mov
aam
mov
push
jnp
push
cmp
add
inc
sub
sub
fsubr
in
mov
scas
sbb
pop
inc
ss
xor
sub
and
bound
jns
dec
movsl
push
add
aas
push
ljmp
mov
xlat
jmp
lods
movl
sbb
push
cld
sbb
jl
stos
aaa
cmp
stos
push
test
cs
and
jb
jmp
ljmp
pop
dec
insl
adc
mov
inc
enter
sarl
mov
pop
in
push
icebp
jmp
push
lcall
add
push
mov
ds
jno
sub
dec
scas
cmp
inc
sbb
aaa
mov
xchg
sarb
cmp
lods
dec
rolb
ss
mov
push
push
sub
cmp
out
popf
mov
push
pop
repnz
lods
testb
sub
pop
in
mov
jb
push
xchg
jecxz
movsb
pop
mov
test
push
xor
cwtl
xor
int3
xor
push
cwtl
pop
sbb
sbb
scas
push
push
ds
pushf
dec
add
pushl
jle
adc
pop
inc
add
jno
rolb
dec
inc
sbb
xor
adc
jmp
cmp
xor
pop
out
pop
scas
arpl
scas
cmc
int
fildl
ret
inc
push
pop
imul
fucom
cmp
in
pop
cmpsl
rorl
mov
xor
mov
mov
adc
aas
in
xor
push
mov
xor
jns
pop
popl
addr16
push
mov
jno
in
subb
jmp
dec
addb
lods
dec
mov
aam
cld
dec
or
or
mov
and
pop
push
mov
mov
push
jmp
push
js
mov
and
fists
jl
push
and
inc
xor
hlt
or
pop
in
inc
nop
and
xor
xchg
jle
call
cwtl
add
push
ret
adc
sbb
adc
leave
bound
faddl
add
divl
aaa
inc
push
imul
pop
adcl
loope
movsb
jne
and
push
push
fiaddl
sub
pop
mov
jle
nop
adc
sub
in
cmpsl
adc
inc
add
push
push
push
mov
dec
repnz
jbe
gs
add
popa
fsubr
inc
sbbl
dec
dec
xorl
push
dec
xlat
imul
orb
lret
lahf
xlat
in
mov
xor
lcall
mov
sub
adc
icebp
scas
inc
pop
cmc
xor
or
xchg
jmp
iret
lret
jo
mov
pop
pop
and
push
push
and
pusha
adc
orb
add
shlb
bound
fs
and
outsl
cld
in
syscall
mov
cltd
mov
jne
adc
jecxz
adc
pop
neg
dec
and
sub
icebp
mov
or
sbb
mov
cli
cwtl
aad
xor
sub
pop
jecxz
fsubrs
pop
xchg
sbbb
mov
or
inc
dec
data16
jp
pop
ret
add
mov
push
push
pop
mov
js
pop
jp
push
xor
xor
cmpl
outsl
dec
add
rorl
xchg
fsubrs
orb
inc
jae
pop
pop
adcl
push
jbe
add
or
adc
mov
push
icebp
call
test
and
lods
push
add
add
shl
roll
call
jle
les
das
lea
pushf
icebp
push
imul
aas
mov
rclb
cmpsl
adcl
movd
mov
das
mov
ljmp
xchg
jg
xchg
add
fistpl
cmc
insb
mov
inc
jp
adc
enter
jae
in
pop
adc
xor
mov
ret
mov
test
sarb
aas
push
xlat
test
jmp
mov
cmp
push
adc
shr
ljmp
shlb
mov
mov
push
jnp
lock
jp
jge
cld
push
sub
pop
or
mov
test
in
rcrb
pop
and
mov
xor
mov
dec
bound
fstps
jo
mov
or
pop
push
mov
lret
xchg
jg
mov
repnz
les
test
or
dec
movsb
xchg
fs
loop
pushf
adc
mov
jle
lods
inc
leave
jp
sbb
divl
xchg
in
les
sub
sub
push
ret
jg
imul
mov
leave
add
out
andb
testb
aad
int
test
adc
add
xor
std
ljmp
xchg
cmp
add
pop
adc
es
sub
decl
push
shrl
mov
jp
sub
fiadds
sub
jl
or
test
daa
or
ja
add
push
daa
fsubrs
pop
jo
add
jp
out
popf
adcb
and
dec
xchg
imul
loopne
jmp
incb
test
or
pushf
fiaddl
adc
lret
test
daa
pop
push
adc
call
and
pop
rorb
aad
xor
das
mov
rol
negl
sub
adc
sbb
fistps
cltd
sbb
pop
xchg
roll
sub
ss
and
mov
popf
ds
jae
jge
mov
shr
cmp
push
pop
xor
inc
pop
jns
mov
pop
adcb
add
mov
or
mov
lahf
add
movsl
cmp
in
or
loop
out
daa
sti
and
xor
push
mov
add
pop
inc
mov
jb
mov
sti
pop
mov
cmp
gs
mov
jo
cmp
cmpsl
xor
dec
cmpb
jbe
xor
ljmp
lods
dec
ljmp
pop
andl
mov
mov
stos
in
lock
int
scas
imul
push
and
mov
stc
mov
sbb
sbbb
jp
lret
incl
add
xchg
xchg
andb
or
push
mull
inc
popf
loopne
sub
les
shl
mov
xchg
pop
insb
lds
push
scas
push
push
mov
xor
adc
jmp
or
sub
aam
ret
mov
or
dec
xor
imul
jle
jne
mov
movl
test
cmc
mul
xor
stos
xchg
jo
jmp
inc
and
jmp
jecxz
and
call
dec
lret
fiaddl
dec
gs
dec
or
notl
incl
inc
arpl
adcl
sarl
sub
out
adc
scas
les
stc
in
mulb
xchg
fildl
xchg
sbb
mov
mov
testl
cld
push
sarl
scas
or
cmc
mov
adc
add
shr
lahf
pop
pop
in
or
sub
and
jb
in
test
pop
sahf
jb
xor
add
mov
pop
fs
repnz
movsb
jmp
xor
outsb
lahf
adc
aam
jge
jecxz
xor
add
jmp
adc
insl
or
aad
or
test
ljmp
rorl
ret
pop
mov
insl
xor
out
sbb
loopne
testb
push
pop
pop
add
or
sbb
or
out
insl
sbb
jmp
mov
mov
lods
aad
enter
xchg
jmp
xor
pop
add
mov
mov
sbb
jp
mov
or
push
dec
popf
rorb
or
je
push
or
add
mov
gs
cs
xchg
pop
and
call
cmpsb
fwait
gs
leave
and
mov
or
sbb
loope
bnd
mov
push
cmc
imul
in
mov
loop
addr16
jb
enter
cmpl
cmpsb
pop
adc
push
rclb
rorb
push
bound
jbe
adc
mov
fsubr
js
dec
jns
push
iret
sbb
or
std
push
int3
jge,pt
adc
or
pop
repz
xor
push
call
pop
cmp
pop
push
lcall
mov
test
out
mov
cmpl
test
dec
sub
mov
insb
or
inc
repz
sbb
iret
mov
xchg
inc
xchg
das
lahf
or
mov
hlt
adc
pop
push
cwtl
mov
or
movsb
ss
dec
xor
stc
insb
mov
pop
fnstcw
xchg
in
mov
gs
mov
cli
scas
repz
lods
jle
movsl
mov
pop
inc
add
push
jnp
xor
and
mov
mov
out
testl
adc
or
and
push
testb
xor
out
ret
pop
out
inc
mov
movsb
jb
push
push
push
fldenv
scas
dec
add
fs
movsb
jl
out
fs
ret
call
pop
imul
and
shrl
movsl
call
jnp
in
subb
and
jo
jmp
pop
push
orl
push
jmp
ret
daa
stos
or
cli
daa
mov
mov
das
xor
int3
movb
out
pop
cmp
lock
ds
int3
stc
adc
mov
jmp
push
and
daa
jns
daa
push
int
in
rcrb
mov
pop
pop
cmpsl
pushf
pop
in
push
push
out
das
loopne
mov
add
push
and
jmp
sub
xchg
jnp
bound
fisttps
mov
mov
mov
dec
mov
push
adc
push
mov
xor
inc
adc
neg
dec
into
push
add
rcrb
cs
dec
dec
loopne
mov
adc
pop
xor
add
push
xchg
movhps
jmp
inc
sbb
add
or
cltd
dec
sub
jmp
add
inc
xchg
jnp
pop
sub
fistl
or
inc
popf
push
pusha
or
inc
shrb
dec
clc
xor
push
cld
sub
pop
add
subb
es
adc
inc
and
push
callw
pop
add
dec
setb
adc
mov
xor
push
pop
jmp
jecxz
dec
push
out
leave
je
daa
pop
xor
es
jg
pop
jne
push
jl
rcl
and
lock
push
xchg
xlat
cli
mov
je
fadd
add
push
mov
in
aad
in
push
mov
or
and
lock
pop
xchg
in
xlat
sbb
push
mov
dec
aam
add
mov
lret
and
jmp
sub
add
fwait
xor
xlat
add
jae
push
push
pop
push
mov
out
jno
mov
sbb
mov
shll
bnd
repz
jb
lret
pop
mov
mov
mov
stos
push
adc
sub
test
adc
and
ret
xchg
cmpsb
enter
pop
xor
sbb
hlt
or
push
inc
scas
sub
imul
cmpps
add
mov
xlat
mov
dec
xchg
xchg
lea
mov
mov
dec
ja
sub
inc
pop
movsl
xchg
lret
andb
dec
add
shrb
mov
add
lods
xor
push
and
lret
xor
ss
and
xor
and
cmp
int
lds
push
pop
pop
dec
push
or
jg
out
ds
ds
shrb
fistl
mov
into
fwait
sub
jle
cmp
test
pop
push
jl
fdivrs
outsl
sahf
sub
iret
sub
add
or
mov
mov
adc
add
push
outsb
bound
loop
push
mov
pop
in
cmpsl
gs
roll
push
xchg
pop
mov
sub
jl
pop
jge
sub
inc
pop
xchg
push
add
sub
fucompp
mov
xchg
or
nop
and
rolb
outsl
fcmovbe
js
xor
and
out
mov
jmp
lods
push
lret
lods
add
test
imul
leave
inc
or
imul
sub
hlt
mov
mov
aad
cmp
out
out
dec
cli
mov
mov
dec
pop
pop
pop
inc
out
dec
sub
incl
cmp
shlb
outsb
xchg
pop
mov
sbb
orl
ljmp
aas
loope
outsl
cmp
lahf
out
push
adc
pusha
out
and
cltd
in
out
sub
or
bound
daa
pop
repz
enter
jns
adc
pushl
mov
aaa
jne
jmp
and
push
cwtl
xchg
popa
repz
jnp
outsl
je
int3
jle
jno
pop
and
pop
mov
and
xchg
mov
and
jns
icebp
ds
adc
sub
xchg
push
sbb
idivb
enter
cmpsl
sbb
inc
fimull
adc
lea
pop
mov
lret
and
add
cmp
movsl
jecxz
mov
jle
pusha
jmp
loopne
mov
or
cwtl
sub
add
or
sbbb
js
xchg
test
test
not
sub
out
out
mov
sbb
iret
inc
popf
pop
cmp
movsb
and
insb
shr
neg
sub
ficomps
inc
add
fsubr
scas
mov
pusha
push
add
es
jmp
cmp
push
jge
mov
dec
pop
push
adc
jle
mov
add
mov
aam
dec
shlb
or
leave
and
fbld
jmp
out
dec
minps
cld
lea
dec
aaa
add
and
out
add
inc
ficomps
shrb
sub
mov
out
cld
enter
dec
add
daa
outsb
cmp
adc
andb
jge
sub
add
ds
sub
xchg
jge
ja
jge
es
in
pop
sub
pop
fstps
out
cmpsl
mov
and
negl
push
jne
subb
ret
xlat
sbb
pop
ja
push
xchg
std
mov
and
testb
sbb
adc
sbb
pop
jns
mov
mov
cmc
sub
cld
out
or
cmp
adc
pop
sti
add
popa
cmp
jp
mov
push
push
xchg
adc
lcall
add
add
pop
jns
sub
aad
adcb
push
lds
jmp
popa
addr16
ja
inc
dec
lcall
pop
mov
push
pop
inc
orl
inc
aas
nop
push
mov
add
xor
jno
xchg
imul
jae
test
in
das
xchg
or
and
jg
pop
push
inc
popa
cmc
rcrb
xor
les
dec
jo
test
sbb
add
and
subb
mov
jmp
push
push
xorb
or
into
sti
lock
xor
fisubrs
pop
or
or
mov
sub
push
je
dec
cli
xor
sub
stc
push
sbb
icebp
dec
inc
xchg
push
and
jle
or
sub
mov
or
in
add
iret
daa
stos
mov
pop
mov
xor
lret
jae
ds
out
ret
jmp
push
mov
icebp
mov
mov
fdivl
es
inc
mov
jno
sahf
pop
dec
mov
daa
fists
and
insb
mov
inc
sbb
fwait
lock
call
sub
xor
and
mov
aam
jno
push
push
leave
sbb
out
jns
push
sub
icebp
rorl
jmp
shl
and
pop
xchg
fildll
adc
fwait
mov
lods
add
cltd
inc
loope
int
cltd
outsl
pop
negl
out
es
ffreep
adc
ljmp
mov
sub
inc
xchg
push
add
pop
sti
inc
in
push
add
pop
stc
fs
sbbl
push
rcrb
xor
ljmp
mov
mov
in
sub
and
xchg
adc
push
shlb
pop
insl
cmp
cmc
dec
push
pop
xchg
shll
jo
fcmovnb
mov
mov
mov
cmp
mov
mul
push
test
pusha
and
js
inc
xlat
push
insl
aad
rcrl
or
sbb
cmpsb
std
sbb
pop
adc
loopne
call
imul
cld
pusha
mov
js
jmp
mov
xchg
adc
bound
push
sub
mov
xchg
and
jmp
adcb
cmp
popa
adc
inc
das
jl
xchg
repnz
push
pop
push
mov
xchg
pop
jno
jmp
mov
push
mov
shr
not
hlt
lret
jmp
mov
in
lock
aam
imul
mov
cld
push
xchg
or
outsb
mov
jns
push
hlt
and
or
sahf
fnsave
ret
imul
pop
mov
pop
std
xchg
jg
pusha
mov
and
das
rorl
xchg
jno
out
out
inc
dec
ret
ficoml
pop
imul
sub
mov
and
test
cmpsl
mov
in
mov
sub
pop
push
pop
pop
sub
addl
cmp
mov
cmc
in
jmp
xchg
xor
cmp
jo
mov
cli
orl
and
sub
cs
adcb
push
out
or
cmp
lahf
push
in
cmc
xor
ror
cmp
pop
leave
lods
sbb
add
push
dec
movsl
jo
mov
cwtl
popf
or
ljmp
pop
les
mov
add
shl
sub
and
hlt
addr16
shlb
hlt
js
xchg
popa
shlb
push
std
mov
push
aad
add
in
mov
push
xor
lret
mov
je
stos
shl
mov
outsl
pop
daa
jge
jns
pop
jmp
sbb
jle
and
jbe
popa
pop
ret
cmpsb
mov
int
xchg
jnp
cmpb
shll
cmp
pop
dec
sub
gs
dec
pushf
dec
outsb
pop
add
xchg
insl
xor
sbb
xchg
iret
mov
cmc
nop
fs
add
mov
push
out
jp
test
es
out
pop
scas
cltd
add
jmp
mov
xor
jg
push
jmp
repnz
leave
insl
sbb
pop
xchg
fidivrs
pop
data16
push
and
jge
xor
into
in
mov
fs
push
pop
inc
xchg
insb
ja
jecxz
call
push
push
xor
mov
sub
pop
lcall
push
push
xor
jmp
clc
pop
adc
push
add
loop
mov
jbe
add
push
lcall
repz
bound
sbb
inc
pop
pop
add
and
imul
sub
das
jmp
ret
js
rcr
dec
add
cld
push
mov
fdivrs
movsl
push
push
les
pop
loopne
mov
push
test
repz
ja
mov
cmp
and
mov
std
fdivp
inc
aas
movsb
or
std
ret
dec
cltd
adc
add
pop
lret
enter
add
jg
outsb
mov
and
push
jo
arpl
push
pop
loop
jo
xchg
testb
mov
and
mov
push
mov
cli
push
mov
xor
imul
push
mov
push
in
lret
inc
test
xor
popf
push
inc
mov
sub
add
pop
je
push
aam
add
popf
notb
loopne
jmp
and
xchg
je
ds
idivl
xor
insl
mov
adc
mov
mov
and
adc
add
jmp
cmp
mov
adc
daa
test
or
leave
inc
lea
rolb
cmp
and
mov
xlat
inc
and
or
imul
or
or
or
xor
int
ret
add
pop
movsb
fs
mov
dec
fsts
mov
jge
aaa
pop
mov
push
sbb
pop
mov
divb
push
mov
add
add
pop
cld
fs
pop
imul
push
pop
mov
fcoml
shr
testb
into
out
sub
pop
inc
pop
and
jmp
rolb
lcall
addr16
pop
in
sbb
pop
lea
cmc
dec
push
test
icebp
test
test
scas
es
adc
push
fildl
xor
xor
push
fldl
xchg
ss
call
dec
sbb
sub
inc
mov
cs
lock
pop
in
inc
in
xor
lds
into
mov
cmpb
pop
nop
pop
pop
mov
mov
stos
adc
imul
loopne
add
push
das
out
push
insb
rcrl
enter
push
adc
mov
lods
popf
mov
push
pop
add
pop
inc
add
test
and
in
fdivrl
pop
fucomip
xor
or
pusha
dec
lea
add
pop
mov
les
les
and
das
pop
push
jg
or
bound
stos
inc
xchg
inc
xchg
push
jmp
cmc
and
add
mov
adc
xor
les
xchg
stc
sbb
cli
leave
adc
jge
mov
addr16
dec
or
enter
pusha
pop
add
sub
sub
add
push
push
mov
add
add
orb
dec
shll
pop
mov
cmc
pop
push
int3
inc
loopne
xor
jecxz
rorl
lret
out
xchg
ljmp
cmp
xchg
cmp
out
in
div
ljmp
inc
mov
mov
hlt
and
sub
icebp
out
push
cltd
add
insb
cmc
add
jecxz
loope
mov
sarl
cld
xlat
cli
sbb
loopne
adc
mov
pop
cli
add
int
inc
pop
btc
dec
testb
adc
or
ret
enter
popa
cmc
sbb
push
stc
test
or
push
repz
sub
mov
ficoms
or
push
jge
mov
jae
and
mov
sbb
pop
adc
push
sbb
lret
or
popf
cmp
adc
pop
scas
sub
test
sub
popf
cli
mov
pop
mov
pop
loope
mov
mov
jl
push
ret
jge
xor
mov
pop
push
pextrw
and
pop
and
notb
cmp
push
jmp
sbb
lret
pop
popf
leave
jbe
test
sbb
pop
inc
sub
mov
das
xor
orb
fnsave
pop
push
das
fs
sub
in
ficoms
or
mov
daa
sbb
dec
jmp
repz
add
sub
ficoms
ja
lahf
hlt
int
out
push
cmp
roll
xchg
pop
push
or
mov
sub
andl
push
push
test
add
leave
lret
push
sbb
pop
sbb
sub
lret
movsl
pop
pop
jae
sbb
scas
push
xchg
mov
push
sub
jne
sbb
test
mov
inc
xchg
push
xchg
dec
mov
mov
adc
aam
lds
shr
daa
dec
mov
mov
fsubrs
jp
and
add
movhlps
mov
push
jne
inc
dec
adc
add
gs
hlt
and
neg
test
mov
es
sbb
adc
rcl
mov
ror
push
inc
dec
inc
cmp
int
jae
into
gs
mov
subl
dec
out
fildl
pop
sbb
add
jmp
les
dec
sti
and
jmp
mov
and
pushf
push
orb
enter
popf
sbb
jg
lods
cli
iret
mov
push
jl
bound
jne
out
or
sub
imul
ss
push
cmpsl
mov
or
out
mov
jge
sahf
adc
push
ffree
pop
and
add
xchg
add
mov
pop
xchg
or
add
cwtl
pop
nop
jns
mov
push
pop
xor
mov
pop
sub
fists
add
push
mov
and
lret
push
jl
push
je
sub
nop
push
add
push
xorb
ljmp
push
enter
scas
leave
add
pop
jle
jmp
rcr
push
pop
leave
pop
rolb
push
push
push
cli
adc
cld
mov
mov
cld
stos
adc
fnstenv
pop
add
pop
popa
jmp
add
pop
inc
in
push
dec
sbb
jl
in
push
xchg
adc
imull
test
aas
xchg
sbb
icebp
dec
dec
jnp
xor
fcoml
add
orb
in
adc
and
lds
jo
loopne
cwtl
pop
xor
mov
add
js
push
pop
loope
or
loop
cltd
rorb
lcall
stos
loope
pop
mov
lret
pop
mov
sarl
pop
or
sbb
xor
jecxz
push
add
mov
out
xchg
mov
push
call
test
push
shll
cmc
dec
fs
int
xchg
mov
mov
sub
jl
cmp
lcall
out
out
xchg
sti
inc
pop
dec
iret
sarl
sbb
push
subb
jl
int
mov
in
subl
sub
xor
in
pusha
xchg
inc
push
lret
hlt
add
jo
jmp
mov
cmp
jecxz
add
adc
rcrb
leave
xchg
sub
adc
das
sar
pop
add
mov
adc
or
add
cld
hlt
sbb
cs
out
xor
or
lahf
fcom
add
push
ret
lods
jmp
or
sub
adc
pop
mov
cmp
inc
pop
mov
decb
mov
mov
push
mov
sub
or
adc
icebp
or
pop
jle
or
pop
dec
fs
scas
sti
mov
jb
pop
sub
add
mov
shll
in
and
or
cli
inc
rcrl
or
test
dec
xor
adcb
sub
mov
sahf
enter
ret
stos
xchg
js
push
shrl
sub
mov
add
sbb
push
jne
ds
ret
and
xchg
test
iret
lods
lret
dec
mov
xchg
xor
add
dec
adc
fisttpll
pop
push
sbb
mov
sub
adc
adc
xor
inc
imul
adc
push
sbb
fiadds
out
ds
sahf
lea
psraw
mov
adc
in
sbb
push
das
cmpsb
push
pop
xchg
push
adc
ret
js
push
cmp
jmp
inc
scas
inc
popa
adc
ds
outsb
jmp
sub
xchg
push
push
inc
nop
cmp
mov
shll
pop
xorb
mov
or
jmp
jecxz
mov
pusha
sbb
dec
stc
or
jns
and
adc
fiadds
push
push
das
xor
cmp
inc
mov
xchg
xchg
sbb
inc
push
dec
inc
add
push
sbb
jb
mov
add
popa
dec
jne
pop
sbb
inc
jmp
xorl
xor
xchg
or
or
ds
cmpsl
test
cmpsb
jmp
ljmp
cmp
cmp
movsb
add
or
jne
or
rorb
push
or
jg
push
fildll
data16
lcall
add
mov
aas
sub
jg
xchg
jnp
lods
hlt
imul
fldl
adc
nop
and
push
cmp
fisubs
push
and
jmp
cmpsl
icebp
cmp
xchg
jle
loop
std
mov
mov
sub
pop
push
dec
pop
mov
push
in
ret
and
jle
dec
lock
push
xchg
subl
data16
mov
and
or
fs
js
lods
push
addl
gs
and
lock
imul
sub
frstor
outsl
jmp
jb
cmc
dec
scas
ret
sti
addr16
movsb
pusha
sbb
mov
push
dec
neg
mov
sub
shll
mov
add
jmp
lcall
sbb
test
lahf
in
sub
or
inc
add
movsb
and
hlt
sub
add
xor
outsl
es
add
cmp
rclb
sub
test
push
jecxz
sbb
sbb
or
adc
mov
call
imul
pop
pusha
mov
add
xor
cmp
mov
pop
xor
les
or
mov
pop
xor
imul
jmp
std
sbb
adc
and
ljmp
mov
and
jmp
mov
add
jmp
mov
push
pop
shl
aam
lock
lock
cmp
adc
jge
push
and
mov
mov
sub
loop
or
pop
jg
daa
xchg
test
fsubrs
rcrb
xchg
fs
or
mov
add
jo
outsl
mov
mov
mov
dec
outsl
jg
sbbb
add
aas
mov
jo
pushf
jp
add
outsb
orb
cmp
dec
jno
mov
sbb
xchg
sarb
pop
lea
movsb
sahf
add
rclb
frstor
xor
adc
xor
mov
enter
mov
or
jmp
rorb
sbb
stos
xor
call
cmp
push
imul
push
mov
push
in
es
jmp
outsl
cmpsb
adc
lahf
dec
push
and
push
jmp
push
xchg
inc
inc
sbb
mov
dec
xor
add
or
test
dec
out
test
xlat
lock
pop
aad
outsb
repnz
and
pop
push
dec
add
js
js
xor
and
mov
std
pop
into
rclb
adcl
push
dec
cld
popa
and
lahf
cmp
or
xchg
hlt
out
push
mov
jmp
mov
cmc
add
push
or
enter
push
pop
orb
xchg
fldcw
mov
stos
or
push
push
shr
daa
cld
negb
leave
out
inc
mov
dec
popf
rol
add
sub
cmp
fisubs
jl
or
inc
mov
enter
add
arpl
xchg
push
lock
sub
imul
lret
in
adc
sti
stc
inc
cmpsb
jmp
xchg
inc
jo
frstor
out
add
leave
das
mov
or
rcll
xchg
in
and
out
jge
mov
push
jg
pop
add
add
xchg
shll
or
sbb
inc
jae
or
sbb
cmp
push
and
pop
and
sarl
inc
or
mov
inc
neg
loope
cs
es
mov
inc
push
adc
pop
push
jo
jg
add
jecxz
shr
xor
fisttpl
add
push
xchg
jnp
ds
fisttps
int3
dec
push
mov
pop
mov
adc
inc
out
sbb
sub
xor
jmp
lods
jge
cwtl
loop
decl
adc
inc
pop
ljmp
sar
add
or
in
dec
scas
cmp
dec
movsl
push
jmp
pop
je
lock
xor
js
movsb
sbb
push
mov
push
pop
pop
jmp
sbb
loopne
xchg
mov
pop
pushf
dec
sbb
outsb
les
lds
jl
imul
jne
ljmp
sbbl
inc
sbb
and
je
out
gs
sub
jmp
mov
fldl
mov
popf
jnp
rcl
lret
sub
popa
and
movsl
daa
insb
mov
push
mov
sarb
jmp
cmc
pop
or
fwait
shrl
scas
mov
xor
shlb
arpl
mov
mov
stos
xor
xchg
dec
lods
xor
stos
inc
fstpt
adcb
out
das
pop
xchg
dec
jo
push
jmp
cmpsb
jae
jne
fisubs
aas
xchg
faddl
sub
sti
inc
or
test
leave
pop
add
pop
jmp
sbb
add
add
btr
add
lock
sarl
sub
pusha
sub
mov
push
pop
shrb
pop
pop
push
add
sti
adc
and
insl
cmpl
fstpl
sbb
pop
xchg
clc
shl
pusha
ljmp
adc
sub
and
mov
pop
add
mov
jge
sti
ljmp
adc
sahf
sahf
leave
inc
mov
aas
mov
cmp
add
push
adc
xor
dec
push
push
incb
adcb
in
inc
loopne
jno
pop
out
sahf
xchg
mov
subl
pop
ret
fcoms
lret
sub
stos
adc
add
into
push
imul
pop
xor
and
call
add
ret
fucomp
mov
adc
movsb
push
aad
xchg
xor
adc
loopne
xor
mov
push
popl
pop
out
jo
push
lods
sarb
fcoms
adc
pop
push
scas
roll
sbb
mov
sub
mov
or
mov
sbb
mov
xchg
or
jae
popf
inc
and
cmp
add
push
add
flds
fsubrs
xor
out
push
cmp
idivl
aaa
push
daa
jmp
jns
imul
and
cwtl
mov
daa
fidivl
mov
pop
jnp
in
ret
push
in
dec
sub
lock
out
add
ss
cmp
jg
dec
push
dec
push
mov
fdiv
in
ljmp
push
add
add
add
add
stc
inc
pop
lret
decb
arpl
dec
lea
or
mov
ror
and
sarl
add
scas
dec
pop
or
ret
add
test
call
std
and
fs
xchg
mov
add
or
jmp
loope
jmp
add
pop
testl
push
sub
lret
pop
test
jecxz
dec
xchg
xchg
push
mov
add
jge
and
mov
lods
sub
pusha
lret
jbe
outsb
fs
xlat
mov
dec
aam
leave
sub
push
xor
dec
cmp
test
mov
rorl
loopne
and
dec
jne
stc
add
inc
cli
push
add
pop
cmpsl
add
out
adc
dec
sahf
or
or
push
out
lahf
pusha
es
add
jmp
lahf
xchg
jg
add
into
add
or
sub
out
push
mov
or
sbb
xor
add
or
jp
jmp
mov
sub
or
popa
inc
rorb
xor
out
or
dec
add
dec
or
ja
mov
dec
jmp
dec
jno
mov
add
pop
xchg
or
pop
and
rcrl
aaa
jb
adc
popf
push
xor
push
or
add
inc
repz
xchg
loope
push
test
adc
or
insl
sbb
addl
jae
xchg
jecxz
decb
adc
jge
and
push
mov
and
das
pop
add
inc
jmp
pop
jbe
pop
push
push
pop
pop
mov
push
mov
testb
mov
sub
lods
std
data16
jnp
mov
call
cwtl
xor
sub
push
sbb
add
adc
sub
ficoml
pop
mov
xchg
clc
in
add
mov
loope
or
and
jmp
xchg
adc
cmc
push
sbb
dec
and
arpl
int
orb
daa
xor
push
js
push
lea
loopne
into
ja
mov
xchg
xor
pop
xor
sbb
stos
adc
push
and
shrl
scas
fsubs
mov
fdivr
ds
lock
pusha
cmp
das
add
push
stos
pop
cmp
mov
adc
std
rorl
adc
loopne
mov
and
push
push
dec
push
mov
lock
push
inc
je
add
jge
pop
jno
add
jns
loopne
iret
mov
mov
inc
fmuls
cmc
jp
push
rorb
push
push
and
or
adc
dec
adc
jmp
inc
mov
ret
pop
orl
and
push
pop
add
cmp
sub
sub
add
cmp
rolb
fdivrs
push
mov
ret
add
add
shll
mov
or
ss
popf
out
cs
rcll
jmp
xor
icebp
push
bound
or
sub
xor
inc
mov
or
outsl
testb
sbb
jae
add
movzbl
jmp
loop
rolb
paddd
repz
lods
cmp
jmp
rcll
jb
rol
inc
jmp
dec
jp,pt
adc
in
xchg
mov
or
push
adc
jmp
inc
cli
aam
or
sbb
or
into
data16
jns
loope
push
cmp
mov
fldenv
loopne
push
mov
ret
arpl
fistps
jmp
subl
or
push
inc
add
stos
js
das
jg
jmp
push
push
clc
push
add
xor
jnp
sub
lahf
mov
rolb
sub
adc
repnz
shll
sbb
int
push
jmp
mov
cli
cmp
xchg
adc
mov
sub
or
xor
mov
ret
fwait
inc
push
push
cli
dec
andb
lds
push
and
inc
pop
clc
std
xchg
out
sub
pop
pop
cmp
repz
xchg
rorl
std
mov
mov
mov
test
data16
jns
pop
pop
add
xor
add
mov
in
lcall
pop
hlt
pop
daa
std
adc
stc
adc
pop
popf
loopne
sub
mov
and
ret
lret
add
nop
sbb
pop
call
pop
inc
sbb
xchg
stos
adc
push
int
test
lahf
mov
adc
sbb
into
cli
cli
xchg
pushf
insl
add
cmp
mov
push
clc
and
xor
loope
jmp
test
mov
aad
xor
add
addr16
neg
push
or
roll
mov
rcrb
shll
sbb
mov
jbe
notb
out
dec
xchg
shlb
cwtl
mov
stos
mov
or
pop
lds
pop
rcll
or
jae
or
rol
xchg
push
adc
push
or
push
adcl
xor
fistpl
mov
adcl
xlat
in
cmp
in
cmp
jmp
ljmp
cwtl
int3
or
pop
push
shll
mov
or
punpcklwd
or
push
push
jnp
hlt
negb
adc
sbbb
jmp
aaa
mov
push
xchg
inc
dec
push
inc
out
rorl
pop
clc
fs
adc
rcrl
jmp
pop
mov
sub
sub
aaa
nop
sub
cmp
push
sub
jnp
movsl
fldcw
adc
popf
push
test
push
jmp
ret
jp
xlat
mov
in
cmc
mov
jns
push
jmp
callw
and
loopne
outsb
arpl
inc
movsb
or
mov
repz
in
push
lods
mov
pop
shl
push
add
notl
sub
pop
mov
inc
add
and
xchg
push
add
mov
fdivrl
orl
sub
incl
nop
xchg
mov
call
xor
adc
or
nop
jg
push
bound
adc
mov
or
push
icebp
cltd
or
mov
stc
or
jmp
push
mov
cmp
push
mov
or
loop
popl
sub
pop
sub
lahf
insb
push
fsts
jmp
pop
dec
std
cwtl
addb
incb
jmp
add
xor
out
and
mov
mov
xor
enter
xchg
xchg
xor
shld
sbbl
in
sbb
or
sbb
mov
push
dec
inc
mov
and
push
xchg
subb
icebp
pop
xchg
sarb
adc
enter
add
stos
push
dec
fistpll
pop
and
test
cmp
int
and
cmp
push
inc
adcb
push
movsw
fidivrs
fs
mov
xchg
addl
push
sub
clc
out
shl
stos
mov
add
pop
leave
sbbb
add
sbb
pop
ret
je
push
push
inc
dec
dec
stos
adc
push
xlat
les
cli
mov
inc
or
mov
stc
xor
addb
dec
int
aas
pop
sbb
mov
out
inc
dec
and
mov
shl
xor
cmp
into
mov
mov
ja
fs
sub
aad
sub
or
inc
jno
ret
and
adc
jp
xchg
dec
repz
jmp
sub
jmp
xchg
clc
dec
cmp
dec
jne
mov
mov
and
ret
fwait
lahf
hlt
pop
sub
daa
mov
lahf
mov
add
pop
mov
lock
pop
pop
cld
or
sub
lods
pop
cmp
or
add
sbbb
push
std
xchg
push
ret
inc
or
add
sarb
and
or
out
xor
push
xor
shll
movsb
inc
shlb
insl
or
arpl
mov
push
pop
adc
std
pop
ja
cmpsl
das
fs
xchg
fisubs
test
xchg
das
loop
adc
xor
mov
je
in
inc
fdiv
add
push
bound
in
xchg
or
sub
lods
push
lahf
adc
jno
in
jne
pushf
dec
adc
jae
xchg
xchg
hlt
jmp
xchg
sti
mov
dec
add
xor
add
pop
push
mov
dec
out
pop
lods
adc
and
sub
ret
pop
iret
jnp
sub
fsubl
xchg
test
fildl
pop
jle
aas
add
dec
sbb
mov
inc
idivl
fldcw
adc
daa
pusha
rolb
insl
push
mov
add
loopne
pop
push
or
mov
test
adc
xlat
or
adc
push
lock
pop
daa
jbe
cmp
dec
dec
adc
mov
dec
rcl
xor
arpl
xor
mov
cmp
and
cmp
repnz
out
dec
mov
sarl
cmpsl
insl
out
pop
push
imulb
or
add
add
xor
mov
inc
lcall
mov
frstor
hlt
daa
ret
mov
add
xchg
push
pop
xchg
repz
dec
jg
cld
in
jmp
bound
xchg
cmpsb
cwtl
adc
shrb
popa
and
jmp
icebp
or
push
add
dec
or
out
sub
push
cs
xchg
sbb
or
pop
sbb
dec
pop
mov
add
jle
cmp
adc
pop
stos
and
sti
movsb
inc
jmp
out
adc
adc
fsubrs
and
sub
sub
outsb
push
ds
xchg
jmp
enter
js
mov
xor
adc
in
pop
aad
ja
or
in
test
je
pop
fidivs
lock
mov
std
pop
or
or
mov
add
mov
jnp
subb
pop
jae
mov
mov
into
cwtl
push
iret
out
fs
in
sarb
fbstp
push
movsl
shr
pusha
adc
inc
push
mov
clc
lret
mov
push
addl
jo
inc
push
inc
dec
sub
add
inc
cwtl
imul
add
cmc
or
pop
daa
push
pop
mov
mov
lcall
pop
pop
xlat
shl
mov
adc
mov
push
and
inc
add
push
je
imul
sbb
test
push
ret
jne
orl
xor
dec
mov
mov
dec
dec
or
imul
icebp
leave
or
xor
imul
xchg
imul
dec
enter
imulb
test
inc
pushf
cltd
cmp
into
inc
pop
xchg
jbe
jle,pn
push
dec
sub
addr16
jmp
push
je
mov
and
jne
or
adcb
fadds
test
loope
pop
pop
push
xor
push
mov
xor
dec
inc
cs
popf
jle
add
push
push
jmp
push
or
shlb
frstor
sub
addl
aas
adc
add
pop
push
adc
out
insl
add
inc
push
and
push
or
jecxz
jne
jns
scas
sub
and
fdivrl
jmp
cmp
inc
mov
xchg
jl
sub
add
sbbb
pusha
inc
jmp
pushw
dec
jo
cmc
push
inc
sub
fwait
and
jmp
int
jbe,pt
aas
ret
leave
ljmp
aam
outsl
and
jns
ja
ja
push
repnz
movsl
aad
popf
add
push
sbb
add
std
out
jns
scas
jbe
adc
pop
and
ljmp
repnz
dec
jo
mov
push
sbb
cmp
repnz
pop
add
insb
add
add
sbb
sbb
dec
dec
adc
xchg
hlt
mov
cmc
mov
xchg
mov
gs
pop
or
push
fisttps
ret
jmp
jbe
js
repz
sbb
test
jne
inc
pop
mov
mov
lcall
xlat
push
cli
in
xor
outsb
sub
testl
gs
call
cwtl
pushl
or
das
add
mov
push
jmp
mov
adc
in
sub
dec
sub
add
push
xor
sub
push
int3
jmp
sbb
dec
xor
mov
add
add
pop
jmp
in
stos
lret
add
jmp
loopne
in
push
mov
xor
testb
cmp
add
outsb
dec
inc
nop
jb
outsl
push
sbb
xchg
and
xor
cmp
je
push
jne
sub
jl
or
pop
call
push
pop
add
pushf
ret
cs
push
cs
mov
test
sub
push
mov
shrl
add
pop
pop
lock
jbe
pop
pop
inc
test
xchg
in
out
lock
add
into
sbb
js
or
cmp
mov
jmp
pop
fdivl
sbb
in
mov
mov
pop
repz
sbb
popf
jmp
sbb
jl
std
pop
pop
pop
pop
xor
jmp
xlat
and
jmp
mov
mov
aad
sub
clc
addb
jp
pop
int
imulb
adc
rep
xchg
mov
pop
xor
imul
dec
and
cmp
dec
xor
sub
push
fnstsw
or
clc
pop
xor
jmp
ss
inc
rorl
out
adc
loopne
xor
cmc
jmp
popf
test
sbb
jg
imul
sbb
xor
and
cwtl
fwait
out
push
mov
mov
add
aam
shl
adc
ss
daa
push
pop
add
hlt
frstor
ja
mov
xchg
xchg
cmp
jecxz,pn
sbb
pop
mov
adc
sbb
cmpb
sti
nop
xor
jmp
inc
push
xchg
into
stos
inc
in
out
mov
adc
lahf
inc
pop
xchg
or
mov
cmc
inc
dec
xchg
int3
adc
jmp
addb
jg
lods
and
stc
sbbb
dec
dec
fs
dec
add
arpl
sub
lds
sub
sarb
xchg
jge
dec
repz
out
test
jo
lret
add
in
stc
xchg
dec
inc
xchg
push
mov
jmp
add
lret
leave
xor
sub
pop
pop
cli
insl
stos
sub
inc
sub
mov
add
cli
adc
mov
dec
mov
cmp
movl
cmc
add
jae
sub
pop
adc
or
test
in
dec
or
xchg
roll
cld
rol
or
push
adc
ljmp
call
or
push
das
lods
mov
inc
pop
inc
sub
dec
scas
mov
push
pop
push
mov
fucomip
mov
push
lods
mov
test
mov
or
jmp
push
ret
sbb
pop
push
adc
aam
jae
cmpsb
cmpsb
adc
adc
push
push
fs
hlt
mov
adcb
adc
popf
loop
fsubr
orl
sub
dec
push
and
adc
js
jnp
std
xor
jae
movsl
aam
pop
fxch
les
ja
rcr
std
add
inc
mov
mov
testl
push
cli
xlat
add
clc
or
lcall
imul
xor
push
xor
fst
mov
in
xor
add
pop
sub
insb
fisubs
sbb
pop
repnz
sbb
outsb
enter
repnz
mov
ja
mov
push
jg
ret
or
cmp
cmp
movsl
fcomps
movsl
jmp
add
sti
dec
seto
mov
or
dec
xor
pop
subb
fistps
mov
mov
push
adc
or
cmp
loope
jne
pop
or
add
movsl
mov
mov
mov
sbb
mov
sbb
jbe
fcmovnb
sti
and
mov
loop
jno
dec
sbb
mov
or
xchg
adcb
mov
mov
clc
jg
mov
mov
pop
xor
mov
shl
fidivl
int3
push
inc
mov
sub
mov
int
dec
cmp
cmp
mov
push
push
mov
inc
mov
shr
or
outsl
lock
out
mov
dec
shl
leave
out
xchg
rol
nop
sub
xchg
cmp
mov
or
add
push
rcrb
add
mov
push
inc
pop
jp
add
insb
push
dec
or
push
aaa
sub
lods
out
cmp
cli
pop
pop
add
or
sbb
and
repz
xlat
jo
fadd
ds
sbb
cmpsl
clc
jmp
inc
mov
mov
add
pop
pop
insb
dec
adc
in
mov
popf
mov
add
fwait
or
cmc
dec
cmp
mov
shrl
sub
orl
push
add
shrl
loop
xlat
fldenv
cmp
fdivs
cwtl
inc
or
xchg
orb
arpl
sub
adc
mov
sti
adc
pop
pop
jmp
popf
jmp
push
jge
mov
jae
sbb
shr
jle
scas
adc
adc
ret
addb
push
add
or
decl
lcall
push
add
jmp
icebp
scas
jp
insl
cmp
inc
sahf
sub
int
subb
xchg
mov
jge
inc
adc
sub
add
ficomps
lods
pusha
inc
mov
jmp
sub
jmp
adc
inc
iret
jnp
push
insb
or
or
push
mov
cmovno
sar
jle
in
xchg
jno
pop
jmp
sub
mov
cwtl
sub
xor
sbb
jmp
es
movsl
daa
pop
shll
add
jmp
add
in
rcll
lahf
lods
cmp
push
push
ds
nop
jmp
push
dec
scas
sub
mov
dec
xlat
pusha
mov
push
push
lock
in
lods
pusha
xchg
in
add
jmp
pop
iret
fs
mov
adc
push
outsb
mov
shl
sub
xchg
jl
aas
mov
jno
ret
sbb
mov
xlat
icebp
pop
imul
lret
pop
sub
mov
test
mov
xchg
pop
cmpsb
cmp
cld
pop
or
pop
jmp
leave
fs
stos
push
push
jg
or
mov
and
decb
adc
andb
mov
add
adc
jl
ljmp
dec
clc
dec
and
ss
push
lods
repz
ret
subb
lcall
xchg
xchg
out
push
out
mov
xchg
mov
cmc
sub
jmp
aaa
pusha
xchg
pop
xchg
hlt
popf
cmp
pop
lahf
push
les
sub
enter
mov
or
push
mov
je
loope
add
jmp
mov
insl
jne
in
das
adc
pop
repnz
sbb
cld
sub
addl
jmp
pop
std
mov
gs
pop
mov
add
jp
add
or
inc
and
cwtl
jl
out
testb
dec
mov
das
push
cmp
addb
js
and
loope
add
enter
xchg
or
or
push
add
shl
fwait
and
push
sub
orb
dec
clc
inc
push
sahf
aas
cmpsl
xchg
dec
mov
xchg
lahf
loope
scas
cmp
sbb
xor
imul
mov
sub
cmp
rolb
outsl
jl
pop
nop
push
add
push
push
ret
xor
cltd
add
fstpt
pop
lret
cmp
ss
jge
inc
aas
lahf
pop
mov
mov
scas
shrd
xchg
rolb
adc
jno
sbb
test
movsl
cmp
das
push
xor
push
push
and
cmpsb
push
fwait
jbe
pop
jmp
or
add
nop
cmp
pop
mov
and
sti
push
das
push
roll
imul
cmp
inc
movq
jmp
mov
or
sbb
mov
or
sub
dec
ret
shll
cmp
push
jno
mov
pop
fstpl
pop
push
mov
add
xor
out
popf
jle
adc
repz
insb
jl
add
ja
sbb
xor
sar
adc
inc
sbb
imul
push
cs
xchg
inc
push
inc
jle
lcall
andl
inc
mov
mov
xchg
out
sub
ss
jle
ret
dec
pop
lock
hlt
enter
add
cltd
cmp
add
xchg
xor
add
jmp
xor
pop
mov
push
push
pusha
iret
rorl
mov
cvtdq2ps
jecxz
sbb
adcb
pop
scas
into
bound
sub
jge
xchg
inc
mov
fs
mov
push
imul
mov
mov
or
aad
lock
pop
push
push
xor
popa
loop
lods
pop
dec
in
in
addb
dec
mov
out
bound
rcll
shlb
outsb
lods
jno
add
ret
xchg
lods
jne
sub
mov
push
adc
les
pop
cs
or
orps
pop
and
movsb
imul
adc
mov
icebp
pop
aas
mov
out
into
addl
cmpsl
sbb
inc
push
sub
mov
stos
cwtl
pop
int
mov
pop
push
scas
scas
imul
jne
add
test
icebp
sbb
pop
loop
push
dec
mov
and
push
cs
das
stos
loope
lock
adcl
or
jmp
or
and
dec
movsb
jp
xor
adc
insl
sahf
xchg
mov
xor
add
lcall
xor
les
ja
or
xlat
faddl
dec
add
add
mov
xchg
add
arpl
add
or
or
fucomp
jecxz
repnz
es
shlb
ret
add
xchg
dec
fidivl
scas
inc
pop
pop
xor
or
adc
push
or
fdivs
aas
orb
clc
mov
pop
es
lods
push
leave
imul
xchg
sbb
lds
mov
xor
je
lahf
cmp
xor
hlt
lahf
das
xor
push
add
out
inc
scas
jle
push
mov
pop
pop
dec
pop
or
ret
sub
push
mov
enter
shlb
adc
loop
int3
ljmp
pop
jmp
bound
push
mov
fsts
mov
test
pop
jle
outsl
loope
mov
sub
pop
lock
call
mov
jge
movb
mov
add
daa
test
or
out
adc
dec
jp
sub
fimuls
push
jmp
lods
or
int3
hlt
aad
in
dec
in
mov
test
xor
xor
mov
jmp
lds
das
je,pn
pop
mov
shrb
sub
js
push
or
mov
dec
lock
test
or
pop
adc
and
fwait
inc
and
out
adc
fldt
leave
in
push
int
dec
leave
jno
inc
pop
push
jne
icebp
arpl
call
or
pop
ret
jb
inc
mov
inc
cmp
mov
sub
call
daa
daa
imul
jne
mov
push
movsb
icebp
int3
pop
int
cmp
out
sub
rclb
jne
inc
mov
out
jb
jge
cmp
mov
add
jmp
inc
mov
mov
sub
push
pop
aad
rcrl
test
fistps
sti
jns
sbbl
pop
sub
roll
jg
mov
xchg
out
mov
push
push
hlt
iret
fs
insl
sub
push
mov
xchg
cmp
fwait
insl
inc
adcl
add
adc
fsubl
pinsrw
das
jmp
fiaddl
xchg
dec
in
mov
mov
xor
pop
iret
push
pop
scas
movsl
and
cwtl
inc
push
vcvtss2sd
icebp
push
or
or
pop
lds
xchg
neg
adc
out
sub
ret
negb
dec
sbb
dec
sbb
int3
das
jo
popa
adc
add
sub
jb
sbb
jo
inc
mov
adc
lods
in
mov
clc
iret
inc
jmp
mov
inc
jp
sbb
mov
push
sub
into
lods
popa
push
inc
cmc
std
cmp
std
shr
jecxz
jbe
sbb
mov
push
add
shll
mov
mov
dec
mov
push
xlat
sbb
sbb
jecxz
mov
addr16
nop
xchg
xchg
popf
js
add
adc
inc
mov
pop
fs
mov
pop
ss
xor
in
push
aas
add
call
mov
ljmp
jne
test
ret
sbb
gs
fisubrl
or
and
or
pusha
das
hlt
loopne
push
or
pop
lea
repnz
push
int3
mov
cld
adc
push
sbb
adc
xchg
push
fsubrp
test
mov
fldt
or
mov
jmp
jl
adc
inc
push
dec
xchg
cli
jmp
nop
sbb
adc
and
ret
add
add
and
xor
xchg
add
jmp
mov
adc
shr
add
fdiv
mov
or
ret
xlat
jb
pop
mov
out
subl
lds
cmp
push
sbb
out
or
test
mov
sahf
jg
or
add
nop
push
iret
xchg
ret
or
in
stc
shl
mov
fsubrp
or
lds
push
bound
or
add
in
adc
loop
push
or
les
out
lret
cmp
xlat
scas
or
inc
sbbb
sub
call
into
push
add
cmp
or
xor
ret
xor
cwtl
cltd
loope
mov
enter
sub
repz
shlb
bound
loope
add
sti
aad
adc
stos
mov
and
hlt
and
insl
and
sub
shrl
adc
xor
hlt
pop
or
inc
jge
inc
sub
mov
cmp
push
and
and
loopne
pop
xor
xorb
or
add
or
fbld
in
add
pop
faddl
ljmp
jl
or
ficoms
fsubl
dec
and
or
pop
add
sbb
mov
jae
or
xor
or
bound
and
hlt
int
push
sbb
sbb
push
ja
in
enter
inc
stos
pop
out
cmpsb
jecxz
sub
or
adc
sbb
into
adcl
jecxz
sbb
cwtl
or
xlat
les
and
push
push
mov
icebp
negb
lahf
jg
call
stos
shlb
aam
pop
xchg
call
push
or
and
mov
fadds
hlt
xchg
clc
bound
fisttpll
or
dec
iret
push
mov
andb
mov
inc
inc
outsl
outsb
fsubs
or
lahf
testb
fisttpl
pop
push
dec
xchg
outsl
dec
rorb
leave
mov
or
cmp
mov
data16
or
dec
and
ljmp
add
xchg
add
lods
sbb
outsb
adc
add
inc
sbb
mov
nop
test
call
or
jb
pop
mov
cmp
push
jne
jmp
mov
aaa
mov
add
dec
dec
or
jne
push
enter
add
mov
rolb
mov
xor
sub
push
jge
mov
sub
dec
adc
pop
or
imul
fldl
into
imul
mov
add
push
stos
add
ss
pusha
mov
adc
pop
icebp
and
mov
push
orb
out
sub
jg
test
fwait
xor
shll
jmp
lods
sbb
outsb
lock
sub
pop
sub
mov
or
sarb
cwtl
jmp
adc
into
sarb
sub
mov
inc
cmc
or
xchg
or
insl
out
add
call
lahf
or
pop
mov
mov
inc
add
inc
dec
or
je
stos
push
loope
jmp
notl
mov
pushf
adc
pop
add
jne
jg
bound
aad
stos
cmpsl
xor
jmp
mov
js
cwtl
cmp
ljmp
je,pn
mov
pop
ljmp
mov
jge
or
shr
push
and
lcall
int
push
and
push
pusha
push
sbb
test
rcrl
sbbb
decl
xor
add
in
stos
gs
jmp
dec
adc
adc
add
push
or
pop
fiaddl
xor
inc
lret
loopne
out
or
adc
mov
or
xor
ljmp
and
pop
jbe
loopne
xor
jmp
call
mov
call
mov
and
bound
jp
andb
jns
push
cmp
xor
rcll
push
cmp
push
cwtl
push
stos
andb
mov
ffreep
pop
pop
push
cmp
dec
cli
sub
inc
mov
adc
add
sbb
out
push
push
stos
or
pusha
out
mov
daa
inc
inc
cmc
adc
and
pusha
int3
out
jae
pop
add
xor
gs
xlat
call
outsl
mov
jb
insb
mov
mov
pop
jmp
data16
jbe
add
mov
fiaddl
lahf
rorl
mov
mov
daa
test
push
sub
loope
xor
jle
xchg
or
mov
int
dec
inc
mov
mov
push
mov
imul
and
movsb
clc
test
pop
inc
shrb
xor
je
sti
mov
jmp
cmp
fcoml
mov
add
dec
cmpl
mov
sub
daa
test
push
dec
xor
jo
in
test
out
dec
test
call
jo
push
push
push
jmp
test
daa
aad
cld
lds
out
jmp
mov
xchg
add
xorb
fwait
icebp
inc
pop
stos
inc
pop
add
jg
outsl
cwtl
outsb
add
xchg
jb
popf
pop
das
and
push
adc
sti
push
adc
and
repnz
and
xor
and
popa
push
and
add
in
pop
mov
pop
inc
out
xor
into
mov
adc
mov
lea
clc
cmp
jg
sub
xchg
push
jb
jecxz
push
ljmp
imul
loopne
ja
inc
cmp
loope
lahf
hlt
push
add
fs
and
mov
pop
scas
sub
sub
in
aam
es
nop
add
mov
mov
movsl
pop
adc
pusha
in
jle
jns
std
and
outsb
and
enter
aaa
sbb
jbe
cwtl
aas
or
mov
adc
inc
hlt
sbb
loop
xor
jns
sbb
cmp
ljmp
dec
inc
ljmp
mov
stos
push
xchg
or
add
out
jmp
mov
pop
stc
add
sbb
addb
sahf
incl
mov
dec
or
jp
orl
fisubs
dec
icebp
push
push
dec
faddp
inc
jp
sub
mov
lock
sub
jns
push
push
js
popa
sub
clc
divl
ret
dec
mov
cltd
mov
ds
xchg
test
xchg
enter
pop
add
lods
adc
ss
cmp
dec
leave
negl
mov
lods
out
inc
xor
dec
in
ljmp
push
and
add
ss
inc
out
add
shll
in
addr16
out
sub
pop
sub
mov
stc
push
testl
sbb
hlt
jge
icebp
ljmp
inc
adc
mov
jecxz
stc
movl
nop
add
pop
jle
addb
push
lret
hlt
xorb
push
arpl
lock
pushw
cmp
ficomps
mov
shrl
imul
gs
sub
xor
test
pop
jl
mov
mov
mov
pop
not
jo
dec
sbb
ljmp
nop
lods
add
xor
pop
xchg
push
jmp
xor
or
or
int3
mov
push
push
push
clc
adc
and
cmpb
adc
jmp
mov
clc
outsl
sub
xchg
movb
pop
adcl
lods
loop
dec
xor
fildll
shl
inc
inc
mov
adc
out
pop
push
pop
cmp
add
add
fisubrs
out
push
inc
cmpsl
add
xor
enter
ret
adc
andl
lcall
push
mov
popf
lret
jecxz,pn
ljmp
stos
mov
cmp
mov
or
jle
inc
or
inc
mov
cmp
dec
fsubr
push
pushf
mov
nop
ret
jae
lds
mov
lock
pop
push
in
or
push
jecxz
xlat
fs
cmp
lret
or
xchg
pop
cwtl
xchg
xor
mov
jmp
push
out
rol
adc
mov
stc
jl
arpl
adc
in
leave
es
hlt
shll
stc
jne
mov
sub
mov
aas
jecxz
rcrb
movl
sub
xchg
jg
pop
push
mov
dec
stos
into
xor
sbbl
inc
dec
shll
pop
fdivrs
or
pop
push
dec
mov
mov
add
fildll
cmpb
mov
xchg
cmp
push
test
out
ds
inc
cmpsb
mov
xor
dec
jmp
fldenv
or
fsubl
or
mov
cmp
jg
jmp
test
cmp
xor
or
push
sub
mov
ja
mov
dec
gs
fwait
add
adc
aaa
shlb
dec
in
sti
sub
sbb
adc
je
arpl
sub
je
sti
popf
push
and
imul
add
pop
adc
and
pop
cmc
mov
pop
pop
xor
roll
ja
ss
pop
push
mov
mov
xor
daa
inc
cmpsl
and
jne
sbb
out
mov
insl
pop
stos
test
fs
sbb
lea
rolb
sub
jne
and
sub
xor
lret
orb
mov
sub
lret
dec
pop
pop
jnp
jl
mov
clc
pop
lret
scas
add
pop
dec
pop
popa
insl
add
repnz
sub
repz
sbb
and
cli
xor
jmp
repnz
hlt
push
and
push
in
inc
and
mov
or
dec
push
pop
in
cmp
sbb
sub
sahf
fstps
add
add
pop
pop
test
fstpl
add
sahf
sub
pop
jmp
push
cmc
pop
sbb
pop
ljmp
dec
jge
xor
in
ljmp
xor
sbb
sbb
negl
dec
jo
shrl
push
pusha
dec
mov
shlb
test
add
hlt
pushf
sarb
daa
sub
cmp
adc
jmp
jno
or
cmp
clc
adc
adcl
outsb
cmp
jno
cmp
mov
scas
pop
cmpsb
int3
sbb
sbb
add
ljmp
jmp
pop
xchg
movsb
shlb
inc
add
repz
ficoml
cmpsl
add
movsb
pop
xchg
adc
sti
jge
outsb
lds
inc
add
xorb
or
xchg
add
sbb
fmuls
into
pop
adc
out
fwait
add
scas
adcl
mov
push
push
pop
pop
inc
and
or
adc
dec
dec
out
cmp
test
stc
and
insl
mov
mov
adc
out
movl
add
test
xor
mov
cmp
pusha
or
mov
cmp
mov
pop
mulb
xor
push
or
xlat
in
mov
jmp
pop
or
imul
jns
ljmp
adc
sub
cltd
insb
xchg
push
clc
enter
dec
fmuls
add
pushf
bound
ret
orb
shll
lret
jl
lahf
sbb
adc
orb
pop
int3
test
fimuls
adc
lds
pop
push
or
shrl
dec
popa
mov
jp
pop
cmp
jge
mov
into
jg
or
push
mov
mov
pushf
mov
push
mov
inc
popa
jo
pop
inc
cld
aas
movsb
jg
inc
out
push
lret
sub
sbb
adc
enter
pop
add
push
dec
inc
test
fsubr
cmpsl
scas
adc
test
loop
std
vcmpgtps
movsb
ss
shrl
pop
mov
addb
adc
sbb
pop
mov
push
dec
add
dec
in
mov
push
mov
cmpsb
jbe
jmp
push
mov
neg
add
gs
call
cld
inc
sbb
lds
mov
inc
test
cli
es
push
nop
xor
cmp
pop
adc
cmp
sub
add
xchg
daa
adc
sub
cmc
inc
jle
les
mov
out
add
enter
mov
push
and
add
cmp
pop
mov
push
stos
inc
shl
sub
cmp
xor
adc
push
mov
test
pusha
or
jmp
or
pop
nop
imul
repz
and
pop
ret
in
cmpsl
pusha
int
or
cltd
mov
mov
and
test
inc
test
lds
cld
ljmp
push
mov
sub
movsb
pop
xchg
hlt
mov
mov
clc
sub
sub
in
loop
aaa
fadds
jmp
jle
dec
add
push
push
xchg
das
pop
icebp
and
xchg
push
out
sahf
aad
cld
push
mov
xor
xchg
mov
dec
push
add
cli
js
icebp
sub
clc
loope
pop
fldcw
adc
js
lret
in
test
mov
mov
push
decb
flds
test
adc
and
push
or
jmp
and
aam
xlat
dec
movsb
repnz
push
adc
mov
xchg
sub
out
sub
pop
jmp
add
adc
mov
mov
add
mov
pop
dec
inc
cmp
repnz
sub
mov
rcrl
sub
arpl
stos
pop
push
jns
bound
divb
dec
lods
incb
mov
cmp
pop
push
xchg
aaa
mov
pop
add
or
mov
scas
pop
ljmp
inc
ds
jmp
das
xchg
or
xchg
enter
add
cmp
dec
gs
ret
cmc
pop
jb
xchg
dec
pop
or
lods
dec
daa
es
test
push
gs
repz
bound
adc
mov
je
ret
push
bound
jno
aas
xor
push
call
adc
jmp
mov
pop
jl
push
mov
dec
incb
stos
add
pop
shrb
les
test
mov
loop
jg
mov
ss
xchg
push
test
sub
scas
adc
and
pop
push
aad
mov
pushf
das
dec
pop
loope
icebp
and
jns
mov
sub
in
sub
fistl
insb
xor
clc
aad
in
lods
xchg
data16
nop
iret
and
and
fmulp
shl
repnz
add
adc
jnp
mov
in
daa
pop
jns
lds
add
mov
push
xchg
push
adc
mov
aam
dec
mov
popa
lahf
add
push
arpl
shr
sahf
repz
icebp
imul
fnstsw
dec
cmpxchg
dec
insb
call
or
jne
xchg
add
sub
sbb
add
mov
push
enter
lds
adc
mov
cld
push
lds
idiv
in
fwait
push
adc
jbe
mov
sbb
pop
mov
jle
mov
cli
fdivs
movsb
pop
dec
adc
sub
or
aas
repz
pop
inc
out
cmp
push
mov
push
loop
pusha
dec
or
jbe
popa
lahf
negb
push
mov
and
sbb
pop
cltd
push
into
adc
ja
insb
jecxz
dec
mov
loopne
pop
scas
dec
mov
insb
or
adc
inc
popa
lds
sub
int3
jae
xor
addb
jmp
imul
jno
clc
movl
jmp
push
dec
lock
cmp
push
push
push
push
mov
inc
inc
ret
xchg
xor
dec
xchg
mov
and
mov
icebp
or
inc
cmp
cmc
hlt
popf
or
lahf
cwtl
cmpsl
push
enter
add
ljmp
fnstcw
outsb
insl
orb
add
pop
negl
mov
pop
push
in
dec
pop
loop
das
rcrb
mov
jmp
mov
test
mov
rcl
jp
pop
js
aad
sub
mov
incl
pop
jg
mov
and
pop
add
inc
dec
dec
scas
add
es
rol
jno
adc
test
jae
or
mov
nop
and
adc
mov
fsubl
jmp
shll
cmp
add
ficompl
or
push
lret
or
sbb
jmp
loope
mov
cmp
aaa
dec
mov
leave
in
mov
mov
or
and
pop
inc
push
pushf
data16
repnz
push
push
xor
push
aam
rorl
loope
xor
add
or
test
push
aam
mov
xchg
aaa
jo
mov
mov
in
stc
mov
pop
dec
mov
ret
adc
cmpsl
push
mov
mov
push
xchg
sub
roll
mov
jbe
push
push
cmovle
sarb
sub
and
inc
jo
mov
push
and
das
add
inc
in
add
ret
pop
jecxz
xchg
sar
pop
sbb
out
inc
insb
cmp
clc
and
shl
mov
mov
xor
aam
add
push
ret
push
push
add
ret
or
cli
xlat
mov
mov
push
roll
mov
lock
or
insl
sbb
and
outsb
mov
pop
sub
scas
cmp
or
and
add
pop
sub
push
xchg
add
pop
add
push
in
aaa
popa
adc
push
roll
jl
testl
ljmp
mov
sbb
xchg
das
jnp
sbb
in
adc
push
sbb
adcb
jmp
adc
and
push
int3
leave
jmp
cli
adc
sti
pop
mov
sub
or
or
jne
pusha
adc
imul
sbb
fmull
std
nop
in
out
push
lods
sbbb
add
adc
insb
jmp
fisttpll
xor
loope
in
out
jp
pop
jg
push
decb
or
jp
add
xchg
or
adc
pop
push
or
adc
scas
pop
shlb
push
push
js
pushl
jge
imul
cmc
mov
arpl
movsl
cltd
call
stc
leave
icebp
or
dec
cmp
bsf
ret
mov
push
cld
mov
mov
lahf
loopne
push
mov
ret
mov
mov
mov
add
add
or
test
push
push
sub
in
cmp
sub
aas
dec
cli
xor
dec
out
mov
je
inc
dec
lea
dec
loope
stc
gs
lret
cmpb
mov
aas
push
icebp
rorl
and
out
aas
daa
std
jne
mov
fs
or
add
out
sbbb
fsubp
ds
jge
pop
and
inc
inc
jl
adc
ret
scas
push
jbe
mov
add
mov
dec
imul
dec
jmp
xor
clc
lcall
fadd
pop
pop
gs
cmp
std
aam
cmp
xchg
clc
and
adc
ja
jb
sahf
mov
pop
call
aaa
xor
sbb
or
std
mov
hlt
rcl
mul
mull
push
and
sub
or
sub
aad
cmp
fs
cmc
adc
test
push
cwtl
dec
push
jmp
sarl
pop
add
neg
testb
cmp
or
push
shlb
or
div
fimull
dec
mov
int
add
jo
sub
outsb
orl
push
jmp
push
push
push
divl
aas
sarb
sbb
add
mov
std
or
in
xchg
add
fnstenv
scas
ljmp
mov
push
lock
das
xchg
push
add
sbb
mov
mov
adc
pop
pop
push
sub
sbb
imul
mov
pop
lahf
mov
add
push
add
int
arpl
dec
or
int3
je
xchg
repz
and
and
divl
movsl
push
jge
mov
push
mov
mov
mov
loope
dec
or
sbb
lahf
mov
inc
add
or
in
cmc
or
jg
ja
xchg
push
mov
sub
dec
cmp
fstpt
and
cmp
xorl
ds
pop
daa
repnz
adc
popf
dec
sub
sub
dec
outsl
pop
rep
fildl
cwtl
pop
push
movl
pushf
adc
mov
cltd
jno
loope
icebp
dec
sub
pusha
out
mov
dec
aam
or
adc
clc
lods
out
sbb
cmp
add
in
outsb
mov
mov
and
cmpsb
lock
xchg
jb
and
mov
add
stc
ret
pop
rol
shr
adc
push
mov
adc
cmp
js
out
in
push
ds
sbb
mov
xchg
ret
mov
pusha
jbe
pop
mov
int
inc
inc
adc
lahf
lock
mov
mov
dec
xchg
push
roll
push
xor
out
pop
lahf
mov
xor
add
cli
inc
jmp
addr16
mov
adc
arpl
dec
incb
adcl
or
imul
add
iret
sbb
loopne
or
or
jmp
scas
cmc
xchg
and
test
push
push
push
pop
out
jp
cli
andb
cmpsl
and
push
andb
movsl
sbb
fmul
inc
and
lret
fsubs
xor
dec
push
mov
jbe
jg
inc
ds
jb
sbbl
cmp
xchg
clc
je
lahf
push
jecxz
sub
xor
movsl
fs
inc
push
xchg
fcomip
fstl
add
test
mov
and
aam
pusha
cmp
leave
dec
pop
push
mov
repnz
xor
test
pop
test
clc
mov
aam
xorb
ja
sub
and
lcall
sub
cmp
into
mov
push
pop
loop
pop
stc
xor
mov
push
mov
inc
mov
in
xlat
push
je
pop
outsl
test
or
rolb
pop
bound
add
fildl
jmp
lods
jmp
push
pop
sub
lods
repnz
and
into
push
mov
jg
vxorps
mov
call
mov
fidivrs
dec
aas
pop
testb
adc
sahf
dec
leave
add
mov
lock
cmc
bound
add
es
out
pop
and
xor
sub
cld
dec
jns
in
loopne
out
adc
mov
mov
fisubrs
cmc
add
add
or
sub
call
mov
out
jne
orb
frstor
flds
lods
xor
mov
push
push
sarl
or
out
xchg
jmp
mov
cmp
mov
inc
lahf
stos
cmpsl
push
daa
movsb
scas
cld
push
fidivl
inc
sbb
add
push
xor
add
pop
and
cmp
clc
out
pop
inc
inc
mov
adc
or
and
inc
dec
idiv
outsb
push
adc
pop
sbb
pop
fimull
repnz
jle
jmp
inc
je
orb
jnp
mov
bound
clc
push
repz
loop
and
ja
ret
jmp
rcll
adc
push
lock
out
or
dec
enter
push
pushf
add
push
jmp
add
and
or
subl
or
add
cld
aad
push
jnp
or
sub
and
xchg
adc
sbbl
and
imul
fildll
sbb
xchg
mov
enter
add
jmp
cmp
or
adc
mov
movsb
orb
lahf
pop
push
push
add
movsb
sbb
sysret
test
bnd
je
push
jne
addb
mul
dec
fidivrs
scas
xchg
pop
aad
xchg
mov
add
mov
or
mov
jmp
out
fsubs
hlt
dec
jbe
sbbb
cmp
or
cmp
xor
and
and
es
sahf
add
push
fisttps
or
jae
fcoms
jge
out
das
loop
rorb
mov
mov
mov
jb
inc
push
mov
pushw
shrb
push
testl
xor
dec
mov
jmp
decl
xchg
std
movsb
addl
std
add
inc
cmp
jp
or
pop
icebp
add
jmp
pop
mov
jge
jmp
pop
mov
mov
sub
xchg
ret
push
shlb
and
adc
add
mov
inc
lods
cmp
sub
cld
add
pop
xchg
not
rorb
add
mov
ss
pslld
inc
xor
outsl
leave
dec
xchg
scas
or
les
jmp
adc
push
adc
sbb
and
pusha
add
adc
mov
popf
out
into
mov
xchg
push
jg
jmp
fs
jl
loope
xorl
mov
add
int
mov
add
test
pop
std
pop
jo
mov
or
adc
scas
dec
pop
push
sub
dec
js
jo
or
push
adc
daa
mov
rclb
xor
pop
or
xor
xor
add
pop
cmp
jmp
mov
jl
push
mov
push
mov
sbb
adc
and
pop
xor
mov
lret
daa
jmp
sub
fidivrl
sahf
repz
adc
cwtl
mov
test
dec
fidivs
in
inc
pusha
cld
in
xor
lahf
gs
subb
dec
std
bound
mov
adc
bound
adc
xor
add
mov
jo
mov
inc
cmp
loop
xchg
pusha
xchg
fnsave
das
rcll
mov
ret
push
fistl
ret
and
mov
xor
or
pop
aad
add
add
and
sub
out
mov
pop
jl
fsubr
test
icebp
inc
flds
inc
or
cs
add
jge
gs
mov
adc
pop
jmp
mov
mov
pop
mov
jecxz
movsl
nop
imul
or
inc
xchg
jle
jmp
dec
adc
push
xor
fadds
dec
shrl
add
shrl
mov
sub
ret
enter
test
imul
mov
inc
pop
push
and
aad
cmp
mov
jno
sbb
pop
pushl
divl
fcos
or
sbb
jecxz
cmp
sub
je
das
pop
test
repnz
pop
das
pmovmskb
jb
rcl
xor
jle
add
xchg
pop
push
lahf
xor
pop
dec
push
fidivs
cmp
das
test
or
sub
in
jns
cli
repnz
xchg
sub
jmp
int
leave
lahf
subb
push
mov
sub
seta
cmp
shrb
testb
sub
ljmp
sub
fcomps
cltd
mov
mov
das
push
mov
pop
push
xor
neg
stos
inc
dec
loope
xchg
outsl
popa
add
inc
jg
fs
pusha
jne
dec
dec
sahf
cs
addb
and
mov
movsb
xor
xorb
dec
arpl
cmp
push
push
mov
adc
dec
xchg
test
jnp
dec
sarb
push
shrb
mov
and
jle
shrl
and
jb
add
jns
pop
repz
sub
loop
push
int
push
jmp
shlb
pop
mov
dec
sub
out
jb
jbe
idivb
test
mov
test
cmpb
add
sub
call
push
jmp
pop
cmp
mov
maskmovq
mov
add
jmp
jle
push
jnp
icebp
cwtl
jb
out
pop
mov
nop
mov
insb
push
lds
inc
jle
test
adc
sbb
xchg
icebp
or
nop
pop
repz
sarb
mov
test
jmp
orb
jp
in
ret
movzwl
sbb
mov
cmpsb
cmp
xor
cmp
add
pop
call
mov
dec
clc
imul
add
pop
sub
fisubs
xchg
lret
mov
pop
mov
xor
test
cltd
dec
dec
loop
push
out
fstl
push
hlt
or
lock
lcall
gs
sahf
and
movsb
adc
icebp
push
jmp
cs
push
loope
out
inc
and
in
daa
inc
notb
pop
loop
iret
movsb
and
push
call
dec
push
xchg
add
iret
repz
and
adc
lea
into
sub
inc
jb
popf
inc
xchg
lea
push
mul
jle
ja
sub
xor
mov
dec
push
push
bound
jmp
push
mov
sub
aas
in
xchg
in
pop
fistps
add
sub
cmpb
shrb
repz
push
in
das
mov
or
test
sbb
sub
ljmp
xchg
add
lods
inc
rcr
shlb
sub
sbb
jecxz
gs
mov
pusha
ret
add
or
add
ja
pop
lret
mov
cmp
or
ret
and
pop
push
add
or
in
add
mov
dec
ja
dec
pop
jecxz
cmp
cmpb
stc
pop
jmp
push
push
movsl
adc
and
pop
nop
std
scas
aam
push
add
mov
pusha
test
mov
jp
fldcw
push
add
xchg
std
cmp
xorb
jo
xchg
je
loope
xchg
add
push
maxps
pop
lods
xor
lahf
rol
movsb
sbb
sahf
enter
lret
cmovge
dec
pushl
pop
cmp
fwait
and
lret
lods
imul
cmpsl
mov
mov
daa
fists
ja
testb
shll
jle
pop
imul
dec
xor
in
sub
sub
jmp
lods
cwtl
xor
mov
aad
scas
cld
push
pop
inc
xchg
in
inc
aaa
push
mov
sbbb
or
call
lret
scas
jmp
adc
je
push
aas
test
inc
dec
jmp
cmp
mov
cs
fidivs
xor
out
aas
lds
cmp
lret
jmp
push
add
dec
or
ds
outsb
mov
dec
stos
and
push
or
pop
mov
mov
or
lods
movsl
cmpsl
mov
and
ja
push
push
pop
push
sbbb
cmp
cli
arpl
mov
and
push
dec
mov
pop
inc
loopne
inc
inc
call
sbb
xchg
xor
adc
cwtl
mov
cmp
ret
subl
stos
mov
xchg
call
orl
push
jo
adc
cmp
push
scas
loopne
xor
pop
aad
jmp
cli
jge
das
mov
pop
cmp
adcl
sub
std
or
call
mov
mov
into
and
push
mov
cmpsb
jge
add
test
imul
xchg
dec
adc
lock
jo
jge
cld
xor
pop
dec
mov
sub
xchg
add
bound
cmp
rolb
and
push
xchg
lock
fsubr
sub
arpl
lods
cld
lret
jmp
js
add
out
push
inc
out
xchg
insb
sahf
xchg
je
mov
daa
cld
cmp
mov
cmp
jmp
jp
ror
pop
adc
ret
ljmp
sub
add
xchg
jns
sub
jg
inc
popa
out
les
jbe
cmp
dec
or
aad
xor
add
mov
shlb
add
fisubrs
pop
out
xor
mov
lret
add
push
push
jo
push
fnstenv
mov
mov
popf
xchg
xor
lret
mov
andb
jg
pop
sbb
mov
cmpb
mov
les
and
aaa
or
leave
hlt
sarb
mov
cld
jmp
pop
xor
mov
mov
xor
adc
push
adc
add
mov
adc
dec
xor
sbb
lea
pop
pusha
mov
pop
jno
push
sarb
addl
mov
or
cs
addr16
nop
add
sahf
js
inc
jmp
jg
std
cmp
leave
mov
add
cs
and
jmp
out
mov
scas
jno
push
data16
daa
cld
or
jmp
or
sub
and
push
or
jae
pop
cmp
cwtl
fsubl
dec
xor
shlb
test
jns
mov
or
xchg
push
sbb
xchg
js
leave
ja
xlat
or
lock
push
fdivs
xor
filds
dec
adc
or
adc
xchg
dec
push
xor
nop
push
sbb
adc
je
sbb
mov
sbb
int
xor
or
int
inc
sbb
mov
imul
pop
push
fstpl
orb
sub
fdivs
in
add
ds
bound
mov
push
sub
aas
sbb
test
sbb
or
jno
dec
imul
or
mov
mov
les
stos
sub
jne
aas
jmp
insl
sub
pop
or
inc
mov
pop
mov
jl
mov
imul
pop
std
lea
pushf
lret
push
add
jne
orb
out
add
cmc
jmp
xchg
rcll
mov
fildll
ret
cmpsb
idivb
xchg
sbb
or
pop
incb
push
lret
mov
mov
insb
daa
pusha
in
mov
xor
outsl
nopl
and
rcrl
mov
aad
push
hlt
push
push
add
shlb
push
movsb
mov
jns
jns
ljmp
add
xor
mov
jp
cli
fwait
push
xchg
pop
ja
push
add
sbb
or
xchg
fisubrl
and
dec
testl
sub
jmp
ljmp
and
add
hlt
out
mov
cwtl
cmp
pop
stos
sub
cmp
test
mov
inc
sbb
inc
rcrl
add
dec
jb
sbb
cmp
shll
js
addr16
pusha
jle
xor
insl
sub
orb
shll
scas
push
cmp
xchg
int3
sbbl
insl
push
cmc
fsubl
dec
fiadds
rol
cmp
push
inc
or
jmp
test
sti
xor
jmp
frstor
icebp
ds
hlt
aam
push
mov
dec
and
out
mov
xchg
pop
jmp
add
and
rcr
dec
test
or
ljmp
nop
dec
sub
pop
lods
mov
in
push
jno
inc
jmp
jecxz
xchg
rol
std
add
das
lds
mov
sbb
pushw
mov
jmp
cmpsl
cmovne
or
or
jg
inc
adc
add
je
ficoms
das
jg
add
jmp
flds
add
insl
jmp
cmp
std
mov
pop
sub
ja
cmp
das
and
jns
xorb
int3
add
in
pop
idiv
jg
sub
cli
cwtl
notb
imul
mov
cmp
outsb
mov
push
xchg
pop
xchg
or
cs
xor
call
mov
sbb
lods
pop
dec
sarl
cmp
pop
sub
sbb
and
jns
clc
andb
or
jmp
mov
dec
iret
add
bound
add
in
into
adc
push
popa
pushf
jmp
int
jl
jbe
jmp
mov
xor
neg
xchg
int
mov
push
fs
sub
mov
adc
inc
std
add
daa
add
shr
ret
das
lret
gs
push
adc
out
lea
add
jns
cli
sbb
dec
sahf
cmp
icebp
int
in
cmp
orl
pop
or
repz
mov
xchg
les
xor
jns
lds
aad
ljmp
push
adc
pop
inc
hlt
add
mov
add
xchg
mov
cmp
shr
aaa
push
cmp
popf
sub
add
fisubrl
out
in
mov
push
jb
xchg
movsl
or
fsubrp
aaa
stc
mov
fucomp
xor
dec
loope
xchg
lds
js
pop
or
cmc
and
adc
jo
ret
or
inc
push
fisubrs
in
pop
stos
adc
dec
jo
pop
lcall
inc
dec
sbb
jae
mov
xor
pop
dec
push
lods
mov
xchg
push
movsb
adc
scas
adc
divb
or
lcall
gs
loope
mov
push
fcomps
sub
shrl
add
jns
push
mov
call
outsl
les
incb
xor
push
js
ds
inc
test
data16
mov
or
sbb
push
imul
ret
or
xchg
loopne
mov
mulb
add
out
add
xlat
add
cli
jmp
lods
sub
lods
sbb
jmpw
pusha
sbb
adc
push
test
mov
clc
add
stc
in
dec
add
rcll
cmp
insl
xor
push
adc
pop
lods
xchg
repnz
dec
xchg
sbb
add
push
push
or
add
xchg
mov
mov
pop
scas
popa
push
xchg
sub
mov
cmp
mov
fsubs
leave
pop
imul
jmp
shl
xor
xor
addr16
sarl
dec
pusha
orb
popw
mov
mov
test
adc
dec
jmp
mov
cld
sub
inc
cs
push
stos
std
xchg
movsb
scas
fnstenv
in
mov
or
leave
pop
jmp
nop
jo
mov
pop
rcr
pop
push
mov
clc
or
nop
mov
int
sub
pop
clc
stc
aad
mov
sbb
fwait
sbb
aad
stc
add
pop
div
sub
imul
mov
or
outsb
testl
push
out
pop
inc
mov
xchg
add
pop
rorl
mov
add
xor
mov
sub
fnstcw
adc
bound
add
neg
jp
loop
shr
sarb
adc
iret
ja
sub
mov
ficoms
jbe
xchg
adc
shlb
in
test
add
pop
fwait
pop
push
mov
shr
push
iret
push
mov
mov
jb
nop
cmp
fdivs
mov
lds
mov
xor
in
faddl
adc
call
leave
push
pop
cld
idivl
std
sbbb
mov
je
and
shlb
xchg
dec
or
adc
add
repnz
mov
jecxz
fidivrs
sub
ljmp
cltd
push
and
loop
xchg
test
pop
ljmp
cwtl
ret
or
sub
adc
pusha
hlt
fs
or
subl
out
hlt
ds
and
sub
cld
xchg
mov
dec
xor
shl
call
movsb
jno
push
cltd
jnp
mov
in
les
mov
adcb
or
add
addl
jge
mov
aam
xchg
ja
leave
sub
testb
arpl
lds
in
inc
adc
mov
rclb
sub
in
rcll
test
cli
popf
mov
leave
jp
lcall
mov
cmpsb
xchg
jbe
hlt
push
inc
or
aas
mov
add
decb
add
mov
imul
jp
js
ds
fadd
mov
stos
or
adc
pop
outsl
xchg
call
jle
sarl
adc
mov
or
movsl
inc
into
mov
fsubrl
push
in
ud2
push
mov
in
int
jnp
pop
jl
inc
int3
dec
cmp
mov
push
add
in
xlat
push
sub
pop
sbb
xchg
fldenv
dec
cmp
dec
inc
mov
rol
push
sub
sahf
fs
push
movsl
mulb
push
lock
add
sub
enter
xor
jmp
loop
xlat
mov
cwtl
mov
addb
js
adc
pop
mov
inc
add
dec
not
shl
inc
jmp
cli
outsl
movsl
push
push
enter
dec
xor
and
push
stc
jb
dec
aad
jp
xchg
mov
push
jb
popa
out
insl
jo
ljmp
sti
sub
adc
dec
enter
mov
xchg
sarl
cmp
dec
inc
sarl
pop
mov
sarb
or
or
mov
mov
fiadds
and
or
movsl
jnp
in
and
sub
add
pop
cmp
xchg
or
out
lea
sbbb
lret
pop
mov
movsb
popa
or
add
xchg
repz
jecxz
cwtl
or
sti
cmp
test
fcomip
iret
mov
cmp
cmpsb
add
in
xchg
mov
int
push
popa
out
push
jae
or
out
adc
dec
push
mov
cli
add
add
cmpsl
mov
rcrb
mov
data16
mov
push
or
call
ds
pusha
imul
add
into
or
test
sub
pop
pop
roll
rcrb
xchg
sub
das
pop
xor
and
inc
outsb
xor
fisttps
ja
xor
fsts
add
je
pop
pop
xor
xor
pop
sbb
cmp
fs
dec
sub
rcll
test
lods
les
xor
test
ret
mov
pop
push
mov
and
push
rcrl
repz
aaa
adc
push
adc
lcall
xor
sbb
pop
sub
mov
jae
pop
call
jp
lods
rolb
inc
sub
jge
flds
pop
mov
mov
xor
out
mov
or
lahf
inc
jo
mov
pop
pushf
inc
rcrl
divl
mov
sbb
pop
hlt
mov
insb
sub
and
pop
out
repnz
pop
cmc
stc
loop
pusha
imul
not
xor
stos
add
lret
pushf
adc
sub
dec
loop
pop
push
into
out
andb
and
push
mov
add
pop
vaddsd
pop
sub
stc
jbe
or
int3
pop
out
mov
insl
add
xorl
ja
sbb
push
cmpsl
push
imul
mov
sub
not
xor
mov
cs
dec
shlb
jno
jl
mov
inc
daa
je
or
mov
or
xor
aad
out
jns
or
into
or
cmp
outsb
andb
popa
inc
pop
xor
jmp
icebp
sbbl
pop
sar
mov
xor
js
fstpl
in
cld
adc
dec
test
inc
sub
stos
neg
add
cmp
xor
lock
or
xchg
je
mov
dec
xorb
push
lods
mov
sbb
call
mov
cmpps
in
push
cmp
jno
cmp
cltd
xchg
add
adc
dec
out
dec
or
jle
jb
test
add
jge
js
ret
bound
sub
mov
add
roll
sub
rcl
adc
cli
push
lds
arpl
ss
jmp
nop
sti
mov
push
lcall
addl
adc
add
inc
xchg
and
lahf
xor
je
push
mov
or
jecxz
shlb
inc
adc
ljmp
mov
fmuls
aaa
mov
es
clc
adc
ror
out
cli
xor
cmp
into
jmp
push
push
dec
loopne
pop
mov
cmp
js
add
clc
adc
fsubrl
cmp
sub
pop
push
call
pop
inc
addl
xor
imul
add
es
movlps
cmc
pop
out
ret
dec
lock
mov
xchg
xchg
packssdw
leave
ficomps
jp
push
daa
and
push
mov
inc
test
stos
ss
fsts
jmp
hlt
pop
sub
repnz
in
les
inc
ror
subl
mov
insl
adc
shlb
push
mov
cli
in
clc
dec
pop
dec
ret
pop
fsubrl
push
stc
movsb
lahf
pop
cld
mov
jp
xchg
push
mov
sub
jmp
mov
je
icebp
inc
es
push
mov
xchg
sub
scas
test
pop
pop
push
mov
add
sub
insl
adc
loope
mov
cltd
mov
inc
pop
pop
test
test
bound
mov
or
and
repz
xchg
or
sbb
mov
xor
add
mov
adc
push
dec
or
pop
jo
xchg
lds
bound
jge
jle
push
mov
out
mov
push
mov
bound
cmp
call
pop
imul
into
arpl
mov
shll
das
imul
or
ja
bound
aad
mov
pop
add
pop
fwait
push
jg
jbe,pn
cltd
inc
xchg
xor
dec
or
ja
aad
adc
push
out
fnstenv
cmp
cmp
rcr
subps
dec
cwtl
mov
into
call
loop
jle
ret
add
out
mov
inc
push
fcompl
imul
xchg
xor
addr16
adcb
not
jle
fimuls
add
mov
mov
mov
int
mov
pop
out
jne
lret
jmp
lods
insb
or
jg
or
je
ret
clc
add
andb
add
jmp
add
stos
mov
dec
dec
add
aas
xchg
inc
jns
add
inc
push
jmp
mov
or
pop
iret
rcrb
fucomp
movsb
push
push
mov
dec
lret
rcr
jns
sub
mov
jecxz
cmp
lock
test
xlat
add
dec
cld
out
sub
inc
mov
cmc
mul
sub
out
cltd
je
mov
fnsave
fs
push
jne
les
or
add
fnstcw
mov
mov
enter
out
adcl
nop
shr
out
adc
sbb
test
mov
xchg
les
sub
xor
push
das
repnz
sub
mov
jbe
xorl
xor
or
inc
sbb
mov
sub
mov
pop
out
imul
aad
mov
add
imul
repz
jo
add
adc
rol
inc
pusha
pop
sub
jno
sbb
pop
fimull
ret
add
fld
aam
stos
mov
pop
lahf
adc
push
adc
adc
popf
push
movsb
mov
orl
dec
pop
sub
xor
push
add
sub
jge
ret
pop
xchg
not
and
mov
adc
mov
scas
mov
cmpb
push
push
orb
adc
sbb
sub
mov
fnstsw
jmp
hlt
pop
sub
sti
pop
adcl
gs
enter
bndldx
iret
jnp
mov
cmp
or
ljmp
adc
adc
xor
push
xor
outsb
mov
mov
mov
jae
xchg
jae
xchg
adc
cmp
jo
sub
jge
or
cmc
xchg
data16
pop
outsb
adc
iret
dec
sti
jns
das
lret
jmp
popa
pop
test
rcrl
lahf
testl
dec
arpl
movsb
dec
hlt
push
roll
out
out
fwait
daa
and
aad
fsubl
xor
xchg
xchg
mov
adc
cmp
das
mov
and
out
push
cmp
cmp
or
jmp
or
cltd
pause
nop
push
dec
add
and
mov
dec
xor
cltd
mov
arpl
mov
ja
nop
pop
cld
push
and
push
dec
push
cmp
pop
dec
subl
xchg
push
fstps
into
mov
cmp
xchg
mov
xchg
repnz
fmul
adc
pop
mov
xchg
jecxz
sarl
lret
sahf
mov
roll
out
adc
mov
cmpsl
das
movsb
icebp
test
pusha
cmpsb
loop
inc
addr16
enter
int
mov
mov
mov
mov
cwtl
daa
imul
xlat
or
pop
leave
fs
jo
adcl
iret
or
mov
jb
jno
jmp
jg
shl
mov
scas
testl
outsb
add
lods
push
popw
ljmp
arpl
les
pop
add
mov
repnz
push
pop
pop
and
gs
enter
xor
in
inc
push
sbb
mov
das
mov
clc
mov
clc
bound
or
mov
jg
addr16
add
addr16
jb
aaa
test
cli
xor
push
mov
stos
sub
sahf
dec
mov
cmp
xor
jmp
mov
filds
mov
divl
push
lret
outsl
fcoms
ljmp
sbb
mov
dec
cmp
test
add
lret
inc
or
push
push
cmp
sub
rorl
xor
xor
push
add
or
pusha
std
cmpb
pop
sub
test
repz
jmp
lret
rorl
ja
cmc
lahf
jl
pop
sub
das
adc
dec
xor
push
mov
xchg
xor
fidivrl
testb
mov
push
xor
pop
jmp
ficomps
xor
jo
add
pusha
pop
sbb
cld
add
dec
pop
pop
stos
imul
jnp
adc
jmp
or
test
jl
pusha
xchg
divb
pop
add
hlt
sub
pushf
sbb
clc
idiv
aad
sub
pop
sbb
xchg
arpl
xor
call
xor
sub
movsb
fs
sub
test
add
pop
daa
push
mov
inc
in
pop
jmp
add
in
push
jnp
and
popf
add
or
mov
xchg
das
std
repz
jne
mov
je
shl
mov
hlt
adc
add
mov
sbb
outsl
sbb
call
hlt
cwtl
mov
jno
stos
aas
adc
pop
push
lds
push
orl
imul
jo
fwait
jmp
ja
mov
sbb
cmp
stos
jle
jae
jle
in
mov
stos
push
push
in
push
aad
xchg
add
xor
repnz
dec
add
pop
lock
rcll
dec
daa
and
pop
jmp
pop
sub
test
xor
mov
add
cmp
jp
mov
mov
repnz
push
jnp
insb
sub
adc
repz
insb
pop
and
push
cltd
iret
es
adc
add
cmp
inc
testb
js
pop
xchg
test
mov
sub
mov
adc
add
mov
cmpb
cli
mov
andb
dec
inc
sbb
sbb
arpl
orb
mov
cmp
inc
pusha
adc
inc
scas
rorl
jo
jne
test
repnz
insl
push
mov
mov
filds
push
jb
test
mov
dec
cmpb
inc
ffreep
ret
push
xchg
jge
sub
inc
add
jmp
push
sbb
pop
xchg
inc
sub
dec
cmp
push
lods
jg
pop
ret
pop
dec
jecxz
ja
mov
sbb
add
aam
inc
pop
icebp
out
xor
adc
addr16
adc
cmc
lods
dec
or
push
pop
jmp
jle
or
insb
mov
pop
xor
adc
mov
push
push
lock
nop
jbe
add
dec
inc
nop
push
jmp
mov
cmp
das
or
into
jge
and
dec
adc
mov
push
sub
add
fnsave
mov
lret
push
aad
loopne
sub
push
push
inc
or
jl
add
dec
dec
push
cmp
xchg
push
mov
pop
xor
ret
sbb
mov
in
loop
pop
loope
push
pop
jmp
into
push
lfs
not
mov
inc
sbb
cs
fwait
jl
imull
adc
dec
push
and
xchg
divb
arpl
or
and
xor
sbb
cld
mov
mov
cmp
fs
movsb
rorl
insb
add
sub
cld
pop
mov
ja
xchg
push
mov
adc
loop
cli
pop
in
lcall
fnstsw
add
ja
mov
sub
sarl
jmp
mov
jmp
popf
insb
pop
out
mov
and
push
cmpsb
mov
addl
hlt
out
pop
dec
sahf
icebp
inc
push
sbb
jecxz
mov
in
sub
fs
xchg
add
je
out
pop
inc
cltd
push
test
xor
push
mov
jmp
imul
inc
lods
mov
sahf
pop
mov
mov
lds
jecxz
pop
cmp
movsb
adc
fcoms
dec
outsl
jmp
dec
fisubs
push
fisttpl
cmpb
stos
lods
or
repz
dec
cli
test
jns
sar
adc
push
mov
cmpsl
pop
fildl
sub
sub
test
add
out
push
cmp
fisubrl
cmp
orb
or
in
smsw
and
je
push
sub
or
pop
repnz
dec
push
test
mov
push
scas
insb
icebp
jmp
loopne
fildl
clc
mov
xchg
inc
push
push
cmp
adcb
or
push
enter
roll
mov
sbb
cmpsl
mov
pop
es
pushf
mov
push
hlt
jmp
pop
scas
adc
inc
pop
mov
add
sti
scas
or
mov
ja
sub
das
scas
in
fisttpll
ret
sub
xor
adcl
and
out
sub
and
mul
aaa
mov
enter
adc
push
pop
sub
jecxz
loope
push
fwait
cmp
sbb
mov
in
rcll
add
dec
xchg
and
repnz
fisttps
iret
hlt
inc
imul
jne
adc
dec
icebp
mov
sub
cmc
cmpb
aad
pop
sub
or
call
jg
xchg
jae
in
loope
insb
pop
mov
jae
xchg
pavgb
arpl
push
sbb
push
inc
leave
sub
xlat
sub
inc
shlb
loopne
adc
sub
daa
insl
add
pop
std
mov
leave
leave
mov
adc
pop
add
push
push
jmp
les
das
mov
int3
mov
test
paddw
ss
subl
out
pusha
add
leave
das
xor
test
push
pop
inc
add
mov
aam
jno
jae
lods
mov
dec
jo
jmp
cld
xchg
push
sbb
jg
daa
neg
push
cmpl
add
int3
cld
roll
adc
shlb
mov
push
push
shr
orl
mov
add
mov
xchg
sub
sub
mov
pop
xor
mov
test
lods
pop
call
ret
rclb
xchg
push
mov
add
pusha
push
fs
jmp
bound
inc
mov
inc
or
fwait
mov
jmp
pop
xchg
jnp
jno
sbb
fyl2xp1
mov
rcl
xchg
dec
leave
int
jae
xchg
xchg
lds
dec
pop
insl
add
fsubrs
jmp
dec
mov
imul
push
addl
outsl
shr
add
jle
dec
push
pushf
push
push
or
xor
and
das
xor
aam
test
push
adc
mov
mov
lods
imul
sbb
xchg
and
and
push
or
lods
dec
mov
data16
xchg
adc
adc
ret
jbe
jae
into
js
dec
pop
inc
sub
add
pop
fbld
mov
sub
lret
cmp
sub
cmp
mov
or
test
shlb
bound
push
add
aam
and
int3
mov
ds
mov
clc
mov
pop
loop
cmp
xor
leave
push
enter
mov
data16
movsb
sbb
dec
movl
add
in
leave
push
jmp
leave
xor
sub
mov
mov
lds
mov
aad
das
andl
mov
aaa
mov
or
or
flds
push
cld
xchg
xchg
cmp
dec
int
inc
fstps
mov
mov
jg
jp
xchg
add
dec
jl
sub
cmpb
sub
mov
push
push
test
add
jns
inc
in
sub
insb
adc
dec
mov
imul
ja
mov
push
mov
inc
adc
cs
xor
xor
out
pop
arpl
push
mov
jmp
add
add
lds
sub
sbb
mov
stos
or
mov
push
and
inc
lods
nop
add
imul
jp
or
stc
jmp
add
pop
xchg
not
lret
or
in
xor
inc
lock
and
add
sbb
popf
inc
add
pop
sbbb
pop
stos
in
push
loope,pn
jg
das
mov
xchg
and
pop
mov
add
shr
add
cmpsl
mov
jo
out
push
jno
dec
test
mov
adc
cmp
jne
add
push
or
push
clc
mov
sbb
mov
jmp
pop
adc
xlat
pop
mov
dec
pop
pop
sub
test
sbb
xor
xor
push
in
mov
cli
mov
and
dec
or
cmpsl
mov
jp
pop
inc
dec
scas
pop
mov
jmp
scas
ljmp
mov
jp
daa
add
and
sbb
lret
mov
xchg
das
xor
sbb
cmp
jmp
mov
ror
pop
lcall
mov
push
lcall
cld
pop
pop
mov
xor
sub
loope
mov
std
in
lret
mov
or
enter
ljmp
loopne
adc
mov
dec
adcl
adc
sub
imul
push
lahf
and
das
adc
adc
das
divb
adc
ftst
push
clc
cld
mov
push
pop
sbb
mov
mov
inc
mov
lods
imul
adc
lock
mov
jnp
ret
mov
cmp
sub
les
or
and
mov
sub
shl
xor
les
pusha
xor
pop
sar
jbe
xor
rorb
push
addb
pop
push
das
mov
pusha
sub
fcoms
inc
fwait
out
jg
cmc
out
push
cmpsb
out
cmp
pop
mov
movzwl
add
mov
int
push
sahf
mov
cwtl
fs
sbb
mulb
das
clc
rcl
dec
push
mov
cmp
jae
shll
pusha
mov
mov
mov
sbb
push
scas
fs
push
push
sub
fidivs
inc
sub
loopne
push
push
add
je
sbb
cmc
or
inc
or
mov
pop
add
adc
mov
jmp
iret
ds
dec
filds
sbb
dec
jno
dec
pop
cmp
sti
sub
cmc
ror
xorb
inc
movsl
jl
out
pusha
lods
add
adc
aas
cmp
andl
add
sub
add
enter
pop
add
icebp
inc
adc
cmp
fs
or
xor
lods
adc
rcll
mov
push
adc
or
jmp
add
or
ret
push
cwtl
inc
test
out
adc
dec
push
insl
add
pop
add
jp
lahf
jmp
daa
inc
loopne
push
xchg
data16
or
xor
and
call
sti
enter
sysenter
push
pop
mov
pop
adc
scas
push
mov
stos
movsl
jbe
pop
jmp
jnp
aaa
aad
movsl
add
js
nop
dec
push
mov
fcoml
mov
xor
lea
adc
pop
sub
jae
inc
jbe
rcll
mov
mov
jbe
test
pop
and
mov
pop
xor
adc
test
adc
mov
dec
ret
push
mov
ljmp
push
rorb
sar
iret
jbe
roll
mov
popa
fnstcw
xor
in
and
cld
xor
push
lods
lods
sahf
iret
mov
popf
loopne
push
xlat
adcb
or
repnz
sbb
pusha
mov
mov
and
aas
push
xor
addr16
push
add
pop
cwtl
mov
pop
sub
ret
xchg
mov
xchg
jp
ja
pop
xchg
cmc
pushf
push
xchg
sub
daa
inc
pop
jmp
xor
popf
jbe
rolb
jbe
push
pop
daa
pop
sub
push
pop
test
and
pop
jg
lret
push
mov
pushf
out
loop
dec
inc
sub
jle
pop
mov
xor
sbb
dec
xor
add
addl
jmp
fldl
jp
push
jmp
add
dec
inc
ret
inc
mov
adc
jp
lock
sti
loope
lods
dec
rorb
dec
inc
inc
shll
mov
sub
daa
push
icebp
dec
lahf
sub
xor
xor
inc
mov
mov
lock
out
outsb
loope
lods
push
leave
lahf
dec
lock
sbb
pop
push
push
pop
pusha
or
mov
das
mov
or
push
test
jl
or
jmp
add
sub
jg
adc
push
sahf
or
xor
and
cmp
dec
pop
test
inc
pop
ljmp
or
adc
out
bound
ret
sub
imul
pop
into
add
nop
xor
lock
adc
add
sahf
add
dec
add
or
jecxz
sub
loope
push
pop
xlat
nop
cmp
incb
push
aaa
sub
movsl
icebp
mov
pop
popa
int
xchg
dec
jo
push
xchg
or
jg
loop
pop
mov
out
dec
pop
fcompl
dec
sub
bound
fmuls
les
jnp
mov
in
xchg
mov
push
orl
add
jno
sbb
mov
fmull
push
icebp
jne
loop
cmp
dec
jae
js
lret
xor
push
jmp
mov
int3
jnp
and
fsubs
mov
xchg
pop
jne
adc
leave
xchg
sbbb
sbb
mov
mov
pop
push
sahf
dec
mov
mov
not
add
pop
xchg
into
into
popa
jnp
call
or
and
mov
adc
push
dec
add
xchg
cld
shlb
push
stos
bound
ljmp
inc
sub
push
or
jecxz
push
sti
push
pusha
out
sub
sub
ljmp
std
dec
nop
and
enter
js
imul
mov
push
mov
je
test
clc
mov
or
outsb
cmpl
cmpsl
add
xor
mov
aam
stos
pusha
dec
or
pop
mov
xchg
add
into
mov
push
loope
push
push
pop
andl
mov
inc
out
push
push
or
test
aas
lods
nop
add
sub
xorw
or
out
add
fnstcw
enter
cmp
inc
jmp
mov
sbb
cmpb
shrb
fidivrs
dec
pop
xor
pop
mov
stc
call
sbb
add
dec
sarb
push
xchg
neg
js
sbb
jmp
mov
jge
ljmp
ds
out
test
mov
loop
into
mov
push
adc
imulb
in
or
sbb
cmc
cmp
inc
dec
jecxz
sub
add
pop
dec
jl
inc
dec
push
dec
push
loopne
sub
adcb
leave
jne
mov
lods
push
and
mov
iret
push
push
xchg
pop
inc
xor
lret
gs
or
incb
testb
test
scas
mov
or
das
and
pop
int
lods
ret
jmp
dec
in
adc
jge
push
push
hlt
push
xchg
mov
clc
fists
pop
inc
add
orb
or
or
pop
cmp
das
mov
mov
sbb
cltd
mov
pop
movl
fstpt
mov
test
pop
popa
sub
sub
push
lret
or
jp
mov
insb
push
shlb
pop
rcll
insl
push
adc
ficoml
pushf
pusha
pop
daa
jmp
fidivrs
sbb
fiaddl
repnz
cmp
pop
daa
adc
sbb
movb
rcrb
push
aam
pop
dec
jbe
add
shr
dec
sub
push
xor
test
repnz
push
sub
or
testb
shr
dec
hlt
pop
sbb
mov
dec
adc
sti
pop
push
in
mov
hlt
shrb
push
loope
jmp
push
pop
rclb
stos
sbb
lahf
shll
jle
pop
or
roll
test
and
shr
mov
cmc
mov
pop
loopne
mov
jp
je
lods
adc
jbe
mov
inc
les
aas
jcxz
jmp
mov
arpl
push
sub
pop
jl
lods
ja
mov
ret
mov
pop
cld
jne
jmp
adc
sub
inc
mov
mov
dec
push
and
mov
mov
sbb
test
add
dec
xor
pop
and
lahf
cld
fisubrs
xor
add
inc
jns
dec
scas
hlt
pop
hlt
inc
aas
sub
push
mov
sub
jle
xchg
int
in
movsb
mov
dec
dec
fs
jo
sbb
pop
push
inc
sti
stos
xchg
jb
lcall
jge
pusha
daa
rol
mov
js
into
sbb
rcl
sti
xchg
jl
iret
xchg
idivb
ret
sub
or
rcll
mov
and
cmc
sub
sub
stos
and
dec
pop
mov
adc
rorl
arpl
xchg
fldenv
addb
jo
adc
je
jo
mov
cli
stos
xor
inc
mov
testb
nop
lods
cmp
dec
adc
or
push
ds
cmp
or
sub
negb
int
push
or
adc
xchg
jl
cli
popa
sbb
lock
sub
jecxz
nop
ds
pop
ja
add
push
add
pushf
movsb
mov
std
xor
jmp
adc
bnd
mov
hlt
dec
mov
notl
xchg
or
ds
loope
cld
xchg
in
jo
int3
dec
mov
add
scas
add
jmp
xchg
push
data16
repnz
cmp
test
cmp
jno
in
mov
jns
pop
ret
std
or
mov
adc
in
cmp
icebp
lds
add
out
dec
fmuls
jmp
mov
fsubrs
adc
jle
repnz
xor
emms
cld
and
fimull
mov
into
dec
mov
sub
mov
mov
incb
sub
mov
jne
arpl
jne
lahf
pop
add
jbe
mov
jno
jmp
push
adc
ja
pop
pop
inc
mov
push
call
bnd
xchg
pop
shll
fs
shlb
stos
fisttps
cld
sbb
adc
or
pop
push
rorl
mov
jno
dec
popf
adc
loop
or
adc
mov
icebp
or
insl
and
push
xor
fwait
out
push
adc
jno
adc
cmpl
pop
arpl
mov
mov
add
adc
daa
js
ds
arpl
outsl
or
jmp
rcl
mov
notl
cmpsb
cmc
adc
dec
adc
pop
es
and
sub
adc
test
scas
add
mov
neg
gs
cmp
into
aam
xor
dec
pop
inc
and
push
add
aaa
jne
and
sbb
push
mov
push
pusha
rorl
jmp
xchg
cli
xor
lret
mov
test
inc
and
lds
add
jnp
cltd
pop
outsb
mov
out
push
loopne
xor
dec
mov
cmp
jmp
mov
xor
movsb
das
movsb
scas
out
jne
inc
xchg
mov
lods
fimull
add
pop
sti
dec
stc
cld
jbe
imul
jae
xchg
mov
das
nop
inc
icebp
sub
adc
cmp
test
jb
rdtsc
jecxz
pop
mov
loopne
std
mov
add
pop
push
add
and
xchg
dec
jecxz
pop
or
push
sub
jmp
movsb
mov
pop
dec
sbb
push
or
jmp
cmp
push
das
adc
push
repz
dec
xor
insb
lret
xchg
negb
mov
jmp
icebp
lret
jle
fistl
movsb
and
pop
and
mov
push
leave
push
add
xchg
clc
mov
inc
cwtl
out
test
push
add
sub
push
enter
stos
in
icebp
inc
stc
xchg
ds
push
inc
sub
sub
push
jb
and
pusha
dec
adc
and
and
scas
mov
push
mov
fbstp
adc
repz
rorl
mov
cmpsb
clc
push
and
add
adc
jns
out
sub
fs
xchg
cwtl
pop
fnsave
loop
clc
aam
cmp
or
leave
sbbb
neg
loopne
arpl
daa
jecxz
loope
lret
and
cmpsb
and
jmp
sub
sub
enter
mov
push
out
add
xor
jle
sub
push
lock
inc
or
mov
pop
movsl
inc
aaa
pop
repz
stc
xchg
ljmp
movsl
xor
test
pop
out
out
lret
pop
push
out
mov
push
and
jmp
addr16
push
cwtl
mov
cmpsl
ljmp
pushf
sbb
in
dec
or
dec
mov
in
push
pusha
push
push
or
mov
xor
fcomps
loopne
and
aaa
xor
cmpl
dec
mov
add
lds
imull
push
les
ljmp
mov
pop
ja
push
pop
cmc
loopne
mov
add
mov
jae
xor
mov
in
and
and
shr
aas
cmp
stos
dec
rcrl
inc
or
je
inc
sub
pop
or
aam
lods
xor
push
pop
push
cld
push
inc
push
push
cwtl
lock
mov
mov
fidivs
sbb
add
leave
ret
dec
inc
jne
push
pop
jg
pop
fsubr
sbb
cld
push
pop
cld
mov
imul
jmp
stos
xrelease
add
aad
add
dec
lcall
mov
imul
vphaddubw
and
jle
pop
xor
jmp
pop
xor
decb
xchg
ja
loope
lock
outsl
pop
in
xchg
push
inc
mov
xor
and
sub
mov
shr
loop
aad
stc
and
push
dec
or
mov
popa
test
push
gs
aam
lret
mov
push
into
xchg
xor
popf
xchg
rclb
lock
pop
pushf
mov
shlb
push
stc
push
jae
pop
add
xor
push
sub
lahf
fnstenv
iret
inc
xlat
out
lret
add
mov
test
jle
push
cmp
xchg
mov
push
movzbl
movsb
xor
xorl
add
in
fmul
lret
mov
ret
mov
stos
mov
enter
ja
stos
jmp
fucompp
xchg
and
xor
mov
fcoml
sub
add
jge
adc
add
bnd
pusha
xchg
pop
xor
sbb
inc
icebp
jmp
idivl
lods
lret
cmp
pop
jmp
test
push
sub
adcb
dec
jne
es
mov
push
out
paddw
mov
and
adc
mov
cmp
cli
js
lea
inc
adc
adc
pop
or
push
rcrl
daa
cmp
dec
mov
or
pop
xchg
pop
lret
aas
cmp
xlat
xor
fildll
push
ret
dec
popa
in
jns
or
in
lahf
mov
int
scas
push
movsl
xor
lock
nop
xchg
push
add
ja
sub
inc
ret
notb
inc
sub
imul
jns
fwait
xor
and
jb
push
arpl
jmp
adc
repz
loopne
idivl
daa
dec
aad
sbb
add
inc
sbb
ret
push
or
cltd
subb
sbb
pop
push
inc
aam
sbb
addr16
add
loop
add
jp
out
dec
inc
cmc
repnz
sti
sub
dec
popf
nop
mov
pop
gs
scas
in
cmp
sti
leave
bound
int
and
inc
outsb
fidivl
insb
jne
pop
inc
shlb
or
sbb
stos
imul
jmp
jns
dec
pushf
lret
and
pop
push
enter
adc
outsl
push
pop
sbb
jecxz
mov
bound
pusha
push
out
cs
arpl
daa
repnz
ja
push
mov
jns
cltd
push
sbb
or
jp
xor
out
sbb
inc
pop
jb
ret
sbb
mov
jb
pop
mov
pop
xchg
sub
push
jmp
sbbl
rclb
adc
push
inc
and
je
pop
inc
cwtl
jp
mov
or
pop
sbb
xchg
jo
nop
stc
ret
adc
xchg
cs
sti
pusha
shrb
pop
fwait
mov
pop
push
and
orb
or
addr16
imul
roll
dec
or
pop
jmp
xchg
in
clc
out
popf
push
orl
aam
inc
pop
push
shll
push
pop
push
inc
xor
push
in
out
and
int3
adc
push
and
push
push
adc
add
int3
mov
xor
nop
mov
jmp
repnz
push
and
aas
test
in
loope
push
dec
ja
dec
add
std
ss
je
add
pop
and
cs
push
pop
add
pop
pushf
sub
fldl2t
out
jp
int
addb
sbb
add
into
out
pop
mov
add
push
addb
shrb
mov
and
jns
or
clc
dec
add
jmp
ljmp
push
out
shrb
sarl
bound
or
push
sub
mov
xor
push
aad
in
or
loop
dec
outsl
sub
lds
xchg
imul
add
fucomi
pop
add
xchg
mov
mov
xchg
roll
in
rclb
lock
sbb
ljmp
scas
and
pusha
sarb
pop
add
out
pop
inc
shr
xchg
adc
add
add
arpl
add
pop
mov
scas
cltd
test
nop
pop
jo
jmp
add
jl
adc
mov
jnp
cli
out
fisubrl
cmp
imul
pop
std
loopne
daa
pusha
fistps
daa
js
mov
scas
sub
jmp
sub
dec
xchg
ret
sbb
test
out
dec
push
cmp
mov
and
sbb
hlt
imul
sbbb
cmpsl
sbb
mov
movsl
add
test
arpl
es
push
xor
or
cmp
add
cwtl
test
scas
lret
jo
push
jmp
mov
dec
xchg
push
xchg
pop
sub
sub
gs
pop
lods
and
xchg
push
lea
dec
clc
add
repnz
add
inc
ja
add
or
loope
les
cld
loopne
inc
xor
pop
add
mov
xchg
aaa
mov
out
lahf
pop
cmpsl
push
pop
fs
lods
and
shl
add
sbb
outsl
cld
js
divl
sub
js
or
loopne
clc
push
push
sbb
ret
aad
das
adc
lods
and
jmp
pop
fwait
pop
push
xchg
lcall
mov
push
cmc
pop
xorb
int3
and
pop
popa
add
add
es
sub
adc
call
xor
pop
and
mov
inc
iret
pop
mov
or
jmp
or
push
inc
add
xor
pop
out
push
push
jecxz
lea
mov
xlat
outsb
rcll
out
daa
jmp
add
push
rorb
xchg
jo
or
push
or
and
cli
cmp
shlb
pop
pop
cmp
push
add
ds
jp
or
push
or
divl
xor
jp
add
or
movsb
sub
mov
sar
lahf
dec
or
jae
sbb
daa
inc
out
pop
or
adc
sbb
inc
cmpsl
movsl
outsb
hlt
dec
pusha
inc
dec
mov
test
dec
sub
pushw
dec
rcrl
sub
ret
cmpsl
leave
fs
pop
add
adc
dec
lret
pusha
sbb
sub
dec
pushf
mov
xchg
dec
andb
push
add
idivl
outsl
ja
das
mov
add
xor
push
and
adc
ss
mulb
mov
mov
ficompl
sub
xor
or
adc
push
and
xchg
mov
aad
sbb
sbb
sti
jo
jmp
add
adc
inc
sahf
nop
sbb
dec
sub
sub
jb
ljmp
push
push
cs
dec
xor
sub
sbb
frstor
and
mov
pop
dec
in
stos
mov
je
pop
sub
mov
test
mov
adc
sbb
ret
lahf
aaa
pushw
lock
in
popa
cwtl
xlat
jno,pt
movsl
sub
ljmp
add
pop
xchg
adc
les
push
dec
xor
push
mov
in
push
enter
pusha
add
push
xor
dec
mov
fcomp
xchg
sbb
aaa
mov
pop
cmc
push
xor
leave
clc
fildll
xchg
adc
pop
mov
or
popf
orb
cmp
dec
inc
sub
jae
adc
xchg
lret
sbb
imul
mov
cmpsl
es
pusha
jbe
adc
imul
dec
sub
push
or
jge
sub
iret
test
int
sub
adc
pushf
add
inc
into
xor
cwtl
test
repz
xchg
test
in
xchg
pop
inc
ljmp
imul
jmp
mov
scas
inc
inc
jb
dec
push
inc
mov
or
cmp
add
adc
xor
fldenv
push
adc
out
add
jle
mull
xchg
sub
es
jmp
out
sahf
push
and
xchg
dec
push
xor
lods
push
or
icebp
je
pop
xchg
popf
mov
mov
mov
imul
addl
sub
mov
xchg
pop
cmp
add
stos
mov
add
sarb
mov
or
cld
test
xor
mov
aad
rolb
pusha
adc
jp
in
xchg
cmpsl
xor
sbbb
cmp
jmp
xor
out
and
dec
dec
imull
das
mov
jmp
or
mov
push
inc
add
push
ja
mov
dec
jns
cli
out
jb
cmp
iret
leave
aas
ret
lahf
inc
nop
sub
mov
sarb
add
mov
in
sbb
sub
xchg
cmpb
add
add
into
not
xlat
lock
out
nop
or
mov
sub
dec
idiv
iret
pop
jne
pusha
test
xchg
sub
fs
subb
mov
inc
add
jle
adc
xor
out
loop
sbbb
or
sti
or
orb
push
mov
movsb
mov
outsl
fstps
stc
mov
push
mov
push
iret
mov
add
movsl
ss
bound
xor
je
orl
xor
addr16
rclb
jge
je
jnp
mov
daa
push
les
das
pop
mov
sbb
sub
dec
fs
push
jmp
sbbl
or
dec
inc
dec
cs
roll
mov
jp
push
lods
sub
test
inc
mov
ret
rclb
fcmovnb
push
leave
sub
add
dec
lret
sti
xchg
bound
dec
pushf
mov
fiaddl
xchg
daa
pop
test
ljmp
xor
jl
stos
dec
and
push
outsb
loope
cmp
aam
sub
cli
inc
aas
add
sbbb
clc
scas
lock
add
or
inc
and
fmul
mov
cld
add
jmp
jo
cmp
dec
ljmp
test
into
mov
jg
stc
test
push
mov
mov
xchg
fmulp
add
pop
daa
repnz
push
push
pop
mov
add
jmp
mov
mov
and
dec
aaa
fstl
add
inc
mov
jne
daa
jb
pusha
mov
dec
sbb
fisubs
movsb
into
or
adc
pop
in
fistpl
js
inc
ret
pop
xor
out
dec
sub
fmull
xchg
leave
push
xchg
dec
loopne
xchg
adc
arpl
das
adc
out
inc
sub
add
cs
inc
xor
or
vxorps
and
add
add
mov
movsb
pop
ja
jp
xchg
outsl
push
push
sub
jmp
std
jns
pop
std
adc
sub
out
int3
fsubr
sub
cmpsl
dec
fldcw
push
jnp
pop
pusha
xchg
stc
jmp
jl
ret
pop
lret
lgs
pop
fdivp
dec
negl
ljmp
adc
jmp
sbb
dec
jmp
pop
fdiv
pop
jmp
add
or
test
jp
push
jns
pop
js
addr16
cmp
inc
and
sbb
loop
push
jno
jbe
std
xchg
adc
adc
and
mov
ret
imulb
out
stc
xor
ljmp
sar
or
cmp
les
rol
push
test
cmp
sti
cmp
mov
int3
dec
mov
or
push
xor
push
push
push
mov
mov
mov
jmp
cmp
in
and
sbb
mov
sbb
ljmp
add
jmp
lahf
xchg
out
jmp
fcomps
cmp
mov
int3
inc
push
add
jmp
icebp
xchg
out
iret
fabs
fisttpll
jle
cmp
or
call
mov
pop
and
add
bound
or
arpl
or
aam
lds
mov
mov
or
jg
pcmpgtb
jmp
mov
pop
test
mov
icebp
sub
cmpsb
mov
push
jl
mov
sbb
test
hlt
add
popf
loop
jmp
sbbl
jb
cmp
sub
out
pop
adcb
push
jp
lock
daa
inc
sbb
jmp
push
ret
mov
xchg
push
pop
mov
or
add
push
loope
dec
mov
pminub
jg
pop
push
push
mov
adcl
mov
cmp
aam
out
loop
rolb
jb
cmp
sti
or
ret
xlat
pop
nop
ljmp
pop
adc
push
pusha
sbb
add
mov
aad
or
or
inc
int
pop
push
adc
dec
shl
and
push
pop
insl
add
movb
dec
pop
jp
sbb
pop
push
push
les
std
nop
daa
pop
jp
mov
dec
jmp
xchg
or
add
div
inc
leave
or
dec
daa
jp
inc
and
pop
sub
inc
mov
mov
adc
and
imulb
or
stc
aam
int
pop
outsb
adc
mov
xchg
pop
mov
sub
sub
and
inc
ficoms
dec
aaa
rcll
mov
sub
xchg
mov
scas
sub
lds
add
jns
aas
loopne
not
shr
inc
push
push
or
or
or
mov
push
adc
adc
mov
inc
push
js
inc
or
cmpb
mov
add
jmp
add
imul
pop
sub
cmp
scas
pop
cmpsb
scas
out
or
lret
dec
pop
ja
ss
mov
dec
std
bnd
mov
out
mov
pop
or
mov
add
push
mov
movsl
sbb
xorb
fists
stos
hlt
jge
push
daa
test
xor
in
rorl
jecxz
jmp
dec
in
add
push
mov
inc
jae
jbe
sarb
or
push
cs
test
rcl
jge
add
cli
xor
mov
sbb
xchg
xchg
xchg
aaa
or
add
bound
cmp
pop
push
mov
aad
dec
jae
aaa
cmc
jb
xchg
pop
adc
cmp
pop
fucomip
mov
shll
cltd
mov
dec
adc
adcl
jnp
shlb
inc
push
sbb
xor
cli
push
pushf
pusha
xchg
xchg
jbe
repnz
fistps
xor
addr16
ljmp
iret
sub
data16
jb
lds
xor
aas
aam
scas
jo
jmp
pop
dec
mov
jae
insb
mov
aad
imull
ss
jge
pop
cmp
negb
orb
mov
inc
adc
sbb
jno
add
cltd
dec
mov
or
adc
testl
inc
pop
pop
jge
cmp
mov
notl
mov
in
mov
dec
sbb
iret
outsb
fwait
rorl
test
cmp
sahf
adc
shl
inc
into
into
sti
ds
in
cmc
pop
subb
and
add
repnz
in
lds
lods
mov
cmp
data16
popa
pop
stc
cwtl
add
xchg
push
push
lea
lea
enter
jbe
cmp
push
mov
inc
notb
bound
ret
pop
jno
pop
lahf
dec
pushf
xor
dec
inc
out
ret
aad
pop
and
jmp
mov
push
inc
jge
pop
sub
mov
jnp
imul
sub
jbe
pop
or
adc
pmaddwd
out
and
shl
pusha
or
fdiv
rorb
mov
loop
pop
sbb
pop
jmp
test
pop
or
mov
fmuls
mov
sti
in
xchg
scas
clc
add
mov
dec
shlb
sbb
fldl
imul
push
sahf
jnp
mov
cmp
test
xlat
out
icebp
pop
xor
jo
jmp
dec
sbb
push
xor
inc
sub
push
add
dec
xchg
push
or
jo
adc
test
sbb
or
and
mov
push
jle
add
orb
mov
push
loope
in
sub
or
mov
mov
xor
mov
and
xchg
fisubrs
inc
pop
lods
insb
fistpl
mov
roll
xchg
pop
test
push
nop
cld
fmull
stc
mov
daa
pop
js
pop
inc
adc
daa
stos
xchg
inc
rcl
or
gs
ljmp
dec
push
add
pop
xor
rcrb
int3
cmp
inc
add
add
jno
lods
or
jae
xchg
adc
mov
cmp
aas
in
rcll
cmc
cmp
adc
xor
ret
xor
sbb
or
adc
pop
rclb
je
loop
mov
mov
lcall
push
inc
out
add
adc
or
mov
mov
frstor
icebp
out
jp
xor
rclb
add
jnp
add
jg
sub
imul
lahf
xor
add
xor
cmpsl
push
test
add
mov
pop
dec
in
sub
pop
mov
add
mov
sub
xchg
push
pop
pop
mov
adc
pusha
push
adc
push
pop
pop
test
sbb
jmp
xchg
scas
imul
mov
push
daa
or
add
mov
xor
jbe
mov
pop
pop
aas
add
sahf
cmp
mov
jb
cs
dec
sbb
add
jl
into
xor
shll
sub
mov
sbb
pop
mov
pop
add
cmp
sub
jns
lods
add
outsb
inc
test
push
pop
fldenv
inc
fnsave
ss
les
push
ds
mov
or
mov
dec
inc
clc
fs
stos
neg
add
imul
sbb
bnd
xchg
fmuls
xchg
mul
call
jmp
and
cli
lahf
jmp
cltd
ljmp
outsl
add
movl
ljmp
testl
call
push
add
xorb
and
inc
or
add
test
js
xor
nop
movhlps
test
test
fs
lret
popl
mov
cmp
enter
push
int3
add
cld
mov
stc
jae
pusha
push
ret
push
sub
jmp
test
insb
xlat
pop
mov
call
mull
or
mov
lret
iret
cmp
mov
in
push
hlt
outsb
roll
das
orl
cltd
inc
jnp
loop
pop
dec
xor
mov
ja
aaa
ds
in
adc
popf
xor
cmc
fs
das
add
dec
dec
cmpl
jbe
push
pop
cmp
or
and
loopne
popf
into
cmpsb
idivb
pop
aas
xchg
cmc
fldcw
push
mov
lret
nop
mov
xchg
pop
xor
sub
jg
leave
push
mov
pop
push
mov
push
add
xor
ss
jbe
dec
stc
cmp
daa
ljmp
xchg
loope
xor
sub
mov
add
mov
add
mov
outsb
movsb
out
pop
inc
mov
rclw
repz
popa
jae
insl
adc
mov
adc
xchg
popf
mov
in
mov
stc
pop
lods
and
push
leave
adc
movsb
adc
outsl
imul
dec
xor
jo
lcall
add
add
xchg
imul
xor
xchg
hlt
inc
stos
test
enter
lds
rcll
jge
arpl
outsb
iret
and
shl
shrb
xor
out
xor
aad
mov
or
and
jns
pop
ja
cltd
mov
mov
std
cld
sar
inc
leave
subl
jl
jmp
xor
adc
ljmp
add
xor
shl
testl
jge
std
arpl
clc
adc
push
xchg
adc
or
imul
add
inc
cmp
push
dec
aaa
js
push
mov
pop
imul
popf
add
jp
pop
add
popf
push
mov
xchg
test
push
ud1
jmp
cmp
jne
mov
outsb
push
jbe
leave
mov
push
push
add
sbb
jle
movd
and
push
cs
or
repz
pop
std
insl
outsb
xchg
add
aam
rclb
stos
sub
xchg
lret
jmp
push
sub
in
js
into
jmp
ljmp
shlb
push
lods
mov
testl
jp
mov
sub
sub
or
test
out
int3
divl
insl
test
push
add
push
sbb
rorb
jno
imul
and
or
sub
push
push
mov
jo
int3
cld
xchg
inc
testl
cmc
jno
pusha
sub
jmp
pusha
fsubl
pop
add
ja
sbb
insl
pop
sub
pusha
xchg
test
sbb
jbe
cld
data16
out
or
push
xchg
std
daa
xchg
mov
jg
or
pop
neg
rolb
icebp
popa
cwtl
dec
dec
push
cmp
push
shll
dec
dec
xlat
dec
add
rcrb
cmp
js
sub
clc
pop
add
push
mov
mov
push
lret
or
jnp
stos
dec
jp
pop
aaa
sub
orl
mov
cmp
not
mov
test
and
fs
dec
pop
and
add
gs
test
aas
push
jecxz
and
cmp
add
push
add
bound
sbb
lods
xchg
mov
incb
sbb
repz
sti
mov
call
andb
aad
cmp
sub
and
add
and
hlt
movsb
dec
gs
cmpsl
ret
mov
testb
adcl
ror
sub
inc
jle
aas
mov
scas
call
cli
pop
pusha
stos
mov
jmp
or
test
sub
and
sub
jb
repz
mov
loope
mov
dec
movsl
in
mov
iret
jmp
stc
fcomi
pop
push
dec
add
les
pop
pop
shl
test
push
cltd
shrb
push
and
test
pop
imull
xchg
mov
imull
push
push
enter
dec
sub
js
into
mov
in
sub
push
aam
fidivl
pop
and
or
sub
arpl
add
add
inc
mov
roll
pop
sub
cli
and
mov
jecxz
add
inc
jle
xchg
or
call
mov
or
push
cmpsb
push
outsl
pop
xor
push
sbb
loope
xor
pop
mov
add
inc
leave
inc
out
dec
inc
lahf
push
daa
xor
xchg
pop
sbb
cmp
gs
push
push
jle
adc
les
stos
or
add
pop
and
sbb
int
inc
decb
xchg
xor
or
adc
mov
xchg
dec
movsb
into
add
aas
lods
cmp
mov
jb
push
mov
sub
dec
xor
jmp
ja
dec
sub
adcb
insb
or
pop
add
loope
add
into
cmpsb
and
xchg
ljmp
cld
jae
sub
scas
inc
and
jns
inc
sub
or
daa
in
and
pop
bound
enter
imul
inc
sbb
add
adcl
mov
xchg
and
add
add
cmp
inc
arpl
adc
fcomps
in
roll
jmp
xchg
mov
into
xchg
divl
incb
out
xchg
mov
pop
push
jnp
or
enter
mov
jnp
addr16
mov
sub
or
pusha
dec
mov
push
or
mov
inc
xchg
push
rcrb
out
inc
das
jecxz
sbb
gs
push
ret
div
jns
jl
pop
shrb
cmpb
xor
into
pop
or
pop
add
shr
bound
dec
subb
or
inc
data16
dec
das
out
push
push
std
pop
or
or
je
xor
pop
or
or
adc
sti
mov
clc
jb
cmp
sub
xor
aad
in
les
lods
push
test
add
cmc
stos
in
or
cmp
leave
jle
pop
xlat
movsl
xor
cli
sub
loopne
cmp
add
dec
pop
and
fcomps
sub
das
push
jmp
mov
jecxz
xchg
mov
dec
shlb
inc
mov
xor
orb
cmp
jbe
add
mul
sub
xchg
push
aas
inc
js
icebp
jp
xchg
mov
adc
or
dec
ret
mov
pop
or
jo
adc
sti
xor
or
jmp
rcrb
pop
lahf
in
lods
xor
imul
ret
stos
pop
cmp
mov
fnsave
mov
push
add
incb
out
and
jne
jge
imul
js
push
in
pop
push
push
or
test
inc
pop
jmp
cmp
and
and
mov
addr16
sbb
sbb
push
sbb
jmp
adc
mov
and
imul
adc
ds
jecxz
or
pop
cmp
sub
mov
or
hlt
push
clc
cmp
add
sarl
sti
or
adc
adc
leave
and
dec
mov
sbb
adc
cmp
sti
pop
mov
scas
or
enter
popf
jns
negl
mov
nop
push
lahf
add
xor
sub
adc
call
xor
es
popa
into
nop
outsl
mov
pusha
sub
adc
sub
add
outsl
or
fsts
rol
cmpsl
push
pushf
dec
mov
rolb
or
lea
imul
imul
jb
cmpsl
out
mov
add
jmp
push
xchg
dec
cmc
mov
rcrb
pop
add
call
pop
xchg
imul
and
cs
push
mov
jae
mov
inc
pop
sti
adc
jmp
stos
cwtl
or
cmp
xor
push
mov
jnp
add
jmp
imul
aam
pop
mov
cwtl
scas
lock
dec
sub
adc
mov
add
add
in
or
daa
ret
ds
xchg
lods
pop
adc
adc
push
mov
adc
push
jp
repz
xlat
fs
jne
jecxz
filds
inc
jne
mov
enter
push
push
jmp
mov
clc
aad
pop
sub
pop
push
pop
imul
jmp
add
test
test
adc
subb
pop
sub
xor
fcoms
adc
mov
mov
dec
dec
das
adc
cmp
push
jle
and
jmp
pop
sub
push
or
ljmp
aad
out
pop
xchg
inc
mov
pop
jmp
mov
ja
sti
movsb
aad
lock
xchg
hlt
stos
gs
xor
xchg
jmp
push
rcrb
or
int
push
dec
push
sbbb
sbb
not
xchg
fldl
cmc
dec
clc
ljmp
xor
sub
dec
das
or
jne
and
add
inc
in
pop
nop
js
add
rorb
lret
pop
nop
addb
shr
add
fucom
pop
pop
movsl
mov
mov
dec
sbb
aam
out
add
jo
and
dec
in
in
push
inc
cwtl
jne
daa
or
mov
sub
mov
call
and
or
movsb
sub
add
int
ds
xchg
jo
push
push
push
addl
pop
xchg
dec
test
push
dec
push
dec
jo
mov
push
xor
insb
rorl
mov
ljmp
stos
push
pop
pop
adc
push
mov
cmp
dec
int3
cmp
jmp
add
pop
cmp
add
cmc
dec
gs
jne
sbb
adc
sub
cmpb
mov
cmc
fs
rorl
ja
dec
cmp
inc
xor
push
dec
repnz
add
test
movsl
sbb
into
sub
aaa
bound
sub
add
push
cli
mov
pop
xchg
jle
jb
add
popa
inc
add
add
dec
inc
mov
in
fdivr
and
lock
test
sub
dec
pop
shl
jmp
mov
cmpsl
cmp
dec
and
ja
mov
movsb
inc
pop
pop
jl
bound
popf
inc
fldl
mov
fiadds
push
mov
dec
mov
adc
movsl
aad
nop
or
rclb
cmp
and
stc
pop
sar
rcrb
xorb
xchg
cmp
cmp
and
je
nop
xchg
push
dec
xchg
or
in
pop
or
push
jmp
pop
and
lahf
je
dec
jmp
pop
stos
jge
sub
test
lret
inc
jp
cmp
jo
pop
daa
icebp
adc
adc
rolb
sub
out
ss
cld
addr16
ja
test
mov
jno
mov
dec
pop
rolb
jne
ja
inc
dec
mov
movsb
shr
xlat
outsb
fdivs
dec
mov
popa
jp
push
lret
pusha
fs
dec
das
lods
cmp
push
pop
nop
repz
jae
pop
out
test
and
data16
lret
aaa
pusha
cld
mov
ja
scas
push
xchg
dec
mov
xor
cmp
mov
outsl
sbb
mov
dec
test
or
xor
xor
and
in
lods
xchg
pop
sbb
imul
out
data16
or
pop
jbe
jl
sub
add
xor
or
mov
adc
jns
mov
sub
and
xor
adc
ljmpw
cmp
push
push
lcall
xchg
subb
xor
inc
pop
loopne
pop
inc
jecxz
lret
ljmp
ret
pop
ja
xchg
cvtdq2ps
lock
adc
inc
mov
stc
cs
cmp
rorb
sbb
pop
fdivs
jmp
sbb
pusha
and
leave
add
lahf
jnp
jecxz
cmp
or
or
fcom
shlb
inc
repz
xchg
cwtl
ja
ret
into
xchg
jmp
mov
adc
xchg
rolb
fbld
daa
cmp
push
loop
iret
insb
dec
and
inc
std
loopne
neg
cwtl
or
sbb
push
push
pop
gs
cwtl
imul
and
push
mov
imul
xlat
shl
cmp
dec
add
movsl
pop
je
pop
je
shlb
lret
dec
lcall
leave
sbb
pop
stos
push
imull
movaps
push
push
in
cmp
adcb
xor
adc
in
subb
xchg
repnz
mov
jl
inc
xchg
cs
jb
test
out
lcall
adc
cld
push
sub
mov
push
mov
dec
sarl
inc
test
cltd
enter
push
inc
push
add
xor
mov
pop
jae
movsb
and
mov
jle
negb
jb
cwtl
mov
lret
adc
mov
push
dec
and
es
arpl
popa
out
sub
fisttpl
pop
mov
adc
mov
jnp
pop
lock
pop
push
cmp
mov
cmp
push
or
mov
loopne
inc
ljmp
pop
mov
test
test
mov
and
mov
mov
rcrl
mov
cltd
jae
mov
jecxz
xchg
and
push
pop
mov
test
rcll
outsl
lret
bound
stos
not
xor
mov
dec
pop
popa
add
mov
test
ret
clc
xchg
loope
inc
das
cmc
int3
outsl
dec
cmp
and
hlt
out
or
xor
pop
notl
pop
sarl
push
and
orb
rclb
daa
mov
jbe
push
or
xlat
add
aas
leave
ds
je
or
scas
pop
clc
inc
aad
xchg
repnz
pop
movsl
or
pop
or
inc
add
add
jbe
pop
cmpb
dec
pop
test
jle
das
pop
adc
jae
cli
inc
lds
sub
pop
dec
jae
sbb
das
or
mov
sub
stos
orb
xchg
mov
mov
loopne
or
andb
pop
pop
inc
outsb
pop
call
cmp
ret
pusha
xchg
out
mov
jno
push
dec
iret
add
adc
adc
sub
mov
mov
les
loope
sbb
mov
mov
lret
mov
sub
jecxz
cmp
call
adc
push
aaa
pop
mov
add
dec
notb
push
adc
insl
jno
add
push
mov
jmp
mov
jns
adc
inc
add
gs
and
call
in
inc
in
or
repz
fs
cmp
mov
mov
mov
mov
adc
jle
mov
add
jl
push
push
movsl
or
inc
into
sbb
jmp
in
push
ror
dec
ficomps
faddl
add
mov
nop
bound
push
dec
sub
sbb
jnp
jmp
cmp
ret
pop
jne
dec
jecxz
call
inc
out
add
jmp
in
mov
lret
xchg
fcoms
xchg
add
jno
les
xor
mov
mov
ret
push
xor
or
flds
sub
push
aam
push
mov
lret
sub
aad
inc
push
push
adc
inc
sub
movsl
push
popf
pop
cltd
jle
pop
scas
into
je
jmp
mov
mov
mov
out
sub
jns
xchg
xor
add
call
pop
push
push
jmp
jns
cld
jmp
jne
xor
cli
inc
mov
cmp
addb
je
sub
add
sub
add
sub
cmp
or
into
sub
mov
sub
mov
jmp
stos
ret
aad
sarl
subb
dec
push
push
inc
mov
sbb
jmp
add
push
mov
mul
pop
cmc
xchg
jmp
or
inc
pop
test
adc
xor
cld
push
mov
or
or
negl
or
cld
xchg
cmp
sbb
lret
mov
sbb
stos
push
popa
or
out
push
push
jnp
jle
adc
dec
add
dec
mov
push
sub
inc
jl
inc
pop
addl
sub
and
rcrb
xor
xchg
add
jle
in
pop
push
stos
cmp
pop
mov
and
cmp
push
insb
stos
sar
mov
lcall
sub
inc
cltd
jg
inc
add
or
testl
je
jp
mov
sub
push
sub
xchg
xchg
loop
xlat
adc
imul
fisttpll
pusha
push
push
pop
and
mov
add
mov
mov
dec
sub
sti
inc
and
fimuls
sbb
cwtl
cmp
dec
inc
xor
dec
daa
inc
sub
enter
cmp
cld
out
and
pop
push
mov
aad
pusha
lret
imulb
inc
cwtl
or
sub
ja
cmpb
add
mov
aas
repz
nop
cmc
add
icebp
sub
clc
pop
dec
iret
cmc
std
fdivrl
lea
sbb
rorb
rclb
or
jmp
mov
enter
push
jp
inc
insb
mov
jge
test
push
adc
lcall
jmp
mov
push
mov
nop
dec
push
stc
cmp
cmpsl
cmp
je
int3
adc
pop
mov
sbb
ret
mov
or
or
pushf
lcall
xorb
cmc
add
cmpsl
mov
sub
sub
sub
jbe,pt
and
sub
pusha
bound
imul
push
jle
add
xor
notl
mov
push
add
ficoms
adc
ljmp
stc
insb
mov
lahf
push
cmp
call
in
jbe
push
or
cmp
inc
sahf
lods
je
pop
push
add
mov
ret
shr
pop
lods
pop
adc
les
add
dec
xor
add
jo
sbb
sbb
pop
out
mov
mov
mov
jne
inc
cmc
cli
shlb
jge
test
push
xor
mov
sub
push
into
mov
stc
daa
push
add
das
test
lcall
pop
xchg
sbb
neg
xor
lahf
inc
xchg
fstps
pop
mov
add
push
scas
mov
orb
outsl
push
shlb
xor
fnsave
addl
stc
and
push
push
cwtl
das
stos
pop
adc
pop
daa
lds
and
add
je
add
pop
jo
not
pushf
push
cmp
mov
or
sub
add
idiv
in
jmp
jge
push
test
dec
shrb
loopne
mov
xor
or
subl
shr
idivb
sbb
ljmp
fs
jmp
xchg
les
mov
or
adc
adcb
push
dec
xlat
mov
jmp
lods
push
leave
push
cmp
and
sub
mov
pop
push
push
out
sbbl
dec
mov
sub
cmp
dec
or
push
sub
push
pop
sub
or
into
in
and
mov
cmp
stc
jnp
push
jle
pop
pop
mov
imul
lret
jo
jbe
cmpb
lock
fbstp
in
or
add
ds
dec
lahf
inc
jp
incl
out
inc
fsub
cwtl
jle
pusha
jnp
push
mov
mov
mov
push
fwait
bnd
mov
xchg
fists
jmp
and
add
adc
sub
lods
je
push
push
lds
jmp
dec
orb
mov
pushf
add
test
cmp
xor
adc
sbb
jae
jae
pop
cli
out
sub
lret
sbb
jmp
in
cmp
shl
fsubs
pop
xor
xor
mov
pop
in
jb
gs
fs
push
jae
push
fldcw
es
add
or
jne
sbb
out
je
les
mull
lods
mov
and
not
clc
loopne
sbb
cmp
add
and
nop
jecxz
cmc
mov
push
and
and
pop
popf
cmpl
addl
pop
repnz
cmp
and
in
add
add
mov
das
jecxz
pop
rcrb
not
and
movsl
or
sarl
dec
fsub
out
orb
std
inc
cmp
mov
arpl
jmp
mov
fisubrs
xchg
adc
inc
adc
sbb
cmp
bound
mov
and
push
push
pop
cmp
enter
pop
push
adc
imulb
xor
mov
leave
gs
adc
mov
pop
ret
mov
add
jle
mov
adc
test
add
mov
scas
es
add
dec
push
mov
dec
data16
jmp
adcb
mov
pop
cwtl
lret
rcr
popf
das
inc
xchg
mov
mov
inc
or
mov
or
aad
push
imul
lods
repz
cmp
cld
pop
imul
out
cmpb
bound
in
mov
inc
mov
sbb
jb
jg
dec
or
loop
cli
xor
push
mov
incb
leave
shl
not
or
fnstenv
shlb
lahf
sbb
and
ja
pusha
xchg
xchg
cli
or
dec
xchg
cmp
adc
jmp
push
jmp
std
and
repnz
xchg
pop
rorb
das
rol
stc
adcl
xor
adcb
cmpsb
xor
popa
ss
add
mov
xchg
pushl
xchg
or
rclb
in
bound
mov
inc
outsb
call
ds
and
mov
pop
test
ret
pop
cmp
cs
xor
pop
add
pushw
pop
mov
int
nop
pmuludq
xor
sbb
dec
imul
daa
and
jne
sbb
or
or
push
mov
sahf
ret
pop
jmp
ss
or
inc
jno
mov
loope
jle
dec
dec
mov
fidivrs
mov
push
sub
rcrl
es
and
mov
sarl
in
inc
cmp
ret
imul
rolb
icebp
test
xor
fldenv
shrl
push
jmp
push
dec
sub
push
xlat
mov
out
mov
int
mov
jb
cmp
fstpl
bound
shrb
mov
andb
sbb
adc
inc
pop
scas
shlb
fnstsw
dec
adc
push
sbb
std
cmpl
pop
shrl
or
add
jp
jmp
push
adcb
xchg
sub
push
add
shrl
and
push
scas
ljmp
dec
ret
in
sbb
mov
dec
negb
jae
lahf
cltd
aad
cmp
xor
cmpsb
ljmp
ljmp
add
mov
cwtl
cmp
dec
jge
mov
out
mov
pop
push
fnstenv
test
pop
repnz
ja
pop
stos
loope
mov
lock
adc
xor
cmp
adc
lret
or
inc
jmp
jbe
fsubr
sub
cmpsb
cmpsl
push
mov
jl
pushf
ds
add
mov
scas
mov
sub
cltd
movsbl
frstor
sub
cmp
adc
mov
stos
nop
inc
cmpsl
mov
pop
and
dec
pop
scas
lret
mov
repz
push
push
cmc
sub
dec
imul
fwait
cmp
mov
jae
jle
and
pop
xchg
or
dec
neg
mov
es
adc
sbbb
jmp
jbe
and
outsl
es
out
dec
pusha
les
inc
test
jb
loopne
xor
sub
ret
pop
pop
test
or
out
jbe
pop
in
push
mov
ret
in
add
pop
les
cld
int3
jle
adc
or
icebp
adc
inc
inc
loope
jmp
icebp
subb
mov
sbb
add
loop
jne
xchg
xor
cmp
pusha
sub
dec
roll
and
fwait
ret
jbe
pop
pop
in
sub
data16
inc
push
dec
popf
pushf
push
ds
and
lock
neg
or
and
cmpsl
and
les
adc
xor
jl
in
mov
out
jmp
fistps
int
and
ret
adc
aad
nop
test
js
mov
mov
mov
shrl
mov
pop
loopne
mov
push
or
cs
or
dec
sub
push
or
jmp
inc
xchg
push
fwait
dec
addr16
push
sarl
mov
sbb
neg
or
insb
cmp
aaa
lds
rclb
mov
or
lods
pop
stos
or
or
lret
pop
je
dec
pop
xor
push
xchg
mov
add
cmp
inc
jmp
pop
sub
and
out
dec
mov
movb
xchg
xor
xchg
pop
push
jmp
sub
jl
hlt
das
pop
fs
fmull
xchg
jne
jecxz
push
sarl
and
cmp
or
in
jnp
loopne
lds
inc
or
sub
dec
push
fs
dec
leave
test
and
jmp
not
inc
cmp
jo
jo
insb
clc
fimull
testl
iret
pop
inc
enter
xor
pop
shl
cltd
call
push
push
jnp
sahf
popf
xchg
adc
inc
jns
and
insl
jns
cmp
adc
std
and
add
jmp
test
cmp
cwtl
push
es
push
addb
aas
in
push
nop
cmp
sti
add
and
push
dec
adc
leave
dec
cmc
pop
rolb
pop
pop
inc
ljmp
jae
jmp
enter
js
lds
mov
mov
pop
inc
xor
sub
sbb
or
adc
aad
in
cmp
pop
stos
inc
adc
dec
stos
xchg
xchg
inc
mov
sub
push
mov
xor
dec
neg
lock
sub
cld
jo
sarb
not
ret
jno
pop
outsb
test
mov
add
in
not
pop
rorl
push
cmp
push
dec
mov
movsl
inc
hlt
in
and
mov
adc
add
imul
jne
insb
inc
push
push
nop
bound
xor
cmp
int3
xlat
loopne
mov
insl
and
or
loope
popa
sbb
icebp
xchg
jmp
inc
mov
cwtl
out
sub
sbb
lret
and
push
or
pop
negl
movsl
ficoml
pop
insl
repnz
sub
or
xlat
shrl
scas
loop
rcr
mov
or
add
fcoml
push
xor
into
and
repnz
add
mov
sub
xchg
mov
push
icebp
shr
xchg
scas
cmp
movsl
daa
push
shll
push
pop
cld
jp
mov
adc
pop
jl
adc
push
xchg
add
dec
inc
sub
push
out
insl
aad
push
push
adc
cmp
shll
jb
cmp
or
test
mov
jle
pop
jmp
mov
mov
xchg
dec
cltd
ficompl
cli
cs
dec
mulps
dec
dec
cwtl
jl
push
cli
mov
and
shl
or
pop
fsubrs
repnz
xor
movhps
std
fistpll
aam
pop
iret
sbb
enter
inc
jmp
bound
test
mov
add
sub
les
ljmp
or
push
mov
xchg
or
sub
sub
leave
jle
outsl
std
mov
or
rcll
rorl
out
shl
jmp
popf
loopne
or
ja
mov
lret
fsubrs
mov
icebp
push
push
mov
ret
out
clc
sahf
loope
inc
sub
ret
jge
bound
test
scas
std
xorb
push
mov
or
in
or
add
addr16
imul
push
inc
sidtl
ljmp
dec
or
fnstcw
out
push
or
mov
lock
mov
push
inc
das
faddp
or
or
in
nop
aad
pop
sub
sub
jmp
mov
jp
sbb
je
dec
sbb
mov
pop
sub
pop
inc
mov
lahf
fnop
pop
push
sti
jb
lds
mov
sub
loopne
pop
loopne
jmp
add
cltd
mov
cmpsl
cld
notw
out
arpl
subb
push
pop
push
push
jle
pop
push
mov
mov
push
aam
pop
pop
push
mov
mov
jns
jmp
or
pop
add
and
push
jmp
movsb
ret
pop
rorb
adc
push
jl
subb
inc
push
xor
outsl
add
inc
inc
bound
xor
decl
outsb
xor
in
loopne
pop
dec
push
mov
push
imul
xchg
pop
xchg
inc
xor
out
cmpsb
sub
scas
adc
fidivrl
jno
dec
adc
les
out
xchg
push
hlt
addl
and
inc
sbb
jbe
in
dec
fs
push
bnd
scas
inc
mov
loopw
jp
push
sub
and
jge
mov
xchg
ss
push
mulb
add
cmpsl
addr16
inc
inc
adcb
and
mov
cmpsb
pop
add
inc
test
lods
mov
and
adc
xor
leave
jns
or
push
jmp
jbe
dec
jo
loope
imul
dec
or
into
xchg
adc
pop
pop
loopne
inc
jp
add
imul
int3
fimuls
push
loope
or
or
mov
mov
ret
xchg
add
adc
or
or
nop
and
pop
jmp
add
mov
mov
sub
nop
mov
jns
pop
arpl
adc
xor
cmpsb
shll
push
pop
das
dec
xchg
cmpb
pop
push
fisubl
sub
pop
jae
ret
push
xchg
pop
rcrl
jo
cmp
aas
pop
cmpsl
imul
adc
push
inc
sub
dec
and
cmp
or
jmp
push
rcrb
add
scas
sub
pop
adc
sbb
jle
mov
and
xchg
das
jl
daa
cld
xchg
dec
fstps
add
sub
push
add
pop
cmp
sub
adc
jae
inc
add
push
gs
sub
ret
stc
adc
push
sbb
adc
aas
popa
mov
jbe
sub
and
add
mov
xchg
and
sar
dec
sbb
imul
lock
mov
jmp
test
imul
outsb
std
rcl
xchg
push
aad
fimuls
mov
outsb
or
fs
iret
inc
mov
int3
fs
sbbl
aas
ds
mov
out
add
and
or
rcll
adc
dec
test
pop
ljmp
mov
int3
or
test
loopne
shlb
mov
mov
nop
pop
dec
push
mov
mov
bound
das
or
sbb
ret
jle
int3
adc
dec
jnp
clc
outsb
or
adc
testb
jno
add
pop
ljmp
or
cs
daa
pop
popa
jnp
mov
loop
fs
les
inc
ret
fildll
jl
add
out
mov
imul
cwtl
pop
addr16
and
roll
data16
repnz
hlt
dec
jnp
pop
aas
mov
mov
mov
imul
add
scas
rolb
cmpsb
ja
push
cs
push
jecxz
test
loope
cmpsl
outsl
add
shrl
sub
test
into
adc
icebp
rcll
mov
mov
dec
xlat
daa
mov
sahf
mov
xchg
shl
xchg
jg
rcrl
push
shlb
mov
push
movsb
add
cmp
mov
loope
fidivs
cmpsl
and
mov
mov
mov
fldl
jp
dec
mov
xorb
sub
outsl
add
jp
arpl
cmc
outsl
test
push
cmp
xor
nop
xor
aas
aam
add
push
rorl
sub
sbb
cs
daa
jmp
jns
shll
test
pusha
sti
mov
out
iret
jg
lods
push
iret
dec
scas
jns
das
orb
add
and
pop
stos
push
call
nop
sbb
jmp
je
jmp
fxam
sub
mov
outsb
lahf
out
out
dec
and
ds
add
outsb
sbb
cli
xor
push
pop
shl
jg
dec
xchg
mov
je
jle
cld
pop
jg
das
fnsave
pop
js
sbb
ja
fsubs
jo
imul
jo
nop
inc
sbb
or
or
pop
pop
adc
stos
pop
shl
popf
mov
mov
enter
scas
sub
or
xchg
test
aam
loop
insb
pop
test
sub
xchg
js
pop
lret
xchg
scas
xchg
gs
and
call
dec
popf
push
sbb
mov
enter
dec
pop
cltd
or
xor
xor
iret
mov
mov
xchg
rep
jp
pop
jmp
sbb
cmp
inc
mov
pop
fisttps
cmp
jle
sub
xor
and
out
cmp
cs
mov
push
push
popa
pop
cmp
and
pop
or
xchg
lcall
lret
je
and
shl
push
mov
push
mov
hlt
xor
pop
sub
jmp
push
subb
lcall
adc
jle
pop
test
pushf
push
sub
or
insb
aas
lods
add
jmp
out
cltd
xor
cmc
ja
mov
jmp
dec
loopne
add
dec
imul
jo
adc
test
push
mov
and
or
add
sbb
and
pop
jmp
sbb
lods
fsts
push
and
mov
test
mov
xchg
xor
pop
push
sub
push
jmp
dec
sub
pslld
push
popa
mov
stos
mov
mov
pop
jge
or
adc
pop
push
jge
cmp
movsb
add
rclb
dec
push
into
movsb
pop
pop
push
pop
mov
xchg
stos
cwtl
dec
cmp
pop
push
mov
jecxz
daa
ret
or
pop
repnz
je
aad
and
mov
in
lock
shr
cwtl
or
and
push
dec
jge
xor
dec
xor
or
stos
sti
sub
in
xchg
mov
mov
jmp
in
xor
subb
aam
hlt
insl
mov
and
inc
mov
cld
ja
not
and
and
mov
xorl
pop
in
lods
cmp
call
or
lret
loopne
js
hlt
dec
negb
jmp
cld
fcompl
xor
sbb
jp
push
dec
pop
in
push
or
mov
fadds
repnz
es
fldt
call
push
and
add
inc
jns
inc
test
jmp
xchg
cld
dec
sbb
mov
push
cmpb
aas
test
cmp
mov
dec
cmpsb
roll
or
dec
repz
push
and
cmp
insl
inc
dec
and
mov
dec
mov
cmovge
inc
and
rolb
addl
js
cwtl
add
out
push
aaa
inc
dec
xor
iret
imul
lods
inc
out
cli
rcr
dec
out
or
pop
or
test
punpckldq
dec
pop
push
mov
cwtl
push
mov
inc
shlb
mov
int3
movsl
jae
and
lods
pop
loopne
imul
dec
or
pop
cmp
sarl
pusha
out
pop
add
ja
imul
push
xchg
pop
add
add
leave
std
add
pop
xor
pop
pop
mov
push
jmp
aad
jle
jmp
gs
inc
mov
aaa
xchg
iret
out
sub
dec
mov
pop
jmp
inc
les
mov
dec
add
outsb
dec
neg
sub
xchg
dec
js
notl
xchg
iret
loopne
in
sbb
inc
das
add
mov
add
dec
movsl
jnp
xor
loop
jge
dec
inc
add
clc
data16
test
mov
jmp
cmp
dec
sti
xchg
out
cmp
cmp
mov
repz
dec
lcall
adc
or
fs
sub
inc
test
ss
dec
xor
ja
pop
pop
and
andb
and
xor
mov
xor
cmp
sub
movsb
xor
mov
or
jae
jg
in
xor
jl
add
or
sbb
adc
inc
pusha
dec
adc
orb
or
pop
movsb
mov
dec
and
sbb
mov
jle
ds
push
xchg
and
jmp
xor
dec
das
movsl
xlat
add
pop
push
xchg
aad
negl
or
push
pop
shl
out
test
hlt
xchg
sub
mov
adc
sub
and
mov
mov
inc
fstpl
dec
mov
out
add
push
dec
pop
mov
jb
add
jmpw
mov
mov
lcall
dec
mov
adc
mov
cmp
mov
mov
add
jo
int
js
shr
fidivs
and
push
inc
and
adc
cwtl
ret
push
xchg
add
mov
or
movsb
sub
mov
mov
adc
ret
enter
add
inc
ja
cli
xchg
inc
lock
sbb
push
adc
fwait
dec
mov
xlat
pop
sub
sub
sti
shr
leave
arpl
sub
xor
stos
add
xchg
imul
dec
mov
mov
adc
mov
push
push
add
mov
daa
jmp
js
nopl
test
loop
fs
adc
roll
jmp
adcb
nop
jb
stos
in
xor
mov
rcll
jmp
daa
mov
int3
push
mov
xorb
dec
mov
pop
ljmp
repz
jmp
mov
call
add
jbe
sarb
mov
mov
and
je
jbe
jb
sbb
in
sub
out
and
xchg
dec
xor
xor
or
mov
es
mov
dec
and
push
shlb
jns
cld
repz
sub
pop
popf
jnp
jg
xchg
call
and
arpl
sbb
imul
push
sbb
mov
pop
adc
scas
test
dec
and
in
jns
div
js
cld
xor
push
or
popf
daa
and
std
mov
add
pop
pop
push
and
add
mov
lock
jle
add
jmp
pop
mov
jne
mov
jmp
je
jmp
das
add
mov
mov
mov
jp
repnz
js
shll
cli
cli
cmp
cwtl
nop
add
ret
or
and
push
das
jp
dec
cwtl
mov
mov
aaa
jbe
or
or
jmp
lock
pop
mov
push
cs
adc
adcb
push
imul
sub
orb
mov
pop
and
jo
sarl
pop
push
adc
push
pop
rorb
aas
jmp
xor
adc
pop
mov
not
cwtl
sbb
or
cmp
sbb
add
movl
stos
adc
inc
loopne
dec
xor
inc
mov
pop
push
adc
popa
aad
loope
notb
inc
add
out
or
repnz
add
and
or
mov
push
mov
cmpsl
testl
jmp
mov
adc
mov
loope
dec
aas
push
or
test
add
cwtl
mov
pop
push
dec
sbb
repnz
cli
pop
bound
pop
jmp
adc
and
addr16
cmp
fsubs
dec
jmp
add
dec
mov
adc
add
iret
jmp
insl
or
fs
orl
pop
xor
subb
push
daa
ljmp
jmp
cmp
and
mov
sub
mov
hlt
cmp
dec
mov
sub
fsubs
push
mov
dec
mov
out
inc
bound
xor
fldcw
stos
daa
inc
xchg
push
mov
xor
cmp
rolb
shl
pop
sub
xchg
cmp
loop
lea
ljmp
or
push
filds
fwait
divb
data16
jno
popa
jmp
xor
mov
or
inc
icebp
mov
clc
subb
add
enter
xor
stc
and
sub
in
fdivr
repnz
or
and
clc
cmp
es
jno
or
lock
or
or
adc
fcomip
lods
mov
fldcw
mov
and
pop
cmp
mov
push
fistps
adcl
loopne
sub
shr
sub
js
into
shlb
lock
cmp
push
js
jl
pop
pop
out
pusha
out
pop
daa
pcmpeqb
push
popa
lcall
les
sarl
adc
arpl
jb
mov
sbb
sti
xchg
xor
out
adc
subb
sub
add
inc
mov
push
add
lcall
mov
mov
pop
or
dec
dec
test
fmull
add
insb
mov
shrl
cmp
push
mov
sub
push
orb
adc
rolb
scas
sbbb
dec
add
enter
test
sub
subb
test
dec
mov
mov
cld
mov
outsl
add
orl
add
mov
loop
pop
xlat
gs
shl
cmp
mov
push
in
sub
xor
mov
jbe
addl
imul
push
push
push
mov
insb
std
in
mov
add
pop
xor
popf
and
lcall
inc
xchg
mov
cltd
ret
jmp
sbb
jg
or
rcr
int3
or
test
cmpl
popf
ret
out
popa
fldcw
jns
hlt
call
push
mov
lds
fnsave
mov
fcoms
shr
dec
mov
jbe
and
lds
sub
mov
cmc
add
jp
mov
cltd
in
lock
or
mov
sbb
cmp
out
add
pop
inc
cmp
loop
pop
pop
andb
push
inc
push
aad
mov
xchg
sti
lahf
movsl
pop
push
sub
xchg
dec
std
jg
push
push
jmp
lret
mov
mov
scas
jbe
jb
pop
adc
adc
xor
sub
xor
scas
and
add
ret
fsqrt
add
lods
ret
movsb
or
ret
jo
lea
popl
sub
mov
inc
cmp
sbb
pop
push
repnz
nop
das
out
sbb
push
xor
jle
sub
movsl
dec
or
cwtl
xor
push
push
sbb
cmp
std
cs
mov
popa
sahf
add
gs
mov
push
pop
cmp
lret
fstpt
or
mov
mov
rcrb
xor
or
pop
inc
or
jg
into
dec
pop
hlt
test
inc
loope
clts
mov
or
jb
push
scas
outsb
insb
out
loop
dec
adc
pop
mov
or
pop
xor
pop
pop
lahf
pop
cli
sub
jge
data16
shlb
negl
loop
xlat
sahf
sub
jno
jecxz
push
cmp
jmp
dec
pop
icebp
adcl
flds
test
test
ret
xor
pop
dec
daa
jmp
jmp
inc
mov
in
dec
shll
enter
daa
mov
lods
dec
test
in
repz
in
inc
add
pop
add
clc
in
popf
jne
pop
xchg
push
cmp
fldt
dec
stc
sbb
cmp
inc
dec
xchg
pop
sbb
or
mov
push
and
push
add
dec
push
xor
ret
js
push
adc
or
cmp
or
dec
or
aam
in
push
ja
add
mov
mov
ret
xlat
jb
cmp
inc
adc
out
test
adc
jae
std
inc
adc
mov
xchg
ja
mov
dec
fnstsw
adc
sub
push
adc
inc
test
mov
pusha
or
push
and
and
cmp
add
add
jne
jns
leave
lock
mov
dec
and
test
sub
xor
mov
mov
xchg
sub
icebp
ficomps
push
push
popa
arpl
add
rclb
and
popa
and
push
jmp
pop
movb
push
push
jae
neg
add
imul
out
jbe
push
insb
jae
dec
sub
dec
add
mov
cmp
pop
mov
add
xchg
mov
int
mov
xchg
cmp
jmp
in
cmp
dec
mov
jbe
mov
inc
xchg
dec
or
and
add
xor
and
xlat
nop
andb
dec
sti
icebp
pop
xlat
jnp
mov
adc
add
inc
inc
add
xor
aad
das
lea
mov
hlt
dec
xchg
inc
cmp
sub
jmp
sbb
ja
in
inc
enter
hlt
pop
xchg
enter
orl
ds
add
pusha
jne
adc
sti
adc
cs
push
sahf
sub
pusha
xchg
xor
inc
or
arpl
js
sbb
push
aaa
adc
int
enter
push
pop
mov
jmp
or
call
pop
pusha
xchg
lods
mov
pop
aas
sbb
int3
add
lods
jne
jg
mov
dec
sbb
popa
or
sub
icebp
xchg
jle
lahf
push
adcb
dec
dec
inc
pop
fmuls
pop
inc
daa
cmc
js
add
or
rolb
les
mov
push
add
or
dec
testl
ret
sti
test
lcall
mov
push
sub
pop
xor
sub
mov
mov
jp
int
push
pop
out
imul
ja
outsb
cmpsb
cmp
cmp
fadds
int3
leave
out
sub
popf
ret
pxor
mov
fildl
push
scas
mov
repnz
je
add
pushf
pop
sahf
repz
jb
pusha
aad
jmp
add
aas
add
push
add
jl
add
and
dec
add
jmp
lcall
jne
jns
mov
pop
pop
pop
int
push
inc
lret
jg
jbe
add
ja
cwtl
ljmp
xor
xor
repnz
pop
mov
jg
frstor
inc
pop
dec
push
sbb
or
cmp
outsb
mov
push
mov
mov
jo
aad
mov
daa
call
cs
inc
into
rol
js
push
popa
and
pop
mov
nop
and
addr16
sub
jnp
cwtl
mov
mov
dec
inc
add
pop
movswl
insl
rclb
cmp
and
and
push
sbb
stos
mov
jb
sbb
fildl
pushf
sub
stos
add
mov
push
and
test
add
iret
jmp
mov
sub
dec
sbb
idivb
daa
shlb
arpl
sbb
xor
testb
push
mov
shr
jge
stc
inc
enter
cs
pop
dec
mov
clc
rol
stos
ret
sub
sub
ds
je
lahf
pop
jbe
sbb
dec
ljmp
rorl
push
jge
js
ror
std
push
inc
imul
outsl
movsl
sub
cld
stc
pop
mov
sub
leave
xor
push
or
ss
insb
push
dec
push
mov
mov
mov
test
pop
in
push
pop
and
jmp
xchg
push
jo
test
push
xlat
and
in
jmp
out
or
pop
pop
jle
xchg
mov
mov
mov
subb
or
test
mov
sbb
js
inc
hlt
mov
cwtl
adc
fnsave
fisttpll
adc
test
movsl
testb
movl
or
lcall
add
jmp
ret
and
lcall
xor
div
push
out
pop
les
fistpl
test
mov
imul
int3
pop
inc
xor
mov
clc
adc
mov
and
mov
sbb
in
mov
add
test
pop
add
dec
sub
jb
or
sbb
and
inc
cmp
adc
ljmp
lret
imul
push
push
jp
popa
fcmovb
test
and
clc
hlt
leave
sahf
aad
sub
mov
cltd
jbe
adc
pop
pop
ret
ret
sbb
ret
mov
cmp
mov
fildll
bound
cmp
ljmp
pop
jmp
movsl
or
jne
sub
or
lret
shll
or
or
cmp
push
add
add
or
test
cmp
js
adc
imul
rcrl
pop
mov
pop
hlt
and
or
add
pop
cmp
xor
outsl
jmp
fildl
xor
jmp
pop
cs
es
cmp
repnz
sbb
loopne
cli
mov
cli
or
jmp
mov
rcrb
cmp
cmpb
push
sub
add
sbb
inc
push
push
cmp
rorl
jb
pushl
test
out
jb
push
daa
dec
ficoml
sbb
fsubrp
pop
outsb
popa
pop
repnz
aam
das
jb
fldenv
jo
dec
push
shlb
test
sbb
xlat
mov
js
movsb
mov
add
pop
int
daa
hlt
icebp
or
fsubrs
in
add
cmp
enter
gs
and
stos
adc
into
das
cmc
or
dec
aad
fs
mov
ds
les
aam
ja
xor
test
mov
loope,pn
inc
sbb
sbb
cltd
add
iret
xchg
adc
mov
es
add
push
fidivs
dec
xchg
inc
cltd
rcll
jb
repz
adc
dec
addl
sub
or
pushf
mov
pop
xor
xchg
testl
push
or
aad
scas
or
int3
push
jmp
arpl
ficoms
dec
daa
sub
cmp
stos
push
movsl
mov
or
daa
mov
repnz
mov
in
mov
cmp
mov
lret
addr16
xlat
or
or
fsubs
sub
sub
pop
lds
enter
and
push
xchg
in
mov
sub
pop
loopne
mov
mov
pop
xchg
jmp
sbb
xchg
lahf
add
cmp
jl
jae
int
or
jae
leave
std
out
cltd
cmp
mov
inc
xor
pop
out
mov
repz
stos
and
into
pop
add
out
push
add
mov
das
jo
pusha
push
mov
xor
push
vmovhlps
cmp
jo
xchg
add
sbb
xor
dec
jne
mov
ret
loop
add
or
pop
or
xchg
jmp
cmp
mov
dec
pop
mov
jmp
pop
push
test
xchg
jp
and
repnz
and
xchg
ljmp
dec
mov
mov
stc
and
xchg
scas
hlt
add
aad
or
cltd
push
dec
daa
xor
fstpt
adc
fldz
inc
fwait
xor
jne
cmp
jp
test
lds
sub
fs
pop
xor
and
jmp
ljmp
cmpb
clc
inc
dec
and
loopne
jmp
test
jle
sbb
aad
inc
or
aaa
jb
xchg
push
sbb
push
jmp
xchg
pop
push
mov
cmp
outsl
mov
stos
adc
dec
adc
inc
cwtl
dec
es
bound
jo
pop
dec
repnz
dec
adc
jbe
dec
xor
gs
add
push
aaa
or
adc
or
and
jno
sbb
fidivrl
sub
bound
lds
xchg
jo
sbbb
fdivp
aas
adc
push
dec
pop
sbbb
sbb
call
push
pop
daa
or
mov
pushf
jg
call
mov
fiadds
push
mov
inc
scas
sub
mov
or
and
sahf
cmc
mov
add
outsl
les
adc
add
loopne
call
loopne
mov
jmp
or
inc
push
mov
divb
mov
inc
cmp
leave
or
add
mov
adcb
jg
or
or
mulb
ss
xchg
nop
sar
clc
addb
dec
add
mov
adc
jb
cmp
xchg
xor
xor
xchg
or
mov
adc
add
dec
mov
dec
adc
das
jp
sbb
mov
push
add
xchg
inc
movsb
cs
pop
add
lock
mov
push
xor
xchg
ficoms
push
les
clc
mov
add
push
fcmovnu
call
inc
addr16
cmp
sbb
xor
push
push
mov
cli
sub
add
mov
lahf
pop
xor
je
dec
add
push
insl
sub
fisttps
mov
notl
or
mov
dec
xchg
cld
fsts
adc
mov
pop
popa
jmp
pop
sahf
push
rdpmc
and
pop
dec
dec
or
add
add
add
in
mov
xchg
fcompl
rol
add
out
mov
push
cmovp
mov
ret
aaa
jge
std
add
mov
xor
mov
rorl
adc
in
dec
adc
stos
and
in
iret
inc
sbb
xchg
push
scas
jmp
addl
es
ljmp
push
pop
xor
sbb
mov
lcall
adc
jb
adc
pop
and
sar
imul
mov
movsb
inc
imul
xchg
dec
push
pop
or
jmp
out
je
adc
or
out
add
adc
outsb
mov
add
int3
in
jecxz
nop
leave
daa
pop
push
jle
and
rorb
addb
xchg
inc
popa
and
shlb
push
and
or
pop
push
arpl
mov
cli
add
pop
jns
sub
das
fs
lods
test
dec
test
in
jmp
out
in
xorb
imul
cmc
add
arpl
mov
dec
ljmp
stos
lahf
loopne
and
jne
add
cmp
test
mov
mov
sub
pop
nop
test
ljmp
inc
mov
adc
mov
xor
cmc
fisttpll
out
neg
xor
mov
scas
pop
mov
mov
or
in
jbe
cmp
cmp
jae
and
ret
ret
mov
je
add
sti
push
and
push
push
jp
or
mov
pop
or
aaa
push
pop
pop
cmp
cmp
xchg
into
inc
outsl
enter
movsl
mov
outsb
shrb
xor
adc
arpl
sbb
out
ljmp
ds
mov
sub
mov
xchg
into
bound
stc
div
mov
out
xchg
mov
pop
aaa
dec
inc
cmpsl
add
enter
and
sbb
fsubs
sub
push
movsl
xor
push
mov
mov
dec
add
xor
pusha
add
movsb
mov
clc
in
pop
mov
dec
out
pop
mov
cli
loop
mov
push
sub
push
iret
imul
pop
pop
mov
pushf
push
mov
das
inc
mov
cmp
xorb
lods
push
mov
push
push
mov
sub
les
cmp
xchg
sub
out
adc
arpl
xchg
lcall
sbb
adc
mov
add
xor
add
pop
push
jb
dec
or
add
push
in
inc
sub
ds
mov
and
adc
adc
inc
movsl
cmp
mov
stc
jno
inc
fisttps
por
and
inc
cmp
out
cwtl
or
add
adc
or
or
shlb
or
xor
xlat
pop
xor
sub
push
ret
loop
jge
push
xchg
xlat
jns
sub
mov
inc
mov
cmp
xchg
and
leave
sub
pop
jle
jecxz
fdivr
push
lods
adc
push
fisttps
pop
and
dec
or
addr16
pop
jge
dec
jb
fbstp
cmp
aaa
adc
xchg
push
jl
and
sbbb
jnp
repz
sbb
jmp
leave
sub
add
xchg
mov
jns
scas
in
adc
adc
dec
dec
test
dec
addr16
stc
imul
push
add
push
push
mov
xchg
mov
jne
outsb
roll
sarl
push
mov
rolb
sub
jg
test
add
mov
fisttps
jbe
lock
dec
push
test
xor
int
add
fstpt
stos
add
push
lods
in
movq
push
push
adc
sbb
lret
pop
jg
mov
jmp
aas
dec
jb
inc
dec
repz
ficomps
push
mov
aad
jmp
add
pop
popf
fistpl
mov
xor
inc
ljmp
mov
inc
mov
jne
lret
jnp
push
faddl
xlat
xor
fs
filds
mov
fsubr
jmp
pusha
add
inc
or
into
jmp
mov
mov
or
lahf
jo
dec
xchg
into
adc
xchg
sbb
dec
pop
out
mov
jnp
pusha
mov
imul
adc
clc
gs
push
push
push
sub
mov
pushf
lcall
dec
sbb
adc
add
or
sub
dec
lcall
push
xchg
lahf
add
inc
jmp
push
js
movsl
cmp
idivb
push
inc
jle
popa
loope
cmp
xchg
or
adc
or
int
call
jmp
test
push
mov
ljmp
shr
jno
cs
jecxz
push
adc
aas
testl
in
fldl
pop
repz
ffreep
xor
dec
daa
aam
adc
and
in
imul
xor
jle
add
mov
jae
fiadds
insb
add
xor
fwait
stos
add
cmpsl
andps
es
into
inc
or
jae,pt
iret
cld
jnp
mov
jo
mov
test
mov
pusha
mov
push
daa
in
inc
push
loopne
mov
push
push
bound
cltd
movsb
movb
jmp
mov
dec
mov
xor
sub
or
pop
pop
pop
and
in
lods
or
ja
push
clc
jne
aas
mov
add
test
mov
xchg
push
sbb
sub
sbb
aaa
mov
add
push
cmp
out
bound
stc
dec
dec
ret
hlt
imul
mov
repnz
loop
outsb
dec
sub
fwait
pop
cli
test
adc
push
jle
push
cmp
mov
lds
cmp
pop
xor
adc
cmc
jg
in
jb
aaa
sub
pop
pushl
pop
push
and
jle
test
jne
stos
lcall
das
pop
jne
pusha
enter
push
or
inc
addl
out
mov
scas
idivb
dec
dec
cmp
test
dec
dec
adc
push
test
js
aam
mov
in
ja
test
xchg
pop
cmpsl
sbb
dec
mov
adc
xlat
out
cs
pop
not
lods
into
sbb
ss
lahf
pop
test
sti
test
rcrb
pop
aas
jmp
push
testb
pop
mov
out
fldenv
jb
scas
data16
push
and
sahf
mov
mov
cld
popa
or
in
inc
lds
push
and
xor
push
jns
mov
daa
xchg
movsl
mov
out
bnd
mov
outsl
inc
in
jge
inc
add
out
cs
dec
insl
add
push
mulb
pop
or
jmp
popf
jecxz
loopne
fdivrl
add
neg
pop
add
xor
cmp
sub
nop
pop
rclb
add
xlat
es
shr
xchg
jge
push
clc
int
data16
cltd
and
out
lea
mov
ficoml
orb
lret
andb
xorb
jne
xlat
dec
cmpb
push
cmpb
mov
shrl
add
fisttps
popf
rorl
and
orl
je
pushf
or
mov
push
lahf
dec
mov
lock
push
sbb
jg
lods
inc
xor
add
fisubrs
add
push
shll
sbb
nop
and
loopne
dec
adc
and
fdiv
mov
inc
mov
inc
fs
push
mov
lods
cmp
dec
push
ss
mov
sub
mov
bsr
and
xchg
loop
jmp
dec
pop
cmp
cmpsb
mov
out
xor
mov
inc
xchg
sub
mov
cltd
sub
inc
cld
in
add
pushf
xor
xchg
add
pop
mov
adc
movsb
out
add
mov
adc
xor
fwait
dec
adc
jl
enter
cli
xchg
cmp
fcmove
into
inc
dec
push
mov
insl
pop
sub
into
sbb
or
out
adc
lahf
dec
xor
sbb
addl
mov
jmp
adcb
dec
jno
mov
jmp
icebp
jg
testb
mov
loop
pop
add
push
inc
mov
inc
adc
mull
add
adc
inc
mov
aaa
lock
xor
adc
pop
push
dec
jmp
std
aas
mov
pop
dec
or
sbb
test
push
mov
leave
adc
data16
cs
fildl
inc
in
inc
adc
push
ljmp
push
xor
pop
test
inc
cmp
add
jle
add
jge
add
push
or
nopl
ja
out
clc
addl
mov
add
mov
out
dec
out
aad
scas
loop
xlat
rorl
lahf
xchg
shrl
or
sti
fldcw
pop
leave
repnz
hlt
lods
push
push
mov
pop
cmp
in
and
xchg
repz
pop
sub
adc
mull
sub
popf
fsubrs
sub
ja
mov
xchg
loope
cmp
lahf
std
dec
ja
jno
data16
sub
push
sbb
aad
outsb
mov
adc
scas
orb
ja
sub
dec
jb
add
jne
push
xchg
add
mov
shl
dec
sub
inc
jecxz
xchg
aaa
add
push
mov
int3
adc
cmpsb
out
lcall
dec
lods
inc
adc
test
ljmp
pop
es
adc
pushf
jg
lock
add
or
ret
test
int
and
inc
pop
rol
or
arpl
in
cmp
jmp
mov
push
mov
jns
jmp
push
mov
and
out
in
or
icebp
outsl
ret
ljmp
push
mov
pop
push
adcl
mov
scas
pop
and
add
pop
imul
addr16
les
and
lods
push
mov
loop
push
add
pop
stos
in
mov
push
sub
fldl
insl
shr
lret
sbbl
add
pop
cli
push
and
or
icebp
and
nop
inc
cmc
stc
ret
sub
sub
movsl
jne
or
xchg
lds
loopne
repnz
and
stc
pop
adc
stc
cmp
jnp
outsl
pop
xor
mov
cmp
jnp
adc
or
pop
jmp
lods
mov
pop
xchg
mov
aas
jmp
movsl
pop
push
fnstenv
cmp
or
mov
xor
and
inc
pop
add
sub
pop
jmp
data16
jnp
mov
mov
push
aam
sbb
or
pop
pop
mov
add
hlt
iret
sahf
xor
shl
xor
shll
pop
sub
dec
nop
stos
or
jle
ss
push
adcl
mov
mov
lea
ss
das
pusha
out
enter
cmp
pop
mov
call
outsb
inc
jmp
test
jmp
inc
shl
cld
icebp
adc
push
pop
negl
scas
cmp
dec
shr
add
or
repz
icebp
xchg
popa
lahf
push
sub
and
xchg
add
add
cmp
mov
or
and
xor
call
shll
pop
push
or
pusha
in
movsb
jmp
mov
dec
cmc
pop
jnp
dec
rol
mov
in
xchg
mov
popf
xchg
push
jmp
in
in
push
push
subb
mov
lds
sub
sub
adc
jmp
mov
ljmp
add
xor
push
jmp
push
pop
dec
pop
lock
or
fldenv
and
sub
mov
or
and
pop
mov
push
inc
sub
add
jmp
sub
into
xlat
out
adc
lock
pop
std
sbb
xchg
daa
push
jne
mov
mov
negl
xchg
pop
dec
add
cmp
orl
jns
xlat
test
pop
xchg
bound
xchg
sub
pop
dec
inc
test
shll
mov
jmp
clc
cli
mov
imul
add
pop
jmp
xchg
fistl
add
aam
and
jl
adc
popf
and
and
mull
xorl
or
sbb
adc
pop
adc
repnz
inc
xor
sahf
pop
add
cmp
pop
test
inc
xchg
inc
sub
int3
fwait
xchg
fstl
and
xchg
add
or
popa
xadd
push
ja
dec
sbb
mov
lock
xor
add
add
je
fisubl
cld
mov
push
mov
ss
dec
dec
sbb
adc
cli
add
jno
push
jmp
mov
mov
add
push
jo
xor
add
movsl
dec
jle
adc
xor
mov
add
jle
out
sbb
daa
std
xchg
call
mov
adc
xchg
int3
aad
adc
cmp
mov
pop
imull
or
add
loopne
imul
ret
les
and
jno
inc
sbb
fstl
bound
jecxz
lret
pop
aad
gs
clc
push
in
jg
push
int
andl
pusha
and
jl
sub
pop
js
test
add
and
add
mov
add
fldt
push
imull
cmp
or
es
in
js
and
jno
adc
sub
dec
pop
mov
add
ljmp
jo
ret
subb
outsb
add
aaa
hlt
aas
dec
pop
popa
rol
adc
add
aas
nop
scas
or
iret
jmp
pop
mov
push
dec
lret
movsl
add
mov
or
jl
sub
aas
cmpsb
xadd
push
mov
and
mov
add
inc
js
loop
fisubrs
aaa
inc
cwtl
and
push
mov
dec
push
adc
add
mov
or
push
or
push
sbb
enter
sbb
add
add
inc
push
aas
aaa
cmpsl
jo
cltd
adc
jge
add
inc
xor
add
iret
aas
std
or
push
bound
pop
mov
lcall
cmp
xchg
in
xchg
inc
lret
and
mov
leave
push
cld
rolb
dec
outsl
mov
adc
jmp
pop
adc
aam
inc
rclb
mov
dec
pop
mov
jmp
aas
cwtl
cli
sub
jle
adcb
test
fs
sbb
in
lea
mov
cwtl
push
adc
mov
or
xchg
es
add
arpl
pop
and
and
jmp
aaa
lret
dec
mov
dec
jne
lds
sbbb
push
pop
jle
leave
insb
sub
daa
push
or
repz
cmp
and
jae
add
push
aaa
jp
cmp
inc
push
imul
mov
adc
arpl
ja
out
mov
cmp
divl
add
push
adc
jge
dec
loope
dec
sbb
and
movsl
push
xchg
jmp
aas
cmp
mov
ret
lret
mov
xchg
push
jle
xor
test
ja
cmp
xor
sub
xchg
jne
xchg
imul
xchg
out
or
add
jge
xorl
mov
pop
or
pop
ret
xchg
sub
sub
xchg
sub
inc
lahf
adc
icebp
int
fwait
lods
dec
test
ja
add
ljmp
push
js
int3
add
xor
pop
add
fisttpll
push
push
pop
add
jle
add
or
shlb
inc
or
xor
add
cli
movsb
dec
mov
outsb
mov
insb
lods
repnz
adc
mov
xchg
fiaddl
or
inc
mov
out
scas
scas
je
adc
adc
out
xor
jl
pop
sub
not
push
lret
mov
push
mov
or
subl
and
xor
inc
mov
jo
daa
loop
jge
sub
dec
xlat
cmp
incb
mov
ljmp
cwtl
or
dec
mov
and
sub
fldenv
sub
push
mov
add
mov
gs
add
popl
jmp
jmp
dec
xchg
stos
out
sarb
cwtl
pop
fstpl
jmp
cmp
add
jmp
cmp
insb
or
jl
mov
lret
aad
mov
dec
in
and
or
sbb
xchg
test
shrb
jge
jns
sub
cmp
insl
cmc
gs
fwait
incb
jae
push
push
jmp
jb
and
mov
or
popf
test
lret
cmp
push
mov
xorb
xor
xlat
add
inc
jmp
cmpb
pop
popa
push
and
push
cmp
cmc
jno
shr
lock
dec
push
and
cli
mov
jmp
sti
je
repnz
imul
cmpsl
outsb
lcall
aaa
jnp
push
out
decb
push
xor
pop
push
mov
cmpsl
jb
or
aas
push
push
sahf
movsl
or
call
stos
fwait
mov
sbb
cmp
jbe
push
iret
int
test
push
xor
mov
pop
jle
rcrb
dec
shl
imul
sbb
out
xor
adc
dec
inc
push
clc
mov
sub
pop
out
mov
outsb
mov
mov
inc
pop
sbbb
decl
cld
mov
sub
xor
sbb
ret
aam
jecxz
jb
mov
mov
add
ret
push
repz
jmp
push
jmp
les
data16
das
aam
inc
jbe
rcrb
push
push
lods
pop
movsb
subb
test
mov
roll
push
push
rolb
loopne
mov
and
mov
repnz
mov
jmp
adcb
inc
or
push
cs
push
sahf
or
sub
dec
add
jp
mov
dec
pop
data16
dec
cmp
pusha
or
gs
xchg
outsl
mov
pop
cmp
inc
jae
dec
and
xchg
mov
inc
jmp
cmp
or
les
lret
cmp
or
fldenv
xor
lret
mov
add
enter
inc
or
data16
mov
push
or
movsb
xor
sti
mov
fucom
adcb
adc
imul
andl
pop
dec
mov
adc
pop
sub
cmp
add
call
mov
jmp
push
and
xor
mov
or
jmp
push
inc
sbb
xor
aad
loopne
add
lds
push
and
lret
loope
or
pusha
testl
adc
sub
mov
cmc
jmp
pop
pop
cmp
out
scas
bnd
std
dec
add
gs
xchg
mov
push
xchg
cmp
or
add
sub
frstor
pushf
push
dec
pop
jbe
lock
aas
jmp
les
cs
cmp
xor
das
pop
xor
pop
jmp
sub
mov
add
call
mov
mov
es
add
subb
lock
call
rorl
jmp
in
leave
lock
xor
mov
or
or
movsb
push
pop
stos
mov
lods
pop
push
push
leave
mov
popf
pop
xchg
in
sbb
adc
movsl
inc
add
pop
aad
fs
in
mov
aam
push
jno
mov
pop
addb
cld
dec
dec
testb
mov
sub
mov
pop
jmp
fsts
add
lock
hlt
loope
mov
or
mov
cli
jb
repnz
cwtl
sbb
hlt
test
daa
pop
pop
adc
mov
pop
es
dec
dec
pop
xor
leave
rcrl
rcll
push
mov
out
or
stc
fcmovu
or
xor
mov
int
das
xor
mov
pusha
ret
in
into
fdivs
stc
stos
ja
ret
or
mov
in
push
jp
jecxz
pop
pop
fcomps
sub
dec
ljmp
cmpsl
adc
add
sub
repnz
mov
fmuls
cs
jnp
xlat
pop
notb
xchg
decl
adc
int3
loope
shr
mov
push
daa
dec
push
repnz
out
add
push
aas
cs
arpl
add
jg
jbe
or
pop
add
fcompl
jnp
mov
sbb
adc
gs
mov
or
push
pop
sbb
add
lahf
sub
inc
frstor
adc
xchg
xchg
inc
adc
inc
int3
push
jg
xchg
icebp
add
pop
repnz
test
jo
or
enter
mov
pop
shrl
add
mov
lock
inc
dec
cltd
fdivrl
inc
and
scas
imul
jns
shlb
and
sbb
jmp
cmc
adc
xchg
repz
pop
lahf
rep
xor
pop
pop
divb
sbb
and
mov
mov
adc
lea
cmpsl
sbb
add
call
sub
in
pop
xchg
scas
nop
jecxz
fistpll
loope
inc
out
bnd
mov
insl
imul
mov
xor
cmp
inc
sub
xor
inc
enter
jl
pop
iret
mov
dec
cs
or
mov
xorb
jl
outsb
xchg
movsl
pusha
popa
xor
dec
sbb
pop
or
jo
imul
inc
xor
daa
adc
dec
mov
sti
imul
sub
xor
add
addl
lcall
xor
inc
lods
dec
pop
push
add
sbb
icebp
test
lret
fucomi
ja
arpl
xchg
lds
ljmp
xor
cmc
daa
jmp
repz
pushw
in
dec
mov
dec
push
mov
dec
mov
andb
mov
adcb
mov
pop
pop
test
xchg
push
ret
pop
xor
and
push
cmc
pop
cmp
add
loop
pop
add
mov
push
inc
outsb
cmc
cmp
test
sahf
lea
mov
cmp
out
loopne
shlb
mov
cmc
dec
inc
rclb
push
dec
and
je
fs
and
arpl
xchg
inc
cli
dec
add
pop
rcrb
add
add
dec
mov
and
lret
cs
mov
popl
jge
or
or
add
mov
adc
test
out
cltd
or
xlat
cmp
ficoms
push
or
pop
or
divl
lock
jb
adc
pop
pop
mov
cld
push
add
aas
dec
sub
out
ret
das
scas
repnz
push
mov
pop
xchg
push
cld
inc
xchg
mov
inc
inc
sbb
jns
mov
out
mov
ja
jmp
jmp
cmovns
and
adc
dec
dec
and
sub
dec
dec
inc
lret
js
dec
and
out
or
lcall
adc
mov
loop
add
pop
xor
inc
cwtl
pop
stc
les
mov
and
das
call
push
cmp
cs
pop
jne
stc
push
jmp
fs
mov
mov
clc
dec
jbe
fsubrs
inc
or
mov
or
sbb
jg
inc
shlb
push
aaa
imul
mov
push
inc
mov
pop
sub
jnp
setae
in
push
inc
or
mov
mov
int
test
nop
add
out
test
add
jmp
pop
add
cwtl
adc
popa
and
push
push
push
push
lods
dec
rolb
aaa
out
cmp
cmp
outsl
rcrb
mov
and
les
rol
pop
leave
into
push
mov
jle
leave
leave
sbb
xor
mov
arpl
cmp
aaa
cmc
mov
inc
dec
sub
xor
xor
repnz
loop
add
imul
pop
xor
mov
cmpb
lods
sub
pop
gs
or
jne
jmp
sti
add
test
sbbl
xor
cmp
cmp
inc
push
test
jmp
enter
xlat
scas
mov
lret
sub
pop
in
scas
xorl
and
addr16
jb
pop
adc
mov
mov
jno
test
mov
push
push
pop
inc
call
pop
mov
clc
sbb
test
in
aas
test
movsb
mov
jmp
xchg
ret
cs
test
jno
cs
mov
into
sti
ds
nop
and
push
out
push
aam
or
adc
hlt
mov
ja
mov
shll
bound
cwtl
lock
mov
icebp
add
push
push
dec
add
xor
mov
ja
mov
jmp
pop
pop
sub
cwtl
add
bound
cs
mov
cmpsb
and
mov
das
jo
sbb
jl
xchg
out
test
push
sub
push
inc
push
mov
cltd
out
jl
dec
fwait
add
call
adc
push
mov
add
hlt
in
push
andl
bound
sar
std
rorl
or
out
push
mov
jmp
or
jb
and
add
mov
call
sbb
inc
clc
or
or
xchg
adc
mov
sub
dec
insl
mov
add
dec
xchg
dec
loopne
push
sub
jmp
and
jl
pusha
neg
nop
sub
fmul
bt
imul
adcl
lret
add
daa
test
rol
or
movsl
pop
jmp
xchg
or
sbb
dec
or
sbbl
outsl
enter
mov
jnp
and
ja
fmuls
sub
add
sub
or
mov
pop
adc
add
inc
push
loope
inc
imul
cmp
loop
adc
push
xchg
or
push
rorl
aad
pop
mov
jmp
and
mov
and
shll
test
fiaddl
dec
add
dec
push
mov
push
mov
bound
xor
mov
push
pop
daa
push
or
pop
daa
faddp
jns
ds
pop
lds
shl
and
lret
mov
shlb
pop
and
pop
xchg
or
aam
es
or
fistpl
dec
ret
std
pop
loop
xlat
dec
jo
repz
adc
std
adc
push
cmc
in
scas
fs
aad
xchg
insl
xlat
enter
sbb
jge
add
add
pusha
stos
xor
scas
pop
enter
scas
andl
std
das
orb
push
push
add
cld
ljmp
xchg
pop
sub
dec
xor
mov
stos
push
loope
popf
jmp
cmp
scas
or
adc
jo
not
pop
xor
mov
add
xchg
lock
je
data16
push
or
jge
out
add
and
jge
xor
push
jb
pop
mov
dec
out
cmp
addl
push
cmpsb
mov
adc
inc
push
cmpsb
ss
imul
dec
idivb
fcoms
dec
and
shr
mov
data16
mov
mov
ja
cmp
cli
inc
scas
ljmp
shr
mov
negb
dec
sub
cmp
jp
loop
in
subb
xor
in
jnp
repnz
cmp
xchg
xor
or
aaa
test
and
or
test
in
or
std
and
push
inc
subb
js
jno
aaa
out
mov
test
stos
faddl
imul
push
add
push
pusha
adc
pop
scas
int3
xlat
sbb
mov
mov
clc
movsb
or
sub
add
jge
subb
xchg
jne
sub
outsl
gs
into
jmp
js
loopne
adc
or
ljmp
lock
sbb
mov
push
xchg
jge
and
jno
outsl
cmpb
insb
push
cmp
pop
leave
insl
add
test
xor
fs
jno
ds
xchg
mov
lret
push
push
je
loopne
and
shlb
jmp
sub
movsb
pop
pop
repnz
mov
aam
lret
push
dec
mov
xchg
push
push
rcll
inc
inc
and
push
insl
out
jbe
repnz
jg
lret
mov
dec
pop
inc
pusha
adc
mov
push
jle
mov
add
jae
cltd
loop
sbb
adc
sub
sub
or
adc
and
and
jmp
scas
push
add
sub
mov
es
xchg
test
adc
js
sbb
lcall
clc
lcall
les
ja
andb
add
pop
add
mov
fnop
leave
cmp
jno
push
call
pop
jmp
sbb
sub
pop
das
int3
jno
sbb
pop
outsb
mov
ss
push
sbb
cmpl
movsb
sti
add
stos
cmp
andl
add
pushf
lahf
mov
je
inc
mov
add
inc
fcoms
not
rcll
sub
sti
rorb
cmc
jle
sub
ret
add
cmp
mov
stos
jmp
inc
sbb
mov
inc
aad
adc
sbb
cmpsb
push
cmp
mov
cmp
jl
subb
cmp
mov
insl
or
das
pop
push
push
movsl
lds
les
jmp
out
leave
jbe
daa
ds
bound
xor
xor
insl
add
sub
cmp
mov
shr
add
pop
sub
mov
movb
cmc
adc
scas
fwait
out
dec
ljmp
test
pop
call
incb
inc
mov
xor
mov
jmp
dec
dec
insb
inc
daa
popa
and
test
loop
adc
popf
push
scas
lret
cmpl
mov
andl
mov
ret
add
mov
ds
mov
sbb
aaa
cmp
imul
sbb
in
jmp
push
call
out
negl
shr
aas
push
ss
leave
mov
pusha
add
dec
jmp
adc
adc
and
inc
jo
cltd
add
movsb
sub
mov
and
mov
or
push
cmpb
push
or
sbb
es
cs
les
iret
test
lahf
stc
mov
add
pop
pusha
psraw
sbb
or
cmp
test
or
xor
and
mov
stos
jl
xchg
sarb
jge
push
in
dec
mov
insb
or
dec
ja
add
adc
add
dec
push
fs
jmp
sarl
ret
push
insb
or
inc
fildl
ds
cmc
sbb
xchg
pop
sub
in
add
popa
inc
pop
imul
dec
popa
call
sbb
insb
adc
jne
mov
pop
xor
mov
lock
jnp
pop
sahf
cmp
add
push
arpl
bound
lods
xchg
push
cli
jecxz
lock
icebp
jbe
out
prefetch
je
sub
iret
movsb
sbb
push
sbb
sub
xor
rcrb
pop
mov
mov
rcl
xchg
lock
out
dec
sahf
clc
xchg
faddl
sub
mov
push
and
mov
jae
add
xor
cmp
xor
xor
popf
in
push
in
iret
add
pop
mov
cmp
cmpsb
adc
lods
pop
xor
sbb
push
mov
jnp
adc
jno
mov
test
std
ret
fmuls
sbb
xor
jge
push
shlb
mov
lret
mov
movsl
push
push
or
mov
dec
jmp
pop
push
push
scas
xor
push
bound
push
in
je
push
movsl
dec
dec
xlat
inc
pop
adc
fidivs
arpl
jp
jno
pop
or
shll
add
xor
enter
movsl
insb
pusha
adc
mov
sub
sub
dec
mov
push
jae
jmp
ja
inc
mov
stos
in
ljmp
push
mov
mov
in
lods
rcll
int
xor
sarl
mov
loopne
inc
cli
pop
and
pop
in
aaa
jo
nop
cmp
xchg
les
xor
fwait
jnp
adc
pop
push
sub
push
inc
pop
fs
inc
dec
pop
jne
aas
les
jmp
stc
int
sbb
dec
jecxz
inc
mov
aaa
aaa
out
imul
in
push
mov
jae
rorl
push
sub
mov
daa
or
jp
nop
pop
xchg
test
inc
jmp
fidivrl
add
repz
sbb
jb
add
xor
push
movsl
add
and
in
jmp
mov
jne
jp
sarb
outsl
sbb
dec
inc
jg
in
ret
test
pop
push
pop
out
stos
cmp
dec
mov
add
loop
shrb
xor
and
insb
lret
xchg
add
mov
dec
outsl
add
sub
jmp
cs
or
jmp
decb
mov
add
mov
jno
sbb
push
inc
add
jge
xchg
lret
cmp
xchg
addb
outsl
hlt
pop
pop
pop
sub
sub
xchg
clc
mov
fdivs
loop
push
xlat
jnp
pusha
xor
ss
adc
mov
iret
imul
inc
mov
adc
dec
sbb
mov
xor
sub
push
jmp
stc
pushf
cvtps2pd
scas
mov
icebp
pop
push
jnp
stos
shl
subl
adc
mov
jnp
push
leave
jnp
js
add
dec
ds
adc
in
mov
int3
cmp
dec
mov
mov
imulb
cmp
pop
shrl
push
mov
paddusb
push
sbb
loopne
push
pop
dec
add
push
fsub
pop
rorb
mov
stc
cmp
xchg
outsl
loop
in
or
jne
mov
mov
or
inc
sub
xchg
or
push
mov
into
cltd
sbb
sti
mov
pop
push
addr16
pop
mov
scas
sub
sub
jmp
pop
arpl
shr
scas
cmp
cmpsb
sti
pop
pop
add
xlat
mov
dec
inc
xor
mov
ret
jns
out
sarb
mov
out
sub
add
jmp
xchg
add
push
jp
cmpb
ficompl
cmp
ja
jnp
mov
add
inc
pop
jo
push
add
pop
fistl
insb
pop
pop
ret
call
and
jb
jnp
mov
mov
bound
ror
jl
sub
push
enter
sbb
repz
add
jo
push
jns
inc
cli
xchg
lret
loop
fldl
cwtl
fs
mov
scas
push
test
out
call
scas
jo
cmp
inc
xchg
js
sub
jge
jmp
and
fs
cmp
pop
xchg
jge
pushf
jp
pop
dec
or
adc
adc
stos
dec
inc
pop
push
xchg
adc
and
mov
dec
xor
inc
mov
jl
xchg
or
jge
test
ds
mov
push
mov
and
loop
jg
add
outsl
xchg
and
ss
xchg
ret
jge
xor
and
push
cwtl
push
mov
sbb
leave
and
mov
subb
push
testb
push
into
xchg
lds
adc
mov
call
xchg
mov
adc
pop
xchg
push
dec
imul
and
jp
sub
xchg
dec
push
mov
mov
cmp
aad
out
pop
dec
cs
jmp
mov
xchg
push
lods
cmpl
je
out
push
push
clc
rolb
push
pop
jae
inc
inc
fs
and
inc
add
movsl
dec
fsubrl
cld
test
add
mov
fdivrs
shlb
jo
mov
lret
kmovb
sbb
cmp
lret
scas
xor
adc
dec
stos
adc
or
or
jmp
les
pop
sub
je
pop
pop
sti
cmp
subb
rcll
add
addl
ja
mov
or
mov
out
push
cmp
call
jns
push
popa
and
push
sbb
dec
dec
mull
jge
add
out
adc
push
xchg
out
sbb
cmp
shl
mov
rclb
and
pop
clc
hlt
add
xchg
fadds
and
add
add
xchg
sbb
leave
sbb
out
push
push
mov
or
adcb
jo
cmp
repnz
add
out
sbb
shrl
popf
ja
cmp
lret
aaa
mov
sub
std
inc
ja
dec
mov
flds
notl
scas
dec
cs
arpl
shll
xchg
or
and
sbb
pushf
push
lret
cmp
push
mov
out
push
push
nop
addb
cmpsl
sub
cmp
rorl
cmp
jno
in
incb
add
cmp
fstpl
das
adc
movsl
dec
out
mov
dec
loop
push
into
mov
mov
and
mov
xchg
add
subb
jl
xchg
fs
xor
ja
dec
sub
dec
sbb
and
push
inc
scas
push
mov
lods
cli
fsts
shlb
dec
jmp
sub
les
jns
push
jmp
add
pushl
out
testl
sub
inc
push
inc
ds
sub
insl
sub
cmpsb
inc
mov
and
inc
in
mov
cltd
push
sbb
dec
dec
inc
mov
hlt
cli
jmp
outsl
mov
adcb
sub
lods
jle
push
fwait
daa
cmc
adc
or
fld
or
les
jno
popa
stos
xorb
push
ret
xor
in
in
aas
ljmp
inc
or
mov
aam
add
mov
aam
ljmp
sbb
and
sti
pop
mov
mov
pop
push
test
cmp
cmp
jb
lcall
adc
lea
jmp
pop
outsl
ja
imul
cmp
dec
jne
cmp
int3
add
insb
lahf
mov
cmp
sbb
rorb
dec
nop
decb
ss
rorb
add
cmp
shlb
lods
in
repnz
les
fmull
ss
mov
or
rol
mov
dec
xchg
daa
ljmp
sub
fcoms
testb
xor
jmp
add
or
shlb
and
dec
pop
mov
popf
sbb
int3
pop
pop
mov
or
xchg
mov
test
jmp
fmulp
jne
lcall
adc
cli
or
or
stc
gs
mov
cmp
dec
pop
addr16
faddl
or
sub
cwtl
lea
jo
or
push
add
sub
adc
int
call
popl
add
xchg
sahf
jo
jns
cmp
or
adc
jle
dec
insb
gs
ret
rcll
sbbb
push
sbb
and
fistl
pop
aas
and
shl
or
fxch
mov
aam
aas
sub
cmp
int3
sahf
pushf
bound
and
dec
push
jnp
mov
mov
clc
sub
xchg
loop
ja
push
dec
out
mov
push
push
jg
fistps
std
and
cmp
mov
xor
and
add
mov
jle
and
sbb
jmp
sbb
xchg
pop
shr
dec
jnp
std
dec
stos
enter
jge
jecxz
sbb
addr16
push
gs
lahf
push
pop
mov
mov
sarb
push
loope
std
cmp
movsl
jle
add
push
mov
jmp
xchg
sub
inc
xor
add
movb
jbe
inc
push
mov
insl
and
mov
decl
pop
inc
inc
inc
and
sub
cmp
add
push
shl
dec
mov
cltd
jo
or
fucomip
and
pop
das
jg
xchg
dec
dec
test
mov
and
add
xchg
jle
lods
das
or
push
daa
ficoms
popa
pop
sbb
mov
push
pushf
hlt
xchg
stos
daa
ja
xor
and
dec
adc
inc
popa
add
out
cmc
mov
dec
fcomp
push
adc
jl
jl
rcrl
lret
jmp
aas
adc
xchg
jns
add
push
je
adc
dec
stos
sub
ds
push
adc
push
adc
mov
outsb
add
repnz
jmp
mov
pop
mov
push
xor
and
add
movsb
sub
nop
cmp
or
addl
cmp
notb
sbbb
mov
imul
test
aaa
out
es
imull
and
or
sub
ds
xchg
roll
ss
roll
sub
xchg
test
or
mov
divb
add
ss
in
fldl
cmpsb
shl
mov
push
inc
test
pusha
inc
lds
fcmovb
rorb
xor
outsl
add
cs
mul
out
mov
mov
lods
push
and
jp
sbb
add
mov
mov
iret
je
cmp
jne
outsl
and
xchg
lods
call
leave
xlat
cmp
ror
and
cmp
pop
adc
lock
lret
push
scas
adc
mov
xor
inc
test
inc
pop
pusha
lods
flds
addl
call
enter
sub
pop
sub
add
push
push
mov
mov
out
adc
nop
daa
jmp
pushf
pop
inc
fildl
mov
mov
mov
mov
sub
jns
dec
dec
mov
nop
adc
fsubrp
mov
lret
push
dec
out
cmp
test
test
and
jmp
or
out
cmp
mov
je
jne
sti
jge
mov
pop
push
bound
fimuls
push
stos
out
in
leave
cmc
cli
pop
pop
mov
jns
inc
lret
inc
or
ficoms
cmp
push
inc
mov
cmp
clc
addb
cmpsb
fisttpll
loopne
jle
push
add
addb
push
inc
fdivl
cli
mov
add
push
outsl
jne
bound
jnp
sbb
sbbb
or
sub
loope
in
dec
pop
movsb
and
or
jae
pop
dec
xlat
push
divb
cmp
mov
add
inc
or
xor
das
sub
jae
cmpsb
mov
lahf
fimuls
mov
stos
or
mov
dec
pop
sar
inc
cwtl
mov
arpl
aas
inc
xchg
aad
testb
ss
ljmp
inc
and
pushf
leave
pop
cmp
sbb
xor
orb
loopne
mov
loop
shl
aaa
fnstenv
or
ss
sbb
aas
stos
movsb
clc
jmp
repnz
dec
lock
or
push
aas
dec
jp
into
mov
mov
pop
mov
out
fsubr
cmp
fcmovnu
push
loopne
add
jo
dec
sub
add
arpl
pop
jb
lock
test
jmp
jmp
pop
fldcw
mov
ljmp
adc
fs
mov
sub
shll
add
fs
mov
out
pop
inc
add
add
push
or
in
pusha
xor
or
pop
imulb
stos
sbb
xchg
arpl
int3
jno
or
push
xchg
adc
pop
push
jb
mov
leave
push
cwtl
push
jmp
cmp
dec
cmc
inc
mov
push
mov
jge
push
pop
push
jmp
jp
jmp
pop
add
xor
test
bound
pop
add
jnp
or
pop
das
pop
dec
sub
push
mov
push
sub
pop
adc
rcl
mov
aam
insl
outsl
pop
inc
pop
add
repnz
add
pop
xor
pop
xor
adcb
cmovp
or
push
push
sub
mov
shr
xor
out
add
sarb
push
scas
roll
testb
xchg
loopne
lods
push
mov
xor
add
sbb
xchg
jns
inc
sub
insb
sbb
mov
test
xor
pop
lods
movsb
and
dec
pop
push
cmp
mov
dec
sub
daa
push
add
movsb
loope
mov
data16
mov
sub
call
or
mov
pop
xchg
pop
jmp
lret
mov
pop
and
jg
sbbb
push
mov
sbb
dec
pop
mov
push
xchg
mov
lods
push
sbb
sbb
ljmp
inc
out
cmpsb
fldl
aas
pusha
push
mov
add
subb
pop
mov
fcomip
ja
jge
inc
mov
jmp
sarl
jne
out
jbe
inc
mov
add
push
cs
push
clc
shr
dec
sub
xor
insb
iret
in
mov
bound
mov
sbb
lcall
add
add
out
inc
mov
cmp
push
push
test
adc
sbb
xchg
xor
mov
inc
add
mov
notl
ficoml
push
imul
addr16
ljmp
or
sub
mov
or
inc
cmp
and
cmp
pusha
or
cmpsb
fsubr
add
pop
xlat
js
outsb
xorb
add
sub
out
xor
push
dec
js
add
scas
and
js
roll
mov
inc
jno
pop
inc
push
push
lret
daa
sarb
xchg
pop
pushl
or
pop
jmp
push
cmp
mov
insb
or
add
push
mov
ljmp
mov
jmp
sbb
or
sub
push
add
pushf
lcall
fdiv
ljmp
mov
mov
aas
test
imul
add
jecxz
pop
cmp
push
scas
jle
add
xor
movsb
pop
sarl
iret
loop
cmp
shll
and
cmp
add
js
shr
push
pop
xchg
push
pop
mov
push
sbb
adc
mov
jne
insb
xlat
add
dec
add
test
or
lods
fstpl
jmp
dec
sbb
mull
jae
dec
fs
xor
jbe
push
jmp
mov
iret
xchg
data16
add
mov
sub
lds
movb
mov
clc
xor
fs
pop
and
aam
pop
jb
cmp
mov
add
push
and
sti
mov
jbe
rolb
xchg
mov
sub
adc
push
lret
inc
jmp
xor
jne
jmp
adc
add
jnp
mov
mov
push
and
pop
mov
out
inc
aad
inc
fs
pop
push
jne
outsl
sub
xchg
cld
or
inc
shrb
loopne
repz
or
add
and
push
insb
adc
or
mov
pcmpeqw
sbb
or
pop
fsubrl
ret
push
dec
cwtl
cmp
pop
push
add
pushf
mov
mov
lcall
cmp
or
arpl
sbb
push
adc
dec
mov
pop
mov
jae
jns
add
pop
push
ret
add
sub
and
int
add
sub
in
cwtl
das
sbb
push
pop
and
cmp
cld
daa
mov
iret
pop
out
xchg
jbe
jno
das
mov
les
popl
stos
jbe
push
rolb
xorb
dec
jmp
push
pop
in
scas
rorb
out
lods
jne
add
pop
xor
or
fists
push
stc
xorb
push
jl
inc
xor
and
add
in
inc
rorb
dec
mov
cmp
inc
add
and
sahf
addb
aas
adc
filds
pop
add
add
sub
cwtl
pop
cmp
or
out
xor
std
ljmp
scas
mov
push
xchg
inc
sti
xor
je
adcl
mov
incl
into
inc
loope
shl
rcrb
dec
xchg
sbb
cld
adcb
pop
cmp
mov
movsl
add
stos
ds
ret
or
test
push
push
push
outsb
jmp
out
xchg
std
dec
addb
dec
sbb
inc
pop
jo
pusha
push
sbb
or
pop
add
mov
mov
pop
ljmp
mov
xchg
push
or
pop
sub
adc
or
and
repnz
add
dec
mov
lret
jp
out
push
xchg
lods
xchg
hlt
adc
or
dec
sbb
imul
push
out
imul
sbb
push
jle
daa
into
mov
jne
add
pop
pop
mov
jne
movsl
lret
or
sbb
add
xor
fs
mov
repz
enter
lret
cmp
ret
push
dec
xchg
ljmp
jbe
jg
repz
les
int
mov
cmpsl
inc
or
loop
xlat
pop
movb
jb
negl
pop
dec
xor
mov
aam
adc
add
repz
and
fidivrs
or
push
scas
or
pop
andb
sti
in
xor
mov
outsl
dec
jne
or
add
loop
test
nop
xor
mov
pop
jl
arpl
mov
sbb
push
orl
or
pop
push
and
insl
mov
add
xchg
mov
mov
loope
mov
movl
push
or
and
add
je
enter
bound
insb
xchg
or
mov
adc
rorl
pop
add
mov
cmpsb
mov
lahf
sub
xchg
push
cmp
dec
jnp
mov
pop
fisubs
adc
leave
fwait
pop
cltd
inc
cmp
xor
dec
sub
push
sbb
dec
cmp
test
or
pop
and
jo
lahf
loopne
pushf
pop
xchg
imul
or
push
adc
and
int
leave
insl
mov
lret
pop
jmp
mov
xlat
jne
mov
pop
push
pop
das
notl
test
mov
push
cmp
int3
mov
add
cmp
nop
push
into
cmc
add
jo
ljmp
adc
aas
or
fidivrs
sbb
loopne
out
in
loope
sbb
and
das
xor
popf
fisubs
and
repz
loopne
and
pop
sti
add
sbb
aas
out
loopne
inc
or
test
add
fstpl
shlb
movsl
and
sbb
mov
aaa
fidivs
jno
sub
adc
filds
push
pop
jo
iret
adc
add
mov
jl
push
dec
xchg
loopne
xor
inc
sub
xchg
bound
mov
ja
add
add
test
icebp
jge
pop
mov
clc
push
test
repz
adc
or
push
fsubl
xchg
rcrl
jno
in
mov
and
or
sbb
sub
aas
jns
mov
out
mov
or
sub
stos
mov
pop
push
inc
inc
es
scas
cmovb
ja
test
sbb
sti
fisubl
or
or
sub
stc
xor
push
sub
mov
sti
cmp
jmp
es
jecxz
shrb
and
adc
out
sbbb
pop
sarl
xrelease
push
add
fcompl
dec
xor
xor
js
add
inc
push
loop
and
and
imul
fidivrs
nop
jmp
popf
mov
dec
loop
dec
lea
es
add
popa
in
inc
ljmp
xchg
or
mov
sub
jno
aas
not
dec
or
or
clc
pop
pusha
inc
fs
inc
pop
pop
add
out
repz
mov
test
aas
in
divb
add
add
sarb
rcrb
nop
popa
add
out
sbb
cltd
dec
lods
mov
inc
sub
pop
sub
incl
sub
cmp
faddl
std
rolb
push
or
jmp
xor
and
nop
adc
lret
roll
dec
loop
dec
lea
inc
or
push
mov
repnz
add
inc
xor
fnstcw
std
push
inc
mov
add
add
pop
push
push
mov
add
or
xchg
add
rol
cmp
js
je
popf
js
fs
incl
loopne
xor
popa
stc
pop
jnp
in
adcb
lock
test
ljmp
mov
push
push
shl
add
or
or
popa
sub
nop
sahf
sub
arpl
clc
push
scas
add
pop
or
jle
add
shrb
dec
push
mov
push
cmp
loop
ja
pop
inc
fiaddl
aas
popf
mov
int
mov
jp
mov
repz
scas
fdivs
insl
out
clc
add
jbe
and
and
add
sub
add
xchg
mov
das
xor
sahf
pop
popa
and
das
test
jle
pusha
nop
xchg
js
xor
adc
call
fcom
lea
jb
shl
mov
les
in
xchg
sahf
roll
lock
inc
neg
cs
lret
jle
clc
or
inc
imul
andl
out
rcll
dec
push
cmp
clc
iret
xchg
xor
pop
add
pusha
hlt
pop
popf
loopne
cmp
popf
cmpsl
jg
ret
jecxz
popf
adc
push
push
adcb
push
dec
bound
jmp
ret
cmpsb
push
mov
nop
test
inc
insl
xchg
test
or
xchg
ljmp
aas
sti
inc
lock
pop
dec
sub
pusha
xor
adc
mov
jmp
ret
stos
das
dec
push
add
pop
in
pop
sbb
push
iret
call
shlb
push
fdivrl
add
inc
mov
or
flds
addr16
pop
cli
mov
jg
gs
mov
repnz
js
mov
lds
cwtl
xor
sbb
popa
js
inc
push
add
jnp
adcl
or
pop
and
neg
inc
add
or
sub
sbb
pop
fsubs
js
push
pop
add
jl
rol
das
xchg
jmp
ret
add
mov
add
shrl
or
and
jg
aas
aad
jg
mov
daa
sub
or
inc
adc
das
pop
inc
aam
fldl
rclb
jmp
push
or
filds
mov
enter
ljmp
enter
sub
mov
sbb
out
ror
shr
xchg
adc
in
sub
mov
dec
aad
daa
xor
add
xlat
clc
jmp
mov
sub
pop
arpl
rcr
sarl
lcall
or
clc
pop
dec
lcall
sub
cli
push
fidivs
mov
shll
or
mov
mov
out
add
jmp
mov
leave
pop
and
in
scas
or
or
enter
leave
xchg
fisttps
fistpll
lods
dec
dec
aam
je
pop
mov
cmpsl
les
testl
add
jmp
mov
lcall
sub
iret
push
mov
outsl
repnz
pop
mov
mov
adc
xor
mov
add
test
push
rcrl
sub
adc
jae
add
mov
rorb
dec
lods
pop
push
fsubrs
and
ljmp
adc
dec
icebp
push
shr
mov
add
addr16
xor
mov
jmp
outsb
add
pusha
mov
cs
daa
sub
adc
push
incb
jmp
mov
mov
xchg
in
mov
pop
testl
push
mov
iret
fwait
pop
cmpb
sbb
adc
nop
sbb
pop
inc
lret
es
or
sub
push
movl
in
jo
inc
cltd
mov
scas
testl
inc
dec
ljmp
test
add
cli
sub
dec
in
lret
sub
outsb
syscall
xor
imull
or
pop
ja
in
xor
adc
jle
ret
inc
pop
outsl
rolb
popf
call
xor
push
leave
divb
adcl
pop
in
pop
mov
and
ljmp
jae
cwtl
push
jmp
sbb
dec
pop
mov
cmpl
daa
ja
sbb
pop
pop
gs
in
jo
or
add
and
rorb
dec
xor
loope
repnz
orl
sbb
imul
loop
cld
jb
shr
cmp
ud2
test
loope
icebp
mov
or
adc
loopne
mov
jg
scas
loop
dec
jp
add
idivl
shlb
fwait
sub
and
pop
inc
fidivl
lds
sub
push
shl
shll
and
mov
add
pop
sub
jbe
dec
clc
int3
mov
je
lret
or
push
pop
cli
imul
push
push
push
pop
std
push
jmp
and
cmp
adc
mov
loop
ffreep
dec
push
jl
pop
jne
inc
jmp
ret
cmpsl
and
mov
dec
and
fcomps
cmp
nop
pop
and
sbb
in
sub
inc
dec
das
nop
jno
jno
pusha
adc
aas
stos
or
pop
inc
pop
data16
adc
mov
pop
cmpsl
adc
cmp
imul
insl
and
push
pop
not
add
sbb
jne
xchg
add
faddl
xor
add
and
push
int
int3
mov
ds
mov
lahf
dec
add
pop
out
les
mov
popf
add
and
xchg
jns
rcll
cmp
inc
or
dec
jmp
sub
in
hlt
mov
clc
adc
mov
repnz
test
rorb
mull
or
ljmp
push
dec
sbb
push
or
add
dec
cmp
lock
push
daa
aad
sub
inc
adc
pop
ljmp
out
seto
paddsb
repnz
jne
mov
xor
je
push
cltd
mov
inc
add
or
sub
jg
jecxz
pop
push
push
nop
inc
dec
push
lret
add
test
test
test
dec
inc
cld
inc
or
rorb
ds
or
inc
lret
push
repnz
jl
lahf
pop
sbb
rclb
sbb
insb
and
and
inc
or
mov
sahf
and
lods
add
push
insb
popf
mov
xor
ret
popa
add
loopne
or
add
adc
and
sbb
das
or
fmulp
pop
adcb
or
xchg
mov
fsubrl
inc
iret
cmp
xor
or
add
sbb
test
add
add
add
adc
pop
adc
adc
adc
popa
adc
adc
adc
adc
sbb
inc
add
test
xchg
popf
add
mov
mov
cli
sbb
adc
movsl
adc
adc
adc
test
mov
xor
xor
fisttps
cmp
lods
mov
out
or
or
jl
aaa
inc
or
push
or
mov
fisttpl
inc
pop
test
cmp
icebp
mov
inc
dec
xchg
or
or
repz
add
xchg
add
adc
sub
jns
mov
and
push
pop
les
push
testl
nop
outsb
test
and
mov
or
or
aas
or
data16
mov
inc
pop
dec
inc
lods
lret
aaa
incl
fdivrp
mov
ja
sbb
in
popf
xor
cmp
mov
icebp
inc
or
mov
out
arpl
and
mov
inc
pextrw
inc
lea
jnp
test
lcall
sbb
xor
cld
popf
add
add
xchg
fdivrs
mov
shlb
dec
xchg
test
fwait
jp
in
test
test
out
and
and
js
mov
loop
add
add
ds
popa
pushf
fwait
les
or
les
lods
add
addl
lcall
sahf
ja
arpl
or
movsl
imul
xorb
xorb
addb
add
pop
adc
push
adc
dec
adc
aaa
sub
rclb
inc
inc
adc
test
out
adcl
dec
daa
add
add
lods
push
jne
sbb
test
std
test
pop
add
dec
sub
stos
mov
xchg
call
xchg
jecxz
and
cmp
pop
jge
test
xchg
imul
aas
ret
xchg
push
arpl
pop
push
ffree
call
add
fistl
cmp
push
cmp
shl
outsb
das
dec
and
inc
inc
into
or
add
jmp
add
not
push
cmp
xor
rcll
xor
xor
scas
pusha
push
popa
mov
push
cmp
ljmp
arpl
shll
jmp
roll
cmp
test
lret
inc
jge
add
push
sbb
or
add
dec
push
push
and
sub
movsl
jge
inc
add
loopne
movsb
add
neg
push
mov
in
jmp
push
incb
jmp
psrlw
or
jp
call
sub
and
mov
stc
aaa
xchg
push
test
shrl
cmpsb
cmc
js
sbbb
adc
cmc
fnstcw
add
sbb
fcoml
push
inc
imul
scas
lcall
or
or
lmsw
adcb
rorb
xchg
aam
sbb
jae
add
pusha
mov
push
pusha
xchg
or
sub
jmp
jae
mov
aaa
cs
xchg
lahf
add
sbb
test
push
add
bound
pop
push
jb
ljmp
push
cmpsb
mov
xor
and
in
cwtl
push
mov
push
mov
and
popa
movsl
push
negl
xlat
sbb
pop
mov
ja
lds
jnp
or
inc
scas
xchg
sbb
fs
aad
cmp
adc
mov
or
add
in
cmpsb
add
xor
jmp
mov
or
testb
dec
pmullw
pop
stc
ljmp
ret
je
pop
jns
mov
jge
adc
lcallw
pop
cli
mov
mov
mov
and
rolb
adc
inc
lret
lods
push
jle
rcll
adc
xchg
pop
xor
push
mov
ds
push
testb
and
lret
and
pop
std
repz
daa
push
sahf
add
fdivl
negl
mov
lret
push
inc
fsubrl
hlt
push
mov
ss
int
clc
xchg
pushf
and
cmp
push
pop
mov
notl
dec
pop
dec
sub
sub
movsb
mov
cmp
ljmp
push
pop
or
mov
mov
mov
imul
cmpsb
add
push
sub
sbb
dec
not
adc
push
mov
adc
inc
shlb
xor
pop
push
xor
mov
clc
loope
mov
xor
icebp
or
cltd
imul
cmp
sub
adc
in
mov
aas
jb
xor
sub
push
xor
add
les
push
pop
sub
adc
xorb
push
pop
je
add
inc
and
add
dec
mov
push
lahf
xor
pop
push
push
lahf
add
adc
adc
stc
dec
mov
fs
adc
in
movsl
add
mov
add
out
dec
mov
pop
xchg
jmp
mov
xchg
or
or
xor
fsubs
insl
dec
pop
mov
mov
cld
mov
ja
add
adc
inc
mov
mov
xchg
cvtpi2ps
and
jge
jg
incb
jmp
fcoml
add
jmp
jg
sub
push
xor
ret
clc
mov
or
cltd
cmp
cmp
xor
fmull
mov
jg
add
jecxz
pop
or
jno
xchg
mov
sbb
jmp
inc
imul
out
cmp
cmp
adc
jmp
loopne
dec
ror
sbb
jg
and
cmpl
add
fldl2t
stos
popf
jb
push
test
dec
and
lret
jmp
inc
neg
shrb
mov
pop
cwtl
rclb
inc
adc
into
push
xor
jmp
int
inc
xchg
mov
sub
ret
mov
outsb
push
aam
adc
add
sarb
mov
leave
xlat
jmp
or
lds
scas
pop
cli
adc
ljmp
jmp
push
jge
pop
cmpsl
testb
jo
xchg
cltd
nop
inc
push
cld
xchg
jmp
cli
repz
in
mov
pusha
insb
adc
gs
add
xor
arpl
hlt
and
push
mov
cmpb
leave
add
pushf
mov
mov
cmp
nop
xchg
rclb
not
aaa
push
inc
js
add
push
mov
lret
imul
xchg
mov
outsb
adc
fs
aaa
xor
sbb
adc
cmp
add
or
jno
pop
test
mov
imul
lock
push
pop
push
std
jns
cmp
insl
add
mov
das
neg
lea
movsl
add
and
daa
nop
pusha
mov
orb
sub
or
mov
sub
xor
lock
inc
sub
imul
mov
xor
add
inc
repnz
xchg
fs
jno
enter
outsl
jae
cmovae
das
pop
inc
push
mov
add
sub
push
shl
or
sar
pop
pop
pop
mov
mov
push
xchg
push
push
jp
cld
idivb
imul
mov
dec
jecxz
dec
loop
enter
scas
test
idiv
add
push
fadd
sub
and
dec
std
ffreep
xor
jne
jp
and
push
mov
inc
add
jmp
test
mov
and
and
jmp
out
lods
push
cmpb
or
push
inc
es
mov
cmc
pop
dec
aad
and
jb
nop
sbb
sbb
xchg
and
test
stc
jp
cmpsl
mov
ret
fwait
add
test
xchg
add
mov
inc
xor
or
cmp
xchg
jnp
or
lahf
fistps
int3
push
xchg
std
js
out
add
push
xchg
pop
pusha
sub
data16
inc
mov
outsb
daa
pop
push
adcl
stos
push
pop
out
rol
mov
jo
push
jle
push
jmp
xorb
cltd
pcmpgtb
testb
and
lock
jp
shl
shrb
push
push
insb
lods
mov
out
pop
out
mov
clc
mov
js
in
adc
fcomps
pop
xor
dec
in
lock
xchg
dec
cli
out
pusha
dec
mov
rolb
add
cmc
inc
repz
cmpsl
movaps
mov
shl
repz
orb
leave
cld
ss
inc
jg
pop
and
aas
cmpsl
inc
mov
mov
nop
mov
sti
mov
inc
and
jns
test
mov
das
mov
mov
in
out
loop
xchg
stos
mov
pop
mov
mov
xchg
movsb
and
cmp
fnstenv
mov
xchg
sbb
imul
xchg
out
lret
adcb
pop
test
icebp
mov
das
fldcw
adc
push
sub
inc
add
sbb
cli
sbb
add
imul
aaa
fs
cs
or
fadds
pop
push
das
add
addr16
inc
xchg
cli
movsb
orl
imul
lock
dec
clc
mov
xchg
cmpsl
jne
shlb
movsl
incb
add
inc
pusha
and
sub
jl
and
mov
pop
jmp
dec
mov
dec
xchg
xor
xor
cmp
sbb
push
and
pushf
dec
push
cwtl
sub
js
inc
or
sbb
aam
sub
or
test
es
sarb
inc
lahf
repz
pop
inc
inc
push
stos
cmp
mov
jmp
mov
sti
cwtl
mov
pop
daa
mov
push
adc
jmp
mov
outsb
sarb
sub
and
fildll
enter
sub
jno
push
pop
push
add
push
sbb
push
in
ret
dec
test
outsb
bnd
lahf
pop
js
pusha
mov
out
pop
or
jge
pop
jnp
rcrl
fisubrl
aaa
movsl
inc
mov
scas
addr16
in
dec
movsb
pop
rcrb
or
sbb
jae
push
mov
clc
iret
insb
push
mov
inc
jmp
xchg
add
push
inc
push
jmp
icebp
mov
aas
imul
dec
out
xchg
cli
iret
sbb
dec
pop
flds
addl
adc
aaa
pop
add
scas
loopne
push
mov
ret
shlb
fildll
sbb
dec
pop
xchg
clc
daa
xor
jmp
pop
pop
or
add
or
aas
movsb
loop
adc
scas
mov
leave
inc
push
rcll
xchg
add
push
add
lret
dec
stc
jl
ret
add
lods
sbb
icebp
add
and
xor
rcrb
shl
or
xor
push
xlat
ja
dec
sbb
xor
movsb
add
out
ss
xchg
mov
outsl
fisubrl
cld
cmp
hlt
xor
in
and
leave
notl
jl
sub
icebp
adc
jnp
and
cmpsb
mov
imul
pop
jg
mov
js
pop
clc
mov
out
or
jns
pop
and
outsl
dec
pop
es
pop
jl
lods
scas
movsb
rolb
jmp
aaa
repnz
xchg
int3
frstor
gs
fiadds
popa
popf
push
je
adc
pusha
orb
nop
dec
hlt
push
pop
jmp
clc
and
mov
push
ret
mov
cmp
xorb
pop
nop
lds
push
popf
push
xor
or
and
in
insb
out
sub
mov
adc
dec
or
dec
stos
mov
push
xchg
daa
ret
mov
bound
push
cs
adc
pop
push
nop
and
notb
pop
and
daa
cli
jmp
cwtl
pop
int3
jp
bnd
add
iret
push
pop
pusha
jle
push
cmpb
xchg
not
popf
adc
pop
sbb
rcr
dec
and
hlt
mov
sub
test
adc
cli
adc
mov
push
xchg
mov
enter
jb
out
mov
addr16
ds
pusha
adc
mov
adc
mov
xor
jmp
xchg
test
call
xor
lea
imul
pop
xchg
adc
dec
shll
mov
xlat
xor
xchg
jl
jge
pop
xor
mov
add
andl
sub
mov
push
mov
add
pop
jge
add
add
cld
dec
sti
pop
add
mov
addb
loope
push
cmp
int
lock
inc
aaa
jmp
or
pop
pop
or
push
adc
push
adc
maxps
push
jmp
repnz
mov
push
movsl
xorb
dec
fcomps
inc
add
dec
loop
add
pop
jmp
and
scas
sub
dec
stos
cmp
pop
cmp
fcomi
or
adc
sbb
std
ret
and
lahf
inc
sub
xor
mov
push
call
sub
imul
aas
nop
pop
ss
popf
pop
or
sahf
xor
pusha
cwtl
std
cmp
push
nop
cltd
pusha
pop
scas
in
mov
jg
data16
jp
pop
xor
adc
add
push
ds
cs
repz
bound
fcoml
xchg
test
aaa
in
adcb
cmp
adc
xchg
jmp
icebp
dec
inc
jmp
jb
push
pop
or
mov
pop
inc
stos
pop
inc
mov
add
popa
rcll
mov
sbb
dec
shl
or
add
sbb
pop
push
jle
or
rcl
pop
or
cli
cld
scas
out
outsl
sbb
outsl
mov
dec
add
out
jbe
add
jo
xchg
outsb
dec
adc
jae
mov
or
xchg
push
popa
dec
hlt
or
or
adcb
xor
push
daa
test
inc
in
loop
imul
jnp
add
push
jge
in
mov
loopne
cltd
ljmp
pop
scas
mov
daa
adc
xchg
jne
cmc
in
clc
cmp
call
xchg
dec
push
add
ror
flds
jg
xor
out
loope
insb
roll
fimull
dec
push
stos
adc
add
xchg
xchg
neg
notl
cmp
xor
sbb
fs
pop
xor
das
lea
xchg
jle
jl
mov
in
mov
hlt
lret
xorl
and
mov
or
xor
inc
sub
call
aad
sbb
or
jl
push
inc
xor
mov
out
nop
test
lcall
push
sahf
push
jmp
push
push
das
push
test
je
lea
cltd
mov
fdivrs
jle
push
xor
ret
filds
jnp
jmp
fcomps
arpl
push
mov
push
lretw
or
imul
adc
sbb
add
lret
push
push
mov
xor
adc
and
movsl
dec
push
mov
mov
cs
mov
pop
hlt
stos
mov
sub
mov
pop
sbb
dec
cmp
into
call
or
jnp
cli
rorl
xor
mov
lds
mov
jbe
mov
adc
cmp
mov
sub
aad
out
or
mov
test
movsl
inc
mov
or
imul
stmxcsr
test
pop
testb
adc
jg
stos
add
jmp
xchg
jp
es
and
cmp
mov
push
push
or
out
mov
lret
incb
inc
filds
or
mov
push
push
out
fiadds
xor
dec
add
stos
das
mov
icebp
jmp
scas
sbb
add
inc
inc
lahf
jg
rorb
stos
jno
jmp
xchg
mov
adc
push
and
pushf
leave
sti
mov
repnz
mul
or
hlt
std
pop
push
xrelease
mov
mov
inc
inc
pop
decb
xor
dec
dec
fbstp
jge
jnp
or
adc
adc
xor
cmp
pop
xor
xchg
lret
imul
mov
pop
ljmp
cmpsl
add
das
jne
pop
add
add
and
push
jecxz
aad
mov
shlb
sbb
pusha
addl
cwtl
rcrl
jle
mov
xor
push
insl
testl
mov
inc
pop
jnp
jge
mov
mov
shlb
add
sub
xorb
ja
inc
clc
inc
leave
mov
aad
jmp
push
pop
shl
xchg
add
dec
pusha
jmp
mov
push
pop
notl
repnz
pop
cwtl
outsl
and
or
cmp
xor
pop
jp
repnz
pushf
add
or
sbb
sahf
push
sbb
xchg
adc
mov
call
pop
cli
mov
shrl
icebp
mov
pop
mov
xchg
or
jp
xchg
xor
test
and
or
stos
xor
icebp
pop
mov
cmp
dec
and
mov
jmp
aas
into
sub
lds
adc
cmp
sbb
pop
mov
adc
and
out
mov
pop
cmpb
js
pop
add
and
adc
pusha
outsl
add
sub
sub
dec
jbe
add
jnp
cs
aam
das
das
ficoms
pop
dec
and
jb
lret
jmp
sub
pop
mov
xchg
aam
xchg
push
das
or
push
and
push
xor
push
mov
nop
adc
sbb
int
push
mov
adc
fs
scas
cmp
adc
xor
sub
lret
dec
push
mov
push
push
mov
inc
rcrl
lret
jmp
and
sub
pop
aas
inc
das
cmc
pop
in
push
sarl
ja
sti
add
add
pop
call
xchg
push
push
andl
or
add
inc
pop
jp
jmp
or
cwtl
inc
jmp
orb
fwait
jne
mov
jbe
sub
je
push
mov
pop
dec
push
mov
or
mov
dec
fdivrl
ds
push
test
add
jbe
push
fwait
testb
loopne
jmp
loope
popa
pop
call
jns
in
push
mov
xchg
pop
icebp
dec
xchg
push
scas
pop
pop
mov
movsb
add
pop
add
mov
pop
jecxz
add
sbb
roll
jmp
mov
or
insl
pop
mov
push
push
push
aad
mov
test
xor
andl
push
mov
test
incl
mov
jg
push
dec
stos
and
fadds
pop
test
inc
cmp
movsb
push
dec
push
xchg
sub
add
not
jp
ds
mov
mov
add
sbbl
push
cwtl
inc
xor
and
jmp
xor
xor
addr16
and
mov
push
sub
fldl
int3
aaa
mov
cmp
das
stc
cld
push
inc
icebp
inc
into
or
add
pop
cs
nop
xchg
or
pop
sub
sbb
and
jmp
in
stc
push
push
pushf
cwtl
jae
aam
inc
adc
inc
jl
sub
jae
test
adc
jecxz
mov
or
call
mov
popa
xor
mov
jecxz
mov
gs
push
cltd
lods
aad
mov
jmp
aad
ljmp
fldt
jge
inc
mov
dec
in
ret
adc
dec
pop
mov
adc
xchg
add
sub
sub
mov
movsl
pop
lock
imul
sbb
sbb
push
mov
pop
pop
test
cld
push
mov
add
inc
jle
adc
cmc
pop
xchg
aad
mov
dec
xlat
js
das
dec
stos
sub
roll
inc
pop
lahf
jmp
jae
sub
orl
fsubs
push
or
and
jmp
adcl
fnsave
les
or
inc
fs
add
cmovns
jmp
ds
add
dec
push
dec
movhps
jo
xchg
pop
mov
sub
sbb
xor
xchg
hlt
movsb
sbb
leave
jl
shll
fsubs
sarb
sub
loop
bound
sahf
cs
lret
mov
rolb
das
lret
cmc
shrb
or
inc
jmp
ret
jge
lock
je
pop
decl
push
push
jmp
mov
shr
jge
loopne
movq2dq
cmp
sub
sub
mov
hlt
mov
clc
dec
cmp
inc
push
mov
fadd
in
movntps
das
aas
mov
ficoms
xchg
imull
or
cmp
cli
orb
nop
ja
sbb
aad
fdivrl
mov
sub
dec
cmp
add
dec
and
add
add
je
sub
cld
sbb
inc
mov
jne
test
leave
xor
test
jnp
repz
or
out
sub
inc
test
push
shl
dec
adc
xor
iret
in
cmp
push
xchg
rorl
cmp
adc
je
mov
xchg
jmp
lock
pop
xor
xor
adc
mov
jmp
ljmp
add
or
sub
or
adc
add
nop
shlb
out
lcall
test
sub
nop
inc
or
cmp
ret
addl
sub
cwtl
inc
inc
add
loopne
arpl
int3
jp
mov
jmp
push
adc
insb
cltd
push
ja
add
jne
xchg
je
inc
adc
dec
mov
gs
mov
sar
xor
push
or
shr
fdivs
jbe
cwtl
fsubrs
enter
dec
dec
push
jne
bound
mov
loope
imul
shr
mov
cld
adcl
popf
bound
ja
pop
leave
fcompl
mov
sbb
dec
pop
mov
pop
mov
test
mov
pop
cmp
inc
rclb
add
lahf
movsl
daa
mov
adc
inc
add
cmp
shr
stos
in
adc
cli
lods
mov
push
lret
rcl
mov
jne
push
cld
nop
stc
shll
nop
fcmovnbe
jmp
or
mov
add
and
movsb
push
push
lods
add
stc
pop
mov
and
shll
add
lcall
cmp
das
xchg
pop
xchg
xor
rcrl
ret
pop
inc
xlat
repnz
inc
cmc
cmp
jge
pop
int
mov
icebp
xchg
repz
jge
cmp
pop
inc
add
hlt
adc
into
pop
xchg
insb
add
add
loop
push
fs
push
push
stc
fsub
add
or
add
or
jnp
ret
xchg
cwtl
pop
mov
push
icebp
ret
shrb
push
lods
lret
push
sub
dec
sub
sub
pop
jle
fcmovb
mov
pop
push
or
movsb
hlt
bound
pop
adc
jo
daa
or
sbb
aaa
inc
jmp
and
pop
icebp
notl
cmp
fiadds
mov
cmpsb
mov
mov
adc
lods
fs
or
cs
or
mov
lods
sbb
jo
in
pop
loop
add
aaa
popf
cmp
dec
ja
xchg
in
pop
push
xor
js
pop
fwait
mov
or
and
cmp
fimuls
imul
and
and
add
xlat
fimull
inc
dec
jmp
repz
adc
add
cmp
fcom
pop
jnp
addr16
stc
dec
xchg
pop
sub
pop
sub
push
ds
push
ret
inc
fwait
rcll
shrb
cmpb
idivb
bound
pop
sbb
xor
lret
pop
jmp
divl
cli
lods
xchg
dec
cld
adc
dec
mov
xchg
insl
fiadds
out
xor
adc
jecxz
or
pop
push
add
dec
xchg
stc
data16
cmp
mov
push
pushf
pop
cs
jle
lock
jmp
push
movsb
jp
scas
mulb
add
loope
sub
mov
mov
imul
pop
jmp
push
mov
jmp
mov
ds
push
mov
mov
mov
mov
loope
aas
out
xchg
enter
out
xor
push
pop
popf
xchg
adc
cmp
pop
popa
scas
adc
add
mov
divb
scas
pusha
sbb
or
pusha
mov
add
or
incl
xchg
jl
push
hlt
adc
push
popf
sub
ja
push
rolb
push
jmp
jo
xor
lret
mov
lahf
or
jle
inc
push
and
scas
insl
jp
testl
cmpb
xlat
sub
shlb
push
mov
rcll
fcomps
or
jo
mov
sbb
test
mov
popa
aam
cmp
sbb
mov
lods
popf
sub
cmp
int3
shrb
push
out
add
xor
jbe
sub
add
mov
pop
jmp
jmp
dec
mov
push
fld
loop
inc
call
adc
dec
aas
xor
rclb
inc
pop
fldenv
sub
push
xor
push
repz
xchg
adc
or
xlat
inc
addb
jmp
bound
inc
dec
mov
mov
outsb
pop
and
adc
mov
push
xor
sbb
push
leave
add
cmp
addl
out
push
fwait
lcall
sbb
dec
or
push
hlt
stc
pop
pop
jge
jns
stos
sbb
xchg
sbb
aam
ljmp
xchg
inc
clc
inc
push
out
or
std
push
xor
ficoml
aas
and
dec
sub
pusha
test
or
jbe
enter
pop
add
sbb
inc
arpl
mov
clc
pop
loopne
adc
pop
stos
mov
arpl
mov
add
pop
sub
bound
rorl
push
iret
fsubrs
imul
dec
outsb
dec
addb
pop
rcrb
addl
add
arpl
gs
and
mov
xor
cmp
fs
pop
add
dec
dec
aas
outsb
mov
into
or
dec
adc
mov
sub
mov
xor
mov
mov
push
xor
fs
xor
mov
push
cmpsb
cmp
mov
xchg
push
add
add
push
pop
push
pusha
sub
jmp
in
cmp
add
push
push
scas
fisubrs
or
imul
push
push
jmp
and
add
out
mov
pusha
sbb
ret
push
xlat
dec
mov
nop
push
ja
movsl
inc
les
lods
or
mov
rorl
out
pop
or
fsubrl
ss
lahf
mov
or
pop
popf
iret
pop
push
jmp
lret
xchg
insl
fisttps
fbstp
out
or
xor
aas
in
mov
jmp
leave
aaa
aam
push
xorb
jmp
repz
cmp
in
arpl
ret
push
pop
cmp
pop
dec
clc
and
sarl
cmpsl
fisttpll
pop
xchg
adcb
test
fwait
cmpsl
sbb
push
dec
outsb
orl
push
ret
sub
testl
out
jno
int3
dec
lea
xor
xchg
ror
or
or
push
push
jmp
test
dec
mov
sbb
fnstsw
bound
add
pop
push
stos
dec
imul
inc
jmp
stos
mov
cmp
cmp
adc
jmp
adc
jne
arpl
adc
and
push
mov
pop
push
or
into
lock
mov
cld
dec
loop
popf
push
or
js
shll
cmpsb
fs
xorl
push
add
fs
ret
frstor
pop
jmp
sub
push
add
icebp
adc
mov
push
sub
shrb
jge
lds
test
push
jmp
xor
inc
and
pop
push
mov
add
push
sahf
mov
jnp
scas
cld
test
push
mov
ds
cmp
loope
pop
jmp
clc
sbb
fdivl
mov
xor
mov
iret
push
or
xor
jle
insl
mov
sub
arpl
shl
and
cs
cld
mov
js
push
jmp
stos
pushf
xlat
loopne
pop
dec
mov
adc
clc
mov
hlt
push
loop
in
push
out
add
popa
mov
fidivs
imul
pop
push
pop
add
std
adc
sti
inc
cltd
mov
cmp
xor
push
bnd
adc
repnz
iret
jns
not
cmp
jle
scas
mov
sub
or
cmp
jno
add
push
aam
jae
or
or
test
or
mov
add
add
insl
into
call
movsl
clc
imul
lock
sub
cmpsl
xchg
cmp
ret
or
xor
test
mov
daa
cmpsb
adc
pushf
imul
jo
test
jmp
fimull
stos
adc
aad
loope
outsb
xlat
push
push
lret
push
add
add
sub
pop
pop
inc
adc
jmp
rorb
repnz
mov
cltd
or
out
push
xor
pop
sbb
inc
ror
mov
dec
add
ds
and
fstps
jns
dec
pop
xchg
sub
cs
cmpb
das
jb
sti
inc
dec
xor
pop
or
sub
adc
neg
push
inc
push
inc
ret
jl
inc
clc
push
gs
loope
mov
push
fmuls
jmp
pop
movsb
in
pop
push
out
sahf
xor
cmp
enter
nop
mov
and
mov
pop
sub
sub
enter
pop
repz
add
jecxz
jmp
test
mov
lock
push
push
pusha
adc
es
sbb
inc
in
pop
das
xchg
xor
test
xor
imul
jmp
lcall
and
add
sub
pop
sar
in
xchg
or
cmp
adc
sbb
or
or
jb
push
push
push
pop
add
fisubrs
jae
orb
aad
mov
jne
lahf
inc
xrelease
pop
cld
push
add
jecxz
lcall
jle
sbb
outsl
xor
call
mov
ret
jmp
push
push
mov
mulb
mov
jl
cmp
xchg
jo
out
push
jge
mov
or
mov
loopne
lods
mov
decb
fidivs
add
aaa
xor
sbb
pop
pop
lods
cwtl
add
dec
mov
lret
cmp
add
ss
jnp
or
sub
mov
std
shr
cmp
push
jle
in
xchg
cmpsb
mov
fsubs
subb
inc
jle
lock
cmpsb
xlat
mov
call
ret
mov
outsb
cwtl
icebp
push
add
jmp
aam
rclb
adc
add
mov
add
lahf
jmp
ljmp
lock
popa
push
test
push
lods
addr16
mov
leave
inc
icebp
insb
cs
mov
or
jge
push
insb
dec
fs
add
add
xor
push
jmp
mov
push
push
rorl
jne
outsb
imul
xor
jg
mov
ja
dec
pop
dec
push
and
sub
push
mov
les
pop
in
les
mov
adc
mov
push
fistl
std
mov
add
cld
xchg
mov
xor
sbb
add
sub
or
xchg
roll
leave
jae
sti
inc
aam
adc
xor
adc
jmp
adc
xor
xor
pop
xor
add
cmp
idiv
xchg
into
pusha
cld
popa
inc
jp
mov
call
daa
lds
inc
mov
pop
mov
mov
mov
adc
aas
aas
fistps
mov
insb
stos
sub
adc
mov
and
and
pop
cmpb
daa
test
push
xchg
add
push
fildll
mov
mov
lds
pop
mov
pop
xor
jo
add
pop
or
and
add
cwtl
into
add
push
cmpb
loop
out
dec
pop
mov
cmpb
int3
outsb
leave
cmc
add
ss
pop
idiv
sub
gs
or
scas
int3
add
add
ficomps
add
fadds
pop
movsb
jl
jmp
in
nop
test
xchg
cmp
push
jns
inc
div
ja
push
inc
es
sbb
sarl
or
aaa
int3
sub
jmp
roll
sbb
push
inc
lods
pop
mov
scas
ss
inc
xchg
scas
scas
stos
inc
call
loop
add
pop
cli
push
out
jg
and
enter
inc
inc
loopne
xchg
fmull
sub
or
icebp
lods
mov
jnp
and
syscall
inc
pop
jmp
iret
or
push
adc
pop
sub
stos
fdivl
orb
jae
or
clc
sarb
push
push
sub
lods
sub
repz
out
test
mov
push
cmp
xchg
mov
pop
xor
loope
int3
and
dec
adc
dec
inc
lret
movsb
and
adc
pop
xlat
pushf
jbe
std
ds
sti
add
pop
xchg
dec
xor
lret
addb
inc
inc
or
adc
mov
pop
insl
repz
xor
mov
push
jmp
add
rcll
pop
call
add
cs
or
inc
add
stc
and
loopne
leave
or
std
push
pop
cs
testb
xor
inc
xor
outsb
mov
xchg
push
inc
xchg
adc
xor
jmp
dec
jl
outsl
fucomp
mov
imul
pusha
aam
psrlq
mov
xchg
mov
or
repz
push
sbb
or
mov
jg
jmp
les
pop
pop
inc
lahf
jg
jbe
mov
jns
or
inc
and
pop
ja
jmp
push
adc
push
dec
adc
test
mov
stc
imul
pop
mov
and
mov
add
sti
notl
ljmp
js
cli
inc
daa
pop
xlat
dec
push
jo
sub
fiaddl
out
cmpsb
or
dec
mov
orb
push
data16
pop
daa
jne
push
jg
mov
or
fildll
out
pop
sub
ret
mov
mov
cli
or
popa
scas
popl
dec
in
lret
add
push
scas
dec
push
stos
lods
xor
in
cmp
xor
out
sub
sbbb
dec
into
imul
lcall
insb
out
inc
insl
int
and
lea
out
hlt
xchg
iret
mov
adc
sbb
add
shlb
push
sub
das
add
push
mov
outsl
rcrb
popa
sbb
je
dec
loopne
mov
pop
sub
adc
lock
or
jmp
loope
jecxz
clc
cmp
ljmp
pop
ret
jecxz
mov
mov
popf
hlt
imul
clc
add
imul
adc
cmp
movsl
mov
or
cld
jmp
movsb
sub
in
pop
std
es
add
not
xchg
jo
rorb
test
cmpsl
fcompl
adc
daa
jmp
vphaddubq
in
stos
dec
das
fldcw
mov
dec
aas
ja
repnz
sbbb
pop
xor
adc
and
popf
jg
add
jmp
pop
add
add
dec
movsl
out
push
push
mov
push
inc
mull
loopne
add
or
jmp
in
loop
add
push
sbb
add
hlt
das
mov
inc
addb
es
rorb
jmp
int
inc
cmp
jmp
loope
or
movsl
pusha
mov
pop
and
subb
push
add
cmp
inc
xor
dec
sahf
stos
push
neg
xlat
stos
push
outsl
pop
mov
call
in
jb
cs
mov
push
mov
in
adc
loop
xchg
dec
push
mov
inc
insb
sbb
fisttpll
repz
mov
mov
adc
sbb
sbb
xchg
xchg
rcr
jae
loope
xchg
inc
push
jmp
lds
xchg
insb
dec
rorl
adc
sub
xchg
bound
les
sub
push
lds
test
out
orl
shr
adc
dec
stc
pop
cmp
dec
pop
add
cmp
mov
test
push
push
mov
cmpb
jmp
push
push
push
loop
jmp
pushf
ss
lock
pop
arpl
push
jmp
in
cwtl
lds
jge
and
addr16
jbe
jecxz
jno
push
dec
enter
sub
add
mov
xchg
inc
jmp
mov
cld
adc
ffreep
xor
cmpsl
jg
loopne
aad
in
add
cmp
sbb
rclb
notl
dec
mov
punpckhbw
cmpb
and
pop
add
jne
push
fists
movsl
jnp
inc
leave
loop
pushf
jno
push
push
cld
jbe
stos
pop
or
mov
xchg
fistps
or
call
insb
pop
mov
mov
sbb
add
jmp
xchg
xor
jmp
jmp
fidivrl
rolb
or
dec
sbb
pop
fisttps
push
pop
nop
xlat
aas
bound
daa
inc
add
iret
addr16
mov
jae
pop
icebp
shlb
inc
insl
xor
mov
adc
or
inc
mov
adc
or
fistpl
in
sub
call
or
sbb
insb
arpl
dec
lret
xor
dec
adc
outsl
adc
or
pop
gs
fs
adc
std
dec
add
sub
loopne
ret
push
scas
pop
or
enter
jne
or
bound
pusha
jae
or
stos
add
lcall
shrl
xchg
adc
sbb
int3
xchg
ret
test
add
mov
pusha
jns
leave
jl
pop
push
or
faddl
pop
cld
int
movl
jb
in
sarb
lret
pop
jg
jg
sbb
jmp
sahf
push
push
xchg
xchg
sub
mov
sub
add
add
push
imul
xor
sbb
sub
shrb
or
push
rcrb
dec
jecxz
aam
cwtl
sub
and
pop
pop
xchg
outsb
cmpb
inc
cs
mov
pop
daa
push
cmp
xchg
jge
push
out
jp
cmp
dec
std
popa
add
rcr
jl
sbb
sbbb
aam
leave
fidivrs
mov
xchg
in
dec
imul
not
subb
call
ja
addr16
inc
mov
orb
push
stos
rcrb
inc
xor
cmp
pop
dec
add
cli
mov
add
pop
sub
sbb
lea
into
lret
push
adc
mov
dec
pushf
arpl
and
add
xor
cld
ficomps
cmpsl
jbe
and
mov
imul
add
data16
cmp
xchg
xor
jmp
mov
cmp
inc
subb
jmp
mov
pushf
adc
sbb
push
xchg
cld
mov
inc
dec
jns
lret
add
add
mov
pop
sub
fsubrl
add
jmp
stos
or
and
jo
mov
or
add
sub
and
jno
imul
push
out
push
or
jmp
xchg
imull
mov
test
ljmp
dec
mov
push
mov
push
test
sti
sub
js
mov
xchg
push
sti
xlat
mov
movsl
std
std
nop
mov
roll
sub
adc
mov
xor
into
jo
scas
dec
inc
adc
add
mov
arpl
cli
or
or
lret
data16
lsl
cmp
jne
js
push
std
pop
jmp
cmp
mov
or
jp
sbb
push
add
mov
or
das
fstps
adc
mov
je
mov
and
in
ss
sub
stc
test
jl
and
sarl
les
icebp
add
push
cwtl
inc
inc
stos
ja
and
push
sbb
scas
dec
sub
dec
rolb
and
outsl
mov
mov
lahf
cld
jecxz
mov
call
push
icebp
int3
ret
and
add
inc
pop
pop
pop
cmp
sbb
iret
push
lret
stc
sar
ljmp
pop
add
or
rcll
or
sbb
cmp
aas
add
inc
push
xchg
ja
lahf
dec
pop
mov
add
or
aad
sub
xor
jge
adc
pop
pushf
push
mov
add
pop
xor
lock
dec
mov
test
adc
cltd
push
cli
and
mov
mov
xlat
out
lods
shrb
sub
cmpl
push
aaa
adc
push
ds
sbb
pop
xor
mov
mov
lods
pusha
decl
push
ds
pop
xchg
pop
imul
pop
or
cmpsl
in
icebp
das
ret
sbb
or
shlb
bound
push
outsl
jp
push
incl
negl
into
push
xchg
dec
cwtl
mov
cmpsb
xor
loopne
data16
lock
jbe
into
xchg
mov
and
lret
jl
add
xor
adcb
mov
imul
ljmp
lret
daa
add
sti
cs
jnp
icebp
push
cmp
ss
add
jmp
out
lret
sub
and
ficoms
xchg
cwtl
test
push
mov
mov
push
push
rcll
arpl
mov
inc
sub
fisttps
dec
int3
je
add
sbb
mov
inc
test
add
push
jp
mov
ja
inc
push
or
cmp
fiadds
pop
xor
push
fiaddl
jle
jg
add
les
shlb
sub
adc
inc
shlb
stos
sbb
sub
or
inc
dec
loopne
gs
xchg
sub
mov
cmp
jmp
int
inc
imul
sbb
inc
mov
in
mov
std
mov
ret
cld
pop
cs
push
mov
cmp
loope
rorl
sbb
orl
jnp
xchg
pop
mov
loopne
fwait
or
push
mov
jne
fucomi
mov
repnz
rcrl
sub
popf
leave
and
jbe
push
pop
mov
xchg
sub
addr16
xchg
hlt
sub
dec
lea
jmp
into
repnz
sub
das
jmp
or
add
xchg
mov
xor
pusha
cwtl
mov
not
inc
mov
popf
inc
addb
ret
sub
loope
or
pop
pop
cs
rcrb
or
or
pop
sub
or
or
push
ret
jmp
out
cli
dec
pop
pop
mov
push
sahf
pop
dec
shll
call
lret
ret
shrb
and
cli
fcom
sub
or
in
cmc
cld
xor
imul
push
adc
sub
jae
push
das
hlt
push
and
pop
mov
and
push
push
or
bound
sub
repnz
out
shll
add
adc
add
sub
pop
mov
movntq
out
repz
rclb
xor
jmp
xchg
xchg
cli
sbb
std
int
cld
push
loope
outsb
add
aas
sub
add
sub
push
push
stos
jp,pn
pop
inc
int3
sahf
inc
pop
imul
mov
push
or
lret
arpl
out
cld
pop
mov
lock
cltd
icebp
mov
mov
rclb
xor
adc
xchg
mov
ja
pop
or
je
add
lcall
mov
mov
out
mov
add
dec
ds
gs
movb
pop
ds
pop
daa
pop
lods
dec
push
sub
mov
cmpb
test
sbb
mov
xorl
and
or
in
add
mov
sub
adc
add
jmp
xchg
cli
dec
fisubs
mov
icebp
lcall
icebp
call
add
adc
sbb
cltd
adc
rolb
push
ds
dec
sub
xor
scas
mov
scas
cmp
pop
bound
stos
add
xor
or
adc
pop
jmp
jmp
inc
inc
mov
or
pop
push
jmp
and
adc
sub
xor
or
pop
pop
sub
cmpps
or
test
xchg
pop
add
std
or
xor
sbb
icebp
lahf
inc
jo
es
cmp
bound
mov
mov
es
inc
popf
pop
xor
or
adc
in
les
out
and
adc
adc
pop
stc
pop
std
add
hlt
jecxz
or
sbb
adc
adc
push
lret
inc
mov
push
das
adc
push
mov
pop
dec
adc
call
pop
inc
xchg
fmuls
cmp
jp
jae
mov
adcb
cmc
sarb
rcrl
stos
sub
lret
les
loope
mov
fdivrp
pop
sbb
and
xchg
and
lods
xchg
cwtl
imul
mov
pushf
pop
cs
mov
adc
lahf
push
nop
mov
dec
adc
cmp
scas
mov
cmp
leave
pop
jle
sub
sub
ds
lahf
fmuls
dec
mov
clc
out
mov
call
rcll
pushf
ret
addr16
or
jecxz
imul
outsb
jns
loope,pt
pop
icebp
movsl
jmp
ret
addl
sub
sub
xchg
push
or
mov
mov
adc
sub
cmc
add
and
in
pop
insl
dec
or
jne
sbb
mov
mov
adc
jo
push
scas
sbbl
or
mov
cmpb
push
add
pop
sahf
xchg
out
lock
es
inc
xchg
adc
mov
mov
mov
cs
adc
push
test
lods
dec
or
pop
xchg
pop
or
mov
adc
shl
test
cmpsl
jnp
jmp
mov
scas
pmulhuw
push
cmc
or
outsl
sbb
or
imul
je
or
push
mull
enter
mov
iret
adc
mov
in
out
pop
stc
je
or
loopne
mov
dec
sbb
daa
mov
jge
push
imul
icebp
mov
call
adc
aam
shll
mov
enter
xor
hlt
lea
and
mov
rcll
or
sub
push
xorl
lods
daa
les
scas
fnstenv
inc
fdivs
jmp
push
inc
xchg
xchg
push
out
sbb
and
ret
cmp
xor
roll
mov
cmovae
fdiv
lahf
pusha
dec
cmc
push
add
inc
dec
inc
jmp
out
inc
push
iret
or
add
xchg
sub
push
pop
addb
aad
das
push
adc
jle
mov
push
or
or
mov
fucomip
in
insl
cs
cld
lea
cli
xor
xor
add
in
cmpsl
dec
push
popf
and
call
das
cld
add
lock
mov
sti
mov
jmp
push
mov
mov
cmp
jnp
fstpl
test
push
sahf
or
or
push
jecxz
or
push
push
pop
jne
xlat
or
adc
add
dec
xlat
push
hlt
mov
test
movsb
push
push
cltd
sbb
or
or
shrb
out
int
lods
and
or
cmp
mov
pop
add
add
fisttpll
xor
test
inc
jo
ljmp
mov
cmp
mov
xor
cmp
sub
push
loope
dec
mov
xor
cmp
and
je
mov
inc
sbb
pop
sub
sub
out
pop
enter
jbe
call
pop
mov
dec
adc
push
loope
mov
or
gs
xor
add
out
fstpl
jb
adc
out
xor
imul
mov
add
rcrb
dec
xchg
pop
jno
aas
mov
push
cwtl
scas
pop
pop
inc
adc
shrl
mov
or
mov
jo
pop
stos
pop
sub
ror
aaa
aad
xchg
jmp
push
leave
rcrb
lahf
push
andl
clc
sub
std
cmc
add
jecxz
repz
pop
mov
jl
jge
shlb
imul
mov
or
sub
jo
call
enter
movsb
int
ja
pop
sub
jp
pop
daa
pusha
call
je
xor
pop
in
cmpsb
and
fisubl
dec
adc
aaa
and
les
shl
sbb
mov
add
in
adc
sbb
xor
sub
cmp
push
mov
sbb
pop
das
jg
repnz
inc
add
loopne
jo
jg
loop
shlb
rclb
xchg
push
and
push
mov
jns
xorl
add
pop
push
pop
pop
push
push
nop
push
add
adc
outsb
fcomps
cmp
jo
lds
out
into
iret
dec
scas
lret
push
push
les
fdivrp
notl
mov
jmp
fisubs
dec
dec
cld
mov
jne
xor
mov
push
shr
adc
mov
out
or
pop
dec
xchg
inc
and
and
loopne
mov
push
and
cmp
jp
mov
adc
mov
jle
fistps
adc
fstl
loop
dec
mov
cmp
not
push
leave
and
sbb
adc
push
or
cwtl
loopne
scas
inc
adc
fistpl
test
dec
cld
inc
mov
addr16
xor
pop
incl
fidivl
out
mov
repz
xor
loope
imul
fistps
and
xorb
test
xchg
insb
loopne
push
pop
pop
fidivs
call
cmc
add
or
mov
cmpsb
mov
aaa
and
and
aaa
sub
sub
cmp
or
mov
and
push
imul
sub
pop
imul
fsubp
push
pop
add
cld
mov
jg
push
lock
mov
in
push
pop
bound
sbb
lea
jmp
out
cmpsb
testb
xor
jg
mov
fsts
jl
jae
xchg
xchg
movsl
mov
or
movsb
pop
jl
lcall
test
pop
push
mov
loop
insb
push
sub
cmp
shll
jb
jmp
roll
cmpsb
sub
jle
shlb
shll
mov
lret
and
jecxz
add
icebp
shrb
notl
push
pop
call
lcall
repnz
add
decl
adc
push
mov
cmp
inc
inc
stos
rcll
push
roll
mov
or
cmp
cmpb
sub
or
fwait
push
mov
nop
loop
mov
or
pusha
inc
sub
adc
or
xor
ljmp
push
mov
pop
mov
push
ret
lods
enter
out
jbe
xor
dec
inc
or
rcr
pop
cli
sub
inc
jge
adcb
clc
cmp
loope
sbbl
repz
pop
add
in
outsl
ret
jne
test
xchg
or
pop
add
inc
ss
fldl
adc
sahf
push
xor
shr
jl
divl
jnp
pop
out
add
stos
pop
pop
mov
shll
dec
mov
pusha
mov
outsb
adc
incl
jne
in
and
add
rcrb
xchg
nop
cmpsb
psrlq
test
jg
das
lock
pop
push
dec
int3
jl
push
jge
icebp
push
push
adc
add
push
ljmp
push
add
cwtl
ret
cmpb
out
or
mov
shll
pop
xchg
pop
loope
fwait
scas
mov
mov
xorl
and
push
push
pop
int
notl
pop
pop
or
shll
aas
jbe
js
jno
std
icebp
mov
arpl
decb
pop
test
out
cld
setb
mov
shll
addr16
pop
sbb
loope
add
and
jo
fdivs
xchg
xchg
decb
mov
clc
sbb
notl
cmc
jge
xorl
bound
inc
rclb
outsl
cmp
imul
scas
push
cmp
jo
bound
rclb
inc
orl
ds
sbb
cltd
adc
inc
cld
dec
mov
pop
std
pushf
mov
inc
xchg
lods
add
cmc
dec
mov
loop
pop
add
arpl
or
in
mov
popa
sbb
jg
or
xchg
repz
pop
push
dec
call
xchg
jo
cmp
fidivl
andl
fidivl
xchg
mov
lret
loop
pop
test
add
mov
out
mov
lahf
inc
dec
clc
repnz
popa
sub
testb
fidivrl
in
push
push
cmp
add
jle
xor
int3
rcrl
test
shr
sub
mov
adc
pusha
das
inc
inc
or
es
adc
mov
clc
pop
inc
cmpsl
or
pop
enter
out
rclb
inc
push
cmp
testl
sbb
xchg
mov
xchg
push
addr16
scas
cmc
mov
subb
loope
int
or
sbb
jecxz
out
mov
cmp
xchg
into
jo
push
add
jp
adc
jp
adc
sub
cmp
je
dec
mov
dec
lds
pop
call
xor
cmpsb
or
push
pop
inc
fcoml
push
adc
mov
jl
pop
inc
clc
xor
cmp
and
or
rorb
aad
inc
test
cmp
jmp
pop
xor
mov
push
inc
mov
xchg
xchg
or
push
push
lcall
mov
inc
stos
ret
and
push
insl
push
hlt
inc
pop
sub
push
cmp
cwtl
out
pop
xlat
xchg
pop
in
jle
fnstcw
xor
out
and
bound
and
insb
adcl
imul
pop
push
out
sbb
and
inc
dec
inc
dec
test
mov
adc
repz
mov
pop
loope
rorb
jp
push
test
add
movsl
stos
filds
push
push
mov
add
imul
xor
jg
ja
fstpl
cmpsl
add
adc
inc
popa
sbb
adc
jmp
xor
enter
mov
inc
dec
stos
lcall
aaa
push
push
or
mov
addl
push
mov
repz
lods
inc
push
xor
add
dec
mov
ret
dec
jle
or
dec
aas
pop
add
dec
loope
sub
clc
test
jno
and
push
enter
in
jmp
test
add
fadds
movsl
xchg
repz
jmp
cmp
dec
inc
test
das
lret
sbb
loop
ja
rcrl
mov
xchg
sbb
dec
in
in
pop
push
push
mov
mov
mov
pop
sahf
mov
push
leave
cmp
cmpsl
sub
or
lods
divb
and
sub
or
mov
mov
jp
inc
jae
cmp
and
jne
ljmp
jmp
xchg
or
mov
jecxz
sub
inc
xchg
mov
clc
pop
push
push
leave
pop
mov
pushf
push
popa
gs
pop
push
ret
stos
hlt
or
test
cmp
jne
int
xor
test
push
push
push
test
jae
and
or
jecxz
xchg
pop
ret
ljmp
pop
mov
xchg
js
jecxz
out
cltd
add
es
ret
ret
pop
pusha
ss
add
rcrb
sub
pop
jmp
ljmp
mov
sub
jmp
ret
push
std
sbb
dec
sbb
in
scas
gs
idivb
xchg
scas
cmp
enter
rorl
pop
cmp
pop
jmp
jae
out
cwtl
xlat
and
xchg
jmp
pusha
xchg
sub
or
pop
dec
inc
fwait
repz
push
or
mov
jle
dec
xchg
adc
shlb
or
in
or
mov
daa
pop
test
cld
fadds
mov
fiadds
andl
cmp
or
xchg
cmpsl
and
cs
inc
push
or
dec
and
ret
gs
ret
cmp
rorb
cmp
rorb
adcb
ljmp
sub
pop
test
adc
add
push
or
xor
mov
icebp
jmp
pop
cmpsl
cmp
fcom
roll
pop
loop
xchg
mov
mov
jmp
inc
test
pusha
test
inc
jle
aas
adc
rcll
insb
ret
or
jne
adc
mov
adc
aam
rcrl
out
dec
push
push
mov
jnp
and
mov
ror
roll
cmp
mov
push
in
push
mov
out
mov
sub
cmp
jge
xchg
xor
mov
in
add
lock
sub
push
aas
test
lock
cmc
aaa
cmp
popf
pop
aas
mov
mov
lods
and
imul
cli
mov
pop
out
adc
add
pop
cmp
test
xor
push
jmp
fistps
jae
push
pop
ljmp
jae
xor
jno
sbb
xchg
add
add
loope
adc
cmp
cmp
cmovae
pushf
into
push
es
jmp
jecxz
outsl
js
out
subl
cmpsb
cmpb
test
out
add
call
jno
lods
loop
push
dec
inc
movsl
xor
daa
sub
pop
fnsave
pop
push
add
sub
dec
dec
mov
adc
jmp
xor
xchg
dec
cmc
push
aaa
orl
je
add
loopne
pop
mov
mov
dec
xchg
mov
dec
and
xchg
sar
jbe
inc
negl
xor
push
mov
pop
mov
pop
neg
mov
clc
cli
cli
xchg
or
aad
mov
shlb
push
push
mov
jmp
jle
dec
iret
fs
stos
cmc
mov
and
and
pop
dec
and
cmp
push
and
shl
inc
or
insl
xlat
ja
fsub
lahf
push
ret
pushl
outsb
imul
or
fsubrs
dec
mov
or
into
pop
idivb
fdivrl
fs
inc
sbb
movsl
or
shrb
mov
sub
add
dec
arpl
push
xor
jmp
jno
add
pop
sarl
push
insb
mov
imul
adc
lahf
je
ret
fs
test
or
test
and
lds
add
mov
loopne
xor
sub
scas
das
cmp
and
pop
add
push
xchg
add
adc
mov
sbb
pop
push
lods
in
dec
adc
push
rclb
mov
adcl
jl
mov
jmp
nop
mov
or
push
xchg
sbb
adc
icebp
inc
and
adc
imul
cmp
out
push
sub
xchg
mov
xchg
fdivr
sub
sub
incl
and
popa
dec
js
adc
inc
inc
iret
movl
inc
scas
sbb
xchg
jne
xor
mov
int3
aaa
xchg
jne
idivl
or
pop
mov
and
out
and
gs
inc
int
inc
mov
pushf
enter
sbb
jns
mov
add
mov
pop
pop
rorb
stc
es
rcll
mov
mov
lock
jge
add
orb
push
sbb
push
sbb
pop
inc
jmp
push
push
adc
jp
xor
push
imul
lret
adc
mov
or
sub
push
pop
add
lds
or
dec
sub
pop
push
and
lret
cmp
dec
cs
push
add
xor
adc
addb
add
pusha
hlt
pop
inc
jae
adc
push
adc
adc
addb
xchg
cmc
inc
cs
mov
or
jmp
cmp
jmp
pusha
push
repnz
lret
hlt
rolb
add
loopne
movsb
dec
cmpb
add
in
leave
vmwrite
cmp
loope
jp
inc
and
aad
push
xor
mov
js
dec
sub
fldl
in
or
add
shlb
mov
dec
imul
inc
out
mov
add
mov
adc
pop
out
addr16
shlb
pop
sbb
lods
lahf
add
push
jno
xchg
push
icebp
imul
shrb
rcrb
ret
out
inc
ret
adc
push
in
push
sub
or
pop
push
cmp
and
neg
mul
mov
adc
cmp
add
and
add
fidivs
orb
cmp
imul
add
jmp
mov
cmc
mov
jl
jno
dec
stc
adc
std
push
inc
push
push
cmp
mov
and
mov
push
xchg
jecxz
sub
int3
pop
cmp
inc
jns
xor
add
sub
mov
imul
jl
popa
sbb
cmpb
test
sub
jecxz
and
sub
xor
dec
jb
push
pcmpgtw
lods
xlat
fstpt
xchg
pop
test
outsl
inc
mov
or
xlat
push
or
mov
sarl
push
and
push
shl
movb
out
rcll
imul
ret
pop
cmp
dec
add
and
mov
jmp
add
push
mov
js
les
scas
mov
cld
test
cmp
xchg
das
sub
adc
fisttpll
gs
inc
in
int
adc
dec
aas
pop
ret
cmc
shlb
mulb
and
xorb
and
adc
push
sarl
cmp
lahf
push
mov
popf
adc
stc
jp
adc
adc
pop
clc
ds
pop
mov
add
dec
pop
push
mov
lock
ljmp
rcl
sbb
ds
sbb
std
stos
mov
js
leave
add
add
cli
stc
mov
out
ljmp
sbb
xchg
xchg
mov
out
stos
inc
dec
jmp
stos
cmp
jmp
mov
sbb
or
and
inc
mov
div
mov
xchg
adc
std
add
sarb
push
pop
add
mov
addl
addr16
lods
je
loope
pop
mov
xchg
push
mov
adc
add
mov
dec
lcall
push
xchg
adc
movsl
cmp
cld
pop
inc
out
mov
inc
inc
fisttps
jo
sub
cli
insl
push
insb
cmp
dec
in
xchg
dec
sti
mov
or
xchg
add
out
sub
lds
add
jne
inc
cmp
mov
pop
sub
xorb
and
sub
neg
orl
cmp
xchg
sbbl
or
fidivrl
or
cmp
dec
xor
pop
sub
mulb
or
es
leave
inc
push
jmp
sbb
int3
mov
sbb
das
cli
jns
jmp
mov
jmp
push
dec
pop
pop
mov
mov
jp
lds
aas
rcrb
adc
xchg
repnz
fadd
xchg
aad
xchg
movsl
pop
rorb
movsl
jmp
fidivs
inc
dec
sub
dec
stc
icebp
scas
jnp
mov
das
imul
inc
sbb
sub
cmp
mov
or
stc
loop
stos
enter
add
inc
aas
lret
mov
dec
bound
add
mov
into
mov
adc
ret
push
xorb
and
add
xchg
loopne
hlt
jb
add
int
add
jmp
and
or
sub
popf
arpl
popf
popa
sub
leave
xchg
incb
loope
xchg
push
into
jecxz
inc
add
inc
movsb
inc
lcall
and
data16
rclb
xchg
and
rcr
mov
jg
fiaddl
mov
cmpsb
inc
inc
push
testb
sbb
cmp
lret
popf
pop
int
cld
mov
or
or
ret
add
and
xchg
enter
cld
pop
mov
push
push
push
push
push
xchg
inc
jmp
cmp
fldenv
fldt
scas
push
jle
imul
test
aad
ljmp
daa
xchg
inc
xchg
push
mov
cmp
idiv
pop
testl
les
gs
out
add
cmp
pop
cld
push
test
sub
add
pop
mov
lds
cmpsb
test
leave
mov
cmpb
popa
pushf
stos
pop
clc
js
addr16
gs
mov
xorb
jle
push
adc
leave
sub
ja
repnz
jnp
mov
fcmovbe
mov
addb
out
adc
neg
test
and
mov
push
sub
cmp
or
popl
in
sub
in
scas
pop
xor
popa
aas
push
adc
mov
adc
pop
lahf
imul
les
iret
jmp
not
xor
mov
js
sub
and
xor
add
cmp
lret
insb
sbb
dec
orb
pop
xor
or
add
mov
adc
sbb
loope
test
fs
add
ljmp
clc
adc
pop
mov
dec
loopne
xor
or
andb
rolb
mov
and
xor
cmp
daa
jp
xlat
mov
push
das
rcll
das
dec
les
popa
sub
fsubrp
dec
cwtl
dec
cmp
jle
add
mov
push
xor
and
test
lds
cmpsl
das
cmp
syscall
cmp
inc
push
lock
dec
lock
and
or
or
mov
aam
inc
push
cwtl
add
das
fidivl
xor
mov
sbb
lcall
in
sub
adc
inc
fldenv
mov
jle
cld
dec
sub
ss
push
xchg
pop
stos
insl
mov
out
jge
js
push
push
pop
out
mov
pop
loop
out
mov
pusha
stos
mov
repnz
rorl
cmp
pop
inc
mov
inc
les
daa
push
fstl
lcall
pop
in
insb
or
cmp
stos
adc
stos
in
cmc
mov
dec
hlt
cmp
dec
sub
mov
daa
insb
xchg
std
add
pop
push
adc
jecxz
dec
push
and
sub
sarl
mov
daa
xchg
push
jo
xchg
mov
push
sbb
push
popf
rorb
xchg
or
mov
jne
nop
ret
adc
sub
push
mov
or
xchg
mov
mov
repnz
rcrl
sub
lds
adc
jns
negl
xchg
xchg
mov
repz
pushf
push
loopne
mov
pop
mov
cmp
xchg
add
fwait
imul
jbe
pop
cli
int
xchg
cwtl
cmp
scas
xor
test
shll
and
sti
or
xchg
pop
sub
ja
push
loope
push
fucomip
into
lahf
outsb
sub
and
rcll
pop
stos
cmpsb
sahf
adc
loopne
push
adc
push
and
add
in
jo
pop
shlb
xchg
leave
loopne
test
sbbb
sub
sarb
dec
scas
imul
fildll
mov
mov
lock
es
dec
mov
in
lock
or
add
cwtl
mov
aaa
lods
xlat
fadd
daa
add
cmpsb
imul
in
add
push
or
mov
pushf
add
adc
lds
popa
mov
jns
jmp
cmp
inc
stos
adc
mov
add
pop
adc
pop
sub
sub
out
or
js
adc
jmp
jnp
outsb
fwait
lods
add
mov
push
cmp
daa
mov
popa
stos
sub
add
movl
cmpsl
pushf
xchg
sbb
mov
mov
in
jge
cwtl
or
pushf
sbb
ret
pop
sbb
mov
inc
loop
adc
fistpll
dec
push
in
push
mov
mov
mov
mov
out
sahf
call
bound
push
outsb
add
add
mov
popf
xchg
add
pusha
xchg
sar
test
jns
out
or
aam
lods
mov
shlb
mov
popa
int3
inc
cmp
fimuls
out
std
les
push
adcb
inc
sub
push
les
push
inc
or
or
scas
pusha
xor
ss
add
pusha
lds
daa
xchg
push
fxch
fldt
cmp
jne
adc
pop
dec
pop
jge
popa
mov
pop
dec
ss
inc
pop
es
shl
sub
dec
adc
push
subl
mov
rclb
push
push
aas
push
inc
pop
inc
xchg
push
xlat
and
xchg
jecxz
flds
or
loope
rorl
icebp
or
mov
jl
cmp
in
imul
into
xchg
pusha
repnz
mulb
jno
xchg
push
test
mov
jbe
nop
jecxz
arpl
rcrb
pop
icebp
or
and
daa
jne
stos
sbb
mov
mov
fadds
sbb
adc
mov
in
pusha
shl
sub
mov
or
push
add
in
pop
mov
xchg
jae
int3
xchg
inc
push
jg
aaa
cmpsb
mov
mov
and
adc
pop
pusha
pop
push
add
aam
pop
push
jle
inc
repz
cmp
pusha
cltd
repnz
sbb
les
jo
in
mov
xchg
data16
pop
lret
out
mov
and
cwtl
enter
inc
imul
and
call
mov
add
adc
imul
mov
and
push
add
int3
test
jno
pop
sbb
lods
sar
loope
pop
xchg
orb
or
cmpsb
testl
nop
mov
xlat
pop
xchg
adc
daa
mov
mov
mov
aaa
imull
cmpsl
sub
jmp
cltd
stos
and
xor
jmp
lcall
loopne
mov
xchg
jb
xor
ret
shlb
xor
ja
push
pop
dec
mov
jns
sbb
cli
push
ds
je
mov
test
sub
xchg
and
popf
pop
xlat
pop
and
daa
cmp
iret
mov
inc
xchg
mov
push
cli
and
repnz
xor
push
jmp
cmpsb
inc
sub
inc
ret
pop
dec
mov
inc
lock
xchg
data16
das
scas
nop
fwait
and
lahf
adc
mov
es
mov
aam
popf
repz
not
xchg
and
out
sbb
push
pop
sub
or
paddusw
ss
sbb
mov
repnz
popf
inc
add
pop
shr
add
fnstsw
cmp
push
outsl
addr16
xor
sub
je
mov
into
aam
jmp
insl
dec
sub
idiv
push
or
sub
aas
sub
jge
mov
push
adc
sub
lock
and
inc
ds
xor
push
andl
aaa
loopne
jl
xor
adc
pop
and
lret
mov
adc
adc
pop
in
outsl
xchg
bound
mov
jmp
adc
mov
dec
dec
jge
fstl
sbb
mov
jmp
in
int3
cmc
mov
cmp
hlt
addr16
stos
lahf
adc
inc
mov
daa
push
aas
bound
or
pop
jl
mov
push
jmp
ja
xchg
xchg
cwtl
xor
loope
test
add
jb
push
and
popf
or
sbb
pusha
inc
insb
pop
daa
or
add
xchg
arpl
ss
jmp
mov
insb
sbb
push
sbb
inc
add
in
sub
dec
push
cltd
daa
push
mov
imul
mov
sub
or
lcall
jg
adc
loopne
mov
std
inc
insl
adc
adc
or
xchg
not
fdiv
dec
pop
mov
adc
add
bound
and
pop
adc
inc
in
repz
or
movhps
jl
outsb
jne
cli
cmp
and
push
call
push
mov
push
xor
fstl
mov
lahf
and
pop
mov
pushf
inc
add
cmp
shr
orb
call
lea
outsl
sub
rorb
or
jmp
xchg
or
push
add
sbb
testb
sub
lret
adc
jmp
loopne
fists
popf
fwait
in
test
cmp
sahf
pop
cmp
sbb
negb
sub
and
inc
jmp
nop
into
add
sub
les
xlat
inc
lahf
std
mov
mov
mov
jmp
cmp
cwtl
xchg
test
je
cs
xchg
or
rcll
mov
xchg
jl
int3
cmp
dec
loopne
mov
not
das
pop
dec
out
push
into
popf
push
jle
mov
decl
or
pop
in
mov
aam
fwait
pop
push
push
dec
loop
adc
mov
icebp
sub
adc
stos
sub
lds
mov
insb
or
pop
sub
shlb
jmp
push
xor
popa
cmpsl
jne
jne
jns
push
push
sub
dec
je
add
in
jmp
shlb
das
xchg
out
cli
dec
xchg
subb
sti
pop
popf
ja
push
xlat
mov
inc
mov
or
sti
adc
imulb
adc
add
xor
pop
add
pop
sub
sub
jns
sbb
nop
push
push
fildll
icebp
cmovno
jg
out
testl
push
lods
mov
test
and
shrl
rorb
push
inc
pop
out
popa
cli
push
push
add
fsubrs
loopne
jnp,pn
pop
inc
in
mov
xor
in
pop
inc
sahf
adc
out
push
int3
xor
and
jo
addb
sub
jp
les
movzwl
push
into
imul
cmp
mov
je
ja
scas
insl
xchg
and
lock
cli
xor
sahf
mov
dec
imul
test
test
dec
xor
hlt
jle
and
lahf
mov
movsl
daa
push
cld
cmc
push
ja
lret
xchg
sub
dec
jl
jge
pusha
mov
out
das
aas
popa
jg
hlt
adc
int3
out
or
outsl
stos
mov
out
jns
mov
pop
andl
sub
mov
bound
ja
sti
popa
cmpsb
adc
inc
push
push
xchg
jb
shlb
fucomi
xchg
push
stos
lret
mov
sbb
shl
pushf
adc
add
push
mov
jmp
insl
push
push
jns
les
enter
mov
or
push
mov
add
leave
mov
adc
push
andl
in
ds
fsubrs
cmpsl
fidivl
pop
and
or
jp
repnz
add
fcomip
inc
mov
clc
loopne
pusha
mov
cmp
fsubrs
test
dec
inc
dec
outsl
sub
dec
mov
insb
xlat
push
popf
push
hlt
sub
lods
decb
daa
fs
xlat
add
xor
inc
mov
adc
xchg
ss
mov
jns
rcrb
mov
jmp
xchg
sub
adc
cli
rorl
mov
pop
inc
sbb
push
adc
xchg
scas
in
push
push
iret
xchg
add
repz
jb
cmp
lods
push
mov
sub
dec
clc
int3
daa
jmp
mov
xchg
add
shrb
cwtl
adc
incl
xchg
xor
push
testb
xchg
insb
mov
push
ret
lds
add
jae
jp
sub
enter
pop
pop
adc
mov
call
dec
xor
movsl
insb
movb
sbb
rcrl
ljmp
test
cmp
xor
cmp
ret
emms
mov
cld
jmp
pop
sub
in
inc
jl
mov
adc
pop
jnp
add
scas
addr16
pop
and
sub
pusha
cld
add
mov
fs
in
cltd
mov
js
push
and
xchg
pop
pop
push
pop
test
fmull
je
sub
inc
jbe
mov
mov
mov
xchg
mov
adc
pusha
dec
inc
rcl
pop
fsubs
jno
incl
push
mov
sbb
fisttps
loope
xchg
push
jl
rclb
jle
cmp
inc
call
and
daa
pusha
xor
mov
jno
cs
and
test
mov
add
sub
aas
adc
pop
add
jmp
ret
inc
push
popa
dec
push
jmp
addl
lcall
mov
pop
add
or
aaa
jnp
and
adc
xor
cld
jne
cli
sub
dec
or
jne
mov
push
out
mov
in
cmpsl
nop
add
fisttps
clc
cmpsb
lock
and
cli
add
ja
dec
add
call
add
add
test
mov
ds
lock
and
dec
mov
pop
mov
xchg
xchg
out
add
not
pop
or
shl
mov
add
mov
push
pop
xor
jmp
cld
adc
push
scas
insb
dec
jae
mov
pop
add
roll
push
jmp
aam
jo
dec
adc
loopne
pop
jge
pop
jmp
mov
jecxz
nop
lea
mov
repnz
lock
icebp
push
icebp
shrl
xor
mov
sub
mov
int3
dec
inc
pushl
bound
stc
pop
xlat
sbb
adc
outsl
sbbb
jmp
inc
inc
lret
adc
lods
fimull
cmp
push
hlt
and
and
cmc
or
test
dec
mov
sub
mov
sbb
pop
sbbl
dec
faddp
cltd
pop
clc
add
gs
push
xor
test
fisttpll
or
pop
shlb
rcrl
adc
adc
addl
repnz
xor
and
sub
lea
sarl
pop
enter
imul
dec
mov
add
cs
pusha
dec
jmp
sbb
add
pop
jp
or
pop
fnstenv
ds
xor
sub
add
hlt
aad
jecxz
out
push
and
jmp
sbb
ds
mov
or
push
mov
sbb
dec
stos
sahf
imul
adc
sub
loop
adc
mov
push
or
sub
rorb
mov
out
call
pop
jmp
into
xchg
jge
lret
pushf
dec
dec
addb
mov
ds
xchg
add
call
lods
or
sub
pop
shl
mov
repz
cli
jno
or
xchg
xchg
inc
push
mov
adc
imul
ds
or
fsincos
das
std
sub
lahf
mov
insl
ljmp
jg
fstps
mov
inc
shr
adc
push
ja
add
test
stos
mov
pop
inc
cmp
fiadds
jno
stos
pop
xlat
inc
mov
incl
in
xchg
mov
cld
cmpl
mov
xchg
addb
popa
lahf
jb
sub
sti
mov
dec
pop
pop
cmp
or
imul
incl
in
mov
mov
pop
and
pop
mov
and
xorb
adc
jmp
mov
sub
movsb
or
or
das
js
cwtl
daa
or
gs
jns
add
jp
and
jnp
mov
jns
movsl
jns
and
xor
xchg
jp
cmp
mov
not
aas
cmp
outsl
loop
xchg
inc
test
push
loope
lock
imul
push
dec
sbb
inc
mov
add
js
add
pop
xchg
es
add
mov
mov
xor
or
xor
cmc
dec
or
mov
repnz
push
movb
pop
shll
inc
cltd
outsb
in
leave
out
push
scas
pop
mov
push
lcall
pop
mov
push
stos
jecxz
cmp
adc
ja
in
lds
dec
cmp
add
ja
and
nop
xchg
mov
in
bound
int
ja
jge
call
jb
subb
jg
and
stc
jb
in
mov
fldl
sub
cmpsl
xchg
loopne
push
das
sub
cli
xchg
stos
sub
push
jecxz
sub
stc
fimull
shr
pop
adc
jg
pop
xchg
push
adc
xchg
add
es
or
cmp
jno
outsb
fisttpll
into
jae
and
or
add
bound
fsubrs
test
bound
out
je
outsl
xchg
lcall
push
into
jge
cltd
imul
out
test
subl
push
pop
stos
mov
push
xor
xor
daa
mov
jmp
jns
insl
jbe
repnz
mov
jmp
mov
jg
cmp
xor
lret
and
sub
cmp
mov
rolb
dec
push
xchg
or
add
psubb
or
pop
push
push
xchg
imul
pop
fdivs
into
mov
mov
add
and
xor
or
fnstsw
rcr
xchg
cmp
fisubl
es
aas
and
adc
test
pop
repz
inc
ret
sti
push
loope
iret
sub
mov
clc
ret
mov
pop
push
pop
clc
shrb
fsubs
xor
div
mov
inc
add
das
pop
xor
js
lahf
cmp
sar
xor
jl
xchg
or
dec
stos
push
mov
mov
mov
das
pop
xor
jmp
jne
test
add
lret
das
xor
add
test
sahf
or
leave
lds
and
jmp
xor
pop
jle
shl
push
and
testb
cmp
add
popf
fwait
mov
ret
and
xchg
ss
add
jo
pop
cmp
movsl
insl
loopne
js
xor
pop
das
repz
add
push
push
mov
sub
jmp
hlt
ds
jno
gs
inc
adc
cmp
cmpsl
mov
jne
dec
xor
call
push
mov
ja
push
or
jmp
sub
mov
cld
mov
loopne
fidivl
add
xor
jp
sbb
jo
sbb
adc
xorl
shrb
pop
sub
and
pop
jl
pop
jae
mov
xchg
sub
xor
sbb
pop
pop
jo
or
mov
and
daa
call
mov
je
cld
lods
jb
jne
and
addb
lds
add
push
cmp
shl
shlb
add
xchg
add
clc
imul
lods
push
sbb
inc
xchg
push
push
dec
out
cmc
cmp
adc
xchg
or
push
lods
cmp
sar
out
aad
jmp
ds
adc
adc
stos
jbe
add
push
add
jmp
sbb
cltd
mov
in
and
xor
inc
mov
jmp
mul
pop
adc
das
fwait
jle
push
dec
add
xor
jb
movsb
in
push
and
pop
rclb
or
jl
out
add
inc
scas
nop
and
in
adc
jmp
inc
mov
sbb
jnp
jge
das
jo
test
xor
mov
aam
add
scas
inc
xor
pop
addr16
mov
xor
adc
adc
inc
jle
and
push
push
loope
mov
jbe
stos
shl
not
in
sbb
in
nop
int3
into
or
dec
push
insb
and
sub
jmp
out
push
int3
dec
pop
jno
jns
imul
sub
movsl
mov
jae
fbstp
jmp
xor
pop
pop
cmp
pop
out
mov
dec
add
pop
inc
mov
push
sub
push
mov
cmp
mov
add
pop
sub
push
adc
aaa
imul
push
add
pop
sub
xor
and
dec
stos
dec
iret
es
add
push
in
mov
pusha
cs
push
mov
add
loope
jmp
ja
inc
inc
hlt
imul
inc
inc
xchg
fistpll
xchg
rolb
int3
jge
gs
sub
mov
scas
xor
data16
pop
stc
mov
ficoml
inc
aas
loopne
mov
mov
and
cmpl
enter
cmp
and
dec
loopne
repnz
inc
sub
fiadds
jmp
loop
enter
jg
dec
lods
int3
das
rorl
aad
loopne
lcall
xchg
mov
pop
out
add
xchg
pop
dec
push
and
iret
sbb
cmp
dec
mov
inc
or
inc
xor
in
and
cwtl
add
lods
add
es
aaa
push
mov
sub
dec
jb
adc
or
or
enter
adcl
push
dec
pop
inc
jae
pop
sub
cmp
out
push
push
call
jecxz
add
dec
push
shr
shl
call
mull
outsb
cmpsb
in
inc
xor
popa
bound
sbb
sbb
cld
add
add
inc
aaa
inc
call
pop
repz
mov
invlpg
sub
push
inc
xor
jmp
xlat
add
xchg
add
test
and
gs
das
shrb
add
dec
or
add
cmc
fucom
xor
enter
je
jmp
mov
xchg
lods
movsb
in
add
push
fs
or
mov
dec
fdivl
or
push
mov
push
fdivl
lret
es
push
arpl
hlt
test
hlt
jmp
aas
test
adc
lock
xchg
add
divb
lds
push
movsl
sbb
sub
adc
fldl
aam
mov
dec
sub
and
mov
jb
dec
int
rorb
hlt
jecxz
pop
rclb
neg
jmp
lock
icebp
pop
inc
mov
roll
mov
int3
scas
les
jecxz
lret
jecxz
pop
ljmp
push
dec
call
mov
inc
cld
xor
add
pop
clc
movsl
sub
sbb
push
mov
and
ret
inc
std
out
out
sti
mov
pop
loope
xchg
popa
pop
fnstsw
setge
add
cmp
jo
sti
out
sbb
and
push
xor
pop
mov
adc
shr
mov
sub
jge
stos
add
call
push
mov
jmp
jne
xor
fistl
push
push
sbb
push
jmp
add
cmp
fdiv
push
sbbw
jmp
pop
or
inc
jnp
ret
mov
loop
int3
cmp
xlat
sub
adc
and
add
int
out
fadds
or
jle
add
mov
cmp
mov
mov
cs
addb
mov
dec
sbb
fsubl
inc
and
int3
inc
xor
out
arpl
call
das
ljmp
daa
stc
and
sbb
in
ljmp
mulb
and
int3
inc
sti
cs
jb
lds
lcall
xor
jle
addr16
add
jmp
das
push
xchg
xor
imull
add
shr
repnz
mov
pusha
xor
add
pop
setbe
xchg
ficompl
xor
push
arpl
and
pop
push
sbb
ror
out
pop
or
push
push
mov
mov
test
and
int3
icebp
jg
jb
xor
jle
mov
cwtl
push
xchg
ss
mov
add
aas
push
mov
das
dec
and
stos
push
mov
fwait
lret
lahf
js
push
add
pop
cld
out
addr16
add
sub
repz
hlt
ret
jne
ret
pop
lods
add
mov
dec
and
cwtl
jg
popf
add
lret
dec
jae
xor
and
in
lahf
test
add
xor
ret
and
and
lods
jbe
pop
mov
and
js
fadds
mov
xor
ja
das
pusha
stos
adc
pop
daa
cli
orb
push
mov
adc
or
add
mov
and
mov
imul
pop
scas
mov
lret
dec
and
pop
inc
adc
and
cmc
jmp
out
pop
popf
fstl
stos
mov
lahf
mov
or
xchg
add
sbb
or
mov
or
mov
push
mov
shr
out
cmp
and
out
pop
or
jns
test
or
addl
dec
pusha
push
jns
xchg
loope
mov
sub
push
jp
ror
clc
cmp
adc
sub
sbb
es
imul
mov
mov
add
jb
cmp
cmp
mov
sbb
add
pop
or
or
and
xor
mov
dec
mov
loopne
mov
push
mov
das
add
testb
inc
jne
imul
shrb
cmpsl
jb
test
jp
push
lock
and
add
sbb
pop
fists
add
sti
ret
filds
pop
mov
pop
out
sbb
lds
adc
jle
mov
stos
fnstcw
stos
cmp
cmp
lds
lret
and
mov
sub
and
gs
dec
mov
jmp
push
and
xchg
icebp
or
out
lock
cwtl
scas
sub
pop
clc
or
mov
aam
stc
inc
sbb
movsb
add
inc
bound
mov
inc
push
aad
addr16
aas
test
loop
push
push
jg
add
call
xchg
xchg
call
dec
clc
pop
xor
outsl
repnz
test
ror
jae
outsl
rorl
loop
adc
or
cmpb
dec
cmp
lods
jp
icebp
sub
loop
xchg
ret
pop
mov
rcr
insb
inc
mov
neg
mov
inc
repnz
lds
iret
xchg
mov
push
test
jo
adc
imul
mov
add
imul
repnz
push
movsl
cmp
out
dec
iret
daa
in
int3
jecxz
and
ss
adc
inc
mov
and
int
repnz
ret
pushf
or
xchg
jl
in
stc
sbb
pop
xor
and
xchg
pop
leave
sahf
cmp
lahf
lcall
scas
cmc
cwtl
mov
stc
pop
jmp
push
adc
lret
mov
ds
sar
xor
xchg
xchg
add
in
pop
pop
pushf
cmp
mov
pop
loope
xor
adc
lahf
add
pusha
cli
into
lahf
sbb
cmp
iret
jnp
jae
je
inc
jmp
xlat
pop
push
push
call
push
add
and
add
xchg
jmp
cld
xchg
pop
push
ljmp
dec
repnz
rclb
push
cmp
mov
test
xchg
arpl
mov
fiadds
xlat
sbb
data16
and
movsl
jo
pop
dec
mov
dec
jg
std
push
pop
inc
or
xor
add
add
mov
shrb
jnp
int
mov
inc
je
aas
ds
and
icebp
orl
es
repz
out
pop
fidivl
mov
mov
pop
sti
sub
movsb
ja
loope
scas
pop
sbb
and
mov
cwtl
std
inc
in
test
dec
mov
mov
add
icebp
loopne
mov
dec
and
cmc
movl
mov
shr
rolb
and
fwait
cmp
test
pop
adc
aaa
or
inc
dec
lret
add
mov
scas
loop
xchg
push
jmp
jle
jne
inc
in
les
leave
jg
test
add
and
dec
xor
xlat
mov
pop
xor
lahf
cmp
inc
mov
pop
or
insl
add
mov
imul
movsb
inc
and
stc
cmp
sbb
inc
cmp
and
nop
push
add
jle
dec
ret
dec
out
cmc
or
pop
sub
add
mov
and
mov
icebp
dec
or
mov
insb
push
clc
in
push
pop
mov
sbb
xchg
cmp
dec
and
testl
pop
outsl
sub
or
adc
push
jnp
ljmp
dec
xchg
xlat
lods
ss
lcall
adc
adc
mov
loopne
loope
iret
dec
imul
movsb
ja
notl
xchg
pop
out
and
mov
test
and
cmp
mov
call
mov
push
jb
add
arpl
add
icebp
call
xlat
mov
imul
and
mov
repz
pop
lea
jb
test
clc
mov
daa
jg
push
xor
jle
out
mov
or
xchg
dec
andb
mov
add
jmp
pop
xchg
dec
inc
adc
aad
sub
add
repnz
or
mov
jbe
adc
jb
ret
dec
les
shll
stos
dec
aas
adc
lods
adc
lds
dec
ljmp
lods
adcb
loop
out
pushf
jp
in
adc
pop
mov
mov
fimuls
jmp
cmp
and
pop
sub
or
fcoms
mov
fcomps
dec
ret
jge
jmp
je
mov
fs
daa
fld
xlat
mov
cmp
adc
shrl
loope
add
fmull
push
std
pop
add
jb
mov
mov
cwtl
cmp
cwtl
or
dec
mov
xor
push
les
mov
out
cmp
mov
imul
divl
pmullw
push
xor
clc
add
insl
insb
iret
dec
mov
adc
add
or
sbb
sti
adc
cmp
movsl
sbbl
dec
stc
xchg
pop
mov
hlt
add
int3
jmp
xchg
lea
enter
movsl
jp
cld
sub
xor
jmp
loopne
cmp
sbb
add
add
cmc
cld
scas
add
push
jmp
out
jge
dec
mov
mov
jle
pop
or
shr
test
and
dec
fdivrs
jmp
das
divb
loopne
jnp
jno
orl
out
jmp
xchg
popf
or
aad
repnz
cwtl
mov
lahf
test
cmp
sub
adc
mov
and
inc
add
mov
cld
rolb
mov
loop
sti
inc
imul
lock
xor
ljmp
cwtl
adc
roll
cwtl
imul
adc
mov
jmp
shr
mov
pop
cmp
repz
cs
cmc
dec
ljmp
leave
les
mov
fcoms
pop
gs
mov
jbe
push
jmp
xchg
xor
dec
inc
mov
push
add
push
mov
popfw
jno
cmp
sub
mov
jecxz
leave
mov
and
inc
imul
xchg
lahf
push
not
popa
pop
add
arpl
test
pushf
lock
lea
popf
jle
add
xor
mov
testb
xchg
in
shrb
mov
add
xor
xor
movb
push
dec
mov
subb
or
mov
and
imul
fs
hlt
mov
sub
and
sub
jb
or
xchg
sub
sub
xor
inc
lds
add
mov
icebp
hlt
adc
cmp
sti
xor
or
rolb
jle
stc
mov
mov
pusha
les
movsl
pop
je
mov
scas
nop
adcb
loop
pop
popa
call
andl
rolb
push
lods
ret
sub
sar
jns
test
and
mov
pop
fldl
dec
pusha
push
dec
push
and
ss
insb
pop
out
mov
jno
add
pusha
lea
pop
cmp
rorb
cmp
jmp
mov
add
add
test
xchg
jp
push
jmp
add
pop
sti
test
add
cmp
jb
jmp
pop
mov
pop
mov
add
sub
ljmp
mov
mov
or
in
mov
call
cmp
dec
bound
addb
jbe
cmp
xor
daa
adc
fistpll
shlb
cmpl
js
sub
and
push
test
add
xor
pop
lds
push
std
out
xchg
add
das
push
mov
inc
or
daa
jl
cltd
jmp
hlt
jge
push
push
add
lea
or
and
shll
add
and
xor
ljmp
or
dec
mov
or
mov
mov
icebp
inc
push
jae
mov
jnp
pushf
gs
mov
sbb
aad
jecxz
sahf
adc
inc
dec
pop
pop
add
and
push
cmovl
add
or
bnd
push
popa
pop
jg
and
or
pop
or
and
add
loope
fcomi
inc
xorl
mov
ret
jae
sub
mov
xlat
fstl
and
addb
repz
jae
add
stc
or
pop
or
and
push
sbb
mulb
mov
rclb
das
xchg
in
addl
inc
jmp
cmp
jae
popa
inc
add
fdivrl
rcrb
shl
pop
inc
cmp
pop
jo
in
adc
push
mov
repz
ja
into
popa
lods
add
mov
sub
push
mov
jmp
sbb
mov
add
jmp
mov
inc
int3
sub
jno
or
icebp
sub
or
mov
jl
dec
sbb
lret
lret
push
idivl
popa
cltd
sbb
enter
sub
jo
movzbl
adc
push
int3
mov
or
sbb
imul
fdivr
shlb
xor
push
sub
cwtl
xchg
inc
in
jl
out
mov
test
icebp
mov
push
inc
dec
fdivr
jne
pusha
imul
mov
mov
shrl
test
sbb
adc
cmc
test
mul
inc
cmp
mov
ret
mov
push
mov
shll
movb
loop
cwtl
push
or
xchg
sbb
add
popf
adc
pop
and
ret
add
mov
sub
outsb
sub
add
or
xchg
push
inc
call
push
or
lock
push
cmpsb
and
pop
ret
out
cmp
cmp
ret
jp
fcomp
bound
xor
mov
pop
pop
scas
dec
or
and
xchg
pop
in
dec
loop
adcl
xchg
push
mov
inc
adc
jns
add
cmp
adc
es
ds
outsl
pop
loop
ror
xor
lret
hlt
stos
pop
add
xor
dec
xor
outsb
cmc
xor
cmp
sbb
imul
dec
jmp
nop
or
or
testl
cmp
or
and
inc
loope
xchg
mov
push
test
cmpsb
cld
dec
and
or
add
jno
xor
jmp
jno
cmp
imul
rcll
loopne
cmp
test
aaa
jecxz
xor
scas
movsb
out
call
negb
aam
fistps
fldenv
or
inc
add
jmp
sti
add
lock
shlb
jb
mov
mov
sbb
aad
dec
aam
ret
fistpll
aam
scas
add
jmp
xchg
int
push
dec
hlt
flds
xchg
ret
std
add
out
mov
and
fsts
mov
out
enter
inc
jecxz
pop
pop
mov
sbb
adc
pop
adc
jb
push
add
adc
push
sub
adc
pusha
adc
out
push
add
enter
insb
sbb
pop
push
inc
scas
or
ja
adc
les
add
push
xor
xor
mov
xchg
dec
inc
fsubs
ret
xchg
inc
add
xchg
pusha
sbbl
scas
sub
adc
xor
push
stos
or
daa
jb
sbb
stc
xchg
inc
or
pop
pop
or
inc
daa
es
pop
jnp
lods
mov
and
les
cmpsb
mov
flds
fistps
out
shr
and
add
mov
xor
and
xor
repz
mov
cmpsl
jge
sti
cltd
add
pop
sarb
sahf
xchg
pop
cmpb
sub
sub
jge
call
into
insl
out
push
xchg
dec
int
ficomps
mov
push
mov
mov
add
shl
test
ret
ljmp
pop
xchg
mov
divl
gs
repz
lret
adc
push
mov
and
pop
inc
in
fs
andw
jmp
adcb
ss
movlps
in
xchg
and
jge
int3
addr16
add
movsb
add
pop
ja
dec
or
dec
mull
inc
or
inc
cwtl
and
movsl
addb
test
cmc
mov
mov
adc
ret
test
insl
ret
push
xor
adc
push
jbe
repz
test
push
mov
imul
add
mov
jmp
loopne
mov
cmp
pop
and
lds
pusha
push
mov
fildll
inc
loop
pop
aad
out
xchg
in
ljmp
dec
sbb
sahf
divb
icebp
adc
inc
dec
test
pop
test
sub
pop
pop
mov
and
ret
popf
jmp
push
xlat
int3
sub
pop
xor
or
je
sub
push
sbb
add
das
imul
dec
push
dec
jbe
nop
orb
iret
test
mov
pop
sub
jp
int3
sub
dec
jne
rorw
pop
pop
repz
into
lods
xor
cmp
xor
dec
adc
xchg
adc
pop
or
roll
adc
push
mov
jmp
add
imul
daa
sbbl
ret
bound
jge
push
jns
adcb
inc
dec
xchg
add
ret
movsb
or
push
pop
mov
mov
add
pop
dec
pop
shlb
addr16
mov
xchg
loope
icebp
cmp
xchg
sub
pop
and
daa
mov
insl
or
je
inc
arpl
insl
inc
push
lahf
push
or
cli
sub
pop
dec
mov
js
ljmp
push
mov
xor
jmp
inc
ret
push
test
fimull
dec
dec
sub
popa
push
sar
out
lret
push
mov
loop
icebp
add
loope
push
cmp
pop
push
mov
dec
fisubrs
jne
xchg
push
push
inc
jns
inc
push
push
push
mov
and
push
jae
jbe
xor
sbb
insb
inc
out
andb
xchg
sarb
pushf
jae
clc
pop
jp
mov
out
jmp
xchg
xor
mov
push
sbb
out
jmp
aas
dec
adc
sub
sbb
jne
lods
les
in
jb
add
pushl
pop
lods
dec
hlt
cld
mov
xor
dec
mov
push
jmp
test
lds
inc
mov
imul
add
jmp
push
xchg
sbb
inc
push
and
pop
push
mov
mov
cli
rclb
push
lcall
imul
pop
stc
jns
add
repnz
sti
mov
jne
jbe
shll
sub
cmp
adc
pop
orb
sub
cmc
xchg
lret
mov
scas
pop
mov
daa
int
pop
pusha
pop
or
test
pop
clc
jmp
push
mov
lahf
pop
or
xchg
inc
cld
stos
mov
mov
push
jmp
ret
jmp
dec
jns
inc
leave
or
and
push
add
add
mov
and
dec
sub
ret
jae
jnp
xchg
pop
sti
jb
cmp
in
push
hlt
mov
sub
and
pop
inc
sti
js
sub
mov
fistpll
imul
xor
pop
mov
int3
sub
sbb
push
push
sbb
sbb
and
call
mov
pop
add
insl
and
dec
sbb
outsl
or
push
negl
add
add
xchg
jle
or
jp
xor
shr
inc
add
fiaddl
dec
sub
cmp
mov
mov
lret
hlt
pop
js
mov
lods
push
or
adc
push
mov
dec
in
xchg
mov
pop
inc
fwait
insb
or
cli
sarl
push
loop
jmp
push
aam
push
inc
movsb
clc
ljmp
push
add
xchg
xlat
add
sbb
clc
es
mov
xrelease
fcoms
xor
addps
mov
jno
inc
pushl
cmpsl
out
lods
rorl
xchg
js
cmp
or
push
mov
popf
test
pop
pop
mov
sub
pop
insb
adc
mov
sub
mov
mov
jmp
data16
repz
arpl
adc
add
loopne
fwait
sub
mov
pop
push
mov
push
ret
jne
rol
ret
adc
not
cmp
ss
add
nop
mov
cmp
rcl
inc
adc
sbb
mov
stos
popa
mov
add
loop
jmp
mov
push
cwtl
icebp
scas
pop
cmp
add
fidivrl
sbb
mov
lcall
jnp
jp
pop
mov
rcrb
std
xchg
jb
addr16
fs
iret
push
jle
xor
fucomip
daa
ret
dec
lcall
lcall
pop
jne
pop
arpl
cvtps2pi
mov
std
sbb
pop
jns
push
scas
orb
dec
pusha
adc
jmp
fisttpl
jmp
pop
xchg
cmc
add
popa
sub
orl
push
pop
mov
mov
cs
xor
cmp
xor
jae
xchg
jbe
subb
test
xchg
push
call
mov
xchg
push
dec
add
fstpt
or
in
movsl
push
sub
stos
int3
push
jle
fstps
sbb
jmp
lret
push
xor
enter
fwait
sti
movsb
aas
mov
push
push
pop
rcrl
or
fists
mov
outsb
push
lods
mov
mov
fsubrs
mov
insb
ret
fucomip
sub
xor
rclb
jmp
jp
add
jbe
add
push
dec
dec
out
aam
add
jmp
pop
add
sub
xchg
xor
pop
or
pusha
cmc
and
sahf
jne
mov
mov
mov
mov
xchg
adc
lods
jg
pop
into
jae
scas
sar
dec
jmp
cs
movsb
xchg
ja
out
add
inc
sub
push
enter
mov
call
mov
ret
pop
insb
sti
or
push
push
orl
mov
iret
pop
mov
push
call
pandn
xchg
decb
les
lds
or
mov
add
adc
push
test
pusha
mov
push
add
pusha
xchg
rorl
jne
rcll
addr16
mov
mov
mov
jne
dec
dec
jmp
movsl
cmc
xchg
fs
int3
jo
push
inc
jnp
mov
jge
das
loopne
clc
rcrb
mov
sti
in
or
push
std
xchg
cmpsb
pop
loopne,pn
lcall
imul
push
xchg
add
int3
push
jmp
loopne
rclb
dec
ja
push
test
mov
xchg
stos
sub
stc
inc
mov
add
lock
or
mov
cmp
jns
pop
popf
jb
sub
lds
mov
sub
mov
push
cs
outsl
xor
inc
or
pop
add
loop
pop
add
into
scas
pop
out
test
out
mov
dec
xchg
in
lcall
insb
sub
cltd
pop
cmp
inc
jbe
les
aas
add
pop
sub
sub
hlt
mov
scas
std
dec
mov
jmp
aaa
pop
lret
cmp
dec
adc
cltd
jle,pn
adcb
subb
out
jecxz
fldl
cmpsl
xor
jb
lahf
js
mov
lods
jmp
in
sub
adc
sbb
mov
push
aas
push
jecxz
dec
in
in
mov
mov
jns
mov
mov
dec
mov
loopne
rorl
mov
inc
test
xor
daa
xlat
pop
shl
inc
and
iret
sbb
cmp
push
jae
xor
pop
xchg
or
xchg
nop
xchg
out
jmp
cmp
mov
xor
xor
out
adc
cli
mov
lahf
or
jmp
popf
repnz
mov
das
jle
pop
addb
orb
push
incl
push
mov
add
xlat
das
and
std
mov
mov
or
cmp
cld
subl
bound
jmp
dec
pop
clc
add
push
mov
adc
adc
push
cs
sub
out
int3
sub
dec
and
jle
orb
fistps
mov
and
and
jmp
jp
pop
add
sbb
and
rcll
cmc
jae
out
jp
or
repnz
xchg
push
jg
inc
mov
lods
pusha
testl
pop
js
or
or
pop
roll
add
push
mov
xchg
imul
mov
inc
mov
je
xor
pop
lret
decb
push
sbb
cmp
icebp
aas
xor
jmp
cmp
add
cmp
dec
jmp
jmp
lahf
jp
xchg
stc
mov
or
das
xchg
sbb
jg
mov
into
xchg
mov
jmp
xchg
bound
in
rorb
jg
call
and
sbb
sub
mov
jnp
int
ja
ja
dec
je
dec
aam
sbb
aad
sbb
jg
push
ja
xlat
and
leave
jnp
shlb
loope
or
addb
push
push
out
jmp
pop
in
add
add
sti
or
xor
mov
sub
jno
rolb
cmpsb
add
out
leave
xchg
imul
pusha
push
repz
inc
fnstcw
jmp
adc
mov
jae
int
and
or
xchg
jg
nop
fs
call
and
jecxz
push
cmpb
outsl
fdivrs
addb
xor
xchg
aam
sub
push
pop
ss
add
icebp
cmp
add
xor
fsubrs
gs
loope
push
cmp
jle,pt
in
sbbl
movsb
sub
rol
push
imul
pop
adc
out
sub
push
out
push
sbb
pop
jl
pusha
adcb
mov
pop
xor
sub
es
repnz
mov
popf
pop
mov
and
mov
out
adc
and
aas
jmp
xchg
lods
mov
in
stos
icebp
outsl
rol
pop
pop
pop
adc
out
mov
in
fdivrs
sahf
push
pop
repz
icebp
daa
cmp
or
jne
pop
add
pop
pushf
lret
push
and
jnp
movsb
fcmovne
mov
sub
bswap
xchg
loope
xchg
cli
aaa
stos
test
add
in
syscall
pop
pop
push
ficoml
mov
add
pop
incl
dec
and
mov
jp
dec
mov
add
cltd
loope
fisubs
mov
adc
push
jecxz
adc
insb
int
call
sub
add
push
les
adc
pop
out
call
dec
jne
cmp
adc
loopne
fists
dec
leave
addr16
and
call
cmp
mov
jb
sahf
and
sub
inc
xchg
ret
add
add
push
xor
outsl
adc
jl
push
or
repnz
push
mov
dec
shl
xor
push
inc
dec
popf
jno
and
ljmp
jmp
mov
ret
nop
mov
mov
or
dec
and
test
and
jle
add
popf
pop
call
sub
std
mov
sbb
test
dec
mov
jbe
bound
push
dec
arpl
jp
lahf
and
dec
dec
push
jne
lds
hlt
aaa
add
cmp
add
sbb
outsl
push
cmpsl
jg
loopne
sub
xchg
jmp
les
imul
pop
push
adc
scas
xorl
pusha
xchg
pop
mov
mov
je
mov
push
xor
dec
adc
pop
cs
push
add
xor
dec
test
and
pop
sub
shr
add
pop
dec
inc
mov
out
and
inc
or
sub
mov
and
xchg
dec
mov
mov
jg
jo
inc
lods
dec
mov
mov
aam
daa
jnp
adc
scas
pop
scas
sub
inc
nop
fiaddl
mov
xchg
cmp
pop
inc
jmp
cmp
dec
orb
and
enter
xlat
scas
dec
mov
add
xchg
ljmp
pop
mov
mov
icebp
aad
xor
jnp
inc
jbe
punpckhdq
xor
addr16
das
lock
mov
mov
not
or
xor
jno
loope
xchg
lods
call
dec
cli
mov
jnp
imul
iret
aas
adc
or
lods
sbb
push
andl
orl
scas
mov
add
add
sub
jo
push
jo
rorl
dec
cwtl
sbb
mov
jbe
mov
push
push
add
xchg
pop
mov
das
lods
jae
mov
add
popf
dec
jl
cmpsl
aaa
push
imul
and
cld
ljmp
push
or
sbb
and
ss
lret
call
adc
adc
jmp
add
ljmp
sahf
or
mov
arpl
pop
cmp
inc
out
icebp
or
mov
jge
jl
cmpsb
pop
ja
out
rcrl
adc
mov
loope
rclb
popa
jo
stc
sub
mov
insl
rorl
hlt
add
syscall
add
push
adc
cld
lds
into
and
enter
add
jo
loop
mov
icebp
xchg
jmp
fs
cmpl
sbb
push
out
repz
cmp
or
das
and
rcl
aas
pop
jno
add
movsl
sub
stos
mov
rolb
je
sbb
pop
xor
dec
push
jae
cltd
jne
sub
xor
lahf
mov
inc
inc
pop
mov
lret
xchg
movsl
pusha
or
ljmp
add
mov
dec
cmp
or
in
rcll
movsb
roll
lods
or
js,pt
mov
and
jno
sbb
roll
mov
adc
adc
rcrb
cmc
mov
push
push
mov
xchg
loope
push
ljmp
inc
push
mov
mov
mov
cmp
inc
xchg
push
sub
repz
or
push
adc
jno
and
lret
xchg
push
sbb
cld
inc
mov
ja
xchg
mov
aad
data16
int3
test
lahf
push
pop
xchg
fnsave
adc
adc
cmp
cwtl
jle
mov
xor
pop
mov
jmp
popa
adcb
and
add
or
ljmp
aaa
les
mov
sub
and
pop
and
dec
lods
fs
jl
cmc
pop
jg
ret
add
cmp
push
inc
repz
xor
or
stos
xor
cmpsl
repz
pusha
aam
inc
pop
cmp
lret
jns
xchg
outsl
mov
add
lock
pop
int3
lahf
add
cwtl
push
push
cwtl
jge
shlb
clc
add
ja
cmpsl
es
add
scas
mov
dec
bound
aas
js
push
xor
mov
mov
loopne
pusha
mov
dec
aas
pushf
js
icebp
roll
inc
jno
or
cld
mov
add
xchg
mov
and
add
xor
adc
dec
fcoml
shlb
addl
out
jl
out
cmpsb
enter
push
xor
fs
cmp
inc
inc
push
xor
cwtl
or
jecxz
or
add
jmp
jno
xchg
pusha
push
push
rcll
cmp
dec
and
mov
mov
or
and
inc
and
add
dec
movsl
sbb
sbb
add
outsb
pusha
mov
add
inc
in
dec
stc
fmuls
add
add
inc
sbb
cltd
inc
xchg
sub
in
subl
lock
lds
add
add
addl
jmp
push
rorb
and
inc
push
sub
mov
push
jno
repnz
mov
rol
add
lahf
sbb
fsubrp
and
add
xchg
daa
movsl
enter
subl
nop
xchg
lds
xor
nop
push
ret
aaa
shll
jecxz
xchg
fdivs
pop
jno
scas
mov
mov
add
sti
mov
adc
lahf
fwait
dec
inc
jns
int3
mov
ljmp
imul
ficompl
cs
shrb
test
mov
les
imul
jae
add
inc
inc
lods
pop
or
mov
out
push
scas
pop
push
push
mov
mov
mov
enter
add
notb
in
push
add
mov
adc
and
sub
inc
mov
int
dec
outsb
rcl
add
mov
in
sahf
das
outsl
or
aaa
cld
repz
mov
shl
mov
jnp
add
xor
xchg
add
aas
das
jne
xchg
jle
add
pop
sbb
pop
push
mov
xor
scas
dec
add
aam
adc
jecxz
pop
inc
fdivrl
movsb
mov
insb
sub
mov
pushf
mov
dec
loope
mov
faddl
or
mov
jmp
add
adc
adc
mov
sbb
push
xlat
xor
xor
mov
mov
jbe
add
rcrl
jbe
fs
addr16
subb
pop
adc
imul
and
pusha
ficoml
mov
sub
cwtl
and
ret
push
pusha
andb
call
notl
js
sbb
int3
push
inc
xchg
sbb
mov
roll
repz
call
push
cli
pushf
fiaddl
leave
cmpsb
aaa
mov
push
movb
inc
xchg
sub
imul
punpckhdq
fcoml
xor
push
cmc
or
sub
sub
jle
roll
movsb
bound
add
cmp
or
xlat
add
fwait
in
sbb
or
dec
fidivl
enter
sbb
add
int3
loopne
dec
or
out
repz
cs
mov
push
pop
pop
rclb
cmpsb
mov
add
mov
leave
ret
add
jle
or
ss
pop
fcompl
dec
out
inc
packuswb
pop
mov
push
sub
movlps
or
jmp
sbb
dec
xchg
sarb
insl
cwtl
mov
mov
shl
mov
sbb
mov
and
lods
add
jl
jo
cli
lcall
mov
test
shrb
scas
cmp
roll
xor
popf
pop
and
stos
mov
pop
jno
dec
in
mov
ljmp
roll
adc
fdivs
dec
movsb
fs
in
inc
cmc
leave
mov
cmp
push
scas
pop
sub
xchg
sub
sbbb
mov
pusha
out
js
push
lds
ret
xchg
incb
shl
mov
add
stc
out
aas
cld
cmp
jne
test
test
cmp
stos
add
pop
push
mov
inc
sti
and
fcoms
or
cmpb
dec
cltd
out
add
pop
dec
jecxz
pop
sub
add
stos
pop
in
push
in
cmp
sbb
jge
dec
jp,pt
adc
imul
es
xor
push
jae
ja
pop
pop
jbe
sbb
fstpt
aaa
mov
shl
add
lock
cmpsl
pop
cmp
add
jno
fadds
xlat
xor
and
dec
lret
sahf
mov
shll
cmp
repz
sbb
sub
push
or
nop
leave
dec
es
dec
leave
add
xchg
cltd
sbb
cmp
orb
add
and
aas
jle
subl
jb
add
shrl
cmp
js
fsts
inc
mov
js
pusha
int3
aas
icebp
loop
dec
xor
xor
andb
dec
cli
test
xchg
fisttps
pop
push
adc
xchg
jb
mov
add
in
fistpl
testb
aaa
movsb
addb
push
add
xchg
and
add
push
ficoms
push
and
mov
mov
movb
mov
pop
add
ljmp
jno
lret
xlat
adc
sub
add
fisttps
imul
or
jo
enter
orb
jl
movb
ljmp
jmp
sub
shr
lret
pop
cwtl
jo
or
mov
aaa
outsb
sbb
enter
sub
add
mov
out
sub
int3
xor
out
add
popf
pop
xchg
xchg
insb
cmp
int3
jo
ja
push
jmp
popf
cltd
sub
in
mov
or
movsb
sub
cmpsl
sbb
stc
stos
add
push
pop
in
cmp
imul
loopne
xor
and
fldl
add
push
divb
imul
shlb
daa
repnz
mov
sbb
sub
iret
mov
mov
adc
inc
cwtl
out
pop
sbb
sbb
hlt
or
add
inc
popl
mov
jp
sbb
cmc
sub
inc
or
imul
adcb
pop
scas
pop
pop
jp
hlt
mov
add
repz
jae
cmp
jbe
xor
jp
mov
aaa
xchg
jbe
adc
dec
loop
loop
lret
cmp
rcrb
jecxz
add
test
sub
aas
mov
pop
jge
mov
frstor
ds
inc
sarl
pusha
leave
sbb
data16
fdivrs
or
les
cmpsl
mov
mov
mov
into
or
out
lret
pushf
in
mov
and
bswap
outsl
repnz
dec
addr16
inc
cs
and
and
in
cmpsl
movsb
push
icebp
aad
shll
xchg
mov
out
sbb
pushf
insb
mov
pop
add
pushl
sbb
mov
adc
xchg
out
nop
enter
flds
jb
add
cltd
in
adc
cmp
fs
cmp
cmp
out
mov
mov
push
stos
push
mov
jno
shlb
into
pop
sub
push
rcll
inc
adcb
add
sbb
mov
shll
mov
iret
mov
or
faddl
jge
inc
icebp
mov
add
fs
add
xor
data16
inc
rorb
push
out
or
inc
lods
cmp
adc
std
cmpsb
ljmp
and
lahf
pop
and
cld
sbb
push
mov
jb
mov
fldl
mov
cmpb
movsb
lmsw
inc
mov
pusha
imul
mov
push
lock
in
pop
arpl
lret
popa
cltd
sub
sbb
push
xor
jge
pop
xchg
cs
sbb
lds
fsubl
xchg
jp
lret
pop
sbb
add
lahf
aas
adc
adc
mov
mov
loopne
xchg
sti
mov
lock
sub
xchg
jno
sahf
cmpsl
nop
and
add
notb
inc
hlt
add
jle
fucomip
insb
les
pushf
fildl
push
test
and
xchg
add
mov
add
cmp
int
insl
sbb
loopne
fisttps
add
mov
fmuls
add
scas
dec
comiss
and
or
orb
or
sarb
sub
mov
pop
nop
push
add
lods
pop
movsl
and
cmp
sbb
sbb
bound
add
add
mov
andb
pushf
adc
arpl
pop
out
mov
mov
push
mov
test
in
xchg
inc
lock
inc
add
dec
pushf
cli
ja
adc
push
nop
arpl
xchg
push
paddb
repnz
push
add
add
mov
hlt
ss
nop
lret
or
push
xchg
sub
jl
push
daa
add
les
mov
lds
sub
push
pop
mov
sbb
add
add
imul
test
xlat
je
push
add
mov
fbstp
sbb
mov
xor
pop
sbb
in
dec
sbb
jl
xchg
jb
outsl
test
ss
test
faddl
test
movsl
daa
pop
cli
inc
add
js
xchg
adc
and
iret
mov
jmp
add
mov
add
loopne
adc
mov
add
push
inc
repz
les
mov
cmp
mov
mov
aas
push
inc
cmc
out
and
xchg
sbb
cmp
xchg
add
fisttpll
mov
imul
sbb
pushf
stc
aas
or
in
repnz
addr16
jge
and
add
pop
xchg
cli
scas
add
add
sbb
xchg
fs
roll
or
inc
lods
cmp
add
add
popf
pop
mov
pop
mov
fs
push
cmp
mov
cld
push
jmp
in
push
xor
cmp
xlat
imul
rcll
sbb
test
loop
xor
dec
inc
rcll
mov
pop
aad
or
push
ljmp
bound
fistps
add
xchg
adc
pop
mov
nop
lock
mov
enter
leave
push
outsb
dec
je
or
xor
sub
jae
xor
push
inc
add
add
push
xchg
aam
stos
int3
hlt
mov
outsl
push
or
inc
mov
add
stos
dec
or
lahf
fldl
aad
in
sub
cwtl
scas
mov
or
rcrl
and
xor
jge
xor
les
fistl
cmpl
enter
aas
iret
dec
push
out
faddp
mov
mov
ss
call
pop
adc
add
xor
sti
mov
divb
add
addr16
push
mov
test
scas
js
jno
dec
sub
leave
inc
or
jb
jl
add
or
push
test
out
pop
mov
leave
mov
sbb
mov
sbb
fsubrl
stc
cmp
jp
pop
push
adc
sahf
fimuls
jle
xchg
jnp
sub
inc
test
push
pause
sbb
adc
cmp
dec
in
scas
add
xchg
stos
jmp
mov
lret
add
pusha
jecxz
mov
pop
ss
sub
cmpsb
les
add
repz
push
je
pop
mov
hlt
pop
sbb
fwait
add
push
inc
mov
lods
add
push
andb
pop
pop
mov
sub
sbb
push
xchg
sub
mov
jbe
mov
loop
add
xchg
loopne
xchg
fs
push
rclb
ja
fnstsw
mov
adc
pop
icebp
inc
xchg
pop
lods
insb
mov
xor
fcoml
add
sbb
decb
je
call
xchg
rol
push
add
notb
incl
mov
iret
int3
jge
dec
jne
addb
inc
imul
jecxz
addl
sarb
xor
mov
pushf
insb
and
lods
add
inc
mov
negl
add
loopne
test
inc
data16
mov
bound
mov
jg
je
jmp
mov
lahf
mov
pop
leave
xor
rolb
mov
mov
cmp
add
push
fwait
xor
adc
cmpsl
mov
add
in
and
out
mov
fcompl
test
inc
in
les
out
xor
xchg
cmp
add
add
dec
push
test
add
mov
sbb
testb
sbb
lods
pop
mov
and
lret
and
lret
shl
sbb
add
clc
xchg
xor
or
shrb
mov
fstps
icebp
mov
fcoml
filds
jae
push
pop
clc
bound
pop
roll
popf
std
mov
cmp
cmp
push
push
fchs
jmp
sbb
and
and
fldl
mov
sbb
and
pop
push
cmpsl
push
cld
xchg
fimuls
lahf
cmp
pop
push
mov
lret
mov
mov
push
dec
daa
jge
es
rol
cld
loopne
sub
std
cmp
sub
ss
lods
pushf
and
mov
add
jmp
add
sbb
push
setns
hlt
sub
imul
or
push
dec
add
aad
mull
xor
pop
pusha
dec
call
xchg
inc
mov
movswl
mov
xorb
mov
lret
jle
jge
pop
mov
shl
sti
xchg
rolb
insl
push
bswap
ds
roll
lahf
je
jae
sbb
hlt
jmp
mov
push
fnsave
xchg
add
dec
stc
sub
add
adc
dec
push
jbe
scas
faddl
mov
jmp
ret
or
je
popa
pop
cmp
jne
adc
mov
fmuls
sarb
jo
cmpsb
jmp
pusha
outsl
pusha
insb
push
sub
and
jbe
dec
mov
pop
sbb
push
shll
push
mov
stos
add
rclb
xlat
mov
stc
push
lahf
shr
cmp
add
xchg
pop
mov
xchg
imul
add
xchg
mov
push
out
pop
xchg
insb
cwtl
and
in
mov
outsl
pushf
and
cs
insb
adc
mov
add
adc
push
push
sbb
sbb
enter
jne
jno
xchg
addr16
rclb
xchg
rorl
fcmovb
jge
jmp
and
push
cmp
popf
sar
imul
or
xchg
mov
lock
in
push
test
iret
adc
jb
mov
stos
add
pusha
add
cmp
repz
insb
outsb
fmull
lds
adc
or
testl
pop
mov
out
pop
inc
mov
std
dec
sub
bt
sti
jecxz
cmp
int3
add
rcll
add
push
movsl
xor
mov
in
push
clc
xlat
mov
stc
loope
xchg
ret
xchg
icebp
rclb
ljmp
lods
and
cmpsb
push
add
stc
frstor
inc
mov
sarl
xchg
fcom
push
push
cmpsb
out
cmp
add
xbegin
push
sbb
jge
adc
adc
stc
pop
rclb
addl
mov
adc
sub
adc
imull
mov
cld
lock
call
cmovne
xor
dec
cld
xchg
and
sbb
rorl
xor
sub
mov
mov
fs
lods
inc
inc
into
and
call
or
andb
cld
jmp
pop
loope
out
push
out
enter
and
roll
mov
xor
int3
push
bound
mov
mov
jl,pt
inc
out
outsl
pop
mov
add
stos
xchg
xchg
push
clc
add
xchg
xchg
add
pop
into
mov
push
lret
sbb
inc
or
rcrb
xchg
pop
cltd
pusha
pop
dec
mov
add
mov
dec
sub
sbb
sbb
stos
loopne
cwtl
and
nop
dec
inc
out
inc
mov
inc
xchg
incl
insl
test
mov
cwtl
mov
push
mov
je
lcall
push
orl
in
into
pop
and
adc
mov
or
out
test
or
or
mov
stos
adc
imul
adc
inc
sub
or
shl
ljmp
loop
xor
add
jecxz
sbbb
cltd
xor
call
jns
mov
testb
cltd
dec
sub
fsubl
sbbb
cwtl
xchg
pushf
jo,pt
leave
mov
push
mov
imul
dec
fdivs
xor
push
inc
sub
add
lret
test
xor
cmpsb
fsubrs
push
in
stc
repnz
adc
testb
xchg
jbe
push
xor
inc
sahf
adcl
jmp
sbb
push
mov
cmc
and
jg
leave
mov
mov
out
lahf
jp
inc
push
jo
stc
adc
cmpb
sbb
jnp
loop
lea
pushf
inc
inc
sbb
adc
pop
dec
loope
xchg
repnz
or
xchg
pop
dec
je
cmp
aas
and
ret
or
or
xor
sbb
jge
add
mov
shl
repz
out
mov
adc
jl
add
lods
sbb
loopne
add
xor
clc
pop
dec
in
push
add
mov
out
jb
xor
sahf
mov
rorb
repnz
add
stos
leave
dec
dec
and
sub
jle
push
xor
pop
out
sahf
adc
subb
icebp
add
scas
mov
imul
in
bound
addb
enter
add
cmp
push
rorl
and
es
xchg
les
mov
js
or
call
stos
notb
js
pop
in
mov
sbb
mov
aad
sub
mov
xchg
outsb
pop
mov
iret
xchg
cmpb
add
adc
mov
orl
cmpsb
add
test
stos
cwtl
or
push
xor
loopne
xchg
mov
fs
adc
jo
sub
dec
nop
cwtl
sub
iret
lock
cli
lock
mov
lret
mov
or
xchg
aam
inc
shll
cs
push
push
out
and
call
movsl
outsb
cltd
jns
cmp
cmp
push
mov
mov
xorb
inc
scas
lds
mov
js
xchg
fildll
inc
add
cmp
mov
pop
cmp
stos
mov
mov
mulb
mov
cmp
sbb
sbb
sub
add
sbbl
insb
insb
sub
sub
mov
and
hlt
and
add
or
xchg
push
inc
mov
push
mov
pop
je
pusha
into
or
adc
mov
mov
jb
add
stos
ret
and
out
add
js
lds
bound
add
cmpsl
movsb
push
mov
mov
inc
mov
adc
jp
inc
cmp
je
pushf
cltd
mov
pop
out
nop
shrb
push
loop
mov
ljmp
pushf
addl
in
mov
xchg
hlt
iret
mov
dec
cmp
loop
shr
repz
jae
pop
and
aaa
stos
add
push
mov
adc
jge
clc
lods
dec
rorb
xchg
aas
push
mov
in
xor
call
and
movsl
cmp
outsl
pop
cld
inc
adc
cltd
adc
enter
and
push
pop
and
push
cmp
xor
xchg
addb
mov
inc
push
popa
mov
sbb
mov
cmpsb
int3
outsl
incl
ret
aaa
loope
out
pop
pop
add
scas
rcrl
xchg
xor
mov
inc
mov
repz
cs
inc
popa
gs
mov
mov
or
xchg
add
mov
xchg
xor
push
loopne
add
lock
pop
jb
loop
orb
push
adc
stos
mov
in
nop
pop
cmp
adc
inc
dec
dec
dec
enter
sbb
faddl
lcall
das
mov
mov
mov
shlb
pop
dec
sti
ljmp
mov
add
orb
icebp
sbb
les
or
add
sub
pop
mul
or
pushf
data16
aam
es
and
cmpsl
and
out
lods
nop
dec
std
xor
mov
mov
add
add
aaa
jmp
dec
xorl
test
pusha
cmp
mov
out
sti
subl
mov
adc
pop
call
sbb
sbb
or
push
add
ret
insl
and
enter
adcl
mov
movsb
pop
rclb
pop
xor
out
sbbb
imul
and
call
rolb
sbb
adc
call
jno
mov
mov
cld
push
test
xor
cmp
and
stos
add
xchg
insb
mov
jne
insl
adc
out
sbb
or
shlb
adc
xor
push
addb
dec
aam
push
clc
cmp
jmp
mov
es
pushf
inc
cwtl
add
shrl
test
xchg
je
sub
gs
cmpsb
out
add
fwait
add
mov
stc
push
dec
jl
repnz
cs
jmp
add
lock
ss
or
out
add
enter
add
cld
adc
push
cmp
bound
xchg
dec
fsubr
imul
push
aam
or
pop
cltd
inc
mov
data16
sahf
mov
dec
inc
cmpl
imul
fcomps
cwtl
sti
inc
outsl
mov
dec
loop
or
dec
dec
push
mov
jmp
cmp
jl
or
and
sbb
adc
xor
pop
bound
xor
cltd
sbb
in
dec
mov
movsb
or
add
test
push
or
jno
xchg
nop
test
cld
add
adc
dec
cmc
adcl
lods
xchg
jmp
add
push
test
loopne
cld
js
pop
popa
or
mov
rcrl
push
negl
cmpsl
push
or
and
subb
pop
faddl
cmp
mov
push
push
les
add
leave
das
cmpsl
or
inc
vphsubw
sar
jno
mov
call
or
or
sbb
incb
fs
or
sbb
push
adc
mov
or
and
cmc
out
dec
inc
test
mov
push
or
jmp
pop
das
pop
lahf
mov
xorb
add
pusha
cmp
xchg
push
sub
push
mov
or
or
repnz
sbb
push
sti
xlat
cmpsl
pusha
loopne
push
repnz
push
addl
fstl
nop
js
xor
jnp
bndldx
movsl
andl
mov
je
mov
test
and
fsubs
or
xorb
sub
add
ret
lea
cmpsl
push
inc
mov
ljmp
lahf
inc
es
mov
stos
add
push
addl
add
and
add
jb
insl
mov
xchg
cwtl
jl
ficoms
pop
testl
xor
xchg
out
cwtl
inc
aam
ret
mov
lods
nop
inc
mov
jg
enter
clc
pushf
test
cld
and
pusha
rcll
lods
mov
xchg
pop
sti
ljmp
mov
and
sub
les
jmp
test
xchg
adc
or
xchg
xchg
enter
or
sub
jge
sbb
daa
add
or
call
sub
sbb
es
mov
mov
and
icebp
or
and
addl
mov
cld
xor
shl
subb
notl
aaa
cli
and
mov
add
cmp
js
ss
cmp
add
pop
add
ss
xchg
inc
insb
push
ret
andb
aad
call
cmc
pop
nop
inc
lea
xorb
sub
dec
inc
add
js
testl
dec
pop
inc
pop
mov
lcall
dec
cli
add
mov
mov
sbb
mov
shrl
push
xchg
and
add
ja
test
xorb
pop
outsb
into
push
cwtl
add
jns
xchg
inc
push
loop
mov
pop
xchg
sub
inc
and
mov
lock
cmp
mov
xorb
shl
sub
push
mov
xchg
cmpsb
jb
mov
sub
je
or
loope
daa
cwtl
popf
push
fs
outsl
inc
popf
sub
xor
mov
in
pop
loop
dec
pushf
mov
inc
movb
les
or
test
jbe
add
popf
xor
sub
sbb
inc
cmpsl
pop
inc
add
mov
pusha
sbb
pop
xor
xor
jb
in
aam
rcl
cmp
enter
add
ljmp
outsb
xchg
sbb
pop
inc
test
inc
sub
pop
cli
mov
sbb
loopne
and
sub
xor
insb
push
add
pop
insl
call
loop
rcll
inc
or
jp
movsb
pop
nop
lods
push
xchg
je
mov
popa
adc
mov
shll
push
loopne
xchg
sbb
inc
dec
mov
sbb
push
ret
or
lea
xlat
adc
shll
push
mov
popf
jle
icebp
sub
or
movsb
adc
push
clc
fadds
mov
inc
mov
ret
adc
xor
leave
andb
mov
aam
push
scas
popa
aam
lods
adc
imul
jge
iret
movsl
mov
or
call
push
add
jge
lds
push
dec
xor
movsb
dec
rolb
push
sub
mov
cltd
mov
enter
fists
add
adc
pusha
nop
test
inc
mov
pop
and
cmp
es
test
les
xor
sbb
sub
sub
sub
adc
dec
outsb
jle
sub
pusha
cmpsb
jmp
dec
andl
sbb
push
in
pusha
mov
pop
inc
icebp
jae
stos
std
cmp
adcb
in
adc
xchg
and
sub
jo
sub
fidivl
test
loopne
arpl
shrl
adc
and
orb
jmp
mov
add
push
std
sub
jbe
in
adc
push
test
push
jne
xorl
mov
cmp
and
mov
add
das
mov
xor
int
pop
cmpsl
je
sbb
jbe
or
mov
push
jnp
inc
sbb
push
and
sub
and
cmp
and
mov
inc
adc
or
sub
pop
leave
addl
mov
nop
mov
lea
lock
and
sbb
mov
popf
lret
sub
pop
aam
jno
sti
xor
sub
inc
call
int3
ret
xchg
push
sbb
ds
push
xor
pop
sub
subl
adc
pop
fmulp
add
add
cli
xor
loopne
hlt
pop
aas
sub
jmp
adc
mov
add
xlat
and
out
cmp
fcomi
sbb
adc
add
xor
in
push
nop
sbb
inc
sbb
jbe
add
out
jp
fcomp
push
xchg
cmp
xchg
push
mov
lahf
fsubl
lret
sbb
in
rcll
or
dec
pop
push
lahf
xor
sbb
fcom
pop
jmp
fdivp
lds
jo
clc
push
out
out
sbb
pop
cmp
dec
js
out
clc
dec
and
cld
mov
add
inc
push
sub
jns
lea
mov
xor
push
add
sbb
sbb
mov
arpl
inc
lret
xor
push
sbb
ret
dec
cmpsl
aam
aad
jno
and
xor
dec
andb
clc
mov
jg
xorl
sti
test
je
dec
nop
and
xchg
in
mov
pop
or
pop
xchg
in
loopne
push
inc
aas
ficompl
sub
and
loope
sti
sub
push
jmp
js
std
push
sub
negl
push
add
cmp
or
subb
mov
fldl
add
mov
out
push
arpl
or
popa
xchg
dec
xor
adc
cwtl
js
clc
dec
mov
adc
pop
sarl
push
adc
xor
mov
inc
mov
into
pop
pop
xchg
cmp
or
sbb
or
clc
popa
addb
pop
pushf
filds
dec
push
jno
dec
sub
adc
ret
movsb
xor
dec
and
dec
dec
xchg
dec
and
inc
cli
and
dec
mov
mov
mov
mov
mov
mov
dec
dec
mov
dec
mov
pop
dec
nop
in
push
hlt
sbb
test
xchg
cmpb
pop
sysexit
dec
jp
push
mov
mov
lds
sbb
adc
icebp
cli
shlb
loop
adc
cmpb
push
xchg
add
mov
mov
inc
mov
mov
jge
mov
daa
and
xlat
and
clc
push
push
dec
cmp
sbb
fs
or
dec
dec
movsl
add
push
pop
hlt
cltd
add
sahf
dec
pop
xor
mov
jbe
dec
cmp
insb
sbb
rorl
int
push
sbb
cld
les
xchg
dec
es
in
sarb
fsubrl
pop
test
in
sbb
jle
xor
outsl
es
sbb
popa
push
jl
lea
or
stos
iret
inc
lods
or
add
jo
push
ret
loop
add
or
add
outsl
cs
dec
jg
les
mov
sbb
popl
add
movsl
mov
add
aas
pop
inc
fcomp
out
loopne
add
hlt
mov
je
add
aam
cmp
dec
dec
mov
mov
scas
enter
xchg
mov
mov
mov
push
add
or
pushf
stos
mov
cmpsb
jg
or
iret
jnp
sub
add
or
cmpsl
jle
fstps
mov
sub
sub
or
loop
add
enter
ss
add
add
adc
add
aam
pop
add
clc
scas
add
lahf
mov
cmp
push
ljmp
std
je
pop
add
push
insb
movsl
mov
lcall
shl
dec
mov
pusha
adc
adc
pop
dec
scas
sbb
in
icebp
inc
push
xchg
sbb
movsb
sbb
inc
repz
call
lods
int
pop
call
outsl
push
mov
mov
sub
scas
add
nop
clc
aad
shll
jle
aaa
sbb
rorl
arpl
mov
out
out
jae
mov
add
test
sub
and
jge
int
js
js
add
cmp
lret
sti
jnp
mov
xor
jle
add
imul
push
shlb
add
test
dec
pop
xor
jno
jne
repnz
fldl
cli
mov
mov
pop
adc
cmpsl
add
daa
je
sbb
mov
xchg
cwtl
mov
mov
clc
cld
stos
adc
je
jbe
sbb
jl
int
in
cs
add
repnz
add
and
or
jnp
jns
test
scas
mov
imul
aaa
adc
pushf
int3
movsl
add
add
bound
pop
jp
je
adc
sbbb
sbb
adcl
jge
adc
lods
data16
fnsave
push
addb
mov
jg
push
shl
addr16
fyl2xp1
data16
or
or
test
adc
out
add
fwait
ds
int3
dec
flds
daa
jmp
ss
movl
ljmp
mov
mov
add
call
cmp
xchg
ss
xor
add
popa
pop
add
xchg
mov
aas
mov
and
add
xorl
add
xchg
fisubrs
or
addb
mov
outsl
add
xor
add
cmc
insb
clc
push
pop
xchg
std
adc
test
ds
xchg
scas
psubsb
dec
push
fildl
add
popf
repnz
sbb
aam
inc
mov
add
dec
sub
pop
adc
call
sbb
mov
add
std
and
dec
loopne
mov
scas
mov
mov
ds
cmp
pop
in
cmpsl
sbb
repz
add
int3
cmpsb
sti
pop
add
xchg
xchg
adcb
outsl
sbb
jbe
les
stos
imul
jns
ljmp
and
mov
sbb
add
sbb
fwait
xchg
and
adc
jg
add
push
cmp
mov
in
inc
mov
mov
popf
shlb
xor
rorl
out
add
add
sbbb
pop
add
cs
inc
mov
in
mov
lock
js
add
push
loopne
js
clc
sbb
push
adcb
push
nop
fwait
mov
andb
mov
pop
cmp
add
arpl
clc
mov
add
mov
in
sbb
dec
pop
push
jne
movsb
mov
pop
in
adcl
jp
out
hlt
aam
sub
roll
es
inc
jne
dec
int
xchg
inc
sbb
cmp
xor
mov
repnz
loopne
jle
adc
pusha
sbb
incb
jbe
pop
jl
lahf
cld
out
outsb
add
dec
lds
test
pop
movsl
xor
cs
mov
dec
jo
adc
xor
subb
xchg
cwtl
pop
data16
sarl
and
pop
dec
add
inc
cmp
push
and
or
test
gs
sub
mov
rcrb
or
jbe
into
jg
lret
inc
ja
and
insl
inc
test
pop
inc
push
sub
sahf
inc
fildl
jg
push
lahf
sbb
cli
add
mov
popf
sub
sbb
mov
jp
shll
dec
inc
mov
lret
jo
andb
cmp
mov
push
fists
or
jns
enter
xor
imul
lret
insb
pop
or
adc
lcall
dec
pop
pop
pop
in
popa
add
je
cmpsb
aas
ss
add
lahf
je
outsl
leave
dec
fdivrl
test
shll
add
das
data16
mov
adc
add
mov
cmp
cs
movsl
ret
enter
mov
std
sbb
pop
mov
rorl
and
and
push
scas
fmuls
and
enter
mov
mov
mov
test
jle
mov
mov
fildl
jne
xchg
test
cld
or
inc
pop
jno
dec
cs
add
jmp
xor
scas
sub
or
xchg
lds
mov
sbb
ret
icebp
add
or
inc
add
xchg
adc
les
and
insb
or
popf
lds
pop
pop
aam
addr16
add
add
and
and
add
add
or
push
push
jno
in
add
mov
dec
cld
push
popf
rcrb
dec
or
push
loope
jns
cltd
jp
add
in
add
inc
push
jl
hlt
clc
mov
clc
in
and
inc
adc
orb
orb
and
and
lahf
aam
dec
xor
mov
cmp
lea
pop
rcr
xchg
add
lret
sbb
aaa
push
pusha
enter
cld
add
sub
fsub
out
pop
xchg
add
ljmp
or
out
xor
daa
inc
shrl
cld
cmp
inc
dec
and
out
ljmp
add
mov
aad
cmp
sbb
cmp
hlt
ss
mov
aam
and
dec
pusha
sub
stos
and
insb
xchg
mov
adc
push
mov
and
rorb
lock
jmp
cli
jnp
pop
or
cs
in
rorb
pop
add
out
adc
inc
xchg
out
ljmp
out
loopne,pn
mov
icebp
dec
insl
test
stos
test
add
dec
std
fstpl
add
cli
push
pop
sarl
scas
add
dec
push
fsub
and
into
add
sub
dec
rolb
subl
sti
xor
push
insb
ljmp
in
fucom
push
out
sbb
pop
mov
jmp
push
inc
and
pop
mov
add
fdivr
add
mov
xor
shl
add
inc
cmp
rol
sub
jno
test
loope
add
or
cmp
fldl
jo
sub
pop
adc
test
xor
les
add
and
xor
rol
shrl
mov
test
mov
loopne
aam
jge
movsl
clc
cmp
ljmp
js
push
sar
push
pusha
mov
ds
add
jno
int3
and
mov
xor
mov
add
aam
xchg
adc
nop
loopne
pop
loope
dec
stc
and
xchg
pop
rcrb
cld
sub
sub
test
push
into
in
jno
call
cwtl
lds
pop
out
fdivrl
push
dec
fdivs
clc
sub
jmp
xchg
add
out
push
mov
sub
shlb
mov
sarl
es
adc
imul
cmp
dec
cmp
roll
xor
fstpl
test
lds
fcomps
rolb
sub
add
xlat
insl
test
mov
sti
cmpsl
sbb
nop
enter
push
push
aam
push
mov
xor
fdivrp
add
aam
call
push
loope
inc
add
sub
jno
lock
cmp
cld
jge
xchg
fs
push
mov
inc
xlat
sti
je
iret
dec
xor
ret
pop
in
mov
push
daa
cwtl
call
add
idivb
push
or
test
sbb
fidivs
mov
xor
cmc
and
icebp
sbb
add
jmp
orl
cmp
jmp
and
xor
xor
add
mov
add
movsb
add
sbb
std
addl
add
and
jmp
pusha
loopne
std
ret
jecxz
mov
or
rorb
cld
cmp
fcomi
sbb
aaa
int
call
sub
je
adc
loope
add
fdivrp
int
shl
aas
dec
pop
pop
int3
jno
xchg
xchg
cmp
std
movsb
mov
or
mov
pop
out
divl
or
clc
aas
mov
push
cmp
shrb
jmp
cmc
ds
aad
roll
sbb
and
add
mov
jle
mov
jno
divl
pop
lcall
jno
jmp
stos
pop
cwtl
lock
xchg
je
dec
sub
mov
call
add
hlt
dec
gs
add
nop
and
out
sti
mov
clc
ds
jmp
das
aam
stc
jl
faddl
into
lock
in
daa
mov
hlt
xor
xor
shll
sub
sub
push
add
xchg
in
or
inc
mov
pop
add
shr
in
imul
mov
enter
sti
test
int
mov
lahf
ret
rorl
jmp
xchg
ficoms
dec
subl
loop
lret
cld
push
scas
add
in
inc
jb
add
and
add
dec
jbe
mov
mov
fildl
sbb
adc
or
dec
popa
jmp
mov
sbb
pop
or
enter
idiv
lahf
popa
cmp
mov
lea
shll
mov
pop
lods
dec
mov
mov
jecxz
sub
fidivrs
mov
sti
dec
add
cmpsb
movsl
inc
xchg
pusha
enter
push
mov
insb
sbb
gs
add
xor
sub
les
push
and
add
and
dec
or
in
lret
sbb
push
dec
mov
cmp
pop
push
sub
xor
fstl
call
call
xor
sub
in
shrl
les
push
loopne
mov
adc
mov
fcompl
sub
les
cmp
jmp
fwait
xor
lock
insl
dec
xorb
add
xchg
xchg
inc
ja
push
pop
rclb
hlt
and
add
dec
and
mov
push
mov
jae
outsl
xchg
xchg
aam
inc
add
or
lds
sbb
je
adc
xchg
addb
mov
xor
into
in
jge
fnsave
or
add
jnp
sbb
lcall
data16
fcoml
inc
orb
cld
fiadds
inc
testb
mov
xor
jns
sub
lea
clc
mov
mov
fstps
decb
and
xor
sarl
cmp
dec
int
xor
sub
jae
xchg
and
or
jp
loopne
or
imulb
hlt
pop
cmp
je
fildl
lret
bnd
dec
push
sbb
out
jnp
orl
xchg
sahf
pop
pop
fstl
inc
sbb
loopne
pushaw
je
outsl
xor
add
adc
lods
shll
and
dec
or
rol
add
xchg
jb
xor
pushf
nop
pop
pop
xor
shrl
repz
ss
sbb
out
mov
pusha
fs
mov
into
ffree
lcall
stos
divb
mov
add
pop
add
bound
enter
sbb
push
cmp
jb
loopne
mov
ds
sbb
sub
or
shll
or
fld1
adc
add
dec
lods
outsl
ja
mov
push
pushl
lahf
pusha
inc
adcb
sbb
inc
add
out
xchg
pop
jae
ret
nop
add
das
in
cmc
mov
mov
add
push
into
mov
lret
add
scas
idivl
xor
inc
mov
in
jne
loopne
inc
sbb
xor
rcll
in
mov
mov
add
sbb
sub
sbb
enter
clc
push
sub
shll
lret
sub
dec
add
sub
int
and
gs
jp
jo
pop
nop
push
or
js
in
mov
xor
mov
pop
sub
ljmp
fstpl
stc
inc
fcoms
ret
outsb
insb
test
rclb
push
pop
pop
mov
cld
and
leave
outsb
jae
faddl
aaa
xor
dec
in
out
stc
xor
enter
cwtl
add
out
mov
push
adc
nop
insb
icebp
add
inc
js
test
and
mov
ss
push
pushf
adc
or
mov
or
imul
leave
out
loopne
cmp
mov
test
mov
mov
mov
inc
cmp
add
xchg
pushf
mov
add
jecxz
mov
mov
or
notb
js
or
popa
cli
sub
test
aaa
lock
test
adcb
sub
inc
imull
push
jl
add
div
mov
cwtl
test
add
adc
pop
notb
cmp
sbb
push
push
stos
dec
dec
and
sub
add
insl
add
shrb
push
inc
xchg
sub
cmp
dec
andb
cmp
add
xchg
pop
mov
shrb
movsb
jo
xor
mov
loop
add
fmull
add
out
dec
jp
or
loope
es
push
das
lcall
pusha
jae
test
call
cmp
mov
mov
stc
cwtl
dec
and
pop
sub
fisttpl
cmc
addr16
pop
and
aam
sbb
jo
dec
jnp
sbb
push
adc
push
ljmp
add
add
mov
notl
add
pushf
movsl
inc
in
cli
add
cmp
rcll
and
cmp
mov
cld
xchg
add
stos
into
int3
jmp
ret
shll
aam
adc
mov
test
or
movups
add
pop
sti
add
out
jb
shll
ja
xchg
cmc
mov
test
aad
add
lods
jb
call
pop
add
js
or
gs
or
and
notrack
popf
xor
out
jecxz
jnp
add
xchg
fcoml
add
test
stos
mov
int
sbb
popa
hlt
das
add
mov
ljmp
push
and
push
add
pop
decl
add
outsl
jns
cmp
and
and
pop
outsl
dec
sbb
mov
cltd
xchg
and
jnp
add
mov
in
or
xor
inc
nop
xor
xor
add
pop
xor
mov
psubusw
lock
add
adc
mov
pushl
notb
cmpb
orl
jmp
jno
int3
push
loop
ja
inc
and
pop
es
loop
addl
nop
imul
sbb
mov
dec
shl
test
arpl
jno
push
inc
add
orl
fs
shll
mov
dec
shll
pusha
mov
loop
insl
inc
sbb
sti
add
add
dec
push
mull
and
add
in
fists
xlat
cmc
loope
add
js
xor
and
imul
outsb
int3
scas
dec
in
lret
js
cmp
xor
or
add
in
jo
xor
aad
lret
nop
in
push
mov
shl
add
xor
pop
jp
sbb
add
fwait
xor
aas
add
mov
jno
stos
pop
or
cs
pop
jecxz
jl
cwtl
xchg
mov
insl
xor
fmuls
jg
pop
jbe
lret
inc
sub
jp
push
and
in
cld
sub
rcrl
pop
mov
fmulp
divb
xchg
ds
test
insl
iret
adc
xchg
movsb
mov
xor
xchg
adc
or
ss
or
sbb
cmpb
test
adc
add
mov
loope
add
jge
nop
mov
lods
rcrb
imul
call
loopne
dec
sbb
adc
int
cld
jecxz
fadds
xchg
ja
xchg
outsl
out
push
cmpsb
add
hlt
loope
add
and
xor
push
add
pop
bound
daa
arpl
add
adc
ret
xchg
in
cmp
pusha
inc
loopne
sbb
sbb
jge
xchg
call
mov
lret
dec
out
adc
push
jl
mov
add
mov
popa
sti
clc
push
cmc
stos
add
imul
movsl
insl
jo
cmp
scas
ss
mov
dec
add
inc
mov
mov
cmp
jl
aaa
filds
add
inc
outsl
adc
pusha
mov
cmp
imul
pop
jb
fldl
sub
int3
mov
mov
out
mov
inc
roll
xor
push
adc
fcmovu
inc
and
pop
cmp
iret
mov
inc
cmp
and
sub
test
jg
jne
imul
sti
adc
inc
jne
pop
pop
mov
push
mov
dec
rolb
movb
xor
testl
pop
jp
add
adcl
rorl
adc
push
call
pop
ret
mov
pusha
push
and
ret
mov
mov
jge
push
or
stos
out
add
inc
in
sbb
cmp
lcall
sbb
shlb
or
aad
popa
xchg
add
or
push
cmc
adc
cs
push
xorb
xchg
cmp
mov
sbb
mov
pop
or
sbb
or
add
into
in
push
sbb
call
jp
add
inc
fnstenv
push
xor
xchg
pop
xchg
cltd
sub
pop
push
pusha
mov
jmp
add
push
jle
add
add
popa
mov
lldt
lds
sar
jmp
cmpsb
shll
mov
mov
jne
cmp
inc
add
adc
js
and
cmp
movsl
clc
sarl
repz
add
pop
orl
xor
insl
xchg
hlt
loopne
nop
adcb
xchg
inc
pop
popa
sbb
test
jo
or
mov
pop
test
and
mov
mov
or
add
cltd
addr16
push
adc
lods
mov
sbb
push
in
pop
add
sub
push
xchg
mov
pop
loopne
push
ret
add
imul
and
mov
fldcw
fists
add
or
inc
mov
jno
sub
ret
adc
mov
sbb
mov
mov
call
leave
xchg
test
mov
jle
push
xchg
and
inc
push
ret
sti
addl
mov
xor
add
test
or
lock
es
popa
rorb
add
jnp
dec
xor
xchg
add
mov
mov
and
pop
adc
dec
es
cmpsb
lret
pop
or
push
sbb
ret
mov
inc
push
ret
bound
mov
add
movsb
inc
or
pop
xchg
xor
loope
jg
fiaddl
or
mov
icebp
cmp
push
mov
out
leave
jb
aaa
test
add
sbb
stc
jo
mov
mov
push
mov
aaa
or
xchg
mov
or
movsl
sub
popa
call
xor
or
jbe
jle
ja
cmp
shll
outsl
cwtl
xor
xlat
adc
lcall
call
add
pop
adc
mov
push
sbb
xchg
dec
adc
sbb
adc
xchg
dec
std
jae
lods
icebp
addb
sbb
and
mov
pop
inc
push
sbb
ret
mov
push
add
mov
loopne
test
mov
data16
xchg
jne
inc
cmovs
sub
add
pop
mov
and
cs
and
add
ds
aam
orl
adc
nop
add
adc
xchg
sub
cmp
pop
inc
or
rorl
sbb
pop
adc
ds
in
nop
inc
dec
jno
inc
sub
cmp
adc
inc
push
ret
pop
sub
js
outsb
cmc
sub
pop
xor
sub
jbe
sbb
int3
ss
mov
mov
mov
adc
cltd
xchg
es
popf
or
es
insb
push
pop
mov
nop
mov
xchg
roll
movsl
add
mov
xchg
fsubs
cli
and
sub
call
leave
sbb
jmp
or
jnp
and
add
sub
or
push
pop
out
adc
dec
pop
pop
scas
mov
mov
rcll
movsb
sbb
subb
lods
test
das
ret
or
repnz
sbb
subl
outsl
mov
xor
movsl
enter
sahf
and
push
or
mov
push
mov
rcrl
cmp
xchg
loopne
aad
add
pop
stos
shlb
or
cmp
cmp
fstps
mov
aad
shl
mov
mov
mov
add
push
scas
cmp
xchg
pop
jmp
mov
out
call
add
jns
dec
lret
ljmp
xor
sub
addb
cmp
clc
adc
bound
fwait
test
insl
sbb
jo
mov
dec
loopne
inc
adc
es
mov
adc
push
push
mov
cli
pop
faddl
sub
add
and
insb
adc
pusha
inc
sub
test
and
mov
mov
cld
movsb
mov
les
mov
inc
push
pop
ret
dec
pop
xchg
xor
push
add
sbb
arpl
and
jmp
jecxz
jns
orb
mov
popa
push
movswl
gs
add
inc
mov
pop
jmp
xchg
orb
ds
test
cmp
shl
repnz
je
pop
mov
mov
roll
or
cmc
and
push
ret
cmp
inc
gs
or
int
xchg
call
pop
push
pop
and
pop
xchg
mov
leave
ret
jmp
hlt
add
aad
je
xor
loopne
xor
mov
flds
xor
and
add
adc
add
and
insb
test
inc
push
andb
sbb
mov
lahf
les
dec
das
dec
push
ret
ljmp
cltd
pop
pusha
push
rorb
sub
cmp
xor
add
cmp
mov
add
sbb
mov
adc
flds
push
out
sbb
mov
andb
adc
lret
mov
or
data16
cmp
cltd
test
or
xchg
pushf
sbb
and
add
add
arpl
mov
adc
les
xchg
mov
pushf
pop
loop
push
and
adc
mov
jns
ljmp
lds
jno
xor
xor
out
test
or
adc
adcl
les
mov
icebp
or
cli
test
push
push
sbbb
push
jp
add
cmpsl
mov
jae
pop
mov
icebp
inc
xchg
aam
mov
test
rorb
adc
enter
iret
or
sbb
mov
sub
mov
mov
mov
iret
add
jp
xchg
mov
push
mov
rcrl
sbb
add
call
das
add
add
imul
mov
inc
and
pop
push
mov
repnz
aad
sub
sarb
push
mov
xor
inc
xor
add
add
adc
pop
rclb
add
sbb
cli
cwtl
pop
mov
push
cmp
and
or
ret
mov
mov
nop
fimuls
int3
mov
out
jg
adc
jno
add
stc
add
pop
insb
nop
orl
insl
add
rclb
inc
or
out
and
mov
add
jae
xor
xchg
mov
jnp
adc
sbb
pop
dec
je
add
mov
add
xchg
add
and
mov
push
or
jo
mov
jno
bound
xchg
enter
ss
inc
fs
jno
lock
and
add
mov
and
sub
inc
dec
fsubrs
inc
popf
mov
mov
dec
dec
add
add
push
leave
jge
dec
lret
dec
push
add
or
add
and
popa
and
sbbl
repz
pop
cld
rcrl
cli
add
pop
mov
or
jns
addb
push
or
fiaddl
xchg
rolb
mov
aad
pop
sbb
aam
push
push
cwtl
jnp
testb
push
in
out
cmp
lea
or
xchg
inc
push
inc
push
lcall
inc
xor
sbb
outsb
loopne
inc
fmull
fidivrl
push
jmp
cli
pop
mov
pop
cmp
sbb
xchg
and
in
or
or
and
sbb
sbb
and
xchg
stos
inc
sbb
cld
push
mov
and
or
pop
and
pusha
xor
dec
add
loope
lcall
dec
push
cwtl
and
and
push
ret
je
sbb
mov
jle
loopne
outsl
and
sbb
cwtl
mov
orb
lods
sub
or
sbb
adc
mov
shlb
add
test
jno
sbb
xor
andl
inc
sti
ljmp
pop
jmp
add
addr16
and
sub
sub
jns
adc
addl
or
xchg
fimull
push
into
andb
dec
pop
or
jmp
fwait
mov
sahf
jmp
loopne
pop
cs
call
loope
mov
add
rol
adc
sbb
pop
leave
sbb
pop
ret
fs
fidivs
bound
inc
sbb
xorb
push
mov
pop
lret
adc
bnd
mov
add
xadd
push
sub
shll
add
mov
imul
jmp
or
adc
push
repnz
or
cmp
aad
test
push
lcall
nop
out
aam
fs
repnz
mov
and
or
adc
lds
push
add
add
mov
mov
subb
shlb
mov
les
sar
cld
das
inc
jne
sbb
sbb
add
xchg
popf
xchg
mov
orl
xchg
in
rcr
jl
push
popf
and
push
sarl
jnp
mov
cmpsb
pop
add
mulb
mov
jb
dec
xor
mov
or
test
std
rolb
ljmp
push
and
pusha
inc
push
xchg
ret
mov
shll
sti
inc
dec
push
out
adc
mov
pop
pop
adc
pop
mov
lahf
push
dec
das
xchg
and
add
push
adc
xchg
push
sahf
aam
shrw
cmp
push
push
inc
mov
xchg
pop
imul
mov
and
jmp
fisubs
cmp
pop
das
adc
pop
inc
push
testl
mov
xchg
iret
test
xchg
jmp
aad
in
dec
push
pop
sbb
in
adc
mov
sub
xor
add
and
call
xor
or
mov
push
jno
loopne
push
and
pop
jp
lds
int
adc
loop
xor
push
ljmp
sbb
sbb
xor
pop
loop
outsb
mov
out
and
pop
mov
cwtl
sub
mov
aam
enter
adc
or
dec
inc
or
add
jno
add
lea
cmpsb
popa
mov
in
jbe
adc
int
or
mov
test
jecxz
and
push
outsl
test
out
mov
aas
aam
xchg
pop
mov
cld
xchg
pop
mov
push
dec
ficoms
std
push
ret
dec
sti
mov
push
mov
popf
and
pop
subl
addb
xchg
push
cmp
ret
subl
scas
orl
ret
shlb
pop
lea
cmovge
add
stos
sub
adc
push
in
xchg
mov
add
push
adc
in
xchg
dec
jbe
add
aam
aas
mov
aam
sub
push
mov
push
ds
gs
inc
dec
fwait
adc
push
outsl
adc
add
pop
into
cmp
add
adc
sub
je
popf
xor
int
dec
adc
mov
add
fnstsw
scas
bound
sub
mov
clc
push
test
mov
adc
bound
icebp
adc
or
xchg
sub
mov
test
lods
adc
nop
icebp
dec
dec
ds
inc
jmp
mov
aad
loope
mov
mov
mov
xchg
sub
orb
add
insl
sbb
add
mov
mov
pop
test
xor
push
add
mov
adc
jg
mov
inc
loope
push
aad
and
pop
mov
popa
jno
dec
daa
push
in
add
lds
xchg
inc
sbb
add
sub
js
add
push
dec
mov
pop
lods
pusha
inc
jmp
aaa
mov
icebp
cli
jp
jp
adc
xchg
aad
mov
sub
or
shl
stos
push
push
push
mov
stos
inc
sbb
dec
xlat
pop
and
adc
in
inc
sub
fnstenv
cs
mov
inc
test
cmp
les
into
mov
dec
adc
mov
xchg
in
lret
lahf
xchg
inc
out
add
and
mov
and
int3
mov
pop
shlb
dec
flds
and
scas
pusha
pop
add
add
rclb
iret
shll
mov
scas
or
add
nop
xor
push
aaa
jne
sub
xchg
arpl
add
add
lret
add
or
push
cmp
jae
pop
gs
nop
lods
lods
adcb
leave
push
jge
pop
xor
jp
mov
mov
fld
in
rolb
insl
and
pop
mov
add
dec
call
shll
dec
mov
xchg
call
jnp
std
loope
insb
fcoml
add
lcall
icebp
pusha
cmc
pushf
cmpsb
lds
push
popa
mov
mov
add
rorl
sbb
lcall
cmp
and
jecxz
and
sbb
sub
add
fildl
add
pop
or
stc
pop
jns
clc
xor
icebp
push
out
push
aam
pop
scas
jnp
mov
add
popa
aam
mov
mov
xchg
xorb
jo
and
cwtl
xchg
nop
push
cs
adc
lds
bound
xchg
out
loope
add
sub
inc
or
mov
loope
cs
daa
and
aaa
cltd
mov
mov
xor
and
inc
inc
push
adc
add
mov
loope
jbe
and
adc
scas
outsb
data16
pop
and
push
mov
popa
xor
sub
popl
daa
arpl
sbb
mov
inc
enter
add
andl
sub
lock
hlt
pop
test
mov
and
push
adc
sbb
aam
push
inc
jle
daa
jmp
adc
pop
push
stc
dec
pop
fs
clc
push
outsl
jg
shl
push
pusha
jbe
or
dec
add
orl
ja
xchg
adcb
mov
xchg
pop
sub
add
mov
mov
enter
push
pop
dec
test
pushf
not
mov
xchg
cwtl
add
mov
ss
pop
jno
xor
fcmove
mov
aaa
incb
jle
sbb
lahf
xchg
push
adc
or
mov
jae
lea
aam
imul
shrb
xor
fcmovnbe
or
jb
push
jae
add
leave
lock
mov
repz
push
adcl
insb
out
pop
dec
int
rclb
push
xor
sub
jge
add
xchg
and
jnp
jns
push
mov
sub
cmpsb
rclb
adc
mov
lods
test
mov
popw
push
xor
xchg
fdivrs
inc
and
call
push
and
outsb
and
cmp
loope
jge
and
dec
pop
dec
mov
lods
mov
test
lods
out
push
inc
icebp
pop
cmpsb
sub
and
fcoms
xorl
fisttpl
aas
pop
sbb
daa
scas
cs
lods
roll
and
ficoml
xor
mov
mov
dec
into
lods
mov
pop
in
add
sbb
mov
popa
fildll
add
movsb
add
shrl
cld
popa
push
loope
jno
adc
movsl
mov
sarl
add
das
push
into
sub
fs
jae
iret
stos
or
jle
fstps
jmp
sbb
pop
hlt
dec
ret
jge
es
popa
int
in
sbb
aaa
push
pop
scas
test
cltd
aam
jmp
pop
testb
gs
lret
push
fdiv
and
mov
sbb
xchg
jge
pop
fists
mov
mov
inc
and
jg
mov
scas
add
xlat
push
nop
cwtl
outsl
xchg
adc
jb
mov
std
sbb
in
add
pop
cmp
jmp
sbb
push
jno
shll
jecxz
int3
add
xor
cmp
sbb
add
adc
pop
cmp
and
leave
pushf
test
fs
and
rorl
iret
dec
stos
sbb
negl
mov
or
int
dec
push
inc
add
dec
mov
sub
out
rolb
fimuls
dec
dec
fwait
testb
lock
push
mov
mov
or
test
or
dec
fcmovne
and
xor
dec
xor
push
cmpb
mov
inc
and
dec
mov
imul
adc
cmp
push
add
and
mov
movsb
add
movsl
mov
push
add
loop
pop
popa
mov
cmp
xchg
mov
nop
test
ss
sub
ficoml
jmp
adc
orl
xor
add
pusha
or
adc
or
or
or
push
mov
xchg
fldl
add
add
add
inc
adc
mov
iret
fwait
xchg
xor
mov
mov
int3
jmp
sbbb
and
add
adc
lea
pop
sub
ret
lss
aaa
add
aaa
pop
jmp
js
mov
es
inc
and
mov
add
sub
jbe
inc
icebp
cli
push
aaa
popa
aaa
xor
mov
mov
sbb
mov
mov
lea
lock
push
pushf
loope
add
dec
adc
or
pop
push
jo
lods
and
in
int3
add
push
lock
add
popa
es
fucomp
pop
mov
push
jle
push
sbb
push
sbb
add
cwtl
fs
jnp
dec
fwait
scas
push
out
andb
mov
add
out
adc
adc
or
sbbb
cmp
add
xor
movsb
xchg
mov
inc
push
add
sbb
int
add
jne,pn
cmp
rclb
in
test
cmpsl
push
call
xor
push
iret
sub
add
xor
ret
aaa
sbb
pop
aas
mov
pusha
pusha
mov
iret
repz
pushl
pop
les
mov
mov
mov
aad
test
fldl
inc
out
dec
xor
adc
add
sbb
sbb
lret
xor
adc
push
adc
bound
inc
adc
xorl
and
pop
xor
call
sti
xchg
or
aas
pop
cmp
fidivs
rorl
rclb
aas
pop
sbb
ja
lock
sub
sarb
mov
add
aas
pop
or
mov
pusha
hlt
mov
popa
insl
pusha
jl
sub
xor
ficompl
subl
inc
xchg
push
jmp
js
lods
push
jle
inc
ds
or
inc
mov
push
adc
iret
inc
mov
xchg
popa
cmp
jns
in
lcall
add
mov
mov
ja
or
sub
add
or
movl
adc
mov
xor
ret
sub
mov
popa
orl
inc
lea
xchg
cmpsb
inc
mov
sub
dec
test
mov
cmc
fnstcw
cmp
pop
loop
pop
outsb
adc
xor
mov
push
imul
mov
mov
mov
add
or
push
xchg
sbb
call
sti
push
jne
mov
xchg
xchg
or
aaa
mov
repz
cmc
mov
add
mov
xor
inc
xchg
cmp
or
call
mov
out
xchg
xor
lahf
mov
xchg
cmc
incl
mov
dec
pop
test
xor
or
cwtl
or
sub
xchg
jno
rcrb
cmp
and
orb
les
jo
add
in
daa
test
jmp
mov
and
inc
push
push
cltd
icebp
subb
leave
xor
sahf
ja
fcmove
imul
add
add
jo
dec
mov
add
ret
mov
adc
rcl
mov
jg
dec
popa
mov
push
dec
inc
pushf
mov
pop
sub
shrb
cltd
imul
mov
outsl
stc
das
mov
sub
roll
mov
sub
add
movsl
sbb
and
dec
leave
lret
fdivrs
and
xchg
cmc
push
adc
inc
or
push
add
fiadds
lret
in
test
sub
pop
call
mov
xor
popa
mov
rorl
xchg
adc
add
sbb
add
out
popa
mov
addr16
das
or
push
repz
jo
mov
fsubl
iret
inc
sub
and
xor
sub
xor
fsubrs
in
test
jnp
sbb
add
xchg
pusha
in
mov
and
dec
cli
xor
adcw
jecxz
add
push
pop
imul
pop
adc
inc
popa
inc
leave
pavgw
xchg
cmpsb
out
cmc
sub
enter
adc
rcl
push
fiaddl
sarl
je
cmpsb
mov
sub
mov
in
sbb
add
mov
aad
xchg
xor
push
imul
pop
sbb
jo
mov
shrl
mov
insl
mov
sub
dec
ficoml
inc
sub
mov
push
pop
je
add
pop
loope
pop
cld
lea
scas
sbbb
fmuls
sub
callw
ds
jae
mov
cltd
xchg
push
push
add
mov
inc
jmp
cmpl
xor
add
add
mov
mov
jge
xchg
je
rolb
push
arpl
add
outsb
and
data16
push
popa
or
cmp
jae
sub
arpl
je
mov
clc
jae
data16
jb
fs
jbe
insb
cmc
jo
ja
mov
insb
lea
addr16
jecxz,pn
push
jns
jne
or
sbb
jo
jae
outsb
inc
push
push
dec
sub
jmp
js
inc
cmp
fs
jmp
or
clc
fisubl
ss
inc
push
filds
repz
push
inc
call
dec
cmova
push
push
loope
jb
decb
cmp
inc
repz
mov
xchg
and
outsl
sub
xor
jo
dec
push
dec
cmpsl
rdtsc
sbb
vmread
add
lock
mov
mov
pushf
pop
pop
sti
mov
scas
ja
xchg
outsl
daa
pop
and
gs
sub
push
rorb
xor
sub
xchg
mov
lret
sbb
enter
sbb
into
jno
sbb
ret
sbb
jno
or
add
mov
sub
xchg
sbb
xchg
daa
push
nop
cmp
loop
adc
push
xor
inc
ret
daa
aam
rcrl
rorw
and
mov
loop
lcall
xchg
pop
or
xchg
add
or
add
out
inc
or
xor
sbb
or
xchg
and
nop
ret
fs
sbb
xor
andb
and
clc
jg
out
xor
and
gs
sbb
jle
add
bound
rcl
inc
arpl
sbb
aam
faddl
jle
add
pop
mov
add
pop
push
fstpt
sub
add
pop
push
and
mov
sub
mov
lock
or
inc
mov
addr16
sub
inc
fistl
lods
aad
mov
pop
shl
popl
pop
pop
mov
xchg
mov
cmc
push
mov
adc
sub
adc
sar
xor
cmp
cmp
jl
repnz
sbb
sub
popf
mov
imul
ja
push
jno
xchg
out
or
xor
or
inc
xchg
mov
shll
and
or
dec
pop
push
pop
scas
out
add
aam
cmp
lahf
subl
jbe
ret
mov
lods
push
repz
popa
push
ljmp
push
pop
xchg
cmpsb
sub
mov
jnp
pop
pop
aaa
testb
lahf
mov
add
cmp
daa
lds
stc
imull
popf
add
push
cmp
pop
inc
mov
inc
jne
or
jns
mov
jmp
daa
in
dec
negb
data16
mov
add
lock
dec
out
pushf
nop
notb
push
rorb
inc
pop
lods
cmpb
mulb
fistpll
pop
aaa
faddl
cmp
pop
stos
and
scas
out
ret
lods
pop
cld
fistl
mov
jmp
and
cld
adc
data16
push
lods
and
lahf
add
pop
sahf
call
sub
stc
bound
jae
sbb
or
add
stos
mov
add
lock
lods
mov
sbb
or
jnp
les
inc
xor
std
stc
add
in
xor
outsl
iret
pushf
repz
out
jge
push
das
repnz
and
fsts
jl
pop
sub
mov
xchg
sub
clc
out
jge
inc
mov
add
mov
adc
add
inc
ds
add
cmc
xchg
add
dec
adc
add
movsl
and
popf
push
add
je
lret
jl
ret
cmp
xchg
out
add
mov
lock
jp
iret
stc
orb
and
pop
dec
out
daa
inc
push
sbb
icebp
aaa
jle
orb
orb
pusha
xor
cwtl
add
pop
cld
push
sti
lahf
rcrb
add
test
sub
jns
fildl
test
mov
sbb
sbb
roll
loop
add
jge
xorb
sti
inc
xchg
and
dec
loopne
ja
daa
and
xor
popa
add
imul
stc
or
dec
daa
hlt
les
insb
repz
add
cmpsl
jp
jge
add
pusha
idivb
xor
add
mov
movsl
stc
test
add
mov
rorl
sbb
sub
test
add
int
outsb
mov
sbbl
data16
pop
xor
add
adc
pusha
sub
ljmp
jl
push
mov
ret
sbb
mov
and
arpl
inc
add
and
pop
pop
mov
mov
jmp
sub
jno
scas
and
and
push
or
and
sbb
sbb
enter
hlt
dec
cli
pop
pop
pop
add
add
mov
shll
test
add
sbb
mov
sbb
cmp
shlb
loope
stc
aaa
test
mov
xor
sbb
add
pop
mov
and
sub
and
movsb
add
sub
mov
or
jnp
les
inc
aaa
repz
enter
add
jge
pop
push
inc
and
or
mov
mov
nop
sbb
pusha
jnp
rolb
hlt
sub
add
jno
cmpb
pushf
or
mov
addr16
and
pop
leave
sarb
mov
jae
and
pop
add
push
fdiv
inc
insb
adc
xchg
cwtl
dec
push
popa
add
mov
ret
ss
or
outsb
dec
add
dec
bound
sub
adc
rcl
jl
arpl
jb
test
pop
add
cld
mov
push
call
sub
pop
pop
xchg
and
and
add
xlat
jle
add
lret
sbb
mov
and
xchg
add
adc
stc
adc
je
dec
xchg
add
clc
pop
popa
sub
icebp
popf
shll
cmpsb
sahf
dec
call
xor
xchg
bswap
mov
xor
cwtl
and
fdivp
or
test
xor
adc
xor
jae
mov
cmp
and
rclb
lret
loope
inc
in
inc
aas
add
mov
mov
xchg
or
mov
push
mov
scas
or
shll
stc
testl
out
sahf
sbb
mov
inc
ds
je
pushf
clc
stos
mov
repnz
dec
ret
jnp
fwait
popl
or
dec
cmc
push
cmpsl
pop
cmp
dec
int3
out
mov
shl
pop
mov
js
imul
aad
add
xchg
pop
and
int3
and
and
and
dec
lahf
lock
sbb
test
inc
int3
mov
shrl
or
scas
outsl
mov
fsub
mov
mov
int3
fnsave
jb
add
iret
add
inc
loopne
adc
sub
cmpsl
xor
aam
data16
hlt
pushf
test
sahf
out
icebp
add
test
adc
in
cmove
je
inc
sbb
mov
dec
test
inc
je
push
clc
mov
and
scas
sahf
jns
cmp
ret
jno
in
mov
in
xorl
mov
arpl
xchg
bound
push
add
mov
imul
std
sub
lods
mov
xchg
pop
test
loope
adcb
bound
sub
xchg
xchg
push
test
push
pusha
jnp
scas
fwait
and
inc
sub
out
or
or
jnp
mov
mov
mov
add
pusha
divl
and
bound
lret
xor
inc
pusha
inc
mov
xchg
jge
add
add
repz
inc
mov
test
sub
int
fnstcw
add
xchg
adc
xor
sub
pop
clc
lds
sarl
xchg
add
pop
lods
and
add
mov
mov
lret
arpl
sbb
xorl
dec
cld
or
ljmp
inc
lea
sbb
pop
inc
test
adc
push
push
mov
sub
fisttpl
call
pop
jmp
add
jge
add
sub
ja
cwtl
lock
xchg
sub
test
mov
lcall
inc
xchg
xor
inc
std
or
icebp
xor
and
mov
pop
ja
or
lods
adc
sbb
xor
and
or
scas
add
fimuls
sub
jmp
jg
std
push
subb
mov
jnp
xor
xor
mov
nop
lret
and
cmp
outsb
sub
inc
add
adc
mov
mov
pop
mov
cli
inc
sbb
push
adcb
or
mov
sbb
das
aas
and
ja
ds
and
lret
jmp
ljmp
push
dec
sub
add
and
jbe
ficoms
push
sub
je
add
dec
iret
add
das
pop
add
popa
mov
stc
jecxz
xor
js
lret
cmp
mov
fwait
pop
int3
in
int
inc
cmp
stos
and
aas
data16
cwtl
jns
mov
add
fsubs
push
dec
sbb
stc
xchg
fcomps
add
push
mov
add
ret
movsb
in
push
pop
xchg
int3
xor
lock
insl
cmpl
rol
add
lret
add
push
jns
loop
pop
pushf
push
sahf
pusha
xor
iret
js
in
add
xchg
add
ret
test
test
mov
and
xor
push
mov
dec
in
outsl
dec
cld
inc
or
add
pop
jae
dec
rcrl
rcrl
mov
stc
inc
mov
es
sub
adc
xchg
mov
add
cmc
cmp
jp
cmp
pop
rorb
lret
xorb
xchg
fadds
movb
in
cli
inc
in
push
outsl
add
bt
jb
cmp
shlb
inc
xchg
sbb
inc
mov
jp
in
mov
add
mov
scas
test
jmp
mov
mov
ds
sub
pushl
push
xchg
add
je
inc
push
nop
ljmp
data16
pop
push
loop
sbb
inc
mov
push
outsl
add
call
add
xor
cmp
jmp
mov
xchg
jae
xlat
mov
rclb
sub
fimuls
mov
mov
cmp
and
xchg
add
jge
fisttpll
xchg
roll
push
xchg
mov
or
pop
jo
add
pop
push
aaa
out
addb
sbb
in
sub
dec
insb
orl
lods
divb
fwait
add
or
js
ss
sub
loopne
fdiv
in
push
add
or
mov
test
add
xchg
mov
in
stc
shlb
jmp
andb
mov
add
out
aaa
add
fstpl
adc
mov
add
push
movsb
add
incb
cmp
mov
movsl
das
sti
jb
jmp
inc
rolb
pop
pop
packuswb
pop
das
adcl
pop
cmp
xor
fnsave
popf
negl
sahf
std
loop
sahf
pop
inc
sbbb
mov
adc
repz
push
int
sti
jne
sub
pop
push
xchg
or
out
inc
jnp
sub
push
mov
push
jl
add
aam
adc
mov
outsl
add
add
je
out
sbb
std
loope
cwtl
aad
imul
das
pop
jecxz
sahf
je
jnp
add
fsubs
and
push
mov
or
mov
decb
sbbl
iret
xor
add
out
in
jp
int
js
push
add
add
andl
jle
jmp
lcall
rorb
lret
and
and
inc
outsb
rcrb
mov
mov
dec
cmp
add
sub
fwait
xor
lret
shr
sbb
jns
mov
or
pop
aaa
dec
cltd
cmp
cmp
fiadds
add
popf
sbb
add
mov
cwtl
verr
jbe
xor
sti
mov
sbb
js
add
push
push
add
pop
ja
aam
push
shrb
hlt
xor
or
loopne
adc
inc
add
push
sahf
sti
add
bound
sbb
add
add
jne
cmp
xchg
clc
push
rorb
xor
push
psrlw
adc
inc
xchg
test
lods
adc
fists
dec
outsb
mov
adc
leave
data16
mov
pushf
ret
add
ljmp
loopne
dec
rorb
add
add
rclb
lods
add
inc
jne
sbb
dec
call
loope
cli
push
in
xchg
add
scas
movsb
mov
add
stos
leave
scas
add
adc
push
incl
popa
lods
pop
cli
add
add
push
pusha
imul
lea
in
pop
test
orl
shr
inc
push
inc
pop
rdtsc
in
sub
xchg
jne
rcll
pop
adc
mov
inc
scas
xchg
and
mov
add
fdivrs
push
loope
sbb
dec
mov
inc
lcall
movsb
or
lea
hlt
xchg
hlt
xor
pop
outsb
in
jp
sub
shl
cmc
adc
cmp
aad
jno
xchg
sti
pushf
dec
icebp
sbb
stos
adc
repz
xchg
nop
jns
sbb
xchg
bound
mov
jle
arpl
add
aas
test
dec
mov
add
inc
fwait
add
dec
das
push
and
sub
add
cmp
dec
xchg
push
mov
add
lea
xor
jns
ds
cs
push
pop
enter
cmpsl
add
ss
cli
mov
aam
adc
outsl
test
sub
orb
pop
dec
test
bound
sub
mov
mov
in
dec
into
fwait
pop
pop
xor
sar
int3
loopne
xlat
add
ret
sub
jns
test
pusha
xchg
pop
sub
sub
stos
js
pop
ds
pop
mov
jge
cs
push
add
xor
mov
mov
fnsave
mov
or
push
push
mov
testl
mov
sbb
inc
vmulss
pusha
mov
or
insb
or
adc
add
pop
xor
loopne
dec
jns
add
je
add
cwtl
cmpsl
shlb
insl
jle
add
ret
mov
orb
pop
fdivrs
sahf
sub
add
push
pop
xor
dec
lea
and
cmp
popl
add
nop
pop
lea
ss
into
add
xchg
leave
add
js
fwait
loope
add
sbb
ss
mov
mov
or
loop
mov
dec
or
mov
lods
outsb
inc
ljmp
and
jo
cltd
fcoms
add
pop
lds
inc
inc
pop
mov
pushf
add
lret
cmp
add
mov
add
sbb
outsl
mov
add
int
lock
stos
add
and
mov
mov
jl
ss
into
dec
push
push
mov
inc
mov
mov
jge
out
in
or
cmpsb
fcomps
and
pop
or
pop
shrl
ds
add
and
mov
fldt
jb
popl
cwtl
or
xor
jno
dec
pop
cmpsb
sti
out
add
mov
nop
xor
xchg
mov
int
push
inc
sub
dec
outsl
sahf
test
xor
dec
pop
pop
sub
or
jae
add
push
inc
jl
push
mov
popa
gs
sub
xchg
add
pusha
sbb
mov
xchg
call
sti
bound
idivb
add
in
xchg
shl
adc
cld
imul
stos
ret
cmpps
xchg
mov
ss
push
mov
filds
sub
sub
lcall
mov
jl
add
pop
std
push
movsl
pop
push
addr16
and
cmpb
dec
cmp
addb
or
adc
gs
test
add
imul
int
add
jp
dec
in
inc
add
js
aas
lds
mov
add
repz
add
xchg
sti
add
adc
push
nop
add
xchg
inc
add
inc
lods
inc
add
test
rcrl
pop
sbb
in
add
es
sbb
ret
and
jns
in
sbb
add
pop
mov
jne
popa
mov
and
scas
out
ret
mov
sbb
add
stos
fbld
cmp
xor
and
sub
jnp
mov
nop
mov
pop
mov
loop
repz
mov
clc
inc
mov
shll
je
sub
dec
daa
outsb
jp
cli
outsb
std
sub
push
dec
mov
sub
and
sub
fildl
mov
xorb
push
mov
out
inc
mov
mov
dec
cmpsl
andb
popf
xor
js
sub
les
mov
adc
pop
rcr
xor
insl
jae
lahf
adcb
jbe
mov
mov
sbb
inc
enter
add
xchg
subb
pusha
add
or
insb
lret
jo
arpl
sub
repnz
adc
lock
popa
add
or
fdivrs
push
xchg
ljmp
sahf
mov
roll
stc
inc
in
sbb
and
outsb
cmpl
mov
and
stc
add
and
roll
dec
or
add
sub
outsb
cmp
cltd
push
icebp
sbb
aaa
rcl
jle
int3
in
movsb
popf
pop
pop
adc
pop
jmp
xchg
out
orb
gs
mov
dec
mov
jnp
hlt
cwtl
add
cld
pop
xor
sub
ret
rolb
out
add
cli
cld
push
cs
test
lds
sbb
xchg
add
add
ret
fcompl
add
ss
popf
adc
push
xchg
xchg
loope
sti
wrmsr
popf
add
dec
lea
in
fadds
add
pop
sbb
repnz
xor
loop
out
dec
aas
add
dec
mov
sbb
and
loop
aam
fidivrs
mov
js,pt
inc
sbb
add
pop
pop
enter
mov
push
data16
adc
jmp
xchg
pop
or
dec
jmp
jno
inc
push
sbb
add
fildl
jl
add
repnz
in
orb
stos
es
and
inc
mov
outsb
ljmp
pusha
js
cwtl
dec
or
xor
jnp
adc
cmp
stc
add
xor
fcoml
add
mov
movsl
mov
std
add
sub
or
mov
insb
aam
inc
int3
sbb
stos
rcr
mov
hlt
or
fldl
jp
add
arpl
out
push
lcall
mov
pop
leave
push
ds
lock
or
dec
mov
push
xchg
cwtl
sbb
mov
ja
pop
or
orl
in
push
and
jb
scas
pop
test
push
std
mov
shlb
pusha
pop
insb
add
push
adc
add
push
xchg
out
jbe
lret
sub
push
add
sub
jne
xorb
es
add
add
pop
or
ss
les
adc
cmp
add
sub
sub
mov
xor
dec
in
inc
loop
add
loope
xor
jle
add
jns
mov
add
xchg
adc
mov
xor
cmp
mov
js
add
sbb
popf
aas
jns
jmp
push
cltd
and
sub
outsl
inc
adcb
leave
adc
mov
adcl
mov
adc
into
pop
incl
push
lcall
xor
pcmpeqb
adc
mov
jnp
gs
jmp
inc
mov
dec
add
xchg
mov
arpl
pop
rcrb
and
adc
xchg
xchg
xor
or
mov
jg
add
stc
popa
adc
div
popl
mov
fwait
inc
mov
into
out
shlb
cmpsl
add
adcb
popa
and
mov
frstpm(287
inc
cmp
add
stc
les
cli
pop
add
jb
jle
lret
mov
add
sub
insl
lret
fnstcw
out
enter
xor
test
test
xchg
jo
pop
jo
fs
push
sbb
dec
xchg
add
and
dec
in
daa
add
mov
add
in
fwait
sbb
pusha
mov
and
rcrb
pusha
cmpsl
push
push
rorl
and
cmp
push
dec
ja
icebp
jo,pn
addr16
sub
dec
xlat
loopne
jae
add
push
mov
mov
adc
adc
test
adc
adc
sbb
dec
push
cwtl
test
leave
lock
ljmp
sbb
mov
add
test
mov
lret
lret
push
arpl
sbbl
sub
cmpsl
xor
push
push
mov
mov
pop
pop
cmp
cmpl
fnstsw
add
cmp
icebp
mov
pop
cmp
jbe
ret
add
gs
inc
mov
sbb
addr16
add
add
scas
pop
add
fcomps
push
mov
push
incl
push
stos
sub
sub
mov
loopne
mov
das
xchg
jo
add
lret
pusha
adc
jecxz
xchg
dec
ljmp
loopne
addl
mov
test
mov
add
xchg
add
notb
add
pop
sti
loope
fnstsw
add
mov
and
xor
ss
add
push
ds
cmpsl
clc
mov
scas
jo
xchg
sbb
add
dec
dec
add
mov
push
arpl
outsb
pop
cmp
mov
sbb
insb
inc
test
sarb
sub
sub
daa
and
inc
pop
xor
mov
push
hlt
sbb
cmpsl
jae
pop
jge
adc
in
cs
mov
add
ror
mov
test
jae
test
mov
push
mov
lds
shll
mov
push
inc
imull
push
xchg
pop
add
mov
aaa
dec
int
dec
push
loopne
push
inc
or
cmp
popf
fstpt
adc
push
in
pop
sbb
outsl
lods
pop
das
je
push
add
movsb
arpl
add
imul
xor
shll
in
ret
fsubs
dec
mov
inc
fdivr
jp
gs
add
rcrb
cmp
inc
xor
xchg
repnz
mov
push
adc
pop
hlt
sub
popf
lcall
bound
push
out
adc
fisubl
stc
inc
add
add
push
mov
dec
pusha
lock
mov
lcall
xor
pushf
stc
cmp
dec
inc
insb
mov
jae
in
adc
mov
iret
cmp
pop
cltd
js
or
mov
sub
add
adc
or
cmpsb
mov
push
push
mov
iret
sbb
mov
out
and
add
pop
or
inc
add
add
iret
jg
add
inc
push
sub
sub
pushf
adc
cmpsl
or
orb
scas
add
push
pop
add
jp
ret
or
add
cwtl
xor
stc
popa
mov
pusha
test
dec
dec
dec
add
mov
and
mov
aad
jbe
in
out
sbb
mov
clc
pop
out
cmp
mov
lea
push
jne
cmp
sub
add
call
inc
fiadds
xor
mov
popa
push
or
xlat
rol
jge
fwait
adc
call
nop
xchg
add
out
mov
pushf
clc
fwait
pop
cmp
mov
sub
dec
dec
jmp
rcrb
jno
mov
fsubs
mov
imull
jmp
shld
mov
dec
mov
push
and
fldl
lods
add
pop
mov
or
scas
fwait
push
add
lock
inc
mov
mov
rolb
gs
ljmp
inc
mov
adc
std
push
adc
add
jg
jns
or
lret
loop
rorl
jmp
push
add
jo
fldl
jne
inc
sub
mov
aam
scas
cmp
fsubs
inc
mov
push
pop
sarl
je
xor
or
add
sbbb
add
sti
data16
fcoml
add
sub
loopne
xlat
and
or
sbb
xchg
pop
jne
mov
sbb
xor
cmp
inc
insb
je
movsb
lret
add
xor
pop
add
push
xchg
les
cwtl
push
pop
arpl
push
or
lock
mov
cmp
add
fcmovb
and
add
mov
sub
mov
jne
or
add
int
mov
ds
xor
sbb
and
add
loope
adc
and
lock
xchg
add
repnz
inc
lret
pminub
and
cmp
and
ret
inc
add
xchg
jnp
dec
push
mov
push
out
and
rorb
xchg
mov
int3
and
inc
call
pop
xor
test
fistl
jns
and
inc
fsubrl
fwait
xor
add
gs
dec
lcall
adc
es
scas
mov
pop
arpl
shrb
dec
inc
lcall
xchg
clc
inc
pop
pop
daa
pop
pop
sahf
fcoml
dec
add
sbb
sub
rclb
movsb
nop
mov
adc
mov
sub
pop
mov
aam
or
or
adc
lock
or
xchg
mov
sub
jnp
dec
nop
fmull
test
cmp
sub
inc
push
addr16
mov
mov
or
testl
std
rcr
mov
jp
dec
push
in
loopne
inc
rolb
pusha
repnz
sub
sub
stos
mov
fsubrs
add
ja
lods
push
mov
jbe
mov
fadd
aaa
add
adc
loop
jge
mov
rorb
outsb
ret
clc
test
aaa
ja
pushf
pop
xchg
fcoml
fisubs
push
sbb
movl
push
lods
pop
jmp
les
add
insb
add
or
repz
add
inc
sbb
mov
push
add
xchg
or
sub
inc
fistl
and
in
clc
repz
jnp
adc
fildll
cmp
push
jmp
lock
andl
mov
ja
inc
xchg
mov
in
sbb
or
movsb
and
jae
add
bound
inc
lods
mov
repnz
mov
je
mov
cmp
xchg
fstpt
adcb
xchg
out
out
add
mov
std
sub
dec
shll
add
xchg
cmp
mov
cltd
aaa
or
sub
es
jmp
fistpl
cltd
add
push
mov
dec
cmp
iret
mov
das
aam
dec
pop
add
mov
add
adc
xchg
nop
test
sbb
inc
add
lret
into
mov
adc
lods
sbb
dec
or
imul
xchg
data16
push
dec
lock
pop
dec
loop
add
adc
into
and
xlat
push
add
repnz
adc
dec
add
in
adc
lock
xchg
out
sub
xorb
cltd
lret
cli
nop
xchg
imul
push
inc
repnz
mov
mov
inc
inc
xchg
in
out
mov
or
pushf
dec
rolb
stc
and
and
lcall
adc
cmp
and
jmp
and
mov
add
ljmp
and
ljmp
nop
ret
mov
pop
inc
cmp
and
dec
inc
inc
or
jnp
adc
adc
ja
adc
sub
jb
in
iret
adc
adc
lock
popf
and
sub
fsubp
adc
cld
push
sub
out
out
jo
js
add
fs
out
mov
idivl
subb
popf
xor
pop
xchg
mov
add
jae
jmp
out
add
xchg
jo
add
sbb
fmuls
cmp
add
and
jae
add
pop
test
scas
sbb
adc
outsb
loopne
loop
add
repz
and
lds
mov
nop
shrb
jns
pop
push
jb
shlb
add
je
cmp
lods
mov
les
andl
loope
jle
dec
jo
arpl
xchg
in
cmc
sbb
loop
sbb
or
inc
mov
dec
add
and
pushf
andb
mov
popf
in
sbb
add
incl
add
imul
add
aas
call
add
sbb
movsb
mov
js
add
jne
loop
dec
incl
and
sbb
cltd
mov
mov
aas
sbb
ds
and
add
fs
rcrw
dec
sub
inc
enter
mov
add
cmp
mov
push
dec
cmp
mov
ret
mov
mov
sar
das
mov
add
sbb
loop
add
dec
jae
pop
jb
push
push
data16
jnp
fadds
aam
push
mov
loopne
push
out
rep
test
push
aam
jb
pop
mov
nop
ljmp
push
inc
mov
xchg
out
cwtl
movb
ficoms
add
jle
sti
or
push
add
mov
xchg
add
repz
jecxz
cmpxchg8b
in
shlb
push
xchg
push
add
xor
mov
dec
xor
push
hlt
mov
popa
pop
dec
push
out
jp
add
insl
scas
cmp
and
stos
and
sbb
out
je
add
cmp
cmp
cmp
xor
jg
lock
addr16
ja
loopne
cmpsb
cmp
imul
cwtl
and
shl
xor
shrl
rclb
push
push
pop
add
ds
adc
subl
std
mov
mov
cmp
fwait
mov
sbb
aam
xchg
mov
bound
add
clc
fs
outsb
loop
add
xlat
sub
shlb
mov
xor
mov
scas
sti
add
xor
or
je
add
movaps
test
adc
inc
inc
rol
add
jno
jge
push
cmpb
and
mov
push
insb
push
xchg
add
jg
or
jge
incb
ja
clc
mov
push
daa
movsb
mov
and
flds
in
or
insb
in
subb
mov
fdivr
test
in
fiaddl
sub
stos
mov
mov
call
aaa
and
popa
lcall
dec
jbe
pop
and
std
add
enter
call
dec
imul
xchg
je
inc
lcall
jg
shll
mov
sti
xchg
pushf
add
movsb
and
aam
in
pop
push
test
fs
lock
cmpsb
xchg
mov
loop
cmp
test
jnp
pop
xor
or
and
dec
sbb
add
cwtl
pushf
test
push
add
jb
mov
cmp
inc
pop
jo
int
inc
push
xchg
mov
mov
out
dec
cmpsl
xchg
mov
inc
push
enter
push
daa
xchg
add
cmp
pop
cmc
jge
test
push
inc
movsb
pop
add
inc
adc
add
cmp
out
push
adc
xchg
fucom
orb
sahf
and
push
dec
jo
add
pop
sbb
xor
sbb
mov
push
fists
mov
inc
out
insb
push
dec
mov
or
imul
iret
pop
arpl
addb
imul
daa
fldl
aaa
add
cmp
and
add
cmp
jmp
vpunpcklbw
add
repz
jns
xchg
or
push
sbbb
add
mov
stc
bound
nop
rolb
insb
in
dec
add
stos
push
mov
aas
xlat
adc
cmp
pop
shl
inc
jl
iret
fistps
fldl
push
push
and
call
rcl
les
shlb
jae
imul
add
sarl
fiaddl
stc
inc
js
divl
add
push
jnp
jle
stc
push
add
or
jp
or
cmp
xor
cs
xchg
nop
pop
pop
push
mov
sbb
dec
pop
dec
scas
in
add
mov
pop
cwtl
fdivrl
bnd
add
out
roll
mov
or
ja
adc
add
dec
das
pop
xbegin
pop
xor
outsl
inc
lea
sarb
les
gs
int
jg
push
add
mov
imul
push
outsb
or
adc
imul
stc
add
outsl
subb
push
mov
jbe
add
loopne
and
sub
in
mov
imull
cmpsb
pop
imul
ljmp
out
cmp
loopne
mov
dec
stc
xor
mov
sub
sbb
cmp
add
xor
mov
sbb
inc
gs
not
add
dec
int
stos
cwtl
fdiv
orb
jp
mov
sbb
inc
fs
sbb
add
fldenv
test
or
out
vmovsd
adc
jnp
add
imul
dec
sub
sti
rcr
adc
sbb
xchg
pop
dec
add
lock
xchg
push
lret
ljmp
inc
jbe
sti
loopne
pop
sbb
add
sbb
aad
mov
or
push
or
andb
fmull
rcl
inc
push
jg
sbb
add
xchg
pop
pop
cmp
roll
xchg
add
push
pop
and
pop
add
push
sub
jbe
call
mov
paddsw
inc
test
lock
or
jg
push
push
xchg
iret
mov
adc
aad
inc
pop
pop
andb
mov
jo
idiv
sub
mov
mov
decl
nop
lret
push
js
add
inc
shlb
ds
push
aad
in
add
xchg
or
and
inc
fcomps
sub
dec
jo
cmp
add
stc
add
mov
sahf
push
cmpb
loope
push
inc
pop
sub
mov
ja
add
pop
jne
fdivs
adc
xor
lcall
out
push
push
dec
and
and
dec
sti
push
add
out
sar
push
test
add
shl
and
std
add
fbld
dec
inc
xchg
aaa
add
cmp
iret
xor
sub
add
cwtl
std
or
push
mov
mov
push
add
ds
pop
jbe
pusha
xorb
jne
in
sbb
pop
test
add
leave
push
xchg
jmp
and
pop
rolb
adc
jae
push
mov
out
xor
jl
and
push
outsb
and
jo
dec
adc
fmul
mov
and
xor
or
inc
arpl
fcomps
push
sbb
mov
outsb
pop
adc
daa
mov
adcl
jl
pop
add
cmp
ret
enter
adc
pushf
cmc
mov
inc
nop
xchg
aad
dec
lret
add
add
dec
mov
ret
push
or
xchg
sbb
dec
ds
int
xor
sub
loopne
lds
sbb
test
cmc
adc
cmp
mov
icebp
stos
es
sti
jle
mov
sbb
cmp
shrb
mov
lret
lahf
loop
or
test
push
in
xor
outsl
add
std
aaa
sub
sub
push
inc
js
inc
mov
loop
mov
pop
pushf
mov
test
mov
sub
out
sarb
add
out
push
shlb
mov
and
xchg
call
cmp
mov
xchg
out
and
mov
add
push
jecxz
adc
add
mul
insb
or
and
pushf
sbbb
or
rolb
js
jno
adc
jmp
add
cmp
jge
cmp
dec
add
lock
pop
add
dec
push
pop
jae
adc
ja
les
sarl
xor
push
push
sub
adc
xchg
fucom
ss
push
xchg
sbb
cmp
into
sbb
add
inc
or
inc
cmpb
mov
and
adc
lcall
test
movsb
pop
mov
jl
shlb
mov
adc
stos
add
cmp
stos
test
call
sahf
mov
push
jecxz
arpl
push
pop
jmp
rclb
push
mov
adc
sbbl
inc
movsb
inc
add
scas
push
mov
xor
shlb
add
js
lret
fistpl
add
sbb
add
mov
add
int3
aaa
je
sbb
push
shl
call
pop
cmc
inc
and
inc
pop
push
adc
shrb
mov
mov
dec
dec
cltd
push
fisubrl
cwtl
cmp
sbbb
pusha
xchg
cmp
pop
add
mov
mov
pop
scas
pop
andb
jmp
or
jo
in
dec
mov
xor
andl
add
loopne
fildl
push
push
mov
subb
add
sbb
mov
out
and
popf
pop
mov
add
scas
add
adc
cld
cmp
cmc
xor
clc
xlat
test
add
fdiv
fsubrl
aaa
push
sbb
adc
or
add
loopne
dec
add
mov
mov
lods
mov
dec
enter
add
push
in
arpl
adc
xor
and
add
push
ljmp
cmpb
inc
bound
jae
jle
add
sbb
push
sbb
out
add
out
xor
imul
fidivrs
add
jmp
jge
jns
pop
inc
orb
sbb
add
and
mull
cmp
lahf
enter
or
jo
xchg
in
add
xorl
adc
lret
add
aam
pop
and
and
stos
pusha
das
sbb
mov
pop
jg
aam
xchg
inc
repz
push
add
out
scas
mov
jl
push
in
test
das
test
add
insb
jecxz
dec
nop
stc
pusha
add
sarb
mov
cmp
jmp
add
cwtl
call
xchg
rcl
sbb
xchg
sar
push
fwait
xorb
push
cmpsb
sub
add
or
lock
adc
inc
shlb
ja
mov
popw
cmp
xchg
insb
add
add
jl
ret
push
or
daa
sub
movsb
in
pop
popa
jns
mov
repnz
pop
dec
jae
lcall
cltd
xor
jbe
and
loope
add
in
fcmovu
popf
push
addb
pop
or
pop
mov
in
add
xor
test
out
cs
inc
arpl
add
sub
pushf
add
and
and
xchg
insb
cli
cmp
cmp
jge
test
xor
pop
aam
clc
pop
arpl
jle
add
or
xchg
xchg
enter
out
lcall
loopne
pop
add
bound
inc
push
add
lock
and
push
inc
addb
in
notb
inc
fwait
iret
mov
test
jmp
fstpt
sbb
mov
adc
inc
adc
imul
push
repnz
dec
add
mov
in
fwait
sbb
setbe
and
out
adc
adc
dec
mov
mov
mov
pop
adc
ficoms
imul
shrb
xor
inc
adc
add
lcall
movsb
ljmp
mov
pop
loopne
inc
lods
sbb
test
shl
and
sub
or
inc
fiadds
lods
inc
cwtl
rcrb
icebp
or
cmp
adc
mov
cmp
lea
jne
stos
or
pop
cmp
pop
inc
jbe
adc
mov
sbb
and
add
rclb
inc
out
xchg
inc
jne
in
jnp
es
jecxz
or
adc
jl
cmp
add
lret
mov
nop
and
sahf
test
jne
mov
sub
pusha
push
jbe
pop
dec
pushf
ds
mov
jmp
xchg
out
push
push
xchg
nop
pop
or
inc
mov
idivl
pop
jl
nop
jle
ljmp
cmc
sub
adc
insb
movsb
shl
xor
pop
jge
leave
cli
xlat
cmp
mov
lea
dec
out
add
shlb
inc
jg
aas
sbb
jp
adc
ljmp
stc
mov
jp
cmp
sbb
rcr
add
ljmp
dec
aam
filds
inc
push
fiaddl
xor
add
jp
push
mov
push
lock
jle
add
inc
clc
and
sub
repz
mov
out
das
push
mov
movaps
jno
out
sbb
cmp
mov
dec
or
add
add
or
and
sbb
or
ja
scas
out
out
push
jmp
mov
pop
and
cmp
add
jg
in
test
add
or
shlb
jg
fstps
or
add
mov
das
jge
add
xchg
sbb
outsl
and
or
jmp
sbb
iret
inc
push
repnz
mov
xchg
out
in
cld
push
test
jb
inc
jno
ffree
cmp
shrl
adc
mov
jbe
inc
add
inc
mov
fadd
pusha
aaa
cmp
jnp
clc
sub
lods
mov
add
and
pop
push
add
clc
xor
jl
mov
push
cmp
dec
and
test
jle
jl
mov
enter
push
dec
aam
fiaddl
dec
test
loop
mov
aam
or
enter
pop
mov
dec
inc
lret
repz
cmp
test
rdtsc
lea
lods
leave
cwtl
loopne
stos
sbb
in
lock
add
lea
jl
pop
fwait
lods
mov
mov
push
add
loopne
add
pop
sti
daa
push
and
add
aas
sbb
add
js
sub
nop
faddl
je
in
or
sbb
mov
loopne,pn
out
push
scas
pop
push
adc
pop
lods
fwait
pop
add
movsl
enter
xchg
add
mov
int
jne
orl
out
scas
push
jno
out
jo
pop
cmp
andb
lock
data16
ret
add
mov
sbb
or
or
fcompl
add
es
cmp
or
mov
mov
push
jb
rol
in
add
test
dec
loope
pop
push
loopne
cmc
adc
aaa
add
mov
and
in
add
je
cmp
dec
call
adc
cmc
xchg
add
sub
sub
iret
and
das
inc
xchg
sub
add
rolb
adc
out
add
shl
clc
pop
xchg
add
data16
cmc
nop
int3
ljmp
fwait
js
xor
dec
xchg
add
mov
fs
pop
loop
lods
push
lock
mov
pop
or
inc
sbb
lea
xchg
sbb
lret
loopne
outsb
sub
cmpb
outsl
scas
xchg
test
add
fidivl
and
add
sti
pusha
mov
lods
stc
out
call
fbstp
add
push
pop
imul
pop
jge
add
test
add
in
sub
repnz
jbe
mov
xchg
push
lret
push
or
cmpb
adc
xchg
mov
pop
add
push
cwtl
sbbb
ss
add
xchg
jecxz
add
scas
cmpb
inc
stos
repnz
add
jge
or
andb
add
clc
bound
add
lods
adc
and
jb
mov
xor
xor
adc
je
shll
add
add
mov
stc
sub
stos
cltd
add
outsb
pop
pop
inc
xchg
call
mov
fiadds
inc
dec
and
cmpsl
or
ds
testb
mov
mov
jle
pop
pop
cmp
mov
mov
iret
add
fimull
add
xchg
adc
add
dec
jae,pt
and
and
add
out
add
arpl
nop
lock
push
add
dec
js
mov
xor
push
mov
dec
add
test
or
sub
fbld
and
imul
cltd
sbb
in
sbb
push
popa
icebp
cmp
jg
fisubs
or
push
inc
pop
and
add
mov
sub
add
xchg
jae
testb
push
sub
movsb
les
stos
mov
pop
pusha
int3
add
inc
mov
jns
add
ja
mov
lock
xor
mov
or
clc
push
and
scas
negb
add
sbbl
lahf
lret
sbb
jle
adc
sub
adc
mov
sbb
xchg
mov
push
jecxz
pop
and
add
cwtl
inc
xchg
stos
mov
inc
xorl
sub
mov
aas
pusha
in
xor
add
pop
cmp
or
xor
mov
mov
mov
add
xchg
xchg
mov
ds
stc
cmp
pop
add
pop
pop
xchg
lret
dec
and
rclb
cmp
out
push
pop
or
lea
adc
adc
jle
mov
jnp
int3
sbb
sar
fadds
adc
inc
adc
lret
add
fcomip
gs
add
lret
add
xor
shll
outsl
mov
jg
mov
sbb
pop
loopne
dec
adc
inc
imul
lods
nop
xchg
rorb
out
je
add
das
imul
sbb
xlat
bound
mov
sub
push
movsb
add
dec
jge
andb
stc
mov
popf
add
aad
jno
sbb
add
jmp
in
jno
xchg
cli
ret
add
cmp
mov
fwait
mov
mov
cmp
loopne
add
xchg
addr16
addl
push
outsl
xchg
add
sub
jns
or
push
xor
mov
mov
cmp
into
push
int3
fcomps
sub
xchg
in
out
clc
lods
add
or
in
dec
call
jo,pn
or
sub
add
out
jb
cmpsb
movsl
jne
adc
mov
movsb
aaa
push
and
add
add
aam
add
or
shll
mov
test
push
jno
mov
lock
mov
movsb
cmc
add
inc
add
loop
mov
jle
add
imul
or
mov
aam
add
inc
rcrb
mov
lea
fld
out
bound
or
pop
decb
inc
leave
mov
pushf
in
ja
jmp
mov
lods
std
scas
add
orl
cmp
sub
xchg
xlat
inc
je
ja
imul
repnz
xchg
xchg
les
hlt
adc
out
xchg
repz
xor
adc
inc
int3
add
adc
add
mov
or
pop
jns
popf
repz
push
fwait
push
in
clc
sub
mov
push
xchg
dec
out
add
push
jle
mov
addl
add
sarl
sti
mov
popf
xlat
sahf
js
sub
inc
clc
add
movsb
or
push
pop
and
and
jecxz
popa
sbb
dec
sbb
call
mov
pop
cmpsl
add
cmp
mov
popa
push
sub
xor
pop
ljmp
shrl
add
stos
pop
movsb
pop
repnz
and
outsl
push
mov
xchg
call
add
sahf
xor
mov
pop
and
sbb
sub
test
and
sbb
or
maskmovq
divl
das
add
or
lods
mov
subb
cmp
push
pushf
fisubrs
push
pop
sti
pop
insl
enter
mov
add
inc
lahf
xor
add
fwait
cmpsb
jmp
sbb
dec
xchg
out
add
sbb
imul
loop
imul
mov
in
sbb
mov
jnp
cmp
mov
dec
cmpsb
inc
out
adc
pop
add
loope
mov
ficoml
fucomp
push
add
mov
pop
stos
jne
cmp
js
iret
sbb
push
pusha
mov
popa
jns
lret
es
and
add
dec
and
cmpl
dec
push
add
stos
fidivs
shr
hlt
add
jle
add
sti
cmp
mov
outsl
ds
out
xchg
cmp
cltd
mov
inc
daa
or
int3
push
data16
mov
pop
and
mov
mov
mov
pop
mov
mov
add
push
or
mov
inc
push
js
int3
movsl
les
mov
mov
mov
sbbl
fs
orb
pop
add
mov
cli
sbb
lock
push
loopne
add
sub
addr16
in
add
enter
sbb
ret
jbe
in
das
or
xchg
fwait
pop
js
xchg
shlb
xlat
add
xor
xchg
shl
xor
cmpsb
loopne
js
add
ljmp
jg
lods
xchg
xorb
movsb
mov
lahf
xorb
aas
loopne
push
fs
test
lea
or
or
add
nop
pop
insb
nop
xchg
subl
stc
dec
jns
add
pop
push
imul
xor
push
adc
or
scas
in
adc
add
dec
xchg
sbbl
add
repz
mov
jg
add
test
negl
xchg
aam
aad
lahf
cli
pop
add
clc
add
in
popf
fisttpl
ljmp
xor
icebp
ficoml
insl
test
fisttpl
sbb
rorl
dec
in
push
and
push
out
pop
push
and
lods
mov
xchg
xlat
loop
rolb
mov
cmc
add
jo
js
pusha
rcrl
sbb
sub
pop
push
push
inc
lods
xor
cmp
cli
sbbb
ss
outsl
add
repnz
jecxz
push
pop
lret
mov
pop
repz
aaa
test
stos
cld
or
dec
faddp
add
lods
insb
scas
fmul
add
mov
shlb
cmp
dec
add
mov
test
add
xchg
jo
fidivrl
add
add
jl
into
pusha
jbe
add
fcomip
and
jno
fcoml
add
leave
pop
pop
xchg
clc
in
sbb
cmp
mov
dec
and
pop
dec
mov
dec
sub
cmc
lock
push
loope
stos
sbb
fstp
and
outsb
add
fsts
sti
inc
add
enter
inc
data16
inc
dec
je
testl
sbb
das
adc
push
xchg
lods
add
shlb
jnp
mov
cmp
add
rcr
and
lahf
xchg
and
add
xabort
dec
dec
sarb
test
push
or
lock
add
push
jb
mov
jmp
mov
add
mov
dec
imul
bound
inc
fwait
jecxz
pop
dec
popf
sbb
jl
es
add
mov
addb
sub
xor
pop
xchg
hlt
add
add
jae
and
mov
sbb
in
sbb
xchg
je
rorl
and
jl
sbb
inc
add
cmpsb
adc
pusha
loopne
mov
sbb
lret
mov
inc
cwtl
loope
testb
out
addr16
sub
sahf
fsubrl
test
jne
xor
mov
cmp
sbb
ja
add
jle
xor
divb
xor
mov
iret
dec
cmc
add
adc
inc
inc
aas
inc
mov
jmp
ss
daa
mov
add
pop
cmp
add
jge
out
out
pop
add
rcrb
ja
add
xor
add
push
orl
mov
xor
pop
lock
add
lahf
ret
dec
or
dec
testl
rclw
add
adc
add
repz
std
aas
aad
fcomp
add
sbb
mov
mov
insb
xchg
push
shlb
stos
add
sbb
lret
subl
jge
mov
nop
and
inc
xchg
int3
mov
std
xchg
inc
lock
jno
xchg
jl
fists
fdiv
fwait
push
and
cmc
jl
iret
fcmovb
ljmp
add
es
aaa
sbb
lret
fldt
pop
or
das
rcl
out
add
push
fdivp
xor
xorb
mov
jno
add
enter
dec
in
roll
sbb
inc
pop
add
jb
int3
ljmp
xor
inc
pop
out
fildl
leave
sbb
ret
add
js
mov
andb
or
lea
add
mov
lret
inc
dec
bound
mov
cmc
inc
adcl
sub
sahf
loopne
ficoml
loope
popa
jp
int3
pop
je
lock
sub
out
inc
sub
adc
cmpsl
sbb
repz
mov
lods
in
and
add
pop
rcl
ja
dec
jo
es
sbb
fldenv
jnp
mov
xlat
add
mov
insb
mov
out
sub
jae
mov
rclb
and
iret
out
push
inc
gs
inc
or
add
adc
add
ljmp
cmpl
xchg
test
mov
or
add
ficoml
or
jmp
mov
add
push
adcb
stos
std
push
adc
and
cmp
jno
loopne
adc
xor
outsb
dec
add
mov
subb
jmp
les
inc
xor
incb
sbb
mov
add
xchg
test
pop
adc
cltd
in
rcrl
in
dec
add
dec
xchg
pushf
jle
iret
stc
add
cmpsb
cld
rcll
or
add
jg
or
and
lgs
icebp
das
add
arpl
loope
in
push
dec
stc
popa
push
jp
add
pop
stc
aas
xor
shlb
add
adc
inc
pop
mov
mov
cld
out
aam
push
pop
pop
xchg
or
or
mov
mov
movsl
out
pop
and
lcall
jge
sub
clc
test
mov
andb
mov
add
push
bound
push
add
ret
inc
jo
inc
add
mov
ljmp
lea
mov
sub
push
jns
stc
fwait
jo
inc
push
jp
testl
lcall
shrb
cmp
mov
daa
mov
xchg
add
sarl
lds
mov
aam
cld
xchg
cmp
jl
mov
rclb
or
popa
jo
pusha
rcrl
xchg
in
movl
mov
dec
cmp
add
loop
jne
out
cmp
loope
decl
add
mov
xchg
mov
faddl
push
adc
dec
ret
jge
or
xor
add
xor
cmpsb
call
rol
or
push
rorb
dec
popa
cwtl
mov
add
shl
jg
pushf
inc
fs
add
out
movsw
in
jecxz
sbb
andl
cli
inc
push
inc
in
clc
aaa
add
inc
cltd
loope
leave
notl
and
cmp
mov
inc
sub
jl
fidivrs
inc
pusha
jae
sbb
mov
mov
jecxz
sub
imul
les
je
hlt
pop
sbb
fidivrs
and
push
inc
stc
push
dec
iret
sarb
sub
cmp
outsl
insl
icebp
lock
and
and
xchg
arpl
imulb
cmp
add
popa
ljmp
pop
add
push
add
scas
mov
sub
lods
jno
loope
jns
jl
sar
lahf
lock
out
or
je
dec
divl
add
add
inc
ret
fwait
sbb
mov
or
lret
jo
or
xlat
enter
sbb
sbb
daa
cli
add
jle
dec
dec
push
lcall
mov
inc
mov
sahf
nop
mov
addr16
dec
and
or
pop
xor
pushf
fisubrl
rorl
mov
mov
mov
dec
sub
std
add
pushf
in
loopne
xor
sar
frstor
test
andb
sub
sub
and
adc
imul
repnz
add
jo
cmp
hlt
sub
mov
pop
mov
cmpb
js
cmovne
ret
mov
roll
pop
cwtl
jno
rclb
dec
mov
popa
jle
cmpsw
add
adc
mov
mov
lcall
shlb
rorl
sbbl
pushf
pop
shrd
shrb
or
cltd
inc
xchg
cld
mov
dec
dec
xor
add
jno
xchg
jbe,pt
stos
mov
repnz
push
cwtl
xchg
push
xchg
fs
arpl
shl
xor
mov
jo
pop
jbe
mov
stos
shl
dec
cld
test
insb
cmpsl
subb
add
inc
rcl
fiaddl
testb
and
lea
push
pop
bnd
push
or
cmp
push
xor
cmc
rcrb
jno
aas
and
push
arpl
mov
xchg
in
mov
in
mov
xchg
out
outsb
in
sbbb
pop
cmp
xchg
imul
in
xor
je
jmp
jl
fdivl
adcl
inc
pop
movsl
test
fwait
rclb
jne
mov
loope
add
mov
jp
and
fildll
push
fsubl
enter
add
and
xor
xchg
pop
add
fxch
push
lcall
pusha
dec
xor
ljmp
loop
push
outsl
sbbb
mov
cmp
stos
xor
inc
int3
adc
xchg
fcmovnbe
daa
add
push
add
inc
stc
shll
add
ret
icebp
inc
fmulp
add
jns
add
dec
lea
jg
ret
divb
add
ss
pushf
add
fcomp
xor
call
shl
or
and
jl
out
test
sti
add
cli
out
cmp
sbb
and
bound
jp
mov
jns
sbb
pop
adc
popa
scas
adc
jne
dec
adc
cmp
cmp
inc
sarl
ljmp
add
pop
data16
jl
xor
mov
mov
icebp
or
pop
or
add
push
push
pop
xor
sarb
imul
ss
ret
es
xchg
xor
push
dec
push
add
in
xor
mov
pop
and
orb
push
mov
xchg
loopne
cmp
aas
sub
jp
sbb
iret
pop
sbb
push
xor
add
sub
push
test
out
xor
jo
loopne
pop
mov
shrb
aam
inc
call
or
adc
lret
add
dec
adc
leave
mov
jb
stos
add
push
arpl
jp
out
push
in
cmpsl
nop
cmp
jno
inc
cltd
rolb
arpl
leave
add
push
out
adc
frstor
add
push
adc
add
enter
int
mov
mov
call
add
repnz
cmp
dec
andb
test
adc
xchg
loop
pusha
movsb
sbb
pop
jl
push
pop
fcoms
push
in
cmpb
jmp
in
popf
dec
fldcw
add
dec
cwtl
loopne
mov
add
inc
sub
pop
and
int
add
xor
iret
lods
daa
xor
rclb
cmp
push
add
out
adc
dec
sbb
push
xor
mov
push
popa
lods
cmp
icebp
pop
mov
mov
std
push
push
adc
scas
rol
mov
test
ljmp
sbb
test
inc
cmpb
adc
xlat
mov
pop
push
jb
add
jmp
inc
nop
fsubp
add
mov
leave
icebp
inc
imul
add
cmovnp
es
push
test
hlt
xor
leave
cmpsb
clc
rolb
mov
shl
inc
fs
add
sub
idivb
add
test
enter
and
mov
dec
into
pusha
dec
add
aam
or
out
pop
fcomp
pop
loop
dec
jge
jns
test
fiadds
jno
mov
loope
pusha
add
jl
xchg
shrb
loope
sbb
adc
cmp
repz
jne
sub
pop
xchg
lds
sarl
or
push
mov
inc
int3
or
pop
enter
mov
aaa
sbbl
pop
jmp
pop
mov
sbb
xchg
cmp
daa
lods
cmpsl
mov
lock
out
in
xor
add
push
sub
jecxz
std
adc
push
cmp
dec
pop
pusha
mov
fcoml
fwait
mov
mov
roll
and
sub
dec
dec
lret
and
and
cmpsb
sti
cmp
adc
dec
clc
sbb
push
cltd
push
shrl
and
dec
les
jge
movsb
mov
call
pusha
gs
icebp
popa
stos
mov
sbb
icebp
fdivrs
hlt
and
movsl
pop
pop
nop
dec
xor
cli
inc
jnp
mov
mov
jno
add
rolb
add
inc
ret
test
add
xchg
sub
and
xlat
out
push
popf
adc
inc
or
mov
fs
sahf
pop
lret
inc
push
popa
mov
dec
push
pop
add
add
add
jno
mov
std
or
xchg
sub
push
inc
pusha
sbb
and
xchg
or
shll
repz
mov
add
hlt
mov
mov
jno
jg
mov
sahf
mov
inc
adc
and
in
cmp
sbb
inc
pusha
pop
js
pop
mov
sub
cld
in
rorl
test
ljmp
repnz
adc
jg
fwait
or
outsl
sbbl
jl
add
daa
dec
je
mov
push
lock
stos
add
aaa
and
out
loopne
shl
jnp
iret
insl
test
cmp
in
push
cmp
inc
push
aas
lods
add
xor
scas
cmpsb
mov
sub
and
lahf
movsb
cwtl
add
imul
scas
call
xchg
xor
mov
pusha
mov
mov
int3
sub
orl
adc
cmp
push
loop
mov
outsl
ret
out
add
fnstcw
mov
inc
xchg
mov
adc
mov
add
sbb
les
sbbb
ds
in
mov
jmp
lret
jg
les
and
stc
sbb
mov
jmp
push
dec
sarb
in
push
push
and
sti
add
je
push
inc
sub
sub
mov
adc
jae
stc
mov
sub
das
aam
clc
fs
adc
cli
loopne
mov
add
ja
adc
test
dec
loop
das
pop
repz
fstp
adc
in
mov
mov
inc
imull
mov
mov
jno
repnz
das
inc
pusha
sbb
add
sbb
ret
xor
dec
cmpsl
mov
in
stos
push
sti
cmp
add
insl
sub
sub
aas
xchg
pop
loope
mov
cld
cmpb
aad
daa
sub
stos
and
lods
or
or
in
aam
add
cld
out
inc
out
add
mov
sahf
shl
pop
in
lock
call
mov
jns
stos
add
fbstp
dec
and
add
xchg
shl
js
mov
jmp
pop
cmp
pop
xchg
repnz
cmp
add
test
add
leave
dec
lgdtl
dec
mov
add
outsl
add
inc
mov
adc
jg
xor
adc
pusha
cmp
add
mov
test
xorb
in
je
xor
push
inc
mov
add
scas
cmp
push
and
sub
movsl
xor
bound
scas
in
mov
cmpsb
add
hlt
pop
popa
imulb
js
les
insb
xchg
jb
jmp
cli
cmpsl
mov
cmp
iret
ds
push
add
xor
popa
test
sub
pop
roll
into
pop
jl
loop
das
add
lods
hlt
xlat
gs
inc
bound
adc
and
fisttpl
sub
mov
fcoml
lcall
sub
inc
jae
stos
loope
mov
add
mov
icebp
cld
les
jbe
cmpl
loopne
rcrb
enter
xchg
fs
lcall
leave
cmp
mov
xchg
shl
mov
je
mov
jno
repnz
mov
ret
fnsave
es
pusha
push
shl
out
addb
cmp
jg
fidivs
mov
push
jl
add
adc
andb
outsb
call
das
imul
inc
xchg
xchg
outsb
adc
nop
mov
sub
xor
clc
push
loopne
adc
aas
ds
xchg
stos
add
mov
imul
add
xlat
mov
and
stos
test
loopne
sbb
mov
iret
push
add
push
add
in
sub
add
hlt
xor
sahf
xlat
add
xor
cmp
scas
mov
scas
add
inc
data16
shll
movsb
repz
ror
popf
out
add
adc
mov
loopne
mov
sbb
pop
jmp
adc
fs
ret
or
inc
jg
pusha
repz
inc
test
jmp
lret
and
add
adc
mov
out
mov
ljmp
test
pop
jns
in
push
or
pop
mov
shrl
loope
add
test
add
pop
loopne
cmc
dec
leave
sbb
shlb
xlat
testl
out
xor
ljmp
dec
ret
int3
lds
or
pop
loopne
lods
jbe
dec
xchg
loopne
orb
mov
sbb
jno
xchg
add
mov
daa
lea
movsb
add
or
push
add
aam
push
data16
or
out
lret
and
cmpsb
testl
rcrl
hlt
jns
je
mov
fmulp
and
aas
mov
aaa
mov
test
add
cmp
xor
sub
add
test
xor
mov
fisttpll
xchg
pusha
push
out
sbb
mov
add
ret
and
cs
fstl
cmpl
addl
pop
and
mov
fwait
rolb
xor
xor
cwtl
mov
std
dec
loop
push
pop
lcall
add
and
sbb
lret
add
inc
cmc
inc
mov
jmp
jae
lret
or
mov
dec
setle
and
inc
fcoms
cli
cld
in
fsubl
daa
adcl
aaa
jg
jmp
or
in
cwtl
rcrl
movsb
add
pop
push
dec
add
push
add
mov
inc
cltd
je
rcrl
icebp
pop
testl
cmp
inc
adc
sub
test
mov
test
xchg
dec
enter
hlt
add
stos
or
ljmp
jns
and
xor
pop
push
pop
insl
sub
call
mov
push
cmc
sbb
int
maxps
adc
add
mov
sub
mov
imul
jle
mov
sahf
addb
add
jno
das
shrl
dec
add
inc
push
cmp
loope
sbb
jb
mov
loopne
cmp
inc
pusha
jl
fidivs
adc
in
pop
pop
sbb
daa
mov
add
push
cltd
cmpsl
pop
push
or
add
sub
and
jno
fdivr
push
pop
inc
mov
add
xor
and
and
and
push
bound
lahf
das
xchg
les
mov
xchg
adc
icebp
add
mov
sub
xor
call
bound
aad
jecxz
mov
cmp
fs
pop
and
out
mov
cltd
out
pop
test
jle
inc
dec
jle
icebp
push
ret
fsubrl
cmp
outsl
jnp
stos
and
jb
xchg
enter
add
mov
and
xor
pop
pusha
ret
dec
adc
addb
mov
xchg
add
decl
lar
test
hlt
mov
cld
or
lea
rcrl
xchg
rcrl
sub
jp
inc
adc
xchg
leave
push
mov
or
lds
decl
dec
ficoms
insb
mov
inc
xor
add
rorl
repnz
fbld
subb
mov
addl
add
or
or
rorb
and
sub
jp
xorl
jo
scas
lcall
add
xor
jne
in
out
or
inc
mov
lahf
loope
jle
loop
mov
dec
fadds
cmpsb
movsb
xchg
sbb
div
mov
pop
loope
cmp
mov
jl
or
add
mov
add
insb
call
mov
daa
aas
xchg
pop
mov
unpcklps
mov
and
mov
or
mov
sbb
or
adc
and
mov
nop
or
inc
mov
rorb
push
and
jp
cld
add
jmp
dec
incb
adc
rolb
add
mov
loope
mov
xchg
xchg
push
inc
pop
mov
dec
loopne
or
cld
adc
aas
pop
or
sarb
inc
movsbl
push
out
push
inc
cmp
add
jg
clc
push
bound
dec
outsb
add
adc
pop
mov
cmp
rolb
loopne
xor
rclb
add
in
cmp
add
inc
les
mov
les
jmp
es
andb
mov
cli
gs
in
cld
dec
cli
ret
and
das
aad
dec
push
in
cmp
and
out
rclb
mov
stos
mov
jg
lock
jge
mov
jle
or
xor
movsb
fcomp
repnz
add
clc
or
or
xchg
lret
mov
cmc
test
inc
nop
in
fisttpll
ds
movsl
sub
icebp
adc
or
andl
imul
xchg
pop
mov
add
cmp
add
jae
jge
and
add
movsl
mov
xchg
add
mov
mov
inc
push
pop
xor
ljmp
cmp
lods
jb
pop
pusha
jmp
cmp
add
and
scas
add
mov
es
mov
mov
movsb
push
sub
shlb
xchg
lahf
lret
ja
add
mov
sbb
inc
sub
adc
shr
inc
add
scas
test
hlt
sbb
pop
mov
lds
adc
and
inc
ja
adc
mulb
mov
cmp
into
add
adc
ljmp
lods
int3
sub
fdivp
sub
jo
push
rolb
scas
movb
cmpsl
mov
in
hlt
lock
fstps
nop
inc
cmp
add
negb
rorl
sbb
into
lods
and
leave
dec
icebp
cltd
mov
cmp
dec
sub
cmp
test
shlb
out
or
orb
adc
lods
lods
add
jg
mov
cmp
dec
jae
ds
ror
or
sbb
loop
test
test
mov
and
or
and
xlat
mov
das
js
out
mov
jb
fucomip
mov
adc
fwait
add
pop
jbe
rolb
mov
cmp
les
and
cmp
pop
pop
or
push
mov
mov
ret
jge
sub
xor
dec
inc
dec
pop
nop
stos
cmp
jnp
lock
add
mull
sarb
mov
or
icebp
xor
addb
dec
adc
gs
push
pop
icebp
add
ljmp
xorl
iret
in
jle
add
call
jae
mov
imul
mov
mov
test
jmp
pop
inc
into
mov
stos
add
fistl
leave
fcmovu
fiadds
mov
add
sub
nop
bound
sub
xchg
gs
cmp
push
loopne
fisttpl
add
jbe
fdivrl
rcll
xchg
mov
pop
loopne
test
mov
jl
pushf
push
test
inc
dec
mov
push
mov
add
push
cs
cs
sti
mov
out
add
nop
into
pop
call
enter
push
fcompl
or
and
mov
jecxz
adc
insb
cltd
add
dec
arpl
inc
push
dec
into
xchg
add
inc
pop
sahf
cld
cmc
add
jno
jo
push
arpl
add
jae
mov
add
daa
lods
imul
push
add
cld
cmp
add
add
aaa
push
ds
rolb
or
and
mov
jle
das
add
int
outsl
mov
out
add
xchg
jge
or
and
xchg
mov
lret
xchg
sbb
je
clc
push
fwait
dec
imul
shlb
xor
in
icebp
cmp
mov
mov
mov
mov
fsub
movsl
lahf
bound
mov
sub
in
jae
popa
jp
test
sbb
pop
add
je
inc
decb
xor
test
fs
jecxz
inc
ds
call
out
in
xor
ret
mov
cmp
push
je
add
lods
xor
dec
fisttpll
mov
add
mov
or
jno
fstpl
jl
mov
cmp
or
add
add
xchg
or
add
fidivs
lods
push
push
and
enter
or
jb
shlb
cmp
pusha
icebp
mov
pop
add
adc
cmpsb
lret
add
inc
mov
out
pop
adc
push
mov
loope
or
aaa
pop
adc
adc
jae
sbb
add
pop
pop
and
cwtl
bound
cli
jmp
jno
mov
xchg
sbb
mov
add
and
push
enter
movsl
out
cltd
gs
mov
jne
pop
fisubrl
cmp
xchg
inc
fdivr
std
dec
pop
stos
add
jns
in
ljmp
nop
dec
cwtl
jg
add
push
inc
aam
sub
add
xchg
call
pop
repnz
js
sti
mov
faddl
neg
faddl
outsl
cld
mov
cwtl
inc
mov
xor
sub
xor
add
aaa
mov
xor
mov
add
into
inc
cmp
call
dec
shrl
les
sbb
cmpsb
dec
fisubs
adc
daa
ljmp
inc
jae
mov
dec
ljmp
cmp
mov
cld
test
sbb
add
outsb
mov
cmp
testl
cmpsl
loop
ljmp
adc
adc
jnp
sub
or
xchg
test
xchg
jp
sbb
je
stos
lahf
add
dec
adc
outsl
sti
ret
mov
je
or
and
stc
cmpsb
add
cs
mov
sbb
pop
insl
push
push
fdivrl
xchg
cld
jmp
xor
xchg
push
and
dec
mov
mov
jnp
inc
arpl
pusha
cmc
pusha
js
mov
lods
ret
pop
add
adc
pop
das
add
lea
jae
push
test
xor
xchg
and
rolb
inc
pop
inc
mov
add
inc
adcl
rolb
push
xchg
and
iret
lods
push
add
pop
cmp
pop
xchg
mov
scas
rorl
pop
add
adcl
sub
push
popf
jnp
loop
cwtl
lods
xchg
out
xor
push
test
cmp
inc
jno
pop
adc
out
add
addb
add
fcoms
test
dec
jne
or
mov
jbe
cmp
jo
xchg
adc
adc
clc
cmp
mov
mov
mov
iret
add
sarb
adc
test
cmc
inc
jge
cmp
adc
in
subl
mov
inc
add
xchg
dec
test
sbb
push
dec
adc
add
xor
sahf
add
aas
loope
add
inc
outsl
fmull
push
pushf
add
arpl
xlat
xchg
and
xchg
in
add
daa
inc
fwait
adc
add
les
adc
cmp
roll
cmpsl
std
mov
xor
inc
jmp
loopne
xchg
mov
mov
sbb
insb
push
cwtl
mov
pop
and
out
mov
xor
pusha
std
mov
add
and
rclb
sbb
adc
int
mov
clc
bound
mov
dec
jb
or
mov
inc
addb
jmp
jb
shrb
sub
int
add
lcall
lock
inc
mov
jne
mov
push
mov
push
in
mov
call
fsubrs
sbb
rolb
mov
sub
loop
mull
jmp
jnp
jge
jge
fdivs
cmp
mov
jno
lock
mov
and
mov
test
adc
sbb
dec
mov
push
add
movsl
mov
xchg
lret
sbb
stc
scas
int3
mov
mov
jbe
xlat
adc
movsl
leave
in
xchg
mov
add
mov
push
xor
js
mov
inc
cmp
scas
sti
dec
cmp
inc
js
inc
dec
pop
addb
fidivrs
add
fs
mov
inc
push
sbb
sarl
aam
cld
add
repnz
and
add
inc
push
push
cmp
mov
add
and
shl
add
xlat
jecxz
daa
sbbb
mov
sbb
pop
xor
pop
inc
test
lahf
out
js
cmpsl
test
xchg
pop
call
add
out
mov
nop
fidivrs
push
clc
jnp
ljmp
dec
dec
or
or
xlat
xor
or
mov
sbbl
adcb
int3
add
loop
stc
sbb
in
cltd
add
and
xchg
cmp
mov
loope
or
bound
clc
pop
dec
xor
mov
push
cld
or
mov
lock
mov
push
add
les
js
adc
xor
or
idiv
push
adc
pushf
inc
mov
jle
jg
repnz
les
movsl
aas
adcb
sub
add
loope
push
mov
popa
xchg
call
scas
popf
int3
addb
push
add
mov
mov
or
xchg
cli
push
cld
mov
push
cmpsl
out
nop
mov
fadd
inc
add
push
popa
mov
cmc
add
idivl
rol
inc
mov
xor
push
test
adc
insb
aas
pop
dec
std
jge
add
mov
jl
cmp
test
call
push
aad
ss
and
aam
out
test
popa
push
ja
movsb
outsl
nop
fdiv
cmpl
negb
jl
jae
xorb
inc
mov
fstpt
leave
push
and
cs
mov
mov
popf
hlt
pcmpeqw
fisubrs
pop
movsb
cwtl
inc
add
xor
pop
push
popa
in
sub
push
in
je
add
jo
and
outsl
jecxz
pusha
imul
dec
dec
je,pt
cli
xorps
add
adcb
pop
ljmp
out
dec
add
add
aas
add
sub
or
mov
loopne
xor
cmpl
fwait
pop
call
push
repz
cmp
jmp
sbb
xchg
out
jecxz
call
and
dec
mov
andb
loopne
jae
add
or
movsb
jo
add
leave
mov
adc
xor
or
fs
clc
add
add
sbb
sub
fiadds
cli
out
sbb
mov
mov
pop
xor
adc
cmpsl
in
cmp
sbb
incl
icebp
jb
and
jmp
jp
out
mov
dec
mov
fistpl
lcall
push
jmp
lahf
xchg
ret
test
pushf
nop
add
mov
add
dec
lock
add
or
inc
ret
mov
filds
inc
rcrb
jbe
inc
stos
mov
stc
push
call
adc
pop
mov
rcrb
add
andl
fildl
das
jg
fadds
aas
pop
fwait
test
sti
fldenv
mov
fdivs
jb
push
push
jg
push
fisttpl
adc
or
sbb
jne
xchg
pop
fsubs
test
jle
into
sub
shlb
ret
je
mov
push
push
cmpsb
in
inc
gs
xchg
add
mov
arpl
jnp
add
into
daa
cmp
pop
scas
add
jmp
lock
pop
mov
rcrb
fcoms
dec
cltd
jno
add
jle
push
scas
pop
sbb
cld
call
rolb
add
push
jb
add
cmp
cmp
out
jecxz
sub
jo
push
sti
xor
mov
lret
or
dec
cmp
mov
add
inc
xchg
int
inc
incb
pop
pusha
loop
pop
ficoml
push
stos
fcoms
shlb
ljmp
xchg
dec
shlb
addr16
add
scas
mov
daa
push
push
sub
repz
inc
sbb
sub
loopne
subb
fdivr
enter
jno
sbb
push
in
sbbb
shr
cmp
adc
adc
xor
clc
xorb
jle
add
and
xchg
in
dec
add
lods
repnz
inc
shlb
ja
xchg
sar
mov
inc
nop
das
fnsave
xchg
iret
or
lock
les
or
mov
fldcw
fnsetpm(287
push
push
add
adc
inc
sub
scas
add
cmp
adc
addl
scas
add
aas
pop
add
daa
jns
sub
fwait
leave
and
pop
int
inc
clc
loope
cmp
stc
imulb
pushf
add
adc
pop
xchg
rolb
sbb
or
pusha
lds
and
loopne
fs
daa
pop
stos
mov
lock
add
cmc
imul
inc
int3
pop
repnz
sub
cmp
ljmp
movsb
mov
cmpsb
and
cmp
mov
shlb
sti
xchg
dec
outsb
mov
xor
inc
push
push
dec
inc
or
add
std
inc
test
or
add
add
mov
pop
sti
pop
add
jge
ret
jbe
add
popf
xor
stc
sub
cmp
push
xor
mov
stc
popa
cmp
fsubs
fcomps
mov
fdivp
popf
add
inc
or
pop
mov
in
ljmp
mov
cli
dec
xchg
add
clc
and
xchg
inc
jo
mov
push
lea
mov
push
inc
or
nop
pop
xor
adc
scas
mov
pop
test
push
or
lea
lret
cmc
aaa
ja
rclb
add
je
jne
orl
hlt
jl
repnz
lods
add
mov
mov
or
cmp
int3
loopne
cmp
dec
jns
jecxz
xchg
mov
jb
andb
sbb
add
js
notrack
in
mov
data16
fdivrs
and
add
sbb
pop
dec
cwtl
push
add
fstpl
xchg
jl
cs
das
in
add
int3
dec
sbb
sar
mov
and
nop
jns
out
in
in
mov
sub
mov
cmp
jle
nop
imul
insb
cmp
inc
push
lock
das
mov
roll
inc
cltd
in
xchg
xor
cld
mov
and
mov
add
add
cmp
and
and
adc
add
sub
out
add
rcll
add
lea
inc
and
xor
sbb
xlat
inc
mov
lea
pop
push
add
and
popa
push
xor
mov
pop
jecxz
shl
sub
cld
xchg
sbb
adc
icebp
or
cmpsl
clc
mov
flds
js
add
pop
xor
pop
in
rorb
lret
add
inc
dec
out
ret
ficomps
mov
mov
loope
cmp
inc
dec
fstl
mov
sbb
xor
shlb
pusha
fsubrl
shrb
add
sbb
loopne
mov
notl
pop
add
jl
daa
mov
loopne
call
lea
add
xor
jecxz
add
cmp
add
leave
lock
mov
or
xchg
jo
pushf
ficomps
add
pop
pop
push
push
adc
bound
add
mov
add
scas
in
jno
movsb
fnstcw
sub
push
dec
add
in
mov
mov
dec
push
rcr
hlt
imul
pop
pop
pushf
stos
enter
pop
cmp
mov
or
out
clc
jns
mov
jmp
das
add
mov
out
pop
push
pop
xorl
mov
mov
test
jmp
cmp
sar
cmova
inc
adc
lock
lret
cltd
cmc
jp
inc
mov
xor
or
mov
fadd
shl
push
add
sbb
hlt
adc
push
or
mov
cwtl
daa
sbb
add
pop
xchg
mov
pop
mov
xor
repnz
andb
dec
nop
mov
inc
popf
xchg
jmp
push
mov
pusha
add
mov
mov
repz
fdivs
push
and
imul
cli
idivl
mov
das
adc
sub
aaa
inc
mov
adc
and
xor
cmp
cwtl
sub
xor
pop
push
adc
mov
jl
add
in
ret
add
sbb
pop
push
pop
cmpsb
push
test
out
xor
add
addb
test
rol
jle
pop
dec
push
sti
addr16
mov
push
test
out
nop
pop
je
and
add
sbb
push
mov
or
cli
sbb
xchg
fiadds
sub
cmpsl
aaa
xor
inc
push
jbe
dec
xchg
loope
and
dec
sub
or
jns
mov
push
mov
rorl
mov
add
cmpsb
rclb
add
cld
sbb
mov
push
xor
sbb
cmp
inc
pop
shl
pop
jecxz
push
add
inc
jle
fdivr
cmp
pop
mov
bt
testl
sbb
or
fstpt
jo
jmp
pushf
pusha
and
jb
add
mov
add
mulb
lea
add
lods
jmp
pop
pushf
loopne
push
add
jno
ret
sbb
lock
pop
fsubrl
hlt
xor
cli
dec
popf
add
xchg
or
dec
or
call
push
hlt
rcrb
daa
stos
add
out
roll
sub
in
xchg
lock
inc
nop
loop
repz
add
mov
pop
cmp
xchg
sbb
or
add
pop
jne
push
inc
add
cld
mov
sbb
idivb
jle
jmp
add
push
add
lock
push
pop
push
int
mov
sbb
jmp
jbe
inc
pop
mov
cmc
sub
mov
aaa
and
cmp
cmpsb
sbb
mov
dec
push
xor
cmp
adc
sbb
cmpl
dec
stos
or
out
cmp
cmp
mov
add
xchg
mov
movsl
push
lock
dec
add
inc
test
addl
pop
cmp
mov
sub
xor
add
jl
jmp
add
mov
fsub
shll
and
fwait
and
nop
flds
sar
sbb
add
scas
sub
test
sub
stos
mov
decb
add
jno
stos
out
push
setle
pusha
inc
fdivrs
ss
ret
or
mov
pop
push
into
roll
cmpl
ret
clc
aaa
rolb
pop
aas
std
andl
cs
add
pop
cmp
test
mov
lahf
dec
test
adc
gs
std
and
shlb
cmpsl
add
push
add
xor
dec
rcrl
push
adc
inc
mov
ret
nop
inc
mov
cmc
mov
shl
adc
add
mov
stc
inc
insb
das
xor
sub
cltd
daa
inc
aam
add
dec
and
push
call
xchg
cld
repz
jnp
mov
cli
add
stos
out
xchg
adc
faddl
add
jle
inc
cmp
test
xor
xchg
and
jmp
xor
add
jmp
sti
repnz
add
mov
and
dec
sub
jbe
push
call
sbb
push
outsb
jb
orl
dec
sbb
add
iret
in
or
pop
mov
push
add
dec
call
add
fidivl
stc
sbb
jb
dec
pop
dec
cmpsb
imul
add
add
cmp
dec
js
add
sahf
test
add
les
jl
add
mov
xor
lret
pop
ljmp
leave
into
add
movsl
and
sub
cmp
pop
outsl
insl
rcll
pop
dec
xchg
dec
jbe
lock
addl
lret
dec
les
shlb
sub
and
and
push
push
fsubl
adc
sub
fidivrs
inc
rolb
test
int3
cld
outsl
fbld
bnd
adcb
xor
pop
mov
xchg
mov
in
out
mov
insb
cmpb
and
pop
mov
sti
mov
inc
leave
dec
fiadds
pop
mov
inc
rolb
js
mov
push
push
aam
mov
icebp
add
or
xchg
scas
mov
or
mov
ret
out
cltd
adc
cmp
cmc
inc
sub
pop
xor
mov
push
clc
insl
subl
rorl
das
adc
sbb
rcrb
add
and
mov
inc
sbb
jecxz
add
or
adc
mov
add
push
xlat
mov
and
les
add
aad
mov
jns
add
dec
xchg
int3
add
mov
incl
movsl
mov
add
push
jb
mov
xlat
faddl
lcall
push
add
cmp
loopne
stc
add
push
xchg
shlb
sbb
test
addr16
adc
pop
cmp
or
xor
xchg
cmpb
pop
enter
add
test
mov
ret
xchg
mov
add
xchg
mov
mov
adc
insl
test
jbe
or
xchg
ja
out
stc
push
loope
jne
or
pop
and
aam
add
dec
and
mov
push
push
pop
sti
call
daa
xor
lods
add
or
int
lock
cltd
fistpl
mov
jbe
or
scas
shrb
mov
push
dec
fs
push
shr
out
and
push
mov
mov
dec
xchg
fsubrp
test
rorl
nop
mov
shl
inc
sub
cmp
add
rol
inc
jno
mov
andl
and
fcompl
outsb
stc
ret
shrb
sbbb
sub
arpl
mov
fmull
xchg
test
cmpsb
and
stc
mov
jg
je
insl
add
jmp
rcrl
jo
fucom
add
and
push
test
iret
cmp
pop
sub
lods
mov
add
fiaddl
jne
push
ret
lock
pop
add
and
stc
cmp
popa
or
lcall
xchg
mull
popf
pusha
loopne
cmp
mov
inc
push
mov
cmp
and
insl
lret
xor
jo
sarl
mov
or
and
es
xchg
cwtl
cmp
push
jae
clc
mov
cld
push
and
fsubrs
in
xchg
jae
stos
jb
and
jmp
xchg
mov
aaa
push
add
xchg
pop
test
mov
movsb
push
cmp
int
sub
and
and
sub
and
pop
je
jecxz
outsb
rcl
in
mov
nop
out
xorb
adc
jge
add
jmp
pushf
add
jl
jle
mov
sarl
add
xor
jnp
in
dec
addl
je
mov
data16
cltd
stos
add
xchg
fdivs
test
sahf
sub
lahf
inc
sub
dec
sub
mov
cmp
jmp
xchg
pop
stos
pop
outsl
cmp
daa
aas
out
add
outsb
jecxz
addr16
add
sbb
filds
push
inc
shll
mov
ficoml
mov
jecxz
add
or
cmpsb
and
cltd
jle
fisttps
dec
shlb
mov
hlt
pop
in
mov
add
sbb
add
pop
add
shll
mov
dec
nop
aaa
xor
push
and
add
sbb
add
std
jg
lods
or
add
xorb
mov
dec
cwtl
int
mov
pop
xor
addl
inc
movl
add
cli
sarl
daa
sub
xor
shr
push
sbb
cmpb
addr16
inc
add
mov
rolb
por
movsb
out
inc
test
mov
inc
negb
cmpsl
xchg
jle
cmp
rolb
push
inc
pop
add
xor
xor
fwait
push
add
inc
add
jg
fnstenv
or
add
lds
int3
pop
popa
mov
out
sbb
add
mov
js
and
dec
mov
xchg
fidivl
and
sti
pop
incb
dec
xor
loope
in
stos
int3
popa
jmp
or
mov
imul
adc
xor
cld
dec
add
clc
in
xorl
rorb
sbb
or
call
mov
mov
dec
jecxz
lods
add
je
mov
add
setbe
push
add
or
xchg
pop
test
lret
mov
ret
adcb
je
adc
push
push
or
mov
mov
fists
xor
adc
xchg
cmp
add
add
jmp
mov
push
add
xchg
mov
jb
dec
scas
jnp
sub
lahf
loopne
outsb
mov
out
dec
xchg
mov
and
inc
push
cmc
add
dec
add
xor
mov
lea
sbb
add
push
imul
mov
or
adc
int
xchg
and
sbb
test
mov
stos
jo
push
sub
test
ret
and
pusha
nop
hlt
mov
ja
mov
mov
jns
jge
jb
lcall
shufps
and
aaa
add
add
dec
test
jo
enter
pop
int
iret
pop
imul
adc
loopne
fnsave
sahf
add
cmpsl
clc
out
mov
out
add
hlt
enter
stc
mov
shlb
add
xor
sub
inc
add
inc
and
xchg
std
das
add
xor
cltd
mov
imull
inc
mov
ljmp
push
cmp
mov
scas
into
orb
mov
dec
fsubrl
lahf
cltd
cwtl
pop
scas
rolb
sub
xor
ss
pushl
stos
in
adc
add
dec
in
xchg
push
jae
add
stos
movb
rcrl
inc
mov
jbe
add
adc
mov
dec
xor
outsl
add
sub
push
mov
inc
shlb
add
jns
push
or
shlb
and
jg
cmp
add
mov
lret
mov
sbb
cmp
sbb
addr16
aas
shll
inc
push
adc
dec
lret
pop
add
sbb
or
cmpsb
fdivs
stc
sub
push
fsubrp
mov
mov
cmp
add
xchg
pop
push
lea
pop
pop
hlt
pop
adc
test
fs
mov
les
adc
out
mov
xor
fistpll
in
lcall
pop
pushf
adc
dec
sub
inc
jg
add
pop
insl
cltd
pop
movsl
cmp
outsb
lds
out
pushf
dec
mov
mov
int3
push
fdivs
movsl
stos
xchg
das
xor
imul
add
jbe
cmpsb
xchg
sub
testl
cld
xchg
xchg
lcall
faddl
cmp
bound
add
jnp
pop
leave
push
mov
gs
pusha
into
xchg
fnstenv
add
cmp
shll
or
adc
jl
lods
add
mov
xor
add
test
mov
je
and
xor
or
push
mov
pusha
out
xchg
lock
in
pop
outsb
and
je
add
sub
mov
enter
push
in
fldenv
add
outsb
stc
and
insb
clc
adc
push
mov
add
xor
pop
jp
inc
cmp
inc
outsb
cmp
sahf
ret
and
add
push
jae
push
leave
sub
mov
inc
xchg
jno
out
xchg
std
es
arpl
jo
imul
outsb
negb
mov
repz
sbb
mov
cld
aas
cmp
dec
push
cmp
ja
nop
mov
loopne
push
add
les
inc
xchg
mov
pusha
sar
push
add
sbb
mov
xor
lcall
jb
mov
ljmp
fidivrs
fsubs
adc
flds
mov
xor
push
aaa
xchg
dec
into
add
sbb
xchg
repz
addr16
pop
xchg
cmp
je
dec
imul
xchg
fs
cli
mov
mov
repz
add
test
pusha
addr16
xor
jg
push
int3
jp
lahf
outsb
pop
daa
mov
lock
fiaddl
inc
insb
cli
dec
ret
dec
insl
cwtl
add
jo
js
mov
pop
ffree
lods
mov
and
sub
and
bound
or
mov
stc
add
mov
hlt
dec
mov
arpl
roll
mov
mov
add
sahf
mov
subb
daa
aad
jae
add
in
rcl
cmc
test
sti
in
pop
mov
ja
inc
data16
lods
jg
push
jmp
out
fimuls
xlat
or
shr
int3
xor
xchg
jae
incl
repz
addr16
jb
and
js
jle
mov
or
pop
arpl
adc
icebp
xor
orb
adcb
iret
into
jmp
lret
xor
jnp
aam
out
cmp
inc
mov
stos
ret
mov
mov
adc
fbld
xchg
mov
cmpsl
inc
arpl
popa
add
dec
push
js
adc
mov
dec
je
nop
add
push
mov
icebp
ffree
sbb
push
mov
and
add
push
ret
sbb
push
fldl
add
sub
cmp
pop
ja
push
pop
cltd
xorb
push
add
pop
lcall
mov
sti
or
mov
pusha
jl
lcall
mov
addb
push
jo
jns
add
in
add
xchg
in
xor
jge
movsl
ret
icebp
mov
shrl
dec
scas
pop
cmp
add
lds
lret
mov
rcrl
or
jmp
mov
shll
mov
icebp
int3
addr16
push
push
sub
cwtl
add
or
or
push
xor
in
jo
inc
jp
sbb
in
mov
nop
inc
popa
cli
add
orb
inc
leave
xor
cmp
push
add
dec
jp
pop
dec
in
in
add
popa
andl
mov
or
test
std
lahf
xor
in
shufps
int3
lods
push
sbb
inc
add
jmp
push
jl
jge
and
push
and
adc
ja
xor
cmpsb
jne
push
adc
jb
xchg
test
jno
aaa
push
out
popa
add
mov
out
jb
add
lcall
arpl
cltd
jp
jle
add
int
mov
scas
mov
out
add
sub
jp
sarb
clc
lret
pop
fwait
pop
std
inc
aam
arpl
pop
xchg
lret
imul
cmpsl
jae
shlb
mov
and
add
sbb
cmp
add
pop
test
add
jecxz
xchg
mov
xor
pop
inc
cmp
daa
mov
imul
icebp
push
es
inc
jb
mov
inc
mov
rol
fmuls
stc
std
dec
pop
sbb
icebp
nop
mov
xor
cmc
xor
test
out
add
xchg
pop
subl
push
loop
fsts
mov
sub
xchg
mov
jg
fadds
mov
gs
and
loop
leave
push
mov
mov
push
fcmovbe
jbe
or
mov
sub
inc
je
mov
or
mov
dec
sbb
mov
push
pop
addl
cmpsl
sub
in
push
movl
pop
add
mov
cmp
andb
sbb
scas
jl
push
cmp
jp
jno
cli
dec
aaa
cltd
fadd
sbb
xor
and
fcoml
jns
test
add
int
jg
insb
into
sbb
in
repnz
les
jle
cmpb
fisubrl
aaa
adcl
mov
int3
into
js
cmpsb
ret
xor
cld
jp
or
insb
in
lret
mov
sub
int3
lock
cmpsl
adc
inc
outsb
leave
sbb
jp
imul
andl
sub
sbb
push
mov
mov
push
sar
cmp
int3
mov
movsl
add
fbld
aam
movsb
jmp
cld
out
mov
mov
in
pop
add
jp
and
xlat
xchg
push
add
popl
stc
mov
push
rol
icebp
jb
test
ret
loopne
call
clc
std
and
pop
nop
pop
pusha
add
testb
add
cs
jnp
sub
xchg
push
pop
lret
xor
xchg
imul
cmp
hlt
inc
fdiv
xor
xor
and
mov
jo
rolb
mov
push
push
push
adc
cmpsl
add
jno
jb
add
mov
cltd
test
scas
push
jae
sbb
insb
pop
cmpsb
add
fistps
sbb
inc
add
xlat
ret
add
xchg
mov
pusha
je
nop
ljmp
int
aad
fildl
and
popa
or
shl
pusha
sub
adc
stos
and
stc
add
gs
add
fmul
sbb
add
loopne
add
xor
callw
inc
roll
mov
xchg
pusha
sbbb
and
pop
js
scas
or
xor
mov
cwtl
cwtl
inc
pop
dec
or
sbb
xor
xor
mov
xor
xchg
mov
dec
jmp
push
nop
in
inc
clc
dec
push
jl
pop
cmc
cmpsl
fildll
mov
loopne
in
pushf
jae
sbb
ja
je
mov
pop
pusha
xorl
dec
mov
jbe
pop
dec
in
scas
mov
xchg
sub
in
pusha
rcrb
adc
cmp
add
lea
in
sar
or
and
rorb
or
loopne
jmp
xor
xor
rcrb
fisttps
xor
mov
jae
or
cwtl
xor
add
push
mov
pop
or
in
xchg
jle
clc
jnp
or
or
pop
call
ja
mov
add
lret
call
fistpll
jecxz
int
gs
dec
cltd
nop
rorb
add
add
mov
pop
sbb
add
pop
sub
cmp
icebp
fmul
repz
aaa
pop
sub
mov
je
jnp
out
imul
inc
and
addr16
add
push
int3
inc
add
add
mov
dec
pop
je
inc
add
fcomp
idivl
hlt
jnp
shrb
movsb
add
enter
xor
cmpsl
std
add
and
dec
imul
out
fiaddl
fsubrs
fsts
sub
mov
out
inc
fsubl
jae
sbb
pop
lahf
jl
inc
cmp
sub
pusha
dec
xor
pop
xchg
jo
fcmovne
xor
call
adc
cmp
and
not
add
push
movsb
sarl
repnz
cld
add
out
cmp
aas
xchg
enter
cmp
adc
leave
mov
sti
mov
sbb
xchg
push
nop
mov
icebp
addr16
inc
push
in
adc
cld
sub
and
rcl
push
sbb
movsl
jg
out
in
pusha
and
lret
daa
jmp
and
rolb
add
jne
cmpsb
push
insl
int3
adc
jp
push
dec
and
add
inc
loope
in
xor
ret
sub
cmp
ror
sti
aaa
sbb
cmp
sbbb
fistl
aam
icebp
and
pop
jne
in
je
add
sbb
out
icebp
mov
leave
sub
cld
cs
and
push
shl
pop
mov
getsec
sub
bound
fcomi
call
add
lret
mov
push
push
xor
and
jmp
add
pop
mov
in
push
outsl
fistps
push
dec
pushl
inc
add
test
jb
jns
bound
aam
movb
sbb
aad
mov
filds
sub
into
bound
cli
jge
jle
jno,pn
push
add
movsl
dec
jno
sub
push
lret
andb
mov
or
dec
mov
addb
push
leave
pop
pusha
test
movsb
xor
inc
and
idivl
push
inc
xchg
fiaddl
addl
sub
jmp
fisttpl
xchg
cmpl
push
daa
enter
enter
sub
and
sub
mov
aas
xor
adc
stos
xor
imul
or
or
or
jl
mov
jne
push
or
popa
popf
pop
inc
add
dec
jno
divl
lock
jo,pn
adc
add
push
cmp
and
cmp
add
dec
jge
stc
dec
jno
lock
addr16
cmp
movsl
inc
cmpsb
xor
inc
popa
dec
or
mov
pop
repz
push
hlt
aas
xor
loope
cmp
lahf
adc
sbb
shlb
bound
push
out
scas
or
aam
in
shrb
int3
and
add
dec
mov
adc
lock
mov
or
testl
sub
imul
ss
aaa
out
sbb
popf
out
cwtl
or
and
add
or
mov
xchg
add
sbb
dec
add
out
popf
mov
push
das
fsubrs
mov
add
incl
popa
imul
and
add
inc
adc
in
aam
adc
push
lea
or
clc
add
cmp
int
add
jle
or
mov
pop
rclb
sarb
push
repnz
mov
lcall
mov
fs
jno
in
or
aam
xchg
mov
fistps
mov
cld
push
add
in
js
adc
pop
adc
cwtl
rolb
and
adc
xchg
or
and
push
sbb
adcl
int3
loopne
nop
push
push
fdivrs
and
in
add
in
xchg
ror
pop
pusha
imul
out
lret
ror
sbb
and
xchg
jns
inc
sbb
ja
add
xchg
pusha
and
enter
jno
mov
gs
dec
data16
icebp
adc
adc
adc
ret
in
test
call
add
into
and
fists
push
or
btc
int3
xchg
lcall
cwtl
shlb
arpl
subb
or
xchg
or
cmp
enter
jg
mov
out
enter
or
mov
inc
mov
push
cmp
xor
cmpsl
add
push
xchg
fbld
call
cmp
and
int
data16
lods
add
loop
aas
inc
std
or
jmp
push
push
repz
sbb
jp
push
addr16
mov
mov
sub
adc
test
and
inc
sub
out
pop
lock
pop
push
push
enter
adc
dec
pop
sbb
int3
xor
scas
vpunpcklbw
cmp
enter
xor
addr16
fcompl
xor
push
cs
inc
rolb
push
xchg
jbe
add
jne
insw
in
in
sbb
mov
adc
sub
mov
jnp
mov
out
cmpsl
xchg
add
mov
jle
in
xorl
xor
add
outsb
bound
sub
rorb
repnz
rclb
sbb
fwait
movsl
dec
add
add
scas
push
arpl
ficoms
mov
adc
and
popa
and
std
and
mov
cmpl
mov
and
or
in
jns
cwtl
adc
lods
and
or
popa
xchg
add
rclb
cmpsl
xchg
xor
pop
jp
mov
rcrl
in
leave
lods
mov
xchg
push
pop
xchg
or
data16
jae
cmp
adc
stc
xchg
adc
push
clc
inc
jmp
cmp
mov
mov
add
xchg
shll
cmpsb
popa
fwait
add
xchg
ja
sbb
test
inc
fisubl
mov
adc
sahf
jp
mov
or
sub
ret
shlb
mov
shll
popl
enter
fldcw
xor
nop
push
inc
sbb
and
pop
sbb
xor
aas
push
sarb
add
add
add
adc
js
sub
lea
sub
rolb
xchg
dec
pop
adc
mov
cmp
jecxz
cmp
jle
add
sbb
inc
es
pop
ljmp
popf
incb
add
stos
mov
push
xchg
sub
leave
mov
adc
push
clc
adc
roll
sub
mov
pusha
push
push
sbb
out
push
adc
add
sbb
add
or
sbb
pop
or
les
cmp
enterw
add
stos
into
mov
sbb
dec
sbb
out
push
mov
inc
sahf
shrl
dec
int3
popf
out
adc
mov
sub
xor
pop
jg
adc
adc
add
push
or
lahf
jb
rol
jle
jg
les
fnstenv
out
push
xor
add
ss
orb
pop
sbb
mov
out
inc
or
out
mov
pop
sub
clc
add
out
mov
pusha
into
add
mov
xor
or
pop
pop
int3
dec
add
movsl
out
pop
add
push
xchg
adc
das
aam
jo
data16
lahf
sarl
adc
dec
nop
jp
in
push
int
add
inc
and
aad
add
orl
leave
lea
sbb
mov
dec
jp
mov
mov
inc
dec
cli
pop
sbb
cld
inc
icebp
loop
int3
push
add
lcall
xor
int
fs
mov
mov
inc
sahf
nop
int3
cmp
rcrl
xor
push
or
jno
pop
clc
sbb
cmp
sbb
sbb
add
or
cmp
cmp
insl
push
dec
lock
dec
addr16
cltd
adc
xor
insb
subb
scas
mov
cmp
js
dec
aad
cmp
mov
push
adcb
dec
repnz
inc
xchg
insl
mov
pop
jg
cmp
mov
add
sbb
cmp
and
add
fcoml
shr
sub
and
add
lea
adc
mov
arpl
cltd
push
pusha
insl
mov
mov
insl
fcompl
subb
mov
xchg
add
fiaddl
pop
aad
shrb
jb
pop
outsb
in
xchg
pop
in
jecxz
aam
js
add
lret
mov
or
xor
pusha
push
push
sbb
inc
and
lods
sbb
add
repnz
jg
lahf
add
jmp
or
adc
and
pushf
mov
pop
add
stos
lret
clc
and
inc
inc
sbb
sub
ljmp
add
data16
xchg
jmp
sbb
xchg
cli
inc
movsb
mov
in
in
in
push
and
pop
xor
dec
pop
test
adc
pusha
nop
mov
jns
inc
cwtl
jb
sbb
sahf
scas
fadds
cli
mov
mov
adc
outsb
mov
and
mov
cmp
lock
pop
pop
inc
clc
push
mov
stos
adc
rorb
stos
pusha
pop
mov
fidivrs
jo
add
dec
ljmp
fadd
mov
sar
fadds
in
mov
dec
sub
sarl
fldl
or
mov
je
mov
jmp
add
popa
leave
roll
lcall
xor
addb
sbb
addr16
mov
and
mov
xor
push
mov
insb
adc
mov
js
dec
cmp
adc
jae
push
mov
hlt
loope
loopne
push
pop
es
jg
fmull
mov
xchg
pop
xchg
adc
sub
jns
add
xor
inc
lock
adc
fisubs
subb
inc
rcrb
push
test
adc
cmp
and
or
add
mov
pop
or
and
cli
or
ljmp
or
hlt
adc
pop
fwait
add
push
adc
add
xchg
add
fcmovb
or
js
pop
dec
adc
jle
sbb
add
or
pop
int3
js
or
sbb
les
aad
add
push
sti
repnz
fadd
and
enter
mov
ret
ret
xor
in
xor
cli
inc
cmp
add
cmp
xor
push
add
or
mov
and
mov
clc
inc
sub
lahf
and
add
incl
sbb
shrl
jle
sbb
lock
popf
jb
dec
add
dec
xorb
sbb
pop
inc
sbb
inc
loopne
sub
add
mov
push
xor
lock
add
lea
pop
lods
xor
es
mov
pop
sub
test
js
test
cmc
xchg
clc
dec
nop
adc
mov
mov
xchg
xchg
aam
call
or
xor
scas
pusha
int3
shr
mov
movsl
pop
popa
or
sbb
cmp
addb
je
xor
jmp
push
int
aad
pushf
sub
mov
cmpsl
test
lds
out
adcl
clc
subb
cli
push
sbb
and
add
jmp
jno
pop
add
pushf
and
es
add
das
add
insb
dec
ret
add
std
ficoms
subl
mov
push
bound
dec
mov
jg
or
es
add
cmpsb
rol
cltd
add
jmp
test
push
and
out
mov
jecxz
rdpmc
movsl
idiv
shl
cli
shlb
pop
std
jg
or
and
cmpsl
popf
test
add
dec
hlt
scas
bound
subb
cli
xchg
cmp
fwait
or
pop
add
loopne
cmp
push
ficoms
pop
mov
jo
cmp
inc
fs
mov
add
loope
or
add
sti
jb
rcrb
std
inc
sbb
aam
stc
jge
loop
add
mov
rorb
push
jmp
sti
pop
sub
loop
add
cmpsl
push
push
mov
push
adc
add
data16
mov
mov
adc
fwait
test
fsubl
push
lock
es
ds
xor
clc
xor
push
fidivrl
movsb
push
jbe
sahf
call
cmp
shl
cmp
scas
cmc
xor
pop
adc
pop
sbb
out
xchg
add
icebp
or
cmp
data16
cmp
xlat
and
adc
andb
aam
enter
mov
jge
sahf
xchg
add
loope
rcrb
fcoml
adc
mov
xchg
js
push
scas
sbb
dec
or
or
jl
ljmp
add
pop
xchg
xchg
fcompl
mov
jmp
xchg
or
movsl
scas
mov
cmpsb
cmc
xor
lods
or
or
mov
add
sti
inc
sbbb
push
xchg
and
test
add
imul
ret
adc
cmp
and
jb
ja
in
add
jmp
inc
nop
adc
test
mov
push
xor
pop
sub
stc
roll
dec
pop
lea
sub
testb
jecxz
xchg
sarl
mov
mov
insl
inc
js
mov
lock
call
add
mov
mov
fadds
mov
inc
push
add
lcall
add
sub
xchg
add
jge
fnsave
xchg
fsubs
sbbb
push
mov
orb
mov
push
add
sbb
mov
pop
sbb
cmp
push
jmp
aas
nop
je
ss
popf
push
sub
jge
fs
cmovae
or
das
inc
mov
ret
or
sti
sahf
addb
mov
and
sbb
xchg
dec
in
shrb
out
cli
and
mov
sub
insb
pop
hlt
mov
shrb
xorb
enter
addl
enter
lret
mov
mov
mov
add
mov
adc
sub
jle
pop
xchg
or
pop
adc
or
jge
fisubl
sarl
fwait
mov
jb
add
or
fs
rclb
xorb
jne
push
rcrb
scas
mov
filds
xchg
sub
mov
sbb
push
add
jecxz
lods
push
nop
add
es
mov
outsb
movsl
jbe
out
cmp
mov
cmp
push
mov
sti
add
sub
bound
scas
sarb
cmp
jle
in
mov
jns
mov
lock
in
pop
inc
testb
xchg
jb
push
ljmp
xor
je
sbb
es
inc
dec
imul
rolb
lods
stos
pusha
sbb
and
pop
inc
sub
dec
rol
cmp
dec
push
popf
push
hlt
add
test
rolb
mov
xchg
gs
leave
addr16
pop
add
mov
add
loopne
dec
xorl
cmp
je
ss
nop
xchg
cmp
loopne
inc
in
mov
mov
int3
rep
jns
push
xchg
sbb
in
inc
adc
or
adc
jmp
stos
add
sbb
mov
stos
ja
add
pop
cmp
or
sub
mov
and
xchg
push
repnz
fsub
jecxz
sub
test
or
mov
and
loopne
xchg
orl
stos
adc
xchg
add
loopne
mov
cmpsl
pop
adc
push
xor
in
test
or
cmc
pusha
lds
arpl
cmp
stos
in
or
jbe
sub
ret
mov
cltd
int3
mov
aaa
test
mov
loop
sub
or
pop
adc
xorl
push
or
dec
ret
aam
push
subb
nop
inc
fldenv
daa
dec
pop
mov
decl
mov
mov
bound
xchg
faddl
adc
pop
pop
arpl
xchg
movsb
stc
xor
lcall
dec
add
lret
cmp
enter
js
sbb
dec
mov
or
out
pusha
push
cmp
mov
or
add
push
jae
jnp
adc
xchg
pop
fs
xor
xor
int
add
adc
jle
movsb
or
test
and
dec
inc
clc
popf
push
aas
inc
cmp
add
scas
call
add
pop
int3
xchg
push
jle
xchg
test
adc
cmc
sarb
pop
cltd
xchg
movsl
mov
dec
les
int3
and
in
in
fwait
mov
in
hlt
push
xor
push
decb
aas
adc
xor
mov
or
jmp
lahf
inc
mov
and
mov
xlat
inc
push
call
int3
test
jns
pop
pop
roll
cmp
pop
scas
xchg
dec
clc
adc
mov
push
cli
or
dec
or
and
add
mov
or
push
sub
insb
sbb
or
fdiv
jno
sub
out
pop
stos
jl
jae
incl
loope
mov
dec
jmp
jge
ret
cmc
int3
clc
movsl
jns
outsl
cwtl
add
pop
sbb
adc
out
add
xor
add
xor
mov
ds
mov
and
cli
add
lret
lea
cld
jge
add
fimuls
aas
and
xor
shl
mov
insb
cmp
scas
sarl
fcmovbe
daa
sub
bound
clc
xorb
mov
inc
test
mov
xor
mov
in
mov
int
dec
jecxz
incb
push
push
pop
pop
dec
mov
dec
lret
adc
pop
and
xor
and
ja
and
push
jne
add
jns
pop
pop
or
add
movsl
stos
sub
mov
jecxz
sbb
or
adc
mov
shrb
hlt
ret
dec
mov
out
pushf
add
jle
xchg
loopne
push
push
add
or
nop
ja
sbb
sbbl
and
xchg
fsubrl
or
int
or
rorl
xor
je
inc
into
pop
xchg
add
bound
and
imul
dec
and
inc
cld
icebp
add
mov
ret
jo
add
xchg
adcb
mov
xor
or
and
jo
mov
in
bound
sbb
and
and
add
xchg
inc
fstps
add
dec
pop
push
pop
dec
push
add
mov
push
push
xlat
sbb
clc
flds
mov
mov
cmp
and
dec
pop
push
jl
sahf
int3
inc
xchg
or
and
or
repnz
jo
add
add
scas
fmulp
xchg
shrb
mov
pop
scas
or
les
or
faddl
and
rolb
bound
dec
dec
adc
test
pushf
adc
push
sub
mov
jg
xchg
imul
mov
sbb
stc
in
hlt
movsb
cmp
xchg
rcr
in
push
adc
xchg
sbb
xchg
xor
or
pop
or
stc
add
shrb
add
int3
xchg
iret
mov
add
inc
pop
and
cmp
xchg
loopne
xor
popa
cmp
jbe
add
adc
or
adc
test
inc
inc
leave
jge
outsl
push
lock
mov
dec
jns
add
inc
xchg
inc
mov
xor
add
fisubrs
push
cmpb
rcr
in
dec
loope
jne
nop
jecxz
or
fwait
mov
pop
adc
test
lods
cmp
cmp
cmp
or
sbb
and
cmp
push
sbb
lcall
push
rcrb
add
inc
xchg
cmp
add
nop
arpl
xlat
xor
mov
ja
add
shrb
adc
jmp
xchg
mov
outsl
ljmp
lahf
mov
xor
push
jo
mov
inc
sbb
and
incl
enter
jno
or
mov
cli
jle
jne
mov
dec
call
fiaddl
lahf
in
push
jl
cmp
adc
lock
test
mov
xchg
fbstp
shlb
les
es
test
daa
lock
jo
ret
outsl
ljmp
imul
mov
cmp
sbb
xchg
test
std
cmp
bound
insb
push
xchg
pop
mov
or
jo
aad
int3
nopl
movsb
repz
ret
xchg
test
mov
xor
and
xchg
inc
ja
enter
movsb
xchg
add
push
xchg
sbb
or
push
jnp
test
fldt
imul
jne
mov
arpl
je
sbb
lcall
jb
inc
add
insb
mov
xor
mov
and
jl
dec
mov
mov
inc
movsb
repz
ret
adc
mov
movsl
sbb
loopne
sub
lret
mov
loop
pusha
or
inc
add
insl
sub
test
cmp
and
insb
and
adc
fwait
pusha
in
rep
loopne
jmp
and
xor
push
add
lea
ds
rclb
cmp
push
xchg
lret
add
mov
mov
adc
pop
sar
or
adc
mov
orb
sub
mov
pop
push
incl
cld
aaa
pop
push
nop
mov
pusha
dec
jne
cwtl
add
xor
mov
mov
test
and
loop
call
add
mov
cld
push
testl
xchg
adc
add
adc
vpavgw
adc
aas
stc
mov
inc
ret
or
aad
ret
inc
aaa
stos
rcll
add
fisttpl
or
mov
xchg
jge
mov
andb
fbld
clc
pop
add
or
jge
push
sbb
and
or
fstl
or
pop
mov
add
jp
push
cmc
imul
cmpsb
rclb
mov
repz
dec
add
mov
mov
data16
mov
sub
sbb
jl
add
pop
nop
mov
push
cltd
adc
and
adc
lcall
mov
pop
in
pop
mov
xchg
inc
bnd
cmp
add
sbb
pop
test
loopne
sbb
nop
jbe
cs
loopne
jo
add
pop
inc
shlb
fwait
jns
arpl
sbb
add
mov
andl
arpl
pop
fidivl
fsts
fcompl
bound
or
mov
hlt
je
and
and
imul
push
pushf
push
or
call
add
adc
ljmp
push
incb
push
mov
sti
testb
pop
xor
sbb
jl
jns
add
mov
xor
out
add
cmp
inc
push
outsb
push
add
sbb
add
adc
xor
je
dec
add
adcb
into
popa
add
mov
jns
cmp
scas
add
lock
fs
xor
or
add
jp
in
repnz
jne
add
subl
dec
sarb
cltd
sbb
bound
xor
jg
imul
or
or
popa
sub
ret
xchg
aas
or
mov
das
sbb
mov
lock
flds
push
adc
push
jno
pop
cmp
das
push
nop
push
sbb
lcall
xor
in
xor
inc
ljmp
fsubrl
sbb
jnp
pusha
push
out
cmpsl
pop
mov
stc
sti
inc
xchg
push
je
xlat
sti
xor
and
mov
dec
cmp
xchg
pop
aaa
testb
inc
rorb
xor
mov
add
jb
cmp
mov
out
mov
fstp
inc
mov
daa
jno
add
fstps
dec
sub
ljmp
or
and
and
pushf
testb
sbb
lcall
loopne
aad
pop
ljmp
call
inc
in
and
je
pop
adc
inc
add
call
addr16
add
and
xor
jb
push
sbb
push
jns
xchg
into
shll
int
repnz
mov
mov
and
add
add
aaa
leave
inc
scas
roll
or
ds
lcall
dec
mov
out
mov
cmp
mov
out
mov
cmp
ret
and
and
sbb
adc
lods
adc
adc
push
mov
jmp
xchg
sbb
xchg
mov
push
push
pusha
push
nop
inc
xor
add
or
xchg
rol
scas
add
sbb
mov
fbld
jb
mov
jp
mov
sbb
pslld
add
jle
outsl
xor
cld
pop
add
stc
jo
mov
pusha
inc
jb
add
adc
leave
movsl
add
cmp
dec
add
pop
jne
cmp
loopne
adc
inc
repz
cmpsl
inc
jno
xor
inc
xchg
mov
push
xchg
popa
add
mov
jae,pt
mov
add
lock
or
add
addr16
and
jns
fimuls
push
rcrl
lahf
jmp
enter
fcomps
sarb
push
add
movsl
cmpl
cmp
rcrb
mov
paddw
cmp
call
dec
add
dec
pusha
sbb
fistpll
incl
sti
mov
shrb
pop
add
repz
out
pop
add
jecxz
imulb
jae
sub
push
cmp
aas
pop
loopne
push
icebp
mov
jno
cwtl
shll
andb
hlt
push
xchg
or
add
sarb
jae,pn
mov
inc
inc
jge
and
inc
pop
test
pop
fimull
nop
ds
add
dec
ljmp
push
dec
cmp
sbb
push
fsubrl
loopne
insb
enter
dec
add
shl
pusha
mov
cld
iret
xchg
cmp
cmp
push
popf
dec
imul
in
pop
sbbb
push
and
arpl
xlat
hlt
pop
mov
movsl
xchg
mov
push
inc
xor
add
loopne
div
nop
scas
xor
test
jp
mov
fnop
mov
dec
add
sbbb
jno
stos
push
scas
outsl
in
ret
inc
mov
shld
jle
cmp
loope
sub
inc
pop
in
sbb
sub
mov
mov
out
jae
xchg
rcrb
cli
sti
out
add
adc
fisttpl
loopne
test
mov
add
call
pop
add
repnz
dec
inc
jb
dec
mov
cmpsl
popa
add
sub
sbb
and
movsl
dec
loop
sbb
lcall
mov
pop
add
mov
aad
add
fisubrs
jp
hlt
loopne
jmp
jnp
push
lds
sub
jbe
pop
xchg
js
or
mov
xor
or
scas
cwtl
jo
in
rolb
iret
push
call
loop
pop
les
dec
xor
lds
add
movsl
jae
mov
inc
jo
nop
mov
pop
xchg
and
mov
insl
add
repz
imul
and
jns,pn
les
insl
or
lods
adc
jl
sbb
jne
std
lahf
xchg
iret
sbb
adc
fisubs
js
add
hlt
add
in
xchg
push
push
jecxz
add
mov
inc
adc
inc
jl
add
add
cmp
dec
or
fidivrl
sbbl
and
in
mov
cmpsb
sub
repnz
mov
add
pop
push
lret
adc
add
xor
out
sbb
dec
faddl
daa
bound
mov
inc
adc
cmp
xchg
dec
jns
nop
icebp
cmp
or
orl
cmpl
mov
mov
inc
cmpsl
add
jbe
ret
add
nop
insl
test
push
and
shll
nop
rorl
mov
clc
mov
mov
push
add
add
cwtl
mov
xor
add
outsl
dec
or
js
das
repnz
jne
xor
cmp
push
idivl
adc
jmp
mov
out
sub
mov
pusha
cmp
pop
movsb
inc
pop
add
in
mov
add
cmpl
add
mov
arpl
sub
sbb
pop
add
in
mov
pop
out
out
test
lock
stos
stc
ja
mov
add
sbb
int
inc
add
add
and
dec
jg
jnp
ja,pn
shl
loopne
lcall
lods
test
add
je
hlt
les
jnp
es
xchg
lds
daa
dec
pop
lods
pop
add
add
cmc
gs
adc
jmp
add
jae
dec
adc
dec
add
dec
loop
gs
add
fstps
leave
pop
pop
or
jp
pusha
pusha
mov
int3
call
add
dec
daa
dec
add
sbb
mov
xchg
fldl
rcrb
push
mov
or
push
in
subl
flds
push
js
add
pop
and
cmp
in
nop
mov
and
push
or
shl
mov
out
jbe
sbb
dec
sub
push
sbb
aaa
lret
pop
add
adcb
pop
mov
scas
push
xchg
or
xor
std
push
adc
sub
sub
xor
jnp
jo
pusha
cmp
mov
add
jbe
rcrl
roll
add
dec
inc
mov
imul
sub
shlb
cld
sbb
ret
add
les
xchg
jmp
out
rorb
mov
xchg
mov
rorb
cmp
cwtl
or
fildll
push
sub
add
test
addl
sbb
or
fsubp
imul
pusha
dec
sarb
and
add
das
push
std
mov
push
dec
or
pop
xchg
xor
fbld
add
cmpsb
xor
add
sub
mov
add
inc
mov
xor
mov
add
sarl
ret
stos
and
jle
roll
xchg
push
in
push
adc
xchg
adc
addr16
add
mov
mov
push
add
gs
outsb
sub
je
add
mov
fidivrl
aad
add
das
lcall
sbb
or
pop
sti
cmpsb
lret
ret
jo
jp
scas
add
aam
sub
xchg
pop
lods
and
push
je
add
pop
xchg
popa
movl
ja
and
imul
cmc
jnp
add
sub
add
fidivl
sahf
rcrl
push
mov
jnp
mov
push
xor
or
fmulp
call
xlat
add
add
cwtl
imul
clc
subb
mov
xchg
jne
pusha
inc
jge
in
add
push
fucomi
in
xor
xor
inc
push
ret
sbb
pop
xchg
sub
out
or
aas
aaa
mov
testl
loopne
adc
push
push
pop
mov
add
mov
mov
fcoms
dec
add
mov
insb
arpl
xor
push
jg
testl
cwtl
mov
xchg
das
xor
adc
xchg
rolb
ret
add
rorl
das
sti
sub
fisubrs
add
lret
inc
movsb
dec
cmp
sub
sbb
mov
dec
dec
sti
sbbl
sbb
sahf
add
push
out
fstps
in
mov
xor
out
jb
xchg
add
mov
lods
sub
adc
and
xor
cmp
mov
cmpsl
fisubrl
cmpl
add
jbe
leave
in
push
stos
pop
ss
insl
xor
data16
fildl
push
mov
ret
mov
mov
pusha
mov
sbb
out
and
sbb
add
out
and
add
inc
cwtl
xchg
mov
out
test
and
add
cmp
xor
icebp
call
jecxz
mov
push
and
lea
pop
xor
loop
add
ds
pop
sub
xchg
cli
push
subb
cmp
lock
pop
dec
xchg
mov
and
or
je
ja
add
push
sub
mov
cmp
mov
fmull
ss
push
movsb
stos
sarl
add
loopne
fldl
sub
xchg
and
jno
rcl
cmp
xor
mulb
jge
jne
add
xchg
add
sub
sub
loop
push
dec
add
repnz
jp
pop
pop
jge
jg
mov
addr16
bound
unpckhps
aam
and
in
jg
mov
bound
mov
push
jl
inc
pop
add
orb
pop
xor
sbb
cmp
sub
outsl
xlat
in
scas
or
adc
jp
xor
sarl
loopne
out
popa
cmpb
fwait
rcr
shl
jae
pop
sbb
mov
nop
loop
jp
add
inc
popa
or
mov
mov
adc
inc
jge
pop
pusha
add
dec
insb
cmova
scas
inc
pop
jmp
pusha
jb
jae
js
add
mov
sbb
xchg
rorl
inc
stc
push
call
mov
loopne
std
add
sbb
int3
clc
ljmp
cmc
mov
mov
sbb
hlt
lods
mov
pop
lods
xlat
nop
addb
sbb
dec
mov
mov
mov
lods
int
or
jl
incl
arpl
imul
cmp
adc
xor
rorb
loope
dec
adc
leave
sbb
shl
push
fildll
shr
pop
xor
add
inc
std
in
out
add
mov
rcl
xor
ficoms
ss
pop
stos
mov
fmuls
shl
add
sub
xor
out
aad
bound
fistpl
mov
dec
bnd
add
sbb
addb
out
pop
adcb
fs
fdivrl
test
add
xchg
dec
mov
pop
cmp
xchg
add
xchg
scas
lds
add
gs
fdivrl
ret
fidivl
pcmpgtw
lret
loope
test
shrb
fidivrl
mov
fadds
mov
jmp
das
fsubrs
inc
pop
pop
jne
fsubrs
lock
lret
add
xchg
stos
cli
shlb
cmp
sub
xor
nop
xchg
cmpsb
je
add
pop
movsb
js
or
mov
mov
mov
cmp
mov
inc
ret
and
jns
mov
pop
repz
push
xor
sbb
aad
pop
repnz
inc
adc
mov
pop
mov
out
and
add
or
jns
aas
sub
inc
lret
dec
push
cmp
pop
test
jns
jnp
push
sahf
push
mov
push
and
add
mov
dec
fsubrs
add
jecxz
out
iret
mov
out
rcl
lock
scas
adc
add
xor
mov
cmp
ficoms
or
cwtl
pop
mov
jbe
mul
insl
cmp
mov
inc
xchg
push
add
sub
jb
add
pop
pusha
inc
jg
stc
push
xchg
or
lret
mov
nop
mov
loopne
rolb
pop
mov
mov
loopne
je
lcall
aas
dec
in
add
mov
sub
fisubrs
cmp
mov
add
mov
push
icebp
pop
pusha
nop
push
xor
add
push
pop
cmp
cwtl
adc
mov
push
imulb
mov
enter
push
cld
sbb
xor
cmp
shlb
shl
xchg
jns
sbb
incl
mov
mov
addb
fdivr
push
std
dec
mov
xchg
loope
pop
cmp
push
loopne
in
add
mov
pusha
arpl
movsb
inc
iret
inc
jb
and
pop
xorl
push
pusha
pop
add
xlat
loop
pop
cmp
push
mov
nop
cmp
sbb
inc
addb
add
and
push
mov
add
dec
sub
add
jae
or
push
pop
push
or
in
and
add
lds
xchg
lock
popa
jg
add
lods
scas
or
jecxz
pop
cmc
pop
push
repz
pop
jae
sub
cmp
dec
add
mov
aad
add
xor
lods
mov
mov
or
pushf
aad
movsb
pop
add
inc
incb
and
loope
mov
mov
rorb
pop
shll
lock
pusha
cwtl
lock
cmp
inc
add
test
or
mov
jne
nop
loopne
pop
movb
popf
mov
cmp
jle
add
and
pop
ljmp
push
mov
das
jo
cmp
out
movb
lret
sahf
setns
mov
das
psrlw
sbb
mov
sti
gs
stos
pop
xor
pminsw
repz
out
pop
mov
add
dec
cmp
movsb
loop
out
mov
js
cmovo
rcrb
rol
add
mov
je
pop
xchg
add
icebp
pop
add
clc
inc
fldenv
pop
leave
js
mov
out
inc
cmp
shr
xchg
cltd
xor
add
xlat
xchg
sub
and
sti
test
push
into
jge
incb
clc
addl
jo
adc
pop
ljmp
fwait
sbb
repz
bound
inc
add
xor
xorl
jae
das
jge
bound
mov
mov
push
loopne
jmp
bound
adcb
push
inc
nop
fucomp
mov
and
pop
fisttpl
inc
js
mov
in
rol
sbb
sub
dec
or
int
add
pushf
push
das
les
add
test
mov
push
xor
jno
addr16
into
pop
xchg
stos
ja
add
fisubrs
out
push
or
test
mov
sbb
jmp
in
fmull
add
cmpsb
push
cs
mov
add
mov
or
add
imul
scas
cmp
stos
jmp
test
aas
add
sub
rol
mov
ss
jge
movsb
aaa
fwait
imul
cmpsl
loop
call
iret
xchg
in
jge
inc
push
dec
arpl
sub
and
xchg
es
mov
cli
inc
in
adc
nop
rcrb
push
shlb
mov
notb
insl
lcall
inc
pushf
inc
cpuid
fstpl
cmp
mov
add
sbb
push
incb
mov
or
test
sub
cld
xor
fisubs
jp
add
adc
roll
fildl
xor
cmpsb
lret
cmp
loope
add
add
ss
add
mov
or
xchg
incb
add
xchg
repnz
mov
roll
test
cmp
repnz
sbb
hlt
out
add
int3
in
xchg
pop
cmp
mov
add
adc
popa
push
jp
jl
shlb
fstps
or
sub
sbb
add
inc
pop
add
insb
dec
test
push
sarl
pusha
lea
pop
repz
fwait
ss
or
fidivrl
js
add
outsb
push
leave
call
pop
pop
inc
mov
arpl
add
and
fdivrp
mov
sub
xorb
repz
aad
orl
sbb
push
gs
push
iret
and
insl
ret
lock
adc
stos
movsl
rcrb
shl
adc
ja
addr16
sbb
add
scas
test
or
ret
arpl
or
fcmove
cli
xor
add
out
cmp
adc
xchg
in
repnz
incb
mov
gs
ljmp
repz
sbbb
hlt
popa
adc
sub
mov
mov
or
dec
dec
fidivs
mov
add
add
outsb
inc
in
mov
jb
pop
inc
or
add
loop
sarb
sti
pushf
push
add
push
or
add
dec
repnz
mov
inc
cmp
test
pop
add
inc
daa
or
pusha
shlb
pop
push
dec
mov
xor
add
push
push
cmp
jnp
jo
jl
insb
stc
pop
sbb
add
aaa
mov
roll
jns
push
jge
orl
add
mov
mov
cli
sbb
scas
jnp
mov
add
mov
jae
stos
testb
mov
pop
jns
imul
mov
or
mov
pop
sbb
jno
pop
es
icebp
loopne
dec
cmp
in
inc
pushf
jge
lea
mov
rorl
roll
lcall
outsb
add
mov
xchg
mov
cmp
cld
push
add
jmp
hlt
sbb
dec
and
or
xchg
sbbb
jecxz
dec
mov
xchg
jns
push
xor
add
mov
imul
sub
loop
jae
adc
dec
loopne
rcrb
add
push
fiaddl
lahf
inc
cwtl
mov
add
jg
jae
fdivs
into
push
adc
push
add
mov
les
mov
cmpsb
dec
outsb
add
cli
movsb
in
cs
and
cmp
xor
add
pop
mov
add
repnz
mov
cmp
sub
cs
out
dec
xorb
or
sbb
call
lods
jo,pn
jae
push
add
mov
push
cmpb
lret
cmp
sub
shrl
cli
mov
push
push
cs
add
je
fcoml
push
pop
mov
dec
push
roll
fcomps
std
xor
add
test
les
sbb
rolb
mov
jnp
mov
or
push
jb
jge
mov
and
out
adc
out
adc
xor
fnsave
sarb
pop
inc
cmp
mov
jnp
pop
push
mov
ret
xchg
and
xlat
mov
lret
add
and
add
jbe
sbb
add
stc
inc
jp
mov
insb
add
data16
mov
xchg
ss
test
lret
sbb
adc
adc
adc
je
mov
sbb
popa
jno
dec
pop
add
xchg
xor
shll
push
testb
pusha
insl
or
movsl
ds
rclb
sarl
mov
inc
jb
sbb
das
int3
jo
add
fdivr
sbb
or
add
imul
lret
xlat
jno
jnp
enter
les
aas
jmp
dec
add
negb
fidivrs
add
jle
pop
and
lcall
jne
test
nop
xchg
pop
stc
push
xchg
xor
cmp
arpl
add
pop
outsl
xor
ds
xchg
cltd
or
xchg
xchg
jbe
mov
mov
mov
call
int3
add
jecxz
jle
mov
or
push
cmovno
dec
mov
ljmp
adc
outsl
xchg
mov
mov
dec
test
add
jae
sarl
adc
jno
enter
add
xchg
lods
fdivs
inc
ret
call
sub
movsb
inc
in
int3
add
jmp
push
loop
cwtl
sbb
cmp
push
out
sti
inc
sbb
mov
add
pop
dec
cmp
enter
test
mov
sti
add
adc
xor
jo
imul
xchg
lahf
call
lcall
add
test
mov
pop
pop
cmp
lea
arpl
test
ja
jno
push
scas
add
add
mov
and
add
sbb
divb
dec
xchg
push
push
add
sbb
addr16
pop
and
outsb
xchg
jp
adc
mov
cmpsb
std
rolb
pop
call
ss
and
addr16
dec
or
xchg
and
add
add
jge
add
sbb
test
mov
mov
and
sub
pop
js
int3
test
and
test
sbb
dec
mov
sub
push
jb
jo
in
pusha
add
ficompl
inc
pushf
push
test
out
mov
add
js
add
add
incl
sbb
sahf
sbb
cmp
add
pop
pop
inc
inc
push
scas
shlb
sbb
adc
js
push
adc
add
das
xchg
jne
mov
mov
cwtl
jb
mov
mov
negb
clc
inc
jecxz
fadd
pop
push
mov
add
mull
outsb
sbb
and
push
cmp
push
repnz
xlat
and
or
fsubrs
cld
insb
sbb
cli
lahf
data16
stos
cmp
sbb
sti
lods
cld
sbb
addb
lods
adc
dec
test
pop
push
lret
icebp
mov
cmp
mov
jmp
add
xchg
dec
mov
pushf
in
test
mov
push
jbe
push
cmp
pop
add
push
cmp
mov
jge
xchg
rol
out
add
scas
dec
loopne
add
mov
stos
xor
pop
leave
lret
fdivr
or
and
jns
lcall
scas
int3
clc
add
xchg
enter
lcall
sti
push
dec
orb
jne
dec
sarb
push
xchg
dec
insl
pop
sbb
push
push
cmp
inc
mov
repnz
loopne
mov
cmp
cmp
shlb
add
sahf
js
dec
inc
popa
sbb
xchg
out
je
pop
mov
int3
enter
test
bound
iret
pop
mov
lret
jnp
bound
push
cmpb
xchg
fcomp
push
mov
add
stc
mov
cmp
enter
sarb
push
add
dec
jb
xor
fldenv
shl
fdivl
sti
test
push
mov
dec
mov
test
cwtl
sub
out
das
arpl
add
insl
push
push
shrl
xorb
push
imul
jle
popa
sahf
and
push
js
iret
xor
and
and
aaa
mov
stos
mov
sub
and
cmp
lret
stos
das
cmp
enter
and
or
dec
mov
mov
pop
xor
in
faddl
icebp
pop
insl
test
shl
je
or
and
sbb
icebp
jp
mov
out
or
sarb
orl
scas
adc
push
call
in
lahf
ss
mov
and
sub
sbb
popa
fisttpll
adc
rcr
jo
sbbl
mov
js
mov
push
inc
jmp
aas
icebp
adc
sub
adc
aad
add
sbbl
xor
divl
sbb
fistpll
std
mov
fcoms
test
ja
and
or
add
les
inc
xchg
popa
push
xchg
gs
pop
xchg
arpl
orl
stos
cmpsb
fnstenv
cwtl
or
cmp
mov
cmp
stos
xor
xlat
sahf
add
mov
js
add
push
cmp
push
mov
add
pushf
add
push
push
and
jne
pop
ret
and
push
add
xchg
jge
adc
stos
clc
pusha
add
xor
add
out
aad
fs
sub
xchg
movsl
mov
aam
iret
jmp
ret
in
icebp
or
pop
push
adc
push
dec
stos
jns
push
popf
sti
pop
mov
dec
push
dec
jne
push
sub
out
es
iret
repz
clc
inc
orl
idivb
mov
fisubrl
add
dec
sbb
adc
jno
or
xor
ret
add
cltd
pop
xor
repnz
rolb
inc
pop
sbb
sbb
and
add
sahf
mov
test
sub
cmp
and
jbe
and
xor
shrb
xor
pop
adc
add
mov
add
popa
adcb
clc
es
dec
rolb
xor
les
inc
ja
push
shrb
mov
lea
jns
das
add
mov
or
push
mov
push
jmp
xchg
inc
or
repnz
and
in
sub
add
mov
lcall
dec
sub
jnp
sbb
enter
pushf
adc
in
push
imul
data16
lahf
and
xchg
push
pop
testl
xchg
sbb
into
push
pop
sub
jno
jne
or
subl
mov
dec
adc
and
push
inc
mov
jg
fwait
das
add
inc
sbb
aaa
pop
cld
xchg
inc
push
out
mov
push
pop
and
movsb
cmp
or
sarl
das
dec
aas
inc
les
push
fmuls
cwtl
mov
cltd
rorb
add
push
sarl
dec
pop
test
lahf
add
adc
test
or
pop
xchg
mov
dec
sbbl
clc
or
loopne
stos
push
aas
nop
push
shlb
rorl
stc
scas
add
cmc
call
les
sub
pop
cmp
fdivs
cmpsb
mov
xchg
or
int
dec
out
mov
pusha
shl
test
stc
xor
dec
adc
aaa
inc
pop
mov
add
aam
jnp
xchg
inc
add
push
push
mov
cwtl
rolb
dec
cltd
sub
flds
xor
sub
cmp
dec
inc
movsb
fwait
mov
add
push
pop
stos
jmp
sub
outsb
cmp
inc
jle
sub
add
xor
pusha
add
movsb
dec
shl
pop
mov
aaa
lods
add
cwtl
jle
pop
pop
nop
jo
add
ja
and
xor
fwait
pusha
add
jne
dec
jae
rolb
loopne
pop
add
ret
jge
mov
lock
movsl
cmp
int3
leave
fcoms
sub
sbb
push
fcompl
sbb
lock
mov
jle
and
pop
add
insb
inc
mov
fwait
movsb
dec
rclb
lods
out
push
xor
push
stc
stos
and
subb
xor
loope
les
push
mov
daa
add
sub
mov
xchg
std
popa
addr16
fisubrl
jne
or
in
xor
and
pop
mov
loopne
adc
clc
xchg
mov
sbb
cs
test
xlat
jmp
test
push
sbb
mov
mov
rcll
test
mov
dec
lock
int3
mov
mov
fstl
sub
or
mov
orb
push
aam
sub
pop
std
adc
adc
sub
hlt
mov
nop
fsubl
divl
rcll
cmp
xor
add
ret
loop
add
mov
cmp
fiaddl
mov
xchg
stos
dec
dec
gs
mov
and
insl
adc
push
jnp
push
sub
fnstcw
sbb
lcall
push
int3
lods
wbinvd
xor
and
pusha
jo
and
in
add
pop
nop
fsub
cwtl
ljmp
sarb
inc
inc
int3
lret
nop
shl
lods
mov
call
insb
add
dec
enter
push
fldt
add
mov
daa
xchg
push
mov
add
xor
and
loopne
les
daa
mov
or
outsl
imul
mov
inc
ret
mov
cmc
xchg
mov
out
sub
push
push
shl
sub
rclb
les
repnz
adc
dec
movsb
inc
sub
fs
les
aas
jnp
add
push
ja
sub
xor
or
scas
or
adc
cld
pop
stos
insb
and
mov
cmp
out
or
stos
push
push
jno
sbb
jg
leave
repz
cs
cmp
fldcw
enter
lcall
hlt
xchg
aam
mov
insb
movsl
xor
adc
add
add
fs
or
test
xchg
rclb
gs
clc
lods
shr
mov
dec
jg
add
xor
jno
fidivs
sbb
or
ret
or
fdivs
cwtl
sub
ds
inc
xor
or
or
testb
addb
or
dec
push
inc
mov
adc
inc
scas
dec
lods
and
sub
das
test
cmp
or
dec
stos
lock
jno
jns
sbb
inc
idiv
leave
sub
enter
pop
inc
shrb
dec
add
sub
add
mov
in
add
test
fsubrs
add
or
movsb
inc
hlt
cmp
add
push
xchg
sahf
cld
sbb
push
mov
dec
das
xor
stos
cltd
sbb
or
mov
xchg
mov
add
cmpl
or
and
add
roll
lds
push
xor
sbb
dec
fmull
jl
inc
xchg
jecxz
in
add
imul
lods
fisttpl
aas
pop
stc
scas
jp
pop
adc
in
add
pop
aas
dec
dec
pop
fwait
test
cmp
aad
cmp
rol
pop
unpcklps
ret
jb
insb
aas
lds
scas
adc
push
loop
loopne
cwtl
les
inc
add
stos
adc
add
lods
sub
cmp
add
mov
cmp
fdivp
adc
xorl
add
mov
mov
sub
xchg
add
lret
jno
sbb
fmuls
clc
dec
ret
loope
sbb
push
sti
rorb
insl
fwait
inc
sbb
icebp
test
fisttpll
or
aas
ret
lret
pop
inc
xchg
sbb
mov
fsubrs
sarb
mov
cmp
insb
mov
mov
icebp
inc
mov
push
push
or
popl
and
sbb
lock
cs
fstpl
pusha
sbb
and
adc
add
inc
daa
adc
shrb
aaa
inc
xchg
daa
add
cmp
add
xor
ja
test
repnz
jns
add
sub
dec
sub
shlb
call
pop
pop
lds
movsl
mov
push
inc
pop
and
pushf
add
dec
xchg
cmp
jl
dec
and
jl
mov
pop
inc
jg
push
mov
data16
cmpsb
adc
mov
jle
inc
inc
add
push
pop
jo
mov
xlat
enter
sbb
call
jbe
bound
ret
xor
loopne
add
das
adc
addb
cmp
jl
xor
loop,pn
cltd
test
sbb
icebp
test
cld
jnp
fsubrl
sbb
in
xlat
shll
fs
push
xchg
mov
sbb
sbb
dec
xor
movsl
int
xor
push
mov
and
js
movsb
fisubrs
in
jns
jns
sbb
xchg
lcall
add
and
or
pushf
movsb
jnp
cmc
les
test
movsb
dec
scas
sbbb
sbb
int
into
add
cmpsb
inc
mov
rcrl
movsb
movsb
or
pop
lds
daa
pusha
push
or
dec
cmp
push
adc
or
add
mov
orb
out
and
call
insb
sbb
rol
mov
push
mov
push
bound
inc
mov
add
in
lcall
add
out
popa
push
subl
movsl
in
into
add
inc
add
or
add
mov
loope
adc
fisttps
into
mov
sbb
lods
cwtl
cmp
push
add
and
scas
lds
cmpsl
dec
jg
jae
adc
fldcw
xchg
pop
or
daa
jbe
jl
xchg
sub
dec
sub
mov
cmpsb
gs
and
insl
out
sbb
mov
lock
xor
ds
jo
stos
xchg
add
imul
out
pusha
or
imul
mov
loopne
int
jge
stos
pusha
push
jecxz
out
sbb
sub
and
push
std
cwtl
sbbb
push
adc
jo
adc
or
fadd
test
enter
pop
and
rorb
gs
lods
xchg
add
adc
mulb
lea
ret
test
dec
leave
push
inc
sub
ret
sbb
push
sub
cmp
aad
mov
push
inc
aam
out
andl
adc
push
fidivl
fadds
aam
mov
pop
test
test
xor
insl
push
pop
data16
sbb
lods
pop
pop
add
or
pop
push
js
scas
mov
mov
popa
add
or
arpl
popf
mov
jno
add
mov
xor
push
test
adc
add
or
xchg
aam
adc
jl
push
ret
les
pusha
pop
fildll
in
and
pop
insl
mov
stos
sbb
mov
xchg
push
push
outsl
loopne
je
pop
adc
cmp
sub
stos
add
dec
push
mov
mov
js
mov
popf
sub
pop
sub
jmp
js
sub
sub
mov
cmp
popf
sub
sbb
inc
sbb
xchg
insb
outsb
out
adc
cmp
sub
xor
in
sbb
lock
add
sbb
testl
adc
stos
ret
cmovs
or
mov
sub
jae
nop
stc
aas
shll
dec
push
jo
cs
hlt
sbbb
cmp
pushf
outsb
ljmp
loopne
dec
jl
jo
mov
lds
movsl
or
repz
pop
in
ret
mov
mov
stos
push
into
sub
add
lods
or
pop
add
lods
loope
inc
mov
int3
leave
jbe
nop
add
add
cmp
gs
fistpl
inc
lea
cld
push
add
cmp
mov
push
dec
fbstp
test
or
adc
add
lds
adc
cmp
add
das
mov
loope
sbb
fistl
ss
rcrb
jbe
dec
out
jo
fs
inc
sub
ficoml
cmp
sbb
mov
adc
fidivrs
mov
rcrl
and
sbb
stc
adc
sbb
xchg
mov
andb
daa
jle
or
jp
mov
or
addr16
ror
add
mov
push
enter
mov
jmp
fldt
jle
loopne
add
addr16
jp
xor
rolb
scas
into
cwtl
roll
dec
add
hlt
mov
test
mov
arpl
pushf
inc
xchg
mov
movsl
fs
xlat
add
fildll
dec
sub
push
push
pop
aaa
add
push
movsl
scas
mov
nop
and
aas
shll
enter
dec
popa
mov
dec
ds
add
pop
fwait
sub
cwtl
int3
aam
mov
movsb
enter
in
mov
pop
aad
hlt
aas
gs
outsl
push
inc
movsl
dec
iret
sub
shlb
xor
int3
or
cmp
sahf
js
inc
faddl
dec
xchg
cmp
int
dec
mov
in
js
loopne
mov
pop
add
inc
jle
loop
mov
fs
dec
movb
mov
pop
cs
movsb
jge
mov
adc
jne
add
ret
jno
add
lret
shlb
mov
pop
ja
call
xorl
mov
clc
imul
mov
lods
push
inc
and
andb
jns,pn
adc
aaa
sub
pusha
jne
push
test
xchg
and
pop
push
mov
fnsave
out
or
movsb
sbbl
test
ds
flds
dec
sbb
push
cs
pop
adc
xor
mov
jmp
inc
fidivrl
pop
call
add
jno
shll
add
mov
and
and
sbbb
or
cmp
popa
push
in
adc
int3
addr16
and
xor
ds
mov
sub
and
add
and
cs
adc
clc
add
add
in
xor
mov
test
and
std
push
and
xor
sti
pandn
mov
adc
inc
sarb
sti
sub
adc
pushf
cmp
inc
fiaddl
imul
icebp
dec
cmp
sub
xchg
add
push
js
cwtl
popa
sbb
jne
dec
sar
jnp
add
mov
add
lds
jmp
pop
shld
loop
pop
sbb
cli
push
xor
adc
sub
mov
loopne
es
push
rcl
push
into
push
sbb
fisttpll
and
add
fyl2x
pop
insl
int
sbb
mov
fcompl
jne
jns
rcl
jno
jo
lods
add
dec
imul
insb
mov
sub
push
mov
pop
mov
inc
sbb
and
mov
push
inc
sub
xor
sub
cmp
popa
pop
cmp
push
mov
cmp
mov
shr
sbb
das
push
fwait
jl
pop
cs
cmp
lret
lcall
popf
cli
lock
roll
cmp
nop
xlat
mov
mov
movzbl
movsl
and
push
hlt
sub
and
aam
and
adc
sub
sbb
insb
jno
cmp
ret
pop
sbb
pop
xlat
in
add
ja
xchg
or
shl
pop
xchg
add
jg
loope
sbb
push
or
fmull
add
cmp
cmp
add
pop
cmp
aaa
sahf
fmull
outsb
orb
fadds
and
int3
mov
pushf
and
sub
add
cmp
stc
in
popa
cmp
mov
scas
lret
inc
xchg
inc
xor
aas
and
xchg
bound
clc
std
pop
in
jle
xor
cmc
lods
popf
adc
sub
sahf
dec
and
add
cmp
push
xor
and
jnp
mov
shlb
dec
cmpsl
dec
add
stc
subl
inc
sbb
push
xor
subb
add
cmp
add
lahf
mull
mov
outsl
cmpsl
mov
xchg
add
or
xchg
stc
xor
add
fmull
dec
xchg
decb
enter
or
xor
lret
fldl
ret
enter
imulb
rorl
mov
ds
jnp
add
insl
cwtl
dec
enter
xchg
add
cli
dec
cmc
mov
mov
andb
adc
cmpsl
mov
jne
loop
push
adc
popf
xchg
mov
fsts
and
sbb
daa
cmp
rcr
insb
mov
insl
pop
pusha
jl
push
mov
xor
movb
loopne
pop
mov
mov
arpl
fcomip
outsb
insb
mov
xchg
and
arpl
add
or
sbb
add
mov
stos
das
mov
xor
jl
xor
stos
lds
sahf
popf
pop
xor
movsb
pop
pop
cli
sti
lods
jmp
stc
movsl
cs
push
aaa
sub
push
data16
adc
sub
push
sahf
shl
ret
orb
pop
xlat
mov
scas
xor
add
sti
inc
loop
popf
lock
jno
mov
push
or
jecxz
mov
adc
addr16
sbb
dec
or
fdiv
add
xor
adc
clc
sub
cmp
insl
js
jbe
or
stc
int
jmp
cld
icebp
adc
jmp
mov
inc
shlb
shrb
mov
mov
jl
imul
push
mov
mov
sub
add
aaa
in
dec
jno
pop
inc
inc
cmc
repz
fwait
jbe
or
pop
cmp
loope
push
jge
lods
call
fchs
fisubrl
loope,pn
lret
mov
fwait
mov
xchg
mov
pop
cmp
mov
fs
add
aaa
xchg
sub
out
lret
jns
sbb
adc
lock
clc
jnp
loopne
addr16
sub
jl
add
cmp
int
jl
add
lods
add
xor
rolb
sbb
add
mov
outsl
push
jo
ret
dec
rcrb
and
mov
cmp
and
jnp
jmp
push
and
pop
adc
dec
mov
pop
gs
pusha
and
jns
mov
push
ret
xlat
shll
adc
sub
movsl
jns
xor
add
pop
lods
push
adc
shll
mov
xorl
inc
int3
test
add
or
iret
out
cmp
sub
sbb
jo
mov
imul
sub
and
rcrl
das
int3
mov
cmp
mov
lahf
lret
pop
fld
insl
mov
mov
xor
push
hlt
icebp
jo
and
ret
idiv
pushf
adc
and
stos
outsb
enter
fisubs
jp
mov
cs
cmpsl
lods
inc
shlb
xor
sub
adc
jno
clc
mov
add
pop
pop
sti
mov
add
add
mov
cwtl
mov
sarb
cmpsl
lds
and
das
jl
sbb
leave
xor
cmpsl
pop
mov
inc
or
pop
outsl
pop
ficomps
xor
jecxz
mov
call
rclb
push
repz
clc
cmp
jb
pop
push
test
jne
cs
and
add
inc
or
outsl
stos
inc
arpl
add
clc
fisubl
or
push
stos
sti
icebp
and
dec
inc
xor
pop
lahf
int
ret
fs
clc
test
repnz
mov
xor
or
mov
cmp
dec
test
cmp
add
xlat
out
dec
iret
lods
adc
das
mov
test
jb
xor
aas
mov
sub
xchg
ret
xorb
fistpll
insl
push
shlb
sbb
push
mov
test
ds
xor
pop
cmpsl
push
insb
leave
mov
test
sub
sub
mov
mov
mov
rorb
call
mov
add
xor
test
aaa
pop
imul
fwait
mov
add
mov
push
pop
ficoms
pusha
frstor
jmp
and
out
push
add
xchg
scas
dec
inc
and
inc
hlt
cmp
mov
or
into
shrb
ds
xor
call
push
rcrl
mov
test
add
push
mov
dec
insl
jl
stc
and
push
push
lcall
mov
and
pop
cli
xchg
jno
pop
stos
add
and
cwtl
fisttps
repnz
jb
inc
add
pop
insl
mov
femms
lcall
jns
ret
push
add
dec
cmc
sub
nop
mov
movsl
test
cwtl
into
test
mov
inc
and
push
out
fsubrl
adc
sahf
dec
outsb
pusha
sub
inc
fdivrs
pop
xor
fiaddl
cmp
aam
or
push
in
pusha
xchg
cmc
sub
cmp
andb
pop
and
add
ds
faddp
mov
cmc
add
lods
int3
xchg
adc
popa
jae
pop
push
lret
inc
fwait
rol
sti
lods
lret
and
into
push
mov
es
ficomps
int3
add
lods
add
bound
mov
mov
push
dec
and
add
mov
or
aas
inc
inc
sub
jno
clc
inc
out
and
cmp
mov
imul
dec
push
sub
mov
xchg
ror
loopne
add
dec
fsubrl
xor
sub
addb
cmp
lahf
movsb
push
push
out
mov
sbb
pop
cmpsb
ret
addl
inc
jnp
or
lcall
xchg
push
push
pop
mov
int3
popf
add
cmc
ss
pop
inc
fcompl
cmp
loopne
rcll
insl
inc
xor
jno,pt
dec
fs
mov
es
pop
mov
loope
loop
add
scas
and
mov
xor
mov
jl
fmull
mov
mulb
loopne
daa
insb
repnz
sbb
xor
mov
in
add
inc
add
insl
mov
mov
sahf
mov
or
cmc
fstpt
scas
fstl
out
mov
xor
mov
xor
shrl
adc
adc
int3
outsl
loope
mov
fldcw
xor
inc
test
mov
jl
pushf
sub
cs
das
and
testl
push
adc
sbb
add
out
jb
addl
sub
dec
xor
ret
mov
or
aad
shl
mov
and
popa
dec
push
scas
shrl
pusha
fstl
test
pushf
scas
mov
lds
jns
test
add
xor
stos
sti
ret
shll
add
dec
cltd
int3
frstor
test
and
mov
push
lock
xorb
sbb
cmp
testb
mov
scas
mov
js
cwtl
add
mov
inc
cmc
mov
fwait
lahf
repz
mov
ret
stc
lret
cltd
cmpsl
dec
das
mov
int3
add
cwtl
in
add
mov
jge
mov
pusha
fists
das
push
mov
pusha
jno
mov
imul
pushf
inc
dec
inc
lret
lret
sbb
sub
movsb
push
int3
clc
mov
das
inc
frstor
mov
dec
add
mov
mov
pop
jp
adc
movsl
and
insb
subl
and
push
add
repz
push
xor
sub
jno
pop
cmp
movsl
xor
add
sub
mov
pop
and
pop
fcoml
and
add
mov
mov
jb
in
pop
push
jne
sub
mov
stos
out
in
rclb
mov
xor
sub
dec
xor
ret
mov
jae
mov
incl
mov
or
or
xchg
test
inc
mov
ss
add
cmp
inc
rclb
pop
int
adc
movsb
inc
je
xchg
push
mov
negb
mov
jae
and
into
jl
clc
push
inc
daa
add
xchg
dec
jecxz
pop
inc
fwait
push
hlt
cmp
js
xchg
faddl
testl
pop
mov
pop
into
cs
out
push
stc
adc
movb
hlt
fcomps
lcall
push
cwtl
cmp
insb
cli
imul
insb
jo
inc
jae
push
aam
sub
cmp
cmp
jne
repnz
out
nop
sbb
adc
push
mov
cli
ret
fwait
mov
sbbb
push
push
xchg
jno
cmp
xchg
and
loopne
repz
iret
imul
popf
or
andb
cmp
xor
loop
insb
push
ficomps
roll
jg
aam
or
shlb
add
or
test
or
xchg
jle
sub
push
and
xor
inc
daa
sbb
lret
shlb
sub
or
imul
jecxz
jno
cmp
das
stos
pop
jnp
or
or
bound
popa
shll
stos
dec
clc
mov
add
fstpt
add
ds
sbb
out
pop
mov
or
dec
mov
outsb
mov
iret
orb
or
pusha
and
jno
cmp
and
nop
push
or
xor
jmp
inc
add
push
ds
rclb
push
ja
outsb
xchg
leave
xchg
xlat
mov
ljmp
adc
jg
pushf
testb
sarl
enter
xor
and
js
sub
imul
inc
outsl
sub
add
xor
cli
daa
enter
cwtl
adc
push
xchg
sub
or
xor
adc
je
pop
inc
inc
out
mov
popa
repnz
cmp
add
xor
nop
das
xchg
sub
add
andb
mov
dec
lock
push
dec
mov
pop
or
in
lret
jl
add
or
mov
push
shlb
outsb
push
add
or
repnz
stc
jno
inc
nop
or
imul
inc
sbb
pop
mov
xchg
push
xlat
test
add
or
call
mov
and
icebp
hlt
je
xor
mov
addl
shll
sbb
add
xor
add
and
push
sbb
test
stos
jnp
jle
mov
sub
nop
ja
mov
ljmp
add
jmp
push
mov
mov
xor
neg
xchg
mov
pusha
sarb
cmp
adc
xor
add
adcb
pop
outsb
mov
xlat
xchg
mov
fwait
xlat
sbb
movsw
push
ficoms
push
cmp
add
sbb
xchg
inc
adc
and
inc
in
in
xchg
orb
sbb
xchg
or
cmpsb
out
inc
pop
cmp
add
sbb
rolb
inc
sbb
shlb
mov
sti
pop
lea
add
push
std
nop
pushf
test
arpl
addb
push
and
test
les
pop
dec
xor
pop
push
mov
mov
add
jmp
adc
sbb
or
and
sarb
les
push
or
cmp
stc
pop
or
dec
push
add
in
std
push
pop
push
mov
scas
roll
add
or
inc
add
cwtl
adc
insl
push
test
xchg
mov
xor
sbb
sub
sub
cmp
adc
and
xor
mov
enter
stos
cmp
dec
fnsave
add
movb
es
int
xchg
push
fwait
sbb
push
inc
in
int3
orl
add
xlat
std
shll
or
xor
cmp
jge
dec
cs
adc
xor
pop
js
xor
or
stos
adc
xor
lock
push
sbb
rcll
pop
mov
dec
push
inc
mov
ret
out
nop
and
scas
nop
add
inc
mov
adc
adc
mov
xor
jmp
add
pop
popf
xor
imul
arpl
mov
fldenv
out
xchg
xor
pushf
movsl
jbe
xor
adc
inc
add
inc
jmp
push
pop
mov
push
xor
dec
test
jge
xchg
cs
adc
jne
xchg
jecxz
add
cs
cwtl
inc
addr16
inc
or
pop
adc
cwtl
xlat
add
push
lret
ret
repnz
add
and
jmp
or
mov
add
rcrb
cwtl
ljmp
or
sbb
add
jp
test
mov
pop
mov
pop
mov
jecxz
and
cwtl
sbb
or
adc
cltd
adc
mov
repz
fwait
dec
test
bound
in
push
pop
loope
ja
lock
sub
out
adc
inc
mov
add
int3
xchg
fisubrl
rcrb
xchg
and
rorl
cmp
sub
sub
fcompl
gs
ret
add
popf
sub
je
shll
push
in
mov
pop
inc
add
mov
loop
add
mov
xor
xchg
dec
sti
mov
test
inc
mov
push
popa
or
xchg
popa
xorb
jle
fisubrl
leave
loopne
cld
jge
or
loope
inc
out
push
cmpsb
adcl
dec
lods
pusha
mov
rol
cltd
cmp
aam
xchg
xchg
pop
xchg
cmp
and
inc
mov
pop
cmp
mov
push
jno
cmp
mov
test
or
stc
ss
dec
and
and
pop
imul
mov
movaps
mov
sub
data16
add
pusha
fsubrs
xor
push
push
scas
xchg
cmp
std
add
xchg
pop
mov
enter
push
and
fcom
mov
shlb
das
add
into
nop
mov
lds
lods
and
mov
dec
cmp
and
sbb
movsb
lret
loop
dec
idivl
mov
or
sub
adc
in
outsl
adc
inc
sbb
sbb
orl
mov
lcall
jp
xor
pop
mov
test
in
sbb
enter
jmp
scas
in
mov
sub
andl
sti
imul
cmp
test
icebp
je
dec
faddp
add
or
out
add
or
add
or
jl
mov
mov
rorb
add
pop
inc
pusha
add
fwait
push
and
add
std
in
loope
cli
pop
inc
or
jo
call
int
mov
or
icebp
inc
int3
fldt
loope
test
daa
fwait
cs
add
sbb
enter
loopne
mov
test
mov
fwait
testb
cmp
adc
enter
xchg
es
mov
and
outsb
mov
imul
mov
orb
cmp
or
stos
decl
mov
shrl
call
adc
stos
add
sbb
add
scas
mov
imul
or
mov
add
push
xchg
daa
and
or
xor
adc
shlb
add
cmpsb
mov
sub
test
add
jb
scas
push
and
ljmp
test
inc
pushf
into
jno
lock
and
xchg
pop
fsubr
in
push
sbb
movsb
add
or
or
dec
add
xchg
dec
adc
or
and
sbb
and
stos
push
mov
ret
sbb
movsb
sbb
in
ret
mov
or
or
loopne
and
mov
push
xchg
fldenv
sbbb
push
lcall
enter
mov
mov
adc
push
mov
mov
push
fisttps
out
aas
pusha
divb
jnp
pop
cmp
scas
test
lock
mov
or
mov
ds
je
lcall
mov
repnz
xor
adc
jle
push
pop
add
pop
mov
clc
fcomi
jg,pn
push
push
outsb
xor
scas
pop
orb
mov
not
out
mov
outsb
ret
add
cmc
xlat
lds
les
mov
cmp
lret
rol
push
inc
push
jg
sahf
cwtl
xor
inc
adc
imul
ss
lahf
insb
inc
loope
bound
cs
or
jno
js
je
add
jle
daa
mov
test
and
push
inc
sub
test
shll
andl
movsl
leave
lds
adc
cmp
inc
dec
add
rorb
inc
pop
pusha
or
xchg
add
stc
pop
pop
mov
pop
jp
divl
sbb
xor
mov
xchg
inc
shlb
inc
mov
ffreep
and
xor
pop
inc
prefetchnta
add
or
push
push
shr
xchg
cmp
mov
inc
lahf
pop
lods
jnp
xor
or
inc
out
gs
mov
xlat
stos
adc
push
rcl
xor
xchg
adc
xchg
mov
test
sbb
xchg
dec
lahf
ss
push
hlt
jecxz
das
paddusw
pop
jnp
pop
lock
in
and
aas
dec
push
add
into
mov
xor
or
mov
add
test
arpl
addr16
add
inc
insl
xchg
jecxz
push
test
loopne
mov
cmp
and
js
enter
repnz
shl
or
loop
push
sub
ja
sbb
mov
aad
outsl
jno
ljmp
push
subl
repz
sti
mov
bound
xchg
mov
pushf
sbb
add
cltd
xchg
xchg
push
test
jno
inc
inc
dec
lds
loop
les
adc
push
lods
or
jns
aam
add
pop
stc
dec
in
push
mov
push
test
mov
xchg
jl
add
fdivl
in
push
cmp
mov
addb
dec
in
or
add
mov
jmp
and
cmp
jns
cwtl
jecxz
fldl
out
lock
jmp
jp
add
shlb
out
ret
or
or
cmp
nop
dec
push
pop
mov
enter
out
or
loope
jecxz
addr16
add
pusha
mov
outsl
pop
std
loopne
xor
sbb
sti
popf
movsb
xchg
stc
sbb
lret
stos
imul
dec
hlt
or
ds
pop
dec
int3
les
add
sub
loope
movsb
mov
stc
xchg
mov
sub
dec
inc
lods
rorl
xorl
xor
mov
sbb
add
or
and
mov
cwtl
or
loopne
cli
push
popa
mov
cmp
inc
dec
movl
inc
pushf
and
fsubrl
bound
add
jno
rcrl
and
not
inc
pop
xor
loope
popa
or
test
cltd
mov
out
into
pop
test
dec
dec
insb
adc
dec
add
push
test
fs
xor
mov
and
frstor
lods
pop
adc
cmpsb
nop
and
rorb
pusha
sub
call
and
mov
fdivrs
inc
xor
or
scas
pusha
mov
hlt
xlat
dec
pop
cmpb
push
xor
lea
fcmovu
nop
sub
push
imul
cmovno
and
pusha
mov
int3
add
rclb
mov
in
stos
mov
pop
lods
lahf
les
or
push
popf
push
jbe
xchg
aas
cwtl
les
pop
mov
xchg
aad
dec
subb
fcoms
add
sbbl
test
xor
fs
bound
repz
jecxz
lahf
xchg
mov
xchg
push
add
xchg
xchg
imul
enter
insl
or
pop
gs
out
arpl
in
add
xchg
sub
dec
xchg
cwtl
jne
push
mov
adc
jo
clc
sbb
call
sar
inc
shrl
les
adc
xchg
ja
arpl
mov
ret
adc
pop
dec
adc
sbb
outsl
xchg
and
push
mov
rolb
bound
push
jmp
cmp
cmp
xchg
mov
test
pusha
dec
imul
mov
scas
jb
das
leave
in
jl
pop
testb
or
rorb
xchg
test
aaa
mov
lea
mov
inc
adc
movsb
loopne
mov
push
roll
inc
addl
jmp
rol
jl
test
add
inc
lret
icebp
and
and
pop
and
out
pop
xchg
mov
add
in
mov
cs
and
stos
inc
cwtl
inc
nop
sub
stc
or
dec
js
add
dec
rclb
pop
add
jmp
fucom
and
pop
ljmp
cld
out
sub
and
adc
add
cmp
ljmp
sets
inc
pop
xchg
mov
mov
mov
add
jbe
dec
push
pop
mov
sbb
sub
sub
into
mov
add
sub
loopne
adcb
xor
xchg
add
fmull
pop
in
je
mov
jno
loop
mov
jecxz
cmp
popa
aas
icebp
xchg
nop
jae
outsb
jge
pop
push
into
mov
xlat
add
das
fs
mov
or
pop
mov
cmpsb
inc
pop
movsl
inc
inc
pop
adc
lods
daa
and
xlat
shlb
and
mov
fnstcw
and
cmp
xlat
repnz
stos
sbb
iret
adc
cmc
xchg
lods
jne
lock
lcall
xchg
ja
push
dec
hlt
sbb
into
push
mov
bnd
add
sahf
cmpb
addr16
jecxz
lds
test
test
mov
ret
lcall
jg
add
ret
or
push
or
insb
addl
add
aam
aam
imul
bnd
loop
mov
cmpsl
pusha
pop
adc
pop
cmp
jno
add
das
imul
jae
loopne
fdivl
xor
push
or
push
outsl
add
aam
out
in
fst
dec
pushf
pop
push
lret
sbb
fldenv
lock
test
cmpsb
pop
inc
pop
pop
add
xchg
daa
lods
rol
push
and
pop
pop
dec
add
loope
test
push
or
shrl
jns
add
lds
inc
mov
inc
and
imul
jo
sub
pushf
hlt
fildll
in
jp
dec
loope
add
mov
push
inc
inc
mov
cwtl
sarb
fistl
lahf
mov
filds
in
pop
and
dec
and
and
sarb
inc
mov
aas
sbbl
ss
movsb
cld
xor
lahf
sbb
lock
mov
jnp
andl
cmp
lock
xor
addr16
rorb
xor
call
rolb
fisttps
mov
fadds
jne
dec
mov
add
cmp
hlt
mov
pusha
mov
mov
add
or
lods
add
les
sbb
dec
icebp
stos
popf
add
sub
test
dec
sub
jmp
mov
mov
add
out
xlat
cmpb
mov
ljmp
loopne
call
das
cld
je
nop
ljmp
push
loope
ret
insb
scas
add
push
repnz
bound
rolb
data16
add
mov
out
movsb
mov
in
sub
loope
adc
mov
add
pop
test
xor
xor
test
push
stc
pop
cmp
outsl
sbb
inc
addl
add
push
sub
dec
ret
fwait
mov
cwtl
into
inc
mov
or
add
int
push
lcall
jl
add
sbbl
pop
adc
and
scas
ror
add
xchg
test
jb
add
ret
push
cwtl
jo
test
into
push
andl
mov
nop
inc
scas
pusha
loop
cwtl
add
ja
mov
movl
jle
mov
xorb
or
jmp
adc
ret
mov
pop
xchg
ljmp
jnp
sbb
and
cmp
mov
push
test
in
sub
push
lea
les
sbb
xchg
mov
pusha
and
add
cmp
xlat
add
push
inc
sbb
dec
shll
daa
dec
jl
adc
outsb
sub
pop
add
fs
push
addb
sbb
or
in
into
inc
out
pop
add
or
xor
pushf
sub
sbb
add
push
repnz
xor
sti
add
pop
pop
hlt
loopne
and
rclb
shlb
test
adc
mov
outsb
movaps
and
popl
rcrb
cmp
sub
add
inc
arpl
loop
xor
sub
das
xor
mov
and
or
jge
das
or
cltd
pusha
out
or
and
jmp
jo
stos
aad
jge
aaa
mov
out
cmpsl
sbb
mov
fcmovb
dec
sbb
das
mov
add
mov
xchg
out
loopne
inc
movsb
sbb
jecxz
xchg
mov
add
iret
mov
addr16
lahf
movsl
jl
push
lcall
and
cld
xchg
stos
orb
sub
daa
and
hlt
jecxz
dec
lds
addb
fucom
dec
add
mov
add
mov
fiadds
mov
insl
add
fnstsw
dec
fcomps
adc
adc
inc
pop
add
sahf
and
mov
int3
xlat
cmp
daa
push
cmp
add
xlat
popa
repnz
fstl
mov
pop
pop
mov
and
rorl
pop
dec
cmp
shlb
pop
lods
cmp
fstp
pop
iret
and
mov
xchg
mov
sbb
jo
add
sub
mov
add
mov
nop
shl
xor
and
jo
loopne
inc
data16
sarb
iret
mov
push
pop
adc
test
sbb
dec
add
rcll
adc
rorb
mov
es
in
pop
je
mov
clc
pop
and
jo
fildll
push
pop
xchg
mov
enter
add
or
cmp
mov
ret
or
add
roll
out
mov
out
roll
lods
pop
add
push
sbbb
mov
add
mov
fs
sbb
push
enter
sarb
push
enter
push
enter
dec
mov
cwtl
in
popa
negb
pop
inc
cmp
and
clc
and
sub
xchg
xchg
or
push
frstor
loopne
sbb
dec
dec
gs
test
and
cmp
push
cmp
insl
mov
push
cmp
pop
in
xchg
pop
sbb
mull
sub
enter
nop
nop
sub
pop
and
push
and
adc
pop
test
sbb
xlat
cltd
fldl
pop
out
lahf
jmp
jns
in
mov
jb
movsb
mov
clc
lock
xchg
pop
mov
xor
pop
adc
iret
stc
add
aam
jge
clc
mov
fldcw
stc
xor
ss
adcb
xchg
and
aas
jp
sti
insl
adc
and
or
adc
mov
or
lock
std
aas
cs
mov
fiadds
in
push
mov
std
out
es
roll
jno
xchg
adc
rorb
jb
inc
fs
pusha
cmp
lock
add
enter
add
negb
or
popf
mov
lahf
adc
in
mov
sbb
fwait
adc
stc
pop
movsl
fsub
sub
repnz
into
xor
jmp
mov
cmovno
cmp
jo
pop
sbbb
es
jb
lods
push
test
jbe
add
sbb
dec
shrl
add
jmp
mov
mov
ja
insb
add
outsl
push
push
sbb
cmp
add
ja
mov
div
add
pop
add
mov
dec
mov
xchg
mov
call
insb
fdivl
mov
movb
dec
test
gs
pop
jnp
pop
stc
aaa
jo
bnd
add
nop
push
test
xchg
adc
or
ss
xchg
aad
imul
push
or
scas
mov
aaa
add
movsl
in
sub
xchg
shlb
pop
mov
fnstcw
jb
data16
mov
test
call
fidivrs
dec
mov
and
test
push
sbb
inc
add
insl
test
xorb
xor
cwtl
dec
pop
add
testl
jns
sbb
js
mull
cmp
dec
xor
pusha
ret
xor
or
jmp
fcmovne
adc
test
or
mov
iret
push
icebp
mov
cmp
lods
loop
xor
stos
add
lods
lock
pop
xor
fisubrl
jbe
inc
es
add
sbb
xlat
orb
sbb
mov
sahf
flds
sti
icebp
sub
in
test
pop
sbb
lret
rcr
fcoml
pop
lds
sub
add
fidivrs
icebp
cmp
sbb
scas
orb
push
xor
inc
test
mov
jno
cmp
pop
jnp
or
in
pusha
sbb
add
xchg
push
mov
je
cwtl
add
les
pop
jbe
sub
mov
pusha
xchg
test
cld
mov
pop
aad
je
pop
or
jb
test
pop
pop
in
pop
xor
or
out
dec
xorb
or
fsubrp
xchg
test
add
or
add
pop
test
sbb
mov
inc
movsb
or
scas
sbb
xor
push
mov
cmpsb
sbb
adc
jl
in
push
mov
cld
enter
repz
mov
rorl
add
test
inc
jno
sbb
mov
jno
pop
pop
cld
add
insb
enter
stc
xchg
les
inc
imul
and
ja
shl
jno
sbb
out
pop
nop
ss
xchg
sbb
sbb
push
lods
jbe
inc
sbb
push
push
push
mov
add
dec
pop
mov
iret
cwtl
rcrb
ficompl
incb
into
adc
xor
fdivrp
xor
daa
dec
push
js
je
les
movsl
xchg
xchg
add
int3
push
adc
xchg
dec
outsb
call
mov
mov
and
scas
pusha
inc
sub
push
int
adc
adc
imul
adc
sbb
rolb
mov
and
outsb
mov
pop
mov
jns
ds
or
rolb
rcrl
jle
push
sub
add
sbb
loope
cmp
pop
repnz
push
loope
push
shll
leave
aam
adc
xor
pop
fisttpll
js
dec
loop
sbb
dec
mov
push
rorl
adc
sub
pusha
dec
je
stos
add
psubb
decl
out
mov
pop
mov
or
pop
je
and
xor
call
cmpsb
xor
dec
add
pushf
popa
xor
dec
mov
dec
rolb
jl
mov
mov
pushf
adc
add
jo
daa
imul
sahf
mov
add
in
lea
cwtl
mov
test
movsb
mov
les
and
pop
scas
test
lods
xor
mov
add
sub
insl
aam
nop
pop
push
add
sarl
sarb
mov
andl
pusha
popa
pop
movsb
roll
mov
pop
popf
bsr
mov
sub
sahf
aam
jg
sbb
pop
arpl
nop/reserved
popf
lods
pop
pusha
mov
add
loop
hlt
popa
scas
jmp
xor
stos
arpl
rorl
or
push
popa
ror
inc
inc
and
xor
jmp
fstpl
add
pop
out
hlt
or
and
jne
mov
sbb
loope
add
push
push
imul
pop
mov
or
faddl
jge
mov
cmp
push
loope
add
mov
pushl
sbb
repz
imul
aad
jmp
ret
inc
add
outsl
adc
cmp
and
add
addl
adc
test
sub
lea
je
add
aad
xchg
fucom
xchg
adc
fdiv
int
out
pusha
push
push
add
or
addb
fisubl
add
xor
or
mull
push
repz
test
sbb
imul
shlb
mov
nop
andl
or
faddl
cmp
push
adc
and
clc
les
pusha
pop
outsb
jbe
sub
xchg
adc
ja
add
dec
lahf
add
pop
mov
ret
adc
push
cli
mov
mov
mov
mov
fcompp
add
xor
inc
or
leave
pusha
bound
addl
pop
fistl
call
add
add
cmc
loopne
enter
hlt
and
imul
mov
or
fiadds
popf
lds
mov
jmp
push
bound
xor
mov
sbb
mov
jb
add
call
enter
add
aad
xor
push
sub
ret
inc
pextrw
adc
or
and
int
adc
idivb
shrb
jbe
adc
loope
repz
scas
mov
add
mov
mov
and
pop
gs
jecxz
imul
or
in
aam
adc
divb
mov
jo
pushf
sahf
mov
jno
aad
cmpsl
sub
adc
ljmp
jmp
mov
test
les
xor
adc
jmp
fwait
push
dec
insb
mov
add
mov
test
inc
add
test
pop
add
add
pop
pop
push
pop
repz
add
fs
cmp
xchg
sbb
daa
aaa
sbb
lods
jns
outsl
add
mov
scas
and
test
cld
mov
sub
push
sarl
ret
mov
adc
dec
sbb
inc
push
inc
push
and
pop
out
and
adc
xor
adc
fstpt
xchg
xor
movsl
std
leave
int3
push
stc
jb
or
dec
int3
sbb
and
ja
and
dec
loope
xchg
cwtl
mov
pushf
add
sbb
rcrb
mov
push
jmp
cmpsl
add
jp
pop
dec
adc
shlb
cwtl
jne
in
cmpb
outsb
mov
inc
or
mov
mov
mov
hlt
add
jo
clc
es
cltd
fdivp
or
ret
mov
repnz
into
mov
push
loope
jmp
andb
add
and
adc
test
icebp
inc
nop
pop
popf
out
pop
pop
mov
mov
das
scas
imul
add
jno
adc
add
sub
shr
pusha
adc
cmc
popa
mul
xchg
fbstp
pusha
pop
negb
outsl
scas
add
sbb
push
cmp
clc
add
out
dec
jp
enter
xor
mov
sahf
cmp
mov
fldt
add
push
int3
push
mov
dec
je
pop
pusha
add
loope
inc
bound
scas
mov
adc
and
lea
imul
or
notb
ds
cmpsb
sbb
sahf
lcall
add
push
pop
inc
mov
dec
xchg
push
fucompp
or
add
pop
std
sbb
and
jnp
sub
add
rcrl
in
xchg
cmp
das
add
or
xchg
pop
lods
loopne
fs
sti
mov
cmp
popa
inc
push
mov
jnp
jnp
popf
aad
push
sub
adc
jmp
out
imul
loope
divl
loopne
dec
and
pop
fisubl
adc
add
mov
adc
or
call
add
cmpsl
xor
fdivrs
test
sbb
pop
and
xor
add
cmpsb
popa
pop
jge
cli
cmpl
mov
pop
es
pop
das
fiadds
fisttps
or
or
js
clc
mov
pxor
and
jns
dec
xchg
add
subl
inc
jae
mov
cmc
adc
shr
fs
or
inc
cmp
lock
push
add
and
pop
aad
shll
loopne
popa
and
pop
rcll
sub
mov
or
pop
adc
fists
mov
pop
or
cmp
mov
cmc
xor
lahf
pop
xchg
notl
mov
xor
xor
out
cmp
hlt
pop
cmp
int3
push
pop
adc
incl
cmp
loopne
cmp
lar
push
gs
daa
xor
add
lods
out
sub
test
sbbl
adc
addr16
sbbl
rorb
and
daa
sub
pop
dec
stc
rolb
mov
xchg
or
sbb
inc
xor
adc
test
pop
push
sbb
sbb
inc
addr16
daa
sarb
ret
fstpt
stos
fiaddl
mov
push
std
push
popf
repnz
stc
mov
cld
sub
pop
add
add
idivl
sub
sarl
and
add
mov
inc
push
stos
rcrb
adc
mov
shlb
data16
cmpsb
add
mov
stos
mov
mov
nop
push
xchg
pop
pop
imul
mov
bound
pop
ficomps
bound
cmp
xchg
dec
xor
mov
mov
inc
or
fmul
jge
pop
repz
hlt
dec
dec
mov
adc
add
repz
add
fiaddl
mov
outsb
cmc
xchg
adc
push
pusha
pop
or
or
mov
mov
scas
out
sbb
std
mov
mov
pop
push
mov
sbb
push
push
sbb
pop
sub
idivb
data16
mov
jo
adc
xchg
sarl
inc
and
in
mov
mov
jmp
jns
fcmove
push
xor
xor
jmp
adc
jge
mov
dec
push
test
test
popf
jmp
dec
dec
out
lods
jmp
sbbl
lods
pop
mov
add
inc
jae
mov
dec
jge
test
pop
popa
add
stc
inc
mov
or
jb
mov
stc
fs
mov
sbb
mov
cltd
movsl
fucomip
ljmp
cld
test
shl
mov
daa
xchg
dec
cs
jp
add
mov
xchg
insl
imul
daa
push
dec
jp
jl
jae
xor
mov
xchg
xchg
adc
ret
cli
rcrl
cmp
out
jmp
in
ret
cs
adc
fs
div
loopne
lock
mov
xlat
lods
rclb
jns
add
pop
mov
mov
push
cmp
fs
cwtl
test
fsubrp
shl
and
xlat
push
adc
lock
ljmp
popf
test
cmc
jb
add
adc
add
mov
addb
inc
pusha
rorb
xchg
jb
push
xchg
and
push
rcrb
sub
and
jae
cmp
cltd
mov
lret
push
cmpsl
je
or
inc
mov
dec
add
xor
sbb
sahf
sub
testb
jns
adc
push
cli
mov
fstps
dec
pop
sti
pop
pop
xchg
dec
or
divps
in
pop
or
mov
nop
sub
adc
int
in
xchg
ja
sbb
fsubl
cmp
sti
imul
pusha
add
out
sbb
inc
mov
adc
push
daa
fldenv
pop
fisttps
inc
add
sbb
cmp
pop
xchg
sub
or
sub
push
dec
testl
dec
add
inc
inc
push
pop
aam
add
and
pop
repz
pop
push
cmp
add
jnp
adc
mov
mov
pushf
adc
faddl
xor
and
cmp
jnp
shlb
xor
sub
cmp
pop
xlat
cmp
xchg
jne
arpl
sub
sbb
adc
shl
test
fcoms
push
mov
add
repnz
jmp
xchg
add
adcl
mov
pop
pop
lds
xchg
mov
mov
sarl
xchg
sbb
jecxz
enter
in
sbb
dec
and
es
and
pop
repz
ds
jge
ljmp
mov
sbbb
sub
pusha
dec
sahf
inc
pusha
or
popa
nop
ret
idiv
adc
xchg
or
std
int3
push
jecxz
adc
sub
daa
les
sub
pop
mov
test
loope
lea
out
xor
pop
jb
imul
icebp
xor
rcll
test
mov
loope
adc
aas
push
lock
add
jno
sub
outsb
test
or
mov
sbb
sbb
mov
lcall
mov
pusha
mov
adc
aad
mov
insl
mov
pushf
add
inc
sub
ret
and
or
pop
stc
lcall
in
iret
subb
sub
rolb
and
xchg
jp
dec
rcrl
mov
mov
cmp
jno
test
sub
push
xchg
int3
cmp
push
sub
ja
mov
sub
sbb
fsubrl
loopne
adc
xor
js
mov
test
stc
jmp
sub
add
mov
jg
pusha
mov
std
scas
jge
scas
push
dec
loop
addr16
cmp
add
mov
rolb
push
cmc
nop
pusha
dec
mov
adc
pop
adc
push
push
xchg
mov
dec
or
xor
mov
push
nop
pop
fcom
push
sub
lahf
cmp
inc
xchg
push
mov
xorb
rorl
loop
int3
add
scas
jmp
push
dec
daa
and
outsb
les
aad
test
or
adc
jge
add
pop
nop
call
xchg
int
movsb
sbb
adc
orl
push
add
lods
push
or
push
xlat
and
testl
pop
jns
bound
cmp
repnz
xor
test
gs
mov
pushf
mov
sbb
mov
cs
imul
mov
dec
pop
divl
cmp
cmp
or
xor
fiaddl
cmpl
push
jle
sbb
iret
test
xchg
add
mov
daa
scas
lcall
pop
push
arpl
sub
popa
push
test
dec
out
lcall
fidivrs
dec
jmp
test
test
jno
iret
lahf
xchg
inc
mov
pop
or
add
sbb
push
rcll
leave
push
add
xchg
popa
aam
insb
inc
es
sub
jp
cmp
sub
sbbl
add
outsb
pop
insb
xor
minps
ret
or
fistl
and
andl
and
dec
aam
jecxz
sub
jb
enter
jecxz
pop
popf
cmp
inc
nop
and
xlat
jno
add
push
pusha
roll
imul
nop
jge
inc
pop
std
jmp
mov
in
jbe
add
mov
xor
and
jo
fiadds
mov
pusha
jns
in
jge
mov
mov
stos
mov
mov
enter
and
dec
push
jo
jecxz
sahf
mov
mov
and
mov
pop
xchg
dec
int
sti
clc
into
or
sarb
sbb
dec
or
push
lods
sub
push
and
test
aas
or
add
std
fwait
lret
adc
subl
mov
push
cmpsl
loopne
rep
daa
mov
sbb
sub
and
sub
xchg
jg
popf
mov
xor
sub
insl
mov
add
mov
mov
inc
dec
sbb
and
out
fdivs
popf
or
add
add
mov
out
loopne
mov
or
leave
es
mov
or
mov
jle
ret
loopne
aam
sub
xor
in
pusha
mov
pop
add
repnz
cmp
xchg
ss
cmp
xor
xchg
adc
dec
lds
xchg
sti
int
insb
add
and
stc
fisubs
or
fistl
push
jle
pop
add
adcl
fldl
add
jle
std
outsl
mov
and
pop
xlat
sub
popf
push
adc
cmp
sahf
jo
movsl
add
and
push
push
orb
cmp
mov
pop
in
dec
mov
mov
cmc
push
ficoms
hlt
in
shrl
sub
mov
sub
xor
stc
fisttpl
movsl
dec
mov
hlt
pusha
popa
pop
sbb
dec
lret
movsl
nop
popa
pop
inc
cli
jl
shlb
sbb
dec
push
or
or
pop
xor
test
mov
add
xchg
xchg
pop
sub
clc
mov
lock
mov
jo
jae
mov
fiadds
pop
fiadds
scas
add
and
adc
pusha
addb
xlat
mov
mov
mov
and
mov
sbb
push
insl
sbb
mov
jp
sub
rolb
out
andb
or
mov
add
pop
cmpl
into
dec
jae
jg
push
xchg
mov
jno
ret
test
std
or
mov
cmp
and
add
jmp
test
sub
out
pop
mov
inc
stc
xor
sbb
lahf
add
das
adc
mov
fmuls
out
cmc
out
fsubr
repz
add
int3
pop
fisubrl
mov
lds
loop
jle
cmp
dec
gs
jge
and
adc
mov
movsl
sbb
xchg
push
add
nop
mov
push
adc
int
pusha
lds
pop
cld
cltd
add
dec
sahf
cmp
jnp
call
pop
pushl
xor
rclb
push
addb
jle
add
mov
sbb
adc
cmp
data16
inc
incb
in
mov
pop
nop
sub
rolb
ficoml
xchg
ret
aam
dec
cwtl
test
negb
popa
fcomi
rcrb
add
pop
sahf
add
test
loop
inc
mov
and
les
or
out
sahf
lret
jl
je
rcr
or
in
inc
out
sub
xchg
xor
jbe
outsb
shrb
and
movb
and
je
xchg
fisubrs
nop
mov
mov
out
push
int3
in
add
pop
subb
mov
push
push
out
add
mov
xor
test
pop
add
shl
inc
push
scas
aad
add
inc
test
stc
mov
hlt
andb
fldcw
push
sbb
cmp
dec
sbb
aas
in
filds
fcoml
lock
push
fstl
cmpsl
add
ret
xor
out
dec
add
push
iret
mov
lret
pusha
mov
insl
dec
fstps
fisttpl
sbb
jae
or
shrl
and
adc
jae
rol
lock
jge
imul
sahf
int
lret
jo
adc
cmp
add
jge
fsubrs
cli
add
or
cmp
mov
mov
push
and
daa
push
nop
push
push
xorb
mov
mov
sbb
clc
mov
call
xchg
outsb
inc
imul
adcl
loop
jb
mov
pop
cmpsl
arpl
mov
loope
and
inc
icebp
mull
and
adc
xlat
push
aaa
mov
add
mov
mov
into
arpl
dec
fldl
sarb
insb
sub
push
lock
cmp
adcb
mov
jbe
and
xchg
icebp
les
lods
dec
or
xlat
push
shrb
pushl
mov
push
jge
xor
rclw
sub
mov
xchg
cmpsb
adc
push
arpl
inc
add
mov
popf
clc
add
xor
mov
scas
sub
lea
sbb
or
xchg
decb
xor
ljmp
sbb
mov
sbb
add
mov
add
std
xor
add
movsb
mov
add
fiadds
push
cmpl
repz
push
jmp
cwtl
or
ds
andb
lds
mov
xor
hlt
outsl
add
adc
sub
cmp
mov
adc
testb
push
cltd
jmp
loop
xor
inc
jecxz
xor
lret
clc
xor
pop
add
pop
cwtl
xor
add
cmp
jae
fisubrs
mov
add
das
xchg
jno
sarb
inc
scas
popa
cmpsb
and
add
ja
shll
sub
add
adc
dec
or
pop
or
push
out
add
push
and
cmp
fisttpll
mull
cmp
cmp
invd
fdivrl
cmp
scas
aad
jp
add
into
pop
dec
dec
mov
add
nop
or
loopne
pop
add
mov
popa
sbbl
and
dec
xlat
xorb
dec
add
jns
push
sbb
push
mov
hlt
dec
jle
inc
out
add
int
or
cmp
std
sbb
dec
mov
cli
dec
scas
sbb
fnstsw
insb
mov
jae
pop
cwtl
repz
dec
popa
std
push
add
popf
icebp
mov
pushaw
mov
mov
add
inc
push
hlt
pop
divl
aam
and
out
add
mov
push
js
xor
xchg
inc
mul
cld
loop
push
inc
clc
jmp
sub
gs
push
cwtl
pusha
daa
in
or
push
call
mov
cmp
push
push
leave
into
pop
push
movsb
and
or
sbb
xchg
xchg
sti
insb
or
loope
jg
lea
cmp
addl
outsl
xadd
push
mov
arpl
jno
adc
add
adc
sbb
jb
xor
push
xor
and
fiaddl
and
add
loope
fdivrp
hlt
mov
call
repnz
adc
and
test
es
add
mov
dec
xchg
pop
leave
add
sub
dec
mov
sbb
fs
add
mul
movsl
add
ss
arpl
inc
in
sbb
pop
flds
add
andl
cs
xlat
xor
add
fyl2xp1
dec
lods
pop
dec
movsl
jl
mov
fs
mov
movsb
mov
jb
adcb
or
sub
mov
adc
xchg
sub
pop
xchg
adc
cld
mov
rolb
sahf
ds
sub
repnz
out
inc
pop
jg
add
aaa
sbb
mov
pop
stos
rclb
out
movl
push
movsb
dec
sbb
imul
mov
sbb
and
xor
adc
xor
jnp
fwait
enter
dec
xchg
popa
fnclex
cmp
out
sbb
mov
pop
add
xchg
mov
add
int3
test
add
mov
mov
inc
mov
push
test
pop
test
mov
mov
and
xor
or
push
mov
mov
or
and
lock
jns
pop
imul
xchg
pop
inc
or
fiadds
inc
jg
xor
xorb
ds
sub
push
push
decb
pop
mov
mov
inc
repz
xchg
add
jge
mov
loopne
add
fnsave
and
pop
adc
mov
inc
xchg
add
push
scas
sbb
notrack
daa
mov
or
sbb
dec
adc
popf
cmp
adc
mov
lods
or
add
jmp
inc
mov
sub
call
add
pushl
clc
jbe
add
inc
arpl
lods
aad
dec
and
pop
dec
cmp
fildl
sbb
ds
popa
lret
pop
jp
inc
xor
add
sub
or
ja
and
inc
addb
push
subb
imul
push
out
sti
int3
les
lods
dec
or
add
mov
mov
push
add
notb
add
mov
inc
add
and
jge
ds
inc
sub
outsb
pop
sbb
xchg
push
mov
cld
cmp
loope
ficoms
pop
and
aam
fmul
in
lds
sub
ds
pusha
lret
aaa
adc
sti
ret
sub
adc
or
fisubrl
cmp
and
pop
add
push
out
push
add
push
out
jmp
sbb
nop
iret
sbb
pusha
repnz
je
sbb
add
pop
and
sbb
add
mov
flds
push
sbb
invd
push
sub
pop
sbb
nop
sub
scas
cmp
mov
je
and
adc
cs
add
add
inc
stc
cmpsl
cmp
inc
shll
jb
push
and
mov
orb
mov
into
sbb
or
test
loopne
jl
and
mov
sbbb
xchg
adc
mov
addb
mov
add
cmp
call
or
notl
sahf
inc
jo
push
jae
pusha
in
push
in
pushf
jp
subb
or
les
movsl
jne
push
aam
inc
inc
into
pop
mov
mov
xor
push
jbe
sub
xchg
jle
lcall
repz
cmpsb
inc
movsb
push
loop
fidivrl
add
mov
pop
push
inc
mov
lock
icebp
mov
movsl
add
sub
aad
mov
cwtl
mov
addb
add
xorl
rclb
xchg
xchg
dec
daa
je
mov
mov
int
addr16
repnz
insl
pusha
and
inc
cli
iret
fucomi
mov
mov
shlb
add
rolb
into
in
sbb
mov
popa
aam
jo
and
sbb
inc
add
stos
mov
xchg
test
jno
insb
push
cmp
scas
mov
pop
sti
push
incl
rclb
out
fmuls
cli
or
cmp
mov
pushf
sub
sbb
add
mov
dec
mov
mov
dec
sbb
jno
andl
stc
cmp
int
push
fbstp
push
andl
push
ss
aad
xor
push
lcall
add
adc
fidivrs
push
sbbl
dec
cmp
lret
or
sub
xchg
pop
sbb
cvtps2pi
rcll
add
pop
fstl
push
mov
punpckhbw
add
es
cmp
xor
push
jb
pop
dec
adc
inc
mov
adc
nop
push
xchg
adc
cli
decl
repz
cwtl
std
push
add
nop
loopne
movl
shrb
sbb
xchg
in
js
sub
mov
outsb
add
stc
loopne
jmp
xchg
inc
mov
push
jg
mov
aas
adc
mov
cmpsb
cmp
add
adc
adc
in
aam
roll
add
test
xlat
inc
je
fs
add
sub
adc
mov
scas
lods
add
mov
dec
sub
xchg
das
rcrb
and
xlat
and
popa
pusha
mov
inc
or
add
popf
add
jmp
mov
and
testb
lret
clc
es
in
mov
push
js
sbb
pop
mov
popa
mov
or
xchg
cmp
jns
sbb
push
and
test
xor
bound
dec
clc
insb
cmc
inc
stos
jmp
mov
fstl
or
sbb
sahf
push
mov
movsb
cmp
or
in
dec
jb
orb
mov
loopne
mov
mov
mov
xor
push
xor
data16
pusha
dec
push
push
xchg
adc
or
mov
push
pop
add
js
insb
and
mov
mov
stos
sahf
scas
adcb
dec
mov
movsb
cmc
pusha
lahf
mov
add
mov
or
xchg
aad
pop
or
or
push
jg
sbb
sbb
add
arpl
les
mov
jae
lock
popa
lret
and
add
pop
sbb
inc
inc
cs
or
xor
cmp
sub
adc
pop
and
pop
sub
or
sbb
mov
jge
imul
shrl
dec
bound
or
cmp
test
fwait
dec
cmpsl
mov
repnz
xbegin
or
jmp
add
xor
outsl
cs
xor
push
mov
push
push
jns
xor
pop
popa
outsl
adc
mov
movsl
cmc
cmp
push
pop
popa
popf
jmp
aad
sub
movsb
data16
outsb
pop
add
call
add
es
lods
movsb
sbb
rcrb
ror
sbb
daa
mov
ror
pop
ffree
pop
sub
pop
aas
cmp
cmpsb
adc
clc
adc
mov
push
pop
mov
das
enter
call
fisubs
in
xchg
or
fmul
jo
popf
fnsave
and
xchg
ret
pslld
sti
into
pop
hlt
add
testb
stos
aam
insb
mov
mov
inc
js
test
add
call
clc
xor
repnz
mov
sub
movsl
or
in
adc
and
popa
pop
and
pop
push
es
cmp
mov
jbe
cmpsb
mov
mov
push
jo
and
fs
es
pusha
mov
push
mov
mov
fisubs
push
enter
in
loopne
mov
pop
out
ficoms
lea
fcom
adc
sbb
sbb
adc
lret
shrb
test
pop
sub
loop
pop
ret
pushf
arpl
mov
cmp
ret
mov
popf
sbb
push
add
outsl
sarb
mov
aaa
cmpsl
repz
sbb
xchg
cmpsb
pop
jnp
movsl
push
mov
mov
pop
add
jge
outsb
and
and
jnp
in
add
stos
add
pop
stos
and
cld
gs
lea
stos
dec
jo
inc
mulb
push
mov
fisubl
cmp
jb
ficoml
call
test
shl
and
out
outsb
in
fisttpll
movsl
sti
ds
std
clc
lret
scas
mov
add
rcrl
call
out
pushf
addr16
adc
mov
mov
push
lcall
mov
or
mov
mov
call
sbb
cs
adc
sbb
sub
and
mov
jae
jns
in
lcall
adc
test
mov
cmp
push
xchg
std
imul
push
pop
and
xor
stc
jnp
or
pop
xchg
add
popa
sti
lret
ficompl
push
adc
mov
mov
ljmp
sbb
lods
pushf
sub
xchg
sti
paddw
sub
push
mov
inc
mov
add
fstpl
push
dec
mov
mov
and
jp
adc
pushl
or
adc
lret
cmc
fmuls
jns
or
fiadds
and
xor
xor
mov
push
shrb
add
test
out
addr16
in
add
mov
inc
and
lea
sar
faddl
rolb
dec
inc
clc
mov
and
mov
aas
adc
sub
mov
add
mov
mull
push
push
rcrl
inc
jmp
mov
cmp
lea
test
sbb
and
inc
sub
push
in
clc
push
mov
lret
sub
dec
stos
sbb
mov
fisubl
xchg
jecxz
push
add
mov
hlt
jo
xor
loop
xchg
inc
stc
cmpsl
fsts
add
push
fs
pop
dec
ss
add
stos
nop
lahf
jmp
mov
push
xchg
shlb
clc
movsl
andl
je
and
adc
xchg
fidivrl
orb
inc
out
ss
and
movsl
inc
aam
jge
add
xchg
sbb
loop
iret
les
inc
xchg
dec
fldenv
dec
test
and
sub
popa
or
imul
adc
shlb
sbb
jno
lahf
xchg
adc
popa
cmp
scas
scas
ds
mov
xor
pop
xchg
dec
add
mov
add
fidivs
repz
jecxz
enter
dec
xor
add
mov
test
insl
add
xor
add
insb
jno
sbb
or
mov
or
lea
mov
int3
or
cli
mov
insb
mov
adcl
add
fisttps
and
xchg
das
in
test
shrd
dec
and
jg
es
mov
or
mov
sbb
test
push
xor
pop
movsl
jo
mov
cmp
mov
pop
push
pop
lcall
nop
mov
xchg
loope
cmc
jnp
fldcw
xor
addb
scas
leave
popa
das
fwait
add
push
jge
xchg
mov
stc
xchg
pop
ljmp
orb
adc
stc
loopne
cmp
and
outsb
incl
and
ljmp
jae
jo
push
add
mov
cmp
sbb
mov
ret
mov
jl
aam
sarl
jmp
sub
pop
add
popf
adc
push
jmp
je
mov
loope
xchg
cmc
jne
ds
adc
push
rolb
addr16
mov
cmp
adc
pushf
test
and
add
cmp
sub
sbb
nop
push
out
add
sub
xchg
mov
add
ret
jno
mov
add
psrlq
sbb
sarl
mov
addb
xchg
inc
addl
mov
push
fwait
rol
sub
lds
push
div
insl
shrl
cmpl
or
insb
cmp
push
jg
sbb
push
inc
pop
mov
call
cld
sbb
inc
cltd
adc
pop
movl
sbb
fstl
inc
add
jmp
push
mov
fcoms
add
int
add
shlb
adc
add
daa
or
pop
mov
add
xchg
jno
ljmp
bound
push
xorb
rcrl
add
jl
nop
mov
push
xchg
int
ret
dec
adc
add
mov
andb
fbstp
jo
mov
fdivs
testl
stc
cli
enter
xor
pop
movsb
ljmp
jo
mov
jecxz
stc
pop
mov
mov
or
dec
mov
pushf
mov
or
xor
shlb
lea
int
pusha
jg
or
dec
jmp
add
sub
add
and
or
push
xchg
adc
sbb
aas
fwait
or
jmp
add
sbb
les
aam
dec
int
leave
adc
mov
movsl
aad
data16
mov
pop
add
mov
outsb
dec
add
pop
pop
lahf
mov
mov
pop
dec
idivb
rcrl
inc
lea
inc
and
jo
or
ret
xchg
jne
scas
rcrl
cmpsl
popa
dec
ss
xchg
repz
outsl
cmp
push
test
sub
in
imul
incb
or
add
lods
mov
mov
add
pop
nop
fiadds
test
bound
cwtd
mov
push
sbb
std
mov
jmp
lahf
push
sbb
jle
xor
js
out
jp
add
pushf
mov
test
loopne
or
popf
jne
es
xor
faddl
xchg
cld
sub
xchg
xor
mov
popf
mov
xor
ljmp
sub
push
scas
mov
pop
adc
add
cmc
xor
cltd
pcmpeqw
aad
xor
add
inc
pop
fsubs
add
mov
xchg
xchg
sbb
cmpsb
adc
mov
inc
adc
jo
nop
sub
push
inc
dec
lcall
in
enter
xor
or
sbb
sbb
xor
je
pop
or
push
pop
inc
test
and
ds
jmp
fisubs
addr16
xchg
xor
orb
idivl
mov
ds
pusha
daa
sbb
add
clc
cmp
mov
pop
cwtl
cmp
aas
and
int3
push
das
jb
mov
aad
cld
or
hlt
loope
or
out
lock
pop
add
xor
inc
sbb
push
dec
js
cld
ja
push
pop
dec
cltd
xor
rcr
pop
jmp
or
add
addl
ret
lahf
int
rol
xor
cmp
fwait
xor
add
enter
sbb
rorl
pop
and
pop
fwait
imul
pop
or
push
add
dec
jno
and
out
and
clc
aam
orb
inc
sbb
pop
js
add
stos
lret
rcrl
mov
leave
pop
nop
rcll
pop
dec
fsub
aam
mov
xchg
rcll
adc
lret
pop
je
add
push
es
jmp
mov
xchg
sbb
adc
dec
movsb
mov
lock
adc
pop
sub
dec
adc
pop
and
out
loopne
push
popf
int
ret
jge
out
ret
std
or
pop
push
push
loope
inc
xchg
fnstenv
jae
test
or
lret
push
out
iret
or
insl
add
sub
pop
lret
jae
imul
add
and
pop
sbb
dec
inc
mov
adc
adc
add
mov
cmp
and
mov
inc
lahf
aad
and
push
testl
mov
add
rcrb
divw
pop
mov
add
add
or
js
push
inc
fstpl
hlt
lods
icebp
shrl
xchg
dec
mov
mov
fwait
int3
adc
inc
lret
jge
xchg
insl
jp
xchg
aaa
mov
push
add
jns
or
add
clc
jae
pop
adc
jnp
mov
pop
mov
imul
adc
ds
lea
idivl
mov
andl
cli
popa
in
lret
mov
sahf
mov
or
jmp
lds
test
sub
push
gs
mov
rorl
xor
cltd
adc
outsb
and
fs
mov
lods
sahf
or
les
xor
pop
testb
loopne
jo
mov
shll
cmp
aam
pop
imul
add
orl
inc
mov
xchg
xchg
sbb
jmp
shll
fcompl
add
aas
xchg
xor
jbe
adc
and
repnz
sub
add
sub
xchg
imul
movsl
xor
jae
mov
dec
test
xor
loopne
pusha
mov
sbb
je
daa
cmc
jp
add
mov
inc
add
inc
mov
add
outsl
fbstp
mov
aad
pusha
or
cltd
icebp
push
clc
mov
mov
lods
sbb
mov
pushf
add
dec
lahf
adc
popa
pop
dec
nop
and
adc
mov
pop
push
mov
repz
dec
push
mov
inc
mov
add
mov
incl
cmp
pop
dec
nop
repnz
add
out
cmc
cltd
cli
pop
fsubs
pop
add
movsl
lods
in
pop
mov
adcl
mulb
push
add
pusha
xor
mov
aam
jp
sub
test
add
sub
icebp
xor
adc
popa
aas
test
adc
pop
jb
pop
test
fsubp
ja
adc
push
mov
jns
roll
mov
cwtl
sbbl
push
notb
cwtl
and
and
mov
mov
sub
mov
mov
or
or
pop
xor
add
sub
imul
mov
subb
call
mov
in
pop
ja
pop
in
xor
mov
add
sub
xchg
jle
or
outsb
pop
outsb
and
pusha
imul
pop
call
or
sub
shlb
or
orb
js
testb
cltd
scas
push
xor
aaa
pop
lret
or
mov
xor
gs
daa
jge
dec
ss
xchg
xchg
sub
jp
dec
xchg
in
daa
fldcw
aad
lods
push
push
dec
mov
push
cmp
jno
lods
sbb
or
popf
mov
leave
dec
dec
sub
rolb
jne
xor
cmp
rclb
call
daa
add
jge
inc
mov
outsl
cwtl
jl
outsb
frstor
dec
call
jbe
push
add
pop
shll
rcr
jl
xor
call
rol
mov
xor
data16
sahf
adc
sarl
lds
int3
add
cmpb
sub
lock
add
ss
in
jmp
sbb
insl
adc
outsl
adc
mov
lahf
and
call
sub
daa
push
and
cmpsl
sahf
rolb
inc
mov
lahf
ljmp
scas
pop
nop
xor
mov
hlt
in
leave
pop
bound
or
sbb
outsl
xchg
in
call
xor
pop
das
js
or
lahf
iret
sub
mov
mov
ror
movsb
or
lret
add
jp
pushf
sub
add
call
inc
and
push
hlt
testb
pop
ja
mov
js
sarl
jb
adc
pop
loopne
xchg
or
shrl
lods
call
mov
dec
mov
xlat
jae
pop
and
lahf
das
adc
ljmp
add
push
push
call
scas
dec
add
cld
or
insl
int3
ret
fucom
and
std
push
mov
loopne
adc
mov
push
mov
or
xor
mov
les
or
push
mov
subl
fs
ret
add
test
sub
lods
mov
push
or
hlt
es
imul
je
aam
sbb
cmp
loopne
rcrl
mov
lret
mov
mov
xchg
and
outsl
out
adc
xchg
stos
cmpsl
mov
das
add
and
add
push
xor
cli
pushw
mov
shrl
mov
and
mov
add
outsb
xchg
push
mov
js
leave
daa
sbb
xchg
or
dec
mov
ljmp
pusha
inc
mov
or
inc
or
cmc
push
iret
repz
notb
and
jno
add
xchg
subb
dec
decb
mov
cltd
sub
cmpsl
ljmp
sbb
xchg
in
xor
pusha
sub
cmpsb
pop
jle
push
addb
mov
mov
shrl
mov
add
stc
add
lea
push
inc
inc
or
cs
dec
pop
push
sub
fcmovnb
fiadds
jecxz
push
sbb
icebp
push
and
push
movswl
in
mov
dec
call
sbb
insb
inc
xchg
jae
mov
mov
gs
mov
dec
mov
je
push
add
adc
shlb
scas
jp
add
test
inc
lods
sub
or
mov
dec
sbb
imul
iret
jbe
push
in
mov
pop
fdiv
push
nop
out
push
roll
inc
jnp
outsl
pop
js
sbbl
bound
and
fisubrs
sbbb
sub
add
js
xor
cwtl
lods
lea
adc
jnp
and
pop
shrl
dec
ret
mov
adc
xor
add
sahf
lret
scas
mov
sub
sub
in
ficoms
push
mov
fstpt
push
mov
das
pop
mov
pusha
dec
clc
fldl
cmpsl
jle
out
jmp
loopne
mov
sub
dec
dec
pop
frndint
shlb
cmp
pop
mov
xchg
or
mov
push
loop
sbb
mov
add
cmp
jg
mov
jmp
imull
adc
push
int
loope
popa
pusha
inc
ljmp
adc
pop
hlt
xchg
das
xor
mov
pusha
xor
sub
imulb
mov
jns
add
jl
insb
pop
rcll
fwait
call
and
popf
mov
adc
pop
out
mov
mov
ss
das
pop
push
mov
lcall
xlat
jge
pop
push
subl
popa
ret
repz
test
adc
scas
sub
xchg
rolb
in
cmp
sbb
mov
faddl
mov
jmp
or
push
or
insl
dec
lods
arpl
add
add
add
imul
scas
bound
stc
addl
and
sbb
das
psubd
js
shrb
dec
cmp
data16
add
in
jecxz
cmpsl
mov
add
aam
frstor
shrb
cld
outsb
adc
cmp
dec
pushf
js
push
sbb
in
sub
mov
pop
add
push
mov
cs
fiadds
and
loopne
andl
in
mov
pop
andb
inc
shrl
subl
mov
mov
jecxz
rorl
mov
sbb
dec
andl
xor
xchg
mov
sbb
pushf
jo
sub
add
sub
dec
nop
and
jne
mov
sub
loope
cmc
cltd
aam
or
outsb
mov
sbb
pop
ret
inc
daa
pop
xchg
xchg
js
loop
mov
cmc
stos
rcr
mov
lock
nop
fs
mov
pop
sub
jno
inc
pop
mov
shr
cld
les
xchg
daa
test
enter
xor
pop
int
fimull
in
inc
inc
or
push
rolb
in
add
loop
xchg
sub
add
nop
sahf
push
mov
xor
stc
inc
add
adc
jne
push
test
repz
jge
lea
aas
jne
in
xchg
sub
fwait
jmp
mov
andl
in
and
cmp
dec
out
inc
add
dec
mov
mov
mov
cmp
mov
mov
outsl
lods
add
push
mov
pushf
mov
clc
or
mov
mov
and
cmp
and
adc
lret
std
pop
dec
add
pop
jb
aaa
int
add
test
inc
lret
push
pop
mov
dec
cld
imul
pusha
movb
insb
addb
pop
loopne
jle
add
sbb
jl
xor
shlb
rcrb
adc
inc
and
cli
or
mov
pop
shrb
test
adc
pop
xorb
sub
pop
mov
add
sub
lods
out
aaa
in
xchg
lods
xor
rcll
sbb
jo
push
xchg
or
leave
add
in
cld
shll
sub
xchg
aad
mov
nop
mulb
and
pop
inc
das
add
fistpl
push
cmp
rorl
cmpsb
sti
leave
sbb
out
test
sub
add
das
add
or
or
lea
or
dec
inc
cmc
sub
jp
into
jno
cli
nop
xor
addl
outsl
add
aad
jl
sub
pop
adc
sahf
test
adc
push
push
dec
inc
add
frstor
mov
add
ss
mov
jmp
outsl
xchg
add
xor
iret
fldl
ss
popf
mov
adc
pusha
inc
adc
or
bound
add
aas
and
jo
sarb
dec
unpcklps
scas
xchg
popl
bound
lds
fimull
aam
fmull
das
fcoms
and
add
stos
push
js
filds
and
push
mov
xchg
inc
jae
sbbb
or
jo
or
out
xorb
add
mov
jno
in
mov
add
pop
iret
push
mov
dec
jnp
test
or
sbb
xor
sbb
pusha
cmpsl
inc
pop
int3
cmp
inc
pop
popa
mov
and
add
mov
fdivrl
cs
es
sub
rorl
mov
test
dec
add
mov
mov
inc
jb
xor
fiaddl
cmp
jmp
dec
sub
sbb
or
std
mov
inc
pop
stc
mov
loopne
popf
lret
and
insl
and
push
mov
pop
rcrb
add
mov
mov
xchg
insb
add
mov
inc
add
movsl
xchg
add
xchg
test
dec
pop
mov
add
push
imul
sub
test
add
xor
push
xor
lods
xor
inc
push
jno
loop
add
mov
inc
loop
lret
pop
and
mov
or
mov
lahf
into
add
adc
pop
sub
jl
dec
repz
and
daa
jp
in
and
push
sub
pop
divb
gs
and
and
sar
lock
mov
dec
in
pop
lcall
repz
faddl
ja
push
jg
jno
inc
lret
lea
nop
push
push
jns
lret
push
ja
movsb
dec
mov
adc
fs
rolb
sbb
fwait
popa
adc
lds
and
popa
mov
mov
movsb
jle
sbb
push
jo
jae
pop
test
mov
movl
imul
adc
adc
lock
in
inc
push
add
xchg
jb
outsl
jbe
dec
cld
lods
or
jae
jmp
adc
orl
adc
adc
inc
int3
add
cmp
inc
pop
dec
mov
pop
push
ss
mov
push
lcall
adc
push
sbb
mov
scas
outsb
or
test
js
or
dec
jge
dec
test
mov
inc
xorl
std
int3
movsb
aas
push
dec
pop
jge
mov
add
movsl
shrb
insl
sahf
nop
xchg
test
cmp
jg
nop
mov
push
addr16
jmp
pop
xor
rcll
push
shll
in
out
xchg
inc
fwait
daa
pop
dec
xor
sub
icebp
sbb
pop
addl
push
adc
call
leave
xchg
add
mov
add
inc
mov
mov
adcb
lcall
ss
pusha
in
dec
dec
or
adc
mov
loopne
xorl
aam
out
pop
fcomi
cmp
xchg
add
dec
pop
movsl
sub
add
dec
mov
xor
ds
popa
mov
push
inc
xorb
aam
mov
add
cli
push
sarl
or
dec
and
sub
or
sub
dec
mov
outsb
into
test
or
cmp
jno
das
int3
and
pop
stc
xor
jmp
mov
shrb
xor
push
xchg
mov
addr16
sub
add
mov
jg
push
adc
adc
fs
or
mov
addb
and
sbb
mov
jmp
inc
xchg
int3
in
repnz
fdivl
das
out
int
icebp
add
aaa
pop
inc
mov
daa
orb
in
cmp
fmull
fwait
cli
add
xchg
and
or
pop
lods
fsubs
popf
inc
sbb
addb
fadds
cld
pop
movsb
mov
xor
es
dec
mov
xor
sub
and
testb
test
inc
das
xor
es
xchg
loop
pusha
stc
or
mov
popa
or
xchg
add
lock
jp
sbb
pop
adc
pop
dec
ret
push
rolb
mov
mov
jne
mov
stc
sbb
orl
ss
xchg
sbb
jp
mov
in
sub
pop
lods
jbe
out
sarb
in
sub
push
call
shl
fcompl
scas
xor
test
jge
dec
add
or
jmp
rcrb
add
push
pop
mov
adc
add
sti
popf
sbb
rorb
jmp
push
inc
mov
mov
popa
je
push
mov
xor
jl
dec
outsb
or
add
loopne
into
jp
cmp
adc
xchg
dec
sbb
movsl
pop
push
jns
inc
xchg
push
shlb
test
push
add
or
loope
push
mov
adc
pop
das
cmpsb
cmp
mov
sti
popa
push
or
dec
daa
and
int3
or
xchg
cld
lret
sahf
pop
addb
dec
popa
add
ljmp
dec
xlat
stc
dec
lods
jbe
lock
push
dec
jp
sub
adc
out
js
out
jo
fldl
pop
or
test
fldenv
add
nop
push
jae
rolb
test
inc
adc
shrl
inc
mov
mov
iret
arpl
mov
jb
push
pop
je
push
repz
hlt
add
jo
mov
adc
sbb
add
lea
xchg
push
add
enter
add
aas
imul
popa
mov
push
outsl
mov
dec
cmp
push
cs
xchg
push
inc
adc
mov
das
fstpt
addb
sub
in
ja
pop
fidivrl
xorb
into
stc
jmp
pop
pop
rcrb
push
pop
shrl
leave
rcrl
and
sub
mov
lods
push
loopne
inc
or
faddp
lcall
xchg
push
and
shl
and
test
or
icebp
cmp
daa
popa
dec
xchg
les
adc
add
push
test
push
cs
push
push
cld
mov
mov
mov
inc
add
cmp
mov
jo
adc
daa
mov
mov
lock
cmc
fsubl
xchg
sbb
and
xchg
les
pop
hlt
popa
orl
xor
xchg
in
and
and
or
test
sahf
or
pushf
inc
push
stc
ja
mov
mov
xchg
sti
mov
mov
sub
xorl
mov
in
stos
xchg
repnz
icebp
jg
adc
add
ficomps
popf
std
fstpl
pop
aad
or
or
je
nop
and
cmp
aad
add
mov
jle
inc
pop
sbb
jmp
jmp
cld
and
loopne
test
or
cli
movsl
test
push
xchg
sbb
mov
daa
fistl
pop
std
mov
push
mov
inc
int3
scas
xor
insl
mov
dec
mov
adc
sub
outsb
rclb
adc
pop
push
mov
inc
movsl
in
inc
inc
add
xor
fnstsw
adc
pop
push
add
lahf
jb
dec
or
sub
movsl
out
movsl
int
rorb
shr
push
or
imul
push
test
add
pop
cmp
adc
dec
inc
orl
jmp
fbld
xchg
out
fs
imul
loopne
push
dec
int3
frstor
push
mov
call
jmp
and
dec
cmp
mov
push
das
icebp
icebp
inc
sbb
shl
push
aam
sbb
jg
push
jbe
loopne
mov
mov
mov
cmp
add
mov
pop
or
btc
loope
loopne
cmpl
sbb
mov
mov
out
jne
pop
popf
adc
pop
mov
jnp
adc
mov
sbb
aad
ljmp
inc
sub
out
or
testl
and
inc
inc
sbb
and
push
mull
fldcw
xchg
in
ret
mov
movsl
lock
and
in
xchg
add
cmp
pusha
cwtl
xor
in
xor
xchg
cmp
das
negb
adc
mov
mov
sti
cmpsl
aaa
ds
lret
lds
inc
add
fs
movsb
mov
push
sbb
loopne
das
mov
jo
push
loopne
adc
add
mov
pop
mov
lds
or
cs
or
scas
out
dec
push
call
jae
adc
sub
add
cmp
jo
adc
jno
cmc
pop
int3
lret
mov
xor
test
adc
inc
ret
add
cmp
and
cmpsl
and
pop
dec
add
sbb
fldenv
add
es
inc
jg
movsb
jno
popf
aaa
jg
adc
je
repnz
pop
outsl
pop
or
fmull
imul
loope
sahf
hlt
sub
jbe
sub
sbb
mov
lea
in
xchg
cmc
test
outsb
loopne
lock
gs
pop
or
xor
in
push
lahf
gs
out
sub
aas
test
fnstcw
dec
adc
lea
jno
push
pusha
mov
xchg
push
stos
xor
sbb
mov
cmpsb
or
sahf
pusha
mov
das
and
ret
mov
sahf
subl
mov
int
sbb
xlat
loopne
lods
les
mov
in
xchg
mov
mov
jecxz
add
or
dec
nop
idivb
aaa
dec
and
out
hlt
add
popa
add
iret
movsb
push
cmp
add
and
jo
inc
xchg
xchg
dec
dec
cs
sub
js
stos
ret
add
and
and
cld
inc
push
das
cmp
movsb
jmp
pop
add
add
out
jl
mov
xor
clc
incb
jo
or
orb
rorl
dec
and
sbb
mov
or
xor
add
stos
fs
inc
push
popf
scas
dec
lcall
fistpll
jne
out
adc
add
push
adc
adc
idivb
adc
mov
enter
aas
bound
lcall
inc
shll
push
and
std
lret
add
cmp
xchg
in
and
pop
mov
aam
insb
mov
mov
pop
aas
pop
sbb
enter
ja
inc
jne
cld
inc
xchg
mov
jno
imul
push
mov
fucom
popf
mov
clc
mov
dec
add
aad
mull
xchg
adc
mov
mov
adc
sub
push
pop
shlb
or
pop
xchg
js
lods
dec
jmp
scas
pusha
add
insl
stos
js
and
fnstsw
push
mov
jp
or
addl
pusha
mov
andb
notl
aas
cmpsl
mov
cwtl
jb
fisubrs
add
arpl
loop
je
sub
fdivr
add
fmulp
stc
push
je,pt
imul
adcb
mov
adc
stos
popa
mov
mov
push
xchg
mov
sub
jle
popa
push
ds
lods
add
stos
or
and
cmp
fdivrs
xchg
xchg
mov
push
das
and
push
push
pop
mov
shl
mov
stc
int
sahf
or
xchg
fwait
movb
gs
outsb
lock
push
jno
cmp
mov
test
aas
adc
mov
outsb
fadds
shlb
jle
lcall
out
and
adc
jge
sbb
iret
ljmp
fs
adcl
sahf
iret
sub
adcl
gs
sub
test
jno
sbb
bnd
sub
xor
scas
popf
adc
std
mov
testl
repz
pop
cmp
add
mov
mov
sbb
push
aas
add
xor
stc
sbb
pop
pop
pop
hlt
jae
mov
adc
testl
shll
inc
and
flds
push
add
orl
and
popa
test
shl
jmp
inc
mov
rorl
into
loopne
cmp
int3
mov
mov
leave
pusha
nop
dec
lahf
imul
in
rcll
imul
sbb
dec
clc
push
mov
sbb
cwtd
cmp
add
fst
jae
inc
test
xor
lcall
popf
and
xchg
dec
stc
inc
sti
lcall
loop
cli
ljmp
fwait
mov
das
xor
xorb
imul
cs
and
leave
jo
mov
push
add
inc
add
or
lods
mov
fiaddl
mov
pusha
jle
sbbb
or
in
xor
xchg
mov
ret
xor
dec
imul
pop
cmc
movsl
rcrb
mov
retw
pop
insl
jno
and
cmp
add
jae
cmc
jg
in
and
das
fwait
rorl
and
xchg
dec
dec
das
popf
in
jb
and
sahf
lret
add
nop
and
add
mov
and
imul
popf
stos
xor
push
jl
fmull
call
dec
and
popa
or
mov
sbb
in
dec
lahf
ret
push
pop
inc
pushf
dec
jp
add
add
int
fstl
jbe
pusha
or
pop
pop
in
add
push
je
dec
dec
sub
or
cmpb
mov
das
sub
pop
mov
popf
mov
pusha
dec
mov
ljmp
mov
daa
mov
and
mov
stc
outsb
test
push
and
sub
pop
pop
stc
mov
adc
mov
fisubrl
lea
movsl
push
ret
or
add
inc
lahf
sub
sbb
jb
pusha
pop
lock
ds
out
std
xor
add
aaa
fcmovne
jl
mov
enter
popa
jmp
xor
cmpsl
xor
xorl
addb
jbe
xor
mov
sbbb
gs
shlb
sti
or
and
mov
jge
testl
call
inc
push
dec
and
and
incb
or
adc
sub
add
out
or
sbb
push
mov
repz
and
loope
pop
push
mov
xchg
inc
scas
daa
mov
stos
and
mov
ret
mov
sub
aaa
fadds
or
test
adc
adc
or
ffree
dec
aaa
fsts
aam
sbb
mov
int
data16
xchg
push
fadds
daa
in
push
add
sub
aam
pushf
cmc
xor
int
inc
xor
lahf
push
mov
cs
mov
pop
jnp
cli
xchg
outsb
sbb
adc
or
inc
push
stos
jns
test
pusha
push
andb
je
and
jne
jg
repnz
repnz
nop
xor
mov
mov
mov
add
call
jns
push
or
inc
pop
push
insl
ds
sub
or
sti
or
cmpsl
rorl
iret
popf
sar
fdivr
loope
fistpl
adcl
mov
pop
add
dec
mov
jnp
pop
xchg
xchg
mov
xor
rolb
std
xor
repnz
cwtl
shrb
sub
xchg
add
cmpb
xchg
pop
and
cmp
pop
mov
loopne
mov
adc
push
rcll
pusha
cmp
mov
cmc
add
outsl
dec
int
daa
cwtl
dec
popa
xchg
mov
jnp
jo
add
cmp
fisubrl
lods
je
das
jecxz
and
daa
push
orb
dec
int
je,pn
imul
xor
sbb
or
push
dec
movsb
jb
loopne
inc
jo
xchg
int
shlb
pushf
xor
adc
lea
jecxz
xor
into
inc
push
push
jae
add
nop
and
cmp
add
push
sub
or
hlt
or
xor
faddl
js
mov
aad
popa
scas
gs
sub
test
shl
rorl
cltd
push
pop
shll
int
mov
add
jp
pop
push
inc
and
adc
idiv
loopne
xor
cli
mov
xor
jmp
push
mov
mov
cs
shl
pop
mov
pop
mov
stos
loope
stc
testl
add
sbb
or
das
mov
add
popa
mov
mov
andb
xor
inc
jb
add
cwtl
popa
mov
mov
xchg
enter
xchg
es
fmuls
enter
das
in
add
mov
stos
push
out
das
mov
push
pushf
lea
mov
and
call
out
jp
add
sahf
sbbl
xor
jmp
pop
mov
pop
mov
nop
jp
inc
das
pop
or
xlat
std
lods
in
or
dec
les
mov
ds
sti
push
aaa
jmp
lcall
add
and
xor
popf
cmp
ficomps
sbb
and
add
sub
cmp
jnp
add
fistpl
pop
pop
xchg
adc
mov
adc
jmp
fsubs
outsb
lods
daa
mov
add
pushf
xchg
mov
sub
fs
movsb
mov
fisubrl
sub
dec
mov
dec
ss
push
jmp
and
mov
mov
pop
jns
inc
cmp
sbb
shll
and
xchg
insl
jp
adc
loope
add
mov
mov
push
in
pop
push
xor
fwait
pusha
add
loopne
inc
push
jns
jae
jge
jmp
or
pushf
repnz
test
pop
or
jno
cmpsl
int
shlb
ja
and
popf
inc
inc
xchg
stos
and
sbb
xchg
adc
and
test
lds
fcmovb
test
sbb
pop
out
xchg
icebp
pop
mov
mov
jae
mov
test
sub
xchg
testl
pop
cmp
sub
mov
loope
pushfw
lock
sub
xchg
or
imul
add
imul
clc
test
mov
test
in
pop
mov
cmp
dec
add
cltd
inc
mov
cmpsb
inc
enter
add
pop
outsb
in
or
push
push
jo
fwait
inc
sbbl
dec
jl
mov
mov
mov
sub
shrl
outsl
xlat
or
dec
fstps
lcall
in
mov
mov
push
fs
clc
xchg
out
and
test
jle
into
fsub
add
js
ret
mov
mov
xchg
mov
scas
lods
lds
add
mov
ret
cmp
add
bound
cmpl
popa
fistps
and
or
jmp
mov
ror
mov
push
or
xchg
enter
insl
pushw
mov
add
xor
pop
mov
mov
cmp
mov
and
popf
adc
aam
sbb
or
test
add
loope
sbb
or
mov
in
fimuls
test
jmp
inc
push
sub
cmpb
xor
add
xor
adc
jp
or
cmc
or
pop
call
testb
push
adc
xor
jno
sbb
push
push
sti
mov
addl
dec
mov
mov
mov
adcb
repnz
jp
sti
mov
iret
stos
xlat
or
bound
sub
aas
cld
xor
jo
arpl
std
xchg
out
cmc
clc
sbb
in
add
or
dec
and
pop
call
add
ret
push
iret
cmp
pop
nop
jbe
pop
mov
sar
imul
loope
minps
fbld
mov
outsl
lea
mov
sahf
and
out
sbb
mov
adc
in
popf
shrb
or
inc
and
mov
test
push
xlat
cwtl
add
push
scas
inc
xchg
inc
and
mov
add
neg
loop
push
inc
and
add
mov
adc
decb
add
push
fidivrs
push
mov
int3
mov
add
push
pop
mov
sbb
and
sbb
jmpw
jmp
jno
fnstcw
jnp
jnp
dec
pusha
sub
push
popa
aas
outsb
sbb
pop
je
addb
push
aas
das
xor
sbb
std
mov
fdivp
fiadds
loopne
xor
popf
movsl
sbb
inc
push
comiss
leave
jge
test
add
mov
adc
loop
sub
clc
xchg
das
sar
pop
scas
adc
push
mov
xorb
pop
ss
gs
aas
sub
fdivrl
lret
rcll
xchg
test
jge
and
mov
adc
cmp
addb
lea
xor
mov
sbb
out
pop
xchg
push
or
jne
rolb
add
ret
sbb
sub
in
daa
pop
pop
in
adc
enter
in
push
cmc
pop
sub
cmpl
mov
xchg
adc
xor
sti
loop
push
xor
adc
push
shrl
sub
cli
jne
mov
js
pushf
xchg
cmpsl
testb
imul
add
repnz
xchg
inc
and
pop
rorb
or
add
pop
std
sahf
and
stc
imul
mov
sub
push
sti
stos
aad
je
out
mov
push
jnp
cmpsl
jle
and
mov
cltd
shll
stos
cld
xchg
pop
xchg
push
mov
mov
call
loopne
ficoms
icebp
jmp
add
adc
or
push
imul
add
out
mov
xchg
inc
xor
shlb
jg
incb
clc
mov
movsl
jnp
imul
daa
sahf
push
inc
cmp
lcall
or
movsl
clc
mov
mov
mov
std
adc
sub
fsts
stc
in
jle
dec
sub
cmc
fiaddl
and
and
mov
je
fs
andl
pop
xor
mov
and
jo
loope
das
sub
dec
add
mov
into
xchg
adc
push
jmp
sub
jecxz
dec
or
fs
loop
andl
mov
lret
and
nop
pop
lods
filds
lods
test
cmp
mov
sbb
inc
jle
push
mov
stos
addl
ja
pop
pop
xchg
jp
repnz
sub
insl
mov
and
add
push
pop
movsb
js
inc
loop
inc
inc
cwtl
cmc
push
test
call
xchg
stc
pop
rcrl
std
pop
fnsave
test
pushf
xor
test
call
test
push
mov
inc
icebp
push
jb
dec
push
add
adc
lahf
out
inc
xchg
add
stos
jl
sahf
xchg
fdivl
xor
inc
out
xchg
pop
jns
push
test
pop
dec
mov
and
repnz
xor
jmp
inc
jo
shrl
xchg
nop
and
jecxz
lods
pop
fwait
mov
sub
mov
adc
ds
lds
inc
jnp
dec
test
sti
lea
mov
push
adc
jae
push
add
push
fcomps
cs
dec
push
mov
and
add
or
fisttpl
sbb
loop
sub
icebp
repz
fnstsw
mov
lret
fidivl
sbb
pusha
jecxz
mov
xchg
cmp
loopne
push
decb
and
out
xchg
add
loopne
ret
add
or
jg
add
mov
imul
shlb
push
jg
or
fidivl
jecxz
pop
sub
xchg
dec
mov
add
fs
jnp
int3
mov
jne
cld
int3
inc
adc
dec
int3
jg
scas
imul
addl
ret
mov
xor
stos
cmp
mov
movsb
jge
add
dec
pusha
jne
mov
and
pop
mov
push
cwtl
leave
add
pop
cmp
mov
push
aas
cmpsl
stos
xchg
pushf
in
fstl
push
dec
push
stos
imul
jb
sbb
addw
pop
xchg
lods
jns
add
xor
js
imul
in
sub
stos
jge
stc
gs
aas
push
adc
mov
int3
push
inc
jge
or
sub
sub
jnp
test
add
mov
xchg
std
mov
repz
jecxz,pt
mov
sbb
add
jne
or
fadd
stc
fsubs
int3
mov
adc
or
add
jl
loope
pop
push
pusha
sub
out
popf
push
adc
xchg
call
pop
pop
aam
and
sub
sbb
and
jmp
cmpsb
scas
adc
jecxz
add
popf
shll
jno
mov
das
xor
clc
mov
pop
stc
fstp
cmp
cmpsl
add
sbb
dec
cli
movsl
movsb
cs
lods
divl
mov
xchg
xchg
and
idivb
or
ss
adc
into
mov
cmp
adc
ret
cmpsl
cltd
lret
mov
rcll
pop
adc
hlt
pop
adc
mov
sbb
out
jnp
sahf
mov
rcl
andb
enter
inc
sbb
jo
cmp
orl
mov
sbb
mov
mov
and
mov
test
fidivl
add
sub
mov
sub
jnp
imul
call
xchg
xor
and
mov
lea
adc
ret
cmp
push
ds
nop
andb
roll
pop
insb
add
out
frstor
add
jno
xchg
lcall
cmp
imul
xor
sub
pusha
sbb
pop
int3
pop
jmp
mov
xchg
lret
pop
push
mov
repnz
sub
jg
or
je
jmp
and
leave
push
loop
jp
pop
call
or
jae
icebp
push
sub
ss
jmp
add
or
mov
lods
popf
add
in
inc
mov
inc
gs
push
test
xor
hlt
sbb
inc
or
lret
nop
mov
jne
jb
xor
inc
lods
mov
dec
xchg
shlb
jno
rol
jns
add
shl
lret
aaa
mov
and
sub
pusha
or
cmp
rcr
js
jno
inc
dec
adc
test
stos
jo
lods
jae
xor
dec
ficoms
loopne
ret
out
mov
dec
fnstenv
movsl
jb
xchg
inc
fildl
push
push
test
mov
jp
out
ret
scas
pusha
or
pop
iret
lods
in
pop
andb
fmul
or
test
or
add
into
sub
adc
adc
les
pop
mov
lea
adc
sbb
pop
xchg
lfence
cmc
inc
scas
rcll
add
cmp
sub
and
xor
hlt
or
sub
sbb
lds
sbb
mov
ret
mov
ficoms
call
xor
out
jbe
jno
cmp
insb
mov
adc
and
adc
xor
add
and
mov
nop
xchg
clc
outsl
add
not
movsl
pop
popa
push
pop
adc
push
ret
pop
and
add
sub
sbb
inc
test
add
test
inc
fmull
jo
fiaddl
leave
adc
add
btc
je
adcl
stos
negl
inc
call
int3
fimuls
test
pop
push
add
cmpsb
dec
sbb
adc
mov
mov
jns
and
or
pop
jbe
loope
popf
pop
aas
push
sbb
daa
inc
test
addb
rclb
flds
or
pop
sub
int3
sub
and
pop
and
mov
jo
cmpsb
inc
aad
jae
rclb
into
mov
add
popf
insl
lods
jge
sbb
repz
sbb
jl
in
xchg
xchg
push
dec
fwait
add
mov
mov
jo
add
popf
mov
sub
repz
adc
in
stos
and
lret
pop
add
notl
add
pop
cmp
pop
pusha
mov
test
lods
pop
jge
xchg
rorb
add
gs
cld
out
lcall
adc
adc
xchg
das
mov
in
ret
or
into
mov
lcall
or
popf
add
add
int3
jecxz
popf
or
jo
xor
pusha
or
add
je
popa
sub
cmp
push
enter
mov
mov
subb
popa
inc
xor
sub
xchg
call
add
push
jg
mov
inc
ja
into
ret
add
scas
stos
push
xor
pop
jecxz
pop
xchg
add
adc
and
scas
xchg
outsl
dec
jo
pop
fstpl
xchg
popa
leave
inc
test
sbb
mov
mov
into
fsubrs
sub
std
adc
movsl
sbb
mov
lcall
into
sub
lret
mov
jae
in
jle
je
or
dec
jno
push
movsl
notl
mov
or
in
mov
mov
push
mov
mov
gs
jno
lods
cld
pushf
dec
faddl
out
addr16
int
insl
cld
sub
jmp
fnsave
inc
push
jl
out
mov
or
rcl
or
les
mov
mov
cli
inc
adc
mov
pop
cmp
subb
lock
fstpt
repnz
push
aam
jg
cmpsl
dec
testb
sub
call
imul
lds
jmp
adc
out
iret
rcl
mov
mov
roll
stc
jbe
push
dec
adc
lock
mov
pop
fidivrl
xchg
add
fldl
sub
pop
fimuls
sub
dec
pop
sub
loope
popa
cmp
jge
xchg
loopne
mov
add
fucomip
mov
fisttps
daa
inc
adc
inc
popa
inc
adc
fldcw
push
pop
push
xchg
scas
push
ret
loopne
push
mov
jae
cmpsb
mov
movsb
or
and
insl
sbb
or
aam
subb
cmp
push
pop
inc
and
and
gs
add
pop
test
add
dec
fisttps
xchg
sub
pop
int3
cmpsl
rol
add
sbb
sub
cltd
adc
mov
add
hlt
hlt
adc
sbb
loopne
sub
in
cmpsb
mov
jnp
fsubl
outsb
or
jmp
subb
pop
adc
test
mov
or
out
push
daa
jo
loopne
mov
insb
je
out
dec
jmp
pshufw
inc
add
cmp
mov
xor
leave
pop
inc
andb
cmc
hlt
adc
push
mov
rorb
xlat
aaa
jmp
adc
loop
pop
xchg
popf
sbb
lods
adc
test
add
sub
test
xlat
dec
mov
sar
mov
jb
fmuls
mov
pusha
cmp
movsl
mov
das
test
imul
fimuls
cmpsl
cmp
xor
leave
ljmp
imul
les
mov
add
mov
sub
add
jmp
sub
push
outsb
out
jno
popa
es
sbb
stc
out
jnp
pusha
cmp
dec
push
std
push
xchg
call
add
push
sub
add
or
sbb
mov
pop
lds
jle
or
xlat
dec
pop
idivb
lods
mov
xor
jbe
jmp
movsl
jle
mov
arpl
push
sti
sub
sub
add
adc
xor
sub
movsl
add
xchg
and
sub
popa
add
cmp
pop
popa
js
ret
xor
lea
leave
in
push
ja
in
pop
mov
leave
jl
adc
add
cmc
mov
xorb
cwtl
adc
rol
add
and
sbb
out
add
cmp
mov
mov
cli
push
or
mov
xor
sub
inc
out
mov
dec
and
dec
loopne,pn
push
xchg
mov
lret
xor
fs
add
inc
inc
arpl
mov
xor
movsl
fimuls
cmpsb
or
dec
adc
add
push
xor
aaa
inc
call
cli
xchg
psrlw
aad
inc
mov
out
jnp
mov
jnp
sub
jle
add
stc
lods
out
mov
cmc
mov
jmp
dec
out
stos
je
dec
mov
dec
cmp
mov
repz
lods
test
outsl
mov
dec
inc
lods
xor
push
mov
aam
jmp
mov
pop
pop
scas
stos
or
sub
popf
xchg
and
aad
xchg
mov
or
rcrb
rolb
add
push
inc
cmp
test
icebp
loopne
inc
in
pop
aam
lahf
inc
push
mov
sub
lret
jg
fists
or
movsl
jno
mov
adcb
outsl
out
add
imul
jmp
or
mov
xchg
scas
and
stos
pop
add
aas
mov
mov
sbb
push
hlt
out
ret
lcall
scas
out
mov
xlat
adc
mov
orl
ret
mov
sub
xchg
xor
aad
lods
scas
pop
lret
shll
jge
je
cmpsb
inc
adc
add
jmp
test
ret
adc
pop
jns
dec
pushf
add
push
adcb
xchg
ret
sarb
bound
movq
pop
aaa
mov
pop
aad
push
push
das
fiadds
and
pop
mov
mov
bound
mov
or
xor
xor
cmp
je
jmp
mov
adc
je
push
sbb
xor
push
push
pop
push
xor
mov
bound
inc
add
mov
jno
mov
xchg
das
adc
mov
inc
sbb
fdivl
add
in
arpl
mov
push
fbld
movsb
and
fisubs
fbstp
xchg
loope
pop
pop
outsb
add
adc
data16
sbb
xchg
cmc
nop
jo
or
pop
cmp
in
test
stc
and
add
fstl
shr
xor
add
jbe
lock
stos
movsb
inc
or
xchg
jno
aad
pop
add
insl
popa
cli
sub
jbe
push
pop
mov
fdivl
add
push
pop
gs
stc
lods
popf
or
daa
jp
mov
out
mov
push
add
mov
and
push
loopne
and
mov
addr16
mov
lret
sbb
daa
std
sbb
mov
push
adc
sbb
fcoms
mov
test
subb
int3
dec
out
add
insb
lret
je
push
fwait
xor
adc
mov
dec
fsubs
sar
add
mov
mov
add
mov
jle
pop
out
repnz
mov
cld
xchg
imul
pop
mov
cmp
fcoml
jmp
xchg
cmp
outsb
aam
out
fsts
mov
je
in
push
add
xor
addb
lods
cmp
mov
jo
dec
nop
and
inc
lea
lret
call
nop
push
xchg
jo
sub
jle
dec
add
cmc
adc
je
ret
pop
mov
jg
lds
push
add
mov
or
mov
cld
roll
sbb
xor
xor
mov
repnz
out
xlat
mov
xchg
outsl
movsb
das
insl
and
stc
movsl
jno
js
notb
adc
cmp
inc
or
push
es
dec
repz
inc
mov
sub
call
nop
popf
pusha
sbb
adc
xor
sub
dec
stc
dec
dec
mov
and
loopne
xor
mov
xchg
sub
lahf
dec
push
cltd
rcll
jl
cwtl
dec
pushf
sbb
pop
pop
cmpsb
and
loopne
sub
out
cmpsl
jnp
adc
std
add
sub
mov
pop
in
push
or
add
mov
mov
adc
fiaddl
mov
inc
or
fadd
ret
add
mov
sbb
push
jmp
insl
mov
sub
inc
or
jmp
sub
sub
mov
and
mov
mov
pushf
add
loope
mov
movsl
mov
xchg
data16
inc
pushf
adc
insl
notb
sub
add
das
imul
add
test
loope
daa
sti
mov
popf
mov
or
add
push
mov
js
repz
dec
push
mov
jp
add
push
sub
mov
add
clc
movsl
adc
add
adc
inc
lahf
xor
out
ret
jle
push
les
mov
mov
and
mov
jmp
loope
jl
loop
fnstsw
adc
into
mov
push
and
sub
cmovle
mov
imul
lds
in
enter
and
pop
lahf
sbb
push
push
in
int
xchg
mov
add
inc
mov
push
xor
xchg
mov
cmp
push
adc
sbb
xchg
scas
lds
lods
mov
call
rolb
popa
lea
pop
and
add
or
lods
push
sbb
repz
pop
jmp
frstpm(287
mov
loopw
jno
inc
in
add
cwtl
hlt
sub
movsb
fisubl
pop
jmp
fsubrs
pop
adc
test
int3
popf
mov
or
mov
push
sti
enter
inc
dec
stos
xchg
cld
mov
shrl
adc
pop
and
rorl
sub
mov
pop
lcall
cltd
movsl
pop
das
stc
or
pop
push
and
cmp
aad
lods
inc
add
icebp
jae
je
mov
popf
lret
xchg
test
cmp
iret
push
test
addr16
dec
jno
or
mov
pop
mov
mov
mov
xor
inc
repz
cld
lods
jnp
mov
push
adc
pusha
nop
leave
adc
jbe
add
add
sbb
jle
cmp
adc
push
sub
loope
dec
fcomps
cmp
ljmp
sbb
sbb
sbb
sbb
xchg
pop
imul
jmp
lods
mov
mov
aad
xor
fisttpl
cs
fstl
addb
sub
jge
cmpsb
jmp
xlat
out
in
addr16
stc
push
mov
stc
faddp
int
frstor
sbb
in
pop
loopne
dec
sub
add
xchg
xor
test
fiaddl
repz
sbb
cltd
inc
std
cs
add
sbb
arpl
in
mov
pop
pop
push
inc
pop
xchg
pop
out
add
mov
lds
enter
pop
cs
add
push
pusha
push
pop
pop
imul
jl
into
imull
and
add
pop
adc
and
movsb
int3
sub
and
sbb
imul
fcoml
cwtl
loop
mov
fstpt
aaa
mov
imul
push
cmp
out
pop
lods
outsb
xchg
jo
mov
sub
shrl
jg
cmovl
and
pop
or
repnz
mov
loopne
pop
fisttps
adc
adc
jno
ret
aas
lods
push
cmc
add
push
cli
sub
sub
addr16
and
lahf
sub
xchg
pop
test
inc
mov
dec
lods
pop
pop
loopne
lods
inc
push
add
lahf
push
xchg
pop
adc
gs
std
mov
pop
mov
push
sarb
mov
mov
scas
je
cmp
sbb
mov
mov
mov
add
cli
inc
into
jl
into
mov
mov
mov
jecxz
pop
jbe
mov
jge
xchg
sahf
jge
add
aam
mov
adc
sub
jb
outsl
jbe
mov
sbb
sub
xchg
mov
mov
popa
jmp
stos
fsub
out
popa
mov
add
mov
mov
pop
add
gs
sbb
dec
xchg
stos
outsb
inc
add
mov
in
jbe
sbb
mov
aaa
sub
cmp
test
mov
pop
sub
mov
imul
imul
and
mov
fsubrp
pop
pop
sub
xchg
and
fadds
lret
inc
jnp
mov
and
cltd
inc
sbb
mulb
jne
sarl
ror
jl
and
jne
sbb
test
and
xchg
lret
add
push
jmp
sbb
mov
lret
in
pop
inc
mov
lea
xor
cmpsl
hlt
cli
cwtl
sti
flds
out
jmp
xor
xorb
ja
push
imul
out
or
data16
pop
jo
cmp
aas
inc
pusha
nop
jo
lahf
lcall
fldl
xchg
sbb
insl
rcl
mov
fistl
jb
xchg
mov
ss
xchg
push
popf
pop
cmp
or
or
adc
pop
push
je
and
aad
xor
mov
add
out
jl
and
pop
jae
and
out
addr16
in
push
js
xchg
lods
xlat
add
add
inc
jns
and
cmp
cmp
jae
cmp
pop
sbb
gs
add
mov
jnp
cmpsl
jbe
aam
daa
jmp
mov
mov
push
xor
cmpsb
popf
adc
sbb
sti
inc
pusha
jmp
xchg
sbb
add
roll
pop
add
pop
pop
push
int3
addb
mov
daa
lock
movsl
adc
or
mov
mov
add
aaa
iret
add
movsl
mov
mov
and
test
loopne
xor
lea
xchg
pop
mov
lcall
inc
repz
and
mov
stos
shrb
mov
push
add
pop
push
mov
mov
mov
push
scas
or
add
mov
xchg
cmp
rclb
pusha
push
pop
sub
add
lds
sbbb
sub
xchg
mov
jnp
mov
in
in
push
cld
mov
popf
sbb
addr16
mov
xor
cmc
shl
jne
add
arpl
cmp
mov
ljmp
add
lock
push
pop
ret
lret
xor
ja
cmp
xchg
mov
lods
jge
pushf
cmp
or
outsl
fidivl
jbe
mov
xchg
call
mov
mov
jnp
es
push
add
pop
loope
push
fidivrl
inc
or
test
jle
sbb
jns
fldenv
mov
cmpsb
pop
mov
xor
push
add
int
mov
and
ret
or
mov
gs
or
rcrb
cmp
popf
aam
aaa
inc
cld
pusha
sub
shrb
add
pop
aas
cmpsl
mov
push
popf
lds
shl
dec
loope
shlb
adc
cli
fistps
cmp
xchg
into
es
movsl
rcrb
mov
or
adc
xor
sbb
pop
push
data16
sub
icebp
in
adc
xor
inc
add
jl
das
jg
inc
mov
sub
incl
in
adc
cmp
cmp
adc
fsubl
add
pop
cmp
cli
popf
sbb
pop
fwait
dec
pop
mov
xor
push
mov
lahf
ret
pusha
fsubrs
inc
leave
add
outsl
mov
add
and
orb
cmp
pop
push
mov
rolb
lods
popf
test
xchg
andl
add
cmp
popa
pop
movsb
movsl
and
sub
shrb
pop
dec
sbbb
mov
or
ja
movb
cmc
or
popf
and
jbe
and
and
sub
daa
ret
sub
sahf
adc
xor
and
fsts
mov
ss
xor
sbb
sahf
and
add
ret
mov
cmpsb
insl
adc
jge
mov
add
lahf
pop
pop
push
push
gs
mov
test
test
mov
xor
dec
ret
pusha
push
int3
mov
or
enter
pop
aaa
pop
sub
add
lds
test
in
dec
lock
enter
mov
adc
and
jl
incb
add
insl
sbbb
pop
mov
mov
arpl
inc
sub
and
rorb
pop
adc
nop
js
inc
call
push
test
int
mov
lcall
mov
cmp
push
adc
xchg
or
jl
jno
adc
scas
sub
inc
test
out
mov
orl
test
add
pop
xchg
aam
xor
mov
mov
xor
fwait
or
inc
push
lods
cmp
or
test
icebp
stos
mov
xchg
and
cltd
inc
cmp
jae
movzwl
hlt
xchg
filds
call
mov
push
mov
mov
jne
or
pop
test
ds
push
adc
xor
adc
repnz
mov
jb
pusha
lods
and
add
adc
mov
pop
fisttpll
in
cmp
sahf
push
mov
sub
xchg
inc
stos
addr16
or
jb
out
xor
test
dec
jmp
test
imul
xchg
pop
cmpsl
stos
add
in
dec
daa
js
pop
loopne
sbb
mov
rolb
cmc
scas
mov
lcall
popf
rcl
mov
popf
int3
push
adc
push
imul
mul
and
xor
push
idiv
adc
outsl
pop
pop
loopne
mov
jmp
ds
fstpt
or
mov
push
add
addl
cmp
xchg
dec
call
cmp
or
shl
rorl
test
fmuls
mov
add
ljmp
ds
pop
add
cld
jge
push
popa
sub
arpl
stc
dec
mov
pop
mov
sub
pop
push
jmp
or
insb
push
xorl
cmpsb
fsub
decb
add
adc
cmp
push
test
lods
pop
insl
movsl
push
mov
mov
add
push
pusha
fnsave
js
outsl
add
jnp
stos
fwait
push
push
pop
bnd
leave
pop
add
jp
push
mov
dec
sbb
push
rclb
dec
cmp
lret
mov
and
jno
inc
pop
and
aam
sbb
sub
jbe
movsb
stos
fdecstp
cmp
into
xchg
sbb
push
xor
jecxz
pop
pop
in
cs
cmpb
jp
lret
lret
pop
add
dec
scas
xlat
fists
sub
pop
leave
scas
div
pop
imul
lods
js
sbb
xchg
repnz
jle,pt
or
or
stos
push
dec
mov
mov
mov
rcll
xchg
lea
adc
xchg
mov
mov
add
pushf
jp
or
pop
pop
dec
push
fcomip
mov
pop
std
psadbw
dec
and
xchg
push
pop
add
sbb
pop
mov
hlt
iret
daa
loopne
fcmovne
mov
push
push
pop
jle
jecxz
dec
cld
sub
and
leave
ds
mov
pop
outsl
jmp
sbb
in
mov
sub
xor
loope
mov
mov
sbb
or
or
cmp
mov
bound
mov
les
data16
sti
mov
xchg
insl
pop
fs
and
add
mov
in
popa
and
in
fwait
or
cs
movsl
and
ja
cmp
repnz
pop
push
xchg
sbb
mov
adc
add
js
lds
call
dec
jecxz
cwtl
adc
cmp
int
mov
or
call
add
xchg
add
pop
inc
cltd
fadd
dec
xchg
mov
mov
jg
test
push
cltd
imul
sbb
adc
add
xor
popa
mov
pop
mov
xor
mov
and
and
pop
scas
in
in
inc
dec
jg
push
pop
or
adc
xor
lea
add
les
mov
push
pusha
jbe
or
popw
icebp
add
hlt
in
inc
pop
mov
mov
add
pusha
mov
and
dec
loopne
cwtl
out
sbb
pop
addr16
mov
icebp
inc
xchg
jle
clc
popf
mov
popa
test
es
repnz
mov
cs
sbb
dec
sbb
jg
pop
jns
pop
pop
scas
loopne
dec
mov
xchg
push
push
ljmp
je
mov
jae
mov
xorl
sti
push
mov
or
popf
sahf
ss
mov
movsl
aam
cmc
pop
insl
loope
add
lret
jno
add
sub
push
cwtl
fcoml
fcoml
sarb
or
push
cmc
xor
dec
dec
mov
adc
loop
iret
call
xor
mov
cmp
inc
cmc
shl
add
leave
fldl
cmp
adc
push
cs
xchg
bnd
je
scas
push
cs
or
hlt
push
adc
add
ljmp
les
push
xchg
out
xchg
fmul
cmpsl
jnp
jo
mov
jp
and
andb
int
inc
adc
std
and
fisubrl
dec
stc
xchg
dec
scas
pusha
inc
roll
xor
and
data16
add
mov
popf
sub
push
mov
sub
subl
mov
aad
sub
lcall
add
addr16
mov
jae
out
movsb
call
sub
add
je
push
sub
pop
mov
push
faddl
mov
cmp
inc
mov
and
pop
mov
ja
ds
pop
add
jl
out
stos
aad
mov
add
or
ljmp
sbb
adc
imul
shll
or
mov
mov
sub
imul
add
cmp
nop
pop
jg
icebp
add
repnz
inc
popa
into
cs
or
and
xchg
mov
mov
cmp
jle
push
imul
cli
inc
inc
dec
mov
dec
notb
test
movsb
add
xchg
cmpb
ficomps
loope
bound
adc
adc
cmpsb
add
fistps
pop
inc
push
jns
shrb
xchg
mov
dec
push
jg
out
loopne
bnd
add
mov
pop
xchg
dec
popf
push
jmp
sub
add
xchg
xchg
enter
mov
pop
lds
out
mov
jp
daa
mov
aad
ja
xorl
enter
xor
jns
add
sub
mov
cmc
pop
jmp
sbb
scas
pop
push
es
repnz
xor
fmull
dec
cs
push
add
in
or
push
fdivl
xlat
cli
iret
dec
into
mov
push
mulb
pop
xor
pop
mov
das
dec
pop
dec
inc
add
jne
mov
out
in
sbb
pop
loopne
jl
shlb
and
das
ret
iret
dec
inc
es
cmp
sub
add
push
mov
cmp
push
mov
xchg
pop
lods
or
xchg
add
mov
je
loopne
cld
repz
loop
dec
sarb
dec
outsb
push
adc
outsb
out
daa
stc
inc
mov
add
or
imul
adc
push
fisubs
test
ret
popa
xchg
lds
xchg
adc
mov
jb
lcall
inc
push
xchg
jle
loop
addb
aam
sar
lods
jno
mov
jnp
push
dec
lods
imul
xor
inc
shlb
mov
cmpsb
jmp
mov
xor
adcl
xchg
movsb
cli
repnz
add
jo
mov
enter
cmp
add
mov
das
sub
add
mov
cld
cld
push
pusha
mov
adc
in
mov
inc
pop
push
dec
mov
mov
sbb
scas
lock
adc
pop
clc
lods
jbe
mov
pop
pop
loop
mov
icebp
push
xchg
fwait
cmpsl
loopne
cmp
push
push
sbb
loopne
arpl
cld
mov
jle
sbb
aas
hlt
pop
lock
dec
push
data16
jo
xlat
xor
jne
into
loop
std
in
and
cmpw
push
jo
fadds
cmp
xchg
mov
cmp
loop
rcl
push
lahf
popa
mov
add
xchg
out
mov
push
adc
pop
lock
dec
adc
fldl
in
idivb
mov
xor
inc
inc
xor
mov
jo
add
pushf
mov
fwait
push
pop
pop
or
mov
cmp
out
push
mov
test
add
dec
popa
jmp
mov
outsb
fcomps
and
mov
sub
mov
cmp
mov
and
dec
sahf
out
subb
push
test
sub
loop
mov
stos
inc
xlat
pop
push
jo
aaa
add
mov
dec
mov
jmp
add
mov
fiaddl
insl
fwait
popf
idivl
xchg
pop
stos
and
or
xchg
sub
ficompl
jno
xor
sarl
in
mov
lock
push
push
and
cmp
and
push
aad
xchg
in
mov
xor
mov
test
inc
and
subb
pushf
pop
shlb
insb
pop
jae
popa
xchg
int3
out
fwait
push
loop
mov
pop
pusha
push
scas
and
addl
pop
mov
ret
add
cli
mov
push
xchg
jnp
fimuls
cld
xchg
inc
cmp
rclb
orl
or
aam
fwait
popf
sarb
fbstp
imul
adc
or
and
xor
popa
cmc
inc
sbb
js
mov
push
xchg
push
mov
xor
and
dec
je
cs
test
ljmp
dec
or
mov
jns
dec
jno
adc
mov
jne
mov
add
cld
es
push
or
add
int3
lods
in
xchg
inc
cltd
ja
cmp
cmpsb
mov
or
add
aaa
popf
jle
inc
mov
cmp
out
das
popf
ljmp
mov
data16
out
fadds
adc
cmp
push
dec
xchg
or
jb
movsb
and
cwtl
sbb
cld
jb
mov
mov
xchg
dec
add
ja
push
mov
add
outsb
fidivrl
add
mov
or
mov
jmp
mov
cmpb
stc
clc
xor
and
pop
mov
pushl
and
imul
popf
sub
pop
sub
mov
sti
jg
ds
mov
cmpb
mov
jbe
xchg
fbld
adc
imul
popa
add
lret
sahf
sub
mov
dec
push
add
shlb
les
icebp
and
cmp
iret
mull
sub
dec
push
pop
sarb
arpl
in
pop
mov
add
mov
mov
lcall
mov
sub
pop
or
ds
add
test
mov
adc
cmp
mov
mov
push
loop
mov
rolb
or
aas
sbb
cmp
in
fnstsw
sbb
mov
aad
push
and
xchg
mov
fs
mov
jle
xlat
inc
lods
jne
mov
fsub
mov
sub
aam
push
or
sbb
cmpsb
dec
add
sbbb
out
out
xchg
sbb
in
push
stc
lcall
loopne
dec
xchg
pop
imul
fucompp
inc
jg
sbb
mov
fsubrp
movsb
sbb
out
or
jae
into
jl
inc
pop
add
and
pop
mov
mov
pop
cltd
addr16
je
rcll
loope
test
lcall
push
mov
dec
pop
push
inc
mov
jle
sbb
add
into
frstor
inc
sub
adc
mov
cmpsb
lea
loop
mov
ret
mov
popa
in
push
xchg
mov
int
lds
rclb
ret
mov
adc
pop
mov
mov
fs
add
outsb
mov
xor
sarb
add
incb
into
adc
and
fiadds
fwait
inc
mov
xchg
int3
dec
pop
and
rolb
cmpsb
dec
or
arpl
add
clc
mov
addr16
mov
or
mov
and
mov
mov
xchg
mov
jge
xchg
dec
xor
out
imulb
add
add
test
scas
fwait
mov
sub
and
and
jno
dec
aam
daa
hlt
cmpsl
fimuls
jle
enter
and
jo
push
xor
decb
mov
jno
ss
push
and
add
lcall
add
aaa
jmp
in
sub
adc
mov
mov
in
and
pushl
sbb
repnz
dec
icebp
adc
or
aas
sub
pop
ljmp
and
push
jg
repz
push
add
test
cli
xchg
dec
addb
mov
adc
pop
lock
adc
fmull
jp
fcomp
adcb
nop
xor
out
leave
sarl
pop
inc
lods
xor
adc
leave
sbb
sbb
inc
sbb
mov
enter
push
stos
pop
push
test
xchg
sbb
mov
je
les
and
pop
add
lret
cld
sub
jg
mov
pop
adc
lret
pop
jns
out
cmp
fdivp
or
sbb
sub
adc
and
mov
test
mov
fcoms
jg
test
xor
insl
repz
int
rolb
pop
addr16
sub
mov
fcmovnb
test
popa
add
or
jne
push
sub
mov
clc
cmc
ret
and
jb
adc
and
and
daa
adc
cld
mov
jns
and
cld
je
mov
or
mov
pop
mov
ja
mov
andl
inc
insb
popf
xchg
gs
push
outsl
xchg
pop
mov
test
rcrb
popf
xor
insb
mov
mov
adc
ss
lea
inc
add
ss
in
cmp
cmp
mov
test
dec
je
adc
xor
ficompl
sub
insb
adc
adc
call
scas
dec
xchg
or
mov
rcrb
sub
sbb
mov
sub
mov
mov
adc
subb
js
dec
push
pusha
pop
mov
repnz
xor
out
aaa
pop
cmpeqps
or
sbb
cmp
mul
aam
out
xor
bound
sub
cltd
cmc
xchg
sub
rolb
and
pop
iret
add
scas
mov
cltd
mov
push
mov
pop
cmp
or
sbb
dec
and
sub
scas
dec
push
inc
xchg
jno
outsb
or
xchg
in
pop
into
xchg
xchg
outsl
daa
mov
mov
inc
add
mov
xchg
jne
lea
les
pusha
mov
inc
ds
call
pusha
test
or
sbb
rcrb
fisubs
lret
insl
aad
iret
jnp
mov
lret
inc
cmp
mov
pusha
add
cmp
fnstenv
xlat
test
out
iret
iret
and
insb
movsb
push
pop
ficoms
popa
outsb
xlat
cli
add
jns
adc
pop
je
jp
xor
imul
sub
je
loopne
cmp
fldcw
push
and
in
fldcw
add
mov
addr16
pop
adc
xchg
test
sbb
popl
sub
nop
pushf
and
jle
inc
enter
add
fistps
xor
cmp
jg
push
xchg
rclb
and
adc
ret
xor
nop
cmp
add
push
pop
xor
dec
mov
mov
sbb
pop
sbb
dec
ret
jbe
ficomps
stos
aas
inc
rcrl
push
andb
push
cmp
stc
lods
mov
sbb
mov
dec
ror
dec
jmp
mov
repnz
nop
jbe
test
xor
pop
lret
es
inc
adc
test
pop
jne
mov
in
pop
jno
mov
add
push
sbb
inc
sbb
stos
cwtl
insb
out
adc
cmpsl
mov
or
movsb
ret
insb
clc
xchg
xchg
cmpsl
jmp
fisttps
mov
jnp
andb
add
sub
xchg
data16
push
push
mov
pop
jne
pop
dec
cmpsb
mov
in
jne
sbb
int
lods
stos
pop
push
dec
in
mov
cmp
shll
fwait
repz
cmpsl
pop
mov
clc
xor
or
mov
jnp
push
adc
sub
dec
fisttps
mov
dec
out
or
push
ja
das
test
xor
arpl
out
pop
addr16
in
mov
popf
and
xor
mov
sar
mov
nop
add
arpl
add
pusha
xor
jl
int
loop
jmp
sarb
lock
mov
or
jo
clc
loop
push
cmp
cmp
adc
cmp
sti
mov
loop
das
sub
shrb
pop
adc
push
sub
jmp
daa
mov
lds
das
ss
popa
ret
outsl
hlt
shr
lcall
mov
or
and
pop
inc
sbb
push
mov
add
ds
popa
std
push
mov
and
add
mov
mov
cmpsl
faddl
add
leave
dec
aad
jnp
sahf
inc
outsl
sarb
dec
mov
movsb
mov
cwtl
adc
and
dec
jnp
pop
adc
push
sbb
test
push
test
mov
add
and
adc
sub
mov
cmp
lcall
js
loopne
dec
fcmovb
mov
sbb
divb
xchg
add
repnz
pop
push
shll
comiss
or
jle
mov
enter
add
or
and
ret
cmp
fwait
int
ljmp
cmp
xchg
adc
pop
rorl
adcl
roll
mov
lahf
push
jbe
pop
cmp
insl
imul
ret
pusha
in
adc
test
sub
push
mov
shrb
jmp
lock
xor
clc
sbbb
pop
xchg
cmpsb
imul
stos
jbe
mov
or
mov
cmp
push
pop
jmp
sbb
mov
adc
mov
test
ja
cltd
test
cs
mov
mov
fldcw
lods
roll
out
js
add
sahf
inc
pop
inc
cwtl
xchg
cld
pop
inc
repz
jae
jno
jg
xchg
xchg
das
mov
cmpsb
dec
loopne
popf
ss
ficoms
and
das
push
mov
and
or
jmp
add
clc
ja
mov
mov
cld
add
into
fisttpl
cmp
jno
add
aas
shrl
pop
sbb
test
sbb
push
sub
mov
inc
jne
jb
out
xorb
xchg
pushf
inc
pop
add
sub
xchg
mov
and
mov
lock
pusha
cmc
push
test
push
jmp
dec
popa
and
sbb
push
in
outsl
dec
pop
fs
jbe
mov
iret
jnp
xchg
adc
dec
add
fdivs
ljmp
adc
test
or
loope
add
push
mov
cmp
cmpsb
cld
push
xchg
in
js
pop
or
adc
push
jns
nop
cwtl
jg
or
mov
ljmp
dec
pop
jle
sub
aad
rcll
xor
pop
push
jno
push
sub
repz
pop
sub
and
and
push
repz
test
into
nop
add
mov
movsb
mov
aam
jmp
fs
cli
scas
xchg
pusha
push
pop
jp
xchg
push
add
daa
int3
into
in
shlb
cmp
mov
jbe
mov
pop
and
xchg
enter
and
mov
cld
adc
add
sub
xor
rorl
fildl
scas
subb
add
lods
ljmp
mov
popa
xchg
repz
pop
push
sbb
mov
shlb
xchg
push
inc
xorl
cmp
inc
repnz
sbb
push
fdivs
xchg
mov
jns
mov
xchg
lea
cmpps
sarb
mov
mov
aaa
mov
aam
add
divps
mov
mov
mov
xchg
int
add
jb
cltd
push
add
add
push
add
gs
outsl
repz
rorb
mov
enter
pop
or
mov
test
lds
das
xor
jno
adcl
sub
add
add
jg
adc
mov
lret
das
gs
cs
out
insb
xchg
xchg
adc
jg
mov
push
stc
pop
adc
cmpsb
and
xchg
inc
dec
inc
sub
inc
mov
adc
mov
cmpl
push
mov
cmpsl
dec
test
int3
or
add
jnp
mov
add
and
xor
lea
push
lcall
mov
sub
jb
sub
imul
es
push
js
sbb
jp
mov
cmc
sti
adc
loopne
arpl
into
pop
or
outsl
or
shlb
add
dec
mov
inc
ljmp
in
cmp
mov
jl
or
and
or
jmp
adc
popf
fdivrs
sbb
mov
ficoml
jb
dec
in
repnz
add
imul
lcall
pop
pop
lcall
in
es
or
jns
addb
stc
cmp
mov
pop
sbb
fidivl
pop
pop
fmull
mov
addr16
or
mov
dec
leave
pop
dec
add
inc
dec
cmc
lret
xchg
dec
or
pushw
mov
mov
jo
push
loop
aaa
fwait
andb
add
mov
sahf
sub
xlat
loop
push
mov
lds
push
inc
adc
jns
or
popa
sub
test
loope
adc
sub
add
sbb
and
sub
mov
addr16
or
lds
add
mov
cmc
in
adc
cli
lahf
icebp
nop
jae
adc
mov
mov
inc
icebp
icebp
sub
mov
iret
sbb
lret
cmp
and
mov
sub
popf
add
mov
out
add
xchg
inc
adcb
adcl
test
inc
ret
and
ds
je
decb
xor
popa
nop
sbb
mov
faddl
add
insl
sbb
ljmp
das
lahf
adc
add
inc
inc
xor
xchg
sbb
and
or
cmp
ds
daa
js
inc
pop
inc
pop
mov
lock
dec
lods
pop
adc
add
mov
idivl
or
pop
push
or
int3
daa
rorl
xor
cld
push
cltd
inc
pop
dec
cmpsl
cmp
and
fsubr
mov
add
mov
roll
sub
dec
or
int3
mov
leave
aaa
mov
ljmp
out
and
imul
shl
inc
xor
rcll
sub
repnz
rclb
cwtl
jl
dec
popa
jmp
gs
aad
sub
fs
cmp
bound
mov
mov
scas
mov
dec
push
add
dec
push
add
int3
mov
ja
fsubrs
mov
shlb
lds
adcl
add
push
subb
jbe
or
leave
je
in
scas
add
pop
mov
and
jle
adc
cmp
aad
mov
or
cmpsb
mov
dec
adc
jl
decb
cld
xchg
pop
dec
push
clc
loopne
adc
add
sti
ss
jl
push
loop
stc
dec
mov
cltd
fsubs
inc
outsl
mov
jmp
xchg
loop
add
lret
jmp
pop
mov
shl
pop
cmp
inc
jmp
movl
adc
mov
inc
shrb
sub
push
sbb
adc
jg
cmp
pushf
xchg
mov
or
sbb
je
mov
inc
loop
lahf
sbb
inc
cmp
iret
and
sbb
mov
and
mov
rorl
sub
adc
or
push
push
vphadduwd
call
sub
adc
or
leave
fdivrs
or
dec
call
and
fisubs
sub
xchg
pop
jae
int3
add
jno
or
cmpsb
xchg
or
sahf
daa
pop
aaa
jl
xlat
daa
je
inc
fcoms
dec
push
test
mov
lahf
push
dec
hlt
andb
sbb
sbb
fdivs
cld
cmp
outsl
lret
mov
mov
mov
cmp
cltd
leave
popa
mov
or
mov
movsl
insb
movsl
dec
outsl
call
scas
xor
mov
add
imul
inc
popa
xor
mov
lods
push
mov
add
xor
into
in
inc
add
imul
lret
fldt
pop
cmp
xchg
push
dec
lods
sbb
mov
sbb
scas
call
jge
call
mov
push
ret
hlt
mov
adc
push
popf
or
xchg
cmpsb
sbb
gs
jg
icebp
cmp
fistpll
sahf
std
push
insb
pop
adc
ror
pop
jg
imul
xchg
add
aaa
push
lahf
mov
mov
inc
call
jmp
xor
xor
out
js
push
xchg
pop
push
push
loopne
xor
or
and
roll
pop
je
push
addr16
adc
scas
lods
add
pop
insl
pop
fbstp
das
fs
cld
adc
std
test
mov
xor
lds
adc
sbb
pop
ljmp
popf
inc
and
cmp
mov
cmc
mov
lea
subl
xchg
in
dec
pop
cmpsb
pop
mov
xor
and
mov
and
add
mov
or
ret
fcmovu
negb
pop
or
lods
cs
cmp
pop
mov
call
and
icebp
lods
cmpsl
or
es
data16
jmp
loope
and
add
xchg
fwait
mov
sbb
ret
insl
mov
dec
or
push
test
inc
dec
test
sti
add
in
mov
xchg
pop
cmp
cmc
lods
jmp
popf
jnp
xchg
adc
mov
faddl
outsl
popa
in
enter
dec
test
pop
inc
inc
push
mov
decl
repz
xlat
test
jge
addl
cld
and
add
push
xchg
cmp
mov
popa
inc
icebp
add
in
stos
test
sub
pop
sbb
enter
sti
and
test
add
les
scas
testb
aam
fiadds
and
ja
add
jns
pop
mov
out
das
cmpsl
inc
pop
and
jmp
mov
sbb
daa
paddsw
pop
popf
sub
pop
jmp
sarl
fstl
mov
mov
das
loope
mov
out
cmpsb
loope
sbb
mov
dec
sub
dec
out
loop
loopne
insb
ljmp
pusha
lret
xor
int3
loopne
insb
shll
cmc
mov
cmp
mov
add
push
mov
cmp
push
or
mov
inc
xor
push
lcall
adc
inc
cld
lods
loop
jno
cmpsb
cmp
lret
sub
add
mov
jle
jne
adc
jno
push
push
mov
rorl
push
popa
add
js
pushl
pusha
xor
nop
int3
sbbb
pop
push
lock
and
repnz
add
adc
sbb
stc
push
or
cmc
popa
jmp
mov
cli
sbb
or
in
shll
adc
out
or
inc
aad
xchg
add
in
leave
mov
or
xchg
sub
pop
scas
add
add
mov
mov
add
incl
jae
inc
nop
negl
loop
sbb
xor
cld
cmpsl
rcl
or
jbe
pop
ficoml
mov
daa
pop
nop
pop
xor
movsl
xchg
nop
dec
fstps
mov
sub
pop
daa
jmp
adcb
jp
add
mov
clc
stc
dec
fimull
test
loopne
daa
fldl
mov
pusha
aas
and
std
add
nop
scas
fwait
addl
xchg
test
xor
xor
jbe
push
lret
mov
insl
lcall
lahf
sbb
insl
mov
xor
mov
adc
lock
xchg
outsl
in
popl
jno
add
mov
ss
adc
xchg
in
cmp
movsl
xor
and
out
call
dec
add
sbb
add
mov
movsb
sbb
daa
mov
sub
mov
xor
mov
orl
int
jg
inc
mov
loop
jl
pusha
xor
xor
and
or
jo
loopne
in
cltd
adc
push
jge
out
fstp
sbb
pop
mov
add
mov
mov
ret
les
popf
mov
xchg
and
cwtl
add
mov
fdivs
std
mov
adc
add
mov
jmp
jecxz
lds
lret
xchg
sbb
loope
mov
pop
sbb
and
scas
or
push
sbb
pop
xchg
mov
daa
dec
cmpsb
mov
sbb
fwait
mov
sar
orb
mov
push
jbe
mov
add
add
sub
sub
pusha
das
loopne
mov
or
jecxz
call
jmp
aam
jne
stc
andb
or
and
jo
insl
int
sbb
dec
mov
pop
clc
out
xor
pop
mov
mov
sbb
test
clc
jge
cld
iret
mov
add
mov
sbb
push
jnp
jo
sub
sbb
das
cld
xchg
movsl
loopne
sti
orb
and
add
lods
xor
sub
cmp
add
ds
cmp
inc
leave
jb
push
dec
adc
std
test
mov
test
lcall
cmp
xchg
inc
idivb
xchg
loope
jle
jne
cmp
ljmp
mov
adc
sti
or
mov
fsubs
push
inc
outsl
jnp
add
scas
xor
stc
mov
adc
ja
mov
adc
jmp
mov
xchg
add
jmp
out
daa
nop
cmp
sbb
addb
xchg
sbb
mov
sub
inc
jo
xchg
add
sbb
addb
push
aam
sub
mov
daa
cmpsl
ja
xchg
clc
ds
xor
add
decl
mov
sub
sbb
mov
fists
ficoms
pop
sti
push
pop
cwtl
lods
sti
add
adc
stc
ja
test
rcl
test
rorl
sti
add
dec
in
cli
outsl
stos
add
sub
addr16
rorl
push
fimull
add
mov
xchg
lods
cmp
xor
or
test
push
call
testb
inc
mov
cmp
push
sbb
ljmp
loopne
xchg
push
mov
jno,pt
in
testl
scas
les
push
dec
pusha
repnz
jo
fsubrs
subb
popw
inc
push
inc
gs
adc
into
add
pop
enter
les
sub
lods
pop
pop
mov
jg
dec
or
outsl
mov
mov
mov
and
jge
mov
roll
pop
out
or
and
shrb
fidivs
sub
fistl
inc
std
sbb
sbb
jp
or
popf
int
pop
outsb
lods
mov
cmpb
sbb
mov
push
lret
dec
inc
pop
dec
test
pop
daa
bound
test
imul
aam
aam
adc
mov
push
out
mov
xchg
add
adc
data16
dec
mov
mov
pop
mov
fs
mov
pop
xchg
clc
shrb
cmpsl
aas
cmp
dec
push
shlb
inc
inc
jbe
dec
ret
mov
add
add
pop
pop
adc
cmp
or
adc
notl
push
xlat
xor
ret
fistps
es
push
mov
into
cmp
mov
add
or
adc
sahf
das
adc
jno
xor
das
push
adc
mov
add
imul
push
pop
in
mov
jg
rcr
out
out
mov
xchg
in
pop
cs
in
icebp
scas
add
inc
push
add
mov
popa
das
fdivrp
enter
xlat
test
or
mov
pop
mov
les
dec
sub
and
test
push
push
sub
pop
lock
ljmp
push
adc
cltd
cs
stos
es
sbb
aad
add
cmpl
cmpsb
add
sahf
addl
stos
mov
xchg
bound
push
adc
lret
push
xor
lea
testl
fnsave
test
jb
flds
jo
dec
push
lahf
adc
xor
pusha
or
std
adc
test
pop
popa
popf
mov
pop
pop
fsub
adc
int3
jnp
adc
in
negb
loop
clc
data16
dec
pop
aad
sbb
mov
jbe
mov
add
fbld
sbb
fsubrl
lahf
xchg
adc
and
cmpsb
jecxz
fwait
stos
xor
sbb
mov
lock
lcall
pushf
mov
ds
mov
rolb
shlb
mov
jae
dec
jl
in
xchg
das
cmp
adc
inc
adc
mov
add
je
inc
lahf
add
mov
jne
or
push
scas
cmpsl
fadd
sub
cli
pop
or
push
notl
dec
mov
aam
jmp
jp
aad
and
xorb
dec
push
outsb
sub
mov
ja
sbb
es
xorb
adc
je
fists
add
test
int
push
inc
out
loopne
pop
pop
add
xor
mov
mov
je
jmp
jg
mov
cmc
xlat
inc
mov
sub
ja
test
shrl
clc
imul
rolb
fucom
jns
stc
add
loop
pop
or
rcll
test
cmp
ja
int3
fwait
mov
push
pop
iret
sub
les
pop
repz
push
sbb
jmp
jb
jne
sti
loope
repz
mov
loopne
and
in
stos
and
rdpmc
adc
rcr
dec
mov
xchg
hlt
scas
faddl
ss
add
ja
pop
popf
add
test
mov
jmp
xchg
aaa
outsb
add
mov
imull
out
rcrl
dec
cltd
icebp
pusha
add
cwtl
enter
lret
movsb
lock
sub
aam
xor
fisttps
jecxz
dec
scas
sub
scas
mov
rcll
pop
nop
mov
cltd
adc
in
shl
dec
lods
pop
jmp
cmp
test
mov
mov
repz
push
jge
cmp
jnp
mov
addl
std
lock
dec
lods
imul
or
jmp
dec
pop
out
or
add
mov
pushf
mov
scas
xlat
cmpsb
xchg
movsb
and
gs
div
jnp
shl
push
xorb
pop
mov
psubb
or
das
pop
add
imul
add
jmp
jbe
out
aas
pushfw
les
adc
aas
jl
pop
add
call
movsb
xchg
inc
movsb
jo
loope
outsl
adc
push
xchg
and
scas
add
stos
push
mov
pop
nop
pusha
inc
inc
add
dec
add
stc
xor
outsb
or
xchg
aad
inc
popa
out
popf
je
inc
sub
sub
into
sbb
rcrb
movsl
adc
nop
mov
loopne
mov
sub
mov
cmp
jmp
add
adc
or
ja
jno
inc
jg
imul
fcom
pop
mov
clc
leave
or
push
mov
ja
adc
sbb
adc
or
sub
ljmp
scas
add
rolb
inc
fildl
mov
dec
ds
test
pop
imull
jno
sar
cmp
das
add
movsb
dec
or
lret
cmpsb
ds
test
jno
pop
xchg
push
add
push
jnp
inc
or
mov
daa
stos
jmp
mov
cmp
fidivrs
adc
push
shrb
or
std
xchg
and
pop
push
xchg
push
stc
enter
sbb
mov
aas
ds
add
std
and
popa
sbb
popf
cwtl
fisttpll
mov
aaa
and
xlat
sahf
fistl
dec
lods
test
mov
and
fs
mov
jo
xchg
pop
xor
mov
test
pop
rorb
clc
sub
ljmp
lcall
xchg
das
popa
out
and
clc
ljmp
idiv
dec
lods
test
mov
in
lahf
or
pop
sub
mov
into
mov
dec
add
jmp
cmp
ljmp
dec
pop
mov
or
insl
std
pusha
popa
gs
sbb
sub
ret
and
nop
add
jl
aas
mov
cld
push
test
outsb
mov
shr
xchg
sbb
pcmpeqd
aad
shll
adc
and
das
fnsave
pop
lret
xchg
or
dec
lea
adc
adc
nop
movsl
adc
cld
fld
mov
push
xor
adc
adc
adc
std
push
in
in
loopne
mov
pusha
jle
push
adcb
or
mov
lcall
mov
inc
sbb
pcmpeqb
mov
push
jnp
mov
or
jle
cmp
mov
xchg
cld
outsl
xor
mov
out
and
lcall
cld
popf
push
dec
fdivp
inc
loopne
add
push
mov
dec
and
add
loopne
mov
js
daa
xchg
mov
mov
mov
daa
mov
test
sub
stc
mov
adc
cltd
or
outsb
dec
ljmp
fs
popf
xchg
xchg
cmpb
popf
xchg
inc
imul
dec
push
gs
aaa
fstpl
mov
xchg
in
add
ds
outsb
fadd
xchg
push
loope
inc
jo
mov
cmp
pop
push
mov
popa
out
sbb
inc
aad
sbb
pusha
fcomip
loope
push
mov
sbb
dec
pop
les
loope
and
lcall
add
cmp
idivl
xchg
call
pop
dec
outsb
xchg
jo
out
insb
jle
jmp
inc
and
add
xchg
and
mov
sbb
adc
pusha
or
push
add
popa
cli
fisubrl
and
dec
andl
lahf
jns
imul
push
fimuls
das
nop
pusha
jl
imul
mov
mov
scas
das
nop
in
cmp
adc
popf
fsub
in
and
stc
jno
push
adc
call
aam
loopne
xor
notb
inc
dec
jl
adc
sbb
or
inc
out
mov
je
push
pop
cmp
dec
cli
cs
inc
iret
and
sbb
xchg
jnp
fs
addr16
push
mov
jge
or
xor
sub
dec
adc
and
jnp
mov
mov
mov
pop
xchg
test
sbb
jno
adc
cmp
das
or
push
push
movsb
mov
adc
add
or
jbe
dec
mov
add
scas
pop
test
cmp
push
sbb
cmp
sub
xchg
and
mov
mov
xchg
adc
test
sbb
inc
add
test
adc
mov
fnsave
pushf
into
mov
xchg
mov
jbe
dec
pop
hlt
adc
lret
call
push
xor
push
insl
push
jnp
add
lea
test
clc
push
adc
shrl
fwait
addb
cli
mov
jns
sbb
les
cld
xlat
add
rcrb
int
shlb
dec
add
aad
iret
lock
or
sub
nop
aam
push
loope
jecxz
add
mov
in
movsl
ret
fiadds
inc
daa
shl
outsb
test
mov
movsl
dec
nop
add
gs
imul
pop
add
stc
pop
popa
mov
pop
mov
xchg
ret
adc
or
adc
jmp
adc
mov
jnp
cmp
jp
sahf
arpl
daa
jg
add
cmp
pop
xor
cmp
push
add
add
ljmp
or
sub
in
adc
popf
add
cli
or
pop
enter
jle
and
adc
or
sbb
faddp
dec
fisubrl
movsl
rol
pop
push
or
bound
imul
fildl
inc
mov
leave
aam
jmp
mov
insb
xchg
xlat
mov
sbb
loop
xchg
scas
xor
push
mov
cmp
push
mov
xchg
shl
add
dec
sub
loope
push
xor
loop
inc
dec
aas
shlb
ret
adc
es
pop
dec
mov
fistps
push
pusha
fisubrl
test
addr16
adc
mov
test
sub
lret
rcrb
fs
subb
adc
dec
and
int3
pop
add
inc
and
sbb
adc
xor
mov
cmp
push
push
sub
xor
dec
cmpb
jo
sbb
mov
in
cmc
and
lea
or
mov
xor
insl
xor
cmp
or
lcall
shrb
xchg
mov
jne
test
xlat
mov
mov
rclb
xchg
sbb
jp
cs
mov
mov
add
dec
sub
xor
subl
inc
push
mov
notl
lret
adc
mov
mov
lret
fiaddl
ficoml
ss
das
adc
movsl
pop
addr16
adc
adc
add
dec
dec
popa
xor
es
cmp
insl
mov
cmpb
jnp
pop
dec
jo
aaa
sbb
add
adc
adc
pusha
and
enter
push
out
rcll
std
fcmove
icebp
xor
mov
test
adc
test
jp
add
das
mov
pop
test
jns
movsb
stos
pushf
sub
rolb
add
adc
sahf
testb
or
dec
jle
das
sti
js
mov
jge
or
xor
popa
fnsave
test
mov
pop
enter
test
pop
add
es
pusha
lods
and
add
jbe
jmp
nop
cs
fbld
fcomps
add
jecxz
les
mov
aam
add
ror
mov
or
test
and
xor
mov
les
xchg
xor
aam
popa
xor
and
outsb
nop
sub
leave
cmp
shlb
pop
mov
and
jo
loop
daa
std
sub
sub
das
push
sbb
pop
lcall
idiv
mov
or
xor
shl
mov
les
pop
stos
mov
inc
push
and
icebp
push
add
push
push
sbb
inc
mov
imul
scas
mov
jge
mov
int3
arpl
sbb
fisttpll
out
into
popa
or
add
sbb
push
mov
rcrl
cltd
pop
xchg
mov
dec
mov
adc
ss
inc
sub
and
stos
and
or
add
add
mov
fdivs
push
add
ds
or
pop
add
ss
stos
mov
and
out
cmp
nop
std
cmp
popf
lds
sbb
and
xchg
or
shrl
sub
sbb
fwait
rorl
adc
ds
inc
pushf
nop
or
xchg
sub
mov
insl
lcall
push
call
out
mov
pop
mov
inc
sub
inc
push
int
ror
mov
adc
adc
call
mov
inc
testb
out
pusha
lret
popa
mov
inc
mov
stos
sub
adc
hlt
fstpl
shlb
or
inc
daa
fmull
fcoms
fnstsw
adc
stos
inc
push
pusha
mov
add
mov
add
sub
xchg
test
mov
cs
test
rol
mov
push
add
dec
leave
decl
sub
test
out
mov
mov
mov
push
dec
push
and
add
cltd
dec
andl
pop
mov
into
add
add
sarb
xor
jmp
add
sarl
loop
and
nop
jb
mov
pop
mov
push
loop,pn
roll
mov
jno
cmpsl
mov
inc
add
xchg
fstp
xor
je
cmpl
je
gs
cli
xor
dec
adc
adc
scas
idivb
adc
stos
pop
ljmp
adc
mov
pop
cmpsb
ja
adc
jno
add
repz
mov
or
add
adc
dec
cmp
mov
or
fildl
pushf
sbb
bound
mov
cltd
loopne
scas
stc
outsl
or
mov
sbb
xchg
dec
fistl
xchg
xchg
inc
push
lock
pop
bound
add
and
les
inc
ss
dec
into
or
faddl
subl
xor
pop
sub
sub
push
xchg
std
in
sbb
negl
and
pop
inc
xor
pop
loope
pop
or
test
adc
movsl
xor
mov
and
mov
es
mov
aad
mov
add
movsl
mov
pop
jo
add
stos
shll
dec
cmpsl
testl
add
scas
mov
adc
in
xor
std
xchg
jo
fnclex
mov
neg
jl
add
aam
jbe
sub
stos
dec
adc
jle
xchg
int3
sub
add
mov
jbe
mov
dec
fs
test
xor
divl
pop
mov
ds
mov
xor
sbb
pop
pop
cltd
push
mull
add
stos
rolb
and
sub
pop
mov
or
mov
daa
or
add
push
pop
incl
inc
xchg
js
xlat
movsl
out
lret
scas
push
push
js
bound
iret
sub
push
inc
pusha
mov
fcompl
cld
stos
lea
sbb
mov
adc
sbb
mov
data16
lods
sbb
cmc
int
push
pop
roll
cmpb
test
fisubrs
lret
gs
jge
or
fimull
ja
rcr
xor
mov
mov
dec
fwait
outsl
ret
gs
or
out
js
in
ss
jg
xchg
jo
add
inc
cmpsl
mov
push
faddl
sbb
sbbb
lock
xor
test
add
xor
lcall
jp
ror
add
dec
pop
int
inc
mov
pop
xor
mov
pushl
cmp
or
inc
mov
shlb
push
or
pop
lods
or
aad
dec
sbb
xor
jmp
das
mov
popa
negl
das
dec
jp
dec
fcomps
add
leave
sbb
xor
jmp
add
shr
daa
xor
icebp
adc
add
imul
jne
cli
xor
mov
xchg
int3
nop
ds
popa
mov
sbb
add
int
jecxz
pop
lock
int
push
flds
aaa
add
cli
mov
cmc
int3
adc
addb
xor
sub
jnp
jo
cmc
mov
pop
cmp
test
sbb
pusha
cmc
xlat
insb
push
cmp
cld
push
mov
in
push
add
cs
popf
adc
jg
jmp
aam
bsf
xchg
cmc
aam
xor
inc
imul
xchg
jmp
pop
jne
xchg
push
pop
into
push
or
test
jno
mov
daa
mov
mov
gs
mov
push
lds
subb
mov
cmp
fstpl
cltd
jecxz
imul
neg
adc
pop
cs
jnp
and
pop
cmp
rcrl
xor
add
jl
sub
push
mov
scas
jo
mov
mov
adc
test
mov
call
das
lods
adc
push
push
jnp
std
ljmp
pusha
sub
push
xchg
mov
push
jne
sub
add
pop
add
sub
stos
xor
push
lds
xchg
adc
lods
fstpl
cs
dec
mov
xchg
in
xor
xchg
popf
push
pop
add
push
orb
andb
push
aad
bound
or
test
and
in
and
ljmp
dec
imul
mov
inc
lahf
push
fs
cmpsb
dec
or
or
pop
mov
lahf
xchg
xchg
pushf
inc
pop
add
aad
mov
divb
mov
stc
in
mov
loope
es
ror
stos
add
out
mov
icebp
sub
add
jo
mov
sbb
or
sbb
add
nop
fildll
or
jmp
mov
dec
lret
fs
xchg
xchg
mov
addr16
inc
jg
dec
or
nop
jl
pusha
jno
pop
call
mov
sti
xor
sbb
data16
sub
push
mov
dec
aaa
mov
jl
addr16
js
shlb
lea
mov
dec
mov
int3
mov
lahf
xchg
pusha
mov
movsl
or
popf
jae
xchg
cmp
nop
int
lret
jge
pop
out
pop
testl
fidivrs
cmp
add
jmp
dec
fxch
mov
incb
aad
arpl
add
cmp
bound
jge
pop
js
rorb
je
rcrb
jnp
js
in
push
adc
add
sbb
cmpsl
lock
sub
ja
and
je
cmp
fdivl
or
or
and
mov
inc
mov
or
add
mov
sub
aas
in
mov
iret
push
sbb
shl
test
sub
pop
sbb
aas
bound
divl
cmp
cld
sbb
inc
lods
jb
popf
pushf
sbb
rorl
mov
int
imul
je
call
cmp
and
dec
mov
mov
add
jmp
sbb
pushf
pop
and
sbb
jbe
inc
inc
insl
push
sub
dec
int
dec
jmp
repz
xor
loopne
rorl
mov
or
dec
fiaddl
loop
aaa
push
mov
das
cwtl
cmpsb
cmp
icebp
push
sbb
inc
mov
push
and
jg
cmp
aam
out
je
adcl
jo
or
or
jno
mov
imul
lods
xor
lds
or
fucomp
sub
mov
push
fucomi
rcl
cmp
ljmp
movsl
jnp
mov
push
xchg
enter
cs
and
adc
pop
std
jo
dec
inc
jbe
movl
xchg
adc
mov
daa
dec
mov
jb
lods
push
stos
jno
adc
and
jbe
pop
push
inc
or
sub
stos
movsl
push
arpl
in
pop
xor
in
sbb
mov
push
test
lods
mov
call
out
and
out
repz
test
lahf
rol
sub
add
dec
mov
leave
adc
sti
outsl
push
add
xor
subb
adc
dec
or
push
push
adc
dec
ret
and
cld
fwait
jmp
movsb
enter
inc
in
xorb
in
xchg
int3
arpl
insb
int
add
sarb
popa
in
mov
cli
pop
mov
fisttpll
int
enter
stc
push
and
mov
and
xor
cmp
mov
addl
cwtl
mov
in
pusha
daa
inc
lret
adc
insb
xchg
push
add
js
ret
lds
test
inc
lds
fildll
jg
mov
add
fistl
roll
nop
jb
push
xchg
lds
rol
pop
daa
push
xor
jae
jno
inc
ds
dec
lret
and
and
fnstenv
loope
sub
sub
subb
cli
sub
jge,pn
or
pop
push
stos
dec
lea
xchg
fmull
cmp
nop
ljmp
adc
mov
xor
or
jne
cli
rol
nop
jg
and
xor
or
mov
push
shlb
les
push
decb
pusha
aad
mov
lock
repz
lret
or
jae
sub
nop
add
arpl
loopne
sti
push
and
pop
repz
or
fwait
stos
jbe
sub
cmc
in
movsb
inc
das
hlt
popa
push
inc
pop
sub
ljmp
push
mov
subb
lock
add
lea
push
sbb
std
pop
fs
addl
test
add
mov
ja
fwait
push
hlt
enter
loop
popa
xchg
xor
mov
cs
pusha
nop
mov
psllw
cmpsb
sub
test
inc
dec
push
ljmp
sub
pop
repnz
xchg
mov
and
mov
stos
cltd
sbb
adc
pop
xchg
pop
int
mov
aam
scas
adc
in
cmp
lret
andl
xchg
xchg
mov
push
sbb
mov
dec
jne
mov
movsb
out
mov
cmc
adc
mov
subb
stos
hlt
movsl
dec
inc
ja
je
clc
mov
push
push
pusha
ja
push
ja
icebp
push
loop
mov
or
sub
push
mov
xor
mov
fildl
jne
lods
add
out
mov
xchg
or
xor
out
cmp
add
and
sti
mov
cmc
icebp
and
dec
mov
mov
fdivrl
push
ljmp
push
cmpsl
repnz
stc
sbb
inc
sbb
push
mov
lcall
data16
mov
ja
pop
sbb
jmp
lret
sub
mov
or
jle
fsubl
adc
jnp
das
jbe
loope
push
das
imul
movsb
stos
add
inc
insb
push
sbb
or
movsb
push
in
fs
cmp
mov
mov
mov
xor
inc
add
data16
lret
and
push
out
mov
xchg
push
jle
dec
jg
and
sub
push
movsb
or
pop
pop
xchg
mov
shl
mov
adc
add
jo
fnstsw
ja
mov
lahf
jno
xchg
mov
add
test
int
and
ret
mov
adc
inc
das
cli
imull
clc
adc
pusha
jge
xor
sub
cmp
mov
pusha
out
pop
add
push
xchg
lcall
fcmovnbe
pop
jmp
push
cmp
loope
jmp
push
adc
loopne
ret
sbb
fistps
ret
fidivs
push
jae
add
aas
pop
mov
push
mov
mov
pop
in
stos
test
xor
subb
imul
sbb
es
xor
adc
fisubrl
shl
sub
mov
sub
adc
jne
inc
imul
adc
mov
daa
add
cmp
arpl
jmp
mov
or
ds
loop
frstor
mov
shl
imul
insl
les
clc
sbb
das
sub
push
and
mov
dec
stos
sub
mov
std
imul
mov
dec
arpl
and
es
add
adc
out
das
xor
pusha
cwtl
ret
jmp
das
sub
jb
mov
or
mov
sbb
adc
sub
push
pop
jg
add
xchg
loop
mov
sbb
popf
inc
popa
pop
cmp
test
jmp
add
popf
frstor
fstpl
orl
pop
jge
adc
xor
hlt
dec
inc
loope
pop
pusha
pop
in
add
pop
cmp
xor
popa
add
in
adc
into
rcrb
push
lods
push
mov
push
movsb
lods
push
gs
test
add
popa
fidivs
bound
rcrl
jp
jns
and
addr16
nop
fdivl
test
in
dec
push
pop
movsl
and
adc
imull
loop
rcl
push
fstpl
pop
adc
mov
test
mov
mov
fidivs
xchg
or
mov
xchg
fstps
lods
xchg
fimull
je
pop
xor
add
mov
push
sti
jmp
je
stos
sbb
fcompl
xchg
movsb
incb
push
dec
add
mov
pop
nop
mov
add
or
je
fimuls
in
sar
dec
mov
les
mov
mov
fisttpll
add
ror
test
add
enter
fucomi
xchg
fcoms
push
lods
adc
add
mov
pop
mulb
outsl
add
dec
xor
adc
fidivrl
xor
and
jnp
push
testb
and
nop
jl
pusha
xlat
int3
sbb
jbe
ret
dec
xorl
pop
ficoml
sub
jg
sub
adc
pop
sub
mov
adc
out
and
inc
add
repnz
sub
shrl
mov
aam
adc
mov
notl
mov
inc
add
xchg
test
fdivr
xchg
add
fldcw
sub
cld
mov
outsl
addr16
jmp
divl
es
adc
icebp
maskmovq
negl
mov
rorb
sub
outsl
cmp
sbb
loop
and
push
and
mov
lcall
test
mov
nop
shlb
cmp
push
cmp
push
xchg
adc
or
add
mov
popa
idivb
cld
sbb
jle
dec
ret
loopne
lea
xchg
sti
je
adc
cmp
mov
adc
mov
lock
sub
and
fistpll
or
std
and
inc
fidivl
movsb
add
push
push
dec
or
and
mov
jl
mov
pop
add
popf
std
adc
and
ds
and
inc
adc
sub
push
and
sbb
cmpsl
xchg
mov
jp
jns
add
mov
push
out
push
sbb
fildll
out
jmp
ret
jmp
mov
xchg
adc
inc
sub
inc
mov
jo
dec
mov
subl
xchg
or
mov
shlb
iret
add
mov
or
mov
pop
inc
cwtl
mov
fisubrs
out
inc
js
aam
mov
icebp
adc
outsb
inc
add
mov
rorl
adc
mov
or
push
cmp
jge
and
cmp
mov
dec
push
pop
push
jno
mov
jecxz
insl
arpl
outsl
add
push
mov
test
ret
jg
push
mov
imul
dec
dec
push
lods
jg
add
xchg
lea
dec
aad
cli
test
imul
xchg
mov
push
cmc
xor
iret
or
dec
rclb
nop
daa
mov
dec
adcl
subl
aam
shlb
mov
imul
cmp
shl
pop
sub
pop
add
pusha
push
pop
mov
addr16
xchg
out
mov
mov
inc
sbb
shll
sti
jno
pusha
mov
mov
test
dec
stc
dec
call
push
adc
xchg
add
jmp
xor
dec
xor
orl
cmp
jg
stc
scas
lds
and
jne
push
lds
pop
rcrl
push
pop
mov
mov
scas
dec
in
adc
and
pusha
in
dec
ret
xlat
adcl
fisttpl
pop
pop
dec
mov
or
adc
mov
cmp
inc
test
stc
or
adc
add
push
xor
push
add
leave
loope
out
add
cmp
test
inc
loop
rcrl
or
aad
dec
inc
xchg
mov
mov
arpl
lods
jno
add
data16
sbb
mov
fmull
mov
ror
mov
popf
and
and
nop
add
cld
mov
aad
and
js
xor
sbb
mov
popf
or
jmp
shlb
fadds
add
pop
je
pusha
pusha
mov
pop
push
pop
popa
pop
ret
mov
test
leave
push
clc
cltd
insl
outsb
mov
leave
insl
and
movsb
or
pop
sub
push
xor
nop
stos
dec
and
decl
out
jns
adc
xor
pop
mov
jmp
aad
loop
adc
xlat
xchg
and
dec
xlat
popa
fdivrs
testl
arpl
pop
sub
int3
xchg
adcl
pusha
xchg
out
rclb
push
and
call
add
in
pop
cmp
jne
fstpl
mov
std
add
popa
pusha
mov
enter
ja
cmp
mov
cmpsb
das
clc
outsb
add
in
repz
pop
xchg
addr16
inc
mov
jns
orb
dec
pop
das
cmp
out
and
sub
rolb
jnp
and
ja
ret
mov
add
fistpl
stos
xor
mov
fidivrs
nop
cvtpi2ps
aas
rcrl
sub
mov
jecxz
gs
pusha
push
pop
mov
popa
nop
pusha
jp
mov
orb
negb
push
cld
pop
loop
dec
stc
mov
xchg
mov
sbb
sti
fnstsw
fisubs
jge
das
sub
mov
xor
xlat
repnz
dec
stos
cmp
das
mov
in
add
test
or
sub
in
push
inc
inc
xor
cmp
mov
mov
aad
mov
jmp
test
mov
cli
fmuls
jb
lea
icebp
pop
sub
jge
add
jge
pop
mov
mov
iret
sarl
out
in
bound
hlt
inc
pusha
dec
out
add
int
insb
cmp
mov
sub
enter
or
rolb
fs
fwait
sarb
push
iret
pop
je
ret
adc
shlb
cmp
xchg
stos
add
out
mov
xor
test
or
and
mov
pop
lahf
sbb
pop
cli
notl
mov
xlat
adc
das
scas
dec
pop
ret
xor
push
mov
cmc
jle
stos
popa
push
xor
cmpsb
enter
sarl
lods
mov
xchg
pusha
cli
mov
pop
inc
pop
dec
fsubr
jnp
test
mov
adc
lcall
sub
std
mov
pop
in
pusha
sbb
leave
xchg
fcmovnb
pop
sbb
mov
out
sub
es
xchg
sti
std
mov
mov
shrl
jg
daa
add
mov
and
and
push
jb
or
sub
sub
scas
fldt
rcrl
cli
xchg
and
and
jge
scas
add
pop
mov
fwait
es
unpcklps
das
jns
sub
jbe
mov
dec
adc
fildl
cmpsb
jmp
lahf
jno
or
dec
mov
mov
sbb
jmp
xchg
push
gs
jle
mov
lock
or
jmp
sub
lahf
cld
add
mov
repz
sti
in
outsl
sub
sbb
push
std
out
xchg
add
loope
add
jmp
dec
movsl
sbb
test
arpl
out
add
mov
sbb
dec
test
dec
cmpsb
add
mov
cmp
sub
insb
add
into
addr16
mov
add
xor
add
mov
enter
jb
sbb
xchg
push
je
aad
js
rcrl
sub
loop
mov
enter
mov
jb
push
mov
cmpsl
add
or
jb
add
jp
cs
or
add
mov
cwtl
xor
movsl
fcomp
or
cmp
aad
jae
add
cs
dec
fstp
orl
andps
pushf
add
gs
push
push
rorb
mov
test
loop
mov
or
fmuls
cld
incl
stos
cmp
aaa
ss
pop
sbb
lods
in
inc
sbb
lcall
xchg
xorb
int3
pop
mov
xor
fdivs
mov
sbbl
cmpsb
out
movsb
jo
fildl
cltd
lock
xchg
xor
xchg
mov
pop
popf
dec
add
inc
add
add
ljmp
inc
sub
cmpsb
nop
test
add
mov
adc
and
sbb
mov
adc
adc
fucomp
dec
hlt
outsb
jge
shlb
notb
out
scas
sbb
xchg
stos
inc
dec
mov
sbb
cmp
cmp
or
fisttps
pop
fdivs
shlb
je
dec
mov
inc
or
rcll
push
cmpsb
mov
mov
jbe
sub
ljmp
dec
ds
sbb
push
iret
insb
int3
jg
or
xchg
data16
insl
adcl
loope
add
add
dec
push
mov
mov
add
cmp
jmp
ficoml
into
and
add
rorl
scas
imul
push
cmpsl
push
add
call
insl
sbb
pop
push
insb
cmpl
mov
cmp
mov
test
pushf
add
pop
dec
jne
cmp
iret
ss
xor
mov
pop
mov
dec
rolb
inc
ror
xchg
ret
pop
test
and
add
gs
ss
inc
cmp
scas
inc
ja
dec
insb
stos
add
fadd
xchg
mov
cmp
pop
cwtl
add
addr16
call
jle
mov
xchg
pop
sbb
sub
js
shrb
fs
sbb
cmp
sub
test
loope
mov
sub
jle
inc
dec
push
xlat
push
lcall
jg
or
pop
pushf
fnstcw
add
xorl
add
sub
ja
adc
or
dec
or
imul
mov
ret
sub
or
mov
cli
jb
mov
and
mov
push
add
xlat
mov
dec
pushf
pop
aam
push
dec
in
andb
dec
pop
inc
mov
stos
mov
enter
lret
push
aas
cmpb
adc
pop
adc
xchg
push
jbe
sbb
add
test
or
add
mov
jp
pop
popa
cmc
fcmove
and
add
loope
and
sub
add
shrb
in
xchg
add
iret
inc
mov
add
xor
or
add
cmp
jno
es
add
ja
mov
call
push
cmp
outsb
pop
xlat
add
and
fnstcw
test
jae
lock
sub
mov
push
sbb
sub
or
imul
arpl
lret
mov
xor
dec
dec
or
add
ds
andl
shlb
ficoms
xor
sub
mov
or
stos
jbe
jo
cmp
into
incb
hlt
stc
add
outsb
call
rolb
xor
pop
jns
jl
sbb
add
fnstsw
loopne
inc
xchg
cmp
rorb
push
sbb
pop
mov
xor
add
pop
dec
mov
inc
mov
pushl
ret
clc
ss
xchg
pop
js
xor
mov
sbb
pop
pop
movl
pushw
mov
repz
xor
pop
dec
in
mov
push
sub
gs
pop
adc
add
fucomi
jg
in
mov
or
movsl
or
enter
pop
mov
inc
xchg
xor
adc
mov
jo
call
pop
call
jg
or
enter
pop
and
in
loop
push
test
shll
dec
bound
jp
cmp
jmp
add
std
lcall
mov
or
xchg
inc
mov
add
adc
xchg
in
or
popa
std
push
xor
dec
pop
enter
and
or
rcr
inc
jno
pop
jno
enter
sbb
imul
pop
test
pop
mov
xor
nop
add
insb
inc
xchg
popa
lcall
and
loope
ret
lahf
int3
insb
sbb
mov
inc
xor
fidivrl
add
out
sarl
jo
cltd
or
aad
ret
add
xor
iret
repz
rclb
mov
add
sbb
jge
dec
lcall
pop
add
adc
sbb
sub
xchg
cmp
popa
ja
leave
push
mov
xchg
sub
cmp
movsb
add
ret
sbbl
repnz
fbld
and
mov
clc
dec
fwait
cmp
or
out
pop
out
mov
add
aas
shl
or
pop
or
push
jmp
gs
arpl
add
fcompl
pop
mov
pop
or
roll
scas
inc
int
xchg
dec
xor
sbb
ds
adc
pop
xchg
and
and
lods
loopne
adc
pushf
imul
add
adc
out
enter
mov
cs
or
lret
add
xchg
jnp
xchg
fisttps
jne
dec
rol
insl
xchg
ret
subl
sub
mov
dec
inc
push
add
mov
sub
sub
sbb
int
call
dec
add
into
sbb
sub
mov
push
xchg
xlat
add
push
cwtl
xchg
adc
in
hlt
repz
fstl
and
setne
popf
and
add
jg
ja
and
test
dec
fnstsw
mov
cmp
addb
dec
mov
sub
xlat
adc
aad
xlat
jns
add
inc
cmc
out
and
mov
adc
loopne
mov
mov
mov
pop
outsl
xor
popa
add
insl
fimuls
mov
jecxz
xchg
jb
add
mov
and
pop
sub
dec
push
add
add
inc
gs
lds
test
iret
pop
xchg
ret
arpl
or
negb
loop
sarl
push
adc
pop
push
add
xor
xchg
push
lahf
mov
dec
orl
loopne
scas
adcb
sbb
jg
mov
mov
mov
shlb
outsl
or
lcall
imul
rolb
add
mov
add
inc
mov
divl
xchg
add
cwtl
mov
pop
sbb
jbe
push
mov
in
sbb
pop
xchg
mov
and
roll
ljmp
les
sbb
mov
test
pop
or
xor
inc
jg
add
aam
pop
add
ss
add
out
xchg
iret
pop
xchg
jae
add
ds
popf
std
mov
dec
cmp
invd
orb
mov
inc
jns
ja
fs
faddl
xor
lock
lret
or
loope
mov
add
mov
outsb
test
mov
sbbl
pop
push
bound
add
push
in
lea
shrl
xlat
dec
push
xchg
mov
mov
cwtl
jo
pop
add
pop
shrb
add
loope
ds
adc
add
in
inc
stos
add
les
scas
dec
jmp
xchg
add
push
int
lea
movsl
jp
jl
cmp
sbb
subb
rclb
lock
jb
pop
jne
push
mov
adc
loopne
sti
insb
std
cmp
sbb
add
jnp
sub
lret
ljmp
test
stc
pusha
into
cltd
stc
add
rcrb
fst
push
xchg
pop
jns
add
jecxz
mov
pushl
aas
pop
mov
adcl
xor
and
jae
inc
cmpsl
dec
enter
std
ja
jg
sub
push
rorl
xor
mov
fs
inc
and
pop
ljmp
or
cmp
gs
dec
mov
mov
das
ljmp
das
xchg
jmp
push
push
and
cmp
sub
lea
or
adc
add
mov
lods
pop
lret
js
or
popf
sbb
add
push
jno
adc
bound
mov
or
cmp
lds
push
hlt
xchg
orl
and
jnp
pop
andl
inc
or
mov
test
pop
sbb
inc
nop
mov
and
shrl
or
call
in
add
sbb
mov
out
fstps
popa
mov
xchg
in
sbb
mov
adc
sub
loop
lahf
loopne
xchg
pushl
pop
xorl
out
xchg
sub
ror
dec
test
xchg
add
nop
pop
popa
stc
add
in
sub
iret
incb
push
mov
lods
je
xor
shlb
sub
add
pop
jo
test
add
les
icebp
sbb
jne
xor
sub
pop
in
add
inc
test
lret
or
pop
pop
aam
test
cs
sub
cmp
xchg
add
jns
mov
nop
and
jge
inc
add
push
fwait
pop
add
loope
es
fucompp
pop
std
insb
add
inc
mov
and
xorb
push
nop
cmpl
ljmp
test
in
jnp
jo
popf
dec
movsl
out
inc
inc
dec
int
inc
sub
or
dec
mov
sbb
or
lcall
pop
fs
jp
or
sbb
jno
and
jae
icebp
pop
mov
sub
cmp
data16
dec
push
mov
scas
mov
gs
in
mov
jno
dec
add
daa
or
notb
pop
mov
pop
and
verr
mov
mov
std
add
ja
orb
popf
and
divb
movb
pop
call
decb
popf
fnstcw
js
xor
jmp
daa
jmp
das
das
ds
mov
notb
cmp
mov
loop
inc
jne
fsubs
push
or
shll
fmull
dec
subl
mov
sub
jecxz
in
jmp
mov
ss
repnz
loope
in
push
jbe
insl
add
push
cmp
imul
pop
xchg
push
aas
sbb
call
into
sub
cltd
adc
jmp
leave
push
mov
in
lahf
ret
jle
inc
outsl
insb
and
repnz
xchg
dec
adc
testb
pop
ljmp
or
add
add
and
sbb
repz
and
dec
pop
add
add
jnp
mov
push
sbb
lahf
xor
mov
jmp
pop
in
mov
cld
cmp
dec
xchg
in
inc
and
pop
das
lock
std
aas
jp
add
lds
js
mov
rcl
das
jl
jb
mov
out
jo
xor
jno
mov
sub
push
ficoms
enter
push
das
movsl
es
mov
mov
cmp
fadd
or
inc
cld
cmp
mov
sbb
pop
cmp
mov
mov
fstpl
add
push
clc
xor
push
inc
dec
xor
mov
xlat
mov
test
cmpsl
jne
xchg
add
fdivs
fsub
movsl
neg
add
stos
insb
iret
scas
lods
jp
jns
dec
dec
dec
jge
or
scas
movsl
xchg
ja
xchg
std
fs
push
dec
call
int3
add
jb
pop
test
jne
pop
cmc
ljmp
sbb
or
into
aad
lods
xchg
and
push
int3
sub
cli
push
xchg
push
sub
and
lret
sbb
cmp
rclb
jno
push
sub
test
mov
fsts
inc
popa
adc
sbb
mov
decl
pusha
out
idivb
sahf
adc
jp
add
cmp
xchg
outsb
adc
in
stc
mov
mov
add
add
or
push
add
pop
lods
inc
sti
push
adc
jb
add
leave
mov
cld
mov
adc
mov
pop
andl
fisubrs
pop
shl
xor
addb
push
cmpsb
pop
add
fistl
pop
pop
mov
mov
mov
mov
cmp
cmc
xor
ja
push
jo
lahf
jnp
popa
imul
in
pop
daa
sti
ja
jns
inc
add
outsb
out
faddl
inc
pop
mov
and
cltd
in
adc
add
sub
inc
pop
mov
mov
sbb
test
loope
mov
loopne
stc
push
sub
lods
scas
sub
shlb
jl
add
cltd
cmp
out
jle
add
mov
cmc
mov
inc
add
sbb
test
clc
lods
mov
call
jno
pop
and
lret
mov
jp
daa
pusha
pop
iret
inc
inc
orw
leave
push
ss
push
inc
xlat
sub
rol
test
ret
cld
dec
leave
sbb
jl
add
or
orl
mov
loope
xchg
pop
test
push
frstor
xor
add
out
out
pop
pop
or
flds
aas
call
mov
enter
sbb
lods
imul
ret
cld
dec
adc
repz
stc
test
icebp
cmpsb
icebp
pusha
cmpsl
inc
push
mov
daa
push
aad
add
ljmp
xlat
add
fadds
adc
sub
sub
call
fwait
shll
mov
mov
rcr
jp
dec
pop
xor
out
mov
not
jns
dec
flds
cmp
cwtl
aad
test
mov
jg
repnz
cmp
mov
outsb
xor
gs
dec
mov
pop
pop
sub
in
add
lea
sub
insb
pop
pop
pop
jg
xchg
xchg
sbb
push
sub
push
sub
or
sbb
sahf
rol
pop
hlt
xchg
cs
jmp
mov
dec
mul
dec
mov
adc
mov
mov
cmp
fnstsw
mov
xchg
sbb
iret
fwait
mov
cli
les
sbb
jp
lret
mov
inc
iret
clc
test
add
das
fstl
sbb
mov
stc
mov
push
mov
in
repnz
push
xchg
decb
adc
sub
add
inc
add
xchg
jo
push
xchg
je
pusha
icebp
lret
push
movsb
add
dec
push
aad
mov
mov
and
pusha
add
jbe
or
mov
adc
sub
jg
fadd
jb
sahf
ret
stc
add
pop
cld
mov
pop
add
push
xor
cmp
push
cmp
cmp
xorl
mov
pop
mov
mov
adc
movsl
clc
adc
ds
sub
xchg
ret
pop
mov
call
arpl
mov
mov
mov
subb
add
test
push
mov
filds
cmpb
in
mov
ret
dec
stc
push
jno
xchg
pop
mov
sbb
mov
sub
adc
test
loopne
out
jo
loope
stc
fs
cwtl
sub
adc
adc
in
into
lahf
add
decb
mov
popf
mov
mov
cli
cmpsl
fmul
das
repz
mov
pop
in
stos
loopne
popa
xchg
sbb
add
mov
lret
fisttps
stc
cli
add
jne
xor
dec
mov
and
sbb
mov
lods
sub
mov
insb
lcall
mov
int
repz
cltd
mov
pop
mov
xchg
bound
test
cmp
mov
dec
dec
push
mov
push
and
push
shl
aas
sahf
cmp
test
sbb
test
jle
cmp
xor
adc
and
cs
lea
sti
test
lods
inc
sar
ljmp
repnz
cmp
push
cmpsb
pop
mov
outsb
cwtl
push
adc
push
add
add
ja
inc
jg
outsb
cmp
cli
pop
insb
pop
xchg
arpl
aaa
sbb
sbb
into
pusha
les
push
add
fildll
or
adc
pusha
enter
mov
daa
mov
mov
sahf
dec
mov
mov
pusha
mov
xchg
xor
adc
dec
imul
in
add
sbb
ror
popf
ficoms
hlt
dec
dec
mov
cltd
adc
repz
dec
add
pop
lret
jle
and
dec
lock
mov
mov
stos
xchg
push
mov
or
cmc
fstpl
test
repnz
sub
daa
or
pushf
adc
pop
mov
push
mov
dec
add
adc
int
xorps
adc
lods
adc
sub
sub
jg
xchg
adc
push
xchg
daa
scas
mov
inc
and
aam
dec
pop
mov
or
insl
sbbb
sbb
fdivs
outsb
add
ret
icebp
add
mov
sbb
call
push
mov
pop
push
out
or
xchg
in
add
jb
mov
std
or
popf
push
frstor
push
sub
push
mov
dec
in
pusha
cmp
loope
enter
sbb
test
scas
fcmovb
dec
enter
sub
sbb
dec
mov
or
dec
pop
aad
push
sub
push
cmp
rolb
sbb
mov
or
push
jge
add
inc
cmp
jl
insl
outsl
adc
jns
add
or
sarl
push
dec
insb
or
stc
inc
sbb
xor
add
int3
or
add
sbb
ret
arpl
je
push
pop
hlt
test
shlb
leave
clc
das
out
and
mov
orb
jmp
mov
dec
fnstsw
jp
xchg
loopne
xor
imul
mov
pop
pop
add
and
add
ljmp
test
mov
pop
orl
inc
mov
xor
xor
mov
sub
adc
jno
add
xchg
je
xor
std
test
test
mov
cmp
icebp
aas
fisubl
addl
xchg
sub
rdtsc
testb
sub
jnp
jbe
add
sbb
popl
xchg
sbb
pop
sub
sbb
or
sbb
jae
pop
outsl
cmp
popa
leave
push
test
mov
dec
incb
push
inc
add
repz
bound
sub
add
xor
jbe
add
lds
and
ljmp
sbb
mov
inc
outsl
repz
mov
pusha
sbb
dec
stos
mov
ljmp
push
or
mov
sbb
add
cmp
fs
push
adc
mov
push
lret
inc
sbb
leave
or
shll
fnstenv
adc
xchg
dec
sbb
loop
push
add
lret
nop
dec
or
and
sbb
and
or
pop
test
adc
or
or
in
dec
mov
add
mov
lahf
aaa
andb
loope
fmuls
outsl
xchg
jns
xor
push
leave
sub
sbb
in
add
loop
dec
sbb
mov
sbb
sbb
sub
sbb
xor
xchg
mov
adc
pop
test
or
push
bound
sbb
rcll
or
inc
xor
test
xor
or
add
rclb
dec
sbb
sbb
movb
pop
pop
call
ds
xor
jae
add
mov
stos
or
jecxz
or
inc
sbb
rorl
or
adc
mov
add
push
sbb
add
sub
stos
in
das
pusha
into
mov
mov
subb
add
stos
xor
wrmsr
or
or
adc
repz
mov
mov
add
adcb
mov
xchg
dec
mov
dec
lods
and
clc
mov
dec
lcall
sub
inc
test
adc
add
mov
loope
cmp
mov
in
mov
outsl
mov
inc
sbb
push
mov
dec
dec
repz
fs
mov
add
adc
pop
movsb
and
addr16
shl
shlb
sub
loop
cmp
ljmp
pop
stos
bound
scas
outsl
cwtl
negb
mov
leave
push
and
stos
mov
leave
push
insl
nop
lcall
mov
jg
mov
outsl
mov
xor
mov
or
dec
mov
push
or
in
jno
loope
or
mov
xor
dec
and
xchg
xor
lea
push
pop
xchg
icebp
addl
jmp
ds
mov
mov
enter
mov
scas
leave
push
mov
addl
mov
sbb
scas
jmp
add
das
sub
movb
cmp
maxps
xlat
mov
aaa
mov
test
xor
mov
and
sbb
lods
imul
ljmp
pop
xchg
out
sbb
mov
cmp
mov
test
cli
imul
and
sbb
leave
adcl
cs
inc
push
sub
mov
and
enter
mov
cmc
or
sub
mov
sub
cwtl
add
xchg
jae
test
add
data16
push
or
sbb
and
push
or
jge
pop
push
sbb
andl
test
cwtl
or
xchg
push
call
jmp
sub
or
xchg
das
sub
outsb
jns
mov
xor
mov
movsb
mov
add
popl
loopne
add
push
mov
sbb
dec
sub
xor
and
push
leave
sub
fdivrl
dec
add
dec
sbb
mov
mov
adc
jns
pop
or
iret
or
shlb
andb
cmpsb
dec
pusha
cmc
jecxz
sbb
push
jb
or
popa
add
negb
xchg
xor
add
call
push
sbb
and
or
jle
xchg
add
lods
test
std
cmpsb
enter
das
mov
pop
hlt
xchg
xor
add
pop
fisubrl
mov
add
flds
icebp
stos
adc
daa
insl
cmpsb
int3
add
xor
pop
lret
add
mov
pop
inc
xchg
mov
add
jle
int
int3
test
mov
jnp
outsb
pop
and
add
pop
aas
mov
sbb
incb
xor
pop
jns
jecxz
in
orb
mov
push
dec
in
es
mov
pop
xor
push
scas
xchg
call
xchg
lret
sete
inc
out
push
pushf
and
or
jae
xor
and
jno
inc
add
mov
or
and
add
out
lret
inc
and
push
ljmp
cwtl
sahf
jecxz
xor
and
adcb
loopne
andb
xor
and
pop
loopne
cmp
adc
push
sbb
or
adc
pop
sbb
iret
pusha
in
lds
mov
in
cmp
or
and
addb
fcoml
loope
shlb
mov
add
mov
cmpsb
loopne
add
and
leave
and
push
add
hlt
inc
and
adcl
pop
and
cmp
mov
and
pop
sarl
test
out
jo
pop
and
pop
sbb
pop
cmp
pop
mov
push
pop
add
mov
add
in
decb
pop
fsubs
and
filds
sub
adcl
lock
cmp
add
xchg
out
cmp
test
shll
xor
inc
jnp
pusha
sbb
xor
emms
aad
or
imul
shlb
and
cmp
sti
add
cmpsb
adc
and
or
and
push
pop
inc
ds
jns
pop
add
out
mov
mov
nop
xchg
and
xor
call
mov
jae
mov
sub
sbb
pusha
xchg
and
jbe
add
loop
mov
mov
insb
test
sub
fildll
pop
mov
scas
jae
add
out
xor
xchg
ja
int3
or
and
or
out
jp
sub
add
shrl
jno
shlb
sub
add
jnp
mov
stc
dec
adc
or
ja
push
dec
jne
push
out
hlt
or
and
popa
jne
sub
js
pop
roll
adcl
add
fsts
inc
js
xor
out
pop
xor
mov
xor
out
add
lock
dec
mov
lahf
add
shrb
pop
pop
jmp
sti
call
add
and
dec
inc
or
pop
hlt
xor
sbb
or
push
sbbl
imul
jecxz
mulb
leave
add
sub
add
andb
mov
jnp
mov
repz
push
adc
push
std
push
add
cmp
add
inc
hlt
push
stos
lret
das
les
cmp
add
xlat
dec
je
inc
in
add
lret
sub
jns
ja
jae
add
mov
dec
sbb
pop
or
repz
and
jp
cwtl
inc
sti
jo
popf
js
xor
fcoms
insb
mov
cs
jno
jmp
mov
and
or
jg
pop
ljmp
fsubp
pushf
sbb
cmpsb
loop
or
adc
inc
out
enter
fldenv
jbe
add
icebp
xor
cwtl
mov
add
xchg
cmp
sub
jne
enter
and
popf
xor
scas
add
out
mov
sarb
les
int
mov
das
inc
cmc
xor
cld
std
cld
push
xor
aaa
adc
mov
inc
jle
push
jecxz
aam
fisubl
add
xor
cltd
mov
xchg
js
mov
dec
aam
pop
xchg
mov
scas
add
dec
cli
push
push
pop
dec
pop
and
in
dec
pop
mov
mov
sti
rclb
add
test
inc
cmp
sbb
add
xlat
xchg
adc
das
out
mov
cld
xor
arpl
test
mov
push
mov
les
mov
adc
cmp
imul
add
scas
adc
mov
inc
outsb
sub
popl
lds
fs
ljmp
xor
inc
mov
cmp
ljmp
imul
outsb
and
xchg
mov
mov
push
nop
les
ljmp
aaa
push
jb
jo
jle
test
ds
xchg
dec
cmpb
pop
push
aam
jmp
testb
and
dec
cmp
pusha
ror
ret
jle
dec
lret
xlat
in
cmp
push
pop
enter
pusha
loope
mov
in
push
add
mov
or
push
out
jecxz
cmp
mov
add
cmp
jl
cmp
jge
jmp
imul
xlat
adc
andl
mov
xor
shll
aas
cld
push
in
or
adc
or
mov
jo
lcall
and
pop
fisubl
and
and
jns
dec
push
cltd
jle
push
aam
inc
push
jp
lret
or
add
mov
xchg
fs
sub
shufps
inc
xor
popa
test
xor
in
cmp
mov
inc
lret
dec
mov
jl
nop
int3
int3
fsubs
enter
jmp
adc
xlat
add
outsb
arpl
dec
xor
or
test
arpl
out
and
jl
or
lds
cmp
sbb
nop
je
mov
mov
add
sbb
and
shrb
mov
je
sbb
add
mov
fisttps
or
xchg
xchg
add
stos
hlt
idiv
into
out
adc
movsl
xor
fadds
push
cmpsl
or
lds
in
mov
fcoms
in
cs
pop
sub
pusha
add
lret
xor
stos
lods
push
lret
test
or
in
mov
jb
or
stc
mov
add
xchg
or
cmc
push
aaa
mov
xchg
andb
adc
test
je
sbbl
testl
pop
mov
arpl
mov
orb
ja
add
add
rolb
xchg
cmp
cmpsl
xchg
xchg
test
inc
subl
add
mov
movsl
mov
add
push
sbb
mov
les
add
stos
notb
dec
mov
or
xchg
into
ja
add
enter
aas
in
xor
inc
xor
popa
and
mov
push
sub
sub
adc
mov
inc
stos
cld
add
xchg
cmp
and
add
mov
mov
cmpb
add
scas
xor
pop
inc
or
and
jmp
stos
enter
cmp
cmp
and
pop
in
or
andb
fiaddl
mov
xchg
in
bound
bound
imul
cld
add
hlt
punpckhdq
ficomps
aam
nop
mov
mov
add
outsl
scas
add
sahf
mov
dec
push
push
pop
test
ret
mov
add
xor
cmp
cmc
xor
sbb
xor
lods
fisubs
popf
ja
jno
dec
and
sti
call
xchg
repz
push
nop
add
sbb
sbb
test
in
je
test
xorb
enter
pop
ljmp
sbb
insl
pop
sarb
ret
rcr
mov
lds
add
fwait
sub
push
rol
inc
and
and
bound
push
repnz
test
mov
imul
frstor
lock
js
mov
push
bound
add
test
mov
push
cmpsl
cwtl
add
roll
mov
pushaw
xor
popa
and
lds
jno
dec
add
dec
cmpl
outsb
mov
push
test
push
ret
sub
shll
add
repnz
lret
sahf
pop
pop
sub
adc
adc
nop
adc
fiadds
fbstp
sub
jns
add
jae
icebp
or
jno
jbe
xlat
nop
sar
add
push
mov
cmp
sbbb
mov
and
add
jmp
aas
lock
mov
inc
adc
sub
insl
push
pushf
daa
sbb
push
or
or
fisttps
xor
dec
push
jmp
jge
pop
push
pusha
punpcklwd
pop
cltd
or
cmp
jp
es
pushl
sar
iret
sbb
incl
xchg
sahf
lods
mov
mov
xor
out
in
addb
or
and
pop
in
jno
movsb
gs
jecxz
popf
das
pop
and
subl
ret
adc
mov
enter
lret
jmp
fs
hlt
mov
xchg
shlb
pop
aas
xor
mov
repz
stos
xor
push
push
jp
sahf
adcb
outsl
js
sub
and
add
inc
cwtl
xchg
pop
inc
dec
clc
mov
mov
stos
lock
push
lret
add
lcall
push
sti
cwtl
jae
adc
xchg
fisttpl
inc
sub
nop
push
clc
cmpsb
adc
lods
dec
nop
enter
lret
push
nop
add
nop
or
push
in
hlt
in
addl
popa
in
stos
adc
orb
cmpsb
std
add
arpl
pop
int3
shl
jne
mov
mov
xchg
sbb
aam
pcmpeqd
icebp
inc
adc
roll
pop
iret
mov
adc
subb
inc
loop
add
in
jbe
es
jge
cmp
cmp
fs
aad
add
pop
outsl
add
sbb
sub
sbb
lock
cmpb
sahf
jl
fwait
cmpsb
cmp
andb
js
pavgb
sub
sbb
aaa
rorb
in
test
or
negl
faddl
stos
and
adc
cmp
fadds
mov
scas
add
sub
mov
cmp
lods
add
aam
pop
and
and
or
cmp
sbb
dec
loopne
test
aaa
xlat
inc
orl
les
fs
nop
mov
test
sub
and
cmp
fiaddl
and
popf
mov
add
sbb
mov
push
fwait
stos
xchg
cmpsl
test
xchg
rclb
inc
inc
nop
in
pusha
mov
in
add
rcll
xlat
cmp
call
mov
iret
movsl
mov
rcr
movsb
push
add
add
repnz
xor
int
or
add
and
dec
cld
movsl
jl
or
repz
add
sarb
mov
lock
sbb
clc
xchg
or
ss
jo
je
jns
test
call
dec
dec
int3
and
add
in
cmpl
cmc
in
inc
movlps
add
adc
orb
sbb
and
xor
daa
inc
inc
aaa
fldenv
les
shl
bswap
mov
dec
mov
pop
or
adc
add
xorl
sub
dec
pop
addr16
rorb
subb
ljmp
cmp
add
int3
jecxz
out
rorb
or
int3
insl
add
mov
adc
out
or
mov
into
loopne
dec
cmp
push
aas
es
add
test
lahf
stos
mov
mov
stos
loopne
ja
lock
cmpsb
sbb
movsl
sarl
jle
mov
in
nop
or
popf
inc
js
call
cwtl
dec
pop
add
mov
sbb
jg
pop
and
lods
imul
and
iret
stos
sbb
inc
mov
outsl
imul
sub
int3
inc
add
jb
call
and
cmp
mov
pop
aas
adc
inc
rcrl
cwtl
in
movsb
ds
add
sbb
add
push
or
add
mov
sarb
and
sbb
mov
add
hlt
mov
sbb
xchg
iret
pushf
add
imul
nop
add
test
cmpsl
cmp
cld
lods
cmp
add
call
sarb
jnp
mov
fwait
mov
mov
jnp
cmp
mov
mov
test
and
push
pop
sbb
jns
cmp
sbbb
jmp
cmp
popa
shrb
mov
filds
lock
add
push
aad
mov
add
or
lcall
ror
pop
push
dec
cmpb
push
stc
inc
and
test
and
dec
lods
mov
rcr
lds
lock
push
fs
jle
popa
int3
or
roll
jae
hlt
cmpsl
ret
aam
out
xor
subl
imul
inc
test
mov
inc
mov
xlat
mov
bound
pop
or
mov
sub
enter
int3
xchg
mov
aam
add
adc
sbb
ret
es
jae
shr
jbe
mulb
mov
cmp
stc
xchg
inc
xor
inc
and
sbb
cmp
pop
xchg
mov
push
lock
jnp
in
shr
icebp
jo
inc
add
and
aam
sub
leave
test
inc
sub
adc
sbb
pop
add
jns
imul
sar
lret
xor
and
xor
test
pop
mov
xor
mov
popa
push
xor
sbbb
dec
hlt
dec
sbbb
add
jb
shld
and
add
and
pop
mov
dec
add
push
adc
jo
xor
addl
shrb
scas
mov
add
mov
fisubl
add
loop
leave
add
je
int
fwait
mov
std
es
jne
mov
jb
fbld
ret
scas
pmaxsw
mov
sarb
push
clc
mov
inc
adc
cmp
mov
fnstcw
mov
and
bound
cmp
jl
je
fiaddl
adc
push
sbb
sub
mov
sbb
test
mov
inc
add
pop
sahf
out
add
lods
add
dec
loopne
adc
loopne
int3
ret
inc
adc
data16
cmpsb
mov
sbb
mov
jl,pt
nop
push
add
jae
inc
fldcw
loop
add
ret
mov
mov
data16
cmpsb
pop
movsb
or
ficoml
fptan
add
mov
or
or
pushf
int3
repnz
flds
iret
add
mov
mov
pop
sub
pop
push
mov
popf
outsl
loopne
xchg
fcomip
out
repz
insl
xchg
add
cmc
mov
add
mov
add
and
add
incl
dec
arpl
lret
jp
add
pop
jae
rcll
add
dec
lock
add
sti
enter
pusha
push
jns
adc
or
ret
xlat
xorl
mov
add
inc
xor
sahf
popa
loopne
andb
movsl
pop
lock
lods
loopne
cld
test
sub
and
jno
aas
push
and
lcall
pusha
dec
inc
scas
inc
xor
pop
fistpll
inc
daa
fnstsw
dec
sbb
in
pushf
seto
mov
dec
pop
xchg
mov
outsl
adc
stos
jl
cwtl
ret
jns
mov
sbb
fs
inc
aaa
xchg
jmp
xor
jle
add
lock
cli
mov
rcrl
xchg
inc
pop
mov
add
or
xchg
pop
fisttpll
andl
mov
cmpsl
imul
roll
mov
out
pop
add
mov
cmp
add
adcb
repnz
frstor
jp
lods
ja
loop
add
jge
xchg
add
mov
sbb
xlat
sbb
jp
ljmp
data16
test
lea
mov
add
or
lock
cmp
add
ret
repnz
test
movsb
cld
jmp
push
lds
das
mov
push
insl
or
sub
in
imul
xor
cmc
or
inc
push
cmp
adc
xchg
in
or
insb
xor
add
push
mov
pop
add
jp
aas
or
add
sub
out
leave
nop
lahf
cld
je
add
arpl
pop
sbb
bound
mov
stos
push
xor
movb
jecxz
cmp
inc
mov
add
or
pop
movsl
or
and
jo
outsb
cmp
push
lods
jl
add
xor
repnz
pop
push
add
adc
mov
mov
sbb
push
sub
cwtl
stos
add
push
and
jnp
cltd
add
inc
fdivrs
int3
mov
add
lea
mov
push
inc
push
lahf
test
imul
ss
jp
inc
xchg
xchg
jae
or
insl
aaa
fmuls
or
mov
movsl
push
aam
clc
test
mov
mov
add
sub
bnd
mov
jmp
aas
and
daa
adc
shl
lock
push
add
jp
ja
loopne
mov
mov
adc
cmpsb
sti
cld
pop
test
stos
xor
jae
inc
xor
gs
cmpsl
push
test
or
add
out
and
jno
mov
add
cmp
sub
loopne,pn
sbb
les
mov
jl
mov
cli
sub
pop
jb
stos
xchg
mov
add
adc
in
sub
and
roll
aaa
rcl
dec
add
jg
pop
inc
and
pop
mov
or
dec
sub
ljmp
ficompl
jns
mov
pop
sub
mov
inc
je
pop
cmpsl
or
in
jl
idiv
andl
out
jbe
mov
mov
lret
in
in
stc
jl
xchg
fistpll
icebp
scas
cmp
sbbl
mov
jae
cmp
push
sub
dec
cmp
pop
add
fsubrl
add
sub
xor
jp
add
mov
insb
int
cmp
xchg
lahf
out
dec
cmp
add
cmp
or
xor
fadds
mov
nop
js
mov
stos
test
addr16
ret
fiadds
xchg
push
cmp
pop
rolb
ret
test
add
cs
push
imul
pop
push
cmp
cmp
pusha
das
pop
cmp
mov
dec
inc
cld
xlat
rorl
das
scas
push
or
inc
and
cmp
ret
das
mov
sub
lods
dec
adc
sbb
adc
pusha
aam
mov
jmp
pop
and
or
iret
mov
jns
and
repz
adc
sar
or
sub
add
and
shlb
filds
sub
pop
aad
sub
cli
add
pop
mov
imul
dec
add
jmp
mov
push
add
jb
loopne
and
in
pop
dec
sub
test
test
add
mov
jg
push
mov
adc
jae
add
insl
dec
dec
push
shlb
add
pop
shlb
je
outsl
xchg
mov
pop
mov
lock
iret
cmp
inc
pop
xlat
addr16
dec
inc
dec
push
loopne
push
call
psubw
jne
add
add
xchg
fwait
jg
rcrb
pop
mov
push
sbb
add
xchg
loop
adcb
movsb
pop
aaa
fsubrs
pushl
insb
add
cmp
pop
xchg
dec
dec
jle
dec
add
add
cmp
add
and
mov
fsts
push
mov
xor
cmpsb
mov
xchg
mov
add
icebp
add
lret
inc
sbb
mov
jle
inc
lock
cmp
sbb
ret
xchg
fwait
es
add
rclb
jp
pop
add
mov
or
in
out
and
into
mov
add
push
scas
xor
inc
stc
out
jo
pop
jg
push
ja
add
les
stc
notb
add
inc
insl
hlt
add
pop
fiadds
and
sahf
and
imul
pop
add
js
xchg
xchg
decl
jbe
add
mov
inc
push
add
and
mov
xor
sbb
mov
or
iret
fdivs
mov
sub
popa
movsl
xorl
mov
dec
ljmp
scas
xor
push
or
ja
add
das
js
lock
rol
out
push
push
xchg
inc
icebp
cmp
pop
cmp
stos
fists
add
xchg
shl
das
xor
mov
adc
cmc
dec
outsb
out
shlb
iret
scas
pop
in
lea
fbstp
push
jmp
add
inc
or
cmpsl
add
scas
mov
sub
adc
add
pop
xor
mov
and
sbb
and
xchg
aas
pop
dec
add
pop
mov
pop
add
mov
xchg
pop
ljmp
mov
pop
sbb
es
mov
cmc
xor
add
imul
cmp
aam
iret
shlb
cmc
insb
add
sbb
mov
jmp
shlb
mov
inc
add
push
sub
or
inc
inc
popl
stos
mov
pop
cmp
je
pop
fdivrs
lock
sub
mov
add
jbe
fcomi
xchg
inc
push
hlt
add
rcr
adc
arpl
int3
jno
stc
add
test
mov
or
add
xor
sub
pop
jae
pop
das
xchg
or
in
push
stos
mov
push
pushf
movsb
loope
push
lods
pusha
insl
push
cmp
inc
xor
fs
test
dec
mov
enter
push
inc
pusha
jg
pop
or
jno
push
nop
add
adc
out
add
mov
mov
lahf
aaa
pop
or
testl
inc
loop
pop
int
inc
adc
cli
cmp
aam
xchg
test
add
out
push
rclb
cmpb
mov
outsb
xor
push
repnz
insb
jnp
je
int
pop
ljmp
dec
popf
loopne
mov
add
lock
adc
fldl
sbb
add
cmp
mov
cmc
call
or
lock
ret
add
outsb
aam
std
xor
and
jo
jo
push
mov
sbb
or
cmp
dec
add
cmp
js
pop
lea
add
or
pop
adc
sahf
pcmpeqb
mov
enter
sti
pop
xchg
sbb
clflush
jns
insb
mov
mov
mov
js
cwtl
aas
lock
xchg
bound
push
sub
adc
imul
sbbl
push
lahf
cld
inc
cwtl
sti
and
ret
add
cmp
xchg
into
dec
fisubs
mov
mov
add
stos
mov
sub
in
xchg
push
push
shll
stc
sub
add
sbb
inc
jbe
hlt
dec
sub
imul
cli
lods
lock
add
lret
rolb
aam
pop
rclb
jns
cltd
mov
sahf
push
das
sub
mov
mov
jle,pn
pop
inc
xchg
daa
in
push
jle
adc
add
jl
mov
fwait
test
xchg
add
push
int3
shr
dec
repz
dec
mov
sub
psadbw
test
xchg
repnz
adc
xor
mov
lret
mov
rcll
fs
bound
add
pop
into
sub
pusha
cmc
lret
xor
psubd
test
andl
imul
xchg
mov
mov
adc
mov
filds
jge
vmovmskps
xchg
dec
addr16
add
and
jp
pop
xchg
add
call
imul
or
cmp
mov
mov
or
sub
ffreep
das
rclb
add
adc
lret
inc
int3
sbb
inc
mov
jo
pop
jg
loop
mov
sbb
dec
sarb
mov
sub
enter
push
mov
add
pop
jle
pop
cmp
push
and
xchg
cmp
addr16
add
or
and
and
bound
adc
ret
shll
mov
pop
int3
jnp
add
fmull
push
adc
stc
inc
addl
stos
inc
scas
mov
cmp
imul
or
nop
xchg
loop
fs
mov
xchg
jo
arpl
cs
rorb
ja
push
mov
cmp
add
pusha
dec
out
sbb
push
jns
test
imul
aas
and
rolb
pop
sti
jae
jp
and
adc
sahf
mov
mov
mov
pop
and
add
test
mov
add
iret
sbb
inc
xchg
lcall
add
and
adc
int3
inc
xlat
shl
and
sbb
aaa
into
cmp
hlt
and
xchg
repz
imul
xchg
ja
imul
fistl
pusha
jno
add
in
aam
shr
add
lss
mov
add
mov
or
jbe
add
xor
add
sub
lods
push
mov
xchg
add
inc
push
add
lea
repnz
sti
or
pop
lea
jno
sbb
jbe
fidivl
bound
mov
aad
add
or
mov
xor
repnz
or
lods
add
mov
std
aad
das
inc
rorb
cmc
jmp
ret
shlb
int3
sbb
push
sub
aaa
rcrb
push
ja
jae
or
test
inc
addr16
pcmpgtb
push
xor
pop
scas
add
mov
cld
jle
cmpsb
add
sbb
xor
mov
or
out
push
rcrl
sahf
cld
loopne
or
xlat
mov
ret
jecxz
stc
ljmp
or
cmpsb
add
lods
subl
pop
shll
pop
data16
call
push
popa
or
sbb
push
dec
push
andl
xor
mov
dec
push
ds
inc
out
adc
sbb
jecxz
ret
adc
scas
add
push
or
dec
sbb
push
js
ret
nop
nop
xchg
sub
jae
lods
and
adc
icebp
cmpsl
cmp
mov
ret
fwait
ret
call
cmpb
fstpt
mov
aam
add
mov
mov
pop
popa
cwtl
add
repz
mov
popf
mov
iret
popa
inc
js
add
inc
mov
rcrl
fcmovnb
cwtl
mov
inc
xchg
sbb
inc
mov
cmp
loope
int3
add
add
pop
cmp
xor
aad
add
dec
jne
dec
jns
add
dec
mov
mov
sub
lock
add
adc
paddsw
xor
sub
add
scas
dec
push
pushf
pop
sub
lret
andb
lds
cltd
push
or
inc
into
cmpsb
sbb
loopne
xchg
add
xor
fcomip
add
mov
movsl
add
mov
nop
inc
mov
sub
push
fdivrs
rol
or
xchg
pop
loopne
shrl
sbb
sub
out
sahf
movsl
or
das
sub
stos
in
adcb
fidivs
add
inc
stos
daa
or
mov
pop
xchg
mov
sub
mov
inc
lods
lds
xchg
inc
fwait
je
enter
adc
adc
mov
jp
xor
loopne
insb
jne
dec
jmp
flds
mov
fisubl
add
ret
in
int
rorb
cmp
es
cmp
ror
xor
add
pop
sub
add
xorb
add
pop
inc
fdivrs
pop
jge
cwtl
mov
pop
subb
int3
xchg
stc
push
enter
out
jmp
mov
hlt
aam
lods
movl
and
or
sbbb
add
inc
cmp
lret
jno
inc
test
add
cs
repz
cmpsl
jl
or
push
add
pop
enter
jp,pt
or
imul
add
call
in
push
cmp
aad
xchg
mov
sbb
dec
test
rclb
mov
les
enter
adc
mov
shlb
in
cli
push
pop
lcall
shl
cmp
jnp
sub
push
movsl
mulb
sbb
inc
hlt
daa
sub
adc
mov
cmpsl
cmp
loop
loopne
js
fmull
sbb
xchg
aaa
cld
mov
cmp
push
movsl
or
and
mov
mov
fbld
sub
inc
out
push
in
add
add
pop
outsl
mov
in
xchg
dec
add
sbb
adc
pop
lods
outsl
mov
data16
adc
dec
push
xorb
sub
out
pop
daa
into
add
dec
pop
xor
incl
and
das
pop
push
cmpsl
add
adcl
add
inc
insl
test
xor
add
pop
fcomps
jl
adc
orl
dec
rcr
test
jbe
fstpl
mov
incl
ret
loopne
addb
rclb
rolb
fcompl
push
push
mov
ret
push
out
shlb
cmp
fisttpl
push
and
dec
add
out
mov
das
loopne
pop
mov
jo
and
fwait
je,pt
mov
push
ss
fmuls
sub
scas
jns
or
aam
mov
lret
add
or
mov
inc
push
add
dec
push
pop
inc
ret
data16
in
rorb
arpl
add
scas
lock
addr16
xchg
pushf
xor
add
pop
shrl
fists
pushf
add
xchg
mov
mov
loopne
fidivl
in
imul
mov
scas
rcrl
loope
pop
add
mov
lock
idivb
jecxz
sub
push
inc
adc
sbb
mov
add
dec
aas
lock
test
pop
shlb
jnp
enter
les
pop
fsubrl
cltd
mov
add
jne
sbb
mov
fwait
int3
sub
and
xorl
je
cmp
loope
pop
js
mov
xchg
jl
xlat
pop
loopne
or
mov
pop
movsb
sub
aad
fsubs
pusha
ja
adc
jp
pushf
push
or
pop
sub
test
sub
ret
inc
add
or
test
mov
add
mov
sbb
jle
daa
incb
push
repz
add
or
clc
add
roll
pop
dec
and
dec
mov
jns
and
cld
gs
sbb
xchg
jl
push
cli
pushf
lcall
jg
lods
lods
add
mov
add
add
shlb
shlb
mov
pop
pop
les
jge
pop
and
jmp
addr16
fildll
lock
lret
add
pop
cmp
or
sbb
jl
inc
cmc
inc
mov
add
popf
icebp
mov
add
xor
or
dec
jne
repnz
mov
icebp
fsts
ds
add
pop
xchg
rcrb
pop
mov
sbb
xorl
xchg
subb
or
inc
pop
js
add
mov
push
out
movsl
sarb
mov
mov
mov
pop
push
and
sti
xchg
gs
mov
pop
repnz
xor
add
xchg
ret
fidivrs
add
or
in
movsb
sub
ss
or
mov
ret
add
sub
insb
jae
add
mov
xor
dec
pop
scas
mov
cmp
dec
and
les
adcb
out
mov
bound
pop
sbb
add
lret
ds
pop
jne
or
test
mov
pop
dec
daa
scas
push
xlat
bound
cmpsl
mov
or
cs
add
xlat
inc
ret
testb
addr16
push
inc
sub
sbb
vmwrite
add
pusha
inc
mov
lock
shrb
add
xchg
icebp
or
xor
dec
pop
imul
out
cmp
and
cmpsl
push
cmc
cmp
movsl
je
test
push
jnp
jl
inc
cwtl
xchg
dec
ds
sub
mov
and
sahf
dec
orb
jg
sbb
lret
cld
bnd
scas
adc
in
out
fadds
dec
jbe
jmp
inc
adc
add
lahf
add
adc
jnp
mov
mov
mov
dec
shrd
mov
mov
repz
and
hlt
test
push
pop
inc
arpl
js
push
sub
sahf
jl
add
mov
arpl
hlt
loope
test
mov
lret
and
jb
push
aas
add
and
sub
or
or
mov
dec
xchg
addb
add
xchg
in
cmp
add
or
push
jo
or
add
adc
stos
push
ret
out
testb
in
add
sbb
popf
ljmp
or
mov
xchg
test
ljmp
lods
mulb
imul
clc
push
pop
insl
add
in
out
mov
dec
and
es
sbb
mov
sarl
pop
pushf
or
dec
mov
and
mov
cwtl
shll
cmp
mov
test
xchg
jno
pop
or
xor
pop
daa
bound
and
shrl
add
xor
jno
jle
add
push
push
pop
shrl
cltd
add
sbb
jecxz
inc
sahf
mov
scas
popa
das
and
test
test
fcomp
pop
adc
pop
push
movsb
pop
jbe
shlb
lahf
dec
stos
inc
sbb
sbb
repnz
add
dec
push
shlb
fnstcw
sub
mulb
popa
push
cld
add
cmc
ds
daa
push
xchg
repz
inc
in
lods
add
std
sbb
lret
or
orb
xchg
icebp
cmpl
mov
mov
scas
dec
cmc
dec
out
push
in
fiadds
inc
pop
adc
stos
xchg
icebp
mov
add
stos
rep
je
mov
inc
int3
movsb
push
loopne
inc
xchg
outsb
pop
add
mov
les
out
pop
xchg
sub
std
cmpsb
xor
add
out
inc
add
rcl
in
std
pop
aam
add
and
testl
loopne
or
lock
jmp
dec
adc
insl
pop
add
dec
xor
xchg
or
mov
inc
cli
adc
lds
mov
mov
fs
int3
push
dec
add
jmp
lret
scas
in
add
jns
fadds
jp
add
adc
dec
xchg
sbb
fld
das
fs
add
inc
add
sahf
jge
or
repz
jecxz
jl
jo
add
lock
inc
in
punpckhdq
pop
dec
inc
adc
icebp
xorb
jne
rorl
cltd
and
pop
test
ja
xor
and
cmp
std
test
push
sub
inc
cmp
sbb
xchg
in
pop
aaa
pusha
sbb
sub
cmp
xor
mov
addr16
bswap
and
sbb
sub
cs
rclb
or
mov
cmp
or
clc
mov
jmp
aaa
add
nop
sub
adc
imul
pusha
and
aas
mov
clc
or
cmpsb
loop
clc
xchg
or
pop
sub
add
mov
adc
data16
and
add
testb
movsb
hlt
dec
call
dec
iret
mov
inc
push
and
mov
add
inc
push
mov
je
loop
lahf
xchg
xorb
xchg
cmp
xor
sbb
in
cmp
dec
xor
xchg
arpl
dec
pop
inc
aaa
scas
jge
add
inc
lock
stos
iret
xor
loope
nop
ja
sub
push
inc
mov
js
sbb
add
jecxz
xor
dec
push
xchg
add
mov
xchg
fimuls
mov
std
dec
sahf
pushf
add
leave
add
mov
pushl
add
push
dec
mov
mov
out
nop
lret
insb
ljmp
adc
inc
insl
icebp
mov
or
add
es
gs
add
jl
jo
xchg
jne
add
ret
dec
movsl
xor
add
jbe
stos
jecxz
jno
fisubrs
mov
add
out
cs
sbb
mov
or
or
xchg
dec
fsubrs
loope
xchg
mov
xchg
rolb
push
jae
int3
mov
add
inc
add
jl
ret
push
add
sbb
cmp
int3
mov
rcll
enter
fsubrp
cmc
mov
lds
jno
rclb
and
add
lcall
repz
stc
or
dec
add
add
loope
sub
inc
push
add
add
lcall
pusha
jle
jo
add
clc
sbb
mov
add
xor
out
mov
aad
mov
int
clc
lods
jns
jne
sahf
inc
test
orl
xor
testb
imul
add
jmp
add
mov
jo
dec
mov
inc
es
or
test
or
sbb
mov
stc
es
jecxz
mov
dec
pop
pusha
sub
inc
adc
lahf
sbb
jno
orb
jnp
pop
cwtl
dec
ja
add
arpl
out
shl
cmpl
xchg
jp
add
sbb
aas
jmp
mov
cld
pop
xlat
mov
xor
jl
inc
add
aas
xchg
sub
dec
push
fidivs
mov
or
inc
adc
incl
mov
push
jb
fcoml
pop
push
add
call
ds
or
mov
add
data16
ds
adc
sbb
pop
xchg
mov
jg
in
xchg
push
jno
in
push
add
mov
repnz
cs
push
clc
inc
mov
sbb
pop
mov
sub
dec
jecxz
sbb
jle
sub
inc
adc
add
dec
adc
cld
xchg
aas
mov
sub
out
dec
xlat
and
ret
add
shll
mov
add
shlb
dec
sti
in
jae
and
inc
add
outsl
andl
sub
ljmp
cmpsl
add
jnp
xor
cmp
sub
aad
shrb
jb
bound
jbe
adc
add
sbb
aam
xor
std
cmp
add
jns
incb
pop
sbb
mov
xor
add
in
sbb
jecxz
and
mov
pop
dec
ljmp
xchg
test
adc
sbb
popf
mov
add
pop
stos
dec
push
xor
xchg
mov
or
aaa
sub
xor
mov
fcmovb
sbb
mov
popa
outsb
lahf
or
aas
data16
inc
pop
sbbb
xchg
aam
negb
mov
cwtl
xchg
movsl
add
test
mov
add
jg
loopne
insb
pop
mov
test
jmp
sub
hlt
cmp
mov
lds
push
ficomps
pop
or
cmp
sbb
or
push
loop
pop
and
push
dec
or
lea
loopne
and
mov
mov
out
repnz
mov
bound
or
push
and
movb
sbb
adc
add
dec
sub
int3
lret
cmp
inc
push
pop
inc
sub
xor
sub
fbld
pop
out
pop
ret
add
inc
and
add
pop
mov
pop
fsubrl
xorl
ret
dec
add
mov
fldl
xchg
mov
lods
clc
xor
xor
mov
jp
xor
inc
das
cld
mov
pop
iret
jge
ret
outsb
or
out
add
inc
inc
cltd
test
lods
jp,pt
fdiv
aam
inc
hlt
arpl
add
cmp
movsb
pop
or
inc
sbb
jle
add
jp
or
push
jecxz
mov
sub
data16
mov
or
jo
add
mov
mov
cltd
inc
jnp
daa
or
imul
dec
and
lods
rol
push
ds
loopne
sub
pop
push
loope
int3
jno
add
std
push
popf
push
bound
xchg
movsb
mov
into
sbb
shrb
cmp
push
pop
push
push
dec
aas
dec
sub
xor
ds
incb
cwtl
or
push
arpl
sbb
cmc
out
pusha
jae
popf
pop
stos
add
movsb
add
jp
call
add
cmp
frstor
push
mov
cmp
mov
pusha
lds
data16
dec
mov
add
inc
and
clc
sbb
xchg
fbstp
enter
mov
mov
hlt
out
cs
mov
pusha
int
call
int3
jp
ljmp
push
pop
fimuls
mov
or
enter
lret
and
xchg
inc
add
call
call
cli
push
add
test
pushf
std
push
mov
sbb
test
xchg
push
pop
lea
addr16
in
push
test
clts
int3
fstpl
jns
int3
sub
loopne
mov
push
fimull
loope
push
sbb
mov
fxch
insl
pop
popl
iret
repnz
jne
mov
movsl
leave
pop
add
mov
adc
int3
test
jl
hlt
or
and
push
test
dec
xchg
or
mov
stos
int3
push
mov
ficoml
loope
bound
incb
fnstenv
push
bound
jns,pt
xor
push
adc
inc
add
pop
xchg
lods
cld
mov
outsb
lcall
add
xchg
mov
add
test
add
fadd
jbe
xchg
push
and
mov
dec
inc
add
inc
push
insb
ljmp
xchg
push
xor
mov
loopne
ficompl
pop
pop
leave
repnz
mov
test
jmp
test
pop
pop
gs
fcmovnbe
xor
int3
cs
out
jo
xor
mov
pop
sbb
sbbb
cmpsb
jne
xor
add
jae
push
xor
add
mov
and
daa
scas
and
out
fiaddl
fdivs
pop
cmp
mov
jnp
push
movsb
ja
add
addb
int3
xchg
mov
imul
mov
sbb
iret
jl
jbe
cmp
add
pushf
adc
dec
add
lds
loope
cmp
mov
dec
lea
scas
das
int
outsb
push
not
add
loope
and
inc
lcall
inc
xchg
stos
and
loop
jmp
data16
test
jno
jne
inc
add
pop
cmpsl
fnstenv
add
sti
aaa
adc
inc
pop
sub
ret
jnp
jp
add
stos
rcll
stc
cmp
add
mov
pop
jmp
dec
int
inc
pusha
mov
bound
jecxz
inc
sub
mov
loop
jmp
leave
movsb
pop
testl
adc
mov
jne
in
inc
movsb
add
pop
adc
add
adc
inc
sarb
mov
dec
add
pop
shl
fcompl
scas
jo
jae
add
bound
adcl
add
or
adc
add
xor
sahf
add
fcoml
cld
loopne
cmpb
aam
sbb
push
nop
test
add
inc
pop
imul
jbe
xchg
call
jecxz
add
ja
sbb
aam
push
sub
sti
pop
or
adc
fs
push
jmp
push
rcrl
xchg
and
add
addr16
and
mov
das
lahf
add
xor
and
add
jno
insb
lock
sbb
fcoml
cs
push
and
and
and
in
add
xor
xor
movl
adc
xor
jns
mov
push
sbb
add
lcall
dec
mov
add
out
icebp
mov
jne
sub
add
test
or
jp
mov
add
pop
inc
enter
out
repnz
and
scas
and
xchg
add
xchg
dec
xchg
sti
xchg
aas
fimuls
mov
pop
inc
hlt
inc
xchg
and
jbe
mov
mov
push
mov
add
push
dec
in
xchg
stc
sbb
and
xchg
mov
mov
jmp
pop
outsb
cmp
pusha
inc
add
xchg
inc
mov
loop
stos
inc
and
scas
jne
push
xchg
mov
subb
or
aas
inc
mov
scas
cltd
sub
iret
mov
sbb
aaa
stos
sub
shrb
out
mov
jmp
fcompl
inc
pop
roll
jbe
add
jbe
dec
lock
jecxz
je
call
sahf
xchg
popf
add
sub
orl
sets
cwtl
add
jp
mov
mov
in
and
pop
cmp
jp
mov
rclb
fwait
mov
imul
call
add
scas
outsb
in
popa
fwait
dec
cmp
push
dec
inc
lret
sbb
add
test
xlat
push
scas
fistpl
add
inc
jmp
aas
add
or
rol
outsl
int3
add
jae
cmp
adc
cli
push
sbb
outsb
in
mov
pop
clc
xor
pop
fdivrs
in
fwait
clc
jp
push
mov
call
stos
add
or
enter
or
adc
xor
int
fisubs
or
fstl
mov
mov
xorb
mov
pop
lcall
mov
add
pop
insl
es
pusha
adcb
mov
jg
pop
push
movsb
inc
adc
or
cld
pop
xchg
cmp
xor
add
adc
lock
dec
add
popf
xchg
cmp
add
mov
call
mov
movsl
mov
mov
cmp
shrb
cmp
add
je
add
arpl
out
out
shlb
repz
pop
mov
xchg
iret
cli
push
or
add
mov
adc
mov
push
dec
insl
mov
pop
push
mov
add
gs
imul
jl
push
sub
or
sub
out
adc
scas
add
imul
in
sarb
jae
sti
xor
in
fmull
in
push
lret
add
mov
lds
mov
sub
js
lret
call
jno
popa
ss
dec
inc
dec
jb
or
subl
js
jl
fists
into
and
and
sub
mov
cmp
xchg
das
int3
add
repnz
fstl
popa
adc
inc
ret
lcall
decb
push
xchg
out
pop
andb
cltd
add
dec
test
scas
sbb
cmp
sahf
insb
cltd
mov
cwtl
jge
adc
hlt
popa
add
fnstsw
daa
nop
pop
mov
push
outsl
sub
xchg
adc
stos
sbb
nop
and
fidivs
dec
pop
mov
cld
repnz
ds
inc
inc
sbb
mov
stos
sub
jb
push
out
sub
add
rcrb
gs
xor
and
stos
ret
add
mov
jmp
cmpsb
push
fadds
push
iret
mov
pop
xor
leave
mov
adc
in
jne
or
aaa
add
lahf
push
lret
test
cmpl
repnz
pop
out
pop
mov
icebp
jnp
cmp
xchg
mov
xor
xlat
fstp
lret
lock
inc
mov
cmp
cmc
in
push
jmp
bound
add
int3
inc
cmp
push
sbb
arpl
test
nop
mov
testb
xchg
sub
push
mov
add
cmpsl
loope
out
rclb
cmp
leave
jnp
and
jbe
subb
lods
dec
lea
adc
dec
inc
js
inc
dec
pushf
out
call
test
pop
sarb
shl
dec
push
jg
popf
mov
xor
add
int
push
out
ffreep
clc
std
fs
xor
add
stos
jbe
inc
cmp
push
add
int3
xor
add
movsl
xchg
call
add
or
imul
jb
add
shlb
movsl
pushf
bound
add
repnz
pop
lret
cmp
pop
cld
mov
mov
push
test
or
movsb
push
xchg
popa
outsb
flds
pushf
pusha
cli
dec
mov
dec
add
dec
outsb
xchg
imul
rolb
adc
add
add
cmp
fcmovne
and
les
test
insl
test
movsl
jnp
sbb
push
fiadds
add
inc
cmp
ds
mov
add
add
push
sti
jge
inc
inc
addl
mov
data16
add
mov
add
jl
mov
mov
adc
std
or
mov
adc
pop
sub
xor
cmp
fsubr
jnp
sar
adc
xchg
pop
cs
cmpsb
cmp
push
sbbb
outsb
dec
ljmp
push
cld
xchg
mov
dec
xchg
dec
push
mov
loopne
jne
add
mov
xchg
jle
mov
fstpl
mov
shll
push
push
and
cltd
xchg
dec
test
or
xchg
roll
push
and
dec
mov
push
xor
cmpsl
dec
add
or
add
jb
cmp
or
addb
imul
jle
and
pop
add
scas
add
or
cmc
lret
pop
lds
push
dec
add
fstps
cmp
xchg
xchg
in
scas
mov
xor
push
mov
out
xorl
pushf
adc
fldenv
add
adc
lret
jno
dec
cmc
push
lock
mov
jecxz
shlb
cmp
adc
jle
dec
fadds
ret
and
les
pop
mov
loop
add
lcall
scas
add
add
jne
add
cli
bound
ja
adc
pop
sbb
jbe
add
or
lret
jb
dec
push
inc
cwtl
pop
popa
sub
push
ds
or
imul
add
or
jae
cs
xor
or
pop
arpl
in
jne
cmp
xor
add
out
lods
jb
add
int3
fldl
and
fisubl
popf
xor
sti
add
lahf
loop
cmp
ja
and
gs
sub
ss
add
lods
mov
jne
test
cmp
popa
add
pusha
xor
addr16
add
std
push
or
push
icebp
add
negb
dec
unpcklps
jge
loopne
xor
adc
stc
and
int3
dec
insb
les
mov
movsb
jo
inc
pop
out
cmp
cmp
mov
or
add
mov
push
jo
inc
lods
jbe,pt
inc
nop
in
cmpsb
adc
fcompl
das
mov
add
andb
jp
clc
cmp
cmp
adc
pop
cmp
pop
add
in
xorb
or
imul
sub
lea
jge
fistpl
mov
pop
fcoml
mov
xchg
add
jge
ja
sbb
push
sbb
test
add
outsb
cmp
sub
out
movsb
mov
addl
adc
iret
sbb
sbb
push
jae
or
mov
in
or
rolb
add
and
cltd
add
mov
pushl
gs
push
jo
add
or
filds
jo
add
aam
stos
cmp
movhps
cs
shlb
jns,pt
add
pop
into
test
testb
adc
insb
lcall
mov
push
int
and
jns
inc
mov
add
cmp
add
push
fsubl
stos
ja
jae
dec
sbb
sbb
mov
mov
push
inc
popf
loop
insb
adc
adcb
sti
xchg
inc
sbb
mov
in
or
dec
or
push
mov
adc
mov
jmp
pop
adc
sbb
in
addl
adc
outsl
push
xchg
jno
mov
sub
lret
repnz
mov
lock
mov
fnstcw
add
pop
add
ds
cmpl
xlat
adc
or
xchg
lods
loop
test
call
movsl
push
fadd
jg
scas
add
sbb
not
cmp
sahf
mov
pop
push
push
icebp
fs
xor
dec
sub
lds
cmpsb
add
or
hlt
mov
sbb
cmp
mov
outsb
into
pop
xchg
add
call
add
jge
xchg
rolb
mov
mov
shrl
rcr
scas
sub
add
mov
pop
lods
sbb
inc
jb
ja
jnp
add
mov
lcall
dec
jne
mov
out
sub
push
sbb
cs
je
cmp
fbld
sub
mov
mov
xchg
aam
cmp
rol
sub
in
call
adc
lods
std
pop
imul
pop
sbb
xchg
sahf
adc
jl
mov
jge
dec
mov
movsb
bound
sbb
and
popa
cwtl
mov
jo
daa
cmp
in
push
dec
iret
in
adcb
loopne
inc
jb
cmp
pop
iret
mov
mov
and
int3
movsl
cmp
popf
push
out
cwtl
lods
sub
shlb
imull
mov
or
add
cs
add
dec
cmc
xchg
jmp
jg
and
add
imulb
dec
sbb
cmp
push
adc
stos
clc
adc
test
int
scas
sbb
lods
inc
dec
inc
pop
dec
scas
aas
andb
pop
imul
mov
add
incl
xchg
inc
mov
push
jp
jmp
imul
sbb
lret
or
aas
fisubs
xor
dec
pop
ret
jno
xor
or
lock
inc
sar
inc
add
sbb
in
xchg
cmp
cs
xchg
or
rcrl
cmp
mov
stc
lock
mov
stos
or
sbb
add
inc
insb
pop
push
and
in
push
nop
pop
roll
mov
cmp
mov
pop
push
imul
pushf
jae
hlt
cwtl
and
pop
in
add
sbb
loopne
sub
imul
in
xchg
hlt
dec
test
fcoml
jbe
jnp
mov
jg,pn
push
push
jb
sahf
fistps
add
mov
test
shll
adc
add
lock
sub
pop
dec
icebp
inc
addb
and
add
push
push
out
filds
clc
scas
and
xchg
pusha
push
in
lahf
test
jmp
mov
push
xor
stc
xor
pop
push
repz
xchg
add
mov
sub
push
sbbb
neg
push
sbb
sbb
test
ja
xor
fcoms
add
scas
incl
pop
dec
repnz
sub
call
mov
add
mov
call
jle
aam
mov
mov
jnp
int3
cltd
rcl
jge
add
add
das
pop
pop
movsl
inc
add
or
or
ror
rcrb
sbb
add
movsl
push
sub
or
add
outsl
add
adc
adc
pop
movsl
xor
jmp
inc
and
lahf
xchg
dec
xor
addl
xchg
xor
and
jo
add
adc
sub
and
jmp
xrelease
pop
add
aaa
mov
and
bswap
jo
or
push
mov
pusha
mov
ja
outsb
xor
pop
push
popf
les
sbbb
cmp
add
iret
and
out
xor
inc
inc
sbb
hlt
dec
es
fdivrs
sti
add
jecxz
or
xchg
and
ss
jl
sub
sbb
mov
inc
lahf
ss
add
hlt
adcl
push
xchg
inc
fiadds
sarb
popa
adc
and
add
jbe
add
pop
mov
sbb
into
inc
pop
shl
mov
push
push
sti
jno
add
data16
cmp
sbb
add
cld
es
pop
cwtl
pop
dec
add
fimuls
cli
outsl
push
inc
add
test
ja
sub
fnstsw
sbb
mov
adc
dec
jmp
or
add
fisttpll
add
xor
jno
jp
add
repnz
loopne
out
add
mov
push
sbb
add
stc
andl
mov
and
push
cmp
add
aam
loope
and
fs
das
push
mov
lcall
xchg
xchg
icebp
sbb
fnstcw
testl
test
imul
sbb
cli
jnp
pop
cmp
push
sbb
xor
add
inc
mov
adc
mov
push
xor
call
lret
cmpsl
inc
fsubrs
add
or
stos
les
loop
cltd
jg
hlt
lsl
push
xchg
jmp
stc
jbe
add
or
xor
add
dec
rorb
nop
mov
dec
ja
jg
add
mov
push
test
cmp
imul
xchg
fdiv
addr16
jge
mov
push
xor
mov
loopne
mov
arpl
shl
sbb
iret
mov
repz
inc
dec
and
adc
cmp
roll
xchg
push
add
incb
ja
pushf
ss
jbe
and
imul
aaa
lcall
lea
inc
push
and
mov
sbb
mov
push
inc
jo
add
and
out
mov
lods
xor
fcoml
icebp
add
push
cmp
add
pop
xor
std
es
jnp
add
inc
mov
jns
mov
je
jae
arpl
sub
out
add
xor
rclb
nop
jl
jecxz
inc
add
fmuls
in
or
decb
enter
leave
sub
and
cli
xor
ret
ja
or
and
sbb
cmp
and
mov
aas
testl
rcrb
pushf
pop
xor
lahf
pop
jle
ljmp
imulb
or
push
js
popa
out
add
out
adc
lcall
xchg
cmp
gs
push
mov
ret
mov
insl
add
push
js
and
push
jae
xor
sub
fstpl
stos
dec
add
or
popa
imul
mov
out
lcall
fnstsw
dec
out
xchg
icebp
add
fcoms
fwait
popf
adcl
or
inc
stc
add
pop
cmp
sti
add
out
sbb
insb
xor
enter
mov
or
and
fstpt
add
cmp
pop
pop
aam
nop
jno
jb
repnz
es
ret
fiadds
cmc
icebp
in
add
jbe
mov
pop
mov
je
pop
rorl
loopne
lahf
filds
jb
add
data16
sub
lea
in
sub
add
xchg
out
js
pop
mov
push
aad
rclb
in
jg
shlb
cmp
sti
pusha
pop
inc
jne
arpl
add
lock
int
iret
sbbl
lcall
lods
mov
push
loopne
cmp
cmp
add
jl
arpl
push
cmp
aam
notb
add
mov
cmp
mov
add
add
stos
add
push
aas
adc
leave
or
sbb
gs
repz
loopne
je
push
mov
add
cmp
sbb
adc
xorb
outsb
into
add
cli
pop
cmp
das
test
movb
sbb
test
xor
add
pushf
xor
jecxz
pop
inc
stos
inc
movsl
mov
nop
sub
movsb
xor
fnstenv
ret
arpl
push
add
xchg
jl
and
add
cmp
inc
pop
aaa
rorb
movsl
cmp
sub
cmp
push
or
out
out
lea
aas
mov
xchg
ret
pop
xchg
fsts
ljmp
sbb
pop
pop
movsb
fwait
lods
add
xchg
js
les
mov
pop
or
mov
call
xchg
add
rorb
cmp
jl
add
or
dec
scas
ljmp
mov
cs
mov
movb
xor
add
js
pop
sbbl
xor
sbb
inc
sahf
ficoms
pusha
nop
lcall
lods
adc
aad
out
lock
jae
aas
pop
xorb
sbb
or
sbb
pop
imul
ja
cmc
pusha
dec
cld
pop
push
mov
dec
orl
add
lds
out
and
jl
sub
and
outsb
mov
cmpsl
stos
lret
inc
nop
decb
add
mov
stos
and
add
xchg
jo
nop
add
pushf
add
js
mov
mov
pushl
mov
fbstp
add
and
outsb
cmp
lea
adc
lret
out
xor
cwtl
scas
push
inc
add
xorl
pop
jecxz
add
ror
inc
inc
add
mov
cwtl
add
out
subb
xor
cwtl
enter
fsts
icebp
aas
gs
add
cmp
xchg
arpl
cwtl
inc
add
or
stos
xchg
ret
mov
xchg
and
lds
add
js
aad
add
add
repnz
jbe
pop
lahf
std
divb
jb
imul
xchg
add
cmp
in
adc
xorl
add
test
add
mov
sub
cwtl
dec
sub
fistps
inc
popf
mov
fidivs
fsubrs
push
add
loope
sbb
mov
orb
fwait
stos
jge
cld
out
push
pop
add
das
xchg
push
outsl
and
sub
sbb
jo
add
das
xchg
jmp
sub
sbb
pop
inc
push
shl
arpl
xor
lods
or
xchg
xlat
inc
mov
sbb
mov
pop
mov
dec
movsb
pop
test
rcrl
js
xchg
cli
add
mov
and
leave
push
out
mov
shl
addl
push
lea
sarb
jb
sbbb
int3
cmc
pop
mov
add
es
repnz
jge,pt
adc
mov
shrl
repnz
add
cmp
dec
pushf
jmp
xchg
aas
mov
cltd
add
lods
jl
and
je
fcomps
add
xchg
jle
call
cld
out
mov
dec
add
lods
pop
xlat
xchg
imul
sub
dec
xor
jmp
add
aaa
xor
out
jle
movsl
in
int
mov
dec
add
leave
lods
cmp
inc
add
cmp
cmp
fcoms
pop
test
inc
jl
xor
fists
pusha
push
xor
pop
ja
pop
divl
jecxz
xchg
xchg
pop
add
lahf
add
mov
setle
out
mov
add
insb
call
test
pop
out
sbb
jb
push
push
adc
call
dec
xchg
dec
add
jl
xor
lahf
iret
insl
idivb
call
test
sarl
or
push
push
jnp
xchg
add
test
stc
sub
pop
es
xchg
rol
cmp
dec
aam
jmp
iret
jmp
testb
aas
sahf
fbld
push
fistl
mov
pop
dec
or
adc
mov
sub
fs
sbbb
sarb
cld
inc
cmp
stos
sbb
out
shr
sub
mov
scas
add
push
popa
pop
add
pop
sbb
roll
pusha
mov
incb
add
pop
jne
xchg
push
or
imul
pusha
test
leave
add
in
adc
and
xor
jbe
sbb
push
rclb
cmp
adc
lds
push
add
inc
rcrl
and
and
subb
les
and
push
pop
pop
adc
xor
add
or
inc
cli
daa
add
adc
cwtl
dec
sbbl
xchg
adc
mov
xchg
or
pop
cmpsb
jmp
pop
repz
mov
rcrl
mov
add
scas
push
jo
aam
push
bound
fnstsw
aas
add
addr16
inc
jecxz
out
or
dec
mov
lock
sbb
add
adc
dec
movsl
add
pop
or
sbb
out
pop
sbb
shlb
add
adc
jl
adc
mov
aam
sub
add
aas
and
ds
inc
movb
sub
jbe
pop
ja
pop
cld
add
aam
mov
xor
push
jne
lcall
out
call
adcb
dec
add
inc
inc
sub
fisttps
ljmp
nop
add
push
jns
ljmp
mov
daa
dec
cmp
xchg
or
int3
jae
jne
and
lret
xchg
or
cli
cmp
or
jp
and
ljmp
sbb
pop
push
jae
inc
dec
or
shl
je
inc
pop
cmpsb
loopne
pop
sub
stos
and
mov
mov
add
push
idivl
cmp
fidivs
call
push
and
add
xor
lret
rcrl
mov
xor
xchg
enter
fidivs
mov
xor
inc
adc
add
pop
orb
xor
mov
imul
pop
popf
push
pop
xchg
lock
sbb
add
test
negb
lret
adc
mov
mov
loope
jo
push
mov
xchg
rclb
iret
cmpsb
xor
add
imul
mov
lea
enter
push
fwait
daa
pop
mov
cmc
xchg
add
mov
aaa
imul
test
add
sub
enter
in
lock
and
ds
adc
push
movlps
mov
cmp
and
out
rol
dec
cmpb
out
xchg
imul
ljmp
mov
add
jne
xchg
add
leave
hlt
in
adc
mov
nop
add
jmp
and
or
addr16
sub
dec
xor
add
imulb
and
push
gs
mov
pop
sbb
sbb
adc
ret
shrb
shrb
cmc
xchg
add
sbb
sbb
xchg
filds
jb
push
aad
adc
dec
fidivrl
mov
inc
sbb
xor
daa
cld
add
ja
cmp
add
roll
add
and
scas
adc
jo
pusha
cltd
js
insl
push
pop
subl
jg
lret
lock
jo
mov
lea
xchg
add
lret
aam
sbb
fs
lcall
fbld
inc
int
in
mov
add
mov
sbb
pushf
add
adc
mov
or
jno
add
sbb
dec
jnp
iret
jns
and
push
repnz
repnz
call
sahf
testb
or
add
and
addb
mov
test
les
shlb
dec
push
mov
mov
js
mov
push
std
sahf
cld
pop
push
and
dec
ret
mov
fiaddl
xorb
cmp
push
enter
ret
lods
mov
sbb
cld
mov
dec
addb
jmp
iret
and
cmp
fisubs
cmp
fs
cmp
sbb
add
xor
push
sub
or
mull
rolb
fnstsw
imul
dec
push
daa
sub
add
pop
push
xchg
out
add
sarb
sub
mov
sbb
adc
dec
sbb
fists
add
stos
mov
xor
mov
sub
lret
aad
pop
xor
dec
adc
mov
aam
imul
add
repnz
xchg
cmp
fistpl
mov
pop
pushw
lods
mov
push
push
rclb
or
dec
loope
mov
cmpl
hlt
testl
and
ja
or
or
aas
addr16
add
call
sbb
cli
subb
in
add
data16
hlt
loopne
push
inc
add
fnstenv
pop
scas
sbb
xchg
or
dec
add
or
add
std
add
mov
mov
js
inc
pusha
pushf
mov
inc
mov
jl
ljmp
inc
rcl
ret
clc
aad
push
jo
xchg
rolb
adc
add
jg
sub
mov
mov
jp
inc
jbe
add
inc
jl
sarb
push
cmp
xchg
add
jne
pop
mov
in
shl
push
mov
in
hlt
mov
adc
iret
outsl
nop
lds
loopne
dec
lcall
jns
jl,pt
push
xchg
pop
cmp
addr16
jne
add
test
add
dec
cmpsb
jmp
adc
out
and
mov
push
sahf
jb
rcrb
fwait
leave
push
les
fstps
lahf
ljmp
or
jle
mov
cld
popa
dec
dec
or
add
fbld
add
and
adc
mov
push
add
push
pop
jp
push
ret
sbb
push
repnz
sub
inc
push
jb
adc
pop
out
push
es
loopne
negl
pop
or
sub
loopne
addr16
xor
mov
mov
mov
sub
aam
add
int
mov
jno
jns
jae
push
add
add
je
or
out
push
fsub
mov
inc
pop
push
js
cmp
jns
mov
test
repnz
jge
jle
inc
inc
in
fwait
add
cmpsl
inc
xchg
int3
push
je
add
pop
push
es
mov
movsb
cmp
xor
add
mov
push
sub
add
inc
pop
mov
aas
lcall
int
imul
xchg
dec
aam
nop
lret
adc
icebp
test
xchg
or
sub
add
jne
lock
add
mov
sub
out
add
sbb
sti
arpl
sub
cmp
xor
mov
xchg
xor
mov
add
roll
les
sbb
or
aad
push
add
add
leave
test
dec
and
and
cwtl
xchg
xor
pusha
jmp
js
adc
xor
push
xchg
push
popa
ljmp
jmp
mov
das
ljmp
lods
inc
xchg
pusha
jno
add
sbb
add
nop
ljmp
je
in
mov
add
jno
popf
jecxz
sbb
cld
std
mov
add
inc
or
add
in
cmp
daa
push
in
imul
adc
in
or
insb
adc
sbb
je
pop
mov
adc
aaa
push
add
clc
cmpsl
and
test
push
or
xorl
xor
mov
add
data16
jno
sub
jl
mov
lea
rclb
sbb
pop
in
rcr
dec
es
ja
dec
pusha
add
cli
jmp
jo
sub
xchg
mov
mov
add
or
dec
add
mov
mov
imul
inc
shr
pop
push
mov
sbb
les
mov
push
or
lods
clc
adc
shlb
and
es
int3
push
fdiv
stos
inc
jecxz
ror
das
cld
clc
mov
into
outsb
repz
add
sub
sbb
mov
and
inc
push
mov
cmc
cmpsb
int
cltd
call
shll
aaa
mov
sbb
aas
xor
movb
cli
lds
nop
rcl
aas
add
into
in
add
pop
dec
xlat
add
nop
xor
popa
add
and
mov
aaa
test
das
pop
cmp
or
out
fldl
jmp
in
add
mov
jnp
adc
push
loop
jp
cld
pop
push
addl
mov
jmp
xor
sub
testl
pop
jnp
dec
mov
dec
add
pop
add
mov
stos
mov
in
add
pop
data16
xor
mov
into
lret
jns
test
or
dec
add
popa
sub
sub
cmp
add
mov
and
adc
adc
sbb
jnp
pop
ljmp
cs
sahf
sub
dec
dec
movsb
add
dec
loopne
sbb
inc
je
dec
xor
mov
ja
add
dec
add
add
fildl
mov
sub
imull
incb
sub
es
dec
data16
add
pop
push
push
iret
dec
call
movsb
insb
lahf
add
cli
fs
pusha
sbb
nop
or
inc
sub
add
mov
gs
ja
cmp
add
pop
rcrb
sub
pop
or
mov
mov
add
sub
aas
dec
cli
filds
loope
lds
fadds
aam
add
mov
jmp
mov
arpl
repz
xorb
xor
in
pop
adcb
jno
xchg
push
mov
sbb
push
mov
pop
add
sub
xchg
mov
mov
lods
mul
add
sub
orl
lock
ret
icebp
clc
jl
add
inc
or
or
pop
xchg
in
or
sar
push
ret
add
jle
add
test
add
imul
xor
cmp
and
xchg
add
lods
jno
push
dec
adc
pop
xlat
jo
rcrb
and
in
imul
sti
push
adcb
shl
incl
aad
cmpsb
fwait
sahf
xor
dec
adcl
lods
fs
outsl
scas
mov
aam
popf
add
roll
add
pop
and
cmc
cmp
push
in
sbb
shlb
or
fadd
pop
jnp
jl,pn
scas
insb
imul
add
scas
addr16
fwait
movb
out
adc
std
mov
add
sub
jne
add
adc
pop
push
mov
lds
cmp
add
push
call
and
pop
mov
es
inc
inc
adc
mov
xor
mov
and
sbb
cmp
or
or
sbb
mov
dec
add
loope
std
inc
cld
js
mov
xchg
pop
lea
test
xor
das
iret
adcb
pop
je
sbb
cmpb
push
dec
stos
sbbb
shlb
lcall
jo
mulb
popl
push
in
sbb
add
sbb
sub
jp
inc
xchg
adc
cmp
shrl
mov
dec
insl
sub
loopne
enter
fcomps
lea
sub
sub
cmpb
rclb
cmp
out
jmp
mov
mov
fs
xorl
push
in
pop
mov
jae
and
mov
test
test
or
cli
cwtl
pusha
je
push
je
sarb
lods
cltd
fldl
rcr
adc
adc
and
add
jmp
icebp
inc
outsb
xorb
add
aad
mov
or
data16
sti
mov
arpl
in
jge
jae
inc
inc
add
xchg
push
lds
movsl
xchg
aad
mov
and
inc
rol
or
mov
shrb
lock
ficompl
cmp
dec
xchg
mov
aas
mov
xor
lds
je
add
cmpsb
jnp
mov
mov
rolb
and
repnz
pop
mov
lds
out
inc
repnz
shll
adc
add
push
cmp
pop
cmp
sti
push
fiadds
fdivl
popa
add
aam
mov
jno
add
sbb
std
xchg
inc
mov
int
js
add
loop
mov
les
notl
in
xchg
ljmp
jp
inc
xchg
scas
mov
testl
jbe
loop
es
call
add
cmp
flds
sbb
pop
pop
adc
add
pushf
inc
in
xor
lock
push
sub
ds
add
push
je
and
add
xor
mov
mov
add
mov
popa
fisubs
push
adc
sahf
imul
mov
mov
adc
cmp
dec
sub
xor
aaa
leave
sub
pushf
add
mov
loop
sbb
jecxz
pcmpeqb
dec
call
mov
aam
push
pop
aad
mov
jns
icebp
fs
jl
sub
mov
sub
out
je
mov
adc
adc
arpl
push
imul
add
mov
mov
loope
inc
mov
pop
data16
outsl
in
add
pop
or
movl
inc
dec
dec
and
jno
sbb
aas
ja
adc
sbb
mov
cmp
in
adc
inc
push
mov
test
pop
mov
ret
inc
cwtl
inc
mov
add
movsl
push
hlt
into
jmp
push
dec
in
insl
or
popa
mov
mov
sahf
mov
stos
test
rorb
ret
jnp
lret
shlb
push
ds
ficoml
pop
shlb
add
sbb
sub
rcr
push
or
add
push
cwtl
cld
das
add
cli
rol
or
push
nop
and
rcrl
or
mov
jbe
jg
sbb
test
addr16
cwtl
fimuls
nop
cmp
push
cld
pusha
mov
dec
lods
mov
xchg
mov
enter
repz
pop
sti
iret
inc
dec
addr16
stos
shlb
add
or
sub
jmp
enter
push
sub
sbb
mov
pop
mov
shlb
cld
dec
and
loop
movsl
pusha
pushf
std
sti
mov
es
repz
mov
dec
popf
fwait
paddd
adc
clc
test
mov
add
filds
clc
enter
mov
lods
shrb
mov
jge
adc
and
mov
dec
jo
lods
add
lea
lds
xchg
add
mov
test
and
inc
in
pop
push
ror
mov
add
bound
ret
xor
test
cli
xorb
icebp
xor
sti
xor
xlat
adc
cwtl
movb
fists
add
xchg
jg
or
pop
and
adc
movsb
rol
mov
stc
inc
loopne
mov
punpcklbw
and
icebp
jg
cmp
arpl
add
push
popf
mov
xchg
inc
add
ret
add
mov
jge
and
sbb
mov
push
pusha
test
hlt
add
aad
icebp
fstl
mov
cmc
add
dec
out
add
sub
add
inc
fisttps
cmpsl
rclb
push
fcoms
in
addb
pop
int
inc
je
sbb
sub
jecxz
outsb
lods
cmp
mov
push
sti
sarl
or
test
push
jns
mov
inc
mov
flds
xor
push
cwtl
cmpsl
pop
dec
roll
movsb
add
decl
mov
imul
xchg
xchg
lock
add
daa
add
repnz
push
jne
jbe
xchg
in
push
cltd
inc
and
sbb
lcall
jl
pop
add
test
xor
xor
or
pusha
sbb
pusha
jns
sbb
cs
arpl
das
cmp
and
and
push
js
insb
mov
add
sub
dec
cmp
sub
aam
lods
in
cmp
in
imul
jns
sahf
shll
or
xor
loopne
movsb
sub
repz
sbb
jle
hlt
gs
mov
nop
test
arpl
pop
test
shr
add
fmuls
and
inc
or
mov
in
mov
mov
hlt
pusha
push
pusha
fnstsw
add
cli
sbbb
mov
popf
mov
fildll
cmp
mov
cmpsl
call
fcoms
inc
mov
out
mov
and
js
outsb
shlb
test
xchg
std
int
ret
rclb
dec
or
cmp
pop
pop
dec
sbb
and
dec
rclb
xor
inc
loop
in
dec
push
inc
push
push
add
push
cmpsl
stos
movb
push
fcomp
or
and
add
cwtl
add
repnz
jp
add
in
frstor
jno
lahf
and
adc
add
push
rcrl
mov
mov
mov
mov
dec
ret
rolb
mov
jb
push
call
orl
in
sub
or
xor
and
push
ret
cmp
pop
push
shrb
ljmp
shlb
fsub
cld
mov
lcall
adc
mov
daa
lock
pop
inc
inc
test
fsub
jmp
cmp
ficomps
repz
mov
mov
fwait
hlt
flds
ret
fsub
cmp
insl
add
mov
rcrb
xchg
lock
cmovnp
cmp
sahf
jle
test
es
add
nop
cmp
ja
sarb
inc
mov
lock
cwtl
add
insl
add
or
and
cmpb
aaa
mov
fadds
inc
insb
fiadds
outsb
shr
jo
addr16
adc
xor
mov
push
or
xchg
out
cmpsb
iret
add
mov
dec
push
sub
fildll
sbb
shlb
subb
sub
pusha
andb
fimuls
mov
test
outsl
add
or
rcrb
dec
add
dec
flds
push
sarl
fldl
test
dec
fidivrl
loopne
repz
rcrb
test
adc
inc
xor
rcrb
add
pop
dec
sbb
nop
add
mov
jecxz
shrb
arpl
pusha
cwtl
test
pusha
ret
jp
and
inc
jae
lds
mov
cmp
add
pop
inc
mov
push
xchg
dec
rcr
xor
add
rep
mov
sub
or
dec
addb
sahf
es
mov
in
mov
mov
jmp
xchg
and
pusha
iret
roll
mov
xor
in
cmpb
sub
push
int
mov
jmp
lcall
jo
or
movsl
ret
roll
lock
pop
jle
mov
dec
xor
inc
clc
mov
xor
mov
fcomps
rcrl
add
pop
sti
mov
out
out
cmpb
xchg
push
add
xor
sub
lret
xor
and
add
movsl
imul
insl
dec
jo
push
test
inc
jl
orl
mov
jne
hlt
add
add
ret
hlt
shlb
xor
mov
sub
ret
jmp
adc
push
pop
out
mov
iret
movsl
inc
jbe
push
xor
mov
cmpsb
push
rolb
or
cwtl
inc
into
mov
aaa
and
arpl
clc
or
jmp
dec
cmp
js
insb
dec
cmp
lods
push
imul
leave
pusha
les
xor
jb
sub
push
add
sbb
xchg
sbb
mov
mov
pop
add
js
xchg
sub
or
mov
cmovl
pop
jmp
push
ret
mov
rclb
or
adc
mov
addr16
dec
sbb
adc
out
add
pop
sarb
push
arpl
repnz
sub
punpcklbw
popa
cmp
fsubs
mov
jno
sbb
insl
or
cmp
scas
mov
adc
adc
jl
pop
leave
sete
enter
add
xor
in
arpl
sub
cs
sub
add
push
popa
lret
out
xor
and
hlt
je
adc
cmp
leave
in
loopne
rcrb
jecxz
cmp
jo
aam
test
jo
adc
sbb
dec
jns
pop
cmp
adc
jnp
add
adc
dec
sbb
add
adc
bound
in
or
ret
add
jg
clc
mov
inc
ficoml
pop
push
negb
aam
pop
add
insb
mov
hlt
cmp
bound
jmp
jp
add
addl
jle
mov
mov
xorb
mov
adc
neg
xchg
xchg
prefetchw
mov
push
add
cwtl
ret
jno
sbb
mov
xchg
pusha
or
stc
loope
pushf
xchg
cltd
lret
lods
fildl
or
and
das
inc
js
sub
les
data16
jp
movaps
bound
pusha
imul
or
add
icebp
insb
data16
jne
add
mov
inc
add
mov
mul
xor
pop
add
pop
int3
or
and
fisubs
test
fs
outsl
mov
orb
mov
in
adc
adc
dec
in
inc
mov
and
push
mov
insb
inc
fistpll
pop
cmp
xor
shl
daa
shrb
add
mov
pop
and
add
sbb
jl
mov
sbb
insl
mov
pushf
inc
add
mov
add
sbb
cmpsl
jb
sahf
das
jbe
add
dec
outsl
es
inc
push
jo
push
jg
jle
negl
jno
pushf
and
pop
adc
out
xchg
xchg
xchg
add
inc
push
sahf
add
mov
jmp
push
aad
ret
dec
loopne
daa
mov
cmp
add
xor
push
lods
rolb
imul
pop
repnz
cmp
xchg
cmp
loopne
push
popa
add
aaa
stos
lods
outsb
cmc
arpl
or
insl
add
xor
cwtl
pop
dec
xor
idivb
add
jmp
add
add
pop
mov
mov
mov
mov
add
mov
rorl
notb
pushl
sbb
pop
pop
xchg
pop
lods
and
push
sahf
inc
mov
and
jle
jmp
inc
dec
es
add
fdivs
mulb
andb
add
jne
in
outsl
push
arpl
and
add
inc
pusha
fwait
jno
inc
addr16
add
xchg
cmp
and
push
enter
sbb
pop
arpl
mov
or
out
test
fsubl
xchg
mov
rorb
pop
andb
enter
mov
movsb
icebp
xor
in
sbb
outsl
xchg
es
mov
sub
movsb
mov
data16
test
xchg
or
in
ret
or
dec
add
lcall
aam
lahf
and
outsb
test
out
daa
add
pop
mov
pop
inc
add
mov
cli
fsubrs
test
or
mov
gs
mov
adc
pop
pop
mov
int3
jecxz
subb
xlat
cmpsl
add
mov
and
in
test
js
xchg
scas
sbb
int
jecxz
add
and
cmpsl
add
stc
shll
push
sahf
test
sar
push
das
adc
pop
rolb
or
xor
andb
cmp
push
lods
pop
mov
and
cs
pusha
ss
add
jmp
out
mov
jl
xor
xor
jb
repnz
xchg
addb
push
in
cmp
add
cmp
jo
xchg
jno
push
imul
dec
inc
fdivs
pop
or
cwtl
push
idiv
shlb
mov
mov
pop
mov
sbb
testb
add
shl
cmp
inc
cmp
xchg
scas
into
pop
aaa
lods
std
push
cltd
ds
sub
test
test
push
xchg
cmp
sar
push
or
and
mov
push
push
push
pop
movsb
xor
xor
xchg
push
xorb
cmp
xor
add
cmpsl
add
lahf
cmp
mov
test
inc
ds
pushf
sti
or
pusha
cmp
mov
cmpsl
and
adc
fcomp
dec
imul
sub
cmp
decl
or
outsb
pop
sub
add
xchg
mov
je
into
scas
out
jl
add
addr16
add
sbb
mov
cmp
addr16
adc
fsubr
outsl
xor
pusha
adc
sub
inc
mov
mov
pusha
mov
and
xchg
jb
addl
rcrb
and
push
mov
imul
adc
xor
or
ds
xor
fdivp
flds
add
aas
jbe
out
inc
and
jecxz
jae
outsl
dec
mov
push
lock
dec
nop
inc
or
adc
push
xor
pop
dec
pop
and
mov
addb
adc
lret
fs
pop
add
loopne
sbb
outsb
ljmp
les
cmp
inc
daa
add
lret
imul
cmp
js
push
pop
or
adc
and
lcall
sti
dec
sbb
pop
arpl
add
sbb
leave
add
mov
inc
push
sbbl
xchg
ss
xchg
jae
add
jge
scas
push
sarb
ljmp
in
add
gs
inc
imul
arpl
incl
fldenv
xor
pop
xor
dec
pop
push
lret
sbbl
jl
cli
decb
cmp
test
pop
movsl
push
jge
mov
jo
cltd
inc
into
sub
in
add
xchg
inc
call
sbb
add
into
jle
mov
pusha
fwait
lods
sbb
int
pop
je
shlb
out
sub
js
add
cmp
test
push
cwtl
mov
sub
lock
mov
adc
jno
popf
js
shl
mov
add
lock
arpl
fucom
jle
lods
testl
mov
push
jo
cmp
subb
jmp
xchg
ret
sub
sbb
hlt
cmp
and
add
and
sbb
add
sbb
fcoms
xor
adc
pminub
fwait
push
pop
xor
adc
jge,pn
add
test
sub
dec
and
mov
div
push
ss
mov
xchg
cs
cmp
arpl
leave
into
mov
sbb
call
sub
test
add
mov
and
cmp
out
xor
mov
xor
jne
xor
iret
js
pop
mov
push
xchg
rcl
adc
add
xor
mov
mov
or
jnp
add
imul
jmp
pop
mov
cmovo
and
mov
xchg
gs
sbb
or
and
enter
cmc
inc
pop
add
push
xor
loopne
add
xchg
rcr
cwtl
xor
mov
push
pop
adc
adc
add
jo
push
mov
js
and
adc
outsl
add
cmpsl
stos
bound
or
and
xor
sbb
lret
or
sbb
andb
jmp
push
negb
adc
xor
inc
lahf
push
push
mov
testb
mov
loope
iret
ljmp
out
jne
outsl
cmpsb
and
cmc
scas
lds
mov
iret
in
add
movsl
shl
clc
fcompl
ds
fwait
cwtl
subb
fisubrl
cmpsl
popa
mov
xorb
cmp
into
jne
loope
push
jb
out
jmp
cmpsb
pop
roll
clc
testl
pop
test
cmp
movsb
ret
iret
out
cmp
gs
adc
dec
stos
enter
and
add
into
mov
addb
roll
and
testb
testl
fisubrl
xchg
or
in
mov
cmp
daa
aas
pop
add
and
jb
pop
shlb
das
mov
mov
lds
push
test
or
mulb
xor
out
push
rcrb
xchg
adc
add
pop
sbb
dec
add
rolb
mov
lea
mov
inc
push
push
push
push
adc
in
mov
insb
mov
orb
nop
fdivrl
mov
testl
shlb
jmp
xchg
and
mov
push
lock
and
jp
xchg
jb
add
mov
pop
sub
adc
inc
cld
sub
add
xor
mov
jns
push
pop
xorb
out
loop
call
jp
adc
dec
add
int
pushf
pop
test
lock
cltd
or
add
dec
jo
cmp
mov
xor
cmp
push
mov
rcrb
jb
or
in
sbb
out
add
pop
enter
and
bound
add
push
out
adc
adc
inc
jg
jp
sub
in
add
ljmp
roll
push
stos
popa
nop
je
mov
dec
add
add
scas
xorb
cmpsl
scas
push
into
adc
or
add
pusha
xchg
and
scas
je
jmp
add
lret
or
insb
cmp
xor
int3
test
add
jp
xor
xchg
clc
mov
aam
jle
subb
mov
fiadds
int
xor
and
repz
fstpl
in
iret
repnz
xchg
dec
ja
bound
pusha
add
and
fisttps
rorb
mov
unpckhps
ret
and
sub
jl
add
js
jp
adc
add
adc
out
mov
in
mov
adc
es
pushf
std
push
shrb
xchg
add
cmp
jg
imul
cltd
xchg
and
loopne
fs
lahf
mov
jne
mov
add
pop
pop
push
fistpl
fstpl
sti
in
pop
fs
jle
sahf
fisttpll
lcall
dec
ja
and
cmp
out
pop
and
enter
ud1
dec
jmp
orb
sub
add
rcrl
nop
push
adc
add
dec
pushf
cmpl
xor
movsb
int3
pop
adc
loop
shl
xchg
test
pandn
imul
out
lock
jecxz
xchg
push
cmpsb
cmp
or
fnsave
test
fcoml
or
add
pxor
inc
sub
filds
xor
xchg
mov
xchg
fadds
clc
in
iret
push
xchg
mov
inc
add
gs
mov
sbb
orl
mov
fwait
js
mov
mov
les
inc
jp
into
sbb
je
cvttps2pi
imul
std
push
scas
cmpb
mov
cwtl
and
notl
addr16
mov
adc
jp
mov
test
xor
xor
jns
inc
pusha
add
test
pmaddwd
add
jne
jg
ljmp
push
jp
jmp
and
lods
pop
shlb
push
test
rolb
jnp
mov
cs
add
xlat
into
or
jl
mov
dec
cmp
add
das
sbb
xchg
xor
xor
xchg
rolb
push
pop
orb
cmp
jb
dec
add
xor
fcmovu
xchg
pop
push
stc
jecxz
pop
outsb
dec
and
lods
xchg
push
or
aas
popf
jne
add
dec
pop
fcoml
insl
adc
aaa
incl
ljmp
leave
pop
in
jecxz
lods
sbb
jb
mov
mov
imul
xchg
or
stc
in
imul
jne
push
add
out
rolb
add
and
repz
cmp
psraw
outsl
insb
test
ficoml
xor
orl
sub
test
sub
lahf
sbb
iret
stos
jp
or
sti
xlat
add
push
pop
add
mov
clc
add
or
call
jmp
cs
dec
in
dec
jmp
mov
dec
add
jl
sbb
xor
in
scas
adc
std
ret
cmpsl
movsl
add
test
in
push
scas
inc
add
push
loope
rorb
inc
jne
imul
jg
add
mov
add
cmp
aaa
test
cwtl
sub
inc
pushf
cmp
push
add
sbb
mov
mov
movhps
in
or
inc
lods
mov
pop
add
iret
mov
movl
xchg
das
sbb
sub
adc
xor
adc
xchg
movsb
mull
mov
insb
aam
gs
sbb
jp
dec
dec
push
add
les
xchg
popa
idivl
lods
push
xchg
or
mov
insl
in
jge
inc
pop
out
push
std
jae
adcb
shlb
fildl
lret
pop
imul
enter
aas
pop
sub
jl
shll
add
sbb
cmp
jns
add
in
add
in
shrl
fisubrs
dec
imul
adc
call
jnp
cmp
test
add
or
enter
fmull
sbbl
mov
adc
pushf
jnp
add
fidivs
lret
shlb
and
inc
mov
icebp
jp
add
pusha
adc
lea
sbb
add
add
daa
imul
cmc
je
adc
pop
mov
imul
test
inc
inc
sti
dec
aaa
inc
and
adc
and
push
pop
inc
xor
mov
adc
mov
mov
and
and
jbe
stos
movl
fs
fs
sub
push
adc
inc
popf
adc
sub
inc
cmp
in
mov
mov
sbb
sbb
add
daa
push
add
inc
repz
cmp
cmp
pop
das
add
inc
gs
pop
add
flds
mov
add
add
scas
add
cmpsl
imul
add
push
mov
stos
hlt
iret
int
jb
mov
add
sbb
faddl
sub
dec
fsts
cmp
sub
jmp
push
inc
xchg
popf
incl
add
and
mov
loop
pop
sbb
lods
push
and
mov
sub
leave
xchg
scas
nop
stc
adc
push
lcall
add
xlat
xchg
ret
out
push
add
das
fwait
daa
cmp
lods
aaa
jecxz
pop
or
jo
mov
mov
and
ljmp
dec
add
nop
and
add
neg
mov
inc
add
mov
and
out
sbb
adc
shlb
sbb
sbb
shlb
fildll
add
push
dec
adc
mov
mov
and
add
mov
mov
dec
add
mov
inc
out
add
add
pop
xor
xchg
ffree
sub
xchg
subl
xchg
mov
aam
mov
addr16
cmpsb
in
add
pop
pop
adcl
in
add
mov
rcrb
cmc
mov
and
sub
lcall
mov
repz
daa
lds
xorb
jne
mov
mov
and
jp
outsb
stos
xor
pop
mov
pop
sub
loopne
sub
roll
fldenv
xchg
and
ja
pusha
add
sar
add
imul
inc
aas
rcl
subl
lods
sbb
add
xor
inc
es
in
xchg
cmp
mov
xchg
aam
imul
jle
jg
addl
lea
cli
jp
add
or
add
fisttps
fucomp
sti
adcl
xchg
push
cmp
inc
cld
punpcklwd
mov
iret
sub
adc
pop
gs
inc
inc
fdivl
mov
mov
imul
mov
push
jg
fdivrs
add
xor
sbb
imul
cmp
pop
add
mov
arpl
xor
int
xacquire
sbb
loope
pop
jns
mov
add
push
leave
or
push
add
hlt
ss
and
add
cld
cltd
stos
cmp
sub
sub
or
repz
dec
jno
mov
orb
mov
sub
rclb
ljmp
fsubl
and
or
push
clc
sbb
out
clc
sub
push
fcom
cmp
or
cld
movsb
loope
pop
pop
int
adcb
adc
icebp
push
and
int3
ja
sbb
lret
push
add
rorl
add
adc
jo
aaa
jno
push
add
mov
adc
jo
push
lea
mov
and
and
in
dec
addr16
jp
loopne
add
enter
in
or
movsl
xchg
push
sbb
add
mov
inc
js
push
push
mov
mov
add
loope
in
shl
push
fldl
lcall
dec
or
jb
int3
xchg
nop
jne
nop
aas
data16
subl
inc
into
arpl
dec
ss
test
sbb
sub
push
mov
lock
pop
add
stos
pop
fdivrl
xchg
lods
sarl
fwait
adcl
pop
inc
test
ja
mov
pop
testl
sbb
xchg
mov
pop
int3
mov
adc
sahf
xchg
clc
inc
cmp
cmpb
push
int
inc
xchg
rcrl
and
or
ret
push
inc
pop
pop
sbb
add
out
jns
add
shll
add
enter
mov
jno
mov
ss
or
pop
add
jb
inc
mov
push
test
leave
testb
imul
mov
popl
ret
and
outsl
add
fldenv
and
jp
loopne
xchg
pop
loope
jbe
or
pop
cmpsl
test
add
mov
insl
add
push
adc
mov
shll
cmp
add
xchg
fcompl
inc
add
or
insb
adc
inc
repnz
sub
lock
push
iret
stos
mov
sbb
sub
ss
mov
scas
rol
data16
lods
add
jmp
mov
fnstenv
jo
add
clc
outsb
cmp
add
pop
add
adc
add
adc
test
push
and
cwtl
adc
je
into
add
inc
push
dec
lret
add
inc
sub
popa
jne
nop
pop
cmp
cmp
scas
aaa
dec
popf
and
cld
stos
add
pop
jecxz
mov
and
sbb
add
cs
popl
xor
sbb
xchg
add
jo
xchg
push
jns
in
add
sbb
cld
ret
shll
dec
sti
rcrb
sub
sbb
les
sahf
pusha
out
testl
mov
and
add
addr16
dec
mov
jl
push
jo
pop
mov
data16
ffreep
adc
xchg
jmp
shll
enter
push
mov
inc
mov
dec
fmuls
xchg
adc
inc
xchg
daa
xchg
cmp
mov
add
pushf
aam
lock
sbb
movsl
fldl
lcall
icebp
cmpsl
lret
mov
rcl
fnstsw
in
pusha
add
jb
pushf
add
push
xor
jae
xchg
add
and
bound
loopne
outsb
in
mov
fwait
cli
inc
add
add
dec
mov
inc
hlt
add
lods
mov
dec
add
add
dec
popf
jb
adc
cmp
sub
push
add
xlat
xor
aam
inc
sbb
ret
ret
sar
roll
fnclex
aam
test
add
or
stos
sbb
in
add
mov
push
adc
fidivl
sub
mov
out
pop
sbbl
cmp
dec
shl
sub
stos
rcrb
xor
add
xabort
xchg
sbb
jb
nop
add
adcb
pop
lea
add
pusha
lods
sub
clc
and
jmp
pop
fidivrs
in
dec
in
jns
aaa
jmp
insb
hlt
add
ljmp
add
das
sub
add
inc
sub
movsl
mov
fstl
sub
cld
loope
inc
ss
js
push
and
cmp
inc
out
sub
mov
insb
lret
xor
mov
push
inc
and
in
mov
fdivrl
out
clc
fistpll
test
nop
push
lcall
loop
xor
rcrb
add
fmull
mov
cmp
xchg
hlt
add
cmpsb
call
mov
pop
cs
add
xchg
lock
sub
push
pushf
xor
jbe
push
inc
in
mov
gs
mov
rclb
add
jg
imul
inc
mov
fincstp
arpl
sbb
test
cmp
add
ljmp
icebp
mov
daa
add
clc
jne
dec
add
lahf
popf
or
bnd
dec
push
jl
xor
aaa
addl
cmp
rcll
pop
js,pn
push
cmp
ljmp
push
insl
mov
cmc
mov
jl
cs
inc
stc
hlt
and
dec
add
int
mov
push
orl
add
mov
sub
push
ds
insl
cmpsl
clc
cmpxchg
rcrb
add
xchg
and
inc
push
or
das
xchg
or
mov
shrb
mov
int
or
xchg
inc
push
add
xor
mov
mov
pushf
js
mov
lret
adc
add
xor
loop
xchg
cmp
mov
lret
pop
pop
mov
sahf
int3
cmp
add
or
cld
fisubrs
jae
add
mov
rcrl
add
ss
fwait
cmp
dec
orb
push
shrl
sub
adc
add
inc
dec
or
pop
xchg
movsb
mov
insl
mov
jnp
sahf
iret
fists
add
cmpsb
add
sub
jle
sub
fistps
inc
inc
insb
lea
cwtl
mov
fwait
xor
mov
in
and
popf
adc
adc
in
sbb
stos
push
in
pop
test
dec
and
test
add
xor
add
in
push
cmp
sar
and
and
arpl
mov
dec
adc
shrb
or
inc
cwtl
jmp
push
ret
pushf
add
ss
es
push
jecxz
cltd
xchg
mov
cmp
outsb
int3
mov
loop
mov
push
cld
rolb
divps
cmp
xchg
in
push
mov
insl
stc
add
mov
pop
mov
or
fwait
pop
cmp
cltd
or
mov
int
shrl
pop
jmp
pop
mov
popa
loop
add
fucomp
cmp
mov
mov
aaa
sbb
imul
icebp
add
out
jmp
pusha
int3
xchg
pop
jnp
mov
inc
test
xor
aad
mov
daa
jo
dec
pop
xchg
push
fistpll
test
flds
jp
mov
lods
xchg
outsl
inc
ficoms
inc
pop
pop
pop
dec
mov
add
imul
mov
xlat
mov
push
push
clc
xchg
add
pop
pushf
cmp
fucomi
out
mov
push
cmp
enter
loopne
stos
lret
add
or
aas
fldcw
lcall
sbb
movsb
dec
add
push
push
shll
out
andl
pushf
push
mov
jecxz
mov
bound
mov
pusha
sbb
test
lea
pop
pusha
and
add
sub
add
or
mov
xchg
add
jbe
add
in
bound
add
mov
push
sbb
push
cmp
jne
mov
fs
addr16
jae
incl
ret
aad
rcrb
cmp
push
add
inc
adc
pop
jno
movsb
push
ljmp
ss
int3
mov
data16
or
jp
push
movsl
into
adc
into
loop
orb
inc
sbb
push
fisubrl
add
and
loopne
les
in
add
push
pop
jge
add
mov
xor
xor
inc
sbb
pop
add
adc
dec
xor
sub
es
lods
cld
jecxz
ss
cmp
mov
add
or
push
adc
ja
leave
nop
loope
test
pop
or
xor
aas
inc
mov
js
aam
dec
add
rclb
shrl
inc
jno
js
xor
sub
cmp
add
push
gs
lahf
xchg
xchg
test
fiaddl
mov
loopne
aaa
and
repnz
jge
imul
lds
push
or
xor
inc
or
mov
jmp
shll
add
stos
imul
rolb
sub
adcb
imul
addr16
mov
cmp
inc
pop
jae
dec
lods
scas
and
inc
fsubrs
call
xor
pop
push
test
push
sahf
js
addr16
sub
xchg
movb
xchg
mov
aas
lock
cmp
push
adc
insl
add
jg
and
pop
aas
push
sub
mov
iret
shll
cmpsb
movsl
pop
sub
and
mov
xchg
sub
enter
mov
out
adc
mov
dec
xchg
sbbb
popa
lret
cmpl
jl
cwtl
sub
gs
lret
pop
pop
mov
lock
faddl
data16
jmp
call
xchg
and
push
inc
inc
js
inc
jecxz
or
nop
adc
rorb
je
mov
jecxz
jle
xor
fdivrs
jo
pop
add
sub
in
mov
xorb
les
add
add
clc
shr
jl
sbb
push
xchg
leave
or
xchg
mov
mov
pusha
or
add
lcall
add
pop
stos
dec
or
mov
xchg
sub
push
imul
addr16
mov
sbb
adc
repz
shl
gs
mov
jge
fiaddl
pop
jno
aad
jl
hlt
add
push
fsubrl
repz
add
mov
add
add
call
add
sub
push
add
xlat
addr16
xchg
dec
and
add
iret
data16
lcall
sbb
negb
xchg
inc
jno
sbb
cmpsl
fldl
in
push
jae
repnz
adc
inc
scas
lods
dec
les
mov
add
jmp
pop
pop
unpckhps
cmp
cmp
movsb
jmp
aaa
push
push
addb
loopne
push
add
into
fldcw
add
aam
cmp
adc
ljmp
add
mov
pop
rolb
sbb
pushl
jp
push
bndldx
jg
xor
add
insl
fwait
mov
cwtl
pop
cmp
testb
and
mov
cwtl
sub
add
loop
add
movsl
xchg
xchg
adc
ror
fsubrs
jle
add
cmp
test
jno
sbb
sbb
lods
xor
and
push
mov
mov
add
in
pop
mov
push
in
mov
add
push
xchg
rorl
jbe
xchg
push
sahf
and
pop
or
lods
pop
mov
test
leave
out
loop
add
stos
push
addr16
jle
out
cmc
outsl
int
enter
add
mov
bound
frstor
out
xchg
lea
cmp
testl
ret
loopne
idivl
ficomps
mov
mov
call
sbb
out
dec
aad
mov
or
hlt
sbbb
rcll
add
adc
arpl
scas
push
fnstenv
aas
cmpsb
fmull
adc
xor
aam
and
cmp
push
sub
add
mov
lcall
fisubl
sub
scas
and
mov
jl
outsl
inc
arpl
push
je
in
stos
add
jp
pop
sub
cwtl
mov
iret
add
add
lea
push
jnp
subl
mov
add
pop
mov
add
sbb
cmp
xlat
call
pop
push
jmp
sarl
push
insl
sub
es
cmp
and
sub
add
dec
lcall
pusha
and
pop
andb
or
cwtl
bnd
lahf
test
sbb
push
sbb
pop
ret
add
rcll
fdivl
push
outsl
sbb
cld
cwtl
mov
enter
lcall
mov
mov
outsl
mov
test
clc
je
rcll
out
mov
loope
sub
push
stc
push
clc
add
cmp
jmp
xor
xchg
outsl
adc
pusha
roll
mov
or
es
cmpsb
add
jnp
sahf
adc
fs
cmp
push
jg
xor
popa
dec
pop
or
dec
int
sub
adc
mov
mov
add
fcoms
add
mov
xchg
push
fndisi(8087
and
push
imul
or
push
mull
or
add
pop
mov
mov
mov
add
loope
or
push
repz
xchg
pop
jmp
stos
sbb
pop
std
shrb
cmp
sub
xorb
prefetch
add
fimuls
cmp
scas
dec
push
lods
test
fistpll
xchg
add
movsl
out
dec
cli
insb
xchg
add
negl
pop
mov
push
sbb
and
push
loopne
mov
jle
in
mov
roll
movsl
adc
lods
add
jp
mov
in
pop
int3
out
lret
add
pop
fbstp
fwait
add
pop
stos
dec
ja
xchg
sub
add
ljmp
adc
dec
orl
pop
and
add
hlt
xchg
insb
and
and
subb
cld
add
pop
adc
lods
push
pop
fs
inc
or
inc
mov
fst
mov
pop
cmp
incl
add
fadds
movsb
lock
aad
dec
push
add
ljmp
iret
mov
push
jo
add
subl
xor
pop
std
iret
repnz
lock
add
rorb
in
xchg
cmp
lcall
icebp
add
push
or
xor
enter
add
dec
aaa
and
ja
cmp
mov
xchg
jp
dec
inc
adc
jo
aaa
push
lret
idivb
sub
pop
hlt
xorps
add
ja
movsb
das
cmpsb
add
dec
jle
mov
fnstsw
arpl
dec
add
xchg
int
sub
shlb
xchg
dec
lock
add
addl
lret
jge
add
pop
push
adc
adc
cwtl
dec
shrl
add
iret
pusha
fldenv
mov
pmullw
xchg
push
add
aas
in
cwtl
fs
xor
arpl
shlb
or
add
push
hlt
add
sub
add
sti
add
cmp
jmp
aam
or
inc
mov
mov
outsl
icebp
cmp
scas
fs
shufps
mov
dec
addr16
mov
and
jno
mov
inc
mov
sub
nop
adc
outsb
inc
push
xor
xchg
inc
dec
movsb
dec
jle
inc
sub
imulb
inc
cmp
rclb
sub
lret
add
adc
scas
sbb
enter
addb
mov
and
cmp
idivb
sbb
stc
or
aas
push
sbb
cmp
dec
cmp
mov
cmpb
pop
bound
add
push
pop
jo
rclb
adc
xor
xchg
insb
int3
data16
dec
jbe
adc
addl
ljmp
mov
and
cld
or
sub
lds
jl
stos
mov
sub
mov
add
dec
testb
stos
aam
aad
or
xchg
dec
sbb
roll
je
xchg
sti
pushf
pop
data16
inc
xchg
mov
aaa
lret
mov
pop
and
or
sbb
xchg
mov
mov
dec
dec
call
movsl
test
jnp
inc
test
or
push
sbb
mov
sub
fildll
repz
add
xchg
xor
loope
orb
pop
addr16
push
push
pop
inc
adc
mov
shrl
orb
imul
shrb
adc
cmc
flds
dec
and
loop
shlb
add
insb
pop
lock
sti
fmul
imul
inc
cmp
add
xchg
dec
inc
push
jecxz
outsb
pop
lock
add
adc
mov
mov
jae
lahf
and
mov
cmp
adc
sub
mov
inc
sub
push
jb
mov
dec
aad
dec
outsb
cli
jge
add
lods
or
pop
sbb
lock
and
outsb
js
add
pop
fisubrl
test
cli
roll
sub
pusha
sbb
add
add
lcall
pop
push
shll
jnp
pop
mov
jg
push
add
je
sub
out
add
adcl
addb
jmp
scas
push
pop
add
add
adc
mov
jo
addr16
lock
scas
scas
sbb
xor
rcll
in
or
pushf
es
sub
jge
push
sahf
arpl
das
pop
aaa
jmp
jp
fstp
icebp
fdivs
mov
andb
dec
sbb
sub
mov
mov
in
add
test
add
aaa
xchg
push
imul
out
push
lods
je
cltd
add
xor
or
mov
sub
pop
push
add
dec
rolb
pushf
mov
hlt
sbbb
faddp
add
push
xorb
push
mov
pop
adc
pusha
repnz
out
mov
enter
dec
mov
sbb
add
adc
jmp
cwtl
shl
clc
into
mov
dec
test
inc
cmp
andl
hlt
sbb
jne
add
xchg
add
inc
ret
sbb
cwtl
sarb
add
add
mov
loop
jns
test
sbb
es
test
adc
vpmaddwd
call
sub
push
pop
movb
out
jae
clc
pop
push
ja
cmc
mov
ret
js
push
sub
mov
inc
imul
lret
push
mov
xor
mov
mov
hlt
xor
js
jge
mov
dec
fsubrs
add
fstps
mov
or
insl
pavgw
addr16
imul
fdiv
add
xchg
shlb
hlt
mov
pop
test
jno
or
xlat
push
add
movsl
cmp
push
aam
xchg
lds
ljmp
lcall
pop
add
fsts
adc
xor
shrb
xor
add
ljmp
lock
out
dec
mov
inc
mov
lret
sbb
adc
add
or
adc
xor
and
mov
add
decb
data16
ffreep
enter
mov
out
jge
lret
sahf
mov
addb
push
loop
into
sbbb
addr16
mov
push
or
or
push
scas
pop
sbb
jb
add
adc
scas
add
inc
test
and
cmp
pop
gs
scas
imul
repnz
cmp
xor
aad
mov
shlb
jmp
hlt
outsb
inc
repnz
faddl
pushf
movhps
push
popl
add
or
add
loopne
icebp
sbb
sub
cmp
cmc
rcr
cmp
add
inc
call
adc
scas
enter
ss
push
xchg
aas
jmp
dec
push
add
stc
jle
pop
adcl
mov
add
push
jle
mov
lods
xlat
lea
push
lds
sbb
test
xor
cmpsl
inc
xor
add
ds
dec
mov
lret
inc
pop
cmp
xchg
xchg
dec
clc
add
mov
mov
hlt
js
adc
sbb
pop
sub
pop
xor
pusha
daa
gs
jne
clc
in
add
dec
xor
neg
add
pop
aam
or
nop
add
or
mov
add
push
inc
cwtl
setnp
andl
push
ret
add
lock
rcrl
jo
or
dec
mov
pop
jle
mov
add
fisubl
push
add
outsl
or
add
scas
rorb
mov
fwait
add
lret
inc
jge
add
or
test
add
or
fs
sub
mov
in
fdivl
pusha
leave
out
lock
xor
adc
jbe
xchg
hlt
clc
loope
mov
xor
in
pop
repz
in
cmpb
js
test
add
stc
fsubs
cmc
dec
mov
or
fists
mov
xlat
rcrb
cmp
add
add
fidivrl
or
out
xor
filds
out
shll
xor
fdivs
and
add
xchg
cmc
xor
pop
cli
in
add
mov
mov
movsb
mov
xor
out
in
fildl
sbb
sbb
sub
lcall
xchg
and
push
outsl
mov
popf
adc
xchg
mov
mov
repnz
jb
mov
and
out
push
push
jnp
add
or
and
cmp
hlt
inc
sub
outsl
xlat
xor
jne
add
pop
nop
mov
push
in
jbe
pop
jbe
adc
sbb
mov
mov
into
add
stc
jge
jb
addr16
mov
jle
mov
xlat
daa
cmp
pop
add
xchg
add
out
stos
push
iret
xorl
push
xchg
adc
shrl
stos
mov
cmp
pop
cmp
push
popa
inc
mov
add
rclb
xor
insb
icebp
sti
and
or
pop
mov
add
popa
add
lods
pop
or
testl
add
loope
and
ret
clc
pop
stos
add
xchg
add
and
insl
jbe
dec
lock
js
icebp
cmp
sbbl
aad
or
inc
adc
xchg
pop
aas
xor
movsl
enter
mov
and
or
repz
and
mov
mov
faddl
add
pop
mov
add
sarb
sbb
repz
icebp
or
mov
add
jg
sbb
filds
enter
add
inc
cmp
dec
add
push
sarb
shll
jne
add
mov
sub
xchg
jo
add
aas
xchg
aad
add
mov
andb
add
pop
jg
and
lock
jno
sbb
movsl
repz
imul
dec
push
sub
cmp
pop
cmp
in
shlb
out
sar
loop
xchg
add
mov
mov
xchg
es
inc
inc
add
les
jg
push
cli
xchg
push
cmp
cmp
xor
nop
aam
data16
lcall
in
sub
cmpsl
push
mov
data16
xor
add
subb
jp
xchg
xchg
fidivrl
sub
das
movsl
jg
stos
cltd
xor
repnz
vfnmadd231pd
push
call
adc
cwtl
outsb
mov
mov
sub
add
dec
adc
ret
cmp
pop
fmuls
sarb
daa
mov
jnp
and
js
rolb
lahf
js
stc
out
pusha
cmp
ficoms
mov
out
push
inc
jnp
shlb
pop
loop
add
out
test
in
js
and
jecxz
add
pop
cmp
and
push
das
add
mov
jo
or
mov
out
and
mov
rcll
jne
pop
add
xchg
cmp
jecxz
mov
aas
sub
jmp
inc
xor
insl
enter
int
ret
sub
mov
add
stos
and
push
push
cmp
ds
jmp
arpl
xchg
mov
ja
test
and
jge
add
loopne
sub
dec
add
xchg
pop
insb
inc
push
sbb
fld
jbe
in
ret
sarb
adc
test
adc
scas
adc
int3
jp
es
cmp
cmc
add
pop
add
into
lea
adcb
or
inc
incl
jmp
pop
xchg
in
pusha
mov
add
aas
fucom
cmp
in
scas
cli
and
jbe
add
out
subb
xor
rcll
test
adc
xor
jg
jo
and
daa
add
pusha
sbb
and
int
shl
add
in
test
loope
jno
add
lds
pop
jge
or
fmulp
lahf
fadd
cs
pusha
sbbl
test
iret
pop
jbe
rcrl
nop
cld
inc
mov
add
xor
adc
fldcw
cmp
push
sbb
cs
or
test
aad
adc
sbb
and
xchg
push
xchg
pop
insl
loopne
pusha
flds
ret
mov
outsb
out
pusha
in
dec
jmp
pop
xchg
sub
sub
add
int
inc
lahf
ror
adc
loope
jecxz
nopl
sbb
xor
dec
push
lret
sub
stc
pop
push
mov
pop
in
das
out
add
xchg
mov
popf
add
inc
cmp
fwait
cmp
mov
les
mov
orb
sub
xchg
pop
js
add
fists
sbb
or
or
rorb
pop
insb
loopne
cmc
add
stc
mov
ficomps
addb
fs
add
aaa
je
int3
test
add
fs
xor
and
clc
andb
cmp
adc
or
inc
xchg
push
ret
test
add
sbb
stc
jecxz
icebp
in
xor
ds
push
adc
xlat
add
filds
pop
xchg
das
push
pusha
adc
dec
mov
js
jno
jnp
cmc
xchg
sbb
add
xchg
stc
pop
and
cwtl
pop
mov
dec
aam
ret
lcall
xor
mov
ret
cmp
add
sahf
out
inc
rcr
sbb
sbbl
mov
test
fisttpl
test
cmc
mov
stos
cmp
fs
insl
mov
and
cs
pop
in
lcall
stc
inc
sub
shl
in
int3
jb,pn
add
lahf
mov
imul
add
cmp
mov
cmpsb
adc
mov
pop
cmc
add
rcll
jbe
add
mov
clc
stc
cs
sub
adc
mov
mov
dec
incl
rcll
cmp
jbe
sbb
add
cwtl
jne
icebp
test
into
cmp
shr
cwtl
cmp
inc
gs
xchg
ss
mov
or
mov
nop
inc
dec
jo
add
into
imul
fdivs
gs
lock
add
inc
or
mov
xor
jmp
add
mov
inc
dec
sbb
scas
inc
push
push
sbb
daa
mov
add
mov
dec
dec
xchg
js
test
and
rcrb
add
mov
aad
rorl
sub
sub
addr16
adc
int3
or
push
and
outsl
xchg
or
add
mov
clc
loope
inc
push
aam
and
subb
js
xchg
add
add
adc
cmpl
sbb
rcl
fcmovnbe
sub
in
test
push
lcall
cli
fldcw
out
push
dec
stc
inc
xor
inc
hlt
add
inc
sbb
hlt
and
add
adc
in
clc
xor
push
mov
loopne
mov
lock
fwait
lods
fidivrl
out
inc
pop
lahf
jns
xchg
jecxz
xchg
sub
fdivrs
lds
cmp
lock
jecxz
cmp
jbe
shrb
jl
cmp
mov
ret
loopne
jo
push
add
or
sub
mov
je
sub
add
inc
mov
push
jno
aam
adcb
lcall
jle
add
fisttpll
sub
jne
subl
inc
clc
or
pop
push
adc
mov
sbb
sbb
arpl
dec
dec
pushl
xchg
xchg
mov
popf
adc
shrl
dec
lods
andb
test
add
push
cli
cmp
and
rorb
xor
pushf
add
out
out
add
inc
decl
xor
cmpl
lock
ss
cmp
pop
dec
mov
push
add
incl
jno
aaa
mov
mov
pop
sub
mov
pop
add
jnp
xchg
pop
xchg
std
clc
xor
pop
inc
popf
pusha
cmpsb
nop
into
add
aad
stos
add
movsl
hlt
sti
add
je
mov
jle
loop
add
sub
xorps
push
and
sbb
jnp
sbb
pop
mov
js
add
and
pop
add
fstps
or
jge
pop
mov
push
jle
add
lds
jb
push
aas
loopne
sbb
add
mov
fimuls
or
orb
scas
adc
mov
add
lock
jo
add
push
pop
scas
and
push
cmp
fnsave
pop
pinsrw
out
jb
subb
add
cmp
sub
ljmp
call
clc
data16
js
mov
sbb
pop
jns,pn
push
addl
add
int3
bound
add
sub
negl
cltd
sbb
cwtl
aam
test
pop
mov
dec
adc
cli
push
std
pop
test
test
outsl
add
lds
pop
sbb
xchg
leave
nop
xor
push
jl
inc
sbb
lods
sub
hlt
add
push
andb
imul
fadd
add
loopne
xchg
and
sub
arpl
aam
or
jnp
push
pop
ret
mov
sub
xor
ret
in
cli
mov
lcall
imul
pop
lret
stos
inc
add
sbb
pop
js
pop
add
mov
pusha
je
add
rolb
addl
or
adc
stos
andb
xor
add
js
xchg
leave
insb
daa
add
cwtl
or
shrl
push
jo
popa
push
jbe
dec
ja
fdivl
rorb
sbb
add
or
into
add
xlat
push
xor
mov
pop
popf
pop
and
add
lahf
jl
add
scas
jge
fstl
and
lock
in
jecxz
sti
add
data16
push
mov
add
in
sbb
jmp
sub
xchg
xchg
add
dec
aad
xlat
sbb
pop
jno
fdivrl
and
pop
add
adc
rcr
mov
dec
fcompl
mov
jmp
or
mov
sub
xchg
cmpsl
xlat
add
push
outsb
ror
jae
fstpl
shl
je
jl
pop
stos
inc
popl
clc
lods
xlat
sbb
scas
das
je
inc
inc
adc
pop
xchg
pop
pop
add
and
xor
fs
push
lret
mov
jns
adc
inc
mov
daa
movsb
push
cmp
push
mov
and
inc
add
mov
jno,pt
nop
or
adc
pop
sbb
push
inc
add
mov
hlt
ret
leave
and
int
add
sahf
dec
jg
inc
xchg
inc
push
jecxz
mov
dec
jne
stos
arpl
nop
shll
arpl
xor
sub
xchg
sbb
add
fbstp
ja
xchg
movsl
push
sub
stc
mov
dec
and
fs
dec
imul
sar
or
arpl
test
cmc
jmp
add
iret
push
dec
sbb
lret
add
cmpsl
add
sbb
mov
mov
call
add
sub
divb
mov
xor
repnz
pop
add
jns
jnp
cmp
in
cmc
xchg
out
mov
add
rorl
or
add
xor
pop
push
lret
int3
add
testb
and
ror
mov
add
xor
divl
add
jno
inc
mov
shr
popf
pop
in
faddp
push
ret
leave
imul
xor
inc
xor
rorl
mov
int
jo
test
lds
sub
repnz
mov
mov
nop
and
jbe
lods
mov
fwait
push
xor
jne
addb
jl
test
aad
inc
xor
stos
dec
xchg
flds
inc
mov
ds
jno
loop
repnz
outsb
sbb
iret
cmp
add
cmc
cli
and
pop
mov
movsl
fucom
rcrb
mov
xor
imul
add
add
inc
jbe
mov
or
add
or
imul
add
mov
js
push
jae
movsl
aaa
shll
andb
jg
push
repnz
xor
andb
fadds
sbb
xlat
clc
iret
or
fcoml
sbb
add
test
dec
add
push
push
fcompl
movb
jnp
movsl
test
push
mov
into
repz
mov
sahf
clc
cwtl
in
int3
out
test
nop
push
sub
xlat
add
add
pop
cmp
testb
ret
std
inc
jno
adc
mov
filds
jp
icebp
xchg
test
xor
push
out
ja
in
sarb
push
jae
add
fnstcw
dec
pop
and
test
pop
dec
out
lcall
aas
pop
decl
lea
inc
mov
dec
mov
mov
repz
add
rolb
xor
je
jnp
std
mov
inc
cld
inc
bnd
ret
dec
pop
dec
repz
pusha
or
pop
cwtl
xlat
fwait
das
mov
cmp
mov
imul
add
std
iret
pop
xor
mov
inc
push
cmp
lock
push
nop
cld
outsb
add
mov
xor
or
sbb
jno
pusha
in
mov
and
xorl
loopne
sub
xor
adc
mov
lods
xchg
inc
popa
fnstsw
jle
mov
fistl
stos
out
or
add
cmp
fcmovnbe
push
sbb
or
inc
rorb
sub
mov
loopne
add
adc
fwait
addb
xor
lock
loope
loopne
dec
jne
loopne
adc
rcrl
loopne
cld
mov
cmp
sub
fidivrs
cmp
flds
jge
sub
cwtl
data16
push
mov
mov
jb
subb
mov
jns
and
inc
inc
syscall
stos
call
test
cmp
jmp
cmp
add
leave
fs
sub
rolb
sbb
xchg
lods
inc
inc
pop
aad
jg
add
push
pop
mov
jl
jnp
cmp
cld
mov
jns
addb
roll
adc
add
mov
adc
repz
push
sub
xchg
test
cs
andb
push
mov
pop
pop
jae
leave
xchg
sub
add
dec
jno
mov
mov
jmp
lods
inc
inc
add
test
adc
and
xor
stos
out
push
sbb
mov
mov
inc
pop
in
inc
add
int
dec
add
sbb
loopne
pop
jl
add
cmpsb
dec
cmp
imul
jp
add
xor
leave
add
cmp
push
mov
std
ja
ficoml
mov
aad
sarl
addr16
jno
movsl
add
pop
or
add
add
add
mov
cmp
and
in
fcompl
cmp
mov
mov
jle
js
add
xchg
xor
pop
and
mov
and
clc
add
loopne
mov
aas
cmpb
les
js
add
xchg
jmp
imul
xchg
lock
call
adc
add
lahf
shll
or
sub
enter
ret
xor
mov
push
jae
sbb
and
jne
fiadds
pusha
pop
add
je
pop
test
cld
mov
sub
sub
push
add
icebp
pusha
js
mov
sbb
and
push
add
jp
xchg
rcl
sbb
jecxz
outsl
push
cmp
insl
andb
ret
pop
xor
add
fnstcw
icebp
pop
adc
pop
or
jmp
sbb
sub
mov
ds
int
mov
and
inc
popa
in
inc
xchg
xchg
and
add
daa
xor
test
pushf
into
mov
add
lret
jle
addr16
rorb
cmpsl
out
scas
add
shr
loopne
ret
imul
pop
inc
add
xor
or
sbbb
xor
xchg
pop
ja
pop
je
push
add
iret
enter
aam
mov
mov
fwait
movsl
mov
bound
inc
jnp
loope
inc
ret
xchg
cwtl
icebp
add
or
add
mov
js
cmp
xchg
add
add
out
push
jecxz
leave
pop
or
out
jo
fnstsw
popa
jmp
test
add
push
adc
push
je
sarb
inc
push
inc
mov
push
lock
add
mov
fnstsw
mov
inc
aaa
cmpsb
add
mov
pusha
sbbb
xor
jmp
hlt
push
mov
add
inc
pop
jo
nop
jmp
add
mov
inc
imul
je
into
pop
outsl
repz
xchg
add
test
push
mov
repz
gs
rolb
popa
add
mov
adc
mov
rcrb
pop
push
add
mov
xchg
dec
add
xor
rolb
outsb
and
loopne
aaa
mov
lret
ljmp
add
cs
fiaddl
and
mov
jle
xchg
push
test
fisttps
movsw
shl
test
faddl
int3
in
fs
gs
mov
movsb
and
sbbb
dec
xchg
pop
pop
push
mov
int3
or
push
pop
mov
sub
repnz
xor
test
push
dec
int3
sbb
subb
pop
shlb
shlb
movsb
lock
xchg
pusha
std
sbb
das
pop
mov
arpl
loopne
add
fidivs
push
xor
push
stc
inc
adc
andb
or
xchg
jmp
sub
adc
scas
xchg
fidivrl
dec
out
mov
cs
popf
inc
sbb
add
push
fistpll
xor
pusha
add
mov
cmc
rolb
and
pop
negb
jle
jmp
popa
jnp
push
cmp
mov
add
pop
fs
lret
popa
add
lahf
or
sub
sbb
add
jle
jne
stos
jb
mov
pop
cltd
sbb
pop
ss
aam
andl
int
cltd
push
and
adc
push
mov
aas
jp
cld
dec
cli
leave
or
insl
lahf
sub
jne
sbb
cmp
movsb
and
or
cmp
inc
aas
fadd
xchg
jns
add
cmp
xchg
lret
hlt
mov
add
or
insb
fisttps
xlat
repz
add
add
pop
je
pop
or
and
aad
orl
adc
add
xor
push
jecxz
mov
add
insl
add
aad
das
adc
sbb
sahf
mov
mov
sub
and
or
movsl
push
lahf
test
ret
imul
popf
mov
sub
push
inc
add
lods
fwait
rorl
in
dec
stos
rcl
add
push
sub
mov
xlat
cmpsb
add
jbe
cmp
fdivrs
add
loop
jae
pop
js
cs
push
xor
enter
cmp
lock
add
dec
inc
std
cmp
inc
and
lea
cmpl
nop
imul
jne
add
pusha
or
hlt
fcoms
pop
xrstor
aaa
addb
test
loop
sub
inc
mov
push
cld
das
jge
es
insb
sti
jne
jmp
cwtl
xor
sbb
xchg
mov
or
mov
sbb
push
add
pop
xor
loop
add
dec
popa
jp
cmp
aas
jmp
hlt
js
pop
add
and
push
add
push
add
aaa
jne
xchg
iret
mov
mov
jbe
pop
lds
and
mov
add
jo
lea
fmuls
hlt
lret
and
lods
mov
push
in
pop
push
lods
xor
dec
int3
orl
add
insb
push
mov
or
dec
cmpsb
xor
or
xchg
cmp
mov
lret
cld
pop
jns
sarb
xor
pop
cmp
add
push
ficompl
mov
jae
jo
pop
mov
jno
sub
and
rcl
jnp
sbb
push
add
jle
cmpsb
adc
inc
sub
into
loopne
adcb
sti
add
mov
mov
lcall
xor
adc
fs
repnz
add
jne
sti
mov
xor
gs
add
adc
sbb
std
adc
inc
inc
and
arpl
fisttpl
pop
xchg
pop
jge
out
pop
inc
adc
push
shl
mov
pop
cmp
add
aas
dec
adc
adc
pop
call
inc
sub
inc
sub
pop
stos
call
add
mov
rolb
loope
cs
or
mov
and
test
notl
pop
xchg
and
out
dec
mov
fs
add
push
sub
inc
push
add
scas
jns
add
insl
push
sbb
dec
mov
fildl
pop
call
mov
add
cmc
cwtl
xlat
and
leave
icebp
xor
mov
addb
imul
jbe
orl
int3
test
fsts
add
or
cs
pusha
mov
cwtl
scas
xor
subb
data16
push
ret
std
pop
in
popa
shlb
add
or
incl
imul
sbb
push
mov
cmovns
jle
add
push
add
xchg
push
in
add
js
dec
mov
loopne
fadd
loopne
sub
mov
push
pop
xchg
add
and
push
pop
cmpsl
pop
pop
adc
or
lock
mov
icebp
imul
loopne
out
es
pusha
add
lahf
pop
sbb
or
cmp
add
data16
adc
aad
add
call
test
add
lahf
jg
cli
pushf
sbb
mov
testb
mov
leave
das
adc
jg
add
push
dec
xor
fwait
xorb
push
dec
mov
add
add
mov
fistl
add
pop
mov
jmp
rorb
sbb
sub
and
push
cmp
add
cli
or
sbb
xchg
fsubl
add
jl
add
out
int
add
jne
negl
imul
sti
xchg
inc
inc
add
sbb
xchg
and
sbb
imul
out
pop
sbb
mov
mov
sub
clc
shll
fstpt
add
dec
adc
call
mov
and
rolb
outsb
mov
ljmp
mov
sbb
cwtl
adcb
add
loopne
pop
jle
rolb
pop
xchg
and
push
mov
push
les
xchg
dec
sti
or
fcomps
cltd
rorb
ret
push
ja
in
dec
push
adc
sbb
loope
mov
add
subb
pop
add
cmp
sbb
shlb
add
imul
std
jae
mov
jns
lock
or
scas
add
fimull
insl
cmp
loopne
adc
sub
add
enter
add
je
loope
mov
and
addl
pop
xor
stos
pop
add
dec
cmpsl
sub
cmovns
mov
int
xlat
sahf
push
cmp
add
jmp
shlb
jmp
sbb
mov
aam
insl
xorl
outsl
xchg
mov
cmpb
iret
or
cmp
sub
push
xorb
lret
cli
adc
add
lret
fsubl
into
lds
add
int
testb
push
push
nop
insb
fbld
lds
jp
dec
xchg
push
in
add
add
sahf
jbe
push
ds
sbb
sbbb
push
leave
adc
dec
dec
push
stc
or
jp
es
bnd
stos
dec
loope
add
mov
aam
ds
testl
movsl
adc
out
adc
out
push
stc
ljmp
lea
cmp
fisubs
out
add
pushl
add
cmp
sbbb
int
pop
movsb
jns
out
decb
stc
dec
xchg
pop
sub
or
cld
mov
das
lods
aas
xor
and
or
pop
adc
mov
mov
cmc
icebp
dec
pop
std
mov
nop
mov
inc
push
ja
xchg
in
rcrb
fcompl
ret
or
cli
cmc
jno
js
add
cmp
adc
into
pop
nop
pop
add
jecxz
push
add
mov
adc
ret
icebp
scas
je
add
dec
sbb
stos
arpl
add
mov
js
add
sahf
aam
int3
sbb
cli
jne
mov
add
insl
ljmp
movsl
mov
test
xor
lea
lahf
clc
push
sub
push
pop
sbb
lods
mov
xchg
push
iret
add
int
xlat
jne
add
sbb
xchg
jae
add
adc
sbb
loop
cltd
cmp
mov
xor
jl
test
add
stos
packsswb
shll
shrb
cmpb
and
int3
add
leave
loopne
pop
jmp
stos
pop
and
popf
add
fldenvs
mov
jnp
pop
pop
iret
femms
fdivrs
pop
popa
hlt
repz
icebp
xchg
dec
push
inc
add
subl
cmpsb
and
or
mov
pop
pop
gs
aaa
pop
rclb
mov
pop
stos
add
push
lock
lahf
out
loopne
clc
pop
sub
lcall
cwtl
loope
jge
jg
popf
js
add
sub
add
stos
leave
or
xchg
cwtl
jmp
dec
add
sbb
xchg
ret
lret
xor
mov
enter
add
leave
rcrb
sub
popa
add
jae
pop
cwtl
inc
nop
sub
or
cmp
and
pop
adc
outsl
or
jno
daa
or
imul
push
add
in
dec
ret
cmp
arpl
out
lods
and
popa
in
cld
pop
cmc
leave
add
std
ss
pop
ret
or
sub
arpl
pop
push
sbb
icebp
adc
xchg
pop
sub
xchg
outsb
lock
jmp
push
cld
jmp
test
xor
sub
sub
ror
add
popf
out
push
cmp
xor
xchg
insb
les
pop
adc
sub
add
outsl
outsb
add
shl
jno
push
nop
inc
mov
pop
jb
pop
call
aad
mov
jge
mov
cwtl
lock
add
xchg
inc
mov
adc
int
fstpt
sti
add
punpckhdq
xchg
fld
nop
mov
cmc
iret
test
sahf
cmp
adc
add
xor
mov
ret
xchg
add
ss
std
dec
pop
add
gs
cmp
sbb
xor
popf
sti
lahf
sahf
cltd
in
in
movb
test
bndldx
shlb
xchg
jo
add
add
mov
call
dec
arpl
orb
fdivl
xor
sbb
rol
mov
pop
shlb
add
cmp
xchg
mov
jl
xchg
out
mov
dec
sbb
pushf
adcb
add
mov
dec
pop
add
dec
ret
mov
mov
loop
sarb
dec
xor
add
repnz
dec
mov
add
sub
loop
xor
pop
jmp
rolb
outsl
mov
arpl
in
aad
out
sbbb
xor
add
fwait
sub
adc
or
in
jle
scas
pop
inc
and
inc
cli
push
shlb
hlt
fs
mov
xor
rcrb
sbb
cmp
ljmp
lahf
aam
push
shr
mov
les
mov
mov
mov
lea
jmp
inc
add
ficompl
icebp
and
shl
out
scas
add
stos
loopne
rorb
test
add
cmp
sar
daa
mov
jne
ljmp
pop
js
pop
mov
flds
mov
jge
pop
stos
addr16
add
jb
cltd
and
xchg
dec
add
out
ret
outsb
jecxz
aas
pop
jae
aad
add
jo
pop
movsb
add
mov
mov
dec
lods
rclb
je
add
lret
add
mov
push
mov
lods
cmp
pop
outsl
xor
xor
mov
adc
lret
cwtl
dec
xor
add
inc
pop
cmp
js
xchg
loop
add
popf
and
or
push
or
jecxz
addr16
push
shl
xchg
sbb
xor
jmp
pop
jne
jmp
add
inc
pop
loope
out
add
pop
jns
idivb
cmpsl
pop
add
jae
testl
int
mov
inc
movsl
xchg
lcall
inc
stos
and
in
shlb
incl
push
mov
push
add
sti
sbb
cltd
add
adc
je
enter
adc
dec
out
jo
outsb
add
scas
popa
mov
inc
mov
jns
push
pusha
stos
push
call
xchg
add
push
sub
movsb
pop
dec
shrb
fsubrs
dec
movsb
mov
lea
cld
psrlw
shl
mov
cmp
shll
out
out
cs
insb
inc
aas
mov
dec
mov
add
sbb
out
add
sub
pushf
push
push
test
and
inc
add
outsl
rcl
xchg
push
dec
mov
cmp
dec
scas
shlb
push
cmp
jno
push
add
dec
cmc
cmp
add
jp
push
pop
ljmp
push
add
dec
lea
xor
aam
xchg
das
add
cmp
mov
icebp
sub
lahf
rclb
pop
push
jle
jo
pop
outsb
mov
jnp
inc
dec
pusha
out
ret
mov
add
add
ja
addr16
push
sbb
mov
dec
jbe
push
shll
add
mov
jmp
add
inc
or
sbb
sub
inc
scas
mov
inc
add
jge
or
xor
add
dec
ds
aaa
add
or
pop
cmpsb
loop
inc
pop
push
inc
sub
jae
push
pextrw
jnp
aas
mov
add
inc
aad
sbb
ja
faddl
and
mov
push
je
jbe
add
cmp
cmpsb
jmp
aam
jb
xor
sbb
addr16
clc
mov
enter
inc
add
adc
cld
add
bnd
xchg
add
jns
mov
fimull
or
inc
xchg
push
pop
add
sub
mov
not
xor
cmp
jno
std
pop
inc
fs
pop
or
xor
add
stos
inc
cmpsb
ljmp
sub
mov
mov
cmp
imul
icebp
push
sub
dec
push
jp
sarb
and
outsb
cmp
adc
sub
fst
sbb
out
jle
cmp
ucomiss
movb
insl
jmp
test
scas
in
popf
and
and
mov
fs
loopne
push
mov
stc
cld
aam
cli
in
sub
pop
mov
imul
mov
inc
jb
hlt
rcrb
jno
add
pop
aad
cmpsl
and
mov
cs
jmp
add
lock
add
dec
jb
sbb
inc
pop
and
mov
outsl
add
push
add
pinsrw
mov
clc
sbb
pop
adc
lcall
jae
cmpsl
stc
lods
daa
or
shlb
push
inc
shl
jle
push
cwtl
xchg
pusha
sbb
jp
and
call
push
pop
adc
push
ljmp
jo
xor
jb
lahf
cli
loopne
or
mov
add
sbbl
incl
in
out
pop
add
punpcklwd
cmpb
and
inc
pop
dec
jbe
add
sarb
les
pop
push
test
ficomps
sarb
add
push
xchg
add
xchg
jbe
dec
mov
cmp
rorb
cmp
add
fdiv
fldpi
in
mov
and
push
test
out
mov
mov
clc
push
add
fistps
mov
enter
out
adc
add
pop
add
adc
jne
aas
movsb
repz
into
push
rorl
cwtl
sub
jge
mov
xor
cmp
cld
add
jae
push
scas
push
sbb
or
in
fcompl
add
aad
xchg
xchg
add
int
jo
leave
js
icebp
movsb
movl
ret
andl
add
rcl
shl
aas
sub
jnp
shrb
pop
pop
mov
movl
jb
mov
push
add
mov
jnp
add
push
adc
adc
mov
push
push
and
pushf
leave
adc
fwait
inc
add
insl
jnp
aam
clc
jo
rorb
stos
xorl
add
or
popf
dec
xor
iret
js
add
mov
jbe
xorb
jecxz
imul
fwait
in
mov
inc
push
cmp
push
aad
lods
sub
stc
cmp
jmp
xor
loope
pop
add
out
mov
add
decl
inc
iret
mov
push
add
in
loopne
add
jne
adc
shll
add
hlt
dec
and
test
mov
shrb
lods
sub
xchg
mov
add
out
pop
sub
mov
xlat
add
stos
scas
icebp
jle
ds
ja
add
push
inc
cmp
or
inc
sbb
sbb
fistps
addr16
fwait
add
and
aam
out
rol
mov
into
clc
push
mov
add
mov
xor
mov
add
loop
iret
jno
add
gs
add
jg
stc
mov
add
mov
into
pop
mov
push
test
sbb
nop
leave
xor
fdivrp
xchg
pop
rcrl
push
out
fdivrl
lcall
out
cmp
fildl
fwait
mov
out
loopne
jmp
jnp
add
jmp
and
pop
xchg
pop
jle
xchg
rolb
in
mov
mov
and
int
sbb
lret
iret
test
test
jno
mov
xor
add
mov
xchg
or
jp
add
loopne
fdivl
popa
xchg
ss
movl
mov
push
insl
out
cmc
iret
shr
cmp
test
outsl
push
push
adc
inc
mov
ds
mov
movsb
mov
stos
jecxz
add
pop
xchg
in
adc
sbb
add
ret
mov
add
and
cmc
stos
adc
pop
cmpb
jae
xor
aam
out
test
pusha
push
add
mov
nop
lock
mov
arpl
or
popa
out
add
cmc
add
fmuls
pop
add
mov
ss
pop
adc
push
cmpsb
mov
bswap
pop
cmp
aaa
dec
sbb
addl
pusha
fdivrl
pop
sub
dec
pop
dec
cmc
add
dec
pusha
dec
pop
lret
xor
add
jmp
fisttpll
mov
mov
push
pop
inc
loopne
aam
psrld
adc
rcr
cmp
out
xchg
mov
adc
das
addb
add
incb
add
repnz
pop
jo
shll
push
testb
test
add
out
addb
inc
in
inc
mov
xor
scas
adc
push
add
and
adc
sub
add
shufps
pop
scas
push
mov
inc
cmc
fdivrs
jns
mov
push
imul
and
xor
mov
sub
test
push
and
lea
pop
and
jae
aaa
scas
push
and
jb
add
test
std
in
add
hlt
arpl
cli
mov
add
fsubs
add
shrl
pop
out
add
int3
cltd
ds
insl
cli
mov
shlb
sahf
xor
pop
lret
stos
cmp
rcrl
xor
int3
stc
cmc
jbe
movsl
push
xor
adc
cmp
call
cli
nop
push
add
dec
or
rolb
aaa
mov
push
push
mov
repz
xchg
push
dec
pop
sbb
roll
sbb
dec
add
xor
adc
fcompl
insb
loop
mov
inc
ds
push
int3
sbb
dec
loope
cmp
or
faddl
jle
sub
mov
pop
nop
pushf
add
fs
stc
pop
loopne
std
add
add
inc
or
fnstsw
pusha
fldenv
clc
jns
movb
mov
test
movups
fadds
jns
fstpt
jecxz
dec
shr
lock
mov
sbb
xchg
add
pop
add
jo
repz
cmp
pusha
pusha
imul
sti
and
ret
in
mov
xchg
push
roll
mov
adc
cmp
mov
nop
cmp
inc
mov
mov
movsb
fidivrl
dec
mov
mov
lcall
adc
xor
pop
xchg
rclb
push
add
pop
jge
pop
dec
les
add
shlb
stc
and
jecxz
push
mov
js
aam
push
inc
dec
decb
pmaxsw
rcrb
xor
rolb
hlt
sub
inc
xor
dec
in
in
cmpsb
rclb
mov
jmp
sar
adc
pop
xchg
aas
fwait
stc
xchg
adc
cmp
jmp
push
ljmp
sbb
sbb
loopne
subl
fdiv
ja
or
arpl
call
lcall
adc
inc
jae
push
sti
jl
add
push
pop
movb
cmp
pop
push
pop
mov
lds
clc
add
mov
jns
pop
xchg
push
inc
inc
mov
dec
add
inc
leave
andb
pop
mov
add
repnz
pop
loopne
adcb
pop
in
stos
daa
pop
adc
addl
ret
out
iret
call
add
sbb
sub
cmpb
push
or
pop
sbb
adc
jno
xchg
daa
clc
inc
dec
add
lcall
push
int3
xchg
loopne
cmp
jbe
jne
test
ficoms
and
add
pop
test
cmp
popf
ret
or
sbb
daa
mov
ds
orb
lods
xlat
xchg
fsts
lock
imul
or
mov
add
mov
test
xchg
ror
sbb
mov
test
shrb
call
jo
jp
test
dec
repnz
addr16
call
or
inc
add
dec
inc
daa
js
add
jmp
inc
push
rcll
rorb
mov
out
push
mov
mov
cli
sahf
repz
pop
ja
and
sbb
cmc
fwait
popa
push
jmp
jecxz
mov
sarl
lcall
fwait
pop
and
jo
addr16
pop
mov
dec
scas
lea
pusha
mov
movsb
outsb
imul
xchg
add
sbb
push
lret
mov
cwtl
mov
mov
outsl
jg
adc
incb
jle
pop
push
mov
push
add
outsl
stos
push
leave
cli
push
or
addr16
mov
sub
mov
ss
sti
sub
mov
add
lret
mov
adc
movl
repnz
fs
add
push
xlat
jb
cmc
mov
bound
jmp
dec
add
jmp
aaa
sbbl
jo
add
jecxz
js
ret
popa
cmp
xor
mov
fwait
sbb
popf
xor
sub
or
push
xchg
pop
xchg
mov
es
mov
inc
hlt
imul
dec
clc
and
xor
popa
dec
faddl
popf
pusha
jge
push
mov
sub
in
fidivrl
data16
add
lret
rcrb
add
fdivl
mov
nop
data16
test
stos
jge
divl
adc
jo
add
add
cmp
lea
cld
inc
loopne
dec
add
and
xor
iret
add
aas
push
cmpsl
or
add
mov
adc
mov
sub
pop
int
add
fs
add
jns
test
add
mov
aaa
pop
fld
jg
pushf
out
sbb
pop
aam
xor
and
loop
sbb
mov
into
mov
cmp
enter
add
or
lds
jg
add
or
push
cmp
int3
add
stos
rcpps
jns
nop
scas
mov
aas
add
test
or
adc
dec
mov
cmc
mov
loope
lock
cmp
add
loop
sbb
ljmp
icebp
mov
add
pop
mov
push
rol
sbb
adc
add
pop
push
fstp
xchg
push
ljmp
fistl
add
gs
nop
test
int3
dec
push
sti
in
xchg
cmp
and
add
int3
adc
shl
pop
jno
rolb
inc
mov
add
sub
test
adc
pop
mov
add
mov
mov
and
dec
mov
les
add
lahf
push
decl
or
mov
pop
xor
lock
xor
mov
inc
aas
shrl
mov
jb
cmp
fmulp
or
push
addb
cmp
lds
arpl
scas
jo
jge
inc
add
test
add
lods
inc
jg
mov
mov
pop
push
mov
into
and
or
sub
push
and
dec
inc
add
mov
pop
testl
iret
leave
shl
add
add
addr16
call
xchg
or
lock
ficompl
shll
sbb
pop
je
xchg
loopne
inc
xchg
addl
mov
mov
add
add
mov
test
pusha
xchg
icebp
add
push
pop
mov
in
es
ja
xlat
inc
inc
out
and
enter
mov
verr
lds
aad
and
aas
xchg
in
cmc
add
push
or
lods
add
sub
clc
dec
cmp
fistpll
cli
add
lret
das
mov
add
inc
mov
mov
add
sbb
inc
arpl
push
add
cmp
roll
dec
push
cld
pusha
cmpsl
add
stos
cmp
fcomps
inc
add
mov
or
or
adc
xchg
out
loopne
dec
mov
inc
in
gs
or
xorb
sub
and
xchg
sub
cmp
sbb
scas
popf
and
add
aas
addr16
sti
test
inc
std
scas
and
fcomps
or
mov
mov
nop
filds
cwtl
pushf
xchg
sub
andb
jge
cwtl
sub
and
or
ljmp
sub
je
mov
pushl
ret
mov
cs
add
pop
inc
pop
push
out
adc
movsb
rorl
sbb
ror
sub
aaa
dec
add
lea
scas
add
jae
dec
xor
push
sbb
dec
lock
add
adc
xor
jp
xchg
sar
cmc
push
shr
add
push
enter
shlb
stc
negl
pop
fwait
add
mov
push
sahf
subl
cmp
div
push
pop
lds
loopne
orb
orl
fdivrs
push
mov
out
sysenter
fwait
sti
mov
mov
adc
in
and
sub
out
cs
inc
cwtl
add
dec
mov
sahf
sub
iret
sub
std
outsl
add
fdivp
mov
and
imul
movsb
adc
inc
inc
mov
cltd
and
enter
in
push
add
shl
pop
xchg
scas
jo
hlt
add
mov
cwtl
jmp
enter
dec
mov
cmc
jg
sub
fisubl
pop
add
xchg
add
enter
int3
mov
jb
pop
jbe
fists
nop
or
aad
out
add
cmp
shlb
xchg
push
gs
sbb
test
enter
push
dec
jnp
push
mov
nop
mov
mov
add
fcmovne
mov
add
js
sbb
dec
movsl
cs
push
cmpl
popf
insb
popa
js
ror
add
mov
inc
clc
pop
push
fnstsw
mov
mov
imul
mov
clc
aas
sub
add
xor
jnp
aam
sub
jbe
or
shrl
pop
orb
xchg
fdivs
pop
and
stos
fwait
xor
jmp
add
dec
cli
mov
mov
mov
add
xchg
xchg
inc
loopne
pusha
cmc
imul
pop
add
mov
aas
mov
dec
cwtl
sahf
cmp
add
push
testb
movsl
lret
scas
push
mov
add
ret
sbb
scas
lret
xchg
add
xchg
fwait
out
add
mov
in
add
push
jmp
mov
mov
pop
xor
and
or
pop
jns
aaa
xchg
in
ja
dec
pop
mov
nop
mov
mov
ds
xchg
mov
cmpb
ret
fdiv
scas
mov
pushf
add
mov
test
xchg
mov
lods
xchg
out
cmpl
int
add
fdivs
mov
add
inc
jns
psllw
pop
lds
jp
pop
adc
lret
add
gs
fiadds
arpl
shr
outsl
icebp
add
and
mov
fstps
or
add
mov
push
add
lahf
push
mov
dec
or
cmp
stc
push
sarl
xor
push
dec
inc
lock
pop
popf
push
adc
add
cmp
inc
lock
add
xlat
push
mov
loopne
ss
push
sbb
dec
xor
sub
and
lods
in
idivl
stc
sub
sti
add
or
xchg
popa
aad
lret
shll
xor
inc
add
out
pusha
sub
add
and
mov
enter
mov
sbb
call
inc
sbb
cld
mov
add
jge
js
fcoms
push
jmp
xor
add
xchg
inc
test
aas
scas
xchg
pop
add
dec
and
or
rorl
fisubrl
add
xchg
sahf
pop
sbb
pop
cld
mov
add
sub
xchg
fists
or
and
popa
push
mov
sbb
xchg
xchg
push
stos
into
xor
shlb
test
dec
add
out
jl
cmp
cld
enter
cmp
push
push
or
jle
ss
add
gs
int3
adc
push
loop
pop
in
pop
out
sub
pop
arpl
and
adc
insl
jmp
or
mov
push
mov
push
jae
jl
xor
mov
sub
loopne
push
cli
or
stos
jnp
imul
mov
mov
clc
cmp
aas
mov
nop
jg
jnp
push
lods
dec
jp
sbb
push
mov
xchg
cmp
mov
nop
xchg
fimuls
mov
add
adc
xchg
mov
js
jb
jbe
repnz
out
faddl
rcl
add
test
jge
lods
inc
scas
call
pop
sub
add
and
cmp
sbb
push
cmc
loop
arpl
adc
sbbl
jle
out
out
pop
loopne
add
jae
loopne
lds
enter
mov
pop
xor
cmp
push
lcall
push
xor
xchg
jnp
adc
popa
icebp
xchg
add
push
ret
insb
enter
push
cli
addr16
cmpsl
fisubrs
sub
sarb
add
test
dec
mov
mov
shlb
out
movsl
loope
add
mov
and
mov
bound
inc
sub
add
mov
enter
stos
pop
repnz
por
jbe
hlt
dec
minps
js
lret
clc
fwait
pop
hlt
mov
pop
mov
or
pop
mov
or
add
fiadds
or
shlb
xchg
out
or
cli
cmp
fiaddl
and
mov
add
xchg
adc
push
out
adc
mov
jb
add
cmp
dec
add
stos
jle
pop
xchg
pmuludq
ja
xor
or
fsts
sub
in
icebp
add
inc
hlt
sub
cwtl
pop
sti
dec
dec
and
fs
fildl
inc
inc
xor
cmp
mov
cs
data16
cmp
jl
mov
adc
jmp
cmpl
inc
jg
int3
lret
cmpb
test
mov
add
xchg
mov
cld
sbb
ljmp
in
mov
cs
bound
sti
stc
rolb
jg
test
aaa
add
lahf
subb
pop
mov
xor
lea
or
fwait
enter
add
mov
test
call
fdivrs
mov
int3
enter
loop
clc
jns
add
pop
cmp
js
lods
add
mov
clc
xchg
clc
out
xor
pop
xor
mov
mov
icebp
aam
or
repnz
lock
aad
scas
adc
pop
sub
test
clc
jne
adcb
shl
cli
cmp
test
mov
movsl
cmp
aaa
add
shrb
adc
push
add
add
mov
outsl
mov
cmp
test
out
sub
or
ret
pop
lods
popf
scas
rolb
or
xchg
push
stos
popa
pop
mov
add
je
jecxz
inc
or
or
inc
out
sti
test
lock
add
adc
pop
std
add
lahf
iret
mov
in
xchg
pop
pop
add
cld
pop
add
xchg
add
push
bound
cmpsl
shlb
mov
dec
adc
add
pusha
add
ds
dec
aas
or
cli
push
lahf
aam
sar
out
cmp
cmp
fs
ret
in
popl
arpl
shll
pop
xchg
cli
leave
jp
cltd
and
mov
xlat
or
js
cwtl
insb
mov
fcomps
cmp
idivb
shrl
fxsave
lods
pop
xchg
fucomi
add
dec
faddl
scas
mov
insl
ret
xor
in
add
pop
es
repnz
mov
dec
ret
or
sub
mov
mov
xchg
cwtl
xchg
enter
flds
mov
sarl
fnstenv
pop
xor
add
inc
xchg
shlb
addl
rclb
inc
add
dec
jne
sub
push
cmp
fildl
pusha
sub
mov
add
jbe
xor
into
lds
or
adc
in
pop
pusha
add
cmp
inc
add
loopne
push
outsl
ror
adc
jb
and
sbb
push
push
out
add
scas
cmp
add
xor
xchg
mov
pusha
lock
xor
lret
xchg
add
in
data16
outsb
xlat
pop
pop
scas
std
inc
inc
repnz
pop
sbb
add
mov
add
mov
lock
or
loope
pop
cwtl
mov
or
adc
fisttps
add
xlat
int3
xchg
popa
ja
in
stc
idivl
ret
loopne
divb
add
mov
popa
clc
out
add
and
shlb
leave
add
pop
addl
aad
cmp
outsl
dec
cld
xchg
mov
in
sti
or
push
cmpsl
test
shrb
adcb
cld
push
add
jbe
push
cmp
jecxz
fisubrs
mov
add
in
outsb
jmp
or
lret
inc
out
bound
inc
mov
ljmp
aam
rorb
add
insb
sbb
bound
sbb
daa
pop
pusha
sub
mov
mov
mov
inc
or
adcl
into
dec
pop
sbb
mov
mov
fnstcw
data16
or
mov
in
std
inc
xchg
pop
sub
and
push
fcomps
pop
sbb
in
test
mov
mov
sub
enter
add
lds
add
cld
clc
push
lock
fdivrl
add
mov
dec
imul
lock
inc
add
sub
pop
icebp
cmp
fisttpl
inc
adc
mov
je
daa
add
and
cltd
movsb
xor
arpl
shll
cmpsb
fs
mov
loopne
int3
mov
add
mov
repnz
or
and
enter
fcmovnb
sub
in
add
sahf
frstor
jg
add
and
xor
daa
cmp
add
into
push
insl
faddl
adc
lds
pop
lock
dec
adc
cwtl
sbb
xor
jae
movsb
pop
shl
sub
lahf
inc
inc
xorl
add
sti
outsl
inc
add
lods
xchg
sbb
and
push
cmc
and
add
add
mov
stos
mov
rcll
mov
sub
lahf
leave
mov
ds
icebp
jae
sbb
out
jo
inc
cmp
pusha
mov
push
in
mov
xor
sbb
adc
into
ret
xchg
jae
scas
pop
fisttps
pop
jecxz
fsubrl
mov
js
inc
pop
xor
inc
mov
data16
jecxz
add
push
and
lock
adc
cmp
xor
out
jge
enter
mov
adc
add
add
hlt
dec
xor
rcrb
push
fwait
divb
add
fcoms
push
imul
idivb
and
out
test
in
add
push
iret
fnstenv
adc
inc
jl
out
loope
ficomps
pop
add
jge
ffreep
or
cmpsl
add
sub
adc
pop
lods
xor
rcll
cmp
push
add
aam
xorb
add
dec
mov
add
movsl
lods
push
jl
sahf
hlt
mov
push
outsl
push
mov
jp
xchg
into
and
jno
mov
and
xchg
data16
add
jno
mov
popa
push
call
sti
dec
pusha
and
jge
add
fistl
hlt
cmc
loopne
movsb
sahf
push
mov
mov
add
fcomps
movsl
add
mov
inc
or
aam
andb
jns
in
mov
hlt
or
xchg
jp,pn
cmp
cmp
fbld
lea
sti
loopne
or
add
xor
mov
mov
sbb
cltd
ljmp
loope
sub
adc
xlat
insb
sbb
pop
sub
in
add
jae
in
push
sub
sbb
fsts
mov
lcall
and
hlt
cmp
sbb
cmpb
xor
adc
cmpsl
jno
sbb
out
and
lea
mov
inc
pop
sbb
mov
cmp
fs
aaa
popa
lret
and
lock
sub
add
add
movsb
test
cmp
add
mov
lcall
xchg
mov
in
shl
mov
sbb
dec
repnz
sub
push
inc
mov
push
shlb
cmp
test
test
shrb
je
jne
loopne
adc
addl
inc
inc
add
sub
xchg
sbb
iret
add
add
sbb
daa
cwtl
adc
in
inc
pusha
packssdw
leave
pushf
sub
stc
mov
cmp
out
inc
sub
sub
dec
or
adc
clc
mov
mov
cmp
lods
nop
shl
sar
add
sub
int3
fdiv
xor
out
insl
or
lock
test
repnz
cmp
add
dec
in
xor
nop
and
pop
shll
mov
and
or
lds
add
add
outsl
popa
xchg
mov
daa
lea
jle
cwtl
sbbl
sub
jb
add
into
aad
pop
xlat
es
cli
pop
sub
add
pop
cs
sub
pop
or
push
jp
cmp
loopne
inc
dec
add
and
lahf
cmp
clc
fdiv
ss
mov
xor
fs
mov
cmp
cmpsb
inc
or
cmp
insb
fs
pusha
sub
jno
pop
xorl
push
add
add
or
jmp
into
or
ja
add
enter
out
fdivrl
test
sub
inc
popf
xor
or
out
insl
dec
cld
xchg
add
int3
and
inc
sbb
push
into
lds
pop
mov
xor
arpl
xor
pop
mov
pushf
fs
push
push
add
rcrb
push
in
xchg
orl
and
out
fstl
rcr
or
xchg
call
cmp
mov
hlt
call
add
notl
lods
out
repz
sarb
push
sbb
mov
orb
push
sub
lock
sub
xor
mov
or
lods
adc
sbb
mov
inc
cmp
sbb
in
add
into
cld
pop
jo
out
or
arpl
mov
cmp
jp
scas
ret
adc
jne
data16
pushf
adcb
call
cmpb
adc
pop
fld
jae
jne
push
push
pushf
adc
ret
cld
test
add
pop
fwait
ljmp
dec
or
xorb
pop
mov
sbb
sub
push
mov
or
fstpt
pop
jecxz
ds
ficoml
ret
mov
fstl
jns
xor
out
add
and
ret
iret
push
dec
lcall
stc
pop
sub
pop
repz
dec
xchg
inc
fst
add
fnstenv
stos
int
inc
repnz
popa
jo
aas
pop
ja
mov
cs
mov
xor
pop
mov
mov
pusha
push
stos
push
std
out
dec
cmpl
push
pop
sbb
int
xor
add
cli
push
jmp
mov
add
cmpsb
gs
scas
daa
in
mov
imul
aas
lods
pop
adc
pop
push
add
sbb
hlt
add
mov
dec
rol
test
aam
andb
incl
xor
lods
cmp
aad
add
adc
imull
sbbb
cmpl
sub
or
xchg
jge
sbb
fisttpl
push
add
xchg
mov
xor
add
and
sbb
sub
and
imul
and
mov
cltd
lods
das
xchg
mov
rorl
dec
mov
sub
pusha
in
adc
xor
ljmp
jmp
aaa
fisttpl
pop
xchg
std
dec
mov
loopne
mov
adc
hlt
push
jb
imul
dec
sti
aam
pusha
in
int
jge
add
shl
jl
and
sbb
cli
or
mov
dec
and
add
inc
in
sbb
dec
sbb
xor
add
or
and
popa
pop
int3
pusha
in
sbb
mov
add
xor
movl
mov
lock
sbb
fisubl
int
inc
push
clc
nop
mov
movsl
shll
mov
xchg
cld
or
andl
cmp
push
pushf
test
push
cld
dec
xchg
orb
loope
and
xor
mov
jns
lock
xor
sbbl
jp
add
mov
add
sbb
and
push
ljmp
mov
jno
lock
or
js
add
and
lcall
shlb
fsubrs
inc
fs
movb
mov
adc
pop
imul
cltd
mov
cltd
outsl
dec
mov
add
scas
adc
jae
sahf
inc
mov
sbb
ss
subl
inc
cmp
pop
dec
out
cli
jg
fstpl
inc
pop
into
jb
pop
aam
dec
push
adc
loope
inc
lock
negb
daa
fwait
dec
mov
sub
repz
cltd
into
xchg
dec
out
ficomps
sbb
add
es
add
ret
fnsave
sahf
cmpsb
das
mov
loopne
aas
pushf
lods
mov
push
push
mov
and
insl
shlb
repz
loopne
cmp
push
jecxz
in
add
pusha
cmc
dec
add
insb
loop
cld
push
mov
fldl
cmp
enter
add
mov
call
cmpsb
dec
sbb
jl
adc
mov
xchg
push
add
xorl
mov
aam
xchg
mov
cmp
pop
rclb
mov
push
mov
imul
jne
mov
sbb
xchg
dec
dec
pushf
xchg
iret
dec
xlat
jl
rcll
mov
inc
roll
imul
cmp
testl
mov
mov
ja
or
push
push
cmpsl
add
xor
mov
hlt
mov
sbb
xchg
clc
push
add
test
rorb
mov
pop
lcall
andb
cmpsb
test
mov
emms
ffreep
outsb
dec
pop
or
mov
dec
push
faddl
xabort
sub
dec
xchg
add
insb
int
xor
pop
movsl
xor
inc
mov
leave
test
push
xchg
jbe
inc
arpl
dec
push
sub
fwait
and
xor
ret
jae
pop
adc
pop
xchg
inc
enter
fcmovne
add
fsubrs
rolb
add
adc
pop
adc
and
add
sub
xor
xor
jno
punpckhbw
jbe
out
adc
outsl
jge
add
inc
loop
lret
lcall
pop
jnp
mov
add
mov
dec
add
adc
loopne
ret
cmpsb
rolb
sub
push
jo
inc
nop
xchg
add
repnz
hlt
cmp
or
jg
xchg
pop
jno
ds
sub
add
mov
dec
sbb
rcl
dec
xor
iret
jmp
jnp
add
inc
fistl
es
add
andl
add
push
add
adc
jp
mov
dec
add
fadd
jae
dec
mov
push
mov
sbb
push
int
cmp
sbb
push
pop
add
icebp
adc
xor
fsub
jle
xchg
loopnew
out
cmp
add
rcll
pop
mov
stos
add
dec
out
lret
test
insb
in
add
fdivp
cmp
sub
ja
add
mov
add
push
stc
dec
mov
fwait
add
bound
sbb
ret
imul
in
ficoml
loop
adc
xchg
mov
pop
cmpsb
test
add
xchg
adc
andl
sbb
push
je
lret
add
roll
xor
add
jle
sbb
jbe,pt
mov
ja
test
xor
sub
sahf
inc
adc
jp
hlt
push
cmc
mov
add
mov
out
bound
arpl
inc
mov
sbb
push
and
add
popf
lret
adc
xchg
lahf
push
dec
adc
inc
jne
add
movl
jg
clc
add
push
add
sbb
js
add
pop
stc
sub
mov
jle
xorl
add
push
add
aam
pop
imul
jae
mov
inc
add
je
adc
pop
adc
out
mov
nop
mov
mov
add
adc
sub
pop
pop
mov
mov
lea
xor
xlat
xchg
inc
popa
sub
add
push
or
jnp
sub
inc
xor
sub
rorb
fdivrs
movsbl
fistpll
lock
xor
xor
inc
pop
mov
add
xchg
sbb
mov
cmp
cmp
lock
jb
add
mov
adc
in
adc
rorb
jnp
gs
aas
pop
dec
int3
cmp
test
lahf
ljmp
fisubl
push
add
sqrtps
addr16
in
jo
rolb
cmpsb
sbb
jns
xor
inc
inc
add
fnsave
inc
mov
cmp
dec
mov
mov
sub
add
sub
push
pop
lret
or
jb
pushf
fs
and
xchg
mov
inc
add
bound
lret
lds
add
lock
add
ds
xchg
addr16
lods
in
loope
cmp
add
dec
pop
test
sub
mov
mov
mov
test
rcll
inc
stos
in
dec
cmp
mov
pop
add
add
jmp
xor
xchg
out
lcall
ja
popf
add
or
cmp
pop
sahf
test
mov
pop
pusha
scas
xchg
out
add
or
ja
mov
dec
repnz
adc
mov
push
rorl
add
dec
and
add
imul
mov
fcmovb
lret
shr
cltd
xlat
std
pop
int3
or
out
scas
rcrb
push
mov
fsubrl
and
inc
jno
das
cmp
aas
xor
mov
popa
lcall
pushf
iret
pop
or
xchg
add
cmpsl
ja
lock
cmp
ret
lods
mov
jge
shll
xor
insb
mov
mov
adc
data16
push
inc
lahf
imul
sub
sbb
or
pop
push
xor
dec
cmp
dec
shlb
pusha
out
mov
lods
pop
in
push
jl
inc
rolb
idivb
test
add
shlb
sbb
add
jns
cmp
fisttpll
ret
test
pop
sti
enter
mov
push
or
add
movsl
and
inc
fisubrl
nop
stos
cmp
pusha
xchg
mov
test
cs
sbb
outsl
add
dec
and
dec
sub
add
shlb
out
mov
sbb
cmp
cmpsl
sarl
aas
mov
jmp
pop
inc
add
add
and
adc
jl
nop
test
jecxz
sti
cmc
dec
add
fnstcw
aam
sbb
leave
out
pop
popa
mov
and
adcl
add
dec
dec
xchg
add
movsb
jnp
add
pusha
cltd
adc
add
sbb
loop
rclb
in
jns
add
and
lret
into
or
mov
and
and
ret
jp
sbb
repz
sub
lods
lret
add
xchg
pop
imul
xchg
dec
inc
cmp
add
push
jle
std
fldl
xor
lock
fists
mov
dec
or
insl
out
pop
out
jp
arpl
inc
loopne
xor
fucomip
xchg
fsubr
sub
lea
lds
sbb
inc
int
jmp
sub
adc
jns
add
scas
add
jmp
mov
xor
mov
mov
jge
mov
pop
mov
xchg
jnp
pop
jo
dec
add
aad
cli
paddd
les
flds
add
jmp
push
shll
enter
ret
and
jae
xor
fidivrl
add
inc
cwtl
lods
inc
in
sarb
lcall
pop
add
or
cmp
cs
and
jnp
addr16
pop
test
mov
add
into
mov
ret
xor
rcr
daa
lret
jns
leave
pop
jg
test
sbb
add
and
adc
je
js
dec
lods
cmp
daa
add
jle
dec
std
cmpsl
add
mov
test
ret
cmp
lods
pop
mov
movsb
in
xchg
jnp
jb
cmpsl
add
xchg
cmp
pop
lahf
fcoms
ss
je
mov
pusha
mov
push
sahf
test
add
push
jno
pop
cltd
ljmp
movsb
add
subl
add
mov
mov
dec
loopne
cmc
pop
mov
jo
add
jb
dec
mov
inc
add
std
push
dec
inc
outsl
call
add
xchg
inc
pop
and
push
cmc
xchg
jg
xor
and
int
and
add
cli
fstl
add
cltd
stc
outsb
sbb
ret
mov
or
xor
add
inc
mov
sbb
add
es
fists
mov
mov
in
test
daa
rcr
nop
daa
cmovne
mov
movsl
mov
add
inc
mov
repnz
cwtl
xorb
jmp
add
push
in
jns
js
fwait
lods
add
add
jg
into
fs
add
subb
subb
cmpsb
sub
fucomp
add
data16
lret
mov
daa
repz
mulb
push
mov
sbb
jp
insb
jge
pop
pop
imul
mov
sahf
sbb
add
data16
jo
loopne
jle
adc
or
add
mov
xor
mov
add
mov
xchg
mov
ja
ljmp
icebp
inc
pusha
lods
cld
add
rep
ljmp
je
push
xchg
add
imul
pop
inc
fsubrs
mov
or
inc
sti
add
jmp
sbb
inc
shlb
in
imul
ret
fisubs
loope
mov
mov
insb
dec
inc
in
jnp
loop
add
neg
cmpsl
pop
sbb
dec
and
cltd
add
xchg
push
and
jns
das
and
mov
lea
add
mov
fldcw
mov
push
add
ja
pusha
add
mov
adc
clc
or
stc
addr16
mov
shlb
int3
add
or
add
inc
cmp
adc
hlt
mov
jne
pushf
aaa
arpl
add
push
and
add
movsl
xor
popa
aas
pop
xchg
test
xor
jge
push
outsb
sbb
xchg
mov
and
divl
gs
sahf
fstl
into
pop
out
or
enter
add
out
pop
push
or
xchg
dec
or
pop
adc
or
imul
jl
inc
xor
fildl
mov
mov
push
push
add
pop
sbb
popa
ret
sti
cltd
test
adc
adc
dec
or
sarl
and
mov
nop
pusha
jle
sub
pop
hlt
add
inc
mov
and
push
cwtl
mov
mov
mov
push
adcb
sbb
jbe
or
dec
aam
sbb
xor
adc
fdivs
addr16
lret
pusha
mov
adc
jl
xchg
xchg
sbb
cmp
jae
or
add
popf
sub
out
dec
xchg
or
inc
andb
add
jns
cmpsl
push
jle
or
inc
movsb
into
push
xor
clc
dec
daa
js
add
loopne
push
lods
inc
aaa
add
push
in
popa
pop
push
or
rolb
add
lea
addr16
ds
mov
jle,pn
mov
xor
push
movsb
hlt
leave
add
ret
mov
stos
decl
pop
add
jne
mov
iret
add
inc
xor
divl
out
add
bnd
roll
fcmovnbe
jge
mov
pop
outsl
test
shll
rolb
xchg
push
mov
jecxz
jmp
cmp
xchg
cmp
inc
dec
stos
rcrb
dec
adc
adc
ret
hlt
je
call
aam
xchg
mov
push
test
repnz
jns
push
xor
sbb
push
fdivs
xchg
iret
dec
jl
scas
out
loop
add
arpl
xlat
mov
jle
push
inc
es
push
sbb
add
cmc
lahf
enter
scas
sbb
mov
cs
mov
cmp
test
fiaddl
lds
pop
mov
lret
cwtl
mov
mov
push
mov
mov
in
rcl
and
add
fwait
lret
incl
inc
mov
xor
sub
add
jbe
clc
add
push
cmp
fsubp
sub
stos
outsl
dec
loope
cltd
divl
mov
and
andb
add
cmc
repnz
sub
sbb
jno
inc
mov
add
sarb
jp
sub
movsl
shll
mov
jb
je
test
sbb
push
inc
or
add
mov
cmp
jo
or
daa
pusha
mov
sub
bound
and
sbb
ret
lock
add
or
xchg
pop
aas
shrb
and
test
mov
mov
sbb
loop
repz
scas
je
lahf
add
push
xlat
pop
pusha
inc
push
daa
cli
shll
cmpxchg
mov
dec
pop
add
add
sbb
jl
or
jo
lcall
xchg
mov
push
loopne
pop
cmp
dec
jg
ss
enter
inc
mov
jl
or
test
addr16
lret
xor
aam
fcomps
cmpsl
mov
xchg
and
aaa
mov
and
mov
or
addb
mov
iret
sbb
mov
pop
scas
lds
mov
inc
jb
iret
nop
add
jmp
mul
add
sub
add
mov
out
sbb
pop
add
aas
mov
add
cs
loopne
push
and
xor
mov
push
or
lret
add
xchg
ja
adc
pop
xchg
add
stos
jno
mov
aaa
jbe
pop
and
dec
imul
push
es
inc
push
cmp
xor
jns
repz
daa
mov
sub
dec
cmp
scas
testl
pusha
ret
sbb
shll
push
daa
and
mov
rcll
mov
dec
cs
lock
outsb
nop
rorb
add
xchg
add
mov
cmp
jb
add
aas
sbb
add
xor
call
push
adc
nop
add
or
es
adc
fistpl
call
int
sbb
mov
pop
test
pop
xchg
enter
arpl
loopne
mov
cmp
add
lods
xorl
fisubl
mov
mov
ja
dec
push
jnp
mov
sahf
push
add
nop
dec
into
mov
adc
sarl
adcl
add
sahf
mov
dec
aas
pop
sub
mov
cmp
cltd
pop
je
out
movl
mov
sub
push
mov
out
in
std
add
outsb
inc
loope
out
inc
xor
pop
repnz
icebp
and
ja
in
xor
mov
inc
test
adc
xchg
add
es
movsl
mov
jno
addb
ljmp
out
hlt
and
add
xchg
sbb
inc
sbb
xorb
enter
add
pop
xchg
fiaddl
shll
mov
fs
add
xchg
rolb
call
test
repnz
add
dec
andb
xchg
ret
scas
enter
es
sub
out
jbe
out
push
or
add
je
mov
xchg
pop
mov
cmpsl
imul
or
push
arpl
cmp
lock
repnz
add
mov
jle
pop
add
js
scas
rcr
int
sbbb
inc
cmp
in
fcoml
sbb
adc
das
add
push
lods
aas
and
cmp
mov
inc
out
mov
stos
cmpsl
lods
xor
fdiv
rclb
xor
or
stc
inc
mov
fstl
pop
add
ljmp
cs
inc
dec
jge
sbb
int
icebp
add
jmp
push
popa
loopne
mov
mov
mov
mov
cs
add
and
push
cmp
ja
int
push
inc
rcr
shlb
mov
mov
pop
and
icebp
mov
adc
sbb
loop
add
in
fwait
icebp
cmp
js
fs
pop
sti
add
sub
ret
outsl
cmc
jmp
push
pop
add
decb
imul
jle
pop
add
call
shrb
add
out
lea
fsubrs
and
add
lret
jge
or
add
cmpsl
lret
aad
xor
mov
pusha
ret
repnz
clc
add
xor
dec
cmp
cmpl
pop
add
adc
ret
cld
push
inc
insl
out
rcr
sbbl
adc
cli
popf
sbb
nop
pop
push
push
add
xchg
sub
lods
int3
jle
inc
fdivl
sbbl
mov
push
xchg
stos
push
pop
std
pop
push
inc
add
mov
shlb
movsl
xor
adc
xchg
cltd
cmp
add
mov
shlb
vpcmpeqd
arpl
aas
dec
jo
insb
mov
add
outsl
xchg
or
mov
cmc
add
popf
insb
and
mov
jecxz
test
sub
aaa
add
ds
pop
mov
cmp
shlb
push
cmp
daa
pop
addb
jp
or
jo
mov
mov
pop
das
jns
add
mov
push
aam
sub
lret
lea
dec
adc
add
xchg
cmp
es
aaa
add
fnstsw
inc
dec
xchg
nop
hlt
add
mov
xor
sarb
dec
mov
jg
and
add
push
xchg
popf
in
fdivrs
mov
cmp
jle
into
ja
icebp
repnz
andl
push
cmp
sub
adc
test
sbb
rclb
push
or
dec
lahf
xchg
and
pop
mov
add
lea
pop
jns
pop
xor
adc
enter
add
add
xor
shll
mov
adc
push
sub
adcb
mov
add
ret
jmp
mov
push
or
jno
pop
inc
mov
jl
addb
push
jle
in
sbb
cmpsb
jo
mov
hlt
pop
ret
or
add
in
or
cmpsb
add
leave
pushf
add
nop
xchg
fcmovbe
lock
sub
shlb
stos
mov
add
sbb
xchg
mov
xchg
add
inc
lret
testl
add
out
inc
arpl
jbe
jns
add
adc
dec
out
or
jno
iret
aad
xchg
sub
push
mov
pusha
inc
add
add
mov
mov
jl
adc
dec
jg
or
mov
cwtl
shl
add
enter
jmp
mov
sbb
in
out
xchg
adc
xchg
cld
aam
mov
pushf
mov
add
sti
cmp
addl
cmp
add
repnz
aas
mov
movsl
sbb
and
adc
int3
enter
adc
gs
pop
push
sub
sub
rorl
incl
push
ds
hlt
jbe
gs
je
and
xchg
bound
test
mov
add
cli
dec
addr16
pop
add
scas
or
add
inc
ss
jmp
xcrypt-ofb
cmpsl
sub
sub
je
nop
push
popf
mov
add
sti
jle
scas
add
add
scas
push
add
mov
gs
loop
inc
push
fiaddl
inc
dec
cmpsl
aad
stos
ja
add
fiadds
sbb
add
or
pop
jnp
leave
add
jne
cmpsl
mov
xor
int
mov
in
xor
nop
aaa
push
jns
into
add
add
pop
vblendpd
dec
and
add
test
sbb
push
add
xchg
dec
dec
mov
mov
ja
inc
mov
lahf
mov
sub
sahf
subb
in
psrad
test
cwtl
add
sbb
into
add
pop
imul
xor
cltd
mov
mov
push
jecxz
jle
mov
xor
or
jl
cmp
and
je
or
in
add
jp
add
pushf
nop
cmp
mov
add
mov
add
ljmp
push
add
add
sub
inc
fnclex
inc
adc
clc
xor
rcll
dec
xchg
jecxz
movsb
sub
mov
outsb
xchg
jnp
jnp
cwtl
or
shl
jg
sub
xor
addl
pop
cmpsb
ljmp
xor
cmpsl
sti
dec
pop
push
xchg
xchg
mov
iret
jno
sbb
cmp
mov
adc
sbb
fsubl
add
cmp
ja
rcll
adc
pop
insl
cmp
add
fadds
push
nop
into
icebp
push
or
lahf
mov
or
and
pop
data16
outsl
mov
jl
nop
popa
dec
fdiv
mov
push
cld
cmp
mov
push
add
pop
test
xchg
cmp
cmp
add
daa
roll
inc
push
out
add
out
dec
pop
pusha
push
add
and
xchg
popf
mov
pop
cmp
ror
es
sarb
popa
xor
dec
push
js
add
sbb
fiadds
fstpt
jle
fxch
jmp
inc
inc
cltd
mov
dec
push
scas
sbb
fildl
mov
popf
pop
pusha
adc
cmpsb
out
or
cli
add
inc
rcrl
add
inc
xor
mov
xchg
push
add
sub
repnz
mov
cld
jp
dec
sar
test
add
xlat
fnstcw
mov
mov
add
sbb
lods
test
sbb
das
dec
call
xchg
mov
aad
jge
rcrb
push
push
cmp
je
sbb
jle
add
fcomip
or
adc
add
dec
popa
inc
inc
xchg
fnstenv
jecxz
jge
xlat
loopne
aad
xor
jo
add
stos
fdivr
xchg
inc
cli
add
pop
dec
rorb
add
jne
rcll
push
iret
sahf
stos
add
fidivrl
std
add
into
cmp
sub
pop
movb
pop
ret
fs
inc
enter
in
push
stc
inc
psrad
mov
shrb
inc
add
mov
add
popa
call
or
or
xchg
sub
add
fxch
rcrb
add
fs
adc
adc
adcl
xchg
insl
fadds
roll
cmp
nop
jg
jne
adc
dec
rol
adc
xor
sbb
shrb
call
ljmp
mov
addb
jp
add
leave
in
movb
aas
call
jnp
cmp
insb
mov
test
sub
or
lcall
mov
inc
fs
test
cmpsb
adc
sbb
iret
lret
js
scas
cltd
inc
mov
int
test
jbe
inc
mov
ror
and
or
jnp
dec
in
arpl
mov
rorb
mov
xchg
add
loopne
jg
mov
push
les
push
insb
sub
or
lcall
xchg
lea
sbb
push
jno
mov
dec
dec
mov
fxch
pop
inc
imul
add
mov
andb
mov
mov
testb
push
push
push
and
mov
sub
mov
pop
nop
roll
mov
sbb
daa
mov
add
popf
mov
cltd
orb
ret
add
sub
adcb
addr16
push
jl
mov
pop
pop
jo
lret
movsl
ss
xchg
pusha
add
or
loopne
cmp
inc
fs
scas
cmp
mov
push
sbb
jmp
adc
out
add
scas
int
pusha
fst
mov
push
negl
push
sbb
arpl
loopne
sub
scas
add
lds
or
push
lcall
addb
cli
fwait
mov
sub
sbb
aam
idiv
outsb
inc
adc
xchg
leave
shlb
fwait
add
and
dec
jl
test
xor
jnp
pop
stos
add
mov
mov
xchg
add
and
pop
incl
fwait
dec
shll
sbb
pop
les
mov
xor
lock
push
out
nop
and
sub
sbb
movsl
popa
mov
inc
outsl
jg
add
iret
and
lods
sarb
negb
pushf
into
fbld
pusha
or
add
jl
cwtl
notb
jge
add
jg
xchg
mov
test
loop
inc
xor
stc
fdivl
insl
pop
popa
xor
aas
nop
fs
dec
sbb
stos
add
sti
movsb
push
decb
aas
pop
sbbb
imul
jo
lock
mov
iret
xchg
inc
scas
cs
cwtl
jge
xchg
outsb
pop
popf
mov
in
or
pop
cmp
pop
inc
ljmp
les
jo
sbb
xchg
fiaddl
adc
into
push
inc
aas
add
inc
loopne
outsl
xchg
mov
bound
mov
out
add
pushf
fsub
fs
jp
insl
xchg
xchg
mov
in
les
out
add
nop
sbb
xor
loopne
das
push
sub
dec
fidivrs
add
cmpsl
mov
add
sbb
fsub
or
and
xor
lods
rolb
dec
mov
js
es
xchg
lahf
mov
push
lock
jns
pop
dec
movsb
and
test
mov
or
pop
xchg
add
or
xor
lods
add
add
jmp
jne
scas
insl
popl
push
pop
sub
xchg
xor
mov
pusha
lds
xchg
add
mov
imul
xlat
bound
xor
dec
sbb
dec
out
push
mov
dec
sub
add
mov
push
sbb
outsl
add
daa
inc
or
mov
imul
lods
pop
push
pop
mov
jle
pop
test
stc
jl
push
lahf
pusha
inc
call
in
lds
add
cmpsb
inc
push
daa
inc
dec
pop
adc
testb
setl
and
or
add
ret
insl
shr
ja
add
out
les
add
push
and
fsubrl
cmc
idiv
mov
pusha
ss
stos
ds
sub
into
pop
jb
cltd
mov
lcall
mov
outsl
lods
mov
adc
lret
add
bound
mulb
cli
sbb
sub
js
shlb
out
dec
nop
sbb
sbb
dec
imul
in
sub
push
mov
xchg
aas
mov
in
sub
add
sbb
add
inc
repz
push
addb
inc
pop
adc
pop
cs
and
and
sbb
scas
mov
mov
push
push
sub
and
data16
inc
rcrl
cmp
fstl
ljmp
pop
scas
ret
dec
add
add
mov
adc
mov
ljmp
mov
inc
enter
lahf
and
fadd
lret
dec
add
mov
xchg
and
adc
clc
sub
sbb
inc
sub
cwtl
aad
push
out
lea
repnz
dec
mov
enter
dec
lock
sbb
adc
dec
rorl
test
fs
adc
add
lret
mov
es
pavgw
mov
dec
xor
js
add
das
adc
and
je
xor
lds
or
movsb
xchg
mov
rcll
or
mov
push
in
push
xchg
inc
xchg
hlt
rorb
movl
jge
mov
xor
test
clc
popf
add
jle
sub
xchg
mov
push
jp
mov
cmc
push
scas
movsl
fdivl
sti
cwtl
call
rcrb
jb
xorb
push
es
push
or
les
sbb
int
mov
add
mov
scas
movsl
das
push
mov
xor
btc
les
pusha
xchg
mov
idivb
pop
jecxz
mov
insl
pop
cld
add
fisubrl
fstpt
add
mov
lret
dec
dec
popf
lods
add
hlt
nop
push
add
ret
xlat
in
sar
jmp
jb
sbb
scas
add
pop
add
jo
enter
pop
adc
add
lock
scas
sub
add
insb
out
mov
rcr
adc
push
loop
inc
testl
pop
add
std
sbb
add
and
dec
mov
jno
pmulhuw
inc
ss
dec
aad
mov
addr16
pop
xor
test
aaa
cmp
loopne
jnp
xlat
push
jg
rcrb
xchg
out
call
add
ja
pushf
adc
les
movsb
mov
add
add
imul
xor
pop
add
pop
mov
push
movsb
push
int3
mov
pop
add
stos
pop
xchg
ret
clc
sbb
jnp
dec
and
add
mov
insl
and
sar
sub
add
sbb
sub
cli
add
mov
inc
addb
push
popl
sub
cwtl
stos
sahf
mov
and
das
sub
add
mov
or
mov
mov
pusha
pop
add
jmp
mov
cli
icebp
aaa
add
pop
jp
mov
push
shl
pushfw
sub
rol
shl
sbb
cmpsb
mov
sbb
mov
test
cmp
cltd
les
fwait
ds
test
inc
orb
or
test
out
stc
add
jno
push
push
and
sbb
xchg
sbb
xor
xlat
adc
cld
xor
jae
icebp
shll
repz
pop
jns
sbb
lock
inc
insb
subb
push
add
sub
mov
sbb
xor
ja
mov
xlat
sub
mov
enter
je
xor
inc
xchg
sub
movl
push
add
mov
mov
pop
mov
int3
add
jle
jo
ljmp
popa
mov
leave
mov
test
addr16
xchg
bound
mov
sub
mov
mov
dec
push
add
push
dec
scas
adc
jle
sbb
sub
xchg
aam
add
shrb
adc
in
mov
scas
test
fimull
leave
push
sarb
bound
mov
push
dec
jbe
add
jmp
xchg
mov
adc
cmpb
cltd
lahf
orl
bound
in
fstps
lds
add
dec
xlat
ret
hlt
mov
subl
mov
mov
and
inc
psrad
stc
pop
pusha
addb
stos
cmpsb
xor
jmp
mov
pop
cltd
or
ret
mov
mov
dec
aam
jmp
pop
push
sahf
jbe
jnp
bound
aam
sub
xor
xchg
iret
nop
jo
test
subl
add
xchg
stos
std
cltd
mov
mov
sub
fs
sti
mov
popa
and
pop
add
push
adc
cmc
add
loopne
bound
daa
mov
cmp
cli
sbb
pop
or
cs
dec
fcompl
inc
mov
cwtl
and
push
push
xchg
and
inc
mov
inc
push
std
mov
in
push
and
into
dec
mov
sub
shlb
rcll
repnz
dec
push
dec
insl
xor
pop
imul
pop
add
popf
mov
jnp
add
pop
add
inc
les
cld
sbb
test
xchg
cmp
test
pop
sub
cwtl
xor
sub
mov
dec
add
or
lds
loop
mov
and
pushf
dec
add
pop
mov
add
test
test
sbbl
cmp
loop
rclb
push
and
roll
stc
xchg
cltd
imul
cmp
xchg
sar
mov
pop
adc
movsl
jo
lock
jl
add
popf
repz
mov
aaa
incb
popa
push
push
mov
jecxz
fldcw
into
add
repz
rcrb
add
movsl
adc
or
sub
aas
ss
repz
add
sbb
rorb
xchg
sbb
insb
sbb
inc
rcrb
lcall
loopne
add
iret
cmp
jmp
pop
push
fldl
popf
add
pop
dec
sbb
rclb
enter
mov
push
je
mov
xchg
mov
mov
xor
cwtl
lds
jb
add
xchg
int3
loope
pop
pop
cmp
stos
sbb
sahf
add
sbb
push
jo
popf
aaa
inc
popa
pop
jne
sar
stos
add
stos
mov
mov
sar
and
xor
in
add
sbb
pop
ja
shlb
push
pop
mov
add
add
add
hlt
jae
inc
icebp
test
sub
jo
or
add
xchg
aam
lds
dec
jno
fsubl
mov
sub
mov
rolb
and
jle
inc
jns
add
in
pop
fs
leave
jo
and
ja
cmpsb
adc
imul
mov
push
add
xor
push
pop
daa
mov
xor
inc
movsl
sbb
or
inc
sub
sub
mov
push
add
lock
add
je
dec
xchg
iret
stos
add
in
lcall
fsubrl
mov
int
pop
adc
xchg
pusha
jl
ret
sbb
push
sub
push
adc
xchg
inc
and
call
testl
iret
add
push
xchg
pushf
aas
inc
sub
idivb
dec
shrb
push
test
or
int3
pop
clc
add
push
xchg
imul
xchg
clc
add
mov
pop
and
xor
add
mov
stos
popf
xchg
aas
and
add
sbb
sahf
enter
add
jae
add
pusha
bound
jo
int
sub
clc
mov
gs
flds
add
cld
jecxz
jbe
mov
orb
movsl
das
jmp
movsb
inc
insb
inc
add
and
jo
jbe
daa
sbb
cmp
xchg
mov
pop
jmp
push
mov
add
or
dec
jns
mov
add
shr
insb
add
inc
push
inc
cmpsl
lahf
hlt
and
sbb
into
fsubrl
cmp
clc
sbbl
ja
lea
xchg
frstpm(287
add
std
shlb
add
clc
pop
dec
cmp
mov
loopne
mov
add
cs
add
out
mov
cmp
cwtl
mov
mov
inc
dec
notb
add
test
sub
dec
pop
xor
sbb
xorl
lahf
xchg
mov
ret
mov
add
test
adcb
sub
add
cmpb
rorb
xchg
inc
je
xchg
mov
pop
pop
cmp
movsb
jae
lret
inc
adc
xchg
cmp
inc
sub
cmp
das
xor
push
cld
add
push
pusha
adc
cmp
xor
arpl
sub
pop
cld
sbb
dec
and
pop
data16
xor
cltd
add
cmpb
jns
test
out
rcl
sub
aam
aad
jg
lods
bound
dec
aad
lahf
cltd
mov
cmpsl
lds
pop
push
rcrl
add
imul
dec
stc
cli
cld
jge
repnz
sub
shr
mov
cmpsl
inc
cmp
xchg
add
sbb
es
and
bswap
push
sbbb
and
stos
int
cld
push
aaa
sub
xor
sti
insb
nop
and
mov
hlt
out
mov
add
jg
or
cs
cwtl
xchg
ja
add
jns
loope
or
push
daa
add
jno
sub
outsl
fdiv
jbe
cmp
jg
cmp
cmpsl
les
icebp
mov
fcmovbe
ljmp
inc
cltd
adcb
into
add
sub
mov
cmpl
testl
sub
or
sbb
add
aad
fiadds
inc
push
xor
push
add
insb
ret
mov
cmp
cmp
mov
or
cmp
add
push
enter
xor
mov
adc
les
into
jae
repz
outsb
xchg
xchg
cwtl
add
and
xlat
loope
push
nop
test
or
out
loop
out
cmp
test
push
outsb
add
leave
jno
cmp
pop
xor
mov
mov
lock
je
aam
push
or
fmulp
loop
lods
in
in
testb
mov
call
inc
xor
sub
rolb
iret
cmpsb
sti
inc
clc
out
data16
inc
dec
xor
jnp
add
scas
and
xchg
jl
mov
out
push
lock
add
dec
mov
mov
pop
push
dec
add
or
pusha
nop
mov
push
mov
sub
add
xorl
je
add
inc
arpl
add
cmp
std
add
repz
or
out
mov
add
or
out
mov
verr
out
inc
xor
out
add
rcll
jo
aaa
cli
add
mov
adc
rclb
xor
sub
lcall
out
inc
and
jbe
add
dec
add
fcomps
add
cmpb
push
outsl
out
jecxz
cltd
add
mov
add
xchg
and
test
lret
sahf
sbb
cmpsb
pop
add
popf
pop
in
sub
add
test
call
jmp
cmc
in
dec
roll
test
loope
fldcw
sti
jg
ja,pn
cmc
test
fnstcw
mov
add
scas
push
dec
das
pop
sbb
clc
inc
pop
add
negb
jg
add
iret
repnz
hlt
js
sbb
mov
into
pop
nop
pop
fisubrl
add
shlb
mov
adc
xchg
pop
outsl
clc
sub
call
divl
inc
inc
dec
nop
jo
insl
addr16
enter
pop
call
sub
rolb
add
adc
cwtl
test
js
sub
dec
mov
lret
pop
and
loope
push
repz
pop
dec
aas
outsb
add
out
or
add
sub
sbb
jne
add
ljmp
sbb
push
and
add
outsb
fwait
xchg
jnp
mov
add
inc
lock
adc
rorb
add
js
push
data16
stos
add
mov
xchg
imul
sub
jmp
je
jge
iret
ljmp
add
in
movsl
dec
adc
je
test
in
data16
and
jp
xchg
cli
imulb
add
push
ror
mov
push
dec
repz
bnd
nop
loopne
xchg
sbb
pop
std
ds
stc
lcall
mov
bound
dec
scas
jno
adc
jnp
shlb
push
rorb
adc
clc
add
inc
pushf
mov
int
insl
pop
dec
xchg
cmp
push
cmp
xchg
xchg
mov
das
repz
cmpsl
add
test
cmp
jns
add
sub
loope
dec
mov
push
mov
test
in
lods
movl
popf
and
add
cltd
mov
add
dec
sbb
adc
jns
clc
xor
inc
leave
outsl
push
mov
mov
mov
mov
mov
push
push
jp
or
rorl
lret
cltd
mov
cmpsb
push
les
push
mov
jl
adc
add
cmp
and
loop
incb
xchg
sbb
add
cmp
jne
mov
aad
addl
fnstcw
rcll
enter
jo
aad
add
fstl
xor
cmp
stos
push
jo
inc
stc
add
jg
push
jge
cmp
fprem1
sbb
daa
sbb
push
mov
dec
inc
popa
enter
add
out
dec
jbe
in
add
loop
pop
aad
add
add
movsl
popl
leave
hlt
push
push
ret
in
add
les
jnp
pop
add
adcl
je
push
test
shll
add
fidivl
adc
cli
outsb
cld
enter
dec
fildl
and
loopne
and
nop
nop
add
aad
rolb
and
adc
adc
movsb
xchg
cmp
add
mov
add
inc
rcrb
scas
fadd
jl
jecxz
mov
adc
adc
ds
sbb
or
lcall
stc
mov
in
orb
jle
add
mov
cmovo
sbb
sub
loope
or
add
in
push
or
aam
icebp
and
adc
and
pop
enter
mov
jae
js
mov
int
xlat
movl
inc
test
add
daa
mov
out
sub
cmp
pop
dec
test
pop
mov
loop
pop
pusha
cmc
fs
add
and
std
add
or
outsl
inc
sub
or
aas
adcb
js
xchg
fstl
dec
jb
inc
and
inc
xchg
scas
sti
movsl
ret
jae
or
dec
in
mov
inc
lret
mov
add
fwait
loopne
mov
arpl
adc
xchg
add
pop
mov
mov
add
mov
adc
mov
test
call
insl
or
mov
sbb
cmp
fildl
jle
fsubl
cmp
pop
add
int
pop
test
mov
mov
mov
loopne
fdivr
push
cmc
sub
movsl
or
dec
push
enter
mov
and
push
rorb
shll
test
mov
add
lods
scas
sub
pop
loope
clc
inc
jo
leave
into
divl
mov
xchg
xchg
dec
movsb
inc
es
pop
pop
xor
add
jmp
add
dec
adc
mov
ds
add
rorb
xor
jnp
xchg
xchg
add
pop
fcomi
mov
js
sbb
jo
add
cmp
adc
inc
cld
xchg
xchg
xor
mov
add
data16
sub
nop
subl
cmpsl
push
ret
repnz
add
hlt
cld
or
loope
ds
cmpb
outsb
push
adc
cmp
jle
out
repz
or
rcrb
sub
jp
mov
jb
or
lcall
jp
sub
sbb
movsl
mov
pushf
jnp
dec
adc
push
lea
add
push
jl
nop
decb
adc
scas
repnz
jbe
fnstcw
in
sbb
adc
scas
les
push
inc
xor
dec
mov
cltd
add
test
insb
in
mov
cmpsl
push
adc
insl
add
jb
pop
out
sub
xor
mov
inc
add
mov
push
add
inc
pop
aas
xchg
dec
into
xchg
shll
jl
add
and
push
xor
adc
add
sub
dec
inc
out
push
ret
in
bound
pop
push
ds
popf
add
in
lret
mov
pop
dec
xor
pop
ljmp
adc
sarb
add
mov
test
add
loopne
cli
add
jge
sub
popa
scas
sbb
shlb
enter
pop
push
cmpsb
cwtl
addl
sub
mov
mov
das
pop
dec
subb
arpl
add
cmpsl
add
bound
or
cmp
sbb
xchg
sbb
jge
scas
jp
les
ljmp
sbb
sub
popf
sarb
xlat
push
repnz
push
mov
push
pop
adc
dec
mov
imul
jae
add
mov
add
icebp
mov
mov
data16
fisubrs
ja
add
jns
sarl
cwtl
aas
jno
or
aam
dec
bound
lret
xchg
lahf
nop
ficompl
scas
add
push
loope
add
sbb
jns
test
push
inc
les
xor
pop
push
or
mov
or
clc
lret
cld
cmc
scas
inc
push
rolb
xor
mov
inc
enter
repz
loopne
lods
lods
scas
xor
cmpb
mov
add
lahf
add
ret
add
cwtl
mov
mov
xor
pushf
mov
jb
push
outsb
shrb
cmp
icebp
pop
rolb
push
sub
lods
clc
subb
dec
xchg
xchg
or
aam
xlat
add
push
jg
mov
fdivrs
xchg
mov
pop
xor
orb
stos
sub
sahf
mov
insl
inc
push
js
out
cmp
pop
incb
sbb
and
add
inc
and
adc
or
test
add
sub
push
stos
ljmp
fimull
mov
lcall
js
mov
or
ljmp
adc
mov
call
add
mov
add
push
jb
add
sub
mov
mov
cs
cwtl
jo
cwtl
test
mov
jb
ja
pusha
test
and
divb
add
add
mov
fldl
and
or
rorb
push
jle
and
sub
jns
clc
js
sub
adc
mov
mov
scas
fs
and
adc
dec
add
pusha
jge
test
jl
add
cltd
lea
adc
out
ret
cmp
pop
mov
xor
aam
or
test
add
neg
sbb
mov
add
push
add
xchg
flds
cmp
movsb
mov
jle
daa
mov
jmp
adc
push
add
test
into
push
add
mov
add
idivb
inc
add
cmc
test
pop
add
into
and
xor
fs
mov
mov
and
cltd
add
shll
mov
xor
cmp
xchg
mov
outsb
aad
or
cmc
mov
cli
adc
lds
cmp
nop
frstor
push
jg
mov
lods
xor
ret
sbb
add
js
push
mov
xlat
mov
fnsave
and
sbb
inc
jp
dec
add
xchg
mulb
mov
mov
dec
mov
add
popf
lock
cwtl
pop
in
add
pop
std
sbb
icebp
dec
js
add
mov
and
jge
es
data16
adcb
cmp
add
cs
push
es
aam
int
leave
push
repz
pop
sbb
and
inc
rcrb
add
incb
cmp
inc
cld
test
mov
sbb
loop
jns
sub
mov
in
lods
push
pop
add
std
sbb
das
pop
and
mov
xorb
mov
sub
inc
lea
and
and
pop
adc
adc
mov
or
inc
bound
test
aad
inc
hlt
call
jb
xor
mov
leave
push
pop
xchg
add
out
jae
or
pop
xchg
push
xlat
stc
add
test
je
mov
inc
negb
push
adc
pop
jl
add
push
sbb
add
je
adc
int
add
fs
jmp
jl
sbb
pop
repnz
pop
inc
popa
add
push
or
repnz
push
push
sbb
add
add
and
pop
rclb
sbb
and
repnz
xchg
or
mov
xor
jo
movl
imul
out
mov
push
jns
cwtl
add
out
jp
xor
inc
outsb
mov
dec
das
andl
pusha
les
lds
out
roll
add
sub
add
push
loopne
les
dec
mov
adc
std
lcall
mov
loopne
es
add
add
sbb
pop
cmp
xchg
fadds
push
outsb
stc
mov
add
aad
js
ds
dec
gs
add
cmpsl
sbb
and
fmull
mov
xor
pop
loopne
push
mov
out
cmp
or
xchg
jge
mov
mov
scas
xchg
push
ja
add
pusha
push
cmp
movaps
add
and
mov
mov
add
mov
cmpsl
and
xrelease
aas
xor
imul
shr
lods
lret
loop
rolb
pop
mov
mov
or
push
sub
add
fdivrs
add
mov
outsb
fwait
sarb
ds
test
add
mov
shlb
mov
sti
adcl
push
adc
insl
sub
clc
sbb
sbb
sub
cmp
mov
stos
ret
jl
int3
mov
push
outsl
stc
shrb
lret
push
inc
pop
xchg
into
in
add
and
adc
movsl
out
add
inc
je
inc
dec
or
jbe
sub
xchg
push
cli
cltd
mov
jp
xor
and
mov
stos
add
sub
cmp
xor
push
mov
pop
cmp
test
lds
mov
fimuls
lock
add
fildll
js
ror
add
jae
sbb
imul
add
xor
je
jns
sub
push
add
xorl
icebp
inc
inc
das
in
cmpsl
cld
daa
add
adc
in
or
fisttps
pusha
imul
or
mov
shl
add
jo
cli
test
lods
sub
cmp
xchg
mov
rorb
dec
add
cli
mov
add
jno
sets
ljmp
nop
pop
in
add
mov
into
and
push
iret
decl
xchg
add
fildl
shll
mov
adc
add
push
jecxz
imul
test
jmp
repnz
xchg
jne
ret
sahf
add
sbb
daa
jnp
xchg
pop
ss
stos
clc
add
lds
daa
cmp
push
inc
inc
xor
cwtl
mov
mov
add
adc
add
lock
dec
pop
pop
jnp
lock
xchg
or
clc
cmp
hlt
dec
add
push
or
push
push
adc
mov
out
jb
sub
mov
add
cmp
fwait
push
add
add
shl
arpl
dec
ds
add
push
lcall
inc
adc
inc
xor
or
adc
sbb
mov
mov
sub
in
dec
movsl
mov
and
mov
out
dec
mov
adc
add
push
cmc
jnp
add
shll
dec
outsl
loopne
mov
iret
loope
add
sahf
clc
imul
push
setg
das
lds
add
ret
test
jo
or
insl
mov
jg
pop
jne
loopne
fsubrs
adc
jmp
and
aas
xor
sbb
sbb
out
sub
nop
sub
ror
add
sub
ds
cmp
xor
xlat
xor
mov
psadbw
mov
pop
sub
xorb
add
xchg
shr
dec
call
or
xor
add
mov
daa
cmp
insb
adcl
add
lds
les
mov
shrb
imul
cmpb
dec
pop
xchg
fmul
fcom
or
pop
inc
mov
xchg
add
inc
cmp
jecxz
je
dec
jge
andl
or
movlps
pop
das
add
loop
adc
ret
insl
sbbb
iret
add
push
insb
pop
push
add
cmp
cmc
pop
lds
add
loop
add
add
pop
sbb
sub
xor
mov
inc
mov
shlb
addr16
cld
movsb
dec
loopne
sub
lods
xchg
cmpsb
jns
xchg
push
add
jbe
into
imul
pushf
add
xchg
pusha
out
jmp
inc
fdivl
push
shlb
add
add
and
or
ja
mov
fcomps
incl
or
in
mov
ljmp
push
pop
das
negb
sbb
sbb
sub
add
adc
insb
dec
add
shll
sub
mov
jge
iret
mov
add
jg
jne
sub
add
cmpsl
pop
inc
psubusw
divb
or
sbb
cmpsb
add
jno
adc
ret
push
test
push
rcr
insb
rcll
dec
daa
loope
cmp
jle
addr16
xlat
lcall
loopne
fldt
add
pop
stc
xchg
pop
add
in
mov
mov
add
cmpsl
adc
into
ljmp
xchg
out
clc
les
lret
add
and
push
push
add
lahf
xchg
add
out
mov
stc
in
or
lods
inc
cs
cwtl
scas
rcll
enter
add
inc
lea
adc
add
jmp
cmp
jge
add
lds
jl
nopl
cltd
and
or
add
mov
cli
push
push
pop
jp
lret
inc
pop
in
add
cmpsb
sbb
add
ljmp
fs
push
shrb
jl
add
inc
addl
mov
pop
pop
paddq
push
push
adc
pop
and
sbb
mov
cmpb
cltd
mov
push
lret
dec
jmp
clc
inc
mov
cmpsl
filds
sbb
push
sahf
add
xchg
sub
add
pop
push
add
fistpl
rclb
mov
push
pop
add
pop
mov
dec
pop
mov
dec
sbb
fwait
inc
cmp
scas
call
mov
add
sarb
pop
mov
add
rol
pusha
clc
std
mov
add
sub
jecxz
out
rcr
mov
cltd
pop
les
into
addb
sbbb
sahf
andl
dec
lahf
mov
sti
test
loop
fucompp
sbb
je
jl
sub
adc
int3
mov
jle
dec
cmp
xchg
test
pop
add
pop
or
push
cmpl
adc
std
jecxz
les
aaa
shrb
neg
add
test
fbld
cmpsb
inc
xor
inc
in
xchg
xchg
xor
outsb
cmpsb
aas
leave
jl
shlb
in
jecxz
gs
inc
push
add
sub
ja
dec
or
in
pop
sarb
and
add
cmpsl
jge
jnp
and
in
add
gs
dec
push
add
lods
and
inc
add
fwait
push
mov
dec
add
mov
mov
dec
xor
inc
dec
mov
or
bound
lcall
cmp
pusha
lock
loopne
mov
xchg
jmp
sub
inc
out
into
mov
repnz
adc
push
fisttpll
xor
lahf
inc
inc
xor
js
dec
add
aam
mov
cmp
adc
jae
add
sbb
inc
arpl
in
inc
add
dec
push
movsl
pop
xor
cmpsb
add
fdivp
addl
xor
xchg
dec
jnp
add
aaa
jno
cmp
fildll
insl
into
in
mov
mov
shl
add
push
mov
and
xor
ja
cmp
shr
arpl
push
sub
add
dec
aas
mov
dec
shl
add
popf
lret
xchg
push
cmp
mov
jl
inc
sub
cwtl
jb
add
dec
or
and
jmp
je
mov
icebp
in
add
out
loopne
fadds
iret
mov
xchg
sbb
incb
in
dec
adc
movsb
mov
outsl
test
mov
rol
ljmp
xlat
call
lock
add
sub
and
jge
add
mov
sbb
scas
testb
pop
inc
bound
adc
mov
push
sbb
or
pop
pop
std
jne
lret
sub
push
add
scas
add
in
in
aaa
push
stos
push
inc
inc
cmp
adc
repz
adc
aad
xchg
popa
add
mov
fwait
xlat
loopne
jle
add
cmp
outsb
pusha
mov
push
mov
sbb
out
in
lret
orb
int3
jno
push
mov
adc
add
sub
stos
push
mov
rcr
out
pop
xchg
in
dec
cltd
cmc
and
pop
inc
enter
inc
push
int
in
icebp
and
inc
mov
inc
add
test
push
call
mov
shll
pop
cld
sbbl
push
push
shr
sti
movsb
or
icebp
push
xchg
mov
rcrl
xchg
sub
cmp
pop
pushf
mov
test
xchg
jnp
xchg
push
adc
xor
lret
pushl
and
and
or
aaa
ds
pop
pusha
add
xchg
shlb
inc
cmp
popf
add
xor
inc
mov
pop
pop
cmpsl
push
mov
stc
out
ljmp
cmpsb
daa
shlb
mov
mov
in
add
fxch
gs
imul
lods
and
add
add
movsb
shrl
out
nop
add
scas
rolb
mov
jmp
sub
cmp
push
mov
aas
add
inc
gs
xor
or
xchg
cmpsb
imul
push
jp
sahf
add
pusha
jl
sub
test
and
cwtl
add
leave
push
js
aas
xor
psubw
call
xor
pextrw
shll
fidivrl
cmc
ds
sbb
xchg
push
daa
jae
jb
add
push
f2xm1
cli
repnz
xorl
jge
add
aaa
call
xchg
add
cwtl
stos
out
xor
sbb
adc
aam
add
mov
outsb
lock
cmp
jno
adc
pop
ljmp
jns
push
add
lcall
cmp
scas
xorb
inc
xchg
and
add
hlt
jmp
xor
jb
movsb
div
into
mov
icebp
paddb
repz
mov
popf
lea
pop
clc
jecxz
enter
mov
dec
jmp
movsl
es
fs
xchg
pop
ficompl
scas
jg
xchg
mov
stos
mov
mov
cmpsl
adc
push
inc
push
in
xchg
aas
movsl
addl
popf
fstps
mov
call
pop
xor
out
out
adc
or
repz
fisubs
std
jl
cli
and
pop
test
fld
imulb
add
push
jbe
inc
shlb
or
and
lods
imul
js
movsl
add
testl
xchg
push
rorl
fildl
pop
mov
clc
sar
mov
dec
fidivrs
mov
nop
loop
xchg
cs
inc
hlt
iret
add
scas
fs
add
cmp
add
cmp
arpl
xchg
test
sti
xor
rcrb
add
cmc
test
loope
or
add
mov
cmpsb
sbb
push
popf
xchg
lock
push
hlt
scas
or
ja
cmp
enter
add
cltd
push
xlat
mov
xchg
inc
loop
xchg
sub
xor
mov
aas
outsl
insl
add
repnz
out
push
shrb
in
push
aad
lcall
cmp
sbb
pop
jg
mov
add
bound
jns
loop
in
std
add
xchg
lret
jmp
ret
push
in
mov
cmp
mov
add
pushf
sahf
shrb
ror
jmp
inc
add
mov
adc
mov
add
scas
mov
shr
add
jb
or
cmpsb
cmpsl
mov
xchg
add
xchg
sahf
add
and
imul
repz
fwait
and
arpl
pop
cmpsl
mov
dec
rcrl
mov
add
and
fiaddl
add
ja
or
xchg
add
inc
add
lcall
add
jo
add
or
inc
cmpsl
ss
cmp
xchg
scas
dec
add
xor
jb
add
cltd
and
insl
stos
add
jo
pushf
sbb
pop
fmul
lahf
add
shlb
movsb
xor
cmp
lret
sbb
sti
push
je
pop
aad
add
punpckldq
std
xchg
and
adc
mov
inc
inc
aad
lock
ljmp
add
cld
xor
mov
add
xchg
sbb
cmp
js
sbb
nop
idivb
test
xchg
xor
cmp
sti
jae
add
cmp
adc
push
xchg
mov
jo
push
pusha
add
shrb
sbb
jns
pop
ret
cmp
add
out
cs
jo
data16
adc
xchg
xchg
filds
xor
mov
outsl
mov
xchg
fsubrs
cmp
add
push
xchg
addr16
push
imul
inc
sahf
int
fdivs
dec
int3
jg
or
pop
add
sub
sub
xchg
xor
sub
and
xor
testl
scas
mov
mov
cmp
fs
lock
or
clc
enter
sbb
xor
add
jg
push
aas
repz
mov
adc
fldenv
push
in
add
loopne
scas
pusha
cmp
adc
jae
add
enter
and
mov
daa
faddp
add
hlt
clc
aas
mov
push
lods
dec
das
lds
out
mov
cmp
jmp
out
add
sbb
cs
ss
xchg
mov
sbb
lods
mov
out
or
out
fsubr
inc
mov
jmp
ffreep
sub
test
xor
adc
scas
sbb
add
jle
dec
fsubrp
nop
mov
pop
str
repz
iret
loope
add
mov
arpl
or
cmp
mov
add
shlb
add
mov
inc
rorl
add
xor
sbb
push
loopne
mov
add
fmuls
sbb
insl
or
inc
cmpl
mov
and
les
jns
fwait
enter
pop
mov
ja
outsb
jge
fidivrs
cld
test
xchg
pop
lock
pop
adc
iret
and
xchg
stc
rcl
add
or
add
and
enter
pop
push
fistpll
mov
cmp
cmc
dec
xchg
add
les
cwtl
lds
jg
aaa
add
cmp
xorb
int3
cld
iret
dec
mov
add
mov
add
push
mov
lahf
add
imul
xlat
gs
nop
adc
pop
jnp
push
jo
lods
dec
ljmp
mov
add
addr16
pop
inc
dec
testb
dec
sub
push
out
push
dec
jmp
xlat
mov
adcl
sarb
and
add
inc
xchg
lds
jno
push
xlat
xor
dec
push
xchg
filds
xor
sbb
pop
add
mov
pusha
xor
fildl
push
pop
inc
int
push
loopne
cmp
popf
stc
mov
rorb
dec
jne
add
pop
lret
adc
clc
popl
repnz
xor
les
xor
sbb
arpl
pop
rolb
mov
or
add
test
rorb
sub
test
adc
loope
in
ret
adc
pop
filds
lahf
aas
sti
mov
or
ss
fisttpl
nop
je
push
arpl
aas
dec
mov
test
xchg
sbb
ss
push
push
xchg
xlat
mov
icebp
scas
add
adc
fdivs
xlat
add
pop
iret
cld
mov
jmp
dec
or
or
and
and
push
jle
pusha
adcl
je
xchg
sub
cmp
inc
xchg
pop
or
jb
lods
mov
xchg
xlat
xchg
xor
mov
add
test
push
or
sbb
dec
roll
mov
in
mov
push
xor
mov
fisttps
movb
lret
int3
sub
push
testl
mov
push
fiaddl
insl
leave
bound
and
mov
popa
pusha
add
cmp
jne
lock
mov
sbb
xlat
inc
iret
xorb
stc
push
mov
roll
adcb
jecxz
xchg
xor
movsl
add
jo
add
lcall
orb
popf
dec
outsb
cld
add
add
xor
ret
and
add
and
xor
fs
das
iret
or
adc
pop
loopne
mov
ret
out
add
test
mov
dec
aas
cmp
mov
or
adc
cmp
mov
in
cli
mov
std
sbb
cmpsl
sub
movsl
shl
lcall
lock
xor
xchg
scas
inc
fnstsw
jnp
sbb
jl
cmp
and
repnz
sbb
testb
addr16
fnstenv
gs
pop
inc
bound
test
jge
cmc
adc
inc
lret
scas
add
arpl
adc
inc
hlt
out
add
mov
mov
lods
cmp
sbb
mov
aam
sahf
dec
sbb
fidivs
or
imul
or
ret
lds
nop
stos
lods
sub
lcall
int
mov
scas
or
rolb
cmp
or
mov
idivl
pop
je
push
adcl
popa
sub
and
sti
mov
js
std
and
adc
mov
aas
push
mov
and
pop
and
sbb
hlt
les
pusha
rclb
jmp
sbb
pop
pop
pushl
pop
pop
je
dec
pop
into
mov
jmp
aas
mov
sub
sub
sbb
out
nop
xchg
jne
fs
roll
jb
push
push
mov
dec
out
mov
pop
call
push
jmp
push
out
loope
add
or
jp
sbb
xor
or
xchg
adc
movsb
or
pushf
xchg
push
adc
mov
add
daa
jecxz
fists
int3
add
divl
add
cltd
sahf
push
or
repz
sbb
outsl
roll
iret
clc
inc
ja
int3
fisttpll
shlb
insb
incb
add
xchg
addr16
jns
pop
sbb
xchg
dec
int3
std
sub
or
pop
xchg
addr16
ss
dec
hlt
mov
jl
add
push
leave
dec
inc
ret
shll
aas
push
xor
or
bound
adc
jno
imul
pop
mov
mov
xchg
push
add
inc
jb
mov
in
imul
push
inc
sbb
lret
ss
lds
into
xchg
lock
cli
es
inc
jmp
push
psllq
jns
dec
cltd
or
mov
xor
fcmovu
nop
mov
sub
sbb
jne
sbb
dec
and
or
mov
and
cli
mov
aas
add
pop
out
shrb
inc
xor
jmp
mov
jne
and
in
adc
out
lods
and
push
xchg
imul
xor
out
pop
sti
std
xor
movsb
xor
mov
push
add
sub
or
iret
add
lds
xor
xor
or
and
fadds
test
add
int3
mov
pop
fsts
pusha
xor
inc
cltd
xor
and
sub
pop
xor
sub
dec
adc
inc
add
push
mov
push
xchg
xor
add
call
rclb
jbe
xchg
xchg
push
inc
add
pop
sbb
mov
push
gs
xchg
xor
pop
add
ret
es
pop
fmuls
cmp
sarl
sahf
mov
add
mov
mov
lock
sahf
add
mov
js,pt
add
sbbb
cmp
std
add
push
push
jae
pop
sbb
mov
addr16
iret
arpl
cs
xchg
mov
mov
and
add
daa
fidivrl
jle
mov
mov
mov
imul
sbb
push
inc
ficomps
outsb
aam
inc
mov
xor
nop
sbb
movsl
testl
push
popf
jo
and
push
pop
aam
mov
xor
pop
xor
and
ds
cmp
jbe
subb
mov
jae
orl
add
pop
jge
push
addr16
push
lret
dec
addl
and
and
insb
xchg
add
xadd
cmpsb
bound
fstps
shlb
fsubl
pusha
divl
cmp
push
ja
push
add
xlat
jo
aam
popa
scas
sub
mov
or
xchg
mov
add
sbb
inc
test
enter
jnp
jl
insb
sub
pop
cmp
in
movsl
xchg
cmpsl
xchg
adc
movsb
mov
cmpsb
clc
dec
testb
adcb
push
cmp
cwtl
cltd
dec
jb
push
cld
sub
and
rclb
or
xchg
pushf
push
adc
shrl
and
adc
rcrl
xor
enter
pop
or
inc
jle
rcrl
xchg
stos
loopne,pn
fsubrl
pushf
imul
jnp
lahf
mov
add
addl
rcl
inc
sbbb
dec
out
add
lea
xor
sub
das
loope
sub
jg
push
popf
add
xchg
cmp
testl
xchg
rcrl
repz
gs
jle
scas
fldl
popa
stos
sbb
sahf
sbb
adc
cmpsb
sbb
push
jnp
push
adc
add
fsubrl
xchg
push
stos
lock
cmp
lods
jg
popf
ret
shrl
enter
dec
stos
pop
push
nop
jb
and
cli
rolb
pop
xor
pop
pop
rorl
add
mov
ds
ret
cmpb
mov
sbb
sub
xlat
nop
hlt
mov
stos
scas
pusha
sbb
xchg
dec
push
jge
clc
xor
in
inc
jno
add
inc
mov
cwtl
cli
pop
adc
mov
inc
nop
loop
scas
xor
ja
push
in
push
icebp
xchg
and
add
add
adc
in
inc
add
xchg
push
or
lods
scas
mov
xor
cwtl
int3
mov
gs
xchg
pop
pop
lds
add
inc
hlt
jo
add
dec
imul
out
outsb
mov
and
sub
je
in
jnp
ljmp
xor
push
es
cmp
ds
imul
push
pushf
jb
mov
cli
dec
push
sarl
or
sub
rcll
mov
dec
testl
rol
adc
add
and
push
or
cmp
imul
inc
vmovaps
loope
pusha
and
dec
push
test
inc
icebp
scas
and
add
lret
in
add
add
sbb
dec
jl
adc
je
mov
cmp
mov
imul
pop
mov
nop
xlat
sbb
in
ret
or
add
aas
adc
stos
dec
sub
pop
lret
push
rorl
inc
push
push
fs
adc
lret
adc
and
shlb
loopne
pop
test
sar
inc
sbb
pop
and
repnz
aad
and
ja
cmp
sub
daa
loopnew
jb
sarb
jp
sub
push
in
imul
sbb
cli
sub
aas
inc
cmp
and
pop
sub
xor
pop
loop
add
adc
nop
mov
cmp
hlt
jne
push
cld
scas
rclb
adc
jno
cwtl
outsb
fisubl
movaps
add
cmpsl
cmpsb
pop
imul
add
cmp
lods
or
inc
in
pusha
jecxz
pop
xor
or
out
dec
pop
inc
sub
hlt
decb
inc
stos
addb
xchg
movsl
icebp
sub
push
mov
cmp
ficoms
push
lret
jl
add
push
test
cmp
pusha
les
test
fistpl
movb
lods
lods
pop
sbb
repz
aaa
push
pop
rcl
cmp
ljmp
dec
xor
cmp
mov
data16
sbb
inc
dec
into
add
insl
add
dec
mov
dec
sbb
out
inc
xor
xchg
pushf
dec
int
xor
sbb
sub
pop
mov
nop
loopne
or
mov
mov
test
lahf
mov
fwait
ja
xor
xchg
sbb
test
cmp
mov
xor
push
xor
rorb
shrb
add
cltd
ja
xorps
jne
sti
adc
push
or
pop
push
lea
mov
repnz
cmp
jecxz
mov
mov
sub
popf
repz
mov
icebp
mov
clc
mov
pop
lret
std
mov
inc
pop
je
and
or
pusha
sti
jp
sbb
cltd
shl
pop
pop
cmp
rolb
xor
cs
add
in
jb
and
xorb
push
dec
pusha
pop
scas
inc
pop
arpl
and
add
test
sbb
jno
pop
sbb
loopne
test
push
lock
dec
xchg
pop
jl
add
adc
loope
add
jecxz
and
shll
fldenv
jb
out
out
dec
cmp
push
xor
mov
mov
or
jle
mov
add
fs
daa
rcll
dec
jl
cwtl
sbb
add
push
sbb
mov
mov
and
lock
xor
dec
mov
pusha
add
and
push
mov
imul
xchg
sbb
fs
xor
popf
dec
repz
lds
shll
and
enter
out
pop
mov
fadds
and
sahf
call
push
xchg
dec
sub
mov
jns
cs
jp
stos
cmc
adc
push
ficompl
mov
repz
fwait
scas
stc
lds
cmp
sahf
adc
dec
xor
adc
dec
pop
pop
sbb
inc
push
or
cmp
xor
add
aam
push
ret
mov
dec
and
cmp
fs
push
add
mov
xor
test
loop
sahf
dec
xchg
rcll
xchg
inc
xor
jecxz
sbb
jbe
pop
scas
cmp
xor
xchg
test
mov
mov
jle
xchg
dec
jbe
push
jb
daa
push
inc
jno
cmp
or
or
mov
fcomps
xchg
cmpsb
push
clc
mov
push
add
and
jmp
pop
jle
add
cltd
xchg
sub
movsl
sub
add
cmp
add
push
mov
in
jne
add
adc
add
jnp
jo
gs
ds
lock
inc
xchg
mov
and
mov
cltd
or
push
sarl
jno
add
in
lahf
mov
setno
mov
mov
scas
mov
dec
xchg
bound
inc
divb
sbb
mov
xchg
daa
cmp
sub
push
xlat
jae
nop
std
sbb
clc
cmp
cltd
sub
imul
addl
sub
daa
ss
imul
add
inc
clc
jg
ret
test
test
push
jmp
inc
enter
andl
xchg
in
push
repnz
pop
loop
sbb
mov
add
dec
fwait
adc
sbb
mov
add
pop
xchg
jecxz
cmp
imul
aam
jl
loope
add
dec
jge
add
sbb
jo
int3
loopne
clc
into
sbbb
ss
and
adc
push
adc
mov
push
movsb
cmp
notb
dec
add
cs
dec
str
jnp
ja
cmp
imul
sbb
mov
add
and
add
xchg
in
arpl
cld
pop
mov
add
lods
subb
daa
mov
add
mov
add
jns
das
jmp
loope
push
sarb
mov
outsb
add
mov
call
mov
jmp
leave
dec
pop
fdivrl
bnd
sahf
inc
sbb
rcrb
ss
dec
jns
add
push
inc
les
jns
cmp
or
es
sbb
and
jmp
mov
lret
push
sbb
dec
cmp
xchg
cmp
sbb
xchg
inc
sti
and
leave
and
in
or
fsubs
mov
imul
cmp
les
mov
mov
out
punpckhwd
mov
push
add
push
sub
shl
xchg
mov
into
sub
add
or
xchg
add
push
sub
subl
or
sub
inc
shll
pop
add
test
fcoml
sub
pop
push
xor
iret
roll
insb
push
ja
push
or
xchg
jmp
andb
loope
xchg
add
mov
fmul
popl
stos
arpl
data16
xchg
add
fsubrl
and
into
add
rcr
mov
ljmp
daa
andl
in
add
dec
xchg
fsubrl
aam
cwtl
add
decl
jnp
or
lret
jno
bound
sub
add
data16
dec
mov
push
daa
lahf
xchg
add
xor
roll
xchg
jo
rcrb
in
decl
std
aas
lea
nop
adc
pop
ret
xchg
imul
add
or
jge
cltd
add
arpl
out
jb
dec
ret
sub
nopl
fcomps
outsl
hlt
or
sub
sub
ds
out
xor
add
pushf
out
xor
in
sbb
lods
lods
pop
lea
and
add
xchg
xchg
dec
jp
push
shr
addb
fildl
outsb
call
fwait
leave
adc
icebp
mov
and
aaa
arpl
loop
ret
sub
xchg
push
pop
out
cmp
push
mov
fs
add
mov
daa
mov
cmp
addr16
in
fldl
rcll
pop
mov
dec
dec
and
or
movsl
add
inc
test
pop
out
pop
push
clc
in
orb
lret
xchg
sbb
mov
push
add
stos
ret
sbb
add
mov
xchg
add
movsb
call
sarb
lock
leave
pop
inc
lahf
and
ror
fsubl
add
sbb
pop
jbe
rolb
sub
loope
lods
inc
cmpb
add
aad
push
or
jmp
gs
sarl
pop
or
push
cmp
or
in
lea
push
dec
jl
rol
push
cmp
sub
mov
dec
cmp
xor
xor
pop
cmp
cli
daa
mov
adc
sar
dec
xor
arpl
sbb
mov
pavgb
clc
addr16
fs
je
add
pop
ret
jmp
or
mov
cwtl
mulb
cmp
syscall
daa
test
js
lea
add
dec
cmpsl
push
dec
stos
pop
mov
fdivs
shll
nop
xor
inc
push
xchg
out
dec
sti
rorb
dec
test
add
cmpsl
add
jb
or
sbb
adc
mov
sub
xor
movsb
hlt
rcrb
or
mov
jmp
pop
mov
lock
push
stos
inc
adc
and
or
test
add
fcomps
lods
lret
xor
lds
cld
mov
sbb
cs
mov
nop
add
icebp
dec
scas
pop
push
add
ficoms
cmp
iret
sub
aas
xor
jp
jb
jo
dec
or
dec
iret
int3
and
in
cmp
jge
sti
mov
das
pusha
and
insl
sbb
in
adc
push
mov
insb
sar
leave
roll
xchg
into
jg
mov
xor
mov
mov
jp
push
shrl
arpl
pop
mov
xor
xlat
lock
add
push
mov
aaa
mov
jbe
faddp
adc
filds
decb
mov
loopne
in
scas
int3
jns
push
add
mov
mov
das
inc
jo
sub
cmp
and
mov
xchg
adc
jae
pop
fcmovne
loope
xchg
cmpsb
call
xchg
jne
pop
xor
push
nop
daa
cli
mov
pop
filds
push
andl
je
or
hlt
scas
andb
cmp
xor
cmp
pop
or
or
idivb
sub
lcall
and
mov
fnstsw
adc
xor
jnp
scas
out
inc
nop
sub
jae
sbb
adc
inc
jmp
insb
into
enter
jp
mov
in
sbb
aas
addl
jmp
cmpb
add
imul
and
and
jae
inc
pop
clc
in
lods
sarb
add
arpl
add
lods
lret
outsl
mov
xchg
xchg
sub
movsb
gs
outsl
setl
jbe
shlb
add
mov
fistpll
xchg
adc
jl
jmp
add
add
daa
cltd
mov
xor
cs
fistpl
stos
add
lds
sarb
stos
aaa
dec
jb
mov
movsl
cmp
and
sub
push
xor
nop
sub
dec
test
orb
decl
rorb
xor
out
push
lahf
test
mov
lds
pop
cmpsl
in
mov
xor
pop
fxam
and
push
out
cltd
add
hlt
jmp
das
cmp
sub
addr16
cli
add
popl
mov
pop
std
popf
cmp
lret
and
fs
add
mov
push
sub
xor
cmpsb
cmp
sub
push
sbb
out
push
inc
in
adc
add
mov
ljmp
pop
clc
mov
pusha
jle
rolb
js
repz
pop
loop
jo
out
pop
ret
add
xchg
fistpll
andb
push
shll
and
inc
add
xorl
push
jb
push
push
fcoml
rorb
stc
xchg
notl
stos
leave
xor
dec
cwtl
test
bound
cmp
cmpb
out
push
ljmp
xor
and
test
mov
rorb
iret
or
xchg
cld
mov
rcrb
clc
inc
add
xor
shl
add
adc
nop
in
mov
pop
lahf
movsb
aam
out
test
dec
fsubs
scas
sbb
psllq
in
popf
add
xor
mov
loope
sbb
cmpsb
mov
pop
lock
int
adc
inc
jno
repnz
xlat
pop
xchg
sub
out
dec
push
scas
dec
adc
aas
testb
and
jbe
jnp
pop
in
mov
pop
add
sbbb
inc
inc
adc
call
pop
jno
xor
add
leave
and
in
adc
push
movsb
push
add
pop
cmpsl
mov
shll
loope
cmp
cmp
push
scas
jl
cmp
xor
cmpsl
out
mov
pop
mov
iret
inc
mov
inc
inc
mov
add
jns
sub
imul
mov
xchg
pop
adc
xchg
pop
push
xor
ret
sbbb
or
sub
aam
add
mov
test
jne
push
aas
lock
sub
and
out
scas
jo
and
mov
or
dec
ret
pop
icebp
xchg
push
ret
push
xchg
sub
cmp
push
add
xchg
pop
dec
ss
stc
mov
and
and
fisttpll
lret
jmp
add
cmp
mov
imul
pop
je
out
xchg
out
cmpsl
lds
add
jp
sbb
mov
cmp
dec
cli
fs
iret
adc
and
sbb
and
mov
lret
aaa
cmp
lea
pop
pop
dec
or
ljmp
ret
and
lret
int
or
cmp
mov
in
aaa
adc
andb
movsb
es
sub
push
divb
movsl
pop
push
adc
adc
mov
ljmp
lods
push
movsb
add
xor
pop
cmp
dec
popa
mov
xor
xchg
or
xchg
and
outsl
cli
mov
rcrb
pusha
stos
and
inc
add
loop
dec
dec
push
inc
add
int3
push
in
push
fs
push
jg
mov
shlb
iret
inc
stos
imul
sub
popa
adc
inc
in
scas
hlt
pop
iret
add
inc
mov
pop
jb
shrb
pusha
shll
daa
xchg
sub
imul
jle
jno
repnz
idivb
sub
ja
pusha
movsb
inc
loope
add
call
xor
loop
inc
pop
shlb
jle
outsb
clc
jno
add
inc
mov
rorl
mov
and
mov
call
push
add
in
mov
incb
or
bound
jo
add
jp
adc
loop
fiadds
sbb
das
inc
inc
mov
mov
dec
rorl
psrlw
or
loopne
xor
in
icebp
push
sti
jne
push
leave
xchg
inc
gs
cmpsl
testb
ret
adc
adc
in
add
lods
mov
jne
sbb
stos
adc
jp
sti
sbb
movb
das
inc
xchg
mov
mov
jp
nop
repz
ficomps
and
mov
adc
jb
add
sbb
arpl
mov
je
sbb
sbbb
and
fistpl
mov
add
jl
popf
mov
pop
in
std
mov
pop
add
fsubr
xor
add
dec
mov
jbe
fisttps
test
not
inc
and
movsl
mov
scas
push
je
cmc
add
dec
stos
add
gs
fdivl
fistl
dec
imul
push
push
mov
push
hlt
push
in
jb
add
loop
shll
and
orb
pop
sti
shrl
xchg
sti
call
xchg
xchg
ljmp
outsl
scas
pusha
or
add
je
imul
ror
sbb
pop
pop
and
xchg
faddl
sub
push
mov
pop
xchg
or
adc
ss
pushl
sub
mov
in
add
mov
adc
cmp
dec
std
add
mov
sarl
jp
subb
or
aaa
mov
sbb
cli
cmpsl
inc
add
enter
pop
out
mov
or
pusha
outsl
lds
shlb
push
sbb
fstpl
mov
xchg
pop
jnp
rcrb
add
cmp
pop
cli
nop
call
movsl
inc
mov
mov
inc
sbb
mov
ss
lods
arpl
in
pop
inc
in
test
frstor
push
xorl
pop
es
pop
add
sti
lock
test
imull
mov
lahf
or
cmp
vmwrite
outsb
insl
add
mov
addl
shrb
out
fwait
inc
pop
inc
bound
and
add
mov
add
pop
sti
adc
rorb
out
cld
pop
cwtl
mov
sbb
cltd
test
push
or
ljmp
jp
adc
inc
in
and
or
jmp
sub
fisubrs
and
aas
inc
ljmp
shrb
inc
out
dec
bound
addb
jbe
add
fcmovnbe
pop
jp
push
mov
xchg
insb
movsl
sub
arpl
add
jg
daa
lock
dec
cmp
adc
cwtl
adc
imul
lret
sub
lds
sub
mov
int3
push
mov
push
mov
sbb
add
inc
dec
imul
pop
or
addr16
pop
push
mov
sti
shrl
push
xor
adc
adc
sub
cmp
jb
jp
icebp
fiadds
push
cmp
pop
sub
pop
imul
pop
xor
lret
and
in
and
push
lahf
xor
push
loope
add
or
add
sbb
fisubs
add
in
sbb
sub
scas
unpckhps
add
fucom
jl
pusha
jnp
push
sbb
add
inc
dec
cmpsb
xor
add
pop
and
and
fsubs
cltd
sbb
in
jmp
jbe
dec
hlt
adc
adc
push
lret
imul
adc
lods
xchg
mov
fs
fwait
popa
pop
movl
dec
shrl
mov
pop
mov
push
lret
sbb
enter
add
cmp
call
aad
sub
jmp
popa
add
je
jno
ret
in
insb
decb
push
and
popa
roll
mov
xchg
add
pusha
mov
or
sbb
inc
movb
mov
adc
jne
mov
add
aad
dec
inc
add
mov
ds
stc
sbb
pusha
in
aaa
pop
fistps
xchg
ja
in
cmp
push
cmc
xlat
mov
adc
aam
ja
or
add
mov
fwait
dec
inc
and
sbbl
fcomps
negl
cmpsb
sbb
loopne
inc
loope
addb
xchg
shrb
or
aaa
movsb
pusha
sbb
sbb
jge
and
mov
dec
sub
sbb
or
push
xlat
dec
or
loop
add
nop
outsb
jnp
dec
aas
mov
and
dec
add
jb
lods
movl
sbbb
fmuls
cs
lahf
ss
xchg
popl
lcall
in
adc
cmp
testl
jns
add
das
push
xor
adc
stos
sub
adc
xchg
jle
jge
jg
int3
rclb
cwtl
fldcw
add
xchg
push
ljmp
je
jae
or
test
push
add
divl
dec
leave
lahf
xchg
ja
leave
push
cmp
dec
pop
mov
sbb
int
or
fcomps
icebp
bndstx
nop
jne
popl
jnp
pop
mov
jle
mov
xchg
arpl
dec
pop
fldl
bound
inc
test
add
mov
sub
add
les
icebp
sub
adc
sbb
dec
add
fldenv
pop
sahf
add
ret
pop
rcrb
daa
push
roll
enter
call
add
pop
shlb
movsl
ss
pop
cmp
pop
xor
sbb
add
jne
cmpsl
cmpsl
pop
add
cmpsb
jbe
jl
popf
outsb
lock
sbb
lods
sbb
xchg
ret
and
imul
mov
jbe
jg
add
push
cs
shl
jae
jno
add
sub
clc
mov
sbb
xchg
xchg
push
shr
sbb
sbb
push
xchg
sub
add
insl
cmc
mov
repnz
fnstsw
fs
and
or
in
in
inc
add
pop
stos
mov
loope
cmp
jge
or
jmp
sub
stos
or
mov
test
xchg
roll
adc
outsl
and
or
ficoms
dec
jmp
push
mov
daa
aam
jne
test
outsb
mov
or
ret
adc
scas
adc
adc
jle
pop
and
movsb
adc
repnz
and
sbb
pop
xlat
add
outsb
addr16
add
clc
lock
xchg
sbb
cmp
sub
into
bound
repnz
arpl
add
out
pushf
mov
daa
and
lret
test
mov
adc
nop
ja
mov
pusha
mov
dec
add
int3
das
jae
mov
and
sub
out
mov
jge
mov
pop
sbb
les
sbb
add
test
repz
mov
loope
inc
add
xor
fsts
push
adc
int3
sbb
cli
cwtl
mov
dec
fs
add
adc
jge
dec
jo
xlat
mov
xchg
xor
xchg
ret
subl
add
mov
cmp
movsb
clc
jecxz
fwait
roll
loope
xor
popa
jns
dec
mov
aas
loope
loopne
jbe
add
and
stos
pop
add
in
pushf
loop
out
add
push
ljmp
xor
mov
jg
add
or
aam
jne
xchg
push
popf
add
mov
test
add
push
mov
in
adc
sarl
mov
cmpsb
adc
jecxz
cmpb
gs
cld
inc
add
lahf
adc
xchg
or
add
inc
push
jo
add
dec
jns
add
addl
and
inc
leave
js
fisttps
jbe
mov
call
jg
add
loop
pop
push
js
jbe
inc
cwtl
out
inc
lret
stos
and
push
in
add
mov
rcrb
test
mov
aas
pop
sub
inc
jge
push
xor
jne
shl
in
sbb
push
mov
xchg
jge
xlat
clc
imul
jecxz,pn
je
pusha
enter
int3
nop
adc
mov
lcall
sub
dec
add
mov
hlt
inc
in
fisubl
adc
xchg
mov
clc
shlb
imul
inc
pop
incl
push
insb
mov
data16
mov
movb
rol
sbb
jl
adc
sbb
mov
add
ljmp
sbb
je
movsb
xor
pop
sbb
btr
push
mov
push
sahf
ss
add
mov
incl
add
fstps
xor
or
add
jns
lods
add
add
add
in
pop
scas
aaa
incl
shlb
in
jns
sahf
pop
mov
or
inc
mov
adc
mov
in
and
adc
or
cld
pop
sahf
loop
jle
inc
mov
loope
dec
nop
add
nop
into
std
pop
add
lods
mov
dec
cmp
data16
xchg
call
int3
cld
subl
mov
jmp
ljmp
daa
dec
cmp
xor
in
xorb
mov
add
cmp
cmp
cmc
mov
pusha
pop
add
xchg
mov
jg
push
push
add
mov
add
jnp
add
faddp
jb
add
and
pop
mov
loop
lret
leave
and
rcll
jbe
push
add
sti
ficomps
or
adcl
add
adcb
dec
adc
mov
mov
roll
add
add
xchg
or
daa
lret
add
repz
aad
mov
imul
xchg
int3
nop
sub
xchg
orb
test
mov
outsb
dec
dec
rolb
fwait
or
or
mov
mov
outsl
adc
mov
add
dec
cmpsl
add
add
add
pop
outsb
lds
pop
movsb
mov
add
xchg
ja
add
mull
call
pop
fadds
mov
fldl
gs
jb
jno
add
int
out
add
subl
das
or
test
dec
mov
in
cmp
in
cmpsb
es
mov
push
pop
add
adc
add
in
leave
pushf
pop
movsl
icebp
jnp
ja
repnz
jle
sub
jo
in
lods
add
iret
cmp
jecxz
loopne
inc
dec
add
mov
fisubl
stc
mov
or
int
xor
and
lret
loopne
add
push
sbb
movsb
pop
adc
add
xor
in
mov
rorl
es
cmp
mov
imul
lahf
sbb
inc
sbb
aas
cmpsb
add
inc
pop
je
cs
cld
jbe
fisubs
add
add
xor
shl
dec
insb
ds
add
mov
push
sbb
push
scas
test
arpl
mov
ss
fsub
dec
sbb
adc
jg
mov
pusha
inc
xorb
imul
mov
jmp
scas
imul
cld
and
add
test
pop
push
popa
sbb
add
xor
mov
dec
subl
xchg
and
add
scas
adc
imul
xor
mov
push
pop
jl
pop
xchg
lea
or
push
rcrb
add
push
rcrb
pop
mov
cmpsl
add
jp
icebp
fsincos
and
adc
add
cmp
in
mov
add
push
xlat
int3
mov
mov
mov
je
or
push
jmp
leave
push
pop
adc
adc
pop
adcl
jb
add
aaa
cld
call
xchg
sbb
inc
clc
dec
xor
add
pop
subb
cltd
aaa
jmp
and
push
add
jo
incb
popf
mov
js
or
cmp
test
and
add
inc
push
mov
and
fstpt
mov
xor
repnz
inc
mov
in
sub
mov
fs
xlat
adc
hlt
ret
cmpsl
adc
sbb
or
in
repz
loope
les
push
test
roll
pop
int3
packuswb
or
mov
cli
in
mov
inc
mov
jle
add
popa
rorl
pop
or
add
adc
loope
jle
int3
jp
cmpb
lahf
cwtl
lods
push
imul
jne
call
sbb
stos
and
fstpl
push
repz
and
iret
cmpsl
dec
cmp
es
jg
enter
mov
pop
cltd
loopne
jno
dec
mov
jb
mov
repz
mov
xchg
nop
push
jecxz
add
cmc
lock
addb
fsubrl
sub
out
xor
mov
into
or
and
fwait
inc
add
je
stos
ljmp
scas
fmul
in
dec
rolb
sub
and
rolb
mov
sbb
shrb
jo
add
iret
pop
data16
in
ficompl
cltd
inc
mov
out
andl
add
jo
dec
lock
filds
ja
mov
add
enter
cmpsl
mov
xchg
pop
add
mov
push
shll
test
sub
out
add
mov
outsb
ja
lods
repnz
xorb
push
and
shlb
inc
xor
cli
ds
lods
fwait
stc
ja
sbb
xorb
in
bnd
adc
add
cwtl
add
add
mov
push
inc
addl
lods
out
push
dec
in
xchg
adc
iret
shlb
jmp
cmp
popa
add
stos
adc
add
push
jo
loopne
push
pop
inc
or
mov
mov
gs
inc
mov
in
lds
mov
fildl
push
xchg
push
mov
test
leave
pop
das
lock
in
jo
add
lahf
out
xchg
xor
cmc
jae
inc
push
dec
push
inc
ret
jne
mov
insb
cmp
sbb
push
int3
inc
or
jl
add
scas
and
dec
pop
hlt
mov
orb
insl
adc
sbb
lret
ljmp
iret
add
stos
lret
ss
js
sbb
mov
xor
xchg
xor
out
fcomps
adc
add
or
mov
jmp
adc
mov
stc
adc
push
jge
add
cwtl
fnstcw
lcall
xchg
scas
add
test
push
leave
xchg
test
das
fnstenv
jo
lock
add
and
rolb
insl
cmp
add
dec
cmp
adc
inc
loopne
mov
pop
enter
add
clc
test
fidivs
add
aam
dec
adc
or
mov
add
mov
jo,pn
inc
sbb
les
sub
cmpsb
add
pop
movsl
cltd
jl
sar
sub
jo
adcl
pop
jno
sbb
arpl
outsb
cltd
pop
int3
adc
mov
push
dec
add
aad
jmp
out
add
jp
lock
pop
sbb
push
mov
imul
lods
add
enter
call
pop
and
sbb
es
or
push
mov
add
add
scas
sub
ret
mov
popl
inc
or
nop
hlt
or
repz
push
push
mov
cmp
mov
pusha
jl
pop
mov
mov
and
push
mov
sar
sub
imul
add
xchg
push
inc
movsl
xor
pop
adc
add
test
xchg
cmp
add
loopew
js
add
dec
pop
mov
jo
inc
aad
xlat
adc
addb
mov
lret
mov
push
pop
into
jno
xor
sbb
xchg
mov
mov
pop
inc
add
mov
xchg
add
xchg
cmpsl
repnz
xchg
jo
in
and
call
popa
mov
add
mov
sbb
dec
mov
or
add
aad
fisubs
das
add
repnz
addr16
mov
jg
add
lcall
add
mov
std
add
mov
int
das
add
jecxz
bound
lock
add
into
add
ret
addr16
stc
fsts
mov
add
lock
rcrb
and
add
xchg
std
inc
push
shlb
mov
mov
mov
gs
mov
faddl
sbb
js
mov
xchg
jne
mov
fisttpl
repz
jmp
lret
lods
cs
pop
jmp
imul
add
mov
pop
fisttpll
mov
mov
nop
sub
dec
cmp
aam
mov
repz
cmpsb
mul
insb
mov
loopne
lods
add
and
add
jnp
xlat
xor
and
add
xchg
ljmp
scas
push
adc
fiaddl
xor
push
jno
mov
loope
movsb
add
sbb
inc
loop
cmp
hlt
fcomip
icebp
push
out
lahf
add
mov
sbb
cmp
jo
inc
sahf
fnstcw
test
sbb
mov
or
cmp
mov
add
sarl
sub
jle
pusha
mov
mov
test
sbb
sbb
je
or
lods
cli
imul
mov
dec
subb
xlat
add
insl
lret
ret
add
aas
mov
out
outsb
sbb
out
dec
psadbw
and
cwtl
addb
fcompl
add
adcl
rcrb
ja
add
dec
pop
es
or
jno
mov
data16
cld
cmp
add
adc
sub
add
jo
cmpsb
add
cmc
jb
add
nop
mov
adc
xchg
cwtl
add
test
dec
cmp
int3
push
add
adc
pop
aaa
stos
add
dec
sbb
mov
les
push
daa
test
mov
hlt
jb
sub
mov
pop
std
or
mov
jmp
jecxz
lds
xor
push
and
jns
test
push
js
mov
xor
gs
pusha
inc
clc
fs
repz
xchg
pop
jbe
jns
iret
jmp
jne
adc
add
pop
sbb
mov
mov
mov
dec
jae
int3
cmpsb
fs
and
pslld
int3
fs
testl
push
jno
inc
xor
hlt
push
or
mov
inc
and
sar
xchg
mov
sub
mov
mov
jo
in
cmp
adcl
nop
ljmp
in
clc
pop
mov
aas
hlt
mov
imul
add
xchg
mov
push
xor
incb
sahf
negl
and
out
inc
dec
mov
push
mov
and
add
sahf
or
shlb
icebp
and
add
mov
xchg
sub
adc
shlb
data16
dec
xchg
push
xor
mov
aaa
shlb
lock
dec
loop
add
inc
push
mov
aam
out
add
mov
cmpsl
mov
addl
cwtl
xor
into
add
add
popf
leave
jle
jne
je
fldt
iret
sbb
sldt
push
gs
cmc
mov
and
hlt
leave
fsubl
cmp
es
sbb
push
imul
ds
shrb
add
test
mov
pop
arpl
gs
pop
shlb
popa
and
enter
or
cli
adc
push
xchg
cmp
mov
movsl
mov
push
dec
fstl
push
pop
pop
sub
sbb
int3
int
mov
pop
inc
pop
jno
or
cltd
cmc
jp
cmp
sbb
xchg
data16
pop
add
adc
push
add
xchg
ds
mov
add
bound
push
pop
xor
add
push
insl
cmp
push
cmc
pusha
mov
fcomps
jp
lret
pop
dec
mov
mov
daa
pop
xchg
mov
and
mov
imul
adc
adc
sub
test
repnz
inc
stos
ret
sub
lods
pop
int
sbb
inc
pop
xchg
stc
add
xor
mov
into
sbb
ja
add
cmp
pop
gs
sbb
nop
inc
jns
add
incb
pop
cli
ljmp
jbe
add
lock
lea
cmp
xor
int3
pop
jl
rorb
lcall
rorb
jo
test
dec
in
pop
gs
scas
push
push
adc
ss
cmpsl
jbe
and
int3
pop
inc
sbb
cmp
pop
repnz
clc
xchg
sub
out
mov
xchg
mov
icebp
cli
das
jmp
and
adc
push
sub
xchg
enter
test
movl
mov
inc
cli
dec
jnp
je
add
cltd
inc
pop
sbb
adc
into
push
shll
mov
mov
outsb
adc
push
add
les
add
push
mov
enter
add
aam
cwtl
fcompl
insb
imul
push
fmuls
pop
inc
add
decl
add
popa
imul
sarl
xor
inc
or
orb
incl
sub
push
add
loop
add
es
lea
xor
pusha
inc
and
int
aas
add
inc
add
sbb
loopne
aas
add
jp
pop
inc
pop
call
cmp
add
push
loopne
add
sub
aam
sbb
dec
xlat
xchg
aam
jmp
lds
jb
cmc
sbb
je
jp
mov
mov
and
push
sbb
lcall
inc
out
shll
adc
cmpb
test
pop
inc
cli
lock
lods
mov
add
xor
leave
out
push
mov
dec
or
lcall
lds
and
pop
insb
out
sbb
mov
jo
ja
cld
fwait
ljmp
in
popa
add
adc
or
pop
mov
or
stos
cmpsb
mov
xchg
push
adc
daa
jnp
or
push
mov
popf
inc
fsubr
or
mov
int3
mov
mov
or
scas
pusha
add
push
adc
in
je
or
shrl
or
imul
mov
sbb
push
cs
dec
pop
rorb
int
shlb
stos
inc
add
xor
scas
pop
lds
mov
push
push
mov
xchg
orb
or
sbb
sbb
xor
xchg
sub
and
sub
or
add
pop
pop
in
cmpsl
std
add
or
add
scas
sbb
jge
jnp
add
xchg
repz
xchg
fprem1
jo
jbe
cli
or
add
xorl
sub
add
xchg
mov
lds
iret
repnz
ljmp
in
mov
data16
aam
add
sbb
ljmp
or
inc
pcmpgtd
lcall
movsl
pop
or
add
addr16
adc
inc
jmp
pop
cmc
repnz
mov
incl
cmovp
mov
jge
xor
ss
push
mov
in
mov
mov
add
repz
sbb
mov
add
fidivrl
jmp
sbb
enter
negl
push
xlat
adc
jno
xchg
adc
arpl
xor
icebp
into
push
xor
jle
out
pcmpeqb
lcall
cwtl
xorl
or
mov
mov
mov
movsb
mov
push
jg
in
xor
mov
enter
arpl
icebp
rclb
aad
shl
fdivl
jae
dec
add
stc
cld
cli
add
jp
aaa
dec
hlt
cmc
sbb
into
xchg
inc
cmp
xor
add
test
jle
scas
inc
adc
dec
sub
cmpl
fcoml
mov
jecxz
pop
dec
push
sub
cwtl
add
or
clc
or
gs
jne
pop
sbb
dec
add
cmp
scas
jbe
push
popf
jmp
es
fisttpll
sub
pushf
sbb
sub
jmp
sahf
dec
inc
add
cmp
movsb
and
xor
loop
adc
sbb
nop
sbbb
ja
mov
add
sub
xor
loope
test
add
cmc
call
test
iret
out
xchg
mov
orl
loope
xchg
aam
dec
test
mov
fiaddl
xchg
sbb
add
mov
inc
xchg
dec
addb
and
push
in
add
dec
je
fisttps
call
repnz
mov
adc
int
jo
testb
test
icebp
mov
incb
mov
adc
insb
add
mov
aam
js
pop
je
add
xlat
push
rcrb
jo
sub
or
add
scas
aas
popf
ljmp
add
fildl
inc
rclb
mov
add
fstpl
mov
jl
gs
hlt
cld
cwtl
add
push
adc
gs
in
test
popl
mov
gs
cmp
add
dec
int3
out
add
lock
adc
pop
inc
jge
lret
arpl
hlt
nop
pop
jae
test
and
call
mov
leave
jmp
or
outsb
adc
int
dec
incl
xor
mov
add
jae
gs
cld
mov
lret
dec
nop
xchg
cmp
std
sbb
out
mov
sti
sarb
negb
mov
addr16
mov
or
dec
cmp
pop
mov
and
cld
sbb
enter
xorl
movsb
push
or
mov
aad
sub
pusha
sbb
mov
cmpsb
insl
inc
xchg
stos
enter
xor
fucomi
sub
pop
jns
and
leave
out
xlat
jne
out
mov
pop
dec
popa
fadds
cwtl
fwait
shlb
sub
adc
imul
gs
push
adc
sbb
and
jp
xchg
mov
jg
rorb
das
jno
shr
xchg
push
cmpsb
cld
xor
and
repnz
rcr
push
cmp
sub
xchg
enter
outsb
ret
add
push
ljmp
iret
xchg
cwtl
out
mov
loopne
cli
or
jae
jo
cmp
scas
add
cwtl
mov
push
cmp
rorb
pop
adc
dec
cs
outsb
addb
in
add
add
outsl
cmp
add
aas
jecxz
push
and
add
mov
addr16
adc
mov
or
xor
out
xchg
dec
lods
mov
add
sub
fisttpll
add
fadds
test
add
mulb
lea
jo
mov
fadd
cld
lret
xor
faddl
and
mov
and
stos
cli
call
into
xchg
movsl
icebp
or
das
bound
inc
add
jbe
sbb
add
push
cmp
and
and
adc
iret
mov
mov
sub
jl
push
adc
in
add
pushf
cmp
push
ljmp
pop
mov
add
rolb
loop
orb
add
cmp
cli
rorl
shrb
mov
test
mov
cli
cmp
ret
jne
mov
sub
sub
mov
add
dec
js
sti
test
cmp
jo
sbb
cltd
aaa
stc
inc
das
adc
ret
dec
push
adc
mov
loope
xchg
mov
pop
inc
subl
sbb
xchg
and
cmp
push
arpl
jg
add
out
imulb
push
add
sub
loope
in
push
adc
cmpsl
sbb
jo
into
jp
add
movlhps
sbb
jne
adc
mov
repnz
imull
mov
es
pusha
inc
mov
xor
xor
hlt
xchg
add
mov
nop
cmp
add
mov
sahf
int
stos
or
or
hlt
mov
sbb
sar
popa
insl
mov
add
sub
pop
sub
add
mov
inc
mov
dec
jnp
prefetchnta
or
lods
call
push
js
mov
cmpsl
mov
and
or
and
loopne
jp
mov
push
lcall
add
push
inc
push
inc
fwait
mov
loope
fmuls
aad
and
mov
sub
in
pushf
aad
sbb
repz
mov
mov
jge
addb
std
add
lcall
sarl
jg
add
leave
imul
add
mov
pop
mov
push
xor
xchg
and
mov
adc
rcl
es
loop
add
xchg
sub
xchg
add
push
sbb
jp
pop
fisttpl
pop
pop
push
rolb
xor
mov
mov
call
cmp
jle
sub
sbb
sub
mov
sbb
cmp
fisubrs
push
mov
popa
add
xchg
xchg
adc
das
lret
push
loopne,pn
and
addr16
push
add
fstpl
dec
gs
push
je
roll
loop
and
rorb
or
subl
rol
add
sub
and
mov
shlb
dec
mov
fld
gs
mov
dec
jge
sub
leave
repz
inc
jmp
inc
xchg
mov
mov
repnz
enter
cs
mov
pusha
pop
add
adc
jo
mov
xchg
push
fcomps
test
dec
daa
std
nop
in
add
mov
mov
mov
add
pop
sub
shlb
lock
mov
sub
clc
sub
push
add
ret
cwtl
mov
lds
mov
sbb
fnstsw
add
jb
push
jle
pop
push
xor
xor
jecxz
add
out
lock
aaa
dec
cld
sbb
mov
cmpsl
das
inc
xchg
sahf
loopne
mov
ret
imul
mov
rcrb
xor
clc
fisttps
mov
add
fcoms
or
fs
sbbb
or
lods
push
push
aam
mov
inc
stos
jp
adc
cs
add
jno
push
add
jns
sub
cmp
bswap
lcall
rolb
loopne
sbb
jmp
aam
add
stos
adc
notb
mov
mov
loopne
mov
popa
adc
cmp
cli
dec
sub
and
ds
dec
or
mov
js
dec
add
sub
jno
movsb
add
mov
lcall
aad
push
lret
test
mov
pop
adc
negl
or
subl
mov
cmp
jnp
xchg
ljmp
xchg
pop
je
pushf
cmp
iret
sub
movsb
jb
pop
or
push
adc
imulb
inc
xchg
or
cmp
xor
in
adc
mov
insl
and
por
dec
push
adcb
arpl
lds
out
jns
sub
idiv
das
les
add
nop
mov
fldl
adc
mov
jne,pt
add
ja
mov
add
cmp
pop
adc
fcoml
xor
push
pop
es
mov
cmpsl
testb
dec
cmp
xchg
mull
add
push
popf
adc
pop
jbe
xchg
inc
outsb
jmp
xor
cmp
and
in
or
aad
addb
lret
add
sub
cmc
xchg
lods
ljmp
fs
or
add
cld
mov
test
mov
cmp
push
cmp
mul
adc
xchg
cmp
sub
add
int
sar
ret
pusha
lea
xchg
add
fwait
lods
flds
cmp
gs
add
pushf
and
mov
pop
or
loop
push
rcll
cld
pusha
or
movsb
fsubr
call
popf
pop
add
jo
push
mov
add
sbb
aaa
add
pop
jge
stos
jecxz
mov
adc
ret
xor
out
test
mov
loop
add
pop
adc
push
in
inc
add
in
sbb
insb
insb
dec
dec
or
jno
andl
cld
jl
add
cmp
xchg
sub
jle
add
ljmp
jge
out
cltd
ja
aas
fisubrl
add
cmp
shlb
cld
sbb
pop
in
enter
dec
xorb
fildl
or
adc
int3
mov
xchg
pusha
jl
pop
add
push
sarl
jne
mov
push
lret
cmp
loop
sbb
hlt
insb
inc
into
add
inc
in
mov
lcall
cmpsb
mov
mov
je
xor
ds
sbb
xor
call
insb
push
fists
fidivs
mov
xchg
add
xchg
gs
xor
mov
mov
and
and
jo
add
xor
mov
sahf
cmpsl
add
push
cmpsb
sti
inc
js
loopne
fdivs
cmp
mov
pop
inc
rolb
in
test
dec
sub
inc
cmp
add
jns
ljmp
inc
mov
dec
sbb
testl
xchg
nop
add
or
mov
stos
sbb
enter
mov
jp
mov
dec
dec
add
outsb
push
cmc
fcmovnb
push
lock
add
xchg
push
ss
cmp
dec
insb
or
icebp
mov
cmpsb
sbb
cmp
jbe
into
lods
mov
out
add
push
aaa
outsl
lods
lock
aas
loope
rcrl
fisubs
test
dec
add
ss
dec
add
std
cmp
jle
add
sub
fisubrl
arpl
bound
aam
xchg
xlat
psubusb
hlt
fprem1
dec
mov
mov
cmp
push
sub
xor
stc
adc
dec
subl
inc
mov
mov
mov
jmp
and
data16
inc
mov
sahf
push
ds
aad
loopne
push
jb
jge
push
sub
mov
sbb
add
out
xchg
dec
pop
push
or
add
adc
mov
and
mov
pusha
mov
notl
test
out
and
add
shrl
cmp
dec
loopne
push
push
jg
mov
cmp
mov
add
enter
pop
and
xchg
shlb
cmp
push
jp
ds
inc
fisubrs
push
gs
adc
xor
in
pop
xchg
sub
or
scas
clc
xor
add
pop
or
js
add
push
mul
sbb
push
add
push
push
xchg
mov
dec
push
xchg
pop
inc
icebp
shrb
mov
cmp
outsb
push
rolb
pushl
mov
xchg
add
cmp
jnp
add
inc
xlat
mov
hlt
mov
inc
xor
leave
xor
cmpsb
dec
lock
ljmp
clc
inc
pusha
in
or
add
outsl
pop
push
cmp
mov
push
fcomi
add
inc
and
aad
push
add
rolb
jp
sbb
dec
pop
enter
jb
cmc
stos
mov
fnsave
repnz
pop
rorb
dec
add
sarl
out
and
add
cmp
push
dec
adc
sub
xor
add
xor
adc
xor
mov
jns
xchg
insb
jl
sbbb
sub
add
pusha
jmp
iret
add
inc
cld
stos
jo
imul
lcall
push
rorb
popf
cli
push
aam
fucomp
pop
aas
adc
dec
push
sbb
les
sub
loopne
sub
adc
adc
push
in
clc
adc
in
and
js
mov
cwtl
mov
mov
xor
sbb
aam
addb
mov
fmull
int
mov
lret
push
inc
movl
sbb
xor
mov
push
mov
push
xor
push
and
mov
or
xchg
mov
or
fisubs
aas
mov
add
add
dec
loop
sub
cmp
aam
int
push
out
mov
cmovne
jb
pusha
int3
movsl
and
dec
jmp
popf
mov
pop
sbb
punpcklbw
xchg
lret
mov
lds
dec
jl
xorb
pop
loopne
jns
inc
sti
test
push
fcmovne
fimull
jmp
sub
shrb
imul
mov
out
xor
and
sahf
mov
ljmp
icebp
mov
xchg
mov
xchg
cmpsl
loopne
int
add
adc
in
xlat
clc
lahf
or
in
xor
das
or
leave
sub
push
inc
mov
rcr
fnsave
jp
ret
sbb
jge
out
add
lcall
add
and
bound
xor
movsl
adc
jo
subb
popa
mov
add
sarl
add
pop
fsubrl
iret
lret
scas
jo
push
call
lahf
pop
cmpb
cmc
mov
cmp
jl
mov
pusha
shl
adc
or
add
loope
daa
jnp
mov
sub
dec
dec
sub
and
lret
or
add
jb
outsb
pop
insl
jo
push
dec
arpl
cmpsb
lret
mov
cltd
icebp
xor
mov
enter
in
ret
mov
in
mov
sbb
cs
fdivrl
jbe
mov
add
lods
cmp
xor
and
dec
mov
jg
icebp
add
fsubrs
int
je
mov
pop
cmp
pop
adc
pop
dec
shrb
int
fsubr
ss
movsb
or
test
add
in
outsl
rolb
test
ljmp
add
out
cmp
fwait
mov
or
cltd
lea
pushf
lock
mov
jns
cli
mov
rclb
xor
dec
dec
push
les
cmp
ret
inc
outsb
adc
pop
loop
and
adc
cli
push
push
ffree
jnp
mov
lods
inc
push
pop
add
mov
mov
popf
fiaddl
cmp
std
pop
add
in
fsts
or
jno
sub
and
lock
pop
test
push
popl
addl
gs
pop
push
jmp
and
hlt
lods
mov
add
clc
cmp
mov
jecxz
and
sub
cld
dec
fwait
shl
mov
adc
nop
jns
jg
add
mov
loope
sub
testl
adc
popa
mov
pop
mov
xchg
jmp
push
mov
imul
mov
daa
bound
push
sub
add
sahf
push
popa
xor
ret
cmp
inc
fucom
and
add
jns
inc
outsl
or
ljmp
sbb
mov
adc
xor
cmp
iret
stos
add
mov
dec
lock
imul
add
ljmp
roll
ret
push
jge
cwtl
add
push
add
les
bound
dec
adc
and
add
aad
mov
rolb
cs
cmp
push
loopne
mov
rcll
fsubr
or
jb
add
gs
add
mov
push
mov
mov
add
imul
mov
xchg
ds
cmp
add
ljmp
dec
inc
es
lds
add
ljmp
mov
fldl
xchg
or
sbb
and
add
gs
sbb
imul
stc
mov
jp
je
popa
add
rol
mov
scas
ja
movsb
push
addb
mov
mov
push
dec
add
push
ss
nop
repnz
xchg
dec
repz
xor
flds
lds
xchg
add
lcall
addr16
cwtl
push
add
shlb
cmp
and
add
jae
aam
mov
xor
mov
add
call
add
fs
popa
push
lcall
roll
arpl
std
shrd
and
sub
stos
add
cltd
push
inc
jbe
pop
pop
mov
mov
add
adc
lcall
cmp
call
daa
inc
push
inc
pop
idiv
xchg
cmp
or
je
mov
adc
add
in
cmp
call
in
ss
add
inc
aad
mov
lahf
clc
pop
daa
int
arpl
sbb
bound
cmp
test
faddl
rorb
fs
and
push
das
mov
or
rcr
add
pop
lret
int
in
sub
mov
mov
stos
jns
popa
insl
imul
dec
inc
pop
js
sub
insb
adc
add
jg
xchg
aas
fwait
imul
inc
pop
sub
loopne
pop
xchg
dec
push
loope
cmp
mov
pop
push
frstpm(287
ret
cltd
std
call
das
rcl
mov
and
push
jb
cmp
shr
and
mov
add
mov
add
dec
push
mov
rorl
out
lock
add
cmp
call
push
testl
lea
mov
push
jns
outsl
push
ljmp
push
or
push
add
cmc
or
rcrl
ret
setg
adc
jmp
cmp
fistl
adc
push
dec
fcompl
je
dec
xchg
sbb
mov
nop
data16
push
test
jne
arpl
jge
out
xchg
mov
pop
adc
jnp
pop
rolb
into
and
mov
lods
mov
scas
xor
cltd
and
cs
mov
sahf
push
mov
and
in
movsl
inc
push
cltd
mov
pusha
adc
adc
add
add
add
xchg
test
add
lcall
jg
int3
cmp
xchg
mov
orl
test
into
out
ret
add
ja
mov
mov
mov
clc
sbb
add
inc
bound
js
inc
mov
mov
scas
add
jl
int3
int
dec
inc
and
fstpl
sahf
jge
and
add
sbb
sarl
add
cmp
out
testb
add
and
jl
cvtps2pd
dec
push
sbb
push
mov
and
inc
jo
jp
adc
jb
icebp
shll
sub
xchg
add
sti
test
adc
rorb
xchg
push
sbb
repnz
stc
pop
xchg
cmp
add
xchg
into
pop
mov
xchg
push
daa
sub
ret
nop
test
in
scas
icebp
xlat
shlb
cmp
shr
add
outsl
cmc
or
mov
pop
sahf
add
ffreep
sub
xor
inc
nop
dec
outsl
jg
addr16
adc
xchg
ret
int
mov
sub
insl
lds
sbb
push
mov
je
lret
add
inc
or
fstps
stc
dec
sub
xchg
rorb
scas
or
push
fnsave
lret
ja
push
cmpb
aaa
stos
dec
xor
inc
ret
icebp
push
or
outsl
ds
mov
test
jg
lcall
sub
mov
add
mov
add
icebp
sbb
and
adc
jnp
ss
or
inc
sbb
addl
sub
movsb
mov
push
or
ss
add
add
inc
arpl
in
jge
sbb
ljmp
lcall
or
and
xor
add
mov
push
repnz
xor
out
stc
or
fcomps
push
test
movq
and
mov
stc
mov
lea
lcall
ret
lods
xor
subb
xlat
add
pop
or
enter
add
cwtl
les
adc
or
rol
push
out
test
sub
mov
jo
mov
dec
shrb
inc
pushf
xor
pop
pop
mov
repnz
sbb
negb
xorb
sbb
mov
roll
inc
dec
cmp
mov
push
inc
orb
or
and
cmpsl
fsubrs
les
inc
add
add
xchg
xor
adc
jae
clc
pop
add
jmp
ja
jns
add
cmc
xchg
jne
iret
jnp
xor
shrl
ljmp
and
cli
mull
cmp
xchg
ljmp
or
inc
mov
rclb
cld
xor
fldl
orl
adc
xchg
popf
jg
push
add
daa
pop
and
jo
outsl
test
jo
dec
popf
ltr
test
jecxz
cwtl
lock
imul
xor
mov
vmwrite
test
add
cmp
stc
add
mov
inc
add
movsl
jp
push
fsubrl
sub
fwait
dec
add
pop
iret
pop
mov
mov
mov
cwtl
dec
mov
in
and
addl
shrb
add
mov
and
bound
std
and
xchg
adc
cwtl
mov
sahf
add
movsb
std
xchg
jae
add
add
rorl
mov
stc
pop
daa
test
and
aam
mov
shlb
xchg
xchg
sbb
add
sbb
nop
xor
adc
push
sbb
mov
pop
fsubrs
adc
xchg
jle
iret
and
sub
sbb
aad
add
ficoml
mov
hlt
inc
rclb
sbb
imul
push
out
rcll
adc
jnp
lock
add
pusha
xorb
ds
and
sbb
adc
in
loop
adcl
jne
jo
mov
repnz
mov
rol
add
push
add
cmp
rorb
filds
mov
loop
pop
inc
scas
or
mov
add
dec
out
add
mov
sbbb
lret
ds
popf
nop
rol
addr16
mov
jge
pop
mov
cmp
fwait
pop
xor
push
mov
pop
add
cltd
sub
jecxz
idiv
xor
inc
xchg
repz
jmp
imul
dec
stc
inc
sbb
mov
cs
mov
xchg
ret
out
sbb
shrl
popa
push
mov
add
xor
cmp
add
shll
dec
imul
adc
js
aam
mov
addr16
repnz
into
fldl
and
testb
adc
outsl
mov
pop
add
in
ljmp
ja
cmp
add
das
inc
or
fadds
jge
insl
aam
sbb
or
lret
push
jg,pt
insb
aad
add
fwait
loopne
pop
xor
sbb
cmpsl
fs
mov
push
fistps
cmp
cs
outsl
xchg
aas
cltd
xlat
add
mov
push
jecxz
cld
add
sbb
jle
rorl
add
inc
sbb
adc
les
ret
ss
pop
sub
sub
outsl
inc
inc
and
mov
movsl
mov
pop
mov
push
xor
push
add
enter
out
xorb
test
ds
rcrb
insb
test
or
test
xchg
cld
and
iret
sahf
cltd
fmuls
or
insl
movsl
mov
hlt
lea
sti
dec
jle
cmp
jns
push
sbb
add
or
rolb
pop
outsb
es
or
cmp
and
mov
pop
orl
movsl
and
loope
cmpsb
and
pop
testl
sbb
ljmp
bound
pop
or
jecxz
hlt
sub
mov
dec
push
stos
ss
push
jne
shll
inc
push
lcall
mov
mov
or
aaa
adc
xorb
lock
add
lea
stos
add
mov
sbb
iret
adc
popf
mov
pusha
cmp
dec
mov
add
push
fistpll
or
movsb
xlat
in
push
jbe
jno
add
sbb
add
cwtl
fldenv
and
or
mov
push
pop
jae
xor
fucomi
aam
enter
or
in
inc
lahf
sar
jb
loopne
test
sub
adc
push
and
shll
pusha
in
jb
scas
inc
mov
adc
stos
lret
pop
pop
addb
mov
or
xor
xor
xchg
push
pop
inc
int
mov
sub
and
fnstsw
jae
xchg
xor
add
pop
je
jo
gs
add
fcmovne
add
pushf
pop
leave
push
cmpsb
dec
add
lret
fs
out
jmp
add
mov
xchg
sbb
test
daa
adc
cmp
aad
and
movl
fidivl
pop
add
loopne
aas
xchg
and
add
in
insl
cmc
pop
testl
mov
sbb
inc
add
cli
xlat
add
test
add
adc
ds
xorb
sahf
add
movsl
adc
or
mov
push
mov
rorb
cmpsb
inc
mov
fmuls
shlb
xor
loope
adc
adc
mov
inc
push
shlb
sbb
inc
ret
mull
ss
ret
test
jae
fbstp
and
adc
fsub
mov
bnd
pop
xor
push
sub
pop
add
fstpl
sub
sbb
dec
imulb
jecxz
lret
add
ljmp
sahf
sub
loope
cmp
adc
sahf
test
cmc
popa
mov
js
in
and
cmp
add
mov
popa
pop
mov
mov
push
outsl
mov
or
scas
cwtl
cwtl
adc
iret
sub
pusha
dec
test
sub
roll
fidivrs
test
cmpl
jl
add
out
jo
add
mov
sti
mov
adc
mov
pop
arpl
insb
xor
pushf
cltd
test
sbbl
dec
or
xchg
inc
and
push
mov
xchg
loope
inc
jo
js
push
repnz
in
adc
pop
mov
test
mov
fwait
mov
cwtl
cmp
gs
in
lds
ja
outsb
call
add
xor
cmp
ljmp
pop
xorb
jae
jge
add
xchg
lods
ja
out
pop
and
ljmp
pop
jle
or
sub
ss
idivl
in
inc
mov
iret
and
nop
outsb
sarb
add
jp
fdivrl
dec
les
out
cmpsl
push
ret
or
xlat
fldl
adc
mov
jns
fdivl
subb
lock
nop
inc
pop
add
stos
std
dec
push
cmc
cmp
insl
pusha
sti
test
add
sub
xlat
sub
icebp
mov
sbb
pop
push
mov
add
call
jp
nop
call
out
adc
push
mov
andps
cwtl
dec
cmp
dec
cs
daa
and
add
movsb
sti
push
fnstcw
fstps
adc
mov
outsl
mov
mov
inc
push
inc
add
inc
add
jl
pop
pop
and
mov
sub
push
je
inc
aas
add
mov
inc
hlt
es
dec
jo
rorb
add
xchg
pop
cmp
cs
cmp
sbb
jne
pop
and
loopnew
jmp
cwtl
and
icebp
pop
decb
stc
jae
std
in
cwtl
inc
jbe
add
cltd
es
xchg
add
xchg
aaa
ret
jecxz
sahf
adc
jno
or
mov
movsb
ljmp
push
sub
adc
hlt
push
xor
add
cli
fimuls
add
mov
xlat
mov
rcrb
es
int
and
push
lods
andb
test
xchg
xor
btc
cwtl
inc
sbb
out
arpl
mov
loope
jne
mov
fstl
mov
sbb
add
lock
sbb
ja
rorb
das
inc
mov
popf
mov
add
inc
int3
lock
iret
cli
mov
test
adc
mov
iret
add
jge
mov
add
jae
or
adc
ljmp
xor
cli
arpl
jnp
mov
add
pop
lds
cwtl
imul
cmp
aad
loop
add
jmp
lds
hlt
jmp
cld
pop
add
test
jb
out
test
add
jnp
add
add
cwtl
hlt
pop
repnz
out
mov
mov
sub
orb
ja
jp
add
imul
jmp
xchg
imul
call
test
scas
aas
pop
test
popf
aad
call
add
adc
fucom
push
push
call
xor
mov
add
out
or
add
insl
pop
call
push
jmp
insb
lock
aaa
and
mov
push
ljmp
add
dec
lahf
ja
or
jnp
loopne
or
dec
push
in
mov
frstor
sub
or
adc
inc
dec
add
in
hlt
add
mov
lods
push
sub
jnp
pop
add
cmp
pop
or
xchg
ss
dec
pop
mov
or
pusha
adcb
addb
inc
xor
jns
xor
out
rcll
mov
jmp
cmp
cmpsb
rorb
mov
jge
push
jae
lret
sub
mov
add
lea
sahf
hlt
pop
and
add
dec
push
clc
add
test
add
mov
xor
pop
fdivrp
pop
cmp
or
pushf
add
aam
push
sbb
add
and
aad
jne
rolb
addb
push
add
inc
shrb
arpl
xlat
cmpb
inc
mov
xorl
pop
xchg
jle
lret
ja
paddd
loop
inc
xchg
cmp
out
sti
repnz
pop
dec
mov
xor
inc
fildll
adc
ss
shlb
xchg
popf
push
out
jecxz
xchg
and
add
sarl
add
imulb
dec
movsl
inc
cmp
ljmp
add
scas
into
jl
clc
inc
jno
test
cmc
je
lods
rorl
jg
pop
mov
in
cmp
cmp
call
call
shlb
mov
cmc
sbb
cwtl
fdivrs
mov
mov
enter
aam
add
adc
jp
add
add
ficompl
clc
mov
jl
loopne
xchg
call
je
xchg
ficoms
add
xchg
cmp
jbe
jp
add
cwtl
icebp
cli
mov
insb
stc
add
inc
cmpl
aaa
sbb
jl
and
pop
mov
add
sub
mov
iret
loop
leave
pop
sbb
add
push
int3
mov
jno
fsubrs
add
hlt
test
add
mov
cwtl
loopne
in
inc
add
mov
push
clc
adc
mov
mov
std
cs
mov
jg
shll
fstpt
inc
fcompl
xchg
jne
loopne
cmp
add
gs
popa
push
inc
pop
push
lock
adc
rorb
cmc
jmp
cmp
sub
mov
pop
inc
pusha
dec
dec
add
lret
add
xchg
add
xchg
mov
into
divl
iret
mov
add
push
repz
cmp
adc
mov
or
and
pop
xchg
daa
xchg
xchg
mov
add
push
push
fidivrl
adc
ret
in
adc
call
ljmp
add
sub
mov
xchg
fstl
idivb
jge
and
in
or
notb
rorb
jle
xchg
jp
ret
cmpsb
cwtl
pop
push
add
mov
nop
enter
push
cmp
hlt
lret
jmp
cmpsb
outsl
cmp
jmp
outsb
inc
jae
xor
sahf
aad
pop
dec
add
cmpsl
lret
mov
mov
push
and
mov
mov
xlat
or
mov
add
xor
ja
sahf
xor
into
mov
lret
imul
les
mov
mov
mov
enter
pop
adc
sub
sti
adc
lds
sbb
push
out
pop
add
les
xor
fisttpl
fcoms
inc
out
add
imul
insl
or
sbbb
xor
adc
pop
xchg
mov
pop
push
leave
imul
mov
shl
fucomp
push
pop
mov
arpl
inc
mov
add
aaa
xchg
cmp
cmp
lds
xor
xor
dec
inc
movsb
jl
fldenv
lods
mov
add
in
mov
sub
sub
rorl
fisubs
pusha
mov
add
fdivrl
fidivl
add
mov
push
cmp
cwtl
insl
fidivl
add
mov
icebp
or
push
ret
add
dec
gs
outsl
fimuls
or
cmp
inc
adc
xchg
in
shll
jnp
or
pop
mov
xchg
xor
lcall
iret
xor
jmp
xchg
push
add
mov
or
add
aam
jnp
add
add
cld
push
or
popf
cmp
js
add
pop
lock
sti
loope
lcall
dec
dec
xlat
and
pop
and
jl
and
jmp
mov
xchg
inc
mov
js
or
jmp
mov
add
aas
cmp
cmp
dec
mov
mov
push
cwtl
cmp
or
stos
mov
cli
jmp
out
jp
lods
fcmovb
dec
push
pop
add
dec
out
or
sub
sbb
adc
push
xor
into
jae
int3
push
fsubl
hlt
push
arpl
inc
inc
testb
into
sti
add
mov
cmp
push
sub
add
dec
in
or
stos
pushf
loopne
adc
add
repz
fldl
js
jmp
jg
xchg
fs
daa
jbe
aas
add
dec
xchg
jecxz
aam
rolb
dec
sub
mov
bound
push
sbb
jp
pusha
mov
fwait
int3
es
adc
sub
fstpl
mov
loop
pop
sbb
sub
call
xchg
imul
jbe
add
loop
pop
cs
xchg
add
and
into
push
sub
add
cmp
jo
idivl
out
mov
inc
xlat
add
fisubs
add
mov
mov
push
add
pop
sbb
lods
sub
orb
cmp
dec
repz
shl
lock
jns
arpl
jb
scas
mov
add
mov
int3
mov
mov
ss
jp
test
add
test
les
lea
add
and
daa
popa
nop
inc
add
push
call
es
and
nop
add
jmp
int
xchg
es
mov
adc
fs
movsb
mov
lcall
mov
int
add
push
roll
mov
fisttps
enter
insb
cmp
fmuls
movsb
addb
mov
xor
adc
fisttpll
pop
std
arpl
cmp
mov
push
xor
jbe
sbb
add
imul
sbb
fsts
lahf
adc
cltd
xor
mov
fstl
jge
cltd
ror
outsl
pop
inc
fiaddl
ss
es
jg
mov
sbb
jo
pop
rolb
and
adc
je
adc
or
xor
movsl
adc
add
ljmp
ffreep
jnp
lcall
adc
mov
xor
sti
add
rcrl
mov
and
sbb
add
ja
and
ljmp
lea
ret
add
cli
das
mov
mov
dec
mov
push
add
sub
mov
add
sub
push
sub
sbb
sbb
push
xchg
adc
jb
or
or
int3
and
shl
pop
data16
jle
orl
jecxz
ret
adc
repnz
cmp
out
cmp
loopne
add
testb
add
stc
xchg
add
and
pop
adc
jbe
xor
cmp
add
xor
add
mov
insl
repz
aas
inc
enter
add
xchg
popa
popf
mov
push
inc
mov
fsubrl
mov
pop
push
ja
lcall
iret
xor
xor
jno
pop
aaa
aam
cmp
lret
mov
adc
mov
js
push
int3
out
loop
sub
add
daa
jnp
cmpl
xchg
inc
mov
sub
loop
adc
loopne
jnp
push
xor
pop
xchg
cltd
in
rorb
loopne
cwtl
inc
and
cmpsl
add
cmp
nop
hlt
or
inc
sbb
push
sbb
mov
mov
insl
add
adc
pop
or
std
xchg
lods
mov
or
mov
mov
ror
xlat
pop
pop
dec
and
jns
sarb
sti
jmp
mov
cmp
stos
add
mov
sub
add
and
mov
outsb
jp,pt
add
or
add
aad
mov
add
xchg
mov
mov
daa
add
dec
cmp
mov
jl
std
jge
rorl
inc
mov
les
dec
shrb
mov
fwait
leave
es
mov
add
dec
test
and
sub
or
xor
or
dec
push
pop
std
add
xor
ja
cmp
and
movsb
add
and
xor
jno
add
pop
fsubrl
add
mov
ud0
mov
mov
mov
dec
add
pop
clc
lods
push
cmpsl
cmp
jbe
ljmp
dec
cltd
xlat
pusha
aaa
dec
in
aam
add
insb
jmp
bound
dec
daa
in
test
adc
mov
loopne
lret
xor
arpl
add
subl
add
xchg
fwait
stos
add
cmpsb
aad
xor
or
movsb
mov
xchg
ret
rorb
add
pusha
sbb
fwait
xchg
lds
addl
sub
je
and
ja
sub
jmp
dec
add
test
add
mov
push
fidivrs
stos
dec
cwtl
enter
insl
add
cmp
mov
cmpb
and
mov
in
jge
fxch
push
adc
cli
sbb
add
jmp
shrl
jo
cwtl
lds
movsl
movsb
loopne
pop
xchg
jbe
leave
add
mov
mov
lret
add
insl
and
add
popa
fmuls
cli
xor
xor
add
lahf
test
add
in
test
out
add
rcrl
and
mov
pop
fmull
in
mov
daa
imul
test
mov
add
lret
or
pop
rorb
or
add
and
sbb
sbb
sahf
add
mov
inc
and
inc
pushf
inc
and
outsb
pop
jb
add
fcoml
jns
mov
shll
jno
adc
fadd
jo
rcrl
faddl
arpl
out
pop
test
push
xor
jb
repz
loop
je
push
mov
data16
sub
aam
xchg
ret
jp
add
mov
faddl
add
cmc
daa
popa
jmp
mov
into
mov
sub
cmc
mov
mov
movsl
fisubs
add
and
push
out
cli
or
sub
push
push
ss
mov
or
repz
iret
jnp
popf
push
mov
add
mov
lods
flds
lds
je
xchg
xchg
jecxz
add
loopne
sbb
mov
push
ss
cmpb
mov
dec
int3
lds
fwait
loopne
add
or
cltd
frstor
cld
notl
push
std
imul
ja
sbb
mov
imul
and
xchg
dec
mov
pop
out
inc
mov
add
iret
sahf
add
int3
lock
les
les
movsl
xchg
or
mov
or
jno
fwait
or
or
in
add
int
fs
sbb
xor
ficomps
out
dec
jg
andl
fadds
mov
insb
pop
and
imul
ja
int3
je
push
inc
lods
or
insb
push
pop
pop
xor
adc
and
shrb
addl
push
or
push
sbb
push
in
inc
dec
fs
add
add
pop
sbb
mov
rolb
orl
ss
sbb
or
in
stc
popa
add
int3
mov
dec
in
js
sbb
mov
jp
loopne
test
pop
jb
mov
insb
add
xchg
out
lret
add
inc
cli
ljmp
mov
rolb
add
fistpll
mov
fdivrs
add
ljmp
pop
inc
sbb
xlat
sti
add
add
mov
adc
mov
outsl
mov
loop
push
scas
mov
test
icebp
imul
iret
and
stos
movb
mov
fcomps
imul
push
xor
outsb
leave
pusha
inc
sub
sbb
xor
into
inc
pop
mov
mov
loopne
add
in
dec
aad
mov
repz
das
sarb
and
adc
push
aaa
pop
mov
pop
fwait
movsb
int3
mov
sbb
fsubl
push
mov
add
add
add
in
add
into
cmp
int
dec
jp
rcll
sarb
in
add
sub
jecxz
jns
nop
orb
mov
mov
fmul
jle
sbb
int
cs
jg
inc
add
push
aas
mov
movsl
mov
inc
lret
mov
test
fdivrl
hlt
enter
mov
pop
and
push
add
inc
testl
pop
rcr
fwait
enter
mov
mov
addb
or
iret
cli
mov
not
xorb
aas
cltd
jmp
mov
jo
lahf
xchg
mov
adc
shrb
fisttps
and
arpl
add
and
add
cmp
jge
sti
sbb
add
push
xor
add
sbb
push
je
enter
insb
std
and
and
and
and
jle
adc
adc
jns
jmp
testl
testb
sub
adc
ret
push
movsl
xor
sarb
jge
push
sbb
push
sub
test
mov
inc
push
add
ror
and
mov
rcrb
mov
xchg
loopne
add
inc
push
add
xchg
bound
cltd
adc
ja
pop
fadd
mov
push
test
sbb
or
cmpsl
pop
add
jb
leave
call
pushl
out
push
add
addr16
xor
add
or
gs
xchg
add
icebp
out
push
pop
aad
and
sbbb
mov
call
outsl
cmp
push
repz
sbb
sbb
add
cltd
mov
adc
ss
jp
add
ror
inc
xchg
mov
jl
aad
fcmovbe
pusha
and
mov
outsb
insb
loopne
stc
add
jg
nopl
pop
mov
out
or
cmp
out
add
cmpsb
inc
adc
sbb
pand
call
mov
xchg
ds
cld
rcrb
in
mov
fdiv
adc
pop
inc
loop
test
dec
add
lahf
push
fsub
push
ds
pop
mov
xor
add
imul
jmp
orb
test
mov
mov
rorl
into
lods
add
mov
imul
mov
outsl
xor
pop
adc
out
mov
mov
add
pop
add
rcrb
xchg
jg
stc
enter
mov
push
dec
outsb
out
ror
pop
add
cmp
add
sti
inc
mov
movups
jns
xchg
aas
inc
hlt
push
adc
inc
cmp
fs
popf
push
pusha
mov
add
or
mov
enter
fs
daa
ret
adc
scas
pushf
nop
fsubr
fiadds
loop
test
xchg
lret
cli
add
mov
add
or
pushf
mov
inc
out
push
cltd
pusha
aam
outsb
mov
and
push
or
add
in
fs
add
cmp
sbb
xchg
je
add
in
test
cmp
add
cli
sbb
sbb
loope
jbe
sub
push
and
pop
mov
rolb
jmp
jecxz
icebp
scas
out
cmp
push
jp
or
adc
push
mov
add
in
cwtl
in
add
fldenv
lods
cmpsl
xchg
insl
add
mov
add
call
roll
stc
dec
add
jno
mov
pop
add
out
in
pop
pusha
xchg
adc
fdivl
and
add
call
movsb
cmp
sahf
add
jl
pop
mov
dec
ja
lret
loopne
or
les
push
cmp
out
inc
cmpb
popa
pusha
cld
faddl
add
push
cmp
sahf
xchg
inc
clc
cltd
mov
shlb
into
sub
stos
int3
sbb
lea
mov
or
push
adc
adc
mov
jb
bound
jbe
mov
add
outsb
iret
push
movsl
push
int
stos
sbb
push
stos
add
mov
sub
rcrb
outsb
mov
movsl
jnp
and
add
addr16
cmp
mov
add
inc
out
pop
mov
add
mov
sarb
cmpsb
mov
mov
cli
dec
lret
nop
mov
cs
xor
inc
and
add
mov
insl
xlat
psrad
dec
push
push
add
xchg
pop
pusha
push
jp
testl
filds
pop
fisubl
push
das
andl
xor
cmp
jbe
ds
scas
in
mov
sbbb
out
rolb
or
into
cmp
xchg
mov
xor
insl
cmp
clc
xchg
pop
pop
dec
sar
jmp
loop
and
push
leave
push
mov
mov
adc
cmp
inc
dec
loop
rcl
adc
inc
add
xchg
cmp
ret
sarb
mov
rolb
or
stos
rcrl
pusha
cmp
out
pop
ret
add
mov
movb
cmp
ret
test
sbb
push
adc
push
cld
add
jl
dec
add
mov
push
imul
and
mov
clc
addl
mov
xchg
shlb
fmull
out
call
out
xchg
popl
inc
jge
test
fwait
jae
add
lahf
frstor
fdivs
arpl
push
aam
add
lea
mov
jp
add
mov
mulb
sub
lahf
dec
jge
rorb
fs
pop
pop
add
inc
aas
sbb
sub
popa
mov
and
stos
hlt
lds
loope
jns
pusha
lret
shlb
pusha
js
mov
test
xchg
push
jg
into
cmp
mov
adc
mov
jecxz
imulb
pop
or
cld
or
data16
add
sbb
nop
push
div
in
movsl
popf
ror
nop
push
sahf
subl
cmp
cmp
sub
orps
cs
dec
mov
xchg
jns
cmp
jg
or
ds
pop
outsl
cmp
add
test
push
mov
ret
jle
sub
es
sbb
pop
xchg
jno
ds
insb
add
addb
adc
add
sub
imul
sub
flds
sbb
jle
inc
mov
sbb
jbe
add
sub
pop
and
pop
add
aaa
xchg
push
ret
addl
mov
or
adc
mov
cmp
push
pop
in
add
ret
pop
icebp
cltd
cmp
sarb
mov
popa
push
mov
add
push
faddl
lret
cli
scas
js
add
fildl
push
mov
cmp
adc
xchg
add
lods
lds
mov
jge
cmp
movsb
add
mov
pop
insb
jecxz
inc
mov
add
cmp
xor
cmp
andb
cmpsb
add
in
scas
xor
dec
inc
loope
rcr
mov
add
or
push
pop
out
test
add
push
lea
add
leave
arpl
xor
add
clc
sub
jae
enter
mov
and
cmc
xchg
pusha
mov
push
push
add
repz
out
and
sahf
js
ror
gs
adc
xchg
and
push
icebp
push
incb
or
sbb
roll
rcrb
dec
cmc
jne
insl
dec
pop
push
or
cs
je
jle
stos
pushf
adc
mov
lds
push
dec
loop
out
adc
inc
push
in
jae
fwait
pop
jle
pop
cmp
int3
ljmp
inc
in
xor
add
movsb
adc
lret
fistpll
outsb
push
repnz
dec
jne
fwait
mov
orl
pusha
es
inc
jge
or
clc
ucomiss
pop
out
mov
jno
fs
and
xchg
mov
outsb
cmp
out
in
outsl
ljmp
jns
movq
push
in
loopne
pusha
sub
add
or
push
sti
and
push
sbb
movsb
fiadds
imul
aad
dec
fbstp
jl
jb
cmp
movsl
andb
mov
stos
pop
push
out
sbb
cltd
sbb
lret
adc
imul
lahf
jg
pop
popf
mov
xor
xor
dec
repz
inc
cli
mov
add
add
nop
sub
lret
pop
xor
leave
inc
lock
shll
imul
mov
push
les
call
ljmp
popa
sbb
xchg
lock
cmp
dec
push
mov
push
cmovae
movsl
or
pusha
mov
mov
icebp
loop
add
sarl
cmpsb
loope
jg
daa
mov
inc
call
mov
xchg
pop
lds
and
and
mov
mull
dec
cli
add
lahf
das
mov
pop
add
dec
xor
add
adc
pop
lret
enter
test
inc
or
incb
sti
lds
daa
jno
je
add
out
pop
xchg
aam
movsb
add
shlb
fmull
mov
inc
jbe
outsl
das
pop
sub
aad
addr16
sbb
pop
int3
test
push
rcll
xor
xchg
add
cmp
jle
pop
inc
sub
cmp
mov
test
roll
imul
jg
pop
into
fcompl
add
jns
call
sub
sub
xlat
testl
lret
push
testb
arpl
punpcklwd
fwait
stos
mov
pop
push
sub
inc
and
or
and
insl
loope
out
add
sub
les
inc
add
andb
lea
loope
mov
sahf
sbb
and
clc
jmp
dec
sbb
inc
fwait
jp
sbb
ret
notl
add
cwtl
test
add
dec
pop
jecxz
pusha
clc
addl
xchg
pop
daa
push
mov
incb
xorl
jb,pt
add
nop
xor
inc
add
loope
inc
sti
or
cltd
repz
add
in
repz
pushf
mov
jb
adc
adc
nop
test
dec
sbb
push
orb
clc
jg
and
or
mov
mov
mov
adc
xor
inc
mov
sbb
ljmp
filds
jge
pop
mov
ljmp
loopne
lock
in
ss
add
es
adc
xchg
shll
xorb
or
sbb
inc
in
cmp
shlb
adc
addb
xchg
pop
nop
addb
inc
adc
xor
imull
dec
mov
das
cli
movl
jmp
jne
pop
nop
insl
lods
push
lret
cmpsl
out
ja
mov
cmp
add
mov
xchg
jo
stc
aas
shlb
push
sub
adc
jl
fwait
cmp
jecxz
mov
subl
les
cli
push
add
icebp
or
cld
push
fiadds
ljmp
push
or
sbb
add
pop
clc
inc
in
mov
adc
mov
pusha
cmp
pop
jmp
subl
mov
hlt
jg
adc
out
repnz
inc
push
jbe
pusha
mov
xor
adc
pop
ds
cltd
mov
sbb
pusha
and
xor
dec
rorb
pop
int
enter
cmp
sub
lret
add
imul
test
mov
pop
push
enter
insb
js
fiaddl
outsl
psubusb
xchg
pop
stos
fiaddl
add
sbb
add
clc
or
jg
xchg
popl
jecxz
add
jle
mov
cmp
ficoml
jge
fimuls
iret
clc
or
enter
inc
int
orb
jns
les
outsb
mov
clc
cmp
jno
aam
and
mov
sub
pop
mov
dec
or
sbb
push
leave
add
xor
scas
cli
dec
shlb
xor
orb
lock
xchg
fcoms
sbb
jle
loope
insb
mov
push
lahf
sbbb
mov
add
daa
sbb
fidivl
jmp
insb
xchg
out
or
out
push
sti
movsl
jo
add
int3
mov
adc
sar
scas
push
lods
nop
dec
sub
add
ret
mov
push
cs
out
and
pushf
rolb
jmp
loope
shll
add
adc
xchg
insb
stos
rcrb
in
mov
pop
pop
mov
fucomip
sti
and
cld
ljmp
mov
in
add
sub
add
out
push
cmp
sub
fsubl
add
mov
cwtl
mov
out
in
movsl
sbbb
dec
ljmp
add
adc
inc
add
shlb
call
dec
mov
cmp
in
push
adc
adc
pop
mov
in
aad
jp
xor
add
test
loope
push
mov
push
push
sub
arpl
add
pop
ja
fbstp
cmp
and
inc
xchg
das
add
fimull
push
mov
sarb
add
lds
add
sbb
fwait
xchg
xchg
cmp
sub
addl
les
lods
push
pop
xchg
sub
add
mov
shlb
add
call
das
jp
cmc
add
mov
shrb
lret
cld
inc
xchg
sbb
pop
test
push
cltd
rcrb
sbb
or
sub
add
lahf
and
add
jge
es
sub
fdiv
imul
cmp
jbe
jg
dec
add
add
or
adc
fcom
sub
jmp
add
mov
dec
inc
inc
dec
or
lahf
stos
sbb
test
negl
mov
add
dec
mov
in
sub
nop
add
test
aam
jae
ljmp
inc
cltd
pop
mov
jno
mov
dec
cmpl
ret
push
ljmp
mov
sbbl
pop
add
mov
dec
mov
cs
addl
inc
loopne
fsubrl
les
xchg
pop
mov
push
arpl
ror
adc
adc
inc
adc
aaa
aam
lods
pop
fbstp
test
push
ljmp
inc
and
or
les
das
push
pop
shlb
mov
jno
sub
jns
rcrb
or
inc
add
jnp
mov
cmp
xchg
ret
mov
pop
stos
lcall
mov
fisttps
add
cmpsl
jp
loop
or
cltd
into
xchg
fsubs
pop
int3
lahf
fwait
pop
xchg
outsw
std
jmp
xor
and
fadds
lret
push
mov
add
mov
adcb
pop
add
dec
icebp
rolb
inc
hlt
jle
lea
shrl
mov
inc
lahf
pop
shlb
mov
ret
sarb
add
jo
adc
rclb
ds
inc
adc
add
in
mov
add
mov
add
inc
fcmovne
clc
repnz
adc
or
test
aas
cmpsl
ror
sbb
fwait
mov
testl
add
jle
lret
in
add
test
and
mov
xchg
pop
sbb
lcall
add
or
xchg
fnstsw
setp
mov
or
sbb
test
add
loop
xchg
cwtl
add
inc
push
dec
cmp
push
or
lds
jb
add
pop
and
xchg
pop
pushfw
pop
mov
std
insb
sbb
xchg
xchg
dec
jne
sbb
mov
adc
dec
inc
or
aad
add
cmp
jbe
pop
hlt
inc
cmp
in
les
xchg
jle
cwtl
inc
jp
add
lods
xor
cli
dec
pop
lock
dec
rorb
xchg
adc
idivb
inc
fmuls
fs
imul
mov
divb
mov
dec
add
icebp
fiaddl
xor
sbb
mov
pushf
ja
stos
loop
mov
jecxz
pop
xchg
scas
call
mov
inc
cmp
pop
pop
jae
pop
fsub
adc
mov
xchg
mov
test
inc
mov
dec
jmp
mov
add
fsubrp
test
add
mov
loopne
test
mov
cli
or
xchg
mov
pop
push
mov
jle
xor
fdivs
pop
ss
int3
inc
mov
mov
pop
jmp
lcall
rolb
outsl
fadds
dec
or
pop
or
hlt
fistps
add
imul
and
loope
lds
jl
movsl
cltd
add
enter
add
enter
cmp
jae
out
inc
shr
and
or
adc
repz
and
loop
push
or
mov
stc
push
leave
jmp
sbb
xchg
pop
sub
stos
xor
adc
xchg
out
addl
add
or
xchg
test
daa
add
push
push
in
xor
jno
pop
clc
sbb
xchg
into
repz
sbb
jbe
loopne
cld
imul
fdivrs
lahf
repnz
inc
lods
fisubl
jne
sbb
jne
outsl
cli
add
cmpsb
and
iret
scas
mov
les
mov
push
pop
jb
mov
or
xor
clc
jg
popf
cli
loopne
jle
add
adc
cmp
push
js
inc
aam
push
repnz
rorb
pop
ret
and
outsl
jo
and
fisubl
add
or
sub
sbb
sub
loopnew
jl
lahf
cmp
pop
and
addl
ret
xor
scas
nop
jo
xchg
pop
sbb
in
test
loopne
pop
add
mov
add
sbb
aaa
push
or
out
clc
popf
repz
pop
movsb
aas
cmp
or
pop
iret
mov
enter
lahf
sub
dec
and
jae
dec
cmc
aaa
add
xorb
mov
or
push
cmp
out
add
add
loopne
cmp
js
add
insb
jmp
mov
xor
loope
aaa
push
int
sbb
jle
add
clc
adc
pop
or
je
jns
mov
push
les
popa
frstor
fldenv
std
rorl
mov
pop
add
pop
shll
icebp
or
sarl
lock
cmp
sub
pop
pusha
and
mov
imul
pop
pushf
ds
add
sub
jmp
inc
dec
popf
lret
sub
mov
cmp
movsl
adc
xchg
mov
test
mov
pusha
jmp
sahf
or
xor
or
stos
and
shrb
sub
fsts
fiaddl
loope
ja
aam
sbbl
or
mov
in
rcrl
sbb
cmp
test
dec
xchg
add
push
insb
rcr
lock
add
sub
xchg
pop
jle
dec
mov
fnsave
xor
pop
leave
in
pop
inc
jmp
or
pusha
add
and
pushf
rcrl
lahf
outsl
mov
adcb
enter
popa
mov
xor
sbb
mov
dec
push
or
daa
insb
je
leave
nop
add
cltd
adc
sti
lcall
add
inc
les
jne
sbb
xchg
jb
lcall
cmp
and
xchg
pop
sub
lods
clc
push
fsubl
mov
sub
adc
sub
sbb
adc
aas
and
insl
nop
out
add
nop
sti
adc
cmpsb
jecxz
mov
lds
add
iret
rorb
mov
xchg
pop
ljmp
cwtl
add
mov
lods
hlt
mov
or
movl
pop
add
into
mov
flds
add
mov
nop
sahf
mov
leave
cwtl
sub
mov
add
sub
xrelease
inc
in
mov
sbb
adc
mov
xor
jnp
jae
add
movsb
lock
insl
add
or
iret
add
popf
xchg
hlt
mov
sbb
jmp
xor
insb
test
adcb
js
aam
gs
arpl
sbb
push
xor
mov
mov
roll
jecxz
leave
filds
inc
adc
mov
mov
out
add
mov
test
fstps
test
mov
add
shll
pop
pop
jbe
jno
lret
jns
aas
mov
int
pop
or
cld
mov
inc
sbb
xchg
subb
sarl
add
jcxz
jo
loope
xor
fiadds
pop
mov
lock
mov
dec
cmpsb
adc
jg
push
mov
mov
or
cmpsb
mov
vmread
push
add
and
shlb
mov
push
cmpb
sbb
add
cld
jmp
or
out
sub
sbb
stos
scas
cli
loop
sahf
inc
xor
nop
sbb
add
in
sbb
loopne
cmp
in
dec
pop
es
cwtl
jae
cmp
xchg
mov
or
cltd
adc
ret
dec
push
cmpsb
mov
leave
xchg
shlb
sbb
cmp
filds
add
push
lds
in
mov
stc
lret
ljmp
outsb
add
dec
xor
in
inc
push
dec
cs
dec
push
jecxz
dec
add
cmp
inc
xor
fstpt
bswap
add
jg
pusha
push
xchg
xor
int3
add
pop
iret
lahf
mov
add
stos
insl
outsb
call
jmp
mov
pop
movswl
adc
or
lods
fs
pop
dec
loope
das
add
test
stos
repz
cli
or
test
pushf
and
sbb
mov
pop
dec
out
je
add
mov
dec
and
mov
add
mov
jno
shlb
and
mov
into
divl
jp
inc
aad
out
fstpl
dec
jl
mov
inc
fdivp
or
psubusw
mov
aad
dec
idiv
add
js
ljmp
inc
add
mov
pop
add
bound
cltd
inc
notb
or
aam
pop
pop
enterw
cld
ficoms
fsubl
fdiv
jl
jp
jns
jbe
jecxz
test
jp
cltd
sub
dec
or
jge
add
clc
jb,pn
or
mov
sahf
and
jbe
imul
iret
daa
lret
adc
cmp
lret
rdtsc
repz
dec
inc
into
dec
jno
outsl
add
jmp
mov
int
mov
cltd
sbb
pop
insb
addl
add
mov
aam
jge
loopne
sbb
xchg
mov
add
push
ret
mov
push
add
adc
dec
add
jne
push
jo
sar
push
jb
add
push
and
mov
andb
insl
aad
jp
xchg
mov
cmp
add
shlb
jl
add
gs
jo
xorl
push
rep
addb
mov
cwtl
fwait
add
or
dec
js
mov
loopne
jecxz
ret
add
in
add
inc
cmp
inc
xchg
outsl
lcall
jecxz
adc
leave
fcomps
cld
and
ja
inc
loopne
out
pushf
xchg
roll
adc
mov
xor
add
mov
stos
fidivrs
lds
popf
mov
cmpsb
pop
mov
loope
and
pop
cmp
adc
sub
xor
add
subl
xchg
call
pop
add
lahf
lea
ljmp
leave
add
cltd
lret
dec
adc
lcall
fadds
add
shlb
lret
mov
lock
cmpsl
out
fs
jmp
mov
pop
sub
ja
pop
lock
popa
add
in
test
jecxz
scas
test
xchg
into
jne
push
lods
jo
idivb
lea
repnz
jp
add
push
mov
adc
sahf
cmpsb
push
cwtl
add
bound
sti
add
inc
sahf
movsl
dec
xchg
jnp
repnz
int
cmpsb
iret
add
nop
sbb
push
sub
add
jb
out
cmp
mov
mov
pop
cmp
sarb
adc
bound
test
arpl
sbb
jnp
cmp
fs
mov
idivl
push
mov
cmp
lahf
push
and
add
mov
adc
inc
mov
out
add
movsb
out
in
cmp
xor
les
adc
mov
add
cmp
in
out
inc
roll
jno
xchg
jle
pop
lcall
dec
inc
popl
xchg
adc
jo
sbb
or
int
pushf
rclb
add
gs
loop
rorb
stc
out
ret
lmsw
inc
pop
cwtl
sbb
xor
hlt
xchg
mov
aaa
sbb
ficomps
dec
push
mov
incl
pop
mov
fucomi
jb
stos
in
add
xchg
add
cmc
sub
dec
cmp
push
test
ds
orb
jo
rolb
mov
dec
mov
popa
dec
popf
cmpsl
dec
ret
and
rcr
andl
int
jl
or
mov
push
incl
ficomps
scas
xor
add
test
in
mov
in
mov
sbb
and
or
jg
cmpsb
sbb
stc
add
lods
leave
sbb
sub
in
xor
lret
dec
sub
pop
setne
push
xorb
mov
rcr
imul
cmpsb
out
call
hlt
and
sahf
add
mov
xor
and
iret
lcall
push
cmovbe
mov
rolb
sub
or
cmp
lahf
add
pop
sub
repnz
call
sub
pop
cmpsl
mov
mov
add
pop
std
int3
cli
mov
add
pop
addb
adc
push
mov
cmp
sbbb
pop
cmp
repz
outsl
scas
outsb
mov
mov
in
fwait
stos
stc
dec
dec
in
jnp
and
adc
jg
aas
bound
mov
pop
xchg
mov
fiaddl
pop
test
mov
scas
push
sub
add
fdivr
xor
fldt
jle
out
jecxz
dec
add
push
es
cwtl
push
add
add
inc
fimull
scas
out
xor
lea
adc
jmp
leave
stos
add
es
mov
inc
or
sub
xchg
sbb
fiaddl
add
aam
push
adc
jp
jo
sub
push
cmp
mov
push
jno
in
out
xlat
pop
into
enter
sub
mov
jno
jae
add
mov
enter
add
add
jo
cmpsb
das
xor
dec
into
inc
mov
insl
jecxz
mov
cmp
inc
and
mov
sub
mov
cmp
idivb
mov
push
popa
and
pusha
jp
sahf
or
aad
push
xor
imul
add
pop
rolb
sahf
loope
mov
mov
sbb
lock
dec
push
add
cwtl
repz
mov
les
or
es
add
aas
lds
sub
sbb
push
add
and
push
push
push
add
ljmp
rcl
out
aas
pop
xlat
sarl
add
stos
jae
add
enter
mov
add
loope
imul
push
fisttps
mov
push
fwait
lock
mov
fisubrl
lds
mov
add
jae
negl
cld
repz
clc
mov
pop
lret
shlb
dec
loopne
dec
mov
sbb
xorl
mov
loop
adc
pop
add
notb
push
mov
sbb
or
aam
xor
lea
mov
add
mov
faddl
push
inc
push
add
cmp
cmp
hlt
scas
dec
rcl
cmp
lock
push
mov
stos
pushf
mov
mov
jno
add
cwtl
sbb
inc
imul
das
hlt
mov
fildl
arpl
jmp
pusha
stc
add
mov
inc
fimuls
js
inc
or
fdivrl
xlat
pop
cmpsb
ret
pop
ds
sub
call
mov
inc
sbbb
mov
cmp
ljmp
add
push
rolb
or
xchg
jbe
cmp
insl
mov
adc
add
mov
dec
add
test
sbb
lahf
push
sbb
das
or
testb
push
jge
and
sahf
push
lret
outsb
lock
and
push
std
jp
cli
fsubl
pop
testb
daa
mov
mov
in
sub
cmpsb
icebp
lock
lods
rclb
in
fmull
pusha
and
xchg
xor
mov
push
xor
ja
lds
inc
rorb
rorl
fidivrs
pop
loopne
mov
xor
pop
sub
dec
push
add
or
sbb
outsl
push
orb
loop
mov
jg
sub
incl
vmwrite
add
lea
loopne
aaa
push
sbb
fsubs
stc
cmp
add
push
stos
sbb
push
ret
adc
dec
jae
add
cmp
jb
push
incl
lret
mov
int
sbb
add
cs
inc
dec
pop
mov
jp
xor
mov
pop
je
xchg
fimuls
stos
mov
push
xlat
inc
inc
out
jo
or
jo
loope
fisttpll
pop
out
jge
dec
imul
jb
add
cltd
xor
jmp
adc
orb
sub
aam
pop
push
xchg
dec
out
mov
inc
aam
lahf
lock
andb
cld
jbe
add
loopne
mov
mov
dec
cs
jb
loopne
ficomps
or
sub
outsb
add
xlat
push
loop
push
pop
cld
add
into
das
out
push
in
adc
or
adc
add
xlat
push
jmp
pop
shr
or
cmp
sub
mov
push
or
mov
push
add
add
add
sub
jns
jl
inc
inc
add
mov
dec
and
sbb
mov
inc
inc
mov
paddsw
ficoml
fildl
cld
iret
movsl
xchg
jmp
add
xor
jp
pop
bound
nop
pop
out
fdivl
mov
stos
or
and
inc
mov
dec
jae
repz
clc
jo
incl
addr16
mov
mov
adc
ss
dec
push
mov
pop
or
add
fistpl
fs
nop
mov
rolb
aam
test
pop
add
dec
test
xor
jb
pop
repnz
xor
inc
rolb
jo
pop
mov
add
jbe
cmp
mov
xchg
pop
add
pop
mov
lock
das
push
add
xchg
sbb
cli
add
out
cmp
add
pop
mov
xorb
in
xor
inc
mov
cli
mov
sbb
mov
lret
xchg
and
idivb
mov
add
push
cltd
cmp
mov
flds
jno
xchg
fistps
fidivrs
add
les
insl
add
add
mov
dec
sub
xchg
add
sub
lods
add
lods
ljmp
add
ds
jae
enter
cmp
xor
cld
imul
add
add
mov
xchg
sarb
out
xchg
push
fcoml
daa
and
pop
loop
jnp
add
orl
push
pop
out
es
and
stc
jge
movsb
and
mov
or
or
lret
add
jl
iret
add
and
adc
mov
and
clc
dec
add
jmp
add
sbb
stos
push
mov
add
adc
cmp
jl
shrl
jne
repz
mov
adcb
xchg
push
cmp
stc
shr
decb
jecxz
movsb
stos
push
add
xchg
push
lahf
ud1
cmc
iret
cmp
imul
add
aas
shlb
ret
sti
add
popf
rcrb
push
jnp
add
dec
jb
cmp
daa
aad
adc
push
cmp
lahf
ljmp
mov
test
or
jb
dec
lcall
loope
icebp
rolb
dec
push
popf
or
es
sbb
lds
pop
cmp
loopne
add
push
arpl
lods
and
add
sarl
test
dec
adc
imul
xor
inc
mov
inc
jo
outsl
iret
sbb
add
jbe
int
dec
ja
add
adc
pop
jb
add
mov
xor
test
scas
add
stos
mov
adc
and
inc
ja
push
scas
mov
jne
push
jecxz
inc
loopne
repz
pop
mov
add
dec
in
addr16
frstor
call
xorb
mov
add
fstl
cmp
push
nop
sahf
pop
sbb
shrl
fsubr
mov
or
inc
arpl
subb
add
pop
xor
pop
cs
daa
stos
and
loopne
clc
adc
add
xchg
inc
adc
cmc
pop
out
ja
or
push
dec
sarb
lcall
stos
pop
inc
jno
scas
add
and
add
pusha
push
movl
cwtl
rcrl
fwait
bound
mov
sub
movsl
mov
or
mov
adcl
ror
add
shlb
add
or
pusha
add
in
cmp
lds
fadds
and
jge
ds
jecxz
enter
add
aas
add
add
pop
xchg
xchg
add
jge
cmp
addb
pop
lds
xchg
sbb
repz
arpl
add
jle
jl
push
cmc
out
push
mov
loope
xor
aas
lret
pop
or
hlt
dec
inc
into
or
hlt
add
imul
push
cmp
mov
adc
fnstcw
loopne
in
xor
add
lahf
inc
xchg
aas
add
add
mov
adc
xor
movsl
add
aas
add
cmp
loop
in
std
xor
ljmp
add
jbe
in
mov
idivl
push
lahf
popa
dec
add
test
and
sbb
cmp
jle
or
dec
pop
fcmovne
pop
mov
add
inc
shrb
or
leave
sbbb
push
sbbb
push
xor
or
lea
adc
fwait
int3
jns
dec
pushf
fadds
test
iret
sbb
sub
int3
setb
repnz
pop
add
or
adc
repz
pop
pop
add
aaa
out
movl
mov
cs
lahf
or
jne
mov
add
mov
jp
cmpsl
push
add
pusha
mov
sbb
cld
adc
test
mov
adc
in
pop
xchg
mov
sub
xchg
add
int
stos
rcrb
push
xchg
cmp
or
loope
pop
fwait
mov
xor
mov
les
sbb
add
or
aaa
mov
and
dec
nop
push
imul
sti
insl
sub
popf
cwtl
jmp
add
enter
cmpsb
add
lods
xchg
xor
cwtl
lock
pop
pop
add
mov
add
addr16
sbb
lret
add
cmp
inc
hlt
insb
mov
and
mov
add
fidivs
loope
and
aad
mov
loopne
add
add
mov
shr
in
pop
loopne
inc
test
jg
int
mov
dec
sub
add
cwtl
imul
dec
fildl
int
sti
add
xorb
scas
add
or
jle
or
add
ljmp
ret
stos
pop
xor
test
std
roll
add
add
es
push
cwtl
lret
and
ja
inc
cmpsl
add
test
in
orl
inc
jp
cmp
xchg
mov
and
sub
nop
out
mov
mov
cmc
pop
sbb
sbb
pop
xchg
int3
nop
pop
aaa
aas
add
mov
gs
inc
les
pop
jbe
imul
and
jge
pop
mov
adc
and
arpl
add
mov
ljmp
cmp
in
add
mov
aas
xorb
leave
add
xchg
bound
out
test
dec
push
pusha
inc
into
pushf
in
push
aaa
push
jnp
rolb
out
add
js
imul
or
dec
or
mov
mov
ss
loopne
pop
or
add
pop
in
push
add
sbb
jge
jecxz
mov
fsubrl
out
xchg
add
or
aaa
loopne,pt
add
mov
push
xchg
jno
add
sub
cmp
cmp
pop
add
insb
icebp
jo
in
ljmp
cltd
shlb
lods
add
mov
cmc
add
xchg
stos
fisttps
mov
add
je
xor
mov
push
pop
loopne
cmpsl
pusha
loop
add
out
popa
xlat
or
adc
add
xor
into
adc
dec
and
mov
sbb
test
xchg
or
icebp
addl
shr
add
pop
fadds
js
add
ljmp
cmp
add
dec
hlt
sbb
mov
pop
and
fistl
push
inc
mov
in
add
out
cli
pop
push
cltd
andb
or
cmp
andb
cmpsl
ja
arpl
data16
lcall
sub
add
dec
rcrb
pop
sbb
cmpsl
jge
int3
repnz
je
hlt
adc
mov
add
add
and
call
xlat
add
sbb
xchg
enter
add
lcall
pop
jnp
stos
arpl
shl
xchg
sub
xor
add
stc
je
test
movsb
push
jle
cmp
inc
and
jb
mov
ret
adc
xor
xor
and
ret
jg
repz
scas
jle
add
sbb
push
pop
jge
in
push
mov
mov
test
mov
addr16
jne
xor
xchg
and
sbb
mov
inc
int3
test
dec
mov
add
jnp
mov
cmp
int3
movb
push
sub
add
popf
push
pop
addb
or
push
pop
imul
xchg
xorb
and
add
out
jmp
mull
jmp
push
push
loopne
mov
push
lret
push
shlb
mov
cmp
jno
add
xor
sbb
adcb
sbbb
pusha
add
mov
in
lahf
arpl
test
andb
fiadds
fsubrl
push
imulb
loopne
sub
adc
cmpsb
repz
jnp
add
cmpsl
lret
cmc
daa
shl
outsl
inc
nop
les
xchg
jmp
pusha
repz
mov
jg
inc
add
in
xchg
add
stos
sahf
adc
jbe
mov
xchg
rolb
xchg
pop
add
and
in
in
out
add
mov
rol
lcall
add
xchg
subl
xchg
fcmovnbe
jp
add
pop
scas
add
ljmp
add
sub
inc
test
push
sbb
add
sbb
adc
das
xor
cmp
jl
popf
sub
bound
negb
loopne
pop
sarb
xor
inc
push
es
sarl
or
std
das
pusha
outsl
adc
in
repnz
push
jmp
xor
addl
jns
pusha
int3
scas
cmp
in
arpl
mov
push
add
sbb
incl
dec
icebp
pop
push
xchg
outsb
cmp
jno
mov
pop
adc
xor
and
ret
add
ds
xor
jl
add
lea
add
xchg
pop
xor
ds
mov
add
xchg
xchg
push
add
negb
out
lds
xor
stc
add
sub
loop
sahf
testl
jge
ffree
jmp
cmp
mov
leave
add
out
fiadds
popl
pushf
pop
mov
mov
jge
fs
sbb
addr16
ljmp
cmp
add
mov
add
xchg
lea
mov
push
push
ret
and
sbb
addb
mov
jp
xor
shlb
in
sbb
mov
add
clc
add
adc
das
push
popa
outsb
ret
lahf
push
mov
xchg
add
imul
inc
in
repz
subl
adc
mov
insl
sbb
cmpsb
inc
icebp
ds
mov
mov
decl
arpl
out
jae
adcb
mov
add
hlt
inc
insl
leave
fsub
xchg
add
and
add
insb
or
jns
insl
add
mov
rcll
mov
mov
aam
or
je
test
mov
stos
addb
cmp
pop
sbb
clc
mov
andb
jg
or
ds
xor
lret
jne
addb
out
enter
adc
push
sub
sub
or
je
insl
fst
dec
cmp
nop
sub
clc
dec
call
or
sbb
pop
cmp
int
cmpsb
add
xchg
nop
nop
pop
inc
lock
mov
add
stc
jmp
xchg
add
sti
xor
test
mov
stos
add
cld
xor
pop
mov
mov
push
xchg
cwtl
mov
ror
dec
adc
xchg
jno
jl
mov
cmp
mov
cmp
cmc
scas
gs
cmp
addb
jg
insl
inc
stos
add
mov
cmpsl
cmp
rorl
xor
cld
inc
jl
or
inc
mov
or
insb
mov
push
popa
add
mov
xchg
add
push
data16
rol
sarb
mov
xor
pop
and
adc
enter
jbe
into
lods
cmp
add
sarl
adc
mov
add
scas
mull
fcmove
lahf
inc
aas
pop
dec
dec
mov
push
mov
mov
add
push
faddp
shlb
imul
pusha
std
icebp
loope
enter
sbb
push
gs
fwait
cs
mov
shll
rolb
rclb
ja
and
or
shlb
adc
test
xchg
push
xchg
sbb
and
pop
cmpsb
test
jecxz
jmp
pusha
lcall
sbb
and
roll
mov
jg
fwait
or
lock
sub
xor
shrb
daa
cmp
adcb
lods
std
psubb
and
popf
lods
je
xor
cmp
dec
test
add
stos
shrb
ds
in
xchg
fwait
add
orb
add
push
and
xchg
add
fstpl
pusha
jg
cltd
mov
add
adc
jne
mov
add
push
push
pop
lret
sub
cmp
adc
popf
xor
test
inc
mov
add
mov
sbb
add
and
or
pusha
rorl
push
adcb
sti
cli
jbe
or
test
negl
hlt
sub
add
outsl
push
scas
rorl
loope
das
sub
add
lahf
fcoml
vmread
adc
addr16
push
sbb
stos
add
lret
jl
mov
lea
sub
cmp
inc
imul
lods
insb
add
inc
or
repz
add
insl
andl
clc
lods
std
ret
xchg
adc
xor
jnp
cmp
arpl
jmp
add
push
orb
scas
add
cmpsb
imul
fcompl
leave
cltd
rcl
lret
insb
mov
mov
pop
pop
popf
and
push
adc
and
clc
push
ds
mov
xchg
test
pop
add
ret
add
rcrb
mov
inc
pop
inc
jecxz
add
and
mov
pop
add
rorl
sub
pusha
mov
dec
jle
dec
sarb
add
pusha
test
sbb
jmp
sbb
sahf
add
js
nop
mov
stos
out
xor
jle
mov
addb
lock
add
jae
stos
and
add
jmp
and
mov
js
ret
pop
inc
aaa
sti
rorb
ret
add
scas
rcl
jne
dec
outsl
push
sbb
mov
mov
add
sub
lods
add
adc
subl
je
add
inc
pusha
add
in
push
repnz
cmp
mov
add
jmp
xor
sti
xchg
sbb
mov
pop
sarb
test
add
fmulp
dec
rolb
jl
pop
push
popf
cltd
adc
cmpsb
ret
mov
inc
add
testb
mov
mov
sbb
mov
les
add
rclb
xor
cmp
mov
jbe
mov
mov
mov
add
mov
andb
std
lahf
lret
push
sbb
push
fidivrs
add
rorl
out
pop
cmp
cmp
pop
les
rcll
sub
pop
sub
cmp
pop
jns
push
test
mov
shrb
dec
or
xor
cwtl
xchg
lods
xor
xchg
add
arpl
add
adcl
adc
inc
and
jecxz
mov
cmc
xchg
sbb
inc
scas
mov
add
aaa
xchg
sub
add
jecxz
testb
and
iret
add
adc
sbb
inc
add
push
repnz
add
mov
sub
shrb
out
incl
movsb
cmp
mov
add
cwtl
lahf
jnp
pop
push
cmp
aaa
clc
add
jecxz
ret
andl
cmp
dec
push
mov
or
mov
inc
jl
fstl
in
inc
cld
or
add
adcl
jge
xor
movsb
jns
incl
lret
mov
mov
jle
xchg
repz
or
dec
or
inc
sub
sub
sbb
bound
lret
cmc
inc
jae
addb
adc
add
jne
pop
clc
xlat
pop
popa
mov
daa
mov
icebp
aam
and
sub
push
push
pop
addb
das
je
mov
add
sub
pop
insl
mov
and
js
ljmp
xchg
add
jge
in
test
push
add
repz
sbb
sub
add
xor
add
push
in
mov
jnp
test
adc
pop
add
jb
push
cld
ja
mov
out
arpl
mov
dec
mov
test
sbb
aam
hlt
lret
xor
iret
nop
movsb
stc
or
dec
pushf
add
inc
test
add
mov
mov
adc
add
xor
pop
rolb
inc
ds
sahf
and
add
imul
or
adc
dec
clc
adc
pop
loope
aaa
lcall
dec
add
mov
sbbl
push
jl
movsb
or
mov
test
jecxz
fidivrs
mov
cmp
insb
lret
jb
pusha
cmc
in
ds
add
add
loopne
add
push
mov
idivl
mov
xchg
popf
and
mov
add
outsb
add
xchg
ss
loopne
jae
sbb
andb
push
add
mov
cmpsb
add
clc
inc
cmp
cmpsl
iret
inc
int
inc
sbb
add
and
ljmp
jne
and
int
pusha
jle
mov
adc
jmp
adcl
mov
fsin
aas
dec
stos
mov
ljmp
sbb
and
imul
movsl
xchg
mov
fcomps
cli
pop
add
in
rorb
addb
mov
pusha
add
cmp
rolb
fstl
xor
repnz
add
fstpt
mov
push
aad
adcb
in
sbb
add
dec
xchg
pop
ja
or
push
aad
data16
mov
in
pop
xchg
ja
bnd
loopne
and
hlt
pushf
test
sbb
push
push
add
mov
in
and
pop
mov
fcmovu
dec
push
cmc
cmp
je
cld
inc
pop
mov
adc
clc
insb
push
test
add
pop
mov
loope
inc
lods
in
adc
aaa
mov
push
dec
ret
les
neg
add
sub
mov
je
add
xor
in
add
push
jae
sbb
lods
add
inc
jno
or
lahf
inc
dec
add
jp
ds
jle
cmp
push
add
xor
dec
daa
adc
dec
mov
pop
xchg
mov
adc
daa
lds
inc
adc
cli
xchg
movsb
addb
adc
aad
mov
cmp
adc
or
movsl
lods
inc
cmp
movsb
or
stc
in
sti
jle
sub
add
inc
shlb
add
iret
stos
in
jno
add
jns
inc
enter
mov
cli
outsb
add
push
pushfw
loopne
sub
sub
div
mov
test
push
das
enter
fadds
xchg
ds
fimuls
idiv
icebp
cmp
in
sub
or
loope
cmp
add
xor
mov
lcall
sbb
jnp
out
mov
sbbb
pop
cmp
and
xchg
orl
arpl
push
rcr
cmpsl
pop
ret
xchg
notl
mov
jp
cld
call
sub
outsb
stc
adc
daa
fstps
incl
mov
inc
fimuls
pop
pop
mov
int3
lret
push
pop
dec
add
and
aas
push
cmp
out
roll
adc
addb
aam
les
in
pop
jp
int
and
add
or
jecxz
jb
dec
add
flds
cmp
add
jae
mov
sub
xlat
mov
add
ja
es
dec
or
iret
add
push
cmp
mov
or
dec
icebp
in
or
loopne
ljmp
mov
adc
mov
mov
dec
mov
inc
bound
xor
sarb
insl
jno
aas
mov
testl
dec
into
pusha
cwtl
cmp
mov
ret
sbb
add
xor
add
movsb
faddp
and
mov
mov
outsl
push
hlt
and
dec
fdivrs
sbb
cs
cmp
movsl
call
jecxz
and
adc
lock
daa
cmp
mov
sbb
ss
sub
out
enter
stc
inc
add
or
mov
add
sbb
test
add
and
or
pop
movsb
pusha
add
fs
lds
push
xrelease
dec
test
pop
jne
push
fnstenv
ret
pop
and
sarl
cmpsb
add
mov
cli
or
push
or
mov
mov
pop
add
mov
mov
mov
push
data16
or
cmp
insl
add
inc
pop
icebp
pop
mov
xor
div
add
adc
enter
mov
shr
adc
and
fadds
mov
lods
into
inc
outsb
decb
mov
pushf
pusha
and
jecxz
aaa
mov
pop
sti
push
push
mov
loop
jecxz
testb
jg
js
add
in
insl
add
pop
nop
pop
es
push
jne
mul
or
repnz
pop
int3
pop
fcompl
roll
push
cmc
and
mov
xorl
adc
fstp
and
pop
ja
outsl
sbb
pop
or
jbe
add
ret
pop
mov
clc
pop
ds
push
rcrl
mov
pop
shll
add
xchg
jnp
dec
sbb
cmpsl
cmp
push
xor
add
sub
sub
inc
add
xchg
aad
mov
add
jne
pop
in
sub
cmc
idivl
mov
xor
lds
sub
xchg
xorl
sbb
jo
and
and
hlt
bound
push
or
xchg
add
sub
mov
pop
add
shl
xor
pop
lcall
clc
push
add
adc
jne
mov
and
or
xchg
xchg
flds
inc
lahf
out
loopne
push
xchg
adc
gs
sbb
add
outsl
jmp
push
push
aas
xor
jl
lods
sub
jns
cwtl
inc
and
out
ret
insb
dec
add
jl
push
pop
loopne
rolb
pop
pop
adc
andl
popf
aas
loop
mov
imul
cs
cmp
pop
lret
push
mov
xchg
dec
xor
pop
aas
hlt
ss
cmpsl
sbb
inc
sub
mov
jb
imul
punpckhbw
cmc
push
repz
faddl
ret
mov
sti
push
lds
leave
mov
inc
jp
mov
ss
cld
cmp
shl
pusha
cmp
sbbb
cltd
adc
in
xor
shlb
ss
dec
pop
shlb
add
pushf
mov
popf
adc
push
mov
bound
sahf
pop
out
or
movsb
in
fmull
test
add
lds
xor
sti
xor
adc
push
inc
add
add
pusha
xchg
mov
pop
mov
xor
nop
xchg
or
ret
roll
testb
pop
cwtl
inc
loopne
jae
add
or
push
repnz
pop
cmp
ja
jb
sbbl
ficompl
sbb
in
outsl
dec
mov
lock
add
rcrl
mov
jecxz
push
testb
add
lods
or
add
add
sbb
stos
dec
xchg
imul
push
add
jmp
arpl
decb
push
adc
cwtl
add
xor
leave
jl
jno
hlt
lret
outsl
xchg
nop
xchg
add
add
nop
or
bound
mov
jmp
mov
lods
jns,pn
adc
xchg
lret
es
cmp
xchg
mov
rolb
mov
fs
mov
cmp
jns
in
mov
xor
or
pop
lcall
xor
mov
pop
mov
out
add
sub
cmp
push
jecxz
addl
shlb
cwtl
cld
test
popa
jmp
enter
jecxz
pop
push
add
cmp
je
add
pop
push
xchg
rolb
add
int3
sbbb
push
popa
add
lcall
inc
jb
arpl
roll
fwait
xchg
lcall
cmp
fnstsw
mov
or
xor
mov
push
dec
insl
pop
sub
clc
mov
lea
hlt
nop
adc
push
sub
or
add
in
pop
cmp
pop
sbb
or
xor
pop
std
lcall
mov
jmp
jno
insb
push
jo
push
aaa
scas
rcr
pop
jecxz
mov
jmp
rorb
xchg
testb
out
cwtl
jae
fcmovb
xchg
aaa
clc
mov
xchg
pusha
inc
push
mov
push
add
repnz
inc
pop
nop
jp
mulb
or
add
sub
jge
or
add
ja
insb
lock
add
dec
xchg
inc
dec
lret
add
xchg
int3
es
loope
add
std
inc
inc
movl
jnp
sub
push
incb
mov
pop
adc
cltd
xor
adc
dec
pop
cmp
jnp
xor
repnz
rol
cmp
je
or
xorb
xor
jp
mov
pop
jns
mul
add
add
arpl
fldenv
dec
push
in
and
lock
clc
ds
adc
popf
sbb
mov
in
loop
sbb
push
mov
xlat
cmp
cmp
cltd
sbb
rep
inc
int
mov
or
sub
cmp
orb
and
xchg
add
inc
aaa
mov
push
push
sub
hlt
mov
imull
popa
dec
cmp
adc
and
icebp
cmp
xor
push
sbb
adc
fsubs
stc
add
ljmp
sub
add
sbb
pop
add
push
pop
push
add
cmp
adc
ret
pop
add
out
mov
shl
sbb
mov
arpl
add
xor
or
add
dec
mov
and
ja
sub
or
aas
in
daa
nop
je
iret
add
out
popa
repz
in
aad
add
sahf
icebp
mov
add
pop
data16
lock
push
cmpsl
les
xor
and
push
pushf
in
je
add
jne
lcall
test
popa
aad
mov
jp
xor
sarb
popf
rclb
xorb
lods
scas
mov
cltd
mov
mov
pop
fs
inc
add
stc
sbb
pop
cwtl
mov
add
das
aas
and
call
push
pop
cmp
cmp
cmp
rclb
add
xor
loop
in
inc
lock
push
add
outsb
fsubs
mov
pop
jbe
and
das
cmp
jo
mov
or
cli
mov
dec
pmaxsw
inc
subb
lods
enter
mov
mov
sbb
test
inc
pusha
dec
lods
incl
loop
pop
daa
repz
push
push
or
pop
xor
and
xchg
mull
les
add
shrd
repz
pop
roll
or
xchg
push
out
add
push
shrl
lret
mov
testb
sbbb
adc
dec
adc
add
rolb
fwait
scas
mov
add
and
loopne
movsl
push
add
test
xchg
rcrb
call
jl
mov
add
roll
xor
lahf
loope
outsl
and
push
inc
xlat
mov
and
dec
jne
js
mov
jl
jns
and
pop
cmp
sub
lds
push
adc
in
repnz
cmpl
lock
and
cwtl
loope
ret
rcr
std
mov
or
push
mov
xor
jl
aam
testl
lods
or
stos
adc
fbld
mov
sahf
sbbb
js
add
sub
mov
fadds
lds
jmp
fcomps
sub
orb
int3
add
push
mov
or
and
fs
orb
jb
aas
outsb
mov
cmp
cs
add
stos
fistpl
pop
ds
stos
in
decl
xor
icebp
xchg
in
mov
sbb
xchg
shll
or
outsb
fmull
sbb
push
pushf
fidivrs
and
adc
fdivs
add
movsl
inc
jp
sti
cmp
btr
adc
rcll
jp
add
mov
xchg
pusha
add
sub
xor
lock
jle
jae
inc
push
repnz
leave
int3
mov
jb
mov
push
push
mov
lods
lret
xchg
inc
mov
loop
sbb
fs
xchg
jg
addb
push
out
pop
stc
cli
mov
inc
cmp
cmpsb
fs
out
add
rcl
add
lock
add
popf
jb
jae
add
or
flds
dec
hlt
push
add
stos
addl
stc
nop
xor
sbb
pop
dec
into
data16
add
fsubrl
xchg
jae
mov
add
mov
xor
addb
and
dec
mov
insl
fidivrl
add
jle
add
pop
std
out
inc
arpl
xlat
dec
mov
xor
lock
jb
es
mov
into
xchg
lea
add
fildll
fwait
out
lock
aam
out
add
push
lods
sbb
nop
mov
nop
cmp
ds
lea
sbb
lea
dec
mov
lods
jne
xor
mov
inc
mov
xor
cmp
and
popf
addr16
lods
xchg
dec
loope
gs
in
aas
lock
xchg
inc
pop
push
mov
leave
data16
outsl
xchg
add
dec
stos
pop
add
xchg
push
xchg
movb
or
jle
push
stc
out
push
sub
dec
js
dec
lret
imul
mov
cmpb
jns
add
jno
lret
sub
mov
roll
xchg
int
out
add
sbb
cli
cmc
pop
into
shll
ret
pop
sub
or
andl
xor
add
or
inc
aam
xchg
xchg
nop
mov
addb
add
push
lods
push
cwtl
mov
pushf
add
shrb
nop
jb
dec
cld
mov
jl
xor
ja
out
or
in
pmaxub
hlt
add
xor
fsubrp
mov
xor
jnp
fsubrs
nop
push
out
sahf
add
movsl
lods
idivl
inc
mov
mov
icebp
add
lret
dec
mov
inc
or
sub
adcb
aad
pusha
mov
std
add
xchg
pop
sbb
xor
inc
outsl
scas
bound
mov
push
and
jne
inc
call
dec
push
jo
leave
cmp
add
xchg
mov
add
mov
mov
inc
inc
sbb
shrl
ret
cmp
push
mov
and
add
fwait
lea
add
hlt
pop
push
add
dec
filds
mov
jecxz
xor
sub
loopne
ss
add
lds
cld
xchg
inc
sahf
in
rorl
inc
mov
or
jbe
sub
cmp
movsl
xchg
and
and
dec
push
cwtl
in
and
lret
pop
dec
int3
jae
add
sub
push
pop
ror
call
mov
cli
xchg
add
out
insb
mov
add
addb
jecxz
add
xor
cmp
imul
shlb
add
int3
jae
pop
mov
push
bound
jl
xor
push
dec
lods
inc
cli
es
lds
dec
test
lahf
add
xchg
pop
les
xor
push
loope
movb
xchg
mov
add
sub
das
jae
cmp
dec
adcl
or
iret
cmp
mov
ret
mov
jno
ss
mov
loopne
xor
xor
add
imul
jno
push
cmp
leave
clc
jg
or
or
xor
mov
lret
pop
jnp
add
sbb
in
add
imul
mov
or
repnz
fiaddl
mov
nop
inc
ret
dec
jae
loopne
and
cmpsl
add
orb
dec
stos
adc
pop
or
pop
add
int3
out
in
sahf
push
js
lret
push
lea
test
in
cltd
mov
mov
or
in
xchg
stc
mov
popf
pop
rclb
push
pop
xlat
loop
fstps
lret
cmpsl
cmpl
mov
add
push
inc
out
cmp
xchg
and
pop
jl
add
sub
lret
out
rcl
adc
orb
sti
add
dec
rcrb
dec
add
test
add
jmp
aad
comiss
leave
jo
cmp
xor
sub
pop
call
cwtl
jb
sbb
rcrb
inc
add
das
dec
add
pop
push
daa
add
movsl
dec
inc
inc
loopne
jp
shlb
call
ret
add
lods
cmpsb
add
add
into
and
loope
cmp
cmp
add
cmpb
pusha
sbb
adc
ds
add
mov
add
jns
andl
add
mov
adc
inc
add
xchg
dec
add
pop
psadbw
mov
xor
btr
fstps
jecxz
stos
xchg
cmpb
ds
les
stc
mov
push
repnz
fadd
or
pusha
dec
push
sbb
adc
add
andb
fcompl
push
push
xor
insl
add
js
in
flds
fbld
popf
add
add
daa
lock
and
std
sbb
mov
or
jb
incl
dec
imul
jne
stos
and
adc
sbb
sub
xor
jecxz
mov
cltd
push
sbb
scas
add
lret
adc
sbb
sbb
adcb
pop
movsl
or
clc
frstor
dec
cmp
pusha
jo
ret
jl
add
cltd
sbb
add
mov
mov
dec
sti
inc
push
fs
and
adc
insl
popf
mov
xchg
pop
leave
add
add
push
arpl
add
dec
xchg
mov
inc
shl
mov
add
sub
scas
jne
fldl
cmc
sbb
pop
add
loope
jecxz
mov
mov
adc
addb
pop
cmpsb
jo
je
add
cmp
xor
push
dec
add
cmp
xchg
pop
jns
add
xchg
sahf
in
aaa
sbb
add
push
add
sbb
fsub
call
test
inc
fidivrs
jb
cwtl
jns
fnsave
mov
mov
push
test
and
lea
scas
add
jp
add
nop
loop
add
int3
push
push
cli
outsl
jnp
add
repnz
add
xchg
xchg
add
in
lret
inc
mov
ja
xor
xlat
std
xor
push
popa
rorl
pop
add
add
imul
pop
addl
mov
je
pop
sbb
aaa
sbb
and
add
mov
lds
rcrb
add
int3
mov
loopne
or
dec
outsb
ja
jo
cmp
cwtl
pusha
cltd
outsl
cmpsl
mov
sbb
out
mov
adc
and
pushf
push
mov
std
sub
das
leave
jbe
jo
cmp
sbb
adc
imul
lret
mov
dec
shlb
test
int3
dec
pop
imul
shl
das
adc
cmp
jae
and
popf
pop
ficomps
in
leave
add
test
out
cmp
sub
icebp
sbb
pop
int
js
mov
xchg
es
or
imul
inc
pop
sbb
sti
pop
or
sub
dec
rol
scas
call
add
aaa
sahf
xor
incb
int
iret
ljmp
add
out
les
add
jle
idivb
add
mov
push
mov
cmpsb
cmp
lds
xchg
stos
lret
cmp
ret
or
pop
ss
sbb
in
jmp
pop
gs
js
push
inc
and
lods
icebp
push
push
jp
adc
ror
out
push
leave
push
or
and
sbb
cmp
scas
mov
add
movsb
lret
dec
data16
jne
add
xor
cld
or
or
clc
inc
mov
inc
add
xor
push
jp
mov
inc
leave
mov
mov
xchg
sub
push
mov
pop
imul
mov
int3
int
pop
pop
stc
lods
sub
adc
lds
xor
repz
push
adc
dec
xchg
and
pushf
ficoml
sahf
outsl
roll
jmp
sub
fisttpll
pusha
inc
dec
add
fidivl
pop
cmp
xchg
add
mov
push
mov
lahf
jno
insb
inc
xchg
sti
in
add
jecxz
std
cltd
popf
mov
cmpsl
cwtl
adc
sub
aad
int
out
and
cwtl
or
sub
and
call
inc
popl
insl
js
loopne
repz
dec
or
adc
push
or
subl
out
jo
or
and
sarb
mov
jge
lahf
jl
rorb
add
pop
ror
es
mov
cmp
mov
outsb
adc
mov
adc
movsb
add
popf
fimuls
mov
inc
lcall
int3
dec
jmp
and
shlb
mov
jae
add
sbb
jecxz
sub
add
mov
sahf
cmp
dec
orl
xchg
inc
add
or
pop
sbb
loopne
add
sbb
dec
xor
insl
add
mov
or
out
pop
jle
push
push
and
out
dec
add
stos
sbb
mov
push
xchg
add
jl
lock
push
push
dec
inc
pop
push
fmull
push
arpl
mov
pop
push
add
leave
or
push
fwait
mov
push
xchg
xlat
cmp
dec
rolb
repz
add
adc
xchg
hlt
and
and
add
dec
adc
repnz
js
cmp
fbld
add
loope
fsubrs
add
fisubrs
mov
push
adc
xor
add
adc
cs
ficoms
add
xor
sarl
les
cmpsl
pushf
fstpt
cld
aas
and
add
fwait
xor
push
cmp
sub
nop
mov
xor
enter
movsb
jbe
cwtl
xchg
sub
xor
bound
into
mov
gs
push
sbb
rclb
rolb
cmpsb
mov
inc
mov
add
rorl
sbb
ss
xor
add
jmp
rol
subb
pop
dec
sbb
popf
lret
mov
jns
add
sahf
adc
sbb
lcall
jge
xor
adc
add
push
test
add
dec
sub
jo
loop
outsb
and
push
sub
sbb
cmp
adc
rcll
mov
sbb
pop
dec
sub
ret
add
pop
inc
outsb
pop
inc
xchg
push
mov
fs
lock
adc
push
pusha
or
les
add
mov
lret
into
pop
aad
push
or
jbe
jns
pop
int3
and
out
mov
adc
sub
mov
jo
outsl
shr
sub
jno
sbb
in
add
leave
lea
push
xchg
xor
sbb
or
jo
dec
pop
call
cmp
cmpsl
jnp
add
mov
lret
psubw
das
jge
cmp
push
enter
push
lcall
sbb
or
repnz
outsb
xor
es
and
add
jg
xchg
sbb
ja
or
inc
xor
add
repnz
cmpsl
sub
fistl
or
jae
sbb
and
aas
mov
add
jl
cmpsb
push
cmpsl
repnz
add
add
inc
cmp
dec
adc
add
push
add
or
js
add
iret
ret
pop
xor
ret
aad
je
daa
int
add
lret
pop
ret
pop
mov
pushl
dec
std
incb
jnp
push
loopne
mov
out
push
mov
mov
iret
add
in
push
ja
mov
pop
mov
or
fdivrl
pop
pop
int3
mov
jnp
sarb
loopne
pushw
loopne
mov
inc
sub
pop
in
add
mov
mov
fcoms
sub
and
push
dec
mov
cmp
pusha
inc
jne
lahf
cmp
cmp
adc
sub
cmp
pop
sub
inc
ds
bound
or
and
and
xor
jns
inc
adc
and
iret
js
dec
xor
sub
and
fiaddl
adc
or
popa
cmp
mov
test
mov
cmpl
inc
stc
incl
xchg
adc
mov
fwait
mov
pusha
push
xor
mov
mov
loope
test
enter
loopne
jb
cmp
ja
fwait
outsb
add
push
xor
int3
cmp
test
dec
stc
lods
jge
add
fcomps
adc
sub
push
jnp
loopne
mov
add
movnti
fsubp
mov
jg
in
mov
std
hlt
call
add
sub
jp
jnp
xor
test
test
das
fwait
and
std
cmp
sub
or
clc
jp
add
aam
xchg
mov
pop
jno
jbe
jo
add
dec
pop
mov
sahf
or
cmpb
out
xor
push
mov
jg
lea
adc
insb
sbb
xchg
add
fsubs
pop
sbb
xor
inc
repnz
pop
fldt
hlt
ret
jae
sbb
shrl
add
in
push
add
ljmp
inc
jne
imul
add
xchg
mov
cmc
test
push
cltd
fwait
mov
sbb
add
and
lret
mov
fs
arpl
dec
notb
pop
add
pop
mov
icebp
pop
add
mov
ror
pop
mov
lds
pop
ljmp
js
add
cmp
add
mov
shlb
lock
out
mov
push
push
add
xchg
stos
out
and
dec
pop
cltd
icebp
mov
sub
mov
stc
pop
pop
or
test
faddl
pop
std
xor
mov
fsubs
xor
cmpsb
aas
mov
adc
cmp
aam
mov
in
xor
push
dec
sub
xor
cmp
mov
sub
xchg
jo
add
mov
jl
mov
pop
mov
add
cmpsl
push
pop
sbb
pop
add
jbe
fstl
adc
and
jp
mov
nop
and
mov
sub
je
into
add
or
jb
add
test
divl
and
ljmp
add
cli
jg
jbe
pusha
es
add
mov
mov
add
nop
jge
push
push
add
repz
bound
pop
pop
jae
add
and
out
push
inc
in
incl
insl
adc
push
sbb
out
xchg
ret
enter
pop
xchg
mov
sbb
push
lods
jl
sub
dec
outsb
push
or
mov
pop
add
ja
jle
inc
rcl
jb
jl
aad
pop
mov
jno
jp
rorb
enter
inc
or
gs
adc
adc
xor
bound
sub
aam
jle
ljmp
addb
cwtl
xor
nop
std
aam
dec
add
and
or
xlat
and
popa
push
add
scas
inc
aas
add
out
cmpsb
fistpll
cmpsl
aad
add
sub
mov
mov
insb
pop
test
pop
sbb
dec
rol
push
addr16
add
sub
jae
les
xchg
xorb
or
jo
and
pop
jle
sbb
dec
pop
and
fdivrs
inc
add
sbb
scas
stc
inc
pusha
add
jge
add
sub
test
fmull
add
int
lods
add
iret
mov
cmpsb
jo
bound
test
lods
xchg
aaa
mov
std
jge
cltd
add
jae
add
mov
mov
pop
xchg
lret
add
out
in
movsl
xor
jne
fstpt
cmpsl
popl
sub
icebp
test
cld
jp
add
std
rolb
lods
add
dec
xchg
mov
mov
xchg
xor
loope
mov
pushf
add
add
mov
mov
push
fwait
mov
and
shll
add
out
xorps
sbb
add
xchg
mov
pop
push
cmpsl
xchg
mov
cmp
xlat
xchg
mov
sbb
ljmp
fistpll
popa
imul
mov
push
fs
sub
fisttps
sub
mov
dec
mov
and
jmp
cmc
or
add
jbe
mov
shr
mov
mov
bound
cmpsb
lahf
addb
jge
adc
cltd
lock
stos
or
adc
nop
rolb
lods
fisttps
jns
mov
mov
jmp
pop
lods
mov
inc
pop
lret
mov
fwait
mov
mov
add
addr16
cmp
shl
mov
inc
xchg
dec
and
ffree
popl
mov
cmp
je
inc
xchg
and
mov
add
test
sub
xor
lods
js
pop
pop
pop
in
pop
movsb
lock
dec
pusha
jge
add
fs
jo
cmp
inc
imul
sub
add
jne
mov
inc
popf
test
lea
mov
and
fildl
nop
cmp
pop
div
add
add
nop
hlt
dec
dec
cwtl
fcompl
mov
roll
push
sub
rolb
arpl
sbb
push
dec
add
pusha
jmp
nop
cmp
add
push
dec
xlat
push
or
sub
aas
jle
xchg
adc
add
add
popf
xchg
stos
jmp
jge
add
and
dec
nop
mov
clc
mov
fistl
ret
out
movsb
add
cltd
cmpsl
xlat
push
jecxz
fisubrl
fs
jmp
jnp
or
mov
push
fiadds
cwtl
fsubl
pop
add
pop
mov
ljmp
loopne
inc
ret
call
lret
jle,pt
andb
push
cmp
sbb
out
add
xchg
sbb
pop
mov
xorb
ja
push
cwtl
or
xchg
add
mov
stos
jns
adc
adc
push
scas
jnp
int3
cwtl
loopne
add
jmp
jo
sbb
pop
xchg
gs
inc
cmp
push
pop
dec
lret
shrb
roll
mov
subb
jl
mov
or
pop
rorl
imul
push
lods
lock
addr16
leave
sbb
or
adc
push
daa
enter
aad
sub
int3
adc
pop
in
inc
fnstsw
add
sbb
negb
ja
add
push
adc
push
lcall
cs
sbb
imul
test
stos
add
push
cmp
js
clc
hlt
dec
insl
nop
add
push
mov
or
sub
loope
add
aas
fcomps
push
adc
or
pushf
fistps
mov
push
aad
cmp
insb
in
adc
lds
repnz
sbb
pop
sahf
cmp
loopne
push
cmp
add
addb
xchg
jmp
mov
cmp
incb
insb
fsubl
hlt
addl
lahf
inc
aad
jo
popl
div
test
jecxz
xchg
leave
add
stc
mov
popa
mov
adc
xchg
dec
xchg
add
dec
notb
xchg
mov
pop
or
testl
aam
pop
add
in
test
or
int3
fisttpll
fmul
and
mov
pop
pusha
push
addb
mov
dec
cs
and
or
shl
pop
xlat
fldt
pushf
jnp
xor
add
mov
dec
mov
sub
xadd
repnz
int
and
cli
jns
add
pop
repz
notb
jg
push
add
in
xchg
sbb
add
aaa
loopew
jecxz
sub
mov
aas
pop
push
test
xor
xchg
lock
pop
stos
fists
rol
adc
daa
mov
or
pop
jne
mov
sub
add
out
pop
jb
add
push
test
sbb
lock
mov
jle
lahf
gs
mov
jg
jp
jl
sub
add
adc
jp
cs
negl
les
cmpb
ret
add
call
leave
mov
add
jne
in
mov
add
sub
add
rcl
add
pushf
in
bound
mov
jecxz
rolb
dec
xor
out
add
or
inc
cmp
pop
or
sbb
inc
rcrb
cmp
push
mov
xchg
popf
lds
pushf
mov
cltd
in
sbb
xchg
fsubs
lock
and
dec
add
jle
xor
mov
inc
push
push
inc
mov
aas
xchg
xchg
loopne
xor
arpl
cmp
das
aaa
clc
push
add
ljmp
dec
int
mov
dec
add
fwait
sub
add
xor
lret
cmpl
sti
mov
stos
pop
in
cltd
add
push
movsl
repnz
or
in
xchg
adc
and
in
addb
push
dec
xor
pop
mov
rorb
out
ja
mov
add
les
test
int3
lahf
jne
sub
inc
mov
loope
jl
loopne
mul
insl
add
cmp
andb
movl
adc
call
aaa
nop
pop
movsl
clc
xchg
jb
add
add
rol
jnp
scas
mov
inc
push
add
les
dec
jno
push
add
cmpsl
add
xchg
pop
jp
lcall
incb
int3
mov
inc
cwtl
jb
cmpsl
out
push
dec
lods
jnp
or
sbbb
test
sub
push
cmp
scas
fsub
and
sbb
cmp
add
fisttpll
mov
jle
aam
adc
notl
xor
cmp
push
nop
orb
add
jecxz
mov
inc
xchg
outsb
out
and
or
push
testb
imul
add
mov
pusha
je
dec
mov
add
std
lock
lods
mov
rolb
xor
add
repnz
add
insl
cwtl
jle
in
xchg
pop
shr
cmp
shlb
or
mov
inc
into
pop
cwtl
cld
pusha
cmp
movsl
and
push
push
push
add
es
shlb
fwait
cmovb
add
or
inc
daa
add
add
xor
adc
imul
mov
invd
adc
outsb
xchg
ds
mov
fdiv
mov
rcll
xchg
sbb
sti
jae
mov
push
jmp
xor
lods
jns
ljmp
add
xchg
fucomip
sbb
jg
lods
push
push
bnd
mov
nop
adcb
insb
pop
and
int
hlt
ds
push
mov
das
aad
jle
dec
or
add
push
add
inc
fdivrl
adc
jo
sub
outsb
ror
add
scas
mov
and
insb
mov
jp
pop
lret
add
mov
aaa
push
arpl
push
jp
pop
add
add
lcall
add
xor
in
sbb
adc
inc
pop
inc
xchg
test
icebp
add
fs
sub
mov
push
nop
bound
adc
add
adc
sbb
inc
pop
jbe
sbb
xchg
test
stc
or
cltd
jg
lea
sahf
int
sbb
dec
inc
loope
adc
add
movsb
hlt
push
enter
pop
cmpsb
aam
cmp
push
and
add
xchg
and
repnz
scas
jmp
add
je
add
add
aas
sub
out
add
pop
push
bound
add
mov
xor
add
pop
or
push
outsl
add
aad
sub
add
ds
add
aas
xor
mov
cwtl
mov
lea
lods
cmp
xor
test
mov
fnstcw
imul
sub
pop
in
add
inc
jno
inc
add
pushf
aaa
or
cmpb
cld
loope
fisubs
fstpt
and
fiaddl
hlt
jp
jno
repz
ret
pop
xchg
ljmp
mov
stc
leave
je
call
lahf
test
push
xchg
shlb
cmp
ret
inc
push
js
and
xor
jmp
cltd
add
lods
jmp
sub
fimull
or
inc
imul
imul
mov
add
out
cmpb
add
dec
je
testl
xchg
jmp
push
adc
and
je
add
sbb
jecxz
adc
push
mov
lock
xor
pop
add
aaa
adc
stos
inc
ss
gs
shl
nop
add
xchg
push
push
mov
out
sub
pop
add
inc
push
pop
inc
add
mov
xchg
xor
addr16
add
mov
mov
add
das
mov
cmpsl
mov
je
jno
jge
add
shrl
add
mov
aaa
mov
pop
pop
shlb
lret
dec
enter
mov
inc
shlb
add
stos
sbb
push
lret
fidivrs
jmp
scas
cmpb
cmc
fwait
xor
stc
test
mov
add
fbld
testb
add
jbe
cmp
loop
add
mov
gs
jecxz
jp
add
push
sbbb
ljmp
add
or
cmc
add
fldl
push
mov
cmp
and
dec
cmp
testb
sti
and
or
jp
add
repnz
fwait
add
push
and
arpl
int3
mov
push
aaa
add
fnstcw
or
pop
popf
mov
dec
add
xchg
push
leave
insb
push
dec
add
jl
mov
fdivrs
jne
xchg
pop
and
flds
sub
mov
mov
cltd
int
add
les
sub
icebp
enter
sti
bound
lock
mov
sarl
sub
add
enter
out
movsb
add
jb
out
in
into
add
mov
jg
dec
jo
js
outsl
dec
mov
rol
and
in
mov
mov
daa
pop
and
add
xor
sbb
inc
xchg
jb
insl
cmovne
lret
dec
inc
fdivs
icebp
and
jb
sarl
adc
inc
lds
setp
je
fstpt
mov
dec
cli
pop
add
cmpsb
scas
pop
lods
inc
pusha
and
xor
xor
in
call
mov
stos
ret
test
cmp
dec
addr16
pop
jae
adc
jns
add
jno
popa
lcall
cmp
inc
add
push
flds
xor
test
bound
and
pop
jecxz
mov
ret
adc
cld
shl
dec
push
add
lret
jns
insb
lret
ds
hlt
add
lock
fildll
mov
dec
pop
add
cltd
and
add
pop
repnz
xor
pop
nop
dec
pop
call
xlat
sub
pop
or
call
mov
add
push
imul
sub
jb
inc
add
mov
add
insb
add
lock
fwait
repnz
and
inc
mov
mov
jp
insb
nop
pop
or
xchg
pop
in
sub
bound
loope
xor
enter
add
lds
roll
int3
movsb
mov
mov
icebp
cmp
xchg
add
mov
imul
pop
loopne
pop
hlt
in
cmp
adc
test
icebp
xlat
test
add
mov
das
repnz
ret
cld
pushf
cmp
ret
cmp
add
mov
mov
dec
rcll
shrl
dec
enter
add
dec
xor
in
in
add
mov
jns
movsb
cmp
add
sbb
push
xor
add
out
std
xchg
xor
add
fcomps
or
data16
sbb
cmp
and
aam
lods
add
sub
xor
xchg
icebp
pop
add
mov
jb
sub
pop
dec
das
inc
add
dec
ljmp
mov
aas
jae
cmpb
arpl
sub
add
les
nop
sbb
call
cmp
and
xor
inc
cmp
adc
add
sbb
insl
add
aaa
stos
push
pushf
jo
xor
mov
pusha
call
ficomps
inc
arpl
mov
mov
addl
shl
add
sbb
push
pop
add
jnp
dec
lea
add
pop
pop
popf
jle
stc
cmp
cwtl
adcb
push
lret
lods
inc
cli
jnp
pusha
sub
out
jl
jne
add
mov
shl
jb
nop
add
ljmp
leave
and
shrb
mov
ret
jg
loopne
inc
cmp
sbb
das
push
pop
add
pushf
pusha
leave
stc
pop
pop
dec
sub
in
ret
jle
fnstcw
push
in
sahf
mov
mov
cmp
movsl
mov
mov
push
mov
jl
rcrl
inc
push
pop
jb
add
pop
pop
xchg
test
pop
pushf
add
lds
cmp
push
sahf
lods
cmp
add
add
add
jb
cwtl
jns
xlat
mov
ret
push
rcll
add
push
rorb
movsb
or
adc
add
in
mov
add
pop
iret
aas
jp
pop
hlt
inc
add
sbb
inc
into
mov
mov
push
push
fldenv
cwtl
sub
or
data16
dec
in
add
insl
cmc
or
add
cmp
mov
arpl
sbb
shlb
sbb
mov
sbb
add
and
test
xchg
mov
fs
add
pop
cmp
lcall
pslld
loopne
pusha
add
adc
or
inc
mov
addb
and
or
ret
jae
xchg
out
add
xchg
add
add
div
fwait
aaa
lret
add
insl
cmp
loopne
loopne
mov
jnp
aaa
add
pushf
xor
outsb
add
inc
xor
sbb
repnz
fs
leave
test
sarl
lods
ljmp
add
mov
inc
dec
cltd
lahf
xchg
lret
out
mov
or
sbb
push
inc
inc
movsb
lea
incb
in
cmc
pop
pusha
xchg
jp
mov
aas
out
push
sbb
sbb
xor
gs
aas
test
sbb
cmp
lods
xchg
int3
sub
add
aad
xchg
xchg
js
lcall
daa
les
lock
push
mov
xor
adc
push
fsqrt
dec
clc
and
cmp
pop
ds
xchg
push
adc
in
leave
add
fiaddl
mull
call
movsl
rorb
aad
inc
out
dec
push
mov
pop
add
cli
add
jle
iret
mov
stc
add
in
sahf
sub
insl
out
push
and
lods
fistpll
imulb
xorb
fisttpl
mov
dec
sbb
mov
pop
adc
dec
xchg
lods
add
repnz
add
stc
pop
push
pop
cmp
sbb
notl
lcall
adc
or
adc
mov
add
es
add
pop
pop
add
lret
rorl
fwait
add
movq
fcomps
mov
iret
popa
xor
jo
int
test
mov
leave
pop
sahf
out
dec
nop
out
add
sbb
loopne
jp
jl
cmp
xchg
aad
fstpt
xor
and
inc
adc
add
sub
push
mov
add
push
lahf
cmp
dec
or
jge
mov
add
pop
adc
jne
or
lock
adc
sarb
ror
jmp
or
cs
pop
cwtl
sbb
jmp
add
nop
aad
mov
jnp
mov
clc
add
sbbb
adc
mov
xorb
pop
subl
dec
pop
pop
xchg
add
bound
aaa
inc
clc
popf
or
inc
adc
jle
lcall
inc
bound
dec
ja
mov
aaa
fisttps
jmp
loop
dec
imul
iret
push
rcr
out
push
stos
nop
or
movsb
scas
xor
push
pushf
cmpsb
xchg
cmp
cmpl
scas
sldt
cmpsl
mov
fsts
push
jne
cmp
mov
stos
xchg
fs
insl
adc
pop
ljmp
sbb
push
or
in
imul
or
and
js
jmp
add
push
popa
test
jne
aam
pop
lds
add
mov
xchg
decb
outsb
fwait
mov
jle
lcall
ljmp
xor
cwtl
daa
lods
xchg
jle
add
xchg
pusha
inc
adc
add
ret
xor
xchg
pusha
adc
addb
sbbl
add
mov
mov
cld
aaa
inc
cmp
dec
scas
inc
or
out
outsb
add
sarl
add
in
adcb
cmpsb
aas
in
add
cmp
mov
pop
sbb
es
call
into
adc
add
aas
push
cmp
test
push
jl,pn
pusha
sti
hlt
leave
add
xchg
add
pop
pop
daa
stc
pop
movl
and
adc
push
cld
lret
loopne
dec
mov
mov
add
shlb
add
xchg
popa
fwait
rorl
insl
or
xchg
mov
jnp
add
andb
add
inc
cli
shl
and
ss
fadd
jecxz
std
sub
lret
or
mov
in
push
push
in
lds
int3
iret
inc
add
add
and
outsl
arpl
sarb
sub
add
push
sbb
add
ret
add
push
into
mov
stos
leave
push
and
push
or
loopw
bound
pushf
les
into
pop
and
call
xor
add
aad
pop
imul
mov
lods
and
jecxz
xor
or
pop
add
loope
setnp
push
popf
iret
in
scas
test
jg
fdiv
or
sahf
testl
loopne
jmp
pop
addl
into
inc
cwtl
mov
adc
push
or
out
mov
pop
sar
fiadds
cmp
in
xchg
pop
insb
add
fucomip
lods
inc
mov
into
add
sub
pop
add
dec
int3
aam
out
shll
pop
lahf
xchg
mov
sub
pop
add
pop
jae
push
ret
adc
orl
movhps
xor
add
outsl
jo
add
add
in
sti
cs
cmp
xorb
and
pop
mov
xchg
push
add
into
fisttps
mov
andb
rclb
push
aam
leave
rclb
pusha
pop
mov
inc
dec
rcl
inc
push
add
adc
test
inc
cmpsb
rolb
pop
insl
pop
in
cwtl
aaa
dec
rcrl
cmp
jo
add
repz
add
imul
test
pop
push
dec
icebp
ror
sub
mov
cmp
loopne
add
repnz
or
sub
pusha
adc
pusha
pop
popw
inc
or
or
mov
incl
mov
pop
add
jnp
xchg
aad
add
or
insl
sbb
add
pusha
jb
mov
lcall
popf
je
aaa
mov
int
add
addr16
aaa
add
sbb
add
push
inc
mov
mov
sbbl
into
addr16
pushf
mov
xor
jecxz
inc
xchg
dec
add
stos
pop
dec
add
mov
xchg
dec
dec
mov
repnz
repz
mov
xor
cmp
fidivs
data16
mov
push
ljmp
and
cmpsb
iret
andb
mov
rolb
flds
cmp
cmp
lret
lock
mov
outsb
or
sbb
cmp
lock
add
sub
add
mov
jmp
hlt
mov
or
dec
fdivrs
push
inc
cltd
mov
pushf
test
sahf
push
adc
cmp
fldcw
call
xor
adc
dec
xchg
add
jo
divb
movsl
outsl
add
sub
add
insl
adc
push
dec
arpl
add
out
inc
icebp
std
fstl
int3
sbb
movsb
mov
push
gs
add
rol
into
sahf
jmp
lcall
push
add
and
dec
push
shl
add
cmp
jg
je
add
push
lods
stos
int3
xchg
es
call
aas
dec
and
outsb
cmp
sbb
inc
rolb
mov
bswap
add
je
mov
jnp
lods
mov
add
int3
cmp
add
sub
pop
ljmp
sbb
loopne
add
xchg
cmp
mov
add
push
icebp
ffreep
inc
add
mov
test
test
pop
mov
or
add
loope
clc
add
sub
jl
mov
add
xchg
test
push
out
mov
xchg
das
push
xchg
data16
sbb
or
movnti
mov
fistl
sbb
cmp
mov
arpl
xor
add
sbb
or
sub
das
sub
add
xor
insb
mov
mov
cmp
sbb
daa
pop
jnp
arpl
sbb
xchg
add
or
xchg
jge
cmp
fnstsw
adc
call
inc
xorl
mov
lds
mov
fldt
inc
inc
mov
add
lods
aam
add
enter
cmp
mov
mov
fsubrp
rcrb
push
dec
xorl
lret
mov
push
daa
aad
inc
add
mov
sti
or
rolb
xchg
jl
loope
mov
cltd
xchg
test
sub
adc
and
imul
stos
movsl
aas
and
dec
loop
js
push
popa
inc
sbb
divb
rolb
lock
mov
addl
loopne
add
cmpsl
das
add
clc
fildl
push
mov
ss
sbb
mov
inc
imul
ljmp
adc
jno
cld
negl
test
adc
adc
scas
fadds
aas
add
orl
jmp
aas
rolb
mov
jb
mov
add
dec
cwtl
cmp
sub
and
mulb
xor
add
inc
dec
lods
add
add
cwtl
outsb
shll
roll
mov
xchg
roll
fdivs
data16
loopne
sub
sahf
sub
shll
and
rcll
or
imul
jge
fsubrl
inc
cmp
push
montmul
cmpsb
inc
add
inc
rcll
fiadds
pop
mov
in
adc
adc
mov
pop
lock
cmp
add
repnz
mov
add
imul
push
daa
dec
int
xchg
cmp
jge
xlat
pop
xor
sub
out
loopne
jnp
add
stos
in
ret
loopne
pop
test
inc
dec
adcb
push
pop
das
shrb
clc
push
movsb
cmp
arpl
aas
inc
xchg
add
cmovns
mov
jnp
stos
cmpsb
xor
mov
add
or
call
push
jae
test
xor
inc
scas
adc
mov
xchg
sub
jne
lock
add
int
cmp
repz
add
xor
leave
sub
sar
dec
add
xor
cmp
jns
insb
call
leave
repz
mov
pop
adc
sub
pop
mov
push
mov
mov
dec
cs
incb
cli
xor
leave
add
insl
loopne
sbb
mov
sbb
loopne
jne
add
ss
faddp
pushf
cld
into
jg
mov
loope
dec
popf
arpl
movl
frstor
push
xchg
pop
pop
fs
aaa
mov
sub
nop
popa
iret
sub
or
mov
jmp
aas
mov
xlat
add
adc
inc
js
ret
cli
scas
add
push
jo
add
pop
or
cmovno
sti
call
repz
sarb
add
pop
lods
xchg
mov
test
iret
ja
xchg
mov
cmp
pop
or
add
jb
push
and
inc
jne
lock
cli
add
pop
mov
aam
clc
stos
repz
push
pushl
ljmp
pop
je
rorl
sub
and
cltd
add
fwait
lahf
dec
enter
dec
mov
ret
add
cmp
pop
jo
pop
shl
mov
arpl
outsl
cwtl
ljmp
out
xchg
and
out
cmp
roll
ljmp
jecxz
mov
cmp
mov
repnz
movsb
lods
dec
add
jnp
test
fidivl
add
idivl
xor
pop
dec
mov
xchg
mov
mov
mov
les
adc
or
sbbb
int
nop
lldt
xchg
mov
ljmp
adc
std
jle
push
pop
pushf
add
pop
loopne
xchg
sti
dec
jmp
popf
mov
in
add
pop
cmc
mov
faddp
out
push
adcb
fwait
add
scas
sub
aaa
pushf
andl
call
xchg
incl
movsb
fwait
icebp
mov
lret
pop
repnz
add
lahf
popa
pop
dec
aas
add
jae
inc
xor
or
sahf
and
mov
dec
pop
inc
mov
add
push
mov
stc
lcall
lods
test
sub
cmpsl
cmp
xor
imul
jae
xchg
mov
pop
xchg
push
xor
insl
rcll
mov
mov
cmp
lock
loop
dec
pop
inc
sbb
ret
call
in
jp
shrb
sub
faddl
scas
icebp
scas
and
call
lret
lahf
aad
pop
sete
add
mov
push
or
lods
ficoml
cmpsb
out
adc
xor
push
mov
add
mov
xorb
jl
addr16
lahf
mov
nop
pusha
push
fmul
pop
icebp
and
add
mov
sub
jbe
addb
mov
hlt
dec
cmp
test
mov
add
sbb
loope
sbb
out
sub
and
int3
cmpsb
jmp
push
out
adc
mov
mov
repnz
adc
pop
aam
out
xor
xor
jno
hlt
sub
test
or
dec
test
inc
add
repnz
dec
lods
std
movsl
frstor
into
adc
push
cs
lods
add
jo
adc
mov
mov
enter
adc
inc
aad
stos
xchg
add
subl
nop
sbb
lret
les
loop
insl
mov
std
stc
and
or
add
add
inc
cli
push
add
test
adc
mov
add
iret
xor
jmp
xchg
jo
push
inc
in
inc
mov
jb
add
dec
shrb
hlt
inc
insb
xor
mov
xchg
mov
je
fimuls
scas
jnp
add
mov
mov
aas
lea
dec
fcmovb
mov
add
cmc
sarl
fbld
jnp
or
sti
pop
cwtl
pop
sbb
and
inc
mov
out
add
mov
repnz
push
in
cli
xchg
loopne
sbb
sub
jl
jno
sti
cld
inc
stc
das
in
rorb
add
into
rclb
clc
mov
add
mov
or
in
rcl
add
je
cmpsl
add
cmp
fldcw
fwait
movsl
cmp
cltd
pop
aam
stos
aas
push
mov
cmp
push
mov
adc
es
and
loopne
mov
aad
jge
xchg
add
cmp
push
negl
xor
cmp
pusha
xchg
pop
lret
popa
mov
push
add
mov
cld
mov
aam
add
mull
loopne
xchg
shrb
add
inc
ds
cld
jnp
int
push
sbb
push
mov
pusha
jmp
shlb
repz
test
pushf
icebp
divl
js
pop
jge
in
xor
mov
mov
lods
fadds
std
add
shlb
call
jne
or
push
sbbl
scas
xor
inc
jl
cmp
rolb
sub
mov
add
arpl
jo
add
lock
lea
punpckhdq
mov
cmp
pushl
add
fimull
jecxz
stos
cmp
out
lret
mov
ret
or
nop
inc
das
shll
push
inc
or
push
push
pop
mov
gs
bound
dec
loop
inc
mov
adc
ja
stc
lods
aam
xor
cmp
jno
or
and
cltd
add
hlt
mov
sbb
add
out
inc
repnz
xorb
nop
jb
add
push
in
or
outsb
into
add
mov
mov
push
ss
xor
xor
add
add
cmc
and
push
out
out
mov
push
dec
mov
dec
imul
push
out
fsubr
aam
sbb
or
add
mov
sub
push
add
xchg
sub
inc
add
push
jb
mov
loopne
jns
add
or
filds
cmp
xchg
movsl
add
add
sub
or
paddsw
mov
add
cmp
sub
lret
andb
pop
push
mov
lcall
loopne
call
mov
icebp
add
daa
sbb
loopne
inc
jo
pusha
icebp
and
mov
adc
mov
outsb
int3
scas
dec
xchg
push
add
cmc
sbb
mov
vpunpckhwd
out
ss
cwtl
out
pop
rorl
sub
repnz
adc
test
or
je
fcompl
mov
dec
scas
pop
dec
xor
mov
sub
stos
aas
test
popa
add
pushf
adc
dec
sahf
nop
or
incb
jp
xchg
fs
insb
cltd
or
call
sub
and
push
sbbl
ret
das
pusha
push
and
push
loopne
xchg
addr16
jno
add
xchg
add
cld
cmpsl
mov
lock
add
adc
je
notl
mov
push
xchg
pop
data16
cmp
dec
add
mov
jmp
inc
xlat
ret
pusha
jnp
inc
nop
mov
arpl
sbbb
or
mov
loopne
jo
push
dec
shll
push
repz
adc
movsl
add
and
ficompl
pop
das
pop
inc
insl
xor
or
in
push
imul
add
push
test
add
jo
add
movsb
mull
lock
adc
pop
inc
xor
add
sbb
mov
sub
imulb
mov
mov
or
push
pop
imul
gs
arpl
out
adc
jae
add
jmp
popf
jp
scas
add
pop
je
push
xchg
mov
test
and
mov
js
cltd
cmp
test
test
lahf
subb
mov
das
inc
jle
sub
xchg
mov
jge
shl
int
add
loopne
fcmovnb
shlb
add
and
inc
mov
sahf
or
mov
in
cmp
test
dec
subb
xor
outsb
jmp
fimull
ror
cmp
dec
pop
jecxz
movsl
add
xchg
icebp
out
pop
fcoms
les
out
mov
add
aaa
clc
in
cmpsl
fildl
adc
xchg
and
int3
push
jcxz
mov
adc
xor
pop
sub
jmp
xchg
push
mov
out
xchg
add
stc
and
or
repnz
bound
nop
adc
loopne
test
dec
stos
adc
add
shrl
gs
ss
aaa
xor
sti
jmp
mov
sub
rcll
mov
add
fidivs
add
cld
xorl
mov
sub
jne
add
rcrl
movsb
and
shlb
sbb
dec
stos
movsb
add
flds
jmp
cmp
repnz
adc
stos
nop
shr
mov
push
mov
add
and
repnz
xor
das
int
push
xlat
sbb
movsb
in
fcomps
cmpsb
stos
dec
jnp
lock
test
sbb
rol
cmp
xchg
mov
dec
add
loopne
icebp
xchg
rolb
lret
mov
or
rcl
mov
imul
pop
add
or
push
lret
mov
mov
dec
jecxz
or
add
out
into
add
jmp
lods
sti
enter
dec
in
lcall
fdiv
or
rol
dec
into
add
push
leave
lret
sub
sub
cli
insb
add
cmpsb
shrl
adc
jbe
cmc
in
add
add
and
and
loopne
or
fiadds
xor
je
addb
adc
lods
xor
push
pop
andb
cltd
add
jbe
inc
lods
fcompl
mov
xor
xchg
and
and
insl
add
cmc
sub
sbb
and
adc
pop
lret
jnp
or
inc
pop
call
rorl
inc
ljmp
inc
cs
mov
add
add
pop
in
mov
adc
jecxz
xor
pop
imul
inc
pop
add
out
add
movsb
jb
xchg
loopne
sub
add
stos
movsl
ss
and
inc
pop
xor
addr16
shll
outsl
int3
fdivrs
xchg
add
inc
test
pop
mov
sbbb
lea
divps
push
push
shlb
or
add
sbbl
das
mov
jge
cwtl
ret
dec
mov
mov
add
inc
imul
mov
push
rolb
loope
and
in
int
and
pushf
sbb
pop
imul
stc
or
mov
xor
mov
add
mov
stos
jo
inc
cmp
sub
add
sbb
fwait
shlb
stos
test
push
jp
rol
sti
popf
push
out
js
mov
test
shr
incb
arpl
push
lods
aad
mov
in
add
in
or
cmc
divl
add
mov
jmp
mov
dec
mov
sub
add
inc
pop
xchg
push
add
cmp
pop
add
das
or
xor
iret
add
mov
pminsw
js
mov
in
xor
mov
test
cmpl
aad
dec
nop
loope
mov
fcomps
add
shlb
flds
add
pusha
int3
add
out
psllw
add
in
sbb
inc
pusha
stos
cwtl
decl
pop
ret
popf
cmpb
movsw
add
out
xchg
ja
dec
inc
pop
add
aas
xchg
pop
xor
or
jge
lret
sub
sbb
fisttpl
out
popf
pop
test
add
inc
cmpsl
push
fsubrl
inc
cwtl
sahf
cmpl
or
or
jp
sbb
ja
lods
fidivrs
mov
inc
sub
dec
mov
fbstp
add
or
mov
add
xor
cmp
lahf
addb
sbbb
pop
imul
mov
mov
add
pop
xor
inc
add
pushf
cmpl
or
movsb
sub
fcoml
addb
push
loope
xor
xchg
loopne
leave
repz
adc
push
idivl
lret
add
xor
into
add
jnp
arpl
enter
dec
int3
push
pushf
popa
dec
jo
pop
add
into
lret
aas
add
push
dec
loopne
or
add
lods
pop
push
mov
lahf
sbbl
int
movsb
pop
mov
ficompl
aaa
sub
rolb
cmpsb
mov
inc
icebp
and
pusha
add
adc
popa
rcrb
add
and
add
mov
pusha
in
stc
add
jmp
mov
dec
scas
movsl
jbe
cld
add
or
das
imul
xchg
sbb
xchg
repnz
mov
mov
adc
sbb
pusha
inc
and
aaa
rclb
rolb
test
mov
xorb
aad
xchg
pop
add
lahf
cmp
out
daa
push
fnsave
fiaddl
mov
mov
xor
je
jg
add
adc
pop
and
mov
push
xchg
xchg
cmp
xor
xchg
mov
add
dec
push
rcll
cmc
dec
jne
out
and
cmp
push
cmp
sbb
jae
jp
add
jb
in
out
or
adc
fists
pop
xchg
push
add
ret
mov
cmp
xchg
push
decb
repz
int3
ret
push
rorl
mov
mov
dec
add
pusha
int
imul
rolb
shrl
std
movsb
mov
imul
push
fcomps
jo
mov
add
call
jnp
cmp
mov
dec
lcall
mov
add
mov
add
into
imull
scas
mov
push
cwtl
testb
test
add
and
jns
and
cmp
pop
add
add
add
and
pop
or
xchg
dec
dec
insb
aad
sbb
faddl
mov
push
jo
cmp
mov
mov
or
inc
in
cmpb
or
push
scas
and
stos
pop
jg
mov
bound
or
cmp
jo
pop
mov
inc
popa
xchg
fsubl
push
pop
adc
inc
push
movsb
andl
and
ljmp
inc
cli
mov
das
imul
mov
aam
inc
mov
mov
test
movzwl
je
add
popf
jae
add
mov
rolb
add
jnp
mov
mov
pop
or
enter
pushf
jp
add
cmp
enter
mov
pusha
pop
lcall
call
mov
xor
adc
xor
ss
add
cmpsb
xor
add
mov
shl
shr
cmp
ffreep
push
shll
xlat
add
cmpsl
das
movb
push
dec
out
inc
mov
lahf
subb
push
add
dec
mov
mov
dec
adc
ljmp
rcrb
inc
cmp
iret
and
call
xchg
xlat
inc
sarb
jo
pop
push
lock
sub
fsubrp
out
xlat
addb
inc
mov
inc
add
mov
popf
or
scas
cmpl
add
pop
mov
in
adc
cmpsl
sbb
mov
mov
push
pop
pop
xchg
jo
bound
mov
arpl
pop
testl
adc
add
cmc
js
mov
jo
jno
add
das
add
incl
mulb
adc
scas
add
lret
jp
cwtl
ret
mov
or
mov
push
mov
mov
sarb
pop
cmpb
or
sbb
inc
add
out
pop
imul
add
clc
and
jge
in
add
shr
int
add
jne
push
sbbb
cld
lods
mov
adc
jno
ss
mov
xor
pushf
inc
pop
push
mul
add
mov
jle
rorb
sub
pop
add
repnz
mov
das
add
jle
loopne
rolb
js
popa
and
mov
jp
insb
idivb
jnp
push
lcall
int3
adc
and
dec
popf
in
mov
sub
push
inc
xchg
cmpsl
jns
push
add
or
stc
add
jbe
iret
jno
fcmovnu
cmp
fistps
sub
cli
lahf
pop
out
adc
xchg
insl
lds
std
out
loopne
inc
outsl
add
xchg
testl
xor
out
insl
jns
mov
in
or
shll
push
sbb
xorb
test
cld
add
lea
clc
inc
lock
sub
sbb
push
aam
adc
mov
lret
or
fcmove
lcall
mov
add
fcomp
add
test
nop
push
add
sarl
ds
pushf
or
cwtl
or
loopne
mov
dec
inc
cmp
cwtl
pop
scas
mov
call
lea
add
or
jae
add
call
sbb
lock
sbb
adc
sti
and
les
ja
mov
mov
push
mov
inc
xchg
xchg
mov
add
lret
loope
clc
lea
movsl
insl
icebp
clc
xchg
or
fmull
add
fldl
or
outsl
xchg
js
bound
push
cld
push
repnz
mov
mov
lret
jmp
xchg
lods
out
mov
add
mov
mov
les
and
aas
dec
ja
rsqrtps
add
and
cmp
lds
dec
xor
lea
shlb
xchg
push
das
mov
cmc
mov
pusha
in
jbe
xchg
pop
add
pop
push
add
add
roll
cld
lahf
mov
mov
jb
add
add
loop
xor
lock
sub
imul
mov
inc
xor
adc
js
sbb
popa
call
out
cmp
or
xor
push
jmp
stos
fdivrs
rorb
add
push
aam
push
int3
fwait
adc
roll
mov
xor
add
push
add
add
inc
pop
rolb
dec
sbb
data16
or
in
ds
jo
roll
xor
xchg
outsb
dec
add
imul
mov
sbb
mov
sbb
push
inc
cs
out
cmpsl
movsb
and
pop
pop
pop
lahf
jl
popl
mov
pushf
hlt
jle
cmp
subb
fbld
stos
xorb
push
add
sbb
add
xchg
pop
ds
cmp
cld
jecxz
dec
sub
pop
cwtl
jle
adc
test
add
div
test
sti
mov
mov
add
mov
stos
mov
fsubl
repnz
xor
add
cmp
rcrl
add
inc
test
cmpb
push
fcomps
fbld
and
lods
cmp
jo
test
sub
dec
test
adc
push
mov
stc
cli
push
rolb
add
mov
add
mov
xchg
jo
loopne
xor
cltd
test
test
jmp
lock
ja
sbb
cli
fstps
stos
and
push
sbbb
mov
div
pushf
mov
cmpsl
mov
mov
sbb
jbe
sub
test
add
adcb
add
fwait
out
jno
pop
sti
test
loope
inc
dec
and
sbb
iret
sbb
xor
or
dec
add
loopne
sbb
xchg
mov
rorb
xchg
jmp
and
mov
fnstcw
mov
sub
call
sarl
jl
loopne
xor
dec
movsb
adc
dec
pop
inc
xchg
push
mov
and
mov
fstpt
movsb
mov
add
mov
stos
icebp
and
adc
sbb
add
ss
and
sarb
fldcw
fldt
inc
fsubrl
lcall
fsubp
xlat
enter
sub
data16
xor
jnp
sbb
loop
shl
cmp
imul
push
mov
sub
cltd
fsub
mov
adc
push
dec
add
testl
movsb
sub
imul
mov
xchg
adc
and
mov
add
pop
into
xchg
inc
std
pushf
andb
or
aas
or
je
in
add
xchg
and
sbb
addl
push
pop
andl
stos
in
cmp
sub
gs
add
push
in
daa
xor
mov
xor
xor
pop
add
inc
lock
add
data16
js
xchg
rcpps
xor
xchg
push
mov
in
adc
pop
xchg
add
daa
cltd
shl
ss
jl
clc
jp
imul
jns
shrb
cs
push
mov
dec
xchg
cltd
mov
ljmp
or
lcall
mov
daa
ljmp
add
pop
dec
sbb
xchg
imul
inc
insb
push
mov
xchg
loop
sbb
mov
sbbl
cmp
mov
jle
xor
fwait
mov
pop
or
test
stos
push
mov
dec
push
add
mov
add
pushf
dec
mov
add
xor
or
cmp
call
mov
insl
and
inc
and
cli
pop
std
gs
lret
mov
shrl
cmp
add
frstor
add
fisubrs
add
popf
stc
daa
in
aam
lock
adc
jmp
push
jo
out
test
sbb
push
sbb
icebp
das
inc
jno
movsb
mov
add
mov
das
fbld
aam
pop
aad
add
sarl
test
shll
sub
sub
mov
sub
cmpsb
in
add
vpcmpgtw
cmpb
mov
dec
mov
add
cs
not
add
xchg
ret
add
subb
popa
lahf
enter
fadds
std
xorb
add
mov
push
and
lret
inc
and
mov
mov
aaa
test
mov
bswap
test
sbb
jecxz
add
fwait
cmp
mov
add
cmpsb
out
pop
pop
adc
sbb
repz
fsubrs
stos
cwtl
add
cmp
cmp
insl
xchg
mov
mov
mov
push
mov
scas
push
add
lcall
sahf
mov
xchg
call
arpl
add
or
sub
xlat
dec
cli
xorb
inc
xor
pop
cmp
dec
cwtl
shl
aas
stos
and
add
mov
push
ljmp
lods
pop
imul
jg
loopne
cwtl
or
mov
add
sub
scas
dec
add
daa
lcall
adc
repz
lea
push
dec
ds
jle
xor
subl
cmp
aaa
add
in
movl
pop
mov
cmc
xchg
mov
shlb
cwtl
popl
and
and
dec
pop
seto
inc
aam
dec
cwtl
nop
and
push
sarl
loopne
fstps
jp
js
xor
add
data16
or
add
adc
call
das
cltd
je
js
scas
and
inc
xchg
or
aad
or
mov
xor
fldl
daa
or
fcompp
add
filds
mov
cmpl
jle
negb
xchg
push
sub
popa
add
dec
ret
imul
add
push
movsb
xor
lock
lods
inc
xlat
dec
into
nop
pop
sbb
jge
clc
shll
std
clc
roll
fisttps
or
mov
add
dec
fstpl
sbbb
das
loopne
loope
div
and
out
enter
adc
imul
scas
mov
std
or
add
or
nop
inc
fadds
mov
cs
shlb
add
mov
mov
sbb
jp
fsubr
hlt
mov
ret
lahf
mov
xor
xchg
clc
add
sub
jecxz
mov
cld
pushf
xor
push
xor
cmp
shld
adc
sbb
shl
imul
mov
shrl
mov
jb
dec
mov
add
mov
push
add
xor
xor
mov
pop
add
loop
dec
xchg
adc
cld
or
negl
fcomps
imul
sub
divl
sub
sbb
clc
mov
pop
add
jae
mov
xor
pop
add
pop
push
loopne
js
mov
lods
cmp
xchg
icebp
ret
cwtl
xlat
scas
pop
add
lahf
pop
cmp
out
and
mov
sbb
add
inc
cwtl
repz
inc
repnz
add
movsl
and
sbb
cli
mov
nop
sub
movsb
fldl
in
cmp
fwait
mov
js
addr16
fsubl
sbb
repz
pop
call
add
sbb
lods
add
lods
mov
mov
pop
pop
xchg
pusha
or
test
add
fnstcw
xchg
add
movsbl
mov
fmuls
daa
xchg
fbld
pop
add
pop
test
or
js
mov
shlb
jge
add
faddl
in
add
cltd
iret
out
outsl
mov
or
xchg
mov
aam
inc
xorb
adc
cmc
jecxz
adc
std
mov
fstl
and
add
stos
mov
rorb
cmpsl
pop
inc
lods
add
adc
add
inc
mov
fadds
mov
testl
pop
ljmp
repz
add
dec
mov
and
push
test
cmp
lock
cmp
cmp
mov
adc
inc
adc
xchg
bnd
xchg
js
sbb
cmpsb
jns
sub
xor
fdivrl
xorb
into
cmp
sbb
dec
adc
mov
mov
stos
mov
or
mov
xchg
ds
xchg
xchg
dec
mov
in
loope
stc
test
xchg
push
stos
pop
or
xchg
jg
lret
jp
cltd
lock
cmp
and
mov
add
cmc
addb
xor
pop
shll
jae
jl
lods
ret
sahf
cmp
dec
add
inc
fs
push
shr
test
add
add
add
jno
aam
push
std
pop
cmc
dec
mov
fiaddl
push
xchg
rcr
dec
add
pop
jle
fisubrs
roll
push
xchg
lret
mov
add
int3
or
lcall
sbb
nop
dec
adc
lods
mov
mov
mov
shrb
add
sub
ljmp
addb
mulb
or
mov
pop
lret
push
je
add
pusha
imulb
push
roll
push
cmpsb
pushf
and
mov
xchg
add
sti
or
hlt
inc
jb
pop
push
pusha
mov
shll
dec
push
sub
rol
add
lret
jnp
push
fldenv
loop
shrb
pop
fists
int
nop
add
jle
mov
dec
adc
xor
lds
pop
jp
inc
or
test
cli
aad
pop
adc
adc
sarl
cltd
addr16
sub
aaa
ds
out
push
lret
in
hlt
cmpsb
inc
and
dec
sbb
les
test
shlb
add
jge
lods
test
and
out
cwtl
jp
aam
js
push
mov
pop
xchg
sbb
js
xchg
loopne
cmpsb
outsl
ljmp
loopne
dec
jb
test
add
fs
xchg
aam
int
imull
addr16
rcrb
lcall
push
imul
pop
mov
lock
add
int3
push
pop
mov
xor
xchg
mov
pop
mov
ror
mov
ret
jb
rcrb
and
loop
hlt
sub
inc
loopne
xchg
mov
imulb
test
rclb
xchg
xorb
xor
insb
lcall
mov
je
sbb
test
mov
lods
dec
cmpsl
add
sbb
shlb
push
cmc
inc
cmp
add
mov
jmp
ljmp
mov
pop
and
repz
and
adc
data16
loop
cmp
or
clc
rolb
testb
outsl
xor
xorb
mov
dec
cld
into
outsb
dec
inc
mov
add
push
stos
and
cmp
add
pushf
jmp
test
pop
nop
clc
xchg
test
lcall
push
add
jecxz
push
push
xchg
and
clc
jecxz
arpl
jne
aam
and
outsl
mov
in
push
mov
and
push
mov
pop
jns
loope
inc
loope
jmp
jno
shrl
jecxz
jmp
mov
js
xchg
test
mov
and
loope
mov
mov
in
int3
add
scas
cmc
xchg
or
nop
inc
loope
stos
add
shr
jo
dec
and
mov
jge
data16
sub
add
scas
dec
mov
ljmp
pop
cmpsl
aaa
mov
int
dec
push
cmp
leave
mov
xlat
or
mov
inc
mov
mov
lock
jae
mov
xchg
mov
jbe
add
pop
mov
add
dec
add
testb
sarl
xchg
add
and
int3
jmp
jae
data16
mov
jno
call
add
push
rolb
jl
add
push
or
es
add
dec
pushf
and
push
add
clc
dec
ffreep
js
xchg
jns
popa
call
or
inc
and
and
mov
xchg
jo
push
push
lahf
sbb
pushf
add
cmp
mov
mov
hlt
jp
xchg
adc
add
adc
cmp
sbb
les
fld
mov
dec
nop
add
dec
and
cmp
and
xchg
dec
jle
inc
scas
shll
cli
test
add
out
out
sbb
adc
add
mov
aad
testb
lcall
es
pop
ja
dec
push
shlb
leave
aad
mov
pop
add
ret
cmp
fnstenv
enter
dec
sarl
or
psrad
lods
mov
sub
ljmp
and
sbb
add
in
fistps
cmp
inc
add
in
test
test
add
pop
scas
add
gs
xchg
xor
stos
mov
add
sub
emms
cltd
xchg
sbb
inc
inc
pop
mov
call
or
testb
mov
and
test
int3
popf
clc
and
movsb
lret
cmp
xchg
add
push
aam
dec
add
add
dec
adc
cmpsl
lret
add
in
hlt
sahf
add
mov
testb
addl
pop
cld
loopne
inc
xor
loop
aad
mov
mov
add
std
add
mov
sti
add
or
js
cmc
add
and
xor
lret
and
add
jg
test
or
int3
lds
pop
hlt
adcb
inc
cmp
add
or
or
roll
xlat
loop
mov
jns
pop
cmp
out
jge
out
and
leave
test
in
mov
mov
xchg
popf
mov
cmp
adc
inc
std
out
sarb
xorb
mov
add
inc
mov
mov
aad
dec
push
loop
add
popf
push
xchg
pusha
xor
add
mov
out
xchg
sub
add
push
sbb
dec
dec
stc
addb
jne,pn
aas
push
dec
pop
xchg
js
add
rorb
out
add
or
jne
iret
inc
jmp
inc
add
enter
loope
and
mov
jg
jl
pusha
outsl
adc
add
nop
and
lock
nop
add
and
sub
pop
in
or
orb
jg
inc
add
jl
mov
mov
popf
mov
inc
push
aad
pop
add
or
cld
jae
fldl
sbb
test
jnp
or
sbb
xchg
pop
xchg
nop
jb
add
or
out
fiaddl
enter
or
adc
sbb
add
mov
jle
fwait
push
data16
popf
or
dec
mov
iret
inc
jae
imul
push
add
lock
sbb
aas
scas
add
add
ja
add
push
dec
lds
imul
adc
sbb
loopne
test
inc
push
gs
adc
xchg
jg
mov
jle
add
leave
sub
les
inc
or
cwtl
ret
push
outsb
add
push
test
push
add
pop
cmpb
test
xchg
adc
jno
dec
shll
xchg
into
lahf
add
addr16
ja
fsubrl
sub
stc
lock
jne
dec
popa
mov
and
ljmp
cld
scas
outsl
test
jle
mov
loopne
jge
rcrl
cmpsl
jbe
xorl
add
fs
adc
ja
add
je
and
stos
push
add
outsl
add
bound
mov
xor
sub
insb
ss
stos
in
push
add
neg
adc
mov
mov
insb
add
fwait
imul
and
gs
jns
jne
sahf
sbb
inc
adc
movl
cmpsl
fisubs
ss
lcall
or
dec
out
add
sub
adc
add
jg
add
daa
mov
jno
add
add
xchg
dec
push
xchg
or
test
das
and
mov
test
rcrb
adc
xor
in
pop
pop
add
cmp
add
ja
sub
hlt
cltd
mov
sbb
loopne
lea
adc
add
je
sub
inc
mov
add
cmp
stos
cli
dec
icebp
loopne
dec
add
mov
xlat
push
sbb
rcrb
orb
sahf
incl
lea
aaa
inc
add
adc
dec
mov
xchg
dec
data16
stc
mov
enter
cmp
inc
scas
in
add
inc
cld
mov
addb
push
sbb
add
movsl
pop
sub
in
add
jns
popf
imul
sbb
test
pop
add
xor
nop
or
fistl
xor
push
mov
push
movsb
sub
add
add
cmp
shlb
mov
add
jb
ja
add
daa
mov
bound
cmp
jge
in
and
fisubs
ljmp
add
push
jne
aad
inc
insb
movsl
lret
fwait
cmp
int3
sub
arpl
xchg
add
div
or
sub
rcll
push
mov
les
clc
add
fs
gs
xor
out
orl
out
aas
and
lock
enter
adc
sbb
cs
xor
add
push
out
fcompl
sti
repnz
inc
test
nop
std
pop
das
add
ja
mov
xchg
push
loope
mov
dec
in
cltd
add
imul
jp
push
xor
sbbb
aas
and
add
inc
push
dec
imul
pop
fst
arpl
arpl
mov
mov
add
test
dec
fdivrs
add
jns
sbb
ret
xor
testl
inc
add
or
in
sbb
rcr
insb
mov
cmp
loop
pop
lock
je
outsb
enter
int3
cmp
mov
pusha
jnp
dec
mov
aas
dec
xor
cmp
iret
dec
hlt
ja
xchg
jne
jnp
add
xor
xor
std
testb
mov
jecxz
lods
ss
jo
in
push
dec
fwait
add
neg
add
cmp
call
popa
iret
push
cwtl
les
loopne
leave
mov
inc
sti
fnstsw
cmp
dec
sahf
loopne
cltd
or
insl
xor
pop
cmc
xchg
int3
adc
rcrl
adc
xchg
inc
mov
adc
push
xchg
or
cmp
sbb
mov
adc
sbb
inc
repz
add
inc
xchg
xor
movsl
ret
mov
les
out
xchg
cli
scas
fistpl
fisttps
mov
mov
add
lods
test
or
push
dec
add
pop
mov
fcompl
inc
sbb
rcrl
flds
sbb
sbbb
rolb
push
sarb
mov
jg
pushf
sub
mov
fwait
neg
lcall
sbb
sbb
dec
dec
push
loop
jg
inc
cltd
pop
sub
mov
sahf
fsts
xchg
enter
xchg
lds
test
and
int3
jle
jnp
push
push
insb
mov
add
popl
dec
add
das
scas
nop
xchg
fmuls
or
mov
xor
push
or
pop
adc
lods
sbb
mov
mov
add
mov
add
icebp
jle
nop
stos
and
int3
fadds
sti
jne
fucom
mov
xor
mov
mov
testl
loopne
mov
psubq
scas
ja
cmp
push
test
sbb
in
and
cmp
mov
dec
hlt
mov
lods
jmp
outsb
mov
add
pop
or
xchg
and
pop
add
mov
sub
add
mov
fmuls
mov
das
loopne
je
add
pop
push
xchg
stos
mov
mov
mov
incl
arpl
and
inc
loope
in
dec
ret
lcall
test
hlt
testb
xchg
clc
cmp
add
add
sbb
or
loopne
out
les
call
push
push
mov
shlb
in
icebp
push
add
lock
js
add
jbe
pop
add
lock
es
add
xor
sbb
pop
adcl
and
test
add
pusha
pop
scas
aad
aas
push
xchg
xchg
cmpsl
scas
push
mov
dec
bound
test
push
mov
fmul
xlat
ss
mov
add
add
call
push
add
sti
in
scas
inc
push
fldcw
push
add
test
add
jg
pop
pop
sahf
add
imul
xor
jno
cmp
push
and
inc
ljmp
or
cmpsb
mov
lea
cmc
hlt
pop
push
adc
add
mov
sbb
jae
sbb
mov
dec
xchg
fdivr
adc
rcll
add
xor
inc
shlb
inc
pop
mov
imul
lods
hlt
and
dec
mov
push
mov
push
stos
adc
add
pop
lcall
mov
in
adc
add
shrb
int
add
rol
sti
sbb
and
lret
or
cmp
push
push
cmp
inc
push
mov
enter
mov
inc
cmp
fldl
ret
mov
add
dec
lea
add
jp
lahf
mov
inc
jmp
int
push
xor
jmp
pop
add
fnsave
mov
push
mov
sbb
xchg
jle
ret
test
js
add
mov
jle
add
test
cmp
jl
lret
orl
pushf
int
enter
leave
sbb
jle
push
push
lcall
leave
mov
add
inc
jno
int
filds
adc
loope
or
shll
sarb
add
dec
push
xchg
adc
mov
dec
shrd
xorb
jle
add
push
lahf
in
push
pop
inc
mov
int
lods
pop
sbb
mov
xchg
es
push
sbb
sti
cld
sbb
add
cmpb
mov
pop
add
mov
dec
jnp
nop
cmp
dec
add
bextr
jo
add
sbb
sub
pop
fadd
mov
mov
cmp
fmuls
orl
in
dec
scas
loopne
imul
push
mov
xchg
add
adc
adc
xor
push
xchg
and
xchg
inc
jae
sarb
dec
push
ss
roll
stos
cs
test
mov
lret
mov
adc
mov
in
repz
cmp
aas
pop
xchg
pop
mov
xor
adc
sub
xchg
fcoml
lods
add
std
pop
aaa
mov
mov
dec
xchg
xchg
and
sub
jmp
cwtl
fildll
sbb
stos
xchg
lcall
add
push
lret
push
mov
ljmp
inc
lds
ficoms
mov
dec
mov
addps
jae
jl
lret
sub
jecxz
inc
pop
scas
mov
adc
adc
pop
jl
cmp
inc
jnp
lcall
ret
pop
loop
stos
add
test
push
out
decl
movsl
adc
and
sti
sbb
add
add
mov
pop
es
pop
loop
lock
add
movsb
mov
mov
lods
sub
pop
fiadds
and
gs
mov
in
add
les
shll
add
xchg
push
cmpb
add
in
and
add
mov
scas
mov
decb
push
movsb
or
movsl
xor
cmp
jb
pop
loope
add
imul
pop
mov
lock
push
test
pop
and
int3
iret
or
in
dec
add
mov
aam
int3
mov
out
test
sub
iret
rcrb
cmp
int
and
add
stos
jno
pop
mov
add
dec
add
sti
cmc
add
dec
movsb
lock
push
paddusw
cmp
jecxz
ret
adc
lcall
mov
adc
mov
movsb
push
ja
pop
call
ror
add
sar
add
pop
ret
add
cmp
add
jnp
dec
sub
aas
fdivrl
loopne
pop
and
add
shr
jbe
nop
add
add
sbb
mov
fmull
or
or
leave
add
es
or
xchg
test
and
sbb
lahf
add
clc
fs
xchg
cmp
or
es
cmp
in
outsl
fnsave
add
mov
cltd
into
add
and
outsb
enter
pop
xchg
add
push
xlat
jns
lods
lods
pop
std
pop
pusha
test
or
fdivr
iret
and
push
dec
and
ss
mov
insb
clc
movsl
aad
pop
lock
movsb
sbb
pop
add
ss
pop
jno
mov
pop
iret
lds
push
aaa
mov
addb
mov
xchg
push
fisttpll
jg
pop
and
movsl
jno
popa
arpl
adc
pop
push
jl
push
sub
add
rcrb
push
jae
add
addb
stc
loop
shl
push
in
add
leave
cmp
xchg
and
jns
add
cld
rolb
add
hlt
cmpsb
popf
jp
sub
jnp
add
lcall
les
cmp
pop
xchg
ss
sub
scas
or
int
jb
ds
in
add
fadds
xor
ficoms
ja
fld
pop
and
sub
adc
imul
ficomps
rcrb
xor
scas
add
sub
or
sbb
and
xor
enter
call
jmp
ds
daa
mov
sbb
jbe
sbb
dec
loopne
jae
insl
mov
ds
pop
add
loope
inc
adc
xchg
push
subb
xchg
subl
push
sub
in
add
lods
sbb
incl
lret
mov
icebp
xor
cmp
mov
popfw
mov
lea
xor
ror
ljmp
add
sti
pop
sub
out
sbb
mov
dec
std
inc
inc
popf
hlt
add
test
jae
push
arpl
xor
add
fnsave
clc
mov
and
add
sub
add
push
stos
add
or
test
add
pop
pop
push
popf
dec
pop
sub
ja
pop
inc
fdiv
ret
cmp
add
out
push
adc
int3
dec
data16
sub
sbb
popf
add
add
push
xchg
xchg
faddl
fwait
push
jmp
mov
mov
sub
mov
push
xchg
mov
hlt
loop
jnp
add
mov
xchg
loopne
dec
sub
ret
xchg
lea
adc
xor
stc
push
jns
cmp
test
mov
js
add
jg
popa
repnz
sub
add
pop
cld
lcall
test
fsts
add
xchg
sub
pop
rorb
sub
movsb
clc
mov
pop
add
mov
jecxz
sbb
cmpsl
mov
loopne
sbb
inc
sub
add
or
pop
cmp
dec
xor
enter
jns
pop
jnp
rclb
loop
xor
shrb
mov
jle
mov
ret
es
cld
pop
fxch
sbb
gs
ror
cli
dec
int3
add
mov
add
clc
je
lds
sbb
ret
shlb
call
sub
in
pop
pop
sub
filds
cmp
lahf
ljmp
pusha
jb
dec
xchg
add
addb
sub
cld
jbe
and
push
pop
add
and
scas
push
add
and
add
sub
add
cwtl
inc
fwait
in
pop
pop
cmp
mov
jecxz
add
into
loope
xor
clc
add
push
add
loopne
mov
or
cmp
or
pop
or
lret
xchg
mov
or
dec
cmpsl
lods
adc
inc
add
or
xchg
or
mov
inc
stc
packssdw
adc
push
aas
cmp
push
pop
dec
mov
push
jg
ror
add
pop
or
jb
out
hlt
adc
jp
add
mov
mov
add
js
sbb
filds
xorb
imul
pusha
bound
mov
xchg
dec
add
enter
inc
aaa
add
popf
sub
xchg
sarb
cmp
aaa
mov
mov
test
cwtl
add
mov
jge
xlat
add
into
mov
paddq
test
jmp
mov
je
insb
stos
jle
pusha
mov
inc
xchg
xor
mov
imul
fimuls
pop
shl
rolb
nop
jae
jle
aad
add
insl
sbb
sub
nop
sub
and
cli
sbb
sub
pop
pop
push
and
ret
out
pop
xchg
shl
in
cmp
xor
clc
add
dec
sarb
add
xchg
add
sti
jae
scas
js
fildl
call
xchg
pop
push
shll
xlat
in
mov
mov
xor
pusha
lock
cmp
add
daa
pop
mov
add
imul
dec
les
out
add
dec
sbb
push
mov
xchg
mov
mov
test
in
mov
cmpb
pop
call
stos
add
fstpl
push
sbb
inc
cmp
mov
sbb
cli
popf
cltd
mov
jg
jns
cmp
popa
add
jge
or
inc
dec
dec
mov
or
lods
mov
add
and
pop
fstpt
inc
adc
push
dec
and
cmp
hlt
cmp
add
notb
pushf
lods
faddl
mov
lea
incb
xchg
mov
adc
in
in
clc
cmp
xor
and
sbb
jae
pop
sarl
sbb
mov
scas
add
loop
push
pop
or
out
xchg
sub
mov
pop
fwait
jg
scas
sub
cmovg
add
movsl
mov
addr16
mov
add
or
push
insl
icebp
add
stc
pop
pop
jmp
mov
add
pusha
add
movsbl
adc
push
js
outsl
mov
pop
xor
testl
rcl
sub
ja
addr16
out
dec
sbbb
popf
pop
add
test
and
rcll
xchg
jl
in
cmp
sbb
arpl
enter
adc
pop
mov
push
mov
shr
sub
mov
jns
lods
and
cmp
add
jo
mov
and
pop
add
dec
lea
and
fwait
sahf
int3
subb
cmp
or
mov
pop
pop
sbb
and
aam
mov
lock
lret
push
les
add
in
js
xor
repz
sbb
inc
sbb
xlat
and
push
popl
push
xor
add
aad
aas
lods
cmp
das
add
dec
adc
jge
cmp
out
inc
out
add
sbb
inc
lds
xchg
or
lock
adc
sbb
lcall
xor
mov
add
aas
mov
add
xor
xchg
dec
lods
mov
pop
fldenv
call
cmp
add
sub
fisttps
mov
imul
popa
icebp
jno
setb
pop
add
sub
jne
add
mov
lock
repnz
mov
mov
lret
jbe
cs
cmp
movsl
retw
loopne
mov
or
sbb
inc
inc
dec
jecxz
decb
adc
incl
jg
leave
addr16
enter
inc
and
jno
mov
fcoms
orl
clc
inc
dec
andl
stos
sub
je
adcb
dec
sti
jnp
pop
daa
imul
sub
cli
incl
sbb
mov
mov
jle
cwtl
mov
loopne
subb
repnz
adc
ljmp
jne
je
or
dec
xor
sub
sub
jae
dec
add
in
or
rcl
add
push
lock
jne
daa
mov
add
test
xchg
xchg
addb
insb
push
sbb
int3
lock
pop
cmpsl
sbb
mov
loopne
mov
add
adc
pop
lahf
or
out
jl
lret
pop
cmp
clc
mov
int
inc
stos
cmp
adc
hlt
add
pop
jo
leave
pusha
in
pop
fcos
and
xor
add
mov
arpl
and
adc
inc
or
seta
pop
dec
mov
arpl
sub
gs
xor
xchg
pusha
ret
subb
xor
popf
movzwl
push
aas
xor
notb
pop
dec
test
imul
or
sarb
pop
mov
mov
xchg
adc
add
fs
pushf
pusha
mov
movsl
arpl
setge
mov
es
mov
add
dec
add
xchg
pusha
pop
call
inc
dec
xor
cmp
sbb
pop
aas
adc
push
js
shrb
arpl
add
mov
push
mov
cmp
aad
jnp
mov
pusha
popl
fwait
dec
jbe
mov
cmp
cmp
scas
shlb
dec
rorl
sub
add
jno
xor
repz
inc
dec
addl
pushf
jp
out
inc
aam
xorl
jl
adc
push
subb
pop
mov
ret
dec
outsb
adc
cmp
movsb
or
les
jp
xchg
nop
test
repz
or
push
test
test
movsl
shl
sbb
bnd
sbb
sarb
nop
push
dec
mov
jno
ret
rcr
lods
mov
mov
fisubrs
xor
push
cwtl
inc
ljmp
sti
pusha
mov
mov
adc
push
sbb
add
push
push
xor
add
call
sub
adc
jle
jo
insb
imul
add
push
push
inc
call
pop
mov
aas
jo
mov
adc
pop
sbb
mov
mov
cmp
cmp
add
push
lahf
mov
js
pusha
mov
sbb
inc
jo
dec
cmp
add
and
nop
jno
add
push
xchg
out
push
icebp
xchg
pop
adc
push
insb
repz
leave
cmp
mov
or
test
into
push
popf
inc
lock
push
mov
pusha
jns
std
push
fsubrl
jle
aaa
push
jns
cld
and
inc
dec
jb
inc
nop
mulb
mov
jbe
sbb
mov
add
enter
lret
or
xor
in
pop
leave
fsubs
fmull
push
xor
out
das
hlt
test
push
andb
incl
pop
mov
add
lock
out
adc
icebp
mov
push
idivb
bound
push
mov
nop
mov
sub
xor
pop
fs
add
dec
out
xchg
sbb
cmp
sarl
xor
mov
movsb
push
pop
push
push
hlt
jbe
pop
rorb
mov
xor
scas
imul
push
lret
fucomp
xchg
mov
pushf
cmp
push
mov
xchg
jmp
add
fs
enter
dec
add
test
xor
adc
xor
sbb
daa
sub
mov
sub
scas
mov
or
sub
mov
iret
xor
int
push
push
test
mov
mov
enter
dec
add
aas
mov
mov
scas
rolb
sarb
adc
dec
sub
xor
out
imul
push
mov
jp
dec
inc
xlat
xor
fs
adc
mov
cmc
mov
and
cmpb
pusha
or
push
aas
cmp
test
daa
xchg
mov
push
es
movsb
inc
enter
sbb
jle
add
pop
mov
adc
jbe
sbbb
cmp
pop
lods
ds
adc
xor
les
mov
and
clc
add
ret
mov
inc
xor
sub
push
ror
notb
aas
lods
mov
push
jo
out
add
sub
int3
lret
jl
push
mov
and
jno
add
xor
inc
push
add
lcall
lret
fidivrl
adc
sub
add
sub
jp
inc
aam
pop
and
xchg
add
pop
cmpsl
mov
out
cltd
jbe
insl
fs
adcb
sbb
fstpl
sub
aas
es
mov
fs
repnz
stc
ja
push
add
and
fidivl
outsb
mov
add
je
out
cmp
mov
enter
out
and
or
nop
sub
mov
xchg
andl
jmp
icebp
push
mov
aaa
pop
outsl
mov
and
sbb
pusha
popa
mov
lock
inc
js
loopne
lock
xor
cli
dec
out
jl
inc
lcall
jmp
add
lret
cmp
out
or
mov
dec
pop
inc
shl
xlat
mov
xchg
jo
pop
and
inc
add
divl
lret
mov
enter
inc
test
aaa
inc
ret
and
push
enter
and
jns
rolb
xchg
aas
xchg
shrb
push
and
xor
dec
pop
push
and
add
dec
insl
inc
pop
nop
xchg
or
lods
and
sub
int3
fdivrp
lock
popl
aaa
shll
xchg
xchg
insb
dec
adc
jno
ds
push
vpor
dec
adc
orb
addb
add
lret
mov
inc
lods
sbb
sbb
xchg
cmp
push
xor
sub
inc
mov
testl
cmp
int
or
dec
pusha
push
les
test
dec
push
test
pop
mov
or
jl
fwait
cwtl
out
mov
add
loope
adcb
add
push
outsl
sahf
dec
dec
add
xchg
les
shlb
push
push
pop
ljmp
push
hlt
add
xor
and
mov
sub
adc
and
add
data16
outsl
sbb
mov
lret
mov
in
mov
in
adc
mov
inc
in
int3
pop
arpl
fwait
cmp
insb
cmp
inc
add
jae
stos
cmc
sbb
mov
pushf
out
mov
les
or
mov
in
fcompl
insb
add
inc
xor
xchg
xor
xor
cmp
cmpsb
movq
xchg
fwait
cs
mov
adc
cld
enter
sub
adc
add
pusha
adc
outsl
dec
cs
addr16
pop
decl
xor
cmp
cmpsb
adc
cmp
cmovae
pushf
icebp
xor
shll
dec
adc
sub
add
xor
cmp
cmp
sbb
test
inc
int3
popa
pop
in
rol
push
dec
outsl
dec
mov
mov
xor
push
loop
and
pop
pusha
pusha
cmpb
aas
les
adc
rol
inc
pusha
push
fwait
insl
pop
add
outsb
subb
les
pop
mov
pop
and
pop
add
xchg
jp
ficomps
jecxz
ret
xor
hlt
adc
jmp
adc
mov
pusha
xchg
jbe
push
dec
mov
out
lods
daa
clc
dec
movsl
sub
xlat
jo
xor
inc
cmp
mov
xor
cwtl
loopne
pop
mov
int
les
jmp
add
adc
pop
mov
jnp
sbb
aaa
dec
pop
aam
insb
add
mov
lds
stc
add
in
insl
or
pop
jbe
subb
lods
mov
xchg
or
popa
mov
test
dec
or
icebp
jmp
push
jbe
xchg
pop
dec
lods
add
jecxz
sub
sbb
cmp
add
mov
jp
mov
sbb
and
inc
aam
sub
pop
inc
pop
dec
loope
jge
out
in
jo
nop
int3
mov
movsl
data16
push
mov
or
outsb
push
add
subb
xchg
imul
sbb
push
cs
inc
push
sub
es
and
jne
cmp
daa
sbb
xchg
hlt
cld
nop
les
cmpb
xchg
sbb
inc
repz
cmp
lea
test
fsubs
ljmp
jo
sbb
ret
push
andb
xor
sbbb
or
jo
sbb
jno
daa
or
and
push
nop
sub
and
xor
push
mov
mov
cmc
mov
shll
lds
movsb
add
je
push
add
add
inc
lret
sub
xchg
leave
addr16
or
mov
sub
ret
mov
stos
negb
or
pop
jbe
mov
dec
inc
int3
adc
add
xor
jg
adc
xchg
mov
or
fidivs
es
mov
sub
sbb
ds
das
dec
or
movsb
xchg
out
cmp
hlt
fldenv
arpl
xchg
clc
mov
popl
rorb
jle
mov
dec
pushf
cmp
cli
jae
adc
mov
sub
pop
xorl
jo
mov
lahf
movsb
mov
repnz
or
pushf
and
inc
mov
addr16
cs
push
rclb
push
sti
and
xchg
push
mov
sbb
jmp
add
dec
insb
call
js
je
mov
insl
mov
jbe
mov
or
add
sbb
mov
inc
push
int3
mov
push
int3
and
xchg
and
and
lret
loope
inc
jo
test
hlt
add
mov
or
pop
in
mov
push
inc
and
or
test
orb
or
push
adcb
insb
test
ds
sub
clc
mov
imul
enter
push
add
jb
push
sbb
sbb
pop
ret
lock
mov
aaa
out
and
lds
lahf
mov
cmp
mov
cltd
dec
cs
add
add
ret
push
jge
add
scas
mov
mov
sbb
sub
inc
mov
ja
jb
add
mul
mov
mov
jp
stos
or
xchg
jmp
dec
nop
rcrb
ljmp
inc
jns
adc
aad
and
ljmp
and
cmpb
adc
loope
mov
addb
or
add
cmpsl
fnstcw
sbb
lea
pushf
add
jbe
jns
leave
xchg
dec
xchg
sbb
add
mov
scas
in
inc
lds
test
add
mov
loop
mov
insl
add
sbb
scas
test
jne
pop
sarl
xchg
xlat
ds
add
mov
in
cmpsb
add
pusha
mov
nop
int3
sbbl
js
mov
lret
push
pop
pop
and
aaa
pop
je
xchg
fsubrl
xor
cwtl
test
insb
adc
cmc
xor
aaa
inc
and
inc
popa
rclb
push
xchg
or
jp
jne
lret
test
je
pusha
xorb
jb
cwtl
lock
daa
pop
pushf
cwtl
mov
xor
movsb
test
sbb
inc
sub
gs
adc
cmp
jl
test
pop
adc
rcll
stos
inc
jnp
xor
add
and
pop
cmpsb
sub
add
inc
pusha
sub
adc
out
scas
cmc
pop
and
cld
mov
pop
mov
push
movsb
mov
lods
push
bnd
or
mov
add
xor
add
mov
inc
pusha
cltd
lret
std
mov
push
sti
xchg
xorb
or
cmp
mov
insb
mov
pop
in
pusha
sub
cmp
div
or
pushf
and
int
add
add
add
lahf
call
pop
and
insb
add
mov
sub
add
xor
mov
loopne
in
cmp
push
push
ret
add
xchg
pop
test
lock
push
shrd
int3
das
cmp
lret
pop
sub
xchg
jb
call
dec
add
sub
xlat
iret
aas
and
cmp
mov
repnz
outsb
pop
shll
fdivrl
mov
mov
push
adc
loop
inc
or
dec
and
dec
add
push
mov
bound
mov
mov
push
sbb
jo
sub
mov
cmp
cmp
push
roll
mov
mov
stc
mull
and
jmp
test
enter
sbb
adc
fucomp
lret
shrb
lea
mov
pop
push
mov
popa
add
std
pop
icebp
call
ret
cmp
outsb
enter
mov
leave
xor
and
in
divl
adc
mov
cmp
mov
or
in
or
mov
xor
push
pop
fnstcw
add
add
pop
xor
xorb
sbb
in
lods
push
push
cmp
clc
xor
out
aaa
shrb
jbe
xor
push
dec
ds
push
fldcw
cmp
push
xchg
pop
dec
mov
adc
add
pop
cmp
aad
xor
sub
insb
call
scas
xor
rcll
ja
jns
lcall
xor
jl
xchg
dec
or
adc
inc
inc
cmpsl
clc
mov
lock
pop
aaa
cwtl
sbb
and
addb
inc
test
or
and
add
sbb
dec
dec
or
cwtl
dec
js
fildl
orl
icebp
add
icebp
ljmp
xchg
repnz
add
pusha
cli
jno
imul
mov
in
push
and
adc
add
repz
xor
cltd
jg
add
inc
or
mov
adc
lods
sbb
fsub
dec
shlb
rcl
add
je
add
adc
lock
sub
je
or
push
sub
test
add
pop
mov
xor
mov
dec
jle
in
aad
or
call
nop
mov
mov
ds
xorl
repz
aad
hlt
dec
jle
cmpl
hlt
cmp
or
cli
and
sbb
xor
stc
jp
add
int
mov
xor
adcl
icebp
mov
mov
sbbb
stc
lret
mov
or
dec
jp
lock
sbb
aad
popa
ds
test
xchg
es
add
roll
dec
loopne
pop
rol
push
divl
add
xor
xchg
pop
popa
pusha
cmp
add
aam
add
mov
add
mov
jno
int3
inc
shr
inc
pop
cltd
add
lea
stos
das
adc
dec
sahf
int3
xor
or
push
fdivrs
sti
xor
out
pusha
test
mov
mov
push
sbb
inc
dec
jne
lods
mov
push
arpl
cmc
enter
dec
popf
fnstsw
mov
adc
loopne
js
add
mov
xchg
adc
add
adc
sbb
lahf
add
xor
and
add
stos
loop
sub
adc
mov
nop
sub
mov
cli
lcall
adc
cmp
popa
test
push
fs
mov
cmp
leave
iret
xor
xchg
out
repz
dec
push
add
roll
out
push
loop
test
jl
leave
outsl
cmc
fsubrp
mov
aad
or
xchg
iret
add
shrl
sbb
sbb
push
add
mov
add
add
aad
repz
mov
test
push
dec
cwtl
xchg
enter
push
xlat
sbb
fnstcw
and
mov
mov
cmp
adc
adc
je
sbb
or
mov
and
and
xor
movsb
fisttpl
add
xor
mov
cltd
outsl
adc
adc
jns
jmp
xor
dec
xor
shrl
pop
stc
mov
flds
fnstcw
add
dec
adc
inc
jb
mov
lock
std
divl
jmp
cmp
xor
movsb
or
pop
adc
xlat
daa
push
and
add
mov
subl
lret
push
or
or
leave
adc
mov
xchg
mov
and
bound
lods
sahf
jo
adc
in
mov
in
mov
dec
add
into
dec
mov
dec
fucom
ljmp
ficomps
pop
xor
shlb
sub
jo
add
mov
or
cmp
pushf
sub
push
decb
out
lods
lret
cli
cmp
insb
cmp
popa
ror
andb
das
adc
std
add
mov
mov
sub
adc
xor
lcall
cmpb
cs
inc
gs
jne
imul
jb
mov
pop
or
add
push
pop
out
mov
ficoml
mov
lret
or
call
sub
rorb
add
inc
or
mov
xchg
rcrl
lods
hlt
xchg
ljmp
lds
insl
push
or
cmc
clc
sbb
call
insb
pop
mov
pop
push
jnp
add
jg
push
inc
int3
cmp
dec
pusha
in
mov
or
push
mov
sbb
sbb
mov
das
out
mov
dec
rorl
adc
dec
or
lock
jle
xchg
aas
movb
adc
add
test
ret
xorl
add
jge
mov
adc
popf
and
mov
movss
popa
outsb
add
mov
jae
add
inc
adcb
shrb
jp
add
test
mov
xchg
pusha
movsb
jl
pop
cmc
pop
sub
xor
ljmp
inc
add
add
mov
loopne
subb
mov
int3
sub
mov
inc
xchg
and
add
scas
repz
jge
pop
push
loop
aas
adc
sub
mov
adc
in
mov
push
jne
lods
and
pop
leave
icebp
sbb
cmpsl
inc
push
subb
mov
cmp
or
stc
add
lods
das
push
aas
decl
js
sub
sbb
xor
popa
add
mov
sti
lahf
or
pusha
in
or
inc
add
insb
imul
ds
out
inc
orl
fs
sbb
stos
ja
enter
inc
jg
loopne
sub
mov
lods
push
stc
pop
mov
jo
or
xor
nop
fs
sub
cmp
sbbb
inc
outsl
cmpl
inc
sbb
sti
push
insl
and
mov
mov
hlt
insl
add
rolb
loop
pop
shlb
enter
cmp
ljmp
and
add
cmpsb
cld
xchg
ja
hlt
sub
mov
cli
mov
je
mov
add
dec
pop
and
dec
lods
cmp
inc
pop
aam
orl
test
sti
cmp
and
xor
add
xchg
cs
fildl
adcl
mov
mov
daa
xchg
mov
or
test
faddp
cld
mov
jp
flds
add
add
xchg
mov
jecxz
test
and
dec
xchg
sbb
add
and
sub
cmp
or
adc
pop
les
add
int3
push
fldenv
xor
add
sahf
ret
hlt
sub
and
loopne
ja
out
lahf
out
fcoml
cmp
subw
dec
sub
les
test
sub
jl
add
insl
incb
lods
nop
je
shll
scas
outsl
dec
jle
sub
push
mov
test
sub
sbb
faddl
cmp
cmp
loop
in
add
std
cwtl
mov
test
add
icebp
dec
in
sarl
js
clc
test
jo,pt
pop
mov
push
cmp
daa
lods
fidivrs
ds
mov
and
sub
add
dec
mov
mov
add
aad
xchg
lret
pop
lahf
push
pop
adc
or
es
sbb
out
push
sbb
mov
add
jp
imull
xchg
cwtl
loopne
add
insl
ds
ss
or
add
mov
xor
cmp
inc
mov
ficompl
or
inc
mov
cmpsl
jg
jns
outsb
cli
sub
pop
aam
mul
test
jbe
add
lcall
lahf
jbe
mov
dec
mov
or
push
jl
or
std
mov
inc
mov
xchg
push
cmp
dec
cmp
fcomi
pop
sbb
aam
mov
movsb
repnz
and
mov
adc
sub
fsubs
xor
xor
test
xor
xchg
lock
in
add
add
pusha
lock
or
add
loopne
mov
and
addl
adc
stos
incl
cmc
cmp
mov
nop
push
sub
ds
mov
lret
test
xchg
xor
es
push
xchg
mov
adcl
fadds
nop
loopne
in
sbb
dec
inc
pop
adc
sarb
sub
push
cs
adc
test
sub
cmpsb
pop
adc
jno
adc
xlat
xor
pop
pop
jae
xchg
int
les
or
xchg
dec
and
out
movsb
fisubrl
and
leave
add
xchg
or
add
loop
loope
divl
insb
add
cli
pop
pop
test
sub
sub
lock
xor
movb
sub
add
cmpsb
push
out
nop
push
push
nop
cmp
dec
add
mov
mov
ljmp
out
push
sub
testl
xchg
mov
movsl
and
pushf
adc
dec
dec
sub
or
test
push
mov
out
or
popa
sbb
adc
stc
mov
sub
or
or
popl
fsub
and
mov
mov
jmp
cmp
inc
jl
pop
lcall
xchg
lods
stc
call
cmp
or
jl
mov
adcb
mov
aas
rclb
and
dec
je
ret
push
rclb
mov
inc
and
sbb
bound
pop
add
adc
mov
sub
add
or
repz
jecxz
mov
jo
dec
mov
cmp
cmp
test
push
jae
pusha
add
lods
lock
loop,pt
sub
int3
add
sti
out
inc
repz
rolb
jno
imull
or
xor
and
loop
xchg
jne
rorl
adc
and
movd
pop
mov
jl
mov
inc
nop
mov
in
xor
push
lret
lods
push
cmpsb
add
test
cmp
test
and
add
cmp
or
ljmp
push
mov
mov
adc
xchg
stos
repz
aam
push
xchg
xor
inc
mov
add
outsb
dec
or
sub
sbb
and
rcr
mov
hlt
jae
test
fadd
push
inc
js
andb
add
add
ss
push
mov
mov
test
or
ds
and
xor
or
pusha
and
stc
and
stos
fsubl
push
je,pn
cmc
jae
ficompl
sub
clc
jno
and
xchg
and
in
add
xchg
inc
mov
xor
dec
ja
xchg
cmp
negl
addl
cwtl
rolb
sub
js
sbbb
fisubrl
mov
int3
inc
aad
orb
cmpsb
cwtl
pushf
inc
movb
ljmp
jnp
mov
push
cmpsb
movsb
sbb
test
adc
pop
add
jmp
out
xor
add
pusha
rcrb
fstpl
mov
scas
stc
sbb
push
lds
mov
in
fildl
aam
add
popa
mov
ljmp
xchg
dec
out
xchg
cmp
movsbl
fidivs
test
rorl
ja,pt
mov
add
adc
sbb
push
repnz
add
andnps
mov
test
sbb
and
xchg
inc
xor
into
lret
notl
pop
ja
and
push
xchg
mov
pop
rclb
test
lret
add
and
add
nop
sti
cmpsb
sbb
test
add
out
fcom
inc
and
pop
adc
xor
jo
sub
je
into
sbb
or
inc
in
and
pop
cmp
push
idivl
inc
xchg
push
pusha
adc
and
pop
fcoms
adc
movl
sub
mov
or
push
sti
adcl
mov
adc
dec
and
dec
jl
mov
in
add
sub
adc
int3
cld
or
jae
stc
jb
pop
mov
shlb
dec
or
jmp
lods
adc
xor
arpl
enter
cmp
cli
and
add
xor
cmpsl
xchg
xchg
scas
jne
add
xorb
repnz
inc
pop
in
inc
fcmovne
sbb
mov
mov
ret
sub
dec
sub
test
sub
cltd
cwtl
inc
xchg
test
pushf
mov
iret
or
adc
add
repz
add
and
push
and
xchg
or
pusha
xchg
jns
aam
jge
cwtl
xchg
fsubrl
sub
test
das
sbb
cmp
jg
addr16
movsl
loopne
movsb
add
jnp
mov
mov
mov
dec
inc
push
add
enter
add
xchg
add
lods
imul
pop
mov
cmp
inc
mov
data16
push
pusha
pop
jno
add
jecxz
aaa
xor
xor
fcmovb
jg
and
js
stc
push
insb
pop
outsb
mov
fxch
aam
mov
ja
and
repnz
icebp
sub
sbb
pop
inc
das
jl
cwtl
mov
aas
jmp
ret
add
sbb
adc
inc
or
cmp
mov
xchg
add
test
xchg
loop
in
fwait
cwtl
loopne
mov
jle
mov
or
inc
pop
mull
dec
inc
rorb
mov
or
sub
out
pop
inc
shlb
call
scas
roll
sarl
inc
test
mov
aad
add
push
pop
mov
ror
icebp
or
pop
sbb
mov
nop
mov
jb
imul
nop
add
xlat
outsb
sub
ds
fists
push
cmp
repnz
add
jo
bsf
dec
das
inc
or
test
mov
pop
jge
test
add
cmp
pop
mov
js
add
in
dec
cmp
mov
xor
es
jno
dec
adcb
cli
push
adc
mov
insb
ja
mul
dec
enter
cmp
aas
add
xchg
std
jmp
hlt
dec
cltd
nop
pop
stos
dec
inc
inc
cmpl
xorl
jnp
adc
loop
xchg
add
add
insl
sarl
jmp
push
stc
sub
or
popf
ret
add
mov
add
push
icebp
pop
movl
inc
sbb
sub
testl
add
sbb
insl
mov
pop
jb
incb
add
push
iret
movsb
or
mov
jae
add
sbb
lods
pop
cmp
push
lret
ret
sub
es
add
cmp
loopew
xchg
mov
insl
sti
rcll
add
xchg
movsb
in
push
icebp
jno
pusha
mov
inc
test
lcall
insb
loop
loopne
and
mov
pushf
ret
inc
sub
jl
mov
pusha
and
ss
sub
in
insl
lcall
add
cmp
cmp
mov
inc
or
mov
sub
sub
test
sub
nop
mov
cmp
aad
popa
sub
xchg
cmc
rolb
sub
sub
adc
inc
loop
flds
pop
cs
cltd
loope
ja
push
fiaddl
adc
or
inc
rcr
in
dec
lock
rcrl
js
push
lret
test
xor
pusha
mov
call
cwtl
fdivs
inc
pop
add
add
mov
cmp
jb
dec
test
xchg
adc
add
inc
jne
cs
adc
cwtl
addl
push
lods
pop
adc
sbb
dec
cs
movsl
add
les
enter
sub
idivb
arpl
js
repnz
add
imul
frstor
adc
xor
inc
aam
dec
dec
lcall
mov
aad
lahf
and
fsubs
ret
inc
rorb
pop
add
pop
out
test
jg
add
mov
jmp
mov
cmpb
inc
insb
jbe
cmpsb
add
sahf
mov
mov
out
fdivrp
add
imul
sub
jge
stc
lods
mov
dec
mov
push
lahf
shrb
jmp
inc
loop
popf
aas
sti
dec
stc
mov
out
loopne
adc
dec
and
cwtl
rolb
ljmp
pop
sti
nop
add
adc
push
scas
mov
enter
add
pop
test
sbb
out
dec
and
or
jecxz
hlt
and
inc
mov
pop
rcl
stos
mov
cmp
lahf
adc
dec
push
and
mov
inc
inc
ds
and
out
or
push
cmpl
aaa
adc
xor
leave
mull
and
sbb
fadds
rcll
cmpb
in
add
xlat
jl
cwtl
test
add
pop
add
daa
in
mov
xor
divb
pop
xchg
aam
outsl
add
mov
addr16
clc
jo
cmp
testb
and
fcomps
fnstsw
add
fwait
xlat
shlb
je
call
ljmp
and
cmp
nop
pusha
pop
cwtl
mov
jns
adc
aas
pop
lods
nop
les
or
push
cwtl
movsb
inc
cld
ljmp
rcrl
jmp
aas
adcb
int3
add
call
jecxz
add
xchg
xor
or
pop
jb
jle
in
inc
jecxz
jnp
or
cmp
or
in
sub
loopne
jmp
jmp
dec
or
dec
jge
cmpb
mov
xchg
repnz
mov
or
and
mov
add
in
mov
and
mov
in
or
out
add
ja
push
sahf
xchg
or
inc
cld
and
jae
dec
shlb
dec
leave
or
add
pop
push
pop
dec
sub
fistps
cld
in
or
imul
push
rolb
imulb
add
daa
cmp
lods
cmc
fisttpll
loope
and
andl
pusha
adc
and
push
jg
push
pop
test
int
jbe
test
sub
movsb
dec
dec
mov
lods
sub
testb
rolb
lock
pop
imul
test
sbb
movsb
lock
leave
cmc
ljmp
test
adc
add
test
arpl
xor
push
push
xchg
mov
jno
sti
xor
stc
mov
pop
rol
and
pusha
nop
cmpsl
out
movsb
rorb
push
shl
cmp
fisttps
cltd
mov
cmc
sbb
jae
add
jo
hlt
cs
call
jnp
mov
insb
jl
nop
xor
loop
icebp
rclb
and
xorb
inc
dec
and
mov
and
nop
inc
fsts
loope
dec
int3
jo
add
sbb
xchg
xchg
sbb
pop
adc
idivb
add
cmpsl
ja
cmp
clc
ret
out
adc
xchg
pop
cltd
pusha
aas
xor
and
clc
addl
or
push
repnz
jecxz
and
xchg
rclb
xor
ret
sub
mov
add
repz
pop
es
js
es
pop
cmp
lret
or
cmp
push
push
jbe
inc
call
inc
mov
mov
add
xchg
mov
pop
mov
inc
lods
mov
pop
adcb
push
sbb
mov
and
push
shrb
add
inc
mov
pop
insb
jmp
scas
rorl
adc
rclb
or
and
fs
or
mov
loopne
adc
pop
cltd
mov
ror
dec
or
add
pop
int
in
mov
hlt
mov
sub
dec
sti
ja,pt
cwtl
add
test
jo
jg
add
loop
ja
test
inc
mov
add
shrl
lods
sub
jae
jg
cmp
xchg
stc
sbb
mov
sbbl
adc
arpl
cmp
xor
mov
pop
pop
xchg
inc
hlt
and
push
adc
fisttpl
or
inc
add
loope
mov
xchg
push
jae
and
ds
mov
mov
dec
jbe
and
pop
sbb
xchg
or
and
sub
sbbl
mov
lods
jnp
push
out
out
add
inc
ror
cs
js
add
sub
and
or
psllq
xor
sti
sub
cltd
add
cmpsl
xor
ss
inc
adc
cld
int
add
sbb
out
or
arpl
push
hlt
sbb
adc
adc
adc
add
and
push
inc
xchg
jo
jge
add
pop
cli
lret
jge
dec
fiadds
enter
dec
orl
push
inc
adc
pslld
pop
mov
cld
dec
cmp
jo
mov
sub
push
cmp
lods
adc
fmull
add
pop
and
mov
mov
add
mov
mov
jle
pop
js
mov
mov
mov
jl
nop
sbb
jnp
cmp
sub
add
dec
mov
stc
das
xor
nop
mov
pusha
test
shrl
movaps
adc
repz
sub
and
decb
incl
add
hlt
loop
stos
icebp
add
call
or
int
je
mov
cmp
jecxz
add
push
add
gs
imul
or
dec
pop
xchg
adc
roll
add
pop
mov
jo
std
ds
or
add
call
mov
dec
sbb
cmc
inc
and
je
push
mov
imul
or
mov
imul
or
enter
inc
pusha
aam
cmc
int3
add
iret
out
xchg
mov
andb
ds
data16
int3
addr16
loopne
mov
movsb
xchg
je
hlt
add
cltd
fs
fsubs
inc
lods
pop
cli
xchg
movsb
lcall
imull
xchg
mov
xchg
pop
jmp
ret
dec
call
jl
pop
ljmp
sub
push
add
mov
ror
xor
push
out
nop
hlt
sub
lock
push
jmp
xchg
scas
add
mov
and
lds
add
add
test
addb
and
clc
adc
sub
negl
in
lods
dec
les
and
and
sbb
and
dec
imul
sbb
out
jno
nop
movsb
add
clc
push
adc
xchg
sub
mov
or
arpl
mov
cwtl
aas
rol
mov
pop
js
jge
pop
jo
std
fucomp
femms
ret
je
pusha
imul
ja
int3
loop
jl
stc
pop
xor
mov
add
ret
and
cld
dec
les
or
mul
hlt
add
xor
cmp
xchg
pushf
or
sub
add
pop
bound
push
faddl
pop
xchg
scas
in
or
or
adc
or
mov
push
and
pop
cmp
jnp
out
and
fistpl
in
aam
sarb
imul
daa
inc
add
loop
das
xor
cli
roll
dec
lock
repz
rolb
imul
mov
xor
or
cld
inc
and
push
mov
incl
sahf
cld
pop
addb
test
mov
call
pop
cmpb
xlat
aaa
mov
sub
xchg
fxch
push
mov
sbb
inc
xchg
pop
sbb
divl
xchg
and
rol
adc
adc
daa
mov
cmpsb
xor
das
sub
adc
add
sarl
sub
xchg
addl
hlt
sub
jl
popa
xchg
mov
cmp
jo
and
sub
loopne
stos
cwtl
pusha
lock
inc
sbb
iret
out
js
mov
cmp
aas
mov
pop
or
in
xchg
sbb
xchg
hlt
jno
xchg
cltd
mov
add
fadds
mov
outsl
aas
add
fistps
lcall
das
std
out
movsb
pop
hlt
xor
xchg
sbb
lahf
out
imul
pop
shlb
imul
sub
aas
sbb
orl
or
adc
sbb
movsb
add
movsb
and
rclb
adc
mov
pusha
pop
push
mov
lcall
jg
push
leave
ljmp
add
inc
add
pop
cmpsl
aad
insb
clc
fisubs
push
mov
sbb
sbb
add
movsb
sbbl
int
mov
es
out
rdmsr
push
push
xor
mov
and
rorb
and
push
mov
add
xor
dec
div
mov
nop
and
popa
pop
xchg
int3
mov
call
push
pusha
or
sbb
mov
mov
xchg
mov
dec
jg
cmp
sub
aam
popf
sub
or
sub
nop
arpl
bt
fstpt
pop
loopne,pn
leave
mov
add
xchg
inc
or
call
lods
pushf
js
scas
and
rolb
add
mov
and
jae
pop
adc
insl
pop
jo
cmc
mov
add
jae
xchg
pop
sub
and
repnz
mov
mov
pop
lods
mov
cld
rorb
pop
cmpb
scas
xorl
hlt
hlt
cmp
shll
push
call
fmull
in
shll
mov
add
lahf
jecxz
xchg
push
adc
out
movsl
add
push
fiaddl
test
jmp
inc
out
add
or
xor
call
xchg
sbb
cs
dec
add
xchg
mov
pop
xor
and
mov
and
xor
jle
mov
lods
ret
pusha
pop
pop
pusha
cmp
xchg
cmp
jge
andb
mov
int3
lock
sbb
das
sub
sub
xchg
ds
test
add
adc
sub
addl
fs
loop
adc
adc
mov
add
mov
mov
into
or
call
pop
imul
ret
in
add
aas
sbb
add
movsb
push
clc
pop
sbb
popa
lods
cmp
sub
jns
dec
gs
mov
cmp
test
or
int3
or
jb
add
inc
out
insl
cwtl
les
jb
loopne
jo
std
pop
mov
or
mov
dec
push
ret
leave
lock
cld
decl
lds
sbbb
movsb
addr16
sub
imul
lcall
push
add
and
dec
xchg
xchg
or
scas
repnz
add
pop
mov
aaa
ja
mov
sbb
clc
insl
xchg
mov
push
test
push
mov
rol
add
je
gs
xor
xchg
mov
jae
arpl
insb
sub
enter
mov
push
test
xchg
xor
repz
add
gs
mov
in
xchg
icebp
les
jg
hlt
sub
mov
adc
inc
pop
jl
xor
and
mov
fisubs
adc
cwtl
fwait
aas
dec
push
mov
push
mov
cmp
xlat
push
repnz
push
pop
call
js
adcb
in
call
ret
or
and
call
in
xor
sub
xlat
jp
add
jg
inc
rolb
xlat
rolb
cs
cltd
int3
dec
shlb
push
icebp
enter
push
jo
and
xor
inc
add
popf
mov
sub
insb
mov
and
add
xchg
sbbl
adc
sahf
fbld
stc
mov
aad
imul
or
mov
or
frstor
or
cwtl
test
ds
or
dec
pop
in
inc
xlat
out
add
aaa
inc
cmpsb
nop
mov
and
mov
pop
or
jbe
or
dec
dec
inc
pushf
pop
es
pop
add
loopne
lret
inc
add
jle
fstps
lcall
mov
and
icebp
sbbb
xor
fbstp
les
jg
add
cwtl
adc
pop
orb
lock
aam
push
pop
test
lods
cli
test
mov
or
mov
pop
xchg
jo
xchg
mov
mov
add
mov
clc
and
and
lods
xor
and
sbb
in
xorb
pop
xchg
test
orb
popa
fisttpl
jg
sbb
add
xchg
leave
imul
or
psubd
fsubs
dec
cmp
dec
subb
test
mov
adc
and
add
fcompl
cmpsl
and
test
out
sbb
jle
test
push
add
ret
data16
cmp
jle
add
cs
cmp
push
mov
add
hlt
cmpsl
lods
out
and
xor
inc
mov
jo
frstpm(287
xor
pusha
cmp
pop
adc
jle
sub
mov
mov
and
lock
add
nop
pusha
cltd
mov
add
rcl
fstl
dec
pop
aam
int
cmovno
pusha
mov
mov
and
mov
int3
cmc
dec
popf
mov
adc
add
add
jns
mov
jb
add
pop
into
out
cmc
in
mov
jl
std
or
xchg
push
fsubl
orl
pushf
inc
nop
inc
fwait
adc
sub
test
add
xlat
sub
aas
fmull
shll
jno
mov
loopne
icebp
dec
xchg
and
nop
lret
sbb
push
and
push
imul
loopne
xchg
hlt
and
scas
pusha
sbb
inc
inc
add
sub
rolb
mov
leave
add
add
pop
out
or
mov
dec
and
dec
jmp
cmp
cmp
sbb
cli
fisubs
nop
pop
or
push
xor
ja
push
arpl
out
fnstsw
jb
imul
shrl
mov
xchg
shll
cwtl
add
fidivrs
mov
aad
mov
add
push
popf
ret
jp
pop
xchg
add
xchg
rolb
cs
cmp
insb
loopne
mov
lret
sub
xchg
inc
pop
int
lcall
xor
sbbb
imul
push
inc
and
or
leave
sbb
lock
mov
stos
fcoml
add
cmc
mov
int
loop
xor
add
sub
movsb
xchg
ss
push
sbb
insb
xchg
mov
xchg
cmp
sub
add
les
add
mov
and
add
push
pop
enterw
and
popf
cltd
insb
clc
sbb
jbe
pusha
popf
mov
add
jae
aad
and
mov
ljmp
sbbb
movsl
dec
jae
adc
add
mov
ja
dec
push
add
test
lods
sbb
js
or
cmp
pop
sub
and
inc
add
or
dec
jl
dec
add
mov
sub
test
mov
or
dec
nop
adc
mov
or
pusha
sbb
mov
push
gs
int
shlb
push
mov
outsb
addr16
xchg
mov
nop
xchg
mov
outsb
cmp
xor
lods
cltd
add
in
adc
in
xor
adc
adc
push
out
jo
dec
movsb
shrb
or
xchg
sbb
jge
repz
xor
or
or
or
repnz
mov
lahf
imul
popa
sbb
xor
test
push
dec
idivl
repnz
mov
jo
xchg
xchg
out
cmp
je
insb
sahf
mov
rcrb
icebp
mov
lahf
fcmove
jmp
dec
jecxz
push
mov
push
imul
sbb
psubb
jmp
fcomip
mov
sbb
xchg
mov
dec
shlb
int3
pop
cwtl
adc
in
movsl
add
cmpsb
xor
fwait
add
mov
out
lods
inc
xchg
lods
add
fildll
and
daa
test
add
mov
mov
jo
xchg
ret
and
xchg
sar
xchg
call
mov
mov
and
and
ret
lock
pop
sub
jae
popa
push
test
xchg
popa
sbb
jnp
mov
or
call
add
outsb
stos
data16
and
test
pop
push
xchg
nop
push
mov
add
dec
imul
xchg
and
push
call
or
jns
add
dec
test
xchg
xchg
sub
adc
addl
loopne
dec
or
loopne
cmp
test
icebp
std
mov
or
andb
enter
pop
lea
push
outsl
in
adc
adc
cmpb
leave
insb
rclb
or
and
mov
test
mov
dec
add
cwtl
lret
fidivrs
dec
inc
sbb
outsb
test
push
add
xor
and
add
call
mov
add
test
je
sub
clc
cwtl
adc
test
nop
jae
fsubr
clc
mov
adc
out
or
lret
aaa
push
or
lock
dec
ret
je
icebp
lods
or
rcrb
mov
jae
outsl
aaa
lock
mov
nop
js
jp
add
aam
dec
push
or
jo
movsl
pop
sub
or
insl
iret
sub
stos
cltd
or
je
into
icebp
jl
or
mov
xchg
mov
pop
or
mov
xchg
das
pusha
dec
lret
pop
sbb
test
mov
push
push
cmp
call
mov
jo
cmp
cli
or
mov
add
ret
imul
cld
std
maxps
mov
mov
es
loopne
inc
xor
fildll
sbb
and
fwait
mov
sub
sbb
push
inc
fwait
out
dec
add
and
cmp
mov
push
adc
push
bound
cwtl
fs
add
sub
jo
add
xchg
mov
xor
hlt
cmp
insb
jns
je
push
push
dec
or
das
xchg
xchg
outsb
push
mov
add
add
std
stc
ds
or
pop
rcrb
test
xor
add
iret
inc
xor
or
mov
sub
hlt
stc
or
movsb
lret
sbb
ja
pusha
popf
dec
add
mov
mov
push
sbb
or
cmp
out
pop
cmp
jb
jnp
mov
cmp
fdivs
inc
in
loope
mov
inc
inc
cltd
pushf
or
int
sti
mov
cmc
enter
fs
xor
rol
xchg
cmp
or
pop
dec
je
adc
sbb
sbb
adc
scas
adc
call
mov
andb
dec
mov
add
push
push
pop
leave
or
lds
push
mov
jnp
add
mov
scas
adc
fnsave
pusha
cwtl
test
adc
das
nop
add
sub
popf
lods
sbb
cwtl
add
and
mov
andl
cmp
or
pop
insl
ds
xor
pop
inc
test
pusha
pop
pop
je
aas
adc
mov
or
mov
push
cmc
mov
add
subb
ljmp
inc
or
into
fs
sbb
iret
pop
xchg
cmp
cwtl
adc
divb
cmpsl
push
pop
xchg
leave
sbb
addb
shll
rcr
sub
repnz
jo
jne
xorb
add
push
and
jecxz
sub
mov
movsl
sub
arpl
inc
pop
outsl
clc
aaa
rcl
or
adc
test
xor
orl
testb
mov
leave
cmpsb
pop
cs
int3
lahf
mov
adc
sbb
ficoms
popf
cmpsb
enter
ror
mov
mov
sub
cmpsl
hlt
pop
mov
lret
test
xchg
dec
hlt
add
loope
sarb
and
mov
mov
lret
int
or
stos
mov
mov
pop
jbe
and
loopne
fwait
inc
or
mov
shlb
xchg
notl
pop
imul
lods
add
inc
shll
xor
push
rolb
pusha
push
shrl
lret
add
lods
cmp
fisttpll
mov
xchg
ds
imul
lock
mov
or
lcall
jne
je
xchg
mov
je
cli
pop
popl
mov
adc
xchg
and
and
mov
lods
xchg
xchg
mov
add
inc
inc
out
maskmovq
negl
pop
xor
aad
hlt
mov
sub
and
mov
loopne
cmp
push
mov
scas
test
xor
aad
xor
mov
push
mov
in
pusha
xchg
mov
mov
mul
out
add
xor
orb
jb
inc
mov
fsubr
pop
add
fs
sub
mov
daa
hlt
adc
addb
in
adc
lds
mov
cmc
fldl
cs
out
cmpsl
bnd
or
test
add
pop
imul
clc
fnstenv
bound
xchg
clc
insb
call
or
or
clc
mov
addr16
push
rclb
mov
mov
inc
xchg
divb
or
or
leave
xchg
sahf
faddl
in
or
xchg
dec
xchg
mov
pavgw
shlb
arpl
add
push
pusha
xchg
jge
pop
xor
jmp
test
sub
sarb
mov
mov
clc
adc
jae
xchg
stc
and
inc
ret
xchg
xchg
add
push
je
push
nop
outsb
es
pushw
lods
inc
or
mov
stos
cmp
pop
idiv
loop
sbb
or
xor
and
mov
bndstx
rcrb
add
ds
cmp
push
mov
xor
shlb
mov
jecxz
test
sahf
lahf
mov
pop
or
cmc
xor
push
push
push
pop
fcmovb
fldenv
push
mov
iret
xchg
cltd
pop
mov
or
arpl
jg
sbb
jmp
jmp
mov
mov
stc
mov
shlb
or
mov
sarl
adc
adc
add
push
mov
inc
dec
pop
push
or
and
jae
xchg
cwtl
xchg
mov
push
pop
xchg
add
inc
out
fisubs
xor
xor
jge
cltd
pop
pop
test
stc
pushf
faddl
dec
add
mov
test
cs
shll
out
add
lods
out
adc
subl
adc
and
inc
jae
outsb
dec
add
les
mov
xchg
cli
repnz
jae
lret
cld
add
pop
aam
xchg
and
and
mov
mov
call
xchg
dec
aaa
add
mov
aam
inc
xchg
pushf
mov
sub
in
mov
mov
ret
xchg
loop
mov
cli
and
add
xor
popa
clc
jbe
push
and
sbbb
dec
cwtl
in
nop
add
stos
and
jns
push
pop
aas
mov
test
rorb
cltd
pop
imul
cmp
loop
cwtl
notb
pushf
ja
inc
lock
mov
addr16
dec
and
out
and
test
addb
xchg
nop
pop
mov
out
cmp
jb
sbb
gs
fisttpl
push
ror
jae
mov
call
jae
jbe
call
jg
mov
and
pop
xchg
sub
inc
sahf
test
mov
pop
jno
jbe
jne
insb
hlt
xor
cltd
pop
jle
or
lods
mov
ror
aad
test
mov
or
pop
pusha
insb
mov
add
aaa
in
jo
lods
sbb
pop
outsl
loopne
add
out
mov
sub
out
lock
rcr
mov
pop
add
lods
pusha
inc
mov
adc
push
imul
and
mov
add
mov
pop
xor
mov
dec
dec
test
or
mov
ljmp
pop
outsl
imul
jge
dec
cs
and
sbb
mov
xchg
cld
adc
xor
xchg
out
xchg
fs
adc
enter
cld
mov
dec
inc
int3
add
and
out
or
add
sub
fs
fadds
and
mov
test
sbb
jo
fs
cmpsl
mov
les
cmp
or
les
loopne
or
push
add
add
mov
out
repnz
es
and
das
movsl
or
mov
stos
aaa
add
cmpsb
movsl
or
fs
adc
push
std
movsb
sahf
add
hlt
xchg
out
out
xchg
pop
adc
push
jmp
popa
pop
or
mov
push
add
mov
cld
js
mov
les
imul
lcall
sahf
add
aas
xchg
pusha
pop
jo
jp
rolb
popf
shll
add
popf
push
lcall
fstps
adc
das
mov
add
test
iret
xor
pop
mov
push
push
mov
mov
leave
aaa
mov
aam
lcall
inc
cwtl
mov
insb
inc
popa
pushf
jne
cmp
adc
enter
pop
add
flds
hlt
cwtl
xchg
adc
pop
add
daa
lret
sbb
mov
or
inc
push
cmp
sbb
not
pop
subb
dec
inc
shlb
outsb
scas
cli
cmp
add
mov
in
subb
jmp
fwait
or
pusha
xchg
fs
pop
imul
inc
cwtl
xchg
adc
and
inc
jns
or
or
data16
cs
and
jne
push
sub
adc
nop
push
sub
adc
aaa
loop
out
shr
pusha
cmp
divl
jo
hlt
fists
mov
in
lods
xchg
and
sbb
sub
int3
dec
dec
fsubrs
sbb
xchg
dec
leave
sub
rcrl
or
fildll
pop
js
call
cmp
cmpb
jne
mov
push
sar
dec
push
negb
aam
xchg
xor
sbb
dec
mov
test
mov
add
sahf
jge
cli
push
orl
insb
mov
sti
xchg
sub
jnp
pop
scas
pop
or
dec
xchg
add
push
stos
cmc
cmp
jbe
fcomi
add
and
mov
inc
das
int3
mov
pop
loop
enter
sti
ds
rclb
mov
loopne
xchg
jp
mov
sub
lcall
xor
dec
in
int
xor
daa
test
xchg
lahf
out
push
push
mov
inc
loope
sbb
imull
pusha
push
add
pop
std
mov
inc
es
ss
popa
jb
pop
add
adc
jge
ret
js
inc
or
sbb
ja
and
dec
jbe
rolb
rcll
inc
pop
mov
or
cmp
pushf
jo
lret
xor
cmp
cmp
shr
dec
lods
xor
pushf
lods
insb
pusha
movsb
inc
cs
add
or
jno
sub
mov
push
jb
js
or
adc
ffreep
xor
pop
mov
cmp
call
sub
scas
inc
rcrb
sub
inc
push
cltd
sub
push
clc
xchg
je
inc
in
repnz
mov
jle
mov
or
ja
xchg
xchg
out
add
icebp
xor
add
int3
sub
or
lods
dec
or
mov
push
enter
js
fistps
jl
xor
jae
cmc
leave
add
mov
sbb
dec
clc
inc
cvttps2pi
or
test
mov
jns
inc
inc
and
lods
and
dec
pop
movsb
push
pop
or
es
fdivs
daa
add
adc
and
stc
aas
cwtl
lods
inc
mov
xchg
js
and
add
and
xorb
cli
add
pusha
adc
divb
test
mov
inc
shrb
daa
pop
fadd
dec
test
scas
xorl
mov
movzwl
pop
dec
xchg
xor
or
outsb
add
sbb
cmpsl
inc
push
and
xor
ljmp
cmp
add
cmp
mov
fistpll
cmp
xchg
pop
inc
imul
push
hlt
insb
mov
bound
cli
xchg
jbe
dec
adcb
lock
out
adc
ljmp
fsubr
cmp
hlt
sub
mov
or
sbb
mov
add
cmp
mov
je
inc
push
cmpb
inc
mov
sbb
imul
shlb
sub
and
ds
mov
pop
add
add
dec
insl
or
add
dec
mov
jl
ja
dec
enterw
adc
mov
jnp
dec
jns
xor
shlb
xor
adc
add
gs
rcrl
das
cwtl
sbbb
enter
adc
nop
data16
loope
and
out
and
add
xchg
pop
cmp
movsb
mov
inc
dec
lds
xlat
ds
add
mov
pop
test
sbb
xchg
add
cs
push
adc
mov
sbb
and
add
repnz
loop
fimull
or
inc
out
jne
rorl
push
dec
push
fadds
jnp
daa
push
shrl
adc
sub
push
cwtl
rolb
test
mov
pusha
mov
mov
in
or
fsubs
lock
lods
inc
in
add
mov
hlt
stos
mov
jle
xchg
fsubl
in
add
in
or
mov
mov
test
loopne
or
mov
nop
add
mov
sbb
and
ds
sbb
ret
adc
sbbb
ds
dec
repnz
sbb
mov
cld
ds
pop
mov
testl
sub
ja
add
sahf
or
pop
jne
xchg
aad
or
enterw
orb
fistps
cmpsl
sub
add
pop
out
call
pop
popa
sub
addr16
adc
add
shlb
mov
nop
xor
fwait
add
xor
ss
add
inc
inc
shrb
out
sbb
mov
iret
add
add
movsl
or
xlat
dec
add
pop
add
inc
outsb
sub
push
decl
inc
mov
aad
xor
xor
pop
inc
pop
cli
inc
add
sub
fstps
jne
clc
mov
loope
imul
outsb
int
fldt
jmp
notb
jne
add
adc
imul
imul
fwait
adc
cmp
mov
pop
sbb
addl
add
sar
inc
jo
mov
jl
xchg
popf
push
mov
jnp
mov
shlb
loopne
mov
add
out
xchg
mov
pusha
and
shr
xor
cmp
push
popa
add
jo
inc
push
adc
fsubl
inc
aam
sbb
push
xor
jo
aad
sahf
sub
cmp
les
in
inc
adc
push
pop
xchg
int3
divl
push
popa
add
mov
loopne
imul
push
hlt
stc
mov
add
add
xlat
mov
and
mov
mov
or
push
leave
in
sbb
add
dec
nop
or
shrb
jns
add
jecxz
in
mov
cmp
insl
jle
sbb
or
and
lds
cmp
cs
outsl
xchg
sbb
mov
mov
js
aam
in
mov
pop
fcmovnb
add
add
lahf
sti
pop
push
sbb
ror
imul
jp
dec
mov
mov
pop
pop
imull
mov
movsb
incb
xchg
add
adc
jne
jge
inc
pop
or
xor
lea
repz
ret
inc
je
outsl
pop
insl
add
or
es
nop
cmp
pusha
mulb
fwait
mov
dec
add
jno
out
lods
out
lahf
aam
insb
push
nop
cs
dec
jb
loope
sbb
in
and
adc
inc
test
lods
adc
mov
cld
cmp
sbbb
push
push
jno
fildl
and
scas
ds
jl
jp
push
roll
sti
inc
out
mov
sub
cmpsb
or
push
jle
and
xchg
adc
dec
adc
or
popf
dec
lahf
and
jbe
xorb
mov
add
sbb
out
imul
or
mov
and
cwtl
hlt
aam
cmp
ret
andb
cmpb
pop
jecxz
popf
push
xchg
cltd
cmp
rolb
or
imul
add
push
fs
or
cmp
inc
add
xchg
call
pop
imulb
movsl
in
add
jecxz
gs
jns
mov
cmp
pop
add
popf
dec
lock
ds
aaa
dec
icebp
shr
es
push
pop
cmpsl
aas
cmovo
xchg
push
inc
aam
mov
dec
popa
pusha
subb
std
xchg
add
mov
xlat
out
and
loope
mov
fcomps
add
and
sahf
out
cs
pushf
inc
push
loop
test
inc
pop
sub
cltd
std
inc
pusha
mov
in
sub
ss
add
in
push
insl
scas
movl
mov
test
pop
dec
sbbb
cmp
dec
arpl
pop
sbb
lods
pop
or
andb
xor
jecxz
lods
test
cmpsb
sub
and
gs
add
les
pop
out
push
or
add
dec
mov
out
loopne
adc
and
jno
cmp
test
xchg
and
mov
movsb
sti
ret
in
mov
scas
lret
enter
dec
cwtl
dec
mov
imul
dec
and
xchg
in
xchg
dec
test
pop
call
inc
out
jns
cltd
fs
dec
mov
inc
dec
mov
push
int3
push
mulb
ja
in
pop
orl
pop
lods
push
cmp
lret
mov
add
pop
out
test
xchg
push
int3
jne
gs
or
inc
mov
and
fildl
or
mov
sti
pop
add
pop
push
int
xchg
mov
add
lods
mov
mov
xorb
shlb
push
shl
dec
insb
jecxz
mov
outsl
and
dec
and
into
pop
in
div
mov
or
add
dec
sbb
add
loope
in
dec
ss
xchg
push
mov
cs
add
pop
push
sub
or
and
out
cmpb
movsb
mulb
cwtl
test
inc
mov
or
and
iret
sub
test
push
xor
sbb
mov
or
rclb
fsubrs
arpl
pop
push
rcr
cmp
adc
out
inc
fsubl
and
shrb
data16
mov
xchg
fcomip
add
std
cltd
shrl
adc
daa
loopne
fnstcw
push
push
cmp
icebp
jbe
loop
pop
or
pop
adc
jo
pop
and
add
adc
add
das
push
xor
push
aaa
lods
fnstsw
add
jg
mov
fldl
ljmp
jg
add
stc
fisubrl
add
loope
mov
or
xlat
adc
stc
mov
or
inc
in
fisttpl
clc
dec
popf
loop
push
mov
jb
roll
movl
jge
and
into
or
add
es
shll
pop
sub
clc
mov
add
push
ret
sbb
pop
enter
or
in
dec
scas
addr16
outsl
scas
jnp
add
out
dec
dec
scas
add
or
mov
test
ret
adc
loopne
add
pushf
xchg
cli
rcr
jp
add
add
aam
outsl
add
add
cmpsl
mov
adc
adc
dec
adc
mov
aas
nop
add
adc
addb
push
int3
mov
enter
jae
arpl
push
pop
sub
push
cmp
sahf
add
and
out
push
sbb
mov
ret
or
fadds
lret
adc
xchg
int3
xor
xchg
jp
inc
sbb
inc
pop
outsl
dec
sbb
and
mov
fadds
mov
dec
pop
in
cmpsl
fisttpll
jns
pop
fisubs
dec
push
xchg
pusha
ss
mulb
xlat
adc
or
ret
mov
out
inc
repz
aad
int
add
dec
jp
fisubs
cmp
or
add
add
pop
loopne
rcrl
sbb
xchg
sahf
push
hlt
add
shll
xor
lods
std
mov
pop
or
pop
decb
dec
add
scas
negl
inc
jecxz
sub
mov
hlt
sub
sbb
add
nop
inc
lock
loop
adc
cltd
lahf
mov
out
arpl
divl
cmp
rsqrtps
adc
add
add
sti
movsb
mov
sbb
rol
mov
add
rolb
and
add
pop
jns
cmpsb
sub
lret
add
loop
or
push
clc
fsubl
add
sub
xchg
add
rcll
xor
jno
fsubrp
iret
adc
inc
add
aaa
jmp
add
scas
sbb
ret
jo
mov
sub
add
or
push
xor
jbe
xchg
inc
sarb
repz
jecxz
xchg
sub
inc
hlt
mov
testb
cmpsb
sub
push
sbb
pusha
wrmsr
lret
clc
in
insl
out
add
jnp
and
inc
inc
insb
out
add
mov
or
add
push
insb
jb
add
loope
pop
xor
repnz
sub
mov
ret
loopne
mov
mov
rol
leave
mov
pop
mov
adc
sub
orb
fadds
ja
call
shlb
outsb
sub
jbe
push
and
cmp
stc
ja
aas
add
test
dec
leave
pop
nop
mov
add
push
or
add
inc
xor
add
jbe
add
xchg
das
adc
mov
mov
cli
add
xchg
xchg
out
jp
add
inc
sbb
fistps
mov
rorl
je
sbb
pop
add
adc
cmp
jne
add
pop
rolb
orb
mov
push
outsl
add
xchg
xchg
push
mov
cmpsb
sti
lods
dec
jp
data16
ds
push
call
jmp
sub
movsb
or
test
and
inc
shll
lock
loop
mov
mov
mulb
adc
cmpsb
dec
add
addr16
test
mov
lock
jnp
icebp
jo
iret
or
enter
push
add
mov
shlb
sbb
enter
loop
add
jle
jmp
stos
aad
cmpb
pop
add
pop
push
mov
add
add
adc
repnz
add
movsb
dec
into
fildl
push
add
cs
and
es
cmp
fs
clc
fsubrs
add
insb
inc
dec
inc
mov
ds
mul
fcoms
in
mov
clc
int
jne
gs
push
lds
out
add
jmp
rorb
jl
mov
xor
jg
ja
in
or
sbb
inc
adc
idivb
push
push
xor
xchg
jo
out
bound
out
push
daa
cmp
cmpsl
sti
add
cmpsb
scas
das
pop
gs
dec
fsubl
sbb
divb
cmpsl
jp
inc
sub
mov
es
add
in
push
movsb
add
pop
aad
sahf
mov
add
cwtl
mov
pop
cli
add
jns
pop
add
lods
jae
add
xchg
test
imul
mov
sbb
lret
push
xchg
add
lock
in
cmp
add
mov
lds
in
imul
jle
pop
sbb
dec
daa
dec
xor
jle
jo
nop
cmp
in
jmp
outsl
adc
jg
test
pushf
out
and
sbb
das
add
shlb
add
loop
cmp
in
sahf
ljmp
pop
xchg
or
scas
jae
jnp
leave
sub
test
cld
adc
enter
je
add
push
push
inc
fs
cmpb
lret
out
mov
push
add
mov
mul
or
add
dec
and
jle
jle
add
mov
add
push
negl
or
sti
aad
and
add
push
rol
addr16
dec
lret
add
fstl
or
enter
jbe
lock
int3
aaa
and
leave
add
cmpsb
repz
dec
sbb
pop
and
and
imul
testl
fnstsw
xlat
jnp
sbb
mov
out
mov
push
lret
movsb
push
fdivs
daa
or
cmpsl
mov
rcrb
ret
push
push
push
es
mov
pop
stc
mov
or
dec
clc
pop
or
pop
mov
xor
dec
loope
add
add
sahf
add
outsb
mov
idivl
adc
cmp
loop
mov
or
push
inc
adc
repz
and
add
popf
jmp
jge
cmp
jno
ja,pt
xor
and
lods
scas
pop
icebp
or
lods
clc
rcl
ds
inc
cwtl
xchg
fdivs
mov
jbe
popf
imul
mov
cmp
mov
mov
das
fcomi
mov
xchg
repnz
xchg
hlt
out
loop
push
rcrl
and
data16
add
sub
cwtl
and
cmc
jo
shll
xchg
jnp
lret
add
mov
xchg
add
in
jo
xchg
xchg
mov
adc
inc
mov
push
int
lock
or
add
loopne
push
cmp
pusha
nop
jns
mov
jl
push
rorb
mov
repnz
xlat
nop
xor
add
cmp
mov
jnp
shl
nop
popa
add
pusha
test
fcomps
dec
incb
fucom
jbe
mov
xor
push
pop
es
cmp
lods
sarb
jns
cmp
outsb
or
xchg
insb
lds
add
aad
push
mov
loope
lock
xchg
dec
and
add
scas
mov
sbb
out
push
out
fld
mov
lret
jle
add
inc
mov
std
add
call
add
xor
add
push
dec
cmp
fs
pop
add
imul
mov
add
mov
sbb
in
push
add
mov
and
mov
je,pt
add
xor
lahf
push
dec
mov
test
das
lock
lock
jg
add
jo
ds
mov
add
mov
aaa
xchg
push
fstpl
addr16
shlb
or
jle
mov
push
shll
mov
add
mov
movsl
inc
add
std
in
dec
add
ljmp
xor
dec
add
ss
imul
add
add
xchg
test
test
insl
cli
push
js
add
xlat
inc
les
add
mov
pushf
push
stos
pusha
hlt
dec
or
lods
mov
adc
les
stc
ds
scas
out
jbe
dec
mov
shrb
jno
and
inc
add
out
xchg
iret
out
mov
dec
ja
mov
xchg
subb
inc
mov
add
and
push
lock
add
adc
lock
sub
arpl
sahf
mov
int
pop
or
jecxz
xor
and
lahf
out
addl
add
push
in
add
clc
inc
and
scas
push
cmp
rclb
mov
es
pop
xor
jne
add
or
and
xchg
scas
add
add
call
xchg
pop
push
or
jno
add
repnz
imul
xchg
outsl
clc
sub
xchg
xor
cmpl
fmul
cmpb
add
xchg
push
div
mov
repz
mov
dec
and
cmp
xchg
jno
add
adc
cwtl
and
push
test
lods
xor
sbb
loop
dec
inc
mov
pop
add
xor
roll
mov
push
pop
add
xchg
xchg
push
and
lcall
sbb
inc
fiaddl
inc
inc
mov
push
fsubs
imul
repnz
movsl
xchg
cltd
and
stos
add
cmpb
ds
mov
lods
into
das
adc
shlb
add
stc
test
cli
xlat
outsb
adcl
push
sbb
mov
mov
testl
ret
xor
sub
lahf
sarb
cmp
add
pop
hlt
jecxz
mov
sahf
int
movsl
xchg
test
adc
jp
sbbb
dec
add
loop
adc
xor
jg
in
sbb
add
mov
jg
add
sbb
rcrb
sbb
in
lret
rorb
mov
pop
mov
lret
push
insb
add
repnz
gs
dec
orl
push
push
fcoms
pop
clc
push
add
stos
mov
add
cmp
fisubrs
push
aam
sub
rorl
add
aaa
bound
sub
or
arpl
mov
mov
add
test
out
add
xor
loop
add
pusha
or
push
and
bound
cmp
cmp
mov
sub
pusha
out
in
fwait
adc
pop
cmp
lahf
insb
inc
xorb
add
ret
in
push
out
loope
add
add
adc
pop
sbb
mov
lock
fdivrl
sub
loope
cmp
fbld
int
pop
pop
xor
sti
sbb
pop
inc
cmpsl
push
push
notb
notl
xchg
outsl
cmpl
push
jo
xlat
add
add
jg
push
int
ret
test
test
dec
lret
sahf
out
push
or
or
and
push
movsl
testb
dec
add
sub
sub
mov
sub
add
jnp
movb
sti
out
mov
dec
ret
mov
ret
adc
gs
orl
mov
repnz
add
fs
and
adc
mov
cld
cmovs
aad
mov
and
jb
test
cmpb
cmp
repnz
lret
push
push
ficoml
fldl
iret
sbb
push
es
aam
add
pusha
fiaddl
jecxz
jl
movsl
cmp
mov
lcall
add
push
mov
mov
por
cmp
adc
xchg
add
mov
dec
repnz
add
push
loopne
out
iret
jb
sbb
adc
sahf
out
add
cmp
or
mov
mov
ret
or
jle
in
in
popf
call
push
scas
push
enter
movsl
fsub
dec
add
mov
pusha
loopne
sarb
mov
int
xor
movsl
push
jbe
add
adc
sbb
repnz
pop
out
add
andb
and
outsb
pop
cmp
pusha
adc
mov
jle
test
filds
xor
lret
in
xchg
pop
inc
idiv
in
adc
or
aam
cmp
shrb
std
push
scas
adc
and
add
xchg
xchg
and
xorl
push
jmp
filds
es
fcomps
adcb
aas
pop
xchg
mov
push
mov
addb
dec
iret
adc
adc
mov
pop
push
cwtl
lahf
or
das
icebp
insl
call
lea
inc
sti
sbbb
add
mov
movsb
jg
and
jns
adc
sarb
insl
sbb
push
sub
adc
or
add
test
or
sub
jg
subl
ja
aaa
mov
adc
jb
in
in
imul
fwait
rclb
popa
arpl
add
push
mov
fldl
insl
xchg
clc
sub
add
mov
sbb
xor
hlt
jne
push
loopne
or
xorl
call
js
es
cmp
subb
mov
test
stos
loope
addr16
movsl
add
test
mov
dec
int
jne
or
lods
mov
in
shlb
icebp
les
ljmp
sub
mov
cld
inc
cmpsb
fwait
bound
add
pop
sub
xchg
ret
cmpsb
popa
pusha
dec
pusha
add
push
add
dec
subl
adc
inc
and
or
jmp
add
test
pop
cld
xchg
pop
leave
add
fldl
lea
aaa
test
shll
xor
sub
mov
sbb
add
lods
aad
in
dec
enter
or
add
iret
dec
cli
jno
add
sbb
clc
fildl
lds
add
in
out
sbb
aad
mov
into
loope
in
mov
or
call
aas
mov
add
jne
iret
notl
add
pop
shlb
jne
mov
mov
sub
and
jl
in
or
cmp
pop
out
lcall
addl
push
mov
add
fnstsw
je
mov
add
mov
loopne
or
mov
rclb
lods
mov
add
test
xor
bound
inc
sbb
mov
inc
ja
fsubrs
loope
jg
scas
xchg
cmp
inc
push
lahf
xchg
shrb
push
mov
in
and
pop
jo
sbb
xor
cmp
add
das
testb
pop
daa
xchg
cmpsb
std
sbb
sub
xor
testb
addb
jl
int
mov
shr
clc
out
pop
add
add
out
cmp
jo
idivl
mov
cmc
cmp
sub
lea
outsw
sbb
mov
xor
mov
inc
adc
fimuls
xor
addr16
lret
xor
pop
shlb
jne
inc
cltd
cmp
inc
lret
add
iret
ja
add
or
ret
pop
add
js
jecxz
xchg
push
mov
xor
loopne
in
sti
in
shl
mov
cmp
xor
jns
add
and
dec
add
fildll
add
xchg
ss
leave
mov
add
std
stos
or
add
adc
dec
sar
lods
sbb
fcomps
sahf
shr
add
pop
pop
aad
add
mov
add
jne
mov
or
jo
nop
and
adc
add
cmp
lahf
test
add
imul
mov
xor
jmp
leave
cltd
jge
add
adc
dec
cmp
jmp
cmp
clc
jg
and
popa
cs
test
ret
or
jecxz
add
test
push
cmp
enter
inc
lods
out
scas
or
inc
xchg
std
jg
mov
test
jge
add
fyl2x
mov
add
add
sub
xchg
int3
sbb
into
outsb
inc
pop
fsubrl
jb
mov
or
push
jbe
cmp
xchg
add
adcb
mov
pusha
movlps
je
add
cmp
xchg
add
xorl
pop
hlt
jl
jno
jb
fwait
add
xchg
push
add
push
sbbl
jo
mov
aad
insl
jnp
add
les
testb
dec
lahf
mov
inc
cmc
or
pop
je
xchg
icebp
cmp
and
ljmp
jns
lock
or
xchg
or
adc
lock
xchg
adc
incb
add
dec
pop
cli
inc
xchg
andb
gs
mov
add
rcrl
xor
fs
jecxz
pop
sti
call
xor
mov
mov
mov
xchg
inc
lea
es
pushf
sub
lcall
cwtl
sub
xor
loopne
pushf
fsubs
xor
pop
sbb
mov
rcll
ret
sbb
std
leave
decb
mov
add
cwtl
imul
add
cmp
inc
mov
or
pusha
and
mov
mov
lods
loop
enter
add
pop
rolb
pop
pinsrw
mov
cltd
or
cmpsl
incb
mov
in
add
aaa
mov
add
aad
jmp
push
fadds
rolb
push
push
testl
xor
mov
sub
cmpsl
cmpsb
add
add
stos
divl
pop
iret
add
jnp
xor
popa
add
or
push
xchg
push
add
in
sbb
xchg
dec
push
pop
dec
mov
or
sarl
cld
add
add
in
add
adc
fwait
dec
cmp
je
adc
out
pop
inc
aaa
push
inc
inc
lahf
cli
mov
and
cmp
clc
push
sarb
dec
adc
loopne
iret
sub
fidivl
loopne
dec
and
mov
xlat
xor
outsl
data16
scas
clc
stc
pop
sbb
jns
insb
mov
std
pop
xchg
add
pop
jle
or
gs
dec
sbb
jmp
rolb
fildl
test
outsb
inc
add
bound
add
add
insb
loop
mov
int3
mov
repnz
add
fsts
dec
jp
lret
pop
jg
inc
mov
jge
das
mov
mov
hlt
mov
adc
mov
adc
pop
or
ret
adcb
mov
inc
sbb
cmp
sub
pop
imul
mov
loopne
mov
push
dec
in
adc
ja,pn
dec
repz
xor
fiadds
pusha
ljmp
addb
hlt
jo
stos
xchg
cwtl
xor
cmp
add
sub
sbb
pop
dec
mov
cs
jnp
sub
mov
sahf
pop
arpl
xor
push
jmp
add
aas
pop
jbe
scas
push
cld
andl
inc
nop
call
adc
mov
rorl
ret
inc
and
cmp
jns
push
jno
in
adc
lods
shrb
add
sbb
and
sub
mov
sub
sbb
jno
loopne
dec
add
idivb
ffree
pop
out
aam
fisubs
popa
cmpsl
mov
testb
cmp
and
fwait
mov
sub
icebp
xor
cmp
push
out
popf
push
lret
xorb
jno
cmp
sbb
mov
daa
fstpl
dec
scas
sub
movsb
add
add
loopne
fnstsw
jae
and
cmp
or
sub
or
mov
push
mulb
jl
lds
lods
subb
clc
orl
fistps
add
add
lods
add
lcall
popf
mov
sahf
add
cmp
xchg
loopne
mov
movl
pop
sbb
cld
jns
andps
adc
inc
jb
sub
add
mov
pop
je
add
dec
sub
add
sub
and
add
shrl
inc
into
add
push
xchg
addl
xor
add
xchg
gs
mov
les
push
rorl
push
cld
cmp
pushf
inc
adc
add
aas
outsl
insb
loopne
and
jmp
cmp
xor
lahf
xchg
sbb
inc
mov
mov
cmp
dec
or
lods
jle
push
mov
mov
add
mov
cmpsb
ret
and
in
js
leave
adc
fidivrs
lahf
cltd
mov
out
add
xor
pop
jbe
sbb
xchg
inc
lods
add
cli
mov
add
in
add
xchg
arpl
fcomp
imul
aad
out
add
jp
jg
insl
enter
bound
pop
xchg
xchg
stos
ret
sbb
pop
hlt
mov
outsl
jnp
pop
jne
sbb
and
push
data16
push
or
mov
in
subb
pop
or
add
jne
jno
push
jmp
adc
test
sub
lahf
pop
adc
add
outsb
lret
into
xchg
mov
add
test
enter
shlb
loope
sbb
out
hlt
pop
add
out
pop
pop
jmp
push
inc
jae
xorb
or
add
ja
jle
add
ret
sub
cmc
xchg
test
das
pop
jl
out
lcall
ja
xchg
or
pop
cmp
ret
pop
out
and
mov
sbb
cld
push
cmp
mov
cmp
jae
lock
and
lock
add
aas
in
pusha
sub
out
jns
add
xchg
in
pop
sbb
inc
jp
out
push
xor
pop
xchg
adc
enter
jl
add
outsl
das
or
sbb
orl
xchg
fdivrl
cld
mov
push
xor
mov
add
mov
iret
aam
pop
out
cmp
pop
and
es
rorl
ret
jl
add
sbb
xchg
jno
add
lret
mov
pop
push
cwtl
inc
sub
pop
fcomps
add
adc
fldl
gs
mov
xchg
pop
add
mov
test
and
adc
mov
lods
sbb
mov
dec
shlb
sub
lods
jne
fs
mov
or
fisubs
xchg
push
pusha
mov
fwait
cli
dec
or
bound
dec
lret
mov
and
push
adc
pop
cmpsb
add
dec
or
ret
das
lcall
add
sub
xchg
lret
add
mov
jno
lcall
xchg
out
cmp
enter
push
testb
ficomps
loope
sub
loop
popf
add
sbb
jno
stos
popl
pusha
lds
pop
push
or
hlt
add
inc
and
dec
add
stos
lods
xchg
cmp
push
roll
cmc
jnp
inc
add
loop
pop
add
xorb
add
stc
pop
dec
or
les
push
adc
outsl
add
and
mov
add
out
clc
sub
scas
add
sarl
dec
jecxz
sbb
mov
add
push
fldl
cli
push
adc
jo
add
jp
xor
inc
xchg
xchg
imul
je
dec
or
xor
loop
push
pushf
in
add
aas
cld
pop
sub
jp,pn
mov
jg
sbbl
jnp
jle
pop
lret
xor
and
adc
cmp
push
xchg
fsub
mov
inc
inc
dec
mov
shlb
add
aaa
ficoml
nop
add
add
jp
pop
leave
bound
push
int
or
mov
inc
in
ds
push
add
and
xchg
ja
inc
addr16
push
add
mov
add
cmp
in
repnz
lret
mov
dec
gs
cwtl
mov
cmp
inc
jmpw
dec
lret
dec
ljmp
imul
rcl
add
push
fmuls
add
aad
adc
mov
xchg
or
inc
call
idivl
lods
incl
leave
shld
cmc
test
fs
and
mov
jb
setge
cmp
nop
lods
lds
int
fdivr
jmp
inc
dec
inc
or
dec
mov
out
sbb
jae
pop
and
fsubs
enter
push
add
hlt
lahf
popl
call
adc
sbb
ss
add
call
popf
sbb
rorl
loope
arpl
add
cmpsb
push
jg
add
jecxz
and
clc
xor
add
jmp
jecxz
fldcw
lock
sbb
scas
js
adc
fiadds
lods
mov
cld
jecxz
fsubl
loope
pop
pusha
mov
shlb
or
dec
cwtl
xlat
popf
cltd
addr16
out
clc
fsts
xor
mov
xor
xchg
and
call
scas
inc
pop
and
outsb
in
sub
inc
mov
add
es
negb
fnstsw
loope
sub
pop
mov
adc
mov
ret
mov
test
or
ficoms
push
dec
subb
add
push
dec
push
mov
movb
sub
dec
pmullw
add
int
cmpb
movsl
add
cmpb
lds
pusha
and
js
push
lock
les
movsb
in
push
or
xor
stos
lahf
pusha
rolb
adc
call
adc
jle
jns
jo
lea
cmp
pusha
fisttpl
mov
mov
outsb
test
bswap
push
divl
mov
cwtl
add
out
dec
add
rolb
movsl
mov
enter
mov
out
add
mov
inc
cld
es
or
push
dec
xchg
cli
in
xchg
cmp
add
mov
sbb
add
pop
add
mov
lret
dec
add
ds
add
addl
and
aaa
cmc
pusha
add
xlat
push
test
shlb
je
jno
or
int
adc
fs
scas
mov
and
add
outsb
int3
bound
xor
add
xchg
cmp
imul
cmp
dec
add
scas
popf
and
loop
add
test
cmp
test
cmpb
push
add
outsb
push
mov
mov
in
cmp
lea
mov
lds
dec
jge
icebp
jno
pop
ljmp
xor
sub
int3
or
shlb
mov
and
add
cmp
inc
dec
mov
into
add
jmp
pop
add
mov
pop
mov
jo
and
les
popa
inc
push
push
sub
mov
pop
mov
shl
sbb
mov
xchg
mov
stc
sarb
pop
pop
sbb
clc
loop
mov
jge
aad
add
dec
and
lds
fbld
stos
sub
lock
mov
pop
adc
add
call
inc
add
sbb
xchg
sbb
or
lods
shll
aaa
addps
loopne
adc
inc
push
add
ret
shll
inc
arpl
add
mov
lret
pushf
subl
cmpsb
cwtl
xor
add
jns
add
imul
in
mov
xor
or
add
sbb
aaa
xchg
data16
daa
fstpt
ljmp
xlat
add
cs
sub
xchg
insb
outsl
incb
mov
add
imul
pop
pop
ds
xor
jns
stos
insl
dec
ficomps
int
mov
jae
sahf
add
pmaxsw
add
cmpsl
gs
adc
jbe
add
xchg
sahf
mov
xchg
call
movl
jae
xchg
call
movsl
fimull
fs
add
ds
and
outsb
sbb
push
repnz
mov
mov
test
sub
es
add
rcll
cwtl
je
and
push
xorl
sarb
add
inc
pop
adc
add
mov
lock
mov
push
aam
xchg
std
clc
cltd
add
dec
inc
mov
mov
jno
add
data16
and
addr16
and
pop
loopne
add
popf
jp
das
dec
push
xor
mov
add
push
je
insl
aaa
icebp
adc
or
push
gs
idivb
in
jns
xor
mov
xor
lock
test
xor
imul
jecxz
jp
loope
int
mov
in
stos
pop
sti
aas
xchg
mov
shll
add
jnp
sub
test
inc
in
sbb
add
test
jb
jae
push
fcoml
jge
and
add
or
pop
fsubrs
divb
push
test
jns
dec
int
std
jge
xchg
imul
pop
sbb
movsl
pop
add
sbb
insl
iret
pop
cmp
loop
insb
rol
mov
or
enter
push
jp
push
inc
popf
nop
mov
inc
daa
cmp
subl
adc
cmp
add
into
movlps
xor
inc
aam
and
add
insb
jo
stos
clc
inc
cmc
hlt
and
pusha
fs
ficompl
cmpl
fmuls
es
pop
pop
add
push
scas
lahf
add
mov
xchg
mov
aad
insb
jo
mov
inc
subb
jbe
inc
xchg
mov
pop
mull
fstps
add
adc
sub
sbb
dec
push
add
cmp
test
pop
call
mov
xchg
xor
inc
imul
stos
push
leave
sbb
mov
add
jmp
adc
and
mov
pop
inc
xchg
xor
jge
push
xor
add
push
lods
pop
fwait
jmp
loopne
adc
push
inc
jae
pop
in
imul
icebp
clc
sbb
mov
cmp
fs
addb
loopne
mov
data16
add
cmp
frstor
arpl
jo
adc
inc
int
lds
and
xchg
adc
sbb
inc
or
or
out
daa
mov
stos
inc
lods
sbb
and
mov
dec
xchg
lahf
mov
jp
push
rolb
dec
or
mov
es
imul
add
insb
mov
cmp
xor
jp
cmp
imul
push
lods
xor
pop
xor
add
mov
add
jle
mov
je
jns
pop
inc
mov
imul
outsl
xor
and
mov
lods
ret
les
movsl
inc
add
cmpsb
negl
and
dec
test
and
mov
mov
ret
imul
sbb
jp
cltd
push
ja
sbb
cmpsb
mov
adc
push
les
pop
xchg
cmp
daa
pop
shlb
sti
add
fmull
add
push
int
test
mov
bnd
lock
add
cmp
mov
imul
add
dec
pop
xor
test
divl
roll
rcl
andb
or
jecxz
sub
aas
cmpsl
testl
add
sbb
das
aam
xchg
add
fisubrl
add
lods
sub
dec
cld
jo
jp
in
daa
testb
fs
sub
pop
lods
adc
imul
xor
or
mov
addb
adc
or
xor
adc
pusha
inc
cmp
jne
cltd
jl
xor
cmp
fdivrl
dec
pop
jns
enter
xor
cmpsb
fdivr
inc
push
jb
adcl
xchg
faddl
inc
adc
ss
xorb
cmpsb
fistpl
mov
je
std
pop
or
out
add
mov
dec
add
mov
xor
in
add
das
stos
xor
divl
or
and
cmp
sarb
add
add
xchg
mov
xor
lock
sub
or
jmp
lret
pop
out
pusha
adc
fistps
mov
ss
sub
in
adc
test
in
lock
pop
lahf
mov
loope
xchg
jmp
lods
mov
sahf
add
arpl
xchg
jno
loopne
aam
xor
fs
sbb
add
xchg
test
push
jnp
out
gs
daa
fistpl
mov
call
inc
pop
lret
out
adc
loope
push
repnz
cmpl
jle
sub
divl
dec
add
pop
jne
xor
pop
dec
add
out
xor
jge
inc
jp
fsubrs
inc
add
cs
imul
sub
dec
add
in
xchg
ror
stos
pop
add
notb
pusha
subb
movsl
and
in
mov
xchg
pusha
add
icebp
mov
sub
mov
pop
add
andl
std
cld
mov
movsb
loopne
push
jge
pop
add
and
das
add
lock
ds
enter
mov
and
and
adc
and
subl
inc
sarl
mov
jns
std
adc
mov
sub
xchg
xchg
sub
inc
test
les
addr16
test
sub
add
sub
test
add
lcall
add
sub
into
ret
aaa
loopne
movl
lcall
lret
out
cmp
xchg
mov
mov
mov
test
call
ds
das
push
pop
jo
add
add
ret
sbb
in
add
std
mov
mov
xchg
xor
add
push
sub
arpl
add
pushf
popa
cld
xchg
in
fcoml
mov
sub
enter
xor
out
and
es
dec
add
loop
ret
jge
nop
cmp
mov
ffreep
xor
and
js
add
das
arpl
add
fidivrs
aaa
add
ljmp
cltd
add
out
jbe
xor
add
mov
sub
dec
jmp
add
dec
add
in
cli
xchg
push
sahf
aam
aad
add
inc
push
mov
sarb
dec
js
push
sbb
popf
jo
jns
add
imul
jbe
cwtl
mov
nop
xchg
cli
inc
xchg
rcr
jp
rorl
jb
je
mov
enter
xchg
pop
scas
roll
or
insl
pop
xor
sbb
clc
sarb
push
in
xchg
xor
aas
cmpsb
push
fmuls
leave
mov
or
or
inc
adc
jno
lahf
push
sub
mov
movsb
mov
adc
daa
add
cltd
pop
and
add
jle
jp
push
add
mov
add
push
fiaddl
dec
ds
mov
jmp
dec
popf
cmpsl
inc
add
prefetcht1
sub
jnp
int3
mov
jbe
js
rol
lock
lret
sbb
rcll
out
clc
add
cli
rcr
les
add
stos
jp
loopne
push
cmp
jg
push
incl
pop
mov
and
mov
ret
sbb
xchg
ja
cmpb
lods
cmpsl
mov
testl
adc
add
or
or
push
adc
or
scas
inc
clc
lcall
mov
xor
mov
mov
mov
xorl
adc
add
lods
es
xchg
mov
insl
push
int
add
pop
fdivl
or
pop
mov
lret
and
mov
psubsb
mov
aas
push
cmp
xlat
or
sahf
push
xor
out
inc
lods
scas
add
and
int3
sbb
push
push
pop
test
add
pop
add
add
or
mov
add
push
jecxz
xchg
lret
or
adc
rcrb
movsb
inc
add
hlt
inc
xchg
push
push
loopne
add
loope
adc
add
ret
jns
adc
push
mov
in
icebp
es
hlt
add
ja
mov
inc
add
sbb
add
loope
rolb
das
push
adc
mov
adc
sbb
aaa
sbb
lcall
mov
inc
je
scas
push
add
cmpb
lahf
pop
mulb
or
and
and
rclb
pop
or
mov
sub
roll
lret
pop
push
cltd
pop
push
aam
jo
xor
dec
and
push
fwait
repz
sbb
cmpsb
cmp
xor
add
aad
jo
jns
hlt
add
xor
pop
push
mov
arpl
insb
mov
fcoml
les
jne
jno
pop
pop
clc
mov
add
xchg
push
add
lret
sahf
add
lea
mov
dec
clc
shlb
or
imul
or
std
add
scas
sub
aaa
push
fmul
hlt
jmp
mov
push
fcomps
add
add
mov
imul
cmp
adc
loopne
or
jb
stos
sidtl
xor
mov
pop
push
add
sbb
test
cmp
lea
daa
fadds
dec
js
stc
add
test
cld
cmp
sub
push
and
mov
mov
adc
add
iret
inc
mov
cmp
pop
out
cmp
cmp
or
add
fsubrl
inc
icebp
addl
je
sub
test
xor
add
dec
shlb
addl
icebp
adc
xchg
add
mov
pushf
pusha
add
mov
pop
fwait
sbb
inc
subb
loope
mov
add
lret
xor
lds
cld
mov
mov
arpl
or
lock
andb
pop
fchs
and
xor
nop
inc
outsb
mov
add
movb
xchg
xchg
fwait
aad
or
add
insb
pop
ja
gs
add
adc
jo
push
or
pop
add
lcall
sbb
fadds
add
jp
inc
lea
xchg
cmp
pusha
mov
movsl
jg
hlt
xor
inc
adc
add
js
cwtl
cwtl
add
sbb
pop
or
pop
add
inc
stc
xor
popf
adc
add
fucomi
jo
or
rorb
add
xchg
jp
sar
fucom
fadds
imul
clc
int
xchg
add
gs
sbb
scas
mov
add
sets
cwtl
push
inc
mov
add
jbe
sbb
aad
xor
leave
jecxz
out
ret
imul
add
outsl
fcoms
sahf
adc
add
lock
pop
out
sbb
fstl
adcb
cmp
rorl
notl
notb
ja
les
std
mov
test
lcall
sbb
xchg
ret
xchg
sub
testb
adc
scas
lahf
pop
add
jnp
lods
mov
cmpsl
add
stos
repnz
push
or
push
loope
lea
rdpmc
jno
xchg
stc
loopne
pop
pop
rorl
mov
pusha
mov
lret
sub
and
shrb
imul
mov
sahf
pop
pop
jecxz
inc
cmp
lret
sbb
xchg
mov
outsl
test
jo
push
add
popa
xor
stos
or
pusha
jo
loopne
popf
sbb
movsb
add
lea
cs
add
add
mov
and
lods
xor
mov
and
adc
pop
sets
jnp
sbb
mov
sub
cmp
fs
add
jno
popa
test
icebp
popf
fildll
sbb
ret
pusha
rclb
sub
lea
lret
cmp
aad
in
ss
add
add
cmpsl
xor
enter
pop
add
mov
repnz
add
icebp
imul
cmp
incl
add
mov
and
nop
cmp
nop
lods
and
cmp
rorb
xorb
loopne
dec
loope
add
sarl
add
xchg
xor
lcall
repnz
pop
pop
and
rcr
mov
roll
ljmp
sbb
ret
pop
xor
and
push
clc
and
pop
add
insb
test
dec
push
add
lret
int3
clc
scas
stos
pop
push
aas
add
or
inc
push
jp
mov
xchg
mov
or
xor
sub
in
decb
sbb
cmc
xchg
fcomip
jbe
outsl
push
add
cmpxchg
jmp
jne
pop
and
pop
and
push
inc
and
add
fs
add
lods
push
loop
adc
in
loope
xor
or
mov
popf
mov
sbbb
inc
and
rcrb
lret
or
js
push
push
gs
insl
call
cmpb
jae
add
sbb
lock
outsb
or
add
roll
pop
fidivl
jbe
or
adc
movsb
pushf
mov
pop
jbe
ds
push
data16
negl
sbb
xor
rcrb
sub
lea
test
movsb
pusha
dec
rep
add
xor
cwtl
cmp
ret
out
push
rclb
jmp
adc
ljmp
jbe
movsl
mov
jp
dec
cwtl
sub
pop
add
mov
dec
adc
adc
mov
jne
mov
mov
sbb
xchg
add
pop
push
movsl
loope
xchg
jmp
push
mov
add
mov
incl
cmp
push
gs
test
ljmp
pop
rorl
aad
mov
and
and
dec
fldt
sub
movl
in
in
push
shlb
dec
xchg
lock
test
imul
lock
in
pop
adc
inc
xchg
mov
or
add
icebp
push
outsb
in
arpl
mov
in
add
imulb
pushl
adc
repnz
push
push
xchg
data16
flds
push
icebp
call
xchg
cmp
hlt
je
sub
or
and
pushf
scas
add
and
loopne
scas
jo
in
rep
or
mov
je
add
cld
pop
add
in
aam
inc
jmp
inc
in
repnz
ss
add
cmp
fs
aad
push
mov
movsb
popa
add
cmp
cwtl
ljmp
pop
mov
dec
cld
ja
adc
add
jns
mov
out
or
fmul
lret
mov
cltd
inc
mov
add
jnp
sbb
adcl
pop
gs
filds
adc
orb
dec
ret
or
cmpl
add
xchg
mov
imul
push
xchg
jg
add
fildl
stos
add
xor
lcall
jb
add
or
addr16
cld
mov
adc
test
outsb
add
adc
jp
xchg
in
cltd
jge
push
pop
imull
fdivrs
mov
xor
aam
pushf
repnz
pop
xchg
add
jl
cmp
add
add
push
cli
mov
jp
cmp
and
push
or
ret
fcomps
add
sti
fcmovnbe
add
xor
testb
xor
mov
mov
dec
xor
ja
dec
dec
xchg
add
in
inc
or
cmp
icebp
pushw
mov
lea
test
mov
out
int3
or
sbb
stc
jecxz
mov
cld
xor
dec
or
add
mov
mov
xchg
stos
cmp
pop
mov
jno
pop
add
mov
add
aad
add
leave
int3
out
enter
dec
andb
xchg
jg
dec
lock
mov
popf
shll
aad
inc
movsb
add
add
inc
cmpb
sub
pop
test
jge
mov
add
add
out
mov
addr16
push
xor
sub
add
jecxz
lods
movsl
sbb
in
add
fs
mov
sub
lods
clc
out
fadds
xchg
test
in
jmp
xor
mov
ljmp
leave
add
push
lret
inc
pop
pusha
daa
mov
roll
sbb
push
pop
add
ds
stos
add
mov
fst
iret
xchg
dec
add
jne
fldenv
push
xlat
add
mov
pop
rorb
cmp
push
add
jp
aas
mov
pusha
push
test
ljmp
and
mov
mov
add
sbb
mov
lcall
test
mov
cmp
in
pusha
inc
sub
call
add
jl
xor
pop
addl
push
push
cld
nop
mov
adc
xor
enter
xchg
xor
popa
in
fmull
add
dec
mov
push
add
sub
cltd
add
rcll
push
fiaddl
out
popa
mov
push
add
lahf
psrlw
shl
add
clc
add
mov
push
mov
adc
fnsave
sub
pop
rol
add
addb
sbb
call
and
xlat
mov
pop
jno
add
adc
sub
pop
in
movl
or
mov
add
or
xor
scas
pop
stos
int
cmp
add
mov
lret
ss
out
xchg
sbb
push
dec
mov
cmp
dec
sub
stos
add
cmc
pop
mov
out
add
sub
mov
add
xchg
jns
rorb
jmp
ret
jl
fdivs
sbb
out
stos
hlt
xchg
orb
rclb
push
push
pop
pop
loop
add
out
sbb
aaa
add
add
xchg
xor
xor
inc
jmp
jecxz
test
mov
pop
les
pop
addr16
test
leave
xor
and
mov
fcom
add
andb
pusha
es
icebp
cmp
sub
cmp
pop
adc
movsl
mov
jo
pop
loopne
out
push
pop
pusha
negb
js
sub
insl
mov
sbb
push
cmp
or
mov
pop
fldenv
xor
and
shl
add
and
cmp
add
cmp
ret
test
adc
mov
leave
cmc
add
dec
pop
cli
flds
add
cmp
sahf
pop
popa
inc
outsb
mov
pusha
add
xor
adc
cmp
push
xor
push
adc
jmp
xchg
add
mov
leave
outsb
outsl
push
fs
fiadds
jb
scas
xchg
movsl
jg
ds
fmuls
jo
arpl
loope
addr16
add
int3
test
xchg
push
add
rorl
sub
cmp
mov
mov
fwait
icebp
xor
add
xchg
movsl
mov
push
cmc
add
in
mov
clc
dec
sbb
imul
sbb
mov
jb
add
in
pop
adc
sti
mov
insl
fs
movnti
daa
mov
test
jbe
dec
pop
add
mov
out
cld
mov
das
lret
ja
sahf
add
cmpsb
mov
add
lds
lret
sub
xchg
jg
test
mov
loope
add
rorb
mov
sbb
add
inc
cwtl
adc
dec
jns
jg
dec
dec
cmp
or
sbb
xchg
add
clc
dec
sbb
mov
inc
out
cltd
sub
movl
imul
mov
pop
fidivs
jecxz
push
add
shr
push
sbb
pop
insl
sub
push
xchg
je
jl
sbb
daa
sub
add
jno
jecxz
addr16
add
leave
scas
xchg
and
test
clc
mov
cwtl
pop
pop
push
push
imul
fdiv
xorb
pop
inc
cmc
and
add
and
stc
push
sbb
out
xchg
mov
ficoml
add
or
inc
or
push
inc
jge
jo
sbb
cmpsb
add
add
jne
push
jo
shll
cmp
fcompl
out
enter
add
inc
fdivs
or
lahf
cmp
push
and
fcoml
dec
and
push
add
les
sti
add
out
push
dec
inc
shll
movsl
sahf
lods
mov
sbb
dec
loop
push
lahf
popa
adc
push
mov
pop
pop
inc
ja
add
mov
rcll
inc
aad
mov
lds
sub
xchg
pop
leave
mov
xor
jp
aas
insb
pop
orb
fcoml
stc
pop
test
shrb
push
fnsave
adc
je
ret
add
cmp
add
cwtl
pop
jge
lock
dec
dec
or
add
or
jbe
jo
inc
xchg
add
pop
pop
push
nop
add
mov
push
cld
mov
xchg
adcb
pop
rolb
sbb
jnp
aad
adc
sbb
stos
out
pushf
fadds
pop
mov
stos
nop
movl
pushf
into
push
cmp
fisubrs
adc
jmp
mov
sahf
mov
arpl
icebp
leave
add
in
enter
pushl
sbb
push
adc
push
add
sbb
cs
ds
scas
aaa
push
mov
clc
outsb
call
out
cld
and
pop
pusha
icebp
fsubs
jb
cmpsl
add
pop
mov
inc
in
mov
cmp
push
add
lret
imul
test
inc
lret
add
sbb
xor
cli
shlb
cmp
and
push
andl
add
rolb
dec
xor
jo
ds
adc
call
adc
fiadds
mov
adc
and
pop
stos
add
in
or
push
add
in
pusha
popf
jecxz
ja
loopne
leave
int3
push
push
arpl
pop
add
push
mov
popf
sahf
iret
scas
mov
push
add
out
mov
mov
jmp
mov
sub
push
fsts
into
mov
insl
jbe
xchg
xor
shlb
or
cmp
aam
mov
push
nop
in
inc
mov
sbb
rorb
jmp
jnp
jns
not
mov
xchg
sub
inc
and
loop
jl
push
aaa
add
jg
mov
sub
xor
push
not
push
cmp
mov
xchg
push
cmpsb
ficoms
mov
add
fs
aas
sub
jle
or
sahf
pop
sbbb
mov
add
jnp
rolb
in
cmpb
xchg
rorb
mov
add
adc
aam
add
enter
xchg
fistps
and
mov
mov
xchg
movsl
imul
jae
push
shl
adcl
in
inc
sbb
add
icebp
arpl
add
lea
add
mov
imul
dec
lods
aas
push
jg
xor
sbb
add
lea
push
mov
fiaddl
adc
pop
add
cmp
adcb
stc
mov
cmp
mov
lcall
sahf
rorb
push
and
mov
test
add
fisubl
xchg
inc
xchg
add
cmp
mov
jmp
dec
scas
cmp
sub
inc
out
popa
hlt
mov
loopne
fadd
jp
add
popa
fs
bswap
mov
and
lds
push
sbb
test
imul
xlat
mov
idivl
das
push
jl
add
sub
test
jns
ja
rorb
pop
cmp
mov
xchg
xchg
pop
cmpb
add
sub
and
rcrb
cwtl
add
ds
ja
stc
mov
ret
and
or
xorl
cmp
pop
jne
loop
cmp
sti
pop
test
mov
adc
sub
sbb
andb
inc
inc
sub
rcr
lret
outsb
adc
push
imul
sbbb
shrb
cmc
ret
xor
mov
daa
mov
leave
aas
add
ret
call
dec
ja
mov
and
mov
mov
les
pop
xor
and
cld
pusha
or
xlat
push
popa
mov
add
mov
hlt
push
add
cltd
std
adc
add
xabort
add
mov
jmp
iret
xor
stc
cmp
add
out
outsl
mov
cmpsl
pop
fidivl
cmc
xor
jo
pop
es
add
dec
add
dec
or
lock
jge
jl
add
push
and
add
das
addl
jge
inc
inc
inc
pusha
mull
add
lret
lods
stos
sbb
nop
pop
add
das
aam
movsb
fmull
add
pop
push
dec
inc
mov
jb
add
in
fstps
dec
xchg
add
hlt
dec
sbbb
xorb
pop
dec
cltd
pop
add
fsubr
hlt
scas
or
mov
mov
xor
add
push
and
add
jb
dec
aaa
lock
insb
add
xor
adc
outsb
sub
ds
add
push
jp
ljmp
mov
stc
shlb
fstpt
pop
ds
rcrl
mov
in
add
test
movsl
inc
inc
mov
sbb
jg
add
cmpsb
iret
idivl
inc
call
push
push
sbb
pop
cmc
pop
push
xor
add
xchg
dec
jecxz
pop
pop
mov
add
decl
ja
or
and
jmp
movsl
les
or
nop
pop
mov
mov
lock
pusha
pop
sbb
int
adc
push
pop
js
in
add
sbb
mov
in
push
js
pop
cmp
pop
insb
into
fistpll
fdivrs
lods
pop
jp
sub
ficoml
xor
add
and
sub
cwtl
jns
push
cld
mov
mov
rol
roll
add
fcoms
je
jl
sub
pop
push
andb
xchg
add
ret
inc
mov
mov
mov
test
jge
dec
ret
jg
xor
aam
std
add
and
pop
adc
dec
push
push
add
sub
add
je
jb
sahf
nop
push
pop
loope
aad
aam
push
subb
sbb
mov
mov
pop
xchg
addl
addr16
lds
lock
add
lods
ret
push
mov
mov
int3
add
inc
add
add
cmp
paddsw
fldcw
pop
out
cwtl
push
lret
mov
stc
add
jle
xor
in
andb
dec
fiaddl
push
vpsllq
je
data16
sbb
add
sti
test
add
inc
mov
push
in
fcmovnu
push
mov
xchg
add
xor
enter
or
mov
loop
add
adc
jbe
jp
mov
mov
cs
jns
in
mov
lods
or
xchg
sbb
push
stos
insl
cs
sbb
inc
pop
add
jp
lds
scas
pop
bound
add
push
in
add
ljmp
lcall
ds
in
fwait
jnp
xchg
orb
pop
cltd
pushf
sbb
add
insb
test
sbb
fiaddl
mov
lea
lods
mov
daa
ja
shrb
mov
inc
mov
pop
nop
mov
rolb
or
adc
add
and
nop
add
mov
aaa
add
xor
mov
insl
jmp
scas
insb
mov
fsts
and
jmp
and
inc
sub
mul
stos
inc
pop
repz
cmc
test
jecxz
sbb
call
cld
shll
mov
aaa
fildll
mov
inc
in
add
out
add
mov
je
add
out
push
jl
ficoml
mov
push
xor
cmp
cltd
lods
add
cld
pop
aas
add
aam
iret
inc
pushf
xor
dec
aam
adc
mov
sbb
bound
sub
loopne
das
jmp
dec
movsb
jge
insl
add
inc
jb
mov
sub
xor
enter
dec
adc
mov
icebp
pop
adc
shll
push
aam
xchg
add
dec
mov
dec
gs
ds
mov
xchg
xchg
imul
or
call
in
pop
orb
jne
subps
jecxz
bound
gs
jae
mov
mov
leave
rcrb
jns
cltd
shlb
mov
sbb
add
gs
leave
dec
add
rcr
pop
and
sub
sbb
add
jbe
pop
pop
lcall
mov
repz
mov
push
lds
test
sub
add
ret
or
inc
test
sub
int3
insl
add
cmpsl
mov
mov
or
inc
pop
call
push
mov
sub
les
xchg
adc
idivb
pusha
or
inc
bnd
and
orl
mov
xchg
pop
cmp
js
add
popf
dec
cmp
inc
lret
fistpll
xchg
jns
or
out
imul
xchg
dec
sub
push
popa
or
cmpsb
mov
add
cmp
sub
rcr
xchg
hlt
mov
sub
push
lock
push
jno
shl
add
add
mov
dec
add
pop
cs
cmp
pop
js
inc
jl
inc
add
pushf
out
stc
add
xor
dec
aam
or
js
pop
data16
ss
fsubr
rolb
adc
mov
push
push
and
xor
sbb
shll
add
cmp
xchg
jno
add
sub
pop
es
mov
pusha
insb
subb
add
es
xchg
add
inc
add
cld
clc
adc
lock
lock
or
jecxz
add
mov
loop
mov
adc
fdivl
aas
xor
in
add
sbb
mov
das
and
loopew
pop
sbb
imul
cmpl
add
mov
mov
shr
and
pop
hlt
add
inc
iret
mov
shrb
adc
add
jno
push
add
push
adc
pop
mov
je
pusha
aas
mov
adc
loopne
in
adc
stos
ret
aas
out
pop
pop
or
dec
jge
test
loopne
leave
add
lds
insl
sbb
pop
lods
addr16
xor
pop
testb
inc
add
and
out
mov
jo
testb
pop
sub
push
mov
aad
push
adc
in
add
sbb
mov
js
ret
repz
and
outsl
or
or
cmp
add
jae
xchg
mov
das
int
cmp
out
jl
or
mov
pop
das
orb
mov
mov
lea
mov
dec
daa
rcrl
jl
push
push
hlt
int3
dec
sbb
pop
in
jle
cmp
or
pop
aam
add
jb
jle
sub
and
add
xchg
pop
std
int3
rorl
inc
sbb
xlat
jge
daa
icebp
iret
es
inc
lret
adc
add
movsl
in
xor
inc
shll
jle
out
iret
fsubrs
addb
sub
vprotw
int3
dec
movsl
mov
das
inc
adc
sbb
add
insb
or
imul
add
sub
stos
sub
jbe
push
sti
jmp
add
and
add
sub
sbb
mov
das
inc
das
add
int
bound
daa
popf
add
mov
sarb
loope
cmpb
pop
ror
xchg
scas
adc
popf
arpl
ljmp
imul
and
lock
or
mov
jbe
jle
sub
shl
cmpsb
cltd
call
sbb
pushf
push
adc
test
mov
repnz
push
leave
add
adcl
subb
repz
xchg
insb
dec
movsb
shlb
lods
movl
jmp
jb
shl
roll
mov
add
call
daa
js
mov
cmpsb
xor
test
inc
aam
add
xchg
popa
lds
loope
jge
add
shlb
cmp
add
js
cltd
dec
fcomi
fwait
add
sbb
push
jno
add
pop
push
sub
adc
dec
or
push
in
sbb
je
xor
xor
add
in
jns
xchg
push
mov
pop
push
sub
lret
repz
mov
loopne
addr16
dec
shlb
pop
jge
pop
push
fwait
scas
clc
test
mov
cld
and
and
xor
add
dec
cmp
mov
jb
xor
dec
mov
mov
rcl
and
mov
rorb
sbbb
lods
shll
add
adc
cmp
mov
sahf
add
dec
adc
xlat
lods
dec
sub
dec
mov
shr
addl
add
dec
push
mov
bound
pop
push
cmp
dec
mov
cmpsl
int
lock
iret
out
andl
pop
popa
or
push
mov
cmpb
daa
in
jbe
movl
sbb
add
lods
pop
push
and
or
and
lds
cmpb
icebp
ljmp
pop
inc
outsb
add
pop
sti
fistpl
in
call
fisubrl
cltd
push
addr16
pop
pop
int
inc
rclb
adc
add
aam
xchg
push
daa
sub
and
les
xchg
lret
mov
cmpsl
shlb
mov
jle
jne
inc
add
nop
cli
jo
dec
and
fcomps
out
sbb
dec
add
jbe
mov
ljmp
lock
push
test
cmc
adc
mov
push
cmp
jne
add
scas
js
psubw
sub
lock
pusha
scas
cmp
xchg
hlt
loope
mov
xchg
lahf
roll
inc
mov
sti
xor
enter
in
xorl
adc
jmp
les
adc
scas
cwtl
imul
clc
fisttps
dec
xchg
lock
incl
repz
add
mov
add
bound
in
imul
jmp
or
dec
sahf
inc
xor
dec
test
jne
pop
out
mov
aad
inc
xchg
cld
lods
in
jle
stos
fwait
xor
pop
roll
and
xchg
aad
cltd
sarb
add
xchg
sub
sbb
push
cmp
rolb
pop
shl
mov
sbb
cmp
clc
push
rcr
loope
and
fmuls
xchg
faddl
jmp
xchg
mov
loop
mov
xor
or
add
adc
add
inc
rcrb
and
xchg
xor
lcall
mov
mov
enter
inc
adc
inc
shrb
add
subl
jge
push
pusha
inc
shll
mov
mov
psrlw
mov
push
jbe
mov
movsl
cmp
xlat
fs
aad
xchg
mov
sub
adc
ret
stos
add
shll
mov
push
jecxz
addr16
mov
dec
jno
xor
pop
cmpsl
insb
xchg
jmp
fucom
pop
adcb
imul
data16
cli
jg
mov
or
sahf
repz
aas
fiadds
mov
and
out
jecxz
jnp
scas
mov
or
xchg
mov
rorl
add
inc
mov
faddp
add
gs
ljmp
jmp
imul
pop
jge
notb
outsl
push
add
xchg
mov
cmp
cwtl
mov
rcrl
mov
lret
call
xchg
xor
sbb
add
lds
out
fnstsw
mov
ret
mov
push
add
enter
stc
loope
xor
int3
add
lea
or
inc
subb
mov
rcrb
lret
subl
add
cltd
pop
das
testb
add
ljmp
cld
push
push
ror
je
ret
mov
aaa
xchg
mov
jge
leave
aad
cmp
test
cld
dec
test
mov
sbb
mov
lcall
aad
add
push
sbb
add
nop
jns
add
in
mov
cmp
add
xchg
nop
or
test
dec
adc
les
aad
ret
add
xchg
jns
sub
mov
adc
sbb
lret
fwait
lahf
mov
jnp
inc
cmpsl
inc
mov
test
add
repz
rcr
in
iret
jmp
mov
add
imul
fcoms
mov
pushf
adc
add
push
push
sbb
popa
or
jae
add
icebp
stos
mov
shlb
pop
test
enter
jo
xor
nop
adc
mov
jne
stos
mov
add
xorl
jge
pop
scas
dec
loopne
or
xchg
sub
mov
adc
sti
pop
mov
mov
sarb
popf
add
rcl
es
cs
outsl
xchg
rclb
sbb
das
fsubl
out
cld
lret
fiadds
xor
dec
mov
pop
popf
jl
fwait
push
nop
mov
lahf
dec
repz
in
mov
sbb
sbb
add
insb
dec
xor
mov
pop
out
repnz
push
sbb
lock
test
pop
push
xchg
sbb
hlt
add
cmpsl
lret
scas
sub
dec
add
xchg
push
dec
push
cld
pop
sahf
add
sub
cmc
or
lcall
cmpsl
sti
in
je
add
mov
loop
push
mov
and
and
ja
pusha
add
dec
mov
outsl
adcb
sbb
adc
mov
mov
sbb
mov
stc
in
xchg
add
or
scas
clc
add
sub
mov
popa
dec
jns
mov
je
movsb
hlt
adc
mov
mov
loop
xor
ljmp
cmp
xor
pop
hlt
mov
dec
add
mov
int
icebp
cld
popf
mov
out
mov
cmp
pushf
add
aas
pusha
mov
in
add
pop
xor
stos
add
xchg
add
xor
in
testl
mov
sbb
loop
cmp
mov
mov
pop
or
aaa
adcb
lock
sbb
sarb
inc
push
stc
loopne
popf
add
addb
aaa
xor
mov
dec
out
jns
pop
add
pop
xor
cld
stos
jl
add
lods
scas
pop
mov
cli
ljmp
imul
je
shrb
add
pop
dec
inc
or
cmpsb
call
mov
clc
add
cld
lret
pop
dec
loop
scas
add
aad
imul
push
sbb
dec
dec
scas
add
lods
cmp
inc
add
sub
lcall
inc
push
loopne
adc
push
test
imul
sahf
incl
in
lods
mov
adc
jo
or
add
mov
mov
jb
and
clc
xchg
add
mov
addr16
or
out
dec
ds
add
aam
add
repz
pushf
pop
dec
add
add
push
lods
add
push
pop
dec
push
and
or
push
add
or
incl
in
jb
leave
mov
mov
hlt
push
sub
jp
pushf
divl
sahf
inc
mov
add
jb
lcall
popa
cltd
fwait
add
pop
mov
shrb
or
fldenv
add
jbe
je
push
and
pusha
push
cmp
rorb
sbb
fcomip
sub
pop
add
add
stos
outsl
inc
sub
std
hlt
pop
js
cmp
lahf
add
adc
lock
loopne
pop
or
pop
sbbb
push
fiadds
push
adc
flds
popf
shlb
jl
imul
sbb
xor
popa
or
mov
sub
jno
add
in
inc
add
cmp
cli
loopne
add
lds
std
out
sbb
call
mov
inc
xchg
push
imul
out
jae
cmp
icebp
inc
popa
xor
add
idivb
add
je
jns
dec
cmp
daa
jmp
adc
push
add
push
clc
sbb
add
pop
hlt
jo
pop
aam
pop
add
rolb
or
and
cwtl
cwtl
popa
aad
mov
or
cmc
arpl
xchg
subb
add
daa
or
cmp
add
lret
addr16
insb
dec
xchg
int3
enter
add
adc
add
jp
mov
add
test
jo
add
shll
inc
mov
popa
scas
pusha
jmp
cmp
dec
push
add
aas
jno
outsl
sub
nop
int3
add
pop
pop
repz
add
jbe
mov
adcb
mov
jnp
adc
repz
subb
or
and
and
mov
add
pop
stos
je
jns
add
jo
sub
xchg
xchg
jb
dec
cmp
add
sub
push
inc
add
inc
jl
js
push
fimull
xor
lea
sbb
scas
mov
loope
dec
and
sbb
nop
stos
aaa
xor
pause
mov
sbb
mov
pusha
fwait
pop
add
iret
mov
ja
pop
and
arpl
rorl
stos
loope
sbb
jmp
adc
cmp
push
sbb
in
out
das
repnz
inc
mov
arpl
cmp
je
rclb
add
mov
gs
mov
jg
push
leave
lcall
ret
xchg
add
sub
push
or
addb
aas
mov
cltd
scas
adcb
jb
add
mov
cmpsl
outsb
notl
rcl
add
cmp
out
dec
add
je
inc
arpl
sub
mov
cmp
add
mov
mov
ljmp
xor
add
rclb
or
sbb
leave
jge
pop
inc
inc
shll
cmp
add
ret
rorb
fstpt
add
sub
in
pop
scas
add
or
test
cmpb
push
dec
insl
jo
adcb
arpl
sti
xchg
jae
punpckhbw
test
and
add
adc
mov
adc
sbb
stos
mov
test
xchg
xchg
dec
pop
xchg
cmpsb
xor
add
popf
and
dec
jecxz
adc
cmp
outsl
add
insl
add
mov
jbe
sbb
stos
dec
jno
aam
add
add
pop
push
sbb
data16
dec
nop
cmp
add
lret
mov
cmp
push
popl
adc
arpl
sbb
adc
inc
pop
mov
mov
ret
pop
add
xchg
pop
add
jns
jp
cld
out
icebp
xor
test
adc
scas
fcomp
aam
and
dec
into
int3
mov
loop
je
cltd
testb
and
in
es
jg
mov
out
dec
mov
scas
mov
sub
cmp
dec
adc
dec
pop
mov
mov
and
cmp
adc
push
pusha
mov
add
and
aam
into
sbb
addb
push
dec
clc
out
add
test
scas
adc
xor
and
ret
add
out
adc
cs
sarb
pop
jo
rcrl
mov
movsb
bound
loopne
xor
and
mov
fdivl
inc
getsec
imul
jae
add
xchg
cmpb
scas
repnz
ret
or
cmp
aad
adcb
dec
and
cld
roll
lock
rcrb
ss
sbb
dec
pop
xor
add
popf
into
xchg
fcmovbe
insb
or
ljmp
daa
cmp
dec
insl
jg
xor
and
sbb
cmpsl
add
mov
in
and
insb
mov
add
adc
inc
and
jb
add
ficoml
out
lods
add
add
decb
push
sub
test
add
push
leave
cmp
pop
add
hlt
adc
in
mov
or
mov
in
jne
add
lcall
jecxz
add
add
mov
fmuls
subb
jg
or
int
imull
add
add
fstpl
cmp
roll
mov
cs
in
adc
fisubl
jge
add
xchg
test
js
pop
lahf
adc
neg
inc
ret
ret
jb
xchg
inc
cli
xchg
cmc
push
mov
sbb
mov
ja
mov
mov
mov
dec
loopne
inc
cwtl
add
shlb
fdivl
ss
ret
rcr
jmp
or
js
xchg
cmp
fiadds
mov
jle
pop
cmp
scas
and
pop
loop
add
imul
subb
pusha
inc
mov
xor
dec
dec
subb
mov
push
fisubrl
dec
add
sub
mov
pop
jl
adc
movsb
mov
imulb
xchg
cmp
mov
mov
addb
cmp
mov
mov
lret
orb
insb
int3
add
inc
xchg
dec
jle
mov
push
iret
mov
ljmp
lret
add
sarl
sbb
mov
xor
mov
cli
and
push
or
inc
jno
push
imul
mov
xor
fmuls
add
cli
push
lret
shlb
jae
push
xchg
sti
add
push
std
xorb
pop
mov
jne
into
xor
jle
add
adc
pusha
cmpb
insl
int
add
xor
xchg
adc
add
mov
lret
jns
add
shrl
int
stc
mov
add
insb
mov
mov
add
in
adc
or
push
cmp
in
pop
xchg
imul
test
jo
xor
out
cmp
loope
push
inc
add
fidivrl
dec
mov
push
xchg
cmc
pop
or
repnz
adc
hlt
or
movsl
add
sti
iret
out
adc
jmp
rorl
jno
enter
sti
outsl
repz
cmp
add
mov
dec
clc
jmp
add
int3
leave
pop
outsl
cmp
inc
aas
ja
dec
scas
insl
push
sbb
xor
add
sbb
cli
mov
aaa
add
fnstsw
inc
std
or
and
dec
mov
cmc
adc
outsl
pop
mov
mov
dec
aas
xchg
lcall
test
stos
jns
sub
and
popf
jp
inc
gs
mov
cmc
xchg
push
fiaddl
faddl
aad
std
adc
add
int
push
sbb
test
call
dec
outsb
cs
and
mov
push
in
inc
rolb
test
cmp
inc
sbb
add
dec
xchg
daa
fildl
pop
dec
dec
adc
mov
jne
jno
push
ss
cwtl
push
jl
sub
adc
fcomip
mov
mov
fwait
or
subb
filds
push
add
push
dec
push
cmpsl
sub
or
adc
cwtl
xor
add
sub
je
sub
inc
xchg
push
nop
add
in
inc
in
lahf
adc
js
add
orb
add
ds
jl
xor
je
cmp
cs
fdivs
mov
int3
mov
lds
sbbl
pop
in
aam
cmp
xchg
xor
int3
add
mov
notb
jnp
sbb
lahf
add
fmull
cli
ret
sub
cmp
sub
or
test
shrl
inc
addr16
add
mov
add
mov
int3
lds
inc
stc
call
loopne
daa
inc
mov
cwtl
cld
sbb
cli
ljmp
inc
cmc
add
mov
mov
sbb
mov
mov
cwtl
stos
movl
or
rorb
sub
lods
out
lds
xchg
lret
adc
int
bound
ret
pop
adc
jge
gs
xor
or
add
jb
daa
xor
les
mov
pop
adc
loopne
ficoms
add
push
mov
sub
mov
xchg
add
push
call
ficompl
sbb
aas
cmp
pop
pop
lret
push
movsl
lahf
xor
inc
xor
jnp
sub
std
dec
mov
loope
pop
pop
push
mov
cmp
mov
aaa
jmp
push
and
adc
cld
cmpsl
add
jmp
fcompl
imul
repnz
cld
je
xchg
jp
add
pushl
arpl
loope
add
outsl
loop
add
xorl
cwtl
push
add
inc
xor
rorl
out
mov
stc
xchg
mov
add
lret
pop
cmp
arpl
jnp
in
mov
das
rcrb
add
jnp
and
and
and
pop
rcll
dec
add
outsl
mov
lock
xchg
in
imulb
add
inc
divl
pop
xlat
popa
std
aas
jle
sbb
mov
outsb
out
cltd
daa
in
sub
jle
mov
aas
lock
add
fst
mov
icebp
aas
andb
roll
mov
inc
rolb
xor
cmp
pop
cwtl
xchg
jl
pusha
or
adc
in
mov
push
sbb
mov
add
mov
pop
daa
bound
jnp
ret
movsl
xor
rclb
icebp
enter
push
fdivs
push
xor
sub
sub
sti
loope
pushf
cli
outsb
add
std
cmp
icebp
jl
out
js
sub
inc
and
movsl
add
psrlw
out
lea
add
add
lods
or
mov
out
es
xchg
pop
cmc
add
les
cmp
lock
cmp
fdivrl
mov
jne
adc
enter
inc
fcmovb
or
dec
out
insl
fldl
stos
or
fs
add
mov
cwtl
jae
add
sbb
dec
iret
mov
mov
xchg
lock
cmp
add
push
xchg
dec
inc
inc
stos
sbb
sbb
pop
add
jae
outsl
stc
je
dec
jecxz
or
mov
fisubrs
lcall
fs
stos
add
xor
xor
sbb
push
mov
mov
sub
stc
xor
xor
mov
ficoms
clc
adc
mov
or
test
imul
add
adcl
push
add
cmp
jo
popf
shll
jl
sti
jns
pop
frstor
mov
xchg
add
cmpsb
and
sub
sbb
insb
add
ljmp
add
popa
dec
add
add
ds
lods
jo
add
or
xchg
add
hlt
je
mov
cmp
mov
movsb
stc
ja
sbbb
out
xchg
das
insb
aad
push
adc
jb
push
in
inc
jb
das
xchg
and
mov
fidivl
pop
rcrb
xor
in
xor
fistpl
adc
mov
cmc
inc
jbe
or
sbb
inc
dec
add
sti
mov
test
sbb
imul
push
push
cmp
scas
testl
inc
andl
sub
xchg
inc
xor
lock
stos
in
rcrb
jg
mov
in
into
xor
sub
push
jle
rolb
test
cwtl
inc
lret
adc
lock
jle
add
or
cmp
mov
xchg
push
loopne
fstl
jecxz
add
and
and
xor
frstor
mov
scas
fimuls
mov
sti
add
xchg
pop
and
push
enter
fisubrs
or
sahf
xlat
sbb
mul
adc
filds
adc
add
aam
out
push
add
xor
xor
cmp
mov
repz
sbb
push
cmpsb
sbbl
hlt
add
and
or
inc
mov
maxps
push
add
lcall
nop
popf
ss
inc
add
cld
xchg
push
inc
testl
call
cmp
lods
xchg
fadd
mov
nop
loopne
xchg
add
jg
jnp
fisubl
push
jmp
cmp
bound
push
and
adc
and
stc
sbb
pop
in
push
shlb
mov
lea
andb
add
into
testl
bound
clc
rcll
loopne
jl
pop
pop
aad
add
dec
cmp
js
sbbb
arpl
or
dec
add
enter
mov
sti
add
inc
movsl
jp
out
mov
add
xchg
xor
ds
add
pop
es
push
fdivp
sbb
adc
add
jl
add
jl
or
mov
movsl
push
dec
add
mov
std
and
out
add
call
aaa
xchg
add
jl
sub
add
call
adc
xchg
inc
mov
inc
es
cmp
or
mov
addl
sbb
aam
add
jecxz
std
gs
das
lock
mov
xchg
mov
xor
add
test
mov
mov
cli
std
inc
mov
cld
in
sbb
jmp
push
dec
stos
outsl
pop
outsb
aas
xor
std
js
add
xchg
sbb
mov
add
dec
push
add
dec
mov
lock
ja
cli
insl
pusha
adc
add
mov
test
mov
int3
xor
add
mov
rcrb
iret
sub
stos
sbb
sbb
inc
movnti
push
mov
pop
jo
outsl
add
sub
int3
imul
mov
pusha
inc
loopne
sbbb
lock
or
inc
sti
jg
mov
loope
stos
push
sub
sbb
sub
add
dec
push
or
jo
mov
pop
out
add
adc
xchg
add
xor
subb
sub
fcoms
aas
add
lods
nop
sahf
mov
add
inc
push
inc
add
mov
cmp
add
cmp
out
pop
jl
mov
xor
jecxz
out
imul
add
push
inc
addl
jne
mov
sub
xor
lret
push
inc
dec
add
scas
sbb
add
outsb
or
or
push
jb
lods
sti
lahf
cltd
into
add
xchg
pusha
ret
sbb
js
pop
loop
add
inc
add
sub
flds
pop
insl
cli
pop
rorl
pop
dec
add
mov
mov
shrl
mov
add
mov
test
mov
mov
xchg
mov
ds
jns
cmp
sarl
packuswb
mov
inc
or
hlt
movb
push
popf
cs
mov
or
mov
xchg
xchg
daa
add
jmp
mov
movsl
pop
jl
ja
jae
out
pop
in
movsb
mov
cli
ret
test
imul
sbb
shld
add
scas
sbb
stc
pop
in
testb
jge
lods
repz
rol
pop
and
add
pop
jmp
bound
outsl
pushaw
inc
cmp
orl
adc
hlt
add
arpl
mov
lods
jo
inc
mov
and
in
xchg
ud1
sub
scas
pusha
add
outsb
clc
and
ja
push
inc
js
jle
repnz
adcb
push
jno
pop
rorb
lods
xor
xor
xor
rcrl
and
iret
out
pushf
add
adc
push
pop
psubusw
ficomps
negl
sbb
dec
je
mov
data16
add
pop
sbb
xor
and
shrb
xor
and
add
mov
out
dec
cmc
inc
push
add
xchg
popf
std
ja
ret
sub
adc
inc
mov
sbb
aaa
aam
jne
jb
in
test
das
and
xorb
push
dec
jo
xchg
popf
mov
jbe
std
mov
in
out
movsl
rolb
or
mov
pusha
and
cwtl
jp
dec
add
sub
xchg
out
jl
add
jle
movsb
xor
sbb
add
sub
add
loop
add
mov
in
inc
dec
add
ljmp
cmp
dec
sub
icebp
pop
aaa
and
fnstsw
movsl
mov
mov
rcll
cmp
push
inc
iret
mov
out
jo
clc
std
lret
in
or
ror
lock
add
pop
stos
jnp
enter
fimuls
add
dec
mov
call
add
mov
mov
mov
cmc
add
xor
xlat
stos
or
pop
inc
test
inc
xor
dec
dec
mov
push
mov
mov
xor
movsb
dec
cs
dec
sbb
xchg
sub
add
leave
push
test
inc
pop
int
cwtl
test
push
sub
mov
movsw
lret
add
sbb
dec
inc
outsl
and
mov
nop
hlt
test
xchg
cmpsb
cmp
jnp
add
mov
in
dec
push
push
mov
xor
inc
pusha
jl
cwtl
hlt
add
cmc
bnd
mov
and
pop
inc
push
pusha
adc
test
pop
cli
xchg
dec
ret
adc
cmp
or
jle
or
and
ds
mov
lgs
xchg
and
add
sbb
add
sbb
mov
ret
add
out
or
clc
dec
inc
add
loopne
mov
xchg
add
jnp
dec
shrb
add
mov
iret
xor
sti
adc
popa
ret
sbb
sub
into
pusha
mov
pop
add
cmp
addr16
push
dec
andb
pop
ret
xlat
cli
xor
xchg
shrl
mov
fcomps
les
jbe
xor
lods
repnz
shlb
add
sub
mov
imul
add
mov
cmp
cmc
popa
jb
arpl
add
fisubrl
je
test
mov
aad
fisubs
add
xor
or
in
out
scas
inc
sub
ret
add
aas
shrl
jg
add
repz
stos
call
mov
sti
mov
add
scas
fdivp
xchg
lock
mov
add
adc
cmpl
test
rcl
cmp
add
hlt
test
xor
std
add
outsl
mov
inc
add
pop
xor
and
jecxz
and
mov
ficoml
inc
pop
pop
push
int
xor
bound
popa
outsl
mov
mov
inc
andl
xor
and
cmp
cmpsl
pusha
mov
add
push
lret
cwtl
cld
mov
test
pushf
mov
insb
mov
out
jp
imull
cwtl
fsub
movsb
mov
ljmp
jns
mov
xchg
pop
insl
fldl
add
push
sbb
mov
fimull
inc
cmc
mov
mov
popa
roll
into
lock
addb
add
fwait
xor
add
jl
xchg
lock
arpl
add
mov
pop
fmull
stc
ljmp
add
leave
mov
push
repnz
xchg
in
fwait
add
push
mov
jae
pop
and
je
mov
push
fchs
out
cmp
lods
add
jo
dec
add
dec
loopne,pt
sub
popa
iret
push
add
cmp
add
xchg
and
mov
adc
shll
sub
and
sarl
adc
jnp
mov
jge
nop
and
das
inc
jl
pop
xchg
roll
adc
test
ret
mov
inc
je
add
loope
jo
in
sti
jnp
outsb
jmp
loop
and
add
push
fcmovbe
or
mov
js
dec
add
mov
xor
cmpl
mov
pushf
daa
and
add
loopne
add
jb
or
mov
push
and
loopne
push
jae
movsb
mov
bound
xchg
call
outsl
fiadds
sbb
and
add
aad
add
xchg
clc
push
lret
dec
mov
pop
pop
adc
inc
imul
mov
push
hlt
loop
xorb
xchg
push
fisubs
mov
push
stc
add
push
add
add
and
ret
inc
push
add
iret
mov
add
mov
fildl
inc
cmp
ljmp
mov
cmp
mov
xor
or
sbb
lods
aam
adc
add
clc
ds
add
or
mov
mov
push
push
add
sahf
mov
cmp
xchg
fsubp
sqrtps
cmpsl
iret
add
mov
xor
add
dec
adc
movsl
pusha
les
or
xor
jp
xor
ret
outsl
adc
jns
push
pushf
cmp
andl
push
add
aaa
in
jne
dec
loopne
cwtl
or
loopne
mov
add
xor
sbb
pop
stos
or
jbe
push
mov
rolb
rorl
imul
mov
fbld
and
and
add
inc
stc
push
add
push
movl
shll
das
mov
adc
pop
dec
xor
leave
bound
jnp
mov
pop
mov
jmp
jle
add
arpl
jmp
in
push
outsb
andb
mov
adc
fidivrl
mov
pop
mov
das
and
jp
data16
add
dec
mov
add
xor
add
pop
hlt
repz
or
cmp
or
add
jecxz
or
cltd
push
xchg
loope
push
xchg
and
cmpb
imul
pop
add
gs
xor
hlt
aad
pop
ror
inc
add
adc
rolb
daa
mov
cmp
push
sbb
shrb
mov
add
mov
cmpsl
mov
mov
mov
into
popa
lods
stos
adc
jle
shr
cmp
add
daa
mov
clc
jmp
cld
popl
pushf
stos
cs
aam
mov
das
rolb
test
push
nop
add
jbe
jmp
repnz
jae
pop
mov
mov
cli
lea
pop
icebp
cmp
shl
in
test
cmp
loop
xchg
jmp
sahf
pop
cmp
in
fs
mov
notb
dec
pop
push
aas
and
ret
add
add
dec
jge
pop
jne
orb
mov
pusha
mov
mov
add
mov
je
jmp
mov
das
lcall
mov
and
xchg
jle
jb
push
aas
dec
pop
rorl
lahf
pop
dec
mov
cmc
or
adc
notb
jno
mov
cld
and
mov
ja
ljmp
test
mov
das
and
pop
jmp
pop
sti
repz
xchg
push
cld
into
movsb
pop
int
das
xor
cmp
pop
scas
imul
rcrl
xor
push
mov
inc
sbb
addl
mov
add
sub
idiv
sbb
aam
repnz
stos
sbb
lcall
add
mov
cld
pop
pop
popf
push
sbb
add
js
shlb
jp
add
inc
leave
pushf
add
les
rcll
or
pop
gs
cs
cli
add
pop
imul
add
add
aas
sub
xor
or
pusha
in
inc
pop
icebp
add
out
push
aad
xchg
ja
add
lcall
lret
inc
dec
jne
cwtl
loopne
js
push
fsubrs
ss
or
cli
jge
push
call
push
pop
xchg
mov
sub
loop
sbb
sbb
repnz
cmp
rorl
lods
jno
push
inc
popa
imul
or
inc
sub
stos
test
add
lret
fwait
es
or
pop
jg
and
call
xorb
mov
mov
adc
pop
lds
pop
push
and
sti
dec
add
jp
paddd
push
clc
or
icebp
and
outsb
and
xchg
mov
pop
popf
sub
popa
loopne
lods
add
hlt
movsb
jbe
loopne
imul
in
pop
lret
inc
fldl
decl
sbb
mov
loopne
sub
enter
mov
sahf
xchg
fimuls
push
orb
enter
cmpb
mov
add
cmc
pop
jmp
aaa
repz
mov
clc
pop
push
add
lods
add
mov
mov
jge
push
xchg
pop
add
dec
adc
ja
add
push
ds
test
inc
or
push
outsb
add
or
fwait
xchg
jge
add
xchg
fildl
ljmp
jb
jns
into
add
fcoml
repnz
test
cmpsl
add
pusha
mov
pop
add
push
nop
cwtl
add
cs
orl
jg
add
nop
mov
mov
sti
out
mov
shlb
jne
imul
pop
ret
pop
push
cmp
sub
mov
rolb
cmp
mov
xchg
inc
add
loopne
or
pop
fnsave
hlt
jb
insl
jo
lret
add
and
inc
add
mov
push
notl
pop
mov
mov
js
pop
pop
loop
or
rolb
sbb
ja
stc
into
out
add
push
andb
cltd
popf
repz
jmp
push
ja
sub
xor
cwtl
sbb
loopne
or
lahf
pop
mov
pop
add
out
les
push
sbb
xor
icebp
lret
and
es
adc
add
xor
dec
call
cmp
add
aad
jg
xchg
push
add
xchg
lret
inc
mov
jns
cmpsl
cwtl
adc
test
loope
leave
mov
lock
pop
sbb
std
test
jle
add
pop
sub
jns
add
xchg
push
call
sahf
xchg
and
jmp
rcrl
xchg
int
incb
pop
jg
add
scas
adcb
sti
movsl
hlt
sar
add
pop
out
js
loop
mov
cmp
mov
jnp
pop
rorl
mov
sarb
add
xchg
push
andl
mov
lds
xchg
mov
or
mov
jo
add
mov
jge
pop
addr16
adc
loopne
ss
add
sti
lds
imul
and
fcmove
push
inc
mov
push
add
push
sbb
adc
mov
aam
hlt
add
jae
loopne
dec
js
add
xlat
jmp
jno
add
push
lods
outsl
popa
dec
in
jge
add
pop
test
pusha
inc
test
dec
cmp
pop
or
mov
sbb
sbb
add
dec
inc
pop
std
repz
add
notb
dec
loope
stos
imul
data16
mov
cli
sti
and
dec
add
test
adc
dec
pop
hlt
pusha
test
inc
add
and
inc
scas
jp
popf
inc
xor
cwtl
mov
and
nop
mov
int
movb
jo
fldl
sub
jle
pop
push
movsl
xchg
outsl
add
cmp
sub
int
xlat
fs
jns
add
xchg
inc
mov
jne
into
add
mov
mov
shl
stc
test
sub
pop
ret
sbb
dec
mov
pusha
cmp
lods
pop
jl
xchg
fisttpl
inc
xchg
pop
addr16
lock
inc
inc
jb
xchg
fisubl
sub
cmp
pop
out
pusha
xlat
jge
or
mov
jle
mov
pushf
filds
xor
shld
inc
xlat
xor
gs
push
push
sahf
mov
add
push
aaa
add
addl
add
pusha
jne
adc
inc
shll
add
iret
addr16
jmp
call
xchg
add
mov
sub
iret
push
add
hlt
jge
fprem
and
cmp
and
cli
add
shlb
sub
ret
add
jo
inc
add
bound
xchg
add
sbb
jb
adc
dec
nop
loopne
push
push
jnp
jg
add
push
int3
mov
push
jl
ret
fmuls
xor
push
cmp
dec
cmp
xor
rorb
jbe
mov
cmp
sub
stos
add
iret
add
fisubs
jecxz
jb
jle
jle
push
je
inc
push
sub
ret
and
in
pusha
and
jb
add
leave
mov
push
or
cmp
test
xlat
cld
add
push
inc
test
jno
and
aas
dec
xlat
jecxz
fsubr
dec
add
sbb
push
mov
add
pop
cld
bound
int3
jge
or
or
and
adc
outsb
in
add
sti
mov
adc
push
cmp
push
xor
mov
adc
test
add
xchg
dec
je
xor
add
jp
pop
mov
and
outsb
mov
cmpsb
dec
ss
xchg
or
shlb
divb
ret
arpl
xlat
dec
test
lea
repnz
mov
add
adc
inc
and
je
inc
shlb
push
add
or
testl
xchg
das
cmp
jle
adc
mov
jb
adc
in
pop
push
cmpb
xchg
out
lcall
jp
inc
push
sub
adcb
pop
clc
sbb
in
fstpt
add
test
pusha
inc
pop
imul
in
inc
jmp
add
and
rorl
mov
hlt
loopne
pop
aam
cmc
dec
push
nop
repz
jae
add
mov
pop
mov
shl
xchg
loop
push
popf
cld
rolb
mov
stos
pop
es
sub
out
mov
add
adc
js
add
fisttpl
add
jae
stos
mov
gs
add
mov
data16
xor
xor
rcll
lods
push
push
or
pop
add
aaa
push
jo
repz
adc
mov
pop
iret
outsl
sbb
mov
cmp
popf
lds
pop
stc
inc
pop
adc
in
and
push
fwait
add
mov
xchg
outsl
daa
cmp
jne
out
repz
stos
pop
pop
xorb
cwtl
out
lahf
cmpsl
or
enter
and
cmpsl
dec
add
mov
xchg
sahf
loopne
testb
fcompl
lret
add
xchg
test
cmp
in
sub
sbb
add
inc
test
mov
mov
daa
xchg
adc
ret
pop
dec
add
jmp
or
xor
mov
imul
jbe
outsl
mov
jne
lds
fcomip
adc
in
out
ds
les
test
rclb
add
jl
add
adc
lret
add
lahf
jns
push
sub
and
divb
pop
icebp
pop
jae
pop
insl
sbb
popf
adc
mov
cmp
nop
loopne
scas
push
lds
inc
or
pop
pop
repnz
dec
mov
add
or
or
fucomi
adc
pop
push
push
mov
jp
test
mov
cwtl
fiadds
imul
pop
xchg
jnp
arpl
add
call
scas
imul
adc
cmc
cmp
hlt
add
mov
dec
pop
mov
test
enter
call
clc
rol
dec
cmovno
loop
ret
in
or
add
mov
aam
cs
orb
loop
add
push
xchg
ret
pushf
push
mov
dec
pusha
into
add
aaa
jg
cmpb
sub
hlt
sub
push
push
ds
pop
lock
add
pushl
fmuls
insb
and
mov
add
cmp
add
xor
push
es
add
adc
jno
inc
rcrl
xor
xor
in
xor
sar
pop
pop
add
clc
sub
mov
setne
in
out
stos
lahf
xchg
fwait
add
xchg
shrb
nop
int3
cwtl
sbb
out
lret
push
jo
xor
xchg
dec
xlat
loope
lock
jp
add
pop
aad
cld
stos
nop
push
cmp
sbb
sub
push
je
lods
add
aad
adc
adc
popaw
dec
test
push
pop
test
push
pop
xchg
insl
add
adc
pop
add
mov
jmp
xchg
jle
add
push
inc
jp
add
in
cmp
jmp
mov
add
mov
ja
inc
cwtl
hlt
lfs
ds
xchg
subb
adc
clc
add
mov
add
loop
add
pop
ds
movb
lret
push
mov
and
sub
and
add
lock
add
ret
mov
ja
add
push
or
sub
popf
mov
scas
or
orb
insb
or
popa
mov
iret
filds
loop
test
adc
lock
xchg
in
add
xchg
jecxz
jmp
dec
add
mov
mov
std
out
and
out
orb
mov
mov
movl
mov
add
call
iret
add
dec
out
and
xchg
mov
hlt
bound
add
fcoml
das
sbb
add
pushf
mov
jne
inc
xchg
insb
add
in
cmp
sahf
xorl
xor
pop
popa
in
nop
adc
pop
filds
push
iret
sub
cmp
xchg
stc
mov
clc
mov
dec
sbb
mov
call
shl
flds
xor
or
dec
sti
repnz
nop
stos
add
mov
xchg
inc
add
mov
inc
push
rcr
cmp
mov
sbb
cmpsb
jbe
lock
and
stos
mov
pop
mov
xor
mov
test
sub
mov
mov
or
cmp
fmulp
lea
xchg
and
xchg
push
mov
and
add
pop
pop
daa
sub
cltd
inc
js
and
repz
xor
ds
dec
inc
jne
pop
hlt
mov
add
xchg
cmpl
add
enter
mov
xchg
adc
lods
cmp
andb
or
jl
add
loopne
cld
push
mov
and
dec
push
mov
add
js
jg
fiadds
add
add
jno
cmpsl
push
out
mov
ljmp
push
add
cmp
imul
push
mov
push
enter
or
mov
push
lret
in
mov
inc
xchg
add
pop
ret
faddl
lods
xor
add
test
aaa
repz
daa
mov
sub
imul
aam
cmp
add
fcoms
mov
adc
popf
mov
sub
data16
ljmp
or
aam
movsb
or
adc
adcb
repz
inc
xor
loop
inc
cmpsl
loope
mov
rcrl
js
lock
and
xor
xlat
lret
xchg
je
mov
mov
loop
ds
bound
push
inc
dec
xchg
pop
sub
fcmovbe
cld
pop
add
insb
xchg
mov
shl
jnp
rcrb
add
shlb
stos
mov
dec
outsl
fstl
sbb
add
xchg
jae
xchg
xchg
add
or
push
fs
add
cmp
js
push
add
push
aam
xchg
dec
arpl
add
rcrl
add
push
xchg
in
add
imul
cmp
jo
mov
fldl
in
dec
jg
mov
and
mov
add
icebp
dec
dec
mov
je
stos
mov
js
add
mov
xchg
lock
mov
mov
in
add
adc
sub
pop
adc
ret
flds
bound
jecxz
cmp
mov
or
inc
pop
add
call
xor
add
nop
push
xor
inc
add
inc
aaa
sbb
dec
mov
pop
sti
rolb
jle
and
or
or
xor
es
js
movsb
into
mov
add
add
pop
cmpsl
pop
ja
push
out
test
call
mov
sbb
popa
cmpsl
call
push
andb
mov
ret
add
xorl
cmp
sbb
rorl
inc
inc
out
test
add
pusha
or
push
jl
fiaddl
test
push
mov
inc
cmp
aad
pop
inc
shl
mov
cmp
stos
inc
ss
fwait
jne
sub
sbb
pop
stc
add
xchg
xchg
das
add
arpl
out
jle
test
and
sub
or
cli
lahf
dec
or
mov
pop
push
loop
popa
pop
xchg
mov
push
add
lret
out
dec
pusha
in
jo
addr16
jge
lock
leave
test
dec
dec
mov
push
cwtl
and
fsubl
add
adc
push
push
lcall
fisttpl
cmp
add
jg
sub
mov
inc
fmull
mov
mov
xor
cmp
inc
pop
adc
push
repz
xchg
push
pop
or
inc
add
adc
mov
sbb
adc
shrl
fmuls
mov
cmp
aad
dec
jnp
nop
xchg
add
and
test
nop
sub
or
jnp
push
fstl
popa
orb
loopne
adcl
pop
jo
popa
pusha
out
cmp
sbb
mov
into
enter
ljmp
pcmpeqd
cmpsl
mov
pop
nop
add
inc
repnz
xchg
xor
lods
popf
test
out
sbb
dec
xchg
imul
lret
xchg
out
shlb
add
mov
add
sbb
mov
sar
enter
pop
add
push
mov
jmp
jno
xchg
add
shrb
mov
add
xchg
push
rolb
add
jecxz
shll
add
in
dec
cmp
insb
out
add
jns
in
push
jo
mov
cmp
sub
or
filds
test
xor
dec
sbb
outsl
jae
jp
insb
mov
mov
push
add
jnp
add
or
mov
pop
fnstenv
imul
add
and
adc
push
outsb
and
mov
dec
add
lea
loope
jno
shl
aaa
cmp
arpl
sti
mov
int3
dec
std
and
jmp
mov
or
call
cs
sub
test
add
xchg
push
or
roll
mov
std
adc
sbb
cmp
inc
int3
adc
ret
cmp
rcrb
jno
add
and
mov
cld
std
popa
nop
nop
add
push
jae
or
mov
inc
add
stc
test
push
push
jns
add
leave
push
inc
adc
aam
mov
arpl
out
pusha
add
clc
cmp
js
in
call
xor
lds
jp
pop
add
xchg
fdivs
psrld
push
adc
data16
push
mov
and
mov
add
cmp
xchg
pop
inc
or
dec
faddl
lods
or
clc
add
stos
ss
lcall
mov
pop
jae
pop
xchg
out
popa
cmp
sbb
xor
data16
out
lock
shlb
add
lock
ljmp
add
cmpb
dec
inc
xchg
enter
add
fyl2xp1
adc
dec
shlb
mov
jae
or
mov
add
gs
aas
pop
ret
sarb
enter
jae
mov
dec
in
js
les
or
xorl
mov
lahf
mov
call
addl
out
xor
rclb
jle
cmp
cmp
loop
add
mov
push
mov
notb
mov
loope
ljmp
fdiv
inc
or
arpl
mov
push
mov
cwtl
int
cmc
jb
mov
cmp
in
fld
movsb
or
and
sbb
pop
loope
mov
movsl
std
jge
scas
add
clc
mov
push
pop
jp
sbb
out
mov
ffree
cmp
add
jb
xchg
add
xchg
xor
popa
sbbb
xlat
jl
adc
rcr
add
orb
pop
pop
scas
jae
xchg
mov
jmp
mov
push
push
pop
lods
or
loop
lcall
add
call
mov
mov
fcomps
xchg
push
dec
outsl
push
jmp
push
add
in
cltd
sbb
out
cmp
push
mov
or
sub
out
jmp
cli
outsl
mov
popf
sbb
dec
ss
sbb
mov
aad
das
je
add
push
repz
lock
xor
dec
repnz
scas
out
verw
lcall
add
aaa
mov
add
mov
inc
rclb
in
mov
sti
mov
add
inc
les
sbb
and
in
add
dec
stos
jno
shrl
push
outsb
push
rclb
insb
add
sar
push
pop
add
sbb
jmp
add
cmp
pop
and
add
inc
add
out
cmpb
insl
jne
pushf
popf
add
ret
and
scas
add
stos
aas
out
lock
leave
sbb
andb
aas
jp
cmp
rcll
cmp
aam
aad
pop
movsb
add
or
inc
add
cld
jo
cmp
subl
es
sbb
mov
xor
ror
iret
add
mov
mov
add
pop
sbb
add
cmp
jns
add
cltd
je
push
pop
xchg
in
subb
xlat
mov
cmp
scas
push
or
cmpb
aam
jmp
adc
pushf
aaa
rolb
add
push
cmp
adc
or
mov
add
movsl
mov
adc
dec
js
mov
iret
mov
cmpsb
in
repnz
setns
iret
sub
test
into
pop
xchg
lea
mov
adc
cld
mov
leave
push
mov
add
xchg
ret
cmp
test
inc
push
addr16
lods
pop
xor
fistpl
arpl
pop
pusha
or
xor
jmp
mov
add
push
flds
or
mov
jne
add
xchg
icebp
adc
xchg
xchg
add
sbb
lret
dec
or
xchg
popf
cmpsb
add
xchg
xchg
mov
inc
add
cmp
mov
in
addb
jl
lret
clc
fldt
jg
cmp
mov
icebp
pop
rolb
fistpll
sub
ficoms
pop
aas
repz
js
add
jge
inc
mov
sti
add
mov
add
cltd
aam
sbb
push
je
or
sbbb
cmp
int3
in
xor
pop
xor
shl
loopne
or
add
cmpsb
scas
mov
and
and
daa
add
arpl
cli
out
aas
jb
add
inc
and
outsb
in
js
add
int3
xchg
add
or
xchg
add
scas
xlat
int3
add
mov
mov
mov
mov
lods
rcll
cs
mov
jne
fcoms
sbb
jmp
add
pop
aaa
or
shrb
adc
cld
in
sub
xlat
ret
leave
add
cmp
shr
das
je
mov
sub
add
insl
cmp
pop
sub
add
in
enter
mov
xor
in
clc
rcrb
add
xchg
dec
adc
int3
loope
add
loope
jb
imul
jo
rcll
bound
mov
add
add
lret
rorl
jp
shrb
xchg
ja
and
lahf
rolb
sbb
fldenv
jp
and
cmpb
inc
jb
in
loopne
lea
inc
xor
add
sbbl
add
mov
mov
add
xchg
mov
das
stc
movsb
pusha
mov
bound
rorb
add
popf
lods
loop
dec
leave
xor
mov
jl
xchg
or
pop
add
mov
sbb
insl
add
xor
add
in
mov
add
outsl
test
pop
test
data16
mov
adc
sti
dec
cmp
cmp
hlt
int3
pusha
sbb
outsb
push
sub
xor
push
in
mov
and
ret
add
sbb
adc
push
or
sbb
subb
dec
sub
push
fs
pusha
add
out
cmp
jb
lret
lock
stc
repz
cmp
cs
inc
push
cwtl
in
fsubrs
add
inc
push
fpatan
or
or
mov
dec
sbb
push
outsl
mov
idiv
add
aad
test
cmc
loope
jno
or
sahf
loope
mov
mov
jnp
shll
lock
fdivs
addl
cwtl
pop
imul
mov
sub
clc
cmp
ror
dec
insl
jb
dec
add
ror
call
cmc
inc
mov
push
inc
push
or
or
add
or
imul
test
data16
jno
add
ds
add
out
cwtl
dec
sbb
xor
sbb
lock
std
jp
inc
shll
dec
in
mov
and
push
lock
lret
push
add
shrb
pop
mov
call
xor
mov
xchg
mov
and
cmp
lcall
scas
dec
faddl
sub
sahf
mov
mov
mov
movb
shll
mov
push
ficompl
mov
and
jp
mov
mov
clc
lcall
stos
insb
mov
pop
mov
movsl
xchg
add
sub
xlat
movsb
add
pop
pushf
in
cltd
sub
and
es
cmp
lods
push
mov
xor
push
add
push
fbld
loope
xor
int3
scas
insb
sbb
incb
cli
jg
mov
jmp
mov
lock
sub
xlat
dec
lods
shll
aaa
movsl
pop
sti
cmpl
test
leave
and
inc
shlb
in
rolb
aad
pop
nop
xchg
lods
loopne
add
mov
popf
jg
mov
xor
or
andb
mov
jae
pusha
dec
movb
ljmp
roll
dec
add
pop
dec
add
js
test
jb
out
adcb
xlat
and
int
arpl
nop
outsb
xchg
das
ljmp
sub
lahf
push
add
push
push
leave
ret
popf
adc
xchg
inc
xchg
scas
xor
mov
pop
and
add
dec
sbb
or
xchg
inc
aam
jo
aad
and
loop
add
shl
jno
add
jge
aas
pushf
or
cmpsl
cli
mov
adc
loop
sti
add
cmpsb
pop
clc
push
and
add
mov
adc
arpl
dec
icebp
mov
mov
aad
cwtl
mov
cwtl
pop
xchg
fwait
pop
pop
add
and
adc
cmpsl
add
lods
negl
add
in
movsl
or
jo
jae
xchg
mov
sbb
cmpsl
in
inc
paddusb
mov
test
sub
aad
ds
in
add
aam
in
cmp
loop
add
xchg
pop
inc
setno
lahf
jnp
sbb
cmp
adc
filds
sub
jge
xchg
in
cmc
mov
pushf
rcrb
in
add
in
aam
int3
inc
sub
push
add
shrl
aas
dec
jb
pop
dec
int3
sub
adc
outsb
enter
hlt
adc
cmp
add
lcall
add
sub
xor
loope
sti
fcompl
add
sbb
xchg
dec
lds
add
pop
dec
adcb
or
inc
xor
or
xchg
pop
ret
inc
in
or
inc
pop
repnz
add
int
or
push
pop
icebp
jae
adc
mull
pusha
mov
pop
call
sub
push
jp
adc
add
and
int3
add
lret
sahf
out
push
cmp
into
inc
cmp
hlt
leave
lods
mov
sbb
mov
fildl
lcall
sbb
or
xor
add
sbb
pop
out
aad
push
cmp
arpl
sarb
ret
fldl
lcall
add
add
arpl
add
sbb
sub
add
int
pop
add
shr
push
cmp
lahf
add
inc
scas
repz
jb
push
leave
das
cld
and
ja
jne
sbb
mov
mov
test
inc
sub
ss
mov
jne
jno
dec
rorb
jg
leave
cmp
add
fs
or
loope
movsb
xorb
into
adcb
push
addr16
push
xor
push
lods
jo
psrlw
into
or
pushf
fisubs
add
test
into
add
mov
mov
mov
add
inc
sbb
add
adc
add
lret
push
and
jno
add
aaa
sahf
push
in
sbb
mov
addb
mov
lds
push
lods
inc
xchg
cmpb
add
dec
mov
lcall
stos
enter
fcmovu
sbb
es
shll
lods
popf
mov
add
push
daa
and
add
sbbb
dec
and
sti
pop
inc
xor
mov
pop
in
jne
mov
clc
cli
dec
jb
xchg
push
incb
fcoms
push
aad
pusha
sub
add
pop
mov
mov
cmc
jle
add
mov
mov
push
nop
pop
add
stos
imul
dec
ja
dec
arpl
cwtl
js
mov
mov
pop
push
add
jbe
add
fildll
jne
roll
movsb
je
stos
test
cwtl
popf
lcall
add
sbb
inc
push
sub
lea
jl
mov
mov
cmp
fadds
dec
out
push
in
sub
xlat
inc
xchg
and
lcall
imul
add
enter
test
add
lret
jb
add
pop
inc
mov
testb
popf
push
sti
fadd
dec
ja
and
sbb
addr16
inc
je
leave
outsl
push
fcoml
pop
and
xchg
add
xorb
inc
ds
bound
push
pop
je
mov
cmp
mov
and
dec
push
mov
jns
mov
sub
shll
frstor
jb
inc
test
inc
add
in
xchg
loope
add
mov
aas
add
add
add
pop
or
cwtl
outsb
int3
add
jb
inc
push
xchg
mov
je
out
cmc
subl
pop
pop
repz
or
inc
cmp
add
cmp
loopne
fildll
cmpsb
test
add
add
sbb
pop
stc
pop
testb
nop
lret
add
loop
lock
pop
rcr
pop
xchg
scas
fiadds
lds
inc
mov
arpl
pop
sub
xor
sub
in
adc
and
mov
popf
xchg
pop
add
lock
mov
or
push
clc
in
imul
int
adc
pop
mov
push
in
xchg
add
jl
fldt
or
mov
dec
push
jg
add
aad
fsubp
mov
sub
pop
mov
bound
js
push
es
pop
leave
jle
add
mov
mov
mov
pop
scas
inc
loopne
mov
movsl
fsubrs
pop
adc
cmp
orl
push
call
in
fsub
add
lret
mov
cmc
pop
mov
sub
out
movsl
pop
mov
rcrb
add
bound
in
add
cld
jl
dec
mov
dec
roll
add
add
mov
sarl
cmpl
adc
add
inc
add
pop
inc
jl
push
enter
add
roll
cmp
dec
cmc
pop
shl
out
pop
add
jp
test
pmulhuw
push
rcrb
stos
and
dec
notb
stc
dec
jne
inc
xchg
xor
loop
mov
addr16
stos
mov
jns
cmp
out
sahf
out
inc
pushl
push
test
mov
xchg
ret
cmp
aaa
dec
sti
xchg
stos
xchg
jnp
add
lock
inc
pop
fldl
repnz
insl
das
data16
add
push
inc
arpl
mov
inc
or
dec
jae
xor
in
xchg
insl
jmp
faddl
jb
fnstsw
sub
dec
out
add
sbb
ficoml
repz
adc
outsb
addl
mov
push
pop
adc
or
pop
jo
loopne
in
cmp
mov
push
dec
add
hlt
xor
add
adc
adc
and
call
clc
lds
add
mov
arpl
add
sbb
icebp
or
xchg
mov
fidivrs
mov
aaa
or
dec
add
mov
dec
add
jo
test
lods
xor
xor
jp
jmp
adc
imul
out
or
add
pop
pop
inc
jl
fwait
push
nop
rolb
movsb
sub
sahf
add
inc
add
jp
pop
es
cmp
test
lahf
add
and
add
notl
lcall
dec
fmul
cmc
es
ja
mov
mov
inc
lock
add
or
leave
sub
inc
clc
inc
add
xchg
jnp
in
sub
cmp
je
jns
sbb
adc
dec
enter
sbb
cli
xor
cmp
mov
nop
inc
ret
ror
add
xor
cmp
jmp
push
add
rolb
fsubrs
sbb
add
imul
pop
pop
xchg
mov
hlt
ds
imul
lods
or
mov
aaa
in
xchg
add
imul
cmp
loopne
icebp
xorb
aam
jb
subb
rolb
out
sbb
cmpsb
stc
ljmp
ds
xlat
cltd
lahf
sub
enter
mov
add
mov
add
aaa
sahf
lock
add
inc
jno,pt
mov
fiaddl
lahf
pop
adc
outsb
xchg
cmp
into
mov
repz
addr16
pop
insl
popa
add
mov
push
cli
add
mov
es
add
adc
enter
add
push
cs
mov
add
cwtl
mov
xchg
sub
movsl
gs
orl
sub
inc
dec
orb
sahf
add
jo
es
xchg
inc
add
out
std
add
sbb
add
fdivrl
aam
push
nop
insl
sbb
pop
add
mov
xchg
jnp
add
es
cmp
mov
cmpl
lahf
mull
out
push
movsb
sbb
mov
mov
lods
jo
dec
repz
ljmp
mov
inc
pop
xor
jo
sbb
fiadds
sub
imul
push
add
inc
daa
shll
xor
mov
push
flds
cmp
and
mov
add
and
faddl
int3
add
mov
ret
push
lods
dec
and
fwait
add
fcomp
rolb
scas
dec
stc
rclb
sbb
and
lret
inc
and
jae
andl
mov
test
loopne
dec
pop
enter
add
outsl
mulb
mov
add
inc
mov
fs
stos
lods
std
add
cmp
add
nop
inc
pop
out
and
addb
daa
jp
jb
jge
add
jbe
sbb
xor
imul
repnz
xchg
jo
ja
movsl
add
out
cmp
shll
add
fdivs
push
daa
mov
add
jmp
xchg
neg
bswap
add
add
pop
mov
add
out
shlb
arpl
lahf
adcl
add
hlt
push
add
add
and
scas
jle
mov
or
and
jno
call
je
xor
enter
icebp
data16
mov
add
pop
ljmp
loope
pop
and
iret
imul
cmpsl
rcll
loop
add
repnz
hlt
loope
test
add
mov
inc
lods
jp
clc
mov
and
stos
push
rolb
enter
imul
divb
sub
add
into
lods
mov
add
xor
incb
mov
adc
xor
or
test
sbb
xchg
adc
cmp
sbb
fnstenv
pop
out
sub
sbb
mov
hlt
lods
add
loop
int3
or
push
xor
add
cmp
push
or
shlb
shl
pusha
dec
xchg
int3
lret
fadds
mov
push
cmp
pop
sub
inc
inc
scas
pusha
sbb
mov
hlt
fucomi
add
jmp
xchg
sbb
loope
xchg
pop
lods
mov
shrb
cmc
mov
inc
jae
shlb
mov
pop
push
inc
sub
cmpsl
pop
add
xchg
mov
adc
outsl
adc
sbbb
cmpsb
add
cwtl
push
xor
nop
add
push
cmpsb
les
lock
nop
fsincos
jge
add
js
pop
fwait
pusha
jo
add
out
fidivl
push
ret
shrl
mov
mov
add
mov
push
sarb
les
aam
add
lods
inc
pop
and
out
pusha
xor
cmp
cmp
add
jns
dec
jecxz
sub
jno
out
jo
adc
push
mov
lock
aas
rcl
fdiv
add
fisttpl
xor
subl
add
das
enter
stos
rcrb
or
xchg
add
sub
pop
loopne
out
in
int
push
dec
add
movsl
adc
test
loop
filds
dec
loopne
mov
xor
scas
add
mov
inc
mov
daa
add
jle
mov
clc
add
or
inc
lret
push
pop
pop
sbb
sub
pop
arpl
add
jae
rcl
add
push
or
xor
leave
sub
cltd
movb
aas
dec
lret
jmp
sahf
and
pop
jecxz
or
sar
icebp
mov
jmp
pop
push
sbb
inc
dec
inc
iret
pop
out
mov
cmpb
lea
mov
xchg
mov
fldl
lret
cmp
rorl
add
cli
add
testl
inc
loope
mov
rcrl
sar
mov
sub
pop
lock
sahf
push
pop
fnsaves
js
icebp
cwtl
add
cltd
pusha
jne
adc
add
mov
push
leave
jbe
or
mov
int
pop
test
subb
add
mov
jp
mov
push
ss
andb
repz
cmp
jmp
add
stos
sbb
add
xor
push
arpl
add
fstl
adc
faddl
lahf
cmp
mov
movl
xchg
add
fwait
inc
adc
or
mov
inc
test
pop
inc
lret
add
cli
sbb
mov
test
ss
mov
push
ljmp
aam
frstor
mov
insb
or
xor
loopne
sbb
adc
pop
cmp
cmp
aad
aaa
popa
pextrw
dec
aas
je
and
incl
add
dec
jno
loopne
mov
andl
cli
inc
sub
add
std
fnsave
out
loopne
sbb
rolb
xchg
push
sbb
in
cmpsb
pushf
lds
xor
add
add
push
push
mov
mov
push
es
inc
decl
pop
je
inc
movsb
dec
jl
add
out
mov
mov
jne
push
or
inc
mov
nop
jp
dec
push
andl
andb
clts
push
sub
push
mov
mov
add
mov
ret
xchg
mov
sub
test
call
cmp
xchg
ret
lods
and
mov
out
or
dec
out
outsb
jb
cmp
sub
out
jl
xchg
and
mov
cmp
les
loopne
mov
xor
sarb
orb
lea
cltd
inc
pop
lahf
sar
stos
mov
scas
add
shlb
insl
jge
sub
jns
pop
push
addr16
add
add
call
cmp
popa
fcomps
pop
loop
sub
in
stos
jmp
jle
in
fwait
outsl
nopl
add
sub
mov
movsl
cltd
call
call
push
xchg
stos
add
sar
add
int3
jo
bound
or
loope
lret
dec
cmpl
in
mov
test
div
aam
sub
fsubp
sahf
int3
push
in
inc
outsb
add
inc
pop
inc
add
mov
cld
sbb
jp
mov
aam
ljmp
pop
or
lods
mov
dec
add
arpl
dec
addl
in
lock
cmpsl
and
and
dec
pop
and
inc
in
add
arpl
push
pop
adc
pop
pop
cmp
dec
jo
stos
fdivl
add
ljmp
adcb
mov
test
rorb
int
add
and
bnd
imul
or
outsb
out
cmp
add
pop
sub
jmp
add
xchg
fistl
rcrb
mov
outsb
lock
add
xchg
sub
scas
insb
cmc
loop
aad
adcb
sbb
js
add
cltd
fdivs
mov
into
cmp
mov
in
std
pusha
ds
lcall
nop
repnz
cld
mov
sbbl
add
and
arpl
inc
and
push
int
add
add
addr16
in
or
add
xor
mov
pop
mov
adc
mov
xor
jg,pn
cmp
pop
add
or
cmpb
sbb
mov
add
les
mov
int3
cli
mov
popl
jg
add
sbb
enter
gs
shrb
xchg
loopne
les
rolb
pop
fs
inc
sbbl
stos
int
mov
insl
shl
xchg
out
sub
cmpsl
inc
xor
inc
fisubrl
fs
xor
imul
push
rolb
add
je
cmp
shlb
es
add
mov
pop
inc
ja
in
jbe
and
xchg
and
lret
and
mov
add
sbb
jge
adcb
ret
add
fbld
test
push
xchg
lret
push
pop
pop
pusha
add
dec
add
in
add
sbb
xor
cwtl
adc
pop
add
sbb
test
popf
sbb
stos
push
add
jecxz
ss
xchg
dec
in
clc
test
add
loopne
push
sub
add
sti
and
cmp
lret
add
aad
xor
pop
or
lret
jp
das
ja
ds
scas
mov
test
aam
mov
push
sbbb
sbb
add
lcall
xchg
testl
jb
cwtl
or
pop
push
icebp
fidivs
add
mov
fwait
push
adc
cmp
and
inc
stos
fdivs
pushf
add
inc
test
adcl
data16
cmp
push
cwtl
jmp
add
pop
jl
add
addb
pop
stc
int
insb
cmpsl
test
dec
and
jl
add
and
pop
or
fsub
inc
sub
jle
or
lock
push
add
xchg
in
cmp
sbb
testb
cli
notl
pop
ds
add
mov
sub
push
push
push
mov
add
jmp
pop
dec
cmp
shlb
add
pop
out
je
push
sub
iret
mov
sbb
jl
pop
jb
leave
ret
xor
mov
insb
repz
push
mov
movsl
sub
xor
pop
sbb
mov
jmp
add
sub
mov
into
test
mov
push
mov
fucomi
cmp
cmp
out
lret
roll
xor
add
jo
repz
ljmp
loope
mov
outsb
pushf
addl
insl
jle
add
or
fisubl
jge
jbe
mov
arpl
fcomps
xchg
pop
fbld
ds
mov
mov
xchg
cmp
jle
add
notl
or
add
add
lretw
adc
add
and
fdivrs
rcrb
or
push
mov
push
movl
into
adc
add
sbb
xchg
sub
ret
mov
inc
add
xchg
enter
out
add
scas
loope
and
sub
sbb
cmpsb
lcall
pop
sbb
iret
shrb
cmpsb
lahf
pop
popa
mov
xlat
cmp
pop
xor
push
fidivrs
cmp
scas
adc
loopne
push
add
test
divl
or
adc
loopne
or
add
sar
jbe
xchg
cli
testb
shl
xor
jo
adc
push
and
insb
lock
xlat
add
fsub
rolb
repnz
xchg
xchg
mov
test
mov
xor
pop
sbb
std
add
movsl
push
mov
loopne
pop
mov
mov
in
cld
push
fwait
push
push
pop
hlt
xor
pop
fcmove
push
sahf
adc
push
adc
xor
sub
mov
add
or
ror
shr
add
int3
inc
push
sub
pop
cmpb
shll
repz
out
dec
pop
cmpsl
xchg
mov
rclb
inc
pop
or
in
icebp
mov
mov
mov
enter
pusha
lods
push
cmp
outsb
pop
add
test
shrb
push
pop
and
add
sbb
add
je
lods
fadds
or
out
aam
add
insb
xchg
daa
inc
into
arpl
mov
pop
add
add
das
push
test
mov
addb
xor
pushf
pop
cld
ds
add
lret
es
add
jne
mov
xor
insl
add
xchg
cs
or
mov
mov
cmp
sbb
dec
imulb
lcall
outsb
mov
lods
jmp
mov
adc
mov
xchg
dec
movb
push
outsl
push
xchg
inc
je
hlt
add
insb
cmpl
ja
push
adc
jecxz
fdivrp
dec
add
pop
outsb
jb
movsb
jg
add
add
mov
adc
loopne
inc
rorl
jge
adc
nop
xor
adcl
sub
add
lods
push
mov
xor
js
add
daa
dec
iret
test
or
cli
insl
or
sbb
out
pop
add
sbb
add
add
stc
dec
cmc
incl
mov
pusha
add
adc
jnp
in
cmp
and
test
jl
xor
push
and
rolb
and
xchg
sub
arpl
add
and
xchg
add
pop
pop
sub
ret
add
cmp
dec
push
lret
or
jo
xchg
sub
jp
xchg
das
push
and
in
dec
ljmp
jns
sub
push
fbstp
cmpb
mov
js
icebp
add
push
sbb
and
push
inc
push
mov
mov
sub
pop
sub
sbb
in
adc
and
repz
cmp
ficompl
push
fildl
or
jge
sbb
and
outsl
xchg
lret
pop
add
cmp
xchg
jle
scas
mov
insl
testl
inc
jle
xor
sti
cli
add
or
pop
jp
inc
sub
fs
add
and
and
and
in
lcall
test
faddl
outsb
mov
lock
and
mov
sbb
pop
fs
inc
leave
sub
push
fimuls
add
mov
dec
jp
negl
mov
cmp
inc
sbb
mov
lea
adc
jnp
add
test
sbb
dec
lahf
clc
and
insl
push
add
cmp
xchg
rcl
test
dec
mov
rorl
add
adc
adc
add
cmp
daa
jg
loop
or
jle
adc
and
lret
loopne
adc
sub
push
xor
mov
adc
or
or
inc
mov
loopne
cmp
sti
jae
cwtl
mov
mov
lods
cld
test
inc
cmp
or
pop
fsubrl
fwait
add
out
mov
repnz
clc
mov
xor
or
inc
dec
add
in
enter
verw
mov
mov
jae
movsl
popw
sbb
add
pusha
js
das
in
add
pop
inc
call
add
insl
push
add
stc
inc
call
sub
stos
out
jns
add
not
pop
xchg
insb
or
add
in
add
in
subb
sbb
pop
nop
les
or
add
inc
pushf
mov
xor
loop
test
push
sub
mov
pop
sub
jnp
fistps
aam
xor
cmp
mov
ljmp
lahf
mov
sub
movsl
push
jge
add
fldl
xorl
or
notl
loopne
les
cmp
push
jbe
add
and
xor
pop
popa
push
jp
addr16
faddl
mov
xor
movsb
lea
cs
fs
inc
adc
push
mov
add
mov
arpl
xchg
pop
lock
mov
push
pop
push
aas
xchg
cs
or
bound
mov
pop
mov
addr16
daa
jecxz
loopne
push
mov
fdivrs
in
gs
dec
pushf
cmp
fisttpl
subb
adc
jge
add
cltd
xchg
sbb
dec
sbb
cmp
push
mov
and
add
mov
xor
adcb
xor
aas
push
nop
aad
cmp
stos
shll
in
push
rolb
popf
add
mov
mov
insl
mov
mov
jae
add
inc
dec
and
bound
fucom
loopne
test
addl
fdiv
pop
imul
stos
or
pop
gs
fs
mov
cmp
mov
imul
add
inc
push
pop
sbb
push
insl
add
pop
mov
int3
or
mov
repz
rcll
mov
fwait
dec
mov
repnz
movb
cmc
jo
lods
popf
lds
shr
jne
mov
ficomps
pop
pop
repnz
mov
xchg
or
out
lods
or
repz
xlat
rol
jge
add
stos
sti
cmpsl
fmulp
or
sub
jne
jge
ret
loope
add
clc
lret
mov
dec
imul
test
jns
das
shl
inc
add
fadds
jmp
jmp
lcall
mov
inc
sub
andl
sbb
rolb
test
addr16
pop
cltd
xchg
cli
adc
jno
xchg
xlat
cmpsb
xchg
lret
roll
jge
mov
call
shl
loop
mov
jbe
dec
add
das
shll
adc
es
scas
imul
mov
pop
cmp
leave
or
arpl
adc
cmpsb
and
fmuls
in
add
mov
dec
push
insl
jmp
adc
adc
jmp
mov
jnp
add
dec
mov
cmovs
adcb
jne
add
cli
test
pop
add
jbe
pop
insl
sub
or
cld
sbb
add
test
or
inc
jmp
test
sub
dec
mov
inc
add
test
xchg
mov
lock
imul
push
push
add
sti
jns
xor
add
cmpsb
or
sbb
cmpsl
add
vpcomq
pop
xor
dec
sub
push
arpl
insl
pop
jl
out
js
call
pusha
add
mov
pop
arpl
add
movsl
mov
inc
sub
add
cmp
sysenter
jo
adc
mov
popa
pop
loopne
cmp
imul
pushl
fidivrs
add
call
pop
test
aad
inc
mov
xchg
pop
mov
hlt
xchg
jle
jg
shrl
dec
add
je
add
outsb
out
test
cmpsb
xchg
jae
mov
repnz
das
add
xor
pop
add
sbb
push
mov
and
bound
lods
add
rclb
cmc
sbb
push
fmuls
and
cmp
into
add
dec
and
xorl
cmc
push
mov
pop
filds
pop
mov
fisttpll
stc
inc
cmp
sbb
shll
jge
add
ds
cmp
shr
scas
adc
leave
mov
ja
push
adc
ss
std
cltd
push
add
cli
jg
pop
mov
push
push
mov
xor
clc
mull
and
add
repnz
adc
sbb
test
clc
xor
add
mov
mov
inc
cmp
in
xchg
fcompl
pop
push
sub
sub
xlat
cmp
shlb
inc
int3
popl
sbb
sbb
push
xchg
sub
add
mov
cli
and
sub
jae
mov
push
mov
adc
push
add
xor
jo
and
add
mov
fwait
outsl
imulb
mov
insl
mov
push
jb
frstor
popf
pop
hlt
and
mov
inc
test
mov
orb
sahf
popf
popa
xchg
add
hlt
imul
mov
mov
popf
add
jne
in
xor
fs
pop
jle
lcall
ss
add
cmp
xchg
fldcw
in
add
sbbl
jg,pn
hlt
sbb
inc
mov
push
clc
popf
add
mov
push
push
adc
fstl
out
or
shll
jecxz
xchg
xlat
push
mov
fildl
pop
sub
fidivs
jo
dec
cld
lods
push
pop
xor
popa
mov
sub
add
pop
nop
xchg
fs
mov
inc
push
shll
enter
xchg
pop
pusha
fnstcw
fwait
cld
sub
mull
jnp
add
pushf
push
js
sbb
xchg
add
lcall
add
mov
or
cmp
outsb
inc
add
lds
ja
es
or
sub
mov
push
add
push
test
mov
lcall
sub
add
ja
mov
pop
out
push
lock
testl
xchg
add
adc
mov
adc
and
or
in
add
imul
cli
aas
icebp
xchg
pop
jb
mov
xchg
add
andl
cmp
add
dec
lret
push
or
add
add
ja
int
add
cwtl
repz
xor
xor
add
stos
in
sbb
or
jnp
adc
pop
aad
add
dec
dec
xchg
push
xchg
jp
add
cwtl
jge
movsl
jbe
cmp
adc
shrl
in
and
push
int
jle
and
aam
roll
pop
cmp
mov
inc
add
cmp
or
loopne
xchg
cwtl
cmc
add
popl
jnp
adcl
add
pop
ja
testl
dec
sub
jp
jb
sbb
pop
add
and
mov
insb
mov
ret
loop
dec
or
or
movsl
add
xchg
mov
xor
pop
cmp
rdmsr
out
adc
add
ljmp
in
pop
jmp
mov
pop
repnz
add
mov
jge
add
add
cs
xchg
xor
dec
add
sti
das
jns
js
popf
ja
add
les
lods
pop
jb
lock
add
loope
les
movsb
pop
jae
inc
sub
clc
pop
nop
nop
in
sub
lock
stos
cmpsl
mov
popf
cmp
loop
pop
jbe
dec
sahf
test
sbb
aas
pop
fists
add
jecxz
xchg
jg
in
idivl
addl
add
xchg
mov
add
ss
ds
dec
add
daa
outsb
ret
dec
clc
adc
add
popa
lahf
mov
mov
shlb
out
add
xchg
sub
sbb
arpl
ror
or
lret
jmp
xchg
dec
add
jecxz
push
xorl
inc
or
sub
push
lret
xor
push
or
pop
xor
mov
or
insb
push
mov
roll
mov
in
add
aas
outsl
insb
adc
loop
cwtl
inc
sbb
rcl
xchg
jmp
cmpsl
lock
cmp
mov
pusha
inc
xor
xchg
adc
sub
fxch
adc
bsr
sbb
xchg
shrb
adc
aas
das
cmp
out
insb
shlb
xor
imull
std
lods
add
adc
lahf
add
stc
or
adc
dec
add
pushf
add
mov
mov
loopne
jno
fbld
push
xor
inc
add
inc
mov
and
dec
data16
sbb
scas
jno
stc
cld
add
mov
ja
adc
pop
je
call
add
jge
jg
inc
push
inc
cmp
add
fsubs
aas
lock
pop
pusha
and
lret
out
jbe
loopne
nop
popa
cmpl
inc
adc
and
and
and
notl
test
ljmp
cwtl
inc
lahf
aaa
push
xchg
jg
jno
std
lods
sti
imul
add
add
mov
or
loope
mov
ficomps
add
cmp
rol
inc
lods
notb
ja
mov
hlt
and
sub
js
add
xchg
mov
sbb
hlt
cmp
add
jmp
xor
inc
add
adc
jmp
mov
inc
mov
out
xor
call
dec
jecxz
lret
dec
and
cld
add
fnclex
mov
shlb
add
xchg
jb
pop
hlt
icebp
in
nop
shr
pop
sub
xchg
cwtl
aas
add
xchg
enter
xor
ss
ror
hlt
jge
sti
add
mov
add
xor
es
aam
push
pop
in
fdivrs
add
dec
pop
mov
test
add
inc
cmc
xlat
add
mov
or
sbb
sub
orb
cli
es
lods
inc
add
push
adc
xchg
pusha
xchg
add
sub
fisttpll
add
jg
fisubrs
push
faddl
add
sbb
jmp
push
divb
daa
mov
mov
clc
test
repz
ficomps
fiaddl
jb
lods
sbb
dec
mov
sbb
inc
adc
add
sbb
sbbl
xchg
sbb
imull
jne
push
lock
push
loopne
pop
inc
mov
jmp
fists
sbb
mov
nop
add
ss
data16
rcll
add
xchg
sub
repnz
pop
or
in
inc
mov
push
sbb
xchg
xorl
jno
push
iret
mov
test
stos
inc
ja
jo
out
add
movsl
lret
outsb
cmpl
fisubrs
mov
cmp
jge
aam
daa
jno
loopne
push
stos
xor
fidivs
ret
pop
cmpsb
jmp
mov
scas
push
add
add
sub
adc
and
add
cmp
cmp
xor
je
mov
or
dec
pop
pop
mov
rorb
add
popl
dec
in
shll
add
or
std
movl
mov
add
push
add
sbb
mov
add
adcb
fimull
rcrb
inc
add
mov
adc
jmp
add
sbbl
cmp
fs
ret
cmc
out
mov
dec
sbb
aad
cmpb
inc
mov
add
jae
adc
cmp
push
enter
dec
out
movsb
xchg
fidivl
in
add
aad
ret
pop
arpl
or
shr
xchg
add
push
mov
mov
mov
jp
cmpsl
daa
xadd
sub
and
cmp
mov
sbbb
adc
mov
xor
mov
sbb
test
xor
les
out
lret
adcl
add
call
test
jge
outsb
xchg
int3
cmp
sub
add
movsl
ds
mov
out
arpl
gs
xchg
sbb
dec
add
push
sbb
mov
inc
add
mov
sbb
jmp
scas
push
aaa
adc
sbb
cmpsl
sbbl
scas
and
pop
mov
sub
repz
sarl
ds
mov
flds
push
jae
mov
pop
stos
push
cs
int3
rcr
decb
mov
idivb
stos
mov
push
nop
in
mov
push
je
mov
out
mov
sbb
sub
cmp
sbb
imulb
add
bnd
rcrb
xchg
test
add
insl
jno
sub
repnz
mov
adcb
inc
incb
fsubp
test
jnp
sbb
call
ficoml
sub
loopne
fadds
dec
call
mov
mov
add
mov
pop
push
add
cltd
pop
mov
add
test
lds
pop
cmc
cmp
inc
push
rcrl
push
icebp
mov
jnp
mov
sub
add
out
inc
ret
xchg
outsb
test
add
pop
jmp
adc
aam
mov
mov
dec
add
leave
int
mov
cmp
pushf
pop
and
cmpb
sub
lds
andb
dec
inc
lahf
add
ret
subl
and
stc
xchg
jmp
mov
cmp
mov
sub
iret
mov
xor
push
sbb
loop
dec
pop
inc
int3
mov
xor
cli
arpl
pop
lds
add
ret
aam
push
lret
add
and
lahf
add
mov
icebp
xchg
add
sub
jne
add
push
sbb
dec
lods
pushf
push
add
adc
sti
xchg
aaa
fmuls
cmp
pop
ljmp
outsl
popf
add
addr16
mov
xor
inc
jge
jnp
mov
pop
cld
adc
add
je
in
add
pop
stos
fnsave
cltd
fsubrl
jge
out
leave
push
call
sub
xchg
imul
jne
lret
loop
repz
or
push
dec
outsl
stos
nop
xchg
add
add
scas
test
or
test
cmp
test
pusha
cmp
and
sbb
sub
andb
bound
cli
mov
sbb
scas
xor
sbb
scas
sbb
mov
jo
dec
add
inc
imul
xor
xchg
punpcklwd
hlt
mov
xchg
add
sub
xor
sbb
sbb
mov
inc
cs
mov
rcrl
adc
loope
add
sub
xchg
aas
mov
pop
push
xchg
mov
shll
cmp
add
les
stos
mul
add
sbb
jns
push
cmp
jno
insl
inc
cmp
mov
sub
inc
push
add
scas
out
out
test
cwtl
add
xor
fsubs
mov
mov
xor
pop
loop
js
insb
add
xor
fiaddl
jle
add
jns
mov
testb
mov
push
inc
push
and
fstl
aad
je
call
jp
adc
sub
testl
lcall
add
call
into
add
enter
lds
mov
sbb
dec
xchg
sub
sarb
pop
push
push
insl
add
add
and
shlb
ljmp
int3
inc
in
pop
cld
mov
ja
push
jbe
gs
and
xchg
out
sbb
testb
mov
imul
out
add
mov
sbb
mov
mov
cli
repz
jo
pop
setle
sbb
leave
sbb
cmp
cld
lods
push
xchg
jo
loop
mov
cs
aam
inc
mov
lock
mov
or
inc
push
sbb
push
add
ljmp
repz
aas
add
rolb
add
lds
insl
adc
iret
into
rcrb
jno
dec
or
pusha
ljmp
add
or
cmp
mov
inc
xchg
xchg
push
adc
fs
bts
arpl
insb
test
push
jl
add
inc
sub
sbb
add
aas
mov
xor
and
rcr
add
xor
dec
lcall
and
data16
mov
pop
mov
pop
inc
jne
jmp
dec
inc
pop
add
cmp
out
sbb
push
test
mov
addb
dec
push
add
and
inc
fxch
xorl
xchg
ss
cmp
pop
pushf
pop
sub
mov
int
shrl
add
bound
decl
jge
sub
mov
ss
dec
dec
xor
add
pop
shl
int
loopne
adc
add
xchg
xor
xchg
aas
mov
add
insb
jae
cmpsw
xchg
add
mov
push
movsl
negl
je
add
bound
fildl
dec
push
sub
in
movsb
cmp
mov
shrb
inc
fadds
xor
pop
arpl
cmp
fndisi(8087
mov
enter
push
add
repz
add
mov
mov
dec
sbb
add
subb
xchg
sub
es
push
js
lea
lock
loope
pop
daa
sar
bound
movb
mov
add
adc
stos
add
ret
add
pop
sbb
and
and
mov
inc
repz
pushf
add
fimull
jne
dec
fcoms
add
into
lret
bndldx
mov
push
adc
adc
sub
push
jmp
cmp
addr16
out
loop
je
scas
add
xor
es
cmp
setge
push
into
cmp
mov
andb
ucomiss
out
mov
cmp
cmpb
roll
jge
and
mov
orb
in
add
imul
mov
je
inc
push
es
adc
and
jp,pt
mov
stos
mov
cmp
xchg
jl
jp
test
sti
xor
popa
dec
test
imul
or
or
fimuls
pop
xchg
add
test
add
or
adc
sbb
js
xor
sarl
xlat
jae
add
mov
xor
cmc
push
add
push
pop
dec
or
dec
pop
jno
or
push
cmp
pushf
ret
lea
add
xchg
adc
xchg
incb
mov
mov
jbe
adc
ss
leave
add
fsubs
clc
mov
mov
aam
inc
dec
or
dec
adcb
sub
sahf
loop
jle
inc
and
xchg
dec
adc
xchg
scas
fs
enter
test
cld
dec
adcl
add
add
xchg
and
jp
imul
in
cltd
in
push
out
sbb
adc
in
pop
push
push
cmp
mov
add
cltd
add
scas
mov
loopne
add
js
xchg
or
and
or
mov
jnp
fimull
inc
insb
js
inc
in
pop
adc
xchg
icebp
cli
and
rorl
inc
inc
add
pop
dec
cwtl
sti
out
int
cmp
mov
add
scas
notl
repz
add
or
insl
out
sbbb
pushf
lock
push
sub
push
movsl
mov
roll
add
aam
jmp
add
push
sub
test
ja
add
in
bound
repnz
inc
add
jl
imul
push
dec
sbb
push
adc
loopne
ficompl
dec
lds
stos
add
fsqrt
cli
pop
ror
sub
test
jb
xlat
movsl
dec
jge
fcoml
add
lret
pop
loope
fwait
jecxz
add
gs
shlb
sbb
sbb
arpl
lea
push
stos
push
repz
add
in
adc
shr
lods
cltd
pop
ljmp
xor
add
inc
in
repnz
insl
add
lock
loope
dec
loop
jl
or
push
fs
inc
pop
dec
xchg
mov
out
add
loop
ds
cmc
add
or
test
std
pop
fsts
dec
inc
adc
cmc
pop
adc
and
pushf
mov
add
lock
mov
lret
sub
inc
std
dec
cld
sbb
sbb
or
pop
add
fbld
loope
or
cmp
sbb
jmp
push
lret
scas
xchg
xor
adc
mov
shrb
xchg
sahf
mov
push
mov
mov
adc
inc
in
add
sbb
pop
rorl
inc
mov
add
aam
sbb
dec
jl
loop
sbb
fnstsw
jb
push
enter
or
inc
sbb
xor
pop
cmpsl
cwtl
xchg
push
mov
std
fistpll
imul
inc
vmovsd
adc
popl
scas
pop
add
inc
arpl
inc
rsqrtps
add
hlt
lock
sbbb
inc
add
cs
test
out
add
icebp
pop
pop
pop
push
inc
imul
in
add
adc
cmp
jnp
mov
rol
les
add
cmp
xor
dec
cli
roll
mov
dec
pop
popa
repnz
and
push
shlb
add
push
inc
nop
icebp
popf
in
inc
add
mov
push
into
or
nop
gs
call
rcrl
mov
test
jmp
pop
test
daa
movd
arpl
pusha
mov
lds
ror
add
in
sub
adc
inc
jmp
leave
xchg
push
lods
xchg
cld
sbb
rorl
push
lret
and
add
lahf
mov
loopne
push
inc
lock
push
fistpl
cmp
add
lods
sbbb
shrl
and
cli
mov
cmp
aas
stc
std
je
int
insl
mov
mov
cmp
es
sbb
add
pop
fcompl
mov
daa
rorb
fwait
ret
mov
mov
andl
in
mov
ficomps
cmp
loopne
mov
jo
addb
push
sbb
cmp
call
cmp
test
fistl
add
xchg
mov
inc
data16
pop
xchg
out
outsl
and
std
add
jmp
cmp
stc
imul
pop
loopnew
mov
add
sbb
xchg
inc
inc
test
add
or
cmp
mov
cmp
lods
jns
sub
loop
add
push
add
sub
pop
adc
add
ds
in
lcall
pop
mov
dec
xor
sub
loop
jbe
push
cmp
push
jle
ljmp
jno
xchg
test
ljmp
ds
adc
adc
sbb
and
add
mov
in
push
shlb
push
fnstcw
ficompl
cmp
aam
jb
andl
adc
and
mov
adc
inc
adc
inc
and
cmp
out
sub
icebp
mov
loope
movsb
jl
mov
or
and
push
loop
loope
mov
adc
xor
dec
int3
adc
mov
les
adc
ret
daa
int3
xchg
icebp
popa
xchg
int3
adc
and
sbbb
xchg
ret
sbb
sti
pop
jecxz
std
data16
add
inc
mov
leave
addr16
pop
add
popa
sbb
add
mov
xchg
stos
lcall
and
cmp
out
xorl
outsb
pusha
cmpb
adc
mov
cmpl
adc
xor
inc
dec
in
mov
int3
adc
jbe
cmp
sbbb
je
xor
push
mov
mov
or
aam
data16
lods
xor
int3
adc
cld
int3
adc
xor
xchg
adc
sub
je
mov
fwait
mov
push
pop
loopne
fsub
mov
movsb
push
or
xchg
adc
outsl
xor
clc
int
xchg
adc
bound
pop
mov
cmp
sub
rcrb
sbb
ljmp
or
sub
fmuls
xor
setl
clc
push
and
or
inc
fs
mov
sub
fnstenv
in
aam
je
hlt
inc
loop
pop
xchg
adc
mov
fnstenv
mov
xchg
xchg
mov
sub
mov
lds
idivl
mov
test
mov
mov
jge
xchg
pop
cmpsb
pop
adc
clc
stc
jp
sbb
cmp
ds
xor
call
je
cwtl
ret
loop
pop
xchg
cmp
test
sub
fprem
dec
fmul
mov
jbe
sbb
lret
jbe
dec
xor
call
test
or
add
mov
cmpsb
pop
mov
inc
push
call
sbb
or
mov
adc
shlb
mov
js
add
inc
sub
or
push
xchg
cmp
xchg
mov
mov
and
push
cmpsl
add
cmp
push
fwait
and
mov
enter
fadds
xor
out
cmp
js
ret
mov
and
or
jmp
cmp
adc
icebp
js
pop
inc
cmp
clc
cmc
mov
and
test
hlt
mov
inc
test
cwtl
bound
and
loope
rclb
and
jl
dec
test
or
sbb
and
loopne
cmpl
in
outsb
inc
mov
sbb
add
push
clc
dec
push
pop
adc
rcrl
sbb
xchg
pop
mov
and
ret
xor
pusha
data16
and
pop
ret
add
cmp
gs
sub
or
sbb
in
add
sahf
mov
and
lret
push
push
ds
rol
dec
test
js
fdivrs
sbb
in
xor
dec
pop
and
and
cmp
clc
sbb
jmp
mov
and
push
sub
push
xchg
stc
dec
sbb
mov
mov
dec
data16
fs
cmp
pop
lar
push
andb
xorb
loope
push
push
inc
inc
mov
xchg
lcall
adc
pop
pop
inc
dec
fcomps
pop
inc
xor
and
pop
sbb
push
icebp
inc
repnz
push
or
push
jbe
loop
inc
mov
sbb
mov
cltd
js
mov
test
dec
or
add
aam
pop
push
sahf
push
in
inc
lods
xor
xchg
rol
push
inc
sub
mov
dec
les
xor
mov
lahf
mov
jns
xchg
adc
pop
and
movb
pop
mov
orl
or
sub
lods
paddusw
andl
cltd
or
popf
pop
leave
lret
push
ret
nop
lods
sbb
fsubrl
pop
add
dec
cmp
faddl
inc
mov
xchg
adc
jae
xchg
and
cwtl
xor
push
les
inc
sub
sbb
add
cmp
jp
pop
je
dec
xchg
lock
push
lret
xor
out
push
mov
pop
adc
sar
add
mov
clc
lea
stos
add
fimuls
jnp
sub
in
inc
ficoml
ljmp
dec
xchg
inc
xchg
jl
jb
add
cmp
mov
push
mov
stc
jnp
sub
push
pop
add
add
dec
xchg
inc
cmp
inc
nop
out
leave
shlb
movsl
jecxz
add
sub
cmp
mov
repnz
pop
jnp
das
mov
sub
pusha
mov
nop
loopne
lret
pop
add
jns
inc
fs
jbe
sbb
add
push
daa
rorl
jae
xor
sub
pusha
jp
inc
sbb
mov
mov
out
fdivrl
aam
jnp
xorl
push
aas
arpl
mov
std
add
loop
adc
loope
fwait
les
cld
repz
xor
cli
add
push
lds
int3
mov
rolb
rorl
push
mov
add
inc
push
xchg
push
mov
sub
insb
enter
test
add
hlt
out
inc
add
jnp
shlb
rcr
adc
gs
pushf
pop
mov
push
mov
jns
in
pop
adc
out
add
test
int3
iret
cmp
push
pop
hlt
adcb
cli
inc
mov
add
sub
fadds
add
jns
inc
adc
aad
cmp
mov
stos
dec
movsb
sub
mov
xchg
lret
pusha
popa
fistpll
xor
add
das
lahf
xor
sahf
orl
pushf
inc
push
cli
les
push
lock
mov
out
jmp
jge
test
adc
cmp
mov
iret
add
rcrb
add
mov
dec
add
xchg
add
add
fdivrl
xchg
fisttps
leave
mov
xchg
mov
test
mov
sbb
fsubrs
jle
es
cmp
xorl
jo
push
add
dec
addr16
push
inc
lret
add
add
sbb
int3
inc
dec
inc
rolb
out
pop
mov
mov
cwtl
pushf
xchg
xor
pop
or
inc
int
push
push
mull
cmp
mov
cld
popf
iret
roll
push
xor
pop
add
inc
jle
movsl
jns
add
push
jg
cmp
fucom
cld
push
out
dec
pop
mov
and
lods
mov
repz
push
adcb
jg
fsubs
jge
in
mov
mov
xorb
movsl
adc
pop
icebp
mov
cmp
outsl
xor
adc
ret
mov
adc
push
fnstcw
popf
mov
sti
scas
xchg
pusha
sub
pmullw
out
shl
mov
pop
es
aam
sub
push
aad
push
sbb
movsl
idivb
or
in
push
out
imul
adc
add
into
lock
mov
rcrb
xchg
popf
jnp
add
and
mov
gs
xchg
xchg
dec
lret
cmp
nopl
or
mov
add
or
lods
pop
xor
test
jge
cmc
testl
dec
jo
outsb
nop
pop
jp
add
pop
out
dec
pop
imul
popf
push
call
pop
cmpsb
mov
fistpl
cmpsl
pop
leave
shll
push
xor
dec
insb
add
or
je
pop
xlat
mov
xchg
sub
stos
add
pop
movl
scas
pushw
sti
xchg
adcb
add
or
ljmp
and
cmpsb
aad
mov
test
cwtl
lock
jae
add
test
lods
add
nop
fstps
loopne
clc
fimull
leave
pop
movsl
or
mov
mov
sbb
mov
call
das
sbb
pop
stos
inc
roll
nop
mov
push
lret
fistpll
cld
add
js
or
lds
and
int3
in
cwtl
add
hlt
or
or
push
mov
bound
roll
ret
enter
xchg
push
sub
sbb
aas
mov
imul
test
nop
pop
ja
add
pusha
fimuls
add
orl
jo
sub
cmp
mov
cs
mov
xchg
sbb
pushf
rcrb
inc
sbb
push
jecxz
push
lods
add
adc
mov
subl
fisubl
into
push
ret
push
xor
dec
mov
fisttpl
dec
add
adc
mov
dec
dec
push
xchg
leave
jae
push
fistpll
inc
sbb
add
lock
fldl
aas
push
and
cmp
add
push
inc
or
xorb
sbb
sti
addl
mov
xor
dec
es
push
fs
scas
inc
dec
sub
sbb
mov
and
cmp
xorl
in
adc
push
cmp
jmp
sub
add
jl
icebp
add
xchg
add
mov
xor
inc
xor
add
into
cmp
test
lods
inc
jle
lods
loop
dec
add
rclb
testl
les
fs
dec
jnp
test
out
or
outsb
dec
add
or
ja
push
mov
mov
mov
push
push
je
push
lds
mov
fwait
dec
mov
sahf
jne
nop
add
xlat
xchg
imul
mov
add
imul
sub
push
inc
ds
or
sahf
cmc
add
dec
xchg
xchg
dec
sub
scas
mov
pushf
mov
dec
add
cmp
mov
rcl
jbe
jl
jecxz,pn
popa
jb
arpl
or
notl
cmp
movsb
mov
dec
sbbl
mov
pop
test
add
mov
adcl
roll
sbb
mov
jecxz
mov
mov
or
sub
add
movsb
xchg
jae
jg
xor
or
out
or
out
add
iret
xchg
xchg
popf
cmc
mov
mov
arpl
sub
addr16
add
int
lcall
out
cmp
insl
stos
cmpsl
add
xchg
sub
ret
in
hlt
cmpb
cmpsl
cld
sbb
fbld
scas
cmc
add
ljmp
add
ja
mov
cs
dec
inc
add
insl
xorb
mov
push
sbb
xchg
lret
lahf
hlt
loope
inc
mov
cmpsl
push
rolb
or
pop
pop
mov
lahf
add
xchg
inc
sbb
outsl
add
dec
js
sub
adc
mov
lea
mov
cmc
inc
out
add
rcl
mov
loop
pop
add
mov
push
add
insl
push
add
incb
mov
popf
add
incl
movsb
stos
push
add
repnz
mov
rol
ljmp
push
push
inc
pop
mov
xchg
shl
int3
mov
push
mov
insb
and
add
add
pop
mov
pop
mov
jno
enter
cli
mov
fcomp
inc
mov
push
in
and
pusha
mov
push
push
jg
roll
adc
add
ret
mov
jno
clc
icebp
xor
cltd
and
pop
sbb
inc
scas
popa
lcall
mov
xor
jge
push
pop
mov
fldl
cmp
lds
sbb
jge
aaa
ss
movl
adc
push
in
inc
inc
pop
push
or
mov
lahf
aad
enter
or
add
mov
pop
in
cmp
jo
jnp
or
add
and
add
test
ja
pop
dec
jle
add
sub
adc
push
and
dec
xor
lock
insb
xlat
lret
xchg
outsb
popa
aaa
sub
ret
movsl
mov
adc
and
sub
decl
xchg
add
adc
sbb
sahf
or
push
add
subl
aam
or
gs
rorb
mov
and
adc
jne
and
or
or
push
xchg
imul
push
rcrb
push
bound
lea
inc
pusha
lahf
inc
pop
int3
adc
or
and
add
into
jg
icebp
cmpsb
int3
or
pop
aad
xchg
adc
movsb
xor
xchg
dec
cmp
inc
add
xor
cmp
jns
mov
icebp
sahf
pop
adc
js
lods
xor
shlb
inc
and
add
ds
and
add
mov
ss
xchg
mov
sysret
daa
loope
xchg
outsl
aas
subb
mov
ja
add
ret
sub
fdivrl
push
mov
fimuls
cmp
sbb
jle
loope
mov
or
pushf
adc
mov
jg
lods
push
fnstcw
data16
lret
sub
xor
adc
rcll
mov
insb
rcrb
pop
out
push
outsl
insl
add
dec
repnz
jle
pop
xchg
add
icebp
mov
pusha
adc
ffreep
pusha
gs
mov
push
xor
add
push
cpuid
add
inc
mov
pop
imull
pusha
fdivl
mov
fsubs
or
dec
gs
fsts
test
add
rclb
shlb
xor
addl
cmp
xchg
pop
add
mov
rolb
repnz
pop
push
mov
push
adc
shlb
xorb
mov
out
mov
jge
xor
push
cs
push
adc
or
insl
jbe
inc
fildl
popf
inc
jg
enter
mov
or
pop
rorl
xchg
imul
nop
pushl
aas
push
cs
repnz
add
or
into
pushf
clc
fiadds
jmp
je
push
jne
nop
repnz
add
xchg
xor
sti
aaa
inc
add
push
add
add
xchg
adc
add
out
int
inc
inc
add
test
add
and
pop
mov
loope
sbb
lret
cmp
sbb
int
cmp
les
cwtl
test
in
cmp
pop
lock
pop
lahf
filds
cmpsb
xchg
mull
add
mov
cmc
or
xor
pushf
sub
mov
xchg
inc
adc
xchg
cwtl
or
dec
add
pop
push
mov
adc
frstor
push
mov
imul
cmp
adc
adc
rclb
add
lods
xchg
xchg
imul
inc
or
loop
call
sti
ret
inc
mov
mov
aam
add
cwtl
in
addr16
cmp
je
mov
xlat
enter
pop
addl
inc
add
clc
rcrb
fcomi
jo
fstps
mov
lods
sarl
sbb
or
outsb
sub
dec
testb
mov
pop
inc
cmc
adc
stos
dec
hlt
in
push
cmpsb
insb
mov
jmp
and
lds
add
cs
ja
mov
jns
lds
cmp
pusha
mov
and
aam
lahf
fdivrs
mov
add
pop
fnstenv
add
js
xchg
add
pop
cmc
or
aaa
fwait
ljmp
sub
mov
sbbl
xor
adc
jmp
shlb
mov
cmp
mov
fwait
push
stc
or
sbb
xchg
push
jmp
adc
out
cmp
cltd
xchg
fadds
pop
aaa
stos
sbb
push
repz
repnz
sbb
lds
pop
xchg
add
sarb
pop
aas
andb
mov
fsubl
mov
xor
mov
sub
das
push
mov
lock
add
mov
xchg
stos
pop
fisubrs
sbb
repz
out
dec
mov
adc
cli
sbb
and
cltd
jmp
mov
xor
iret
iret
fiaddl
push
inc
and
pop
and
mov
in
xor
sti
rorb
push
mov
add
orl
xchg
add
push
subb
rorb
and
jge
icebp
push
lods
push
test
fisubrs
stos
cmp
popa
pop
adc
mov
nop
xchg
lret
scas
test
fistpll
rcrl
pop
lock
add
add
lds
sbbb
fwait
rclb
icebp
push
jbe
in
cmp
sbb
pop
xor
mov
dec
shlb
sbb
push
push
xor
ljmp
das
jle
add
cltd
rol
test
repz
or
pop
push
xchg
adc
pop
out
lock
sbb
rcl
sub
popl
das
je
mov
cs
sahf
xor
imul
sti
xor
lods
add
pop
adc
stos
shr
add
inc
pop
mov
or
mov
add
mov
fldt
or
xor
fldenv
xchg
out
adc
jmp
sbb
pop
inc
inc
pop
push
cmp
jne
mov
add
push
cmpsb
mov
push
inc
leave
js
hlt
outsl
mov
sti
in
add
orl
jmp
lea
int
push
fsubl
mov
test
ret
mov
fnstsw
add
fs
push
out
cmc
ss
inc
add
incl
repnz
lods
xor
dec
addr16
jecxz
sub
adc
push
cmp
cmpsl
jnp
fdivl
pop
js
insb
xor
nop
out
aad
pop
push
and
je
lods
test
jnp
add
pop
iret
loope
enter
cmp
xchg
int
push
pop
mov
mov
add
jbe
add
call
mov
sub
and
fisubl
rcrl
idivb
xorb
xchg
inc
in
add
mov
fimull
fs
hlt
push
add
out
out
xchg
mov
inc
add
orl
rol
icebp
mov
add
push
cwtl
mov
shlb
pop
outsb
jno
addb
cmp
add
inc
dec
add
aaa
out
push
fdivrp
bound
ja
sbb
add
fstps
jp
xor
lret
mov
dec
add
push
sbb
and
xchg
xchg
cmp
push
clc
pop
mov
in
movsb
roll
jmp
or
xchg
sbbb
or
adc
scas
mov
cmpl
ja
stos
mov
add
push
and
inc
add
mov
lret
jae
les
addb
jle
lods
jg
mov
adc
int3
mov
pop
bound
shrb
add
fwait
aam
jg
icebp
or
out
faddl
mov
add
sahf
or
outsb
pavgb
punpcklbw
and
pushf
xchg
mov
jne
stc
icebp
mov
mov
je
or
jae
popf
inc
add
leave
and
loopne
jl
add
fidivrl
add
push
loopne
loope
add
stos
sub
dec
xor
push
rcrb
addl
and
std
xchg
mov
xchg
mov
or
cmpsl
roll
push
push
loopne
adc
insl
inc
jle
add
adc
add
lods
add
mov
add
mov
push
push
jl
and
test
ds
sub
out
mov
stc
cmc
push
mov
adc
jp
mov
bswap
mov
xor
mov
jo
sbb
pop
enter
or
rorl
cmp
xchg
lods
lret
adc
mov
call
add
cli
out
test
enter
rolb
inc
pop
rclb
insl
mov
out
or
sti
xor
int3
xchg
fiaddl
cmp
and
test
cmp
sbb
add
js
in
cmc
adc
sbbb
push
nop
pop
add
ret
icebp
lds
loopne
or
cmovb
ffree
ja
mov
mov
iret
pop
mov
insb
icebp
and
inc
enter
outsb
mov
clc
ret
nop
out
xchg
fsubrs
int3
add
daa
push
in
adc
dec
jg
add
inc
mov
cmp
add
lock
enter
out
sub
mov
dec
sbb
pop
xchg
shrb
imul
add
sarl
mov
jl
lds
inc
testb
pop
pop
data16
lock
enter
call
pop
cli
jge
and
and
xchg
push
cmc
add
mov
imul
rcr
sti
pop
lret
sub
stc
leave
dec
mov
inc
div
adc
in
add
inc
aaa
mov
xchg
sti
in
jo
add
push
insb
sbb
sub
mov
mov
sbbb
push
loop
or
je
icebp
ficoms
cmp
jo
add
loopne
ret
cwtl
test
xor
in
test
movsb
xor
std
inc
push
arpl
xchg
gs
pop
adc
mov
mov
rcrl
add
iret
pop
mov
add
cmpsb
mov
sbb
and
rclb
pop
fldcw
mov
stos
or
adc
cld
lret
loop
add
fdivs
inc
pop
test
testb
sub
jg
pop
sub
out
out
pop
pusha
nop
shl
jno
push
lock
pushl
arpl
dec
add
neg
loopne
das
xchg
push
subb
inc
addr16
or
jae
loopne
add
inc
pop
roll
add
not
add
ljmp
cmp
insb
jbe
in
fwait
xchg
xor
test
aas
fisttps
lret
push
aam
scas
lret
mov
xlat
scas
dec
or
add
repz
in
push
cmp
bound
jne
mov
adc
sbb
rcrb
lods
add
imul
pop
lods
es
add
lret
ss
push
pop
out
into
inc
clc
pop
or
or
in
stc
fs
add
or
cmp
mov
mov
pop
mov
sti
push
xor
add
and
add
lcall
shl
popa
flds
lahf
or
mov
or
xchg
imul
mov
xchg
pop
aas
dec
mov
les
loope
xchg
mov
in
xchg
add
and
sbb
dec
out
sbb
xor
xchg
sub
loop
jb
imul
and
jo
add
mov
insb
mov
pop
jae
xchg
mov
dec
or
cmp
andb
nop
ja
mov
xorb
add
test
out
pusha
sub
cmp
add
pusha
std
add
dec
imul
imul
push
test
adc
inc
ss
push
mov
int3
add
push
scas
pop
gs
or
fisubrs
int
sbbl
jl
push
aaa
lock
xchg
orb
add
sbb
pop
daa
add
jg
inc
cs
jns
into
add
inc
adc
xor
lods
ljmp
pushl
or
adc
add
sbb
popf
mov
add
sub
sbb
pusha
or
cmp
mov
xchg
xchg
orl
cwtl
add
mov
and
inc
scas
das
add
mov
jae
mov
xchg
jo
pop
add
movsl
int3
fists
stos
mov
pop
cmp
out
bound
popa
add
mov
outsb
adc
icebp
or
inc
xchg
pop
add
mov
faddl
xor
pop
aad
push
add
mov
sub
mov
sub
shl
fiaddl
mov
xor
jnp
push
clc
sbb
add
dec
mov
ret
loopne
mov
mov
aam
cmp
xor
fptan
mov
sbb
aaa
adc
push
jecxz
or
add
ds
cmpsl
sub
xor
push
les
cs
stos
xchg
add
push
push
push
sbb
jno
push
mov
xor
sar
arpl
sub
test
loop
in
imull
fdivl
ja
add
popf
mov
add
push
mov
add
fs
and
fwait
mov
cmp
sbb
ljmp
les
icebp
subl
or
sub
insl
dec
push
sarl
movsb
fildl
add
hlt
rcr
sbb
shl
out
mov
pop
lock
add
and
xorb
xlat
mov
std
sub
mov
ljmp
addr16
stos
pop
cmpsl
fadds
mov
popa
jge
mov
divb
add
loope
xchg
inc
add
ret
xlat
mov
dec
rolb
loopne
pop
mov
push
cmp
ja
in
jne
xchg
fidivrs
or
add
push
sub
adc
or
repnz
or
lret
pop
mov
popa
pop
dec
in
repnz
sbbb
in
pop
jbe
divb
cmpsb
inc
add
cmp
mov
clc
inc
add
sarl
push
out
imul
mov
bound
fmull
mov
cmp
fsubrs
jg
add
mov
sbb
inc
and
push
fmuls
mov
cltd
sbb
shrb
test
mov
shrb
inc
add
sbb
inc
cwtl
mov
cmc
pop
inc
repnz
lahf
or
rcrl
add
jmp
loop
out
test
pop
adc
inc
clc
add
pop
and
mov
mov
dec
nop
inc
clc
add
add
mov
push
subl
iret
or
add
xor
jns
lds
cmp
dec
cltd
mov
mov
adc
add
loop
sbb
and
test
fwait
test
inc
mov
add
fdivs
adc
ds
dec
or
xlat
sbb
test
fcmovnbe
repnz
popa
xchg
call
faddl
pushf
les
movl
cs
pop
data16
sbb
out
std
add
jl
imul
sahf
jnp
add
out
mov
roll
xchg
or
and
ja
xchg
push
add
mov
lock
mov
sti
add
stc
jg
mov
bound
push
out
mov
lock
ljmp
sub
or
sti
add
jmp
ja
mov
js
push
xchg
mov
sub
adc
sbb
push
mov
sbb
cmpsb
movsl
xor
pusha
std
or
adcb
add
mov
ja
add
gs
fiaddl
jle
mov
mov
inc
mov
aam
rolb
add
add
or
popf
mov
loopne
jae
shll
jbe
cltd
movsb
pop
getsec
add
mov
clc
pop
push
gs
icebp
fcoml
cli
es
aaa
mov
or
es
inc
adc
addb
add
js
cmp
adcb
aaa
sbb
xchg
add
outsl
addl
jg
push
mov
cwtl
pusha
mov
or
jns
and
sbb
jo
or
and
pop
jp
aaa
ljmp
test
dec
xchg
xchg
into
pop
push
xchg
sbb
xlat
inc
or
es
lahf
jbe
lods
ljmp
dec
andl
mov
dec
and
lret
add
test
lret
call
jno
xchg
mov
ror
ret
dec
cmp
shrb
mov
mov
in
fiaddl
pusha
int3
cmp
jae
pop
dec
hlt
lock
xor
fwait
push
xor
ss
out
addr16
js
sub
aaa
add
add
jmp
cmp
in
lods
and
push
jbe,pt
adcb
fnsave
mov
fiadds
pop
add
xchg
dec
cmp
ljmp
jbe
xor
xchg
out
add
fcompl
push
lahf
add
mov
add
adc
fstpt
shlb
mov
add
xchg
scas
stc
in
mov
fstl
sub
rcrb
pop
bound
sbb
les
add
xor
xor
call
adc
testl
cmp
mov
out
loope
add
iret
jp
add
mov
inc
addb
sbb
shl
movsl
add
mov
cmp
aad
inc
ret
sti
mov
stos
ret
xchg
jne
or
mov
pop
std
in
add
pop
aas
cs
jne
and
inc
add
xchg
iret
std
add
push
test
pushf
popf
nop
sbbb
cmpsb
test
imul
rcrb
jmp
or
and
addr16
push
and
adc
cli
jns
movsl
jmp
and
push
test
mov
push
pop
add
xlat
push
cli
subl
jmp
aam
inc
push
ds
xchg
add
pusha
das
adc
sti
mov
add
dec
mov
sbb
adc
jae
mov
adcb
or
insl
gs
push
add
mov
pop
imul
adc
lret
mov
add
dec
sti
sbbl
and
add
xorb
or
je
xchg
or
stos
in
jg
cmp
jg
in
jb
cltd
mov
add
push
inc
hlt
loop
clc
push
xchg
stos
test
inc
loopne
mov
inc
push
mov
xor
jg
jle
add
dec
or
and
shlb
pop
mov
decl
jge
test
push
andl
mov
push
adc
mov
or
jno
rolb
pop
mov
sti
jae
mov
sbbb
xor
pop
icebp
inc
xor
in
daa
add
rclb
jnp
dec
jg
mov
mov
xchg
or
loope
xor
pop
fstp
add
hlt
jl
inc
aam
mov
scas
or
add
add
mov
push
add
jl
cmp
aad
mov
push
push
mov
addb
in
sbb
cld
xchg
and
push
aam
cmp
cmpsb
xor
add
sbb
in
mov
lods
and
dec
add
cmp
cwtl
out
push
dec
scas
rcr
inc
in
pop
push
push
or
addb
push
or
call
bound
mov
adc
mov
ret
mov
in
mov
sar
mov
call
stc
jns
push
pusha
sub
mov
or
sub
xor
add
aaa
inc
push
xchg
lods
jge
push
inc
int3
movsl
inc
aam
add
jns
xlat
sbb
cmp
pop
add
dec
mov
test
mov
inc
add
add
pusha
mov
or
dec
repnz
jo
add
test
xor
sbb
fcmovnb
add
sub
cmpsl
push
push
stos
into
add
dec
push
out
clc
adc
lret
fldenv
lods
es
add
xchg
sub
mov
mov
inc
fimull
fcoms
lret
std
adc
sarl
cmpb
in
add
xor
icebp
icebp
jno
rorb
stc
js
rcrb
mov
in
outsb
cmc
xchg
or
int3
orl
push
int
xlat
ret
out
lds
sbb
mov
out
add
jge
pop
imul
and
cli
cmp
push
into
cmp
icebp
jp
cmpsl
nop
add
orl
mov
or
fcmove
mov
in
cmp
jp
xchg
mov
cmp
push
mov
or
push
push
rcrb
cwtl
pop
cmc
pop
jbe
mov
dec
ds
sbbb
dec
jne
leave
inc
call
adc
ljmp
xchg
jnp
loope
sbb
jbe
pusha
mov
adc
movsb
push
mov
bound
and
xor
adc
fucomip
sub
add
xor
enter
bound
dec
dec
xor
add
imul
cs
fadd
sub
lahf
rol
inc
xchg
mov
mov
fwait
and
mov
add
je
sub
pop
pop
fidivrs
add
xchg
xlat
cld
loopne
push
add
xchg
xorl
jmp
addb
dec
or
and
inc
loopne
jns
js
add
icebp
aaa
movsl
add
outsl
inc
out
imul
add
add
shll
xchg
shlb
nop
push
xor
cmp
or
and
pusha
mov
pop
mov
pop
mov
add
ljmp
cmp
pusha
cmpl
aas
inc
inc
push
add
in
daa
int3
out
add
xor
fcomps
rolb
in
add
cld
mov
mov
in
inc
dec
imul
xor
loop
jbe
push
jns
add
dec
fadd
push
dec
xchg
inc
sbb
dec
mov
rclb
clc
jg
jl
add
aam
sbb
add
mov
xor
jns
dec
inc
roll
xor
gs
mov
lret
or
mov
jne
cld
dec
jns
push
mov
fldz
sbb
add
xchg
cmpsl
ret
aas
push
mov
dec
cli
sub
xor
loopne
mov
cmp
and
out
sti
sahf
data16
ds
inc
add
jbe
pusha
dec
add
add
divl
test
out
add
imul
add
ror
dec
es
xchg
jp
or
pusha
pop
add
mov
push
add
jae
adc
js
pusha
mov
jmp
sbb
push
addb
outsl
xor
ja
mov
int3
mov
stos
cwtl
add
push
pop
pusha
jp
es
enter
test
dec
shlb
push
mov
je
enter
jp
pop
push
inc
frstor
cmp
push
and
rolb
fdivl
xchg
addr16
xor
dec
mov
incl
ret
popa
xor
add
cmovbe
or
push
clc
xor
imul
jns
jmp
xchg
stc
pop
xor
aam
dec
ret
cld
aam
add
xor
sub
fcomi
repz
imul
mov
out
inc
xor
movsb
and
xor
push
lcall
adc
ja
daa
or
xchg
push
and
bound
adc
les
jbe
nop
pop
xchg
sti
xchg
inc
xchg
push
or
sbb
out
xchg
mov
sbb
inc
arpl
fildll
cwtl
int3
xor
repnz
les
adc
mov
repnz
sub
in
sub
dec
add
stos
push
dec
cmp
lcall
push
inc
mov
hlt
jbe
clc
mov
sbb
pusha
xor
mov
push
sarl
in
xchg
mov
inc
push
inc
aam
orb
daa
ret
leave
test
add
nop
jl
sbb
je
sbb
adc
sub
cmp
les
sub
pop
rolb
push
push
popf
imul
xor
adc
out
push
imul
sub
push
pop
cmp
shl
inc
jb
rolb
aaa
insb
popf
jle
jg
loopne
add
adc
mov
sub
aaa
int
aam
add
pushf
jp
inc
add
mov
xor
push
add
xor
push
xchg
jmp
pop
sub
enter
push
inc
shlb
shrb
int
mov
adc
xor
sarb
das
add
mov
lcall
adc
in
mov
add
or
pop
sbb
push
int
xchg
outsl
test
rolb
pop
movl
adc
in
mov
jl,pn
inc
lcall
je
imul
lds
or
or
dec
addb
cmp
mov
int
add
mov
adc
push
fs
sbb
push
mov
mov
jp
mov
cld
and
syscall
add
je
mov
push
mov
test
adc
add
ret
je
sub
jno
and
push
lods
mov
pop
mov
ss
fidivs
push
insb
add
leave
iret
cwtl
jo
loopne
and
add
ljmp
add
in
adc
orb
push
cwtl
cmp
or
lret
fldl
sbb
fistl
btr
pop
pusha
xchg
hlt
lods
jnp
mov
jg
nop
rclb
mov
xchg
cmp
xchg
inc
and
and
inc
clc
adcl
dec
subb
shlb
add
ss
pop
incl
inc
daa
lret
jg
push
mov
push
mov
aas
das
xor
fdivr
lahf
add
push
sbb
aaa
lds
sub
cmp
addr16
cld
adc
inc
pop
add
rcr
jmp
insb
sarb
add
les
lret
dec
or
sbb
pusha
push
jns
mov
lret
cwtl
inc
call
adc
jb
cmp
xor
cmp
lret
lcall
push
add
pusha
inc
outsb
rorl
test
repnz
and
mov
subl
ljmp
push
setns
sub
fidivrl
ds
pop
aam
sarb
leave
add
pushf
out
int
aad
inc
xor
mov
add
add
mov
les
hlt
mov
insb
dec
dec
sub
mov
in
test
inc
inc
mov
lock
add
fwait
sub
test
cmp
or
dec
or
add
push
outsl
xchg
or
aad
adc
dec
dec
push
clc
xor
in
icebp
jo
lods
addb
dec
add
fiaddl
popf
and
xchg
xor
fisttpl
jo
stos
sbb
add
lods
and
mov
adc
cltd
enter
add
call
sti
imul
fstl
push
sub
mov
sahf
mov
cmpsl
mov
stos
add
push
mov
jmp
int3
adc
fsub
xchg
repnz
dec
or
xor
dec
mov
cmp
push
shlb
xchg
fldcw
sub
jge
pop
adc
cmpsl
push
sub
add
pop
push
push
nop
pop
add
sbb
add
rolb
ret
imull
xor
xchg
jl
sub
adc
es
and
xchg
cmp
jl
test
je
or
or
xchg
mov
adc
push
inc
add
sub
mov
pushf
or
scas
cmp
jns
sbb
frstor
mov
fistl
out
pushl
add
xchg
push
jno
push
pop
mov
andb
pop
mov
out
dec
pusha
insl
push
enter
out
cld
ltr
outsl
pop
jbe
xchg
in
dec
mov
les
jo
pushf
jae
and
adc
cmovae
mov
into
fistpll
cwtl
sbb
fldcw
and
xor
das
add
or
cmp
loopne
add
cmpsb
or
je
sub
decl
pop
or
sbb
xor
push
aas
fcoms
ljmp
test
shrl
xchg
test
nop
inc
mov
pop
sarl
aas
add
je
mov
je
adc
cmpsb
int
rcrb
fdivl
adc
jmp
add
ja
aaa
call
adc
jp
mov
sub
pop
test
adc
cmp
int3
inc
push
sub
add
fmuls
je
scas
xor
in
mov
bound
shll
push
push
pandn
shlb
movb
or
cmc
inc
mov
imul
clc
mov
dec
faddl
sbb
data16
popa
aaa
stos
xchg
aad
and
mov
inc
mov
fidivl
mov
cmp
cmp
test
nop
and
test
int3
arpl
shrb
inc
lods
fisttpl
inc
rolb
orb
leave
xor
lods
jnp
cwtl
pminsw
es
and
pop
xchg
pop
cmpsl
and
sarl
sub
dec
or
adc
or
je
data16
scas
xor
sub
dec
sti
dec
pop
gs
adc
push
fadd
mov
add
pop
pop
ss
leave
test
and
int
mov
xor
test
addb
and
stos
add
pop
rcl
dec
adc
sub
add
pop
push
out
ret
add
sahf
add
push
jnp
push
pusha
sbbb
andb
fwait
or
lahf
shll
andl
out
add
jnp
cmp
or
fsubs
jns
int3
leave
inc
add
es
shll
adc
movsl
cld
jo
cmpsl
adc
in
add
aad
and
xor
xchg
aaa
sub
xchg
nop
pop
aam
repz
jae
mov
and
cmpsb
test
or
cmp
xlat
jno
sti
mov
fisubs
nop
adc
lea
xchg
jns
cld
add
pop
aam
pop
jmp
cmc
and
xchg
roll
int
cltd
stos
xchg
fcomps
mov
shlb
pop
pushf
xchg
into
clc
adc
pop
and
pop
mov
pop
in
nop
or
adc
shlb
sub
jg
and
sbb
inc
cmp
in
nop
mov
mov
pop
xchg
add
sub
adc
sarb
rclb
mov
inc
sbb
push
add
mov
loope
mov
mov
loop
pop
and
enter
add
mov
xor
lock
orb
sbbb
scas
mov
rorb
mov
rorb
mov
pop
dec
shl
mov
xorl
xchg
jb
push
ret
arpl
xor
je
inc
pop
rcr
and
mov
xor
inc
mov
mov
xor
and
xor
repnz
fmuls
xor
dec
popa
sarb
add
stos
lret
pop
daa
xchg
adc
push
add
js
add
add
mov
mov
push
and
call
fcomp
test
pushf
sbb
sahf
int3
jo
mov
mov
xor
inc
mov
cwtl
push
jp
jle
shll
mov
repnz
dec
jl
fdivs
mov
xchg
pusha
loopne
xlat
ds
inc
mov
lods
mov
sbb
adc
test
push
xchg
dec
test
int3
xor
inc
pop
movb
sub
lock
js
sbb
xor
adc
dec
js
xlat
sub
xor
loop
and
sub
add
inc
fnsave
ret
pop
xor
pusha
shll
stos
mov
xor
test
rcrl
mov
repz
ja
jae
loopne
xchg
movl
xor
jge
inc
std
subb
ds
lret
adc
sbb
cmp
aam
dec
mov
pusha
sbbb
push
xchg
push
aaa
ja
pop
shlb
insb
adc
ret
sbb
lret
pusha
push
dec
or
push
lret
adc
mov
push
es
mov
popf
call
cli
push
lds
jge
jl
cmpsb
or
pop
mov
int
adc
push
cld
adc
mov
test
jbe
lock
pop
repnz
cmp
popl
cwtl
loopne
aas
pusha
outsl
inc
mov
fldl
dec
insl
scas
jl
popf
inc
pop
shlb
inc
jbe
jo
jge
pop
dec
push
push
aaa
lahf
lock
repnz
mov
dec
jno
pop
add
dec
jo
roll
enter
mov
xor
xor
in
and
sub
xchg
xor
push
xor
xor
pop
cwtl
aas
outsl
cltd
in
pop
adc
pusha
test
cmp
mov
punpcklbw
xchg
popa
loop
add
jge
rolb
std
pop
dec
jge
std
pop
adc
and
roll
andl
adc
pusha
or
mov
jnp
pop
les
dec
mov
jb
push
push
fdivl
bound
and
pop
mov
cmp
mov
fisttpll
je
xchg
push
xor
std
xor
popa
popf
sub
jnp
adc
cmpsb
adc
aaa
les
sbb
jns
rorb
push
hlt
popa
cmp
andb
and
mov
or
xchg
addb
stc
mov
lods
xchg
xor
int
inc
add
aad
push
lods
mov
sbb
and
jl
cmp
in
and
lea
lods
mov
sub
xchg
lock
or
iret
mov
inc
and
sbb
test
adc
dec
mov
cmp
pop
or
and
mov
andb
loopne
ret
cmp
dec
sbb
pop
gs
pop
cmpsb
sbb
jae
and
or
and
fs
popa
pop
inc
cmp
xor
fbstp
dec
sbb
data16
sub
popf
fiadds
shll
add
shrl
fstp
and
jno
push
test
fcmovnb
and
fcompl
add
in
repz
jl
adc
push
ja
pop
fdiv
movsl
dec
fstps
pusha
fsubs
je
pusha
add
fsubrs
jge
xchg
xor
iret
xor
fstpl
pusha
fdivrs
xor
fstps
add
idivl
orb
dec
cltd
lock
and
and
out
inc
imul
jge
ds
icebp
adc
or
inc
pusha
rorl
test
icebp
fucom
pusha
fsubrs
xor
pop
pusha
push
adc
je
lods
pusha
mov
mov
loopne
enter
pusha
loopne
outsb
jp
mov
ds
aam
loop
popf
push
or
xchg
pusha
pop
mov
jo
xor
push
icebp
pusha
sarl
std
sub
jle
mov
mov
fs
xor
icebp
jle
xor
punpcklbw
lods
mov
into
out
jge
ds
shll
scas
xor
sbb
shll
mov
jg
bound
pusha
add
mov
std
jecxz
aas
sbb
in
pusha
subl
cmp
sbb
aad
xor
pusha
xorb
andl
lds
xor
cwtl
in
into
int3
or
cmpsl
adc
fsubp
adc
adc
loop
dec
add
push
inc
hlt
filds
jbe
cs
movsl
rorl
sbb
xor
adc
test
push
push
xor
pop
sub
and
xor
dec
js
iret
adc
sub
lahf
aas
ss
xor
push
jae
adc
xor
cmp
and
xor
pop
pusha
add
add
aaa
lcall
rolb
pop
cmp
xor
jge
ds
mov
popf
push
or
xor
xchg
xor
enter
mov
jb
scas
rorb
inc
jb
mov
sti
loope
jb
add
popf
pop
loopne
adc
ds
sbb
das
clc
daa
xor
ja
frstor
das
loopne
mov
imul
cmpl
js
jnp
aas
inc
fs
sub
pusha
cmpsb
loopne
jns
xor
xchg
call
jg
xor
adc
sub
ficoms
pop
sub
dec
pop
inc
jge
jl
ljmp
mov
mov
inc
mov
xor
sub
sahf
dec
xchg
std
push
sub
add
inc
rcll
cmp
xor
stos
push
and
pop
xchg
cmp
out
adc
mov
push
popf
xor
mov
rolb
fstl
mov
out
sbb
sub
loope
enter
xor
lock
xor
jnp
clc
aam
pop
inc
loopne
fcompl
enter
pusha
loopne
mov
inc
lret
inc
out
test
jp
xor
push
ds
jl
cmp
ja
es
lock
and
lret
sarb
leave
mov
pop
sbb
lret
icebp
add
mov
pop
add
xchg
int
into
and
jl
or
lret
into
mov
imul
fldl
sar
out
mov
scas
sbb
mov
lods
pusha
popf
cmpsb
dec
sub
xor
mov
pop
inc
pusha
iret
add
jge
aad
rorb
inc
call
rclb
mov
xor
push
xor
rcl
cs
call
pop
jne
fsubr
xchg
xor
jo
and
mov
out
out
mov
insl
sub
mov
rorl
imull
shl
pusha
pop
xlat
pop
rcll
jl
sbb
sahf
sub
std
scas
pusha
cmp
sbb
add
cmp
je
mov
popl
and
ds
scas
mov
out
popf
fnstcw
pop
jge
jmp
js
sbb
call
pusha
add
xor
sub
push
cmp
js
jmp
mov
lea
push
lahf
mov
shrb
mov
popa
jge
mov
xchg
or
iret
adc
jl
mov
and
sar
les
insl
and
decl
dec
push
jecxz
sbbl
popa
cmp
mov
sub
cmp
adc
push
and
rorl
adc
xor
push
mov
stos
movsl
shl
popl
and
ds
enter
jne
xchg
pop
repz
in
mov
imul
into
insb
adc
popl
adc
jne
mov
jbe
xchg
push
imul
inc
or
mov
js
mov
sti
nop
cwtl
lea
subl
adc
and
pushf
test
jns
adcb
jb
jae
sbb
lock
in
into
mov
xor
jo
xor
mov
lea
rcll
lock
pushf
pop
bound
xor
and
or
push
mov
cmp
or
fdiv
xchg
inc
xadd
jmp
lcall
cli
xchg
shlb
out
inc
inc
jp
adc
sar
jb
sbb
popa
aaa
xor
sub
mov
jbe,pn
mov
repnz
jecxz
mov
pop
rorb
fidivrl
cmp
or
jecxz
jecxz
lods
addr16
cli
or
cmp
inc
clc
repz
push
and
push
loopne
cmp
adc
sbb
cs
and
loopne
outsl
mov
nop
xchg
inc
aas
shlb
mov
jno
ds
adc
dec
lock
lock
xchg
notb
mov
pop
mov
jecxz
addl
js
inc
and
enter
inc
clc
loope
adc
inc
test
xchg
inc
lock
dec
outsb
cmp
xor
xorb
push
or
out
lahf
rolb
lock
adc
cmp
bound
sbb
sub
adc
cld
push
cmp
inc
sub
je
cmpsl
xchg
jb
push
sub
in
fs
popa
inc
cmp
int3
aam
mov
mov
fs
adc
mov
out
ss
adc
cwtl
cmpsb
mov
sbb
cmp
and
fdivrl
or
mov
test
xchg
aaa
clc
dec
pop
and
jecxz
xchg
pushf
cmp
or
lret
or
inc
and
in
xor
xor
out
pop
addb
cmp
cmp
and
jecxz
push
sarb
test
int
and
xchg
test
std
int3
cmp
jecxz
cltd
out
lods
mov
lret
add
leave
xchg
and
cmp
dec
rcrb
pop
lret
add
cmc
shrb
jge
lock
pop
push
and
dec
and
fsub
enter
pusha
loopne
push
mov
sarl
jmp
xor
shrb
adc
loopne
cmp
loopne
add
pop
push
pop
pop
adc
lock
inc
jnp
inc
loopne
mov
sbbl
mov
in
pop
mov
loope
fdivrs
rcll
stos
mov
and
push
loopne
and
and
xchg
imul
or
mov
push
push
pusha
roll
jge
fistpl
or
popf
fucomip
add
aad
enter
fistpl
sbb
sti
adc
and
ds
or
clc
dec
frstor
repz
adc
lock
in
dec
inc
cmp
aam
xchg
lock
andl
adc
ds
std
aaa
push
pop
icebp
and
out
jecxz
adc
cmp
fldenv
lds
enter
pusha
jecxz
mov
inc
and
dec
xchg
iret
or
or
push
popa
pop
adc
rcrb
rol
adc
fidivl
mov
sbb
pop
ficoms
gs
cmp
mov
sbb
rorl
je
loopne
fists
and
adc
sub
dec
ror
in
ljmp
repnz
pop
lods
popa
aas
movsb
pop
pusha
push
xchg
inc
sbb
pusha
dec
and
roll
rcrb
adc
sbbb
or
jno
xor
ljmp
and
add
jmp
adc
rcl
mov
movl
test
aas
xor
popl
push
ficompl
aaa
push
cmp
and
aaa
rclb
mov
aaa
dec
pop
dec
cmp
nop
fistl
fisttpl
lahf
adc
ds
lock
ljmp
adc
inc
fadd
sbb
xor
xchg
xor
pusha
faddl
adc
sub
pusha
and
int
adc
rolb
xchg
pop
and
orl
fdivr
shll
jae
mov
pop
mov
lock
cli
inc
pop
aas
inc
sarl
pop
add
sbb
icebp
addr16
scas
or
lahf
out
ds
addr16
in
movswl
movl
paddb
popf
enter
pusha
loopne
mov
pop
in
insb
pusha
mov
jo
mov
jl
sbb
in
xchg
popa
pop
adc
pusha
sbb
out
xor
push
pusha
lock
aas
out
aaa
pop
scas
mov
sti
cmp
incb
sub
lret
sbb
daa
xor
in
lods
pusha
xorl
sub
jmp
int
mov
push
add
fimull
dec
adc
ds
dec
xor
pop
sub
pop
push
and
cld
fimull
inc
rclb
lahf
loop
dec
clc
inc
and
mov
sbb
insb
pusha
pop
adc
shll
add
mov
punpckhbw
bound
movsl
inc
aas
loopne
fs
rcl
add
pop
loopne
out
mov
xor
cld
loopne
xchg
test
push
mov
loopne
out
std
mov
mov
cwtl
xchg
and
movsb
sbb
scas
and
scas
fs
mov
inc
cmp
fmul
pop
loopne
xor
call
mov
aaa
dec
mov
mov
movsb
and
popl
insb
and
xor
add
pop
js
orl
clc
daa
in
cmp
lock
xor
popa
xlat
lods
ds
pop
jmp
negl
jmp
pop
xchg
ds
push
xor
inc
push
adc
mov
mov
in
ja
inc
push
jge
pop
fdivl
jnp
and
fadds
mov
lea
and
and
jle
es
sub
xor
xor
adc
jb
bound
or
cwtl
push
adc
push
sbb
jmp
and
and
jecxz
data16
pop
add
and
js
adc
and
push
and
or
out
ja
mov
adc
rorb
test
mov
and
loop
and
and
pop
loopne
mov
push
mov
popl
and
ds
xor
xchg
adc
push
xor
leave
xor
mov
ljmp
add
int
mov
test
clc
ljmp
push
cmp
pop
outsb
mov
loopne
inc
pop
es
lock
fiadds
lahf
add
cld
aas
ret
daa
cmp
fstpt
sbb
add
in
add
iret
pusha
les
sub
out
sbb
jecxz
jg
mov
iret
add
mov
pop
xchg
adc
inc
add
push
aad
and
ret
ret
mov
sarb
pop
add
addl
stc
nop
xchg
les
mov
push
or
jmp
jge
add
add
add
nop
lods
xor
imul
mov
pop
cmp
pop
stos
add
addl
lock
fsubr
sbb
in
add
adc
pop
adc
cmp
movsl
xor
push
rolb
inc
out
xchg
add
and
cli
mov
mov
flds
int
sub
subb
outsb
xchg
push
xchg
imul
sub
stos
aad
pop
out
add
sbbb
pop
aam
sub
in
jge
sbb
xor
inc
roll
inc
cwtl
pop
add
fldenv
shrb
cmc
inc
push
mov
sbb
add
lcall
pop
adc
fimuls
test
xlat
jns
data16
mov
adc
jmp
pop
mov
loopne
dec
ja
add
sti
jno
lcall
cltd
mov
add
aad
mov
pop
sbb
jg
add
push
fcompp
fmuls
stos
jg
jae
add
mov
cmp
jae
jmp
mov
cs
add
mov
les
or
ss
loope
loopne
les
dec
xor
pop
decb
addr16
push
lock
push
shlb
call
add
in
popf
bound
nop
out
adc
xchg
push
xchg
sbb
add
lahf
lea
pop
cmp
cmp
jl
fs
popf
cmp
loopne
xorl
jmp
push
insb
je
sbb
push
fidivrl
adc
xchg
addl
insl
fcomps
outsb
pop
add
push
push
add
mov
bound
adc
fistpll
dec
jmp
cmpsb
add
mov
outsb
scas
xor
fcoml
gs
mov
nop
add
cs
or
mov
add
ret
sahf
les
mov
pop
xchg
subl
clc
fdivs
ret
pop
loopne
mov
mov
xchg
xchg
cmp
pop
ljmp
xor
add
out
inc
add
das
mov
xchg
pop
push
loop
sbb
adc
orb
outsb
jmp
loope
push
stos
add
push
xor
xorb
cmp
cmpl
sub
in
fadd
loopne
jns
add
push
int
lcall
arpl
popf
mov
mov
daa
add
pushf
lcall
ret
push
subb
push
push
mov
jg
fidivs
mov
sbb
test
call
and
shlb
test
js
pop
add
cmp
loopne
sarb
adc
lods
pop
push
leave
push
add
mov
repz
mov
push
dec
cmc
mov
xchg
jbe
lods
pop
repnz
in
sub
pop
push
add
stc
sti
xorb
jo
sbb
push
sahf
inc
xor
mov
sbb
sbb
call
adc
lahf
or
aam
pop
adc
das
xlat
add
inc
cmp
repz
adc
and
or
pop
or
dec
adc
cmp
jl
cmp
pusha
mov
in
outsl
add
mov
leave
push
mov
add
sahf
mov
pop
xchg
xor
add
cld
dec
scas
shrd
loope
pop
leave
or
xor
jnp
add
xchg
cmpsl
and
mov
inc
mov
pop
inc
loopne
lsl
sarb
add
mov
mov
arpl
jp
add
cmc
or
jp
or
jae
fadds
push
imul
add
add
rorl
in
fnstenv
mov
add
pop
ja
lock
aaa
mov
popa
clc
fisubrs
jmp
mov
stc
add
or
repnz
mov
mov
cmp
popf
icebp
adc
add
cmp
aad
aam
enter
add
inc
sahf
test
lcall
and
and
mov
test
mov
add
cmpsl
loopne
add
inc
lahf
rcll
sti
push
add
fcmovu
adc
jae
adc
or
mov
stc
push
in
push
push
sub
and
push
add
mov
add
pop
ljmp
or
cmpsl
rclb
add
mov
jge
mov
test
stos
adc
cltd
add
xchg
jo
push
mov
fistpl
mov
add
sbb
mov
push
xchg
and
cmp
xchg
xchg
das
shlb
in
mov
daa
add
ss
xchg
repz
sbb
mov
data16
or
add
dec
mov
mov
leave
int3
add
fdiv
call
cltd
loopne
lret
ja
fiaddl
add
sbb
and
or
mov
add
jg
jo
movsl
or
out
xchg
pop
add
push
pop
scas
repnz
and
ljmp
push
test
stos
add
daa
mov
icebp
add
in
dec
inc
cmp
mov
mov
ret
push
cmp
adc
sbb
jl
lret
mov
dec
lock
std
add
orl
mov
outsb
rolb
xor
add
mov
sbbb
jo
movsb
lcall
add
cmp
mov
adc
in
add
inc
idivl
pop
dec
mov
pop
sar
xor
insb
add
adc
mov
add
pop
mov
add
mov
fldl
pop
push
movsb
aaa
add
iret
dec
push
rorl
add
loope
xchg
stc
subl
loop
add
push
cmp
stos
mov
in
cmp
lods
xlat
push
pop
add
ret
push
cmp
push
push
inc
sub
in
fiaddl
mov
in
push
filds
add
mull
dec
loope
leave
cld
sub
dec
mov
popf
sbb
mov
and
pop
aad
add
pusha
xorb
lret
mov
mov
adc
sub
faddl
in
lods
std
mov
subb
subl
add
aaa
cmc
xor
sub
faddp
mov
iret
lods
jo
out
mov
cmp
xchg
mov
jae
jg
popa
movsl
divb
movl
sbb
stos
adc
fxch
and
movsl
mov
and
shrb
or
xchg
lmsw
popf
fs
mov
pop
add
push
jmp
or
int3
push
loop
jp
xchg
pop
insl
sbb
cmp
dec
jo
jbe
out
arpl
add
add
aas
inc
decb
test
mov
test
call
xor
inc
arpl
add
frstor
stc
mov
into
int
mov
pusha
push
nop
mov
inc
insl
cmp
aas
xchg
jbe
push
nop
cmp
push
call
xchg
sbb
nopl
xchg
push
cmp
jge
dec
sbb
mov
stos
or
push
pop
cli
out
lret
loopne
mov
xchg
and
cmpsl
adc
push
add
xchg
imul
sub
enter
jmp
das
nop
insb
outsb
fnstsw
push
sbb
push
jne
pop
aas
push
popa
faddp
and
jns
add
insb
mov
bound
hlt
cmp
fisubl
pusha
pop
add
xchg
inc
cmp
push
int
xchg
dec
pop
lea
iret
mov
test
add
adc
jmp
rcll
cs
push
testb
push
add
dec
pusha
jle
add
cmp
fisttpll
insl
dec
jno
pushf
in
add
cmpsl
mov
add
mov
mov
or
leave
pmulhuw
jae
add
add
fadd
mov
xchg
inc
movsb
aad
insb
add
pop
nop
jp
pop
pop
push
add
or
dec
test
leave
jmp
and
outsl
xchg
sbb
je
ret
sub
in
fstpl
mov
add
jge
add
daa
nop
xlat
sbb
xchg
repz
jp
icebp
adc
xchg
add
sbb
mov
jno
inc
push
sub
test
cmp
pop
stc
push
insb
cmp
mov
and
add
fldcw
push
pop
or
icebp
rolb
in
sub
pusha
add
fildl
jp
mov
push
test
popa
dec
subl
inc
repnz
sbb
sahf
xor
inc
xor
movsl
sub
cmc
str
and
add
jmp
in
jge
or
sbb
pop
inc
add
outsl
inc
xchg
xor
sbb
add
push
mov
jno
insb
add
pop
pop
pop
mov
xlat
roll
pop
out
add
xor
fstpl
dec
and
pusha
lock
jl
mov
push
insl
lock
add
inc
add
jns
pop
mov
lea
add
add
xor
test
pop
or
sub
cmpsl
mov
rol
pop
mov
enter
data16
add
testl
insb
daa
mov
inc
in
sahf
xor
imul
movsb
pop
sub
add
mov
inc
add
add
pop
mov
aas
mov
andb
push
add
adc
sub
pop
mov
xchg
adc
inc
jmp
addr16
mov
sti
inc
cmp
ret
ja
add
arpl
xlat
out
xchg
popa
lret
xor
pop
push
lret
cmpb
add
add
testl
xchg
mov
into
movsl
inc
pop
js
call
pop
fiaddl
out
and
push
sahf
enter
mov
cmp
jp
nop
in
sub
ds
push
and
jl
adcb
mov
pop
nop
jne
data16
dec
filds
pusha
inc
adc
add
mov
fs
pusha
pop
jne
test
dec
inc
jp
sbb
out
aaa
mov
out
pop
and
ret
sbb
or
lahf
add
sbbb
add
ret
inc
dec
leave
and
dec
push
enter
jmp
add
jo
add
enter
in
and
push
mov
sarl
repnz
jmp
cmc
push
pop
xchg
xchg
add
xchg
outsb
test
lock
fstpt
add
fmuls
mov
mov
xchg
jge
add
dec
mov
jne
loopne
mov
mov
xchg
addr16
nop
add
adc
cmp
pop
cmp
dec
inc
jae
out
fnclex
inc
add
fadd
sbb
add
rcll
xchg
cltd
jl
mov
in
cli
cmp
mov
add
out
xor
jmp
inc
and
mov
add
jb
add
or
mov
stos
adc
push
and
das
bound
mov
jnp
call
jbe
sub
mov
dec
pop
mov
jp
rcl
push
cmp
jns
scas
nop
mov
push
mov
mov
fnsave
inc
pop
aas
pop
and
sbb
out
std
add
mov
mov
jnp
lret
repz
jno
adc
out
add
mov
sbbl
call
adc
aam
test
jo
std
sbb
push
add
mov
call
rcr
mov
cmpsl
pop
add
cmp
push
xorb
pushf
add
add
cmpsl
fs
fimull
bound
xor
rol
inc
andl
jge
sbb
xor
rclb
ret
lret
xor
or
test
cmp
mov
insl
xchg
add
ja
push
cmc
hlt
lods
pop
js
mov
add
sub
fnsave
pop
cmp
add
xchg
sub
sub
sbb
stc
or
inc
into
scas
push
add
sub
test
cltd
dec
mov
jmp
loope
inc
scas
imul
mov
xor
push
xchg
loop
cmp
jnp
xor
cmpsb
add
repz
addl
int
pop
mov
shl
imul
jb
je
cwtl
xchg
mov
shrl
mov
and
scas
loop
out
add
xor
mov
add
rorb
add
pop
xchg
and
in
shl
pop
fidivs
push
cld
rcll
jmp
fs
test
or
and
sbb
or
psubsb
add
xor
add
add
out
addb
iret
pop
aas
and
lahf
push
fnsave
inc
push
add
rcrb
sbb
inc
and
sub
std
push
add
mov
sbb
add
stos
xchg
ja
call
sahf
out
testb
xor
lea
cwtl
sbb
addr16
mov
jle
mov
pop
lret
cmp
push
adc
in
xor
divb
aas
jmp
mov
fsubrp
sbbb
mov
stos
mov
add
and
add
outsb
leave
cmp
dec
adc
add
sti
cmpl
inc
add
ret
adc
out
add
pushf
pop
xor
sub
mov
addb
pop
or
push
sub
cmp
sbb
dec
mov
add
xor
add
jae
ret
cld
mov
or
or
jl
adcl
into
dec
scas
push
fisttpl
lods
andl
jge
adc
mov
inc
hlt
pusha
xor
aam
dec
jb
xchg
cmc
xor
inc
aaa
mov
jns
push
shrb
pop
test
push
andl
pushf
or
jle
cmp
stc
test
in
insl
xchg
mov
mov
inc
sub
cmp
test
push
lret
jmp
xor
jno
and
fldenv
mov
add
adc
fdiv
add
jg
ds
sub
imulb
xchg
ficoms
ja
xor
pop
loop
add
scas
mov
and
pop
popa
or
jno
mov
cmp
cli
aas
and
shrb
fwait
sbb
pop
xlat
or
ss
mov
add
dec
xchg
pop
cmpsl
hlt
sahf
add
dec
or
fsubrl
nop
or
adc
divl
add
add
push
push
pop
gs
dec
pop
aam
repz
add
mov
loope
cld
push
cmp
lea
mov
xor
popa
jbe
test
xchg
jge
pop
in
inc
add
mov
shlb
test
dec
insb
stos
ret
inc
lahf
fucomip
push
fsubs
push
in
outsb
mov
add
lock
out
test
into
aad
jae
mov
roll
add
xor
add
inc
fiadds
xor
jns
add
iret
or
enter
add
repz
inc
pop
pushf
adc
xor
mov
in
or
jecxz
mov
cmpsb
or
shlb
push
and
pop
add
inc
xlat
mov
fcmovne
pop
int
lods
mov
add
lcall
loope
push
out
and
incl
mov
ljmp
fmull
es
add
add
les
sti
outsl
andb
add
jne
fisubrs
and
mov
repnz
jl
mov
and
cs
sub
push
pop
stos
ficoml
pop
mov
add
pushaw
fists
xor
lock
pop
mov
add
jge
mov
cmc
adc
add
nop
push
xchg
dec
movl
lods
vmovss
xchg
pop
sub
add
push
xlat
sbb
pop
and
mov
mov
and
mov
dec
xchg
add
jo
mov
into
dec
add
jecxz
ret
fdivrl
imul
cs
out
daa
push
add
sahf
in
mov
movsl
adcb
fldl
add
lea
addr16
cmp
inc
stos
icebp
sbb
cmp
cld
cmp
inc
shll
and
mov
sbb
cmp
add
ret
push
out
add
lock
xchg
add
adcb
xchg
adc
sbb
push
test
and
mov
add
mov
das
xor
mov
jne
cmp
in
ss
add
movsl
cmpsl
std
jae
adc
mov
movsb
pusha
es
sbb
add
fsubl
xchg
mov
add
int3
dec
dec
les
in
sub
pop
imul
mov
inc
in
inc
mov
mov
cmc
add
push
shlb
push
adc
idivb
xor
sbb
pop
dec
pop
dec
mov
in
ret
jg
push
xchg
add
stc
rorl
inc
add
cmc
and
cmp
pop
or
pusha
cli
adc
add
or
aas
dec
scas
jecxz
add
fcmovb
pop
mov
or
add
popa
outsb
lcall
add
nop
loopne
xor
xchg
add
aas
andl
pop
faddp
fdivr
pusha
in
xchg
cltd
push
add
sub
mov
mov
hlt
add
and
or
jae
add
mov
adc
test
gs
add
out
push
repz
xchg
jg
mov
insl
repnz
ds
fsubp
xchg
pop
fildl
xor
add
dec
add
in
add
push
lock
js
or
jns
or
push
pop
sti
add
cmc
fldl
std
imul
add
sbb
out
inc
in
sbb
fidivl
add
push
pop
outsb
mov
add
jb
mov
enter
jle
cmp
xchg
add
mov
stc
or
out
int3
xor
push
inc
cmp
add
aas
pop
in
mov
jnp
test
bound
xchg
dec
cmp
cmp
push
cmp
inc
xchg
jge
aam
fstps
lret
add
mov
js
andl
lahf
inc
mov
or
or
mov
and
repnz
addr16
fidivl
add
test
dec
and
xorl
add
call
xor
hlt
sub
xchg
sbbb
addl
mov
fwait
es
lock
inc
addb
pop
sub
loopne
dec
pusha
xchg
cmp
jle
add
pushf
xor
sub
cltd
mov
adc
add
outsb
lret
jl
lds
in
fiadds
cmpb
pop
xchg
adc
mov
dec
add
cs
inc
add
fiadds
mov
inc
and
mov
push
rolb
add
mov
rolb
push
jo
dec
gs
add
fidivrl
add
stos
xchg
imul
xchg
add
pop
fisttpl
adc
mov
cmp
ret
ds
add
mov
aaa
lret
clc
pushf
cmp
and
xor
jb
jnp
rclb
add
into
adc
mov
divl
push
test
pusha
push
xor
add
out
add
pushf
cmp
pop
add
sbb
sub
add
shl
imul
shlb
mov
aaa
cmp
pop
or
rclb
jge
mov
mov
lret
push
add
jl
inc
cmp
mov
loopne
andl
jb
inc
sbb
into
jae
mov
sbb
orb
cltd
add
paddsb
bound
add
xchg
add
jo
cmp
jl
into
mov
popf
sbb
subb
in
and
mov
fildl
fdivs
pop
mov
in
add
xchg
jmp
jae
add
jp
mov
cmpsl
pop
push
push
lret
sbb
mov
leave
clc
xor
cmp
xor
ret
pop
lcall
sub
push
xchg
mov
popa
jb
mov
icebp
push
pop
sub
loopne
stos
add
jbe
xchg
jmp
add
loopne
push
xor
jns
fmuls
movsb
jne
pop
mov
mov
int3
mov
jno
add
aaa
push
lcall
adc
pop
out
outsb
pop
shrb
xchg
jmp
add
fldenv
fcompl
stc
repnz
bound
cmp
and
add
mov
xchg
rcrb
mov
cmp
inc
add
and
mov
test
shl
cli
movsb
mov
std
add
add
lcall
mov
loope
xor
out
inc
adc
bnd
je
add
insb
shrb
xor
and
push
xchg
rcl
dec
popa
lahf
adc
sbbl
push
push
ret
add
jmp
sub
push
mov
daa
inc
push
loope
or
mov
jne
dec
out
or
lret
dec
addb
hlt
push
call
jecxz
xor
xor
sub
xor
pop
in
pop
mov
fnstenv
and
add
dec
push
stos
cmp
push
and
add
xchg
hlt
xor
push
add
dec
or
mov
ret
jge
jg
cmp
fsubrs
lret
add
push
xchg
out
inc
jle
cmp
fnstcw
or
icebp
xor
add
pop
adc
add
and
pcmpeqd
bound
jle
cmpsl
addr16
cmp
add
dec
push
int
lock
loope
mov
add
push
jae
mov
dec
cltd
jp
lret
push
lcall
scas
in
fiaddl
push
push
sub
add
xchg
add
dec
inc
adc
lahf
shrl
enter
push
and
add
lret
xchg
stc
bound
cmc
fisubrl
pop
mov
repnz
pop
addr16
or
jmp
loopne
sbb
out
add
mov
out
fpatan
add
sbb
mov
xchg
stos
push
mov
or
test
shll
adc
jge
add
popa
lcall
inc
add
xchg
dec
fwait
stos
mov
leave
sbb
sub
dec
xor
or
cmpsl
cltd
pop
inc
idivl
inc
pop
add
and
sbb
jno
sub
add
arpl
xor
sahf
push
add
pop
sbb
sbb
adc
popf
adcb
out
pusha
icebp
cmp
nop
sarb
je
stos
cld
add
inc
movsb
notb
stos
push
add
popf
dec
icebp
daa
shl
negl
subl
cmpb
movb
scas
or
push
dec
pop
add
add
jb
add
std
jbe
fcmovb
sbb
jo
add
cld
dec
clc
sbb
sub
add
mov
call
or
inc
gs
sbb
add
aad
iret
add
sub
or
lods
pop
imul
add
lods
outsl
fstpt
ljmp
dec
push
jge
add
mov
cli
addr16
test
sarb
sub
xchg
fiaddl
add
dec
hlt
roll
inc
jnp
dec
es
ret
lods
pusha
cli
sbb
inc
push
push
shlb
sub
insl
ljmp
dec
and
add
add
xor
jns
sbb
clc
push
gs
pop
call
repz
jmp
mov
aas
add
or
leave
insl
lock
mov
jge
sbb
ds
fnstsw
dec
jle
mov
add
cwtl
popa
scas
fxch
inc
test
or
dec
cmpsb
xor
xchg
nop
xchg
jb
in
add
popa
mov
int3
mov
sbb
jmp
ja
popa
mov
add
movsb
ror
push
cmp
mov
inc
push
rorb
mov
dec
pop
lret
add
jne
adc
or
stos
jge
filds
loop
out
sbbb
je
mov
mov
jo
int3
add
sub
repnz
and
movsl
mov
outsb
xchg
add
lcall
xchg
cmp
mov
xchg
stos
xchg
test
cmpsl
aam
push
loop
pop
add
cmp
pop
sbb
andb
out
adc
xor
push
cmpb
orb
fimuls
ljmp
popa
int
and
inc
jns
sbb
push
fdivrl
mov
pop
dec
and
add
fwait
mov
jle
pop
mov
dec
xchg
sub
loope
subb
push
and
add
enter
or
lret
leave
jno
push
test
jmp
xor
xor
ja
int3
xchg
pop
pop
sahf
sbb
ret
sar
shlb
inc
into
pop
push
sbb
lret
mov
ljmp
fildl
mov
pop
mov
push
popa
add
xor
adc
inc
pop
js
ret
mov
cmp
out
mov
and
mov
sub
or
and
dec
das
enter
add
ss
add
subb
mov
push
jnp
add
xchg
sub
mov
pop
mov
popf
notl
je
sub
jns
add
inc
fistpll
pusha
mov
add
ret
push
jg
add
mov
dec
mov
xchg
adc
jecxz
cmp
loop
jb
add
or
add
mov
clc
enter
int3
or
inc
insb
add
sbb
arpl
roll
xchg
mov
aas
add
popa
sbb
mov
xchg
out
outsb
cmp
bound
push
insl
mov
dec
fisubs
clc
out
je
in
rolb
mov
outsl
xor
mov
push
mov
scas
mov
rol
fbstp
mov
adc
insb
push
lahf
pop
add
scas
imul
and
add
iret
jmp
sbb
jne
push
push
pushf
cli
aam
add
sbbl
add
push
clc
sbb
xchg
aad
jns
shll
data16
mov
dec
xor
dec
lahf
lea
cmp
xchg
mov
je
mov
mov
jl
sbb
add
ds
push
xchg
cmpsl
jb
cmp
adc
je
push
sarb
sub
jne
push
inc
xor
pop
adc
inc
hlt
scas
pusha
out
pop
loope
add
sbb
flds
lods
pop
cmp
jae
mov
push
bnd
ljmp
aaa
jae
xor
int
mov
jmp
shrb
fists
les
xchg
pop
mov
add
loopne
cmp
jbe
stos
sub
pop
lahf
hlt
test
cmp
repz
rorb
adc
imull
add
ficomps
xor
mov
mov
push
or
push
dec
addr16
pop
adc
sbb
sub
sbb
in
cmp
mov
inc
cmp
add
mov
jae
cmp
push
add
sbb
sahf
inc
lcall
stc
mov
add
xchg
addr16
and
dec
xchg
mov
sub
add
sarl
bound
loopne
jae
add
subl
sub
stos
lea
aad
jo
pop
mov
jge
pushf
xchg
xor
cmp
sahf
mov
rcl
add
pop
pop
push
outsb
loopne
mov
sub
fwait
cmp
add
jg
adc
rcrb
sbb
mov
outsb
adc
roll
xor
dec
sbb
pop
xor
xchg
cmp
mov
inc
push
sahf
nop
bound
xchg
adc
movsl
xchg
xor
sahf
or
jmp
sub
sbb
push
stos
cmp
mulb
add
add
and
rcl
outsl
add
or
ja
fildl
xlat
push
xor
pop
cld
loope
out
vpsllw
test
jo
leave
pop
dec
or
je
and
push
inc
add
repz
stos
lock
cld
movsb
cli
sub
push
mov
pusha
mov
testb
inc
test
sbb
aam
rorb
xchg
nop
push
add
dec
rorl
xchg
repz
addl
cmp
arpl
test
cmpsl
jo
jo
add
aas
int
inc
mov
sbb
jno
pop
jmp
loopne
xchg
mov
push
cmp
add
sub
xchg
inc
adc
jb
and
cwtl
add
aam
clc
leave
cmp
stc
loop
add
pusha
mov
jb
inc
xchg
jae
xor
je
or
cmpsb
cli
add
mov
lea
add
and
stos
add
sbb
sub
add
aam
adc
enter
sbb
mov
add
fs
sub
clc
dec
jge
mov
push
lret
or
add
mov
or
xor
out
push
hlt
mov
push
test
les
xchg
lods
sbb
cmp
add
cmp
pop
or
add
inc
test
leave
addb
mov
and
jle
add
xor
pop
stos
push
lods
and
icebp
out
hlt
add
xlat
iret
dec
out
add
mov
jmp
push
pushf
jnp
sub
inc
mov
add
cmpsl
pop
and
bound
cvtpi2ps
ja
dec
fucomp
stc
and
cs
mov
adc
adc
stos
in
sbb
jmp
pop
addr16
adc
test
sbb
sahf
mov
push
add
mov
loop
pop
clc
cmpsl
jecxz
mov
dec
mov
add
mov
out
add
xchg
inc
mov
or
icebp
call
mov
stos
add
cmp
mov
and
push
fstps
fsubs
jbe
push
sub
xorb
xor
pop
arpl
adc
cmova
lret
and
add
push
movsl
cs
jbe
mov
jl
sbb
mov
dec
push
pop
pop
mov
push
ja
test
popa
fwait
test
mov
push
adc
loop
push
add
push
lods
xchg
into
cs
push
pop
jo
or
dec
push
ss
cmp
movsb
push
xchg
add
cmp
shl
lods
jnp
daa
popa
sbb
inc
mov
stc
es
lcall
add
call
in
aad
adc
mov
test
and
test
imul
or
shl
daa
push
fsubs
add
hlt
aad
hlt
in
push
sbb
add
loope
cmc
jge
and
adc
pop
mov
mov
add
mov
lcall
lea
pusha
loop
scas
neg
cwtl
push
sub
mov
jno
xchg
add
imul
sbb
enter
adc
xor
sub
xor
or
test
orb
test
mov
lods
out
loopne
adc
ds
cmp
jge
adc
push
jnp
in
add
cmp
test
push
adc
fistpl
add
cld
in
mov
lret
ret
mov
jl
add
and
sti
out
mov
mov
test
imul
inc
leave
cwtl
jmp
stos
sbb
out
xchg
and
or
mov
add
repz
subl
test
pop
mov
mov
outsl
into
add
dec
fcmovbe
xchg
stos
es
jg
add
icebp
or
xor
sbbl
or
insl
inc
into
nop
outsb
add
push
xchg
push
pop
nop
inc
es
movsb
jno
fisubrl
mov
pop
sub
in
lret
or
cs
xchg
or
push
adc
add
add
daa
pop
stc
std
pushl
or
sub
or
mov
xor
pop
ss
in
mov
cld
push
insl
dec
imul
adc
es
das
ficoml
add
and
ds
jle
jl
jmp
sti
sbb
add
imul
fimull
adc
in
or
jmp
pushf
ffree
add
mov
aaa
mov
nop
test
jns
lock
push
xor
dec
jge
xor
andb
addb
outsb
loope
cmp
xor
push
xlat
outsl
int
loopne
or
movd
cmp
adc
pop
mov
out
out
in
and
loop
and
dec
cmp
jmp
cmp
mov
adc
popa
ret
dec
or
les
jg
das
sti
mov
cmpsl
pushf
add
popa
lgs
jne
inc
enter
cli
pop
jnp
repnz
movsb
aas
lea
push
inc
mov
or
adc
and
fs
adc
fisttps
fldt
ja
pop
pop
pushl
stos
and
adc
es
aaa
add
mov
icebp
xor
in
fidivs
nop
cltd
add
fs
xchg
arpl
mov
mov
mull
mov
jne
mov
xor
mov
outsb
pusha
or
or
iret
cmp
call
add
fs
mov
mov
add
jae
inc
ja
add
mov
icebp
fiaddl
sub
add
and
add
call
mov
add
mov
pusha
jmp
fisttpl
push
inc
out
cmp
xchg
pusha
sahf
cmp
sbb
cmp
fcoms
loop
call
fimull
dec
dec
mov
mov
jmp
aam
lods
sub
movsb
mov
xchg
xchg
push
call
xorl
or
mov
inc
sbb
jmp
test
mov
repnz
scas
loop
add
enter
mov
inc
stc
lock
rorb
add
adc
add
jl
mov
and
dec
or
cmpsl
rol
jg
loope
xor
fs
scas
fistl
movsb
ja
jb
xlat
lret
les
pusha
add
add
push
xor
lock
iret
or
ja
scas
popf
rolb
add
mov
sbb
es
mov
mov
push
lret
dec
adc
or
arpl
pusha
mov
sub
jb
sbb
push
outsb
call
or
add
sbbl
out
pushf
std
loop
ret
sbb
and
fimuls
add
movsl
test
pushf
sub
hlt
jo
xor
mov
mov
cmpsb
inc
jl
outsl
addb
cmp
dec
test
insb
iret
cwtl
mov
and
jbe
divb
inc
loopne
push
fisttps
pop
xlat
mov
mov
add
sub
push
dec
sbb
in
mov
pusha
mov
add
stos
shll
hlt
cwtl
mov
push
sbb
push
rorb
roll
rorb
lods
dec
jo
arpl
aaa
orb
mul
popa
loopne
and
dec
jge
dec
jne
out
call
pop
sbb
mov
cmpsl
xor
sbb
and
add
das
jb
add
mov
fcoml
and
push
pusha
nop
and
sub
add
mov
jmp
popa
insb
decb
mov
jmp
jns
loopne
sub
add
outsb
jnp
push
xchg
sub
xor
fs
lea
mov
cmpb
add
clc
mov
faddl
jnp
dec
das
adcl
je
mov
sub
sbb
pusha
insb
decl
push
mov
call
jno
aaa
dec
sbbl
scas
push
loopne
in
gs
cmpb
hlt
leave
fadds
out
aad
add
xchg
daa
movsb
bswap
fwait
cli
inc
jecxz
repz
test
cmp
andb
hlt
popa
push
test
push
sbb
jb
push
adc
add
in
leave
mov
movl
jns
loope
cmpsb
xorb
in
jne
aad
scas
and
sub
add
inc
and
push
dec
dec
push
sbb
pop
xchg
cmp
lret
mov
mov
add
jae
icebp
jp
cmp
push
jb
or
mov
xchg
push
xor
mov
js
and
mov
dec
push
pop
pusha
inc
ss
pop
jae
sbb
push
xor
outsl
lret
arpl
out
add
jmp
pusha
idivl
and
mov
andb
add
jmp
xchg
in
and
js
fsubl
fs
dec
pop
inc
adc
call
xchg
adc
xchg
and
stos
pop
add
jbe
fldl
jno
pushaw
popf
xor
test
lods
insb
lods
cmp
pop
xor
pop
out
sbb
sbb
out
add
push
mov
fistpll
cmp
xorl
add
ds
in
aas
fs
pop
pushf
repnz
inc
mov
cmpb
pop
and
stos
dec
test
push
xchg
jnp
in
xor
push
pop
jb
sbb
clc
test
test
jg
vpmadcsswd
mov
mov
fimull
cmpsb
cs
push
add
lea
mov
pop
add
pop
ret
cmp
test
data16
sbb
jge
popa
adc
adc
cmp
add
lcall
sbb
dec
addl
jmp
adc
pop
enter
insb
subb
pop
push
jl
leave
loopne
push
pop
cmc
out
nop
add
mov
xor
add
into
stos
push
lea
ja
cmc
pop
cmp
mov
add
pop
mov
js
push
mov
scas
fadd
and
pop
cli
lahf
aaa
inc
add
mov
xchg
add
dec
pop
jge
lods
idivb
and
push
adc
adc
lock
pop
mov
jl
nop
mov
jmp
adc
inc
push
sub
and
cli
pop
and
lahf
jns
loopne
pop
and
int3
add
adc
fnstcw
rclb
cmc
mov
add
das
fstl
add
inc
or
nop
fsubrp
jp
adcb
shl
popl
insb
jne
pop
dec
loope
lock
loopne
testb
mov
hlt
add
cmp
int3
mov
push
fcmovbe
pop
pop
sub
jmp
mov
sbb
push
add
stc
dec
pop
pop
sbb
dec
inc
inc
ds
lods
add
mov
mov
mov
pop
xchg
cwtl
ja
dec
push
sbb
aad
cmp
scas
jmp
cwtl
dec
xor
cmp
jo
aas
nop
and
les
add
mov
xchg
mov
outsb
add
xor
jmp
andl
repnz
clc
insl
mov
mov
jmp
movsl
cmp
dec
in
test
sub
fildll
inc
adc
add
lea
pop
sbb
movl
cmpsl
xorb
shrb
pop
shlb
add
bsf
ljmp
jae
adc
sub
gs
push
add
vcvtss2si
nop
and
or
call
xchg
les
outsl
cmp
mov
testb
clc
xor
add
mov
add
cli
iret
ss
sbb
pushf
scas
sub
std
xor
dec
sbb
popl
dec
mov
pusha
mov
adc
add
sahf
and
mov
dec
sbb
call
xor
or
addl
add
fildl
xchg
lods
push
add
pushf
or
and
loopne
add
mov
adc
push
int3
pusha
fdivl
dec
ret
pop
dec
mov
loop
add
adc
testl
pop
inc
jl
and
and
test
insl
pop
mov
mov
add
mov
pop
mov
cwtl
xchg
add
cwtl
mov
test
xor
mov
jo
inc
pusha
dec
push
add
push
jno
mov
stos
mov
xchg
xchg
inc
pop
add
cltd
ficompl
mov
mov
cld
dec
add
lods
xchg
sbb
sbb
add
das
arpl
and
roll
ficomps
jge
push
dec
cmc
inc
or
add
sub
mov
je
add
mov
mov
xchg
dec
jmp
les
dec
jecxz
sub
lea
jle
pushf
add
aas
add
cmp
cmp
clc
int
add
sbb
add
sahf
sbb
inc
mov
add
js
in
pop
daa
add
scas
outsl
test
jb
pop
jp
movsb
or
jl
cld
lret
add
adc
ljmp
mov
jne
addb
mov
stc
adc
and
sbb
mov
andl
and
push
add
cld
iret
sarb
add
adc
shl
stc
insl
mov
push
xor
cltd
jge
dec
cmc
repnz
sub
shlb
adc
out
or
mov
aaa
add
cmp
outsl
sub
std
out
push
hlt
push
jb
repnz
xchg
pop
pop
sti
inc
mov
adc
aam
xchg
mov
nop
cltd
pop
or
jmp
dec
add
jmp
jp
cmp
xchg
jns
sbb
cmp
mov
cmp
leave
mov
popl
sub
sbb
add
rcl
pusha
movsl
nop
fldl
cli
pushf
xchg
xchg
dec
iret
add
mov
stc
sbb
out
add
xchg
imul
adc
xlat
out
fs
mov
rcl
ror
ljmp
sarb
lret
push
dec
xor
call
xor
mov
imull
push
cmp
insl
push
loopne
add
jb
into
hlt
add
addb
push
mov
cmp
jnp
stos
sbb
jle
mov
sub
andb
cmp
or
orl
cld
push
stc
inc
rorb
inc
rorb
add
dec
in
cmp
ss
xchg
fisttpll
mov
add
sub
add
jbe
jl
pop
out
push
add
mov
xor
or
hlt
test
shlb
sub
dec
push
fmull
fsubl
rcrb
ja
mov
addb
adc
insb
pop
aas
pop
in
push
fadd
and
adc
add
aad
dec
in
push
or
add
and
sbb
mov
lea
adc
add
mov
out
lock
inc
mov
int
ss
or
and
mov
and
sbb
add
xchg
outsl
xchg
rclb
pop
ret
pushf
xor
push
push
lds
fwait
sub
push
mov
pusha
aas
scas
out
add
and
movb
adc
and
jmpw
pop
add
fdiv
aaa
xchg
mov
push
lret
add
or
into
sub
hlt
fidivl
add
cmpsb
add
sub
lahf
dec
add
insl
es
pop
mov
push
mov
sbb
xor
xor
mov
and
ss
xor
add
test
pushf
cmp
enter
out
push
incb
lcall
xor
fmull
mov
xchg
repnz
sarb
mov
jb
jbe
popf
add
sbb
arpl
shll
bound
add
sub
pop
addl
sbb
add
dec
mov
ret
ret
push
rcrb
cmp
test
jecxz
mov
xlat
xchg
mov
out
and
add
lea
mov
movsb
add
rolb
add
or
xchg
mov
test
mov
in
mov
jno
pusha
sub
dec
mov
jge
iret
data16
sbb
std
jb
inc
add
and
out
into
movsb
test
adc
cmp
pop
mov
in
cmpb
jmp
sarl
stos
fistpll
rcrl
mov
nop
je
add
add
jne
rorb
mov
lds
pop
push
push
iret
adc
pusha
lcall
push
xor
jge
xchg
mov
sub
mov
mov
dec
mov
adc
aaa
add
cmpsb
sbb
adc
dec
add
or
dec
fcoml
add
cltd
out
and
shll
push
mov
hlt
sahf
in
cmc
pop
fstpl
bound
pop
push
divb
rorl
mov
or
test
lock
add
leave
push
clc
sub
mov
loope
inc
jl
add
dec
in
cmp
test
add
mov
dec
call
lcall
add
nop
jns
add
mov
add
cmc
mov
mov
addr16
cmpsb
inc
add
popa
dec
adc
divl
int3
lahf
dec
pop
sub
fdivrl
xchg
add
repz
es
mov
std
xchg
outsb
or
add
lods
test
stos
mov
imul
push
enter
lds
push
repz
jge
add
mov
pop
scas
or
lods
add
icebp
jecxz
or
lock
popf
bound
add
cmp
je
push
add
or
inc
add
cmp
mov
or
movsb
rclb
out
les
enter
jge
add
xchg
fs
add
loope
jmp
jbe
insl
sti
enter
cmp
jb
lock
loopne
xor
int3
mov
mov
int3
mov
adc
jmp
andl
xchg
cmp
sbb
ss
mov
aas
mov
mov
add
xor
dec
add
aas
jbe
adc
adc
out
cmp
add
popa
fisubs
imul
xchg
in
sar
inc
repz
xchg
add
leave
jo
jae
sub
sbb
outsl
dec
insb
sub
repnz
andl
and
stc
mov
pop
jne
pcmpeqw
popa
sub
cli
movsl
add
mov
lds
cmp
cltd
or
mov
in
pcmpeqb
add
inc
add
lret
pop
dec
cmp
jp
add
iret
leave
pop
icebp
jns
and
xor
nop
nop
aas
popl
and
aad
push
das
repz
add
xchg
mov
mov
xor
cmpsb
jg
ret
insl
add
lret
push
hlt
xchg
push
cwtl
or
aam
inc
add
inc
leave
sub
aas
pop
xor
lahf
push
add
push
movsl
lods
test
push
fistpl
pusha
rolb
xor
add
out
pop
popf
add
adc
repnz
add
inc
mov
sub
push
popa
adc
or
add
ljmp
inc
add
mov
cmp
fisubrl
sbb
mov
movsl
push
aam
sub
push
aad
jl
xor
test
jns
in
aas
lds
lret
sbb
adc
mov
and
add
dec
push
mov
jns
jae,pn
jbe
xlat
in
jns
in
add
mov
cmp
rclb
mov
pop
aaa
rcr
into
add
cmp
js
add
or
mov
insb
gs
pushf
push
sbb
mov
add
adc
inc
repz
movsl
pop
insb
call
fucom
jge
jmp
rclb
in
xor
ret
mov
inc
sub
or
fs
sbbb
cltd
pop
hlt
jge
mov
cwtl
jp
add
je
mov
lret
test
xchg
cmp
push
test
fldl
sbb
std
add
out
lea
add
xchg
shl
add
daa
iret
shlb
mov
scas
push
aam
jae
inc
mov
push
inc
popf
add
pop
in
xor
insl
fsubl
call
pop
add
push
sub
jne
nop
push
aad
mov
or
insb
cmc
mov
cmp
dec
mov
sbb
xor
or
mov
inc
out
addb
pop
inc
add
inc
push
lret
mov
sbb
pop
test
cld
add
xchg
add
data16
leave
jb
or
insb
push
iret
xorb
adc
movsl
or
and
inc
cltd
inc
or
add
adc
add
pop
ljmp
stos
add
ret
dec
pop
sbb
xorl
mov
jo
cmp
xor
out
jl
add
fisubl
mov
inc
insb
scas
lret
idivl
push
pop
sti
push
mov
push
xor
mov
loope
sbbl
pop
cmpsl
loope
fbstp
push
xor
jle
dec
in
fldcw
add
test
fimuls
add
shl
add
pop
fsubrs
mov
cmp
ret
lock
cmpsl
inc
fdivrl
xor
add
mov
push
pushf
push
mov
jnp
or
inc
dec
flds
lcall
xor
jmp
push
push
inc
loope
mov
and
pusha
xor
cmc
int
adc
roll
loopne
xchg
nop
sbb
mov
scas
adc
xor
dec
pop
jo
mov
xor
in
gs
sub
repz
hlt
mov
arpl
add
pushf
xorb
dec
loopne
imul
hlt
cvtps2pd
in
mov
mov
pop
mov
lcall
lea
pop
rcrl
test
push
cmp
push
fcomps
push
mov
add
add
test
mov
imul
rol
mov
inc
and
add
mov
rorl
xchg
push
shlb
add
push
dec
push
or
jecxz
dec
jg
add
mov
xchg
fs
mov
scas
sbb
and
mov
frstor
mov
jle
mov
dec
stos
cmc
add
cs
cmp
int3
popa
pop
lods
imul
jns
es
push
mov
mov
and
push
test
mov
nop
sub
cmpb
data16
mov
sbb
nop
sbb
jns
push
std
mov
fadds
add
cmpsb
pop
xor
pop
add
fwait
pop
mov
jo
repnz
mov
out
and
add
sub
add
xorl
imul
dec
cltd
imul
mov
or
adc
shll
push
imul
cld
cmp
hlt
or
sub
rcrl
push
and
mov
pop
mov
shlb
xor
pop
loop
mov
pop
lahf
enter
outsl
add
mov
add
test
stc
gs
sbb
mov
call
loope
lret
cwtl
add
cld
rolb
sub
out
aam
push
pop
add
add
faddp
enter
xlat
sar
or
sub
jb
cmp
jae
pop
flds
sbb
sarb
shlb
imul
test
insl
mov
xchg
add
repnz
mov
lds
dec
mov
imul
push
test
cs
pusha
sbb
push
into
fimuls
mov
mov
andl
imul
sub
and
xorb
hlt
and
orl
dec
cmpsb
aas
and
repnz
xchg
sub
mov
add
jle
cld
pop
les
call
sub
mov
and
test
int
add
add
jnp
das
out
pmaddwd
ljmp
sub
mov
cmp
adc
inc
cltd
fiadds
mov
pop
dec
or
cld
add
push
cmpsl
aad
lahf
mov
sub
mov
xor
add
mov
jmp
adc
scas
pop
sbb
add
xchg
jns
jg
rorb
cmp
push
out
mov
fcomps
stos
mov
and
insl
cmp
popf
push
pop
mov
out
and
dec
lock
std
xor
fsubrp
lahf
dec
popf
add
adc
out
xor
mov
cmpsl
clc
inc
enter
xchg
sub
mov
ja
fbstp
jg
pop
imul
add
dec
sarl
or
popf
mov
inc
es
enter
decb
xchg
sub
mov
and
and
call
sub
add
cmpsb
mov
mov
insl
out
dec
add
pop
cmp
dec
xorb
xchg
and
push
into
loop
les
pushf
push
mov
pop
subb
rcrb
sbb
das
push
dec
iret
in
loop
ret
ss
jp
lods
add
out
or
ja
divb
pop
mov
mull
mov
jl
sbb
jns
mov
dec
mov
sti
lods
or
cltd
sbb
sub
pop
sub
sbb
mov
add
andb
icebp
sub
sbb
xor
fadd
test
fdivr
mov
aam
and
mov
insb
out
hlt
xchg
les
jbe
adc
add
xor
add
adcl
add
fstpl
add
sub
iret
and
jne
mov
inc
xchg
dec
push
loopne
and
push
outsl
add
cltd
xlat
and
push
or
adc
sti
inc
dec
add
add
int3
or
loopne
shlb
sub
cwtl
inc
xor
add
jle
je
mov
pop
pop
mov
cmp
aaa
aas
insl
outsl
adc
xchg
sahf
or
xor
sub
out
lods
adcl
movsb
add
rolb
pop
call
jecxz
cmpsl
jno
pop
add
je
mov
xchg
dec
push
out
jmp
out
daa
sbb
aam
enter
shll
sub
mov
in
inc
aam
or
mov
jns
pop
pop
in
add
js
pushf
jno
fidivrs
mov
pop
or
jne
addb
mov
ja
loope
inc
add
arpl
shll
xor
rclb
add
dec
inc
out
xor
xor
mov
mov
jo
cld
mov
fdiv
movsb
das
loopne
add
push
push
add
jp
pop
je
jmp
fisubs
push
inc
insb
mov
ja
add
sbbl
and
lret
mull
sbb
into
cmp
icebp
pop
pop
inc
and
ss
stos
xchg
in
lret
or
and
arpl
icebp
mov
aam
push
dec
loopne
repnz
aaa
mov
jb
inc
cli
ficompl
loopne
ret
sub
inc
cmc
adc
push
testb
ret
xchg
add
out
call
mov
add
cli
add
lret
pop
aas
les
add
lods
out
in
lods
decl
mov
insb
incl
mov
sub
xorb
pop
test
add
js
cmc
push
xchg
xchg
mov
add
das
repnz
or
nop
lock
pop
in
add
push
adc
or
out
jae
or
fisubl
push
adc
xor
out
clc
adc
mov
xor
mov
mov
jp
cmpb
push
sub
iret
insb
inc
ds
mov
pop
ficoms
std
sti
mov
xchg
jno
xor
out
sub
add
into
test
popa
rcrl
xor
inc
push
std
jbe
inc
xor
hlt
cmp
add
mov
pop
cmp
pushf
or
int3
and
xchg
lods
add
mov
cwtl
inc
cmc
icebp
out
aad
ret
pop
repz
add
cmp
loope
fmuls
sti
sarb
popf
sub
pop
push
xor
and
pop
mov
inc
mov
push
cmp
push
shrl
push
adc
aas
popf
ret
andb
cmp
cwtl
sbb
fistps
jecxz
add
mov
mov
cs
notb
sbb
dec
aad
js
das
sbb
enter
pop
add
push
jmp
add
outsl
sub
add
sahf
mov
cwtl
push
lahf
add
mov
jecxz
add
jb
mov
loopne
xchg
sub
cwtl
mov
jle
aad
push
rolb
out
sbbl
lds
out
daa
loop
ret
xchg
dec
aas
and
cmp
dec
cld
icebp
mov
push
pusha
mov
xorb
cmpsl
add
in
addb
mov
dec
int
mov
push
lret
xchg
lock
mov
fldl
out
orl
hlt
out
add
dec
jb
sub
loopne
pop
adc
cltd
outsl
out
inc
in
lock
dec
push
push
lret
pusha
mov
dec
pushl
mov
add
pop
mov
mov
inc
pop
pop
insb
add
sbb
cmc
add
sahf
sbb
push
cmp
pusha
xchg
jae
add
lret
fs
inc
int
sub
mov
ds
add
sahf
or
cld
js
add
cmpsl
add
jg
aam
les
pushf
cmp
mov
cltd
fwait
in
mov
xchg
shll
ljmp
outsl
add
aad
and
shlb
and
dec
loopne
adc
adc
call
cmpsb
xor
mov
add
in
add
xlat
xor
iret
mov
sbb
lcall
adcb
xchg
mov
sub
icebp
add
popf
inc
inc
mov
and
adc
jo
in
sub
pop
call
xchg
pop
jl
xchg
add
ja
in
inc
dec
adc
mov
inc
rorb
mov
xchg
xor
enter
jnp
push
cmpsb
or
call
addb
aaa
out
dec
push
sarl
ja
add
inc
sbb
jge
jmp
ljmp
sti
push
sbb
fdivs
or
addr16
add
loope
push
in
sbbb
adc
push
mov
adc
add
add
lods
and
xor
jle
xchg
mov
pop
and
or
in
test
and
jnp
mov
add
pop
lret
leave
add
cwtl
fldenv
clc
jp
jno
add
or
push
ljmp
mov
scas
inc
pop
dec
add
stc
jo
dec
xor
aad
lahf
push
pop
mov
shr
out
cmc
rorl
mov
mov
push
sub
scas
outsl
cmc
push
out
incl
mov
es
xchg
cwtl
add
add
rcll
adc
push
and
fsubrl
adc
je
push
clc
pop
mov
jl
cmp
add
push
sbb
or
dec
mov
dec
int3
mov
pusha
xorb
popl
rorb
movswl
mov
aad
pop
clc
negb
loope
inc
lea
push
dec
or
xchg
jb
fsubrp
insb
aaa
xchg
or
pop
push
pop
loopne
and
popa
dec
subb
stc
cmp
shlb
xor
and
or
dec
jmp
push
mov
jge
enter
fs
cmp
ffree
mov
loop
push
add
sbb
bnd
call
dec
sbb
lds
sub
or
pop
daa
and
dec
add
ret
sub
mov
imul
ljmp
cmp
sarl
cmp
ret
xchg
jae
sbb
call
xor
jbe
add
sbb
xor
std
mov
js
rcrb
jno
imul
sub
out
repz
push
andl
lret
mov
xor
xor
or
call
sbb
fadds
scas
je
popa
inc
pop
push
mov
stc
cltd
adcb
inc
cwtl
add
aam
movsb
adc
push
adc
push
or
add
xchg
and
cmpsl
data16
pusha
add
adcb
popa
stos
add
mov
dec
jmp
aad
mov
sbb
in
pop
pop
pop
icebp
add
jp
xchg
stos
adcb
sbbb
push
clc
pop
pop
cmp
xor
push
jb
daa
inc
add
insl
cmp
popa
dec
mov
sahf
adc
fidivrl
orb
adc
jmp
stos
mov
xor
add
dec
cmc
cmp
xchg
cwtl
popa
mov
cmp
or
in
and
unpckhps
add
xor
xchg
or
ljmp
pusha
or
lcall
out
loopne
out
add
shll
inc
add
adcb
or
xchg
jecxz
lods
daa
les
mov
pop
arpl
dec
pop
cli
push
sub
inc
out
cmp
adc
daa
or
and
add
loopne
js
and
mov
xchg
in
lahf
nop
rcrl
xor
add
mov
or
and
cmp
dec
mov
and
test
orl
ret
andb
pop
ds
and
mov
mov
stc
dec
xor
cmp
nop
leave
pop
cmp
cltd
cli
add
stos
inc
nop
pop
or
cwtl
cwtl
jge
movl
les
mov
xchg
pop
inc
repz
test
xor
add
addr16
cmp
add
jbe
lods
inc
or
mov
rol
dec
add
repz
xor
cmpsl
sarl
fnstcw
sub
mov
sbb
lret
push
jle
push
xchg
pop
aam
inc
jne
inc
mov
clc
fildll
mov
out
sbb
rol
push
add
pop
mov
and
iret
das
push
inc
lods
andb
fdivl
inc
cmp
add
jns
call
loopne
and
stos
adc
into
xor
add
jno
jmp
add
adc
jo
fwait
paddsw
adc
mov
add
fcmovbe
test
add
repz
jl
jne
adc
add
cmpsl
loopne
mov
stc
inc
fistps
and
dec
scas
add
cltd
mov
dec
and
int
or
dec
push
popf
xchg
and
push
xor
and
popf
loop
ret
es
sub
cli
inc
dec
xor
xor
inc
scas
ss
rorb
cmpsl
add
scas
cwtl
lods
mov
sub
add
imul
lret
stos
xor
mov
add
xchg
pushf
jmp
cmpsl
xor
and
andb
adc
and
in
gs
adc
or
pushf
sub
ljmp
sbb
or
int
or
test
inc
sub
sub
add
inc
sub
leave
xchg
jle
push
inc
sarb
jl
dec
cltd
or
add
sbb
fadds
xor
fidivs
xchg
add
mov
ljmp
test
rcr
mov
addr16
add
sub
pop
xchg
cmpsb
js
lods
shlb
add
adc
ss
cld
xchg
subl
sub
shll
inc
jl
push
clc
xchg
je
cli
mov
cs
xchg
cmp
test
cmpsb
aas
dec
bound
jo
inc
dec
cwtl
mov
call
mov
add
cmp
xchg
and
push
daa
add
pop
ljmp
hlt
push
jo
scas
sti
jge
test
andl
add
xor
sbb
jbe
dec
jl
lds
arpl
test
mov
sbb
addr16
jno
push
add
stos
aad
xor
sub
test
dec
pusha
push
adc
sub
sub
sbb
pop
stc
ds
lea
jl
jp
cs
aam
add
pop
jle
ficoml
je
subb
pop
mov
inc
setp
sub
outsb
cmp
cmp
jmp
add
add
push
in
jnp
mov
jecxz
and
adc
xor
inc
push
add
test
in
mov
push
fsubr
add
pop
or
and
cs
dec
dec
mov
and
inc
jns
or
xchg
pushf
mov
xchg
nop
sbb
and
outsb
inc
lods
arpl
mov
mov
insl
divb
fcoml
mov
frstor
mov
add
inc
add
cmc
dec
inc
rorb
cmp
lahf
jmp
repnz
pusha
dec
xor
sbb
fs
and
jae
push
je
hlt
or
cmpsl
cmp
mov
dec
xchg
fadds
add
test
dec
jl
add
test
jecxz
sbb
ljmp
mov
aas
repnz
xchg
mov
pcmpeqd
ds
testb
dec
or
clc
mov
movsb
cmp
hlt
mov
add
rol
fisubl
push
test
scas
lods
clc
inc
dec
decl
sub
out
addl
hlt
je
les
cld
and
lods
aas
adc
mov
popa
inc
cwtl
mov
sbb
dec
jns
jnp
pop
push
iret
fimuls
mov
lret
repnz
jge
sbb
cmp
cs
pop
push
add
std
lods
cwtl
test
loope
enter
imul
in
mov
jl
add
dec
pop
dec
enter
in
inc
mov
sub
and
xchg
mov
cmp
mov
sbb
push
mov
and
cmp
jle
rep
cli
insl
popa
aaa
clc
outsb
push
or
inc
mov
fistpl
test
icebp
mov
jne
add
decl
jmp
push
add
in
mov
fdivs
test
js
xchg
popa
dec
outsb
cwtl
sub
inc
xor
stos
adc
dec
outsb
jns
pop
adc
fwait
lret
push
mov
arpl
fs
shll
lods
add
scas
mov
jmp
inc
popa
dec
mov
enter
or
fs
pop
dec
xchg
cmp
and
or
cmp
xchg
test
addb
mov
cmc
lahf
movsb
into
dec
dec
fs
or
test
add
fisttpll
stos
ja
call
add
and
mov
cmpl
add
mov
popa
pop
jle
pop
rorl
sub
ror
add
inc
sbb
or
pusha
xlat
or
add
fwait
cmpsb
mov
mov
add
gs
repnz
push
cmp
sub
int
cmp
add
imul
push
mov
dec
mov
stc
mov
rcrb
xchg
add
in
test
xchg
push
pop
mov
mov
sub
lods
test
add
movsb
adc
repnz
fldl
std
in
xor
push
push
mov
push
xchg
movsl
sub
adcl
inc
and
into
pop
cwtl
nop
push
lods
inc
xor
lret
add
cwtl
js
std
add
ljmp
test
sbb
test
sbb
mov
daa
mov
es
pusha
sti
dec
xor
add
or
popa
mov
xor
mov
test
adc
lret
int
cld
sub
add
dec
test
or
andb
xor
cmpl
inc
andb
jl
hlt
lods
add
dec
adc
mov
add
dec
std
daa
aam
adcb
notb
dec
and
mov
cs
dec
imul
mulb
add
or
mov
pop
es
jb
or
add
aas
xor
dec
pop
out
leave
or
into
or
stc
pop
cmp
sarb
xchg
push
sbb
dec
lock
sub
push
or
and
pop
lret
mov
and
lea
mov
loop
jl
jl
add
aam
mov
mov
push
dec
sub
add
mov
ret
or
mov
lcall
roll
mov
dec
scas
cltd
mov
or
jge
lahf
inc
rorb
add
cmp
js
mov
cltd
test
nop
cld
fs
add
xchg
leave
lods
dec
not
std
pop
movsb
dec
aas
push
sub
rcrb
movsl
sbb
rcrb
mov
add
int3
add
movsl
fadds
sub
jbe
movsl
int3
mov
push
add
out
jl
mov
dec
sti
movsb
pushf
mov
dec
cmp
add
les
mov
jnp
test
adc
ds
jmp
sbb
aam
mov
sbb
mov
rolb
rcll
sbb
and
mov
movsl
push
cmp
ds
inc
xor
ja
add
or
mov
sub
rolb
jne
dec
adc
sbb
mov
mov
fs
cmp
movsb
mov
push
das
loopne
xchg
dec
and
mov
cmp
sub
add
push
xchg
add
leave
divl
or
inc
inc
sbb
cmpsl
add
es
ss
push
cmp
xchg
or
repnz
pop
das
cmp
add
xor
adc
addr16
and
add
cmp
mov
xchg
pusha
xor
ss
xchg
loopne
mov
jnp
loop
add
cltd
sbb
xor
adc
jne
or
jns
add
notl
sub
xchg
xchg
faddl
stos
movsb
stc
xchg
lods
ja
dec
and
mov
and
sub
dec
in
add
mov
add
andb
jmp
test
into
mov
aaa
rorl
add
std
xchg
andb
mov
inc
jns
mov
pop
xor
pop
mov
popf
pop
nop
pushf
ret
movsl
js
out
adc
mov
enter
add
cs
or
or
mov
in
ds
mov
dec
mov
inc
or
mov
js
or
cmpsl
nop
xchg
lret
int
sub
push
sub
add
lods
xchg
sub
in
insl
mov
add
cwtl
fmull
fdivr
xchg
int3
adc
mov
jo
xor
mov
in
add
enter
stos
sbb
mov
sti
adc
es
hlt
cmp
cmpb
jae
add
mov
cmp
and
xchg
adc
rcl
dec
dec
and
push
cmp
daa
movsl
add
xchg
ja
or
jle
push
xchg
push
add
movsl
imul
rolb
mov
pop
inc
push
xlat
add
aam
add
je
movsb
ret
add
dec
outsl
shll
adc
inc
and
inc
jae
cmp
in
mov
and
jl
pushf
nop
outsb
mov
add
pop
inc
std
cmp
pop
inc
or
mov
insb
mov
les
lea
adc
and
push
add
mov
outsb
stos
add
nop
inc
das
mov
xor
and
ret
inc
test
cmpsb
add
push
sub
push
cmp
sub
pop
cwtl
adc
rclb
push
or
lods
dec
cltd
and
fs
nop
cmp
push
in
cmp
test
div
jp
dec
dec
cmpsb
sbb
sbb
repnz
mov
loopne
mov
add
push
imul
cwtl
xor
mov
lcall
ret
inc
and
sbb
push
aaa
ja
les
push
mov
sbb
pop
lods
rcrb
and
xchg
push
adc
call
and
inc
hlt
push
pop
into
dec
shlb
pop
imul
mov
int
js
mov
push
sbb
ljmp
jmp
mov
mov
roll
int
sbb
jl
xchg
sbbb
fwait
sub
push
sbbb
mov
addb
inc
cmp
pop
jo
cwtl
aaa
movsl
mov
sbb
movsb
mov
adc
push
add
xchg
cwtd
mov
insl
mov
pushf
and
dec
fsubl
mov
adc
cltd
jno
lds
pop
dec
lods
jo
sbb
rclb
lds
or
mov
cmp
mov
pop
and
loope
cs
shl
xor
andb
pop
add
cwtl
adc
loope
lahf
pop
add
or
xor
cwtl
xchg
pushf
ret
mov
fsubrp
mov
and
add
inc
daa
jns
add
adc
add
add
cmpl
lock
jns
mov
and
ja
add
mov
punpckhwd
sbb
sub
nop
mov
sub
jecxz
and
imulb
xchg
sti
push
hlt
cwtl
mov
jb
add
mov
cmovo
mov
addps
test
popf
test
incb
testl
js
int3
sbb
add
jmp
push
sbb
in
and
push
pusha
orb
pop
mov
add
mov
outsb
addb
mov
adc
scas
lret
lods
pop
sub
sbb
lea
and
scas
enter
hlt
jnp
in
cs
sub
pop
fwait
cmpsb
xor
cmp
mov
das
jle
nop
cmpl
lock
xchg
sti
popa
fisttpll
sub
adc
mov
mov
aas
rcll
mov
sbb
mov
js
sub
sub
subl
in
xchg
jno
mov
or
inc
int3
test
jl
adc
add
jne
cld
daa
rcrl
pop
and
mov
aas
mov
add
test
scas
mov
push
xor
add
and
mov
add
bnd
mov
scas
add
mov
dec
cmc
sbb
in
cmp
dec
xor
or
and
xor
mov
inc
push
popa
xor
pop
jmp
lods
push
rclb
cmp
lret
test
add
or
push
mov
inc
pusha
pop
mov
popf
push
cmp
mov
lods
xor
subb
cmp
pop
dec
cwtl
adc
push
inc
inc
push
iret
mov
sbb
adc
inc
scas
cmc
push
add
add
add
jle
in
movb
mov
mov
rcll
xchg
test
test
in
push
inc
sbb
shrl
pop
out
nop
cmc
test
dec
sbb
fsubrl
and
mov
xor
int
xchg
jbe
shlb
mov
dec
roll
repnz
ret
push
push
pusha
pop
push
leave
shrb
xor
mov
lret
test
xor
ret
xchg
or
aas
lock
js
or
mov
jg
leave
movsb
stos
sub
in
adc
div
sbb
push
mov
scas
in
inc
cmp
scas
dec
shlb
pop
mov
and
inc
cld
clc
cmp
testb
mov
repz
mov
xchg
and
cwtl
dec
pop
mov
cwtl
mov
mov
lret
add
xor
add
ja
sahf
add
cmpsb
jp
mov
adc
sbb
clc
jo
mov
xchg
and
inc
inc
cmpb
leave
cmp
incl
movsb
stc
rclb
imul
adc
inc
andb
js
lods
xor
in
movsb
jl
sbb
and
lods
cltd
test
dec
dec
int
loope
and
fstpt
jmp
mov
dec
cmpsb
adc
and
dec
and
cmp
xchg
xchg
add
adcb
loop
out
mov
fildl
imul
data16
adcl
mov
arpl
push
pop
mov
cmp
or
in
mov
or
jl
sub
adc
mov
sti
sub
pop
popf
int3
mov
lret
add
das
ret
inc
aas
je
add
push
outsl
or
jg
push
xchg
sarb
loop
and
jl
dec
cmp
pop
aam
std
and
frstor
push
cwtl
adc
mov
add
leave
add
xor
psraw
dec
rclb
push
stc
pusha
mov
push
cltd
adc
inc
cmc
out
dec
adc
enter
adc
push
add
inc
es
repnz
add
call
pusha
cmp
mov
daa
add
cmp
nop
mov
mov
orb
out
cmp
xchg
or
enter
scas
cmp
xchg
cs
and
outsb
jge
add
inc
add
pushf
add
jo
and
jne
jecxz
mov
jmp
arpl
mov
mov
imul
ds
and
pop
dec
push
hlt
and
cs
or
xchg
popa
movsb
movsb
sbb
and
xor
inc
rolb
sub
in
rorb
inc
and
and
fsubrl
rolb
test
add
movsl
adc
push
je
mov
arpl
add
je
movb
mov
ljmp
mov
insb
inc
adc
das
pop
lock
add
mov
iret
sbb
fwait
leave
wrmsr
rorl
or
pop
add
es
imul
lds
push
shll
add
jg
sub
mov
aaa
and
addb
loop
add
outsl
fdivrl
pop
mov
scas
cmpb
insb
mov
test
adc
loopne
inc
orl
aad
flds
dec
icebp
sbb
lret
fs
xor
jb
insl
fmulp
sbb
jnp
shlb
mov
push
movsl
push
rorl
push
mov
nop
sbb
push
inc
inc
stos
imul
add
les
push
hlt
inc
fsubr
ret
add
subb
int3
add
xchg
insl
and
dec
cmp
rorl
sub
ss
and
pop
adc
ljmp
xor
inc
mov
incb
add
sub
mov
xor
cmp
test
jmp
xlat
mov
and
mov
vminsd
adc
fildll
or
inc
cmp
add
aam
ficoms
adc
xor
adc
testl
pop
add
jmp
sub
dec
lods
popa
add
cmp
sbbb
push
movsb
inc
stc
mov
mov
add
sub
mov
mov
pusha
push
mov
jmp
into
sub
and
lret
nop
mov
jmp
enter
push
cmpsl
leave
pop
add
pop
mov
ret
xor
and
stos
xlat
addb
add
sbb
push
sub
ret
push
or
dec
faddp
xchg
mov
adc
mov
sbb
inc
or
inc
xor
mov
and
add
and
insb
inc
test
xor
push
hlt
loop
adc
sarb
gs
add
pusha
sub
push
repnz
sbb
pop
or
push
or
adc
push
pop
push
pop
filds
cmp
mov
aas
cltd
nop
cmp
push
pop
fs
and
push
xchg
cltd
test
xchg
fadds
adc
gs
mov
sbb
and
mov
xor
sbb
push
xchg
mov
mov
inc
jne
add
test
xchg
and
cmp
mov
pop
add
les
add
ja
pop
pop
bound
movsl
js
push
mov
in
or
mov
xor
mov
imul
and
jo
add
jmp
fsub
pusha
and
sti
lock
jb
loop
dec
mov
dec
sbb
movsb
inc
or
inc
daa
mov
cwtl
dec
lods
inc
sub
rcl
mov
mov
cmp
xchg
jo
iret
inc
xchg
cli
mov
add
in
pop
shlb
add
add
pop
add
xchg
les
xor
sub
ss
nop
sub
sbb
mov
mov
ljmp
mov
cmp
fnstsw
shr
lcall
fcomp
adc
pusha
mov
xchg
add
cmp
outsb
test
js
test
xchg
sbb
test
xor
mov
add
loope
sarl
mov
adc
icebp
nop
mov
sahf
add
shrb
sti
loopne
test
xor
mov
sbb
es
lods
add
mov
test
aaa
cmpsl
mov
or
stc
out
dec
in
mov
rclb
gs
sub
je
jbe
push
flds
or
pop
adc
lods
push
push
mov
mov
pop
pop
add
imul
mov
xchg
cmp
inc
pusha
mov
frstor
ss
cmc
and
mov
dec
cmpsl
add
dec
push
subl
in
mull
enter
mov
stos
xor
sahf
adc
es
add
call
pop
or
leave
pop
mov
pop
gs
pop
cmp
push
and
sarb
sub
pop
clc
add
fs
mov
dec
movsb
and
xor
in
test
test
adc
add
dec
fisubrs
cmp
repz
mov
cwtl
aad
cwtl
mov
call
adc
jno
dec
mov
push
js
dec
sub
sub
add
pop
adc
addr16
lock
cmp
push
fsub
sub
push
stos
inc
repnz
add
add
mov
fs
cmovns
outsb
xlat
cwtl
rolb
inc
test
ret
jne
cmp
add
dec
arpl
pop
adc
pop
into
jle
xchg
mov
shl
arpl
cmp
add
dec
jecxz
pop
xor
sub
xchg
push
popf
adc
pop
dec
add
aaa
mov
test
mov
nop
xor
repz
inc
xchg
pop
inc
ret
cwtl
loopne
jo
adc
out
add
add
inc
cltd
fcmovb
lock
insb
add
rclb
es
xchg
inc
add
leave
fdivrl
add
sahf
icebp
cld
faddl
dec
insb
out
cmp
cmpsb
mov
rolb
aas
push
fcmovbe
adc
cs
loop
cmp
add
aaa
clc
out
popf
cmp
stos
sub
imul
adc
in
lods
icebp
inc
movb
mov
pop
jp
push
jne
pop
inc
xor
xchg
mov
orb
add
inc
lea
inc
sahf
xchg
cmc
cltd
or
loop
icebp
add
sbb
nop
adc
out
add
cld
roll
pop
xlat
and
test
popf
xor
dec
test
pop
addr16
xchg
xor
push
jge
add
add
sbb
mov
int3
bnd
test
mov
fisubrl
push
loopne
sbb
jmp
aam
stos
mov
or
enter
mov
loop
lods
loope
nop
cmp
hlt
add
inc
sar
add
jno
stos
cltd
js
mov
hlt
push
push
pop
lret
pushf
in
mov
adc
test
les
sub
sti
dec
push
sarb
nop
mov
xor
pop
sbb
and
push
cmpsb
cmpsl
call
jmp
mov
xchg
jo
cmpb
jmp
push
add
push
pop
push
insb
test
cld
pop
call
filds
pusha
imul
inc
roll
nop
int3
and
stc
cld
cmpl
inc
cmpsb
leave
jns
je
add
or
adc
mov
pop
iret
jge
sarl
sbb
add
pop
mov
jbe
xor
or
mov
pushf
scas
ja
in
cmp
xchg
into
pushf
cmp
xchg
test
out
cmc
shlb
orl
adc
xchg
xchg
sub
sub
pop
add
in
inc
or
pusha
sbb
jl
and
xchg
mov
or
out
in
scas
xor
jg
xchg
xor
ja
add
aam
scas
test
and
fidivl
jns
inc
cmc
rcl
loopne
lock
in
mov
lods
inc
adc
push
sbb
mov
loop
add
sbb
adcb
xor
mov
sbb
add
mov
or
and
adc
inc
push
inc
sbb
insb
loopne
outsb
cmp
cmc
sub
orb
lea
leave
scas
pop
push
imul
orb
jns
in
cltd
inc
lods
and
inc
rorb
jecxz
scas
es
mov
rol
sub
les
add
aas
inc
shlb
insb
out
aaa
adc
sub
push
into
jae
je
aam
inc
lods
ss
jle
pop
js
in
xorb
pop
and
dec
and
xorl
mov
pop
loop
add
sub
push
cli
pop
testl
enter
fadds
dec
shrb
xchg
add
dec
push
and
lds
les
pop
mov
mov
scas
or
xchg
out
pop
sub
testl
jnp
ret
sbb
rclb
ja
adc
sahf
in
push
cmp
popf
cmp
xor
mov
cmp
fistpll
push
mov
add
in
sub
jo
popl
sub
add
rclb
andl
stc
mov
rorl
jbe
into
pop
cmpsl
cmp
cmc
popf
xor
dec
mov
bound
cmp
shrb
in
mov
and
popa
enter
outsb
or
les
add
ds
xchg
xorl
jle
shl
add
pop
outsl
iret
fwait
test
fmull
orb
nopl
cmc
lea
mov
push
out
pop
mov
inc
pushf
dec
jb
adc
cmpsl
cmp
jo
fs
sbb
insb
pushf
inc
sbb
sub
and
add
dec
jp
subb
das
add
fldenv
xchg
lcall
push
sub
dec
mov
popa
mov
lods
cmpsl
sub
dec
js
loope
sti
int3
cmp
push
inc
mov
popl
cmpsl
dec
movb
push
push
mov
xor
cmp
insb
jmp
fisubrs
xchg
vfnmaddps
data16
aaa
sbb
cld
mov
adc
andb
cmpsb
xor
pop
push
and
mov
sub
inc
daa
addb
ss
stos
cli
sbb
adc
or
push
lahf
cmp
xchg
movsl
or
mov
lret
sub
and
dec
push
mov
sbbb
pusha
add
mov
nop
imul
add
mov
call
cmp
push
sub
sbb
or
mov
loope
mov
mov
call
inc
mov
xor
add
jmp
bound
xor
mov
hlt
ja
es
xor
sarb
sub
mov
leave
ret
test
mov
add
add
pop
sub
sub
iret
rorb
or
in
rclb
fildl
push
jg,pt
adc
lret
xchg
rcll
sub
shll
cmp
dec
add
outsb
or
pop
dec
mov
add
jno
gs
xchg
push
jb
out
add
add
mov
pop
xlat
push
enter
imul
xor
mov
sub
repz
push
pushf
push
mov
mov
imull
cli
loopne
fstl
add
outsl
test
pop
add
lret
and
mov
mov
fwait
loope
add
pop
add
sub
push
mov
in
mov
push
loopne
ds
shl
outsb
es
push
in
mov
lods
shlb
or
fisttpll
fistps
push
in
pop
popf
sub
add
mov
mov
imul
mov
icebp
repz
shll
in
xor
lahf
shlb
scas
shlb
mov
cmpsb
add
sub
adc
negb
or
and
sub
pop
fadds
sub
xorb
jne
mov
add
jmp
cmp
fisubrl
dec
jnp
add
push
enter
add
xor
xchg
movsb
icebp
push
xor
punpcklwd
jns
loopne
mov
nop
or
mov
jmp
popa
imul
mov
addb
dec
or
movsb
in
inc
movsl
xchg
add
data16
js
sysexit
into
xchg
sarl
sar
xchg
rolb
push
xchg
lds
rcr
iret
and
outsl
xor
add
push
das
insl
in
jge
iret
mov
outsb
aas
popf
cmp
lock
xor
pop
cmp
mov
ss
push
ljmp
inc
das
or
nop
sbb
lcall
adc
jno
incb
mov
xor
adcl
sarb
fildl
dec
inc
push
int3
cmp
test
push
inc
out
dec
gs
cmpsb
mov
shlb
popa
push
adc
ja
dec
inc
or
add
push
jmp
and
xchg
pusha
mov
xlat
add
xor
jbe
pop
jbe
adc
clc
pop
iret
nop
filds
rclb
loope
add
rcrl
mov
popa
sub
out
add
adc
push
pop
rorl
xchg
xchg
sub
jmp
mov
xorl
ljmp
out
sub
mov
inc
ret
and
std
dec
das
inc
mov
xchg
js
loopne
test
xor
dec
sub
call
sbb
dec
inc
ret
mov
pop
pop
int3
add
jbe
and
shlb
xor
out
jg
cltd
shll
mov
adc
jge
mov
jns
add
sbb
adc
push
dec
je
aam
push
push
addr16
and
add
lret
inc
out
adc
xchg
adcl
loopne
cmp
xlat
in
add
add
insl
dec
es
push
or
adc
adc
xchg
outsb
and
add
data16
mov
ljmp
or
es
inc
in
xor
mov
lods
add
add
xchg
jg
dec
xchg
dec
mov
mov
sub
jno
ret
xor
cmpsb
lret
or
add
call
test
or
push
add
push
loopne
sbb
iret
lds
pop
inc
inc
int3
add
mov
or
jo
rorb
pop
sti
add
add
dec
dec
adc
ja
mov
loopne
xor
mov
fmull
cmp
dec
cmc
xorb
daa
xor
nop
xor
sahf
and
add
sbb
pop
fmull
add
pop
andl
fnstcw
cli
xchg
ds
sbb
inc
mov
add
sbb
jmp
or
mov
cli
push
and
or
cs
dec
je
shrb
or
push
cwtl
inc
and
ljmp
imul
loope
adc
sub
test
pop
hlt
dec
into
addr16
fstpt
add
push
jge
mov
insb
pop
pop
inc
outsb
lds
in
ljmp
jl
jmp
pusha
testl
or
xor
add
inc
nop
sub
cmp
aam
or
xor
and
adc
inc
add
fadd
addb
call
add
and
push
jecxz
ds
mov
xchg
andb
test
es
sbb
or
add
data16
adc
rolb
cli
jb
adc
shr
add
loopne
jns
pop
lret
sbb
cltd
orb
shrb
xor
and
and
in
mov
or
mov
dec
sub
add
sbb
pop
les
fiadds
add
adc
xchg
sub
adc
lds
scas
imul
jg
dec
das
mov
cmp
icebp
adc
imul
sahf
lret
pop
adc
adc
test
dec
pop
or
mov
scas
cmp
or
loopne
test
enter
adc
pusha
filds
mov
xlat
xchg
add
mov
dec
test
sbbb
and
add
inc
adc
pusha
icebp
add
xchg
fwait
mov
mov
adc
int
in
add
mov
loopne
xor
int3
jo
popa
inc
into
xlat
add
loop
dec
add
int
je
add
lea
adcb
rclb
push
aam
shlb
add
add
aaa
stc
push
push
es
out
sub
les
and
insl
pop
mov
sbb
test
bswap
js
iret
jb
pop
mov
pop
xor
cmpsb
dec
clc
or
jbe
push
shll
cld
push
push
shlb
dec
inc
and
push
cmp
lea
leave
sub
sbb
bound
xchg
fldenv
jl
add
and
ret
sbb
inc
mov
stc
inc
adc
and
fs
cmp
pop
sbb
push
pop
sbb
bound
add
mov
push
push
mov
orl
lea
mov
and
adc
and
add
mov
std
sete
loopne
mov
cmp
and
push
mov
hlt
dec
add
pop
add
pop
jb
add
add
in
add
pop
and
xchg
xchg
cmp
lock
dec
fwait
cmpl
aaa
pop
call
lock
popf
jmp
loope
dec
gs
jns
shrb
cmp
xor
xor
add
adc
mov
jmp
imul
push
lods
sbb
cmpsl
add
add
leave
rcl
push
shrb
addr16
bnd
add
xor
in
inc
adcl
push
inc
leave
imul
xor
xchg
dec
insb
enter
add
cmpsb
and
dec
xor
nop
inc
pushw
nop
sarl
dec
add
jno
sub
mov
and
psubusw
add
push
fmuls
into
xabort
xor
pop
mov
push
das
dec
xor
stos
daa
jns
jmp
ret
fnstcw
and
cmp
dec
das
dec
pushf
mov
roll
cmp
pop
push
push
adc
test
cwtl
adc
enter
cltd
cmp
test
adc
push
xchg
add
lahf
std
add
add
cmc
shlb
xor
or
gs
sbb
repz
pop
ret
test
outsb
and
orl
push
pushf
dec
fsubl
sbb
js
fimuls
js
enter
das
addr16
add
fimull
and
in
dec
lcall
and
xchg
cmpsl
cmp
xlat
jl
and
mov
inc
mov
push
adc
jb
adc
dec
add
inc
cmc
mov
movsl
add
cmpsb
sub
and
adc
or
ror
adc
xor
or
sbb
inc
cmp
ds
add
push
out
mov
aam
or
test
test
call
pusha
loope
fisttpll
pop
add
stc
dec
addr16
xchg
sub
add
sbb
add
add
mov
fnstsw
push
setae
shrl
shr
mov
xor
jmp
outsl
fcmovnb
repnz
and
xor
bound
mov
ss
xor
mov
sbb
mov
popa
daa
jbe
add
lds
mov
sbb
mov
sub
repnz
xchg
mov
cmp
sub
jge
enter
cmp
sbb
jns
enter
sbb
push
dec
mov
fldenv
add
dec
icebp
inc
push
int3
sbb
sub
iret
jp
push
repz
subl
lcall
dec
shlb
push
es
data16
and
sub
insl
xchg
add
jno
pop
jle
add
ret
push
iret
adc
or
and
mov
in
insb
add
in
mov
loopne
mov
lcall
repz
jge
xchg
movsb
jl
xchg
add
and
sbb
mov
out
movsb
add
add
popa
pop
inc
add
test
aaa
or
jecxz
xor
or
fstpt
jmp
clc
nop
fiadds
cwtl
push
mov
add
xor
mov
pusha
test
imull
cmp
shlb
xchg
sub
std
add
add
and
adc
leave
jl
pop
test
faddl
jbe
mov
inc
or
inc
add
lds
add
mov
xor
ret
and
jne
or
push
push
scas
sub
sbb
mov
jo
cmp
stos
fsubrp
mov
daa
add
fbld
gs
cmc
mov
add
test
lock
push
add
cmp
xchg
sub
jmp
mov
jno
es
hlt
jns
inc
ret
arpl
and
mov
popl
cli
jae
mov
add
adc
out
dec
in
add
ror
and
jns
jb
mov
adc
addl
push
negb
add
mov
test
cltd
inc
insb
rorl
add
mov
mov
outsb
sub
xchg
adc
das
mov
mov
sahf
add
cld
adc
lcall
out
in
cmp
lock
test
sub
cwtl
rcll
out
data16
jp
adc
xor
mov
cmp
loopne
add
adc
jl
or
jno
mov
data16
rep
add
and
fs
or
xchg
rclb
sbb
flds
cmp
repnz
maskmovq
gs
stos
mov
xchg
cmpsb
sarb
popf
cmp
mov
in
sub
loopne
mov
cmpsl
dec
lcall
jl
mov
add
add
jo
lea
xor
repnz
daa
mov
call
cmp
xchg
fwait
pop
inc
sub
xchg
repnz
add
mov
js
lods
dec
and
add
popf
insb
mov
and
cmp
fcomi
and
add
shll
test
cmp
movsb
pop
and
imul
dec
and
push
adc
mov
mov
sbb
pop
int3
int
into
dec
ja
or
adc
shlb
add
pop
jp
add
mov
xchg
js
xor
dec
xchg
or
stc
pop
aam
dec
pop
jl
lcall
mov
push
stc
in
push
jne
push
adcb
and
ds
add
jne
add
xor
adc
outsb
cli
sub
or
daa
cs
rorb
adc
shrl
push
pusha
test
jle
pop
xchg
out
mov
sbb
mov
sbb
xor
xchg
inc
mov
lods
rorl
and
lods
ljmp
and
inc
mov
jne
mov
call
daa
sbb
loopne
call
sbb
mov
push
xchg
xor
sub
jne
jnp
mov
fsts
xor
enter
mov
xchg
or
fcmovnb
cmpsl
bts
add
xchg
add
mov
roll
adc
jae
cs
and
sahf
in
cmpsl
into
add
lea
iret
add
inc
fadds
xchg
xor
inc
lock
push
aas
or
mov
int
aam
add
cmpsl
jno
leave
or
in
adc
push
mov
ja
dec
sbb
sub
fistpl
outsb
lods
jno
f2xm1
dec
inc
hlt
sub
mov
in
repnz
pop
adc
jne
or
test
add
cbtw
push
jno
iret
inc
or
xor
inc
inc
hlt
insb
or
and
push
xchg
into
xor
mov
ret
outsb
addr16
out
xchg
add
sbb
jl
in
cmp
int
movsl
add
cmpsb
jl
and
xchg
loop
sub
out
test
nop
inc
adc
add
in
cmp
mov
jl
pop
adc
add
jbe
jg
xor
roll
loope
dec
inc
out
insb
push
add
mov
pop
fdivs
loop
daa
hlt
fs
sub
push
cmp
sub
inc
add
adc
or
mov
inc
push
cmp
xor
xor
xchg
divb
mov
sbb
jae
arpl
int3
test
push
aam
sarl
mov
add
inc
scas
imul
or
pushf
adc
addr16
inc
cli
push
sbb
and
cmpsb
mov
mov
loop
push
arpl
xchg
jo
and
sbb
and
test
adc
das
pop
mov
frstor
and
rorb
sbb
lea
or
stc
or
ret
adc
cwtl
sub
or
jl
xchg
scas
pushf
add
sub
rcrb
push
adc
out
repnz
loope
jb
sbb
xchg
lock
sbb
test
mov
aaa
loopne
scas
bound
mov
into
sbb
dec
out
xorl
inc
in
add
sar
js
adc
pusha
outsb
pop
or
pop
sahf
pop
test
sahf
add
adc
push
iret
add
test
push
jbe
inc
lahf
cmp
mov
les
shl
in
je
add
pop
sub
cwtl
mov
mov
lcall
fidivs
adc
ljmp
xor
cltd
push
sub
sbb
loop
int
add
dec
sub
cmp
xor
shll
ljmp
loopne
cwtl
xor
sbb
shrl
add
push
jno
loopne
in
sub
test
pop
and
hlt
jg
test
inc
in
in
mov
and
mov
adc
add
or
test
das
or
fcoml
add
jne
lods
je
or
mov
add
sub
mov
mov
add
bound
add
std
leave
mov
ljmp
and
dec
pop
imul
add
fwait
es
rclb
push
and
enter
mov
rorb
add
out
mov
arpl
mov
xchg
insb
add
jnp
mov
add
int3
arpl
inc
mov
mov
inc
cmpsb
sub
cmp
cltd
push
add
inc
lock
xchg
add
dec
clc
xrelease
inc
add
dec
sti
addr16
adc
jnp
inc
and
lock
lret
or
sbb
inc
push
push
xor
add
and
jmp
inc
psubsb
sub
jo
add
dec
xor
mov
mov
dec
add
fsub
mov
add
enter
movsb
xchg
dec
mov
int3
add
and
ret
and
stc
loope
jl
inc
sub
lods
lea
push
sub
subb
xchg
mov
sub
mov
inc
xchg
and
rclb
xor
pop
stos
test
cld
aaa
or
and
or
adc
and
inc
jl
sbb
adc
mov
xor
jo
add
lret
test
and
mov
and
in
mov
hlt
sbb
jmp
add
out
popf
data16
and
loopne
scas
mov
fs
mov
mov
rolb
and
add
mov
xor
mov
pop
push
push
mov
in
inc
stc
xchg
pop
sbb
mov
inc
mov
pusha
out
daa
adc
in
add
jno
sub
in
hlt
xor
adc
das
mov
xchg
sub
xor
mov
inc
cmp
inc
push
sbb
mov
cltd
sub
cmc
dec
xor
add
or
es
mov
scas
or
loope
lcall
or
and
nop
out
xor
cltd
arpl
inc
or
lret
inc
testb
xchg
call
jmp
outsb
dec
sub
xchg
inc
dec
add
gs
pop
xchg
shrl
nop
ljmp
cmp
push
outsl
mov
js
add
cmpsl
into
das
daa
fcomps
icebp
in
inc
mov
ds
fcompl
cmp
jecxz
iret
loopne
dec
add
jnp
loopne
mov
xchg
and
sbb
jae
pop
mov
scas
outsb
mov
xchg
or
dec
and
cmp
dec
cmpsb
orl
pop
push
pop
inc
mov
call
nop
mov
add
repnz
sub
test
sub
shl
call
add
sub
sti
add
sarb
push
enter
cwtl
aam
add
popf
push
repnz
in
hlt
cmp
xchg
add
jp
dec
lret
lar
lds
pmaxub
in
data16
adc
ljmp
jp
sbb
pop
lret
inc
and
lock
add
repnz
loope
insb
in
mov
xchg
enter
xor
mov
out
add
popa
xor
xor
pushf
dec
aam
ret
add
dec
sub
mov
cmp
lret
popa
aas
dec
mov
inc
or
cmpsb
sub
into
add
mov
test
cmp
test
add
rol
push
cmp
movsl
or
xor
sub
mov
outsb
cmpsl
push
and
subl
and
rolb
loopne
nop
add
jae
or
add
xchg
test
push
or
into
dec
es
push
inc
in
mov
pop
invd
lret
add
xchg
dec
pusha
push
mov
inc
sub
sub
adc
push
loopne
push
jl
or
adc
mov
fwait
data16
jno
test
push
xor
sbbl
or
cld
in
mov
clc
ss
movsb
shlb
cld
add
mov
outsl
mov
pop
sub
les
shll
jne
fs
push
sub
pop
sub
xor
mov
ljmp
xchg
and
jmp
add
lcall
lea
cmp
dec
inc
sub
or
mov
test
mov
test
repnz
mov
mov
push
out
add
inc
int
adc
push
cvttps2pi
insl
movb
outsb
daa
cmp
loope
pop
mov
call
dec
out
add
int
pop
rcrb
jo
ds
mov
mov
dec
mov
test
cld
add
ja
jbe
push
mov
xchg
hlt
loope
xor
xor
sub
mov
xlat
inc
fsubl
daa
add
dec
cwtl
adc
push
pushf
mov
add
or
adc
mov
or
lea
sub
out
inc
and
nop
enter
and
pop
mov
add
xor
or
jno
mov
mov
add
data16
jbe
xchg
xor
mov
cmpsb
push
add
fidivs
sub
or
dec
pushf
je
mov
hlt
and
cmp
xchg
into
gs
push
mov
loopne
iret
pusha
leave
xchg
mov
neg
mov
add
jo
xor
inc
sub
dec
mov
repz
adc
ds
push
lods
cmp
test
dec
inc
cs
imul
callw
fstpt
lock
mov
sbb
enter
sub
mov
jae
add
divl
lds
lcall
outsb
int
push
in
jl
add
repnz
cmp
sub
xor
inc
sbb
lock
in
adcb
mov
pop
int
les
int3
mov
xchg
adc
cwtl
add
or
jns
dec
out
shlb
daa
mov
adc
jbe,pt
rdtsc
jmp
adc
in
call
lods
dec
mov
leave
insb
jl
or
cmp
mov
pop
lret
rcll
push
push
add
or
adc
jl
jmp
pusha
pushf
mov
or
sub
jb
aam
add
shlb
mov
sub
jp
and
inc
lds
inc
add
dec
leave
mov
push
add
mov
mov
push
cld
xchg
aas
imul
dec
add
xchg
inc
and
mov
in
pushf
ret
and
push
add
loopne
inc
push
rolb
cmpsl
and
or
shl
xor
gs
mov
mov
sub
lock
pop
add
mov
loopne
xor
jno
or
add
hlt
imul
daa
pushf
sbb
mov
sub
and
add
loopne
jmp
and
sub
inc
sub
push
jecxz
pop
out
add
xchg
or
rcrl
pop
ficompl
nopl
xor
gs
dec
pop
add
mov
add
or
stc
inc
push
sbb
cmp
std
addb
cmpsb
je
fldl
popl
push
outsl
xchg
enter
or
inc
arpl
data16
orb
push
add
push
cmpb
testl
add
dec
push
sti
repz
and
jecxz
jl
add
push
data16
add
rcl
je
push
ret
fs
add
rclb
icebp
mov
fstpl
jl
pop
into
imul
xor
jno
loop
out
lret
mov
cmp
fs
dec
xchg
icebp
adc
push
das
dec
rolb
cmc
shlb
jmp
in
mov
push
jp
adc
lods
and
push
xor
das
sub
or
add
daa
or
add
in
cmp
xchg
push
dec
imul
fisubl
insl
inc
sbb
idivl
jbe
xchg
lds
rclb
nop
or
shrb
push
in
or
cmp
lea
jb
jns
adc
mov
mov
cmp
push
stc
mov
mov
add
and
data16
imul
aam
sti
pop
ljmp
inc
js
fistpl
sarb
add
in
aam
in
inc
mov
jl
fcompl
jne
jo
dec
jno
push
xchg
jb
jmp
jle
jmp
ds
es
roll
clc
sub
xor
fisttpll
test
rol
jno
jle
cld
fs
sub
pop
je
lock
add
lods
nop
in
xor
sub
mov
adc
into
add
sub
repz
loop
sub
mov
pop
cli
jns
mov
add
xchg
push
ljmp
xor
loope
pop
or
shlb
mov
adc
stc
xor
xchg
es
push
leave
js
jg
or
add
xor
jns
sub
mov
loope
in
cmp
xchg
xorl
or
pop
jle
mov
out
xchg
push
fiaddl
in
mov
jle
mov
sahf
or
mov
sub
in
mov
dec
add
fnstcw
scas
cmp
xor
imul
cmpsl
add
xor
inc
shlb
push
sub
pop
or
sbb
cmp
es
mov
test
in
lock
fstpt
xchg
sbb
pop
cltd
push
add
imul
pop
sbb
or
mov
add
aas
sub
movsb
in
mov
xchg
rcrb
test
daa
or
and
pop
icebp
test
cmc
cwtl
sub
mov
adc
cmp
pop
scas
sub
add
sbb
mov
xor
pusha
cmp
loopne
mov
sbb
and
push
loopne
aas
pushl
loope
cmp
push
hlt
mull
xlat
xchg
int3
cmc
fcmovbe
es
call
mov
xor
lods
adc
push
incl
outsb
pop
xlat
repz
add
rcrl
aam
andb
cmp
jnp
add
add
pop
std
xor
or
movsl
outsl
flds
jbe
shrb
mov
fmuls
in
cmp
stos
add
dec
nop
and
xorb
cmc
xchg
pop
mov
adc
jne
test
dec
stc
cmp
add
rcl
movsl
sub
popa
pop
mov
aad
or
pusha
hlt
mov
dec
pop
ljmp
in
mov
insl
add
sub
mov
pusha
dec
xchg
xlat
daa
cmp
add
ja
or
cmp
sbb
js
inc
cmpb
jle
sbb
and
cmpl
mov
and
nop
add
gs
lea
bswap
arpl
cmp
mov
mov
add
jnp
inc
or
inc
and
in
pop
sti
sub
loope
hlt
or
lods
or
popa
fsubrs
js
xor
mov
push
push
cltd
mov
test
jl
cmp
rcrl
orl
and
mov
test
adc
add
movsb
aaa
repnz
das
bound
das
out
inc
insb
ja
inc
and
adc
add
and
test
in
orl
xchg
lret
fdivrl
gs
push
adc
je
adc
sub
mov
adcb
call
xchg
dec
push
clc
repnz
add
out
and
in
mov
movb
jmp
add
mov
in
and
imul
je
add
jmp
aam
xlat
push
add
xchg
out
pop
clc
sahf
push
xor
jecxz
add
sbb
dec
fists
and
xor
mov
add
xchg
out
xchg
sub
push
pushf
or
dec
lods
in
mov
inc
push
and
cltd
rol
cld
stos
and
xor
negl
das
add
mov
vmwrite
cmp
and
add
xchg
inc
mov
in
adc
dec
add
mov
mov
push
stc
call
jae
test
add
cmp
add
pop
jl
test
cmpsb
mov
push
repz
or
lcall
add
adc
cmp
pop
jo
inc
in
mov
mul
mov
cld
add
jle
stc
jae
test
add
rolb
lret
xchg
daa
mov
jg
bound
adc
dec
cmp
inc
loopne
loopne
scas
or
jp
push
mov
jecxz
cmp
cli
sub
push
xor
jns
mov
mov
sub
add
xor
jb
rclb
and
in
push
sbb
pop
and
adc
nop
int
sbb
adc
idivb
testl
inc
cltd
xor
pusha
mov
mov
or
rorb
fimull
cmp
popa
cmp
arpl
push
sti
push
js
add
jb
repnz
sbb
ja
insl
or
ret
popa
inc
andl
adc
scas
jmp
stos
loopne
inc
dec
gs
or
lahf
sub
xlat
jnp
adc
test
lret
or
xor
mov
stc
subl
push
push
stos
sti
rcl
and
pop
pusha
dec
push
or
xor
xor
filds
mov
and
les
push
cmp
repnz
insl
divb
mov
mov
cwtl
arpl
sbb
les
xor
xor
clc
add
inc
in
cmp
mov
dec
sbb
pop
subb
mov
cmp
push
mov
loop
push
outsb
in
test
xchg
lock
stc
ljmp
lret
add
mov
fdivl
popa
cmpsb
mov
adc
rclb
hlt
xlat
call
and
sbb
repz
hlt
jns
test
leave
ffree
jno
xor
pop
cld
fdivrs
mov
js
adc
shl
mov
popf
pop
aam
and
xchg
push
push
xlat
jg
xchg
sbb
jns
out
add
ret
cli
cld
out
orb
rolb
mov
pop
add
and
aas
shlb
and
adc
or
les
sbb
cmp
add
nop
aaa
and
jp
lea
jns
and
out
pushf
adc
enter
insb
push
add
loope
sub
mov
push
inc
lret
or
inc
les
xchg
inc
jb
int
orb
mov
jbe
lds
pusha
lods
cmp
lcall
lret
mov
lret
cs
dec
adc
and
arpl
pop
rorb
xchg
and
mov
push
cmp
sarb
les
push
shll
cld
mov
ljmp
sbb
call
xor
ret
dec
add
xchg
mov
loop
sub
xchg
mov
dec
adc
sbb
sbb
aad
add
xlat
popa
pop
or
inc
mov
shrl
xor
pop
insl
and
pop
jne
mov
or
pop
adc
and
sub
inc
add
test
cld
pop
add
ja
fnstcw
add
insb
lea
fcompl
lock
add
mov
mov
mov
cmp
pop
decb
mov
mov
xlat
add
push
and
mov
rolb
data16
pop
ja
jb
jo
movsb
push
xchg
jge
fs
clc
push
mov
test
inc
and
mov
jno
in
pop
sbb
push
inc
sbb
ljmp
sbb
and
inc
bound
adc
xchg
xchg
ret
dec
add
xchg
and
enter
imul
cmpsb
add
xor
mov
cmp
pop
jle
lock
add
inc
and
fldcw
sbb
lcall
pop
push
sub
and
inc
nop
push
subb
pop
mov
pusha
loopne
dec
rclb
fsubs
fcoml
jno
sbb
dec
ret
rcrl
adcb
sub
adc
popl
jne
pop
adc
scas
into
int
imul
cltd
test
lret
pop
sbb
lret
and
sbb
mov
aaa
mov
add
fwait
xchg
push
test
xor
icebp
add
dec
mov
mov
int
cmp
faddp
ds
sbbb
into
fisttpl
clc
add
aaa
or
inc
lcall
push
test
pop
xchg
push
cmp
in
js
bound
cmpsb
leave
mov
mov
test
cmc
xor
or
test
testb
out
enter
sub
pushf
shll
lldt
mov
mov
clc
int
adc
adc
pop
dec
add
xor
movsb
jmp
and
add
enter
add
push
dec
pop
pop
xor
push
adc
or
sub
add
nop
mov
movsl
shlb
mov
adc
dec
lods
push
sbb
jnp
xchg
add
pop
stos
xchg
push
lods
cmp
jb
xchg
insl
pop
xchg
cmp
dec
je
jo
adc
test
imul
in
subb
dec
insl
add
dec
lods
or
push
into
or
mov
push
mov
fs
inc
inc
pop
les
add
mov
divl
jns
mov
mov
dec
aam
adc
xchg
call
add
and
popa
push
xor
jnp
dec
cmp
pop
cmp
js
push
sbb
in
add
xchg
lock
loopne
add
adcb
sub
cmp
sbbb
or
incb
popf
or
add
lret
jp
or
adc
lods
and
jg
cmpb
sub
xlat
shl
xor
add
mov
mov
dec
orb
loopne
mov
sbb
cmp
and
push
cmp
sub
jl
inc
push
aad
cmp
cltd
xchg
bswap
cmpsl
xor
mov
sub
push
andb
cli
or
mov
add
lret
dec
and
pop
mov
shl
repz
add
inc
dec
jp
xor
stc
ret
mov
cwtl
aaa
push
pop
xor
imul
insl
idivl
xor
cli
push
add
pop
sub
stc
call
cltd
scas
cwtl
jnp
fwait
or
push
pop
adc
les
xor
adc
or
mov
mov
loopne
orl
les
test
pop
pop
sbb
push
add
jge
push
jae
iret
les
add
insb
pusha
repz
mov
xor
jb
nop
and
in
lea
pop
lret
mov
rcr
sahf
push
mov
inc
sbb
or
mov
outsl
mov
pop
shll
lcall
clc
inc
inc
xchg
and
xor
adc
sub
jne
add
fwait
loop
or
out
pushl
call
pop
lock
in
adc
pmaxsw
nop
mov
and
add
add
aas
adc
ret
mov
enter
add
std
jmp
xor
lds
adc
ret
jl
enter
inc
js
hlt
movl
xchg
cmovl
and
and
inc
lcall
mov
add
xchg
imul
push
data16
mov
xchg
add
repz
ja
mov
push
jge
add
scas
dec
push
cmp
dec
orb
add
negl
push
test
mov
push
adc
push
subb
aad
xor
out
or
mov
adc
call
adc
adc
adc
popf
sub
add
push
jno
das
imul
push
idivl
rcl
xchg
enter
jns
hlt
mov
push
lock
mov
pop
cmp
call
sbb
adc
jno
dec
mov
add
sub
or
jle
mov
push
dec
sbb
mov
arpl
cmp
dec
add
cmp
push
int
lock
scas
mov
push
adc
jno
pop
js
add
or
aam
pop
cli
test
adc
add
add
push
or
jno
adc
test
and
and
xor
aad
add
dec
ret
mov
das
jo
scas
iret
stos
add
shlb
pop
sbb
cwtl
push
ds
sbb
popa
fldl
sti
add
and
adc
and
dec
add
je
ljmp
mov
pushf
popa
dec
clc
into
int3
out
push
aam
pop
ret
jp
add
jmp
in
mov
sti
outsl
icebp
pop
pusha
xchg
cmp
mov
dec
out
mov
inc
jle
in
adc
jo
push
add
cmp
add
push
add
push
sub
inc
adc
cwtl
ret
cmp
data16
leave
sub
mov
adc
enter
mov
sbb
xchg
cmpsb
insl
enter
aaa
push
mov
jecxz
gs
test
xchg
js
setno
pop
sti
jo
mov
or
stos
cmp
test
cmp
pop
testb
fs
mov
xor
mov
sbb
jmp
aad
imul
or
sub
add
adc
sbbb
mov
les
loopne
adc
inc
sahf
sub
pop
ds
idivb
mov
in
stos
pop
lret
add
ljmp
xchg
aam
push
cmc
je
mov
jge
xchg
add
push
add
add
or
into
dec
or
mov
icebp
add
jge
mov
insb
pop
sub
out
xchg
mov
adc
or
push
pop
mov
mov
sbb
es
push
add
adc
mov
mov
dec
jmp
xchg
je
push
mov
xor
jbe
mov
out
add
push
loop
inc
push
push
int3
test
and
lret
test
pop
add
fstpl
movsb
mov
adc
mov
and
add
cmc
ljmp
jo
in
subb
sbb
arpl
stos
add
and
adc
and
pop
pop
mov
stc
lock
ja
mov
xlat
js
jp
add
jae
pusha
adc
mov
test
hlt
lock
int3
add
cmp
out
lret
sub
cmp
jae
cwtl
fsubrs
das
add
push
xorl
dec
inc
sbb
dec
push
add
push
sub
cmp
insl
jg
pop
pushf
mov
int
ja
pusha
xor
scas
imul
je
pop
pop
clc
jns
inc
push
pop
add
aaa
ret
dec
mov
xchg
jge
pop
pop
bound
sbb
hlt
es
adc
pop
push
pop
pop
faddl
push
shll
insl
mov
nop
ret
push
jle
dec
in
adc
cmpsl
mov
insl
sbb
les
mov
cltd
cmc
bound
cmpsl
into
int
mov
adc
les
and
ds
or
pop
nop
mov
dec
add
scas
stos
mov
dec
inc
sub
mov
sbb
pop
add
outsl
mov
pop
cmp
outsb
add
sahf
inc
mov
cmp
stos
dec
cwtl
sub
cmp
aaa
xchg
jno
dec
push
lock
leave
add
enter
mov
jmp
aad
or
scas
add
mov
add
sarb
add
pop
mov
dec
mov
mov
int3
rolb
movsb
add
jne
out
loop
pop
inc
adcb
lea
push
or
xlat
adc
xchg
push
pop
imul
inc
sahf
dec
lret
nop
mov
adc
mov
adc
bound
jnp
into
cmpsl
clc
addb
cwtl
roll
cmc
xchg
push
or
or
les
mov
js
icebp
scas
add
add
dec
jp
test
test
or
sbb
add
imul
dec
mov
call
in
shrl
into
xor
add
cmc
and
cli
in
pop
and
mov
aad
xor
inc
shl
sbb
into
fimull
xchg
cltd
lock
in
aam
lcall
fadd
and
mov
sub
pop
sbb
adc
pop
inc
movsb
inc
addl
inc
test
popa
adc
fs
les
sysret
inc
jnp
popa
xchg
inc
leave
inc
jecxz
mov
jmp
xor
cmp
add
xor
adc
rolb
push
add
fisubs
rolb
shrb
adc
leave
test
scas
or
gs
mov
cmpsb
add
cld
xor
call
ret
or
lcall
loopne
pop
add
jecxz
dec
add
pop
push
add
adc
rolb
pushl
cmpsl
hlt
int
xchg
mov
cwtl
popf
inc
shl
jb
xchg
pop
xor
add
mov
dec
dec
push
les
or
inc
add
ret
push
fcomps
sbb
pop
cmp
adcb
adc
add
ffree
mov
pushf
jl
ds
rolb
add
pop
adc
cli
mov
dec
cwtl
xchg
je
xchg
fs
in
rorl
pop
inc
inc
fsubs
pop
xchg
inc
or
or
sbbl
imul
add
into
inc
in
cmp
xchg
add
cwtl
ljmp
push
sbb
movsb
lahf
add
orl
add
jno
loope
and
incb
mov
dec
ss
push
add
enter
mov
call
sbb
pusha
pop
popf
cmp
adc
adc
xor
cs
stos
pop
push
push
sub
push
or
sbb
bound
mov
adcl
sub
inc
add
mov
and
call
add
imul
push
push
test
push
and
adc
and
scas
fnstcw
mov
loope
call
jb
into
or
lcall
in
push
mov
mov
xor
jnp
movlhps
add
lahf
loop
xchg
scas
inc
and
mov
add
inc
cmp
rclb
repnz
call
jmp
insb
or
sbb
cltd
mov
jg
lret
push
call
pusha
add
hlt
cmpsl
inc
pushf
rcrb
add
je
xor
loopne
outsl
into
cmp
test
mov
mov
inc
mov
imul
mov
mov
shll
or
data16
sbb
push
lret
dec
add
xchg
movsb
dec
add
inc
test
shl
adc
in
adc
inc
dec
add
sbbl
inc
sbb
sub
push
jl
xchg
mov
dec
clc
and
pop
movsb
push
out
arpl
add
jne
jae
test
dec
in
jp
orb
mov
cmp
sub
and
cmp
repz
mov
mov
cmp
inc
arpl
cmpsb
fnstsw
xchg
cs
fisttps
jl
call
mov
or
loop
andb
adc
pop
daa
mov
dec
jg
enter
cmpsl
pop
shlb
popa
sub
outsl
sub
inc
pop
fstps
ret
adc
cmp
xchg
arpl
pop
jp
mov
and
mov
jecxz
inc
sub
popf
or
lret
imul
mov
add
adc
add
or
add
popa
cmp
nop
mov
sub
push
data16
add
enter
int
icebp
add
cmpb
or
push
pop
sbb
loope
mov
ret
lea
hlt
or
loopne
repnz
or
mov
jno
add
or
rcll
in
cmpsl
imul
pusha
cmpb
mov
insl
add
sbb
mov
xorl
sub
imul
mov
and
push
lret
dec
add
pop
outsl
add
cli
shlb
add
les
ret
jno
mov
leave
ss
xor
pop
or
lock
mov
mov
popf
sbb
aad
jo
jbe
xchg
nop
aas
dec
int
roll
dec
lds
movhlps
or
add
dec
pop
push
and
and
pop
inc
dec
loop
or
adc
in
loop
add
or
bnd
add
xchg
and
std
jl
pop
cmpl
das
shrb
push
arpl
xor
popl
aad
mov
shlb
adcb
clc
xor
add
cld
jo
inc
and
stos
mov
sub
incl
mov
ds
stos
add
sub
cmp
aad
cli
push
popf
add
cmpsb
mov
push
sub
mov
cld
mov
popa
adc
sbb
fwait
inc
in
rolb
ret
sub
xchg
add
ds
sbb
add
outsb
mov
in
add
push
cmp
pop
dec
pop
add
cli
ret
sub
add
cmp
pushf
add
in
pop
pushf
cmp
sbb
jg
loopne
cwtd
sub
mov
or
ja
arpl
add
movsl
lahf
pop
dec
loope
ret
popf
mov
push
jge
call
pop
sbb
sbb
inc
jb
xchg
cmp
adc
bound
pusha
dec
pop
xchg
jnp
outsl
js
out
sub
push
sbb
fsubl
inc
test
push
xlat
je
or
sbb
jp
and
push
jo
std
add
into
fildl
and
inc
add
fstpl
addr16
das
or
popa
out
adc
sbbl
or
shl
dec
xchg
jo
add
jg
sub
pop
clc
jle
mov
ret
jb
test
inc
pop
js
add
mov
jne
xor
mov
mov
fsubs
das
loopne
rcrb
inc
lahf
int
movsl
pop
inc
mov
jg
cwtl
movb
push
fistpl
jbe
mov
adc
push
xor
shlb
push
jg
dec
inc
enter
adc
add
jp
xchg
cmpsl
test
and
xchg
and
pop
push
and
lea
add
mov
mov
xlat
je
sbb
cmp
add
inc
xor
fstl
sar
pop
and
jb
rol
sbb
shlb
sbbb
xor
adcl
pop
sub
sbb
sbb
add
push
xchg
xor
sub
jb
andb
cmpsl
xlat
add
add
mov
sahf
lret
push
lods
or
rorb
and
fistpl
inc
in
sub
adc
andl
adc
loope
dec
push
xchg
sbb
dec
xchg
adc
dec
repz
mov
incl
les
and
loop
es
ss
or
mov
xlat
pop
loopne
shlb
testl
sbbb
fisubl
shl
pop
push
fsubl
in
sbb
xchg
fiaddl
popa
cmpb
or
int3
sbb
mov
pop
gs
pusha
je
mov
sar
pop
popa
call
jge
std
rclb
add
mov
pop
mov
lea
rorb
dec
nop
mov
dec
sti
cmp
testb
sub
sbbb
lea
inc
adc
out
cmpsl
or
incb
pop
mov
iret
pop
and
sbb
dec
add
movl
sub
sub
clc
pop
sub
dec
add
cwtl
sbb
loope
test
mov
add
dec
xchg
les
lock
xor
lock
pop
cmp
jle
daa
pop
inc
push
cmp
out
jmp
mov
add
repnz
jbe
cmp
bound
and
inc
paddq
dec
movsb
add
xor
xor
add
xchg
dec
aam
mov
je
mov
repnz
add
notl
in
sub
sbbl
cld
xor
jp
cli
or
ja
cmp
mov
orb
ret
sar
sub
lods
adc
inc
pushf
insb
out
add
ret
sub
jb,pn
cltd
push
pop
rorl
test
pop
or
mov
lds
les
pop
shll
inc
loopne
in
add
pop
jge
adc
rcll
mov
std
adc
movsl
pop
mov
fdivs
aaa
je
add
arpl
insl
dec
shl
jecxz
add
push
aam
mov
test
pop
mov
leave
lcall
sbb
mov
xor
or
cmp
jp
and
inc
xchg
lods
cmp
arpl
cltd
mov
iret
xchg
mov
mov
xchg
add
inc
stc
mov
movsb
add
push
push
lock
inc
jno
pop
aam
fadds
jb
add
inc
unpcklps
push
cmpl
sbb
cmpb
pop
int3
lcall
or
imul
outsl
dec
and
sub
sbb
cmp
jno
cli
pop
add
sarl
mov
mov
jg
insb
nop
sbb
pop
inc
iret
in
rolb
lock
add
scas
idivl
pop
mov
les
aam
repz
adc
dec
xchg
or
pop
xor
int
or
jg
out
add
test
xchg
add
sbb
loope
ret
push
add
dec
sbb
jne
add
int
nop
cmp
mov
je
sbb
call
leave
jb
sbbb
fisubs
add
sbb
and
jecxz
imul
es
xor
shl
int3
xlat
push
cmpsl
cmp
jmp
iret
push
xor
mov
or
mov
stos
loopne
repz
jp
adc
iret
andb
sub
or
mov
int3
and
cmp
add
aas
out
out
and
add
jecxz
add
adc
jl
ss
add
push
stos
lds
mov
pusha
sarb
test
cmp
inc
adc
push
enter
and
push
lret
faddl
and
rcrl
inc
add
cwtl
pushf
or
add
mov
xchg
sbb
pushf
call
mov
fisubs
mov
stos
add
popf
adc
adc
enter
imul
cwtl
out
leave
bound
cmp
sbb
hlt
shl
fists
fsubl
cmp
sbb
addr16
neg
xlat
jnp
lock
imul
test
repz
add
xchg
add
mov
pop
pop
jecxz
rcll
pusha
les
in
loopne
jg
sbb
mov
jo
dec
push
jnp
mov
sub
and
add
mov
inc
out
inc
sbb
cmpsb
int3
push
add
jnp
mov
or
addr16
dec
nop
cmp
adc
mov
imul
loope
or
pop
mov
mov
add
enter
nop
ljmp
add
dec
adc
movb
aad
push
xor
sbb
sbb
pop
pop
popa
pop
inc
add
add
out
in
pop
sbb
fst
out
adc
rolb
rclb
dec
xchg
add
push
jecxz
fadds
out
push
cmp
and
inc
cmp
loopne
sbb
cs
and
fs
xor
xchg
xchg
shrb
pop
add
in
movsb
subb
or
mov
loopne
add
mov
xlat
sbb
loope
test
insb
ret
pop
rcrl
xor
pop
sub
or
negb
inc
lret
aas
dec
popf
sbb
cli
adc
jmp
add
hlt
or
lds
mov
or
dec
mov
dec
sub
and
and
push
cmp
add
adcl
hlt
int
rcrl
or
push
addl
fsub
adc
add
mov
leave
dec
cmp
stos
xor
in
add
pushf
push
loopne
pop
sbb
jae
fs
dec
mov
jbe
xchg
pusha
insb
adc
and
stos
mov
mov
cmc
movsb
lods
cmpsb
sbb
nop
cld
jmp
add
and
dec
js
push
cmp
adc
xchg
mov
dec
test
mov
nop
cwtl
shr
mov
add
add
push
int3
roll
push
cltd
movsb
xor
popf
ja
pop
or
xor
jno
sbb
lock
cmp
and
les
mov
fisubs
dec
mov
and
pushf
andl
dec
pop
dec
cld
shlb
fisubs
shll
outsl
add
iret
test
in
dec
and
add
mov
lods
loopne
pop
xor
xchg
add
mov
fs
sub
les
push
testl
add
outsl
js
add
arpl
jl
test
and
mov
sub
lods
mov
ja
addb
add
ret
dec
loop
inc
mov
into
fsubs
stos
add
nop
imul
lcall
inc
shlb
inc
mov
xor
add
andl
outsb
std
mov
ss
fisttps
sub
shlb
xchg
sbb
xorb
add
aam
loopne
jmp
add
pop
das
cmp
push
popa
or
and
sub
push
dec
push
xor
test
fsubl
jge
jg
ret
jl
add
gs
shll
insl
mov
cmp
cmp
mov
fidivrs
and
xor
repz
lahf
mov
test
add
cmpl
sbb
mov
push
adc
cmp
or
out
pop
add
test
dec
sub
dec
add
mov
imull
mov
call
add
xor
aas
movsl
clc
push
xor
mov
xchg
or
and
pop
shrb
jnp
add
inc
lods
push
jecxz
jb
xor
dec
cmc
pop
and
cld
xchg
push
pushf
roll
rolb
addb
mov
push
add
inc
cs
push
jmp
fbld
cmp
cmpsb
mov
jmp
dec
jno
jo
rolb
mov
dec
add
scas
pop
sub
out
adc
ret
mov
push
std
mov
rorl
pusha
pop
pusha
pop
jmp
add
mov
add
or
ds
ss
inc
addr16
jno
and
add
sbb
sub
xchg
pop
add
aam
sbb
ja
out
addr16
and
pop
mov
in
sti
jo,pn
push
add
or
lods
pop
in
call
mov
and
pop
sarl
adc
call
jecxz
or
loopne
jmp
in
aad
lock
mov
out
cmp
aas
cmp
movb
jne
imul
jae
jae
add
or
decl
cs
sbb
and
xchg
mov
xlat
icebp
mov
out
add
xchg
mov
insb
xchg
aad
xor
add
add
cmp
sub
out
and
inc
repnz
imul
dec
mov
pop
xorb
mov
lods
mov
cmp
push
fstpt
sbb
test
rolb
bound
sbb
or
test
add
mov
iret
xchg
mov
xchg
xor
xor
mov
mov
fimull
xchg
pop
add
dec
and
mov
cmp
inc
imul
dec
addr16
subb
mov
add
lods
call
push
push
xlat
leave
and
sbb
mov
add
inc
pop
sbb
div
push
cs
push
sbb
in
cmp
bound
push
inc
add
sub
push
imul
pusha
gs
sub
andb
adc
bound
jp
push
jnp
add
insb
aaa
push
mov
popl
add
sub
push
in
xor
xchg
push
dec
and
xchg
pop
adcl
or
jl
add
cli
fisttpl
outsl
cs
xorb
lock
adc
mov
rclb
sbb
gs
mov
sub
fisubs
iret
out
pusha
dec
sub
sub
inc
outsb
sbb
stc
fwait
adc
pop
bnd
insl
arpl
cmp
mov
xor
mov
ja
outsb
jno
cs
cmpsb
or
sahf
push
and
test
lahf
hlt
repnz
xchg
xchg
sbb
add
mov
mov
mov
ds
cmpsb
movsb
in
cs
lods
pushf
test
iret
je
ds
and
cwtl
pop
add
imul
gs
js
add
repnz
adc
es
dec
cwtl
and
add
and
sub
rol
loop
cmp
inc
inc
out
test
add
mov
test
ljmp
shll
xor
cmp
fcmovnb
dec
dec
or
lds
popa
dec
jo
xchg
xor
and
push
add
movsb
popf
and
cltd
adc
clc
sbbb
add
ds
add
inc
xor
and
clc
xchg
push
dec
loope
pushf
shrb
pop
std
cmp
clc
lods
jnp
inc
mov
loopne
mov
fs
data16
push
and
xchg
mov
into
repz
or
push
or
addb
and
mov
std
vmulpd
mov
or
outsl
daa
sbb
mov
imul
mov
fs
loopne
jne
hlt
aaa
push
std
jmp
xchg
mov
push
inc
popa
xchg
jo
dec
movsb
cld
push
test
outsb
push
mov
push
mov
jno
xor
cmp
jmp
pusha
add
xchg
data16
mov
jg
dec
pop
sbb
iret
adcb
repz
mov
add
dec
loope
add
dec
mov
rcll
push
xor
inc
add
pop
aas
fisubrs
sbb
je
mov
movsl
fsub
lcall
data16
push
outsl
push
dec
add
xchg
shll
pop
adc
arpl
sbb
push
nop
push
mov
mov
add
cmp
fxch
das
xor
mov
stc
in
stc
dec
adc
sub
es
mov
insb
xor
cwtl
call
je
mov
jne
pushf
xchg
sarb
mov
xchg
insl
cmp
sbb
jbe
cmp
rorb
mov
rcrb
std
add
inc
cmp
js
xchg
daa
xchg
sbb
and
shrb
xchg
cwtl
icebp
addl
popf
mov
mov
enter
sub
dec
sbbb
add
jns
adc
xor
int3
pusha
and
sbb
pop
inc
pusha
add
movsl
in
add
iret
cmc
and
cmp
add
adc
fstpl
jg
loopne
or
sbb
push
add
les
mov
pop
nop
call
xchg
jb
and
jl
add
mov
sub
dec
loop
fstpl
push
pusha
xor
xchg
add
sarb
sbb
jecxz
or
xchg
sarl
sub
sysenter
je
nop
js
loope
out
add
adc
xlat
repz
mov
inc
cmp
ds
enter
notb
rcl
cmp
cmpsb
out
or
dec
addb
sbb
sub
pop
lods
mov
hlt
add
ljmp
mov
adc
sub
add
andl
stos
add
sub
ret
mov
or
hlt
xchg
rol
cmpsb
and
mov
xor
add
cmp
pop
or
mov
rcrb
inc
add
out
scas
in
aaa
or
adc
mov
adc
pop
dec
add
push
inc
and
adc
or
nop
je
lret
add
mov
mov
xchg
loopnew
js
mov
out
sub
sbb
xor
call
cld
and
and
je
dec
pop
add
push
fs
inc
mov
movl
lods
mov
inc
mov
inc
add
cwtl
lahf
outsl
and
sbb
xor
pushf
dec
add
jp
jb
lods
das
inc
xor
jge
in
mov
lock
adc
test
mov
mov
mov
push
lret
jns
add
mov
adc
cwtl
mov
lret
ja
sbbl
in
outsb
jbe
cmp
push
mov
enter
cli
inc
or
mov
sar
pusha
shl
jl
mov
push
ret
add
clc
lea
xchg
add
push
addb
movsl
dec
lods
loopne
mov
pusha
add
call
je
mov
orb
orl
stc
xchg
pop
je
inc
fadds
sub
adcl
lcall
and
mov
cmp
xor
imul
mov
cltd
inc
test
cmc
or
and
pusha
push
dec
rsm
cmpsl
pushf
repnz
sub
rcl
push
in
es
clc
push
in
ljmp
mov
int
andl
int3
in
and
add
fnsave
loopne
cmp
xlat
enter
and
js
add
out
and
and
and
xchg
enter
mov
imul
in
mov
mov
push
xor
mov
sub
adc
mov
nop
pusha
cmc
adc
jns
add
and
rclb
add
stos
sbb
inc
sti
or
pop
lds
sahf
rorl
cwtl
andb
and
xor
add
pop
inc
and
shr
xchg
imul
jb
enter
sbbb
cmp
inc
fistl
frstor
popf
cmpsb
addb
in
clc
add
aaa
adc
rcrl
aad
pusha
ret
xor
hlt
pop
pmulhw
nop
lock
sub
loope
add
lret
popf
arpl
mov
rcll
mov
add
add
jo
adc
movl
mov
nop
adc
movsb
movsl
mov
add
cmpsl
jl
test
in
mov
push
cli
shr
movsb
je
shrb
nop
add
loopne
cmpsb
cmp
rorl
mov
xchg
in
mov
push
mov
mov
or
mov
lods
add
ja
adc
fidivrs
movsb
cld
dec
pop
inc
loop
lahf
adc
xchg
icebp
sbbb
dec
call
push
shrb
pop
movsl
xchg
movsb
mov
mov
push
jg
dec
lea
xor
push
data16
mov
inc
testb
dec
fsub
add
or
push
mov
and
fisubrl
add
push
sub
jl
push
out
jmp
mov
add
icebp
fisttpll
sbb
dec
or
mov
push
xchg
add
mov
or
call
and
sbb
clc
push
aaa
inc
icebp
fsubrp
add
or
cmp
jmp
xor
hlt
sbb
xor
add
xchg
cmpb
nop
inc
jns
pop
sbbb
pusha
repnz
sub
sti
loop
fnstsw
add
adc
add
lds
sbb
xor
idiv
add
jno
adc
sahf
and
cmpsl
mov
lret
add
jne
pop
push
nop
fwait
pop
xchg
arpl
sbb
xor
xchg
bswap
inc
scas
pop
cli
lcall
cs
popf
sub
fdivs
subb
icebp
call
cmp
cmp
in
arpl
push
aaa
add
adc
adc
xchg
sub
orb
dec
xchg
ret
dec
popf
mov
clc
dec
jecxz
cmp
sub
test
and
fisubrl
pop
mov
outsb
and
pop
push
mov
sub
je
xchg
movsl
adc
daa
jbe
sbb
cmp
popf
xor
fcoml
add
jg
shrb
pusha
aas
mov
inc
lds
or
lret
aam
ljmp
inc
or
xchg
xor
mov
test
arpl
add
adc
enter
rcr
sub
and
ljmp
adc
loope
enter
data16
or
or
movsb
lods
rol
cmp
mov
imul
xor
cmp
mov
call
xor
dec
fisttpl
pop
or
adc
fdivl
add
fisubl
and
pop
sti
popf
cvttps2pi
inc
xor
mov
hlt
lods
rol
out
sbbl
and
hlt
add
sbb
sub
and
or
popa
push
xchg
mov
cwtl
jno
cmp
add
fs
mov
lcall
enter
incl
xchg
add
xor
dec
inc
mov
adc
jne
or
adc
and
or
xor
in
add
jecxz
addl
push
std
mov
in
add
mov
lds
rcrb
lret
add
outsb
out
test
jne
sub
mov
leave
aam
pushf
add
into
or
and
cmp
inc
aam
sahf
mov
mov
aad
dec
jns
add
jbe
add
inc
loopne
outsl
push
adc
iret
adc
mov
cltd
cmp
xorl
cs
sbb
sub
ja
add
icebp
andl
mov
shlb
add
mov
dec
or
cmp
jb
cmp
sbb
push
and
dec
or
jo
popa
xor
xor
pop
cmp
jae
ret
sbb
loop,pn
xor
pop
or
add
push
sub
add
jb
adc
pusha
adc
push
mov
je
mov
cmpsl
xchg
popf
sbbl
pusha
addl
or
xchg
mov
lret
fiadds
test
shlb
std
ret
pop
sbb
mov
icebp
loopne
inc
mov
jecxz
xchg
out
lods
xor
xor
fs
inc
jns
mov
nop
mov
jo
cmp
cmc
mov
test
sbb
cmp
clc
mov
xchg
shrb
loope
push
stos
pop
adc
fistl
sub
test
adc
cmp
enter
adcb
cmp
mov
roll
out
pushw
pop
jo
dec
mov
mov
add
dec
dec
loopne
xorb
outsl
push
dec
daa
sub
inc
pushf
nop
and
out
add
outsl
sub
mov
xor
cld
or
cmp
xchg
xchg
rorb
mov
inc
cmp
jp
js
inc
js
inc
stos
orl
push
add
mov
add
jle
in
push
inc
mov
jp
fadds
addr16
cmp
inc
pusha
push
icebp
xor
ljmp
dec
add
loop
dec
movsl
add
fcomip
ret
lock
sub
je
mov
rcrl
nop
adc
shlb
clc
insb
adc
test
add
movl
xchg
inc
pop
jmp
add
dec
pop
and
add
add
mov
xor
dec
lcall
add
loop
call
or
cwtl
sbbb
cmp
test
mov
lret
in
push
test
pop
mov
in
cmp
add
scas
mov
sub
aas
loopne
jb
ja
sbb
adc
jo
ss
and
pop
int
loope
shlb
shl
enter
fwait
add
gs
jbe
into
or
lahf
imul
jb
icebp
orb
fisttpl
movsb
movsl
in
lret
shrl
shl
sar
or
xchg
pop
es
nop
inc
frstor
sub
add
cmp
jmp
pop
cmp
ds
xor
rolb
pop
sbb
and
cmp
pop
subl
pop
add
pusha
cmp
fldcw
mov
outsl
mov
inc
ret
jo
mov
cld
mov
imul
addr16
push
mov
in
in
jbe
inc
xchg
cmpsl
ja
and
cld
dec
jle
aam
dec
xor
pushf
sub
dec
mov
push
or
sub
pop
out
dec
and
add
xchg
jecxz
add
jge
inc
inc
adc
dec
xchg
mov
les
lahf
jle
inc
inc
in
shlb
push
fnsave
sub
adc
sbb
or
and
mov
pusha
xchg
adc
jg
sub
aam
sahf
aaa
xlat
sub
or
sbb
sub
popa
jl
insb
loop
mov
ja
call
pop
xlat
nop
shll
mov
push
jae
add
int
repz
ljmp
dec
lcall
dec
mov
adcl
mov
test
add
lods
mov
test
xor
push
xchg
pop
mov
mov
cmc
andb
lret
mov
sbb
pop
loop
dec
xchg
cltd
sbb
in
mov
add
leave
xor
xchg
js
outsb
push
ss
add
cmpsl
sbb
shl
into
lods
add
pop
or
mov
inc
shlb
dec
adc
xor
and
ljmp
add
repnz
jge
pusha
aam
es
data16
mov
cltd
inc
mov
xorl
add
dec
cmc
mov
pop
test
push
les
inc
js
xor
push
adc
or
jo
dec
add
notb
cwtl
jbe
push
dec
les
sbb
xchg
add
ficoms
fwait
cmp
add
hlt
shr
enter
cmpb
pop
jb
in
jg
sub
aaa
fildl
lcall
fistpll
out
aaa
in
cmp
mov
repz
add
stos
popf
outsl
and
pop
pop
aaa
xchg
push
lea
imulb
add
pop
test
and
mov
pop
shl
ror
add
loopne,pn
sarb
push
fnstsw
repz
add
jp
add
aad
enter
daa
int
gs
add
add
mov
jmp
sub
daa
jge
jmp
adc
xchg
mov
pusha
or
lcall
out
pop
mov
iret
mov
xchg
sbb
rolb
les
add
adc
aaa
repnz
push
loop
shlb
lock
lock
add
sbb
pop
mov
leave
vmovaps
addr16
stos
bound
sub
mov
fstpt
dec
lock
mov
nop
inc
sbb
push
shrb
xchg
sub
mov
and
pop
add
loope
jnp
fisttpll
imul
call
add
es
jmp
or
adc
repz
dec
push
xchg
out
or
in
rol
or
fs
xor
sub
mov
fs
fst
add
cmp
and
js
ret
or
jb
mov
test
bound
jno,pn
cwtl
mov
jge
adc
mov
fs
add
les
clc
das
pop
cmp
in
jns
and
js
test
addl
inc
pop
mov
push
and
lods
stc
adcb
into
or
movsb
cmp
addl
and
cmp
fwait
sbb
inc
xchg
dec
movsb
call
lret
sbb
mov
add
xor
jp
mov
pop
pop
insl
jns
pusha
fs
pop
pop
xor
mov
repnz
cmp
pop
cmpb
popf
add
outsl
xchg
fucom
jecxz
enter
xor
pop
add
scas
push
push
inc
mov
popa
adc
movsb
sub
pusha
js
enter
dec
lcall
mov
cmp
pop
xchg
ror
sub
adc
xchg
dec
ja
enter
pop
clc
mov
nop
xor
mov
rorb
addb
sbb
mov
push
cmpsl
mov
sbb
push
les
dec
pusha
sbb
rol
pop
nop
rcl
dec
pop
fsubrl
jbe
fcomi
jnp
dec
mov
adc
test
pop
xor
push
xchg
nop
in
cmp
add
jg
mov
cli
push
jp
inc
cld
adc
xlat
enter
sub
shll
les
xchg
sbb
mov
inc
mov
adc
mov
inc
cwtl
add
repz
jnp
ret
sub
xchg
ds
loopne
pop
inc
fisubl
lcall
aad
scas
mov
cwtl
cmp
aam
ret
jnp
mov
lcall
inc
ds
rcrb
addr16
cwtl
adc
mov
or
aam
out
ret
adc
pop
icebp
cmp
sahf
sar
fiaddl
push
std
ret
inc
leave
call
mov
sub
aam
mov
add
adc
add
xchg
mov
mov
int
shr
das
pop
dec
imul
sarl
int3
lock
push
jne
ret
pop
sbb
fstpt
adc
call
sub
gs
js
rolb
aam
sbb
push
mov
je
faddl
xchg
add
sub
xor
push
mov
outsb
sar
inc
sbb
add
sub
insb
stos
mov
test
sbb
insb
in
int
movsl
pop
and
imul
inc
mov
xorb
or
sub
data16
push
and
int
hlt
jge
add
outsl
pusha
inc
out
repnz
or
xor
cmp
ja
int3
lcall
mov
pop
imul
add
test
cmpsb
or
ja
fistpl
inc
test
loopne
xor
push
mov
popf
adc
jp,pn
and
enter
sub
sub
and
add
mov
repz
dec
mov
dec
mov
mov
mov
cs
out
add
jecxz
cli
ds
adc
aaa
pusha
int
xor
lret
mov
inc
adc
add
mov
shl
lock
outsl
dec
sub
aam
sub
mov
dec
mov
or
or
leave
xchg
cs
dec
je
cmp
xor
rclb
mov
rcll
lods
add
adc
je
sub
push
movsl
mov
or
add
lds
add
push
sbb
daa
adc
sub
add
inc
mov
sub
add
jl
xchg
add
pop
xchg
add
bnd
cmpsb
repnz
pusha
pusha
in
inc
adc
cmp
push
xchg
pop
cmp
repz
loopne
push
mull
out
lahf
fs
jmp
fmull
outsb
roll
mov
mov
cmpsb
cmp
mov
inc
dec
in
movsl
ret
rcrl
fmuls
ret
pushf
and
ror
mov
jge
dec
pop
loopne
cmp
pop
cmp
icebp
lock
loop
xchg
sti
jns
add
sub
sbb
push
mov
cmp
add
sarl
mov
test
ds
adc
inc
fmuls
outsb
jmp
mov
int3
lds
or
repz
mov
movsb
das
lock
cwtl
inc
call
es
std
mov
jmp
movsl
cmp
inc
loopne
les
stos
leave
lds
cwtl
or
pop
add
loope
inc
xchg
mov
adc
cmpb
fwait
icebp
mov
or
dec
mov
xchg
sbb
outsl
push
jnp
xchg
insb
stos
roll
test
push
jle
int
mov
loopne
jmp
dec
push
inc
mov
daa
xchg
push
add
sbb
adc
lcall
or
negb
xchg
add
add
or
mov
in
push
lcall
add
ret
or
test
cwtl
test
add
pop
jg
sub
jmp
insl
lahf
lcall
sbb
sub
shrb
xchg
pop
add
cmp
mov
nop
mov
mov
shl
clc
pop
mov
mov
xor
push
add
adc
aam
lds
insl
inc
xchg
sub
je
loope
addb
pusha
es
adc
push
push
loopne
add
scas
add
mov
lret
push
test
xor
cmp
add
mov
in
ja
or
pushf
insb
gs
fmull
int
adc
clc
loop
push
sbb
shrb
add
xchg
mov
xor
add
sarl
pop
mov
add
xchg
mov
xchg
rorb
adc
push
ror
pop
loop
hlt
xchg
pop
lods
sahf
xor
sub
and
cmp
and
faddl
rclb
pop
gs
and
add
mov
mov
push
out
loope
pusha
test
fadds
add
pushl
shlb
out
je
mov
inc
xchg
and
sbb
loope
test
push
outsb
pusha
cs
lds
adc
xorb
push
xor
inc
push
lea
ss
repz
sti
push
test
adc
sbb
mov
pop
or
mov
pop
inc
mov
jo
xchg
push
addr16
loopne
mov
mov
lret
fidivl
test
sbb
dec
jp
je
fstpl
cltd
xor
sbb
fcomps
xchg
stc
add
jg
addr16
xchg
or
jp
jo
jo
cwtl
mov
repnz
mov
jle
icebp
pop
leave
jge
xchg
lods
add
and
sbb
jns
pop
test
sbbb
test
je
aaa
cli
in
mov
sub
out
add
and
test
jle
adc
cmp
clc
arpl
es
and
pop
fsubs
jns
into
mov
and
in
add
xor
jno
mov
sbb
xor
xor
push
mov
add
xchg
mov
les
xor
sub
mov
add
fildl
in
mov
jl
in
cmp
push
rclb
out
sub
daa
jecxz
mov
or
or
lock
inc
pop
outsb
ja
int3
in
mov
loopne
lahf
push
and
cmp
mov
in
inc
or
jno
mov
inc
and
cltd
faddl
dec
or
adc
sub
test
pop
in
mov
faddl
jno
ficoms
dec
rolb
test
xor
mov
push
int
repz
mov
icebp
inc
push
nop
outsl
addb
push
scas
and
ficoms
cmp
fldlg2
psubq
and
pop
mov
add
cmp
out
jg
cmp
jl
fbld
les
rorb
cs
push
pop
div
inc
loopne
fdiv
mov
add
pushf
lock
jecxz
loopne
fnsave
fsubl
add
scas
push
or
cmp
in
cmp
and
xchg
subb
adc
cmp
lods
sbbb
xor
movsb
sbb
sbb
sbb
cmp
shrb
cld
insb
fptan
cwtl
adc
fiadds
jecxz
mov
mov
push
xchg
add
sub
inc
insb
lahf
pop
or
mov
mov
add
mov
pop
shr
push
jmp
xchg
push
movsb
or
inc
or
cmc
stos
jbe
pop
cmp
sbb
in
aad
and
push
in
push
test
or
xor
and
cmp
repnz
add
inc
adcb
add
adc
mov
mov
adc
xchg
lret
sbb
lret
je
addl
outsl
daa
in
paddusw
sub
jb
mov
jno
cmp
cmpsl
sbb
popa
sub
insb
mov
mov
test
mov
sbb
jno
or
dec
popa
adc
lds
jo
xor
xchg
nop
je
dec
outsb
jne
push
xchg
hlt
xchg
push
aad
iret
in
and
xor
cwtd
test
or
lea
jb
pop
xchg
std
pop
pop
sbb
xor
movsb
mov
mov
xchg
add
xchg
out
imul
addr16
stc
pusha
xor
sub
pop
sub
jmp
ret
enter
pop
pop
incl
mov
sbb
sub
outsl
xchg
bound
sub
and
enter
rol
push
cli
xchg
dec
in
jbe
test
pop
mov
ds
or
or
lret
mov
and
sub
cwtl
dec
stos
in
divb
xorb
or
and
pop
adc
nop
xchg
mov
ds
out
nop
push
lahf
push
mov
cmpsl
inc
std
cld
cld
cmpb
jne
mov
test
data16
and
inc
ja
dec
sbb
loope
or
insb
testl
es
cwtl
xor
dec
dec
out
add
rcr
sti
add
mov
pop
adc
mov
and
mov
rolb
mov
sub
loopne
bnd
jmp
inc
popf
push
xchg
icebp
xor
xor
dec
push
movsb
and
lret
out
loopne
je
add
shlb
gs
dec
add
xchg
inc
insl
and
lock
sbb
add
scas
sbb
push
mov
add
bound
enter
data16
rolb
inc
test
popa
ret
add
leave
mov
icebp
bound
push
in
xlat
sbb
pop
push
inc
add
add
xor
push
add
movsb
mov
mov
test
sbb
pop
and
jl
dec
out
add
mov
andl
lods
sbb
sbb
xor
shrb
out
or
cwtl
sbb
fdivl
repnz
xor
out
sub
add
push
clc
in
sub
cmc
test
inc
push
sbb
icebp
nop
out
add
pop
je
and
movsl
inc
fsubrl
pop
loope
lods
add
or
mov
add
pushf
and
rcr
sub
sbb
insb
xchg
cmp
loopne
test
add
loope
cwtl
enter
add
jmp
sahf
adcl
inc
ret
add
or
mov
jae
sub
fsub
out
shrb
sbb
sbb
shll
sbb
adc
dec
mov
pop
rcll
mov
adc
adc
adc
push
std
dec
and
inc
clc
mov
fcompl
push
or
int3
pop
or
inc
test
inc
mov
rcrl
jb
adc
add
out
loope
pop
out
add
stos
xor
and
mov
sarb
sub
movsb
and
xchg
adc
add
cmp
stos
push
sub
mov
ds
imul
in
fadd
fadds
rolb
dec
test
add
adc
je,pn
call
inc
mov
jbe
jmp
or
inc
adc
sbb
adc
xchg
daa
mov
dec
cmpl
or
ljmp
clc
add
inc
rol
leave
mov
or
scas
adc
je
mov
sbb
aad
mov
add
mov
mov
cltd
push
mov
mov
push
dec
cwtl
xchg
add
daa
mov
js
and
add
mov
inc
insb
lock
add
push
roll
jecxz
and
mov
in
mov
lock
add
mov
pop
enter
enter
sub
xchg
in
mov
subl
inc
add
cmp
icebp
adc
adc
push
add
mov
xorb
adc
push
inc
test
mov
lret
adc
mov
pusha
mov
xchg
push
cmpb
xchg
into
push
pop
int3
mov
mov
imul
roll
cld
mov
loopne
and
add
movsl
mov
sbbl
pop
push
push
add
cmc
andb
and
jbe
je
xor
pop
cmp
adc
adc
pop
repz
daa
bound
sbb
cld
addl
cmp
jmp
add
lahf
stc
dec
jp,pt
cmpsb
add
jb
xor
icebp
pop
les
fadds
ficoms
sub
add
push
rcrb
addr16
stos
xlat
filds
jge
sarl
xor
and
or
nop
xor
in
jnp
arpl
sbb
movsb
in
call
push
jp
xchg
pusha
popa
sarl
mov
movsb
add
add
jp
popa
cmpsb
mov
adc
inc
je
mov
adc
push
and
and
rolb
mov
push
mov
pop
inc
push
sti
jg
mov
clc
xor
aad
and
pop
mov
call
xchg
mov
lds
pop
inc
lods
xor
ret
sub
lret
xor
mov
fdivrl
dec
mov
enter
into
inc
xor
insb
scas
sbb
dec
loop
pop
adc
mov
test
add
inc
pop
mov
sub
cmp
dec
test
scas
add
xchg
std
pusha
mov
shr
rep
dec
nop
push
push
in
add
lret
inc
loope
leave
pop
xor
push
dec
and
pop
xchg
enter
pop
popf
add
sbb
add
aaa
movsl
push
push
stc
xchg
xchg
sub
push
jo
lcall
outsl
and
cwtl
and
shll
dec
mov
iret
insl
jbe
loopne
add
cmp
sub
andb
loope
adc
rcr
gs
out
mov
sub
add
add
ds
mov
pop
xchg
insl
xor
or
int3
pop
sbb
jno
inc
gs
xor
aad
lock
cmp
cwtl
mov
adc
add
inc
stos
inc
add
aad
mov
and
cwtl
and
jno
imul
push
sbb
pop
fsubs
cwtl
jl
push
por
and
lahf
push
mov
xchg
pop
sarb
sbb
inc
jl
pop
bnd
sub
pop
push
cld
dec
inc
and
insl
cld
push
add
dec
push
pop
push
adc
push
xor
or
cmp
and
push
inc
inc
adc
ror
jecxz
bnd
add
sub
ss
xchg
lcall
sbb
jne
and
arpl
xor
fdivrs
and
lcall
clc
jne
sar
popf
mov
loopne
movsb
xchg
cmp
pop
mov
or
push
pop
inc
mov
cmp
enter
sub
add
es
out
or
in
or
icebp
inc
inc
mov
enter
repz
pop
cmp
orb
and
scas
add
push
out
stos
movsl
mov
inc
movsb
pushf
dec
pop
lock
lahf
cmp
imul
insl
and
push
enter
nop
andb
scas
jo
add
iret
mov
pop
adc
and
aas
xor
fnstenv
fnsave
daa
les
popa
fadds
int3
xor
add
or
sbb
mov
cli
movsb
add
mov
loop
xchg
jge
pop
add
sub
mov
imul
sarl
outsl
and
pop
rolb
mov
adc
sbb
mov
jns
daa
pop
or
add
sbb
iret
and
pusha
and
jmp
add
in
addr16
cs
enter
ficomps
xchg
adc
stos
sbb
fnsave
xchg
mov
sbb
add
loopne
add
adc
push
jg
add
or
xor
int3
mov
pop
stos
shrb
daa
and
or
push
shlb
sbbl
or
loopne
in
ds
dec
jns
test
xchg
cmp
movsb
xor
and
nop
addl
add
shll
lock
ret
mov
inc
lea
andb
popf
add
lahf
adc
jmp
inc
clc
rcrl
pop
or
shlb
pusha
js
insb
mov
and
or
fwait
push
int3
dec
lock
mov
jno
addl
jp
in
dec
sub
rcr
scas
push
push
cmpsl
sub
mov
xchg
adc
fists
add
sub
popf
inc
inc
in
mov
jle
inc
out
sbb
bound
scas
mov
dec
ror
pop
cmp
sbbb
sub
push
cmp
jg
add
dec
push
sbb
xor
xorb
ret
paddsw
ja
xchg
cs
js
sub
shl
cmp
add
in
inc
push
fs
js
inc
xchg
fsubs
rcl
icebp
inc
inc
fs
mov
sbb
lock
pushf
jo
cli
fidivs
push
dec
fdivrs
add
dec
pop
lds
andl
sar
dec
add
inc
in
xchg
mov
insb
dec
sub
pusha
in
rolb
mov
push
add
inc
stc
mov
push
hlt
adc
or
add
loop
cmpsb
ljmp
inc
jns
ja
add
pusha
sahf
and
jo
mov
ja
aam
ljmp
jno
pop
or
adc
outsb
dec
arpl
mov
mov
pop
aas
and
shl
sbb
mov
jo
sahf
xchg
fs
lahf
sti
add
lods
clc
sbb
std
mov
decl
in
pusha
dec
mov
and
xor
dec
mov
xlat
mov
lock
call
xchg
out
pop
sarb
or
enter
cmp
popf
test
mov
nop
sbb
push
outsl
push
fs
pop
xor
add
mov
pop
out
scas
or
add
nop
mov
lock
add
mov
lcall
sahf
and
xchg
or
push
rorb
ja
jge
jle
mov
fcoml
inc
js
xchg
gs
aas
jo
adc
inc
jge
mov
fisttpll
call
pop
sub
jnp
clc
sahf
pop
fbld
inc
inc
repnz
or
dec
inc
add
dec
pop
and
movsl
imul
js
call
roll
add
int3
cmp
fsubrp
jno
test
int
add
mov
push
mov
imul
jo
call
mov
add
rorl
cli
cmpsb
mov
aam
and
sbb
shll
aam
rorb
adcb
pop
push
loopne
mov
mov
movsb
fdivrp
sbbb
add
adc
mov
pushf
loopne
sub
add
cltd
push
cs
or
xchg
and
sub
mov
mov
add
mov
fnstenv
or
mov
hlt
jbe
pop
mov
mov
ss
sub
sbb
add
in
or
add
mov
or
inc
cmpsb
faddl
pop
jecxz
pusha
sbb
pushf
ret
shlb
dec
add
jo
xchg
mov
notl
dec
test
add
loopne
les
xor
add
add
sbbl
jge
stc
sub
cmp
add
push
pushf
jmp
pop
mov
xor
repnz
ss
insl
inc
add
or
push
fndisi(8087
pop
sbb
int3
inc
add
cmpsb
pusha
mov
pushf
lds
jge
dec
or
xor
scas
imul
and
les
mov
dec
test
push
movsb
add
mov
pop
or
outsl
cs
rcrb
iret
mov
add
roll
mov
add
pop
je
cltd
adcb
es
mov
dec
loope
fsubl
jp
and
dec
adc
mov
cmp
ss
inc
add
stos
lock
xor
sub
mov
movsl
add
push
sub
outsb
push
adc
jle
and
jae
ja
adc
mov
out
push
lods
mov
mov
add
shll
add
out
aaa
mov
adc
add
fs
mov
shlb
push
push
loope
iret
add
nop
cltd
decl
flds
jnp
cld
mov
lcall
loope
mov
or
adc
aad
xor
out
sub
lcall
out
lea
fcomp
inc
jne
jae
mov
sub
pusha
in
add
xor
nop
jmp
adc
xor
lods
inc
fmull
lea
push
mov
cmpsl
inc
nop
mov
nop
add
rep
push
mov
mov
test
pop
mov
or
fs
lock
iret
pop
or
add
adc
xor
notl
enter
jo
inc
sbb
lret
lea
sub
ret
lea
shll
or
icebp
dec
movsl
sub
test
into
test
out
add
add
hlt
cmp
push
inc
add
pop
pop
mov
mov
push
xor
push
mov
push
imul
xchg
bound
or
cmpsb
inc
sub
cmp
shll
add
push
iret
add
and
adc
int3
xchg
cli
mov
sbb
inc
addb
test
sbb
cmpsb
lahf
adc
xchg
xchg
lahf
je
jp
gs
push
jne
aam
pusha
sub
xor
in
test
mov
add
cld
and
xor
add
int3
clc
jmp
out
rolb
aam
lds
dec
cwtl
ljmp
arpl
mov
xchg
jo
cmc
dec
mov
adc
aaa
jmp
imul
add
sbbb
in
add
xor
jmp
clc
lock
add
int
or
fucomip
adcb
add
push
inc
sahf
data16
icebp
outsl
cmp
sbb
jp
out
add
inc
hlt
roll
repz
dec
and
xor
jmp
xor
push
mov
inc
popl
daa
out
add
nop
mov
xor
sub
or
cltd
jp
add
js
daa
je
add
xor
jo
or
cmp
movsl
mov
rorb
xor
cwtl
call
out
fcoms
out
lret
mov
mov
pusha
and
pop
ja
cli
nop
in
push
addl
add
cmpsb
stos
add
and
add
or
mov
lret
loopne
inc
push
and
push
add
clc
cmc
xor
add
jne
sub
popf
addr16
cmp
pop
testl
ja
xor
sbb
push
and
add
test
inc
rcrb
push
cmovb
pop
push
fcompp
dec
cmp
xchg
call
test
push
jns
push
bound
fnstsw
in
add
xchg
lret
in
loopne
rolb
pop
xor
mov
mov
add
paddd
or
add
std
push
mov
into
loope
and
push
push
pop
jg
pop
pop
repnz
adc
add
jmp
cmpsb
add
mov
pop
push
adc
popf
out
push
or
push
mov
mov
and
push
sub
fmuls
or
inc
push
and
xor
and
lea
dec
call
push
cmp
cmp
jbe
mov
daa
shrl
add
in
fimuls
sbb
jg
cmp
inc
mov
push
xlat
in
int
out
pop
dec
mov
add
imul
scas
push
dec
cmp
jae
iret
in
jno
imul
xchg
jne
pop
fwait
adc
jb
add
mov
xchg
ds
add
mov
jle
and
pop
fsubp
push
sub
lods
pop
cmp
push
mov
cmp
jb
push
sbb
dec
add
mov
mov
add
jo
cmpsl
loope
sbb
mov
sub
sarb
mov
lods
out
and
cmp
mov
bound
fnsave
and
add
ljmp
add
mov
pushf
xor
popa
xchg
mov
add
mov
movsl
ror
pop
add
cmp
lods
sbb
roll
xchg
cmp
push
in
or
adc
add
scas
dec
mov
or
test
pusha
cmp
mov
mov
sub
or
xchg
add
sbb
add
and
orl
mov
aam
cmp
nop
test
pop
add
sbb
loope
repnz
add
mov
add
pop
mov
adc
or
add
and
add
cwtl
rcll
adc
les
lods
pop
fs
push
shl
dec
or
cmc
push
xor
mov
mov
cmp
stc
sub
jo
dec
add
in
mov
xor
roll
jno
mov
mov
test
inc
ror
add
xchg
sub
dec
icebp
inc
pop
dec
push
orb
jmp
hlt
xchg
jge
add
sub
daa
cmp
jo
xor
ja
pop
insl
ret
push
lahf
repz
rcll
jmp
rcll
inc
or
add
or
out
adc
out
mov
add
dec
stc
fimull
inc
mov
jbe
movsb
mov
cmpsl
in
loopne
and
loope
repnz
mov
imul
sarb
mov
add
rcrl
outsb
not
add
jge
xchg
add
popf
shll
jecxz
mov
dec
ds
sbb
pop
mov
jno
add
adc
mov
cli
jg
cld
xchg
mov
gs
in
xchg
and
push
lds
ror
ds
xor
sub
gs
pushf
mov
outsl
mov
inc
xor
pop
pop
decb
and
dec
push
flds
push
xor
out
sbb
adc
xor
dec
nop
stc
mov
adc
andl
enter
imul
and
in
jb
pop
push
jne
lret
imul
fidivl
sysexit
xor
insb
cld
fildl
push
mov
add
scas
testl
jns
jne
xchg
mov
and
lds
insb
pop
shrb
cmp
jmp
sbb
jle
or
xchg
mov
movsl
add
dec
xor
mov
add
mov
or
xor
push
popa
cmp
jno
pop
mov
push
daa
xor
dec
xor
adc
add
add
pop
dec
xchg
dec
xchg
sbb
loope
adc
fimull
add
xchg
add
stc
cwtl
outsb
or
pop
enter
movsl
push
jne
rclb
adc
divb
inc
je
mov
imul
mov
sbb
popa
dec
outsb
out
mov
add
sbb
xor
push
lods
and
xor
push
cmp
mov
subl
mov
popf
gs
xchg
cmp
sbb
stos
pop
stos
pushf
ds
mov
cmp
add
adc
fisubrs
jo
inc
sbb
pop
sub
insl
in
dec
add
sarb
pop
cmp
inc
add
pop
cli
push
and
test
add
loope
out
fildl
add
jge
add
dec
leave
ss
adc
mov
shll
inc
sub
xchg
add
push
sub
nop
cmc
add
xchg
hlt
popf
iret
ret
loop
cmp
cmp
sub
outsl
xor
fldl
cmp
enter
cmp
test
and
inc
shrb
or
jne
xor
fiaddl
cmp
or
call
push
mov
es
mov
pop
pop
adc
mov
cmp
xor
xchg
mov
fwait
mov
push
jmp
mov
add
cmp
fmuls
sub
gs
cs
lock
add
addl
das
outsl
sbb
or
and
lock
mov
hlt
addb
inc
arpl
popa
inc
jmp
sarl
gs
cmp
imul
cli
push
fcomps
test
push
mov
inc
add
cld
es
dec
test
das
fabs
or
add
in
sbb
inc
nop
cmpsl
or
fimuls
jo
hlt
movsl
icebp
xor
add
mov
mov
cld
scas
les
inc
add
clc
ljmp
xor
sbb
fs
mov
adc
xor
xchg
or
jmp
mov
cmp
mov
add
push
add
cmp
repz
mov
add
jp
sub
pop
aaa
pop
jbe
push
call
xor
or
add
add
aam
and
mov
add
pop
sub
lock
in
call
push
add
sbb
ljmp
popa
out
je
jae
leave
xchg
or
hlt
mov
shl
xor
push
mov
cmp
jae
mov
inc
pop
mov
jg
jp
pushf
and
jge
icebp
xchg
cmp
pop
sbb
loop
dec
ja
pop
add
add
pop
icebp
cwtl
pop
mov
shll
inc
xchg
jge
mov
lods
les
jmp
xor
and
and
or
mov
in
jmp
dec
das
je
in
jp
clts
inc
xor
mov
mov
leave
xchg
xchg
sub
and
mov
hlt
mov
daa
add
add
shll
lea
add
add
clc
mov
sbb
or
movsl
rol
fisubl
scas
loopne
add
imul
mov
add
ljmpw
ret
jo
sarl
sub
pushf
pop
icebp
daa
push
andb
dec
sti
rcrb
and
scas
sub
or
sub
adcb
cwtl
inc
pop
xchg
rcrl
dec
adc
data16
inc
xor
fdivs
clc
ja
lods
add
test
add
dec
popf
addr16
ficoml
add
int
mov
add
pop
or
iret
shr
es
inc
xchg
or
cmpsb
mov
xorl
mov
icebp
pop
loopne
rsm
dec
aam
inc
inc
inc
mov
mov
data16
test
in
cli
add
xor
repz
je
pop
mov
xor
inc
fs
cmp
loop
add
or
xchg
add
cmovb
mov
mov
fwait
outsl
addr16
daa
test
adc
cmp
xchg
ja
cmp
xor
jmp
dec
sbb
sbb
pushf
mov
test
jmp
dec
xchg
pop
add
push
shrl
gs
and
jmp
sahf
pop
add
in
subb
or
bound
add
push
pusha
das
cmpsl
mov
xchg
pop
and
shrb
shrl
gs
sbbl
in
adc
addr16
loope
subl
loopne
stc
and
jno
xor
orb
add
pop
les
or
gs
sbb
or
cmp
xchg
and
lcall
inc
add
add
push
inc
dec
data16
arpl
call
inc
xor
leave
dec
or
and
lcall
or
mov
mov
shrb
cwtl
or
ljmp
adc
push
mov
or
stos
call
lea
dec
mov
and
or
and
add
jmp
cwtl
mov
mov
fldt
push
sub
jecxz
arpl
dec
or
aas
mov
mov
and
in
sub
push
cmp
and
inc
mov
cs
and
rclb
out
xor
add
in
hlt
sub
pop
loopne
loope
or
sbb
xchg
cwtl
inc
mov
fwait
push
loopne
clts
sahf
orb
or
pusha
pop
push
adc
adc
jmp
add
insb
jae
sub
jns
inc
lcall
or
xchg
xchg
sub
data16
and
or
adcb
aad
adc
adcb
inc
jg
push
inc
out
mov
inc
popa
and
dec
js
stos
scas
sbb
lret
cmp
pop
insb
andb
sti
add
aaa
jmp
mov
shr
mov
pop
bound
sbb
pop
add
orb
pop
pop
lcall
cmp
movsb
add
inc
pusha
call
test
add
cmp
jb
add
aas
xchg
xor
incb
fs
fisubl
xor
push
jp
and
int3
jnp
add
sti
mov
add
sbb
jecxz
pop
pop
pop
test
cmp
add
pusha
outsb
fdivl
jb
sbb
int
adc
cld
cwtl
cli
fidivrs
das
mov
inc
dec
aam
add
adc
add
lea
add
out
movsb
negl
rol
das
aaa
addr16
cld
add
xchg
mov
add
mov
pop
lods
and
inc
test
je
or
dec
out
inc
mov
pop
fimull
cld
xor
inc
and
loope
fwait
lret
in
xchg
adc
and
jl
jmp
popl
dec
std
mov
fmul
cmpsl
add
adc
out
push
stc
sub
mov
jnp
clc
mov
sub
xorl
lcall
adc
dec
enter
lahf
xor
add
jg
lret
add
popa
insb
mov
lahf
aam
les
adc
out
sbb
cmp
dec
mov
pushf
lret
push
sbb
mov
inc
cmp
fsubl
add
jne
push
adcl
aas
hlt
fldt
ret
stos
subb
xchg
pop
stos
adc
dec
adc
fdivrl
push
push
mov
sub
jmp
pop
dec
aas
les
cltd
add
stos
flds
push
popf
add
cmpsl
add
nop
inc
loopne
push
stos
or
scas
cli
out
add
pusha
sub
push
cmp
mov
sbb
jno
in
inc
add
xchg
sub
shl
jb
add
push
adc
stos
mov
cmp
mov
sbb
mov
sub
xor
and
clc
add
ret
xchg
mov
push
add
or
xor
scas
jo
push
or
jae
sbbl
cld
lds
add
insb
cld
xor
mov
jge
inc
gs
pop
mov
in
ds
jmp
add
lcall
imul
test
scas
ret
nop
lahf
test
adc
cmp
mov
dec
xor
cltd
in
fisubrs
add
mov
add
arpl
add
xor
or
jo
js
out
inc
dec
jl
add
popa
jbe
mov
imul
mov
xor
push
and
xor
in
repnz
lcall
jne
pop
mov
inc
xchg
cwtl
scas
or
xor
into
pop
imul
mov
jg
popf
mov
mov
iret
out
mov
sbb
lahf
lds
adc
add
in
sarb
or
lret
push
and
and
imul
ficoms
loopne
mov
and
adc
mov
add
aaa
pop
fsubl
add
mov
icebp
add
xchg
cmp
ljmp
nop
jo
jb
add
jae
mov
sbb
aas
into
aad
dec
sbb
loope
jp
add
lds
pop
jnp
cld
jmp
pop
fwait
popf
stc
pop
mov
add
dec
movsl
lock
insl
add
push
add
repz
daa
test
leave
out
xor
cmp
add
dec
adc
loopne
nop
add
adc
cli
daa
xchg
ret
bound
loope
mov
roll
ljmp
push
jnp
out
sti
dec
jns
mov
in
sbb
enter
lods
rcrb
and
add
lds
loopne
rcll
mov
dec
push
imul
shlb
push
or
inc
push
xchg
mov
cmp
icebp
enter
push
ds
inc
ljmp
and
pusha
shl
add
and
daa
aad
jmp
sbb
or
jae
inc
xchg
inc
movsb
jmp
xor
add
out
add
adc
push
mov
imul
insl
add
jnp
ss
rcrb
sub
in
ret
mov
mov
cmp
cmpsb
xchg
and
add
xchg
jno
pop
mov
lcall
shlb
loopne
inc
mov
lods
pop
push
out
inc
adc
push
imul
rorb
lods
ret
add
nop
adc
cmp
jecxz
push
mov
mov
stos
shrb
out
or
cs
pop
dec
add
aad
fistl
jne
pusha
mov
jb
sub
adc
sahf
push
push
xor
aad
mov
shll
shrb
movsl
pusha
dec
loopne
out
mov
cmp
pop
lods
jne
cli
add
addl
jle
aam
sahf
inc
add
dec
adc
add
add
fcoms
data16
lahf
sahf
mov
pusha
sbb
add
scas
xorb
jnp
aas
add
adcl
or
dec
and
push
fwait
out
pusha
fprem1
sub
sbb
or
clc
xchg
add
push
cmpsl
jp
rcrb
xchg
loope
faddl
ss
subb
jnp
add
movsb
popa
mov
dec
or
inc
jae
sbb
lret
push
out
push
add
lahf
cld
push
inc
shrl
jns
adc
mov
add
cmp
sub
lea
outsl
inc
push
fnstcw
pusha
fsubl
adc
stc
cmc
xchg
xor
lcall
lock
push
arpl
sbb
jmp
popf
sbb
mov
xchg
cmp
jp
pusha
gs
cwtl
je
adc
add
insb
cwtl
dec
ds
xor
and
psubusb
mov
mov
clc
push
rcll
push
hlt
pop
push
add
push
xchg
mov
das
int3
push
inc
xchg
movsb
imul
pop
xchg
adc
mov
mov
add
xchg
cld
push
outsb
mov
popf
test
jge
add
into
mov
fiaddl
and
xchg
jp
imul
leave
mov
lea
adc
jg
or
loopne
pop
int
sbb
and
scas
int3
and
sub
test
mov
add
fwait
jbe
mov
add
cmp
xor
jge
jo
mov
add
loop
and
movsb
sub
cmp
add
les
popf
pop
mov
add
inc
or
lock
pusha
mov
mov
inc
lds
xchg
shlb
push
or
scas
aad
popa
add
and
jo
jno
andb
sbb
out
push
sub
xchg
mov
lock
loop
xlat
stos
lret
jecxz
xor
inc
jo
cmc
push
in
xchg
pop
subb
andb
push
insb
scas
popf
pusha
inc
scas
cmpsl
add
and
iret
loopne
das
xchg
cmp
sbb
pop
pop
dec
jns
addl
xchg
sar
mov
out
test
aam
mov
dec
lea
cmp
pusha
add
cmp
mov
pushf
lret
imul
je
add
cmp
sub
cmpb
test
cmpl
stc
jne
fldenv
fdivs
scas
inc
jns
xchg
orl
xchg
dec
add
test
das
mov
mov
stos
lods
push
ds
lcall
inc
pop
push
test
test
mov
or
cli
dec
fs
in
pop
pop
add
test
fwait
imul
sbb
out
mov
aad
mov
lds
xor
adcl
test
jnp
ss
or
add
and
xlat
cmp
ds
fbld
lea
pop
arpl
mov
ret
and
pop
sub
jnp
mov
adc
inc
add
add
or
add
push
xchg
xor
fmuls
xor
loope
adc
push
dec
jge
or
xor
add
mov
add
jge
shlb
push
mov
sub
imul
push
add
xor
jnp
add
in
mov
cmpb
jg
add
cmp
xor
xchg
lahf
ret
jp
pop
adcl
xor
js
gs
xchg
mov
jo
out
jo
pop
stos
dec
add
mov
add
and
adc
sbb
add
movsl
and
sub
sub
add
iret
dec
roll
adc
adc
xlat
out
pop
fwait
sub
dec
arpl
imul
jo
imul
repz
insb
rorb
jno
out
sub
cs
xchg
add
jne
inc
sbb
movsl
and
cmpsb
sahf
fcmovnu
mov
subl
xchg
add
push
shr
jg
cmpsl
push
repnz
loopne
lea
mov
outsb
sbb
and
adc
sub
js
gs
jb
lahf
sarb
jg
add
push
fwait
dec
clc
pop
xchg
mov
push
sbb
cmp
inc
jns
outsl
loop
pop
cmp
add
leave
pop
add
xor
cltd
add
lods
mov
clc
or
in
xorb
xor
cmp
loopne
mov
add
jp
inc
mov
xor
aad
cmp
lahf
movsl
mov
ja
in
std
stos
xchg
xor
ljmp
inc
mov
sar
and
mov
lcall
push
xchg
add
or
cmp
in
cmp
and
xchg
mov
pushf
jle
xor
andb
xchg
and
push
add
xchg
cmp
call
dec
dec
outsb
add
xchg
daa
and
jns
add
sbbb
add
xor
add
out
popf
add
add
movl
stc
into
arpl
call
fimull
push
mov
aad
dec
inc
inc
jo
adc
in
pop
mov
call
lea
sub
adc
in
addr16
int3
int3
or
popf
add
jmp
push
lock
lret
jae
outsl
and
jno
addb
lods
add
and
mov
xlat
imul
sbb
bound
test
shl
jg
les
sbb
mov
mov
push
das
add
ud2
fdivr
mov
scas
out
nop
int
pop
call
jno
xorps
xchg
mov
dec
push
adc
and
sub
jo
es
add
incb
or
das
je
ret
xor
movsl
xchg
test
pushl
dec
cmc
mov
ss
sbb
adc
pusha
push
add
push
out
jne
xchg
lock
cwtl
xchg
data16
mov
pop
ficoms
and
mov
pop
data16
clc
sbb
inc
sub
hlt
add
movsl
lret
sub
or
cmp
xor
lods
add
mov
filds
pushf
sub
imul
dec
cmp
lret
ret
mov
aaa
fdivrs
test
xchg
or
stc
add
ds
inc
in
pop
add
mov
add
push
mov
mov
cmp
rcrl
call
or
pop
mov
cs
dec
fidivs
add
jae
push
loopne
jne
dec
sbb
add
out
pop
lods
sbb
mov
mov
jo
rclb
in
out
sub
push
out
mov
xor
xchg
add
ret
and
xchg
mov
inc
shrb
es
dec
pop
push
pop
scas
push
mov
and
cwtl
mov
insb
sub
icebp
add
pop
xchg
add
fdivl
mov
push
ss
sbb
popf
dec
add
jle
pop
or
cltd
add
fistpl
push
add
adc
xor
or
mov
add
push
cmp
xchg
or
xchg
sub
cmc
incl
shrb
ja
movb
or
enter
lock
mov
jle
scas
pushf
lock
in
lahf
add
lds
xchg
sbb
flds
jecxz
insl
dec
rorb
int3
fistpl
jbe
cmc
add
lahf
sbb
push
orl
enter
pop
fcom
outsl
rorl
adc
insb
mov
pop
jl
adc
jbe
mov
add
shufps
xchg
bound
push
pop
mov
in
dec
js
seto
mov
add
inc
out
out
hlt
leave
add
jns
test
outsl
popa
roll
cmp
sbb
add
mov
js
mov
lods
imul
xor
nop
pop
mov
inc
scas
cmpsl
jmp
es
out
je
xchg
add
xchg
mov
mov
pop
dec
ret
xor
cmp
int
arpl
mov
stos
in
push
out
ret
adc
add
es
aad
add
push
test
lahf
lods
pop
test
jmp
out
add
add
sub
add
mov
mov
cmp
in
add
rcrl
lock
int3
add
lret
mov
mov
pop
pusha
mov
mov
das
fdivrl
jge
and
mov
cwtl
test
mov
mov
sbb
gs
jecxz
pusha
inc
clc
ljmp
pop
inc
cmp
ja
add
add
mov
in
add
lods
pop
cmp
xor
inc
mov
mov
shrb
aas
xor
add
call
ljmp
cwtl
or
shl
aam
or
xchg
or
or
cmpsb
icebp
mov
add
pushf
lret
insl
cmp
mov
into
mov
aam
loopne
mov
inc
fisubl
xor
mov
cltd
mov
dec
lea
add
sbb
out
add
je
mov
loopne
lahf
push
addr16
add
shrl
mov
mov
pop
cmpsb
inc
mov
adc
sub
lret
ds
bound
xchg
in
mov
cmp
or
push
xchg
add
mov
and
jbe
jmp
inc
cmp
mov
rcl
pop
xor
or
js
rorb
add
incb
gs
add
ja
popa
dec
pop
insb
pop
xchg
out
mov
jo
outsb
mov
xchg
and
ret
sarl
inc
dec
push
add
add
insl
es
mov
mov
add
lea
arpl
std
pop
loopne
das
mov
inc
jl
jmp
xchg
pushf
clc
jb
sub
sti
imul
sub
xchg
jge,pn
mov
cld
dec
mov
movsb
orl
xchg
add
dec
fidivs
push
and
push
xchg
mov
dec
sbb
jp
add
inc
insl
sub
add
cmp
mov
cmc
jle
add
pop
out
dec
js
mov
pop
xchg
xchg
jecxz
pusha
xchg
subl
and
xchg
loop
cld
lahf
sub
aam
adc
mov
xor
in
mov
es
loopne
push
cmpsb
add
into
test
jo
js
cltd
add
nop
inc
cmp
push
xchg
and
add
testl
icebp
sahf
ret
cwtl
gs
test
pop
and
lods
add
push
cli
inc
addb
inc
call
test
jmp
push
jmp
or
ja
ret
loope
loopne
add
jge
mov
and
mov
call
incb
and
out
repnz
inc
mov
popa
xchg
in
rolb
scas
pop
in
adc
test
pop
addb
add
pop
add
push
xchg
loop
dec
mov
cmp
or
les
add
mov
jbe
jle
sub
div
dec
shl
jae
add
outsb
int3
add
dec
mov
push
sub
in
mov
and
inc
jns
ficompl
rolb
push
sub
sarl
pop
cwtl
imul
jbe
add
add
or
aad
add
enter
js
xor
jno
cwtl
dec
out
fldl
fs
add
push
arpl
lods
mov
testl
cld
stos
lahf
or
inc
popa
js
addl
jb
nop
int3
add
mov
sahf
pushf
aam
je
pop
lods
out
mov
gs
cwtl
sub
rorb
in
add
pop
les
jle
cmp
add
sub
xor
inc
inc
add
enter
pop
mov
sbb
mov
ret
call
rclb
outsl
scas
incl
add
insl
mov
and
pusha
imul
addb
jae
loope
in
inc
das
jle
shll
xor
repz
sub
enter
aam
imul
jge
jecxz
mov
add
and
or
testl
cmpsb
lret
jb
add
dec
enter
sbb
mov
jne
out
into
sub
cmc
lods
add
and
push
mov
xchg
loope
sbb
add
adc
fdiv
push
pop
xchg
repz
and
std
cmp
sarb
imull
add
repz
mov
and
leave
sub
out
inc
fsubs
sub
int
cmpl
inc
xlat
imul
mov
lock
xor
roll
add
ret
lock
popa
add
imulb
pop
in
popf
loop
test
inc
add
or
add
add
mov
mov
call
inc
dec
enter
shll
dec
add
dec
push
xor
mov
gs
pop
mov
je
hlt
repnz
fstl
xchg
orb
js
sub
and
gs
dec
into
popf
add
push
lods
dec
push
pop
pop
xor
jecxz
mov
jp
add
pop
lock
js
je
jnp
pop
mov
arpl
pop
lods
gs
add
add
mov
xchg
mov
fsubs
xchg
insl
sbb
mov
xchg
or
es
imul
xchg
dec
in
add
cmc
jp
mov
add
inc
fisttps
inc
add
aaa
adc
movb
pushl
outsl
je
push
sub
jmp
out
xor
test
mov
push
xchg
and
les
std
insb
aam
lret
test
and
into
rcll
mov
ret
or
xchg
add
inc
test
add
daa
ror
inc
or
pop
popl
mov
outsb
fdivr
xchg
cmpsl
add
scas
in
inc
clc
or
int3
test
add
dec
cmpsl
lret
push
call
stos
mov
push
cmp
leave
sbb
dec
mov
fisttpll
sub
or
mov
adc
stos
nop
insb
sbb
cld
aas
bound
dec
dec
pusha
roll
inc
aam
dec
mov
xor
pop
sbb
or
ret
mov
insl
cmc
lock
data16
ds
cmp
push
sti
adc
pusha
test
cmp
out
dec
jle
in
sub
rolb
jo
dec
sbb
and
sbb
pop
xchg
dec
sbb
xchg
add
in
add
jne
mov
xchg
cmp
cltd
xchg
repz
gs
mov
push
leave
mov
addr16
icebp
add
sub
imul
mov
jge
hlt
ljmp
jbe
mov
pop
test
pop
lahf
pop
cmp
std
mov
add
dec
popa
call
loop
add
aaa
push
addl
dec
mov
les
mov
add
cs
aaa
sarb
xchg
int
rclb
aam
jbe
and
xchg
adc
clc
add
popa
jo
pop
pop
sbbb
cmp
adc
rcrl
sahf
call
cmpl
add
popa
sbb
xchg
add
cmp
adc
cmp
xor
dec
cld
sahf
cmpxchg
mov
nop
testl
inc
xchg
inc
enter
xor
data16
dec
mov
add
cmpsl
bound
add
sbb
cmp
fisttpll
loope
or
mov
dec
add
sub
dec
addb
cmp
scas
fiaddl
jno
fisttpll
and
enter
repz
or
mov
inc
mov
and
loope
mov
sub
cld
pop
add
cmp
outsl
enter
out
popa
sub
and
int
cmpsb
adc
and
icebp
and
jbe
int
pop
fcoml
mov
das
cmp
inc
jnp
push
add
cld
jmp
pop
cmp
pop
xor
mov
add
cmp
or
das
cs
in
out
cmc
xchg
jb
cmp
sbb
test
cmp
mov
add
and
hlt
outsb
lods
sbb
int
push
sub
lock
lcall
cmp
insl
rorl
jecxz
in
punpcklwd
cmc
xchg
push
mov
push
jnp
shl
xchg
sbb
sub
cltd
mov
ltr
jns
insb
jmp
add
scas
add
jmp
and
test
and
fisttpll
jns
add
iret
out
add
mov
adc
insl
add
addr16
lret
dec
add
xchg
into
mov
pop
add
es
bound
push
sub
gs
pop
cmp
inc
mov
add
adc
mov
sar
rclb
xchg
dec
or
jl
jp
or
stos
mov
in
push
mov
scas
add
pop
mov
xchg
cmp
add
int
add
lea
push
dec
add
jbe
mov
je
rolb
adc
dec
add
sar
stc
je
ret
subb
int3
and
mov
lds
mov
sbb
nop
xchg
enter
xchg
adc
or
sub
xlat
movl
insl
sub
add
add
test
add
adc
in
and
rclb
pop
je
add
jnp
pop
addl
mov
jne
sub
mov
mov
push
js
add
dec
cmpsb
bound
and
subb
in
add
push
aaa
xor
mov
std
dec
subl
pop
fisttpll
cmp
outsb
mov
test
rol
in
adcl
movsl
loopne
mov
dec
add
dec
data16
mov
mov
dec
inc
imulb
loopne
add
mov
mov
inc
add
sahf
insl
dec
jmp
jb
add
jg
int
sbb
jmp
lea
lcall
pop
push
fidivrs
or
push
test
jmp
mov
lea
mov
adcb
jb
adc
sub
mov
nop
mov
mov
add
jg
shll
dec
mov
adc
lea
pop
add
and
in
rcl
add
sub
mov
dec
in
sbbl
mov
enter
insl
std
in
stos
ss
push
mov
push
jle
cwtl
add
hlt
lcall
fcompl
inc
in
adc
mov
sub
xchg
rcrl
lret
jb
pop
ljmp
inc
push
scas
add
or
jb
call
and
fwait
cmp
push
in
jl
mull
xchg
add
adc
pusha
js
xchg
fldt
fiaddl
inc
mov
je
push
lret
outsb
aaa
mov
shll
adc
pop
add
test
aad
ja
and
cmp
pop
shrb
fmull
popl
push
xor
cmp
aas
shll
jae
pop
mov
add
rclb
and
xlat
add
mov
inc
dec
adc
jnp
sahf
or
mov
and
add
inc
inc
fs
jne
inc
add
mov
sub
sbb
xlat
xchg
lret
inc
jge
leave
rolb
mov
add
or
mov
jle
pop
dec
cmp
add
lcall
mov
cmpsb
add
int3
lock
inc
into
dec
mull
lahf
push
sahf
pop
push
dec
jp
push
sti
loopne
inc
daa
iret
fwait
inc
je
enter
fisttpl
bound
pop
cmp
adc
or
das
and
cld
xor
sti
add
or
push
nop
pop
stos
sub
adc
rcrb
xor
add
fstps
jg
add
jo
in
mov
ret
cmp
test
enter
jge
jnp
cmpsb
dec
into
dec
and
mov
mov
lock
pop
fistl
jbe
int3
paddb
and
add
inc
je
cmpb
je
cmp
loop
fwait
xchg
push
movsb
add
rcr
ljmp
inc
sbb
add
xor
dec
cmp
dec
mov
cmp
test
out
dec
loope
or
add
sbb
pop
pop
mov
xchg
clc
mov
add
jo
sbb
je
add
cmp
add
std
lods
roll
popa
pusha
fwait
mov
add
arpl
inc
or
dec
mov
jno
and
out
das
mov
stos
add
pushf
cmp
loopne
sbb
lcall
sbb
push
add
scas
xlat
shlb
subb
je
test
jle
push
sbb
out
fldl
xor
sub
pop
add
mov
fisttpl
and
imul
cmp
jnp
add
test
pop
mov
jns
or
xchg
test
add
outsl
xor
add
pop
sub
test
dec
dec
shll
or
xchg
loope
or
cmpsb
push
xchg
and
xlat
ja
mov
lock
sbb
xor
cmp
mov
outsl
mov
sbb
adc
sub
add
jae
mov
lock
cmp
add
xchg
dec
repnz
xor
cs
pusha
xor
mov
out
add
pop
xor
mov
subb
mov
popa
dec
mov
jecxz
sahf
or
push
jns
add
pusha
popa
fistl
leave
cs
imul
in
outsb
mov
fs
add
lret
loopne
push
popa
mov
sbb
mov
stos
xchg
adc
sbb
cltd
sbb
out
xor
mov
lret
ret
lock
add
into
or
xchg
out
jo
ja
dec
cmp
movsb
andl
ds
js
adc
nop
mov
scas
in
test
mov
test
ss
add
int3
push
pop
xchg
lds
or
loopne
scas
push
xchg
sub
ss
add
mov
scas
add
add
xor
repnz
pop
rcrb
jno
mov
pop
push
data16
scas
data16
xchg
cmp
and
mov
inc
inc
add
xchg
ja
and
jo
xchg
mov
add
lods
adc
add
stos
adc
pop
pusha
clc
jae
push
incl
push
cmp
rcl
outsl
cmp
inc
movsb
xor
xor
pusha
dec
hlt
and
out
sbb
xor
inc
push
je
insb
ss
dec
cs
mov
dec
scas
jl
incb
test
lret
pop
shl
out
push
mov
clc
adc
xchg
in
mov
out
push
mov
sub
sub
cld
arpl
icebp
out
sbb
pop
inc
adc
xor
xchg
dec
xchg
push
xor
cmp
lods
mov
or
icebp
sbb
stos
std
lock
sub
rorb
aas
fscale
push
mov
dec
sub
data16
dec
pusha
sbb
sti
popf
jge,pn
cmp
add
xor
movsb
testb
movsl
inc
pushf
bound
lcall
test
icebp
dec
leave
subb
lea
and
mov
jne
loop
js
js
dec
xor
cld
je
xorl
scas
js
add
xor
xchg
add
jbe
adc
out
sub
out
cmovs
repnz
test
mov
pop
dec
add
sbb
add
divl
les
jmp
or
fsubrl
or
inc
pop
fmull
repnz
sarl
lods
add
jmp
test
add
xchg
cltd
xor
lock
pusha
adc
ss
pop
out
pop
dec
ljmp
mov
add
push
sbb
pop
add
inc
out
inc
aad
mov
inc
jo
loop
adc
add
jecxz
aaa
cmc
mov
mov
shll
ficomps
andb
add
mov
popl
push
sub
jg
cmp
mov
cld
xlat
arpl
das
jne
pop
sahf
mov
test
dec
stos
repnz
aad
scas
push
push
jne
movl
adc
dec
or
add
and
out
pusha
mov
ret
adc
out
lcall
fistps
ret
jmp
mov
jb
in
aas
ja
add
adc
cmc
repnz
cmp
inc
cmpb
arpl
and
popf
adc
loop
sub
jle
add
incl
xlat
mov
fldcw
verw
xchg
dec
cmp
mov
and
add
loope
ret
rolb
add
xchg
insl
dec
push
loope
push
adc
add
cmpxchg
mov
cmp
and
push
add
cmpsb
pop
jbe
out
xchg
inc
hlt
mov
push
mov
or
bound
cmp
aaa
outsl
cmpb
or
adc
xchg
popl
xchg
mov
xor
dec
add
add
adc
insb
cmpsl
jl
lahf
cmp
fwait
xor
in
test
add
roll
dec
jmp
mov
add
lods
xchg
sub
out
pop
jmp
cmp
pop
and
faddl
dec
add
jns
xor
daa
hlt
inc
add
mov
mulb
movsb
inc
out
les
push
add
scas
stos
adc
in
ret
or
mov
subb
pushf
je
stc
hlt
loopne
adc
or
notb
lods
mov
pop
lea
cli
dec
xchg
jbe
sahf
dec
aas
repz
outsb
loope
sbb
insb
mov
add
adc
das
js
lret
push
out
in
mov
pusha
mov
jmp
pop
sbb
inc
dec
enter
adc
jge
scas
pop
lret
add
mulb
fs
jo
xchg
jle
cwtl
cwtl
and
cmp
add
icebp
shl
xbegin
or
sub
sar
sbb
xor
sbb
add
data16
push
pop
dec
and
dec
jp
repnz
shll
jns
stos
add
div
jnp
push
dec
add
aaa
mov
stc
sahf
cs
mov
test
pop
add
sbb
aad
add
std
or
daa
jle
lcall
pop
cli
leave
add
insb
push
shll
push
ds
pop
push
fisttpll
loope
add
mov
mov
sub
sbb
orl
add
int3
sbb
pop
jns
add
ret
add
push
or
cmpsb
and
pop
mov
stc
push
clc
mov
cld
insb
push
nop
insl
pop
xchg
cwtl
xchg
pop
es
ficoms
push
popf
out
cltd
sbb
adc
jno
in
jb
pop
add
hlt
cwtl
stc
push
bound
and
icebp
div
daa
shl
inc
xchg
mov
test
pop
test
and
fdivrs
xchg
xchg
adcb
dec
pop
push
nop
inc
daa
movsw
add
loop
mov
xchg
xor
les
int3
idiv
iret
push
andl
dec
mov
mov
jp
or
lods
loopne
dec
jge
add
inc
cmp
add
cmp
adc
jo
jbe
cmp
mov
daa
hlt
in
push
sbb
xchg
pop
mulb
cmp
dec
lods
test
pop
mov
fs
lahf
call
or
fists
cwtl
and
adcl
mov
fwait
push
fisttpl
in
out
pop
cmp
mov
push
add
mov
push
sbb
shlb
lahf
or
nop
scas
cmp
mov
lock
mov
clc
repnz
jns
jbe
xchg
cmp
jp
push
pop
fildl
gs
pop
fwait
jne
add
cmp
or
push
or
andb
adc
or
mov
je
jne
push
orb
adc
loop
inc
mov
mov
add
jp
add
mov
aad
jnp
xor
rolb
mov
push
loop
cmp
testl
xadd
mov
fidivrs
pop
mov
mov
imul
nop
ror
add
pusha
cmpsl
xchg
iret
and
and
es
pop
jo
lock
mov
ss
add
add
hlt
mov
xor
pop
jb
push
lea
add
mov
lock
popa
mov
js
jg
pop
cs
add
movsb
cmc
push
cwtl
add
xor
cmpsl
dec
outsl
inc
and
dec
cmp
mov
lock
or
pop
inc
aam
dec
push
inc
loopne
mov
std
pop
pusha
cmpsl
xor
test
lock
xchg
int3
xor
subb
jne
dec
inc
aad
or
jg
jno
add
jb
xchg
add
fsub
xor
xor
nop
repnz
popa
mov
pop
mov
add
lcall
gs
add
inc
lret
loop
add
test
addb
fs
les
das
ljmp
mov
cwtl
adc
inc
ret
in
jmp
shlb
test
adc
mov
scas
sbb
ftst
sbb
cmp
ret
inc
push
mov
repnz
xchg
je
lods
add
insl
call
xlat
cmp
push
add
xchg
cmc
push
mov
mov
pop
divb
or
mov
mov
in
in
cmc
adcl
test
cld
push
icebp
clc
add
sbb
or
imulb
xor
sbb
mov
cld
jecxz
add
mov
int
and
sbb
pop
mov
fsubrp
hlt
aam
loopne
adcb
enter
pop
adc
add
sbb
pusha
movsl
push
add
call
sbb
pusha
xor
pop
lods
clc
mov
mov
popf
lcall
fidivrs
daa
jb
add
sub
xor
xor
clc
in
adc
xlat
insb
sub
mov
push
push
aam
cli
flds
adc
js
ja
xor
cmpsl
or
imul
dec
add
mov
mov
cli
fwait
add
sbb
push
xorl
mov
imull
in
roll
mov
inc
lahf
inc
push
loopne
push
fnsave
pop
and
sub
fs
mov
add
push
mov
jae
push
mov
add
xchg
in
cld
out
add
test
sub
sbb
cmp
lods
or
mov
adc
jbe
mov
add
mov
pop
add
jnp
xor
and
sbb
fsubr
aad
ss
xorl
rolb
addr16
push
mov
mov
pop
jmp
rolb
cmp
add
movb
sbb
pop
fdivrl
lret
add
fidivrl
shlb
xor
stc
pop
lock
xchg
jne
mov
hlt
sbb
ret
subl
mov
lds
arpl
test
or
sbb
lahf
fsubl
sbb
ja
popa
rolb
shl
mov
push
dec
in
clc
mov
jmp
shr
mov
out
add
xchg
pop
add
add
push
and
fistpl
mov
push
mov
mov
add
inc
pushl
push
movsb
add
loopne,pt
sar
lea
jp
add
xchg
movsl
arpl
fidivs
andl
pop
add
push
xchg
or
insb
add
mov
pop
dec
test
jns
int
add
dec
adc
jo
or
mov
icebp
aam
pop
sub
outsl
add
mov
cmpsl
inc
sbb
xchg
sbbl
dec
and
movsb
add
dec
add
call
add
jno
es
xchg
or
push
mov
push
jo
push
mov
leave
pushf
add
add
repnz
mov
sbb
fistl
jo
or
add
push
das
rcr
jb
stos
add
cmp
ljmp
pop
test
int3
inc
add
cld
call
les
inc
mov
or
sub
movsb
sbb
cwtl
fld
bound
cld
inc
sbb
mul
leave
add
push
push
faddp
subb
add
jnp
popa
std
push
push
test
das
xchg
dec
add
fs
mul
add
cmp
iret
fstps
cmp
movsl
mov
clc
mov
xchg
add
sarb
jns
mov
imul
jbe
fstp
in
mov
sbb
add
mov
push
mov
shrl
mov
cs
inc
aam
dec
sbb
cwtl
cld
jnp
xor
mov
mov
cmpsl
dec
cmp
mov
lock
xorl
leave
add
mov
jg
and
pop
stc
mov
xchg
icebp
cmpsl
sub
dec
mov
and
add
test
xorl
mov
aad
mov
sub
fidivs
rclb
into
mov
mov
xchg
aam
xor
add
in
loope
cs
add
jne
scas
cmc
cmpb
mov
cmp
emms
push
push
sub
jns
add
lods
pushf
or
cmp
lds
push
mov
enter
and
inc
add
mov
mov
movb
testb
icebp
and
cmp
ja
lcall
lods
pusha
popa
iret
stc
out
mov
in
ss
scas
mov
mov
add
adc
and
xchg
mov
loopne
adc
lret
es
fisubl
adc
mov
add
adc
pop
ss
inc
dec
dec
imul
add
sub
ja
sbb
insb
push
jns
icebp
fiadds
add
and
test
push
outsl
mov
pop
add
and
mov
popa
stos
sbb
mov
scas
popf
push
jb
add
xor
sbb
je
mov
ds
add
and
inc
loope
pop
cmp
icebp
add
xor
shlb
xor
ss
add
mov
adc
hlt
add
mov
inc
mov
call
mov
dec
pop
or
cmpb
xchg
push
pushf
add
ss
loop
cmp
fildl
clc
aas
sub
add
pop
std
jae
adc
inc
pop
mov
inc
imul
lock
in
xor
cmp
call
shr
add
lock
pop
cmc
dec
push
jge
stos
aaa
inc
loope
jo
sub
psrad
adc
bound
int3
mov
mov
xchg
xor
dec
orb
add
cmpsl
lock
push
clc
and
mov
hlt
jb
add
ds
add
sbb
push
dec
outsb
push
in
add
xor
out
imul
jle
mov
stos
add
scas
dec
inc
mov
sbb
and
sbbb
aas
cs
add
ret
loope
mov
push
andl
cmp
rcrl
or
pop
ds
adc
das
add
cmpsl
cli
cmp
mov
add
mov
xchg
fisttpll
ljmp
or
stos
cli
add
lds
sbb
mov
mov
sub
fldl
add
jne
dec
shl
mov
mov
pop
lock
mov
dec
stos
cmp
adc
cmc
pop
sub
mov
jl
xor
cmp
push
jne
sbb
pop
xor
fdivp
in
pusha
jae
adc
adcl
or
xor
inc
pop
sbbl
mov
fwait
cmpl
ja
mov
pushf
inc
or
int
sub
pop
hlt
pushf
mov
out
in
dec
lock
xorb
clc
or
add
xor
hlt
incb
mov
decl
xor
loopne
cmp
sub
cwtl
sti
add
rcrl
repnz
sub
mov
in
inc
add
out
mov
xchg
pusha
sbb
cmpb
movsb
push
fdivrs
add
or
mov
js
orb
xor
cwtl
jno
and
mov
out
into
or
mov
mov
fadds
mov
outsl
test
push
orb
pop
sub
add
sbb
or
push
enter
int
pusha
mov
mov
jns
lock
sar
andb
adc
or
pop
sbb
repz
xor
cmp
jae
sub
push
mov
rcll
push
mov
or
push
xchg
lahf
inc
aaa
loopne
cmpl
push
lods
xor
andb
addr16
into
popa
add
jo
dec
and
sbb
addr16
push
push
jo
lock
add
shl
lock
pop
jecxz
addr16
inc
shlb
je
or
fwait
jb
sbb
bswap
fbstp
insb
or
add
fcmovnb
or
mov
dec
sbb
or
and
cmp
fdivrs
and
or
cs
wrmsr
cmp
cmpsl
add
ud1
jle
subb
mov
or
jo
lds
popa
shlb
mov
sub
add
mov
xor
pusha
clc
mov
pushf
lret
out
jmp
add
jo
mov
push
mov
ja,pn
jbe
add
lea
sub
add
push
jae
imulb
cmc
xchg
mov
int3
push
and
mov
dec
cmpsb
jecxz
fwait
std
push
das
sub
xchg
cmp
add
add
mov
in
xchg
add
arpl
inc
pop
dec
imul
inc
in
cmpsl
int
enter
mov
in
aaa
sbb
js
pushf
cmp
xchg
sub
cmp
testl
pop
call
sbb
cmp
ds
add
push
test
test
sbb
or
jecxz
mov
add
int
scas
fiaddl
iret
xor
add
push
and
in
mov
jae
inc
out
jns
loopne
lock
sub
cltd
sahf
das
std
xor
sbb
fiadds
xor
je
inc
mov
mov
ret
jne
or
xchg
pop
lret
jo
add
inc
xchg
in
ss
lock
incb
mov
jae
sbb
mov
sbb
cmpsl
sbb
or
cli
pop
sbb
aam
xchg
lahf
add
call
sbb
inc
fsub
xlat
add
or
leave
daa
add
jae
inc
dec
mov
cwtl
or
and
repz
out
lea
cmpsb
ss
test
dec
push
jg
push
insb
pop
pop
pop
jmp
cmp
xchg
int3
repnz
mov
negl
inc
mov
cmp
out
push
dec
mov
add
sub
pop
data16
dec
and
popf
sbb
enter
or
pushaw
pusha
es
mov
lds
jo
add
xor
sub
nop
insl
sbb
pusha
cmp
pop
and
push
adc
lret
xchg
pushf
jno
or
shll
dec
fwait
repnz
pop
cmp
add
dec
inc
aam
cwtl
xchg
pusha
add
mov
inc
add
sbb
add
insb
inc
sbb
out
aad
jge
jle
fwait
nop
lret
shrb
push
dec
xchg
add
lods
into
addb
stos
push
push
pop
mov
add
addr16
pop
rorl
stos
xor
mov
jle
xor
add
jge
mov
add
lds
movsb
pop
push
add
mov
loop,pt
sbb
inc
daa
nop
fdivrs
mov
pop
xchg
sbb
bound
rcr
outsb
test
in
loope
jbe
dec
std
dec
cmp
cmpsl
pop
in
sahf
adc
push
mov
add
sub
int
push
pop
je
mov
inc
add
push
insl
pop
int3
mov
cmp
sub
xchg
paddsw
sbb
dec
jle
dec
mov
jae
bndstx
mov
dec
pop
adc
leave
sub
add
sahf
jl
or
adc
cmp
testb
mov
shlb
aam
xorl
and
add
inc
dec
jl
mov
fisubs
push
mov
sub
sbb
sbb
lods
add
cwtl
mov
cmp
push
inc
fimuls
psubq
mov
pop
mov
add
inc
adc
sub
lock
and
enter
mov
dec
add
incb
sbb
imul
add
pop
jnp
mov
add
ret
add
stos
xor
add
les
jae
or
loopne
add
adc
out
call
or
add
xor
cmp
pop
inc
clc
out
inc
scas
mov
dec
push
insb
cmp
scas
enter
and
add
pop
mov
jge
jnp
cld
mov
pop
out
rclb
loopne
mov
cmpsl
sub
inc
pop
sub
sub
inc
add
sbb
shr
add
adc
scas
lea
ljmp
cmp
xchg
mov
addl
or
push
xchg
inc
jbe
pop
adc
mov
add
mov
mov
gs
sub
sbb
cmp
or
stos
ret
fucom
cltd
loopne
lret
pop
pop
pusha
mov
sbb
daa
jmp
mov
and
pop
fmull
and
enter
jp
out
sarb
add
movsb
out
and
or
and
pusha
xchg
sbb
mov
lock
andb
icebp
testb
cmpsl
mov
push
mov
in
xor
out
push
das
add
add
sub
add
jecxz
inc
sbb
xor
pusha
dec
sar
lock
fisttps
jo
sub
ret
jne
or
cmpsl
jl
add
xchg
shll
push
sbb
aaa
push
jae
cli
jmp
sbbb
add
mov
jmp
sbb
lret
enter
daa
and
push
add
cmp
rcll
aam
rolb
sub
or
stc
sub
jecxz
jno
rolb
jp
push
imul
pop
je
mov
jmp
push
daa
xlat
lcall
jbe
mov
jbe
mov
jle
pop
or
add
test
rorl
clc
inc
xchg
cmp
mov
hlt
rol
icebp
call
pop
xchg
shrb
cmp
aas
outsl
sub
xorb
sbb
inc
add
add
mov
daa
and
xorl
je
jmp
loopne
push
popf
dec
sub
outsl
jo
push
sub
out
cli
push
pop
add
cmpsb
ja
in
mov
and
mov
mov
add
mov
shlb
mov
mov
sub
inc
push
and
xchg
mov
push
mov
sti
inc
mov
push
mov
add
cld
cli
test
rorb
sbb
addr16
pop
loope
fnsave
sbb
mov
xchg
in
fcoml
test
mov
add
out
lret
mov
xor
in
add
mov
es
imul
dec
fstpl
add
test
test
pop
ja
sbb
mov
sub
cmp
mov
sub
push
gs
xlat
add
xchg
test
add
cmpsb
adc
pusha
in
push
add
push
lret
cmc
faddl
fldl
out
adc
mov
or
pop
rolb
call
sbbl
add
sbb
js
add
push
push
bswap
xor
test
mov
scas
pop
shlb
pop
adc
jecxz
mov
mov
mov
cld
push
leave
movb
pop
inc
rorb
sbb
add
or
lds
mov
mov
xchg
add
jo
pop
fs
dec
jl
add
add
das
push
fdivrs
adc
into
lret
add
sub
sti
jne
or
fildll
int3
imul
add
or
sarb
add
jl
dec
pop
mov
pop
xchg
adc
ret
pusha
add
aad
movsb
test
mov
hlt
add
lods
icebp
std
xchg
add
and
push
jo
jbe
push
pop
dec
mov
add
jecxz
inc
dec
sbb
fwait
pop
fisubl
dec
jne
les
insb
mov
xor
inc
sbb
clc
xlat
pop
push
rorb
or
add
xchg
add
pop
mov
iret
enter
pop
arpl
mov
cmpsb
add
outsb
mov
mov
and
imulb
add
icebp
xchg
or
repnz
push
imul
add
stos
mov
es
les
add
xchg
mov
cs
pop
mov
pop
rcrl
xchg
in
mov
add
inc
sarb
add
adcb
mov
inc
clc
addr16
mov
or
cld
mov
cmp
pop
push
inc
fs
lret
sbb
repz
loop
fdivrs
mov
aam
and
orb
arpl
or
inc
sub
addb
mov
xchg
loop
nop
pop
add
stc
loopne
add
scas
lods
les
mov
notb
shll
std
mov
xchg
rcrb
jg
add
xor
mov
push
sbb
push
testl
lret
mov
loope
rolb
mov
push
lahf
jl
rdseed
mov
shlb
add
enter
subl
xor
xor
dec
outsl
popf
push
es
mov
pop
push
mov
add
rclb
add
jp
cmp
or
or
nop
jmp
out
pop
inc
lds
pop
push
jnp
jge
xor
std
push
add
inc
cld
fldenv
pop
inc
movl
jp
jg
out
xchg
inc
add
test
mov
add
leave
imul
dec
cli
or
rclb
push
mov
arpl
popa
sub
fadds
int
cld
mov
movb
adc
mov
adc
push
jne
sub
mov
xchg
cmp
adc
mov
adc
pop
scas
xchg
pop
stc
call
xchg
rclb
inc
push
or
pop
data16
fisttpl
inc
add
negb
lcall
mov
popf
mov
ljmp
pop
push
pop
add
xchg
int3
sbb
dec
daa
inc
sarl
push
inc
les
jmp
xchg
loopne
mov
add
sahf
shll
stc
fldenv
push
sub
or
jno
or
dec
xchg
pop
lret
cmp
jb
push
mov
ret
fildll
sti
testl
mov
in
add
pop
adc
fdivrl
sub
movsb
xor
push
xor
mov
dec
jmp
pop
cmpsb
sbb
pop
add
test
jge
push
cmp
fwait
add
sti
mov
cmp
pusha
stc
xorb
into
call
int
add
incb
loop
mov
sub
mov
mov
clc
stos
cmpsl
and
inc
fmull
xchg
jae
lock
and
pusha
insb
scas
out
add
adc
hlt
iret
cli
inc
fidivrs
popf
int3
add
jno
lods
dec
shrl
or
jb
and
iret
sbb
push
push
mov
mov
jl
cmp
rcrl
cwtl
mov
insl
add
xor
int
cmp
pop
scas
loope
pusha
jbe
add
add
cmp
cmp
stos
test
loopne
cmpsb
pop
add
loopne
adc
dec
add
pushl
add
xchg
add
shrb
dec
cmp
add
cltd
sbb
pop
sahf
rolb
roll
mov
into
shl
push
sbb
pop
add
xor
ss
daa
cmp
loopne
sub
hlt
and
imul
sbb
pusha
jle,pt
hlt
push
or
addl
cs
shlb
pop
dec
outsl
adc
movsb
add
andl
add
lcall
xchg
jge
pop
mov
rorb
mov
push
add
xchg
jne
push
stos
mov
xchg
push
cmp
mov
push
dec
in
sub
pop
cmpsl
ljmp
adc
adc
cmc
aad
mov
jmp
add
or
jnp
mov
xchg
addb
les
push
and
fcmovne
sbb
inc
and
pop
decb
push
out
jo
arpl
sahf
or
stos
pop
repz
int3
leave
loopne
ja
add
jecxz
mov
rol
inc
adc
xor
fisttpl
dec
xchg
pop
sub
addl
dec
add
jle
and
mov
jle
aas
sahf
xor
fiadds
pop
adc
add
andb
cmpsl
mov
repz
movsb
xchg
mov
mov
xor
arpl
in
mov
lcall
arpl
xor
jl
ss
push
aaa
mov
jmp
mov
cmpsb
pop
xchg
inc
push
into
pusha
in
test
add
mov
roll
xchg
mov
cmp
push
sbb
scas
out
jl
cwtl
jbe
fiaddl
test
rorl
pop
sarb
in
cwtl
sub
and
idivl
jnp
lock
push
xchg
jns
xchg
ds
pop
sub
aas
mov
fcmovne
ljmp
cmp
cmp
pop
mov
inc
cwtl
loopne
sti
add
cmpsl
mov
enter
roll
movsl
imul
testl
add
xor
or
sarb
push
mov
pusha
gs
lret
bound
popa
xchg
mov
enter
cmp
pop
inc
cmc
add
or
fiaddl
cld
adc
dec
aad
push
mov
pop
cltd
andl
jp
pop
and
mov
jb
subl
les
test
adc
mov
loop
sbb
mov
fstpt
jo
add
icebp
sub
ljmp
lds
jp
dec
mov
insb
jl
iret
push
ss
mov
pop
ficoms
psllq
adc
pop
pop
or
enter
jne
cmp
adcl
add
push
lock
imulb
inc
fstl
loopne
mov
adc
mov
sbb
jp
mov
cli
aam
addb
xchg
mov
nop
xchg
enter
addl
pop
clc
fs
push
out
add
sbb
cmp
xor
add
pop
arpl
xchg
sbb
add
inc
dec
or
lods
xchg
or
xchg
fsub
iret
rclb
cmpsl
cmp
xor
add
decb
imul
xchg
add
hlt
sbb
jae
aaa
das
inc
push
rcll
lock
arpl
incb
ret
ss
xchg
adc
shlb
push
push
or
and
enter
xor
mov
les
add
divl
les
inc
cwtl
jge
xchg
fldl
cli
cmpsl
add
jno
enter
dec
es
add
popl
mov
testb
add
rclb
nop
rcl
cmp
adc
sbb
sbbl
adc
mov
and
pop
stc
push
pop
and
mov
mov
inc
add
pop
sbb
ret
inc
push
xchg
fistl
mov
push
mov
lahf
or
mov
andl
pop
or
push
int3
cmc
mov
lcall
sub
inc
xor
dec
inc
inc
push
push
lods
std
add
inc
or
xor
sbb
cwtl
add
push
test
push
xchg
mov
fdivl
push
jo
jns
push
pop
sbb
jle
aam
or
cld
and
add
movsl
aaa
sbb
push
push
jecxz
sbb
cmc
pop
dec
and
sbb
xor
sub
ret
xchg
insb
addr16
stos
cmpsl
dec
popa
inc
xor
imul
and
stos
dec
fadds
je
push
rorb
or
rcrl
testl
aad
push
jo
add
daa
mov
or
dec
xor
imul
dec
pop
xchg
inc
les
xor
xchg
les
test
std
cmp
push
insb
movsl
jae
mov
or
popf
jae
pusha
cmp
mov
in
hlt
loopne
std
xchg
aas
popa
pop
lods
rorb
xor
sub
js
cmpsl
repnz
les
lret
or
xchg
inc
cmp
inc
xor
pop
sbb
mov
loopne
je
mov
jo
add
repnz
push
cwtl
les
add
pop
aad
andb
mov
rolb
push
push
fcoms
inc
push
aam
shlb
mov
push
and
das
dec
xchg
or
mov
xchg
outsl
xor
add
mov
jge
xchg
data16
cmp
out
or
xchg
cmp
cmp
cmp
jmp
xchg
cmc
inc
xor
jl
push
aam
sbb
xor
xor
cli
call
cmp
or
jge
mov
mov
inc
sub
hlt
cwtl
add
push
addb
cmp
data16
adc
xor
add
xor
bound
and
loopne
xor
andb
jb
xchg
loope
imul
push
push
inc
rorb
adc
int3
inc
xchg
adcb
jmp
add
std
lea
popf
xor
xchg
adc
add
mov
mov
mov
ds
cs
and
cmp
sbb
add
lock
lcall
andb
sub
clc
lds
mov
cld
hlt
pushf
inc
adc
add
and
cmpl
mov
or
out
shll
loopne
push
out
pop
xor
out
mov
frstor
mov
stos
sub
inc
loope
inc
and
enter
sub
sub
lock
mov
pusha
pop
push
mov
in
sarb
xchg
and
popf
mov
xchg
mov
pop
je
gs
mov
call
add
push
sbb
rcrb
dec
add
stc
out
adc
cmp
xor
sbb
xchg
mov
adc
inc
pop
mov
push
std
jp
lea
jl
cmpsl
jmp
inc
mov
push
cmp
push
push
or
mov
repz
lds
lea
pop
sbb
hlt
addb
je
xchg
imul
sbb
mov
add
pop
out
dec
xorb
fs
or
mov
pop
push
repnz
aaa
xchg
mov
popf
sbb
sbb
and
div
lahf
adc
push
push
xchg
jno
inc
and
sub
inc
pop
cld
dec
jb
aam
sahf
mov
mov
outsl
jecxz
ja
lock
and
lret
mov
xor
add
jecxz
and
pop
clc
iret
mov
sub
test
pop
fdivr
pusha
cmp
mov
ja
xchg
paddsb
sbb
fninit
jp
add
and
popf
into
push
and
ds
ret
mov
sub
popf
aam
addl
in
ret
aas
cmc
add
fidivrl
lds
cltd
adc
inc
mov
pop
test
aam
sbbb
add
xchg
and
jb
inc
mov
xor
hlt
fcompl
push
rorb
mov
adcb
xchg
xor
add
add
xchg
inc
fcoms
inc
cmp
inc
cmp
das
mov
jg
xchg
mov
out
mov
fistps
dec
jge
jl
push
insb
loopne
mov
push
xlat
or
fsubl
nop
or
adc
pushf
aam
aaa
xchg
jmp
add
pop
out
stos
cmp
pusha
leave
imul
cld
or
xor
rorb
inc
cwtl
jl
sarl
add
dec
push
jbe
cmpsb
mov
in
cmp
dec
fwait
mov
xor
in
addl
jmp
lret
xor
insb
and
add
testb
in
sar
shl
shlb
sub
dec
les
mov
cli
mov
xorb
jno
or
call
mov
pop
inc
and
add
sub
pop
push
or
test
enter
sbb
jmp
psubusw
xchg
or
or
aam
mov
inc
mov
sub
pop
repz
int
push
mov
add
push
cmp
mov
sbbl
xor
add
loope
jo
gs
sub
pusha
mov
out
dec
lds
ret
xor
or
add
xchg
add
jl
cmp
xchg
xor
lahf
add
push
ret
into
cwtl
push
bound
rcrb
negb
icebp
push
cmp
sahf
mov
and
ljmp
fists
hlt
add
andb
pop
insl
pop
add
mov
add
es
xor
jecxz
cmp
xchg
pop
mov
cwtl
lds
pop
pop
sub
mov
ficoms
aam
sub
jo
push
cmp
pusha
ss
jl
sbb
and
xchg
or
xchg
pop
mov
dec
call
daa
mov
nop
mov
sub
xchg
add
xor
add
jecxz
jo
repnz
loop
js
push
addl
imul
jnp
cmp
and
out
clc
or
add
outsl
gs
je
mov
cld
and
adc
fwait
popa
jbe
ljmp
xchg
mov
pop
cmp
mov
xchg
ds
mov
add
adc
mov
xor
push
add
test
xor
xchg
cmpb
mov
mov
add
xchg
nop
test
test
stc
add
rorb
std
add
pop
dec
outsb
dec
jle
mov
idivl
cmp
clc
inc
add
dec
cmpl
shll
ljmp
das
mov
dec
dec
jg
add
adc
decl
inc
in
xchg
faddl
mov
pushf
cmp
insb
orl
add
inc
sti
add
pushf
push
push
setbe
iret
jge
fldcw
stos
jmp
add
dec
sti
adc
pushf
pop
or
sarb
and
cmpsl
xchg
addl
xorb
pop
push
inc
shrb
xchg
dec
sti
ja
mov
shl
push
jne
cmpsb
repz
mov
jnp
add
pop
jg
inc
dec
dec
inc
add
cmp
xlat
fnstsw
pop
arpl
adc
cmp
sar
bound
add
adcl
or
fnsave
jo
cwtl
and
lahf
add
push
fistpl
pop
testl
dec
movsb
cmp
add
jb
call
xchg
xchg
mov
std
add
adc
add
push
and
mov
scas
xor
add
adc
imul
lea
xor
add
into
clc
aaa
shlb
push
sbb
add
xchg
into
ret
outsb
les
rcrl
push
pop
add
clc
rorb
sbb
inc
add
in
jle
mov
mov
rclb
mov
jae
loope
repnz
lahf
inc
mov
in
jne
xor
enter
arpl
clc
pop
push
sub
dec
ffree
js
mov
sbb
jbe
and
filds
push
jae
sarl
adc
lea
mov
adc
ret
xchg
add
lds
mov
push
or
jle
aaa
cmpsb
rcrb
mov
xor
shll
cs
std
add
xchg
sub
mov
pop
stc
inc
push
call
fmull
dec
inc
sbb
out
xor
call
jbe
fs
faddl
sub
sbbb
adc
ror
pop
add
andb
add
or
add
fmuls
aaa
push
push
iret
add
loop
and
add
push
sbb
and
add
arpl
repz
ljmp
add
fbld
cli
mov
lods
or
in
mov
xchg
lret
sbb
test
dec
hlt
push
xor
insb
lahf
and
loop
push
or
jb
add
sbb
dec
or
cmp
adc
sub
pop
leave
xchg
jne
push
and
repnz
push
jno
pop
mov
add
lgs
xchg
test
daa
popa
fidivrs
add
inc
jge
fscale
inc
fildl
lcall
mov
sub
stc
je
pop
pop
shl
mov
add
movsl
outsl
insl
mov
subb
in
and
xor
scas
fwait
adc
insb
pop
xchg
cmp
push
dec
scas
hlt
ds
inc
add
arpl
jge
mov
popa
lahf
cmp
sbb
je
add
mov
dec
push
je
aam
inc
test
jbe
fsub
inc
clc
shll
add
cmp
fcompl
inc
pop
xor
jge
add
insl
sbb
xchg
add
or
popa
clc
pop
and
adc
xor
arpl
outsl
mov
test
dec
lahf
mov
pop
in
or
jg
mov
adcl
xor
sub
cmp
add
jne
xor
mov
adc
cmpl
add
inc
pop
add
dec
outsb
sbb
add
pop
int3
std
push
cli
xor
lahf
adc
cltd
int
xor
mov
sbb
in
sbb
clc
add
mov
pushf
icebp
mov
push
sbb
sub
cmp
inc
test
fs
mov
xor
dec
add
jmp
adc
mov
ja
mov
sub
mov
roll
aam
lea
push
sahf
dec
add
mov
adc
and
xor
add
inc
icebp
xor
fwait
adc
or
dec
push
push
scas
push
push
mov
out
jle
xor
mov
xor
jmp
or
xchg
pop
xor
cli
add
sbb
fdivrs
cmc
add
add
dec
dec
mov
inc
adc
dec
mov
sahf
hlt
pusha
sbb
stos
pop
mov
push
ret
mov
popf
adc
push
lea
mov
fsubrp
xorl
and
enter
sbb
add
lahf
cmp
mov
adc
push
shlb
add
push
jmp
sti
add
sbb
add
mov
cmc
add
jle
mov
add
push
in
add
mov
or
scas
mov
and
out
sub
mov
and
imul
jbe
add
sbb
aas
inc
cmpsb
sbbb
cmp
cmp
stos
rcrl
cltd
sbb
cmpb
push
sbb
jge
rcrb
add
nop
push
scas
pushf
loopne
je
imul
ja
add
dec
daa
sub
xor
add
mov
lds
add
jp
adc
repz
cmpsl
push
xchg
mov
cwtl
addl
and
je
out
shl
push
sbb
hlt
mov
add
sub
repz
jmp
icebp
fildl
mov
mov
cltd
add
aam
or
xlat
xchg
dec
adcb
cwtl
js
sbb
sbb
dec
jg
xor
pop
dec
xchg
nop
add
bnd
mov
test
outsl
add
cmp
cmpsb
insb
sbb
test
cmpsl
lock
inc
adc
jae
add
pop
bound
loopne
add
pusha
out
mov
insl
test
into
push
push
pop
add
pop
xchg
in
push
hlt
sbb
scas
jns
je,pt
inc
fcompl
call
pop
add
outsb
xchg
add
call
iret
push
mov
rcrl
adc
adc
daa
mov
lea
andb
lock
xchg
jb
xor
stos
dec
add
cmp
dec
jecxz
mov
add
pop
rcl
test
add
lods
pop
and
les
leave
sbb
adcb
mov
inc
movb
mov
loopne
dec
repnz
push
jae
pop
sbb
add
aas
sahf
and
or
cmpsl
mov
inc
or
pushl
adc
mov
cs
popf
jb
pop
in
add
xchg
add
cmp
jg
push
movsb
and
xor
in
repnz
scas
addb
btc
loope
test
dec
dec
push
andb
mov
shrb
dec
xchg
pop
jo
shll
xchg
icebp
dec
pop
push
push
mov
xorb
fcmovnb
cmp
aam
jp
add
jle
das
add
nop
cmp
push
dec
or
stos
xor
xchg
js
jno
add
lea
fstpl
xchg
incl
faddl
sub
or
outsl
push
subb
mov
rcr
jb
jecxz
mov
lcall
add
pop
js
movsb
sbb
sbb
rol
xchg
push
stos
xor
ret
daa
addr16
add
jae
pushf
pop
nop
pushf
insl
decl
stc
pusha
mov
cs
addb
sbb
rcr
xchg
add
enter
in
add
std
hlt
and
xchg
jge
push
mov
adc
lds
dec
test
xor
mov
push
add
movsl
imul
lods
jno
push
mov
sbb
mov
fists
cmp
pushf
and
mov
push
and
loopne
pop
cwtl
add
out
mov
dec
pop
jecxz
cmp
mov
sub
iret
pop
add
lods
loop
sbb
sub
push
aaa
test
das
cmp
mov
pop
lods
mov
mov
sbb
in
sbb
add
gs
insb
inc
insl
loope
les
movsb
add
cmc
add
mov
inc
in
mov
add
adc
mov
jl
add
notb
dec
mov
inc
out
test
mov
rcrb
cltd
shl
mov
add
orb
cmp
mov
lret
inc
lret
sub
mov
out
sahf
or
testl
jecxz
es
push
nop
add
shl
inc
shlb
inc
and
sti
js
dec
mov
add
inc
shl
stos
ds
jl
xor
lret
subb
jno
fldcw
fiaddl
aad
jecxz
fcoms
add
dec
sub
rol
mov
in
cs
stc
pusha
hlt
lcall
adc
rclb
lahf
mov
pop
dec
ljmp
test
add
js
jp
shll
xchg
pop
orl
push
cmp
pop
fs
or
aam
sarl
add
scas
sbb
cmp
xchg
fwait
mov
cmp
aas
lcall
in
sar
sbb
dec
lret
enter
jmp
add
mov
scas
push
sti
mov
sub
jns
cmpsl
mov
out
lret
and
ss
add
dec
push
sbb
add
in
in
jmp
js
in
push
add
sahf
ficoms
cmp
add
in
push
fwait
push
dec
pop
cmp
and
inc
push
jns
push
cltd
test
shrb
pop
add
xchg
test
mov
push
xchg
pop
add
popa
fisttpll
cmp
sar
std
out
nop
add
jmp
fwait
add
leave
sbb
inc
stos
sti
loope
shrl
loopne
sbb
in
inc
scas
adc
insl
fdivrs
add
mov
inc
stc
je
add
push
jns
mov
mov
in
fsubrl
testb
adc
and
sub
cmp
jo
push
jmp
aad
jmp
rol
fwait
imul
jge
into
xor
lods
and
cltd
repnz
add
lods
daa
jno
mov
inc
je
add
inc
push
lds
and
sahf
repnz
shl
cmp
inc
es
lods
add
push
mov
cmpl
inc
mov
int
adc
and
outsl
movsl
jecxz
shrb
mov
dec
adc
add
mov
out
and
test
xchg
clc
sti
bound
adc
pop
pop
mov
inc
adc
lret
add
in
bound
cmc
jp
pop
in
jns
mov
mov
mov
xchg
add
js
cs
lock
jge
dec
lea
add
ret
adc
pop
mov
and
add
inc
adc
cld
push
cmp
insb
pop
mov
pop
adc
sahf
push
sbb
sbb
xchg
es
add
mov
fcompl
dec
repnz
loop
insb
cmp
push
add
les
gs
add
rolb
test
pop
add
pushf
adc
fadd
add
pop
fsubl
jns
mov
nop
add
movl
test
aas
xor
inc
sbb
dec
cwtl
dec
popa
icebp
xchg
inc
or
inc
inc
jo
cmp
add
cli
adc
out
xchg
fldt
dec
dec
add
cmp
inc
frstor
loopne
mov
adc
sub
mov
fcomps
xchg
adc
sub
sub
mov
lds
xchg
jle
fs
xor
dec
pop
aas
popa
test
jno
sbb
negb
mov
test
js
add
les
cmp
xchg
jbe
rcll
sbb
fwait
dec
popf
scas
cmc
inc
adc
add
cmp
sub
sti
into
dec
cltd
jne
dec
sbb
pop
lods
xchg
jp
rcl
shr
mov
stos
movsl
inc
add
mov
into
push
jo
enter
loope
push
lret
mov
pop
add
or
ds
adc
jno
xlat
jae
adc
popa
out
mov
int3
push
rcll
outsl
insl
xchg
jmp
xlat
jle
ficomps
add
mov
pusha
aaa
push
les
jo
xor
ss
sti
lret
adc
cmp
pop
clc
pusha
add
pop
inc
popf
pop
lock
inc
repnz
repz
sub
sub
sbb
add
std
jecxz
nop
add
push
sarl
loopne
repz
ret
dec
pusha
xlat
sub
jg
idivb
fsubs
adc
push
int
aam
cmc
cmpl
sub
push
fcomps
aam
gs
pop
repz
jne
ss
cmp
out
lret
pusha
insl
ffree
adc
pop
stc
mov
fs
repz
test
hlt
pop
rolb
fidivl
nop
sub
sub
inc
push
rorl
mov
push
add
scas
fwait
pop
outsl
xor
repz
add
mov
stos
xor
leave
mov
lods
mov
ud2
loopne
cmc
inc
ret
test
dec
clc
cltd
insb
add
cmpsl
fnstenv
ret
mov
xchg
mov
xchg
fmul
pop
sub
jb
add
iret
push
rcl
pusha
hlt
testl
movsl
mov
inc
repnz
push
jnp
add
dec
xlat
enter
fildl
std
sub
add
push
loop
dec
push
repz
enter
out
add
fidivrs
repnz
jnp
xor
pop
add
sub
sub
inc
cmp
fidivrl
mov
call
add
and
aaa
into
rcrb
jg
test
or
sub
or
push
inc
std
in
adc
sbb
mov
stc
je
dec
js
sub
fbld
adc
sub
add
loope
adc
push
or
inc
dec
int3
inc
push
sub
xor
je
add
sub
push
dec
jbe
sub
cmp
and
lock
inc
mov
mov
aas
lret
inc
add
sbb
jg
adc
mov
add
inc
dec
loopne
fwait
cmp
dec
rclb
sbb
aam
jnp
std
rorb
jmp
repnz
and
add
add
add
pushf
jne
push
repz
sbb
outsb
nop
inc
add
adc
cwtl
and
add
push
and
aad
loopne
push
inc
bound
lods
or
test
mov
mov
dec
mov
sub
andb
lock
mov
jmp
subb
sbb
insl
rol
inc
and
and
add
cmpl
lret
push
imul
fldt
scas
mov
and
adc
fs
jb
or
and
ret
pop
dec
xchg
add
sahf
sub
mov
mov
mov
sub
xlat
orb
cmpsl
fisubl
cmp
lcall
pusha
daa
mov
js
fmuls
lock
push
jbe
shll
mov
call
xchg
cmp
icebp
jo
sbb
xor
and
insb
aam
out
mov
test
test
icebp
inc
cmp
faddl
addr16
jl
cmp
sub
push
or
movb
mov
adc
jns
or
fs
in
lds
mov
cli
rorl
push
mov
adc
add
and
lret
lods
sarb
jecxz
leave
mov
cmpsl
add
add
cmp
jae
pusha
xchg
addl
mov
xor
sub
loop
dec
faddl
mov
addl
inc
insl
insb
test
aas
sub
shl
push
sbb
add
xlat
stos
mov
sub
push
add
mov
sahf
adc
mov
pushf
fiadds
push
adc
inc
subb
xchg
adc
neg
call
and
movntq
dec
mov
roll
jae
add
nop
mov
mov
add
loop
pusha
flds
pop
shl
jns
cmpsl
pusha
xchg
out
adc
pop
cmc
test
sub
data16
xor
add
iret
cli
shlb
das
outsl
out
add
xchg
imul
test
and
outsb
and
sbb
add
scas
popl
and
xchg
inc
pop
jl
loop
ds
adc
mov
jae
cmp
adc
mov
mov
push
repz
adc
jnp
mov
adc
xchg
mov
adcb
lods
cmp
lods
pop
inc
jg
add
cmpsl
jns
in
inc
lea
call
aad
add
mov
and
imul
shrl
icebp
pop
add
mov
push
add
and
fsts
sahf
or
rclb
jp
push
loop
xchg
jo
cmp
aas
cmp
es
loope
cmp
rorl
mov
xor
mov
movb
sub
xchg
jns
xchg
out
rcrl
push
lret
mov
and
sti
orb
jbe
jp
add
shrb
sub
movsl
cwtl
adc
xor
jns
bound
push
xor
mov
pushf
lret
push
movsb
push
stos
loope
add
push
mov
rolb
mov
mov
dec
jne
nop
add
inc
mov
adc
into
push
lods
cwtl
mov
add
je
inc
xchg
call
or
inc
js
cmp
hlt
cmpsb
mov
test
mov
mov
add
ds
loop
loopne
and
lret
cmp
ljmp
adc
push
mov
add
mov
and
scas
outsb
xor
out
mov
addb
push
add
fiadds
adc
dec
and
push
mov
cli
enter
stos
pop
sbb
arpl
movsb
in
loope
push
testl
mov
mov
sub
push
mov
add
in
push
cmc
lock
jnp
push
mov
dec
xchg
mov
push
xor
push
call
rorl
jp
add
sbb
testb
inc
and
pop
add
hlt
mov
mov
inc
in
xchg
or
push
popw
and
into
jb
aam
gs
aas
cld
pop
add
dec
jecxz
xchg
xchg
pop
inc
fldenv
aam
sbb
mov
add
mov
je
sub
mov
xchg
pusha
ror
sbb
add
lock
in
jns
pop
adc
push
cmovo
mov
inc
stc
xor
cmp
sub
mov
mov
notb
sub
jnp
xlat
lods
adc
xor
addb
add
leave
roll
xor
mov
or
xorl
les
add
and
int3
add
adc
xchg
dec
or
fldt
fimull
das
push
andl
and
push
out
hlt
into
add
and
jg
push
lods
andb
lea
jle
mov
xchg
xor
add
mov
mov
fnstcw
cmp
adc
jmp
jp
mov
inc
add
xor
inc
fidivrl
add
push
or
cmp
xchg
mov
fwait
inc
dec
or
les
sbb
lahf
or
or
push
and
jne
adc
out
movsl
add
mov
das
push
test
insb
int3
mov
add
pushf
sbb
push
wrmsr
add
data16
inc
outsl
out
lods
mov
or
cmp
add
mov
adcl
sbb
pop
clc
add
xchg
cltd
call
dec
lock
xchg
out
xor
or
cld
and
and
mov
pop
pusha
scas
dec
popf
push
jg
sbb
imul
push
add
std
lods
aas
daa
movsb
add
or
add
sti
popa
dec
call
xchg
cltd
pop
xlat
push
adc
cmp
jp
inc
jle
bound
in
push
mov
lret
cmp
je
cltd
mov
sti
pusha
or
pusha
sbb
jle
leave
jo
sbb
pop
hlt
nop
faddl
lahf
push
jl
adc
or
js
push
and
inc
inc
les
clc
test
cwtl
cmp
xor
pop
fs
in
es
enter
add
sub
or
mov
les
jne
subb
loop
add
and
inc
cwtl
iret
daa
es
xchg
push
inc
add
add
adc
cmpsb
pop
add
jge
rcrl
test
push
hlt
pusha
lods
dec
and
jbe
pop
dec
ficomps
xchg
daa
ret
hlt
pushf
push
cmp
jb
inc
iret
popa
sub
data16
cmp
stos
dec
xor
dec
adc
sbb
out
out
pop
adc
out
add
ja
imul
add
js
fnstenv
sbb
jecxz
cmpsb
das
pop
lods
inc
adc
add
jp
xor
adcb
call
leave
push
dec
sahf
mov
pop
mov
dec
xorb
push
push
xchg
and
sbb
mov
cltd
leave
add
repnz
and
jns
movl
add
xchg
sub
cld
in
inc
push
mov
stos
mov
sbb
nop
lock
adc
xchg
sbb
stos
gs
hlt
push
cmp
lds
out
mov
add
mov
pusha
adc
dec
sbb
stc
adcl
sub
cmpsl
mov
xor
jb
pop
inc
dec
out
stos
mov
cmp
das
sbb
pusha
adc
out
jge
push
lods
or
daa
and
in
add
es
mov
xchg
add
xor
and
jmp
cs
push
enter
or
xchg
inc
or
sub
mov
xor
popf
mov
dec
ja
inc
dec
xchg
add
or
divb
or
push
or
cltd
insb
cmpsb
iret
xlat
add
adc
inc
jmp
pop
ss
add
inc
leave
adcl
jno
bound
cmpeqps
scas
mov
into
out
adc
je
mov
cmp
stos
les
jne
and
mov
xchg
bound
cld
push
jp
lods
inc
test
jno
xor
cmp
outsl
xlat
mov
test
cwtl
int
sbb
lds
jbe
imul
ret
pushf
sahf
inc
inc
int3
pop
lea
mov
jecxz
bnd
cltd
mov
jb
adc
sahf
in
lret
add
push
xchg
add
aad
dec
push
lds
dec
add
cmpsl
mov
js
ret
adc
test
in
mov
imul
jns
mov
dec
inc
add
pop
and
mov
es
cmp
add
pop
aam
or
test
icebp
add
pop
repz
cmc
inc
hlt
fldl
popa
int3
daa
sbb
mov
ljmp
inc
rcrb
push
mov
sbbb
out
pop
jns
pop
stos
fnsave
xor
mov
mov
cltd
xor
add
inc
jle
and
adc
push
mov
add
fs
add
mov
sarb
pop
enter
and
dec
filds
dec
cmc
cmpsl
shlb
popa
imul
fmuls
test
pop
mov
inc
je
std
xchg
inc
mov
sub
inc
mov
or
fadds
inc
dec
pop
pop
dec
notl
gs
aam
add
icebp
xor
scas
mov
loopne
jg
add
pusha
lahf
mov
add
cmp
and
sub
ss
sub
add
mov
scas
pop
mov
or
nop
nop
lcall
sarb
lock
cmp
add
sbb
aad
bound
pop
cld
mov
inc
mov
xorb
jg
lahf
imul
in
iret
test
ljmp
aad
cs
add
into
das
or
jmp
cmpsl
insb
pop
scas
inc
std
add
push
cmp
dec
mov
stos
jmp
stc
clc
shlb
add
mov
cwtl
ffreep
addr16
xor
movb
sbb
jle
cmp
push
adc
rcr
repnz
mov
add
leave
mov
loop
mov
hlt
pop
push
lea
cmp
fld
in
cmp
adc
mov
pop
mov
test
cmpsl
stos
sar
jp
cmpb
enter
clc
inc
addr16
adc
or
add
sub
lret
cmp
and
add
xchg
faddl
int
insb
popf
inc
or
cmp
pop
pop
or
mov
cmp
or
sbb
insl
sub
jo
pop
add
inc
jmp
scas
jnp
ja
divl
pusha
sub
cmp
cmp
adc
ds
and
cli
jl
addb
dec
sbb
jb
inc
jo
push
into
mov
popa
int
imul
lret
scas
push
aad
mov
loope
aaa
loop
repz
xchg
pop
sti
shr
inc
add
ja
jb
add
mov
repnz
add
jnp
cmp
xor
dec
movsl
and
add
mov
fs
mov
inc
call
sbb
pop
imul
hlt
and
inc
add
arpl
in
add
or
sub
ja
repnz
aaa
pop
add
imul
pop
fldenv
pop
adc
test
add
mov
sub
aad
imul
and
pop
sub
fbld
xorl
in
mov
ret
add
rcrb
jne
adc
add
jl
sbb
dec
fldenv
ffree
mov
mov
sbb
inc
push
pop
inc
scas
adc
outsb
push
pop
out
and
fcompl
inc
mov
loopne
push
dec
inc
orl
sarb
xchg
jg
fmull
add
mov
dec
fldcw
xorl
pop
cmp
idiv
dec
insb
sbb
clc
push
popa
mov
fsubl
and
mov
stc
xchg
add
inc
pop
nop
andl
sub
or
mov
lds
data16
mov
add
jmp
fcoml
gs
nop
fwait
and
sbb
cmp
xlat
imul
out
mov
jo
jbe
or
mov
xlat
lea
add
push
jle
out
mov
and
jg
mov
and
mov
out
outsl
pop
sbb
gs
adc
sub
jns
jle
sbb
fs
inc
addr16
lea
add
fcmovnu
loopne
stos
add
mov
lcall
xchg
adc
ret
scas
cmp
or
stos
push
lcall
jmp
inc
clc
movsb
loope
imull
push
mov
aaa
out
cmp
aam
mov
lret
mov
out
push
push
call
xor
pop
and
and
mov
inc
pop
sbb
test
out
fidivl
iret
sarb
pop
or
mov
mov
cmp
jg
dec
into
cwtl
ja
fwait
push
add
push
push
aaa
cmp
bound
inc
add
or
push
pop
shrb
ds
shlb
adc
cmpsl
push
mov
xorb
xchg
inc
mov
loope
loopne
popf
clc
ljmp
pop
sub
add
out
or
inc
stc
mov
jge
mull
add
jb
mov
dec
mov
mov
insb
sub
push
mov
or
add
sub
addb
lret
mov
cltd
adc
test
pop
jnp
xor
adc
jns
or
dec
mov
js
outsl
cmp
jo
or
in
add
xor
pop
inc
and
dec
fld
xchg
cs
fidivrl
dec
ja
stc
sahf
fsts
inc
push
jne
pop
jb
pop
push
imul
ja
xchg
repnz
or
jg
test
add
adc
add
repz
jl
xor
jp
rclb
cld
fsubs
pcmpgtb
bound
pop
mov
ja
cmpsl
mov
xor
mov
xor
add
cmpsl
jne
call
stos
leave
mov
jp
sub
xchg
mov
nop
popl
xlat
jg
popa
jl
fs
sahf
popa
fldcw
dec
pop
mov
cmp
sbb
mov
fsubrs
lods
ja
imul
dec
cmpsl
test
xchg
std
inc
xor
lret
jmp
cmp
cli
cmp
mov
mov
sbb
xlat
pop
lods
repz
leave
into
shrb
ja
or
inc
push
xlat
lcall
mull
pop
sbb
and
sub
adcb
cmp
arpl
out
pinsrw
add
icebp
jo
push
shlb
nop
gs
lock
inc
mov
cmp
add
jg
dec
pushf
push
es
mov
fcmovbe
mov
pop
dec
pop
pop
cmpsb
repz
add
sarb
add
cmp
std
rolb
fdivrs
add
inc
in
dec
or
fisubrl
add
mov
xchg
test
enter
in
fnsave
js
add
cltd
sub
popf
lea
add
gs
mov
fs
loope
inc
xor
pusha
adc
hlt
sub
lret
dec
mov
mov
dec
ds
lock
add
and
cmp
xor
jns
cmovnp
or
xchg
enter
addb
mov
fcomps
pop
mulb
sub
mov
in
fisubl
xchg
aas
add
sbb
imul
xor
icebp
sub
andb
loopne
mov
add
mov
add
xchg
mov
jnp
lret
dec
leave
ret
inc
dec
jg
xor
scas
push
add
lea
nop
add
mov
test
jp
cmp
leave
rcrb
add
testb
sbb
dec
test
push
pop
pop
hlt
bound
scas
mov
add
test
aas
sahf
lock
ss
insl
jg
xchg
je
xlat
jo
xchg
jbe,pn
xor
add
mov
outsb
sahf
add
push
and
enter
in
sahf
add
adc
lcall
mov
adc
nop
sub
fs
add
xchg
xchg
rcll
negb
inc
xchg
rolb
push
pop
call
mov
call
sbb
or
sub
repnz
aas
leave
adcl
add
jmp
mov
leave
gs
or
dec
lods
add
out
dec
sbb
orl
movsl
and
add
mov
incl
cltd
in
mov
gs
mov
sub
inc
arpl
pusha
in
cmp
dec
movsb
inc
insb
push
dec
inc
clc
std
adc
leave
out
add
outsl
in
dec
mov
add
and
dec
addb
cmp
mov
nop
fs
lahf
pop
inc
aas
add
imul
mov
push
test
xlat
repz
nop
inc
in
aaa
out
je
xor
lea
rorb
push
and
add
mov
mov
push
scas
daa
ret
push
mov
orl
leave
cli
ret
sbb
mov
mov
xor
pop
popa
lods
jbe
add
inc
dec
std
rcrb
inc
in
cmc
mov
ficoml
and
add
cmp
fs
rcrb
xor
addb
cltd
xchg
add
mov
nop
int3
inc
jp
cmp
cld
and
pop
mov
loope
pushf
les
fninit
add
sub
or
jle
and
push
cwtl
xchg
xchg
lock
loop
dec
push
mov
sub
cmpb
sbb
mov
push
xchg
fdivrs
or
imul
jno
push
popa
shll
inc
xchg
je
jb
jo
and
xchg
lret
aas
xchg
int3
inc
pop
aaa
push
into
xchg
jg
ljmp
fsubs
sub
repnz
xchg
pusha
jl
pop
sub
mov
cwtl
pop
add
mov
sub
dec
les
add
xor
scas
sbb
ficoms
andb
sub
cmc
pop
fxch
add
add
daa
bound
cmpsl
movsl
or
lea
or
jno
pushf
pusha
hlt
call
add
js
mov
push
mov
mov
les
add
aam
sub
test
ret
cmpb
jge
dec
inc
rolb
jne
pop
mov
add
or
nopl
popaw
in
aam
jo
fstpt
test
pop
mov
push
add
cmpsl
pushf
std
jo
pusha
dec
inc
addr16
cld
inc
lret
sub
ja
pop
add
js
xchg
hlt
movsl
test
hlt
addb
pusha
add
fwait
pop
mov
loop
jbe
packssdw
ja
rclb
or
jae
add
cmp
mov
fsubrs
push
nop
pop
and
mov
iret
jno
and
cmp
mov
pop
popa
rolb
sarb
cld
loop
dec
push
xor
add
cmc
mov
add
and
out
or
xchg
sbbb
mov
pop
movl
dec
add
or
lcall
inc
or
nop
mov
pop
or
xor
xor
addb
hlt
xchg
mov
push
mov
mov
jg
pop
dec
movsb
xchg
in
icebp
xlat
or
nop
fwait
cmp
add
shlb
or
insl
sub
xchg
push
js
add
les
push
or
and
or
std
xchg
mov
push
xorb
mov
jbe
mov
and
aam
outsb
fadd
sti
xor
cmp
stc
jbe
into
mov
addb
fwait
das
dec
enter
xor
mov
sahf
stos
sub
xchg
mov
xor
shll
and
mov
or
pop
push
add
nop
or
nop
mov
adc
scas
pop
add
inc
sbb
dec
out
shrb
cmp
arpl
and
push
add
or
movl
cmp
inc
jns
es
dec
or
add
repnz
out
push
rolb
inc
call
das
mov
and
lods
aam
scas
out
sbb
fwait
outsb
arpl
dec
push
clc
push
xchg
xor
xor
jge
add
mov
lock
add
pusha
bound
push
shl
xor
hlt
xchg
cmc
mov
adcb
inc
fisubl
xchg
jae
leave
add
add
sahf
sub
mov
xchg
pop
repnz
test
and
clc
mov
std
mov
aaa
notl
nop
xor
adc
call
and
iret
subb
and
and
mov
mov
cli
inc
add
pop
arpl
sbb
and
nop
sub
les
outsb
xchg
inc
popf
pop
jb
push
cld
xor
cmp
pusha
mov
imul
loope
xchg
push
cld
js
and
mov
jmp
mov
test
inc
je
rorb
xchg
push
or
imul
mov
orl
add
xor
adcb
les
inc
idiv
fs
enter
mov
fnstsw
dec
push
add
lahf
js
mov
in
lgs
and
cld
cmp
dec
sarb
outsb
cmp
add
imul
popa
mov
cmp
fdivs
push
cmp
sbb
xchg
add
call
add
scas
xlat
sub
push
cmpsb
add
and
xchg
sub
xchg
popa
jmp
cmpsl
adc
btr
rolb
push
mov
jle
inc
jp
cmp
add
pusha
inc
imul
mov
daa
jle
cwtl
hlt
pushf
and
hlt
popa
sbb
idivb
jl
shrb
xchg
add
nop
adc
or
mov
fwait
push
xchg
mov
sub
add
ss
dec
shll
mov
or
outsb
pop
or
lods
sub
add
testb
repnz
inc
sbb
add
and
inc
mov
add
jbe
mov
adc
fwait
enter
ljmp
adc
shrb
dec
adc
pop
pop
addr16
pusha
mov
push
or
fildl
fcom
cmp
fnstenv
cmp
sbb
cs
push
stos
mov
cmp
mov
cltd
dec
pop
jbe
test
xchg
fdivrs
in
test
out
outsb
xchg
cltd
lret
or
iret
xor
clc
mov
jo
mov
mov
sbb
scas
adc
dec
lcall
push
or
mov
jo
mov
add
fwait
add
xchg
mov
je
dec
repnz
test
enter
cmp
clc
shr
test
cmpsb
push
flds
int
call
xchg
push
stos
in
add
pusha
test
andb
adc
or
hlt
out
addb
clc
sub
xchg
jo
lea
cwtl
outsl
add
cld
lods
pop
pop
mov
scas
add
pop
add
rcll
pusha
aad
mov
in
leave
sub
and
add
dec
mov
and
rcl
andb
js
movsb
mov
xchg
icebp
add
out
test
jbe
sarb
dec
shrb
add
mov
pop
or
clc
push
test
lods
rclb
dec
cmp
gs
push
fistpl
adc
push
sbb
mov
dec
xor
adc
je
daa
cmp
sub
push
dec
scas
enter
adc
pop
inc
pop
nop
xor
mov
xor
lret
ret
andb
inc
xor
inc
lret
pop
jno
lret
dec
andl
dec
daa
mov
add
aam
cs
pop
push
arpl
add
adc
mov
inc
or
or
decl
and
movsb
lock
popa
out
push
inc
aam
out
mov
lods
add
add
or
loopne
enter
adc
and
pushf
inc
cmp
add
add
addb
sbb
shlb
testb
adc
test
sti
jno
add
outsl
pop
decl
pop
xor
test
int
or
mov
mov
sub
dec
push
outsl
adcl
sub
cmp
sub
xor
adcl
dec
cmp
sub
xor
lret
adc
aam
add
push
pop
add
add
cltd
jg
in
nop
add
adc
xor
divb
jmp
mov
sbb
std
sahf
xchg
fwait
dec
dec
cmpsb
mov
dec
and
faddl
xchg
mov
and
stc
add
pusha
xorl
in
mov
add
push
jne
add
or
ret
aam
push
cmp
popf
add
sub
and
lret
rcl
clc
jge
fnstenv
xchg
push
sbb
rolb
hlt
dec
jb
mov
shll
notl
call
inc
xor
push
jl
push
mov
add
arpl
mov
and
mov
jp
mov
mov
aad
mov
lds
mov
cs
push
mov
xor
dec
addr16
das
ds
add
in
add
div
dec
inc
mov
adc
enter
mov
je
or
fnstsw
pop
pop
add
xlat
mov
sbb
orl
jle
sub
data16
cmp
or
cwtl
fadd
mov
mov
test
add
int3
sbb
shrb
imul
and
jl
movsb
push
sub
inc
sub
ret
popa
lahf
rolb
mov
xchg
jg
rorl
jge
andb
mov
out
orb
add
fsubs
stc
adc
nop
xchg
mov
pop
rclb
lods
inc
mov
test
in
cmp
enter
stc
js
pop
test
out
clc
jbe
or
cwtl
sub
mov
pusha
xor
fs
int
cwtl
inc
or
int3
mov
leave
sarb
lret
add
add
push
clc
enter
lock
sub
dec
pop
dec
imul
rorb
decb
jg
in
add
nop
or
dec
aad
push
xchg
mov
jmp
cwtl
pcmpeqb
into
in
pop
fwait
xor
xchg
adc
nop
and
pop
sub
pushf
adc
mov
mov
sub
push
add
out
inc
sbb
imul
pop
addl
mov
fiaddl
rcr
mov
cmp
pop
dec
insb
xor
pop
std
cmp
cli
add
and
hlt
xchg
dec
mov
jbe
xchg
mov
insl
shlb
add
movsb
hlt
add
cmp
jno
mov
xchg
add
subb
mov
or
stc
sub
mov
xor
cs
hlt
push
jle
in
xchg
mov
push
scas
add
jne
cmp
sti
inc
add
test
fwait
int3
push
dec
mov
shl
push
in
call
test
push
sub
xchg
out
cmp
inc
mov
xchg
dec
xor
cmp
adc
fisttpl
int3
inc
push
into
add
loope
stos
cmpl
pop
loopne
or
call
test
inc
jne
cld
jp
jae
outsl
lret
xor
push
adc
loope
dec
sbbb
pop
push
in
pop
mov
pop
mov
push
sbb
and
xor
imul
das
xchg
jg
fisubrs
push
push
pusha
or
add
jb
adc
and
addr16
adc
lds
loop
and
repnz
pop
inc
loop
cli
enter
js
aaa
js
test
add
clc
or
lcall
cmp
sub
clc
and
and
pop
ds
cmp
adc
mov
or
add
mov
dec
int
js
mov
and
mov
popa
push
pusha
and
add
mov
idivb
add
mov
fs
jmp
hlt
add
in
test
sub
jl
repnz
imul
lods
adc
pop
cld
bound
dec
repnz
cli
push
addr16
sbb
pushf
dec
lret
lods
cmp
loop
add
lds
test
cmp
popa
sbbb
outsb
pop
addr16
and
xchg
addb
or
bswap
sub
dec
add
adc
jne
mov
call
rcrb
xchg
lods
in
bound
pushf
mov
test
stos
subb
push
jb,pt
add
inc
stc
js
cs
mov
pop
loop
add
pop
stc
sub
in
adc
je
pop
leave
xchg
add
aam
inc
sub
add
repnz
sbb
dec
sysenter
je
and
sub
push
sbb
xchg
in
imul
das
push
movsb
add
or
ljmp
and
push
fidivl
cltd
lret
call
add
xchg
or
sbb
sbb
subl
scas
decb
add
pushw
mov
es
repnz
aad
les
mov
jo
cmc
aad
sub
jle
jb
add
xchg
test
cli
add
pop
dec
mov
sub
push
push
test
scas
add
pop
dec
shrl
inc
sub
sub
testl
popf
mov
sub
pop
ds
dec
add
push
test
add
frstor
test
and
nop
jo
cs
pop
insl
xchg
push
push
in
push
fisubl
mov
nop
cmpsb
and
add
jge
movb
push
jns
dec
jae
add
and
add
mov
inc
fimull
or
fwait
rolb
pop
int3
into
xchg
movsl
outsb
adc
dec
sub
jmp
pop
imul
mov
or
pop
data16
nop
addb
rep
xchg
iret
add
pushl
cmp
xor
add
test
lock
adcl
push
dec
jle
orb
or
xchg
jmp
dec
mov
repz
add
scas
test
orb
rcrl
xchg
mov
add
mov
test
loopne
jo
mov
fsubs
pop
inc
and
lods
rcll
xor
lock
xor
aad
je
xchg
cmpsl
data16
sub
or
and
push
pop
je
add
andb
lods
mov
not
add
popa
push
and
push
fiadds
mov
insb
nop
adc
xchg
fincstp
lock
lret
jbe
xchg
sub
and
mov
js
add
jmp
mov
mov
pop
sub
aad
cmp
sub
fidivrs
add
push
mov
or
daa
stc
fmul
sub
add
push
dec
sub
in
add
in
mov
pop
lds
sub
out
hlt
es
rorb
and
test
testb
pop
add
shl
dec
jle
jo
sbb
add
lods
sbb
add
icebp
sahf
into
mov
sbb
jle
loopne
rorb
rorb
push
mov
and
inc
lods
mov
ret
push
add
les
jg
nop
int3
js
xchg
mov
pop
loopne
addb
pushl
push
nop
add
lahf
mulb
clc
sub
mov
fbld
push
or
mov
into
mov
push
cmp
sbb
sub
inc
jg
pop
cld
or
cltd
inc
inc
mov
lahf
nop
je
sbb
test
pushf
dec
xor
push
xor
and
ret
es
adc
loope
mov
cmp
push
inc
jne
inc
inc
xor
mov
fistl
gs
inc
sbb
pop
pop
push
or
adc
shl
testl
dec
fnstcw
add
push
ret
aas
pusha
mov
or
aam
cmp
inc
addb
shrb
cmp
cld
js
int3
cld
add
je
pop
dec
fwait
je
push
ljmp
mov
es
pop
pusha
stc
fists
popf
lock
push
movb
jle
cmpsl
sub
cwtl
mov
fwait
aas
sub
mov
xlat
add
jg
pushf
faddl
test
call
or
iret
xchg
fwait
loope
inc
xchg
adc
and
add
jnp
push
insl
mov
adc
jecxz
mov
pusha
loopne
xlat
jne
sti
cmpsb
add
inc
sarb
xchg
jg
jns
mov
add
fisttpl
sub
nop
rol
cwtl
imul
push
test
sbb
mov
das
or
and
adc
ja
and
pop
push
add
je
sbb
into
cmp
scas
xor
and
dec
cmp
pusha
int3
pusha
int
add
cmpsl
or
fsubrs
add
fdivr
cmc
incl
add
addb
std
rorb
loopne
sbb
mov
xor
jns
pusha
xor
mov
add
inc
mov
lahf
pop
jle
inc
dec
ja
push
fcoml
sub
cwtl
subb
pop
in
cmp
cmp
popl
or
fwait
cmp
call
sub
int3
stc
mov
imul
jb
cmp
sti
add
push
aam
scas
imulb
mov
aas
adc
mov
pop
insb
ljmp
sbb
bound
sbb
add
dec
mov
mov
cmp
loopne
fsubrs
sbb
mov
adc
enter
push
add
aas
inc
popf
scas
std
push
mov
fnstenv
cli
sbb
add
and
push
adc
test
mulb
jg
movsb
ret
fstpt
push
xchg
add
mov
adc
or
push
nop
loop
addb
scas
loopne
and
adc
jg
in
test
sbb
jmp
addr16
fdivs
xchg
add
mov
leave
add
cmpsl
mov
cmp
les
push
adc
add
loope
nop
sbb
js
push
les
test
call
into
push
jne
and
test
push
les
pop
mov
mov
test
pop
in
stos
test
or
in
repz
hlt
into
pop
jle
push
xchg
cmp
sub
shll
inc
jb
stos
pop
jp
sub
imul
add
dec
enter
xchg
sub
xchg
dec
subb
repz
mov
scas
push
mov
add
cmp
into
aas
rclb
jmp
mov
cmp
jno
add
out
test
insb
orl
add
in
cmpsl
nop
adc
mov
pop
pop
aas
push
lret
mov
inc
ficomps
xchg
mov
cmp
push
push
outsb
ret
jae,pn
and
loope
in
notl
push
outsb
or
ret
jae
cmpl
mov
or
rclb
cli
in
jbe
cbtw
add
add
loopne
icebp
leave
lods
adc
aas
testb
lret
mov
sub
mov
lcall
stc
xor
fiadds
jno
js
sbb
movsb
in
xor
fistpl
pop
or
xchg
mov
daa
pusha
or
lahf
mov
add
sub
fisubrl
aaa
push
push
subl
jno
sub
push
adc
fistl
dec
data16
pop
loopne
stos
insl
faddp
xchg
fsubl
inc
in
pusha
test
mov
fdivs
mov
or
test
pop
int3
add
mov
in
add
jl
js
pop
leave
or
add
pushf
push
mov
push
cmovp
imul
cmp
lods
rolb
icebp
loope
or
dec
addl
xor
pushf
repnz
pusha
dec
push
sub
push
xor
sbb
test
inc
and
dec
shrb
sbb
jno
rorb
mov
mov
dec
xor
mov
add
add
add
call
repz
sbb
add
fcmovnu
movsb
rcl
stos
and
adc
in
es
adc
rorb
mov
dec
push
push
and
roll
and
add
push
sbb
sbb
mov
pop
push
pop
insl
leave
loop
pop
sub
mov
and
adc
mov
and
gs
jle
dec
ret
inc
lods
lret
jcxz,pn
lret
sub
and
and
pop
or
in
clc
dec
add
enter
or
shl
jae
inc
add
fst
lcall
in
add
jle
mov
pop
push
sarb
sub
add
mov
test
js
cmpsl
out
mov
ror
test
shrd
add
inc
test
cmp
test
cmp
xchg
pop
dec
pop
insl
in
out
push
push
jmp
popa
inc
andl
mov
xlat
push
add
adc
cmp
sbb
add
mov
mov
cmp
add
push
movsl
adcl
xor
or
jbe
icebp
sub
mov
mov
dec
pop
pusha
xchg
fldenv
sahf
push
mov
inc
or
mov
mov
add
xor
in
movsb
pusha
add
fsts
xchg
sub
je
push
sbb
mov
cs
hlt
pop
add
pushl
movsb
repz
push
sbb
cmp
add
outsb
ret
adc
and
sbb
mov
pop
add
rcrb
lret
or
es
test
jae
or
clc
push
popa
call
and
xor
dec
aas
mov
add
add
std
dec
leave
jns
int
inc
scas
xor
xor
addr16
add
mov
mov
dec
push
fwait
or
cs
in
in
pop
or
inc
testl
imul
jbe
or
out
cwtl
pop
loopne
call
mulb
loop
into
mov
je
aaa
inc
rolb
pop
lock
jnp
push
add
sti
and
and
leave
imul
cmp
out
sbb
add
pop
imul
out
add
cltd
xchg
pop
cmp
push
ficomps
icebp
xlat
push
sub
or
hlt
pop
dec
mov
notl
pop
jl
insb
xchg
and
pusha
adc
push
test
pop
pop
jle
in
sbb
je
add
aaa
idivb
repnz
loope
mov
or
xchg
add
lret
fcomps
int
mov
and
lds
mov
mov
mov
mov
adc
cmp
adc
or
les
xchg
xchg
repz
pusha
arpl
pop
add
or
add
inc
sbb
lods
sbb
call
jbe
test
push
jnp
xchg
paddusw
mov
add
xor
cwtl
adc
and
pop
in
ja
es
mov
adc
or
dec
repz
mov
out
in
or
cmp
add
fs
inc
cmp
cmp
clc
mov
push
sub
loopne
mov
dec
repz
adc
and
addl
sub
jg
imul
add
cmp
push
arpl
pop
fildll
or
jg
inc
sub
jle
cmp
and
fdivs
aaa
nop
cld
scas
or
aas
jbe
hlt
xchg
and
mov
cmp
push
outsb
aam
adc
cli
adc
mov
and
dec
dec
out
add
sub
xchg
pop
repz
pusha
pop
sub
push
fnstenv
mov
xchg
jnp
or
fildl
mov
adc
and
or
fdivs
add
cmp
or
clc
add
xor
test
xor
shrb
dec
and
add
fldt
dec
fs
xorb
outsb
in
dec
jp
inc
divb
addl
xor
add
add
push
movsl
lret
mov
scas
aam
sub
adc
dec
or
dec
xchg
jnp
into
aaa
mov
outsb
sbb
adc
jp
mov
and
je
xor
sub
add
repz
add
inc
push
add
decb
dec
dec
lods
xchg
andb
les
push
sbb
xor
arpl
gs
je
or
or
nop
cli
cwtl
shlb
loop
testl
mov
jno
dec
sbb
or
add
mov
add
int3
orl
add
jns
mov
add
cmp
test
movsl
test
or
push
push
insl
jae
pop
add
int3
sahf
add
jg
jae
lret
jno
faddl
dec
jge
ds
mov
jae
push
inc
icebp
adc
sarb
insl
arpl
dec
js
push
pop
out
aad
insb
inc
push
inc
add
pushf
inc
daa
decl
mov
loopne
push
iret
push
mov
pop
cmpsl
ja
mov
cmp
or
repnz
dec
add
xor
jae
wbinvd
push
outsb
loop
push
test
mov
sub
aad
in
cmp
ljmp
push
fmul
jo
add
scas
les
rorl
sbb
adcb
enter
mov
mov
scas
nop
enter
add
mov
scas
aaa
lcall
adc
add
mov
idivl
lcall
inc
testl
aam
adc
fwait
cltd
dec
add
jecxz
popa
inc
es
mov
jne
sub
and
lock
dec
xchg
push
or
xor
sbb
mulb
jo
daa
mov
jns
add
mov
loopne
dec
je
stos
insb
fidivrl
inc
lret
jecxz
or
orb
pushf
jecxz
mov
sar
nop
dec
pop
cmc
inc
flds
push
subb
push
leave
scas
lret
rcll
adc
mov
mov
push
mov
cmp
loop
sbb
add
aad
lds
and
repz
inc
and
sub
mov
cltd
mov
add
cmc
mov
pop
xchg
mov
mov
repnz
or
adc
jmp
fisttpl
push
movsl
insb
mov
xchg
out
add
aaa
xchg
inc
mov
sbbb
lods
test
push
daa
mov
add
pop
lret
push
jmp
adc
repnz
add
jae
jmp
mov
adc
xor
mov
add
cmp
inc
icebp
imul
xor
call
pop
xchg
lret
fwait
je
pshufw
pop
pop
mov
inc
out
add
inc
fcomps
shrb
mov
mov
call
adc
and
mov
mov
add
pop
mov
cld
mov
and
dec
pop
pushf
fidivl
fmuls
scas
add
or
pop
movsb
fldenv
push
sahf
stos
pop
xor
adc
add
out
jge
stos
add
int
mov
add
and
mov
push
enter
mov
inc
or
xchg
xchg
in
filds
add
add
jnp
in
pusha
push
cmp
cmc
pop
add
or
pop
sbb
clc
mov
push
jb
popf
and
stos
sti
pop
adc
pop
cld
add
push
dec
lods
aas
es
sbbb
mov
push
cmp
incl
jo
mov
add
inc
cmpsb
fcomps
in
add
clc
push
mov
shrb
jbe
pop
cmp
pop
or
pop
mov
sbbl
ja
fadds
pop
pop
push
sbb
sbb
fcoml
push
mov
push
out
sbb
pop
inc
imul
pop
mov
pop
hlt
push
add
jae
adc
jecxz
divb
add
xchg
in
inc
dec
unpckhps
js
subb
push
jae
int
pop
rcll
js
fs
add
jmp
cmp
lcall
cmp
sub
push
pop
pop
sbb
cmp
add
aad
pop
inc
out
adc
sbb
or
add
xchg
cmc
or
add
stc
inc
mov
aad
jecxz
push
clc
mov
cld
out
movsb
pop
ss
outsl
rol
dec
sub
mov
cmc
inc
mov
mov
dec
inc
in
addl
lods
into
push
andb
or
push
int
movntq
mov
inc
or
stos
lret
xchg
or
out
loope
pusha
xor
mov
jne
inc
mov
lds
jno
call
aam
hlt
adc
add
fsts
pop
mov
mov
repnz
daa
push
scas
xchg
stc
ds
xchg
add
fdiv
sar
mov
cltd
stos
lret
push
ss
push
add
cmp
add
outsb
movsl
adc
sub
lcall
out
add
pop
lds
pusha
enter
mov
add
sbb
sub
or
mov
cmp
sahf
xor
push
add
mov
clc
xchg
sub
repz
shrb
cmpsl
movsb
pusha
loope
mov
sarb
sbb
inc
dec
push
add
cmc
cmp
sbb
cwtl
int
loop
mov
int
or
loopne
mov
push
orb
mov
dec
cmp
out
add
bound
lea
popf
mov
cltd
mov
add
rolb
add
fwait
daa
incb
addr16
fs
sar
add
jb
pop
pop
dec
sbb
cmp
push
xor
roll
jp
add
sub
clc
mov
mov
shr
fwait
imul
addl
lret
adc
mov
jno
push
test
cwtl
stos
popa
adc
decb
push
jge
into
cld
repnz
lock
faddp
or
push
nop
mov
mov
cltd
les
pushf
inc
popa
repz
jae
add
push
pop
sbbb
add
stos
stc
int
mov
aas
and
mov
icebp
cmpb
ja
mov
and
or
mov
mov
loop
xor
mov
xchg
hlt
out
fwait
enter
jmp
sub
xchg
lock
les
add
xchg
add
xor
out
mov
add
jne
mov
je
cltd
stos
clc
scas
nop
cmp
cld
test
repnz
or
stc
pop
arpl
sbb
inc
loopne
mov
ja
adc
mov
add
sub
cmp
jo
xorb
cmc
dec
sete
ds
mov
mov
jns
jb
inc
lock
mov
or
add
or
add
pop
sub
in
rclb
dec
sbb
cmp
jg
cmovl
add
test
test
enter
xchg
pusha
mov
stos
push
and
xor
dec
decl
int
add
ja
js
lods
pop
mov
andl
mov
arpl
sub
cmp
dec
test
std
mov
add
add
inc
dec
add
dec
