mov
xor
lock
pop
rolb
mov
repz
mov
mov
fwait
jns
leave
dec
inc
dec
mov
pop
loopne,pt
jns
outsl
xchg
adcl
jle
mov
push
mov
fmull
push
jge
mov
mov
cmp
cmp
push
orb
icebp
jae
pop
xchg
in
pop
sbb
pop
insl
push
jl
pop
hlt
loope
nop
jmp
sub
mov
iret
popa
adc
pop
das
loopne
popa
mov
test
jne
sub
mov
ss
jmp
jnp
roll
mov
aad
sbb
insb
xchg
lods
cmp
shlb
sub
cmp
inc
sub
les
push
cmp
test
outsb
mov
and
and
adc
test
xchg
arpl
rclb
cmpsb
imul
dec
les
loopne
cmp
dec
pop
cli
mov
in
jp
lock
xor
incl
mov
call
or
cmpsb
ljmp
test
cmp
pop
rorb
mov
adcb
xchg
call
mov
xor
add
insl
stos
cmpsl
xorl
lds
fs
cwtl
lea
xchg
pop
cmpb
xchg
popa
rcl
arpl
in
xchg
subl
jb
inc
jg
mov
xchg
mov
into
fsin
cmp
xor
outsl
push
getsec
or
mov
loop
ret
mov
adc
xchg
adcl
cli
xchg
subl
cwtl
imul
lret
int3
mov
arpl
add
mov
push
ljmp
sub
jge
out
ljmp
jbe
dec
sub
lea
lret
cmc
test
and
xchg
jl
mov
inc
xchg
add
jmp
call
pop
ror
pop
jl
notb
hlt
mov
nop
push
les
in
daa
mov
aad
imul
xorb
sub
ficompl
test
stos
daa
jno
shrb
or
out
cld
xor
xor
jnp
pop
stos
jecxz
jns
push
insl
stc
jle
mov
inc
pop
jmp
sbb
sbb
dec
pusha
mov
and
in
pop
lcall
lock
mov
jmp
leave
add
shrl
cmp
xor
sub
lock
insb
pop
add
lahf
dec
dec
cld
dec
dec
sub
outsb
inc
das
sti
pushf
std
xchg
mulb
scas
dec
loop
sub
jnp
enter
aaa
loopne
dec
or
movsl
movsl
push
imul
inc
mov
ja
test
jmp
adc
add
add
ja
fwait
ret
mov
ja
inc
je
imul
je
daa
jnp
mov
cmp
xchg
int
stos
mov
adcl
and
and
mov
insl
adc
aas
arpl
jne
mov
sbb
jns
sbb
add
loopne
cmp
adcl
mov
push
sbb
nop
mov
and
andl
mov
mov
push
scas
inc
fdivl
cmp
popf
shrb
inc
sti
loopne
repnz
imul
js
hlt
insw
xor
xchg
xor
lea
inc
in
pushf
mov
mov
xor
movsb
daa
fmuls
adc
movsl
jecxz
inc
lahf
loop
and
mov
mov
push
push
ret
mov
jecxz
jbe
jmp
jbe
inc
pslld
dec
int
mov
leave
or
sti
outsl
xchg
es
fbstp
lret
sub
fildl
cmpsb
insb
adc
ret
xor
mov
nop
jmp
mov
add
mov
pop
xor
xor
cwtl
xchg
adc
arpl
addr16
push
outsl
das
lods
pop
fsubrl
inc
mov
pop
mov
cld
outsl
sub
outsl
imul
mov
inc
in
mov
sbb
pop
fs
and
mov
lea
dec
xchg
mov
dec
push
dec
fcoms
das
cmc
jg
dec
mov
adc
xchg
lods
aas
imul
aaa
test
loope
mov
mov
mov
add
push
fmuls
das
scas
push
inc
mov
pusha
cltd
sbb
test
ret
das
out
mov
or
push
xor
xor
in
jns
sahf
je
dec
sub
mov
aas
pop
xchg
outsb
addr16
fisubl
push
pxor
xor
jp
and
les
jb
sti
cmp
ret
xchg
mov
mov
adc
popa
push
iret
or
ja
outsb
fldt
xchg
rcr
cs
stos
lds
sbb
or
mov
test
and
call
add
sbb
lret
cmp
mov
int
loopne
call
dec
call
xorl
int
stos
and
lods
int
std
xchg
pop
fwait
push
and
inc
mov
insl
xchg
ss
nop
inc
andl
mov
clc
xchg
mov
sub
dec
hlt
mov
aad
sti
add
dec
mov
xchg
daa
mov
loopne
insb
xorb
sbb
in
insb
mov
loopne
hlt
or
cmp
or
jno
fcoms
jnp
pop
add
and
xchg
xchg
in
and
xor
mov
mov
jge
xchg
fcom
fldenv
cmp
push
in
lods
and
push
test
xchg
sbb
sub
jno
sbb
xor
js
adc
mov
push
hlt
lods
pop
mov
sbb
pop
lock
jle
add
nop
mov
cwtl
test
xor
mov
inc
lock
push
jb
mov
jge
fmulp
mov
jne
inc
pop
fcomps
fdiv
andb
dec
inc
loop
jnp
rorb
xor
and
movsl
ss
pushl
pusha
add
fucomp
mov
push
adc
ja
sbb
sahf
cld
adc
xor
adc
test
push
cmpsb
sbb
mov
inc
pop
mov
xor
xchg
inc
rcr
stos
loop
mov
js
subb
adc
mov
mov
sub
rcr
mov
das
pop
loopne,pn
lret
popw
or
subl
repnz
dec
fnstenv
shlb
in
or
jo
divl
lods
xor
xchg
test
xchg
ds
popa
rolb
sbb
stc
call
out
xor
aam
iret
popf
cmp
sub
mov
sub
cmp
xorl
stos
jl
repnz
cmp
call
out
sahf
xchg
jne
or
gs
jecxz
xlat
mov
push
fs
sub
scas
push
in
std
push
pop
cmp
inc
enter
lods
inc
jo
arpl
test
mov
add
mov
ret
test
mov
repnz
push
lahf
xchg
cmpsb
cmp
ds
mov
imul
repnz
jnp
rcl
push
jge
sub
mov
sub
xchg
leave
xchg
mov
mov
shlb
mov
inc
mov
aaa
pop
stc
leave
mov
push
int
repnz
jge
rorl
jbe
jns
ret
pop
imul
dec
addb
loopne
adc
pop
sbb
fcompl
movsl
jns
push
test
fwait
pop
in
imul
mov
outsl
push
lret
fisubl
mov
mov
inc
sarl
ljmp
aas
xchg
call
mov
sub
test
out
inc
dec
push
pop
insl
add
mov
push
cmp
lahf
sub
fisttpll
mov
scas
divb
pop
imul
mov
mov
jg
pop
pop
push
clc
dec
jb
mov
add
inc
sub
and
scas
inc
mov
sbb
and
ficompl
lret
js
pop
popa
dec
stos
and
stos
push
sti
lods
inc
sbb
out
sahf
push
fnsave
xchg
rclb
out
inc
repz
lods
shll
jmp
sbb
pop
cmp
pusha
push
cmc
aaa
sbb
mov
das
xchg
in
xor
add
sub
xor
xlat
add
stos
and
gs
lods
and
push
mull
jp
xor
jae
mov
nop
les
dec
movsl
clc
nop
pushf
testb
loop
push
mov
xchg
imul
fsubs
jb
pusha
push
cli
xchg
push
fcomps
push
mov
fstpt
inc
pop
lods
repz
and
mov
sub
inc
sti
pop
push
out
scas
lock
les
add
sub
pop
sbbb
and
xor
push
xchg
mov
loope
pop
lcall
clc
shll
sahf
push
enter
ds
sbb
mov
in
cmpsl
lea
cmpsl
scas
outsl
pop
lcall
fnclex
arpl
sub
mov
push
in
pop
jo
movsb
dec
cld
aas
sub
push
sahf
add
or
xor
sub
lret
add
fwait
pop
xchg
test
shll
repnz
pop
lds
mov
xchg
les
test
movsb
cmp
adc
jae
add
mov
mov
push
imul
stos
fildl
out
or
xchg
lds
xor
test
imul
xchg
dec
int3
jae
jecxz
add
xchg
out
pop
xor
sbb
in
in
jo
push
pop
jb
lods
shlb
lahf
pop
mov
sub
xor
adc
clc
stos
pushf
lret
fistps
xchg
cli
xor
mov
out
fldt
jno
add
div
int3
mov
adc
test
jg
bound
push
outsb
jle
or
ja
push
xlat
jb
dec
ficoml
cmp
jb
dec
pop
int
cli
add
faddl
jae
imul
fidivl
fnstenv
repnz
aas
pop
neg
fisubrl
ss
ljmp
jbe
or
xor
ljmp
mov
hlt
mov
mov
push
dec
dec
and
dec
xor
mov
pop
inc
dec
mov
mov
jl
outsl
gs
pop
dec
cmp
mov
int3
cmpsl
movsl
add
insl
je
faddl
insb
cmpsl
dec
js
movsl
xor
cmpsl
dec
jne
daa
lret
fstpl
push
inc
cmp
cmp
cmpsb
insb
in
adc
pop
mov
js
out
mov
mov
pop
ja
xlat
bound
xlat
fmull
inc
pushf
jnp
fbstp
outsb
pop
ffreep
mov
cld
out
inc
pop
pop
hlt
lds
ja
jecxz
dec
pop
dec
pop
adc
aas
sub
stos
cli
gs
test
flds
jmp
cmp
xor
shlb
inc
std
lods
mov
xchg
sarb
fwait
and
jg
cmc
fistpl
stos
aas
or
test
pop
fucom
divl
lret
pop
and
jns
and
xchg
xor
movsb
inc
push
gs
lea
xchg
outsl
ret
xchg
sub
jmp
xchg
in
mov
test
fwait
lods
ljmp
cwtl
cmp
or
and
mov
xchg
xor
test
or
test
adc
mov
hlt
jle
mov
ret
xchg
mov
jmp
inc
jb
insl
xchg
stos
or
clc
xor
jb
sbbl
mov
icebp
push
jecxz
ljmp
daa
fstp
jecxz
jns
ja
aaa
dec
push
lods
fdiv
je
inc
dec
gs
sub
add
pop
mov
loope
inc
xchg
cli
psubusb
xchg
popa
mov
xor
gs
insb
loop
mov
push
sbb
push
push
nop
inc
cmp
sahf
vpsraw
test
data16
andb
fisubs
dec
mov
fcmovu
mov
xor
cmc
addr16
hlt
mov
addb
dec
popf
push
jns
clc
cmp
aam
fistpll
sub
pop
or
adc
fsubs
cli
jnp
sbb
iret
lods
inc
aad
shll
xchg
dec
mov
js
es
add
dec
xchg
push
in
sub
call
mov
mov
or
fwait
adc
dec
into
cmpsl
add
cli
test
je
ficomps
jb
jecxz
outsl
push
js
push
in
sub
mov
xchg
dec
jae
imul
jno
and
pop
ret
fucom
pop
bound
movsb
mov
bound
test
push
and
xchg
xchg
sub
aad
fbld
mov
xor
and
mov
data16
lcall
lds
fcmovb
js
ljmp
leave
lock
push
mov
mov
and
cmp
pop
ja
push
mov
test
push
pop
dec
cmpsb
mov
sbb
test
or
in
xchg
test
or
jo
leave
sbb
xchg
dec
mov
loopne
pop
dec
fcmovnu
std
out
lret
xchg
adc
sbbb
data16
xor
popa
or
and
cmp
fidivl
sahf
mov
jae
sahf
popf
xchg
popa
out
push
loop
in
push
jbe
icebp
jle
fdivl
push
ss
pop
int
in
mov
mov
addr16
jg
fwait
hlt
mov
xorb
sar
sbbl
inc
jecxz
data16
jecxz
jmp
lret
ret
shrl
pop
repnz
out
movsl
scas
and
cmp
inc
adcl
hlt
bound
mov
loope
cld
jbe
outsb
and
jg
bound
fdivrp
shrl
push
cmpsl
enter
imul
push
subl
xor
push
push
push
and
loopne
jns
adc
dec
imul
lret
mov
cld
adc
ja
mov
mov
in
jnp
mov
xchg
das
popa
cltd
xchg
call
mov
sub
mov
mov
shrb
sub
lret
fwait
jmp
insl
inc
mov
jbe
and
cmc
das
jecxz
ret
sub
neg
jl
call
mov
cmp
iret
dec
dec
push
movsb
mov
adc
leave
cmp
ds
push
and
sub
xor
jo
repnz
cmc
lods
loopne
pop
adc
fimull
jge
xorl
or
in
jge
jge
inc
adc
call
insb
cltd
xor
add
sbb
push
mov
xchg
mov
add
sub
xchg
andl
mov
in
jmp
xchg
stos
movsb
imull
lret
or
mov
divl
mov
cwtl
aas
mov
xchg
mov
das
jns
mov
in
popa
ljmp
jl
or
movsl
rcll
loopne
jecxz
adc
ljmp
or
aad
repz
sbb
mov
cmp
and
mov
fmul
and
mov
ja
ret
fisttpl
or
adc
mov
push
test
js
lock
push
stc
ljmp
test
adc
sahf
xchg
sbb
mov
pop
cmp
pop
dec
dec
pop
pop
out
mov
test
dec
xchg
rorb
dec
call
mov
imul
stos
cmp
pop
das
rolb
sub
sbb
lods
sahf
sbb
jo
cwtl
pop
xor
pop
lret
outsb
mov
inc
add
adc
push
jae
mov
popa
iret
test
mov
dec
adc
out
fistpl
out
xchg
icebp
lret
push
mov
jg
mov
sbb
xor
add
sti
sbb
and
inc
imul
adc
iret
push
dec
mov
adc
jp
insb
push
inc
lret
jg
xor
sub
shlb
jb
adc
pop
insb
ret
or
rcrl
pop
or
and
inc
mov
and
and
loope
loop
gs
inc
pop
ljmp
imul
xchg
mov
into
pop
ret
mov
cmp
js
scas
cmpsb
dec
andl
ret
xor
pop
int
xchg
push
sbb
or
aas
packssdw
es
mov
adc
sbb
cmp
mov
mov
pop
lods
in
into
push
lcall
or
add
shlb
popa
push
ret
inc
mov
ds
imul
xchg
jl
flds
mov
push
shll
fisubrl
subl
ja
jno
pop
les
pop
in
pop
jmp
ficoms
ja
mov
lcall
push
in
imul
push
inc
arpl
int
stos
cmpsl
adc
xchg
test
mov
jb
in
testb
dec
call
sbb
scas
mov
xlat
ret
dec
in
mov
das
jg
lret
in
push
sti
cmp
sbb
ret
sahf
push
and
roll
fbstp
es
fucomi
inc
fcmovne
loope
fldcw
cld
pop
mov
repnz
mov
iret
int
cmpsl
sub
out
jb
call
ja
dec
stos
push
mov
jl
dec
and
pop
push
js
cmp
add
outsb
jg
test
arpl
imulb
mov
mov
test
push
cmpsb
in
jbe
pop
test
mov
fs
cltd
xchg
fchs
inc
mov
int3
popa
inc
adcl
mov
mov
inc
fwait
fs
mov
cwtl
mov
inc
jns
std
dec
je
lcall
in
call
dec
out
sub
push
lret
xchg
pop
loope
sbbl
mov
repz
sbb
decl
pop
out
outsl
push
cwtl
arpl
movsl
or
aad
and
insl
or
insb
das
lea
inc
stc
loope
cmpl
jp
jno
jmp
shlb
js
fs
std
test
sub
mov
int3
lahf
gs
imul
mov
cwtl
or
outsl
jle
pop
or
push
cltd
gs
insl
ja
inc
in
mov
or
dec
int
lods
fisubl
fdivrs
enter
xchg
out
sbb
push
fstps
aas
into
int3
les
cmp
xor
xchg
repz
xlat
imul
lret
addl
cli
adc
xchg
lds
dec
rcll
rorb
push
adc
push
add
das
xor
sub
and
jge
add
in
add
sbb
push
push
dec
lea
outsl
fldenv
sub
xchg
fistpll
pop
jnp
xchg
or
je
cmpl
outsb
je
je
ret
jno
in
xlat
pusha
or
push
jbe
xchg
fwait
cmp
push
in
mov
jge,pn
out
pop
add
push
mov
hlt
cmp
inc
mov
mov
jae
xchg
mov
in
les
dec
stos
mov
lahf
in
mov
cwtl
ja
gs
jle
gs
jne
push
negb
adc
mov
fbstp
xchg
lods
push
fdiv
movsb
lds
clc
scas
jb
jae
sub
jge
fldl
mov
dec
or
pop
js
jnp
icebp
dec
cmpsl
jbe
sub
dec
jnp
mov
jp,pt
cmp
add
and
ret
std
stos
xchg
mov
lea
xchg
call
jp
xchg
mul
aas
mov
fsubs
jge
pop
xor
xchg
into
jmp
sbb
inc
shrl
std
das
bound
pop
pushf
or
or
hlt
jge
and
test
pop
xchg
mov
jb
add
lds
pop
pop
xchg
enter
xchg
rcrb
inc
sub
inc
je
cmp
cwtl
outsb
popa
fildl
sbb
push
xchg
xor
jmp
ja
xor
xchg
jne
mov
or
js
jle
call
push
lcall
gs
mov
push
lahf
push
pop
mov
das
push
mov
and
fmuls
int3
aaa
jle
pop
cmp
ljmp
cmpl
push
pop
xchg
data16
in
stos
faddl
xchg
push
pop
adcl
and
in
leave
subl
fstps
mov
pop
mov
ja
push
sar
adc
mov
fs
xchg
cs
cmpsb
sbb
xor
mov
out
sub
add
fistpl
pusha
stos
std
into
popl
pop
fs
shrb
leave
je
inc
js
daa
xchg
mov
jl
sbb
pushf
dec
push
orb
inc
mov
pop
lret
gs
or
outsl
mov
dec
roll
out
mov
xchg
push
add
stos
outsl
xchg
out
xchg
data16
pop
iret
or
imul
or
movsl
pop
push
pop
es
sbb
mov
jno
push
pmaxsw
icebp
sahf
push
loopne
mov
push
inc
in
xchg
add
push
imul
in
push
loopne
fsubrs
bound
mov
rcrb
aad
popf
gs
je
addb
sub
or
ss
cmp
cwtl
and
out
js
xchg
sbb
or
cmp
pop
sub
add
sub
push
inc
pop
and
outsl
cmp
jl
push
adc
cld
fucomi
bound
ret
cmp
lock
in
outsb
arpl
push
and
test
pop
es
add
jecxz
test
ficoml
lock
jno
mull
push
mov
sub
xchg
into
jle
sbb
lock
pop
dec
mov
xchg
xchg
pusha
sub
mov
jnp
add
jnp
sub
adc
fidivrl
jbe
inc
fiaddl
popa
fmull
int
dec
dec
add
ss
sub
scas
mov
push
sti
fstl
fs
fldl2e
ss
call
xor
mov
xchg
fsubrl
or
jmp
dec
sbb
jb
inc
cmp
and
adc
jbe
push
fnstenv
jecxz
lds
fs
mov
pop
mov
sub
mov
jnp
imul
ret
push
popa
cmp
xchg
in
push
xor
push
js
daa
xor
xor
fcmove
xlat
mov
or
add
push
add
inc
and
rclb
xlat
outsl
xchg
xchg
lock
ret
idivl
pop
outsb
lds
sbb
push
sub
or
ss
pop
adc
sbb
sub
jnp
popa
dec
leave
scas
sbb
and
test
bound
cmp
push
pop
or
cmp
stc
push
pushf
jne
cmc
add
test
push
jg
push
jp
push
movsl
jecxz
fidivrl
cli
inc
sub
nop
jbe
push
pop
jp
cmp
add
xchg
insl
mov
and
into
add
sub
icebp
or
and
or
test
in
dec
dec
push
jbe
adc
je
ss
test
in
mov
cwtl
aad
xchg
loopne
and
into
add
sub
out
js
xor
push
mov
and
dec
iret
scas
mov
mov
mov
cs
or
mov
pushf
adc
xor
loope
cli
inc
andb
add
and
adc
test
dec
and
dec
cld
pushf
add
in
idiv
sti
pop
add
cs
mov
scas
add
clc
int3
adc
jb
inc
lcall
add
jp
mov
sub
data16
dec
shl
xchg
outsb
pushl
out
cmp
add
mull
enter
mov
xor
sub
adc
dec
fdivl
in
out
add
popl
push
and
sbb
lahf
or
pop
mov
jbe
aaa
mov
in
gs
ret
sbb
pop
cmpsl
mov
or
xchg
pop
mov
imul
push
mov
sub
push
mov
mov
mov
add
add
cmpsb
sbb
sbb
lea
ljmp
inc
les
jecxz
mov
pusha
lret
leave
mov
rolb
or
mov
cmp
pop
cs
iret
lret
iret
imul
daa
mov
xchg
in
mov
pop
mov
int
push
dec
add
adc
adc
mov
ds
cld
jns
cmc
imul
addr16
add
in
pop
xchg
and
jge
into
ss
and
dec
pop
mov
pop
add
aam
div
test
out
push
inc
and
popf
mov
sub
cmp
mov
test
xchg
lret
inc
dec
testb
xchg
inc
in
pop
cld
pop
and
push
stos
jp
cmp
js
inc
adc
mov
filds
jp
push
movsl
fcmovne
fistpl
push
pop
and
inc
pop
mov
or
pop
das
imul
sub
pop
cmpsb
xor
xchg
cli
pop
and
push
jae
sti
enter
inc
out
or
mov
pop
lea
insb
hlt
push
cltd
mov
sbb
pop
call
mov
jge
xchg
fcompl
aaa
add
insl
cltd
aam
in
int
jnp
outsl
test
stos
xchg
inc
in
test
mov
cmp
or
cmp
rep
jle
dec
sahf
in
xchg
push
mov
sbb
mov
adcl
mov
mov
fsubrl
dec
out
and
push
sbb
bound
mov
adc
mov
xchg
dec
pop
jno
outsb
sub
imul
inc
add
xchg
xchg
stos
arpl
pop
or
stos
pop
mov
mov
sbb
jb
iret
popf
lret
cmp
xor
sub
add
popa
inc
sbb
xor
je
cli
cmp
or
out
push
testb
lcall
mov
iret
or
addr16
jnp
cmpsb
iret
cvtps2pd
inc
das
or
into
js
insl
in
test
add
fisubrl
call
aaa
shll
mov
fildl
int
rol
leave
call
cmp
cmp
adc
mov
or
cmp
or
inc
adc
xchg
jle
mov
jo
jnp
leave
jo
divl
sahf
xor
fistps
or
mov
ret
ja
sbb
andb
out
addl
and
aas
inc
enter
mov
inc
es
imul
cmpsb
cmp
sarb
lret
ss
out
inc
mov
xor
sub
sub
fisubrs
out
sub
fidivs
movsl
scas
or
lahf
add
outsl
sbb
bound
xor
jns
or
in
mov
or
faddp
sub
lods
and
loopne
loopne
add
arpl
mov
gs
add
fisubl
mov
mov
jle
fidivs
and
sti
mov
xor
fucom
into
mov
imul
jno
xchg
rorb
ret
sub
dec
inc
cwtl
adc
andb
cwtl
cltd
int3
imul
lret
fisubl
push
mov
inc
mov
call
aam
mov
adc
lods
rcrb
jns
lock
adc
outsb
pop
shrb
pop
daa
sbb
cmc
insl
push
jns
rorl
sbb
fcoml
inc
mov
and
fcoml
jno
dec
push
add
lods
dec
scas
out
jge
aad
lea
out
push
ljmp
mov
pop
xchg
lods
je
inc
mov
jns
jns
mov
ret
lret
pop
mov
jno
pop
sub
ljmp
out
and
add
popf
mov
ficomps
inc
adc
scas
sub
cli
xchg
out
fstpt
in
mov
in
call
mov
xor
ds
sbb
jb
movsb
hlt
cmpsl
popf
pop
xor
subb
adc
or
mov
mov
mov
lret
jg
sbb
inc
sub
mov
xchg
add
push
cmc
scas
add
add
xchg
pushf
jno
mov
cmp
rorb
mov
sbb
dec
and
mov
in
xor
inc
cmpsb
xor
popa
add
mov
dec
or
push
iret
adc
add
arpl
sub
mov
loope
pop
icebp
shrl
dec
sub
and
idivb
jg
sbb
jg
out
inc
jns
mov
push
dec
popa
add
xor
leave
xchg
shrl
aas
add
jnp
aam
push
aaa
pop
icebp
adc
ss
or
ljmp
in
xchg
test
nop
std
push
insb
ljmp
mov
mov
adc
lret
mov
jb
sub
xor
mov
outsb
aas
ss
popa
cmp
cmp
data16
mov
ficompl
test
scas
adcl
ficoml
and
jg
mov
or
fistps
pusha
dec
pop
push
cs
in
out
movsb
xchg
inc
jnp
xchg
inc
sub
pop
outsb
or
js
push
push
mov
xchg
in
mov
add
pusha
movsb
xchg
mov
xor
fiadds
sub
imul
pushf
mov
add
call
inc
fisttps
mov
cwtl
lret
mov
push
lret
dec
ficoml
mov
cld
lret
fs
sbb
xchg
dec
xor
mov
pop
push
repnz
adc
fldt
int3
ret
lea
pop
pusha
jle
jae
pop
adc
cmp
xchg
inc
addl
push
adc
cld
jae
cmp
int3
daa
fistpll
mov
sbb
push
rcrl
lret
scas
pop
in
loope
push
mov
fwait
mov
pop
xchg
adc
lods
outsb
mov
scas
shl
imul
in
adcl
adc
in
mov
jecxz
popf
xchg
ror
cmpb
push
sbb
fldt
scas
dec
mov
mov
test
jle
xor
stos
cltd
mov
das
or
test
shl
mov
pop
jecxz
aaa
into
inc
or
aas
lods
dec
jno
push
cmc
out
sarb
dec
mov
mov
enter
loopne
popa
sub
mov
lcall
pop
or
and
fwait
insl
sbb
test
dec
in
xor
out
add
stos
icebp
push
jl
cwtl
xchg
idivb
pause
cs
ss
cmc
mov
sti
jp
jle
stos
xchg
mov
mov
sub
mov
addr16
xchg
and
dec
sub
loope
sbb
mov
int
or
xchg
movl
cmp
xchg
pop
in
in
adc
push
jb
call
aaa
inc
lea
js
stc
imul
lahf
jle
cmpsl
xorl
xchg
lods
and
nop
dec
xor
inc
xor
inc
cmc
inc
sub
shrl
and
test
sbb
sub
mulb
cs
pop
xchg
cmpsl
cld
jmp
mov
inc
push
or
push
jns
or
insl
inc
xor
sub
aas
fistl
dec
adc
jb
ficoms
imul
fs
jle
dec
fcomp
jbe
lret
pop
pop
dec
pushf
mov
scas
sarl
ret
leave
fyl2x
jle
sub
jnp
cmp
mov
push
jns
es
mov
fidivl
sub
insl
push
cwtl
xor
repnz
push
int
test
and
xor
push
xchg
cltd
or
decb
in
xor
xor
lahf
inc
out
sub
cs
je
test
add
ja
sub
push
add
pop
add
cmpsb
imul
sbb
push
adc
push
xor
insb
xor
fs
test
mov
dec
dec
daa
cmp
mov
shrl
mov
cwtl
mov
add
dec
mov
mov
or
ret
test
enter
ljmp
sbb
fcomps
iret
les
popf
xor
jae
mov
test
mov
je
fsub
cli
into
or
imull
idivl
sti
or
push
mov
in
sub
fmull
call
and
std
dec
cmp
xlat
scas
xor
jne
bound
hlt
mov
or
jne
cmp
aas
push
cmovbe
insl
mov
lea
mov
push
inc
out
sahf
loopne
mov
movsb
lret
cmp
jge
pop
mov
hlt
adc
stos
dec
ficomps
sub
mull
ja
pop
mov
and
bound
cld
mov
sub
test
aad
pop
dec
fsubl
sarl
stos
lret
mov
int3
div
xchg
or
leave
movsb
jno
pop
stos
outsb
xor
cmpsb
sub
ja
inc
ja
pop
or
and
inc
adc
cmpsb
xor
add
cmp
inc
scas
mov
sub
mov
test
into
mov
enter
xor
mov
lds
outsl
mov
jnp
outsb
push
stos
push
notb
inc
les
fcoml
cld
mov
adc
mov
subl
sbb
into
xchg
mov
xchg
ret
xchg
popa
sub
lcall
mov
sub
dec
pop
fldt
idivb
into
fidivrs
sub
cmp
dec
lods
add
clc
scas
arpl
bound
dec
push
add
jbe
fidivrl
pop
cwtl
fs
hlt
aas
and
outsl
sti
mov
cmc
mov
dec
lods
scas
loop
mov
mov
mov
leave
xchg
and
filds
imul
movntq
out
and
push
xor
mov
inc
testl
icebp
or
mov
dec
xor
pushf
arpl
hlt
hlt
clc
inc
and
pop
xor
add
enter
ret
lea
xchg
popa
inc
jmp
or
sahf
jmp
and
xchg
push
jp
cmpsl
leave
jo
lret
imul
popa
daa
in
cs
aas
add
ja
lock
rolb
mov
pop
push
clc
jo
jg
or
xor
cs
mov
pusha
sub
mov
gs
out
pusha
dec
repnz
int
inc
or
pop
pusha
bndstx
orl
lahf
arpl
loopne
inc
fidivrs
cmpsl
stos
add
mov
mov
insl
push
adc
xor
or
mov
subl
xor
add
insb
jne
sbb
xchg
jmp
xlat
sub
in
cmp
mov
call
xor
lods
mov
mov
faddl
scas
jno
sbb
stos
inc
mov
sbbl
lea
sbb
push
out
mov
pop
xor
stos
lds
repz
lret
sub
movsb
outsl
in
fsubr
loop
xchg
adc
pushl
imul
iret
out
loope
cmp
and
sub
lret
xchg
xor
push
mov
test
dec
nop
andb
pop
shl
mov
loop
cmp
sqrtps
repz
scas
mov
jp
mov
cmp
pop
jmp
pusha
xchg
mov
push
mov
inc
int
inc
sar
fwait
shrl
xchg
stos
jmp
out
and
xchg
jae
pop
sbb
cs
imul
add
xchg
inc
xchg
xchg
insl
xor
call
xchg
dec
mov
inc
sub
dec
sbb
in
mov
loopne
xorl
mov
xorl
pop
call
push
ret
xchg
xchg
lods
sbb
or
mov
or
movsl
mov
mov
call
add
lret
hlt
ficompl
mov
jo
adc
andb
fsts
pop
gs
jbe
push
shrb
inc
xchg
gs
xor
lea
lock
jecxz
xor
xor
pusha
dec
cmp
ja
jns
fwait
push
test
xor
mov
imul
jne
or
cmpsb
hlt
aad
xchg
lods
mov
ljmp
xchg
mov
ret
mov
adc
sti
repz
mov
sbb
push
cld
jae
push
push
andl
nop
out
sub
mov
dec
sbb
lahf
push
jbe
dec
aam
cmpsb
add
pop
sbb
cs
daa
sub
push
stc
cwtl
mov
mov
nop
xor
sti
push
not
popf
lock
inc
and
mov
out
out
je
cmp
push
icebp
adc
push
push
pop
imul
xor
mov
push
ss
ss
xor
fprem1
cmp
out
daa
push
fsubl
jo
or
jo
adc
ret
and
sbb
cld
push
fmuls
push
les
leave
inc
bound
fistps
insb
es
and
push
inc
or
lods
dec
shll
aaa
cmp
aas
cli
cwtl
add
cmpsb
inc
aam
aad
loop
mov
bound
jmp
lods
cmp
je
mov
or
loopne
cmp
xor
mov
adc
outsb
mov
xchg
out
jo
mov
push
inc
out
adc
les
gs
das
push
or
rcrl
cmp
gs
mov
ret
pushf
movsl
jnp
sub
ljmp
jg
int
in
inc
stos
loope
xchg
dec
lcall
fdivr
jns
pop
pop
mov
in
adc
cmp
arpl
imul
and
sarl
stos
incb
cmp
pop
lret
inc
push
add
iret
mov
sbb
pop
mov
mov
std
cmp
mov
sub
push
call
jns
push
ret
mov
enter
ljmp
fnsave
fs
dec
inc
xor
xor
mov
mov
arpl
mov
lret
sbb
repnz
loop
inc
sarl
subl
push
lret
push
fnsave
lret
xchg
lock
enter
cmpl
out
jecxz
lret
pop
xor
iret
cmpsl
testb
jne
jge
mov
je
jmp
mov
popa
sbb
push
push
out
jno
inc
repnz
imul
aaa
xchg
jns
pop
dec
mov
and
insb
fstps
mov
mov
dec
xor
pop
dec
mov
mov
outsb
push
fildll
or
xor
and
xchg
ret
mov
mov
sti
out
aad
xlat
push
orb
iret
mov
out
mov
mov
cmp
inc
scas
and
mov
dec
je
and
cltd
insb
or
outsl
js
xchg
das
pusha
mov
adc
xor
stos
xchg
shlb
scas
mov
jmp
adc
pushf
nop
pop
mov
ss
outsl
mov
xchg
stos
fiadds
and
pop
mov
aas
fwait
pop
mov
imul
xor
dec
push
jns
cmp
nop
cmp
sbb
add
jle
xchg
mov
push
mov
sbb
dec
push
mov
and
rcrl
fists
notl
lret
out
loopne
sbb
sbb
sbb
sbb
test
jp
push
repnz
in
ljmp
pop
or
fnstsw
sub
cmp
xchg
sub
push
and
mov
arpl
in
test
jo
jns
push
gs
out
loopne
push
in
imul
jp
mov
cmpsb
sub
or
sbb
in
pop
in
mov
mov
jp
bound
notl
imull
mov
fidivl
add
sbb
dec
and
sub
popf
or
clc
rcll
clc
out
inc
adc
shrb
mov
mov
out
pusha
repz
mov
xchg
loop
scas
and
ret
in
enter
je
mov
push
arpl
cmp
int
in
mov
ja
push
stos
jo
dec
lock
repnz
jg
shrl
push
mov
push
xlat
jmp
mov
push
and
sbb
and
inc
xchg
push
xlat
in
subb
test
xor
int
inc
and
mov
arpl
xor
lock
jge
rcr
sbb
pop
popa
fstps
lret
in
pop
add
mov
test
pushf
int3
or
add
call
test
shl
sub
xor
or
fs
cmp
push
mov
inc
add
jle
ret
inc
idivb
sbb
push
lret
push
in
dec
pop
mov
jecxz
sub
lods
gs
movsl
popa
cmpsl
sub
fs
jge
mov
lock
and
popf
rorl
scas
lcall
mov
fs
imul
mov
push
ret
pusha
or
inc
fbstp
jo
pop
int3
sbbl
cmp
dec
hlt
xor
adc
mov
mov
cmp
insl
xchg
imul
mov
xor
jg
scas
mov
test
lahf
xor
jg
test
test
sbb
fsubr
bound
fwait
jle
in
dec
mov
mov
and
cmp
rclb
sub
xchg
mov
mov
call
push
xor
dec
dec
scas
in
mov
leave
shrl
pop
in
jecxz
jg
push
test
xor
shll
lods
es
gs
addr16
mov
dec
in
add
mov
push
hlt
xchg
jge
pop
in
lret
dec
push
jnp
or
mov
or
insl
dec
fwait
imul
packsswb
in
stos
jne
mov
cmpsb
push
jp
shlb
popf
jnp
jnp
lcall
cmpb
imul
aaa
mov
int
test
fcoms
cmp
adc
inc
mov
cmpl
cs
or
jmp
incl
fcoml
inc
sub
pop
jg
aas
mov
inc
sti
ret
mov
jl
loopne
mov
fidivrs
mov
jle
pop
mov
loopne
icebp
push
call
xor
lock
jno
les
sbb
and
out
daa
push
dec
into
in
cmpb
cwtl
mov
in
inc
fcomip
fnstcw
loop
pop
call
dec
sub
mov
inc
xor
mov
out
and
cli
fsubs
and
or
jnp
or
dec
sub
or
js
dec
pop
ss
and
sbb
lock
jno
sub
popf
mov
xchg
inc
sbb
mov
pop
inc
push
inc
or
out
mov
out
jb
jmp
xchg
xchg
cli
xor
sbb
mov
ret
insl
fnstsw
xchg
pop
mov
lcall
fiaddl
addr16
test
mov
sub
push
jp
xchg
jecxz
xchg
filds
sbbl
rorb
ja
push
xor
push
test
push
aam
mov
or
shlb
lret
xchg
sbb
xor
xor
mov
mov
cs
ret
sub
cmp
add
jns
insb
nop
cmp
movsb
jbe
inc
mov
mov
rorl
jg
call
stc
pop
cwtl
jno
out
sub
sub
cli
test
hlt
mov
jecxz
cmp
insl
nop
or
test
sub
pop
cs
add
mov
lcall
dec
fstpt
mov
lret
pop
mov
pop
aas
jbe
fdivl
lods
add
add
subl
int
je
cmp
mov
fisubrl
adc
mov
idivb
jbe
ljmp
gs
movsl
jg
loopne
pop
fsub
inc
imul
push
sub
outsb
push
aaa
ljmp
int3
xor
std
js
cwtl
pop
and
jnp
push
xor
jmp
and
movsl
daa
in
lods
pop
loop
cs
xor
push
popf
xchg
cmp
pop
cwtl
sub
lods
sti
call
xor
pusha
mov
cmpsl
dec
add
pushf
lods
mov
sub
movsbl
lcall
push
imul
into
mov
call
add
sub
loop
mov
and
inc
mov
arpl
add
fists
sub
addb
cmp
popa
arpl
or
adc
push
pop
and
xor
repnz
pop
das
sbb
in
xor
mov
nop
fmul
pop
xchg
jbe
pop
push
cmp
push
add
mov
sub
xor
in
es
loop
pop
jecxz,pt
xor
in
xchg
lret
aas
pusha
or
xchg
sbb
mov
push
cmpl
daa
xchg
add
push
vphsubdq
das
xor
jmp
add
sbb
sbb
or
fstpl
or
jns
xlat
fwait
sahf
push
ss
jo
cmpl
jnp
rcrb
inc
rcll
outsl
addr16
sbb
mov
scas
mov
inc
dec
nop
dec
out
inc
sbb
dec
cmp
or
hlt
clc
push
sahf
add
movsb
cmc
add
push
push
xorb
ret
jb
scas
sti
jecxz
inc
mov
loop
pop
or
and
shlb
xlat
push
lret
pop
push
leave
ficompl
ljmp
dec
faddl
inc
push
xor
cmp
jb
pushl
xchg
jns,pn
cltd
call
mov
add
dec
lock
cmp
adc
lcall
dec
ret
mov
ljmp
addr16
aam
hlt
xchg
jmp
sbb
daa
mov
data16
xchg
push
jne
pop
scas
popa
lret
nop
stos
ja
sbb
and
jno
sti
in
jae
push
daa
mov
sbb
jne
inc
stc
fld1
xor
jg
push
or
or
sbb
enter
xchg
imull
icebp
daa
out
cld
hlt
jp
or
ss
notl
ja
clc
xor
mov
outsb
xchg
mov
js
pop
scas
test
cmp
xor
popa
in
popf
jge
push
xchg
inc
cmp
ret
fs
mov
or
mov
cmp
dec
xor
jl
mov
ret
into
insl
ja
ljmp
push
add
mov
es
jge
xchg
jg
cmp
out
mov
jno
lahf
stos
pop
fdivrl
xchg
mov
jp
mov
jnp
clc
in
pop
loop
in
fldl
aaa
mov
lods
lock
mov
dec
insb
scas
cltd
mov
scas
pop
push
cmpsl
fidivrs
jns
xorl
or
pop
roll
xchg
push
push
addb
cmpsb
xchg
push
aam
aas
ja
xchg
divl
cmp
lret
in
pop
xor
and
mov
sub
out
jecxz
rorl
jl
dec
out
jne
invd
popf
cmp
add
push
mov
insb
jnp
adc
inc
aad
stc
into
mov
cmc
dec
pop
dec
imul
mov
jae
inc
mov
add
subl
pop
outsb
ja
sub
int3
in
dec
add
inc
push
push
lds
inc
inc
and
cmc
jb
inc
cmpsb
cmp
pop
cmp
pop
fisttps
jno
cmp
icebp
fwait
dec
aaa
addb
mov
sub
inc
xor
or
adcl
xor
cltd
add
pop
push
addb
pop
sbb
into
pop
ljmp
push
xchg
mov
mov
insl
or
lock
in
lods
outsl
pop
push
inc
and
ret
scas
jge
mov
adcb
scas
imul
dec
stos
mov
jp
inc
mov
leave
fdivl
push
imull
stos
andb
outsb
addl
xor
shrl
cs
cs
sahf
mov
mulb
lds
hlt
test
arpl
je
imul
insl
inc
xchg
lahf
jp
adc
cli
jg
or
sub
cs
add
dec
lahf
or
xchg
ds
test
lcall
jnp
stc
outsb
mov
pop
loop
pop
rorl
popa
mov
inc
ret
test
add
mov
out
clc
outsb
ret
push
mov
nop
popa
xor
or
cmp
out
xor
xchg
fsubl
and
pop
mov
out
call
jnp
mov
into
sahf
cld
xlat
cmp
mov
cwtl
aas
jmp
stos
mov
push
jge
mov
test
mov
fstl
in
or
adc
add
std
fs
push
rcrl
xor
dec
xor
jb
cwtl
dec
test
das
call
dec
mov
popf
or
aaa
lock
mov
scas
pop
mov
inc
pop
mov
inc
mov
push
fistpl
ljmp
insl
mov
xchg
test
mulb
xor
sub
frstor
cmp
aad
lea
jg
dec
icebp
cli
out
das
jns
js
pop
xor
fstp
cmp
imul
lahf
and
mov
out
fiaddl
cmpsl
mov
icebp
add
sbb
js
ret
push
mov
cmpsb
adc
stos
cld
sub
lar
scas
cld
pop
add
imulb
ss
add
cmpsl
mov
lret
push
loop
sbbb
xchg
lahf
jbe
leave
xor
and
pusha
mov
inc
xor
or
fst
and
addl
sahf
divl
jnp
leave
lods
ja
int3
leavew
add
and
repz
test
nop
xlat
andb
jns
rclb
out
pop
in
iret
xor
sub
ret
push
out
mov
lahf
out
add
fdivr
push
adc
sbb
loopne
or
xchg
aad
imul
jl
stos
sub
xchg
cwtl
ret
dec
cmp
mov
or
fldt
lret
aad
cmp
out
jge
lret
movsb
jge
test
inc
dec
lods
adc
lock
mov
ljmp
adc
imul
lods
jne
or
cmp
jle
mov
cmc
and
fbstp
jae
movsl
add
xchg
jbe
sub
cli
or
je
fistl
fnstcw
das
and
mov
fisubrs
arpl
leave
xor
movsl
sbb
jle
in
loopne
push
cltd
cwtl
jp
cmpsb
cs
jmp
sbb
or
cmp
arpl
add
dec
mov
xor
hlt
xchg
mov
adc
cmpsb
aas
cmc
and
lret
lods
imul
icebp
xorb
call
cs
inc
outsb
push
bound
xchg
aaa
dec
bnd
xchg
test
lcall
repnz
inc
repnz
push
cmpsb
cmp
mov
jge
adc
dec
dec
dec
sub
into
sub
nop
adc
mov
sbb
outsb
or
push
lcall
pop
jg
sahf
push
add
mov
dec
jns
scas
in
lret
sbb
mov
sarb
cld
ret
push
loopne
sbb
sbb
mov
inc
cmp
fidivs
lahf
inc
hlt
aas
cmpsl
mov
in
js
ret
push
or
xorl
dec
sbb
xchg
popa
lahf
pusha
rolb
lahf
jbe
or
or
jg
cmp
out
inc
add
xchg
cmc
sbb
push
out
sub
or
repz
pop
fwait
sub
xor
dec
int3
fimull
lret
outsl
rol
cmpsb
pop
xchg
and
jle
lahf
cmp
and
int
mov
and
mov
jecxz
jecxz
lods
test
inc
stos
pop
jmp
or
ja
sbb
and
push
cmp
xor
insl
test
or
leave
mov
fsubr
popf
imul
sbb
gs
mov
push
pop
pop
cmpsb
cmpb
imulb
movsb
mov
icebp
lret
fbld
mov
xchg
mov
ficompl
inc
sub
sbb
stos
inc
cmc
test
push
cmp
mov
sbb
jno
scas
bound
sahf
adc
adc
xor
sub
shrb
insl
adc
out
push
icebp
in
sarl
adc
pop
xchg
inc
mov
mov
mov
jns
dec
shlb
decl
push
repnz
add
addb
fnstcw
out
pop
aad
cmpsl
add
mov
lods
loopne
or
xor
cmp
cs
xlat
mov
lods
dec
xchg
gs
fdivrs
dec
rcl
jg
sarb
aad
lds
mov
push
mov
jmp
jnp,pn
movsb
xorb
xchg
push
adc
mov
fwait
jb
sbb
cmp
icebp
cmc
ret
imul
in
sbb
cmp
mov
icebp
std
mov
stc
add
aaa
xchg
cmp
and
test
hlt
xchg
inc
sti
cmp
lock
int3
adc
lock
test
cmp
stos
inc
or
std
lret
dec
ja
add
shlb
jmp
insl
push
hlt
mov
jge
insl
mov
shl
faddl
mov
repz
push
jmp
jo
roll
mov
not
ss
xchg
stos
ficoms
movsl
cmp
mov
test
in
fs
es
add
jne
sbb
mov
xchg
xlat
fstl
mov
cmpb
stc
sub
das
dec
dec
add
rolb
or
shll
mov
xchg
dec
cmpsb
lock
mov
pop
mov
mov
test
out
xchg
aad
imul
cmpsb
test
addr16
stos
lods
cmp
rol
mov
mov
lods
je
fs
sahf
xor
psubusb
adc
insl
mov
aas
pushl
sbb
in
loop
adc
test
mov
jne
and
mov
rcrb
jbe,pt
outsb
outsl
push
cs
mov
pop
dec
cmp
and
cmp
jecxz
jmp
push
imul
sub
jne,pt
push
xchg
jae
push
in
dec
adc
sub
fdivs
sub
adc
pop
and
or
mov
outsl
aaa
cs
mov
and
inc
andl
leave
jecxz
ljmp
repz
shl
cmc
jmp
xor
or
fcoms
sub
adc
and
mov
outsl
pop
cs
mov
add
bound
movsb
test
sub
ds
adc
fwait
adcl
mov
stos
in
loop
xchg
push
mov
out
pop
call
fcmovb
repz
in
xchg
jns
cwtl
aad
lahf
orl
jnp
fidivs
mov
inc
mov
out
xchg
and
lahf
ret
lret
cltd
jno
rol
cwtl
shll
fsub
call
inc
aaa
inc
cmpsb
call
fcmove
or
pop
cwtl
test
shr
addr16
les
ds
popa
push
push
mov
dec
xchg
pop
sub
push
add
mov
loop
jp
das
xchg
pop
scas
in
out
mov
int
or
outsl
rclb
inc
jne
and
xchg
add
dec
scas
mov
out
jno
mov
or
cmpsl
jp
gs
ljmp
lret
jns
cwtl
dec
jp
addb
movsl
repnz
xchg
loopne
imul
out
stos
aad
xor
mov
cmc
std
xchg
repz
pop
mov
cwtl
int
xlat
cmp
lea
cld
stos
lea
call
xor
loope
es
outsl
inc
push
scas
jbe
inc
dec
stos
lock
iret
mov
jmp
cmpl
mov
mov
fistpl
xchg
test
xor
in
outsl
mov
sbb
fwait
mov
lods
fbld
mov
ret
push
pop
dec
movsb
lea
inc
sbb
jg
lret
dec
push
mov
std
in
shl
inc
cli
mov
movsb
lds
scas
icebp
and
pop
mov
adc
sahf
out
icebp
jbe
add
xor
mov
mov
adc
xchg
test
push
test
mov
ficoms
xor
mov
xor
adc
movsb
add
sub
push
into
jbe
xor
lods
fisttpll
lds
xchg
in
iret
sahf
fisubs
iret
ja
imul
out
mov
test
inc
dec
xchg
dec
and
lret
rol
jb
sarb
movsb
pushf
mov
mov
movsl
xor
sub
fimull
lret
stos
add
enter
jne
popf
xlat
aam
fcomi
mov
mov
fiadds
jmp
adc
add
dec
mov
push
ja
ss
in
or
ds
fsubrl
jecxz
dec
dec
push
mov
and
lret
leave
mov
cwtl
xchg
pop
inc
add
jg
pop
mov
xlat
test
xchg
insl
loopne
fs
loop
push
dec
loope
out
mov
mov
jnp
pop
or
fimuls
stos
gs
shrb
jno
fsubs
mov
dec
stos
push
push
mov
sbb
dec
das
shlb
sbbb
jg
push
nop
sbb
call
enter
adc
mov
shrl
in
loopne
sbb
xchg
lds
cmp
lock
add
cmp
sub
inc
cli
inc
cmpsb
mov
pop
xchg
loop
mov
fcoms
jle
xchg
arpl
mov
jecxz
jmp
bound
out
or
jns
movzbl
jbe
mov
cmp
mov
xchg
int3
adc
ljmp
loopne
les
mov
in
dec
jp
jp
pop
push
shrl
jbe
fistpl
xlat
fildll
es
icebp
insl
dec
or
xlat
mov
imull
push
negb
dec
sahf
incl
jmp
je
lret
fcomip
psubusb
mov
push
lds
and
mov
and
cmpsb
mov
loop
mov
or
xor
fstpl
mov
mov
sbb
push
xor
and
add
testl
sti
neg
lret
popf
adc
inc
aad
imul
lock
scas
fnstcw
cli
jge
out
inc
push
imul
or
push
mov
in
lcall
es
iret
and
xchg
cs
sub
xchg
jg
pusha
rcl
fmuls
imul
xor
xchg
pop
sbb
aas
outsb
adc
and
and
aad
shlb
mov
sbb
add
sub
pop
inc
int
sbb
push
loop
in
nop
mov
sub
inc
lods
or
ja
mov
sbb
test
xor
sub
mov
push
test
ret
popa
jnp
cmp
adc
add
imul
pop
bound
sbb
or
mov
loop
out
cli
es
jg
and
rcrl
insb
mov
adcb
lret
sbb
in
shll
les
cmp
imul
pop
mov
fs
jg
loop
outsl
jg
cmpsb
pop
jnp
bound
mov
in
insb
push
xchg
movsl
scas
lods
pop
or
js
out
loopne
cmpsb
add
and
cltd
idivl
push
jp
gs
xchg
and
lcall
push
xchg
popa
and
cmp
daa
call
dec
f2xm1
jnp
sub
mov
fsubrl
std
xchg
lock
int3
pop
iret
sbb
push
xchg
arpl
in
out
cs
push
xchg
mov
add
dec
mov
fstp
fs
in
imul
jmp
xchg
aaa
dec
jle
add
jl
leave
push
in
adc
addl
inc
stos
pop
rcll
or
lret
push
addr16
cs
inc
cmp
aas
lea
dec
cmp
stos
mov
mov
jnp
out
mov
xlat
push
arpl
add
scas
in
mov
add
and
dec
or
std
jns
popa
inc
sbb
mov
dec
outsl
mov
movsb
xchg
and
sub
adc
cli
mov
sub
mov
outsb
flds
fidivl
ljmp
xor
mov
lds
mov
loope
inc
mov
push
jbe
inc
lret
rcr
in
mov
rclb
mov
mov
sub
cmp
aaa
sub
ja
add
ret
fistl
nop
stos
xchg
mov
popf
shll
add
inc
ja
iret
scas
jns
mov
jnp
mov
insl
dec
test
cmp
jle
test
mov
mov
sbb
loopne
sub
adc
lret
jnp
add
jno
inc
push
ds
int3
push
lret
mov
mov
sar
jno
mov
dec
xchg
rclb
add
mov
lods
sub
xor
shll
mov
fldl2t
push
mov
aas
lcall
push
arpl
add
out
fnop
xchg
pop
data16
fsubrs
add
jo
aas
icebp
dec
repnz
lret
enter
jmp
cmpb
aam
mov
xlat
lahf
mov
lods
xor
rcll
arpl
fdivs
push
dec
test
out
dec
stos
sub
xchg
repz
xchg
inc
negb
lahf
mov
sub
in
sub
out
imul
inc
repnz
xchg
mov
mov
imul
or
or
or
mov
ss
fcmovu
into
mov
stos
and
out
dec
ja
push
xchg
fnstsw
aad
cmc
gs
fcompl
or
inc
jg
icebp
scas
fcoms
push
inc
xchg
mov
enter
pop
or
pop
filds
and
and
lods
and
imul
xor
mov
push
xchg
mov
ss
sub
ja,pn
scas
test
test
mov
sahf
jmp
fisubl
lcall
cmpb
push
add
inc
push
pop
ds
adc
ret
pop
pusha
int3
lock
xor
dec
xor
pop
data16
fisubs
mov
add
push
ja
push
sbb
popf
push
fwait
push
push
push
or
jp
shlb
test
inc
adcl
or
push
ja
lds
mov
int
pop
xor
fwait
cmp
scas
js
std
sti
lret
lahf
lret
pop
cmp
movsb
cs
ja
mov
in
rorb
icebp
dec
mov
mov
int
mov
shrb
mov
mov
aaa
icebp
iret
loopne
shll
push
lret
sahf
fisubl
mov
adc
cmpsl
xchg
cli
outsl
mov
pop
insb
movsb
idiv
xchg
or
sbb
xchg
arpl
outsl
test
push
outsl
xor
repz
add
test
popa
fdivrl
lock
or
cmp
cmc
mov
orl
lret
jne
mov
fdivs
sub
rcll
in
sahf
bound
dec
dec
jecxz
mov
pop
pop
xlat
sub
dec
arpl
or
into
sti
jnp,pn
jne
clc
pop
mov
lret
pop
je
ja
sub
pop
in
xchg
in
pop
mov
inc
lods
cmp
mov
iret
scas
inc
call
lods
insb
test
cmp
je
imul
add
hlt
sysenter
xor
sub
push
mov
pop
cltd
jno
or
std
cmc
xchg
jmp
push
lea
lock
cltd
jb
cmp
icebp
adc
push
add
testl
rcrl
xor
push
packuswb
cmc
pop
and
xchg
movsb
lret
mov
orl
enter
in
cmp
iret
mov
sbb
jnp
mov
add
fidivrl
push
dec
or
popf
cmp
push
stc
sbb
mov
aas
leave
lahf
sbb
mov
mov
pop
lock
xchg
out
es
out
mov
sbb
mov
sahf
cli
adc
inc
mov
repnz
xor
int
ljmp
push
inc
add
lcall
fstpt
xchg
jg
dec
xor
fidivl
dec
jo
pop
insl
sbb
icebp
adc
lock
enter
sub
mov
jge
mov
xchg
cli
jge
cmp
out
push
imul
outsb
xchg
mov
or
imul
jno
fcos
sub
mov
and
std
cltd
into
daa
sub
adc
enter
fstps
lcall
ds
js
xor
sti
movsl
inc
xchg
mov
dec
inc
out
leave
loope
subb
les
lock
stos
insl
fsub
rolb
das
enter
mov
cs
lahf
lret
mov
mov
jle
mov
xor
pop
cmp
out
jne
jmp
jp
dec
dec
mov
out
nop
test
pop
dec
mov
and
add
ja
ficompl
fsubs
xchg
out
xor
cwtl
ss
clc
cwtl
inc
jae
xchg
js
xchg
mov
xorb
mov
pusha
ds
out
cld
ja
out
dec
mov
repz
push
loopne
pop
loope
push
lcall
jg
scas
test
aad
out
lahf
xchg
dec
push
fcmovne
or
or
loopne
test
push
leave
pushf
push
sub
popa
jns
mov
sbb
mov
outsl
mov
mov
fimull
cmp
js
aam
into
cli
jbe
and
outsb
out
leave
jb
sbb
mov
dec
add
xchg
xchg
mov
fimuls
sub
out
sbb
in
sti
fisttps
clc
pop
cs
lods
insb
lcall
mov
push
cmpsb
je
adc
push
jle
push
fildl
xor
loope
clc
fs
clc
ret
and
aas
repnz
fbstp
cwtl
subl
or
fidivl
movsb
xorl
lods
call
fcoml
into
rcrl
test
hlt
ja
mov
and
mov
sar
scas
in
cli
imul
inc
imul
mov
adc
divb
xchg
div
inc
xchg
clc
dec
jg
jo
jnp
cmp
jp
loopne
xchg
adc
in
xchg
fidivrs
std
in
inc
mov
sub
mov
mov
insb
inc
xchg
insl
xchg
nop
sub
sbb
xchg
repz
jecxz
sub
lret
push
inc
cli
xor
popf
in
xlat
or
dec
repz
arpl
jae
outsl
aad
fidivs
fiaddl
fwait
dec
loope
xor
test
int3
or
pop
xchg
cwtl
xor
mov
loopne
arpl
and
test
push
add
dec
pop
leave
call
xchg
lds
aas
ror
sbb
jecxz
cmp
imul
push
repnz
idiv
adc
xchg
jmp
pop
jecxz
or
push
imul
xor
push
sbb
out
ja
pop
sbb
mov
add
add
pop
lds
leave
add
popa
fmul
pop
loope
mov
inc
jns
insl
stos
fsubl
xor
mov
sbb
jg
inc
in
inc
jnp
ss
mov
adc
test
add
insl
mov
xor
andl
jne
or
sbbl
imul
dec
icebp
div
cld
pop
lret
dec
sbb
sti
xchg
mov
xlat
cmp
cld
cli
out
insl
or
inc
sbb
sarl
cmp
mov
std
int
rclb
notl
aam
inc
jns
xor
dec
sar
dec
jle
loopne
inc
add
mov
stos
mov
test
mov
xchg
push
movl
add
fiaddl
lcall
fildl
bound
int3
pop
mov
or
mov
into
adc
adc
pop
jae
ljmp
in
mov
cltd
xor
mov
movsb
mov
mov
jmp
or
cbtw
int3
or
jg
jbe
inc
jmp
std
lea
mov
jno
cmp
int3
adc
xchg
leave
aam
pushf
or
out
pop
xchg
xchg
mov
xlat
sbb
push
imul
sbb
sar
xchg
mov
push
jnp
mov
mov
and
xchg
aam
jae
xlat
shl
out
iret
jp
cmc
jns
loope
lods
imul
jle
jb
lcall
iret
mov
push
mov
inc
rolb
fdivs
nop
fwait
outsb
pop
sbb
sti
movsb
pushf
sub
add
dec
ret
icebp
pop
cmp
adcl
aaa
push
mov
fbstp
add
fisttpl
into
jmp
xchg
scas
repz
sub
xor
inc
jnp
insl
insb
pop
mov
cmp
push
aam
arpl
loop
fnsave
xchg
sub
aaa
dec
cwtl
dec
xchg
cmp
out
sbb
rcrl
lea
mov
lods
xchg
and
xchg
xchg
loop
or
jg
xchg
dec
fchs
movsb
out
mov
scas
fwait
xor
mov
xchg
pop
inc
or
clc
push
das
jns
mov
and
mov
sbb
pop
fldl
mov
xchg
mov
inc
pop
roll
cmp
ja
sub
sbb
cs
pusha
movsb
inc
inc
cmp
rcr
sub
mov
pop
sub
pusha
jecxz
movsb
fwait
jl
jp
into
test
xor
push
addl
pop
jbe
inc
push
pop
or
insl
loopne
pop
mov
adcb
out
mov
pop
fs
test
mov
cmpsl
out
fidivl
push
mov
call
and
andl
sbb
test
je
xchg
cmp
insl
aaa
xor
in
lods
rol
pop
mov
xor
icebp
ds
adc
aad
test
fldt
imull
imul
in
mov
cmpb
adc
outsl
ja
jne
lret
insl
sub
adc
das
jns
sbb
or
jp
jno
cmp
mov
or
std
repz
insb
xorl
jmp
test
icebp
into
jg
aas
cld
fidivl
lods
and
xchg
push
xchg
adc
lds
xor
aad
or
add
sbb
pop
or
icebp
clc
lea
mov
jb
inc
popf
mov
sbb
addb
ror
fidivl
dec
test
xchg
sbb
jbe
mov
pusha
mov
adc
aaa
jg
mov
jecxz
mov
into
cmp
and
loopw
pop
mov
int
pushf
dec
into
xchg
jo
aaa
lds
imul
push
cld
pop
sub
int
add
adc
pusha
jecxz
mov
leave
dec
test
xchg
dec
xchg
cwtl
or
pop
dec
lods
push
ja
inc
push
ficomps
shlb
pop
popl
dec
out
lea
xor
repnz
imul
sub
sbb
arpl
or
dec
inc
sbb
xchg
xchg
mov
jmp
lods
inc
cwtl
test
jo
int3
insl
and
call
pop
mov
add
xchg
jbe
xchg
mov
in
lcall
out
dec
and
and
arpl
mov
mov
jp
pop
mov
jns
fwait
shlb
xor
sub
xchg
mov
sub
cwtl
push
in
aad
rorb
push
pop
jge
shll
inc
andb
xlat
lds
fsubrs
stc
dec
xchg
or
inc
sub
ficomps
js
out
fists
gs
cld
aaa
sahf
les
jo
add
cmpsl
jae
je
adc
aaa
or
sbb
lea
xor
cmpl
jbe
xchg
jnp
scas
add
lea
insb
sub
push
mov
pop
cmpsb
mul
lods
add
xchg
fadds
push
cli
inc
cwtl
jecxz
add
push
sbb
push
jnp
sbb
pushw
outsl
imul
loop
fwait
orb
cwtl
ret
fnstsw
push
divps
out
fldl
outsb
loopne
jp
in
and
jne
cmp
out
cmpsl
insl
sbb
inc
push
dec
or
dec
cmc
int3
xor
loope
sbb
shl
push
in
mov
cli
xchg
jnp
cs
stos
mov
xor
ret
cmc
and
insl
mov
jne
out
mov
sub
fyl2xp1
pop
or
mov
mov
popa
inc
out
idivb
aaa
addr16
and
mov
or
xor
and
jge
mov
ret
ja
xchg
jecxz
enter
movsl
add
xchg
add
jg
cmp
iret
sbb
cld
inc
jecxz
sahf
movsl
sbb
or
cmpsl
bound
test
cmc
and
cmpsb
arpl
mov
pop
sub
pop
adc
das
add
daa
jmp
std
push
xchg
jg
dec
sbb
xor
jecxz
or
inc
jb
mov
mov
scas
pop
mov
lcall
cmpsb
dec
mov
lock
adc
add
bound
fldenv
and
cld
gs
stos
jbe
scas
mov
pop
xor
lods
inc
js
inc
ss
mov
mov
cli
adc
nop
or
lahf
sarl
cmp
cs
dec
in
dec
mov
nop
pop
ss
sub
dec
dec
pop
repz
rorl
inc
sub
inc
push
outsb
dec
jl
mov
in
push
imul
inc
test
scas
call
xchg
lds
push
mov
mov
adc
adc
and
cmpsl
repz
mov
jge
adcb
loopne
inc
jge
adc
or
ss
fldl
stos
dec
iret
mov
sub
sti
mov
xchg
mov
push
mov
adc
jno
ret
dec
loopne
jae
cmp
xchg
mov
loopne
add
shlb
fmul
mov
sahf
mov
mov
aam
push
xor
dec
loopne
adc
jg
mov
scas
jmp
push
jno
push
stos
sbbb
iret
inc
lret
xor
xchg
cmp
jns
stos
cmpsb
mov
jmp
jbe
std
inc
jle
xlat
xchg
cmc
test
jo
adc
sbb
push
js
ret
adc
lahf
dec
insl
cld
mov
or
dec
mov
xchg
out
push
lods
int3
fidivrs
aaa
insl
out
mov
mov
adc
rorl
call
cmp
mov
in
adc
adc
sub
std
dec
je
xorb
cmpsl
scas
pushf
fisubl
insb
out
mov
pop
and
pop
pop
xchg
aaa
test
adc
pushf
je
jl
ja
mov
inc
bound
sub
push
jns
inc
hlt
clc
hlt
jno
testl
sbb
fistpl
xchg
add
ret
push
loop
add
out
pop
stos
scas
mov
int
movsb
dec
outsb
popf
and
mov
sbb
leave
out
pop
xor
add
mov
ss
hlt
dec
fists
push
outsb
addr16
outsb
ret
xchg
jecxz
popf
lea
cld
push
movsl
sub
xchg
div
sbbb
aaa
pop
int
jge
dec
jle
jle
mov
cmp
imul
cmp
sbb
xor
dec
add
das
cwtl
outsl
dec
jnp
push
fs
dec
pop
jo
pop
test
push
add
or
hlt
lods
mov
lcall
inc
loopne
adc
shll
jg
jmp
cs
sub
pushf
pop
hlt
jl
xchg
and
pop
xchg
loop
sarb
adc
jg
data16
imul
das
dec
stos
inc
and
and
addb
orb
jg
insl
cmpsb
xor
shrl
mov
int3
push
dec
ljmp
test
leave
mov
orl
popa
aam
cmpsl
cmp
roll
pop
lea
push
mov
sbb
xchg
in
leave
iret
fsubl
fwait
and
inc
sub
push
dec
ljmp
and
mov
fisubl
aaa
sbb
pop
jmp
cmp
add
out
add
jp
call
pop
inc
dec
pop
mov
insl
jmp
lret
sti
jbe
push
or
leave
shll
aad
movsl
orl
ja
jecxz
das
imul
aad
outsl
jge
sub
mov
xchg
lock
xchg
add
pop
jle
mov
mov
in
jp
jno
pop
test
arpl
xchg
pop
push
jns
push
sti
addr16
or
fs
and
jecxz
inc
icebp
ljmp
jae
das
int3
or
fidivl
loope
iret
mov
fisubl
lods
add
addr16
mov
xor
inc
pop
push
add
jl
loop
jne
rol
add
add
cltd
and
rcrb
jp
xchg
xor
xchg
scas
imul
push
xchg
std
add
pusha
aam
std
fimuls
fwait
addr16
or
mov
sbb
data16
in
xchg
jmp
outsl
enter
lods
or
mov
pop
out
aam
js
out
xchg
mov
push
repz
adc
in
fs
pushf
imul
dec
sub
dec
cmp
xor
ja
stos
fwait
xor
test
int3
push
int3
outsl
in
mov
push
sbb
leave
add
ja
sbb
lods
cltd
out
pop
push
lret
pop
mov
dec
cmp
unpckhps
sub
in
js
lahf
popa
xchg
cli
jl
jmp
mov
pop
sbbb
pop
or
je
ljmp
xchg
divb
gs
xorl
mov
xor
cwtl
pop
sbb
popf
jbe
arpl
cmp
fwait
mov
movsl
push
sbb
jnp
and
dec
fsubr
ljmp
and
cld
xor
out
pusha
sbb
pop
imul
adc
dec
pop
jo
jae
notl
je
fisubl
stos
pop
fisttpll
std
jae
adc
ds
inc
cs
cmp
dec
push
test
bound
shlb
mov
lods
mov
dec
or
imul
in
aas
and
lods
insl
in
inc
fisubrl
loope
lds
cmpb
arpl
push
cmp
mov
dec
lret
scas
xor
fstl
testl
frstor
xchg
ret
mov
jecxz
lods
push
imul
sbb
pushf
dec
mov
xor
pop
push
subl
cmp
add
repz
mov
shl
mov
and
popa
movsl
cld
sub
sub
aas
xor
lea
idiv
sub
mov
or
xor
inc
adc
arpl
jge
pushf
cwtl
aas
loope
and
rcr
lods
in
adc
mov
cmp
jge
and
negl
test
arpl
push
xchg
cmc
add
push
inc
mov
jb
sbb
inc
push
push
push
dec
repz
cmp
stos
inc
and
jne
jmp
or
das
push
shrb
fsub
cmpb
stc
jl
sbb
test
mov
push
fcomip
xor
rolb
cwtl
jp
sbb
ljmp
cmp
or
aaa
adc
mov
stos
out
pop
imul
sbb
lcall
dec
add
xor
loop
dec
popf
out
shr
sub
sub
lods
push
dec
mov
mov
lret
out
ret
add
mov
popa
sarb
jmp
push
add
xchg
mov
repz
dec
in
nop
xchg
shrb
push
popa
or
sar
dec
inc
pop
mov
sbb
in
inc
xor
jno
inc
lock
adc
sub
mov
subl
cltd
insb
or
or
ja
add
xlat
mov
test
bound
cmp
cmp
loop
dec
in
xor
pop
fldt
inc
pop
insb
cmp
and
lahf
popa
sub
fisubrl
sbb
aaa
or
push
jle
lds
adc
mov
mov
lods
js
lock
stos
mov
leave
xchg
ror
leave
and
scas
xor
cmp
jns
add
movsl
mov
mov
cmpsb
mov
cltd
into
cmp
mov
cli
ret
mov
call
push
popa
lret
xchg
fcoms
dec
ret
movsl
mov
xor
add
ret
insl
push
enter
std
movsl
outsb
stos
pop
pushf
nop
cltd
mov
sbb
aas
rorl
out
adc
xor
test
lcall
enter
insl
mov
cltd
or
test
cmp
xor
or
jmp
aas
arpl
jno
pushf
inc
fcmovnb
push
dec
andl
in
fldl
cmp
scas
lods
push
jmp
insl
sti
jg
cmp
cmp
outsl
jns
and
and
pop
lea
jo
mov
add
mov
sti
hlt
inc
ljmp
enter
mov
test
inc
mov
inc
lods
popf
cmp
mov
in
jbe
cmc
add
popf
rcll
inc
jo
dec
lock
or
sbb
inc
mov
test
cmp
jb
xor
cmpsl
sub
loope
sar
dec
in
lret
sbb
fisubrs
cwtl
fbstp
std
mov
jae
fildl
jle
or
push
mov
push
push
cmp
sahf
nop
lea
fldenv
out
jb
test
cli
mov
push
or
stc
leavew
les
fst
jle
adc
cmpsl
mov
and
pushf
inc
test
sub
iret
cwtl
or
jnp
xor
xor
add
lea
mov
dec
push
or
dec
sub
iret
sar
adc
add
jg
mov
out
or
mul
lret
sti
repnz
and
mov
data16
and
ret
pushf
pop
aaa
jno
mov
cmp
push
ds
out
lods
rolb
and
cmp
adc
jecxz
pushf
jl
movsl
mov
mov
mov
add
shl
out
add
mov
rorl
mov
pop
pop
popa
enter
push
pushf
call
stos
push
mov
movsb
cld
stos
xlat
repnz
ds
adc
pop
icebp
je
jbe
jl
fnsave
adc
ret
add
dec
loope
pop
in
dec
jnp
arpl
or
dec
mov
ljmp
mov
dec
adc
xor
push
inc
sbb
inc
mov
or
test
or
sub
outsb
push
lret
dec
jae
mov
xchg
xchg
jno
or
xchg
jge
addb
loope
mov
or
dec
cmc
cmpl
push
jns
out
mov
popa
stc
inc
cmc
out
ror
push
sahf
jns
int3
sub
sbb
push
mov
rolb
dec
or
mov
xor
cld
rcrl
push
cmp
jmp
push
stos
xlat
in
imul
out
push
mov
fisubs
loopne
xchg
in
dec
pop
in
sub
hlt
rcrl
std
lea
dec
xor
icebp
popf
call
fdivl
cmp
jne
ja
pop
dec
dec
popa
add
mov
ljmp
mov
cmp
dec
adc
in
push
cmp
push
and
xchg
daa
pop
scas
ret
movsb
fnstsw
or
lock
cmpsb
xchg
lea
mov
int
imul
xor
call
xor
out
gs
in
mov
mov
xor
sbb
imul
test
mov
imul
inc
cs
cmc
addr16
lea
mov
or
and
ret
nop
lods
jno
test
enter
or
or
inc
mov
add
icebp
fisttpl
clc
mov
jge
ja
cwtl
out
adc
sbb
jl
cmpb
mov
std
xor
fnsave
sub
pushf
ljmp
fcompl
mov
fcomps
dec
sbb
and
lidtl
int3
dec
fidivs
ds
aas
orb
out
lret
std
cmpsb
aas
mov
jnp
inc
pop
push
jl
mov
push
fst
mov
push
leave
xor
jecxz
sar
mov
pop
pop
clc
std
add
sub
loop
pop
jg
sub
sbb
fs
xlat
movsl
push
push
arpl
jne
xor
ss
aad
adc
imul
cmc
pop
and
js
std
mov
pop
or
push
out
ja
or
mov
outsb
fdivrl
fcmovu
ret
adc
in
sub
dec
xchg
or
cld
xchg
movsb
mov
mov
pop
jns
jg
inc
cmpsb
loop
jmp
fs
jnp
nop
adc
sub
movsl
or
nop
and
flds
es
add
jb
mov
jle
in
sbb
pop
mov
fucomp
add
adc
shll
jecxz
xchg
mov
les
and
xchg
xadd
xor
fs
aaa
in
call
jnp
mov
into
fs
or
aad
popa
xchg
xchg
mov
shll
jno
aad
pop
xchg
mov
mov
insl
out
cli
lods
jge
add
aaa
out
jnp
jo
xchg
mov
adc
and
jp
idivl
xlat
mov
or
hlt
mov
inc
lret
and
loop
pop
pop
mov
rolb
sbb
xchg
dec
push
lods
pop
cmpb
pop
ljmp
ss
jns
fdivp
jb
addl
insb
sbb
scas
cmpsb
lods
test
sub
mov
mov
lahf
stc
aad
test
stos
jnp
aad
jmp
insl
and
sbb
or
pop
sub
repnz
xchg
subb
dec
aam
sbb
nop
cmp
neg
sbb
push
aam
jge
xorl
xchg
or
mov
sub
jp
sub
cld
test
push
rcl
mov
mov
stos
xor
fstpt
push
xchg
in
lock
loopne
imul
das
inc
or
xlat
loope
push
lret
negb
xor
rcr
je
sbb
daa
cmp
mov
jo
jmp
int3
in
cld
shrb
pop
adc
pusha
mov
test
loop
xchg
inc
inc
pusha
jne
aas
pop
push
xchg
hlt
icebp
mov
pusha
xchg
sbb
test
mov
aas
pop
sub
loope
xchg
xchg
jo
xchg
int3
adc
push
repnz
out
mov
inc
mov
xchg
test
aas
filds
cmp
add
mov
fcmovnu
push
jecxz
dec
or
jae
pop
loopne
imull
jb
xchg
test
mov
cmp
jns
mov
mov
lret
mov
orl
or
dec
jne,pn
inc
stos
cmp
cltd
leave
das
inc
std
iret
fsubs
pop
cld
xorb
movsl
and
scas
cmp
pop
push
xchg
jle
fcom
mov
cli
sbb
push
sbb
xchg
js
mov
shll
ds
fidivs
inc
mov
adc
mov
xchg
dec
insl
push
lods
mov
mov
jnp
insl
pop
test
pop
lds
rclb
ja
mov
or
test
sbb
add
imull
mov
sub
loop
call
dec
xlat
jge
es
sub
jo
in
stos
pop
xor
sbb
cwtl
mov
ret
les
jle
js
push
cmp
daa
psrlw
mov
inc
outsl
xchg
enter
js
jae
sub
cmp
and
pop
jbe
sbb
ficompl
sub
divl
ret
sahf
stc
es
fwait
xlat
or
mov
scas
mov
mov
jns
scas
js
mov
adc
scas
ret
mov
leave
push
orb
push
pop
push
hlt
push
cs
jns
lret
cwtl
cwtl
cwtl
xchg
push
push
jmp
in
rorl
pop
cmp
dec
lods
lods
xrelease
repz
xchg
sub
mov
push
loop
popa
jecxz
and
in
shl
cmpsb
frstor
add
mov
mov
add
lods
or
rcrb
add
xchg
push
mov
xor
pop
pushf
pop
dec
out
jmp
test
push
jnp
pop
int3
inc
adc
pop
das
inc
pop
jmp
scas
gs
pop
jbe
inc
xchg
mov
sub
hlt
rsqrtps
insl
imul
iret
test
rcrl
and
xor
insb
sbb
sti
or
add
cmc
imul
and
outsb
and
in
inc
mov
sub
cmp
movsb
or
cmp
dec
loope
adc
xchg
lea
bound
icebp
jae
adc
push
pop
in
mov
sub
and
xor
dec
jnp
insb
cmp
int
dec
sub
xchg
xchg
mov
pop
jecxz
and
frstor
adcb
or
lock
push
cmp
daa
loope
inc
fisttpll
mov
inc
insl
adc
mov
adc
popa
int
pop
addr16
ftst
and
fimull
push
jecxz
call
xchg
inc
sub
mov
xchg
jne
jp
loopne
mov
test
jmp
xchg
inc
bound
jno
xorb
cmp
or
subl
mov
xor
mov
xchg
sub
or
add
leave
jp
stc
daa
and
loopne
insb
cmp
shrb
push
or
mov
subb
push
test
mov
insb
cmp
cmp
rorl
in
xchg
call
ljmp
jp
add
fistpll
int
into
or
in
mov
clc
cmp
int3
mov
inc
adc
or
sub
xor
minps
jle
rcll
push
mov
push
jbe
ds
in
push
jle
jmp
dec
xchg
arpl
mov
mov
test
xchg
jecxz
sub
inc
popf
cs
cwtl
sub
test
ds
cmc
jle
adc
inc
in
call
gs
or
xchg
mov
dec
imul
test
pop
dec
lock
mov
mov
in
xor
ljmp
mov
aaa
outsl
jnp
xchg
push
push
clc
push
xchg
imul
fimuls
add
lds
push
mov
push
out
in
aam
jl
push
bound
js
test
ficomps
mov
fnsave
stos
mov
test
imull
mov
loop
xchg
shlb
xchg
scas
xchg
aaa
pop
sub
pop
int
gs
dec
imul
aaa
stc
pop
cmc
mov
out
lock
or
pop
sahf
add
mov
jg
xor
sbb
iret
jg
aaa
xchg
pop
inc
icebp
in
xor
push
insb
mov
or
jbe
mov
nop
cmp
insb
in
xchg
xor
dec
sbb
dec
xchg
lock
jne
cmpb
push
push
rcrb
fistl
shrb
aas
call
sbb
std
fmuls
les
sbb
data16
in
lret
pusha
ljmp
add
dec
adc
cmp
push
stos
fs
mov
xor
cmp
xor
jno
iret
ret
test
jle
push
arpl
movsb
sub
add
xchg
insb
ds
jns
cmp
call
rcrl
dec
lock
sti
lcall
jb
mov
fnstenv
jb
or
and
xor
jae
xchg
jp
xorl
fucomp
gs
repz
pop
mov
cwtl
shrb
stos
negb
mov
test
mov
xlat
bound
imul
test
inc
out
mov
cs
pop
data16
xchg
into
mov
ss
mov
xchg
inc
outsb
call
imul
dec
xlat
lret
sbb
lock
lods
adc
repz
jnp
test
nop
mov
adc
dec
inc
popa
icebp
imul
pop
mov
xor
ja
mov
and
fisttpl
sub
daa
sarl
test
out
jl
push
xor
int
push
push
into
dec
arpl
cs
sti
adc
jnp
mov
xor
lret
pushl
enter
test
xor
popf
pushf
adc
aam
pop
arpl
sar
push
pop
rcrb
adc
jae
dec
dec
sbb
imul
pop
dec
adc
xchg
adc
add
or
cld
sbb
clc
pop
cmp
cltd
add
cwtl
movsb
jbe
adc
mov
movsl
pop
mov
js
out
rolb
jns
nop
cmc
add
mov
mov
shl
rcll
int3
rcl
xor
lahf
imul
imul
out
enter
jmp
test
mov
adc
insl
push
lock
or
movsb
or
scas
jecxz
adc
cwtl
imul
cli
pushf
sub
ret
jg
sub
arpl
xchg
movsb
xor
stos
inc
rolb
xor
jnp
mov
loope
push
fs
xor
sbb
clc
dec
mov
xor
xor
sbb
clts
ror
mov
jnp
ljmp
xor
jo
adc
and
nop
jge
add
cltd
add
pop
loop
movsl
adc
orl
inc
fimuls
lret
into
add
xor
xchg
inc
test
popf
xchg
out
mov
outsl
test
dec
cmp
inc
bound
dec
imul
les
dec
std
out
dec
jg
sar
loop
fadds
jno
push
andl
push
mov
dec
ret
jae,pn
iret
in
mov
jb
push
out
mov
inc
pop
inc
loopne
pop
mov
cmp
lock
add
daa
add
sbb
lods
sub
hlt
inc
in
stc
and
jns
into
mov
imul
call
ja
and
lcall
flds
rclb
popa
insl
nop
jo
test
cmc
fcomps
lds
jle
xor
pop
cmpsb
push
pop
jp
sub
mov
xlat
cmp
push
lea
mov
ffreep
xchg
fldenv
loopne
dec
lret
hlt
int
dec
inc
xor
pop
or
mov
int
and
pop
dec
add
ljmp
sub
adc
sub
out
jle
mov
gs
ljmp
sub
loopne,pn
adc
xor
inc
sub
movsb
ret
out
jp
fnstenv
std
cmp
aas
ss
inc
inc
ss
xor
out
dec
push
dec
repz
lret
mov
xchg
push
add
mov
mov
cld
scas
sub
fcmovbe
inc
into
ficoms
mov
xlat
loopne
mov
cmpsl
cmc
bound
out
adc
xor
xchg
or
gs
js
pop
bnd
mov
sbb
xchg
lret
rclb
push
mov
mov
mov
xor
lcall
xchg
or
adc
sub
fwait
cwtl
arpl
pop
lods
movsl
mov
jne
ja
mov
mov
nop
cmpsb
lods
lret
sub
in
mov
ror
xor
imul
cmp
sub
inc
adc
movsb
fisubl
insl
mov
rcr
pop
push
adc
addb
stos
or
mov
mov
xchg
jle
cmp
jmp
mov
sarb
adc
jae
dec
fdiv
lock
repnz
std
dec
cmpsl
fsub
dec
mov
pop
cmpsb
add
jg
rcr
adc
push
ljmp
shrl
xchg
jl
in
ret
mov
xchg
in
jp
sub
inc
loopne
call
mov
cmp
fidivs
outsl
sti
das
fcompl
loopne
je
adc
addr16
xor
outsb
or
or
rcrb
enter
push
xor
jg
gs
popf
cwtl
and
mov
mov
xchg
test
mov
int
pop
aad
repz
fdivrs
xchg
jmp
ss
in
test
jge
inc
or
pop
fnsave
push
cld
scas
xor
and
in
inc
push
inc
negb
bound
cmp
fcmovnb
std
cmp
imul
xor
nop
mov
inc
dec
pop
mov
jle
cli
aas
adc
sbb
or
cmp
or
adc
or
dec
sub
mov
imul
xor
cmpsl
cmpsb
cmc
stc
stos
loope
mov
ljmp
lret
or
lret
cmp
cs
jmp
xor
popl
es
rorl
dec
hlt
call
ljmp
stc
inc
xchg
mov
xchg
mov
jg
mov
jg
push
cmp
mov
ret
lods
mov
scas
xchg
xchg
nop
add
cmp
ret
mov
or
popf
ror
mov
mov
sub
mov
cs
cwtl
ljmp
xchg
fsts
pop
pushf
call
sbb
leave
jecxz
out
outsl
inc
fiadds
dec
and
in
sbb
lock
fiadds
fmuls
loop
inc
jno
jnp
out
ss
sbb
mov
ljmp
daa
lock
in
xchg
ret
mov
sbb
adc
aaa
ficomps
sbb
dec
push
cltd
pop
xchg
mov
pop
xchg
les
cld
add
push
imul
rolb
fldt
or
shlb
repnz
mov
aad
sub
xor
ljmp
daa
test
xor
icebp
mov
cwtl
pusha
pop
dec
cli
js
jge
adc
sahf
jg
lock
lods
push
mov
outsl
mov
jmp
stos
rorb
mov
jmp
out
loope
jle
in
insl
dec
inc
sti
addr16
mov
jp
sbb
imul
popf
xlat
shrb
cmp
push
or
sub
leave
loopne
je
sbb
and
ja
pop
shlb
pop
jbe
push
bound
ljmp
fsubp
ret
mov
inc
sub
jbe
dec
add
jae
jg
fsubl
xchg
dec
mov
cli
or
dec
mov
lret
rorb
push
pop
into
popf
xor
lds
mov
push
dec
or
cmp
dec
icebp
cmpsl
lock
dec
mov
adc
fwait
jle
popf
aad
and
stos
sbb
jl
mov
cmp
imul
push
mov
repz
sbb
ljmp
out
stos
xchg
xchg
bound
inc
mov
or
push
pop
fcoms
outsb
xchg
xchg
addl
dec
inc
add
test
cwtl
lret
int
bound
in
xor
sub
in
xor
adc
mov
jmp
sub
pushf
fmull
jbe
cmp
pop
loopne
dec
nop
mov
jno
xchg
pop
ljmp
push
repz
pop
pop
adc
ja
mov
sub
repnz
andb
enter
dec
into
jg
lea
mov
stos
dec
inc
in
ss
aaa
repnz
xchg
aas
mov
inc
adc
dec
lock
outsl
mov
sbbl
ret
call
mov
lahf
add
cmp
arpl
imul
pop
mov
mov
std
mov
in
dec
repz
sbb
mov
inc
jo
xor
push
sub
fidivrs
adc
imul
dec
and
bound
out
push
sub
pop
jo
mov
aad
push
repz
cmp
int3
pop
push
sub
and
pop
dec
icebp
icebp
xchg
popf
ljmp
imul
leave
inc
clc
push
cmp
loop
out
jge
cli
sarb
in
jg
sbb
inc
cld
sub
add
test
push
push
inc
inc
in
cli
lds
shll
lea
fmuls
das
xchg
daa
xor
rcrl
icebp
test
loop
or
icebp
push
xchg
dec
popf
dec
pop
push
inc
out
inc
adc
mov
pop
inc
fldt
aam
sbb
jge
pop
jle
lcall
stos
cld
cmpsl
sarb
cmp
cwtl
mov
mov
jp
mov
in
sarb
je
das
cmpsl
hlt
mov
push
pop
fdivrl
dec
in
scas
push
test
pushf
xor
push
rcll
test
rol
popf
mov
push
andl
cli
push
add
ljmp
mov
inc
xchg
mov
adc
sub
sub
rorl
movsl
insb
or
inc
mov
xchg
lds
sbb
lock
into
jo
cmpsb
mov
scas
xorb
pop
cmp
sub
adc
fadd
xchg
cs
jb
xchg
lea
std
in
jb
in
inc
imul
pop
dec
push
scas
sbb
adc
clc
lds
out
ret
scas
mov
jmp
dec
call
in
insb
outsb
lret
jnp
in
or
fs
iret
xchg
ret
adc
int
fisttpll
in
inc
je
jne
shlb
or
xor
scas
jns
nop
movsb
pusha
leave
lods
cmp
mov
ret
dec
lret
loop
ja
gs
inc
mov
loop
sub
or
mul
shlb
arpl
push
outsw
xchg
jae
loop
jl
jne
push
add
dec
sub
push
adc
cltd
stc
push
xor
sahf
test
aam
cld
dec
stos
sbb
mov
mov
int3
dec
in
add
enter
stos
add
pushl
scas
movl
mov
das
xchg
inc
je
aaa
and
sub
lret
jecxz
jbe
inc
hlt
jle
adc
inc
popa
hlt
fidivrl
fimuls
adc
stos
mov
dec
sahf
lds
and
pop
push
adc
cs
xor
mov
mov
push
dec
iret
or
fisubs
nop
jb
lret
dec
test
imul
dec
push
hlt
inc
les
divb
mov
mov
ret
cmp
jae
sub
test
mov
stos
jge
mov
pop
clc
in
sahf
in
dec
sbb
jae
push
std
lahf
dec
cmc
aaa
loope
aaa
int3
test
xchg
ret
mov
call
addr16
sbb
fyl2x
stos
mov
or
inc
push
inc
loop
xlat
pushf
fnstsw
push
mov
js
mov
addr16
addl
cmp
jae
in
jne
pusha
sub
and
jo
pushf
jno
mov
clc
hlt
leave
jge
popf
ljmp
cmp
jo
test
cmp
lcall
or
scas
mov
outsb
inc
and
outsl
out
aaa
mov
sub
mov
inc
outsl
subl
mov
loopne
loop
sarl
inc
fidivrl
inc
pushf
push
gs
sbb
lret
mov
scas
sahf
cli
jge
jb
dec
xor
fimull
sub
or
jbe
add
xchg
out
into
movsb
mov
add
inc
pusha
sub
bound
fcomip
mov
xchg
ret
dec
inc
sub
mov
dec
sbbl
xor
insl
add
pushf
lock
mov
push
mov
mov
cmp
sub
push
jns
fnstcw
or
cwtl
jle
lds
xchg
or
xchg
jp
fcomi
lods
dec
pop
adc
inc
pop
pop
stos
cmp
xor
insl
rolb
mov
cmp
pop
adc
dec
sub
test
jno
push
push
jp
mov
and
cmp
or
push
icebp
imul
imul
cmp
ja
inc
and
pop
adc
mov
loop
push
mov
mov
test
mov
sub
mov
jmp
scas
fildl
mov
mov
loope
loope
ljmp
xor
popf
push
mov
mov
xchg
fists
in
icebp
jg
ret
mov
mov
ret
and
push
xor
mov
loop
sub
or
dec
cmpl
ret
pusha
mov
movsb
jnp
fcmovne
movb
mov
mov
cmp
jns
sub
stc
cs
lock
jns
pop
xor
mov
jl
xlat
dec
movsb
sub
jmp
je
dec
sbb
and
add
sub
fwait
out
jp
and
cs
ljmp
xorb
lock
or
icebp
ret
int3
mov
cmp
xor
loope
dec
mov
jo
inc
ret
test
out
aas
dec
test
xchg
mov
jbe
mov
into
lods
push
or
xor
jmp
mov
movsl
js
cmp
mov
clc
push
movsb
and
xor
xchg
add
out
xlat
add
int
add
inc
push
in
mov
das
dec
cmp
jle
xchg
outsb
pop
and
fnstsw
roll
dec
cltd
ret
je
test
into
xchg
movsl
scas
pushf
and
leave
push
dec
in
dec
int3
mov
push
stos
mov
test
loopne
dec
jl
xchg
mov
xor
repnz
or
js
push
lods
out
and
aaa
mov
out
inc
outsl
fisubl
cmpsb
imul
es
push
imul
xlat
push
sub
mov
out
inc
push
push
pop
stos
mov
cmpsl
xchg
sahf
push
ljmp
js
mov
sahf
mov
jo
add
lahf
cmpsl
jg
adc
jle
pusha
mov
pushf
nop
inc
inc
fisubrl
sahf
jae
push
aam
jne
xchg
sub
cmp
imul
mov
repnz
push
aas
clc
xchg
outsb
fs
into
lcall
xlat
cmp
and
sbb
icebp
xor
fmull
push
dec
push
mov
sbbl
jge
mov
dec
call
sub
or
mov
loope
push
xor
nop
shlb
cwtl
dec
add
fs
jmp
dec
repz
sbb
push
ds
push
pushf
or
js
mov
jg
adc
pop
cmp
pop
adc
mov
jne
popa
jle
dec
mov
in
in
mov
mov
push
lods
icebp
fisubrl
inc
lret
mov
sar
adcb
imul
or
add
mov
adc
mov
jno
or
sbbb
hlt
jno
lods
iret
aas
add
mov
cmp
xor
push
loop
repnz
inc
xchg
sti
or
adc
lahf
pop
movsb
adc
adc
jbe
jnp
imul
in
inc
test
xor
jns
cli
fisubrl
push
jno
push
lret
sbb
in
push
sub
repz
add
mov
inc
sarb
andb
iret
cmc
add
call
pop
in
and
push
int
stos
inc
fdivrs
mov
aaa
scas
jne
gs
inc
addr16
int
fadd
ds
push
push
inc
cmp
mov
int3
je
jmp
aas
sbb
xor
loopne
roll
popf
sub
into
dec
pop
lods
and
sub
loope
orl
adc
and
inc
xlat
add
xchg
test
jp
mov
ds
lahf
xchg
aaa
sbb
lret
divb
mov
in
int
mov
jbe
arpl
jb
notl
outsb
loope
lock
inc
mov
jns
rcll
pop
loop
sbb
mov
mov
add
adc
unpckhps
jmp
pop
movsl
push
loope
ffreep
out
cld
mov
jg
push
rcl
add
loope
cltd
js
imul
xor
jge
sbb
mov
and
pushf
dec
mov
push
push
fwait
popa
and
mov
jb
in
or
push
scas
mov
cmp
lret
icebp
adc
sbb
call
cmp
enter
lret
loop
jle
fcmovnb
mov
test
mov
jae
lcall
enter
cmpsl
jns
inc
sbbl
jno
movsl
bound
leave
hlt
orl
xor
fdivrl
pop
inc
pop
fstl
cmp
es
mov
push
icebp
out
mov
add
sub
loopne
stos
ss
les
lods
xchg
ret
subb
dec
stos
pushf
enter
jb
or
leave
mov
inc
cmp
ja
push
pop
rcr
test
jmp
out
in
sub
das
hlt
mov
sbb
adc
push
insl
je
movsb
sbb
jae
cltd
out
call
fcmovnb
push
in
stc
jno
mov
adc
lock
lcall
dec
sub
ss
stos
adc
lcall
dec
enter
pop
cli
outsl
lea
push
imul
aaa
hlt
into
dec
imul
add
test
adc
aad
adc
and
repnz
gs
lcall
ror
fdivl
scas
popa
dec
fsubrs
pusha
rolb
es
aaa
icebp
into
or
jns
nop
fldcw
dec
loopne
add
and
fs
push
xlat
pop
and
jl
ds
mov
or
lods
jg
cmp
repnz
popa
aaa
fwait
jnp
dec
in
outsb
mov
out
andl
jne
into
rclb
divl
jmp
push
sbb
out
in
leave
cmp
pop
into
jne
mov
jnp
push
out
aam
pop
sbb
test
loope
lods
mov
jne
jbe
scas
sbb
cmp
and
std
or
cwtl
cmpsl
sti
jnp
or
arpl
cmp
mov
pusha
jnp
arpl
jg
mov
fcoml
add
sti
mov
push
mov
out
mov
cmpsb
addr16
add
ret
pop
and
imul
daa
push
fwait
cmp
xchg
jnp
out
inc
icebp
movsb
leave
test
leave
adc
jo
xor
sbbb
jecxz
mov
mov
idivb
ret
scas
fs
nop
aas
imul
jg
inc
adc
icebp
insl
pop
jne
sbb
cmc
ss
cltd
imull
test
and
sub
dec
dec
jb
popa
or
fnstsw
adc
ja
ljmp
adc
daa
rep
loop
mov
inc
fistps
jmp
dec
jb
ret
fmulp
xor
hlt
mov
jo
jb
xor
sbb
pop
ss
pop
rcr
mov
bound
pushl
mov
test
sti
ret
pop
outsb
dec
push
mul
push
jne
and
mov
test
or
stos
stos
mov
cs
sbb
jnp
pop
nop
cmp
sub
jg
roll
test
jo
in
jmp
mov
movsb
cmp
enter
dec
pop
into
fisubl
testb
pop
jne
mov
cmpsb
jg
je
dec
mov
ljmp
sub
lea
fsubr
popa
pop
cmp
push
mov
stos
insl
pop
cld
shll
or
pop
std
mov
sub
lea
adc
rolb
ffree
ljmp
cmp
insb
out
imul
out
xor
jae
daa
mov
xor
jno
sub
test
test
or
mov
sahf
sbb
xchg
shll
jo
sub
add
mov
jp
stos
leave
pop
rcrb
lea
ret
rclb
mov
cmc
mov
xchg
adc
xchg
repnz
lret
pop
sahf
mov
inc
testb
decl
xor
dec
insb
or
dec
add
push
xchg
xchg
loop
inc
cmp
jae
inc
xchg
or
push
xchg
in
push
pop
dec
dec
xchg
fwait
ja
fldl
outsl
jo
lcall
enter
shlb
or
jl
jnp
xchg
in
ret
test
das
cmc
sahf
sub
popa
pop
int3
mov
outsb
inc
stc
jmp
xchg
mov
adc
das
and
in
pushf
dec
pushf
stos
xor
test
repnz
test
lods
or
punpckhdq
js
add
push
or
fadd
push
pop
mov
pushf
jp
hlt
fs
push
fists
test
push
rorb
jp
stos
sub
sahf
ss
js
gs
movsb
movb
fdivs
jnp
in
xchg
cwtl
pop
clc
mov
cmpsl
cmp
data16
out
pop
push
test
push
lea
aam
nop
push
jnp
lock
cmp
push
ds
jae
repnz
mov
push
dec
jnp
decb
ja
jns
popa
mov
sbb
mov
repz
mov
and
adcb
jp
inc
fcoms
test
pop
lret
xchg
cwtl
pop
sbb
aam
jg
js
loope
xor
fsubl
das
mov
cmpsl
mov
cmpsb
jo
add
push
push
stc
mov
dec
ret
inc
push
xor
hlt
jns
in
stos
and
aas
cmp
cmpb
nop
clc
mov
loop
fwait
mov
ja
call
inc
sbb
mov
lock
popa
popa
pusha
mov
jge
ja
daa
push
mov
shlb
imul
mov
dec
mov
jg
jo
lret
inc
fmull
sti
or
cmc
xlat
push
xor
xchg
mov
int3
cmpsb
insb
in
imul
sub
ffreep
fistpll
jno
std
fptan
push
or
gs
sbb
inc
jne
push
rorl
or
sarb
push
push
push
and
outsl
aas
stc
mov
lret
and
mov
int
jmp
mov
mov
cwtl
add
dec
sbb
jno
repnz
pushf
sub
lods
out
test
fnsave
addr16
ss
fsubr
adc
xlat
scas
imul
jb
dec
test
test
mov
xor
inc
lock
popa
mov
mov
mov
xor
xlat
mov
lods
mov
or
mov
adc
sbb
mov
loop
mov
mov
adc
jnp
mov
xchg
mov
mov
shrl
aas
push
imul
fisttps
cmp
arpl
push
push
daa
fidivrs
add
mov
xchg
add
mov
pop
jge
fimull
pop
push
mov
xchg
xchg
lods
call
fadds
repnz
jns
push
movsb
in
jno
jns
mov
xchg
ret
test
sarl
int3
rcl
mov
push
call
fmulp
pop
lock
scas
mov
into
mov
fldl
jle
jne
push
into
jge
outsb
shrb
xor
cmpsb
int
xchg
imulb
xchg
jbe
jg
cmp
ret
mov
lret
nop
push
xlat
adc
fwait
out
inc
mov
pusha
aad
xor
inc
jnp
scas
addr16
ret
pushf
test
push
lahf
or
adc
nop
or
roll
and
cmp
push
mov
pushl
mov
jge
stos
jne
insb
mov
pop
jbe
psrlq
mov
xchg
imul
flds
in
and
cs
mov
jg
xchg
mov
mov
out
jp
gs
bnd
fst
sub
mov
xlat
dec
push
jmp
sahf
pusha
popf
add
inc
sub
scas
mov
aad
push
inc
mov
and
dec
sub
xchg
push
push
stc
into
stos
jmp
orl
pop
fnstenv
popf
incl
jnp
pop
repz
std
mov
jl
in
sub
cmp
mov
mov
fildl
mov
add
aaa
sbb
cmp
cmp
lret
jmp
stos
pop
pop
cmpsb
xchg
movsb
lret
push
cmp
jo
dec
xor
jae
dec
pop
test
sub
das
pop
popa
mov
shll
call
sti
mov
out
add
lcall
mov
roll
mov
das
xor
inc
adc
in
sbb
call
cmp
mov
add
push
int3
int3
int3
pop
cmp
add
push
dec
adc
fidivrl
sbb
js,pn
or
jle
sub
fwait
cmp
mov
jae
ficoms
sarb
adc
mov
cltd
loopne
inc
inc
inc
repz
and
push
cs
cmc
outsb
rclb
stos
std
dec
mov
jmp
pop
outsl
scas
push
xchg
mov
insl
sub
xor
add
decl
mov
scas
xor
test
mov
scas
mov
lods
mov
cmp
push
call
and
and
movsl
ja
test
add
push
mov
jmp
filds
addr16
and
outsl
inc
add
xchg
gs
lods
ficompl
xorl
dec
ret
cmp
or
fnop
jmp
mov
js
loopne
insl
nop
rol
fldenv
out
ss
lock
mov
xlat
and
aas
mov
jp
in
mov
push
dec
xchg
dec
adc
or
xor
cs
mov
cld
jmp
inc
add
jb
xorb
rclb
pop
cmpsl
repnz
js
lods
push
mov
cs
gs
mov
sbb
cs
or
add
cmp
mov
adc
add
icebp
cs
or
jnp
push
test
jg
jb
and
popf
pop
in
sbb
mov
jbe
cs
cli
fisttpl
out
sbb
sub
cmp
imul
stos
cmp
inc
ljmp
sub
jp
inc
sub
cmp
inc
andb
sub
fs
mov
cwtl
les
gs
xchg
sarl
cmp
in
inc
scas
add
fstpt
pop
xchg
hlt
clc
data16
sbbb
xor
jp
xchg
imul
or
mov
cmpb
int
out
cmp
jg
jle
and
sahf
pushf
test
or
rorl
xor
nop
in
jecxz
sub
fcmovbe
pop
in
cmp
dec
pusha
jnp
adc
xor
dec
insb
add
or
rolb
jmp
pop
or
into
in
sarl
ja
xor
sub
jnp
clc
jecxz
loopne
jg
mov
test
ljmp
jnp
outsb
inc
mov
inc
and
cmp
inc
mov
and
jno
aas
jno
mov
dec
dec
add
fistpll
mov
movb
lahf
and
and
divl
jle
pop
mov
pop
leave
arpl
and
push
insl
jle
cmp
cmpl
push
addb
test
sbb
enter
ss
pop
out
and
mov
mov
addl
jae
divl
ss
fcompl
pop
push
aas
fsubrl
jg
inc
push
xchg
pop
sub
fs
lods
cmpsl
roll
int
aam
fimuls
push
xchg
outsl
or
pop
imul
mov
cmpsl
stc
fwait
addl
into
pop
into
outsl
aam
cmp
punpcklbw
enter
fdivrl
fwait
popa
xorb
mov
les
mov
popf
shl
lock
xchg
orb
lret
cmpsl
pop
xor
out
cmp
bound
fdivl
test
decb
jnp
pop
clc
or
pop
je
xchg
das
xchg
push
sbb
push
jg
sub
pop
neg
into
cmp
mov
mov
cmp
lea
push
inc
movsl
test
in
pop
pop
sarb
arpl
es
jecxz
inc
addr16
add
inc
and
fisubs
daa
jno
ficoms
ficomps
hlt
ljmp
push
fidivrs
fidivs
xchg
push
sub
or
mov
jg
gs
or
pop
add
jp
cmc
aad
fcmovb
mov
outsl
pop
mov
loopne
mov
jo
mov
sbb
imul
out
or
ja
adc
bound
nop
cs
fsubrs
mov
dec
jnp
inc
xor
or
mov
lret
dec
js
or
sbb
pushl
add
icebp
jbe
jnp
jno
xchg
test
lea
cmp
or
push
lret
test
loop
mov
cmp
push
and
icebp
fdivl
xor
push
roll
and
rcll
xchg
xchg
sbb
repnz
sbb
push
mov
mov
xorl
push
cmc
arpl
sub
nop
or
mov
cmc
rol
dec
inc
shrb
xor
insb
sbb
dec
xorl
jl
leave
jns
addr16
dec
add
mov
jecxz
xor
stos
iret
xor
std
and
mov
jbe
popf
push
les
sub
xor
push
cld
adc
fadds
fisubs
in
cltd
inc
fdivr
out
out
push
cmp
ljmp
dec
hlt
dec
push
push
fdivr
mov
cld
cmpsl
pop
jmp
sbb
cmp
mov
pop
and
adc
jo
xchg
sub
lea
pop
in
jle
xchg
xchg
inc
adc
stos
adc
fldcw
push
mov
je
xor
in
pop
mov
jo
push
jmp
hlt
inc
rclb
inc
pusha
fcom
lret
and
jno
jnp
call
imul
cs
aaa
mov
mov
jecxz
test
testl
callw
dec
movl
icebp
test
mov
call
std
test
das
cmp
or
pop
xor
repnz
ja
sbb
ljmp
add
dec
loopne
cmp
push
or
movsl
mov
es
das
daa
out
mov
in
loopne
or
mov
xchg
push
mov
sbb
cwtl
mov
jns
or
lods
adc
jno
fnstsw
jnp
loopne
fnstenv
mov
mov
cmp
addl
jae
mov
sbb
mov
inc
ja
inc
mov
jbe
push
adc
xor
ret
cmp
add
sub
push
mov
jl
push
dec
xor
cwtl
xor
jnp
les
sbb
add
test
jb
insl
cwtl
insl
mov
push
orl
loop
neg
xchg
adc
cwtl
xor
xchg
jg
pop
pop
jle
ss
jne
inc
loop
pop
push
dec
push
or
sbb
pop
xor
ret
sbb
ja
flds
and
lods
xchg
inc
pop
jnp
cmp
sub
pop
test
dec
enterw
outsb
sbb
cmp
xchg
pop
mov
leave
push
in
dec
rcr
sarb
out
stos
imul
xchg
jb
gs
cmp
data16
enter
and
ror
cmp
inc
shlb
dec
inc
scas
hlt
and
push
sbb
ss
add
imul
nop
cmp
cmp
int
pop
ret
out
int
sbb
jg
xlat
insb
repz
cld
out
mov
xchg
fisubrl
lahf
ret
xorb
stos
push
xor
pop
js,pn
bound
icebp
mov
push
sub
push
sub
repnz
scas
jmp
push
adc
push
add
cmp
add
dec
shrb
mov
in
xchg
dec
sub
icebp
xchg
cmpsb
out
pop
aad
cmp
scas
jnp
and
cmpsl
scas
or
cld
ljmp
in
xchg
dec
mov
lret
incl
sub
loop
pushf
mov
dec
gs
sahf
arpl
fmuls
push
cmpl
mov
xor
stc
out
leave
pop
sbb
js
repnz
mov
mov
push
test
sar
scas
stc
jp
cmc
adc
movl
or
jb
nop
enter
or
dec
fwait
imull
insb
enter
push
ja
xor
movsl
sbb
mov
xor
sub
mov
jnp
push
lcall
mov
fists
lcall
sub
in
jnp
jl
mov
or
es
ret
push
fcompl
mov
and
jge
cmp
jl
test
cmp
inc
inc
jge
sub
mov
pop
or
insl
enter
mov
out
cli
movsb
xchg
fsubrs
jp
jg
mov
imul
push
push
inc
popa
rcr
jp
push
inc
jg
add
loop
mov
mov
loop
pop
aad
fisttpll
add
lcall
fdivrs
sub
and
dec
jge
pop
cld
cwtl
loope
arpl
jmp
adc
or
call
in
cmp
adc
mov
sahf
test
xor
popf
jp
xchg
and
es
aaa
fwait
ret
and
js
and
or
stos
dec
dec
imul
jmp
outsb
mov
pusha
or
popf
subl
pop
divl
jecxz
movsl
jns
mov
out
outsl
bound
daa
jle
push
xchg
mov
xchg
in
jns
and
pop
hlt
bound
xor
mov
sbb
test
out
das
push
loope
in
pop
test
out
and
popf
jbe
iret
test
dec
mov
jg
loope
or
and
pop
mov
nop
mov
jge
nop
mov
ss
dec
jge
in
ss
or
xor
pop
movsbl
mov
xor
xor
gs
xor
push
push
cli
xchg
imul
mov
shl
in
cmp
cmp
imul
dec
sub
or
sbb
cmp
outsl
mov
mov
sbb
cmp
sub
push
cmp
sbb
jp
insl
pop
rcl
rorl
bound
aam
lcall
mov
ror
popl
into
insb
bnd
imul
scas
or
imul
jp
call
xor
jge
stos
jb
je
mov
jg
dec
movsb
sub
sbb
pop
lea
stos
and
sbb
xor
outsb
repnz
ja
je
loopne
pop
mov
testb
pop
ss
add
cmp
or
dec
push
test
rcrb
cmp
push
bound
jp
inc
adc
jecxz
sbbl
cmpsb
xchg
fisttpl
cmp
loopne
cmp
scas
insl
leave
lret
cmp
add
jne
mov
push
xor
fildl
or
sub
daa
cmp
loopne
mov
cmp
outsl
leave
ud0
fistpll
and
stc
xor
mov
mov
fstpl
out
je
sbb
cmp
mov
lea
out
lea
cwtl
push
fsubl
cmp
jb
int
into
cmp
sub
fdivrl
push
mov
es
lret
inc
jns
clc
jno
out
enter
mov
mov
hlt
mov
or
or
clc
jmp
les
xor
jp
insb
push
xchg
mov
xor
jle
xor
xor
out
pop
cmp
xchg
dec
jbe
mov
jle
mov
or
les
cs
cld
xchg
scas
in
or
out
fs
pop
insb
aad
daa
ret
jnp
xor
mov
xchg
sub
add
xchg
dec
mov
dec
int3
out
add
inc
cs
aas
mov
cwtl
xor
into
cmp
mov
fdivs
jno
subl
lods
push
fcomps
test
addb
je
mov
in
lods
mov
movsb
test
clc
xchg
fisubrl
out
aad
cli
add
inc
fstpt
push
hlt
mov
xor
mov
adc
aam
and
jns
sbbl
ja
cli
lds
outsb
sbb
and
popf
lcall
mov
pop
es
ss
fsubr
imul
dec
notl
cmp
imull
sbb
xor
shll
mov
push
ss
jnp
sub
xchg
inc
js
push
xchg
xchg
ljmp
int3
xorb
pop
insb
enter
inc
jno
test
mov
pushf
inc
sbb
cld
mov
jmp
jmp
mov
enter
ds
call
subb
xor
add
jbe
pop
or
sbb
mov
push
sbb
fs
test
lret
pushf
sub
pop
push
mov
sub
cmp
inc
aas
in
and
sbb
xchg
stc
aam
xchg
push
add
cmp
cmp
xchg
arpl
cmpsb
rorl
in
imul
jecxz
xchg
lea
subl
and
inc
add
inc
xor
stos
push
pushf
push
dec
roll
sarl
stos
icebp
js
jmp
push
sbb
jo
jbe
inc
xchg
adc
iret
jmp
pop
adc
lea
mov
pop
push
adc
pop
sbb
cmp
imull
lea
push
mov
cmpsl
sub
mov
aaa
push
addl
adc
cltd
mov
lea
in
sub
ficompl
push
jecxz
mov
clc
jnp
pop
cmc
mov
aaa
adc
push
xor
dec
adc
adc
xor
into
jl
pop
xchg
sahf
mov
mov
or
clc
jl
into
lret
mov
sbb
hlt
in
movsb
cwtl
out
fstpt
cmpsb
movsl
xor
dec
out
xchg
mov
push
test
cmp
ja
inc
cmp
xor
lods
mov
mov
xchg
jo
stos
jl
or
pop
movsl
cmpsb
mov
inc
rcr
scas
push
sub
sbb
xor
repnz
setne
pop
xchg
sbb
xlat
sub
loopne
ret
sti
mov
roll
dec
sub
pop
xchg
add
dec
out
call
push
in
or
ljmp
aam
pop
mov
jg
outsb
loope
fldt
data16
dec
mov
push
xorb
sbb
orl
es
cmp
lods
push
xchg
inc
sarl
jns
das
addr16
or
jmp
jne
lods
pop
jne
mov
mov
adc
loope
popf
and
push
adc
mov
pop
fucom
aaa
or
add
lahf
aaa
arpl
lea
cmp
cmc
lret
or
add
fidivrs
add
mov
in
jge
cmp
lahf
sbb
vpsubusw
xchg
into
in
lods
loope
jmp
mov
jg
outsl
loope
fcmove
mov
adc
sti
xlat
dec
cmpsl
cmpsb
lahf
pushf
jg
nop
lcall
xchg
adcl
test
test
test
xchg
test
mov
sbb
test
leave
add
inc
sarb
mov
xor
jnp
sahf
or
sbb
pusha
dec
mov
adc
xor
lahf
jg
mov
stos
nop
mov
jp
loope
jo
xchg
call
mov
dec
sub
push
or
out
ret
ret
adc
std
mov
xchg
pop
cmp
scas
enter
jecxz
mov
lds
dec
loop
in
jno
inc
jno
mov
outsl
cltd
ds
cs
mov
iret
sti
mov
outsl
hlt
cs
mov
stc
fstpl
testb
ljmp
lret
fsubrl
add
out
imul
sub
out
test
push
popf
pop
push
sbb
xchg
ret
jo
insl
fs
mov
loopne
test
mov
jle
mov
imul
adc
push
mov
mov
cmp
mov
insb
pop
rol
and
sbb
pusha
test
and
push
rorl
cmp
shll
xor
rcrl
or
mov
mov
or
in
pop
xor
outsb
test
int
shr
setbe
stc
fmul
leave
ficomps
pop
ja
dec
fisubs
dec
into
inc
bswap
push
jecxz
xor
in
das
mov
mov
push
xchg
in
scas
stos
jne
xchg
xchg
dec
add
call
xlat
test
nop
insb
pop
mov
xchg
aaa
mov
aas
ja
ds
aas
sub
fisubrs
mov
mov
mov
jb
push
jb
sub
or
mov
test
push
jns
jl
test
mov
pop
mov
test
xlat
push
jmp
out
push
sbbb
in
or
out
cwtl
iret
mov
das
xchg
in
gs
movsb
dec
insb
lea
addr16
mov
lret
xchg
jbe
data16
sbb
add
dec
fldl
cltd
mov
adc
xor
push
outsb
frstor
cmpsl
sbbb
xchg
inc
xchg
jecxz
leave
xor
mov
mov
inc
repz
pop
jmp
and
jl
xchg
fisubl
test
fcompl
daa
push
ja
pusha
loop
inc
or
cli
dec
lea
adc
mov
insb
insb
and
ret
add
std
sti
cmp
xor
lcall
rcrb
push
xchg
push
or
mov
rorl
int3
sbb
mov
push
fs
or
jmp
mov
inc
push
inc
mov
cmp
push
fnstcw
in
sti
sbb
ret
push
mov
jge
scas
sub
inc
popa
daa
mov
call
repz
orb
xchg
daa
jns
out
xchg
add
push
loop
dec
dec
sbb
dec
std
rcrb
pop
jno
or
hlt
fwait
adc
cs
pop
lea
mov
fisubrl
negb
push
push
or
div
aad
das
lcall
sti
dec
out
ja
stos
mov
cmp
mov
mov
sahf
cld
leave
sub
mov
pushf
push
lret
jmp
xor
scas
jle
ret
ja
mov
pop
push
rcl
xchg
jo
pop
lahf
fmull
sbb
or
sub
xor
sbb
cwtl
jle
repnz
js
into
aaa
mov
bound
ja
mov
scas
loopne
or
lret
leave
aas
std
cmp
jns
jns
movsb
roll
outsl
add
jb
jl
ffree
jp
test
or
mov
ficompl
pop
out
xchg
and
cltd
pop
ret
ss
add
dec
jns
cltd
lcall
lret
das
xchg
dec
aad
push
ja
mov
test
dec
fwait
cmp
in
lods
jb,pn
or
pop
cmp
int3
jl
xor
adc
addr16
in
push
push
jne
aas
dec
inc
xchg
adc
or
mov
jmp
xor
push
aaa
mov
cmp
out
js
or
test
dec
js
mov
mov
dec
mov
jg
push
mov
mov
jle
push
test
push
mov
and
rclb
add
hlt
xchg
in
and
mov
xor
push
jbe
and
popa
imul
push
or
out
mov
les
in
xchg
sbb
add
test
cli
movsl
mov
mov
pop
xchg
rorb
jne
aas
or
cmp
xor
retw
sub
sarl
mov
lahf
sarl
mov
sahf
out
sub
es
bound
test
dec
jle
add
mov
xor
popf
dec
adc
mov
jno
fsubl
mov
andl
mov
mov
les
xor
mov
xor
or
sbb
mov
movsl
xor
lcall
dec
mov
push
repz
sar
stc
add
and
inc
lcall
aaa
es
pop
mov
dec
out
cmp
imul
dec
or
push
sbb
insl
insb
pop
jo
and
nop
rol
push
xchg
adc
les
out
cld
push
icebp
or
push
and
imul
aaa
gs
fcmovnb
es
das
push
repz
pop
imul
dec
mov
add
jnp
cmp
bnd
xchg
das
movsb
outsb
cmp
xor
push
mov
cwtl
ja
jo
scas
and
call
push
jp
clc
jmp
cmp
fucomi
ss
incl
fsub
xchg
jmp
idivl
mov
jo
aam
test
and
mov
nop
cmpl
adc
dec
xchg
mov
movsl
in
mov
mov
sbb
cmc
inc
gs
jg
jne
mov
pop
imul
mov
bound
jbe
dec
neg
add
sub
sbb
jl
fstl
push
mov
xor
in
movsb
je
mov
fmuls
mov
outsl
mov
inc
mov
test
rol
negb
scas
mov
imul
dec
popa
loop
mov
mov
imul
lcall
mov
adc
pop
mov
mov
cmp
jg
lock
inc
jne
push
add
push
sbb
mov
jo
mov
ret
pop
pop
dec
clc
jb
out
mov
cmpl
clc
enter
jno
incl
mov
dec
push
jne
sub
addb
loope
mov
push
stos
imull
mov
inc
cli
mov
dec
xchg
popf
in
fwait
pushf
push
push
or
fucom
loope
adc
ss
mov
cmp
xlat
fbld
mov
out
xchg
cmpsb
faddl
sbb
mov
std
nop
adc
icebp
iret
out
sub
jp
cmpsl
inc
cmp
pop
mov
js
lahf
les
hlt
push
lock
sahf
mov
adc
decl
mov
fcmovnbe
cmpsl
mov
xchg
fildll
adc
cmp
inc
sub
xchg
dec
cmp
adc
adc
and
into
repz
outsb
jb
in
js
cmp
mul
jno
and
dec
or
aam
cmp
sub
or
ret
jmp
je
push
imul
xor
enter
gs
aas
repnz
shll
push
fwait
ljmp
mov
addr16
add
dec
rcrl
xor
lock
or
mov
je
push
les
pop
xchg
nopl
ja
xchg
push
fsts
dec
xchg
das
add
ret
xchg
mov
adc
enter
push
mov
lods
stos
sub
out
ljmp
iret
scas
je
mov
and
jp
gs
or
pop
pusha
stos
mov
xlat
in
cmp
cmp
pop
inc
push
jmp
int
push
xor
decb
push
aam
das
add
cwtl
mov
mov
test
mov
dec
pop
mov
les
lods
jge
lea
daa
cs
mov
push
cli
push
mov
dec
ss
fsubl
repnz
xor
stos
in
sbb
in
jecxz
xchg
das
jb
inc
lods
push
and
mov
xchg
dec
jno
xor
es
jg
dec
xchg
mov
and
jae
divb
add
out
ror
lds
out
stos
or
lock
inc
push
jp
or
enter
fisubrl
call
inc
xor
add
fcoml
test
or
aam
push
cwtl
xchg
or
ret
ret
insl
icebp
jnp
in
subl
jg
jb
scas
sahf
cwtl
cli
outsl
enter
jae
jge
jno
gs
push
mov
aaa
inc
stos
mov
or
insl
cwtl
add
mov
mov
xchg
cld
xchg
jge
enter
push
ss
out
aam
jb
dec
punpckhdq
leave
sbb
cs
adc
xor
jae
imul
aam
cmpsb
daa
in
loop
lock
int
jb
lret
fld
sub
jo
adc
xor
adc
add
iret
or
das
push
dec
push
fiaddl
and
in
adc
ljmp
mov
das
mov
std
push
cltd
data16
fsubrs
outsb
test
cmc
out
aam
cltd
mov
mov
ret
scas
icebp
adc
cmc
xor
mov
push
inc
sbb
xor
adc
insl
push
shrb
sub
outsl
es
jae
ja
nop
xchg
xchg
mov
sub
and
js
push
sti
test
jmp
aas
and
jmp
jle
cwtl
sarb
shl
dec
ss
repnz
in
mov
dec
jl
sub
ret
pop
scas
int
daa
loope
mov
add
in
cmpsb
stos
adc
pop
mov
adcl
pop
rcll
xchg
push
divb
jp
xchg
push
roll
in
cmp
test
aad
pop
mov
pxor
mov
cmp
sar
daa
sbb
hlt
cs
lock
jg
cmp
xchg
stos
jns
dec
sbb
push
mov
insb
loop
ret
jns
fisubl
jmp
xor
aas
mov
imul
call
ret
sub
adc
jns
push
and
xchg
or
aad
adc
lods
outsb
jmp
add
imul
mov
ss
call
les
and
gs
xor
int3
jmp
xlat
in
gs
or
add
add
mov
je
test
stos
and
jecxz
xor
xor
insb
outsb
push
pop
jb
int
push
lods
jg
jo
mov
mov
add
decl
hlt
cmpsb
jns
in
and
cmpsl
xor
sub
popf
pinsrw
js
mov
push
sbb
cmpsl
inc
clc
and
mov
jp
insl
addb
loope
jle
lods
clc
lock
imulb
xorps
push
xchg
icebp
cmp
shlb
adcl
mov
mov
xlat
fs
add
and
lock
xor
push
imul
jne
inc
pop
inc
mov
jp
repnz
aad
dec
filds
xchg
cwtl
arpl
cmpsl
jge
jnp
out
mov
mov
xchg
insl
rorb
sahf
call
dec
add
lcall
daa
jae
jg
jecxz
push
xchg
mov
pushf
cmpsb
test
ljmp
ret
in
fmull
arpl
jmp
jb
sbb
lret
call
nop
mov
pusha
pop
ja
sbb
add
popa
inc
rol
cltd
mov
sbb
imul
cld
ds
pop
add
push
pop
sub
pop
push
repz
pop
test
jmp
ret
dec
xlat
in
cmp
iret
loop
jns
and
andb
sub
xchg
loop
call
xor
insl
imul
or
xchg
fisttpll
mov
inc
pop
cmp
dec
mov
xchg
pop
mov
or
mov
pop
and
and
mov
bound
jp
cltd
shl
dec
cmpsb
push
rorl
psubsb
stos
ss
push
fnsave
cwtl
mov
xor
cmp
pop
xor
pop
pop
aam
ret
je
movsl
outsl
in
push
nop
pop
xorb
sub
dec
bound
cmp
push
mov
xchg
pop
das
add
fs
mov
movsb
cs
pop
movsb
cmpsb
adc
sahf
int3
lock
gs
icebp
jne
push
popf
scas
cmp
std
orl
int3
inc
mov
mov
arpl
js
repnz
lds
les
popa
mov
int
push
mov
mov
stos
pop
push
adc
jp
or
add
std
inc
xchg
fisttpll
bound
ss
lods
sti
xlat
mov
outsl
mov
dec
in
dec
ss
iret
xchg
pop
scas
and
pop
push
adc
int
push
jno
daa
sbb
addb
stc
lret
in
dec
pop
loopne
sbbb
out
hlt
jbe
jbe
jmp
mov
sahf
decb
adc
jmp
mov
out
or
fcomi
xchg
out
rcrb
mov
arpl
or
xor
int
fdivrs
leave
or
inc
icebp
pop
cmp
mov
out
outsb
push
jne
rorb
dec
addr16
sti
outsl
lock
or
cmp
lds
adc
je
insl
pop
mov
aam
adc
je
test
ret
lds
xchg
dec
popa
mov
mov
ret
inc
lock
pop
loope
lret
stos
mov
mov
jnp
out
popf
dec
jl
push
cmpsb
mov
cld
sti
pop
adc
sbb
mov
lahf
push
shrl
xchg
jmp
cmp
aaa
repnz
push
dec
lock
scas
jmp
xchg
cmp
std
sub
sbb
xchg
cs
mov
xor
aaa
or
push
xor
mov
test
jecxz
sbb
or
push
adc
sub
mov
int3
mov
dec
jbe
add
jge
xchg
push
jmp
mov
clc
pushf
out
bnd
je
cmpsb
movzwl
xchg
sbb
jge
mov
add
aad
aaa
jecxz
rclb
pop
sbb
mov
hlt
ljmp
push
popa
cmc
outsl
dec
xchg
pushf
jbe
inc
clc
out
fldt
js
andb
insl
jmp
xchg
es
sbb
repz
xor
mov
aam
push
pop
and
push
or
cmp
push
repnz
xor
xchg
mov
call
scas
jnp
lret
aas
mov
gs
arpl
outsb
xchg
mov
dec
lret
fld
jb
jl
outsb
cwtl
xor
cwtl
in
mov
loopne
movsb
xchg
xchg
cltd
jg
insl
pushf
cmp
lret
cmc
dec
ffreep
push
insb
xchg
sbb
xchg
mov
punpckhbw
push
cmp
fwait
adc
nop
xor
jle
or
cmp
ds
out
add
repz
fdivl
sub
mov
sbb
jg
xor
pop
bound
in
or
in
inc
cmpsb
mov
xchg
outsb
adc
sahf
push
xchg
movsb
sbb
fidivl
iret
push
mov
xor
je
pop
pushf
fstpl
out
push
sbb
push
roll
cmp
popf
jmp
lea
movsb
stos
scas
jge
js
add
dec
sti
lahf
movsb
cwtl
frstor
ficoml
out
mov
xor
out
lret
stos
inc
insb
inc
cld
add
add
mov
daa
sbb
xchg
lods
scas
scas
push
fsts
rcrl
xchg
pop
or
sub
lods
outsl
addb
dec
mov
dec
xchg
mov
xchg
inc
test
mov
ss
push
fiaddl
es
cmpsb
push
scas
aaa
mov
out
clc
jne
sbb
lea
lret
ja
sub
popa
cmp
mov
ja
pop
xchg
mov
mov
sahf
xchg
outsb
jg
leave
inc
scas
add
movsl
dec
gs
jae
inc
cmpsb
xor
or
jbe
mov
add
scas
test
xor
hlt
push
pop
dec
loop
push
sbb
and
mov
fcoms
dec
jl
xchg
mov
das
mov
test
les
addb
sbb
sahf
mov
jno
and
pop
fs
ror
fs
xchg
pop
inc
fcoml
push
sub
in
pop
int
and
jbe
inc
shlb
fistps
xchg
push
les
imul
push
and
mov
xlat
or
mov
in
dec
sbb
sbb
repz
mov
loopne
js
jne
hlt
test
imul
pop
add
pop
inc
mov
push
dec
inc
cltd
shl
mov
push
pop
pop
and
jae
lea
outsl
mov
adc
sub
inc
mov
jno
imul
mov
inc
lock
xor
mov
inc
sbb
lock
adc
pop
mov
in
lcall
lret
ficompl
or
out
xchg
lcall
pusha
or
dec
xor
jbe
jge
lock
xchg
inc
bound
dec
outsl
cmp
mov
and
pop
out
push
icebp
adc
dec
inc
adc
jbe
inc
nop
mov
fwait
out
fistl
inc
or
xlat
int
or
or
mov
cmp
fs
add
dec
cli
divb
hlt
loop
adc
xchg
cli
add
inc
daa
lods
pop
sbb
inc
popa
sti
xor
xchg
mov
add
or
lds
fistpl
pusha
inc
jns
popa
mov
cli
pop
nop
into
daa
push
inc
push
repz
repnz
test
jo
mov
adc
dec
add
rorb
or
test
bound
outsl
imul
loope
into
arpl
dec
cwtl
pop
cmp
data16
aas
or
pop
fiaddl
xchg
outsb
mov
out
lods
hlt
adc
lret
inc
push
cmp
sahf
stos
dec
aaa
out
cld
mov
adc
lods
jmp
cld
dec
sti
icebp
add
inc
fimuls
mov
adcb
jns
gs
xlat
ljmpw
ret
js
fdivl
jae
push
arpl
jp
imull
inc
hlt
mov
dec
jae
push
dec
fwait
inc
lock
insl
in
fldl
and
jbe
mov
push
lds
divb
sbb
jmp
sub
pop
pop
cmpl
fnstenv
loop
std
sti
insl
ret
js
lret
sarb
lods
jg
inc
push
and
pop
andb
mov
dec
bound
push
repz
dec
out
insb
mov
xor
mov
andb
add
divl
or
in
push
mov
negl
stc
lds
xorl
jg
pop
sub
adcb
sub
stc
insb
xor
lret
cmpsl
fsubl
sbb
mov
push
dec
out
movsb
lahf
push
mov
and
dec
jnp
xchg
sub
dec
xchg
dec
test
lods
shll
gs
add
mov
mov
xchg
or
fs
pop
imul
xchg
mov
rorl
mov
mov
testl
arpl
pop
stos
mov
pop
add
mov
bound
mov
fsubr
mov
sub
addr16
sahf
fisttpl
icebp
orl
inc
pop
out
mov
pop
lods
loope
cmpsb
mov
cmp
adc
push
mov
cmp
mov
hlt
push
sub
jno
fwait
inc
test
mov
xlat
mov
xchg
ss
enter
mov
mov
add
in
push
pop
push
cs
in
lret
jb
ret
ret
pop
outsb
fstpl
into
enter
mov
lods
stc
xor
ss
or
jge
insb
push
inc
jmp
int
sbb
fdivs
pusha
cmp
jle
push
cmp
iret
test
add
inc
xor
or
jmp
loop
mov
mov
scas
cltd
pop
nop
jg
fmul
loop
insl
cltd
jno
icebp
inc
hlt
mov
lret
mov
push
inc
mov
cmp
sub
lods
pushf
cwtl
sbb
xchg
test
fcomip
lods
stos
mov
sbb
mov
sub
dec
push
lret
lcall
ret
jmp
sub
pushf
dec
js
scas
xor
rcl
sub
decl
adc
gs
repnz
cmpb
jmp
mov
repnz
js
jmp
popf
add
pop
mov
jns
test
dec
lds
sub
fistpl
sbb
aad
ja
incb
daa
xorl
sub
mov
lea
sub
fdivrl
enter
outsl
test
cli
cmp
mov
outsl
sbb
xor
and
shrl
fadds
call
inc
mov
pop
leave
mov
mov
scas
push
loop
pop
and
mov
shrb
ss
iret
repz
push
sbb
pop
push
jle
and
out
push
add
cld
mov
call
cmc
jae
lahf
repnz
dec
in
jo
mov
aad
insl
lahf
addr16
testb
popa
mov
loope
push
lds
fidivrl
and
aas
insl
jecxz
mov
stos
pop
mov
mov
push
xchg
mov
js
test
dec
sahf
notb
sub
clc
jmp
push
lahf
pop
push
jge
cs
sbb
sbbb
cmpxchg
jg
imul
add
out
inc
cs
add
mov
outsl
ja
sub
cltd
push
push
out
xchg
xchg
js
add
lods
xchg
addb
icebp
inc
sub
icebp
rorb
cld
dec
dec
or
lods
scas
inc
mov
shlb
push
add
push
xor
outsb
adcl
jns
jns
pop
ret
inc
pop
add
loopne
loop
mov
pop
pushf
into
mov
cmp
packsswb
clc
sub
mov
out
inc
xchg
sbb
mov
out
pop
idivl
lret
in
movl
cmpsl
bound
pop
fs
add
cs
xchg
xchg
imul
sub
in
add
and
testb
or
inc
cmp
lock
fadd
mov
pop
popa
lcall
stos
fs
pushf
mov
fisubrl
nop
sbb
mov
rcll
cmpsb
push
add
mov
int
sub
push
loope
fcomi
jae
mov
xor
enter
out
and
mov
int3
sub
jns
cld
dec
mov
lods
mov
shlb
dec
jns
cmp
fdivr
cmc
ret
xor
push
mov
sbb
js
stos
adc
dec
cmp
fnsave
insl
insb
or
out
repnz
test
loop
push
push
inc
ja
cmp
test
mov
inc
inc
push
frstor
fisttpl
jo
aas
ljmp
sbb
ss
fnstsw
testb
sbb
data16
vmread
fldt
dec
jae
pop
mov
pop
mov
test
aaa
push
mov
jle
icebp
movsb
mov
dec
xchg
dec
sti
sbb
mov
pop
jo
icebp
ret
mov
stc
out
inc
mov
iret
test
add
or
sahf
addr16
push
ss
imul
xchg
repnz
dec
dec
mov
int
cmp
pop
mov
mov
out
xchg
add
and
cmpsb
xchg
push
loopne
int
test
sub
arpl
or
lcall
cmpsl
mov
xor
mov
fiadds
push
ret
cltd
addb
push
pop
pop
lods
push
sti
adc
bound
movsbl
scas
pushf
popa
and
dec
std
or
xor
mov
xchg
sub
mov
jbe
cmc
cmpsl
sbb
fisubrs
sbb
sbb
xchg
shlb
testl
fdivrs
mov
ret
push
loopne,pn
addr16
xchg
test
sbb
push
cmp
or
jecxz
dec
fcompl
jp
jne
rcrl
push
enter
ficompl
repnz
paddd
cmp
out
sub
rclb
or
push
into
es
outsl
jge
cmp
mov
or
sub
lcall
push
pop
subl
outsl
je
mov
push
mov
mov
flds
add
dec
or
cwtl
push
ret
or
mov
test
fisttpl
out
out
push
push
cmpsb
push
or
and
dec
insl
lods
in
sub
dec
cmpsl
aad
xchg
stc
in
int3
or
lock
repz
mov
imul
out
pop
test
push
and
movsl
test
sbb
pop
addr16
bound
jle
repz
sub
pop
sbb
mov
sub
mov
add
mov
ljmp
and
cmpsl
jnp,pt
xchg
in
out
lods
mov
aad
cld
cli
mov
jno
mov
les
mov
and
mov
cs
shlb
and
mov
repnz
cmp
ljmp
movsb
cmp
sbbb
ret
shrb
lods
std
and
cmp
test
inc
jbe
sub
inc
in
mov
call
dec
hlt
loop
cld
pusha
ss
push
sub
testl
mov
aam
dec
psubsw
inc
ret
int3
popa
addl
dec
pop
jge
shrl
inc
xor
ret
cmp
sub
fwait
xchg
rcrl
in
aas
mov
and
fmuls
jo
jmp
nop
enter
sbb
mov
lds
insl
cmpb
ds
mov
and
rcll
sub
rorl
in
jnp
nop
mov
outsb
pop
inc
data16
dec
xor
xlat
je
ss
inc
or
mov
jae
and
xor
int
fimull
push
xorb
mov
or
mov
dec
mov
stos
dec
xor
fidivrl
cmp
aas
ss
sub
fdivs
push
jp
hlt
dec
daa
aas
mov
and
mov
dec
push
ss
je
mov
cmp
sbb
cmp
clc
jbe
jne
fildl
push
mov
adc
or
mov
xor
fwait
leave
xor
hlt
jns
inc
jmp
lret
lret
or
mov
mov
lds
out
mov
inc
adc
lea
cwtl
lods
sub
mov
jnp
out
loopne
sbb
sub
arpl
test
shr
stos
mov
in
jp
xor
inc
flds
pushf
cmp
add
mov
xorb
jns
add
or
pop
cmc
mov
mov
sub
stos
jnp
loope
adc
outsl
pop
xchg
cmpsl
subl
ret
fdivl
mov
dec
mov
dec
mov
daa
hlt
and
into
dec
adc
and
push
jo
shl
imul
pop
xor
push
std
fmull
aas
stos
fistpl
loopne
cmc
mov
add
mov
mov
in
xor
aas
ja
add
push
pop
ja
sbb
jne
fs
jge
js
sti
out
rol
mov
inc
arpl
jg
gs
ds
shll
and
out
jp
fdivl
call
ss
cmpsl
xor
repnz
test
test
jbe
fldt
fld
neg
popa
sbb
and
mov
push
lods
push
out
mov
push
jg
and
scas
js
out
call
push
mov
cld
out
in
xor
dec
std
xor
aam
mov
adc
jle
and
scas
mov
or
insl
lahf
lds
mov
call
or
vmovdqa
loopne
inc
push
inc
mov
leave
ja
and
lds
mov
xchg
pop
mov
ja
pusha
out
jmp
push
push
sub
dec
mov
fs
adc
xor
cmp
fsubrs
sbb
push
mov
dec
jmp
or
jmp
pop
and
fbstp
add
enter
and
adc
push
pushl
dec
js
cmp
cltd
lods
mov
nop
push
sbb
mov
addr16
out
jp
out
cmp
jmp
mov
ss
jnp
xor
jne
ja
shll
mov
xchg
xchg
fwait
imul
mov
out
mov
lcall
jle
arpl
inc
sub
sub
fsubrl
mov
mov
inc
aas
in
adcl
loop
daa
or
insl
std
sub
jae
aam
adc
cmp
scas
add
sub
jno
adc
movsl
hlt
push
pop
xchg
shl
insb
popa
pop
aam
leave
cli
inc
sub
push
test
fisttpll
or
sub
imul
mov
inc
stos
or
shll
sti
pop
jle
sub
bnd
jnp
push
insb
adc
cmpsb
outsl
div
jno
test
inc
sub
test
pop
stc
inc
outsb
cs
add
in
sbb
push
xor
in
out
mov
inc
fimuls
push
ljmp
mov
sbb
inc
mov
leave
cmp
inc
daa
ficompl
jb
insb
pop
cmp
add
inc
sub
mov
add
imul
mov
mov
mov
pop
hlt
inc
in
into
sbb
xchg
loope
jge
movsl
daa
jl
sub
push
mov
and
xlat
es
les
inc
jg
cwtl
int3
push
aas
cli
sbbl
mov
in
cld
sbb
adc
test
test
or
adc
aam
xor
add
mov
stos
xor
xchg
sub
and
into
sarl
test
add
clc
pop
scas
fisubl
add
movsl
inc
pushf
jg
clc
adc
jmp
fmull
in
lret
xchg
test
and
xchg
xlat
push
ss
jnp
push
fidivl
pop
sbb
push
push
divb
jmp
daa
xor
inc
pop
fisttps
push
std
mov
pop
and
int3
pop
cmp
mov
inc
popf
xor
mov
xchg
fwait
dec
xchg
out
fildll
push
js
xchg
gs
mov
inc
push
fldl
ret
lea
add
test
cmp
rolb
iret
jge
test
pop
ficomps
xchg
inc
pushf
mov
clc
cmpl
or
sbb
cs
scas
sti
or
inc
jnp
les
xchg
xor
hlt
pusha
dec
or
arpl
imul
cmp
inc
cmc
adc
pop
cmp
mov
cli
xor
jge
push
xchg
xor
push
icebp
fisubrl
inc
mov
hlt
jae
clc
and
aam
out
mov
and
aad
mov
inc
mov
jns
movsb
pop
in
rorb
jecxz
outsb
mov
test
push
out
mov
dec
push
sub
sbb
gs
popf
stos
mov
inc
mov
add
es
rcll
fidivs
cld
fldl
lea
push
pop
cwtl
divl
out
sti
imulb
movsl
xor
js
jg
cmc
test
popf
sub
sarl
cmp
scas
rcrl
sub
add
enter
in
pop
cmp
xchg
pusha
rclb
jnp
pmulhw
mov
fnstenv
sarl
sub
clc
inc
mov
hlt
fisubrs
js
mov
mov
jmp
movsb
jmp
fwait
inc
adc
stos
mov
push
sub
inc
les
mov
test
daa
mov
inc
push
sub
cwtl
je
bound
push
pop
js
jg
sbb
xchg
mov
add
pop
dec
repz
loope
out
dec
xchg
xor
into
outsl
and
xchg
cmp
lock
xchg
pop
daa
pop
jg
cmp
pusha
mov
fstps
fisubrl
shl
mov
xchg
fistps
push
pushf
out
cmp
dec
mov
iret
add
pop
inc
jecxz
mov
test
dec
lds
add
call
inc
inc
pop
cmp
aad
test
int
pushf
and
and
sti
stos
lods
pop
dec
cld
mov
mov
int3
lds
ret
cmpsl
lods
inc
jnp
mov
xchg
mov
cmpsb
sub
fnstcw
das
mov
roll
test
repnz
mov
addb
in
sbb
mov
dec
cld
pusha
adc
sub
xor
loopne
aad
sub
jo
mov
data16
lret
aas
pop
xor
jecxz
addl
cmpsl
pop
push
cmp
push
add
test
mov
pop
incl
ds
faddl
dec
in
sbb
jae
imulb
sub
iret
or
pop
sbb
push
int3
dec
sbb
lret
xchg
addr16
push
out
dec
push
mov
arpl
daa
jmp
jge
pop
je
mov
movsb
mov
jg
xchg
and
and
push
mov
pop
add
test
mov
xchg
jb
hlt
pop
imull
adcl
mov
cwtl
fs
loop
js
jb
cmc
fbld
sahf
js
xor
fcomp
stos
aas
je
fisubrs
cs
in
mov
je
sub
push
std
cmp
inc
mov
or
pop
xchg
fildl
pop
nop
imul
cmp
fcomps
xor
add
push
inc
or
xchg
ds
insb
or
xor
cmp
push
mov
sbb
xchg
aam
in
push
lds
pop
and
mov
pop
adc
repz
adc
push
dec
inc
in
outsb
test
mov
sbb
push
sub
hlt
scas
and
dec
sub
iret
loope
out
push
push
and
dec
sbb
sbb
push
xor
in
test
fwait
sub
mov
and
inc
xchg
daa
repz
scas
xor
roll
loop
mov
lahf
cmp
ja
loopne
inc
fmuls
cmp
sub
jp
sub
mov
add
cmp
mov
arpl
hlt
cmp
pop
lret
mov
js
nop
shld
xchg
pop
dec
push
repz
test
mov
adc
cmpsl
mov
pop
ljmp
shlb
inc
popa
negl
int
xchg
adcl
adc
stc
pop
xor
dec
lds
je
mov
push
lahf
and
adc
pop
jnp
ret
fadds
clc
jecxz
fisubs
fidivs
mov
ror
add
scas
and
mov
cmp
lea
sbb
or
adc
cmp
push
inc
xor
jl
xor
push
push
add
in
dec
xchg
inc
push
push
ret
fiaddl
movsl
sub
xchg
rcll
outsl
push
outsl
lret
hlt
push
or
mov
btc
arpl
mov
cmp
fbld
fadd
pop
adc
cld
dec
jmp
jl
in
mov
insb
ljmp
mov
push
jo
jbe
or
pop
imul
dec
and
sbb
mov
mov
addr16
stc
pop
or
fdivr
or
mov
cltd
iret
mov
sbb
add
adc
sub
push
cli
fistps
push
lock
and
xchg
mov
mov
fdivrl
lea
push
pusha
xor
pop
xlat
hlt
out
aaa
push
xchg
or
dec
je
and
mov
xchg
xorb
lret
cmp
or
flds
gs
dec
fld
cmp
or
jl
dec
fs
test
sub
aaa
ficomps
dec
lret
das
adc
pushf
xchg
mov
push
int3
cmpsb
lret
jae
cld
pushf
shll
subb
fxch
gs
mov
out
cmp
mov
jbe
lock
and
push
les
cmpsl
lcall
mov
outsb
cwtl
inc
pop
add
sbbb
pop
insl
sub
push
call
mov
pop
imul
xchg
dec
test
test
mov
sbb
mov
xchg
mov
fimuls
rorb
in
out
jmp
in
frstor
mov
dec
dec
add
xchg
in
fcmovnb
cmc
out
sbb
fdivrs
xchg
add
lcall
fnsave
jmp
arpl
cmp
mov
xchg
cmp
mov
fsts
cwtl
inc
jmp
outsl
loope
mov
movsb
mov
inc
je
fwait
loopne
test
lock
test
jmp
jae
add
push
fists
movsl
xchg
fmull
vmulsd
and
in
jg
es
ss
xchg
js
inc
push
sbb
dec
das
fdivr
ljmp
cld
cmp
dec
push
inc
nop
push
test
aam
addr16
imul
pop
in
cmp
jmp
mov
sbb
pop
push
adc
orl
xor
rcl
cmc
popf
test
cmp
adcl
ds
std
sub
out
mov
mov
and
je
cld
push
or
mov
pop
or
mov
inc
jl
add
sub
das
fisttpl
add
sbb
pushf
xchg
pusha
fistps
lret
loopne
lock
incb
orb
xor
mov
rcl
jge
ret
xchg
mov
push
push
fsubl
mov
test
in
mov
lret
daa
lea
popf
sahf
push
pop
and
mov
mov
iret
scas
mov
mov
popa
sub
lret
cwtl
xchg
ret
jb
jg
push
mov
mov
xlat
imul
ret
xchg
shrb
outsb
and
ret
es
mov
popf
les
or
cmpsl
jle
insl
mov
clc
xor
mov
mov
mov
ret
mov
or
outsb
loop
xlat
xor
arpl
stc
dec
mov
insb
movsl
jnp
ret
daa
stos
cmp
xor
popa
iret
subl
mov
stos
dec
fucom
enter
push
pop
loope
cmp
dec
lret
adc
sbb
ja
and
xor
mov
push
lret
dec
imul
andl
inc
push
subl
das
sbb
pop
lcall
popa
popa
aam
dec
inc
mov
repz
addl
lods
data16
adc
mov
icebp
imul
cmpsb
out
mov
sahf
in
stos
xor
push
xor
mov
dec
icebp
and
lods
jb
lods
lahf
sub
pop
mov
imul
mov
in
push
jno
dec
aaa
call
outsl
cld
adc
inc
mov
sub
xchg
adc
dec
leave
jp
add
adc
mov
xchg
or
push
js
out
cltd
cmp
or
stos
aaa
pop
ljmp
outsl
imul
cmp
push
add
adc
mov
ljmp
sti
nop
ret
mov
or
fs
fldcw
je
mov
sub
xor
jmp
or
iret
insl
mov
scas
xchg
xor
dec
movsb
mov
lcall
and
cmp
xor
jecxz
shll
jl
sbb
popa
push
imul
dec
cld
lods
in
mov
xor
jle
hlt
frstor
pusha
mov
mov
pop
outsb
cwtl
adc
xchg
mov
pop
pop
out
out
xchg
addr16
insl
push
clc
fsubr
sbb
stos
adc
push
idivb
sti
iret
stos
sub
enter
add
jg
xchg
jl
sub
xchg
add
negb
jbe
sbb
mov
testl
xchg
sub
and
je
and
movsl
push
addr16
sub
add
cmp
mov
loopne
mov
mov
pop
pop
scas
sahf
dec
cmp
ret
jg
into
mov
mov
in
mov
mov
pusha
out
mov
ljmp
jae
push
adcl
arpl
dec
fnstcw
imul
leave
dec
xlat
jp
xor
xchg
adc
leave
fs
push
adc
sub
mov
mov
bound
cmp
mov
shrl
jecxz
cli
mov
lcall
dec
sbb
mov
mov
dec
or
jge
fisttpl
jl
mov
push
pop
add
imul
xchg
mov
xor
es
push
jmp
add
repz
or
out
lock
jae
cmp
xchg
add
mov
dec
jbe
pop
mov
fadd
inc
adc
xchg
fwait
ret
cmpsl
test
pushf
mov
or
or
pop
add
idivl
lods
dec
cli
pop
inc
scas
push
lods
cmc
repz
sbb
xor
std
xchg
pop
mov
popf
push
xchg
sahf
xor
mov
jmp
mov
jo
pop
cmp
shl
ret
test
mov
ljmp
sub
cmp
icebp
lods
pop
data16
popa
and
data16
mov
xchg
lock
inc
mov
shll
fs
je
gs
jg
cmc
mov
jp
cwtl
mov
inc
js
sti
xchg
sub
popa
int3
xor
mov
sbbl
mov
add
add
inc
std
push
or
ds
cmp
repnz
aaa
jmp
je
mov
dec
cmp
jbe
out
mov
test
xchg
adc
and
divb
ja
daa
xor
and
xchg
mov
xor
push
jbe
pop
or
xchg
mov
pop
scas
dec
mov
or
dec
aaa
insl
out
add
sbb
loope
add
scas
push
pop
loopne
test
mov
stos
lods
and
leave
fwait
jp
or
rcrl
iret
stos
imul
xor
push
cli
sbb
std
inc
and
lods
mov
pop
inc
adc
ja
xchg
and
xchg
xchg
shl
repz
cmp
inc
push
pop
mov
sbb
jnp
aas
ljmp
test
std
mov
pop
mov
sahf
jno
les
cmpsb
pop
enter
adc
fcoml
filds
jge
jb
and
cli
mov
inc
gs
adc
addb
in
mov
roll
inc
or
xor
dec
in
xorl
mov
cmpsb
dec
add
addb
lds
or
jmp
push
cmpsb
sbb
popf
cs
lds
pop
in
sahf
mov
or
sbb
pop
fisubl
push
test
movsb
cmpsl
push
mov
mov
fs
out
mov
cmp
faddl
cmp
pop
mov
mov
xchg
push
out
push
fists
jmp
test
dec
mov
fadds
xor
sub
cmp
cs
notl
push
mov
add
dec
lret
push
mov
pop
pop
fsubrp
xchg
inc
push
sub
push
into
leave
int3
loopne
add
pop
fsubr
push
jg
xor
add
js,pn
arpl
adc
mov
jae
push
sti
lret
aad
push
mov
cmc
pop
inc
insb
icebp
lret
or
adc
hlt
in
cwtl
mov
jle
mov
lods
in
rorl
and
mov
or
mov
lret
mov
pop
sub
in
inc
cmp
xchg
mov
jo
std
in
jp
push
add
cmp
xor
push
rcll
jle
lcall
addr16
cltd
sti
cld
mov
and
out
ss
dec
loope
ss
test
mov
mov
push
push
inc
mov
pop
jecxz
mov
jl
dec
gs
xorl
fdivl
loop
fs
repz
pushf
fmull
int3
or
cmp
sbb
xlat
inc
pop
call
ss
es
imul
sbb
sbb
jns
xor
lock
pop
or
psraw
and
test
xchg
push
add
sub
xchg
mov
daa
and
pop
pop
test
imul
ret
popa
mov
xor
in
mov
and
andl
sub
jle
es
loop
and
scas
int3
mov
mov
mov
mov
push
pop
ljmp
xor
jp
mov
fwait
push
add
shrl
inc
push
cli
or
jbe
mov
ljmp
sbb
ja,pt
pop
xchg
out
cmp
stos
mov
sub
ss
call
cmp
add
inc
mov
xchg
and
stos
sub
stc
loopne
dec
cwtl
dec
stc
mov
test
push
es
xchg
xchg
arpl
data16
les
mov
fstpt
test
jbe
gs
idivl
mov
mov
add
push
cld
mov
pop
fwait
mov
fcompl
mov
adc
push
std
dec
xchg
popf
mov
cs
dec
pop
jbe
cmpsl
xchg
push
clc
pop
jo
sbbl
dec
inc
push
bnd
clc
hlt
popf
push
mov
jbe
iret
mov
and
dec
or
lock
mov
lea
mov
pop
jb
imul
lcall
pop
and
pushf
add
mov
dec
jo
xor
sbb
imul
pop
insl
xchg
jo
dec
and
xor
lods
mov
push
adc
stc
in
push
xor
test
lret
or
mov
lods
mov
cmpsb
pop
jmp
outsb
mov
mov
mov
fmuls
push
pop
push
sbb
movsb
lods
addb
and
pop
cmp
mov
loope
scas
and
scas
repnz
cmp
pop
cltd
mov
add
jno
call
dec
arpl
arpl
lds
ss
aam
lock
imulb
inc
lods
push
add
repz
pcmpeqb
scas
adc
mov
sbb
sar
movsb
jle
dec
pop
femms
cwtl
into
pop
clc
cmp
sub
xor
mov
dec
scas
in
lcall
cmpsl
dec
mov
stos
lock
xchg
mov
stc
and
call
repz
xor
incl
jbe
andl
ficompl
inc
cmp
sti
add
stc
data16
jg
aaa
sahf
jbe
sub
add
lcall
sub
xor
ret
push
add
lcall
pop
mov
xchg
pop
fidivrs
sub
mov
or
xor
dec
roll
add
iret
cwtl
repnz
sub
add
jo
sub
xchg
mov
mov
iret
xor
push
cltd
popf
pop
jbe
ret
sbb
pop
sahf
add
xor
aas
jbe
add
loop
in
add
out
gs
xor
lock
cld
jp
xor
push
fsubrl
or
sub
aam
scas
mov
mov
dec
xchg
aam
cmpsl
fcomps
repz
jg
pop
je
xchg
push
mov
loop
lahf
shr
addw
es
idivl
inc
add
dec
adc
mov
cmp
pop
mov
pop
iret
orb
in
lret
imul
lea
cmp
dec
fmull
mov
push
sub
and
or
push
dec
subl
mov
and
inc
les
fcoms
or
orl
sub
notl
mov
mov
jle
stos
or
ja
test
and
daa
pop
jmp
or
js
push
mov
and
lcall
test
dec
mov
mov
push
add
push
xchg
lods
cld
pop
outsb
jae
test
push
jg
jmp
std
mov
imul
js
test
lods
cld
pop
push
int3
sub
icebp
repz
push
dec
jno,pn
mov
out
pop
cli
popl
add
insl
fdivrl
adc
insl
push
lock
cmp
xor
xchg
rorl
mov
cltd
push
int
mov
in
sbb
pop
imul
xor
ljmp
aas
mov
negb
pop
gs
int3
dec
inc
repnz
mov
mov
imul
xchg
arpl
mov
popf
shlb
adc
or
in
jl
inc
enter
fwait
push
orb
mov
inc
int3
adc
stos
pop
js
lcall
clc
dec
and
sub
cmpsb
stos
push
push
push
ficoml
or
in
stos
cmp
repz
push
sub
lock
subb
jge
push
mov
leave
jo
rolb
lds
hlt
and
push
xorb
pop
fsubrl
or
adcb
pushf
insb
outsl
mov
push
jne
dec
mov
xchg
rcr
jbe
cli
cmp
test
in
fldcw
dec
push
mov
inc
insl
call
xor
sub
mov
mov
ljmp
fsubr
jge
xchg
push
jl
daa
js
ret
mov
int3
cmpsl
sub
mov
cwtl
in
insl
jp
scas
add
leave
out
stos
jecxz
insb
xchg
xchg
push
inc
jnp
pusha
in
jmp
mov
cs
jle
mov
aam
dec
cwtl
mov
mov
mov
popa
idivl
fwait
dec
push
inc
xor
pop
add
fiaddl
sti
sub
insl
xlat
pusha
push
add
out
scas
and
das
dec
in
xchg
add
add
test
push
pop
xor
enter
cld
add
pusha
pop
decl
aam
dec
cmp
popf
pop
sub
push
icebp
hlt
sub
cmp
or
jbe
adc
mov
pop
dec
insl
pop
scas
repz
xchg
push
jg
ds
add
sarl
sbbb
pop
jmp
ds
sahf
mov
jns
insl
xchg
andb
xchg
pop
js
dec
inc
xchg
ljmp
in
into
cmc
aaa
std
mov
push
jno
arpl
lods
pop
dec
iret
add
aad
or
pop
cld
fmull
bound
cmp
xchg
lock
sbb
pop
xchg
jb
jnp
ds
scas
ljmp
xchg
mov
in
and
lods
cmp
repnz
dec
arpl
ret
test
adc
int
sub
lds
mov
mov
popf
shll
mov
dec
cwtl
push
xchg
int3
mov
stos
lret
imull
or
stos
mov
cmpsl
sarb
jge
imul
ret
inc
mov
and
add
push
add
lds
and
lods
cmp
das
jb
dec
stos
fimull
mov
dec
popa
inc
stc
pusha
ret
cmp
jecxz
lahf
xchg
push
iret
insb
sub
mov
inc
dec
icebp
pop
pop
push
aam
or
or
pop
out
lods
cltd
insb
mov
xor
add
mov
lods
pop
pop
leave
jns
mov
dec
shl
push
sub
test
and
popa
lods
lea
fcoml
movd
lods
int3
xor
mov
notl
cli
repnz
pushf
test
notb
adc
idivl
xchg
int
push
xchg
mov
adc
stos
lds
scas
mov
and
jp
cli
pusha
mov
adc
outsl
mov
sub
xchg
mov
ficomps
pushf
jg
ficoms
xchg
cwtl
cltd
xchg
sub
out
dec
cwtl
mov
loopne
sbb
movsl
pop
pop
dec
mov
mov
leave
fwait
adc
repz
push
add
imul
rcl
cmpsl
mov
push
lock
insl
pop
xor
jmp
sub
loopne
lret
mov
or
mov
outsb
xlat
fcmovbe
xchg
mov
call
stos
jo
push
jmp
idivb
dec
loopne
out
push
cmpsl
xor
xchg
test
cld
in
adc
daa
mov
cld
dec
mov
popa
mov
mov
jmp
or
into
and
into
xor
lret
outsl
popf
popa
call
fsubl
xor
or
fs
imulb
lds
fistpll
fisttpl
mov
mov
addr16
mov
inc
push
xchg
push
jae
clc
aaa
cltd
sbb
cmc
dec
xchg
sbb
movsl
or
xor
cmp
pop
dec
cmp
shl
int3
fcoms
inc
in
jnp
xchg
ja
add
std
dec
adc
pop
in
addr16
rcll
cmp
dec
rcrb
ds
out
fdivrs
mov
jb
cld
pop
and
inc
mov
cmp
mov
xchg
and
out
pop
enter
mov
rorl
ljmp
out
xchg
rcl
fisttpll
xchg
push
je
mov
fcmovb
cmpsl
mov
sti
popf
xchg
pop
xor
xorb
out
cmp
lret
stos
aas
dec
sahf
hlt
or
out
sti
add
add
bound
imul
push
add
inc
jo
addr16
fs
xchg
scas
push
or
popf
xor
or
aas
add
mov
mov
xchg
dec
out
je
mov
jno
ds
out
mov
fwait
dec
jp
cmpsl
mov
test
notl
push
in
push
xchg
inc
xchg
into
push
ljmp
enter
dec
stos
mov
lods
pop
or
outsb
jns
aad
ficoml
cli
adc
stos
jecxz
loopne
lcall
dec
and
push
test
movsb
push
add
pop
sub
xchg
cmp
or
ljmp
pop
mov
imul
mov
aas
int3
sahf
mov
mov
test
push
cmc
fcoml
out
xchg
subb
or
cld
cwtl
mov
mov
sti
subb
mov
mov
scas
push
or
test
sbb
cli
shlb
sbb
pop
orb
into
jge
scas
call
sbb
or
jns
movsb
inc
sti
push
pop
cmp
mov
mov
push
mov
and
dec
jbe
push
xchg
xchg
loop
jle
push
push
or
cmp
push
dec
push
in
lret
mov
xchg
add
pusha
or
sbbl
out
sbb
addb
in
pop
push
xchg
fwait
and
popa
inc
push
dec
negb
mov
sbb
mov
sub
sahf
xchg
jbe
ss
sbb
ja
push
dec
js
pusha
or
adcb
mov
jmp
pop
adc
repnz
xchg
inc
or
out
loop
mov
movsb
aad
call
jl
and
bound
sbb
out
test
lcall
dec
cmp
sbb
push
jb
fidivrs
cmp
out
push
jne
cli
jmp
xchg
test
or
sbb
outsl
cli
bound
call
lcall
mov
call
push
push
inc
sub
mov
xchg
testb
mov
je
rorl
ret
xchg
ss
xor
cmc
add
adc
aad
xor
je
sub
xchg
or
or
mov
and
xor
xchg
pop
mov
adc
fwait
loope
mov
ljmp
adc
jno
push
sub
jno
jbe
cwtl
pushf
ficoms
or
xchg
or
pop
lahf
jmp
pushf
arpl
in
mov
aaa
dec
lret
xchg
enter
ss
mov
cltd
in
jge
jno
xor
mov
loope
cmp
pop
push
push
int3
rcrl
jno
inc
dec
xor
pop
push
cs
xor
jns
cmp
mov
jns
fldcw
push
decb
mov
sahf
push
stos
mov
add
fisubl
jg
loop
mov
mov
imul
es
inc
dec
movsl
xchg
cmp
in
add
insl
lods
insl
lret
movsl
stc
pop
inc
push
sbb
orl
das
jle
xchg
pushf
jbe
dec
lock
jnp
mov
xor
ds
push
ljmp
xchg
out
scas
notb
cld
imul
imul
pop
xchg
pusha
xchg
add
outsb
jne
dec
sub
test
jb
in
stos
neg
jecxz
cmc
pushf
inc
dec
adc
popa
sbb
lahf
cli
test
add
xchg
cld
xchg
in
test
outsb
test
sub
gs
sbb
add
daa
and
notl
adc
sub
fcomp
insb
test
dec
out
jecxz
push
jp
mov
xchg
sub
sahf
std
and
add
stos
adc
hlt
sub
jl
cmp
adc
std
lret
adc
jo
xchg
xor
decl
mov
pop
repnz
mov
pop
cmp
mov
inc
xor
pop
cmc
inc
xchg
jnp
inc
es
mov
xchg
sbbl
and
pop
sub
shl
xor
mov
add
pop
sbb
aam
xchg
mov
fwait
xchg
or
je
inc
cwtl
add
test
cmpb
jo
out
inc
inc
pop
adc
cmpsb
jns
jp
jae
in
inc
mov
mov
pop
inc
rclb
cmp
sahf
ja
sbb
ja
ljmp
rclb
fwait
and
dec
out
subb
jne
iret
fimuls
or
sbb
pop
sarl
or
outsl
pop
or
mov
pop
cld
rorb
cltd
lcall
aas
jb
xor
fstl
or
imul
inc
aaa
es
pop
push
lods
aas
dec
add
icebp
aam
cli
mov
stos
prefetcht2
dec
and
lcall
sbb
mov
ja
imul
mov
jmp
mov
loop
pusha
out
std
bound
inc
outsb
lret
jmp
mov
mov
gs
ret
adc
test
sub
xchg
into
popa
int
cmp
ret
fwait
jmp
inc
mov
cmp
bound
repz
mov
das
scas
icebp
mov
mov
cmp
negl
insb
iret
inc
xchg
sub
fsubrl
mov
add
dec
filds
dec
test
jmp
mov
add
sub
test
in
pop
imul
into
pop
xchg
frstor
mov
shl
pop
scas
jge
ret
mov
lods
ret
sub
push
mov
xchg
adc
jge
mov
mov
nop
popa
movsb
in
loope
in
xchg
cmpsb
cmpsb
jge
call
insb
cltd
aam
dec
sub
fwait
int3
fdivp
sahf
lods
cmp
mov
arpl
jl
mov
lahf
dec
pop
mov
dec
sub
jno
mov
lods
pop
adc
ficompl
mov
xchg
mov
xchg
pop
or
inc
jmp
inc
hlt
aad
aas
cmp
cltd
xchg
js
insb
out
cld
xor
mov
icebp
rcrl
sub
xorl
loopne
ds
stc
roll
gs
mov
icebp
xchg
aaa
push
adc
add
mov
js
in
and
dec
popf
sahf
mov
mov
hlt
arpl
int
xchg
jo
xor
das
lret
ficompl
cs
mov
jle
int3
imul
jnp
sub
adc
mov
cmc
mov
cmp
jmp
sub
push
or
mov
or
jp
popa
jp
fimuls
stos
cwtl
push
in
in
jge
test
adc
xor
xchg
mov
mov
outsb
inc
mov
mov
sbb
mov
icebp
das
movsb
inc
je
pop
dec
sub
mov
fisttpl
in
jmp
xorb
pop
dec
push
sub
out
adc
push
testl
frstor
mov
cmp
dec
sbb
lea
xor
xor
lcall
scas
and
xchg
out
xchg
fsub
pop
sbb
lock
sarl
scas
sti
or
mov
rorb
jo
mov
mov
lods
das
int3
fisubl
push
fisttpll
inc
out
arpl
jae
and
sbb
scas
stos
arpl
loope
push
aad
fdivs
dec
test
cmp
jnp
push
js
dec
inc
adc
cmp
cli
jp
dec
jno
xchg
andl
cmp
int
lahf
scas
rcrb
int
sub
lods
addb
mov
jnp
jbe
xlat
orl
mov
jmp
fs
xchg
enter
int3
out
xchg
ljmp
mov
jge
add
jbe
insb
popa
das
adcl
cltd
data16
mov
pop
add
sub
aam
xchg
jecxz
orl
sub
mov
xor
xor
mov
loopne
dec
lcall
mov
icebp
test
idivb
fsubrl
mov
sub
add
xor
xor
jbe
jno
mov
loopne
je
cli
mov
pop
mov
mov
xor
xorb
xchg
daa
subb
pop
or
jnp
xor
cmc
pop
lcall
out
mov
push
out
clc
bswap
inc
jecxz
test
flds
mov
pop
pop
cmc
dec
jp
mov
jecxz
rcrb
cs
jmp
in
sar
lea
inc
incl
insl
push
fstps
dec
sub
fiaddl
ljmp
mov
into
xor
mov
shll
cltd
mov
stc
hlt
jbe
clc
jge
or
mov
xor
jmp
inc
push
cmp
pop
push
xchg
pop
pop
push
stc
popf
or
adc
dec
pushf
sub
js
xchg
test
dec
pop
test
inc
mov
and
aas
xor
pop
inc
or
push
insl
imul
lret
fldcw
ss
sub
test
ja
andl
jno
mov
mov
iret
cmc
cmp
cmp
fidivrs
call
aaa
das
fadds
cmc
popa
jb
pop
mov
push
scas
je
inc
jle
mov
cmp
lret
cs
cmp
sub
add
xchg
add
jo
or
aaa
movsl
dec
cmp
lea
sbb
adc
scas
ds
stos
pop
ja
jnp
push
clc
cmpsb
aam
out
adc
sub
arpl
in
adc
push
cmpsb
insb
ss
cltd
in
in
adc
leave
subl
dec
fstpl
jns
sbb
dec
xchg
jmp
fisubl
insb
bound
inc
adc
fldl
xchg
call
mov
sahf
pop
inc
stos
push
mov
inc
mov
or
test
fiadds
jle
mov
frstor
sbb
in
dec
dec
mov
cld
jns
or
rcrl
dec
mov
inc
das
or
push
stos
add
pop
insb
sub
cmp
sub
xor
jmp
pop
adc
lahf
push
pop
inc
notl
xor
sbb
cmp
cmpsl
mov
repnz
dec
imul
mov
repz
cmp
inc
jmp
mov
lods
andb
jne
mov
mov
add
jbe
or
push
pop
aad
push
mov
loopne
mov
sahf
add
dec
mov
xor
sbb
arpl
add
testl
stos
sbb
push
mov
adc
fstpl
stos
or
mov
cmpsb
sbbl
and
in
push
jns
mov
sbb
push
jbe
sbb
jnp
lock
xchg
jmp
push
jne
aaa
push
mov
pop
jns
fidivl
icebp
add
inc
inc
lahf
aaa
or
shll
hlt
into
mov
cmpb
repz
fwait
es
repnz
mov
xchg
in
and
stos
xchg
jmp
mov
idiv
push
inc
pop
pop
jmp
inc
jge
bound
inc
mov
imul
sub
enter
and
sbb
push
hlt
out
bound
les
sbb
sar
rorb
je
imul
adc
lahf
ficomps
aaa
or
stos
cmpsb
jg
scas
pop
imul
orb
jl
out
mov
mov
fld
sti
imul
cwtl
cld
xlat
lahf
adc
cmp
in
aaa
int3
lea
and
in
outsl
fdivrp
ss
pop
and
imul
xchg
js
addr16
jbe
int3
pushf
mov
int
lods
imul
mov
or
cwtl
ret
inc
sahf
inc
int3
xchg
push
jge
push
push
push
popf
cmc
push
in
ljmp
orl
movaps
or
xchg
rorl
lods
cwtl
mov
aaa
movsl
pop
cmp
cmp
test
jl
cmp
aad
sbb
push
xchg
jne
sbb
cmpsl
movsl
pop
adc
push
adc
sub
scas
loop
fildl
xchg
cmp
pop
into
push
stos
sbb
in
push
lods
push
jbe
out
lret
push
xor
mov
mov
ja
add
mov
lock
loopne
cmp
leave
mov
cmp
push
loopne
cld
pop
mov
mov
push
adc
cmc
icebp
mov
lock
lds
jmp
push
and
js
cmp
jmp
and
scas
add
pop
dec
mov
data16
pop
inc
iret
mov
outsb
push
jns
push
in
imul
mov
fisubs
stos
ljmp
sub
in
cmp
or
imul
xlat
nop
cmp
sbb
fisubrl
jo
pop
or
aad
in
sarl
dec
inc
sub
leave
iret
pop
pop
shll
bound
test
xchg
lock
dec
stos
and
mov
sub
dec
popa
mov
je
loop
push
xor
dec
popa
pop
mov
cwtl
add
lods
fildl
add
cmp
mov
loop
mov
cmp
mov
leave
lret
jge
fs
inc
jle
jbe
add
mov
sar
inc
mov
sub
jo
inc
ja
ds
outsb
ja
movb
cmp
xor
adc
pop
add
leave
aam
lcall
mov
add
inc
sub
cmp
mov
inc
cmpb
xchg
addr16
lds
cmp
cmp
imul
push
mov
ficoms
lcall
cmp
sahf
pop
out
sub
cld
xor
imull
ss
outsb
pushf
jle
scas
lcall
mov
dec
pushf
subl
adc
pop
incb
outsb
and
movsb
sub
repnz
dec
adc
mov
jmp
jmp
push
and
nop
int
sbbb
jo
dec
cbtw
popa
cmpsl
pop
sarl
lcall
push
sub
jle
lret
pop
pushf
push
mov
ja
xor
daa
mov
out
sbb
jle
and
or
fcmovnu
fsubs
aas
cs
call
lret
js
xchg
out
in
aam
testb
dec
mov
fstp
ljmp
sub
jmp
adc
push
in
and
loope
pop
sbb
pop
mov
push
jne
xchg
add
cmp
popa
push
loopne
dec
cwtl
fdivr
jnp
aas
loopne
dec
and
loopne
dec
lret
jmp
pushf
int
pop
rcrb
test
out
push
test
cmp
push
shrl
scas
jle
mov
cmp
mov
xor
insl
push
cltd
push
jl
cmp
add
test
subl
clc
sbbl
cs
aam
dec
cltd
lods
mov
push
lret
lahf
rorl
mov
and
and
adc
dec
out
arpl
bound
and
das
icebp
insl
test
popa
ja
cli
mov
cs
rorl
and
xchg
inc
fcmove
fadd
jg
adc
xor
mov
inc
mov
sbb
pop
lahf
sbbb
fdivl
test
xor
call
push
sub
lods
add
adc
mov
jne
in
das
pop
xor
jle
shll
mov
mov
or
sub
mov
lods
pop
push
dec
xor
fisubrl
pop
loop
and
inc
aas
mov
or
cmc
push
push
jno
mov
stos
inc
nop
je
mov
mov
les
stos
mov
in
mov
inc
pop
xor
sarl
add
sbb
test
add
ljmp
in
push
and
pop
and
lahf
mov
scas
lods
mov
add
scas
stos
ret
dec
ss
aaa
cwtd
insl
mull
sub
sub
mov
mov
pop
and
sub
push
lea
xchg
xchg
inc
sbb
out
xlat
push
ror
cld
sbb
testl
push
int3
out
push
es
sahf
imul
aaa
popf
xchg
repnz
data16
iret
sbb
stc
xor
rolb
iret
pushf
push
xchg
xor
add
and
mov
adc
mov
bound
xchg
fistpll
sbb
hlt
movsl
adc
rcll
or
decb
xor
shl
adc
inc
and
cmp
dec
lock
xchg
xor
int3
or
daa
and
jbe
lcall
jg
mov
push
jbe
out
leave
pop
xchg
cmp
sahf
test
xchg
sahf
bnd
mov
sbbl
in
pop
pop
aas
mov
loop
je
mov
mov
shl
cli
add
sbb
and
loopne
cmp
jl
pop
add
out
js
ja
je
push
jle
pop
mov
push
aam
sub
clc
and
testb
je
sub
push
pop
popf
das
xchg
xor
jno
aas
push
adc
fmulp
in
jnp
xor
daa
rcrb
lret
xlat
cmpsl
enter
outsb
mov
clc
lock
shrl
xor
dec
adc
sub
cmp
popf
adc
pop
lcall
aas
push
rcr
roll
loope
add
mov
test
mov
xor
xchg
arpl
or
pop
rolb
fidivrl
push
push
mov
push
gs
and
jae
pop
lea
test
daa
cld
jmp
ja
cmp
push
pop
mov
mov
mov
out
cmp
mov
mov
es
cmp
das
xchg
sbbb
mov
js
lcall
ja
mov
lods
outsl
mov
mov
and
mov
hlt
push
int
pop
push
cwtl
jnp
jbe
in
pop
xor
aas
mov
jmp
cwtl
adc
lods
shlb
or
fcoml
jnp
xor
out
leave
hlt
mov
mov
mov
call
rclb
aad
xor
pop
int
sti
insl
xor
fldcw
xor
jmp
jg
fucompp
icebp
insb
fldcw
jnp
mov
xor
jmp
push
leave
mov
xchg
icebp
out
sub
dec
lea
xor
fisubrs
aas
aad
mov
test
inc
inc
je
int3
sarl
cmp
xor
xor
inc
ds
subb
mov
dec
out
lahf
mov
mov
xchg
aam
sbb
jbe
lods
xchg
mov
lods
rcrl
push
push
rcrb
cs
fmul
les
fwait
lods
mov
in
or
jo
sub
mov
mov
test
neg
lcall
dec
in
imul
lea
inc
xchg
mov
test
imul
mov
xchg
into
shr
cmc
inc
inc
test
adc
xor
fwait
dec
push
and
std
lock
mov
loop
adc
outsl
xor
lahf
add
cs
mov
or
cli
testl
stc
lcall
xchg
sbb
add
add
and
mov
push
push
sub
mov
int
inc
xchg
insb
add
jno
xor
dec
cmpsl
faddl
in
mov
movsb
xchg
xchg
xchg
and
cmp
icebp
dec
xor
inc
cmp
mov
das
popf
adc
mov
inc
jp
testb
ljmp
sti
mov
xchg
into
add
fmull
add
test
sbb
mov
adcl
jp
cmp
sub
sbb
cmp
xor
add
push
test
xchg
lahf
shl
mov
andb
jo
mov
in
add
arpl
push
insl
arpl
in
nop
dec
xchg
pop
js
xor
into
fiaddl
mov
mov
adcl
mov
gs
outsl
inc
out
add
jno
xor
inc
xchg
fldt
inc
sub
xchg
jle
xlat
dec
xchg
dec
xchg
inc
loope
cmp
outsl
rorb
jbe
pushf
in
movsl
into
push
inc
lahf
xchg
adc
aaa
int
mov
sti
divps
mull
or
stos
inc
aaa
repz
mov
push
jp
mov
push
ja
mov
sbb
addr16
pop
xchg
dec
mov
ficoml
popa
test
dec
sbb
jecxz
jmp
mov
mov
jmp
jb
dec
mov
mov
xchg
stos
movsb
xchg
insl
pop
and
mov
pop
xor
outsb
xor
inc
inc
stc
aad
xlat
ljmp
mov
gs
pop
xor
shl
inc
vmovq
mov
jg
cmpsb
bound
insb
xchg
aaa
sub
pop
sub
mov
xor
push
ds
addr16
xchg
adc
es
mov
popa
push
test
cmp
shll
nop
test
mov
or
mov
xabort
mov
lahf
dec
clc
out
into
xor
into
xchg
sub
out
fdivrs
or
cli
inc
add
pop
popa
stos
aaa
stc
mov
sbb
daa
jbe
int3
ds
inc
into
lods
mov
js
mov
push
mov
repnz
insb
mov
add
jno
in
mov
inc
push
orb
outsb
jno
cmp
xor
push
xor
jg
ds
xchg
fisttpll
je
mov
data16
addb
imul
xchg
in
pop
adc
or
xchg
jg
push
andl
ret
cmc
xchg
push
loopne
loop
cltd
loop
pop
dec
and
scas
out
lock
jnp
outsl
push
pop
push
xchg
out
outsb
dec
test
stos
and
mov
inc
add
enter
sbb
jecxz
mov
loope
out
sub
pop
cwtl
dec
out
and
bound
leave
pushf
jnp
test
xor
xor
inc
jo
dec
inc
inc
push
das
out
xor
nop
xchg
inc
fwait
aaa
rcrb
sbb
inc
inc
shrl
or
sub
repz
or
mov
sahf
sub
adc
leave
xchg
es
dec
cs
push
test
jo
xorl
and
add
push
mov
stos
xor
cmc
xchg
addr16
inc
pop
lock
pop
std
fists
iret
xchg
mov
out
add
jne
sub
push
stos
insb
dec
shl
movsb
daa
ds
ret
xchg
call
inc
mov
data16
gs
adc
push
mov
cmp
jns
inc
inc
dec
insb
ss
xchg
out
ror
adc
loop
or
cmp
je
xor
cs
repz
push
adc
mov
pop
ss
or
scas
xchg
sub
insl
push
add
ss
mov
loope
stos
pop
mov
jle
cmp
jbe
in
jecxz
popf
pop
fistps
and
mov
dec
mov
lds
jg
shlb
sub
cmpsb
adc
jnp
xor
pop
sarb
pusha
push
push
cmp
fisttpll
sub
in
mov
aas
stc
pop
popf
xchg
add
shl
loop
shlb
or
fcoml
int
cmp
rcll
jnp
sub
inc
dec
or
jb
inc
jnp
test
dec
stc
hlt
sub
pop
jle
jne
jne
sbb
adc
mov
cs
pop
in
sti
mov
mov
mov
pop
xchg
or
je
mov
push
push
jmp
adc
pushf
adc
jno
inc
scas
cwtl
xchg
aaa
popf
popa
inc
and
orl
add
jbe
mov
in
movsb
cmp
nop
sti
in
jae
or
sbb
flds
mov
add
sahf
stos
xor
push
dec
loopne
stos
stc
out
out
fstl
mov
dec
aad
sub
dec
mov
aad
sbb
gs
cld
cmp
test
and
lret
shll
sti
pop
dec
arpl
pop
inc
lcall
cmpsl
pop
in
iret
jp
mov
push
push
mov
xor
sbb
mov
push
cmp
out
mov
push
pusha
ret
lahf
aad
sbb
push
loopne
fstpt
loop
xchg
ss
scas
and
mov
dec
jecxz
mov
jno
mov
sbbb
cli
push
popf
lcall
xor
pop
out
fcomi
mov
xchg
stos
rcl
and
popl
shlb
mov
int3
in
aas
in
mov
fmull
inc
pop
imul
orl
xor
xchg
sub
and
movsb
sbb
orl
push
mov
fcmove
sbb
insl
loopne
cmpsl
push
dec
addr16
out
popf
jge
mov
push
and
mov
xchg
lods
scas
xor
rcr
pop
in
mov
aas
or
mov
stos
lret
adc
push
xlat
loop
mov
mov
inc
mov
aad
xchg
sti
mov
leave
xchg
mov
int3
stos
adc
mov
dec
mov
mov
out
jbe
add
mov
insl
jle
cmp
in
adc
cmp
inc
clc
push
mov
mov
lret
pop
imul
add
sub
pop
xchg
outsl
insl
ret
adc
xchg
inc
sub
xchg
scas
or
xchg
pop
pop
mov
cmp
inc
jae
jecxz
nop
and
and
mov
cmp
test
mov
add
add
int
mov
jp
bound
les
push
subl
sub
imul
push
pushf
ret
stos
mov
mov
cmp
in
pop
adc
adc
popf
pop
loopne
mov
insl
jge
mov
mov
mov
add
inc
int
dec
std
push
mov
clc
loop
lock
add
sub
loopne
test
xchg
and
cmp
jbe
out
jae
push
fcompl
pop
sub
sbb
mov
jge
mov
cmp
mov
add
lcall
mov
push
inc
sub
pop
dec
xor
mov
mov
pop
mov
das
cwtl
outsl
aad
arpl
lods
int3
cwtl
fwait
int
cmp
adc
in
mov
aad
clc
push
outsb
push
pop
stc
or
cwtl
js
sub
dec
inc
ret
aad
mov
leave
mov
or
stos
xorl
ljmp
inc
lds
cmp
inc
les
mov
insb
jl
jge
or
adc
nop
test
push
or
icebp
push
or
xchg
jo
jbe
mov
inc
test
lret
dec
inc
jae
push
ljmp
mov
aam
mov
mov
xlat
lds
out
lret
pop
adc
push
cmpsb
mov
cli
xor
sbb
inc
mov
mov
jmp
add
not
push
scas
clc
das
orl
inc
jnp
mov
cmc
push
arpl
or
lock
push
cmp
fwait
cs
mov
jl
pop
xchg
or
out
and
imul
fdivrs
lds
pop
sti
repnz
inc
scas
ss
in
stos
dec
pop
sub
in
daa
push
pushf
test
lods
insb
outsb
sub
daa
mov
xorb
pop
lods
fbstp
test
lahf
das
stos
shll
out
cmpsl
cld
std
inc
test
mov
out
adc
in
popa
pusha
jg
cwtl
inc
add
adc
jne
imul
ret
in
or
cmp
pop
inc
dec
mov
sbb
loop
into
clc
mov
adc
sbb
jnp
and
cwtl
dec
and
xchg
fdiv
sbb
nop
insb
push
imul
lea
or
xchg
sub
mov
mov
xchg
pop
hlt
sbb
adc
faddl
mov
aaa
push
cltd
movsb
inc
mov
mov
out
jmp
aad
dec
out
in
leave
add
stos
loope
es
ret
dec
nop
mov
sub
mov
and
jmp
jecxz
arpl
sbb
inc
sbb
xor
sub
pop
jp
jmp
arpl
cmp
fmuls
enter
sti
sub
pop
int3
arpl
aam
jge
cmp
jle
sbb
scas
cmp
movsl
rclb
or
mov
jbe
loop
mov
jp
xor
icebp
add
jl
add
bound
and
imul
jo
push
mov
test
mov
hlt
lcall
cld
jp
stos
lds
dec
xor
xchg
add
shl
inc
ja,pn
jns
sub
jmp
stc
dec
pop
mov
repz
cltd
push
add
cmpsl
cmc
lds
lret
inc
xchg
es
cmp
sub
stc
sahf
inc
test
jle
test
pop
cmpsl
orb
jmp
inc
or
insl
cmp
fs
inc
cs
inc
addl
dec
hlt
jecxz
mov
ljmp
or
jmp
inc
sbbb
nop
in
xor
rcrb
dec
sbb
stc
movsb
pop
test
push
push
xchg
push
fistps
ljmp
sbb
inc
lret
push
icebp
call
mov
insb
js
ljmp
scas
xchg
es
scas
sub
ds
cmpb
adc
jno
je
jo
pop
push
std
lahf
iret
jge
inc
out
sub
shrl
out
lahf
mov
and
pop
aad
jno
insb
and
adc
or
outsb
inc
sbb
insb
xchg
lods
aas
cmp
add
mov
mov
or
cmp
roll
in
cmp
mov
or
movsb
mov
daa
jmp
sar
jns
mov
leave
sub
cmc
inc
cltd
mov
mov
test
fisubrl
push
push
jns
or
xor
ret
mov
jl
and
jnp,pn
or
imul
or
dec
pop
je
repnz
orb
call
lea
out
into
cmp
int
cmp
jmp
repnz
aas
pop
pop
enter
jg
xor
cs
gs
add
cmp
mov
insl
sub
or
mov
ret
addl
movsl
test
gs
mov
sahf
lods
push
scas
push
or
jnp
and
dec
sub
daa
cltd
xor
aad
cwtl
add
insl
jnp
popa
cmpsb
inc
mov
xor
sub
test
xorl
sub
rcrb
shr
mov
dec
pusha
mov
jl
or
jle
rolb
push
movsl
and
jns
addr16
push
push
loopne
lahf
mov
add
out
out
dec
int3
outsb
jns
mov
iret
cmp
loope
mov
cmp
xchg
jb
popa
push
insb
cwtl
icebp
mov
out
pop
sub
pop
pop
jecxz
mov
lret
fadds
pop
ret
fidivl
int3
xchg
pop
iret
call
test
insl
cmp
scas
dec
imul
repz
jns
dec
movsb
fucom
fucomi
fndisi(8087
lret
xchg
lods
jge
je
ret
fdivs
mov
std
xor
add
in
dec
stos
jecxz
lea
sti
dec
faddp
or
loop
dec
sbb
hlt
addl
adc
in
sbb
add
pop
add
push
xor
mov
dec
lock
hlt
loopne
frstor
ss
insl
and
loopne
mov
nop
pop
inc
inc
in
sub
outsb
sub
push
jp
decl
aam
js
lahf
push
jecxz
cmp
xchg
cmpb
mov
and
push
sarl
pop
add
cmp
jg
imul
cld
sub
je
lcall
ljmp
adc
out
test
pop
fcmovnu
test
pusha
lret
sbb
jnp
enter
je
mov
pop
cmc
lahf
mov
imul
insl
jmp
xor
dec
cmp
outsl
or
dec
xor
dec
jp
adc
inc
mov
push
in
sub
hlt
inc
fisttpll
jge
dec
in
lods
inc
lcall
push
pop
mov
jge
push
popf
mov
xchg
les
mov
movsb
adc
ss
adc
mov
jns
jns
jge
daa
loop
jbe
jno
in
lea
aad
sub
shlb
inc
mov
sub
jnp
stos
jp
xlat
out
divb
xor
test
nop
or
sub
mov
xchg
rcrl
jnp
adc
mov
mov
jge
add
inc
dec
inc
cmpsl
xor
mov
fisttpl
or
add
jp
push
xchg
mov
cmp
push
imul
add
sti
js
xor
xchg
pop
push
push
lds
pop
aad
push
mov
icebp
lds
inc
fimull
sub
scas
call
fwait
icebp
out
xchg
jg
das
mov
inc
test
scas
mov
mov
fadds
jmp
mov
push
xlat
inc
shl
fcomps
push
sub
cmp
jle
jnp
pop
loope
mov
xlat
aas
lret
push
push
inc
sub
dec
pop
and
stc
mov
sub
daa
lahf
iret
cld
aad
ja
fimuls
sub
jae
lret
repnz
jb
sbb
aad
sar
popa
cmp
stos
loopne
sbb
sub
sbb
jbe
cmp
ja
aam
jmp
jns
sub
outsl
add
mov
mov
jo
insb
add
dec
inc
cs
lret
test
stos
mov
sub
jle
and
repnz
push
mov
mov
outsb
push
fs
out
fdivs
clc
mov
pop
mov
icebp
dec
add
ret
loop
sub
ds
test
pop
rorl
sbbb
sub
mov
xor
mov
pop
in
inc
lods
outsl
aaa
or
aaa
ficomps
inc
pop
push
mov
pushf
inc
in
arpl
call
ret
mov
pop
push
ficoms
ljmp
das
or
sbb
imul
loopne
mov
cmpsb
inc
shlb
int
addb
pop
addr16
repnz
popa
adc
jne
cltd
sub
mov
fs
cmpsl
jmp
sbb
addr16
pop
fisubrs
test
xor
dec
xor
jg
cmp
leave
xchg
mov
or
jne
cmp
mov
pop
jp
cmp
inc
outsb
pop
int3
ret
test
std
and
test
or
xor
cs
cmpsl
out
loope
and
mov
popa
mov
mov
cmp
sub
dec
shr
push
int
inc
les
pop
cmp
xor
fisttps
sbb
jbe
pop
aad
sbb
mov
flds
outsb
repz
insl
insl
pop
mov
pop
sub
jle
xchg
cmp
pop
stos
mov
mov
pop
pop
mov
adc
ret
out
imul
xor
cltd
mov
sbb
in
leave
add
cmp
pop
ja
pushf
das
xor
repnz
cli
jnp
fsubl
sbb
push
mov
lahf
dec
or
sbb
push
add
aad
dec
mov
stos
mov
mov
test
das
xor
push
addr16
incl
cmp
mov
les
jno
stos
jge
add
inc
xchg
jl
jbe
cmp
lds
jnp
in
and
sahf
push
hlt
out
inc
jbe
cs
in
pop
fldt
mov
unpcklps
mov
mov
adc
and
flds
cmpsl
mov
xor
mov
pop
push
or
mov
imul
dec
daa
cli
into
dec
stos
mov
fdivrl
test
filds
sbb
push
ja
rcrb
out
out
or
and
jnp
add
cwtl
jns
and
enter
cmp
outsl
std
cld
call
push
dec
mov
nop
jmp
es
mov
adc
adc
xor
add
mov
loope
push
cmp
xchg
mov
inc
cmp
sub
pop
jecxz
xchg
push
pop
bound
lds
leave
xchg
aaa
xchg
cmp
lret
xchg
or
or
pop
in
pop
mov
fwait
lret
xchg
cmp
add
test
ss
sahf
xor
jb
loopne
mov
adc
push
inc
jl
dec
mov
mov
fucomip
jno
stc
pop
push
sub
into
mov
pusha
dec
pop
sbb
mov
xchg
imul
pop
mov
mov
push
das
lds
or
mulb
mov
pop
fmuls
inc
aaa
xchg
push
cld
ret
icebp
mov
or
sub
mov
or
mov
adc
or
fsubr
clc
add
push
cltd
dec
adc
push
inc
rcll
and
xchg
fiadds
mov
sti
sbb
push
mov
add
rcrl
mov
daa
inc
call
jns
mov
out
jge
movsl
in
xor
je
push
pop
adc
std
push
add
xchg
loop
out
mov
add
push
ret
hlt
int
cltd
xchg
lods
jecxz
mov
cmp
sub
xchg
negb
mov
inc
negl
push
pop
rep
xor
or
xlat
adc
cltd
push
sbb
lods
dec
jno
mov
push
sub
mov
test
aad
cltd
mov
adc
sbb
xchg
cmpl
push
test
and
pop
adc
sbb
gs
movsl
or
scas
arpl
jp
lods
je
mov
mov
add
mov
faddl
add
js
xchg
sub
sub
dec
dec
subb
addb
scas
cs
stos
test
and
test
imul
pop
arpl
insb
mov
jae
xchg
insl
popa
push
cs
cwtl
mov
jbe
xchg
mov
stos
jle
jg
push
sub
fwait
ds
sbb
jne
fldenv
xchg
cmp
fimuls
inc
push
or
ja
xlat
sub
mov
jmp
mov
sbb
xor
jg
and
outsl
fisttpll
xor
sub
imul
dec
rcll
test
mov
jnp
mov
loope
dec
or
enter
jle
in
xchg
jmp
ja
lret
add
rorb
pop
mov
mulb
and
pop
pop
pop
js
sbb
push
int3
fdivl
add
cwtl
push
out
movb
loopne
jl
add
dec
push
cli
stos
cmp
ret
fsubrl
inc
mov
mov
push
out
mov
mov
jmp
lea
add
loop
push
aaa
cmp
or
mov
mov
xor
les
lods
stos
push
mov
or
cli
mov
loop
pop
mov
in
or
stos
aad
jmp
mov
pop
cltd
cmpsl
mov
sbb
les
pop
push
xor
ds
in
and
pusha
mov
adc
jbe
int3
mov
pusha
leave
xchg
js
out
xchg
out
and
fadds
cmpsl
jl
lea
mov
add
shrb
xchg
sbb
fsub
loope
cltd
into
pop
dec
mov
inc
daa
push
jle
addb
test
out
enter
xor
xchg
hlt
imulb
repz
jns
ret
sub
mov
xor
jle
xchg
dec
mov
mov
inc
xchg
and
xchg
out
data16
sbb
mov
jnp
out
sub
push
into
or
fnstcw
mov
xchg
or
inc
xor
and
xor
cmp
jle
lahf
add
call
jg
fildll
loopne
cmp
or
ret
mov
dec
shlb
int3
testl
sbb
int3
es
dec
clc
outsb
jecxz
call
ds
cld
push
fsubl
scas
fistpl
dec
nop
into
lods
inc
jl
test
xlat
fdivl
cltd
popf
mov
xchg
and
xchg
pop
mov
nop
jno
jecxz
sar
pop
cltd
das
daa
or
loop
test
fcoml
sarb
mov
and
ret
adc
pop
inc
fwait
add
inc
push
push
test
jecxz
ljmp
mov
xlat
lock
add
insl
xor
jnp
out
popl
mov
mov
mov
and
shl
dec
fwait
xchg
cmc
sahf
arpl
add
jp
mov
test
jmp
jge
add
jbe
jge
sahf
addr16
into
lret
xor
ja
or
es
fisttpl
mov
dec
enter
lock
dec
outsl
dec
rcl
sbb
lcall
jnp
sti
popa
mov
addr16
arpl
add
ja
mov
cmp
xchg
lds
enter
cmp
pop
inc
pop
outsl
cwtl
cmp
dec
mov
les
ljmp
fs
repnz
jbe
aad
cmpsl
roll
and
iret
loope
jne
jno
mov
xlat
mov
fisttpll
mov
clc
loop
ljmp
aam
repnz
dec
mov
stos
add
fdivs
adc
jecxz
inc
and
iret
inc
mov
outsl
lcall
push
mov
subl
ljmp
xchg
xchg
and
cwtl
out
shrl
xchg
imul
xchg
adc
test
das
mov
outsl
subb
mov
test
divps
ret
fiaddl
pushf
adc
xlat
enter
xor
xchg
lds
stos
mov
outsl
fwait
cltd
lds
testl
mov
jecxz
mov
test
mov
into
xchg
jns
jo
mov
aas
aaa
jle
cwtl
cmpsl
adc
push
push
cs
aam
sub
mov
in
dec
inc
ljmp
jle
in
aaa
cli
ret
mov
pop
sub
gs
jge
lcall
mov
cmp
sbb
add
cli
jg
hlt
or
loopne
jns
sarl
xchg
add
dec
xor
inc
xchg
mov
mov
arpl
sub
test
andl
add
dec
ss
sbb
xor
mov
cmp
add
mov
in
in
mov
data16
lret
push
scas
push
jmp
lret
dec
push
daa
and
mov
outsb
popa
pop
bound
or
jne
or
add
mov
ja
mov
and
push
push
fsubl
out
add
jae
cmp
pop
faddl
xchg
icebp
mov
jns
scas
adc
xor
xchg
jbe
fsub
nop
mulb
xchg
cs
dec
test
aas
das
xchg
loop
or
mov
fimull
bound
inc
cmpsl
xchg
mov
fdivr
ja
cmpsl
fisttps
les
cmc
or
data16
int
bound
aam
rolb
inc
pop
xchg
rcrl
xchg
sub
mulb
and
dec
scas
leave
xchg
push
das
dec
mov
push
sar
sbb
xor
xchg
mov
jo
inc
or
clc
stos
mov
js
test
int3
ret
inc
mov
imull
adc
sbb
lock
adc
cli
popf
mov
in
push
or
outsb
popl
pop
pop
adc
stc
jne
bound
add
inc
mov
cli
mov
lret
pop
mov
fadd
stos
repz
sbb
rcrl
jne
push
cld
add
scas
cmp
cld
add
pop
iret
sub
mov
test
mov
lret
mov
mov
lahf
mov
push
shll
cld
pop
ret
xor
mov
or
sbb
aas
mov
mov
mov
icebp
loop
mov
inc
ret
mov
rcrl
jg
xor
and
sahf
jl
cmp
cs
dec
mov
in
mov
scas
in
add
sub
jg
sbb
hlt
cmp
icebp
outsl
lret
lret
lret
aaa
mov
test
push
les
ret
dec
movsb
out
mov
jp
into
fcmovu
test
repnz
es
shll
addr16
movsl
mov
insl
jb
ret
aas
pushf
push
pop
arpl
call
sub
cmc
pop
es
push
test
mov
rorl
dec
jo
sbb
mov
test
or
or
fisubl
inc
cltd
push
jns
pushl
loope
subl
cmpsb
insl
repnz
jmp
jle
mov
lods
in
xchg
mov
xchg
insb
lcall
cs
rorb
sub
bound
das
mov
xor
push
sbb
ss
not
adc
ds
fcmovnu
movsb
mov
push
test
fsts
pop
addb
daa
lcall
sbb
jbe
cmp
faddp
xchg
jg
cmpsl
repnz
xor
xchg
mov
and
ljmp
mov
xchg
xor
arpl
fbstp
inc
inc
inc
mulb
hlt
cmp
adcb
fsub
sub
and
das
jnp
hlt
insb
mov
xchg
out
call
cmpsl
or
mov
xor
xchg
sahf
insb
xchg
xchg
fisubl
xchg
dec
add
cmp
jle
daa
idivb
adc
pop
mov
xor
ret
add
push
bound
jp
idivb
sbb
dec
mov
jle
mov
out
or
aaa
jno
push
push
lret
pop
lock
sbb
jecxz
jl
inc
mov
dec
dec
mov
mov
jmp
stc
lret
mov
sbbl
cmp
out
lds
loope
pop
xor
and
pop
dec
mov
addb
jo
int
gs
lret
pop
call
sbb
gs
insb
cld
das
aas
out
sahf
pop
inc
repnz
into
mov
mov
pop
dec
lcall
sar
lret
scas
in
pusha
inc
mov
gs
jl
js
cmpsl
and
mov
and
or
or
fstps
ss
and
mov
insl
xchg
in
bound
mov
arpl
fcomi
int
pop
jg
push
das
movsl
loope
or
mov
xlat
int
inc
or
adc
out
jb
inc
inc
mov
jbe
mov
adc
or
or
jns
int
jns
sti
inc
inc
pop
lock
dec
lcall
add
mov
xor
addl
cs
dec
xchg
push
and
xchg
into
xor
cmpsb
popf
xor
fsubrs
xchg
adc
pop
cmpsb
ret
cmp
aas
int
pushfw
sbb
pop
fstpt
outsw
les
js
jle
pop
imul
sub
roll
sub
cmp
pop
push
fimuls
dec
sbb
fwait
xchg
xor
and
das
mov
ret
jmp
mov
dec
int3
fbstp
adc
mov
xchg
sbb
loopne
mov
ljmp
dec
sub
dec
call
jle
daa
and
jecxz
mov
jns
fsubs
push
dec
mov
stos
testl
lret
xacquire
mov
pusha
ds
cmp
popf
mov
mov
jnp
loop
popf
lea
xchg
sub
pop
ffreep
push
stos
pop
ds
inc
jmp
insb
push
dec
jmp
dec
arpl
dec
mov
pop
add
in
js
jmp
mov
sbb
fldl2t
outsl
nop
mov
add
add
fcmovnb
mov
inc
xor
jmp
or
push
int
sbb
je
lret
pop
aas
jae
scas
outsb
mov
or
cwtl
rcll
push
pop
jl
add
enter
xchg
ret
push
es
add
bound
test
ljmp
cmc
adc
leave
cli
outsl
addb
pinsrw
sub
out
jb
xchg
mov
jo
aad
test
add
mov
mov
mov
leave
pop
xor
xor
push
data16
popf
jp
sbb
cs
int
popw
add
jb
xchg
push
clc
pop
jl
ss
pop
dec
pop
test
xchg
stos
xchg
mov
arpl
mov
sub
mov
out
or
fsub
insl
mov
mov
sahf
or
mov
cld
jecxz
mov
lods
nop
lods
outsb
inc
mov
test
lcall
stos
mov
mov
insb
mov
lahf
lahf
dec
jns
test
fistpl
icebp
out
mov
cwtl
adc
pop
pusha
js
mov
out
inc
stc
int3
sahf
sub
pop
mov
lcall
enter
rolb
andl
iret
mov
js
inc
lret
test
out
test
add
add
jmp
in
outsl
mov
push
jg
ds
pop
cmc
jno
scas
rol
fwait
cmp
sbb
mov
out
pop
pop
sub
shrl
out
loop
xchg
popf
lret
in
shr
xor
lret
inc
and
mov
shlb
loop
xor
lret
push
call
shrb
int
pop
mov
out
dec
mov
bound
nop
add
in
mov
adc
outsb
cltd
add
in
push
jl
fst
inc
ljmp
test
test
and
push
arpl
lea
outsb
in
pop
push
xor
lahf
imul
roll
sti
and
dec
loope
bound
sbb
scas
xchg
mov
push
lods
in
sbb
mov
xchg
icebp
pop
mov
cmp
repnz
jmp
mov
out
ljmp
xor
out
mov
cmp
das
cmp
outsl
mov
lods
jns
pop
fidivl
lock
hlt
dec
sbbb
movsl
sub
or
data16
adcb
das
and
xor
lahf
dec
mov
jo
jmp
push
shlb
pop
adc
inc
lahf
jns
sub
or
xor
xchg
fwait
iret
fimuls
lds
out
sub
inc
cltd
or
inc
push
sbb
jns
dec
repz
movsb
addb
loop
loopne
push
xchg
pusha
dec
mov
jl
sti
sub
adc
lods
cmc
adc
dec
fbstp
push
cmp
push
in
xchg
jge
mov
out
ljmp
push
jnp
adc
outsb
addr16
lret
jbe
push
jbe
mov
inc
leave
in
pop
jmp
or
mov
out
sbb
and
test
mov
ja
mov
jb
lds
test
popa
mov
jo
sbbl
scas
push
scas
das
xlat
cmp
mov
mov
push
les
add
jp
inc
push
insl
add
xorl
cwtl
out
lret
lcall
mov
jo
push
add
sub
outsb
sub
cmpl
mov
ja
data16
pop
pop
xchg
jo
mov
mov
in
pop
push
mov
fcmovb
test
push
pop
adc
mov
pop
mov
cmp
jle
inc
pop
xor
jle
adc
popf
aad
movsb
dec
out
mov
jg
jno
push
xor
enter
jle
ljmp
xchg
pushf
pop
jl
or
out
int3
mov
inc
bound
les
xchg
jl
movsb
fs
and
cmpsl
pop
fcmovnu
cmp
sub
pushf
pop
sub
fisttpll
scas
add
jns
sarb
je
jle
push
and
mov
negb
popa
pop
outsb
ja
cmp
xor
fwait
mov
popw
outsb
jecxz
jae
movsb
pusha
movsl
push
sbb
pop
in
filds
scas
sbb
push
fwait
repnz
push
sbbl
mov
lahf
push
out
xor
dec
ficoms
jbe
movsb
add
mov
popf
mov
adc
mov
gs
je
fstl
dec
loop
sub
bound
mov
out
mov
pushf
jno
cwtl
test
jne
je
mov
les
inc
lret
in
outsl
mov
imulb
jno
mov
push
dec
gs
mov
shrl
mov
addl
jo
shr
pop
pop
xchg
je
lock
decb
jbe
fwait
xchg
sbb
pop
inc
pop
cmpb
fidivrl
lock
lcall
movsl
lcall
xchg
hlt
mov
mov
pushf
dec
sub
jbe
ret
jnp
sub
xor
dec
sub
lds
fxch
lock
sub
jne
add
sub
rorl
jb
ds
out
inc
fiaddl
stc
jecxz
cmpsb
frstor
adc
xchg
test
dec
popl
sbb
mov
mov
xchg
mov
mov
add
jbe
mov
fcoml
mov
icebp
test
xchg
movsl
fldl2e
or
mov
in
mov
popa
add
sbb
dec
gs
sarb
loopne
imul
je
popf
jmp
jg
mov
xchg
jno
push
out
mov
jno
sti
shrb
lcall
cwtl
outsb
int3
arpl
pusha
cmp
cmp
adc
popf
jns
popa
dec
mov
fildll
mov
iret
sbb
jno
xchg
sub
xchg
fcmovnbe
into
sub
arpl
add
pop
xchg
arpl
sbb
ret
dec
lea
out
je
popa
stos
xchg
push
les
leave
jo
add
cmp
cmpsl
mov
dec
enter
popf
pop
int
repz
cwtl
xlat
in
and
cli
test
or
push
add
jp
andb
stc
sbb
mov
jbe
cli
push
test
jg
ret
hlt
fistps
mov
in
dec
bound
jg
push
movsl
test
ret
out
mov
cmp
outsl
sbbb
jp
xchg
jne
push
lods
mov
cmpsb
push
ret
orb
stos
and
inc
sub
je
dec
inc
movsb
xchg
dec
icebp
jo
push
out
xchg
fdivrs
nop
and
jno
push
test
jge
push
mov
mov
jecxz
faddl
push
sbb
push
adc
mov
arpl
mov
dec
lds
jp
adc
pop
push
and
enter
sahf
jge
mov
cmp
cwtl
test
cmp
mov
push
jne
in
or
aad
call
in
pop
scas
and
lods
sahf
lods
push
ficompl
subb
sub
add
out
leave
aad
hlt
add
ja
fiaddl
cmp
faddl
testl
test
addr16
addb
sbb
cmovb
inc
stos
mov
scas
in
divb
mov
in
fsubr
in
mov
add
dec
and
push
gs
push
inc
add
mov
add
or
out
insl
movsl
jmp
cmp
sbb
jp
cli
push
int
mov
movsb
scas
hlt
jnp
sub
pusha
xor
outsb
mov
aas
mov
xchg
into
inc
cmp
stos
sub
cmpsb
ret
arpl
mov
js
imul
sbb
mov
movsbl
sub
mov
dec
flds
xchg
jo
push
orl
mov
xor
xorl
lret
cmp
sbb
addr16
ja
push
clc
mov
and
into
xchg
rorb
int
addr16
and
mov
push
mov
adc
mov
mov
fimuls
push
or
int3
ss
shlb
in
pop
pop
cmp
pop
dec
jp
icebp
data16
mov
ja
fcompl
test
xor
in
mov
leave
jge
dec
pushf
and
jns
lea
out
or
push
int3
xchg
xchg
aaa
insb
sub
adc
dec
sbb
adc
dec
lock
out
xchg
xchg
test
jo
jns
iret
idivb
orl
iret
ficomps
xlat
out
and
nop
xchg
xchg
or
lea
fwait
test
adc
xor
imul
fld
xchg
stos
or
xor
dec
mov
mov
outsl
push
inc
xor
leave
xchg
ret
fcmovnu
pusha
in
insl
aas
loop
mov
sti
int3
adc
pop
cmc
sbb
scas
fdivrl
fmull
wrmsr
mov
xchg
inc
cmp
mov
sbb
fwait
dec
ret
add
sbb
xor
ljmp
mov
push
dec
fistl
out
cmpb
jg
mov
cld
repnz
adcl
out
pop
cmp
pusha
jecxz
xor
xor
jo
fidivrs
stos
push
fs
out
dec
xchg
int
pusha
enter
nop
enter
xor
stos
ja
mov
imul
stos
mov
pop
xchg
fdivrs
sub
jae
test
push
add
cltd
mov
ret
mov
sbb
rcr
movsl
lods
fisubrs
clc
and
dec
jle
sub
sub
push
pop
push
push
or
je
mov
lds
outsl
dec
sar
push
jle
lods
out
push
icebp
add
aaa
iret
and
test
mov
push
cs
lcall
pop
sbb
loopne
lock
jmp
popa
xor
loope
lea
add
jge
loope
pop
leave
jp
stos
push
cmp
aad
xchg
dec
ljmp
pop
fdivs
mov
jp
adc
xchg
dec
in
notb
stos
notb
enter
jbe
jno
sub
ret
js
and
fndisi(8087
adc
pop
hlt
xchg
pop
cmp
loope
push
jo
or
mov
or
ljmp
negb
xor
out
cmp
loop
xchg
dec
xor
jp
cmc
movsb
adc
jle,pn
add
pop
fs
sti
mov
ds
lods
cmp
in
or
dec
lds
pop
push
push
add
lock
adc
testl
jb
in
mov
jle
or
jns
lahf
cmp
jmp
add
nop
cmp
int3
shlb
imul
loopne
outsb
dec
adc
mov
push
stos
dec
xchg
nop
mov
mov
cmp
cmpsl
cmc
rcl
dec
nop
bound
adc
pop
xor
movsl
add
pop
es
dec
pop
and
gs
cmp
cmp
pop
les
ret
rol
mov
push
or
xor
test
mov
push
dec
icebp
sti
pop
pop
or
fdivs
pop
mov
fidivs
pop
push
sbb
mov
pop
ret
and
pop
pop
fsubrs
repnz
icebp
mov
test
aaa
mov
scas
aas
test
out
push
inc
adc
inc
sub
add
inc
ret
pop
or
cld
imul
test
fisttpl
fimuls
ss
xor
cmp
jmp
loope
jmp
push
mov
outsl
sub
icebp
xchg
scas
xchg
cwtl
subl
pop
mov
andl
bound
stos
sahf
js
in
and
push
xchg
and
cmpsb
sbb
lret
fisubrl
lods
insb
mov
lods
negb
cwtl
sbb
cs
sub
mov
addr16
dec
call
ret
cmp
xchg
add
xor
cmp
daa
inc
cld
pop
add
and
mov
daa
push
in
mov
std
push
out
cmp
xor
or
imul
in
xor
cmpsb
xor
jo
inc
jno
or
cmpsl
outsl
fdivrl
imul
jl
lea
pusha
push
shrd
lcall
insl
pop
jne
wrmsr
movb
dec
sarl
push
push
mov
dec
xchg
jne
pop
inc
add
mov
pusha
in
pop
pop
lret
es
adc
xorb
mov
lock
mov
fdiv
push
cmpsb
add
test
cmp
in
jg
cmpsb
inc
push
xchg
lea
lock
imul
testb
mov
daa
cmpsl
sbb
mov
or
and
adc
jg
pop
daa
insb
gs
xchg
xchg
inc
ret
dec
cld
stos
jp
aam
js
fxch
push
and
jne
imul
div
les
cmpl
movsb
repnz
pop
gs
int
mov
mov
xor
mov
aad
pop
lahf
cmp
sahf
outsb
aaa
lods
popa
cmp
mov
imul
orb
pop
movsb
lea
jp
jmp
push
inc
stos
sub
popa
jne
lds
inc
jne
sub
jb
jbe
xchg
das
mov
mov
mov
lret
add
xor
xor
xchg
xchg
xchg
fcoml
mov
imulb
fsubl
incb
xor
repz
push
cli
push
mov
inc
xchg
mov
xchg
jp
addb
push
mov
mov
cmpsl
or
cltd
mov
out
sbb
jbe
rcll
dec
mov
push
std
inc
pop
lods
cmpsb
pusha
cli
cwtl
divl
aaa
movsb
xor
push
orl
popf
mov
movsl
pop
outsb
stos
dec
xor
loopne
xor
inc
pop
sbb
fdivs
push
mov
jne
aas
lcall
mov
cs
pop
mov
and
add
cmp
mov
lock
xchg
jmp
gs
mov
lock
imul
and
push
mov
sub
jp
xlat
cwtl
fimull
bnd
insl
lea
rorl
mov
loop
test
lods
test
pusha
std
cs
stos
call
cltd
jns
popf
mov
outsl
push
pop
push
push
in
jp
gs
sahf
or
les
inc
pop
int3
or
insl
pushf
mov
jle
mov
or
and
aaa
out
scas
fstpl
jecxz
stos
out
push
ja
xor
mov
jbe
out
push
out
out
fcmovu
xor
aas
jb
lret
imul
fistl
lds
fcoml
or
cmp
out
ss
andl
aas
xchg
lcall
ss
cltd
and
leave
mov
mov
cmpsl
leave
out
in
and
pushf
jl
mov
out
clc
fmuls
xchg
mov
mov
sbb
mov
and
dec
mov
jge
mov
mov
sub
adcl
mov
mov
dec
mov
test
addl
rcr
jnp
and
mov
jmp
mov
dec
out
mov
lcall
test
pop
ljmp
arpl
xchg
mov
test
cmp
mov
push
jmp
pop
popa
bound
fdiv
andl
xchg
aad
sub
sub
stos
jecxz
insb
ljmp
add
sarb
lods
in
mov
aas
xor
mov
pop
and
movsl
aam
sub
xchg
sbb
gs
test
cwtl
or
and
sub
cmp
lret
xlat
fmull
repnz
jb
repnz
inc
mov
mov
cmpsb
test
xchg
scas
scas
sti
loop
fnstcw
sbb
in
cld
jg
rorl
fwait
xor
xor
xchg
push
push
push
clts
xor
outsl
loope
leave
movsl
test
fildll
stos
std
xchg
xor
mov
add
xchg
hlt
rcrb
jmp
add
adc
push
stos
lret
in
mov
rorl
out
add
clc
aas
ljmp
inc
repz
adc
add
pop
mov
xor
pop
pop
js
neg
mov
insb
dec
adc
std
dec
xchg
jae
adc
jg
scas
mov
push
xchg
cli
pop
push
and
stc
xchg
hlt
clc
fisttpll
outsb
pop
clc
sbbb
lcall
aas
jecxz
push
pop
in
adc
xchg
mov
jns
xchg
sub
in
mov
add
mov
lds
outsb
jmp
sbb
outsb
in
in
not
loop
iret
adc
jnp
outsl
ja
xchg
dec
shrb
out
ret
inc
inc
mov
add
pushfw
jno
out
out
dec
in
push
test
dec
jb
mov
ss
das
gs
inc
push
fsubs
clc
shll
lods
inc
and
inc
incl
dec
lds
sbb
aas
dec
ficoml
push
mov
imul
jmp
ret
cld
dec
add
and
jp
inc
dec
push
aas
mov
cmp
jg
and
in
in
shll
xchg
and
movsl
insl
mov
call
xchg
out
jb
and
inc
aam
int
sub
stos
sbb
xchg
sbb
mov
xchg
pop
xchg
push
add
movsb
insb
mov
pop
sahf
in
xchg
cmp
leave
pop
or
out
test
in
inc
sub
dec
jno
cmp
pop
shrb
jns
xor
add
adc
jle
mov
push
pushf
neg
cmp
xor
cmp
add
arpl
out
fstpt
dec
and
push
lods
inc
pusha
mov
dec
xor
stc
adcb
sbb
and
shll
out
cmp
int
mov
or
dec
insb
or
or
mov
cs
aaa
cmc
mov
clc
das
dec
xchg
inc
mov
test
or
cmc
mov
cwtl
dec
repnz
flds
cmpsb
movsl
sub
xorl
xchg
dec
fnstenv
cmpsl
cmp
sbb
mov
out
mov
mov
jo
leave
fs
xchg
ficoms
notl
pop
mov
mov
xor
dec
hlt
cld
add
outsb
mov
out
ret
adc
push
dec
ror
clc
xor
ljmp
mov
orb
movsb
in
les
xchg
xchg
jnp
imul
std
loope
sbb
mov
and
addr16
push
mov
cmp
cmpsl
insb
popa
jmp
dec
add
dec
jns
insl
add
in
pop
xorl
jge
dec
enter
push
pop
pop
fbstp
ret
jo
nop
pop
ss
cmp
arpl
leave
aaa
icebp
dec
jle
int
or
fists
popa
cmp
popa
call
js
xchg
out
mov
ficoms
int3
cmc
xchg
in
sub
les
push
mov
adc
jge
shll
dec
sub
jge
inc
sbb
xchg
xlat
pop
pushl
ja
scas
and
jns
add
shlb
sub
dec
pop
lds
ret
pop
cmp
mov
lock
ljmp
xchg
sub
fmuls
add
lret
adc
cmpsb
pop
ljmp
lcall
jl
shlb
ret
xor
lea
aaa
and
sbb
jno
pop
out
jae
aad
test
push
ss
cmp
sub
sbb
pop
js
xchg
add
data16
mov
mov
xchg
add
sbb
mov
cld
sti
pop
imul
inc
leave
jge
cli
mov
pop
bound
inc
cmc
sub
lcall
ss
adc
les
pushf
xchg
xchg
jae
test
movsb
lahf
sahf
mov
sbb
and
jb
jnp
lret
or
dec
stos
or
jo
outsl
mov
fs
or
mov
test
mov
xchg
lods
and
mov
lods
push
mov
mov
ffreep
adc
adc
aad
enter
in
sub
bound
enter
call
mov
cld
pop
jno
or
out
push
mov
rorl
in
fnstenv
jno
pop
cwtl
cld
sbb
mov
lret
cmp
scas
popf
or
gs
sub
out
jae
inc
cmp
jbe
mov
arpl
mov
push
cli
lods
pop
or
pushf
or
out
pop
xchg
in
xchg
shll
insb
testl
rol
dec
lcall
lods
mov
inc
inc
mov
pop
ja
fidivrs
jmp
adc
mov
push
or
clc
shrb
leave
mov
mov
adc
nop
into
mov
iret
xor
shr
daa
add
push
lahf
and
sti
adc
aas
insl
movsb
cmp
or
or
movsb
nop
mov
outsb
scas
pop
mov
mov
ljmp
outsb
dec
fsubl
jo
mov
sbb
js
jno
out
pop
sbb
push
xchg
push
cmc
mov
and
inc
and
insl
cmp
adc
sbb
loope
or
int3
pop
stos
pop
pop
or
cmp
sbb
xchg
mov
aas
test
aaa
imul
lcall
lahf
addl
jno
rcrb
test
gs
push
es
add
les
mov
push
lret
lret
xor
loopne
ret
mulb
cmp
cmp
lret
popa
inc
cld
jp
mov
inc
cmp
jg
jo
mov
cli
aam
add
sbb
ss
jo
pop
orb
orl
jne
in
jge
push
mov
cltd
xor
loop
inc
fsubp
jnp
lock
or
xchg
mov
inc
xchg
mov
xor
or
mov
push
daa
cmp
movsb
fwait
add
fmul
or
shlb
add
orl
jnp
cwtl
lret
sub
jge
fcompl
mov
sub
lcall
push
dec
shlb
popa
pop
cmp
outsb
scas
inc
subb
cmpsb
push
mov
cmp
lods
pop
and
add
cmc
push
fistpll
xor
cmp
std
mov
repnz
jnp
aas
add
hlt
int3
and
jg
fcmovnu
cs
pop
bound
jns
sbb
pop
ljmp
push
jo
lods
test
jo
add
fucomp
in
popf
cmp
jecxz
sahf
cmp
push
mov
bswap
cs
pop
mov
xchg
xor
mov
jmp
aas
repz
and
inc
lods
outsb
leave
add
cmp
mov
mov
jne
enter
mov
jmp
mov
dec
test
repnz
and
add
cltd
and
lahf
inc
mov
jae
fiaddl
push
imul
in
mov
movsb
adc
jg
test
cmp
cmp
inc
xor
xor
xchg
sbb
jno
test
or
in
iret
or
jp
in
jle
fimuls
mov
out
mov
dec
pusha
mov
hlt
dec
mov
out
lret
xor
inc
push
test
xor
arpl
or
xchg
jnp
out
jl
pop
cmp
pop
stos
cwtl
in
or
cmp
ljmp
mov
push
test
sub
sbb
repnz
je
cmp
testb
shll
fadds
cmp
push
pop
sbb
cmpsb
lea
call
outsb
cmpb
mov
rsqrtps
or
cld
cmpsb
mov
xor
dec
hlt
push
fs
mov
cwtl
xor
xor
fisubrs
dec
push
ds
in
fdivrl
inc
push
xor
cs
into
mov
push
popf
out
jne
fsts
movsl
mov
iret
inc
out
into
enter
and
leave
add
imul
xchg
jmp
repnz
xchg
mov
xor
xchg
cmpsl
push
xchg
jg
dec
lds
outsl
jbe
int3
and
aaa
mov
xchg
jecxz
mov
mov
das
cmp
mov
jmp
mov
xor
mov
or
dec
call
test
mov
into
push
or
movsb
gs
jns
jae
jae
jnp
jp
jecxz
dec
xor
adc
cmpsl
push
call
test
mov
and
js
mov
jmp
dec
sub
sbb
clc
lock
pop
filds
xchg
call
movsl
dec
sub
xchg
pop
mov
add
pop
adc
mov
sti
loope,pt
xchg
mov
sbb
flds
clc
scas
xor
cmp
loop
rcr
cli
mov
lret
pop
enter
fildll
outsb
shrb
mov
xorl
int3
test
bound
ss
pop
sbbl
and
cmpsl
xchg
mov
stc
and
or
cld
cmc
or
outsl
or
mov
mov
push
mov
pop
lock
sub
test
mov
ss
jae
cmp
push
shll
add
or
ss
xchg
sub
sarl
icebp
aaa
cmp
add
lds
mov
sub
lea
inc
clc
or
xchg
pop
js
cmp
xor
mov
cmp
pop
loopne
xchg
sub
push
test
dec
lahf
pop
mov
lods
ss
dec
clc
push
adc
jl
mov
mov
xor
dec
scas
add
jmp
addr16
mov
inc
leave
cmp
mov
add
mov
xor
test
mov
jmp
fcmovnb
adc
loope,pn
cmp
ficomps
sub
fstpl
sti
mov
lds
pop
bound
imul
or
addr16
hlt
sbb
shrb
imul
dec
popa
stc
adc
sub
les
jo
sbb
roll
mov
je
dec
repz
xchg
aas
xor
inc
mov
mov
sub
in
loope
jge
idivl
imul
push
aad
pop
mov
in
aas
mov
and
ljmp
fimull
mov
jge
cmp
aaa
inc
scas
aas
fcompl
add
inc
lods
and
pop
push
ja
cmp
mov
enter
push
pushf
jno
stos
out
ficoms
sub
adc
stos
push
pop
cmp
pusha
push
leave
push
repz
xchg
jns
push
mov
cmp
aas
xchg
stos
pop
jns
aaa
sbb
mov
stos
stc
sbb
xor
inc
sub
iret
xor
imull
cmp
mov
sub
das
jp
hlt
sbb
pop
in
ja
or
outsl
jge
jbe
sbb
mov
inc
jns
xchg
test
loopne
or
xlat
jg
sub
test
lret
inc
dec
and
dec
pop
imul
xchg
inc
mov
add
add
in
mov
jmp
scas
ljmp
es
out
mov
ss
loope
cltd
insl
pop
lret
dec
mov
push
lods
mov
sbb
jg
repz
cld
sarl
sub
sbb
jmp
jg
in
mov
std
mov
or
out
in
cmpsl
pushf
lods
ljmp
pushf
sbb
adc
mov
mov
push
sahf
pop
and
addr16
jge
push
pop
mov
repz
xchg
pop
pop
icebp
pop
xlat
iret
hlt
push
mov
aaa
pop
cmp
insb
call
mov
and
and
movsb
fcoml
push
xchg
xchg
push
out
ss
push
fildl
jmp
push
inc
cmp
sbb
xor
mov
aam
mov
xchg
ret
mov
lea
add
dec
lods
std
mov
imul
mov
lock
movsl
imul
lds
xor
jne
nop
sub
and
xchg
jg
fildll
pop
add
js
xor
repnz
push
push
outsl
ficoml
mov
pop
in
nop
pop
xlat
cmpsl
dec
xchg
sbb
int
mov
ja
xor
cmp
stos
jp
xchg
loope
cmpsb
fmul
fs
je
push
insb
push
cmp
cmp
insb
sub
pusha
sbb
shll
scas
mov
lret
outsb
lea
inc
repnz
dec
cltd
xor
mov
push
dec
push
adc
fs
ja
lods
fidivl
iret
or
test
xchg
push
fwait
mov
mov
sub
sub
push
stc
stc
mulb
testl
mov
lea
xor
sti
lods
icebp
lcall
adc
lret
sarl
je
bound
push
push
outsl
sbbl
outsl
in
inc
cwtl
dec
mov
mov
and
data16
or
pop
sahf
jbe
xorb
int3
jns
fdivrs
lret
sbb
movsl
pusha
and
das
es
mov
cmp
xor
adcl
loopne
mov
mov
push
jno
in
mulb
xor
add
lret
jb
ret
dec
cmp
ss
int
mov
test
cmp
pop
sub
das
inc
aaa
shlb
mov
in
pop
jl
fdivr
js
mov
lods
cwtl
std
int3
aam
es
fimuls
adc
fisttpl
shll
cmp
mov
sti
inc
pop
xor
pop
xlat
lds
aas
popf
scas
adc
insl
pop
arpl
push
imul
rorb
inc
out
pop
xchg
cmc
inc
add
ss
jb
clc
dec
cmpb
push
mov
pop
xor
or
in
sub
cltd
dec
ss
mov
shlb
jo
insl
fldenv
jl
test
fsubl
xor
xchg
and
cmp
and
sbb
in
arpl
sub
stc
shl
xor
ljmp
pop
jecxz
popf
sub
js
ja
sub
bt
cmp
jecxz
mov
arpl
cwtl
cmp
gs
outsb
jne
mov
jno
fdivp
mov
aam
and
pop
cmp
inc
fiaddl
mov
dec
in
push
jnp
and
inc
push
cltd
pop
nop
ret
jle
or
jle
in
xor
imul
ret
cmp
mov
mov
imul
inc
push
pop
jl
jne
dec
testb
sbb
jp
xchg
mov
test
mov
sbb
push
out
and
lock
push
movb
movsb
dec
add
leave
jns
cld
fnstsw
cmpsl
mov
cltd
inc
inc
insl
sbb
sahf
mov
sbb
in
repz
cmp
mov
out
loopne
shrl
inc
xlat
jp
dec
jno
jge
daa
scas
inc
out
and
in
jecxz
sub
out
jp
pushf
shll
dec
test
subl
dec
dec
mov
and
lret
xchg
jne
jge
inc
cmp
cmp
retw
mov
insl
jae
mov
insb
push
cmpsl
mov
iret
mov
jmpw
and
push
sbb
testb
sbb
int
sbb
nop
adc
inc
and
sbb
lret
ja
popa
inc
psrld
cmp
jae
inc
fs
cmpsl
cmp
jae
dec
in
mov
xor
rcl
js
out
add
mov
xor
aad
xchg
test
hlt
mov
sbb
xchg
pop
mov
xchg
xchg
mov
and
inc
ljmp
and
xor
in
insl
jne
in
and
idiv
divl
sahf
ja
xorw
je
movsb
mov
gs
add
iret
dec
rcrb
mul
and
mov
dec
and
push
pop
loopne
jle
mov
fsubr
inc
sub
mov
aad
jp
addr16
cmc
mov
inc
mov
mov
incb
enter
ja
pop
ss
loop
popa
push
xor
cmp
sub
push
sbb
sbb
fdivs
hlt
stos
cwtl
addr16
or
or
out
ss
scas
mov
fists
sarl
arpl
mov
xor
push
xlat
push
in
push
lea
imul
imul
arpl
pushl
fsubr
ss
jge
cld
out
mov
mov
das
dec
mov
sub
int
cwtl
jae
push
lock
mov
mov
lahf
in
loop
add
mov
icebp
iret
out
cmpsb
dec
push
mov
mov
mov
jmp
popa
or
imul
fmul
inc
imul
fidivl
jp
pushf
mov
sub
jecxz
fldl
xchg
mov
gs
out
mov
imul
fldt
movsb
xlat
mov
dec
add
ret
mov
repnz
fisubl
push
mov
popf
outsl
and
enter
loopne
adc
inc
dec
loope
jne
lret
pop
movsb
jb
xchg
out
cmp
xchg
popf
lods
adc
dec
in
inc
lret
sbb
mov
jo
movsb
shr
cmp
jecxz
xchg
or
leave
pop
inc
sahf
mov
add
sar
sub
xchg
neg
les
popa
rorl
test
xchg
out
call
pushf
xlat
xor
xor
sahf
in
and
mov
sub
xor
aaa
aas
scas
jmp
cmp
jne
mov
mov
cmc
outsb
ja
inc
decl
cmp
add
mov
inc
aas
cmpsb
fs
mov
rorl
and
cwtl
lock
push
pop
add
enter
mov
and
dec
inc
test
mov
xor
or
push
sub
andl
jns
sub
repnz
loopne
cmp
sti
push
pop
cmp
mov
inc
out
outsl
fwait
rcrl
push
int3
sub
int
cmp
mov
ja
icebp
sub
mull
xor
movl
ds
xor
leave
pop
xchg
and
or
rclb
cmc
and
test
leave
cwtl
xor
push
sub
clc
and
movsl
inc
les
rolb
pushf
sub
push
mov
pop
xchg
stc
push
mov
aas
mov
lods
mov
hlt
push
int
cmp
xchg
test
insl
test
push
mov
jg
hlt
popa
pushf
adc
pop
jnp
adc
mov
mov
adc
rcrb
lods
ljmp
ret
out
insl
sbb
and
cs
jne
jne
or
out
sbb
jmp
or
aad
or
or
or
iret
scas
es
fsts
stos
mov
stos
xor
mov
mov
in
push
sbb
fwait
outsl
or
mov
imul
xchg
push
adc
jo
test
popf
add
in
lret
repnz
and
jecxz
jp
fnstsw
and
movsl
mov
arpl
incl
xchg
mov
hlt
sbb
sti
int3
mov
adc
mov
in
call
aas
in
mov
push
stos
lea
push
sahf
and
mov
cltd
dec
xor
sahf
jns
cli
enter
test
andl
in
lret
lret
pop
push
inc
ret
fcompl
jns
nop
ss
fsts
clc
jno
fs
mov
dec
imul
inc
cltd
fsubrl
jnp
lock
adc
fdiv
adc
sbb
cli
pop
or
push
jns
jmp
loope
add
fildl
lock
fdivrs
dec
aam
dec
cmpb
imul
mov
movsb
fwait
fs
dec
push
and
jns
mov
cmc
cs
imul
mov
push
in
pop
fs
push
xchg
fdivrs
or
mov
sub
xor
aas
mov
push
ljmp
sub
mov
jge
lret
dec
dec
mov
push
sub
int
lea
xchg
sub
insb
les
dec
jecxz
inc
mov
fucom
lret
lods
push
add
jge
jp
sbb
xor
cmp
mov
jae
lret
mov
addl
pop
jmp
into
fists
or
adc
mov
out
stos
and
pop
repnz
xor
push
sbb
pop
and
enter
sub
xchg
js
decb
sub
jg
sbb
cwtl
or
mov
xchg
out
lret
cmc
cmc
cmp
out
outsl
dec
pop
lock
in
or
imul
mov
xchg
aam
dec
mov
rorl
mov
loop
mov
jns
call
ss
sub
addr16
inc
mov
pop
flds
xchg
cltd
int
cs
jl
mov
inc
call
add
aad
pop
sub
or
dec
xor
xchg
imulb
pop
xchg
out
cmp
mov
lods
pop
add
push
push
mov
lret
fmuls
pop
test
add
push
fdivs
xor
jg
jle
std
xor
into
mov
mov
or
sub
leave
sbb
out
inc
pop
loope
jge
sub
divl
insl
lret
fucomip
jne
inc
out
rorl
mov
adc
out
cmc
testl
std
iret
jmp
push
repz
xchg
loop
xchg
dec
sub
jns
or
in
mov
xchg
jl,pn
in
mov
cmp
fstpt
cmpsb
or
push
mov
sbb
mov
test
rolb
and
je
push
jg
mov
and
xchg
pop
in
int
es
push
nop
dec
data16
mov
sahf
cltd
fimuls
dec
movsb
das
push
jl
scas
flds
and
jle
mov
pop
pop
xchg
lea
int3
dec
cltd
jns
lret
in
pop
inc
cmpsl
loope
lods
clc
pop
and
clc
iret
pop
stc
pop
daa
cwtl
sub
adc
push
call
lcall
stos
nop
les
sbb
dec
cwtl
clc
inc
shrb
jo
mov
test
adc
hlt
mov
stc
cmpsl
xor
int3
into
addl
xchg
enter
xor
pop
pop
pop
cwtl
lret
gs
pop
mov
outsb
sub
es
popl
gs
pusha
fdivrl
xlat
decl
push
fnsave
stc
sbb
push
mov
sbb
daa
push
dec
fisubl
sub
leave
popf
into
push
cmp
jnp
decl
xorl
loope
iret
out
aam
pop
int3
inc
sub
mov
xor
xor
cwtl
xor
out
xchg
jnp
or
sahf
pop
jnp
jns
pusha
ds
pop
pop
aaa
jg
push
or
cmp
daa
cli
outsb
mov
add
jp
rcrl
cmp
sub
pop
sbb
mov
adc
sub
dec
gs
pop
jno
pop
pushf
addr16
dec
ljmp
sub
popa
shl
scas
push
in
xchg
insb
xor
jmp
out
stos
jp
mov
leave
xchg
mov
xchg
or
divb
ja
insl
rcr
mov
sub
jp
xor
je
or
jmp
movsl
push
pop
test
ret
insb
sahf
ss
xor
inc
cmp
shlb
mov
lds
insb
cmpsb
inc
and
movsb
stc
test
adc
aad
outsl
lahf
leave
incl
fcom
mov
ret
cs
add
popf
push
iret
sbb
push
lea
fimull
pushf
push
pop
xchg
push
pop
cmp
mov
dec
imul
cmp
int3
insb
push
jge
gs
jno
jp
cmp
sub
mov
mov
shrl
adc
mov
ja
cmc
adc
sahf
ret
adc
sub
addb
ljmp
jp
test
adc
jge
sub
test
fcmovnb
push
int3
jb
mov
test
inc
push
xlat
out
pop
mov
sbb
cmp
cmpb
int
cmpsb
into
jl
enter
into
sarl
push
mov
xor
mov
into
fidivl
mov
xor
sub
xchg
cmp
daa
insb
into
lret
call
cmp
leave
subb
push
mov
sbb
aad
cmc
shrb
xor
addr16
fstl
mov
lock
adc
jnp
xchg
es
pop
orb
imul
shll
cmp
and
leave
sbb
ljmp
xor
dec
or
xor
addr16
inc
push
or
xor
lahf
push
leave
sbb
stos
cmp
cmpsl
shr
pop
xchg
pop
in
sub
xchg
mov
jne
or
fldcw
out
sub
push
stos
enter
push
icebp
repnz
adcb
out
bound
sahf
mov
dec
dec
ljmp
pop
jecxz
fbstp
gs
ret
in
add
adc
sti
repz
sub
aas
enter
inc
lcall
or
mov
out
pop
cli
dec
jg
and
jl
jnp
imul
mov
adc
or
adc
out
repz
inc
jo
ss
arpl
sub
or
jb
mov
jns
fcomp
xchg
sti
xor
loop
or
push
jg
fisubl
repz
clc
xchg
jb
fimuls
jno
sub
adc
loope
test
ja
sbb
add
das
or
jle
lea
int
lock
pop
dec
ljmp
jl
jecxz
lods
or
das
and
jecxz
cmp
jae
mov
les
xchg
stos
cmp
mov
outsl
mov
cmpsl
ss
lahf
test
dec
out
or
pop
mov
cs
es
or
imul
repnz
jecxz
jle
adc
and
movsb
sbb
sbb
pop
cmp
mov
popf
dec
iret
jne
cwtl
scas
add
lock
bound
mov
pop
add
ror
pop
or
imul
mov
pop
or
bound
fwait
mov
and
mov
lret
sahf
sub
mov
mov
mov
add
mov
mov
loope
jns
stos
test
loop
sar
xchg
fsubrs
imul
data16
insl
dec
sub
mov
jb
sbb
xchg
and
inc
adc
dec
mov
andb
mov
sub
fimull
jb
gs
push
addr16
inc
ficoms
xorb
pop
mov
cwtl
add
fdivr
xchg
insl
out
loopne
dec
sbb
mov
lea
xchg
jge
jl
je
in
negb
sub
cmpsb
gs
andb
jg
fwait
or
dec
jecxz
jnp
repnz
ja
push
je
sub
je
popf
push
or
repnz
notb
sbb
subl
jbe
cmpsl
sahf
stc
or
fwait
xlat
leave
xchg
dec
adc
jle
in
mov
bound
or
mov
hlt
cmp
scas
mov
cmpsb
mov
cmp
mov
pop
jge
dec
dec
push
cld
add
aam
jno
mov
xchg
mov
xchg
aas
push
add
lock
xchg
sbb
and
les
out
sbb
int
ret
insl
pop
or
push
dec
popa
and
xchg
dec
mov
xlat
jb
ss
pop
mov
das
sbb
sbb
jo
adc
inc
add
lahf
sbb
cli
addl
and
xor
cmp
xor
ret
xchg
ret
dec
daa
mov
or
add
mov
lret
insb
in
icebp
add
scas
sbb
xor
nop
adc
mov
lcall
mull
pop
or
xchg
mov
fbstp
lahf
inc
jne
ds
mov
push
fdivs
jp
mov
mov
jb
sub
sub
js
leave
lret
pop
add
cmp
test
push
aad
fcomps
ljmp
loopne
dec
shll
push
pop
dec
test
imul
pop
hlt
mov
and
sbb
mov
movsb
cmp
xor
jge
iret
sub
aam
shlb
lods
add
cld
xor
pop
xor
inc
out
pop
cmpsl
inc
movsl
mulb
call
stc
arpl
decl
cmpsb
sbb
or
inc
add
jae
push
std
data16
mov
inc
inc
add
cmpsl
mov
adc
into
mov
jge
jg
push
mov
mov
shlb
call
lret
popa
stos
pop
sub
pop
fwait
xor
sbb
sub
mov
testb
incb
andb
sbbl
pushw
subl
inc
in
insl
movsl
pop
adcb
sbb
push
loope
push
loope
std
adc
sub
or
push
adc
jns
jl
inc
jecxz
pop
loope
stos
das
xor
xchg
add
arpl
pop
pop
hlt
les
addr16
inc
sbb
add
pop
inc
sbb
cltd
sub
or
xchg
test
movsb
fs
jae
cmp
xlat
push
sbb
xor
jnp
movl
in
scas
rcll
movl
sub
int
stc
or
and
mov
jp
iret
nop
lret
dec
push
leavew
push
cltd
cmp
subl
ds
cmp
sbb
sub
sbb
cmc
lahf
push
out
scas
or
cmp
mov
or
test
std
mov
ficoml
dec
loope
js
daa
cmp
mov
push
mov
movsb
scas
push
fsts
cmp
out
and
jb
out
addr16
cmp
jg
daa
lea
lcall
ds
ds
cmc
lcall
push
outsb
mov
call
das
inc
loop
cmp
into
push
bound
pop
sub
or
cltd
les
mov
jmp
and
out
push
sub
and
in
or
pop
or
mov
lahf
daa
inc
xor
xor
leave
mov
enter
mov
test
mov
leave
notb
jmp
push
in
fldl2e
in
fisubl
negb
imul
sub
xchg
cmpsb
mov
xor
or
insb
jns
or
lods
xchg
or
xor
or
sbb
adc
inc
and
mov
in
pushf
stc
rcrl
stos
and
popf
sub
mov
mov
pop
sbb
in
pop
outsb
jecxz
cmp
cmp
clc
in
mov
das
jo
lea
xchg
sahf
push
fmulp
push
cmp
add
or
fisubs
mov
js
les
inc
fcompl
loope
jge
push
das
popa
inc
lcall
push
mov
inc
and
jb
sbb
pusha
or
jno
push
sub
xchg
mov
enter
arpl
out
mov
dec
or
mov
push
pinsrw
inc
adc
ss
aam
loope
dec
dec
inc
aad
outsl
sbb
popa
mov
xchg
xchg
pop
inc
mov
repnz
cmp
dec
mov
rorl
cwtl
out
jmp
mov
cmp
pop
pop
cli
push
xorb
mov
shll
mov
scas
fidivs
andb
add
into
mov
cmp
cmp
sahf
shrl
pop
or
lea
push
iret
mov
or
cmpsl
cmp
jo
fucomip
pop
das
test
int
or
sbb
ss
daa
das
pop
sahf
pushf
mov
dec
negb
cwtl
incb
loopne,pt
ret
es
lahf
dec
int3
lds
and
cwtl
jne
inc
adc
roll
xor
leave
jle
lcall
shr
rorb
mov
leave
xor
in
lods
fldt
imul
sub
xchg
sub
mov
adcb
pop
popa
adc
mov
pop
repz
inc
rcl
out
int3
in
mov
rcll
cwtl
sub
test
rolb
push
jb
mov
nop
test
repz
xchg
cmpsl
in
loope
adc
test
cs
out
xchg
push
sbb
sub
sub
and
iret
mov
lods
fildll
mov
sub
jge
mov
rcr
xor
testb
pop
xchg
xchg
cltd
hlt
repz
and
mov
or
fxch
mov
popf
out
xchg
repz
fstl
outsb
aaa
notb
shll
loop
dec
scas
xchg
jne
movsb
mov
sbb
pop
push
xchg
ja
or
imul
rorl
mov
outsl
and
xchg
out
shll
jnp
cmp
scas
imul
aaa
notl
std
test
in
scas
fldenv
in
outsb
sbb
hlt
in
jg
and
divl
in
movsb
pop
add
das
iret
enter
push
push
jge
or
je
sub
in
push
lcall
or
popa
mov
stos
iret
test
jne
jbe
movsb
ja
push
test
das
hlt
adc
testb
mov
mov
cmp
mov
clc
push
lods
cmpsb
rclb
dec
fwait
mov
inc
jo
jp
rcrb
mov
push
cwtl
cs
xchg
ss
loope
dec
adc
sahf
stc
repnz
pop
jo
pushf
inc
pop
ss
xchg
jns
sbb
out
xor
jno
jbe
data16
add
addr16
cvtps2pi
test
and
ljmp
in
cmp
imul
xor
lock
mov
and
mov
inc
jbe
sbb
pop
add
fbstp
insl
lahf
repz
sbb
push
adc
sub
push
outsl
dec
mov
cmp
sbb
rcrl
daa
dec
dec
jae
gs
sub
xor
xchg
mov
mov
cmp
loope
orb
mov
loopne
sbb
mov
mov
fs
adc
push
lea
inc
cmp
aas
int3
imul
xor
fwait
push
and
and
mov
mov
pop
out
scas
les
loopne
pushf
dec
scas
sub
lret
adc
out
push
cmp
pop
nop
data16
cmp
jl
push
lahf
jle
jne
insb
add
loop
pushf
mov
rorb
sbb
loop
in
jg
mov
lahf
xchg
ja
pop
jmp
pop
sbb
test
orb
pushf
or
jae
and
or
mov
xor
rclb
arpl
jmp
mov
mov
push
pop
outsb
pcmpgtb
popf
mov
paddusb
leave
nop
ja
add
push
sub
stos
or
cs
xchg
ds
outsb
cmp
mov
dec
enter
dec
jle
adc
fldenv
inc
sbb
pop
mov
pushf
push
xor
add
fs
mov
gs
faddl
push
repnz
add
adc
jnp
push
fs
loopne
mov
push
rcl
dec
std
jg
jmp
dec
jnp
iret
mov
mov
mov
mov
int3
push
or
fsts
dec
jp
fstp
int
mov
movsb
push
mov
adc
loope
popf
sub
fnstsw
cwtl
xchg
in
lret
nop
add
mov
pop
dec
mov
inc
xchg
fsubr
es
js
outsl
mov
sbb
mov
popw
jl
inc
lods
cmovns
shll
xor
orb
xchg
jnp
xchg
insl
cld
arpl
icebp
mov
add
push
ficomps
lock
mov
push
imul
mov
in
sub
jo
cmc
or
xor
insl
jge
mov
inc
pusha
js
fs
push
adc
dec
mov
gs
aas
adc
jbe
push
xor
jo
filds
mov
mov
orb
push
add
push
daa
sahf
addl
popf
adcl
das
pop
lods
cltd
sub
in
fistps
nop
aam
push
js
pushf
mov
mov
ja
and
push
push
dec
sahf
lcall
push
jbe
mov
aaa
loopne
dec
ja
clc
xchg
and
cld
mov
out
daa
push
dec
push
mov
jp
insl
xchg
and
pop
jle
test
xchg
rclb
sbb
sbb
or
pop
shl
int3
fisubl
in
in
in
out
popa
adc
xor
fwait
lods
xchg
out
int3
lcall
jae
xor
cmp
sahf
cmp
adc
loop
push
jmp
dec
cmp
je
jle
inc
mov
leave
hlt
push
ja
inc
jns
lods
insb
aas
gs
mov
mov
push
mov
adc
pop
cwtl
and
ds
and
scas
xor
je
stos
or
fists
clc
inc
mov
adc
lahf
xchg
dec
in
ss
out
jp
repz
js
cmp
inc
xor
dec
jno
xor
jns
call
cwtl
mov
cmp
mov
dec
mov
pusha
adc
cmp
cmp
jg
mov
stos
arpl
or
xor
cmp
pop
out
push
repnz
outsl
test
jg
loop
das
aad
jbe
ret
jmp
movsl
mov
jne
bound
icebp
out
cmp
adcb
sahf
iret
jns
mov
test
xor
mov
jns
lods
fldl
leave
mov
jg
stos
popf
jo
popf
dec
jle
mov
xchg
int3
dec
mov
push
ja
test
xorl
jns
xchg
test
jbe
out
shl
lock
jnp
and
mov
cmpsb
testb
and
test
jae
dec
daa
inc
or
mov
hlt
cmp
mov
ret
jne
mov
mov
pop
and
loope
push
push
lock
dec
jns
cmp
sbb
fidivl
std
push
pop
xchg
mov
sbb
icebp
mov
sub
dec
nop
outsb
push
mov
sub
sarb
mov
andb
cmp
sub
outsb
jne
push
pop
mov
cmp
sub
mov
mov
pop
jl
sub
dec
dec
push
test
and
data16
mov
test
shlb
push
mov
mov
pop
hlt
push
in
xor
jmp
inc
incl
mov
faddp
mov
fadds
pop
add
push
push
pushw
jnp
outsb
aaa
adc
push
test
cmp
js
fisubl
xor
iret
jno
mov
cmp
push
leave
mov
mov
in
push
loopne
mov
lret
mov
lea
or
pop
sbbb
inc
stos
mov
mov
int3
mov
out
aad
mov
dec
data16
popf
sti
gs
mov
and
xchg
in
adcl
push
mov
insl
xchg
mov
add
xchg
cltd
inc
pop
cwtl
xchg
cs
mov
dec
popf
rolb
aaa
or
mov
notl
xchg
mov
lahf
jae
mov
repz
sbb
sahf
inc
pop
inc
inc
inc
xchg
fiaddl
clc
mov
push
into
xor
inc
sub
sbb
pop
in
ja
sub
adc
jnp
rep
cmp
scas
mov
xchg
hlt
jle
std
test
stc
push
adc
xchg
in
adc
mov
fisttpll
das
adc
sahf
dec
dec
rorb
pop
jle
and
pop
xchg
aaa
inc
fwait
int
addr16
add
dec
jmp
dec
xlat
lret
leave
push
les
out
pop
and
fwait
popf
mov
dec
jge
mov
popa
jb
xor
imull
aas
mov
jne
mov
ds
fistl
cmpsb
les
ja
mov
cmp
and
pop
int
lea
popa
aas
mov
mov
or
pop
mov
hlt
je
rcrl
or
jmp
jmp
or
fisubrs
fstpt
rorl
and
fcmovnu
mov
rol
sub
nop
add
sub
push
jge
jmp
xchg
dec
and
push
in
jl
test
hlt
push
dec
pop
lcall
inc
mov
xor
adc
call
outsl
jp
mull
push
loopne
outsl
scas
inc
pop
out
lret
insb
bound
jae
mov
or
or
push
sahf
lds
mov
xor
sbb
sub
add
imul
cmp
jno
out
lods
mov
cmpsb
mov
sub
addr16
fistps
sub
xor
add
dec
stos
ret
in
sub
hlt
push
in
push
or
add
test
push
call
jmp
sbb
jecxz
scas
push
pushf
sub
addr16
inc
xchg
lea
int
fdivr
jmp
push
xchg
sarb
xor
xor
sbb
aad
insl
xchg
ljmp
push
adc
and
ss
out
push
or
push
in
icebp
out
mov
inc
andl
lods
insl
lea
sub
loopne
data16
sub
sub
ret
mov
add
ss
xchg
cmpsl
xlat
lock
mov
sbb
call
dec
gs
fidivl
fdivrp
xor
out
es
pusha
jmp
repz
push
sarl
adcb
jbe
das
and
repz
ss
ja
inc
or
and
add
enter
sahf
enter
add
jp
outsb
gs
or
into
pop
enter
call
and
lret
notb
rcl
das
cmp
mov
pop
cmp
sti
idivl
bound
push
ret
jmp
das
xor
dec
mov
sahf
adc
jbe
mov
push
sbb
push
sti
das
movsl
push
gs
push
cmp
jne
push
insl
dec
cmp
movsl
rorb
sbb
adc
jns
sbb
sti
popa
pop
sub
ret
mov
mov
sub
inc
mov
leave
into
or
mov
imul
push
xchg
lods
jge
hlt
scas
push
xor
adc
cmp
lods
in
div
cmp
sahf
int3
xor
pop
push
or
out
and
add
sar
cli
dec
orl
mulb
fildl
test
sub
jmp
fcomp
test
andl
sbb
xor
inc
sbb
hlt
scas
je
adc
mov
adc
and
enter
in
cli
movl
orl
sbbl
add
loop
cmp
dec
xchg
push
add
test
subl
test
add
sahf
add
push
cmpb
ret
cli
cmc
faddl
mov
test
pusha
popf
mov
test
les
testb
nop
dec
fsubp
inc
xchg
clc
xchg
outsb
push
jbe
stos
gs
lock
pusha
pop
sbb
jle
push
sti
daa
xchg
mov
mov
adc
add
mov
in
cmp
pop
cmpb
repz
adc
jle
sub
sbb
fistpll
dec
loopne
jo
cmp
cmp
notb
scas
int3
push
jo
out
jne
orl
into
lea
xor
lods
sbb
push
adc
push
cmpsl
jmp
pop
imul
rep
pushf
ljmp
push
sbb
mov
inc
xchg
hlt
arpl
mov
dec
mov
lcall
ret
xchg
mov
fistl
cmpsb
cmpsl
cmp
into
loopne
pop
stos
sub
fsubs
lahf
out
mov
jb
fs
mul
inc
repz
jne
das
and
sbb
add
ja
cmp
stc
cmpsb
jnp
cltd
das
loopne
xor
inc
testb
jp
aas
movsl
fidivrl
fstl
popa
imul
test
nop
bound
xchg
jle
xor
mov
clc
call
mov
pop
daa
jne
dec
xchg
or
cmp
mov
addr16
jecxz
mov
push
jle
mov
leave
and
mov
lock
inc
call
pop
dec
inc
mov
je
mov
push
push
testb
mov
pusha
test
mov
ljmp
lahf
inc
xchg
mov
into
bnd
lds
pop
push
or
stos
jb
cmp
fstps
mov
rcl
fwait
add
aas
cmp
pop
xchg
popf
xchg
sub
inc
pop
faddl
fstpt
lock
cmp
mov
jne
push
ss
les
cmp
ficoms
or
test
xchg
mov
out
das
stc
push
clc
es
mov
jle
add
jno
decb
insl
loop
daa
jge
sbbl
or
test
pop
inc
mov
es
mov
or
pop
mov
jle
or
adc
pushl
push
outsb
jo
popa
pop
out
test
add
add
inc
mov
icebp
inc
jns
inc
and
pop
lret
sti
lahf
sbb
add
pop
mov
add
dec
jg
mov
outsl
pop
push
xchg
in
into
stc
mov
out
cmp
and
pop
insb
test
push
mov
or
ret
sub
or
sbb
arpl
test
mov
ret
push
dec
sbb
dec
mov
lret
aaa
mov
fwait
movl
mov
xchg
mov
xchg
lds
sti
ret
cmp
int
dec
cli
xor
imull
mov
fcmovne
fsin
push
sub
add
push
leave
dec
push
lds
lcall
cmp
int
mov
subb
push
pop
sahf
loope
pop
cmp
je
addr16
jnp
icebp
mov
push
mov
dec
inc
daa
loop
mov
test
jnp
aaa
mov
xchg
rcll
fwait
xor
cld
cmp
jp
pop
pop
inc
cmp
pop
cmp
mov
push
sub
add
addl
dec
rcrb
sbb
mov
adc
inc
ja
test
inc
les
nop
xor
push
enter
fmuls
mov
lret
in
mov
cld
xor
out
mov
repnz
pusha
mov
cli
scas
insb
mov
xchg
jmp
pop
cmpsl
jne
xchg
jns
mov
or
inc
and
sahf
addr16
test
int
or
xchg
mul
jp
in
inc
cmc
jge
shrl
into
sti
fs
fwait
in
xchg
lret
jns,pt
in
xchg
or
cmpsb
mov
mov
data16
jl
popf
int3
call
fldt
xchg
dec
out
mov
jmp
std
pop
movl
insl
xchg
mov
pusha
dec
xchg
movsb
inc
pop
cmp
clc
and
out
add
adc
xchg
or
ror
idivl
jae
gs
lods
cmp
dec
test
subl
xchg
stos
lret
repz
or
pushf
add
loop
add
icebp
aaa
std
dec
out
stos
add
push
call
sbb
adc
adc
mul
mov
aad
jb
jo
inc
cs
dec
pop
adc
push
in
sti
lcall
out
imul
hlt
sahf
in
inc
cmpsb
mov
xor
cs
xchg
pop
mov
cltd
movsl
xchg
jp
inc
pop
jmp
mov
add
daa
lcall
add
cltd
sbb
imul
pusha
nop
xchg
loop
or
outsl
xchg
imul
inc
lods
daa
jnp
in
shll
rolb
jmp
add
scas
add
orb
ss
dec
and
jnp
cmc
jp
mov
test
fadd
push
and
test
rol
cmc
out
popa
lahf
outsb
mov
sub
sbb
sub
cmp
insb
lret
cmc
xor
pop
ja
cmp
pop
lret
in
insl
imul
into
popf
push
xchg
xchg
push
in
fsubrp
dec
loope
dec
orb
frstor
std
icebp
loop
in
mov
dec
pop
test
cs
call
or
mov
sbb
inc
pushl
imul
cs
dec
dec
test
subl
mov
adcb
in
fmulp
xor
mov
jno
insb
xor
cmp
lret
add
mov
jbe
lcall
mov
mov
xchg
mov
lret
jecxz
ljmp
cltd
fcoml
in
cwtl
int
mov
inc
push
jno
inc
xchg
test
xorl
push
dec
mov
push
pop
lret
pop
dec
jle
mov
imulb
stos
insl
cmpsb
pop
pop
mov
mov
leave
in
ficomps
sub
mov
subl
xchg
push
into
cmp
mov
iret
arpl
sub
push
cmp
or
movb
cmpsb
mov
fnsave
stos
mov
adc
das
push
test
in
into
mov
ficomps
sbb
jg
ret
ljmp
mov
adcb
sub
push
push
jb
lock
inc
fcoms
jns
lods
stc
cmc
xchg
xor
loope
xchg
mov
icebp
or
lcall
lahf
aaa
insl
aaa
mov
idivb
fstpt
aaa
mov
enter
xchg
jl
clc
sbb
dec
daa
mov
shrb
cmp
mov
xchg
rcr
adc
gs
pusha
add
test
push
imul
loopne
loopne
xor
cmp
cmp
jmp
repz
movsl
call
pop
sti
add
cmp
adc
jno
loop
shll
sarl
cltd
movsl
pop
nop
mov
cmpsl
cmpsl
lock
jle
dec
rcr
aas
adc
je
lock
jbe
push
lret
cmpsl
stc
int
pop
ja
js
fnstcw
arpl
xor
pop
inc
inc
add
dec
dec
scas
mov
jns
cmpsl
push
divb
xchg
dec
lock
xor
dec
cmp
popf
push
jmp
xor
pop
fsubr
into
mov
imul
fnstcw
and
jno
mov
xor
add
lods
lret
pop
add
dec
xchg
xor
dec
mov
aad
xchg
xor
jmp
fdivrs
adc
mov
mov
std
addr16
stc
xor
loop
ret
test
arpl
out
jecxz
scas
mov
push
loopne
iret
sbbl
lret
mov
sahf
pop
cmpsb
sbb
inc
add
ret
je
enter
mov
out
test
add
iret
cmpsl
pop
loop
push
mov
cld
aam
fldl
jb
lock
cwtl
push
adc
mov
decb
xor
mov
xchg
rol
cwtl
xchg
rorl
arpl
outsl
or
mov
inc
adc
cmp
inc
adc
in
je
jne
sti
imul
xor
xor
cs
sub
addr16
or
mov
xor
or
ret
push
pop
movsb
inc
mov
dec
add
insl
jg
loop
xchg
shrl
in
aaa
adc
shufps
or
paddsw
lea
pop
insb
mull
cltd
jg
push
lret
dec
bound
mov
add
cs
inc
adc
mov
xchg
ja
push
mov
mov
fisubl
je
bound
xchg
cmp
movsl
jmp
xchg
sub
testb
ljmp
and
std
or
imul
gs
orb
mov
mov
data16
push
or
mov
sub
das
jl
xchg
pop
insl
sub
mov
mov
or
int
cwtl
mov
enter
cmp
bound
into
cltd
xchg
les
into
xchg
xchg
and
cmp
inc
sbb
cmpsb
inc
xchg
add
mov
jge
lock
jno
mov
adc
jle
stos
aaa
dec
push
popa
xor
xchg
aas
mov
repz
nop
push
xor
mov
lcall
cmp
aad
pop
inc
lea
ret
xchg
push
das
aad
sub
pusha
xor
mov
shrl
lahf
int3
mov
sti
fists
sub
sahf
lods
repz
cmp
icebp
aaa
xchg
pop
pop
repz
rorl
cmp
mov
jno
jnp
les
clc
adc
pop
xchg
pop
sti
push
out
xor
pop
pop
lock
xchg
stos
stos
jns
dec
jle
fnstsw
insl
scas
xchg
inc
add
mov
lods
mov
sbb
and
push
pop
into
sbbl
loop
lods
sub
and
pop
movsl
test
lahf
mov
fistl
pop
mov
call
mov
decb
pushf
fbstp
addl
cltd
cmp
xor
sub
jne
cmp
mov
andb
jnp
mov
jg
xchg
mov
dec
mov
mov
jb
dec
idivb
jns
jo
pop
or
pop
outsb
jae
jno
enter
dec
movl
dec
movsb
test
lcall
jmp
jge
lods
dec
bound
enter
and
outsl
arpl
jecxz
push
stos
xchg
js
jmp
test
sub
xchg
mov
push
jle
out
add
sub
frstor
push
lods
daa
imul
repz
sub
test
dec
pusha
fistps
push
pusha
outsl
popa
sub
aaa
push
loopne
dec
lods
icebp
mov
arpl
mov
cld
mov
jae
jle
stos
jge
imul
inc
cs
xchg
cmp
mov
sub
nop
pop
loope
in
pop
mov
leave
sbb
xchg
sub
cmpsb
push
and
cwtl
test
loope
pop
cmp
outsb
mov
lods
je
or
jecxz
gs
xchg
push
jl
shll
xchg
mov
stos
xor
shlb
fwait
cmp
mov
cmp
sbb
and
mov
mov
push
lcall
xor
in
add
cmp
cltd
mov
push
sbb
test
insl
lea
mov
mov
pop
imul
sbb
cmp
nop
and
jge
sub
mov
rcrb
adc
cmpsl
ret
dec
sbb
mov
mov
movsb
in
push
xor
fisttps
bound
clc
sti
jns
fdivs
mov
dec
fwait
jns
out
mov
test
mov
dec
pop
mov
dec
inc
cmp
in
mov
insl
inc
stc
cwtl
and
adcb
imul
pop
cmc
data16
rorl
lcall
shr
iret
jo
or
ljmp
mov
mov
sub
ror
xchg
int
xlat
push
fistl
jne
push
rcl
das
mov
call
icebp
mov
mov
jecxz
adc
int3
ret
xor
mov
inc
mov
mov
aaa
cwtl
sub
dec
cltd
stc
loopne
iret
out
scas
call
push
jmp
or
into
sub
shrl
mov
enter
in
data16
push
push
ficomps
mov
insl
push
cmpb
xlat
pop
xchg
dec
push
mov
cli
cwtl
scas
dec
pop
movsb
xchg
cmp
jmp
andl
cwtl
cmpsl
xchg
icebp
std
in
xor
inc
dec
andl
dec
mov
xor
sub
imul
xor
pop
mov
dec
mov
xchg
loope
or
js
jmp
out
loope
jo
sub
out
pop
cltd
push
movsl
fs
add
pop
lret
and
dec
xor
and
cwtl
cmpsl
and
sbb
adc
jge
cmc
mov
int
loop
dec
adcb
mov
addl
pop
inc
pop
push
pop
xor
fcomps
mov
pop
or
jmp
outsb
imul
popa
clc
xchg
mov
shlb
jns
jnp
fists
inc
incl
jl
push
xchg
ja
sti
loop
outsb
mov
nop
mov
aad
pop
mov
movsl
shrb
add
cli
mov
pop
loopne
mov
gs
rolb
outsb
sarb
mov
shrl
jp
sub
dec
push
nop
test
ja
out
das
sub
push
ss
out
jns
subb
aas
jle
sub
lahf
sub
faddp
int3
xor
loop
ss
adc
bound
dec
mov
jecxz
mov
fs
pop
out
ficompl
mov
mov
call
xchg
push
testb
hlt
fwait
mov
daa
shrb
movsb
pop
or
sarl
rolb
nop
jae
scas
add
adc
ret
fisubrs
mov
divb
pop
rcll
loop
repnz
test
addb
lods
imulb
testb
loopne
cmpsl
cld
out
andl
sti
mov
loop
loopne
cltd
xor
rol
fdivp
orb
dec
repnz
or
nop
push
cmc
insl
fldenv
xchg
rclb
jae
adc
andl
adc
xchg
int
xchg
xchg
leave
and
fidivs
sbb
lea
mov
ficoml
testl
inc
out
cli
xor
in
mov
mov
lahf
push
push
inc
sub
jbe
mov
cmp
insl
push
jbe
cwtl
roll
in
xor
test
stos
xor
shr
ficomps
sub
cmpsb
fwait
cmp
cwtl
stc
pop
rorb
or
pop
dec
inc
jb
popa
mov
xor
leave
xchg
jno
mov
dec
xchg
pop
jno
mov
int
push
or
or
mov
popf
xchg
pop
out
mov
outsb
add
add
pushl
dec
stos
outsl
sub
daa
jp
arpl
or
jp
mov
xchg
test
xlat
pop
insb
push
flds
insb
jo
or
xchg
and
mov
imul
addr16
cld
cmp
inc
test
mov
inc
dec
stos
xchg
daa
dec
rcrl
popa
or
loopne
frstor
fwait
cmpsl
push
lea
cs
popa
push
cmp
and
ret
imul
jne
dec
scas
inc
jno
mov
add
mov
add
dec
inc
or
insb
or
mov
fbld
sbb
sbb
inc
mov
scas
pop
push
and
fbld
cld
int3
les
or
xchg
xchg
in
popa
popa
rorb
push
and
outsb
pop
ds
adc
nop
or
mov
cmp
add
test
pop
and
xchg
sbb
mov
or
fwait
pop
test
lret
cmpsb
fists
scas
dec
sub
sub
add
repnz
test
inc
mov
push
and
test
xchg
mov
lock
xchg
ja
lret
jg
xchg
nop
js
push
adc
mov
sbb
insb
in
mov
inc
das
stos
mov
mov
sub
push
nop
popa
lret
jle
movsb
aas
std
dec
fisubrs
adc
adc
fisubrl
sti
movsl
fdivrs
inc
push
fcmovb
mov
pop
push
lcall
gs
mov
into
rcr
loope
testl
ss
sbb
mov
fbstp
mov
test
mov
sbb
sub
fists
cmp
inc
sub
cmpsb
scas
pop
xchg
xchg
add
cwtl
push
mov
cli
clc
sbb
aad
aam
enter
pop
pop
adc
cmp
pop
loop
adc
cs
lret
mov
in
int3
add
ljmp
in
lcall
pop
shl
and
cwtl
jno
push
repnz
sbb
bound
lcall
or
call
pop
pushf
ret
dec
imul
and
inc
add
jmp
xor
test
xor
mov
jecxz
sub
outsl
incl
cmp
rcrb
and
sbb
fists
outsb
loop
xchg
cmpsl
jno
ljmp
xchg
lcall
jbe
lahf
in
push
cwtl
sbb
movsb
cli
adc
cmp
mov
aaa
jns
and
in
and
cmp
mov
cld
inc
inc
pushl
out
sbb
sbbb
imul
cmp
mov
lahf
push
pop
xlat
fucomip
repz
pop
lods
pushf
sub
sub
add
mov
push
lea
iret
dec
ds
xchg
lret
cmp
addl
or
adc
call
xor
rorl
loope
call
pop
dec
nop
iret
jle
push
push
xchg
sub
cwtl
leave
test
test
and
pop
dec
mov
cmpsl
outsb
lret
inc
movsb
shlb
mov
xchg
mov
jmp
xor
or
mov
jp
loopne
xchg
dec
add
mov
test
mov
jae
cmp
mov
add
stos
lret
adc
pop
xchg
rcr
rcr
cltd
stos
lahf
mov
pop
adc
add
dec
adc
xchg
mov
xchg
cli
popl
test
ds
push
jp
ja
add
pop
mov
mov
push
push
sbb
inc
mov
and
xchg
aas
pop
fmulp
xor
sti
out
and
xchg
dec
xlat
movsb
jnp
push
into
test
cltd
subb
addr16
or
sbbb
jle
dec
mov
aas
lcall
ret
daa
mov
scas
enter
xor
int3
fs
aad
jo
sub
push
enter
or
sub
dec
xor
lahf
mov
or
shrl
add
and
fcmovnu
loope
in
gs
mov
scas
xchg
jle
dec
out
cmp
dec
xor
sub
out
adcl
and
adc
scas
insl
icebp
and
adc
add
cld
pop
xchg
xor
and
lret
jp
pop
pop
jmp
loopne
cmp
ret
or
sbb
cmp
dec
std
mov
aas
jns
test
fidivs
cmpsl
imul
imul
icebp
orb
adcb
outsl
imul
repnz
arpl
dec
stos
loop
mov
mov
jp
mov
test
pushf
iret
inc
inc
sbb
loopne
mov
and
push
int
cmpsl
sbb
xor
repz
xchg
jno
test
add
subb
sbb
pop
scas
jge
cmpsb
inc
insl
mov
ljmp
cmp
jne
push
dec
adc
push
or
pop
rcrb
xor
loope
xchg
shll
push
inc
test
jns
pop
outsl
into
push
out
shll
jmp
add
jae
or
xlat
ret
das
test
mov
std
mov
fs
sbb
xchg
cli
push
cmp
add
add
es
or
mov
sti
imul
cmc
jle
mov
cmpl
xorl
sub
imul
nop
and
jbe
push
xchg
sbb
mov
nop
notb
mov
xor
insl
subl
inc
sarb
sub
and
push
jb
ffree
daa
mov
icebp
je
sbb
sbb
rcrb
fists
aaa
fcoml
faddl
or
pop
fwait
lahf
arpl
mov
jecxz
out
lods
out
sbb
xchg
xchg
das
fidivrl
inc
lock
ljmp
inc
loopne
in
addr16
add
out
jg
xchg
sahf
ror
cwtl
add
add
ds
sbb
mov
sub
lret
scas
cmp
sahf
negl
fbld
nop
lock
adcb
repz
mov
movsb
filds
add
aas
in
mov
push
sbb
push
jecxz
movsl
out
ret
pop
shrl
add
pop
xchg
add
dec
mov
lret
repnz
mov
inc
push
lcall
sub
sbb
cmp
scas
and
mov
dec
jp
add
cmp
sbb
ret
mov
lds
aas
mov
ficoms
popa
insl
cwtl
test
mov
or
call
adcb
pop
movsb
xchg
pop
cmpsl
scas
jmp
cwtl
pop
jno
addb
sbb
cmp
or
das
add
cli
mov
ret
movsl
mov
jl
lahf
ret
push
inc
call
in
and
aaa
test
pop
mov
jbe
inc
mov
imul
fwait
rclb
mov
mov
pop
cltd
pop
movsb
xchg
daa
mov
loopne
sbb
inc
shrl
rolb
jmp
popa
sub
shrl
mov
int
sbb
sahf
fidivrl
jb
and
clc
in
push
sbb
jmp
xor
lahf
daa
scas
and
inc
sbb
call
lahf
xor
jl
cmp
lods
jmp
inc
mov
inc
jecxz
push
cmpsl
mov
into
push
fadd
clc
loope
lds
cli
cmp
jg
sub
rorb
inc
ret
jno
in
xor
sbb
add
mov
lea
aas
mov
mov
jae
out
mov
jne
out
pop
push
add
fsubl
ficoml
cld
enter
shrl
push
add
mulb
jbe
in
add
mov
mov
lahf
xchg
add
fstps
subl
rorb
incb
sti
test
mov
pop
jecxz
adc
mov
lods
mov
in
cmp
aam
clc
pop
roll
ljmp
fisttpl
in
aaa
nop
mov
lods
or
mov
aaa
ret
outsl
xchg
xlat
movsb
testl
cli
cmc
ss
mov
sahf
fisttpl
scas
cmpsb
lock
nop
mov
leave
jl
sub
lcall
mov
add
jno
int3
popa
mov
out
dec
dec
jns
dec
call
mov
push
jle
iret
je
fwait
cmpsb
loope
repnz
insb
jnp
mov
cmpsb
and
aam
mov
js
imull
mov
orl
mov
xchg
mov
comiss
jne
xchg
mov
lods
push
xchg
in
fcompl
xlat
inc
mov
mov
sbb
adc
mov
leave
popf
lock
shrl
les
push
int3
into
mov
shlb
icebp
add
test
mov
pmuludq
push
stos
sbb
mov
or
fisubl
mov
scas
jae
lret
cmp
sub
push
mov
jae
outsb
call
cmpsl
sbb
jmp
aad
push
lods
xchg
addr16
xor
jmp
ret
xor
jae
into
inc
outsb
inc
mov
dec
lods
sub
test
jbe
popa
fnstsw
inc
sub
xlat
sub
jne
repnz
cmc
and
cmpsb
mov
xchg
mov
or
leave
lds
inc
int
in
push
into
pop
xchg
add
cli
in
mov
xchg
adc
jl
stos
and
aad
mov
popf
mov
adcl
test
mov
ret
pop
xor
lcall
mov
mov
arpl
xor
fwait
jl
jne
xor
loope
pop
enter
hlt
push
inc
insb
out
cmpl
sbb
scas
sti
xchg
push
push
push
ret
out
fdivs
jne
lret
ds
in
jge
inc
sub
jnp
mov
call
and
in
jp
fldl
int3
clc
xchg
inc
out
mov
movsb
and
jne
sub
decb
mul
sub
movsb
sar
cmp
sbb
loope
inc
mov
popf
jmp
jge
xchg
jnp
cs
adc
bound
fs
jmp
shll
or
xor
push
ljmp
loop,pn
xchg
mov
push
out
mov
mov
xlat
cltd
int3
scas
and
movsl
pop
jb
test
mov
mov
xchg
add
push
jge
xchg
jns
shrl
dec
jae
aaa
jnp
lds
jbe
push
movsl
fs
scas
aam
jne
or
les
jbe
cmpsl
jp
ja
push
dec
imul
movsl
sti
int
mov
cmpsb
pop
gs
or
cs
aas
dec
jae
mov
loope
in
dec
and
shlb
adc
cmp
lds
xlat
div
inc
sbb
pop
jne
adc
pop
cmpsl
por
jecxz
repz
stos
pop
lea
pushf
movsb
mov
loop
daa
adc
callw
pop
cmp
jae
jne
jb
jno
mov
cld
loope
mov
int3
notb
cmp
rorl
hlt
push
std
cmpsl
mov
rolb
add
in
dec
fsubrl
jl
arpl
ret
ficoms
mov
add
pop
xor
scas
pushf
inc
jbe
sub
xchg
les
push
xchg
testb
je
loopne
aad
in
nop
aaa
fiadds
mov
ret
jbe
xchg
outsl
in
hlt
lahf
out
xorl
jg
cmpsb
jb
sub
or
jae
mov
out
inc
mov
imul
inc
into
and
push
and
subl
addb
add
ljmp
push
mov
jae
js
mov
test
pop
cwtl
pop
inc
imul
loop
cmpl
adc
les
jmp
outsl
mov
pushf
sub
inc
imul
jno
inc
cmp
data16
outsb
inc
jmp
cs
and
cmp
xchg
sbb
enter
jle
loope
les
dec
cmp
adc
pushf
push
and
paddw
loope
mov
in
sub
cmp
cwtl
sbb
add
dec
fildll
pusha
dec
out
out
repz
movsl
fwait
pushl
dec
pop
sub
loopne
es
inc
loop
fidivs
test
mov
jl
cmpsb
or
das
out
jp
lock
xor
ficompl
call
lahf
pop
ss
enter
lahf
andl
mov
sbb
adc
cmpsl
xchg
scas
stc
or
dec
and
mov
pop
out
ficoms
jae
inc
xor
xor
push
into
inc
mov
clc
in
icebp
jno
cmc
sbb
popa
jg
push
dec
inc
out
push
enter
cld
jno
lock
outsb
dec
addr16
push
mov
aad
pop
xor
movsl
aas
jmp
xor
xor
insl
sub
lea
sahf
outsl
and
cmc
sub
pop
in
fildll
insb
push
xlat
cmpsl
push
fmuls
ret
sar
add
cltd
hlt
aam
mov
movsl
mov
xor
push
stos
cmp
cmc
pop
jae
ja
stos
ja
xchg
adc
dec
push
mov
jg
push
mov
jmp
sbb
push
dec
jnp
mov
insb
or
idiv
imul
stos
push
xchg
inc
push
mov
lcall
mov
push
adc
jp
loopne
int
cmp
fbld
dec
sbb
dec
enter
adc
and
fbstp
mov
adc
icebp
ljmp
inc
sysenter
or
popf
jg
fadds
into
cmp
or
jge
ss
or
stos
in
xlat
aad
or
mov
cmpsb
inc
mov
jg
gs
and
push
fsts
lret
int3
call
ret
ret
or
outsl
xlat
dec
jno
push
cmp
bound
cmp
pushf
outsb
imul
jmp
cltd
dec
mov
xchg
push
cmp
pop
jno
jmp
and
out
in
outsl
adc
out
push
test
fldl
jno
inc
add
in
pop
lock
sub
sub
mov
jnp
dec
cmp
fstps
sahf
in
xor
pavgw
jns
in
ja
inc
call
adc
push
imul
popf
mov
test
jg
jl
jle
push
ljmp
and
repnz
movsl
jnp
push
push
dec
into
ficoms
out
data16
adc
mov
adc
pop
pop
inc
jns
cltd
xor
push
out
into
adc
mov
mov
adc
push
out
in
pop
add
jge
xor
arpl
pop
repnz
insb
pop
scas
fbld
loope
xor
shlb
popf
arpl
test
ss
xchg
loop
or
ds
repz
sti
sarb
cs
dec
and
fcoms
adc
xor
xlat
cmp
cmp
mov
mov
jg
xlat
sub
xor
into
mov
loopne
int3
sbb
push
mov
aas
mov
scas
mov
fnstsw
rcrb
fadds
repz
cmc
sarb
mov
adc
jg
je
leave
daa
ret
sbb
mov
sbb
sbb
ds
pop
jne
shl
mov
andl
dec
fidivrl
pop
mov
aas
fimuls
mov
mov
pushf
int3
loopne
inc
sub
inc
loopne
lea
cmp
cmp
cmc
sub
sub
es
inc
push
fucomip
cmp
xchg
addr16
fisttpll
loop
mov
mov
mov
adc
xchg
or
scas
js
push
movsl
cmp
add
incb
loop
dec
cs
mov
mov
sub
sub
in
in
push
les
fs
lahf
dec
inc
sub
xchg
xchg
xor
enter
scas
inc
mov
sbb
fsubrl
lock
sbbb
adc
repz
mov
lods
dec
or
pop
dec
rol
andl
cmp
andb
ret
popf
cmp
stos
mov
mov
push
cmc
icebp
ss
xchg
stos
rdtsc
in
push
es
dec
cmp
inc
call
add
test
fsubr
in
mov
aaa
lods
mov
mov
dec
movsb
call
pop
loopne
test
and
lret
xchg
aam
xor
fwait
push
dec
mov
inc
xchg
push
sti
mov
out
jns
add
xor
test
loop
inc
pop
out
mov
loope
and
incl
rcll
adc
mov
shrl
mov
jno
adc
pop
hlt
push
inc
jge
inc
pop
aad
lcall
mov
call
fst
leave
pop
cmp
adc
push
mov
xchg
mov
scas
mov
inc
dec
mov
cli
jae
jno
rcrl
aad
fbstp
dec
xchg
cmp
pop
jle
fstl
dec
clc
push
push
lods
cmp
ljmp
mov
rorw
add
jle
pop
push
xor
fwait
mov
pop
xchg
jnp
jno
inc
mov
mov
add
gs
cwtl
fmulp
aad
mov
popf
fwait
inc
jo
mov
sub
filds
in
pop
iret
testb
cwtl
cltd
aam
mov
fcoml
stos
xchg
inc
push
xchg
jae
or
mov
inc
shlb
stos
sub
adc
push
cld
or
pop
shrb
in
sti
xor
ds
int
es
scas
dec
pop
jo
lds
push
es
cmp
pop
sbbb
jg
in
xchg
leave
push
cmpsb
fcmovnbe
mov
cwtl
arpl
pop
test
inc
mov
jle
dec
cmc
xchg
mov
test
mov
fstpt
aad
push
mov
mov
test
sub
sahf
in
hlt
and
push
pop
push
jmp
fisttps
cmpsl
jbe
mov
mov
xchg
adc
test
sub
movsl
fists
push
pop
push
fidivs
lods
fsubrs
inc
lcall
xchg
into
and
mov
mov
ficomps
cmc
cmpsb
push
jg
pop
loop
or
fs
jo
std
inc
jns
inc
sarl
mov
mov
test
pop
cmp
daa
push
mov
outsb
sub
cmpsb
jno
dec
int
test
sub
lods
ds
pop
mov
dec
pop
push
jmp
fnsave
push
xchg
subl
pop
orb
mov
and
outsl
inc
outsl
jb
jmp
sub
or
mov
inc
and
arpl
sub
into
out
loopne
stos
push
add
or
xchg
movsl
pushf
dec
jmp
sub
stos
add
fstpl
cltd
mov
fs
push
mov
xchg
add
pop
loop
pop
je
das
enter
adc
xor
dec
jno
inc
add
fisttpll
rorb
mov
in
mov
fcompl
sarl
jmp
in
dec
xchg
idivb
mov
cmp
jmp
xlat
popa
cmc
test
add
pop
sti
cmp
adc
cmp
aad
popa
pop
mov
js
repz
mov
cwtl
ss
popa
inc
outsb
lcall
push
xchg
fildl
add
xchg
mov
int3
rcl
inc
int3
cmp
push
nop
in
jnp
loopne
inc
call
mulb
jo
lcall
js,pt
pop
ja
push
and
ret
sbb
adcb
xchg
or
xorl
mov
out
data16
fisubs
stc
addr16
jl
cmp
lods
les
popa
dec
xchg
sub
mov
add
jp
push
xchg
sbb
lret
ljmp
lock
arpl
rolb
test
lock
roll
orl
or
stos
push
pop
jns
stos
jo
xchg
lods
push
popf
cs
outsb
mov
mov
pop
push
xor
les
lcall
xchg
xchg
or
push
sbb
cmc
std
fistps
nop
nop
bswap
pop
fwait
shrb
push
xchg
mov
xor
add
dec
xchg
lock
jne
cmp
iret
testb
ss
xor
jecxz
in
jp
test
sub
aaa
jno
lahf
pop
scas
pop
out
sub
lea
jbe
cs
stos
cmp
mov
sbb
dec
fildl
pmullw
or
jmp
aaa
lahf
test
adc
lods
adc
push
pop
push
pop
xorl
int
and
andb
pop
fists
xchg
cmpsb
in
mov
or
xchg
iret
dec
popa
insb
fwait
daa
jp
fwait
jmp
mov
test
stos
pop
aad
jno
call
ds
rcl
push
mov
mov
or
addr16
call
cmp
xor
pushf
or
push
mov
sub
aas
mov
dec
cli
into
mov
push
pop
in
push
xor
shrl
xor
sahf
push
mov
xchg
lahf
out
add
jle
arpl
out
mov
adc
rcr
inc
xchg
pop
adc
xor
xor
adc
adc
hlt
sub
dec
fcmove
mov
pop
gs
cmpsl
push
shrb
and
mov
pop
imul
xchg
addl
or
sub
std
mov
les
push
mov
dec
inc
mov
xor
rsm
pop
inc
clc
adc
arpl
mov
rorl
push
popf
push
mov
inc
add
lret
fst
in
and
sub
out
cltd
outsl
jle
cli
mov
mov
ljmp
out
out
orb
push
add
fs
ds
movsb
das
test
mov
addr16
jp
cmpsb
ja
fcoml
repz
inc
mov
inc
pusha
jge
in
mov
adc
mov
mov
into
jl
das
mov
and
outsl
popa
sbb
mov
dec
pop
adcl
das
add
sub
and
xchg
adcl
rcrb
cmpsl
ljmp
jmp
popf
push
xchg
sub
push
insb
bound
popa
mov
adc
push
movsb
clc
xor
je
clc
or
aas
mov
or
push
nop
mov
cmp
or
dec
cs
sub
in
mov
sbb
xor
xor
jge
icebp
or
nop
pop
ss
xchg
leave
adc
lea
xlat
orl
cmpsl
repnz
lods
push
inc
pop
pop
mov
jp
icebp
flds
jecxz
pop
gs
xor
mov
dec
ja
imul
jmp
mov
sbb
outsb
add
jp
jg
cs
hlt
mov
xlat
call
mov
inc
repnz
mov
stc
jmp
cltd
inc
flds
popa
std
push
cmp
imul
dec
dec
jmp
push
les
mov
aas
aam
xor
push
jle
not
fsts
adc
lds
add
fdivrl
in
mov
fistps
sbb
mov
mov
popa
xchg
stos
scas
or
scas
push
fstpt
push
mov
xchg
fcomp
mov
push
jnp
mov
enter
lcall
dec
scas
xor
jns
ret
fiaddl
mov
add
scas
pop
out
dec
in
lret
add
jbe
cmpsl
outsl
jg
add
rcrl
iret
push
popf
clc
pop
scas
jbe
mov
cmp
rcrb
cmp
movsb
ljmp
pushf
aam
add
or
jbe
xor
mov
push
aad
fisttpl
mov
cmp
mov
insl
sub
aas
mov
scas
mov
dec
sub
out
pop
nop
sub
add
pop
xchg
pop
sub
sub
divl
dec
and
cli
sbb
unpckhps
test
push
xchg
pop
stos
in
inc
int
mov
popf
arpl
scas
mov
arpl
sbb
xor
add
push
mov
inc
dec
out
add
scas
push
push
imul
add
mov
mov
jge
add
loop
mulb
nop
jle
mov
mov
pop
mov
dec
popf
dec
dec
cmc
into
js
cwtl
add
inc
pop
mov
mov
aaa
in
dec
pop
jbe
add
sbbb
jmp
stos
fwait
cmpb
xchg
mov
and
sbb
mov
add
lods
mul
testl
xchg
xor
in
mov
cmpsb
adc
or
addl
pop
mov
adc
test
inc
aaa
pop
stos
jle
or
out
lcall
jbe
mov
inc
push
cmp
lcall
add
aaa
insb
loop
popf
pop
jge
dec
xor
repz
push
mov
and
aaa
imul
pop
in
fstps
and
jecxz
sbbb
daa
lcall
add
loop
dec
push
jle
int
and
or
cmp
bound
daa
rolb
push
rclb
pushf
addr16
sub
inc
popl
pusha
mov
shlb
out
or
inc
sbb
sbb
mov
mov
cmpsb
outsb
inc
mov
push
jo
hlt
mov
sbb
xor
mov
or
xor
add
fmull
movsl
or
cmp
cmc
push
xchg
mov
imul
or
fcoms
mov
xchg
adc
cmp
mov
shrl
mov
mov
cmp
mov
inc
mov
lods
inc
lret
or
push
dec
or
sahf
push
and
fsubs
test
jg
xchg
stc
mov
or
xchg
aam
loopne
in
xchg
inc
dec
outsb
cli
inc
stos
insl
cmpsb
inc
shl
bound
bound
sbb
sub
xor
inc
or
insl
xchg
scas
push
sub
or
int3
fists
inc
outsb
bound
insl
in
ret
jp
stos
orl
jle
in
js
ja
ljmp
push
and
mov
pop
pop
cmp
or
push
jl,pt
popf
ja
inc
les
mov
cmp
jmp
fsubl
pusha
xchg
adc
sub
jne
sarl
cltd
lock
lock
add
bound
jne
lahf
ret
cmp
cs
and
sbb
nop
pop
xor
mov
xor
aas
and
xor
dec
call
jb
lea
push
inc
add
nop
gs
jb
ljmp
dec
ret
out
std
lret
pop
ret
inc
cmp
stos
sbb
fcmovnbe
dec
jmp
cwtl
es
mov
insl
push
cmpsl
mov
imul
lods
ss
jl
cmpsl
outsb
sti
add
adc
shlb
jl
lea
jmp
pop
add
xor
cmp
pop
and
int3
and
mov
ret
inc
and
sti
jo
mov
or
sarb
jg
test
out
cmp
in
mov
repnz
mov
push
aam
fisubrs
pop
cmp
pop
mov
mov
lods
or
mov
in
data16
mov
xchg
loop
fidivrl
xchg
pop
jne
cmpsb
ss
ja
fidivrs
icebp
movsl
test
sbb
imul
or
faddl
test
ficoml
mov
sbb
cmp
sub
int3
inc
pop
push
rclb
std
pop
pop
inc
mov
mov
cmpsb
cmp
call
pop
cld
gs
or
xchg
jnp
imull
sbb
mov
xchg
dec
jmp
cmp
loope
pop
testb
bound
ret
test
mov
addl
roll
lea
jno
pop
int
or
add
dec
or
lods
lahf
adc
mov
cmp
nop
fucomi
ss
push
sbb
mov
nop
lcall
loop
popf
nop
inc
test
xlat
and
xor
rolb
mov
mov
inc
addr16
shl
xchg
fistpll
jne
pcmpeqb
mov
out
popa
xchg
jno
test
xor
jp
repnz
ljmp
pop
ds
add
inc
push
out
popa
pop
hlt
push
inc
dec
sub
sbb
xlat
xchg
pushf
ret
jl
dec
pop
add
mov
lock
dec
fiadds
fcompl
popf
shrb
hlt
lcall
jg
jno
fsubs
sbb
insl
and
push
xchg
sahf
arpl
pop
xchg
mov
ret
cltd
inc
pop
dec
pop
cmpsb
pop
repz
mov
scas
jbe
xor
rcl
out
test
add
inc
mov
lock
push
pop
mov
jl
jg
clc
xchg
bound
addr16
and
xor
into
or
push
mov
push
mov
add
mov
add
xchg
mov
ljmp
sub
and
shl
mov
xor
lock
leave
out
ficoms
scas
cli
jp
adc
out
lea
aaa
out
jae
dec
push
add
lcall
sti
adc
js
xlat
les
sbb
fs
ljmp
mov
or
push
cmp
sub
cmp
outsl
inc
sahf
xchg
mov
sub
inc
cmp
lahf
jb
lahf
mov
lea
scas
mov
fsubrp
mov
mov
dec
loop,pn
in
ds
ret
jp
xorb
adc
and
push
movsb
insl
outsl
add
aam
xchg
in
fisubrl
ss
sbb
out
arpl
mov
jns
dec
ja
adc
aas
and
imul
push
out
dec
mov
fldpi
adc
push
xchg
and
imul
xor
gs
xchg
push
jg
mov
enter
jl,pt
xor
adc
push
add
dec
jno
mov
push
mov
adc
mov
fcmovnb
xor
xchg
lret
bound
add
sahf
jno
ljmp
sub
and
sbb
dec
and
pop
jae
push
xchg
push
fstpt
jne
movb
stc
aam
mov
cwtl
ret
fwait
mov
adc
add
out
mov
adc
in
jae
jno
rorb
popf
leave
adc
push
je
dec
ljmp
test
add
imul
out
movsl
or
mov
xor
ja
jge
push
inc
daa
insl
jns
fimull
push
and
push
nop
xchg
dec
cmpb
mov
mov
cs
add
test
arpl
mov
pusha
loope
sbb
into
mov
bound
dec
ss
sub
mov
popa
xchg
push
pop
push
test
popa
aaa
inc
lcall
iret
lods
push
push
rol
pop
mov
scas
and
xchg
cmpl
pop
jbe
rol
dec
shl
out
movsb
adc
pop
outsb
dec
in
inc
mov
fisubrl
push
fiaddl
sub
jle
inc
add
aaa
cmp
loopne
or
mov
mov
stc
sbb
aaa
or
dec
stos
roll
cmp
cltd
insb
cmp
pop
push
or
shrb
in
out
cmp
mov
jmp
cmp
pop
or
stos
and
xor
and
jmp
add
sti
xchg
test
cmp
mov
pop
sub
daa
scas
test
dec
cld
andl
xchg
fs
aaa
xchg
rcll
and
mov
std
lea
lret
jle
jg
mov
sub
jno
inc
adc
cltd
mov
ret
shll
xchg
mov
or
and
and
or
cwtl
ret
push
ficoms
push
push
and
and
push
nop
ljmp
shr
and
cmc
test
test
xchg
xchg
rclb
xchg
xchg
dec
testl
in
xchg
dec
mov
ds
mov
push
xchg
lahf
int
jecxz
xchg
jnp
inc
mov
sbb
jle
fldcw
jae
sbb
lcall
lret
fcoms
push
lds
out
mov
adc
aaa
loope
arpl
ret
xchg
mov
dec
xchg
add
hlt
daa
bound
outsl
ss
pop
sub
fsubrl
mov
dec
xchg
sub
push
adc
incb
or
in
aam
popf
mov
insb
adc
push
or
dec
iret
mov
in
out
push
inc
adc
mov
movsl
or
or
push
sub
inc
xor
test
and
jmp
stos
inc
in
inc
imul
scas
jmp
call
xchg
push
add
out
jnp
or
loop
cli
mov
dec
fistl
movsl
aaa
popa
push
lahf
in
and
jno
scas
xor
fs
jae
fmul
inc
movsl
dec
mov
in
push
mov
jp
sar
imul
inc
nop
loope
lret
inc
aaa
xchg
xchg
and
insl
dec
push
sub
add
in
sub
jbe
adc
adc
jmp
xchg
mov
mov
mov
testb
add
jmp
pop
hlt
movsl
in
dec
out
loop
in
add
dec
xor
aad
out
gs
lods
xchg
xchg
adc
dec
mov
in
xor
lock
jo
js
in
pop
rol
inc
movsb
push
mov
daa
cltd
cmp
popf
add
inc
divb
mov
inc
mov
cmp
aaa
pop
push
mov
mov
mov
push
lcall
jecxz
xchg
test
mov
xlat
aas
lds
fisttpl
mov
aam
lret
div
jae
dec
jge
mov
jnp
push
xchg
popf
scas
cli
stos
out
fstpt
nop
incb
and
sbb
ljmp
jmp
and
inc
imul
cmp
adc
iret
ljmp
aad
xchg
xchg
xchg
mov
dec
xchg
pop
cmp
aam
ficoms
outsb
xchg
out
mov
adc
pop
ffreep
cmp
jae
inc
mov
out
jle
cmpsb
jp
pop
pop
mov
mov
adc
jecxz
test
push
xchg
pop
or
cmp
call
test
jmp
rorl
arpl
cmp
adc
jne
mov
repnz
gs
mov
mov
cmp
and
mov
sub
sahf
jnp
mov
xchg
inc
xchg
imull
push
xchg
cmpsb
hlt
hlt
out
and
mov
cwtl
push
lcall
das
mov
lret
push
pop
sahf
xchg
xchg
mov
xor
mov
pop
adc
dec
addr16
jmp
inc
pusha
loopne
xchg
jecxz
sbb
cmp
in
ds
inc
shll
mov
negb
stos
int3
sahf
stc
daa
sub
lahf
push
mov
mov
pop
int
mov
repnz
xchg
cmpl
insl
in
lret
insl
dec
in
in
lods
cmpsl
ljmp
and
or
outsb
jmp
mov
shrl
mov
and
call
mov
push
or
push
push
cld
loope
xor
adc
jle
xor
mov
cs
daa
mov
xor
repz
imul
jae
add
into
js
sbb
fisubrs
pop
lcall
icebp
add
lds
sub
scas
xor
fs
pop
cli
xor
fmull
xchg
mov
push
enter
push
sahf
xlat
cmp
fidivl
movsb
gs
insl
aad
sbb
sahf
or
sbb
push
mov
ljmp
je
imul
xor
mov
inc
mov
cmpsl
push
imul
popa
mov
cmp
stos
lock
mov
adc
outsb
pop
jo
cmc
xchg
repnz
sub
cmpsl
test
addr16
cmp
arpl
add
pop
gs
imul
adc
lods
or
std
sbb
bound
inc
and
sbb
hlt
and
sahf
and
inc
xchg
xchg
jle
aaa
lock
xor
fidivrs
sub
or
js
into
cmpsb
enter
rorb
push
mov
xor
mov
stos
jno
shlb
cwtl
das
ss
xchg
pop
jb
mov
add
xchg
add
xor
mov
nop
jecxz
sbb
add
stos
sti
and
cmpsb
addr16
jb
xor
jmp
mov
inc
or
orl
mov
mov
incb
in
xor
movsl
mov
xchg
mulb
dec
call
add
xor
or
lds
jmp
fdivs
icebp
addr16
xchg
stos
mov
dec
mov
test
rorb
sub
outsb
cmpsb
xor
xchg
fimull
cmpb
push
scas
xor
adc
pop
sbb
movsl
adc
in
and
cmp
in
xchg
mov
mov
rcrl
cmp
lahf
scas
cwtl
sub
movsl
rolb
fs
icebp
js
sti
out
imul
xchg
and
adc
mov
pushf
sti
inc
jg
xor
push
xor
fcmovu
mov
push
sbb
mov
dec
xchg
mov
sbb
stc
sbb
adc
jbe
in
sbb
aas
adc
mov
rcll
mov
or
mov
ficoms
pop
mov
xor
ficoms
push
in
out
push
dec
push
inc
jg
outsb
stos
sub
push
out
int
push
xor
dec
xchg
jmp
xchg
dec
popf
sub
decl
movl
in
mov
sbb
subb
mov
ss
rorl
inc
lock
in
jbe
test
inc
add
clc
or
xor
push
test
lret
stos
and
inc
pop
mov
jmp
mov
sbb
dec
jmp
fdivr
xchg
add
or
xchg
in
inc
inc
xor
jns
lock
psllw
add
cwtl
nop
sarl
sbb
mov
push
lods
inc
mov
push
mov
pop
cmp
xchg
fidivs
ds
push
or
mov
push
cmc
push
lahf
sti
pop
pop
push
inc
fisttps
inc
lock
dec
outsl
in
dec
pusha
pop
adc
ss
ljmp
push
jbe
stos
jp
jns
ret
lcall
idivb
in
int3
loop
cld
xlat
mov
into
sub
stos
inc
or
push
pusha
repnz
pop
test
sbb
cmp
scas
and
sub
mov
jns
mov
inc
mov
in
mov
cltd
out
popa
insl
loope
aas
sbb
cmpsb
inc
call
dec
pusha
not
stos
jno
daa
scas
jnp
mov
mov
push
subb
pop
xchg
inc
lret
push
xor
lds
xchg
into
mov
xchg
adcl
popa
cwtl
and
call
cmpsb
push
xor
hlt
xchg
push
pop
pusha
test
and
and
jp
xchg
std
enter
test
lret
add
mov
push
hlt
sbb
inc
fimull
enter
lret
in
outsb
dec
cmp
stos
xorb
into
call
jg
jbe
adc
fmull
imul
int
test
inc
cmp
xchg
test
in
test
mov
jg
pop
repz
test
sbb
push
and
outsb
pushf
ja
int3
xchg
lcall
pop
pop
ss
push
and
into
jns
enter
xchg
pop
mov
es
stos
popf
jg
mov
lret
test
push
addb
cmpsl
mov
mul
xlat
das
repnz
int
cmc
and
hlt
jp
sbb
ss
sub
mov
dec
push
stos
call
sub
pop
ss
daa
test
loope
je
mov
jne
cmp
jbe
dec
test
pop
push
lods
pop
xor
xor
imul
fisubrs
pop
mov
jge
push
sbb
stos
push
rcrb
push
push
negl
sbb
arpl
shlb
repz
imul
loope
loop,pt
add
or
in
int3
ficoml
jge
push
jge
movsl
dec
roll
mov
gs
or
or
pop
dec
jae
push
mov
insl
cwtl
jg
repz
fildll
outsb
aas
cs
inc
test
sbb
daa
xchg
jecxz
jne
pop
jne
aas
es
xor
cmc
test
xchg
cmpsb
leave
xor
dec
into
add
or
std
loop
dec
ja
call
dec
xchg
ja
jge
lea
and
jnp
movsb
in
ds
pushf
jns
xor
testl
or
inc
in
out
lods
cmp
lods
dec
aas
das
es
push
rol
xchg
mov
mov
pushf
fistps
sub
dec
mov
mov
or
mov
add
add
mov
cwtl
popa
jg
sbb
jecxz
mov
das
push
adc
pop
xor
sbb
and
aam
into
jle
add
add
ret
mov
push
pushf
mov
and
gs
xorl
jp
mov
jb
int3
mov
dec
dec
mov
jns
bound
fucomp
and
or
mov
or
xchg
jae
sub
jb
and
and
or
ss
jnp
dec
ja
or
movsb
jnp
or
bound
cmp
xchg
mov
mov
cltd
and
incl
js
jle
jp
dec
jno
jb
mov
ds
fimuls
sbb
adc
cld
push
insb
mov
mov
push
push
arpl
repnz
jno
shrl
jo
jo
inc
jecxz
mull
mov
dec
mov
xchg
fstpt
xor
sub
cmp
jp
sub
fistpl
push
jne
data16
jnp
ret
pushf
xrelease
iret
shll
fiaddl
fldt
stos
xchg
shrb
es
ret
dec
fwait
in
aas
jb
jmp
add
mov
std
inc
fdivrl
sbb
lret
mov
jno,pn
aam
jbe
insl
pushf
lahf
mov
ret
jmp
int
pop
xchg
jg
cmp
jle
mov
xchg
sbbb
scas
icebp
jmp
std
push
aaa
jnp
arpl
loopne
sar
add
pop
adc
in
mov
cli
fbstp
test
movsb
out
ret
xchg
pop
int
mov
cmp
mov
les
bound
loop
and
nop
mov
int
xchg
pop
test
jns
mov
popf
pop
call
lea
pushl
ds
je
jmp
js
and
cs
pushf
sahf
mov
ret
test
call
sbbl
aas
daa
or
sbb
sahf
cmp
les
cmpb
mov
dec
fidivrl
or
sub
scas
jbe
dec
sub
inc
xor
jns
repz
das
or
fsubrl
dec
cmp
popf
xchg
jno
add
fcomi
push
jge
add
xchg
pop
add
aad
xchg
mov
push
insl
dec
sub
cmp
mov
inc
or
shl
mov
addr16
fwait
adc
push
test
pop
arpl
xchg
test
cltd
stc
cmp
sbb
notb
xchg
lahf
fucom
rorl
mov
fbld
sbb
stos
ss
xlat
xchg
pushf
pop
xor
xor
jbe
inc
pop
xlat
movsb
dec
and
out
daa
mov
lock
and
sub
ja
mov
jge
add
scas
mov
pop
jmp
pop
jle
into
push
dec
bound
xchg
stos
lods
mov
popa
push
mov
sub
xor
out
popf
push
ficomps
sbb
dec
xor
sub
cltd
dec
sub
cmp
js
pop
std
insl
pushf
loope
lods
jae
in
sub
movsb
jmp
mov
pop
call
xchg
aaa
sub
sbb
jg
push
add
push
bound
jmp
sahf
jo
lock
into
jg
jb
iret
ljmp
dec
pop
and
xor
inc
out
fdivr
mov
pop
adc
fists
xchg
loope
movsl
xchg
daa
mov
cmpsb
push
or
idivl
jne
sub
mov
test
mov
push
sub
xchg
aas
mov
pop
dec
mov
bound
jns
mov
mov
xchg
popa
rorb
addr16
xchg
xor
mov
fidivl
jns
fsubr
movsb
push
test
gs
mov
sbb
dec
hlt
shr
aad
aam
sub
jae
andb
cmp
ds
mov
call
mov
sarl
insl
mov
loope
jp
pushf
lahf
sahf
inc
cmp
cwtl
cmpsb
stos
outsl
xor
push
mov
push
aaa
aaa
cld
iret
sub
ja
sbb
in
and
fnstenv
or
mov
jnp
loop
dec
jge
loope
in
xchg
mov
xchg
adc
sub
outsb
inc
mov
in
stos
adc
push
xlat
call
gs
sahf
mov
xor
daa
mov
push
in
cmp
fnstsw
dec
out
push
mov
out
lahf
jns
mov
notb
dec
push
movb
inc
call
andl
inc
add
loope
lea
sti
inc
mov
sbb
cltd
movsl
mov
adc
jb
orps
lahf
filds
lahf
sub
jg
fcomp
add
jge
div
arpl
pop
test
xchg
sti
jl
data16
adc
pop
js
adc
fcom
sarl
pop
lahf
adc
mov
xchg
les
dec
sub
xchg
push
mov
push
xchg
mov
mov
mov
mov
xchg
push
dec
cmpsl
idivl
and
sarl
lcall
call
js
test
mov
cmpsl
ret
je
inc
loope
scas
imul
inc
pop
insl
and
sub
pop
repz
lret
jns
les
push
cltd
xor
lds
add
mov
inc
pusha
push
arpl
or
xchg
je
jns
imulb
fmull
sbb
out
sbb
xchg
mov
cwtl
mov
cmc
dec
xchg
xchg
lcall
cmp
jge
mov
push
xchg
sbb
ljmp
cmpsb
jle
das
and
push
es
jge
popa
shll
mov
fdivl
adc
adc
rclb
xchg
push
add
xchg
xor
pop
ljmp
push
and
mov
stc
push
mov
ljmp
in
cld
aad
push
mov
out
jecxz
arpl
cmp
popa
mov
inc
ds
dec
sbb
std
mov
shl
js
mov
fstps
int3
dec
and
sbb
pop
xchg
add
push
inc
dec
pop
cmc
add
add
test
cld
cmp
mov
popf
inc
nop
lret
dec
push
loopne
das
mov
jb
addb
inc
pop
pop
pop
add
fmuls
add
scas
ret
fs
dec
hlt
pop
xlat
inc
xchg
into
cmp
aad
jg
je
sub
add
pop
popa
pushf
cmp
sti
sbb
mov
xchg
push
mov
xlat
jne
std
inc
out
fiaddl
sahf
mulb
dec
jnp
xor
addb
inc
mov
mov
test
insb
or
aad
xchg
xor
push
xor
xor
mov
rol
stos
pop
xlat
lret
xchg
scas
cltd
jmp
shr
mov
adc
bound
leave
daa
movsl
dec
mov
sti
les
push
push
sub
push
inc
push
pop
and
mov
ret
mov
mov
fwait
jecxz
push
fwait
ljmp
cmc
enter
ljmp
cmp
out
xchg
sti
sub
inc
cmp
jle
stos
in
push
ret
jge
outsb
push
psrlw
xor
cmpsl
dec
jmp
lret
mov
imul
mov
pop
mov
faddl
loopne
push
push
addr16
aaa
test
in
sarl
mov
subb
jo
cmc
les
pop
cmp
sbb
cmc
test
fiadds
int
lcall
fisubs
pop
jg
imul
fs
mov
mov
pop
pop
repnz
jmp
adc
jno
mov
test
jo
inc
jb
loop
pop
inc
out
pop
fsubr
sub
js
test
push
and
or
pop
dec
sub
movsl
pop
in
gs
clc
xor
jns
xchg
cmpsl
lret
fnstenv
mov
mov
mov
stc
xor
mov
loope
and
mov
leave
enter
scas
xchg
mov
leave
ret
lret
jbe
arpl
add
pop
arpl
sbb
and
pushf
pop
xchg
mov
out
sbb
mov
jmp
loope
out
das
std
fcompl
mov
sbb
loope
daa
jbe
div
cmp
dec
cld
ret
jecxz
jo
stos
pop
test
and
push
mov
add
and
sbb
test
jne
mov
mov
idivb
cmp
mov
jbe
aaa
dec
ja
xchg
fildll
ss
jg
sub
sub
in
xchg
add
out
pop
repnz
mov
or
loopne
sbb
ror
out
cwtl
cmp
cmp
shrb
addr16
push
sub
mov
or
addr16
lock
pop
push
fwait
mov
cmpsb
cmp
adc
sti
cltd
mov
in
adc
add
in
enter
sbb
insb
pop
or
rcll
sbb
outsl
mov
mov
xor
push
sbb
add
addr16
push
imul
add
iret
cmp
iret
xor
into
imul
sub
in
sbb
aaa
mov
mov
dec
das
ret
aam
sub
xchg
cmc
sub
jno
and
scas
lahf
rorb
das
clc
pop
das
movsl
adc
mov
mov
lret
sub
subb
jnp
and
cli
inc
adc
ljmp
xchg
lock
jge
outsb
call
divb
movsb
mov
dec
push
insl
or
add
addr16
lock
movsb
out
cmp
sub
cmp
xchg
add
mov
aam
dec
push
int3
js
les
mov
scas
dec
int
out
add
sbb
dec
and
pop
mov
sti
prefetchwt1
or
push
fisttps
sarb
push
adc
lods
push
ss
adcl
xchg
mov
cli
mov
push
mov
inc
jo
mov
jg
push
stos
cmpsb
pop
fstpl
xor
outsb
jl
loopne,pn
push
cmp
in
movsl
dec
inc
xor
jl
scas
js
ja
add
mov
mov
aaa
out
pusha
xchg
movb
xor
add
push
lret
es
fbstp
es
ds
in
dec
call
insb
lahf
loop
lea
push
sbb
jnp
shrb
aam
fimull
sub
mov
xchg
xor
adc
dec
pop
and
scas
addb
xor
xor
in
pop
ljmp
je
jbe
push
loopne
and
in
iret
ja
xor
mov
popf
in
repnz
mov
ja
sbb
test
lds
sbb
out
scas
fistpll
and
sub
dec
mov
jg
insl
xchg
subb
ljmp
mov
push
subl
sub
jno
aas
mov
dec
xor
cltd
mov
dec
rcll
loopne
insl
xor
mov
popf
sub
mov
push
fcompl
repnz
and
sahf
roll
dec
pop
mov
andb
cmp
xor
push
aaa
add
inc
repz
int
int
mov
stos
insb
mov
xor
dec
adc
lahf
fisubrl
and
lahf
shrb
xchg
dec
popa
pop
lcall
or
inc
std
outsb
aas
ret
addr16
jo
sub
fimull
push
scas
ret
add
bound
cmp
xlat
dec
cmc
clc
jge
loope
sbb
jmp
xorl
jns
add
pop
iret
les
sub
cmp
lock
xor
outsl
or
push
add
inc
pop
jg
mov
mov
xchg
and
ret
mov
mov
test
dec
pop
pop
sub
lcall
and
lods
pop
xchg
mov
fldl
pop
iret
stos
std
push
hlt
call
or
cltd
call
pop
pop
xor
mov
xor
adc
ljmp
xor
adc
adc
or
bound
cmpsl
sub
cwtl
xor
mov
dec
and
jnp
hlt
dec
into
xor
jp
cli
adc
mov
xor
out
inc
iret
setl
orl
mov
leave
sahf
mov
int
mov
leave
mov
int
stos
lods
push
test
in
sub
test
lcall
fnstcw
scas
lock
cld
mov
pop
rcr
test
stos
pop
mov
mov
ss
insl
pop
inc
push
subl
jg
out
mov
test
xchg
push
iret
pop
jns
jge
mov
jo
and
mov
out
mov
pushf
cmp
cld
out
adc
xchg
xor
mov
mov
jbe
sbbl
lret
test
mov
ja
sbb
xor
lds
xor
or
xchg
push
gs
xor
popa
jbe
or
mov
scas
sti
mov
aaa
shr
adc
test
stos
inc
xchg
dec
jmp
jae
mov
mov
mov
jbe
fimull
jmp
dec
mov
in
fnstenv
sbb
mov
ds
cmp
dec
out
mov
mov
push
jne
mov
jg
mov
pushf
inc
fsts
or
iret
mul
or
push
jle
mov
dec
lret
jns
xlat
push
loop
jns
mov
arpl
mov
testb
jmp
mov
sbb
inc
cmpl
sbb
sub
xor
sub
lret
cmp
sub
int
dec
pushl
mov
test
push
fbstp
ret
stos
repz
es
pop
js
ret
leave
lret
fbstp
enter
cmc
xchg
fcmovnbe
mov
jmp
cmc
out
and
mov
iret
sbb
mov
cmc
jae
dec
sub
icebp
sahf
push
mov
aad
data16
outsl
mov
dec
add
test
adc
les
lcall
fimull
mov
mov
cmp
int
clc
cmp
xor
push
jg
and
mov
push
jns
out
pop
insl
lods
movsl
cwtl
pop
leave
fs
adc
ret
test
ret
in
mov
out
clc
faddl
cvtpi2ps
pushf
fisubrl
adc
ja
adc
ds
cmp
add
jb
enter
aam
mov
mov
dec
and
xor
push
xchg
pop
lods
loop
out
fdivr
mov
stos
xchg
pop
mov
sti
inc
addr16
lods
cmp
ffreep
pop
mov
cltd
xor
xchg
into
into
sub
jmp
jbe
aaa
insb
ss
mov
mov
sbb
push
mov
xlat
xlat
mov
insb
adc
movsl
divps
cmp
daa
out
int3
test
cmpsb
leave
pextrw
push
rcrl
adc
mov
jno
popf
fidivrs
test
test
dec
pusha
ljmp
push
xchg
adc
aad
or
aas
fisubs
arpl
cmp
push
xor
leave
dec
pop
icebp
outsl
cmp
sbb
iret
pop
sbb
outsl
jo
mov
sbb
pop
push
cmp
sub
int
push
loop
push
jl
mov
fcomi
xchg
mov
jl
dec
jbe
ss
jb
inc
or
jecxz
pop
movsb
jbe
outsb
cmp
cmpsb
cmc
stc
in
xor
push
fstl
outsl
mov
push
inc
cmp
leave
cmp
pop
jb
pop
stc
pop
mov
pop
mov
test
or
rorb
mov
xchg
push
push
xchg
xor
dec
xchg
pop
test
pop
mov
ja
push
outsl
addps
cs
push
xlat
mov
subl
push
nop
test
test
mov
test
or
data16
lcall
lret
loop
jb
sbb
xor
pop
cs
push
call
fwait
or
int3
and
xor
mov
mov
push
dec
fwait
dec
ret
into
fldl
pop
sbb
fists
inc
sahf
add
pop
ds
addb
pop
out
xor
xchg
sbb
push
pop
xchg
orb
jle
rcll
xor
movsl
call
aad
enter
pop
hlt
int3
fs
or
sti
int
loope
mov
test
sbb
aaa
fmul
mov
jbe
cmpsb
fbld
shlb
add
push
nop
fiaddl
lcall
dec
cli
in
into
push
cmp
lods
dec
add
mov
pop
jmp
push
in
in
cmpsb
jge
ss
test
jbe
cmp
sti
fnstcw
xor
mov
into
pop
fucomp
jle
lea
push
pop
cltd
pop
push
or
nop
fwait
cmp
cmp
cmp
cli
dec
lock
jp
pop
and
test
push
lcall
jecxz
dec
push
fisubrl
cmp
in
pop
addb
mov
repnz
ss
lods
pop
and
dec
push
add
cli
pop
lret
mov
rcrl
movsb
pop
push
sahf
leave
dec
xchg
pop
mov
out
cwtl
outsb
iret
mov
ja
imul
sub
sbb
fwait
sbb
sahf
xchg
xor
in
or
lret
mov
mov
test
mov
push
mov
xor
xchg
push
push
popa
rcrb
jo
dec
pusha
ja
fbstp
jp
sbb
xlat
and
jae
rol
mov
jg
outsl
adc
ss
push
lea
mov
repz
mov
cltd
dec
lret
xor
cltd
push
pop
push
dec
fstps
sbb
cmc
aad
jno
add
mov
push
adc
mov
push
std
addr16
cmpsb
sbb
xor
and
mov
sti
ret
mov
sbb
or
cmp
jae
fcoms
test
out
lcall
mov
pop
cmpsb
add
sbb
add
sbb
insb
jp
mov
loop,pt
inc
arpl
mov
mov
add
jp
test
shr
jae
xor
das
pusha
bound
mov
cmpsl
out
andb
test
mov
adc
pop
sbb
pop
aas
mov
cmp
xchg
iret
dec
jb
jp
sti
mov
xor
pop
cwtl
mov
lret
call
inc
fisubs
or
mov
in
bound
adc
dec
cli
fistps
ss
or
jg
cmc
pop
push
jg
mov
cltd
lret
out
mulb
push
in
frstor
inc
mov
call
xchg
and
sbb
dec
adc
mov
pop
or
xor
sbb
pop
fs
sti
je
addb
lcall
sbb
addr16
xchg
push
out
jle
loopne
jl
pushf
out
xchg
stos
mov
and
loopne
int3
lcall
rcrl
cmpsl
sub
or
jbe
fidivrl
cli
and
mov
or
fmull
jns
dec
inc
roll
hlt
add
mov
cmpsl
mov
mov
scas
cli
mov
das
mov
sarl
jp
out
nop
rclb
add
test
sbb
xchg
fildll
cwtl
mov
mov
and
test
iret
jg
test
roll
mov
lods
sub
cmc
push
loope
xchg
xor
cmpsb
lret
add
loopnew
pop
mov
outsb
and
lock
push
repnz
fdivrs
imul
hlt
jle
popf
xlat
sub
push
decl
lea
and
fnstenv
sub
pop
lods
mov
shr
mov
aam
stos
xchg
xor
cmp
mov
pop
addr16
into
or
push
mov
sub
movsb
lahf
pop
lds
pop
out
sbb
xor
dec
idivl
mov
es
inc
test
inc
cli
hlt
in
mov
mov
out
ja
mov
inc
xchg
orl
es
jae
loop
push
fnsave
sub
pop
dec
subl
push
mov
mov
scas
sub
inc
jle
push
push
adc
lret
sub
orl
stos
pop
jmp
mov
sub
pop
rcl
repz
jb
mov
gs
pop
sarb
xchg
int3
into
add
push
fdivrl
dec
pusha
decl
sbb
arpl
and
subb
leave
mov
xchg
mov
js
sbb
outsb
imul
gs
or
ss
insl
cli
rcll
mov
sbb
dec
inc
xchg
lahf
mov
cmp
lock
nop
iret
dec
cli
jecxz
mov
fsubrl
or
lret
fadds
js
cmpsl
dec
pushf
inc
icebp
inc
add
mov
call
int3
cwtl
aaa
mov
ss
cli
gs
inc
cli
pop
mov
insb
popf
das
mov
cli
dec
jo
push
cmp
sbb
dec
jmp
mov
xor
inc
hlt
enter
subl
push
add
sbb
or
jp
ret
cwtl
int3
in
insb
shrb
fnstcw
fdivrs
movswl
pop
outsb
dec
jecxz
cmp
cs
jae
jne
add
or
leave
jl
push
into
or
lds
inc
sub
cmpsl
add
shrb
mov
mov
andb
insl
pop
push
scas
and
fiaddl
xchg
and
ret
xor
inc
dec
sti
cld
sti
or
faddl
repz
inc
jnp
sub
ffreep
push
lock
arpl
and
iret
outsb
xrelease
das
jl
cmp
or
ret
lock
out
sbb
adcb
jns
je
std
xchg
cmpsb
scas
mov
jecxz
inc
xor
dec
jp
adc
jge
lods
or
jg
in
xchg
mov
adc
shr
leave
mov
lds
lock
addl
sub
dec
into
mov
adc
sti
inc
lods
xor
add
cwtl
mov
test
jg
jo
fcompp
enter
sbb
lods
out
fcmovu
cmp
mov
popa
mov
xchg
sub
js
js
push
cmpsb
push
sub
pop
cmp
int
cmpsb
push
jne
hlt
stos
xor
into
int3
ja
lahf
dec
clc
in
and
loope
insl
inc
ja
in
loope
insl
jbe
xchg
push
xchg
cmp
sbb
in
or
jle
fcompl
xlat
sub
inc
push
lcall
loopne
in
push
ds
fcomp
shlb
xor
sub
sbb
xchg
and
mov
sarl
mov
jl
pop
mov
lcall
in
je
jle
mov
push
call
jnp
pop
jp
loope
incb
outsb
dec
xor
sbb
rorl
insl
sub
arpl
xor
js
jbe
roll
lods
mov
cmp
mov
adc
adc
inc
jb
xchg
in
jne
std
hlt
jecxz
les
cltd
cmpsb
mov
jbe
ja
gs
fidivrl
jno
scas
cwtl
cmp
pushf
jno
lcall
hlt
rcrb
hlt
mov
inc
ret
jnp
jmp
jns
rcrl
and
faddp
and
push
mov
sbb
add
lock
test
test
xchg
sbb
jp
out
push
aaa
lahf
popf
jmp
mov
adc
xor
in
imul
sub
mov
addl
inc
mov
daa
sahf
repz
ss
mov
imul
out
mov
sbb
sbb
mov
mov
leave
lods
enter
rcr
pop
out
push
jge
lock
mov
stos
xchg
xor
push
jb
out
and
aad
mov
test
ja
aaa
and
cmp
addr16
jns
fisubrs
loope
xchg
arpl
pop
mov
xlat
fsubr
in
mov
lea
pop
sbb
jnp
lods
push
mov
stos
orl
sub
pop
mov
or
cmp
jl
xchg
jmp
pop
jno
mov
jecxz
jb
adc
inc
jae
mov
insl
lcall
call
cltd
push
lods
jno
insb
loope
jns
mov
aam
mov
dec
insl
lods
loope
mov
loope
push
call
ljmp
mov
ds
dec
lahf
scas
stos
ret
dec
or
mov
mov
loopne
jmp
push
or
mov
mov
pop
jg
cltd
push
std
xor
xchg
fstl
outsl
sbb
sarl
mov
push
popf
inc
pushf
xor
jbe
pop
adc
fwait
movsl
jnp
andb
mov
sub
sub
fwait
jp
or
flds
lcall
icebp
cmp
sub
dec
cmpsb
clc
js
rcrb
cmp
in
ljmp
and
test
loope
sub
push
mov
cwtl
jmp
mov
scas
gs
xor
ja
jp
sub
cmp
sbb
in
popf
cmc
lea
rolb
inc
xor
setnp
cmpsl
enter
xor
sti
testl
rcrb
sbb
mov
and
int
pop
sub
xchg
or
pop
or
ret
test
inc
shr
enter
decb
dec
in
data16
and
push
fisubrl
into
scas
es
cli
fsubp
or
repnz
sbb
mov
shll
push
lahf
push
dec
dec
push
addr16
je
fdivl
and
fadd
mov
jmp
pop
xor
in
mov
in
in
pop
enter
mov
cmp
jecxz
das
std
adc
addr16
das
push
cmp
scas
cmc
mov
dec
imulb
jo
fdivrl
cmp
mov
inc
aaa
imul
sbb
out
jle
cmp
repnz
push
movsb
sbb
jl
ja
cmc
xor
adc
mov
divl
leave
pushf
push
mov
das
cmpsl
sub
les
push
xchg
imul
sub
outsb
ss
lea
cmp
inc
mov
sahf
int3
jg
and
rorb
and
addl
idivb
inc
fsubrs
int3
xlat
aas
ja
xor
jge
or
dec
cmp
std
jno
push
sbb
lds
mov
jnp
dec
call
xchg
es
or
or
dec
les
fs
ds
ret
jmp
add
cs
call
dec
or
cs
xor
fnstenv
pop
mov
mov
and
dec
aad
mov
js
push
rolb
aam
popl
and
or
daa
inc
sub
cmpl
cwtl
iret
mov
out
fwait
sub
int
pop
jns
push
lret
mov
and
icebp
pop
ljmp
aaa
jo
mov
lods
shlb
push
mov
xlat
inc
mov
lds
nop
mov
xchg
sub
pop
lock
orb
pop
jne
inc
arpl
pop
rolb
aam
dec
stos
pop
cmpsl
rol
mov
outsl
nop
and
scas
mov
cmpsl
and
dec
sbb
fiaddl
push
push
add
xchg
loopne
data16
imull
push
jae
xchg
sub
cmpsb
outsl
sbb
cmp
aaa
or
sarl
xchg
pop
mov
add
push
clc
mov
iret
push
cmp
jnp
or
cld
dec
add
shlb
aam
push
jl
loop
popf
dec
dec
jbe
dec
sbb
inc
fcomps
sbb
in
jl
lahf
sbb
cmp
mov
in
lods
inc
inc
inc
or
stc
outsb
ret
mov
cmp
stc
lods
mov
adc
leave
mov
ljmp
or
jno
and
lret
les
sub
jg
cli
popa
stos
adc
daa
sub
cmpsl
je,pt
pop
mov
leave
mov
adc
inc
and
daa
lock
imul
or
push
mov
lahf
lahf
xor
insb
cmp
clc
in
add
fisttpl
or
mov
jmp
push
nop
cwtl
inc
jno
test
mov
mov
fmuls
cmp
adc
shlb
lret
bound
adc
add
call
pop
and
lret
sbbl
sbb
in
mov
xchg
ret
lods
xchg
push
out
loope
sbb
dec
xor
sbb
xor
lahf
daa
cmc
cmpsl
push
push
sub
pushf
fisubrs
movsl
jl
ja,pn
adc
jae
mov
and
dec
mov
cmpsb
mov
in
inc
jmp
cltd
push
jmp
and
add
push
xchg
loop
sbb
xchg
pop
jecxz
xchg
lahf
xor
ss
mov
add
sub
lahf
ret
jbe
aam
adc
mov
stos
jmp
xchg
mov
test
mov
push
xchg
jg
push
xchg
int3
in
sahf
dec
out
sahf
fiaddl
sbb
mov
ret
sti
test
jno
in
imul
aad
cmp
or
or
and
xchg
push
push
test
into
stos
insb
dec
loope
adc
les
divb
test
sub
sbb
lahf
and
or
ret
addl
sbb
shll
mov
outsl
cltd
test
fimuls
inc
push
mov
mov
sbb
rorb
out
out
jp
dec
add
lret
jge
pop
fdivrs
push
inc
push
je
inc
nop
pop
ss
inc
test
imul
rolb
fisttpll
aam
fwait
es
fwait
insb
movsl
imul
ss
cmp
jl
out
xlat
subb
movsl
call
pop
mov
dec
out
int3
test
jg
in
jnp
add
mov
movsl
xchg
xchg
arpl
xor
inc
dec
js
movsl
or
lahf
clc
das
cmpl
inc
ljmp
lods
mov
aas
daa
std
in
mov
adc
testl
jae
push
mov
or
push
mov
push
insl
mov
mov
xchg
pop
ficoml
mov
jp
addl
sub
lcall
and
lods
cwtl
sahf
xor
cmp
out
jbe
mov
iret
xor
test
add
add
push
subb
or
jnp
or
adc
sub
out
xchg
cmp
sbb
sbb
les
stos
pop
ret
stos
or
incb
lahf
frstor
pusha
pusha
dec
fisubs
pop
aam
and
aaa
daa
arpl
aas
fstps
push
fdivs
jge
test
jl
push
out
cmpsl
dec
lcall
mov
cld
outsb
sub
jmp
dec
push
mov
mov
mov
and
cmp
pop
add
les
les
dec
dec
sbb
dec
push
inc
fmull
pop
pop
test
pop
and
fs
int3
pushf
dec
movsb
setno
lea
and
pop
std
sbb
sub
adc
sub
repz
push
out
mov
gs
icebp
jbe
ja
das
and
aaa
cli
imul
dec
rolb
jl
int
mov
cwtl
adc
rcrl
outsl
into
or
add
lea
push
cmp
push
and
mov
xchg
mov
popa
add
and
pop
add
lret
xlat
add
push
add
pop
inc
popa
add
repz
jne
push
jmp
pop
mov
jp
cmp
mov
pop
jns
in
aaa
ss
push
or
and
push
out
rep
inc
insb
addb
aam
or
scas
cmp
cmpsb
inc
xchg
adc
or
test
mov
cli
cmp
call
dec
cmp
pop
inc
mov
cmp
test
mov
ret
orb
jnp
push
xor
insl
adc
jmp
mov
subl
movb
movsb
inc
mov
jp
test
mov
push
js
jne
jo
pop
shll
in
das
cltd
mov
sub
loop
and
mov
mov
jmp
mov
sarb
repnz
into
decb
lods
mov
jge
bound
mov
inc
pop
bound
mov
pop
sbb
dec
mov
iret
fists
push
pop
lea
es
xor
ja
mov
mov
xorb
sbb
jl
cmpsb
rcll
add
mov
mov
adc
pop
sub
fildl
or
mov
enter
nop
inc
cmpsb
inc
mov
mov
add
out
mov
add
pop
ss
pop
fs
jmp
lret
jge
insb
lcall
push
jae
and
or
js
push
dec
inc
sub
pop
fadds
mov
or
adc
jmp
push
push
ss
pop
sbb
lret
jmp
test
in
into
mov
xacquire
mov
and
adc
outsl
mov
adc
cmp
xchg
stos
incl
mov
add
push
ds
xchg
lea
popa
inc
dec
sub
addl
divb
xchg
xchg
lock
dec
pop
or
repnz
lods
faddl
in
int3
inc
fs
in
add
xchg
cld
sbbl
js
add
ficoml
and
movsb
mov
ja
pop
popa
sbb
int
lods
rorb
lcall
cwtl
pop
out
push
jnp
das
cli
dec
aam
push
pop
in
dec
mov
jae
adc
push
ljmp
call
add
xor
pop
cmp
add
mov
and
xor
xchg
add
mov
cmc
shl
pop
sub
test
imul
enter
cmp
popf
imul
jecxz
sbb
fisubrl
out
lods
cli
dec
js
ret
int
xchg
xor
adcl
cmpsb
xor
cwtl
push
xchg
mov
push
and
adc
push
cmp
in
pop
into
jb
mov
cmp
push
xchg
stos
mov
adc
mov
repz
pop
dec
cwtl
dec
cltd
or
out
rcll
mov
jp
xor
scas
mov
test
fnsave
dec
xor
mov
xor
mov
insb
or
mov
push
cli
mov
inc
imul
insl
fs
jno
insl
scas
pop
push
adcl
sub
xchg
and
jnp
mov
xchg
ja
pop
inc
aaa
jno
popf
pop
clc
jno
subb
out
fimuls
inc
mov
and
mov
nop
mov
pop
ja
add
xor
mov
and
orl
push
lods
cmc
cmpsl
dec
testb
cmp
xor
xchg
sahf
push
pop
int3
jg
jbe
inc
xchg
out
push
daa
repz
fstpl
jno
cltd
mov
pop
lds
bound
sub
inc
aas
ja
icebp
mov
std
jnp
add
out
xchg
outsl
dec
jnp
sbb
popf
stc
das
repnz
inc
mov
push
icebp
adc
mov
or
imul
or
sbb
cltd
sbb
fs
mov
adc
int
roll
fidivrs
sbb
mov
int3
dec
popa
es
pop
inc
movl
lods
daa
repnz
test
addl
mov
sub
hlt
sub
std
es
mov
xchg
xchg
adc
pop
cmp
cmpsb
cmp
sahf
in
dec
shrb
test
lods
or
and
inc
ss
fdivrl
add
inc
sahf
cmp
inc
imul
test
ljmp
fisubrl
lods
xor
cmp
shlb
outsl
mov
mov
inc
sbb
xor
dec
insl
dec
sar
fcompl
cld
cmp
in
cmp
popa
sub
mov
sbbb
adc
cmp
dec
fidivs
dec
and
push
rorb
add
rclb
loop
sub
cmp
mov
jge
fld
mov
iret
or
mov
sahf
mov
mov
cwtl
dec
xlat
les
jo
sbbl
faddl
aaa
mov
aam
stos
pop
mov
cmp
mov
cltd
addr16
jnp
fsincos
aas
mov
data16
push
repnz
jle
mov
ss
ret
imul
sahf
xor
dec
aad
xchg
xor
xchg
sub
fstl
push
jg
cmp
cmp
lods
out
in
js
sbb
push
mov
lahf
sub
in
stc
cmpb
lock
inc
les
xor
icebp
pop
pop
or
adc
mov
dec
jne
jmp
sub
andb
and
fnstenv
into
popa
dec
adc
js
loopne
mov
cmp
adc
icebp
xlat
xchg
fcompl
and
xor
push
lret
push
mov
mov
add
mov
dec
popf
xor
push
js
add
xor
arpl
mov
sbb
dec
pop
adc
mov
stos
push
mov
test
add
fadds
jae
test
adc
mov
adc
sbb
xchg
jo
adc
imul
fs
sbb
dec
mov
pop
popa
jmp
and
jle
pop
aad
inc
popf
outsb
popa
jno
lcall
pop
loop
sub
mov
mov
dec
cmp
aam
pop
inc
clc
lock
rsqrtps
sbb
out
add
add
lahf
lcall
dec
pop
inc
fwait
iret
lock
in
adc
out
aam
sub
insl
fnsave
test
fstl
ds
bound
cmp
testb
push
jne
in
xchg
aaa
imul
outsb
lahf
add
mov
push
fadds
incl
movsb
pop
pop
push
lret
cmp
aam
shl
dec
mov
cmp
xor
xchg
outsl
andl
nop
inc
xchg
insl
and
or
test
subl
mov
xor
cmpb
add
pop
xchg
mov
mov
mov
push
pop
lods
mov
inc
fs
pop
popf
mov
sbb
inc
aas
xchg
fmull
mov
cmp
push
sbb
in
and
and
cmp
dec
mull
dec
pop
scas
stos
mov
dec
and
mov
mov
lret
mov
dec
mov
sub
es
push
jmp
rcrl
adcl
popl
gs
cwtl
xchg
cs
fimuls
jl
push
imul
outsb
fcompl
push
es
stos
mov
xchg
pop
mov
ror
adc
jg
das
or
mov
add
movsb
lret
dec
mov
notl
pop
sub
pop
push
fldt
outsb
je
aam
dec
jg
pop
push
sbb
mov
push
mov
jge
dec
cmp
or
xchg
xchg
dec
inc
sbb
or
pop
mov
lcall
inc
rolb
adc
imul
mov
or
sub
and
cmp
mov
imul
mov
add
push
mov
xlat
mov
dec
add
sub
stos
cmp
inc
fstpt
leave
mov
xchg
mov
xor
xchg
dec
pop
cwtl
pop
mov
and
pop
cwtl
fdivrl
rorl
mov
or
hlt
inc
pop
mov
insl
jg
dec
dec
mov
cwtl
std
sahf
add
inc
mov
push
dec
xchg
out
xchg
jge
xchg
xor
dec
sub
push
push
jbe
sub
sbb
lret
jecxz
test
jbe
adc
mov
das
mov
clc
scas
lret
movsb
pop
sbb
jns
mov
js
or
xchg
or
xor
lret
pop
mov
js
xchg
loopne
sahf
pop
insb
xor
jecxz
pop
call
pop
into
nop
out
sub
pop
and
adc
jnp
push
ss
popa
in
push
orl
fwait
pushf
mov
or
push
inc
adc
jae
mov
or
ds
jg
mov
xchg
stos
xor
mov
mov
mov
js
cmp
inc
mov
inc
int3
outsb
lock
into
dec
fistpll
adc
jle
scas
mov
lods
lods
mov
sub
jl
cld
push
enter
push
cs
cmpl
add
jle
test
mov
out
cwtl
cmp
movsb
and
cmp
iret
cmp
dec
loop
in
or
adc
mov
repz
or
imul
inc
test
ss
mov
lods
fs
div
xorb
ret
popf
inc
dec
dec
sub
mov
push
gs
hlt
insb
sbb
pop
push
scas
bound
movsb
xor
sub
bound
push
mov
cli
sahf
or
mov
xchg
mov
frstor
adc
pusha
sti
das
shlb
in
jbe
into
push
cmpsl
add
push
dec
inc
adc
in
loope
pop
xor
js
cs
cmpsb
mov
ds
xchg
cs
fistpll
out
cmp
test
pop
xor
adc
and
nop
adc
fiadds
xor
hlt
cmp
out
aas
jo
add
cli
mov
mov
out
movsl
push
jge
xchg
test
and
and
xchg
push
xchg
push
adc
repnz
pop
aam
mov
xchg
pushf
cwtl
jmp
das
dec
mov
sub
mov
inc
or
fisttpll
popf
add
iret
adcb
dec
mov
or
or
mov
fisubrs
mov
insl
lods
mov
inc
rolb
pop
xor
dec
sub
insl
lcall
push
cs
outsb
ret
fbstp
push
dec
inc
adc
sbb
std
jbe
dec
push
jnp
enter
mov
add
and
sub
js
rorl
inc
aam
adc
cmp
xchg
call
dec
xor
sub
xor
push
loopne
insl
inc
jbe
xchg
dec
jge
jno
arpl
insl
std
adc
leave
push
pushf
mov
gs
gs
xchg
xchg
cltd
jno
sub
arpl
ja
pop
pop
adc
or
in
pop
insb
xchg
pop
xor
dec
dec
and
push
add
hlt
sub
fstl
dec
jle
add
loopne
pop
sbb
je
mov
adc
inc
sbb
addr16
cli
addr16
jbe
mov
cmp
pop
out
jle
cvtps2pi
or
ret
lret
decb
jmp
xchg
decb
cmpl
psraw
xchg
lret
add
mulb
add
inc
jl
sbb
outsl
jg
int3
lods
aaa
jmp
imul
inc
fnstsw
inc
cli
mov
sbb
jg
mov
outsl
pop
jo
xor
push
push
clc
ss
add
sbb
cmp
inc
inc
xor
sti
xchg
sbb
rclb
mov
int3
lods
cmp
xchg
jmp
loop
jmp
leave
daa
sbb
daa
xchg
xchg
into
lods
sbb
test
jb
les
sar
in
mov
inc
imulb
adc
fcoms
xlat
jbe
mov
inc
hlt
mov
scas
lds
inc
pop
fcoms
xchg
xor
push
and
fdivrs
jg
lds
pop
xor
je
xchg
repz
hlt
std
int
ja
popf
and
sub
pop
push
jmp
ret
xchg
cmp
xor
or
outsb
sbb
cmp
fwait
add
lahf
push
dec
xor
mov
repz
insl
pop
jmp
inc
cwtl
pop
xor
or
xlat
mov
bnd
sbb
lret
inc
mov
pushf
into
and
jge
jl
or
jg
scas
pop
adc
or
jl
mov
jge
in
mov
jno
push
daa
inc
mov
xchg
mov
jp
fimull
cmp
mov
xor
and
es
call
iret
movsl
push
mov
jp
popf
outsb
lods
add
int3
bound
pop
or
xchg
mov
lret
adc
push
dec
cmp
push
jmp
lods
xor
test
addr16
data16
add
xorb
popa
cmpsb
jns
lahf
ds
js
or
bound
pop
pushl
cmc
push
repz
sub
cwtl
test
out
jb
add
mov
push
lahf
add
negl
sub
mov
in
mov
test
nop
add
push
add
out
lds
inc
adc
xchg
cltd
cwtl
fnstcw
jnp
fstpt
mov
out
inc
xchg
dec
call
mov
out
lret
loopne
popa
push
jo
sbb
aaa
inc
mulb
jo
orl
mov
pop
add
test
mov
lahf
pop
dec
js
cli
cmp
inc
push
in
aad
xchg
lret
ret
jg
movsb
outsb
pushw
cmp
popf
dec
cmp
and
bound
in
mov
int
cltd
cli
out
pop
inc
gs
xor
mov
cli
and
cmp
xchg
aas
mov
popf
inc
movsl
dec
sbb
ret
jp
out
adc
or
dec
data16
rol
scas
ret
mov
stos
addr16
push
pop
add
lahf
jmp
cld
outsb
adc
sub
mov
or
pop
dec
push
or
pop
test
ret
and
test
mov
mov
ss
mov
push
dec
xchg
outsl
inc
mov
cmp
add
lea
inc
ljmp
lahf
out
push
out
pop
imul
dec
fstpl
jo
mov
leave
int
lret
pop
pop
fs
hlt
movsl
sbb
push
repnz
enter
loop
cli
sbb
cs
fcompl
xlat
push
cwtl
nop
out
fs
addr16
test
lods
jmp
imul
sub
imul
lret
nop
test
std
xor
in
inc
sahf
mov
call
stos
xchg
xchg
lods
cmp
cmp
mov
andl
icebp
notl
in
mov
jb
ret
iret
stc
sti
pop
scas
cmp
pop
out
fisttpll
out
inc
fistpll
jle
notl
cmp
and
cs
mov
cli
mov
xor
jmp
ss
xorl
shrl
xor
mov
sahf
pusha
push
outsb
rclb
fs
mov
outsb
mov
in
jns
adc
add
push
dec
je
cmp
cmp
mov
and
jnp
cld
rcr
mov
jae
mov
jp
lock
stos
mov
mov
adc
jp
bnd
fistps
add
inc
jo
push
icebp
jecxz
jecxz
ja
loope
push
lods
test
stos
insl
xchg
loop
sbb
outsb
ds
mov
or
sub
sahf
inc
jg
jl
test
jg
into
outsb
and
test
shlb
and
xor
sbb
jg
cmpsb
jmp
das
push
cmpb
or
jb
in
sahf
mull
or
popf
dec
jl
loope
ja
hlt
jne
dec
loop
in
push
bound
shlb
out
mov
repnz
pop
ja
jl
or
in
cmpl
cli
aas
movsl
flds
dec
out
out
dec
ljmp
xor
jb
xchg
mov
adcb
popf
cmpsl
cmpsl
or
scas
mov
sbb
outsb
sub
repz
mov
stos
clc
fs
mov
xlat
pushf
fbstp
fsub
push
sbb
ds
aaa
dec
mov
lock
outsb
sub
ljmp
popf
pop
repz
fs
and
inc
fs
add
data16
or
repz
jecxz
sub
bound
sbb
ss
inc
nop
mov
mov
sbb
xchg
bound
jno
repz
mov
repz
adc
pop
xchg
mov
push
pop
dec
insb
shll
outsb
sub
jmp
fdivl
leave
fists
mov
xor
aaa
call
cs
pop
cmpsl
xchg
inc
pop
lahf
sub
xlat
or
xchg
add
out
jg
in
xor
stc
popa
sbb
push
ja
mov
icebp
mov
add
insl
xorb
add
push
lret
dec
xor
dec
insb
mov
jmp
mov
pop
or
mov
add
out
push
inc
bound
cwtl
aam
cs
jecxz
mov
rol
pop
ja
in
mov
jmp
push
jmp
mov
mov
aad
add
cs
cs
nop
cltd
lods
and
jb
jle
outsl
mov
mov
imul
dec
xor
mov
add
lds
sub
push
xor
ret
nop
dec
dec
fs
movsl
stos
jne
ss
nop
daa
shlb
popa
sarb
in
shl
nop
out
popl
ljmp
add
aam
or
push
push
mov
mov
aad
xchg
adcb
ret
in
pop
imull
push
add
sarb
daa
sahf
repz
push
dec
mov
and
pop
dec
fmul
scas
pop
push
jb
into
gs
jl
gs
and
and
sub
outsl
pop
inc
loope
rcr
cmp
jle
cmp
popa
cs
and
loope
ja
daa
xchg
cmc
imul
pop
mov
mov
pop
xchg
xchg
xchg
daa
pop
mov
push
mov
lock
jmp
or
mov
shll
sbb
and
cli
dec
mov
xchg
cmpsl
int
fdivl
or
xchg
popa
jae
xchg
pop
jge
cwtl
pop
stos
cld
pop
pop
xor
jle
cmp
sbbl
and
cld
dec
jbe
sbb
bound
jae
push
and
push
inc
ja
dec
push
imul
imul
imul
adc
ret
adc
lds
popa
push
adc
mov
adc
push
mov
adc
push
addr16
push
aam
notb
adc
mov
push
enter
les
aam
and
hlt
xor
mov
push
mov
xchg
xor
cwtl
lahf
xchg
mov
mov
xor
sbb
leave
cwtl
push
shll
enter
add
jb
xor
arpl
cmp
iret
jne
push
lock
sub
mov
cmpsb
imul
xchg
rorl
dec
inc
pop
imul
or
std
das
mov
xchg
jno
inc
loopne
xchg
jmp
sahf
xor
into
cmp
pop
jae
in
mov
sub
imul
xor
pop
xor
out
stos
imul
adc
stc
out
pop
cmpsb
adc
inc
ret
xchg
aas
lods
dec
jbe
cmc
inc
dec
xchg
imul
pop
sahf
int
sub
fildl
mov
jns
cmp
mov
movsl
out
mov
sub
jb
jp
mov
sub
inc
shll
pop
cli
sbb
sub
lods
decl
mov
out
iret
dec
jae
call
inc
pop
out
mov
sub
jmp
dec
jge
les
out
imul
adc
in
push
mov
mov
ljmp
mov
lret
or
jl
gs
fcomps
add
mov
inc
ror
cmp
outsb
hlt
cmp
les
pop
popf
pop
loopne
cmp
adc
xchg
mov
lahf
in
mov
push
or
into
loop
fs
xchg
inc
mov
ljmp
mov
or
jns
loopne
cmp
je
outsl
and
outsb
pop
lret
or
jmp
xlat
in
or
add
clc
ja
fwait
dec
lods
incl
ljmp
fidivl
shr
xchg
icebp
pushf
add
shlb
fisubl
stc
in
mov
or
push
arpl
inc
shlb
int3
lds
lea
movsl
pop
mov
ret
fcmovnb
jmp
push
ds
or
and
jmp
int3
cltd
fimull
ret
in
and
jle
add
push
push
push
repz
mov
xchg
mov
insb
mov
pushl
test
pop
stos
ret
xor
push
dec
enter
xor
cmp
shrl
inc
mov
jne
push
inc
mov
fcomps
stos
cmp
loope
xchg
pop
or
xchg
outsb
xchg
fs
in
cmpsl
mov
xchg
leave
add
andb
cmc
imul
ret
sahf
jp
mov
in
nop
xchg
dec
cmp
mov
mov
in
loopne
xchg
or
ret
mov
addr16
movsb
or
icebp
icebp
fmul
mov
shlb
aas
jp
pop
lea
cwtl
xor
push
popf
and
xchg
out
jae
fisttpl
sub
push
jg
movb
iret
inc
sbb
push
fs
rolb
arpl
dec
mov
push
xchg
add
imul
lret
test
cmpsb
movsb
and
inc
cmpsl
sbb
inc
cmpsl
push
add
daa
sbb
inc
lret
in
adc
push
cmpsb
adc
test
add
incl
inc
packsswb
inc
adc
inc
or
jb
orl
es
pop
hlt
jo
sbb
jp
out
and
iret
hlt
cmp
push
test
mov
dec
dec
push
fbld
insb
mov
push
fstpt
mov
in
mov
fldl2t
bnd
pop
xor
mov
cmp
mov
bound
jne
imul
out
sahf
iret
sub
sub
stos
lea
arpl
sbb
mov
xchg
fmull
repz
xor
or
cltd
loope
jae
xor
cld
fwait
xchg
out
test
arpl
in
insl
sbb
inc
nop
mov
les
cltd
test
adc
gs
ljmp
pop
sti
cwtl
imul
mov
mov
cltd
jb
in
xchg
orb
addr16
push
xchg
rcr
rol
leave
dec
mov
imul
dec
iret
lea
in
mov
dec
mov
aaa
clc
das
jnp
or
adc
sbb
add
leave
inc
xchg
push
out
pop
xor
loop
mov
ss
ds
mov
lock
cmp
fs
in
dec
mov
push
xchg
shr
jb
lahf
sbb
mov
and
imul
inc
insl
mov
sbb
stos
popa
ljmp
jp
cmp
enter
mov
rclb
mov
sar
mov
outsb
dec
jg
imul
push
push
adc
or
enter
add
clc
nop
in
jge
loop
nop
cmc
push
jne
and
fisubrl
mov
int
lods
xor
inc
test
sarl
dec
inc
push
ja
adc
iret
les
mov
xchg
mov
mov
fs
xorb
out
xchg
ret
mulb
data16
scas
into
icebp
stos
insl
dec
test
inc
sbb
xchg
jns
mov
mov
and
in
xor
fs
clc
xlat
xlat
in
lret
push
fwait
push
cwtl
call
mov
ljmp
mov
mov
push
adc
aad
int
push
sbb
or
jg
flds
call
test
ljmp
std
imul
loopne
shlb
adc
add
xchg
popf
bound
dec
pop
bound
jo
popf
mov
push
cwtl
add
les
loopne
ljmp
sub
sbb
leave
inc
cld
add
pop
mov
das
pop
jo
or
xchg
lcall
mov
mov
mov
and
sub
add
cmp
cltd
lods
cmc
sti
adc
daa
lret
aaa
pop
inc
xor
mov
jecxz
out
fcmovb
cmc
adc
cwtl
mov
into
inc
icebp
mov
lret
dec
scas
jno
mov
movsb
and
fistps
adc
jmp
in
mov
xchg
in
aas
fsubl
mov
and
pop
dec
ljmp
sub
mov
push
mov
out
scas
cmp
xchg
movsl
and
mov
iret
jle
insl
sub
adc
sahf
inc
push
movsl
fcompl
in
sbb
jno
sbb
fcompl
push
lods
popa
xchg
sbb
mov
mov
jo
jmp
or
lahf
out
adc
push
es
inc
dec
rolb
stos
xchg
adc
mov
jno
inc
dec
or
xor
jp
pushf
xchg
scas
icebp
mov
push
loope
xchg
dec
fistl
inc
testl
dec
pop
cmp
xchg
stos
inc
fisttpll
mov
rorl
mov
sub
mov
inc
imull
pop
jb
sahf
rcll
mov
and
nop
jns
mov
mov
out
insb
icebp
jl
filds
shll
out
jb
adc
scas
arpl
cmp
fwait
push
nop
je
lcall
movsl
ds
rol
fndisi(8087
stos
scas
negl
roll
inc
push
fistpll
mov
jnp
loopne
int
inc
cmp
push
pop
ja
sub
test
and
xor
ljmp
sub
hlt
shrb
cmp
mov
jne
out
out
xchg
ss
mov
xchg
pop
out
lahf
pop
adc
sbb
inc
xchg
inc
insl
pop
jo
xor
pop
and
out
lret
lods
add
mov
ljmp
sbb
mov
cmp
popa
adc
dec
adc
loope
cmp
sub
dec
ret
mov
test
xchg
pop
int3
add
into
loop
pop
cmp
rorb
sti
or
sub
or
int3
sti
fsubs
cmp
and
lods
mov
fld
bound
xchg
into
aaa
jmp
pop
lret
or
sub
jnp
adc
mov
pop
ja
lcall
jnp
mov
fnstenv
mov
out
mov
frstor
cmp
pop
loopne
test
adc
mov
mov
xchg
pushw
push
push
add
into
sbbl
cmp
add
aad
bsr
lcall
imul
adc
jecxz
mov
pop
or
ror
pop
inc
push
insb
xchg
pop
lcall
inc
mov
scas
add
dec
adc
stos
ss
xor
or
cmovb
dec
out
push
stc
nop
jge
inc
nop
shlb
or
lds
add
out
out
mov
mov
loop
into
cmp
cmp
pop
adc
repz
int3
pop
sub
sub
test
push
daa
ss
cwtl
popf
adc
and
pop
push
mov
jne
fdiv
lds
pop
add
sbb
add
pop
fisttps
jnp
add
xchg
lea
mov
xchg
xor
jns
ja
add
dec
xor
inc
dec
cmc
dec
xor
add
out
fcmovnu
jnp
jle
xchg
ss
test
rclb
aam
xchg
movsb
jbe
mov
lock
dec
orb
jnp
jmp
lds
add
in
hlt
mov
out
dec
mulb
jmp
add
sbb
int
xchg
cltd
jae
pop
mov
pop
out
shrl
fld
mov
in
rcl
jo
loop
mov
mov
mov
movsb
inc
xor
xor
rcl
jne
pop
mov
xchg
ds
mov
mov
sbb
pop
push
aas
leave
sub
or
cmpsl
dec
cmp
in
xchg
jbe
cmp
shl
jo
sbb
jno
in
lea
jae
xor
in
loopne
add
fdivrl
mov
xor
cmp
push
out
cmp
mov
ret
adc
xchg
es
mov
jnp
add
cmpl
rcrl
mov
xor
and
js
mov
enter
mov
hlt
adc
mov
mov
jae
mov
andb
cwtl
loopne
xor
ret
pop
xchg
out
in
xor
jne
mov
es
fcmovu
test
add
cli
popf
ss
or
jg
dec
fbstp
inc
add
push
xchg
mov
decb
lret
rcrb
fbld
mov
inc
nop
sarb
mov
jae
in
jecxz
and
imul
mov
loopne
inc
scas
fwait
sbb
mov
add
xchg
pop
insl
add
xor
data16
not
and
jnp
or
jno
arpl
andb
sub
cmp
cmp
pop
xor
aaa
repnz
push
jecxz
mov
mov
push
jle
lahf
sbb
popf
jl
test
mov
sub
int
xor
jo
or
or
mov
or
adc
mov
mov
daa
jnp
out
scas
scas
mov
lods
mov
add
add
xor
gs
push
out
ret
adc
out
stos
cmc
fcom
dec
and
fucomp
fs
mov
scas
jmp
outsb
aas
popa
jbe
test
loopne
jns
ds
das
xor
cmc
ret
test
dec
xor
shll
pop
outsb
pop
xor
stos
inc
inc
es
ret
mov
add
sbb
out
fwait
lret
jae
outsb
int3
xchg
test
sub
xor
jge
stos
push
movsb
jae
mov
out
aas
xor
xor
ret
jb
mov
xor
dec
std
cmp
inc
insb
jno
push
mov
fcoml
divb
xchg
push
mov
scas
sahf
push
jns
adc
add
stc
filds
or
dec
cmpsl
xchg
addr16
xor
dec
cmp
rorl
sti
cwtl
fstl
out
in
sub
imul
daa
fsubrs
gs
daa
xchg
mov
outsb
aas
mov
mov
push
loop
inc
cmc
xchg
clc
mov
iret
mov
adc
stos
pop
cmp
sbb
cmp
pop
lret
mov
cmp
lahf
adcl
pop
in
test
dec
outsl
pop
mov
xlat
adc
xchg
mov
push
cmp
xchg
cmp
inc
mov
jnp
push
mov
xor
insl
fucomi
popf
cld
aad
adc
jmp
clc
push
mov
push
jg
lods
push
pop
jle
les
fdivl
idivb
mov
push
enter
mov
pop
loop
ss
jg
fsubl
jno
icebp
inc
in
cltd
mov
pop
and
dec
scas
scas
cmp
jbe
push
aam
in
add
jno
cmc
and
jg
fiadds
scas
mov
cli
sbb
mov
rclb
cmp
push
jmp
scas
jle
jle
test
pop
mov
sti
inc
add
clc
outsl
cmpsl
mov
lods
pop
fsubp
seta
pop
mov
mov
mov
addb
test
sbb
std
lcall
jo
xchg
aad
adc
cmp
daa
xor
bound
xchg
cld
jmp
fimull
and
lods
sub
addb
les
fsubs
push
dec
test
int3
and
fmull
test
sbb
add
mov
sbb
cmp
cltd
add
stos
fwait
imul
inc
sti
pop
pop
adcb
cs
in
push
pop
push
ljmp
mov
jbe
push
aas
dec
popl
shll
jnp
add
repz
incl
imul
sbb
inc
jmp
cmp
pusha
push
dec
xchg
jb
dec
sarl
ret
sub
das
mov
pop
xlat
inc
xchg
cmp
cmp
fs
push
push
inc
cmpsb
ror
jo
and
sub
rol
das
fldl
leave
loopne
xchg
mov
xchg
shr
dec
xchg
sti
dec
dec
xadd
fcmovu
add
cmp
test
cld
ss
cmp
mov
out
mov
cwtl
lods
push
cmp
push
mov
xor
test
sbb
outsb
insl
dec
jb
jp
push
mov
sbb
ret
popfw
mov
dec
dec
in
mov
imul
add
add
xchg
ficoms
cmp
test
popa
ja
js
mov
sub
push
cmc
fsts
pop
shr
sbb
aas
les
jecxz
ljmp
xor
sbb
sub
jae
mov
cmp
scas
test
cmp
xchg
sahf
scas
dec
fcoms
ss
mov
stos
inc
xor
fcoml
loope
loopne
push
cli
and
leave
push
gs
outsb
int
mov
mov
jg
cmp
cmp
push
aaa
cli
mov
nop
dec
inc
dec
outsl
in
jae
call
into
xchg
dec
mov
push
sti
movsl
icebp
mov
xchg
popf
ja
xor
fnstenv
jg
lock
mov
enter
iret
fisubrl
les
imul
cltd
cmp
aaa
sub
xor
gs
aam
int
andb
cmp
pop
sub
shrl
cltd
sub
inc
push
jg
aad
mov
addl
mov
loope
movsl
mov
mov
mov
xchg
and
outsb
scas
into
xchg
in
pop
and
dec
cmp
push
jno
mov
pop
cs
cwtl
push
ret
adc
and
sub
into
xor
addb
cmp
jo
hlt
mov
scas
int
jnp
inc
stc
pop
and
nop
out
int
jno
cs
mov
call
xchg
jecxz
shll
jne
or
jns
adc
or
push
ja
out
mov
jns
and
mov
repz
rorl
or
push
sub
lret
adc
fadd
test
stos
scas
mov
daa
cmc
push
mov
mov
or
cmpsl
imul
pop
mov
nop
je
aas
popf
call
insl
es
push
mov
test
push
cmp
lods
dec
jbe
pop
push
rorb
sti
and
cwtl
mov
jle
in
mov
lcall
and
pushf
push
cmc
mov
sbb
mov
sub
ficoml
inc
jnp
jmp
inc
jg
in
inc
xchg
es
jnp
mov
shl
popa
inc
out
imul
pop
fdivrp
push
popf
mov
mov
inc
mov
add
dec
add
mull
scas
inc
sub
adc
flds
rolb
cwtl
repz
rcrb
inc
in
pusha
sti
stos
ja
lret
mov
xchg
stos
insl
std
xchg
sahf
mov
loopne
jno
test
dec
lret
inc
andb
sbb
adc
jnp
movsl
mov
pop
cmp
and
bound
sbb
mov
mov
loop
sub
cmp
gs
jl
rcrb
cwtl
push
cmp
jp
rclb
pop
sbb
pop
sbb
dec
push
ja
lock
jnp
andl
jnp
jns
cltd
or
pop
sub
push
jp
int
mov
call
sub
push
adc
mov
ret
sbb
sbb
mov
jo
fmul
addb
sub
sbb
testb
sbb
fcmovu
dec
mov
lret
call
scas
adc
outsb
push
mov
lock
les
in
push
fimuls
xchg
mov
jge
add
in
into
xchg
outsl
in
pushf
jmp
push
hlt
dec
lret
inc
ret
xor
mov
pop
jb
pop
or
add
aaa
sub
xchg
popf
sub
xor
out
movsb
ffreep
adc
cltd
jmp
jne
mov
dec
aaa
dec
cmp
jne
lods
sub
movsb
dec
jnp
shlb
fisttpll
xor
movsb
scas
dec
add
imul
movsb
push
mov
xchg
insl
cmp
fidivrs
mov
jge
or
popa
jns
dec
aad
in
lods
stos
or
fcomp
rorl
xchg
imull
std
inc
mov
or
add
mov
into
pop
gs
dec
es
repnz
sub
add
push
daa
mov
dec
jbe
sarl
mov
neg
pop
cmp
and
loop
test
aas
out
add
inc
pusha
adc
fdivrs
mov
pop
pop
cwtl
out
je
shrl
jbe
arpl
ret
insb
or
leave
flds
adc
aas
push
mov
out
sub
loope
adc
ror
cmp
mov
lods
cmpsl
adc
repz
subl
inc
jecxz
out
das
movsb
cmp
and
sahf
loop
popf
adcl
dec
xor
imul
popa
inc
xor
in
pop
fldenv
sbb
cwtl
cmp
pop
leave
push
bound
mov
test
aad
xchg
push
sbb
out
jmp
sub
sbb
div
pop
push
dec
lds
and
mov
pop
jno
mov
div
inc
dec
shlb
push
jp
sti
and
js
jno
and
xor
mov
test
xchg
aam
xchg
or
mov
mov
lahf
add
jmp
jns
mov
sarl
dec
sbb
pop
mov
adc
mov
jp
test
or
sbb
std
pop
subb
gs
movsl
addr16
mov
jl
dec
test
push
repnz
iret
add
std
ja
jnp
mov
pop
jecxz
mov
insl
mul
outsl
mov
rsm
push
push
flds
ds
mov
jo
mov
aaa
hlt
jmp
mov
hlt
movsl
shl
test
sbb
data16
jne
dec
out
cmp
cmpsl
xor
es
pop
jnp
es
mov
jle
sbb
jg
adc
fisubrs
cli
ds
stos
rol
cmp
in
inc
pop
adc
cmpsl
dec
gs
jecxz
jmp
inc
or
push
outsl
in
cmp
sbb
xchg
inc
push
fldenv
sbb
gs
ret
jae
cmpsl
test
push
iret
gs
cwtl
testl
pop
sbb
mov
mov
ljmp
add
inc
pop
sbb
or
xor
cmp
int
loope
push
popa
aam
lcall
test
xor
js
mov
sub
pop
mov
mov
lret
cs
cmp
ficompl
mov
movsb
pusha
in
inc
rcl
mov
inc
lock
cltd
hlt
mov
sbb
pushf
lds
call
inc
cltd
insb
xchg
or
xor
lods
mov
loop
fiaddl
sahf
fdiv
negl
addr16
push
popa
rolb
loop
push
je
jge
loop
cs
dec
add
or
sarb
ss
add
in
add
xchg
mov
ret
or
repz
aaa
mov
push
cs
dec
xchg
mov
lret
out
and
daa
lret
add
add
add
fnsave
mov
leave
jns
loop
in
mov
jo
dec
clc
sbb
filds
nop
lods
out
sbb
mov
mov
sub
adc
add
cmp
negb
in
das
fdivp
mov
aas
pushf
leave
popf
push
mov
cmpl
gs
movl
jmp
call
andb
mov
es
mov
and
insb
jecxz
arpl
ficompl
sbb
push
xor
push
stos
jp
or
das
ds
or
fldt
out
or
push
dec
repz
add
fcomi
push
lret
jae
test
sub
mov
push
pusha
outsl
idivl
repz
pusha
xchg
icebp
fdivs
jno
xlat
xor
or
in
addr16
in
pop
sbbl
sub
pop
mov
mov
mov
or
icebp
push
lods
fsubl
sbb
push
repz
les
sub
dec
movsl
mov
sarb
mov
iret
jbe
inc
rcr
test
int
fidivl
shrb
mov
xchg
mov
loopne
fidivrl
jp
into
jp
js
in
sub
mov
xchg
inc
ret
sub
pop
outsb
das
clc
aas
jmp
mov
inc
bound
lods
roll
aaa
jnp
dec
sub
jle
jmp
push
xorl
mov
movsl
jo
cmp
aas
out
mov
insl
mov
int
fs
mov
jae
lds
test
dec
mov
movsb
and
xchg
pop
xchg
push
xchg
xorb
mov
call
mov
shl
sub
sub
ja
mov
ret
dec
add
outsb
pop
mov
shrb
movsb
mov
dec
pop
dec
and
mov
data16
pop
or
cmpsl
jbe
push
cmp
mov
push
jg
aam
fsubrp
mov
mov
fucomp
std
push
int3
xor
push
add
jne
hlt
jge
lds
mov
mov
insl
mov
mov
insb
mov
loope
mov
ljmp
cmp
jp
data16
mov
insl
mov
mov
inc
fidivrs
xlat
ja
clc
je
out
xor
sub
mov
push
pop
ret
sbb
mov
jp
sub
push
adc
filds
jg
test
pop
repz
or
in
sbb
and
xor
adc
cmp
sbb
pop
inc
lret
sub
pop
mov
mov
hlt
outsl
pop
and
or
ds
push
sub
repnz
adc
lods
rorl
mov
jnp
js
in
pop
fwait
jmp
cmp
dec
outsl
push
fstps
inc
cmpb
mov
cmpsb
and
gs
mov
jg
dec
push
out
fistps
jp
ds
stos
shll
mov
mov
mov
loop
jo
pop
jp
or
into
sbb
dec
lcall
jae
stc
movsb
inc
jnp
push
mov
rcl
scas
mov
imul
cmp
and
mov
jmp
mov
push
jb
and
out
inc
ljmp
mov
lahf
sahf
push
jae
add
push
xor
je
fcoml
scas
jae
and
cmpsb
cmp
add
mov
mov
or
cli
push
mov
xchg
mov
leave
inc
cmp
xorl
popl
mov
xor
hlt
mov
dec
out
xchg
insb
shlb
mov
cmpb
movsb
adc
inc
int3
js
pop
popa
jns
xchg
xchg
testb
xlat
in
mov
roll
add
mov
ficoml
pusha
add
mov
fadds
iret
loop
dec
pop
cmp
mov
xor
lds
fildl
and
sbb
jno
add
inc
fcmovnu
fwait
outsb
sbb
decl
pop
sub
push
ds
jle
imul
add
fdivs
xchg
mov
ret
push
sbb
mov
push
fistps
shr
cmp
shlb
out
fucomp
loopne
lahf
lock
ficoml
bound
in
pop
into
pop
sub
rcll
popa
pusha
and
jmp
fdivl
xorl
sbb
mov
test
ficoml
in
jb
fcmovne
pushf
jno
mulb
insb
adc
xchg
les
xor
inc
mov
sub
xchg
jnp
leave
sarb
lret
sub
repz
ljmp
push
inc
popa
pop
lret
leave
or
movsl
dec
pop
xchg
xor
dec
push
mov
push
or
pop
inc
and
xor
sbb
jae
fmulp
mov
fld
mov
xor
int
pushf
and
fistpll
imul
xor
mov
cmp
dec
jl
ja
cs
testb
sbb
fmuls
jg
sarb
push
loop
hlt
and
push
xor
dec
repnz
test
bound
bound
cwtl
push
ja
push
popa
mov
notl
and
or
mull
gs
pop
xchg
adcb
pop
loop
inc
out
andl
inc
cld
out
sahf
adc
lret
jb
mov
out
clc
sbb
push
lret
or
int
xchg
lret
inc
repz
mov
fists
lret
movsl
in
rorb
out
sbbl
out
inc
lods
lret
and
pusha
push
adc
sub
pop
or
pop
repz
dec
ret
pop
sub
in
jge
lods
xchg
sub
aas
xchg
shlb
pop
lock
push
gs
int
incl
jbe
jmp
iret
mov
xlat
inc
xchg
pop
js
dec
and
fldenv
inc
xor
mov
cmp
mov
jns
rcrl
insl
push
xor
sbb
xor
or
test
and
dec
mov
js
add
and
push
call
out
push
enter
xchg
xchg
lahf
lods
pop
in
lock
mov
js
lret
test
mov
sub
loop
scas
push
test
or
dec
or
clc
mov
sahf
or
in
dec
fmulp
dec
test
adc
in
sub
fisubrl
inc
pop
pop
test
popa
sbb
mov
test
mov
jle
mov
push
jne
cmp
fisubl
out
pop
scas
jo
dec
mov
mov
aad
jl
mov
cmp
pop
jmp
add
aaa
repz
ficoml
test
push
into
call
cmp
sahf
in
hlt
push
cwtl
dec
adc
aaa
dec
mov
mov
stos
nop
xor
dec
lahf
popf
sbb
clc
out
sti
fstps
xor
bound
jmp
and
jno
das
and
nop
dec
xor
aas
popf
xor
arpl
dec
inc
or
fs
sub
dec
or
lcall
lcall
dec
push
jl
lea
push
jo
cmpb
xor
xchg
scas
rcll
scas
movsl
jg
or
xchg
push
js
dec
xor
js
scas
jp
adc
push
pop
cmpsl
lcall
pop
shrl
imul
inc
cmc
sar
movsl
fcoml
lahf
add
jbe
mov
test
lret
inc
inc
and
popf
push
cmc
std
imul
inc
movsl
cld
mov
adc
ret
cltd
mov
gs
xor
or
and
cmpsb
int3
roll
xchg
mov
cmp
mov
jl
pushf
pop
inc
jne
leave
call
xchg
mov
out
mov
pop
into
or
push
dec
jge
imul
outsb
sbb
mov
cmpsb
push
xchg
pop
aad
lahf
dec
out
fidivrl
adc
xchg
int
mov
mov
rolb
pop
jno
xor
leave
push
mov
mov
je
mov
out
hlt
xchg
test
or
int3
idivl
pop
enter
mov
xchg
jmp
les
pop
cmp
fistpll
test
pop
leave
cwtl
mov
jns
adc
rcrb
add
addb
cwtl
sbb
fwait
lods
mov
lcall
dec
mov
cmpsb
sub
mov
subl
sub
mov
lret
popa
and
arpl
xor
shll
inc
repz
mov
xchg
lcall
and
push
dec
sub
aas
jns
addr16
in
add
push
jo
pop
sti
inc
pop
ds
movsl
mov
inc
mov
adc
movsl
int
mov
dec
sarb
mov
mov
sbb
or
jne
pop
sub
movsl
fisttps
scas
mov
push
divb
fs
insb
pop
subl
outsl
sub
int
mov
aas
shrl
adc
jae
clc
shrb
push
mov
xor
lods
and
mov
arpl
shll
hlt
stc
loope
inc
fisttpl
cs
aaa
scas
xlat
in
mov
pop
push
rcrl
push
cmpsb
xchg
aad
loopne
hlt
inc
nop
xchg
stos
jl
cs
push
lcall
jne
cmc
mov
xchg
into
ret
fnstcw
inc
sbb
mov
insl
mov
xor
push
loop
add
in
push
data16
cmpsl
or
sub
test
je
or
lds
inc
push
jecxz
lock
xor
sub
lds
popa
in
and
call
sarl
jbe
or
jle
mov
cmc
jg
inc
jecxz
add
mov
mov
cltd
jnp
mov
dec
inc
jo
lcall
adc
dec
fnstsw
rorb
stos
xchg
push
push
hlt
cs
xchg
popa
xchg
lcall
ficomps
push
mov
mov
push
scas
into
push
in
outsl
lahf
jmp
pop
stos
jnp
mov
push
lcall
pop
sub
or
or
xor
ja
inc
out
push
push
mov
pop
std
xor
push
sub
or
mov
lret
pop
sbb
xchg
lcall
ds
popf
cmpsb
hlt
fidivrl
in
shll
in
xchg
mov
and
in
or
mov
ljmp
xchg
in
test
mov
scas
addr16
push
dec
cwtl
fldcw
das
fidivs
sahf
push
lods
arpl
test
push
or
pop
cmpsl
jbe
fstpt
jge
test
dec
cmp
lods
mov
dec
call
mov
add
jp
filds
and
cltd
push
lret
jbe
dec
jne
pushf
arpl
repnz
lret
and
fnsave
insb
cmp
test
movsl
push
inc
dec
pop
outsb
lods
pop
mov
ja
fcomps
push
push
test
std
xor
imul
push
movsb
mov
jae
loope
or
in
cmp
xor
and
jns
push
push
out
arpl
idivb
xchg
push
loop
mov
jns
adc
xchg
sahf
ss
lret
ficomps
notb
xchg
inc
cmp
test
loop
in
subb
push
jle
dec
or
push
ret
out
cmc
scas
lods
jle
imul
je
xchg
hlt
test
xchg
in
jl
pop
es
inc
into
ss
jns
cld
out
push
ljmp
into
pop
sbb
inc
mov
sbb
mov
cmp
shr
inc
test
or
aas
lret
fsts
pop
xlat
les
int3
sub
bound
xor
stos
dec
rcll
test
xchg
aaa
pop
inc
clc
jae
pop
dec
mov
outsb
mov
dec
jnp
rcll
jg
sub
fnsave
jg
cld
pop
cli
test
mov
and
out
jl
ret
and
mov
dec
xchg
jge
xchg
stos
mov
cltd
movsb
and
inc
cmpsl
mov
cs
adc
cmp
test
mov
cmp
mov
mov
in
push
imul
xlat
mov
iret
or
jb
repz
pop
popf
fidivl
dec
add
outsl
push
in
shrb
mov
xchg
add
lahf
xchg
leave
imul
loopne
ljmp
loop
inc
cs
imul
pop
jecxz
ljmp
cs
repz
test
divl
push
jmp
push
jg
out
addb
or
xor
hlt
xor
jl
test
mov
int3
cwtl
aas
jl
fdivl
stc
gs
aaa
insl
pushl
cwtl
mov
fs
mov
dec
mov
push
cmp
in
cmpsl
mov
lods
push
mov
jge
or
dec
and
mov
add
xchg
mov
push
mov
repnz
call
mov
adc
sub
cs
mov
bound
jbe
pop
mov
add
dec
or
not
mov
and
shlb
add
mov
ss
lahf
add
int
fdivl
mov
movzbl
mov
int
clc
jge
inc
jne
test
xor
mov
dec
enter
out
mov
and
fsubrs
movsl
repz
subl
inc
push
movsb
inc
in
mov
cmp
mov
out
and
in
sub
mov
adc
sub
push
xchg
inc
add
ss
adc
cwtl
mov
sub
nop
cwtl
push
pop
mov
cmp
mov
push
imul
pop
scas
push
std
dec
sub
loop
pop
xchg
xchg
pop
shrb
addr16
movsl
enter
enter
and
cwtl
mov
popa
fcompl
inc
loop
insl
dec
mov
push
xchg
sub
in
push
add
adc
mov
addr16
cld
push
hlt
adc
shlb
test
mov
push
mov
jae
popa
dec
mov
or
cmc
int3
sbb
push
pushl
out
xor
stos
stos
shll
pop
out
inc
cmp
xchg
pop
or
and
pop
rorb
jmp
push
mov
mov
stos
jb
mov
xchg
and
xchg
inc
fidivrs
pop
loope
mov
inc
lods
jl
jbe
dec
fcmovnu
mov
inc
das
ret
inc
fildl
test
or
lods
inc
push
lds
pop
testb
shll
sahf
xchg
dec
jp
out
cmovne
rorl
pop
xor
scas
inc
fstpt
cmc
inc
push
vmread
and
fidivrl
xchg
adc
dec
adcb
cld
adc
lcall
inc
jne
add
fistps
and
mov
mov
cmpsb
and
dec
push
push
test
mov
push
into
jb
and
inc
and
jae
imul
aam
movsl
enter
test
js
push
jno
clc
mov
jge
jno
test
cmp
imul
jo
repnz
sbb
inc
push
shlb
adc
out
shr
xchg
xchg
mov
in
in
fwait
cmp
jmp
jp
or
vpcmpgtw
test
sub
sub
call
cmpsb
aam
push
je
xchg
sub
mov
mov
cmp
enter
xor
orl
mov
push
dec
adc
fcoms
or
shll
xchg
adc
xor
out
pushl
mov
gs
sub
mov
push
inc
jmp
xchg
lds
dec
in
ror
push
jmp
daa
sub
pop
pop
cwtl
and
push
cltd
mov
cmp
ret
hlt
xchg
int
cmpsb
out
test
xchg
mov
sub
imul
cmp
mov
rcrl
scas
ret
dec
xchg
dec
dec
xchg
dec
sbb
hlt
cmp
mov
addr16
das
gs
stos
ret
push
xor
std
mov
cmpsl
mov
xchg
fcompl
int
pushf
mov
cmp
sbb
das
mov
aaa
adc
aaa
sub
jecxz
movsl
cmp
mov
out
stos
pop
jp
pop
xchg
pop
dec
lock
stos
mov
lahf
mov
loope
mov
out
outsl
adc
jb
rolb
scas
mov
push
lret
lds
mov
aas
jecxz
or
stos
mov
lret
jns
jge
jae
mov
dec
mov
adc
sbb
cwtl
shr
cmpsb
mov
fsubs
pop
xor
mov
adc
cmp
pop
dec
stos
dec
sub
dec
push
pushf
loope
xor
ss
adc
scas
xor
adc
sbb
test
xor
sub
inc
stos
enter
rclb
push
cli
cwtl
jno
ret
xchg
fdivl
dec
inc
scas
popf
jg
xchg
jno
out
cld
pop
jno
mov
xchg
pop
or
sbb
xor
xchg
ja
jnp
int
jp
mull
xchg
dec
pushf
cmp
or
fists
cmp
jbe
lahf
or
sarl
out
push
sahf
aaa
ret
mov
fisttpll
shlb
lock
xor
xor
mov
xor
js
fs
cmpsl
les
jne
mov
pop
mov
imul
add
sahf
test
mov
lret
mov
test
jmp
push
xchg
mov
lods
test
test
rorb
imul
adc
hlt
test
xor
add
loopne
insb
inc
loope
push
ret
loopne
jge
out
fcompl
orl
add
insb
sub
lret
scas
mov
out
ret
push
test
sahf
dec
cld
lock
mov
cmc
and
mov
pushf
cmp
and
popf
int3
mov
pop
enter
bound
xor
sub
push
ja
mov
scas
mov
dec
push
xchg
push
mov
fidivrl
call
pusha
jl
mov
fsubr
dec
jns
jo
ss
nop
xchg
dec
icebp
lahf
sbb
scas
rorb
mov
fidivl
or
sub
jbe
jno
aas
js
shrb
imul
insb
or
pop
push
subb
andb
outsb
imul
jne
pop
movsb
std
popa
stc
test
xchg
mov
call
fwait
add
in
push
add
movsb
xchg
in
mulb
ss
lods
lret
or
mov
lea
inc
dec
adc
xlat
and
or
xchg
cmp
sbb
loope
and
mov
xchg
mov
push
clc
mov
out
mov
dec
cmp
inc
jp
inc
push
jo
cli
dec
cld
roll
jb
cmp
mov
imul
adc
repnz
push
div
push
push
outsb
pop
nop
push
ret
sbb
push
cmp
fisubl
or
fwait
adc
stos
out
sti
int3
pop
fidivs
inc
inc
or
in
and
cwtl
fisttpll
loopne
inc
jo
rol
pop
js
bound
repz
loop,pn
adc
popa
xchg
lret
mov
outsb
add
aam
out
ljmp
fmul
or
inc
js
cmp
push
lds
dec
test
adc
inc
dec
pop
pop
inc
shl
mov
inc
or
jg
aaa
jae
adc
les
inc
sarl
add
push
jno
pop
rcll
dec
aam
arpl
mov
lods
xor
cmp
sbb
insl
mov
dec
hlt
push
jmp
fidivl
insl
mov
cmp
mov
jmp
jbe
inc
scas
andb
adc
je
dec
cltd
sub
dec
dec
jae
sarl
xchg
push
mov
ret
push
dec
mov
outsb
mov
xor
push
push
sahf
stos
popf
push
sub
loope
lahf
pop
pop
sahf
jne
xor
jno
and
mov
mov
orb
fdivrs
fst
xchg
inc
arpl
fsubl
lret
sbb
xchg
insb
mov
xor
fs
lret
scas
popa
xchg
and
test
mov
push
xchg
out
xchg
ret
lock
or
cmc
jp
pusha
jle
lret
lcall
or
testb
enter
andl
scas
out
push
push
gs
ds
out
scas
gs
sbb
into
cld
sbb
lods
fildl
pop
sub
les
pusha
aaa
imul
pop
dec
fwait
lret
jns
xor
xchg
and
add
dec
pushf
int3
lcall
outsl
sub
lea
sub
cmpsl
les
cli
xchg
sahf
xchg
add
xlat
mov
scas
arpl
or
shll
mov
inc
pushl
js
je
cld
sti
mov
arpl
imul
cmpsb
add
inc
cmpsb
jle
inc
pop
dec
cwtl
ret
jp
mov
int
jle
pop
pop
dec
inc
shrl
lahf
wbinvd
mov
sub
push
push
jbe
stos
popa
nop
xchg
ss
mov
and
sub
lcall
ret
out
ret
xor
loopne
movsl
out
sub
in
shlb
jg
lds
push
cli
fcmove
stos
dec
dec
cmp
add
daa
pop
push
jge
pop
mov
rsqrtps
push
roll
mov
cmp
mov
add
sbb
jecxz
lret
sub
xor
jbe
add
or
pop
dec
push
push
push
stos
sbb
out
xchg
xchg
sub
push
insl
xchg
test
xchg
xor
push
addps
xchg
js
xchg
cld
sub
mov
jg
mov
out
leave
push
sbb
mov
fs
xor
mov
dec
das
ja
push
js
js
jg
sub
jg
inc
fimuls
ja
fildll
push
or
push
sbb
jbe
xor
out
mov
add
fists
fsubrp
notb
jnp
xor
jle
and
loop
nop
js
insb
aaa
mov
push
in
mov
pop
ss
ja
xchg
cli
fucomi
xchg
mov
dec
and
in
dec
push
insb
cld
lods
inc
inc
and
std
daa
push
inc
nop
out
clc
dec
cmpsl
mov
pop
and
or
pop
add
ret
mov
mov
sbb
pop
adc
mov
or
fistl
ja
imul
dec
ja
sbb
inc
or
cmp
mov
fwait
xlat
mov
mov
sub
cmpsl
dec
daa
xchg
loope
adc
jp
test
fsub
mov
or
fidivrs
inc
pop
push
mov
iret
dec
xor
mov
cmp
add
jmp
ds
mov
movsl
pop
or
iret
cmp
fistpl
sbb
jb
es
lods
dec
cwtl
ror
inc
std
movsl
xor
enter
dec
push
mov
flds
xchg
jae
jae
enter
scas
sub
dec
push
cmpsb
leave
fnstenv
movsl
pop
repz
hlt
imul
cwtl
ror
xchg
push
dec
mov
or
ja
shll
sbb
stos
test
mov
mov
sbbl
pop
test
lods
fdivrl
frstor
jg
xlat
hlt
sub
nop
mov
insl
xor
test
je
sub
out
lret
push
lret
mov
jns
jge
out
jnp
call
aad
fcmovnbe
outsl
lock
nop
ret
push
loopne
lods
aas
loop
sub
adc
insl
aaa
or
test
or
cwtl
xlat
mov
mov
pop
in
pop
mov
push
ds
mov
daa
out
loope
cmpsl
adcb
addr16
cmpsb
adc
dec
push
pushfw
repnz
push
mov
arpl
xchg
sub
push
jb
inc
insb
dec
lods
imull
inc
jno
or
sub
cwtl
cmp
testb
pop
popf
mov
xchg
push
pop
jb
cwtl
pop
inc
sbb
shlb
add
push
in
dec
cwtl
mov
push
mov
inc
loop
pop
mov
add
mov
and
ja
inc
dec
ret
loope
inc
stos
jae
or
and
mov
hlt
mov
or
mov
mov
pop
push
pop
cli
mov
sbb
xchg
xor
in
dec
pop
jmp
je
xchg
repnz
xchg
xchg
js
mov
jnp
or
inc
push
jno
test
xor
stc
jb
jae
cli
andl
lea
jnp
fdivrp
fldcw
in
jne
jg
out
sbb
fnstenv
notl
adc
inc
pop
dec
mov
mov
repnz
lret
into
jns
cli
pop
pop
dec
and
outsl
ja
movsl
or
int
imul
cli
pop
ja
addb
cmpsb
lods
sti
ljmp
dec
jg
das
int
xchg
test
xchg
push
js
test
aas
pushf
test
lea
adc
cmpsl
gs
jmp
jo
or
adc
push
jmp
xor
stos
fmull
das
add
mov
or
rcr
mov
int
outsl
test
xor
lea
sahf
js
and
mov
shl
cltd
inc
and
sbb
pop
flds
pop
lahf
in
mov
daa
int
rorl
mov
push
dec
add
mov
aaa
repz
mov
xchg
sarb
imul
pusha
fucomp
mov
popa
push
sbb
add
sbb
inc
push
xor
stos
or
sbb
xchg
or
jbe
hlt
sub
lea
xchg
push
sub
aad
jb
int
stos
loop
test
xor
leave
jecxz
add
scas
mov
and
sub
mov
lret
lret
enter
sub
loop
ja
xor
pop
test
xchg
outsl
mov
call
jnp
fstps
push
js
xor
jo
cmp
sub
rorb
cltd
dec
and
loopne
jp
mov
out
shrd
jl
xchg
dec
ss
lahf
insl
sarb
push
jg
inc
fs
jecxz
or
ss
add
dec
jmp
lods
cmp
sti
out
int3
loopne
stos
pop
jmp
cs
sbb
fistl
adc
dec
sbbl
fsin
fistpl
sub
add
inc
xor
xor
and
mov
outsb
in
cltd
in
add
ret
lods
inc
pop
push
push
dec
jo
jge
fst
loope
icebp
or
xchg
in
pop
jmp
pop
test
sbb
mov
sbb
mov
sahf
xor
in
fstpt
dec
inc
push
jne
or
jae
dec
popf
pop
sahf
jecxz
sub
les
inc
inc
inc
pop
jmp
mov
jno
call
cld
inc
hlt
insw
mov
fnstcw
loope
jo
hlt
cmp
subb
enter
in
xchg
sar
cmp
add
mov
push
mov
mov
lea
sahf
pop
out
repnz
sarl
stos
xchg
repz
or
pop
inc
into
dec
dec
into
sub
loop
test
push
pusha
xor
aas
pop
stos
dec
lea
dec
and
out
sbb
add
xor
cmp
push
out
mov
cmp
je
or
or
xchg
mov
mov
sbb
repz
cmp
inc
xchg
jmp
test
dec
add
iret
dec
jg
inc
or
sub
inc
cli
fnstsw
ja
scas
dec
cmp
jge
mov
xor
out
sar
popa
movsb
out
ss
mov
pop
pop
xor
pop
fcompl
stos
sub
ds
nop
insl
test
sub
ja
ja
pushl
dec
cmp
cmp
adc
gs
fstl
test
xor
jae
pop
std
cmp
mov
rorb
lcall
mov
push
xchg
add
sbb
xchg
cltd
loope
xchg
bound
movsl
jg
mov
stos
divl
inc
and
and
out
mov
jle
lcall
dec
js
mov
icebp
ljmp
addr16
fistl
mov
fistps
lret
jnp
mov
sbb
mov
add
push
testl
cmp
xchg
stos
adc
aad
xchg
andl
or
jo
add
pop
stos
xor
pop
std
jge
enter
xor
xchg
aam
gs
push
mov
cwtl
sahf
mov
lock
inc
adc
test
dec
jmp
and
jno
push
clc
cmp
cltd
pop
icebp
dec
enter
push
adc
pop
add
addl
pop
xchg
lret
aaa
add
push
in
xchg
cltd
mov
andl
adc
stos
mov
push
jbe
inc
push
push
adc
je
aad
test
push
idivb
push
mov
fldl
jno
dec
cmp
je
adc
imul
jp
mov
dec
xor
add
mov
xchg
in
xchg
stc
aam
jge
imul
push
dec
popf
lock
in
mov
jl
vpacksswb
and
push
or
mov
in
jmp
outsl
aas
mov
pop
fcompl
push
test
inc
or
jecxz
pop
dec
mov
pop
call
mov
ror
dec
ds
jg
or
xor
cmp
and
inc
std
jb
ljmp
fwait
jmp
ret
cmpsb
xchg
xchg
pop
mov
repz
push
push
jmp
push
push
sti
push
rcrb
add
push
dec
mov
fwait
and
and
mov
xor
jae
insb
xchg
sub
xor
mov
jnp
push
and
ret
movsb
scas
xchg
ljmp
mov
sarl
mov
test
jb
scas
pushf
test
or
mov
scas
dec
sub
ficoms
bound
adc
add
push
mov
push
adcl
enter
ret
hlt
nop
mov
sti
dec
cs
imulb
dec
mov
mov
les
xchg
loopne
stc
ret
cld
movsb
fmul
jno
mov
or
addr16
in
lret
leave
out
dec
mov
test
or
in
cld
mov
mov
call
das
mov
push
and
dec
fs
push
mov
sbb
mov
xor
push
jo
out
sub
cmpl
push
fs
ret
dec
lods
xchg
xchg
cltd
xor
clc
or
xor
xchg
or
dec
add
fs
dec
daa
fwait
pusha
jle
lods
outsl
jecxz
std
xlat
and
push
push
lahf
rol
push
movsb
add
rorb
dec
add
negb
jbe
cmp
test
imul
xor
mov
sub
add
jmp
cmp
ret
add
fwait
mov
repz
imul
adc
or
dec
jp
pop
and
addr16
and
dec
fistpl
lret
out
cmp
jl
mov
gs
aas
or
inc
push
sub
fldpi
pop
cmp
iret
jns
mov
mov
test
push
push
scas
pop
cmc
and
cwtl
repnz
push
add
xor
or
or
ja
mov
push
jns
xor
mov
xchg
ljmp
fdivrl
lock
pop
iret
push
hlt
xchg
adc
mov
jl
into
repz
or
lods
fdiv
rcll
dec
pop
push
mov
insl
inc
mov
test
mov
sbb
sub
dec
rolb
aaa
mulb
stos
sub
or
adc
sub
xchg
testb
pop
test
pushf
es
cmp
rorl
daa
mov
fwait
inc
dec
stc
pop
repz
xor
jnp
mov
and
sbb
cld
xor
xchg
adc
or
xor
inc
cmp
pop
scas
cmp
aaa
jbe
mov
lds
mov
pop
or
sub
add
cmp
add
jns
push
jle
inc
mov
sbb
sbb
out
push
mov
or
push
out
stc
mov
mov
ja
cmp
les
stos
mov
push
clc
mov
jp
mov
dec
in
add
mov
cmp
and
insb
daa
jmp
xchg
fldl
in
jecxz
jo
aam
cld
cmp
pop
loopne
sahf
adc
pushf
xor
mov
xchg
xchg
out
mov
dec
shlb
add
pop
add
inc
and
addr16
stos
cmp
sbb
scas
hlt
or
mov
xchg
mov
cmpsb
ljmp
aaa
fdivs
popf
aaa
insl
push
jp
cmpb
mov
lods
scas
dec
xor
int
popf
push
stos
lahf
xorb
jnp
dec
mov
neg
iret
push
lret
in
ja
push
sub
scas
pushf
cmpsl
sub
xor
out
ss
in
loop
ja
lock
inc
gs
mov
mov
mov
sub
idiv
popa
sarl
je
mov
fxch
shl
loope
bound
icebp
js
mul
push
dec
xor
add
jne
cmc
je
mov
jecxz
scas
dec
xchg
mov
cwtl
jnp
xlat
sub
ja
stc
jmp
push
adc
xchg
mov
mov
adcb
mov
lret
pop
outsb
add
push
push
sbb
xchg
cltd
lods
bound
mov
lret
out
push
sub
sbb
mov
ror
pushf
outsl
jmp
stos
and
inc
add
jge
or
call
imul
jp
out
mov
xor
xchg
rorb
jnp
out
sub
stos
cmc
loop
jns
push
fdivrl
jg
std
test
lret
mov
xchg
gs
out
mov
ljmp
mov
push
test
xor
imul
fidivs
xorb
mov
leave
mov
insb
inc
in
jb
xchg
mov
std
inc
shrb
jg
xlat
lods
gs
add
aas
sub
dec
fidivs
or
dec
fmull
mov
mov
jns
pop
iret
push
stc
sub
jmp
mov
clc
jnp
dec
and
jnp
cmovge
lock
out
fxch
cmp
es
or
in
dec
cmc
pop
jno
push
jbe
jg
imul
jne
cwtl
test
gs
lods
dec
mov
xchg
in
push
mov
xchg
stos
mov
lds
sub
xor
lock
aas
xor
aam
cmp
loopne
jns
xor
in
sbb
mov
aas
cmc
call
test
insl
dec
lock
or
iret
pop
addr16
cs
pop
or
cs
xchg
dec
dec
dec
popf
mov
pop
jns
inc
jmp
inc
movsl
push
push
add
fs
popa
adc
xchg
call
dec
mov
pop
dec
repz
or
jns
pop
xorb
mov
leave
jnp
sbb
mov
jae
frstor
in
push
lock
out
push
test
sub
in
sub
enter
or
mov
sub
jmp
sbb
jae
rcr
mov
jno
addr16
inc
mov
sub
data16
out
test
lcall
push
imul
incb
lods
fisubs
lret
cltd
dec
cmp
xchg
rclb
mov
shr
push
xchg
lret
fisttps
sub
arpl
jnp
lock
into
bnd
cmp
stos
cmp
add
adc
or
stos
cli
mov
fnstsw
imul
jmp
dec
pop
mov
aas
shrl
mov
sbb
xchg
jp
cwtl
pop
icebp
lcall
mov
jo
sub
inc
in
arpl
icebp
test
aaa
bound
in
movsl
jne,pt
mov
xor
je
repnz
mov
or
pop
lea
push
fwait
cld
fnstcw
popf
or
inc
push
or
testl
adcb
data16
push
fadd
xchg
mov
dec
sbb
xchg
dec
push
xchg
int3
aam
fisttpl
xchg
mov
call
pushf
addr16
lock
pop
sub
out
push
mov
pop
cmpsb
insl
js
sarl
inc
lea
cwtl
popf
cmpl
mov
push
hlt
stos
sub
out
ret
jl
mov
sbb
mov
cmp
mov
mov
stos
je
cltd
shr
test
shl
pop
mov
cmp
int3
roll
pop
xchg
insb
cmp
cmp
inc
add
fisubl
jbe
push
aaa
inc
cmp
fcmovnu
scas
mov
fisubrl
sbb
mov
jb
pusha
test
xor
bound
pop
inc
sub
imul
xchg
sahf
cmp
das
insl
jne
in
push
cmpsl
adc
mov
sub
mov
mov
ljmp
inc
xor
icebp
jno
add
and
push
movsl
js
roll
test
incl
jge
out
fimuls
mov
inc
andl
bound
out
aam
je
mov
mov
loope
arpl
outsl
and
fwait
push
jbe
insl
fists
inc
mov
cmc
scas
push
dec
xchg
repnz
jge
jp
inc
push
das
xchg
and
pop
addr16
mov
rclb
lret
sub
pop
cmp
jmp
inc
adc
dec
sbb
std
xor
dec
ret
inc
sub
fcomps
lret
pop
mov
lahf
es
mov
dec
sbb
mov
add
lret
scas
xchg
test
jl
bound
faddl
pop
xchg
into
mov
mov
dec
adc
xor
cmp
push
mov
movsb
adc
imul
sarb
ljmp
call
sub
mov
ds
cmp
add
mov
add
jne
cltd
mov
jnp
mov
in
mov
mov
xchg
adc
rcrl
mov
bound
fists
sub
iret
in
cmp
sbb
jge
test
mov
adc
insb
je
lods
cwtl
push
fstps
push
notl
push
inc
ljmp
jp
jg
xchg
aad
mov
daa
jb
loopne
xlat
jecxz
jg
fdivs
fisubl
imul
idivb
add
out
jb
test
adc
pop
cmpsb
pop
xchg
decl
mov
ljmp
int3
adc
jecxz
inc
adc
push
call
lods
jns
sarb
rorl
nop
in
jns
mov
mov
sub
int
add
jns
je
hlt
mov
jg
xchg
xchg
popf
es
ss
int
mov
sub
xchg
mov
cmpb
jae
and
lcall
fs
mov
movsl
adcl
cmp
or
pushl
sbb
mov
sub
iret
jns
xor
imul
addps
sub
bound
xor
dec
xchg
adc
xchg
jno
hlt
xchg
lahf
jo
je
mov
ja
mov
mov
sbb
or
mov
inc
add
popf
mov
dec
dec
cwtl
push
inc
jne
imul
sbb
adc
fmul
repnz
in
jp
loop
movsb
mov
push
sbb
test
cltd
lea
lea
mov
cltd
out
mov
pop
pop
loopne
shrl
pop
test
or
movsb
cs
out
lahf
lock
into
pop
xor
cmp
andl
inc
add
xchg
inc
data16
mov
xchg
shrl
or
test
pushw
lret
mov
mov
clc
push
in
sub
dec
or
jb
loope
jno
insb
mov
push
sar
and
jns
add
jne
ds
mov
adc
push
adc
lds
cmp
jecxz
jecxz
xchg
jle
rcrl
push
add
sub
lods
mov
sarb
andl
push
cmp
mov
cwtl
imul
testb
dec
adc
cmpsl
jp
xchg
clc
xchg
inc
pushf
xor
mov
jmp
xorb
and
orw
and
insl
dec
enter
cmp
inc
pop
dec
dec
jl
xor
sti
mov
or
mov
ja
loop
dec
add
mov
mov
loopne
xlat
pop
lock
inc
jb
xchg
sbb
dec
popa
lahf
xchg
ljmp
fsubrl
push
push
mov
aaa
mov
push
das
mov
int
adc
call
mov
jg
lods
inc
cmpsl
pop
aas
dec
pop
cmpsb
shlb
test
mov
add
hlt
fcoml
bound
imulb
fwait
jecxz
pushf
scas
mov
fcmove
mov
jns
test
movsb
scas
int
jmp
sub
mov
clc
enter
jp
or
and
xorb
subb
mov
rcl
popa
fmull
or
pop
mov
sub
jns
xchg
mov
sbbl
push
xor
std
out
mov
mov
repnz
icebp
sbb
popf
jg
sbb
in
std
leave
rolb
mov
sub
mov
loop
in
cmp
int
insb
lock
cltd
cli
add
xchg
mov
outsb
pop
movsb
jle
inc
sbb
sub
cmpsl
sbb
sub
pop
sub
out
testl
aaa
cmp
cmc
sub
daa
fldenv
insb
jg
push
mov
jge
lahf
in
movsb
mov
or
push
mov
and
mov
xor
cmp
jg
add
mov
ds
push
lahf
inc
cmpsb
ficomps
mov
rcll
add
imul
leave
filds
idivb
jge
int
in
jae
sahf
hlt
cmpsb
imul
xchg
out
dec
cwtl
sbb
lahf
test
mov
pop
mov
dec
fisubrl
jmp
loop
rcr
cltd
xorb
fcmovbe
test
push
and
and
mov
mov
imul
push
std
scas
imul
ss
das
test
jb
pop
mov
jle
loope
call
xor
negl
fcmovnu
lcall
xorl
or
xchg
pusha
dec
xchg
shr
inc
add
cmp
stos
loop
xchg
hlt
xor
sbb
sahf
decl
mov
out
fimuls
in
adc
xor
stos
movsb
jl
and
adc
ss
insb
rorl
arpl
movsl
test
and
or
xchg
lds
xor
push
inc
or
mov
xlat
inc
outsl
movsb
dec
movsl
clc
sbb
adc
adc
xor
jecxz
sbb
test
push
popl
into
test
mov
sbb
sub
mov
jg
mov
pusha
add
dec
cmp
insl
out
out
je
out
jp
fnstcw
jg
or
imul
subl
das
sub
out
jle
aam
arpl
imul
xor
sub
mov
das
or
add
push
sbb
mov
scas
or
insl
dec
hlt
sahf
jecxz
jns
test
insl
les
loop
out
mov
data16
insb
stos
imul
push
mov
pop
addr16
stos
xchg
inc
sbb
cmpsb
andb
jns
mov
jge
and
into
sbb
push
inc
cmpsb
mov
pop
icebp
mov
negl
mov
xorl
les
into
and
jno
inc
xchg
jne
stos
adc
mov
das
fimull
inc
cmpsb
call
nop
jne
mov
lret
push
in
test
jecxz
cmp
fnstsw
add
jle
push
mov
and
push
das
in
lret
pop
jne
loope
jl
gs
jno
pusha
popa
xor
faddl
mov
shll
dec
scas
ja
dec
pop
and
mov
lods
sahf
clc
icebp
addr16
clc
xchg
sbb
add
lcall
pop
cmpsl
pop
adc
xchg
xor
or
add
repz
imul
jae
adc
dec
in
out
dec
addb
stc
xchg
pop
push
dec
mov
push
or
mov
pop
sbb
sub
pop
sti
jne
adc
xor
sbb
xor
add
je
mov
mov
aam
mov
inc
push
mov
mov
test
jne
insb
push
mov
stos
jmp
sbb
in
jle
pop
mov
cltd
jecxz
cld
sbbb
sbb
inc
fistpll
fcom
sahf
cmpsb
test
repnz
mov
dec
xchg
sub
and
loopne
movsl
mov
pop
test
sbb
add
movsl
adc
xchg
xor
add
adc
sti
xor
les
sub
insl
loope
cmp
imul
leave
stos
scas
jecxz
sbb
cmp
ss
fsubrs
popf
lock
cltd
push
loop
int3
ja
leave
in
inc
enter
in
std
push
test
mov
insb
mov
xchg
dec
lock
insl
dec
mov
inc
add
int3
mov
jp
in
and
pop
cmp
aam
dec
inc
sti
lret
cmp
fiadds
mov
rorb
jno
xchg
test
jne
dec
into
stos
leave
movsl
xor
sub
es
push
pop
sahf
mov
inc
xchg
push
rcl
loop
inc
arpl
inc
sbb
cltd
adc
jb
fidivl
cmp
cmpsb
bound
mov
pop
dec
xlat
sbb
insb
ret
lahf
mov
pop
jl
clc
xchg
or
cmc
movsl
sub
mov
cmpb
pop
in
xchg
mov
enter
popf
pop
push
aas
adc
test
push
jae
je
loope
push
gs
shlb
pop
cmp
dec
test
mov
xchg
inc
pusha
andl
pushf
or
jns
and
int3
aas
in
outsb
sti
push
movsl
insl
pop
cmp
pop
lods
daa
pop
sbb
mov
jns
jbe
xchg
idiv
addb
sarl
sub
in
fdivrl
mov
jecxz
xchg
movsb
ja
cmp
cli
sub
filds
punpckhwd
test
cmp
leave
dec
fwait
scas
sbb
in
xchg
es
pop
mov
sub
sahf
xchg
ljmp
cmp
xor
jnp
mov
add
jae
fxch
ret
pop
xor
loop
or
inc
xchg
shll
negl
aaa
xchg
dec
push
add
stos
push
xor
lret
ret
or
bnd
push
jle
mov
lret
movsl
xor
mov
outsb
push
pop
fwait
push
data16
les
and
jnp
lret
mov
mov
ret
cmp
add
dec
xor
sub
inc
mov
test
or
jmp
xchg
shr
mov
mull
test
push
mov
outsb
movsb
xchg
xor
in
faddp
mov
mov
into
cmp
xor
inc
dec
pop
dec
sti
gs
movsb
mov
ja
and
xlat
pop
sbb
mov
mulb
lret
mov
out
pop
dec
popa
sahf
out
mov
pushf
adc
test
xchg
mov
mov
lret
dec
push
ret
jmp
mov
pop
je
mov
inc
lret
sub
mov
loopne
push
shrl
fcmove
lcall
mov
mov
add
ss
cli
dec
push
shll
sarl
adc
mov
adc
nop
cmp
xor
in
push
xor
cld
push
cli
cmpsb
lret
pop
ret
or
inc
sub
lahf
push
inc
push
mov
lret
push
pop
push
call
outsl
push
or
inc
mulb
notb
dec
popa
push
addl
cmpsl
std
fldl
loopne
add
int3
loopne
out
jo
jmp
dec
std
mov
xchg
jecxz
arpl
idivb
bnd
clc
cmpsl
mov
aad
rclb
repnz
mov
int3
sbb
inc
sbb
js
inc
pop
lahf
ficoml
inc
out
test
out
sbb
and
sbb
jmp
imul
adc
inc
sti
les
jnp
lret
add
lret
ja
cltd
lods
jb
sub
addb
sub
sahf
cld
mov
jns
jne
jae
flds
std
adc
and
mov
aas
jb
sahf
test
cmpl
push
add
fadds
out
jecxz
xchg
mov
inc
push
xchg
xor
orl
loope
cs
xchg
jge
addr16
mov
xchg
jg
rcll
mov
outsb
jne
stos
or
xchg
xor
jnp
test
inc
sub
inc
imul
test
inc
fsubrs
cmpsl
mov
scas
in
xorl
ljmp
xor
fwait
loopne
out
jnp
push
dec
mov
mov
mov
arpl
xchg
pop
shll
and
mov
sbb
mov
dec
jg
rcrb
insb
insb
sbb
sub
outsb
cld
mov
popa
mov
neg
gs
lret
dec
sbbb
popa
jae
das
sbb
lds
test
sarl
test
popf
jp
inc
dec
loope
mov
sub
loope
push
popa
loop
jle
push
mov
sahf
xchg
sub
xor
ljmp
sub
mov
scas
mov
inc
jmp
cld
xor
xor
xor
add
mov
into
mov
push
testb
adc
xor
sub
mov
xor
mov
push
xor
mov
xor
sbb
xchg
push
repnz
dec
shrl
push
pop
js
fcomps
out
xorl
push
jnp
mov
jo
jmp
negl
push
push
pop
or
js
push
mov
cwtl
ljmp
lcall
lods
adc
and
int
dec
or
and
sub
mov
scas
imul
gs
pushf
push
and
dec
ljmpw
outsl
cs
lret
cmp
push
mov
test
fldenv
push
xchg
rol
jbe
cmp
pop
pop
jbe
fisubrl
mov
mov
push
cmpsl
mov
sbb
xor
stos
pop
or
cmp
outsl
push
inc
cmp
gs
lds
add
dec
stc
rclb
in
push
sub
insl
and
pop
imul
ds
dec
mov
xor
dec
xor
pop
arpl
xor
dec
fnstcw
cmc
or
fcmovnu
adc
into
sub
scas
addb
pop
in
sahf
icebp
ds
gs
bound
jo
or
add
sbb
cmp
andl
daa
pushf
xor
push
fidivl
xor
stos
addr16
pop
imul
and
pop
lods
inc
jge
lret
mov
cmp
inc
jecxz
sub
pop
or
xchg
dec
cmpsl
and
int
xchg
leave
repnz
jg
leave
xchg
dec
mov
cltd
sbb
stos
imul
mov
xchg
jnp
inc
mov
push
ss
jno
call
mov
xchg
or
or
or
cmp
lods
popf
and
int
xor
gs
fidivs
xchg
mov
lods
fmull
xchg
clc
imul
test
jnp
lock
leave
fwait
mul
notl
scas
sahf
mov
dec
movb
jb
xchg
decl
xchg
aaa
add
popf
pop
inc
sub
adc
inc
push
adcb
ret
into
sub
test
sbbl
cld
dec
jmp
inc
out
jo
push
sbb
aas
lret
xor
out
lret
xchg
xchg
js
xchg
in
mov
sub
daa
sub
aas
inc
repnz
xchg
mov
shr
imul
add
sqrtps
out
jae
rcrl
mov
xchg
mov
jg
xor
data16
push
fisubrs
jl
jnp
jo
or
inc
paddq
cmp
push
mov
stos
in
in
push
lods
aas
cmp
jle,pt
push
jmp
inc
mov
sub
mov
adc
lock
sbb
test
leave
in
cld
or
xchg
mov
into
jl
pop
or
imul
lock
clc
mov
mov
add
pop
pop
jns
hlt
in
jge
mov
iret
and
jnp
test
sub
inc
lret
push
gs
loop
lods
dec
les
or
insl
sahf
mov
fnstcw
imul
popf
cltd
je
push
push
je
enter
mov
test
filds
test
aas
ds
ret
out
and
push
dec
push
scas
es
pop
stos
lods
mov
mov
rcrl
inc
in
into
imul
test
imul
sub
add
in
mov
loope
loopne
int3
repz
and
inc
inc
xor
adc
mov
popa
clc
lods
fwait
popa
mov
push
sbb
and
and
stos
xchg
and
in
mov
cli
mov
add
sbb
test
mull
jge
add
sahf
je
orl
roll
mov
sbb
dec
cmp
outsl
int
push
xchg
mov
fidivrl
push
mov
or
dec
inc
sub
cwtl
mov
and
in
addl
jb
jno
fs
fucomi
jecxz
loop
imul
dec
cld
or
cmpsl
sub
lds
sbb
pop
cmpsb
inc
xchg
dec
ss
jp
imul
int
xchg
xchg
jo
aaa
jp
loopne
adc
sbb
test
add
mov
jno
and
mov
mov
dec
imul
sub
add
bound
lock
dec
jge
pop
mov
enter
mov
scas
sbb
and
outsb
ja
in
aaa
loope
cltd
pushf
jo
adc
mov
lods
push
loop
je
cmp
pop
jmp
mov
fstl
mov
mov
ja
xor
fistpll
fstps
cmp
dec
mov
je
mov
sahf
fadd
pop
mov
and
decb
pop
mov
xchg
arpl
ja
and
jae
pop
fs
in
fwait
imul
repz
in
pop
test
loop
popa
xchg
push
cs
xchg
bound
and
mov
adc
fisttps
jno
xlat
xchg
mov
outsb
pop
sub
jmp
pop
cld
test
jnp
mov
or
add
or
adc
or
push
add
movsb
aad
lahf
cmpsb
xchg
add
popa
push
mov
in
pusha
fmull
adcl
loope
loop
test
add
cmpsb
lcall
jbe
rcl
jecxz
movsb
jp
aam
jno
jmp
dec
movsl
cs
aaa
loopne
push
cmp
imul
mov
div
xor
and
jmp
pushf
inc
xor
mov
jmp
sti
mov
xchg
inc
pusha
jbe
adc
insb
jnp
xor
dec
cmpsl
cmpsb
xor
hlt
outsb
test
imul
mov
in
setae
mov
or
call
push
mov
imul
push
lcall
jg
mov
and
push
ja
popf
inc
cmp
mov
xchg
and
fdivr
out
out
idiv
lcall
inc
fs
jnp
xchg
cmpsb
jnp
in
mov
faddl
scas
push
mov
fwait
cwtl
loope
shll
dec
ret
mov
xchg
push
out
xchg
push
jnp
mov
nop
lahf
dec
out
incl
jae
xor
inc
jge
mov
frstor
mov
pop
enter
orb
insb
in
xchg
inc
fistpll
mov
addr16
lods
or
int
loopne
inc
and
fiadds
pop
mov
xor
jne
inc
add
shlb
adcl
outsb
adc
fstps
loope
fsubrl
pop
sbb
out
call
in
jmp
aad
push
or
dec
rolb
pusha
xchg
das
inc
rol
iret
add
aad
xchg
icebp
out
fsubs
push
clc
adc
xorb
ret
lea
mov
jns
mov
insl
mov
cmove
or
ret
bnd
cmp
and
and
and
icebp
popa
pop
int
jno
pop
lods
into
cmp
aad
fsubr
xchg
pop
mov
mov
in
jno
in
cmpsb
push
dec
jae
iret
add
mov
pusha
sub
mov
call
jge
inc
lods
bnd
xchg
xchg
enter
test
cmp
cmc
leave
mov
andl
add
popa
movsl
leave
xchg
ja
xchg
sbbb
mov
push
mov
arpl
test
cmpsb
jb
ja
out
mov
jecxz
jmp
arpl
dec
sbb
inc
dec
inc
scas
clc
push
out
jnp
mov
jae
xor
test
mov
or
fnstsw
fs
andl
pop
popf
mov
mov
pop
ret
xchg
stos
mov
add
test
outsl
imul
push
rcrl
jbe
and
jo
xor
les
push
xchg
mov
mov
das
std
or
or
sbb
cmp
dec
jb
jbe
xchg
fcmove
push
aas
repnz
inc
ss
enter
clc
leave
sbb
sbb
push
mov
xchg
mov
mov
mov
stc
or
and
mov
adc
sub
jle
imul
sub
or
jne
adc
mov
push
ret
mov
or
orl
and
ficoms
mov
jns
xchg
mov
out
leave
mov
lcall
push
pop
pop
or
sub
jmp
ret
mov
adc
je
std
cltd
mov
call
pop
sub
pop
cmp
negb
cli
les
test
mov
popf
dec
je
sbb
mov
pop
cmp
cmp
xor
mov
arpl
popa
stos
dec
pop
ljmp
pop
jp
in
int3
loopne
in
add
push
pop
mov
rolb
cmpsl
jmp
mov
xor
pop
sub
mov
popa
lods
pop
jg
push
or
mov
xor
cs
sub
dec
xor
xchg
sbb
push
lcall
push
push
lahf
jmp
arpl
jno
aas
aas
imul
push
mov
push
loope
cmp
aaa
test
fcoms
mov
les
inc
cmp
xor
in
daa
jmp
ret
pop
insl
xlat
ljmp
pop
int3
insb
lcall
sub
or
pop
pop
mov
fsubrs
push
inc
in
xor
shrb
cmc
xor
cmp
test
pop
push
scas
cmp
dec
xor
js
or
test
xchg
sbb
outsl
jl
xchg
call
mov
sub
sarl
mov
lret
xchg
ja
frstor
push
mov
sbbb
pushf
dec
sub
outsb
in
loopne
imul
icebp
addr16
inc
inc
into
dec
lcall
out
push
loopne
mov
inc
scas
pop
scas
sbbl
gs
pop
push
fwait
sbb
test
cmpsb
mov
scas
fmuls
sbb
mov
inc
das
sti
sub
pop
pop
jae
mov
loope
ret
jge
mov
mov
ret
into
fdivl
sahf
jle
in
loop
outsl
jl
test
cs
addr16
ret
hlt
shl
mov
push
adc
xchg
mov
inc
sub
xor
cltd
mov
aam
inc
pop
push
pusha
xor
mov
fidivrs
outsb
inc
cmp
mov
pop
xlat
lea
ds
inc
mov
fists
xchg
sub
ja
decb
dec
jae
cmp
add
cltd
rorb
dec
mov
or
adc
and
in
notb
jno
mov
dec
in
mov
sti
cmc
test
ret
xor
lds
das
icebp
push
and
repz
insb
mov
cmp
push
cli
in
inc
jb
push
add
rorb
or
mov
push
leave
sbbl
jo
fisubl
jne
aaa
sti
insb
rclb
mov
jb
xor
sub
out
xlat
mov
clc
push
xlat
jno
hlt
lods
fcmovnb
mov
pop
stos
popf
mov
cmc
in
dec
cmp
popf
imul
mov
sarl
pop
test
xchg
add
sub
mov
loope
inc
cmp
jge
mov
mov
jbe
ret
mov
cmp
lret
cmp
in
mov
inc
bound
mov
movsb
pop
push
cli
lods
pop
push
xchg
add
inc
pop
and
jle
sti
gs
mov
add
incb
lock
mov
add
sub
mov
jb
jecxz
sarb
pushl
mov
mov
fcmove
pop
call
push
jnp
hlt
aad
push
and
xor
jno
xor
in
jge
push
xchg
jb
out
mov
cmp
xor
cmpl
dec
push
push
subl
lds
sbb
pop
push
outsl
xor
or
inc
in
xor
adc
movsl
mov
into
jg
sbb
insl
jo
idiv
sub
xor
xchg
not
and
xor
xchg
pop
pop
mov
pusha
leave
lret
aad
jle
aam
lods
out
mov
mov
mov
in
xorb
sbb
xor
ffree
data16
xor
xchg
cmc
add
clc
xor
push
fsubr
xor
jge
inc
push
mov
int3
movsb
imul
fimuls
jge
into
insb
stos
fs
and
ja
add
fildll
adc
dec
push
or
jb
xchg
adc
jb
mov
outsb
js
iret
in
je
xor
lcall
mov
push
or
add
mov
pusha
cs
push
sub
lods
sub
or
pop
bound
mov
stc
push
mov
jg
iret
dec
shll
cld
test
pop
jl
idivb
out
push
pop
popa
sub
xchg
test
repz
or
push
jnp
xlat
xchg
or
pop
insb
or
lret
sub
cwtl
in
dec
mov
inc
std
rorb
add
fldl
out
cltd
add
ss
add
popf
enter
push
mov
xchg
or
ficoml
dec
ficomps
mov
mov
cmp
xor
adc
lods
jno
fisubs
addr16
sub
xor
pop
mov
nop
sbb
das
mov
pusha
out
ret
cmp
das
mov
mov
or
aas
out
movsl
inc
add
lods
mov
cmc
or
mov
dec
in
adc
cli
push
lcall
gs
mov
je
pop
cmp
sub
xor
int
and
sbb
andb
fsts
fisubrl
jnp
mov
add
lcall
sub
mov
sti
outsl
fcmovb
lret
popf
add
mov
push
cltd
addr16
sub
inc
adc
sar
inc
jns
test
xchg
lods
xchg
xchg
jecxz
loope
sti
call
dec
xor
inc
les
fiaddl
jg
sub
sub
add
inc
xlat
cmp
push
stc
sub
sahf
int
leave
mov
ffree
cmpsb
into
popa
or
cmp
test
arpl
sarb
and
out
fistpl
push
inc
fwait
daa
ljmp
jg
push
shlb
mov
dec
inc
pop
xor
scas
push
mov
fmul
test
push
loopne
mov
test
imul
in
out
push
mov
mov
push
xor
inc
inc
cmp
inc
pop
stc
es
xchg
pushf
popf
jae
xchg
adc
ret
es
sub
xchg
rorl
adc
sub
cmpsl
or
fldt
into
sbb
xchg
push
loopne
xor
cmpl
outsl
jg
and
inc
adc
stos
ljmp
insl
jmp
xor
andb
aaa
fiaddl
nop
mov
push
repz
inc
mov
out
jb
insl
inc
ja
cltd
and
test
jns
shlb
cltd
mov
into
jb
jne
leave
sbb
cmc
add
xchg
stos
adc
pop
dec
mov
das
pop
movsb
mov
mov
and
lahf
dec
imul
ror
cmp
ljmp
das
inc
cs
jo
rcll
into
or
pop
push
fcomps
jb
sub
dec
fistpll
dec
in
adc
jnp
cs
mov
cltd
repz
xor
fcmovne
xor
xor
cmp
cmp
iret
mov
mov
mov
imul
in
out
mov
rcrb
jno
mov
test
xlat
aam
mov
sti
leave
cltd
jmp
adc
lret
pop
sub
mov
dec
in
sbb
out
mov
popf
pop
clc
cs
sbb
bound
aas
xchg
out
or
in
loope
clc
test
in
xor
push
and
test
xor
out
nop
xor
test
loope
sub
xor
mov
test
mov
test
jnp
push
pop
repnz
aaa
fisttpll
sahf
sbb
cmp
mov
dec
xchg
in
sbb
adc
mov
es
test
jmp
push
jbe
jo
or
pop
and
pop
xchg
jle
test
mov
sbb
and
xlat
cs
movb
pop
xchg
out
add
inc
sub
xlat
js
dec
and
jl
int
leave
inc
imul
arpl
mov
mov
and
push
adc
mov
pop
sub
lret
clc
mulb
sub
pop
ss
ljmp
stos
mov
or
xchg
into
pop
pushl
xchg
lret
pop
loopne
jp
push
sbb
sbb
cmp
mov
dec
fwait
or
lds
adc
lods
and
fld1
aaa
loopne
cmp
movsl
icebp
mov
jmp
ss
movsb
jmp
mov
aas
out
loop
mov
jge
mov
jns
sbb
je
mov
cmp
repnz
test
mov
adc
lcall
xchg
xchg
popa
push
clc
mov
push
gs
orb
push
jge
loop
sbb
jo
lret
xchg
in
dec
push
jg
cmp
imul
jb
mov
add
mov
mov
or
fwait
or
insl
scas
or
sub
push
loopne
test
jmp
jmp
fwait
or
mov
imul
dec
js
shrb
mov
fmulp
lahf
mov
cmp
or
insl
add
push
out
sub
xchg
and
sub
and
sbb
ljmp
push
xor
sbb
sbb
icebp
or
stos
lret
inc
fidivrs
fwait
mov
sub
imul
jg
mov
lods
das
clc
stos
xchg
adc
mov
iret
sbb
out
scas
lahf
inc
push
pushf
inc
xchg
mov
mov
std
pusha
imul
ficoms
fcmovnbe
aas
pop
mov
jne
or
sub
loop
shl
js
les
xor
loope
xchg
das
xchg
cmp
in
out
arpl
cmp
mov
in
xor
insl
arpl
les
decl
xor
mov
hlt
lds
mulb
movsb
mov
pop
popf
push
ficoml
stos
imul
lret
inc
mov
pop
or
icebp
lahf
shlb
xchg
shrl
add
repnz
pop
add
cwtl
jg
icebp
imul
fwait
dec
push
mov
ficomps
xchg
insb
test
insb
rcrl
fnsave
jb
xchg
mov
xchg
inc
and
addr16
mov
mov
dec
stc
call
int
xchg
mov
push
jge
add
xchg
js
sub
add
adc
cwtl
aad
or
inc
hlt
adc
push
adc
dec
mov
xchg
xchg
push
xchg
xor
mov
insb
jbe
icebp
mov
xchg
dec
push
mov
mov
test
and
pusha
fbstp
int
pop
dec
push
lahf
push
mov
cmp
idiv
sbb
add
push
pop
aad
in
jle
mov
jae
or
xchg
cs
xchg
inc
dec
cld
sbb
lds
stos
pushf
loop
call
cmp
pop
lret
fnstenv
loope
add
mov
sub
ret
mov
cmpsl
das
int
xchg
leave
push
ret
nop
pop
outsb
cwtl
pop
jecxz
mov
jo
push
stos
fsubr
inc
xchg
les
and
divb
icebp
cli
mov
shlb
pop
insl
das
std
push
js
popf
enter
add
xchg
jae
cmpsl
sub
jno
xor
and
cwtl
divb
movsb
adc
imul
sahf
insb
stos
in
mov
sub
jbe
insl
lcall
ja
or
ljmp
inc
outsl
or
xchg
jg
gs
sahf
xlat
jp
sub
lock
pop
cmc
inc
adcl
insb
shll
adc
ljmp
and
push
pop
xchg
pop
mov
lds
sbb
fs
xchg
ret
inc
mov
jge
push
out
mov
mov
movsl
loope
in
mov
mov
inc
sti
daa
mov
sub
jne
js
fmul
hlt
and
ret
add
mov
inc
cmc
xchg
inc
mov
xor
jo,pt
repz
dec
mov
xchg
loopne
xlat
jno
mov
insb
push
insb
and
outsb
leave
lea
inc
stos
inc
mov
sub
xor
das
lods
lea
cli
cmp
or
adc
mov
push
sahf
jne
jge
cmpsb
addb
aad
xor
leave
shlb
xlat
out
pop
cltd
fistps
pop
jg
push
arpl
inc
in
testl
hlt
in
popf
lods
pop
sti
sub
mov
pop
ja
inc
nop
push
stc
xor
xchg
adc
arpl
adcb
adc
movsl
mov
dec
xchg
inc
xchg
cltd
repnz
sbb
bound
jmp
lret
add
push
xor
pop
add
mov
jp
mov
mov
inc
sub
xchg
lods
xor
sbb
lret
mov
jge
enter
push
jnp
add
pop
mov
loopne
xlat
insl
test
push
push
imul
jge
adc
sub
loopne
mov
mov
mov
mov
mov
mov
xchg
adc
push
shrd
divb
iret
jge
jb
add
jecxz
int3
sbb
cltd
jge
pop
jle
imul
lods
mov
add
in
cwtl
pop
jp
cmpsl
decl
mov
fcmovnu
scas
lahf
xchg
sub
ss
mov
sbb
inc
cmp
xor
mov
dec
xchg
aad
clc
xor
popa
imul
jg
xchg
lods
test
mov
lahf
mov
in
sahf
fadds
jg
mov
sbb
mov
mov
sub
rclb
dec
ret
inc
mov
xchg
mov
jbe
lret
outsl
cmp
dec
hlt
xchg
cs
cmp
movsb
xor
das
push
popa
lcall
aas
scas
movsl
insl
test
mov
enter
lds
inc
int3
sub
aaa
mov
jge
pop
cmc
cld
cwtl
inc
inc
lret
fnstsw
sub
jp
cmp
jno
push
das
gs
lret
movsl
adc
lds
aaa
dec
adc
enter
xor
adc
push
out
scas
jecxz
push
jbe
jg
pop
pop
mov
sub
xchg
call
ss
jp
or
inc
mov
or
cmc
cltd
outsl
inc
ret
xchg
mov
cltd
jno
cmp
popf
pop
cmp
lock
gs
lret
cmp
jl
pop
mov
and
shl
addr16
mov
xchg
les
xchg
and
js
fld
enter
push
sbb
pop
sbb
pop
mov
mov
scas
sub
sub
jmp
push
dec
movsb
mov
lds
add
fisubrs
test
xchg
mov
push
push
mov
add
push
add
push
sbb
ds
cld
cmp
jb
int
stos
jae
ret
es
cs
cmc
arpl
int
or
lret
push
sbb
stc
xchg
cmp
jp
in
sub
cmpsl
xor
es
sbb
fimuls
stos
std
sbbb
pusha
sbb
cmp
push
pop
inc
xchg
hlt
das
or
pop
pushf
movsb
mov
loop
pop
push
mov
sbb
je
data16
or
cld
fldcw
hlt
xor
jecxz
cmp
mov
sbb
sub
mov
mov
inc
rorb
mov
test
xor
sub
daa
mov
mov
xor
andl
pop
mov
jo
cli
popf
sahf
dec
push
inc
and
js
push
or
jmp
insl
cmp
pop
jae
push
imul
mov
jbe
mov
pop
shll
repnz
sub
and
sarl
mov
shll
sub
pusha
dec
adc
dec
lret
nop
cs
insb
fcmove
adc
aam
loopne
test
adc
sbbl
js
pop
pop
xchg
jle
or
pop
cmp
jmp
add
in
pushf
dec
mov
bound
addb
popf
jmp
push
jecxz
movsb
xor
dec
fs
cld
xchg
es
mov
xchg
add
jl
mov
jmp
adc
test
in
push
ja
jo
daa
or
push
cmp
or
test
aam
lock
cld
outsb
inc
xchg
movsb
in
xchg
xchg
jno
test
mov
cmc
bound
popa
out
jb
nop
push
or
subl
inc
xchg
mov
inc
cmp
sti
mov
xchg
pop
or
lea
xor
nop
xchg
push
dec
cmpsb
cmpsl
lds
fwait
fs
adc
jns
dec
xchg
mov
push
scas
jbe
in
mov
inc
ror
push
mov
xchg
xor
sbb
xor
inc
mov
out
sbb
mov
push
int3
xchg
je
repnz
dec
mov
or
sbb
popf
icebp
pusha
je
loopne
fiadds
push
stos
adc
or
mov
jp
imul
jecxz
pop
mov
mov
cmp
in
lods
jp
jmp
stos
ficoml
fdivs
imul
fwait
pop
or
js
aas
aas
xchg
loope
push
sub
jo
sbb
xchg
loopne
or
mov
loopne
addr16
xlat
cld
jbe
add
arpl
pop
repnz
add
fcmovbe
push
aad
jecxz
fcmovne
and
push
stos
mov
cmpsl
popf
loopne
cmp
hlt
hlt
sbb
loop
inc
fs
data16
push
dec
or
cwtl
xor
insl
add
js
fisubl
je
sub
arpl
cmp
into
imul
pop
movsb
mov
test
out
add
insl
shlb
or
popa
adcb
and
lock
inc
push
cmp
pop
inc
or
stos
mov
in
fstpl
repz
incl
inc
jecxz
inc
ret
das
inc
mov
stos
loop
mov
xlat
pop
in
push
aas
out
xchg
in
test
cmp
jns
repz
insb
and
cmp
and
int
sub
xchg
add
dec
xor
dec
rcll
mov
jge
push
repz
xlat
fisubrl
sbb
adc
push
in
inc
mov
mov
loop
mov
push
mov
mov
notb
pop
push
jae
push
sub
xchg
jp
mov
lret
cmp
outsl
inc
push
js
data16
sar
arpl
and
test
insl
pusha
das
outsb
xchg
aas
mov
pop
in
ss
cmp
int3
mov
mov
xor
jb
lahf
xchg
lret
fbld
cmc
mov
add
pop
mov
rorl
test
or
inc
pusha
popa
push
cld
dec
lcall
repnz
shl
leave
lods
nop
jg
mov
fsubs
std
loope
cmp
mov
pop
pushf
popf
push
sbb
sub
addr16
mov
popf
fs
ss
je
lds
or
push
in
pusha
pusha
popa
xchg
dec
paddusb
popa
adc
jb
pop
mov
fnstcw
jns
aas
push
mov
aaa
adc
add
notl
and
add
xor
imul
cmp
xchg
push
arpl
mov
mov
fsubl
push
mov
mov
push
lock
loope
faddp
incb
loopne
imul
popf
pop
mov
test
inc
loopne
outsl
test
dec
sbb
pop
testb
pop
into
inc
push
fwait
xchg
arpl
lcall
flds
sub
pop
sbb
adc
fidivs
mov
fnstcw
and
mov
loope
outsl
movsb
lea
xor
sub
inc
pop
aad
mov
push
out
insl
sub
or
jmp
mov
popf
and
xor
push
lea
addr16
inc
mov
lods
bound
icebp
cli
mov
cld
sti
push
jnp
sub
sbb
dec
adc
insl
imul
xor
int
subl
mov
pop
mov
xchg
pusha
push
fistpll
lods
cmp
adc
ret
hlt
sbb
mov
jl
js
cld
mov
mov
loop
cmp
mov
lods
out
push
sbb
pop
cwtl
sbbb
popa
jmp
rclb
movsb
jb
mov
pop
xchg
adc
jb
jne
icebp
imul
mov
in
inc
shll
push
outsb
mov
insl
add
add
in
int
add
cmp
or
inc
aaa
int3
dec
stos
pop
mov
bound
cs
stos
add
jne
pop
test
je
lcall
sbb
and
sbb
or
movsb
push
movsl
jno
cmp
mov
jae
in
ja
cmp
jbe
jo
imul
es
popl
sbb
leave
mov
in
fidivl
sub
push
pop
rorl
scas
decl
adc
popa
push
xchg
in
test
fcoml
dec
xor
daa
fidivrs
movsb
sub
xor
or
das
mov
add
imul
insl
ret
cmpsl
insl
ds
ret
insl
push
jnp
fcompl
pop
lret
cmp
cmp
jp
mov
pop
loop
push
sub
hlt
dec
xchg
add
scas
jle
mov
aas
aaa
jns
call
cmp
pop
xchg
test
push
addr16
out
inc
mov
mov
push
push
mov
decb
mov
jo
ret
addl
bound
fs
call
out
mov
ja
sub
lods
ret
mov
jg
pusha
fiaddl
push
gs
test
xchg
inc
int
sub
loopne
push
mov
mov
jp
fsubrp
out
inc
lcall
sub
jne
mov
mov
mov
mov
push
push
ljmp
in
or
mov
je
pop
dec
jg
push
pop
std
mov
in
and
sbb
mov
lcall
out
imul
jae
pusha
int
jae
jns
outsl
mov
xor
std
mov
xchg
mov
xchg
in
lock
mov
dec
ljmp
sbbl
ret
cmpsb
adcl
xor
pop
ljmp
push
punpcklbw
sbb
mov
inc
sahf
movl
add
sahf
je
adcl
scas
mov
or
aaa
or
pop
cmp
sbb
adc
mov
dec
bnd
jg
fisubrs
push
addr16
psubusw
dec
inc
sbb
in
mov
mov
sarl
push
xchg
inc
loope
inc
in
bound
add
icebp
ss
loop
jnp
aaa
fildll
mov
jl
ljmp
shll
or
mov
push
pop
inc
mov
inc
pop
dec
mulb
aas
mov
sbb
inc
cmpb
sbb
into
fisubs
out
clc
mov
sub
xor
ljmp
in
fisttps
std
mov
mov
mov
es
push
xchg
leave
test
and
test
pop
xchg
dec
jge
inc
add
ljmp
xor
xor
sar
rolb
or
movsb
arpl
aam
lods
or
cli
xchg
dec
dec
ret
repz
in
push
lahf
xor
ja
test
loopne
dec
shrl
data16
or
fsubp
dec
adc
daa
xchg
adc
aas
jae
loopne
inc
xor
dec
mov
ljmp
push
push
int3
rcrb
and
sbb
sbb
insl
jmp
int
daa
stos
hlt
mov
pop
ret
jne
mov
push
iret
leave
push
jo
sahf
jb
ret
xchg
mov
popf
bound
lahf
loope
int
sahf
nop
ret
rorl
aam
jns
jnp
sysexit
daa
sub
sbb
jg
inc
aas
xor
decb
leave
popf
int
inc
ret
fidivs
sbb
jmp
xchg
jmp
cmp
push
mov
mov
out
idivb
stos
inc
sub
popa
sbb
popf
mov
data16
sti
mov
int
sahf
or
sbb
pusha
xchg
jb
mov
lock
pushf
idiv
sub
mov
mov
gs
xchg
repz
ds
mov
pop
repz
pop
pusha
arpl
and
fidivrl
sub
lds
mov
sub
ss
mov
pop
fsubrl
dec
mull
rorl
add
rolb
subb
ss
jg
sbbl
movsl
popa
mov
or
sub
xchg
fmull
outsb
std
jo
out
adc
mov
or
cwtl
or
inc
stc
or
imul
sub
push
adc
add
test
jge
xchg
shll
adc
xchg
inc
stc
mov
xor
jns
mov
push
adc
cmp
pop
add
bound
add
push
xchg
dec
loope
lahf
jle
or
test
mov
jp
popf
inc
pushf
clc
mov
push
push
flds
cmpsl
rolb
ds
xchg
ss
or
dec
pcmpeqd
jno
mov
cmc
mov
jl
dec
push
jl
mov
xchg
daa
data16
sub
cmpsl
cmpsb
popa
mov
mov
push
mov
jp
add
cmc
lock
pop
mov
mov
scas
gs
mov
leave
cmp
inc
loopne
pop
cmpsb
jbe
test
add
and
sub
xchg
add
es
mov
fwait
or
popf
test
fwait
psubusb
mov
orb
gs
popa
push
aad
mov
sbb
xchg
fisubrl
sbb
je
fbld
sbb
mov
idivb
inc
bound
jl
jnp
roll
mov
out
fsub
fadd
scas
std
or
lea
xchg
push
jl
push
jmp
icebp
mov
out
push
dec
mov
add
mov
int3
jg
add
mov
pop
rorl
mov
jne
das
loope
stos
ficomps
mov
mov
mov
or
adc
rcll
ficoml
push
xchg
mov
std
sti
jne
lds
mov
adc
inc
stos
fildll
push
cmp
push
inc
push
mov
or
pusha
mov
sti
notb
dec
push
filds
lahf
lock
xchg
cltd
into
inc
fdivl
dec
add
sub
pop
je
dec
lods
pop
mov
decl
shrl
adc
cmp
mov
mov
inc
sbb
cmc
xchg
test
inc
inc
in
mov
loop
ret
jl
test
gs
jb
mov
sbb
enter
sub
mov
xchg
insb
mov
jmp
push
lcall
xchg
std
cmpsl
andl
int
mov
and
cmp
push
loope
jmp
mov
bound
jg
dec
rorb
add
je
jecxz
jnp
cmp
push
mov
push
jmp
pop
in
mov
push
dec
mov
aas
push
scas
movsb
push
js
adc
sbb
ss
mov
outsb
lods
loope
aaa
rorl
das
pop
mov
inc
push
inc
sub
divb
jg
outsl
jecxz
bnd
stos
mov
add
or
nop
dec
cld
xor
mov
subl
bound
popf
mov
jg
pop
pop
adc
in
je
cmp
lods
dec
mov
jns
bound
loop
jecxz
jno
js
mov
movl
sub
divb
ljmp
mov
dec
movsb
fdivrs
sti
mov
mov
mov
xchg
sbb
mov
sub
ds
jle
xchg
and
addr16
xchg
inc
cltd
stc
movsb
mov
mov
loopne
jbe
sbb
shr
push
mov
mov
adc
add
pop
mov
rcrb
inc
cmp
pop
jecxz
lods
mov
pop
cmp
iret
or
js
neg
mov
push
sub
dec
arpl
jp
std
fbld
push
data16
test
mov
mov
pop
xchg
inc
out
cltd
div
sbbb
hlt
sahf
jge
or
and
and
jbe
les
mov
jae
jo
cmpsl
mov
jb
dec
daa
clc
xlat
loopne
cld
pop
sub
pop
repz
ret
lods
cmp
lods
mov
imul
xchg
iret
xor
out
cltd
das
xorb
stos
jmp
pop
fbld
push
sarl
insb
pop
arpl
cltd
sub
cmpsl
mov
mov
test
fwait
push
out
inc
ss
outsb
xchg
adc
push
xchg
dec
gs
jecxz
inc
sbb
push
jbe
cmpsb
or
les
jns
rclb
jo
mov
shll
inc
and
mov
call
test
push
popa
lods
into
ficoml
jns
cwtl
sbb
rolb
jge
dec
stc
dec
lock
imul
and
fdiv
push
jo
fs
jl
push
mov
xchg
lret
daa
or
inc
sbb
and
jge
mov
pop
or
cmp
scas
dec
outsl
mov
push
push
in
int3
aaa
bound
inc
xchg
dec
add
gs
pop
enter
xchg
jbe
push
lods
nop
test
je
dec
sub
adc
or
push
stos
cmp
and
jmp
mov
jne
push
sub
pop
rolw
xchg
jle
ret
mov
push
sahf
xchg
xchg
pop
lds
es
fidivs
adc
sarb
dec
shll
push
mov
test
add
loopne
adc
lods
daa
out
add
sbb
sub
imul
jmp
xor
mov
sbb
pop
jecxz
test
ds
test
push
fildll
mov
loopne
mov
jp
ret
push
xor
in
outsl
imul
ja
mov
loop
jnp
xchg
in
insb
pop
cltd
xor
loope
in
jns
movsl
cmp
or
fcoml
jb
push
fistps
adc
lahf
idivb
and
lret
les
sahf
insl
jl
sub
sbb
push
pusha
insl
adc
ss
ds
dec
mov
mov
call
int
jmp
mov
dec
cmpb
or
cmp
mov
out
push
sbb
in
jne
sbb
inc
jnp
push
popa
test
fwait
enter
popa
pop
fadds
cmp
lahf
test
js
movsl
addr16
xchg
dec
loopne
mov
mov
out
ret
jle
imul
imul
fwait
or
jns
loop
hlt
inc
and
mov
bnd
in
xchg
into
ret
popf
mov
mov
fnstcw
mov
aaa
fsts
test
jp
jnp
jmp
jp
inc
fdivrs
push
mov
sahf
cmp
mov
add
mov
mov
cwtl
xchg
sahf
enter
cmp
dec
sbb
jle
test
mov
jne
repnz
adc
cmp
and
call
jno
jnp
cmp
daa
out
mov
xlat
jp
test
and
inc
fwait
push
mov
cmpsb
push
jp
fwait
mov
cmc
mov
dec
pop
addr16
cmpsl
std
jmp
fistpll
pop
cmp
ds
add
dec
subl
dec
pushf
imul
push
push
stc
ds
pop
xor
mov
push
fbld
stos
sbbl
and
sub
xor
push
push
rol
call
out
lea
and
jle
add
pop
mov
mov
iret
mov
cltd
xor
adc
mov
xchg
add
dec
or
bound
imul
xor
outsl
js
subb
pusha
xchg
inc
push
jnp
sbb
push
nop
lea
sub
nop
jmp
and
les
mov
xchg
fisubl
loop
add
outsb
dec
out
xchg
minps
mov
push
arpl
idivl
rcll
in
push
repz
bound
fs
dec
mov
leave
addr16
push
insl
cltd
inc
pop
jmp
xorl
mov
mov
lods
fisubrs
jno
lods
scas
subl
ja
gs
push
cld
stos
fidivrs
inc
cmpsl
push
imul
dec
fistl
pop
jecxz
xchg
ljmp
into
push
jae
xchg
lret
decl
jge
sub
dec
mov
rcll
aaa
xchg
test
mov
jge
cmpsl
insb
or
push
or
lret
cmpsb
add
pop
popa
stos
pop
iret
dec
leave
sub
pop
push
fs
int
xor
js
dec
popf
push
xchg
xor
or
sbb
sbb
inc
inc
cmp
cmp
add
jbe
or
sbb
or
jmp
in
addl
or
icebp
pop
emms
pushl
mov
rorb
jl
mov
sub
sub
inc
aaa
adc
cwtl
cltd
mov
mov
cmpb
into
mov
js
mov
mov
xchg
out
inc
pushf
insl
push
test
sub
test
lock
das
add
push
negb
push
lock
inc
fs
push
adc
fstl
or
pop
push
aas
or
xchg
push
push
jns
push
out
lret
xchg
pop
insb
outsl
insl
sbb
repnz
push
scas
mov
jl
jl
ficoms
push
insb
inc
out
cmp
fstpl
push
xchg
sbb
into
dec
cmp
fsubrl
lcall
push
jbe
jns
mov
hlt
dec
dec
scas
adc
xchg
cmp
jg
push
fwait
cwtl
mov
cltd
sbb
pop
stos
movsb
jb
jo
xchg
imul
aas
and
movsl
mov
jae
adc
push
scas
mov
inc
push
and
add
adc
pop
push
sbb
subl
scas
mull
push
mov
push
int
jge
lods
add
mov
data16
and
cmp
imul
in
insb
xor
push
ljmp
mov
adc
push
and
rcrl
stc
jno
jmp
int3
pusha
ret
int3
cld
jbe
sbb
xor
push
les
mov
scas
lahf
dec
mov
shrb
shr
xchg
fidivl
scas
in
cmp
push
movsb
imul
xchg
pop
mov
jmp
jno
mov
loopne
jns
je
fstpt
jp
insb
cmpsl
push
aam
inc
ret
or
sub
and
lcall
lahf
push
popa
jl
add
sub
fcoms
sbb
scas
and
xchg
xor
mov
repnz
mov
jge
mov
mov
jmp
shl
test
out
or
insl
rcrb
push
rolb
lods
int3
loopne
mov
jno
loop
bound
inc
xor
dec
fdivl
outsl
pop
mov
imul
enter
int3
cwtl
out
cmp
adc
rorl
loopne
pusha
in
add
loop
test
fwait
jbe
adc
mov
les
js
xchg
fucomp
xor
loop
pop
mov
xchg
flds
popa
lret
jecxz
or
push
push
jno
lods
xchg
lret
xor
loop
jg
ss
xor
ret
cwtl
cmp
jae
sub
or
test
xor
out
sahf
test
movsl
lods
inc
aas
jecxz
test
imul
cmp
push
push
jae
jns
cwtl
les
fists
imul
xchg
std
shlb
fcoml
out
push
lahf
dec
fbld
mov
loop
test
bound
dec
pop
push
push
movsb
mov
mov
jo
inc
xor
lea
dec
clc
xchg
sbb
mov
shl
and
xor
mov
lea
pushf
out
xor
std
scas
cmc
lods
sbb
cmpsl
mov
addl
sbb
leave
sahf
xor
mov
insb
flds
mov
push
jmp
mov
int3
pusha
addr16
sbbb
sub
push
mov
sti
out
lock
xor
jg
xchg
sub
adc
pop
mov
daa
stos
sbb
jno
add
rclb
leave
xchg
or
fxch
fsts
fisubrl
outsb
cmp
js
popa
pop
adc
dec
test
lahf
push
and
mov
jmp
fldcw
andb
es
mulps
or
rcll
push
aaa
push
push
or
inc
xor
cmp
lods
jge
and
jo
push
cmp
push
test
test
test
mov
xchg
pop
out
fisttps
in
cmp
pop
inc
and
jle
xlat
mov
fstpt
test
mov
mov
rolb
sbb
xlat
fdiv
dec
js
jbe
mov
fstl
sub
loopne
cld
xchg
andb
dec
lcall
imul
or
or
xchg
mov
movsl
pushf
insb
xchg
data16
addl
xchg
pop
mov
xchg
cmp
fists
or
stos
pop
pop
sbb
mov
xor
aam
sbbl
xor
adc
inc
lock
pop
push
mov
jnp
jecxz
jo
and
sahf
jg
push
loopne
mov
sahf
sbb
dec
das
loopne
adc
jmp
orb
adc
cwtl
inc
and
in
fdivs
outsl
and
testl
jbe
jns
jge
pop
movsb
xchg
mov
fisubl
sub
jnp
out
add
jbe
std
mov
cld
out
xchg
mov
push
dec
cmp
out
stc
xchg
pop
mov
ret
cmp
cld
lods
lods
mov
mov
fisubl
mov
cs
nop
dec
fmuls
dec
mov
subb
inc
mov
test
fnstsw
pop
aad
jle
xchg
and
fadds
mov
into
adc
mov
test
jne
xor
adc
imul
rsqrtps
and
xor
pop
out
pusha
leave
jg
xchg
inc
pop
lea
or
push
mov
dec
mov
mov
mov
inc
lods
shlb
idivl
add
add
mov
popa
jno
dec
mov
mov
cwtl
inc
fldt
andw
fwait
rolb
and
sub
in
fiaddl
mov
sbb
pop
cmpsb
gs
call
lret
cli
jg
dec
movsl
aad
mov
xchg
sub
repz
out
iretw
cmp
insl
in
jb
sub
xor
in
or
insl
into
add
out
xchg
pop
lret
hlt
test
movsb
aaa
out
cld
in
xor
in
jno
pop
test
stos
xchg
stos
dec
ds
inc
mov
loop
cmp
int3
fwait
subl
mov
shlb
stos
push
in
add
push
inc
test
xchg
xchg
cltd
dec
push
addl
xchg
inc
jo
insb
test
mov
add
test
int
push
jbe
mov
clc
xor
mov
mov
jl
and
ss
xchg
jne
pop
xor
repnz
enter
repnz
out
mov
cmp
lea
inc
mov
mov
jne
jmp
add
out
lea
adc
stos
push
call
lret
inc
sbb
test
jnp
in
pop
xchg
pop
jge
ljmp
getsec
mov
pop
sar
cmpsl
sub
bound
stc
stos
fmull
inc
sbb
out
cmp
mov
sbb
xlat
jnp
cmp
imul
into
push
aad
jnp
fadds
adc
daa
jmp
pop
or
jmp
mov
or
mov
cmp
out
mov
pop
lret
test
fildll
aas
loope
or
push
shr
xor
pop
xor
scas
inc
sbb
push
cmp
rcll
aad
in
into
push
notb
ds
out
push
dec
js
js
js
inc
lds
repnz
inc
fs
in
fldcw
mov
pop
sarb
cmp
mov
bound
loop
ss
cmp
or
mov
mov
or
insl
orl
ljmp
lock
or
xor
add
mov
inc
popa
sbb
popf
mov
xchg
xchg
or
sub
jge
loopne
xchg
sbb
stos
dec
pop
or
push
test
popa
jg
or
xchg
into
xchg
ljmp
pop
and
and
dec
mov
pop
xor
call
lods
fwait
jo
out
dec
inc
arpl
sti
ret
and
ss
das
jo
jne
popa
arpl
xor
push
jp
sub
lods
adc
mov
mov
push
hlt
adc
sbb
out
mov
jge
in
cmpsb
mov
aad
sti
mov
in
seta
fs
aaa
je
arpl
sub
ret
adc
lret
sahf
sub
push
pop
inc
mov
mov
push
pop
sbbl
into
pop
cwtl
adc
hlt
and
out
sti
sub
mov
mov
mov
cmp
les
adc
cltd
in
pop
enter
mov
stos
lods
pop
jg
sub
dec
cmp
add
push
loopne
cwtl
sti
incb
js
mov
lock
inc
sahf
xchg
push
xor
out
fistpll
and
fsts
or
cmp
rcll
inc
out
in
cmpsl
adc
inc
push
lock
inc
jns
cmpsb
sub
ja
inc
adc
int3
rorl
repz
pop
mov
cmp
out
xchg
cmp
jae
dec
mov
mov
mov
movsb
adc
fists
fdivrl
les
dec
xchg
das
loop
or
jno
cld
pop
push
cmpsb
mov
inc
or
xor
in
cmp
bnd
mov
out
setae
add
jbe
dec
cmp
fcoml
pop
insl
pop
jl
jnp
dec
outsl
fst
mov
mov
xchg
out
data16
or
out
push
ret
fmuls
addl
mov
xor
sahf
inc
mov
mov
xchg
mov
int
sti
jo
push
ffreep
test
cmc
lds
jbe
movsb
jo
pop
adc
jo
punpckldq
add
imul
or
and
xchg
xchg
mov
rcr
mov
cmp
rcll
mov
lahf
fisttpll
xor
xor
inc
stos
push
or
jo
faddl
xchg
pushw
cmp
push
bound
cmp
mov
jg
hlt
jecxz
in
cmp
aam
out
or
sub
into
dec
jp
inc
ljmp
lods
lds
dec
push
inc
loop
lahf
dec
leave
dec
jnp
mov
pop
ret
outsl
enter
es
add
jp
sub
mov
mov
jecxz
sbb
cmp
push
cwtl
push
push
pop
test
sahf
pop
sahf
pop
sbb
sbb
inc
xchg
mov
xchg
push
lods
addr16
pop
fs
push
jno
fildl
inc
lods
jp
sbb
mov
loope
call
jb
lods
bound
in
pop
mov
ret
cld
adc
imulb
xor
push
add
jg
outsb
fisubrs
jg
ljmp
mov
cmp
and
aad
dec
lahf
push
mov
jno
fisttps
mov
and
mov
frstor
cmp
data16
popa
push
jnp
int
imul
jmp
push
jp
test
mov
gs
jg
cli
sbb
cmc
repnz
nop
adc
ss
xor
pop
cmpb
xchg
nop
pusha
jbe
xor
clc
pusha
hlt
xchg
popl
int3
pop
jns
push
pop
nop
lret
add
lcall
outsb
cmovae
push
lcall
movsl
dec
icebp
ret
addb
cwtl
cmp
dec
fiadds
mov
repnz
adc
or
lods
mov
in
fiadds
push
jnp
nop
inc
rcl
lcall
pop
cwtl
orl
mov
in
jne
sub
sbb
sub
pop
test
jp
lock
jl
mov
jbe
repz
push
and
sbb
shrb
jp
adc
inc
movsb
jp
addr16
andl
mov
push
sub
roll
inc
mov
pop
adc
and
test
ret
ror
jp
and
into
divb
cmpsl
mov
or
pop
les
insl
pop
jb
cmp
and
out
ljmp
stos
frstor
dec
sti
inc
cs
cmp
iret
dec
std
int3
sub
gs
xchg
mov
rcrb
mov
sbb
aaa
insb
add
mov
lods
das
ja
test
cmp
inc
lods
and
lcall
fwait
push
pop
sbb
xchg
mov
mov
sub
xchg
push
and
push
jecxz
fwait
into
outsl
add
fidivrl
or
mov
loop
stos
and
xor
lock
or
in
adc
jb
mov
lock
pusha
pop
dec
fidivrs
rclb
test
lock
xor
push
jo
or
push
and
ljmp
inc
fwait
ds
arpl
mov
mov
pop
xor
mov
ret
stos
fisttps
jnp
es
mov
cmpb
stos
mov
xchg
xchg
add
call
or
lret
inc
loopne
ret
call
sbb
fwait
and
fs
lret
shrl
aaa
out
test
jmp
jae
popa
int
dec
icebp
cltd
lahf
fidivs
jle
aas
push
inc
dec
test
jno
cmpsb
fdivrl
repz
jae
sbb
cmpsb
push
mov
jbe
pop
or
cli
fildll
daa
lock
cmp
push
imul
xor
movsl
ss
mov
inc
into
dec
jno,pt
dec
xchg
sub
xlat
scas
mov
clc
or
push
pop
xchg
in
int3
std
push
icebp
test
loopne
xchg
push
jae
out
inc
pop
int3
arpl
sub
pop
movsl
scas
adc
orl
inc
inc
fwait
cli
xchg
nop
xor
cmpsb
add
adc
pusha
fiaddl
test
pusha
lock
jne
neg
adc
mov
cmp
sahf
dec
mov
cmp
cltd
fcomps
cmp
xor
add
imul
xlat
xchg
push
leave
imul
int3
nop
pop
fsubl
daa
hlt
into
xchg
sub
inc
hlt
xlat
in
sbb
pop
fnstsw
pop
addr16
popa
xchg
inc
cmc
test
pop
cmc
xchg
test
xor
enter
push
jb
imul
ljmp
ret
insl
add
ror
adc
cmp
and
arpl
sub
loopne
dec
inc
iret
add
add
mov
filds
outsb
push
mov
movsb
jg
popa
jno
test
jge
int3
mov
inc
or
mov
lds
jo
inc
xor
adc
jo
rcl
mov
imul
adc
loopne
jae
fistps
stos
in
stc
subb
push
mov
mov
or
dec
and
sub
nop
xchg
test
clc
out
out
xor
int
jmp
push
ret
and
outsl
pop
dec
test
pop
test
jecxz
imul
xor
sbbl
and
and
inc
add
stos
push
popl
jb
sub
cmp
cmp
xchg
int
and
inc
xchg
mov
int
arpl
sti
shll
mov
inc
add
lds
in
out
cs
jae
ja
mov
mov
xor
out
daa
add
fs
out
inc
loop
out
das
leave
dec
pop
mov
rcpps
push
or
xchg
fidivrl
pop
xor
jnp
push
jge
in
in
sbb
xor
or
xchg
xorl
cmp
or
popf
pop
lcall
mov
or
mov
push
sub
je
xchg
arpl
mov
movsl
outsl
lcall
lret
out
jge
mov
insl
adc
xchg
pop
xlat
ljmp
xor
cmp
cld
dec
in
push
dec
stos
cmp
or
hlt
jecxz
scas
xor
push
aas
enter
fidivrs
cmp
loop
adc
mov
jo
sti
inc
jecxz
jge
mov
dec
push
mov
xchg
repz
sti
jo
pop
subb
and
jecxz
xor
sahf
fisttps
jp
dec
adc
in
adc
adc
push
ja
hlt
xor
jno
inc
and
testb
inc
inc
adc
pop
test
xchg
sbb
int3
xchg
jo
lods
daa
inc
jne
xchg
lcall
fwait
mov
push
test
mov
jecxz
stos
repnz
fmull
stos
mov
add
fistpl
and
int3
add
mov
shr
addb
pop
outsb
test
fnstenv
popa
addr16
mov
faddl
jg
pop
fdiv
mov
push
inc
cs
repnz
sub
out
mov
dec
sbb
mov
repz
pushf
gs
outsb
cmpsb
mov
push
lret
hlt
es
xchg
sub
adc
enter
shlb
mov
xchg
mov
call
pop
lcall
fs
clc
pop
inc
lock
cwtl
shll
aas
fs
int3
sbb
jmp
jp
mov
pop
or
je
mov
push
xchg
and
mov
jo
lods
insl
sbb
xchg
mov
xchg
addr16
dec
xchg
or
ret
jmp
cmp
sub
sbb
xchg
xchg
bound
outsl
inc
jp
dec
loope
sbb
or
sub
xchg
mov
jg
mov
icebp
pop
iret
mov
and
add
ja
orb
mov
jae
ljmp
leave
push
int3
cmpsb
das
insl
sti
mov
es
jp
mov
xor
pushl
jmp
lret
sbb
int3
fisubl
gs
rolb
dec
cld
and
lahf
mov
es
cld
jge
clc
mov
dec
rorl
add
xchg
addr16
ja
ror
sahf
ss
add
std
add
fld
pop
mov
push
pop
aad
sub
es
popa
jnp
xchg
dec
ja
hlt
dec
xlat
test
stos
bound
sub
xchg
fs
out
cmpsl
mov
mov
jle
or
insl
pop
stos
inc
addr16
es
fwait
test
rorl
dec
ds
push
imul
pop
adc
lret
inc
sahf
inc
shlb
inc
adc
in
dec
subl
lods
fbstp
pop
xlat
divb
pushf
mov
aaa
and
sub
pushf
mov
or
movsl
jmp
dec
xchg
xor
lods
xor
pushf
incb
mov
jge
add
lds
adc
mov
lahf
push
cmp
lcall
mov
insl
mov
push
cs
xlat
dec
popa
test
sub
push
in
or
call
cmc
cmp
inc
stos
int3
cmpsb
xor
cmc
pop
mov
ja
push
push
mov
lahf
jb
inc
xor
ret
lret
mov
pushf
mov
sbb
decl
dec
sbbl
mov
xchg
mov
bound
xor
inc
mov
adcb
movsb
dec
sbb
ljmp
xor
xor
inc
in
int
insl
shlb
je
adc
cmp
dec
in
jmp
paddq
jnp
in
pop
push
adc
test
dec
inc
movsb
pop
push
mov
das
jg
dec
rorb
jle
xchg
mov
cmp
in
inc
jb
or
sahf
add
out
scas
push
fwait
mov
or
lock
or
pop
cltd
in
jg
lods
aaa
push
jb
sub
mov
pop
push
mov
add
fnsetpm(287
push
adc
xchg
add
sbb
cwtl
jle
xchg
mov
adcl
dec
jb
mov
cmp
and
int
sbb
xlat
adc
loope
xchg
xchg
push
mov
jp
inc
mov
and
test
xchg
js
lds
dec
push
pop
push
sti
fwait
mov
push
jns
arpl
stc
cmp
and
lock
addl
mov
cmp
jnp
test
jnp
jl
and
sti
ret
ljmp
jl
lret
cmp
xchg
in
imul
inc
scas
mov
test
add
jp
hlt
pop
inc
mov
push
arpl
xor
push
test
or
outsb
in
fnstenv
dec
stc
scas
mov
mov
cwtl
addr16
jno
xor
jne
xchg
mov
xchg
xor
ljmp
cmpsb
int
cld
add
xorb
jle
jp
iret
fimuls
iret
imul
leave
mov
lods
test
dec
imul
popf
jne
test
outsl
jne
pop
fdivrs
test
or
cltd
cmpsl
repnz
xchg
push
or
add
mov
insl
jle
dec
sbb
mov
loop
cmp
clc
out
lahf
push
and
push
sbb
push
lret
ret
je
inc
movsl
sahf
inc
jne
cmp
inc
cmc
pushf
fsubs
insl
iret
jo
xchg
test
inc
jno
xor
jnp
pusha
push
mov
dec
iret
notb
outsl
add
loopne
or
std
mov
and
test
ja
aad
jo
push
orb
loopne
xorb
test
inc
test
aad
popf
xchg
jecxz
and
test
bound
ret
jp
in
dec
or
movsl
jp
jmp
cmpsb
push
mov
aaa
addr16
mov
or
adc
sub
imul
hlt
inc
mov
ja
pop
lret
and
xchg
fdivrs
test
push
popa
enter
pop
cli
dec
out
cmp
mov
sub
push
test
xor
cld
dec
and
cmp
fiaddl
fnstsw
jns
adc
and
jb
jnp
movl
or
xor
cli
lcall
sahf
dec
mov
lods
in
test
jecxz
lahf
repnz
sub
dec
adcl
test
inc
jo
inc
jb
insb
dec
add
cmp
jp
cmp
lods
jp
or
lock
pop
xor
sub
add
pop
enter
mov
addr16
mov
fcomps
inc
in
push
jb
stos
sub
jmp
gs
int
imul
mov
cmc
dec
arpl
out
loop
push
cmc
fistl
leave
filds
jle
fisubl
add
xchg
mov
jle
xor
adc
loopne
addl
and
xorb
cmp
dec
jns
loope
loopne
xor
push
add
jecxz
inc
fnstenv
clc
pusha
test
jnp
inc
shll
mov
lret
fs
cmpsb
sbb
enter
xchg
mov
jnp
adc
outsl
test
lahf
test
push
cli
int
jns
dec
loope
out
dec
xchg
ret
push
dec
hlt
push
sbb
mov
adc
cmp
sub
call
dec
pop
shr
lahf
or
flds
jns
in
xchg
cmpsl
xchg
into
ret
jo
xchg
pop
or
adc
incb
stos
jge
aaa
mov
stos
push
jne
push
mov
and
in
mov
sahf
or
fiaddl
and
int
jmp
iret
or
inc
outsl
add
mulb
mov
iret
sub
mov
add
add
jle
outsb
repnz
mov
gs
inc
leave
xchg
jge
stos
cli
push
das
jns
inc
sar
mov
sahf
mov
es
es
push
xchg
rcll
cld
xor
cmp
stos
xchg
and
xor
inc
cmp
mov
mov
pusha
lock
sub
js
or
and
push
insb
xlat
mov
imul
jbe
mov
shlb
nop
xor
lock
xchg
fldl2e
lret
and
xor
push
xor
out
fs
outsb
push
cmpsb
out
loope
daa
xor
cmc
push
enter
inc
push
xchg
mov
dec
daa
popf
dec
cwtl
hlt
repz
rolb
hlt
int3
test
popf
or
jle
jecxz
test
push
push
movsl
addr16
xchg
in
data16
cmp
in
fldcw
hlt
add
mov
divps
mov
test
retw
jo
pop
pop
lds
ss
les
push
out
fcomi
sub
push
xchg
jp
testl
icebp
sar
xchg
bnd
insl
pushf
jge
mov
adc
xor
pushf
dec
mov
enter
js
mov
mov
xchg
xchg
sub
mov
rorl
xchg
mov
dec
mov
out
iret
mov
xchg
pop
mov
ds
int
xor
andl
insl
dec
add
rcl
jo
aam
hlt
aad
cld
and
les
in
insb
lret
mov
loopne
testl
loop
sub
cmp
fwait
xor
mov
repz
sahf
or
icebp
call
enter
or
fucomp
bound
mov
cmp
jg
push
lret
xchg
xchg
out
dec
cwtl
add
roll
mov
mov
sti
sub
lock
mov
das
sbb
stc
loopne
aad
xchg
or
xchg
xchg
and
inc
pop
stos
scas
repnz
dec
xor
dec
sarb
pop
jle
pop
inc
add
aam
sbb
repz
xor
sub
adc
pop
push
inc
outsb
aas
add
jo
gs
push
aaa
js
xchg
mov
dec
pop
out
insb
pop
cmpsl
dec
lret
lahf
push
fimull
jo
push
mov
sbb
out
adc
mov
add
pop
fcmovb
out
sub
stos
int
pushf
outsl
mov
mov
insl
dec
insl
adc
sbb
adc
lret
lret
mov
loope
imul
push
push
jae
inc
cmp
fldl
cmpsb
cli
daa
push
ljmp
mov
loopne
pop
xchg
fucom
mov
fstpl
dec
scas
int3
inc
lea
push
mov
push
fisttpl
pusha
cmp
mov
sbbl
frstor
mov
mov
inc
push
lea
or
jb
loop
cmp
inc
mov
jne
pop
jle
imul
inc
mov
mulb
dec
cmpsb
pop
jno
gs
mov
popa
jb
repnz
stos
outsl
mov
and
rolb
lahf
sarb
cmp
outsb
jno
xchg
xchg
cmc
mov
push
mov
fldcw
or
in
pop
nop
add
fs
push
jbe
lds
push
mov
push
xchg
in
lret
lods
aad
xchg
mov
negb
out
xor
int
cmp
insb
sub
mov
push
insl
xchg
add
dec
movsl
mov
sub
out
out
bound
outsl
insb
xchg
test
inc
adcb
xor
adcb
test
testl
pop
lea
sub
loopne
fldenv
in
fldenv
ljmp
xchg
cmc
addl
fnstenv
jb
fidivrs
jbe
fisubs
jne
and
aaa
or
popa
cli
je
subb
cmp
sub
cmpsl
xchg
ljmp
mov
jge
stos
add
cmp
dec
arpl
repnz
xor
cmpsb
mov
jmp
cltd
enter
dec
mov
mov
jle
in
mov
cmpb
orb
xor
js
stos
mov
hlt
push
data16
and
pop
xchg
out
lahf
jnp
push
push
addr16
mov
xchg
out
in
out
test
push
and
ja,pn
stos
sbb
in
inc
xor
sub
orl
pop
int3
mov
xchg
mov
lcall
out
mov
and
icebp
test
push
jg
pushf
mov
jp
outsb
loope
push
test
xor
mov
sub
fimuls
js
xchg
lret
in
insl
inc
push
out
jbe
test
loope
outsl
cmpsl
in
ret
jecxz
das
jmp
push
in
jnp
sub
stos
cs
scas
les
lds
sub
cli
dec
enter
fidivl
and
stos
jae
and
test
or
pop
sbb
bound
xchg
loope
addb
jmp
test
xorb
mov
push
repnz
mov
push
mov
mulb
fsubrs
jbe
out
cmpsb
pusha
inc
mov
sti
loope
call
mov
sbb
jae
cli
dec
adc
push
lcall
into
pop
jp
into
push
xlat
dec
push
mov
inc
xchg
inc
cltd
cmp
hlt
testl
addr16
mov
mov
pop
xchg
jg
inc
sti
mov
sub
std
lret
push
mov
push
cltd
divb
lock
hlt
aam
cwtl
inc
push
push
iret
adcl
sub
cmpsl
hlt
lret
loope
pop
and
mov
add
vmwrite
testl
movsl
push
call
lahf
test
inc
cmp
mov
lock
xor
out
mov
xchg
xor
adc
lock
xchg
jnp
and
push
or
enter
insl
or
into
in
mov
dec
frstor
and
xor
shl
shll
add
inc
push
icebp
xchg
hlt
loop
or
adc
push
jbe
into
sub
mov
outsb
cmp
scas
enter
in
mov
push
xchg
jnp
push
inc
mov
loop
sbb
adc
dec
xor
call
enter
pop
push
pop
movsl
ret
loopne
jns
or
int3
in
mov
pop
stos
sub
outsl
cli
pushf
dec
aaa
data16
data16
out
push
addb
sbb
aaa
mov
outsl
daa
sbb
sbb
mov
xchg
cmpsl
rorl
xor
xlat
imul
orl
lods
outsl
cmpsb
pushl
nop
lret
mov
out
mov
xchg
iret
lea
loopne
inc
in
aad
xor
jb
xchg
pop
mov
dec
test
dec
jg
mov
arpl
cmp
fisubrl
dec
mov
ljmp
adc
call
jl
dec
xor
ret
popf
bound
int3
imul
xor
inc
cmp
cmp
into
lea
lret
int
xchg
or
or
add
icebp
gs
sbb
pop
js
cmpsl
lret
mov
fidivs
adc
subl
xchg
lds
repnz
push
xorps
push
and
sub
cli
dec
test
aam
adc
cmp
jp
scas
mov
test
rcrb
mov
sti
icebp
shrl
stc
sub
inc
and
out
lea
test
popa
movsl
aas
mov
mov
scas
adc
loop
jge
push
jae
xor
outsl
push
in
inc
inc
adc
iret
in
push
add
sbb
sbb
popf
pop
push
cwtl
mov
lcall
inc
sub
jnp
test
pop
jb
loope
rcll
adc
mov
lret
repz
xor
int
jb
xor
in
sbb
sub
jg
in
pop
js
scas
add
fbld
insl
fistl
xor
pop
lcall
xor
mov
stos
lds
ljmp
pop
jno
lahf
sbb
jbe
pop
mov
cmp
sub
fcomip
mov
scas
xchg
push
mov
xor
inc
add
test
jo
jnp
cmp
jge
enter
mov
jno
fcmove
push
xor
mov
lahf
fsubrl
out
jae
jge
mov
xor
fimull
mov
stc
inc
test
pop
rclb
outsb
cltd
test
out
repz
imul
sub
jae
cltd
and
lret
jno
mov
inc
xchg
push
into
imul
std
out
test
mov
cli
push
xor
insb
shrl
loope
mov
mov
scas
and
and
int
pop
pop
pop
jbe
dec
shll
div
sub
add
inc
shrl
pop
mov
clc
or
xchg
and
fcmovnb
xor
push
nop
or
push
enter
ja
ds
add
add
push
inc
repz
imul
push
xor
mov
inc
stc
dec
jl
lds
les
and
popa
cld
xor
fisubs
aad
ret
push
xchg
push
imul
loope
xchg
pop
xchg
fstl
lods
jmp
add
adc
push
and
pop
call
push
mov
jbe
dec
rorl
mov
inc
sti
adcl
jnp
push
push
add
je
faddl
and
sbb
sbb
insb
mov
push
cltd
mov
cmpsb
inc
sahf
cmp
lret
push
dec
jge
aam
xchg
jo
lcall
mov
lods
les
xlat
movsb
lret
test
mov
jo
enter
data16
fs
cmp
dec
adc
jo
mov
push
das
sub
jno
insb
push
orb
icebp
mov
sub
movsl
pop
ror
pushf
cltd
xor
jnp
sbb
lock
int3
mov
lock
push
loop
repnz
and
xor
inc
imul
popa
mov
pop
gs
hlt
add
or
mov
xchg
into
cmp
addr16
mov
xor
cmp
add
add
pop
inc
int
hlt
jns
imull
shl
int
pop
lcall
pop
pop
xchg
mov
fwait
outsl
fwait
sahf
dec
in
mov
in
fs
and
cmp
dec
cmp
mov
push
cwtl
xchg
mov
out
xchg
clc
and
aas
push
cmp
inc
stos
das
mov
xchg
test
sub
adc
push
daa
shll
cld
sbbl
sti
mov
inc
xor
cmp
popa
cmp
lcall
adc
or
xor
scas
cmp
loope
push
and
xchg
xchg
in
mov
stos
cmp
push
insb
dec
xorb
jge
inc
sbb
aas
inc
add
mov
sub
push
pusha
and
pushf
or
jb
pop
out
aas
repnz
dec
xor
test
loop
mov
lock
jnp
xchg
and
shll
call
mov
in
loopne
mov
add
lds
mov
test
mov
inc
sbb
dec
or
arpl
sbb
mov
cmp
addr16
xchg
int3
test
aam
jae
popf
jg
jmp
les
mov
jle
add
pop
ret
and
jbe
scas
cmp
fwait
int3
dec
mov
fwait
mov
insl
in
xchg
push
xor
pop
popa
arpl
sbb
fxch
sub
loop
aaa
ljmp
and
and
push
pop
jnp
sbb
xor
lret
bound
sbb
lea
stos
out
adc
pop
lds
fsubrs
inc
xchg
push
mov
test
push
stc
sbb
ret
xorb
aad
xor
icebp
mov
adc
dec
lock
insl
mov
sti
cmp
cmp
sbb
push
mov
mov
inc
sbb
test
test
aad
fsubrl
mov
dec
loopne
imul
pop
lret
push
out
pushf
loopne
mov
xchg
sbb
or
fwait
xchg
dec
adc
cmp
aaa
add
movsb
fs
movsl
aaa
hlt
jl
inc
jb
pusha
cli
fildll
fmull
icebp
out
movsl
push
inc
dec
or
std
shlb
inc
jnp
outsb
xchg
out
jne
sub
mov
inc
or
dec
gs
imul
outsb
jmp
sub
xor
mov
add
lods
add
add
fdivrl
das
dec
inc
cwtl
mov
addr16
cltd
rcl
ja
push
leavew
mov
sub
pop
ficoml
push
xor
dec
mov
cmp
scas
bound
pushf
arpl
lea
int
pop
fdiv
xchg
nop
pusha
cmp
stos
pop
or
push
fwait
loop
mov
sarb
cmp
dec
adc
dec
aam
push
jg
pop
dec
add
loop
inc
jns
mov
mov
out
lret
in
roll
xor
push
pop
jo
ds
insl
cli
dec
lock
jg
add
cwtl
mov
fcmovnbe
mov
xchg
jb
sub
inc
pop
xlat
popf
or
cli
inc
imul
mov
data16
sub
inc
sar
cs
outsb
sbbb
or
fidivs
and
mov
nop
jmp
lods
iret
cmp
adc
mov
xchg
push
push
sub
aaa
int
sbb
pop
inc
lahf
push
jmp
inc
dec
and
xor
mov
inc
ss
mov
and
aaa
mov
test
sahf
ss
insl
xchg
sub
lods
dec
jl
adc
test
xor
mov
rcll
sbbl
mov
mov
imul
stc
mov
xor
lcall
cmp
imul
cmpl
lea
sbb
xor
ss
sub
ja
or
pop
fbstp
repnz
push
or
aam
pop
mov
jo
out
divb
or
imulb
xor
in
test
mov
cmpb
inc
push
imul
cmpsl
xchg
push
sahf
cmp
mov
repz
and
das
push
xlat
gs
pop
mov
dec
ljmp
xchg
sti
xchg
pop
push
cmp
and
jmp
sbb
sbb
test
aam
jne
lret
mov
mov
je
mov
mov
loop
push
mov
int3
inc
jae
cwtl
popa
xor
mov
lea
mov
jne
fistps
out
insb
mov
dec
mov
into
sub
or
push
push
or
jo
mov
test
lahf
das
jo
jge
xor
cmc
xchg
dec
loope
cmpsb
dec
mov
jns
fucom
push
dec
xor
jae
pop
sbb
dec
jecxz
add
stos
cmp
push
and
jecxz
test
test
addb
mov
mov
cmpsl
arpl
ret
pop
or
nop
cmp
or
insb
or
dec
adc
jno
pop
pop
adc
adc
push
aam
dec
dec
out
inc
cltd
jl
mov
push
and
sub
hlt
enter
inc
lock
sbb
adcl
or
addr16
nop
pop
in
push
xlat
mov
aad
push
cld
add
pop
pop
jns
or
clc
sbb
mov
jmp
lcall
xor
push
mov
sub
movsb
iret
mov
push
fs
inc
loope
scas
or
xor
adcl
outsb
lods
data16
ljmp
xchg
xchg
cmpsb
xor
shlb
xchg
out
cs
arpl
push
or
and
xlat
in
andb
sub
jbe
imul
inc
xor
lods
mov
pop
cmp
jg
in
jbe
jle
hlt
lds
pop
call
mov
cmp
sbb
sbb
mov
ret
mov
mov
ds
js
jg
mov
iret
movsl
cli
cltd
sahf
out
inc
lcall
or
mov
jno
movlhps
hlt
js
mov
outsl
lahf
and
test
mov
cld
lahf
lahf
mov
aas
or
divb
lock
jns
inc
popa
sbb
jmp
jmp
popf
sub
pop
xchg
mov
inc
mov
sbb
cmp
imulb
popa
outsb
adc
push
aaa
ljmp
les
lahf
jmp
bound
clts
mov
adc
jmp
jge
jg
push
mov
pop
xor
maxps
lahf
xchg
cltd
mov
push
cli
cmp
popaw
jb
lret
out
jae
or
mov
mov
stos
ljmp
gs
fstpt
ljmp
xchg
iret
call
or
loop
sbb
mov
popa
mov
xor
push
mov
mov
xchg
movsb
cmpsb
scas
pusha
adc
mov
mov
subps
sub
insl
xlat
rcll
jmp
ljmp
pop
lahf
push
popf
cmc
ljmp
push
cmp
bnd
cmp
push
shrl
jecxz
lds
dec
jp
lcall
xor
mov
or
jne
insb
mov
in
inc
pop
or
push
fldt
push
out
bound
pop
rcl
clc
das
sarl
int3
inc
cwtl
jmp
mov
mov
imul
test
push
in
jbe
repz
mov
test
enter
jnp
push
xor
jp
xor
lahf
mov
fwait
adc
or
adc
sbb
push
push
imull
mov
fcom
xor
mov
xor
repz
das
das
mov
lds
rorl
cmpb
movb
mov
sarl
test
inc
outsb
lret
das
mov
xlat
pop
stos
mov
daa
xor
sbb
xchg
cwtl
rcrl
ret
cmpsl
and
ret
test
jecxz
ret
lock
and
clc
and
and
dec
loop
ljmp
dec
lods
outsb
stos
inc
faddl
mov
and
xlat
mov
push
push
mov
std
xlat
dec
cmpsb
fld
or
inc
sub
jns
dec
push
daa
ja
push
add
mov
mov
movsl
mov
add
pop
fldenv
test
mov
lahf
aas
cmpsl
lahf
aad
idivb
divl
mov
cmp
jp
mov
popf
dec
into
repz
or
leave
sbb
ja
xchg
mov
lahf
lea
sbb
jecxz
sbb
mov
fsub
and
push
dec
in
repz
into
test
mov
aaa
jo
mov
mov
movsb
push
jle
sbb
das
pop
sahf
cmp
repnz
pop
test
sbb
xor
inc
xchg
in
loope
xlat
popf
and
lahf
aam
jp
and
lds
xchg
cmpsb
dec
dec
arpl
pop
and
dec
imul
dec
repz
mov
arpl
cwtd
dec
lds
mov
sub
sahf
lds
mov
lea
in
es
aam
test
mov
xlat
or
adc
or
cwtl
imull
mov
aam
jg
or
mov
mov
mov
or
mov
lret
sub
adc
add
jp
fdivl
fistl
test
jno
or
jge
adc
xchg
dec
mov
cld
mov
dec
cld
cltd
in
cmc
leave
cs
mov
push
rorb
adc
xor
cmp
cmp
xor
cmpsl
cwtl
aas
repz
cmp
push
addb
xlat
nop
cwtl
loope
xor
and
and
les
lods
std
icebp
pop
fiaddl
leave
jo
jb
loopne
or
inc
xorb
pop
and
andl
sbb
cmp
adc
jl
out
lret
cmp
subl
pop
jmp
add
push
loope
fidivrl
inc
hlt
inc
xchg
lret
inc
aad
inc
jne
js
insb
stos
in
lods
pop
fwait
jo
mov
dec
xchg
mov
int3
fidivs
mov
adc
jp
sub
outsl
or
loope
movsl
mov
test
dec
stc
ds
cltd
insb
dec
xchg
xor
loope
xchg
insb
dec
in
pop
sub
mov
dec
aad
vmread
lods
pop
push
iret
outsb
push
test
and
and
mov
test
push
or
mov
and
push
arpl
in
test
mov
in
xchg
mov
test
nop
cmp
outsl
or
pop
int
dec
dec
pop
inc
mov
imul
fs
mov
subb
mov
xor
xchg
push
aad
insl
xor
aas
ja
adc
call
xchg
dec
hlt
scas
sub
decl
xlat
mov
mov
into
mov
jnp
mov
ret
inc
enter
loop
test
aaa
xchg
dec
pop
lret
fcompl
jne
add
or
jg
stos
stc
mov
push
jbe
cmp
adcb
fwait
xchg
imulb
into
out
mov
sbb
or
popf
daa
out
mov
cmp
popf
push
push
cmpsb
inc
sub
dec
dec
fwait
jno
inc
push
sbb
rclb
scas
sbb
jp
or
dec
push
dec
bound
rcrl
jg
cwtl
sub
jle
push
scas
out
xor
xlat
data16
ficompl
int3
mov
outsb
jmp
lock
iretw
ror
movsb
icebp
lret
and
sarb
sbb
scas
in
dec
xchg
lret
test
cmc
outsl
movl
outsb
das
or
loop
cmpsl
xchg
mov
or
lret
pop
sub
addb
scas
data16
push
test
leave
loopne
pop
sub
add
mov
cld
fisubrs
sahf
mov
les
insl
cmp
adc
nop
imul
fistpll
in
add
stos
mov
mov
das
adc
inc
jbe
or
arpl
xor
fstpt
fcmovb
int
js
and
mov
inc
and
xor
xchg
xor
sub
mov
pop
or
adc
jne
popa
inc
cmp
pop
nop
jl
inc
lahf
cwtl
pop
out
jmp
popa
enter
test
inc
lahf
inc
sub
mov
lea
shrb
js
mov
mov
mov
iret
inc
icebp
rorb
fsubr
push
or
scas
addl
call
dec
lret
dec
iret
mov
ja
jo
insl
je
out
inc
imul
cmpsl
mov
mov
insb
insb
repnz
outsb
jb
test
in
lahf
adc
in
ror
loopne
mov
test
clc
test
jle
fisttpl
movsb
arpl
jno
jmp
mov
push
insl
mov
add
jl
popf
pop
lret
sub
subb
ds
xorl
fcmovnb
pop
mov
lods
cmp
loopne
popa
insb
addr16
into
int3
mov
repz
sahf
loope
cmp
shrl
popf
sbb
in
loopne
repz
andb
rorl
int
outsb
dec
inc
cmp
dec
cmpsl
push
or
out
inc
xchg
js
into
jmp
inc
jo
mov
sti
push
out
lea
loopne
mov
std
lods
add
fdivl
insb
lret
push
adc
stos
fwait
dec
fisttpll
inc
adc
mov
and
rcr
mov
lds
cmp
out
shlb
mov
pusha
push
scas
shlb
idivb
inc
xor
xor
adc
fld
loopne
shr
in
cwtl
and
mov
xorb
jle
jbe
orl
lret
leave
pop
xchg
les
test
add
xlat
adc
pop
dec
cmp
jle
push
jge
push
rcrb
hlt
inc
pop
icebp
insl
inc
test
push
cli
xchg
in
aad
cs
lock
push
iret
adc
imul
imul
sub
les
xchg
push
rcrl
dec
sbb
iret
jmp
pusha
and
sub
iret
or
cmc
popa
push
mov
adc
int
jo
pop
mov
xor
lret
mov
jb
js
xchg
mov
lahf
xchg
imul
jp
fdivrl
adc
jnp
call
mov
pop
arpl
insl
cltd
xlat
in
add
test
push
addr16
pusha
cmp
loopne
jmp
mov
mov
sbb
mov
subb
jbe
pop
lret
insl
mulb
and
rol
loopne
test
pop
pop
jae
imul
or
shll
or
das
test
call
cwtl
jne
mov
or
dec
jns
dec
cmpsl
mov
lock
loop
mov
mov
js
scas
mov
xchg
insb
push
jge
jmp
mov
xchg
ss
xor
xor
push
mov
cli
lea
gs
mov
int3
lret
js
cli
push
sarb
leave
aaa
in
pop
mov
adc
and
arpl
cmc
jle
xlat
push
xor
mov
mov
or
xor
test
lods
insb
ljmp
insl
pop
add
mov
lods
clc
cmp
pop
in
jp
sbb
out
outsl
inc
jg
ficoml
fwait
leave
xchg
cmc
jne
push
stc
sbb
mov
adc
ficompl
insb
lods
icebp
int3
ss
ffree
jmp
gs
pop
movsl
or
xor
jl
leave
aam
dec
xor
sub
lret
leave
imul
ret
scas
popa
cmp
roll
and
loop
sub
cmc
ss
xchg
iret
test
adc
dec
hlt
ss
pushf
das
incb
dec
lods
daa
andb
mov
ja
mov
adc
add
sbbl
and
inc
rolb
movsl
shr
cs
js
stos
cmpsb
addr16
sbb
stos
js
insb
xchg
outsb
jmp
or
jne
jo
xchg
cmp
mov
pusha
jg
jp
push
add
loope
in
pop
pop
mov
jb
mov
addr16
push
movsl
push
dec
or
mov
add
les
mov
scas
xchg
in
push
notb
mov
mov
rorl
pop
outsl
pop
nop
dec
movsl
mov
mov
mov
test
push
mov
out
mov
mov
cs
fmull
outsb
mov
and
lds
cmpsb
sub
iret
test
add
hlt
xor
and
jo
cmp
lcall
xor
adc
repnz
stos
ljmp
adc
pusha
push
mov
les
ret
into
ret
xor
jnp
sbb
lcall
fildll
pusha
xchg
mov
mov
adc
shll
adcl
jae
xor
sbb
mov
sub
add
imul
mov
lret
aaa
ljmp
xor
repnz
out
mov
xor
mov
insl
xchg
push
shll
sub
push
or
xor
jg
sub
dec
pusha
sub
pop
out
adc
jg
lods
pop
lods
hlt
sbb
push
push
fists
mov
aaa
and
xchg
mov
mov
push
xchg
gs
inc
test
nop
and
push
in
cmp
pop
test
out
in
jp
push
add
cmp
idiv
lock
add
xchg
jae
pop
adc
xchg
mov
push
in
insl
ja
movsb
pop
xchg
ljmp
mov
push
jp
rcll
lods
pop
xor
mov
jmp
insb
jmp
lea
addr16
pop
jecxz
xchg
jne
aam
clc
insl
pop
push
cs
mov
jnp
pop
out
fisttpl
ss
mov
mov
adc
add
stc
pop
sbb
out
sub
lcall
out
les
adc
push
arpl
adc
jns
and
inc
xor
jle
jmp
aad
inc
add
enter
popf
test
loopne
push
push
gs
js
xchg
push
scas
pop
and
ficomps
xor
movsb
mov
pop
dec
xchg
mov
sbb
xchg
dec
xor
push
out
adc
insl
mov
js
jg
aam
out
loop
jp
inc
add
fcoml
inc
xor
and
insb
add
ret
mov
loop
iret
xchg
sub
test
lock
rolb
pop
xchg
dec
cmpsl
insl
cld
aas
test
pop
cmpsb
push
jbe
rcrl
repnz
pop
addl
mov
push
repnz
das
sbb
mov
lock
imul
ja
inc
sahf
xchg
jg
arpl
jb
movsl
push
inc
mov
cltd
lea
mov
pop
fldt
scas
xchg
mov
dec
xchg
cmpsl
lods
leave
fisttps
leave
lods
cwtl
fs
and
xor
mov
jb
loop
pop
aaa
hlt
insl
mov
ja
cmp
iret
push
aam
sahf
loope
hlt
and
and
mov
xor
outsl
pop
fstpl
pop
in
jo
int
xchg
pop
in
pop
mov
bound
xor
bound
mov
adc
pop
adc
mov
pop
paddw
push
clc
add
inc
fsubs
in
xchg
int3
test
out
ret
push
fimull
sbb
shl
dec
dec
xchg
dec
scas
adcl
in
fisttpl
loope
xchg
test
or
pop
fisttps
push
adcl
pop
icebp
mov
mov
jne
add
add
and
mov
mov
dec
mov
cmpb
inc
jns
jmp
jo
bound
cld
in
bound
ljmp
push
or
jno
pop
pop
fidivrl
popf
out
mov
out
pop
popa
mov
mov
mov
jecxz
repnz
dec
fildl
mov
sarb
mov
adc
mov
sbb
inc
outsb
in
into
imul
jns
enter
rorb
loope
arpl
mov
popf
mov
push
jb
xchg
stos
xor
pusha
jecxz
mov
adc
jae
pop
shll
rcrl
addr16
shll
aas
fwait
lret
sbb
xor
rorl
add
cltd
sbb
repz
movsb
xor
jbe
rorl
sarl
inc
movsl
test
push
inc
fcompl
lock
cmp
enter
jge
leave
dec
push
xchg
jmp
inc
fcmovne
cmp
push
mov
outsb
and
loop
roll
in
mov
jg
js
jno
nop
xlat
mov
ja
jnp
mov
mov
int
mov
jge
scas
sub
test
fs
push
pop
xchg
jne
cmp
and
and
sub
pusha
mov
aam
popf
push
enter
jbe
ds
int3
adc
mov
jne
loopne
movsb
lock
xchg
lret
imul
dec
lahf
addl
inc
cli
sub
jp
adc
aaa
jge
xchg
int3
inc
sub
rorb
imul
in
scas
dec
fidivs
push
inc
gs
xor
jbe
adc
cmp
fbstp
call
lds
cmpsb
jg
cmpsb
cmp
push
jmp
and
popa
pop
lea
sbb
cli
xor
popf
or
arpl
daa
leave
dec
addr16
int
arpl
mov
mov
jns
xor
fstpl
outsl
cmp
test
xor
jp
fildl
leave
int3
outsl
fstpl
fnstsw
inc
xlat
and
mov
adcb
xor
pop
xchg
cwtl
aas
xor
repnz
jo
dec
cwtl
aad
imul
mov
lcall
lds
or
in
test
pop
out
xor
xorb
stos
clc
inc
mov
mov
xchg
in
ret
insb
xchg
test
cwtl
jg
xchg
jmp
jmp
bound
sahf
insl
into
mov
ja
insb
ret
sub
mov
xchg
xor
cs
or
mov
lods
jmp
rcll
stos
pop
adc
shll
mov
cmpsb
fnstcw
xor
adc
jo
test
lret
stc
mov
mov
adc
ljmp
xchg
inc
jb
nop
mov
push
test
hlt
ret
xor
nop
nop
lock
jmp
or
loope
mov
insl
incl
dec
inc
js
das
cmp
lods
xchg
mov
jne
mov
xchg
lea
mov
cmp
out
jae
lret
ret
out
sbb
lods
clc
ja
cmpsb
ficomps
sub
call
cmp
rorl
pusha
mov
adc
mov
hlt
cmpsb
mov
push
and
and
bound
ja
pop
ror
mov
cmp
in
sub
add
ljmp
mov
leave
cmp
mov
out
cwtl
adc
mov
sbb
rcr
xchg
push
popf
js
and
insb
mov
mov
cmp
mov
das
stc
cmpsl
mov
imul
jns
sub
adc
dec
nop
pop
enter
out
mov
cmp
xor
jb
jns
repnz
iret
inc
dec
out
mov
mov
lret
addr16
push
pusha
scas
imul
mov
mov
xchg
imulb
dec
add
and
fildl
rolb
jle
lahf
lds
in
fs
mov
mov
push
pop
in
jb
jg
dec
xor
mov
std
out
mov
xor
in
int3
or
sub
test
outsl
fistl
test
cmpsl
cmp
aad
lods
sub
js
inc
shlb
push
inc
loop
nop
loopne
movsb
adc
adc
test
cmp
xchg
int3
add
adc
js
xlat
jecxz
pop
fldt
test
push
dec
fs
mov
inc
test
test
lods
pop
xlat
rorb
dec
mov
lret
push
ds
lret
lock
xor
add
fildl
dec
pop
mov
lea
push
out
sar
cwtl
fwait
xor
scas
pop
fiadds
cli
loope
jno
sub
in
movsl
push
fld
in
sbb
mov
ret
or
xchg
cmp
add
push
bound
xor
ljmp
js
sub
mov
xchg
aas
inc
mov
dec
es
shlb
ljmp
out
dec
push
fsubr
adc
gs
pop
jne
insl
ss
int
ret
xor
pop
out
inc
xorb
leave
xchg
test
test
popf
cwtl
lock
rorb
xchg
aas
ss
cmpsl
dec
mov
sub
push
daa
xchg
and
cmpsl
pop
jecxz
xchg
aad
sahf
sub
dec
pushf
icebp
movsl
adc
or
in
in
in
mov
ljmp
dec
outsb
add
mov
xchg
ljmp
jp
cmc
push
test
subb
lds
xor
lret
add
jmp
scas
push
sbb
cmp
popf
jbe
fs
gs
inc
dec
rorl
mov
out
cmc
ljmp
dec
dec
test
sbb
sbb
aam
dec
les
mov
test
push
push
mov
cltd
push
loopne
std
jecxz
sub
inc
cltd
les
push
inc
push
jne
mov
cmp
ss
push
push
mov
popa
add
jns
lcall
xor
push
cmp
xchg
add
jge
pop
mov
pop
inc
and
jne
mov
sbb
cmp
mov
mov
pop
jecxz
popf
jl
jge
dec
outsl
adc
push
je
insl
push
jg
das
loopne
imul
jp
out
pop
or
xchg
into
add
jg
imul
or
dec
or
adc
insb
cmp
cld
in
arpl
sbb
dec
loop
aad
out
dec
pop
cwtl
mov
popf
jp
push
scas
push
lcall
cmp
testb
cmpsb
mov
add
jns
or
mov
in
xor
cmpsb
adc
test
aaa
out
stc
xchg
ret
sub
or
jbe
xchg
mov
jmp
mov
nop
std
in
sub
mov
idivb
cmp
and
push
jg
push
lock
push
jg
push
mov
in
xor
out
es
hlt
mov
mov
mov
lcall
jecxz
push
out
loop,pn
adc
push
gs
mov
mov
out
xchg
push
outsb
xor
lods
filds
movsl
sub
imul
cmp
mov
inc
pushf
mov
jge
add
mov
int3
mov
shll
mov
inc
pusha
mov
stos
jnp
cmp
or
mov
inc
mov
ljmp
sbb
mov
and
jnp
icebp
scas
in
sti
sbb
aam
xchg
cmc
or
inc
sub
pop
pop
jns
xchg
push
inc
push
mov
sub
push
mov
mov
jge
fwait
std
mov
xchg
test
sub
adc
call
sahf
push
add
aas
mov
sub
in
xlat
aaa
fisubs
je
lret
stos
and
rolb
idivl
pop
add
addl
fstpl
repz
cmp
shlb
mov
xchg
and
or
fisubrl
punpckhdq
cmc
mov
push
js
jnp
fistpll
das
loopne
lea
dec
ljmpw
cmc
lods
sti
sub
pop
fcomp
les
dec
lock
daa
xchg
xor
jg
leave
js
add
pushf
lds
mov
mov
mov
test
sbb
dec
fldenv
push
js
sub
mov
mov
fld
outsb
shlb
dec
add
sti
mov
inc
mov
dec
mov
inc
pop
xor
sbbl
adc
imul
push
or
fiadds
push
lock
inc
mov
loope
inc
fsubrl
pop
scas
xchg
sub
or
dec
mov
sub
xchg
mov
adc
negb
lea
out
mov
push
or
in
dec
jle
add
mov
sub
jl
mov
call
aaa
subl
cs
dec
mov
cmp
mov
jge
sub
test
jnp
mov
out
shlb
sbb
addb
mov
imul
repz
loop
in
outsb
insb
jmp
push
nop
mov
xor
mov
inc
or
push
lds
jne
gs
mov
lods
or
sub
xchg
out
sub
pop
fmull
mov
jo
mov
cli
sbb
je
xor
dec
call
test
pop
decb
or
addb
push
das
inc
add
xor
cmp
movsb
cltd
fsubr
and
push
repz
mulb
in
mov
adc
fidivrl
mov
sti
push
add
scas
jns
cmp
cmp
test
xor
or
test
mov
sahf
push
int
or
outsb
gs
pop
loope
jo
dec
leave
int3
or
mov
ret
and
xor
imul
xor
in
andl
push
sbb
adc
xor
pop
add
add
sub
add
jae
cmc
dec
jb
outsb
ret
cmp
mov
ret
sbb
jl
push
pop
pop
inc
fsubrs
fbstp
lret
addb
xchg
fimull
jnp
cmpsb
rorl
into
loope
cmpsb
xchg
insl
xorps
jo
fmull
jge
dec
pop
nop
fsubrl
xlat
mov
mov
add
pop
dec
and
leave
xor
pop
lods
mov
ja
int
dec
mov
lock
das
sti
sbb
dec
sahf
stos
push
cmc
insb
lcall
xor
shll
int3
lret
leave
add
push
imul
or
fxch
call
lahf
movsb
in
xor
in
outsb
gs
fistpll
jp
cmp
or
ds
cld
ret
loopne
mov
stos
or
push
sti
movl
push
jecxz
sahf
push
cmp
and
imul
push
pop
repz
arpl
mov
sbb
jne
in
lods
stos
sbb
ret
xchg
xor
das
jo
lock
sub
xchg
into
mov
movsb
leave
cmpsl
in
out
adc
repnz
sub
das
jmp
leave
cmpsb
aas
dec
das
fsubrl
leave
daa
mov
jne
icebp
xchg
in
imul
les
out
cmpsb
movsl
lret
sub
and
inc
adc
pop
fidivs
jmp
jg
xchg
push
popa
sub
adc
dec
out
jg
mov
dec
in
xchg
lcall
andb
les
lcall
into
leave
cs
mov
pop
mov
aad
fs
push
imul
loopne
or
out
cld
jecxz
iret
addr16
push
add
dec
rcrb
pusha
flds
pop
leave
mov
xchg
mov
and
pop
inc
out
mov
fs
rorl
lods
xor
or
mov
dec
cld
sub
cs
mov
adc
arpl
jmp
add
cmc
mov
insb
std
lods
test
test
fucomip
and
fcoms
mov
fdivl
mov
cmp
inc
std
pop
lret
ficoml
ss
sti
dec
push
inc
mov
cmp
cmpsl
or
mov
cmp
push
push
jno
ds
outsb
mov
stos
cltd
fiadds
inc
scas
jne
add
test
hlt
jnp
repz
int
sub
js
ljmp
stos
ret
pop
sub
dec
dec
aam
jg
ficomps
loope
jne
insl
sbb
iret
imul
cmp
mov
daa
pop
test
fisubl
mov
sbb
xor
gs
cmp
adc
scas
cmp
cli
mov
and
pop
mov
push
pop
sbb
and
mov
jp
fsubs
into
add
and
incb
call
cmpsl
mov
dec
mov
cmp
adc
adc
cmp
mov
outsl
add
lcall
xchg
test
jno
loope
bound
in
ljmp
inc
scas
ret
xchg
lahf
fsubs
push
pop
popf
mov
fsubrl
pop
inc
or
inc
call
inc
lret
sbb
in
fnstcw
jo
test
inc
es
std
cmp
movsb
int3
mov
mov
pop
or
out
sub
stos
add
call
sahf
stc
sarb
and
test
ljmp
push
dec
sarb
dec
cs
cmp
dec
cmp
test
jmp
adc
pop
xor
jg
outsl
or
nop
bound
cli
mov
push
jg
jns
push
mov
cmp
pop
lret
mov
int
xchg
outsb
addr16
and
mov
add
dec
lret
add
and
sub
fildll
rorl
or
mov
mov
les
cmp
out
sbb
scas
pusha
lret
xchg
test
add
mov
cmp
jbe
mov
les
fcmovnb
dec
and
mov
hlt
filds
adcb
movsb
js
jns
out
addr16
lods
out
push
aam
insb
pusha
xor
popf
mov
push
out
scas
pop
dec
aam
iret
mov
cmpsb
stos
je
int
add
insb
sub
loop
jns
lret
cwtl
mov
negb
in
idiv
xchg
cmp
sbb
add
add
add
out
jno
popa
and
lret
in
add
popf
pusha
push
hlt
dec
arpl
int
mov
mov
int3
fstpt
dec
js
fwait
stos
jnp
cli
dec
pop
es
push
insl
mov
pop
add
test
pop
int
jo
mov
and
test
jb
push
jmp
in
sahf
nop
aas
hlt
sub
jo
sbb
pop
addl
fimull
jp
inc
jb
call
xchg
mov
stc
inc
ljmp
pop
jecxz
ret
mov
xor
cwtl
subl
jo
ljmp
push
lock
paddusb
push
out
xchg
aas
sub
fiaddl
xor
xor
push
data16
out
mov
mov
push
add
ljmp
fisttpll
mov
mov
inc
jp
icebp
pop
lods
jle
dec
scas
cmp
test
in
jg
xor
das
add
cmp
cmpsl
adc
and
sahf
enter
enter
push
cs
cld
jno
sbb
jb
daa
add
aas
loop
je
mov
cmc
je
pop
xchg
shrb
ss
fwait
or
mov
xchg
das
xchg
aaa
dec
sub
mov
shlb
test
push
lock
and
subb
sbb
or
fiaddl
stos
jb
sbb
push
fnstsw
pop
and
jns
and
cmp
rcll
xor
xchg
sub
inc
sti
add
and
lcall
xlat
mov
pavgw
insb
es
ret
bound
cmpl
or
mov
xchg
rol
addb
cli
imul
scas
dec
shrl
xchg
mov
aas
int
sbbl
rol
xor
adc
stc
andl
sub
sbb
jmp
rcll
mov
mov
mov
cmp
inc
lret
fidivrs
shlb
mov
fidivrs
subl
aaa
sahf
push
cmp
xor
imul
scas
mov
movsl
xchg
sarl
popf
mov
inc
sub
out
scas
sbb
lock
cmc
xchg
jne
rcll
mov
xor
sub
lcall
repnz
cld
lahf
adc
out
sbb
std
pop
or
sub
pop
cld
lods
cmp
scas
cs
fmul
push
jp
ss
dec
and
dec
lahf
aas
jmp
sbb
jge
fstpt
xor
xchg
sbbb
jecxz
sub
ret
nop
dec
pushf
insl
jle
jp
leave
popa
fimuls
xchg
pushf
jg
adc
or
popa
pop
ret
xor
xor
xlat
in
fisttpll
loop
dec
fists
xor
out
cld
fwait
loopne
jecxz
movnti
fsubl
xlat
push
push
gs
or
push
inc
call
sbb
cs
mov
enter
test
sbb
stos
int
jb
cld
pop
mov
inc
test
xlat
test
sbb
les
push
push
andl
jmp
and
push
jecxz
pop
aad
push
sbbl
lock
incb
add
cmpl
jno
aad
cmpps
pop
mov
hlt
insb
shlb
in
adc
inc
mov
dec
in
jnp
andb
dec
hlt
ds
xorl
mul
iret
sbb
test
sbb
or
cmp
cwtl
xchg
inc
icebp
subl
mov
push
cmp
mov
jle
ljmp
outsl
stos
pop
stos
dec
pushf
dec
jnp
fld
lret
dec
fnstenv
fidivrl
lds
cmpsb
fcmovnbe
scas
pop
xchg
jle
rorb
push
or
mov
jnp
fisttpl
in
adc
inc
push
shll
insb
xchg
cmp
dec
in
lods
cmp
in
cli
sub
fwait
adc
es
stos
repz
jl
sub
mov
add
mov
pop
mov
dec
mov
cmpsl
ret
aad
dec
inc
jecxz
jecxz
mov
lods
xchg
in
popf
aas
enter
in
xor
and
test
or
cld
jg
hlt
jae
aam
ret
sbb
cmc
cmp
movsb
push
jle
in
xor
cmpsl
mov
or
ja
inc
dec
pop
lds
shrb
ja
xchg
addb
bound
insb
and
mov
lret
cmp
dec
cmpsl
jne
mov
mov
mov
fmul
dec
data16
mov
xlat
cltd
add
out
into
pop
ss
sub
jge
rorl
sub
imul
int3
sub
mov
mov
push
sbb
push
enter
cltd
mov
or
dec
or
aad
cmpsl
loop
or
aad
dec
jo
and
dec
les
jnp
out
sbb
rcr
outsb
cwtl
test
dec
sbb
xchg
or
mov
stc
test
fs
js
test
loope
test
pop
sbbl
jle
cs
addl
cli
add
call
ds
dec
mov
insl
adc
push
jnp
mov
push
pop
push
int
or
xor
roll
imul
nop
mov
inc
jge
push
fsub
mov
jp
dec
pop
sub
or
push
pop
xor
mov
jnp
jne
xor
sbb
sbb
data16
jb
push
mov
jb
out
fsubrs
jae
xchg
and
jne
fs
jl
cmp
xchg
xchg
std
push
push
aad
sub
jns
mov
xchg
bound
ds
pushw
jle
mov
and
lahf
xchg
xchg
sub
sub
mov
ret
jp
xor
mov
lods
inc
push
fistps
mov
sarb
insl
es
lds
jge
outsl
pop
test
sti
loope
aas
lahf
gs
adc
xlat
loop
push
pop
sbb
jnp
cli
rorl
jne
test
sub
inc
lock
dec
pop
mov
add
les
push
push
test
sarb
push
aad
cs
lods
mov
xor
seto
fs
in
addr16
sbb
inc
jbe
test
sti
jae
or
jnp
xchg
ss
xor
jg
inc
es
add
xor
mov
imul
lret
in
dec
xchg
aas
gs
cld
ret
stos
roll
jnp
mov
push
movsb
adc
cmpsl
pop
xchg
inc
mov
cwtl
mov
push
jg
sub
fbstp
cwtl
jne
push
inc
adc
cmpb
popa
push
jno
dec
popa
arpl
cltd
xlat
cli
jmp
test
js
pop
addb
out
rol
sub
fwait
leave
orb
lock
inc
mov
or
sahf
cwtl
jle
movzbl
fldt
add
dec
xchg
jg
aad
push
daa
mov
test
push
and
lahf
and
push
jg
xchg
ja
fldcw
mov
aam
bound
xor
xchg
mov
cmp
push
pop
xor
cmc
mov
mov
dec
mov
inc
sub
mul
sahf
cmpsl
dec
shlb
lret
subl
mov
sub
add
rorl
lods
mov
adc
or
mov
nop
out
jb
lods
subl
test
xchg
mov
ss
inc
adc
mov
fndisi(8087
push
fisubs
xor
sbb
pop
push
sbb
xor
inc
hlt
push
sub
out
jmp
shrl
xor
arpl
fldenv
adc
dec
pop
push
push
aad
xchg
cwtl
dec
icebp
lret
leave
xor
call
jae
ret
shll
cs
sti
repz
dec
lods
into
gs
ss
xchg
mov
scas
mov
loopne
sub
fs
pop
cs
sub
ljmp
dec
cmp
cmpb
or
lods
sub
or
dec
ficomps
test
jno
and
jg
iret
sub
mov
mov
add
mov
mov
sti
imul
ljmp
mov
and
test
jl
in
test
aam
es
jle
add
fiaddl
nop
push
outsb
fwait
sub
repnz
push
cmp
mov
or
add
idivl
outsl
popa
inc
xor
adcl
xchg
fnsave
arpl
mov
jmp
scas
xor
jmp
mov
add
cmpb
stos
test
iret
lock
ret
cmp
scas
testl
cld
addl
fs
popa
pop
fstpt
lret
mov
sub
xchg
das
mov
ljmp
push
jns
nop
adc
das
lock
subl
lcall
pop
push
jb
addr16
lods
out
pop
cltd
xchg
or
xchg
orb
or
push
rcrb
mov
cld
xchg
out
fidivrl
sahf
mov
sbb
push
xchg
test
inc
mov
cmp
sub
xchg
test
adc
cmp
dec
cmc
popa
sbb
jg
xchg
mov
gs
cwtl
add
sahf
mov
mov
cmp
out
out
dec
imul
int3
aaa
inc
pop
mov
pushf
jo
jb
sbb
daa
push
bound
and
dec
fstl
rcll
stc
clc
jmp
adc
je
test
outsl
les
mov
mov
sti
shr
push
fmuls
jge
add
xor
mov
shrb
jnp
sub
mov
mov
loop
decb
out
ficomps
leave
xor
stos
into
dec
pop
ret
jae
xor
pop
bound
insl
mov
xchg
jp
or
xor
sub
cltd
dec
call
xor
ret
xchg
mov
xor
xorl
lea
cmp
xchg
cmp
shlb
bnd
adc
cmc
rcll
fwait
orl
test
inc
fildll
adc
mov
sbb
sbb
into
fdivp
push
pop
xchg
pop
push
cmp
pop
adc
rcrl
inc
movsb
scas
cwtl
dec
sar
xor
inc
cli
jl
into
out
xchg
fbstp
xchg
stos
ja
imul
dec
aas
loop
fcompl
scas
std
push
pushf
push
mov
pop
cmp
mov
data16
jle
add
int
fiaddl
mov
sub
bound
pop
jmp
xchg
gs
sbb
mov
in
lahf
dec
data16
ljmp
xlat
imul
jecxz
xor
and
jge
pop
push
leave
mov
insb
mov
push
add
nop
jecxz
xor
mov
push
push
sbb
pushl
jg
dec
pop
jecxz
adc
mov
out
xchg
imul
dec
mov
fistps
mov
out
jecxz
and
daa
fwait
das
in
adc
bound
into
test
push
hlt
add
outsl
repz
add
pop
ret
sbb
push
enter
lock
sub
repz
or
jmp
insb
xchg
cmp
and
dec
jae
in
out
mov
icebp
mov
or
jmp
or
xor
push
mov
add
dec
loope
lock
sub
pop
mov
sub
push
loop
fs
dec
add
out
pushf
dec
xchg
push
arpl
ds
mov
test
push
mov
jmp
xorb
xchg
insl
mov
xor
loope
ljmp
mov
inc
cmp
leave
add
sbb
inc
pop
and
shlb
enter
dec
inc
cwtl
jno
add
add
sub
cld
mov
js
test
ja
stos
xchg
pop
ficompl
lret
int3
cmpsb
xlat
popf
add
shll
loopne
xchg
mov
xchg
adc
sahf
movsb
jg
js
xlat
mov
notl
push
dec
gs
fisttps
pop
aaa
call
mov
subl
xchg
hlt
jg
loopne
or
scas
jp
scas
ljmp
push
sbb
fcomi
jl
jo
aaa
sub
jb
jo
sbb
ss
mov
fnstenv
inc
xor
mov
push
les
xchg
lods
pushf
sbbl
ret
inc
push
nop
lcall
pop
mov
test
psraw
inc
pop
lahf
xor
ds
inc
cmc
cmp
fstpt
lret
out
mov
lods
adc
enter
mov
xchg
imull
incb
mov
in
push
test
jle
test
mov
addb
jo
dec
xchg
sbb
or
idivl
fcomi
int3
test
pop
push
mov
jnp
push
es
test
cs
jmp
iret
mov
js
jo
loopne
add
insb
mov
fidivl
daa
int
outsb
bound
je
insb
ror
arpl
stos
mov
and
jb
push
cmp
sbb
lret
inc
data16
movsb
mov
pop
fsub
outsl
mov
cld
jnp
test
in
lods
ss
dec
stc
sbb
pop
aam
bnd
xor
loope
mov
xchg
out
iret
xchg
mov
inc
das
fbstp
pop
pop
mov
mov
test
imul
ljmp
ds
stos
ja
inc
and
out
mov
jnp
leave
dec
cwtl
sar
loope
lock
cli
jbe
lea
inc
or
mov
loop
fs
jbe
jge
sbb
fldt
mov
sub
and
pop
push
mov
andl
cs
mov
insl
cwtl
sub
jle
push
adc
aam
pop
cli
cmp
inc
in
scas
xchg
and
and
loop
push
pop
xchg
idivl
mov
popa
sub
xchg
dec
cmp
rol
aas
mov
lock
lock
lock
dec
stc
xchg
clc
cs
in
dec
lock
aas
and
xor
data16
inc
in
sub
aad
jge
ss
sahf
insb
lods
in
rolb
gs
loop
dec
pushf
cmp
out
mov
arpl
add
movsb
inc
cmp
loop
xchg
mov
call
cmp
fstpt
aam
loop
fstl
jo
dec
cs
adc
cwtl
add
adc
mov
fs
stos
mov
jo
popa
inc
pop
in
ret
mov
mov
cmp
cwtl
add
xchg
mov
and
cmpsb
or
movb
fxch
cli
push
adc
mov
and
cli
xchg
aas
sti
dec
popa
ljmp
xorl
pop
in
jge
xchg
das
push
or
and
jo
dec
loop
out
pop
mov
mov
roll
shrb
sbb
in
push
imul
dec
test
jno
adc
lret
cld
inc
dec
jb
mov
in
xor
fdivs
sti
pushf
or
adcl
imul
inc
jo
add
xor
inc
mov
enter
cmp
in
int3
int
lods
xor
icebp
add
popf
test
out
mov
pop
testb
and
aad
insb
and
push
mov
iret
and
in
int
insl
shrb
filds
loopw
mov
mov
xlat
in
iret
loop
pop
mov
call
mov
repz
inc
mov
stos
mov
pop
in
inc
daa
in
push
fcoml
push
addb
icebp
jmp
loopne
out
mov
push
xor
mov
push
ds
fwait
xchg
push
xchg
add
mov
lea
inc
js
lea
dec
xchg
and
mov
pop
js
xor
xor
pop
xor
mov
or
adc
inc
in
int3
sub
pop
sti
aaa
cwtl
stos
pop
das
dec
mov
xchg
into
xchg
jb
inc
out
lea
scas
cmc
or
or
in
imul
cld
sub
and
mov
rorl
dec
mov
mov
imul
adc
test
jbe
cmc
test
mov
aas
divl
jl
je
jbe
mulb
loop
flds
int
cmp
fstpt
addb
imull
mov
test
and
push
add
sub
scas
dec
fcom
test
jl
xchg
lcall
cli
add
adc
imul
stos
lods
xchg
gs
jae
call
aad
mov
pop
cwtl
rcrl
and
fwait
xor
dec
fdivs
cmp
push
sub
int3
lock
mov
popa
xchg
adc
jb
cwtl
push
jmp
cmp
lret
sbb
insb
outsb
jg
cmp
mov
jo
push
or
and
mov
in
mov
shl
orl
cwtl
test
mov
pop
fdivl
jge
xchg
mov
cmp
inc
idivb
mov
jg
fcoml
out
cmpsb
test
arpl
mov
aaa
jno
push
xchg
mov
out
mov
dec
push
repnz
dec
icebp
inc
stos
jnp
sub
xor
outsb
inc
orb
jae
outsb
lahf
xchg
xchg
stos
cmpsl
xchg
in
shrl
mov
cmp
ja
xchg
sub
inc
or
pushf
push
push
and
nop
imul
stos
fs
fldcw
adc
outsl
cmp
loop
adc
imul
dec
icebp
mov
xchg
into
jmp
dec
lret
repnz
fcompl
xchg
loop
in
inc
xor
dec
sub
adc
push
xchg
cmp
stos
xchg
aam
cmp
cmp
sub
sbb
push
das
insl
and
addl
xor
pop
inc
fmull
xlat
js
pusha
imul
lds
scas
push
mov
xor
test
mov
pop
fstpt
pop
fisubrs
test
xchg
scas
rcll
lret
cmp
sub
jbe
xor
xchg
into
fwait
push
mov
push
sub
xchg
add
cld
push
push
fidivl
mov
pushf
cmp
xchg
cwtl
jnp
fs
andb
sbb
cwtl
lret
ret
add
add
outsb
movsl
leave
mov
scas
cld
fwait
mov
jbe
stos
xchg
loopne
pop
scas
aad
add
cwtl
jp
fwait
jbe
int3
jb
or
hlt
mov
mov
test
out
dec
inc
pop
sbb
jno
jmp
pusha
movsl
mov
inc
cld
or
mov
jne
pop
sbb
mov
ja
rcr
dec
sbb
inc
xchg
cmc
mov
sahf
lods
cmp
cmp
loop
push
lcall
dec
shll
es
cmp
movsb
cmc
repz
and
orb
das
jns
push
rcrb
and
sub
outsb
xor
and
xchg
cmp
mov
jnp
sahf
js
jb
sbb
les
sub
and
dec
mov
aas
push
subl
scas
outsb
xchg
daa
inc
sbb
or
arpl
jb
inc
roll
mov
fnstcw
inc
out
mov
xchg
sbb
mov
bound
sub
lcall
ficomps
pop
lock
or
pusha
jp
fimuls
nop
stos
jns
fisttpll
pop
mov
sbb
imul
cmp
xor
sub
loope
xchg
jno
dec
test
popf
in
rep
insb
popa
dec
or
mov
ficoms
push
popf
insl
jge
mov
dec
bound
ds
loope
xchg
fcoms
mov
dec
xchg
js
xor
cmc
mov
addr16
outsb
cwtl
push
scas
inc
ja
ja
test
adc
retw
push
add
scas
ret
add
dec
mov
sub
xor
adc
cmp
cwtl
jge
xor
push
je
cwtl
insb
ss
sub
dec
xor
jbe
cltd
mov
and
test
push
aas
pop
imul
repnz
jae
inc
lods
arpl
out
mov
jmp
xchg
ja
mov
loopne
aaa
in
xor
pop
sub
mov
mov
shlb
movhps
sub
cmp
popf
dec
lret
jne
mov
ror
daa
xor
dec
pop
sarb
fdivrl
xchg
inc
fwait
or
stos
push
test
jb
je
loope
jo
test
les
push
xor
inc
xor
jno
cmp
xor
xchg
gs
inc
popf
xor
bound
sbb
dec
mov
std
sbb
mov
repz
pop
es
stos
out
cli
test
add
xor
and
call
dec
or
push
inc
mov
cmp
xchg
bound
jns
dec
stos
xor
or
jnp
mov
mov
xlat
lcall
or
pop
pop
mov
ds
test
and
mov
push
out
lret
cmpsb
nop
fiaddl
data16
xor
adcb
xlat
sbb
add
cmc
lret
daa
pushl
fdivl
icebp
cmpsb
push
addb
sub
repnz
lea
add
cmp
in
ds
cli
xchg
mov
in
jg
sbb
or
data16
xchg
bnd
or
xor
pop
pushf
mov
je
andb
fldlg2
sbb
or
out
insl
fstpl
jmp
pushf
ss
pushf
lahf
imul
mov
nop
xchg
out
imul
pop
xchg
in
or
cmp
repnz
outsl
cmp
ljmp
and
test
ja
sub
int
jns
stos
and
inc
lret
aaa
adc
aam
xchg
nop
ja
mov
pop
fnstenv
fmuls
ret
xchg
mov
insb
pop
and
add
cmp
jns
movsb
sub
repnz
adc
adc
or
push
aas
shlb
rorb
pop
mov
or
inc
rorl
cmp
leave
clc
or
addr16
loope
pop
inc
adc
cmc
out
cld
jbe
in
mov
stc
sub
je
int
out
jge
clc
jge
jbe
inc
xchg
or
out
mov
cmc
fsub
std
cmp
cmc
cmp
out
orb
dec
mov
ficomps
test
es
dec
push
mov
pop
or
push
sbb
fsubr
xor
sti
mov
jns
and
dec
jmp
inc
cmp
dec
gs
jb
es
test
pop
inc
push
sub
int3
lahf
inc
xchg
add
mov
mov
pop
roll
jnp
xchg
cmp
test
divb
int
cmp
add
mov
push
stos
xor
sar
fldlg2
shl
push
dec
xlat
int3
sub
cli
addr16
add
mov
or
lock
jge
mov
dec
and
subl
ss
add
in
adc
daa
ljmp
mov
cmp
or
xchg
pop
or
mov
inc
ja
and
xchg
mov
into
lret
dec
mov
adc
xor
jle
stos
fdivr
cmp
xchg
jo
mov
jbe
sti
inc
jo
mov
lods
roll
jmp
loope
nop
js
shl
push
xchg
mov
rcl
pop
push
mov
cmp
cmp
mov
fisubrl
cmpsl
mov
enter
sbb
lcall
enter
mov
sar
push
insb
data16
sub
ja
sbb
stos
jae
out
scas
in
imul
mov
xchg
imul
push
inc
popa
in
sbbb
inc
xor
jecxz
mov
mov
sti
pop
cmp
ja
stc
push
cmc
scas
nopl
aas
xor
xor
test
pop
lea
mov
iret
mov
imul
out
push
je
push
ljmp
movsb
mov
adc
fdivr
pop
js
inc
jo
scas
test
jae
insl
cs
cmp
cli
xchg
xor
dec
push
rorb
mov
cmp
push
mov
sub
and
mov
or
fstpl
mov
jnp
lret
js
popf
call
lods
push
jb
push
imul
daa
mov
sub
jl
iret
lods
pop
push
decl
cli
outsl
ja
mov
bound
xchg
call
arpl
test
push
mov
add
mov
fidivl
and
push
jns
xor
out
fnstcw
sub
push
sub
adcb
inc
int3
insb
mov
jo
fnsave
jnp
ret
inc
sti
jb
and
cld
mov
inc
fldt
dec
and
fstpt
rorl
sbb
scas
dec
test
aaa
mov
stos
mov
outsl
mov
scas
ss
lds
insl
repz
push
in
jmp
test
sti
sbb
out
sub
mov
out
test
add
in
mov
in
pop
mov
lods
sahf
incl
sbb
adc
sub
loop
out
fnstenv
cmp
or
ficoms
mov
loope
fnstenv
adc
loopne
xor
xchg
les
xor
mov
jo
push
xchg
fimuls
leave
ret
sub
cmc
insl
or
sarl
das
out
jle
fmuls
jbe
lret
mov
popa
mov
shll
pop
jg
push
bnd
jae
xor
orl
jmp
pushf
mov
fsts
loopne
add
dec
imul
push
out
sub
xchg
pop
loope
lcall
stos
push
xlat
push
repnz
pusha
lcall
in
loope
ja
mov
dec
orl
insl
pop
popa
cld
outsb
jnp
adc
int3
or
xor
pop
mov
inc
mov
jp
pop
ds
dec
or
xor
lret
cmp
jnp
adc
sub
xor
inc
mov
push
out
mov
fsubrl
jl
out
mov
out
and
repnz
or
lret
lret
loopne
lds
popa
fisttpl
loopne
xlat
xlat
mov
cld
jne
mov
shll
stc
popa
inc
sarb
test
loop
gs
orl
dec
gs
mov
cmp
aas
jae
jg
fildll
jecxz
les
push
jle
fidivrl
rorl
dec
idivb
or
and
xchg
pop
lcall
adc
ret
fldl
xchg
stc
dec
xchg
bound
fisubrs
fcoml
shrb
sahf
ss
sbbl
mov
xor
xor
outsl
mov
mov
insb
sbb
mov
bound
pop
popa
mov
push
push
faddp
xor
idivl
xor
mov
les
xchg
inc
sub
xlat
pusha
je
xchg
stos
fldl
stos
push
cmp
cli
in
jg
sub
push
sbb
xlat
ss
insl
call
or
insl
jmp
cmp
cs
push
subb
jg
or
sub
mov
lret
addr16
shlb
and
inc
bound
sub
inc
mov
cmp
push
sub
stos
mov
mov
into
mov
aad
cmp
test
jne
mov
cwtl
test
xchg
mov
pushf
lret
test
mov
outsb
mov
iret
lret
xchg
dec
in
dec
ret
xor
add
cltd
push
sub
cltd
lock
push
outsl
roll
adcb
mov
add
lods
insl
xlat
fists
jg
iret
xchg
mov
lods
in
pop
aaa
popa
jb
cmp
je
sbb
xorl
jecxz
pop
xchg
push
leave
jnp
jp
xchg
xchg
and
inc
js
nop
add
mov
sbb
mov
xchg
scas
jmp
mov
mov
cmp
mov
test
pause
xchg
mov
iret
jp
pop
mov
dec
and
mov
dec
jl
ljmp
leave
mov
mov
pop
jbe
push
inc
shr
sbb
sub
in
insl
outsb
dec
shll
push
lock
cmpl
popf
pop
pop
jbe
dec
add
sub
dec
outsb
xor
mov
insb
in
and
hlt
js
js
pop
sbb
adc
mov
adc
cs
in
pop
repnz
push
push
orl
and
into
mov
mov
je
rcll
cmpsb
loope
enter
insl
js
jg
iret
es
inc
mov
mov
popl
lods
push
insl
xchg
js
scas
std
sub
push
mov
js
movsb
popf
adc
mov
push
cmp
cmpsb
loopne
and
imul
nop
sbb
mov
add
xchg
repz
jns
aaa
sti
push
popf
mov
cltd
sbb
pop
insb
pop
xorb
fistps
rcr
adc
enter
xor
lds
pop
iret
jle
and
or
loop
add
mov
in
dec
arpl
lcall
cmc
inc
push
pop
and
into
in
push
rolb
lock
push
jg
imul
cmc
adc
icebp
add
jbe
or
insl
sbbb
movl
sub
xor
and
xor
mov
or
aaa
mov
mov
cmp
and
popf
jo
pop
sbb
stc
xor
jp
add
xchg
push
outsb
mov
insb
dec
xor
mov
push
test
xchg
fbld
out
movsb
insl
scas
ret
repnz
lock
lods
cld
push
aam
push
fsubrs
push
fmulp
pcmpgtb
fwait
addr16
jmp
pslld
push
popa
mov
xchg
scas
cs
cmp
mov
mov
sbb
dec
jmp
sub
cmp
mov
rcl
ss
dec
movsb
test
xor
test
scas
test
movsb
cmp
fisubrs
push
fcoms
enter
cmp
mov
adc
leave
jmp
les
and
jns
fimull
xchg
loope
out
enter
rcrl
pop
xchg
aaa
stos
rorl
pop
addb
xchg
pop
in
mov
sub
push
mov
mov
rol
jmp
aas
fisubrs
out
inc
mov
cmp
fisubl
sbb
dec
mov
mov
mov
push
int
cmpsb
mov
xchg
cli
ljmp
pop
mov
cld
sbb
je
lods
cmpl
aam
pop
sub
sarl
dec
cmp
push
mov
push
es
mov
xor
mov
jle
lahf
sbb
cmp
jp
ret
push
aam
jecxz
ret
das
add
fdivrs
ljmp
lcallw
rcl
dec
lods
call
rcl
ret
std
lods
cwtl
enter
mov
lods
sti
fidivrl
scas
dec
jnp
mov
jmp
test
fwait
mov
je
data16
cmp
dec
or
adc
and
adc
das
pop
mov
xchg
add
imull
mov
xchg
jmp
xlat
mov
fs
insb
sti
jo
or
fsubr
push
jno
jno
sbb
or
je
cmp
jl
inc
jnp
mov
icebp
adcl
xlat
fisubrs
les
sub
jecxz
jnp
and
inc
out
lds
mov
or
xorb
movsl
cmp
ljmp
cmp
insl
insl
cmp
movsb
dec
arpl
sbb
and
mov
jg
push
bound
push
jp
mov
dec
jge
sti
mov
testl
dec
inc
sub
cwtl
insb
sahf
mov
or
push
xchg
push
mov
aas
sub
cs
and
test
sub
lahf
cmpl
popa
dec
addr16
loope
mov
push
shl
jmp
ret
sub
mov
rcl
xchg
mov
notb
movb
adc
data16
cmp
push
or
inc
cmp
pop
push
jns
xor
pusha
or
pop
push
ja
mov
mov
js
dec
test
setne
jno
rorb
inc
push
ja
pop
cs
push
jns
push
pop
dec
jge
jg
adc
mov
loope
sahf
insb
xchg
in
jle
scas
jnp
add
movsl
int
pop
out
cmpsl
in
dec
imul
pop
or
mov
xchg
les
pop
fwait
into
mov
mov
rorl
dec
cmpsb
pop
std
dec
or
adc
and
lea
jg
ret
push
sbb
stc
arpl
lcall
mov
int
mov
rorb
test
loopne
das
movsl
popa
push
decl
cltd
push
xor
pop
dec
in
push
mov
loope
jno
lods
push
and
and
rorb
jo
cltd
mov
out
lret
data16
mov
adc
push
test
jns
jb
aam
xor
lea
incl
ljmp
inc
pop
js
lahf
loop
popf
stos
cltd
xchg
xchg
in
aad
or
mov
add
mov
stos
push
pop
ljmp
mov
pop
pop
or
in
inc
insl
push
inc
sbb
sbb
ja
sub
jg
cmp
imul
or
sub
lods
inc
in
das
lds
insl
add
addr16
jmp
sbb
xlat
pushf
cwtl
in
sub
pop
fdivs
cld
data16
lods
cs
arpl
aad
sub
cmpsl
mov
outsl
insb
sub
mov
jecxz
stc
sbb
mov
shrb
mov
into
sub
fildl
inc
mov
cmp
adc
inc
aas
add
lret
sbb
fiaddl
les
repz
or
jge
xor
jp
jo
dec
and
xor
xor
cmp
adc
out
cmpsl
mov
jno
mov
add
cli
add
stos
scas
std
sbb
test
mov
outsb
lret
aam
loop
in
mov
push
popa
out
jbe
std
in
mov
test
iret
sub
popf
out
sbb
jno,pn
stos
xchg
pop
repnz
lds
insl
ljmp
jne
fistps
push
sbb
adc
pop
mov
int
lcall
js
cmp
in
sub
inc
sbb
fdivrl
in
clc
adc
aas
cmp
fdivr
jge
jg
sbb
xor
aam
fs
jge
mov
cwtl
add
jbe
mov
jno
nop
or
outsb
or
outsb
jg
aas
xor
insb
add
insl
imul
add
mov
mov
sub
mov
push
lods
into
push
add
bound
cwtl
cmp
mov
fistl
dec
xchg
cli
test
mov
push
sub
cmp
cmp
mov
xchg
loope
mov
fidivrs
mov
xor
push
or
cmp
movsl
lret
push
out
mov
add
idivl
jnp
fidivrs
jne
cmp
mov
rcrl
sahf
repz
push
movsb
mov
mov
jnp
in
pop
dec
popf
jo
outsl
test
inc
push
xor
and
and
cmp
test
stc
push
imul
mov
jecxz
out
clc
sahf
xor
insb
or
imul
cmp
cmp
clc
pop
ds
jge
mov
cmp
fwait
dec
sbb
adc
aas
push
scas
xor
je
insl
loope
jnp
scas
pop
cmp
mov
pusha
outsb
jge
popf
pop
js
icebp
push
sub
jl
std
and
push
int
cmp
jne
inc
push
hlt
pushf
cwtl
push
loopne
mov
sarb
in
mov
icebp
add
mov
cld
std
jmp
lcall
fidivl
xlat
inc
icebp
fldcw
lcall
nop
xlat
sbb
inc
or
je
push
mov
rclb
sub
movsl
pop
sbbl
xor
push
subl
int
inc
ret
shrb
sbb
adc
adc
jne
clc
aas
add
std
push
cmp
test
shll
mov
lret
out
inc
inc
or
fs
cltd
push
xchg
push
nop
test
jns
fcom
push
in
loop
jo
pop
ret
test
mov
jae
cmp
mov
je
fsts
daa
xor
lret
int
fs
rcrb
mov
testb
or
sbb
sahf
push
loope
hlt
add
push
cli
mov
push
sub
jo
xchg
push
adc
xor
test
outsl
mov
fidivrs
xchg
dec
jge
push
mov
hlt
loop
loopne
adc
pop
lods
xorl
or
jle
or
lahf
mov
es
or
pop
adc
shl
or
loop
and
in
mov
jne
cmp
mov
ljmp
xor
xchg
mov
ficomps
pop
inc
lahf
mov
sbb
sub
lods
inc
jecxz
insl
das
cmc
and
mov
cltd
mov
jnp
pop
cmp
dec
mov
xor
sti
and
mov
es
insb
shll
into
gs
xorl
js
std
mov
add
dec
pusha
mov
into
ss
inc
jnp
data16
ljmp
mov
xchg
stc
sub
mov
xchg
out
inc
ror
pop
ds
jo
aam
jecxz
mov
imul
mov
orb
fs
popa
add
stos
add
lock
inc
inc
push
int3
jecxz
push
jl
add
push
dec
movsl
in
in
jge
enter
push
or
xor
jb
lret
cwtl
inc
push
sahf
mov
inc
push
jmp
xor
leave
int3
jnp
daa
sub
cwtl
or
jb,pt
push
add
leave
mov
jnp
pushf
frstor
and
stos
fstp
mov
jno
jle
add
jge
mov
mov
orl
jmp
lds
adc
addr16
rorl
mov
mov
icebp
scas
mov
addr16
sub
aad
das
test
mov
mov
mov
xchg
sub
add
mov
addl
ljmp
push
bound
inc
mov
movsb
call
xchg
aad
or
adc
les
dec
fwait
or
enter
lret
push
call
mov
inc
push
adc
dec
popa
insl
push
sbbb
fldcw
aaa
cmp
js
std
xor
jecxz
test
pop
scas
leave
add
cmp
sbb
gs
sub
and
popa
push
mov
lret
mov
ret
mov
or
cmpb
loop
aam
je
or
and
test
daa
stc
test
dec
cld
loopne
les
dec
cmpsl
mov
sub
mov
out
mov
addr16
imul
adc
call
into
adc
stos
jge
pop
sbb
push
pushf
ss
dec
dec
jp
lret
aaa
int3
jge
outsl
or
aaa
call
fcoml
movaps
out
mov
fxch
cwtl
cs
xor
push
or
adc
adcl
outsl
jp
mov
scas
in
cs
int
mov
pop
cmp
sar
aaa
push
loopne
cs
xchg
cmp
push
pop
movsl
adc
cs
inc
mov
popf
push
lock
lret
ret
mov
lock
inc
test
pop
xchg
mov
adc
pop
ret
daa
mov
ret
nop
pop
xchg
xlat
mov
lods
jp
and
int
jae
insl
sub
testb
pop
insl
sbb
popa
mov
stos
je
jno
pop
notb
pop
das
push
call
mov
data16
inc
or
sbb
add
jbe
popa
lods
dec
inc
push
shrl
mov
ljmp
mov
and
shlb
in
fcmovb
mov
sub
mov
mov
mov
and
xor
js
decb
adc
fisubl
lea
xchg
mov
testl
push
les
pusha
scas
push
mov
movsb
cmp
fdivr
xlat
outsb
lock
sbb
push
popa
inc
xchg
xchg
stos
xchg
lods
dec
pusha
pop
adc
mul
pop
aad
xor
out
mov
repz
insb
push
push
or
pop
ror
add
ljmp
xchg
dec
xor
mov
adc
out
repz
and
ss
or
jo
ljmp
jle
outsb
outsl
in
push
in
or
xchg
aas
and
pop
xor
jmp
testb
test
xchg
dec
mov
cmp
dec
stc
fldt
xchg
jbe
pop
ss
push
ds
das
dec
or
cmp
mov
and
mov
imul
xchg
das
rorb
or
jbe
xor
dec
cs
push
mov
lock
jle
xor
push
add
sub
std
add
stc
loope
cli
sub
push
clc
lret
shll
jmp
mov
mov
xor
lret
ss
ds
icebp
jbe
mov
and
or
aaa
movsb
icebp
nop
mov
adc
sbb
ficomps
lock
lahf
cmp
mov
fnstcw
sbb
jmp
pop
sahf
cmc
aam
pop
lea
loopne
shll
jnp
jae
mov
pop
push
rcrl
dec
dec
push
clc
add
jns
stos
jecxz
imul
fidivl
cmp
outsl
xchg
jmp
cmp
or
lea
out
fs
dec
inc
and
pop
cltd
inc
popf
mov
sti
push
push
push
lcall
sbb
dec
cmp
adc
dec
lds
sub
aad
gs
repnz
and
dec
fwait
cmp
pop
gs
lret
pop
mov
jge
aaa
lret
scas
sub
add
movsl
inc
mov
in
xor
adc
adc
ds
popf
dec
aaa
int3
xchg
insb
aas
push
lret
fldcw
data16
int
or
ljmp
in
lahf
call
out
mov
lock
stc
push
push
pop
fdivs
cmp
xor
and
outsb
fdivl
xchg
sahf
fstl
lods
and
fmull
xchg
cmc
ss
sub
out
shlb
dec
loopne
push
or
movsl
mov
std
xorl
push
and
pusha
das
inc
xchg
pop
or
mov
ret
fadds
dec
mov
mov
push
int3
push
mov
jl
fcmovnbe
mov
lahf
push
sbb
sub
cmc
xlat
jne
jge
stos
xchg
ficompl
dec
call
or
sahf
jge
stos
ss
mov
add
xchg
xor
shrb
js
pop
cmc
sbb
movsb
sbb
jb
shlb
or
cli
inc
andb
inc
loope
xor
mulb
push
das
call
and
mov
xchg
jg
andl
jp
cmp
dec
jge
into
push
out
push
jle
sub
roll
push
test
incb
cmc
pop
pop
cwtl
roll
xorb
ss
sahf
ss
mov
mov
jns
xchg
aas
gs
jb
jp
xchg
les
pop
xchg
mov
or
inc
in
fcoms
cmpsl
xor
ret
inc
mov
es
divb
fwait
inc
insl
lret
or
sub
iret
and
sbb
scas
imul
bound
pusha
jno
mov
fistl
imul
pop
cmc
hlt
mov
sub
adc
sahf
jecxz
inc
outsb
jmp
clc
and
jle
push
mov
roll
dec
adc
addr16
and
cmovnp
adc
dec
xchg
scas
xchg
jae
ret
jge
adc
mov
lret
out
pushl
cwtl
mov
cli
fst
push
push
in
test
sbb
dec
pshufw
mov
out
cmc
cli
push
add
sub
daa
lcall
std
mov
lock
imul
or
inc
ret
or
cmp
out
pop
xor
jge
jmp
fsubrs
test
cli
mov
stos
insl
cmpsl
lods
dec
inc
jo
adc
mov
in
scas
arpl
cmpsb
pop
outsl
aaa
lods
pop
push
rorl
in
jno
and
out
jbe
mov
aam
cli
pop
xchg
hlt
pop
pop
xchg
dec
mov
dec
and
scas
cltd
stos
in
push
ljmp
jae
xchg
inc
jg
mov
jle
xchg
or
push
xor
sti
pop
cmpsl
loopne
mov
adc
int
lods
stc
in
mov
xor
mov
jb
xchg
mov
pusha
or
mov
pop
xlat
mov
push
cltd
cmp
push
adc
cmp
lcall
mov
mov
mov
pop
fidivrl
inc
mov
inc
inc
mov
sti
pop
loope
mov
mov
xchg
dec
lock
fnstenv
ljmp
inc
loopne
rcr
adc
push
fldl
aam
and
pop
xchg
stos
hlt
fsubl
inc
dec
call
jg
or
in
daa
sahf
jl
ss
sub
cli
movsl
fnstenv
and
scas
mov
test
mov
jmp
mov
cmp
jmp
mov
ds
xor
ss
push
jp
pop
xor
mov
popf
test
movsb
mov
in
mov
imul
mov
movl
sbb
xchg
dec
lds
outsb
inc
mov
hlt
rcrl
call
pop
fidivrs
cmpsb
mov
mov
test
in
imul
enter
shlb
ss
mov
stos
in
dec
clc
jnp
mov
sbbb
mov
sbb
imul
pop
mov
lods
mov
test
sahf
cs
adc
mov
ljmp
push
jmp
jae
in
mov
hlt
gs
scas
push
mov
jle
jp
test
sub
dec
push
lods
and
inc
cld
xchg
pop
mov
in
dec
xchg
popa
incl
push
rolb
clc
and
scas
jecxz
dec
movsb
loop
outsl
add
push
jbe
jne
into
cwtl
shrl
or
jb
lods
jo
push
jbe
mov
lret
mov
cmp
leave
xor
adcl
sbb
fwait
cs
inc
and
xor
out
inc
mov
pop
mov
in
push
dec
mov
rorb
xchg
dec
popa
lahf
mov
cmp
les
xchg
push
fdivs
inc
dec
dec
loopne
or
outsb
mov
pushf
shrb
add
dec
fdivrs
cmp
or
dec
sub
in
cmc
lcall
cmp
mov
adc
add
imul
cmp
adc
movsb
sbb
repnz
cwtl
mov
dec
adc
adc
push
adc
fnstsw
loop
js
xchg
insb
lret
pop
repnz
js
insl
in
jge
dec
nop
aas
xchg
insl
push
fsub
aad
fisubl
add
jmp
push
xor
out
push
xorb
dec
sbb
jb
cli
imul
fadd
mov
mov
cld
mov
xor
imul
mov
mov
jae
xchg
dec
lahf
jno
nop
call
lods
sub
js
lret
hlt
sbb
stc
push
nop
xchg
and
repnz
popa
or
lret
outsb
push
aas
notb
lds
jbe
fsubr
popf
sub
nop
jo
mov
push
dec
sub
xchg
out
push
outsl
inc
sub
sahf
sti
clc
xor
mov
pop
outsl
and
inc
popa
mov
sub
xchg
pusha
repz
inc
popf
fcomps
movsb
ja
adc
into
inc
sar
out
js
sub
jno
mov
mov
dec
jp
jo
sub
outsb
jns
repz
push
xorl
inc
loop
pop
pop
loope
push
xlat
mov
or
mov
adc
push
icebp
mov
insl
mov
inc
in
jbe
xor
push
pusha
into
jns
and
in
repnz
test
xchg
cmc
dec
in
add
in
pop
or
xor
lcall
jb
mov
inc
hlt
mov
mov
cmp
xchg
sahf
push
and
pop
outsl
or
dec
dec
pop
test
mov
mov
test
fisttps
daa
andb
xorb
outsb
mov
xchg
sub
pushf
adc
or
mov
idivl
sub
imul
cmp
aam
mov
aas
mov
ret
popf
out
push
test
pop
add
jns
cmp
mov
mov
lods
bound
test
into
fidivrl
add
outsb
xchg
cs
sbb
mov
sbb
jge
cmpsl
fs
lret
hlt
push
jno
and
out
xchg
xchg
stos
data16
fildl
sub
into
adc
scas
push
sti
adc
push
hlt
add
mov
xchg
shll
cmp
lods
fsubrl
push
jno
or
hlt
pop
addb
mov
out
inc
add
push
mov
dec
fnsave
les
cmpb
loope
adc
sbb
cltd
push
stos
jle
repz
andb
stos
push
loopne
nop
rcl
sbb
stc
ja
hlt
hlt
hlt
pop
dec
aad
subl
ja
inc
fstpl
scas
sub
mov
adc
add
xchg
insl
aas
pop
fsubl
dec
js,pt
mov
and
testb
or
inc
sub
rcr
xchg
stos
mov
je
lcall
xor
std
mov
stos
setl
sbbl
icebp
jge
adc
gs
test
iret
popf
mov
dec
in
xchg
lock
add
scas
push
cmpsl
in
jp
data16
jl
test
add
xchg
xor
or
inc
lret
mov
lds
shlb
movsb
and
std
or
mov
cmp
in
mov
jo
cmpsl
jne
cmp
or
mov
in
ja
or
repnz
pop
lock
lahf
adc
inc
shlb
jle
fwait
xor
andb
sbb
fsubl
lock
fcomps
adc
test
loopne
cld
lahf
adc
dec
mov
fcmovu
pop
mov
ss
add
or
stos
fistps
mov
add
les
pop
adc
mov
ret
dec
mov
mov
fisttpll
inc
test
rclb
in
mov
cmpsb
out
cli
mov
andb
mov
adc
and
bound
push
push
outsl
dec
lea
lock
popf
add
ficompl
sbb
jp
lcall
mov
sub
pop
jae
sbb
outsb
jnp
scas
sbb
fdivs
sub
mov
or
cmp
push
push
stos
pop
push
in
xor
data16
fwait
call
bound
sbb
loop
je
cmpsb
xor
inc
push
dec
cltd
lock
outsb
dec
sub
sub
outsl
out
adc
xchg
fcoml
add
add
add
xor
sub
hlt
push
push
in
adc
shlb
scas
cmp
lcall
add
mov
mov
jl
jb
sbb
jb
lock
inc
inc
loope
pop
mov
in
mov
sub
add
or
pop
sub
jnp
bound
add
push
fisubl
inc
subl
hlt
popa
xor
std
xor
inc
call
mov
out
daa
jnp
and
jp
das
and
jl
xchg
test
and
stos
lock
loope
push
mov
push
fcmove
test
cli
iret
cmp
mov
jp
xchg
pop
jno
sbb
or
nop
hlt
orl
mov
xchg
pop
push
mov
pop
popa
fimull
jo
mov
jnp
in
mov
jns
shl
test
out
xchg
push
jmp
and
cmp
out
cmpsl
xchg
ret
test
xchg
enter
xlat
leave
cmp
scas
jl
jp
mov
cmpl
and
stc
or
jnp
mov
shrb
inc
mov
sub
mov
pop
adcb
lea
jle
cmp
stc
inc
inc
fldenv
xchg
add
nop
out
dec
punpcklwd
xchg
inc
xor
pop
dec
je
cmp
xor
push
mov
inc
pop
xlat
es
mov
lock
sub
mov
in
mov
out
lcall
push
xor
cmp
sub
fcomp
testb
xchg
xchg
inc
fdiv
cmc
les
and
lods
mov
inc
fidivl
add
xchg
mov
in
lods
adc
lcall
enter
dec
pushf
hlt
jne
mov
popa
cmpsb
dec
setge
or
mov
adc
and
push
xchg
mov
pop
mov
push
jmp
mov
push
pop
jo
jp
adc
xlat
cmp
dec
sub
mov
addr16
xor
jb
jp
mov
xor
mul
loop
les
fldz
sahf
push
push
jmp
jecxz
inc
or
pop
adcb
xchg
jmp
aaa
int
pop
xchg
lret
add
and
ljmp
push
push
push
lock
stos
fsts
xchg
fstpt
dec
mov
nop
inc
into
test
scas
fisttpl
sbb
hlt
pop
xor
sub
xor
cmpsl
repnz
push
jns
push
sub
ja
in
xlat
mov
les
and
dec
mov
mov
les
or
and
lods
mov
pop
pop
es
call
push
pop
aaa
fwait
push
dec
int
jbe
xor
push
cmpsb
movsl
negl
xor
sbb
mov
sbb
das
das
dec
mov
incb
addl
mov
dec
scas
test
mov
cmp
lcall
cmc
mov
and
adc
mov
cmp
testl
jecxz
or
or
add
mov
mov
clc
cld
or
adc
sbb
sub
clc
jge
sbb
push
out
fstp
cmp
or
or
push
aas
popf
fstpl
insb
ds
mov
dec
negb
test
pop
mov
cmp
mov
fwait
push
lahf
push
mov
mov
jns
leave
cwtl
xchg
xchg
jbe
arpl
mov
xchg
jbe
popf
cli
adc
inc
mov
dec
dec
test
and
outsl
xchg
sarl
mov
or
dec
insb
cld
insb
mov
lea
jae
fsubs
iret
loopne
adc
mov
subb
xor
sbb
adc
dec
sub
cmp
repnz
xchg
out
test
or
andb
daa
adc
push
pop
mov
rcr
rcrl
pushf
jbe
pop
lcall
pop
lcall
dec
addl
cmp
je
dec
cld
fnstsw
sub
call
adc
dec
cmpb
pop
xor
inc
pop
inc
orl
fcomip
xor
mov
jns
push
dec
mov
sarb
lcall
fwait
int
mov
fcos
iret
mov
inc
movsb
jmp
lcall
jae
into
jbe
mov
sub
mov
xor
adc
and
sub
and
pop
cmp
fnstenv
gs
dec
fdivrl
cmpsl
inc
inc
xchg
jmp
cmpsb
xchg
in
inc
push
mov
js
mov
cmp
xor
int3
shll
cmp
dec
pop
idivb
inc
and
ret
xor
jbe
xchg
xor
lock
jecxz
xchg
add
pop
ss
ljmp
mov
enter
jns
cmp
ds
data16
cld
add
sub
or
repz
daa
and
push
hlt
test
xor
push
out
adc
sub
mov
cs
sbb
ja
cmp
sub
loopne
orb
lea
mov
imul
dec
xor
out
cmp
mov
jmp
sub
cmpsl
jbe
mov
mov
leave
mov
aas
outsl
pop
pop
inc
cs
pop
pop
setne
jl
lret
and
sub
cld
cmpsl
arpl
popa
shll
add
inc
fdivs
arpl
pop
addr16
neg
into
mov
cld
es
adcl
movsb
jo
or
cmp
js
stc
hlt
stos
pop
push
cltd
out
int
sub
cmp
popf
mov
sahf
xchg
es
dec
fs
lock
repnz
ja
out
test
mov
cmp
xor
push
stos
filds
insl
cmp
pop
push
or
outsb
fidivrl
mov
xor
push
xor
adc
ds
aas
leave
cld
repnz
pop
xlat
adc
adc
loop
fmulp
cs
sti
xor
jl
hlt
lcall
dec
das
mov
inc
pop
insl
loope
lock
mov
dec
mov
aam
imull
loopne
dec
sbb
bound
mov
xchg
xchg
sbb
add
sub
lcall
cmp
mov
adc
jb
cli
rep
call
sub
fsubrp
out
mov
int
out
push
add
ds
shrl
mov
or
stos
and
pusha
mov
cli
sbb
sbb
cwtl
jo
inc
sub
pop
adcb
jns
or
sbbl
mov
or
jb
enter
push
mov
cli
xor
and
enter
jb
pop
lods
cmc
fimuls
pop
movsb
and
inc
data16
jae
mov
xor
scas
push
jp
pushf
mov
push
xchg
inc
jle
subps
xchg
push
call
loopne
jns
jl
pop
fcoml
jle
aad
shrb
filds
das
xchg
cmp
mov
and
and
jle
jmp
cwtl
sahf
int
pop
fmul
lret
xchg
jle
decb
or
jne
sbb
outsb
imul
mov
rolb
scas
subb
push
xor
cwtl
or
mov
cmp
mov
sbb
or
mov
sahf
repnz
movsl
mov
xchg
sbb
data16
mov
push
sub
inc
aad
roll
inc
xor
jecxz
jb
push
sbb
jbe
jbe
jl
imul
sub
ss
int
repnz
cwtl
in
xor
test
jp
mov
mov
mov
in
in
repz
insb
mov
int3
popa
int
enter
push
mov
push
lods
or
popa
mov
mov
push
pop
sbb
int3
mov
lret
in
cmp
dec
outsl
cmpb
fstl
sub
adcb
and
mov
sar
addl
lock
mov
stos
pushf
jnp
fdivp
popfw
mov
lods
insl
imul
enter
sahf
or
dec
addb
xlat
test
mov
sub
jae
mov
imulb
test
enter
leave
sub
fldt
stos
and
arpl
repnz
ficoml
dec
outsl
xor
inc
mov
cmp
pop
fcmovb
jne
or
stc
testl
and
add
mov
sbb
addb
fcomps
cmpb
rorb
ss
cmp
lods
mov
jbe
ret
lahf
pusha
inc
lods
les
loope
mov
pop
lcall
xchg
outsb
sbb
jmp
lret
mov
inc
mov
leave
push
and
pop
enter
idivb
sub
fwait
push
mov
cmpsb
lret
add
inc
loopne
ret
outsb
lods
xor
pop
xor
js
push
jno
jnp
dec
outsl
pop
cmc
stos
lcall
pop
mov
dec
jbe
jne
xor
pop
add
popf
sbb
rorb
cmpb
pop
aas
add
xchg
xchg
cs
and
or
jl
xor
popa
xor
mov
inc
mov
xchg
sub
movsl
pushf
mov
mov
mov
cmp
xor
xor
lret
sub
fsubr
out
mov
inc
sub
sbb
lret
cwtl
in
nop
push
les
sbb
out
xor
dec
dec
mov
xor
cs
cmc
ja
popf
test
dec
mov
xor
jnp
jns
and
in
cmpsl
cmpsl
push
and
jb
lahf
lret
pop
mov
xor
inc
test
xor
addr16
int
jns
dec
rol
add
push
out
jbe
inc
test
popf
sti
jno
pop
divb
pop
dec
gs
xor
hlt
xor
and
inc
cmc
push
rorl
xchg
pop
push
js
push
mov
lahf
into
lea
nop
pop
jle
mov
mov
jnp
sbbl
cwtl
dec
mov
push
in
pop
pop
inc
pop
add
movsl
repz
ja
adc
shll
cld
int3
jbe
lods
pop
rol
add
ja
mov
fsubl
sbb
or
jl
aam
incl
mov
sahf
inc
in
aaa
jb
in
push
mov
shrl
inc
pop
add
push
cld
lcall
mov
int3
lret
xchg
lret
divb
add
in
nop
jge
icebp
imul
add
icebp
out
pop
adc
adc
mov
jae
mov
pop
andl
stos
xchg
hlt
scas
jmp
out
push
mov
mov
add
js
push
stc
js
or
add
pop
mov
lahf
outsb
test
das
or
push
cmc
pusha
lock
fsub
pop
addl
and
inc
cmovp
jne
in
pop
mov
sbbb
xor
dec
loope
jle
and
pop
rcl
test
addr16
mov
rcll
gs
cltd
mov
mov
sub
ror
leave
push
aam
xchg
jmp
pusha
xorb
add
jge
add
cltd
mov
pusha
lret
mov
movsb
mov
push
orl
andl
imul
mov
icebp
inc
jle
jo
pop
mov
stos
sub
int
dec
repnz
pop
and
dec
mov
ficoml
ret
xchg
aas
sub
inc
inc
lret
cmp
xlat
in
test
fdivrs
ficompl
ds
push
mov
xor
into
in
lahf
push
ficomps
xor
inc
inc
and
jb
popf
pop
ficompl
pop
in
test
ljmp
push
xor
and
mov
nop
pop
fsubl
add
imul
movsb
mov
xchg
mov
lret
dec
ljmp
add
cwtl
mov
jle
fcmove
sarb
add
mov
mov
les
hlt
or
das
test
testb
adc
mov
jae
xor
push
fucom
arpl
lods
sbbl
aam
cltd
movsl
inc
ljmp
or
xchg
mov
es
imul
int
add
mov
sbb
push
mov
mov
push
or
pusha
addb
mov
sub
jmp
adc
test
pop
mov
dec
cwtl
pop
push
dec
jo
repnz
les
jns
xchg
pop
inc
inc
and
or
mov
sub
or
in
adc
pop
cwtl
fdivrs
sub
arpl
ret
in
jge
xchg
fsubl
idivl
int
dec
into
cmpl
mov
cwtl
aam
imul
push
int3
xchg
push
push
negb
or
outsb
mov
dec
or
xor
cmp
xor
mov
inc
push
daa
fdivr
fxch
ret
sti
fisubrs
or
inc
mov
xchg
push
scas
jmp
inc
mov
xchg
imul
xchg
aaa
jns
adc
mov
std
popa
test
int
in
jne
lods
les
or
pop
push
jbe
push
push
pusha
xor
pop
icebp
or
dec
cmp
fs
ret
lahf
adc
cmp
leave
into
popf
mov
xor
cmp
out
inc
xchg
inc
fidivs
and
jp
out
mov
cmp
xor
out
add
mov
or
xchg
popf
lock
adc
mov
enter
cmpsl
or
or
ucomiss
cvttps2pi
mov
mov
mov
jp
loope
gs
bound
int3
add
adc
je
aam
xchg
jbe
stos
in
or
xchg
mov
mov
push
jge
mov
out
pushf
loop
aas
fmul
leave
mov
je
add
jns
ret
sub
xchg
mov
pusha
repnz
iret
xor
bound
mov
imul
jo
or
jb
push
addr16
jno
fildll
je
or
xchg
inc
cmp
sub
lahf
adc
xchg
cmpsl
mov
sbb
inc
push
dec
mov
push
sbb
cmp
dec
loopne
stos
cmpsl
cltd
xchg
jo
fdivl
ja
jne
shl
aas
rcl
or
cmp
pop
les
jno
and
pop
addr16
mov
and
inc
jns
pop
adc
aaa
fiadds
sub
enter
mov
push
sbb
xchg
lcall
push
add
test
cmp
push
mov
sahf
and
mov
dec
and
or
xor
cmp
jg
sbb
push
or
inc
testb
jmp
aad
inc
lods
imul
outsl
or
enter
jnp
insl
push
dec
jmp
jnp
fnstcw
sbb
dec
test
int
adc
stos
pop
scas
cmc
sti
xor
shrb
addr16
into
loopne
ret
aad
out
pop
repz
pop
lods
movsb
pop
out
inc
out
mov
movsl
jmp
mov
icebp
xchg
insl
xchg
pushf
mov
mov
les
ja
mov
jecxz
mov
cmp
lahf
mov
inc
ud1
popa
imul
mov
sar
sub
das
fisttpl
xchg
mov
popf
scas
out
shll
lahf
and
mov
les
sub
fcomp
loop
and
lcall
mov
inc
sbb
cmpsl
shl
push
or
test
adc
jae
ret
inc
xor
dec
pop
stos
xor
aam
or
popa
or
jnp
sub
lcall
sahf
mov
sub
aas
jnp
cmpsb
imul
lods
cmp
ret
pushf
repz
add
mov
mov
data16
inc
sbb
aam
dec
ja
bound
dec
sbb
pop
insl
cmc
cltd
adc
sub
out
pop
pop
es
pop
dec
inc
mov
hlt
pop
aad
sbb
std
loop
inc
add
andl
jecxz
lret
mov
mov
into
test
addr16
imul
in
push
in
xchg
das
and
dec
imulb
or
adc
jb
out
push
mov
je
hlt
mov
fisttpl
ret
shrb
mov
sbbl
std
cmp
out
movsl
popf
or
pop
add
or
push
jns
push
dec
js
shll
loopne
cmp
add
jae
and
xchg
imul
in
sbb
mov
cs
add
xor
sub
add
mov
outsl
xchg
xor
jge
dec
idivb
ss
mov
jle,pn
cmp
cwtl
jg
sti
and
sbbb
push
xchg
or
add
lds
das
push
push
jecxz
mov
inc
in
popf
pop
stc
inc
mov
loope,pt
xor
xchg
lcall
sti
mov
aam
push
sbb
lret
inc
lea
cltd
add
push
cmp
add
xchg
xor
fs
add
test
fcmovnbe
into
test
lcall
inc
sbb
xchg
les
pop
movsl
subl
out
jg
sti
sub
shld
push
movsb
mov
mulb
out
je
inc
decb
xor
data16
pop
cmp
je
insl
adc
bound
shll
push
js
xor
stos
imul
push
sub
mov
adc
xor
jle
push
shl
lcall
xchg
fdivrl
in
das
mov
fsubr
loop
loop
pushf
insb
cld
sbb
arpl
inc
lds
into
loopne
shll
out
sarl
lahf
pusha
mov
jge
bnd
adc
inc
rclb
inc
testb
dec
dec
adc
lock
dec
add
pop
pop
xchg
pop
sub
sbb
push
mov
test
jmp
cmp
mov
mov
jns
fidivs
fadds
xchg
hlt
pop
adc
jb
jne
cmp
in
jne
subb
test
outsl
cmpsb
pop
fwait
jno
repz
fisubrl
mov
gs
lret
xchg
gs
test
add
add
lret
shrb
movsl
inc
inc
gs
pop
cmp
pop
lahf
dec
subb
mov
mov
loopne
jae
or
xchg
or
in
stos
adcl
xor
dec
loope
out
xchg
in
int
jle
enter
mov
ljmp
cs
jp
mov
orb
or
loop
add
pop
fldl
inc
jnp
out
lea
mov
push
fcoml
mov
bound
xchg
jbe
xlat
insb
inc
loop
stos
push
cmp
outsb
xchg
fists
jl
xchg
mov
mov
xchg
cmp
enter
les
push
lods
fs
jmp
enter
cmpsb
jge
aad
popa
push
fisubs
jge
insb
push
mov
jno
push
push
pushl
enter
idivl
mov
jecxz
mov
fs
mov
hlt
dec
push
dec
les
aaa
fdivp
popf
mov
je
cmpl
fsubl
xor
or
xchg
mov
sbb
mov
adc
push
shll
dec
fiadds
lret
cli
jl
xor
xchg
cwtl
and
or
das
push
pushf
sbb
fists
vpsubq
push
aas
add
sub
out
dec
pop
ret
dec
xchg
sbb
sahf
xchg
cmp
in
cmp
pop
call
ficoml
ds
inc
dec
dec
rcll
sbb
pop
dec
jnp
mov
repz
cmpsb
shll
mov
sub
cmp
push
add
or
ja
jecxz
mov
aas
push
or
mov
mov
mov
scas
mov
mov
jno
and
scas
mov
jecxz
xchg
adc
lea
push
xor
out
fcmove
in
fmulp
lock
scas
ja
fldl
loopne
lock
push
dec
jbe
movsb
sti
cmp
push
imul
in
daa
insl
push
sub
mov
pop
test
mov
cmpb
popf
leave
jecxz
cmp
enter
pop
sbb
mov
mov
arpl
cmp
loop
stc
push
and
scas
cmp
repz
loope
pop
mov
leave
push
push
xchg
sub
dec
scas
stos
pop
mov
insl
mov
dec
adc
lea
pop
sbb
and
sti
fwait
hlt
andb
mov
lret
icebp
xor
jnp
mov
js
bswap
mov
adc
lcall
mov
jmp
add
xchg
push
clc
nop
xchg
outsl
adc
mov
adcb
lcall
and
cmp
cli
ds
insl
inc
mov
dec
push
sbb
pop
fabs
jns
andl
outsl
std
js
xor
sbb
cmp
and
pop
int3
imul
add
js
lock
out
inc
lret
xchg
jp
and
addb
sahf
and
cmp
adc
aad
jae
fsts
mov
jne
lahf
mov
lahf
dec
push
fwait
and
and
pop
inc
inc
imul
mov
cmp
sti
push
loope
fiadds
repz
fstpt
imul
scas
or
mov
shll
or
rcrl
ljmp
das
pop
mov
ja
fdivrs
dec
xor
jno
cmpsb
mov
or
cmp
fnstsw
push
daa
lods
push
adc
rorl
jns
push
inc
in
push
shlb
cmp
adc
xor
repnz
fs
shr
mov
lcall
cld
and
cwtl
mov
cltd
inc
stos
inc
push
scas
mov
subl
pop
dec
test
xor
iret
and
test
daa
ds
jg
outsb
cmpsl
mov
lret
mov
pop
cmp
pop
imul
mov
ja
mov
mov
sbb
sbb
lea
jp
pop
outsb
xor
dec
pop
push
outsb
or
in
push
jmp
pop
repz
out
adc
dec
out
bound
push
bound
dec
mov
test
mov
arpl
cmp
out
leave
mov
pop
dec
jp
test
stc
addb
pop
adc
bound
inc
push
push
nop
ljmp
fldenv
pop
mov
xchg
jb
push
outsb
in
mov
sub
in
sarl
push
int3
adcb
xor
movsl
jl
or
xchg
xchg
scas
test
mov
sub
mov
cwtl
test
and
sub
orb
jo
xor
ds
test
sub
rcl
sub
or
outsl
jnp
out
aaa
dec
nop
mov
in
mov
insl
mulb
push
jo
clc
lds
cmpsl
andb
test
push
popf
xchg
lock
xchg
adc
mov
mov
je
adc
dec
dec
inc
cwtl
xor
icebp
shlb
cltd
shll
push
xchg
sub
ret
or
int3
add
or
cmpsl
xor
mov
jbe
dec
loope
test
push
fisttpl
iret
inc
addr16
pop
xchg
cmp
arpl
jge
inc
push
popa
inc
jne
or
jo
clc
add
pop
dec
subl
mov
cmpsl
loop
lock
scas
daa
sub
xchg
loop
xor
inc
fistps
mov
mov
movsb
xor
push
adc
jbe
sti
into
test
dec
jno
leave
loope
add
jae
pushf
lcall
mov
push
lahf
icebp
mov
loop
iret
fs
sbb
sarb
js
nop
ss
mov
scas
xor
popa
sub
nop
out
jo
leave
and
adc
clc
mov
sub
or
fcomps
and
ljmp
aaa
push
xor
push
cwtl
cmp
pop
dec
test
repnz
jecxz
stc
loopne
fstpt
subl
add
fwait
in
cmp
cmpsl
xor
mov
lock
pop
scas
or
pop
aas
out
xchg
dec
mov
add
xchg
addr16
xor
mov
insl
loop
fwait
cmpsl
jne
out
movsb
call
pop
jle
or
jbe
aas
js
mov
addr16
jae
cmp
fadds
jae
jp
dec
jno
aam
push
add
cmc
sahf
ficomps
sub
sbb
lods
movsb
mov
pop
dec
jl
push
sbb
mov
pushf
inc
iret
ficompl
insb
stc
clc
mov
aam
or
xchg
push
icebp
inc
push
pop
fisttpll
inc
add
xor
fstl
jg
cs
lods
std
pop
xor
lahf
jge
cltd
test
aam
mov
push
jl
xor
mov
mov
or
ret
inc
xchg
push
fs
aad
push
add
mov
stos
je
xlat
test
test
xor
pop
mov
stc
in
xor
xor
das
out
mov
out
dec
dec
ret
push
pop
adcb
adcl
add
outsb
clc
cmp
mov
inc
cwtl
loope
dec
movb
sub
sar
ja
fimull
imul
loope
cli
pop
lds
cmpsb
cld
adc
or
push
jle
inc
adc
inc
mov
out
lea
jp
jmp
lcall
mov
pop
imull
aad
mov
shlb
xchg
pop
int3
pusha
add
aaa
jns
mov
pushf
in
shlb
or
mov
jg
xchg
popa
lahf
push
mov
jmp
ja
frstor
mov
add
cld
xchg
rcll
test
lret
mov
jl
bswap
call
insl
xor
mov
es
pop
adc
movsl
inc
fucom
sub
xchg
jno
push
stos
add
xor
mov
push
cmp
shll
sbb
fisttps
adc
in
jge
push
popa
sbb
xor
xchg
aas
xlat
out
loop
ficoml
inc
inc
jne
cs
and
xchg
stos
mov
xor
xlat
popf
dec
mov
cli
jnp
orb
movsl
popf
jo
cmp
js
sub
jae
popa
mov
into
jns
cld
adc
loop
sbb
lea
sub
or
push
push
fcmove
xor
sarl
das
sbb
or
fcmove
in
or
loope
jmp
arpl
cmpl
inc
xchg
add
stos
inc
xor
enter
fldl
cld
popa
push
or
and
dec
lods
mov
push
inc
je
sbb
push
dec
cmp
or
inc
fstpt
adc
jnp
jp
insb
mov
inc
lock
dec
pop
dec
loop
sbb
mov
mov
jbe
jno,pn
fdiv
pop
sub
nop
sarb
loop
in
outsb
test
in
movsl
pusha
andw
repz
jle
ds
outsl
lds
mov
push
popf
push
sub
xor
push
pop
xchg
xlat
out
repnz
jmp
mov
dec
cltd
or
fidivrl
or
std
push
push
push
test
jae
jge
push
arpl
call
iret
lret
lock
xchg
xchg
pop
or
or
push
fs
lret
bound
dec
fnsave
lods
jae
and
push
xchg
or
cs
jbe
int
jno
icebp
imul
add
cmp
rcr
adc
or
sub
cli
outsl
mov
jle
adc
sbb
mov
adc
lods
outsl
cmp
xor
dec
imull
xor
push
jns
popf
repnz
daa
iret
sti
add
enter
cmp
or
xchg
mov
pop
push
jg
or
push
dec
clc
sub
jo
sbb
sbb
fildll
jmp
adc
dec
mov
sub
inc
scas
out
add
jle
call
sub
mov
test
aam
sbb
inc
push
inc
xchg
lds
out
ret
adc
jmp
test
mov
add
into
dec
cmp
stos
sti
inc
lret
pushf
imul
mov
add
mov
imul
testl
lods
jl
in
dec
push
pop
cmp
cld
dec
movsl
jnp
aad
xchg
xchg
ret
aad
jmp
xorb
sbb
push
pop
fimuls
sbb
popa
gs
shlb
fnstsw
sbb
jp
mov
popf
test
jbe
out
loope
cwtl
aad
xchg
xchg
cmpsb
sbb
out
dec
stos
xchg
andb
je
push
movsb
cmpsl
or
fstpt
lods
xchg
ss
lahf
neg
mov
jge
fs
cmp
mov
pop
fbstp
lds
outsb
cmp
pop
pop
ljmp
sbb
push
jae
sbb
inc
or
in
jo
lods
cmp
movb
shll
jl
mov
mov
pop
jae
inc
cwtl
add
dec
mov
je
add
push
push
imul
mov
out
adc
xor
dec
sar
stos
inc
in
sbb
in
dec
enter
jmp
call
jp
push
and
loop
test
jp
dec
lds
xor
cld
cmpb
mov
mov
xchg
sub
imull
dec
add
stos
loop
ja
in
pop
pop
xor
jg
stos
dec
pop
outsb
fistpl
cmp
push
cs
adc
push
out
clc
cltd
lcall
shll
adc
push
sbb
sub
fnstsw
pop
adc
mov
xchg
xor
or
data16
jle
jb
sbb
ljmp
stos
repnz
jb
jns
test
roll
mov
arpl
je
outsl
add
pop
stos
and
xchg
mov
mov
int
imul
jb
dec
jg
pop
adc
inc
fisttpl
rorb
dec
test
pusha
sbb
xor
mov
and
ret
arpl
pusha
jle
push
imull
test
cmpsl
xchg
push
arpl
or
pop
and
cmp
test
add
jbe
dec
sub
jae
cli
lds
rcll
aas
xor
push
stc
xor
cmpsl
ret
cmp
push
add
pop
test
arpl
add
ljmp
test
mov
xor
movsl
pushl
xor
mov
out
mov
icebp
iret
inc
jne
jg
fwait
loopne
into
ret
mov
pop
in
mov
xor
out
testl
cmp
sbb
mov
cmp
dec
js
sub
jo
push
sub
pop
loop
pop
mov
scas
push
mov
sti
cmp
mov
cmp
insb
arpl
nop
inc
cltd
in
mov
add
mov
push
sub
sahf
sahf
ss
xor
subl
sub
dec
rorl
or
or
data16
mov
cmpsb
inc
daa
lret
sub
mov
lcall
pop
push
in
pop
cmp
loope
mov
jae
cld
inc
push
xchg
xchg
ret
inc
fnstenv
inc
nop
and
insl
or
stos
jnp
int3
push
mov
movsl
scas
push
pop
lea
insb
pop
pushf
jns
mov
mov
and
call
popf
nop
into
sub
testl
push
ret
jo
and
xlat
imul
xor
ljmp
adc
mov
mov
je
shrb
addr16
test
in
mov
std
inc
push
testb
mov
les
into
push
xor
inc
or
mov
in
lret
inc
adc
add
leave
mov
push
jbe
insl
push
hlt
in
adc
jp
xor
xor
std
lods
mov
nop
cld
mov
out
jecxz
fwait
cmp
mov
jo
loopne
or
repz
fwait
mov
cmp
xchg
test
je
and
stos
jge
push
insl
scas
out
shrb
cmp
fsub
jecxz
nop
add
cli
xchg
sahf
imull
out
scas
jp
and
sub
push
or
xchg
iret
out
jo
sbb
outsl
cmp
repnz
insb
pop
ret
add
addl
lret
add
mov
frstor
dec
xor
cmpsl
loope
xlat
out
lret
cmp
loop
xchg
lahf
and
movsb
das
out
sahf
push
aas
mov
out
movsb
push
sbb
pop
jle
pop
sbb
lret
neg
pop
mov
xchg
pop
stc
shll
insb
aad
and
frstor
sub
fwait
mov
xchg
dec
sub
test
or
test
rcrl
jmp
movsb
jbe
lcall
pusha
sub
xor
scas
or
xchg
inc
jle
adc
ss
jge
push
push
fdivl
push
xchg
adc
mov
mov
mov
or
shl
xlat
shll
repz
pop
jns
enter
orl
or
fwait
sub
adc
or
push
rcr
jnp
stc
or
push
scas
rcrb
sub
add
push
lods
sub
jno
adc
dec
mov
lahf
cmp
mov
ficoms
sub
aaa
mov
mov
sti
pop
add
push
jecxz
lret
jg
push
sbb
mov
outsl
lods
inc
lock
pushf
in
imul
int
or
pusha
je
jmp
icebp
pop
lret
mulb
add
cmp
addr16
push
mov
nop
sub
fmull
into
insb
mov
and
pop
subb
cmp
imul
sbb
inc
adc
sarl
mov
cmp
adc
popa
in
sub
or
push
pop
push
scas
sbb
mov
push
mov
lret
xor
lock
js
mov
mov
add
sub
or
adc
mov
sub
and
jne
stos
fwait
xchg
ja
scas
mov
or
aam
jp
iret
mov
int
mov
push
lods
test
or
sti
icebp
movsl
test
xorl
ja
jb
loope
call
add
out
insb
enter
pop
push
mov
push
mov
aaa
clc
lds
pop
into
cmpsb
or
inc
call
fsub
lea
ja
xrelease
mov
mov
jecxz
mov
fwait
addb
sbb
cltd
fiadds
xor
xor
mov
arpl
mov
push
cmp
test
xor
in
xor
jo
arpl
push
int3
sub
jle
and
mov
mov
outsl
dec
cmp
mov
in
jecxz
jmp
pusha
leave
ficomps
dec
push
xor
in
jns
or
outsb
and
lret
jmp
sahf
ds
test
or
lock
push
push
sub
rorb
push
shl
cmp
or
xchg
lcall
xor
ja
rolb
add
inc
sbb
int
popa
cmp
lea
or
pop
push
cmp
popf
add
dec
or
add
and
jmp
add
cmp
jbe
cmpsb
mov
add
mov
ffree
js
sub
mov
outsb
jae
das
cmpsb
dec
sbb
mov
aad
sub
addr16
cmpb
sarl
dec
jbe
je
push
cmp
out
pop
ds
ret
jno
lret
mov
aam
jbe
jmp
fisubl
ljmp
shll
shll
inc
ljmp
clc
pop
push
nop
les
enter
mov
dec
arpl
shll
cmp
mov
fcoms
mov
shrl
pop
inc
cmc
inc
hlt
cmc
clc
dec
imul
add
adc
xor
mov
es
dec
fisubrl
adc
shrl
sub
xor
idivb
test
pop
icebp
js
popf
sar
outsl
repnz
or
out
mov
or
adc
cmp
push
fwait
lret
icebp
push
popf
gs
ljmp
pushf
add
in
movsb
cmp
or
cmp
popf
nop
cmp
cwtl
jecxz
mov
mov
cmc
push
ja
stos
stc
jbe
jmp
sub
pop
mov
jbe
fisttpll
and
mov
in
sub
out
mov
xor
adc
pusha
out
in
mov
loopne
xlat
dec
mov
inc
mov
xchg
int3
jns
push
jg
shlb
hlt
cmp
in
add
mov
dec
loopne
cmp
mov
rol
push
mov
sbb
add
cmp
or
int3
nop
insb
add
ret
pop
adc
mov
mov
cmp
test
fcom
shll
add
icebp
xor
push
iret
rorb
movsb
push
ljmp
call
aam
stos
mov
jp
sbb
aaa
lret
aas
jae
inc
xor
in
cmpsl
scas
into
fnstsw
mov
sub
cltd
mov
xor
push
adc
mov
inc
sbb
xor
out
mov
jge
pop
sbb
xor
in
push
sbb
gs
fisubrl
mov
popa
sbb
jno
imul
jle
mov
mov
pop
adcb
fidivrs
or
jae
ficoml
push
aad
xor
loop
push
cmp
aam
fcompl
insb
sbb
push
push
nop
xor
imull
sbb
mov
mov
mov
imul
or
adc
jno
lcall
subl
mov
pop
movsb
es
jns
in
dec
in
adc
push
and
in
js
mov
mov
add
inc
pop
aaa
notb
dec
add
mov
push
movsb
rorb
pop
iret
inc
loopne
mov
jecxz
je
xor
insb
push
sub
jbe
mov
and
pop
out
rcr
das
pop
mov
jb
mov
xchg
adc
loopne
repnz
clc
sbb
sbb
popa
cmp
stos
fcmove
or
and
mov
sarl
outsl
loopne
arpl
mov
loop
xorl
jle
xchg
jmp
outsb
mov
scas
out
repz
in
cwtl
insb
int3
cs
mov
in
iret
daa
dec
ret
jmp
imul
into
enter
mov
push
and
mov
js
mov
add
mov
push
out
push
testl
adc
sbb
push
mov
mov
push
mov
pop
fcom
test
push
push
fdiv
loope
and
test
call
fstl
or
and
jns
dec
lret
fcoms
js
push
jne
sarl
inc
xchg
aad
mov
ficoms
pop
push
sbb
mov
cli
add
sbb
sbb
xchg
daa
in
scas
cmp
insl
js
fdivrl
in
int3
push
inc
push
cmp
int
inc
fs
ss
adc
sbb
gs
stos
in
sbbb
sahf
pop
jbe
lods
or
cs
cmp
ja
cmp
sub
out
mov
lcall
popf
movsb
std
imull
and
mov
dec
das
push
and
ds
cli
in
mov
in
jns
mov
dec
mov
test
xor
adc
push
fisubl
jno
in
xor
jge
hlt
js
cmp
jmp
loope
cs
inc
xchg
rclb
in
mov
lcall
aas
das
or
add
dec
movl
sub
jecxz
test
dec
sbb
lahf
mov
jle
hlt
xchg
lret
scas
fwait
cmpsb
add
lea
clc
add
popa
sbb
push
mov
cs
test
dec
loope
test
fistpll
daa
add
dec
and
leave
movl
push
add
sbb
sbb
or
mov
inc
xchg
adc
jbe
fdivl
dec
jae
in
push
xor
test
sub
jge
js
add
movsl
loop
jnp
enter
cmp
cmp
leave
jb
mov
aas
and
out
dec
jno
cmpsb
addr16
fsubrs
adc
cmpsb
mov
inc
cmp
roll
fidivrl
jnp
mov
mov
or
rcl
jg
mov
repz
jp
lods
enter
mov
xor
test
stos
push
sahf
inc
mov
cli
enter
adc
push
push
add
push
xor
test
jp
out
int3
in
cld
sbb
sub
fld
rcr
or
jge
sti
jne
push
xor
xchg
adc
cmpsb
into
pop
jo
push
mov
int3
dec
mov
out
orb
and
dec
push
or
push
xchg
shrl
adc
pop
test
pushf
aad
jo
pop
xor
mov
fwait
dec
rorl
scas
pop
xchg
scas
inc
iret
cld
pushf
in
out
adc
cmpsl
mov
fisubrs
lahf
sti
ret
xchg
mov
mov
mull
mov
push
add
lock
rcrl
dec
jge
in
fcmovnbe
lcall
js
lock
sub
xor
stc
inc
and
xor
testl
jl
xchg
mov
lods
fincstp
mov
gs
push
mov
mov
int3
mov
insb
cmp
cmp
mov
ds
and
push
sub
lods
dec
lock
aas
push
pop
test
out
mov
loopne
repz
icebp
js
dec
sahf
xchg
fwait
pop
jnp
or
or
xor
mov
push
inc
fcmovne
dec
fsubl
rolb
mov
mov
cmc
das
into
sbb
or
js
cmp
in
andb
gs
adc
leave
xorl
enter
scas
aas
ljmp
dec
xchg
sbb
pop
std
sub
mov
loop
xorb
lods
out
fisttpl
pop
pusha
dec
lds
scas
jnp
xor
mov
sub
imul
outsb
mov
daa
push
scas
xchg
dec
arpl
ss
ljmp
das
test
pop
and
mov
dec
pop
andl
mov
pop
mov
push
std
jg
mov
pop
cli
repz
adc
jge
adc
jp
ss
xor
dec
das
push
sti
cmpsb
adc
daa
ret
xchg
lea
dec
lea
xchg
mov
imul
sub
imul
cmp
das
xor
ret
divl
repz
imul
out
dec
sub
jecxz
aaa
jmp
ljmp
push
sub
jae
cmp
sahf
mov
mov
mov
fcmovnb
adc
lahf
or
xchg
push
ret
cmpsb
rcr
cmc
jae
testb
mov
cwtl
dec
lret
sub
lods
nop
lea
pop
mov
mov
icebp
fwait
stos
aam
jbe
mov
or
aaa
in
data16
or
mov
loope
ss
sbb
mov
mov
sub
and
or
dec
or
stos
test
aaa
fcmove
mov
rcll
and
ljmp
xchg
lret
xor
jb
xchg
sarb
das
mov
dec
arpl
inc
pop
pop
cmp
and
push
jo
mov
mov
ds
push
imul
xor
fisttps
xchg
mov
stos
xchg
xchg
add
mov
insl
mov
xchg
stc
and
lods
daa
xchg
xor
in
and
xchg
mov
shl
inc
mov
and
mov
and
test
xor
rcrb
cmp
out
movsb
test
cmp
test
lahf
pop
in
imul
pop
imul
fisttpll
test
adc
test
orb
shrb
arpl
popa
out
xor
mov
xchg
out
test
in
lea
mul
or
fdivs
mov
pop
inc
cmp
jno
fdivr
mov
push
cld
or
jae
ja
inc
cmp
add
in
pop
pop
pop
clc
xchg
loop
push
inc
mov
inc
nop
jg
pop
bound
add
cltd
dec
pop
cmp
xchg
insb
xor
in
sbb
mov
sbb
cmc
mov
dec
mov
jno
jg
test
dec
sub
mov
mov
lea
cmc
dec
lock
negb
xor
sti
aad
mov
lds
xchg
test
push
mov
cmp
scas
xchg
mov
scas
add
into
gs
push
movsl
aas
dec
cmp
leave
test
cmpsl
mov
shll
or
push
jge,pn
mov
sub
insb
pop
cmp
mov
mov
js
imul
xor
test
sbb
adc
inc
scas
mov
shll
out
addr16
push
mov
mov
scas
in
lahf
and
add
sub
out
lods
lea
cmpb
dec
add
das
gs
pushf
popf
mov
repz
xchg
pop
cmc
jle
repnz
xor
repnz
shl
add
xchg
cli
fsubl
cmp
or
sbb
fwait
pop
mov
test
pop
cmp
mov
ficompl
dec
mov
xlat
mov
jo
cmp
jp
popa
fnstenv
xchg
mov
mov
jb
jmp
inc
push
filds
dec
lods
jb
jne
or
mov
aas
insl
lret
lahf
push
outsb
push
or
or
add
pop
insl
jnp
cwtl
pop
out
lods
inc
add
bound
insl
mov
out
pop
xchg
mov
icebp
pop
icebp
lret
cmp
jg
inc
shl
mov
cmp
add
mov
pop
mov
ss
jge
adc
insb
cltd
aad
pusha
addr16
jae
and
inc
jbe
dec
inc
lea
stos
pushf
dec
cmpsb
fildll
in
addr16
ja
add
sbb
jbe
xchg
xchg
lret
xchg
xor
outsb
jge
jno
cmp
sti
cmc
roll
mov
fbld
lock
add
fwait
aam
inc
sbb
push
ss
inc
sub
sbb
lea
lods
pop
xchg
pop
dec
adc
test
push
imul
fcompl
out
outsb
xchg
int3
and
loop
and
out
shll
ss
into
stos
pushf
ds
dec
inc
lods
adcb
arpl
imul
jle
adc
mulb
repnz
mov
jbe
stc
and
mov
fstps
inc
adc
mov
test
fnstsw
and
jge
ret
jl
cld
xor
cli
inc
sub
std
sub
push
pop
mov
pusha
pushf
in
lods
pop
sub
shll
sbb
jp
sub
movb
mov
pop
cmp
fists
and
push
jns
fiaddl
cltd
inc
sub
sbb
sub
jl
movsl
in
xchg
pop
cs
int
sub
mov
adc
fwait
dec
data16
stos
jno
fistps
repnz
ret
push
mov
movsl
std
and
cmc
add
jbe
pop
in
fsin
test
add
cmp
mov
out
push
enter
std
jno
xlat
adc
in
sub
inc
push
pop
dec
cwtl
dec
jmp
fucomi
pushf
add
mov
je
xchg
mov
mov
dec
lds
jg
ja
scas
pushf
jp
dec
lods
lcall
xor
jo
xor
mov
sub
sub
mov
mov
sub
orb
and
imul
test
push
push
push
in
inc
jmp
imul
jo
loop,pt
ja
fistps
mov
fucom
scas
leave
int
dec
jno
insl
add
mov
and
pop
xor
or
lret
adc
repz
xor
cmp
inc
and
cmp
test
push
sbb
dec
mov
and
loopne
fs
mov
sub
mov
stos
mov
ret
sbb
flds
xorl
sub
xor
rcr
arpl
sub
scas
idivl
sub
and
fdivs
int
dec
and
dec
sub
dec
jg
cmpl
ss
dec
or
sbb
sub
push
test
std
in
mov
sahf
lea
sub
jp
clc
sbb
or
add
xchg
push
or
mov
mov
filds
loop
add
add
xchg
arpl
ljmp
dec
stos
jae
sbb
shrb
sbb
inc
pop
jp
out
fsubs
pop
cmp
push
mov
repz
scas
mov
sub
insl
andb
ret
cwtl
pusha
and
xchg
popa
push
jo
and
dec
or
aam
cmpsl
dec
cld
or
jns
loop
hlt
and
jne
insb
xor
inc
cwtl
mov
mov
or
push
stos
cmp
jne
sub
aaa
lret
scas
mov
aaa
loopne
addr16
mov
les
fs
xor
aam
add
icebp
pop
jle
ret
inc
test
lods
cmp
outsl
cld
pop
loop
xchg
mov
xlat
addr16
in
addb
add
xor
push
push
xor
mov
mov
loope
loop
fmuls
das
sti
or
mov
ds
mov
sub
push
faddl
jns
lods
sbb
adc
mov
lods
popa
leave
hlt
sbb
mov
int3
mov
aas
cmp
lds
sbb
pop
insl
inc
adcb
lret
inc
out
mov
pop
or
in
xchg
movsb
xchg
ret
pusha
pop
mov
out
insb
and
stos
lret
inc
sbb
cmp
insb
aas
ljmp
sbbb
mov
insl
mov
daa
ja
cltd
sti
cs
pop
xchg
ljmp
pushf
add
adc
lret
push
mov
lock
out
jg
stos
hlt
inc
jecxz
scas
mov
mov
cwtl
loope
popa
cmpsl
or
pop
hlt
mov
mov
pop
adc
outsb
inc
scas
jno,pt
out
scas
icebp
and
or
pusha
pop
mov
flds
lea
sbb
mov
sbb
lahf
push
es
insl
in
fidivrl
lret
into
jmp
stos
jne
inc
call
lret
cli
push
jp
jne
loopne
push
ss
xor
sbbb
mov
fbld
dec
popa
in
jg
or
test
mov
inc
test
cmpsl
jbe
adc
fidivs
stos
call
adcb
pop
mov
or
je
iret
jnp
cmp
imul
pop
jmp
inc
bound
jle
mov
add
jo
jecxz
cwtl
jns
shlb
cmp
nop
aad
bound
mov
jae
rolb
rcrl
cmpsl
add
sbb
push
cmpsb
xchg
fwait
xor
adc
jbe
mul
test
cmpsl
dec
adc
ja
xor
cmp
fs
jmp
pop
add
cld
pop
dec
xchg
sbb
insl
add
int
rcll
cmc
xchg
movb
dec
push
dec
cmpsb
cmp
pusha
ljmp
xchg
es
or
mov
xchg
fnsave
or
and
inc
xor
adc
push
pop
jbe
jae
lds
cmp
xchg
push
push
add
fidivrs
in
fs
pop
dec
xchg
sbb
hlt
js
push
imul
inc
fs
mov
es
mov
jnp
aam
cmp
outsb
stos
push
pop
inc
or
xor
mov
mov
orl
xchg
orb
bound
adc
sbbb
pop
hlt
cmp
push
and
mov
call
enter
and
out
loop
test
jne
imul
mov
mov
loope
jl
fs
adc
out
aam
push
mov
les
sbb
cmp
push
pop
shrb
jbe
cmp
test
fidivrl
ja
imul
mov
pushf
scas
mov
mov
repz
jne
test
movsl
mov
adc
inc
ss
push
hlt
dec
pusha
mov
and
adc
loop
adc
fcmovb
inc
test
pop
dec
clc
out
repz
xchg
pop
lock
sub
jne
xchg
loopne
push
and
imul
bound
stc
cs
je
imul
cmpsl
sbb
nop
pop
mov
loopne
movsb
push
call
out
jmp
jno
clc
mov
sub
xorb
jmp
pushf
lret
es
jne
jnp
out
dec
imul
data16
push
mov
xchg
mov
je
stos
aaa
fdivs
sub
out
and
es
div
sbb
daa
mov
out
mov
or
fcmove
sub
clc
mov
push
pop
xorl
imul
cltd
or
pop
dec
pop
out
lds
mov
mov
or
jno
jge
add
insl
push
cmp
jge
jo
int3
add
pop
std
lahf
or
push
lahf
xor
mov
addl
pop
imull
lods
hlt
pop
shll
fisttpll
push
xlat
xchg
sbb
sahf
push
rclb
mov
adc
mull
xlat
sub
sti
out
or
shrl
movsl
jmp
fwait
sbb
inc
inc
leave
xor
lods
aas
push
sub
or
cmp
test
lcall
jge
ret
xchg
dec
mov
jae
rorl
add
iret
mov
hlt
ss
adc
stos
mov
ss
out
test
pusha
nop
sub
addr16
xchg
cs
fisttpll
cltd
aaa
ja
mov
xchg
popa
lock
adc
dec
daa
adc
sub
jns
scas
lock
test
insl
add
clc
jg
stc
cmp
loope
icebp
adcb
jg
cmpsl
push
sbbl
jbe
loope
xor
inc
pusha
lret
lods
push
in
jne
cmp
cli
jne
out
pushf
ror
subb
push
jns
jbe
pop
xor
repnz
mov
call
fisubs
jle
dec
jg
and
xchg
imul
outsb
mov
nop
sbb
xor
repnz
pop
fisttps
sub
scas
fsubp
or
fstpl
out
std
sub
jno
in
dec
cs
xchg
mov
inc
mov
dec
aas
subb
pop
xorl
xor
jbe
jbe
nop
popf
cmp
out
popf
inc
ljmp
inc
in
pop
stos
mov
inc
out
lods
cld
xchg
rorb
sub
jno
in
mov
cmc
push
arpl
ficomps
push
jno
fdivrl
add
inc
jg
int
dec
dec
fldl
addb
cmp
fmull
dec
mov
lods
xor
lods
pushf
scas
sbb
adc
and
or
aad
xlat
push
pop
sarl
jno
mov
imul
xor
sbb
lods
nop
fdivp
sub
inc
stos
push
cld
cmc
push
mov
mov
xchg
leave
fwait
dec
in
fmull
in
dec
xchg
pop
sub
test
xchg
sahf
push
mov
leave
faddl
lea
inc
inc
sti
cli
pmaddwd
cmp
xchg
int3
in
data16
mov
das
add
push
shrb
dec
jo
mov
in
xchg
push
imul
mov
pop
and
and
push
jb
xchg
xor
sahf
cmp
hlt
lret
js
mov
mov
dec
xor
js
sahf
xor
insb
mov
mov
test
leave
cmp
outsl
add
lret
fwait
data16
dec
mov
xchg
mov
cld
mov
outsb
andl
imul
xor
lcall
popa
in
ja
outsb
or
dec
out
and
mov
push
inc
sarl
inc
jp
lret
lock
jmp
mov
punpckhdq
loope
mov
jmp
or
push
imul
sbb
mov
dec
out
push
lcall
pushf
jmp
pusha
push
and
vmovdqu
sbb
out
out
aas
popf
xor
stc
imul
mov
arpl
call
lods
imul
out
loopne,pn
sub
cmp
in
push
jno
pop
and
fisubrl
dec
outsb
into
out
adc
or
adc
and
push
push
jns
hlt
int
das
sub
mov
js
cld
add
rsqrtps
inc
imul
inc
fs
rcrl
add
xor
xchg
push
pushl
arpl
jns
movl
mov
sbb
pop
sbb
lods
shrl
mov
mov
push
dec
mov
stos
incl
mov
inc
leave
test
sub
jno
ret
stos
lods
or
sti
push
or
cwtl
rorb
adc
mov
add
dec
xor
aas
pop
xchg
pop
aaa
in
mov
ljmp
push
gs
mov
pop
ss
ljmp
cmp
pop
lds
mov
inc
divl
stc
rorb
rorl
leave
mov
and
xor
mov
sbb
ficoml
xor
out
outsb
xchg
sbb
fs
and
ror
mov
ss
out
imul
in
xchg
mov
add
jb
mov
sub
adc
popf
mov
call
mov
mov
and
pop
enter
test
lock
pop
push
repz
divb
insl
in
and
jg
and
push
fcomps
mov
es
adc
aam
sahf
shlb
notl
popf
rcll
and
xchg
sub
sbb
xor
les
push
mov
xchg
fsts
lock
pusha
mov
sub
aaa
stc
add
jo
cmpsb
inc
and
xchg
stos
loope
fldl
ds
clc
mov
arpl
orb
mov
repnz
mov
add
cmp
jb
mov
adc
xor
sbb
popa
adc
test
aaa
repz
sub
in
es
insl
and
std
inc
sbb
or
in
pop
pop
das
test
je
adc
xchg
test
push
or
insb
arpl
xchg
movsl
mov
fdivl
push
popf
daa
push
inc
push
lods
dec
xchg
dec
or
xchg
fstpl
fs
fcmove
pop
mov
mov
jecxz
mov
and
adc
gs
mov
mov
dec
xor
cld
xchg
insl
pop
mov
lret
adc
aaa
jmp
int
int
incl
hlt
mov
sub
push
scas
aam
mov
cli
test
push
lret
popa
lock
enter
and
cmc
leave
jns
sarb
stos
dec
andl
leave
jge
pop
bound
divb
outsb
jnp
xchg
popa
scas
mov
out
jg
mov
jno
or
daa
dec
mov
mov
push
cmp
cld
xor
int
int
fisttpll
push
xchg
add
cwtl
mov
jb
mov
sub
inc
movsl
cmpsb
js
xchg
dec
add
out
imul
das
scas
inc
repnz
lahf
hlt
xchg
jge
mov
fstpt
movsb
aam
aas
jno
insl
jmp
inc
cmpsb
fstps
push
lods
sub
pop
xor
cli
lock
xor
ss
jne
mov
mov
jp
fwait
hlt
xchg
sub
push
xchg
nop
sbb
xchg
insb
sti
mov
out
sti
fsubrs
mov
aad
stos
cmp
jmp
loopne
and
mov
pop
lock
mov
mov
xchg
icebp
out
cltd
mov
ror
mov
test
in
scas
in
test
mov
and
rol
fisubrs
inc
lea
fs
sub
das
pop
popf
aaa
lock
cwtl
aam
dec
mov
nop
ds
xchg
sbb
cmp
or
shl
adc
sub
mov
mov
xor
jns
pop
rol
cli
fldt
imull
or
push
and
jle
add
adc
cmpsb
aaa
gs
in
push
clc
popf
je
or
lahf
imul
xchg
std
jbe
mov
int
dec
insb
pop
lds
sbb
lret
mov
xchg
dec
sbb
lcall
sbb
sbb
dec
ud0
xor
aad
les
adcl
xchg
push
sti
jg
inc
rolb
add
testb
mov
int3
mov
inc
xchg
ds
fdiv
test
sbb
inc
inc
in
es
fsubs
in
mov
sarl
pop
cmpsb
ret
insb
idiv
inc
cmp
mov
fucomip
mov
adc
push
mov
mov
xchg
into
in
adc
add
lcall
sub
sub
iret
je
inc
sub
stos
add
inc
adc
cmp
int3
and
jle
xchg
pop
sbb
push
cmp
lret
mov
inc
sbb
stos
add
bound
xchg
xor
mov
or
sahf
in
jae
lods
mov
push
dec
jp
push
std
mov
imulb
xchg
push
jbe
dec
and
jle
clc
jnp
cltd
pop
hlt
lcall
sbb
xor
insb
rol
shrb
in
fcomps
jne
movsl
fcomi
movsl
xor
pop
lret
xchg
mov
jmp
sub
jg
movsb
add
or
adc
ds
in
pop
adc
fdiv
dec
dec
das
imul
or
adc
mov
xchg
lcall
xor
notb
mov
scas
stc
xchg
push
lock
data16
bswap
dec
xchg
stos
mov
inc
jle
add
ret
dec
mov
test
in
inc
loopne
shlb
imul
inc
into
adc
std
cmp
and
in
sbb
nop
rcll
xchg
std
mov
and
in
mov
outsb
mov
add
cltd
call
jno
pop
arpl
ja
scas
cli
jae
jle
loopne
sahf
jmp
adc
cmpsb
arpl
jae
mov
and
pusha
jmp
test
sti
or
repnz
inc
pop
mov
enter
and
test
dec
fisttpl
or
and
sbb
ss
sbb
xchg
jmp
cmc
sub
insl
and
xchg
cwtl
xchg
les
lcall
mov
dec
xchg
leave
aaa
in
call
xlat
lcall
sbb
cmc
mov
dec
mov
aaa
dec
into
push
in
test
lock
sbb
xchg
movsb
push
out
cld
scas
push
or
pushf
jg
lock
jo
movsl
out
fwait
mov
stc
sub
xlat
in
nop
icebp
rorb
enter
cltd
dec
call
xchg
sbb
inc
adc
arpl
mov
stos
xchg
lods
cmp
in
out
pop
cmpsb
sub
repnz
mov
roll
xorl
subb
rclb
jo
insb
mov
repnz
xor
aam
lret
xlat
mov
jg
cmpsb
sub
int3
in
cwtl
js
js
sbb
lahf
outsb
xor
bound
inc
xchg
ss
es
jle
inc
out
or
cmp
scas
dec
push
mov
cmc
adc
push
out
xor
lret
dec
cmp
jl
sbb
andl
mov
add
sbb
and
test
mov
dec
fisubrl
das
push
hlt
cmpsl
jnp
add
imul
in
pop
mul
xor
dec
popl
inc
leave
cmp
jnp
xchg
inc
and
pop
push
pop
ljmp
test
sub
sbb
out
push
jmp
mov
push
jnp
call
lock
cmc
mov
in
or
xchg
fisubrl
add
data16
xchg
gs
push
insl
xchg
cld
lods
loopne
out
popa
mov
call
xor
ja
inc
jo
mov
mov
xor
lret
pop
xchg
jns
cmp
add
dec
in
push
scas
popa
cmp
mull
push
loope
xchg
test
sbb
adc
pop
ss
mov
icebp
xchg
jecxz
pop
mov
out
fdivl
lods
ror
mov
sub
scas
movsb
sub
cmp
out
in
mov
mov
lret
xor
and
sahf
or
test
push
clc
mov
mov
xchg
push
mov
xor
sti
cmc
add
add
xchg
mov
cmp
mov
and
sub
and
push
dec
fndisi(8087
sub
daa
jnp
in
aam
lods
insl
lds
pop
jle
or
cmp
and
cmc
movsb
nop
push
cmp
loopne
jo
repz
mov
mov
sub
jnp
sbb
cmp
add
sbb
mov
sub
push
mov
cmp
aam
xor
dec
insb
imul
dec
jmp
jmp
mov
mov
pushf
loopne
inc
pop
lods
aas
out
pop
cmp
jg
es
shll
pop
ret
pusha
jns
xlat
cwtl
jmp
mov
dec
mov
xor
pop
movsb
pop
dec
lock
out
cmpb
inc
mov
adc
lock
inc
aas
imul
jle
push
clc
dec
mov
xor
jecxz
dec
fwait
pop
mov
inc
leave
orb
sbb
sbb
xor
mov
push
adc
mov
jb
fcomps
clc
mov
shrb
test
repz
mov
jle
enter
cmpsb
int
int
mov
jg
sarl
mov
fisubrs
xor
cwtl
subb
xor
push
push
scas
cwtl
jmp
call
cld
jne
into
rorb
jg
cmp
sti
popf
jne
faddl
push
pop
dec
leave
mov
push
inc
imul
les
std
lahf
sub
mov
jl
mov
ret
pushf
push
cli
frstor
sbb
jmp
or
mov
add
or
js
jae
shrl
fndisi(8087
out
aaa
loope
add
notb
in
xor
xor
movsl
popf
inc
xchg
sbb
and
repnz
call
push
and
xchg
push
lock
fnsave
cmpsb
sbb
bound
jbe
cmp
adc
test
mov
xor
xchg
push
fidivrs
clc
xorb
xchg
movsb
mov
mov
aas
stos
cmpsl
xchg
and
mov
movsl
pop
or
sub
push
or
xor
cmpsb
fwait
push
das
outsb
cmpsl
mov
outsb
xor
xchg
in
dec
push
in
subb
push
movsl
and
aam
cltd
push
adc
pusha
loopne
std
lods
fisttps
aam
enter
loopne
outsb
pop
jns
xchg
enter
jns
inc
js
jns
pop
roll
mov
lahf
mov
inc
aad
xchg
sbb
mov
inc
xlat
aad
mov
ss
sub
out
bound
aad
sahf
sbb
cs
scas
mov
jbe
mov
mov
inc
jmp
sub
nop
les
mov
sar
out
dec
cmpb
sbb
cs
mov
jge
mov
adc
inc
mov
xchg
int
xlat
stc
lock
xchg
inc
xchg
fmuls
test
dec
mov
mov
xor
dec
ficoms
pop
fistpl
fsts
push
dec
push
and
stos
inc
in
mov
js
mov
sbb
dec
sbb
cmp
and
mov
mov
mov
mov
dec
or
xor
mov
pop
jbe
push
mov
mov
dec
mov
stc
sub
fcmovnu
sbb
adc
or
movsb
cmp
sub
adc
bound
lea
or
insl
leave
stos
ja
push
mov
add
ja
loope
fucomi
jnp
add
aad
add
jg
pushf
cli
adc
lods
lods
das
sub
jg
or
rorb
push
mov
int
jns
addr16
xchg
insl
insl
loopne
sub
das
xchg
xchg
fidivrs
add
repz
xor
pop
add
fwait
push
jns
dec
adc
jg
int3
adc
lea
cs
int
das
xchg
cmp
aad
push
bound
inc
xchg
xchg
jnp
cwtl
cmc
or
push
mov
dec
sbb
jnp
fs
pop
sahf
adc
pop
pop
mov
inc
fistps
sbb
pushf
lods
pop
fdivrl
jae
jo
pop
insb
mov
inc
mov
dec
loopne
dec
aaa
xchg
icebp
cmp
aas
sahf
dec
mov
pusha
lret
dec
dec
popa
popa
xchg
inc
mov
pop
aas
jmp
cmpsb
pop
jns
test
xchg
iret
jg
cmp
fwait
repz
jmp
clc
cld
les
test
jg
cmp
sub
out
dec
fdivrs
push
dec
pop
push
mov
loop
push
and
enter
add
jmp
sbb
in
push
mov
jle
pop
ja
outsl
push
push
stos
test
xchg
dec
aaa
fwait
adc
fs
push
jl
mov
fisubl
dec
adc
add
cs
fistpll
mov
ljmp
dec
mov
xchg
int3
sbb
mov
mov
mov
scas
arpl
ror
ja
xchg
cs
aas
sub
cmpsb
ja
adc
mov
pop
push
movsl
xor
lods
lret
callw
mov
jp
lock
jmp
mov
pop
int
fwait
in
daa
repnz
cwtl
int
mov
xchg
test
sbb
lret
test
jl
rorl
push
cmc
mov
pop
mov
lds
lret
mov
dec
lods
sub
jns
adc
mov
push
mov
lods
jmp
jecxz
lods
loope
shll
jmp
dec
xchg
out
movsl
dec
insl
nop
jp
mov
rcrb
fidivl
xchg
fimuls
xchg
sub
xor
mov
or
dec
out
test
sbb
icebp
fcmovu
mov
xchg
in
insl
sbb
fdivrp
mov
and
xor
ljmp
push
repnz
in
daa
mov
jl
test
sbb
lret
test
jl
loop
push
cmc
mov
pop
iret
loope
xchg
mov
fisttpll
sub
cmp
bound
push
lods
loope
mov
and
push
out
movsl
dec
insl
nop
jp
movsb
sarb
fdivs
xchg
popf
jo
mov
mov
xchg
fimuls
xchg
sub
xor
dec
fimull
dec
dec
fisubrl
decl
mov
xchg
in
insl
sbb
fdivrp
mov
and
xor
popf
insl
push
push
repnz
in
scas
movsl
dec
or
inc
dec
imul
cmpsb
inc
in
and
dec
int3
add
ja
push
test
fwait
repz
stos
inc
jmp
jmp
or
adc
cmp
bound
in
imul
stos
and
out
outsl
jg
sbb
cmp
sbb
xchg
or
in
lret
cmp
call
insl
int
pop
pushf
cmp
pop
shlb
popf
xor
mov
mov
ror
mov
sub
xchg
dec
pop
ret
in
testb
into
subb
push
cmp
mov
in
fsubrs
sub
lret
push
fadd
cltd
xchg
mov
inc
pop
mov
lods
and
pop
fimuls
test
rcl
push
xchg
dec
enter
lods
cmp
roll
or
xor
daa
gs
nop
sub
in
lock
xchg
cmpsb
xchg
out
dec
jae
stc
lods
popa
lds
mov
add
test
mov
lods
stos
inc
adc
fucom
dec
in
mov
in
pop
imul
inc
mov
pusha
xchg
mov
loop
in
push
xchg
sub
pop
in
mov
das
icebp
mov
out
xorl
sbb
add
bound
in
push
pop
int
jg
xor
or
push
jnp
je
loope
test
nop
pop
cmc
push
bound
cmp
add
mov
xchg
pop
lret
in
pushf
dec
in
jmp
jmp
push
push
mov
lret
in
in
cmpsl
insb
xchg
mov
mov
inc
push
das
imul
xor
jno
repz
rorl
cmp
mov
call
jns
addr16
xchg
loopne
dec
shrl
pusha
lcall
mov
mov
movsl
aam
int
int
jns
jne
fstl
xchg
mov
xchg
into
icebp
jmp
lds
lds
lds
jnp
ja
out
xchg
jmp
bound
jmp
sti
lret
mov
fdivl
shll
lahf
icebp
je
jae
ss
ss
pusha
rol
inc
cmpsl
mov
add
pop
rcrb
dec
xchg
xchg
call
push
add
sub
scas
insl
lahf
mov
insl
pop
mov
js
xchg
test
in
fld
mov
movsb
or
dec
daa
xor
cltd
dec
mov
lahf
fdivs
stos
mov
imul
rorb
stc
ffree
cs
and
jge
mov
sub
filds
xchg
jne
pop
les
fmuls
mov
mov
xchg
scas
addr16
iret
scas
pop
sub
inc
dec
mov
pop
mov
jge
imul
jns
push
mov
add
dec
push
and
adc
rorb
add
add
xchg
cltd
xchg
jne
xchg
fnstsw
cmp
imul
lea
mov
aam
mov
xlat
pop
stc
inc
sbbb
and
aaa
jno
jno
inc
test
xchg
lahf
in
call
push
test
jae
call
adc
mov
scas
rcr
ljmp
shll
out
mov
push
loope
inc
add
das
push
dec
fwait
xor
adc
cwtl
out
mov
pop
dec
push
push
and
popf
push
push
dec
or
mov
lahf
push
cltd
cwtl
xchg
sub
pop
shl
in
push
mov
jnp
movsl
mov
pop
mov
push
xchg
dec
jle
sahf
inc
ret
popa
jmp
sub
scas
stos
fistl
aas
cltd
cmp
in
mov
cmp
add
jb
inc
xor
ja
addr16
lock
ss
sbb
jns
push
adc
cmp
inc
or
imul
mov
inc
push
mov
test
dec
stos
faddp
inc
jecxz
mov
adc
popf
push
lods
iret
adcb
loop
pop
and
xchg
ljmp
cmc
sbb
das
dec
push
push
cmp
repnz
jb
adc
fs
sbb
jb
lcall
xchg
mov
dec
sarb
or
add
aas
in
mov
sub
mov
pop
xor
pop
sbb
xor
scas
test
xor
and
mov
jno
in
sbb
pop
test
cmp
push
inc
add
lcall
pop
and
push
xchg
xchg
aaa
push
xchg
std
xchg
xchg
lock
out
pop
fsubl
lods
gs
test
sub
les
sbb
mov
hlt
and
imul
cmpsb
jne
xlat
lret
jle
lret
cmpsb
std
xor
ljmp
sbb
sub
imul
mov
sbb
addr16
subb
jl
stc
xor
rcl
jnp
push
outsl
xor
or
aas
push
pushl
add
push
inc
dec
mov
cmp
add
mov
sbb
lock
lods
lock
test
inc
cmc
and
fstpt
out
hlt
stos
outsb
add
out
je
jb
fisubs
addb
and
mov
pop
cs
popa
xlat
in
push
fucomp
subl
loop
in
in
dec
fstl
orl
jecxz
jmp
sub
ds
inc
xchg
fs
xchg
loopne
in
dec
and
out
cmp
es
inc
sub
push
xorl
push
sarb
andb
loope
nop
cmc
leave
pushf
jne
push
test
jmp
sub
in
aad
je
sysret
mov
sbb
mov
lock
inc
push
push
mov
lret
iret
scas
je
ret
push
mov
dec
xchg
jmp
fwait
adc
adc
lahf
cmpb
and
inc
add
cmpb
int3
out
mov
int
sbb
pop
int3
jae
xchg
iret
jae
out
and
imul
je
adc
jb
stc
in
push
in
int3
fstpt
rcll
jnp
stos
add
test
out
ljmp
in
shll
jge
mov
movsl
loope
ljmp
pop
lods
ret
push
mov
shl
lods
and
jno
xchg
rep
negb
or
fldenv
les
mov
mov
ss
xchg
shrb
inc
mov
into
pop
mov
outsl
push
test
outsl
pop
adc
pop
push
cmp
push
out
inc
jp
dec
jne
clc
push
aam
sqrtps
add
or
mov
inc
cli
arpl
sbb
sbb
addl
cwtl
push
faddl
cltd
jle
out
push
cltd
aad
ficompl
lock
push
lret
cmp
rcr
std
int3
cs
and
jge
rclb
sub
jge
je
push
lea
fsubp
ljmp
sbb
fnstenv
and
ret
or
xchg
push
fs
jne
mov
dec
mov
sub
in
outsb
sbb
outsb
lret
stos
xchg
shll
jb
es
mov
pop
push
or
mov
sub
add
ljmp
scas
lcall
cld
movsb
cmp
cmp
testb
xchg
sub
push
and
xchg
pop
bound
mov
mov
push
cmpb
push
lods
push
shlb
mov
stc
xchg
or
sub
xor
inc
jmp
push
pop
or
les
jmp
int
dec
cmc
mov
sbb
outsl
or
inc
cmp
jb
in
cmpl
mov
loopne
mov
aas
jg
xchg
cmpsl
bound
repnz
inc
and
into
cmp
sub
adc
xor
movsl
pushf
jns
cmpsl
pop
or
adc
sbb
push
out
in
lahf
dec
push
xlat
dec
shr
xchg
addl
int3
push
testb
push
popf
cmpb
sti
addl
inc
imul
inc
push
add
lds
adc
and
mov
in
daa
ljmp
cmp
insl
jge
adc
stc
int
ljmp
out
pop
ret
xorb
mov
lret
mov
mov
jp
rcll
mov
add
jae
mov
push
xor
cmp
lds
clc
stos
mov
stos
jo
daa
mov
out
stos
fdivl
dec
push
xchg
dec
xor
mov
call
jns
mov
mov
cmp
jbe
loope
pop
dec
in
ss
and
push
cmp
insb
cmp
dec
lds
out
jb
in
adc
xor
out
sahf
pop
pop
scas
in
adc
ss
sti
shr
int
ret
xor
ficompl
inc
lea
push
push
jmp
mov
enter
push
sub
xchg
repz
push
ret
fadd
dec
adc
mov
cli
movsb
mov
jg
pop
cli
dec
aas
adc
movsl
daa
imul
add
aaa
or
cltd
leave
add
mov
pusha
mov
xor
fsubrl
jne
pop
ret
loope
out
movsb
loop
in
sti
rcrb
xchg
and
pop
cwtl
mov
sbb
icebp
fwait
lock
cwtl
cmpsl
pop
enter
fwait
mov
gs
jbe
daa
cs
mov
aam
shl
out
xchg
add
push
cli
sub
addr16
lcall
dec
gs
into
arpl
int3
mov
push
adc
jne
into
push
fwait
xchg
add
inc
mov
fstl
jb
test
dec
outsl
lods
outsl
addr16
inc
dec
cmpsl
jno
icebp
sub
mov
or
xchg
mov
push
dec
adc
xchg
rol
inc
aad
test
pop
dec
dec
push
scas
lods
adc
popf
adc
jmp
imul
scas
and
stc
push
sbb
sbb
xchg
xor
lret
xchg
stos
xchg
movsb
inc
adc
mov
clc
inc
xor
mov
sub
push
loopne
inc
pushf
lods
je
inc
test
loope
xchg
inc
cmpb
jmp
movsl
dec
faddl
lret
insb
inc
fcmovu
lock
pop
mov
ds
inc
in
xor
arpl
sbb
cli
cmp
dec
sub
push
jbe
test
aam
inc
sub
mull
or
out
xchg
popf
jl
inc
mov
mov
xlat
test
and
pop
das
jbe
cmp
cli
sbb
adcl
pop
loope
iret
aad
push
mov
js
and
mov
pop
popa
lret
push
dec
xor
mov
sub
xchg
mov
push
xchg
pop
push
and
and
jle
lods
pop
sarl
add
xor
clc
icebp
cwtl
add
hlt
mov
and
sub
jg
xchg
mov
fmuls
scas
std
lret
aam
test
lret
mov
lcall
orl
push
test
dec
xchg
stos
clc
repz
jl
int
bound
push
and
lahf
jmp
imul
sahf
inc
pop
push
mov
push
fcmovu
fdivs
mov
adcl
jle
mov
xor
dec
mov
lret
mov
adc
xchg
sahf
inc
sarb
lret
fidivs
pop
sub
dec
and
xlat
xchg
loope
nop
add
popa
inc
xor
xchg
inc
jg
or
subb
ret
inc
test
gs
inc
in
or
xor
pop
dec
js,pt
out
imul
std
dec
repnz
inc
lods
loope
outsb
or
cmp
shll
iret
loopne
sbb
ficoml
lcall
add
or
jg
movsb
jmp
adc
test
aad
jle
ja
jbe
outsl
inc
mov
inc
les
subb
sub
shl
addb
loope
sahf
js
or
jnp
mov
push
pop
and
inc
dec
frstor
mov
leave
movsl
inc
adc
fcomps
stos
frstor
push
icebp
sub
push
stos
push
out
repnz
loope
mov
pop
pop
mov
add
loopne
mov
push
dec
ret
inc
inc
push
xchg
jbe
js
inc
js
aas
sub
sub
ss
push
aad
addl
inc
push
jbe
daa
jmp
jo
mov
cmp
xlat
rcrb
scas
in
mov
addr16
dec
cmc
in
jnp
cwtl
outsb
pop
jg
rclb
jns
or
loopne
fisttpll
rorl
ror
push
push
cltd
mov
adc
cld
dec
imul
shlb
dec
add
imulb
fs
sahf
cmpsb
cmpsl
aam
sbb
adc
or
cmp
daa
fstl
xchg
dec
ljmp
jbe
das
sbb
mov
nop
jl
mov
test
inc
pusha
nopl
out
sub
insb
std
cmpsl
mov
sub
enter
mov
out
hlt
call
push
cmc
lret
adc
dec
xchg
test
outsl
fs
pop
test
jnp
push
fmuls
enter
stos
dec
mov
lahf
pop
mov
pop
in
movsb
lahf
hlt
pop
push
add
cs
jle
fisttpll
sbbb
ss
push
xor
sub
inc
jns
ret
inc
test
dec
push
sbb
repz
xchg
pushf
jg
mov
stos
pop
cmpl
xchg
push
mov
scas
jecxz
push
pop
jmp
jg
push
stos
dec
nop
hlt
and
frstor
jns
lcall
cmp
xor
enter
out
sti
sbb
pop
xchg
ret
popa
sbb
ret
mov
out
imul
mov
and
dec
jae
lret
xlat
xchg
mov
lret
inc
push
xor
popf
jae
sub
gs
jo
fdivrs
in
or
leave
adc
shrl
loope
fnsave
mov
dec
mov
orb
clc
test
add
fnstcw
bound
in
outsb
test
or
clc
in
mov
sub
cmp
push
adc
ja
daa
mov
stos
cmp
jp
mov
popf
inc
jbe,pt
and
out
pop
push
sahf
sub
or
cmp
aam
scas
sbb
inc
inc
adc
mov
jge
out
mov
test
or
fst
lahf
insb
sbb
adcb
ja
jb
jo
es
mov
pop
xchg
lret
pop
sti
adc
mov
nop
fnsave
dec
movsb
out
and
fildll
dec
mov
jne,pt
dec
mov
ss
lods
mov
cmp
sub
pop
cmp
add
dec
push
sbb
ljmp
fcom
jae
jg
mov
stc
mov
in
mov
pop
jle
insb
or
sbb
xor
and
aaa
sti
add
test
sahf
push
push
dec
movsb
ss
fsub
xchg
cmp
xorb
not
fsubs
icebp
xchg
jbe
insl
addr16
repz
mov
xor
popf
inc
les
pop
cmc
ljmp
mov
mov
mov
fwait
add
std
bound
daa
xor
test
loope
call
roll
sbb
adc
ret
jno
fistps
movsb
xor
cltd
ja
enter
or
fcompl
inc
pusha
xsave
bound
fidivrs
das
add
cwtl
push
push
hlt
les
xchg
aam
cld
out
hlt
add
ss
popa
std
pop
loopne
fistpl
std
sub
dec
adc
out
jae
mov
das
mov
rorb
ficomps
ret
leave
pop
and
xchg
bound
icebp
bound
ljmp
mov
mov
jo
push
mov
xor
in
paddd
or
adc
adc
dec
ja
mov
add
push
in
ffreep
or
dec
add
call
jne
dec
xor
bound
fyl2x
fidivrs
bts
pop
in
add
push
out
sub
in
test
sbb
jecxz
dec
das
pop
inc
out
jbe,pt
negl
lcall
lods
push
xor
outsb
cmpsb
ljmp
jg
out
pop
ljmp
rorl
xchg
adc
lret
dec
pop
in
push
inc
imul
scas
jp
cmc
loope
jg
mov
and
or
pop
xchg
pop
repz
jmp
loope
adc
mov
out
push
aas
lret
bound
int3
clc
mov
addr16
mov
jg
jl
pop
mov
call
jg
inc
jo
cmp
push
sbb
lds
std
dec
scas
idivl
mov
mov
inc
ljmp
outsb
lods
notl
test
add
jo
movsb
sub
lret
mov
in
pushf
jle
push
std
pop
push
jae
add
push
and
sbb
outsb
xlat
xor
inc
pop
iret
inc
nop
leave
es
sub
lock
loop
ret
mov
std
xchg
pop
addb
add
cmc
cmp
das
mov
vpxor
mov
iret
sub
inc
cmp
mov
lahf
cmpsb
sbb
mov
sbb
sbb
hlt
mov
stc
cmpsl
and
icebp
iret
in
pop
ds
and
adc
int3
js
jmp
insb
adc
xchg
inc
jl
sti
icebp
sahf
mov
inc
enter
xor
sahf
push
jmp
sbb
and
and
popf
and
inc
je
pop
mov
adc
cmp
mov
insl
outsl
jno
mov
pop
nop
add
stc
int
xchg
lds
in
sahf
out
out
and
mov
dec
add
cmp
inc
movsb
jo
or
scas
rdtsc
mov
sbb
pop
lods
add
mov
sub
test
inc
xor
cmp
mov
mov
add
mov
repnz
pop
push
in
jns
push
jnp
es
sub
jmp
aaa
xchg
movsl
shlb
test
out
and
and
popa
ljmp
pop
ds
inc
addl
push
cmp
jno,pn
push
xchg
push
mov
push
pop
call
adc
repz
add
xor
orb
lahf
fsub
mov
lahf
lea
loopne
subb
xchg
xor
mov
test
arpl
dec
dec
sbb
int
xor
fsubrl
sbb
ffree
xchg
inc
sub
test
loope
mov
mov
enter
ss
sbb
jnp
sub
jle
xor
inc
jns
cmp
das
aam
mov
fucomi
lea
icebp
in
push
addl
es
mov
aas
ret
add
stos
ss
test
dec
push
addr16
outsl
adc
daa
sub
clc
mov
ja
lds
idivl
or
mov
jae
jp
sub
sbb
and
xor
dec
sbb
xchg
cmc
mov
sbb
fnstenv
sbb
cmc
xor
mov
shll
dec
into
notb
dec
xchg
inc
and
cli
in
xor
in
cs
scas
jbe
imul
push
lds
shr
rcl
cmp
testb
push
lods
lods
movsb
mov
popf
scas
pop
andb
adc
pop
ret
jb
mov
out
xor
adc
sbb
jbe
adc
rol
cmp
fs
and
jle
sub
daa
jp
mov
ror
jmp
popa
repz
sub
cmp
inc
rclb
mov
dec
add
jp
mov
jp
lock
xchg
dec
push
cli
mov
dec
movsb
test
adc
ss
call
fists
mov
test
jp
and
pop
shrl
mov
jne
xchg
dec
mov
mov
dec
push
xchg
xchg
mov
sbb
sbb
fildll
jmp
loope
sbbl
xabort
imul
xor
add
out
sarl
fnstenv
xchg
ss
popf
sbbb
psubsb
outsb
or
or
jmp
in
test
ljmp
sahf
sahf
or
jo
xchg
jmp
push
call
in
int3
sub
lock
shlb
out
mov
jp
hlt
dec
lcall
rcl
add
mov
or
outsb
imul
mov
fwait
dec
in
imul
pushf
jne
jae
fistpl
dec
ret
in
daa
lret
out
xchg
idivl
mov
iret
bound
imul
fisttps
xchg
lahf
stc
in
into
je
mov
jp
std
js
xchg
jp
bnd
movsl
and
lds
cmpb
mov
dec
mov
adc
lods
xchg
dec
dec
test
int
dec
dec
rcll
push
adc
ret
sbb
adc
shrl
jo
rcrl
push
movsb
sbbb
sbb
addr16
adc
lock
fildll
fidivrl
stc
xchg
mov
jp
hlt
adc
repnz
dec
xchg
mov
fimuls
test
insb
add
shlb
fdivr
pop
iret
gs
xchg
loopne
test
aas
pushf
lea
shrb
sub
xlat
insb
push
push
dec
inc
addl
mov
jp
sub
data16
iret
add
in
cltd
aam
daa
dec
rorl
xchg
sub
fnstenv
das
bnd
idiv
xchg
mov
negb
cmp
cld
ret
in
insb
xchg
repnz
cmc
xchg
xor
jg
xchg
xchg
addr16
sbb
mov
push
xchg
roll
rcll
add
daa
sbb
stos
inc
mov
push
andl
stc
ret
push
lods
fidivrs
sub
and
pushf
lods
dec
mov
xchg
jnp
mov
xor
cmp
jecxz
mov
out
test
jmp
dec
inc
cmp
dec
mov
outsb
fwait
ja
sub
mov
mov
fdivr
mov
sbb
inc
aaa
test
into
cltd
jle
test
sub
stc
mov
fcompl
lods
cltd
dec
adc
fdiv
pusha
dec
lods
out
dec
call
pop
mov
pop
in
inc
fimuls
lcall
in
out
push
subl
mov
bound
mov
loop
fmulp
movsb
cwtl
popf
ljmp
loop
jae
roll
pop
pop
icebp
xchg
dec
rcll
or
jle
dec
bnd
fldenv
outsb
push
sti
dec
mov
dec
cmp
cmpsb
fwait
int3
dec
mov
xlat
lcall
in
outsl
movsl
in
ret
sub
or
cmp
mov
dec
jns
popf
popf
scas
int
stos
lret
dec
in
test
inc
jl
fisttps
pop
push
pop
fists
pop
jo
aaa
mov
out
loope
cltd
mov
jecxz
sahf
lret
rolb
xor
ja
imul
cmp
in
jmp
jne
xchg
lret
push
sahf
ja
cmc
mov
fdivrp
and
dec
out
sbb
jne
and
movb
jnp
scas
sbb
in
loope
in
mov
out
ret
jmp
in
and
shrl
scas
xor
mov
jmp
lods
xchg
js
lods
xlat
rorb
dec
cld
outsl
mov
jle
inc
scas
ret
add
cs
pop
sarb
push
sbb
push
push
sub
aam
icebp
cmpb
cmp
test
dec
xchg
lods
imul
rorl
or
lods
mov
mov
mov
dec
mov
push
xchg
or
sub
out
push
int3
add
shrb
or
mov
je
push
jne
xacquire
dec
lcall
dec
xchg
xor
mov
outsl
and
add
mov
mov
xor
push
adc
jbe
xchg
int3
cmp
xor
in
xchg
jno
inc
mov
in
ljmp
cmp
jp
lret
hlt
subb
xor
dec
push
dec
call
dec
inc
xor
enter
lods
mov
pop
test
ret
cmp
jnp
out
aas
fs
or
sub
out
xchg
bound
jp
push
mov
jg
cmc
mov
rorl
mov
cmc
out
lea
lret
scas
pop
adc
sub
ret
xor
sti
xchg
dec
mov
dec
dec
ret
xor
repnz
in
outsb
ljmp
js
lahf
pop
in
cli
dec
xchg
ja
xor
mov
mov
das
jge
leave
push
mov
loope
subl
cmp
xor
enter
divl
stos
ret
sti
stos
insb
rcrl
push
in
xchg
out
jg
imul
ss
sub
sbbl
cwtl
ret
cmp
push
outsb
mov
loop
sahf
cltd
inc
adc
or
push
inc
roll
push
and
push
pushf
sti
ret
jns
jb
adc
mov
sarb
ds
in
loope
cmp
mov
pop
sbbb
xchg
loope
xchg
xorb
imul
jae
fbstp
stc
aad
jb
fidivl
out
stc
dec
ror
test
int3
ficompl
dec
fs
decb
jo
push
int
push
bound
rorb
imul
mov
insl
mov
shrb
dec
push
out
lods
aam
push
xchg
lret
rorl
lahf
cmc
jle
jl
dec
lcall
sbb
dec
push
out
jae
and
xor
jns
ss
stc
adc
mov
fld
and
xchg
jg
int3
loop
lock
pop
cmp
je
femms
xchg
pop
sbb
imul
jb
imul
and
icebp
jns
and
pop
cmp
in
add
out
jmp
iret
mov
xchg
and
dec
cwtl
stc
jmp
fldt
ret
ret
aaa
test
xor
es
fistpll
std
jo
sub
test
mov
cmp
sub
call
xchg
roll
sti
hlt
ficoms
cli
dec
or
xor
insl
sti
ss
ds
test
cs
insb
cltd
mov
cmp
addr16
mov
mov
cld
insl
push
xchg
addr16
data16
sub
and
inc
and
mov
adcl
cmp
cmc
iret
add
stos
lods
push
add
test
roll
dec
cltd
sub
xorb
inc
insb
pop
shl
cli
test
pop
loop
jne
cmc
test
jg
ret
push
adcb
enter
mov
add
ss
sub
jmp
mov
loop
jp
xchg
cmp
xor
mov
fnstenv
adc
loope
jo
and
jo
and
outsl
push
and
addr16
pop
outsb
or
jmp
mov
out
aad
jle
push
jle
rcrb
cmpb
adc
jge
mov
sbb
dec
jg
enter
enter
enter
loop
rolb
pop
cmp
dec
jecxz
jmp
jecxz
lock
jecxz
lock
loop
jns
popf
subb
lods
imulb
mov
fld
movsl
movsl
arpl
test
sub
jns
sub
jge
lock
jb
idivb
jae
cmc
stos
rclb
mov
stc
xchg
mov
scas
popf
in
push
jo
iret
fnsave
xchg
jp
lods
sbb
xor
pop
fadd
fisttpll
jae
cmc
push
jae
cmc
push
repz
xchg
xchg
mov
xchg
sbb
test
loope
ret
ffree
outsl
mov
lret
jmp
sub
cwtl
icebp
sub
test
add
push
jae
repnz
jae
cmc
outsb
ficoml
dec
mov
xchg
dec
scas
imul
imul
jg
ret
into
jg
ret
sbb
mov
xor
cmp
or
ljmpw
xlat
sub
loop
imul
sub
adc
seta
xchg
push
or
adc
imul
ds
rcl
mov
fucomp
push
pushf
mov
mov
cltd
inc
insb
jbe
int3
and
frstor
sbb
adc
divb
js
push
addr16
lods
shr
popl
sbb
stos
scas
xor
nop
pop
and
pushf
insb
sub
fldt
repz
dec
ucomiss
mov
ljmp
in
mov
mov
add
idivl
pushf
jb
mov
out
xor
cmp
int
pop
push
aaa
lret
push
loope
push
test
inc
shl
mov
jb
dec
sub
outsb
push
inc
add
inc
xor
dec
shll
enter
jae
sar
xor
mov
addr16
fistpl
dec
iret
call
enter
sahf
pop
mov
ret
aaa
ret
dec
mov
jg
ljmp
addl
jmp
sub
adc
push
lods
mov
sahf
daa
or
pop
call
dec
dec
lahf
scas
or
jge
mov
xchg
or
or
dec
and
jns
pop
adc
xor
in
mov
add
xlat
mov
outsl
inc
mov
in
stos
movsl
stos
sub
mov
adc
fidivrs
clc
push
testl
jge
push
add
sbbl
test
jmp
in
pop
cmp
mov
fidivl
mov
iret
cmp
add
out
ljmp
mov
emms
mov
pop
sti
cmp
sub
sarb
dec
subps
fldenv
jb
andl
inc
ficompl
test
pop
aam
pop
mov
sahf
add
push
out
cmp
pop
clts
adc
fidivrl
adc
cld
sbb
pusha
add
movsl
ss
aam
lds
jmp
mov
sbb
cwtl
mov
out
mov
and
or
in
sbb
add
data16
insl
nop
jg
fstp
jns
xchg
add
or
xchg
into
ret
mov
cmpsl
fwait
mov
mov
push
cmp
mov
xchg
lea
out
loope
insl
mov
mov
xchg
sbb
bound
xchg
les
jnp
inc
mov
sub
call
out
xchg
xchg
mov
ret
inc
cmpsl
fistps
pop
xchg
shll
out
sub
and
pop
cmp
xchg
bound
jg
ljmp
mov
out
xchg
cs
shl
or
mov
leave
mov
push
lcall
ret
cltd
fwait
popf
test
sarl
sub
mov
out
shll
out
ss
jmp
push
loop
test
clc
mov
and
into
sbb
andl
cwtl
lds
pop
test
xchg
int3
add
das
fildll
imul
rolb
lea
jle
call
int3
mov
jne
andb
dec
xor
pop
leave
or
idiv
push
jne
jmp
rcll
sub
dec
dec
std
jae
fstl
inc
loopne
andb
inc
insb
insb
cltd
repnz
jecxz
cli
xchg
mov
fdivl
jl,pn
in
mov
fs
call
or
popl
pop
mov
jns
call
mov
add
jmp
imul
lea
loope,pt
inc
or
pop
jne
cmp
lret
in
ret
mov
push
addr16
scas
lods
fsubrl
inc
xchg
das
push
and
inc
pop
jae
movl
cmp
je
shll
out
push
out
add
cmp
pushf
cmp
dec
push
dec
mov
mov
lret
int
fs
call
adc
xchg
cmc
add
lock
cld
add
popa
popa
push
lcall
or
adc
inc
jbe,pt
les
dec
inc
mov
and
jbe
mov
xor
add
or
adc
movsb
pusha
sbb
mov
mov
adc
outsl
pop
dec
mov
imul
mov
dec
xor
adc
lahf
fwait
je
mov
mov
mov
cmp
out
fidivs
repz
jae
mov
jg
adc
mov
bound
jl
xlat
shll
arpl
fs
dec
pushf
fwait
xchg
inc
pop
pop
mov
inc
and
out
ret
shrl
dec
inc
addb
push
ret
sarl
cwtl
pop
xor
jecxz
dec
inc
loopne
inc
mov
jmp
or
cmp
push
mov
adc
mov
inc
xchg
and
scas
punpckldq
stos
cmp
and
fdivl
mov
mov
fsubrl
sbbl
pop
pop
and
push
push
insb
sbb
sti
jg
mov
mov
jge
mov
roll
cmpsl
outsl
xchg
mull
cmpsb
addr16
sub
sub
test
iret
int3
push
inc
sbb
test
popf
push
orl
cli
jge
lods
dec
jnp
in
mov
cmp
sub
jae
or
mov
sarl
scas
xchg
lods
sub
xchg
mov
cmp
pop
fsubrs
insb
mov
cmp
enter
add
mov
in
mov
push
in
mov
shrb
and
jle
stos
sbbl
mov
jge
stos
clc
push
dec
mov
das
imul
xchg
or
and
inc
adc
das
push
jno
scas
xor
jg
ret
sbb
or
test
add
sub
pushf
test
sub
cmp
or
cmpb
xor
test
rorl
fistpll
mov
xor
sbb
mov
call
lret
stos
dec
imul
scas
loop
sub
jnp
test
mov
addb
cmpb
repnz
subb
xchg
mov
loop
insb
xchg
aaa
mov
stos
cmp
mov
pop
imul
dec
xchg
jbe
mov
jge
cmp
fdivrl
cmp
cmc
jbe
sub
int3
fisubrs
xor
aad
idiv
xlat
test
gs
xchg
cmp
pop
mov
push
dec
fbstp
rcrb
mov
mov
and
mov
jnp
push
mov
sub
ret
sbb
mov
sub
mov
popf
xchg
xor
scas
dec
cmc
rcrb
xchg
or
insb
ja
mov
pop
jns
dec
or
xor
in
mov
xchg
xor
bound
pushf
shlb
dec
jb
pop
push
loope
add
sub
fwait
call
repnz
mov
mov
lahf
pop
in
sti
push
jmp
or
loope
cli
pushf
push
sar
cwtl
mov
inc
mov
aaa
imul
push
arpl
cli
out
js
sbb
mov
xchg
push
mov
push
stos
jmp
inc
insl
sbb
push
pop
lods
test
cmp
fimull
int
sub
jbe
cmp
dec
cld
fildl
ja
and
xor
pop
jns
lcall
loope
lahf
daa
mov
mov
lds
xchg
ret
xchg
mov
ss
leavew
fisubs
mov
cli
icebp
adc
ret
loopne
and
es
movsl
cs
ds
iret
icebp
ror
dec
data16
mov
fcoml
adc
js
inc
mov
data16
xchg
xchg
mov
or
lock
aam
stos
jb
inc
fimuls
icebp
push
or
fstp
jns
push
cmc
lock
rorl
jae
or
jbe
je
xor
xor
dec
shr
data16
data16
xchg
in
test
mov
dec
into
mov
dec
scas
adc
jne
cmpsb
lea
cmpsl
ja
ss
sbb
pop
lods
inc
fucomi
out
scas
cld
jle
fldt
cwtl
xor
jmp
fisttpll
inc
push
and
mov
xchg
out
push
push
dec
in
mov
test
loop
or
add
jl
xchg
mov
aaa
adcl
pop
mov
incb
insb
cld
in
push
ficoms
adc
stos
push
mov
popf
gs
jmpw
imul
mull
or
and
xor
popa
lret
cmc
ret
pop
outsl
push
xor
shl
pop
in
push
lcall
cmp
jp
test
pop
inc
adc
stc
addr16
cli
shl
mov
sti
lods
and
cmpsb
std
mov
out
das
fcoms
les
data16
fdivr
rolb
adc
stos
sbb
or
lods
mov
sub
dec
sub
cwtl
and
lret
lock
imul
xchg
cmp
lods
jecxz
scas
cltd
movsl
sub
add
xor
or
fwait
movsl
ret
sbb
fdivr
mov
sub
mov
xchg
pop
jmp
pop
xchg
or
and
dec
cltd
jecxz
xchg
mov
or
mov
pop
adc
les
mov
inc
movsl
neg
es
pop
lods
int
in
fs
sub
xchg
roll
out
xchg
aad
push
mov
popa
mov
cli
inc
sub
xchg
rcrb
sub
loope
sub
inc
bound
dec
mov
xchg
add
mov
mov
imul
adc
fwait
dec
mov
int
and
in
ja
adc
cmpsb
pop
daa
dec
bound
incl
sub
cli
sub
inc
jne
aas
repz
xor
dec
jecxz
insl
stc
mov
sub
cmp
dec
sub
push
inc
or
lret
ret
dec
sub
syscall
push
stos
mov
sbb
sbb
mov
lea
out
sub
leave
je
xchg
mov
sub
incl
dec
inc
xor
das
roll
icebp
jne
mov
mov
out
pusha
xchg
or
ret
jns
fnstenv
test
inc
clc
fbstp
cmc
adc
jne
inc
loopne
cmc
out
jp
or
sub
sbb
sub
adc
jb
jge
jp,pn
mov
dec
sub
pop
jns
xor
mov
push
sahf
nop
outsb
std
push
loop
adc
rolb
shrl
cli
fisubrs
das
cmc
xor
repnz
or
adc
mov
outsl
popa
cmp
test
pop
test
test
js
push
pop
lea
ret
shll
dec
arpl
sbb
sbb
lret
daa
inc
sbb
jl
stos
inc
xchg
or
adc
out
cmpsl
cli
push
daa
lret
fldenv
jmp
push
adc
push
adc
in
out
push
int
daa
movsb
mov
push
dec
cwtl
movsb
imul
pop
call
push
fisubrl
dec
pop
cltd
movl
jno
sahf
sbb
mov
dec
subl
and
hlt
in
jbe
push
stos
das
decb
aad
pop
pop
push
sub
cmpsl
mov
test
sub
inc
or
fs
cld
stc
fwait
outsb
jbe
xor
jno
into
push
jbe
nop
sarl
out
je
add
add
xchg
aam
pop
mov
fimuls
sub
cwtl
jecxz
lret
fldt
push
int
and
popa
sahf
push
test
jge
push
aam
jecxz
lcall
cmp
inc
cmp
mov
rorl
cmpsb
mov
enter
xor
insl
push
int3
lea
shll
ja
sub
mov
ds
cli
cmp
pop
sub
jae,pt
adc
sahf
and
out
daa
pop
jbe
xor
or
in
xchg
xor
cmp
dec
dec
pop
jl
in
add
daa
mov
pop
sub
pusha
int
in
je
mov
gs
lahf
mov
cmc
in
testl
cld
ret
stos
mov
mov
add
sbbl
inc
mov
fcmovnb
push
or
pop
mov
out
xor
xor
in
cld
push
lret
lods
lods
jle
push
adc
dec
sub
iret
mov
push
fdiv
cltd
jp
lret
push
insb
dec
xlat
fistpll
mov
push
push
mov
sub
ret
stos
daa
jbe
sbb
xor
mov
inc
push
pop
data16
data16
sbb
jo
ret
fdivrs
jo
lea
xlat
gs
or
data16
outsb
test
dec
lret
mov
adc
or
bound
lea
hlt
and
hlt
stos
in
iret
xor
and
inc
push
loop
inc
scas
xchg
je
pop
fxch
fdivs
adc
fbld
xchg
insb
mov
mov
mov
push
test
out
test
aas
into
ret
mov
ret
or
jg
sbb
jbe
mov
mov
add
cld
adc
add
fimuls
and
add
xor
gs
jbe
inc
int3
push
int3
pop
in
add
adc
insb
pop
cmc
lods
sahf
pop
stos
jbe
rcll
fidivl
xchg
das
pop
lret
push
inc
addr16
cmpb
shrl
inc
inc
out
jne
fbld
int3
inc
dec
sbb
subb
in
dec
adc
mov
insl
jnp
pop
inc
cltd
push
mov
mov
shrb
fwait
shll
xor
adc
popf
pop
mov
jg
adc
aaa
imul
cmp
popf
lds
add
mov
xchg
cmp
mov
xor
lods
sbb
testl
jns
out
es
in
mov
lcall
inc
lcall
dec
or
in
popf
lret
outsl
shrl
and
sahf
xchg
inc
into
push
imul
mov
shl
lahf
push
mov
xchg
add
fdecstp
mov
repz
or
cmp
or
jae
xchg
fwait
pop
lcall
orl
hlt
mov
inc
roll
pop
mov
aaa
mov
je
sub
sub
in
stos
pop
sbb
int
insl
push
mov
push
push
adc
std
sub
adc
ss
inc
or
cwtl
out
les
popa
ja
sub
ja
out
mov
imul
insb
xchg
out
or
fisubl
inc
out
mov
or
je
movsl
imul
and
sub
and
hlt
push
jnp
cmpsl
into
mov
cs
and
mov
pusha
jae
adc
adc
xchg
stos
roll
icebp
fbstp
sub
lret
pop
cmp
push
jmp
movq
push
mov
adc
fs
icebp
out
dec
pop
sub
ljmp
xor
jbe
jp
fiadds
inc
test
dec
test
xorl
test
out
sub
push
add
mov
daa
inc
mov
adc
shr
sbb
dec
arpl
sbb
inc
scas
jo
and
fwait
push
or
xchg
sub
inc
orb
js
xor
pop
pop
cs
ss
imul
stc
cmpsl
and
rorl
dec
xchg
insb
add
add
insl
les
pop
jecxz
pusha
push
cmp
mov
lods
jae
stos
cltd
dec
dec
stos
xor
rcrl
cmpb
les
mov
mov
jnp
inc
sub
test
sbb
push
pushf
add
loopne
and
pushf
outsl
mov
mov
ret
cmp
test
call
imulb
call
xchg
cmpsl
mov
mov
xchg
lcall
aam
test
iret
das
aas
cmp
jo
mov
xchg
adc
pop
popf
sub
push
into
adc
int3
xchg
cmp
iret
in
dec
xchg
ret
outsl
je
or
mov
ret
icebp
jno
mov
ja
jb
mov
push
mov
jne
add
dec
shll
inc
sti
sub
shl
or
adc
in
xor
scas
mov
out
dec
lock
or
cmpsb
std
adc
notl
into
cwtl
jnp
iret
and
jl
mov
cwtl
cs
in
lret
pop
jle
fdivl
xchg
nop
push
lock
daa
mov
and
jo
gs
sbb
and
call
aam
pushf
in
gs
mov
test
adc
stc
dec
cmpb
push
lcall
aad
lds
adc
fwait
insb
xor
mov
scas
lret
jmp
pushf
aam
cmp
or
lock
sub
xor
mov
mov
mov
movsb
in
pop
fcmovne
loop
add
cmp
and
jg
cmp
inc
jne
mov
sub
mov
push
mov
jge
xchg
push
loope
mov
popf
popf
jb
adc
icebp
push
iret
xor
inc
cmc
add
sub
and
or
fbstp
nop
in
jns
sub
pop
out
mov
icebp
or
mov
andl
iret
addb
scas
adc
stos
mulb
mov
jle
xchg
popf
xlat
daa
sbb
cwtl
dec
roll
out
dec
data16
xchg
fildll
xchg
subl
mov
lods
push
cmpsb
lods
xor
aaa
lea
arpl
adc
push
mov
mov
popf
inc
mov
in
mov
lea
jo
add
nop
addl
test
push
mov
dec
mov
jns
add
dec
in
sub
xlat
dec
jo
sbb
fsubp
filds
adc
aas
icebp
xor
and
gs
mov
loop
repz
sub
push
mov
push
addl
sbb
movsl
stc
mov
push
xchg
sub
jmp
cmp
mov
arpl
xchg
pushf
dec
sbb
mov
mov
stos
xchg
scas
add
data16
jns
orb
and
xchg
adc
imul
adc
cs
push
mov
cmp
xlat
out
mov
adc
xchg
sbb
mov
insb
inc
or
pop
test
add
dec
xchg
cmpsb
fsubrs
pusha
jns
push
sbbb
mov
into
fcmovnu
mov
jge
lcall
loopne
mov
pop
daa
test
subb
cmp
and
dec
inc
and
cmp
out
mov
jmp
rcr
test
inc
pop
stos
lea
adc
insl
cmp
lods
sub
add
scas
jmp
clc
dec
mov
mov
xor
arpl
jp
mov
sbb
scas
scas
push
rcr
pop
xchg
add
mov
cs
mov
loop
lods
mov
xchg
ret
mov
fnsave
dec
xchg
dec
push
or
ret
mov
sbb
mov
in
stos
mov
mull
cmp
or
push
and
push
aaa
sbb
test
mov
cltd
or
test
push
orb
xlat
aas
pop
aaa
mov
jmp
xchg
repnz
pusha
lahf
call
mov
inc
decb
scas
mov
pushf
fadds
mov
ja
jae
lds
xchg
adc
lea
or
or
jmp
jae
or
cmp
sbbb
xchg
sbb
jge
out
jns
and
mov
jae
insb
adc
and
cmp
imul
sub
mov
jmp
cmpsb
push
cmp
sub
imul
andb
cli
lods
stc
std
inc
in
cs
add
inc
pop
movsl
sbb
sbb
lret
fwait
pop
add
jle
push
mov
push
cld
fst
in
push
dec
pop
bnd
call
dec
cli
or
mov
in
cmc
sbb
push
adc
push
imul
add
mov
sbb
aaa
into
repz
sub
mov
pop
mov
adc
movsl
jp
shr
lret
pop
es
fsubr
leave
pop
pop
xchg
xor
mov
adc
sbb
adc
sahf
lds
sub
subb
mov
adc
or
ds
dec
push
inc
mov
sbb
rolb
mov
test
jno
mov
mov
sub
imul
inc
dec
jge
jo
stos
testl
in
jge
mov
cmpsl
mov
xchg
ret
sub
adc
ret
lea
ret
cwtl
sbb
inc
and
sub
xlat
lret
xlat
xchg
sub
fwait
jecxz
and
pop
repnz
insb
gs
hlt
fidivs
sti
push
mov
add
mov
je
movsb
mov
mov
outsl
inc
xchg
pop
jns
shll
lods
cmpsb
jnp
xchg
or
adc
loope
shrl
add
dec
stc
jecxz
jo
nop
adcl
mov
and
ficompl
xchg
insl
push
sub
stos
mov
mov
fwait
sub
jle
js
push
adc
ds
int3
fldenv
into
mov
das
adc
gs
push
out
sbb
xchg
push
dec
scas
mov
pop
or
rclb
adc
ss
mov
xchg
scas
orl
fmul
sub
sub
fdivrl
push
sahf
sbbl
ja
jno
xlat
out
lds
pop
jne
pop
xor
mov
into
sub
aam
push
test
insl
leave
call
and
stos
lret
mov
xor
cmp
mov
mov
ds
cpuid
add
mov
sub
out
daa
mov
push
daa
shl
inc
daa
lret
mov
lods
inc
jnp
stos
lods
out
jg
sub
addr16
jmp
pop
jbe
loop
jmp
inc
dec
inc
lods
bound
mov
mov
setno
cmp
add
in
cmp
pushf
cs
lahf
jmp
or
adc
ljmp
cmp
clc
cmp
in
repnz
and
jmp
fldenv
mov
add
mov
out
push
push
insl
test
mov
xor
out
mov
xchg
mov
iret
pop
jae
bound
sbb
enter
add
xor
cmp
mov
hlt
mov
mov
in
jmp
in
adc
mov
and
loope
push
sbb
ret
mov
loop
jnp
push
adc
push
outsb
xchg
rolb
jbe
mov
sbb
inc
jle
fisubl
rorl
push
ljmp
mov
inc
or
stos
mov
mov
int
test
inc
push
xlat
sbb
in
add
pop
and
in
orb
and
call
push
rcr
pop
loope
pushf
mov
insb
jns
mov
push
sub
das
clc
push
or
sub
push
mull
jle
dec
mov
inc
js
shlb
xchg
jg
rol
cmpsb
fcompl
push
mov
mov
cmp
loopne
sbb
inc
popf
adc
arpl
sti
push
or
fmul
clc
adc
fsubs
and
xchg
xor
cmp
xor
pop
push
add
popa
sub
mov
popa
fucomi
sub
inc
mov
adc
out
loop
aas
xchg
cmc
sbbb
sub
sahf
dec
inc
pushf
inc
push
or
dec
xor
cmp
pop
pop
mov
les
and
sbb
leave
repnz
test
enter
lods
push
bound
inc
fisttpl
loop
inc
push
dec
sbb
fistpl
jecxz
pop
mov
ret
inc
daa
xor
dec
lret
xchg
sarl
daa
pop
loop
je
inc
sub
adc
fists
push
out
fistpl
cmp
push
dec
scas
lret
jl
mov
cli
faddl
lods
test
aad
clc
cli
inc
dec
mov
mov
sti
jbe
sub
fs
jmp
jnp
mov
and
lahf
mov
cmp
jo
mov
cmp
mov
cmp
and
js
pop
mov
rclb
jp
fists
mov
jae
lods
push
adc
sub
int
hlt
sub
mov
mov
leave
out
lods
jnp
or
loopne
dec
xor
pop
adc
fimuls
sbb
cmp
lods
les
insl
ss
cmp
hlt
cli
fcom
repz
subb
or
push
in
mov
jg
lods
fnsave
cmp
shl
stc
int
ss
add
xchg
imul
lret
pop
pop
clc
inc
push
mov
loop
and
or
lret
int
fisubl
push
icebp
popa
into
mov
mov
xor
std
or
imul
jg
in
mov
sbb
mov
adc
pop
inc
sub
adc
pop
mov
adc
mov
pop
nop
mov
stos
dec
or
inc
cli
test
dec
xchg
dec
cwtl
mov
js
enter
or
cltd
jg
push
sbb
mov
lea
push
jb
aam
loop
xchg
lods
adc
pop
in
push
scas
in
mov
repz
stos
pushf
dec
mov
push
inc
xor
shll
jno
call
addr16
ljmp
fisubs
stc
fildl
pop
imul
ficoms
adc
or
test
mov
filds
pop
in
inc
popa
xor
sub
mov
fisttpll
je
fadds
enter
mov
push
fsubl
imul
add
les
loop
or
out
hlt
sub
mull
jp
push
push
sub
adc
loopne
jb
mov
icebp
jmp
ss
xchg
sahf
fwait
pushf
jb
rcr
in
xchg
mov
dec
fcomps
xchg
xlat
lods
add
loope
int
in
jbe
aam
cld
fstl
call
dec
rcrl
aad
decl
add
aam
out
es
inc
lcall
add
icebp
imul
inc
push
lret
dec
shrb
paddd
xor
imul
mov
push
lods
stc
lret
ficompl
imul
cmpsb
movsl
add
je
iret
test
xor
lahf
adc
int3
xchg
inc
sub
pop
or
in
dec
daa
mov
sbb
xchg
sbb
xor
mov
fsubrl
mov
cmp
mov
stos
popf
or
pop
leave
push
adc
dec
mov
sbb
sbb
pusha
js
adc
iret
xor
into
mov
lods
xchg
jns
xchg
and
pop
fisubrl
gs
loope
out
mov
data16
or
je
int3
mov
dec
or
fmul
iret
jecxz
mov
dec
push
push
xchg
mov
mov
push
sub
mov
mov
fldenv
test
imul
mov
sbb
loop
lods
mov
jmp
dec
pushf
test
mov
mov
pop
int
or
adc
jmp
movd
and
inc
push
mov
cmpsl
sbb
push
jnp
sahf
fwait
shrl
or
lds
ret
les
movsl
je
xor
bound
sub
leave
int
cli
fcmove
push
scas
jmp
loope
data16
movsb
cmpb
icebp
lret
add
cs
nop
js
or
outsl
lcall
bound
into
cmp
jbe
nop
lret
dec
mull
jbe
ret
mov
scas
jnp
jnp
cltd
mov
inc
adc
mov
mov
mov
loope
mov
xchg
jge
loopne
out
fsts
shrb
xchg
shlb
in
imul
imul
mov
loopne
inc
push
lret
int3
lret
xchg
js
sti
pushl
loop
out
add
ljmp
rcll
dec
in
js
mov
xor
and
sarb
and
ss
or
cmp
in
xchg
push
mov
std
mov
inc
fldenv
dec
xor
fsubrp
mov
outsl
adc
dec
jmp
and
and
pop
dec
mov
mov
sti
int3
adcb
jmp
sub
adc
push
ret
pop
into
arpl
xchg
sub
sahf
repnz
pop
pushf
pop
in
pop
mov
out
repz
jmp
mov
stc
jmp
test
or
mov
jae
aaa
fsubl
dec
stc
and
insb
inc
rcll
xchg
adc
lock
sub
xor
clc
add
cmp
cwtl
cmpsl
pop
lahf
out
cmp
adc
les
insb
lods
jno
mov
int3
or
in
sar
jnp
mov
das
loopne
out
lahf
mov
push
jmp
mov
dec
fstps
pop
add
cmp
jle
jbe
jnp
add
cmc
out
lds
inc
mov
cmc
jmp
pushf
das
or
jne
adc
scas
jg
mov
xor
jmp
mov
out
adcb
xor
icebp
iret
int3
push
mov
lds
data16
outsb
ss
mov
xchg
sbbb
mov
loopne
gs
push
sub
je,pn
ss
cs
sub
sub
outsb
jo
pop
test
loop
mov
out
mov
int
push
mov
xor
pop
jecxz
rcrl
cmp
jb
sbb
pop
lods
fnstsw
out
sub
xor
repnz
xor
hlt
and
inc
dec
insl
lds
outsb
negb
mov
xor
xor
push
lea
pop
scas
outsb
test
jl
lret
shrb
cmp
out
xor
jg
pop
adcb
inc
pop
cld
cmpl
das
cmp
jbe
lcall
mov
test
sbb
int3
shlb
lds
lea
mov
inc
xorb
loopne
test
stos
fstpl
ss
jne
cmp
adc
nop
mov
int
xchg
jle
add
dec
int
scas
aam
mov
xchg
fadds
push
mull
scas
xor
lods
inc
idivl
xor
aas
mov
sub
in
sbb
jge
mov
outsb
test
ljmp
cld
negb
pop
mov
add
ljmp
mov
pop
cmc
mov
jg
mov
lods
and
jle
nop
insb
movsl
popf
jg
mov
dec
daa
lret
add
insl
aad
enter
inc
adc
shrb
fidivs
dec
lods
mov
and
js
adc
icebp
into
fidivs
sub
pop
mov
into
shlb
xchg
int3
repz
cmp
in
adc
js
push
sahf
fsubr
sub
xchg
xchg
pop
xor
xchg
cmp
xchg
mov
add
aad
in
xor
mov
mov
or
cmpsb
add
cwtl
mov
cmp
xchg
mov
mov
sub
ljmp
cmp
xor
out
divb
addr16
dec
inc
mov
subl
aad
add
mov
mov
enter
mov
mov
mov
xchg
pushf
popf
stc
fsubrl
cmpsb
lock
inc
call
nop
lret
roll
stos
loop
pop
jp
jae
lahf
in
mov
arpl
jmp
jp
pusha
rclb
dec
adc
loope
xchg
scas
dec
lds
add
ret
in
mov
mov
xchg
imul
fs
enter
pusha
sub
dec
and
add
ja
rcll
in
inc
notb
cli
in
push
adc
pusha
sti
xlat
mov
in
cmpsl
stos
hlt
xor
mov
cli
jge
inc
xlat
sub
aaa
mov
loopne
aad
inc
cmc
and
lcall
aad
negb
out
jb
idivb
jnp
xchg
sbb
add
mov
or
mov
xchg
aas
or
rorb
insl
adc
push
fmul
inc
or
push
aas
inc
mov
movsl
xlat
adc
fcmovu
pop
push
imul
push
sbb
rolb
lods
push
push
push
filds
sbb
xor
ret
test
jae
mov
daa
and
fs
mov
lds
xor
jbe
sar
cmpsb
cwtl
int
inc
fisubrl
sub
ficompl
in
popf
sub
popf
in
sarb
jg
mov
xor
daa
lahf
mov
or
cmp
jg
push
fildll
fld
ffree
and
idiv
cmp
mov
mov
ds
cs
push
std
hlt
outsb
cs
divb
mov
push
mov
insb
inc
mov
fucomp
jmp
sbb
pop
and
jnp
mov
dec
jo
xchg
push
sbb
test
ret
fmul
push
orl
gs
mov
jbe
cmpsl
enter
ss
pop
jo
imul
push
dec
xchg
xchg
hlt
or
sbb
rorl
les
cmc
mov
inc
lahf
popf
inc
adc
xor
hlt
add
xor
aaa
cmp
and
cli
mov
hlt
jecxz
clc
loope
outsl
insl
fs
lea
jae
jmp
push
sbb
push
popa
xchg
lock
clc
dec
popf
stos
jl
cld
jnp
fucomi
mov
movsl
mov
fwait
cmp
bound
cld
jp
imul
insb
hlt
sbbl
and
in
xor
dec
out
jp
inc
xchg
pop
mov
ret
jno
xlat
decb
mov
pop
and
frstor
pop
push
push
fsubrs
pop
int
in
aam
jecxz
insb
push
dec
scas
out
repz
jmp
filds
popf
sbb
lahf
cmpsb
sar
sbb
jle
inc
and
cltd
scas
test
mov
hlt
fnstsw
push
pusha
jecxz
andl
jmp
faddl
je
mov
loopne
addb
aad
gs
lods
cmpsb
adc
cmp
inc
mov
lods
lods
sbb
movsl
dec
lds
ss
mov
jmp
inc
sbb
sbb
jno
lea
push
xchg
sub
int3
inc
stos
lea
scas
jno
fisubs
ffreep
or
jmp
dec
into
testb
dec
inc
jbe,pt
fiaddl
lret
or
mov
adcb
insl
cmp
fdivs
sbb
xchg
inc
mov
fdivrs
loope
fmulp
cmpsl
push
mov
xchg
je
jnp
aaa
or
es
push
fdivrl
mov
sti
addb
push
insl
jecxz
or
loopne
sahf
gs
fisubs
in
mov
cmp
testb
fdivrp
cld
jmp
fldl
mov
dec
stc
inc
fnstsw
mov
mov
xor
mov
jge
dec
call
jnp
add
jnp
and
xorb
push
dec
cmc
jecxz
lods
insl
push
and
dec
xchg
cmp
in
jge
push
movsb
jae
inc
push
js
push
test
mov
mov
aaa
jne
jae
in
xchg
mov
dec
fcoml
mul
stos
inc
pusha
rorl
inc
ficompl
loop
mov
mov
inc
inc
pop
jecxz
lcall
iret
cmp
popa
mov
jns
hlt
stos
dec
in
in
mov
inc
xchg
stc
ret
push
mov
xchg
in
mov
adc
cmp
imul
dec
sub
lock
outsb
and
cltd
xchg
popf
out
push
xchg
in
push
fs
xor
push
xor
jbe
sbb
mov
ret
mov
movzbl
jns
test
jl
ret
mov
push
test
cmp
push
int3
popf
into
jle
lret
mov
cltd
test
mov
jp
jnp
cli
cld
ret
pop
dec
and
xor
ljmp
or
stc
cltd
dec
dec
ds
jmp
mov
fucom
divl
add
xor
jmp
out
in
ficoms
mov
adc
test
mov
int3
push
into
lret
dec
mov
out
lods
push
xlat
mov
jno
int3
out
dec
xor
dec
fsts
repz
and
mov
cmpl
lock
dec
sbb
aas
rcll
and
xchg
fists
aas
xor
fwait
icebp
or
call
cmp
push
mov
inc
adc
je
sbb
inc
out
add
jmp
fmull
push
jo
int3
mov
imul
sbb
nop
fdivs
or
mov
call
mov
xor
jns
pop
mov
push
lcall
repnz
cmpxchg
jns
jnp
adc
hlt
mov
insb
lods
dec
andb
stos
xchg
aas
sbb
xchg
pop
jno
or
sbb
imul
mov
sbb
ja
xchg
ror
lahf
cmpsb
mov
loope
xchg
xor
push
xor
sarl
pop
in
dec
pop
stos
xor
imul
xor
adc
or
int
or
lret
mov
outsl
and
sub
sub
sub
movsb
shl
push
jmp
rorb
xor
add
sub
adcl
decl
add
hlt
push
aas
test
dec
xchg
sub
add
xchg
bound
mov
es
dec
stos
in
rcl
jmp
enter
and
fstpt
cs
roll
and
test
lret
lahf
inc
cmpsb
sahf
pushf
or
push
add
or
jbe
inc
ja
test
adc
cli
repz
mov
fstl
ffreep
cmp
jmp
jbe
data16
xor
aaa
xchg
idiv
cmp
push
push
rsm
inc
mov
orl
xchg
aam
fisubrl
cmp
jge
inc
test
xchg
mov
fistpll
and
mov
mov
push
mov
xchg
popf
xchg
aaa
add
adc
sahf
cmc
data16
pop
test
sub
movb
jmp
subb
in
mov
xor
or
cmp
iret
jle
cmp
jmp
mov
cmp
push
pop
jecxz
pop
dec
ljmp
adc
mov
xchg
mov
dec
inc
push
xchg
sub
das
pop
loope
jo
inc
xor
inc
sbb
testl
cmp
aad
sbb
lret
inc
mov
add
leave
push
mov
hlt
popa
scas
push
das
inc
sbb
insl
mov
adc
inc
data16
lahf
pop
icebp
inc
aas
mov
popf
xor
push
loop
cmp
iret
xor
sbb
adc
aaa
loope
cmp
pop
sahf
fsubs
out
in
fsubl
push
jbe
stos
jp
dec
mov
xor
ret
sub
and
jmp
arpl
mov
and
mov
pop
jmp
pop
inc
or
add
and
sbb
pop
jno
out
lahf
std
and
jne
mov
idivl
cld
mov
and
push
adc
and
mov
xchg
sub
push
jmp
mov
jg
lods
pop
out
aam
lods
stos
daa
push
dec
mov
ret
fadds
pushf
cmc
add
sbb
fsubrs
inc
fisubrl
push
pop
rorl
mov
dec
fs
push
scas
mov
aad
test
mov
mov
mov
xchg
lds
jno
stos
xchg
aad
imul
in
and
mov
ret
sub
out
lock
lock
adc
jg
andl
xchg
jge
dec
mov
fistps
insb
add
or
aaa
jbe
jle
lahf
loope
ror
push
mov
frstors
loope
xchg
dec
aas
addl
bound
sbb
int
inc
scas
movhps
ret
xor
mov
xor
fcompl
dec
mov
and
cltd
jp
das
mov
stos
das
fsubrs
mov
lods
sub
and
mov
pushf
sbb
cmp
out
ss
jb
push
out
mov
lods
pusha
and
push
popl
test
ljmp
shl
sbbb
pop
jl
in
int
push
or
mov
mov
test
lret
into
imul
stos
lds
fsubr
subl
into
adc
or
aam
shlb
xor
jl
push
adc
test
imul
add
in
cld
insl
aaa
les
in
or
cmp
loop
test
vmwrite
icebp
out
loop
push
adc
cs
aaa
out
scas
int3
add
mov
push
imul
sub
jp
push
xchg
sub
mov
fnstenv
stos
mov
ret
pop
push
add
adc
sub
pop
xchg
push
insb
imul
repz
add
mov
mov
dec
or
xchg
xor
lret
fwait
sub
out
shll
lds
xchg
xchg
in
inc
lods
push
js
fildll
dec
inc
lea
out
addl
aas
sbb
movsb
mov
fiaddl
out
pop
imul
adc
mov
lock
outsl
aad
in
sbb
inc
dec
mov
sub
call
pop
scas
ret
mov
push
sbb
jo
aad
lods
adc
rorb
jns
popf
add
xchg
pop
cmpsl
pop
in
jl
dec
pop
jns
cmp
popa
jb
lcall
push
cs
arpl
ss
push
adc
dec
outsb
xchg
cmp
mov
jg
ljmp
out
sub
add
lahf
inc
pop
ret
ret
mov
sahf
stos
insb
push
movsb
push
lock
cmc
push
pop
fildll
mov
stos
xchg
cld
stc
jge
push
lcall
mov
inc
dec
dec
std
pushf
ss
fwait
push
sarb
sbb
dec
sbb
arpl
imul
sbb
mov
inc
rorb
jmp
test
rcl
push
sub
imul
shrb
scas
pop
aaa
sbb
adc
movsb
jle
aad
add
push
push
sti
sub
nop
adc
jg
shl
cwtl
mov
mov
ret
cmp
je
scas
in
pop
int3
out
jmp
jecxz
ja
dec
jl
pop
das
and
and
popa
scas
sbb
call
jl
sar
mov
test
sub
push
xchg
imul
ss
dec
jbe
sbb
loop
jbe
sahf
pop
jns
mov
inc
shr
jmp
sbb
push
popa
inc
out
mov
out
loope
xchg
xchg
or
inc
aaa
jmp
test
in
inc
jbe
jmp
push
push
sbb
or
sub
cwtl
movsl
jmp
cwtl
insl
ss
mov
inc
inc
add
mov
orl
cmp
fsubrl
inc
inc
lret
inc
adc
jne
xor
test
pop
push
adc
sub
inc
xchg
push
ss
pop
imul
in
scas
xchg
mov
push
push
xor
rclb
inc
or
sbb
mov
lcall
mov
fimuls
addr16
adc
cld
or
imul
and
aas
test
adc
dec
shrl
pusha
test
push
jge
mov
scas
jp
fs
dec
jns
mov
cmp
sbb
imul
mov
sbb
or
jae
cs
dec
mov
rcll
lahf
dec
jae
mov
aam
inc
divl
pop
add
push
aad
mov
sarl
idivl
ficompl
test
inc
mov
xchg
mov
cwtl
pop
lock
push
cs
sbb
loopne
nop
dec
aas
scas
cmp
mov
insb
push
jns
sub
cwtl
jl
lds
repz
adc
iret
jmp
jp
stos
xchg
jbe
popf
xchg
fisubrs
dec
mov
dec
out
xchg
fnsave
daa
mov
and
divb
cmp
mov
push
lahf
out
jle
jl
mov
push
cmpsl
dec
mov
icebp
xchg
inc
mov
mov
mov
mov
mov
and
mov
add
cmp
xor
or
sti
pop
in
or
pop
mov
andl
ficoms
jne
loope
dec
scas
sbb
cmc
mov
cli
lret
fnstsw
subb
sub
jecxz
cli
cli
mov
add
dec
xchg
call
scas
repz
int3
ja
repz
stos
sahf
push
test
cmp
xchg
ljmp
and
sahf
inc
ss
mov
sub
xchg
push
cmp
fistl
insb
jb
jge
jmp
and
mov
dec
shrb
inc
out
mov
xor
aas
and
jp
aas
lret
adc
and
cmp
xchg
leave
sbb
dec
xor
out
push
pusha
std
pop
pop
and
inc
sub
adcl
loope
and
sbb
insl
sub
lds
xchg
add
imul
mov
cmpb
enter
popf
mov
inc
inc
sahf
inc
addr16
imul
insb
insb
adc
dec
dec
or
scas
dec
inc
push
rorb
or
push
or
sub
popa
pop
push
clc
add
or
gs
addb
loope
aam
lcall
in
pop
mov
pop
inc
aad
mov
outsb
dec
pop
cld
scas
dec
jle
mov
je
ljmp
imull
mov
mov
xor
insb
icebp
sub
add
mov
pop
loop
cmpsb
icebp
jbe
repnz
xchg
into
push
push
es
movsb
xchg
mov
adc
mov
int
cmpsb
push
out
das
stos
push
adc
outsb
jp
fsub
fsts
and
pushf
xlat
fxch
lods
dec
mov
cwtl
mov
mov
adc
imul
jp
fistps
inc
or
sbb
shll
mov
jg
je
lods
ja
test
iret
lods
in
sub
fincstp
in
pop
dec
out
dec
and
xorl
cmpsb
out
insb
movsb
mov
pop
sahf
pop
sarb
clc
fsubrl
aad
lahf
stos
imul
movsb
popa
cmp
hlt
jb
pop
fs
ss
sub
lds
dec
push
jle
insl
jecxz
popf
jecxz
xchg
xchg
adc
jle
fsubl
mov
jns
cmp
jmp
pusha
or
aad
mov
inc
mov
jne
or
mov
bound
mov
loop
lods
movsb
sbb
jns
hlt
negb
mov
mov
adc
nop
mov
mov
mov
je
jns
incl
mov
or
add
aam
shrb
movsb
mov
sub
mov
jmp
xchg
in
pop
nop
popa
dec
xchg
adc
sub
mov
popa
pop
je
mov
dec
into
lahf
inc
jmp
cmp
iret
out
cmp
push
pop
mov
xchg
pop
xchg
and
jbe
hlt
mov
int3
push
sbb
in
in
mov
test
fdivp
jge
shl
jp
fildl
fs
ss
jecxz
and
testl
dec
sub
mov
add
push
inc
jge
loope
lods
insl
mov
sahf
out
ror
loopne
loop
mul
ds
push
call
aad
lock
push
mov
add
lahf
dec
in
xchg
in
iret
sbb
jne
dec
lret
mov
dec
mov
rclb
in
icebp
int3
hlt
xchg
mov
push
out
sbb
ljmp
stos
movsb
xchg
or
je
xchg
inc
shlb
xchg
test
mov
jo
xor
cmpsb
xchg
gs
outsl
dec
jns
lea
imul
addb
imul
cmc
stos
test
dec
xchg
add
inc
stos
jle
pop
cmp
xchg
out
stc
mov
mov
mov
jge
in
or
push
pop
sahf
fidivrl
cs
out
ljmp
test
pushf
push
sbb
in
add
mov
enter
or
mov
add
and
lea
out
in
push
inc
aaa
push
or
rcll
lret
sbb
cmp
lock
in
addr16
jmp
pop
xchg
sub
xchg
sbb
outsb
add
mov
stos
pop
faddp
fidivrl
push
adcl
or
aas
lahf
mov
cwtl
ret
lea
adc
adc
cmp
xor
test
jecxz
ds
sub
cmp
filds
add
movsl
fwait
push
aaa
js
out
xchg
sarl
cmc
jns
sbb
mov
mov
sarb
daa
aam
test
lcall
enter
adc
mov
mov
cmpsb
push
lods
push
xor
loop
cmp
cli
loopne
mov
push
rorb
jg
xchg
in
sub
mull
and
dec
gs
in
fsts
dec
imul
pop
jecxz
mov
outsl
jecxz
aaa
inc
dec
or
push
lahf
mov
pop
push
dec
cmp
mov
jmp
add
test
js
ror
sub
jae
mov
jnp
ss
jmp
mov
jo
mov
jmp
push
push
jae
adc
test
inc
dec
stos
iret
ja
xchg
mov
rol
nop
mov
ds
jmp
inc
gs
pushf
lods
xchg
push
scas
loopne
push
sbb
jne
pop
jl
popa
sub
pop
jb
sarl
stos
leave
std
jle
ss
jmp
hlt
repz
std
loope
ret
cwtl
fdivr
push
flds
insl
test
lods
mov
loop
add
sahf
scas
stc
or
scas
stos
xor
or
lret
stos
jbe
mov
cs
fstp
call
add
or
divl
sbb
push
sub
mov
cld
jnp
push
pop
sarl
jle
xor
xlat
or
push
test
dec
sbbl
lock
addl
in
and
mov
fwait
push
bound
aas
mov
sub
cmp
insb
inc
push
testl
pop
push
lock
inc
inc
rclb
fidivrl
fidivs
movsl
sahf
jne
xor
icebp
mov
inc
hlt
cmp
push
sub
sub
subb
cmpsl
dec
cwtl
and
movsl
add
xor
cmc
into
loopne
cmp
xor
xchg
fcoms
dec
mov
jg
sbb
lret
jno
cmp
pop
xchg
outsl
mov
jnp
sarl
sahf
push
cmp
mov
scas
sub
stos
jae
cmp
jne
mov
sbb
push
jp
adc
mov
stos
xor
jb
std
sar
mov
es
add
mov
fdivrp
xchg
xlat
xor
stc
es
or
aam
mov
into
test
xor
dec
aad
call
inc
cmp
imul
dec
enter
mov
ja
loope
push
push
fsubr
bnd
gs
outsl
in
popa
and
pop
bound
pop
inc
cld
sbb
pop
xchg
out
or
inc
fsubrl
inc
stos
cmp
jg
or
pop
mov
and
xchg
ficoml
and
ds
jno
fwait
pop
xchg
in
mov
imul
push
adc
jae
fildl
loopne
test
imul
dec
or
loopne
push
sbb
pushf
pop
sub
xor
cmp
std
push
mov
arpl
jbe
sbbl
outsl
or
cmp
mov
xor
dec
mov
dec
xchg
jae
decb
jle
push
fisubl
cmp
hlt
or
mov
mov
xchg
inc
sub
dec
inc
jae
aaa
inc
popf
scas
sti
lods
pop
jbe
mov
cmp
pop
jmp
mov
ret
and
jecxz
testb
lock
ficomps
bound
test
js
pop
push
mov
or
lret
mov
in
pop
sbb
dec
mov
shlb
sub
lods
jmp
jno
mov
jns
dec
das
dec
dec
xor
sub
xor
imul
xor
fnsave
mov
fucom
inc
data16
lret
dec
mov
out
das
lods
icebp
test
or
or
inc
call
adc
insb
mov
popf
jae
mov
mov
mov
jge
incb
cmp
mov
cwtl
ja
and
mov
cmpsl
pusha
fdivrs
loope
push
jbe
sub
aam
sub
jns
ds
sbb
sbb
inc
mov
dec
pop
pop
insl
test
ret
cli
cmp
inc
fldt
call
out
fisttps
filds
cmp
cli
mov
or
sub
cmpsl
test
add
orl
test
jbe
or
add
in
loop
mov
cmp
test
and
jp
stos
push
iret
in
outsl
jns
mov
test
jge
jo
repz
dec
push
push
ds
mov
decb
mov
imul
ret
js
mov
xchg
xor
dec
mov
mov
or
mov
push
jecxz
mov
pop
inc
inc
loop
pop
xchg
mov
popf
jae
shrl
mov
nop
pop
imul
lahf
inc
xor
jo
fistps
xchg
in
mov
sar
rolw
cmp
dec
arpl
mov
xor
add
mov
pushf
inc
push
mov
outsl
push
lret
xchg
cmp
pop
jo
rclb
ret
outsl
insl
or
cmp
cmp
or
push
xchg
icebp
scas
int3
outsl
xchg
les
jg
outsb
xchg
mov
icebp
test
testl
jg
pop
lret
cmp
cmc
sub
in
xor
or
pop
cmpl
fs
cs
cwtl
je
jae
sub
scas
dec
pop
xor
test
pop
add
clc
mov
dec
or
sbb
shll
iret
scas
loopne
xlat
shr
inc
std
xchg
add
push
jae
fdivs
fiadds
xor
sbb
out
cmpl
xor
xlat
insl
cmpsb
popa
adc
sbb
mov
cwtl
pop
jns
fistpl
sub
fdivr
leave
sub
test
je
fldl
fnstsw
dec
xchg
inc
push
push
out
hlt
mov
notb
xchg
ss
adc
pop
call
sbb
inc
sbb
cmpsb
pop
jmp
mov
adc
test
loope
addl
mov
test
rclb
test
adc
cmp
into
xchg
bnd
mov
jns
andb
sahf
cld
mov
xorb
cs
or
jp
lods
xor
dec
movsb
fidivl
mov
aaa
inc
jge
push
lods
lods
in
jne
or
or
pop
xchg
mov
mov
mov
pop
cld
xchg
xlat
or
mov
and
fldt
xchg
ja
jecxz
sub
dec
mov
jbe
jg
push
scas
dec
add
pop
mov
outsl
test
test
pop
sbb
mov
push
stos
cmp
xchg
out
jne
jmp
pushf
cmp
jle
stos
jb
data16
into
lods
lods
or
mov
or
mov
xchg
cltd
out
insl
or
pushf
les
adc
mov
jecxz
and
sbb
add
push
fstps
dec
in
lods
sub
jmp
fdivs
hlt
inc
add
jmp
cs
cwtl
cli
cs
or
xlat
addl
mov
add
test
pop
adc
adc
jne
cmp
fwait
mov
mov
scas
pop
test
sub
pop
int3
mov
les
jmp
lcall
dec
pop
push
jge
cmp
dec
leave
ss
fistps
lods
dec
lret
out
test
push
xor
push
dec
xor
es
out
filds
cmpsb
out
dec
push
jno
inc
xor
and
movsb
mov
or
ja
pop
dec
testl
or
pop
divb
es
adc
lods
push
jb
inc
inc
js
test
xorb
ja
lcall
test
inc
iret
xchg
jno
inc
and
jl
inc
rcrl
inc
xchg
jbe
stos
in
stos
inc
bound
and
sub
jle
jp
push
push
js
jg
sti
repnz
pop
sarl
out
pop
push
ret
and
xchg
xor
mov
xor
sbb
xchg
mov
cmp
orl
dec
pop
xchg
mov
jbe
cli
es
sbb
add
jo
jle
sbb
std
mov
insl
xchg
in
xor
add
imul
ret
mov
outsb
or
sbb
imul
add
test
loop
stos
lods
out
nop
out
pop
bound
mov
jmp
jecxz
jle
adc
push
pop
mov
sbb
ljmp
pop
int3
int
arpl
jle
adcb
xchg
xor
jl
lods
popa
pop
fisttpl
test
jl
push
inc
sbb
xchg
push
dec
in
jo
or
cmp
popa
mov
pop
loop
jns
shll
xor
hlt
bnd
leave
add
out
push
lock
setg
jb,pn
test
fnsave
and
cmp
mov
mov
test
inc
rorb
add
push
cmp
push
and
xchg
jg
fwait
cmpsl
decl
pop
mov
ret
mov
test
xchg
je
lahf
xor
push
push
sub
mov
cmp
jb
add
loope
aaa
pushf
call
add
xchg
loopne
adc
ss
xchg
cmp
daa
aad
sbb
or
jo
push
cmpsb
arpl
out
lock
fcmovbe
dec
loope
push
jbe
push
fwait
add
dec
and
xor
or
leave
es
std
movsb
test
fidivrs
stos
inc
out
lods
movsl
dec
aam
mov
xchg
pusha
int
mov
in
xor
bound
aad
fildll
dec
push
scas
sbb
imul
or
mov
add
and
and
ficoms
pop
sub
jb
data16
xchg
xchg
ljmp
mov
gs
mov
das
loop
imul
orb
decl
shrl
add
mov
aaa
push
imul
push
dec
pop
mov
mov
movsb
xchg
xor
push
mov
jge
divl
out
mov
jecxz
out
cwtl
mov
xor
icebp
mov
in
iret
cmp
xorl
aas
push
sub
mov
test
fxch
and
adcb
cmc
inc
adc
jg
cmp
adc
pop
and
fildl
pop
ljmp
subb
iret
add
repz
xchg
scas
sbb
xor
xor
outsl
cmp
sub
int3
xchg
jecxz
xor
iret
out
push
out
lea
fidivrs
mov
insb
jnp
fs
pop
inc
lret
insb
lcall
xor
dec
adc
lcall
add
adc
jg
cmp
pop
pop
hlt
adc
inc
cmpsb
xchg
aas
lret
ret
mov
out
dec
mov
test
outsl
mov
in
notb
notl
scas
dec
push
mov
scas
add
jbe
arpl
mov
in
es
inc
xchg
in
cmp
ret
cmp
fs
add
fiaddl
cmpsl
mov
mov
xor
out
es
fwait
call
sbb
inc
cmp
xchg
push
sbb
aas
int
imul
lret
pop
cmc
push
aas
lods
ficompl
jl
jns
jb
jmp
mov
into
xchg
xchg
fcmove
hlt
sti
fstp
ret
xchg
das
jl
cwtl
xchg
dec
or
add
jl
mov
mov
mov
sub
scas
std
adc
mov
mov
es
in
cmc
mov
push
test
mov
or
ja
in
out
mov
fistpl
xorb
jns
push
fwait
inc
xlat
mov
pop
fistps
insb
push
push
xchg
stc
mov
sub
cmp
jbe
pop
and
fsubl
adc
or
or
inc
mov
test
push
jb
cmp
cmp
mov
fistpl
orl
gs
in
ficoms
push
stos
rcr
xor
sti
lcall
pusha
and
pop
sbb
lods
inc
sti
adc
sub
lahf
jge
sbb
outsl
ja
sbb
aas
xchg
mov
mov
cmpsb
out
repnz
xchg
cmp
nop
movsb
dec
fidivl
xor
iret
inc
jo
aam
push
sti
xor
mov
out
fidivs
cmp
out
adc
sub
loop
mov
imul
inc
arpl
or
add
daa
inc
cmp
or
adc
inc
div
inc
bound
cli
pop
or
xchg
repz
or
xchg
sti
leave
lahf
add
shrl
scas
fimuls
test
xchg
ja
imull
lret
cs
stos
jecxz
ret
loop
in
inc
dec
sti
mov
mov
dec
test
pushf
call
call
test
aad
int3
mov
dec
hlt
cli
je
bound
sbb
add
xor
jecxz
cmpsb
mov
int3
and
int
outsl
or
call
pop
cmp
pop
xchg
jne
xor
cmp
jmp
sbb
je
stc
add
imul
arpl
es
inc
ljmp
fidivl
dec
dec
call
scas
pushf
orb
into
movsb
dec
lods
add
call
or
jbe
sub
ds
cmpsb
movsl
mov
jbe
sbb
dec
lahf
jno
pop
lret
pop
inc
movsb
dec
xchg
fdivrl
pusha
pop
pop
fstpl
xchg
lcall
inc
and
cwtl
cmpsb
ftst
pop
cmp
outsb
cld
jg
rorb
sub
mov
cmpsb
push
pop
imul
loope
pop
jo
mov
mov
in
push
out
popf
mov
add
push
das
les
pop
jecxz
lds
add
or
pop
nop
sbb
cmpsb
out
jecxz
mov
icebp
xchg
and
inc
int
cmpsb
push
cmp
push
jecxz
dec
push
faddl
mov
cmp
ljmp
dec
cmpsb
fisttpl
imul
sbb
adc
dec
cs
imul
inc
pusha
sbb
cmpsl
sarb
jnp
jne
fnstenv
dec
pop
push
dec
mov
and
outsb
cli
ljmp
mov
lret
push
leave
sub
clc
popa
fisubrs
xchg
shrb
mov
cli
fcomi
cs
or
pop
and
cs
test
negl
xchg
sub
les
add
test
sub
jmp
sbb
jo
xor
ret
pop
jecxz
fidivl
std
ja
out
jp
cmc
fbstp
dec
push
sbb
jne
popa
pop
stos
mov
mov
pop
cld
leave
mov
outsb
add
pop
inc
pop
fdivrl
in
lret
daa
out
call
push
lds
cld
and
fwait
pop
jns
mov
fadds
rep
mov
mov
loop
jne
iret
push
jae
leave
shrl
fdivs
or
stc
xchg
mov
jmp
mov
sbb
and
fldl
pop
insb
cmp
adc
jg
sbb
xor
decl
testb
jne
xchg
pop
call
mov
lock
mov
add
and
or
out
inc
pop
icebp
push
mov
jne,pn
call
xor
jle
lahf
and
mov
outsl
add
xchg
daa
idivb
mov
roll
jnp
cmp
mov
out
add
lods
loopne
out
scas
jbe
and
sub
notb
outsl
aad
mov
jle
mov
stos
ljmp
sub
mov
int3
sti
imulb
imulb
dec
dec
mov
popa
adc
cmp
push
daa
sahf
insb
mov
ficomps
aas
in
jmp
jae
sti
jp
lret
lods
mov
xchg
shrl
or
cltd
rcll
inc
cmp
cs
insl
mov
push
xor
jb
mov
push
jle
push
xchg
dec
mov
jecxz
shrl
lret
cli
sub
inc
mov
daa
flds
nop
inc
dec
in
adc
arpl
stos
fldt
push
push
mov
test
adc
sbb
lret
int3
sub
xorl
sbb
fsubrl
dec
mov
or
addr16
lret
iret
mov
test
movsl
stos
or
aas
fcomi
adc
into
sbb
mov
movsl
xchg
cmc
in
pop
das
mov
xchg
ror
sti
and
in
fsincos
scas
pop
sub
jle
sub
fidivl
scas
gs
mov
mov
xor
jne
scas
out
sbb
mov
aad
mov
je
insl
mov
pushl
xor
pusha
inc
lret
adc
cli
or
dec
ss
loop
sbb
push
push
ret
es
test
nop
outsl
push
aaa
or
xchg
cmp
in
mov
loope
and
ds
push
jno
adc
cmp
xor
sbb
jecxz
xor
cmpsb
xor
push
mov
xchg
jnp
pop
ret
push
sbb
ss
subl
mov
xorb
jns
hlt
shlb
cmp
xor
dec
push
mull
test
jp
pop
addr16
jo
jae
imul
push
sbb
dec
div
mov
sbb
mov
mov
or
mov
mov
sub
mov
in
mov
cmp
addr16
sbb
js
loop
arpl
scas
fistpll
mov
es
aas
cmp
pop
lcall
cmpsb
sbb
mov
mov
mov
sbb
mov
push
iret
mov
addl
xchg
push
jecxz
lods
loopne
sub
mov
add
jmp
push
mov
dec
cmpsl
mov
cmpb
xor
push
fisubrl
mov
fistps
mov
push
lods
cmpsb
int
imul
sahf
pop
xchg
addr16
stos
pop
out
mov
xor
cwtl
fmuls
jg
ret
leave
orb
repz
popl
push
xchg
jp
ljmp
repnz
repz
mov
mov
fnstsw
push
pusha
js
mov
out
inc
pushf
aas
sub
out
ret
mov
sub
mov
adc
stc
call
clc
and
jmp
xchg
jo
jne
sub
mov
mov
loopne
sbb
jmp
daa
mov
aas
and
or
cmp
dec
and
jno
xchg
lret
out
mov
mov
imul
je
aad
mov
add
mov
adc
push
imul
xchg
jecxz
loopne
ret
popa
pusha
jmp
cs
cs
push
int3
cmp
sahf
gs
bound
shll
test
es
call
or
jbe
pusha
das
scas
test
out
mov
xor
or
lret
push
push
fcoms
xchg
add
stc
ss
dec
call
xor
or
test
push
cwtl
scas
out
addb
notb
dec
test
mov
imul
sbb
pop
pop
lods
push
xchg
popa
fs
lcall
jns
mov
mov
lret
outsl
and
popa
sub
inc
or
jo
jns
mov
fistpll
addr16
pop
jmp
test
mov
mov
popf
pop
mov
mov
xlat
aam
movl
fcmove
fidivl
jo
mov
or
out
es
pop
cmpsb
call
in
repnz
sub
push
lock
pop
int
lret
cltd
sarb
push
xorb
in
pusha
fadd
dec
xor
jg
mov
fstp
inc
xor
test
movsl
pushf
lods
stos
cmp
iret
lret
dec
lea
pop
jmp
xor
arpl
mov
and
push
nop
or
cli
jnp
aas
sub
mov
lcall
dec
icebp
orl
adc
jns
lcall
xor
popa
pop
ja
inc
int
int
sub
lret
jae
js
cmp
daa
mov
xor
lahf
push
mov
dec
inc
loope
test
out
lds
jno
xchg
call
jbe
sti
jmp
xchg
stos
fcompl
push
popa
das
lea
jns
lea
adc
repz
inc
adc
lods
add
movsb
sahf
jb
lcall
aam
mov
sub
addl
dec
push
xchg
and
mov
push
imul
xor
cmp
cmp
xchg
xchg
dec
notb
fwait
lcall
dec
adc
fidivl
nop
push
push
dec
adc
jne
lcall
push
dec
jg
std
iret
fwait
adc
add
push
cmp
jbe
jg
mov
movsb
daa
pop
mov
jecxz
mov
fucomip
scas
lcall
sub
movsb
xor
mov
incb
xchg
insl
mov
pop
cmp
es
fisubs
call
jno
mov
jns
subl
dec
dec
out
sbb
push
jne
xchg
fsubrs
push
stc
cltd
mov
pop
xchg
mov
andl
adc
cmpsb
inc
out
jl
ret
xor
pop
pop
insl
mov
cmp
aas
inc
insb
popf
dec
add
adc
dec
loope
inc
inc
and
aaa
push
and
repnz
and
movl
push
pushf
std
xchg
or
stc
ja
rolb
test
fiadds
call
pop
stos
test
or
jne
cmp
ljmp
push
or
leave
lahf
mov
lods
jo
xor
into
pop
and
cmpsb
call
mov
sub
pop
dec
sbb
repnz
dec
fisubrl
xchg
repz
mov
dec
in
idiv
xlat
xlat
or
add
popa
outsb
negl
push
cld
inc
js
bound
inc
cmpsb
xchg
pop
inc
push
mov
out
int3
and
ds
adc
add
xor
aad
xor
inc
imul
or
mov
js
cmp
bound
in
divl
int
add
sbb
stos
aad
add
jne
test
inc
pop
adc
outsl
ficompl
in
out
push
xor
inc
add
movsl
mov
jbe
inc
movsl
out
mov
popa
ljmp
mov
out
mulb
add
test
dec
aas
ror
call
cmp
jb
sbb
insb
outsl
mov
cmpl
fwait
call
std
bound
cmp
out
sub
andl
out
insl
xchg
fcomps
jo
mov
add
stos
sbb
jae
pop
xchg
cmpsb
cmp
lock
mov
cwtl
loop
fdivrs
std
cmp
dec
dec
ljmp
js
pop
jg
adc
jb
call
mov
fwait
push
push
jnp
cmpsl
push
into
adcb
jo
push
ficoml
adc
mov
mov
fs
inc
popf
cli
mov
jmp
inc
sbb
mov
sub
xor
adc
and
push
test
mov
xor
and
jge
pushf
mov
js
stos
xchg
daa
orb
repz
cmp
jecxz
das
cld
add
mov
outsl
cs
aad
stos
mov
dec
jae
pop
lcall
popa
xor
add
sahf
dec
lea
addr16
push
dec
lock
push
addr16
mov
insb
cltd
cwtl
sbb
xchg
xchg
mov
mov
push
bound
adc
sbbl
ret
jns
xchg
xchg
pcmpgtb
pop
ja
sub
outsb
std
fcmovne
push
mov
outsl
dec
out
xlat
mov
pop
push
subl
insl
loope
out
xchg
mov
sbb
js
sbb
dec
xchg
out
test
jnp
test
nop
add
fbstp
stos
mov
jge
mov
leave
clc
mov
sub
xor
and
int3
pop
xchg
cmp
xor
daa
jae
faddl
daa
jns
insb
in
xor
mov
xor
repnz
mov
testb
ss
mov
lahf
push
lods
cld
ss
inc
dec
xchg
add
sbb
adcb
xor
cmp
mov
and
sti
aaa
jnp
in
outsl
and
and
mov
mov
stos
xor
mov
in
cltd
push
push
push
out
adc
dec
fs
cs
sbb
incb
subb
or
subl
push
push
sbb
push
mov
mov
mov
lret
iret
fwait
pop
int
xchg
push
or
inc
ret
add
out
lea
nop
add
mov
xchg
je
es
fisubl
rcr
adc
stos
xchg
push
or
xor
xchg
dec
sbb
lods
int3
psubb
insb
mov
ss
popa
sub
rcll
or
lret
dec
cmpsb
push
dec
sub
in
lea
xchg
or
iret
push
cmpsl
jg
cmovp
xor
push
lock
popf
jge
cmp
cmc
ljmp
push
ljmp
push
test
jecxz
mov
adc
in
mov
xchg
and
add
push
mov
sub
gs
add
jmp
dec
stos
adc
jg
mov
pop
leave
cmp
xor
cli
andl
insl
pop
in
dec
adc
jmp
sbb
sub
leave
jo
in
popf
lock
pop
inc
inc
imul
mov
mov
cmpsl
or
sahf
insl
jmp
out
sbb
mov
xor
call
stos
pop
jne
stos
cmp
jne
xchg
dec
test
dec
repnz
test
jne
sub
rorb
mov
push
dec
popa
jne
lret
pop
xlat
mov
push
mov
inc
jecxz
or
orb
into
shlb
dec
xchg
add
jmp
lret
fcomp
pop
in
mov
mov
and
dec
xorb
sub
repz
call
mov
inc
adc
mov
pushl
fcomps
scas
pop
xorb
outsb
mov
or
xlat
jg
lods
std
cmp
gs
cmp
std
cld
cs
jbe
xchg
mov
lea
mov
jnp
ss
in
in
cmp
or
and
popf
mov
push
jbe
ret
popf
inc
lret
inc
adc
in
add
adc
imul
lahf
push
mov
and
mov
rcll
loop
push
push
inc
push
sbb
pop
int
push
push
cwtl
sbb
cmpsl
jge
negl
inc
mov
xor
cmc
enter
pusha
mov
pusha
outsl
out
push
mov
add
mov
fnstsw
mov
push
mov
mov
punpckhwd
lods
popa
daa
add
jae
inc
pop
push
js
jge
in
pop
imul
mov
scas
mov
mov
pop
inc
shrl
cld
subb
bound
cmp
in
mov
js
adc
sub
nop
sub
sbbl
jle
add
adc
out
loope
sti
lods
imul
or
sub
call
outsb
mov
push
test
adc
fwait
cmp
push
jnp
inc
or
aas
jo
jecxz
call
mov
ret
or
pop
mov
adc
ret
jb
inc
xor
popa
dec
cmp
in
les
mov
ljmp
fistl
pop
les
subb
test
out
mov
or
jl
out
adc
pop
jbe
push
mov
fsts
aam
mov
xor
xchg
adc
xchg
fxch
sbb
fldt
mov
int
imul
test
pop
dec
and
jecxz
mov
push
mov
mov
dec
adc
jp
cwtl
sub
movsl
jmp
jns
pop
cmp
jne
testl
push
leave
push
push
lea
pushf
hlt
inc
mov
fs
inc
imul
mov
insl
lock
dec
cli
cmp
sbb
cltd
adcb
popf
mov
outsl
test
insl
jo
imul
loopne
loopne
mov
insb
sub
lea
out
lea
pusha
mov
out
popa
dec
xchg
mov
and
pop
or
cmpsl
inc
flds
insl
sahf
mov
sub
inc
popf
or
adc
and
add
add
lahf
pop
mov
push
or
mov
fldenv
xor
push
mov
jge
mov
jne
jmp
xchg
outsl
mov
mov
sahf
outsl
dec
sbb
xor
pop
jmp
mov
mov
mov
arpl
sbb
popa
int
jae
sub
mov
outsb
mov
test
je
push
insl
imul
and
mov
in
mov
xchg
inc
aam
call
fcmovb
stos
sub
and
lahf
cmp
mov
xor
outsb
fsubrl
adc
imul
dec
scas
pop
xor
dec
push
ficomps
mov
fwait
into
pop
inc
enter
dec
lea
pop
mov
xor
jnp
xor
shrb
jmp
jmp
out
mov
lds
mov
mov
fsubl
push
pusha
xchg
push
je
sub
fsubrp
insl
les
icebp
or
dec
adc
fstps
cmp
pop
in
xlat
push
push
inc
mov
adcb
or
sbb
leave
mov
dec
jo
mov
mov
cmp
mov
jo
inc
sub
cmp
jmp
dec
push
jecxz
testl
mov
ja
aas
push
loope
imul
cmp
in
popa
jg
mov
and
orb
cmp
push
sbb
mov
addl
jl
pushf
xchg
add
pop
nop
dec
dec
ficoml
push
jge
lods
in
xor
adc
mov
mov
fwait
push
mov
in
inc
push
int
mov
push
in
sub
jo
mov
xor
mov
adc
scas
dec
lea
hlt
xchg
cs
cld
or
xlat
loop
pusha
addr16
push
cmpsb
scas
adc
fnstenv
ss
pop
pop
hlt
jle
lret
xor
jecxz
push
loop
and
push
sti
inc
lock
outsb
cmc
scas
mov
push
sahf
pop
notl
mov
xchg
sarb
pusha
scas
dec
dec
in
in
sarl
mov
andb
in
push
jl
mov
mov
lods
push
insl
pop
jae
popf
outsl
dec
cwtl
xchg
sbb
xor
insb
dec
sub
fldl
mov
lcall
pop
adc
xchg
cld
push
dec
cmpsb
repnz
ss
mov
jo
mov
mov
jle
dec
stc
mov
dec
and
xchg
js
jge
mov
into
hlt
push
inc
cmpsl
jp
scas
lcall
and
scas
gs
push
in
xchg
xlat
jns
iret
pop
dec
xor
pop
sbb
popa
add
or
lds
in
inc
andb
lock
pop
inc
imul
cmp
hlt
call
ss
mov
and
fsubrs
adc
bound
cld
adc
and
jae
jae
fcomip
dec
dec
jp
dec
call
pop
lock
popf
cltd
ss
sbb
push
outsb
mov
call
pop
sub
xor
movzwl
shll
lret
rcrl
hlt
jecxz
cltd
scas
enter
pop
adc
sub
mov
jl
das
xlat
ss
cli
sub
andb
adc
mov
mov
ljmp
sbb
adc
and
icebp
or
push
cs
mov
mov
iret
dec
dec
mov
jne
add
arpl
push
xor
fucomi
mov
mov
dec
mov
mov
insb
push
popl
icebp
or
cmovge
fwait
call
data16
xchg
or
cmp
xchg
sbbb
dec
add
add
jp
xchg
loop
push
push
push
mov
cmp
inc
aas
test
stc
in
inc
cmc
pusha
jmp
enter
daa
mov
fcoml
adc
jno
sbb
stos
ret
push
or
jmp
shlb
mov
repz
mov
enter
xchg
fildll
cmp
data16
bound
rcrb
fnsave
pop
or
scas
div
xchg
pop
pop
loop
out
push
bound
inc
xor
cmc
nop
insl
rcrl
jae
popf
outsl
inc
andb
xor
das
out
popa
push
push
sub
aaa
adc
pop
inc
insb
insl
jae
lret
nop
movsb
fwait
out
leave
mov
sub
dec
mov
mov
mov
adc
insl
out
mov
sub
mov
sub
push
int3
in
push
cltd
inc
jae
dec
loopne
in
sbb
lods
jle
cmpsl
outsl
sets
fs
or
test
adc
mov
push
inc
sbb
xchg
cmp
lret
push
test
aad
fisttpll
xchg
and
das
lods
pop
cmc
cwtl
ficomps
mov
int
inc
cmc
ljmp
push
fwait
jne
mov
sub
fs
out
or
mov
data16
jecxz
sti
sbb
sbb
ds
out
cwtl
push
push
out
stc
leave
test
cmp
mov
sbb
imul
sahf
push
ljmp
or
pop
adcb
fbld
popa
mov
sub
stos
jnp
pop
sub
pop
lcall
adcl
xor
push
xchg
pop
stos
pop
jecxz
sahf
push
lret
hlt
neg
jno
in
fcmovnb
dec
sbb
xor
fnstsw
cmp
xor
push
nop
and
sbb
test
jge
push
jecxz
cmp
pop
lret
mov
cli
mov
pop
sub
adc
repz
ret
movsl
outsb
iret
out
sbb
lret
add
rolb
rorb
fwait
or
sbb
test
es
mov
xor
sub
insl
xchg
xor
mov
jnp,pt
inc
xchg
jle
inc
add
test
dec
clc
cmp
mov
push
dec
inc
pop
xchg
int3
popf
cmpsl
iret
ss
mov
gs
xchg
rcl
or
cmp
lahf
adc
or
fcompl
pop
or
lds
sub
pop
loop
mov
or
jno
push
gs
xlat
hlt
dec
out
lret
sub
sub
xchg
loop
push
int
shrb
scas
xchg
dec
adc
add
push
add
outsb
test
cmp
out
pop
aad
stos
insl
out
push
sbb
lret
or
insl
push
sub
int
movsb
test
jecxz
jae
mov
repz
les
xor
sarl
mov
jo
pop
add
ss
mov
jle
imul
xor
mov
std
sub
mov
call
mov
sbb
lds
test
imulb
mov
xchg
push
sti
lcall
shll
cmp
fwait
jecxz
lcall
sub
std
cwtl
cltd
mov
stos
mov
shrb
mov
mov
dec
adc
xchg
mov
add
int
insl
je,pt
mov
or
mov
cmp
outsl
jecxz
jg
dec
mov
push
jmp
sar
int
push
mov
mov
mov
lods
xchg
sbb
push
lods
sbb
scas
mov
fimull
cmpb
sbb
out
in
neg
xor
cmp
or
sub
test
hlt
pop
loop
jg
cmp
jbe
ss
dec
xor
loope
aam
shl
loop
or
enter
mov
sub
mov
fnstenv
add
lock
push
xchg
mov
jg
cmp
pop
filds
and
inc
fs
ret
cmc
bound
dec
lret
mov
sbb
xor
mov
ret
push
cmpl
or
pop
pop
fnstenv
jb
mov
call
mov
jno
movsl
sub
loope
lods
sub
pop
les
and
fsubrs
bound
dec
repnz
ret
mov
xchg
ss
lds
and
push
popf
imul
add
dec
pop
fs
cmp
int
leave
adc
add
sub
test
pop
rcrl
sub
jp
jge
push
arpl
in
pop
repnz
pop
push
jo
mov
fsub
outsb
xlat
mov
clc
push
sub
lret
push
sub
cmp
leave
inc
pop
gs
push
movsb
sub
inc
lods
xor
mov
push
sahf
cs
int
cmp
clc
pushf
xor
push
add
je
movsb
nop
dec
addr16
loop
cwtl
xchg
ljmp
xchg
pushf
fisttps
mov
xor
das
addr16
cmp
out
jne
jg
inc
pop
push
mov
imul
cmp
int3
and
popa
ret
inc
ret
cmpsb
mov
mov
mov
std
xchg
sbb
or
popf
outsl
mov
fadds
test
adc
jp
push
scas
pop
pop
adcb
outsb
ss
or
sti
sbb
stos
fwait
loopne
andb
xor
or
xchg
or
es
fucomi
je
insb
movsb
pop
fdivs
jnp
pop
xchg
imul
xor
fsubrl
or
fdivs
ss
mov
je
stos
mov
fldl
js
test
jecxz
jle
mov
or
addr16
cmp
pop
xlat
mov
insb
xchg
sbb
das
mov
pop
and
adc
lods
pop
xor
adc
ret
add
dec
outsl
add
mov
sub
push
mov
jbe
fldt
push
out
pop
loope
jmp
sub
mov
xchg
lods
andb
int
inc
cmc
dec
xchg
insl
cmp
mov
xor
out
orb
call
lahf
mov
lock
mov
mov
mov
lcall
or
adc
or
jle
mov
jmp
fwait
mov
mov
dec
cmp
popa
cmp
pop
cmp
lret
pushf
fisubrl
jg
add
mov
jns
cmp
std
xchg
repz
xchg
loop
sub
mov
js
inc
add
mov
cs
mov
push
ja
mov
add
jp
cmc
outsl
xchg
inc
xchg
xchg
mov
sbb
pop
negl
cmc
sub
xchg
out
mov
fmul
inc
fisubl
repnz
push
in
fidivrs
mov
icebp
xchg
mov
jnp
xor
sub
enter
mov
imul
imul
mov
pop
dec
int3
mov
out
xor
hlt
dec
push
arpl
sub
roll
add
push
loope
or
and
or
xchg
nop
outsb
cmp
adc
iret
and
sub
xor
jno
mov
std
movsb
mov
push
jno
jle
sub
insl
nop
pop
xor
push
sub
cli
dec
or
pop
rcll
in
xor
push
std
scas
or
cmpb
xchg
mov
mov
mov
lret
jae
movsb
xchg
jmp
test
mulb
sub
pop
mov
add
cmp
push
std
push
inc
and
cmp
mov
jecxz
adcb
push
dec
or
cmp
test
imulb
xlat
addr16
inc
lahf
fistl
mov
xchg
imul
push
repnz
shlb
ja
sub
imul
in
movsl
sub
nop
xchg
mov
jnp
lock
in
jae
xlat
dec
cltd
iret
lea
pop
adc
lods
je
outsl
mov
fimull
andl
jg
pop
or
jl
sbb
mov
push
in
mov
pop
push
ss
mov
pushf
mov
mov
ja
sub
jae
fcomip
in
mov
stos
stos
xor
pop
leave
jae
shrb
mov
add
ds
sub
pop
sarb
mov
lret
mov
jg
shlb
xor
ss
jnp
sub
xor
jmp
cmpsl
std
movsb
js
leave
ja
jae
sahf
xor
ljmp
pop
or
xor
lods
in
sub
mov
lock
pop
sbb
clc
sub
test
cmc
cli
mov
sbb
push
sub
rorb
or
fldt
xchg
adc
jbe
in
push
dec
mov
repz
fs
inc
mov
mov
dec
ret
push
stos
pop
inc
jnp
rorl
aaa
aad
pop
mov
arpl
and
pop
mov
pop
fistpl
cmpsl
fsub
adc
jmp
jle
dec
jl
adc
shll
lar
sub
dec
cmpl
mov
dec
jmp
inc
sub
adc
fdivs
aad
mov
lds
fcomi
arpl
daa
inc
test
xor
fsubp
cmp
jg
divb
inc
out
push
stos
cmp
inc
iret
test
ret
lock
leave
fistpl
cld
loope
add
rcll
lock
movsl
hlt
fldl2t
or
bound
add
jle
sub
les
cli
xchg
lret
jg
out
cmp
jmp
xor
shr
mov
imul
sbb
mov
mov
ficoml
add
pop
push
cmp
pop
hlt
xchg
xor
dec
fmull
inc
lret
loopne
insb
mov
jmp
cmp
push
lock
movsb
ljmp
fnstcw
mov
insb
sbb
arpl
mov
xchg
divl
jp
mov
sub
inc
xor
jo
in
add
shll
xchg
das
leave
or
xor
sti
jl
mov
mov
pop
adc
pop
or
inc
cmp
cmpsl
dec
sbb
pop
sbbl
in
mov
push
mov
or
loope
adc
repnz
aam
loopne
push
faddl
xchg
sbb
bound
movsl
notw
xchg
outsb
add
out
int
test
inc
xor
sbb
fstpl
in
iret
push
lods
pop
cmp
stos
jl
iret
adc
mov
jge
pushf
dec
mov
aaa
lret
adc
dec
sahf
dec
mov
mov
push
and
sbb
jb
jp
mov
adc
es
inc
mov
outsl
out
into
incl
orl
stos
push
xlat
sub
cmp
mov
add
adc
movsb
fisubrl
push
out
xor
and
mov
in
imul
scas
std
sbb
push
jns
fwait
jo
das
jno
aas
fiaddl
mov
sub
mov
test
add
mov
jecxz
imul
dec
jmp
or
loope
push
test
dec
dec
in
jecxz
popf
add
or
orb
sub
xchg
ja
sub
inc
js
add
mov
icebp
scas
aad
mov
mov
andb
cmc
out
cmp
jno
add
mov
fisttpl
dec
test
jb
or
test
xor
cmp
lock
outsb
outsl
jae
test
mov
push
and
push
imul
xchg
leave
pop
xlat
cmc
dec
dec
stc
bound
aas
cmpsb
fimull
mov
xor
fstl
nop
mov
cwtl
imul
mov
lods
inc
mov
jp
mov
jge
jbe
jae
ds
mov
mov
xchg
pushl
cs
cmp
loope
xchg
je
jno
shrb
popa
xchg
xchg
pusha
mov
pop
pusha
leave
ret
into
mov
mov
inc
xor
outsl
cs
sbb
cmp
icebp
call
jg
sub
adc
xlat
out
sub
cltd
or
or
subl
cmpb
mov
orl
out
add
inc
mov
lea
test
xchg
cli
arpl
pushf
lds
out
mov
jnp
jae
add
add
mov
testl
pop
loop
and
pop
ss
dec
cmp
mov
enter
ss
cmp
sti
dec
pop
ret
movb
shrb
add
adc
cwtl
fdivl
iret
cmp
outsl
mov
scas
mov
pop
jnp
aaa
icebp
into
mov
jmp
ja
ds
ror
push
aaa
pop
int3
loopne
pop
mov
mov
je
in
cmp
jnp
mov
and
and
sbb
add
dec
nop
rcpps
mov
andb
ds
fwait
push
xchg
scas
ffreep
aam
add
pop
mov
scas
xchg
shrb
das
sti
js
jecxz
mov
jns
pushf
jbe
aam
aad
imul
dec
in
pushf
jle
cmpsb
movsl
sub
mov
mov
enter
inc
stos
arpl
xchg
loope
jb
mov
out
testl
lods
mov
sub
sub
stos
cmpsb
pmulhw
lret
sbb
inc
out
ret
adc
dec
cld
push
pop
gs
or
dec
pusha
mov
lods
movsb
push
clc
push
cmc
int3
ret
test
aaa
push
sub
aas
push
repnz
out
enter
pop
and
inc
int3
cmp
fimull
or
popf
xlat
pushf
jle
ret
inc
out
insl
out
sub
push
fnsave
pop
cs
cmp
je
add
lahf
fwait
xor
test
test
add
out
and
sar
mov
cwtl
fldl
inc
lea
repz
sbb
cmp
lods
or
push
movsb
xchg
or
xchg
mov
cmp
insb
sahf
jp
add
mov
mov
mov
out
mov
sub
ljmp
add
xchg
addr16
push
fwait
sahf
scas
das
outsb
cltd
jbe
cli
sbb
subl
mov
insl
xchg
cwtl
mov
push
or
mov
sbb
fcomp
inc
inc
fdivrs
xlat
mov
push
mov
clc
jl
scas
cmpsl
call
xlat
dec
jg
fs
stos
xchg
lret
scas
ret
call
movsb
sarl
shl
jnp
loop
dec
out
scas
push
jmp
xchg
jno
push
flds
add
pop
inc
push
lods
mov
or
cmp
xchg
sub
lret
cwtl
fidivl
cmc
loopne
sbb
ss
shr
push
loop
cmp
loopne
das
fisubs
pop
cmp
sbb
andb
push
push
in
xchg
addr16
cwtl
pusha
pop
arpl
andb
dec
std
jecxz
loope
inc
testl
adc
out
push
push
les
imul
addl
push
notb
jecxz
sarb
mov
cmp
mov
dec
sbb
cltd
mov
pop
icebp
jo
fwait
sub
cwtl
mov
sbb
or
jp
in
dec
xor
addr16
xchg
jp
sbb
adc
je
fsubrl
fbld
shrl
pusha
sbb
inc
xchg
fs
xchg
sti
mov
aas
lock
inc
dec
loope,pn
imull
jbe
inc
and
fidivrl
cld
subb
test
sbb
ret
cmpsb
pop
dec
lahf
or
or
push
rcll
outsl
jo
stos
lcall
stc
ds
movsl
je
jo
in
adc
jne
cmpsl
pop
loop
ret
mov
int3
popf
aas
or
mov
mov
cmp
jge
or
test
cmpl
mov
add
xor
lock
aas
jae
in
in
pop
in
je
add
sbb
inc
xor
and
xor
iret
testl
lds
dec
mov
xchg
xor
cmp
pop
lahf
add
sbb
sub
movsl
pop
sbb
andnps
aaa
arpl
mov
push
ret
pop
int3
lcall
movsl
es
mov
pop
adc
dec
adc
jae
fisubrs
cwtl
adc
pop
cli
xchg
lds
sbb
dec
sbb
sub
jnp
mov
mov
leave
push
mov
jb
xchg
out
jl
cld
and
adc
or
ds
pop
jb
sbb
sbb
inc
outsb
or
repz
jp,pt
mov
in
push
popa
jo
test
xchg
xchg
aas
pusha
dec
or
jecxz
shll
negl
ss
divb
push
mov
stos
jmp
enter
test
gs
jno
jge
push
ss
aaa
jecxz
scas
cltd
sti
jnp
jne
jl
insl
cmp
jl
lods
hlt
mov
fwait
pop
lret
lcall
and
or
mov
inc
jb
lret
popa
mov
pop
or
fiadds
xor
sbb
push
add
test
clc
sti
std
inc
ss
sub
hlt
aaa
sub
cli
js
test
jo
cld
outsb
push
inc
inc
stc
aad
cs
ds
mov
adc
cltd
push
shlb
in
adc
mov
push
pop
sub
push
or
jns
dec
fs
jge
cmp
push
fnstcw
jg
pop
loope
stos
xchg
pop
sub
push
data16
push
dec
mov
or
repz
jg
cmpsb
jnp
jo
and
ficoms
xchg
stos
out
add
pop
js
fisubs
mov
iret
jge
leave
pop
sub
or
pop
xchg
shll
mov
in
mov
push
xchg
push
inc
adc
imul
out
jmp
cmpsb
cld
insl
adc
or
dec
fildl
dec
out
ds
xor
stos
cwtl
mov
rcrb
idivl
push
sub
rcrl
in
loopne
loop
mov
add
push
fimull
push
subl
cs
insl
xchg
in
jg
mov
gs
pusha
out
adc
sbbb
test
lock
jmp
rcl
cmp
test
jo
repz
push
cld
push
out
mov
in
cmp
scas
add
sbb
into
cmpsl
xchg
add
xor
adcl
lds
and
movsb
push
jnp
jne
icebp
xor
sbb
sbb
lea
mov
shll
shr
and
push
lock
sbb
pop
mov
mov
add
ret
jne
ret
out
fisttpll
loopne
mov
les
js
lods
das
jecxz
stos
fwait
push
cli
inc
mov
ds
mov
jp
dec
mov
jo
jbe
insb
mov
je
cwtl
call
loop
out
inc
pop
bound
mov
lock
dec
dec
xor
sti
mov
push
mov
lret
lea
ds
pop
rcr
pop
fsubl
push
dec
mov
jo
mov
jns
mov
push
pop
test
sub
imul
xchg
out
mov
or
push
mov
movsl
fdivp
push
les
or
in
insb
fmull
frstor
jae
xchg
mov
ret
mov
mov
lret
jae
aaa
and
xchg
outsb
loope
push
push
hlt
popf
ret
in
into
mov
and
test
popa
dec
jnp
stos
jg
int
aad
or
sbb
pop
add
add
xor
jmp
fdivs
gs
sbb
aaa
test
inc
mov
adc
scas
incb
fdivs
ret
stos
xor
or
fs
out
lods
push
jae
cwtl
js
popf
clc
jle
lds
push
sbb
xor
ljmp
dec
push
sbb
jno
jb
ret
in
mov
adc
adcl
rorl
cmpl
fwait
push
mov
mov
sbb
cltd
xchg
sbb
fcmovne
xor
fsubs
sbb
lret
cmpsb
ss
mov
mov
leave
movsb
mov
or
jmp
adc
popf
mov
inc
mov
insl
pop
jne
push
mov
incb
xchg
mov
es
mov
scas
mov
lahf
dec
hlt
adc
aas
test
js
cmp
adc
in
movsb
fcmovnb
cmp
and
mov
idivl
and
gs
jp
inc
je
push
mov
sub
pop
shlb
mov
jnp
dec
incb
push
xchg
or
fcmovb
cmp
and
jnp
sbb
or
dec
pop
vpsrad
mov
push
lret
xchg
push
idivl
or
test
dec
test
sub
mov
scas
push
xor
xorb
mov
dec
int
mov
js
xor
ja
jg
add
fcmovnb
lcall
enter
insl
imul
cmp
sub
out
call
insb
pop
inc
xor
mov
aaa
je
scas
sbb
inc
lret
mov
ljmp
sub
out
ljmp
cmp
test
sbb
fistps
xchg
mov
or
xchg
sbb
sbb
retw
jne
push
sbb
enter
mov
push
leave
dec
pop
push
or
test
push
cmp
sub
cmp
test
out
test
jbe
cmp
push
cli
jmp
push
dec
mov
mov
in
pop
push
jg
adc
cmc
cmpsl
sbb
rclb
ret
fbld
cli
mov
rcll
ds
aam
mov
mov
cmp
push
xchg
repz
scas
loop
mov
sahf
roll
mov
shrb
lea
mov
lcall
dec
es
out
add
sub
inc
push
data16
mov
and
sbb
faddl
and
mov
in
pushf
mov
sahf
fcomip
and
pop
das
push
int3
repz
sbb
movsb
inc
iret
fidivl
lret
xor
outsl
mov
aaa
mov
movsb
adc
les
jns
mov
xor
cltd
dec
jmp
xor
test
xchg
rorl
lret
hlt
or
insb
inc
icebp
stc
shr
xchg
loopne
or
scas
fidivs
mov
icebp
mulb
js
aaa
cwtl
jb
arpl
push
fisttps
jg
jge
lret
add
lret
mov
mov
xchg
sbb
mov
int3
mov
fisttpll
in
mov
enter
cmpsb
sbb
dec
idivb
pop
mov
mov
adc
jle
lcall
test
jle
shrl
xchg
push
in
jle
lret
lock
in
ficoml
call
sub
xchg
xchg
jae
dec
cltd
out
popa
sahf
mov
shrl
sub
mov
stos
cmp
outsb
ret
adc
xchg
mov
jle
pop
imul
stos
adc
cmp
daa
sahf
in
xchg
fdivrl
mov
je
mov
and
push
mov
mov
scas
xchg
mov
rol
ja
pop
lea
and
lods
mov
jp
movsl
cmpsl
mov
aad
cmp
mov
mov
je
fnsave
add
fsubs
idivl
lret
xlat
add
jns
hlt
sbb
cwtl
push
jmp
cltd
adc
fbstp
sub
fcompl
sbb
dec
jle
xchg
push
pop
dec
movsb
push
adc
or
xchg
mov
xchg
stos
xchg
pop
push
mov
nop
repnz
int
out
push
stos
cmp
pop
lcall
ja
mov
jb
cmova
loop
test
xor
sub
sbb
cmpsl
jle
or
jp
dec
in
mov
idivl
stc
rorl
iret
mov
add
cmp
orl
ljmp
cmp
sbb
loope
mov
jnp
adc
mov
test
cmp
clc
xchg
orl
in
mov
and
pop
stos
data16
dec
or
mov
adc
mov
jns
fistpll
leave
xor
jmp
aaa
mov
in
add
xor
ljmp
push
push
flds
orl
dec
cmpsb
push
xchg
das
loop
cltd
movsl
mov
fwait
fnclex
into
jp
sub
inc
cmpsb
or
imul
inc
jle
lds
aam
popf
mov
mov
lods
mov
into
test
lds
enter
adc
movsb
sbb
lahf
mov
mov
xchg
test
mov
jle
inc
call
clc
push
addr16
bound
and
xchg
test
das
sbb
out
jnp
push
lahf
jp
pop
faddp
sub
xchg
jb
cmp
adc
sbb
imul
stos
jle
cmovge
ss
and
rorl
push
pushf
repz
mov
into
ret
jbe
or
test
and
xlat
rolb
xchg
jnp
ficomps
xchg
loope
sarb
pushf
add
pop
scas
xchg
adc
insl
mov
out
xchg
sub
jnp
jbe
dec
rcrl
xchg
sub
fwait
rcrb
in
push
jne
mov
fwait
push
xlat
js
nop
or
lcall
jmp
lea
aaa
les
mov
mov
pushf
lcall
int
mov
loopne
sbb
popf
lods
add
pop
in
mov
mov
out
out
mov
loop
sbb
mov
addr16
adc
jle
xor
jl
or
aaa
or
lods
cmpsl
testb
jne
aaa
xor
nop
mov
mov
xlat
mov
mov
xchg
sub
push
add
mulb
pushf
lcall
mov
xor
and
adcl
mov
jb
sahf
push
imul
mov
cmpsl
push
into
pop
mov
pop
lock
sbb
xchg
xor
jg
push
scas
jp
cmpb
rcr
les
mov
jle
fisttpl
inc
lods
xchg
or
dec
hlt
or
data16
mov
pushf
mov
into
test
push
xchg
daa
imul
dec
mov
repz
sbb
mul
fstpt
gs
or
mov
lahf
fwait
mov
iret
mov
add
into
stos
int
scas
fnsave
dec
aad
mov
je
mov
jg
enter
outsb
call
and
aam
cmp
icebp
frstor
jbe
sub
push
mov
jmp
aas
lret
or
jno
lods
aad
adc
ljmp
sub
sub
hlt
je
xor
cmp
fld
xor
push
je
pop
mov
nop
xor
sub
mov
pop
sub
cs
outsb
ret
loope
ret
ss
xchg
jle
out
ret
in
mov
xchg
leave
ss
inc
sub
or
in
xor
jle
insb
mov
inc
insb
adc
mov
rcll
mov
adc
lea
je
add
jecxz
icebp
cmp
xchg
nop
stc
ret
cmp
popa
ret
fbld
out
xchg
and
mov
dec
popl
sub
lods
cmp
push
les
adc
je
pop
push
scas
jge
inc
lcall
bnd
dec
scas
jnp
and
mov
sahf
sbb
sahf
adc
insl
scas
xchg
fidivrl
popa
xchg
mov
sbb
cmp
lds
mov
ljmp
mov
push
mov
test
bnd
iret
and
mov
dec
fs
push
jl
and
mov
test
call
inc
mov
into
movsl
popf
jge
xchg
cmp
xchg
iret
mov
loope
int
mov
sbb
stos
mov
mov
pop
cwtl
clc
ja
cmpb
jecxz
hlt
push
jns
mov
iret
xorb
cld
dec
push
mov
sub
test
idivb
dec
les
jle
jmp
je
scas
stos
xor
mov
das
push
subb
and
push
dec
jo
inc
pop
insb
outsb
pop
lock
mov
mov
lret
in
gs
insb
jmp
out
xlat
in
jae
fsubp
outsb
jg
repnz
sbb
enter
mov
test
push
xor
fistpll
xchg
popa
cltd
push
rcr
test
and
add
mov
dec
loopne
imul
outsl
lret
fsubs
js
das
sub
ret
mov
shl
xchg
lds
add
sub
cmp
cmc
call
xchg
lods
add
and
mov
imul
cmpsb
inc
jl
aad
out
mov
sahf
dec
ret
mov
cmp
mov
test
xchg
and
cwtl
xchg
push
adc
cmpb
mov
test
mov
sbb
out
mov
js
lret
mov
cmp
jge
mov
outsb
fists
lret
ret
add
sub
lret
push
rclb
xchg
mov
xchg
cs
imul
lret
ljmp
aas
inc
in
sub
fsubl
testl
jb
daa
aad
mov
daa
aam
push
arpl
jle
cld
mov
rol
and
cmpl
movb
push
xchg
jb
dec
lcall
int
fdiv
pop
call
cwtl
out
fistps
ljmp
lods
cmpsb
cmp
jb
push
das
pop
pushf
pop
push
inc
cmp
int3
inc
or
movsl
lcall
jnp
mov
or
jg
jmp
adc
aaa
inc
dec
push
es
out
mov
scas
aad
mov
adc
cmpsl
push
pop
fs
std
sub
jmp
lahf
daa
jbe
lods
dec
mov
clc
jbe
movsb
insl
inc
adc
jne
sbb
mov
mov
cltd
cld
outsb
pop
sbb
mov
popf
enter
jmp
filds
jle
sbb
test
jb
cmpsl
jg
outsb
pop
lcall
arpl
xor
inc
cmpsw
test
hlt
std
pop
jbe
rcl
fisubrs
jecxz
sub
aaa
push
inc
mov
or
ljmp
pop
les
dec
mov
mov
call
in
add
mov
add
jl
pop
or
rorb
adc
aas
in
shrb
out
lods
xchg
pop
xchg
mov
or
inc
fmul
push
pop
lea
ror
mov
fmull
pop
je
movsl
mov
lods
stos
sbb
push
fwait
push
and
js
jle
jnp
push
mov
xor
adc
loop
cmp
in
mov
jg
or
sbb
adc
mov
xchg
fdivs
ror
cmp
test
cmp
cli
or
lds
popl
repnz
jo
cli
sub
les
fs
scas
insb
cmp
mov
clc
adc
xchg
pop
out
jge
push
xor
test
add
push
out
mov
fsubrs
xchg
outsl
mov
dec
jo
pop
xchg
pop
jnp
out
cmp
nop
pop
lret
out
pop
jmp
jmp
imul
outsb
cmp
iret
fcomps
jg
add
ds
mov
mov
nop
xchg
jnp
mov
leave
inc
mov
movsb
ss
cmpsl
jnp
push
je
mov
mov
cs
mov
popa
into
mov
sahf
push
scas
or
jo
ficomps
xchg
int
arpl
cld
jns
lret
orl
jecxz
sti
cmp
out
inc
in
xchg
aad
stos
jecxz
mov
sub
stos
ja
pop
mov
lcall
mov
mov
cmp
repnz
mov
sti
or
push
lock
call
add
xchg
pop
lret
int
and
inc
mov
insb
xchg
stos
shlb
or
jecxz
xchg
arpl
out
jl
mov
loope
push
sbbb
sarb
cmp
sbb
add
imul
cmp
subb
jp
sbb
xchg
jnp
and
fwait
xorl
int
addr16
xor
xchg
push
fildl
mov
lods
popf
sbb
mov
sbb
inc
mov
test
and
mov
fcomps
mov
in
jp
xchg
lods
mov
out
stos
lods
xchg
adc
leave
mov
imul
scas
mov
lahf
xchg
sub
scas
les
clc
xchg
push
sub
ret
xchg
fldl
cli
adc
xchg
ret
cmp
and
mov
xchg
pusha
jecxz
push
mov
cltd
cmpsl
sbb
jnp
lods
jmp
aaa
fisttpll
inc
jge
lcall
loopne
leave
test
into
mov
popf
insb
imul
scas
sbb
pusha
pop
mov
hlt
sbb
sub
test
adc
push
jle
stos
sbb
mov
jmp
jle
add
or
cmp
stos
dec
jecxz
and
fwait
movsl
sbb
cmpsl
ds
inc
pop
jae
or
mov
cltd
insl
adc
stos
jae
jno
dec
xchg
mov
loope
mov
arpl
mov
ret
fstpt
cmp
dec
jae
icebp
sar
jg
mov
insl
push
shlb
xchg
pop
lods
out
and
arpl
leave
jns
adc
cmp
dec
sbb
imul
pushf
inc
imul
xor
dec
xchg
fidivrl
loopne
mov
or
clc
ja
adc
and
sbb
repz
jb
mov
lods
push
int3
jbe
mov
test
into
push
sub
adc
bound
sub
imull
dec
or
aad
mov
int3
pop
popa
cmpsb
ja
push
cltd
xchg
fisttpl
ljmp
jg
addb
xchg
arpl
test
push
ja
mov
inc
fwait
xchg
lods
and
aaa
cmp
dec
sbb
in
jge
cmp
mov
shrl
popf
sbb
xchg
mov
sbb
jge
ljmp
xchg
ds
fimull
int3
and
sub
xchg
inc
xchg
stos
fcompl
xchg
mov
lret
je
lret
imul
add
in
jnp
in
out
jae
sub
ss
dec
sub
push
lahf
imulb
xor
push
xor
ret
repz
mov
jge
mov
xor
or
lret
rol
fcomps
cmc
push
pop
dec
push
clc
sub
inc
sub
mov
adc
xchg
xchg
lods
pop
mov
jle
mov
stos
fsts
adc
adc
jnp
sbb
enter
lea
xchg
or
xchg
sub
xchg
filds
mov
xlat
rorb
pop
outsb
jns
lds
jns
lret
fstps
arpl
lods
int
and
bound
jmp
aad
push
lret
lea
push
daa
sahf
cmpsb
aam
lds
sahf
inc
rcr
add
sbb
lock
mov
sti
test
pusha
bound
cmpsl
mov
fildl
mov
fisubs
xchg
cmp
push
mov
lahf
pusha
or
adc
adc
sub
fnstsw
and
into
or
push
daa
push
jnp
push
xchg
mov
in
mov
xchg
push
fisttps
fcoml
insl
dec
xchg
rorl
cmpsb
out
xchg
lods
pop
int3
xchg
out
mov
fstpl
and
decl
mov
insl
ljmp
lods
out
ja
sbb
jns
gs
loopne
cmp
mov
dec
xor
xchg
mov
adc
dec
dec
gs
test
rep
mov
jae
adc
inc
out
adc
les
std
cmp
fldenv
loopne
add
mov
push
js
push
adc
add
add
pop
nop
sub
sahf
dec
jg
inc
ror
shrb
xchg
and
mov
push
mov
out
sbb
or
out
mov
lea
mov
mov
dec
pop
int
dec
sub
lret
dec
sub
sbb
push
insl
add
cs
add
pop
ds
lret
outsb
jmp
and
add
adc
cmpsl
add
lds
cmp
bound
scas
dec
sbb
notb
add
loope
mov
mov
andl
push
dec
ljmp
out
loope
outsl
xchg
scas
add
ja
ret
je
les
push
sti
jge
mov
adc
stos
mov
mov
jno
mov
scas
jns
cwtl
xor
les
sarb
jne
das
mov
and
jae
or
sub
lcall
fists
push
lds
push
sub
and
insl
gs
and
sar
divb
mov
test
hlt
lret
sbb
rolb
sti
scas
mov
lahf
cmp
daa
adc
lock
inc
and
fisttpll
push
add
bndldx
pop
jmp
fxch
clc
in
shr
je
popf
mov
in
movsl
cmpsl
xrelease
sub
nop
movsb
sub
mov
decl
fildll
ret
push
xorb
or
ret
bound
fldcw
insb
ret
fisubrl
popa
adcb
data16
out
test
mov
subb
sbb
and
or
or
fdivrs
jae
movsl
popa
divb
cmpsb
ja
inc
sub
popf
cli
sbb
pushf
mov
jns
test
dec
std
mov
ret
ret
lock
scas
popa
add
push
fisttpl
xchg
into
push
clc
adc
push
dec
inc
inc
jnp
pop
fdivs
mov
popa
and
sub
call
cmp
push
mov
cmp
and
xchg
outsl
mov
add
test
ret
outsb
stc
out
arpl
in
inc
rolb
in
cmp
xor
incl
out
repz
roll
js
xor
push
pop
es
fmul
mov
mov
sbb
mov
out
cli
jg
xlat
xlat
fucompp
xchg
test
or
rclb
fisubl
or
das
pop
je
popa
shlb
xor
out
lods
inc
fisubs
insb
leave
or
jle
sub
adc
rorb
jns
or
outsb
stos
fwait
mov
ss
shrl
lods
test
incb
jle
push
fwait
inc
pop
push
lock
hlt
fldl
xlat
ret
std
fcompl
fildll
xchg
push
aam
and
mov
jecxz
mov
hlt
aas
adc
mov
sysexit
adcl
mov
inc
test
addr16
fnstcw
lods
push
lcall
popa
stos
or
mov
ljmp
dec
loope
xchg
mov
cmp
int
sbb
lds
inc
xchg
mov
sub
ss
das
cs
jmp
into
sub
cmp
jns
inc
test
push
mov
sub
daa
rorl
jbe
xchg
xchg
movsl
and
out
xchg
adc
push
jo
int
call
jmp
jns
sub
pop
push
pop
outsl
fdivrl
push
jne
inc
das
aam
push
or
xor
and
or
lcall
sbb
push
and
mov
pushf
mov
jg
mov
mov
fldl2e
movsl
sub
fisttpll
shlb
mov
push
push
jnp
push
push
movsb
jecxz
mov
lahf
imul
push
fld
lcall
lret
lock
cld
insl
in
movb
mov
fmul
fwait
dec
xlat
mov
out
fstpt
jnp
cmp
and
jl
jecxz
aas
xor
mov
clc
imul
and
jo
add
dec
adc
or
mov
mov
push
add
fimuls
mov
orb
popa
jb
js
dec
add
notb
cs
jo
popf
fiaddl
ljmp
aaa
inc
xchg
fsubrs
or
cmp
mov
dec
mov
pop
test
loopne
add
xchg
mov
xchg
leave
dec
in
xchg
and
sarl
out
mov
push
in
mov
push
inc
mov
out
test
subl
mov
xchg
out
mov
sub
gs
arpl
enter
dec
lret
dec
mov
inc
mov
decl
inc
pop
fsubrl
cmp
data16
or
sub
xor
pop
and
lods
test
test
out
in
cwtl
movl
jp
xchg
mov
jecxz
lret
add
fcom
arpl
mov
negb
cmpsl
adc
stc
cmpb
enter
faddp
int
xor
mov
push
jnp
lea
shr
lods
aas
lahf
test
jecxz
movsl
pop
popl
sarb
or
rorb
mov
stos
in
cmpsl
jle
xor
popa
fbstp
lahf
mov
pushf
cmp
xchg
jne
clc
sbb
pop
data16
cmp
adc
push
pop
pop
lahf
cmp
sbb
sub
lahf
in
and
jg
pop
or
in
sti
pop
hlt
sub
push
mov
mov
adc
popa
mov
in
add
daa
cmpsb
imul
aas
or
insl
shll
pusha
xchg
mov
stos
insb
push
jp
dec
imul
dec
mov
mov
mov
xchg
addr16
mov
shl
dec
bound
xor
xchg
xor
xchg
pop
push
pop
dec
and
cmp
lock
mov
lea
js
jmp
inc
jb
sub
adc
mov
ret
dec
mov
enter
pushf
insl
push
lds
lcall
adcl
iret
lcall
jbe
push
ret
jp
and
sbb
pop
xchg
imul
jae
jne
repz
ds
or
dec
clc
add
push
jb
dec
fcomps
pop
dec
cltd
enter
lds
mov
xor
pop
jns
xor
jne
add
mov
fdivrl
xor
stos
mov
ss
lcall
pop
aad
pop
push
stos
loopne
xchg
dec
enter
daa
xchg
repnz
pushf
sbb
inc
push
fstp
aas
jno
js
dec
fsubrs
and
dec
je
sbb
out
fmuls
lret
dec
push
stc
cli
dec
daa
repz
push
xchg
bound
and
orl
sbbb
and
add
in
push
int
imul
ss
and
pop
or
ret
or
adc
jmp
popf
xchg
dec
bound
nop
das
adc
push
pop
das
xchg
aaa
sub
pop
lahf
push
arpl
js
loope
idivl
xchg
xor
enter
stc
rcrl
in
pop
or
jmp
aas
jle
incl
adc
inc
xor
cli
lret
scas
in
adc
mov
fists
ja
inc
sub
add
stos
jns
dec
pop
mov
inc
jae
aam
mov
lcall
mov
rcll
fdivrl
sbb
jae
push
fisubs
cltd
sti
mov
cmp
popf
aam
mov
aaa
call
mov
fs
inc
cmp
ret
rorl
xor
ljmp
jns
mov
pushf
dec
push
fwait
or
ffreep
dec
mov
jge
mov
jge
jno
dec
mov
mov
loop
jne
adc
inc
push
sbb
dec
push
hlt
aad
in
mov
dec
sub
xor
fwait
dec
flds
scas
sub
shrb
push
mov
lds
jnp
mov
xchg
aaa
test
movsl
cmp
dec
neg
repnz
jmp
mov
sub
jg
mov
dec
or
popf
jmp
xlat
and
push
shlb
shrl
inc
xlat
icebp
rolb
ja
in
cmpsb
cmpb
or
shr
and
cmp
dec
repz
fsubl
and
cmp
or
insb
cwtl
jmp
enter
sbb
cmp
into
rcl
jns
mov
rclb
push
enter
or
mov
or
adc
lret
fs
jg
loop
mov
push
sbb
lods
dec
nop
inc
in
cmp
out
fdivl
imull
jne
jo
bnd
popf
mov
lret
adc
adc
loop
shll
popf
jge
add
frstor
scas
xchg
mov
lods
or
call
dec
jmp
fisubs
mov
repnz
addr16
adcl
and
adc
xor
mov
outsb
js
xchg
int
xlat
insb
push
mov
lods
in
jnp
ffree
adc
cli
sbb
mov
mov
cmp
outsb
push
mov
gs
push
imul
movsl
add
xor
push
jb
addr16
cmp
ficoms
xchg
in
imul
imul
mov
dec
ss
push
mov
adc
sub
sahf
icebp
cmc
dec
ret
jb
xor
push
aaa
jl
adc
xchg
sti
add
xchg
lods
mov
sbb
xchg
adc
aaa
jmp
cmp
mov
ljmp
xlat
mov
and
ljmp
das
push
cmp
insb
out
pop
inc
fadd
repnz
out
in
data16
pop
popf
xchg
or
cmp
mov
adc
ds
popf
push
idiv
inc
cmp
or
fs
gs
cltd
push
cmp
jbe
mov
call
inc
ret
lret
insb
dec
fdivr
pshufw
xor
inc
jo
stos
out
adc
or
xor
and
xor
cmp
fiadds
jae
hlt
mov
lds
ljmp
out
ds
aaa
jo
dec
ja
pop
sub
pop
je
sub
sti
loopne
xchg
lods
adc
pop
dec
mov
xchg
hlt
lcall
inc
outsl
and
sahf
andl
popa
dec
mov
and
jg
imull
loopne
jne
fstps
xorl
mov
xor
addr16
int
dec
adc
repz
les
sbb
lods
pop
repnz
popa
jb
mov
inc
cwtl
sbb
enter
pop
fwait
loopne
or
pop
enter
iret
fbld
scas
xchg
aaa
outsl
out
and
lret
out
mov
clc
jg
sahf
ret
test
cmp
rolb
imul
aam
jns
dec
dec
fimuls
xor
shlb
in
xor
jl
xor
stos
jbe
adc
xchg
pop
test
stos
xchg
push
xor
movsb
mov
test
mov
test
mov
pop
dec
das
lret
adc
aas
mov
or
add
cmpsb
lea
out
adc
jae
imul
cli
jge
cmp
xchg
adc
fcmovne
push
xchg
ss
or
mov
fidivs
sbb
sub
and
mov
pop
inc
xor
mov
sub
push
cmp
inc
ret
mov
mov
rcrl
inc
inc
lret
or
or
xchg
lcall
mov
cmpsb
bound
js
adc
jb
scas
sahf
jb
test
push
sub
mov
pop
js
mov
out
in
pop
pop
loope
aad
jg
dec
add
and
mov
enter
jb
dec
sbb
sbb
loop
fnstenv
movsl
aad
es
xchg
inc
xchg
imul
inc
sti
adcb
insb
adc
cmp
cmp
andl
xor
scas
imull
ljmp
jns
jbe
xchg
cmp
xchg
push
sti
mov
cli
adc
sub
jo
xchg
dec
insb
insl
mov
pop
xor
mov
aas
push
xchg
fcom
add
pop
bts
aas
scas
inc
sbb
adc
push
xchg
mov
in
add
sbb
subl
add
xor
mov
fstpl
jmp
inc
rcrb
filds
adc
xor
dec
push
jnp
cmpsb
dec
push
inc
xor
bound
dec
ss
push
clc
lods
pusha
cwtl
add
aaa
mov
nop
ret
or
dec
adc
lahf
mov
mov
test
scas
mov
add
subb
jge
mov
lea
cs
dec
cmp
add
jge
std
xor
lret
test
mov
lret
jbe
or
les
bound
inc
andb
cmp
es
dec
sbb
loop
sub
mov
adc
test
push
mov
sub
sahf
repnz
jae
loope
scas
lods
sub
fadd
test
sub
jecxz
fsubrs
push
dec
mov
mull
fildll
inc
enter
test
adc
in
fidivrl
pop
dec
xchg
adc
loope
pushf
in
cmpsb
push
xchg
cltd
adc
xor
or
fildll
xchg
add
mov
mov
jnp
add
jbe
insb
fsts
call
shl
sahf
fisubrl
add
jl
jg
push
popf
or
mov
xchg
sbb
loope
jge
inc
adc
fdivl
mov
cmc
pop
arpl
pop
roll
scas
lret
mov
call
hlt
ret
in
xor
in
test
jg
mov
pusha
pop
shll
lods
loopne
sub
cmp
xor
mov
data16
subb
fisttps
push
scas
stos
pop
test
lahf
cltd
sub
and
sbb
inc
out
mov
sti
movsl
cmp
mov
popa
and
xor
push
xor
sub
mov
daa
cmpb
out
leave
jg
lret
int
out
movsb
les
adc
xlat
daa
or
sbb
movsl
lods
cmp
lock
in
mov
jo
push
ss
sub
repz
enter
jmp
hlt
test
pop
shrb
cmpsb
bound
sbb
dec
or
push
sarl
dec
pop
adc
outsb
xlat
jecxz
int
jecxz
lods
shll
sahf
std
jb
notl
icebp
cmp
addl
push
lds
sbb
ds
addr16
sbb
ljmp
jbe
mov
dec
jecxz
jne
outsl
cmp
push
mov
xchg
xchg
inc
repz
fstpt
arpl
xchg
mov
dec
mov
jge
in
out
test
xlat
cmp
sub
and
fdivrl
std
adc
xor
or
jo
lds
push
push
jp
cltd
pop
cmp
push
adc
faddl
scas
stos
outsl
push
sbb
cli
lods
xchg
test
rolb
lahf
mov
xchg
int
cmp
pop
imul
gs
in
daa
out
orb
sub
cmp
pop
std
arpl
shl
dec
es
popf
clc
jo
add
popf
cs
sbb
xor
scas
ds
aaa
popa
repz
pop
jecxz
mov
addr16
jge
int3
xor
aad
and
fwait
lcall
dec
sub
push
arpl
les
jns
cmp
cmpsb
xor
js
in
arpl
lret
mov
mov
je
jnp
out
mov
and
adc
mov
in
push
pop
inc
xchg
cmc
inc
loope
xchg
imul
mov
mov
pop
mov
lods
cmp
mov
adc
ljmp
sub
sub
in
pop
mov
xorb
scas
adc
cmpsb
xchg
cli
ret
out
fadds
popf
es
lret
outsl
jnp
mov
test
mov
mov
in
inc
mov
stos
cmp
jno
test
or
cltd
cmp
mov
jns
pop
notl
adc
sub
mov
dec
mov
in
lcall
imulb
stos
push
mov
mov
sbb
or
cmpsb
sbb
lret
lds
mov
sub
sub
rclb
add
mov
xchg
call
int3
shr
sbb
xchg
inc
mov
dec
lea
xchg
inc
std
cmp
scas
ret
adc
into
jmp
dec
jmp
jg
sarl
dec
clc
out
movsb
or
push
push
jmp
pop
ss
nop
sti
cld
jne
or
mov
lods
pop
add
pop
jbe
loop
pop
jo
pop
push
add
mov
xor
mov
bound
jb
push
popa
pop
inc
inc
gs
shll
xor
test
pop
jg
lcall
xor
lock
in
mov
adcb
out
loope
xor
jns
jge
js
stos
sbb
int
push
aam
adc
lcall
mov
imul
jbe
into
aaa
cmp
fadds
push
inc
push
outsl
cmc
mov
dec
test
or
xor
dec
dec
mov
push
xlat
cmp
out
xchg
shrl
insl
test
sbb
cwtl
pop
jmp
and
mov
xor
mov
xchg
mov
movsl
repnz
lea
repnz
lret
push
mov
lcall
lods
pop
jno
dec
cwtl
pushf
pop
mov
pop
add
fistpl
ljmp
jae
lea
mov
shll
test
into
mov
lea
nop
cmp
ret
loopne
mov
cmp
bound
add
movsb
sbb
fstl
inc
xlat
mov
xor
cld
jmp
mov
sbb
adc
leave
out
pop
dec
test
jns
or
lods
push
pusha
sub
mov
movsl
in
jnp
test
push
ljmp
push
int3
mov
fadds
lea
test
or
ss
pushf
jmp
sbb
cmp
push
adc
dec
movsb
push
mov
jno
mov
cwtl
fdivrl
sub
pop
mov
cmp
mov
les
outsb
in
cwtl
fwait
dec
xchg
in
push
mov
ss
ret
cltd
cmp
jno
xlat
call
cs
dec
mov
inc
fldenv
dec
dec
das
xchg
ret
jne
xor
lcall
pop
movsb
cld
jmp
or
push
mov
scas
inc
adc
dec
loopne
aas
or
and
xor
cmpb
push
xchg
inc
xor
in
test
push
push
out
mov
xchg
push
or
dec
ljmp
jle
mov
ret
int3
jecxz
pop
sub
cltd
fcomps
push
test
push
clc
popf
cltd
cs
jns
mov
sbb
cmp
call
bound
fbstp
ds
pop
outsb
cmp
jge
dec
xor
push
mov
dec
mov
in
and
push
inc
xchg
stos
add
data16
lock
addl
jle
fwait
mov
xor
add
sub
pop
outsb
mov
xlat
push
inc
loope
pop
pop
or
outsb
cmpsl
cmc
js
int
jg
daa
lret
dec
mov
sbb
movd
mov
ret
mov
clc
jle
and
cmp
adc
imul
xchg
sub
mov
imul
ljmp
pop
iret
test
dec
cltd
ret
and
cwtl
daa
jecxz
clc
push
arpl
fbstp
das
subb
sbb
xchg
adc
inc
push
sti
add
mov
mov
inc
call
pop
in
mov
mov
or
xor
xor
inc
fxch
cmp
fscale
pop
mov
jecxz
nop
jp
push
mov
push
mov
dec
sbbb
mov
inc
inc
lods
cmc
jl
clc
dec
xor
insb
mov
in
insl
push
fisubl
loop
and
push
cmc
dec
cltd
lds
inc
ja
cmp
xchg
lret
cmpsl
inc
pop
jo
fisttpll
sbb
das
or
call
jnp
push
fnstenv
dec
cmp
pushf
or
icebp
test
movsb
stos
insl
xor
jns
scas
sbb
add
xor
sbb
mov
je
clc
mov
cld
sbbl
mov
ss
adc
test
or
jmp
jl
cld
dec
xlat
fidivrl
mov
in
mov
gs
test
gs
in
mov
call
or
dec
xlat
cmp
enter
mov
leave
push
lock
add
shrb
fwait
jp
push
jbe
int
ljmp
outsl
fnstcw
mov
in
xchg
and
xor
rorb
or
push
and
lea
outsl
adc
out
or
ud1
dec
sbb
adc
dec
ret
dec
outsl
xchg
xor
rcll
add
pop
das
xchg
push
mov
dec
shr
or
mov
int
insb
xchg
enter
push
and
cltd
call
sbb
jo
orb
push
ret
sarl
add
fwait
jb
or
scas
mov
cmpsb
push
jmp
out
sbb
pop
sub
jge
jg
push
dec
test
add
xor
inc
and
lahf
lahf
and
out
aaa
jp
imul
sar
fdivrs
dec
lds
dec
test
mov
fwait
xor
out
das
mov
sbb
and
jp
cmp
pop
sahf
loope
into
push
pop
fdiv
mov
jg
mov
loop
add
cwtl
scas
dec
xor
push
loopne
sahf
inc
adc
jecxz
inc
out
add
mov
jb
aam
pop
inc
add
outsb
rolb
out
das
mov
or
out
sahf
mov
fwait
xchg
mov
xchg
mov
sarl
mov
pop
pop
jle
add
mov
push
adc
imul
out
or
sarl
out
ss
xor
mov
and
fadds
cmc
in
gs
push
jmp
lcall
orl
mov
je
and
xchg
mov
loope
sbbb
adc
stos
stos
add
mov
movsl
inc
push
lods
sti
mov
lock
bound
push
fidivs
fistpll
dec
int
imul
rcr
pop
push
fst
add
inc
out
shrl
aaa
ret
arpl
xchg
das
movsl
xor
bnd
cmp
sub
mov
xor
mov
jmp
pop
cli
add
sti
jae
cmp
pop
adc
jae
in
orb
clc
cwtl
jae
test
dec
repz
in
int
and
pop
test
pop
sbb
lock
jne
xchg
mov
sbb
jmp
fidivs
in
mov
ss
lds
push
idivb
dec
jbe
pop
orb
dec
test
mov
push
scas
jbe
cmp
lcall
out
aas
loop
ljmp
aad
lret
ficompl
jns
shr
jge
enter
pop
sbb
jg
sub
xchg
mov
or
or
iret
jo
or
sahf
cwtl
adc
mov
in
shr
into
test
add
faddl
xchg
repnz
stos
xchg
test
pop
sub
in
push
adc
rcrb
shll
jl
out
mov
cmpsb
jns
jae
divl
jb
js
push
mov
rcll
fisubs
jmp
cmp
les
cmpb
shlb
in
ljmp
inc
cmp
dec
fsubs
mov
sub
and
pushf
cmp
ror
pushf
stos
cmpsb
enter
jno
popf
sti
int3
das
jl
cmc
push
fimull
test
jmp
add
dec
inc
mov
arpl
ljmp
aaa
cmp
shl
mov
mov
mov
lret
jbe
push
jnp
sbb
pop
cmpsl
push
int3
xchg
loope
lods
push
hlt
outsb
sbb
rcrl
push
ss
clc
leave
jno
push
pop
sub
mov
sbb
inc
test
pop
loopne
ss
push
and
or
mov
sbb
stc
mov
and
mov
or
or
push
arpl
adc
fists
scas
xchg
ljmp
xorb
fimuls
mov
cmp
add
dec
xor
loope
ret
outsl
ja
cmpl
imul
mov
or
jnp
dec
orb
lahf
jle
add
pop
sti
and
xchg
insl
nop
push
fldt
ss
pop
dec
xor
repnz
cmp
lods
mov
je
xlat
cmp
lds
test
jns
xlat
out
mov
mov
scas
jo
jnp
cmp
out
jmp
dec
inc
je
dec
movsb
push
aaa
and
xor
ret
inc
jecxz
mov
lods
loop
jmp
in
mov
ss
les
dec
inc
bound
inc
aaa
mov
jmp
pop
fs
iret
in
mov
cmpsb
jb
sub
enter
jge
xor
movsb
mov
inc
inc
jg
xchg
call
sub
pop
pop
xor
add
add
mov
dec
pop
lods
dec
fwait
pop
sbb
out
sbb
lcall
daa
adc
adc
jnp
pusha
push
mov
sub
lret
cmpsl
cmc
sub
outsb
mov
das
lock
sub
idiv
aaa
imul
dec
adc
sahf
jno
jns
cmp
out
inc
jo
inc
inc
dec
pop
into
cmp
jp
je
sub
js
ret
sarl
cmc
icebp
pop
cwtl
or
jg
cmp
jl
xchg
xchg
fildll
movsl
rol
sub
call
in
jge
lds
aas
addb
shlb
mov
and
inc
fstps
in
das
ficoml
cld
aas
lahf
mov
repnz
movsl
mov
pushf
pop
js
mov
cltd
and
push
lea
test
adc
call
ljmp
sti
int3
dec
jnp,pn
pusha
push
js
cmp
bound
aaa
pop
int3
pushf
movsb
sar
jg
mov
out
lock
push
or
jle
movsb
adc
push
mov
pop
out
sub
stos
in
mov
push
add
lds
sahf
les
xchg
lret
mov
stos
dec
inc
lret
jge
mov
push
sbb
iret
fisttpl
in
xor
pop
push
cwtl
mov
xchg
sbb
mov
jg
cmc
jp
int
inc
cmp
pop
mul
mov
fcom
je
pop
add
iret
mov
lcall
or
inc
pop
lret
cli
movsl
mov
je
lock
mov
jle
cmp
jae
shr
insl
das
mov
cmp
mov
addb
pop
jnp
jne
cmp
adc
outsb
mov
cli
mov
fwait
mov
aad
xor
xor
imul
test
inc
mov
jl
jg
pop
aas
cmp
pop
fisubl
outsb
cld
push
loopne
lcall
aas
cmp
jp
push
lcall
shrl
aas
dec
fisttpll
mov
mov
mov
xchg
xchg
dec
test
dec
outsb
xor
or
mov
scas
je
call
jae
jge
mov
mov
stos
mov
pop
sbb
sbb
mov
mov
jbe
dec
mov
cmp
das
out
inc
xor
sub
push
push
cmp
stos
and
enter
push
cmp
xor
mov
xorl
jne
sub
add
xchg
mov
sub
stc
test
jl
das
sbb
rdmsr
adc
pushf
jmp
mov
movsb
cltd
add
xchg
adc
jp
in
sahf
cs
nop
sub
inc
or
ret
adc
sub
repz
pop
push
mov
fisttpl
lea
add
mov
sub
int
insb
arpl
scas
inc
imul
xor
mov
in
inc
xor
out
loope
jl
cltd
xor
jno
aaa
cmp
xlat
inc
sbb
scas
mov
das
je
es
xchg
loope
addr16
mov
add
test
xchg
subb
stos
repz
in
jl
jp
mov
or
test
sti
test
in
daa
in
xor
mov
inc
aad
inc
mov
sbb
lea
mov
rcll
mov
sub
xchg
fldenv
jb
in
subb
xchg
mov
cmp
and
fisubrs
leave
mov
cmp
dec
jne
adc
add
je
jbe
rorb
pop
shr
push
sub
fwait
test
xchg
sub
xchg
sub
lock
movsl
xchg
jne
clc
leave
stos
mov
out
mov
fdivrl
jg
xorl
sbb
and
scas
xchg
mov
pop
out
mov
test
cwtl
push
adc
mov
jecxz
jnp
push
cmp
scas
pusha
pushf
push
adc
movl
fwait
jecxz
pop
push
aam
je
out
xlat
in
dec
adc
push
jns
test
jnp
stos
out
push
int
and
sub
clc
lret
fcoml
push
int3
jbe
xor
ds
push
enter
data16
push
xor
dec
jg
xchg
in
std
dec
or
mov
inc
rcrb
inc
pop
fcomp
lds
dec
subb
aam
jg
or
aaa
dec
jecxz
addr16
cmpsl
insl
lret
or
cmp
into
bound
xor
imul
sti
pushf
dec
shrl
nop
stc
inc
fisubrl
mov
cli
lods
inc
xor
jg
pop
xchg
subl
jge
cmp
adc
inc
dec
stos
movsl
or
fimull
lea
mov
icebp
test
lds
imul
jnp
aaa
das
gs
ret
cmpsb
sub
push
stos
xlat
and
fxch
fsubrs
adc
adc
out
mov
stos
sub
add
mov
inc
fucom
ss
nop
stc
loopne
shll
test
mov
sar
sbb
jae
jns
stos
cltd
mov
cmpsl
fs
pushl
sub
fcomps
fbstp
xchg
test
inc
stos
adc
sub
js
cld
adc
mov
ret
xlat
jl
addr16
ss
xor
jmp
xchg
pop
dec
ret
sub
add
dec
lcall
test
bound
inc
mov
repnz
cmpsl
sbb
sahf
ja
vpshab
in
sets
pop
sub
ja
dec
stos
insl
jnp
push
out
mov
cmp
test
decb
test
adc
imul
call
inc
jle
mov
adc
clc
stos
dec
jae
lds
cltd
les
jg
cmpsb
or
push
inc
je
jae
je
mov
sbb
mov
icebp
push
jmp
cwtl
cmpb
pop
ss
jae
int
inc
jb
cwtl
js
popa
sahf
sbb
or
lods
cmp
mov
lahf
test
dec
pop
and
dec
inc
xor
dec
mov
sbb
sub
ss
jecxz
inc
pop
adc
cmp
inc
inc
pop
mov
jp,pt
popa
sti
sarb
out
push
or
arpl
jp
std
sbb
push
cwtl
xor
fnsave
fs
add
daa
iret
pop
cmovge
inc
loopne,pt
int
mov
sarl
sbb
lcall
mov
fisubrs
add
sbbl
jge
cmp
jge
mov
jb
push
inc
mov
xchg
sbb
jns
ja
enter
pop
mov
mov
fsincos
lods
push
enter
push
cmp
hlt
adc
jecxz
pop
jl
in
xorl
mov
cmpsb
xchg
jae
cs
adc
imul
xor
jg
cli
mov
push
push
dec
mov
mov
xor
mov
xor
mov
pop
or
mov
std
fdivl
in
cmc
enter
mov
jns
pushf
add
das
and
and
stos
jmp
push
sbb
mov
mov
negb
lods
popf
xchg
xor
mov
lds
into
mov
cmp
rorl
lcall
cmpsl
in
daa
inc
aaa
arpl
ja
push
cmp
negb
sahf
ret
imul
ffreep
stos
shll
fucomp
enter
mov
lods
stos
jp
nop
pop
lods
mov
adc
xor
mov
inc
andl
imul
test
mov
outsb
lahf
addl
adcl
push
inc
xchg
popf
in
adc
movsb
lret
lea
inc
sub
sbbl
popf
je
or
enter
loop
inc
scas
jecxz
lods
cmp
mov
mov
xor
jmp
hlt
sti
popa
xchg
xchg
fcmovnb
rcrb
data16
jo,pn
pusha
mov
pop
or
sbb
mov
xchg
mov
jbe
inc
adc
cld
cmp
aam
cmp
or
mov
fimuls
sub
cmp
mov
add
arpl
negb
mov
xor
loopne
fbstp
xchg
mov
sbbb
dec
sbb
ror
nop
pop
adc
xchg
cs
je
fadds
test
xor
int3
sub
xchg
repz
test
dec
and
pop
movsl
jle
sbb
dec
test
sub
pop
xor
mov
lock
xchg
mov
xor
mov
repnz
mov
sbb
inc
adcb
mov
dec
in
xchg
xorb
fisubrl
sbb
add
pop
sti
cmpsl
mov
dec
mov
out
scas
stos
fisubrl
in
xor
or
pop
or
rcr
push
fxch
lea
ljmp
and
sbb
cmc
push
mov
lds
ljmp
push
lea
pop
cmp
les
and
add
and
je
or
jp
mov
sub
ret
aas
sub
jp
mov
jne
inc
rcrl
scas
jae
jnp
pop
scas
je
dec
and
dec
ffree
lcall
mov
scas
mov
es
test
pop
push
sub
repz
fwait
popa
repz
push
repz
bound
movsl
cwtl
movsl
xchg
cltd
dec
stos
mov
in
xor
icebp
xor
jo
stos
ss
ret
movb
cmp
xchg
add
gs
insb
or
push
xchg
iret
ja
in
cmp
sbb
dec
push
sbb
pop
cmp
xor
iret
and
cltd
jp
inc
jns
adc
inc
and
jbe
adc
mov
xchg
jmp
lcall
jae
addb
popf
pop
push
scas
cmp
xchg
pushf
sub
cmp
xchg
movsl
push
lock
fidivl
cmp
mull
lahf
xor
dec
sbb
cs
xor
test
push
dec
scas
cmp
les
xchg
les
cmp
int3
fstl
mov
ret
push
xchg
mov
and
fdivl
pop
jns
movsbl
mov
mov
dec
lea
fcompl
pop
jns
div
adc
inc
subb
jnp
fisubs
jnp
iret
sbb
jne
in
int
mov
lahf
dec
or
mov
and
out
clc
paddb
mov
lock
call
xchg
dec
pop
add
push
orl
xchg
fwait
mov
xchg
push
or
dec
push
mov
dec
popa
in
xchg
lret
mov
mov
fnstenv
cmp
pop
pop
xor
xchg
pusha
imul
dec
jl
lahf
push
dec
mov
cmpsl
and
adc
dec
addl
xchg
frstor
xchg
es
xchg
shll
andl
jo
add
sbb
ret
repnz
cli
push
lcall
cmp
jne
jae
daa
jg
xlat
lea
leave
dec
scas
xorb
js
xchg
jl
sbb
pushf
test
push
pop
ss
clc
xor
dec
jbe
sub
mov
xchg
out
jnp
imul
xlat
dec
and
adc
in
stos
hlt
mov
inc
mov
out
je
jbe
filds
enter
out
bound
push
push
imul
sub
dec
bound
sub
jbe
into
mov
subb
cs
icebp
leave
push
aam
sbb
cmc
mov
popf
xorb
aam
fwait
je
adc
les
cmp
jmp
cli
stos
lods
lahf
xor
repz
adc
sahf
pshufw
pop
out
adc
std
fildll
leave
push
ds
xor
mov
cmpsb
pop
incl
jle
cltd
je
mov
daa
mov
push
dec
jp
xchg
idivl
cmp
cltd
testl
mov
cli
stos
outsb
mov
cmpsb
mov
insb
test
xor
in
test
mov
icebp
push
into
in
mov
sbb
xchg
fdivs
jl
movsl
ficompl
cmp
jb
xchg
sub
inc
std
add
nop
mov
test
test
and
out
cmp
dec
push
daa
inc
jl
sbb
mov
mov
cmp
int3
xchg
loope
rorl
fnstcw
in
mov
push
push
inc
dec
jmp
xchg
sarl
lret
fadds
mov
adc
pop
je
pop
or
aaa
jmp
inc
and
mov
dec
jae
loope
xor
fisttpl
in
insl
divb
jl
aam
mov
gs
add
jl
in
xchg
bnd
bound
mov
mov
bound
in
outsb
into
daa
fisttpl
das
xchg
fildll
fucom
insb
pop
jp
sbbb
xor
das
test
jg
push
sbb
arpl
out
fimuls
pop
mov
pop
sub
mov
pop
xor
jecxz
mov
pop
mov
and
sbbl
jno
imul
ret
sub
test
popf
pusha
ljmp
cmpsb
fistpll
jb
sbb
cmc
rolb
xor
cmc
xchg
sarl
cltd
xchg
psllq
gs
mov
fcmovnb
or
jo
inc
and
xor
and
rorb
and
shrl
lret
ja
lcall
xor
jno
jge
mov
jmp
in
int3
add
jle
push
pop
cmp
dec
imul
lcall
xchg
cmp
nop
mov
lahf
push
dec
pop
pusha
sahf
or
jmp
mov
cmp
jbe
out
dec
cmp
mov
dec
insl
arpl
push
lods
add
jns
push
cli
xchg
call
add
push
jmp
ret
push
or
xor
into
insb
pop
sub
cmc
sub
push
in
shll
cmp
push
jno
movsb
pop
lcall
daa
xor
mov
pop
mov
dec
mov
mov
xor
fidivrs
cwtl
mov
adc
xchg
out
xchg
sbb
insb
xchg
pop
mov
lds
inc
push
subl
pop
lret
jecxz
or
mov
stos
in
sub
dec
mov
inc
mov
clc
jl
je
lea
sbb
pop
xchg
arpl
sub
stos
push
hlt
push
fisubs
push
fisubrs
sub
cwtl
popa
adc
cmpsb
cmpsl
push
dec
out
ja
jmp
iret
ss
in
push
push
test
pop
cmpsl
and
adc
cwtl
mov
aam
addps
pop
nop
cmp
xor
cmpsl
idivl
cld
xor
and
cltd
das
imul
xchg
mov
jle
or
sahf
mov
adc
stos
pop
cmp
mov
stos
xchg
sbb
xchg
aam
sbb
mov
movl
xchg
xor
and
repnz
inc
xlat
jb
in
inc
ds
adcb
jle
loop
gs
test
mov
fimuls
xchg
dec
in
push
mov
add
mov
add
movsl
sub
jl
mov
xor
dec
call
xchg
dec
mov
inc
sub
cmpsb
aaa
inc
loope
negl
iret
cmp
ret
dec
out
iret
inc
mov
inc
cli
and
or
or
aaa
adc
fidivrl
stos
cmpsb
or
das
jns
cmpsl
pop
std
in
dec
pop
loope
xchg
in
mov
mov
insl
xchg
pop
cmpsl
mov
into
leave
addr16
cmp
popf
cltd
fdiv
inc
fmuls
fs
sarl
adc
in
jno
mov
bound
pusha
and
std
cmp
jmp
sarl
jo
pop
jae
cmpsb
sbb
or
dec
dec
mov
movsb
and
or
roll
and
sbb
adc
leave
jmp
rcr
mov
mov
lock
sbbb
rep
adc
repnz
xchg
js
sub
jb
sbb
xchg
arpl
ja
pop
das
xchg
into
dec
lock
rcr
and
outsl
or
inc
cmp
pop
outsb
push
dec
addr16
xor
divl
pop
mov
iret
ret
jecxz
mov
scas
jg
and
dec
adc
lcall
andb
das
xor
inc
cld
cmp
adc
insb
adcb
mov
jl
mov
loope
add
mov
addr16
pop
or
mov
mov
inc
sbb
test
stos
inc
mov
mov
hlt
rorb
cmp
int3
mov
stos
and
dec
loope
test
arpl
adc
fisttpll
jecxz
clc
jnp
mov
xor
lret
jb
stc
test
mov
xchg
shll
push
cmp
push
dec
in
iret
call
adc
ret
push
xchg
xchg
push
inc
es
daa
push
rcrl
mov
ds
js
xchg
subb
subl
js
pop
imul
movsb
inc
mov
ds
ret
scas
jge
out
add
pop
shlb
adc
out
lcall
mov
sahf
sub
fstl
test
std
xchg
mov
adc
sti
std
xor
lods
xchg
sub
add
pop
incb
jns
add
popa
out
cmc
dec
inc
out
push
fsubrl
sti
repnz
push
repnz
call
sbb
add
fs
jp
sar
mov
mov
js
shll
xor
jge
fdivrl
dec
test
xor
mov
mov
pop
aaa
mov
js
stc
inc
sar
mov
xchg
pop
jo
pop
aas
out
sahf
hlt
xor
or
mov
xor
ret
cmpsb
je
mov
pop
xchg
in
dec
dec
test
fnsave
out
push
mov
xor
divb
adc
xchg
and
add
jae
or
arpl
mov
adc
add
cmp
or
or
imul
lea
mov
hlt
negl
call
and
xchg
popa
iret
bound
pop
rcrb
xchg
in
movsb
adc
jno
movsl
mov
mov
bound
adc
and
hlt
les
jmp
fidivrl
or
mov
lahf
pop
fcomp
jmp
stos
adc
mov
aaa
push
stos
inc
mov
int3
ret
xor
or
push
shrb
lahf
mov
arpl
dec
stc
lret
jle
add
sub
xor
lret
cmp
imul
mov
fidivs
inc
xchg
inc
xchg
movsl
pop
xchg
dec
stos
into
cmp
jno
push
hlt
dec
lret
mov
cmc
sahf
mov
mov
mov
jp
insl
mov
out
add
popf
push
mov
lret
inc
jecxz
jae
xor
iret
fistpll
fnstcw
subb
or
push
push
mov
jbe
push
shl
cmp
inc
pop
push
mulb
out
roll
out
push
orb
xor
aad
out
push
inc
add
xchg
sar
sti
adc
gs
push
frstor
inc
test
sbb
mov
sbbb
inc
or
xorb
push
imul
cmp
mov
test
xor
and
andb
movb
inc
inc
inc
fisttps
mov
movsb
lahf
ljmp
mov
lcall
lds
xchg
loope
mov
movsb
cmp
mov
insb
shlb
js
and
push
subl
jb
pushf
dec
cmp
stos
dec
fnstsw
scas
rclb
lock
sub
jg
ljmp
call
lahf
rcr
xlat
ret
lret
out
sti
or
push
jl
scas
arpl
jp
add
imul
inc
xor
and
xchg
sbb
stos
jl
imul
hlt
nop
movsl
stc
test
jnp
or
mov
mov
inc
cmp
jg
cmp
in
rclb
pop
push
mov
lock
cs
mov
ja
xchg
mov
xlat
mov
xchg
pop
xchg
loopne
mov
scas
dec
pop
sbbb
xchg
imul
lret
jae
cmc
cld
inc
test
dec
mov
sbb
test
jp
test
add
subb
fdivr
xchg
sub
inc
ljmp
popf
fs
pop
cmp
sbb
jecxz
dec
or
sub
fbstp
aaa
repnz
jns
pop
dec
lea
add
jb
lea
dec
pusha
inc
repnz
jns
pop
xchg
sbb
inc
dec
js
push
stos
arpl
sti
rcll
loope
scas
pop
mov
and
cmc
out
movsb
adc
dec
ljmp
xor
adc
xchg
in
stos
repnz
pop
enter
fisubs
les
stc
jecxz
decb
lret
pop
cmp
jae
movsb
mov
stos
or
out
sarl
mov
addr16
cmpsl
jnp
add
test
int
das
mov
test
mov
int
and
push
lahf
mov
pop
or
fsubrl
cmp
cmp
repnz
jno
jle
fs
mov
dec
dec
add
mov
out
adc
incb
xchg
movsl
jmp
push
test
fdiv
adc
cmp
incb
push
mov
mov
inc
mov
das
test
mov
ret
sub
xchg
fcompl
adc
mov
add
jnp
xor
adc
push
stos
mov
jg
cli
sub
jbe
cmp
or
inc
adc
xchg
add
lret
jo
xor
out
in
jl
and
mov
adc
cltd
fistl
mov
add
bswap
inc
loopne
sbb
cmp
test
xor
rolb
test
out
sub
subb
sarb
in
sbb
xlat
pop
or
cld
lret
dec
out
pop
xor
pop
sbb
das
xchg
js
sub
mov
cmp
in
je
or
push
jecxz
scas
cmpsl
mov
into
xchg
or
fmull
jne
hlt
cwtl
cmp
es
adcl
fst
xor
mov
push
mov
mulb
pop
movsb
sbb
add
test
movsl
test
push
outsl
inc
popl
xchg
nop
insb
cmpsl
and
inc
and
loop
ds
inc
out
inc
test
cmp
or
jo
icebp
ficoml
movsl
xchg
jmp
ss
mov
jp
inc
outsl
daa
movsl
dec
or
sbb
ja
fldt
mov
cmp
fnsave
std
mov
pop
sub
cmp
mov
add
js
testl
mov
pop
ja
cltd
cmpsb
int3
sub
and
mov
push
lahf
push
xor
xlat
mov
scas
lea
test
pop
cmp
xlat
negl
xor
adc
lods
pop
xor
jbe
push
and
dec
mov
jg
addl
fstp
jae
sub
cltd
pop
inc
push
jmp
sub
notl
and
mov
sbb
mov
push
mov
cmc
sahf
scas
insl
mov
in
xor
add
push
movsb
jle
movsb
fistps
sub
outsb
iret
ljmp
cld
xchg
test
xchg
xchg
iret
lods
fidivl
cmp
pusha
sub
test
mov
push
rcrl
inc
or
imul
jg
push
cmp
inc
filds
das
test
dec
in
inc
xchg
xchg
xchg
adc
add
icebp
xchg
add
pop
fucomi
jmp
mov
push
roll
mov
cld
dec
adc
jae
fists
mov
inc
pop
push
or
sarl
subb
cmc
cltd
push
pop
sarl
rorl
movsl
jmp
test
mov
pop
bound
mov
imul
xor
jns
sahf
fwait
js
or
lret
bound
mov
aaa
ljmp
xchg
cmp
in
mov
aaa
insb
sub
mov
cmpsl
push
xor
adc
xchg
mov
jo
rclb
outsb
xor
xlat
lock
in
pop
std
dec
push
sbb
dec
xchg
loop
into
in
ljmp
xor
sub
pop
lret
insb
inc
inc
outsb
addb
or
pop
lahf
mov
arpl
mov
xor
fbstp
lock
nop
push
mov
popf
lods
jg
data16
and
xchg
cld
popa
scas
in
or
scas
shl
test
mov
adc
mov
xchg
fbld
add
sbb
sbb
test
imul
mov
addr16
daa
out
das
loope
cmp
mov
mov
jecxz
sub
xchg
sbb
inc
lret
and
icebp
or
js
mov
and
sub
pop
hlt
jecxz
test
sbb
adc
lds
scas
sbb
jae
push
pop
int3
cmp
ja
sub
sti
sbb
and
pop
push
fisttpll
int
cmp
push
jl
xor
dec
cs
xor
sub
xlat
xchg
sbb
xchg
jne
out
sbb
iret
lret
fmull
das
xchg
scas
imul
fcmovu
adc
test
cwtl
sbb
push
std
xchg
out
out
lret
test
stos
or
repz
lds
inc
gs
mov
rcrb
ljmp
popf
mov
fdivrp
ja
push
jl
aaa
dec
cmc
lods
mov
cmc
data16
imul
imul
dec
test
xchg
fsubrl
ljmp
mov
jnp
idivl
mov
dec
cmp
cmpsl
test
adc
lds
jecxz
inc
fidivrl
xchg
sarb
loopne
xchg
dec
out
jo
pop
push
pop
jmp
xchg
enter
nop
pop
lods
ja
test
xchg
pusha
jl
cmpb
or
mov
mov
adc
mul
cmc
imul
inc
mov
outsb
inc
in
cmp
in
add
lcall
cmpl
es
inc
jb
dec
fldt
xchg
adc
lock
cs
loop
fiadds
in
sbb
xchg
cmp
pop
std
cltd
mov
add
and
jno
scas
pop
in
popa
repz
sbb
fldt
jnp
out
call
ja
std
mov
adc
push
ret
fwait
lahf
fnstenv
imul
sbb
mov
jno
movsl
mov
sub
nop
in
rolb
js
xor
mov
jbe
sbb
enter
xchg
cmpsl
loop
jecxz
lods
xor
ds
sti
dec
pushf
or
jle
xor
out
cmc
jno
cmc
das
pop
dec
stc
loopne
cmc
jecxz
call
cmpsl
popa
data16
divl
movhps
mov
lods
dec
in
cmpsl
mov
inc
mov
dec
test
xor
test
add
in
out
int3
sbb
mov
mov
insl
inc
sar
and
mov
imul
pop
scas
aad
push
into
pop
jne
or
jae
and
cmp
addr16
push
push
xchg
ja
pop
lret
movsb
outsb
imul
mov
push
loop
lcall
cmp
aas
add
mov
inc
push
stc
rol
jno
lea
out
lahf
hlt
cli
cmp
fnstsw
stos
mov
ss
sub
ljmp
fwait
and
mov
in
popa
adc
dec
push
mov
repz
cld
xchg
das
mov
xchg
cmc
pop
mov
jb
mov
xchg
test
stos
sbb
mov
add
cmpsb
jp
push
insl
imul
xchg
cli
repnz
pop
enter
flds
int
call
lock
movsb
push
jo
arpl
jmp
jnp
xor
sub
mov
mov
xlat
sarb
jge
xor
cmp
test
mov
sahf
sub
push
fistl
mov
dec
push
push
test
dec
xor
sbb
pop
jp
pop
xor
loope
push
mov
push
sahf
sub
insl
inc
ss
cltd
cmp
mov
xchg
mov
mov
sbb
gs
mov
add
sahf
aas
ss
add
mov
popa
xchg
gs
push
bound
push
mov
aaa
xlat
xchg
add
pop
jbe
jo
shll
add
push
dec
pop
lcall
sub
sahf
inc
mov
dec
out
xorl
pop
and
hlt
cmpb
ljmp
cmp
dec
and
pop
or
neg
out
dec
jmp
inc
xchg
add
push
stos
mull
cmpsl
rorb
jmp
lcall
mov
cmp
jle
dec
daa
jecxz
push
outsb
mov
shld
pop
jp
mov
mov
mov
push
mov
scas
inc
jo
fistpll
mov
lods
fistpll
mov
sub
xor
repnz
aam
add
shr
jne
imul
jae
movsl
scas
fadds
repz
push
jnp
fsubrp
lea
pop
aaa
add
insl
fistpl
int3
xchg
sbb
mov
je
cmp
fsubs
lahf
jae
mov
pop
fs
repnz
xor
adc
arpl
lret
xchg
mov
jmp
sub
add
arpl
mov
mov
fs
movsb
pop
hlt
idivb
std
sub
xor
das
mov
pop
xor
inc
out
cmp
mov
popa
mov
test
lret
or
sub
dec
imul
adc
xchg
cwtl
loope
in
fsubl
xor
into
in
jns
sub
push
or
repz
xchg
sub
ds
enter
sbb
fdivs
xchg
xor
loopne
cli
fcoms
sti
or
pop
lret
cmpsl
cmp
loope
stos
gs
sub
call
mov
lahf
sub
and
cmp
cmp
jmp
pop
sahf
jmp
inc
inc
loop
out
je
movsb
cmp
fs
sahf
jb
std
jmp
push
inc
stos
fstp
sub
mov
mov
in
imul
mov
pop
adc
jmp
sub
mov
mov
mov
ds
mov
cmpsl
jnp
mov
stos
les
cli
repz
out
cmc
out
scas
movsl
pop
mov
cmp
adc
mov
pop
cmc
dec
cld
push
push
fsubrp
push
addr16
nop
or
xor
clc
fidivrs
inc
ds
lcall
arpl
popa
dec
imul
pop
mov
sub
fsubrs
pop
mov
xchg
mov
int3
xor
jnp
insl
mov
and
rcrl
dec
repnz
cmpsb
lock
int
or
cmpsl
mov
stos
into
loop
nop
loop
cwtl
lret
mov
insl
in
insl
cmpsb
and
xor
push
stos
mov
cmp
xchg
ljmp
sub
out
into
cmp
aad
stc
daa
mov
fs
mov
ret
ljmp
jbe
jmp
ljmp
xor
sbb
les
imulb
sahf
mov
push
mov
notb
xchg
xor
imul
fsubr
outsl
or
int
stos
popf
xchg
fwait
lds
jno
fidivrs
out
int3
cmpsb
stos
mov
hlt
iret
push
xchg
mov
stc
xor
push
popf
mov
mov
jge
addr16
ficoms
inc
bound
pop
jp
scas
inc
out
sbb
call
outsb
or
xchg
xchg
adc
ficoml
dec
lods
mov
mov
xor
and
and
push
sub
fsubrs
aad
in
subb
mov
cltd
xchg
hlt
xor
or
scas
jb
outsl
sub
popa
cmp
xchg
int
inc
adc
cwtl
lcall
jl
dec
jbe
jb
pop
pop
mov
aaa
aas
insl
fyl2xp1
push
repz
jg
sub
sub
fidivs
subl
pop
bound
aas
and
outsb
xchg
or
cltd
xchg
sub
inc
nop
mov
mov
ret
xor
shl
mov
xchg
call
shlb
sbb
lcall
es
leave
stc
cmp
stos
pushw
mov
cs
loopne
pusha
bound
test
pushl
xchg
push
test
or
iret
loopne
and
mov
scas
cmp
test
push
pop
in
jno
js
pop
cmp
xor
inc
ja
cli
lret
sti
jg
addr16
jnp
das
inc
aam
lock
pusha
bound
mov
push
jg
mov
bound
mov
mov
sbb
gs
cmpl
mov
out
jecxz
push
or
aas
loop
imul
es
je
dec
cld
out
inc
xor
xchg
sti
add
jae
mov
cmp
xchg
cmpsl
call
scas
dec
fiaddl
push
insl
addl
inc
mov
inc
mov
mov
dec
pop
mull
fcmovbe
mov
shlb
ljmpw
insb
or
add
dec
inc
cld
or
daa
out
push
call
pop
dec
sti
imul
push
lods
push
mov
insl
cmp
sbb
push
sti
jae
negb
xlat
xchg
into
cmpl
sub
push
inc
lcall
mov
into
fxch
fidivs
dec
dec
sub
sbb
out
jl
lahf
fcoml
hlt
addr16
fiaddl
dec
test
aaa
loop
ds
inc
xor
push
rcl
dec
add
mov
pop
jns
jb
into
add
loope
scas
jg
outsb
fdivl
addr16
adc
cmpl
fstp
jno
gs
aam
add
adc
or
iret
inc
iret
jmp
mov
push
nop
test
out
push
mov
mov
lds
xor
xchg
adc
int
out
jmp
push
push
outsb
push
xor
pop
jl
ss
in
pop
repz
fs
xchg
daa
pop
xor
ss
ja
lcall
ds
mov
shlb
cmp
movsb
and
push
mov
aam
add
lret
int
sub
xchg
movsb
push
leave
mov
bound
addr16
sbb
sbb
mov
stos
push
mov
ficomps
or
mov
add
mov
and
stos
mov
mov
imul
cmc
adc
adc
jmp
movsb
inc
and
in
pop
movsl
ret
dec
ja
add
and
xor
cli
and
insl
cmp
xchg
mov
sub
xor
jle
adc
cld
icebp
das
rcl
pop
inc
dec
loopne
mov
mov
gs
xor
push
jnp
rorb
mov
xchg
mov
cmp
arpl
out
jno
test
push
push
dec
or
mov
ja
std
add
in
loopne
sub
aad
outsl
fwait
pop
inc
or
inc
mov
sbb
sarl
aas
test
and
mov
popa
fsubrs
mov
stc
sbb
popf
addr16
fcoms
xor
imul
and
insl
ds
fnstenv
jg
push
jge
push
fimuls
sub
xchg
lock
scas
cltd
push
rol
out
jae
notb
jb
mov
mov
dec
fstl
call
cli
insl
pop
or
stos
adc
jbe
mov
mov
push
xchg
fidivl
imul
sahf
jno
mov
inc
cmp
xor
pop
mov
inc
adc
mov
jbe
dec
sahf
imul
enter
cmp
xor
imul
enter
inc
js
and
scas
ljmp
fcomps
fldcw
jbe
jnp
test
xlat
xchg
push
fwait
cmp
cmp
es
movsl
lea
or
jg
mov
sub
divl
pop
jbe
and
hlt
mov
jecxz
push
mov
insb
sub
push
in
inc
pop
mov
cmp
mov
mov
cli
cmp
jge
mov
lret
jg
pop
adc
xor
mov
pop
sub
mov
adc
mov
js
mov
push
adc
sbb
insb
out
rclb
test
pusha
je
push
arpl
jnp
aas
dec
mov
sub
in
cmp
out
mov
sub
into
out
pop
in
push
outsw
popf
je
jp
sub
adcl
sbb
aad
in
add
cltd
loope
mov
pop
cmp
push
bound
subb
ret
lahf
stos
dec
and
cwtl
popf
ret
sarb
add
fsub
out
sahf
cmp
loop
movsl
sub
into
fnstsw
into
cld
or
mov
xlat
sbb
hlt
pop
push
addr16
pop
dec
mov
les
dec
jbe,pt
cmp
jae
popf
jnp
or
mov
ljmp
andb
push
stos
out
fcomi
pop
aam
adc
and
cmp
cwtl
arpl
mov
cmpsb
or
cld
mov
push
ss
cmp
pop
subl
rclb
popf
xchg
inc
or
xor
out
popa
lods
mov
xorl
dec
jne
xlat
and
dec
es
mov
inc
insl
leave
inc
mov
push
or
test
adc
mov
mov
je
cmp
aaa
push
mov
js
or
andl
or
xchg
mov
dec
test
les
cmp
xchg
push
mov
or
xchg
mov
in
enter
or
cmc
jp
int3
insl
imul
sub
add
rolb
div
push
dec
cli
pop
mov
dec
sbb
test
cltd
out
in
into
into
icebp
mov
bound
inc
mov
dec
pop
mov
xor
sub
ja
cmp
ss
and
and
mov
sbb
stos
push
xor
sahf
in
mov
cmpsb
adc
pop
ficomps
jp
iret
cmp
mov
push
xchg
push
push
subb
mov
fsubr
scas
xor
gs
push
or
je
xchg
mov
movsl
push
sbb
imul
lea
mov
jo
dec
lock
adc
mov
cmp
ja
into
fsubr
aam
lea
dec
orl
pop
cmc
inc
dec
outsl
and
adc
fiaddl
orl
lods
mov
loop
jne
aam
sub
cs
and
pop
call
outsl
dec
and
mov
fstpt
stos
dec
addb
mov
xor
mov
shr
fidivs
and
aaa
lock
and
push
dec
pop
sub
call
jle
mov
call
push
sub
fwait
jnp
mov
xchg
add
add
sub
add
cmpsb
add
cmpsb
jnp
sub
enter
push
popa
out
pop
loop
inc
cltd
in
inc
pop
loopne
mov
xchg
dec
cmc
and
mov
xchg
pop
ja
and
xchg
adc
xchg
loop
push
sti
jg
jno
cmp
enter
cmp
adc
clc
hlt
aad
aaa
pusha
add
aad
outsb
mov
pop
push
filds
vmovupd
addb
mov
xchg
insl
inc
or
add
or
inc
pop
lea
fistl
push
loop
or
dec
push
pushf
rorl
loop
xor
add
jecxz
iret
push
daa
inc
sub
fmuls
adc
push
mov
and
xchg
xor
shrl
outsb
sahf
arpl
hlt
ss
je
ja
push
bnd
fmuls
push
xchg
imul
ds
xchg
fcoms
mov
cmpsb
xorb
jns
inc
addb
inc
push
sub
mov
sub
int
xchg
cmp
cwtl
out
mov
lods
cmp
jle
popf
ds
mov
outsl
sahf
sub
mov
xchg
test
xorb
xchg
lock
add
popa
jle
jne
sbb
stos
sbb
xor
dec
call
inc
sarb
loopne
fwait
mov
jne
dec
js
arpl
js
pop
sbb
lret
xor
les
cs
cltd
jp
dec
xor
xor
sbb
pusha
rorb
or
add
das
jmp
adc
jg
pusha
hlt
mov
lcall
pop
sub
and
push
jo
jnp
xchg
pop
xor
inc
into
xlat
movsl
xchg
or
or
or
dec
loope
xor
sub
cld
pop
push
cmp
adc
and
stos
pop
test
mov
xor
jnp
loope
imul
mov
clc
stos
pusha
in
inc
cmc
xor
scas
daa
cmc
push
loop
jns
popa
adcl
outsb
pop
das
es
popl
sub
cltd
loope
fwait
in
ja
movsl
push
loope
jno
sub
in
mov
jge
faddl
enter
ret
shrl
push
mov
fisubs
mov
adc
and
sbb
repnz
dec
lcall
xlat
testb
lret
popa
out
cmp
aam
pop
pop
rclb
xor
xor
iret
daa
mov
lea
stos
ja
jo
mov
and
or
xchg
jne
lcall
repnz
mov
adc
dec
daa
movsb
push
pop
movsl
arpl
arpl
or
jae
movb
fucomip
ljmp
xchg
movsl
mov
adc
add
scas
cmpsl
jbe
cmp
xchg
add
ret
int
inc
call
jbe
push
jbe
stos
repz
int
inc
sub
fadd
lcall
xchg
cld
xor
test
push
outsb
scas
jns
push
and
cmpsb
inc
adc
jbe
pop
jmp
sub
mov
mov
jbe
pop
xchg
xor
jo
loop
lcall
lds
sbb
ds
dec
sub
adcl
aaa
jp
dec
outsb
sbb
test
ret
push
lahf
test
dec
mov
xor
and
sub
mov
cmc
xchg
aam
mov
jge
inc
pop
sbb
or
dec
cmp
push
or
xchg
mov
popf
js
insl
lods
in
mov
fnstsw
bound
sbb
daa
pop
loopne
mov
and
data16
popa
xor
scas
mov
add
iret
or
testl
xchg
in
xchg
pop
jo
cwtl
mov
and
imul
or
arpl
push
cmp
cmp
test
xor
and
lea
lea
rclb
icebp
xor
loope
push
push
icebp
cmpsl
shrl
push
xor
dec
dec
fsubrl
insl
add
adc
int
adc
or
idivl
nop
dec
popa
inc
nop
jnp
inc
cmp
pop
cmp
xchg
cmp
push
insb
stos
or
dec
fisubrs
or
je
popa
outsb
jecxz
fs
jae
sub
mov
cmp
hlt
out
enter
test
fs
xchg
push
fnstcw
push
fisubs
mov
push
pop
neg
push
mov
fbld
jo
inc
loopne
sub
test
jo
push
es
or
jo
or
xor
in
fwait
nop
popa
add
jmp
and
xor
jb
pop
scas
in
hlt
pushf
out
divl
lods
sbb
xorl
jae
aaa
ljmp
cmp
push
icebp
orb
mov
sbb
add
push
adcb
je
mov
fdivl
fisubrs
pop
imul
mov
andl
scas
sub
icebp
push
push
repnz
jl
adc
loop
lret
aas
ljmp
push
mov
lock
into
lock
leave
mov
enter
cmp
push
mov
inc
sarb
stos
lods
and
pop
ret
dec
icebp
movl
mov
stos
mov
mov
xor
out
das
sub
mul
mov
lar
test
add
jbe
aam
jl
inc
hlt
jbe
in
pop
movsl
xor
adc
pop
jne
cmc
jns
jbe
clc
incl
test
adc
loop
loop
add
daa
push
addb
or
notb
jo
in
int
mov
rcl
std
repz
aas
jbe
scas
xor
jle
mov
sarl
or
mov
mov
sub
push
cmp
scas
cmp
ret
int3
mov
jo
push
icebp
add
or
loope
inc
stos
pop
into
les
xor
hlt
push
inc
std
out
test
add
imul
mov
inc
jno
daa
mov
ljmp
adc
sbb
push
sbb
dec
jbe
cwtl
rclb
js
dec
add
stc
pop
js
scas
jg
je
push
leave
in
mov
clc
mov
xor
lret
pusha
popf
inc
push
cmpsl
xor
fldl
add
mov
jg
add
adc
jo
dec
js
mov
xorl
cmpsl
xchg
insl
pop
js
repnz
push
or
popf
loop
add
or
lock
stos
inc
test
mov
iret
pop
mov
jbe
jno
popa
cmp
scas
inc
mov
scas
cmp
pop
imul
cltd
mov
in
jecxz
dec
scas
adc
stc
jle
rcl
xchg
int3
insl
imulb
cmpsb
aaa
jecxz
ljmp
in
push
cwtl
add
inc
jl
orl
rcl
xchg
fildll
adcl
shrb
ja
add
int
sub
mov
aam
pop
bnd
and
pop
sahf
clc
sbb
lahf
orb
fistl
mov
es
movsl
push
je
add
sarl
clc
push
cs
xchg
sub
outsl
add
sbb
mov
sbb
push
test
push
ds
outsl
dec
dec
inc
pop
je
pop
lahf
mov
insl
icebp
sub
mov
mov
loop
or
xor
aas
inc
jmp
sbb
mov
iret
mov
ss
loopne
test
stc
push
into
in
sbb
pop
mov
jge
sub
cmpxchg
push
push
inc
and
mov
add
dec
sbb
je
or
fs
add
aam
in
jns
pop
rcl
pusha
adc
push
sbb
in
sub
mov
ljmp
cwtl
ret
mov
shl
push
icebp
cmp
lods
cmp
mov
jp
xor
in
sbb
sub
test
pop
sbb
fmuls
sbb
xchg
lods
ret
mov
jae
pop
mov
movsl
fdivs
sti
pop
cwtl
neg
push
imul
adc
das
mov
pop
gs
out
loope
iret
mov
lods
cmp
stos
loope
mov
loope
add
fs
cmp
jge
inc
lcall
cmp
push
out
xor
push
sub
adc
xchg
ds
jae
outsl
mov
lcall
xchg
pop
jge
mov
ljmp
cmp
hlt
lods
sbb
test
fdivrl
int
adcb
pop
test
add
push
in
andb
sbb
pop
cltd
push
pop
add
push
sbb
repnz
mov
xchg
inc
scas
and
testl
pop
inc
pop
fisttps
mov
es
push
mov
lea
jno
sarl
daa
sub
mov
adc
mov
pop
movb
mov
pop
mov
mov
mov
pop
adc
aam
bound
lahf
add
mov
adc
jns
mov
pop
arpl
cmpsb
imulb
inc
lods
sbb
ficoms
push
push
sub
sbb
fidivrs
call
loop
ja
or
inc
inc
in
jo
fldcw
pop
inc
sbb
mov
push
imul
xor
arpl
or
push
push
lods
mov
or
cmp
hlt
hlt
xorl
mov
mov
loope
mov
sub
sub
inc
push
pop
enter
pop
in
dec
into
mov
mov
mov
je
sahf
mov
lret
mov
stos
inc
nop
inc
sub
mov
mov
popf
and
jecxz
in
dec
xor
lods
dec
data16
imull
mov
clc
fdivrs
and
mov
ljmp
pop
fists
mov
jg
xchg
mov
xor
popf
out
lods
pop
pop
add
or
rcrl
mov
out
hlt
pop
sbb
cmp
test
stos
jecxz
movsl
and
adc
xor
xchg
jnp
out
pop
out
aad
pop
arpl
xchg
in
inc
add
add
xchg
arpl
dec
or
dec
int3
and
testl
movsb
or
jo
orps
fisttps
mov
sub
push
imul
jmp
push
jno
daa
hlt
ftst
cmp
pop
xchg
add
pop
pop
rcrb
adc
ljmp
add
inc
jle
jae
push
stos
fiadds
inc
iret
pop
mov
cli
pop
ja
or
loope
js
lea
inc
push
es
cwtl
pop
mov
popf
pop
stos
out
pop
inc
mov
dec
ja
or
xchg
dec
test
ss
popa
cmp
jae
ljmp
fs
or
jbe
sbb
cltd
insb
and
repnz
push
push
sub
int
out
enter
mov
sti
fsubl
add
arpl
mov
ds
add
dec
clc
stos
pop
pushl
push
out
xor
insb
cmp
pop
out
sti
and
or
cmpsb
jne
ljmp
in
sbb
sahf
pop
cld
js
push
test
imul
clc
ret
pop
jo
loope
lret
jmp
jae
insl
lret
mov
out
xor
jb
dec
shll
test
pop
mov
in
xor
and
or
ficompl
aaa
leave
push
das
adc
nop
or
pusha
inc
cmp
or
dec
push
aas
aad
mov
add
push
mov
repnz
cmp
push
lret
roll
adc
bound
push
testl
repz
cwtl
enter
frstor
das
imul
fldt
jg
fidivl
int3
ds
xorl
sub
aam
jae
inc
or
push
jnp
mov
sti
sub
test
sarl
cs
imul
stos
icebp
mov
push
push
sub
pushf
out
mov
pop
fldt
inc
push
hlt
adc
push
movl
xchg
cmpsb
fisubs
aad
pushf
lea
movsl
jl
sbb
pop
stos
std
popf
mov
imul
addl
adc
xor
nop
scas
out
pushl
and
fbld
and
xchg
sbb
mov
xchg
sub
aas
jne
dec
sub
mov
add
jmp
dec
mov
loop
call
cmp
xor
mov
xchg
adcb
xchg
out
pop
dec
inc
mov
pop
insl
test
test
lahf
jg
jbe
mov
jp
xchg
enter
adc
hlt
cmp
sub
xor
xchg
mov
cmc
rcl
out
sbb
enter
movsb
stos
insl
dec
stos
adc
fdivs
inc
jl
and
xchg
in
sub
dec
and
pushf
insl
adc
movsl
xchg
shl
out
push
pop
dec
ss
xlat
adcb
int3
mov
mulb
cmp
decb
xor
cmp
push
jle
mov
sub
mov
repnz
sbb
cmp
ror
pop
mov
push
out
dec
jbe
int
push
nop
mov
flds
mov
add
lret
repz
sub
jp
cmp
xchg
xor
insl
or
cmc
mov
xchg
xor
leave
add
andb
loope
cmp
jmp
ja
scas
sub
mov
sbb
repnz
xchg
in
pop
pop
aas
dec
iret
or
test
pop
cmpsl
cmpl
addr16
call
dec
aad
add
dec
fisubrl
rorb
or
fcmovb
es
mov
into
mov
js
push
loopne
cmp
inc
dec
dec
dec
imul
pop
sbb
xchg
icebp
sub
push
dec
sahf
mov
mov
jmp
cmp
mov
popa
popf
gs
aam
pop
add
xorb
sub
call
out
jg
cmp
mov
int
movsl
mov
cmp
cmp
sbb
lds
jge
adc
jnp
sub
or
popa
adc
fwait
xchg
mov
mov
jmp
dec
inc
inc
or
jae
sbb
jne
in
cmc
or
lea
cmp
inc
clc
jl
dec
xor
sbb
jnp
dec
push
push
hlt
mov
arpl
jno
pop
repnz
push
popl
mov
insl
cmp
push
cs
popa
arpl
mov
rolb
jp
dec
jbe
loope
mov
outsl
xchg
fistl
xor
mov
mov
jns
mov
pop
inc
jno
sbb
jmp
loop
sub
in
mov
push
or
dec
sub
lret
and
mov
mov
adcb
fdivrs
mov
xchg
data16
add
orl
imul
loop
les
imul
and
push
xchg
out
mov
js
jmp
aas
test
insb
leave
ja
adc
cs
xor
xchg
imul
popa
jecxz
shll
cltd
xchg
mov
lcall
aas
out
outsb
lahf
jg
adc
dec
or
cmp
out
sub
shl
inc
jne
adc
cmp
push
js
mov
lods
out
lcall
or
pop
mov
aad
add
jecxz
cld
pop
mov
cmp
call
push
jecxz
push
xor
mov
popf
adc
dec
mov
sbb
sbb
cmpsl
jle
pop
cmp
stos
movsl
and
pop
adc
addb
jns
and
inc
fstp
stos
ret
lods
add
lods
rcll
cmp
cmp
sub
push
xchg
aad
dec
in
inc
pop
loopne
aaa
adc
hlt
xchg
pusha
pop
lock
push
jo
pop
fst
mov
xchg
push
and
inc
in
or
add
inc
pop
push
stos
mov
xor
pop
lret
int3
mov
cld
dec
aad
ja
mov
aad
std
sbb
mov
cmp
dec
cltd
cs
stc
mov
jmp
xor
pop
mov
xorl
subb
rcrl
xor
ss
cli
aam
and
cmp
or
jmp
int
sub
push
add
mov
fadd
inc
popw
insb
fnsave
jle
mov
fs
ljmp
rol
mov
mov
push
mov
add
aam
pop
fst
jno
dec
jb
sbb
repz
mov
sub
ljmp
shl
mov
icebp
cmp
inc
fmuls
mov
data16
cmp
out
mov
push
nop
push
aad
pop
leave
inc
bound
add
push
fnsave
inc
stos
ja
sub
dec
loop
sbb
and
push
and
inc
inc
xchg
mov
inc
sbb
lret
xor
out
or
in
lods
cltd
stc
stos
test
and
jle
cwtl
andl
frstor
inc
push
mov
pop
xor
xlat
call
and
mov
jle
mov
test
mov
mov
sbb
imul
jle
jg
int3
xor
xchg
xchg
in
pushf
out
loope
xchg
push
jle
int3
cmp
je
loop
push
and
cmp
ret
lahf
jae
jne
data16
cmp
inc
push
mov
stos
repz
outsl
fucomp
adc
mov
out
xor
cs
lock
loope
mov
fimuls
mov
sub
xchg
dec
sub
or
sbb
jae
dec
int
sub
and
scas
fwait
into
jecxz
imul
inc
cmp
shrl
test
stos
int
lahf
ja
xchg
shll
adcb
fdiv
jecxz
lock
out
pop
cmp
arpl
jnp
pop
outsb
jo
dec
adc
pop
mov
mov
lock
movsl
xchg
push
xor
popf
jne
subl
dec
test
dec
push
xor
mov
xchg
bnd
imul
gs
in
push
pop
push
push
xor
lods
in
cmp
cmc
dec
mov
shlb
inc
or
inc
sarb
insb
fdivs
out
sub
dec
dec
in
shlb
inc
je
outsl
std
dec
hlt
xor
les
out
pop
cli
push
and
ret
ja
stc
push
out
dec
mov
xor
int
xchg
push
in
dec
pop
out
lret
jecxz
loop
dec
js
fstpl
ret
iret
jbe
xchg
cmp
in
scas
sbb
push
stc
in
in
js
ja
faddl
loop
mov
jl
cmp
mov
out
jno
in
icebp
pop
dec
mov
jb
dec
lods
insl
js
cmp
orb
mov
mov
pop
mov
inc
mov
push
push
lods
pop
movsb
outsb
xchg
or
dec
andb
lahf
sub
outsb
test
pop
jae
popa
mov
push
lea
cwtl
xor
inc
add
ror
ds
int3
and
lcall
out
cmp
hlt
push
fwait
out
mov
in
gs
orl
xchg
and
or
push
int
dec
cmpsb
push
shrb
adc
popf
aas
mov
jno
cmpsl
jg
out
jmp
repnz
or
int3
negb
push
sub
inc
push
inc
ss
xor
loopne
gs
jb
dec
sbb
ficoms
pop
adc
orl
xor
jmp
mov
dec
push
cltd
cmp
push
dec
in
mov
aas
cmp
inc
and
pop
stos
jno
insl
sub
lea
jns
inc
lahf
inc
fldt
lock
xorl
xchg
jle
cmp
bound
sbb
xor
pop
test
cmp
jns
xor
push
in
inc
movsb
mov
dec
imul
xor
addr16
lds
std
push
jno
pushf
popa
sub
sarl
repnz
test
dec
std
ret
xor
sbb
pushf
daa
sub
mov
ret
dec
xor
arpl
adc
xlat
inc
mov
and
cli
adc
inc
movsl
jmp
daa
add
pop
and
addr16
mov
mov
or
inc
fmull
aas
xchg
add
scas
mov
pop
fists
sti
pop
lahf
in
scas
sbb
pop
and
pop
mov
sub
mov
mov
inc
cwtl
into
jns
or
adc
inc
xorb
call
popl
movsb
lods
push
sahf
xor
dec
mov
imul
mov
jb
sbb
dec
cmpl
adc
dec
cltd
adc
or
inc
mov
das
dec
mov
push
sub
mov
xlat
aaa
adc
in
or
jne
sar
jecxz
sub
xor
lret
imul
stos
push
cld
sub
xchg
and
daa
ret
test
ja
lret
dec
stos
movsb
sbb
or
jle
movsl
cmp
xchg
ret
jb
cmp
mov
sub
in
jg
jno
repnz
push
call
ss
hlt
imul
sti
in
fsubl
jbe
cwtl
test
mov
in
popf
pop
pop
cmp
dec
sbb
fisttpll
out
loope
test
loope
or
xchg
mov
cltd
pop
insb
cmp
or
lods
sarl
sbb
inc
in
cmpsl
fdivrp
repz
adc
fstpl
outsb
xchg
xchg
dec
jl
lahf
and
push
adc
into
loope
inc
xchg
fistl
scas
mov
xor
and
sbb
mov
imul
push
push
xlat
mov
push
hlt
sbb
xlat
in
insb
popf
xor
add
or
jnp
fnsave
xchg
imul
loop
inc
lcall
inc
stc
fistpll
xchg
fisttps
ret
jle
and
adc
fmul
int3
sahf
adcl
stos
cmpsb
jp
inc
or
aaa
xchg
mulb
xor
ja
cmpsl
or
jno
in
add
cs
ret
and
test
push
push
sub
add
sub
fists
jge
sub
imul
into
stos
scas
pop
xlat
mov
mov
imul
stos
inc
mov
imul
jle
data16
ss
test
push
and
sti
dec
ds
ljmp
xchg
mov
jne
xor
stos
icebp
or
mov
xchg
insb
add
push
popf
add
pop
cmp
fisttps
or
mov
cmp
stos
inc
mov
inc
cwtl
mov
mov
push
sbb
sub
cli
js
cld
lret
jo
mov
shll
mov
sbb
xchg
xchg
outsb
sbb
sub
lods
aas
inc
add
sub
or
lret
in
out
test
sbb
in
adc
out
sbb
sbb
xchg
cmpsb
gs
cmc
cmp
bound
cwtl
data16
mov
xchg
add
data16
push
nop
or
mov
dec
xchg
adc
cli
xchg
daa
mul
push
mov
and
pop
ss
lods
mov
std
das
test
loope
xor
jecxz
test
loop
jmp
repz
sub
fstpl
dec
js
inc
ffree
jecxz
xchg
mov
daa
xorb
loop
daa
jge
jae
mov
ljmp
and
cmp
mov
subb
stos
adc
jp
dec
cwtl
bsf
jmp
push
mov
push
clc
js
adc
adc
jnp
in
mov
and
andb
pushf
and
repz
lods
inc
repz
jae
mov
sar
lock
aaa
add
mov
jg
mov
dec
sarb
scas
lods
ljmp
cmp
and
sub
xchg
paddsb
add
daa
stos
shr
fcmovnu
sub
or
cmpsb
jp
inc
out
andb
cmp
outsl
mov
mov
roll
loop
mov
arpl
ja
push
and
jo
push
mov
jo
cmp
mov
cmp
decb
or
xor
outsb
fwait
mov
jns
es
data16
aas
dec
xchg
xchg
push
dec
cmp
mov
sarw
xor
incl
inc
jne
dec
ret
jecxz
dec
dec
jbe
in
imul
mov
and
jo
pop
es
xchg
fldcw
orl
cmpsb
cmpsb
lock
lret
data16
negl
fwait
or
dec
jmp
outsb
ss
sbb
outsb
push
and
mov
in
loope
insb
add
jle
pop
mov
cmp
mov
push
inc
test
gs
lock
cmp
stos
mov
cmp
outsb
cs
out
insb
loop
xchg
inc
subb
jmp
ret
sbb
pop
aam
lods
fnstsw
imul
or
fisubrl
inc
pop
pop
out
mov
mov
fimull
jo
popa
stos
pop
in
lcall
jecxz
stos
jo
jp
jne
jae
mov
mov
mov
in
mov
lods
cmp
test
cs
loopne
mov
pop
mov
lret
pop
shlb
scas
aad
mov
jg
std
in
fwait
mov
sbb
in
sbb
mov
mov
fsubrp
cmp
dec
lods
popl
push
add
addl
imul
sub
mov
jno
and
mov
sub
insl
in
aam
inc
adc
xlat
mov
sahf
xchg
add
cmp
push
mov
mov
cmp
jg
test
pop
test
mov
lahf
push
js
adc
out
cmpsb
scas
idivb
out
daa
cmp
dec
aam
pop
mov
cli
sub
push
add
popf
push
jns
shrb
pop
aaa
lea
pusha
add
aas
dec
out
cs
inc
in
mov
out
filds
ja
scas
fs
cmp
data16
inc
mov
push
nop
xchg
aam
mov
pop
ljmp
call
add
imul
inc
rorl
repz
mov
lock
negw
sbb
jne
and
out
xor
dec
xchg
in
ja
mov
popf
movsb
fiaddl
lcall
add
jae
sbb
push
jb
jge
sbb
in
push
iret
cmp
mov
insl
and
fimull
push
lahf
les
jnp
fimuls
push
call
insl
cmp
in
pop
movsb
into
fcomps
jmp
dec
out
and
lock
frstor
xor
loopne
cmp
pop
mov
out
adc
je
stos
ljmp
in
lret
stos
adc
sub
or
addr16
jg
xor
dec
incl
push
and
pusha
and
mov
loopne
push
lret
jns
jle
hlt
lods
mov
ljmp
lock
fisubl
jle
mov
push
les
cltd
mov
in
stos
fisttps
fcoml
xchg
inc
mov
lret
mov
jmp
lahf
adc
jmp
repz
xchg
aas
lahf
into
dec
cltd
pop
or
mov
lods
adc
lods
mov
pop
fistpll
sbb
mov
mov
mov
xlat
mov
lods
mov
pop
cs
or
push
inc
sub
imul
test
rorb
jge
add
xor
or
push
test
int
xchg
sarl
in
lret
inc
fisubrs
xchg
mov
sbb
cmp
dec
insl
mov
mov
fldcw
out
lods
mov
sbb
fdivrl
nop
fimuls
fsubrs
dec
mulb
scas
mov
insl
sbb
sub
add
jnp
data16
in
and
ds
ret
jl
mov
enter
fsubrp
and
jae
mov
call
popa
negb
lods
sub
or
cmpsb
pop
int
or
iret
and
sbb
mov
adc
imul
or
lret
cmc
push
lods
xor
dec
push
insl
popf
shl
into
addb
jp
push
mov
xlat
or
jg
jo
ret
or
add
js,pn
cwtl
sub
loope
sbb
lods
dec
jp
sub
lcall
mov
push
nop
repz
mov
pop
ljmp
jnp
in
pusha
jb
add
push
in
adc
jl
ss
mov
xchg
fwait
mov
test
iret
sbb
jecxz
gs
xchg
ja
xlat
mov
cmp
jbe
mov
jle
icebp
mov
lods
in
lret
jbe
xchg
clc
mov
aam
dec
mov
jecxz
rol
lahf
clc
subb
movsl
mov
jae
fadds
mov
cld
fistpll
outsb
cmp
fcoml
addl
xor
pop
xchg
out
mov
les
mov
data16
lods
mov
lret
sbb
dec
shlb
xchg
popa
imul
sub
ljmp
mov
sbb
cld
mov
pop
dec
mov
fdivrs
jno
in
int
rep
push
jnp
and
cmp
push
out
imul
data16
fimuls
clc
addr16
loopne
das
lock
push
sub
push
imul
push
inc
cmp
push
and
sub
in
cmp
inc
sbb
les
cmp
insb
mov
lahf
sub
sbb
jnp
xchg
cmp
loopne
js
lods
fwait
and
je
insb
and
mov
xor
insb
jp
inc
cli
lds
cli
mov
leave
in
insb
adc
shr
xchg
sahf
mov
out
mov
mov
add
fs
push
dec
mov
add
mov
stc
and
sahf
xlat
dec
xchg
jecxz
je
test
inc
stos
in
xchg
xchg
int
lahf
sub
push
insb
lahf
jb
add
out
pop
push
and
inc
daa
mov
and
xor
push
mov
push
jnp
dec
cmp
rcrb
mov
xchg
xor
into
sub
imulb
addr16
hlt
fidivl
sub
pop
xchg
lea
dec
sbb
lret
imull
jo
inc
stos
sarl
or
pusha
in
jmp
test
jg
fisttpll
mov
daa
or
mov
or
jmp
repnz
sub
in
inc
push
inc
mov
inc
lods
xchg
mov
fstps
pop
lock
lret
or
das
in
inc
jnp
out
sbb
outsl
add
cld
xor
add
pop
fisttps
add
inc
cwtl
mov
aaa
movsb
ss
dec
jo
jo
outsl
stos
imul
adcl
and
push
fcmove
xchg
mov
int3
pop
or
pusha
and
pusha
or
xchg
xchg
push
ds
push
aad
repnz
fcompl
dec
lock
test
lds
fnstenv
cltd
in
loop
inc
fsubl
ret
js
sbb
and
mov
mov
inc
xchg
pop
lret
repnz
push
cmpsb
sbbb
mov
jg
jmp
lods
mov
pop
dec
jae
inc
mov
and
xchg
aad
jmp
lea
ficomps
loope
adc
and
into
lods
adc
inc
scas
dec
ds
mov
add
sub
jbe
pop
mov
add
xlat
icebp
shll
mov
mov
push
inc
pmaxub
add
nop
dec
push
mov
jge
lret
fists
jne
or
rorb
pop
mov
movsb
xchg
push
sbb
xchg
es
repnz
ss
jle
rcrb
cmpsl
xchg
leave
cwtl
xlat
mov
xor
lahf
out
xchg
icebp
stc
pop
sub
inc
add
or
and
adc
icebp
out
scas
push
and
mov
lret
dec
jg
jmp
jmp
jae
fsubr
or
pushf
cmp
fnstenv
fisttpl
xor
or
sti
xor
or
inc
data16
jo
repz
mov
repnz
inc
mov
xchg
jb
jmp
jmp
jae
fdivl
adc
xchg
fbld
sub
or
push
or
in
repnz
jnp
cld
popf
cmc
or
insl
fdivrs
lds
push
int
lea
aam
or
xchg
jns
fs
mov
shl
sbb
dec
clc
xor
subl
lods
inc
lret
data16
jbe
push
or
mov
clc
jecxz
dec
es
daa
xchg
cmc
cmp
bound
add
jns
dec
jnp
xchg
push
jp
stos
lret
ds
sbb
cwtl
loopne
lret
push
pop
ficoms
fdivr
adc
or
mov
loope
mov
jb
sub
in
adc
mov
pusha
out
insb
cs
loop
jns
push
cmp
in
scas
cld
rep
push
dec
inc
lods
mov
xor
or
mulb
sbb
std
fs
dec
push
adc
sahf
insb
movsl
mov
and
in
xchg
mov
popf
in
pushf
fdivrl
mov
call
pop
inc
lcall
jns
icebp
dec
pushf
lods
mov
mov
sahf
fidivs
inc
fldcw
rorb
mov
mov
divb
test
popf
sarl
and
mov
lret
sub
xor
xor
lret
mov
jnp
mov
mov
add
lds
xor
adc
test
push
cmp
cmpsl
sub
mov
sti
cmpsl
jg
mov
mov
addl
pop
mov
xchg
fwait
insb
lcall
js
push
insb
pop
lods
mov
es
mulb
or
jg
or
xchg
test
idivb
nop
in
inc
jne
fcmovbe
insl
bound
xor
mov
jnp
sub
mov
push
in
pop
xor
add
or
xor
js
in
hlt
sbb
pop
lds
push
mov
dec
popa
out
or
or
cld
das
mov
cmp
out
xor
aas
jno
push
inc
lods
sbb
scas
xchg
ja
or
cmp
imul
jle
cld
ds
push
aam
mov
gs
outsl
ret
jns
lock
cmp
imul
sti
int3
push
push
adc
mov
mov
arpl
aaa
pop
push
movsl
mov
mov
add
mov
test
sahf
mov
push
insb
scas
repnz
push
xchg
js
sbb
cmp
dec
mov
mov
test
lret
push
stc
loop
rclb
add
xor
imull
or
push
push
pop
push
cmp
lahf
lods
fdivrl
xor
pop
mov
js
fildll
mov
cmpsb
stc
xchg
pop
ss
mov
jle
nop
jno
mov
mov
ja
cmp
lds
ret
dec
jge
pop
daa
mov
test
mov
jno
mov
jp
adc
push
movsl
cmp
xor
std
mov
outsb
sub
mov
inc
pop
push
add
or
in
push
add
jno
adc
xchg
insl
in
int
jae
sbb
lahf
inc
outsb
add
es
pop
lods
add
or
adc
mov
fisubrs
jge
jecxz
add
push
lods
fistpll
inc
notb
dec
mov
xchg
push
insb
jg
xchg
fwait
dec
or
jbe
sbb
subb
xchg
fistpl
pop
jb
jle
loop
out
shlb
add
in
arpl
mov
mov
mov
popf
xor
mov
imul
or
fadds
adc
pop
dec
notl
pop
dec
and
push
inc
mov
push
fsub
xor
loope
fisttpl
jo
jmp
pop
hlt
push
fmul
pusha
lds
pop
aaa
xchg
pop
mov
aam
pushf
mov
and
sbb
dec
lret
int
add
scas
jecxz
dec
ret
fsubrl
mov
out
ss
adc
jmp
xchg
lret
daa
test
pop
xchg
out
cmpl
xor
xchg
arpl
mov
adc
ja
jnp
or
aas
and
ficomps
inc
fldcw
fwait
dec
cwtl
xchg
mov
cmpsb
bound
mov
sbb
test
mov
hlt
test
clc
jp
xchg
fidivs
imul
or
cmpsb
lock
addr16
mov
in
mov
mov
fsubrp
add
jne
adc
push
mov
outsb
iret
imul
xchg
fisttpll
cmp
dec
mov
cmp
inc
mov
inc
jno
xor
jne
int
cmpsb
data16
sub
hlt
scas
xchg
scas
or
lods
xchg
scas
xor
ss
or
xchg
push
cmp
icebp
dec
movsb
fsubrl
push
fidivs
mov
lods
mov
in
xchg
js
jnp
test
scas
or
jb
jns
sbb
xchg
push
mov
inc
xchg
mov
addr16
inc
pop
pop
jle
imul
iret
enter
neg
les
jo
mov
mov
adc
jnp
test
push
or
inc
imul
aad
cmp
aad
aas
sub
daa
scas
cmp
xchg
cmp
call
mov
lcall
je
popf
in
mov
jle
mov
outsb
cmp
fisubrl
cwtl
pushf
rcll
push
mov
fidivl
jmp
mov
jp
cmp
fldcw
imul
out
xchg
mov
mov
mov
inc
sahf
sbbb
leave
loopne
cmp
fisubrs
imul
imul
lods
xor
mov
cwtl
lods
mov
sub
jns
adc
lret
ss
aas
cmp
cld
or
jmp
push
push
cmp
ss
movsl
mov
jo
mov
push
in
lods
sbb
push
out
or
lret
cmpsl
push
dec
ret
lahf
push
push
mov
push
add
imulb
inc
or
cmp
mov
ljmp
and
cmp
outsb
ret
mov
jae
cmp
dec
mov
inc
imul
mov
cmp
jp
push
imul
mov
sahf
fists
in
xor
pop
in
scas
xor
lods
cld
or
dec
adc
add
pop
orl
cmp
mov
subl
lock
mov
jo
pushf
dec
lods
lahf
push
push
mov
test
je
adc
dec
lods
sbb
push
lret
ficoml
hlt
lahf
pop
push
inc
test
xor
or
jmp
jp
xor
push
xlat
or
daa
sti
aas
sub
fimuls
int3
imul
or
mov
lods
rorb
sbb
push
lret
rcll
adc
jmp
mov
jae
adc
outsb
or
cmpsl
xchg
ficoms
push
popf
add
cwtl
mov
je
or
push
xor
loop
mov
aam
in
or
xchg
andb
ja
xlat
mov
sbb
mov
lods
lods
mov
ljmp
mov
pop
fldcw
cltd
mov
hlt
xchg
int
push
xlat
or
daa
sti
aas
fwait
ljmp
push
popa
movsb
mov
pop
push
cmpsl
adc
dec
test
lcall
and
xchg
inc
lcall
dec
xchg
test
xchg
xchg
xchg
bound
out
lods
pushf
int
cmp
lock
push
sub
jmp
or
jmp
test
or
imul
mov
shl
or
mov
out
or
dec
dec
rcrb
lock
jnp
and
bound
adc
dec
mov
dec
cltd
sbb
repnz
xor
jmp
decb
mov
sbb
std
loopne
out
fldcw
cmp
mov
and
out
fcmovne
pop
sahf
adc
sub
jg
mov
das
mov
test
insl
and
stos
sbb
dec
jmp
out
out
xchg
jb
adc
hlt
lods
sahf
add
imul
js
xor
push
jno
rcl
xchg
push
lahf
lret
adcl
lock
jmp
jmp
sub
or
data16
dec
lret
cmp
jo
jb
lods
lahf
sub
and
mov
mov
sub
movsl
int3
iret
lock
jecxz
mov
jnp
or
lods
mov
data16
jb
jecxz
mov
xor
push
mov
or
lds
stos
xchg
insl
int
daa
mov
inc
dec
scas
xor
lret
jg
xor
or
inc
subw
in
insb
jne
adc
and
hlt
ss
ret
imul
lock
sbb
ljmp
imul
xchg
nop
mov
lods
jg
dec
cmp
cmp
lock
cmpb
mov
inc
jge
lret
or
add
xchg
sbb
cltd
mov
mov
mov
mov
xchg
stos
ret
pop
mov
xchg
insl
sarl
push
pop
scas
loop
out
popf
or
mov
dec
test
sarb
jecxz
test
cmp
cmp
cmp
mov
pop
fldl
insl
dec
sub
xchg
jecxz
lock
pushf
mov
mov
lret
inc
xchg
mov
clc
xchg
mov
push
and
movsb
mov
int3
lahf
sub
pop
fs
jb
add
pop
sub
popf
or
int3
cmp
iret
xor
pushl
ja
and
scas
ret
inc
scas
mulb
outsl
mov
iret
cmp
push
jl
mov
add
or
and
push
nop
or
xor
pcmpgtb
jp
mov
ss
ret
rcll
jecxz
imul
adcl
in
jl
jno
sub
push
sub
call
and
sub
mov
pop
rcl
or
pushf
in
xchg
sbb
mov
cwtl
stc
mov
cmpsb
jae
jb
adc
call
and
mov
lock
in
push
lock
mov
push
pop
jmp
sub
movsl
mov
pop
into
jecxz
outsb
add
xchg
mov
aaa
hlt
pop
push
ret
jge
mov
cmpsb
insl
lahf
pop
jmp
mov
jl
jb
or
insl
push
loopne
scas
int3
inc
sar
mov
pop
ss
ja
xlat
or
lock
xchg
iret
leave
lcall
mov
pop
fcmovne
aad
mov
pop
cmp
push
jno
jns
jo
rcrb
lods
mov
mov
push
subl
and
jne
pop
dec
cmp
cmp
pusha
cmp
or
push
out
xor
and
insl
inc
aam
sub
movsb
sub
add
jmp
enter
cmpsl
sub
jns
push
add
dec
je
shl
xor
js
jp
js
cmpl
stc
cmp
lret
dec
cmp
lds
sub
mov
popf
in
insb
adc
cs
popf
pop
push
subl
or
addl
xor
arpl
nop
scas
aad
mov
sbb
cmc
in
xor
jge
lret
sti
movsb
xor
in
xchg
insb
jmp
xchg
addr16
sbb
cmp
or
mov
xchg
sbb
adc
imul
push
and
es
scas
jle
pushf
and
cmp
repnz
or
xor
pop
mov
lods
in
and
cmovge
or
jg
mov
pop
cwtl
lea
fwait
and
push
imul
mov
push
mov
ss
xchg
cmpsb
lret
mov
jl
jg
in
mov
test
aaa
ds
dec
xor
into
or
sbb
mov
outsl
fdivl
les
cld
cmp
daa
in
push
pop
addr16
xchg
sub
push
jg
xor
test
movsb
dec
mov
test
xchg
addl
dec
jnp
mov
sahf
in
in
xchg
insl
mov
ja
lods
cmpl
mov
push
push
xchg
addb
ret
lret
movl
sbb
pop
cwtl
or
xchg
out
jl
pop
cmp
xchg
mov
mov
daa
push
ljmp
jl
pushf
mov
pop
pop
sbb
cmpsl
sbb
sub
cmp
stos
sub
dec
mov
leave
and
and
arpl
cmp
mov
cmpsl
movups
aaa
test
imul
mov
fldcw
icebp
sbb
movsl
stc
jae
hlt
inc
cmc
jp
jge
inc
cmp
pop
lcall
jge
mov
shrl
adc
aas
pop
mov
lahf
xchg
xchg
repz
cmp
cmp
int3
loope
mov
fiadds
sbb
scas
inc
sbb
and
mov
lcall
ljmp
jge
xor
lcall
cmpsl
fdivrl
rcr
fcompl
call
xor
stos
lcall
jl
cmc
lea
leave
loopne
inc
sbb
sbb
lods
sbb
scas
lcall
add
addr16
popl
jge
dec
in
fstps
arpl
mov
inc
mov
jg
lcall
fs
insl
jmp
adc
xor
mov
cmp
sub
stos
arpl
lods
mov
cmp
fmul
scas
imul
mov
lcall
or
stos
movsl
cmp
jns
inc
es
outsb
pop
imul
int3
iret
lods
mov
and
fdivrl
jns
aas
pop
xchg
fsubrp
jmp
xchg
scas
fstpt
fmul
test
pop
inc
daa
clc
outsb
add
test
notb
in
fdivrs
cwtl
cmp
mov
repnz
jp
iret
fisubs
xor
shll
fnstenv
push
xchg
dec
xchg
scas
addr16
mov
jp
fdivrl
iret
fimuls
imul
rcr
addl
stos
iret
sbb
adc
dec
notl
or
repnz
arpl
lahf
xchg
mov
xchg
or
shlb
and
rorb
aaa
pop
pusha
pop
mov
ljmp
pop
scas
loope
movsb
pop
pop
xchg
fwait
xor
or
push
xor
sub
push
add
rcr
shlb
push
rorl
or
data16
les
sarb
mov
icebp
insb
mov
sub
shr
bound
xchg
inc
cmp
jno
xor
add
movsb
add
outsb
test
sbb
call
adc
xchg
mov
outsb
push
out
loope
popf
test
lods
push
shrb
fs
scas
push
icebp
push
add
add
jmp
jno
call
ljmp
in
insl
xor
std
xor
jge
xchg
test
add
dec
sahf
add
pop
in
xchg
pushf
aaa
dec
mov
xchg
stos
mov
pop
mov
inc
out
clc
jecxz
ror
outsb
sbb
out
cltd
cltd
dec
shrb
mov
test
adc
stos
push
repnz
in
mov
jo
das
pop
mov
jmp
mov
mov
ljmp
push
mov
and
lock
dec
jmp
mov
bnd
in
push
shl
push
xchg
lret
add
sbb
xorl
out
ds
add
int
iret
jge,pn
push
push
fimull
sbb
inc
stc
cld
sub
jne
adc
out
outsb
mov
cmp
dec
xor
das
push
daa
cmp
jecxz
jmp
push
out
in
imul
pusha
mov
pusha
outsl
cmc
mov
pop
in
push
fcmovb
mov
xchg
mov
mov
cmp
mov
movsl
xchg
push
into
jl
mov
loop
sub
ficompl
xor
pop
scas
and
mov
les
and
js
push
pop
in
push
ja
nop
dec
or
push
aas
sbb
mov
or
movsb
inc
fwait
mov
ss
sub
adc
dec
lock
xlat
sbb
cmpsl
jo
out
imul
outsb
xor
stos
cmpsl
shrl
mov
dec
fbstp
test
out
mov
imul
pop
jns
sub
dec
jmp
insl
mov
xor
cmpsb
pop
loope
xor
xor
out
sub
xchg
test
mov
pop
out
pop
inc
out
jno
xchg
mov
ja
xor
sahf
mov
xlat
gs
sbb
gs
ret
jp
inc
cld
push
push
xorl
ja
mov
gs
and
pop
sbb
jecxz
in
imul
js
shl
clc
sbbl
ss
push
inc
or
int
pop
das
pop
rcrb
lret
jo
adc
cltd
mov
mov
jmp
sbb
in
xchg
aad
int
loope
repz
jae
mov
jo
outsb
jns
aam
pop
mov
xchg
dec
movsb
mov
sbb
andl
bound
addb
lcall
cs
shrl
dec
push
inc
daa
xchg
pop
jae
jg
xor
cmpsl
sbb
mov
sub
bound
cmc
addr16
pop
pop
lcall
dec
int
xor
xchg
fs
or
adc
add
sbb
add
mov
pop
add
in
mov
pop
shr
lret
scas
call
fistps
xchg
in
push
xchg
aad
shrb
test
addr16
jl
in
insl
push
enter
dec
xchg
jp
inc
inc
xchg
cwtl
std
lret
pusha
xchg
pop
inc
fiaddl
inc
cmp
push
inc
cmp
push
xlat
xlat
in
movhps
imull
mov
or
cmpsb
lret
fbstp
in
gs
aad
lret
std
and
out
and
xchg
in
xor
adc
sahf
mov
test
fmuls
test
jns
jmp
xor
sub
out
mov
and
jecxz
jne
pop
add
xor
mov
jb
lcall
pop
push
mov
push
scas
iret
jo
mov
test
loop
fwait
sub
cmp
movsl
gs
cltd
fsubrs
pop
arpl
dec
cmpsb
ja
in
sub
popw
cmpsl
dec
mov
jmp
push
cmpsb
arpl
mov
cmc
aaa
in
add
inc
data16
fsubp
scas
loope
leave
mov
sahf
imul
and
outsl
mov
jp
sahf
mov
mov
lcall
mov
mov
or
jg
pushf
and
in
cmp
sub
pop
popl
or
mov
inc
adc
xchg
ja
adc
inc
ret
pushf
mov
icebp
push
sub
jg
shll
hlt
pop
jnp
and
pop
jle
test
lcall
ror
movsl
jecxz
pop
cmpsb
mov
testl
adc
addl
xor
or
mov
push
jg
fprem
inc
cmc
mov
mov
xor
push
aaa
push
in
fimuls
xchg
pop
adc
add
lret
add
incl
test
and
mov
dec
cmc
je
xor
cmp
dec
cwtl
pop
dec
sub
cmp
int3
mov
insl
jmp
jo
and
jmp
daa
ja
test
and
arpl
push
sub
stos
jge
fnstcw
adcb
mov
sbb
fstps
pop
jbe
int
mov
jmp
dec
fidivrl
cwtl
mov
and
mov
jmp
inc
adc
xor
cmc
bnd
cmc
mov
out
push
mov
out
pop
xchg
adcl
and
stos
sbb
jb
adc
mov
push
in
jno
lods
rcr
andb
lock
inc
jl
cltd
push
mov
sub
sti
push
mov
ss
xor
push
jns
aaa
insb
mov
leave
adc
imul
cmpsb
ja
fdivrs
cwtl
movl
test
pop
add
jno
fstpl
lretw
sub
fldz
leave
testl
imulb
mov
movsl
pop
inc
jg
xchg
testb
repnz
sti
mov
ljmp
xlat
bound
fidivrl
stos
je
push
jo
push
push
and
test
lret
mov
repnz
ror
jecxz
pop
lods
sahf
movsb
in
fucomi
aas
mov
movsb
jp
loope
loop
ja
jl
push
lea
ret
ljmp
cmpsb
mov
popl
mov
cmpsb
push
jp
loope
arpl
in
aad
sub
push
mov
push
in
sub
jle
ja
jne
mov
or
jbe
insl
cmpsb
jmp
inc
int
xchg
inc
push
sbb
mov
fbld
test
inc
mov
das
sbb
scas
xor
stos
mov
fsubrl
xchg
push
outsb
pop
repz
xchg
xchg
rorl
push
mov
out
jl
mov
cmc
or
xor
dec
add
push
push
sbb
sub
ss
scas
xor
test
mov
mov
jp
cmpsb
xor
movsl
inc
sbb
lea
mov
cmp
scas
push
idivb
mov
popf
cltd
mov
je
jns
lcall
lret
xor
xchg
dec
ss
jns
mov
mov
mov
test
and
xchg
insl
jns
adc
loop
fidivs
or
xorb
mov
repz
stc
mov
mul
imul
loop
dec
mov
jge
inc
mov
lock
jge
or
jle
pop
sbb
cmp
sahf
sbb
ss
pop
xlat
out
push
jle
inc
jp
in
mulb
add
nop
pop
sub
pop
andl
scas
xor
mov
fildll
in
jp
push
sbb
pop
into
popa
in
insl
sub
sbb
in
test
pushf
into
in
xchg
dec
jecxz
imul
lret
mov
outsb
pop
test
lahf
movsl
test
andb
or
std
adc
xchg
inc
lea
lock
mov
mov
mov
mov
mov
or
xor
test
cmp
or
in
inc
pop
icebp
jle
pushf
jmp
psllw
roll
pop
mov
sbb
xor
lods
mov
jno
fdivrl
and
call
pop
test
lods
lods
stc
adc
push
lock
inc
inc
add
jle
pushf
mov
data16
ret
pop
xchg
push
imul
jp
or
lret
xchg
mov
xchg
inc
pop
jae
jl
jne
imul
orl
mov
dec
cmpb
dec
shl
icebp
insb
imul
mov
popf
or
inc
mov
outsl
xchg
sbb
jae
in
jb
icebp
sahf
push
pusha
hlt
xchg
mov
adc
andl
cmp
jle
lea
xchg
aaa
lret
in
xchg
cli
mov
or
popf
or
fidivl
and
insl
dec
fsts
lods
inc
fcomps
stos
mov
lahf
push
mov
data16
and
lock
fstl
xor
xor
mov
xor
mov
mov
insl
or
and
jo
pop
lock
sbb
fdivrl
repz
aaa
push
xchg
outsl
in
push
jne
jg
out
icebp
int
mov
jae
and
xchg
imul
mov
push
popf
dec
xor
dec
adc
xchg
inc
insb
jno
mov
push
mov
dec
in
push
jns
cmp
dec
inc
cwtl
test
imul
mov
movsb
ljmp
mov
bound
cmc
xchg
fcoms
xchg
out
adc
mov
mov
dec
cmp
mov
cmp
xchg
scas
cmp
mov
push
push
dec
ss
insl
mov
fiadds
daa
lods
dec
rorl
cmpsb
mov
fwait
xchg
repz
jl
xlat
imul
cmp
hlt
ret
pop
je
shlb
iret
outsl
ss
bound
dec
dec
out
sbb
in
or
jg
lahf
outsb
addb
int
cmp
jb
xor
adc
shlb
lock
ja
popa
add
mov
fstpt
movsl
lcall
adcl
cmpsl
jecxz
ss
push
jae
repnz
push
push
insl
jbe
gs
out
adc
jg
or
xchg
lret
xchg
dec
and
xchg
cmc
lods
or
xor
push
ljmp
loopne
in
repz
add
xchg
push
xor
xchg
cmc
cmc
xor
bound
cmp
insl
cmp
or
inc
xor
sbb
mov
imul
repnz
xchg
in
or
or
mov
repnz
cmp
loope
js
movsl
pop
mov
or
cmpsl
lods
es
or
xor
push
ss
fs
jg
xchg
in
sub
test
jne
dec
sbb
inc
insl
mov
insb
xor
scas
xor
xor
pop
lock
mov
push
in
ja
push
outsl
jp
enter
mov
push
nop
and
insb
in
or
aaa
adcb
jbe
mov
jp
jmp
aaa
lods
pop
and
jge
sub
inc
cli
subb
adc
xchg
in
or
xchg
dec
addr16
adc
inc
inc
imul
xor
arpl
stc
bound
sub
xchg
jg
hlt
repz
test
xor
fidivl
and
jmp
sub
push
fistpll
push
mov
dec
imul
imul
jg
xor
in
lds
push
cld
jae
jo
fistl
call
inc
xchg
pop
sbb
in
ja
or
imul
jg
push
ljmp
mov
lds
addr16
jge
orl
mov
xor
movsb
lret
mov
jbe
movsb
test
popf
in
in
fdivrl
in
fidivrs
xchg
fsubrs
sub
cmpsb
sub
insb
cmp
xor
scas
xor
lods
mov
scas
lock
in
ficoms
xchg
fsubrs
cli
mov
add
outsb
bound
in
gs
pop
cmp
jle
xor
in
inc
ljmp
loop
sbb
or
mov
jg
xor
inc
ljmp
dec
out
decb
lret
mov
lahf
xchg
push
pop
xchg
inc
in
pop
lock
pop
mov
cli
jg
lret
mov
push
cmp
insb
js
shr
mov
out
cmpsb
gs
mov
mov
sub
or
das
or
xor
inc
ljmp
mov
cmp
push
mov
popa
ss
pop
mov
mov
pop
jno
adc
test
mov
mov
jecxz
push
scas
xor
sub
mov
popa
addr16
add
sahf
mov
adc
sub
pop
pop
add
sbb
addl
insb
fldl
xchg
or
data16
mov
mov
loope
lock
cmp
jb
mov
xor
sbbl
jne
inc
push
pop
xchg
mov
cmp
and
pop
in
lock
ds
add
mov
jmp
mov
es
xchg
into
jecxz
outsb
xor
jecxz
in
sbb
sti
xor
mov
jns
clc
fwait
into
ret
dec
pop
add
cs
popf
dec
jle
lods
mov
into
jecxz
outsb
adc
call
xor
fisubs
inc
or
lret
rcll
ja
in
jmp
addr16
adc
inc
loop
add
or
dec
out
dec
int
dec
jo
rclb
mov
repz
and
add
cs
test
movsl
fisubs
insb
sbb
xchg
movsl
gs
ja
gs
mov
not
mov
rcll
mov
xor
sub
ret
mov
or
bound
out
xor
ret
int3
fists
out
and
sub
lock
call
loope
mov
in
insb
sbb
clc
pop
and
mov
mov
subb
and
jne
push
insl
mov
cmp
mov
rsm
add
out
inc
push
test
dec
insb
mov
add
movsl
loop
or
in
rorb
push
push
xchg
js
test
lods
fcoml
xor
xchg
push
mov
cmp
push
or
lret
jg
jmp
call
sub
orl
inc
or
jge
jmp
mov
push
je
xor
popa
cmpsl
cmp
xchg
pushf
shll
inc
xor
mov
outsl
inc
arpl
divb
jo
dec
mov
imul
sti
in
sub
jmp
mov
jb
fistl
inc
aad
mov
pop
mov
imull
mov
ds
push
sbb
jns
lods
jp
lret
les
inc
stos
test
in
outsb
cmpl
sbb
xor
iret
stos
out
cmp
inc
imul
cltd
jg
addr16
xchg
mov
lds
in
sahf
mov
sti
xor
jae
pop
outsl
test
push
jg
and
fs
loop
jbe
nop
push
pop
orl
stos
mov
xlat
in
xor
push
nop
adc
mov
push
fucompp
xor
mov
cmp
jnp
decb
movsl
loop
fdivs
mov
mov
out
push
add
fdivr
mov
leave
mov
ficoms
mov
bound
xchg
jb
push
jecxz
dec
jmp
clc
mov
mov
dec
test
outsl
out
cwtl
cmp
pop
cwtl
inc
mov
push
scas
repz
xor
mov
sub
jo
mov
ds
mov
mov
cmp
sub
aas
fldl
add
lret
lahf
popa
fbld
bound
cmc
dec
in
jmp
in
or
push
jnp
outsb
fcmovbe
aaa
mov
insb
xor
ljmp
nop
les
dec
cmp
xor
cmc
mov
popa
fwait
inc
mov
cmpl
jno
jno
iret
sub
xorl
jns
sub
inc
subl
adc
aam
mov
sbb
mull
mov
xor
stos
bound
xchg
cwtl
sbb
add
add
jo
xor
jne
pushl
dec
jb
push
and
mov
xor
jge
lahf
insl
stos
and
out
imul
xor
xlat
xchg
cld
in
inc
insb
jg
pushf
in
cwtl
test
je
in
xchg
int3
inc
nop
and
popf
loop
shrb
stc
ret
neg
stos
out
cmpsl
test
jae
sbb
cmp
push
xlat
push
push
mov
or
dec
push
cmp
inc
int
jne
dec
scas
imul
and
into
in
and
cmp
xor
cmp
xchg
scas
dec
lock
cli
repz
sub
mov
pop
pop
push
loopne
imulb
pop
push
daa
les
in
lods
je
sbb
mov
adc
push
dec
push
pop
stc
push
xlat
jge
jecxz
pop
lret
in
imul
xor
ret
dec
mov
add
cmp
jp
popa
test
xor
or
cmp
dec
mov
mov
push
mov
mov
xor
daa
mov
xchg
xchg
mov
xlat
push
jmp
jae
fwait
out
cltd
int
int
xchg
test
cmpl
shr
jns
ljmp
xchg
dec
imulb
fimuls
cmp
aam
insl
out
sub
out
lcall
mov
in
imul
loop
dec
insb
and
test
xor
jnp
lahf
sub
cltd
mov
int
xchg
test
cmpl
jbe
jns
outsb
loope
pop
xor
dec
cmc
test
fimuls
cmp
shrl
bound
lods
mov
pop
sub
cld
mov
test
fisttps
lret
in
insl
in
popf
mov
cs
ss
insl
je
xchg
out
jae
fimull
lds
lret
sahf
bound
ror
fwait
jg
xchg
outsb
xchg
pop
cmp
jp
flds
xchg
in
test
sub
clc
fildll
pop
stos
sahf
jns
scas
loop
jne
and
push
sti
dec
and
push
mov
xchg
jnp
jmp
jge
push
scas
jne
je
divl
repnz
lcall
cmp
mov
cmp
cmp
test
pop
pushl
inc
fxch
pop
mov
aas
insb
ljmp
xchg
std
xor
cld
or
lcall
mov
and
push
cmp
and
pushf
sub
pop
push
stc
test
sbb
xor
inc
cmp
scas
scas
movsl
leave
sbb
mov
lods
stc
out
xor
addl
sbbl
add
hlt
jp
mov
vmaxps
fcompl
push
xchg
fcomip
add
lods
test
lret
pop
lods
adc
mov
int3
mov
in
inc
mov
fistpl
cmp
jbe
mov
adc
and
xor
clc
dec
or
push
adc
ds
decl
aaa
insb
jbe
jp
push
cwtl
xor
jge
push
test
das
pop
imul
loopne
jmp
mov
adc
imul
fdivrp
dec
loope
out
jge
pop
push
or
push
adc
jnp
xor
push
enter
cmp
roll
ret
or
jno
adc
leave
dec
arpl
cmpsl
rcrl
or
in
scas
insb
xor
sbb
adc
inc
insb
sub
mov
daa
lods
pop
ret
sbb
pop
mulb
in
adc
inc
insb
subb
mov
pop
mov
pop
and
iret
gs
cltd
lret
int3
cmovbe
jnp
and
pusha
idivb
cmpsb
cmovbe
mul
push
push
aas
jns
movsl
arpl
stos
push
imul
xor
add
add
mov
sbb
xchg
xor
inc
scas
jg
push
push
mov
test
jg
out
shrl
sahf
rorb
jge
dec
push
adc
es
sahf
aad
gs
gs
test
mov
ss
fsubrp
add
push
fisubs
or
jb
xor
adc
mov
js
arpl
sub
push
stos
lock
ljmp
jns
add
call
sub
push
jno
lods
lcall
push
push
jl
or
mov
push
jecxz
pop
ljmp
lds
adc
mov
cmp
inc
add
in
push
aas
push
push
test
mov
dec
push
dec
mov
test
inc
dec
cld
lods
fidivrs
mov
dec
xor
sbb
clc
and
jmp
int3
pop
cmp
cmp
pop
nop
jg
adc
add
cmpb
jb
mov
sbb
call
mov
cmp
adc
or
add
dec
arpl
cs
add
imul
in
push
aas
stc
push
mov
mov
jmp
je
in
and
inc
ret
loope
push
mov
lods
stos
sub
inc
sbb
mov
dec
jae
fisubrs
cmovbe
or
popf
mov
js
sbb
inc
jno
sbb
jmp
dec
mov
mov
arpl
add
jmp
and
inc
fildll
fildll
das
cld
pop
inc
dec
cld
sub
add
push
jnp
lods
jmp
subb
sti
repz
jns
scas
add
and
inc
arpl
icebp
jne
xor
mov
inc
outsb
sub
in
pop
cwtl
jmp
out
int
mov
pop
loop
insl
xor
loope
push
pop
jbe
insl
outsl
lds
jg
leave
adc
adc
shl
sub
inc
inc
mov
or
push
lock
pop
mov
xchg
js
in
shr
in
inc
arpl
xor
jp
inc
dec
hlt
loope
call
mov
jecxz
fs
adc
inc
ja
sub
lods
cwtl
cmpsl
xchg
ds
mov
pop
adc
mull
and
call
inc
mov
loopne
in
fwait
mov
xor
sub
mov
mov
fcmovu
mov
xchg
ret
mov
je
mov
mov
inc
sub
ret
aaa
mov
mov
iret
xchg
nop
ljmp
cli
or
and
or
or
mov
add
xchg
dec
push
xor
mov
push
lock
int
mov
imul
pushf
test
cmp
ljmp
pop
xor
fs
inc
arpl
mov
xor
or
mov
cli
add
mov
mov
clc
aas
cmp
je
popf
push
jno
rcl
fsubrl
xorb
es
mov
js
push
dec
push
jl
inc
inc
arpl
and
addr16
push
xchg
fs
addr16
ss
insb
add
xchg
xor
inc
mov
jae
lret
fidivrl
push
push
mov
dec
mov
xchg
cli
mov
testb
dec
xor
fimuls
push
and
pop
pop
bound
jnp
repz
int3
lret
inc
je
mov
lahf
mov
dec
dec
mov
xchg
or
dec
sahf
inc
pop
jmp
add
arpl
jecxz
cmp
imul
jnp
dec
mov
pushf
dec
xchg
test
xorb
or
ret
lock
loope
ret
lret
hlt
scas
popa
mov
inc
jnp
out
push
loop
ret
dec
addb
arpl
test
and
mov
sub
dec
lret
jnp
lahf
add
add
addr16
sahf
push
out
imul
xchg
lds
push
cmp
pop
aaa
pushf
xchg
xor
ds
dec
nop
xor
ss
jle
add
xchg
rcrl
xor
loop
sub
sbb
sub
dec
cmc
ljmp
in
lea
stos
insl
ja
sub
xchg
out
popa
dec
subb
xchg
dec
add
pop
pop
push
jmp
aas
pop
adc
movsb
inc
mov
xor
inc
sahf
sti
inc
mov
rolb
cmpsb
and
and
sti
cmp
mov
out
xchg
and
add
addr16
dec
movsb
mov
adc
push
push
push
jmp
pushl
test
outsb
dec
or
jne
insl
dec
inc
adc
lret
movsl
out
inc
cmp
cmp
add
mov
and
xchg
xchg
subb
stos
out
push
xchg
jbe
lret
add
imul
mov
jecxz
mov
mov
imul
sub
jnp
and
mov
lds
adc
push
adc
fcom
jns
fs
dec
fsubrs
dec
push
cmpsb
mulb
sbb
pop
and
loopne
push
in
mov
or
movsb
inc
jmp
jmp
dec
and
fadds
and
hlt
mov
imul
fistps
popa
rol
rcrl
pusha
jo
pop
xor
jmp
pop
cmp
into
scas
in
jl
les
and
or
lcall
cmp
or
xchg
mov
dec
dec
cmc
arpl
cmp
mov
cmpsb
sbb
mov
push
jo
arpl
adc
filds
lret
xor
clc
pushf
mov
pusha
imul
out
add
jne
mov
jecxz
decb
loope
xchg
inc
xorl
jecxz
xchg
sti
and
insb
xor
out
fcmovne
mov
bound
lret
pusha
jae
jne
and
dec
in
adc
jmp
inc
jecxz
imul
mov
jl
sub
mov
jle
jmp
mov
or
cmpsb
dec
xchg
fnstenv
loop
add
test
imul
in
sbb
lret
aad
jns
lret
mov
jnp
mov
jnp
xor
pop
adc
sbb
inc
push
leave
mov
lock
enter
mov
lea
ret
test
fs
fimuls
push
pop
adc
inc
cmpsl
in
push
inc
fists
xor
stos
mov
addr16
insl
and
in
or
daa
adc
cmc
out
adc
push
aad
call
in
pop
mov
fwait
orl
vmovdqu
dec
aaa
out
sbb
data16
call
mov
or
stos
mov
iret
sahf
xchg
add
ss
mov
ss
aaa
les
loope
dec
and
mov
cs
mov
in
loop
jle
jmp
test
cmpsb
add
xchg
jbe
push
dec
jo
mov
cmc
push
insl
sub
pushf
xor
scas
xor
xchg
aam
xchg
fiaddl
insb
and
in
mov
inc
testl
push
sub
mov
add
cmpsb
loope
jbe
addl
mov
jg
pop
add
inc
mov
das
outsl
sub
jo
push
jg
xchg
data16
daa
mov
inc
fldcw
imul
lods
out
add
mov
sub
cmp
fcomps
ljmp
sar
jno
insb
and
and
or
arpl
adc
push
imul
test
lret
int
mov
xlat
and
sbb
push
ffreep
add
sar
jbe
out
xchg
mov
sbb
hlt
adcl
push
mov
jmp
stos
std
sbb
jg
ret
adc
in
mov
insl
and
push
out
mov
fdivs
addr16
je
fwait
test
pop
dec
and
pop
push
bswap
xor
sbb
cmpl
lock
sub
hlt
xchg
jg
int3
aas
dec
pop
and
mov
iret
mov
subb
jmp
daa
cwtl
stc
dec
shrb
test
push
clc
dec
jle
mov
mov
je
mov
nop
stos
fdivr
jge
jmp
repnz
je
ss
mov
iret
sbb
cmpsl
lcall
push
xor
ficoml
xchg
xchg
es
bound
and
cli
jmp
arpl
push
scas
addr16
imul
mov
icebp
movsl
movsl
testl
movsl
sub
xor
cmp
push
cmp
mov
jae
inc
xor
out
mov
add
sub
push
mov
jmp
int
mov
fwait
decb
test
hlt
stos
inc
sub
out
ljmp
mov
bound
mov
sarl
mov
jns
xor
jne
nop
jnp
movsb
sub
mov
mov
mov
lret
mov
jno
in
sahf
adc
ret
inc
lahf
out
mov
cmp
mov
movsb
nop
push
add
sti
cmp
and
pop
test
jp
add
repz
push
out
repnz
scas
cmp
notl
and
andl
inc
cmc
ret
outsl
das
mov
sub
popa
sbb
mov
push
outsb
mov
fldcw
fstpt
lret
scas
aaa
addr16
nop
jnp
mov
in
or
jge
mov
paddusw
cmp
lret
inc
ficoml
stc
add
imul
mull
add
pop
mov
aas
pop
sub
push
test
and
test
sub
sarl
dec
push
mov
subb
mov
fidivrs
cmp
cmp
jg
outsb
test
mov
ret
pusha
mov
dec
movsl
cwtl
inc
dec
repnz
pop
ss
loopne
jae
push
cmp
pop
adc
inc
xor
add
test
outsb
pop
xor
jg
dec
dec
fidivl
into
and
inc
mov
push
movsl
ror
xchg
lods
in
scas
jo
lahf
inc
ljmp
das
stos
mov
mov
lods
cs
pop
lock
popf
xchg
fwait
stos
mov
imul
jne
push
xchg
hlt
into
sub
xor
int
dec
sbb
jge
xor
imul
sbb
jo
mov
dec
xor
jg
ficomps
add
mov
xlat
in
mov
jmp
xchg
out
sbbl
cs
cli
gs
jno
pop
jl
jbe
inc
push
loop
das
jne
push
imull
lret
mov
loope
cmpsl
mov
pop
mov
mov
iret
jg
sub
pop
imul
loopne
mov
mov
es
iret
outsl
push
loop
ss
les
jle
std
push
add
sbb
or
in
xlat
addb
inc
out
loope
push
fucomip
mov
jg
xchg
add
movsb
xchg
and
bound
pusha
push
jae
and
jl
mov
dec
jne
repnz
sub
sub
xor
cs
rcrl
pop
cmp
sub
les
cmp
leave
cmp
dec
xchg
loop
addr16
sbb
fcmovnbe
mov
push
add
movsl
add
and
pop
mov
xchg
mov
sbb
sbb
mov
mov
jne
jle
jo
insb
mov
mov
jb
dec
cs
and
rcl
add
cltd
cltd
cli
mov
fs
or
xchg
and
add
jbe
mov
lea
jecxz
bound
mov
pop
mulb
jle
lods
push
jmp
loop
sahf
xlat
xor
xor
stos
inc
push
adc
popa
sbb
cmp
loopne
test
shrb
cmpl
in
popf
fbstp
fnstcw
stos
in
push
pop
mov
popa
sub
mov
push
shlb
in
addr16
outsl
mov
push
imul
cmc
insl
mov
mov
hlt
mov
rcr
xchg
gs
xor
mov
adc
mov
daa
fistps
adc
xchg
jns
push
adcb
inc
arpl
jmp
imul
mov
jnp
xor
inc
insl
into
outsl
jecxz
mov
add
or
idivb
sbb
mov
ljmp
mov
jne
sub
xor
clc
xchg
js
lret
popa
cmpsb
xchg
add
mov
xchg
lock
decl
xchg
rcl
inc
xlat
movsb
jecxz
mov
jge
repnz
push
mov
jns
movsb
aam
xchg
lahf
cmc
ret
insl
and
push
dec
mov
xacquire
xlat
mov
add
insl
mov
jb
add
loop
iret
add
orl
cmp
fwait
in
pop
lret
popf
cmpsb
insl
xchg
cmpsb
insl
dec
or
mov
test
leave
and
scas
lret
push
cmc
xor
sub
test
dec
jo
loop
repnz
mov
in
mov
jns
mov
js
in
push
cmc
outsb
addl
jae
ja
dec
stos
push
sub
insl
sahf
je
je,pn
int3
test
dec
shlb
cmpsl
das
ljmp
or
pop
fs
push
je
cmpb
pop
sbb
cmp
adc
gs
mov
pop
outsl
cmp
call
jne
sbb
loop
cmp
enter
mov
jge
stos
movsl
push
gs
fldenv
enter
jne
adc
bound
adc
inc
sub
mov
scas
sti
mov
orl
repnz
int3
lahf
dec
dec
nop
ss
jmp
mov
cwtl
mov
pushf
popa
mov
jne
insl
pop
xor
sbb
mov
mov
jno
xor
sahf
mov
lahf
nop
mov
cld
sbb
push
loopne
das
jg
ret
mov
subl
dec
sbbb
and
pop
aam
bound
xor
out
in
dec
mov
and
mov
cmp
adc
aaa
andb
or
fsts
aaa
and
das
in
jo
rcll
out
movd
push
cmp
add
push
or
cmp
xor
cld
xchg
outsl
out
mov
fs
std
das
call
xchg
out
lcall
sbbb
sub
push
leave
rcrl
mov
imul
in
mov
setbe
stc
aaa
out
test
mov
mov
and
loopne
pop
sbb
aas
cmp
fs
bswap
fsubrs
fs
push
adc
insl
pop
shl
sbb
xor
lahf
xchg
cmp
cmp
pop
lahf
es
sahf
dec
orb
xadd
sbb
outsb
data16
adc
mov
mov
int3
sbb
or
cmc
test
jmp
sbb
movl
call
jp
gs
xchg
data16
pop
push
or
push
enter
hlt
shr
movsl
sahf
cmp
jmp
loopne
mov
jecxz
xchg
mov
push
fcomps
pusha
in
push
xor
cltd
sahf
xchg
xor
xchg
xlat
cmp
aaa
sar
ljmp
push
mov
mov
mov
scas
add
jbe
subb
arpl
pusha
push
push
push
or
cmc
pop
dec
outsb
inc
mov
lods
adc
mov
mov
push
xchg
sar
push
cli
hlt
hlt
dec
mov
push
and
cmp
xchg
dec
sbb
bound
insb
mov
lret
cmp
dec
enter
cmc
mov
jo
es
cmpsb
lret
dec
daa
cmc
mov
insl
shll
sti
decl
leave
imul
fsubs
ret
xor
sbb
loopne
imul
popf
lods
xchg
mov
jbe,pn
aad
repnz
arpl
mov
mov
mov
cmp
push
lock
push
lret
push
adc
mov
stos
cmp
cmp
jbe
jecxz
cld
cmp
test
pop
push
mov
testb
xor
sbb
bound
cmp
lahf
sub
loopne
jecxz
rcrl
outsb
push
and
lahf
leave
and
lea
outsl
sarl
push
and
test
shlb
fistpll
xchg
pop
pop
cmp
andl
sahf
sbb
pop
aaa
test
test
outsl
mov
xchg
xor
push
xchg
pop
cmp
mov
frstor
cmc
mov
push
push
out
jne
ret
cmpsb
test
mov
dec
popf
nop
daa
int3
push
daa
xor
mov
sub
pusha
and
movsl
daa
jne
jnp
mov
popf
push
insl
fisubrs
jecxz
mov
pop
jbe
cwtl
jle
dec
pusha
call
mov
pop
pop
inc
arpl
pusha
dec
add
mov
push
jo
lds
cmp
and
mov
decl
xchg
mov
jp
pop
pop
mov
lret
sahf
add
or
xchg
xchg
mov
nop
jae
mov
xlat
adc
cmp
sahf
xchg
lahf
ret
jbe
xchg
loopne
addr16
arpl
jns
and
rcrl
inc
xorb
inc
xchg
sbb
cmp
add
stos
rorl
mov
pop
repnz
lods
push
jmp
loop
sahf
pop
sbb
dec
push
cld
mov
xorb
inc
sbb
cmp
test
dec
add
test
cli
shlb
bsf
push
mov
inc
add
lcall
mov
stos
out
pop
sbb
mov
in
dec
push
xor
mov
sub
xchg
jp
mov
int
insl
push
jo
enter
jne
subb
pop
dec
daa
mov
adcl
mov
adc
and
sub
fiadds
dec
imul
jmp
popf
movsl
call
dec
jb
mov
or
push
push
mov
enter
leave
cli
in
sub
pop
add
mov
stos
mov
sub
in
imul
call
gs
jne
andb
repnz
xchg
mov
fidivrl
test
jo
dec
lods
orl
or
sahf
sbb
dec
lock
fs
in
mov
sahf
lahf
inc
mov
jge
stos
and
dec
aad
xchg
mov
into
loop
fdivrs
mov
sarl
xchg
leave
test
mov
adc
mov
pop
sbb
adc
fsubrs
ss
lahf
filds
aam
mov
push
xchg
test
cli
out
sbb
daa
dec
inc
in
pop
ret
out
bound
cmp
cmp
outsb
mov
shrl
loop
cmc
fstpt
test
jmp
loop
jg
add
insl
in
add
pop
lea
pusha
pop
call
dec
sbb
adc
mov
mov
adc
or
cwtl
ret
dec
pusha
sbb
pop
sub
outsb
imul
loopne
loop
mul
adc
in
scas
jl
cmp
pusha
jo
cmp
int
pusha
mov
andl
mov
jbe
aad
xchg
cmp
cmpsl
incl
sarb
bound
out
cmpl
cmpb
das
mov
dec
ljmp
pushl
mov
outsl
inc
in
lret
idivl
inc
push
call
cmpsb
mov
mov
outsb
push
cltd
cmp
test
cs
mov
frstor
addl
out
cmpsb
lret
loopne
inc
movaps
inc
inc
xchg
mov
mov
mov
aad
mov
mov
xchg
aaa
and
stos
cs
ss
leave
ljmp
inc
add
cmpsl
stos
sbb
cwtl
and
in
mov
outsl
pop
xchg
lret
xlat
lcall
cmpl
and
daa
sarb
xchg
push
add
out
mov
jno
movsl
cmp
pop
push
fdivrl
add
out
ret
imul
add
adc
out
addb
and
loope
test
outsb
outsl
js
xchg
mov
insb
fnsave
cmpsl
cmp
pop
imul
loopne
adc
or
add
fcomps
test
and
mov
shrb
mov
addl
pop
jecxz
ds
popf
cmpl
js
movsb
sbb
lock
mov
sub
sahf
add
pop
mov
loope
repz
and
pusha
hlt
jno
xchg
ds
cmpsl
xchg
divl
add
dec
xchg
stos
nop
add
pop
shrl
mov
movsb
push
int
jge
or
pop
inc
jb
js
pop
push
fnstsw
shr
ss
cmp
push
fdivrl
loope
mov
dec
ljmp
fs
mov
add
cmp
dec
stos
mov
inc
out
insb
imul
sub
test
jecxz
push
mov
out
cmp
mov
or
mov
fcomp
out
add
push
push
or
mov
push
cmpsl
or
out
arpl
mov
pushf
jg
dec
popa
cmpsl
cmc
dec
mov
mov
cmp
push
mov
mov
jle
xor
cmpsl
and
arpl
cmp
push
outsb
pop
arpl
mov
stos
jg
inc
push
outsb
adc
testl
and
pop
aas
xchg
jbe
out
pop
fistps
jns
jbe
lret
inc
sbb
dec
inc
add
rcrb
or
lret
sbb
or
mov
add
xor
loope
cmc
js
cwtl
push
aas
mov
je
pop
inc
or
dec
pop
adc
jmp
fldl
lahf
mov
xor
addr16
xchg
adc
cld
ja
jo
clc
dec
fistpll
mov
or
push
mov
iret
idiv
mov
push
mov
fidivrs
mov
mov
shl
movsb
aad
jecxz
inc
push
in
mov
fcmovnbe
call
xchg
aaa
sub
subl
xor
movsl
dec
sahf
jl
jb
adc
xor
jb
push
xchg
out
call
mov
cld
cmp
fnstcw
call
inc
dec
arpl
mov
mov
cbtw
aam
imul
mov
and
xlat
shl
pop
rcr
mov
inc
pmaxub
push
sbb
ds
mov
shll
popa
or
hlt
movsl
xlat
lds
jp
cmp
movsl
inc
test
out
mov
in
call
mov
das
shlb
jle
les
xchg
mov
mov
jl
jbe
jecxz
xor
mov
lahf
test
mov
xchg
add
add
push
mov
std
mov
loopne
xor
sub
jmp
imul
ss
jnp
xchg
jge
fwait
lcall
ror
xchg
lds
lret
bound
loop
add
mov
stos
cmp
sti
jecxz
cmp
lahf
pop
in
mov
ja
push
movsb
outsl
in
movsb
ret
in
movsb
in
movsb
mov
in
xlat
rol
fistpll
mov
insl
das
jo
and
imul
push
cmpsl
dec
inc
and
add
mov
pop
pop
roll
cmp
outsb
in
pop
mov
faddp
fdivs
cmp
and
scas
ljmp
sahf
jecxz
gs
adc
inc
pop
push
inc
xor
add
inc
ljmp
jle
adc
aaa
sarb
add
xchg
cmp
mov
sub
dec
fwait
lahf
negb
clc
lods
outsl
mov
adc
das
lds
mov
or
inc
lods
xor
cs
icebp
mov
push
addb
push
imul
xchg
or
movsb
lods
pop
scas
jne
mov
test
out
fcompl
mov
insb
xchg
jmp
je
fdiv
cmp
push
test
mov
mov
jle
arpl
adcl
pop
dec
mov
sub
fbld
test
nop
insl
test
mov
out
cld
xorl
loop
ljmp
sub
mov
mul
jge
mov
daa
imul
aas
rorb
lcall
js
mov
enter
shrb
dec
shll
in
in
sbb
mov
in
adc
test
jmp
adc
rorb
push
adc
xor
push
sbb
cmc
sub
test
and
mov
and
mov
cmp
mov
lods
mov
lahf
and
sbb
mull
mov
enter
push
jle
addr16
mov
addr16
or
rolb
inc
dec
xchg
mov
icebp
sub
nop
test
xchg
shl
nop
inc
ret
xlat
sub
jbe
aam
xor
dec
xchg
sti
jl
loop
insb
mov
in
cmp
frstor
sbb
xor
push
jo
mov
cmpsb
ljmp
xorl
shrb
ret
mov
ret
out
xor
aad
mov
test
bound
ss
push
jno
xchg
mov
gs
xchg
or
cltd
mov
jb
pop
mov
xor
jmp
mov
stos
jp
pop
pushf
sub
cwtl
aam
lock
xchg
in
je
mov
xchg
pop
adc
mov
xor
push
movsl
bound
cs
jbe
lret
or
jecxz
push
aad
xchg
ljmp
shl
push
jecxz
imul
jg
imul
mov
push
fidivrs
sub
icebp
add
or
or
mov
mov
fst
pop
mov
cmp
enter
ds
and
test
xchg
repz
arpl
xchg
jne
add
outsl
mov
in
jle
push
test
ljmp
mov
jge
stos
cmp
stc
hlt
xchg
jnp
les
sbb
sub
add
test
dec
cld
cmp
jge
stos
mov
mov
or
insl
pop
jo
rcll
mov
loop
fcomip
ret
cmpsl
sub
lahf
loop
popf
outsl
clc
mov
or
jb
out
je
jg
les
push
sbb
cmp
sub
pop
pop
lock
out
mov
jge
stos
adc
mov
gs
popf
xor
jge
stos
fstl
mov
sub
pop
imul
jns
shrb
add
jecxz
repnz
jge
lods
loop,pt
pusha
cmp
int3
mov
pop
in
mov
imul
loop
idivb
fbld
sbb
jge
stos
insl
add
and
sub
insl
inc
imul
subl
pushf
test
dec
test
jle
lods
dec
jmp
fstpt
cli
lock
bound
sarb
cmpsl
mov
sahf
mov
jmp
pusha
das
in
movsl
push
jne
jg
ret
mov
sbb
and
sbb
dec
pop
add
imul
mov
jge
stos
icebp
push
dec
mov
inc
arpl
enter
jge
stos
mov
sub
insl
push
imul
outsb
lods
add
add
repnz
mov
test
dec
mov
jle
lods
ds
inc
sub
xor
jb
out
cmc
mov
jmp
loop
popf
outsl
clc
mov
mov
imul
xchg
movsl
dec
jne
jg
ret
lret
cld
jno
add
test
dec
adc
leave
mov
sarb
sub
or
out
loop
repnz
adcl
lods
test
dec
js
loop
repnz
jge
lods
push
adc
dec
mov
insl
mov
in
mov
fwait
test
inc
sbb
cmp
push
loope
and
jbe
jmp
fidivrl
ret
push
sbb
xor
dec
sub
cmpsl
xchg
ljmp
mov
jge
stos
adc
mov
imul
nop
outsb
jmp
dec
xor
or
enter
cwtl
mov
or
jo
enter
jne
andb
or
aas
imul
jge
cmpsl
mov
stos
loop
popf
mov
sbb
outsb
addl
es
cmpsl
xor
pop
dec
lock
js
xor
jge
stos
add
mov
pop
jnp
sbb
cwtl
ret
mov
jge
stos
jmp
sub
insb
adc
loopne
xchg
sub
test
dec
pop
sub
cmpsl
repnz
lods
pop
loop
cmp
test
insl
into
outsl
pmulhuw
or
cli
cmp
enter
daa
jne
jnp
ret
ret
pop
cmp
add
test
outsl
aaa
leave
insl
jge
stos
xchg
push
les
loope
insl
sbb
enter
jne
jns
aaa
sarl
iret
mov
out
mov
add
or
cli
cmp
test
popl
out
in
popf
adc
jge
stos
xor
xchg
add
stos
popf
xor
push
jl
in
mov
pop
jecxz
sbb
sbb
adcl
mov
pop
insl
and
enter
jne
andb
sbb
in
mov
out
jecxz
mov
fwait
test
cmp
adc
ljmp
mov
jge
stos
jmp
sub
insl
push
jne
inc
imul
shlb
cmc
jge
test
ljmp
mov
jge
cwtl
mov
ret
jle
sbb
outsb
in
pop
test
dec
cmp
loop
repnz
jle
test
sbb
sub
insl
outsl
pmulhuw
fstpl
xor
cmp
shr
stos
ljmp
mov
jge
stos
add
sub
inc
add
dec
es
ljmp
fidivrl
les
or
inc
cmp
pop
in
or
in
mov
jge
stos
add
sub
test
xchg
sbb
outsb
icebp
add
sbb
push
addr16
xor
popf
movsl
xor
add
adc
iret
repnz
jle
test
pop
xchg
xlat
mov
movsl
inc
insl
shrb
jecxz
mov
iret
test
cmp
xor
orl
lret
dec
mov
jge
stos
inc
dec
add
sub
in
xchg
ljmp
mov
jge
xchg
dec
sub
mov
sbb
lahf
stos
int
insb
mov
and
pop
imul
stos
movsl
push
pushf
mov
add
ja
inc
sahf
jg
addl
cwtl
shl
jecxz
mov
scas
lods
push
jmp
loop
sahf
pop
lock
subl
in
mov
pop
les
adc
cld
jno
add
xor
aam
mov
add
stc
dec
push
push
jecxz
cmc
cmp
lea
mov
xor
lret
sub
pop
xor
sub
insl
push
imul
mov
mov
int
pop
test
dec
sbb
xchg
lea
stos
rcll
mov
cmp
mov
movsl
sub
stc
dec
push
or
repnz
mov
aam
movsl
inc
insl
outsl
pop
in
mov
pop
in
xor
xchg
loop
divb
mull
push
sahf
xlat
and
push
sub
pusha
aaa
in
movsl
mov
sbb
sbb
dec
sub
insl
gs
out
mov
jge
stos
lds
mov
pop
and
mov
lock
repnz
jge
lods
push
jmp
hlt
dec
mov
insl
lcall
jne
jg
ret
ret
add
repnz
outsb
inc
lahf
jnp
int
lods
mov
into
mov
push
sub
cmpsb
dec
in
imul
fstpt
push
mov
xchg
mov
mov
cwtl
xor
xchg
xchg
jbe
cmp
push
int3
or
dec
or
repz
jbe
sbb
mov
mov
inc
inc
inc
sbb
mov
xor
call
popf
nop
inc
or
leave
push
in
jmp
jp
sub
push
jge,pn
sahf
jno
rcrl
add
jp
mov
imul
shrb
lea
jg
xlat
test
mov
repz
or
mov
jg
inc
push
cmc
mov
pop
mov
jmp
ljmp
in
push
in
aaa
fisttpll
lods
ss
je
loop
jae
cmp
test
mov
jnp
or
dec
pop
aas
ljmp
mov
jnp
fucomp
leave
mov
mov
and
ror
out
rolb
inc
fnstsw
inc
nop
or
int
dec
clc
jae
call
xchg
push
shlb
aam
jne
pop
push
lret
mov
xchg
arpl
cmpsb
dec
jnp
mov
xchg
pop
in
or
ljmp
pushf
jb
xor
aam
and
imul
test
lock
rcrb
lret
cld
lea
or
scas
stos
fwait
pop
test
fstpt
dec
mov
dec
ss
shl
ljmp
cmp
xchg
rcrb
and
xchg
mov
js
lahf
mov
jp
pop
fcoms
adc
ljmp
adc
bound
popf
push
fstpl
inc
icebp
lods
pshufw
fucomi
xchg
mov
les
fldl
add
cmp
lods
lds
sbb
mov
arpl
es
cmc
fiadds
jae
jno
jge
out
dec
cmp
pop
mov
jns
mov
and
adc
sbb
dec
mov
adc
add
jo
mov
js
add
cmp
add
dec
and
mov
psraw
dec
pop
jns
push
mov
test
test
rep
mov
jns
std
push
mov
in
aaa
mov
jne
jne
sbb
orl
aas
cmc
jb
icebp
xchg
mov
sbbb
lahf
xor
int3
cmpsl
jge
xchg
out
pop
xchg
cmc
cwtl
filds
bound
push
sub
inc
jb
push
xchg
adc
repz
add
pop
and
repnz
cwtl
test
mov
das
jge
jmp
testl
xor
inc
loopne
cltd
mov
xor
and
cwtl
pop
sbb
and
lock
scas
sbb
cmpsl
cs
cwtl
dec
int3
jp
cmp
jb
add
mov
cmp
movsb
mov
aad
gs
sub
mov
imul
pop
dec
lcall
mov
add
push
jbe
out
cmpsl
sahf
nop
loopne
jno
sub
jbe
mov
jp
test
jmp
std
cmp
cmpsl
arpl
nop
sub
lods
push
mov
inc
sti
out
test
or
imul
mov
xlat
roll
movsl
cmpsb
mov
pop
mov
mov
int
fstps
in
or
push
lds
scas
enter
jne
test
mov
movsb
xor
or
xor
sub
pop
insb
inc
or
push
roll
inc
xchg
mov
lret
call
pop
cmpsb
test
xchg
aad
mov
fwait
mov
sub
test
pop
push
add
mov
sub
mov
mov
lret
or
insl
cmpsl
dec
fwait
inc
stos
cmpsb
cltd
pop
mov
mov
out
in
icebp
cmpsb
xor
inc
dec
int3
imul
inc
or
enter
or
push
stc
and
lahf
flds
ret
and
jle
push
sti
fbld
xor
ss
xchg
pop
dec
adc
loop
test
jb
adc
pop
in
test
mov
std
call
dec
add
mov
cli
lea
lock
lods
push
mov
andl
jo
mov
in
ja
sahf
sarl
pop
bound
imul
jae
mov
adc
xchg
pop
mov
dec
xchg
jae
push
ret
ds
arpl
arpl
inc
inc
arpl
inc
dec
arpl
inc
push
arpl
inc
sbb
add
push
loope
pop
into
test
fisubrs
pop
sti
pop
push
pop
push
pop
xor
xor
pop
cmp
pop
inc
pop
adc
pop
clc
pop
push
subl
pop
and
and
inc
adc
push
cmc
cli
fistl
adc
push
adc
adc
mov
sbb
movsl
adc
aad
cld
push
lds
insb
push
jne
pop
push
gs
nop
xchg
and
inc
test
lods
dec
xor
adc
loope
mov
adc
and
mov
dec
inc
popa
adc
xchg
sbb
addb
adc
push
int
dec
push
pop
add
sbb
xorb
sbbb
pop
xchg
stos
jle
sub
mov
dec
clc
jae
push
and
sbb
sbbb
mov
enter
pop
popf
ret
insb
and
sub
out
mov
ljmp
sub
mov
jae
add
xor
xchg
loopne
adc
lret
dec
lea
cmc
mov
jl
xchg
xchg
shrl
jp
aad
loopne
mov
test
jnp
dec
push
rolb
xchg
adc
jbe
mov
and
mov
out
cld
aam
dec
std
pop
pop
inc
in
mov
jmp
push
test
xchg
add
adc
ja
movsl
xchg
ffree
and
cmpsb
xor
outsl
imul
and
icebp
ret
rorb
jmp
push
das
inc
pop
rolb
xchg
outsl
iret
push
js
xlat
cmc
jnp
fistl
cwtl
add
out
and
sbb
push
out
roll
or
xlat
jle
sarl
and
push
sbb
fildll
test
call
mov
lcall
ret
adc
and
xchg
fsubl
lods
inc
push
or
dec
sar
dec
push
arpl
jge
addb
sahf
mov
and
fmuls
imul
addr16
cltd
lret
test
jae
out
push
fsubl
in
test
roll
xor
and
inc
lahf
adc
fdivs
sbb
scas
mov
dec
dec
iret
and
cld
sub
out
test
stos
jo
push
cli
pusha
ss
daa
add
mov
popf
roll
cmpb
sbbl
fistpl
inc
jbe
mov
xchg
dec
loop
cld
icebp
fmulp
cld
adc
mov
imul
xorb
insl
or
mov
and
xchg
jp
sbb
mov
sub
aas
ljmp
sbb
jo
xor
mov
mov
sbb
mov
fwait
mov
mov
les
jge
push
lods
mov
shlb
lret
arpl
icebp
mov
movsb
into
mov
mov
dec
jg
xchg
mov
cmp
mov
mov
xchg
and
xorb
jb
and
test
and
mov
xchg
and
dec
sub
into
xchg
and
jecxz
andl
xchg
and
sbb
test
push
xorb
bound
lock
pop
sub
push
pop
cmp
push
pop
dec
pop
negb
pop
out
addr16
jl
push
mov
inc
pop
pop
cmpsb
pop
lods
pop
xchg
pop
mov
pop
jbe
fcompl
pop
in
clc
fldenv
test
std
pop
push
leave
std
notl
std
addr16
imul
out
jns
fbld
popa
push
ljmp
sub
xchg
xchg
sbb
je
cmp
in
ljmp
in
push
dec
cld
push
dec
or
ss
push
mov
adc
pop
adc
mov
cmpsb
push
jns
test
sub
sbb
je
cmp
aam
flds
mov
stc
andl
cltd
jle
fmul
jle
fstpt
jle
fcompl
inc
jbe
aad
idivb
movsb
imull
loop
lock
imul
cmp
jl
pop
aam
fstps
cld
or
cld
stc
pop
and
test
pop
add
leave
pop
hlt
cld
mov
pop
push
std
pop
jae
lods
mov
loop
adcl
mull
rcrb
mov
popf
test
mov
hlt
pushf
mov
mov
inc
insb
mov
xor
jns
movsb
sub
out
xchg
lods
sbb
sub
sub
dec
les
dec
aam
jle
in
outsb
dec
hlt
push
dec
add
dec
dec
adc
ds
and
cs
xor
push
dec
inc
push
dec
push
push
push
jae
fisubs
jo
flds
mov
inc
mov
sahf
inc
cmp
jle
in
outsb
inc
hlt
push
dec
inc
adc
ds
add
jno
inc
sbb
mov
xchg
mov
test
push
mov
mov
sahf
pop
les
inc
aam
jle
in
in
push
add
sbb
es
sub
push
inc
cmp
push
inc
dec
arpl
inc
pop
arpl
mov
ja
lret
mov
test
les
loope
fndisi(8087
imul
test
inc
push
lret
xor
push
dec
inc
push
dec
push
push
push
gs
icebp
outsl
dec
loop
orl
sete
mov
dec
mov
sahf
dec
les
dec
aam
jle
in
outsb
dec
hlt
push
dec
add
dec
dec
adc
ds
and
cs
xor
push
dec
inc
push
dec
push
std
imul
fidivrs
in
and
or
xchg
and
xchg
and
fsts
or
ja
pop
xchg
jl
pop
xchg
push
pop
jbe
inc
pop
out
decl
scas
inc
incl
and
pop
adc
pop
add
pop
repnz
mov
pop
push
inc
pop
or
push
call
sbb
int3
sti
mov
pop
lcall
pop
mov
pop
jl
ficompl
jbe
loope
loope
in
mov
push
popf
xlat
mov
popfw
ja
push
popf
addr16
adcl
aaa
ret
daa
mov
jbe
inc
out
shrl
shrb
dec
loop
je
repnz
dec
add
addr16
push
adc
mov
lock
mov
jp
mov
sub
push
das
jb
aas
das
in
fildll
mov
pop
das
and
mov
adc
cmpsl
das
or
pop
sub
inc
add
xchg
es
cmpb
test
and
mov
and
and
and
sub
das
sbb
lret
pop
pop
inc
pop
pop
inc
dec
xchg
jg
bound
push
jb
mov
lret
cmp
mov
push
push
mov
loop
out
ljmp
js
out
push
push
lahf
pop
add
pop
ds
imul
xchg
inc
repnz
enter
js
pop
jle
int3
inc
xchg
push
xchg
and
aad
jl
frstor
test
inc
iret
pop
out
inc
xlat
or
cmp
and
adc
xchg
sbb
loopne
orl
pop
jb
testl
ret
push
lret
pop
mov
adc
mov
inc
xlat
pop
testb
inc
movl
dec
inc
ja
inc
xchg
movsl
addl
or
adc
fists
ret
adc
push
or
mov
adc
mov
push
mov
repnz
cmp
fsubrl
push
ja
push
fcompl
dec
xchg
sub
jbe
push
dec
xchg
mov
test
mov
data16
pop
jo
ljmp
pop
cli
pop
dec
pop
add
pop
ss
or
pop
adc
pop
clc
pop
push
pop
add
popa
sbb
mov
sahf
int
jbe
loope
les
out
cs
das
es
mov
inc
push
push
xor
dec
push
test
in
stc
gs
js
pop
subb
stos
push
mov
inc
ret
inc
lret
inc
push
cmp
push
sub
inc
cmp
xchg
inc
das
adc
xchg
pushf
dec
mov
rcrb
mov
lret
out
adc
imul
mov
add
imul
xor
sbbb
enter
sar
mov
mull
push
adc
aad
in
lods
push
cld
add
push
mov
std
push
sar
push
jo
push
push
pusha
std
inc
push
nop
mov
mov
test
add
sub
cs
sub
das
push
dec
mov
push
sub
mov
das
out
and
mov
xchg
adc
inc
lcall
adc
push
jecxz
scas
push
pop
push
mov
and
and
scas
jle
fcompl
cmp
mov
xor
sub
inc
push
adc
in
jp
divb
mov
jnp
dec
push
dec
cmpb
scas
nop
lea
rclb
mov
into
int
mov
mov
mov
xchg
test
mov
repnz
cwtl
int
sub
and
aaa
pop
arpl
mov
lea
aas
pop
sti
xchg
mov
pop
cwtl
repnz
popa
imul
out
push
push
dec
pop
push
dec
daa
push
dec
das
imul
mov
test
inc
sub
fwait
inc
xor
jge
sub
andb
mov
es
mov
mov
mov
mov
lcall
into
test
push
and
mov
fcompl
jb
inc
jno
lods
cwtl
fsubs
das
orl
es
into
jns
int3
lret
pop
clc
movsb
popa
pop
push
xor
ss
popf
movzwl
movsl
dec
mov
lahf
mov
push
call
das
pop
jecxz
xchg
xchg
std
or
and
or
jle
xchg
shlb
mov
sub
mov
cmp
in
rorb
cli
popf
aam
cmp
sbb
dec
lock
jge
sbb
hlt
mov
ds
lock
popa
aas
in
mov
mov
cli
sti
ret
outsb
or
es
test
xchg
movsb
adc
adc
cld
scas
enter
clc
xor
and
hlt
sbb
xchg
inc
mov
nop
jg
fnsave
jp
add
scas
cmp
mov
loopne
mov
jne
fnstenv
jno
shrb
cmp
mov
imul
or
ret
mov
outsl
xor
add
xchg
jne
or
push
and
inc
call
jl
pop
adc
pop
sti
cld
ret
loopne
xchg
aad
imul
mov
aaa
mov
mull
dec
push
ja
sbbl
enter
and
add
daa
loopne
inc
or
cmp
nop
inc
iret
arpl
loopne
sub
sub
adc
jle
fdivl
push
mov
and
mov
cmp
mov
mov
sti
jecxz
pop
add
daa
xor
push
pop
inc
push
cli
jb
call
in
scas
cmp
xchg
cmpsl
rcll
call
loopne
mov
popa
outsb
ja
out
fwait
jp
hlt
mov
ljmp
popf
int
mov
insb
out
mov
sar
repnz
sub
xchg
movsb
dec
movsb
jae
inc
jge
loopne
gs
or
add
and
cmp
into
stos
sub
insb
daa
push
and
pop
push
mov
subb
jge
jp
stos
or
jae
push
jno
shll
xchg
roll
lahf
rorb
into
ss
jl
addr16
pushf
mov
aaa
sahf
jnp
push
dec
lea
or
xchg
xor
jmp
adc
lods
imul
sub
das
jae
pop
mov
xchg
inc
pop
pop
jle
daa
pusha
mov
testl
imul
adc
mov
jne
filds
std
lret
push
out
lods
arpl
sub
fsubs
and
int3
mov
test
cmp
scas
ss
shrb
mov
loope
aad
or
adc
push
push
pop
push
sub
out
cmpsb
testb
inc
outsl
pop
push
inc
jae
ds
addr16
xor
mov
xchg
push
xchg
outsb
push
push
adc
dec
inc
mov
mov
jecxz
push
mov
fwait
ds
jo
add
pop
pop
pop
dec
aas
jp
data16
xlat
mov
xchg
and
jno
xchg
mov
dec
scas
call
dec
jl
pop
add
int3
inc
les
js
push
push
pop
std
inc
push
mov
and
inc
push
int3
and
hlt
xorb
mov
addr16
cmp
inc
lock
mov
mov
call
push
cltd
mov
push
and
sub
sbb
cmp
fadds
sub
dec
fstps
ja
cmp
jle
out
cld
push
push
mov
add
movsb
std
or
std
cli
push
std
push
js
cmp
jmp
jg
lret
cmpb
dec
cmp
fucomi
adc
fisttpl
subb
xchg
jo
pop
push
int3
std
repz
mov
std
push
push
pusha
andb
shl
xchg
andb
orb
daa
mov
add
sub
mov
out
notl
out
cwtl
popa
push
call
xor
mov
xchg
loope
ja
cwtl
shrl
repnz
xchg
or
push
ds
adc
pop
fs
imul
out
data16
hlt
or
jecxz
test
out
mov
rcr
aaa
xchg
push
mov
sti
std
pop
arpl
lods
lret
in
test
insb
enter
fcomps
imull
xor
lods
xchg
addl
outsl
pop
sahf
mov
call
call
mov
stos
sbb
iret
repnz
pop
cld
fninit
stos
lret
je
or
rcrl
test
bound
rorl
repz
push
data16
push
fs
pop
adc
stos
enter
fucomi
dec
push
xchg
mov
xor
mov
cmp
xchg
add
fnstcw
mov
inc
xchg
insb
lret
and
dec
into
out
outsb
std
leave
jbe
push
xchg
and
cltd
jge
xchg
cli
pop
ret
das
cmp
cmpsl
loopne
mov
jb
mov
out
jo
and
in
lcall
pusha
push
jl
inc
sub
inc
and
addr16
xchg
gs
ret
jbe
add
push
lahf
add
dec
sbb
lahf
add
incb
test
inc
adc
push
cmp
fisubrs
andl
lock
and
movsb
pop
pushf
test
std
fstps
sbbl
push
push
xor
imul
jmp
aas
xchg
sub
jl
push
mov
das
fstps
mov
pushf
aam
stc
inc
add
mov
and
test
xor
das
lahf
sub
xchg
inc
xor
bound
pop
cwtl
in
sub
das
sbb
rolb
pop
mov
push
jbe
sarb
sub
or
stos
mov
out
mov
repnz
fisttpl
sub
jle
lret
mov
jns
cmp
aad
stos
adc
push
sub
addb
ja
loopne
jo
jmp
cltd
das
add
imul
popa
mov
insl
je
xchg
movsl
lcall
push
pop
lods
inc
inc
mov
pop
push
pop
negb
jno
fwait
std
add
test
dec
sub
and
xchg
and
test
mov
mov
add
mov
cmp
xchg
and
xchg
lret
and
pop
adc
data16
js
lods
test
fdivrs
sub
xchg
std
test
push
inc
add
mov
stc
inc
lock
xor
or
test
mov
aas
mov
lea
and
push
aas
adc
dec
out
test
fdivs
adc
mov
repnz
stos
bound
and
push
or
mov
aaa
movsl
add
lret
lcall
dec
imul
and
lock
push
push
add
xor
dec
ds
dec
inc
push
dec
dec
push
dec
push
pop
or
psrlw
lret
jnp
loop
cld
dec
fildll
push
inc
pop
scas
pop
pushf
pop
ret
arpl
dec
dec
mov
mov
cmpsb
pop
ds
pusha
es
popa
pop
cmp
cmp
jecxz
jle
cmp
jge
mov
movsb
mov
sbb
cltd
cmp
adc
arpl
push
fsubrp
push
fmull
out
sub
push
mov
data16
mov
shl
pop
ret
leave
lret
insb
inc
imulb
inc
push
ss
and
cwtl
push
bound
and
sbb
bound
int3
or
sbb
sub
arpl
daa
or
cmp
adc
xor
daa
inc
std
nop
xor
scas
jnp
sahf
add
cmpsb
inc
sub
mov
push
adc
addl
loope
jo
into
pop
out
push
rcll
cli
dec
mov
stos
data16
jmp
orl
gs
int
js
decb
push
scas
mov
xorb
pop
in
cmp
inc
push
out
daa
imul
pushf
imul
adc
mov
pop
enter
iret
xor
pusha
jle
xchg
icebp
test
imul
enter
mov
iret
mov
mov
push
adc
cmp
dec
and
push
adc
cmp
loop
movsl
repnz
mov
push
mov
and
dec
adc
sbb
loope
loopne
inc
push
addr16
fiaddl
mov
jp,pn
mov
std
ret
fbstp
icebp
dec
in
sub
jno
loopne
push
scas
rcrb
mov
sub
lock
and
sub
jmp
addr16
sub
cli
ffreep
or
xor
cmp
aas
dec
int3
jle
addr16
in
and
push
cmpsl
push
pusha
je
stos
cmp
rorb
xor
xchg
dec
push
xchg
pop
push
js
dec
movsl
jns
mov
lods
sub
or
insb
pop
imul
dec
lds
rcrl
stc
or
dec
cld
popf
jne
test
add
fmull
lcall
dec
mov
sub
fwait
adc
push
mov
out
test
cld
mov
xchg
sub
sub
cmp
xchg
sarl
in
stos
loope
les
repz
sbb
ja
mov
cmp
cmpsb
jle
sub
mov
mov
in
jmp
movsb
mov
insl
rclb
fistps
out
out
addb
lcall
xlat
or
dec
xor
rcrl
leave
xor
mov
mov
jle
mov
push
add
stos
popf
add
xchg
xor
mov
mov
jno
pop
dec
push
push
or
adc
mov
cwtl
mov
jmp
data16
pop
sahf
roll
push
jae
loope
fdivl
stos
addl
cli
mov
pushf
repz
or
inc
into
out
add
in
xor
push
pop
ljmp
mov
xchg
daa
mov
xor
mov
mov
lahf
adc
adc
push
mov
mov
lods
inc
pop
in
nop
xor
sti
mov
or
test
arpl
rcr
aas
mov
pop
std
out
es
xor
pusha
cmpl
insl
xchg
scas
mov
pop
dec
std
pop
lahf
lods
pop
jbe
mov
adc
xlat
lret
pushf
imul
cmp
mov
pop
xchg
test
jo
adc
inc
xor
jns
inc
call
xchg
andl
jnp
mov
cld
mov
sbb
inc
nop
aas
xchg
mov
mov
cs
nop
xlat
iret
lods
dec
jp
repnz
cltd
adc
out
out
js
imul
cmp
out
sbb
int
lret
push
aas
out
test
cmp
repz
dec
stc
sbb
and
jns
and
or
lods
sub
and
idivl
rolb
push
lds
adc
ret
bound
xacquire
out
jg
fldenv
andb
xchg
inc
mov
add
push
dec
mov
sub
lea
jns
shrl
xchg
sbb
jg
pop
out
jae
or
pop
mov
ja
mov
insb
xor
cld
rclb
mov
pop
lea
xchg
mov
inc
mov
and
insl
pushf
out
sub
sub
xlat
bound
mov
lods
jp
add
push
sub
fbstp
jbe
inc
pop
inc
es
aad
mov
sbb
xchg
scas
jae
sbb
test
mov
or
xchg
pop
popf
add
inc
fdivrl
cltd
xor
pop
mov
jecxz
int
adc
ds
jo
add
mov
bound
lods
fs
cmp
sbb
cld
jns
out
xor
ret
int3
xchg
mov
add
das
jmp
sub
dec
movl
dec
adcl
insb
sbb
xor
cmp
lea
repnz
sbb
lods
repz
insb
sbb
add
and
int3
sub
das
test
xor
roll
in
push
sbb
pop
bound
push
jo
inc
data16
inc
pop
xchg
xor
test
sbb
or
xchg
ret
inc
int
push
jo
test
das
mov
loopne
push
sbb
mov
movsb
shl
test
fdivrl
pop
out
mov
sbb
xchg
or
add
sahf
jnp
push
add
in
cltd
cmpsb
adc
sub
xchg
xchg
sub
lods
dec
loopne
add
fwait
into
sub
jo
aam
sbb
jp
andl
lret
icebp
sahf
sbb
sbb
scas
nop
daa
cltd
stos
repnz
lea
je
and
ljmp
xor
or
std
lcall
orl
je
iret
push
notb
xor
test
push
xor
std
loope
and
lods
and
rclb
push
es
pop
arpl
insb
out
add
cs
out
pop
push
stos
dec
cmp
xor
std
mov
std
jb
push
add
xchg
mov
jmp
ljmp
xlat
fiaddl
adc
mov
ds
and
popf
lods
cmc
pop
jae
cmp
adc
sbb
pop
dec
sbb
je
cmp
add
ret
push
mov
mov
das
ljmp
inc
xchg
out
pop
pop
push
inc
loope
ja
adc
dec
cwtl
mov
jo
cmp
outsb
pushf
sbb
and
inc
dec
lret
test
into
push
dec
rolb
int
push
inc
sbb
jle
jp
enter
js
test
std
stc
jbe
or
cmp
pop
sbb
jbe
push
jnp
and
mov
aam
ljmp
icebp
inc
mov
cld
sti
xchg
xchg
cmp
lds
and
popl
stos
mov
mov
mov
aad
in
jmp
or
loop
sti
sbb
iret
fwait
jbe
rcll
into
xchg
imul
fwait
mov
out
pop
loopne
push
and
loopne
push
fdivr
or
mov
addr16
fsts
and
cwtl
mov
aas
jl
fcmovnu
mov
loop
jle
in
mov
inc
xor
dec
ja
or
repz
cmp
cld
push
ret
popf
int3
push
push
lahf
mov
loop
cmc
test
dec
popa
ljmp
mov
mov
push
pop
mov
pop
cmp
jbe
shr
jge
mov
inc
cmp
mov
into
xchg
sub
std
loope
out
loope
notl
es
mov
cmp
call
push
inc
dec
mov
pushf
loope
adcb
push
mov
bound
or
out
cmp
insl
push
cmp
mov
ret
mov
rclb
jae
push
pop
push
jo
and
popa
pop
aad
mov
dec
push
std
cs
mov
or
lods
fmuls
push
or
adcl
or
imul
ficompl
sbb
push
and
cmpsl
push
insl
mov
imul
jno
dec
aam
pop
add
adc
inc
int3
jns
insl
dec
mov
mov
js
xchg
adcl
fmull
mov
jbe
jb
dec
into
into
aad
push
daa
adc
aas
mov
cltd
shlb
cmp
ja
lret
call
cmp
xchg
push
fsubl
clc
mov
bound
cmp
jo
sti
ds
das
sub
inc
icebp
and
pop
pop
inc
outsb
pop
push
aas
sub
imul
cmp
dec
pop
adc
cld
les
in
jg
call
or
sub
pop
adc
cmp
mov
mov
pop
inc
dec
arpl
adcb
lock
dec
les
xor
rorb
jbe
sbb
sbb
aad
mov
xchg
jo
test
xchg
xchg
loop
std
xchg
jo
adc
mov
jne
sbb
fstpt
dec
arpl
mov
push
fmull
lods
xlat
fmul
cld
add
pushf
sub
ret
push
push
xchg
insb
out
mov
stos
pop
and
add
gs
std
ret
int3
sbb
pop
push
pop
lret
pop
sbb
repz
xor
inc
fcom
int
bound
xchg
rcrb
jae
leave
lea
mov
pop
rolb
jle
pop
pop
jge
idiv
ljmp
mov
jo
push
push
mov
fimuls
repnz
xchg
std
fldl
or
out
push
ss
arpl
loop
and
jno
fdivrl
popf
add
push
lock
push
mov
mov
popa
cli
std
jge
sahf
sub
mov
gs
subl
cmp
push
je
sbb
pusha
mov
cmp
sbbb
push
pop
push
pop
push
addr16
sub
addr16
imul
ja
lea
fistl
or
pusha
int3
sbb
clc
jge
ds
sbb
jae
jo
lcall
and
xchg
iret
and
sbb
inc
dec
push
imul
pop
or
fmuls
xlat
jp
dec
fldt
jmp
popf
xor
daa
inc
cmp
or
test
jecxz
add
pop
or
pop
adc
inc
into
xor
fcomps
jnp
mov
push
sarb
daa
int3
cli
xchg
pusha
lret
popa
loop
out
push
call
das
cmp
test
movsl
mov
xor
pusha
scas
fmuls
mov
testb
push
inc
stc
mov
push
sub
ficomps
xlat
dec
dec
push
jae
adc
mov
mov
inc
cmp
imul
pop
ret
pop
loop
mov
pop
outsl
pop
push
dec
test
addr16
leave
sub
dec
test
pop
dec
loop
inc
mov
jecxz
xchg
icebp
or
inc
stos
or
cli
lds
inc
xor
adc
adc
mov
inc
adc
es
mov
pop
or
and
or
out
pop
sbb
icebp
or
jno
aas
pusha
das
push
sbb
lea
xchg
mov
sub
xor
mov
and
rorl
push
jle
cmp
and
add
mov
leave
andb
pop
cmp
mov
sbb
outsl
add
pop
sub
insl
push
out
pop
sub
jge
rcr
add
pop
xor
int3
sub
int3
push
add
sub
sbb
fs
mov
inc
mov
mov
sub
imul
icebp
jge
xchg
test
inc
cmp
test
scas
subl
sbb
inc
mov
hlt
lea
pmulhuw
stos
cmp
movsb
add
loopne
in
enter
mov
test
int
jp
jle
enter
and
inc
test
and
push
iret
mov
lods
into
sub
mov
and
mov
dec
aad
and
xor
mov
sub
call
push
call
pop
xchg
inc
lret
jge
mov
js
xchg
jns
jecxz
and
les
fiadds
iret
test
mov
mov
cmc
push
xchg
mov
add
pushf
negb
cltd
cmp
test
inc
push
mov
fldt
ljmp
push
out
dec
push
popa
xor
mov
push
data16
aad
das
fistpll
and
jae
into
les
pop
and
jbe
pop
in
lods
adc
xor
cmpb
popf
outsb
xchg
push
inc
and
sub
push
inc
lods
and
sub
sbb
aad
adc
jge
daa
push
mov
rorl
bound
stos
shl
das
mov
pop
sub
mov
inc
or
insb
divl
cmp
sbb
sub
and
add
xchg
xchg
xchg
movsb
loop
out
jb
pop
dec
jo,pt
sbb
sbb
jns
xchg
aam
into
leave
addr16
jp
sarl
ja
xchg
lcall
jbe
sub
jle
mov
sub
shlb
dec
sbb
push
sbb
bound
in
jmp
arpl
mov
xchg
stos
mov
ud0
push
je
inc
mov
je
fcomp
ja
mov
int3
mov
push
pop
push
faddp
rorl
mov
or
lcall
xchg
adc
add
push
hlt
imul
sbb
jmp
in
int
sub
inc
pusha
xchg
iret
jg
mov
push
xchg
sbb
lahf
mov
adc
into
mov
dec
ret
push
jns
lahf
add
adc
enter
mov
pop
xor
pusha
and
lods
mov
sahf
pop
pushw
add
pop
inc
dec
pushf
xchg
ss
shrl
mov
loope
pop
mov
inc
or
pop
lret
inc
clc
jle
inc
dec
xor
sub
sahf
adcb
ja
rolb
mov
cwtl
lea
xorl
cmp
or
aad
and
xor
sub
and
push
insb
mov
mov
repnz
add
mov
pop
jg
int3
in
or
fistl
into
lods
in
bound
xchg
pop
sbb
movsl
jae
dec
push
sarb
fwait
dec
pushf
inc
or
and
cmpsl
mov
outsl
fwait
dec
movsb
cmp
push
fsubl
pop
and
jae
dec
push
fwait
inc
shlb
cli
jle
adc
imul
ds
and
pop
pushf
repz
mov
mov
push
push
mov
sbb
sub
or
in
jge
mov
divl
sbb
clc
fistps
push
jmp
pop
gs
xor
cmp
jbe
push
pop
add
out
cwtl
mov
add
xor
mov
lods
daa
push
push
cmpb
add
ret
dec
and
cmp
outsb
fxam
je
cwtl
pop
subl
cltd
mov
ret
mov
mov
cmp
pop
sub
clc
gs
jb
bound
xchg
cmp
xchg
jmp
movsb
mov
loope
aad
ficoms
pop
lock
pop
std
in
mov
xor
dec
in
sbb
xchg
sub
scas
in
jecxz
or
stc
cmpl
dec
adc
jno
lods
adc
clc
and
mov
arpl
add
push
ret
es
cmp
test
lret
add
sbb
or
or
flds
stos
push
movsl
xchg
outsl
mov
sub
dec
fidivs
xor
fwait
adc
push
jle
ja
repz
lret
mov
popf
scas
sub
and
repnz
push
adc
into
cli
iret
pushf
lea
jle
mov
adc
loopne
and
add
add
jmp
fstps
jp
mov
popf
js
pop
mov
lahf
mov
and
push
or
dec
mov
cld
ret
divb
test
subps
or
cltd
scas
dec
ljmp
sub
loopne
push
pop
punpckhbw
pushf
xor
mov
in
das
loopne
es
xchg
mov
pop
pop
mov
nop
arpl
fcoms
push
sahf
lahf
dec
test
mov
cmp
inc
out
cwtl
push
dec
push
inc
loope
call
aam
js
and
mov
or
testl
aad
jo
mov
arpl
fistl
adc
dec
dec
xchg
sahf
stos
or
cli
shrl
insb
dec
push
push
jecxz
lret
lcall
sub
stos
push
popa
shl
arpl
icebp
sub
or
fidivs
loope
jo
int
js
mov
fidivrl
out
mov
push
push
std
xchg
add
pop
push
mov
into
xor
lds
ss
fnstsw
lret
dec
push
push
cmp
mov
sub
pushf
xchg
or
loopne
in
scas
insb
xlat
sbb
pop
jo
push
and
adc
mov
jnp
scas
ja,pn
mov
pop
insl
xlat
pushf
or
jae
es
pop
cmp
stos
into
jne
sub
loopne
ret
mov
mov
cmp
jne
cmpsl
aam
aaa
push
push
jg
test
mov
idivb
add
sti
xlat
sub
cmp
inc
pusha
xor
jmp
cmp
cmp
popa
repz
gs
xchg
je
test
mov
loopne
or
cmpsl
loope
lock
pop
sub
lea
xchg
jg
shrl
jl
jmp
sub
and
xchg
scas
stc
lds
mov
xlat
fildll
lock
or
in
insl
sub
xchg
test
in
cmp
aas
loopne
add
xchg
jle
or
mov
jbe
xlat
loop
aaa
push
std
dec
fdivrl
sbb
mov
push
add
ljmp
es
push
pop
xor
inc
inc
mov
sub
subl
push
negb
cmp
rcr
xor
scas
fmul
jns
push
xor
dec
je
rclb
mov
lods
adc
and
push
mov
shrb
cmp
pop
inc
shlb
repz
jbe
aas
jbe
iret
jae
inc
mov
movsl
push
push
lock
jne
dec
pop
or
xorl
xlat
push
lods
inc
cltd
inc
mov
lret
loope
lods
inc
add
imul
shl
mov
adc
push
cmp
and
insb
sub
bound
jae
xorl
inc
into
mov
pop
mov
dec
data16
sahf
vmwrite
clc
outsl
enter
mov
mov
xchg
sbb
dec
into
clc
sub
sbb
pop
ret
lret
push
pop
and
xchg
andb
testb
xor
adc
xor
and
lret
or
loopne
jo
fimull
add
ret
dec
lea
sti
stc
pop
xchg
arpl
scas
lock
shlb
leave
pusha
sbb
jle
push
hlt
stc
cltd
mov
out
mov
mov
sub
imul
jnp
inc
leave
int3
mov
lds
fistpl
cmc
mov
mov
pop
add
pop
popa
cld
sahf
xchg
inc
lret
pushf
dec
xchg
and
insb
push
scas
fsubr
inc
fs
std
mov
mov
addr16
sub
push
dec
sbb
icebp
push
sarl
add
add
mov
inc
mov
jl
mov
cmp
fcmovnbe
popa
sbb
stos
insl
out
aaa
push
cmpsb
xor
lahf
repz
je
inc
jo
popf
divb
pop
cli
and
pop
ja
orl
dec
xchg
sbb
xchg
or
popa
mov
cli
and
lea
add
mov
ja
shrl
mov
cmpsl
jae
pop
pop
ja
sbb
push
cld
push
scas
mov
sbb
mov
aad
cld
mov
and
and
mov
mov
xchg
jae
shl
les
inc
les
push
or
das
mov
jno
sub
xchg
jnp
shrb
out
dec
fs
dec
jae
cwtl
in
cmp
push
adc
xchg
ret
outsb
in
pop
jl
shll
fwait
ja
mov
add
addb
or
add
add
cwtl
icebp
iret
stos
or
cmp
adc
jns
aaa
mov
and
inc
cmpsb
daa
jns
sub
and
mov
scas
shll
cmc
mov
mov
iret
test
test
and
push
mov
jle
negl
inc
cld
sbb
adc
daa
loopne
xchg
or
mov
pop
pop
lea
mov
aad
and
rorl
mov
pop
xor
cmp
push
push
pop
mov
lods
fs
sub
mov
push
pop
pop
rcll
scas
xchg
int3
mov
jb
inc
jbe
scas
addb
or
cmp
mov
sbb
leave
ja
dec
adc
roll
adc
xchg
mov
push
es
cwtl
rol
push
mov
lea
test
inc
lret
mov
xlat
xchg
cmc
into
clc
mov
sbb
je
inc
aam
sbb
jecxz
lahf
cmpb
xor
aam
mov
lods
in
xchg
rolb
andb
cmpsl
int3
stos
push
push
sbb
push
idiv
pop
xchg
es
sbb
test
and
lods
xlat
mov
fisttpll
add
sbb
aas
mov
ja
repz
test
jge
jns
and
lods
das
mov
inc
lods
inc
inc
sbb
lods
lret
cmp
dec
cmp
mov
sbb
das
loope
xchg
stos
imul
sub
push
xlat
sub
cmc
pop
pushf
jne
mov
dec
not
pushf
inc
rolb
adc
push
ljmp
cwtl
jbe
sub
jb
popf
hlt
jb
pop
xlat
jle
outsl
xor
test
cmp
xchg
fs
or
cs
jmp
xlat
adc
mov
mov
scas
xor
dec
sbb
in
xor
pop
xchg
push
push
les
mov
mov
js
outsl
rorb
pop
call
loopne
add
adc
lods
test
xchg
jne
ret
sbb
fisttpll
mov
andb
into
or
inc
insb
inc
cmc
imul
mov
xchg
add
nop
cs
scas
mov
lcall
xor
or
mov
cmp
jbe
dec
jp
push
repnz
xchg
js,pt
inc
jg
push
dec
stos
xor
rcll
sbb
inc
dec
pop
ja
cmp
enter
xlat
addr16
clc
or
out
cmp
pushf
lock
mov
icebp
test
fwait
orb
push
std
stos
mov
sub
sbb
xor
inc
adc
scas
outsb
sbb
mov
cmp
in
pop
sub
je
popa
ja
jbe
dec
inc
gs
movsb
dec
add
inc
jge
mov
mov
cmpsb
test
out
outsb
pop
sub
adc
mov
inc
clc
mov
das
cld
dec
js
mov
pop
dec
inc
sahf
andb
pop
or
adc
in
iret
push
push
movsl
xchg
jle
enter
mov
int
sbb
push
aas
push
call
dec
jg
lods
ret
mov
insb
xchg
sti
lret
mov
cmpsb
xor
mov
shrl
xchg
xor
ret
jns
or
int
pop
or
cmpsl
ror
mov
inc
add
repz
xor
hlt
push
nop
fnstenv
repz
arpl
lods
inc
jle
push
jmp
lret
sbb
add
movsb
jb
pop
pop
pop
aaa
lods
push
in
insl
mov
jle
test
arpl
inc
sub
xchg
xchg
xchg
out
sub
insl
fwait
or
orl
out
adc
cmp
sbb
scas
xchg
sub
inc
daa
addb
xor
ret
xchg
pop
pop
dec
cmp
out
xor
mov
pop
fwait
mov
cmp
cmp
sbb
into
dec
callw
mov
inc
cmp
pop
dec
mov
out
cmp
mov
imul
mov
pop
les
push
mov
jl
pop
loopne
and
call
inc
inc
mov
in
out
push
in
shlb
repz
stc
psrad
cmp
scas
cs
mov
adc
imul
push
lods
mov
sbb
xor
insl
push
out
cmpl
out
push
or
xchg
mov
out
jne
or
jbe
mull
pop
dec
lock
jo
lods
int
cmc
andl
div
fdivs
or
ret
mov
cmp
mov
mov
subb
push
out
lret
push
scas
push
pop
sbb
adc
pop
and
hlt
loop
mov
jl
fwait
sub
movb
je
arpl
sub
pop
or
icebp
fld
inc
and
ja
and
jg
aaa
ljmp
pop
rcll
jg
pop
std
mov
and
arpl
or
std
in
cmp
cmpsl
fcoms
daa
outsl
cmp
push
mov
pop
insb
imul
test
flds
ljmp
pop
fidivrl
jl
loop
test
push
pop
mov
ljmp
inc
movsl
or
or
sub
cltd
xorb
das
cmpsl
lock
xor
imul
jno
pop
push
pop
std
inc
push
popa
cld
dec
xchg
fucomp
fisubl
icebp
mov
jae
inc
test
sub
xchg
stc
pop
fistps
xchg
pop
ret
loope
loope
pop
mov
pop
push
pop
push
js
adcl
inc
mov
xchg
fcomps
mov
mov
shr
add
or
and
out
imul
mov
mov
cmp
inc
fdiv
iret
loope
mov
mov
adcl
popf
or
mov
imul
mov
pop
icebp
adc
jno
adc
adc
sti
out
ret
dec
es
popf
popa
das
lea
shlb
clc
xor
gs
lds
sbb
rolb
rclb
daa
mov
ja
push
nop
dec
leave
roll
xchg
cmpsl
adc
repnz
cmc
sbb
jmp
popf
push
addb
lea
jo
push
dec
jg
sbbb
es
mov
andl
std
jecxz
xchg
clc
xchg
dec
cmpl
push
inc
scas
nopl
call
in
lcall
es
pop
add
adc
adc
rcll
decb
sub
arpl
insl
push
insl
xor
movsl
mov
popf
inc
rolb
lret
cmc
cld
adc
push
std
rcll
stc
sbb
push
sbbl
and
cltd
nop
cmpsl
in
push
lret
jmp
add
cwtl
xchg
jmp
sub
ljmp
sub
and
insb
jo
stos
xor
xor
cmp
repnz
push
outsb
sbb
sub
loop
jp
jae
push
inc
shlb
and
jl
pop
mov
cmc
int
mov
pusha
xor
lret
sub
imul
repz
clc
imul
ljmp
sub
ss
inc
aaa
sub
xlat
push
and
lock
fbstp
std
add
std
dec
push
xchg
mov
sbb
imul
xorl
push
push
fildll
jbe
test
js
mov
mov
movsl
fstps
loope
xchg
push
insl
fnsave
clc
cmp
mov
jmp
or
fstps
push
fistpll
xchg
fiaddl
jae
test
xor
imul
mov
mov
jnp
scas
movsb
std
jno
add
jge
push
imul
rclb
pop
xor
fdivrp
ljmp
sub
mov
add
push
jno
jo
inc
mov
sbb
mov
sub
loopne
add
outsl
add
cmpsb
push
scas
xchg
into
call
cltd
push
movsb
push
cmpsb
mov
cmp
pop
jns
jle
or
out
pop
jmp
fiadds
adc
adcl
and
dec
pushf
dec
push
pop
mov
pop
shlb
cmpsb
cli
pop
dec
jp
iret
fsubrs
int
outsl
sbb
mov
jl
lea
or
xchg
lea
sbb
xchg
mov
outsl
inc
lods
pop
inc
mov
or
inc
mov
test
call
cmp
mov
xor
pminsw
mov
pop
add
sbb
push
xchg
and
lods
aaa
mov
or
pop
xchg
mov
sbb
lahf
pop
aaa
inc
xor
xchg
dec
and
ret
pushf
inc
or
xchg
clc
int
pushf
nop
jge
mov
jmp
inc
in
iret
xor
mov
sub
lods
jne
ret
mov
sahf
imul
lret
or
jecxz
xlat
pop
mov
fistpll
fisttpl
push
popf
mov
addl
jbe
add
lret
test
movsl
shll
bound
mov
pop
std
inc
push
std
dec
xchg
into
jp
sti
xor
movsb
ret
lea
lahf
lret
pop
das
add
aad
fcomps
xor
mov
sahf
sbb
mov
pop
fwait
test
das
xchg
jnp
sarl
jl
jge
movsl
nop
pop
inc
mov
dec
arpl
lds
mov
mov
ds
jle
adcb
out
insl
inc
push
inc
outsb
je
inc
movsb
cmpb
mov
mov
lock
push
lahf
xor
or
enter
lods
cltd
cmpsb
shr
popf
jb
pop
cmpsl
pushf
loopne
pop
mov
pop
push
in
inc
xchg
pusha
das
xchg
test
sbb
pop
xchg
xchg
dec
xor
jo
dec
sbb
scas
in
imul
out
jbe
lret
fs
and
popa
cs
jno
popa
imul
cli
xchg
add
dec
jp
movb
daa
mov
mov
dec
sub
je
pop
fimuls
movsl
enter
in
cmp
jno
movsb
aaa
or
aas
dec
insl
xchg
popa
xchg
dec
xchg
mov
test
xchg
jmp
add
imul
inc
jnp
xchg
mov
cmp
cmc
repnz
inc
mov
mov
mov
xchg
cmc
addb
subl
add
inc
and
outsl
es
dec
adc
pop
aad
jmp
xor
jo
sarl
xchg
in
daa
jle
and
arpl
jmp
jno
shrl
mov
cmc
fldl
fs
mov
sbb
mov
mov
sahf
push
out
orl
and
push
mov
repz
sbb
add
mov
cwtl
test
add
clc
inc
lea
pop
sub
fsqrt
pushf
push
mov
pusha
lock
mov
lock
test
cld
popa
jmp
xchg
lods
clc
mov
ja
mov
out
in
or
sbb
xchg
sub
pop
sbb
lods
jbe
push
test
xchg
in
mov
sbb
jb
xchg
mov
jbe
shr
sete
ds
push
mov
lods
xchg
rol
jb
cmp
sub
popf
lahf
test
outsl
lods
subb
mov
jno
xchg
jno
pop
xlat
mov
enter
ret
ficomps
pop
test
and
mov
jb
jns
test
out
enter
je
ds
fxch
push
insb
dec
mov
jae
cmp
adc
pcmpeqw
lods
loop
shr
les
cld
int
adc
and
add
aaa
mov
stos
push
subb
adcb
jp
std
cmp
ret
idivb
gs
sub
adc
inc
gs
scas
xchg
stos
ret
or
out
jo
pop
les
xor
js
ds
push
lcall
cltd
inc
es
mov
inc
jae
loopne
xchg
pop
fadd
and
ljmp
add
repnz
iret
negb
fmull
sbb
inc
mov
inc
add
popf
sbb
jae
cmp
pop
lahf
fisttpll
mov
ljmp
jbe
je
cmp
xchg
sbb
sbb
into
cmp
jp
jecxz
or
fs
rolw
out
out
push
pop
adc
ljmp
mov
and
outsl
sub
jo
xor
mov
jae
jle
push
cmp
sub
xchg
pop
das
jnp
insl
push
push
sti
ret
in
cltd
jne
in
add
mov
adc
enter
js
pop
lcall
rcrl
mov
inc
pop
or
lahf
popa
into
sub
sti
nop
mov
not
xchg
dec
jae
inc
rol
inc
frstor
out
cmp
mov
mov
inc
imul
mov
dec
push
mov
jmp
mov
dec
pop
cvttps2pi
loopne
lds
mov
frstor
sbb
fsubs
sbb
xchg
aaa
rorb
jp
jne
mov
jp
stos
sbb
das
icebp
or
std
int
call
iret
sub
xchg
test
cltd
jmp
pop
jno
jnp
inc
jne
pop
mov
push
cmp
inc
out
adc
pushf
out
popf
cmp
push
push
dec
adc
std
jns
je
push
inc
mov
testb
pop
popw
sub
shll
or
iret
addr16
in
xlat
icebp
ret
out
in
out
jp
adc
add
xchg
clc
and
lahf
cs
in
mov
dec
inc
iret
ja
popf
and
rclb
mov
mov
jns
xchg
and
and
rcrl
in
scas
push
nop
iret
decl
sub
fdivrs
iret
xor
sub
mov
imul
mov
fcoms
fcmovbe
push
aam
popa
vmaxps
int
rclb
mov
inc
rclb
push
pop
adc
jnp
into
xor
shl
xor
mov
inc
imul
popa
push
sub
ds
xor
push
pop
pop
adc
cli
mov
xchg
aaa
sub
fsubrs
fld
or
jecxz
mov
push
outsb
mov
call
sahf
lea
or
in
imul
scas
cmp
and
imul
push
shrl
jne
mov
sahf
sub
adc
pop
loop
out
mov
aam
jle
and
in
sbb
loope
cmp
sub
fdivrl
mov
rolb
negb
rcll
ljmp
xchg
fldcw
js
or
nop
cmp
fimull
mov
insb
dec
in
mov
mov
xchg
add
jp
or
jmp
xchg
inc
aam
jp
fsubrl
inc
in
push
in
and
inc
or
push
inc
adc
data16
pop
into
insb
in
push
aad
clc
ret
inc
cmp
xorl
pop
push
ds
out
out
pop
fidivrl
sarl
std
cwtl
data16
mov
jg
jmp
and
cmp
jb
pop
and
xor
inc
jmp
imul
sub
sar
repnz
rcrb
test
pop
shll
jl
aas
shll
pop
jle
xchg
cli
inc
jae
leave
inc
lcall
cmp
mov
add
push
and
js
dec
mov
lret
mov
jae
add
dec
inc
scas
push
inc
push
cmpb
cmp
out
jne
push
cwtl
inc
lock
or
std
push
jbe
xor
lea
jg
mov
in
outsl
out
push
lret
cld
je
cmp
test
js
adc
enter
addr16
imul
pop
mov
xor
js
jl
push
cmp
fucom
jne
scas
pushf
stos
mov
mov
das
les
push
xchg
xlat
das
loop
cld
or
mov
nop
xchg
mov
cmp
cmp
outsl
outsl
and
pop
sub
cmp
jnp
popa
aam
cmpb
addr16
les
add
data16
loop
mov
dec
ficomps
daa
rorb
xor
xchg
punpcklbw
movsl
xor
or
pop
int3
cli
nop
lea
mov
push
notb
lret
cli
insb
or
add
ret
icebp
mov
pop
mov
push
xchg
xchg
sbb
fstcw
loopne
lcall
xor
jne
sbb
mov
xchg
add
mov
cmp
mov
inc
scas
dec
inc
sahf
cld
pop
arpl
icebp
and
test
jmp
mov
xchg
pop
sub
cmpsb
das
or
imul
sbb
push
test
imul
adc
jl
xor
and
loope
enter
xor
push
insl
outsl
lcall
imul
mov
cs
sub
pmulhuw
jle
movsl
mov
xor
std
xor
jecxz
mov
outsb
repnz
mov
cmpb
pop
mov
int
jb
lret
cwtl
in
cmpl
insb
cmp
pop
jbe
pop
enter
fsubr
cmp
inc
pop
or
inc
arpl
xor
roll
clc
es
mov
divb
scas
in
dec
testl
ja
cwtl
mov
jbe
clc
xor
mov
cmp
icebp
repnz
lret
jbe
lea
lods
negl
jl
scas
cmc
pop
sarb
ret
inc
insb
push
adc
or
ss
mov
mov
push
sar
lcall
sub
mov
push
insb
out
mov
js
iret
dec
mov
jne,pt
push
sahf
add
mov
or
sarl
dec
clc
or
push
enter
sti
sbb
pop
jp
jp
push
les
scas
leave
push
jle
pop
dec
jbe
leave
adc
test
sbbb
push
std
lods
jo
inc
out
dec
mov
mov
movsl
xlat
bound
scas
mov
push
repz
pop
xchg
xchg
jmp
in
push
xchg
loop
mov
arpl
lret
jmp
loope
lock
ja
push
xchg
sub
add
cmp
or
sub
cmpsl
test
popf
cli
divl
rorl
test
xor
aad
mov
fnstcw
fwait
mov
icebp
jg
icebp
push
bound
aam
in
movsb
mov
loopne
pop
pop
leave
scas
xchg
inc
aad
test
and
inc
xor
xor
rcrl
fnstenv
loop
subl
xchg
outsl
out
ficompl
or
addb
ljmp
in
ret
push
in
mov
inc
xor
xchg
mov
cltd
mov
fmulp
or
sbb
push
lahf
adc
pusha
incb
jg
push
xor
xchg
sbb
pop
fdivr
cwtl
adc
jo
add
aaa
pop
mov
fldt
cmp
loopne
shrl
rcll
insb
fidivs
pop
jbe
inc
cld
mov
and
jo
mov
push
adc
out
cmpsl
jge
sbb
inc
lret
scas
dec
and
mov
push
fwait
cwtl
rcrb
iret
push
scas
fsub
incl
push
mov
xchg
xor
rorb
outsb
outsl
mov
adc
pop
mov
adc
test
and
lock
adc
mov
xor
repz
mov
jbe
push
sub
cltd
xor
push
push
and
rcr
testl
xchg
out
lret
leave
in
jbe
out
mov
cltd
movsb
jecxz
lea
outsl
or
hlt
sarb
out
sub
jp
fistpll
sub
add
icebp
aad
aas
fwait
aad
shl
aad
push
sbb
dec
cmpsl
inc
std
adc
stc
jns
insb
mov
call
lods
lods
xchg
stc
or
addl
dec
out
cwtl
cmp
iret
stos
cwtl
or
orb
fcmovnu
cli
out
outsb
stos
into
pop
movl
nop
into
js
add
mov
sbb
mov
dec
inc
xchg
mov
ljmp
add
mov
add
gs
xchg
decl
add
jne
sbb
test
pop
xlat
mov
and
test
loop
test
dec
sarb
popa
and
andl
outsl
int3
cli
dec
enter
sti
mov
inc
nop
fdivl
pop
ljmp
xor
jb
call
and
and
aam
sub
mov
sbb
dec
or
mov
gs
mov
add
mov
push
stos
jne
out
fdivr
shlb
add
test
push
add
inc
or
lods
dec
dec
inc
inc
inc
sahf
sahf
lea
pop
inc
loopne
pusha
scas
sub
not
jl
mov
jbe
sbb
repz
xor
pop
push
cmpb
arpl
mov
rclb
mov
mov
fs
mov
pop
jmp
dec
xchg
mov
aas
rolb
inc
xchg
mov
sahf
lahf
lcall
in
jns
cltd
les
je
lcall
stos
cli
cmp
mov
jle
divps
lcall
in
jle
push
lock
notb
jns
mov
js
push
mov
push
mov
xor
aad
lea
sbb
pusha
iret
push
jecxz
jnp
cmp
xchg
inc
dec
xchg
pusha
jbe
dec
loop
test
jne
mov
nop
imul
sub
lret
aaa
ja
scas
cld
loop
in
jmp
xor
popa
ret
rclb
pop
push
pop
and
and
outsl
push
mov
sub
sbb
cmpsl
out
les
mov
ljmp
sub
into
xor
int
sahf
xchg
in
stos
std
sbb
fsubr
mul
jo
sub
sbbb
fs
pop
fidivs
dec
in
stos
and
ja
inc
sub
inc
and
fucomi
insl
pop
jo
jne
into
dec
ljmp
push
pop
pusha
incl
xor
test
jge
dec
push
loopne
mov
ret
fiadds
jbe
or
out
jne
ljmp
ret
jo
int
mov
shll
loope
les
fistps
lock
xchg
push
mov
mov
gs
jae
mov
cld
leave
push
push
or
scas
sub
shlb
inc
or
push
shlb
fcomp
in
fnsave
xor
lods
xor
imul
adc
pop
iret
out
add
imul
bound
loopne
testb
cmp
stos
imul
imul
inc
fstpt
and
dec
inc
cmpsb
loope
aas
arpl
push
pop
jb
mov
xchg
push
pop
cmp
in
and
add
pop
dec
icebp
lods
pop
sahf
inc
in
mov
dec
jg
xchg
jecxz
mov
imul
push
dec
lcall
xchg
orl
loop
jge
loop
bound
fnstcw
scas
xchg
fdivp
out
xchg
cmp
push
bound
leave
mov
adc
xorb
push
das
pop
les
xchg
mov
ja
sub
in
cvtpi2ps
cmovnp
pushf
xchg
pop
xchg
or
pop
fidivrs
push
fidivl
lods
cmp
hlt
or
sysenter
lret
je
mov
and
clc
pop
sbb
push
lcall
mov
or
add
out
push
or
dec
pop
lret
pop
pusha
sub
mov
stc
int
jecxz
mov
outsl
jns
jl
out
jns
pop
mov
popa
jmp
xchg
sub
sbb
ja
cmp
std
mov
dec
stos
cmpsl
dec
inc
and
mov
sahf
test
les
cmc
out
pusha
sbb
sub
mov
push
bound
ss
addr16
out
xchg
sbb
or
ja
cwtl
fimull
and
push
dec
mov
cmpb
call
cs
call
mov
cwtl
movsb
sub
lret
test
in
sub
lods
dec
jbe
inc
push
push
es
cmp
xlat
lods
mov
jne
pop
jo
sbb
fists
jp
call
jno
inc
rorb
and
sti
xchg
mov
sbb
out
pop
push
push
mov
or
push
sbb
call
pusha
sub
fildl
dec
bound
lcall
mov
out
lret
movsl
imul
sar
lds
scas
test
flds
fldt
dec
inc
jmp
push
rol
xchg
push
push
mov
aam
xchg
out
cwtl
lret
jnp
or
and
aas
insl
pop
aas
ljmp
int
sub
test
inc
push
xor
pusha
sbb
cmp
jae
xor
xorb
dec
dec
push
jecxz
inc
rorb
rorb
jge
lock
xchg
pushf
int
repnz
mov
inc
xchg
pop
xchg
xchg
mov
dec
lods
dec
jbe
sub
out
cwtl
add
cmp
int
cli
pop
cmp
sbbl
pop
insb
ss
cwtl
lret
sbb
pop
mov
push
stos
jl
test
faddl
sub
dec
dec
push
xor
sub
cwtl
ss
notb
and
lods
or
sbb
or
les
lea
scas
in
xchg
in
das
int3
cmpsl
jae
js
xchg
mov
jecxz
std
push
xchg
and
enter
push
jo
dec
xor
cmp
dec
cmpsl
mov
sbb
mov
jecxz
lods
cmpsb
mov
popf
fnstsw
adc
add
jg
das
inc
and
out
mov
cmpb
pop
and
xor
sbb
int3
rcrl
sti
mov
sub
sub
pop
call
xor
ljmp
pop
cwtl
ret
pop
sbb
repz
sbb
mov
xor
fs
arpl
lea
cmp
xchg
cwtl
adc
ret
pop
and
sub
and
xchg
cmc
cs
test
mov
jecxz
xor
movl
sub
cmp
pop
loop
jno
xor
popa
mov
std
push
push
pop
enter
test
add
mov
ljmp
inc
stos
sub
cmp
mov
xor
jecxz
xchg
inc
inc
orb
sti
or
int3
cli
cmp
test
mov
push
imul
dec
adc
lods
nop
test
mov
pop
lds
inc
inc
sbb
mov
mov
std
imul
movsl
xorb
mov
mov
cs
mov
cmc
xor
cld
je
dec
mov
orl
enter
imul
cld
call
lock
orb
test
dec
dec
mov
push
mov
push
ja
xlat
jle
lods
iret
mov
and
adc
fs
sbb
mov
fldcw
mov
mov
add
sbb
sub
or
into
pop
dec
pop
mov
mov
mov
xchg
pop
pushf
outsl
dec
stos
mov
jbe
or
sbb
sub
stos
mov
in
sub
sahf
mov
xor
sub
sbb
ret
dec
nop
push
adc
outsl
mov
outsb
dec
push
pop
lret
add
or
mov
mov
pop
jmp
push
mov
mov
xchg
repz
sub
xlat
lods
mov
dec
pop
push
push
xlat
ror
mov
jae
les
sub
insl
sub
inc
pop
sub
lret
push
pop
inc
lret
subb
movsb
and
and
cmp
inc
clc
gs
mov
test
addr16
sub
push
mov
dec
cmp
lods
mov
push
scas
mov
and
push
add
int3
test
mov
les
push
mov
mov
push
and
mov
and
idivl
loop
mov
je
jnp
js
mov
ja
jae
lret
or
inc
and
mov
push
xchg
scas
mov
and
jae
pop
push
insl
mov
rclb
inc
test
jne
pop
push
insl
fmuls
sub
inc
push
push
jecxz
mov
sbbb
inc
cmp
push
mov
dec
fistps
add
dec
sbb
dec
inc
push
jae
mov
fcoms
push
loope
js
xlat
pusha
inc
sbb
jo
pop
insl
inc
sahf
stos
scas
test
add
decb
dec
lea
lock
xor
mov
into
push
negb
sub
movsb
sub
xlat
leave
dec
xchg
cmp
insl
add
movsb
je
subb
ret
push
dec
aaa
cmpsl
lcall
icebp
adc
outsl
pop
insb
ljmp
xor
pop
aas
mov
adc
cmp
add
push
cli
lods
notl
push
jno
cmp
inc
shlb
je
cli
xorl
jg
or
outsb
bound
cmp
shlb
loop
out
cld
int
jns
push
divl
fists
jg
xor
cwtl
mov
sti
cmp
cmp
adc
outsl
sbb
out
rclb
xchg
mov
fs
loope
lahf
cs
je
inc
jb
sub
sub
pop
outsb
cmp
push
scas
jecxz
xor
clc
push
rorb
pop
lock
fcompl
mov
sbb
sub
push
fiaddl
pop
and
imul
fiadds
add
and
lea
adc
insl
and
or
js
mov
cmp
mov
je
repnz
aas
xor
pop
xchg
mov
lret
add
ds
mov
cmpsb
nop
std
adc
mov
fwait
fwait
push
add
adc
enter
daa
in
mov
shrl
add
test
jo
testb
push
fwait
or
sbb
jge
jg
pop
xor
lods
pop
pop
xor
out
outsb
push
pop
stos
or
lods
mov
and
ja
popf
nop
faddp
sub
mov
aas
imulb
lods
pop
inc
icebp
bound
sbb
and
push
pop
cwtl
xchg
sub
test
push
call
negl
xor
sub
andb
lret
out
jae
incl
sub
andl
in
aam
lods
mov
clc
aaa
aam
and
sbb
hlt
sbb
scas
mov
cs
pop
lock
jbe
xchg
push
cld
sbbl
sbb
fisttpl
cli
cwtl
mov
les
fidivs
into
add
and
pop
push
mov
mov
push
ret
roll
or
dec
pop
mov
push
adc
into
jae
push
out
mov
dec
jle
xor
aam
cmp
xchg
mov
inc
ret
orb
jl
int3
push
das
cwtl
dec
jns
ror
out
sahf
repz
fnstcw
in
mov
in
dec
jbe
mov
in
pop
into
pop
popa
mov
pushf
arpl
mov
scas
cmc
mov
jbe
das
mov
push
dec
fdivr
pop
sub
push
js
xor
and
jae
sbb
xor
leave
repz
mov
testb
fnsave
repnz
fwait
jo
dec
and
insb
and
stos
std
bound
rcrl
push
ja
jbe
mov
ljmp
lods
fists
ss
rclb
test
out
out
sub
imul
jbe
pop
mov
cmp
lds
nop
into
sub
jp
and
in
cmc
movb
out
jns
out
out
push
ret
loop
jns
rorb
dec
cli
in
adc
js
inc
gs
cwtl
leave
es
into
in
or
jne
xor
lods
rolb
jno
cmp
cmpsb
out
push
push
test
adc
mov
imul
popf
je
adc
pushf
push
int
dec
dec
push
loope
imul
rorb
sub
movsl
mov
jae
shrl
inc
enter
iret
and
ret
es
jbe
sahf
xchg
cmpsb
leave
and
mov
dec
mov
aam
cmp
cmc
xor
pop
fwait
int3
fbld
sub
hlt
je
ljmp
push
loopne
sbbl
mov
es
enter
adc
adc
mov
inc
mov
ret
jno
push
outsb
add
xchg
sub
push
cmp
push
dec
leave
pop
inc
stc
mov
adcb
mov
pop
adc
dec
push
std
xor
repnz
or
pop
cli
xchg
jno
mov
jle
pushf
sbb
xor
push
adc
lock
rcrb
roll
cmp
ret
xor
cmp
aad
mov
cs
addr16
test
rolb
outsl
nop
dec
push
shr
fwait
xchg
js
addl
cmp
sub
xorb
stc
xor
jno
aam
mov
bound
xchg
pop
in
push
adc
mov
add
fcmovnbe
rcrb
bound
iret
sbb
std
ljmp
shll
jmp
xchg
lret
cmp
xor
cwtl
das
dec
jmp
push
xor
test
mov
add
rcrb
or
inc
jp
js
dec
mov
call
add
mov
add
stos
push
or
sbb
rcrb
repz
inc
and
fistpl
stos
jp
push
dec
adc
and
xchg
out
outsb
sub
xor
dec
mov
bound
or
icebp
lea
icebp
or
insb
pop
negl
int
lahf
loopne
mov
dec
push
arpl
and
aas
push
sbb
imull
rcr
sti
iret
jmp
stc
add
xchg
mov
pop
mov
push
inc
jle
inc
pop
and
push
mov
stos
bound
js
dec
mov
sub
iret
cmp
dec
add
xchg
xor
xor
sbb
sbb
jle
or
sub
sub
pop
dec
out
repz
mov
divl
out
sti
leave
hlt
lret
mov
push
pand
in
sbb
push
dec
sbb
xor
inc
add
ss
bound
popa
jmp
enter
dec
mov
dec
pop
jne
cmp
in
insb
das
pop
and
orb
je
dec
jbe
add
popa
inc
iret
scas
xchg
mov
stos
mov
xchg
mov
repz
paddd
scas
icebp
popl
js
mov
and
or
xor
or
mov
test
mov
in
xor
addb
cmp
inc
enter
aas
jne
lods
push
xor
jns
push
arpl
xchg
mov
pusha
mov
jmp
xchg
push
and
cmp
roll
or
mov
mov
inc
mov
repz
ret
rorb
rcl
rcrl
arpl
ret
or
clc
push
imull
cmpsb
popa
lahf
jo
push
and
xor
shlb
test
lea
imul
imul
jo
rorl
push
mov
in
sub
cmpsl
push
sti
sti
std
push
lret
gs
xchg
in
aad
and
mov
aad
cmp
mov
in
mov
in
lock
test
sbb
popl
or
xor
mov
inc
lret
fbld
or
pop
cwtl
ja
cs
test
lea
and
outsl
xor
lea
pop
popf
in
or
adc
and
mov
sub
dec
lret
mov
inc
rcrb
in
mov
test
mov
inc
and
cmp
adc
fistps
fstpt
mov
mov
pop
or
lds
fistpll
fnstcw
xor
push
mov
pop
out
xchg
jnp
sbb
shl
mov
jge
mov
push
mov
data16
and
fndisi(8087
popf
sub
cmp
iret
sbb
jns
push
sahf
sub
dec
fdivrl
test
imul
pop
adc
daa
test
imul
lds
fwait
xchg
pop
outsb
andb
fbstp
jge
cwtl
out
push
out
imull
push
scas
push
dec
or
push
adc
lcall
fcompl
fnstsw
test
aaa
push
dec
inc
fnstenv
sti
cmp
enter
push
push
cli
add
ja
xor
lods
inc
inc
jmp
and
jne
jge
xchg
sbb
jmp
sub
jbe
jle
jp
repnz
cmp
es
cwtl
cli
lods
aaa
fsubrl
subl
cmp
iret
js
iret
push
js
jne
mov
or
add
xchg
enter
into
push
or
xchg
dec
mov
addb
or
fdivrl
pop
in
push
adc
scas
pop
sbb
fsubs
dec
cld
movsb
subb
sbbb
scas
nop
lock
inc
ds
loope
les
jp
lcall
jmp
test
xor
leave
jecxz
das
fbstp
push
arpl
cmp
sbb
mov
xchg
sbb
jmp
leave
dec
jl
ja
xchg
mov
push
imul
sub
pop
mov
sub
jns
out
add
cli
jno
mov
pop
ret
fwait
lahf
cmp
pushf
xchg
ljmp
mov
cmp
jbe
push
sub
cltd
push
or
into
lret
bound
push
lods
xor
push
cwtl
sbb
cmpl
or
setb
and
cli
sub
inc
cmp
add
mov
xchg
cmpsl
push
xchg
fxch
cwtl
stc
sbb
jbe
lods
dec
or
pop
xor
clc
mov
test
fwait
loope
jo
dec
scas
negb
and
xor
push
mov
pop
inc
xor
in
test
mov
add
jge
test
dec
popf
adc
and
jl
jbe
mov
sahf
cmpsb
add
push
jo
inc
testl
movsl
pop
adcb
outsl
sahf
bound
push
sub
lcall
scas
or
inc
and
push
out
mov
icebp
dec
cwtl
cmpl
dec
xor
imul
jp
jns
jno
mov
ret
jl
jne
push
mov
mov
ret
into
mov
push
iret
das
fs
mov
int3
popa
dec
sub
push
bound
in
dec
test
cmp
bnd
sbb
out
bound
xor
xchg
aam
into
or
and
mov
sub
jns
sub
jle
sub
test
icebp
in
add
iret
into
dec
mov
xor
cmp
mov
aam
ds
stos
ljmp
pop
out
inc
insb
mov
scas
lods
cmp
dec
or
jb
sub
mov
mov
xchg
cmp
incb
and
pop
mov
push
push
inc
dec
addr16
pop
fiaddl
cs
movsb
sbb
mov
test
sbb
repnz
imulb
dec
adc
cs
push
insb
fstpt
and
stos
andb
jmp
add
xor
mov
push
cmpl
in
mov
xlat
nop
push
out
outsb
or
add
dec
xor
loop
adc
movsb
xchg
adc
push
cltd
scas
mov
rcrl
les
cmp
sbb
rep
js
repnz
xchg
shll
pop
sub
or
push
jle
mov
loop
mov
cltd
sub
fldt
mov
mov
testb
push
out
xchg
in
push
cs
push
mov
sub
jbe
lret
and
out
sub
or
jle
xchg
fnsave
sub
and
mov
xchg
mov
and
lret
ficomps
xchg
in
mov
jp
sub
sub
sbb
jg
add
mov
xor
fstpl
fldt
add
dec
jl
jns
fnsave
add
sbb
adc
aam
cmpb
mov
push
test
xorb
inc
xchg
lea
inc
mov
cld
xor
loopne
popf
inc
xchg
out
mov
out
pop
shll
cmovbe
mov
jne
imul
push
pop
sbb
dec
pop
arpl
ret
ucomiss
add
sti
mov
cld
jo
cmp
popf
cli
enter
shrl
and
into
jb
jmp
andb
xchg
lods
inc
mov
cwtl
jns
cmp
stc
or
inc
imul
adc
and
xor
cmpsl
sub
fisubrl
jae
loopne
mov
cmpsl
and
hlt
sub
mov
fcoms
and
xchg
cmc
dec
fwait
test
mov
in
jbe
ja
addb
cmp
mov
xor
jmp
lret
rolb
insb
lcall
loope
out
jg
or
sbb
and
cmc
mov
test
xlat
push
lcall
fdivrs
and
mov
jl
sbb
out
out
mov
out
lods
dec
adc
sub
je
xchg
mov
ret
cmp
mov
mov
scas
jge
mov
sahf
and
inc
inc
arpl
lea
ljmp
aam
repz
fistpll
jo
pop
fcoml
mov
out
xor
ja
jle
loopne
inc
adc
sbb
sub
das
sub
pop
mov
mov
push
cli
xchg
mov
inc
loopne
cmp
cwtl
mov
test
dec
cmpsl
jmp
popa
enter
jp
aad
inc
dec
jmp
push
stos
mov
or
and
test
mov
pop
add
sub
mov
or
sbb
adc
jnp
jle
pushf
add
out
mov
mov
push
je
push
cwtl
mov
mov
movsl
cmp
push
jb
dec
fisttpll
add
int
je
xchg
push
cmp
movsb
sahf
dec
xchg
mov
bound
into
cmpsl
out
neg
pop
inc
dec
subb
inc
xchg
dec
lods
test
dec
xchg
cltd
mov
mov
aad
clc
jp
add
dec
and
flds
sub
sub
fwait
push
mov
push
add
jne
pop
leave
xchg
xlat
out
push
adc
pop
cmpsl
sub
sbb
cmc
jno
jmp
test
rcrl
adc
aad
or
aaa
arpl
mov
mov
adc
int
push
cs
cmp
shll
and
mov
push
cmpsl
nop
sbb
lcall
aas
pop
mov
sarb
iret
inc
mov
xchg
push
adcb
popa
ret
int
xchg
push
hlt
pushf
add
sub
dec
adc
scas
or
cltd
mov
pop
ficoml
push
mov
xchg
mov
adc
icebp
lcall
or
js
aam
mov
stc
mov
in
jnp
jae
dec
pop
jg
or
notl
cmpb
rcrl
sub
push
popa
je
nop
sbb
scas
sub
mov
add
bound
idiv
int
sbb
insb
aad
add
cld
xor
je
pushl
leave
inc
jb
sub
in
pop
jecxz
fstl
aam
inc
adc
rcrb
push
jo
ss
xor
dec
inc
jo
mov
test
sub
int3
cmpsb
in
cltd
je
adc
int3
sbb
fidivrs
aad
xchg
fnstsw
aas
or
mov
aaa
pop
cltd
cmpsl
stos
std
popf
pop
push
xchg
xchg
xor
hlt
pushf
int3
leave
fs
dec
into
jge
xor
movsl
ds
pop
pop
jl
cmp
and
mov
out
lods
js
ss
sbb
mov
xor
std
pop
pop
nop
mov
dec
xchg
xor
lret
lods
mov
repnz
dec
lea
inc
lcall
cmp
out
mov
lea
pop
loopne
push
jmp
mov
mov
add
in
cmpsl
loope
pushf
and
ja
lods
rorb
jl
pop
jo
cmp
jae
jle
push
jo
mov
int
adc
sbb
xchg
popl
cli
scas
test
xor
test
xchg
sub
adc
negb
and
pop
shll
into
push
subb
fidivrl
loope
lock
xchg
pushf
cmpsb
leave
lock
rcrb
shrl
stc
shll
mov
sub
push
lods
add
pop
sbb
fiadds
xchg
jo
ja
mov
lcall
push
movl
fwait
inc
out
into
or
push
and
xchg
inc
push
sub
rcll
repz
shll
or
sbb
imul
pop
mov
enter
xlat
fstpl
add
fidivs
shl
scas
addr16
cmp
cltd
mov
ds
pop
and
sbb
bnd
leave
xchg
mov
mov
hlt
data16
es
mov
push
repnz
push
and
pop
dec
fistl
push
add
fwait
sub
pop
sbb
lea
mov
insl
std
addr16
adc
pop
movsl
sbb
int
add
rorb
mov
lcall
int3
cwtl
push
lods
xor
fwait
pop
aas
add
inc
jle
mov
sti
stos
sub
std
mov
push
add
jl
pop
cmc
hlt
mov
lock
lret
fisttpll
add
adc
xor
inc
bound
mov
enter
jne
dec
ljmp
pop
dec
xor
xbegin
scas
std
lret
or
adc
call
call
adc
push
or
fwait
repnz
pop
dec
cld
inc
into
ss
outsb
inc
in
mov
lock
jo
pop
aam
cmc
mov
mov
dec
adc
hlt
or
aas
aaa
dec
ret
mov
sahf
jbe
loopne
cmc
popa
imul
push
push
ficoms
ljmp
mov
call
jbe
in
arpl
fwait
sbb
aas
cli
loopne
mov
mov
dec
pop
jne
fbstp
out
gs
mov
mov
movsb
lock
data16
add
sub
mov
lea
lock
lahf
jp
sub
or
dec
sbb
cmpsb
sub
lret
clc
mov
cltd
test
xor
cld
jle
fnsave
sbb
or
add
aad
dec
fistpll
lahf
push
xchg
frstor
into
es
and
cmc
mov
ret
lret
outsb
inc
popa
sub
xor
adc
xchg
out
jle
ljmp
sbb
psubsw
mov
mov
js
popf
push
in
mov
pop
inc
clc
insl
jb
adc
inc
jbe
jge
jl
gs
cs
addb
clc
push
sahf
aad
jp
test
in
mov
inc
icebp
out
lock
jle
jae
gs
inc
mov
in
outsb
cli
add
arpl
mov
popa
mov
scas
out
js
bnd
mov
and
inc
mov
cli
ljmp
sub
inc
cmpsb
push
add
add
call
inc
jno
sbb
scas
adc
jne
xlat
pushf
push
sahf
lahf
or
ljmp
dec
sbb
xlat
fbld
lahf
fs
inc
push
xor
ljmp
loopne
iret
or
add
xor
in
cli
iret
sti
lahf
pusha
xor
scas
push
sub
sbb
or
mov
in
or
lock
popf
or
inc
or
hlt
jg
cmp
and
jbe
outsl
inc
out
dec
xchg
mov
sub
adc
cs
ljmp
dec
test
inc
mov
inc
lea
pop
push
push
outsl
pop
bound
lret
cli
jns
inc
es
iret
aaa
mov
cwtl
aad
aad
test
addr16
pop
xor
and
cmpsb
push
or
dec
cwtl
dec
jnp
pop
call
lock
mov
push
mov
sbbl
inc
xchg
sub
pop
sub
fdivr
jmp
mov
fcmove
cli
cmp
lcall
pop
pop
or
aaa
push
push
popa
in
js
arpl
jae
ljmp
inc
std
jmp
test
leave
mov
pop
arpl
shrb
pusha
lret
and
repnz
leave
jg
and
call
aaa
fcmovne
sub
push
dec
sub
ds
mov
mov
mov
outsl
lahf
rclb
jnp
or
test
mov
and
icebp
pop
adc
pop
and
fidivrs
push
adc
adc
xor
dec
out
xchg
pop
lcall
jge
sbb
outsb
mov
sub
leave
jge
fwait
ljmp
push
pushf
test
pop
es
popa
mov
xor
pop
insl
ds
fistpll
adc
insb
jo
pusha
pusha
leave
cld
pop
je
popf
mov
jg
xchg
mov
mov
repnz
ds
xor
dec
enter
pop
cld
cmp
mov
sub
dec
xor
shll
jp
sarb
or
fistps
jmp
and
lahf
pop
xor
cld
idivl
adc
in
in
add
pop
addr16
or
dec
ret
lcall
jl
jecxz
xchg
add
imul
push
cmp
push
jb
sbb
outsb
aad
xchg
xchg
jns
add
sub
sub
sbb
xchg
jns
xor
in
cmp
xchg
push
repnz
mov
addr16
cwtl
ret
fsubrs
scas
pop
jp
jge
es
int
lods
xor
roll
jge
pop
xor
iret
lret
mov
push
or
xchg
xlat
sub
mov
sub
test
orl
aas
mov
adc
je
sbb
mov
push
mov
pop
nop
xor
jge
fcoml
xchg
pop
mov
jge
sbb
sbb
push
pop
sub
jne
adc
push
test
sarl
sub
pop
jno
sahf
std
push
popf
insl
clc
mov
jo
push
icebp
fcomp
es
push
or
pop
mov
out
test
rolb
outsl
lock
stos
add
lods
rclb
daa
sbb
inc
pop
push
in
xchg
xor
or
js
xchg
pop
stos
test
cmp
sub
arpl
dec
pop
gs
fdivrs
leave
mov
sahf
jecxz
out
int
iret
test
or
adc
pop
scas
sbb
mov
movsl
pop
mov
les
adc
fs
dec
jg
imul
xor
mov
js
xchg
lea
mov
jb
and
dec
fisubs
sarb
lcall
inc
push
xchg
sbb
add
cmp
pop
test
hlt
inc
pop
mov
jecxz
add
sub
out
shrl
sahf
jno
out
imul
pop
imul
lock
sahf
je
lods
mov
rolb
test
push
jmp
inc
jo
xor
jp
push
xchg
and
jno
iret
jp
adc
xchg
daa
mov
icebp
and
jne
jnp
into
add
xor
sub
xchg
ror
out
movsl
in
call
push
gs
loope
test
sahf
xor
ljmp
in
jmp
sub
add
gs
dec
adc
ljmp
sarl
rcrb
mov
mov
pop
mov
rcl
mov
rcrl
mov
sti
push
shrb
adc
sbb
mov
adc
pop
or
mov
push
pop
fs
les
fdivr
fstl
pop
jl
push
je
inc
dec
scas
mov
inc
mov
inc
ss
mov
gs
mov
cmc
test
aam
arpl
out
inc
stos
pop
mov
insb
clc
jne
scas
inc
aad
or
mov
ds
inc
pop
in
aad
mov
add
cmp
pop
mov
mov
xlat
repz
out
shlb
jmp
adc
or
roll
pushf
jmp
xchg
push
dec
dec
mov
sarb
in
lea
jmp
sahf
aas
mov
ljmp
movsb
mov
sti
push
or
movsb
mov
sar
sbb
subl
and
sub
stos
sub
call
rorb
aad
ret
xorb
lret
out
jo
jg
xor
mov
sar
jo
repz
out
fldcw
inc
out
arpl
and
pop
adc
push
push
out
sub
add
fsts
popl
inc
inc
push
inc
enter
imul
pop
push
fs
cmp
mov
or
je
cmpsl
cmpsb
adc
jno
lods
inc
adc
pop
arpl
std
sbb
lock
push
in
pop
inc
lea
cwtl
testl
xor
stc
pop
jmp
jne
push
mov
fsubp
and
lret
int
pop
add
push
add
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
push
insl
imul
ret
fs
and
testl
adc
scas
mov
adc
and
cmp
mov
ds
push
jle
push
std
xor
sarl
ds
test
faddl
and
cmp
cmc
les
pop
jo
jp
movsb
push
push
movsb
and
or
pop
xchg
ja
sub
mov
adc
adc
ljmp
inc
or
mov
dec
add
mul
mov
nop
aam
call
in
add
decb
mov
mov
and
test
and
cmpl
or
mov
adc
mov
jo
inc
and
jne,pt
add
call
lcall
or
and
jno
push
add
mov
add
fsubr
add
ljmp
inc
dec
fmuls
fmuls
inc
mov
or
xor
or
adcl
inc
jmp
sbb
fsubl
mov
inc
add
jb
jbe
lea
mov
pop
or
test
and
lea
roll
mov
cmpl
lea
orb
cmpb
jle
popa
invd
dec
jne
fsubrs
dec
and
stc
inc
adc
popa
mov
inc
jb
sbbl
popa
jmp
test
ret
inc
pop
and
inc
stos
cmp
add
jb
or
jle
sbb
or
out
adc
movb
dec
add
push
push
xor
add
std
pushf
xor
xor
mov
sbb
push
mov
test
setnp
rclb
addb
fcoms
cmp
mov
add
add
ret
jne
mov
xor
sub
cmp
or
or
mov
jmp
adc
roll
add
push
or
pop
mov
jo
and
jne
and
adc
add
adc
movb
int
ret
jecxz
loope
jns
aaa
mov
popf
sub
je
lret
push
and
and
movsl
fsubrs
jmp
fimuls
mov
and
xor
add
dec
mov
push
out
cli
shlb
out
add
xor
pop
je
test
jge
add
add
arpl
and
shlb
mov
jg
xor
repz
test
je
or
ret
out
sub
int3
add
pop
pop
mov
pop
out
data16
xor
or
or
or
and
or
jb
add
jbe
andl
add
and
pop
inc
insl
sub
fbld
and
cmp
mov
jge
xor
xchg
or
dec
cld
inc
repz
jmp
pop
clc
cmpsb
pop
insl
adc
gs
hlt
inc
adc
lock
cmpl
loopne
ret
add
fisttpl
cwtl
lock
cmp
shr
mov
cli
or
jp
cli
ret
jne
push
or
inc
xor
and
add
pop
lock
in
arpl
jb
data16
jbe
in
stos
enter
rorb
push
cld
jb
subl
or
dec
jo
or
cmova
cli
mov
mov
icebp
sub
add
mov
xchg
cmp
or
shll
cs
es
jmp
mov
and
in
push
insl
and
pusha
sbb
inc
push
les
mov
mov
lock
cmp
mov
fldt
into
stc
push
lret
xor
inc
cmpb
pop
jbe
add
mov
jecxz
mov
push
pusha
jne
lods
adc
dec
add
push
add
lds
out
push
js
adc
sub
jne
daa
adc
repz
into
or
loopne
in
or
sbb
lcall
stc
test
ja
pusha
xor
adc
shrb
adc
loope
js
movsb
sub
in
seto
cltd
or
jle
xor
test
xor
jne
mov
aas
fisttpll
pushf
xor
into
inc
in
and
dec
inc
push
adc
mov
les
mov
stos
stos
mov
adc
cmpsl
pop
test
pop
sub
push
aad
push
stos
lahf
mov
inc
and
mov
xor
add
push
or
adc
into
and
ret
in
sahf
test
jae
outsb
cmp
jge
pop
popa
bound
addr16
fisubl
jnp
mov
pop
les
push
jnp
push
pop
inc
push
les
mov
aas
decl
lret
xor
mov
adc
insb
and
pop
sbb
sub
pop
std
pusha
aaa
or
arpl
push
or
lea
pop
xchg
and
dec
pop
les
and
in
test
enter
inc
aad
cmp
mov
ljmp
mov
or
mov
das
fsubrl
fucomip
adc
in
add
mov
shrl
adc
sub
push
mov
addl
sbb
pop
in
fimull
push
sbb
lahf
sbb
xchg
les
add
jmp
and
add
movsb
dec
add
fistl
shl
addb
mov
frstor
popa
enter
rclb
push
testb
and
dec
mov
cmp
or
fmulp
pop
push
pop
and
out
add
subb
repnz
and
loop
adc
mov
xchg
ljmp
adc
push
imul
inc
add
sub
mov
push
sbb
aaa
add
outsl
inc
add
xchg
or
into
je
xor
xchg
cmp
adc
loopne
mov
nop
add
lock
xor
and
ret
push
fcmove
sti
sbb
jnp
adc
andb
sbb
adc
mov
jp
cmpsb
repnz
mov
ljmp
mov
push
lods
test
testl
pop
or
ljmp
rolb
icebp
pop
pop
sti
jmp
sub
add
sbb
stc
mov
scas
test
leave
pop
roll
or
xor
outsl
add
rorb
cmp
dec
mov
test
push
dec
cmp
sar
add
xchg
stc
add
test
mov
cli
jg
jp
jno
aaa
test
dec
jne
sub
mov
mov
cmp
popl
out
or
jp
mov
sub
popl
xor
sub
or
jno
add
loop
xorb
scas
jle
data16
adc
aad
dec
subb
jne
rorl
mov
nop
xchg
es
sbb
jb
push
add
mov
xor
and
cmp
xchg
orl
orl
out
adcb
test
pusha
loope
enter
mov
pop
mov
push
ret
jl
add
jno
loopne
mov
xor
std
int
dec
and
popa
push
push
icebp
fst
add
sub
into
sub
adc
scas
jmp
pusha
adc
out
mov
mov
pusha
idivl
loop
xchg
fildl
mov
subb
lret
popa
xchg
movmskps
clc
adc
out
icebp
int
outsb
sbb
push
dec
xorb
cmovne
xchg
mov
imul
xor
xchg
jl
mov
out
pop
jbe
mov
add
ret
xor
cld
inc
or
push
add
sti
xor
flds
popf
lcall
shrd
cmp
adc
push
and
jp
add
mov
les
cld
pop
sub
mov
cmpb
add
mov
int
movsb
or
inc
andb
dec
sub
push
movsl
lock
loope
aam
xor
ljmp
push
std
loopne
mov
inc
adc
or
push
push
adc
inc
mov
and
or
push
outsb
add
cmc
mov
callw
xchg
jno
mov
rcrb
fidivl
pop
jl
xor
mov
add
nop
fidivrl
push
xchg
add
cmp
add
or
sbb
bound
leave
pop
subb
xchg
pusha
add
ljmp
mov
jbe
pushf
adc
ja
clc
xchg
or
sbb
sub
adc
sub
and
gs
mov
sub
pushf
inc
jno
lods
mov
ror
inc
hlt
adcl
jmp
push
sub
push
mov
cmp
imul
hlt
icebp
nop
or
aad
add
lds
subl
push
add
jecxz
mov
xor
add
adc
inc
sahf
lods
int
arpl
xor
mov
push
imul
adc
add
adc
sbb
pop
inc
or
xchg
push
mov
mov
std
cmpsb
bound
push
cmpsl
jnp
jl
mov
sub
dec
lock
push
sub
nop
or
and
or
rorl
loop
inc
mov
jbe
js
std
adcb
scas
sbb
shl
test
push
sub
push
xchg
pop
pop
call
xlat
ret
test
sbb
ds
loop
inc
mov
or
dec
and
popl
cmp
test
add
mov
add
mov
jl
scas
sub
ja
xor
or
sub
dec
adcb
add
xchg
xchg
inc
ds
add
sbb
std
and
fsts
adc
and
or
xorl
stos
add
mov
sub
cmp
lock
sbb
lods
xor
jle
mov
and
rorb
pusha
movsl
shll
jge
cs
jnp
jo
push
sbb
insb
faddl
outsl
pushf
inc
add
rcrl
jnp
sub
cmpsb
mov
mov
add
xchg
fsts
sub
or
dec
loopne
je
add
in
rclb
pop
mov
fistps
fcompl
out
inc
pushf
cmc
rcl
cltd
xchg
add
push
dec
andb
fisttps
adc
lds
inc
jl
sarl
push
cmp
aaa
cmp
aas
jecxz
sbb
js
mov
popa
adcb
cmc
cltd
xor
cwtl
jecxz
sahf
adc
loopne
xchg
test
add
pop
call
out
loopne
inc
or
rclw
jbe
cltd
mov
mov
mov
xor
jo
frstor
popa
xchg
sub
pop
jge
ud2
adc
add
mov
mov
adc
xchg
xchg
mov
addl
jb
mov
sbb
out
bound
xor
pusha
ja
stos
xor
xchg
xchg
pop
xchg
jl
loopne
mov
add
sbb
pop
xor
mov
jnp
scas
xor
push
xorb
in
sar
in
adc
mov
jo
popa
adc
push
adc
int
orb
movsb
mov
xor
mov
or
cmpsl
je
jl
inc
sbb
sbb
inc
add
ss
scas
push
lods
loopne
add
cmpsb
dec
cmpsl
or
clc
xlat
and
xor
sbb
adc
dec
insb
popa
cmpsb
add
mov
xchg
sti
pop
pop
mov
add
aam
in
adc
daa
add
mov
pop
mov
sbb
clc
xchg
js
jno
inc
fimull
stc
xchg
and
cltd
xchg
mov
add
mov
add
dec
stc
test
push
mov
repnz
add
pop
sbb
sbb
add
cmp
or
test
loop
dec
mov
test
mov
movd
into
adcb
fcomp
and
xchg
je
xorb
xchg
dec
jnp
add
xorl
in
add
and
pop
int
arpl
stos
int3
and
in
and
sbb
ja
mov
sbb
cmp
and
lret
imul
cld
rcrb
lds
fsubl
je
inc
cmp
lock
xchg
add
mov
cld
add
xchg
nop
fcoml
xchg
push
fsubrl
gs
ljmp
enter
sbb
inc
movsl
and
lcall
push
sbb
inc
xchg
ret
xor
add
mov
int
or
push
mov
adcb
lds
adc
adc
ret
and
and
add
call
daa
cltd
push
adcb
pop
mov
imul
inc
imul
leave
push
and
fs
movl
or
test
into
or
inc
mov
inc
ucomiss
pmuludq
clc
and
mov
and
cmpsl
add
lret
push
clc
xchg
cld
sub
insl
fmull
imul
loop
mov
shll
cmp
ret
add
std
xchg
lods
int
lret
sub
and
cmp
xor
add
sub
xorl
jbe
pushf
sbb
cwtl
cwtl
add
lods
xor
testb
or
lea
add
icebp
adc
push
movsl
and
add
icebp
and
sti
les
loopne
cmp
mov
pushf
jns
gs
fmulp
nop
sub
mov
pop
data16
dec
inc
or
stos
mov
mov
or
inc
push
andb
add
mov
sub
fists
cli
outsl
cmp
bound
addr16
test
pop
pop
or
xchg
mov
jb
jmp
inc
movsb
cld
lods
ret
sbb
add
pop
cli
int3
dec
and
fadd
xchg
sub
cmp
loopne
adc
subl
xchg
out
inc
xchg
mov
imul
pop
enter
cmpsb
jecxz
jge
and
and
sub
loope
jecxz
or
pushf
cmp
cwtl
fs
pop
loop
add
jmp
and
lods
or
adc
lar
jmp
dec
lock
out
out
int
dec
fistl
sbb
adc
hlt
add
nop
adc
out
ret
jge
mov
cmpsl
arpl
mov
jg
add
mov
jecxz
or
nop
adc
dec
add
jle
clc
ficoml
out
add
inc
push
in
mov
repnz
pop
or
pop
ret
call
pop
mov
sbb
inc
cld
sub
daa
mov
pusha
cmp
cmpsb
or
into
mov
in
cmp
sbb
fs
mov
rorl
or
add
popa
fnstenv
add
push
in
jmp
cmp
xlat
inc
aam
shrl
aas
mov
add
pusha
mov
pop
test
scas
rclb
leave
mov
test
push
xchg
dec
add
lods
cld
and
mov
pop
hlt
movsl
arpl
sbb
add
mov
dec
inc
xchg
lret
out
fiadds
out
ret
iret
mov
add
push
adc
lahf
adc
add
pop
out
or
fbstp
ljmp
fstps
mov
dec
out
lock
and
add
and
xchg
or
pushf
lds
add
test
js
mov
and
mov
sbb
je
inc
dec
pop
adc
fucomip
mov
mov
gs
push
or
cltd
or
mov
insl
add
mov
pop
les
stos
push
loope
sbb
lret
mov
lods
scas
dec
into
rorl
mov
dec
mov
add
mov
and
cs
and
sbb
mov
push
xorb
or
dec
les
sbb
lret
adc
or
ret
orb
adc
cmp
stos
lret
push
sbb
xor
or
repz
stos
adcl
popa
icebp
stc
jo
add
xor
push
add
test
jmp
sbb
xor
pop
out
stos
xchg
mov
jns
pop
inc
push
push
add
subb
mov
rcrb
cmpsb
inc
sahf
ljmp
add
jne
add
lods
lret
or
push
push
jecxz
call
add
adcb
xor
inc
roll
push
push
inc
and
xchg
les
sub
cwtl
push
cmpsl
fdiv
enter
lds
repnz
add
movsl
sbb
push
insb
push
aaa
mov
adc
or
outsb
ljmp
inc
sbb
jns
loop
add
loope
call
add
dec
add
cltd
out
sbb
dec
sti
xor
adc
ljmp
ret
add
dec
push
hlt
pusha
sbb
lods
pop
push
sub
push
add
scas
xor
mov
les
iret
pop
stc
xchg
cmp
maxps
ret
rcr
inc
int
call
clc
outsb
sbb
mov
mov
out
adc
sbb
std
cmp
insb
cmp
sub
cmp
mov
push
clc
pusha
cmp
and
cmp
stos
jo
jns
frndint
add
mov
bound
test
cmp
add
int
notb
and
add
or
mov
adc
cmpl
int
in
in
rorb
addb
sbb
sbb
push
iret
xorl
cmp
adc
add
movsl
or
sti
pusha
inc
cmp
daa
add
push
addr16
xlat
scas
movsb
cmp
rorl
lods
push
dec
mov
jl
mov
enter
ret
cmp
rol
cmp
mov
mov
cmp
ljmp
cmp
clc
cmpsb
inc
sahf
in
or
andb
in
in
jecxz
and
jo
or
push
mov
ret
mov
lock
aas
inc
add
stos
int
xor
cmp
test
popf
and
lods
fs
stos
icebp
inc
sbb
test
pushf
sbb
aas
jecxz
or
lock
rolb
shrb
jns
push
testl
ja
cmp
inc
add
in
xchg
loopne
pop
mov
mov
int3
cmp
mov
jl
inc
fisttps
pop
fadds
inc
mov
popa
loope
inc
mov
cmp
add
cmpsb
dec
sahf
add
sar
cmpsb
pcmpgtw
pop
addr16
fisubrl
add
sub
test
adc
inc
push
mulb
sub
std
add
aas
push
roll
ja
fsts
mov
and
in
inc
pushf
xor
push
and
sbb
sub
inc
adc
in
into
jb
mov
cwtl
in
mov
jle
add
gs
xchg
push
in
cmp
mov
stos
push
js
cmpl
add
push
pop
cmp
in
jb
push
loopne
add
push
push
insb
pop
mov
xor
cmp
or
inc
dec
mov
and
add
stos
int3
sub
sbb
cmp
rorb
lret
inc
lods
lds
gs
inc
faddl
add
xor
adc
and
dec
mov
mov
inc
div
call
adc
add
inc
push
add
add
lods
cmp
js
cmpsb
pop
add
mov
pop
lods
inc
aam
int
add
cli
adc
fcoms
aad
clc
jo
popa
and
mov
xchg
or
mov
adc
mov
inc
xor
enter
xchg
mov
jns
sub
in
pop
dec
ss
stos
xor
and
insb
rcrb
dec
cmc
pushf
add
pop
and
in
aaa
push
xchg
mov
pusha
out
or
xor
ds
int3
push
or
inc
icebp
call
dec
cmp
stc
loope
inc
add
xor
dec
fnstenv
addr16
inc
or
cmp
xor
pop
sub
push
sub
push
in
insb
sub
jnp
in
xchg
xor
mov
and
cwtl
and
jno
add
int
in
pop
add
ja
inc
pop
cli
lods
pop
pop
jnp
adc
mov
mov
dec
jecxz
jno
inc
stos
lock
sub
testb
adc
insl
pop
icebp
test
int
xor
cmc
shlb
jo
lds
jb
scas
std
loope
jnp
sbb
inc
clc
ds
movsb
nop
jle
inc
add
das
sbb
dec
and
or
mov
pusha
jo
cwtl
push
sub
sub
lods
dec
les
add
leave
ret
jno
add
ja
ds
shlb
ds
rorb
mov
lods
insb
aam
dec
ss
adc
or
or
inc
ljmp
fcoml
cmp
xor
lret
hlt
jno
jb
or
cmc
cmpsb
dec
or
mov
popf
add
stc
icebp
cmp
jecxz
mov
loopne
pop
mov
mull
xchg
mov
sub
add
ror
aam
rclb
and
jecxz
subb
sub
fiadds
dec
xchg
jmp
jge
clc
repz
cwtl
nop
loope
add
loop
shlb
shl
adc
arpl
cmp
inc
mov
mov
inc
sub
shl
in
fs
adc
add
adc
pop
ds
fildl
testl
jo
add
lret
stc
or
rcll
jge
adc
sbb
stos
sub
add
lret
fcoms
dec
xchg
mov
adc
les
push
enter
cmp
cwtl
fcmovne
jb
inc
jp
clc
wbinvd
dec
push
xor
cmp
sub
sete
add
loop
cmp
xorl
jge
dec
push
cmp
sahf
pop
test
cs
lcall
outsb
pop
add
movsl
mov
add
pop
in
jbe
ja
stos
mov
adc
xchg
mov
add
scas
test
daa
push
adc
sub
mov
or
xchg
js
add
xor
aam
or
jo
xor
and
sbb
jo
add
sarb
or
sbb
jno
push
add
or
and
add
movl
add
cmp
adc
inc
int
cli
pop
pushf
xchg
les
ss
leave
adc
add
dec
insb
aaa
hlt
mov
add
cmp
or
adc
and
sub
pop
add
outsl
xor
mov
cmc
xchg
and
nop
cmp
int
test
shlb
pop
test
and
movsb
adc
add
icebp
add
xchg
mov
cmpsb
pop
push
filds
xchg
push
sbb
cltd
mov
in
shrb
mov
mov
insl
cwtl
loopne
add
push
push
jbe
or
or
cltd
and
xor
or
mov
call
sbb
dec
xchg
cmp
shl
xchg
cmp
add
sub
sub
popa
mov
bound
jp
sub
inc
cmp
inc
xchg
push
xchg
das
fmull
imul
stc
push
pop
andb
cld
and
setns
mov
sbb
adc
push
jae
push
das
stos
popa
jo
add
push
push
mov
pop
jl
jno
sbb
imul
push
cmpsl
inc
nop
inc
and
cmc
or
xchg
fs
push
fs
dec
add
jns
xchg
arpl
inc
mov
mov
cltd
js
loop
xchg
pushf
lods
adc
mov
cmpsb
mov
cmc
insb
pop
xchg
repz
pop
ret
cmp
sub
loopne
cmp
xlat
mov
cmc
nop
jecxz
adc
xor
mov
adc
in
lock
and
mov
push
mov
lret
mov
ljmp
lock
or
sub
xchg
scas
mov
xlat
jne
cli
and
punpckhwd
sahf
pop
std
sti
mov
les
insb
jmp
hlt
fistps
or
sub
push
xchg
aam
add
push
and
xor
out
xor
xchg
add
in
lcall
stc
pop
or
sbb
xor
pop
hlt
aaa
push
jmp
cmp
adc
jl
fsts
loope
pushf
sbb
vandps
outsb
or
add
addl
ja
aam
adc
insl
testb
cmp
cmp
cmp
add
and
movsl
pop
int3
add
or
insb
mov
jmp
lods
cmpsl
enter
clc
or
cmp
pusha
add
ja
cmp
or
sbb
xchg
hlt
mov
xchg
pusha
inc
stos
xor
add
jb
jl
nop
pop
cmp
sbb
shrb
popa
ljmp
int3
pop
and
or
and
test
sub
sub
sub
add
loop
out
add
cmpsb
inc
sahf
sbb
iret
jmp
sbb
popa
out
mov
cmp
add
pop
or
cmp
cmpsb
addr16
or
ret
int3
test
sbbb
add
sbb
add
lret
jb
cmc
rcrb
mov
ret
add
pop
xor
rorb
bound
push
icebp
sub
adc
jo
andl
mov
mov
sub
xor
adc
push
sub
sbbb
pop
and
add
and
dec
ljmp
pop
and
adcb
and
add
xchg
inc
xchg
es
mov
xchg
loope
jbe
fsts
xor
js
inc
insl
jge
les
add
shlb
add
mov
lds
jecxz
fidivrl
mov
sbb
leave
pop
popa
test
adc
pop
movsl
stos
add
inc
push
add
or
loopne
int
sbb
jae
lret
adc
scas
cwtl
jmp
add
mov
inc
cli
cmp
push
dec
xor
or
pop
imul
jbe
leave
ret
loopne
sbb
repz
xchg
and
or
mov
push
adc
les
add
mov
cmp
add
adc
lods
pop
xor
add
loopne
cmp
sti
loop
pop
ds
xor
cwtl
mov
fsubrl
mov
fnstsw
add
or
stc
dec
das
in
adc
add
inc
pop
adc
into
cmpsl
inc
fsubl
or
lods
inc
mov
loopne
mov
cmp
sub
xor
add
jno
out
vmovmskps
pushl
pushf
popf
aas
ds
inc
lcall
inc
mov
stos
leave
sub
bound
jmp
pop
mov
inc
and
gs
sub
cmpb
daa
test
addl
loop
sbb
ret
loop
nop
adcb
fnstcw
xchg
jae
and
leave
xchg
pop
add
and
pop
or
in
rcrb
js
push
insb
cld
xor
jb
xor
push
xor
jb
mov
inc
fcoms
lea
pusha
xlat
das
cmc
dec
enter
les
inc
push
rcrl
pop
subb
mov
pushf
xchg
out
sub
test
fidivrs
and
decl
sub
lcall
cmp
add
cmp
push
rolb
inc
push
cli
pusha
dec
jns
pusha
cmp
ja
push
incl
jl
orb
adc
std
add
aad
or
cld
ret
into
mov
hlt
xor
jb
nop
sub
push
icebp
adc
je
mov
push
inc
addb
loopne,pt
and
push
insl
in
xorl
sbb
or
adc
mov
loopne
pop
mov
sbb
out
imul
fisttpll
subb
hlt
or
sbb
mov
and
test
sub
mov
inc
sbb
jl
jbe
frstor
idivl
loop
repnz
push
push
fs
test
repnz
and
xchg
clc
pop
repz
sub
je
add
les
mov
cmpsl
and
lret
lock
xchg
cmp
mov
ret
pop
adc
jecxz
and
sti
or
jo
or
push
pushf
ja
xor
push
push
push
and
push
cmc
cmpb
add
push
mov
pop
mov
xchg
jae
hlt
adc
movsb
cs
int3
ret
or
xor
dec
lods
in
call
push
or
clc
cmc
stos
xorb
push
cmpb
jl
ja
lea
mov
inc
push
mov
sub
repz
xchg
jne
test
or
cmpl
cltd
push
sbb
ret
xchg
push
jo
movsb
and
jecxz
fiadds
adc
mov
sbb
pop
pop
mov
cmp
push
jae
adc
and
rcll
jns
adc
or
lock
or
and
cmp
test
adc
outsb
and
mov
xor
les
popf
mov
call
and
cmpsb
push
movb
fisubrs
scas
daa
sbb
pop
mov
cs
add
pop
lods
or
push
flds
lods
jl
fptan
add
data16
hlt
xchg
in
sbb
add
push
fbld
sbb
daa
lods
std
popa
pop
andb
add
sub
inc
test
sbb
insl
push
add
imul
stc
daa
les
add
inc
mov
lret
inc
pushf
mov
daa
cld
cmp
xchg
xchg
das
add
and
push
cmp
sti
jae
pop
add
adc
cwtl
jo
std
mov
movsl
push
mov
xor
lds
test
pop
xorb
int3
pushf
test
sbb
in
andb
test
lock
push
xchg
fxch
nop
mov
fisubrl
push
je
lock
xchg
pop
out
out
inc
adc
push
sbb
mov
gs
xchg
lds
addl
inc
xor
sysenter
fidivrs
and
and
mov
sbb
jmp
out
inc
repnz
jg
enter
add
mov
inc
adcl
and
pop
sbb
and
popa
inc
pop
or
aaa
and
in
or
clc
adc
push
mov
cmp
test
sub
inc
andb
cltd
orb
fwait
nop
enter
inc
push
stc
pusha
xor
movsb
popa
sub
popa
adc
inc
comiss
call
and
jo
pusha
jmp
add
add
js
adc
imul
in
cld
mov
pop
lea
cwtl
into
lret
cwtl
cmp
push
lcall
lds
adc
ficoml
jecxz
das
mov
cmp
addl
outsb
jl
pop
hlt
cmp
add
insl
mov
out
mov
ja
mov
jl
or
and
loopne
outsb
add
xchg
or
inc
push
ret
add
adc
adc
cmp
fsubrs
jle
sahf
dec
dec
lret
into
and
rolb
xor
or
loopne
out
adc
fbld
mov
push
pop
adc
sti
xor
or
adc
xor
mov
bound
sub
sub
shl
adc
xor
fs
pop
or
imul
call
add
ljmp
cmp
cmpl
movsl
cltd
push
mov
cmp
insb
and
add
sarl
lahf
adc
lret
mov
flds
xor
push
repz
mov
mov
sbb
or
lds
lret
add
les
mov
pop
inc
rolb
mov
shr
stc
cmp
xlat
je
mov
sub
mov
xchg
or
push
loop
je
adc
push
add
xlat
shrl
stos
pushf
jb
xchg
add
push
push
test
ss
mov
or
popf
movsl
sub
xchg
es
add
pop
repnz
test
enter
movsl
int
jno
sbb
lahf
adc
add
push
in
add
or
sub
add
shl
enter
xor
pop
xchg
and
jge
test
add
sbb
loop
ljmp
cld
test
jl
or
xor
dec
push
push
test
xchg
test
inc
ret
mov
out
mov
and
add
add
test
or
das
add
dec
or
loop
push
cmp
fs
mov
fadd
into
add
push
cmp
xchg
add
loope
shlb
add
dec
and
leave
pop
pop
addb
pop
pop
dec
xor
adc
push
or
inc
adc
cmp
testb
adc
insl
into
outsb
rorl
jb
sbb
mov
sub
add
filds
xor
dec
mov
daa
aaa
cmc
js
inc
notl
add
mov
andb
xchg
mov
cwtl
push
dec
inc
mov
jae
lds
cmpl
xor
xchg
push
add
in
or
scas
add
xor
mov
in
cmpsb
aas
inc
sahf
inc
adc
cmpsl
cmp
cmp
pushf
js
in
and
gs
mov
add
loope
xstore-rng
cmpsl
add
sbb
stc
pushf
and
sahf
push
sub
sar
jae
icebp
mov
cmp
outsb
and
jo
inc
jl
or
cmp
mov
test
and
mov
add
pop
jns
test
xor
or
rcrb
push
sbb
jmp
test
sbb
jb
imul
fidivs
lock
add
jmp
adc
mov
mov
data16
cwtl
icebp
pop
in
inc
add
in
and
sub
daa
mov
fldenv
mov
push
dec
add
mov
ds
iret
cmp
add
shll
cmpb
xchg
push
les
add
inc
cmp
xchg
mov
sarb
out
das
or
xchg
add
loopne
test
mov
orb
xor
cwtl
call
aas
sbb
add
adc
mov
add
ret
ljmp
mov
out
jg
xor
adcl
mov
mov
mov
les
ret
jnp
adc
jno
mov
jmp
dec
cmc
inc
adc
sbb
pusha
dec
ja
or
pop
pop
mov
sub
call
repz
outsb
scas
ja
mov
mov
dec
sub
cli
cmp
imull
jle
and
adc
mov
hlt
das
xor
push
fsubrl
decl
xor
cltd
rol
or
fs
loopne
adc
xchg
pop
rcrb
inc
mov
sub
inc
mov
repnz
testb
sub
pop
pop
lahf
imul
pop
popa
inc
push
xor
dec
xor
or
sub
adc
dec
mov
xorb
inc
or
loopne
test
cwtl
pusha
add
lret
movsb
dec
xchg
push
insl
sbb
xchg
mov
mov
xor
xor
sbb
jge
and
xchg
les
mov
push
mov
inc
inc
add
mov
add
dec
jmp
mov
imul
push
aas
push
les
pop
jns
pop
cltd
add
jne
and
js
mov
mov
mov
push
xlat
xor
jo
addr16
jl
xor
mov
sub
sti
push
loop
lock
mov
test
push
mov
ljmp
call
or
popa
loope
insl
mov
dec
insb
mov
fldt
imul
and
je
add
xchg
cli
movsb
jb
test
aad
jmp
das
cmpsl
push
loop
add
fcompl
adc
add
fld
out
pmuludq
clc
imul
je
test
cmp
mov
jo
or
jbe
push
loopne
pop
mov
shll
mov
enter
mov
mov
hlt
adc
push
mov
mov
mov
pushf
jae
ret
test
adc
movsb
xchg
daa
pusha
cltd
and
js
or
and
mov
pop
mov
push
in
shlb
push
mov
addb
outsl
cltd
jno
pop
dec
mov
xchg
mov
test
loopne
icebp
cmp
movhps
addb
xchg
push
mov
sbb
adc
jo
fistl
add
icebp
lahf
sub
pop
dec
les
xchg
inc
cmp
cmp
lock
mov
cli
push
jg
ds
push
enter
dec
pop
loopne
lock
mov
jl
add
pop
or
lahf
repnz
cli
sub
jbe
sahf
cmp
cmp
add
adc
xchg
cld
orl
mov
insb
mov
shlb
add
adc
mov
add
add
or
inc
insb
pop
mov
add
jmp
xchg
jecxz
cmp
jl
mov
call
mov
jno
or
pop
mov
adc
cmp
out
rclb
xchg
push
enter
cmp
xchg
dec
sbb
cli
jnp
xor
dec
in
cld
cmp
enter
xor
sub
sbb
add
pop
leave
adc
push
and
push
mov
xchg
pop
das
add
loopne
in
mov
jecxz
pop
sub
fsubs
xorl
nop
imulb
xchg
cmpsb
in
enter
prefetch
cld
setns
xchg
mov
cli
add
sbb
push
cmp
loopne
sbb
sti
mov
stc
xchg
dec
pop
insl
sbb
mov
lcall
call
push
pop
add
mov
sub
mov
push
inc
pushf
lret
fwait
jo
mov
adc
inc
pop
add
dec
inc
pop
bt
pop
jle
and
das
iret
gs
inc
adc
shl
add
dec
es
and
hlt
fisttps
dec
mov
lret
mov
cwtl
enter
cmp
pop
rcrb
in
loopne
add
in
xchg
mov
jne
rcll
mov
lds
mov
add
fwait
push
dec
rolb
jmp
loope
insb
jbe
hlt
add
sub
das
subb
xorb
in
and
jb
and
xchg
aaa
xor
and
xchg
adc
mov
and
call
sbb
dec
imul
push
lret
test
std
pop
mov
dec
mov
jne
addr16
dec
jg
push
mov
dec
jb
push
xchg
push
sub
cltd
mov
mov
outsb
pusha
pop
stos
test
mov
mov
cmp
add
or
or
das
or
data16
sbb
xor
insl
push
cmp
add
test
repz
xor
mov
xchg
adc
add
gs
icebp
jne
sub
adc
dec
pusha
test
sub
shlb
add
add
sub
adc
dec
push
rcrl
add
inc
push
aaa
inc
sub
insb
mov
xor
mov
pop
xchg
and
loope
pushf
pop
xchg
xchg
push
cmpsb
xchg
mov
imul
int
pop
ja
in
xor
mov
pop
xchg
inc
mov
loope
scas
or
test
or
push
dec
cmpb
mov
and
inc
xchg
lock
mov
pop
or
filds
stos
or
jno
pusha
aaa
xor
sbb
cmc
sub
andb
jge
sub
mov
add
xor
pop
xchg
dec
mov
test
call
test
movsb
lock
fdivrl
iret
xchg
jne
divb
pop
xor
and
repz
xchg
cmpsb
pop
mov
call
jg
notl
enter
and
mov
lret
mov
loope
aaa
and
ja
cmp
cmpsl
cmp
pop
mov
stos
daa
sbbb
or
ja
scas
xor
inc
push
test
sbb
stos
and
mov
test
pop
cmp
in
cmp
mov
inc
jl
lock
mov
das
enter
mov
js
cmp
add
and
orl
push
scas
scas
pop
cmp
and
sbb
sbb
insb
insl
ds
in
pusha
mov
pop
mov
xor
fstps
jo
sbb
aas
and
xchg
push
cld
cmpsl
fiadds
inc
mov
sub
sbb
xchg
inc
movsl
inc
jns
jns
sbb
lret
out
cwtl
jle
and
or
scas
rcrb
mov
call
movsb
xlat
or
cmpsb
adc
lock
cmp
ror
xchg
cmp
in
inc
jae
pop
xor
xchg
and
xor
fs
xor
in
enter
mov
or
arpl
lcall
xchg
add
mov
insl
push
repnz
sahf
mov
xchg
sub
jno
sbb
lea
icebp
mov
rorl
dec
xchg
cmp
and
sbb
dec
cmpsl
fidivl
add
leave
add
sub
les
clc
nop
rclb
test
pop
adcl
andb
sbb
xchg
mov
in
in
xor
out
testb
add
or
fwait
out
add
sbb
ds
in
pop
stc
mov
lods
and
xchg
cwtl
add
xchg
pcmpgtd
sub
sbb
call
movsb
push
add
sbb
pop
sub
or
push
cmp
sbb
mov
pop
fstl
call
pop
push
movsb
rolb
jp
hlt
add
call
pop
add
ss
push
dec
cmp
ja
lods
mov
enter
repnz
xor
adc
jnp
pop
loop
dec
aad
xor
add
xchg
outsb
lcall
ret
lds
repnz
outsb
imul
add
cmp
jl
sahf
lea
leave
mov
and
pusha
xchg
xchg
pop
loope
dec
movsb
mov
mov
cmpsb
inc
sahf
adc
cmpsb
and
gs
ret
inc
ds
std
mov
lahf
adc
inc
push
mov
insb
and
adc
sti
nop
and
sub
jne
pop
mov
enter
and
dec
imul
inc
jnp
mov
cmp
or
in
mov
sub
lock
leave
dec
in
testb
data16
nop
inc
push
daa
pop
cmc
lods
in
dec
call
decl
cmp
mov
pop
ret
ljmp
loopne
and
sbb
rorl
lret
mov
pop
adc
loop
mov
add
pop
gs
cwtl
or
mov
push
inc
pop
hlt
imul
insb
loop
add
xchg
pop
mov
mov
mov
movsl
sbb
mov
sarb
jne
arpl
mov
bound
push
ljmp
inc
xchg
add
mov
lcall
mov
mov
inc
mov
xor
pop
and
sbb
and
adc
movsb
test
or
inc
adc
les
push
cmpsl
mov
cmpsb
pop
leave
fcoms
push
inc
rolb
lods
xchg
xchg
lock
pushf
cs
in
fdivrp
xchg
mov
add
push
fsubs
mov
add
dec
push
loopne
ret
adc
inc
nop
dec
repnz
add
dec
jno
fs
test
add
fbld
mov
add
hlt
icebp
sub
test
cmc
xchg
and
xor
add
stos
sub
push
add
cmp
or
cmp
je
clc
jns,pn
add
mov
ret
shlb
cmp
sbb
mov
lret
cmp
pusha
das
push
inc
xchg
jge
repnz
repnz
das
or
push
enter
add
pop
cs
jns
add
movsl
fcmovne
add
pop
shl
out
dec
inc
loopne
and
movsb
cld
or
adc
lds
or
insb
das
and
add
inc
lods
sbb
dec
test
push
sbb
out
inc
and
cmp
imul
gs
jo
pop
push
xor
outsb
inc
imul
inc
jbe
sub
inc
cmc
adc
mov
add
stos
pop
sub
push
sbbb
cmp
sbb
mov
push
push
sbb
mov
jbe
adc
or
pusha
data16
cltd
cmp
xor
clc
xchg
xchg
sub
and
push
ds
or
add
movsl
jns
cmp
pop
cltd
loopne
push
and
mov
test
sahf
pusha
dec
test
push
sub
jl
sub
pop
rcrl
rorb
cmp
test
sub
or
clc
mov
movsl
mov
fsubrl
das
mov
out
rcpps
push
in
xor
hlt
repnz
add
adc
loop
mov
jne
imul
ficoms
dec
popa
in
and
adc
addl
push
fidivrs
rcrb
inc
mov
pushf
test
aas
add
lcall
sbb
adc
sub
out
sbb
nop
jns
pop
and
sub
jmp
loope
pushf
lidtl
ret
xchg
hlt
jle
and
add
movsb
lret
mov
inc
rorb
pusha
xor
sti
xor
inc
pop
jae
popf
pop
xchg
or
insb
xor
add
cmp
pushf
ja
repz
vandnps
stc
popa
push
in
cwtl
shll
iret
sub
cs
mov
mov
subb
sub
ljmp
lock
mov
jp
inc
sub
mov
fs
xchg
mov
pushf
sub
ret
pop
insb
jno
icebp
decb
out
idivl
pop
sub
mov
ret
mov
pop
inc
testl
push
subb
inc
popf
scas
sub
mov
hlt
and
out
cmp
jecxz
inc
movsb
test
jb
movsb
sub
xor
xor
pop
mov
push
and
xchg
rcl
test
sbb
or
sub
push
imul
jmp
mov
mov
xor
enter
pop
xchg
add
xchg
cltd
sbb
xor
or
adc
call
add
mov
daa
xchg
and
loop
mov
out
enter
ds
pop
mov
xchg
and
test
mov
jmp
lahf
out
push
or
sbb
cmc
pop
add
add
les
mov
or
addl
dec
cmpb
or
shll
pusha
and
mov
sbb
or
sub
adc
add
jb
out
stc
add
mov
iret
mov
les
cmpsl
roll
clc
push
in
adc
popa
lock
movsl
icebp
test
sbb
imul
outsb
les
mov
jg
adcb
lds
pop
inc
or
sti
or
subb
or
cmc
mov
out
mov
xor
mov
rcr
ret
addb
data16
or
xor
sbb
jae
arpl
sbb
leave
sbb
mov
addr16
jl
adc
test
add
add
xor
or
mov
aam
push
call
or
or
es
adc
jmp
add
sbb
or
sbb
push
mov
sub
icebp
xchg
push
nop
or
repz
sub
jns
adc
hlt
sbb
add
enter
mov
sbb
adcb
insb
ret
xor
dec
test
push
add
adc
fstpl
cltd
or
jno
mov
adc
shll
push
jns
adc
and
ja
xchg
mov
xor
inc
and
ficompl
or
sbbl
xchg
scas
inc
mov
les
and
divb
je
sbb
jno
xchg
popa
mov
adc
call
mov
in
lods
fnstcw
imul
dec
jne
push
dec
nop
adc
sti
ljmp
or
jl
or
adc
adc
dec
xchg
pop
sbb
xor
dec
cmp
xor
xchg
fsubrs
add
int3
xor
adc
out
lds
adc
mov
hlt
iret
in
aam
cmp
inc
fsubr
fidivs
icebp
int
adc
push
insl
mov
movsb
shl
xlat
push
loope
lahf
js
dec
in
cmp
push
sub
arpl
sbb
shll
push
inc
ljmp
call
mov
xor
add
lds
dec
pusha
pop
sub
clc
int
add
cmp
push
test
push
cwtl
imul
push
add
dec
xchg
insl
out
mov
clc
xor
add
sahf
xor
mov
pop
xor
add
sbb
je
and
push
dec
or
add
ss
inc
and
addb
in
mov
xor
add
cli
outsl
or
mov
pushf
adc
in
adc
in
or
add
mov
push
xchg
in
roll
mov
in
inc
lock
out
xor
xchg
fimuls
add
popa
mov
mov
add
icebp
cmc
cmp
nop
rclb
mov
add
mov
bound
mov
dec
shrb
mov
clc
aad
add
out
call
xchg
dec
lcall
bnd
fdivs
push
ds
cli
jmp
inc
xor
lock
andb
andb
xor
aad
sub
push
dec
add
cmp
jg
in
push
or
xor
std
dec
in
int
xchg
fdivrs
les
mov
sbb
lock
add
pushf
inc
sub
sahf
sub
push
lods
and
push
es
imul
inc
loopne
xor
push
inc
cmpsb
ret
pusha
icebp
mov
xchg
xor
xor
call
or
dec
leave
sub
mov
cmp
outsl
cmp
pop
in
in
and
out
cwtl
adc
in
push
jp
adc
push
push
mov
and
cwtl
pop
xchg
cld
out
js
sbb
pop
adc
jo
cmc
pusha
push
dec
loop
push
mov
adc
adc
cld
sbb
and
xchg
in
in
and
push
mov
jo
inc
fstl
or
adc
cmpb
and
and
outsl
out
sub
mov
daa
xchg
popa
inc
sbb
les
inc
test
push
ss
xor
and
mov
imul
and
sahf
rorb
rolb
aas
mov
dec
rol
lret
or
imul
sbb
and
sbb
fwait
enter
fnop
add
cmp
or
stos
add
cld
ss
sub
push
arpl
rclb
call
mov
add
les
repz
stos
popl
seta
fadds
xchg
sahf
fdiv
sub
pop
pop
sbb
scas
movsb
cwtl
sbb
mov
mov
mov
xlat
sub
push
lock
lret
aam
xchg
lock
bound
sub
inc
pusha
adc
mov
pop
rolb
mov
inc
mov
ds
dec
mov
jp
in
fsubrl
add
mov
test
mov
lret
shlb
cmp
mov
mov
ja
add
pusha
nop
mov
xchg
add
xor
or
dec
sbb
fcoms
test
std
adc
lods
cmp
xchg
xor
leave
push
sbb
rorb
pop
push
sub
cmp
and
andl
add
sub
les
dec
rorb
andb
mov
dec
sbb
ds
push
clc
cmp
pop
xor
pusha
add
roll
movsb
pop
fwait
loopne
inc
sahf
mov
cltd
sbb
push
xchg
cmc
lods
xor
pop
inc
inc
rclb
ds
in
add
or
mov
add
aas
push
call
nop
xchg
or
test
das
fildl
js
lods
inc
adc
xlat
ljmp
mov
xor
clc
sub
dec
mov
arpl
inc
jecxz,pt
sub
loop
pop
out
imul
loopne
mov
push
movsb
in
add
push
int3
pushf
mov
test
and
add
hlt
in
xor
incl
cmp
xchg
loop
test
add
enter
aam
cmc
xchg
int3
incl
push
stc
add
pop
sahf
ja
in
push
fwait
add
es
roll
call
ret
adc
divl
cmp
data16
mov
cmp
lock
addb
loop
rolb
cli
and
push
testb
mov
test
xor
sub
mov
sahf
sub
outsl
mov
mov
or
fnstenv
mov
xor
sub
fisubrs
lock
adc
mov
les
lea
xchg
scas
out
pusha
loopne
movsl
scas
cli
sub
scas
inc
call
mov
ss
cmp
aad
fsubl
les
cmpsb
pop
add
push
sbb
jno
je
mov
rorb
xor
pop
push
bound
leave
pop
adc
pusha
mov
and
or
cmc
add
es
mov
inc
fmuls
shlb
xchg
inc
stos
cmp
xchg
shr
loope
shlb
sub
jp
cmc
ss
call
add
ljmp
mov
scas
aam
jge
dec
pop
xor
xor
fdivr
xor
pop
dec
jo
or
adc
clc
inc
sbb
sub
imulb
cltd
sbb
push
push
xchg
and
xlat
sbb
dec
inc
sub
pusha
pop
leave
or
and
das
sbbb
pop
rolb
lahf
in
sbb
xorl
outsb
lahf
inc
pop
ja
sbb
push
cmpsl
pop
scas
pusha
lods
int3
mov
popa
jge
add
fcoml
mov
ss
add
and
mov
sub
xchg
jo
sbb
rcrb
push
dec
in
sub
inc
test
dec
popa
and
aam
push
shlb
pop
test
xchg
or
mov
and
mov
add
inc
cwtl
rcrl
mov
test
cmp
mov
gs
les
fwait
pop
imul
loop
shll
lea
jmp
stc
pusha
xchg
fwait
lds
repnz
ds
cmpsb
add
xchg
push
xchg
cmc
inc
xchg
cmpsl
les
out
and
add
int3
sbb
mov
ljmp
aam
leave
sub
out
lock
adc
add
imul
gs
xor
and
push
sti
inc
out
subl
add
int3
mov
add
cltd
adc
or
repz
enter
and
icebp
das
add
inc
pop
add
pop
add
fstpt
or
or
in
and
push
cmc
cwtl
mov
je
or
mov
into
mov
xchg
test
add
jg
inc
add
icebp
cvtdq2ps
and
mov
testl
in
xchg
pop
dec
nop
mov
popa
or
mov
mov
lea
add
dec
pop
push
xchg
into
mov
xchg
inc
push
xchg
push
and
je
js
add
repz
stc
imul
add
push
lcall
sbb
xchg
in
cs
and
leave
jmp
mov
cmp
je
stc
cmp
xlat
mov
out
mov
daa
add
hlt
imul
nop
push
pop
xor
hlt
dec
sahf
es
xchg
sub
idivb
test
cmovs
adc
hlt
aam
cwtl
and
xchg
inc
mov
mov
mov
mov
sahf
inc
lock
aam
cmp
mov
sub
mov
mov
jb
rcl
push
ret
and
and
cs
add
jo
into
mov
adc
mov
std
pop
xor
enter
add
int
mov
xchg
movl
dec
sub
in
push
cmp
jp
jmp
dec
add
dec
push
add
leave
lods
and
int3
mov
and
xchg
pop
add
psraw
adc
xchg
xchg
in
inc
into
xor
es
orb
cmp
ljmp
xor
int
push
adc
cmpb
inc
push
jl
and
test
push
adc
add
lcall
mov
sub
mov
cmpsl
inc
or
or
add
sbb
cmp
data16
add
decb
decl
inc
cmp
xchg
aaa
and
sahf
clc
cli
pushf
sbbb
xchg
and
and
xchg
push
jg
push
adc
imul
cmpsb
pusha
add
add
or
adcl
pop
mov
outsl
xor
insl
and
aaa
ds
add
mov
pop
das
add
andl
cltd
or
xchg
add
insb
lahf
int
enter
dec
jp
add
enter
call
inc
stc
mov
subb
or
add
in
cwtl
jl
js
lods
sti
arpl
test
sub
test
les
add
cmp
cs
and
and
addb
inc
and
lahf
add
popa
inc
lods
cmp
jno
lea
jnp
pop
xor
loop
pusha
or
test
lret
lar
fisttpl
and
add
inc
xchg
xchg
mov
adc
shrl
fisubl
aaa
xchg
repnz
les
stc
roll
inc
or
mov
bound
je
hlt
fst
pop
fsubr
nop
cld
dec
pusha
jl
sub
cmp
jg
sbbb
and
or
jecxz
test
and
inc
sahf
mov
adc
addb
shr
xor
insb
dec
adc
or
inc
js,pt
mov
incb
xchg
sahf
cld
sub
call
xor
ret
mov
or
add
int3
lret
xor
add
gs
xor
insb
sub
mov
dec
push
mov
xchg
repz
pushf
loop
fwait
pop
mov
sub
inc
xchg
std
inc
daa
out
inc
xchg
hlt
lret
jae
pop
ds
xor
add
pusha
mov
rolb
sahf
push
std
xchg
stc
cltd
add
jnp
scas
jecxz
in
adc
das
fwait
nop
insb
or
cmpb
loope
add
loopne,pt
jo
divl
inc
ret
pop
dec
movsb
shrb
fwait
add
mov
and
and
push
cs
dec
ljmp
lret
dec
sub
pop
xor
loopne
andb
mov
std
xor
push
mov
test
outsb
call
addr16
pop
or
lock
rol
shl
aam
in
dec
add
pop
xor
lcall
std
mov
xor
rcr
mov
into
ljmp
mov
mov
insb
mov
add
inc
mov
inc
sbb
push
inc
andl
aad
fs
loop
aad
xchg
dec
jns
xchg
cmpsl
dec
xor
or
cmp
sub
cmp
mov
mov
mov
push
add
sub
popl
in
xor
fistl
repnz
sbb
movsb
add
jb
enter
loopne
lret
inc
hlt
in
orl
scas
in
adc
xchg
jl
or
daa
cmpb
in
push
jmp
xchg
and
add
cmp
sahf
mov
dec
xchg
xchg
je
sub
and
out
cwtl
adc
add
int3
je
das
cmp
shlb
cwtl
orb
inc
inc
mov
lahf
rolb
mov
pop
or
pop
push
mov
inc
into
cwtl
add
cmp
mov
jbe
xor
mov
sahf
mov
ss
sbb
mov
jno
or
or
dec
jnp
lahf
paddsw
mov
cmpsb
push
add
adc
adc
cmp
xor
mov
int3
push
testb
popf
push
dec
lahf
sub
lds
mov
xor
popa
das
adcb
in
push
push
sbb
or
pushf
mov
xor
shrb
jne
insb
test
sahf
xchg
xor
push
out
rorb
jecxz
enter
sbb
pop
pop
andb
xchg
cmpsl
or
decb
out
add
in
or
adc
orl
arpl
loope
mov
out
pop
mov
add
push
add
aam
cmp
test
adc
and
xorb
mov
pop
pop
push
adc
rclb
ret
inc
test
arpl
call
clc
sarb
andl
mov
fsub
mov
and
popa
std
xor
jo
jl
add
sbb
push
lods
mov
mov
test
jge
je
add
sahf
push
or
pop
gs
dec
add
fimull
add
in
and
sub
out
sub
or
mov
cmc
push
clc
add
fwait
movb
jg
fdecstp
push
adc
xor
xchg
sub
cmp
sub
enter
sbb
clc
cmp
or
aaa
jno
add
push
lahf
inc
add
sti
sbb
sub
repz
out
jnp
pop
shrl
sub
or
inc
cmp
xor
test
js
or
lahf
inc
push
add
popf
dec
xor
shll
outsb
daa
gs
push
and
mov
insb
cmp
mov
inc
sbb
push
add
sbb
add
xchg
test
jmp
scas
loope
mov
xchg
test
pop
xchg
add
sub
mov
in
pop
in
enter
dec
add
or
and
jns
popf
or
ljmp
adc
fnsave
jae
pushf
hlt
ret
ljmp
add
mov
fsubs
xor
mov
jmp
pop
sub
daa
subb
sarb
std
das
push
addb
add
rcrl
sub
pop
mov
cwtl
test
inc
sbb
daa
in
int3
cmpb
xchg
mov
lret
mov
sahf
repz
pusha
insb
loopne
imul
fidivrl
pusha
imul
and
and
mov
cltd
xor
andl
aaa
mov
dec
jl
sub
cmp
xchg
sbb
cmp
mov
jge
dec
movsb
adc
mov
adc
mov
xor
xchg
xor
outsb
in
data16
xor
test
dec
out
pop
clc
lods
pop
in
xor
or
enter
push
mov
or
lret
xor
add
xchg
test
shl
dec
cmp
adc
mov
inc
sbb
push
adc
push
pop
add
adcl
call
cmp
and
mov
les
cs
mov
les
ds
push
cs
add
pushf
mov
lds
in
inc
sub
sub
or
mov
mov
out
aas
and
mov
mov
mov
test
add
out
shl
subb
clc
push
xchg
je
adc
mov
cwtl
xor
xorl
pushf
shl
add
dec
add
test
add
enter
orb
or
push
enter
mov
push
jbe
bound
or
je
xchg
sub
bound
add
and
cmp
test
jae
call
inc
push
push
push
ds
xchg
jecxz
xchg
xchg
pop
inc
leave
pusha
das
pop
add
sarb
loopne
nop
push
push
xor
sbbb
mov
cmp
inc
jne
mov
cmp
ret
cmp
jne
mov
or
xchg
testb
xchg
test
roll
or
and
pop
orl
add
adc
mov
mov
in
mov
in
push
and
add
incb
adc
or
decb
add
js
add
int3
xor
inc
and
out
lcall
add
xchg
push
xchg
stc
xor
mov
jne
xorb
sbb
addr16
insb
inc
add
in
lds
mov
mov
cs
add
call
cmp
add
pop
enter
iret
and
mov
add
add
pop
sub
clc
or
dec
dec
pusha
testb
or
scas
xchg
push
xor
cli
xorb
mov
xchg
mov
pusha
mov
mov
popa
mov
clc
xchg
lock
add
pop
loop
jb
call
test
movsl
mov
adc
push
add
pop
clc
xlat
lcall
and
xchg
dec
out
dec
fldcw
cmpb
add
call
push
and
add
xchg
xchg
push
pop
cmp
aaa
loop
add
idivb
xchg
push
xchg
mov
mov
sub
iret
repnz
das
adc
inc
pop
jl
mov
and
orl
nop
cwtl
xchg
nop
enter
add
ss
jle
rolb
lret
sahf
mov
jge
add
imul
inc
or
loop,pn
adc
sar
movsb
add
enter
cmpb
loope
add
in
clc
cmp
xchg
cs
jns
sub
popa
pusha
movl
adc
scas
fucom
es
add
pop
pop
jno
popa
adc
orl
pop
je
add
xor
or
imul
insl
std
es
xor
outsb
testl
notb
fwait
adc
add
leave
movsb
sub
inc
mov
scas
xorb
mov
push
rcrw
pop
int3
and
xor
sbb
pop
cmpsb
push
daa
jo,pn
rcr
xchg
clc
out
pop
push
rolb
xor
inc
cwtl
cmpsb
cwtl
jmp
jmp
cmpsl
add
adc
mov
es
sbb
mov
add
sub
or
dec
add
cmp
adc
pusha
or
mov
adc
cmp
out
mull
add
cs
add
shll
call
mov
in
sub
or
or
mov
adc
sub
add
rorb
push
shlb
ja
dec
xchg
jl
lds
aad
sbb
movsb
dec
jns
mov
cld
outsb
add
cmpsl
mov
pop
js
mov
prefetchwt1
or
jl
sbb
lods
cwtl
xchg
add
test
shll
and
js
cmp
inc
rcr
inc
fldt
rcl
pop
sbb
sub
push
fidivs
push
test
mov
jmp
mov
dec
sbb
pop
mov
mov
outsl
mov
subb
test
push
movsl
subb
jns
adc
imul
test
call
subb
push
sbb
sub
inc
mov
xor
dec
add
cmp
adc
add
xchg
inc
adc
subb
add
fiaddl
xorb
cmp
repnz
add
aas
xor
mov
push
sti
orl
jne
icebp
clc
shl
mov
cwtl
jb
add
add
orb
in
mov
clc
fwait
or
test
call
arpl
xchg
xchg
mov
rclb
or
adc
addb
adc
dec
icebp
push
cmp
sbb
and
int3
cmpsb
mov
xor
adc
shlb
test
cmp
in
pop
xor
hlt
pop
add
cli
add
sub
dec
mov
push
push
shrl
push
xlat
popa
nop
addl
in
add
ds
or
xchg
jecxz
sub
push
mov
andl
daa
jge
lods
lea
pop
pop
call
xor
jg
sub
cmp
mov
rcll
adc
and
nop
adc
adc
push
push
jae
mov
pusha
loop
xor
test
push
cltd
mov
adc
cmp
orl
mov
push
loopne
in
cmp
pop
daa
xchg
fcomi
lods
nop
jo
add
test
lock
add
fisttps
mov
or
mov
or
out
out
add
add
int3
add
lods
mov
sbb
inc
loopne
adc
loope
mov
test
inc
stc
pop
insl
test
cmc
fld
cld
imul
addr16
cs
stos
push
add
lods
js
pop
push
add
xchg
out
lahf
cli
and
es
js
xchg
push
mov
add
idivb
pop
test
jp
adc
nop
pop
adc
and
or
sub
xor
in
sub
icebp
mov
rorl
push
imul
cmpb
movsb
sbb
outsb
fistl
cwtl
push
and
pop
mov
arpl
adc
ret
stos
lret
inc
repnz
add
cmpsl
sarl
add
xchg
test
mov
jae
push
movsb
adc
lret
push
and
mov
push
add
and
out
mov
jge
lods
nop
faddl
and
or
xor
inc
adc
cmp
dec
or
dec
cwtl
les
scas
pop
je
outsb
outsl
adc
les
bound
in
int3
test
arpl
jg
dec
mov
mov
or
test
add
ud2
push
loope
add
shl
inc
test
xor
cmp
sbb
je
xchg
out
jmp
shrl
push
add
adc
jmp
ret
icebp
mov
dec
sub
adc
mov
fwait
aaa
loopne,pt
add
add
sub
xchg
fdivrp
add
xchg
rcrl
mov
jp
jbe
bound
insl
frstor
xorb
push
mov
test
sbb
cmpsl
ds
push
pop
inc
popf
or
xchg
add
fimuls
outsb
push
mov
mov
jmp
clc
push
cs
push
sbb
dec
pop
dec
sub
adc
insb
std
cli
inc
xorl
fsub
mov
outsb
pushf
or
dec
add
in
mov
jae
xlat
test
add
inc
mov
xchg
insl
addb
add
sub
push
loopne
sar
lds
push
sarb
ret
cmp
add
in
add
mov
add
enter
adc
sbb
pushf
cltd
lds
add
movsl
jne
push
stos
add
mov
mov
adc
mov
lret
mov
push
addb
fimuls
popa
out
leave
pusha
pop
lods
popf
or
and
cli
add
xchg
jno
dec
mov
dec
rclb
hlt
adc
ljmp
es
es
push
loopne
cmp
rcrb
mov
lds
and
addr16
sbb
sub
adc
je
xor
xor
stos
in
xor
jae
add
sbb
fmuls
add
repnz
cmp
mov
jo
popf
push
and
test
test
rol
mov
loop
inc
inc
inc
ss
sub
data16
fmull
lock
lock
xor
mov
scas
add
dec
pusha
mov
and
mov
jge
test
and
or
dec
jo
jl
cltd
mov
fiadds
push
or
aas
add
ja
bound
mov
add
push
lods
dec
mov
jl
mov
clc
xor
out
imul
cwtl
iret
jp
push
cli
push
xor
jbe
jge
andl
pop
cmpl
mov
push
xor
sub
dec
loop
fs
mov
test
inc
or
paddusb
and
mov
dec
popa
loop
daa
jne
and
jns
xchg
add
add
add
mov
fcoms
fidivs
andb
add
jo
add
lea
add
push
sub
jne
sbb
push
popa
xchg
pop
jns
test
iret
and
adc
or
lea
ds
jne
mov
mov
das
jo
add
outsl
arpl
rdmsr
imul
mov
xlat
adc
pop
xchg
popa
sub
mov
push
in
fs
mov
mov
stc
dec
xor
xorb
out
push
scas
outsl
push
add
and
xor
or
jl
and
mov
add
xchg
sbb
and
push
adc
cld
addl
cltd
mov
or
xchg
sub
xor
add
or
pusha
sub
shll
lea
roll
sbb
jns
sarb
jb
push
mov
add
jno
or
mov
push
and
xor
dec
mov
add
jb
adc
add
loopnew
push
mov
shl
int
sbbb
cli
idivl
lcall
leave
and
fildll
mov
cmc
sbb
icebp
in
add
sub
insb
incl
sbb
pop
lock
out
inc
scas
scas
push
inc
dec
push
mov
addl
imul
es
lock
fsubrl
rorb
cmpsb
sti
and
popa
push
jmp
or
sub
arpl
add
or
push
test
ljmp
sub
jp
cmc
mov
outsl
jo
jnp
sbb
adcb
sub
dec
fldl
cmpsl
mov
add
in
push
in
test
mov
cmpl
mov
and
mov
jp
ret
add
dec
sbb
add
mov
rorl
xor
xchg
pop
movsb
daa
lock
and
in
fbstp
mov
jno
lret
or
push
pop
sbb
pop
imul
cmp
xor
in
xchg
push
js
adc
add
test
adc
and
pusha
add
and
or
adc
jecxz
enter
jmp
call
in
mov
mov
test
subl
cs
mov
pusha
jns
roll
call
jo
add
cmpsb
jle
xchg
cli
add
test
cs
aad
push
mov
out
sti
sub
jns
lret
push
orl
and
icebp
adc
pop
std
xor
mov
add
mov
push
jl
orb
push
xchg
mov
dec
aas
nop
jo
or
aas
loop
pusha
enter
lret
and
in
jmp
pop
xor
cmpsb
fcompl
dec
orb
mov
dec
icebp
jge
adc
add
jmp
mov
sbb
xor
or
adc
pusha
pop
flds
aaa
dec
add
out
out
stos
imul
imul
cmp
test
or
cmp
or
les
notb
pushf
cltd
jecxz
dec
test
nop
sbb
adc
sbb
call
mov
sbb
push
adc
inc
rclb
je
cmpxchg
push
dec
dec
push
and
cmpsl
cwtl
les
cwtl
mov
xchg
jns
scas
add
lock
xchg
jmp
shrb
out
inc
clc
rcrb
pop
dec
pusha
cld
adc
sbb
add
mov
or
pusha
sub
cld
clc
sbb
xor
sbb
mov
fs
fists
inc
cwtl
loopne
dec
add
mov
ja
or
mov
dec
nop
pop
enter
dec
shl
push
test
sbb
cmp
push
fldcw
add
mov
dec
stos
cltd
test
xchg
add
enter
jb
or
imul
scas
inc
pop
fstl
popf
fisttps
enter
sub
inc
lods
push
jnp
mov
mov
pop
pop
mov
mov
push
pop
ds
sub
add
cld
dec
aaa
movsb
sbb
setns
clc
and
iret
add
ja
outsl
push
xor
adc
test
rorb
sbb
mov
inc
leave
or
push
sbb
add
sub
mov
dec
pandn
pop
scas
add
testl
sahf
lret
push
sub
cltd
out
jns
push
cmpb
pop
add
lods
mov
testl
jmp
fsubrp
imul
xor
adc
add
dec
std
push
pusha
cmp
add
scas
loopne
mov
stc
or
insb
mov
subb
loop
adc
test
mov
pop
outsl
push
sbb
in
pop
addl
test
or
fmuls
jo
or
inc
cld
lods
mov
insb
addr16
sti
in
in
sub
xor
out
mov
cmpl
outsb
fsub
nop
pusha
lds
push
push
ljmp
pushf
lods
test
xor
pop
int3
dec
in
sbb
outsl
sbbl
hlt
add
aaa
lods
sbb
xor
cmp
pusha
add
sbbl
sub
add
dec
scas
lea
call
dec
int3
js
sub
and
xor
inc
mov
testl
es
fmull
out
adc
call
xchg
push
sub
or
enter
movsl
test
or
ja
xchg
inc
push
pop
fildl
sbb
jbe
cmpsb
jae
testb
adc
loope
xchg
inc
pop
xor
aaa
int
sub
addb
dec
or
enter
adc
or
das
insb
popa
cld
and
dec
sub
lock
push
mov
push
addps
and
jns
movsb
xchg
add
mov
xchg
aam
jo
add
inc
movsb
xor
test
cwtl
jnp
sub
aad
loope
sub
mov
test
sub
cs
inc
jecxz
rclb
cmpsb
fidivrl
sbb
aad
xor
xor
add
sub
xlat
mov
sbb
jae
xchg
mov
cwtl
sub
inc
xor
xchg
mov
mov
add
push
out
xchg
mov
orl
mov
pop
pop
mov
dec
repnz
inc
mov
lods
inc
mov
sbb
inc
in
adcb
push
cmp
and
xor
add
add
sbb
rolb
add
lahf
fidivrs
scas
inc
test
fwait
enter
push
mov
andl
adc
aaa
inc
mov
dec
pcmpeqb
jo
sub
mov
sarb
xchg
pop
adc
push
iret
and
inc
clc
mov
out
pop
add
call
or
adc
ss
add
stc
pop
cmp
inc
add
enter
add
icebp
inc
xor
and
sub
adc
es
lods
enter
dec
mov
pop
add
imul
inc
pop
mov
cmp
lea
aas
cld
sub
stc
push
or
pusha
cmp
shld
nop
stc
ucomiss
or
mov
loope
xchg
and
sbb
xchg
mov
jne
rcll
mov
xorl
stos
lds
mov
or
bound
mov
push
mov
sbb
xor
ss
sti
repz
ret
pop
xor
sub
mov
add
sub
imul
lock
test
das
out
sti
dec
and
add
or
mov
cwtl
dec
ror
mov
mov
pop
add
sbb
xchg
into
es
bound
sub
push
mov
jmp
data16
inc
stos
xlat
sub
subl
aas
rolb
mov
sub
pop
push
push
sbb
outsl
adc
shr
add
xrelease
mov
mov
inc
test
test
push
jmp
mov
pop
pop
fldcw
pop
jle
jb
dec
xchg
rcll
pop
incb
scas
cmpsb
jne
arpl
sarl
push
xor
cltd
and
scas
or
add
pop
jo
xor
jp
enter
push
mov
sub
pop
jmp
add
pop
xchg
sti
not
or
andl
sub
push
mov
and
jge
xor
jbe
add
out
jbe
or
jge
cli
xchg
mov
jmp
loopne
sub
mov
imulb
or
outsl
scas
xchg
loope
mov
insb
or
mov
sub
pop
add
jp
lret
lds
cld
ret
or
inc
push
jp
cmp
xchg
and
test
push
lods
or
addr16
push
add
or
dec
neg
jmp
mov
jo
push
mov
add
shr
mov
jge
push
movsl
push
push
mov
loopne
sub
mov
mov
xchg
stc
arpl
das
add
sbb
inc
clc
testl
jmp
in
jp
test
ds
adc
movsb
inc
es
int
hlt
ja
rclb
lret
sub
add
movzbl
cmp
in
test
xchg
xchg
vmovaps
pop
push
dec
jae
out
add
add
xchg
adc
sub
in
cltd
es
add
fs
pop
scas
pushl
jp
dec
pop
inc
nop
push
xchg
sbb
popl
in
and
sub
std
and
push
lods
dec
mov
ficomps
mov
not
jmp
pop
add
lea
or
push
xchg
aad
jns
or
aaa
popf
mov
ret
int
and
ret
pop
pop
shl
xor
into
ss
pop
mov
rorb
enter
stos
xchg
mulb
std
jbe
mov
rorb
cmp
push
fists
adc
or
pop
pop
jmp
add
mov
enter
push
js
es
mov
xor
push
cmpsb
fistl
out
pop
or
fadds
fnop
repnz
adcl
lock
add
or
int3
push
push
jmp
cmp
pop
xchg
and
push
popa
jmp
imulb
jmp
push
ds
adc
aaa
mov
stc
in
test
mov
push
pmaddwd
pop
pop
dec
cs
mov
rorl
sbb
push
mov
push
xor
pop
push
pop
or
insl
jp
daa
sub
sbb
inc
adc
pop
adcl
or
xor
and
repz
lock
inc
jne
aad
dec
outsl
push
mov
out
mov
or
shlb
dec
ret
ljmp
dec
pop
out
pop
lret
sbb
jmp
imul
out
ja
pop
cwtl
test
stc
pop
test
jl
and
fldl2t
movsb
and
or
ret
sub
add
push
xor
mov
imul
jge
and
xor
or
mov
arpl
or
popa
fnstsw
xchg
sbb
add
rcrl
loop
mov
mov
jno
pop
jno
fsubrs
xor
push
aad
rorl
std
push
ret
push
mov
pop
and
clc
mov
push
xor
dec
mov
mov
sub
or
repnz
pusha
lret
ljmp
pusha
pop
aam
cmp
push
shlb
outsl
cmpl
sti
push
cmpsb
mov
scas
sbb
pop
and
clc
xchg
inc
into
adc
or
push
out
dec
sub
repz
lods
jp
mov
pop
mov
xchg
xor
add
cld
inc
or
imul
dec
sub
and
add
or
jae
push
cwtl
mov
loopne
ror
pop
xor
sub
xor
xor
jmp
jo
pusha
pop
mov
daa
shr
dec
add
and
add
adc
lock
bound
add
and
xchg
wbinvd
push
pop
shl
dec
pusha
inc
cs
repnz
push
jmp
pop
pop
addl
insb
js
andb
test
xchg
repz
daa
xor
pop
or
dec
movaps
pop
jp
shrl
cs
test
push
es
ja
dec
ss
es
ret
add
movsb
fs
and
inc
push
repz
push
push
add
pop
xchg
cmpsb
lcall
push
cwtl
pop
enter
lcall
adc
mov
inc
loop
mov
mov
pop
push
push
mov
ss
test
xor
xor
adc
sub
inc
or
push
pop
inc
jne
jmp
imul
js
adc
jle
add
ja
cmpb
pop
pop
shr
push
rorb
outsl
sbb
and
loope
push
stos
xor
mov
jmp
pop
pop
or
ss
add
add
lock
xor
ljmp
push
sub
push
cmp
adc
daa
sbb
pop
adc
flds
shl
push
sarl
sub
les
pushf
or
jb
push
ret
repnz
iret
inc
movsl
pop
push
js
imul
push
jmp
xchg
add
mov
cs
inc
sub
inc
or
adc
jo
mov
das
add
jne
popa
adc
arpl
or
push
jg
sub
imul
out
push
and
pop
cmp
pop
sub
push
push
dec
loopne
sahf
fadds
push
mov
sahf
mov
ficoms
dec
std
push
pusha
idiv
pop
sub
push
pop
xor
call
outsl
into
dec
dec
sbb
dec
pop
mov
push
loop
imul
sub
cwtl
dec
pop
sub
out
jle
out
cmp
fbld
jp
inc
xor
ds
fcoms
jmp
add
or
cld
pop
pop
std
add
imul
test
cli
push
adcl
fdiv
pusha
inc
dec
pop
push
addl
jbe
cmp
aad
ljmp
mov
sub
xor
cld
sub
add
scas
int3
orl
inc
inc
adc
icebp
inc
scas
js
pop
data16
xor
mov
and
or
cmp
jno
scas
lock
arpl
or
insl
add
xor
data16
add
jae
fcmovne
or
adc
dec
sbb
cmp
and
add
or
jno
mov
cmp
sub
jmp
push
ret
orb
push
data16
adc
aaa
int
sub
dec
or
dec
cwtl
xchg
ja
lss
sub
or
or
pop
adcb
mov
insl
ljmp
cmp
jl
dec
pop
pusha
inc
jmp
sbbb
cwtl
adc
dec
sub
aaa
or
cmp
pop
add
pusha
adc
mov
incb
roll
add
in
and
imul
data16
pop
scas
call
jl
addb
pusha
inc
add
sub
sbb
and
sub
add
mov
mov
aad
fidivrl
sbb
aad
and
adc
xorl
sbb
xchg
cmp
rorb
int3
subb
out
and
cmp
popa
or
je
fiadds
dec
cs
jb
or
mov
add
push
divl
mov
sub
pop
inc
push
inc
or
pop
add
in
push
sub
adc
inc
sub
push
icebp
dec
cmp
mov
xor
jmp
pop
and
lcall
leave
inc
sub
xor
mov
test
pusha
adc
xor
ret
shll
push
test
adc
or
mov
int3
sub
sbb
adc
xchg
push
sub
pusha
fmuls
dec
aaa
add
ret
push
add
xchg
sbbb
mov
nop
shlb
or
rcrl
or
out
ds
fwait
popa
icebp
xor
adcl
or
iret
inc
add
push
add
repnz
sub
movsl
lods
leave
dec
add
dec
mov
js
or
shr
jo
lret
sbb
cmp
push
out
imul
push
inc
in
mov
inc
popf
jae
jge
je
cmp
call
push
rdtsc
add
dec
jle
or
or
addr16
dec
pop
fisubs
xchg
push
or
subb
and
jo
add
push
aam
add
pop
sub
aam
adc
add
es
xor
and
lds
popf
aam
pusha
mov
adc
inc
xor
in
cmc
xor
add
outsl
jmp
jle
mov
add
jb
jno
xchg
mov
shlb
push
shr
arpl
xchg
lock
or
push
mov
lcall
push
fmull
jo
imul
test
mov
or
cmpsb
push
push
mov
push
in
jp
mov
test
cmpsb
dec
push
mov
dec
mov
es
dec
sub
daa
sub
call
dec
xor
jp
dec
pop
lret
dec
dec
pop
dec
popf
xor
pushf
xor
gs
push
pop
pop
sub
mov
ds
stos
add
repnz
les
cwtl
pop
dec
inc
cmp
inc
inc
popa
in
sbb
sbb
mov
pop
xor
sub
or
es
cmp
insb
or
pop
sub
or
rolb
lods
sahf
ja
mov
sub
and
call
sub
pusha
dec
scas
jg
out
and
shr
int
and
rorl
pop
add
dec
push
jecxz
lea
ds
sub
push
xor
add
loope
or
pop
adc
add
cmp
ja
or
sub
jns
cmp
sub
pop
jne
add
shr
add
or
jns
insb
or
add
mov
mov
xchg
cwtl
iret
push
add
mov
push
nop
bound
out
cwtl
and
leave
pushf
fwait
bound
sahf
and
stos
xor
nop
int
imul
cmp
sarl
ljmp
pusha
pop
leave
mov
mov
jae
mov
or
pop
rcrb
imul
add
push
push
mov
cwtl
fwait
add
in
jmp
lret
loopne
mov
mov
addr16
push
jmp
fmul
cmp
pop
addr16
repnz
pop
mov
sub
and
adc
or
not
xor
in
fimuls
or
xchg
mov
mov
repnz
adc
shl
lcall
mov
movsb
inc
add
lock
jmp
mov
push
fwait
lret
pop
sub
aam
test
add
cmp
lds
mov
or
xor
or
sarl
push
add
jbe
int
pop
jmp
int
shl
loopne
lea
stos
cmp
xor
addr16
adc
add
shl
jmp
iret
aam
pop
aad
add
mov
jbe
gs
adc
dec
add
in
jge
cmp
sub
or
enter
movsb
ror
sbb
in
sbb
and
pop
ror
sub
test
gs
and
dec
inc
cmp
mov
loop
dec
aaa
out
jecxz
je
sbb
add
add
jg
cs
sti
inc
imul
ret
and
sub
inc
sub
adc
add
pop
pop
add
adc
aam
mov
xor
xor
je
xchg
xor
xchg
add
adc
jb
and
xchg
adc
add
inc
add
dec
and
iret
xor
pop
cmp
rorb
enter
sbb
out
sbb
faddp
dec
rolb
adc
lret
or
int3
or
xchg
xor
push
ret
jecxz
popf
push
data16
add
dec
out
inc
shl
add
xchg
dec
and
xor
push
mov
sub
popa
ret
shr
imul
stc
aad
mov
and
xchg
xchg
pop
xchg
lds
movsb
sub
cmp
xorl
in
xor
add
cmp
dec
adc
or
or
push
add
fcomps
pop
fs
popa
sub
pop
ds
or
or
push
inc
out
sub
scas
cmpsb
roll
sub
or
adc
jbe
or
or
adc
sbb
lret
push
shr
or
imul
jmp
lahf
mov
pop
add
jecxz
mov
daa
jmp
decb
push
mov
or
sbb
pop
adc
or
pop
subb
test
sub
enter
xchg
push
sub
push
sbb
xor
or
ror
mov
movsl
in
fsubl
jmp
pop
loop
les
or
or
xchg
push
sub
push
orb
push
pop
cmp
cmp
push
fucompp
cmpb
add
mov
push
jg
cmp
or
je
adc
es
or
or
adc
adc
pushf
add
push
sub
out
lds
movsl
and
in
aas
push
test
test
add
xchg
cmp
jo
ret
jnp
ret
xchg
push
xor
mov
or
into
jmp
cmpsb
xor
aas
pop
lock
dec
add
test
outsl
popf
mov
fimull
dec
mov
dec
pop
or
jo
add
negl
or
push
daa
popf
pop
jl
push
or
mov
dec
cs
add
pop
mov
cwtl
mov
jb
sub
daa
fucomp
sbb
cwtl
pop
sub
or
or
or
cmpsb
push
nop
mov
into
mov
out
add
shll
dec
movsl
shll
mov
or
pop
push
mov
dec
pop
add
jmp
mov
loopne
aam
dec
mov
mov
dec
js
movsl
or
sub
je
icebp
pop
push
adc
jg
dec
insb
movsbl
cs
adc
cmp
faddl
mov
push
push
pop
jmp
cmpsb
adc
repz
add
pop
sub
pop
loope
push
jmp
jecxz
mov
adc
lret
mov
jmp
xchg
fsubl
and
or
pop
fldcw
mov
cwtl
in
inc
cmp
cmp
inc
inc
mov
js
sbb
or
push
test
add
ja
pop
sti
xor
ret
pop
in
adcb
mov
or
inc
mov
pop
push
js
pop
imul
sbb
xor
rorb
ror
rolb
das
xchg
outsl
scas
mov
andl
or
sbb
clc
ret
xor
lock
ss
jmp
jns
andl
js
not
faddl
in
dec
pop
mov
xor
push
or
jmp
cmp
and
sub
fwait
xor
mov
xchg
ret
push
in
je
scas
dec
lds
push
add
sub
xor
or
push
fadds
ljmp
push
cwtl
dec
push
add
arpl
push
fadds
pusha
mov
aam
aas
cmpb
arpl
cmp
out
adc
push
nop
outsl
adc
syscall
in
clc
add
jb
push
mov
push
sub
sbb
jno
pop
hlt
iret
add
movl
clc
sub
pop
push
cmp
pop
mov
xor
mov
cltd
loopne
cmpb
jns
test
inc
mov
mov
pop
shr
addl
dec
mov
jmp
add
jnp
adc
mov
repz
outsl
je
arpl
adc
sar
jns
call
and
xchg
lock
or
js
jg
and
popf
sbb
pusha
jge
xor
mov
clc
or
or
rorl
bound
cmp
push
loop
shl
sbb
mov
mov
adc
add
xchg
inc
in
sbb
or
or
dec
jecxz
add
xor
xchg
add
and
cs
pop
add
pop
sub
inc
test
shlb
add
aad
xor
fs
xchg
and
sbb
inc
out
push
pop
out
pusha
dec
pop
jmp
push
ret
std
push
les
in
imul
push
cvtdq2ps
add
sarb
scas
xorb
orb
xor
or
in
dec
dec
scas
xor
mov
adc
fs
lods
into
add
pop
daa
es
addb
call
dec
out
jmp
ljmp
add
mov
jmp
mov
nop
cltd
and
mov
pop
add
inc
mov
add
or
mov
push
je
mov
cmp
push
sub
push
pushf
jne
xchg
xor
cmp
inc
jmp
mov
popf
mov
push
or
mov
pushl
xorl
ret
movsl
rcrb
mov
jb
das
je
xchg
aam
into
das
add
sarb
inc
adc
add
xor
imul
ficompl
enter
inc
or
jns
sbb
fisttpll
leave
mov
push
inc
call
mov
jmp
add
cmp
pop
sub
dec
xchg
jle
push
push
add
pop
test
in
or
xor
or
cs
shlb
cmp
pop
and
mov
popa
add
data16
push
xor
pop
loop
nop
test
in
cmp
xor
sbb
and
frstor
or
aad
clc
xchg
out
mov
mov
or
je
popa
mov
popw
rcr
orl
call
cmp
mov
stos
negb
not
enter
test
daa
adc
in
and
jne
xchg
add
ljmp
lock
push
adc
dec
mov
and
push
xchg
add
pop
icebp
sub
xor
mov
xchg
jae
push
push
fidivrs
flds
push
xchg
adc
adc
push
sbb
es
add
push
push
mov
or
xor
inc
pop
std
sub
dec
dec
leave
mov
out
icebp
into
jo
jle
jmp
mov
jmp
inc
sti
or
push
shr
popa
mov
inc
pop
xchg
lea
inc
jmp
inc
shlb
lcall
inc
jmp
mov
daa
jnp
insb
dec
or
ds
pop
pop
lret
pop
inc
fwait
xor
push
dec
lds
mov
lcall
xor
add
mov
mov
jmp
xchg
ja
notl
pop
cli
inc
jl
pop
mov
iret
and
mov
imul
addl
es
fsubs
mov
push
movsl
leave
jae
pusha
stos
daa
js
popf
mov
cmc
cmp
out
pop
jmp
add
sub
push
jo
fstpl
add
or
cmp
push
clc
pushf
lfs
das
pusha
shl
not
imul
push
push
pop
xor
pop
iret
das
push
es
mov
mov
jne
jo
fdiv
dec
test
daa
pop
push
cs
shll
rorl
dec
pop
subb
jge
push
lock
mov
lock
stos
loop
and
xor
cltd
or
insb
add
dec
addr16
or
incl
loopne
add
and
sub
jmp
fs
loop
mov
data16
int3
or
mov
lds
icebp
dec
xor
and
syscall
je
pop
dec
xlat
nop
inc
pop
iret
add
lds
jmp
pusha
xchg
dec
sbb
adc
adcb
add
pop
jno
pop
loope
xor
jmp
loopne
fimull
stc
movsb
les
fcompl
outsl
sbb
hlt
or
jmp
sahf
add
mov
lret
jle
jmp
jo
femms
pop
call
stos
arpl
imul
adc
stos
push
and
pop
addr16
scas
addr16
push
sbb
mov
xor
sub
call
pop
and
pusha
xor
push
add
neg
addb
sub
test
rolb
daa
push
insl
mov
and
and
push
xor
mov
push
es
nop
mov
pop
cwtl
and
divb
push
cli
dec
rorl
pop
loopne
push
push
push
jmp
pop
pop
lods
cmpsl
and
imul
jp
push
or
xchg
dec
adc
icebp
lret
jecxz
inc
xchg
or
adc
mov
push
or
mov
faddl
fmuls
jae
and
push
gs
cmpsb
xchg
add
arpl
add
push
push
mov
push
fwait
stos
hlt
inc
jp
add
adcb
movups
out
add
sub
mov
xor
lock
std
movsl
lcall
shlb
cmp
mov
fsubs
pusha
rolb
shl
push
jae
add
aad
pop
insb
loopne
or
neg
les
or
add
push
push
and
add
cltd
pop
fimull
dec
data16
xchg
ss
push
mov
mov
jmp
pop
shl
xacquire
ja
andl
pop
pushf
aad
inc
push
pop
xchg
into
sub
add
or
out
lods
add
sbb
add
pop
not
shr
sarb
add
xor
out
sub
data16
out
cmp
xor
xchg
outsb
aas
cwtl
adc
jae
sti
xchg
jecxz
into
jae
dec
ja
jno
add
ret
or
add
dec
loop
fists
icebp
sub
fwait
rorl
pop
les
add
stc
xchg
inc
fldenv
cs
and
xor
call
pop
fsubr
jns
add
gs
addb
pop
push
std
add
imul
pop
shrl
xor
add
mov
enter
add
pop
push
sbb
inc
fs
cltd
dec
push
pop
outsb
sub
cli
es
sbb
not
loopne
mov
sub
or
add
in
jmp
jecxz
imul
dec
test
xor
subb
adc
and
inc
push
mov
dec
inc
add
out
pop
cld
or
dec
inc
loopne
or
or
jmp
and
xor
and
dec
roll
or
sbb
in
add
cltd
push
nop
dec
popa
rorb
out
xchg
pop
sub
add
test
mov
cli
jne
or
push
xor
sti
outsb
ja
mov
pop
add
dec
mov
aaa
pop
push
jnp
pop
mov
repz
add
ja
jno
xor
mov
add
sub
call
mov
and
pop
add
pop
vmovapd
add
mov
xchg
pusha
xor
scas
enter
int3
mov
add
loopne
fiadds
lahf
jno
add
sbb
push
clc
out
cmp
cmpsl
cs
cmp
push
add
xadd
push
testl
sbb
cld
mov
ret
movsb
or
adc
cmp
push
jl
add
jo
test
and
xor
push
nop
addr16
push
clc
jmp
xchg
add
in
movsb
cmp
inc
jmp
in
addl
ret
les
xchg
mov
sbb
xor
ficompl
jno
sub
mov
in
mov
mov
loop
xor
mov
pop
and
subb
fxtract
test
adc
in
aaa
ror
inc
je
jmp
push
and
mov
test
pop
jb
sub
fs
lret
repz
loopne
cmp
mov
popf
xchg
lock
push
mov
std
arpl
mov
adc
jbe
arpl
test
and
inc
push
add
inc
push
adc
jge
adc
out
sbbl
mov
sub
mov
cld
fbld
adc
lds
jbe
fnstenv
jmp
push
mov
adc
mov
lret
push
push
mov
jmp
lea
jge
xchg
lret
mov
lret
add
pop
and
push
ja
clc
jb
push
mov
daa
mov
lods
jp
xlat
jp
and
inc
sub
xor
dec
aaa
mov
in
push
inc
mov
insb
jmp
js
xor
adc
push
in
push
jbe
push
setb
xchg
and
inc
pop
sub
test
sub
bts
pop
xor
leave
mov
dec
push
lea
push
adc
imul
lds
xchg
or
inc
sub
data16
pop
push
xchg
pop
aas
mov
movsl
repnz
push
repnz
mov
push
ds
jge
mov
js
pop
push
pop
mov
and
and
aas
pop
and
xor
jmp
dec
xor
aaa
lds
jne
sub
enter
sbb
push
xor
jmp
add
hlt
jp
sub
mov
or
adc
pushf
sub
scas
jle
sub
sbbb
add
dec
out
iret
adc
out
je
mov
loopne,pt
int
xor
outsl
xor
and
xchg
cwtl
stos
adc
jg
mov
inc
mov
insl
enter
xor
repnz
jmp
fadds
push
mov
testl
mov
xor
pop
stos
adc
inc
mov
dec
sti
dec
xor
mov
outsl
inc
sub
push
repz
neg
sarb
jmp
mov
in
mov
lahf
inc
or
push
es
mov
pop
jmp
aas
or
lret
jmp
push
adc
enter
xchg
wrmsr
stos
or
mov
mov
sti
adc
ja
sub
mov
scas
pop
repnz
mov
pop
mov
call
mov
mov
movsl
shrl
sub
push
and
sub
adc
mov
stc
out
daa
sahf
sbb
push
add
cmp
add
sub
addr16
outsb
movsl
and
push
pop
push
mov
cmp
xchg
inc
add
lock
cltd
test
enter
or
sar
jnp
pusha
test
jle
push
mov
or
xor
sbb
inc
sti
jmp
mov
je
fimuls
test
jmp
in
lods
inc
pop
mov
fs
add
sbb
sub
add
pop
jae
add
call
in
dec
add
add
pop
lea
xchg
test
in
in
push
out
fldcw
sbb
fldenv
mov
lret
shrb
push
icebp
pop
and
fmul
cs
mov
pop
inc
orps
cmp
or
pop
or
xor
dec
stos
sbb
cmc
cmp
inc
lods
cmovo
add
push
add
inc
add
jmp
sub
push
push
jmp
mov
jns
inc
adc
dec
push
mov
push
or
push
rolb
std
dec
cmpsl
fcoml
les
int
mov
dec
jb
pop
mov
aam
fwait
dec
mov
sub
inc
or
or
add
call
in
leave
add
pusha
std
and
pop
mov
and
xlat
push
adc
shrb
and
addr16
or
pop
cmp
iret
dec
std
jge
pop
push
test
mov
rorl
nop
inc
aad
mov
jno
or
lcall
mov
xor
into
loop
lret
mov
add
push
pop
mov
push
mov
loope
adc
lahf
stos
inc
cmpsl
jae
lods
or
adcb
aad
xchg
rol
inc
push
mov
jecxz,pn
or
out
sub
push
jmp
aas
inc
addl
cld
iret
add
movsl
jecxz
mov
pop
lret
or
add
mov
mov
fs
repz
sub
add
add
push
cmp
adc
les
stc
adc
cmp
or
xchg
lods
bound
pop
sbb
rorb
push
xchg
cvtpd2ps
loop
movsb
sub
loopne
mov
xor
push
arpl
sub
mov
add
out
push
inc
in
pop
dec
ljmp
mov
loope
mov
cmp
and
push
movsb
inc
sbb
pop
lea
je
idiv
or
adc
das
dec
adc
int
pop
sbb
pop
loopne
add
xor
adcl
and
mov
adc
and
ss
hlt
bound
lret
inc
inc
or
in
int3
or
cmp
sub
or
jae
or
ret
or
mov
push
dec
pop
lods
js
jmp
mov
xorb
movsl
cmp
adc
test
lock
jl
xor
arpl
xor
lock
pop
pop
inc
inc
or
dec
pop
mov
pop
icebp
push
adc
pop
xchg
movl
lock
sbb
int3
ret
pop
sub
loop
nop
cmpsl
sbb
stos
push
xor
or
sbb
jmp
testl
test
mov
mov
push
sahf
xlat
daa
lds
jmp
mov
dec
and
pop
addl
adc
jmp
jnp
add
and
push
push
mov
add
stos
adc
pop
xchg
lock
ficompl
orl
outsl
jmp
push
xor
pop
pop
adc
dec
cmp
lret
sahf
test
or
push
pop
adc
in
jmp
xchg
imul
test
mov
pop
shrb
jo
add
sub
pop
ret
dec
xchg
and
push
sub
mov
orb
sub
loope
lret
mov
xor
pop
mov
mov
test
and
push
gs
inc
lret
jl
pop
push
add
mul
sti
or
fmuls
and
xor
daa
test
enter
xchg
push
add
mov
out
shl
push
out
mov
mov
cltd
adc
adc
imul
pop
scas
sub
add
xchg
cmp
stc
and
addb
add
and
out
fstps
les
xchg
xchg
enter
roll
fsubs
push
inc
add
pop
iret
cmp
sub
sub
sub
arpl
cmp
aad
inc
push
cmpsb
pop
mov
fdivl
push
mov
push
notb
js
mov
cmp
jecxz
fsubrl
push
jmp
pop
mov
dec
aam
jmp
lahf
leave
xor
xchg
cmc
adc
pop
and
xchg
push
inc
aad
in
sub
pushf
mov
ljmp
mov
cmp
jmp
push
out
je
or
or
xor
jmp
in
pushf
mov
pop
imul
add
les
cvtps2pi
jo
add
push
clc
int
pop
or
adc
subl
mov
or
cmp
push
adc
mov
pop
pop
mov
add
sbb
cld
mov
scas
add
or
ror
xchg
jb
call
fiaddl
xor
push
mov
fucompp
cmpsl
call
int
mov
xor
push
adc
jo
stos
mov
mov
shrb
jno
dec
sar
in
jmp
inc
repz
and
sbb
in
sub
add
pop
and
and
push
dec
sarb
negl
das
popf
add
pop
jmp
sbb
into
push
int3
inc
and
push
mov
ror
clc
add
push
mov
lea
or
mov
sarl
adc
das
cmp
jle
cltd
lret
mov
sbb
sbb
enter
iret
shr
call
push
ja
js
andb
cli
adc
aas
sub
iret
push
js
mov
add
sahf
sahf
shlb
or
addb
xor
movaps
out
pop
push
dec
mov
or
jb
inc
sub
inc
xchg
xchg
aas
cmp
lret
jle
lock
adc
outsl
je
push
fadds
sub
call
jg
pop
pop
xchg
mov
hlt
pop
cli
push
lds
mov
add
repz
outsl
stos
push
pop
mov
jae
jo
and
jle
adc
pop
mov
rolb
stos
pop
inc
mov
test
dec
add
ret
ljmp
inc
mov
pop
stos
jmp
lds
dec
push
test
cwtl
jno
cs
and
or
pop
mov
cmp
insb
fisubl
adc
jg
xor
adc
push
push
rclb
add
mov
pop
or
push
cwtl
imul
int
push
dec
sbb
push
jecxz
js
lahf
addb
out
xlat
jmp
dec
push
loop
and
sbbb
andb
and
xchg
xor
add
or
cli
sbb
fisubl
adc
cmp
xor
cs
add
dec
and
xor
insl
xchg
dec
xor
ficompl
push
push
or
popa
and
das
add
add
insw
fs
push
loop
mov
fcoms
lods
mov
or
popf
add
cmp
push
push
or
rorb
push
xchg
movsl
push
push
adcb
jge
or
push
add
pusha
mov
mov
ja
mov
mov
and
add
or
es
jmp
popl
add
mov
test
sbb
rcl
das
rolb
pop
and
add
and
cmpsb
and
test
rorl
icebp
mov
inc
or
movsl
sahf
sbb
imul
xor
subb
sub
pop
add
ffree
subb
pop
add
sbb
jno
mov
out
rorb
sub
lds
enter
mov
pop
not
mov
and
rol
dec
loopne
push
loopne
push
pop
sub
cmp
push
out
xchg
bound
test
jo
mov
inc
push
push
jnp
pop
or
ret
pop
in
dec
ds
and
add
aam
in
lds
or
inc
or
push
push
pop
push
jno
aad
sbb
push
movsl
sub
xchg
je
imul
and
or
cli
add
call
add
xor
xchg
in
add
rolb
fstps
loopne
out
xchg
mov
icebp
ret
sub
jne
lret
sub
std
loopne
xchg
setnp
bnd
rorl
push
inc
or
or
xor
push
call
jno
sub
or
xor
leave
fucomip
cmp
pusha
mov
pop
enter
iret
mulb
repnz
push
shll
adc
add
dec
pop
dec
jecxz
add
dec
pushf
add
and
in
sbbl
dec
inc
add
imul
in
dec
repnz
nop
sub
add
cmpsb
movsl
add
push
loope
inc
or
xor
or
jmp
mov
dec
sub
jge
pop
dec
jmp
cmc
mov
mov
adc
out
pop
mov
mov
xchg
or
mov
nop
add
add
inc
xchg
fidivs
scas
jns
dec
mov
or
insl
xor
ljmp
je
jmp
mov
test
ret
jmp
mov
das
jne
mov
loop
sub
adc
mov
mov
xchg
inc
add
sub
ficomps
sti
adc
rcl
jne
add
adc
cmp
jmp
cmp
and
push
adc
mov
daa
subb
cmp
in
test
repnz
add
clc
push
mov
sbb
int
jg
sahf
sbb
repnz
lds
pop
add
orb
popa
and
xor
push
inc
add
or
inc
inc
push
cmpsl
push
pop
jae
jnp
rcr
fxch
xchg
addl
lods
pop
and
jp
pop
push
or
int3
lods
push
jne
mov
xor
pusha
pop
mov
shrl
push
xor
pop
add
loopne
add
test
xchg
pusha
xor
mov
aas
and
movaps
jmp
and
ds
cli
pop
xor
aad
jmp
or
jne
ret
dec
orb
or
sub
dec
push
add
push
push
shld
adc
add
jg
js
mov
loopne
or
inc
sub
mov
pop
and
jmp
or
jno
inc
mov
rorl
mov
sahf
roll
mov
xor
add
dec
jmp
icebp
add
inc
ljmp
aas
shr
jl
clc
loopne
je
ja
jne
pop
or
subb
dec
orb
pop
shr
add
and
mov
loopne
idiv
sub
mov
dec
pop
xchg
xchg
outsl
and
jmp
dec
push
add
subl
outsl
pop
cmpsl
pop
sub
cmp
aam
sub
pop
lods
or
sub
and
push
jmp
add
pop
lahf
shlb
mov
sahf
dec
add
bswap
lret
cmp
sahf
mov
inc
je
jmp
mov
mov
jb
xor
push
jmp
in
arpl
pop
adc
aam
stc
mov
pop
push
imul
xlat
cmp
pusha
xor
lock
pusha
jbe
in
xor
shr
jno
dec
scas
pop
push
push
movl
sub
jmp
and
psrad
ret
jmp
add
pop
push
js
lcall
pop
cmp
sarb
add
movsb
adc
dec
pop
loope
adcb
pop
dec
outsl
pusha
inc
bound
jle,pt
add
xchg
inc
push
add
sbb
pop
js
int3
mov
add
xchg
xor
mov
fs
shr
cli
arpl
push
sub
fwait
dec
nop
push
jmp
pop
repnz
add
pop
xor
data16
fstl
jno
sub
xor
cmpsb
je
in
lcall
inc
in
mul
ret
and
mov
jae
pop
loop
and
cmp
ljmp
inc
dec
jmp
imul
xor
and
je
push
push
inc
and
push
xor
adc
push
mov
bound
or
or
test
push
sub
cmp
pop
mov
pop
leave
mov
adc
fiadds
in
xchg
test
loop
in
add
mov
dec
or
mov
ds
push
and
adc
inc
add
jle
lods
add
adc
dec
mov
jmp
in
add
rclb
add
neg
add
shl
inc
mov
pop
xor
xchg
pop
and
cld
lods
shll
push
roll
xor
pop
add
or
jmp
add
push
pop
stc
es
fcoms
test
mov
push
push
dec
ret
inc
ljmp
mov
inc
add
cmp
inc
test
or
push
jle
jb
dec
push
vpaddsb
push
sar
pop
sub
inc
divb
xor
mov
fmuls
adcb
push
cmp
xchg
jmp
in
in
sub
pop
pusha
jmp
and
test
add
mov
xchg
mov
or
pop
mov
nop
dec
in
add
sub
cmp
xchg
jmp
pop
mul
add
pop
ja
enter
cmp
jmp
daa
insb
enter
sbb
sarb
jmp
sbb
imul
inc
push
les
hlt
dec
cld
fcmovb
push
pop
test
call
loop,pn
mov
lcall
pop
rcl
pop
outsl
add
xchg
enter
add
mov
mov
stos
stos
mov
fldl
sub
rcrb
jle
inc
and
cld
push
decl
cs
and
mov
ret
and
cmpsl
dec
push
std
popf
or
loopne
and
push
test
push
adc
adc
ret
or
leave
push
jle
mov
push
icebp
pop
imul
or
jno
cli
xor
das
adc
mov
pop
adc
cmp
ds
in
sub
pop
not
repz
add
dec
mov
js
add
dec
and
xchg
scas
adc
push
push
mov
inc
rcrl
bswap
not
push
imul
jb
icebp
iret
pop
data16
push
clc
push
pop
sbb
inc
lret
ja
and
das
mov
xchg
inc
aam
adc
fwait
and
insl
or
adc
js
pop
jbe
xchg
lods
sbb
orl
cmp
sub
inc
pop
mov
sub
hlt
add
push
push
ljmp
sti
mov
jmp
pop
pop
inc
dec
in
daa
add
shlb
call
xor
test
inc
mov
jg
pop
and
jmp
mov
sub
loop
addr16
adc
clc
cmp
dec
ror
mov
dec
shrb
or
sbb
popa
aad
sub
xchg
sbb
jmp
adc
xchg
stc
jbe
push
jle
adc
rorl
pusha
sub
mov
cs
mov
add
adc
stos
inc
scas
fimuls
pusha
arpl
mov
mov
mov
cmpsl
popf
dec
int
das
dec
xchg
jne
cmpsl
out
and
pop
pop
jne
dec
adc
adc
push
jmp
pop
pop
pop
loop
sbb
sbb
sbb
and
xchg
mov
mov
push
and
push
push
jmp
out
dec
inc
loop
sub
mov
pop
jmp
adcl
aam
cmp
mov
call
add
les
push
nop
and
sbb
rorb
mov
sti
add
loopne
jmp
es
push
scas
add
in
dec
pop
push
and
call
hlt
movsl
test
adc
rcll
shlb
inc
loopne
js
push
jmp
ds
sbb
fidivl
pop
movsl
add
xchg
mov
push
pop
pop
imul
or
jbe
in
sub
sbb
nop
jo
dec
loope
jno
loop
fisttps
adc
rcrl
ljmp
out
mov
lcall
jbe
pop
repnz
adc
inc
dec
push
push
mov
daa
adc
jl
sub
or
push
push
pop
mov
enter
or
test
sub
push
jmp
sub
xor
cmp
or
pop
and
inc
in
loopne
imul
jmp
push
cmp
fstpl
fiaddl
pop
xor
pop
push
mov
jmp
mov
dec
int
mulps
in
jae
sub
gs
es
loop
call
hlt
push
outsl
xor
or
wbinvd
jmp
jb
out
pop
pop
and
and
mov
rorl
xchg
imul
pushf
jmp
dec
orb
push
jle
cmc
repnz
jnp
loop
leave
movsl
pop
cmp
push
pop
loop
movsl
incl
jmp
stc
xor
mov
or
mov
xchg
pusha
or
xor
adc
xorb
in
fstpl
hlt
enter
jp
into
in
and
sub
pop
cmp
or
add
clc
cmpsl
add
gs
test
adc
cmc
and
push
adc
push
insb
sti
push
dec
sbb
fs
jge
lret
neg
fs
add
xchg
or
call
lahf
lcall
xor
rorl
and
inc
xor
sbb
adc
sub
cmp
jnp
lret
rclb
pop
out
xorb
imul
cli
cmpsl
or
sti
pop
sub
mov
movb
movsl
ds
dec
lock
push
or
loopne
mov
jl
in
out
jp
je
pop
xchg
adc
add
dec
jno
inc
outsl
lret
mov
popa
push
test
pop
inc
shrb
pop
push
aaa
mov
sub
test
pop
outsl
and
pop
imul
dec
jo
dec
int
movsl
fcomp
add
jg
sub
push
pop
dec
xchg
and
mov
xor
shl
add
or
repnz
mov
inc
call
sub
out
push
arpl
sub
not
dec
dec
or
dec
lret
clc
stos
ret
aas
sub
mov
push
imul
leave
inc
jmp
lea
pop
mov
cmp
cltd
test
adc
pushf
test
in
mov
and
in
nop
xchg
icebp
add
imul
dec
fcoms
das
ljmp
in
jmp
bndldx
and
shl
jmp
cmp
mov
lods
or
push
jle
pop
pop
lret
shl
shl
adc
sub
sub
shlb
push
jnp
movsl
jle
ret
shll
cmpb
jmp
xchg
jno
loope
adc
sbb
jmp
or
mov
lods
jns
dec
mov
pop
xchg
add
enter
sub
xchg
push
clc
popf
xchg
es
inc
fisubs
mov
and
xor
ret
rorb
in
mov
pop
jl
xor
stos
or
cmp
roll
int3
mov
or
add
push
pop
mov
add
in
inc
jb
inc
movsb
dec
out
jmp
sysexit
push
jne
adc
std
addr16
pop
add
inc
push
aaa
cs
sub
or
imul
jbe
push
ret
inc
jmp
push
add
jl
xor
or
pop
in
xorl
aad
nop
fs
mov
lahf
sbb
sbb
lahf
out
lods
dec
fildll
icebp
and
int
push
push
xchg
movsb
pop
xchg
lahf
fcomps
rcrb
jo
push
mov
decb
sarb
popf
gs
rclb
pop
fstps
adc
fnsave
outsl
arpl
loopne
mov
cmp
dec
icebp
pop
add
mov
mov
add
sbb
cmpsb
or
out
adc
pop
imul
jns
sbb
fldenv
ja
push
push
jmp
subb
insb
xchg
daa
pop
cmp
ret
sahf
outsb
mov
and
pop
add
shlb
and
roll
mov
pop
or
add
enter
pop
dec
pop
loop
les
add
push
mov
cs
in
dec
repnz
movsb
mov
call
mov
sbb
pop
imul
test
cmpsl
jno
sbb
pop
push
popf
push
lock
xor
jbe
imul
pushf
jp
pop
cli
stos
faddl
es
pushf
xor
adc
fdivrp
mov
jp
ret
push
mov
shl
shr
and
adc
add
seto
int
xchg
adc
jo
pushf
sbb
jl
add
fldl
mov
dec
repz
mov
loopne
mov
jmp
xchg
and
adc
mov
jle
or
adc
call
and
add
push
pop
aaa
dec
sbb
mov
or
sub
jecxz
adc
mov
pop
sub
jnp
inc
push
and
es
adc
jmp
dec
mov
mov
and
pop
imulb
jmp
push
inc
mov
fldcw
xor
push
incb
addb
pop
mov
fldcw
out
gs
add
add
jb
adc
xor
mov
jmp
les
pop
pop
shll
fldl
data16
and
push
xor
loop
inc
inc
icebp
cmp
pop
xor
jns
pop
pop
cmpsl
jmp
cs
mov
mov
lds
fisttpll
shr
loope
xchg
mov
xchg
cld
sub
add
mov
enter
sbb
enter
sbb
addr16
xchg
bound
mov
outsl
xor
mov
pop
jmp
mov
push
adc
mov
lods
adc
in
pop
jae
xorl
negl
cmpsb
xor
cmp
into
ja
cld
push
cmp
out
outsb
jae
jle
jmp
sbb
push
xor
sub
pop
cmpl
add
sbb
fwait
insl
lret
jno
xor
sbb
add
add
shr
not
xor
incb
pop
mov
sub
push
enter
movsl
loopne
fcmovnbe
cltd
lods
aas
fldpi
sub
dec
push
js
mov
loop
addb
pop
or
or
pop
test
out
sub
das
fs
pop
cmpsl
push
add
in
fs
std
xlat
and
aad
popa
lea
addr16
pop
push
jmp
pop
sbb
mov
repz
frstor
inc
in
or
imul
and
fidivs
insl
int3
xor
lret
inc
ljmp
push
adc
sub
in
movsl
and
stos
jge
hlt
add
push
rolb
xchg
and
dec
xor
gs
mov
ret
jno
sti
xchg
add
dec
sub
push
jle
add
jge
in
mov
lods
repz
jecxz
movsl
inc
jmp
push
adc
xchg
call
aaa
push
mov
mov
mov
mov
xchg
push
cmpsb
popa
push
les
xchg
mov
pop
xchg
sbb
mov
push
jae
push
cli
adc
pushf
mov
orl
stos
pop
jmp
push
out
sbb
outsl
mov
and
aam
int
sub
push
jns
xor
jmp
xchg
adc
mov
and
out
sbb
sbb
or
xchg
fidivl
or
sub
push
pop
adc
mov
dec
pop
out
and
mov
stos
add
push
cmp
jnp
add
jmp
out
add
inc
or
or
push
out
pop
jmp
cmpsb
and
dec
daa
in
popa
sahf
dec
mov
es
testl
adcb
call
mov
pop
ret
testb
icebp
push
xchg
orb
sub
arpl
decl
shll
out
dec
test
dec
pusha
pop
outsl
gs
cmp
adc
shrl
add
loope
loope
outsl
or
sub
mov
out
or
cltd
adc
punpcklbw
mov
jbe
mov
jns
mov
fsubrs
add
mov
mov
aas
or
sbb
jmp
add
sbb
sub
inc
popa
push
sub
cmp
and
daa
pop
push
or
test
enter
push
mov
pop
push
add
jp
insb
jnp
cmp
mov
xchg
add
repnz
pop
sub
lret
sbb
jp
sub
jbe
and
jae
sbb
or
push
adc
iret
rclb
sbb
and
out
lds
movsb
rclb
push
les
mov
sub
pop
mov
xor
pop
rolb
jg
sti
fs
out
add
sub
add
mov
leave
fidivl
rcrl
in
push
fcompl
sbb
cwtl
jbe
add
jne
inc
mov
imul
sbb
mov
inc
cmp
xor
pop
outsb
cmpsb
cmp
out
orb
fbld
cmp
push
push
sub
fdivl
and
addb
insb
or
jo
jne
sub
data16
mov
out
dec
mov
pop
push
shlb
add
call
test
bound
dec
dec
sti
and
inc
jmp
xor
pusha
lea
icebp
jge
popa
push
sub
add
inc
sub
movsb
mov
jle
adc
shll
mov
add
mov
addl
and
jbe
adc
hlt
loope
add
aam
xor
in
sbb
add
fldcw
sahf
sbb
movl
outsl
shl
add
dec
and
fidivl
or
sbbb
xlat
or
rorb
in
add
dec
push
adc
pop
and
mov
aam
jmp
push
ret
pusha
push
mov
jmp
sub
or
jno
mov
sub
or
ret
add
pop
inc
or
cmovbe
xlat
pop
rcrb
and
pop
and
dec
cli
jle
or
inc
jno
push
test
dec
in
std
fldenv
push
aad
and
nop
mov
stc
mov
stos
fdivrl
movsb
mov
or
out
pusha
or
and
jmp
or
dec
push
add
loop
sahf
sub
pop
xchg
or
adc
mov
xchg
sub
aam
in
adc
inc
lods
inc
insl
addb
loop
jle
and
cmp
mov
ret
mov
mov
pusha
repz
mov
add
push
es
add
dec
subb
sub
pop
fsubl
jno
xchg
sub
sbb
mov
jns
pushl
or
outsb
dec
cmp
cmp
cmp
jmp
ret
add
xor
xchg
cmp
xlat
mov
mov
add
xor
add
sbb
repnz
movsb
ret
js
dec
sbb
xchg
lods
cli
aad
push
push
out
sbb
sbb
mov
test
aam
and
or
cmpsb
outsb
mov
inc
loopne
mov
or
ljmp
or
push
sarb
add
fbld
cltd
and
jae
sbb
push
out
ja
cs
add
add
xor
call
pushl
push
mov
pop
sarb
jmp
ljmp
ret
or
sub
adc
mov
push
push
mov
das
pop
dec
outsl
jge
fwait
lea
jp
pusha
ror
stos
and
push
pop
add
dec
neg
std
mov
xor
inc
pop
insb
sbb
dec
dec
js
inc
mov
insb
lods
push
movsl
insb
lahf
test
ffree
inc
out
testl
push
xchg
mov
out
xchg
and
and
push
push
out
push
rolb
xor
jmp
or
adc
add
fidivs
add
clc
cmp
mov
pushf
fs
push
add
push
push
push
jbe
push
jmp
mov
add
xchg
inc
or
jo
dec
pop
seta
scas
roll
mov
roll
inc
xchg
xchg
inc
or
addb
jmp
ljmp
push
testb
xor
mov
mov
inc
xorb
dec
mov
shr
popf
inc
aaa
or
dec
cmp
dec
cmpl
out
sbb
imul
lcall
jb
sub
dec
enter
xchg
enter
push
jbe
cltd
rolb
adc
dec
loop
les
ljmp
add
aaa
or
adc
mull
dec
push
lea
lret
aaa
dec
inc
enter
mov
jnp
cmp
jmp
rcll
jp
cwtl
test
or
jo
cmp
push
clc
scas
ret
rcrl
in
inc
out
cmp
arpl
sbb
scas
lea
add
xchg
adc
ficompl
cmp
add
inc
or
xchg
adcb
loopne
mov
lcall
ret
hlt
lods
fwait
xchg
call
jmp
cmc
push
pop
imul
cmpb
lods
push
mov
pop
inc
es
mov
adc
sbb
or
pop
push
adc
or
sarl
repz
inc
mov
add
jg
imul
mov
imul
lods
in
notl
sub
aaa
jbe
out
pushf
int
flds
sbb
pop
pop
add
outsl
test
cli
and
push
or
pop
call
mov
add
outsb
fldt
adc
pop
xchg
lds
fs
sub
xor
add
mov
pop
mov
pop
sbb
popf
xor
mov
mov
or
pop
lcall
xchg
in
fadds
jmp
shr
push
cld
jg
leave
adc
inc
out
shl
push
fxch
mov
push
add
mov
sbb
loopne
or
rolb
aam
popa
daa
incl
sub
out
pop
cmp
push
in
cmpsl
pop
fisubs
bound
xor
mov
push
outsb
in
imul
js
dec
pop
sub
push
mov
es
sub
ret
mov
dec
dec
enter
mov
mov
sbb
inc
xchg
mov
ds
neg
sti
inc
ret
jg
dec
or
fs
pop
jl
or
shl
and
mov
leave
in
loope
mov
cmp
push
scas
pop
test
mov
nop
dec
jge,pn
aas
pop
mov
aam
push
xchg
pop
mov
and
cmp
inc
dec
ret
or
popa
push
iret
enter
add
mov
cmp
xchg
inc
xor
and
and
push
mov
sti
lock
xor
push
repz
jno
pop
jmp
fs
adc
xchg
cld
push
sub
pop
jae
lret
lods
inc
decl
rcll
stc
push
test
icebp
cmp
cmp
sub
jle
mov
jge
pusha
cmp
jmp
ret
dec
movsb
cltd
pusha
jl
rep
add
cmp
pop
addr16
inc
mov
pop
fwait
lods
shll
pop
icebp
clc
mov
cld
cmp
mov
jle
xchg
rclb
dec
shll
and
rorb
or
pop
push
push
pop
mov
fsubrs
pop
sub
or
iret
mov
pop
push
mov
mov
push
and
jno
outsb
fnsave
outsb
inc
aad
jg
push
add
or
jmp
lahf
sahf
rclb
jmp
pop
test
mov
lea
test
dec
loop
cmpsb
sub
rcrb
sbbb
popa
mov
xor
adc
pop
clc
aas
std
rorb
sbb
jecxz
xlat
xor
stos
in
sbb
aas
mov
inc
iret
sub
pop
movsb
cmp
lret
push
icebp
sub
dec
aad
adc
jmp
adc
mov
inc
adc
sub
popf
adc
rcll
stc
jp
mov
mov
mov
jg
mov
or
pop
stos
or
xor
out
mov
and
les
cs
push
int
das
dec
add
push
push
inc
sub
jl
shll
fsts
sbb
pop
rclb
push
xchg
dec
inc
xchg
inc
xchg
jo
cs
pop
inc
pop
pop
dec
or
pop
mov
add
jge
jmp
push
in
jno
mov
int
pusha
fs
bound
add
jno
mov
jmp
pusha
mov
andb
adc
add
add
outsl
mov
lret
xor
mov
mov
jns
pushf
divb
mov
test
sub
stos
inc
adc
or
inc
cmpsb
push
sub
and
mov
rcrl
push
lea
sub
inc
fsubrl
and
dec
pop
shlb
xchg
out
lods
push
pop
idivb
lea
mul
fsubrl
lock
inc
sbb
push
sub
rcrb
clc
les
add
shr
adc
js
jno
jle
mov
xchg
pop
and
int3
scas
mov
sub
adc
mov
add
mov
ficomps
fidivrl
roll
out
pop
scas
mov
or
mov
xchg
cmp
rclb
inc
add
mov
adc
aas
movsb
rol
add
xchg
ret
js
xor
dec
sub
pop
divb
fadd
in
dec
push
mov
cwtl
rcr
mov
lds
pop
sub
pop
pop
and
pop
pop
mov
push
in
scas
les
push
jne
subl
lock
push
mov
pop
hlt
or
adc
and
cs
sbb
call
push
cli
outsb
jmp
out
vcvttps2dq
pusha
jmp
mov
jne
les
xor
inc
or
jae
loope
add
or
push
jo
aas
sbb
xchg
inc
push
mov
iret
xchg
pop
movsb
jno
rorb
add
push
loope
and
and
adc
scas
cmp
pop
cwtl
inc
bound
pop
bound
jp
cmp
jb
in
inc
push
and
adc
sbbb
scas
mov
mov
lods
ret
fs
and
inc
or
push
jbe
mov
fisubs
jne
dec
xchg
jae
not
or
adc
push
jmp
mov
cmpb
lods
loop
push
sub
in
leave
xlat
xchg
pop
xor
imul
xchg
es
rolb
sbb
mov
push
sbb
adc
pusha
adc
add
ja
hlt
push
xor
and
push
outsb
or
or
ret
mov
cltd
cltd
outsl
cmp
mov
adc
or
inc
jmp
rcll
push
arpl
pop
push
scas
pop
int3
pushf
add
adc
movb
outsb
push
stos
xchg
negl
ret
inc
xchg
add
pop
mov
jno
cs
pop
data16
test
filds
push
xchg
dec
xchg
je
out
push
movsb
xlat
push
aad
mov
pop
nop
pop
or
cmp
popa
cmp
bound
pop
mov
and
dec
xchg
or
xlat
sub
inc
adcb
push
cmpsb
fbld
jg
jmp
cmc
add
lods
push
push
aas
pop
mov
int3
mov
jp
inc
adc
or
sub
jmp
xor
mov
addb
pop
mov
insb
mov
inc
push
jmp
hlt
pop
sahf
rorl
and
add
cmp
jne
lret
push
rolb
cmp
mov
xchg
jo
sbb
push
push
ja
rcrl
mov
cmp
shll
xchg
pop
push
sub
or
popa
cmp
js
insb
sub
imul
dec
nop
mulb
fiadds
inc
or
push
mov
cld
jb
popf
data16
cwtl
fidivl
xchg
aaa
pushf
lret
leave
inc
scas
add
es
imul
inc
adc
or
xchg
dec
push
xchg
mov
fisubl
pop
mov
mov
xchg
dec
fidivl
orl
push
or
orb
push
sub
test
add
outsl
cs
and
cmc
or
jmp
cmpl
aas
push
jo
push
add
divb
push
enter
pop
xor
pop
jmp
lock
daa
daa
scas
push
pop
cmpsb
inc
fldl
clc
mov
pusha
shlb
push
cmp
jmp
aad
pop
and
js
sti
xchg
add
sub
pushf
or
scas
not
in
jle
xchg
inc
dec
or
and
rclb
popf
lock
sbb
insb
add
into
xor
jg
in
sub
addb
pop
pop
jle
and
mov
data16
sbb
mov
adc
sub
sub
or
add
push
mov
mov
out
or
outsb
sbb
or
adc
mov
and
jmp
adc
mov
inc
aam
sub
es
clc
cmc
sbb
test
mov
xchg
out
cmp
cs
pop
push
outsb
fs
mov
sub
push
and
add
das
imul
dec
inc
jbe
or
dec
test
add
or
in
add
cmpsb
or
jo
add
add
pop
inc
and
cmpsb
and
icebp
cmp
pop
cmpb
add
outsb
or
jl
lock
sub
lahf
pop
add
repz
rolb
ret
mov
fldenv
test
mov
outsl
inc
int
not
push
jo
repnz
test
popf
push
cmp
fstpl
or
sbb
int
mov
inc
pop
notb
add
mov
push
das
mov
mov
adc
xchg
and
jmp
push
and
push
add
push
push
cli
push
xchg
sti
add
in
lea
lret
jns
sbb
adc
cmp
shrl
out
push
sahf
add
pop
nop
and
push
test
pop
lods
and
sbb
lret
mov
repnz
or
dec
or
and
fimull
arpl
insb
les
sahf
out
xchg
shlb
pop
pop
push
testl
pushf
dec
xor
inc
out
mov
jge
mov
mov
lock
add
mov
pop
mov
jno
xchg
lret
push
mov
inc
mov
hlt
mov
pop
roll
fistpl
scas
gs
jmp
push
adc
cmp
int3
inc
fimuls
clc
pop
mov
in
inc
and
push
add
cmp
xlat
push
jmp
stos
lds
sub
push
rorl
jno
and
fwait
imul
das
pop
lods
daa
stc
lret
adc
into
mov
mov
ljmp
or
pop
popf
fistpl
adc
cwtl
dec
add
and
jle
mov
roll
dec
push
sbbl
mov
enter
pop
adc
out
add
repz
push
dec
cs
adc
adc
pop
rolb
cld
inc
add
pop
jmp
mov
mov
jecxz
in
mov
push
fildl
xorb
xchg
les
enter
pop
inc
push
xor
add
stos
rcl
leave
pop
aad
jecxz
adc
adc
repz
mov
out
mov
jge
mov
sub
jmp
pop
or
sarb
aam
inc
push
xchg
or
jb
lahf
gs
fs
pop
imul
or
jne
dec
rcr
add
or
pop
add
ja
icebp
dec
mov
stos
or
stos
pop
orb
xor
insb
xchg
adc
xor
push
out
cli
adc
in
test
shlb
pusha
arpl
xchg
add
xor
aaa
pop
xor
rclb
pop
popf
pop
mov
and
or
dec
push
jns
or
dec
js
mull
push
mov
xor
xchg
adc
into
test
imul
push
or
jmp
add
adc
iret
add
and
jmp
mov
mov
add
jmp
aad
loope
repz
mov
or
push
sbb
xor
dec
pop
dec
addl
jb
dec
cs
push
pop
mov
testb
mov
cmp
js
adc
mov
add
jmp
mov
sar
jbe
das
stos
dec
stos
pop
xchg
shr
add
jo
pop
xor
js
inc
sti
pop
xchg
xor
push
jmp
test
pop
mov
pushf
xor
rcll
pop
pop
mov
cmp
out
push
xor
lds
sti
push
lea
adc
pop
jecxz
xlat
and
loop
pop
xchg
push
pop
sbbl
mov
mov
cli
add
cmc
adc
jo
pop
std
addb
imul
and
mov
pop
cmp
or
jns
imul
cmp
ds
es
je
filds
out
sub
push
mov
xor
lcall
add
add
jecxz
mov
xchg
or
adc
sub
cli
loopne
mov
adcb
cmp
jmp
push
xchg
xchg
sub
shlb
lret
and
mov
sub
inc
xchg
hlt
ret
sbb
ss
adc
push
cmp
andb
and
fdivrs
pop
push
mov
dec
roll
dec
rorb
xor
out
call
and
dec
push
jl
dec
loopne
and
xlat
push
cmpsl
js
inc
repz
and
loope
imul
lahf
push
insb
jmp
cld
xor
jmp
addb
or
inc
fisubl
add
test
dec
lods
cmp
fisubrs
mov
jns
xor
es
lret
aam
roll
mov
sub
fiadds
lcall
pop
jge
and
test
pop
into
shlb
mov
push
pop
push
lock
mov
pop
inc
cmp
cwtl
adc
aad
lret
and
lods
inc
ljmp
inc
cmp
mov
pusha
and
mov
cs
hlt
and
adc
repz
fldcw
ret
push
fucomp
gs
fsubs
pop
dec
scas
lods
push
push
mov
push
mov
cmc
add
movsb
aad
or
push
fs
mov
and
out
cmp
and
inc
xor
iret
adc
mov
sbbb
into
add
push
call
mov
or
or
pop
gs
das
mov
lret
pop
or
dec
jmp
insl
je
or
lds
jl
add
xor
rcl
inc
dec
mov
in
aas
xchg
inc
insl
das
adc
filds
pop
add
xor
test
call
std
mov
pop
imul
ds
inc
cli
jl
add
test
jo
stc
inc
les
or
aas
jle
or
jmp
jae
pop
mov
das
push
mov
loopne
pop
or
shr
imulb
jp
push
not
sti
inc
or
push
or
mov
sub
test
stos
inc
lods
jl
or
mov
stos
xchg
jnp
out
inc
loop
or
sbb
movups
data16
xchg
pop
jp
xchg
xchg
ds
repz
movsb
lods
xor
cli
insb
mov
mov
mov
aam
test
daa
jnp
lds
add
pusha
mov
adc
dec
and
and
sub
adc
push
jmp
xchg
push
push
stos
rcrb
and
jae
setge
cs
cmc
pop
repnz
push
pop
and
xor
sbb
mov
or
push
xor
rclb
xchg
pop
push
flds
and
gs
stos
sub
mov
xchg
push
push
pop
pinsrw
ds
adc
xchg
test
or
mov
xchg
loopne
nop
mov
aas
xor
out
sahf
xchg
sub
or
push
lds
clc
pushf
xchg
sbb
sub
pop
scas
iret
xchg
stc
dec
ret
movsl
jns
inc
jne
fstpl
mov
imul
sub
add
dec
incb
and
mov
inc
test
imul
into
mov
ss
push
rclb
shll
jmp
cmp
mov
in
mov
xor
js
adc
jmp
pop
ss
add
push
pusha
mov
push
adc
sbb
sbb
test
lret
push
inc
push
xchg
jmp
lret
fidivl
dec
dec
and
and
sub
pop
shrb
xchg
jecxz
cwtl
enter
gs
js
adc
in
add
xor
lods
lcall
mov
cmp
sahf
push
lea
pushf
les
cmp
sahf
js
cld
inc
pop
sub
or
stos
dec
jmp
repz
icebp
mov
lret
add
pop
cmpsb
subb
or
jb
arpl
cmpb
dec
mov
or
test
std
ds
fstl
int3
pushf
sub
adc
xchg
je
dec
push
das
sub
aas
out
or
mov
push
mov
test
repz
xlat
test
xchg
jmp
shr
add
dec
cmp
fldl
les
iret
pop
scas
leave
test
push
mov
sub
fldl
and
mov
jmp
mov
int
push
add
les
testl
xchg
add
adc
mov
iret
shrl
inc
xchg
push
loopne
sub
jmp
daa
mov
in
cld
push
sbb
leave
pop
imulb
jg
inc
add
sub
cmp
popa
test
les
adc
call
mov
ds
mov
pop
rol
ljmp
xchg
inc
call
add
jl
imul
lcall
and
mov
adc
fstpt
int
push
pop
fldcw
jp
sti
mov
pop
sbb
or
sub
imul
jmp
pop
mov
mov
xor
adc
mov
dec
add
cmpsb
jb
lahf
pusha
ret
push
dec
adc
or
sub
xor
sub
and
mov
or
push
sub
imul
fs
and
arpl
ret
sub
mov
and
mov
fstpl
add
cmc
xor
add
ret
cmp
mov
pop
test
stc
out
pop
dec
or
dec
pop
jmp
pop
push
push
xor
fistps
nop
pop
punpckldq
jl
mov
imul
es
out
enter
sub
not
push
mov
stos
scas
leave
mov
jno
inc
fiaddl
pusha
sbb
ficoms
add
push
out
push
dec
ficomps
inc
pop
mov
or
popa
push
push
jmp
roll
sbb
add
fdivr
imul
cmp
das
shll
mov
bt
or
add
adc
lcall
or
incb
push
push
dec
pop
sub
cmp
imul
clc
push
and
out
cmpsb
test
bound
jmp
or
cmp
or
pop
mov
xchg
push
jmp
jo
jno
cpuid
mov
in
and
xor
loope
imul
jmp
shrl
aaa
enter
ds
xor
and
or
jmp
ja
jo
fisubrl
jae
or
lods
sub
add
push
xlat
imul
pop
push
sub
xor
adc
dec
je
sbb
cmp
out
add
in
add
add
sub
jmp
testb
js
and
cmp
imul
add
or
fimull
mov
xor
inc
mov
sub
add
notl
add
outsb
sub
aaa
rolb
mov
imul
add
leave
jle
jl
or
jmp
rorl
sub
adc
outsl
adcb
sub
push
notb
pop
notb
dec
cli
popf
icebp
out
push
inc
xlat
sub
outsb
sbb
cmp
xchg
stc
mov
mov
xchg
add
mov
packuswb
push
sti
pop
pop
js
or
not
sbb
adc
arpl
sub
aas
pop
add
pop
jmp
sub
or
dec
loop
mov
ficompl
jg
xlat
adcb
jns
js
or
xor
nop
xchg
roll
cmpl
orb
or
daa
stos
dec
cli
mov
ss
push
jmp
rcrb
mov
xchg
or
out
mov
out
jo
notb
es
or
mov
daa
in
push
fdivs
xchg
mov
pop
jne
sbb
adc
sub
cmp
add
add
push
jmp
add
pop
repnz
mov
out
iret
and
pop
shll
jecxz
or
add
ljmp
sbb
cmpsl
mov
jmp
xchg
mov
popf
adc
pop
push
jb
push
rorl
aas
loop
test
jae
sub
outsl
push
cmp
mov
push
loop
adc
adc
add
jp
sub
jne
orl
mov
fwait
cmp
ljmp
cmp
shrl
aam
cmp
iret
pop
adc
jmp
shlb
ja
push
and
mov
adc
inc
jae
divl
test
adc
dec
sbb
divb
pop
push
push
pop
mov
out
cwtl
pop
and
loop
pop
pushf
sub
mov
ret
push
mov
fsts
mov
adcb
pop
adc
mov
fistpl
call
pop
mov
mov
push
push
ret
push
sti
sub
cmp
pop
inc
bnd
jg
repnz
push
mov
das
xchg
sbb
cmp
icebp
push
inc
mov
xchg
incl
jmp
pop
pop
lock
fsubrs
std
arpl
and
shl
xchg
or
popf
jp
or
sbb
lret
out
jg
outsb
add
leave
sub
sbb
add
sbb
or
jns
add
pop
rcrb
mov
out
into
dec
and
sbb
add
jmp
int
push
push
jecxz
pop
xor
fld1
jnp
ds
push
push
test
xor
xor
push
sbbl
mov
je
stos
mov
adc
lds
cmpsb
mov
adc
int
cmp
sub
je
popa
pop
cmp
and
cmpb
xor
lock
daa
push
jo
add
pop
test
test
inc
add
outsl
or
pmaxub
syscall
and
push
jg
jmp
mov
or
xor
repz
jo
sbb
subl
into
and
adc
and
sahf
shlb
sbb
ret
imul
ret
cli
jno
fisubl
data16
sbbb
add
fdivs
adc
ss
add
pop
push
in
add
cmc
lahf
cli
sbb
xchg
xor
pop
sbb
mov
and
pop
mov
in
test
rclb
mov
nop
bound
or
push
dec
subb
push
xchg
mov
push
pop
daa
cmpb
dec
and
sub
sub
mov
and
lahf
data16
cmc
sbb
rcll
inc
int3
shll
push
add
std
js
cmp
mov
test
mov
adcb
sub
push
shrl
lcall
xorb
repz
mov
lods
lds
mov
sub
adc
xchg
jo
or
xor
jg
xchg
pop
mov
adc
mov
scas
jno
or
pop
lahf
pushf
and
lret
jp
xchg
sub
stos
adc
fsubrl
xor
xchg
lock
insl
or
add
or
adc
sbbl
js
dec
add
push
pop
sarl
ds
dec
or
mov
jmp
pop
ret
xchg
scas
xor
leave
add
add
inc
daa
push
sub
mov
jns
jmp
fnstsw
dec
jbe
std
loopne
repz
add
mov
shl
mov
jbe
sub
push
or
ljmp
pop
push
cmpsl
out
movsl
inc
in
pop
xchg
in
nop
sti
or
inc
cmp
jmp
dec
out
das
or
dec
mov
hlt
dec
jb
pop
fistpll
adc
add
inc
add
test
dec
sub
lret
push
xchg
inc
inc
jmp
mov
call
das
loopne
jmp
insl
pop
scas
sub
mov
mov
shr
pushl
notl
and
aam
mov
notb
push
mov
add
stc
inc
xor
jb
mull
xchg
push
or
popf
dec
out
push
fs
les
push
dec
xor
mov
jmp
out
adc
mov
push
add
jb
lock
sub
and
fisubs
adc
push
push
insb
xor
cmc
jge
jo
pop
imul
xchg
aad
pop
jmp
push
cmc
xorb
push
dec
dec
test
stos
dec
loop
mov
jo
mov
or
outsb
sub
pop
fisttpl
cli
les
fcoms
push
mov
jmp
pop
lret
add
or
xor
call
std
pop
lods
fsubrl
adcb
aad
add
xchg
in
pop
cmp
mov
mov
mov
pop
dec
jmp
push
popf
push
outsl
push
sub
enter
pop
push
aam
out
cwtl
dec
and
loop
pop
out
sbb
shll
jae
add
dec
push
adc
add
lods
icebp
sub
dec
xchg
jbe
sub
push
dec
cmpsl
rcll
dec
or
mov
in
mov
out
shll
out
pop
cmp
das
aam
add
push
jo
mov
sub
jmp
popf
sbb
and
outsl
and
sub
xor
addr16
jo
xor
fisttpl
or
cmp
sub
jae
pop
out
adc
adc
out
stos
imul
or
lea
ljmp
lahf
cmp
add
jmp
xor
nop
stos
in
out
dec
mov
pop
lods
leave
pop
mov
and
add
pop
pop
aad
jnp
lea
aaa
test
test
lret
push
neg
sub
pop
xchg
cwtl
mov
jmp
test
imul
sub
mov
mov
cmp
push
ljmp
das
mov
std
aas
std
adc
xlat
sub
aam
push
xorl
or
dec
xchg
daa
and
inc
xlat
sub
adc
xor
mov
or
jmp
adc
cmp
sahf
ret
sub
add
mov
push
jmp
xchg
add
adc
sbb
shr
pushl
cmpsb
jecxz
dec
fldcw
cmp
push
xchg
mov
sti
imul
neg
push
and
out
and
pop
insl
mov
inc
les
pusha
mov
sbb
add
shrl
hlt
xor
pop
fiaddl
negb
push
cmp
sahf
xor
stos
movsl
lcall
popf
fisttpl
fwait
mov
push
lods
loope
roll
sub
and
push
push
xchg
pop
inc
xchg
loopne
jmp
cs
or
and
ret
pusha
mov
shr
add
push
ljmp
ret
call
and
jmp
sub
test
xor
and
xlat
jnp
mov
rorl
push
sub
pop
dec
xor
dec
cwtl
xlat
dec
in
pop
lret
cli
add
mov
jmp
in
jge
pop
lods
mov
and
in
orb
pop
ret
jecxz
fisubl
call
cmp
punpcklbw
aas
sahf
add
and
push
xor
jae
jo
fadds
xor
cmp
jecxz
jmp
mov
xor
rcll
pop
mov
sub
pop
mov
shll
in
add
gs
or
scas
cmp
mov
lgs
icebp
in
jo
pop
xchg
aad
loopne
push
ja
jnp
frstor
syscall
repz
cmpsb
pop
mov
xor
fucomip
xor
pop
adc
mov
and
xchg
inc
and
mov
add
ljmp
mov
or
movl
rcrl
push
jno
jmp
mov
aam
jno
shr
sub
mov
mov
mov
sub
push
xorb
mov
mov
jb
and
mulb
xor
pusha
dec
pop
mov
popf
push
add
sbb
dec
add
or
add
ret
push
aam
ljmp
pop
push
sbb
stos
fdivs
and
pop
push
test
je
sbbb
enter
rorl
cmp
xlat
and
adc
pop
movsl
test
xor
mov
clc
insl
dec
fs
cltd
test
xchg
arpl
push
add
push
rcll
int
and
pop
rcl
in
ljmp
ds
hlt
xchg
or
lods
xor
dec
mov
pusha
sbb
push
push
or
ret
es
mov
mov
cltd
icebp
jg
pop
in
std
mov
mov
hlt
insl
loope
aas
gs
mov
ja
dec
cmp
pop
pop
inc
jmp
push
ret
xchg
pop
imulw
in
mov
dec
sub
xor
sti
xor
roll
test
adc
adc
or
sbb
lret
push
int3
movsl
pop
jg
ficomps
sub
xor
push
jmp
pop
in
mov
xor
popa
dec
fmull
add
pop
pop
out
das
dec
divl
mov
dec
sub
or
outsb
cmpsb
mov
mov
leave
aam
and
inc
xor
ja
push
shll
adcb
std
shr
pop
push
mov
push
je
or
fimuls
inc
xorl
mov
and
outsb
and
lds
inc
xor
bound
or
out
inc
push
dec
jg
mov
push
repnz
mov
and
xchg
dec
fidivl
sub
cmp
fstpl
ficomps
pop
cli
sti
decl
pop
and
movsb
add
push
add
into
xchg
frstor
inc
or
mov
pop
fdivl
lret
add
or
lock
pushf
bound
sub
filds
in
imul
icebp
and
sbb
xlat
pop
fstps
push
mov
lods
sub
es
sbb
xor
pop
or
adc
push
lcall
pop
add
xor
enter
mov
inc
or
addr16
inc
push
lcall
sub
rolb
push
lods
adc
cmc
dec
inc
out
dec
loop
js
sbb
pusha
fsubl
mov
fld
pop
orl
dec
jg
add
les
scas
add
cli
pop
or
adc
adc
jno
not
push
outsb
jmp
dec
push
push
cmpsl
bound
jge
push
cmp
inc
nop
lods
orl
inc
and
push
and
adc
add
lods
push
leave
jmp
or
pop
and
je
sub
jmp
ret
and
dec
loope
cwtl
pop
sbb
push
mov
jbe
xchg
repz
add
or
out
sub
pop
mov
or
jecxz
cmp
sahf
xchg
sub
add
xchg
pop
pop
jecxz
icebp
inc
jmp
outsl
scas
scas
int3
sub
repz
call
cmpsl
sbb
push
push
push
imul
nop
ljmp
ja
lahf
dec
aam
call
cmc
dec
mov
xlat
pop
or
cli
push
add
aad
dec
cmovle
or
inc
repnz
out
add
sbb
cmpb
fwait
xchg
das
adc
pop
lahf
js
add
xorl
push
movsb
push
in
or
ja
pop
add
out
jge
loope
pop
hlt
data16
movsb
movsl
cli
mov
insb
ss
push
fsub
jmp
add
jl
dec
pop
iret
add
jo
adc
inc
pop
xor
negl
ret
pop
xor
pop
jecxz
jae
ja
push
lods
or
or
jg
dec
add
add
stos
or
xchg
test
fstpl
mov
lods
push
aas
jns
adc
mov
stc
in
pop
adc
sbb
loopne
xor
inc
es
pop
mov
add
push
push
or
jp
mov
jmp
cmpsb
stos
adc
shl
inc
cmp
test
daa
shrb
ss
cmpsb
nop
or
loope
aaa
sub
dec
fcoms
mov
out
add
dec
mov
pop
add
mov
adc
scas
or
ljmp
xlat
inc
sbb
inc
sbb
or
inc
add
lcall
xchg
or
cmpsb
stos
push
dec
bound
roll
ret
push
add
cmp
or
out
sub
and
rol
push
stos
add
pop
cld
test
push
mov
out
sub
dec
mov
neg
sbb
jmp
adc
mov
rcr
and
testb
jecxz
stos
mov
or
jle
mov
ljmp
pop
push
jo
push
test
add
fdivs
aad
dec
popa
mov
aaa
add
fdivl
ss
movsb
shrl
push
cwtl
or
pop
cmp
sub
in
loop
jnp
addl
or
aas
push
push
mov
out
sbb
inc
pop
movsb
cmc
add
daa
dec
sbb
adc
add
fcmovbe
mov
and
mov
aad
mov
dec
push
in
nop
sub
sbb
les
call
and
int3
lahf
dec
pop
lret
push
and
sub
inc
mov
pusha
push
xchg
push
aam
cmpl
aaa
cmp
mov
ljmp
xor
add
pop
or
add
sub
pop
inc
xor
jmp
je
fists
xor
mov
mov
xchg
addb
and
aas
insb
and
jmp
add
mov
xchg
mov
data16
xor
sbb
push
sbbl
pop
push
adc
xchg
subb
hlt
cwtl
bound
cmp
in
or
popf
sbb
cwtl
lds
fdivs
pop
pop
or
mov
cmp
pop
popf
jae
or
dec
fsubrl
inc
lret
sub
push
popa
sar
adc
sbb
push
jae
cmp
pop
cltd
mov
push
jne
fldl
movsb
pop
push
mov
cmpsb
mov
inc
out
leave
ja
push
lock
mov
adc
leavew
xchg
dec
sbbl
inc
mov
gs
lret
jno
adc
addb
mov
int3
int
sub
dec
test
jecxz
aas
jne
shr
and
jmp
jnp
xchg
mov
cmp
lcall
pop
mov
mov
inc
inc
popf
pusha
popa
js
xor
dec
mov
jecxz
cmp
aaa
in
scas
shrb
mov
lea
jae
scas
push
mov
push
mov
or
jecxz
mov
or
push
pop
div
aad
fcoms
sbb
aaa
xchg
cmp
int
addb
or
xchg
push
xchg
mov
call
mov
xchg
add
dec
jmp
das
pop
pop
ret
or
xchg
ficomps
fsubs
sarl
aaa
dec
or
js
repnz
xchg
cmp
dec
popa
push
jbe
xchg
xor
sub
iret
out
pop
and
add
popw
adc
clc
filds
setg
repz
outsb
pop
mov
enter
jnp
adc
faddp
orb
push
sbb
pop
xchg
stos
mov
lds
cmp
xor
daa
shl
js
ljmp
int
cmp
subl
scas
push
movsl
outsl
pxor
and
out
add
push
mov
in
pop
xor
arpl
cmp
add
std
dec
mov
lret
lds
or
jae
inc
jmp
mov
not
jo
push
pop
add
add
sub
shrb
data16
shl
add
stos
add
dec
lods
pop
sbb
xor
sbb
pop
lds
mov
aad
insb
loopne
nop
mov
in
add
int3
adc
cmp
fisttps
inc
xchg
adc
xorl
iret
pop
xchg
cltd
dec
jecxz
std
add
fwait
addb
mov
add
sub
mov
loope
or
lea
pop
mov
fcoms
mov
add
mov
add
inc
fisubs
mov
testl
loopne
sbb
cwtl
pop
add
jmp
lods
repnz
sahf
mov
add
lock
or
repz
inc
dec
cmc
sub
xor
inc
or
cmp
insl
adc
jo
jnp
add
pop
scas
adc
pop
push
pop
jmp
idiv
push
sub
shl
dec
stos
jmp
rorl
inc
fwait
cmp
inc
jle
pop
xlat
in
addb
inc
addr16
or
add
aad
out
arpl
cmp
fisubl
adc
out
push
cmpsb
cli
je
scas
fstl
out
jle
push
or
pop
inc
xchg
add
in
or
in
jl
inc
addl
scas
push
pavgb
rcrl
xor
xchg
in
gs
xlat
push
mov
mov
nop
sub
rcr
pop
sbb
sub
dec
adc
mov
gs
int
push
lods
inc
pop
call
stc
dec
pushf
adc
mov
aas
ret
jecxz
pop
and
push
cmc
xchg
jmp
shll
rcrb
aad
jp
lret
fcoms
push
sbb
mov
xor
xchg
mov
adc
loope
pop
cmc
jne
lods
add
or
add
mov
nop
jbe
popf
push
rorl
rolb
dec
add
jmp
add
addr16
nop
cmove
add
push
xor
lods
or
repnz
mov
mov
pop
daa
fstpt
rcrl
mov
jmp
cld
dec
inc
xchg
inc
mov
bound
testl
sub
pusha
icebp
sbb
in
adc
pop
idivb
push
push
lods
sti
mov
xchg
mov
pop
popf
jnp
inc
push
inc
dec
rolb
cs
mov
and
add
hlt
adcb
mov
repz
sub
sbb
pop
ret
mov
idivl
insb
hlt
aaa
repz
roll
sub
lea
xchg
stos
scas
and
sahf
or
test
or
push
cmp
inc
xlat
pop
imul
insl
mov
dec
clc
cmpsb
nop
add
es
pop
call
jmp
xor
sub
hlt
ljmp
mov
pop
movsl
mov
mov
cwtl
sbbl
fnstsw
pop
movb
adc
jne
ja
lds
adc
ss
xor
sub
add
add
add
pop
xchg
pop
pop
les
pop
fsubrs
outsb
push
hlt
insb
rorl
aad
xor
inc
or
addb
or
je
dec
mov
stos
sbb
push
pop
test
jmp
mov
mov
lret
or
jne
hlt
pop
push
cld
xor
incl
les
loopne
mov
cmpsb
xchg
aam
jecxz
sub
lods
xchg
xchg
or
std
test
leave
lea
mov
push
pop
testl
test
pop
js
sub
clc
out
jg
out
push
jae
mov
xchg
inc
xor
stos
inc
push
repz
jne
jp
sub
jecxz
dec
sub
es
add
sub
es
push
lahf
in
dec
stc
xor
adc
jp
shr
jmp
popf
push
inc
push
adc
imul
aas
imul
mov
adc
push
adc
sub
bound
pop
xchg
dec
mov
mov
cwtl
pop
inc
inc
in
mov
popa
cmp
cwtl
lret
jmp
mov
jle
mov
push
push
in
nop
dec
or
pop
add
fs
mov
cmp
push
push
loope
lret
dec
pop
inc
or
sub
jmp
or
push
inc
xor
clc
push
sbb
adc
pop
or
pop
pop
push
xor
push
push
add
fwait
add
adc
fsub
rolb
and
xchg
pop
jp
or
xlat
mov
ljmp
xor
out
nop
pop
es
add
icebp
fdivrs
std
cs
mov
cwtl
and
pop
aaa
jmp
pop
push
cs
insb
aas
sbb
xchg
sbb
pop
lock
cmp
mov
cmp
push
sub
push
add
sbb
out
in
xchg
or
xchg
mov
xor
push
popf
scas
pusha
daa
mov
ja
mov
cli
xchg
ja
sub
jo
and
pop
sbb
cmp
loopne
cmp
es
or
pop
iret
incl
not
ret
push
jg
test
push
lahf
frstor
jmp
mov
sbb
insb
aas
pop
mov
add
adc
or
psubsw
mov
push
push
in
ret
stc
repz
add
jmp
xorb
or
jmp
jecxz
sarl
mov
inc
push
mov
ss
mov
aaa
sbb
aam
lods
pop
out
bnd
push
mov
pop
loop
popa
xor
fadd
xor
imull
mov
jnp
add
xchg
dec
in
sub
adc
ss
pop
or
or
lret
ret
pop
cmpsb
sub
add
mov
lock
sbbb
push
add
xlat
xchg
adc
sub
daa
jmp
inc
lahf
outsb
dec
mov
movsb
dec
mov
fsubrs
shrb
cmp
daa
mov
les
xor
sub
scas
mov
inc
jle
jmp
mov
cmp
into
xor
dec
push
add
aam
xchg
adc
dec
mov
push
mov
sbb
add
or
sbb
dec
dec
and
mov
cltd
pop
dec
cmp
add
jae
rcll
sub
mov
andb
adc
pop
fcmovu
jb
sti
sub
mov
or
in
sub
adc
mov
imul
insb
cld
test
mov
jle
jmp
jle
test
sti
push
sbb
and
inc
push
enter
pusha
push
jp
and
es
or
ficoml
jmp
pop
mov
push
lods
jp
push
sub
roll
pop
outsl
out
nop
mov
leave
and
mov
xor
dec
xchg
adc
dec
push
mov
mov
pop
and
adc
cmp
pop
mov
std
enter
add
lret
filds
fs
pop
push
push
rorb
in
jmp
or
data16
cld
sub
sub
scas
dec
mov
outsb
pop
xor
mov
cmc
or
enter
ret
in
test
lods
fcoml
and
mov
xor
clc
ss
xor
incb
lahf
in
sub
cmp
push
sub
jl
mov
loopne
inc
cli
out
lret
std
xchg
adc
sahf
subl
stc
mov
lock
mov
inc
loopne
or
xchg
xchg
add
jo
jne
js
adcb
mov
pop
jb
xor
dec
das
je
push
pop
ret
mov
add
mov
mov
fadds
repz
inc
sarl
imul
scas
push
sub
sub
dec
out
bound
add
jg
jp
xor
jo
inc
lea
notb
pop
mov
add
shlb
insl
sub
lock
enter
adc
or
pop
sub
or
jne
push
ret
cmp
js
sbb
sbb
dec
sbb
fsubr
pop
pop
insl
and
cwtl
xor
andb
jae
pop
loop
xchg
movsb
or
mov
dec
mov
cs
dec
mov
enter
jne
sub
cmp
sub
xor
rcrb
push
jmp
out
lret
mov
dec
loop
in
aas
int
imul
fidivrs
jmp
call
sub
daa
inc
imul
sub
xchg
ds
adc
pop
daa
aad
mov
pushf
ljmp
mov
shl
lds
jae
sarb
sub
xor
rclb
mov
pmaxsw
nop
push
xchg
push
scas
or
mov
lahf
ljmp
idivl
dec
jbe
add
je
imul
std
dec
sub
pop
pushf
push
mov
jne
lods
addl
and
mov
sub
or
rcll
jmp
fistl
popf
es
outsb
sbb
cmp
add
test
push
push
sbb
sar
adc
push
xchg
cli
pusha
mov
jnp
jbe
mov
or
out
movsl
mov
and
incb
mov
shl
add
sub
dec
add
arpl
out
push
xlat
sub
cmpsb
push
mov
add
push
jne
jl
cmpsb
jmp
dec
cltd
int3
push
inc
out
mov
cltd
ljmp
add
sbb
mov
add
adcb
ljmp
pop
push
es
pusha
pop
das
sbb
xchg
cmp
and
cmp
test
out
push
xchg
repz
cmp
cmovae
mov
sbb
pop
pop
int3
popa
cli
in
xor
aam
xlat
dec
mov
mov
pop
or
pop
lret
pop
into
stos
xor
andb
neg
mov
sbb
xchg
inc
xrelease
jnp
jp
imul
push
mov
aam
orb
pop
push
mov
xor
pop
enter
pusha
enter
xchg
pop
mov
mov
das
jmp
or
gs
cmp
sbb
les
inc
adc
add
js
lcall
clc
aam
jmp
mov
nop
inc
push
loop
mov
ret
inc
dec
sub
lahf
mov
xor
cmc
push
xor
inc
cli
push
add
sbb
cmp
add
repz
xor
add
and
and
mov
push
fs
jecxz
rcll
xor
fstpl
not
inc
out
pop
dec
ret
mov
adcb
rcrb
jo,pt
popf
push
inc
jmp
addr16
arpl
adc
inc
lahf
dec
mov
xor
into
iret
fidivrl
pop
fsubrs
in
push
add
shr
fadds
mov
out
scas
sbb
sub
add
jmp
pop
fdivrs
cmpl
rcrb
stos
and
cmp
mov
mov
push
sub
lret
push
or
pop
add
jmp
fnstcw
out
pusha
xchg
movsl
jl
jg
mov
pop
pop
xchg
add
mov
loop
in
or
jmp
and
xchg
and
xchg
cli
cmp
testl
mov
loopne
mov
pop
lock
lcall
fsubr
dec
pop
nop
and
push
jo
daa
push
push
pusha
mov
in
push
adc
outsb
add
mov
neg
in
out
push
loope
out
add
das
and
push
ljmp
xlat
sbb
jl
lahf
xor
add
orl
or
dec
jl
pop
test
sbbb
mov
daa
xchg
mov
cmp
lock
pop
call
cmp
cmp
adc
loope
and
ret
jmp
sti
xor
movsl
add
orb
data16
add
or
jmp
popa
jne
push
jnp
pop
ds
or
mov
adc
outsl
mov
add
pushf
ds
repz
push
repz
mov
adc
jmp
pop
push
lods
mov
cmp
xchg
and
pop
add
adc
and
in
mov
mov
xor
out
sub
sbb
out
and
lret
sub
jle
mov
dec
outsb
xchg
xchg
lds
popa
mov
push
mov
or
call
js
mov
adcl
fwait
dec
cltd
ret
loope
loop
sub
enter
pop
mov
bound
arpl
sub
xor
imul
mov
or
mov
lahf
lret
or
mov
push
add
push
repz
adc
lret
fs
and
testb
filds
fidivl
xchg
jle
in
adc
push
adc
xchg
xor
push
pop
aad
sub
rcrl
cmp
lcall
dec
stos
sub
add
das
shll
cmp
push
mov
adc
ret
push
or
sbb
sub
mov
bound
ret
testb
orl
rclb
pusha
sub
mov
mov
sahf
test
adc
mov
scas
inc
xor
dec
jecxz
lea
jmp
add
mov
sarb
sti
pop
imul
or
xor
sub
push
idivb
jae
inc
or
and
add
in
sbbb
imul
dec
mov
loope
cmp
not
pusha
or
es
mov
sub
inc
test
push
mov
mov
cmpsb
ret
call
xchg
pop
mov
push
mov
mov
arpl
leave
adc
mov
fmul
inc
js
in
pushf
and
insl
pop
sub
lods
mov
adc
xchg
mov
int3
outsl
and
sti
rclb
pop
fwait
or
shrd
xor
push
loope
xor
cld
adc
xor
rolb
sub
out
and
jbe
roll
jne
mov
lock
dec
xor
pushf
stos
sarb
mov
jmp
adc
add
cmp
push
jle
mov
add
jmp
cli
pop
pop
add
or
xor
testl
mov
in
ja
dec
arpl
gs
jmp
push
sub
into
bound
inc
push
ja
nop
das
inc
mov
push
popa
or
int3
mov
cmp
hlt
jmp
stos
or
add
jg
jmp
js
and
xor
imull
xchg
cbtw
or
cwtl
sahf
or
fwait
cld
fcoml
out
mov
imul
sub
adc
add
ljmp
sbb
mov
jo
daa
lds
push
ret
icebp
aam
cwtl
sub
repz
adc
pop
push
inc
cmp
xor
enter
aas
rcrb
loopne
fmuls
inc
adc
loop
in
mov
xchg
mov
xchg
mov
daa
das
mov
das
inc
ror
xchg
jle
fmuls
mov
bound
pop
sbb
cmc
or
mov
arpl
jp
cmp
inc
das
cltd
jecxz
lret
push
cld
scas
lds
test
jle
lcall
fldcw
push
imul
fcmovb
add
sbb
push
sub
jmp
mov
insb
push
or
repnz
mov
in
jle
push
fildll
adc
int
cld
in
xor
shrl
pop
add
inc
push
mov
sti
sbb
call
out
pop
in
and
outsl
xchg
sub
fsubr
lahf
inc
notb
mov
pop
adc
push
cs
sub
or
inc
imul
push
add
in
mov
test
rolb
and
or
sub
mov
add
pushf
movsl
jmp
movsb
xlat
adc
movsb
rorl
xor
data16
fisttpll
cmpsl
adc
cmp
fdivs
out
xor
lock
dec
cmp
in
inc
loop
and
pop
dec
nop
sub
int3
scas
or
js
or
fstl
into
gs
shlb
jne
xor
mov
in
mov
pop
sub
sarb
lock
xchg
adc
jl
ret
sbb
and
xlat
xchg
clc
call
fcoml
dec
dec
movsb
cmp
add
int3
aaa
popa
push
imul
lcall
push
dec
sub
push
imul
sub
cmpsl
pop
push
add
pop
mov
xchg
adc
push
xchg
movsb
incb
dec
xor
mov
arpl
scas
mov
pop
jmp
in
xchg
test
add
add
jb
lock
pop
add
sbb
in
gs
rcrl
fs
jbe
adc
repz
repnz
push
adc
jmp
jb
dec
adc
push
push
and
xor
push
daa
sub
add
pop
and
mov
jge
jne
and
pop
sbb
not
dec
pushf
sub
mov
cmp
xor
push
jno
jmp
mov
sbb
adc
push
jo
sarb
ret
cmp
jne
pop
jmp
pop
dec
loope
xchg
test
mov
inc
cmp
push
dec
push
rorb
fisttps
xchg
jle
rclb
insl
or
xchg
jl
and
jmp
ljmp
jmp
mov
das
repz
pop
inc
mov
add
scas
imul
cltd
test
mov
add
fwait
or
ja
add
xchg
rolb
push
mov
fwait
test
out
dec
inc
mov
cwtl
pop
leave
inc
add
arpl
jmp
fdivrs
icebp
adc
xor
cld
mov
inc
inc
movswl
loop
test
adc
push
cmp
js
and
int
pop
or
jb
pop
and
les
aam
scas
jecxz
and
das
iret
add
dec
cs
mov
mov
rcrl
adc
mov
xlat
pushf
aad
dec
sub
call
fs
pop
loopne
test
icebp
add
mov
xchg
mov
and
fs
push
push
sbb
or
call
push
sti
lret
sub
in
insb
mov
inc
jmp
ficomps
test
jle
jns
jae
jno
mov
xchg
in
in
inc
inc
push
mov
lock
push
mov
or
clc
icebp
or
test
and
xchg
lret
inc
repnz
outsb
push
xchg
movsl
push
add
ja,pt
aas
and
aas
xchg
push
xor
shr
push
mov
jne
add
xor
inc
add
sbb
add
cmp
jnp
or
test
ljmp
pop
jle
orl
pop
lea
or
or
add
in
daa
in
mov
xor
ss
das
cmpb
fnstenv
adc
divl
pop
in
cmp
jmp
jecxz
mov
sbbl
fcomps
cmc
lods
jg
push
push
mov
pop
and
add
in
rclb
xchg
push
inc
xor
das
adc
lret
popa
les
lret
jmp
testb
cltd
test
xchg
mov
sti
mov
fstl
lret
and
dec
push
push
sbbb
sarl
sbb
or
cmpsb
or
mov
hlt
sbb
xlat
push
jmp
xchg
inc
test
push
lods
fisubs
add
loope
shr
out
adc
xchg
inc
inc
mov
cmp
mov
in
imul
mov
out
add
mov
add
jg
adc
lods
mov
xchg
repz
jmp
sbb
cmp
outsb
and
pop
nop
fcoms
or
enter
js
cmpb
and
and
and
push
adc
jbe
lret
out
sub
add
push
add
dec
test
out
js
jmp
pusha
ss
xorb
dec
or
or
mov
dec
enter
mov
pop
or
std
push
sub
pop
test
lcall
sub
lea
dec
lret
addb
add
or
push
js
mov
and
xchg
out
mov
in
push
add
sub
push
add
repnz
sub
mov
mov
neg
inc
test
in
orl
repz
inc
fstpt
enter
pop
fldl
mov
in
adc
icebp
lahf
mov
nop
sub
shrb
gs
dec
adc
and
jae
stos
adc
roll
sub
cmpsl
repnz
sub
ret
add
repnz
lds
pop
fs
pop
pop
xchg
push
movsl
dec
je
hlt
leave
add
adc
push
jmp
add
ret
idivl
adc
and
ret
xor
or
outsb
aad
dec
mov
sbb
jmp
push
xchg
loope
mov
jae
dec
insl
and
outsb
jp
gs
inc
push
stos
cli
pop
adc
in
stos
xchg
pop
adc
sahf
lds
pop
incb
clc
out
mov
movsl
fucomp
dec
sbb
push
cmpsb
jmp
push
bound
add
icebp
rorl
push
je
cmp
lcall
pushf
pop
ja
movsb
andb
shll
mov
test
xor
scas
shr
or
cmp
repnz
mov
orb
push
jmp
xlat
pop
add
ret
add
adc
mov
testb
inc
shl
cmp
stos
daa
jmp
mov
or
test
xorb
or
add
cwtl
imul
dec
sub
adc
popa
sbb
xor
push
test
popa
jb
adc
xchg
idivl
push
cmpsb
adc
sub
cwtl
fdivl
dec
sbb
push
aam
in
jg
xor
xchg
adcb
pop
adc
add
jmp
pusha
lock
bound
js
push
ljmp
and
cmpsb
ret
shld
jnp
xor
xchg
pop
pop
into
jp
push
cmp
push
jmp
in
xchg
cmp
push
sbb
sbbl
lock
sub
jmp
xor
pushw
dec
test
xor
adcb
mov
xchg
loop
in
leave
adc
pop
loopne
push
popf
clc
insb
daa
or
fcoml
lret
scas
adc
mov
add
sbb
pop
inc
jmp
es
pop
xlat
loopne
cmc
mov
push
js
jmp
and
mov
sub
int
add
cmp
lret
pop
in
mov
add
int
decb
push
jge
or
rorb
or
daa
xchg
push
mov
jmp
outsl
jp
mov
fnstsw
pop
xchg
pop
adc
push
push
cmp
fmulp
inc
or
flds
xor
jl
aas
movsb
push
jmp
fsubs
addr16
ret
pop
or
add
pop
aas
in
sbb
rorb
push
inc
and
cmp
jne
sti
test
lret
sbbb
adc
psraw
lods
or
mov
pop
fcom
andb
cmpsb
fistpl
jmp
movsl
aad
lock
push
lret
sbb
inc
dec
les
repz
outsb
incb
xchg
xor
inc
pop
cltd
lock
push
test
sar
daa
in
mov
pop
arpl
mov
add
fdivl
aas
xchg
xor
stc
mov
fmuls
mov
lods
mov
push
into
mov
lea
test
mov
inc
fdivrp
data16
cli
jb
sub
lods
mov
cwtl
pop
xor
mov
es
dec
push
sub
ljmp
xchg
jo
and
adc
gs
xchg
loope
clc
inc
movsl
lods
push
jns
xchg
call
adc
push
les
cmp
addl
loopne
mov
subb
sub
das
or
jbe
ja
pop
or
clc
inc
jo
gs
add
sub
or
cwtl
add
and
test
jmp
pop
mov
inc
pusha
negl
add
xor
mov
mov
jne
jmp
pop
movsl
loop
rcll
popf
adc
clc
pop
push
inc
jmp
negb
add
xchg
dec
jno
popa
rcll
mov
or
add
push
push
mov
push
push
cmp
mov
cmp
in
mov
enter
and
mov
mov
pop
sbb
mov
push
fld
xor
jmp
insl
mov
cltd
decl
in
jmp
push
clc
push
dec
mov
push
cwtl
mov
push
push
js
jmp
sub
pop
xor
cmpsl
stos
mov
lcall
enter
mov
fdivrs
ret
dec
sti
sbb
out
lods
xor
scas
dec
push
cli
mov
sub
pop
in
add
pop
jo
dec
rorb
cltd
shrl
insb
or
jg
repz
or
pop
push
add
sub
or
mov
mov
mov
dec
mov
sub
fdivl
aad
jmp
mov
push
mov
jmp
xor
in
sub
mov
daa
pop
add
sub
and
sbb
cmp
shl
add
xchg
adc
add
add
fwait
mov
push
pop
js
dec
dec
push
out
mov
mov
cmpsb
adc
mov
add
jnp
outsb
xor
lret
xor
leave
push
mov
rorb
or
aam
mov
and
pop
rcrl
shlb
dec
jl
pop
repnz
sub
push
lods
push
cs
mov
add
fsts
add
loopne
repnz
insl
lcall
jmp
inc
shlb
ljmp
pop
ret
rcrl
inc
jnp
and
cmc
inc
add
cld
xchg
add
bnd
push
das
cltd
test
loopne
pusha
or
ljmp
aaa
dec
loope
xchg
stc
dec
flds
ss
add
scas
divl
mov
mov
cs
aaa
sar
or
or
jmp
inc
push
push
rclb
mull
hlt
lea
add
pop
dec
add
add
dec
hlt
mov
imul
cs
push
loope
jmp
xor
aad
xchg
faddl
lock
and
out
add
pop
shrb
jns
or
mov
cmp
jmp
xchg
xchg
test
pop
push
aad
add
outsb
jmp
iret
jg
aaa
jmp
adc
sbb
jns
mov
lcall
sbb
push
jae
dec
adc
call
fmuls
and
fcomp
jg
rorl
jge
add
mov
sub
addb
xor
push
and
jge
xchg
sub
mulb
add
data16
xor
and
pusha
out
sbb
int3
sbb
pusha
and
mov
or
add
paddsb
or
push
or
adc
pop
inc
nop
xchg
hlt
dec
ret
jne
or
xchg
rorb
jmp
lock
jno
dec
push
rorb
xor
inc
xchg
pop
jae
mov
lods
jo
mov
cmp
jp
adc
leave
insb
add
addr16
sbb
xor
jmp
loop
or
subb
sub
inc
jb
jg
mov
xor
adc
dec
add
mov
test
sahf
push
out
xchg
dec
repz
add
push
xor
jecxz
cs
inc
adc
mov
pop
stos
mov
mov
push
pop
inc
std
fildll
repnz
add
movsl
and
loope
sub
sub
shr
mov
aas
test
cmp
fld
add
jecxz
mov
adc
sbbb
or
inc
push
push
lea
push
cmp
add
rorb
dec
and
pop
xor
or
add
inc
dec
lcall
cmp
push
enter
pusha
xor
sbb
add
in
and
sbbb
aad
or
arpl
cltd
pop
divb
call
cmp
aam
pop
mov
jmp
jb
insb
xor
pop
and
or
enter
jmp
cmp
cmpb
dec
adc
pop
and
sub
jecxz
xchg
les
mov
or
and
cltd
pusha
imul
repz
addr16
daa
inc
adc
mov
lods
sbb
incl
popf
mov
sub
jmp
dec
out
je
or
ficompl
push
fs
pop
sub
jmp
mov
cmp
xchg
jno
shlb
jge
jmp
xor
pop
xlat
cmc
insb
sbb
inc
loop
or
push
int3
rcrb
jecxz
add
ss
pushf
aad
dec
test
and
ret
pop
pop
int3
bound
sbb
adc
mov
outsb
mov
cwtl
cld
pop
dec
sbb
lahf
lds
push
xor
mov
mov
adc
xchg
mov
scas
cwtl
add
mov
clc
jle
add
in
cld
inc
inc
or
nop
outsl
add
mov
shlb
mov
jmp
mov
iret
out
sbb
push
jmp
adc
sarl
and
ja
outsb
cwtl
add
inc
cmovbe
xchg
pop
pusha
enter
add
mov
jl
sub
jae
push
cld
lock
mov
outsb
cmpsb
mov
scas
add
scas
dec
std
dec
loop
or
stos
ja
fwait
mov
jge
pusha
inc
cmpb
data16
push
cltd
cmp
and
cmp
aas
mov
pop
dec
and
fs
push
inc
rcll
pop
addr16
or
jmp
mov
and
ds
lods
pushf
pop
shlb
jmp
lret
and
pop
data16
sbb
or
leave
movsb
inc
lahf
cli
aaa
mov
and
mov
or
jge
cmp
and
gs
addr16
adc
add
sub
pop
pop
inc
push
fcoms
push
mov
jmp
push
xor
rclb
mov
add
lea
mov
xor
push
dec
mov
punpckhdq
lret
in
inc
clc
decl
sub
bound
sub
neg
addl
xor
add
jmp
shll
mov
pop
jp
scas
pop
out
cmp
xchg
add
sub
xor
lock
stc
inc
adc
jns
mov
rorl
outsl
xor
sub
mov
pop
stos
ret
or
pushf
xor
in
inc
pop
jmp
add
je
cmp
rolb
xor
loope
jecxz
xor
xor
pop
dec
cmc
xor
jmp
shlb
pop
sub
jmp
push
cmp
jae
shl
xchg
popa
movsb
daa
add
inc
addr16
xor
outsl
pop
and
shll
shrl
push
in
call
and
and
jmp
leave
mov
lods
adc
call
or
sbb
ret
jns
and
add
loopne
push
mov
imul
test
mov
jo
sbb
cmc
push
mulb
push
shll
ss
and
pushl
add
push
maxps
sbb
jle
jno
inc
aam
das
add
sub
or
rorl
data16
or
add
adc
xchg
pop
add
insl
xor
das
mov
sub
or
jo
scas
or
push
icebp
ret
xor
out
xor
cwtl
repnz
sbb
or
ss
jbe
je
jo
testl
loopne
add
jb
pop
xchg
imulb
dec
push
sbb
lock
addl
xchg
jg
in
in
lock
or
loope
mov
adc
mov
pop
xchg
jmp
in
lods
pop
mov
xor
adc
jg
mov
out
je
sahf
pop
into
test
mov
shll
pop
push
mov
iret
sbb
add
inc
xchg
mov
repnz
adc
icebp
sub
or
inc
addb
ret
push
add
dec
mov
inc
dec
cmpsb
sub
jbe
jmp
push
leave
faddl
in
and
cmpsl
adc
push
gs
test
outsb
mov
or
dec
out
xchg
or
jne
mov
leave
iret
data16
mov
cmp
nop
mov
int3
xlat
mov
pop
jmp
add
sub
mov
ja
pop
pop
int
ds
popa
mov
arpl
mov
cli
shrb
jmp
ljmp
scas
lahf
or
insl
mov
lods
aam
and
jg
daa
mov
call
pop
mov
dec
push
repz
xor
jne
adc
pop
pop
pop
jmp
nop
scas
pop
addl
xor
shr
sub
sbb
sahf
pop
dec
fldcw
clc
pop
lret
add
mov
popf
push
cmp
iret
adc
sub
lods
shl
dec
sbb
and
mov
pop
add
out
dec
add
loopne
in
test
es
insb
push
xor
ljmp
out
or
pop
rorl
inc
pop
ss
fs
das
jg
mov
dec
adc
sub
mov
dec
arpl
mov
push
push
je
fldt
or
adc
and
xchg
mov
xor
add
adc
adc
pop
dec
cmp
add
lret
sub
add
mov
xchg
in
mov
jnp
dec
test
jmp
repnz
test
cmpsb
mov
lods
pop
push
and
pop
pop
pop
call
mov
xchg
mov
fsubs
jmp
imul
lods
sbb
dec
pop
movsb
iret
push
leave
sub
arpl
or
sbb
push
inc
pop
xchg
jl
pop
mov
or
jp
neg
mov
enter
adc
jne
roll
sti
out
std
jmp
cltd
and
orb
int3
rcrl
ljmp
pop
jns
xchg
sbb
push
faddl
daa
aas
imul
lret
xchg
sbb
in
mov
jno
mov
loope
movsb
push
jns
das
pop
enter
xchg
jno
out
lock
jle
xor
pop
cmp
ret
insb
and
and
xchg
sbb
ret
pusha
cmpb
and
adc
mov
xchg
stc
push
push
mov
jl
add
gs
mov
add
adc
cmc
out
mov
add
int
daa
xor
or
insb
sbb
pop
sub
shrl
push
test
imul
adc
xchg
and
sub
mov
jmp
cmpsl
enter
notl
test
inc
pop
ja
jl
ret
push
pop
add
push
mov
rcrl
fwait
arpl
jmp
mov
mov
add
mov
push
addr16
pop
scas
mov
icebp
lea
outsb
add
sub
mov
ret
cmc
or
gs
or
mov
subl
mov
jmp
adc
pop
xor
sbb
pop
push
sub
fidivs
lock
or
enter
mov
xor
dec
popa
leave
xor
out
or
adc
stos
mov
add
jecxz
and
dec
xchg
adc
push
icebp
add
dec
pop
and
pop
mov
xchg
sub
icebp
mov
pop
mov
adc
mov
lret
rclb
cltd
push
jp
daa
daa
push
adc
pop
inc
mov
out
mov
test
sbb
adc
xlat
out
add
cmp
mov
daa
pop
jnp
ret
sarb
out
sub
jp
and
or
pop
sub
movsl
das
rorb
mov
lods
cs
enter
push
mov
adc
lds
cmc
pop
pop
pop
scas
sub
call
mov
xchg
pop
sub
add
pop
ret
imul
mov
test
aaa
data16
aaa
mov
push
jl
adc
stos
sub
dec
mov
cmp
pop
mov
mov
rolb
or
pop
cmp
dec
add
subl
add
lahf
dec
pop
out
pop
loopne
dec
cmp
jmp
int
mov
cmp
pop
pop
push
mov
push
decb
repz
adc
daa
cmp
callw
aas
nop
negl
ja
call
xor
push
jns
cmpb
loopne
fisubrs
and
or
inc
sbb
sbb
jmp
cs
orl
movsl
dec
por
lret
pop
xchg
shrl
dec
and
or
shll
movb
out
in
enter
jmp
or
adc
movsl
inc
cmp
pop
jbe
dec
out
cvtpi2ps
mov
orb
push
sarl
jmp
mov
inc
push
dec
mov
push
movsb
add
adc
sub
add
jo
outsl
subb
filds
xor
xchg
dec
mov
shrl
push
sbb
add
mov
jnp
or
iret
push
fadds
movsl
push
out
adc
scas
gs
cmpb
sahf
dec
testl
inc
dec
inc
add
push
ss
dec
mov
adc
pop
and
and
out
dec
pop
shl
sbb
outsb
pop
ja
shl
add
dec
push
js
sub
mov
scas
mov
push
add
dec
mov
stos
mov
or
pop
mov
or
dec
lods
es
das
jmp
xor
xchg
adc
pop
js
pusha
aas
sub
and
push
and
jmp
push
ss
mov
cmp
das
cmpsl
and
or
pop
push
arpl
dec
mov
adc
pop
mov
xor
movsl
cmc
push
fldenv
jle
cmp
icebp
push
into
inc
or
or
pop
shlb
mov
xor
sub
and
fidivs
ror
xor
xchg
mov
push
dec
jg
push
pop
pop
je
xchg
bnd
pop
or
add
scas
sbb
pop
aas
add
shr
pop
shufps
mov
leave
or
sbb
clc
push
or
out
cmc
push
lods
dec
cmp
xor
pop
or
je
ret
or
sub
adc
in
sub
sub
rcrb
test
push
test
leave
daa
push
cmp
js
je
dec
pop
dec
loopne
sbb
cmpsl
iret
pop
add
lret
lock
negl
shlb
cmp
dec
xchg
repz
jo
out
jge,pn
add
mov
lret
dec
add
xor
adcb
xor
push
pop
loopne
push
repnz
mov
outsb
add
or
jl
cmp
stos
mov
mov
icebp
outsb
and
les
or
inc
orb
push
or
incb
je
push
fldl
lahf
pop
outsb
cmpsb
sub
mov
jo
xchg
pop
mov
je
pop
jle
push
pusha
test
push
or
mov
mul
adc
pop
push
mov
inc
pop
mov
xor
xor
inc
xor
imul
jmp
adc
sbb
sbb
cs
cmpsl
or
push
and
xor
jne
push
cltd
or
aad
push
or
daa
jmp
cmp
imul
addb
clc
fidivl
push
dec
aad
pop
pop
or
push
clc
xchg
add
dec
clc
mov
jno
pop
pop
mov
xchg
pop
mov
jg
push
das
and
and
stos
xlat
push
adc
gs
add
leave
je
test
in
out
imul
sti
jmp
xor
and
sar
outsb
test
rep
sub
into
pop
pop
stos
jo
jmp
mov
xor
sub
adc
cmp
out
sbb
and
fsubs
inc
push
sub
add
aaa
lahf
clc
flds
push
int3
loopne
add
jmp
or
xchg
jge
pop
sub
or
dec
bound
push
push
pop
xchg
int
xchg
sub
mov
out
pop
and
out
repnz
push
inc
lods
fimull
sub
mov
add
pop
idiv
test
adc
imul
push
push
or
adc
adc
es
inc
push
inc
add
sbb
and
leave
pop
or
dec
cmpsb
dec
pop
or
jns
sub
push
mov
das
sahf
push
sub
cmpsl
sub
push
adc
rcrl
sub
shll
or
add
add
out
pop
lea
ret
mov
insb
cli
add
mov
pop
add
iret
pop
shr
add
adc
das
jne
sub
sbb
sub
sti
sbb
lea
and
xor
lret
jo
icebp
repnz
cmp
out
push
push
cmp
xor
jp
or
pop
in
cmp
and
xchg
dec
sbb
mov
cmp
test
xlat
loopne
popf
subl
clc
xorl
clc
inc
test
out
jp
inc
ret
add
popf
fs
jb
mov
call
jle
test
ds
mov
add
out
je
stos
mov
mov
int3
arpl
stc
add
mov
xor
mov
shrb
leave
and
movsl
sbb
jge
pop
sub
or
cmp
popa
or
jmp
mov
xor
ja
add
add
adc
fwait
add
sub
jge
mov
ljmp
push
mov
pop
cmpsb
sub
lock
inc
loope
push
mov
ja
add
xchg
imul
movsl
jl
mov
fsubl
outsl
adc
or
mov
xor
fcmovnbe
add
add
stos
ret
mov
or
adc
adc
push
inc
leave
sbbb
rorl
dec
ret
or
pushf
push
mov
ljmp
push
pop
pop
or
aam
cmpsb
jb
mov
jmp
dec
in
jle
and
out
push
jmp
xorb
sbb
mov
xchg
add
jo
sbb
les
push
imul
and
jl
mov
xchg
and
push
pop
lcall
in
outsl
jmp
dec
jae
xchg
int3
dec
jmp
lods
sub
lods
pop
push
pushf
xchg
adc
or
push
and
adc
in
sub
jmp
adcb
sub
loopne
jmp
pop
dec
call
aas
addr16
xchg
xchg
insb
sub
arpl
loop,pn
cmp
fstp
pushf
cs
rclb
cltd
cmp
stos
sub
test
mov
aam
and
add
add
sub
shlb
add
add
xor
pop
mov
sub
push
pop
inc
stos
das
outsl
daa
push
jno
sbb
jmp
lds
or
orl
pop
push
sub
adc
jb
flds
xchg
mov
push
push
xchg
aam
shrl
jp
xchg
rcrb
jmp
sbb
subb
inc
push
cli
popf
inc
cmp
fcoml
into
mulb
or
aas
fcomip
in
push
mov
std
stc
push
adc
sub
shlb
or
and
shrb
arpl
int
jnp
daa
scas
jp
cmp
stos
fiadds
pop
pop
aad
nop
dec
test
cmp
arpl
mov
imull
mov
push
push
mov
das
or
push
mov
pop
int
in
push
push
not
or
xor
sbb
or
fs
cli
mov
rclb
adc
das
dec
jns
add
jns
xchg
movsl
adc
xor
pop
push
je
fisttps
sub
cwtl
push
xchg
mov
pop
xchg
add
push
push
insb
mov
mov
lret
mov
add
loopne
cs
push
pop
inc
adc
mov
lret
jg
adc
jns
cld
out
dec
cltd
inc
sbb
mov
add
jg
shlb
mov
xchg
aam
push
and
loop
dec
jne
filds
repnz
and
das
adc
mov
inc
movb
pushf
push
pusha
cmc
mov
and
add
fs
xor
cli
and
mov
add
iret
push
inc
jl
xchg
inc
mov
dec
jmp
push
scas
clc
out
test
mov
rclb
cmp
xchg
ret
stos
mov
dec
hlt
test
lock
dec
pop
or
mov
jmp
adc
push
in
push
sbbl
push
jbe
xor
shr
cld
rcrb
rorb
push
mov
cmp
push
ficomps
mov
xchg
inc
and
pusha
jne
pushw
nop
pop
sbb
push
jns
movb
push
and
loop
mov
andl
push
mov
imul
xor
jmp
mov
sub
mov
or
fs
adc
jle
pop
push
mov
sub
mov
pop
movsl
mov
pop
cmp
sbb
out
frstor
sub
scas
adc
sbb
out
push
push
inc
loop
xor
adc
or
or
push
push
cmp
mov
pop
out
dec
mov
xor
out
mov
mov
pop
jmp
or
out
inc
jge
std
adc
adc
loopne
roll
dec
inc
mov
pop
or
daa
xor
fmull
ds
pop
movsb
dec
test
outsl
mov
mov
outsl
lcall
leave
sub
ret
add
mov
push
loope
jg
repnz
lcall
add
iret
jno
imul
or
stos
xor
fs
ret
hlt
leave
loope
outsl
xor
test
rol
xchg
not
mov
imul
pop
sub
imul
inc
sub
pop
in
test
out
fcoms
movsl
and
pop
gs
mov
shlb
repnz
divb
dec
or
daa
and
push
iret
shlb
or
push
mov
push
daa
pop
sub
push
roll
rcrb
loopne
sub
in
iret
xor
mov
imulb
jle
stos
inc
sbb
insb
sarb
push
jge
mov
iret
pop
and
adc
sbb
jnp
sub
push
mov
xor
jns
cmp
cwtl
fwait
nop
rol
addr16
push
scas
out
sar
and
data16
add
sub
and
ret
or
movsb
jns
out
fnstenv
mov
daa
sbb
jg
push
sub
inc
xor
pop
addr16
pop
add
and
rorl
push
lret
sub
or
mov
jmp
loop
rcrl
das
repz
sbb
add
test
push
pop
and
inc
sar
sub
dec
mov
stc
std
inc
jmp
nop
and
and
mov
call
pop
addb
sbb
cmp
inc
lds
sub
and
adc
adc
mov
jmp
add
ret
pop
pop
inc
fyl2xp1
imul
push
mov
jmp
out
lret
dec
sub
cmp
sbb
and
pop
inc
ds
test
jmp
pop
cld
aas
movsb
lret
mov
and
sub
mov
cmpsl
in
sbb
in
add
xor
ljmp
add
enter
in
repnz
sbb
addl
mov
pop
dec
lock
xor
adc
cli
cmp
enter
push
fimull
in
push
mov
subb
sub
js
cmp
pop
push
mov
rclb
data16
ljmp
xlat
testl
cmc
aas
int
rolb
inc
jns
shll
pop
insl
mov
sub
movsb
lds
xor
sbb
or
dec
test
pop
lods
pusha
loopne
ljmp
jo
xchg
jnp
inc
inc
push
add
scas
cwtl
jns
and
cwtl
mov
int
jle
imul
frstor
daa
negl
sarb
stc
mov
sub
cmpsb
pop
in
test
push
aaa
nop
aas
add
adc
sub
push
shll
or
sbb
into
vshufps
or
push
rolb
shr
xor
subb
sub
movsl
jne
push
into
sti
mov
push
inc
jnp
sub
jmp
int3
lods
out
sub
cs
add
adc
jmp
lock
popa
enter
data16
lret
gs
hlt
add
mov
ret
std
outsb
sub
push
sub
pop
mov
jb
mov
popa
jmp
rorl
ret
cwtl
or
adc
add
out
add
out
xchg
add
iret
xchg
mov
mov
pop
add
jmp
and
arpl
mov
and
jmp
xchg
aad
push
js
test
push
mov
imull
rorl
ljmp
out
mov
adc
mov
sbb
pop
mov
in
lret
or
dec
aam
add
lahf
sub
incl
mov
subb
inc
dec
dec
sbb
pmaddwd
or
cltd
fnsave
xchg
sub
push
sub
inc
outsb
jb
pop
cli
nop
or
out
dec
insl
and
fdivs
sbbl
mov
mov
adc
mov
pop
lret
push
mov
frstor
push
mov
insl
sbb
jl
push
les
sahf
clc
and
or
imulb
push
jmp
ja
or
clc
mov
insl
scas
mov
add
and
sbb
push
jo
js
divl
stc
mov
pop
adc
popa
ja
shl
in
push
mov
adc
inc
add
pop
or
mov
hlt
push
adc
jl
or
in
popf
xchg
mov
sar
mov
jg
and
fstps
jg
adc
cli
pop
sti
cmp
das
adc
mov
push
jmp
mov
mov
sbb
add
aam
or
add
fisubrl
gs
bound
dec
push
dec
jle
aaa
pop
sti
test
rorb
add
push
subb
mov
sub
imul
sub
test
sub
rol
mov
aas
cmp
adc
and
out
inc
dec
push
dec
or
sbb
ljmp
rorl
dec
fs
adc
leave
rorl
cmc
xchg
xchg
and
mov
sar
jb
sbb
aaa
dec
js
mov
cmc
push
imul
jge
mov
pop
lods
push
xchg
mov
sub
mov
add
inc
movsl
movsb
add
pop
push
jno
insb
mov
daa
das
push
in
fdiv
int
ja
cmp
jmp
rcr
mov
push
mov
dec
xchg
andl
xchg
test
push
test
inc
out
or
add
imul
shll
or
clc
pop
push
push
mov
push
push
push
pop
xor
test
fs
pop
sub
adc
pop
add
out
mov
add
jmp
and
aaa
les
push
sbb
movsl
inc
cli
aas
testb
xor
jmp
js
clc
jge
add
sbb
or
ljmp
dec
lods
jae
jmp
cmp
out
inc
aaa
icebp
xor
adc
sub
inc
mov
inc
cmp
adc
add
jp
push
jle
mov
push
add
lret
mov
push
inc
fcompl
mov
sbb
cwtl
cmpsl
decb
dec
add
in
pop
xor
xor
inc
sbb
sub
aas
and
inc
dec
xchg
mov
aad
movl
enter
mov
jecxz
mov
jae
push
pusha
and
push
sub
iret
repz
addr16
pop
mov
js
push
sub
out
popf
inc
and
adc
and
or
and
inc
push
lret
adc
lods
push
mov
adc
or
cs
xor
push
loope
jmp
mov
jae
test
pop
mov
or
add
in
sub
add
int
jge
add
sbb
inc
push
push
shlb
jmp
mov
rclb
jmp
ret
test
cli
pop
mov
pop
testb
and
not
inc
and
dec
adc
loop
rorl
enter
jmp
jo
jle
mov
test
adc
das
popf
dec
sub
xchg
aas
add
and
pop
jno
dec
loop
inc
mov
adc
add
shl
push
sbb
jmp
pop
addr16
mov
pop
sbbb
push
sbb
dec
daa
jmp
lret
shl
call
movsl
divb
in
cwtl
mov
inc
dec
pop
imul
and
adc
shrl
aam
push
cli
icebp
lock
push
pop
inc
push
jmp
mov
pop
push
jno
shlb
or
push
mull
daa
rorb
and
xchg
jo
insb
and
lcall
fidivrs
shrl
loopne
xor
mov
mov
pop
mov
or
lcallw
jmp
inc
fisttpll
or
shr
or
pop
sbbl
cli
into
jns
mov
adc
and
leave
sub
mov
pop
not
xchg
fldl
cmpl
adc
mov
push
mov
and
loope
call
or
ds
lcall
into
mov
fcmovbe
int
push
je
enter
mov
push
pop
dec
fwait
adc
and
jmp
adc
push
cmp
jmp
lods
xlat
mov
jo
popf
shl
cmpsl
fmul
and
adc
in
dec
pop
fisubl
lds
push
or
jp
jo
pusha
push
xchg
dec
or
adcl
addb
jle
and
xor
xchg
push
jp
lret
adc
jae
fs
adc
es
sarb
jmp
xor
sbb
popa
pop
pop
xor
loope
mov
xchg
out
divl
add
pop
fisttps
push
or
lret
or
cli
loop
push
ja
cmp
into
in
sbb
mov
jo
pop
add
jns
and
daa
dec
inc
pop
mov
or
jmp
push
cmp
mov
xor
repz
mov
ret
or
mov
xor
xchg
not
xor
mov
push
addr16
mov
leave
lret
jp
sbb
push
lret
pop
stos
push
push
add
push
dec
jmp
ret
sahf
scas
inc
and
lahf
adc
popa
hlt
inc
les
aaa
add
jno
add
sahf
popf
adc
rcrl
mov
add
fcmovnb
xchg
ljmp
pop
and
cld
mov
dec
and
stc
jl
pop
xchg
mov
xchg
push
out
loope
jnp
in
fists
fiadds
or
mov
jae
sbb
repz
fptan
scas
data16
add
std
jp
and
sub
repnz
jne
or
shrb
mov
and
daa
xorb
or
inc
jmp
xor
cmp
xlat
xchg
loope
and
bound
or
add
cmp
and
rolb
mov
cld
in
jl
push
push
cmp
cmp
jmp
jmp
cmp
popf
jns
and
pop
dec
add
or
push
inc
sbbb
loopne
sub
inc
shrl
int
and
mov
jb
mov
pop
adc
aaa
int
push
adc
or
adc
add
and
and
dec
pusha
shlb
cmp
pop
sbb
push
adc
add
xchg
not
orb
in
inc
pop
test
mov
out
hlt
scas
mov
pushl
mov
insb
mov
dec
inc
in
std
hlt
add
fwait
sbb
add
add
repz
cmp
push
ja
mov
xchg
pusha
pop
jg
cwtl
jg
and
pop
cmp
ja
add
xor
mov
ljmp
sbb
lds
fst
pop
inc
jb
dec
inc
jmp
fs
xor
out
xor
repnz
xchg
stos
addb
jmp
mov
aad
cmc
or
xchg
or
sbb
and
sbb
or
push
pop
push
inc
jnp
fwait
pop
pusha
inc
call
aas
cmp
das
cmp
adc
shll
dec
pop
out
add
add
shr
push
pop
cmp
cmc
push
pop
adc
xor
and
popl
mov
fsubrs
jmp
jns
inc
cmp
out
xor
stos
aaa
add
insl
mov
in
sub
mov
xchg
push
sbb
xor
xchg
xchg
dec
push
ret
cmp
outsb
in
fsubp
inc
movsb
insb
daa
fdivl
pop
push
cmp
movsw
and
jp
cmc
movsl
mov
push
sub
data16
sbb
push
pop
push
mov
into
jmp
outsb
mov
add
xchg
stos
xchg
ret
mov
mov
test
pop
mov
pop
int3
insb
int
mov
or
repz
add
pop
imul
xchg
mov
push
push
aam
add
mov
enter
ljmp
idivl
mov
xor
push
and
shl
out
adc
adc
inc
push
scas
sbb
addl
jmp
add
add
arpl
push
push
sbb
fldl
and
cmp
or
iret
orb
leave
cmp
or
js
xchg
pop
out
test
lret
insl
pusha
into
push
mov
cs
pop
movsb
je
mov
daa
mov
cld
pop
and
cmpsl
mov
or
gs
mov
add
mov
xchg
pop
out
sbb
sbb
xchg
jge
sub
fidivs
arpl
xorb
adc
pop
inc
xchg
notl
cli
lock
dec
arpl
mov
int3
pop
pushf
pop
inc
cwtl
repnz
jo
pop
pop
leave
jmp
inc
push
dec
and
sbb
faddp
push
adc
lahf
jb
or
outsl
lret
cmp
or
cmp
inc
adc
shlb
add
subb
call
int3
in
mov
add
xor
add
not
or
jo
adc
jmp
in
nop
cmp
push
and
jecxz
js
imul
add
cwtl
sbb
jmp
int3
int
inc
jae
or
and
add
jmp
sar
inc
xor
adc
xor
movsl
rcrl
sbb
mov
addb
mov
xor
xlat
push
pop
cwtl
mov
mov
sub
and
xlat
sub
push
push
jbe
fcmovu
rcl
inc
jmp
push
dec
mov
xchg
and
adc
dec
cmp
pop
loop
daa
aaa
test
mov
ljmp
stc
cmc
fimuls
push
enter
push
in
pop
test
outsb
sub
dec
mov
ret
xor
jns
add
jle
jae
addb
add
sbb
mov
jmp
mov
push
sub
xor
fildl
adc
fimuls
idivl
xor
push
pop
pop
das
std
and
jg
nop
ljmp
cltd
jo
pop
dec
into
mov
push
xchg
addr16
mov
jmp
and
add
adc
insl
jg
daa
xchg
add
aam
and
jle
push
pop
addb
mov
fsts
push
rclb
inc
jbe
xor
lds
popa
mov
sub
mov
sti
jp
sbb
stos
out
dec
push
or
mov
adc
in
mov
fs
mov
rorl
stos
ljmp
mov
cs
or
jl
pusha
push
push
push
sub
adc
or
inc
faddl
push
scas
dec
pop
testb
add
test
daa
pop
pop
sub
add
xchg
test
add
dec
divl
dec
fcom
ds
cltd
sbb
pusha
sahf
dec
dec
clc
fisubl
int3
pusha
mov
lcall
mov
pushf
inc
add
call
das
mov
out
cmp
jle
dec
mov
mov
mov
xlat
xor
pop
adc
dec
imul
jge
in
jbe
or
inc
jl
sub
and
pop
jle
add
jmp
leave
pushf
movb
outsb
daa
scas
add
cmp
jg
shr
pop
loopne
dec
or
iret
mov
add
or
lret
stos
push
or
push
sbb
sbb
addr16
or
add
out
pop
jne
push
push
inc
incb
int3
out
jle
out
lahf
mov
movhps
xor
pop
jmp
inc
add
test
ds
adc
fsubl
fs
dec
pop
int
pusha
int3
jns
and
popa
jne
mov
dec
add
xor
in
imul
stc
adc
add
iret
jmp
loope
outsl
repz
push
rcll
pop
fcomps
clc
cli
leave
push
outsl
xchg
shlb
adc
sbb
mov
jbe
shrl
daa
xchg
jp
std
push
cmp
bound
or
lahf
hlt
sub
cmpsl
popf
lods
in
shlb
inc
add
aad
incl
jg
js
xor
xchg
std
invd
not
xchg
out
jecxz
sahf
rolb
add
in
pop
addb
pop
ret
lret
test
fldenv
adc
pop
scas
cmp
jmp
pop
loope
stos
xchg
lret
push
scas
cltd
mov
mov
pop
jb
mov
jle
jl
xchg
jmp
add
negb
or
pop
rorb
les
mov
adc
rclb
mov
jmp
jae
loop
pop
daa
pop
push
fstpt
leave
negl
lcall
mov
add
test
je
popf
jp
push
mov
xlat
mov
mov
xchg
xchg
sub
cmp
add
dec
hlt
into
popf
test
jb
jmp
xchg
push
xor
ljmp
jmp
decl
aad
xlat
push
or
ljmp
add
loop
aas
pop
inc
dec
roll
jo
test
out
bound
ljmp
xchg
jmp
repnz
out
or
out
int
es
sub
mov
or
push
shll
enter
mov
or
jge
cli
shlb
orl
lock
test
sub
mov
or
lock
dec
xor
sub
dec
xchg
add
das
cwtl
and
pop
test
cwtl
shrb
sti
bound
pop
sub
cmc
shll
xchg
pop
fmull
push
jns
jmp
test
scas
jg
cmpsb
add
adc
and
adc
dec
xchg
add
and
dec
movl
mov
sbb
push
xor
jge
out
ja
or
shll
mov
popa
add
test
jmp
mov
jns
das
pop
pusha
fldcw
pop
insl
clc
and
push
push
add
cmp
lcall
lock
in
xchg
das
push
pusha
lahf
add
xor
and
stos
iret
mov
jbe
dec
xlat
or
popl
ds
mov
in
inc
pop
jmp
nop
mov
or
cli
and
add
push
rcl
pop
cmc
ret
mov
mov
add
in
sub
rorl
xorb
icebp
xchg
bound
pop
sti
and
pop
test
out
es
mov
add
aam
push
add
pop
jmp
movsb
push
mov
outsb
inc
pop
pop
push
pop
pop
ja
pop
sub
push
roll
add
cmp
pop
mov
mov
pop
push
xor
fs
stos
out
cmp
lds
xchg
or
test
sub
or
and
dec
mov
test
add
pop
add
mov
mov
or
loop
or
jle
sub
adc
pop
jecxz
ljmp
out
or
sbb
in
adc
faddl
adc
add
and
or
or
xor
das
mov
popa
adc
or
add
add
add
push
adc
xor
sub
mov
dec
nop
mov
je
inc
mov
inc
mov
mov
inc
cmp
aas
push
add
adc
jno
sbb
repz
sub
pusha
bound
or
add
add
add
popl
xchg
add
inc
or
stc
clc
mov
dec
xor
mov
mov
sbb
ficomps
or
add
sub
int
xor
ja
test
add
les
dec
mov
into
jmp
adc
filds
xchg
inc
stos
icebp
jmp
loop
lods
dec
out
xor
or
rclb
mov
fcompl
or
ret
jns
ja
or
popa
or
mov
jae
inc
jnp
loopne
add
mov
mov
inc
adc
inc
sub
pop
or
data16
inc
lods
sbb
adc
bound
test
arpl
mov
mov
cmp
pop
mov
ja
mov
push
jbe
mov
pusha
and
push
xor
sbb
pop
leave
adc
sbb
dec
jns
and
aam
rol
and
or
outsb
nop
jmp
lods
dec
lods
jp
sbbl
add
pop
js
insl
lsl
bound
sbb
add
std
add
es
xor
call
shlb
mov
adc
inc
sub
add
adc
push
mov
add
dec
or
jne
pop
mov
call
jge
pop
xor
rorb
dec
imul
frstor
imul
gs
mov
outsl
clc
dec
push
mov
scas
popa
sahf
fdivr
cmp
push
jne
in
mov
aas
inc
neg
jg
icebp
push
mov
and
xor
insb
jnp
adc
pop
push
push
or
fldt
andb
adcb
xor
cs
xchg
add
rclb
mov
adc
add
mov
mov
add
xchg
repnz
add
ret
aaa
pop
in
pusha
pop
dec
icebp
jb
mov
test
test
add
add
mov
adc
xor
fimuls
iret
pop
push
jmp
out
lret
mov
inc
add
dec
sub
test
or
sub
sbb
mov
jae
sub
mulb
std
sub
test
sbb
shr
rcrl
jns
jmp
lods
dec
cwtl
into
pop
push
push
jmp
mov
lods
adc
scas
popa
dec
or
push
sub
es
xchg
sbb
daa
adc
enter
sub
enter
push
lods
sbb
scas
ds
pop
je
dec
mov
not
add
aaa
dec
cmp
fs
jno
mov
pop
in
stos
add
mov
int
add
and
fidivrl
stos
sbb
bound
or
jmp
sub
pushf
pop
daa
in
inc
sbb
push
mov
push
pop
push
jmp
fdiv
mov
and
std
push
add
add
cmp
push
mov
jmp
inc
enter
mov
mov
jne
div
xor
out
ds
xchg
popf
push
outsl
cli
adc
sbb
pop
inc
xchg
sahf
stos
mov
xchg
stos
sub
add
imul
aas
adc
push
fimuls
jmp
mov
push
and
jns
pop
jmp
sub
lds
pop
fs
dec
fmul
cmp
add
xlat
bound
cli
sub
and
push
jg
mov
xor
mov
pop
jns
or
je
push
adc
mov
daa
cld
leave
movsb
dec
pusha
mov
nop
mov
inc
std
mov
dec
push
mov
sub
movsb
adc
cmp
jle
sub
shr
or
and
imul
xchg
and
add
and
fucomip
dec
in
fadds
pushw
dec
adc
ljmp
jmp
pop
sub
cmpsb
mov
push
jmp
sub
cli
lds
dec
rep
test
sbb
push
or
mov
mov
cmova
outsl
bound
lcall
negb
daa
outsl
cli
dec
pop
inc
mov
movl
icebp
outsl
mov
jbe
mov
jns
enter
aas
divl
shll
add
jge
and
push
gs
addb
sub
adc
push
das
sti
and
inc
shlb
in
add
jecxz
cmc
mov
icebp
mov
inc
sarb
pop
mov
cld
add
cmp
in
popf
test
jb
outsb
subb
ret
jmp
out
xor
sbb
loopne
lods
pop
test
xchg
pop
and
es
sub
xor
filds
hlt
daa
push
js
shr
or
xor
dec
and
jnp
daa
xor
sub
test
sbb
jmp
or
or
jecxz
mov
sbb
sbb
ja
mov
scas
pop
add
cmp
loope
adc
pop
pop
lahf
dec
insb
pop
shrb
dec
nop
shlb
adc
mov
cmpl
arpl
or
and
movsb
add
cmp
cwtl
and
push
or
mov
pop
adc
clc
sahf
gs
sbb
fdivrp
mov
mov
fdivl
pusha
fisubl
mov
pop
or
stos
xor
dec
push
cwtl
stos
sete
arpl
mov
jle
pop
ja
dec
fs
das
clc
add
adc
push
imul
xor
lret
mov
mov
push
fists
das
or
add
xor
pop
xor
dec
scas
inc
sbb
or
push
pop
hlt
inc
les
push
add
adc
and
pop
xor
lea
fdiv
nop
adc
enter
jg
jmp
cs
popa
in
add
mov
cmp
jmp
test
daa
sti
lcall
sti
inc
push
adc
flds
add
dec
sbb
xchg
push
cmp
or
xor
push
ret
add
and
xor
push
mov
mov
aas
stos
cmp
jmp
push
test
mov
cmc
or
nop
sbb
sub
daa
push
xchg
rorl
fs
js
jns
push
mov
jmp
xchg
ljmp
sub
aam
jae
and
adcb
call
lret
add
and
outsb
lret
flds
add
mov
inc
jne
or
adc
inc
mov
hlt
dec
mov
mov
pop
xor
or
xchg
shrb
push
test
faddl
jnp
pop
and
imul
jnp
push
popf
shl
xchg
pop
inc
mov
add
xor
insb
push
jmp
add
sti
add
xchg
aad
ror
cmp
and
mov
or
sbb
sub
push
mov
xor
pusha
add
inc
mov
add
or
or
lds
insl
cmp
xchg
fsubrl
bound
mov
cmp
mov
mov
loopne
aaa
xchg
aam
adc
push
jmp
sub
dec
loope
ss
imul
jne
dec
shl
aam
xor
mov
in
leave
mov
lret
fwait
jbe
jg
sti
pop
xchg
aam
mov
jmp
loop
fwait
inc
dec
xor
mov
std
pop
inc
or
test
jne
mov
inc
and
inc
mov
pushf
stos
push
andb
inc
stos
adc
xchg
inc
insl
push
jb
fsubs
or
adc
xor
pop
fsts
xor
dec
mov
cmpsl
lahf
pusha
out
jmp
dec
imulb
adcl
or
lcall
cmp
arpl
xchg
push
pop
mov
out
dec
push
and
ficomps
cmp
pusha
stc
pop
pop
rorl
mov
sub
sub
dec
add
xchg
jmp
rol
dec
inc
fneni(8087
xorps
pop
adc
jl
adc
mov
mov
xor
inc
dec
add
cmp
call
pusha
shrl
xor
and
cmp
enter
test
int
inc
cmc
push
inc
and
jmp
jnp
shr
mov
push
adc
test
mov
sahf
repnz
jbe
mov
sub
sbb
aaa
xorb
pushl
mov
lods
dec
in
ljmp
sbb
adc
push
dec
adc
lret
xor
pop
add
aad
push
mov
orl
cltd
push
ss
js
jmp
ret
xor
fsubrs
add
or
sub
cmpsb
icebp
add
xor
xlat
fldl2t
ret
insb
nop
push
mov
hlt
xor
jnp
ja
out
jbe
add
es
mov
push
mov
out
dec
or
out
xchg
or
dec
push
cld
push
bound
pop
scas
xor
mov
sahf
push
cmp
and
push
dec
cmpsl
mov
mov
xor
dec
dec
push
xchg
insb
inc
mov
out
ss
mov
dec
adc
jno
inc
jg
pop
scas
or
jne
fstpt
dec
dec
rorl
mov
or
out
loop
xchg
push
ficoms
sub
in
mov
xor
pushf
fisttpl
sub
push
out
or
xor
aas
rcrl
aad
xor
cmp
negb
loopew
icebp
push
mov
adc
xlat
sar
sarl
xchg
lret
add
push
mov
lret
fmull
mov
and
pop
sub
pop
out
mov
leave
xlat
push
mov
cmpsl
mov
sbb
cmp
add
out
dec
into
pop
stos
mov
mov
dec
ds
incl
scas
push
loop
adc
inc
lret
xor
pushf
das
mov
dec
cmp
xor
popl
orb
xchg
mov
imul
dec
sbb
xchg
shlb
pop
sbb
movsl
adcl
mov
test
loop
inc
adc
dec
adc
or
add
out
xlat
stc
fcompl
push
jmp
mov
nop
out
push
repnz
sbb
add
mov
subb
lcall
test
add
xchg
lret
ss
jns
fiadds
lret
mov
push
pop
fcomps
fidivl
xor
jnp
or
sub
out
cli
cs
xor
mov
mov
inc
test
pop
xchg
inc
or
xchg
hlt
push
loop
jecxz
mov
outsl
add
sbb
add
push
inc
imul
pop
inc
lock
sub
push
dec
and
dec
mov
add
or
xchg
stos
sub
push
ret
sub
add
pop
add
js
xchg
jne
test
mov
mov
jle
add
or
xlat
mov
push
das
add
stos
jmp
cmp
push
sub
push
sub
incb
jl
adc
add
or
pop
mov
ljmp
and
notl
mov
inc
mov
adc
aad
movzwl
lcall
jl
dec
je
pusha
and
dec
pop
mov
cmp
push
jne
ret
sub
adcb
mov
mov
daa
std
xchg
scas
out
adc
les
or
dec
sub
mov
xchg
add
inc
xlat
add
sbb
jmp
in
or
adc
ljmp
jbe
push
push
leave
xchg
xchg
lods
mov
mov
adc
pop
jae
jge
or
pop
xor
loop
pushf
scas
in
push
inc
lock
push
in
push
rcrb
aaa
dec
xchg
xchg
push
sti
dec
push
jne
decl
xchg
lods
es
std
leave
or
shr
aam
and
push
daa
mov
pop
or
pop
inc
jbe
sub
or
adc
push
mov
je
hlt
rcrl
insb
jg
pop
xor
dec
repnz
loope
xor
shll
jp
jle
and
cmp
dec
cmp
mov
fdivl
imul
xchg
movsb
add
divl
out
push
xchg
pop
nop
and
movzbl
lret
cld
or
nop
pop
add
pop
push
jns
loop
out
aad
aas
push
push
dec
in
stos
jecxz
sarb
out
push
add
addr16
or
adc
sub
push
push
sub
leave
add
repnz
in
out
or
push
jmp
mov
sbb
mov
xchg
call
inc
jecxz
cmp
dec
xchg
shlb
into
insl
cmpl
jl
ljmp
jns
sub
pop
mov
xchg
stc
fisubrs
mov
mov
icebp
call
shrb
sub
loop
gs
dec
xor
ret
stos
out
adc
pop
cmp
dec
xor
dec
sub
add
in
loopne
mov
mov
jmp
adc
insl
int3
sbb
inc
in
cld
mov
stos
sub
call
xchg
cwtl
stos
cmc
adc
mov
push
not
push
mov
daa
push
mov
xor
aas
or
pop
push
add
cmp
push
enter
enter
push
adc
inc
xchg
jo
idiv
jne
bound
jp
and
in
pop
sbb
push
cmp
sub
fnstcw
loop
aam
mulb
data16
push
inc
mov
in
pop
inc
sub
enter
lcall
sbb
outsl
outsb
movsb
rolb
pop
cmpsl
dec
push
adc
je
jb
fidivs
sub
push
faddl
sbb
mov
add
sub
addr16
add
mov
dec
lea
addb
ficoml
incb
out
mov
arpl
pop
cmp
cmpsl
mov
or
push
lods
out
out
lret
je
lds
ror
insl
ds
xor
xor
dec
inc
sti
push
stos
std
repz
xor
mov
idiv
push
and
out
xor
and
into
push
out
jp
mov
jmp
mov
sbbb
mov
mov
mov
mov
mov
ljmp
pop
mov
xor
inc
and
pop
and
push
and
push
sub
not
scas
mov
mov
add
stos
arpl
maxps
cmp
testl
jns
dec
lds
aad
sti
pop
inc
dec
repz
in
xchg
and
mov
and
mov
push
add
or
adc
dec
subl
jno
push
enter
mov
cs
and
and
shlb
add
cmp
test
xor
lock
ss
or
xlat
jb
into
push
mov
das
jle
pop
jae
in
out
sub
inc
call
ffree
cld
repnz
pop
cmp
or
scas
xor
pop
fsubr
cmp
push
subl
pusha
mov
sbbl
or
pop
lahf
loopne
mov
repz
std
pusha
cli
add
add
mov
adc
call
sub
bound
push
push
adc
push
sub
and
jle
popa
pop
js
shlb
cmc
and
lds
add
or
test
lahf
mov
outsl
xchg
pop
ja
mov
les
bound
push
jl
into
jne
lods
ret
pop
or
cmp
jg
mov
cmc
outsl
pop
add
push
pavgw
in
dec
mov
pop
clc
popf
pop
pusha
hlt
sub
add
jmp
pop
inc
out
out
cld
or
sbb
daa
push
mov
xor
adc
mov
cmpl
fidivl
test
aad
fcompl
sub
push
fdivrs
cltd
pop
add
adc
or
cmc
mov
sbb
cmp
pop
sub
pop
aam
pop
adc
dec
push
jmp
or
push
pop
inc
fcompl
add
inc
or
das
xchg
lods
inc
pop
cmp
into
mov
out
inc
outsl
int
in
add
jnp
sub
mov
sahf
clc
lock
std
pop
add
jb
daa
adc
ret
cwtl
mov
push
lcall
sub
jecxz
pop
in
ds
not
add
daa
js
xor
jmp
loop
ret
mov
sarb
adc
cmp
cmp
pop
sbb
into
aaa
adc
test
xor
sbb
jg
and
sbb
pop
aad
push
jne
jmp
mov
test
les
mov
push
add
pop
mov
adc
loop
push
mov
push
sub
mov
not
mov
mov
js
add
popa
loopne
test
push
shlb
fstpl
sbb
jmp
push
xchg
int
daa
icebp
jg
aam
push
lods
into
cmp
pop
mov
jmp
sub
xor
sub
adc
xor
mov
add
fwait
xor
stc
pop
fstp
cmpb
dec
mov
neg
aad
es
push
inc
test
xor
and
sbb
push
pop
das
pop
pop
lahf
dec
cmp
push
mov
cld
sbb
mov
mov
adc
or
cmc
stos
cs
cs
pop
stos
or
inc
ret
popf
lods
orb
int
ret
sbb
mov
addr16
out
push
mov
jb
pop
and
lret
sbbl
sbb
stos
movsb
xchg
jmp
and
call
movb
les
push
scas
inc
inc
pop
sbb
repz
enter
gs
jle
inc
and
mov
mov
fildll
push
cmp
daa
and
in
rcrl
ss
and
ror
jo
sub
inc
lds
rorb
stc
dec
cmp
nop
jge
daa
cwtl
enter
cmc
jl
int3
mov
bound
ja
out
mov
dec
jb
clc
out
in
push
push
push
shrb
das
stos
sub
xor
mov
sbb
sub
loope
fadds
mov
or
or
pop
repnz
lret
sti
ret
pusha
subb
rorl
mov
sub
push
outsl
in
jge
stos
cmp
aam
sub
xchg
out
je
cli
and
aam
mov
je
enter
dec
cld
cmp
lahf
hlt
sbb
rcl
bound
mov
sarb
stos
std
cmpb
loop
sti
cs
jg
mov
lret
cmp
xor
ret
or
sub
fldenv
data16
js
push
test
loopne
mov
push
xchg
sub
lret
jmp
mov
sub
dec
aam
mov
push
xchg
leave
subl
data16
ja
fcomip
in
sub
subb
rorl
xchg
test
mov
push
ljmp
insb
fisttpll
jecxz
bound
xlat
jae
loope
push
ret
decb
push
and
adc
mov
mov
add
mov
jne
add
sbb
test
jmp
call
imul
xlat
mov
push
je
sub
mov
xor
dec
sub
jmp
insb
adcb
aas
cltd
sub
data16
adc
pusha
ja
and
push
loope
sub
out
jmp
nop
leave
mov
gs
fmull
leave
add
cmp
push
pop
push
in
push
mov
sub
push
ret
les
stc
hlt
mov
icebp
scas
pushf
adc
push
jecxz
int3
xchg
adc
inc
and
push
clc
push
push
jg
sbb
pop
fiadds
xchg
imul
push
push
jno
cmp
in
cmp
mov
push
jle
push
int
cmpsl
ja
data16
sarl
jge
lret
push
mov
xor
mov
pop
inc
and
mov
or
nop
in
cmpsl
or
inc
mov
push
mov
mov
mov
adc
add
xchg
lock
add
push
adcb
rol
test
pop
push
or
push
fmuls
lret
add
paddd
or
push
push
notb
mov
iret
inc
jb
adc
not
adc
push
adc
pop
movsl
push
roll
jge
ret
paddq
inc
pop
adc
push
mov
gs
es
jge
jmp
out
or
jb
aad
jmp
cmpsl
and
push
loope
cmp
adc
xchg
xchg
or
mov
dec
cli
insl
mov
in
xor
cmc
lret
xchg
and
dec
cmpsl
cmp
cld
loope,pt
mov
xchg
mov
sub
jmp
mov
das
mull
and
adcb
xor
mov
push
xchg
les
xor
or
enter
or
cmp
push
sub
imul
cmp
scas
loope
sbb
sub
or
push
nop
fstps
stc
inc
inc
stc
add
aad
pop
add
je,pn
pop
xchg
xchg
shll
jo
cmp
xchg
repnz
adc
dec
in
ds
lock
push
and
test
jmp
jg
and
add
jmp
mov
mov
pop
or
inc
outsl
lds
scas
xor
mov
shr
add
or
add
add
loope
icebp
or
bound
mov
outsb
pop
repnz
and
cld
sub
pusha
and
bound
mov
push
test
push
push
pop
cmp
sbb
sbb
adc
lods
int
bswap
testl
mov
pop
mov
jmp
mov
mov
frstor
sbb
fidivs
mov
mov
loopne
add
ljmp
sahf
push
pop
jno
int3
jne
dec
sub
aam
rolb
fildll
test
cmpsl
aam
in
in
and
dec
add
sub
cmp
dec
ljmp
int
cwtl
fwait
add
outsl
repz
stc
gs
xor
mov
jmp
xchg
xchg
or
dec
inc
xor
mov
jne
ret
pop
lods
daa
test
push
in
add
dec
scas
inc
pop
fdivrl
jl
pop
push
hlt
pop
push
in
inc
pop
mov
lret
jmp
add
mov
mov
adc
add
jne
mov
outsb
addr16
sub
inc
push
xchg
add
push
jb
cmp
push
scas
add
mov
dec
popf
fisubrl
mov
popf
mov
add
pop
jmp
test
mov
roll
es
mov
or
jmp
les
nop
inc
hlt
sub
sub
pop
jbe
ret
or
addr16
movsl
enter
mov
out
add
out
ffreep
lods
andb
cwtl
cmp
push
mov
add
inc
int
pop
out
insb
add
mov
add
inc
adc
mov
mov
imul
not
xchg
xchg
cli
sbb
fdivr
leave
cwtl
sbbl
jmp
mov
jbe
sub
repnz
lds
sub
dec
jbe
adc
adc
push
inc
add
sbb
lcall
add
sbb
repz
pop
lret
pop
jecxz
inc
loope
addb
fadd
fmuls
or
stc
xchg
sbb
ljmp
mov
lret
push
dec
pop
jmp
pop
bnd
sti
sbb
ljmp
clc
add
iret
cmp
and
andb
xor
jae
xorl
ds
mov
fnstsw
xchg
jb
inc
pop
and
pop
call
mov
dec
test
les
jmp
or
int3
cmp
or
test
jno
das
popa
jbe
add
test
push
or
inc
shrb
add
fldenv
jmp
push
mov
sub
mov
push
sbb
xor
pop
jmp
dec
pop
pop
push
xchg
nop
jl
orb
adc
jmp
cmpsb
fisttpl
sbb
call
xor
aam
inc
or
xor
dec
in
outsb
in
hlt
adc
das
sbb
push
repz
aad
dec
out
jno
dec
cmc
add
sub
mov
test
lods
lret
and
pop
xor
daa
xchg
cmpsl
xchg
add
inc
fisttpl
int3
addr16
and
lret
or
jg
pop
andb
xor
loope
jge
sbb
gs
lahf
inc
adc
test
jnp
dec
addb
inc
dec
add
add
pop
mov
scas
and
pop
add
in
adc
sub
jmp
push
mov
and
dec
adc
adc
test
xchg
xor
jnp
mov
push
aad
sbb
shr
push
nop
std
cs
xor
or
rcrb
mov
fcmovnbe
and
lds
ficomps
aam
add
jmp
lods
push
add
sbb
push
pop
test
ret
jle
sahf
sub
pop
cmp
dec
and
sub
push
lea
daa
lahf
push
pusha
lret
push
mov
lcall
js
sub
rol
int3
call
add
jnp
rclb
push
dec
or
dec
mov
add
sub
data16
push
mov
add
nop
dec
ds
imul
lahf
test
inc
jmp
testl
push
push
dec
add
add
shlb
sub
gs
cmpsl
pop
cmpb
scas
movsl
in
pusha
adc
shr
ror
jns
pop
inc
addr16
divb
insl
sub
xor
pop
scas
jle
mov
dec
ret
test
jl
mov
adc
mov
jbe
cs
aaa
mov
add
push
mov
pop
or
rcrb
repnz
jl
push
and
sbb
subl
dec
mov
ja
out
dec
lret
push
pop
adc
and
popf
fdivrl
mov
sub
test
pop
pop
jge
sub
sub
js
push
lds
test
inc
ja
cs
inc
lahf
lds
pusha
xchg
add
add
jbe
pop
and
insl
mov
adc
xchg
ficoml
mov
das
ljmp
sub
jge
popf
sub
idivb
mov
and
ret
aam
and
fcmovu
daa
ret
mov
cld
loopne
jp
dec
loop
cmp
jp
mov
pop
dec
pop
mov
faddl
push
mov
push
mov
pop
addb
push
mov
shl
int3
sub
shrb
add
popa
pop
dec
xchg
dec
std
pop
rolb
push
jno
push
sub
cmpsb
sbb
mov
jmp
mov
sub
dec
jmp
into
or
or
or
out
jle
xor
nop
sbb
xchg
and
or
stc
jp
fs
out
mov
or
or
sub
fdivrs
mov
data16
xor
mov
out
enter
scas
popf
cwtl
paddd
dec
out
pop
inc
dec
jns
mov
inc
dec
push
sbb
sub
pop
push
ret
and
push
xor
fisttps
mov
cmp
dec
mov
dec
add
rolb
das
add
in
adc
orb
mov
pop
lods
gs
nop
jo
ret
jae
adc
inc
hlt
mov
lea
mov
pop
mov
lds
add
sbb
dec
cmpsb
mov
or
xor
sub
in
pop
sub
mov
jae
fsubr
xchg
xor
xor
ss
pop
movsl
pop
fiaddl
les
sbb
mov
jns
sbb
int3
push
xor
add
fdiv
inc
xor
testl
movl
hlt
mov
ret
push
add
pop
sbb
mov
mov
add
sub
add
pop
rcrl
mov
sarb
jp
cmp
mov
cmp
adc
add
repnz
rcrl
nop
xor
je
push
aaa
andb
sub
imul
cld
fwait
sbb
imul
daa
inc
mov
shrl
data16
inc
fs
cmp
and
jmp
inc
inc
sahf
sub
rclb
jne
xor
adc
movb
jo
jle
xlat
pop
mov
outsl
or
add
int
orb
into
sub
pop
out
rorb
sub
dec
sbb
xor
lods
fidivs
jecxz
loop
mov
pop
std
mov
jb
pop
ret
add
int3
or
inc
lods
and
mov
into
sub
out
outsl
push
out
mov
adc
xchg
shrb
adc
icebp
mov
pop
xor
clc
das
inc
or
fldl
push
inc
pop
xor
push
and
jb
adc
push
adc
pop
mov
insl
clc
mov
out
mov
aam
cmp
adc
mov
dec
sbb
test
push
dec
pop
daa
dec
cli
push
xchg
mov
popf
icebp
push
loope
outsb
jle
jg
inc
push
push
in
mov
dec
movsb
pop
mov
fwait
inc
inc
jmp
addl
sub
push
orl
sub
fstl
nop
mov
mov
add
adcb
pop
sub
or
ja
xchg
fs
data16
pop
out
cmp
add
ret
imul
or
sub
cmp
mov
fdivl
or
jns
sub
adc
lahf
cmp
inc
aas
sbb
adc
and
mov
fsts
sub
mov
mov
inc
mov
and
push
add
lods
dec
adc
and
lds
adc
lock
popf
mov
testb
xor
mov
jmp
cmp
jg
ds
push
into
push
pop
out
inc
xor
notb
pop
mov
mov
mov
adc
lds
mov
fstps
or
cmp
mov
and
jmp
pop
adc
adc
aaa
outsl
pop
and
and
xor
or
pop
aam
push
ja
push
lret
lcall
jmp
mov
jb
pop
add
inc
rorb
push
sarl
call
sbb
inc
xchg
jl
cwtl
mov
rcrl
iret
shlb
pushf
testb
jmp
mov
xchg
mov
jmp
and
xchg
push
test
push
push
pop
shl
adc
stc
pusha
or
jp
cmpsb
dec
repz
and
cmp
add
and
add
pop
sbb
ja
pusha
insb
or
or
sti
dec
or
pop
imul
arpl
add
adc
shll
fstpt
cltd
cmpsb
jmp
ljmp
iret
jmp
xlat
dec
cmp
add
add
cs
push
xor
push
mov
or
and
cmp
ret
out
iret
push
jmp
loopne,pn
dec
add
adc
loop
loop
stos
jno
arpl
inc
outsl
in
add
pop
push
jle
imul
mov
and
rolb
pop
ljmp
sbb
jb
push
ds
jno
rcll
pop
or
mov
jmp
xor
jno
sbb
popa
dec
iret
mov
into
lods
dec
scas
cmp
aas
dec
jno
push
pop
lret
pushf
push
mov
fs
add
sub
cltd
xor
mov
jmpw
sbb
push
lock
push
push
mov
or
ret
pop
inc
nop
int3
jmp
hlt
mov
shlb
adc
push
add
xchg
aas
push
repz
and
mov
daa
enter
das
pop
jmp
cmp
dec
add
pusha
leave
rclb
cmp
sub
fdivs
push
test
add
lea
add
mov
or
dec
gs
sub
xor
push
adc
or
or
js
pop
cld
sbbl
mov
and
rorl
adc
sbb
shlb
lods
je
jb
cmp
dec
or
pop
shl
xor
dec
mov
jmp
es
data16
les
outsb
pop
xor
pop
lcall
dec
es
pop
or
sub
inc
push
dec
in
or
aad
mov
push
sub
ret
pop
add
xor
das
xor
mov
cs
fstpl
in
adc
testl
sub
xor
pushf
clc
cwtl
or
push
add
jp
inc
inc
daa
ja
push
cmc
add
add
out
fisttpll
push
pusha
lahf
pop
sbbb
lahf
cli
in
add
mov
out
xchg
sbb
pop
js
dec
jecxz
mov
adc
add
not
add
push
ret
scas
cltd
rcll
out
aaa
push
push
add
cltd
dec
mov
pop
lret
into
pop
shlb
pop
add
sub
setge
mov
jmp
cmp
and
push
insl
push
add
insl
xor
mov
xchg
sbb
out
add
rcr
sbb
push
mov
add
outsl
sub
pop
and
jl
pushf
sbb
filds
lea
repnz
fstl
fs
or
jp
popa
aaa
mov
sbb
enter
subb
inc
or
jmp
outsl
in
sbb
int3
gs
adc
sub
sbb
nop
add
in
jns
and
das
dec
jl
imul
jl
add
push
sub
mov
xor
pop
loopne
inc
xor
test
push
iret
enter
repnz
push
leave
add
pop
pop
popa
loop
sub
loopne
pop
or
lret
xor
pop
push
nop
xchg
or
and
imul
pop
dec
sub
dec
scas
lret
or
and
push
add
fcompl
inc
xorb
faddl
inc
push
int
mov
push
sub
pop
lahf
lcall
adc
add
cmpsb
lods
les
cs
jmp
insl
mov
fs
ret
enter
add
mov
adc
push
add
push
outsb
add
cwtl
and
scas
pop
mov
scas
and
push
mov
push
or
and
jmp
ljmp
xor
mov
sbbl
xor
mov
sbb
mov
mov
inc
pop
add
sbb
inc
push
sub
cmp
xchg
popf
ret
and
popa
jmp
mov
dec
popf
dec
pushf
add
adc
or
cld
pusha
shr
mov
mov
neg
xor
sub
je
mov
lret
jno
repnz
daa
test
and
mov
negb
test
or
mov
arpl
clc
jl
jmp
mov
cmp
lock
sub
jp
rcll
mov
or
jmp
jno
add
divl
or
pop
lock
dec
sahf
cld
add
daa
push
xchg
loop
pop
jb
mov
adc
push
jp
jne
mov
cmp
or
cmpsb
loope
leave
jg
jp
pop
and
bound
fst
xor
sub
lods
mov
sti
or
jo
add
pop
or
pop
xlat
or
sti
test
mov
adc
or
ss
dec
movsl
pop
fsts
clc
enter
dec
pop
das
push
arpl
mov
or
outsb
cmp
pop
in
adc
aaa
aam
jb
pusha
push
xchg
jle
outsb
inc
aad
das
pop
daa
adc
mov
int
adc
pop
cmp
ljmp
or
shl
mov
dec
sar
xlat
test
dec
test
sub
xchg
and
pop
das
ds
pop
push
push
fs
xchg
cmp
adc
inc
call
psrlw
push
outsl
jo
sub
nop
inc
cmc
jl
add
aas
adc
cmp
scas
add
call
xchg
mulb
and
aaa
jmp
dec
jmp
mov
cmovp
jb
in
ret
and
push
lods
andl
jp
and
jmp
mov
stos
cmp
pop
and
jmp
sub
cmp
mov
repnz
push
mov
decl
lea
xchg
icebp
inc
xor
push
std
loope,pn
xchg
bound
fsubrl
inc
inc
mov
push
lds
mov
fs
pop
mov
or
enter
inc
pop
xchg
dec
lods
or
das
dec
lods
push
fmul
popa
mov
push
test
ret
push
shl
xchg
repz
scas
test
mov
cmp
and
dec
rclb
pop
and
les
rcrl
fsubr
bound
add
fsubp
mov
lock
mov
pop
test
add
lds
mov
jmp
inc
cmp
push
inc
sbb
jl
outsb
pop
sub
and
mov
aas
or
or
or
lds
outsb
sub
sub
sub
data16
je
mov
adc
adc
xor
rclb
mov
jno
xor
negl
push
mov
add
add
inc
jecxz
inc
int
cmpsb
jmp
out
adc
pop
popl
jo
sahf
push
lock
jno
lock
add
pop
xchg
sbb
scas
test
xchg
fidivs
dec
push
xor
push
inc
pop
or
sub
push
mov
cmpsb
ret
filds
dec
cs
adcb
insb
sbb
aad
sub
ja
movsl
xlat
lock
bound
les
mov
sti
xchg
xor
mov
push
rcll
add
adc
dec
or
jp
lods
adc
and
mov
mov
push
pushf
mov
push
mov
jmp
push
sqrtps
cwtl
pop
inc
pop
int
icebp
jnp
int3
xchg
push
sarl
or
and
cmp
imul
jnp
jns
pop
cmp
inc
pop
mov
enter
pop
add
in
adc
sarl
pop
imul
jae
sahf
test
push
mov
insl
adc
test
scas
jecxz
xchg
stos
fs
ret
mov
mul
lret
and
pop
fidivrl
sbb
loop
sub
sub
mov
add
cmp
insb
insl
sub
aad
pop
jp
mov
aaa
cld
or
pop
out
popa
aas
rcll
fdiv
pop
inc
bound
icebp
cmp
aam
mov
int3
add
push
jbe
hlt
push
xchg
ds
push
xchg
cmc
sbb
mov
mov
mov
sub
out
adc
test
movsl
or
movzwl
dec
cmp
andb
push
adc
add
aam
jb
inc
aas
orb
xchg
adc
cwtl
mov
paddusb
jo
dec
movsl
adc
popf
aas
movsl
mov
sbb
mov
pop
add
arpl
jg
in
rcl
das
loopne
bound
pop
push
add
loope
pop
aad
stos
daa
jne
jnp
movsl
add
jp
popf
dec
ja
xor
in
or
testl
pop
pushf
test
mov
mov
int3
mov
and
sahf
mov
iret
push
pop
pop
push
mov
sub
sti
or
xor
pop
push
xchg
or
sbb
je
sbb
int
jl
and
bound
imul
mov
pop
inc
adc
fmuls
push
cmc
mov
pop
outsl
test
or
mov
iret
jmp
push
mov
rcrl
sub
push
or
cwtl
mov
jmp
and
mov
jmp
js
inc
xchg
fs
in
daa
jecxz
lods
add
clc
mov
popa
push
mov
inc
sub
loopne
jge
jmp
out
bound
push
add
fldt
add
jmp
in
inc
pop
rcll
stos
add
pushf
jnp
inc
jnp
cs
sub
mov
inc
imul
imul
cld
daa
out
pusha
jge
test
cs
mov
and
movsl
arpl
outsb
adc
inc
mov
lods
dec
adc
ljmp
jmp
mov
jmp
mov
jo
add
jns
ja
je
pop
vpcmpgtb
mov
mov
dec
ss
hlt
adc
not
xadd
sbb
aaa
dec
scas
movsb
leave
pop
lret
push
cwtl
lret
xor
into
repnz
cwtl
fwait
incb
pop
push
xor
addr16
add
pop
imul
sarl
in
mov
inc
adc
inc
pop
push
inc
jge
adc
movsl
js
add
xor
pushf
push
sub
divl
cltd
stc
cmpsb
sub
stos
daa
dec
loop
or
dec
or
ljmp
xor
out
jge
add
cld
mov
adc
ja
pop
in
leave
pop
je
pusha
in
pop
ss
xor
ds
inc
fs
js
inc
rol
adc
outsb
call
cmp
outsl
test
cmpsl
sbb
mov
sub
lret
add
cmpsb
jne
inc
jmp
mov
or
data16
mov
push
dec
les
add
movsl
jg
outsb
addb
push
sbbb
in
xorl
mov
jmp
mov
jl
push
not
lahf
orb
inc
or
mov
sub
mov
push
mov
pusha
xchg
mov
pushf
cmp
push
push
add
js
js
pop
call
pop
cmp
std
pop
cwtl
repz
xor
loopne
inc
xor
pop
pop
fdivrs
inc
or
cmc
in
mov
xchg
ffree
add
or
imul
pop
pop
sar
push
mov
inc
sub
enter
or
pop
adc
push
sub
mov
rcrl
mov
pop
in
add
and
pop
xchg
jecxz
jge
mov
xchg
xchg
je
jae
and
push
mov
lret
mov
rcrl
mov
jb
mov
pop
repnz
leave
mov
inc
or
add
mov
fdivl
or
jecxz
repnz
dec
imul
and
mov
mov
arpl
andb
mov
imul
shl
sbb
lods
orl
data16
in
fistpl
daa
xchg
subl
mov
mov
lods
jp
push
mov
daa
mov
gs
adc
fwait
add
push
mov
imull
ja
cmp
jns
dec
xor
ret
rorw
cmp
mov
cmp
sbb
cli
sub
stos
cmp
iret
cmpsb
xchg
sbb
or
pop
push
push
add
or
xchg
push
adc
test
mov
add
daa
divl
shr
mov
sub
jecxz
dec
inc
mov
clc
pop
jg
les
adc
jmp
lret
xor
mov
jle
pop
aam
push
fldt
mov
jmp
jno
imul
shr
lcall
je
add
and
fistl
jbe
or
out
lods
inc
or
jo
and
push
inc
add
mov
clc
testb
sarb
test
inc
or
shrl
jecxz
rcrb
aas
pop
add
movsb
push
inc
mov
jae
mov
push
push
mov
andb
and
out
jo
cmp
pop
daa
jecxz
pushf
or
mov
ja
test
loop
and
pop
jmp
cli
sahf
or
iret
out
rclb
mov
arpl
cli
jge
fbstp
mov
daa
dec
push
test
test
xlat
push
xlat
sub
pop
xchg
call
jge
pop
jmp
rclb
jp
clc
push
mov
das
jle
inc
sarb
fucomi
lods
adc
pop
sbbl
daa
test
sub
and
outsb
xchg
icebp
dec
pop
push
mov
or
add
or
sbb
dec
mov
sub
hlt
pop
clc
push
mov
cmp
jno
xor
test
inc
sub
orl
insb
repz
sub
add
adc
pop
jno
test
xor
jge
ja
and
iret
les
cli
popf
dec
cmp
adc
jnp
rcll
add
repz
add
sub
js
outsl
jmp
idivb
les
stos
mov
pop
mov
sbb
rorb
dec
neg
rcll
add
adcb
imul
test
test
andb
jmp
xor
fisttps
jmp
out
imul
clc
add
sbb
test
aad
mov
cmp
das
adc
hlt
inc
dec
cltd
adc
pop
movsb
xchg
in
cwtl
rcll
ljmp
sbbb
adc
lcall
pop
or
insl
ss
xchg
or
jp
loope
add
or
hlt
lcall
xchg
xchg
pop
push
xor
and
pop
mov
sub
mov
pop
movsb
xor
xor
jbe
fildll
icebp
pop
adcl
and
add
adc
add
sub
ret
out
mov
add
pop
dec
fmulp
out
pop
stos
iret
push
or
arpl
mull
and
js
rcrl
rcrb
out
push
add
adc
jmp
mov
dec
rcrb
out
and
xlat
pop
in
scas
out
cmp
jmp
dec
das
sbb
testb
mov
cmp
sbb
mov
and
sub
xchg
mov
repnz
push
xchg
xchg
ljmp
mulb
adc
in
lret
jno
dec
sarl
mov
cmc
pop
mov
pop
xchg
outsb
mov
jns
push
addl
scas
push
outsl
stc
sub
mov
jo
push
xchg
testl
push
push
push
inc
leave
fldt
add
dec
mov
enter
lock
out
shll
sub
push
pop
stos
mulb
bound
pop
jno
pop
pushf
jno
rorl
xchg
cld
jle
push
js
sub
pop
insb
mov
outsb
xlat
stos
orb
maxps
mov
mov
mov
adc
cmp
into
mov
dec
imul
in
xchg
insb
push
filds
jp
ljmp
popl
cs
sub
sahf
sub
loope
add
mov
mov
loop
jnp
and
xchg
shrd
xor
fildl
cmpsl
push
rclb
or
pop
in
or
pop
adc
aad
push
cmp
dec
cmpsb
adc
pop
or
das
in
dec
jns
jne
adc
mov
out
mov
push
xor
or
gs
test
in
nop
enter
sahf
pusha
push
icebp
fs
pop
divps
jg
cli
push
xchg
push
mov
inc
push
mov
adc
ficompl
int3
arpl
imulb
add
shr
jae
add
and
lret
pop
stos
push
xor
mov
bound
sub
push
jmp
lock
es
je
out
stos
cmp
push
inc
sbb
add
mov
sub
push
jmp
mov
push
lret
fisttps
scas
adc
aad
or
pop
sub
push
ja
jnp
pop
pop
in
pop
imul
xchg
pop
inc
je
inc
or
incb
add
add
jb
mov
loopne
xor
and
push
add
jnp
cmp
pop
and
fcomps
jno
push
int
fimuls
push
jmp
pop
mov
fstl
fidivrs
adc
pop
pop
mov
cmp
stc
cmp
adc
mov
jmp
aam
mov
inc
cwtl
sbb
cmp
push
pop
jae
xor
iret
lods
mul
pusha
imul
mov
and
sub
out
mov
bound
ret
sbbb
shl
adc
mov
js
xchg
sbb
and
cmp
scas
sar
mov
push
push
mov
ds
pusha
mov
jg
bound
jg
push
mov
push
add
sub
stos
add
mov
sub
pusha
incl
adc
add
popa
je
pop
mov
push
adc
push
test
jmp
cmc
mov
inc
in
dec
mov
mov
mov
push
jmp
pop
inc
and
or
subb
aad
adc
jmp
test
outsl
add
cmc
outsl
out
xchg
mov
xor
cmp
mov
sbb
ja
or
or
aam
int3
ss
pop
sahf
xor
dec
xchg
mov
push
fiaddl
leave
or
adc
sahf
sbb
pop
and
je
push
cmp
or
or
and
mov
imul
adc
add
jno
dec
movsl
inc
pop
sbbb
jns
cmp
mov
add
xchg
add
inc
insb
rorb
and
incl
fstp
sarb
les
rorb
and
inc
adc
iret
inc
or
sub
ret
rcrb
ds
pop
movsb
int3
dec
xchg
and
sub
mov
loope
lret
xchg
mov
lea
paddw
mov
int3
mov
into
jge
xchg
add
lret
orl
inc
push
push
sub
xchg
fisubrl
popf
adc
inc
dec
aaa
xchg
mov
xlat
test
mov
lods
addb
das
int3
dec
test
leave
clc
dec
xchg
inc
shufps
fchs
subl
xor
test
pusha
fiadds
dec
xor
cmp
dec
decl
test
push
jmp
or
in
and
and
sub
lahf
adc
xchg
movsl
and
jo
xor
js
orl
std
xchg
test
push
jno
jo
sub
cmp
lds
sub
push
mov
outsb
dec
cmp
imul
inc
push
push
add
push
loop
shlb
daa
pop
cmp
mov
cwtl
add
xor
or
sub
push
jno
ljmp
mov
fbstp
push
cs
imulb
push
repz
popa
pop
cmp
sahf
movsb
icebp
inc
xorb
or
jmp
sub
fs
mov
or
fs
mov
push
add
jp
add
mov
jmp
jno
jmp
mov
mov
push
inc
bound
add
movsb
divb
repz
jl
icebp
inc
repz
shr
jp
cmc
cmp
mov
loopne
sti
test
xorl
add
push
popa
shlb
mov
and
das
dec
fstl
lods
fs
mov
gs
arpl
bound
sbb
sub
cmp
jmp
outsl
or
adc
push
push
call
add
cmp
nop
pop
lret
mov
negl
add
adc
out
add
pop
call
mov
adc
bound
cmpsb
subl
pop
out
das
aaa
call
test
add
or
lahf
jle
add
xchg
push
mov
pop
fidivrs
or
sbb
test
or
cmp
mov
or
push
das
daa
fwait
div
scas
adc
test
mov
mov
mov
jmp
dec
dec
ds
shr
dec
hlt
pop
push
ret
sqrtps
adc
push
jmp
xchg
push
sahf
cmpsb
inc
imul
xor
xlat
je
in
or
rcrl
sarb
dec
jecxz
mov
sbb
insl
push
or
addr16
jge
rorb
das
loopne
cmp
push
dec
dec
or
out
push
repnz
xchg
ja
adc
push
xchg
xchg
push
cmpb
mov
pop
pop
inc
ljmp
cmp
xchg
pusha
lods
ja
sbb
pop
push
mov
rorl
mov
mov
mov
add
jmp
sub
cmc
sti
xchg
ds
idivl
push
xor
orb
inc
iret
or
push
xchg
sub
leave
subb
outsb
or
or
inc
idivb
add
push
mov
push
add
les
bound
inc
pop
insl
daa
jmp
cwtl
inc
adcl
lds
dec
inc
or
jmp
xchg
or
pop
or
imull
and
and
dec
dec
add
xor
jno
pop
stos
pusha
insl
push
mov
cmp
jle
adc
fidivl
push
xchg
xor
jne
dec
push
filds
ret
jmp
aam
sub
or
addl
sub
in
mov
sti
push
cmp
jg
push
push
mov
push
nop
add
jnp
or
inc
xchg
loopne
inc
push
and
xor
test
sarl
adc
jb
push
pop
nop
adc
andb
push
test
int3
dec
dec
sub
pop
lret
aad
and
or
fsubrs
in
sbbb
or
imul
xor
or
fsub
xchg
add
lea
add
jne
push
cmp
cwtl
push
pop
sbb
das
adc
xor
add
jmp
push
cmp
adc
sti
inc
fdiv
or
add
xrelease
cmpsb
jne
stos
lahf
dec
and
xchg
mov
mov
andb
cmc
es
adc
push
stos
mov
mov
lret
add
icebp
insl
outsl
in
call
and
sti
les
cmp
sbb
or
js
cmpsb
scas
cs
sarb
jne
or
push
negl
dec
nop
sbb
mov
shr
cmc
xor
pop
icebp
adc
adc
add
ret
fmull
loope,pt
iret
jg
or
fwait
in
adc
sbb
or
push
pop
pop
inc
ror
add
loop
nop
cmc
dec
jb
stos
cmp
xor
scas
xor
arpl
js
mov
fwait
xchg
icebp
mov
jmp
push
xchg
movsb
shll
mov
imul
nop
leave
ficoms
cwtl
fimuls
cli
pop
push
xchg
mov
push
nop
daa
xor
pop
bound
mulb
xchg
jbe
add
xor
addr16
pop
sub
ja
xor
les
cld
xchg
xchg
imul
add
pop
je
xorb
or
xor
das
jmp
add
repz
push
aas
loope
or
xor
push
inc
filds
cmpsl
add
push
adc
add
inc
fs
push
test
dec
mov
jge
arpl
imul
das
pop
mov
adc
dec
jno
xchg
not
imul
pop
or
add
out
stos
inc
inc
mov
outsl
sahf
sbb
xor
mov
mov
or
adc
lods
gs
jno
das
mov
adc
pop
mov
jg
xchg
in
test
add
scas
push
or
inc
or
fs
sub
mov
es
jmp
aas
lock
add
pop
out
and
and
mov
mov
das
mov
shll
cmpsb
aas
adc
shrb
dec
inc
sbb
jne
es
sbb
ror
push
neg
push
mov
pusha
iret
add
out
add
mov
mov
mov
sub
cmpsb
int3
iret
pop
out
jns
or
jmp
sbb
inc
push
xchg
mov
mov
cmp
and
daa
xor
mov
jnp
popf
test
clc
mov
lret
ret
ljmp
dec
cmp
dec
mov
sub
sarb
sbb
xor
cs
or
sbb
inc
test
mov
xchg
lgdtl
dec
sub
imul
loop
cmc
mov
scas
and
ret
cwtl
in
add
dec
insb
cli
inc
jo
out
jg
std
and
push
das
cmp
mov
popa
inc
pop
jo
out
pusha
sbb
mov
outsb
in
push
mov
xchg
dec
jo
mov
call
or
pop
dec
mov
rolb
test
xor
cmpb
dec
leave
pusha
xchg
push
popl
faddl
add
outsl
les
pop
add
data16
daa
jne
sti
adc
sub
add
add
xchg
pop
jp
in
and
repz
pushf
jnp
xor
xor
mov
clc
xorl
jp
das
push
pop
sub
fcmovnbe
scas
cmpsb
xchg
xchg
test
jg
sub
ljmp
xchg
cmp
or
inc
je
subb
dec
jmp
and
ret
pop
inc
or
hlt
mov
jecxz
dec
add
push
lahf
sbb
ret
cmpl
fidivl
push
push
test
jg
frstor
sbb
lods
std
mov
xchg
xor
pop
mov
mov
fdiv
cs
push
xor
dec
scas
in
dec
mov
mov
pop
cmp
sahf
movsl
jecxz
jo
adc
pop
push
inc
adc
mov
add
clc
push
js
pop
and
es
addr16
pop
andb
inc
jns
popf
clc
pusha
xor
and
loope
movsb
sti
std
sti
insb
popa
sub
cmp
fisubs
or
dec
sub
sbb
bnd
adc
add
xchg
jmp
daa
pop
test
outsl
sbb
mov
mov
fwait
repnz
add
mov
mov
scas
andb
in
sub
sub
lds
clc
int
push
and
out
adc
push
add
inc
xchg
in
outsb
or
data16
push
pop
dec
rclb
mov
sub
pop
imul
scas
dec
imul
fisttpll
add
in
sbb
push
mov
inc
add
xchg
add
in
sti
add
and
std
inc
and
popf
and
movsl
pop
or
mov
repnz
pop
add
out
mov
push
inc
xor
add
shl
or
inc
jmp
fadd
sbb
push
lds
mov
mov
data16
sub
push
jo
ret
bswap
push
into
sbb
sub
lods
cltd
mov
pop
jne
pop
addb
jb
cs
add
add
dec
movsb
movsl
push
filds
leave
pop
sbb
inc
jmp
mov
mov
imul
sub
add
hlt
xchg
ret
enter
test
clc
out
frstor
bound
sbb
mov
mov
or
jle
push
jmp
int3
dec
mov
pusha
xor
test
shr
push
jge
inc
inc
sahf
lock
in
add
xor
jmp
andb
lret
fcomip
pop
pop
pop
xor
shl
addl
xor
sbbl
fldl
cwtl
jns
das
clc
xchg
xchg
mov
jp
addl
sbb
push
mov
shr
nop
dec
ja
add
push
mov
pop
jmp
push
push
xchg
sarb
push
add
das
popf
mov
pop
xchg
pop
clc
ret
add
rcll
out
mov
ret
adc
cs
dec
dec
repz
inc
inc
inc
pop
mov
js
adc
add
add
sbb
inc
inc
aam
in
cmp
or
adc
dec
jl
adc
inc
pop
subb
rolb
or
icebp
sub
sub
out
roll
sub
xor
popf
pop
lcall
inc
pusha
lock
test
incb
cmc
push
or
mov
sub
adc
jecxz
mov
scas
int
sub
mov
lret
outsb
sub
or
incb
pop
mov
mov
inc
cld
push
xchg
orb
ret
sbb
je
out
test
lock
sbb
sbb
cli
inc
test
inc
xor
popf
clc
push
sbb
lds
lock
xchg
jbe
push
notw
mov
inc
or
pop
shr
xor
xor
shll
jo
mov
pop
inc
push
bnd
pop
pushf
mov
and
mov
add
push
add
fstl
add
sub
xor
jbe
push
repnz
sub
pop
ljmp
jle
add
push
movlps
movsl
sbb
dec
fists
cmc
jmp
or
sub
jne
add
gs
mov
clc
test
dec
jmp
arpl
cmpsb
add
add
add
nop
ret
dec
push
lods
and
pop
push
jb
jne
imul
jg
cmp
or
fldt
imul
int3
or
lea
scas
imul
cmp
lahf
jns
ss
xchg
jle
xor
mov
add
out
add
shl
neg
ret
push
std
sub
inc
int3
pop
ds
inc
add
sub
cwtl
icebp
stc
aas
das
fcomps
mov
mov
loop
jno
outsl
dec
push
cmpl
cmpsb
rcll
clc
pop
nop
cmpsb
and
daa
orl
ja
dec
out
sbb
adc
pusha
fistpll
and
mov
mov
sbb
push
dec
cmpsb
xor
inc
xor
es
sbb
insl
dec
inc
xlat
pop
hlt
dec
test
sbb
or
repnz
adc
scas
cld
inc
adc
push
mov
lods
mov
lock
mov
sub
scas
vpshaq
pop
adc
rol
add
jle
aad
add
mov
mov
adc
mov
scas
idivl
ljmp
int
dec
outsl
addr16
sub
neg
dec
add
inc
cwtl
sub
and
or
and
fwait
ds
mov
dec
std
aas
add
push
pushf
jbe
filds
les
sti
inc
mov
mov
and
out
nop
movsl
xor
pusha
push
or
add
inc
adc
cli
xchg
std
arpl
push
lret
mov
adc
andl
inc
movb
jbe
add
rol
dec
push
ret
ds
lods
pushf
lret
outsl
bound
dec
pop
test
mov
out
pop
movsl
add
arpl
cmp
clc
adc
adc
pop
pop
in
mov
daa
jge
mov
push
push
clc
or
jne
in
jnp
lock
rcll
pop
push
inc
scas
inc
xor
sub
push
es
add
xor
in
jmp
or
xor
or
push
or
cli
mov
add
jmp
add
outsl
inc
or
aam
jmp
fcmovnb
rcrb
pop
ret
in
scas
mov
xchg
out
fwait
or
mov
push
ret
push
add
rcl
nop
daa
push
ficomps
cmp
aaa
xchg
mov
xor
aam
sbb
loope
data16
add
sbb
cmp
mov
and
mov
xchg
out
xchg
cmp
xchg
movsl
fstl
jae
es
jns
test
mov
fs
inc
ret
dec
dec
push
sub
das
xlat
xchg
ss
and
add
inc
inc
fisttpl
mov
add
adc
sahf
pop
dec
shlb
pop
pop
mov
movsl
fs
or
loop
jg
fisubs
repz
sub
or
daa
and
jmp
pop
in
inc
ret
sub
jb
jle
jo
xchg
cmp
dec
mov
mov
test
inc
xchg
jl
mov
int3
bound
cmc
mov
adc
outsl
mov
or
movsb
cmp
and
mov
std
dec
lods
mov
cld
gs
fdivrl
shl
sub
mov
or
adc
xor
jmp
adc
pop
and
push
inc
add
aad
mov
fs
dec
add
aas
push
and
mov
scas
push
enter
mov
cltd
ret
cli
cmp
sbb
dec
add
push
push
mov
add
pop
push
orl
mov
rolb
ret
loope
add
in
adcb
jmp
cmpsl
aam
mov
hlt
sbbb
insb
cmp
lds
daa
xlat
cmp
pop
push
ja
jge
in
addb
and
js
into
add
hlt
dec
aad
pushf
jle
pop
sahf
in
push
scas
xchg
mov
lods
daa
and
iret
adc
mov
push
jns
push
jns
popf
xorl
bound
xchg
rclb
push
int
aam
repz
sar
testb
fldl2t
das
fcmovnb
fsubrl
aas
lret
push
push
jmp
and
lahf
aas
shlb
mov
das
lods
and
jmp
lds
enter
leave
loope
sub
adc
and
xor
push
bound
push
push
sbb
add
and
xorb
mov
pop
push
pop
pop
push
cmp
push
mov
push
push
inc
jmp
movsb
cmpsl
and
mov
inc
jmp
repnz
pop
bnd
or
idivb
jbe
jb
scas
in
and
dec
mov
push
js
repz
clc
pusha
nop
mov
lods
sub
jmp
ret
xchg
in
call
pop
lret
cmp
xchg
repz
or
ret
sbb
add
jg
dec
clc
push
subb
aad
sub
pop
mov
xchg
fcmovu
or
sub
je
pop
pop
cs
jmp
pop
jno
movsl
pop
inc
movl
aas
mov
and
mov
or
mov
test
shll
call
mov
push
or
adc
repnz
push
push
imul
cmpsb
xchg
in
adc
or
mov
and
add
pop
jne
adc
push
aas
movb
das
mov
xor
push
ja
xchg
push
mov
jnp
rcrb
lods
push
loope
int3
lods
pop
push
mov
jg
int3
lcall
sub
sbb
add
or
push
add
out
push
out
mov
fstps
sahf
mov
std
dec
sub
dec
test
hlt
mov
adc
fsubp
daa
pop
pop
add
idiv
in
push
mov
add
add
cmp
or
shrb
mov
add
lahf
push
inc
push
in
sbb
loope
dec
jle
pop
push
dec
and
add
dec
aad
andl
mov
cmpsl
lods
lcall
es
xchg
cmp
in
outsl
or
sub
adc
das
ds
sub
pusha
hlt
pushf
sub
jmp
lds
subb
cmp
es
jbe
jge
or
add
inc
mov
cmp
je
adc
das
bound
push
or
mov
je
inc
daa
xchg
xor
sub
sub
ficoms
sub
push
adcb
lods
mov
adc
mov
sub
push
imul
daa
jmp
aad
cs
iret
pop
pop
icebp
sbb
xor
xorb
js
add
or
sub
add
jmp
icebp
in
xchg
std
xor
sub
or
pop
dec
je
daa
out
hlt
push
loopne
pusha
sti
shll
loope
pop
in
dec
out
mov
push
dec
adc
addr16
adc
dec
push
xchg
data16
fcoml
mov
sub
add
jecxz
insl
sbb
and
mov
lods
enter
push
fnstcw
sarl
xor
shrb
inc
push
in
and
fidivl
pop
lock
rorb
ljmp
cmp
mov
jg
repz
inc
jmp
push
in
push
dec
cmp
and
or
dec
movsl
ja
ja
das
ret
mov
xor
pop
ljmp
outsl
mov
sbb
outsb
push
add
dec
sub
inc
loopne
les
shrb
movsb
adc
push
add
xchg
arpl
inc
add
and
and
dec
cmp
nop
daa
pop
pop
cmp
mov
insl
dec
roll
sub
add
testb
call
shr
push
push
sub
addl
mov
jmp
out
dec
or
push
jb
aaa
xchg
jecxz
inc
push
and
mov
mov
stos
cmp
sub
push
sbb
sub
cwtl
mov
into
hlt
ja
mov
add
idivb
or
lock
and
repz
out
push
ljmp
push
ljmp
mov
jae
push
in
imul
leave
pop
push
sub
push
push
and
inc
dec
or
and
push
stc
test
lods
cmpsb
xchg
xlat
xor
pop
sbb
or
and
adc
mov
jg
mov
fadds
jmp
pop
sub
cld
and
lock
and
movsb
in
stos
pop
clc
mov
dec
lea
dec
leave
sbb
and
pop
pushf
adc
inc
or
pop
inc
add
addr16
dec
mov
pop
push
mov
das
mov
and
shll
adc
aad
mov
mov
inc
test
adcb
or
rcl
or
int3
xor
sbb
lock
adc
or
fadd
inc
popf
daa
ljmp
jns
scas
xlat
sbb
adc
xor
bound
dec
outsl
push
push
or
push
inc
push
add
leave
mov
pop
invd
je
jae
out
decb
rcll
jb
lahf
pusha
mov
stc
mov
mov
inc
add
pusha
jmp
jmp
aaa
aaa
enter
rclb
mov
hlt
orb
aas
fnstcw
xchg
enter
daa
pop
push
xchg
push
jle
jmp
ljmp
cltd
jno
jbe
popa
xor
dec
mov
cmp
addb
out
lods
adc
cs
les
jnp
leave
jle
inc
push
mov
sbbb
incl
sar
shll
addr16
push
push
pop
sbb
or
fstl
jbe
daa
jo
sub
xor
pop
or
add
and
iret
movsl
incl
jmp
add
cmp
pop
in
cmp
cltd
mov
dec
sti
cld
xor
jns
clc
out
gs
mov
xor
jle
pop
pushf
cmp
jmp
rolb
pop
and
add
sub
jge
loope
jg
shll
push
mov
add
daa
add
inc
mov
mov
add
push
pop
adc
cmp
or
sti
and
cmc
mov
cmc
sti
mov
add
push
notb
push
pop
fs
pop
mov
or
mov
hlt
xor
repz
or
insl
pop
cmc
jl
cmp
lock
push
xor
jmp
loope
jmp
push
push
test
arpl
jl
lds
mov
or
je
sub
xchg
xor
into
dec
jle
sub
mov
out
es
xchg
or
sub
insl
addl
push
shl
xorb
xor
rcrb
mov
xlat
xor
out
and
adc
pop
add
dec
incl
cltd
push
cli
cmpb
mov
jg
and
test
add
repnz
and
pop
or
jl
arpl
sub
and
or
shrl
add
icebp
sub
test
xchg
pop
int
push
push
mov
leave
dec
mov
push
inc
les
mov
adc
cmc
shrb
mov
mov
std
sarb
or
add
inc
or
pop
jmp
icebp
je
loope
rol
or
sti
ds
push
iret
in
inc
les
das
ret
insb
push
cmpsl
iret
dec
jmp
sbb
lock
push
mov
rcll
pop
shr
sahf
add
scas
or
and
ja
sbb
fidivrl
sbb
sbbl
jae
shrl
ljmp
lock
or
mov
adc
aaa
inc
xor
int
in
out
out
sbb
mov
and
jmp
pop
pop
or
xor
pop
cwtl
leave
inc
aas
mov
mov
arpl
dec
xchg
js
sub
loop
filds
and
cmp
stc
stc
arpl
les
mov
and
ret
sbbb
es
pop
sub
dec
out
in
jno
push
and
adc
or
ret
push
pop
xor
dec
icebp
daa
cld
in
popf
je
bound
jo
cmpsb
pusha
and
movsb
call
fistpl
xchg
outsl
cmp
mov
or
push
xchg
scas
lock
popf
jg
jl
push
fcomi
das
mov
nop
loopne
add
mull
js
cwtl
cmp
fadd
aam
addr16
inc
or
sbb
popa
dec
sub
push
add
clc
bound
es
in
pop
jle
mov
sub
pop
push
or
add
into
and
inc
mov
mov
fnstcw
cwtl
xor
inc
loopne
dec
push
popa
sub
jne
or
roll
rcll
ss
or
lods
js
add
je
push
lcall
xor
cmp
pop
shlb
insl
test
arpl
inc
add
push
pop
pop
or
test
push
xchg
stc
stos
bound
push
roll
fstpl
jbe
dec
sbbl
aaa
outsb
xor
or
cmc
sub
mov
insl
jge
mov
sbb
add
cwtl
out
jne
stos
ret
pop
mov
cmp
popf
push
mov
lods
inc
cwtl
out
mov
mov
ret
pop
ljmp
fisubrs
and
loope
aad
mov
pop
xor
or
add
mov
lcall
inc
jmp
fdivl
jle
cwtl
aas
mov
dec
scas
lea
jno
negl
xor
push
mov
adcb
fdivl
pop
or
inc
test
dec
or
sbb
dec
popa
jl
pop
rolb
adc
xor
push
push
pop
push
xchg
and
in
mull
mov
or
or
xor
and
pop
dec
sbb
jbe
das
bound
into
popf
aam
mov
insl
push
mov
xor
int3
pop
jb
cmp
test
roll
adcl
xchg
mov
pop
push
xchg
fsts
ficomps
rclb
ljmp
sub
aad
push
mov
mov
jp
mov
xor
popl
adc
sub
popa
or
shrb
inc
jb
mov
add
leave
shrl
pop
pop
sub
push
mov
loopne
mov
add
xor
pop
shl
fxch
cmp
stos
leave
lock
ds
aaa
pop
add
add
out
and
push
out
and
jmp
incb
pop
addr16
push
pop
stos
xchg
cld
sbb
and
mov
sbb
add
cmp
lahf
pop
movsb
cmp
or
mov
jge
or
rcr
or
dec
mov
mov
xor
and
outsl
movsb
dec
sub
das
pop
mov
inc
and
and
sub
cmpsb
scas
mov
out
inc
cli
jae
ret
add
test
sub
or
sub
ja
mov
jmp
cmpsl
or
dec
jp
test
shll
pop
cld
mov
test
ljmp
int3
pop
jg
adc
mov
cli
loope
sbb
push
push
push
sbb
stos
xlat
dec
lock
sub
add
or
pop
sub
pop
je
ror
or
and
fiaddl
mov
pop
dec
push
clc
ljmp
dec
nop
mov
cmc
test
xchg
pop
cmp
or
cmpsl
pop
cmp
cld
and
mov
add
fstpl
sub
push
mov
inc
xor
and
mov
sub
mov
or
ljmp
sub
fimuls
mov
mov
jecxz
jne
inc
jmp
mov
icebp
dec
mov
mov
das
add
aad
dec
pop
call
loopne
push
test
testb
sbb
cmp
mov
fcmovnb
repnz
sub
or
sub
cli
jge
xorl
or
cmc
ljmp
push
sub
and
inc
mov
pop
xchg
popf
insb
pop
adcb
push
add
or
sbb
add
int3
popa
xor
jmp
add
hlt
enter
jns
push
add
jmp
add
stos
and
test
scas
adc
sahf
push
jbe
rclb
sub
mov
inc
scas
xorl
lods
shll
aad
push
mov
lcall
push
inc
xchg
xchg
add
ljmp
lret
sbb
dec
and
jmp
mov
jmp
push
shll
add
mov
bound
sub
sarl
out
cmp
fadds
inc
jmp
lret
popa
and
add
jge
sub
es
insb
call
push
imul
mov
movsb
mov
cs
and
popa
adc
mov
dec
sub
repz
cwtl
sbb
cmc
imul
xor
add
nop
sbb
popf
mov
xor
inc
adc
jns
mov
push
pusha
push
lret
fnstenv
in
mov
aam
mov
xchg
loope
shrl
and
pop
addb
mov
xchg
jle
pop
ljmp
push
mov
cmc
pop
in
sbb
stos
mov
mov
js
pusha
dec
push
shll
and
es
mov
nop
push
and
outsl
add
lret
dec
or
dec
inc
pop
cmc
insl
xor
push
inc
pop
add
jp
aad
les
or
je
roll
mov
adc
sub
xchg
mov
loopne
mov
mov
js
inc
dec
pop
insl
jo
mov
neg
jmp
xor
das
cmp
push
cs
gs
pop
cli
bound
mov
addr16
mov
and
xchg
push
add
adc
ficomps
divl
jmp
xchg
mov
pop
jbe
pop
jmp
insl
mov
pop
outsl
mov
jae
adc
loopne
pop
adc
add
pusha
push
mov
jae
movsl
ljmp
dec
and
lcall
or
shl
rclb
sbb
test
sbb
stc
cmc
and
pop
jmp
mov
and
into
mov
int
out
xchg
pop
push
popa
jno
mov
mov
movl
add
sub
pop
pop
jmp
pusha
add
test
inc
ds
rcrb
sub
add
loopne
add
rcrl
mov
shlb
pop
push
add
adc
out
jmp
sbb
dec
xchg
rcll
sub
add
add
jo
add
push
push
mov
mov
lcall
mov
sbb
in
int
fcoms
into
daa
push
pop
andb
adcl
rcll
xor
sub
test
mov
mov
inc
push
mov
cmp
call
int
ret
leave
cld
push
xor
lret
aaa
cs
adc
fistps
incb
xchg
sub
lahf
sbb
push
add
sahf
and
jbe
push
movsl
bound
sub
mov
mov
insl
xchg
mov
gs
push
and
mov
stc
dec
inc
loopne
xor
inc
dec
js
push
adc
add
addb
mov
dec
pop
mov
pusha
repz
addr16
jo
xlat
pop
push
xlat
in
cmp
jns,pn
stos
xchg
fldl
add
loope
and
pop
repz
adc
stos
in
or
fcomps
push
fists
pop
sbb
sub
lcall
pop
mov
ficoml
shlb
out
jbe
cs
mov
pop
stc
shlb
call
jb
pop
jbe
push
push
push
adc
adc
sub
mov
adc
movsb
adc
push
push
jmp
and
mov
or
add
movsb
ja
cld
test
sub
jmp
cmp
jno
push
loope
neg
icebp
enter
mov
nop
into
clc
fidivs
xor
push
xor
and
cmp
aaa
or
imul
pop
add
loop
jns
in
or
or
mov
shr
xchg
fucomip
inc
sub
in
loop
xchg
stc
aas
push
and
pop
push
dec
arpl
pop
lods
fwait
imul
sbb
sbb
fdivrl
cld
push
test
ljmp
lds
mov
lret
leave
nop
pop
pushf
scas
daa
mov
pop
mov
push
push
sbb
pop
fldl
or
addr16
and
jmp
lret
scas
lret
cmc
pop
mov
jne
incb
pop
mov
add
sarl
add
orb
pop
das
sub
push
sbb
test
arpl
xchg
ja
pop
jns
inc
je
sbb
add
lock
push
punpckhbw
pop
cmp
pop
arpl
lock
jg
lods
add
push
fabs
push
cmp
mov
imul
jg
xchg
sti
sub
push
jecxz
push
cmp
cs
cmp
out
inc
jge
mov
xchg
pop
mov
jne
in
push
fisubrs
test
decb
jb
dec
sbb
mov
push
sub
sub
je
in
pop
pop
rorb
ficomps
scas
pop
cmp
jmp
into
clc
icebp
add
sub
addr16
sub
add
faddl
lret
inc
jb
push
mov
mov
idivb
mov
mov
jo
adc
enter
dec
mov
cmp
dec
mov
and
inc
test
das
mov
ret
int3
inc
and
jmp
xor
sub
or
pop
push
or
jne
pop
xor
mov
xchg
jge
xchg
popf
adcb
daa
mov
pop
das
xor
jl
lods
jo
js
andl
lea
icebp
scas
repz
insl
push
imull
xlat
push
pop
fwait
aas
mov
lea
push
add
jmp
loop
inc
out
add
jmp
add
nop
pushf
xchg
push
lds
mov
cmp
sub
out
adc
mov
out
or
cwtl
fs
pop
lcall
cmp
sub
inc
sbb
adc
cmp
or
test
lock
mov
clc
mov
jg
outsl
push
mov
jmp
cs
dec
imul
push
jmp
hlt
add
aad
push
pusha
mov
push
lods
adc
jle
pusha
adc
add
outsl
bound
sbb
imul
and
fnstsw
gs
jl
jns
aas
pusha
add
arpl
or
shr
testb
clc
jb
push
aas
dec
inc
jbe
and
pop
or
mov
stos
dec
test
dec
sub
xor
xchg
pop
adc
mov
pop
ret
sti
xchg
repnz
xchg
xor
ds
push
inc
add
mov
nop
and
xchg
pop
or
out
xor
scas
sub
sbb
ja
popf
cmp
or
mov
jg
add
jns
rep
pushl
in
sbbb
loopne
mov
inc
add
fsubrl
jns
dec
pop
cli
in
lahf
fs
and
jo
inc
scas
lret
cmp
and
movsl
aaa
inc
ss
into
jle
das
lds
sbb
outsb
popf
int3
cwtl
and
adc
aad
mov
fnstsw
enter
mov
in
dec
sbb
and
stos
mov
xchg
iret
xchg
cmpb
inc
inc
sub
sub
mov
inc
sub
xchg
add
push
movb
sub
push
pop
add
dec
sbb
or
inc
push
cmp
xchg
inc
jns
mov
jne
add
ror
repnz
pushf
shll
sub
mov
or
jns
test
dec
push
scas
test
add
mov
loope
pop
das
dec
mov
or
xor
mov
inc
out
ret
push
sub
push
mov
mov
enter
dec
xchg
pop
pusha
fcompl
hlt
pop
adc
lcall
aam
mov
fbld
jp
add
fwait
imul
add
push
sub
fldenv
or
push
sub
roll
ja
shr
xchg
push
xchg
pusha
jnp
sub
out
dec
mov
aad
ljmp
mov
xlat
shr
jg
orb
pop
mov
stc
mov
shl
loope
js
iret
push
xchg
and
outsb
jp
lods
sub
or
loope
adc
add
ret
int3
adc
pop
cmp
dec
inc
test
mov
ds
sub
les
dec
mov
pop
shlb
loopne
jmp
and
testl
ss
and
dec
cmc
sub
inc
pop
sub
xchg
test
xlat
jo
fdivrp
pop
mov
sbb
ss
outsb
ljmp
mov
xor
jmp
out
mov
mov
shll
ret
jo
pop
or
pop
clc
mov
je
sub
daa
mov
stc
sub
pop
sub
dec
jae
mov
rorl
imul
mov
cmpsl
call
mov
lods
jbe
inc
dec
incb
adc
inc
push
xor
add
sbb
mov
push
shll
es
adc
pop
xor
mov
pop
xchg
dec
js
shll
add
pop
ljmp
orb
pop
pop
dec
push
shrb
lock
mov
fadd
adc
xor
jmp
lods
mov
inc
cld
ja
xor
jae
roll
fldenv
mov
add
mov
or
inc
jo
popf
dec
aaa
notl
test
sub
pusha
das
sbb
scas
jl
inc
pop
insl
cwtl
pop
push
sbb
adc
and
xor
loopne
add
lods
adc
stos
fists
lock
jb
sbb
dec
sub
sub
rcrb
daa
mov
pushf
ja
pextrw
xor
iret
aas
pop
dec
daa
rorl
pop
inc
aas
or
cmp
push
mov
push
scas
iret
jb
sub
mov
add
sub
std
lret
sbb
or
ds
int3
rcrb
aam
sbb
pop
sbb
and
push
cmp
repz
push
adcb
push
inc
pushf
lcall
lods
arpl
bound
mov
mov
mov
mov
imul
in
mov
mov
shll
sub
mov
test
add
cli
mov
cmp
dec
dec
popf
xor
mov
or
pop
pop
repz
or
in
imul
out
ja
cmp
add
std
dec
jbe
pop
repnz
add
sar
ljmp
rcll
and
mov
das
add
out
and
xor
movsl
xchg
mov
push
mov
into
pop
add
imul
imul
jmp
test
mov
bound
gs
add
cmpsb
xchg
out
cmp
rep
movsl
data16
dec
nop
mov
scas
sub
mov
dec
mov
scas
inc
pop
jp
cwtl
addr16
xchg
mov
mov
popf
mov
push
cmpb
push
jbe
push
fisubs
pop
sub
add
inc
mov
mov
adc
out
outsl
test
fsubrp
add
mov
mov
mov
jnp
ret
pop
mov
cltd
mov
out
ja
sbb
sub
xchg
push
rcrl
mov
sub
cmove
data16
xchg
or
xor
jae
adc
dec
test
adc
push
inc
xor
repz
push
xor
cmp
stos
andl
dec
xchg
jns
jle
xchg
add
sbb
add
sub
or
in
pop
jmp
icebp
ja
push
sub
jmp
inc
sbbb
sub
cs
and
outsb
mov
adc
aam
lds
cltd
pop
and
jg
pushf
xor
daa
jo
cli
dec
pop
mov
dec
add
clc
and
flds
aas
cwtl
sbb
pop
scas
aaa
mulb
icebp
adc
cmp
mov
sub
pusha
or
addr16
loopne
test
push
stc
mov
sahf
pop
stc
test
mov
rcrl
fptan
lcall
in
out
in
into
mov
les
sbb
or
inc
dec
push
jnp
add
dec
jg
jmp
adc
lret
cwtl
popa
pop
xor
jno
xor
movsl
fsubrs
push
pop
xor
loop
adc
xor
roll
jmp
mov
jno
imul
cmpsl
push
adc
pusha
lds
pop
jp
cmp
pop
popf
xlat
push
inc
pop
push
cmp
sub
sub
push
nop
jnp
scas
push
rolb
xchg
insl
mov
ds
sbb
loopne
xor
lock
mov
mov
push
fmull
adcb
aas
add
sbb
pop
cmp
push
movsl
movsb
mov
dec
cld
aaa
xchg
out
pop
loopne
ljmp
push
das
rolb
jb
jg
dec
jl
lahf
int
out
sub
outsb
mov
aas
dec
push
dec
xor
sbb
mov
sub
sub
xchg
ja
in
pop
add
lahf
adc
sub
ret
sbb
jno
cmp
int
jns
mov
or
fcmovu
outsb
pop
repz
popa
in
pop
cmp
popa
push
mov
add
std
ret
cmp
sbb
or
mov
pop
in
out
rclb
xchg
pusha
inc
lds
bound
addr16
mov
cwtl
add
mov
mov
mov
lcall
cmp
pop
lock
xchg
jno
dec
jne
mov
or
cmc
xchg
inc
pop
jmp
mov
or
add
xor
rcrb
mov
jo
jmp
pop
push
cli
jne
pushf
and
ret
clc
outsl
out
push
or
jp
loope
in
add
jmp
or
test
sbb
sbb
dec
sub
cmp
fbld
pop
outsl
sbb
inc
mov
pop
roll
jmp
mov
clc
out
cmp
jae
jl
sbbl
pop
mov
cld
push
xor
ret
add
jmp
xor
add
xchg
stos
lret
or
lods
adc
and
xchg
test
sub
sub
popf
enter
cmp
lcall
add
addr16
or
xor
pop
aas
mov
pop
pop
repz
fmuls
xchg
pushf
push
jmp
ja
xchg
add
mov
add
ret
push
push
sub
cs
pop
jmp
or
dec
cwtl
jo
jmp
cmpsb
xchg
or
mov
sub
xchg
xor
aam
sub
xor
push
inc
popa
pop
or
sub
jecxz
xchg
add
push
insl
orl
movsb
add
jp
push
ja
dec
addr16
jmp
jg
inc
adc
lods
jecxz
push
push
mov
fisubrl
out
mov
mov
aaa
notb
cmpsl
mov
add
push
adc
test
bound
and
xor
push
sub
outsb
pop
rorl
or
das
sub
fdivrl
repnz
std
cmc
and
mov
push
xorl
pop
sbb
jnp
ljmp
rcrl
or
cmp
pop
stc
dec
or
inc
lahf
dec
call
add
divps
push
mov
sub
or
xchg
mov
xlat
jae
push
pop
mov
into
inc
andl
push
icebp
clc
and
xor
out
std
push
lds
xor
repz
jmp
dec
push
jno
movsb
sub
das
pop
inc
jmp
mov
roll
xor
add
lahf
pop
ljmp
imul
sub
orl
pop
pushf
adc
xor
out
inc
mov
repz
xor
or
cld
int
sub
das
iret
rolb
insb
stc
xchg
inc
rcl
int3
lods
or
jae
loope
mov
test
mov
dec
and
or
xorb
xorl
dec
imul
ljmp
mov
pop
out
cmp
daa
inc
imul
rcrl
roll
aas
add
push
insb
int
push
xchg
jmp
pop
push
push
ret
inc
sub
sub
mov
pop
negl
repnz
sub
inc
test
insb
jno
mov
cmovno
mov
cmp
scas
xor
aas
dec
cmpsb
test
mov
outsl
add
enter
jmp
fcomps
dec
mov
push
push
fstl
dec
pop
sub
push
popf
jle
bound
pop
dec
fisubs
mov
adc
test
dec
insl
roll
mov
les
xor
or
sub
jmp
inc
lods
sbb
inc
addr16
cmp
lsl
and
cmp
ret
sbb
or
es
add
popa
add
mov
repz
mov
int3
jns
push
lock
nop
fcompl
test
push
roll
std
sub
mov
sub
daa
cwtl
lods
jge
pusha
fs
or
test
out
mov
rcll
dec
pop
fldl
xchg
mov
xor
stos
push
add
out
popa
inc
fdivrs
fiaddl
cld
in
and
cmc
cmp
daa
jmp
mov
push
jle
ljmp
mov
dec
mov
repz
push
mov
push
mov
inc
in
cmp
mov
das
add
cmpsl
bound
lret
inc
cmp
insl
loopne
and
mov
push
mov
and
fs
outsb
imul
push
pop
adc
insb
gs
jno
jns
movsl
add
push
mov
inc
push
mov
ds
push
out
xor
jle
or
adc
pop
xor
jb
push
dec
xchg
or
les
test
mov
out
je
mov
popf
and
pop
arpl
jns
and
sbbl
sub
fiaddl
push
add
rolb
test
inc
pop
xor
jnp
xlat
leave
add
xor
addl
out
clc
xchg
stos
mov
in
sub
jae
xchg
leave
mov
pop
sub
xor
enter
into
or
pop
add
jmp
sbb
clc
outsb
mov
push
xchg
bound
sub
pop
shll
mov
and
mov
outsl
imul
das
xor
or
and
xchg
lret
insl
loopne
out
sti
leave
adc
pop
bound
sahf
testb
xor
adc
add
jmp
pop
push
mov
out
push
mov
mov
jg
lret
es
pop
cmp
and
pop
loope
imul
mov
xchg
sbb
push
jmp
mov
not
rolb
loopne
int
add
jmp
xchg
push
out
sub
mov
pop
std
dec
sub
xchg
clc
jmp
into
pop
pushl
test
enter
add
xor
outsl
mov
pop
jb
jns
sbb
or
imul
or
test
jnp
sbb
inc
cmp
inc
push
mov
jns
inc
movsb
push
adc
int
cs
push
and
int
pop
xlat
add
xchg
xor
sbb
sub
aam
or
inc
adc
aam
adc
movsb
negb
sbb
xor
lahf
xor
xchg
mov
adc
leave
std
adc
imul
pop
mov
and
pop
sub
sbb
gs
xorb
push
push
adc
divl
xchg
pop
push
add
xlat
ja
insb
loopne
pop
add
das
pop
mov
cmp
pop
cli
test
pop
cmpsb
jg
mov
aaa
add
adc
xchg
mov
call
arpl
jmp
push
fwait
das
or
dec
inc
xchg
addr16
jmp
mov
fistps
imul
arpl
mov
jmp
shl
xor
call
cli
fs
stos
in
cmpsl
pop
je
cmc
add
jo
mov
shrl
push
sbb
mov
sub
dec
fsubrl
out
dec
adc
mov
add
jp
jmp
and
roll
mov
jl
stos
sub
or
jne
mov
add
out
jns
pop
sub
jo
fildl
or
sub
mov
xlat
inc
or
jp
adc
es
xchg
mov
fcomps
gs
adc
push
push
mov
std
xchg
mov
int3
cwtl
lods
mov
das
cltd
jne
jg
in
negb
pop
add
push
inc
pop
popf
push
lret
daa
icebp
cld
ret
bound
cltd
ret
cs
gs
mov
imul
lcall
shlb
dec
adc
test
mov
and
fs
pushf
inc
mov
jmp
cs
xor
and
arpl
push
add
mov
push
popf
inc
jle
jmp
push
add
push
push
mov
inc
add
xchg
pusha
inc
push
sub
xor
inc
dec
test
add
xor
adc
aam
sub
sbb
pop
popa
push
outsb
and
xchg
cmp
outsb
cld
mov
and
imul
mov
jne
add
rcll
sti
add
mov
cmc
jne
movsl
sub
js
out
cmp
inc
rcll
ds
in
clc
add
adc
jmp
movsb
xlat
addr16
mov
xor
pop
add
or
popa
push
push
jp
jmp
sub
and
add
pop
dec
pop
add
push
mov
fs
sub
stos
add
jne
add
shlb
shrl
jmp
push
je
scas
jg
jbe
lret
out
sbb
push
sub
jnp
or
fs
xchg
push
mov
jns
mov
inc
insb
dec
popa
push
push
push
cs
add
out
test
rclb
mov
add
daa
sub
push
mov
lea
sub
add
mov
dec
cmpsl
add
testl
xchg
rorl
jmp
mov
icebp
subb
aas
testb
inc
inc
sub
or
sahf
gs
dec
xchg
outsl
sbb
jp
mov
cmp
aas
pop
mov
faddl
jl
ret
xchg
negl
loop
aad
adc
nop
in
or
or
out
mov
push
jnp
stc
jg
mov
pop
faddl
or
adc
push
dec
cwtl
loopne
inc
insl
subl
add
pusha
mov
push
mov
popa
xor
pop
sub
test
pop
int3
mov
push
xchg
xchg
add
aad
push
jmp
pop
inc
adc
stos
inc
jbe
mov
xor
fidivrs
cmp
dec
mov
fwait
pop
shll
stos
cs
push
jmp
out
xchg
lret
dec
add
push
push
push
xor
icebp
vpsrlw
icebp
or
cmp
gs
dec
inc
lea
ret
test
aaa
jp
push
sub
out
cmp
or
gs
scas
sub
movsb
lock
sti
fmuls
into
xchg
clc
jl
neg
sbb
xchg
and
sahf
scas
sub
push
stc
dec
adc
dec
or
pop
pop
mov
adc
fcomps
rcrb
inc
xlat
mov
sbb
cmp
je
add
dec
inc
sub
inc
xor
shl
push
sbb
shlb
xchg
mov
push
dec
pop
sub
cld
decb
pop
pop
jbe
adc
cmpsl
push
pusha
mov
adc
scas
and
mov
sub
pusha
fistl
xor
add
mov
shll
or
add
xchg
dec
jmp
and
xor
loopne
fstpl
data16
pop
je
xchg
orl
in
jae
out
pop
js
mov
jne
jbe
pop
inc
push
push
fstpl
jmp
hlt
push
push
pop
aaa
adc
push
leave
pop
pop
add
ret
popl
in
and
shlb
mov
ljmp
jmp
sub
out
inc
xchg
add
and
push
mov
add
nop
fcmovb
xor
pop
push
loope
or
pop
sub
lcall
shrl
or
dec
in
daa
fcoms
in
aam
es
insb
cld
dec
mov
aaa
jo
fld
ljmp
fnsave
push
repnz
lds
add
inc
xchg
popa
insl
icebp
fidivrl
imul
mov
insl
int3
or
sub
pushf
lret
enter
mov
dec
lock
movsbl
add
lods
data16
aam
dec
jmp
repnz
add
inc
adcb
in
iret
in
push
jecxz
ret
stos
loop
popa
lahf
and
adc
cmp
aam
sbb
and
pop
or
push
shr
add
test
int
sub
cmpsb
xchg
or
sbb
divl
mov
jecxz
mov
sbb
shr
xor
and
xor
loopne
inc
test
cld
mov
popf
push
push
xor
jno
mov
imul
push
mov
xchg
not
lahf
or
sub
nop
jb,pn
sub
xor
mov
mov
xchg
pusha
lds
push
jle
jo
xchg
cmp
push
adc
stos
and
pushf
out
xchg
push
xchg
jbe
andl
leave
xor
xor
in
add
mov
push
push
movsl
movsl
jmp
ljmp
lahf
stc
or
pop
mov
gs
orb
mov
and
cmp
pushf
sub
or
push
stc
jns
jp
cmp
test
dec
sbb
add
mov
add
pop
adc
dec
pop
pop
repnz
pop
fidivl
pop
push
push
js
cmp
inc
dec
add
add
loope
adc
cmc
imul
jbe
cmp
test
add
inc
sub
pop
mov
and
or
imulb
jae
add
mov
or
sub
loop
inc
xchg
dec
jno
lret
test
pop
cmpsl
add
mov
xchg
das
test
stos
inc
dec
jecxz
jo
dec
sbb
add
dec
sbb
pop
clc
mov
insb
out
add
push
stc
iret
adc
sub
pop
test
xor
pop
cltd
ficomps
into
repnz
lds
and
cmp
out
push
stc
adc
push
rolb
fwait
int
cmc
data16
stos
sbb
jmp
sbb
push
mov
or
ret
fdivrl
add
shl
je
fimuls
inc
jnp
push
push
inc
inc
es
xchg
or
jmp
mov
pop
mov
cld
mov
outsb
jb
sub
icebp
pop
xor
add
dec
or
std
decb
scas
dec
or
sbb
pop
push
jmp
loop
fstps
sarl
dec
mov
mov
push
ret
xor
pop
or
jae
push
imul
in
jmp
xor
cs
push
push
pop
add
hlt
cmp
dec
pop
cs
jbe
inc
outsb
cmp
daa
mov
sub
dec
mov
adc
pop
ret
jno
mov
pop
int
outsb
std
sahf
lds
stos
fbld
sbb
in
mov
pop
xor
insb
andb
pop
rep
and
inc
leave
pop
lods
jb
je
iret
aad
xchg
dec
leave
or
addps
jecxz
not
pop
dec
lds
cli
js
and
push
push
mov
cmp
pop
ret
enter
cs
or
mov
jle
dec
fmul
inc
rcll
sub
sbb
add
cltd
popf
add
pop
lods
test
and
or
pop
ja
pusha
inc
jmp
jns
imul
roll
add
push
push
add
inc
mov
ja
dec
jge
push
movsb
xchg
ret
outsb
imul
insb
out
andb
es
test
fsts
incb
dec
mov
cmp
add
adc
insb
js
in
pop
dec
xor
aam
in
and
ret
pop
push
xchg
pop
mov
dec
cwtl
inc
dec
std
test
stos
jl
pop
nop
add
fldenv
data16
shl
and
xchg
pop
insb
fwait
mov
repz
jp
out
sub
jbe
xlat
daa
xor
mov
lret
or
sbb
jno
dec
mov
pop
push
dec
into
hlt
push
cmpsb
adc
jo
inc
inc
or
out
andb
out
add
push
mov
not
adc
cltd
mov
pop
mov
sbb
jne
flds
mov
sub
pop
scas
repz
nop
add
popf
adc
dec
in
add
push
inc
push
mov
add
int
add
xchg
mov
jb
jp
sub
or
test
push
iret
adc
pop
int3
movsb
pop
fsubs
pop
adc
fiaddl
daa
pop
mov
or
xor
mov
fisttps
aas
mov
pop
outsl
mov
mov
push
add
jmp
lods
sub
addr16
test
mov
popf
test
jg
cltd
test
clc
iret
xchg
test
xchg
add
shlb
pop
insb
jnp
cmp
or
mov
dec
push
daa
es
aaa
incb
pop
pop
add
cmp
pop
fs
mov
mov
push
xchg
loop
shrl
jg
jmp
sub
pop
push
and
pop
test
mov
inc
clc
pushl
cwtl
sub
mov
insb
push
lret
clc
pop
inc
mov
push
push
add
jmp
andl
jle
popf
ret
test
cwtl
lcall
int3
adc
repnz
movsl
dec
ds
sahf
test
lret
dec
and
in
sub
pop
jmp
repnz
daa
pop
cmp
pop
jl
jns
mov
repnz
push
and
push
or
adc
cmp
loop
arpl
add
dec
loopne
or
add
scas
add
sar
cmp
pop
fsubrp
jbe
cmp
lahf
popa
xchg
jp
or
xor
adcb
faddl
dec
in
ret
jne
sub
cli
and
movsb
fsts
out
sub
stc
repz
inc
bound
ds
rcrl
lds
xor
pop
jmp
push
adc
mov
mov
xchg
lods
cld
ds
add
sti
jmp
outsl
push
push
mov
push
add
dec
sbb
dec
or
push
add
dec
scas
inc
lret
lds
sub
push
jnp
sub
enter
icebp
adc
imul
push
mov
adc
cltd
pop
out
push
jae
push
and
mov
repnz
mov
sbb
rclb
lret
mov
cmp
and
pusha
or
pop
addr16
or
sbb
jb
adc
dec
inc
into
mov
xchg
jge
xor
pop
adc
lds
insl
push
mov
xchg
sbb
jne
aaa
sub
add
mov
pop
push
aas
dec
push
or
xor
mov
push
cmp
mov
sub
jmp
lcall
mov
jno
es
dec
pop
cmp
not
jae
jae
nop
iret
or
add
adc
stos
mov
cwtl
sub
pop
sti
cmpsl
scas
and
lods
loop
xor
fs
sub
iret
and
ret
jmp
add
loop
jl
pusha
rorb
add
add
xchg
mov
add
in
gs
gs
cmp
int3
push
add
pop
push
out
scas
mov
insb
adc
cmp
pop
adc
xchg
sbb
ficomps
nop
js
cmpsb
add
ja
mov
add
or
mov
or
xor
push
mov
je
xchg
pop
mov
xor
sub
or
lds
jp
cltd
push
movb
push
add
push
call
cmc
dec
sbb
lock
mull
add
or
sbb
push
jmp
daa
and
sub
call
rorl
loope
lods
pop
out
or
push
xor
fs
pop
cmpsb
mov
pop
mov
pop
ja
cwtl
xor
mov
cltd
push
pusha
dec
psrlq
xor
push
jo
adc
jmp
pop
out
mov
sbb
or
jmp
sub
lret
jnp,pn
test
loopne
in
inc
fiaddl
mov
jmp
push
push
jmp
xchg
je
push
fsts
call
inc
fistpl
and
mov
outsb
ficompl
test
repz
cltd
add
out
rorl
stos
sub
pop
push
mov
jnp
cld
jmp
pushf
test
xchg
dec
add
or
adc
bnd
imul
addb
fadd
mov
call
ret
les
or
pop
ss
xor
or
int
jo
and
shl
pop
clc
inc
lock
jno
or
daa
neg
sbb
add
aaa
jb
out
shlb
pop
aas
es
and
add
or
testb
sub
add
or
push
mov
push
das
sub
jmp
sbb
das
sbbb
sub
scas
dec
lea
pop
dec
and
data16
out
lods
cmp
pop
out
xchg
mov
jo
dec
inc
and
in
jecxz
push
aam
out
push
push
push
mov
in
dec
sub
clc
inc
dec
daa
insb
dec
mov
add
mov
fiaddl
push
and
or
ret
xor
repz
leave
mov
fxch
gs
rcrb
pop
aam
add
and
lret
mov
loop
popf
arpl
adc
sub
pusha
aam
add
out
dec
pop
jmp
fidivrs
or
push
mov
lea
mov
push
add
imul
daa
nop
out
or
mov
pushf
add
cmp
divb
popa
test
add
or
mov
loope
aas
fists
push
dec
and
into
inc
dec
fildll
add
and
or
push
ja
sbb
inc
mov
push
cmp
add
inc
or
xchg
orl
jg
shl
add
aas
xor
xchg
movsb
cmpsb
out
xor
scas
test
out
mov
or
filds
inc
push
push
sub
dec
imull
jo
sub
jbe
push
sahf
sub
in
jmp
lods
in
adc
pop
jecxz
push
mov
inc
loopne
stos
sti
and
push
mov
push
jle
push
sub
jecxz
aam
test
fwait
or
sti
add
xor
loope
out
inc
or
nop
shll
dec
mov
pop
fnsave
mov
outsb
cmpsb
rcll
repz
pop
mov
push
cmpsb
fwait
xchg
inc
clc
jmp
lahf
es
imul
push
sar
aad
lods
pop
dec
outsl
roll
dec
insb
int3
test
std
and
cmp
xor
pop
sbb
imul
ret
push
adc
into
xor
jle
pop
inc
scas
mov
pop
dec
mov
jmp
test
mov
leave
pop
jne
jg
mov
dec
push
aad
imulb
add
pop
shlb
sub
cmc
in
adc
sub
cwtl
pop
mov
pop
pop
ret
fisttpll
pusha
jg
sub
add
inc
rcll
push
push
cmpl
clc
js
adc
jb
xor
sub
lret
pop
inc
or
mov
dec
xor
xchg
lea
int3
ljmp
mov
icebp
mov
enter
sub
adc
pop
pushf
jbe
inc
aam
xchg
int3
bound
adc
testb
leave
jl
add
xor
jmp
not
mov
sbb
pushl
mov
xor
mov
pop
and
pop
data16
test
jbe
outsb
lock
mov
mov
ljmp
and
pop
mov
mov
out
add
jno
mov
and
pop
sarb
ja
jl
xchg
fidivs
out
add
push
enter
insl
jmp
mov
cmp
adc
test
lret
push
inc
adc
and
pop
adcl
or
jmp
loopne
repz
cmp
mov
out
pop
push
inc
push
out
jmp
pusha
lods
xchg
fisubrl
push
inc
and
repz
adc
dec
and
jbe
xor
sbb
xchg
cli
mov
loopne
rolb
shr
jo
loopne
imul
push
out
pop
sbb
and
aaa
xchg
gs
or
push
adc
xor
jle
mov
jno
push
scas
rcrb
repnz
dec
inc
mov
ljmp
idiv
sub
inc
lret
add
and
call
mov
jmp
pop
jno
imul
cli
mov
test
add
jnp
sub
pop
aaa
mov
jb
jp
sub
rolb
lea
inc
dec
fdivr
cs
dec
out
cmp
fldl
sub
pop
mov
inc
ds
pushf
das
pop
pop
sbb
repz
add
jge
pxor
xchg
jmp
push
push
stos
mov
xor
sbb
or
or
inc
ret
push
orb
push
insb
shrl
inc
mov
cmp
outsl
das
ja
fxch
inc
les
adc
or
cmpsl
imul
and
dec
sbb
dec
pop
push
adc
imul
test
rolb
bnd
mov
push
sbb
adc
or
mov
cmp
imul
cmp
adc
test
mov
enter
mov
cmp
lods
pop
or
out
push
xor
mov
xorb
cwtl
popa
dec
add
repz
les
mov
hlt
jns
iret
mov
fs
cltd
lock
mov
jmp
push
add
int
popl
gs
xchg
pop
mov
pop
fldenv
jnp
lock
add
cmp
mov
add
popf
addb
jb
mov
xchg
and
pmuludq
dec
pop
loop
adc
dec
pop
add
scas
les
ds
lret
mov
test
test
loopne
lods
les
test
push
or
ret
cmp
dec
xchg
push
xor
or
gs
mov
add
jb
jb
inc
jmpw
xor
fimuls
jmp
in
cmp
dec
aas
pop
sbb
xor
in
adcb
jb
es
jmp
bnd
xchg
push
push
mov
push
jmp
cmpsl
arpl
add
mov
out
fists
push
inc
sub
sbb
cmp
mov
hlt
popa
shl
subb
icebp
mov
sub
push
fiadds
and
jmp
xchg
pop
cld
adc
inc
add
xor
ds
adc
lahf
adc
cmpsl
jbe
aas
ficoml
jo
push
push
rcll
mov
jne
je
sub
pop
mov
adc
fmull
mov
adc
popf
daa
imul
sbb
insb
or
jbe
cmpb
inc
lds
rclb
sbb
cmc
leave
std
or
dec
rcrb
inc
add
jbe
inc
or
cwtl
and
inc
xor
mov
in
dec
lea
in
sub
test
push
adc
dec
mov
icebp
dec
jg
cmp
add
fnstsw
pop
mov
push
clc
jmp
and
shr
add
lret
cwtl
nop
dec
ja
shl
inc
inc
xlat
xchg
mov
ret
xchg
daa
mov
inc
ret
imul
add
xchg
inc
jle
xchg
into
out
xor
imul
mov
add
add
jmp
out
jecxz
es
lret
pop
mov
mov
sub
out
push
sti
xchg
outsl
nop
ret
sub
jmp
popf
sti
push
pushf
dec
getsec
dec
xor
jo
push
rorl
jmp
mov
mov
or
sti
xor
cmpsb
je
jmp
push
and
sarl
cmp
sub
stos
mov
sbb
ret
repnz
fsubrl
lret
dec
push
pusha
sub
rcrb
clc
push
scas
inc
xchg
jmp
clc
push
push
call
add
jp
sub
xchg
push
jmp
add
icebp
push
push
rcrb
pop
mov
xchg
sti
pusha
add
mov
jl,pn
mov
pop
or
push
addb
sub
cmp
jmp
xchg
jbe
add
lret
push
jmp
xchg
push
or
push
push
add
push
sub
mov
aam
test
daa
and
mov
rclb
and
and
jns
mov
pop
pop
add
mov
fcoms
pop
stos
test
pop
dec
movsl
push
out
xchg
or
shlb
lahf
inc
mov
test
push
or
pop
lock
adc
sub
mov
dec
out
fsub
and
jmp
out
dec
inc
pop
or
pop
adc
ds
dec
test
push
mov
repnz
mov
cmp
inc
adc
add
push
jmp
mov
lods
lret
pop
pop
sti
insl
push
adc
sub
push
jp
dec
das
mov
xchg
jb
cltd
test
adc
pop
mov
pusha
mov
sbb
not
in
enter
jmp
push
mul
call
xchg
xchg
insb
test
ja
das
mov
mov
in
in
jecxz
jnp
mov
sbb
sbb
xchg
jg
xchg
in
stos
fwait
push
mov
cmp
and
mov
mov
sub
sbb
mov
and
call
rcrb
lds
es
jo
jl
test
inc
push
faddl
insb
cmc
xor
cltd
jmp
push
rolb
shr
jns
mov
jmp
inc
lea
pop
pop
mov
scas
adc
ss
mov
sub
mov
add
push
xlat
lock
push
out
dec
inc
jnp
rcrl
push
repnz
adc
movsl
fsubrs
insl
or
xor
jmp
out
jecxz
sbb
shl
cltd
sbb
outsb
or
imull
lret
push
jne
outsb
es
inc
add
fimull
subb
push
push
inc
gs
or
lods
pushf
cmpsl
xor
mov
lcall
dec
add
jecxz
jno
push
xor
sbb
imul
push
mov
not
nop
mov
test
pop
cmp
add
nop
inc
jmp
lock
popf
in
out
xchg
jl
adc
adc
neg
add
sbb
or
dec
stos
movsl
call
pusha
ret
and
movsb
inc
jno
sub
fldenv
imul
stos
lret
push
loop
dec
rcr
popa
push
mov
add
mov
faddl
mov
das
rol
and
jnp
mov
xchg
divl
cmp
sbb
nop
mov
adc
aas
cli
xchg
mov
negb
push
xchg
lock
add
sbb
gs
lds
cmp
iret
in
or
push
or
push
insl
jmp
test
or
mov
dec
and
push
add
adc
je
shlb
bound
pushf
jmp
sub
sub
das
sub
sbb
cs
mov
xchg
pop
cmp
outsb
adc
imulb
or
jo
dec
add
or
loopne
test
cmp
lock
adc
in
fisubs
cmp
sub
adc
adcb
mov
lret
stos
incb
sti
outsl
std
jge
fdiv
push
xor
cmp
mov
xchg
xchg
push
fistps
add
lods
sbb
mov
pop
aad
lock
pop
jno
popl
sub
push
mov
stos
jle
int3
and
loopne
jno
jns
mov
pop
sbb
push
jne
ret
push
xchg
std
test
pushf
or
adc
sub
gs
jb
lret
insl
flds
inc
mov
lret
inc
lock
and
add
imul
dec
das
pop
rolb
cmp
dec
cmp
pop
inc
int
inc
into
or
mov
ret
inc
outsb
jmp
ljmp
leave
fcomip
adc
scas
pop
mov
jae
jb
popa
movsb
mov
cmp
push
add
and
and
adc
push
mov
mov
movsb
ret
mov
sbbl
inc
adcl
shrl
jmp
cmp
ror
cs
jnp
xchg
add
aad
test
testb
sub
dec
sub
pusha
popa
pusha
mov
inc
mov
lahf
jmp
xchg
popa
sbb
xor
cmc
in
ds
sub
push
or
fwait
inc
movsbw
xchg
jp
and
xor
add
add
push
sub
das
sub
dec
shl
or
pop
sbb
dec
call
repz
cmp
je
push
aaa
pop
inc
lret
jg
dec
je
cmpb
stc
mov
rcrl
mul
out
inc
movsl
ds
clc
add
test
jnp
repz
mov
cmpsl
inc
or
loop
ljmp
shr
push
les
pop
movsb
and
push
stos
dec
shrb
pushf
mov
push
daa
mov
and
sub
shrb
inc
inc
sub
jge
cmp
xor
pushf
adc
fisttps
jmp
or
add
bound
sub
jmp
bound
add
mov
lcall
jl
divl
dec
mov
pop
pop
sti
cmp
cli
add
pop
mov
push
jl
outsb
dec
or
lock
pop
xchg
repz
and
jmp
js
and
mov
add
fsubrl
mov
out
push
mov
sbb
jmp
jl
arpl
cmp
test
loopne
push
jmp
xor
and
cs
shrb
mov
xor
jecxz
push
xchg
push
pop
push
mov
popa
incb
icebp
pop
pop
popa
sub
lret
xlat
add
outsb
push
out
rolb
xor
int
pusha
sbb
cmpsl
pop
dec
shl
popa
scas
dec
xor
xchg
and
dec
mov
arpl
out
mov
cmp
mov
int3
data16
sbb
mov
or
sub
push
push
sub
jmp
push
mov
cmp
or
pop
les
rcrl
push
je
das
push
xchg
in
xchg
pusha
push
jo
in
leave
rclb
push
fimuls
lods
add
jne
out
xchg
adc
shrl
sub
loope
into
ja
faddl
repnz
push
insb
sbbb
dec
pop
sti
mov
call
or
add
les
pop
ror
icebp
push
cmpsl
cld
les
xchg
mov
imul
adc
and
in
and
cmp
add
notl
movsb
addr16
and
mov
mov
xor
scas
cmp
jne
scas
jmp
sbb
repz
pop
and
scas
nop
sbb
sub
ret
lods
scas
jne
fmull
push
add
mov
insb
cld
inc
inc
inc
mov
sbb
cmp
adc
nop
push
dec
imul
scas
mov
or
inc
fists
sti
sub
gs
pop
cwtl
sbb
in
in
and
and
or
rcrb
fcmove
sbb
loop
cmpsl
cli
std
pop
dec
enter
add
adc
in
fwait
inc
mov
pusha
cmp
imul
pop
jbe
lds
push
xor
cmp
shll
ja
lds
or
push
rol
xlat
cs
or
jp
dec
andb
dec
fcoml
imull
dec
cmc
jmp
jne
daa
mov
adc
negl
mov
add
outsb
gs
or
xchg
pop
sbbb
push
cmp
adc
dec
ds
cmpb
popf
fadds
or
inc
jno
and
std
xchg
aaa
xchg
jg
mov
jl
dec
mov
cld
inc
popa
xor
xchg
sub
in
in
dec
push
xorb
std
mov
out
adc
sar
mov
jmp
xor
out
jmp
int
loopne
mov
cmc
mov
adc
jle
test
xor
push
adc
nop
clc
pop
mov
sub
sub
lds
rorl
loope
repz
add
mov
mov
xor
and
or
mov
xor
popf
sub
out
jo
push
dec
xor
push
loope
dec
pop
stc
mov
sub
test
adc
out
mov
jmp
mov
mov
pop
jge
mov
inc
mov
sub
outsl
sub
jmp
and
lods
add
adc
aad
inc
xor
push
or
jg
xor
dec
int3
pop
push
cmp
call
cld
dec
dec
stos
mov
xchg
mov
repz
cmp
insl
jg
movzwl
inc
push
add
in
jno
inc
shr
xor
add
in
inc
mov
sub
jne
nop
jle
outsl
mov
push
lock
and
mov
sar
maxps
xor
xor
add
mov
cli
add
ljmp
jge
xor
pop
aam
out
inc
mov
dec
add
or
jg
repnz
jge
or
pop
jp
mov
rcrb
aam
loop
hlt
push
mov
or
or
push
xorl
sbb
hlt
pop
dec
dec
movsl
xor
jno
add
jle
pop
inc
or
popf
push
or
or
jl
iret
outsl
xchg
and
and
rolb
sub
pop
add
cmp
pop
inc
rorb
push
or
shr
inc
xor
mov
popf
fstps
insb
addr16
adc
cmp
ret
sub
ret
jl
addr16
xchg
mov
sub
inc
cmp
sub
xor
push
push
stos
nop
repz
inc
pop
rcrl
and
sub
jge
push
clc
je
push
loope
sub
xchg
and
jmp
xor
adc
in
pop
pop
mov
test
jno
xor
out
dec
testb
pop
daa
push
or
push
loop
jecxz
faddp
xchg
sbb
add
cwtl
push
orb
inc
mov
fmuls
movsl
add
mov
sti
dec
call
pop
xor
adc
mov
add
fisubs
sub
add
imul
push
adc
fistpl
push
mov
xorb
pusha
push
cmp
fbstp
xchg
dec
in
jecxz
or
xchg
push
hlt
xchg
push
jge
mov
push
sub
dec
or
shlb
inc
into
dec
xor
or
mov
outsb
neg
shr
decb
sub
subb
repz
mov
push
movl
insl
aas
in
add
stos
add
out
dec
pushl
cs
es
scas
pop
outsb
xor
shrl
push
sarl
push
mull
inc
mov
dec
ljmp
addr16
les
dec
add
std
stos
inc
jne
lock
add
push
mov
bswap
push
xor
ljmp
ret
mov
orl
sbb
jmp
popf
jle
or
push
subb
in
mov
fdivl
inc
and
test
xor
les
mov
or
xchg
jbe
xchg
push
mov
push
push
jb
push
or
push
jbe
xchg
gs
pop
lods
xchg
imul
ret
push
mov
xchg
mov
fdivrs
cmp
divl
psubusw
and
loop
mov
jnp
cmpsb
movsb
push
cld
jo
xchg
push
daa
std
pop
push
mov
pop
or
daa
mov
shrb
mov
jno
jnp
repz
or
popl
xchg
add
cmpsl
hlt
int
jmp
ret
or
mov
jg
mov
mov
dec
add
pop
push
repz
std
aaa
inc
or
das
sbb
test
xor
add
jno
sub
and
mov
lods
ljmp
xlat
repnz
lahf
or
or
ret
jne
pop
inc
jo
inc
mov
pop
push
or
push
pop
mov
pop
cmpsb
insb
imul
call
or
cmp
int3
lock
rorb
pop
jae
jmp
ljmp
icebp
jae
cmp
hlt
add
or
mov
cwtl
ret
add
pop
xor
or
push
popa
mov
cmp
add
in
loop
lock
popf
rcll
cmp
aas
sbb
pusha
stc
adc
icebp
jmp
cld
sti
lret
ss
lock
mov
pop
or
gs
add
mov
sub
mov
adc
jg
adc
mov
sub
cmp
lcall
int3
jmp
inc
nop
xchg
sbb
sub
enter
pop
xlat
lds
pop
loope
cmp
mov
pop
inc
cltd
repnz
jge
sub
outsl
inc
imul
push
jne
sahf
mov
std
shr
push
xchg
mov
and
push
add
pop
adc
fidivrs
adc
data16
shrb
sbb
xor
loop
addr16
data16
stos
xorb
add
sbb
out
sbb
inc
aas
xchg
jmp
ja
pop
imul
pop
out
imul
dec
and
das
jg
xor
jmp
pop
mov
and
loop
add
jnp
dec
add
add
mov
sub
inc
adc
pop
popl
jno
jp
cmpsl
mov
pop
dec
jmp
jbe
nop
mov
lret
xor
lahf
popa
dec
aam
andl
pop
clflush
push
int3
and
cmp
add
inc
mov
fs
ret
or
add
push
push
push
sahf
dec
das
inc
les
jmp
aaa
and
loop
sub
fs
in
cmc
mov
daa
push
sbb
mov
in
jae
pop
or
js
jmp
cli
adc
cmp
pop
leave
adc
int
jmp
shl
stos
jle
and
and
xchg
sub
cwtl
scas
cmp
fcompl
fidivl
xor
xchg
push
dec
out
test
dec
shll
mov
pusha
repnz
add
sub
sub
pop
neg
push
mov
push
mov
rolb
sarl
lods
scas
mov
inc
ljmp
mov
push
pop
push
mov
adc
cmp
jo
xchg
push
leave
daa
xor
outsl
arpl
sub
add
dec
stos
sahf
sub
testl
cli
mov
cmp
push
test
negl
in
sub
movb
adc
hlt
lret
ss
stos
add
or
jmp
dec
or
sarl
rclb
or
push
cmp
pop
or
add
fsubrs
push
pusha
xchg
add
nop
enter
loopne
iret
mov
xchg
out
sbb
xor
mov
sti
or
scas
aam
cltd
stc
inc
in
jl
daa
pop
add
dec
stos
lods
lcall
pop
test
ss
adc
loope
aas
sub
stc
movsl
adc
mov
pop
rorl
adc
inc
add
shlb
outsl
push
into
scas
sub
or
jmp
clc
jnp
jbe
dec
ljmp
orb
jge
cmp
sarb
pop
cmc
or
adc
sbb
adc
imull
pop
mov
scas
fcmovb
adc
mov
lods
sub
dec
fnstenv
add
in
jno
out
add
mov
dec
cmp
std
ja
jmp
sub
add
push
sbb
push
jmp
icebp
push
jmp
and
push
jmp
add
mov
push
test
cmp
cmp
xor
sti
jmp
psadbw
iret
pop
push
and
sub
dec
ds
and
aad
repnz
pop
cmp
mov
rol
ret
sbb
mov
or
fs
pushf
lcall
loop
mov
popf
in
movsl
mov
cmp
js
lret
popf
xchg
jns
fs
ss
fldl
movsl
jno
imul
lcall
mov
cmpsl
cmp
aas
and
outsb
stos
pop
cmp
cmpb
dec
or
pop
leave
adc
ret
test
mov
shr
or
and
enter
add
bound
aam
and
xor
addr16
mov
mov
xchg
push
call
ficomps
outsl
cmp
fsts
mov
idiv
loope
cs
jb
push
popa
enter
movsb
call
push
fs
icebp
adc
sub
or
xchg
mov
out
fbstp
adc
sub
insb
ljmp
jae
adc
bnd
in
cld
xchg
movsl
fldl
mov
jp
pop
mov
dec
jmp
mov
pop
mov
ja
inc
popf
xchg
jb
imul
mov
sub
xor
iret
add
fmuls
or
inc
ss
sbb
jmp
mov
adc
in
icebp
sub
push
test
int
popf
cmp
mov
add
test
fs
nop
jge
lea
sbb
out
jne
pop
lret
adc
jg
das
xchg
adc
fsubs
aas
into
and
loop
test
push
or
aas
bound
add
sbb
xchg
icebp
inc
or
jae
xor
xchg
addb
in
out
or
bound
es
jnp
pusha
mov
xor
sbb
jg
cltd
inc
pop
std
fnstcw
rol
data16
nop
xchg
inc
in
sub
jo
ret
jl
dec
mov
addr16
and
xor
mov
pop
test
push
pop
int
add
sbb
and
lret
xor
dec
push
mov
xchg
sub
mov
ds
or
pop
adc
iret
dec
cld
add
mov
shr
or
ja
pop
jmp
rolb
call
push
shrl
hlt
dec
imul
aad
ficompl
push
fbld
in
sub
js
dec
aad
nop
push
pop
push
pop
sbb
sub
out
sub
sub
ljmp
addb
mov
jae
inc
leave
adc
inc
adc
addl
dec
pop
in
mov
incb
and
mov
daa
push
lret
sub
icebp
push
inc
push
movsb
and
xor
push
sbbb
add
mov
jo
pop
xchg
mov
adc
xor
mov
adc
aam
repz
mov
mov
mov
add
sbb
les
mov
mov
sbb
add
and
pop
or
cmp
pop
test
flds
loope
inc
in
dec
stos
or
out
rorl
xchg
lcall
hlt
mov
sbb
push
adc
jnp
cwtl
push
loop
adc
arpl
in
shlb
adc
mov
imul
inc
pop
enter
loopne
mov
mov
push
pop
mov
je
mov
lea
pusha
rorb
and
add
dec
sub
jle
inc
add
dec
ds
adc
insb
pop
loopne
sbb
jmp
jmp
push
xor
inc
sub
and
jmp
test
fsubrs
push
inc
cmp
or
sbb
outsl
and
mov
push
lahf
js
pop
ljmp
and
jne
inc
or
push
mov
adc
push
inc
imul
mov
test
stc
pusha
push
and
dec
push
stc
scas
subb
push
cmp
rcrl
jecxz
mov
dec
add
inc
fiadds
adc
and
add
mov
movsb
inc
stos
dec
jnp
rolb
or
mov
dec
cli
das
aas
jno
pop
pop
loopne
xor
clc
push
push
push
leave
and
jge
cmp
icebp
insb
add
pop
iret
and
je
orb
xchg
add
popa
or
dec
js
dec
pop
repnz
les
inc
loopne
shlb
adc
and
rcrl
push
mov
jbe
add
fmuls
push
xor
inc
shl
icebp
sarl
dec
bound
sub
daa
jle
pushf
pop
outsl
inc
xlat
xchg
cmc
add
scas
scas
cmpsl
push
inc
push
and
sub
int
es
and
cmc
and
inc
aam
mov
sbb
fcmovb
jmp
addr16
mov
sarl
lods
scas
test
sub
test
jmp
rorb
sub
cli
xlat
mov
imul
mov
subb
outsb
xchg
enter
test
jo
out
jmp
mov
das
flds
inc
shll
add
mov
repz
test
fisttps
jle
je
inc
jge
dec
clc
or
jge
mov
mov
in
fs
shl
mov
sub
inc
sbb
push
jmp
fstpl
aas
inc
pop
push
or
or
arpl
push
loop
daa
dec
rorl
scas
sub
jmp
imul
jge
jne
dec
add
test
iret
adc
adc
dec
add
push
into
mov
movsb
addr16
inc
jle
or
adc
sar
out
or
out
push
lret
das
pop
adc
mov
or
dec
sub
xor
push
push
and
adc
sbb
or
inc
add
jo
mov
js
lahf
shll
mov
xor
or
xchg
out
xchg
inc
mov
sub
daa
xchg
lahf
dec
cmpsb
pop
pop
jbe
adc
sahf
mov
imul
mov
sub
into
mov
ljmp
and
mov
sbb
pop
testb
loopne
add
icebp
insb
ljmp
loopne
cmp
cmp
pop
outsl
adc
test
inc
out
aas
or
and
pop
stos
push
inc
fistl
ja
gs
add
roll
cmp
js
jge,pt
loope
or
pop
add
xor
cwtl
in
mov
and
sub
push
shl
and
std
or
mov
pop
inc
sti
push
fdivl
cmp
test
mov
mov
push
push
jp
icebp
or
add
inc
addl
inc
sub
xor
xchg
cmpxchg
into
push
pop
jg
rorb
ret
inc
jmp
pop
push
jl
cmp
ds
pop
push
mov
adc
xchg
or
sub
pop
aad
prefetch
push
pop
adc
jmp
frstor
xor
clc
jno
jmp
push
add
inc
sbbl
mov
andl
mov
lods
or
add
mov
roll
bound
rcrl
roll
rcrl
loope
outsl
add
add
jb
clc
arpl
xchg
addl
fiadds
push
mov
push
aaa
lret
in
pop
cli
test
mov
les
in
test
js
add
push
push
push
cs
neg
dec
cli
roll
stc
sub
add
lds
jnp
mov
dec
gs
pop
push
daa
inc
adc
pop
popf
xchg
and
hlt
add
or
rcl
scas
xor
lret
push
stc
xchg
pop
adc
sbb
mov
xchg
push
fisubl
mov
push
popa
stc
sub
pop
mov
pop
jge
dec
dec
sti
mov
call
xor
jmp
inc
inc
cwtl
dec
mov
cmpl
mov
push
push
push
orb
jp
pop
stc
cmp
add
sbb
test
mov
inc
sub
push
mov
lret
mov
and
outsl
add
adc
shlb
std
sub
add
jge
les
xchg
or
lds
jmp
mov
lods
xchg
xorl
adc
mov
das
jmp
jg
ja
test
call
inc
mov
loope
and
jo
mov
decl
pop
fnsave
in
scas
mov
gs
rclb
inc
mov
push
lods
repz
fcompl
adc
push
insb
inc
push
scas
lahf
and
mov
jnp
popa
or
pop
cmpxchg
jmp
cmp
gs
adc
pop
sub
add
cmp
dec
push
pop
pop
loop
aam
sub
mov
add
jae
adc
movsb
fdivl
call
fucomi
inc
jg
jno
xor
mov
ss
adcl
inc
add
cmpsl
sub
bound
ja
into
fs
out
iret
dec
in
mov
les
and
mov
cmp
xor
es
add
dec
imul
repnz
subb
fistps
inc
fstl
xor
jmp
inc
decl
mov
pop
mov
or
pushf
xor
and
mov
jae
loopne
fcoms
cmpsl
adc
imul
mov
and
sub
jb
mov
mov
add
daa
imul
or
mov
jmp
in
cld
shll
pop
sub
fcmove
cmpsb
or
xchg
addr16
cld
scas
loope
lds
jns
push
cltd
inc
add
clc
and
xor
jmp
pop
jle
leave
add
sub
push
jge
mov
push
hlt
dec
sub
out
add
mov
inc
arpl
es
or
jo
xor
popf
or
mov
stos
pop
sbb
or
mov
sub
ljmp
insb
add
jns
add
addl
outsb
pop
data16
sbb
xor
adc
mov
add
mov
cmp
popf
mov
jne
jmp
popa
jmp
fs
or
imul
cmp
jbe
lods
test
xlat
push
add
pop
mov
outsl
call
add
sbb
push
pop
jbe
push
add
leave
pop
imul
shrl
shll
pop
push
push
or
sub
popa
jnp
push
jmp
enter
dec
inc
xchg
mov
pop
jl
test
push
mov
fiadds
jbe
dec
in
cwtl
lahf
jp
mov
mov
negl
cld
adcl
jle
push
cmp
and
dec
stc
pop
and
add
push
dec
movsl
inc
or
stos
cmp
data16
cmp
pop
icebp
daa
ja
mov
fnstsw
push
pop
outsl
and
dec
cmp
xor
ret
mov
stos
add
sub
add
aaa
push
loopne
out
sub
xchg
lods
testb
add
pusha
cmp
push
cmp
mov
rclb
and
inc
adcb
pop
sub
sbb
cmp
jge
jg
dec
dec
outsl
nop
xor
inc
mov
insb
fwait
cmp
add
or
and
pop
subb
cmc
and
dec
add
add
loop
push
ljmp
pop
lods
std
mov
decb
insl
fistl
test
or
inc
inc
in
sub
mov
cmp
and
xor
jmp
sub
pop
fisttpl
add
xor
sbb
push
pop
std
pusha
in
pop
sbb
das
sub
ret
sar
push
sbb
rcll
jge
test
inc
stos
sbb
pop
and
push
dec
in
push
insl
test
icebp
jmp
sub
ja
mov
push
rcll
sub
loop
xchg
js
or
cli
arpl
pop
shr
push
cli
cmp
cmp
push
movsl
xor
leave
movsl
call
std
rorb
jl
mov
xchg
sbb
add
mov
pop
add
mov
pop
xchg
jle
movlhps
aad
scas
push
add
or
call
fsubrp
sub
fildll
aaa
dec
sbb
into
sbb
imul
shlb
xchg
add
sub
push
fstpl
push
lock
mov
sahf
add
and
or
and
les
incb
or
cmp
into
jle
sti
hlt
and
push
fldcw
data16
sbb
add
dec
lahf
loopne
dec
fmuls
pop
cmp
out
or
inc
aad
sbb
add
jb
loopne
push
jle
or
push
jmp
mov
rcrb
sbb
push
dec
add
sub
ss
jno
pop
and
out
loope
sbb
mov
mov
sbb
inc
push
ret
daa
pop
push
lods
xor
mov
push
mov
lret
pop
orb
sbb
xchg
fcompl
inc
push
jl
das
adc
jmp
dec
jmp
cmp
dec
popa
stc
cmc
jle
negl
jg
and
xor
mov
cmc
lds
pop
sbbl
add
adc
and
ljmp
sar
lods
xor
subb
or
inc
or
dec
inc
ret
test
loope
aas
mov
dec
pop
nop
clc
rcl
jg
lret
push
xor
pop
pusha
pop
hlt
mov
sbb
inc
jno
mov
das
push
cmp
pop
inc
and
dec
jle
adc
nop
push
push
leave
mov
das
out
inc
push
dec
icebp
sbbl
test
add
ljmp
dec
gs
push
and
dec
cld
xorb
outsl
shl
add
je
or
mov
roll
pop
gs
push
aas
shr
add
std
imul
jno
jl
daa
add
leave
movsb
xor
cld
je
daa
or
xor
mov
sub
sbb
or
jb
or
nop
mov
inc
add
shll
inc
push
sbbb
imul
pop
push
test
push
mov
addr16
shrl
andl
or
add
dec
adc
mov
sbb
dec
lods
mov
xchg
mov
lret
ja
xchg
scas
xchg
fsubrs
sub
addb
cmp
aam
jbe
and
dec
pop
shlb
rol
push
pop
add
jmp
dec
jbe
dec
jg
orb
test
push
pop
fwait
mov
imul
cmp
add
jg
mov
jmp
jmp
fstps
add
ljmp
cld
inc
lahf
shlb
add
sbb
in
sub
jae
xchg
push
push
dec
and
push
aam
test
sbb
stc
jle
aas
filds
sub
addr16
pop
jmp
inc
lahf
lods
lods
leave
sar
outsl
adc
popf
push
xor
xor
push
sub
sub
jns
dec
dec
movl
test
cmp
cs
test
pop
out
cmp
movsb
jbe
ret
sbb
pop
mov
les
xchg
div
sbbl
nop
dec
sbb
popf
push
jae
leave
jmp
mov
insl
pop
repnz
aad
cs
mov
mov
enter
pop
xor
jne
push
ljmp
lret
or
lock
xchg
push
xchg
push
gs
mov
imul
mov
and
xor
or
pop
inc
repnz
fdivrl
adc
or
lahf
jge
xchg
inc
adcl
shl
hlt
leave
jge
ljmp
xchg
ja
cld
subl
pop
dec
mov
adc
arpl
add
mov
wbinvd
das
mov
leave
dec
pusha
pop
lods
popf
fstl
or
imul
sub
stc
adc
test
scas
inc
aas
or
pop
es
add
jmp
movsl
cli
sub
add
cmp
adc
jo
pop
pop
mov
fldl
mov
inc
jo
popf
fcmovnb
daa
pop
mov
and
jl
sub
repnz
jne
sbb
add
jge
cmp
and
dec
pop
jmp
inc
inc
ret
lock
scas
loopne
jmp
mov
mov
mov
sti
jg
je
push
in
outsl
lods
mov
sbb
rclb
rcrb
mov
sti
or
dec
or
adc
adc
sbb
xor
jmp
rcll
ret
or
inc
inc
and
jo
pop
add
in
adc
aam
jno
movsl
cmp
mov
push
ja
cld
test
rcrl
and
mov
mov
pop
xor
das
out
gs
out
ljmp
popa
or
mov
insl
cmp
syscall
xchg
out
adc
mov
iret
mov
add
ds
mov
dec
xor
filds
ret
in
pusha
mov
js
out
insl
adc
div
adc
ret
ljmp
clc
daa
inc
push
in
stos
and
mov
out
ret
sub
dec
cli
lret
inc
rolb
mov
jle
add
dec
jp
mov
push
inc
das
xchg
jbe
push
or
dec
sub
xor
movsb
sub
pop
int
xor
bound
xor
push
lcall
sbb
orb
or
std
dec
pop
jle
push
fiadds
pop
arpl
fldenv
xchg
lahf
lock
push
cmp
push
ror
ds
je
mov
cmp
push
cmp
incb
jb
jnp
adc
mov
test
mov
sub
jo
xor
ljmp
mov
testb
in
hlt
cmp
sbb
jecxz
aas
ja
jecxz
das
add
xor
aad
add
sahf
push
sub
movsl
add
cmp
or
jno
pusha
fists
add
mov
or
and
mov
add
sub
shl
pop
push
jo
insb
sbb
inc
bound
lock
add
es
outsb
inc
xchg
mov
mov
mov
out
jmp
sub
xor
or
mov
ljmp
push
sbb
out
push
repnz
sbb
push
aaa
mov
jmp
xchg
in
xchg
hlt
stos
std
repnz
or
pop
stos
push
das
pop
pop
mov
mov
mov
int3
sbb
dec
mov
data16
dec
jp
xlat
add
add
shrb
stc
dec
add
in
or
out
push
subl
xlat
les
in
shll
adc
fcmovb
and
cmp
xor
testl
andb
leave
jmp
iret
testb
push
mov
push
pmullw
rcrl
fsubs
adc
and
in
or
jns
add
jge
std
test
movsb
add
add
or
pop
push
fdivr
mov
out
iret
xor
sbb
hlt
es
loope
frndint
les
out
inc
jmp
out
sub
pop
popf
cli
xchg
mov
jecxz
test
sbb
push
mov
dec
and
push
adcb
cmpsb
es
sub
jo
aaa
mov
mov
mov
enter
or
imulb
mov
shl
daa
jmp
nop
cli
fmull
lods
loop
add
cmp
rcrl
fdivrl
aam
add
int3
sub
fstpl
insb
int
imul
in
jo
add
jge
jmp
ljmp
dec
loop
adc
or
fninit
add
mov
testb
jo
sbb
inc
sub
cmp
xchg
stc
mov
add
out
sub
pop
add
fdivrl
ds
loope
add
pop
sub
arpl
pop
jmp
repnz
xchg
cs
movsl
pop
sbb
movl
or
popa
popf
xor
inc
and
and
test
es
inc
in
xor
sub
mov
xor
push
push
insl
rclb
mov
jo
adc
notb
stos
lret
and
push
scas
add
cmpsb
jne
shll
aam
adc
xor
push
bound
add
stc
push
das
lret
loop
pop
adc
push
jnp
sti
jge
add
notl
sub
and
push
adc
or
sti
ret
es
mov
push
adc
icebp
hlt
outsl
shrb
sbb
fadd
jo
gs
imul
push
add
sub
std
jo
adc
sbb
rcrb
lahf
lock
dec
imul
dec
or
mov
cld
sbb
add
adc
call
and
ret
jmp
fistpll
pop
adc
pop
adc
jmp
pushf
call
mov
cli
sub
mov
xchg
jne
pushf
push
add
jg
adc
sub
jmp
clc
sub
add
pop
ret
add
adc
pop
sub
cli
push
and
cld
cltd
dec
push
mov
cmp
ret
cmp
ret
and
dec
mov
or
dec
jbe
cmp
das
sbb
sbb
ret
imul
sub
sbb
mov
fidivrs
fistps
into
xchg
jmp
xor
ret
push
dec
cli
mov
stos
pop
mov
sub
inc
andb
jbe
or
add
imull
mov
cs
aaa
adc
je
shrb
icebp
push
ja
inc
imul
inc
shl
std
xchg
pop
add
pusha
ficompl
sarl
sbb
push
das
add
repz
mov
xor
or
push
xor
and
mov
xlat
loope
in
jns
add
mov
mov
or
xor
dec
rorl
leave
xor
mov
cmp
pop
aas
mov
fcmovb
xor
shll
or
add
inc
fwait
nop
lods
pop
push
lods
jo
jmp
daa
ficompl
sbb
insl
aad
jmp
mov
cmpsl
rcrb
xchg
or
jmp
sub
mov
jmp
or
fisttpll
js
cmp
cli
imul
les
movb
ficompl
push
dec
adc
mov
inc
ja
pushf
push
inc
out
push
jmp
mov
jmp
mov
dec
and
daa
or
and
neg
loopne
pop
dec
idiv
mov
sbb
add
addr16
les
xor
sub
mov
mov
sar
and
mov
mov
ljmp
ja
pop
mov
jne
mov
add
sbb
js
ret
or
iret
push
std
cmp
jae
pop
and
mov
fcoms
popf
js
loopne
cltd
add
lret
add
dec
pusha
dec
jl
and
in
ret
shrl
xchg
pop
std
enter
cli
pushf
mov
das
xchg
fldcw
pushl
rorb
push
addr16
rorl
or
lahf
cld
mov
ds
push
jge
mov
dec
add
pop
xor
jmp
mov
push
mov
mov
scas
inc
popa
jmp
lret
pop
loop
dec
repnz
int3
push
push
pop
shll
cld
call
jecxz
negl
adc
loopne
xorl
fadds
push
jge,pn
cmpsb
adc
push
adc
pop
out
xlat
outsl
mov
dec
dec
inc
inc
inc
push
outsl
dec
mov
xchg
aas
inc
rorl
pop
lods
or
pop
mov
sub
shlb
add
adc
fildll
out
adc
sbb
add
ja
notl
ljmp
adc
xchg
lds
fisttpll
pop
jo
push
inc
xchg
call
and
push
push
mov
aam
pop
scas
imul
jmp
push
cmp
inc
rcrb
push
push
rclb
stos
jne
out
mov
imul
dec
aas
js
aas
dec
push
adc
repz
andb
or
mov
aaa
imulb
sti
jnp
add
jmp
jo
cld
xor
pop
daa
mov
stos
and
xchg
jnp
push
xor
or
add
sub
pop
or
dec
xor
add
pop
test
sarl
movsb
icebp
push
clc
outsb
dec
pop
scas
add
or
xchg
mull
js
add
fdivs
push
movzbl
lock
in
pop
nop
imul
push
fcomip
pop
mov
and
inc
mov
or
cltd
pop
or
and
sub
push
xor
loopne
subb
clc
daa
shr
and
cli
push
mov
iret
sbb
std
in
movsl
mov
rorb
jns
arpl
jno
out
push
add
adc
sub
addl
lcall
insl
js
rclb
call
mov
and
js
sub
outsb
cltd
es
out
push
xchg
std
add
add
pop
xor
inc
lea
idivl
push
inc
or
add
stos
int3
dec
cmpsl
sub
ds
pop
arpl
adcb
push
cmpb
add
jle
cli
cltd
mov
repnz
faddl
and
std
pop
test
loopne
aaa
push
aas
xchg
sbb
and
push
arpl
mov
test
mov
int3
sti
or
or
dec
or
add
in
cmc
xchg
addb
not
jg
test
mov
mov
outsb
jp
push
mov
pusha
inc
sub
pop
xor
ret
clc
jge
jns
pop
push
mov
inc
inc
pop
sub
aam
sub
insl
cs
xchg
inc
fimuls
int3
cmp
mov
adc
incl
ret
pop
push
pushf
add
sub
or
jne
mov
andb
mov
dec
aad
inc
or
dec
cmp
stc
pop
shrb
adc
pop
or
shll
pop
dec
pop
push
fisttpll
icebp
xchg
and
sub
dec
mov
movsl
jbe
pop
jmp
mov
pmaxub
fs
dec
jo
mov
aad
push
jno
adc
xor
pop
in
imul
loopne
push
clc
sub
mov
or
adc
pop
adc
enter
daa
sub
cwtl
sub
cmp
hlt
pop
cwtl
idivl
movsl
xor
pop
add
adc
cwtl
cmp
sub
stos
ret
lods
ljmp
ljmp
jnp
cltd
push
mov
inc
in
inc
movsl
lahf
hlt
adc
pop
lods
mov
jp
dec
cld
fstp
leave
mov
pop
push
or
jne
add
dec
jns
pop
test
add
loop
inc
loopne
add
mov
and
pop
cmpsl
xchg
pop
cli
sub
pop
decl
arpl
in
fxch
loopne
lahf
push
filds
jg
xchg
imulb
pop
sub
not
and
jmp
xor
add
inc
ljmp
cs
cli
pop
jg
cltd
bound
and
neg
repnz
cmp
outsl
scas
imul
fistl
mov
mov
or
mov
mov
loopne
dec
je
cwtl
loop
lds
xchg
or
jmp
pop
mov
push
ds
inc
xor
pop
pop
pop
into
jb
insl
es
mull
add
mov
out
test
lds
ja
adc
pop
xchg
insb
xorl
mov
mov
pop
add
jmp
bound
mov
icebp
mov
and
inc
in
and
dec
mov
mov
cmp
push
add
mov
add
ljmp
cmpsl
pusha
xlat
out
fnstenv
push
cmp
pop
arpl
mov
add
xchg
or
fsts
push
and
testb
in
inc
stc
inc
sub
inc
dec
mov
lods
ret
movsb
dec
push
xlat
push
cld
mov
push
and
add
not
call
nop
add
lods
mov
mov
push
push
or
dec
ds
adcb
js
inc
mov
icebp
push
out
cmp
dec
xlat
xchg
loop
leave
xchg
call
subb
aam
fistpll
add
test
jbe
dec
push
out
jecxz
subb
push
aam
and
push
mov
sub
ret
loop
gs
jl
push
mov
iret
xchg
aam
mov
cmpsl
cmp
das
pop
sbb
sbb
push
push
pop
mov
shr
inc
push
or
mov
and
sti
insl
or
adc
push
lahf
mov
lock
add
cltd
test
out
sub
out
and
push
adc
and
int3
into
shrl
leave
or
repnz
cli
xchg
decb
mov
mov
pop
jmp
pop
ja
or
and
dec
inc
adc
dec
and
xor
sbb
ret
add
pusha
insl
pop
xor
mov
in
jg
lcall
mov
in
loopne
dec
dec
repz
hlt
sti
leave
mov
push
js
mov
mov
adc
cmc
les
jmp
dec
int
pop
xchg
in
inc
push
jg
mov
lock
mov
test
in
cmp
sub
add
aas
jo
inc
xor
and
adc
in
xchg
pop
sbb
gs
les
sbb
sub
sub
or
pop
leave
jecxz
loopne
pop
mov
repnz
insb
inc
add
and
mov
in
pop
ret
aaa
push
rorb
push
or
or
adc
jmp
dec
enter
jmp
lret
pushf
sub
pop
jmp
lahf
test
adc
mov
test
inc
cwtl
and
gs
xchg
xor
sub
hlt
in
stc
daa
enter
out
pop
sbbl
jne
lahf
lock
mov
sub
or
adc
push
adc
sbb
jbe
add
xlat
add
xchg
out
add
push
nop
in
sub
fcmovne
mov
jbe
add
xchg
push
xchg
mov
aaa
xor
add
inc
shrl
pop
dec
pop
mov
and
sahf
xchg
inc
jge
mov
pop
adc
push
push
hlt
xor
jae
imul
dec
cmpsl
rcrb
sub
mov
inc
pop
jmp
test
repnz
pop
mov
jg
dec
jle
jecxz
js
jnp
inc
push
mov
aaa
iret
int
fldl
and
mov
jp
push
stos
mov
jmp
incl
add
decl
inc
xorb
inc
out
pop
movsw
dec
scas
sub
or
cltd
sbb
adc
sub
out
jmp
mov
push
push
push
dec
mov
aam
inc
push
xchg
mov
pop
mov
adc
scas
js
in
ja
push
add
push
pop
aas
in
cli
repnz
int3
mov
mov
inc
pop
mov
pop
adc
pop
mov
mov
sbb
in
push
jge
jmp
pop
sahf
xor
out
dec
or
add
daa
push
rorb
jg
adc
and
pop
fs
push
icebp
push
xchg
cld
mov
popa
leave
add
inc
mov
push
and
aas
jo
ss
dec
or
adc
mov
jp
and
sub
push
pusha
bswap
mov
pop
mov
sbb
test
pop
das
pop
js
push
mov
lret
in
dec
inc
jmp
sbb
add
jno
and
mov
mov
imulb
divb
in
out
push
mov
and
pop
pop
add
into
sbb
push
stc
pop
inc
ret
loop
inc
repz
sbb
fstpt
adcb
aad
or
cmp
xor
adc
or
inc
and
jle
je
mov
push
xchg
bound
push
pop
push
imul
or
incb
repnz
mov
inc
lds
inc
mov
cmpb
or
pop
xchg
scas
pushf
jns
jo
xchg
add
rcll
push
xchg
orl
sarl
jns
mov
push
enter
mov
test
and
sti
mov
xchg
and
sub
in
jns
add
push
pop
test
mov
xchg
ret
movsl
pop
testl
xor
push
mov
push
mov
push
inc
lret
or
repz
imul
and
leave
test
fmull
lods
rorb
in
ja
xorb
xor
jl
pop
lahf
loopne
mov
mov
clc
pop
or
ftst
daa
call
cmp
xchg
or
mov
pop
pop
outsl
pop
sub
sub
adc
dec
adc
mov
dec
repnz
cmpl
adc
jno
add
in
or
aas
xchg
in
movsl
mov
enter
dec
gs
pop
les
sbb
xchg
test
scas
jecxz
leave
mov
rcll
shr
ror
inc
sbb
fldl
lods
sub
sub
cli
push
lcall
testl
lds
addl
mov
or
into
and
push
lock
push
pop
adc
jl
cmpsl
cs
adc
inc
stos
mov
pop
mov
jb
push
sbb
mov
sbb
xchg
jo
fmuls
cmc
imul
insb
test
subb
inc
cld
inc
hlt
mov
repz
cmp
push
pusha
push
test
scas
adc
or
in
fcompl
fsubrs
ret
adc
add
lret
lods
inc
add
clc
call
repnz
das
ljmp
decl
push
mov
and
push
pop
sub
sub
push
pop
daa
test
ja
sub
jge
andb
adc
sub
push
xor
sub
stos
mov
pop
add
sub
addl
lcall
sbb
testl
daa
dec
sub
cmc
or
dec
pusha
add
push
inc
xchg
fldenv
fisubl
add
or
add
ja
jb
push
push
inc
push
pop
sbb
fs
mov
mov
stos
sub
jns
cwtl
push
pushf
add
std
xchg
inc
dec
or
stos
cmp
shrl
add
cmp
out
sar
testl
dec
pop
pop
push
mov
cmp
lods
or
inc
je
jge
movl
lahf
je
addb
sbb
jbe
jns
ret
mov
inc
test
push
mov
xor
mov
cld
sub
cli
push
add
jmp
pushf
sbb
scas
jbe
push
and
lret
push
decb
adc
pop
cli
jns
aas
xor
push
push
lea
neg
shl
sub
mov
mov
cmp
std
adc
and
popf
sub
aas
mov
pop
sub
sub
jmp
pop
sub
outsl
pop
pop
sti
dec
mov
fs
rorl
loop
pop
sahf
dec
mov
pop
pop
icebp
push
cmpsl
jo
mov
daa
mov
dec
pop
out
rcll
jnp
scas
sub
cltd
add
fstpt
and
sub
cmp
test
lret
cwtl
popa
testb
and
jmp
stos
cmp
das
icebp
adc
arpl
and
mov
and
shl
mov
clc
insb
rcrb
and
push
dec
mov
push
cmp
jns
mov
aaa
test
adc
sbb
cld
ss
dec
pop
bound
les
xlat
test
cltd
sub
icebp
or
mov
pop
scas
je
sti
repz
ret
xor
push
cmp
jg
jecxz
adc
sahf
fstpt
repz
repz
inc
push
jmp
pusha
or
add
adc
sub
in
pop
not
dec
push
dec
adc
mov
mov
clc
xchg
shlb
call
xchg
pop
daa
int
loopne
xchg
pushf
movsl
aas
push
imul
test
pop
pop
push
or
icebp
pop
jne
jg
mov
add
pop
rclb
and
xor
jbe
add
pop
je
add
into
cmp
push
orb
pop
and
stc
imul
cmc
jmp
adc
mov
psubq
sbb
push
lret
xchg
jmp
adc
les
test
ret
cmp
mov
loope
loope
push
sbb
pop
addl
inc
pop
mov
mov
jmp
jbe
addr16
push
repnz
test
and
jnp
cli
mov
jne
mov
shlb
add
adc
lahf
push
pop
aas
lods
xchg
cmpb
sub
pop
jp
jbe
popf
jae
adc
dec
cmp
push
add
mov
lcall
je
pop
xor
xor
sub
daa
call
aad
inc
mov
ss
and
push
out
push
cwtl
leave
aad
mov
push
mov
pop
pushf
jp,pn
dec
fdiv
das
inc
enter
inc
outsl
pushl
out
pop
add
jecxz
stos
jne
push
test
push
daa
aam
daa
add
cmpsl
pop
popf
push
cltd
push
cmp
or
inc
mov
loope
lods
lcall
popa
shll
inc
push
pop
repnz
ret
sub
add
pusha
jmp
dec
aad
add
pop
pushf
aam
negb
js
out
mov
push
sbb
rorb
add
aaa
pop
xor
mov
movsl
lock
push
mov
adc
cmp
sub
xchg
fisubl
sti
and
mov
repz
jmp
mov
add
and
jns
push
xchg
lods
adc
pop
jmp
cmp
cwtl
cmp
dec
adc
or
push
pushf
and
sub
add
mov
jmp
mov
push
push
jno
movsl
dec
jb
or
mov
inc
mov
or
sti
mov
in
cmp
jnp
mov
jbe
push
jmp
push
and
jno
push
push
push
cmp
mov
das
mov
jl
pop
sub
rol
pop
iret
sahf
inc
add
cmp
int
sub
lock
out
mov
and
stc
or
data16
push
dec
pop
adc
test
sbb
or
adc
test
lods
fiaddl
fiaddl
sbb
dec
inc
imul
adc
stos
add
cs
jb
jne
test
jmp
sub
adc
into
push
mov
pop
jmp
dec
imul
repnz
ss
mov
std
mov
pop
fsubrl
or
clc
or
cld
pop
sbb
sahf
pop
or
sub
daa
xchg
dec
pop
enter
adc
das
and
lret
sarb
add
xor
jmp
or
add
push
lcall
xchg
add
andb
je
pop
vxorpd
stos
rol
aaa
jmp
jp
mov
ror
fbld
fs
addb
insl
add
imul
push
leave
adc
adc
gs
je
or
shlb
inc
lahf
popa
out
shl
pop
xor
hlt
mov
mov
push
out
mov
out
jae
sbb
push
inc
or
inc
fs
push
gs
mov
xchg
mov
pop
mov
and
lock
push
add
test
sub
adc
scas
cmp
jmp
in
lds
mov
ljmp
xchg
stos
sbb
das
xor
stos
bound
dec
pop
pop
rcl
xor
sub
xchg
sbb
ja
icebp
test
adc
enter
pop
les
cmpsb
push
das
inc
xor
mov
jmp
sahf
or
mov
dec
fucomip
and
jmp
mov
sbb
mov
and
mov
outsb
jp
pop
bound
popa
mov
mov
clc
sub
movl
sub
ret
or
pop
push
inc
cwtl
and
sub
nop
stos
loopne
add
out
fadd
loopne
push
mov
jns
mov
add
add
iret
in
cmp
sti
cmp
sub
mov
mov
mov
mov
vhaddps
in
or
pop
or
sub
and
lods
and
aam
lret
and
or
or
or
xor
outsb
aaa
aas
mov
aam
shrb
or
add
jmp
inc
xor
scas
das
daa
push
loope
add
add
add
dec
das
mov
movsl
jecxz
or
mov
adc
add
imul
inc
inc
add
sub
fidivs
outsb
mov
pusha
clc
push
xchg
mov
fninit
xor
dec
rep
fidivrs
out
mov
xlat
mov
scas
inc
mov
pop
out
or
imulb
bnd
lcall
ja
int
push
imul
sbb
in
xchg
pop
fnstenv
sbb
sub
add
cmp
enter
mov
sbb
and
cmp
cmp
push
dec
inc
cs
add
inc
leave
sbb
xchg
in
movsb
mov
js
cmpsl
adc
mov
loop
fidivl
jae
fadds
jmp
das
mov
test
lock
lea
loope
add
push
out
lret
xchg
mov
ds
push
xlat
sub
mov
xor
sbb
mov
add
mov
xor
jmp
xor
adc
out
push
gs
cmp
testl
cmpsl
inc
mov
dec
jmp
sub
pop
xchg
fstl
repz
data16
lret
lock
cmp
sub
dec
in
inc
out
inc
stos
popf
loope
dec
cltd
pop
cmp
jge
loop
idivb
inc
fsubrs
call
push
add
or
jge
mov
and
cli
bound
shrl
xchg
aam
mov
mov
push
adc
repnz
push
mov
jo
hlt
out
pop
das
pop
mov
and
push
jb
outsl
lret
fadd
xchg
hlt
push
fnsave
xlat
rcrb
jmp
idivl
imul
mov
mov
cmc
mov
inc
pop
jle
mov
pop
lods
or
pop
add
pop
add
sub
repz
negb
stc
jl
iret
gs
cmpsb
xchg
push
movsb
fwait
lahf
popa
lds
and
mov
and
scas
addr16
neg
xor
fcoms
imul
pop
out
push
mov
xlat
push
pop
cmp
xor
pop
push
aas
adcl
aad
sub
pusha
xor
bound
fs
test
pop
adc
add
ds
scas
fsubr
adc
test
jmp
mov
adc
or
or
add
add
addb
mov
pop
test
jge
pop
pushf
mov
in
adc
loop
scas
roll
mov
push
jb
loopne
pop
movsb
mov
fs
ftst
stos
sub
pop
mov
sub
mov
out
jae
dec
jnp
push
adc
lock
sub
ljmp
hlt
mov
shll
sahf
cmpsb
push
pop
in
out
adc
adc
or
jae
in
aam
dec
mov
das
cmp
sub
mov
addr16
fbld
adcb
les
jb
not
jb
cmp
lods
dec
sub
aas
xor
imul
add
loopne
sub
xlat
adc
push
negl
fwait
jae
fadds
rolb
ds
cmp
jl
and
jmp
sbb
ret
popa
pop
ds
inc
xchg
out
xchg
stos
lea
cs
push
pop
add
pop
dec
xor
jmp
mov
mov
mov
cld
sti
rclb
xor
jmp
das
cmc
mov
adc
ja
mov
inc
jl
cmp
or
sub
daa
add
dec
shr
push
aam
and
xor
or
mov
cmp
sub
sub
lcall
and
fcomip
test
and
popf
aam
cmpb
fildll
jg
sub
sbbl
add
jmp
xchg
or
insl
mov
or
clc
inc
mov
jne
xlat
loop
sub
push
push
in
shr
push
jle
xor
shrl
imul
cltd
jge
test
push
and
xor
stc
cmp
call
sub
xor
dec
lods
adc
cmp
jmp
sub
or
aam
ret
int3
or
mov
adc
inc
nop
jmp
dec
or
add
lahf
dec
sbb
dec
sbbb
mov
pushw
int3
ja
xchg
pushf
mov
decb
mov
in
loop
push
sbb
push
push
xor
jl
vcvttpd2dq
add
mov
mov
insb
pushf
mov
leave
dec
jno
loop
mov
xor
push
jle
cmp
or
push
adc
and
call
in
pop
jno
sbb
in
repz
lods
push
rol
aas
into
ss
cld
mov
rcl
add
pop
bound
aaa
popf
cmc
pop
sbb
data16
insb
or
stos
or
pop
push
loop
fnstenv
pop
cmp
out
mov
loopne
fs
jmp
int
cld
ret
add
scas
and
jns
mov
inc
je
push
imul
xor
or
subb
and
js
rorl
mov
lcall
add
inc
lock
or
dec
add
jmp
mov
outsb
or
push
ljmp
mov
push
aam
push
push
loopne
iret
sub
mov
push
adc
addl
int
fcmovu
enter
adc
xor
jno
dec
push
nop
or
lds
sbb
cmp
iret
xchg
cmpsb
sbb
subb
push
insb
sbb
xchg
or
lret
and
add
push
subb
inc
cs
xchg
jge
xchg
xchg
fs
add
add
jecxz
push
mov
xor
daa
push
in
push
cmp
mov
in
pop
or
test
pop
insb
fcoml
jb
jg
pop
jne
xchg
test
cmpsb
jp
jnp
dec
ficomps
add
sbb
daa
dec
filds
cmpsb
addl
adc
mov
fnstsw
inc
mov
dec
inc
shr
sarl
xchg
mov
pop
mov
in
lods
add
adc
inc
cmp
repnz
add
jge
sub
xchg
mov
jns
out
lock
and
mov
cmc
pushf
or
sbb
or
sahf
xchg
push
rclb
push
and
clc
mov
iret
mov
je
dec
pop
and
ds
fwait
adc
pop
xchg
out
sbb
loope
or
pop
es
sbb
sub
xor
adc
ljmp
sub
adc
xor
xchg
ret
push
out
fwait
imull
jmp
sub
or
jns
fnstsw
loop
lahf
xlat
mov
lds
js
xchg
lds
xchg
pusha
pop
imul
lret
loopne
and
jo
or
and
incl
mov
stos
mov
pop
call
dec
mov
cltd
mov
add
xchg
jge
dec
out
pop
jmp
nop
adc
push
loope
xchg
jle
movsl
jle
xchg
pop
xchg
testb
or
mov
dec
fcoms
add
jle
xor
add
mov
adc
shr
int3
not
push
rorl
cwtl
cld
sbb
dec
cmp
ret
jecxz
test
sub
sbb
fbld
into
cld
pop
dec
cmp
jne
jnp
jg
xor
andl
jge
mov
fnstcw
daa
testb
pushf
or
std
cmp
fildll
cmc
pop
jbe
out
cmp
insb
pop
xor
pushl
adc
ljmp
cmp
jmp
mov
int
pop
sub
ret
mov
push
cmp
stos
cld
hlt
jg
js
jo
jecxz
mov
jmp
sub
add
into
push
and
sbb
add
and
jecxz
stc
pop
scas
mov
xchg
xchg
sub
push
add
xchg
std
adc
je
push
ret
push
inc
inc
add
pop
xchg
call
fidivrl
aas
xor
stos
adc
mov
rorb
out
jg
rclb
hlt
xchg
std
sbb
mov
ret
push
in
xchg
and
sqrtps
push
xchg
mov
add
fadds
xor
cmp
outsl
popa
inc
sub
inc
lods
out
xchg
jl
jle
push
jl
jmp
sbb
neg
push
add
in
loop
cmp
cwtl
push
mov
push
xchg
das
cwtl
pop
push
rol
call
stos
add
inc
cli
xor
add
push
xchg
movsb
dec
adc
push
push
bound
std
add
dec
mov
ficoml
inc
pop
jg
hlt
push
out
daa
jne
stos
push
fcompl
testl
ja
subb
pop
mov
mov
test
fnstsw
dec
add
aas
shrb
daa
std
test
fcoms
jl
leave
testl
push
ds
mov
xchg
pop
cmp
inc
jmp
mov
adcb
shl
add
hlt
cmpsb
adc
icebp
js
popf
iret
xchg
adc
mov
repz
jmp
xchg
or
pop
lds
xor
repnz
xchg
sbb
add
mov
mov
popa
pop
lods
push
js
or
push
push
xchg
cmp
mov
lret
das
dec
out
mov
sbbb
leave
repnz
mov
call
dec
and
bound
push
pop
or
lods
popf
jno
mov
sub
xor
add
hlt
pop
mov
outsb
adc
lock
int3
add
inc
pusha
jnp
mov
add
enter
scas
and
mov
repnz
adc
mov
test
cmpsb
or
std
jecxz
loopne
arpl
mov
iret
test
out
mov
lret
jo
and
pop
xor
not
push
lds
shr
and
and
push
sub
outsb
or
ret
push
pop
sub
or
mov
mov
xchg
inc
clc
pop
dec
cli
insl
push
sub
inc
add
lods
dec
dec
decb
aaa
insb
cmp
cmp
lock
add
call
or
pop
pop
cmp
test
sbbb
add
xlat
inc
jle
sub
mov
shr
popf
shr
cltd
add
inc
or
pop
adc
rorl
pop
pop
pop
pop
mov
add
in
cli
into
fisubrl
push
bound
repz
push
jp
lcall
pop
add
add
mov
sub
adc
mov
add
data16
jle
insb
fsubp
sbb
sbb
cmc
dec
pop
jp
dec
lock
xor
pop
push
in
jle
das
cmp
ja
jge
cmp
dec
sbb
mov
cld
cld
add
negl
cmp
ss
mov
jmp
lcall
fcoms
sbb
data16
dec
popf
mov
lahf
je
in
lahf
jbe
lcall
push
dec
ffreep
sbb
lcall
mov
adc
cwtl
push
lods
pop
or
ds
inc
icebp
clc
fstp
sti
push
in
jne
in
lret
icebp
mov
lods
addl
loope
add
cwtl
sub
fcmovu
push
dec
xor
dec
fldl
mov
or
mov
jb
cmpsl
pop
repz
mov
movsl
loop
loop
jg
xchg
mov
mov
mov
clc
mov
shl
mov
jmp
push
flds
pop
flds
pop
or
sub
jle
loopne
leave
ja
aaa
jnp
add
shlb
inc
sub
mov
data16
and
loopne
popf
sub
fdivrs
xor
repnz
jecxz
stos
and
mov
mov
pop
push
sahf
clc
inc
xchg
addl
and
push
mov
cli
add
jmp
test
mov
inc
lods
movsl
sbb
and
pop
or
xlat
cmp
rcrl
mov
cmpsl
sbb
pop
rcrb
pop
push
leave
sub
pop
lock
rcrb
cli
jno
pop
push
push
xlat
push
inc
gs
lods
dec
or
or
xchg
fcoml
pop
cli
and
mov
xchg
sbb
outsb
fsub
push
clc
sub
mov
ja
or
xlat
adc
jp
rorb
mov
fcoml
out
add
dec
fcoms
mov
mov
vpsubusb
pop
push
lcall
ljmp
inc
nop
std
and
mov
loope
imul
out
push
xlat
push
xor
imul
rcrl
adc
xor
adc
dec
dec
stos
into
xchg
dec
leave
xchg
mov
pop
nop
movsb
xlat
dec
xchg
sbb
xchg
shll
push
movsb
ret
ljmpw
hlt
jg
pop
sub
xor
ja
push
jnp
inc
int3
inc
jg
ror
xchg
add
outsl
adc
mov
pop
mov
into
sar
add
int
jbe
aad
std
lahf
shll
xchg
test
dec
pop
pop
mov
adc
divl
mov
sbb
inc
push
or
lea
mov
insl
shrb
dec
icebp
jbe
in
pusha
xor
sbb
int
inc
and
ds
ss
mov
insb
loope
and
add
xor
xor
jo
inc
xor
lcall
es
mov
sbb
cwtl
xchg
test
push
aad
and
jmp
leave
xlat
rorl
jmp
es
arpl
add
mov
jecxz
hlt
add
pop
addb
lds
repnz
ret
xchg
repz
jmp
testb
adc
jle
or
lahf
insl
jmp
adc
dec
add
jmp
neg
sub
sbb
mov
or
push
in
dec
hlt
add
mov
add
sub
mov
cmpb
xor
es
in
inc
rolb
pop
pop
add
pusha
sbb
jns
push
xchg
shll
sbb
or
aas
rep
movsb
inc
dec
dec
cltd
jmp
or
movsl
push
pop
jmp
cld
jo
mov
stc
ds
movsb
stos
inc
hlt
or
pop
xchg
pop
mov
pop
dec
jbe
cld
sbb
int
and
dec
cmp
popf
in
ss
pop
mov
adc
loopne
mov
scas
adc
repz
dec
mov
jmp
dec
dec
cs
icebp
sbb
je
push
stc
or
movsl
or
add
mov
pop
outsb
push
jmp
push
jbe
pop
mov
adc
push
lods
and
sub
push
adc
gs
adc
decb
jb
orb
push
shrb
movsb
pop
negl
std
jne
icebp
mov
cmp
dec
pop
cmc
mov
cld
push
ror
add
lods
xchg
nop
mov
or
xor
jbe
jmp
shr
mov
stos
lret
add
scas
test
popf
ret
add
mov
pop
jae
lahf
and
je
imul
ja
movlps
inc
xor
das
add
dec
stc
xor
sub
je
fdivrs
or
js
pop
add
inc
pop
xchg
or
cmp
dec
xor
adc
add
das
mov
ds
cmc
ret
arpl
cmp
dec
add
mov
rcr
add
cmp
adc
out
push
dec
push
add
sti
rolb
mov
cld
fcmovnbe
scas
mov
add
sub
xchg
push
je
leave
ja
cmc
lret
and
out
cmp
pop
inc
addr16
enter
dec
mov
add
xor
pop
push
in
push
dec
or
and
jns
mov
xor
fisttpl
pop
nop
adcl
testl
xor
lret
pop
shrl
mov
sbb
std
ss
and
mov
add
or
pop
stos
test
ret
lods
frstor
cltd
in
push
fisubrs
mov
xchg
pushf
sub
cmpsl
in
imul
add
cld
dec
stc
scas
into
push
dec
mov
test
xchg
clc
call
mov
arpl
fnstenv
adc
outsl
sbb
sub
aaa
xchg
or
pusha
ret
add
addb
xchg
jecxz
ds
lods
ret
test
gs
leave
sub
into
jmp
pop
pmullw
ret
add
cmpsb
pop
pop
push
mov
pop
lret
mov
outsb
clc
je
push
addr16
mov
mov
ss
mov
jge
das
cli
imul
out
repnz
lahf
xchg
add
push
xor
pop
nop
mov
jno
mov
lcall
push
jae
leave
inc
daa
test
dec
ja
cli
mov
sub
or
stc
push
jg
stc
movsl
jmp
adc
sub
rclb
loope
jns
test
jmp
loope
dec
add
pop
cli
stos
shrb
dec
sub
testl
add
mov
repz
pop
inc
enter
inc
dec
xchg
into
and
xchg
lahf
push
pop
sub
je
mov
jmp
cmp
fiadds
push
dec
shl
xchg
popa
lahf
cwtl
shl
xorb
adc
pop
pop
sbb
or
push
xor
xlat
xor
add
jmp
mov
jmp
movl
push
jbe
push
cli
jecxz
push
notl
dec
xchg
test
mov
push
jne
je
hlt
or
jnp
insb
loop
sbbl
cmp
push
outsl
inc
mov
test
scas
movsb
shll
pop
das
out
shl
cmp
dec
push
mov
pop
pop
loop
add
pop
mov
xchg
and
imull
dec
hlt
add
xchg
vpshlq
xor
jge
in
gs
hlt
loop
push
add
leave
cli
push
add
je
rclb
add
mov
mov
push
loopne
fcoml
lcall
mov
test
mov
or
push
push
lret
wrmsr
dec
push
inc
rcrl
jmp
lods
shll
add
shl
cmp
ja
cmpb
inc
push
push
dec
addb
or
xchg
sub
pop
or
jns
sbb
aad
out
mov
ljmp
and
mov
push
insb
adc
push
add
jno
leave
adc
adc
add
or
inc
ljmp
cli
or
mov
icebp
jl
dec
fs
or
xchg
cmp
jae
or
stos
stos
je
movsb
stos
mov
push
push
push
pop
mov
stos
fwait
inc
pusha
sbb
das
aam
mov
or
cmp
dec
test
icebp
push
repnz
inc
out
dec
add
jecxz
or
jmp
enter
sub
or
push
cmp
or
dec
or
lret
adc
push
mov
jmp
push
lds
mov
jb
push
fs
cmc
jnp
cmp
icebp
xchg
out
enter
dec
or
lret
adc
popa
inc
cmp
lods
mov
in
mov
pop
jmp
jnp
or
and
or
pop
call
pop
insb
xor
sub
jmp
notl
or
or
jmp
lret
in
mov
sbb
pop
or
xor
sub
add
xor
pop
jae
fnsave
add
cmc
add
lods
add
or
mov
add
pop
push
cmp
and
cwtl
insb
adcb
or
and
inc
arpl
or
repnz
lock
adc
adc
sbb
add
dec
mov
out
adc
clc
shl
or
mov
xchg
scas
outsb
or
adcl
adc
add
loopne
rcll
or
lahf
inc
popf
loop
inc
jg
xor
inc
mov
sbbl
jae
push
inc
add
lahf
addl
or
ds
pop
movsl
popl
cmp
clc
and
adc
or
mov
inc
inc
adc
les
sub
push
cmp
push
xor
test
dec
sub
dec
imulb
test
scas
test
jns
push
jnp
inc
jb
dec
xor
sbb
xor
and
xchg
inc
sub
xor
flds
jl
daa
ror
mov
sub
insb
and
push
push
and
cltd
das
in
sub
ja
cmp
les
sti
ss
xor
inc
xchg
push
adcb
movsl
aam
inc
in
inc
add
cs
sbb
inc
push
push
jmp
adc
sub
inc
outsb
add
imul
fdiv
push
int3
out
add
add
movsl
in
cwtl
inc
orb
add
or
mov
or
leave
and
or
gs
and
xorb
xchg
jl
xchg
sahf
cmp
add
in
pop
cmp
mov
loopne
pusha
aas
add
add
gs
and
out
push
mov
add
in
mov
add
cwtl
sbb
decb
push
mov
icebp
enter
adc
idivb
sub
xchg
pop
outsb
sbb
int
and
xor
push
jae
loopne
cld
mov
icebp
or
ds
sbb
push
sbb
sub
xchg
flds
scas
sub
mov
ja
dec
sub
call
xlat
cmp
pop
mov
shlb
push
mov
or
out
pop
test
sbb
call
sub
ja
push
jbe
es
add
jl
jmp
test
es
xor
sahf
add
cld
mov
jmp
mov
xchg
inc
inc
dec
je
push
in
or
and
repz
and
loopne
jmp
mov
scas
les
in
push
sbbb
push
dec
jmp
mov
push
stos
mov
orb
ss
repnz
or
and
sub
cmp
ss
test
xor
dec
incl
into
insl
ja
fiadds
or
xchg
add
sbb
in
sbb
lahf
icebp
dec
adc
push
mov
pop
pop
push
call
dec
sub
push
repz
test
shl
add
and
push
sub
xor
mov
popf
mov
add
cs
adc
or
lahf
jmp
mov
cmp
and
cld
ret
jg
pop
pop
ja
mov
adc
push
mov
sub
and
xor
das
sub
popf
repnz
sub
pop
mov
inc
jns
orl
inc
push
push
xchg
pop
jmp
cmc
sub
lea
sbb
push
test
push
or
hlt
xchg
push
push
and
jmp
mov
aas
mov
cmpsl
add
aaa
test
loope
jo
mov
dec
pop
clc
xchg
inc
pop
inc
outsl
addb
or
fcoml
dec
push
aam
or
inc
xor
push
adc
push
inc
inc
mov
mov
push
xor
add
xchg
mov
sbb
fmull
xchg
rcl
and
sahf
ljmp
xor
scas
mov
sub
cmp
loop
sub
mov
jmp
xchg
shr
mov
add
mov
or
mov
ret
stos
cwtl
sbbl
push
clc
nop
test
pop
add
ljmp
loopne
out
js
or
mov
daa
adcb
jno
je
fwait
xor
fadds
mov
ljmp
insl
add
add
jmp
xchg
mov
cmp
in
repz
loop
popa
mov
pop
sbb
sbb
cmp
dec
loop
push
add
push
push
pushf
clc
mov
mov
xor
xlat
test
sub
adc
clc
push
mov
loop,pn
pop
add
mov
sub
enter
jmp
sbb
popa
push
insb
inc
adc
mov
push
xchg
mov
add
add
nop
sbb
faddl
imul
pop
jne
dec
movsl
clc
or
pmovmskb
into
add
inc
mov
repz
adc
cmc
mov
mov
out
pop
add
pop
sub
icebp
orb
popf
loop
mov
dec
and
lds
stc
inc
and
adc
sub
fs
mov
cmp
add
sbbb
sub
adc
sbb
jmp
roll
ret
cld
arpl
xor
rorl
ss
jbe
ret
cmp
add
jne
pop
pop
rcl
xchg
add
pop
pop
push
imull
leave
ljmp
rcrb
aas
std
pop
xor
or
popf
jge
out
movsb
add
jmp
aas
or
push
dec
xchg
jae
and
js,pt
nop
stc
or
ja
sbb
add
sbb
jnp
dec
mov
xor
lods
xor
movb
test
pop
sub
push
hlt
into
out
inc
add
xor
pop
movsl
faddl
and
push
add
shlb
out
or
shlb
rcr
add
jb
or
lret
adc
push
shlb
mov
add
jmp
add
jp
fcoml
call
push
add
neg
outsl
jmp
or
int3
or
add
sbb
ret
fadds
lret
insb
push
in
add
fadds
enter
nop
jbe
mov
dec
dec
adc
dec
pop
mov
lahf
push
movl
hlt
in
or
loop
sti
dec
cmp
jbe
adc
cld
xor
cmp
adc
xlat
arpl
dec
dec
lret
test
mov
or
inc
cmp
pushf
or
dec
sarl
or
adc
dec
scas
aam
lds
es
inc
pop
and
jg
xor
or
mov
repnz
add
and
fiaddl
ljmp
add
adc
data16
stos
lret
jb
and
je
lods
sub
add
pop
aas
sbb
mov
push
and
mov
addl
or
clc
sub
inc
ss
mov
daa
jmp
pop
sbb
xor
lods
dec
mov
jmp
sub
xor
aad
or
add
decl
lahf
call
push
shll
sbbb
dec
mov
std
add
mov
inc
test
mov
pop
inc
fstps
pop
add
dec
cmpsb
outsl
pop
cmp
jle
jo
std
idiv
enter
insb
inc
or
add
int
cmpsl
hlt
or
adc
mov
jno
mov
sarb
or
sarb
fnstcw
mov
cld
jmp
xor
scas
sub
sbb
pop
push
shrb
xorl
int
data16
dec
and
sbb
fstps
cmp
aad
sahf
sub
arpl
dec
sub
mov
ljmp
mov
jl
sub
dec
adc
fiaddl
and
aad
mov
enter
jmp
movsl
pop
inc
ja
inc
mov
jbe
jg
stos
es
movaps
pop
dec
ret
pop
loopne
pop
mov
push
popf
add
mov
data16
idivl
mov
je
push
ja
xor
enter
call
sub
lea
lods
js
push
add
jnp
pop
pop
cwtl
and
cmp
or
in
or
jb
sbb
jo
clc
inc
nop
les
adc
lahf
leave
adc
test
adc
leave
sbb
mov
adc
sbb
in
xchg
mov
and
add
jge
xchg
jecxz
rcrl
jne
dec
mov
roll
add
cwtl
inc
negl
mov
pop
sbbl
testb
ret
push
sub
jmp
inc
mov
scas
repnz
inc
cltd
add
out
aad
pop
out
shlb
dec
sub
xor
ss
jg
or
pop
xlat
ds
pop
sbb
inc
push
lcall
push
pop
jg
cmp
enter
or
and
js
mov
add
adc
cld
mov
dec
pop
stc
fdiv
js
popf
and
nop
mov
and
divl
mov
aad
push
pop
push
push
add
inc
sti
add
sbb
mov
xchg
dec
pop
xor
xor
shl
jae
mov
push
test
push
in
mov
bound
aad
clc
fucomi
adc
and
daa
loopne
sbb
add
pop
lock
jmp
mov
push
jnp
popa
jmp
dec
adc
push
pop
fs
data16
cmpsl
fiadds
loope
add
addr16
cmp
xchg
push
fstpl
in
aas
mov
mov
pop
subb
insb
mov
add
push
notl
dec
mov
or
add
jnp
rorb
fstpl
scas
popf
and
ret
xchg
fimuls
push
mov
xchg
and
inc
or
jmp
dec
push
or
adc
push
imul
xchg
int3
pop
aam
jecxz
inc
xchg
xor
inc
sbb
mov
pop
test
mov
xchg
mov
stos
movsb
jmp
fidivrs
dec
dec
cmp
lock
fsubr
push
imul
andb
mov
add
dec
scas
test
or
jns
lret
bound
mov
sub
popf
xor
clc
sub
cmp
cld
movsb
inc
push
jmp
sbb
and
adc
es
push
add
jmp
pop
add
lcall
add
pusha
adc
sar
shr
cmp
ds
mov
jmp
sbbb
pop
xchg
xchg
jno
jb
add
inc
xchg
mov
jge
xor
pop
jbe
push
add
outsl
clc
mov
fs
aaa
cmp
add
mov
jmp
and
cmp
jle
sub
clc
das
icebp
add
xchg
fsubrs
jo
mov
scas
or
test
js
push
or
push
shl
mov
mov
test
loop
sub
or
mov
cmp
cmp
jmp
push
mov
sbb
shr
push
imul
cmp
inc
jmp
mov
lret
cmpsl
cmpsb
fmul
daa
test
fbstp
ja
mov
leave
dec
lock
mov
inc
js
sub
lods
pop
int
movsl
dec
mov
aaa
or
xor
and
xor
aam
mov
loop
int
adc
inc
mov
into
das
not
lret
and
pop
xor
loope
bound
pop
add
repz
or
ret
cmc
in
xor
cmp
xor
push
xor
nop
add
dec
pop
pop
jmp
adc
sub
add
sarl
repnz
in
lahf
mov
and
jmp
clc
sub
int3
mov
insl
mov
sub
loope
xor
outsb
mov
rolb
pop
std
add
imul
lret
xor
sbb
pop
or
ja
mov
imul
iret
push
add
fldenv
daa
jns
inc
or
jmp
add
mov
or
jno
dec
add
jg
jmp
test
mov
out
stos
xor
mov
pusha
sbb
shl
add
push
data16
push
cmp
sti
pop
adc
mov
mov
inc
adc
outsb
inc
cmpsb
xor
sub
daa
add
and
pop
fsubrp
sub
pop
push
adc
pop
test
clc
pop
mov
in
sub
jno
pusha
push
test
faddp
jecxz
jmp
in
call
pop
in
loopne
andb
sbb
out
subb
inc
incl
xchg
stos
stc
mov
push
dec
adc
inc
notl
bound
add
dec
adc
dec
or
es
testb
jmp
jmp
ja
imul
out
xchg
jmp
pop
pop
cmp
stc
loopne
jb
add
insb
and
addr16
push
mov
ret
insl
repnz
cmp
add
jo
cmpb
or
or
and
roll
and
push
add
cmp
das
test
cmp
dec
in
add
push
pop
pusha
lcall
add
jg
add
mov
jo
and
cli
loopne
fistpl
mov
dec
add
mov
jmp
lds
cmc
sbbl
movsb
xor
pop
dec
sub
fisttpll
fimull
filds
push
jmp
lods
mov
nop
or
pop
insb
sbb
mov
xchg
pop
aas
movsb
pop
adc
xchg
in
ret
rclb
les
loopne
cmp
jnp
out
cmp
adc
dec
mov
jo
add
add
loop
dec
sbb
fstl
add
out
jge
cli
fstps
sub
ljmp
fisubs
movsb
cmp
and
sbb
sti
cmpsb
stos
enter
arpl
or
xlat
cmpb
test
sbb
adcb
pop
imul
mov
mov
adc
push
mov
inc
leave
fldenv
cmpsb
mov
cmpsl
stos
jns
ret
add
or
jnp
out
xchg
mov
mov
aam
push
ret
ret
fsubrl
jge
test
push
xor
adc
jmp
mov
mov
scas
popa
test
jno
xor
nop
ret
adc
or
dec
in
jb
hlt
fldenv
test
loopne
push
shrl
sub
pop
lods
rorb
or
jmp
xchg
push
sahf
in
in
sub
and
jmp
divl
add
out
add
daa
jmp
into
jge
testb
add
out
jmp
test
ds
or
or
mov
dec
adc
stos
cmp
loop
xor
or
jle
adc
add
adc
or
xor
mov
mov
imul
pushf
lods
xchg
mov
in
stc
jl
sbb
push
pop
pop
pop
push
cmpsb
jg
inc
and
mov
or
jo
push
sbb
in
std
adc
das
repz
sub
dec
mov
scas
lcall
pop
add
outsl
subl
jge
insb
add
jmp
popa
lret
cmp
jge
and
mov
leave
dec
mov
xchg
adc
jno
xchg
outsl
inc
inc
inc
add
jb
insl
shll
pop
add
or
pop
into
loope
in
adc
test
adc
in
dec
mov
loop
jmp
push
cmp
dec
mov
aam
or
imul
pop
pop
xchg
push
add
mov
jmp
sub
bound
out
xor
dec
insl
sub
xor
jnp
sbb
adc
insl
add
jmp
push
das
es
dec
cli
sbb
test
insl
leave
pop
mov
mov
add
jmp
adc
jmp
cmp
sub
push
xorb
sarb
orb
mov
pushl
out
inc
and
mov
dec
add
jecxz
push
cmp
fsub
out
inc
shlb
pop
xchg
mov
dec
sti
inc
inc
call
test
ret
jmp
mov
es
aas
or
insl
push
mov
push
jmp
in
mov
arpl
cmp
fsub
repnz
xchg
test
mov
pop
cld
addl
rol
lret
data16
pop
cwtl
inc
add
add
dec
push
jmp
push
dec
cmpsl
js
add
push
push
cmp
cmp
mov
dec
add
cmp
ficoms
pop
cwtl
insb
arpl
filds
xchg
cmp
imul
and
adc
xlat
repz
inc
not
add
mov
fwait
aaa
icebp
scas
and
jo
push
arpl
sub
sbb
ss
insl
into
movsl
or
fsts
sub
mov
mulb
popa
sbb
dec
cs
jno
cld
or
sti
mov
xor
cmp
ds
lret
pop
adc
fs
mov
lock
mov
ss
or
in
push
jl
sub
dec
stos
andl
pop
mov
imul
jno
lahf
pop
jle
xchg
push
test
xchg
or
adcl
push
adc
mov
mov
pop
ljmp
push
mov
pop
xor
push
dec
cld
xor
dec
ljmp
push
enter
sarl
mov
push
sub
or
or
in
or
xchg
or
jns
test
push
push
or
sbb
add
movsb
cmp
and
or
mov
call
jbe
mov
outsb
stc
leave
jp
and
pop
cmpsb
sub
jl
sbb
shr
test
enter
lock
addl
pop
negb
xchg
or
jns
sub
shl
dec
test
popf
pop
or
add
mov
bound
es
xchg
pop
cli
jl
sub
cli
arpl
fldl
dec
jmp
shl
cmp
addr16
inc
mov
mov
xor
cmpsb
mov
mov
cmp
mov
or
jmp
imul
les
mov
aas
inc
in
cmp
push
dec
scas
mov
pop
out
popa
adc
xchg
ret
in
outsl
in
bound
jae
neg
test
pop
add
jmp
scas
shlb
or
insb
adc
and
ljmp
pop
test
push
or
pop
call
mov
mov
push
mov
sbb
subb
adc
jnp
xor
call
repz
mov
jmp
lock
adc
xor
jns
or
jne
inc
pop
jnp
test
push
cmpsb
int
dec
in
inc
push
sub
mov
add
outsl
in
lds
sbb
pusha
and
mov
insl
popf
or
iret
xchg
cmpb
clc
mov
std
pop
push
pop
add
cmpsb
jo
mov
aas
xor
lods
insb
int
jmp
sarl
cmc
mov
jg
pop
pop
call
adc
sub
lock
fsubl
pop
dec
loop
roll
dec
lcall
mov
lcall
cmp
jmp
or
push
jnp
push
mov
jno
mov
xor
loop
je
jb
dec
or
pop
cmpsl
sub
xor
push
lds
out
inc
hlt
pop
rol
jnp
shr
mov
xor
push
dec
push
and
in
mov
mov
push
sub
push
or
push
jg
push
fcmovbe
mov
mov
push
ret
das
jae
das
icebp
bound
pop
mov
cs
mov
mov
shrb
nop
sub
sub
ret
loopne
push
mov
jmp
pop
dec
jbe
jecxz
push
mov
and
fsubs
jmp
or
pop
pop
sbb
lret
add
cs
and
jae
and
ret
add
xor
push
add
out
cmp
pop
ds
roll
xchg
adc
mov
fidivs
dec
lock
sub
inc
cmpsb
mov
inc
loopne
pop
outsb
rcrb
dec
push
xor
divps
test
repnz
repnz
imul
daa
fistpll
xchg
dec
rcr
push
leave
jge
push
cmp
in
pop
ja
rorl
jo
and
add
jmp
jg
push
and
outsb
jl
pop
sar
mov
fdiv
sub
adc
scas
inc
stc
push
adc
nop
xchg
dec
popl
inc
ds
out
mov
adc
out
and
jg
lret
push
dec
and
sub
xor
sti
add
insl
imul
movsl
and
movsb
es
or
pop
insl
mov
fisttps
mov
lock
leave
jb
mov
add
adc
pusha
cwtl
sbb
sub
mov
add
adc
dec
clc
and
pop
push
jmp
dec
and
inc
pop
imul
pop
jp
movsl
xchg
add
jmp
stos
adc
jns
int3
dec
mov
add
pop
and
pop
stc
into
aad
ret
negl
pop
imul
loopne
movb
inc
dec
inc
inc
sbbb
push
push
push
adc
adc
test
clc
hlt
push
popfw
pop
jbe
push
mov
int3
pop
adc
add
xor
ljmp
jg
int3
push
push
fs
repnz
pushl
xor
sarb
fldt
ja
pop
mov
es
push
decb
push
sub
or
ja
adc
shr
inc
or
xchg
in
cmc
pop
flds
fisttps
xchg
add
out
nop
mov
getsec
dec
cmp
mov
sar
sbbl
mov
outsl
mov
cltd
adc
cmc
nop
test
xor
jmp
jno
rcrl
adc
cli
adcb
in
and
xlat
rcrl
aas
movsl
mov
mov
push
int3
inc
loop
inc
pop
jae
cmp
adc
mov
mov
cmc
mov
push
sbb
mov
or
repz
dec
sub
sbb
adc
scas
sbb
inc
or
jmp
imul
push
dec
mov
mov
push
add
mov
push
ja
cmc
xorb
int3
pop
pop
sbb
in
add
push
orb
aas
xor
inc
movsl
mov
and
add
aaa
dec
rorl
out
iret
stc
stos
jbe
lcall
mov
cli
ljmp
adc
popa
fldl
pop
add
lods
orl
jge
lcall
addr16
imul
sahf
inc
sub
or
add
fsubr
loop
stc
js
add
arpl
insb
xor
lods
rorl
jb
notl
dec
or
and
sbb
push
or
dec
adc
push
outsl
test
stos
aam
adc
xchg
pop
mov
cmp
xor
xchg
dec
mov
pusha
push
mov
add
adc
bound
icebp
nop
bound
add
xlat
xchg
sar
bound
add
mov
add
int
in
add
sbb
sub
jb
sub
std
dec
xor
enter
dec
dec
aad
push
xchg
int
je
pop
xlat
mov
mov
jmp
in
in
loope
stc
xor
outsl
xchg
out
xchg
subl
push
xchg
mov
subb
jo
xor
cmp
jg
xchg
sbb
lock
mov
push
and
stos
add
or
pop
and
pop
xor
sub
mov
mov
push
or
ret
pop
out
es
xchg
loop
cmp
outsb
xor
or
cmc
mov
cmpsl
rcll
jge
pop
outsl
popf
adc
js
cli
cwtl
fmul
cld
mov
iret
aas
fcoml
push
dec
js
pop
sub
xor
aaa
jnp
cld
push
sbb
jae
divl
cmp
sub
cs
lock
dec
mov
and
and
adc
mov
decl
sub
or
mov
add
jns
inc
in
jl
adc
arpl
call
push
mov
add
xor
stos
and
bound
out
jno
push
pop
rol
sbb
dec
incb
and
pop
add
pop
add
jmp
or
xor
testl
jnp
ss
jmp
scas
mov
jmp
cmp
cmovs
xor
xchg
push
popf
fildll
imul
je
jne,pt
cmp
incl
mov
dec
mov
in
cli
cmpsb
add
jb
nop
into
and
nop
push
jbe
pop
out
push
inc
or
insb
xlat
cmp
adc
sub
push
ret
add
rol
cmp
cmp
or
jmp
add
jp
sbb
js
add
and
or
add
pop
xchg
not
lock
outsl
loope
lods
mov
adc
sub
xchg
es
invd
loop
xchg
into
mov
in
loop
pushf
add
push
mov
adc
sub
notl
inc
or
add
mov
mov
xchg
out
push
lds
mov
adcb
jle
aaa
mov
ja
rolb
inc
arpl
add
xor
pushf
fsubr
iret
pop
mov
dec
push
inc
lds
or
and
test
sub
dec
rcrb
pop
jno
addr16
lods
dec
sub
pusha
pushf
xchg
xlat
mov
inc
loopne
cwtl
adc
and
and
mov
frstor
push
xchg
jmp
xchg
jmp
leave
jmp
xor
inc
test
into
mov
clc
pop
pop
cmp
mov
mov
stc
jne
or
mov
push
jne
adc
push
cmp
clc
sti
push
out
and
imul
in
xor
lock
cmp
mov
stos
lods
nop
ficoms
mov
sub
icebp
mov
dec
jmp
jge
je
jmp
push
pop
lock
and
push
add
dec
shrl
enter
and
cld
xor
divl
xlat
push
addl
add
jo
add
test
xchg
imul
fdivl
push
dec
pop
jl
xor
bound
push
stc
push
stc
lods
sbb
fcoms
out
sub
xor
push
and
ror
pop
push
lock
jg
jecxz
ret
shl
xor
mov
fdivrl
test
cmp
and
daa
mov
xlat
sub
push
sbb
push
mov
mov
or
fdivrs
xor
sbb
and
dec
adc
dec
cli
add
cmp
xor
mov
mov
cmp
cs
js
shll
add
cmp
cmp
lea
jmp
sub
iret
mov
push
gs
sti
or
pop
not
xor
sub
push
pop
mov
xor
lods
mov
in
jne
stc
into
cmp
sbbb
aam
add
jnp
jmp
pop
xchg
ret
dec
mov
stc
stc
mov
or
jmp
dec
add
lret
fsubs
in
add
or
shrl
inc
negl
xchg
adc
sarl
ljmp
jae
jmp
jne
or
mov
cmp
lea
pop
xor
xor
push
or
xchg
pop
sbb
add
jg
dec
inc
and
sti
add
or
iret
mov
aaa
insl
mov
mov
int3
icebp
push
jmp
arpl
push
es
arpl
or
cmp
add
add
pop
add
sbbb
inc
or
cmp
or
mul
or
and
fcmovnbe
mov
push
jmp
es
es
bound
repnz
pop
mov
xorl
jle
pop
inc
test
ret
mov
xor
mov
clc
add
aam
lcall
push
notl
pop
xor
mov
inc
dec
push
xlat
cmp
popa
ja
ret
mov
mov
push
jmp
add
stos
mov
stos
repz
pop
dec
and
and
xchg
add
jle
mov
decl
aad
jl
push
push
pop
aas
jmp
add
lock
rclb
mov
stc
jo
shl
dec
pop
adc
movsl
ds
sub
out
and
jb
sub
mov
sub
testb
pop
ds
mov
inc
or
out
shrl
scas
jbe
clc
popf
pop
add
add
out
xchg
mov
dec
les
dec
sub
dec
sbb
adc
push
shll
mov
in
ret
int3
les
cmpsl
scas
mov
sub
aam
sbb
pop
add
jle
mov
jo
xor
pushf
imul
cmp
xchg
push
mov
dec
loopne
pop
and
add
mov
mov
mov
jg
cmp
stc
and
inc
repz
jmp
stos
pop
aaa
scas
inc
inc
mov
xchg
jnp
and
jmp
push
push
push
pop
pop
dec
ljmp
cmp
cli
dec
add
iret
or
xchg
sub
ljmp
stc
push
insb
mov
outsl
dec
sub
hlt
repnz
mov
jecxz
negb
popf
filds
cmpsb
mov
xchg
lret
dec
push
and
addr16
and
pusha
push
dec
and
leave
aas
push
xchg
mov
rclb
outsb
lock
nop
rcrb
sub
sti
and
xchg
add
mov
dec
sbb
xlat
xor
test
adc
mov
pop
sbb
push
mov
jl
arpl
xchg
ljmp
or
insb
repz
clc
add
cmp
or
push
and
push
sub
cltd
das
scas
nop
cmp
cltd
mov
jg
cmpsb
adc
sbb
jbe
and
shl
filds
popa
cli
shr
sub
cs
out
loopne
push
cmp
mov
jne
insb
mov
jmp
addr16
movsb
and
push
cld
jge
in
adc
sub
dec
mov
arpl
xchg
inc
stos
mov
xchg
dec
movsl
cmp
enter
jo
xor
idivb
subl
shl
ds
and
outsb
push
rcll
dec
cmpsl
cmp
jge
push
pop
mov
aaa
in
out
inc
jne
fs
jo
cmp
sti
or
movsl
jne
lret
movsb
mov
pop
and
icebp
xor
mov
dec
lahf
sbb
mov
mov
ja
add
ret
cmpsl
aaa
jge
push
pop
mov
pusha
sbb
jmp
mov
xchg
outsb
xor
cmc
outsl
stos
mov
xor
push
adc
mov
adc
repnz
dec
out
dec
subb
or
loop
mov
xor
movl
dec
pop
mov
dec
test
sub
ljmp
out
aad
int3
sbb
jmp
ret
out
sub
push
cmp
pop
aaa
push
pop
fadds
and
dec
mov
lret
mov
icebp
bound
push
dec
or
jle
std
mov
adc
daa
jmp
sahf
jo
jmp
fstpl
adc
pop
xchg
and
mov
jnp
outsb
ds
pop
inc
ret
xchg
add
mov
push
mov
imul
adc
sbb
int3
jl
adc
mov
sub
pop
pop
fnstcw
scas
fldcw
pop
push
leave
or
adc
jnp
std
or
mov
inc
rcpps
inc
stos
jmp
mov
push
mov
pop
push
data16
fnstenv
and
adc
push
in
jb
inc
and
sub
sahf
arpl
or
lea
aam
in
rorb
dec
sub
jmp
ljmp
sub
and
jmp
sti
sbb
xor
inc
jno
adc
xchg
cmpsl
add
stos
movsl
imul
out
push
lds
aaa
cltd
adc
sub
iret
insl
mov
push
out
icebp
dec
dec
push
mov
fisubs
xchg
pop
mov
push
mov
rcrl
fdivr
popf
mov
pop
push
mov
jmp
dec
aam
add
push
fdiv
mov
sbb
imul
push
pop
lcall
mov
std
int
jae
lods
dec
mov
push
add
and
pop
incb
faddl
call
dec
jp
adc
push
es
and
inc
nop
scas
mov
or
ljmp
add
data16
or
ret
add
aam
cmp
adc
push
test
mov
sub
das
shr
fsubs
fs
lods
jbe
add
dec
in
jb
loopne
sub
lahf
adc
adc
fmull
les
jl
jmp
popa
pusha
push
xchg
nop
popf
rorl
cmpl
and
push
mov
mov
dec
inc
loopne
sarb
loope
mov
mov
rorb
pop
pop
aaa
fsubp
or
sbb
push
idivl
mov
sub
cmp
or
sbb
and
outsb
orb
sbbb
notb
stc
inc
out
mov
adc
shr
sub
int3
jnp
push
dec
add
add
inc
in
cmp
jbe
push
leave
mov
add
sbb
jmp
negl
out
mov
stos
xchg
fidivrl
int3
clc
repz
cld
cltd
roll
stos
pusha
jnp
add
push
add
sbb
or
jmp
sbb
dec
sbb
sysexit
and
or
jmp
mov
fdivr
ret
adc
inc
jmp
sbb
cli
rcrb
push
mov
ja
dec
dec
dec
popl
fidivs
sbbb
push
jp
xor
pop
lahf
fidivs
jb
inc
movb
adc
rclb
or
sub
and
cli
out
repnz
adcb
loopne
rcl
push
testb
stos
lret
fimuls
cli
adc
inc
cmp
xlat
idivl
in
testb
aam
js
imul
xor
fmull
sbb
jo
jno
xchg
lock
and
push
pop
in
ret
xchg
orb
jle
dec
les
cmpsb
clc
enter
adc
push
mov
lods
sub
dec
mov
dec
rorb
xorl
lock
dec
or
ss
notb
push
push
push
mov
out
sahf
or
jo
dec
lods
test
add
push
adc
or
pop
and
adc
shlb
pop
fdivl
adc
push
inc
inc
daa
push
xor
and
sub
jp
movsl
jbe
pop
scas
adc
jp
cmc
pop
push
xor
push
inc
sub
fcoms
addb
push
mov
sub
jecxz
jmp
neg
in
aad
pop
add
jmp
dec
das
out
dec
int3
daa
jmp
std
adc
adc
cmc
dec
add
jmp
enter
test
mov
inc
and
jmp
fucomip
iret
movsb
ss
push
pop
pop
add
test
movsb
subb
push
or
and
mov
mov
pop
push
mov
pop
mov
popf
push
icebp
mov
clc
xchg
and
rclb
fsts
sti
adc
cli
jle
push
add
ud1
repz
jmp
mov
pusha
or
add
and
cmpsl
fs
pop
add
dec
xor
adc
pop
nop
and
mov
sbb
push
add
add
jno
push
dec
pop
cmpl
mov
push
or
lret
push
xchg
jae
leave
mov
pop
mov
stos
mov
mov
cmp
ret
in
inc
sbb
push
mov
xor
sarb
mov
aaa
jle
sbb
pop
sbb
pop
aad
mov
adc
sub
jno
repz
jno
addb
inc
xor
dec
jg
icebp
or
adc
movsl
jnp
cmp
or
inc
nop
or
mov
adc
add
push
ja
xor
fnstsw
cmp
add
add
mov
rorl
jmp
add
add
inc
scas
std
jle
jmp
mov
xchg
std
negb
sbb
xchg
pop
in
xchg
std
bound
xchg
add
pop
xor
das
jo
pop
pusha
cmp
out
add
dec
dec
jge
dec
xor
clc
std
adc
jae
mov
clc
sub
loope
pop
or
out
push
adc
sub
fadd
cmp
cwtl
outsb
stos
dec
lret
fsubp
cmpsl
cmpsl
cmpsb
cmpsl
lods
jge
ljmp
fidivl
iret
pop
xchg
imulb
outsl
sub
sbbl
daa
or
inc
jnp
mov
lock
xchg
jge
push
push
dec
shlb
pop
push
js
pop
inc
or
mov
sub
rcr
jmp
jg
neg
shr
inc
rol
fmul
and
lods
test
decl
xchg
popf
mov
pop
adc
mov
xlat
or
rcll
adc
sub
add
or
aaa
pop
add
loopne
call
pop
xor
pop
rclb
mov
pushl
sub
pop
push
jecxz
add
jl
or
jae
add
cltd
jo
mov
jns
add
arpl
sbbl
call
sbb
jg
je
pop
jns
jmp
and
sbb
push
push
sbb
insl
xchg
leave
mov
cmpb
inc
mov
pusha
mov
es
adcb
mov
jg
negb
jbe
pop
and
pop
lret
mov
std
pop
or
icebp
test
pop
jle
inc
jmp
and
push
addb
mov
or
neg
jecxz
shl
cmpsl
push
dec
insl
mov
mov
add
cmp
bound
jmp
xchg
repz
inc
mov
ljmp
inc
pop
call
dec
je
xchg
xchg
xchg
adc
mov
aas
mov
mov
dec
mov
cli
dec
push
out
add
pop
cmc
mov
dec
dec
mov
cwtl
inc
push
jmp
mov
add
enter
adc
sbb
jae
xor
adc
out
lret
push
pop
push
pop
push
mov
repz
adc
rolb
mov
filds
loope
jp
pop
popf
lret
push
xchg
inc
lock
mov
pop
or
push
fdiv
jg
and
in
sahf
es
jbe
or
cmpsb
daa
sub
decb
das
xor
inc
and
pop
cmc
xchg
ret
or
xor
adc
add
cmp
sbb
mov
daa
sbb
add
out
pop
xor
stos
jns
xor
and
pop
sbb
sbb
cmpsb
and
push
xor
shl
or
xchg
dec
in
ret
cmc
inc
pop
daa
jl
pop
in
ret
or
add
adcl
icebp
mov
and
dec
addb
inc
out
test
mov
test
jmp
lods
inc
hlt
xor
popa
mov
push
and
inc
or
jnp
jno
fistpl
dec
pop
and
add
pop
lock
roll
in
mov
push
xchg
stc
push
dec
or
mov
mov
ja
js
xchg
dec
fs
test
es
mov
inc
pop
push
cld
inc
or
fsubrs
je
bound
or
cmp
cmp
add
mov
and
jg
data16
xchg
idivb
int3
stos
adc
lret
push
and
gs
out
jecxz
rcrb
pusha
dec
or
push
cs
and
adc
je
test
add
pushf
mov
call
out
fsts
shll
pop
xchg
lcall
xchg
mov
pop
loope
das
lods
pop
das
inc
push
into
ds
hlt
jmp
in
add
pop
mov
mov
loopne
mov
adc
jne
gs
mov
inc
jge
insl
cwtl
das
dec
jb
xchg
mov
sub
call
jmp
jmp
dec
jle
push
ljmp
lock
sub
pop
mov
shr
aam
scas
and
data16
loope
inc
je
cld
ror
push
jo
icebp
pop
inc
and
adc
and
out
in
ljmp
icebp
jmp
das
push
dec
mov
aas
push
xlat
dec
mov
pop
cmc
push
or
fadd
pop
inc
sysret
bound
imul
xor
cmpsb
adc
xor
cmp
cmp
push
push
mov
insb
or
sub
sti
jl
push
mov
mov
mov
pop
call
hlt
aas
mov
xor
mov
hlt
adc
insl
or
in
and
push
mov
imul
mov
jle
repnz
cmpsl
pop
sub
dec
adc
mov
pop
adc
popa
dec
sahf
push
jne
sti
inc
jmp
in
dec
and
aaa
shr
hlt
sub
ret
add
add
lods
adc
iret
or
pop
cmp
lods
shl
fcoml
test
pushf
out
and
xchg
std
insb
add
sub
sti
and
xlat
js
dec
push
mov
les
xchg
sub
jnp
sub
rorb
shl
push
mov
jge
fists
mov
stc
pop
mov
pop
xor
pop
pop
cmpsl
daa
or
add
xchg
icebp
stc
and
divl
out
lods
nop
sbb
or
dec
imul
mov
inc
fs
call
addr16
push
repnz
data16
cmp
inc
je
fsubrl
dec
cld
pop
fstps
xchg
rolb
mov
jmp
sub
dec
ffree
js
jmp
mov
inc
xor
mov
inc
mov
pop
jp
or
sbb
mov
sti
daa
jmp
inc
scas
shlb
mov
jmp
fcmovb
dec
push
daa
push
and
fldl
ret
sti
rcll
in
clc
inc
movsb
loop
movsb
cld
sub
push
pop
pop
call
and
lock
cmp
mov
jmp
aad
mov
adc
in
stc
inc
add
cltd
push
int
fcomp
push
cmc
and
sbb
pop
ds
fs
sbb
repz
push
hlt
nop
test
add
je
sahf
and
adc
add
into
mov
sarl
cmc
push
sub
out
insb
addb
or
daa
movsb
addr16
mov
jno
sbb
shrl
add
mov
and
or
outsb
xor
adc
push
pusha
pop
or
addr16
or
inc
add
add
push
les
push
call
mov
ret
mov
push
adcl
clc
daa
repz
adc
fldl
xorb
dec
or
jmp
sbb
cli
out
push
or
pop
ret
negb
and
or
push
sbb
add
in
and
in
mov
jmp
push
idivl
lods
pop
pop
pop
sbb
or
xor
adc
xor
jne
lahf
insl
je
into
sub
sub
repnz
cmp
inc
pop
jg
xor
inc
das
pop
cwtl
mov
dec
lea
int3
popa
nop
cmp
jnp
dec
push
push
cmp
dec
ljmp
mov
inc
neg
pop
add
mov
flds
es
xchg
into
push
inc
fistps
cmp
jne
fadd
or
daa
push
lds
xchg
mov
mov
mov
in
movl
and
in
dec
sbbb
jbe
call
lock
pop
add
sub
popf
mov
adc
movsb
pause
add
leave
hlt
arpl
jl
xchg
lret
push
mov
lock
or
dec
pop
loopne
sbb
js
sarb
jecxz
push
cld
xchg
mov
push
dec
xorb
or
and
dec
aas
movsb
add
push
iret
and
and
mov
out
or
pop
lret
add
ja
inc
adc
mov
bound
push
xor
jne
jmp
jno
inc
jmp
and
pop
jle
pusha
mov
out
cmp
dec
aad
sub
not
ret
cld
pop
das
mov
mov
rcl
dec
jg
cmp
clc
add
add
jle
shl
xchg
jns
push
pop
stos
sbbl
adc
jmp
repz
sti
push
shll
js
xchg
clc
add
and
test
les
ss
cli
mov
rolb
fcoms
jle
mov
inc
or
ss
and
pop
jmp
imul
ja
add
or
test
push
jmp
inc
sahf
mov
mov
jo
ret
and
add
jle
stc
pop
shr
jae
fstl
xor
add
add
sub
push
jecxz
in
out
inc
xchg
les
fwait
mov
stos
pop
cmc
add
lret
aam
or
fsts
loop
popa
pop
add
pop
dec
fs
inc
lods
in
test
mov
es
gs
pusha
cmp
clc
add
xchg
inc
pop
jne
add
jmp
sbb
xor
dec
gs
das
push
cwtl
mov
jecxz
xor
incb
bound
add
jg
bound
sti
int3
andl
lea
and
xor
cmp
inc
dec
addr16
roll
sub
and
cmp
mov
mov
jg
add
std
push
pop
and
clc
xchg
loope
outsb
push
mov
or
mov
push
jb
adc
dec
dec
shlb
pop
sub
push
in
insb
and
gs
test
sbb
repnz
mov
push
sub
dec
addr16
jb
or
and
cmp
sub
dec
mov
push
and
and
lock
ja
add
add
pop
sbbb
xor
sti
cltd
loopne
add
add
ljmp
gs
fsubrs
ss
push
out
fmul
jmp
pop
add
addr16
sub
sub
loop
sbb
lcall
sbb
ficoml
push
arpl
jmp
or
test
pop
mov
adc
adc
je
inc
cmpsb
mov
xor
push
inc
in
mov
gs
sub
test
add
shl
daa
dec
stos
sub
addb
mov
movzwl
push
inc
mov
inc
add
sub
sti
mov
repz
mov
addr16
add
cwtl
pop
cmpsl
cli
mov
jnp
shl
dec
push
inc
out
shlb
or
aaa
sub
pusha
mov
ljmp
pop
xchg
jne
out
or
adc
pop
or
adc
bound
push
ds
fisttpll
insb
mov
push
xor
dec
sarb
push
mov
jmp
cmpb
sub
inc
pusha
add
pop
jmp
pop
adcb
xlat
insb
or
sbb
lea
mov
ja
dec
mov
roll
jmp
out
xchg
jb
sub
inc
outsl
adc
test
pop
push
and
dec
enter
insb
es
rcrb
je
fst
xchg
mov
js
cmp
xchg
mov
into
or
dec
pop
shl
ret
push
push
loope
inc
sub
sub
filds
or
pop
cwtd
rcll
jmp
xor
test
cmc
pop
lock
cmpsl
xor
mov
xchg
aad
inc
in
rcr
push
mov
adc
mov
xor
adc
std
or
ljmp
mov
mov
add
shr
jmp
pop
cmp
add
push
iret
or
push
sbb
push
loope
sub
mov
pushl
cmp
sub
push
and
mov
and
dec
xor
adc
pop
sbb
sub
cmp
jmp
xor
and
jp
add
mov
imul
mov
data16
push
rolb
jmp
mov
sub
pop
sbb
fwait
mov
pop
xor
rolb
sub
sub
outsb
imul
jmp
dec
or
cmc
das
call
aaa
sub
lret
adc
jmp
shr
pop
pop
in
jl
xchg
ds
jmp
std
dec
insb
pusha
xor
mov
cld
pop
pop
lds
push
cmp
ja
sbb
out
jbe
cs
imul
aad
cmc
jp
pop
sub
ljmp
loopne
out
repz
sub
push
adc
pop
sub
es
push
adc
lds
cmp
lahf
or
add
pop
push
std
mov
cli
push
pushf
mov
pusha
fstpl
sub
sub
inc
or
repz
or
sub
mov
jge
pusha
das
int
out
inc
cmpsl
inc
nop
add
jmp
cli
pop
push
pushf
lods
add
adc
cmp
sbb
stos
lods
mov
xor
pop
imul
in
clc
pop
add
jns
ss
add
iret
filds
out
mov
and
mov
fdivrl
sub
xchg
jmp
adc
imul
xchg
mov
in
sub
sbb
adc
pop
sbb
or
ja
js
mov
pop
int
jmp
aam
push
add
push
or
es
daa
push
push
loope
jmp
push
sti
scas
fsubs
jl
mov
testl
aas
add
inc
push
xor
mov
shll
lock
add
jmp
call
or
push
xchg
out
lahf
rorl
testb
cmc
add
jle
dec
cld
stos
adc
clc
push
scas
mov
sub
add
mov
inc
add
sbb
dec
pusha
inc
shr
add
push
arpl
jae
inc
scas
lret
mov
and
sbb
orb
push
clc
lret
push
aas
les
xlat
imul
sbb
or
inc
sub
inc
push
mov
in
pop
push
and
das
mov
sub
xrelease
rol
mov
xor
push
cmp
cmp
leave
cwtl
mov
daa
cld
mov
roll
jmp
in
test
mov
loope
psubsw
fld
push
jae
test
jmp
sti
lret
mov
sar
mov
inc
push
inc
jmp
lahf
adc
pusha
test
xchg
or
out
imul
mov
lcall
xchg
cmpsb
loopne
addl
xchg
or
test
loop
xor
stos
shll
mov
mov
leave
add
cmp
or
int3
mov
dec
dec
inc
or
or
fiaddl
push
mov
push
ror
dec
das
cmpsl
dec
imul
std
sbb
bound
mov
jecxz
adc
dec
push
cmp
je
test
jne
idiv
outsb
lret
lods
and
or
ja
pop
adc
dec
mov
enter
mov
xchg
mov
mov
test
ret
and
sub
gs
leave
adc
lods
xor
je
push
jmp
mov
adc
lret
inc
hlt
mov
rorl
fnstcw
das
add
adc
jp
add
nop
dec
aad
and
das
jmp
insl
testb
mov
jmp
or
cmp
das
xchg
and
push
pop
je
jl
push
push
jmp
pop
sbb
jmp
test
jmp
dec
aas
loopne
xchg
gs
or
call
scas
xor
pop
inc
xor
shrl
ja
add
and
jmp
push
dec
cltd
add
add
push
pop
pop
jmp
mov
xchg
xor
scas
aad
adc
pop
sub
pavgw
data16
xor
pop
add
sti
jmp
into
dec
cli
pushf
out
cmc
mov
das
sub
fidivl
mov
leave
push
bound
inc
cs
xor
xchg
push
jp
mov
cli
lret
sahf
pop
cs
jg
cmp
or
and
outsl
or
push
push
gs
dec
or
jbe
rclb
cli
mov
dec
fdivrl
addr16
push
lock
xchg
push
xchg
fs
add
in
jbe
xchg
out
aas
adc
ds
or
addr16
imulb
ret
adc
shll
cmp
and
inc
inc
imul
ret
aad
or
inc
dec
call
sti
lahf
ss
dec
inc
fsub
xchg
jmp
push
movsl
mov
nop
bound
pop
insl
mov
push
ret
movsl
push
push
dec
cs
dec
mov
cmp
add
mov
int
aad
out
add
ljmp
add
cld
mul
sub
adc
jecxz
jnp
shll
cwtl
or
pusha
dec
insl
pop
mov
mov
cmp
popa
andb
and
out
pop
lret
into
das
aad
int
dec
mov
mov
mov
cmc
adc
pop
cs
push
std
mov
inc
add
and
daa
ret
cld
mov
mov
push
pop
and
xorb
pop
ds
stc
cld
push
jo
mov
or
jle
add
push
mov
repnz
test
into
add
xor
cmc
shlb
or
sub
add
add
ljmp
adc
sbb
inc
pop
out
jb
iret
push
stc
lret
into
pop
loope
jmp
jbe
fdivrs
aas
inc
rcrb
mov
daa
lods
fwait
add
hlt
and
adc
rorb
adc
dec
or
jg
imul
mov
cmp
ljmp
jmp
jecxz
and
jp
mov
add
sbb
push
add
or
call
mov
stos
daa
xor
lcall
jle
test
dec
dec
or
and
not
xchg
out
pusha
imul
mov
lods
inc
mov
inc
sti
mull
sahf
ds
pop
sub
jmp
and
adc
pop
lods
cmp
aaa
adc
stos
push
sbb
xchg
mov
jns
xchg
out
sub
xor
out
cs
push
mov
mov
xor
cmp
aad
frstor
gs
cli
lret
mov
jl
fbld
fucomip
pminub
inc
xor
and
sbb
mov
jns
ret
mov
jae
out
lock
jmp
add
mov
ret
popa
daa
rolb
dec
out
mov
sub
scas
aaa
inc
stos
xchg
pusha
xlat
push
cmc
pop
jl
popa
add
pushf
xor
fsts
cmp
and
add
hlt
add
push
stos
sbb
mov
out
jge
ja
iret
imul
nop
xchg
icebp
popa
sub
pop
lea
sub
dec
test
pop
push
fs
js
inc
inc
aad
adc
mov
lret
sbb
shr
add
loopne
popf
stc
xor
push
mov
add
or
or
daa
sub
jg
push
pop
outsb
repz
xlat
loop
test
movsb
xchg
dec
sbb
jp
clc
int
loop
in
int3
sbb
dec
test
and
add
loopne
push
push
push
dec
xchg
adc
jbe
sbb
aad
xchg
xorl
repnz
jmp
pop
cmp
pop
in
test
jno
out
add
dec
mov
cli
adc
pop
jne
adc
add
int3
int3
call
ljmp
sub
mov
ds
add
stos
icebp
out
add
jmp
add
je
pop
push
mov
and
adc
std
nop
inc
jae
lahf
sti
call
mov
sbb
je
pop
punpckhwd
or
jmp
icebp
repnz
push
les
and
or
jne
add
clc
psubsb
out
push
jns
cwtl
pop
inc
mov
cmp
push
lret
xchg
insb
mov
imul
xlat
adc
adc
add
adc
dec
mov
or
data16
and
shr
into
cmp
sti
dec
adcl
ds
sahf
fimull
pop
add
sub
imul
inc
cmc
mov
addb
pop
and
notl
fs
pop
pop
inc
adc
xor
and
imul
movsb
lods
add
mov
add
and
xor
add
arpl
mov
push
pop
sbb
push
or
pop
adc
pusha
push
xor
pop
loop
pop
sarb
rol
mov
adc
test
stos
push
loop
adc
outsb
call
mov
sub
in
fsubrl
inc
cmpsb
add
cwtl
movsb
out
push
mov
mov
push
int3
lock
xor
lods
jmp
fnstenv
movsl
pop
in
xor
fmuls
faddl
ds
push
pop
jg
sbb
out
xchg
adc
xor
pop
mov
cs
mov
pop
add
or
dec
sbb
sub
jmp
rcrl
xor
jmp
sbb
cmp
out
xchg
int3
fildl
add
sarb
fisubl
in
cmp
pop
clc
jae
loop
lods
jbe
test
jecxz,pt
shrl
push
pop
mov
test
sti
loop
lret
push
lods
jns
in
ret
fs
or
neg
and
jl
sub
sbb
inc
xor
sub
nop
pop
push
les
and
or
sub
pop
call
push
rcl
pop
out
je
pop
push
icebp
xchg
push
mulb
jmp
movsl
sbbl
and
add
pusha
add
les
shll
add
xchg
inc
rcl
lds
rol
pop
das
repnz
add
pop
aad
test
ds
pop
cld
hlt
dec
push
cmp
sti
push
jge
cmp
dec
inc
inc
inc
sbb
jo
cltd
aam
das
cmp
ljmp
add
jmp
imul
dec
cmp
mov
adc
pop
pop
inc
movsb
sub
jns
lret
dec
inc
movsl
mov
sbb
xor
pop
out
addr16
inc
out
sbb
jge
inc
add
cwtl
xlat
out
pop
pop
andb
test
fsts
and
xchg
adc
aas
push
stos
dec
sub
or
sbb
mov
mov
mov
and
inc
add
clc
les
fs
cmpsb
jge
mov
sub
mov
cmp
cmp
dec
sub
aad
jbe
push
aaa
pop
xor
and
jnp
push
fmull
add
jne
jb
js
cmp
cltd
inc
lock
cmp
clc
or
loope,pt
pop
aas
in
sbb
add
and
test
imul
das
scas
sub
sub
mov
sbb
jecxz
mov
mov
data16
outsl
inc
or
stos
add
outsl
or
xchg
stos
add
aas
push
cmpb
sbb
jecxz
or
cmp
addr16
roll
outsb
pop
add
cltd
arpl
stc
into
cmp
iret
mov
pop
adc
cmpb
incl
xchg
mov
test
adc
cmc
xor
bound
fldenv
out
inc
or
cld
lock
lcall
shr
leave
cmp
bound
push
pop
xchg
std
out
notb
pop
lods
jbe
inc
inc
inc
mov
in
arpl
mov
sub
adc
push
orl
loop
cmp
sbbb
sbb
push
push
iret
stc
sbb
jmp
or
sub
ja
shr
stos
cmp
jnp
test
scas
sub
icebp
aaa
js
sub
mov
sbb
xor
fiaddl
pop
push
mov
push
lret
pushf
sar
dec
jns
mov
xchg
data16
scas
pop
add
pop
sub
in
cli
mov
inc
das
jb
jns
lods
in
scas
ror
subb
rcrb
sub
sti
into
mov
inc
add
jb
pop
jmp
push
pop
popa
xor
cs
dec
out
cwtl
stc
xor
cmp
cmp
jmp
cs
icebp
inc
inc
mov
das
sbb
or
pop
add
aas
lods
mov
ss
das
jecxz
sub
mov
or
adc
int3
or
ja
xor
xor
push
in
pop
pop
xchg
dec
cmp
add
cli
orl
mov
adc
push
pcmpgtb
mov
push
and
adc
loop
aam
or
aad
cmpsl
mov
aad
jmp
addl
aam
shrl
sub
pop
jmp
pop
pop
in
or
mov
and
add
inc
mov
inc
add
loope
or
xchg
sub
or
aaa
cltd
dec
fidivrs
push
push
cmp
inc
pop
jmp
fucompp
sub
xchg
push
shr
pop
pop
cmp
push
add
cltd
out
fmul
push
nop
or
incb
and
cmc
or
dec
loope
lret
push
xor
sti
loopne
push
daa
push
push
pop
das
fnsave
lahf
dec
out
jl
iret
stc
movl
xor
das
or
add
jmp
or
movsl
jmp
sub
sub
or
jmp
scas
les
mov
leave
lods
xor
xchg
sti
cld
shr
push
outsb
sub
test
inc
pop
dec
xchg
dec
mov
ljmp
push
jmp
pushf
add
xor
dec
shrl
or
adc
or
pop
xchg
fcoms
in
pop
lds
cmp
pxor
inc
imul
or
pop
neg
daa
jmp
mov
mov
xchg
lahf
ljmp
cmp
ja
pop
lret
jo
and
rorl
leave
jnp
dec
push
add
pushf
mov
dec
leave
sbb
mov
cmp
ljmp
cmpsb
pop
fidivs
push
push
mov
inc
fistpl
test
add
add
nop
leave
mov
enter
call
or
pop
mov
icebp
dec
cmp
enter
jmp
xor
sahf
jbe
jnp
das
lsl
or
xchg
dec
aam
out
mov
add
sbb
lock
fcoml
jns
jbe
pop
lods
xchg
cs
mov
imul
dec
rclb
mov
ret
aam
add
adc
pop
xorl
ret
test
enter
sub
in
and
jp
sub
fmuls
inc
jbe
loopne
ret
test
sub
sarl
addb
inc
jmp
dec
mov
das
inc
test
andb
and
outsb
or
repz
push
mov
mov
cmc
sahf
adc
add
call
lret
lock
sub
add
cmpsb
or
push
out
jp
and
loope
lods
mov
xor
outsb
popa
int
or
fimull
add
daa
cmp
std
sub
je
pop
lock
popf
xor
cld
test
daa
mov
push
mov
les
arpl
and
or
push
push
stc
mov
ret
loopne
jbe
add
inc
mov
jmp
ret
add
pop
pop
mov
sub
xor
movl
lock
adc
and
fs
xlat
dec
out
and
mov
int3
xchg
mov
sub
fs
scas
in
or
add
xchg
fwait
add
ret
adc
js
roll
push
push
cwtl
jns
ljmp
cmp
cmp
insb
sub
out
push
adc
inc
sub
mov
xchg
not
and
fcoml
mov
fs
mov
mov
out
mov
shlb
pop
ret
in
cwtl
or
pop
push
popa
push
loopne
loop
cmp
sbb
xor
fldl
xor
out
cltd
xor
or
jmp
sti
jne
pop
and
sbb
rcrl
jecxz
and
mov
test
xor
xor
pop
out
sbb
ret
clc
pop
fstps
sub
adc
jb
dec
in
test
mov
mov
adc
pop
shlb
and
sub
iret
jb
cmc
add
das
jmp
fldln2
das
xchg
stos
aad
mov
es
sbb
call
add
pop
sti
cltd
push
imul
popa
repz
sub
rcr
fsts
add
fidivrl
clc
rcr
xchg
pusha
add
movsb
gs
dec
mov
flds
inc
adc
jno
loopne
sub
push
pop
out
and
jae
arpl
gs
js
xchg
mov
pop
cmp
mov
out
or
outsb
add
and
adc
mov
out
shll
clc
iret
and
jmp
cmp
cld
jge
inc
pop
pop
dec
imul
add
push
push
ja
out
inc
jmp
add
ja
add
pop
aam
dec
sub
rcr
mov
xchg
jo
mov
xor
rclb
inc
mov
add
sub
jmp
loop
push
repnz
jnp
dec
outsb
popa
leave
xchg
test
cli
out
jnp
out
mov
mov
mov
push
jne
add
loop
xchg
or
sub
outsl
mov
arpl
fldenv
cwtl
movsb
dec
std
scas
and
subl
mov
sbb
and
xchg
mull
jns
pop
aam
andb
xchg
adc
or
xor
in
rcrb
or
push
mov
mov
cli
xor
pop
sbb
jmp
fidivrs
pmuludq
loopne
jbe
inc
push
pop
jg
aaa
ret
fimuls
or
daa
bound
insl
dec
test
or
popa
notb
cmp
pop
mov
shl
or
sbb
xchg
scas
inc
rclw
data16
call
xchg
mov
xor
in
add
xor
sub
icebp
add
scas
cmp
jmp
jne
mov
add
mov
and
or
aam
into
dec
lods
adc
stos
fs
stc
loopne
cmp
sarb
jp
loopne
ret
aas
ds
stos
xchg
sub
das
pop
dec
rorl
jb
adc
jae
inc
pop
push
dec
dec
add
not
xchg
stos
adc
shrb
iret
movsb
je
pushf
clc
das
jmp
mov
hlt
popf
fists
cli
cmpb
mov
xor
sub
outsl
jo
xlat
pushf
push
push
add
call
jmp
pushf
add
ds
inc
push
frstor
bound
add
jmp
push
or
fcompl
dec
pop
mov
loopne
es
jle
and
shr
dec
rcrl
fdivr
and
pop
mov
je
ljmp
das
fdivp
inc
leave
pop
test
push
push
sbb
inc
popf
mov
push
repnz
int3
ljmp
leave
pop
pop
rcr
add
dec
insl
inc
and
inc
popa
iret
loop
dec
xor
dec
ds
cwtl
shlb
sub
push
popf
or
call
out
xchg
mov
cvtdq2ps
iret
inc
lret
pop
adc
inc
mov
das
add
gs
pop
cmp
scas
pop
sub
xchg
call
xchg
dec
dec
ljmp
movsl
daa
jmp
inc
add
or
adc
cmp
es
int3
adc
pop
pop
add
mov
dec
stos
sub
dec
inc
lods
div
cli
xchg
mulb
ret
mov
lock
lahf
jg
mov
roll
push
push
mov
sub
out
roll
out
and
fldt
mov
sidtl
cmp
es
xchg
popf
xchg
mov
ret
add
in
add
push
and
data16
mov
push
cwtl
xor
mov
call
lcall
or
jne
out
and
pop
lret
xchg
fdivrs
clc
mov
add
adc
jae
dec
ss
leave
dec
es
and
cmp
out
ja
stos
in
jge
pop
pop
mov
push
cld
cmp
adc
mov
push
cli
mov
aas
push
iret
stos
dec
push
lcall
push
add
or
pop
jno
mov
jne
dec
cmp
jp
push
dec
imul
jecxz
cmp
outsl
fbld
and
mov
dec
inc
cmp
inc
jne
cmp
pop
mov
dec
mov
jle
ret
push
and
out
push
mov
or
mov
stc
scas
push
sub
xchg
icebp
sub
pusha
data16
xchg
cmp
rcll
pop
xchg
sbb
pop
into
adc
push
adc
incb
cmpsb
jmp
mull
push
icebp
jle
icebp
daa
mov
add
imul
or
repnz
fsubrs
testb
mov
dec
scas
push
dec
xlat
jmp
pop
and
or
mov
cmp
add
rolb
cltd
adc
loope
sti
adc
xchg
jecxz
cmc
and
fsubs
jmp
jge
adc
adc
dec
mov
sub
add
dec
addl
sub
xor
pop
inc
sbb
fisubrs
ja
mov
pop
mov
and
mov
mov
sbbl
mov
into
jp
push
in
sub
push
jmp
add
xchg
pop
sbbb
push
test
add
adc
into
test
inc
mov
in
test
pop
fsubrs
dec
insl
mov
xchg
or
or
push
pop
popf
inc
adcb
fsubs
rcr
push
js
cwtl
mov
mov
push
sub
xor
xchg
jmp
pop
jge
mov
leave
push
ret
out
jp
or
adcl
xchg
imul
adcl
cmp
aad
cmp
push
popa
or
add
out
lret
cltd
das
push
mov
sbb
pop
in
repz
nop
ss
jge
or
cmp
or
add
dec
rcrb
jmp
jns
mov
xchg
pop
or
dec
cmp
rclb
push
and
mov
mov
push
inc
sub
dec
call
test
jecxz
mov
ret
and
pop
push
adc
pop
mov
test
xchg
or
push
xchg
outsl
icebp
sbb
mov
push
pop
sub
add
push
mov
and
pop
loope
mov
jmp
ret
mov
cmp
jmp
repz
jmp
cmpsb
call
sbb
push
add
push
fimull
sub
ret
add
rclb
pop
xor
addb
stos
daa
jbe
jo
sub
push
mov
xor
sbb
pop
imul
adc
rclb
push
mov
sub
push
dec
in
lcall
jo
adc
iret
add
out
je
add
sub
nop
pop
jmp
imul
roll
ja
cmp
ret
pop
jmp
movsl
and
arpl
jb
xor
or
std
jnp
lds
inc
scas
js
xchg
hlt
bnd
cmc
lahf
jbe
leave
xchg
mov
push
pop
subb
inc
inc
add
add
outsl
incl
or
add
ljmp
jne
aad
push
jl
mov
lds
inc
int
fisubrl
sub
adc
xchg
das
pop
xchg
sbb
adc
lods
mov
mov
lods
pushf
mov
mov
adc
add
add
adc
fldcw
sub
add
rorb
pop
mov
les
rcll
popf
sarl
clc
hlt
lcall
push
xor
and
mov
nop
xor
pop
push
sub
call
jo
jmp
loopne
xor
sbb
es
fsincos
loop
and
or
xchg
out
adc
mov
jmp
jb
push
add
loope
inc
or
xor
loop
push
call
aaa
add
jns
or
sub
push
push
xchg
fs
add
mov
or
sub
xchg
addr16
mov
mov
mov
mov
shlb
mov
nop
cwtl
les
scas
ret
arpl
pop
aad
xchg
add
xor
sub
push
cs
cwtl
repz
cmp
sub
sub
ds
dec
scas
xor
push
pushl
push
jmp
jb
pop
pop
icebp
jns
sub
and
adc
xor
sbb
ja
andl
add
jl
sbb
adc
out
jecxz
pop
sub
ljmp
push
lods
repnz
adc
xor
ret
jae
dec
bound
loop
inc
int3
je
inc
sub
add
shlb
inc
cmc
pop
fldl
icebp
inc
mov
adc
xchg
loopne
mov
jl
xchg
dec
dec
rep
mov
or
dec
in
inc
mov
xchg
sub
add
push
jle
in
push
add
cmp
and
pop
pop
lods
pop
mov
xchg
xchg
out
mov
sbb
lds
sub
data16
jp
daa
mov
ja
enter
push
lahf
inc
and
cmp
xor
cmp
add
not
clc
fwait
add
dec
mov
jmp
in
mov
adc
lret
shl
aas
mov
sub
ficompl
shr
mov
adc
pop
lret
loopne
jmp
out
mov
andl
div
cmp
cs
test
or
push
cmp
and
xor
lods
and
pop
mov
jne
xor
popf
mov
repz
call
stos
jns
or
jle
jecxz
inc
pop
or
mov
in
neg
lods
jbe
mov
stos
cmpsb
lods
or
rorl
xchg
loopne
xor
outsl
nop
add
pop
mov
pop
xor
sub
ror
xor
pop
or
scas
inc
or
jmp
mov
pop
or
adc
sub
xor
dec
pushf
sub
adc
dec
sub
or
loop
das
stos
xor
push
sbb
in
aaa
push
mov
pop
out
and
xor
incl
pop
xchg
lret
int
push
stos
into
insb
and
aam
and
pop
mov
rorb
je
repnz
mov
dec
sub
or
sbb
push
cmp
mov
jp
sti
lea
arpl
hlt
mov
xlat
sub
ja
int3
mov
dec
adcl
xchg
mov
mov
fstl
movsb
loope
loop
dec
pop
add
iret
out
negb
mov
xchg
sbbb
xlat
jbe
sub
or
or
pop
add
or
inc
xchg
lret
subb
or
repnz
add
sub
jle
popf
mov
leave
cmp
pushf
or
lock
pop
clc
jb
push
and
loopne
call
mov
imul
xor
loop
je
ret
pop
dec
xlat
dec
fwait
push
sar
ljmp
mov
cli
mov
add
mov
jmp
in
repnz
lock
std
dec
mov
push
imul
pop
dec
out
sbb
ja
cwtl
test
sub
pop
dec
sbb
pop
adc
iret
pop
mov
lret
clc
pop
mov
pushl
mov
or
mov
xchg
pop
or
rcl
fisubl
xchg
or
push
or
pop
rclb
xchg
jne
mov
dec
lcall
cmpb
dec
stos
adc
pop
cmovns
and
aad
repnz
or
cmp
ret
xor
scas
jno
push
loopne
cwtl
roll
nop
jb
add
divl
add
and
push
mov
neg
call
jno
outsb
in
jmp
notl
imul
lods
adc
sbb
lods
addr16
sub
leave
mov
jnp
out
out
mov
pusha
mov
mov
stos
jmp
jle
cwtl
shlb
xchg
stc
cmpsl
sti
shl
popf
xorb
xor
push
notb
inc
je
xor
push
testb
lds
test
cmc
mov
jge
inc
cmp
and
loop
jg
add
sti
pop
std
test
inc
push
cld
notl
push
insb
sbb
pop
ljmp
mov
and
jl
into
subl
bound
fisubrs
or
inc
stos
loope
add
pop
jge
rorb
dec
imul
pop
sarl
pop
inc
scas
add
popa
sarb
cmp
add
inc
stos
ud0
adc
js
pop
ljmp
and
cmp
push
clc
cltd
adcb
daa
int
jmp
es
inc
test
push
jne
test
xor
cmc
icebp
pop
call
xchg
dec
mov
dec
add
jbe
cmp
inc
cs
bswap
ss
jle
or
inc
add
sub
sbb
fiaddl
pop
add
or
jbe
sbb
fistpll
push
rcrl
add
mov
in
inc
movsb
adc
pop
ret
cs
out
add
jecxz
xchg
scas
int3
arpl
add
mov
jbe
loopne
cmp
and
pop
fwait
and
ret
push
inc
mov
mov
sub
out
cmp
in
stos
and
add
mov
or
xor
or
rcll
dec
mov
sbb
sub
pop
jge
mov
cmpl
ja
adc
test
outsl
rcl
iret
push
ret
jo
enter
jo
xchg
nop
or
xor
pusha
cld
je
push
pop
dec
pop
jne
push
divps
push
push
add
lahf
js
inc
sbb
loopne
push
sub
mov
mov
in
cltd
rclb
testl
clc
xchg
enter
loopne
notb
stos
addb
mov
popf
or
or
jne
adc
stc
mov
push
jne
pop
dec
adc
mov
ret
fsubrs
nop
lret
or
mov
aam
lods
cld
jns
neg
push
push
jecxz
stc
or
cs
sub
and
mov
mov
xchg
mov
sbbl
xchg
inc
mov
push
add
orl
mov
inc
jg
add
add
jle
in
loopne
cmp
adc
or
ds
jle
daa
std
add
loope
add
stc
mulb
fcomps
mov
or
jle
dec
test
mov
cmc
or
shlb
xchg
push
repz
pop
pop
aad
aaa
test
mov
movsb
lgdtl
iret
jne
stc
add
xchg
pop
xchg
mov
aad
fnsave
inc
cli
push
push
push
push
aam
dec
fists
jg
mov
lds
mov
das
add
ja
adc
jle
cmp
ljmp
outsl
popa
pop
jmp
inc
dec
add
mov
neg
dec
jmp
push
mov
negb
fdivl
pop
cli
inc
mov
xchg
fists
dec
add
or
das
cmp
xchg
lahf
test
fwait
imul
sbb
pop
std
mov
ljmp
dec
clc
fildll
xor
sbb
dec
pusha
lret
adc
sti
push
out
or
movsb
outsb
rorb
add
fisttps
pushf
lea
xchg
cmp
lods
das
outsl
cmp
call
inc
test
inc
shll
push
jle
jmp
lock
push
jmp
pop
push
push
adc
pusha
sti
int3
push
jae
adc
cmpsb
pop
in
add
ds
jp
or
jmp
or
lret
add
adc
pop
ja
in
push
jmp
repz
arpl
fsubr
sbb
mov
or
inc
xor
enter
and
push
push
loop
idivb
jmp
pop
test
mov
mov
or
inc
out
or
fsub
mov
aaa
xchg
xor
xor
mov
mov
sub
mov
pop
or
add
push
ljmp
lods
add
dec
inc
fldl
add
sub
xchg
pop
dec
dec
adc
rcl
adc
push
jmp
cmc
inc
add
xchg
and
and
inc
popf
ja
movsl
jge
adc
lock
and
jno
inc
ret
in
loope
adc
hlt
enter
call
js
stos
jmp
ja
jge
lds
not
push
jmp
xor
out
inc
mov
mov
jnp
cmp
sbb
popf
or
mov
or
sub
sti
imul
pop
pop
xor
enter
iret
test
push
lock
and
jg
mov
add
sub
adc
clc
jp
scas
sub
sub
roll
cmp
push
repnz
test
idivl
sub
sarl
xor
mov
gs
ret
jmp
mov
cli
cli
add
ja
lock
xchg
xchg
adc
decb
cli
inc
push
pop
movsb
addb
pop
push
mov
and
stos
adcl
ljmp
mov
mov
xor
test
jo
xchg
pop
mov
loope
imul
pop
inc
add
add
xor
cs
or
in
fsubp
es
arpl
push
add
pop
orl
pop
pop
jno
dec
push
ljmp
testb
mulb
cltd
jmp
dec
movsb
pop
je
mov
sarb
mov
cmp
or
test
mov
test
jle
adc
mov
adc
cltd
pop
mov
int
jmp
adc
fdivs
push
cwtl
mov
repz
xor
fisubrl
add
scas
pusha
shrb
cmp
cmp
jne
lods
sbb
add
adc
rcr
mov
add
push
mov
sbb
je
movsb
dec
daa
jo
and
cmp
sub
out
shr
out
or
inc
jmp
push
iret
inc
push
pop
jp
jg
jnp
dec
mov
popa
out
push
sbb
in
xchg
into
jge
cmp
xorb
sbb
shlb
mov
adc
add
xlat
lcall
or
clc
mov
stos
call
dec
out
push
adc
dec
dec
mov
jno
scas
or
nop
add
dec
add
sub
pop
shl
xor
mov
xor
or
add
jg
idivb
or
sub
sbb
xchg
sar
mov
pop
mov
fsubrs
daa
inc
add
out
jae
dec
test
fisttpl
ja
rolb
mov
lret
daa
push
and
adc
push
fcompl
insb
pop
and
out
lds
or
negl
jmp
aam
jno
sbb
push
push
mov
jmp
cltd
pop
data16
mov
out
inc
mov
or
xchg
push
dec
gs
mov
insb
mov
psllw
push
roll
mov
pop
stc
sbb
pop
aaa
int
jne
mov
lds
sub
cs
js
arpl
fs
decb
xorb
pop
imul
ljmp
andl
fnstcw
mov
outsb
add
sahf
inc
enter
punpcklwd
notb
and
ja
jne
dec
mov
jnp
dec
push
pusha
and
inc
xor
aaa
outsl
or
pop
stos
and
lret
sti
push
ret
pop
push
sub
mov
pop
and
daa
jmp
xchg
jl
pop
mov
imul
jo
not
jmp
shrb
rcrl
xchg
loop
out
aam
in
rcr
int3
jp
xor
pop
adc
dec
mov
out
orl
add
mov
orb
popa
push
call
push
hlt
jmp
test
cmp
sub
repnz
pop
into
xor
subb
rorb
and
push
dec
pop
mov
inc
cmc
xor
pop
sub
mov
mov
in
push
popf
cld
cmpl
adc
xor
and
jb
mov
xchg
or
jecxz
mov
and
test
sbbb
repnz
repz
orb
arpl
notb
pusha
cmc
pop
and
pop
fcmovb
lcall
mov
imul
int
fldcw
add
pop
insl
mov
sub
push
mov
fadd
mov
cwtl
ret
push
jne
popl
icebp
js
addr16
idivl
lods
addl
xchg
pushf
mov
dec
incb
lcall
xor
push
ds
subb
mov
pop
push
outsb
addr16
xor
push
xor
push
pop
and
cmp
mov
std
sub
lahf
cmp
int
jle
push
imul
fnstsw
adc
pushf
push
add
sahf
xchg
lahf
test
push
dec
or
adc
inc
inc
or
xor
sbb
cwtl
sbbl
adcl
pop
xor
insb
xchg
add
xor
pop
xchg
push
pusha
dec
mov
dec
mov
dec
pop
push
stc
sub
jb
dec
sub
adc
or
adc
mov
mov
lret
cmc
mov
push
pop
stos
sub
cmovg
shrl
js
mov
and
pop
pop
lods
movsl
cmc
adc
mov
in
das
sub
enter
test
mov
lods
jno
out
nop
sbb
sbb
scas
jge
dec
dec
ja
jno
jecxz
jns
push
mov
ds
pop
pop
mov
jno
movl
lret
in
and
rol
outsb
ja
cmpl
inc
xor
adc
push
out
add
shlb
add
cmpsl
mov
sub
gs
leave
mov
push
pop
iret
pop
xor
sub
mov
ret
mov
sub
js
adc
add
aad
pusha
arpl
xchg
f2xm1
sub
sub
or
cmp
mov
adc
or
adc
and
push
xor
sub
or
aas
pop
and
xchg
shlb
jp
or
add
div
ljmp
add
notl
cld
pop
pop
xchg
jge
pop
shr
out
cmc
mov
cmp
insl
inc
ss
clc
adc
daa
and
push
mov
cli
jle
pop
pusha
add
pop
js
jno
cmpb
push
test
push
sahf
setg
sub
push
or
sbb
or
add
xor
jmp
add
je
inc
inc
dec
add
add
pop
inc
mov
xchg
jge
xchg
scas
data16
mov
push
lret
imul
loop
xchg
shll
xchg
sti
pmulhuw
imul
push
push
popa
pushf
xor
add
dec
jmp
or
jmp
push
arpl
ret
pop
ljmp
data16
filds
loopne
xor
or
and
cltd
out
add
push
mov
adc
jb
insb
fldl
je
mov
pop
jmp
dec
mov
mov
imul
mov
movsb
xor
push
neg
xchg
orb
push
pusha
dec
call
mov
iret
scas
jo
sbb
or
xchg
popa
ds
cmp
add
mov
cmc
movsl
pop
mov
jle
jmp
push
and
sti
imul
jno
ljmp
adc
loope
inc
mov
cmp
call
data16
or
inc
push
std
mov
lcall
add
daa
in
jae
mov
lret
adc
das
fsubrl
hlt
jge
push
push
mov
rcll
insb
lods
dec
std
sbb
jmp
scas
cmp
subb
push
lods
sarl
bound
movsb
enter
jmp
rolb
das
mov
add
or
push
xor
lock
cmpsb
push
testl
in
out
pop
add
and
lds
mov
cmp
dec
pop
sbb
mov
push
pop
jg
dec
jl
cli
pop
les
add
out
scas
andb
jmp
sbb
xchg
incb
push
mov
aas
shl
lahf
push
jle
ror
pop
nop
add
mov
mov
ret
je
push
lret
xor
mov
ret
jmp
lods
jnp
sbb
jmp
mov
fistpl
lret
rcll
pop
shl
mov
pop
sub
repnz
movsb
push
subl
xorb
xor
jae
lret
adc
cmp
push
xorps
fidivrl
push
xor
aas
mov
push
adc
std
add
out
and
push
mov
mov
cld
in
pop
cmpb
jb
jg
movsb
and
dec
jno
adc
xchg
mov
sub
and
shl
fiadds
xor
subl
xchg
pop
inc
dec
fcmovnb
or
pop
in
rorb
pop
jnp
js
into
push
lock
pop
add
adc
sub
ljmp
xchg
push
push
aaa
and
add
push
lcall
dec
lods
insl
rolb
mov
sbb
in
mov
xchg
pop
inc
adc
js
je
loop
xchg
cwtl
mov
mov
inc
jmp
jbe
leave
push
bound
or
pop
mov
adc
lret
xor
and
inc
inc
addb
mov
mov
pop
repnz
cmp
pusha
int
pusha
adc
lods
xchg
pop
lds
aaa
xchg
out
dec
cltd
das
inc
inc
mov
lods
ljmp
sub
sbb
jno
sbb
cld
sbb
jmp
ljmp
cmp
popa
dec
pop
mov
pop
mov
push
pop
add
aaa
sbb
xor
push
gs
popf
pop
adcb
or
leave
mov
icebp
mov
mov
mov
push
mov
stos
scas
mov
jns
out
adc
loopne
or
jecxz
dec
sti
xchg
cmc
stos
mov
push
jae
pop
add
fbld
xchg
mov
es
ret
push
sbb
lret
push
ja
pop
sbb
enter
fbstp
pop
sahf
lcall
pop
pop
aaa
test
data16
jg
cmpsb
sar
lahf
push
lea
and
sbb
adc
dec
jl
cmp
dec
and
add
jae
adc
pop
push
test
ljmp
push
xlat
xor
sub
ret
sub
cmp
mov
outsb
in
or
fs
and
sub
rcrb
idivb
icebp
popf
inc
push
aas
adc
jmp
dec
xchg
mov
pop
repnz
add
ret
in
repz
sub
sarb
hlt
add
fwait
jmp
mov
stc
bound
cmp
mov
shl
or
xor
push
adc
adc
adc
movsb
cmc
jmp
lock
jle
sbb
daa
xor
or
fldcw
xor
add
jne
out
cmpl
and
or
add
dec
je
or
das
and
faddl
xor
pusha
pop
outsl
addb
fsubrs
stos
adcb
and
inc
mov
outsb
in
jp
jne
and
mov
push
imul
adc
sub
popf
test
mov
and
jmp
insb
jle
cld
outsl
mov
lods
jmp
repnz
bnd
push
push
adc
mov
cmpb
xchg
jnp
xor
pop
mov
pop
adc
xor
adc
pop
inc
adc
dec
ret
test
std
push
out
push
dec
mov
and
add
jmp
cltd
test
in
sub
cmp
xor
pop
jmp
sbb
sub
or
jnp
adc
repz
jge
mov
subl
in
xor
fidivrs
mov
outsl
stc
les
int
fsubrl
addb
into
cli
jns
outsb
push
or
adc
jo
or
xchg
sbb
mov
dec
or
iret
lock
enter
and
xchg
pop
pushf
addb
rclb
mov
nop
mov
mov
or
and
js
adc
mov
andl
mov
xchg
sbb
pusha
jnp
jns
dec
int3
mov
cli
pop
sub
shr
push
mov
dec
addl
sub
fsubr
add
xchg
adc
lcall
lods
mov
or
push
add
mov
cmp
dec
xchg
decb
test
mov
in
add
cld
add
or
jmp
dec
ret
xorb
clc
movsb
test
fidivl
xchg
pop
ror
dec
in
adcb
jg
sub
cmp
mov
les
das
sub
xchg
insb
mov
ret
add
fstpt
lods
sbb
add
add
jmp
loop
mov
pusha
mov
mov
and
xchg
add
ficoms
data16
inc
adc
into
movsb
xchg
adc
add
repnz
add
mov
setl
mov
outsb
cmpsl
cmp
popf
add
mov
sbb
movsb
mov
push
ret
lahf
rcrl
add
jno
or
popf
fsubs
xor
ret
pop
in
sub
inc
fnsave
jg
icebp
jmp
xor
inc
testb
test
or
shr
out
and
dec
sub
adc
mov
sub
rclb
jmp
loope
push
pusha
ja
popa
cmp
sub
dec
cwtl
or
enter
stos
in
repnz
mov
fdivrs
or
pop
or
dec
mov
adc
sub
cli
dec
cs
mov
xor
jmp
xor
jge
mov
jmp
cmp
dec
ds
dec
decl
negb
pop
and
bound
push
loopne
mov
sub
push
push
pop
pop
scas
stos
add
ss
cmpl
mov
cmp
inc
adc
push
and
jl
pop
sub
pop
rolb
sub
cmpsb
sub
or
push
mov
add
pusha
test
call
stc
cmp
lea
js
out
push
fdivl
scas
mov
sub
rorb
rcrb
pusha
lret
sbb
push
jmp
daa
push
shlb
inc
add
and
addr16
sub
mov
add
xchg
push
adc
xor
jmp
mov
inc
insb
dec
sbbb
pop
loope
cli
push
notw
pop
cmc
sbb
bound
popa
fsubs
jl
into
add
scas
je
mov
stos
adc
out
fsubr
pop
clc
sbb
fldcw
push
sbb
push
jnp
enter
notl
cs
divb
bound
jnp
test
jo
mov
sahf
sbbb
out
bound
sub
out
push
jmp
sbb
lahf
jl
add
adc
cmp
cwtl
mov
loopne
pop
cmp
or
push
jne
les
lahf
jle
and
pop
add
add
push
shlb
push
pop
push
mov
mov
hlt
mov
inc
ret
or
test
ljmp
jo
cmp
pop
add
lea
inc
stos
sub
push
andl
jge
pop
sub
fs
hlt
or
mull
jge
std
push
lret
pop
pop
sbb
push
push
ret
pusha
outsl
sub
negw
in
shll
sahf
lahf
xor
mov
push
add
add
dec
dec
jmp
shlb
lret
adc
inc
testb
mov
mov
inc
neg
push
or
movsb
int3
cmp
jo
popf
shrl
push
push
sarl
jmp
sti
jl
or
fcmovne
das
jecxz
leave
xchg
inc
shlb
in
add
sub
rorb
add
add
sbb
cld
xchg
adc
das
ds
popa
sub
jecxz
sub
data16
add
or
push
outsl
sbb
pop
xor
add
mov
jbe
mov
and
loope
ret
xor
stos
loopne
int
or
and
cs
sahf
inc
jmp
and
shrl
fdivr
xchg
lcall
popa
mov
ficomps
jmp
cld
push
mov
outsl
xchg
cmpb
add
add
fldenv
sahf
mov
sub
pop
shll
shlb
jne
push
shr
inc
jmp
mov
fisubrs
loope
or
jmp
and
in
add
mov
data16
xchg
fimuls
jp
lock
hlt
repnz
pop
pusha
ja
sbb
in
push
fists
std
pop
add
add
mov
mov
push
xor
jo
push
or
pop
mov
jmp
out
cmp
mov
push
es
push
mov
dec
cwtl
jl
xlat
xor
xor
sbb
jge
inc
dec
into
add
das
pop
xor
scas
cld
cld
loopne
andb
pop
dec
push
in
and
cwtl
or
push
in
or
cmpsb
addb
sbb
sti
pop
lds
mov
outsl
into
repnz
fisttpll
enter
push
pop
pop
inc
xchg
orl
mov
inc
andl
rorl
in
push
ret
add
push
jmp
xlat
pop
jbe
ret
add
mov
and
mov
jmp
and
and
mov
mov
testl
mov
and
dec
xlat
xor
push
psubsw
adc
jle
rorb
jnp
push
cmp
repz
jne
sar
pop
neg
adc
les
cli
repz
jmp
xor
clc
inc
leave
scas
xchg
test
outsb
outsb
add
loope
and
dec
sbbl
sub
scas
mov
loope
aad
add
aas
dec
test
mov
sbb
and
push
jmp
in
mov
xor
or
pusha
cmp
lsl
out
jnp
das
or
test
adc
stos
lock
inc
shll
lea
fdiv
into
neg
outsb
xor
loop
sub
and
popf
add
fsubrl
sub
adc
mov
jae
xor
pop
fwait
cmpl
mov
mov
sbb
mov
cvtps2pd
filds
pop
inc
add
dec
aas
pop
loope
sub
pop
lods
aas
ret
push
push
sub
xor
pop
out
adc
cmc
mov
je
jecxz
or
fcoms
dec
pop
dec
jo
sub
pop
xchg
xchg
shr
or
jmp
sub
xchg
push
sub
std
mov
xchg
sub
lds
sub
jmp
pushf
xor
dec
or
mov
and
lods
inc
icebp
jl
dec
mov
sub
pop
mov
push
das
out
or
enter
pop
push
jecxz
pop
out
adc
dec
shll
pop
addb
fidivs
cld
cld
adc
ret
jb
sub
popa
stos
dec
lods
cmpsl
add
add
sub
and
orl
cmp
add
adcb
ss
sahf
idiv
add
mov
jmp
and
icebp
mov
adc
and
aad
dec
fists
rcrl
mov
shl
xor
ds
icebp
or
int3
jbe
aad
mov
jl
jo
or
inc
pop
add
jbe
add
ja
mov
xchg
add
dec
mov
pop
cmp
and
sub
mov
cmp
int3
lock
repz
fdivrs
movsb
and
or
lret
push
roll
movb
lds
movl
xchg
cwtl
hlt
lcall
enter
mov
cld
jb
dec
mov
jge
je
fmuls
mov
gs
xor
imul
cs
lret
and
testl
sti
mov
dec
xor
sbb
outsl
inc
loopne
adc
movsb
pop
and
jle
dec
ret
cmc
out
fildll
mov
adc
jecxz
aad
outsl
mov
cmp
dec
push
fwait
dec
ljmp
loopne
data16
adc
dec
dec
or
leave
pop
shrb
xor
xchg
add
leave
adc
clc
push
test
pop
mov
mov
ret
ja
mov
pop
xor
add
nop
jge
cli
push
pop
daa
push
sbb
dec
or
roll
test
mov
jbe
push
test
inc
mov
jo
loope
xchg
mov
and
sub
xchg
sub
push
mov
and
mov
repnz
adc
stc
pop
add
shr
push
mov
add
sub
xlat
dec
ficoml
into
test
pop
icebp
dec
push
movsl
or
add
push
sub
add
test
jbe
sub
xchg
popf
mulb
sbb
divb
fdivrl
inc
sbb
dec
int3
aaa
push
mov
xor
jg
or
leave
cmp
push
pop
pop
jno
sbb
mov
in
jge
adc
sbb
lods
xor
leave
roll
push
ffree
adc
lock
push
movsb
mov
push
or
mov
dec
jg
int3
adc
out
in
mov
push
out
movsl
pop
pop
push
nop
pop
or
mov
test
mov
rcr
pushf
adc
or
mov
inc
test
xor
inc
adc
scas
mov
xor
cwtl
mov
adc
push
or
leave
aam
into
and
out
in
sbb
scas
xchg
mov
loopne
jmp
loop
sbb
mov
pusha
bound
sbb
cmp
in
mov
mov
dec
repnz
fmuls
fstps
push
xchg
xorb
leave
movsb
or
push
push
jl
adc
sbb
ljmp
in
xchg
dec
adc
add
pop
push
rorl
jg
mov
push
mov
adc
lock
jmp
push
mov
lock
xchg
fcomi
rclb
sub
push
push
mov
jo
in
pop
and
popf
mov
lds
or
ds
cmc
clc
dec
jnp
xor
popf
out
mov
pop
insb
adc
inc
jno
je
add
jg
inc
xor
sub
xchg
pop
mov
scas
cmp
cli
push
mov
cld
sbb
jge
sbb
mov
mov
add
call
sbb
popf
nop
dec
shll
or
add
or
cmp
mov
cltd
mov
mov
push
mov
xchg
mov
and
movsl
mov
xchg
popf
jmp
cmp
rolb
push
mov
mov
or
adc
push
push
jmp
pop
dec
loop
test
xor
hlt
int
mov
gs
mov
add
push
cmp
call
popa
and
pop
mov
push
jle
add
jp
jl
sub
push
jmp
aad
adc
sbb
mov
std
outsb
add
sub
cwtl
cmp
pop
pop
pushf
aad
inc
pop
sub
arpl
mov
pop
fs
fadd
loop
aaa
add
testl
dec
jge
jae
lcall
jb
test
ret
jae
cmp
add
cmp
push
add
jbe
sbb
shr
push
jmp
imul
dec
dec
les
sub
pusha
add
fcompl
lahf
lcall
pop
scas
in
dec
hlt
stos
mov
jne
aaa
lret
push
les
sub
jl
shr
imul
clc
xor
scas
mov
pop
mov
pop
adc
shl
push
ja
inc
lea
mov
jbe
add
rol
call
hlt
pop
pop
loopne
push
inc
xchg
mov
inc
xchg
add
shlb
sub
jmp
dec
std
ret
test
sbb
out
mov
cmp
jle
dec
mov
pop
in
pop
sub
jbe
dec
cmp
pop
dec
test
out
test
fisttps
cmp
scas
repnz
mov
xor
negb
rorb
mov
pushf
gs
cld
test
lret
push
ficoms
sbb
cmp
enter
cmp
call
jb
or
adc
xor
xor
sub
fisubs
pop
dec
or
push
cmp
cld
stos
dec
rclb
or
or
bound
xchg
subl
pop
mov
adc
add
lock
mov
in
xor
pop
daa
fucomp
or
sbb
fdivl
rorb
call
sarb
stos
pusha
ud2
jp
pop
mov
inc
mov
adc
das
jl
loopne
loop
sub
xchg
mov
pop
pop
test
dec
push
das
sub
inc
movsb
mov
jmp
fnsave
cmpsl
mov
faddl
add
sub
fs
mov
sub
adc
and
sbb
cmp
imul
xor
lods
cs
dec
sbbb
xchg
lahf
pop
and
fisttps
cli
xchg
add
xchg
mov
push
shl
sbb
jg
or
pop
jno
fldenv
clc
add
inc
sti
push
les
leave
stos
and
adc
repz
pop
or
lret
sub
inc
xchg
bound
addl
or
pop
cld
push
add
or
push
and
sarl
add
fs
mov
mov
stos
add
js
pop
ds
pushf
or
pop
jg
adc
inc
xor
sahf
loop
inc
icebp
mov
cs
mov
or
cmc
mov
in
push
jmp
out
rcll
shll
imul
xorl
jbe
jmp
inc
fdivrs
cs
jne
pop
test
inc
mov
pop
push
mov
inc
cmpsl
xchg
adc
in
mov
sub
add
jnp
rorl
cmpsb
add
push
movsb
sub
jmp
cwtl
mov
sub
jmp
cmp
xchg
lcall
in
dec
in
and
scas
cmp
mov
repz
sar
enter
inc
addr16
mov
add
push
xchg
mov
sub
mov
sbb
out
dec
stos
lret
mov
and
sbb
movb
add
testl
pop
mov
outsl
mov
imul
sbb
imul
and
xchg
aam
pusha
repz
add
dec
push
ja
out
call
loop
inc
test
out
je
push
add
das
lds
leave
std
inc
sub
dec
and
movl
mov
movsl
xchg
sbb
not
add
rcll
movsl
jae
mov
fdivl
imul
test
push
imul
pop
xor
mov
or
aad
dec
les
push
stc
std
call
jl
push
or
add
jmp
push
ret
dec
bound
jmp
fstl
cltd
adc
mov
push
ret
push
push
mov
repz
int
push
xchg
dec
cmp
jmp
and
push
mov
jle
roll
cltd
push
stos
and
mov
pusha
ss
pusha
cwtl
mov
xor
mov
adc
jmp
add
lock
mov
dec
xchg
inc
pusha
lahf
fsubl
push
jmp
lret
xchg
movsl
aas
mov
jmp
rorb
lds
or
sub
sbb
inc
or
pop
ljmp
cli
adc
cmc
jge
sub
loopne
cld
sbbb
sub
and
in
fisubl
xor
add
pop
inc
push
mov
xchg
outsb
movsb
jmp
pop
cld
pop
iret
movsb
out
cwtl
jne
and
dec
sbb
and
adc
rol
out
xorl
pop
jl
or
addr16
idivl
push
xchg
rcrb
addr16
mov
loop
or
mov
push
jmp
lods
push
lahf
es
es
push
imul
mov
lret
or
jge
sub
xchg
pop
sbbl
mov
mov
mov
jp
xor
jmp
push
push
scas
adc
scas
test
inc
sbb
adc
and
or
stos
testl
or
jmp
loop
ficomps
jbe
shlb
orl
inc
lret
mov
and
lock
pop
pop
or
add
xchg
sbb
jecxz
or
sub
adc
sar
xchg
mov
ljmp
shll
dec
add
inc
or
inc
xchg
and
adcb
push
jb
adc
pop
cmp
cmp
or
add
cmp
and
and
xchg
mov
cmp
ret
or
xor
xchg
shlb
cmp
sub
ja
addr16
jmp
lret
pop
jne
add
sub
nop
into
or
orl
enter
neg
clc
movd
loop
pusha
repnz
mov
pushw
pop
add
xor
sbb
mov
sub
dec
aas
sbb
int3
clc
push
sbb
add
aas
push
xchg
leave
push
ds
out
push
pusha
jo
mov
rolb
and
and
push
xor
and
inc
push
ret
sub
inc
jb
and
dec
loop
and
xchg
or
dec
cmpsl
inc
orb
add
dec
jmp
or
ficoms
ljmp
inc
cmc
jge
aas
shr
loop
mov
movaps
inc
mov
mov
daa
cli
lds
out
icebp
sbb
cmpsl
aad
scas
jecxz
xchg
not
adc
or
push
mov
fldl2e
xchg
push
rolb
dec
jno
cmp
aas
loop
or
fcmovbe
adcb
divps
sub
add
mov
mov
push
bound
enter
push
dec
stc
mov
gs
sbb
cwtl
pop
loop
pop
cmp
ret
sarb
push
mov
sarl
fimuls
fisttpll
dec
jmp
push
out
cld
push
lds
jmp
pusha
addr16
jmp
scas
pop
jnp
jmp
arpl
and
test
or
cmp
pop
jl
lock
xchg
cmpsb
jmp
push
push
popf
jp
add
mov
mov
idiv
movsl
jl
inc
push
or
mov
rol
or
push
pusha
inc
ds
add
pop
sub
sub
shr
pop
cli
arpl
sti
loope
arpl
daa
roll
jp
int3
ljmp
lcall
jne
nop
clc
in
ljmp
push
test
and
sub
das
icebp
daa
imul
lds
fimuls
sbb
xor
mov
mov
cmpsl
push
dec
repz
in
xchg
and
push
mov
add
cmp
add
pop
add
sub
mov
jmp
nop
and
jle
pop
imul
movsb
mov
scas
clc
jmp
das
call
add
pop
mov
call
pop
rorb
mov
xor
add
std
fs
push
lock
bound
mov
add
scas
and
test
mov
test
adc
push
popa
fldenv
in
test
jg
xchg
ja
mov
ret
sub
add
jge
mov
push
xchg
cs
and
inc
icebp
neg
dec
aad
outsl
or
and
sub
pop
popf
jns
xchg
add
daa
xor
pop
and
lahf
jbe
repnz
rcrl
inc
xchg
decb
scas
add
pushf
inc
push
xorb
cmp
test
pop
add
pop
cwtl
lock
add
dec
lret
repz
add
and
mov
cltd
xchg
enter
loope
or
mov
movsb
dec
inc
mov
mov
ja
shr
mov
lret
enter
bound
in
pop
push
push
mov
push
and
adc
or
or
out
lret
pop
or
jo
add
repz
mov
pop
mov
sbb
into
adcb
js
dec
pop
out
mov
adc
stos
fs
add
enter
nop
mov
sbbl
bnd
dec
inc
mov
in
cmp
mov
sub
cmc
xor
cmpsl
lods
mov
dec
outsb
mov
inc
dec
popa
inc
sub
cld
and
gs
xor
repz
dec
test
repnz
ret
add
push
sub
repz
aad
pop
jnp
mov
inc
lcall
ret
cmp
das
jl
pop
das
shl
xor
lret
lret
xor
jmp
inc
bound
push
daa
fiadds
lods
ret
cmp
inc
or
pop
inc
adc
and
out
and
add
daa
inc
lret
dec
xor
push
add
adc
or
loop
repnz
cmpl
cli
sarb
inc
add
fldl
mov
ljmp
and
jmp
mull
jmp
ret
in
pushf
xorl
fsubrl
lahf
cmp
xor
int3
xor
fisttpll
jmp
jns
imul
pop
mov
add
rorl
mov
adc
std
add
xor
jmp
mov
jns
xchg
cmp
xchg
leave
inc
xor
lds
inc
mov
call
loope
sarl
hlt
inc
mov
scas
inc
pop
push
into
sub
sub
xor
pop
dec
icebp
insl
cmp
jae
xchg
int
push
jne
jae
jg
push
add
clc
fisubrl
lret
add
inc
xor
adc
mov
scas
mov
inc
push
in
mov
out
sub
stos
test
xorb
cwtl
or
jae
push
xor
sbb
sbb
pushf
into
out
xor
inc
pop
pop
cmp
sbb
inc
ret
jns
mov
mov
mov
movsl
inc
aad
mov
pushf
fwait
sub
dec
dec
add
pavgw
mov
adc
xchg
gs
pop
inc
das
pop
test
or
jmp
mov
in
mov
add
aad
jmp
mov
stos
push
not
and
push
xor
add
les
sahf
and
add
push
lret
bound
pop
test
mov
rcr
cmp
pop
test
out
inc
stos
jmp
adcb
xchg
pop
enter
addl
push
push
push
cld
nop
xchg
and
push
sbb
mov
jmp
inc
div
out
inc
dec
lods
lcall
jnp
jmp
outsb
inc
add
pop
mov
popa
push
lods
ret
jae
cmp
repnz
out
out
push
std
and
ret
neg
call
jmp
mov
xchg
bnd
add
dec
movsl
std
in
xor
jne
and
pop
xor
fdivrp
mov
js
js
mov
sbb
dec
pop
push
fstpt
shl
stc
test
and
mov
xlat
mov
mov
cmpsl
mov
and
add
in
icebp
mov
jb
into
xchg
test
xchg
int
add
stos
xchg
jns
jp
mov
les
hlt
cs
sub
imul
pop
mov
adc
add
and
insb
je
aad
sahf
cltd
inc
mov
inc
dec
in
gs
call
addl
mov
cwtl
lods
loope
add
mov
shl
mov
add
aad
repnz
or
pop
pop
push
push
imul
xor
inc
out
mov
jae
int3
ficoms
dec
adc
mov
push
or
dec
cmp
cmpb
cmp
adc
or
aad
test
dec
or
cmp
sar
and
mov
cmp
movsl
xchg
js
xchg
out
lahf
add
push
sbb
andb
ret
imul
mov
and
dec
arpl
testb
jg
in
mov
in
or
mov
adc
lahf
sbb
stos
pop
es
xchg
test
aas
imul
sub
or
pop
lret
sub
xchg
insb
popf
push
xchg
pop
test
and
jge
xchg
pop
jmp
pop
adc
jo
sbb
mov
inc
decb
cmpsl
adc
cmp
adc
dec
lret
and
daa
mov
mov
adc
imull
xor
in
lock
rcrl
dec
inc
mov
ret
xchg
mov
shr
pop
lahf
fildl
sbb
adc
aad
loope
stos
or
push
clc
push
pop
sub
or
pop
stos
mov
pop
sub
pop
or
mov
mov
add
jnp
adc
pop
or
push
shl
jne
jg
pop
in
mov
xor
cmp
xor
adc
add
fdivrs
imul
pop
mov
adc
mov
jmp
pop
adc
xchg
add
sti
mov
xchg
or
jge
push
imul
and
out
inc
mov
rclb
dec
loop
sti
push
sbbl
adc
dec
inc
mov
je
xchg
push
bound
jmp
jne
js
notl
mov
or
imul
mov
insb
lahf
fistpll
cld
push
subps
jmp
fimuls
fisubl
jne
sarb
pop
stos
shll
in
add
roll
mov
jmp
mov
xchg
mov
mov
xor
xor
jmp
xor
cmp
ljmp
inc
jl
addr16
xchg
adc
push
push
inc
push
xor
cs
loopne
cmp
push
dec
or
dec
sbb
mov
sub
fs
or
cmp
inc
movsl
dec
push
inc
mov
mov
stos
mov
in
ret
out
inc
fldl2e
xchg
leave
cmp
nop
add
mov
push
and
std
ret
jl
jl
sbb
movsl
mov
push
add
popl
je
add
xor
or
push
imul
mov
ljmp
pop
addr16
stc
ja
inc
insb
push
ret
xchg
pop
cmpsl
pop
aaa
add
inc
pop
lahf
add
jecxz
imul
add
sub
cmp
lea
add
inc
movsl
sbb
data16
adc
insb
mov
lock
add
sub
cld
jg
sbb
mov
add
in
cwtl
sbb
std
test
inc
add
pop
leave
movsl
orl
sub
jb
pop
cmp
xchg
sbb
orb
jne
sbb
fisttpll
inc
mov
add
mov
mov
inc
cmp
movsb
mov
mov
imul
sub
scas
popf
xchg
inc
and
sbb
inc
xchg
scas
sub
jbe
inc
and
add
dec
jmp
add
gs
add
outsb
jo
dec
and
mov
pop
movsb
pop
lods
je
adc
inc
cmp
or
filds
push
adc
push
pop
sbb
sbb
jg
sbb
loop
or
pusha
adc
testl
jae
fcompl
loop
adc
mov
icebp
add
lahf
inc
xchg
rcrl
add
sbb
fmuls
pop
in
push
push
or
dec
jle
outsl
stc
or
mov
add
mov
icebp
ret
or
push
jne
inc
imul
add
xchg
stc
push
or
mov
das
xchg
sarb
fcoml
pusha
setnp
dec
push
loopne
push
and
add
cmpsl
cmc
shrb
stc
xor
aad
lea
mov
insb
outsb
daa
cmp
pop
add
mov
daa
add
ret
lahf
add
push
fisubs
nop
pop
mov
adc
fyl2xp1
push
mov
jle
and
shrl
jno
xchg
into
daa
jmp
cs
clc
add
mov
js
lahf
or
add
mov
leave
push
rorl
repnz
ret
int
movsb
movsb
add
add
aam
pusha
shll
enter
fidivs
lods
add
hlt
jo
or
pop
xor
insl
add
lret
xlat
xchg
xor
adc
mov
sub
mov
mov
add
xor
inc
or
inc
xchg
sub
add
jecxz
call
pop
add
loopne
inc
das
sub
sub
add
pcmpeqd
adc
add
xchg
cmp
mov
cmpsb
add
xchg
xlat
test
mov
shrb
sub
hlt
stc
sbb
adc
das
jo
push
xor
dec
adcb
mov
add
fsts
add
out
or
gs
jg
fwait
xor
cltd
dec
push
jae
test
adc
and
or
in
or
cmp
cltd
pushf
add
popf
lahf
int
ljmp
pop
fadds
mov
dec
pusha
inc
or
xchg
jno
fisttpll
subl
xchg
add
and
push
cmp
push
iret
data16
sub
or
add
mov
ljmp
mov
aas
aam
xchg
and
aad
add
insl
nop
mov
or
test
dec
and
xor
xchg
add
push
jge
cmpsb
mov
lea
test
out
fldl
or
xor
pushf
sbb
xchg
xlat
cld
sti
add
adc
sub
cld
enter
add
ror
and
fmull
xchg
mov
popf
add
mov
fiadds
movsl
sbb
push
sub
adc
mov
gs
inc
xchg
xchg
add
into
rcrl
sbb
adc
rorb
adc
loop
fisubrs
cwtl
sbb
xchg
ret
adc
repz
add
mov
jb
mov
ficomps
pop
cmpsb
aaa
sub
push
into
pop
xchg
loopne
das
or
daa
mov
dec
lds
dec
cmpb
mov
sbb
or
and
inc
pop
es
adc
add
or
mov
dec
cwtl
addr16
cmp
nop
xor
cs
pop
mov
cmpsb
jnp
mov
sub
xchg
adc
loopne
jge
dec
enter
mov
orb
adc
pop
inc
inc
xor
or
add
adc
xchg
xchg
cmp
clc
ret
pop
and
repz
or
fcmovne
or
fsub
mov
push
cwtl
pop
inc
cmp
lods
push
xchg
sbb
mov
jp
fisubrs
iret
fsubl
dec
and
jecxz
arpl
cwtl
pop
push
sbb
daa
cwtl
add
xor
and
xchg
push
inc
sbb
loope
bound
jo
out
xchg
enter
in
fs
subb
repnz
addr16
das
add
fnstsw
ds
rolb
xchg
in
loopne
addr16
xor
sbb
lock
xchg
addr16
push
jmp
stos
sbb
inc
icebp
dec
dec
push
adc
sbb
insb
add
fs
mov
and
or
das
cmp
loop
push
jmp
std
inc
movsl
push
mov
cmp
add
mov
pop
sbb
in
lret
pop
cmp
mov
mov
mov
or
mov
out
jl
std
loopne
inc
and
stos
lock
pop
mov
xchg
cmp
mov
pushf
rolb
mov
sub
xlat
xorb
adc
push
fucom
mov
mov
pcmpgtd
add
bound
nop
mov
and
and
loope
cld
lock
movsb
roll
fdivl
push
pop
mov
add
cmp
sbb
cmc
add
and
sbb
inc
push
or
cwtl
fadds
jge
mov
hlt
pusha
jbe
cmp
and
add
fisttpll
out
lret
pop
loopne
push
in
fmuls
mov
cmp
daa
popf
adc
or
push
add
lcall
jl
gs
ss
and
shlb
jno
mov
sub
popf
inc
orb
adc
inc
outsb
add
testb
sbb
mov
lds
pop
insb
enter
enter
cmp
pushf
xchg
pusha
or
mov
scas
arpl
and
hlt
pop
ficoml
jnp
lea
sub
roll
add
dec
dec
icebp
or
js
jecxz
outsb
push
jmp
sbb
sbb
stc
push
or
jbe
repz
push
xchg
dec
mov
rorl
mov
xor
jb
adc
ret
insb
sbb
inc
add
xchg
fstp
add
sub
add
add
int3
aam
pusha
iret
push
in
ja
pop
pushf
scas
cmpw
sbb
add
xor
outsb
xchg
cmpsl
nop
push
sbb
push
ss
dec
shrb
es
xor
js
daa
mov
sahf
push
aam
sahf
or
bound
inc
cmp
sbb
je
and
add
arpl
pushf
xorl
mov
sbb
test
std
pop
and
sub
push
les
jl
jnp
enter
adc
cmp
add
or
ret
pop
cmp
add
add
jg
out
push
lock
dec
testl
loope
add
and
sti
adc
xor
push
pop
cs
add
fsubs
lea
add
xor
sub
push
xor
add
aam
pop
add
pushf
dec
sub
mov
in
divb
add
inc
mov
jae
fisubrs
loope
or
test
subl
imul
dec
lock
xchg
xchg
aam
sbb
push
orb
insl
sub
call
xor
push
mov
mov
dec
inc
cmpl
cwtl
cmp
xchg
stos
mov
lret
cmc
xchg
mov
and
sbb
rolb
jnp
dec
fidivl
xchg
and
out
pop
pop
add
push
loope
das
mov
or
jnp
mov
add
add
adc
les
xorb
iret
mov
pop
inc
sti
add
jns
sbb
ja
mov
pop
sbbb
incl
sbb
test
shr
cmc
mov
pushf
pop
inc
mov
or
clc
je
and
cmp
es
jae
push
mov
mov
jns
out
push
insl
jo
inc
pop
push
sub
xor
cmpsb
enter
or
in
push
push
rorl
adc
popa
clc
js
int3
or
fmull
inc
lds
cmpsb
or
inc
inc
add
dec
sub
stos
push
fdivs
mov
cmp
add
sbb
push
sbb
int3
cmc
add
in
fcmove
popa
dec
loope
std
mov
fwait
sub
movsb
cmp
sbb
lea
sbb
fwait
leave
rcrl
aas
fsubr
mov
push
rcrb
add
shr
lods
mov
cmpsb
push
std
inc
and
push
inc
or
jmp
xchg
push
dec
push
mov
js
adc
cmp
push
mov
or
mov
cmp
push
and
pop
or
xor
pushf
frstor
cli
mov
enter
and
lea
sub
push
fisttpll
stos
mov
js
bound
xor
jnp
mov
dec
test
jp
scas
sahf
xor
mov
aas
xor
inc
or
repz
add
inc
add
push
inc
arpl
and
or
or
mov
fisttps
xchg
bound
insl
cmpsl
cmp
mov
adc
push
hlt
jne
sbb
imul
or
pop
mov
xchg
or
xor
pusha
add
pop
add
fdivrs
pusha
xor
mov
xchg
out
adc
insb
mov
add
push
fiaddl
sbb
dec
jmp
push
insb
or
incl
push
push
test
mov
add
leave
jmp
jne
movb
push
push
jmp
dec
xlat
je
sub
mov
xor
sbb
dec
add
mov
lea
add
enter
rep
cmp
push
jle
fdiv
xorb
fs
rol
xor
mov
xchg
cmp
les
and
mov
shlb
dec
add
mov
push
xchg
and
push
xchg
add
roll
out
pop
push
add
xor
test
sbb
mov
pusha
pop
js
inc
insl
add
dec
cmp
jp
mov
sub
xchg
es
jg
pop
sub
add
mov
or
pop
popa
pcmpgtd
pop
dec
mov
lret
shrl
lcall
insl
fimuls
or
adc
cmp
rcl
imul
adc
inc
shl
jg
test
xchg
sub
and
bound
pop
and
sbb
daa
add
mov
sbb
sub
mov
cmp
sbb
jae
shrb
add
push
imul
gs
insb
or
push
add
and
pop
popaw
test
xor
cmc
jns
add
cmp
testl
das
cli
leave
add
dec
jl
call
lret
cmp
jp
bsr
and
jns
sarb
or
das
in
fcmovb
or
adc
adc
dec
cltd
sub
daa
xchg
adcb
pop
pop
and
mov
das
repz
insl
xor
leave
xor
mov
mov
xor
rol
cmc
dec
or
int3
xchg
fnstsw
sub
popf
ds
sbbb
add
lock
shr
inc
cwtl
add
dec
jp
xlat
nop
jmp
or
imul
insl
sti
test
arpl
push
std
fldl
mov
lret
add
mulb
adc
add
xlat
out
inc
or
add
in
pop
mov
add
insb
jo
fsts
roll
mov
les
jo
jl
mov
xor
cmpl
or
sbb
inc
pop
xor
mov
call
jno
daa
adc
das
push
cwtl
sub
mov
xor
arpl
fisubs
jle
pop
nop
push
es
lods
jecxz
fsub
pop
nop
cli
sub
xor
mov
push
pop
fs
mov
sub
pop
call
mov
push
scas
cmp
cs
dec
lods
int3
in
jnp
icebp
cwtl
sbb
push
push
mov
pop
push
insl
cmp
push
mov
mov
out
jmp
jmp
cmp
filds
push
sahf
aam
jg
sbb
sbb
lds
jmp
xor
aad
dec
icebp
jg
leave
repz
add
test
add
out
xchg
jae
mov
mov
sbb
inc
jo
outsl
mov
jae
dec
lahf
subb
repnz
add
in
jg
inc
mov
aaa
mov
add
adc
and
cmpsb
iret
jns
add
add
push
fbstp
rcl
daa
dec
and
pop
inc
imul
sbb
pop
inc
cmp
and
sbb
loope
imul
jmp
jg
call
arpl
dec
rclb
pusha
jmp
dec
xor
jo
jge
xchg
cli
jl
xor
mov
adcl
mov
and
rorb
mov
hlt
xor
mov
pop
sbb
mov
out
js
push
cmp
push
dec
leave
cmp
jle
or
mov
xchg
jge
lea
jle
jns
push
mov
popa
addb
nop
jo
mov
rcll
or
xchg
inc
sti
mov
add
sahf
repz
sbb
je
jmp
xor
stc
dec
mov
cmp
add
xchg
int3
das
mov
pop
cmp
adc
mov
mov
out
js
shll
cwtl
das
sbb
sbb
mov
add
testb
ret
cmp
inc
ret
jmp
fcomps
xor
out
add
xlat
mov
or
xor
loop
sbb
je
orb
lea
pushf
add
cmp
data16
cmp
rcr
ss
mov
jns
push
rclb
cwtl
orl
jno
jg
sbb
adc
mov
mov
push
add
enter
jl
jmp
add
add
into
inc
xor
pop
shll
addl
add
inc
movsb
mov
fmuls
mov
pop
hlt
aam
maxps
test
jae
xor
mov
js
cmp
popa
xchg
cmp
cmp
add
pop
outsb
xor
push
insb
push
ret
sub
repz
adcl
out
test
xorb
jmp
push
cmp
xchg
inc
mov
or
in
loope
fldcw
ficompl
outsb
sbbb
int
mov
pop
jb
js
stos
mov
pminub
das
out
inc
mov
push
or
add
inc
xchg
jle
adc
and
or
shrl
mov
push
imul
sbbb
inc
lret
dec
mov
and
add
push
and
pop
sbbb
adc
call
adc
xchg
and
cmp
inc
pop
add
addr16
fimuls
pusha
push
and
jb
mov
pop
lret
loop
dec
fadds
les
sbb
inc
xor
add
add
sbb
cwtl
arpl
sub
push
mov
sahf
xchg
addr16
add
popa
dec
push
fiaddl
cmp
add
inc
pop
mov
lods
pop
sbb
xor
ss
out
cs
xor
movsb
and
pop
cmp
inc
push
clc
lea
cmp
cltd
les
cmp
dec
cld
xorb
std
push
and
lret
xor
js
movsb
test
or
push
xor
addl
lods
mov
movl
jge
movsl
mov
sub
dec
orb
push
cmpb
loop
cmp
sbb
add
sbb
in
mov
push
inc
shl
sub
push
mov
icebp
inc
mov
fnstcw
dec
sbb
push
jo
jns
pop
sbb
divb
dec
dec
sarl
pop
add
xor
push
cs
add
sbb
push
mov
imul
popa
orb
fdivr
add
adc
cmp
add
sub
inc
cmp
ljmp
ret
fmull
popf
arpl
cwtl
loopne
adc
mov
add
cmp
out
push
movsb
jl
mov
mov
subb
mov
sub
fcoms
stc
shlb
add
pop
sbb
pop
insb
jo
xor
pop
cmp
bound
repnz
jl
and
add
adc
xor
xor
push
sbbb
stc
mov
sub
cmp
loope
inc
idivl
and
in
cmp
nop
in
add
les
outsl
rcr
lahf
scas
hlt
push
cwtl
push
push
mov
mov
inc
adc
mov
cli
jmp
and
ret
inc
mov
ficoms
inc
test
lret
or
mov
xor
in
pushf
js
add
enter
and
roll
xor
or
sbb
bound
inc
dec
add
popa
sbb
inc
jb
and
fnstsw
stos
loope
push
cmp
mov
arpl
loopne
adc
mov
negl
adc
dec
pop
adc
jae
xor
push
jb
pusha
sbb
and
insb
xor
xor
dec
loop
les
mov
dec
cmp
xchg
je
and
adc
jle
enter
push
sbb
adc
mov
or
mov
jo
mov
dec
xchg
hlt
loopne
js
add
and
jb
pop
dec
rolb
add
jge
scas
sbb
pop
test
test
insb
jg
rcrb
mov
add
cmc
mov
jl
or
sbb
mov
scas
iret
jae
shlb
add
push
adc
stos
pop
adc
jb
add
scas
loopne
repnz
je
add
xor
insb
jne
int3
pop
jg
test
in
or
and
inc
inc
pop
mov
rcrl
loope
shll
mov
adc
dec
mov
jecxz
sub
les
out
jno
jg
pop
mov
iret
gs
jle
push
pop
lods
cmp
or
fcoms
shll
nop
in
mov
push
test
rorl
add
xchg
lods
or
pushf
dec
stos
sbbb
cmp
lods
in
cmovg
rcrb
push
bound
adc
pop
mov
xor
sbb
inc
and
leave
cmpsl
pop
mov
jo
and
xchg
mov
mov
and
test
push
add
cmp
sbb
enter
push
das
and
pop
cmp
add
mov
sbb
call
push
mov
les
adcb
cmc
sub
inc
adcb
mov
mov
and
rcrb
jmp
cmp
into
pop
and
pop
iret
xor
negl
push
cmp
lods
inc
jno
adc
pop
out
mov
in
adc
in
fcompl
dec
cmp
mov
es
or
add
ss
mov
and
push
sbb
sub
enter
sub
iret
or
mov
add
lods
xchg
aas
mov
push
hlt
bound
scas
mov
dec
imul
push
sub
mov
add
pop
loope
dec
hlt
and
pop
add
test
cmp
push
sub
xchg
sub
add
mov
push
pusha
mov
loopne
mov
loope
in
inc
sub
inc
leave
not
jmp
pop
mov
rcrl
push
adc
adc
dec
adc
aas
movsb
jle
sub
loope
leave
xor
cmp
sbb
stc
inc
push
dec
inc
and
test
jno
js
push
fcoml
filds
das
scas
mov
inc
push
inc
lods
jb
bnd
daa
movsb
pop
xor
aam
inc
outsb
and
mov
subb
bound
pusha
andb
pop
adc
out
enter
mov
enter
ret
push
and
xor
sbb
xor
jo
mov
mov
jo
lock
je
cmp
imul
pop
loopne
add
jmp
xchg
je
cld
cmp
icebp
and
adc
lahf
dec
inc
hlt
mov
ja
pop
or
xchg
dec
movsl
adc
and
push
add
mov
xor
add
sahf
pop
jb
cwtl
cmpsb
nop
cmp
cmp
inc
xchg
xor
popa
out
pop
push
in
lahf
imul
add
movsb
inc
cmp
test
repz
rclb
cmc
mov
jge
or
xchg
es
add
pop
daa
hlt
add
loopne
mov
imul
shll
cmp
ja
jns
cmp
or
mov
lea
sbb
mov
or
inc
movsb
mov
adc
add
cmp
cli
adc
scas
inc
jb
cwtl
xor
enter
sbb
or
mov
test
pop
jl
sub
and
bound
xor
mov
inc
pop
cmpb
das
mov
adc
dec
inc
adc
xlat
and
pop
out
push
in
adc
pushf
insl
pop
inc
jge
and
mov
push
inc
adc
arpl
fildll
rolb
jl
adc
jmp
or
aam
in
mov
xor
sbb
pop
lret
popa
xor
in
xor
jl
ljmp
inc
out
mov
cmp
sbbl
stc
loopne
dec
mov
subl
decb
adc
mov
inc
js
push
sub
cmp
adc
inc
cmp
pop
inc
xchg
and
sub
pop
add
dec
push
in
loop
add
xchg
jl
cwtl
dec
mov
and
loopne
das
sbb
out
icebp
mov
dec
mov
lret
loopne
add
jb
add
mov
and
mov
cwtl
inc
or
fimull
or
mov
cmp
and
hlt
inc
notb
sbb
mov
jl
subb
and
or
dec
clc
inc
adc
fs
andb
lds
arpl
clc
dec
inc
mov
mov
mov
push
cwtl
jl
test
mov
pusha
mov
mov
adc
fcoms
popa
push
les
jl
push
out
in
mov
sbb
jns
dec
fcoms
leave
xor
mov
adc
push
addl
add
push
test
xchg
adc
ljmp
aad
enter
popf
dec
adc
loop
stos
dec
mov
inc
fidivl
ret
aaa
lds
lcall
mov
je
xor
mov
inc
into
dec
sbb
rolw
and
popf
in
dec
push
inc
call
mov
daa
jns
je
cmp
mov
push
inc
lods
add
repnz
sbb
mov
imul
lods
add
in
add
adc
lock
lds
pop
jle
pop
fwait
jb
adc
or
add
inc
xchg
mov
data16
mov
mov
lret
sbb
dec
clc
sub
fdivrs
stos
data16
out
push
mov
adc
mov
enter
jnp
adc
mov
mov
inc
or
mov
inc
leave
hlt
daa
cld
stos
rorl
shll
dec
pusha
repz
mov
std
lock
dec
adc
pop
adc
sbb
add
jb
add
dec
imul
icebp
inc
sbb
inc
jmp
mov
test
mov
test
add
xchg
pusha
call
add
addl
cwtl
xor
add
insl
es
rol
mov
jns
add
shlb
adc
test
loopne
popf
push
int3
mov
arpl
test
add
mov
mov
sbb
inc
lock
add
cmpsl
dec
push
jl
adc
jnp
jmp
fiadds
data16
fldt
les
or
flds
mov
push
aas
popl
popf
dec
jae
add
sub
push
xor
jb
ds
or
push
add
dec
sbb
xor
mov
and
add
bound
jle
les
jo
add
xor
pop
outsb
push
and
aas
jmp
fidivrs
pop
xchg
test
dec
xchg
jl
mov
roll
fimuls
mov
test
and
cld
rorl
hlt
loop
xchg
lahf
jno
and
xor
les
mov
sbb
cmp
add
jo
or
cmp
loopne
fadds
movsl
mov
push
pusha
and
adc
or
push
bts
xchg
lret
and
xor
add
nop
shld
sbbb
add
pop
in
loopne
add
fdivrs
enter
pushl
add
push
clc
add
sti
push
pop
gs
iret
stos
lods
mov
sbb
inc
pop
jno
loopne
inc
sub
add
or
push
pushf
add
push
ja
add
push
adc
jecxz
mov
stos
jns
add
add
gs
call
xor
mull
inc
pop
jo
adc
sbb
rcrl
out
cmpsl
rolb
mov
outsb
test
mov
cltd
or
cmp
outsb
pop
clc
pop
fs
mov
pop
add
xchg
add
testb
and
mov
jle
inc
fmul
or
mov
pop
add
inc
sbb
es
cmc
inc
push
movsb
xchg
add
andl
pusha
mov
outsb
cwtl
rolb
or
gs
clc
xor
bound
lret
sbb
jnp
xchg
mov
inc
notl
pop
int3
outsl
push
out
dec
push
add
std
dec
sbb
mov
cld
adc
lret
push
pop
pop
loope
je
sub
into
loopne
mov
pop
repnz
rorl
test
fdivrl
ret
cmpsb
pop
repnz
xor
push
push
xor
add
cld
or
pop
popf
idivb
sbb
mov
cwtl
mov
out
pop
inc
lret
cmp
repnz
dec
and
or
xchg
cmp
les
and
inc
lret
sbb
outsb
jge
push
sahf
rclb
add
xchg
jle
fs
xchg
xor
sbb
je
add
jae
outsl
and
aam
push
in
pop
fwait
cmp
xchg
or
pushf
xor
scas
add
mov
mov
mov
and
xor
or
inc
dec
adc
push
add
repnz
ljmp
cmp
cmp
add
or
es
hlt
scas
rorb
popa
add
cmpsl
sti
pop
mov
jns
add
inc
outsl
mov
pushw
jns
ljmp
xchg
jp
cmp
or
inc
xor
int
sti
inc
inc
mov
jmp
testb
cmp
loop
insb
cmp
adc
mov
lock
adc
stos
into
ja
xor
mov
cmpsl
add
or
lds
je
xor
dec
and
lods
lock
adc
inc
mov
add
dec
jno
sbb
sbb
pop
outsl
stos
ret
das
mov
xchg
loop
aam
sub
push
cltd
sbb
into
sar
bound
adc
sub
sbb
cs
pusha
adc
enter
inc
orl
les
lock
pop
icebp
movsb
jg
inc
pop
pop
lock
mov
in
filds
testb
adc
mov
pop
hlt
enter
call
in
xchg
add
xchg
add
hlt
inc
pop
loope
test
inc
mov
movsl
push
lds
pop
add
cmpb
jmp
xor
sarb
xor
js
add
or
dec
in
lds
add
xor
fisubl
push
add
lcall
xchg
sub
daa
sub
stos
add
xor
and
push
popf
adc
push
int
xor
jbe
or
fldl
sub
adc
dec
nop
in
cld
add
not
loope
pusha
inc
push
adc
ja
xchg
or
xor
mov
jmp
add
cmp
mov
sbb
es
int
jbe
or
fidivl
inc
dec
aam
sub
push
dec
stc
sub
pop
fs
adc
mov
in
inc
cs
pop
or
push
testb
dec
pop
filds
clc
popa
inc
inc
pop
xlat
icebp
rcrb
test
adc
mov
ja
loop
test
movsl
iret
out
lahf
jne
aas
jmp
adcb
subb
add
xor
add
inc
pop
mov
pop
xchg
lret
or
loope
mov
mov
mov
adc
push
fwait
adc
add
adc
ret
ljmp
imul
sub
shlb
xchg
out
les
aaa
faddl
mov
sarb
add
ljmp
add
sbb
or
jle
and
jp
rorb
pop
adc
inc
adc
mov
pop
xchg
and
add
jl
lods
sub
push
push
lock
cmp
iret
xchg
fnsave
pop
add
js
xchg
nop
orb
adcb
jo
adc
sbb
xchg
cli
repz
mov
jle
and
rclb
dec
rorb
adc
or
outsl
lds
flds
sbb
out
movsl
enter
add
cwtl
stc
push
xor
mov
rorl
mov
lcall
stc
mov
iret
cltd
out
cwtl
sti
fwait
mov
xor
rclb
and
cpuid
mov
ja
cmp
mov
int
call
xchg
nop
inc
mov
testl
jbe
add
xchg
sub
rclb
mov
sarl
pop
ret
jo
adc
call
aad
pop
filds
mov
les
mov
jns
and
inc
loopne
shlb
inc
push
mov
icebp
inc
sbb
repz
add
pop
jl
inc
add
fsubs
adc
arpl
pop
sbb
sbb
mov
cltd
lds
or
mov
stc
popa
stos
rcl
mov
mov
and
pusha
xlat
sub
scas
rcll
inc
add
ret
icebp
sbb
leave
push
fbstp
push
mov
addl
pop
inc
add
ret
roll
js
cmpsl
mov
repnz
mov
icebp
movsl
addb
aam
push
mov
in
push
or
or
dec
xor
pop
fldcw
mov
sub
dec
dec
pushf
sub
inc
or
and
clc
mov
mov
cmp
mov
hlt
mov
xchg
insb
int
nop
repnz
js
add
shl
lcall
mov
jns
jl
imul
aad
add
cwtl
sub
call
ja
jmp
cmpsl
out
push
ret
xchg
or
icebp
or
lock
clc
in
mov
inc
or
gs
or
or
cmp
leave
inc
mov
inc
xchg
or
xor
loope
pushf
jl
pop
xor
or
mov
mov
push
popf
add
pop
test
or
adc
or
xchg
or
ret
rorl
dec
lds
mov
stc
sbb
sbb
mov
shl
mov
or
pop
or
jmp
dec
sbb
cmovbe
xor
lods
fwait
icebp
mov
push
enter
loopne
into
push
fdivs
inc
shl
inc
cmp
andb
push
sub
pop
subb
dec
pop
cli
pop
add
push
dec
dec
int3
mov
movsl
pop
subb
fnstcw
push
add
adc
negl
sub
and
push
faddl
jbe
mov
or
push
or
sub
xor
xor
popf
lds
push
xor
cmc
sbb
push
lock
mov
int3
loopne
js
or
rorl
inc
fsubr
jo
loopne
pop
outsb
mov
inc
stos
pop
xor
xor
lcall
fstps
jecxz
mov
in
push
jle
inc
in
xor
mov
call
movsb
int
ljmp
test
push
mov
xor
cmp
mov
movsb
mov
cltd
lock
mov
or
stc
pop
pop
or
cltd
add
xchg
jbe
mov
sub
je
or
test
cwtl
js
xor
ret
mov
rorb
dec
xor
cltd
enter
iret
cwtl
lock
push
outsl
sti
inc
ret
xor
shll
fists
xor
lret
scas
pop
sti
repz
int
shl
push
test
dec
or
inc
mov
das
mov
js
add
aad
aam
loop
lret
int
add
fimuls
inc
push
jo
add
jne
or
jge
call
negb
jno
adc
push
cli
xorl
outsb
jmp
pop
mov
adc
inc
jge
inc
test
jle
add
mov
je
outsb
xchg
subl
xor
mulps
pop
pop
testl
sub
adc
pop
and
rol
dec
pusha
rcrl
loop
xor
aam
push
sbb
andb
add
push
cmpsb
movsb
push
icebp
or
and
inc
test
dec
ret
xor
jge
cmp
inc
rorb
pop
push
test
cmpb
dec
push
inc
sbb
inc
sub
xor
bound
or
pop
call
mov
dec
lret
sub
sbbl
mov
repnz
push
inc
and
xor
sbb
sub
inc
test
adc
lods
scas
jg
and
test
loop
popf
std
and
dec
fildl
push
jl
bound
aam
push
inc
mov
aas
push
js
into
adc
sub
fiaddl
adc
and
mov
adc
nop
mov
cmp
pop
push
inc
lods
or
or
loope
xchg
cmp
call
ret
movsb
sbb
or
xchg
push
or
push
mov
jno
adc
adc
clc
xor
mov
and
out
enter
lock
mov
fbld
adc
dec
push
addr16
xchg
sbb
dec
mov
rcrl
xor
and
movsb
mov
cmp
push
sbb
mov
roll
or
jmp
cmc
shll
inc
or
cmpsb
in
push
jno
xor
push
jo
ss
dec
jg
push
push
out
pop
pop
imul
repnz
mov
int3
adc
inc
lds
bound
lcall
mov
add
ja
fs
ret
out
dec
add
sti
inc
test
ret
test
pusha
fmulp
cmp
inc
push
pusha
loope
out
fistpl
fs
jecxz
sbb
pop
fimull
xchg
sub
and
je
scas
lds
outsb
loope
movsb
jp
pusha
mov
psrad
inc
ljmp
xor
jp
add
add
add
in
outsb
sub
add
fwait
lret
xchg
xlat
xor
xchg
test
cmc
add
mov
fnstenv
lds
mov
xchg
sbb
mov
jl
pop
jg
xchg
jp
sub
mov
ds
jle
stos
sbb
int3
orb
inc
clc
jl
sbb
pop
ffree
out
jp
loop
xor
ljmp
xchg
cwtl
pop
insb
lock
jl
jae
pusha
pop
orb
jl
jo
jge
inc
arpl
push
sbbl
adc
push
xor
add
les
cmp
xor
xchg
jno
je
cmpsb
xchg
sub
add
test
pop
lock
add
adcb
push
mov
inc
xchg
adc
ja
hlt
inc
js
ds
inc
mov
jae
dec
mov
xor
subl
sub
ret
pop
mov
jl
push
push
enter
mov
sub
mov
sarb
aam
and
sbb
pop
cmpsl
ret
sub
lock
cmp
lcall
test
or
jno
xor
add
aad
pop
dec
adc
inc
inc
dec
xchg
pop
add
aam
xor
loope
pop
imul
and
addb
inc
aam
pop
add
cmp
inc
lret
push
adc
push
enter
pop
lds
gs
inc
sub
int3
sbb
pop
adc
outsb
pusha
sub
lods
outsl
pop
inc
enter
lds
inc
adc
fmulp
push
daa
push
push
lret
xor
lret
cmp
enter
mov
shlb
xor
cwtl
ds
push
clc
xorl
ret
sarl
pop
pop
inc
aad
pusha
pusha
or
add
sub
inc
les
daa
mov
sub
xor
cmp
pop
add
xor
pop
stc
test
jae
leave
xchg
xor
dec
mov
pusha
lea
and
dec
or
fwait
or
push
dec
out
imul
push
pop
dec
les
or
lret
in
cltd
push
push
rclb
enter
fcomps
pop
lahf
sbb
imul
and
test
xor
add
push
cmp
xor
xor
add
adc
jae
sarl
cltd
mov
sbb
sbb
push
pop
dec
test
scas
stc
push
add
addb
add
and
inc
add
sbb
jl
sbb
enterw
or
imul
add
aad
fcoms
fs
dec
aam
xorl
push
sbbb
xchg
push
into
sbb
xor
adc
cmpsl
pop
call
push
mov
insl
push
orb
pop
je
adc
push
enter
call
pop
imul
aaa
insl
inc
lret
dec
loopne
jl
mov
jo
outsl
cmp
cmp
imul
aaa
xor
and
cmp
insl
push
jmp
xchg
aas
mov
jae
adc
xchg
sub
xor
dec
inc
cmp
pusha
pop
mov
inc
jb
mov
mov
cmp
add
lock
push
hlt
xor
mov
add
aam
pop
inc
shlb
rcll
enter
jmp
xchg
loope
or
fidivrs
sbb
push
call
sub
ja
dec
pop
inc
sbb
fdivrl
and
pop
cmp
enter
int3
fdiv
inc
test
and
insb
push
lret
sub
pop
mov
mov
xchg
int
mov
and
sbb
mov
dec
or
sub
popa
es
daa
jae
lahf
shrb
sbb
xor
and
fs
jmp
dec
lock
pop
je
xor
or
dec
shll
hlt
xchg
js
dec
add
and
cmp
pop
jl
mov
push
push
pop
xor
sub
rcr
insb
cmp
pop
and
adc
push
and
int3
sub
insl
push
and
cld
push
and
add
jb
cmpsb
leave
rolb
jge
pusha
mov
push
xor
and
mov
mov
jle
stos
sub
aaa
pushf
adc
les
dec
or
mov
pop
cmp
pop
mov
sub
pop
mov
lock
push
ja
jno
and
inc
int
in
pop
rclb
mov
das
add
aad
movl
cmp
pop
ficoms
and
push
xor
test
add
lods
iret
in
pop
or
frstor
cmp
push
jnp
cltd
mov
outsl
or
mov
scas
nop
pop
inc
xchg
bound
test
and
loope
lret
pusha
js
fs
add
jns
push
lds
jle
sbb
lahf
sahf
pusha
lods
mov
pushf
cmc
mov
imull
sbb
pusha
dec
pusha
sbbl
icebp
add
jnp
xor
lea
inc
js
add
insl
iret
sbb
lock
sar
testl
mov
add
cmc
imul
add
ret
xchg
repnz
push
mov
jle
add
movsl
lds
in
jle
or
cwtl
adc
sub
push
and
push
pop
enter
daa
loop
add
sub
cmp
add
in
mov
sub
dec
scas
aam
lret
jp
or
mov
pop
mov
or
lods
pushf
dec
inc
sub
sub
add
int3
add
sarb
lahf
ja
scas
das
jmp
inc
stos
mov
lahf
jo
push
mov
ror
stos
xchg
inc
iret
xchg
lcall
cld
dec
pop
mov
bound
mov
lds
mul
dec
pushw
fnstsw
fldenv
and
mov
add
sti
out
int
movb
or
lcall
idivl
aaa
mov
mov
adc
enter
add
sahf
pusha
cmpsb
add
loopne
inc
sbb
outsb
dec
int
or
mov
imul
pop
outsb
pop
jmp
sub
daa
out
pusha
enter
dec
add
lret
nop
push
xor
add
mov
scas
lds
and
sbb
cmp
movsl
inc
add
test
pop
add
nop
fwait
cmpsl
and
leave
pushw
xor
out
and
loope
add
xchg
lods
pop
add
sar
ret
push
js
mov
sbb
lods
jecxz
add
outsb
push
int
bound
mov
push
and
inc
leave
adc
add
and
jns
xor
add
fs
scas
cltd
ret
sbb
mov
push
mov
fcmovb
adc
subb
xchg
mov
add
int3
inc
sbb
movsb
xor
popf
inc
jl
test
shll
cmp
fmull
dec
add
sub
outsb
cmp
xchg
dec
dec
mov
cmpsl
push
push
cld
lahf
test
das
notb
lds
lret
xchg
dec
mov
push
xor
lods
or
mov
jnp
dec
mov
loope,pt
push
gs
push
xor
add
mov
subl
cli
das
lea
inc
sub
and
mov
pusha
cli
scas
dec
xlat
mov
scas
push
jecxz
ret
nop
add
test
adc
cmc
or
and
adc
add
push
or
ss
shll
vdivsd
in
das
inc
cmp
cmpsl
cld
and
aas
arpl
ret
push
and
js
inc
pop
xor
jge
adc
cld
xchg
mov
dec
movl
push
sbb
adc
add
int
adc
jecxz
cmpsb
sbb
out
mov
xor
loopne
leave
pushf
or
xor
lret
orb
mov
or
sbb
xchg
loopne
addb
lcall
syscall
push
sub
sub
xor
xlat
popa
sbb
fdivrs
add
pop
jae
mov
iret
adc
and
cmpsb
sbb
inc
sub
lods
cmpsb
lret
rcrb
scas
test
xchg
sub
and
mov
insl
test
dec
aaa
push
sub
cli
dec
adc
sub
inc
add
notb
cltd
fcompl
mov
xor
push
movsb
adc
and
repnz
mov
jmp
mov
cltd
inc
call
pop
inc
fwait
add
jp
rcr
sbb
ljmp
cs
sbb
rolb
mov
movsb
mov
sbbl
xor
adc
mov
orb
and
dec
int
mov
xchg
roll
ffree
loopne
es
out
mov
or
test
sbb
dec
jmp
xorb
dec
and
dec
enter
add
mov
mov
icebp
adc
cld
arpl
mov
out
shll
jmp
and
cwtl
fwait
or
frstor
int3
adc
mov
xchg
dec
push
cld
cwtl
and
push
mov
mov
ja
dec
pop
imul
sahf
mov
cmp
sub
mov
sbb
add
clc
or
lret
mov
call
daa
or
sahf
nop
pop
and
aas
push
or
mov
or
mov
or
or
sbb
popf
dec
dec
mov
jge
nop
pop
cmp
mov
jne
adcl
cs
adc
cmp
aas
jecxz
out
inc
dec
inc
nop
sub
scas
faddl
mov
ror
and
mov
or
mov
shll
icebp
into
add
sahf
loopne
fnstenv
cmp
push
xor
mov
inc
adc
xor
je
jge
cli
test
test
adc
das
dec
and
cld
aad
add
insl
mov
test
mov
pop
enter
add
or
cmp
dec
xchg
or
hlt
cld
lret
stc
push
enter
mov
pop
sbb
jae
pop
mov
into
mov
fisubs
adc
push
xor
sbb
dec
inc
cld
add
dec
lods
xchg
or
mov
and
hlt
fisubrs
and
daa
or
dec
pusha
inc
cmc
and
mov
dec
add
sahf
mov
int3
push
int3
adc
mov
and
xchg
cld
in
mov
mov
ja
jne
cmp
adc
ss
mov
int
and
push
les
or
stos
adc
aaa
lods
jae
dec
decb
orb
mov
xor
add
test
adc
push
sub
or
ds
mov
sub
add
pop
pop
fnstsw
jnp
jns
adc
adc
scas
mov
rorb
push
sbb
sarb
pop
adc
xor
pop
cmpsl
ret
adc
sub
nop
test
xchg
xchg
adc
lock
movsb
mov
pop
popl
xor
rcrl
inc
loop
loope
lcall
pop
inc
pop
add
xor
add
std
lcall
sti
pop
arpl
cmp
fldenv
inc
mov
mov
int3
jg
cwtl
xor
jecxz
jl
xchg
cmp
pusha
push
pop
fs
add
push
pop
jo
xor
and
cmp
push
test
mov
cwtl
addb
shll
popa
add
add
in
clc
lds
cmp
xchg
add
das
loop
jno
rcl
int3
or
sub
ret
aas
or
lods
pop
cwtl
lock
xchg
mov
pop
data16
xchg
icebp
push
pop
arpl
std
add
loop
inc
inc
das
dec
or
fcoms
les
adc
cs
jae
add
sub
cmc
dec
jne
enter
in
cmp
mov
sub
insl
add
inc
and
mov
or
sub
outsb
out
add
mov
jb
push
push
or
es
sahf
xchg
mov
scas
leave
push
pop
sbb
inc
add
dec
dec
xchg
cmp
insl
pop
mov
dec
sbbb
adc
ret
mov
lods
adc
add
dec
cmpsb
aad
and
xlat
ret
inc
in
cmpsb
add
ret
negl
leave
pusha
cmp
daa
sahf
push
fs
stc
add
push
jbe
pop
ljmp
inc
sub
push
lds
mov
outsb
jbe
xlat
es
bound
shrl
sbb
das
push
in
jg
mov
ljmp
cmp
add
pop
or
add
movsl
and
cmpsl
lock
sbb
inc
add
mov
ja
xchg
mov
xchg
adc
add
or
stos
cmp
cmpl
je
inc
xor
dec
mov
dec
sahf
push
std
mov
aas
push
mov
nop
push
xchg
xchg
ds
popf
mov
xlat
popa
sub
aas
imul
popa
sub
aam
dec
jge
or
and
xor
icebp
fdivr
mov
rclb
pushf
jg
add
int
sbb
js
or
mov
mov
pop
movsb
dec
add
dec
call
fcoml
sub
xchg
mov
movsb
mov
dec
pop
popf
inc
mov
test
mov
mov
rolb
popf
inc
inc
insb
add
sub
insl
add
dec
inc
fs
leave
daa
test
pop
rclb
aaa
or
test
sbb
jo
and
sbb
adc
test
ret
xor
enter
dec
and
jae
fcompl
fmull
ret
int
lcall
dec
movsb
add
lret
xchg
jo
sub
test
adc
xor
add
mov
shr
in
add
mov
filds
cld
idiv
adc
mov
inc
int3
js
lahf
sub
pop
dec
cmp
in
and
jns
push
pusha
sbb
dec
and
hlt
add
lods
cwtl
sbb
icebp
xchg
lret
je
xchg
lods
hlt
sub
and
mov
or
cmp
and
outsb
push
dec
int
mov
xchg
outsb
sarl
lods
mov
dec
sbb
mov
dec
add
and
push
test
sub
leave
pop
or
sti
shlb
es
hlt
or
sbb
add
xchg
call
stos
mov
or
cmp
pusha
mov
add
in
pushf
cmp
cmp
icebp
pusha
sub
push
jmp
inc
scas
push
push
jno
repnz
xor
inc
add
mov
adcb
orb
sbb
outsl
imull
adc
out
cld
ss
sub
daa
pop
push
xchg
pusha
xchg
cmp
and
add
inc
movsb
call
rolb
ljmp
sub
test
push
cmp
in
mov
cmp
shrb
adc
inc
mov
mov
pop
cmpsb
scas
iret
fisttpl
cmp
jbe
loopne
das
push
div
out
jmp
mov
and
push
enter
nop
loopne
cwtl
leave
xor
hlt
sub
lock
cmp
jb
mov
dec
mov
pusha
mov
dec
adc
sub
aam
popf
add
add
mov
inc
movsb
les
mov
cmpsb
jno
out
bound
lock
jne
clc
cmp
inc
cwtl
addr16
jp
andl
add
js
cld
out
mov
fnstsw
add
movnti
add
push
or
inc
iret
adc
ss
lods
cmpsl
jmp
ds
pop
mov
or
int
mov
addb
mov
loopne
xchg
add
jnp
mov
xorl
cmpsl
and
add
inc
mov
adc
aaa
roll
fidivrs
add
jmp
js
mov
adc
jae
mov
adcl
lcall
not
dec
inc
outsb
mov
popa
mov
xchg
rorb
push
clc
push
aam
push
jbe
push
insb
xorb
in
aaa
mov
dec
mov
and
add
cs
push
xchg
cmpsb
pop
clc
adc
sbb
repnz
xlat
mov
sti
add
xchg
ret
xchg
jno
sti
dec
xor
adc
ds
jp
insl
sbb
jo
add
shll
pop
fidivl
ds
testl
xor
push
mov
cwtl
roll
scas
fcomps
fdivs
push
inc
andb
outsb
cld
mov
or
and
es
push
movsb
je
inc
mov
jb
out
and
rcrl
lahf
jne
mov
loopne
mov
or
test
sub
push
addb
shrl
rorb
into
imul
or
add
rclb
and
and
mov
insl
ss
sbb
add
dec
ds
xorl
pusha
inc
je
test
jb
xchg
xor
enter
stos
mov
and
pop
sub
dec
inc
popa
es
shrb
jmp
push
leave
and
xor
cs
and
loope
jle
fdivl
addr16
jg
dec
ss
lret
inc
xorb
or
adc
push
xor
ret
push
sub
mov
cmp
popa
push
cwtl
lods
in
imul
fsubrs
cmp
pop
mov
lret
dec
pop
test
push
rol
jl
push
fcmovne
mov
push
popa
fsubr
movsb
je
jae
test
inc
imul
jl
aas
cld
pop
mov
sahf
add
jb
or
xchg
loop
dec
shlb
bound
xor
loopne
mov
shlb
leave
inc
jnp
aaa
add
sub
pusha
adc
push
push
cmc
popa
cmp
nop
push
add
popa
ss
out
xor
inc
or
cmp
call
sbb
and
mov
lea
call
mov
push
inc
mov
popf
mov
and
pop
fisubl
ds
jl
mov
jl
push
dec
pusha
cmp
loopne
add
xor
mov
xchg
jl
imul
jns
lods
fiadds
add
loope
leave
rorl
xchg
notl
mov
add
imul
repz
push
or
int
sub
js
mov
inc
inc
jl
sahf
aam
pushf
add
xor
lcall
sub
mov
iret
jmp
cli
cmp
or
adc
cmpsl
outsl
mov
icebp
jnp
sbb
xor
push
in
cld
pusha
or
mov
add
test
inc
mov
rcl
xchg
iret
pop
xor
xor
xor
int
insb
test
inc
bswap
loope
push
nop
aas
sub
mov
mov
mov
sbb
and
mov
cld
enter
clc
push
mov
xor
sub
mov
incl
or
mov
jl
repnz
jbe
cmp
and
mov
out
add
cs
lods
xor
and
and
add
fcomps
outsl
jo
jne
sti
cmp
mov
xchg
xor
push
dec
mov
das
sbb
movsb
cs
mov
sbb
mov
lret
mov
inc
fdivs
inc
js
xor
push
fucomip
cmp
mov
add
xchg
jb
addl
lcall
mov
dec
mov
ss
xor
lock
mov
pushf
les
pushf
sbb
ss
add
xchg
or
imul
mov
jle
scas
mov
call
jb
inc
out
push
dec
cmpb
es
mov
fs
outsb
push
addl
mov
mov
sub
push
mov
test
sbb
mov
cld
popa
jb
dec
shlb
push
sbb
enter
in
pusha
jne
jns
inc
mov
ss
sarl
sub
repnz
and
fbld
mov
cld
jg
dec
sbb
cld
clc
xchg
xlat
mov
aam
js
push
rolb
bound
lods
inc
pushf
outsl
cwtl
inc
dec
and
xchg
pop
add
sbb
inc
cmp
add
mov
mov
shlb
rorl
cmpsb
pop
pop
xor
dec
les
popf
and
jb
rcl
dec
cmp
sbb
push
xor
push
add
iret
iret
mov
mov
add
es
jno
xor
jns
xlat
rcrl
jge,pt
sbb
imul
mov
inc
adc
push
repz
enter
xlat
push
and
add
push
adc
add
xor
jns
movsl
lds
jae
or
xlat
dec
inc
and
inc
jmp
dec
or
jmp
cmp
adcb
loopne
pop
xor
fs
roll
popf
add
out
jmp
imul
shll
add
mov
dec
int3
add
push
cs
mov
jb
test
leave
arpl
cmp
test
out
adc
mov
cmp
xchg
inc
mov
cmp
jo
inc
pop
sbb
in
mov
cs
xchg
js
add
insb
ds
orb
lods
sbbb
adc
cmp
dec
adc
mov
inc
add
mov
gs
int3
sub
add
int
xor
xor
fdivs
cwtl
mov
int3
rcl
xchg
pop
sti
dec
xchg
and
inc
pop
bound
and
sub
cwtl
push
scas
or
xchg
movsb
pop
mov
xor
cmp
mov
add
sub
mov
dec
pop
dec
adc
add
and
test
aas
std
mov
and
xchg
and
add
inc
test
insb
test
sbb
ret
xchg
cwtl
sbb
or
es
jne
cmp
test
icebp
push
mov
outsl
ret
jge
repnz
in
and
adc
inc
ret
xor
xchg
push
cmpsl
push
xor
xchg
sbb
jnp
adc
jg
movl
lock
and
xor
in
and
inc
push
push
xor
into
jge
mov
jb
fadds
push
nop
and
fucom
add
mull
hlt
les
sbb
xorl
add
icebp
arpl
mov
mov
cmp
and
push
adc
aaa
jno
add
inc
mov
dec
mov
mov
test
das
shlb
add
mov
loopne
ss
xchg
pushf
mov
sbb
xor
in
cmp
cmpsl
fiaddl
cmc
jne
fdivs
movsl
lock
mull
es
nop
inc
jo
addb
dec
fwait
je
cmp
xchg
xchg
pop
lcall
xor
into
inc
or
dec
hlt
test
sbbl
decl
adc
xchg
add
mov
jae
cmp
add
add
mov
incb
addr16
std
mov
in
mov
mov
inc
adc
sahf
sbb
and
mov
inc
or
lods
or
add
or
rcll
ficomps
xchg
into
aad
push
jo
data16
and
cmpl
popf
mov
sub
out
test
fcmovb
test
jle
pop
outsl
jl
and
mov
and
cs
pop
inc
movsb
xchg
aad
scas
mov
je
cmp
sub
mov
sub
dec
popa
cltd
call
movb
add
rol
xor
adc
test
add
jno
cld
loopne
movsl
mov
fstpt
cmp
adc
mov
mov
ret
mov
cmp
mov
jb
add
out
xchg
xchg
cmp
add
adc
orl
xor
or
push
push
lret
xchg
fs
mov
sub
cmp
pop
test
dec
add
xor
mov
cmpb
add
gs
mov
test
je
ljmp
movsl
mov
shrl
sub
cwtl
or
cld
mov
pop
adc
add
pop
loopne
fiadds
dec
stos
stc
subb
mov
pop
jp
mov
pop
add
push
mov
add
test
cmp
loope
inc
pop
xchg
mov
inc
in
pop
pushf
bswap
mov
push
xor
jl
stos
in
push
outsb
and
sahf
shlb
pop
add
popa
mov
loope
out
jnp
data16
dec
or
adc
les
dec
add
inc
sub
mov
mov
xor
out
cmp
cmp
push
ret
mov
xchg
or
divl
adc
jb
or
dec
call
lds
mov
rcll
les
add
inc
cmp
inc
cmp
dec
sub
lods
shlb
sbb
addr16
repnz
out
inc
xchg
cmp
add
and
or
js
cmp
mov
stos
rol
data16
mov
sub
popa
mov
inc
cwtl
lcall
in
test
dec
add
leave
cmp
mov
push
or
and
mov
inc
sbb
mov
js
mov
stos
xchg
lret
rclb
add
mov
fistl
pop
dec
cmp
mov
pop
and
mov
jae
dec
pop
aas
fstpl
pop
jno
shrb
push
xchg
setl
dec
mov
mov
movd
into
daa
push
xor
clc
lods
rol
dec
ret
push
and
xchg
ds
or
roll
test
inc
cmp
ret
xchg
add
dec
mov
shl
ljmp
xorb
insb
sahf
and
or
and
cmp
adc
pop
mov
test
pop
fdivrl
lcall
add
xchg
inc
leave
lods
test
xor
test
mov
mov
mov
jnp
mov
mov
rolb
mov
icebp
adcl
insl
mov
xchg
pop
repz
jge
xor
sub
mov
rolb
cmp
cmp
dec
mov
jmp
cmp
add
iret
xchg
insl
sub
push
fsub
jnp
add
idivl
mov
mov
roll
xor
sahf
or
and
mov
enter
movsl
sti
pop
ja
or
call
cmp
push
xchg
nop
shlb
sub
or
mov
fistpl
xchg
lcall
in
pusha
arpl
add
cmp
cmp
dec
andb
push
in
pusha
cmp
push
test
add
lahf
ss
rcrl
loopne
push
pop
mov
jl
insb
add
cmpsb
repnz
xchg
push
clc
mov
push
call
add
push
inc
cmp
mov
push
mov
cmp
dec
lock
sub
inc
ret
jmp
add
mov
add
js
and
jecxz
pop
inc
rcrl
es
mov
inc
xor
sub
mov
rcr
add
dec
mov
repnz
xor
scas
add
ret
sub
add
ss
push
pushf
jecxz
and
pushf
enter
loopne
dec
push
mov
stos
les
ret
sarb
pop
lods
mov
and
inc
add
pop
lret
or
mov
or
shll
iret
push
add
in
dec
cmp
bound
and
repnz
add
dec
and
push
shrl
xor
and
or
dec
cmp
dec
cmp
and
jmp
lcall
sbb
add
mov
cmp
enter
je
lods
jl
dec
inc
inc
and
push
dec
fiadds
cmp
or
lds
je
mov
xor
push
loope
add
pop
inc
cmp
lods
in
jle
les
shlb
loop
repnz
in
add
std
mov
xor
fdiv
mov
or
jno
and
mov
movaps
inc
xchg
and
inc
cmpb
mov
dec
adc
movsb
mov
adc
cmp
sbb
push
inc
mov
inc
inc
popf
mov
movsb
dec
enter
xchg
lahf
jbe
xor
lds
aaa
push
xor
fadds
shlb
leave
jnp
pop
mov
cmp
mov
lods
mov
in
inc
or
imul
sbb
lea
add
rcrb
inc
mov
popf
fsubl
je
or
cmp
cmp
adc
int
push
mov
sbb
insb
mov
or
inc
push
cmp
lcall
and
seto
jo
mov
lods
daa
sbb
mov
sbb
cmp
call
cmp
stos
and
int3
cmp
movsb
push
cmp
adc
mov
adc
gs
dec
fsub
push
dec
and
rcrl
cmp
rcl
cmp
fistpll
xor
inc
xchg
jns
js
sbb
int3
call
jo
clc
and
insb
daa
adc
jno
fnstenv
sub
sti
jg
sti
jp
cwtl
pop
movb
js
adc
stos
sbb
je
addr16
inc
adc
push
test
inc
mov
jns
sbb
add
cltd
repz
in
dec
dec
mov
sbb
mov
inc
mov
inc
test
pop
cmp
dec
jno
mov
add
shrb
out
xor
xor
mov
test
add
test
rcrl
repnz
fistpll
adc
fsubrl
pop
xchg
jmp
lods
fnstcw
sbb
jne
pop
and
int
pop
sub
scas
enter
and
mov
inc
shrb
sub
aad
enter
pusha
rcrb
mov
into
pop
daa
fs
movsb
insb
or
loopne
inc
loope
push
add
push
xor
pop
sub
addr16
xor
inc
sub
mov
inc
mov
mov
sbb
push
add
xor
xor
or
inc
mov
add
dec
jge
repnz
das
xor
pushf
ljmp
pusha
jge
push
sub
inc
cld
hlt
jb
loope
int3
in
rolb
cmp
cltd
fisubrl
mov
aaa
and
nop
test
xchg
pusha
imul
fcompl
jno
cld
and
mov
leave
enter
add
je
push
pop
rolb
clc
das
or
fmull
xchg
popf
insb
fwait
lods
sub
and
dec
pextrw
inc
clc
das
pop
cmp
hlt
add
push
call
in
mov
call
fwait
insb
orl
mov
mov
jns
in
inc
rolb
enter
cwtl
push
pop
das
cmp
lret
bound
push
insl
or
call
cmpsb
mov
shl
insb
mov
xor
movsl
fs
adc
jg
sti
add
jge
xor
and
fbld
jno
fcomps
nop
mov
adc
dec
and
push
push
xor
loop
and
jns
pop
setge
mov
mov
mov
fs
adc
xchg
add
in
adc
mov
mov
call
xor
push
xchg
sub
push
call
jns
sbb
hlt
in
je
cmp
xchg
es
sahf
or
loopne
mov
add
andb
shrb
pop
shlb
adc
mov
inc
add
xchg
mov
cmp
pop
cmp
pop
popf
inc
xchg
ljmp
adc
loop
or
clc
inc
mov
xor
arpl
inc
int3
and
fmull
out
cmp
lret
imul
push
push
arpl
cltd
or
add
cmp
and
inc
pusha
add
cmp
cld
lock
pop
mov
sub
mov
sub
cmp
hlt
lds
cld
stos
mov
addl
adc
mov
mov
inc
hlt
inc
out
mov
adc
lret
and
mov
nop
lock
popf
and
mov
cmpl
pop
and
pop
in
pusha
je
add
cmp
and
ret
adc
cli
clc
inc
pusha
pushf
mov
bound
loopne
mov
push
cmp
mov
enter
sub
jb
and
add
test
test
xchg
mov
sbb
cmova
mov
loop
xchg
and
ljmp
jb
or
add
jno
sub
push
pushf
test
xor
cmp
mov
xchg
add
ret
hlt
fidivs
jns
sbb
add
loop
xor
push
xchg
xor
out
lahf
add
add
pop
pop
popa
sbb
inc
sub
mov
add
pop
leave
les
pop
enter
inc
dec
pusha
push
pop
adc
iret
dec
shl
loop
popl
into
dec
push
jl
fs
ja
loopne
je
add
int
and
add
xor
jo
cmpsb
sbb
or
pop
xor
mov
mov
int3
pop
mov
mov
test
xor
loopne
mov
xchg
dec
pop
or
mov
insb
sbb
jge
sub
cwtl
add
popf
stc
movsl
pop
pop
jmp
loopne
rcll
out
add
mov
dec
cmp
hlt
sbb
jno
shl
inc
test
in
nop
daa
cmp
dec
das
es
jo
hlt
dec
mov
xchg
push
push
sarl
cmp
scas
add
out
leave
into
mov
add
dec
push
mov
int3
mov
mov
mov
dec
faddl
mov
or
mov
js
pop
lcall
mov
xor
inc
sub
add
fcmovne
cmp
sarb
sbb
xor
mov
pop
mov
add
scas
aaa
dec
rolb
popa
push
mov
pop
push
push
add
dec
xchg
jg
push
inc
dec
ret
cwtl
xor
pop
lock
sbb
pop
mov
xchg
dec
sub
jle
imul
ja
xor
test
enter
insb
rorl
hlt
loopne
sbb
pusha
loope
push
mov
dec
jle
jp
nop
sub
push
in
das
inc
hlt
mov
add
xor
cmp
repnz
mov
mov
and
cmp
aas
jnp
mov
push
cltd
adc
stos
xlat
and
mov
push
xor
sub
hlt
pop
add
cmp
test
jg
cmp
jo
mov
jae
add
or
push
dec
or
ss
ljmp
jo
outsl
adc
inc
movsb
xor
fs
xor
pop
in
inc
cmp
cli
dec
ret
mov
mov
cmp
jl
adc
mov
dec
push
inc
pusha
mov
arpl
mov
addb
inc
fldl
out
out
or
js
popa
iret
cwtl
add
add
popf
nop
pushf
je
cltd
clc
add
cld
push
jae
xchg
xchg
sbb
inc
call
dec
inc
andl
mov
push
loopne
aaa
jg
js
push
sub
add
test
xorb
repnz
pop
xorl
mov
sub
mov
rcrb
loopne
call
xchg
jns
sub
iret
xor
mov
push
fcoms
sub
pushf
pop
popa
and
out
enter
push
inc
xchg
jne
enter
xchg
fwait
or
or
ljmp
xlat
inc
jno
push
mov
or
dec
and
mov
addb
mov
lea
inc
adc
xchg
inc
mov
and
cmc
cld
jb
movsl
xor
mov
sub
ss
testb
aaa
add
xor
iret
mov
or
dec
cwtl
test
pop
xchg
xchg
int3
in
inc
and
fcoms
inc
dec
xor
or
jno
jg
insb
cmpsb
icebp
or
and
popf
add
sub
movsl
or
mov
js
add
push
xorb
in
mov
xor
push
decl
test
sub
pop
add
mov
mov
jp
add
test
repnz
xor
pop
mov
bound
dec
mov
jecxz
incb
sbb
mov
inc
shrb
push
jmp
aad
xchg
and
movsb
mov
out
push
repnz
sub
xor
xchg
jo
xor
adc
call
daa
daa
sbb
lock
sti
xor
aam
jo
mov
insl
fisubl
loopne
cmp
icebp
mov
leave
xchg
push
add
xor
in
push
cmp
popl
aam
int
lock
popa
sub
out
call
data16
repz
ss
cmp
adc
les
ret
testl
cmp
mov
or
jg
pop
mov
outsb
add
in
cmp
push
jp
jge
jb
dec
inc
xchg
es
sbb
insb
cmp
add
inc
or
and
sarb
jecxz
out
ret
in
mov
inc
rcr
xchg
push
dec
push
sbb
inc
fs
cmp
xor
mov
cmp
mov
pop
popa
and
in
popa
insb
mov
fcomp
jp
orps
sahf
repnz
inc
fnsave
jp
pop
scas
mov
xor
inc
adcl
stos
sub
orl
add
cmp
imul
or
fs
hlt
mov
mov
inc
cwtl
and
adc
leave
mov
xchg
rolb
mov
fs
nop
lea
mov
orb
mov
xor
mov
add
sbb
out
xchg
lret
int
jo
adc
and
or
mov
push
int
mov
test
and
sub
inc
pushf
adc
add
lods
fimull
xor
hlt
sub
fwait
movsl
les
sbbb
ja
lret
gs
pop
cmc
repnz
pop
rcrb
mov
lcall
shrl
jecxz
pop
movsb
inc
je
add
fsub
push
inc
lea
dec
sbb
lods
push
sub
leave
sbb
lds
cmp
movsl
xadd
mov
repnz
enter
mov
popf
test
push
test
inc
xor
fsubrs
and
pushf
add
inc
mov
add
out
xor
int
test
xchg
addr16
movsl
pusha
lret
loop
add
hlt
mov
xor
push
mov
mov
rolb
iret
cmp
push
mov
push
fistpll
lock
fistpl
sub
mov
inc
push
cld
pushf
inc
pop
inc
movsb
add
push
push
repnz
imul
push
fidivrs
stc
loopne
out
dec
mov
mov
jmp
aaa
pusha
jo
mov
int3
in
xchg
cmp
adc
sbb
outsl
sbb
jo
adc
rolb
into
mov
and
shl
or
loope
add
int3
add
xchg
rolb
movsb
cli
test
mov
mov
adc
int
cltd
push
inc
out
sub
roll
shll
add
nop
mov
push
imulb
dec
jp
cmp
dec
shrl
mov
adc
sahf
push
insb
fmulp
inc
mov
outsl
sbb
vpsubsb
adc
sbb
pop
add
push
shlb
ret
bound
push
or
pop
aam
jae
call
push
dec
add
pop
ret
push
pop
push
jne
mov
pop
bound
push
push
fwait
lahf
arpl
jae
pop
jmp
push
pusha
stc
lods
pusha
std
dec
in
push
clc
jno
gs
pop
outsl
orb
push
popa
jae
cmp
inc
pusha
sub
pop
outsb
cmp
aas
jo
lahf
pop
outsl
inc
insb
xor
cwtl
push
popa
pop
out
pop
pop
push
sub
dec
inc
pop
mov
add
sub
push
dec
clc
jl
jbe
jnp
sbbl
push
mov
stc
iret
je
dec
or
fs
pop
insl
ljmp
jno
push
dec
xor
jo
stos
and
jnp
arpl
mov
andl
xchg
and
ret
push
pop
int3
jbe
loope
jmp
outsl
insl
inc
pop
js
jbe
incb
jne
push
les
test
jae
gs
cwtl
cmp
jb
popa
pop
jl
mov
or
mov
or
cmp
push
fwait
add
nop
inc
jo
sahf
inc
adc
xor
mov
mov
jl
add
into
xor
movsb
sbb
fmull
xor
ror
fiaddl
add
and
ret
push
xor
mov
sub
inc
mov
adc
fwait
xor
pop
movsl
mov
pop
sahf
test
and
mov
cmpb
scas
lds
pop
xchg
or
in
pusha
lcall
cwtl
lock
loop
sbb
inc
test
push
xchg
ret
xor
xor
adc
xor
movsb
sub
and
xor
adc
es
adcb
sbb
loop
sbb
sub
pop
notb
repnz
and
cltd
or
fs
sub
xor
jl
mov
lods
ret
and
outsb
test
cwtl
push
mov
cmp
xchg
lret
xorb
and
add
cld
jp
rclb
inc
and
jnp
sub
mov
ret
das
and
dec
xor
sbb
adc
sub
stos
or
xchg
and
nop
mov
bound
and
mov
adc
test
mov
push
jg
jle
lock
mov
inc
loope
cmp
in
xor
jmp
push
adc
mov
mov
lret
imul
clc
loop
jo
popa
cli
ret
aad
sbb
push
pop
std
dec
cmp
icebp
pop
xorb
sub
mov
sbbb
jmp
and
jnp
pop
ds
mov
sbb
jl
xchg
xlat
mov
js,pt
mov
push
fistpll
mov
loopne
mov
lcall
mov
test
mov
insb
pop
and
push
lret
xor
jl
add
dec
repz
flds
loopne
jnp
addr16
inc
xchg
cld
push
leave
add
mov
add
loopne
outsl
cmp
imul
pop
mov
pusha
or
jmp
dec
mov
jo
ret
es
loopne
loop
push
or
add
fdiv
in
adc
mov
ljmp
push
xor
sbbb
stc
sub
lret
jae
mov
das
cli
cld
or
inc
inc
test
scas
lock
mov
es
inc
cwtl
mov
iret
ret
add
sbb
es
and
scas
pushf
sbbb
add
cs
loope
inc
sbb
lods
add
repz
inc
pop
mov
imul
lds
adc
in
adc
inc
pop
cld
lret
jecxz
outsl
push
push
rorb
aas
test
test
mov
lods
add
hlt
scas
mov
push
add
jge
cli
mov
jmp
dec
dec
add
cli
push
pop
and
push
test
xchg
mov
enter
dec
sti
cmp
mov
mov
jne
ja
call
clc
dec
push
pop
popa
sti
pusha
cmp
pop
ret
inc
or
dec
aam
sub
mov
ds
or
or
fwait
mov
inc
pop
ja
ret
addb
mov
ljmp
mov
loop
pop
rorb
imul
orb
mov
subb
mov
out
testl
gs
shrl
dec
loopne
mov
repz
pop
jne
jmp
mov
add
inc
pop
stos
lea
add
mov
fs
arpl
mov
lock
jl
cwtl
aad
enter
or
popf
test
into
jnp
enter
and
sub
repz
movsl
shll
mov
push
loope
js
add
cmpsb
in
mov
std
add
iret
addr16
jns
cwtl
in
and
dec
mov
mov
orl
addr16
decl
inc
dec
pop
test
jae
gs
or
push
pop
imul
fnstsw
sbb
xchg
es
jl
mov
jb
lret
cld
mov
mov
and
push
addb
loope
pop
roll
iret
sbb
pop
push
je
in
aad
stos
inc
jl
stos
cmp
testl
ret
add
xchg
adc
add
and
ds
add
and
lods
inc
inc
clc
or
aad
mov
cmpsl
mov
addr16
adc
repz
cmp
incl
push
mov
add
sub
inc
or
dec
pop
iret
add
aam
mov
les
je
mov
popf
rolb
add
sub
xor
lods
int3
or
and
mov
pusha
push
sbb
pop
push
aad
aaa
add
jns
loopne
sub
addb
lret
fmuls
dec
and
mov
cmp
jl
or
push
out
int3
pop
test
xchg
popa
gs
push
out
ljmp
xchg
lea
cmp
pusha
or
and
mov
imul
adc
add
stos
ja
hlt
mov
add
or
adc
jb
add
and
push
add
insl
add
cmpsl
add
dec
cmp
mov
loopne
dec
xchg
cmp
mov
adc
leave
jecxz
push
int3
les
loopew
popa
lcall
sbb
add
jns
popf
push
inc
lods
adc
and
inc
mov
lahf
dec
int3
lods
pop
clc
out
and
adc
out
push
nop
push
sub
lcall
sub
xchg
adc
pop
fsubl
inc
bound
sub
add
mov
stc
lds
outsb
push
call
pusha
inc
cltd
add
xor
arpl
jbe
add
jne
frstpm(287
push
dec
add
push
sarb
sahf
xor
xchg
add
dec
lret
lret
out
push
pop
add
outsl
nop
inc
icebp
add
outsl
flds
mov
test
push
out
int
iret
or
and
pop
test
loopne
mov
cmp
outsb
out
push
ret
add
sbb
or
lret
jns
shlb
adc
test
push
add
xor
jecxz
pop
fsub
and
out
pop
test
inc
sbb
test
les
cmpsl
mov
test
sbb
and
inc
test
jnp
int3
xchg
loopne
sbb
mov
add
popa
sub
repnz
mov
mov
lea
lock
loopne
nop
add
pushf
in
pop
pop
mov
mov
xor
sub
adc
mov
add
mov
jnp
adc
cmp
mov
orb
add
idivb
mov
clc
add
das
xor
aaa
adcl
mov
mov
dec
ret
jae
movlps
test
sbb
pusha
pushf
sub
sbb
mov
mov
pop
mov
inc
cmp
fidivrl
rcll
testl
cmp
data16
and
daa
xor
lock
mov
arpl
and
das
jl
push
dec
lahf
push
orb
cmp
out
add
mov
popa
add
xchg
test
faddl
xchg
sbb
jecxz
in
dec
add
inc
lcall
xchg
hlt
orb
movl
sbb
mov
mov
pusha
inc
xchg
xor
push
imul
add
pusha
cs
adc
dec
cmp
adc
sbb
add
out
xchg
mov
inc
sahf
sbb
outsl
call
dec
inc
add
push
jns
mov
pop
bnd
pusha
pop
xchg
push
cmp
pop
pop
imul
mov
lds
push
scas
or
aas
add
push
or
sub
add
push
das
mov
imul
mov
cmp
and
cwtl
xor
test
sub
mov
cmp
out
repnz
xchg
sbb
lret
test
and
push
jg
add
and
mov
add
test
enter
iret
or
lds
pop
imul
test
pusha
sub
add
pushf
ds
dec
add
and
loopne
xor
inc
cmp
out
or
jno
arpl
cltd
sbb
lds
mov
insl
and
jb,pn
je
xor
mov
mov
add
fs
pop
mov
lret
dec
addl
push
add
jo
dec
ss
xchg
ror
inc
pop
inc
rclb
sub
dec
push
je
mov
xchg
mov
mov
sbb
bound
and
lock
in
mov
or
mov
pusha
iret
loope
mov
add
sub
inc
mov
xor
push
sbb
pusha
and
sahf
and
les
adc
and
add
mov
and
into
inc
lods
or
add
jl
nop
mov
mov
pop
into
adc
cmp
dec
dec
hlt
shlb
cmp
outsb
add
mov
ret
pop
mov
test
adc
arpl
ror
rol
or
or
test
es
sbbb
cmp
add
loope
cmp
and
fcoml
popa
int3
enter
sub
jo
nop
push
leave
out
and
cmp
inc
add
rcrl
lock
jae
and
int
mov
pop
cvtps2pd
cmp
hlt
mov
sub
int3
dec
popf
xorl
ret
addb
enter
lcall
out
and
cltd
mov
adc
gs
shll
xchg
mov
lcall
mov
pop
lahf
or
sbb
jmp
mov
cmp
add
shrl
call
leave
sbb
out
nop
adc
gs
std
call
pop
lea
and
jl
mov
adc
jp
pop
adc
test
jl
add
jae
cmp
push
mov
pop
pop
mov
test
into
jp
and
int
xor
cmpsb
mov
jbe
dec
add
aad
imul
mov
add
mov
or
or
test
loopne
movsl
bound
add
or
dec
add
jae
sbb
add
xchg
ret
roll
in
pusha
cmp
or
movsb
xchg
arpl
cmp
add
movsb
outsb
dec
fstl
mov
cld
cwtl
rclb
add
or
sahf
jo
cs
cmp
insb
jnp
mov
xchg
je
scas
and
outsb
lods
cmp
lock
fwait
xchg
sub
scas
cmpsb
add
inc
test
movsb
dec
imul
xor
push
xor
add
push
jbe
imul
test
aas
xor
push
enter
cli
mov
out
add
push
xor
dec
imull
xor
scas
js
sub
add
pusha
sub
movsl
inc
jne
mov
sbb
pop
das
lret
int
pop
mov
out
fldt
add
rclb
cmp
adcb
outsb
inc
pop
cmc
aas
dec
lods
cmp
mov
das
mov
xchg
xor
loop
add
aam
mov
and
xchg
enter
in
jbe
loop
aad
roll
lahf
dec
mov
jae
outsl
stos
cld
adc
repnz
and
inc
add
out
add
push
mov
aaa
adc
push
scas
lds
add
jp
inc
shl
mov
movsb
jbe
cltd
test
and
mov
das
aad
adc
call
xor
inc
mov
or
push
in
and
fsub
add
push
dec
add
in
fnstcw
jns
movsb
es
es
push
push
and
push
lods
test
nop
in
fisttpl
repnz
add
push
nop
enter
add
mov
jne
cmp
xchg
addl
rcrb
fsubrs
add
das
addb
xchg
add
insl
push
leave
in
roll
addr16
cwtl
jl
push
pop
pop
ljmp
fiaddl
ret
iret
add
push
test
pop
roll
lahf
or
jle
sbb
cwtl
ss
mov
popf
xlat
xor
int
inc
inc
lret
dec
jno
cmp
jle
or
mov
sbb
stos
int3
inc
std
xchg
xchg
mov
add
pop
ds
fldl
sbb
pusha
movsb
and
mov
fidivrs
in
add
xor
cli
icebp
lret
leave
add
sub
rclb
std
sub
imul
bswap
out
push
mov
add
stc
movsl
or
jp
jp
jbe
pop
cmp
and
call
orl
inc
or
mov
or
ss
adc
mov
addb
leave
adc
pusha
mov
or
xor
dec
mov
and
add
cmp
loope
stos
call
push
or
adc
imul
sbb
pop
jo
xchg
jb
jne
cmpsb
or
cwtl
test
pop
adc
xchg
or
jns
jns
mov
out
or
enter
mov
dec
testb
mov
pop
mov
jnp
sub
out
mov
loopne
or
sbb
cmpsb
adc
in
test
mov
leave
lcall
mov
les
xor
std
repz
clc
add
pop
pop
cli
into
js
and
mov
ds
mull
mov
add
imul
stos
add
jl
and
dec
or
mov
jno
imul
jl
mov
xchg
jne
popa
call
cmpsl
mov
fwait
pop
fisttpll
add
sub
cmp
shrb
dec
and
lret
jmp
mov
ffreep
imul
add
cld
or
ds
out
mov
dec
stos
out
add
xor
or
dec
cli
sti
or
xchg
add
data16
orb
lods
pop
hlt
jns
jg
xlat
xchg
inc
jne
jge
push
ja
rcrb
mov
pop
xsave
adcb
pop
or
dec
xor
repnz
pop
in
mov
dec
pop
hlt
add
cmpsl
jne
mov
shl
clc
lds
add
stos
pop
ja
cmpsl
adc
add
mov
inc
fdiv
rorb
adc
jno
or
add
stos
push
cmp
andb
mov
add
out
mov
inc
sbb
test
mov
adc
push
fdivrs
push
mov
shrb
ljmp
jno
setnp
adcb
xor
pop
cli
or
bound
push
mov
fwait
cmp
add
pop
mov
lret
add
cmc
fisttpl
popf
or
orb
out
mov
sarb
pop
arpl
cli
push
push
cmpsb
lods
push
adcb
jge
mov
clc
jcxz
add
arpl
add
or
ja
int
ljmp
aas
sub
xchg
ficoms
roll
cwtl
fstl
scas
stc
mov
jnp
fstps
ja
imul
test
roll
mov
outsl
loope
sbb
icebp
hlt
dec
mov
test
int3
sub
repnz
or
clc
mov
aaa
push
mov
movsb
jne
xor
cltd
mov
pop
mov
add
pop
push
in
mov
es
or
sti
adc
je
mov
add
push
filds
xor
aam
lret
pushf
inc
dec
push
jae
fstps
push
and
adc
pop
lea
fsts
pop
jmp
add
adc
push
dec
jns
sub
pop
rcrb
rolb
dec
pusha
add
fwait
xor
push
loopne
dec
lock
call
mov
pop
clc
int3
jne
jp
add
test
xor
pop
fildl
add
xcrypt-ecb
cmpsl
dec
movsl
imul
mov
mov
insb
add
jg
scas
loopne
jp
add
lcall
adc
repnz
push
jo
xor
sbb
lcall
aad
fists
pop
mov
in
pop
sbb
add
and
inc
in
mov
js
mov
push
push
sbb
lods
pushf
shlb
pushf
add
out
add
stos
jmp
lahf
lock
jne
xor
pop
lods
sub
add
dec
push
inc
and
int
les
testl
loop
bound
adc
fimuls
xor
icebp
mov
aaa
push
pop
out
hlt
das
mov
push
ljmp
in
fadds
or
sbb
fnstsw
pop
cmpb
mov
mov
and
in
xchg
cmp
push
loopne
out
jbe
add
push
push
add
dec
adc
arpl
pop
leave
sbbb
cmp
add
int3
fisttpl
or
js
addb
sbb
aam
mov
add
into
mov
add
cwtl
inc
out
xchg
xchg
ja
xor
nop
fs
add
jae
and
xchg
into
jnp
or
jb
pop
and
add
push
xor
and
mov
adc
sbb
pop
or
popf
call
nop
inc
sub
loopne
add
jae
movsb
std
rorb
clc
rsm
and
mov
outsb
mov
add
inc
int3
stc
cmp
repnz
sub
loopne
add
cli
lret
out
jmp
ficoml
adc
pop
jo
punpcklbw
mov
lcall
add
std
lods
mov
ret
iret
or
lret
andl
shrb
scas
mov
jnp
jg
ljmp
or
sub
imul
sbb
inc
push
adc
dec
mov
jl
add
mov
xchg
add
inc
int
es
adc
cs
push
mov
jp
out
add
mov
mov
mov
lock
add
mov
cmp
fnstsw
jnp
lock
add
jne
outsl
in
enter
punpcklwd
xorl
mov
sub
mov
jnp
jno
cmp
push
add
popa
adc
lds
mov
and
push
out
nop/reserved
jmp
adc
fadd
add
pop
and
sbb
inc
push
lret
lods
and
scas
inc
ja
ficoms
repnz
add
xor
leave
adc
mov
add
aaa
pop
out
cmpb
mov
loope
in
leave
dec
sub
pop
cltd
mov
enter
pop
inc
mov
frndint
inc
jnp
filds
rcl
movsl
cmp
repz
add
es
rorb
out
mov
ja
inc
push
inc
fwait
daa
or
or
fstps
cmc
in
test
mov
lea
cmp
xchg
mov
adc
imul
and
loopne
mov
adc
and
stc
lds
mov
subb
out
js
faddl
or
jo
inc
ljmp
pop
xor
in
out
dec
outsl
or
add
lods
mov
cmpsb
dec
xor
adc
mov
incb
std
cld
xor
push
dec
imul
data16
lds
jecxz
mov
adc
sub
addr16
dec
out
test
adc
outsb
outsb
sbb
mov
mov
jne
imul
jmp
and
lods
mov
and
add
mov
arpl
mov
pop
fildl
pop
mov
mov
cmpsl
jo
fadds
addl
addb
jo
add
popa
into
mov
lret
pop
add
mov
sbb
dec
cld
add
xchg
daa
jo
pop
cmp
sarb
adcb
cmp
adc
mov
add
in
rolb
out
repz
mov
add
out
xchg
lds
popl
sbb
je
mov
cltd
dec
aaa
sarl
sbb
add
js
add
imul
pop
inc
jg
je
cmp
call
push
or
ja
add
clc
out
jae
mov
ret
popf
sbb
pusha
clc
outsb
mov
jne
stc
lret
fs
mov
sub
push
inc
xchg
add
les
outsb
xlat
mov
mov
scas
aas
mov
cltd
mov
ja
sarb
pop
je
and
push
nop
or
aas
sub
push
push
mov
js
int3
xor
jo
sarl
dec
inc
subb
push
sbb
jmp
orb
jge
cs
push
mov
nop
xchg
adc
xchg
mov
roll
mov
outsb
imul
cmp
sub
push
aam
icebp
pop
or
stc
mov
jns
fidivrl
sbb
lret
mov
fs
test
pop
add
xchg
lahf
stos
add
adc
loop
add
push
mov
add
or
mov
inc
add
addl
ss
push
push
mov
mov
cli
nop
or
cltd
mov
andb
mov
dec
aas
into
lret
dec
sub
cltd
pop
add
ljmp
mov
xor
add
jecxz
push
jg
add
aas
xchg
fisttpll
int
add
into
inc
sahf
lea
add
lahf
add
adc
fcomps
mov
pop
sub
test
testb
mov
repnz
sub
add
or
sub
xchg
jg
popa
pop
iret
dec
push
lods
jns
icebp
push
or
gs
jmp
mov
scas
xchg
lret
dec
add
std
out
push
add
jns
clc
mov
xor
sbb
mov
add
bound
js
add
cmp
data16
and
xchg
aad
dec
enter
pop
or
xchg
loop
mov
insl
dec
xchg
rorb
mov
sarb
mov
addb
xor
insb
dec
xorl
xchg
cmpsl
fcomi
out
dec
daa
mov
xchg
xchg
mov
je
imul
add
adc
lods
push
stos
out
mov
in
push
popf
pop
add
add
fwait
gs
mov
xchg
jbe
jl
mov
outsb
loopne
dec
lods
pop
jp
unpcklps
js
cli
inc
jnp
and
cmp
rolb
push
mov
lret
inc
inc
cld
shrl
jg
add
push
ljmp
aad
lds
loopne
pop
stc
add
pusha
cmc
mov
lds
adc
pop
insl
lcall
fiaddl
sti
repz
rorb
or
sbb
repz
jge
push
fisubrl
sub
lret
dec
mov
nop
dec
xor
push
jo
out
outsl
inc
add
xchg
faddl
lock
je
lea
mov
xchg
mov
inc
inc
jne
xor
cmp
or
jl
sbb
sub
ds
in
add
and
xlat
ret
xchg
jge
cmp
sbb
call
nop
insb
dec
popf
mov
cld
mov
in
push
imul
lcall
cmp
cmpb
inc
fisubrs
add
mov
ret
call
and
out
push
sbb
or
add
int3
pop
pop
test
sub
andb
cli
movsl
add
jle
jnp
stos
add
pop
out
push
lock
add
test
and
mov
fcomps
pop
notb
movsb
jecxz
ds
add
mov
and
sub
jmp
in
jg
aas
lods
sub
pop
cmp
gs
inc
jae
mov
add
lea
pop
xchg
add
add
popf
sub
mulb
lret
mov
add
push
inc
add
pop
mov
dec
xor
jo
jge
jmp
fldenv
lock
movsb
jbe,pt
inc
mov
xchg
xor
imul
dec
push
add
mov
add
testb
push
aam
test
mov
nop
jae
pop
popf
cmp
fcoms
inc
or
adc
xor
mull
sbb
mov
fcomi
pop
adc
mov
stos
lea
and
mov
movb
pusha
cld
lret
loopne
add
sub
and
cmc
xor
and
add
clc
or
and
xor
repnz
push
repz
add
imul
inc
lret
loope
mov
mov
pushf
xor
mov
lods
mov
sbb
rolb
sbb
ret
add
cmpsb
xchg
aas
bound
sbb
movsb
or
cwtl
add
loope
jmp
pusha
cs
adc
inc
add
insl
adc
add
push
add
or
dec
cmp
and
pop
add
movsl
mov
fcompl
add
mov
orl
sarb
push
add
in
inc
inc
and
jg
add
les
and
adcb
in
fwait
mov
add
pusha
xchg
andl
add
pushf
mov
pop
dec
scas
stos
mov
iret
or
ja
add
jbe
and
loope
into
in
addb
jmp
xlat
inc
mov
sti
loope
xchg
pusha
bound
pop
cmp
xchg
out
movsl
js
rcl
stos
faddl
add
mov
pop
pop
cmp
push
xorb
add
inc
out
add
lret
lock
or
fs
jg
arpl
add
divb
add
scas
bound
add
or
cwtl
test
cmp
ds
movsl
test
jns
dec
aas
xlat
mov
inc
inc
sbb
cmp
dec
sub
shl
inc
xor
xchg
dec
aas
or
pushf
xchg
jp
push
mov
cmp
sbbb
add
movsl
jp
aam
inc
inc
xchg
clc
add
pushf
xchg
and
ja
push
clc
sbb
pop
push
inc
xor
mov
shr
movsbl
add
into
sbb
push
test
jg
dec
and
lods
sub
pop
xchg
nop
mov
or
adc
cld
out
jo
mov
add
jne
xor
mov
adc
fildll
nop
mov
adc
aad
add
pop
cli
mov
mov
jo
andb
in
inc
cmp
jb
add
popa
shll
sar
stos
mov
test
and
mov
mov
and
sub
xchg
mov
xlat
jb
jne
add
leave
dec
pushf
jnp
pop
inc
sub
shrb
xlat
bound
mov
lods
sub
cs
or
mov
and
outsl
pop
lret
jle
ja
adc
rcrl
cwtl
add
xchg
inc
das
sbb
jb
lock
lret
add
lods
push
andb
jecxz
ja
and
push
push
in
adc
sbbl
add
pop
iret
xor
xor
mov
mov
add
add
xor
mov
mov
inc
or
sub
mov
out
enter
sub
mov
mov
inc
daa
xor
xchg
mov
adc
ja
add
adc
add
mov
fs
shr
insb
adc
dec
sbb
call
inc
loop
push
inc
cmp
cmp
xchg
pushf
add
out
ja
lods
insb
cli
ret
sbb
cmp
jns
shr
addr16
dec
test
repnz
jnp
add
adc
cmp
addr16
clc
enter
out
dec
mov
cmp
repnz
xchg
adc
adc
mov
cmp
mov
push
push
rcrl
jp
add
push
popa
push
pop
cmp
fs
push
xor
xorl
data16
imul
adc
test
mov
ljmp
outsl
mov
add
sbb
pop
xchg
xor
cmp
imul
xchg
aam
ljmp
cwtl
sub
sahf
xor
mov
sbb
add
popa
filds
ret
and
gs
add
push
sbb
pop
pop
cmp
mov
jnp
jb
pop
jg
dec
cmp
push
push
dec
add
jl
pop
stos
iret
pop
insl
sub
adc
adc
and
and
js
cwtl
inc
push
xor
xchg
push
sarl
and
and
adc
xorb
add
mov
ret
lahf
and
lea
inc
adc
das
and
daa
je
dec
ss
xchg
and
sarl
pushf
incb
xchg
and
mov
lds
and
and
sub
and
addr16
sbb
aas
dec
or
sub
fnstenv
add
push
int
jns
pop
pop
mov
pop
shr
push
into
mov
cltd
mov
xchg
dec
jge
add
or
shrd
sarl
cwtl
testb
push
hlt
or
sti
stc
jne
pop
je
sbb
incl
mov
cli
and
inc
jne
fwait
xchg
orb
fiaddl
jbe
sarb
jle
xchg
addr16
cs
adc
adc
bswap
cmpsb
repnz
push
clc
out
sbb
mov
cmp
mov
mov
mov
scas
sub
ret
xchg
pop
mov
cmpsl
fsincos
aad
xchg
rclb
fisubs
repz
xchg
aaa
outsb
mov
or
xor
sbb
inc
test
stc
or
fisttpll
stos
inc
ja
xlat
fsts
imul
enter
insb
push
fbstp
adc
adc
repz
lds
dec
iret
and
push
out
into
add
stc
leave
loopne
int
lret
xor
add
xor
jecxz
test
or
pushf
add
mov
jge
and
push
popa
push
mov
loopne
sbb
mov
cmp
lcall
nop
rcll
push
and
aaa
pop
mov
jmp
add
xchg
iret
or
lds
shr
add
xchg
cmp
ret
or
sub
js
out
push
jp
ds
subb
and
in
sbb
inc
or
bound
sbb
fs
repz
cmp
push
xchg
add
push
cli
mov
adcb
mov
push
mov
clc
stos
test
xchg
repnz
fisubs
stos
xlat
sub
pop
xchg
pop
cmc
sbb
ss
test
push
push
je
push
mov
jne
inc
push
mov
mov
fldt
mov
jb
jns
sub
jmp
add
test
jge
imull
adc
cmp
mov
pop
dec
push
add
or
adc
add
outsl
mov
add
mov
mov
push
mov
jne
and
add
ss
add
xchg
dec
add
shl
add
jb
cmpl
aam
mov
data16
mov
jb
icebp
sahf
jno
add
inc
cmc
adcl
pop
mov
push
pop
repz
test
incl
aas
repz
or
jecxz
or
push
add
add
imul
push
test
popf
mov
sahf
mov
fsubrs
notb
add
pusha
mov
jecxz
push
adc
mov
je
scas
pop
xlat
cmp
lods
mov
hlt
add
cmpsl
lds
adc
ss
outsb
test
pusha
ret
sahf
pop
int
std
insb
dec
xchg
leave
flds
add
push
xchg
sarl
mov
add
jecxz
dec
loopw
and
fbstp
mov
dec
js
test
std
jp
sahf
adc
xor
ret
loopne
scas
mov
out
dec
int3
outsl
lock
mov
mov
cmpsb
mov
push
push
sub
pop
add
add
es
dec
test
add
jnp
jl
pusha
xor
xor
adc
add
mov
inc
sahf
xor
stc
xchg
dec
addr16
add
adc
push
jg
add
cmpsb
mov
rclb
xchg
pop
mov
inc
xchg
xor
push
jl
js
dec
mov
add
jmp
test
in
cmpsl
and
xchg
mov
ljmp
test
jo
push
lret
push
pop
add
arpl
xor
nop
cmpsl
test
in
add
fimull
and
cltd
xor
les
gs
xor
push
inc
testl
insl
jns
int3
iret
mov
push
std
pop
test
jno
sbb
inc
ljmp
out
movsb
adc
loop
jg
push
pop
fisubrs
or
mov
pop
pusha
inc
mov
adc
fsubs
mov
mov
inc
add
scas
int3
lds
testl
add
dec
ret
mov
push
int
lods
or
jnp
mov
pop
clc
adc
jne
and
add
xchg
ds
test
add
push
jg
cmp
pop
lahf
fwait
add
hlt
add
jecxz
frstpm(287
sarb
and
sub
cmp
fdivr
and
push
cmc
cmp
pushf
add
sub
pusha
add
arpl
imul
inc
cmp
cmp
mov
cmp
out
mull
lret
int
add
into
mov
addb
scas
addb
aam
js
sbb
in
rorl
sbbl
push
adc
mov
xor
neg
mov
dec
out
adc
add
movsl
cmc
in
adc
aaa
inc
jmp
cmpsb
addr16
jmp
pop
js
jp
negb
xchg
clc
xor
dec
test
sbb
cmpsb
cmc
dec
xchg
add
mov
in
cmp
jg
and
sbb
fdivs
xor
push
mov
jg
test
mov
add
cs
push
frstor
mov
mov
push
push
idiv
fists
in
andl
add
push
jbe
popf
ret
fidivs
je
cld
mov
cltd
stc
ljmp
stos
add
sub
xor
mov
push
orl
hlt
sub
pushf
arpl
imul
jl
or
jg
pop
int3
cwtl
add
lock
ljmp
mov
test
aam
jae
incb
pop
cmp
es
inc
jle
hlt
add
pop
in
push
sbbl
movsl
add
data16
cmc
inc
cmp
jnp
add
pop
call
out
loope
test
aam
aas
xor
pop
and
cmp
inc
mov
add
lock
sbb
test
shlb
fadd
sbb
add
or
lcall
jge
add
lock
dec
cmc
pushf
cwtl
jg
mov
loop
pop
mov
js
xchg
adc
test
dec
adc
sbb
inc
movsb
add
lahf
and
pop
push
inc
xchg
outsb
sar
add
cltd
daa
adc
enter
adcb
add
inc
lods
insb
cmp
add
xchg
xchg
leave
push
cmp
pop
add
popa
sub
or
adc
loopne
rcrb
cmp
in
jne
into
sub
add
int
adc
cmp
movsl
add
pop
push
add
inc
lock
leave
mov
push
jle
lods
sbb
jmp
out
pop
repz
push
push
les
shlb
dec
call
in
pusha
xchg
test
add
jo
and
rolb
out
call
xchg
pop
mov
jae
add
xchg
pop
mov
sbb
mov
jns
xchg
mov
add
pushf
xor
addr16
lods
and
or
add
je
inc
ljmp
addb
xchg
inc
add
xor
cli
inc
loop
xchg
adc
adc
sbb
push
dec
imul
push
add
outsb
dec
mov
pusha
and
jae
fsubl
adc
mov
or
xchg
xchg
add
sub
push
cmpsl
sbb
inc
rep
jnp
shll
hlt
cmp
ret
adc
xchg
add
dec
jmp
add
cmpsb
adc
mov
imul
cmp
push
jnp
sub
push
pushf
ret
sbb
push
pop
mov
dec
cs
imul
std
pushf
mov
adc
jecxz
cld
add
xchg
xchg
add
pop
in
jp
mov
xchg
testb
repnz
cmp
test
mov
cmc
inc
mov
pusha
dec
fsubl
rcrb
je
or
or
and
mov
push
xchg
imul
or
cmp
cwtl
add
pop
stos
pushl
sub
inc
cltd
push
cwtl
mov
jle
movaps
adc
daa
pop
cmc
imul
cmp
sar
js
add
mov
outsl
andl
add
xchg
out
add
xchg
addb
sbb
repnz
sbbb
into
roll
lock
or
sbb
jl
cmp
inc
add
icebp
jb
cld
js
pop
test
mov
xchg
bound
cmp
cmpsl
dec
ret
or
fst
pop
imull
xchg
incb
push
roll
and
jle
cmp
or
fisubl
push
pop
push
orb
nop
add
faddp
adc
clc
test
fwait
test
xlat
cmc
and
jbe
and
cmp
xor
out
cmp
adc
cld
mov
xchg
adc
test
popa
cmp
orb
call
in
leave
or
mov
sbb
mov
add
aad
sub
mov
add
test
lahf
xor
outsl
dec
enter
xor
push
mov
sub
movsb
inc
add
add
xchg
in
nop
jge
dec
imul
xlat
or
stc
xor
bnd
in
jae
xchg
in
mov
es
mov
daa
fiadds
dec
rcr
add
pop
mov
sbb
cmp
mov
mov
pop
pop
push
leave
jge
jmp
scas
pop
mov
movsb
int
add
ljmp
fdivrl
mov
jb
cs
add
stos
sbb
verr
or
xor
aas
pop
adc
negl
or
cmp
ret
add
pop
faddl
daa
cmp
cmc
fadds
imul
mov
stos
mov
add
int
jno
and
lahf
push
jecxz
inc
fcompl
mov
pop
call
adc
add
gs
push
mov
cmp
popf
add
lea
jg
or
add
aaa
fs
mov
mov
pop
and
aas
pop
xchg
mov
add
insb
ljmp
mov
sbb
jae
add
popa
add
dec
pop
jne
test
pop
sbb
stos
xchg
mov
out
mov
adc
rol
inc
lock
in
push
fisttpl
pop
add
mov
jns
xor
mov
xor
pusha
int3
dec
add
sub
and
fsubrl
pusha
test
mov
jns
lods
movsb
sbb
loop
dec
aad
adc
dec
ss
mov
mov
mov
adc
ljmp
clc
add
aad
lock
cmpsl
jp
dec
xchg
push
orb
inc
push
mov
fwait
enter
cvtpi2ps
repnz
xchg
sub
and
cmp
fisttpl
pop
cltd
test
lock
icebp
outsb
adc
and
rclb
adc
or
jne
push
js
into
mov
sbbb
dec
leave
dec
inc
out
out
add
ret
mov
add
push
adc
and
ror
in
mov
mov
int3
in
adc
mov
add
sub
jno
pop
mov
sbb
sbb
mov
dec
push
adc
add
into
das
push
fstpt
mov
xor
call
shrl
loop
add
sub
add
clc
rcrl
addr16
cmpsb
loop
in
mov
mov
cmp
lods
movsl
aas
incb
fwait
out
dec
cwtl
or
lds
or
inc
ret
mov
pop
pop
andl
jns
pop
or
xlat
ret
sbb
mov
nop
je
cmp
and
jns
fs
arpl
test
popa
cmp
push
inc
xor
add
addr16
adc
xor
cmp
lcall
mov
out
iret
mov
fidivrs
cs
mov
imul
pop
lea
cs
and
jecxz
test
pusha
jns
roll
pop
imull
cmp
dec
cmc
incl
scas
movb
inc
clc
adc
or
fisubrl
sti
cmpl
scas
leave
sbb
push
jge
bound
mov
push
xchg
daa
insb
loopne
std
adc
stos
jbe
xchg
in
push
add
xchg
cld
jae
add
mov
out
add
popa
in
push
pusha
movsb
ljmp
sbb
xor
orb
cmpsl
sub
adc
inc
add
popf
and
mov
insb
xor
sbb
and
les
imul
das
icebp
subl
or
add
mov
arpl
jnp
out
jg
and
dec
push
mov
dec
mov
or
jne
pop
xor
ret
aas
adc
pop
ret
jnp
call
cmpb
add
das
loopne
add
inc
sub
lcall
cltd
fsub
jb
mov
stos
loopne
xchg
or
aas
ret
lea
popf
cwtl
add
iret
and
sti
mov
add
pop
divb
add
cs
sbb
pop
fcmovnbe
mov
add
push
cld
mov
jl
add
cmp
scas
mov
cmc
push
xor
and
pop
cmp
loope
xchg
lods
loopne
xor
mov
push
add
cltd
je
mov
xchg
fidivs
sbb
xchg
add
cmp
jmp
popa
or
ds
stos
in
mov
jb
faddl
mov
pop
push
lock
adc
pop
pop
les
jle
jo
loopne
mov
mov
jnp
jp
add
sbb
sbb
xor
sarb
rcrl
add
pop
ds
push
dec
shr
cmp
test
loop
pusha
addr16
decb
subb
push
add
dec
xchg
xor
xchg
cmp
mov
sar
jl
movsb
addr16
sbb
mov
jno
jnp
test
add
and
or
roll
pop
out
lcall
iret
call
in
push
stos
xor
aas
insl
pop
inc
jns
adc
or
pop
hlt
add
imul
rcll
xchg
and
cwtl
std
push
sbb
mov
lods
loopne
adc
add
xchg
jge
sti
cmp
inc
testb
mov
adc
call
and
xor
gs
in
ret
fcmovnu
adc
sti
mov
mov
adc
dec
add
push
outsl
jo
xor
push
cmp
xor
fidivrl
and
xor
je
push
adc
test
loop
add
mov
lahf
pop
scas
jns
sbb
xorb
xchg
leave
add
pop
mov
add
adc
scas
repz
in
push
adc
sbb
pusha
dec
or
rcll
xchg
inc
add
mov
add
scas
mov
adc
dec
or
jnp
jbe
iret
sbb
dec
add
mov
inc
je
or
clc
stos
pushfw
sub
sub
inc
jmp
sbb
push
mov
sahf
sbb
pushf
mov
jae
fmuls
add
pop
aaa
outsb
mov
jo
sbb
adc
jecxz
jl
adc
mov
aam
inc
adc
mov
mov
sub
clc
sbb
test
inc
dec
mov
xor
pop
sbb
frstor
xor
jns
add
pop
mov
cmpsb
jae
movsb
adc
push
lcall
lret
cmc
sbb
pop
xor
daa
jne
add
cmc
push
add
mov
test
sbb
lahf
jno
lods
out
add
mov
int3
pop
and
push
or
pushf
mov
mov
jp
orb
cmp
push
inc
and
mov
jg
mov
sub
repnz
mov
cwtl
mov
ret
pop
dec
add
lods
push
in
roll
les
cwtl
andl
sarb
push
fs
sbb
jl
sbb
cmp
pop
mov
fstps
inc
roll
aaa
ja
add
scas
cmp
data16
pop
mov
sub
jbe
test
mov
std
adc
adc
sub
add
out
pop
add
pop
and
adc
jo
add
call
or
rolb
xor
or
jno
fstp
fsubr
xor
pop
cwtl
xor
mov
std
push
fucomip
in
rcr
int3
push
lds
push
clc
loopne
add
scas
lock
shlb
xchg
lahf
add
sbb
mov
push
inc
adc
cmp
or
sbb
test
xchg
mov
add
and
jo
add
xchg
add
sub
mov
imul
orb
stc
je
sub
or
xor
cmp
add
inc
mov
sbb
mov
loope
sub
lret
add
xchg
mov
xor
sbb
std
sub
add
nop
xchg
add
push
xchg
fsub
jmp
popa
add
dec
add
jo
movsl
out
mov
je
hlt
leave
xlat
xchg
xchg
fistps
xor
or
iret
sub
add
sahf
sbbl
push
clc
daa
stc
dec
mov
clc
or
loop
nop
add
shll
xchg
push
pusha
mov
int
fs
lods
mov
add
pop
mov
into
dec
clc
sbbb
icebp
pop
test
add
cwtl
pusha
fdivrs
adc
push
enter
mov
mov
aam
loopne
sbb
nop
in
cmp
in
pop
xor
xor
jg
cs
xchg
ljmp
jo
or
gs
sub
repz
xlat
jns
ficompl
fstl
addl
pushf
sub
or
into
push
lds
adc
add
lods
les
into
ret
add
pop
or
lcall
xchg
xlat
pop
or
cmp
nop
cmp
add
inc
mov
add
lock
sbb
and
gs
test
cli
push
xor
mov
add
decb
nop
or
mov
cld
add
data16
add
outsl
iret
std
add
lcall
mov
pop
sbb
mov
sub
inc
fs
sub
sti
stc
xchg
adc
mov
out
push
add
lcall
cli
outsl
mov
pop
adc
push
cmp
xor
xchg
mov
mov
test
jmp
orl
add
adc
xor
not
test
loopne
jl
add
adcl
mov
loopne
les
mov
or
dec
xor
jo
pop
add
popa
mov
test
imul
jo
sub
dec
pop
add
dec
mov
psrad
cwtl
mov
aad
pop
lods
push
add
jmp
sbb
in
or
mov
mov
xor
inc
nop
imull
sub
mov
add
xor
inc
rorl
mov
cwtl
in
outsl
out
dec
add
stc
mov
adc
fs
mov
push
addb
cltd
push
movsl
cmp
sbb
push
test
push
imul
sbb
mov
add
pusha
mov
dec
fld
fs
xor
dec
scas
pop
sub
in
xchg
jae
aad
push
leave
push
add
daa
testb
or
stc
add
pop
inc
pushf
aas
fcompl
cmpsl
mov
xchg
push
ds
ss
push
ret
fdivrl
arpl
test
add
xor
mov
add
movq
push
loopne
add
cmp
stc
shlb
sub
enter
stos
add
push
popl
cmp
inc
adc
pop
out
inc
jecxz
xchg
jb
xlat
sbb
outsl
xor
and
mov
sbb
repz
pop
int3
popa
enter
or
and
cltd
add
imul
xor
scas
popf
jecxz
imul
les
idivb
or
repz
mov
mov
add
test
cltd
je
add
lcall
iret
loopne
add
xor
push
mov
mov
mov
lret
mov
iret
mov
cmp
jno
push
add
fcomp
push
jnp
adc
lahf
add
popf
xor
jo
lcall
scas
or
or
pop
dec
mov
inc
ret
cmp
push
dec
out
stos
outsb
mov
lahf
push
shlb
mov
sub
or
movl
js
lret
lea
pop
xchg
mov
or
call
jne,pt
inc
mov
aas
jle
adcl
push
jp
jge
stc
add
inc
pusha
add
add
or
xchg
ds
pop
addr16
add
scas
xor
sbb
jns
and
add
je
cli
mov
and
adc
shlb
cld
pop
cmp
mov
push
loop
rcr
fdivr
dec
addl
fwait
test
and
fiaddl
cmp
fucom
and
hlt
add
pop
cmc
sbb
cli
movaps
andb
mov
shrb
out
adc
dec
adc
pop
mov
mov
fcoms
or
or
cmp
and
test
push
loope
ljmp
or
pop
call
push
hlt
out
mov
imul
cmp
inc
fmull
enter
fcmovne
cmp
cmc
xchg
jo
add
data16
mov
jle
imul
aaa
dec
inc
cwtl
add
or
outsb
xchg
hlt
pusha
inc
stos
loop
in
add
or
pop
inc
adc
mov
xchg
fwait
pop
add
mov
mov
inc
add
push
lret
lahf
add
mov
xchg
add
and
in
inc
push
add
sbb
aaa
mov
stc
mov
pop
xchg
mov
jo
popf
lods
lock
je
push
cmp
insb
mov
add
add
mov
or
add
inc
sub
sbb
pushf
add
push
mov
add
add
bound
std
mov
jle
mov
mov
add
adc
inc
push
inc
in
lret
dec
push
shll
sub
push
loopne
sub
push
cli
and
and
add
cmpsl
jb
jns
mov
ret
push
out
movsl
fstpt
jle
or
les
hlt
and
cmpl
or
cmpsb
xchg
add
cmpb
and
bound
dec
push
orb
mov
xchg
movsb
and
pop
pop
pushf
aad
movsl
xchg
jg
sbb
jb
or
mov
push
addb
fmuls
imul
add
cmc
hlt
add
jno
push
lahf
jmp
jmp
aas
leave
inc
sbb
xchg
jnp
jbe
add
je
test
lcall
adc
jnp
sarl
jmp
mov
push
sbb
xor
cmpsb
and
mov
cmp
lret
mov
icebp
cmc
add
loopne
lahf
xchg
inc
lret
rorb
shlb
adc
and
xchg
insl
arpl
inc
jae
or
push
or
sbb
sahf
and
add
and
fcomi
rolb
jne
adc
cwtl
aad
add
cmp
push
ret
xchg
in
add
int3
xchg
leave
xchg
inc
pop
fstpl
jecxz
test
dec
xchg
add
or
pop
fldt
sub
jmp
add
xor
mov
pop
xor
xchg
fidivs
mov
or
int3
shr
dec
jl
xchg
insl
jp
jno
or
pop
push
add
ret
pusha
es
out
mov
in
mov
xor
sbb
mov
add
adc
push
add
sbb
jp
mov
roll
imul
scas
test
shr
add
pushf
adc
add
daa
push
and
hlt
mov
aas
or
inc
xchg
enter
pop
sar
push
or
add
in
cmp
xor
into
jg
repnz
lock
or
movsl
jmp
lret
fists
push
jg
xorb
mov
orb
dec
jnp
cwtl
push
jb
movsb
dec
xor
mov
or
shlb
xor
aas
fisubl
adcl
mov
jo
sub
adc
mov
fdivr
dec
push
add
cmp
ja
sti
mov
or
sub
adc
jecxz
fsubs
movsb
sub
pushf
ret
and
shr
add
sbb
cmpsb
roll
iret
add
cmpsl
push
and
sub
lock
jecxz
sbb
push
aas
add
xchg
push
pop
jmp
push
jp
incl
ja
fsubl
adc
add
sbb
mov
sbb
jae
sbb
mov
mov
jecxz
test
sti
fbstp
repnz
xorl
add
pusha
leave
sub
or
cwtl
sbb
xchg
xchg
dec
xlat
sub
inc
xchg
adc
pop
jge
cmpsb
aam
ss
cmp
out
pop
mov
push
jo
stos
outsb
fiaddl
pop
stc
lahf
sbb
push
aad
xchg
adcb
je
fsubr
add
and
mov
jns
add
out
popa
pop
hlt
icebp
cvtpi2ps
in
lcall
testl
and
mov
sbb
dec
cmp
sbb
scas
push
stos
add
mov
pop
shrb
or
dec
mov
je
inc
shlb
jge
popf
mov
jecxz
ja
push
dec
push
cli
arpl
sbb
add
or
or
push
add
xchg
or
test
inc
xor
roll
add
test
or
mov
imulb
pop
js
in
fs
mov
add
sar
cmp
or
dec
cld
jo
str
mov
loope
aad
or
and
push
add
shlb
mov
jge
fimuls
add
add
push
aas
daa
add
ljmp
out
add
xor
lods
cmp
xor
cmp
dec
add
add
jge
popf
sbb
xor
outsb
inc
add
in
jg
sbbb
push
cli
mov
pop
inc
sub
insb
xor
out
popa
push
enter
add
into
in
push
mov
xor
pop
popf
sbb
mov
jae
add
pop
int3
addr16
jle
adc
mov
std
push
gs
lods
fsubs
or
push
jle
aaa
pop
xchg
cmp
insl
pop
jns
je
mov
pop
inc
and
or
mov
out
pop
mov
sbb
jl
shll
clc
fcmovnbe
movsl
ds
cmp
subb
sub
dec
and
sub
pusha
sub
push
mov
ss
dec
imul
add
push
push
xor
sub
push
mov
mov
add
das
mov
mov
imul
dec
push
loope
push
js
jecxz
negb
mov
sbb
inc
cmp
mov
clc
es
popa
jge
pop
add
cmpsl
xor
push
mov
popf
xchg
shlb
mov
arpl
fistps
rclb
jnp
fiadds
rcl
rol
jle
inc
enter
test
out
rorb
add
jnp
psubusb
loopne
cmp
jl
push
sbb
cwtl
imul
mov
inc
mov
pusha
lret
shll
je
adcl
pop
movsb
in
xlat
cmp
mov
add
cwtl
icebp
pop
inc
cld
cmp
xor
sahf
sub
jo
adc
add
lret
mov
push
adc
mov
ret
inc
dec
add
js
hlt
loop
pop
xchg
cmp
add
and
in
loopne
adc
xchg
nopl
iret
rorb
es
lds
mov
add
push
jg
orl
jno
int3
jo
cmp
mov
xor
movups
add
mov
xchg
loopne
movsb
rorl
jecxz,pn
pop
pusha
in
mov
dec
pop
add
rcl
leave
jae
add
addr16
es
inc
jo
sahf
out
add
and
and
add
jbe
mov
cmp
xchg
push
or
insb
mov
aas
add
test
sub
push
jns
ljmp
xchg
add
pop
add
xor
pop
sub
sub
inc
jb
xchg
shl
pop
mov
loopne
mov
arpl
scas
inc
lcall
or
shrl
in
loopne
cmp
pop
xchg
fs
and
add
outsb
mov
jb
les
int
insb
pop
sub
or
std
adc
add
mov
jmp
outsl
clc
ficompl
jecxz
jecxz
pop
lock
aam
mov
mov
lret
call
sbb
mulb
xchg
add
into
push
std
dec
cwtl
aas
lds
add
adc
mov
xchg
add
sub
add
xchg
mov
push
fisttpll
dec
mov
popf
dec
push
subb
test
icebp
leave
add
or
mov
incb
push
mov
fidivrl
inc
rclb
jbe
add
out
sti
aaa
jge
add
hlt
pop
push
sub
les
data16
addb
or
push
xor
mov
mov
leave
testl
out
imul
mov
pop
mov
inc
fsubs
adc
xor
loop
cmpsl
sahf
shll
add
xor
gs
sbb
ret
pop
mov
dec
jne
adc
push
mov
or
xchg
lss
in
add
mov
sub
and
xchg
xor
cmpsb
add
or
push
popl
jle
add
add
cmp
and
inc
adc
js
pushf
pop
mov
insb
fs
pop
shrb
add
test
insb
je
xlat
inc
mov
stos
inc
jo
std
add
or
js
mov
aaa
shrb
jle
mov
or
push
and
xor
out
add
jmp
fs
daa
dec
nop
cmpsl
add
loop
jns
mov
push
jo
adc
pusha
mov
adc
cmp
mov
cmp
aad
jg
add
std
add
sub
js
repnz
pop
out
inc
add
ret
nop
hlt
pusha
mov
std
pop
jne
and
sbb
mov
decl
add
xchg
sub
and
mov
jle
das
stos
xor
pop
lds
dec
xlat
add
out
popl
lock
push
mov
dec
add
mov
push
add
cmp
pop
mov
adc
add
dec
test
cmp
mov
inc
xor
pusha
addb
outsb
adc
repz
inc
clc
pop
mov
jl
imull
roll
ret
cmp
aam
add
mov
xor
pop
int
cmc
sub
or
add
jne
cmp
add
cmp
inc
cmp
lods
filds
mov
fcoms
mov
pushf
sbbl
cmp
data16
push
push
and
inc
mov
aam
xchg
sti
or
dec
inc
mov
pop
mov
push
stos
xchg
adc
mov
add
jl
pop
adc
cvtps2pi
or
icebp
movsb
add
jnp
pop
mov
es
mov
mov
add
gs
xchg
mov
add
fcompl
pop
mov
jmp
xor
add
mov
dec
xor
incb
call
add
pop
mov
jbe
cmp
or
pusha
push
lods
shr
add
outsl
add
cmp
and
data16
mov
sbb
test
rcl
fwait
mov
jl
icebp
imul
add
mov
push
insb
stc
frstor
xor
js
or
daa
arpl
sbb
pusha
cmp
pop
add
repnz
nop
xor
ficoms
mov
enter
xchg
push
adc
xchg
add
dec
lret
xchg
mov
push
add
fistpll
xchg
add
cli
push
cmpsl
xchg
in
or
imul
sbbb
pop
sub
jmp
mov
aad
movl
loope
inc
int3
cmpsl
lock
stos
pushf
add
test
das
scas
roll
movsl
int3
inc
sbb
mov
in
adc
test
addr16
adc
daa
pop
les
mov
xor
xor
add
mov
and
lret
lret
je
push
jae
jo
mov
out
xor
push
lea
repnz
jmp
mov
out
popf
sbb
xchg
sarl
push
push
mov
call
mov
inc
pop
xor
sbb
dec
add
cld
and
mov
adc
xor
pop
fldcw
enter
jge
xor
adc
pop
rclb
hlt
enter
jecxz
rorl
std
inc
xchg
outsb
pop
add
adc
mov
cmp
mov
mov
jp
out
add
int
icebp
add
add
and
mov
jl
pop
xchg
idivb
mov
mov
ds
test
xchg
addr16
in
mov
fisubrl
fnsave
add
mov
push
es
mov
fsubr
add
idiv
das
sbb
cmp
cltd
or
and
jbe
xorb
es
push
jnp
pop
daa
rcrl
js
mov
push
lods
cli
ffree
andb
ss
jo
sarb
dec
xchg
das
dec
push
movsb
mov
mov
loopne
sub
clc
aaa
push
cmp
xor
in
or
daa
rorl
hlt
aad
mov
sbb
jl
daa
jnp
les
daa
pop
dec
movsl
lea
inc
jge
movsl
lock
pop
les
fisttpll
push
add
int
sub
mov
in
mov
pop
xchg
je
add
jl
adc
mov
fistpl
or
jns
or
dec
lret
jne
add
bound
cld
inc
aad
push
mov
test
subl
add
dec
mov
fdivr
push
fcoml
add
sbb
out
xor
lods
in
sbb
dec
es
adc
cmp
mov
inc
adcb
xchg
ss
pusha
inc
fdivrs
push
les
mov
jae
cmp
add
xchg
andl
mov
mov
xor
lods
out
in
lcall
nop
push
adc
rorl
hlt
add
add
xor
out
pop
push
and
sub
sub
dec
sbb
adc
dec
jecxz
or
push
add
add
fisttpll
ljmp
mov
pusha
xchg
jns
or
out
add
mov
addb
add
push
dec
ljmp
mov
mov
adc
into
add
loop
xchg
inc
jo
add
sub
std
jb
mov
pushf
inc
seto
and
hlt
dec
sub
push
push
sub
mov
in
add
jbe
xor
dec
cmp
push
cld
add
adc
push
adc
and
xchg
cmp
sub
sbb
push
mov
jns
out
addb
and
adc
daa
and
mov
mov
lret
jnp
out
cmpsl
or
insb
or
xlat
shlb
and
mov
sbb
add
add
mov
pop
or
test
sarb
cltd
pop
aas
aad
mov
fists
add
inc
aam
adc
lods
xchg
sub
sti
and
xor
imul
add
outsl
jl
enter
sti
xlat
shll
xorb
pop
jmp
push
mov
add
push
rcr
out
xor
fs
adc
sbbb
dec
xchg
cmp
rolb
les
and
std
lret
movsl
xchg
jae
out
hlt
loopne
into
insl
ds
add
pop
repnz
xchg
cmp
xlat
pusha
jo
mov
es
stos
lcall
int
adc
and
fadds
shlb
sub
inc
xlat
adcb
sub
xchg
es
sbb
jns
and
or
adc
add
adc
add
xor
dec
cmp
inc
cmp
or
mov
jnp
loopne
adc
add
sbb
pop
sbb
add
repz
test
pusha
mov
jne
test
mov
add
jo
push
mov
clc
int
mov
add
out
cmpsb
push
jnp
cmc
add
fcmove
inc
push
push
jp
push
mov
mov
dec
push
add
sbb
xchg
add
and
gs
ljmp
push
aam
mov
adc
imul
cmpsb
mov
addl
aam
vpmacsdql
or
cmp
add
cmp
cmpsl
add
add
cmp
xor
aad
mov
pop
popf
std
mul
jno
out
gs
je
add
inc
aaa
mov
es
iret
arpl
sub
out
cmp
test
loopne
jle
dec
in
pop
roll
hlt
fsubp
adc
cmc
mov
leave
xlat
jmp
and
loopne
movd
ss
mov
orl
pop
pop
fadds
inc
mov
push
mov
pusha
das
inc
push
pusha
mov
add
adc
and
negl
loopne
jl
ror
aas
insb
jnp
xor
rcl
pop
jle
in
add
adcl
push
outsl
andb
add
jg
add
jne
sub
orb
fldl
loopne
in
cwtl
or
sti
pop
hlt
add
and
add
push
je
arpl
dec
inc
pop
fsubl
sbbb
cmp
bound
mov
add
fnsave
push
sub
add
jge
push
inc
mov
pop
lret
mov
fmulp
inc
sub
dec
data16
lods
out
test
jbe
roll
sub
test
mov
rcrb
push
push
jg
dec
xor
lcall
dec
cwtl
sub
clc
xchg
inc
sbbb
ja
je
movsl
fadd
add
rorb
pop
or
and
jne
pusha
adc
inc
add
dec
cmp
add
jns
sbb
dec
jb
ret
or
dec
icebp
add
rolb
mov
inc
pusha
enter
push
or
jmp
aaa
mov
push
or
or
mov
sahf
add
and
cmp
aaa
and
cmc
sbb
pusha
xor
cmp
xchg
sub
pop
add
daa
idivl
add
insb
mov
push
jbe
add
pop
xchg
adcb
push
into
adc
cld
add
add
lods
fsubrs
popf
add
mov
add
inc
nop
mov
rolb
cld
xchg
fnsave
cwtl
pop
cmp
mov
add
inc
popa
aaa
mov
sub
xchg
inc
add
loope
add
ror
cmc
aaa
inc
rolb
adc
inc
pop
and
mov
add
sti
loopne
jecxz
ja
fadds
rcrl
fcomip
mov
and
sbb
in
add
std
test
pop
mov
and
push
jle
std
add
mov
push
xchg
loopne
test
xor
test
out
fcomps
push
stos
add
int
cmpsb
dec
mov
xlat
push
xchg
je
cmp
adc
sbb
into
in
add
iret
mov
sbb
loopne
push
jnp
push
arpl
and
jo
xor
cmpsl
jo
cwtl
add
psubq
cmp
mov
and
roll
adc
test
jl
inc
add
or
and
jmp
incl
ss
cmp
enter
popl
test
iret
adc
shl
xor
inc
push
add
pop
mov
push
add
lds
or
adc
int3
dec
sbb
push
outsb
pusha
call
dec
or
xchg
loopne
add
and
xchg
mov
add
mov
dec
stc
adc
sub
sarb
movsb
add
add
sub
mov
jmp
test
sub
add
imul
sub
cmp
adc
and
xor
dec
xchg
mov
add
sub
xor
fdivrl
adc
pop
dec
andb
mov
add
or
shlb
or
scas
add
shl
dec
cltd
cmp
nop
add
add
mov
mov
aad
repnz
and
xorb
mov
daa
mov
xor
add
cmp
sub
cld
adc
adc
jp
add
or
mov
push
pop
adc
fs
fwait
pop
dec
push
xchg
mov
sbb
sbb
mov
add
adc
mov
fsts
push
roll
and
jne
daa
mov
xchg
pop
dec
cmpsl
inc
or
dec
mov
js
jbe
add
push
sub
dec
movsb
add
mov
sbb
adcb
push
dec
mov
mov
cmovnp
cmpl
add
sub
mov
je
add
ret
mov
daa
sub
mov
push
cmp
andps
lods
adcb
push
scas
jb
add
mov
stos
fcmovnbe
movsb
rorb
xchg
js
jmp
repz
insl
add
cmc
cwtl
xchg
sbb
rcl
nop
adc
pop
dec
mov
pop
mov
dec
inc
cmp
lds
stos
jo
xchg
mov
inc
ret
dec
or
pop
pop
lock
or
ds
jnp
sbb
pushf
shr
bound
adc
add
pop
or
les
cmp
mov
test
repnz
aam
and
cli
dec
xchg
mov
adc
pop
add
icebp
loopne
shlb
call
jns
and
cltd
movb
adc
test
lret
adc
xchg
adc
in
mov
cmp
push
aam
cwtl
sbb
xor
pop
in
mov
jl
notb
push
pop
inc
icebp
add
aad
pop
jo
add
mov
addb
into
and
add
decb
mov
push
mov
rclb
in
xchg
pop
fnstsw
test
loopne
ljmp
add
in
mov
lea
xor
or
movsb
adcb
sub
in
inc
mov
push
jp
mov
rcll
mov
mov
into
mov
xor
or
aas
add
cmp
or
clc
loope
mov
and
and
cmp
mov
lcall
add
dec
lret
push
sti
dec
adc
adc
mov
xor
add
sub
popa
cltd
sub
subl
cmpb
push
pusha
add
fisubrl
insl
and
or
push
pop
pop
inc
mov
xchg
outsb
add
sbb
lods
pop
cltd
int3
repnz
cmp
mov
ljmp
insl
pop
add
push
jg
dec
jbe
cmpsb
add
xchg
inc
loopne
fwait
mov
js
repnz
call
ret
imul
cltd
sub
mov
cli
push
aas
mov
and
add
jmp
and
sbb
add
cmp
out
aad
dec
pop
popf
xor
andl
add
jg
in
test
lds
or
dec
jbe
out
mov
pop
pop
int3
pop
adc
jo
sub
mov
pusha
cmp
jl
and
pop
jne
sti
inc
jbe
rcrb
pop
and
mov
pusha
loop
add
push
aam
adc
xor
call
test
movsb
fs
mov
mov
jno
adc
cmove
dec
loopne
push
pusha
jge
add
lods
fimull
das
in
pop
sbb
cwtl
pop
lds
or
cmp
fdivs
and
das
adc
rorb
adc
xchg
data16
add
ss
nop
push
ds
xorl
add
outsb
mov
mov
sarl
iret
adc
bound
jg
roll
xlat
sub
sar
mov
and
jno
inc
mov
cltd
pop
add
shl
std
add
push
ss
dec
aad
add
xlat
sub
add
in
stos
fbld
add
sbb
popf
lahf
dec
ds
clc
add
push
add
lods
in
adc
xchg
hlt
push
scas
leave
idivb
and
sub
add
mov
aam
lret
bound
lahf
xor
jp
dec
xchg
sbb
xchg
sbb
lret
mov
sbb
iret
in
cltd
cmpsb
insb
add
loope
mov
out
jno
fldt
sar
dec
out
add
inc
lea
dec
cmp
xor
cld
stos
dec
dec
mov
and
cmp
jbe
adc
cwtl
xchg
push
loope
adc
mov
and
push
push
xor
and
cmc
das
or
and
cli
call
notb
andb
test
sub
add
dec
add
add
in
push
loope
subb
loopne
xor
add
hlt
sbb
or
sbb
cmpsl
jb
call
mov
push
mov
loope
add
add
movsb
mov
push
call
mov
clc
mov
hlt
xlat
mov
xor
inc
inc
insb
out
sbb
cmp
sub
loopne
dec
addr16
mov
push
int
or
and
mov
inc
pop
add
sti
sbb
ds
mov
addb
nop
pusha
mov
js
push
mov
leave
pop
jns
bound
lods
pop
fs
sar
mov
dec
repz
cmp
addb
push
loopne
mov
pop
mov
add
dec
std
xchg
js
outsb
mov
mov
cld
adc
dec
aas
or
scas
dec
imul
insb
dec
das
out
in
sub
mov
jl
pop
adc
mov
sbb
setae
loopne
mov
fidivrs
sbb
jl
inc
dec
sub
add
bound
mov
test
fmuls
add
or
xchg
js
jb
xchg
inc
test
pop
pusha
add
add
mov
jmp
xor
aas
inc
pop
cmp
xor
dec
push
sbb
imul
adc
jmp
cmp
jl
sbb
fldcw
test
mov
cld
xchg
ss
dec
loopne
add
or
or
cmp
add
sbb
pop
fidivrl
dec
xor
shlb
sub
movsl
and
jne
adc
lret
imul
pusha
les
jmp
lret
out
iret
push
int3
sub
mov
sub
or
rorb
and
repnz
push
dec
or
add
pop
xchg
les
add
js
cmp
out
jmp
add
ret
daa
sti
ja
popa
hlt
loope
test
add
lea
jecxz
cmpsb
mov
js
push
jo
pusha
inc
mov
pusha
iret
and
ret
sbb
inc
cmp
dec
fwait
lock
add
mov
push
inc
sbb
mov
enter
lret
push
or
adc
cmp
add
jp
xor
es
push
and
add
icebp
bound
cmp
mov
xchg
dec
jns
add
inc
mov
xchg
out
jmp
and
xchg
loop
ret
mov
cmp
cmpsb
bound
pop
xchg
dec
or
rcrb
insl
xchg
jle
push
popf
add
push
xchg
adc
fs
cmpsb
mov
and
pop
push
stos
int3
clc
dec
adc
cmp
xchg
pop
xlat
jb
in
enter
pop
pusha
sbb
mov
sbb
mov
inc
xchg
add
jl
and
jl
add
sbb
scas
iret
fisubrs
in
add
daa
jecxz,pn
jp
inc
add
test
pop
fisubl
mov
psrlq
aas
inc
movsl
xchg
call
adc
test
ja
fnstcw
xchg
xor
mov
dec
xchg
por
mov
and
cs
mov
rolb
or
jp
nop
mov
lcall
in
cmp
and
add
nop
in
ret
add
int3
test
jnp
fisttps
jmp
xchg
sub
mov
jns
sbb
cmovge
movsb
add
inc
mov
std
in
shl
icebp
add
push
jae
mov
pop
in
pmaxsw
push
cmpsb
imul
adc
subb
add
push
loope
xchg
inc
shrb
mov
mov
imul
jle
shll
mov
roll
and
xlat
push
dec
pusha
sub
subl
lods
lock
into
addb
aas
jecxz
call
sbb
pop
or
cmp
adc
adc
lds
cmp
xor
pushf
je
jp
pop
in
mov
jae
jo
aad
nop
add
repz
mov
add
push
aaa
xchg
ret
dec
mov
shlb
push
ljmp
jle
test
pop
inc
mov
adcb
add
fs
sarl
lock
inc
dec
cwtl
jo
cmpsl
add
push
pop
mov
andb
neg
cld
adc
push
popa
lock
add
mov
insb
add
gs
iret
enter
mulps
dec
mov
or
xchg
cld
call
stos
ss
inc
inc
sbb
fnstenv
movsb
adc
das
and
inc
les
in
jmp
sbb
je
ret
nop
sar
dec
add
jae
mov
xchg
repnz
fdivl
pop
jp
ds
ret
in
dec
pop
rolb
xor
je
pop
scas
inc
fdivl
lahf
sub
add
or
cmp
shrl
add
pop
jae
mov
jb
rclb
adc
add
arpl
and
add
in
hlt
insb
cmpsl
out
xor
and
or
cmp
xlat
das
inc
mov
xchg
or
push
sar
sbb
add
and
push
outsl
jle
mov
repnz
mov
hlt
inc
loopne
stc
sti
add
cltd
int
xor
stos
add
shrl
mov
mov
add
dec
push
xchg
inc
inc
jle
add
jmp
loopne
sbbl
sub
jnp
add
imul
scas
aad
adc
outsb
push
cmp
jb
rolb
dec
aaa
xchg
rolb
cltd
cmp
and
jle
dec
add
jns
inc
pop
push
mov
or
sbb
add
xor
popf
ja
ljmp
test
mov
imul
mov
enter
mov
xchg
int3
sbb
test
ljmp
aam
std
xorb
or
outsb
pop
lods
les
adc
push
mov
shrb
adc
xchg
loopne
cmpb
xor
test
popl
and
add
jo
fdivrs
outsl
mov
add
inc
out
adc
out
add
mov
mov
sbb
mov
popf
mov
cmp
xchg
negl
mov
sti
jg
add
ja
adc
add
insl
incl
xchg
lods
lret
pop
bound
sti
outsb
add
in
sbb
dec
inc
and
adc
cmp
cmp
xor
xor
add
dec
fstps
push
inc
or
and
cltd
lds
push
jnp
xchg
jl
shrb
add
gs
cmc
dec
imul
dec
cmp
outsl
inc
jne
sub
add
adc
pop
rolb
cmp
xchg
jg
fbstp
addr16
in
and
jmp
cwtl
out
add
out
xor
add
mov
or
insl
and
sbb
int3
jae
cmp
rol
movsl
jb
add
aad
fists
insb
add
cld
and
push
sbb
sub
sbb
in
iret
add
push
fsts
add
mov
int3
pusha
sti
add
xor
mov
enter
jnp
bound
pop
mov
test
mov
fwait
pop
rcll
mov
add
popa
adc
inc
dec
mov
mov
mov
add
je
jno
ljmp
testb
in
in
mov
out
sbb
loopne
add
adc
gs
and
mov
dec
inc
dec
push
jmp
popf
insb
in
push
jne
xor
fs
cmpsb
adc
loop
ret
lahf
cmp
jbe
and
or
or
pop
dec
mov
sbb
push
mov
fmuls
dec
and
add
mov
xor
imul
mov
cmc
sub
or
or
icebp
cmp
mov
fcomp
sbb
push
jnp
aad
loop
add
insl
out
pop
lret
mov
pusha
jmp
mov
and
out
shl
push
mov
test
mov
xchg
pop
mov
filds
xor
loope
inc
iret
and
jge
cmp
xchg
loopne
out
loopne
repnz
jo
add
push
lret
sbb
cltd
int
iret
mov
rclb
scas
stc
adc
mov
std
cmp
in
add
or
cmp
mov
and
push
enter
lea
xlat
ret
negl
push
cmp
fsubrp
cmpsb
push
add
inc
jo
cld
pop
add
cli
fisubl
cmp
lods
adc
add
nop
outsl
mov
dec
or
ds
add
jbe
movsb
mov
jb
sub
dec
loopne
ds
add
out
push
aad
enter
pop
ljmp
pop
out
add
jo
add
sub
push
adc
cmp
sub
dec
push
loopne
add
push
add
and
and
pop
adc
sbb
mov
movsb
je
mov
mov
mov
icebp
insl
xchg
test
add
adcl
inc
adc
leave
mov
adc
popf
add
call
push
and
aas
push
sahf
into
loopne
mov
sbbl
push
push
pop
add
scas
rorl
add
shlb
mov
add
lahf
fwait
ret
xrelease
test
mull
inc
sbb
add
mov
pop
jne
add
repnz
nop
adcb
cmp
nop
jge
sub
push
xchg
or
pop
stc
pop
add
cmp
jecxz
clc
in
add
icebp
lods
shlb
in
xor
add
dec
stos
lret
mov
imul
jo
pop
push
jmp
and
mov
mov
xchg
push
or
add
insl
cmp
push
and
pop
mov
pop
pusha
fimull
and
orb
mov
sti
fwait
lock
pop
icebp
xor
pusha
adc
mov
add
outsb
or
add
iret
imul
inc
je
sbb
or
out
xlat
adc
inc
xor
add
into
repnz
pusha
cmpsb
mov
add
sub
leave
mov
push
jns
inc
push
jle
int3
faddl
push
std
inc
repnz
fdivrs
mov
jns
pop
push
inc
push
stos
add
sbb
pop
mov
and
les
in
xchg
aas
mov
sbb
sarb
lret
in
mov
add
jbe
pop
mov
sbbb
or
ja
addb
iret
mov
psrlw
sub
scas
pop
ja
ret
and
or
dec
jl
cmp
rolb
int3
aaa
repnz
jp
call
push
jnp
je
add
mov
je
add
and
pushf
push
lcall
add
pslld
mov
shlb
fsubl
or
sarb
sahf
lds
outsl
adc
bound
fldl
imul
cli
jne
add
int
gs
push
nop
movsb
sbb
add
filds
pusha
addl
in
xor
dec
xchg
loopne
je
cmp
loopne
mov
cmp
push
in
xchg
and
fldt
rorb
jno
pop
sbb
add
lods
lret
clc
pop
idivb
shrl
test
jl
add
xchg
push
faddl
mov
sub
insb
repz
pop
cmpb
clc
pop
iret
stc
cmc
mov
mov
pop
std
pop
xchg
cs
outsb
add
push
popa
int3
mov
dec
lcall
insl
loopne
xor
inc
loopne
dec
inc
add
xchg
cmpsb
mov
or
add
fsubl
add
scas
mov
adc
or
imul
adc
inc
out
mov
into
repz
jecxz
das
dec
pop
rol
test
in
sbb
fwait
mov
pop
notb
stos
mov
or
cmp
jbe
aas
mov
mov
lahf
shrb
cs
cmp
outsb
mov
sub
loop
shlb
clc
aaa
mov
pop
daa
leave
fs
dec
pop
pop
dec
in
outsb
iret
add
call
mov
ret
jge
call
mov
call
fisubrl
outsl
fs
imul
mov
mov
std
add
jne
cltd
mov
sbb
sahf
pushf
add
dec
xchg
and
and
push
add
inc
mov
sub
push
inc
jl
fsubrs
pop
add
lret
iret
sub
jns
jmp
hlt
add
add
push
add
fcoms
push
lret
cmp
clc
sub
adc
mov
add
scas
add
inc
dec
xor
mov
aam
or
push
dec
and
fsubs
adc
es
test
jns
insl
or
repnz
add
rcrb
mov
pop
xor
pushf
add
push
andb
lds
mov
push
add
xchg
pop
loop
shrl
pop
repz
popa
add
loopne
pushf
add
pop
mov
leave
je
out
popf
adc
dec
or
insb
das
add
scas
pushf
push
cmpsb
stc
or
popf
cmpb
jo
add
or
js
sbb
sbb
cmp
sub
push
adc
mov
lahf
addb
dec
jmp
dec
mov
add
dec
add
cmpsb
add
add
cmp
mov
lahf
andb
icebp
and
inc
stos
push
xchg
fs
pop
std
push
xchg
stos
push
or
outsl
add
addr16
inc
dec
mov
shlb
add
rcll
xchg
aas
rolb
add
stos
inc
cmp
sarl
add
mov
dec
mov
xor
shl
cmp
sahf
add
sti
cmp
sbb
call
push
jmp
pop
xchg
inc
xchg
jns
cmp
sub
jecxz
stc
mov
jnp
mov
add
loopne
mov
in
das
xor
jle
add
maxps
mov
sub
jb
pop
mov
jmp
test
fiaddl
push
call
mov
movb
inc
sti
cmpsb
fiadds
and
fs
xor
mov
push
inc
lock
out
inc
bound
outsb
mov
rclb
inc
push
mov
inc
adc
mov
and
cmp
or
or
mov
aas
cld
cmpb
jge
popa
push
add
jmp
lret
add
jg
les
repz
adc
movsb
hlt
int3
add
addr16
push
pop
or
ret
lods
xchg
mov
aam
cli
shlb
add
inc
in
push
out
arpl
verw
fldcw
sbb
arpl
loop
push
adc
inc
scas
add
fwait
ds
mov
out
in
call
mov
sbb
mov
rol
sub
mov
rcl
mov
in
movsb
add
loope
movb
rcpps
outsl
xor
cmp
or
ret
int
insl
add
ja
aaa
mov
or
cwtl
lock
xor
jl
rcrb
pushf
mov
test
into
jge
mov
add
lret
add
cltd
jbe
push
jmp
movb
inc
out
mov
pop
pop
push
add
clc
gs
pop
xchg
aas
xchg
lds
xchg
push
lcall
add
js
sub
ja
push
pop
lock
cmp
cmpb
add
clc
mov
add
or
iret
test
xor
add
mov
or
daa
nop
sbb
cmpl
aas
int3
dec
inc
add
je
or
inc
cld
xor
xlat
movb
or
cmp
pop
mov
scas
loop
sub
mov
sub
add
sub
int3
add
xor
cmp
mov
sub
dec
sub
sub
pop
xchg
pop
shlb
insb
aad
adc
mov
inc
pusha
je
xor
xlat
inc
movsl
inc
ljmp
add
pop
fs
test
mov
mov
sbb
ficomps
add
outsb
mov
mov
lcall
add
bound
cmpsb
in
and
lds
jbe
pusha
cld
inc
jge
add
call
pop
push
add
jb
enter
fldcw
insl
fidivs
ud2
nop
int
je,pn
add
cmp
in
xchg
loopne
pop
fdivrp
aad
shl
pop
lods
lahf
push
pop
or
aam
ret
gs
sbb
mov
cwtl
daa
pop
add
mov
ss
jl
add
incl
bound
push
jg
push
test
enter
sar
push
repz
jae
aam
add
mov
ret
cmp
mov
fcmovu
xor
lahf
inc
scas
or
repnz
add
decl
test
xchg
add
jl
jns
std
add
fcmove
or
lock
and
add
sbb
pop
in
mov
push
pop
dec
ret
ds
into
jo
into
aam
andb
inc
dec
dec
add
movsl
push
lods
pop
jae
add
push
pop
js
movsb
sbb
push
fyl2xp1
imul
fldt
xchg
nop
lock
xchg
mov
pop
test
popf
pusha
clc
lahf
leave
add
xlat
jne
lods
adc
outsb
add
lret
push
or
add
or
and
dec
xor
or
inc
pop
lods
adc
or
iret
cmp
adc
xor
mov
call
cld
outsb
xor
repz
or
sub
lret
call
in
xchg
test
cmpsb
add
fldcw
lods
or
xchg
sub
sbb
jns
add
or
leave
add
xchg
daa
add
sbb
jbe
add
mov
pushf
hlt
xchg
cmp
sub
push
mov
inc
aam
jg
pop
pop
cmp
call
clc
sbb
sub
sbb
pop
sbb
clc
pop
daa
mov
add
lods
into
jg
dec
mov
icebp
gs
hlt
in
jnp
jb
sub
push
rolb
into
and
push
adc
add
lea
jns
nop
pop
add
test
clc
mov
jp
sub
sti
into
mul
mov
fstl
mov
dec
mov
inc
push
addb
xchg
add
dec
call
sub
iret
jb
rclb
pop
clc
add
les
push
xlat
rclb
mov
dec
add
hlt
pop
ja
pop
xor
inc
or
cmp
insl
cs
out
add
sub
sub
mov
adc
xor
xlat
add
lods
repnz
ljmp
inc
jg
mov
push
fwait
and
xchg
mov
repnz
mov
mov
and
dec
adc
inc
cmp
jno
ja
push
add
jle
pop
repz
arpl
inc
pop
test
add
mov
in
add
mov
andl
xchg
popa
jl
jne
sbb
sub
test
pop
mov
mov
or
outsb
inc
sub
arpl
adc
and
pushf
shlb
das
sbb
xor
push
add
dec
jne
inc
iret
cmp
xchg
cmp
and
nop
mov
add
rolb
add
inc
dec
mov
add
jae
sub
add
aaa
jae
jecxz
sbb
lock
xor
imul
dec
dec
add
sub
psllq
sbb
dec
inc
lods
mov
scas
cmc
inc
ficoms
dec
push
addb
sbb
sub
xor
lods
out
push
sbb
cmp
inc
or
push
inc
or
cli
pop
adc
dec
adc
cmp
sti
leave
daa
fstpt
add
lock
das
add
xchg
push
imul
in
jg
dec
mov
inc
dec
jnp
adc
push
add
or
mov
dec
xor
lcall
add
push
jns
jo
or
lods
loopne
xor
jo
cmpb
xor
add
sbb
cli
add
jno
lcall
dec
dec
inc
push
imul
lea
pop
xlat
ret
enter
jle
in
daa
pop
and
add
outsb
call
cmc
add
mov
shrl
sti
adc
add
inc
jae
cwtl
cmp
cwtl
mov
call
adc
cmp
add
repz
fistps
jle
je
xor
stos
xchg
pop
push
xchg
mov
sarb
xchg
mov
in
lock
jbe
sub
in
add
mov
jg
test
jno
jp
cli
sbb
in
lds
pushf
scas
inc
sbb
sbb
imul
arpl
add
pop
pop
scas
xlat
push
loopne
xchg
out
dec
call
adc
and
int
cmc
sbb
pop
mov
jb
test
sbb
add
push
or
mov
ss
pop
fadds
xchg
pop
sub
push
add
daa
lea
testb
push
mov
call
jb
push
mov
rclb
scas
repz
and
stos
adc
icebp
xchg
pop
sub
jne
sbb
dec
push
and
pop
cmp
pop
dec
lret
mov
xchg
sub
shlb
adc
xchg
or
adc
push
or
mov
add
pop
gs
movsl
mov
add
xchg
jmp
aaa
cmpsb
sbb
jge
pop
jne
int3
dec
ret
jae
add
mov
insb
or
and
popa
cmp
add
cmpsl
stos
sahf
push
or
insl
shrb
add
sbb
shrb
roll
xchg
jecxz
ds
mov
adc
lcall
sbb
scas
loope
adc
xchg
adc
arpl
into
add
pop
dec
or
xchg
pop
ss
sbb
push
sub
add
mov
loope
and
push
sbb
ss
add
stos
roll
pop
and
aad
pop
mov
jp
sbb
test
loope
add
fiadds
mov
aad
dec
in
xchg
jae
neg
inc
add
mov
out
add
jl
stos
jle
les
out
inc
add
mov
in
mov
cwtl
data16
xchg
jb,pn
in
and
adc
pop
adc
jecxz
push
mov
sbb
sub
inc
sbb
insb
rolb
push
ret
aaa
sub
jns
push
jno
inc
mov
mov
data16
mov
outsl
addl
jp
push
in
sub
push
mov
push
in
inc
and
mov
or
ret
inc
mov
mov
scas
and
js
lock
in
pusha
jecxz
stos
lea
test
movsl
out
push
push
add
into
push
ljmp
pop
fstps
push
fmul
into
inc
mov
subb
add
mov
js
and
icebp
leave
test
outsl
sti
push
outsb
int3
loopne
out
mov
pop
repz
pop
popa
cld
xchg
and
fidivrs
mov
sbb
leave
inc
adc
out
aaa
mov
adc
fisttps
leave
mov
mov
fisttpll
aam
andb
or
pushf
xor
mov
andb
ret
cmp
pushf
add
mov
stos
add
es
and
and
inc
adc
xchg
push
test
fwait
scas
sbb
push
enter
and
xchg
imul
push
xorl
push
pop
outsb
repnz
into
ljmp
out
mov
push
dec
add
fcoms
add
and
test
fisubl
cmpb
jecxz
mov
xor
pop
pop
ret
and
mulb
xor
movsb
clc
jge
scas
adc
mov
nop
push
hlt
dec
push
ds
aad
cli
and
sub
pop
roll
out
sarb
push
jmp
push
or
pop
mov
icebp
data16
loopne
add
and
add
adc
mov
inc
adc
pop
rorb
cmp
xor
add
add
pop
xor
add
xchg
int
sbb
test
js
sbb
leave
push
addb
lods
xchg
sub
mov
adc
pop
sbbb
std
xchg
dec
pop
inc
mov
fldl
mov
xchg
std
stos
add
push
enter
pop
aad
dec
mov
jmp
mov
sbb
pop
out
and
aam
das
add
jns
aas
lcall
leave
nopl
aam
mov
sbb
mov
xchg
sbb
inc
scas
cmp
scas
aaa
pop
jg
dec
dec
cs
and
ljmp
enter
imul
sub
push
cwtl
pop
xor
pop
lret
loope
rcr
adc
stos
rolb
xor
add
hlt
add
mov
aam
or
inc
cmp
lcall
inc
sbb
or
or
or
inc
lcall
inc
cmp
lods
cmc
xchg
in
ja
push
imul
lods
pextrw
mov
adc
mov
mov
add
cmp
cmp
push
adc
lock
das
sarl
jae
jns
add
cli
jo
and
es
cmp
mov
push
pop
cld
xor
push
mov
lods
inc
jl
lock
cmp
shr
mov
inc
test
xor
insb
or
jmp
xchg
mov
mov
ljmp
cmp
jo
pop
push
mov
push
in
inc
pop
aas
push
incb
mov
mov
cli
sub
or
pop
out
adc
mov
push
and
add
sub
ljmp
inc
xor
jle
add
jbe
or
jne
and
add
or
pop
add
pop
add
movzwl
mov
clc
ret
cwtl
aas
mov
dec
insb
mov
pop
icebp
loopne
push
push
cld
shrb
mov
mov
mulb
sub
bts
jnp
call
mov
aas
add
enter
sbb
mov
jbe
sub
xchg
lea
jo
add
xor
xor
sbb
xchg
test
jb
push
add
rcr
adc
out
ret
sbb
inc
sbb
das
pusha
xor
insb
pop
movsb
mov
cmp
sbb
cmp
fnsave
xor
mov
cmp
or
dec
cmc
adc
sub
push
jbe
mov
dec
add
pop
push
cmc
push
insb
sbb
ja
add
jg
fwait
loope
xchg
pusha
test
push
mov
add
xchg
adc
filds
dec
andb
inc
and
scas
dec
mov
lret
rcl
dec
add
push
jmp
fdiv
rclb
mov
aam
testl
and
push
mov
and
or
mov
jns
sbb
pop
insl
dec
adc
push
pop
fneni(8087
inc
or
adc
xchg
inc
jbe
inc
cwtl
add
cmp
push
insb
cltd
movsl
add
testl
and
sub
xchg
pop
dec
into
fbld
and
dec
mov
adcb
dec
add
lret
jmp
mov
lock
sub
subl
orb
fnstenv
inc
dec
push
div
add
lock
cld
lea
xchg
add
test
push
shlb
add
call
fcoml
xor
inc
inc
test
dec
cmc
sbb
adc
push
cmc
add
int3
push
fistps
jp
or
rorl
pop
dec
lcall
pop
shrl
cmp
sti
rcrl
add
cltd
mov
and
xorl
out
and
aad
stos
sub
mov
mov
ja
test
or
pop
and
andb
loopne
fists
and
or
dec
das
push
push
adc
cmp
adc
repnz
push
fwait
mov
xchg
jp
addl
repz
movsl
push
scas
mov
jb
icebp
enter
sub
add
sbb
sbb
adc
aaa
rorb
mov
xor
add
in
xor
repz
pop
sub
aaa
mov
pop
mov
daa
add
dec
inc
and
mov
fistpll
bound
xor
int
cmp
adc
xchg
dec
iret
es
movsb
mov
or
and
sub
push
xor
mov
icebp
std
push
add
fs
outsb
xor
inc
cmp
nop
mov
testb
pushf
and
enter
sbb
and
and
pusha
rorl
mov
mov
mov
icebp
clc
xchg
push
or
bound
cmp
push
mov
dec
daa
sbb
pop
cmp
mov
dec
push
stos
mov
add
loopne
jp
cmpsl
popf
mov
sbb
jae
add
cmpsb
xor
cmovnp
xor
fwait
lret
jae
sbb
cmc
les
pop
enter
or
dec
xchg
lods
inc
pop
push
xor
out
lcall
add
inc
adc
cmp
sbb
addb
loopne
add
and
pusha
dec
sub
stos
adc
lret
mov
inc
add
sbb
and
lock
add
imul
dec
insb
pop
add
push
jo
jp
lock
mov
mov
xor
test
dec
xchg
mov
xchg
aas
dec
add
inc
push
mov
pop
add
xor
jbe
add
cs
dec
xchg
sbb
add
dec
xor
cmp
inc
loope
add
xor
xchg
add
jb
mov
stos
nop
les
adc
mov
ja
les
mov
push
icebp
pop
add
xor
mov
inc
repz
mov
fadds
pop
fnstcw
sbb
call
ror
nop
mov
sub
add
ret
or
xor
popa
mov
inc
loopne
add
fnsave
nop
fs
push
pop
or
popf
jmp
les
xor
out
roll
js
inc
and
cmp
js
dec
jns
cwtl
xchg
pushf
fisubs
popl
inc
lods
jbe
pop
push
sbb
sbb
roll
inc
jno
mov
add
jmp
out
adc
xor
and
ret
sbb
inc
mov
add
lahf
pop
mov
inc
adc
stos
arpl
and
out
pop
fstpl
dec
call
mov
and
pop
mov
ror
pop
out
fadds
sub
aaa
sub
cmp
inc
push
andps
lods
push
xchg
inc
add
int3
push
rcrb
orb
or
call
xchg
addl
or
add
loop
mov
xchg
dec
iret
push
xor
jae
xchg
xor
dec
cmp
and
repnz
into
aam
mov
js
xchg
popw
loopne
push
cwtl
jns
mov
cmpsl
add
pop
jl
dec
sbb
xchg
push
cmc
sbb
inc
pop
and
adc
pushf
pop
rorb
cmp
push
inc
push
mov
xchg
scas
mov
push
mov
push
inc
jecxz
aaa
add
xor
lahf
and
jns
fistpl
cmp
cmpsl
shrl
add
ljmp
repnz
xor
inc
and
sbb
nop
mov
cli
pavgb
push
ret
insl
nop
pusha
pop
out
loopne
pushf
int
push
mov
addl
add
sbb
fbld
sub
push
add
add
lods
fldt
pop
jnp
sbb
in
loop
adc
and
and
mul
xchg
jmp
arpl
nop
add
jl
into
popa
rcrb
fwait
mov
je
icebp
pop
adc
add
pop
test
pavgb
mov
add
inc
repz
push
rclb
mov
pop
popf
cli
jo
push
pop
jne
test
subb
in
jecxz
mov
push
or
cmc
push
cltd
stos
je
hlt
xor
dec
add
icebp
jbe
cmp
jl
in
shlb
jnp
jge
enter
jno
loope
inc
pop
or
call
add
sbb
out
jb
cld
sub
adcl
lcall
jle
xor
add
ret
pop
pop
lods
add
imul
aas
pop
dec
andb
cmp
mov
inc
mov
jle
cmpsl
dec
decl
and
jmp
pop
xchg
pop
mov
addb
inc
daa
add
xorb
add
pushf
sarb
mov
cmp
mov
test
jmp
add
int3
pop
xor
nop
push
repz
cmpb
xor
sbb
lock
mov
adcb
jne
repnz
orb
repz
adc
mov
mov
jno
dec
das
push
adc
cvtdq2ps
push
push
or
ljmp
cltd
stc
les
adc
jle
ljmp
jl
mov
int
loop
sbb
or
push
jmp
rolb
mov
out
in
mov
out
lock
or
addb
adc
sbb
loop
push
jmp
or
cmpsb
adc
or
adc
insb
ret
adc
lret
jl
je
repnz
out
push
mov
lods
fs
add
cld
push
xor
pop
adc
cltd
mov
aad
jne
call
xchg
dec
push
in
add
add
jae
cvtdq2ps
loope
push
xorb
scas
cs
mov
test
xor
add
lods
jp
popa
inc
push
add
movsb
je
jne
ret
jnp
sbb
mov
loopne
add
iret
cltd
or
sub
cmp
lock
sbbl
xor
add
or
insl
jb
xor
push
inc
loopne
loopne
xchg
xor
pop
sbb
xorl
gs
jo
xor
shlb
add
jge
adc
pop
out
pop
not
mov
sbb
fnstsw
xchg
jb
repz
cmp
mov
subb
cmp
mov
mov
sub
add
lahf
in
loop
or
js
xor
stc
mov
jae
add
cmp
push
sahf
xor
push
dec
push
jbe
pop
pop
dec
lds
adc
loop
mov
and
std
notl
jecxz
add
mov
xor
pop
and
inc
dec
add
pushf
add
jge
push
sub
aaa
adc
mov
in
lret
xchg
xchg
scas
sub
or
mov
in
xor
cmpb
movsl
fwait
pop
push
jmp
in
xor
aam
test
cmp
xchg
jbe
and
or
or
or
jo
adc
std
cmpb
ljmp
pusha
pop
and
int3
adc
bound
or
sub
and
xchg
aad
pop
sbb
adc
xchg
jbe
fisttps
pushf
in
push
imul
cmpsb
sbb
jmp
jge
cltd
pop
push
loop
sbb
inc
cmc
and
mov
and
int3
divl
je
loope
jmp
mov
xchg
dec
inc
jg
mov
in
xchg
leave
push
sbb
jbe
call
lock
rcl
mov
xchg
xchg
aas
clc
movsl
xor
xor
or
inc
jnp
xchg
push
cmp
add
sub
fisubs
push
scas
cwtl
test
clc
es
add
mov
cmp
lret
popa
inc
jns
jb
push
lds
sbb
and
push
pop
ret
call
test
add
xchg
aam
js
dec
scas
adc
push
stc
push
mov
xor
mov
in
sub
sub
ret
out
jle
ljmp
daa
adc
sarb
jae
hlt
sbbb
das
or
repz
cld
sub
rorb
fwait
add
aas
loope
xchg
pusha
dec
dec
out
or
dec
repnz
dec
add
outsb
and
adc
rolb
sbb
cmp
push
sbb
popf
std
adcl
sbb
idiv
popa
ss
or
shll
test
mov
aaa
inc
cmc
add
or
aaa
push
mov
mov
jb
mov
popa
pop
mov
cmc
jns
inc
push
lods
sub
mov
call
or
aas
cmp
sbbb
icebp
lar
sbb
adc
pop
and
add
das
aam
cmp
add
hlt
add
inc
roll
rolb
mov
and
add
and
or
in
mov
cmp
adc
mov
pop
jmp
lods
clc
xlat
mov
psubw
out
push
lds
aaa
xchg
sbb
pop
dec
shr
sahf
xor
adc
fidivl
inc
cmc
or
aaa
aam
sub
cwtl
jmp
lods
pushf
cmc
jb
lahf
add
fbstp
int3
add
xchg
dec
add
shl
sub
add
cmp
clc
pushl
jge
xor
cmp
ljmp
test
mov
inc
int3
jae
cmc
shl
pop
or
int3
add
cmp
xchg
divb
out
mov
lods
cwtl
cld
and
pusha
lods
jo
xchg
nop
add
nop
dec
fstp
adc
fists
sti
faddl
aam
sub
mov
xor
ret
shll
jae
mov
dec
add
push
das
jecxz
push
ds
adc
inc
jle
pop
je
jne
cmp
and
mov
push
in
and
cli
cmp
clc
iret
xor
add
lcall
fs
sbb
icebp
jno
loop
add
jb
inc
cld
lods
decb
cli
insb
jl
repz
xchg
rolb
sub
or
mov
cwtl
faddl
mov
inc
push
dec
push
jmp
sub
adc
add
sbb
jl
or
clc
dec
mov
loopne
std
cmp
inc
mov
jne
aam
aad
enter
popf
xor
mov
repnz
sub
mov
in
scas
les
xor
fnstenv
test
jnp
jns
cli
adc
lock
out
pusha
negb
cwtl
int3
add
dec
adc
jle
cltd
sub
mov
xor
xor
add
daa
xchg
inc
fists
mov
add
cmp
push
shl
pushl
inc
dec
adc
mov
les
dec
dec
ljmp
sub
rclb
inc
sbb
in
mov
in
shrb
jb
mov
add
mov
xor
arpl
jb
cltd
repz
adc
ffree
cwtl
and
mov
mov
adc
hlt
pop
add
pop
mov
inc
stos
mov
pushf
or
jae
sbb
mov
clc
sub
sbb
rcrb
les
icebp
mov
add
aaa
push
pushf
or
jb
enter
and
mov
inc
in
mov
addb
lahf
inc
xor
add
pop
xchg
aad
push
jle
scas
nop
pop
sub
sbb
inc
jle
insl
jns
ljmp
mov
add
sub
xchg
js
inc
xchg
cmpsb
out
aad
mov
or
out
adc
xor
adc
push
add
xchg
jo
fcmovb
sti
cs
sub
mov
add
repz
pop
inc
adc
adc
add
loopne
xchg
xor
mov
cltd
lret
add
or
inc
nop
inc
inc
stc
add
fimull
mov
dec
or
mov
jecxz
pusha
add
sbb
add
cmp
lahf
and
data16
xchg
dec
mov
lea
lock
movsb
pusha
mov
shr
popf
in
movsl
nop
fmull
cltd
dec
adc
fs
adc
gs
pop
adc
stos
sbb
pushf
les
outsl
aad
adc
cmp
fmuls
fdivrs
out
add
and
leave
sbb
loop,pt
cmp
xchg
push
adc
mov
daa
push
inc
sub
hlt
jle
dec
rcrl
inc
std
jo
in
add
or
add
sbb
dec
gs
xchg
mov
in
flds
test
loopne
pushf
cwtl
or
in
aaa
mov
cmc
cmp
dec
mov
int
aaa
push
sarl
xor
mov
movsb
mov
lret
sbb
cwtl
jbe
and
add
out
mov
movsl
pusha
jae
loopne
ljmp
mov
add
jp
cltd
jo
mov
jecxz
cmpsb
inc
push
cmp
clc
push
orb
adc
inc
fnstenv
in
fidivs
lock
mov
and
cmp
xchg
addl
loope
jno
sbb
repnz
cmp
daa
in
add
clc
fcmovnu
adc
call
adc
lods
subb
shl
adc
cmp
add
mov
push
adc
sahf
push
ds
inc
leave
jb
adc
sub
adc
dec
jl
mov
mov
enter
imul
pop
or
sub
fadd
mov
push
mov
push
xchg
faddl
push
test
cld
adc
pop
mov
cmp
sub
not
sbb
mov
adc
cwtl
cs
adcb
add
and
or
xor
test
adc
xor
enter
fildl
das
mov
xchg
pop
pop
loopne
imul
xchg
or
adc
mov
jne
mov
jne
mov
in
jl
mov
xor
fiadds
and
or
mov
cmp
outsl
push
inc
xchg
push
pusha
xor
rcrb
fidivl
mov
sbb
lods
and
sub
dec
sub
rclb
ret
jl
iret
call
cli
push
xchg
js
fcompl
push
xor
jmp
gs
mov
test
or
add
lods
scas
adc
cmpsb
loopne
les
sbb
mov
out
je
push
push
lret
loopne
push
dec
add
jg
xchg
sub
test
jbe
inc
push
subl
andl
orb
pop
inc
shll
adc
jge
mov
adc
jo
lahf
rcrb
hlt
ja
movsb
outsl
mov
sti
cli
pop
pop
mov
pop
push
cmp
test
rcll
add
push
xchg
push
pop
hlt
out
lahf
add
fdivrl
inc
cld
dec
cmp
sub
jns
or
jnp
or
fld
rorb
or
shrb
fiadds
sbb
lcall
inc
inc
sub
add
jb
clc
xor
xor
or
inc
add
inc
int
loopne
repnz
imul
loope
hlt
xchg
jp
pop
or
cmp
pop
pop
test
mov
pushf
lds
cmpsb
popa
jp
les
loop
sub
sbb
push
xlat
sub
inc
mov
sbb
push
xor
inc
dec
add
outsl
or
cmp
insl
pushf
loopne
dec
or
jno
sbb
pushf
jno
repnz
inc
push
insl
test
test
pop
movl
jb
fs
call
mov
jge
mov
orb
cmp
pop
xlat
add
in
push
push
popf
shlb
xor
push
incb
jae
repnz
pop
int3
cwtl
and
add
xchg
or
aad
mov
mov
or
adc
and
adc
push
mov
sbb
arpl
add
not
inc
in
jno
rcl
inc
adc
or
int3
add
in
and
aam
inc
sbb
pop
shrb
add
pop
jo
fs
nop
add
cmp
push
push
in
das
inc
mov
sub
shrb
or
cmc
mov
ret
repnz
add
pop
sbb
mov
test
fldl
mov
lret
rcl
and
ret
cmp
mov
add
push
insb
add
xor
lahf
cmpsb
in
cmp
mov
inc
add
xor
mov
xor
pop
pushf
xchg
sub
mov
outsb
jge
js
add
pop
mov
loop
mov
mov
and
scas
test
adc
movntps
add
fs
sbb
ret
push
sub
add
dec
cmc
ficoml
pusha
xchg
lahf
mov
add
ds
not
mov
xabort
jnp
or
scas
fwait
sub
push
dec
xchg
add
xchg
lahf
das
add
rolb
testl
cmpb
flds
loopne
dec
mov
lods
add
adc
dec
inc
jecxz
inc
jns
or
mov
xchg
adc
stos
or
in
mov
xorb
popf
push
adc
in
add
scas
mov
mulb
lods
movsl
adc
hlt
or
mov
add
jns
jb
inc
jae
in
mov
add
test
addl
imul
adc
loop
xor
xchg
pop
mov
aad
and
test
xor
xchg
repnz
push
push
test
and
fwait
mov
adc
scas
or
rorl
xchg
mov
mov
pop
dec
das
inc
and
mov
xchg
stos
js
mov
push
dec
mov
enter
leave
lret
or
lret
mov
adc
jne
sahf
jmp
clc
lea
pop
add
adc
pop
mov
jbe
fdivrl
pop
xor
je
adc
push
and
jmp
dec
ret
in
fldt
jp
addl
lcall
xchg
push
dec
cwtl
test
aas
add
bound
cmp
inc
hlt
fdivrs
je
test
and
add
leave
pushf
fdivrl
dec
cmc
and
testl
adc
fildl
adc
add
push
xor
pop
pop
fdivr
or
jl
sub
mov
sbb
mov
lahf
iret
test
in
icebp
mov
xor
cmp
loop
cmp
and
cmc
add
loope
sub
add
pop
xchg
dec
out
fdivs
push
incl
dec
out
adc
rorb
aad
add
cmp
xor
fdivrs
push
sub
ds
es
movsb
adcl
ljmp
stc
adcb
loope
movsb
lret
ror
sbb
test
enter
arpl
sbb
fisttpll
shrb
shll
mov
int3
dec
das
or
pop
inc
sbb
inc
loopne
data16
jo
or
nop
cmp
inc
test
adcl
cs
dec
popa
xor
lahf
in
push
enter
inc
pusha
cwtl
mov
addl
mov
ffreep
pop
adcb
addl
icebp
add
add
cmp
sbb
mov
fstpl
add
lods
stos
mov
outsb
addb
rcrl
sbb
or
es
add
aam
sbb
cwtl
mov
jne
add
jno
add
pop
inc
sbb
in
daa
xchg
pop
jae
in
sbb
int3
jno
clc
adc
xchg
sub
xchg
adc
jo
and
pop
setg
test
idiv
push
mov
in
mov
clc
cltd
enter
or
sbb
cmp
test
sub
lahf
sarb
outsb
loop
mov
roll
dec
sub
sub
mov
les
mov
fs
jns
cmp
jne
cmp
notb
in
mov
mov
in
sub
mov
push
idiv
jp
or
sbb
cwtl
or
mov
pop
inc
loope
enter
xchg
clc
adc
push
or
imul
dec
sbb
iret
loop
or
lcall
bound
lret
jg
fstpl
rcll
cwtl
mov
lock
loop
add
xor
push
mov
movsl
adc
jl
sub
pop
popa
lds
adc
pop
or
out
inc
add
hlt
mov
cmp
call
mov
pushf
and
add
sub
sbb
push
call
mov
add
inc
test
sub
mov
and
inc
in
and
std
inc
push
cltd
sahf
cmp
pop
sbb
mov
mov
lea
mov
call
add
test
xor
add
mov
ljmp
adc
jo
mov
mov
adc
add
and
jns
mov
fsubl
pop
scas
add
outsl
and
les
push
push
inc
ror
cmp
add
sti
mov
pusha
pusha
push
loope
mov
push
mov
faddl
negl
pop
or
mov
mov
sub
mov
cltd
js
jge
xchg
add
ljmp
and
roll
filds
cltd
sub
pushf
dec
or
test
pop
repz
pop
lods
xor
cmp
add
jnp
xor
mov
pop
out
in
sbb
adc
pop
scas
or
inc
in
mov
mov
push
or
push
lods
lods
out
inc
arpl
les
adc
imul
jge
mov
add
add
into
loope
inc
rclb
add
jo
inc
mov
or
push
data16
call
push
pop
shr
rclb
xchg
js
sbb
add
frstor
pusha
jl
mov
inc
ljmp
or
lcall
nop
sbbl
cmp
push
loopne
outsb
inc
fwait
pop
jl
rcll
test
mov
jo
daa
pusha
cmp
std
adc
scas
inc
lock
xchg
cmp
cld
push
lret
xchg
xchg
adcb
and
fildl
inc
lock
dec
add
cmp
sbb
loop
and
add
xchg
dec
sahf
test
dec
sbb
ljmp
jo
data16
stc
or
in
rorl
out
dec
paddsw
pusha
inc
lea
add
cs
int
test
repnz
call
cmpsb
mov
imul
add
int
sub
or
sbb
imul
lcall
xorb
in
jle
adc
cmp
mov
dec
add
insl
je
or
add
aad
mov
add
or
lahf
xor
pop
add
repz
and
call
divb
cwtl
inc
cwtl
add
enter
pop
icebp
cwtl
dec
shrl
add
or
adc
cltd
pandn
cmp
sbb
out
in
push
cli
lahf
sub
sbb
pop
pop
dec
repnz
jnp
pop
push
xor
push
push
add
in
push
push
or
clc
movl
ljmp
cmc
push
or
cltd
sub
pop
leave
fsub
pushf
add
inc
xorb
movsb
das
add
les
mov
int
out
push
and
aad
adc
lret
or
cmp
add
jge
add
jnp
lea
jmp
add
sub
adc
lods
cmp
pop
into
cld
sub
daa
popa
jmp
xor
adc
jne
ljmp
jge
mov
sub
sub
pop
jg
loopne
in
mov
push
mov
jbe
add
jne
add
je
ds
add
shll
jnp
pusha
mov
xchg
lock
add
mov
push
fwait
repz
cwtl
add
cmp
mov
or
int3
or
insb
aaa
lds
add
add
test
add
xor
movsb
stc
add
jo
mov
mov
enter
or
push
fdivl
add
in
outsl
shr
add
xchg
mov
add
sahf
dec
adc
mov
push
push
pop
call
test
inc
add
movsb
xchg
add
mov
lcall
jl
std
lock
xlat
stos
rclb
repnz
test
xor
jg
xchg
stc
test
ljmp
in
js
adc
and
icebp
int3
and
mov
add
sarb
call
xchg
and
dec
jae
rcll
lret
sub
push
push
dec
add
movsl
adcl
orb
testb
jo
cmp
lock
inc
rcr
scas
sbb
mov
dec
jb
xsaveopt
push
out
sbb
outsl
mov
mov
adc
push
lods
jae
dec
fsubr
and
add
adc
les
loopne
out
add
popa
loop
sbb
lock
subl
dec
jge
pop
movsl
cmpxchg
inc
mov
mov
jecxz
cmc
addr16
cmpsb
pushf
xor
or
rorl
sub
rcrl
ud1
fadds
jmp
mov
jl
mov
sahf
push
add
sub
cmp
inc
inc
test
and
test
ret
inc
inc
cwtl
and
and
sub
dec
adc
loop
hlt
cmp
ret
mov
outsl
xchg
imul
jecxz
and
rolb
das
iret
scas
aad
aas
in
mov
aaa
add
bound
call
inc
orl
add
and
leave
sub
add
push
loopne
in
js
mov
sbb
das
dec
fiaddl
sbbl
push
popa
mov
add
call
arpl
xor
andb
insl
sti
inc
pop
addr16
cli
fwait
int3
add
jge
push
dec
add
and
add
push
mov
adc
lods
sbb
repnz
or
adc
and
mov
mov
or
or
ds
cmp
adc
jnp
inc
mov
add
cs
push
ret
mulb
pushf
lods
sbb
pop
hlt
call
lret
xchg
push
das
nop
pop
push
mov
mov
jne
in
add
sub
cs
js
std
mov
xchg
push
cmp
sahf
push
negb
pop
or
loope
repz
inc
push
out
jecxz
adc
push
add
inc
mov
ljmp
lcall
into
xor
add
jl
and
mull
mov
push
imul
mov
cmp
rcr
popl
adc
add
mov
cmp
mov
add
sbb
daa
out
inc
and
jo
or
ret
push
sbb
loope
orb
dec
xchg
mov
fiaddl
subb
mov
lahf
add
les
lods
repnz
mov
adc
mov
das
jns
testb
or
dec
and
out
shlb
inc
js
stos
or
and
cmpl
lock
insl
add
lods
ss
fwait
leave
push
dec
jbe
add
cmp
flds
ret
add
dec
stc
decl
inc
addb
in
jle
in
dec
sbb
or
imul
pop
icebp
dec
xor
pop
incl
leave
inc
lods
push
js
add
mov
aam
aas
cmpsb
sbb
or
mov
fists
in
sbb
dec
cmpsb
aas
dec
inc
jb
shl
xor
ficomps
add
cmc
fwait
dec
movsl
popf
lea
in
xor
ret
cmp
les
aad
cwtl
dec
js
add
xchg
inc
dec
add
mov
nop
mov
insl
sbb
cmp
cmp
lahf
push
push
sub
add
sub
dec
mov
and
xchg
xor
std
inc
cmp
lret
fiaddl
inc
ret
das
pop
aas
testb
xchg
rcl
cmpsb
pop
into
xor
js
add
aad
out
test
and
add
push
mov
sbb
mov
add
adc
add
and
ret
push
add
hlt
and
mov
repnz
push
add
icebp
leave
gs
outsl
cmpsb
and
test
popa
push
xorb
imul
loope
nop
dec
xor
xor
inc
stos
outsb
cmpb
add
inc
enter
stos
sbb
cwtl
add
adc
push
lahf
lret
popf
sbb
cmc
clc
xor
add
inc
js
int
repnz
and
jl
xchg
cmp
lcall
stos
push
mov
sub
add
pop
add
mov
inc
ja
and
aas
adc
add
mov
ficoml
dec
lds
fdivl
sbb
xchg
int
adc
adc
data16
loopne
xchg
pop
out
cmpsl
sbb
mov
mov
idiv
ja
data16
inc
adc
jge,pn
pop
and
jecxz
add
mov
movsl
jb
pop
outsl
aaa
and
adc
sub
mov
or
and
mov
sbb
int3
sbb
push
loopne
out
mov
add
mov
xor
cmpsb
leave
jl
sbbb
dec
dec
stos
mov
push
cmp
add
xor
pop
mov
or
push
std
adc
and
shll
or
cltd
xchg
mov
cwtl
cmp
and
insb
fs
xor
cmovnp
hlt
addl
xorb
sbb
stos
push
add
add
jb
lock
add
ss
sbb
xor
and
nop
aas
jp
xchg
mov
js
xchg
movsb
add
mov
cmp
mov
jo
add
mov
lea
in
dec
xchg
call
fstps
add
xlat
push
xrelease
cmpsb
push
inc
shlb
insl
les
jl
sub
dec
pop
pop
js
push
test
shl
stos
in
cmp
insb
adc
test
lahf
add
test
add
mov
inc
adcb
popa
xor
jns
or
stc
andb
add
adc
lret
mov
icebp
dec
mov
ret
sbb
lcall
add
sub
cltd
ret
stos
lds
dec
add
push
or
addb
rcll
xor
sbb
or
cmp
sbb
lods
push
rorb
sub
out
mov
lcall
mov
scas
add
push
cmp
in
jno
jp
es
gs
fs
sub
jae
add
xor
xlat
and
add
xchg
mov
add
lods
xlat
sub
lea
jae
cmc
mov
mov
pop
movsl
in
nop
mov
mov
popw
mov
into
sub
lock
add
jae
in
popa
mov
inc
xchg
jmp
shll
pop
inc
mov
fcmovnu
and
add
pop
cli
mov
movsb
add
adc
in
jns
add
stos
xchg
stos
cmc
outsl
add
les
add
repnz
or
mov
fisttpl
mov
call
push
sti
stos
or
sbb
jnp
mov
add
mov
or
xchg
cs
stos
add
scas
sbb
sub
add
pop
mov
pop
jae
adc
pop
inc
mov
dec
lret
sti
mov
pop
sahf
push
jae
sub
xor
xor
xchg
mov
jnp
add
out
dec
mov
pusha
leave
movsl
xlat
negb
mov
insl
sub
add
mov
bound
test
repnz
loop
cld
add
mov
xor
mov
dec
rolb
cs
add
sub
enter
xor
stc
rcll
sbb
in
pop
test
aas
cmpsl
add
cli
arpl
jle
push
add
icebp
xchg
negb
inc
andl
hlt
xchg
std
mov
add
pop
cmp
add
ret
jecxz
mov
adc
in
cwtl
dec
dec
out
mov
or
iret
xor
and
and
pusha
push
or
add
outsb
and
sahf
and
inc
scas
in
clc
add
push
xchg
inc
ljmp
lret
xor
mov
adc
ret
sub
fiaddl
mov
xor
test
aam
aaa
pop
adc
jle
jp
mov
add
inc
test
mov
cmpb
xchg
out
jo
int
lcall
stos
add
mov
push
sarb
xchg
cmp
je
adc
shl
dec
add
mov
mov
mov
push
pop
or
push
aam
jb
in
xchg
ljmp
sub
loop
add
add
lods
xor
inc
cmpb
test
xor
add
pop
mov
and
xor
popa
movsl
jns
cmpsb
jg
pop
out
aaa
lods
pop
and
mov
pop
dec
push
add
pop
in
cmpsb
push
mov
adc
jae
nop
inc
cmp
es
dec
pop
add
int
leave
jne
sbb
xor
sbb
push
aad
lret
dec
adc
imul
add
xor
jl
xor
std
es
fwait
ja
sub
and
inc
in
add
test
loopne
out
subl
mov
lahf
dec
mov
cwtl
test
int3
or
call
xchg
addl
sub
sub
pop
repnz
mov
xorb
add
dec
inc
mov
aam
xlat
inc
lock
adc
and
and
jmp
iret
inc
push
pop
and
andl
inc
mov
std
xor
popf
add
mov
sub
out
add
dec
lds
mov
stos
roll
jbe
mov
lds
mov
sub
add
xchg
jge
dec
dec
add
adc
or
sub
repz
pop
jp
inc
mov
shll
das
pop
or
xor
xchg
mov
negl
lods
inc
xchg
int
repnz
add
rorb
int3
scas
fwait
add
pop
pusha
dec
aas
jmp
bsf
loop
out
cmp
lret
jnp
and
add
pop
jne
imul
push
fsub
dec
outsb
scas
mov
cmp
xor
rolb
lcall
jne
hlt
and
fdivrs
adc
jecxz
add
iret
js
mov
jae
daa
cld
das
pop
sbb
hlt
es
loopne
add
je
adcb
lock
subb
sbb
andb
cmpsb
add
cmp
out
jp
push
adc
cmpsl
out
push
mov
inc
cmp
popf
push
sbb
or
pause
test
mov
clc
xor
test
jno
fsts
push
fwait
rcrl
sbb
mov
mov
mov
mov
lahf
jg
add
dec
sub
stc
mov
sarl
push
xor
xor
pop
adc
or
or
fidivrs
add
jmp
mov
in
fldl
jns
inc
mull
add
push
or
std
add
ss
rol
add
push
or
pcmpeqb
pop
xchg
ret
xchg
sbb
sarb
dec
add
fldl
add
aas
push
mov
dec
rcrb
frstor
mov
repz
cli
mov
aas
sti
fstp
popf
jno
add
jbe
addb
into
adc
add
shrl
sub
out
add
jp
cmp
imul
inc
pop
dec
push
call
xor
mov
shr
mov
pusha
or
cltd
jns
or
cmp
sbb
sub
mov
mov
test
dec
push
ljmp
lea
push
push
lahf
fisttps
rclb
sub
mov
inc
and
repnz
push
jp
ret
cmp
add
xchg
or
push
mov
gs
push
mov
xor
movl
in
push
push
cmp
mov
cwtl
fsubrl
gs
ss
add
ret
popa
sbb
jnp
add
mov
in
pop
fildl
stos
cmp
in
push
add
outsb
in
add
dec
cmp
pop
pop
and
pop
xchg
loopne
cli
push
pushf
js
add
nop
int
add
adc
sarl
fimuls
fs
rclb
add
nopl
out
and
adc
mov
dec
mull
fidivl
inc
push
cld
faddl
jns
add
push
cmp
add
outsl
and
jecxz
mov
push
imul
dec
fldl
mov
insb
push
xor
inc
inc
jo
orl
cwtl
pusha
cmp
nop
out
mov
cmpb
adc
insb
cmp
mov
add
pop
int3
outsb
sub
jp
mov
add
dec
or
mov
xchg
enter
and
push
xor
js
or
sub
lods
inc
add
cwtl
mov
xor
add
xor
mov
testb
add
mov
test
faddl
fldt
jne
lds
movl
sarb
out
ds
xorb
jns
fwait
mov
aam
sub
jmp
push
test
jnp
inc
andl
add
dec
cmp
push
sti
scas
cwtl
sbb
in
repnz
outsb
cmp
adc
add
dec
sbb
nop
adc
adc
mov
cs
loop
add
gs
xor
shll
fnstsw
and
pop
shrb
std
mov
jae
pop
pop
loopne
push
out
insb
clc
add
rclb
pop
dec
outsb
add
insl
nop
sub
add
or
in
push
outsl
or
sbb
xchg
icebp
add
jmp
stos
pop
push
imul
mov
add
mov
mov
jp
pop
lcall
push
adc
stos
and
int3
mov
mov
jno
test
sub
test
aam
stos
xor
and
adc
add
scas
add
fmuls
test
xor
mov
adc
dec
sbb
icebp
loop
cmp
pavgb
das
out
add
cli
pop
ret
xchg
push
sahf
call
cmp
or
xor
aad
ljmp
xchg
mov
add
insb
sbb
inc
xor
nop
mov
sbb
aam
inc
add
je
inc
loope
mov
cmp
add
inc
pop
ja
or
and
jge
xor
shll
fsubr
sbb
add
mov
cmp
adc
push
add
dec
test
and
lret
push
fadds
mov
loopne
cmp
push
out
add
dec
inc
fmull
aas
iret
out
cmpl
movb
js
dec
sbb
cs
push
jle
pop
cmc
stos
add
push
es
push
sub
pop
add
pmaxub
or
add
or
cmpsb
hlt
sub
xchg
das
lods
inc
sbb
cs
popa
xchg
clc
incl
sbb
mov
adc
xchg
jae
loopne
add
dec
sbb
adc
nopl
mov
divb
outsl
enter
mov
push
push
sti
cmp
mov
scas
roll
xchg
js
mov
pop
mov
ret
nop
xchg
adc
add
fwait
push
fisubrs
movsb
push
push
into
pushl
pusha
int
ret
add
cmpl
xor
lcall
or
loope
mov
sbb
in
add
jo
mov
add
and
out
fwait
jl
cmp
call
sbb
ja
pop
cmpsl
push
adc
bound
movsl
jecxz
hlt
xchg
stos
push
and
test
ja
and
add
adc
mov
lock
pop
subl
insb
fdivrl
mov
inc
add
aad
cld
sub
lea
fnstcw
test
dec
into
mov
cmc
add
pushw
in
out
adcl
mov
jno
push
ljmp
icebp
lods
movl
sbb
gs
pmaxub
inc
or
roll
repz
jecxz
or
sbb
add
fdivl
add
arpl
push
enter
repz
lds
lods
xor
pop
sbb
pop
enter
lods
fidivs
jge
add
leave
cmp
mov
or
dec
or
or
push
roll
clc
je
enter
test
pop
add
jnp
add
sbb
or
pop
add
cli
xor
inc
ljmp
insb
mov
push
repz
sbb
mov
sub
add
pop
cwtl
xlat
xor
clc
fldenv
add
inc
mov
and
dec
rcll
fmuls
mov
adc
leave
fcompl
es
call
pusha
xor
sti
pop
incb
in
loope
imul
daa
add
dec
sub
test
outsl
and
add
pop
push
xor
lock
push
mov
push
pop
es
pushf
push
add
stos
jne
mov
or
imul
jecxz
or
in
add
aad
cmpsb
jo
pop
popf
divb
cmp
test
mov
push
adc
dec
inc
dec
fcompl
add
test
xchg
sbb
mov
push
sub
jl
mov
das
jp
aaa
movsb
add
or
repz
cmp
movsl
add
in
jge
mov
outsl
add
add
adc
popa
adcb
jnp
or
ret
add
xor
and
incb
jae
cmpsl
pop
sbb
xchg
cmpsb
insb
mov
dec
fldcw
adc
ja
jno
outsb
adc
addr16
adc
jae
and
add
inc
gs
daa
add
pop
dec
pop
cmpsb
xchg
xor
push
and
sub
mov
fs
add
cli
sbb
sbb
add
in
movl
aaa
cwtl
imul
lods
jle
fistpl
hlt
add
adc
pop
fs
sarl
lods
dec
out
pusha
xlat
adc
in
mov
and
nop
pop
scas
adcb
arpl
pop
ret
cwtl
scas
inc
loop
lret
jl
pop
mov
movsb
xchg
mov
repnz
out
orl
pop
cmpb
jne
fidivrs
jg
add
subb
lcall
mov
add
test
or
add
out
dec
frstor
mov
inc
ljmp
fildl
jns
lea
and
xchg
add
in
xor
imulb
push
arpl
ud2
sub
pusha
pusha
ja
lcall
jne
push
jmp
adc
push
stos
loop
leave
cmp
pusha
add
pop
or
push
imul
mov
xchg
leave
add
pop
mov
sub
or
add
pop
nop
mov
jae
pusha
xor
add
inc
ss
repz
sbb
insl
ljmp
jns
cmp
negl
int3
jo
xchg
push
push
add
dec
pop
push
hlt
inc
nop
xor
jecxz
icebp
in
mov
xor
jge
pop
jbe
lock
push
not
lahf
jmp
inc
outsb
clc
loope
sub
jp
add
xor
push
es
or
mov
notl
lock
or
inc
pop
ror
sbb
inc
in
push
lret
sbb
cmpb
lods
adc
scas
das
pusha
jne
xor
cmp
push
jecxz
sub
leave
push
in
outsb
outsl
pop
adc
mov
cmp
or
add
mov
xchg
movsb
mov
cltd
xor
pusha
pusha
or
sub
sbb
mov
orb
inc
xor
push
repnz
ja
pop
dec
sbb
mov
test
movsl
in
add
sarl
in
inc
mov
shrl
cmp
orb
imul
int3
fiaddl
push
push
or
in
add
cli
xchg
adc
sub
mov
or
push
out
fistpl
add
rol
push
out
add
pop
outsb
daa
imul
and
fstpt
je
add
pusha
cmp
enter
shr
aad
outsb
gs
xor
lods
push
jo
lea
add
sub
into
lahf
sarb
addl
fdivr
int
inc
stos
outsb
sbbb
cmp
out
adc
jmp
mov
imul
inc
test
std
mov
fildll
push
ljmp
jle
jne
adc
aad
inc
and
outsl
jb
add
cmp
cmpsl
mov
nop
lods
test
add
cmp
outsb
cld
adc
aaa
and
mov
mov
jle
mov
imul
shll
push
jne
movsl
ret
testl
pop
pop
lock
scas
push
jae
mov
loopne
fldt
and
lods
subl
pusha
outsb
out
outsb
mov
pop
jae
leave
mov
fs
dec
cwtl
xchg
pop
add
hlt
jl
xor
add
mov
cmp
pop
pop
sub
add
repz
cld
cmp
andb
stos
aam
fnsave
outsl
incb
adc
inc
fldlg2
jo
shl
loope
xchg
ret
enter
push
xchg
push
push
inc
movb
cltd
stos
add
xchg
std
outsb
aas
mov
or
sub
xchg
adc
outsb
or
adc
mov
enter
push
xchg
orb
int
in
loopne
fwait
pusha
cwtl
inc
mov
sub
cmovnp
mov
xor
or
jnp
xor
sarb
fstpt
jae
add
arpl
popl
andl
or
and
stc
sti
mov
lret
jp
or
xlat
arpl
and
xchg
dec
add
lea
inc
ds
loopne
lods
xor
scas
nop
add
gs
jbe
mov
outsl
mov
cli
sbb
inc
lds
inc
lea
addl
inc
sub
dec
add
iret
mov
inc
int3
or
and
add
pop
mov
xor
std
insb
xchg
test
lods
pop
js
notl
scas
xchg
dec
push
jne
ljmp
loopne
lar
fcomps
and
or
fmull
aad
inc
arpl
leave
cli
jl
andl
fs
ja
jp
adcb
push
movsl
mov
or
mov
mov
aad
xchg
aam
iret
into
add
jb
mov
pop
aad
add
scas
les
add
inc
pop
cltd
out
movsb
xchg
sbb
dec
subl
xchg
rolb
mov
add
pop
xor
jnp
jge
cltd
int
clc
add
pop
pop
push
inc
sar
xor
push
pop
loopne
jb
add
dec
int
inc
mov
fldt
movsb
sbb
pop
add
jbe
sub
daa
mov
jl
cltd
rcrb
add
cld
bound
add
xchg
cmp
add
push
into
sub
add
addb
mov
sub
and
cmp
cmp
xor
fidivs
dec
orl
rorb
pop
push
or
lcall
add
pop
hlt
mov
jecxz
clc
mov
leave
stos
inc
adc
int3
je
pop
gs
adc
jge
jge
pop
outsl
mov
mov
movl
lods
mov
push
cmp
and
mov
hlt
mov
and
std
addb
icebp
push
pop
dec
mov
shr
divps
lds
loopne
pop
and
cmc
insb
test
inc
jb
outsl
and
imul
addl
roll
cmp
test
pop
sub
adc
stc
in
cmp
std
outsl
mov
add
lods
add
pop
push
sbb
fs
incb
mov
adcl
push
xchg
jo
lock
scas
rorb
rcrb
loop
mov
sub
push
xchg
cli
lahf
cmp
enter
sub
and
gs
add
sahf
ffreep
cltd
and
in
adc
add
push
in
lods
lahf
dec
cmp
add
sub
sub
data16
mov
and
call
loop
sub
lods
dec
cwtl
inc
and
hlt
jmp
and
scas
cmp
inc
push
jmp
add
mov
sbb
stos
loope
test
or
cmp
mov
out
incb
cmc
leave
jge
lcall
divl
jmp
loope
push
dec
insb
dec
cmc
enter
je
rolb
call
add
or
test
out
enter
scas
or
rolb
sbb
rsqrtps
add
dec
xchg
mov
and
and
enter
or
fadds
mov
fidivs
add
dec
xor
pop
xchg
inc
rolb
or
push
cltd
inc
dec
mov
sbb
shll
mov
cld
cld
xchg
or
or
lods
idiv
les
dec
jbe
or
sahf
add
je
cmp
repnz
mov
dec
add
imul
icebp
lcall
jg
pop
jl
sub
rorb
pslld
pop
or
cld
loopne
repz
adc
or
jb
xor
addl
add
and
daa
pop
ja
add
fadd
popf
pop
xor
xor
std
sbb
outsb
hlt
enter
sbb
test
aas
loop
cmpsb
jle
adc
push
sbb
hlt
xchg
lods
jae
iret
add
shll
es
jmp
or
test
mov
pop
and
push
add
data16
popf
ficoms
cmp
add
fs
sub
test
or
cmpsl
add
xor
rorl
pusha
and
inc
jp
mov
add
insb
mov
add
mov
lcall
mov
xchg
call
cmpsl
add
and
jle
inc
mov
jge
jmp
mov
mov
adcl
call
cmpsl
or
mov
inc
sbb
adc
pop
cli
lds
cmp
add
add
nop
fs
les
stc
arpl
jbe
add
mov
dec
movsb
fs
dec
clc
scas
int3
mov
inc
mov
push
jns
xchg
push
adc
or
xor
fistps
inc
adc
xchg
sub
loope
std
js
pop
xchg
jl
and
mov
mov
inc
daa
lea
insb
rcl
add
cmpl
sbb
and
add
js
mull
movsl
and
iret
push
or
pusha
or
cmp
or
push
mov
push
iret
add
leave
idivb
scas
stos
add
stos
jnp
or
sbb
lds
xor
push
data16
dec
xor
add
add
sar
pushf
and
inc
mov
or
mov
rcrl
push
mov
pushf
cmp
cltd
mov
push
fnstenv
xchg
push
call
idivl
mov
add
jp
mov
aas
addr16
push
add
fsubs
cld
fisttps
or
and
cwtl
sbb
call
idivl
lods
pop
sbb
cmp
call
rolb
adc
bound
pop
xchg
lods
cmpb
add
adc
aam
adc
cmp
popa
mov
ror
sub
adc
ss
bound
xchg
sub
fildll
lock
dec
pop
loope
jge
cmp
fs
add
and
push
sbb
and
dec
test
jnp
adc
push
frstor
inc
add
mov
ljmp
sub
nop
pop
mov
push
jle
mov
dec
sub
int3
pop
pusha
jo
sub
rdpmc
adc
jns
loop
add
jg
aam
imul
inc
mov
into
add
fsubrs
and
adc
sub
cs
xchg
jg
mov
rorb
sub
int
push
mov
addb
pop
in
sahf
add
push
repnz
mov
insl
inc
sbb
repz
xchg
add
or
imul
cmp
fildll
jl
and
mov
mov
das
xlat
pop
jecxz
mov
mov
sbb
xchg
xchg
lds
jo
adc
les
mov
inc
add
repz
jecxz
mov
mov
mov
xchg
bound
sub
test
xchg
pop
push
jmp
and
call
or
rolb
cmp
repnz
push
add
jge
mov
pop
add
sbb
nop
in
int
rcrb
mov
bound
dec
add
push
cld
gs
movsb
test
mov
cmc
push
out
xor
dec
add
pop
rclb
xchg
mov
xchg
add
test
mov
jle
fisubrl
aam
cmpsl
pop
mov
bts
push
push
cwtl
lock
lods
cmp
cwtl
outsb
mov
sbb
bound
push
cmp
fisubrs
jge
jo
inc
jle
mov
les
int3
pop
mov
mov
xchg
inc
cmp
popa
stos
mov
sbb
cli
add
out
sbb
into
adc
adc
data16
inc
mov
add
push
jbe
outsl
stos
sub
jno
xchg
add
in
aad
icebp
or
or
push
pushf
mov
mov
js
cli
push
xchg
shrb
in
lds
xor
addl
mov
dec
and
or
loopne
fs
jno
jno
sbb
sbb
push
fwait
in
jl
outsl
or
in
xchg
clc
push
push
int
xchg
push
cwtl
js
fisttps
xchg
sub
or
add
mov
clc
xchg
xorb
or
xchg
imulb
popa
xor
sub
mov
or
xor
test
mov
lods
les
add
adc
dec
xchg
cmp
mov
adc
mov
cmc
insb
gs
sbb
int3
adc
mov
aam
adc
imul
mov
rclb
pop
xchg
push
add
pop
add
pop
inc
or
loop
push
fs
lea
jo
sub
outsb
adc
aaa
rolb
xor
or
jl
pop
jp
pop
std
outsl
lods
mov
add
sub
dec
xchg
add
xorl
leave
add
or
sbb
enter
mov
inc
or
xchg
or
sub
and
push
add
movsb
add
inc
pop
xor
mov
stos
cmp
cmp
add
loope
orl
mov
xchg
int
adc
ja
xchg
and
ds
leave
jbe
inc
inc
and
inc
out
cmp
xchg
mov
js
inc
aam
cli
hlt
jo
add
cli
popa
pop
add
sub
jno
mov
incl
gs
repnz
push
cmp
stos
test
lds
lret
inc
inc
mov
rcll
mov
lea
and
adc
push
sub
sbb
or
cmp
sub
sub
mov
cwtl
xor
dec
inc
push
mov
cwtl
adc
inc
mov
rcrb
and
repnz
adc
xchg
pusha
lret
aam
fs
adc
xor
add
jmp
les
mov
mov
sub
in
adc
sbb
mov
add
mov
fcoml
push
jmp
push
js
das
testl
ljmp
cmp
dec
push
adcb
push
jmp
cltd
aas
xchg
sarl
push
in
add
inc
inc
xor
add
push
fists
in
and
cmp
mov
nop
in
out
inc
and
fldenv
xor
jo
add
in
in
pusha
mov
add
mov
ffree
add
scas
sbb
inc
xchg
cmp
sub
inc
lea
loop
mov
and
xchg
or
pop
pusha
cli
insl
rcll
ja
pushf
add
adc
mov
add
in
dec
ljmp
xor
or
mov
pop
cmpsb
adc
pop
imul
xor
pusha
in
pusha
mov
mov
push
je
and
cwtl
pop
insb
dec
subl
push
dec
xor
orl
loopne
xchg
jmp
popa
outsb
imul
add
les
xchg
jle
mov
adc
lods
out
inc
adc
std
pop
inc
push
pop
repnz
add
mull
add
pop
lret
int
js
pop
subb
cvtdq2ps
pop
sbb
adc
xor
cmp
and
cli
mov
mov
and
push
loop
adc
and
shlb
pop
cmp
and
movsl
pusha
dec
inc
and
insb
lock
jnp
pop
inc
mov
outsl
inc
lret
mov
loopne
stos
mov
loop
mov
pushf
add
adc
es
jl
xchg
mov
push
call
inc
add
movsb
rolb
xchg
and
test
out
mov
inc
daa
dec
cs
dec
popl
inc
pop
and
xchg
jmp
mov
pop
pop
xor
fmuls
add
jo
mov
dec
pop
dec
add
hlt
push
je
xchg
test
sub
add
cltd
inc
ljmp
adc
mov
loop
dec
xor
pop
dec
xchg
movsb
add
lock
cmp
mov
mov
xor
jne
jmp
or
test
pushf
das
xor
push
daa
shlb
js
fisttps
fcoml
and
mov
daa
ret
and
push
jne
add
repnz
mov
call
imul
clc
test
pop
mov
loopne
mov
or
scas
push
movsb
cli
dec
jo
or
insl
out
sub
mov
pop
pop
inc
mov
mov
add
enter
mov
xchg
nop
loope
mov
add
aaa
xor
fiadds
adc
push
cmp
nop
in
mov
add
pop
push
pop
bound
and
pop
lods
pop
xor
test
mov
adc
jnp
add
inc
adc
adcb
cmc
ret
rorb
popf
mov
sbb
jno
jp
xlat
je
test
fcmovbe
lret
add
mov
or
les
arpl
in
pusha
xchg
repz
xor
push
hlt
or
mov
std
ljmp
cmp
sbb
adc
andl
push
xor
mov
repnz
xchg
hlt
into
add
mov
shl
nop
or
dec
add
cmp
xchg
sub
in
test
aad
jmp
sub
lods
mov
push
popf
mov
jae
cs
adc
sbb
cmp
cmc
into
sbbb
out
mov
xchg
and
cmc
xor
dec
mov
xor
mov
roll
adc
fdivrl
js
add
push
pop
jl
jmp
xchg
pusha
xchg
xchg
je
xor
enter
mov
add
loope
inc
sub
fnstcw
mov
add
pop
push
xor
mov
inc
fsub
or
and
and
add
filds
jae
ljmp
mov
push
in
lahf
pushf
in
inc
divl
movsb
or
jl
cwtl
mov
repnz
xor
add
into
ret
adc
or
cwtl
xchg
pop
push
add
cmp
insl
inc
test
sbb
xchg
pusha
out
enter
adc
int
inc
lock
inc
cmp
add
loop
lods
or
dec
mulb
inc
dec
loopne
fisubs
xor
into
xor
xchg
push
add
sarb
sub
cmp
or
xchg
xchg
pusha
rorb
xchg
add
lea
test
sub
sbb
cmp
mov
addl
mov
rcrl
add
les
scas
mov
nop
jno
add
enter
jg,pt
xchg
inc
fwait
mov
dec
mov
and
aam
insl
mov
pushf
jb
loopne
adc
arpl
jne
mov
dec
mov
push
mov
fs
fstl
or
lods
add
mov
mov
push
pusha
in
icebp
outsb
xlat
sbb
mov
sbb
daa
xchg
xchg
subb
repz
lret
popf
arpl
sub
mov
add
mov
inc
movb
push
sahf
js
hlt
cmpsl
dec
adc
pop
mov
pop
adc
jno
push
xor
adc
dec
add
clc
mov
cmp
mov
dec
lret
int3
mov
rcr
loopne
add
js
loopne
outsl
add
push
jle
mov
hlt
dec
cmpsb
pop
stos
mov
test
xchg
insb
je
loopne
shl
in
stc
enter
mov
dec
mulb
insl
pop
xor
push
es
push
and
adc
xor
nop
mov
sbb
je
stos
testb
push
adc
call
mov
rol
jmp
cmp
in
jmp
and
xor
rcl
add
repnz
mov
cmp
dec
push
test
inc
pop
jno
lock
and
xchg
jnp
loopne
xchg
clc
in
test
add
lods
insb
or
repnz
adc
sbb
mov
and
add
jmp
js
divl
jns
pusha
xor
adcb
mov
push
test
aas
aas
cmpsb
sub
ret
notl
mov
je
inc
stos
adc
mov
add
fadd
rcrl
add
stos
xlat
xor
xchg
xchg
mov
test
jno
ljmp
lds
sbb
es
repnz
push
sub
stc
dec
loop
int
cmp
xor
mov
adc
mov
dec
xor
je
mov
add
inc
sahf
test
dec
cmp
and
xchg
pop
cmp
sbb
out
test
pop
dec
mov
lahf
cmp
stos
loope
mov
xlat
rclb
int
pushf
popl
xor
push
mov
ret
lret
andb
test
js
cmpsb
and
bound
loopne
lea
jno
js
pop
mov
lock
dec
mov
cmp
orl
jne
add
rclb
mov
aas
dec
fucom
add
addr16
lock
add
mov
addr16
aas
push
rcr
pop
sbb
push
dec
and
ja
adc
sub
mov
sub
inc
jb
sbb
inc
and
jns
push
cld
stos
mov
push
adc
inc
shrb
repnz
push
rcrb
iret
iret
jo
dec
rorb
aas
push
nop
lods
pop
push
pop
xor
cmp
dec
inc
clc
rolb
lcall
xor
lret
lods
adc
sbb
int3
xor
in
sub
add
loop
into
xor
adc
sbbb
or
mov
sbb
xchg
pop
pushf
adc
pop
mov
adc
push
add
les
or
mov
sbb
std
jae
test
and
push
pop
mov
cmp
add
pop
push
call
mov
or
or
and
call
add
mov
pusha
push
sub
adc
adc
mov
in
mov
daa
xor
add
lret
push
lds
daa
lcall
movsb
stos
xor
mov
push
scas
sub
and
js
add
jmp
popf
push
sbb
cmp
jl
jp
jnp
das
adc
sbb
inc
stc
cmp
cli
mov
cmpsl
fdivl
jp
add
lret
mov
jb
inc
popa
cmp
adc
adc
mov
mov
sub
mov
pop
cltd
out
mov
sbb
sbbb
push
adcb
pop
pop
arpl
xchg
mov
sbb
push
inc
les
les
cmp
xchg
pop
push
add
adc
subb
jno
adc
dec
loopne
jp
add
jbe
and
js
add
loope
push
sbb
inc
shl
adc
subb
inc
mov
add
les
inc
jns
mov
add
in
sahf
pop
or
or
or
mov
out
scas
es
jl
inc
cmp
movsb
adc
arpl
mov
jne
mov
popf
and
lock
add
jb
int3
mov
jno
and
mov
stc
jb
cmp
pop
or
sbb
stos
jecxz
pop
push
lock
pop
and
inc
pop
xor
cltd
pop
lcall
test
or
mov
jb
or
js
inc
jbe
add
stos
xor
fdivl
test
xchg
imul
mov
cli
lea
lock
gs
sbb
sbb
stos
rcrb
outsl
and
call
push
ss
rol
push
or
jmp
jp
mov
push
add
sbb
test
mov
push
sbb
add
jne
adc
push
mov
movb
push
push
jno
sub
and
lret
sti
iret
adc
jecxz
fsubs
dec
insb
test
test
test
jmp
psubusw
xchg
and
js
add
xchg
cs
test
into
sbb
mov
out
out
cmp
adcl
push
hlt
movsl
addb
out
and
sbb
fmull
add
jbe
loopne
or
jne
or
push
and
or
call
inc
jne
add
stos
and
push
adc
mov
cltd
sbb
sbb
dec
bound
movsl
imul
loopne
sub
mov
mov
cwtl
hlt
iret
lods
adc
mov
add
mull
repnz
and
xor
insb
jnp
mov
cwtl
adcb
lret
bound
and
push
out
lret
cmp
scas
dec
pop
mov
pusha
inc
sbb
jb
sbb
sbb
not
mov
addb
loope
add
pusha
jno
xor
sahf
fdivrl
adc
cltd
sub
mov
inc
mov
icebp
pusha
mov
ljmp
movl
dec
movsb
dec
sbb
enter
pusha
or
call
aam
pop
add
call
dec
inc
lods
add
xchg
subl
ds
test
dec
in
rolb
pusha
xor
jge
fwait
xor
cmp
and
xor
stos
andb
add
jp
or
pop
xor
pop
add
pusha
inc
cmpl
inc
test
push
push
fstps
mov
cltd
bound
add
cs
movsb
bound
jo
push
pop
jle
sub
sar
enter
cwtl
adc
lcall
fadds
cli
sahf
jge
xchg
add
push
pop
pop
dec
xchg
mov
pop
lcall
scas
xchg
mov
data16
enter
add
jge
cld
jnp
mov
dec
and
loop
pop
fsubrl
push
ljmp
ret
xchg
sti
jnp
adc
neg
lret
jo
xchg
add
sub
add
sub
shlb
psllw
mov
inc
iret
cs
push
jo
dec
movsl
mov
mov
or
xchg
aam
add
outsb
mov
call
sub
sub
in
pusha
dec
mov
adc
add
pushf
push
or
test
ret
lds
cld
adc
inc
fldl
or
enter
in
mov
xor
dec
xchg
add
cmpsl
sarb
rol
fdivs
or
cs
imul
mov
pop
jb
jecxz
nop
cld
mov
add
test
pop
push
sbb
mov
xor
jg
dec
dec
out
push
or
xor
nop
xchg
inc
stos
mov
add
aam
mov
in
xor
dec
in
bndldx
add
nop
fcoms
mov
jae
popa
jp
jnp
sbbb
loope
mov
sub
adc
push
cwtl
fsubrl
lcall
mov
and
sbb
and
stos
jp
pusha
sbb
adc
daa
cwtl
inc
inc
push
fstl
xor
loopne
std
mov
enter
jb
add
push
int3
and
pop
jbe
mov
lods
inc
inc
test
sub
sub
adc
lock
xlat
add
rcll
fdivrp
sbb
lahf
and
adc
lret
or
std
mov
es
mov
dec
xor
jbe
shlb
fwait
cld
ja
mov
call
mov
add
and
insb
cmp
arpl
les
xchg
xor
and
add
test
es
or
stos
and
add
sub
jo
mov
jnp
lret
bound
jg
mov
push
or
pop
rcrb
test
pop
dec
pop
sbb
mov
mov
and
call
mov
mov
add
sub
jle
fs
add
cmp
cmp
xchg
stos
imul
in
mov
inc
loop
adc
fidivs
lods
or
xor
insl
dec
dec
ret
and
inc
inc
dec
roll
out
sbb
dec
cwtl
mov
adc
inc
sbb
add
adc
xor
je
fwait
or
cmp
lods
or
pop
add
out
cmc
and
in
mov
push
adc
movl
int3
push
test
das
mov
pop
xor
inc
lods
push
imul
cmpsl
cmp
sub
popa
adc
dec
xor
jl
add
jnp
push
data16
or
and
and
and
loop
xor
add
dec
sbb
lret
loopne
jns
addb
mov
add
dec
sbb
scas
jge
rcrb
repnz
or
inc
js
pop
into
inc
mov
jns
int
pusha
push
ja
movsl
add
mov
das
leave
dec
xor
add
test
mov
xor
push
into
out
xor
pop
orl
arpl
call
pop
sbb
inc
ja
je
mov
mov
add
clc
pop
rcrl
mov
lcall
cmc
add
push
subl
cmp
or
sti
flds
jle
mov
add
orb
add
push
daa
cltd
outsb
pop
cmp
pop
orl
shlb
cli
in
cmp
cmpb
lret
outsl
mov
add
fisubl
scas
or
lods
sub
xlat
mov
repz
jo
roll
push
sbb
adc
add
test
into
add
cltd
pushf
mov
cmc
arpl
je
xchg
dec
or
sbb
sbb
sarl
movsb
xor
lods
cmp
xor
jge
add
movb
stos
xor
sarl
jbe
or
pandn
mov
popf
loope
les
lret
aam
mov
mov
cmc
sub
aad
dec
jp
sub
sbb
nop
add
popf
xchg
adc
mov
add
jnp
sub
rcr
xor
shr
mov
inc
and
add
call
std
cmp
mov
test
je
add
les
subb
out
adc
sbb
adcl
xor
mov
sbb
testl
int
add
mov
sahf
mov
jecxz
movsl
insb
mov
mov
mov
call
jo
add
mov
push
push
ss
cltd
pop
mov
or
es
in
arpl
movsb
inc
add
jmp
lock
je
xchg
jl
jno
call
inc
lock
xlat
repz
mov
je
loope
push
pop
shrl
push
mov
stos
adc
loopne
dec
stc
add
movsl
push
and
mov
test
push
int
add
add
data16
and
mov
int3
pop
es
or
ja
gs
jl
xor
icebp
and
in
pop
inc
rcrb
sub
imul
popa
stos
outsl
enter
push
push
cmovl
push
add
push
sbb
imul
push
inc
fstl
adc
dec
add
xor
rolb
shl
xor
pop
fisttpll
sub
cmpsl
jno
test
das
mov
xor
sbb
add
mov
sub
pop
add
mul
dec
jo
inc
jmp
arpl
fmull
mov
cs
jb
pop
sbb
ss
push
test
in
xchg
dec
or
fistps
jl
dec
bound
or
pop
sbb
cltd
andb
mov
fiaddl
xor
out
xlat
pop
fldl
push
sbb
pop
and
mov
mov
pop
and
dec
dec
jns
lret
add
das
mov
pop
sub
inc
cmp
xchg
jne
add
fistpl
add
ret
mov
popa
push
mov
or
pop
sti
inc
fs
inc
xchg
or
fadd
jae
inc
push
xor
lcall
es
adc
cltd
pop
popa
inc
rcl
sarb
sub
imul
loope
cmp
push
in
out
jb
adc
fadd
jmp
loope
ret
adc
movsl
sub
dec
jge
pusha
fnstcw
mov
int3
sbb
sbb
push
xor
hlt
mov
out
and
mov
mov
mov
in
loopne
pop
movsb
fs
fsub
orb
lret
inc
xchg
mov
sub
test
in
mov
sbb
int3
pop
scas
mov
lods
sub
dec
add
add
or
adc
inc
push
js
stos
aam
fimull
xchg
xor
and
frstor
insb
lret
movsb
mov
pusha
es
or
add
nop
aam
adc
testb
nop
mov
and
outsl
fsubl
nop
and
in
inc
sbbl
xchg
outsb
add
sbb
sub
fcoms
xor
enter
or
stos
std
out
mov
inc
fs
adc
mov
add
cmp
jbe
lods
sub
jl
or
xchg
dec
mov
insb
mov
pusha
cmp
sbb
cmp
dec
adc
mov
mov
in
jnp
ds
fwait
and
xor
add
addl
pop
lds
fstps
and
in
add
fdivl
mov
fsubl
jno
sahf
les
add
outsl
bound
test
add
jp
loop
inc
fidivrs
adc
mov
and
and
dec
sbb
in
nop
fcmovne
adc
pop
push
nop
icebp
add
sbb
rcrb
test
and
dec
mov
mov
lea
mov
mov
clc
mov
add
mov
rclb
jns
sbb
cltd
add
inc
subb
stos
push
loope
jb
sub
push
enter
stos
xor
push
adc
dec
cmpsb
pop
decl
sub
sbb
jecxz
loope
jns
test
sbb
push
lock
shlb
hlt
mov
and
mov
adc
popa
ljmp
cmpsl
and
mov
loopne
orl
mov
daa
sbb
test
inc
dec
adc
addr16
pusha
xchg
fcoms
mov
test
dec
syscall
shll
sub
cmp
in
jae
adc
test
daa
lods
push
xchg
fldenv
loopne
dec
aas
popf
push
int3
mov
lret
ss
mov
dec
leave
sti
arpl
sub
add
xchg
jo
cmp
loope
iret
stos
and
cltd
sahf
loopne
inc
pop
dec
cmp
lret
int3
mov
pusha
loop
xor
inc
push
in
movsb
popf
xor
mov
and
add
insb
inc
add
dec
lds
add
xor
pop
pusha
push
add
out
xor
mov
fldenv
adc
adc
aam
mov
lock
sub
or
sub
adc
ret
jecxz
sub
arpl
nop
je
adc
or
adc
adcb
icebp
lock
push
and
pop
bound
cmp
int
mov
add
xchg
mov
inc
iret
jb
popf
add
xlat
mov
in
adc
mov
jl
xor
mov
clc
dec
fwait
les
mov
pop
fsubr
mov
lock
or
data16
sub
in
jecxz
cwtl
xchg
jb
and
and
xchg
insl
insb
sarb
sbb
adc
adc
sbb
mov
jo
cmp
add
inc
and
les
jle
adc
sub
and
aam
nop
adc
add
jae
popa
sbb
add
push
xorb
loopne
lds
xchg
mov
mov
sarl
jns
and
adc
insb
enter
cmp
push
add
mov
dec
add
pop
divl
dec
add
inc
mov
shl
add
addr16
cwtl
cmp
ja
paddd
add
test
into
adc
pop
subb
and
addr16
std
sbb
or
and
stos
test
ret
testb
hlt
in
or
mov
pusha
test
sbb
inc
mov
pop
add
loopne
push
xchg
inc
imul
add
fwait
jne
dec
and
adc
je
dec
fcoml
push
and
add
sbb
xchg
int3
or
sbb
rcrl
and
cmp
aad
nop
xor
add
in
incb
cmp
test
inc
or
jmp
adc
push
jno
adc
out
inc
rcr
testl
sbb
push
inc
shll
or
jg
mov
sti
daa
or
cmp
pop
mov
or
jmp
xchg
ret
outsl
xor
push
xchg
mov
and
daa
movsb
xchg
lods
inc
les
mov
mov
jmp
daa
imul
sbb
pop
lods
add
clc
daa
into
dec
and
jp
rcr
sbb
int3
add
cmp
fidivrl
mov
adc
add
adc
jbe
sbb
and
adc
push
mov
and
repz
add
iret
lret
and
xorl
js
in
arpl
cmp
xchg
popf
pushf
adc
pop
pop
push
repnz
cmp
sub
cs
pop
pop
cs
and
jbe
pop
lock
sti
xchg
push
jb
mov
mov
xor
outsb
popa
mov
cmp
lahf
scas
dec
arpl
sbb
adc
ror
loop
jnp
addr16
and
pop
testl
repnz
xor
xor
add
cld
mov
mov
inc
adc
mov
sbb
xchg
sbb
push
lods
or
lds
test
mov
pop
inc
out
or
cwtl
pop
insl
or
and
add
adcl
sbb
sub
and
adc
sbb
add
mov
mov
or
dec
pop
fnstenv
add
pop
pushf
test
sub
mov
cld
pop
mov
mov
lods
mov
add
stos
stc
sarl
sbb
add
in
movsb
in
add
jge
or
mov
mov
xchg
aaa
cwtl
add
jnp
and
inc
enter
pop
xor
xchg
shlb
sub
stos
loopne
hlt
or
inc
sub
pop
ret
lds
and
add
inc
xchg
mov
push
lahf
add
xor
pop
jl
rorb
into
pop
add
xchg
xchg
jb
adc
ss
dec
popa
movsb
rolb
out
sahf
test
push
sarb
pop
orl
popf
movsb
mov
mov
xchg
aad
sub
jl
je
cmpsb
add
mov
call
or
mov
push
nop
jns
sbb
aam
inc
push
jg
jno
and
mov
push
mov
jg
adc
xor
lret
ljmp
cwtl
loopne
and
bound
xchg
movsl
nop
movsb
jno
pushf
pop
push
xchg
adc
xchg
xchg
mov
sub
mov
jae
int3
mov
mov
pushf
rcrl
sbb
add
pop
xor
push
das
xor
adc
push
jl
pop
adc
and
sub
fcompl
cmp
pop
sbb
xchg
aam
mov
add
adc
push
mov
mov
dec
nop
orb
adc
das
dec
dec
test
or
nop
mov
xlat
shrb
sti
push
call
arpl
sub
js
imul
test
idivl
das
mov
int
ret
loop
mov
imul
iret
cmp
add
lahf
pop
sub
xlat
mov
ss
int
pop
test
shl
mov
pop
xor
fs
int3
add
push
and
mov
icebp
sub
les
pop
sub
aam
jo
xsaves
add
es
and
push
cmc
shrd
push
or
leave
cwtl
or
ret
pop
adc
jb
das
add
enter
jge
xor
mov
fcomps
dec
mov
dec
inc
sbbl
arpl
std
mov
sbb
sar
add
push
lods
mov
mov
add
xchg
loop
clc
aam
jmp
sbb
mov
ds
sbb
call
sarl
test
sbb
sbb
ret
cwtl
cs
jnp
sahf
inc
sub
shr
outsb
and
sbb
sub
repnz
pop
in
in
pusha
adc
nop
addl
addl
enter
enter
mov
dec
in
test
pop
sbb
jp
add
enter
or
adc
mov
aam
jbe
loop
or
rorl
cwtl
push
mov
mov
loopne
mov
fdivrl
add
stos
dec
rorl
imul
and
loopne
mov
int3
fildll
add
inc
pop
dec
xor
mov
icebp
aaa
fiaddl
int
or
imul
adc
movsb
aad
lcall
test
sub
add
loope
mov
and
and
lret
dec
xor
lods
leave
and
in
std
and
and
mov
add
test
subb
mov
or
pop
rclb
fstps
xchg
mov
or
mov
sbb
int3
sub
lcall
and
in
sbb
mov
add
push
enter
jbe
mov
or
imul
mov
jle
add
xor
jg
cltd
sub
adc
adc
cwtl
or
sub
cwtl
fs
or
xchg
fiadds
orb
mov
cld
inc
lret
adc
enter
add
aad
fmull
cmc
ret
add
mov
ficomps
bound
push
jmp
pop
jmp
mov
inc
and
fldl
push
out
sbb
das
jnp
dec
pusha
nop
or
ljmp
in
call
xchg
dec
cmp
aaa
push
or
push
add
xor
std
sub
xchg
sarl
lcall
int3
jmpw
xor
jp
in
pop
div
push
push
cs
sbb
test
icebp
cli
shrl
jmp
push
daa
arpl
sbb
imul
andb
roll
insb
fmulp
add
cmpb
add
leave
scas
push
mov
sbb
cvtps2pi
cmovle
mov
dec
adc
in
movsb
mov
sbb
int3
dec
mov
fnstsw
pop
imul
pop
push
and
xor
push
adc
arpl
mov
andl
cwtl
cmp
xchg
aaa
xor
hlt
adc
adc
sbb
dec
inc
sarb
add
cwtl
dec
addr16
fmull
hlt
adc
sub
rol
xchg
dec
loopne
and
cmp
mov
push
inc
jb
stos
inc
adc
add
fnstsw
sbb
ret
sbb
sahf
dec
lock
xchg
incl
cwtl
lcall
adc
add
dec
xchg
add
ss
or
adc
shll
inc
xchg
dec
fcomip
push
test
dec
push
dec
add
flds
shlb
jnp
sbb
into
xor
fwait
ja
add
sub
movsb
adc
mov
mov
adc
xchg
dec
xchg
gs
loop
xchg
mov
addb
mov
ja
add
dec
int3
or
and
mov
sub
psrad
or
rcrl
stc
int3
jge
mov
movsb
pushf
mov
es
adc
mov
lods
mov
pop
insb
inc
pusha
xchg
sub
jae
jae
scas
push
mov
or
lret
fstl
and
sbb
add
cld
xchg
mov
insb
call
dec
int3
add
push
and
xlat
and
mov
in
xchg
adc
adc
xchg
loopne
imul
fistps
dec
or
lods
jg
or
movb
mov
pop
daa
add
inc
in
adcb
in
stos
sub
pop
mov
inc
out
jp
mov
loop
shlb
adc
xchg
pusha
out
cmc
pusha
loopne
add
sarl
lret
add
shl
and
or
adc
xchg
xchg
nop
and
sbb
and
call
popf
add
sub
out
cmp
sbb
or
xor
lods
shlb
call
hlt
and
cmp
or
lcall
adc
addb
mov
mov
js
in
or
in
add
mov
ss
and
pop
aad
add
in
and
arpl
faddl
jbe
aas
adc
sbb
ret
ret
dec
jne
push
psubsb
pusha
adc
inc
lcall
jmp
in
adc
mov
mov
push
xchg
enter
xchg
push
xchg
cli
shll
fdivs
fildl
adc
mov
outsb
pop
das
mov
fisttpll
out
add
mov
xor
in
orb
repnz
sbb
adc
lahf
push
mov
arpl
mov
les
jge
push
cmp
push
es
dec
clc
in
mov
es
inc
in
inc
sub
mov
adc
add
loope
mov
imul
pop
faddl
push
test
addb
and
xor
add
cmp
in
push
cli
mov
nop
addb
xlat
pusha
aam
in
adc
add
hlt
add
xor
push
xchg
jno
mov
test
adc
sbb
or
add
data16
iret
mov
rcr
xchg
mov
and
sbb
fnstcw
out
addl
jecxz
pop
test
cmp
insl
loop
pop
xor
sbb
ret
movsl
add
stos
icebp
dec
xchg
aad
cmp
and
inc
mov
push
rcl
add
sbb
add
sbb
jne
dec
je
shlb
pop
add
imul
iret
adc
roll
xchg
dec
cltd
xor
pushf
dec
add
jnp
in
sub
es
clc
push
je
repz
pop
push
and
mov
rorb
in
pusha
mov
xchg
or
pushf
stos
pop
es
rolb
shr
loopne
pop
xchg
call
mov
call
pop
jae
inc
add
mov
add
nop
add
cmp
add
in
xchg
cwtl
or
and
or
mov
mov
pop
popa
cmp
jno
fdivrl
test
inc
inc
push
ss
sbb
and
outsb
add
pop
push
xchg
inc
mov
mov
adc
sbb
pop
test
das
js
sahf
mov
push
adcb
shrb
adc
push
xor
and
pop
enter
jno
and
fbld
and
dec
xor
or
mov
sbb
lret
fsubr
jg
mov
andl
xor
inc
mov
pop
cmp
sub
arpl
dec
fnsave
pusha
mov
clc
xor
adc
out
test
ja
push
push
sub
or
gs
mov
inc
sahf
push
adc
sbb
gs
pusha
mov
add
fisttpll
mov
pop
lcall
inc
gs
repz
inc
adc
fsubrl
sub
ds
mov
sbb
mov
test
push
or
rcr
and
negl
rorl
mov
xchg
xchg
sub
add
leave
and
dec
jo
stc
push
inc
pop
add
aam
dec
add
xorl
jo
or
fneni(8087
je
mov
cmpsb
adc
lcall
clc
jmp
pop
jge
add
lock
sahf
add
adc
test
add
xchg
lcall
vpshad
and
fsubl
dec
fidivs
inc
cmp
cltd
dec
jo
iret
mov
or
xor
inc
sbb
clc
cltd
addb
aam
cwtl
jl
and
xchg
mov
jns
push
jle
cltd
jmp
add
hlt
pop
aas
xchg
in
sbb
incb
out
inc
lea
repnz
jns
jns
sbb
cltd
cld
daa
inc
add
in
dec
push
inc
dec
lock
outsb
sub
loope
repnz
ret
push
sub
lods
test
mov
mov
jo
inc
add
adc
mov
outsb
imul
arpl
outsb
pop
push
or
pop
fistps
add
pop
test
jb
jl
mov
or
push
xchg
les
in
add
mov
shlb
dec
mov
sbb
inc
popf
ds
arpl
push
sub
sub
and
outsb
xchg
and
jno
xchg
mov
xor
nop
and
sti
and
add
jmp
lahf
pop
add
daa
jnp
sbb
jo
mov
push
or
sub
lods
out
fs
mov
mov
mov
cli
inc
xor
xchg
in
out
and
mov
filds
mov
dec
add
pop
andb
enter
lcall
pop
push
movsl
push
adc
lret
xchg
add
adcl
inc
sbb
cli
or
pop
add
fimuls
mov
lock
jg
xchg
add
test
cmp
push
cld
dec
dec
int3
sub
enter
xor
jl
fdivs
lahf
sub
fsubs
xchg
out
push
loope
lcall
nop
dec
cwtl
mov
fs
mov
pop
lock
add
and
pop
aas
movsb
mov
shll
sbb
in
arpl
adc
test
or
int3
adc
insb
or
cld
adc
call
add
leave
sbb
mov
insb
push
or
pop
xchg
mov
sbb
pusha
xor
sub
adc
or
jns
push
jle
pushf
inc
ja
push
jle
cmc
or
loope
loopne
xor
jl
push
and
and
mov
pop
add
jo
testb
mov
js
sub
call
lret
push
pop
je
xor
pop
in
inc
mov
sbb
xor
and
arpl
pop
cmp
inc
pushf
in
insb
push
xor
adc
jnp
pusha
test
xor
je
xchg
fimull
pusha
push
mov
ret
and
mov
scas
adc
sub
lcall
push
jb
mov
xor
dec
nop
xchg
jno
pop
cmp
jnp
add
sub
pop
cmp
xorb
jo
loopne
insl
dec
cmp
sbb
xorl
mov
mov
add
fmull
les
add
dec
push
clc
cmp
and
repnz
test
inc
inc
dec
dec
push
mov
pop
inc
imul
insb
jns
xor
sahf
pop
xor
sbb
mov
push
cwtl
sbb
and
jle
mov
dec
jp
dec
pop
das
inc
and
stc
and
mov
mov
xchg
adc
xorb
pop
add
mov
adc
xchg
je
mov
add
pop
lea
sbb
cmp
mov
adc
filds
stos
mov
or
adc
sbb
cmc
std
xor
inc
sbb
clc
fmuls
mov
inc
pop
push
adcb
pusha
cmp
das
cwtl
jecxz
dec
daa
enter
popf
je
mov
jp
es
pop
scas
xchg
rclb
xchg
and
lods
outsb
repz
inc
and
pushf
dec
push
imul
pushf
jo
add
xlat
pop
mov
stos
sbb
add
cmp
cli
imul
jecxz
add
mov
lret
inc
pop
cwtl
add
sbb
adc
out
and
repnz
pop
into
bt
rcrb
rorb
mov
add
mov
loop
repnz
adc
xchg
rorl
loopne
pop
and
fwait
pusha
jo
ror
xor
jo
or
jns
inc
xchg
lods
movsb
jmp
cmpsl
mov
push
push
aaa
mov
arpl
mov
rcl
sbb
int
mov
pop
or
mov
mov
adc
dec
ret
add
ljmp
or
std
add
lcall
movsb
xor
pop
sub
adc
bound
insb
pop
mov
idivl
pop
xchg
lret
test
sbb
xor
add
push
hlt
jbe
inc
sbb
outsb
fs
inc
fucomip
and
int
orl
xchg
les
sub
or
je
add
mov
loope
cwtl
pop
test
push
mov
cmpsl
outsl
xor
ds
or
pop
lcall
adc
cld
ror
mov
add
push
imul
aad
outsb
mov
loopne
adc
scas
jl
daa
enter
in
dec
in
into
xor
push
jg
hlt
loope
es
adc
sbb
push
rorb
cwtl
mov
out
mov
inc
push
sbb
push
add
xor
enter
mov
test
mov
push
int3
xchg
or
sub
sbb
and
or
adc
js
xor
add
adc
cltd
pop
jne
test
mov
mov
test
rclb
lock
enterw
ljmp
or
dec
shrl
xor
mov
mov
scas
add
jns
in
es
or
incl
cmp
jmp
jo
daa
mov
xor
or
rorl
in
addb
jmp
loopne
xchg
fstps
sbb
cwtl
push
pop
adc
enter
sub
nop
sub
jmp
mov
hlt
cs
mov
dec
loope
add
sbb
add
stc
adc
sarb
fcoml
or
mov
and
xor
clc
sub
arpl
add
add
nop
sbbl
ret
repnz
lock
movsb
adc
and
lods
test
add
inc
mov
sbb
inc
addr16
fstl
mov
out
inc
and
inc
pop
pop
xor
inc
imul
rolb
mov
cmp
jo
adc
js
cmp
out
dec
lods
pusha
mov
pop
xchg
mov
add
jne
jecxz
mov
xor
add
mov
jecxz
lahf
popa
clc
pushf
push
mov
jb
pop
hlt
adc
clc
mov
inc
jmp
adc
lcall
mov
mov
push
adc
or
mov
out
dec
inc
into
test
xlat
rolb
add
addl
sbb
ljmp
or
push
pop
aam
mov
xchg
push
movsb
dec
jg
or
xchg
sub
icebp
data16
add
int3
xorl
xchg
and
mov
cli
pusha
and
xchg
mov
repz
or
adc
or
add
dec
int3
sarb
xchg
pop
fdivr
xor
add
cmpsl
fs
decb
xor
cld
adc
sbb
andb
push
stc
mov
dec
add
repnz
ss
add
mov
mov
cld
aas
incl
test
mov
mov
xor
push
mov
mov
mov
sbb
movsl
or
jnp
pop
inc
shl
pop
xchg
dec
or
cmp
xlat
or
test
or
add
xor
mov
cwtl
sub
in
nop
add
add
add
push
add
xchg
fs
les
jp
sbb
and
fs
jle
fadds
in
es
mov
dec
xor
push
mov
mov
add
enter
test
inc
and
jecxz
int3
cmp
imul
or
xchg
rclb
adc
and
add
data16
sbb
pop
adc
sbb
icebp
mov
pop
jo
and
jnp
into
push
stc
inc
add
imul
es
movsl
les
shll
movsb
add
dec
stos
xlat
xchg
jbe
sbb
out
mov
add
mov
call
add
push
and
cli
xchg
ret
xchg
lods
movsl
scas
mov
xchg
pop
js
xchg
xor
pop
add
dec
gs
roll
popa
jns
xor
inc
shll
push
aam
sbb
ljmp
add
stc
adc
pop
or
inc
sub
in
xchg
sub
and
data16
or
sarl
mov
leave
orl
push
xlat
mov
sbb
and
cmp
pop
mov
in
stos
pusha
push
and
dec
add
fistpll
or
lret
jno
dec
out
inc
cld
repnz
xor
xchg
fldt
outsl
pop
mov
sbb
push
test
dec
pop
out
or
pushf
cmp
and
test
nop
add
icebp
push
mov
jp
sbb
xchg
add
xchg
iret
xorb
jo
jo
sbb
orb
add
or
jne
dec
add
mov
movzbl
push
push
call
pop
ret
enter
and
addl
ret
jbe
add
in
outsb
push
xor
or
repz
xor
sbb
dec
xor
add
call
sbb
outsb
mov
or
mul
movzwl
sub
inc
push
sbb
ret
mov
inc
push
ret
lods
pushf
add
pop
sub
mov
pop
mov
stc
paddusw
mov
dec
test
sbb
dec
mov
mov
sbb
pop
popa
pop
daa
sub
shrl
cmp
adc
dec
scas
loopne
push
ret
pop
inc
pop
sub
andb
lods
mov
mov
cmp
sti
cld
inc
xor
sub
call
fldenvs
popf
movsl
jo
jmp
cmp
xchg
lock
mov
cli
loopne
popa
test
movaps
push
sbb
fs
mov
enter
add
inc
push
ret
leave
add
insl
fidivs
cmp
bswap
imul
sti
ret
adc
and
or
inc
xor
xchg
daa
xchg
out
push
stos
enter
ret
xchg
mov
mov
add
jmp
cmpsl
ljmp
fsubrs
push
rcrl
sbb
mov
rorb
push
call
sbb
add
out
mov
nop
mov
push
push
adc
sub
push
and
xchg
or
adc
stc
or
and
fistl
iret
pushaw
dec
add
mov
scas
rorb
jne
adc
dec
push
cld
dec
test
and
rcrl
adc
xchg
inc
mov
and
pop
clc
pop
pushl
cmp
adc
cmp
push
mov
imul
and
nop
xor
add
or
jg
add
cmp
outsb
add
inc
or
repz
popa
addr16
dec
xorb
or
mov
add
popa
inc
vmaxss
addr16
push
jbe
fcoms
adc
adc
mov
add
inc
xchg
mov
inc
jp
sbb
adcl
or
mov
xchg
imul
pusha
jns
int
or
and
jecxz
scas
js
push
cs
call
mov
rclb
jge
jae
lahf
jp
shll
sti
cwtl
filds
pop
sub
popa
adc
dec
cmp
lods
push
mov
jae
xchg
dec
push
sbb
ret
and
je
jo
push
mov
or
sub
sbb
or
addb
add
andl
je
rcrl
repnz
mov
inc
cltd
cld
or
popf
and
push
mov
push
jmp
add
jecxz
ja
jg
add
add
inc
sbb
xchg
flds
int3
in
nop
push
push
stos
sub
ja
cmp
fdivr
int
mov
xor
mov
fildll
popa
pop
pop
push
pusha
pusha
dec
add
and
test
andb
sbb
mov
inc
mov
inc
sbb
andb
mov
lock
hlt
lds
adcl
add
nop
jmp
jg
cmpsl
fmul
add
or
notb
int
mov
pop
pop
or
ja
sub
adc
dec
lret
xchg
mov
inc
add
fnstcw
jge
ljmp
movl
movsl
and
in
adc
subl
push
popf
xor
add
outsb
and
adc
add
mov
and
pop
ret
in
dec
pop
pop
loopne
push
ret
sub
fwait
int
and
xor
xor
pop
sub
rcrl
add
popa
or
sbb
test
pop
xor
jnp
xor
scas
cmc
jne
repnz
sub
sbb
add
sbb
add
rcll
rolb
mov
pop
and
or
xchg
add
or
test
into
xor
ret
pop
mov
and
jns
jne
mov
push
test
and
add
es
nop
movsb
mov
jae
mov
lods
shrb
fwait
popf
xchg
aad
and
push
movl
sub
xchg
sbb
in
adc
adc
cltd
es
popa
es
jo
in
or
xor
cld
dec
dec
adc
cld
sbb
push
shl
xor
jmp
pop
or
pusha
push
out
mov
scas
pop
out
add
mov
adc
jp
popa
and
std
sbb
fwait
cmpsl
pop
cmp
add
je
mov
testb
xchg
jo
jle
sbb
push
add
ret
mov
nop
mov
sub
mov
dec
sub
push
in
cmp
mov
push
popa
mov
and
fiadds
int3
cli
testb
enter
dec
add
clc
adc
add
xor
out
ficomps
fwait
jbe
mov
dec
rcll
out
ss
or
jno
pop
inc
pop
add
and
out
cmp
cwtl
push
ret
push
jno
sbb
xor
adc
lret
daa
or
mov
sub
pop
mov
in
sbb
push
aaa
icebp
subb
clc
loopne
arpl
ret
and
pop
pop
imul
mov
cmp
sbb
cli
mov
js
inc
or
aam
xor
pop
add
movswl
xor
jmp
add
clc
pop
sbbb
fbld
dec
mov
pop
adc
sub
xor
cmp
call
inc
add
insl
subl
test
cmp
nop
mov
test
in
and
cmc
subb
fstps
sbb
in
adc
adc
xor
xor
adc
inc
cmpsb
shlb
cmp
push
xchg
imul
dec
fsubrs
inc
sbb
bound
adc
stos
pop
add
cmp
sbb
rorl
sbb
add
push
sbbl
mov
int3
cmc
or
adc
inc
dec
and
imul
addb
jno
sub
shlb
mov
dec
pop
in
sub
mov
arpl
or
adc
adc
ret
xchg
xchg
or
mov
sarb
mov
or
lods
xor
adc
jmp
in
jle
add
push
shr
lods
pop
adc
push
or
inc
sbb
imul
ja
mov
cmpsb
jbe
add
clc
mov
ja
daa
sbb
jnp
sbb
lods
push
pop
push
and
dec
incb
in
cmp
sbb
cmp
adc
inc
cmc
mov
and
mov
test
jg
mov
dec
popf
xchg
pop
test
out
ds
js
adc
out
pusha
add
outsl
sbb
xor
sub
testl
cmpl
xchg
insl
or
and
ds
mov
sbb
pusha
cmp
sahf
mov
clc
add
mov
popf
xorl
out
movsb
mov
adc
pusha
mov
shll
adc
andb
ds
sub
pop
add
call
jmp
fsubl
sti
jmp
add
mov
pusha
add
jnp
mov
lahf
lret
shlb
bound
clc
push
xchg
push
stos
cmpsb
aam
adc
loopew
push
pusha
scas
test
adc
sbb
and
sti
push
movb
nop
pusha
push
push
sub
loop
jns
add
inc
pop
cmp
lock
push
push
inc
xor
into
scas
mov
push
mov
push
fsubs
std
mov
les
test
jb
add
outsl
mov
jbe
pop
and
dec
arpl
inc
jo
into
push
pop
mulb
shll
mov
jecxz
and
incl
mov
or
cmp
adc
pushf
add
xchg
add
nop
add
adc
outsl
pop
inc
sub
pop
or
and
shll
add
lahf
cmp
add
xor
stos
add
sub
addps
sbb
cmp
aam
jmp
push
mov
iret
add
push
add
repnz
popf
cli
or
aam
lock
add
in
out
cwtl
cmc
push
mov
and
popf
imul
bound
jmp
jns
les
sbb
add
cmc
pop
push
add
cmp
les
sahf
std
xchg
mov
cmpl
ss
add
inc
ja
push
adc
cltd
lods
adcl
cmp
jb
jns
movsl
inc
out
jno
push
aam
mov
repnz
sbb
mov
inc
outsl
mov
lock
rcrb
pop
pushf
stos
inc
mov
lods
xor
aam
xchg
test
fadds
in
adc
outsb
ret
aaa
jne
mov
xchg
aad
js
or
ret
add
and
lds
in
add
les
mov
popa
je
adc
sbb
fldl
or
pop
inc
jmp
push
inc
sbbl
mov
or
dec
test
insb
add
fs
es
daa
mov
jnp
jo
cmp
popl
add
push
in
sbb
ja
movzwl
adc
cmp
es
jo
ds
or
fs
add
jp
imul
outsb
lds
sub
loope
cmp
lea
dec
enter
enter
test
fildll
add
mov
jno
cmp
out
pop
jae
movlps
push
test
dec
jns
sub
inc
aas
cmc
push
push
inc
jne
and
fstpl
int3
out
push
pusha
push
fwait
adc
imul
jae
mov
xchg
call
addb
adc
lods
or
and
sbb
and
pop
add
pop
sbb
roll
in
mov
mov
and
sub
add
xchg
mov
daa
scas
inc
test
pop
out
push
addr16
pop
mov
mov
or
or
push
mov
mov
int3
add
adc
lock
pop
xchg
inc
movsl
mov
adc
dec
call
add
and
das
adc
xlat
sarl
push
sub
nop
adc
adc
sub
jae
outsl
pop
mov
mov
popf
mov
jecxz
sub
mov
fsubr
aam
or
jg
pop
mov
rorl
aas
movsl
addr16
adc
dec
push
add
lret
out
pop
push
pop
pusha
or
add
inc
and
xchg
imul
mov
movsb
pop
js
inc
sbb
shll
daa
pop
test
mov
mov
shrb
repz
and
popf
flds
int3
push
cwtl
data16
in
or
testb
cltd
movl
popf
mov
mov
inc
cwtl
add
rorb
out
xchg
pop
fsubl
push
inc
xlat
and
nop
and
or
loope
inc
add
or
iret
adc
shrl
stos
fiadds
jl
imulb
pop
out
or
adc
add
jmpw
shl
xor
xor
insb
subb
mov
bound
add
mov
xlat
call
xchg
sbb
adcb
addr16
sbb
mov
mov
sti
cmp
cmpsb
or
push
sbb
mov
js
push
add
pop
lahf
xchg
adc
sbbb
jg
push
xor
loope
insl
push
das
inc
shl
jo
imul
insl
add
pop
adc
or
xchg
cltd
smsw
adc
mov
adc
int
lock
xchg
mov
sub
xor
nop
fimull
pop
lret
loope
mov
lea
pop
les
repnz
or
mov
lret
pusha
mov
add
and
adc
and
add
jmp
mov
rcll
sbb
jl
or
lea
imul
vmovddup
add
and
mov
sti
movsl
nop
xor
add
sbb
imul
loope
loop
or
jp
int
xchg
and
jmp
push
mov
rcll
lea
add
jns
and
and
fsubl
out
roll
mov
inc
mov
call
cmp
dec
lret
cld
mov
imul
test
adc
pop
je
add
add
cmp
sbb
adc
inc
int
push
sub
inc
and
mov
cwtl
ficoms
clc
mov
adc
or
leave
inc
push
pop
dec
push
ljmp
add
sbb
loopne
shr
bnd
movsb
nop
pop
dec
push
pop
xor
mov
dec
and
jno
add
lea
sbb
test
xchg
push
addl
fnstenv
pop
rcll
mov
jno
mov
outsl
movsb
lea
xor
lea
push
out
xchg
js
or
loop
add
ret
in
push
mov
movsb
inc
jmp
popf
pop
xchg
xor
stc
adc
xor
xchg
push
and
xor
test
jno
fwait
push
push
add
out
or
jns
adc
lods
xchg
add
sbb
dec
mov
and
inc
sub
jns
dec
push
inc
xchg
adc
push
adc
in
push
inc
movsb
or
insb
dec
sub
and
pop
daa
addr16
bound
insl
jl
add
in
stos
cmp
or
mov
and
mov
adc
iret
xchg
fsubs
sub
cs
adc
test
add
cli
cmp
cmp
and
adc
mov
adc
mov
push
movzbl
scas
lea
aaa
inc
outsl
xor
and
push
mov
test
das
data16
cli
leave
pop
sbb
mov
push
aad
jl
add
sti
sbb
xor
imul
xchg
jns
mov
lahf
mov
or
xor
xor
roll
jno
outsb
movsb
adc
jge
mov
xchg
fsubs
sbb
cwtl
scas
cmpsl
lock
sbb
mov
jl
add
mov
popa
lcallw
pop
add
adc
sub
ret
xor
es
icebp
mov
push
pop
ret
rcrb
hlt
and
fisttpl
cli
int3
mov
add
sub
sbb
cmp
pop
mov
movl
cmp
sub
sahf
in
inc
jl
loop
xchg
sub
or
lea
cld
cwtl
aaa
mov
and
nop
sahf
and
mov
sbb
push
dec
aaa
mov
adc
cld
imul
dec
dec
dec
mov
mov
enter
and
adc
mov
stc
shl
xor
gs
pop
pusha
shll
leave
or
out
insb
icebp
adc
dec
sub
sbb
cmp
test
push
ds
push
sub
sub
cmp
dec
loope
daa
insb
mov
test
gs
cmpb
xor
mov
sbb
dec
sub
pop
jo
sbb
dec
enter
mov
or
sarl
or
je
jl
dec
pop
iret
push
mov
shrb
inc
adc
das
lods
into
test
mov
sub
rolb
mov
fisubs
adc
or
sbbl
addb
rcll
insb
mov
lahf
sti
pop
mov
bnd
add
cmp
inc
mov
ret
fildl
shlb
or
loop
and
enter
xor
movsl
inc
mov
add
rcrb
pop
out
mov
mov
jo
rolb
jno
cmp
jecxz
mov
movsl
movl
lds
sti
push
loope
aam
mov
cmp
adc
repnz
dec
cmpb
xor
scas
std
adcl
divl
pop
add
std
jb
wrmsr
nop
mov
add
test
jnp
push
mov
dec
pop
sub
bound
xchg
das
sarl
mov
sti
int
rclb
or
call
push
sbb
xor
or
add
sbb
jne
flds
sbb
hlt
adc
jp
popf
daa
stc
sub
cmpl
outsl
adcb
jns
mov
mov
jns
or
add
or
add
test
repnz
sbb
fisttps
lcall
call
out
mov
dec
mov
jbe
dec
mov
aad
and
pop
pop
adc
pop
jmp
mov
or
cmp
enter
sti
lahf
inc
pop
or
mov
adc
add
pop
data16
pop
xchg
add
adc
mov
sub
xor
add
pop
int3
in
mov
mov
sti
cwtl
xor
div
sub
xor
jb
dec
push
mov
imul
fwait
mov
movsl
add
xorb
mov
adc
lcall
add
add
jno
xchg
cmp
popf
adc
pop
test
add
out
mov
and
mov
loopne
imul
pop
lea
sub
stos
testb
push
ljmp
leave
push
inc
mov
testl
imul
into
add
and
movsb
push
addr16
hlt
push
in
out
mov
lods
lea
inc
std
add
add
mov
out
lock
xchg
sbb
jge
cmp
decb
outsb
jo
and
or
mov
mov
sbb
xchg
gs
mov
mov
mov
movsb
xor
cmp
int3
mov
insl
jae
xor
mov
out
xor
xlat
movsl
jecxz
and
and
lldt
pop
inc
cli
add
aas
dec
add
aaa
hlt
fcompl
fcomi
dec
pop
adc
adc
rclb
pop
arpl
add
imul
insl
outsl
add
aam
sbb
mov
es
mov
mov
add
dec
cmp
mov
mov
lret
cmpsl
int3
dec
or
in
rorb
sahf
paddq
mov
add
sbb
roll
cltd
mov
ret
inc
mov
pop
aam
js
idivb
cmp
xlat
push
dec
je
stos
add
movups
cmpsb
sub
ljmp
in
sbb
iret
inc
popf
cmp
mov
add
lcall
popa
das
jne
cmpsl
push
inc
sbb
push
cmpsb
in
xchg
dec
push
push
cwtl
and
int
add
jno
cli
outsl
in
dec
mov
into
adc
scas
inc
pop
or
xor
in
inc
push
verr
xchg
scas
std
cmp
incb
outsl
inc
popa
pop
or
les
stos
sbb
inc
sarb
add
mov
mov
outsl
add
repnz
into
add
mov
or
add
sahf
int3
aam
sar
xchg
add
js
add
ljmp
add
divl
mov
rolb
out
jge
mov
imul
cwtl
adc
push
jo
or
xchg
inc
push
loop
add
jp
mov
ficoms
mov
rolb
push
cltd
pop
lahf
mov
xchg
push
fisttpll
rcrb
rcr
mov
add
adc
popf
pusha
dec
loop
jb
ficoml
leave
push
xchg
sub
xor
adc
out
pop
jle
int
scas
outsb
jno
xor
adc
das
cmp
inc
aaa
leave
or
and
jnp
push
in
cmc
ljmp
add
nop
inc
lea
push
lret
mov
or
movsb
cmp
mov
stos
mov
adcb
addb
or
jmp
aad
dec
adcl
pop
out
push
mov
fimuls
xor
add
pop
xor
xchg
sahf
xor
xchg
and
add
repz
add
cli
and
scas
stc
ljmp
out
and
imul
cmp
and
bndstx
pop
icebp
mov
imulb
loopne
lcall
push
mov
xchg
cmp
mov
movsb
and
pop
add
xchg
xchg
xor
mov
push
lods
and
test
mov
orb
mov
nop
adc
jns
repz
movb
in
pop
inc
add
loop
mov
sub
dec
mov
pop
inc
or
xor
cmp
mov
bnd
and
rorb
sbb
icebp
xorb
mov
sub
jg
jnp
add
xchg
dec
call
lcall
jp
test
stc
add
inc
aam
push
loop
and
arpl
mov
add
jp
mov
cmp
add
jnp
inc
mov
jns
mov
add
sub
pusha
push
and
jnp
mov
nop
shll
push
insl
incl
push
pushf
repnz
dec
mov
push
jo
add
fninit
or
scas
insl
jno
adc
es
pusha
push
xchg
fchs
out
add
dec
inc
je
inc
jp
add
pop
mov
mov
adc
mov
hlt
or
and
xchg
mov
test
add
daa
sub
sbbl
cmpsb
sbb
in
ffreep
setns
sbb
dec
push
push
xchg
pop
add
sbbl
mov
dec
adcb
sub
dec
sub
stos
inc
pop
xchg
ja
pop
ja
aam
inc
or
push
xchg
sbb
add
call
je
sbb
fimull
add
stc
and
xchg
fldpi
movl
repz
pop
idivb
add
jae
fisubl
mov
loopne
and
and
rolb
xor
xchg
cmp
cmpb
cwtl
or
out
rorb
mov
dec
add
fidivl
cltd
dec
adc
push
stc
les
add
sub
fdivrl
adc
jp
test
test
outsl
jbe
dec
add
pop
pusha
or
pop
pop
ficoms
and
push
repnz
inc
add
cmp
and
inc
jl
rcrl
and
lods
mov
sub
std
rclb
out
adc
xor
xor
xorb
lret
mov
inc
and
adc
ret
xor
subl
sub
dec
js
dec
cmp
outsl
inc
pop
mov
cwtl
popl
lahf
cltd
sub
outsb
xchg
adc
mov
cmpsb
mov
aad
sbb
push
cmpsl
insl
xchg
push
sbb
mov
adc
ja
add
out
sbb
sbb
call
xchg
je
pusha
cmp
or
push
push
negl
mov
jmp
push
add
imul
out
cmp
mov
mov
or
addr16
xor
cld
gs
ds
jp
pop
adcb
nop
mov
rolb
out
mov
sub
push
aam
lretw
test
jmp
ret
arpl
xor
jb
insb
xchg
notb
addb
mov
add
pop
jns
sti
jmp
pop
pop
xchg
stc
ds
mov
loopne
sub
inc
dec
cmp
mov
and
fistl
mov
adc
push
lret
adc
xchg
mov
pop
lahf
add
dec
out
cmp
add
jns
stc
jg
add
bnd
rorb
cmpsl
test
push
int3
orb
or
enter
stos
ror
lcall
jns
out
and
push
mov
sti
mov
pop
lods
mov
imul
or
insl
cwtl
mov
sub
add
jbe
call
pop
inc
inc
in
inc
pop
add
push
cmpsb
jo
outsb
xchg
inc
or
shlb
or
test
popf
add
pop
pushf
xchg
inc
or
loope
pop
xchg
scas
or
data16
mov
pop
sbbb
insl
sbb
aas
mov
xor
int3
rcll
leave
push
sbb
push
jge
xor
xor
lock
int3
adc
add
rorb
and
adc
outsb
setp
xor
dec
outsl
push
adc
data16
mov
orb
clc
cmpsl
adc
loopne
mov
inc
fsubl
add
add
shlb
lea
push
or
xchg
loop
mov
adc
fsubp
mov
sti
cld
out
add
repnz
popl
cmp
mov
hlt
imul
sbb
push
pop
mov
and
xor
mov
jb
leave
fidivrl
add
sbbb
sub
mov
jb
dec
add
bound
inc
insl
sbbb
pushf
and
fidivrl
pop
jo
pop
or
cltd
rcr
add
cmpsl
inc
pop
add
aam
or
push
es
adc
pop
rclb
pop
jno
jnp
stos
or
xor
lock
frstpm(287
add
dec
add
mov
pop
sub
add
push
mov
lods
lahf
mov
jno
fldenv
and
add
mov
push
sub
repnz
push
repnz
call
sub
xor
test
mov
shr
shl
sbb
cmp
insl
str
aas
mov
mov
sub
add
push
mov
pop
clc
pop
ljmp
jmp
pop
jns
sbb
ss
cli
decl
incb
into
jp
dec
jl
add
add
movsl
mov
cli
xorb
add
insb
mov
jge
push
add
xchg
mov
clc
and
dec
stc
int
das
fwait
jge
add
pop
add
push
or
push
push
sub
enter
enter
std
pusha
cli
pop
adcb
inc
inc
test
sub
mov
movsl
pop
imul
nop
add
cld
dec
mov
icebp
addb
ss
arpl
push
test
sub
xchg
adc
shlb
fsub
add
inc
cwtl
adc
mov
add
cmpb
stc
repz
mov
or
cld
out
mov
dec
add
adc
push
dec
or
xchg
and
sub
pop
sarb
daa
loopne
fnstsw
or
jo
inc
add
ss
cmp
adc
mov
jnp
bound
arpl
push
add
iret
aam
fiaddl
and
mov
shr
sub
shufps
pusha
and
sub
call
cld
pop
stos
xchg
scas
lds
jne
jno
add
mov
xor
cmp
inc
nop
loop
xor
adc
sub
mov
adc
push
inc
pushf
mov
lds
sub
adc
insb
aas
push
jge
and
add
xchg
pop
or
sbb
mov
orl
es
jmp
rcr
jecxz
sarb
and
add
push
dec
pusha
rclb
or
jno
sbb
jmp
andb
xchg
xchg
push
fsubrl
jo
fisubrs
lea
sbb
in
add
ficomps
out
cltd
dec
sbbl
add
mov
mov
or
stos
or
adc
movsl
mov
pop
sbbl
push
fdivs
jns
xchg
in
adc
pop
daa
pusha
filds
xchg
dec
iret
movsl
ja
and
jne
xchg
orl
iret
and
ret
aas
out
inc
pushf
dec
inc
pop
dec
jne
and
mov
test
add
jno
aaa
and
or
ss
bound
cmp
daa
sbb
in
push
mov
cmc
clc
xor
cmp
fmull
pop
push
nop
movsl
and
ss
jl
js
xchg
and
pusha
sbb
push
call
lahf
out
loopne
mov
dec
data16
and
clc
rcll
cmpl
push
add
iret
bound
test
cmpsl
or
je
dec
pop
xchg
rolb
cli
sub
add
mov
or
mov
adc
addb
lds
lods
push
in
add
int3
idivb
mov
or
pop
jg
jle
adc
or
pop
hlt
es
dec
xchg
pusha
lret
stos
lcall
push
or
mov
ffree
pop
mov
mov
add
and
mov
xor
into
add
in
xchg
ljmp
sub
xchg
push
or
mov
mov
daa
jo
and
push
dec
pop
lock
mov
sbb
add
or
jns
pop
js
adc
out
xchg
fwait
sub
fdivrp
xchg
stc
sub
lods
add
pop
arpl
arpl
jbe
ret
pusha
mov
mov
push
imul
add
movb
push
xor
mov
cmpsb
mov
xor
mov
jns
mov
jno
xor
or
repnz
mov
sbb
pop
add
and
aaa
sub
pop
outsl
add
repnz
cmc
mov
pop
popf
jno
add
sub
and
or
sub
or
pop
push
bound
adc
inc
mov
cmp
imul
dec
pop
jecxz
les
adc
in
or
jbe
push
xchg
add
cli
rclb
jge
rcl
mov
test
sarl
add
pop
orl
sub
add
inc
xchg
out
andl
das
push
cmp
clc
clc
push
jb
shlb
cs
cmp
or
popf
lea
pop
test
mov
cmp
leave
xorb
inc
movsb
jno
sub
xchg
push
sub
cmpsb
lea
push
popa
test
jge
cmp
jae
xor
sub
sub
push
cmp
js
icebp
clc
push
xchg
movsl
lcall
add
clc
mov
mov
repz
push
pop
mov
cltd
or
dec
add
xor
nop
rorl
imul
in
subb
or
aaa
movl
imul
xchg
loop
js
jae
add
lock
mov
and
cltd
adc
adc
mov
mov
mov
mov
sub
shll
add
fldcw
in
sub
add
ljmp
mov
les
daa
jmp
xlat
call
faddl
jge
lea
jle
jns
jmp
mov
not
cmpb
inc
add
xor
add
test
mov
jmp
addb
jnp
and
ret
sub
jp
adc
cmp
dec
pop
cmpb
lds
cmpsl
xor
test
inc
loope
or
mov
popf
add
add
cmpsb
or
pop
popl
pop
pop
push
jo
pop
adc
scas
mov
sub
sbb
sub
and
add
clc
xchg
test
dec
and
sarl
adc
les
xor
mov
xor
add
or
sarl
cmp
fwait
adc
cmp
icebp
jge
add
xor
pop
sbb
xor
add
mov
push
add
sbb
ss
add
sub
add
mov
xorl
adc
mov
lcall
jmp
ss
xor
pop
cmpb
sbbl
in
lret
add
adc
cs
add
ljmp
cmp
xchg
sbb
xchg
mov
mull
aaa
xor
enter
pop
and
mov
lret
add
test
sbb
in
push
cmovnp
adc
and
scas
cmpsl
or
rcll
in
mov
sub
fdivrs
mov
sub
sbb
jl
xchg
ficoml
lods
shlb
pusha
scas
hlt
mov
xor
cmpsl
fcoms
rcr
mov
inc
push
xor
addb
lcall
sbb
inc
xor
cld
js
inc
bound
jecxz
and
add
orl
add
arpl
push
pop
cltd
xchg
mov
rorl
inc
mov
mov
mov
xchg
and
add
fimull
dec
xchg
nop
pop
movsl
sub
shll
sbb
add
inc
jnp
loopne
push
sbb
pop
fs
scas
or
daa
push
mov
and
adc
hlt
adc
pop
push
xlat
out
stos
pop
sbb
jno
inc
inc
outsb
test
pop
popa
and
cltd
xor
mov
pop
test
mov
add
filds
loope
cmc
mov
dec
sbb
mov
imul
add
inc
xorl
rcll
sarb
repnz
push
mov
push
sbb
adc
dec
add
lahf
inc
pop
add
cs
xchg
cli
and
cmpb
hlt
jne
xor
andb
movsl
mov
sarb
subb
ret
mov
sbb
add
jns
repnz
mov
jns
in
imul
adc
fsub
and
jo
flds
gs
ss
add
das
dec
cli
inc
xor
pop
in
xlat
jecxz
bndstx
push
add
aad
and
add
aam
push
pop
push
xchg
shlb
out
leave
rcll
loope
imul
rorb
xor
or
pop
dec
ret
cmp
out
bnd
mov
push
sbb
lods
fs
int
and
pop
data16
ror
lahf
mov
push
and
jp
mov
dec
sbb
rolb
rolb
or
or
pop
ficomps
push
jmp
or
push
pop
testl
xor
lods
fcmovu
push
ds
or
mov
xchg
cltd
mov
arpl
bswap
or
loope
inc
fldenv
das
add
xchg
add
xchg
mov
test
mov
dec
les
subb
add
lcall
or
mov
ficoml
cmpl
pushf
xchg
mov
test
pusha
add
mov
push
in
mov
jle
popl
adc
add
js
add
push
insl
xchg
in
mov
mov
xlat
pop
sub
test
mov
fucom
add
testb
add
inc
and
add
pop
xlat
xchg
or
rcrb
cwtl
fldt
cmp
or
jg
mov
fsubrs
add
mov
clc
jns
mov
push
mov
mov
loopne
test
orb
add
mov
xchg
jb
add
hlt
add
adc
sub
rcrl
inc
cmp
fisttpll
sub
lds
mov
mov
iret
imul
jo
fiadds
push
add
hlt
out
data16
dec
and
xchg
psubusb
push
xor
lock
rcrb
hlt
sbb
out
push
cld
jno
out
jecxz
pusha
xchg
push
pop
lahf
test
call
or
movsl
add
jne
inc
jns
jecxz
add
repz
push
in
std
rcrb
das
sub
or
gs
int3
stos
or
add
enter
shr
movsb
pusha
adc
js
sub
cmpsb
push
xor
jns
pop
xchg
jb
pop
rolb
lea
jp
xor
add
cmpsb
or
pop
popf
fistpl
push
in
cmp
jl,pn
test
push
and
mov
push
mov
inc
jnp
or
lret
cltd
or
push
imul
add
xchg
sbb
mov
mov
jae
pusha
mov
xor
adc
loopne
pop
xchg
adc
or
aam
add
sarl
or
jno
ret
call
and
sbb
push
adc
mov
xchg
jae
stos
mov
mov
mov
inc
lahf
xchg
jecxz
fidivrl
cmp
loope
out
sub
in
lret
inc
dec
pop
lea
int3
das
and
mov
lds
xor
nop
icebp
add
add
cmpsb
inc
icebp
gs
mov
xchg
inc
pop
clc
cld
fcomps
out
int3
dec
cmpsl
mov
jno
fistpl
cld
gs
mov
or
fisubrs
or
push
and
jge
push
jl
jmp
fsub
daa
add
cmpsl
jns
adcb
pushf
add
lock
push
int
cmp
in
mov
jle
lods
daa
out
sbb
jnp
ud2
mov
jge
jbe
and
in
icebp
jg
dec
add
lock
push
movsb
mov
insl
nop
mov
sub
jge
icebp
and
pop
inc
mov
xchg
dec
or
cmpsl
fsubrs
lahf
in
add
ss
or
pop
scas
mov
cmp
xchg
ss
xor
xor
xchg
adc
push
jns
inc
push
jp
shlb
mov
xchg
out
pop
hlt
loope
sti
imul
or
lea
test
out
inc
adc
andb
and
lock
xchg
add
dec
stos
push
sbb
bound
lcall
nop
jbe
shlb
inc
sub
push
cs
xchg
flds
push
adc
add
hlt
andps
lahf
push
mov
inc
lea
mov
je
sti
adc
in
pop
mov
rcrl
and
std
push
dec
pop
xorl
enter
push
movups
sub
cltd
xlat
cld
mov
sbb
add
cs
rcl
dec
je
pushf
pop
shl
data16
xor
dec
sbb
cmpb
jo
clc
imul
push
jmp
xor
mov
pop
popf
add
xchg
cmp
ljmp
test
ret
lock
fwait
or
in
insl
and
fdivl
stos
in
leave
add
lods
xchg
cmp
add
loopne
stos
xor
jg
rol
push
xchg
cmc
nop
or
push
add
popa
iret
jnp
lods
imul
cld
stc
xchg
push
dec
sbb
pop
xor
pop
add
lods
pop
stc
pusha
mov
imul
adc
and
lret
lahf
or
test
fmull
add
aad
div
sti
gs
fdiv
add
add
shl
enter
jbe
add
jl
in
fld
xlat
add
sub
shlb
inc
movswl
aaa
push
add
cmc
and
nop
shrb
in
push
push
cli
push
jge
add
mov
xor
jecxz
xlat
nop
lea
lret
inc
pusha
dec
push
pusha
testl
lods
xor
loopne
adc
or
es
int3
xchg
mov
stc
and
push
mov
add
cld
jle
mov
pop
push
int
bound
mov
adc
insb
jnp
sub
lret
add
push
hlt
insb
adc
mov
stos
inc
cwtl
rclb
push
pop
add
inc
sub
sub
mov
mov
push
push
push
cmpsl
xor
pusha
adc
mov
inc
mov
add
push
pop
push
add
push
pop
fldcw
rcl
jb
push
add
add
adc
std
jno
pop
xchg
sbb
mov
orb
add
sbb
scas
cmp
jns
add
xchg
dec
xor
sub
add
and
adc
inc
outsb
jp
cltd
push
iret
or
pop
jo
add
dec
and
add
inc
push
add
ss
das
jle
jb
sbb
sarl
dec
or
loopne
cmpsb
jnp
pop
mov
shrb
repz
stc
ja
filds
les
mov
cmp
push
in
xor
mov
or
cmp
dec
add
jle
pop
adc
pop
popa
not
inc
pop
add
mov
imul
sub
pop
nop
and
add
add
in
pop
dec
shl
pop
nop
aas
fwait
pop
subb
mov
aam
dec
loope
and
dec
dec
fildl
dec
stc
shll
mov
add
sub
xchg
cld
fisttps
clc
sub
xchg
subb
pushf
cmpsb
add
jge
mov
mov
mov
fcomps
mov
je,pn
adc
add
bound
mov
xlat
pop
pop
scas
inc
out
mov
lods
out
shll
xchg
add
fwait
out
lahf
inc
mov
inc
sbb
sbb
add
cld
mov
add
cwtl
mov
popf
push
gs
out
mov
pop
or
and
orb
pop
adc
loop
sub
add
repz
sbb
in
xchg
add
or
push
add
popa
sub
jbe
aam
fs
out
test
adcb
jmp
cmpsb
pop
dec
xchg
adc
cli
mov
repz
ljmp
stc
outsb
push
xchg
test
shrb
and
pop
adc
add
cmp
test
pop
mov
cwtl
mov
add
leave
add
cmpl
cmp
or
push
lods
js
inc
ss
cmp
mov
xor
sbb
adc
movl
sub
sarw
mov
sbb
test
in
push
add
dec
out
mov
xchg
inc
push
outsl
gs
icebp
sahf
popa
mov
inc
sbb
sub
mov
xchg
lock
lock
jg
pop
insl
cli
xchg
fildll
lods
test
insl
hlt
adc
adc
dec
mov
pop
and
pushf
xchg
mov
jo
aam
add
outsl
sti
enter
cs
mov
add
cmpsl
add
mov
nop
jns
add
adc
in
ret
hlt
je
push
pop
roll
gs
out
je
shrb
popf
add
mov
jae
js
push
add
in
test
adc
insb
add
add
add
jno
outsb
cmp
stc
outsl
andps
inc
shlb
dec
mov
xchg
lret
pop
in
add
mov
xor
jp
nop
lahf
xchg
std
insl
xchg
out
jmp
hlt
cmpsl
push
cmc
jo
add
imul
sti
imul
inc
xor
sub
shrb
and
add
repnz
je
push
lret
push
push
dec
dec
cmpb
mov
or
in
mov
test
adc
fs
sub
aas
fstpt
cli
outsb
fldl
cli
and
pop
mov
aas
cmp
add
je
cs
jp
push
push
sahf
xchg
mov
or
jl
xchg
add
cmp
jno
sbbl
mov
add
das
mov
repz
pop
outsb
aaa
daa
mov
arpl
jecxz
cmp
mov
add
pop
mov
xrelease
int3
pop
lcall
xchg
sbb
ror
or
xchg
cmpsl
shlb
mov
in
or
jnp
pop
push
gs
outsb
add
push
mov
sub
adc
pop
jo
lea
mov
leave
and
andb
movsb
push
aad
lods
xor
lret
les
aas
and
add
ds
test
mov
and
add
test
mov
sbb
adc
or
mov
fwait
sub
roll
mov
call
add
shrl
ljmp
mov
mov
lock
sti
mov
push
jmp
ret
or
mov
je
adc
xchg
insl
xchg
ss
loopne
cmp
shll
lahf
cmc
in
mov
in
sbb
jl
or
xorl
or
shrd
stc
cli
add
jg
sbb
mov
xlat
mov
and
mov
clc
loope
dec
sbb
cli
mov
imul
iret
ret
push
push
or
lods
push
sub
push
enter
aaa
rorb
mov
pop
mov
fbld
push
popf
jg
aad
aaa
stc
cmpb
std
lds
add
push
js
mov
dec
in
mov
xchg
aam
sti
outsb
faddl
fdivrs
outsl
outsb
jne
add
test
mov
push
pxor
test
dec
and
cmc
sub
add
mov
ret
out
in
add
sbb
sti
push
clc
ret
mov
mov
in
push
int3
sub
cli
lahf
in
sub
jae
xor
loope
pusha
add
adc
and
es
cld
test
and
xor
xorps
mov
mov
pop
in
and
lea
dec
sub
adc
pop
das
push
fs
or
rcll
sub
cmp
sti
fcoms
es
and
xor
sbb
ficoml
xor
pop
cmp
test
lds
sahf
fs
in
xlat
pop
push
mov
push
adc
sub
insb
xchg
fistps
call
popa
jl
adc
lock
pop
in
cmpl
inc
sbb
sub
test
adc
mov
test
mov
mov
jge
xor
and
sub
dec
lds
or
inc
imul
stc
and
test
jl
fdivl
jle
faddl
popa
adc
in
mov
xchg
jmp
and
adc
cmpsb
fdivl
or
clc
or
sub
xchg
push
inc
in
stos
inc
mov
and
push
pop
pop
mov
sbb
dec
mov
test
xorb
dec
or
push
pop
xchg
xchg
pop
orl
ret
cmpsb
mov
jl
sbb
in
mov
cmp
mov
lret
mov
jbe
fcoml
sti
xchg
or
cltd
movups
shrb
push
add
rcr
lods
pusha
lcall
pop
add
jmp
jne
out
adcb
xor
jg
push
push
rolb
sbb
pop
xchg
xor
std
xchg
jne
mov
push
cmp
insl
mov
popf
mov
ror
adc
movsl
rclb
push
xor
push
push
add
mov
adc
cltd
nop
call
add
sbb
stc
hlt
mov
inc
insl
movl
rcll
int3
pop
xor
jbe
loopne
jl
sbb
lahf
add
pop
popa
movsl
mov
xchg
jle
sbb
push
push
mov
repnz
pop
cmp
cmc
outsl
xor
xchg
mov
push
movsl
arpl
mov
aaa
sub
adc
xorb
cld
scas
lea
push
call
jo
mov
pop
xor
ret
inc
iret
adcw
pop
or
adc
push
cmp
sbb
inc
sbb
add
jmp
enter
inc
and
xor
dec
push
cmp
ds
adc
add
or
rorl
in
or
popl
jle
or
mov
add
sbb
ret
cmpl
and
movb
shlb
jno
add
or
push
push
in
mov
jl
inc
xlat
cmp
sub
mov
mov
orl
ret
mov
mov
incl
xor
mov
data16
lea
jg
aaa
jb
sbb
in
nop
mov
jns,pn
mov
or
pop
sub
cmp
fisttpll
add
cmp
dec
add
cmp
fldl
loop
xchg
push
xchg
inc
out
addb
xchg
or
jbe
lds
and
and
add
std
add
cmpsb
xchg
pusha
jle
shl
lds
mov
addl
adc
fwait
andb
pop
dec
add
push
or
adc
and
pusha
sbb
rcll
rorb
dec
inc
xor
jns
push
leave
sbb
fdivs
inc
push
scas
push
mov
adc
inc
or
jo
sti
lock
adc
inc
add
sbb
sbb
or
inc
adc
sbb
fistps
push
inc
cmp
das
or
xchg
loope
jo
popf
in
mov
test
or
pop
test
adc
inc
mov
dec
call
cwtl
out
lcall
and
clc
add
inc
xor
insl
sbb
cmp
xor
enter
fcmovbe
movsb
dec
push
add
inc
and
push
add
lea
in
add
lcall
sub
xor
ret
movsl
dec
aas
add
sbb
mov
filds
xor
dec
or
mov
sbb
loope
inc
pop
leave
xchg
pop
subl
or
mov
out
or
lock
add
out
dec
or
inc
ret
outsb
cwtl
cmp
insl
movsl
andl
ljmp
incl
adc
cs
icebp
mov
orb
sbb
push
mov
add
lcall
imul
mov
pop
add
cmp
xchg
xor
aad
movsb
arpl
xor
loope
add
out
mov
call
mov
pop
movsb
push
mov
pop
je
add
mov
mov
cmp
or
aam
pop
ret
xchg
adc
fidivl
xor
push
jns
sub
test
adc
push
jecxz
aam
cmp
push
jmp
mov
mov
adc
int3
sbb
adc
sbbb
push
mov
movsl
add
sbb
ret
inc
movsb
push
push
call
pop
rol
inc
imul
xchg
stos
pop
enter
cwtl
pop
inc
lret
daa
call
nop
mov
or
out
leave
pop
mov
mov
leave
and
inc
add
inc
pop
loop
or
mov
lock
int3
mov
push
loope
or
mov
nopl
adc
xor
and
cli
movsb
dec
pushf
add
mov
push
add
ret
cltd
push
push
push
repnz
fistps
ljmp
mov
and
ja
mov
outsl
cmp
jmp
and
in
add
xchg
nop
insb
sbbl
lock
ds
ljmp
sub
and
jnp
pusha
idivl
pushf
das
mov
nop
mov
sbb
imul
pop
or
sbb
cmpb
pop
cmp
inc
adc
jmp
adc
mov
test
pop
adc
and
dec
test
in
mov
add
sbb
push
sbbl
adc
fcmovne
dec
and
enter
jmp
mov
popf
sub
push
enter
dec
pop
aad
dec
orb
out
xchg
leave
and
scas
push
add
or
xor
pushf
cmp
xchg
stc
or
andb
sbb
fisttps
push
or
sbb
mov
inc
fcompl
fcomip
jl
adc
ret
sub
push
pop
adc
inc
sar
push
mov
jge
add
nop
hlt
mov
push
mov
or
jnp
hlt
xor
call
lahf
rorl
sbb
mov
adc
cmp
xorb
xor
fmull
jg
shlb
fisubs
or
add
lods
imul
add
mov
pushf
sbb
or
push
sti
and
push
inc
dec
mov
jmp
insl
pop
jecxz
push
or
inc
mov
add
xchg
or
sti
push
push
sub
push
xor
inc
imul
inc
pop
enter
pop
and
or
push
sbb
loop
add
cmp
fnstenv
or
push
inc
wbinvd
mov
inc
repz
push
xchg
mov
mov
into
add
mov
imul
clc
adc
out
popf
insb
adc
jmp
loopne
inc
or
dec
mov
add
movsb
xchg
adc
out
push
and
xor
into
mov
sbb
mov
add
sahf
push
mov
aas
mov
push
imul
lret
cwtl
fidivrl
jl
mov
adc
xor
or
into
mov
sar
add
rorb
mov
shr
sbb
sbb
jp
addb
adc
add
pushf
xorb
decl
jmp
mov
dec
mov
jmp
sbb
and
daa
test
push
rcrb
movsl
rolb
scas
push
pop
xlat
fs
dec
sbb
cwtl
inc
add
xchg
fists
pusha
cmpsl
enter
add
rcrb
or
mov
dec
lods
jp
add
pushf
cmp
cmp
pop
pushf
cli
add
mov
popf
sub
imul
jb
repnz
mov
popa
push
pusha
int3
into
dec
inc
cmp
cmpb
mov
inc
es
out
push
lods
xor
add
rclb
mov
push
pusha
cmp
jns
mov
jae
insb
push
push
je
verr
adc
icebp
cld
fiaddl
jg
ret
mov
xchg
mov
cmpl
push
inc
loopne
xor
addr16
loopne
xor
push
loopne
inc
sbbb
shlb
and
dec
mov
ret
and
fsubl
add
rclb
ds
and
rolb
mov
inc
add
daa
push
mov
inc
shlb
mov
add
inc
add
adc
and
mov
xchg
adcb
mov
xchg
add
ja
scas
shrl
add
inc
out
inc
jae
cmp
mov
add
jge
pushf
xor
push
jmp
mov
add
ljmp
add
push
arpl
add
and
mov
pop
xchg
pop
adc
mov
xchg
dec
dec
pop
inc
jbe
push
inc
mov
mov
addl
sar
xor
add
fucomi
or
in
lods
and
pop
and
pop
inc
push
add
cmpsb
push
inc
fst
inc
ror
je
sbb
ja
jle
mov
add
mov
lds
or
insl
movsl
xchg
sbb
pop
lods
stos
mov
cltd
insl
xchg
mov
mov
shrb
stos
add
add
test
in
lods
push
dec
pop
sahf
mov
push
mov
outsl
ds
pop
cmpsl
cmp
add
std
test
stos
inc
mov
stos
popa
insb
push
adc
pop
daa
add
sti
sbb
inc
xor
shrb
push
or
imul
xor
sbb
movsb
out
add
push
push
sbb
ret
or
jle,pn
mov
add
cltd
add
ds
mov
pusha
mov
jnp
add
mov
xor
dec
ret
dec
and
les
jg
idiv
push
hlt
cli
aas
add
xchg
mov
jb
rcrb
jle
mov
inc
call
inc
push
fs
pusha
vandps
cli
inc
sbb
xchg
rcrb
sbb
or
xchg
adc
test
inc
les
or
lret
roll
js
cmp
icebp
lcall
notl
xchg
or
hlt
sahf
inc
mov
pop
enter
dec
mov
jmp
andb
mov
mov
lds
rcl
icebp
adc
pop
pusha
xor
lcall
mov
xor
cmp
sahf
xchg
fmull
test
mov
iret
inc
mov
je
push
add
cmp
lret
sub
xor
xor
testl
add
sub
clc
cmpsb
mov
add
or
xchg
outsb
cmp
rclb
jo
nop
add
lods
sub
sahf
movsb
pop
nop
mov
out
gs
enter
cmp
cmpsl
dec
inc
jns
enter
sub
lods
dec
pop
cmp
fsubl
adc
aas
lcall
shlb
pop
aaa
js
sbb
add
xchg
or
shrl
add
sub
pop
or
lods
push
mov
lds
xor
mov
lret
pusha
adc
pop
inc
push
gs
inc
jbe
nop
into
mov
add
push
dec
cwtl
jns
mov
xor
mov
dec
dec
sbb
sub
or
aam
jb
add
scas
or
jecxz
mov
sub
xor
and
insl
icebp
inc
sub
aam
insb
jb
jo
xchg
sbb
dec
mov
jmp
sbb
daa
inc
add
int
shl
cli
adc
rcrb
sbb
das
sbb
sub
es
and
xor
fimull
mov
xorl
push
movsb
call
push
shrb
ret
adc
dec
mov
xchg
mov
add
cmp
add
cmp
loope
lods
cmp
dec
sub
push
aam
stos
jno
or
jo
fildl
add
mov
sahf
arpl
mov
add
dec
lret
add
bound
rdtsc
sahf
and
sub
and
sbb
pop
mov
in
add
pusha
inc
sahf
ret
xchg
mov
cmp
dec
sub
aaa
or
mov
sub
js
int3
loop
imul
add
mov
ret
gs
adc
cmc
mov
sbb
inc
jnp
stos
sub
jge
gs
out
jns
out
pusha
je
lcall
in
xchg
push
faddl
jmp
push
xchg
mov
hlt
xchg
cli
jae
or
mov
fdivs
jns
jge
push
adcb
pop
add
fiaddl
aam
push
cmpsl
addb
call
imul
loop
mov
add
jecxz
jl
adc
pushf
and
ret
sahf
pop
fldenv
or
adc
les
pop
xor
or
mov
js
add
rcl
je
test
jne
pop
loopne
shr
or
jb
sub
jnp
sbb
daa
fs
and
jge
enter
and
scas
mov
rclb
dec
or
in
cwtl
js
inc
inc
pop
in
dec
or
adc
adc
sarb
nop
add
sub
lock
cltd
cmpsb
or
ret
push
or
repnz
dec
xor
push
xor
rorl
mov
gs
stos
dec
xchg
fisubrl
adc
clc
fisubrs
add
fwait
in
fcompl
jb
and
cmp
pop
push
dec
js
sbb
pop
sub
filds
add
push
dec
sub
call
hlt
xor
pop
mov
or
pop
ljmp
jb
mov
inc
loop
or
adc
out
call
add
xor
jo
rorb
mulps
popf
loop
cmpsl
push
mov
pop
jae
jmp
insl
inc
adc
xlat
out
shrb
mov
in
jl
cmp
sahf
lods
pusha
je
adc
mov
and
mov
sahf
add
inc
call
dec
pusha
or
sub
je
pop
push
rcrb
popf
jae
xor
mov
xlat
push
dec
adc
cmp
jl
dec
vmovups
adc
insl
xchg
dec
inc
push
mov
mov
inc
or
rolb
icebp
imul
add
sbb
add
add
dec
aam
pop
add
add
cli
pop
fidivrs
add
inc
scas
daa
shrl
xchg
clc
xchg
dec
adc
add
inc
fcoml
inc
push
dec
cmpsb
or
stos
mov
inc
dec
cmp
test
int
mov
sbb
call
and
int3
and
cltd
inc
add
dec
jbe
push
clc
je
jne
mov
orb
push
rolb
std
dec
popa
cmp
mov
and
sub
add
adc
ja
stc
call
or
xchg
pop
aam
es
or
xor
inc
leave
mov
sub
xor
lret
add
xchg
rorl
jb
js
add
and
ja
add
cmp
leave
imul
add
mov
mov
adc
out
ljmp
push
lods
xor
add
insl
movsb
mov
mov
sbbb
lods
cli
jecxz
in
sbb
push
adcb
xchg
push
mov
dec
and
rclb
iret
clc
aam
pop
xor
lods
sahf
cwtl
aam
sub
nop
into
and
add
in
sbb
ds
loope
les
ljmp
cwtl
jb
test
and
sbb
dec
mov
and
rorb
mov
inc
sbb
jne
loopne
jbe
insl
xor
mov
arpl
rcrb
jo
mov
sbb
scas
lret
aam
stos
xchg
pop
test
loop
lods
mov
sbb
mov
and
adc
fucomp
icebp
cmp
dec
jnp
mov
sbb
mov
add
push
pop
jbe
adc
pop
pop
sub
and
out
in
add
push
add
in
mov
nop
rcrb
mulb
add
dec
inc
push
and
push
imul
push
or
subl
je
add
stc
inc
clc
jb
hlt
cmc
pop
jle
xchg
cwtl
cmp
lock
lcall
cmp
ret
and
push
inc
cwtl
mov
mov
lret
mov
add
push
add
xor
mov
or
mov
push
dec
xchg
aaa
mov
mov
mov
lods
clc
sub
sbb
and
or
mov
cli
sub
insb
clc
pop
shr
or
scas
pop
dec
rclb
out
popa
xchg
sbb
mov
xor
cmp
rcrl
in
movsl
insl
sbb
lret
inc
sub
movb
rol
js
add
mov
sarb
out
sbb
sub
test
flds
loop
js
add
out
adc
les
and
dec
adcb
pop
pop
in
add
and
add
popf
aam
dec
sub
sub
pop
mov
add
movsb
inc
lret
add
fcompl
jb
mov
pop
add
testb
imul
push
adc
jecxz
sbb
divb
jle
or
enter
or
cmp
add
mov
les
wrmsr
inc
pop
adc
iret
pop
inc
add
imul
and
or
data16
push
add
sub
jne
sub
push
test
pusha
mov
push
nop
sub
imul
or
into
xor
in
add
iret
or
and
xchg
add
or
enter
or
dec
jns
int3
lret
xchg
sub
insb
add
fwait
sub
out
dec
gs
insl
sub
xchg
aaa
mov
test
cmp
scas
lods
iret
mov
pop
and
in
jg
add
les
sub
ja
aas
mov
xorb
xchg
xchg
dec
aam
out
pop
pop
push
sbb
mov
fldl
xchg
sahf
adc
mov
out
adc
stc
add
int3
jb
cmp
dec
add
in
add
das
aam
mov
rcrb
je
nop
movsb
lods
aam
arpl
and
in
pusha
xor
enter
mov
or
xor
cld
or
mov
and
sub
daa
cwtl
and
add
fidivs
ret
push
rolb
enter
or
in
add
xor
js
test
mov
jo
mov
popa
das
int
stos
cltd
cmp
add
icebp
sub
hlt
sub
out
imul
lods
sbb
fildll
and
mov
cltd
mov
nop
les
aaa
cmpl
enter
or
cmpb
shl
ljmp
cld
sbb
xor
jge
shrl
pop
add
mov
into
add
test
sub
cmp
push
inc
sar
cwtl
jecxz
mov
mov
test
lcall
add
mov
jg
clc
je
cmpsb
lock
xchg
sub
mov
mov
xchg
add
push
dec
ret
push
pusha
movsl
xchg
in
xchg
clc
add
cmp
and
mov
popa
sbb
sub
jne
cmpsb
mov
aam
ret
cwtl
jno
inc
ror
int3
jecxz
add
imull
sbb
add
sbb
jae
mov
sbb
popa
dec
lret
les
jns
jae
sub
mov
and
ja
pop
dec
cmp
hlt
mov
dec
and
sbb
cmp
loope
subb
clc
rorl
sub
ss
mov
sbb
cmpsl
mov
out
dec
dec
mov
bswap
sub
out
jns
add
pop
fmull
mov
push
mov
pop
inc
dec
mov
ljmp
ljmp
push
mov
jne
divb
popf
inc
ret
and
test
pop
pop
inc
into
test
or
repz
or
fsubrl
rcl
jno,pn
pusha
push
xor
popf
add
clc
sbb
movsl
adc
adc
mov
push
shrb
sbb
inc
or
push
jecxz
cmp
or
cwtl
xor
sbb
mov
hlt
jne
and
dec
cmc
mov
inc
add
pop
shlb
sbb
test
cmp
sbb
add
lcall
sbb
aad
adc
inc
test
add
dec
sub
jbe
or
sbb
dec
inc
add
or
outsl
pusha
or
add
jne
loop
jecxz
ljmp
popa
mov
mov
inc
mov
test
pushf
add
sti
add
xchg
sbb
dec
pop
cmp
push
dec
mov
inc
sub
or
xchg
out
les
mov
in
mov
pop
dec
lret
fs
aam
cwtl
mov
ret
adc
sub
mov
fildl
dec
pop
fwait
enter
pushf
adc
fs
or
movsb
push
jmp
imul
div
sub
sbb
out
lds
arpl
push
add
xchg
xor
or
repnz
xor
aam
push
rcrl
and
outsl
add
outsl
sub
pop
cmpsb
rclb
rorb
stos
xor
enter
inc
add
cs
pop
fstl
mov
inc
xor
add
mov
inc
cmpsb
test
pop
or
xchg
add
push
push
add
fiadds
fdivr
loopne
test
push
fisttps
xor
scas
add
sti
dec
push
nop
inc
pop
lea
mov
bnd
addb
cmp
hlt
and
cmp
nop
hlt
testl
pop
cltd
clc
loopne
arpl
inc
jge
add
std
cmp
imulb
jo
ds
lret
xchg
test
mov
andb
pop
je
in
adc
rcll
jge
cmp
and
jne
xor
cmp
cmp
add
dec
xchg
or
ds
aaa
sbb
int3
pushf
add
mov
cltd
cmc
icebp
out
inc
xchg
dec
cld
inc
clc
push
add
mov
ret
pusha
loop
adc
jmp
les
inc
lret
jmp
add
and
and
jae
jno
add
sbb
shll
or
aam
add
dec
test
mov
dec
and
outsb
mov
rolb
cld
int3
pop
xchg
pusha
inc
dec
jbe
outsb
mov
add
call
mov
push
xor
add
sub
inc
push
lret
dec
dec
rolb
and
aas
adc
sbb
clc
push
and
subb
mov
pause
add
call
inc
inc
decl
lods
mov
push
pop
in
mov
clc
je
inc
add
mov
dec
int3
xchg
fsub
loopne
xor
cmp
pushf
clc
push
mov
hlt
movsb
mov
cld
fs
lock
add
cmpsb
loope
dec
addr16
inc
dec
pusha
sahf
jns
adc
push
fistl
lods
jmp
sbb
add
cmp
bnd
push
cmp
sub
inc
sarb
push
add
hlt
in
roll
je
dec
fwait
cmpsl
inc
adc
insl
push
cltd
repnz
sbb
inc
mov
xchg
fadds
add
inc
jae
jbe
pop
lcall
cmpsb
dec
addb
xor
xor
mov
dec
js
mov
add
inc
bound
cwtl
inc
rorl
in
jo
rorl
int3
sub
cld
xor
jl
mov
inc
adcl
mov
pusha
out
mov
or
jo
jo
adc
or
or
push
pushf
cmp
mov
push
pushf
lds
iret
add
add
js
pop
add
push
loopne
aam
xor
stos
fiadds
pop
repnz
cmp
adc
mov
aas
rclb
pop
push
sub
sbb
rolb
xor
sbb
xor
xor
jns
sub
and
push
mov
sbb
and
add
ret
shl
fisttpll
mov
or
push
nop
jo
mov
fiaddl
xchg
push
push
ljmp
dec
data16
lahf
or
xchg
shll
mov
sub
add
jp
add
push
lcall
inc
test
adc
adc
mov
xor
xor
inc
fistpll
rcr
mov
aaa
mov
aas
outsb
loope
pop
aad
and
mov
cmp
into
jo
xor
mov
push
aam
iret
fisttpl
addb
add
adc
outsb
lock
lock
push
mov
adc
xchg
das
aam
cwtl
sub
loopnew
xor
mov
data16
adc
xor
sub
inc
add
sub
loopne
rol
das
cmp
call
dec
stc
call
sbb
dec
addl
cmp
mov
hlt
xor
je
pushf
sbb
pushf
add
xchg
aam
pop
lcall
jno
fsubl
push
cmovb
rorl
popa
lods
dec
adc
xchg
mov
nop
and
inc
loop
or
adc
cli
inc
sbb
and
mov
fidivrl
fnsave
dec
add
add
mov
aas
cmpsl
sbb
sbb
jp
cwtl
cltd
inc
dec
add
xlat
test
fadd
inc
and
aaa
mov
pusha
aam
leave
in
xor
out
cmpsb
pop
adc
mov
out
shl
je
pusha
pushf
insl
movsb
dec
xchg
test
and
or
cmc
push
out
sbb
xorb
cmp
inc
adc
lock
fisubrs
or
negl
push
faddl
ret
ficoms
add
mov
aam
mov
jo
xchg
dec
ror
rcrb
jl
sbb
fldz
cmc
aad
sub
push
mov
call
mov
push
or
repnz
mov
cmpb
cmp
scas
inc
sbb
inc
call
xor
nop
outsl
shl
sub
add
in
xchg
pusha
sub
dec
repnz
pop
mov
out
xchg
into
ss
cwtl
test
mov
hlt
dec
jl
testl
insl
mov
psubsw
ret
popa
rorb
mov
not
loopne
xor
push
mov
in
cmp
std
test
and
pop
pusha
pusha
nop
hlt
daa
dec
jo
pusha
sub
inc
fdivl
in
sbb
nop
dec
leave
sbb
inc
mov
jnp
inc
sbb
fmul
add
push
and
mov
clc
pop
or
push
pusha
pop
int
andb
in
xchg
pop
enter
and
mov
and
mov
mov
and
adc
andl
clc
lods
inc
mov
xchg
adc
mov
add
pushf
aas
fs
cld
les
dec
mov
subb
out
or
bnd
xchg
mov
fwait
sbb
and
jp
repnz
int
ror
jecxz
cwtl
mov
sbb
add
fs
sbb
cmpsb
shlb
sbb
lahf
adc
push
add
push
or
sbb
mov
pop
clc
add
push
push
push
mov
cmp
jl
push
movsl
leave
les
in
insl
fisttpll
fildl
cmp
roll
scas
xchg
sbb
dec
and
cs
ficoms
dec
push
loopne
outsb
outsb
insb
push
jbe
jmp
lods
jge
jmp
jns
cmp
add
gs
js
cli
inc
adc
adc
in
lock
lcall
push
mov
daa
or
jecxz
cli
and
mov
cmp
jns
xchg
loop
icebp
hlt
jne
add
in
inc
ficomps
call
push
pop
add
dec
push
mov
mov
enter
cmpsb
jmp
aam
stos
cmp
movsl
jae
jo
dec
add
fistl
inc
fiadds
and
adc
jmp
pushf
dec
add
add
xchg
scas
cmp
test
cwtl
int3
ss
jb
sub
pop
das
les
push
xorb
dec
fistpll
mov
add
ss
lcall
mov
xchg
lcall
and
sbb
lahf
adc
add
sbb
xchg
mov
pop
hlt
jne
negb
in
cld
scas
lock
test
inc
pusha
fwait
aad
add
mov
pusha
sub
mov
sub
in
add
sahf
mov
jmp
push
cs
add
push
fisubs
aaa
cmp
and
ja
iret
mov
cmp
ret
dec
push
repnz
xchg
jbe
fsubs
inc
rorl
dec
fs
jmp
jns
sbb
mov
ror
lods
in
outsl
add
and
mov
cmp
dec
mov
not
mov
dec
js
dec
add
es
into
add
dec
sub
jmp
mov
je
mov
adc
mov
fnstcw
jp
clc
cmp
or
mov
push
mov
dec
push
rorb
cmpsl
adc
shlb
dec
pop
add
pmuludq
dec
mov
fldl
cwtl
mov
push
inc
jns
jae
or
pop
les
in
add
and
sti
add
add
push
rorb
popf
cwtl
adc
int
ja
add
pop
mov
cmp
sbb
mov
cmpsl
int3
inc
jg
fs
repnz
add
xchg
jne
cmp
lret
or
and
loopne
hlt
inc
sub
add
ds
fldt
mov
and
jae
add
jne
pop
or
fs
push
add
mul
pop
lret
push
xlat
cld
pop
add
xchg
dec
outsl
jmp
jns
sbb
and
out
or
mov
les
push
push
repnz
mov
mov
cmp
cmp
scas
push
push
call
rclb
dec
mov
mov
add
cmp
add
in
cmp
clc
cmpb
push
lret
clc
xor
loopne
sub
aas
add
pop
nop
mov
mov
mulb
and
add
or
add
in
pusha
inc
xchg
leave
mov
test
lods
test
out
cmpsl
and
idivl
les
cld
mov
shll
sub
adc
or
iret
mov
sub
ja
push
fucomp
rcr
cmpsb
inc
push
xchg
lock
jns
sbb
dec
into
pop
sbb
lret
xchg
in
pop
inc
inc
test
add
cmp
cmp
jecxz
scas
in
nop
mov
loopne
jp
rorb
roll
or
xlat
cmp
inc
and
insl
lods
mov
aam
sbb
push
les
call
pop
loop
pop
pusha
jns
sbb
aam
sahf
call
out
in
inc
pusha
lcall
mulb
loopne
push
dec
and
cmp
clc
mov
sbb
je
out
jne
rclb
rcrb
iret
push
lcall
and
add
xchg
mov
dec
dec
das
les
adc
jg
mov
outsl
aam
jmp
mov
fs
push
xchg
pop
add
loop
inc
stos
push
xor
sbbb
xchg
adc
shlb
rcll
mov
ljmp
sbb
jb
pop
cmpsb
and
inc
jle
dec
mov
cmp
or
pop
adc
xor
add
insl
cmp
dec
fidivl
push
cmp
cmp
add
movsl
loopne
mov
add
arpl
cmp
add
and
stos
imul
push
adc
adc
dec
repnz
dec
in
jbe
dec
mov
dec
add
ret
pop
or
mov
mov
pop
add
ljmp
test
push
rclb
add
test
xchg
loopne
or
adc
pop
out
inc
fisubrs
push
pusha
add
jb
push
ficompl
aad
test
sbb
add
insl
jmp
xor
inc
adc
sub
push
xor
sbb
push
mov
dec
or
add
jne
orl
jae
sub
movb
ljmp
mov
or
jmp
sub
sbb
insl
xchg
push
dec
jo
sbb
adc
mov
nop
loop
xor
test
mov
test
dec
cmpsb
mov
or
mov
sahf
ds
and
push
dec
pop
xor
mov
mov
push
sub
nop
jo
rclb
jno
xorb
ljmp
or
pop
or
and
inc
mov
ds
pop
fcompl
mov
clc
xlat
adc
out
sbb
fdivr
inc
sbb
mov
mov
mov
pop
orl
int3
adc
pop
xchg
push
push
mov
add
sbb
pusha
or
lret
pushf
repnz
pop
jo
dec
dec
adc
adc
cwtl
lret
shl
jmp
test
and
add
add
sub
mov
mov
pop
aas
xchg
movsb
dec
xor
dec
fldt
adcb
cwtl
or
dec
jb
lods
sbb
adc
ficoml
cmp
add
in
cmp
push
loopne
movsb
dec
inc
gs
dec
addr16
inc
jns
push
call
push
outsb
cltd
mulb
add
les
pop
out
xchg
ficompl
pop
adc
add
js
sub
cld
enter
hlt
aas
mov
push
xor
inc
add
aam
in
int3
dec
ljmp
andl
xor
sarb
fcompl
ja
xorb
or
scas
mov
sbb
pop
add
cmp
imul
out
stc
dec
mov
mov
sahf
sbb
or
mov
sub
jge
mov
lods
cld
jbe
xchg
mov
rcrb
sbb
shll
xor
fiadds
roll
and
and
cli
pop
add
leave
cmp
xchg
int
cmp
xchg
aas
sbb
lods
push
aad
jecxz
jb
adc
scas
inc
push
andl
sbb
lock
test
loopne
nop
push
in
pusha
mov
or
dec
pusha
pushf
sahf
and
pop
mov
jmp
pop
mov
rclb
lcall
mov
pop
ret
sub
mov
ret
sbb
adc
push
dec
and
in
mov
nop
test
in
push
push
mov
push
js
popf
test
add
in
sbb
add
cld
stc
je,pt
fbld
and
pushf
mov
pop
das
or
or
pop
pop
inc
mov
pop
out
pop
push
add
js
clc
sbb
jmp
gs
push
or
fildll
addb
dec
add
add
fsubl
in
rolb
movsb
fcmovnbe
test
ljmp
mov
dec
or
cmp
popf
push
cmpl
test
cwtl
andb
sub
xchg
push
rclb
add
dec
push
pop
or
ljmp
hlt
dec
pop
rorb
pop
fistpll
jbe
mov
mov
cmpsb
fwait
push
lret
test
sbb
nop
and
addb
pusha
push
jo
add
mov
js
jmp
pop
pop
mov
loopne
sub
xchg
into
dec
jae
sub
sub
and
ds
xchg
movsb
lods
sbb
pop
sub
and
pop
xor
cmpl
cltd
sbb
call
mov
int3
push
jmp
mov
mov
dec
pop
das
fimuls
sbb
adc
sti
cmp
push
sbb
loope
int
fld
add
ret
cmpsb
cmp
mov
out
dec
jl
dec
add
ljmp
sbb
pop
dec
sbb
js
into
mov
or
es
add
outsl
cmp
out
dec
cmp
insb
repnz
jp
scas
xlat
add
mov
movsb
rclb
dec
and
jo
cmp
lods
and
inc
movsb
xchg
int3
pop
pusha
and
inc
loop
xor
outsb
inc
pop
mov
jg
sub
inc
in
bound
insl
nop
inc
jo
pop
mov
fcoml
ljmp
call
and
or
cmp
in
into
rorl
push
sub
pop
pop
arpl
nop
bound
add
fidivrs
or
faddl
imul
stos
outsb
dec
add
shrb
mov
pop
mov
loope
lock
inc
icebp
mov
lret
ljmp
imul
xor
jns
imul
pop
pusha
rcll
shll
imul
pop
xchg
adc
adc
add
shll
sub
out
pop
aad
mov
xor
shrb
jno
insb
add
add
adc
mov
pop
pop
cmpsb
push
add
mov
lahf
ret
inc
sbb
add
dec
jl
add
inc
test
cs
push
ljmp
outsb
pop
jae
loop
pavgb
mov
or
and
push
cs
test
jl
addr16
jmp
mov
test
push
mov
ret
add
add
sbb
jg
and
mov
xchg
add
in
inc
and
xlat
cli
repz
dec
jnp
push
mov
adc
sarb
jp
scas
adcl
dec
sahf
int3
cmpsb
jns
icebp
inc
sbb
addr16
push
jns
pop
jmp
sbb
cli
insl
sub
fs
loope
adc
push
repnz
xor
cmp
and
dec
dec
popf
xchg
sub
add
push
mov
leave
push
mov
movsb
cli
jmp
and
lret
mov
int3
sub
cmp
cwtl
and
enter
out
mov
mov
lcall
test
into
sbb
add
cwtl
out
cmp
and
pop
or
adc
lock
push
inc
add
sahf
cmc
loopne
cmpsb
add
clc
ja
xor
inc
sub
aad
xchg
addr16
sub
push
sub
jp
ret
or
out
mov
iret
sbb
sub
mov
or
test
mov
fimuls
lcall
sbb
cmpsb
inc
mov
daa
jns
sub
fistps
out
jecxz
lock
cld
xor
leave
ds
int3
int3
xor
and
sub
pop
bound
inc
jl
inc
pusha
adc
shrb
lret
jmp
push
sbb
jl
cmp
lock
fcomp
or
fdivrl
mov
inc
push
sub
sub
and
test
popf
dec
xorl
mov
add
add
mov
cmpsl
jns
push
mov
lock
push
adc
cmp
mov
add
xchg
jg
cmp
jns
pop
ja
adc
fidivl
mov
add
lcall
loopne
xor
test
xor
dec
xor
fdivrl
add
ret
push
jp
leave
jns
js
add
pop
pop
fistpll
clc
dec
or
ficoml
test
mov
in
loop
imul
jecxz
pushl
js
push
out
xor
dec
rcr
dec
aam
faddl
ljmp
in
mov
add
lret
movsl
adc
je
inc
or
js
inc
fidivrl
adc
add
fldcw
imul
jb,pn
in
jle
inc
rorl
push
cmp
inc
roll
jmp
test
clc
mov
aas
mov
sarb
add
mov
dec
add
pop
adc
xor
and
lcall
inc
sbb
sub
loopne
lret
add
loopne
pop
add
inc
mov
push
lock
mov
and
lea
push
outsl
adc
leave
jb
mov
and
cs
push
pop
sbb
aam
xor
mov
xchg
imul
es
adc
lods
popa
das
and
jo
fsubs
cmc
cmp
cmp
push
mov
xchg
dec
add
mov
xor
jmp
adc
cmp
push
xor
add
xor
xorl
les
sar
add
out
xor
xor
inc
lret
sbb
xor
dec
add
aam
xchg
jp
out
fs
sbb
inc
adc
insl
fwait
std
push
lret
adc
loopne
push
sbb
mov
and
stos
filds
cmp
fcoml
clc
popf
mov
adc
pop
inc
call
fstl
cmp
dec
insb
xchg
inc
mov
loopne
mov
or
or
jnp
push
mov
adc
mov
inc
fs
fs
mov
add
in
aaa
xchg
pop
rolb
iret
lea
test
mov
ret
inc
call
or
jecxz
inc
movsl
pusha
adc
scas
ds
xchg
and
rol
push
inc
push
aad
pop
add
sub
cmc
sub
push
add
mov
or
inc
je
jne
pop
adc
add
cld
xchg
dec
adc
inc
push
jb
fisubrs
dec
mov
roll
cmp
mov
andl
rcl
test
loop
sub
jns
cmpsb
int3
je
js
add
push
nop
and
fmuls
adc
out
add
mov
pop
outsb
rolb
fcompl
and
add
fs
jmp
add
std
sbb
pop
adc
call
push
decl
jmp
add
sahf
push
jne
rcrb
int3
cmp
xor
cli
sbbl
inc
sbb
or
out
pop
int
add
cs
sub
jb
les
add
xor
lret
mov
outsl
outsb
lds
int3
jb
push
dec
mov
mov
jno
jns
sbb
add
dec
and
sbbl
and
fisubrl
add
or
pop
cltd
cmp
dec
sbb
stc
and
aam
ja
jl
ret
sbb
xor
sbb
es
test
pusha
sbb
mov
push
imul
inc
lahf
cmp
or
sbb
dec
jno
add
push
add
pop
mov
adc
pop
inc
loop
repnz
mull
xchg
movsb
jnp
cwtl
sub
pusha
clc
or
sti
in
pusha
orb
lds
cmp
push
jo
mov
add
ret
pop
pop
mov
or
or
pop
loopne
add
cld
dec
jno
insb
movsl
push
faddl
or
imull
popa
or
push
js
pop
pusha
lret
pushf
rolb
scas
das
insl
nop
dec
shrb
push
fdivs
jg
mov
rclb
xchg
cmp
inc
shr
mov
or
arpl
sub
cmp
cmp
leave
add
cld
adcb
xchg
clc
daa
inc
or
inc
adc
jae
inc
xor
mov
pop
rorb
xlat
add
ficoms
les
cld
pop
les
bound
or
inc
in
xor
dec
inc
andb
and
add
dec
or
fcompl
dec
inc
cmp
fbld
dec
aas
mov
pop
mov
cmp
inc
sub
add
or
dec
or
rcrb
cmp
mov
cmp
cld
mov
add
aas
add
mov
pop
push
sub
add
jg
push
lock
and
pop
push
addl
add
leave
das
loopne
outsl
mov
xlat
fabs
pop
push
xor
rsm
into
pop
add
push
popf
cmp
mov
add
add
mov
ja
lock
dec
push
mov
inc
rolb
pop
daa
mov
or
cld
sbb
push
inc
pmovmskb
adc
mov
add
aam
or
mov
cmp
or
test
pop
les
popf
frstor
out
mov
movsbl
ret
scas
insl
inc
je
mov
cmp
clc
lock
out
dec
stos
subb
jne
xchg
cmp
or
and
dec
test
add
jmp
pop
rol
xor
lods
and
adcb
adc
adcl
xor
add
popf
jmp
or
inc
mov
xchg
sbb
aas
es
jb
xor
mov
and
cltd
iret
test
mov
mov
in
adc
push
loop
xor
fsubrl
add
filds
dec
pop
enter
mov
cs
enter
outsb
push
add
adc
push
sahf
sbb
push
xor
add
cli
add
inc
bound
jecxz
dec
add
sub
repnz
or
sbb
divb
sar
add
int
les
lods
cmc
out
add
sub
mov
mov
or
dec
cmp
loopne
in
xlat
cmpsb
push
movsb
lods
and
jne
push
or
dec
mov
xor
fsubl
inc
pop
out
mov
xchg
ffreep
mov
add
add
nop
push
in
pop
inc
inc
add
jns
adc
sub
and
cmp
filds
adcl
loop
ss
sbb
mov
xorl
sbb
test
xor
mov
ja
pavgw
insb
movsl
sbb
aam
or
cld
test
and
fisttps
and
inc
mov
pop
insb
adc
jecxz
adc
cmp
data16
cmp
inc
stos
and
rolb
ret
xchg
xor
sbb
movsl
sbb
add
cmp
or
push
idiv
pop
gs
push
cmpsl
outsb
shl
pop
leave
test
sub
push
ret
or
sub
enter
movsb
lods
int3
or
inc
pop
or
adc
jmp
push
pop
cwtl
lea
cmp
xor
push
dec
cmpb
push
cmp
stc
ficompl
idivb
inc
cmp
jp
push
mov
and
lods
adcb
xchg
cwtl
aam
in
mov
icebp
loopne
add
add
outsl
mov
in
pop
pushf
jmp
imul
mov
test
into
mov
pop
icebp
scas
sbb
ja
mov
fwait
lcall
imull
ljmp
cmp
imul
add
dec
pop
xchg
xorb
add
ljmp
pop
jp
rolb
push
js
fsts
data16
and
xchg
mov
test
cmpsb
pop
add
lods
sub
test
push
fcomi
mov
cltd
or
jl
add
add
xor
jmp
xor
rclb
out
enter
lahf
aaa
add
dec
inc
dec
push
add
push
push
aad
cld
dec
mov
inc
add
push
or
ret
xchg
push
mov
adc
push
add
xor
push
lock
inc
in
jae
aam
xor
rolb
inc
adc
clc
mov
and
add
jle
in
out
push
addr16
movsl
stos
adc
inc
dec
je
imul
inc
sahf
dec
fistpll
mov
nop
cmp
xchg
add
call
int3
nop
int
lods
movsb
mov
cwtl
rcll
das
mov
pop
add
push
gs
lcall
lds
add
pop
ds
and
jne
xchg
cmpb
fbld
mov
dec
nop
cmpl
cmp
pop
test
sbb
stc
rcr
cmp
jp
add
or
jp
ficompl
rorb
repnz
inc
mov
sahf
pusha
add
xchg
stos
dec
push
pop
aam
jb
call
mov
add
ja
mov
xchg
cwtl
ljmp
into
push
cmp
call
inc
xor
aas
pop
cmp
test
cmp
add
gs
adc
cmp
stos
ja
les
hlt
repnz
xor
movsl
sub
pusha
fmull
dec
xchg
mov
jl
aam
enter
mov
fmuls
gs
and
imul
pop
negl
cmp
pop
shrb
fdivs
sarl
cmova
cmp
dec
push
mov
ds
daa
insl
in
divb
or
dec
arpl
sarb
rcll
imul
subl
or
daa
mov
movsb
flds
push
add
add
ss
sarb
adc
xor
das
inc
aam
je
sbb
or
or
je
and
mov
mov
rcrl
movsl
hlt
fmull
jecxz
sub
movl
das
cmp
cli
mov
call
mov
imul
and
popf
cwtl
sbb
mov
test
and
movsl
xor
push
mov
or
subl
imul
push
add
ret
call
in
jnp
int
in
pusha
hlt
aas
push
out
fbstp
add
inc
inc
lds
mov
addr16
fs
rorb
loope
sub
add
and
mov
enter
xor
pop
dec
call
mulb
or
pop
cmp
pop
xor
shrl
sbb
pushl
clc
cli
dec
ss
add
mov
or
divb
jge
add
stos
fwait
add
sbb
and
or
mov
inc
xor
addr16
fisttpll
insb
lret
add
push
rol
ljmp
xlat
lods
or
clc
add
inc
cmp
das
mov
push
dec
add
cmc
mov
outsl
mov
sldt
das
mov
in
dec
pop
pushf
sub
sbb
loopne
jle
jle
cmp
mov
rclb
imul
and
test
dec
push
cmpsl
cld
daa
sti
pop
mov
jne
cmp
sysret
dec
jle
xchg
clc
push
jecxz
mov
or
push
push
cltd
mov
push
clc
add
lea
lods
or
and
into
and
shl
cli
scas
outsl
sbb
mov
pop
jne
mov
int3
dec
and
add
fnsave
das
andps
and
and
mov
les
jmp
leave
shrb
sub
jmp
test
sbb
add
dec
cmpsb
dec
loopne
pop
js
andb
jbe
in
push
adc
scas
call
shl
out
pop
outsb
or
jl
cs
inc
inc
add
dec
or
adc
lods
xor
xchg
ljmp
pushf
icebp
inc
sbb
add
mov
or
das
fimuls
mov
repnz
xor
loop
xor
or
nop
xchg
dec
adc
jg
subb
outsb
adc
out
jecxz
mov
callw
mov
cli
gs
and
pop
jp
sbb
nop
add
mov
mov
push
and
loope
aad
hlt
sahf
inc
mov
int3
mov
jge
ss
mov
add
mov
mov
push
test
fsubrs
jle
xor
in
cwtl
lods
inc
pop
mov
push
fwait
adcb
xchg
mov
and
sub
sbb
or
in
nop
or
pop
cld
xor
jb
jbe
sahf
insl
adc
insb
adc
fwait
out
push
jecxz
xchg
jmp
mov
roll
mov
je
imul
and
adc
push
test
pop
mov
flds
or
rolb
pop
inc
sbb
in
jb
fdivs
in
mov
mov
sbb
xchg
jno
add
int3
cmpsl
les
add
mov
loopne
or
xlat
stos
pop
xchg
gs
fisttpl
add
xchg
mov
add
dec
lahf
pop
sub
push
subb
fidivrs
add
cwtl
add
insl
sub
sahf
add
xchg
jo
inc
or
popf
shlb
cmpsb
pop
call
cmp
popa
ljmp
push
cwtl
xchg
jmp
stc
pop
sahf
mov
or
push
add
pop
jo
sbb
and
dec
lret
into
inc
outsb
das
dec
mov
adcb
fidivs
jbe
inc
and
call
push
js
adc
or
cmpsb
test
add
xor
gs
mov
jns
repz
adcb
loopne
sahf
jnp
or
lret
xor
daa
add
jne
mov
add
je
add
shlb
jne
enter
shl
mov
je
mov
fiadds
insb
test
divl
shl
add
test
or
add
jne
mov
clc
cwtl
or
jbe
shlb
out
ret
sbb
xchg
cmp
les
push
lret
lret
pop
mov
jmp
xchg
mov
or
push
je
jbe
ret
add
insl
and
xor
dec
lock
dec
outsb
faddl
icebp
scas
movsl
jge
stos
inc
push
stos
xlat
cmp
aaa
call
shlb
nop
gs
arpl
add
nop
test
mov
iret
push
dec
xchg
insb
loopne
mov
je
inc
dec
add
in
xor
hlt
mov
addb
cmp
xchg
andl
cmp
xchg
stos
mov
sub
mov
rcr
add
repnz
cwtl
pop
cmpsb
outsl
lahf
ficompl
cmp
aam
rorl
out
mov
test
mov
xchg
rcl
cmp
mov
cmp
and
clc
inc
mov
jl
stc
nop
jl
ds
jns
inc
xchg
push
lods
push
test
and
add
dec
dec
movsb
cmp
fsubs
lret
sub
or
mov
push
je
int
insl
mov
hlt
pavgw
jmp
repnz
call
out
and
rol
les
stos
and
loopne
push
add
je
mov
jo
push
push
add
arpl
sbb
adc
push
addb
pop
jbe
cmpsb
add
imul
add
xchg
xchg
xchg
add
add
and
dec
push
adc
inc
fxch
pop
cmp
data16
ficoms
mov
aaa
add
or
pusha
dec
jo
les
das
cmpsl
popf
idiv
mov
lea
add
mov
dec
fwait
aam
mov
fdivs
test
add
pusha
out
dec
adc
add
movsb
insb
sbbb
sbb
nop
hlt
pop
dec
push
in
clc
and
or
add
rcr
dec
inc
les
and
pushf
data16
or
jne
lar
subl
xor
mov
mov
insb
subb
into
adc
aad
das
mov
cwtl
mov
adc
mov
lods
xor
pop
adcb
lret
sbb
or
and
lods
adc
int3
jl
inc
add
aas
lahf
jo
mov
add
insl
stos
sub
add
or
pop
jecxz
jmp
cmpsl
rcll
jmp
xchg
pop
pop
sbb
push
xchg
mov
and
mov
push
add
nop
sub
mov
and
add
fistps
inc
jb
bswap
push
add
es
test
test
push
cltd
insb
rcll
test
push
jb
pop
pop
andb
pushf
xchg
out
inc
popf
xor
xchg
push
push
fistpll
inc
push
add
push
sbb
xchg
sbb
sbbl
add
xchg
sub
arpl
mov
dec
inc
or
cmp
jmp
andb
pop
loopne
mov
add
cmpsb
adc
xchg
cld
test
outsb
inc
in
addb
adc
lods
enter
out
xlat
add
push
hlt
shll
lock
pusha
mov
fwait
add
mov
sbb
mov
pop
pop
mov
les
ds
aaa
add
jl
mov
shr
mov
testb
cmp
inc
pop
xchg
add
xchg
mov
sbb
movsl
mov
or
imul
test
xchg
les
add
jbe
loopne
cmp
and
gs
subl
in
mov
adc
inc
loopne
cmp
cmpsl
hlt
add
aaa
out
fldenv
mov
cld
jb
or
cld
inc
orl
pop
pop
cwtl
add
jno
data16
enter
fstpl
jb
mov
xor
mov
imul
or
movlps
jns
jmp
fs
add
cs
mov
adc
pop
push
iret
rorb
test
add
movsb
mov
ljmp
xchg
inc
pop
cmpsl
enter
mov
xor
mov
fldt
rcll
subb
adc
cmp
sub
sbb
xchg
pop
sub
cld
pusha
imul
clc
sub
pop
in
outsb
adc
add
inc
mov
add
xorl
xchg
shrl
sbb
mov
popa
pop
xchg
pop
mov
dec
out
xor
add
xor
pop
xlat
adc
outsb
out
std
insb
adc
or
add
pushf
stos
lret
lret
or
adc
daa
in
jmp
add
imul
inc
sbbl
faddp
call
jns
ljmp
sub
jg
inc
je
imul
call
mov
test
and
cmp
loopne
lret
sbb
das
das
js
data16
mov
lret
ja
mov
xor
sbb
adc
mov
cmp
add
js
jne
mov
pop
cli
jecxz
add
scas
lock
in
add
jnp
add
pop
lcall
gs
add
sub
ja
xor
popf
xor
mov
pop
jmp
arpl
sbb
lcall
js
and
xchg
lock
jnp
clc
addr16
sbb
int3
or
and
jae
mov
loop
pop
aas
ja
in
jle
jb
push
add
xchg
insl
mov
push
dec
cmp
mov
loopne
out
lods
sub
lret
in
mov
fdivs
dec
in
test
insl
lcall
lock
jae
jl
and
out
dec
insl
mov
jo
hlt
pop
inc
dec
add
mov
testb
and
add
sub
aam
call
dec
xchg
dec
mov
dec
stc
cmp
inc
mov
mov
adc
sti
mov
jne
inc
adc
sub
gs
jae
shrb
das
idivb
inc
cmpsb
cmpb
les
inc
sbb
mov
sbb
test
mov
pop
fs
pminub
call
sub
xor
popa
pop
cmp
lea
call
push
xor
mov
stos
jnp
or
fistpl
add
cli
xchg
mov
in
dec
pop
lret
sub
xorb
sbb
add
imul
and
iret
mov
cmp
test
mov
cltd
mov
out
mov
les
and
rcrb
or
movsb
or
les
mov
jae
jno
lock
push
jmp
adc
sahf
icebp
cld
jns
sbb
je
in
lea
mov
add
addb
jae
les
popf
out
cmpsl
adc
pop
stos
mov
mov
call
mov
sub
cwtl
pop
outsb
cmp
inc
loope
mov
pop
sub
enter
inc
and
shlb
push
cmpsb
or
fisttps
cmp
sbb
lret
sbbl
scas
add
fists
mov
jo
in
jmp
clc
inc
mov
icebp
pop
dec
mov
sub
faddl
jnp
stc
pusha
add
inc
jp
hlt
ret
call
push
push
xchg
nop
cwtl
pop
cmp
xor
test
adc
or
inc
mov
jnp
add
stos
mov
shl
xor
adc
insb
push
or
pop
fcoml
pop
pop
repnz
in
jo
or
jno
add
push
test
addl
lret
sub
jo
and
push
xchg
add
fiadds
pop
push
cld
insl
xor
outsb
outsb
fmuls
xor
and
fsubrl
inc
xor
pop
and
inc
inc
cmp
int3
sub
fsubrl
xchg
mov
stos
or
mov
or
mov
sub
imul
cwtl
hlt
lcall
lock
push
and
int3
mov
in
sub
sbb
cmpsl
add
jnp
jae
out
into
inc
cmp
daa
addl
add
dec
mov
cld
sbb
xchg
xchg
cs
add
test
std
adc
dec
cmp
and
mov
jo
hlt
sbb
adc
dec
adc
fs
negb
cwtl
daa
add
push
add
and
dec
push
cmp
pop
lcall
adc
repnz
add
sub
mov
add
jae
in
push
cmp
orb
and
mov
ficoms
in
sarl
dec
add
cmp
xor
idivl
cwtl
nop
daa
mov
pop
inc
jecxz
pusha
pop
jmp
nopl
sbb
das
sub
push
pusha
or
jo
sbb
dec
cld
mulb
add
mov
pop
inc
in
inc
dec
test
popf
inc
and
orb
sub
sbbb
mov
mov
mov
popa
loopne
cs
add
fnstcw
call
fmull
dec
icebp
mov
add
cmp
popl
pop
pop
adc
lods
out
add
and
call
dec
jle
bound
jp
add
loop
cmc
adc
jno
repz
sub
jo
cmp
mov
ss
or
enter
fmull
dec
pusha
lock
adc
int
shr
mov
push
orb
push
jle
inc
add
out
push
cld
or
je
push
add
mov
pop
and
cltd
out
aas
das
cmp
mov
push
dec
add
dec
mov
pop
in
add
aas
push
push
je
loope,pn
adc
sub
mov
daa
enter
sub
jg
or
rorl
inc
aas
int
pusha
movsb
mov
cmpsb
sbb
inc
add
das
pusha
and
mov
cli
cmpb
aas
cmp
jmp
dec
mov
adc
stos
maskmovq
testl
mov
lret
mov
shll
ss
out
inc
or
repnz
mov
sti
add
cwtl
xchg
enter
outsb
add
jl
jmp
test
inc
add
jecxz
adc
or
cs
pop
mov
dec
jae
inc
sbb
addb
data16
sbb
adc
push
pop
pop
jp
add
aam
je
daa
inc
cmp
and
adc
pop
xor
cmpsl
test
sub
stc
jge
xchg
popf
dec
and
fs
inc
add
mov
aaa
xchg
insb
jae
outsb
call
mov
loop
jae
jo
xchg
add
and
and
lock
aas
mov
push
sbb
mov
movsb
je
or
xor
inc
ret
rep
dec
test
iret
imul
push
cmp
xlat
mov
or
dec
nop
xor
adc
inc
sbb
cmp
push
pop
loopne
test
sbb
aad
push
dec
and
cmp
notl
aas
fwait
inc
repnz
add
fsubp
add
mov
xorl
daa
aam
test
or
sub
aam
gs
sub
adcl
clc
lods
in
or
sub
xchg
xchg
je
leave
pushf
cld
sbb
jb
xchg
ficoml
inc
add
stos
pmaxsw
enter
xor
xchg
or
mov
and
lcallw
xchg
pop
sti
icebp
mov
adc
les
sub
bound
jl
jle
inc
jae
dec
add
mov
add
movsb
nop
leave
xor
cld
dec
hlt
push
arpl
cmp
xchg
ret
out
repz
aas
lock
xor
pop
pop
cld
lods
movsl
in
mov
sbb
out
inc
add
insl
sub
pop
lods
nop
test
cmp
fwait
add
popf
mov
inc
sbb
bound
mov
sarl
test
cmc
push
xor
sub
adc
push
aaa
mov
mov
incb
xor
xchg
adc
popf
pop
fdivr
loopne
dec
sbb
dec
cmpb
testl
xor
clc
inc
jecxz
incl
add
ss
insl
jne
repnz
inc
pop
orb
adc
push
xlat
adc
add
mov
rorl
orl
add
out
jb
cltd
sbb
mov
add
push
test
sub
icebp
push
push
add
sbb
adc
dec
adc
js
ja
add
jno
xor
sub
mov
sbb
add
or
or
pop
inc
xor
shr
cmc
pushf
push
add
dec
mov
pop
jle
or
fiadds
cmp
push
cwtl
sbb
add
pop
xor
add
sbb
mov
or
sahf
mov
cli
and
loope
testb
fldl
xchg
dec
out
stc
and
shl
jbe
popf
std
fisubs
aaa
cld
fists
mov
adc
pushl
std
stos
insb
mov
xchg
and
lea
adc
mov
scas
xor
test
pop
aad
sti
or
movl
clc
rcrb
push
push
pusha
pshufw
xor
std
lods
xchg
leave
mov
mov
rcrl
nop
sbb
test
jp
and
pop
push
ret
add
mov
dec
sbb
xchg
lahf
into
add
icebp
sarl
int3
cmc
push
pop
mov
test
or
adc
arpl
leave
pop
sub
jle
jns
xchg
movb
movsl
sbb
popf
cmc
and
push
add
popa
add
pop
fstpt
imul
push
or
push
and
fcompl
data16
out
pop
stos
lods
add
cmp
jp
testl
pushl
add
int
cmp
frstor
daa
push
jbe
testb
test
stos
inc
das
xor
dec
mov
xor
and
pop
push
pop
lret
mov
add
jmp
or
ljmp
add
xchg
cmp
mov
mov
push
inc
popf
jne
mov
xchg
add
sub
fisubrs
push
ja
push
cld
mov
popa
add
cli
inc
mov
dec
push
cmovns
mov
jne
adcl
pop
or
in
leave
jg
call
insb
test
and
popf
loope
pop
xchg
scas
hlt
pop
xor
fcomps
push
cmc
or
ret
ds
or
fsubp
ja
or
add
dec
mov
or
add
adc
popa
sbb
mov
mov
xor
lods
or
test
xchg
sbb
cmc
mov
or
sbbb
push
je
stos
idivb
mov
lret
push
mov
xorl
mov
jmp
xorb
pop
add
bound
fsubrl
and
mov
jno
stc
pop
int3
dec
rorl
xchg
in
arpl
stc
ljmp
fisubs
xor
inc
les
out
in
xchg
decb
pop
jae
repnz
add
ret
mov
mov
addl
insl
push
pop
popa
pop
mov
addr16
pop
int
pusha
mov
mov
jne
add
cmc
pop
add
ljmp
add
int3
jle
mov
and
add
pusha
push
jmp
pop
xor
out
andl
push
and
push
popf
add
push
outsl
mov
inc
mov
stos
push
or
ja
pop
fdivs
roll
in
cmp
push
rcrl
jo
inc
add
test
mov
fwait
rcr
fwait
mov
add
divb
insl
sub
out
dec
scas
imul
lods
cwtl
loop
aaa
and
imul
lcall
and
pop
mov
pusha
mov
or
jp
clc
sbb
dec
lods
mov
loop
jb
fisttpll
push
push
int
arpl
lcall
xor
les
mov
lahf
xchg
push
je
add
mov
mov
in
jmp
jg
and
or
push
call
and
mov
fnstcw
sbbb
js
sub
testb
cltd
fisubs
popa
mov
push
sbb
jmp
enter
jno
mov
leave
test
clc
adc
stos
and
mov
jge
fcompl
add
sub
fisttpl
adc
pop
mov
sar
or
ljmp
and
pop
xlat
add
mov
fwait
pop
ret
aam
xchg
jb
mov
sub
mov
xor
xchg
jmp
sub
stc
xor
jo
int
sub
sub
inc
sub
mov
movsb
pusha
or
cltd
fdivrl
xchg
xor
dec
dec
mov
pop
or
add
out
lahf
clc
add
insl
adc
movswl
mov
shr
dec
pop
std
bound
mov
enter
mov
std
sub
sub
hlt
rolb
jle
jle
mov
or
jmp
sub
rclb
test
push
jp
push
sti
push
lret
cmp
sbb
fidivrl
add
add
and
call
xchg
out
add
lds
cmpsl
pop
and
jecxz
cmp
mov
sbb
test
sbb
call
daa
addb
add
sahf
or
xor
and
push
jmp
adcb
mov
nop
outsl
mov
add
jb
ficomps
mov
ljmp
fwait
push
stos
mov
mov
pop
mov
imul
or
adc
mov
inc
xchg
sub
pop
push
shrb
cmpsb
cmp
xor
popf
push
movb
fldenv
ret
rcr
pushf
dec
hlt
stos
imul
lods
movsl
sub
adc
or
pop
dec
pop
xchg
fidivs
jmp
xchg
cmpsb
add
mov
sbb
pop
jl
jle
lock
or
pop
outsb
inc
adc
cld
out
fidivrl
hlt
faddl
push
mov
push
stc
dec
xor
adc
push
push
fsubrl
test
xchg
xor
mov
mov
mov
dec
mov
xor
loop
dec
push
xchg
and
sti
jmp
jle
das
or
jne
and
xchg
cmc
sbb
or
fdivp
xor
jle
sbb
je
cld
jecxz
sub
sbb
hlt
pop
adc
cmp
and
daa
loope
push
xchg
movsb
pusha
je
sbb
mov
mov
popf
jbe
jle
jne
or
fwait
or
add
adc
and
shr
pop
orb
pop
pop
decb
imul
popf
movsl
xchg
outsb
mov
pusha
mov
pushl
cmp
cmpb
pop
xor
jo
xchg
movsl
add
or
sbb
add
in
leave
sub
ljmp
xor
mov
pop
cmpsb
mov
stos
fldt
test
stos
loopne
add
js
add
and
inc
pushf
adc
add
or
sbb
ficoml
les
mov
add
jecxz
in
and
sub
sbb
push
cmc
repnz
aad
xchg
jle
pop
fwait
xchg
mov
rcr
xor
inc
jge
loop
aad
aas
sub
imul
pusha
sarl
mov
xor
dec
sbb
add
mov
aam
fsub
mov
push
enter
add
pop
cmp
incl
leave
and
pushf
and
add
movsl
enter
mov
cld
sub
pop
add
lcall
outsb
pusha
and
pop
jmp
mov
lea
xor
xor
sbb
scas
mov
mov
jbe
pop
fisttps
jno
lock
push
pusha
stos
mov
mov
mov
inc
dec
or
ja
bound
xor
push
xorb
and
mov
leave
pop
inc
lcall
orl
mov
add
xor
sbb
fcmovnbe
pop
add
into
add
or
xorl
xor
stos
decl
cwtl
fsts
dec
add
nop
daa
test
xor
pop
mov
ljmp
inc
add
out
cld
push
ja
lods
sub
ret
add
cmc
inc
or
jge
inc
dec
in
pusha
aam
sub
fiaddl
fstps
adc
xchg
pop
cmp
add
sub
ds
movsl
xor
dec
jbe
pop
add
or
jae
add
adc
mov
js
scas
loop
popa
pop
cltd
push
dec
movsl
sub
roll
inc
sbb
mov
sub
gs
adc
ja
cwtl
or
add
mov
js
sub
in
sub
mov
push
outsl
xchg
cmp
mulb
or
bound
out
sub
je
push
mov
jmp
mov
cli
mov
xor
xchg
inc
and
adc
mov
cltd
pop
test
jns
sub
mov
dec
int
sub
pop
sbb
xchg
sub
popf
insl
and
jle
shl
test
mov
jecxz
adc
pop
jbe
pop
daa
cmc
dec
ret
jle
bound
pop
test
mov
pop
inc
in
dec
cmp
arpl
and
js
popf
mov
push
pop
dec
mov
push
cmp
sbb
xchg
mov
bound
lock
cld
cwtl
subl
popa
add
jge
jmp
mov
ds
jbe
jmp
js
inc
xlat
loopne
xchg
out
sub
mov
cli
mov
les
mov
mov
cmp
pop
mov
pop
in
xlat
mov
repz
push
mov
add
and
std
mov
push
mov
nop
jo
add
jb
inc
or
mov
popf
sbb
pop
mov
pop
pop
lea
iret
dec
jnp
xor
call
cli
xorb
test
sarl
xchg
std
add
je
inc
sbb
mov
push
sbbl
fidivrl
mov
into
stos
ds
loope
aas
cmp
mov
push
push
aaa
arpl
jmp
adc
clc
movsb
push
repnz
imul
lods
xchg
jne
add
popa
fildl
jb
or
test
or
add
mov
pop
sub
test
insl
ret
dec
mov
aas
and
daa
dec
aad
or
adc
push
lcall
lock
fs
or
cmp
add
xchg
sub
repnz
rcl
pop
adc
leave
jo
cmc
les
popa
pop
dec
xchg
or
loop
dec
adc
pop
xor
mov
pop
mov
xor
xchg
cli
sbb
xchg
stc
cltd
pop
dec
fcmovnbe
push
lods
add
in
push
xor
add
data16
test
cmp
fwait
out
shr
sub
adc
inc
insl
addl
call
out
in
test
orb
xor
popa
mov
les
addr16
inc
scas
and
cmp
and
add
in
sub
out
or
mov
test
sbb
sub
sbb
cmp
lods
sub
or
and
fmulp
xor
jmp
add
out
popa
add
cmpl
es
sbb
aaa
add
lcall
xchg
dec
push
sbb
test
insb
add
hlt
in
dec
push
lods
xor
xchg
pop
shr
xlat
movsl
cmp
push
jns
fstp
pop
push
sub
jns
mov
add
cmpsb
mov
scas
pop
jb
dec
call
xchg
sub
cmp
mov
or
and
sub
mov
mov
add
leave
idivb
xor
jno
std
push
ss
and
jle
in
add
push
xchg
aaa
inc
es
add
xor
ss
shlb
popa
xchg
mov
aaa
adc
xlat
cld
and
fldl
mov
or
in
fistpll
and
jecxz
push
lock
add
jno
mov
mov
xchg
pop
sub
cltd
mov
jl
mov
xchg
cmpb
mov
mov
loopne
lods
hlt
mov
add
ljmp
cmpb
cmpb
inc
inc
sti
add
mov
push
push
lock
mov
jmp
sub
xor
aam
and
adc
stos
sub
test
popa
xchg
adc
orl
inc
inc
add
mov
mov
jge
xchg
add
popa
mov
push
adc
sub
lret
xor
jno
xchg
iret
mov
nop
mov
sbb
and
dec
push
lcall
inc
push
add
aas
stc
ja
push
and
sub
mov
cld
add
push
adc
add
int3
add
xor
shr
in
gs
mov
xchg
xchg
lds
hlt
xor
xchg
pop
jmp
dec
mov
in
add
pop
add
push
pop
mov
inc
add
jmp
ds
inc
stos
or
insl
pusha
add
mov
fwait
jmp
mov
and
repnz
enter
pusha
adc
out
add
es
loop
push
testl
and
jnp
fidivrs
incb
je
cmp
clc
and
xchg
test
mov
and
mov
bnd
or
ja
cmpsl
push
sbb
sti
imul
pop
not
xor
and
nop
movsl
rorl
mull
cmpsb
in
inc
add
jae
inc
jne
inc
fdivrl
std
adc
push
sti
xorl
inc
xchg
bound
xchg
cmp
push
pop
enter
xor
setle
repnz
pop
push
mov
ljmp
dec
sbb
sbb
lods
or
xlat
pop
or
scas
add
fucom
jns
loope
and
push
and
neg
pop
imul
mov
add
int
mov
adc
sbbl
je
add
cld
adc
mov
leave
and
mov
inc
add
or
imul
cwtl
mov
mov
add
jne
jecxz
pop
adc
push
mov
call
repz
loop
jg
adc
iret
bound
insb
mov
test
ja
dec
add
dec
fwait
loope
pop
mov
je
jge
push
push
pop
lcall
mov
loope
pushf
mov
cwtl
adc
push
inc
or
push
jnp
sbb
fisttpll
add
repz
pop
sbb
xor
mov
mov
xchg
hlt
sar
js
add
rcrb
xchg
cli
inc
xor
mov
or
cmp
sbb
add
dec
jge
adc
mov
mov
xchg
add
bound
cmp
cmpb
cmpsl
sbb
add
push
and
out
xor
lods
add
rorb
cmpsl
repz
in
add
pop
push
cmc
mov
cli
inc
xchg
add
sub
cli
sub
das
mov
push
aam
jmp
sub
mov
or
roll
xor
pop
xor
test
or
and
data16
add
nop
sub
mov
add
or
adc
cld
dec
mov
lret
sub
aas
aam
mov
ret
scas
lds
mov
add
jmp
in
cli
xchg
stos
mov
cli
cmc
or
les
fdivrl
jecxz
mov
addl
rorl
aad
fwait
or
inc
rcrl
inc
mov
stos
xchg
jmp
icebp
add
cld
dec
inc
pop
adc
jge
push
into
inc
outsl
rcrb
stos
mov
add
data16
push
jl
mov
sub
mov
push
dec
jne
scas
stos
andb
lds
sbb
xchg
add
jb
sub
push
cmc
dec
add
add
add
orb
test
ja
jp
pop
sbb
mov
or
pop
dec
and
insb
pusha
ficoml
lret
xchg
ds
dec
mov
jnp
mov
cmp
sub
mov
outsl
rcrl
or
or
mov
add
adc
mov
jnp
and
cmpb
adc
mov
or
icebp
jge
outsb
cmp
jg
mov
lret
dec
jae
add
cwtl
mov
jp
int
add
sub
xor
fs
inc
sarl
mull
dec
pop
mov
in
jno
inc
pop
jmp
add
movsl
xchg
int3
stc
add
andl
inc
bound
mov
sub
scas
scas
mov
pusha
cmpsb
outsb
and
dec
push
and
inc
inc
lret
mov
pop
push
and
add
jg
loop
andb
xchg
daa
cmp
xor
andb
subl
inc
add
fldl
data16
sub
outsl
push
add
aad
nop
sbb
add
pop
adc
or
imul
iret
daa
mov
stos
nop
mov
lock
in
mov
and
add
outsb
jp
cli
jo
mov
mov
fs
stc
add
inc
sbb
jecxz
sbbb
cld
lret
bound
mov
sbb
pop
cmp
push
or
data16
mov
dec
mov
add
pop
popf
movsb
enter
pop
aam
inc
and
fs
cld
add
jo
push
js
outsl
cmp
mov
mov
lretw
adc
pop
icebp
pop
sbb
mov
jl
cld
ret
pop
push
add
test
mov
jecxz
mov
test
xorb
mov
adc
mov
imul
push
fdivs
xchg
mov
adc
in
or
jnp
push
mov
add
out
cmpb
fs
in
jne
or
cs
std
or
inc
sub
xchg
inc
and
fsts
xchg
repz
mov
or
rolb
call
add
stos
pop
xchg
sbb
rclb
mov
lods
push
lds
neg
inc
call
repnz
push
and
push
jb
cmp
in
insb
dec
lods
push
pusha
ja
push
in
jne
pop
dec
sbb
sbb
dec
adc
pop
stc
rolb
push
imul
lahf
push
lcall
add
push
mov
aad
pop
js
jg
xchg
aas
sbb
adc
jecxz
ja
or
or
fistps
push
add
xchg
out
mov
xchg
add
cltd
add
xchg
div
adc
je
add
mov
fldz
mov
xor
aas
jb
addb
lods
pop
movsb
insb
or
inc
leave
jl
mov
xor
push
add
adc
add
jmp
pop
jne
add
in
arpl
movb
jg
nop
lods
sub
dec
in
aaa
jle
gs
mov
xchg
stos
dec
aas
mov
cmp
ja
ficoml
pop
cmp
shr
mov
mov
call
rclb
cs
mov
cwtl
sub
cmc
pop
add
rcr
cmovns
sahf
inc
sbb
xchg
or
mov
mov
xchg
stos
dec
push
pop
or
test
or
sbb
loop
and
out
ljmp
mov
aaa
js
mov
flds
and
jbe
sbb
test
pop
stos
mov
inc
or
xor
push
add
testl
cwtl
cmp
push
test
lock
push
jne
add
jbe
pop
xor
repz
aad
xchg
ja
push
add
rorb
adc
rcrl
add
jmp
mov
es
sbb
cli
outsb
jecxz
and
sbb
inc
sub
add
pushf
loop
mov
mov
in
cmp
pusha
xchg
mov
into
mov
jg
jmp
gs
sub
add
push
push
pop
xor
inc
in
and
not
push
mov
lret
ret
mov
sahf
in
mov
jmp
inc
cmp
dec
push
inc
xchg
lcall
push
sbb
es
insl
add
mov
leave
add
xchg
in
sub
dec
mov
inc
icebp
add
wbinvd
cmp
addb
jle
shrl
xor
adc
rolb
sub
jg
inc
outsb
pop
shll
jg
add
cltd
push
adc
or
xor
dec
xchg
ret
out
pop
lahf
ljmp
pop
push
sbb
gs
fidivl
dec
inc
cmpsl
jl
lcall
sti
scas
mov
pop
or
in
or
popf
sbb
mov
add
je
inc
rolb
push
add
pop
mov
addb
mov
adcl
cli
movsl
mull
dec
sbb
adcb
push
lret
enter
addl
xor
and
pop
add
add
xor
ret
pushf
fdivs
cs
dec
xchg
jae
jg
sbb
incb
dec
nop
push
adc
push
rolb
mov
les
sbb
push
mov
stos
jg
fsts
jns
aaa
mov
iret
pop
cs
addl
dec
pop
push
sub
rol
inc
clc
xchg
out
push
shll
test
hlt
jo
sub
push
idivb
loopne
sub
mov
jecxz
dec
fs
cmpsl
dec
dec
lcall
xlat
xchg
dec
inc
mov
aas
rcrb
xor
push
and
push
test
add
insb
sbb
push
adc
dec
push
out
jp
add
add
mov
loop
dec
and
mov
ljmp
lock
movb
and
negl
xor
and
or
dec
and
push
add
pop
jb
scas
jp
or
sub
xor
loope
jg
add
push
add
cmp
mov
pop
nop
xchg
aam
ret
push
mov
dec
mov
nop
aas
outsb
push
add
cmp
popf
call
and
mov
cmpsl
test
cwtl
push
mov
popf
jns
hlt
ja
mov
and
cmp
add
outsl
xor
lea
xchg
popa
mov
sub
add
push
sbb
ljmp
xchg
fsubrs
cwtl
pop
sub
cmp
jecxz
out
push
les
mov
in
mov
jmp
pushf
dec
xorl
inc
adc
imul
clc
and
test
jmp
mov
push
pop
mov
adc
mov
scas
icebp
dec
pop
cli
cli
inc
mov
popf
mov
cmc
adc
jmp
or
add
pop
cmp
add
push
insb
push
mov
sbb
add
test
mov
jl
repz
pcmpeqb
and
fisttpl
subb
pop
push
and
cmp
mov
mov
inc
mov
cmp
hlt
cmp
mov
outsb
inc
sub
jne
mov
scas
int3
clc
mov
or
adc
inc
sub
gs
and
movsl
inc
adc
or
xchg
mov
add
or
adc
pusha
xor
nop
sub
add
mov
mov
fisttpll
outsl
add
or
jle
and
dec
fsubp
mov
rclb
cmp
sbb
shll
cld
ljmp
cmc
adc
cld
notl
adc
rorb
and
or
sahf
inc
dec
mov
cld
lock
pop
pop
in
cld
mov
and
mov
sub
scas
pop
jle
fnstsw
scas
mov
push
es
pop
outsl
stos
add
inc
and
xchg
mov
movsl
loope
sub
mov
pop
push
pusha
cmpsb
clc
pop
add
aas
add
jbe
movsb
inc
and
nop
frstor
cmp
or
int
into
loopne
es
cmp
in
cld
xorb
inc
nop
gs
in
pop
cli
lret
dec
or
mov
addb
fiadds
fcompl
dec
or
sub
in
push
and
xchg
inc
and
add
jbe
dec
icebp
or
sub
in
adc
pop
shll
push
lahf
fsubr
pushf
stos
test
add
cwtl
dec
loope
cmpsb
stc
pusha
cwtl
pop
push
push
mov
xlat
fwait
pushl
pop
dec
jge
or
add
sbb
aas
adcb
subb
ror
es
inc
xchg
test
inc
pop
push
sbb
mov
push
adc
rcll
adc
outsl
and
add
mov
inc
mov
adc
jnp
mov
xchg
add
inc
test
xor
push
cmp
adc
shr
push
and
daa
sbb
lods
in
push
xchg
popf
outsb
test
sbb
shrb
adc
jmp
or
mov
jns
sbb
pop
sti
xchg
cld
stos
cmpsb
dec
icebp
cmp
lea
fidivrs
adc
cli
push
jne
cmp
sahf
jmp
jne
jmp
bnd
sarl
test
shrb
cmpsl
lods
jge
cmp
and
push
inc
xchg
mov
inc
add
jmp
push
or
push
cmpl
fiadds
lock
repz
add
imul
xor
repnz
mov
lds
lods
fildll
js
or
mov
and
lret
cmp
jns
pop
add
inc
mov
pop
fstl
sub
push
xor
lock
add
cmpb
push
jl
lock
je
daa
and
jge
lea
ljmp
and
sahf
xchg
insl
lea
xor
roll
nop
loop
sbb
je
sub
ljmp
test
icebp
push
mov
jb
pop
nop
fs
lock
sub
push
popf
pop
fidivrl
aaa
sbb
rcr
push
popa
push
lret
and
lods
pop
cwtl
adc
add
adc
jnp
jns
popf
cld
movsb
hlt
sub
dec
cmc
stos
add
cmp
test
inc
or
popf
pop
add
jno
or
sbb
xchg
shrb
xchg
push
cs
in
cld
or
xor
addr16
out
mov
push
nop
push
movb
inc
loope
push
push
sbb
add
sub
jae
xor
imul
testl
pop
mov
dec
cmpsb
and
push
xchg
add
clc
jl
or
push
pop
les
inc
mov
lock
and
or
dec
xchg
and
popf
cltd
in
ljmp
mov
mov
add
mov
xor
xor
out
lods
lea
sub
cld
sub
dec
push
pusha
push
rorb
aas
xor
or
sub
xor
jp
or
jge
add
rorl
xor
sti
outsb
add
pushf
popa
fwait
xchg
stos
mov
loope
gs
dec
out
loopne
sbb
sub
sub
stos
inc
push
and
icebp
adc
outsl
das
inc
je
int3
fmull
xor
add
cmpsb
dec
mov
xor
lods
fimuls
andb
add
dec
pop
fidivs
add
add
test
andl
int3
push
fstpt
push
sub
sti
and
ret
ficompl
out
mov
mov
cmp
mov
jno
mov
cmp
pushf
cmp
outsl
aad
arpl
pop
lea
movsl
stos
test
in
mov
outsb
and
rcrl
pop
js
lret
popa
xchg
addr16
sbb
jle
fwait
xchg
cmp
push
cmp
loopne
in
inc
lods
add
xchg
repz
jo
push
add
imul
sub
adc
mov
mulb
das
cmc
popa
mov
mov
xor
clc
roll
xchg
add
mov
mov
pop
icebp
insl
lods
nop
sbb
ret
cld
push
dec
aad
and
mov
jg
xor
pop
push
dec
push
fs
aas
jmp
ss
popf
fs
push
fidivrl
xchg
mov
test
mov
les
scas
popa
clc
cmp
cmpsb
mov
add
cltd
cmp
add
xor
mov
pushl
add
testl
int
fsubs
sahf
popf
fcoml
or
add
jg
mov
leave
xlat
lock
call
mov
das
mov
cmpsl
sbbl
push
ds
xchg
lea
shrb
inc
pop
mov
pusha
push
addb
and
push
aas
les
mov
pusha
mov
lret
loop
dec
fnstenv
add
pxor
inc
add
int3
mov
mov
xchg
fwait
add
subl
push
push
add
mov
lods
jg
pop
mov
sub
popa
add
outsl
in
subb
mov
adc
cmp
in
stos
rclb
jge
jae
aas
lods
dec
test
mov
mov
sub
shl
inc
or
jecxz
std
dec
in
mov
iret
push
outsb
xchg
add
scas
mov
cmpsl
call
inc
movsl
pop
xchg
xchg
add
out
std
add
lea
addr16
shlb
popf
movsl
fdivrp
jns
mov
cmp
cmp
xchg
aad
cmp
and
and
in
dec
scas
outsl
lcall
outsl
and
jo
or
pop
hlt
inc
cmovge
xchg
je
mov
xchg
jne
pusha
mov
pop
sti
dec
adc
lock
dec
mov
adc
xchg
movsl
outsb
inc
jbe
jb
mov
sar
or
aam
cwtl
xorb
mov
jnp
popf
mov
dec
jmp
in
out
pop
mov
dec
mov
out
add
cmc
sbb
mov
jne,pn
out
mov
in
add
dec
insl
mov
sub
push
pop
pop
rcrw
mov
mov
jns,pn
leave
testl
add
sub
xchg
mov
mov
jmp
jbe
fs
pop
das
aad
addr16
in
int3
out
add
push
sub
mov
dec
jl
hlt
add
mov
dec
mov
or
mov
sub
test
test
jp
or
mov
and
jmp
xor
or
and
add
roll
mov
sub
stos
ds
pop
xchg
test
js
les
pop
mov
mov
dec
mov
jno
xor
imul
pushf
fwait
add
dec
xchg
pusha
and
add
add
xlat
add
rcll
mov
lods
out
stc
fmuls
push
pop
insb
adc
mov
daa
mov
icebp
rcrb
out
andl
divl
mov
or
lds
in
loope
jle
jg
mov
testb
cmp
jmp
mov
add
jmp
outsl
loope
or
xor
pop
int
inc
sbb
cmp
or
movsb
lods
push
pop
add
add
fstps
lds
mov
sbb
into
cltd
add
rcrl
adc
dec
inc
push
jl
mov
sub
mov
aad
pop
movsl
sbb
add
lret
mov
cld
pop
sub
imul
or
push
xor
mov
addl
pop
das
in
sbb
imul
cmp
lcall
jmp
sbb
into
inc
aas
jmp
notl
pusha
mov
xor
sub
scas
inc
push
mov
test
xor
movsl
clc
dec
dec
jp
sub
cmc
inc
or
pop
xchg
lcall
incl
call
stc
popl
inc
stos
test
mov
lods
lds
mov
xchg
mov
jle
fiadds
inc
add
arpl
add
add
std
xor
repnz
sub
add
sub
adc
int
mov
pop
mov
add
fisubs
or
xchg
lea
push
sbb
out
mov
pop
dec
test
cmp
leave
mov
fadds
andb
add
jb
in
gs
testb
jle
add
cmp
or
mov
or
xor
jnp
mov
add
mov
pushf
add
popf
repz
inc
add
test
push
mov
add
pop
clc
mov
cli
fidivrs
or
insb
cs
int
inc
ss
adc
aam
hlt
add
mov
aam
and
jno
sbb
pop
mov
push
repz
das
add
sub
adc
stc
cmp
push
mov
jmp
push
inc
in
sbb
jbe
dec
jns
shrl
inc
and
push
imul
test
loopne
jge
jg
dec
mov
mov
test
mov
fistpl
aad
mov
mov
sbb
and
ret
popa
lea
add
push
mov
je
add
inc
pop
popa
xchg
pop
rcr
pop
rorb
xor
push
or
jns
subl
addb
push
test
lret
pop
add
mov
sbb
mov
add
mov
cld
jle
mov
push
mov
jnp
mov
fstl
cwtl
push
mov
xchg
mov
or
les
pop
pop
push
addb
adc
inc
es
lods
stos
cmp
add
mov
cli
lret
out
insb
icebp
dec
push
into
loope
adc
stc
sti
jmp
mov
clc
xor
fnstsw
sub
mov
pusha
sub
loope
pop
je
jo
add
out
roll
xor
and
push
xor
lds
loopne
jmp
xchg
sti
adc
in
inc
loopne
loop
add
pop
mov
insl
pop
mov
jl
out
add
cwtl
pop
dec
jg
mov
push
add
xlat
andl
pop
xchg
xor
lea
sub
adc
imul
rolb
inc
mov
pop
jo
cmpb
jbe
inc
insb
aaa
pop
ss
pop
adc
push
aaa
push
loop
pop
dec
incb
lret
push
and
sub
sub
lcall
clc
lock
mov
xor
push
mov
int3
or
sub
jns
movsl
inc
dec
add
cmp
xchg
sub
push
sub
lods
loopne
jg
add
inc
mov
mov
or
pop
test
push
scas
nop
pop
add
xchg
pop
and
pop
enter
jp
mov
push
shl
movsl
in
fsubl
cwtl
int
fisttpl
or
lock
sub
fiaddl
push
push
jns
xor
or
in
mov
movsl
inc
aam
jge
fldcw
adc
adc
xchg
nop
aas
and
mov
addb
push
daa
dec
in
out
and
push
adc
cld
push
fwait
dec
les
cld
test
sbb
ljmp
out
mov
dec
xchg
or
fsubl
sub
jecxz
adc
jp
jl
cmp
mov
repz
add
out
pop
outsb
add
rolb
inc
inc
add
fisubl
pop
and
pop
lods
mov
mov
test
add
adc
enter
test
jne
addr16
sbb
mov
orb
push
cmpl
mov
call
jle
push
push
mov
mov
sbbb
sub
xchg
mov
pop
and
fwait
aam
mov
add
pop
loop
mov
xchg
cmp
xor
stc
push
test
loop
and
cld
call
test
jge
dec
sbbb
cmp
lds
das
cmp
or
adc
or
mov
ret
sub
repnz
pop
test
popa
mov
hlt
inc
sbb
fisubl
or
push
push
pop
inc
push
leave
pop
andl
das
jp
gs
mov
out
jmp
inc
sbb
mov
ds
mov
and
add
ret
mov
mov
cmp
pushf
adc
adc
sub
pop
sub
loop
sbb
jae
xchg
stos
dec
push
xchg
inc
adc
add
in
add
int
jecxz
rorl
pop
icebp
inc
mov
daa
int
jmp
push
mov
xchg
mov
mov
fwait
add
push
inc
cmp
add
iret
sub
leave
fs
aam
jmp
inc
dec
roll
sbb
or
rcr
pop
faddl
dec
lods
daa
add
cmp
shlb
pop
repz
mov
mov
cld
xchg
aam
jmp
out
mov
sahf
xchg
adcb
xchg
dec
aam
pop
dec
fmulp
inc
mov
adc
jnp
cmp
add
xchg
adc
lahf
dec
add
push
mov
sbb
and
stc
push
lods
and
popf
cmp
sti
and
jmp
cs
stc
xchg
insl
and
fldenv
adc
imul
jg
dec
nop
jbe
mov
mov
outsb
jo
test
cmp
mov
call
inc
adc
pusha
add
fcoml
add
mov
popa
nop
int
in
mov
mov
mov
das
jl
inc
lds
or
xor
add
fcmovnbe
rclb
fidivs
out
add
lds
pop
xor
mov
inc
adc
adc
push
out
dec
push
loope
popa
or
pop
in
jo
push
push
sub
dec
push
mov
ljmp
or
jecxz
sbb
sbb
dec
cwtl
add
pop
adc
test
and
and
call
add
and
or
jle
mov
cmp
test
pusha
hlt
push
xchg
inc
notb
pop
pusha
xlat
in
push
sbb
inc
sub
andl
add
mov
scas
cmc
lcall
adc
adc
rcl
adc
je
test
jmp
and
add
fisttps
adc
inc
lret
pop
mov
cmpb
mov
mov
mov
cmpsb
add
dec
cmpsb
pop
das
pop
mov
sub
sti
aaa
jo
cmpb
bound
pop
jns
pop
cmpsb
add
mov
mov
add
loope
inc
rolb
sbb
mov
mov
and
xchg
fisubrs
and
jecxz
push
or
mov
or
outsb
mov
inc
ret
pop
lahf
aam
push
add
xchg
ja
das
sub
mov
pop
pop
and
adc
jns
lods
mov
or
and
sbb
lea
imul
pop
mov
cli
scas
jnp
push
repnz
js
mull
push
gs
fsts
sbb
add
sub
xlat
sbb
fbld
mov
xor
xchg
lcall
mov
dec
clc
add
inc
mov
decl
fwait
and
or
fisubl
orl
adc
nop
and
xchg
mov
lcall
dec
pusha
or
adc
cwtl
jno
xchg
sub
sub
push
fldt
xor
dec
test
mov
pop
into
jo
stos
xchg
mov
xchg
sbb
les
or
adc
add
arpl
ror
pusha
sub
cmp
or
out
sub
popf
inc
inc
lret
outsl
sbb
cmc
loope
push
push
imul
and
sub
sub
imul
scas
adc
orl
out
das
jmp
mov
xchg
jns
cltd
cmp
or
add
pop
cmp
iret
bound
xchg
sbb
mov
push
lods
adc
jmp
movsl
adc
jecxz
popa
xor
pop
lds
adc
jnp
pop
out
adc
or
cmpsl
ljmp
outsb
xchg
add
test
jp
es
mov
mov
add
add
mov
add
insb
inc
adc
jnp
aad
repnz
orl
icebp
imul
clc
add
in
jb
int3
xchg
push
push
add
js
dec
xchg
xlat
cmp
jg
arpl
push
adc
cmp
test
dec
pop
out
push
add
ret
sbb
add
xlat
das
push
sbb
push
pop
test
pop
aam
sbb
clc
jns
mov
movsl
xor
pop
in
fstl
mov
mov
mov
lds
push
cli
mov
lahf
cmp
jmp
adc
test
mov
nop
test
ds
push
cmp
test
inc
mov
in
lcall
push
mov
shrb
pop
lea
push
stc
sub
mov
or
add
fstl
scas
test
dec
mov
dec
lret
dec
dec
faddp
andb
cs
mov
ljmp
add
sbbb
lods
inc
push
cmp
les
pusha
repnz
fisttpll
mov
popa
inc
add
pop
in
mov
popa
fwait
loopne
pop
push
jle
popf
adc
mov
adcb
add
add
loope
add
into
add
out
inc
adc
test
jne
jge
xor
js
jns
xchg
outsb
mov
lods
aam
in
stos
adc
test
dec
leave
sub
adc
les
push
mov
test
add
sbb
ret
sbb
test
push
imul
stc
add
mov
das
push
pop
loop
lcall
cs
push
pop
scas
jo
mov
xor
pop
int3
imul
jo
mov
mov
and
and
and
roll
jnp
push
sub
lds
scas
pop
test
or
mov
lret
jae
push
call
jne
daa
mov
xchg
push
sub
shrl
cmp
pop
cld
jae
sub
imul
shl
pop
shrl
lods
int
pop
or
push
cmp
iret
sbb
je
mov
xchg
adc
test
jo
add
pop
popf
xor
push
cmpsb
xor
leave
mov
push
popl
ljmp
lret
cmc
jbe
or
out
insb
xchg
scas
clc
mov
cmp
pop
cs
ds
das
stc
jo
mov
pop
jge
pop
shlb
fistpl
mov
mov
or
pusha
push
inc
push
sub
mov
scas
jb
sbb
lock
sahf
sbb
pop
stos
cmp
add
or
xor
sbb
andb
and
lods
xchg
fnstsw
add
inc
es
test
mov
and
ds
adc
push
fistpll
and
call
xorb
sbb
in
dec
je
mov
test
or
lds
xchg
adc
add
push
negl
in
lods
mov
cmp
add
sbb
mov
je
testb
add
pop
push
lds
jmp
div
test
adc
sub
cmp
movsl
and
sti
pop
sub
aaa
add
sub
mov
imul
lods
movzbl
fwait
mov
test
dec
clc
decl
shl
pop
outsl
jp
add
mov
rolb
add
jg
or
dec
loopne
xor
inc
sbb
scas
ret
enter
daa
inc
mov
or
dec
jp
cltd
clc
lea
test
sub
cmp
call
cmp
in
adc
shll
into
push
pop
sub
sub
sub
add
cs
in
and
or
shll
popf
pusha
push
add
imul
in
call
sub
push
add
repnz
push
pop
pop
call
outsl
stos
cs
and
fptan
rorl
outsb
push
sub
lcall
and
jbe
push
pop
leave
inc
pop
idiv
mov
test
sbb
add
xor
add
ret
push
lds
nop
push
push
push
pop
pop
pop
cmp
and
pop
leave
and
test
outsb
dec
addb
cld
popf
insb
daa
jmp
fistpll
bound
cs
pop
push
adc
add
jnp
popl
pop
or
pop
sub
or
fisubrs
in
pop
mov
mov
cmpsl
dec
pop
lea
ss
push
pusha
in
inc
mov
jecxz
popa
lock
mov
jp
subl
add
pop
xor
cmpsl
mov
jns
popf
mov
outsb
cmpb
dec
cltd
icebp
negb
or
adc
push
inc
cmp
adc
inc
pop
push
xor
or
mov
push
adc
xor
lds
inc
lcall
or
out
rolb
outsb
das
mov
sub
pop
mov
rorl
jo
shlb
mov
and
adc
faddl
xchg
push
mov
inc
or
cmpsb
gs
hlt
int3
dec
mov
add
dec
pushf
call
fdivp
imul
mov
xor
inc
jmp
push
adc
out
mov
lock
mov
push
sbb
dec
pop
xchg
data16
cld
mov
inc
daa
pop
mov
jmp
mov
adc
or
mov
stos
sbb
dec
outsb
enter
sub
aaa
add
add
push
dec
mov
mov
xchg
rcll
lcall
stc
xchg
push
jecxz
and
push
das
inc
lods
scas
or
int3
mov
mov
call
dec
test
pop
in
push
sub
add
push
sbbl
cmpsb
hlt
dec
push
repnz
mov
mov
inc
add
mov
xchg
pop
sub
sub
mov
test
jbe
movsl
jnp
imul
aam
aam
loope
mov
adc
hlt
dec
pop
nop
gs
or
push
xor
xchg
loop
xor
xchg
sbb
adc
lret
mov
fldenv
cmp
movsl
pop
adc
in
sbb
cmp
ffreep
arpl
xchg
cmp
fidivrs
rcrb
add
jbe
cwtl
push
adc
in
ret
inc
mov
or
mov
cld
aas
xchg
icebp
das
sbb
popa
jmp
not
loopne
adc
orb
cmc
mov
or
mov
jecxz
in
jns
sub
lods
test
jmp
add
shlb
add
xor
xchg
xor
test
jmp
fisttpll
fs
popf
int
shl
or
mov
je
aam
sbb
sbb
xchg
shr
xchg
or
jp
add
je,pn
cli
outsb
loopne
hlt
pop
mov
mov
pusha
add
in
ss
add
adc
iret
pushf
sbbb
xchg
sbb
insl
jne
loop
inc
rdtsc
movsl
jo
scas
add
xor
out
and
push
shlb
ficoms
ds
jb
xchg
push
pushf
mov
sti
cmpsb
ret
xor
mov
mov
pusha
cli
pushf
or
mov
push
xor
mov
aas
push
add
dec
or
inc
inc
icebp
xchg
mov
aas
out
fcoms
and
repnz
mov
pop
inc
push
out
stc
and
fidivrs
mov
and
jno
adc
lfs
or
add
ret
dec
fs
call
mov
or
or
xor
popf
sub
or
and
dec
sar
inc
mov
fmul
fcompl
lret
push
adcb
stc
cmpsb
imul
decl
inc
xchg
push
mov
pop
jg
pusha
jg
mov
jns
add
dec
mov
ret
hlt
xor
fidivs
jo
add
pop
sbb
mov
ret
dec
mov
orb
fists
mov
or
jae
lea
sbbl
arpl
rcrb
imul
arpl
push
mov
dec
push
mov
add
outsl
sbb
or
add
jmp
inc
sbb
inc
sbb
or
push
ret
push
lcall
ljmp
cmp
inc
xor
daa
push
dec
push
bound
nop
loopne
fcoms
xchg
pop
lahf
into
cmc
into
push
or
add
adc
cs
jmpw
decb
idivb
jmp
mov
daa
pop
nop
fadds
add
psubsb
inc
adc
xor
xchg
lahf
mov
aam
jnp
movl
scas
shrb
mov
dec
loope
push
or
pop
in
ds
or
sub
adc
inc
shlb
in
mov
movlps
cmpsb
push
repnz
mov
test
shll
sub
add
xor
pop
push
push
push
sub
in
and
mov
pop
dec
pop
std
in
das
popa
sbb
or
cld
popa
shll
sbb
push
and
clc
mov
out
sub
cmc
inc
push
sub
icebp
out
jne
adc
jae
mov
add
inc
xchg
xchg
fcoml
scas
int
in
pop
lods
sbb
rcrb
mov
xchg
dec
lds
call
in
cmp
xor
sti
icebp
out
xor
scas
outsb
mov
xchg
movsb
push
dec
add
pop
mov
cmc
ret
xchg
add
fidivl
hlt
pop
xorl
pusha
mov
popl
push
push
pop
pop
popa
push
jmp
nop
mov
or
xchg
jae
enter
jbe
in
in
add
add
insl
xchg
or
inc
hlt
push
shl
and
xchg
insl
pop
shl
cs
add
bound
data16
xchg
and
aaa
pop
and
mov
add
sbb
mov
popf
outsl
pop
pusha
addr16
adc
push
mov
xchg
adc
test
mov
out
aam
inc
pop
xchg
adc
add
ds
push
popf
lock
mov
mov
aad
dec
pop
lcall
std
push
push
mov
pop
std
sub
sbb
jmp
adc
idivl
mov
divb
pop
push
stc
inc
filds
orl
pop
popf
outsl
inc
shl
pop
and
shrl
mov
cmp
push
mov
adc
xor
jmp
jno
xchg
dec
movsl
in
pop
popf
ss
mov
inc
cmp
cld
xchg
pop
call
xchg
jmp
sbb
and
pop
pop
daa
jmp
aaa
or
imul
daa
shl
mov
mov
sub
sbb
push
leave
cltd
push
int
frstor
out
mov
add
test
mov
cmp
addr16
rorb
adc
fstl
jo
mov
jecxz
loopne
lret
pop
sub
push
ficoml
mov
xchg
xchg
leave
sub
adc
xor
popf
push
out
les
add
sub
sbbb
jle
cs
icebp
cmp
pop
jmp
aad
adc
testb
ja
jns
or
data16
sub
outsl
cld
jl
push
sub
add
mov
call
in
cmc
sbb
fildl
adc
mov
std
xchg
mov
out
adc
xchg
dec
out
mov
sbb
adc
add
jmp
push
std
test
mov
xchg
add
lret
mov
call
and
or
mov
rcr
push
arpl
add
and
fcomi
movsl
xchg
push
mov
sbb
imul
js
aaa
pop
icebp
xchg
sbb
cmpsb
add
aam
and
xchg
xor
pop
popf
sub
rclb
pushf
add
out
inc
pop
inc
or
aas
pop
testl
fwait
aad
pop
add
sbb
jb
xchg
mov
out
mov
xor
pop
push
in
xchg
shll
cmpsb
movsl
add
inc
mov
jmp
add
jb
cmp
in
insl
dec
daa
pop
mov
loop
xor
adc
xrelease
stos
dec
mov
es
dec
lcall
addb
pop
sub
cli
das
mov
pop
pop
hlt
or
mov
fisttpl
adc
or
mov
add
data16
mov
cmp
jmp
arpl
push
mov
pop
stc
fwait
adc
sbb
push
out
push
cs
pop
sbb
or
jge
pop
cmovno
mov
add
pop
pop
push
dec
dec
and
pop
pop
into
and
sub
xchg
sub
add
movsb
dec
mov
jg
mov
sub
test
sbb
or
dec
adc
xchg
std
les
adc
scas
enter
pop
mov
test
push
dec
sub
outsb
push
mov
and
add
aas
mull
mov
scas
mov
bound
adc
jnp
push
clc
enter
andb
push
jecxz
pop
dec
push
cmpsl
mov
outsb
mov
jg
int3
sub
pop
test
test
adc
xor
or
cmp
cmpl
enter
jns
int3
sub
push
loope
lods
pop
mov
jb
lahf
js
or
fbld
outsl
enter
jbe
dec
mov
loopne
test
sub
clc
aam
stc
jno
call
adc
std
rcrb
add
stc
mov
into
jbe
out
mov
jbe
fidivrl
push
mov
leave
jg
call
mov
pop
loope
mov
dec
lcall
xchg
dec
pop
xor
sub
aad
mov
cmp
scas
fldl
sub
xchg
addr16
and
jbe
adc
xor
popf
fnstenv
mov
add
fiaddl
cmp
jbe
push
pop
sub
mov
loopne
fcom
add
stos
mov
out
xchg
cli
and
jmp
adc
mov
xchg
push
mov
pushf
add
rorl
pop
dec
pop
lret
and
adc
das
loope
dec
xchg
dec
push
movsb
shlb
lds
pop
cmpsl
mov
or
adc
push
div
push
push
fsts
mov
imul
insl
lcall
in
test
dec
cmp
imul
insl
xor
ja
mov
mov
mov
xor
add
jge
testl
push
sar
call
xchg
out
jnp
rorb
cltd
push
push
adc
mov
lock
push
add
sub
div
xchg
pop
add
push
int3
or
or
or
inc
ror
adc
jns
push
add
adc
sbb
xor
cmp
add
mov
xlat
and
arpl
rcrb
xor
dec
testb
add
jle
sub
xor
out
push
mov
sahf
dec
or
stos
mov
cmp
xchg
out
mov
or
mov
rcrl
and
add
lea
loop
lcall
rclb
jbe
add
dec
sub
lret
mov
mov
adc
jmp
imul
mov
xor
ret
add
mov
pop
and
push
fldenv
push
xchg
imul
sahf
mov
ficomps
add
pusha
or
xor
sti
lret
sub
mov
adc
stos
cs
jns
clc
inc
add
cld
lods
addb
jne
mov
push
inc
cs
fwait
testl
pop
nop
add
ljmp
sub
jp
add
hlt
rclb
xchg
push
sbb
sub
xor
add
sub
push
lds
jle
popa
pop
fimuls
xorb
pop
outsb
xor
adc
nop
pusha
jmp
movsb
fstpt
push
les
ffree
daa
jl
push
or
xorl
mulb
jae
call
das
jecxz
and
int3
jbe
cwtl
cmpsb
xchg
push
pop
jns
sbb
add
lret
sub
mov
ss
sbb
std
adc
mov
les
icebp
cmp
fwait
mov
xchg
or
dec
add
jl
pop
jmp
test
xor
xor
repz
lcall
inc
fcomps
inc
sbb
or
push
mov
das
pop
daa
daa
mov
ret
xchg
sub
push
dec
and
cmc
mov
lds
push
cld
jb
or
jbe
ficomps
xor
mov
popf
jmp
add
mov
mov
mov
dec
pusha
idivl
scas
je
out
sbb
scas
pop
notl
xchg
in
cmp
jns
adc
add
fistpl
xchg
lods
jns
jge
jb
insl
mov
pop
lods
lds
loopne
cpuid
and
out
loope
popa
jnp
mov
sub
or
xchg
jecxz
xchg
cmc
scas
lcall
loope
mov
pop
test
or
adc
and
jnp
add
dec
les
mov
popf
or
in
out
pop
pop
push
les
mov
aam
ds
add
or
jnp
stos
adc
clc
dec
daa
and
pop
cld
push
push
in
sub
in
sahf
push
adc
iret
testb
clc
das
imul
add
sbb
sub
dec
mov
cld
les
popa
add
lahf
xor
xchg
fnstenv
add
mov
lods
cmp
adc
mov
jmp
scas
jb
pop
fdivp
add
sub
add
jl
jecxz
pop
and
mov
xchg
into
dec
mov
cmp
lods
ja
mov
sub
adc
and
dec
popa
outsl
dec
mov
sub
sahf
add
fdivrs
in
cmp
push
movsl
xor
pusha
xor
sbb
cwtl
or
pop
inc
cltd
fadd
dec
loop
es
or
xchg
xchg
out
loop
ja
cmp
or
sub
or
sub
lock
inc
sbb
fucom
sbb
adc
or
xchg
test
xchg
pop
cwtl
testb
and
shrl
mov
test
das
mov
repnz
xor
jp
mov
dec
movsb
repz
mov
test
and
sub
mov
in
mov
out
mov
sub
cmp
mov
bound
flds
xor
jp
mov
pop
mov
vaddsubpd
mov
cltd
add
rcrl
sub
add
push
shlb
pushf
mov
lahf
lret
mov
nop
xlat
mov
sbb
or
push
push
mov
lea
xchg
adc
jae
popa
push
sub
and
movsb
add
aaa
cmp
cwtl
or
mov
xor
imul
xor
push
call
les
fwait
ljmp
ss
outsl
dec
outsb
daa
add
xor
and
pusha
cmpsb
sbb
subl
push
mov
push
fcompl
popa
lcall
cmp
or
ja
mov
inc
add
popa
int3
ljmp
int
sarl
pcmpeqb
test
and
mov
push
dec
popf
xchg
push
mov
cmc
push
mov
fcompl
mov
in
bound
mov
jnp
lds
cmp
jmp
jno
xor
cmp
dec
push
sbb
loop
mov
xchg
insl
push
std
mov
out
pushf
lret
adc
sub
aam
dec
movsb
mov
sbb
sbb
sbb
and
movsb
add
icebp
sbb
in
push
mov
aad
punpckhwd
add
sbb
negl
mov
mov
xchg
xchg
adc
mov
xor
mov
fstpt
pop
cmp
dec
bound
lea
and
push
mov
out
mov
inc
xchg
jg
aas
adc
sti
or
mov
iret
lods
adc
xlat
sbb
dec
mov
out
and
out
adc
call
daa
mov
sub
adc
cmp
daa
xor
jg
pop
pop
aam
sbb
xor
mov
push
movsb
xor
and
add
cmpsb
js
add
fisubrs
sbb
cmp
sub
push
lcall
add
test
jo
add
jno
add
mov
mov
std
xchg
adc
or
sbb
xchg
rcrb
sub
push
sub
scas
and
shll
xchg
mov
jnp
ja
xchg
sti
test
inc
inc
lea
add
pushf
out
mov
je
push
jno
inc
sub
mov
sarl
pop
jmp
leave
or
pusha
push
mov
sbb
out
aam
and
repz
loop
cmpsl
pop
movsb
test
adc
push
inc
clc
popf
mov
add
mov
movsb
sbb
xor
pop
insb
popl
xchg
pop
jmp
xchg
cmp
pop
clc
jbe
inc
daa
push
scas
ja
hlt
xor
pop
movsb
or
es
sbb
lods
or
xor
test
fwait
or
std
adc
es
addb
aam
mov
pop
test
or
ja
mov
add
mov
popf
les
add
mov
jbe
daa
in
outsl
shrb
inc
add
fwait
sub
nop
or
loopne
repz
jo
sarb
jl
add
inc
sub
pusha
and
lds
das
test
lods
adc
jl
out
loopne
push
insb
add
dec
adc
mov
xchg
insl
and
push
aas
add
roll
xlat
les
movsb
out
add
jo
arpl
inc
sub
dec
ret
daa
in
outsb
jns
bound
jno
jg
testb
sub
sub
push
test
sbb
insl
imul
loopne
push
pop
xchg
fstpl
jbe
jmp
cld
rorl
sbb
add
rol
iret
adc
int3
xchg
mov
mov
sahf
push
add
ja
in
je
add
add
sarl
pop
mov
iret
cmp
pop
daa
pusha
nop
inc
daa
mov
push
inc
push
jmp
jg
push
pop
cmp
or
xlat
popa
mov
jecxz
mov
movsb
cli
std
call
mov
mov
inc
fdivrl
in
mov
sub
sub
outsb
int
fisttpll
and
divb
inc
pop
testl
pop
js
xchg
push
and
pop
int3
lods
lock
icebp
push
dec
push
mov
pop
add
clc
jp
sbb
stc
mov
addl
inc
add
sbb
add
cli
fstps
xchg
add
sub
mov
icebp
or
add
push
or
in
and
adc
or
pop
test
out
and
imul
mov
pop
xor
enter
cli
mov
mov
movsl
stc
and
xchg
xchg
popf
mov
add
push
leave
dec
dec
sub
fisttpl
test
add
js
loope
mov
sbb
je
imul
adc
ljmp
mov
add
ds
inc
jo
jne
push
cmp
xchg
sub
fstps
or
nop
psubsw
xchg
pop
adc
mov
add
jp
movsb
arpl
stos
lds
rclb
popa
outsl
loopne
movsb
sub
nop
xchg
cltd
es
stc
add
cmpsl
xor
cs
xchg
dec
icebp
adc
loop
xchg
lods
ja
out
outsb
pop
add
or
and
or
inc
jne
ficoml
push
add
mov
adc
in
dec
into
mov
xchg
and
jne
xor
mov
sti
pop
lret
loopne
in
xchg
pushf
sahf
lahf
fsub
mov
lds
aad
cmpsl
js
sub
or
sbb
xor
add
jae
nop
push
test
test
adc
cmpsb
rorl
jmp
adc
jne
push
pop
xchg
lods
jge
test
dec
mov
outsb
lods
sbb
lcall
iret
add
divl
add
push
add
gs
outsl
cmc
sub
cs
lds
mov
dec
stos
fwait
add
dec
mov
mov
cmpb
bound
pop
cmpsb
and
fistps
movsl
je
hlt
sub
xor
cltd
imull
jbe
fldenv
loopne
jp
add
loope
sub
int
ret
fs
mov
aam
es
imul
popa
dec
push
into
lock
mov
or
mov
mov
ljmp
mov
test
mov
stos
negb
add
cltd
in
push
cmp
outsl
rolb
inc
sub
in
dec
push
enter
and
sub
rolb
add
cs
imul
inc
lods
xchg
adc
mov
hlt
add
jnp
inc
repnz
cmpsl
or
or
cwtl
xchg
jle
loopne
out
out
xchg
sbb
or
cmp
scas
roll
dec
or
in
xchg
dec
mov
xor
pop
fs
mov
jb
push
in
and
mov
daa
xor
push
jo
adc
mov
xorb
cmp
sbb
das
insl
sub
jmp
shl
in
lret
sbb
pop
push
test
pop
mov
pop
mov
mov
cmp
sbb
and
jnp
lods
push
pop
adc
mov
pop
dec
adc
lods
testl
stc
mov
jg
pusha
jnp
loop
insb
pop
daa
jmp
push
or
or
jb
fwait
mov
rcrb
ds
push
stos
xor
stos
pop
cmpsl
sub
inc
mov
es
dec
and
loopne
aad
push
xlat
popa
scas
add
int
sbb
adc
or
test
add
and
and
sub
pusha
xor
mov
push
fcomi
adc
jo
repnz
nop
mov
arpl
xchg
and
test
orb
aas
jle
jo
pop
xchg
fwait
lods
cltd
ja
adc
out
mov
add
xchg
rcll
aam
insl
sbb
loop
roll
mov
jp
adc
cmp
adc
jecxz
enter
in
xchg
pop
mov
daa
insb
test
xor
sbb
mov
fimull
int3
test
push
cmp
shll
push
out
jns
sub
nop
fcoml
mov
mov
cmc
imul
ja
ja
push
scas
add
clc
mov
or
adc
in
out
mov
mov
lods
dec
testl
lods
or
cmp
mov
movsl
int3
fildl
dec
xchg
stos
push
mov
sub
bound
add
movsl
mov
sbb
fwait
pop
inc
mov
adc
aam
mov
jp
rclb
popa
cmpsb
mov
xor
cmp
jmp
adc
xchg
xchg
jae
mov
icebp
jg
mov
cltd
push
xorb
inc
dec
inc
adc
mov
cmp
lahf
mov
dec
inc
fisubl
sbb
out
cld
movsb
mov
jle
xchg
gs
in
dec
and
or
cmpsb
push
push
xor
cmp
mov
xchg
movsb
jo
jne
sbb
mov
aaa
fidivs
or
loope
rcll
and
and
lds
mov
push
jbe
mov
add
mov
lds
adc
out
int
jl
and
mov
lock
mov
jo
dec
cld
test
clc
push
addb
in
lret
add
cmc
jge
enter
movsb
xor
jmp
negb
sbb
dec
sbb
mov
roll
scas
and
movsl
shll
push
repz
pushf
adc
xor
fstps
fiadds
rcll
mov
mov
pop
pop
roll
sbb
add
xchg
aaa
or
push
jno
mov
push
les
pop
dec
addr16
mov
bound
ljmp
popa
call
or
pusha
dec
in
or
scas
jle
orb
and
push
rclb
and
sbb
sarb
push
pop
sub
insl
push
jbe
mov
add
cld
xchg
push
mov
add
add
xlat
outsb
lea
stc
cmp
inc
shrb
inc
push
add
jbe
int
inc
test
mov
outsb
icebp
add
xor
das
push
test
popf
pop
add
imul
pop
outsb
mov
xor
cmp
cmp
outsb
mov
imul
xlat
mov
daa
std
icebp
xchg
dec
mov
inc
or
mov
mov
mov
loop
push
xchg
mov
mov
ret
or
insb
fwait
xor
sbb
gs
or
pop
cmp
aad
fldl
xchg
adc
popa
add
ret
xchg
sub
outsb
ja
cltd
mov
js
mov
add
add
faddl
clc
andl
movb
pop
call
push
sub
jp
adc
mov
daa
xchg
sti
jp
sbb
je
nop
daa
jno
inc
xlat
xchg
fptan
mov
mov
imul
mov
inc
es
adc
mov
sub
mov
out
cmp
ret
lods
xlat
jno
bound
fistpll
lods
jno
popa
repz
mull
add
imul
repnz
jbe
mov
sub
xor
in
imul
clc
popa
add
subl
and
add
lods
push
jne
dec
xlat
test
into
popa
inc
mov
scas
je
out
mov
push
dec
jo
jnp
mov
add
xor
fstpt
stos
dec
cmp
int3
sub
and
lea
pop
movsl
sbb
cmp
pop
add
lods
inc
adc
jb
scas
leave
sub
ret
adc
add
mov
pop
xchg
outsb
xlat
mov
aam
das
sub
test
out
and
mov
and
adc
jae
xchg
popf
sbb
leave
dec
push
pop
lds
pop
outsl
add
sub
sbb
call
pop
adc
popa
xlat
mov
sbbb
adc
pop
repnz
mov
es
cmp
add
loop
call
neg
cmpsl
xlat
out
arpl
adc
pop
pop
xchg
fwait
cltd
xchg
test
dec
test
fsubrp
xchg
fidivl
adc
push
dec
mov
ljmp
push
sub
sub
out
aaa
cs
xor
dec
xor
jo
sbb
push
adc
xor
cmpsl
mov
lds
sub
pusha
inc
or
scas
or
loop
xchg
adc
sbb
dec
fmul
mov
mov
push
test
dec
div
add
cmpsl
aas
cltd
js
pop
mov
dec
out
es
or
adc
test
dec
mov
mov
dec
jmp
mov
movsl
sub
and
cld
jge
pop
pop
sbb
cmp
and
stc
xchg
cmpsl
fdivl
lods
jmpw
mov
cli
fxtract
and
jo
lea
in
sbb
loope
sbb
imul
sbb
mov
hlt
jo
orl
rol
xor
repnz
dec
pop
hlt
xchg
push
in
cs
mov
in
pop
jmp
mov
xchg
mov
aas
pop
or
inc
sub
dec
out
int
xchg
mov
mov
flds
pop
inc
or
pop
sub
ficomps
das
cmpsb
movsl
pop
lock
imul
dec
clc
test
pop
popa
in
add
movsl
cs
xchg
push
mov
or
dec
aam
movsb
mov
js
mov
leave
dec
or
pop
dec
cmp
pop
pop
out
mov
xor
test
inc
out
xchg
push
test
add
movsb
je
add
sub
jp
push
lods
dec
push
dec
inc
xchg
xchg
dec
das
mov
mov
push
jns
dec
js
fidivs
mov
jae
xchg
ja
xchg
sbb
xor
popf
inc
jp
cmp
int
notl
bnd
and
sbb
int
loopne
imul
xchg
orl
xchg
orl
mov
cmpsb
shll
inc
jo
cmp
pusha
mov
add
aas
outsl
and
movsl
dec
and
mov
add
cmp
scas
add
mov
inc
rorl
jb
lahf
int
rclb
or
ljmp
imul
pop
mov
pop
dec
pop
cmp
repz
mov
rorl
add
jno
jnp
dec
add
aam
mov
cmp
push
movsl
pop
mov
or
or
in
mov
jnp
pop
mov
adc
div
movsb
pushf
cmpsl
pop
mov
fcmovnb
out
sub
sub
nop
nop
cmovbe
je
ret
std
jne
push
jbe
xchg
jo
les
inc
fistpll
jmp
adc
ja
dec
adc
mov
and
lods
xor
add
push
push
mov
and
cmc
dec
mov
xor
xchg
xlat
sahf
dec
ljmp
cmp
cld
and
les
mov
add
push
push
sbbb
pop
inc
mov
aaa
rolb
mov
xor
add
adc
or
sub
add
push
ljmp
cmpsb
cmpsl
clc
and
push
mov
dec
cmpsl
push
add
cmc
mov
cmp
push
adc
test
xchg
jp
add
imul
in
push
jle
add
cmpsl
xor
pusha
sub
ja
sub
sbbl
mov
mov
es
shrb
repnz
popa
xorb
out
dec
push
push
daa
push
or
push
xor
mov
popa
mov
mov
mov
jbe
sbb
xchg
enter
mov
xor
or
pusha
repz
and
sub
ret
xchg
rcll
mov
repnz
xchg
stos
fimull
inc
lret
fmull
test
cmp
dec
shrl
inc
sub
dec
std
lcall
in
jge
mov
sub
jle
movsb
test
popf
mov
cmp
add
in
testb
mov
mov
hlt
cmc
lds
daa
cli
push
sbb
cmc
dec
sub
lock
and
inc
dec
js
int
mov
out
pushl
dec
decl
pop
sbb
sbb
icebp
cmp
mov
mov
sbb
jmp
and
pop
push
test
scas
inc
mov
adc
fnstcw
pop
sub
or
push
je
cmp
je
out
push
xchg
push
pop
idiv
or
jmp
fincstp
outsl
dec
sub
pop
push
out
pop
jo
xor
cs
pop
popa
mov
imul
fsts
js
les
or
dec
sub
xor
jp
mov
imul
mov
outsl
inc
mov
adc
pop
loope
xor
pop
add
out
mov
arpl
sub
push
mov
sbb
sbbb
fimull
lods
leave
int
inc
lea
pop
cltd
inc
icebp
and
mov
sbb
xchg
jmp
cmp
sarb
ficoms
jecxz
ficompl
mov
sbb
jo
stos
fcomi
shll
sbb
mov
jp
jbe
mov
shrl
sub
ss
lods
pushf
and
add
push
mov
push
mov
mov
xchg
lahf
mov
lcall
js
nop
aaa
push
mov
cmp
ret
lea
push
add
sub
lcall
outsb
loopne
push
das
data16
xor
and
mov
sti
loope
fs
or
test
mov
jecxz
dec
jae
mov
jbe
jmp
dec
popa
sub
sub
ficomps
repnz
xchg
loop
sub
dec
push
insb
xchg
pusha
fildl
cmpb
daa
push
inc
push
hlt
cmp
mov
loop
dec
pop
mov
test
dec
sub
cs
push
insl
mov
pusha
cmpsb
test
dec
enter
fisubrl
sbb
pushf
inc
cmp
lods
daa
js
test
fisttps
jne
pop
lcall
pop
insl
hlt
dec
and
cwtl
int3
lea
adc
mov
push
pop
in
xchg
xchg
sub
push
xchg
fidivs
repz
add
ljmp
addr16
jae
mov
pop
jne
and
cmp
iret
lahf
jl
lcall
mov
ret
fisttpll
and
add
cmpsl
push
add
and
xor
repnz
xlat
ja
cmp
in
xchg
jl
xchg
das
jg
inc
test
les
cmp
mov
xor
push
jmp
insl
xor
mov
pop
mov
add
inc
mov
loop
add
mov
imul
add
xchg
cmpb
pop
mov
lds
mov
mov
cld
clc
pusha
mov
adc
adc
mov
mov
lea
imul
pop
push
add
push
jg
pop
pop
push
das
ficoms
sbb
movl
xchg
jmp
sub
je
cmpsl
fs
add
sub
insl
add
and
inc
pop
das
and
aas
jmp
loopne
and
in
and
dec
frstor
movsb
pop
inc
xlat
pusha
mov
pop
mov
dec
inc
daa
popa
and
mov
popf
in
add
mov
sub
lret
push
jb
push
dec
or
je
mov
xchg
lds
adc
stos
loopne
add
je
in
xchg
mov
dec
jl
xchg
lcall
insl
nop
dec
out
enter
sub
sbb
mov
pop
pop
in
das
mov
mov
adc
sahf
scas
xchg
add
test
in
rcrb
sub
and
push
mov
lods
cmpsl
cmp
pop
add
hlt
xor
adc
imul
pop
aas
inc
lret
inc
mov
add
mov
and
pusha
lods
and
jge
or
lret
in
push
dec
out
and
jg
add
in
test
push
incl
arpl
adc
stc
pop
or
xchg
inc
cmp
jg
xchg
movsl
adc
inc
jb
xor
imul
sbb
out
inc
imul
add
jae
repz
sbb
mov
and
cmp
iret
lret
frstor
or
cwtl
jno
lret
mov
repnz
jge
sub
jmp
mov
xor
cmp
aad
mov
testl
rcrl
push
sub
mov
out
loopne
jnp
cwtl
in
daa
jbe
fmull
sub
fsub
mov
jp
int
inc
pop
addr16
or
mov
and
pop
mov
push
push
and
sub
xor
sbb
rol
jge
pop
aad
xchg
popf
cmp
adc
push
push
mov
push
movsb
mov
dec
daa
pop
clc
push
imul
test
scas
and
dec
dec
add
lret
je
and
mov
dec
mov
mov
imul
arpl
push
insl
out
jbe
int
scas
push
add
lret
mov
push
and
and
pop
jecxz
inc
sbbl
xor
js
pop
mov
insb
leave
and
add
cltd
push
dec
push
in
jne
fmull
pop
dec
xchg
fistl
scas
fldt
popa
in
xor
mov
pop
xchg
inc
mov
lcall
inc
or
dec
push
gs
pop
push
mov
inc
pop
decl
push
fcomps
pop
int
inc
adc
push
pop
or
push
add
inc
aad
mov
andb
push
popa
stc
in
movb
shrl
ret
mov
icebp
or
std
and
sub
fdivrp
enter
pop
mov
mov
and
mov
rcll
rclb
nop
jo
shrl
add
xchg
mov
dec
pop
jmp
lea
sub
sahf
sbb
roll
scas
xchg
shlb
or
sub
mov
dec
andb
xchg
imul
mov
jle
sub
insb
mov
ja
pop
mov
xor
out
mov
lods
add
mov
mov
mov
pop
mov
xchg
nop
int
push
mov
cmp
dec
add
das
dec
mov
mov
add
leave
jns
mov
dec
adc
dec
or
or
or
jl
cli
xor
mov
dec
cs
dec
sahf
add
cmc
xchg
jle
pop
and
mov
cmp
pop
pop
xchg
xchg
mov
in
in
or
std
unpcklps
hlt
fmull
xor
stc
das
and
mov
adc
pop
and
inc
push
add
popf
pop
mov
nop
outsb
mov
cmc
shl
push
sub
mov
std
pusha
sub
out
roll
push
daa
push
jmp
das
inc
pop
sahf
mov
stos
pop
mov
outsl
mov
ljmp
jbe
xor
xchg
push
das
popf
cmc
sbb
xor
lcall
in
test
std
je
jno
xor
push
inc
sub
fsts
out
idiv
mov
lret
imul
add
xor
in
or
sahf
jmp
inc
pop
mov
and
call
aaa
test
add
inc
daa
pop
mov
clc
imulb
dec
pop
fwait
aaa
mov
add
inc
imull
rcrb
sub
pop
push
jmp
push
add
jecxz
or
push
jecxz
stc
fbstp
stc
jle
dec
jae
cmp
clc
sub
jb
into
gs
mov
push
or
add
jo
mov
sub
dec
inc
mov
pop
aam
jmp
clc
cmp
cmp
pop
sub
arpl
inc
or
andl
popf
xchg
sub
adc
out
outsb
inc
and
sub
mov
fwait
daa
stc
pop
add
ret
and
gs
xchg
loope
out
mov
mov
inc
xchg
and
rcrb
and
repnz
mov
ror
jbe
push
adc
inc
xchg
test
mov
add
mov
adcl
call
add
cwtl
mov
cli
add
gs
mov
jg
mov
jo
ret
repnz
lret
xor
push
jmp
cmp
data16
outsl
mov
mov
aam
xor
outsl
add
push
add
ror
aad
push
mov
aad
popa
push
andb
or
movsl
push
sub
add
mov
mov
fwait
sarl
adc
popf
xorl
or
push
repz
cmp
lret
std
jnp
push
mov
push
adcb
sub
or
pop
add
add
mov
nop
xchg
adc
push
ret
cmc
incl
xor
lea
or
loope
pop
jmp
cmp
daa
mov
mov
fnstenv
lea
or
jmp
fwait
pushf
xchg
mov
adc
and
les
pushf
and
pusha
push
mov
pop
cwtl
loope
fbld
adc
ficomps
rcll
lret
add
pusha
cld
and
int3
stos
outsb
aas
push
sub
push
inc
mov
test
rorb
dec
pop
adc
xchg
pop
and
jp
jg
add
jns
mov
mov
jne
xor
cmp
inc
popf
in
xor
xchg
shrb
in
dec
loope
cmp
xchg
nop
push
scas
into
in
cmp
sub
push
cltd
in
nop
outsl
fwait
test
cwtl
je
xchg
je
fiadds
in
cmp
fsubrs
jae
pop
mov
dec
xchg
mov
jno
sub
xchg
mov
shrb
dec
pusha
in
and
mov
xchg
sbb
mov
rclb
scas
mov
sbb
stos
add
notb
clc
test
xchg
mov
cmpsb
jno
insb
inc
addr16
xchg
mov
xor
pop
popa
inc
cmp
push
aaa
or
push
ss
fucom
add
scas
inc
mov
and
cmp
cs
test
in
mov
jmp
repnz
sub
mov
push
mov
imul
sub
mov
pop
xchg
mov
fnstsw
sub
icebp
adc
mov
pop
les
cmp
add
test
inc
test
cmp
rcll
mov
fistpll
add
in
jp
pushf
insb
mov
das
cmp
test
pop
shlb
mov
cmpsb
ds
add
adc
imul
or
pop
idivb
imul
sub
out
and
out
dec
imull
cmp
sub
sub
push
out
jmp
push
mov
add
scas
fists
mov
adc
xchg
adc
aaa
iret
pusha
adc
mov
pop
xor
ja
dec
inc
mov
enter
aaa
pop
add
mov
or
aam
das
cld
fsubl
out
jp
cmp
repz
or
xorb
dec
testl
push
mov
mov
mov
lret
clc
jle
mov
fsubl
testb
mov
mov
out
pushl
nop
or
arpl
decl
jo
jno
dec
das
popa
xlat
das
inc
push
pop
and
push
mov
cmp
adc
fiadds
cltd
push
mov
sub
xchg
dec
and
std
push
add
lret
xor
je
imul
mov
add
xor
mov
fsts
lret
push
or
xchg
mov
inc
enter
add
dec
mov
mov
lods
inc
sub
jmp
add
dec
and
jb
pop
ret
push
mov
mov
loop
pop
dec
fs
pop
xchg
inc
cs
xor
pop
popa
add
xor
shlb
pop
hlt
imul
xor
add
sub
fdivs
fldenv
out
xchg
or
mov
xlat
sbb
ret
sti
fcoms
jb
inc
mov
add
jne
inc
mov
adc
into
insl
dec
mov
loop
test
outsl
fisttps
xor
data16
xchg
in
push
loop
and
leave
pop
lret
and
add
or
in
mov
fnsave
add
call
xchg
dec
sbb
xor
jmp
clc
cmp
rcrl
repz
sti
imul
add
lahf
push
push
sub
int
mov
lahf
jno
push
sub
insb
mov
push
jl
xchg
pop
mov
and
xchg
popa
mov
add
add
aas
mov
mov
mov
or
popf
mov
mov
je
jno
jp
mov
xchg
push
add
lea
xchg
scas
fisttpll
push
add
push
pop
cmp
pop
add
sarb
add
jecxz
cli
pop
popf
push
dec
add
mov
mov
aas
xchg
rcrl
dec
cmc
out
movsl
mov
out
or
and
mov
push
cs
lods
mov
scas
scas
add
sub
dec
mov
add
pop
and
adc
cmp
ret
xlat
out
cmpsb
jo
add
cmp
adc
outsb
js
lret
and
lahf
pop
pop
aas
arpl
rcr
stos
cmc
lcall
inc
inc
push
cld
arpl
jo
cmp
jo
outsb
jae
pop
xchg
test
jmp
mov
jle
push
popf
add
psubd
mov
xchg
stos
cmpb
pop
lock
mov
lods
and
ds
pop
aad
xlat
fs
pop
mov
jp
mov
add
ja
dec
sub
je
add
push
inc
js
fsubrs
adc
mov
movsb
mov
test
icebp
std
rorb
jmp
enter
out
lock
mov
xchg
mov
jo
add
movsb
insb
jge
mov
sti
xor
push
fnstsw
and
add
push
sbb
add
icebp
and
or
sarl
addl
adcb
dec
nop
sub
add
add
vmovapd
cmp
mov
lock
scas
add
sub
push
mov
mov
js
fdivrl
add
xor
lret
sub
insb
adc
lds
add
mov
xchg
sub
or
mov
xor
mov
out
xchg
outsl
iret
incl
jl
or
pop
push
shlb
push
xor
shl
addb
out
movsb
rcll
sub
pop
cld
or
add
call
xor
xlat
xor
and
xor
dec
jmp
fldcw
push
jl
mov
and
jp
add
ret
xor
xor
add
push
cmpb
fisubrl
xchg
lret
loopne
cltd
add
cmpl
fmuls
inc
push
sbb
mov
mov
aaa
add
xchg
mov
push
inc
jo
cmp
notl
lcall
xchg
jle
push
inc
add
insl
mov
cmp
loopne
lcall
fldl
xchg
xorl
scas
aas
cs
xchg
cld
adc
mov
clc
mov
xor
xadd
sbb
and
push
stos
jl
add
mov
xchg
add
adc
rorb
shlb
inc
sbb
inc
pop
jne
and
sbb
jmp
incl
cld
pop
les
adc
add
push
add
pop
es
mov
sbb
popf
pop
sbb
test
and
gs
adc
or
leave
sub
jge
insb
lods
enter
add
pop
jo
stc
bound
das
inc
negl
bound
xor
pusha
xor
inc
push
into
mov
sti
add
mov
jbe
add
notb
and
or
mov
jl
add
cld
dec
add
jp
outsb
pop
shlb
jo
adc
add
mov
test
or
and
movzwl
jmp
adc
cmp
hlt
xor
mov
outsb
loope
xor
sbb
bound
inc
iret
fimull
mov
jb
nop
clc
daa
add
stc
int
es
mov
pusha
mov
mov
daa
mov
out
pop
js
in
mov
outsb
subb
adcl
inc
sbb
push
ror
imul
mov
cltd
add
in
mov
sbb
mov
mov
stc
aad
mov
mov
daa
lret
lods
jbe
in
or
cli
sarb
push
add
mov
xor
arpl
adc
and
das
pop
mov
cli
sub
jns
cltd
inc
int3
adc
out
cli
dec
daa
add
jb
es
mov
sub
xor
mov
sahf
negb
xchg
out
fcoml
jge
fbld
aam
mov
or
jbe
inc
push
jg
dec
fimuls
adc
push
push
ja
out
cmova
pop
and
fsubrs
les
inc
and
sub
jecxz
ret
in
cmp
aad
sbb
dec
pop
rcll
sbbl
scas
mov
cmp
add
mov
outsb
or
push
jno
add
outsl
sti
rol
mov
push
scas
cmp
lods
pusha
dec
dec
push
iret
hlt
add
jecxz
mov
pop
add
std
cmp
sub
fmul
pop
bound
ret
xchg
mov
pusha
mov
or
sub
inc
and
cwtl
jns
adc
fisubl
inc
and
or
add
clc
into
lods
popl
shll
pop
stc
test
int3
iret
adc
mov
adc
aaa
adc
dec
cmp
add
lcall
dec
fisttps
sub
imull
cmp
pop
fcomp
lcall
xchg
gs
inc
loope
and
mov
mov
sub
cmp
xchg
inc
jmp
add
andl
xchg
or
sbb
pop
in
inc
int
pop
mov
push
or
loopne
cld
pop
or
sbb
imul
mov
mov
hlt
jp
jmp
cmpsb
push
xchg
pop
scas
stos
filds
pushf
pop
ljmp
mov
and
inc
inc
call
cmp
rcrb
mov
addb
rcl
xor
int3
sub
xor
push
push
or
xchg
push
adc
test
outsb
jge
add
fwait
xor
loop
add
sahf
stc
lods
push
push
mov
sbb
mov
jnp
xor
mov
pop
cld
ds
add
sbb
mov
sub
out
add
in
dec
sub
xchg
add
cmpsl
jbe
inc
out
or
aad
addl
ds
add
mov
int
scas
mov
ret
shlb
nop
test
xor
jecxz
jl
or
in
push
js
dec
fwait
shlb
add
lahf
and
mov
add
mov
mov
mov
enter
rcl
or
xchg
add
daa
or
pusha
and
hlt
inc
in
mov
popa
sbb
daa
into
sub
pop
fcomps
sbb
adc
outsb
mulb
icebp
pop
sbb
xor
pop
inc
loop
sbb
or
sbb
data16
shlb
insb
inc
pop
imul
adc
and
sub
test
lahf
data16
aas
daa
in
mov
dec
sub
pop
mov
and
jmp
add
pop
outsb
fisubs
hlt
negb
add
dec
pop
mov
leave
and
sbb
or
cmp
fadds
fs
add
inc
outsl
add
sarl
add
add
dec
and
sbb
xor
ss
sbb
and
cld
dec
das
sbb
mov
sub
cmp
push
and
and
bound
add
rcrl
sub
sti
jno
cwtl
pop
pusha
dec
in
loopne
arpl
inc
shl
filds
lods
adcl
xchg
add
sbb
dec
daa
sbb
mov
rcrb
cmp
jnp
sub
stos
in
and
jae
add
mov
out
sbb
out
adcl
fstpl
add
inc
clc
mov
data16
dec
bound
sbb
data16
stos
sbb
xor
int3
and
inc
and
jl
subl
sbbb
rclb
add
les
ficoms
lcall
enter
addr16
scas
fwait
mov
andb
push
cmc
pop
or
add
mov
cmp
cmp
test
push
pop
pusha
sti
add
jne
adc
call
rcrb
insb
cmp
adc
cmpsb
pop
pop
in
xorb
jns
and
inc
xor
sbb
out
xchg
add
push
pop
mov
inc
lods
and
fstl
fiaddl
cmp
xor
xchg
aad
mov
cwtl
jge
lock
rolb
add
jmp
push
cmp
daa
add
sbb
out
push
jns
push
loop
sbb
sbb
decl
mov
adcb
and
fdivs
mov
pop
xor
cmp
adc
loop
arpl
mov
pop
fwait
scas
and
push
lods
push
test
sbb
cltd
and
push
popa
cld
aam
nop
mov
rclb
flds
in
jbe
test
xor
or
xchg
fimuls
fsubr
dec
repnz
cmp
sbb
or
cmp
xchg
ret
movsb
push
test
add
add
in
cmp
das
or
or
jge
es
add
js
stc
loopne
cmp
push
and
pop
mov
and
stos
mov
pop
adc
cmp
adc
aaa
lods
and
scas
push
cmpb
dec
pop
add
mov
ds
into
inc
sar
jg
cmp
push
jo
ja
data16
jp
push
pushf
enter
pusha
add
fiadds
cltd
jns
jo
jmp
mov
inc
in
push
jg
jg
roll
lds
xchg
xorl
pop
push
pop
mov
xchg
add
cwtl
jl
or
faddl
push
xchg
ja
push
outsl
push
mov
adc
jmp
pcmpgtd
shl
cmpl
cmp
inc
fs
jo
imul
add
push
popa
ret
cmp
sbb
shll
in
jnp
jmp
adc
pop
inc
xor
mov
arpl
push
mov
stc
mov
prefetch
add
lret
or
add
dec
adc
shlb
int
adc
int3
xlat
adc
test
clc
cmp
shlb
pop
test
mov
sub
ja
and
add
mov
pusha
enter
jne
rol
mov
or
xor
cs
mov
add
cmovne
or
mov
dec
mov
dec
xor
gs
aaa
xor
sub
pop
xchg
fdivl
sub
fs
add
jl
and
pop
fdivrs
sbb
pop
lret
adc
xchg
xchg
mov
leave
lret
cmpb
and
adc
test
les
jl
daa
cmp
sbbb
inc
andb
jle
fisubrl
aad
cs
subb
dec
xchg
js
ret
test
aas
dec
and
xchg
imul
add
inc
xchg
and
dec
cmp
adc
mov
sbb
shrb
je
push
das
xchg
push
call
fs
and
lret
dec
dec
cmc
je
add
aas
xchg
cmpsl
adc
sbb
mov
dec
enter
add
aam
xor
dec
xorb
call
dec
fldenv
add
mov
stos
cmp
sub
push
shl
jb
cmp
sub
sti
push
movsl
mov
iret
cmpl
xor
divb
add
xchg
arpl
in
jmp
sub
jl
shlb
popa
mov
xor
arpl
jno
mov
faddl
push
and
call
cld
stc
cmp
inc
xchg
pop
outsb
rcll
in
inc
push
mov
sbb
sbb
mulps
add
mov
lret
jle
fiaddl
add
popf
or
filds
or
fcmovnu
dec
rcl
and
std
add
adc
xor
or
mov
xorps
fiaddl
sbb
xchg
pop
add
mov
sub
cwtl
add
inc
fcompl
lahf
push
jb
adc
or
arpl
add
leave
cld
scas
in
xchg
add
clc
mov
xor
lahf
push
ds
stc
loopne
sub
in
inc
pop
push
push
sbb
int
popa
add
lods
add
fimuls
in
es
sahf
addb
ret
aad
pop
mov
js
adcl
pop
push
pop
adc
add
fwait
cmp
cmp
push
mov
cmp
mov
fnstsw
xor
cmp
dec
mov
jnp
jl
inc
add
xor
ljmp
aaa
pop
xchg
mov
add
sub
in
cmp
or
rcr
ret
adc
stos
xchg
pop
add
bound
inc
shufps
rclb
setae
and
mov
cld
mov
mov
pushf
jnp
add
sub
pop
lahf
jae
mov
aad
jg
pop
sbb
sub
ljmp
pop
add
cmp
adc
sbb
or
data16
fdivr
lock
mov
and
xchg
mov
and
cld
pop
add
int3
sub
jo
js
repz
mov
pop
or
inc
and
mov
jg
scas
out
pop
push
cmp
sub
testl
inc
add
sub
and
pop
xor
adc
adc
shrl
ljmp
adc
cmp
add
inc
push
add
shrb
inc
push
push
dec
pop
or
fs
sub
imul
adc
outsl
dec
and
jg
repnz
mov
jmp
sub
mov
enter
xor
or
and
jb
rclb
stos
xchg
shlb
cmc
sbb
pusha
adc
addl
mov
mov
adc
sub
pop
icebp
lods
xor
mov
jae
or
inc
xchg
hlt
or
shr
pop
mov
int
cld
pusha
in
fsts
or
add
and
hlt
cmp
into
shrl
mov
push
adc
sbb
adc
lcall
addr16
pushf
aaa
fists
shl
imul
inc
call
fistpl
xchg
lods
mov
cmpl
cs
cmpsl
add
leave
push
adc
addl
mov
add
add
lock
inc
test
and
js
cmp
push
arpl
cwtl
or
and
test
ja
adc
pavgb
push
pop
outsl
fildll
sub
stc
pusha
insb
js
loop
mov
add
mov
mov
xchg
sahf
sub
add
push
inc
out
push
lds
add
testb
sbb
hlt
scas
test
dec
cmp
inc
mov
or
mov
xlat
sub
mov
rcrb
lods
add
js
mov
push
or
mov
mov
movsb
in
dec
pop
cmp
mov
xchg
loope
in
sbb
in
imul
pop
pop
sbb
bound
pusha
sub
cmp
xchg
lret
in
stc
jnp
xchg
bound
xor
jl
sbb
push
lcall
xor
and
scas
loop
in
mov
lods
sahf
mov
mov
mov
dec
push
fs
into
push
pushf
xchg
jo
sub
pusha
xchg
inc
or
out
pusha
sbb
lret
inc
xor
jbe
pop
push
add
imul
sbb
dec
repnz
ss
add
push
pop
fcomps
push
aad
jmp
lock
call
xor
cli
push
adc
sti
sbb
negb
mov
pop
add
cli
add
lock
shl
sbb
mov
test
test
inc
divb
loope
inc
int
inc
data16
push
outsb
push
adc
leave
adc
sbb
fs
incb
stos
push
push
in
push
cs
pop
nop
sbb
daa
mov
cmc
add
sbb
jp
mov
add
xor
cmpsb
out
ljmp
jl
std
mov
xchg
sbb
jne
rorl
add
cwtl
sub
jo
mov
add
fisttpll
xchg
sub
xor
adc
push
xchg
ds
add
mov
add
mov
nop
pusha
leave
inc
outsl
and
add
jl
jno
add
and
jp
jle
iret
push
into
ret
pop
mov
adc
mov
ss
pusha
pop
addr16
add
pop
or
fld
shl
loopne
outsb
sbb
mov
dec
rclb
xchg
sbb
xchg
lret
add
cmp
lock
cwtl
imul
xchg
test
ljmp
adc
loope
push
cmp
xchg
mov
add
dec
inc
jnp
jnp
pop
mov
push
push
xor
xchg
js
add
mov
xor
scas
add
not
nop
pop
icebp
ret
jmp
xor
jmp
mov
and
jns
adc
adc
fldl
pop
outsb
pop
fdiv
and
mov
xor
add
out
out
lock
sbb
add
xchg
adc
or
jecxz
xor
pop
add
inc
jg
cmpsb
pop
mov
iret
sbb
movsl
stc
sbb
cmp
pusha
pop
shr
adc
push
sub
nop
add
add
ss
pop
jns
add
mov
rolb
das
push
ja
dec
adc
leave
cmp
ror
js
sub
dec
push
ja
icebp
cmp
mov
add
pop
add
jbe
xor
and
push
cmp
punpcklwd
aas
and
jl
out
clc
aam
outsb
fnstenv
sahf
ja
jg
add
shlb
mov
sub
hlt
in
inc
stc
sbb
fidivl
add
sub
xchg
jae
adc
rcrl
shl
adc
xadd
addr16
pop
mov
lea
inc
add
add
push
and
lahf
add
outsl
jns
cmp
insl
add
lds
out
fdivs
add
mulb
jo
push
add
cmp
add
pushf
mov
fcmovnbe
add
loopne
int
pop
sub
fldl
xchg
mov
insb
pop
lret
jb
repz
rclb
shlb
in
leave
jl
add
cli
nop
enter
inc
jl
jae
loopne
jb
fstps
and
sub
adc
popf
mov
mov
add
sbb
push
outsl
xor
arpl
push
and
popf
pop
mov
orl
test
es
cmc
jle
add
sbb
imul
lcall
sbbl
lcall
xor
adc
add
shrb
aas
repnz
add
jo
mov
xlat
cwtl
mov
cmp
fistpl
add
pop
pop
mov
sbb
mov
add
pop
test
adc
rcrb
lods
jmp
mov
xchg
in
add
inc
mov
orb
adc
inc
mov
imul
mov
pop
inc
ret
sbb
fnstcw
imul
mov
or
stos
fldcw
xchg
pop
jae
inc
adc
xchg
enter
lea
xchg
push
out
mov
cmpsl
push
mov
ss
fwait
rcrb
or
dec
xchg
in
pop
into
mov
adc
enter
rcrl
inc
pop
mov
mov
mov
mov
mov
sub
xor
mov
xchg
icebp
mov
adc
fdivrl
inc
cli
std
push
xchg
cltd
adc
cmpsl
insl
shlb
inc
sbb
add
sub
nop
imulb
pusha
xchg
mov
mov
dec
iret
rolb
and
in
dec
push
jae
sub
mov
add
push
add
push
and
jle
pusha
pop
pushf
sbb
testb
jno
sub
enter
fisttpll
inc
jge
call
lret
add
stc
movsl
repnz
mov
fildl
inc
add
dec
test
dec
xchg
imul
jno
insl
fldenv
and
add
xor
loope
add
std
je
sbb
cwtl
lcall
add
stc
leave
inc
jmp
add
inc
xor
call
sub
and
cli
pop
xor
stos
clc
cmp
jo
cmp
adc
push
mov
mov
xchg
cmp
fsubrs
cmp
aad
xchg
ljmp
shrb
jle
cmp
adc
orl
xorl
add
clc
and
adc
cmp
xchg
mov
outsl
fchs
inc
stos
push
popf
add
xor
dec
mov
imul
ss
push
rolb
jp
andnps
lods
mov
add
repz
mov
das
add
push
jecxz
jp
cmp
mov
hlt
sbb
test
and
mov
jge
pop
js
cmpsl
sub
and
or
add
cmp
mov
test
mov
add
aaa
sub
add
out
sbb
iret
out
pop
lret
xor
mov
sbb
mov
scas
cmp
dec
add
bound
inc
icebp
js
add
adc
test
loopne
cmp
adc
mull
mov
push
dec
rcl
into
sub
sarl
imul
mov
shl
bound
push
xchg
adc
out
movsl
in
inc
sub
fisttpll
mov
inc
pop
movsb
jne
out
repz
mov
ret
pop
fs
mov
cmc
and
clc
add
pop
cmp
add
push
cmp
push
popa
shl
aam
nop
insb
inc
adc
mov
add
in
mov
arpl
and
jae
add
mov
lret
pop
xchg
inc
or
pop
and
out
enter
sub
mov
dec
mov
lds
rorb
fdivrs
jp
dec
jo
rolb
icebp
fimull
pop
clc
mov
inc
sbb
add
xchg
xor
mov
add
out
shrl
nop
pop
popf
or
add
test
adc
mov
daa
mov
push
mov
into
cmp
stos
mov
aaa
rolb
lea
sbb
jecxz
test
mov
jle,pn
mov
or
cmp
jmp
adc
arpl
nop
lds
je
add
sbb
add
divl
cld
push
dec
and
cmp
sub
movsb
dec
loopne
inc
add
pusha
aam
rcr
or
jo
cld
mov
sub
outsl
test
or
add
mov
clc
mov
adc
outsl
rol
push
pusha
cmp
in
loope
pop
push
int
pop
lods
push
push
add
ds
jle
jp
xchg
popa
pop
cmpl
rorb
cli
jmp
push
and
enter
add
cvtps2pi
ja
ret
out
mov
sti
mov
aas
stc
add
fldcw
pushf
ja
mov
push
ds
mov
in
adc
xlat
cmpsl
int
mov
xchg
movsb
mov
dec
pop
add
cmpsb
int3
push
jns
inc
stos
push
xlat
or
aam
mov
int
jbe
jp
add
out
and
add
hlt
fbld
cmp
or
out
jb
lods
sbb
sbb
fidivrs
push
and
jne
xchg
jnp
sbb
add
jb
push
rolb
enter
and
adc
lret
add
inc
xchg
and
add
xchg
hlt
adc
movsb
clc
cwtl
sbb
bound
aam
xor
insb
or
call
sub
aad
lret
popa
sub
gs
cmp
mov
inc
outsb
fsubrs
into
lret
mov
add
cwtl
dec
jae
mov
xor
add
adc
mov
mov
xchg
sahf
xor
add
adc
cmc
xchg
cwtl
addl
out
clc
jbe
add
shl
aam
in
rolb
stc
cltd
add
icebp
andb
dec
add
sbb
fistpl
hlt
adc
pop
xchg
lods
sarb
inc
roll
push
std
dec
ss
xor
cmp
das
clc
lret
idivb
adc
pop
add
sahf
sbb
pop
ja
sbb
fdivp
cmp
add
jns
pusha
adc
fs
pop
mov
push
push
add
mov
out
popf
iret
std
add
mov
inc
push
adc
add
dec
xor
aas
call
xor
scas
add
mov
jge
icebp
fiaddl
mov
movsb
mov
je
add
xor
push
jl
sub
es
incl
dec
insl
pop
test
cmpsb
push
shlb
ss
lock
jp
ret
pop
mov
mov
loop
jmp
scas
adc
rorb
sbb
add
dec
jmp
mov
mov
dec
push
repnz
mov
pop
xchg
es
loope
and
addr16
sbbb
cmp
ja
lods
cli
add
push
inc
rorb
xlat
add
bnd
fs
mov
test
shrb
movsb
add
push
pop
faddl
pusha
inc
into
icebp
stos
jl
sbb
cmp
testb
inc
and
pop
push
add
shl
out
int
jecxz
aas
jmp
inc
or
fstps
arpl
daa
repz
mov
and
mov
inc
out
fsubs
push
add
into
xchg
jl
dec
cmp
mov
push
shrl
add
lahf
fs
cmp
push
lock
mov
sub
rcrl
push
scas
sbb
and
mov
add
pop
outsl
loopne
and
add
dec
idiv
jp
lret
bnd
xorb
cmp
dec
xor
jge
daa
scas
aam
mov
push
mov
je
cmp
pop
fstl
add
add
xlat
sub
mov
xchg
add
mov
dec
xlat
add
ret
insl
sbb
inc
mov
clc
xchg
mov
pop
dec
xchg
mov
pop
inc
sbb
xor
jmp
adcl
sub
dec
dec
jnp
add
in
cld
out
add
dec
inc
or
incl
pop
adc
adc
cwtl
xchg
add
imul
sbb
cmc
pop
test
jb
adc
and
pop
push
pusha
jle
or
jns
sub
ds
test
popf
shrl
call
jl
inc
pop
out
fstps
iret
clc
mov
xchg
xchg
mov
cmc
mov
cmp
in
psubb
or
pop
andb
xchg
add
add
xor
add
mov
or
jne
add
mov
aam
sbbl
addl
jne
loopne
ret
sbb
in
pusha
xor
adc
sbb
add
imul
stc
pop
mov
das
test
pop
add
xor
in
fdivrl
es
dec
js
dec
mov
stc
pop
je
xor
cmp
js
add
notl
or
adc
test
or
cwtl
in
dec
adc
add
jecxz
loopne
or
add
inc
mov
hlt
sub
dec
jl
or
dec
add
pop
mov
push
add
inc
jb
dec
fwait
imul
shlb
inc
push
jge
push
mov
adcb
sub
cmp
lahf
out
or
inc
loopne
idivl
loope
inc
mov
pop
in
out
lcall
push
adc
pop
add
int
movb
outsb
shl
outsl
stos
sub
add
mov
xchg
or
ljmp
mov
fmulp
sub
pushf
mov
lock
cmp
shrl
pop
add
out
lods
mov
sbb
inc
insl
jmp
in
rcl
mov
iret
adc
sbb
mov
in
adc
fs
add
gs
and
nop
mov
mov
jle
iret
and
mov
jle
jecxz
xor
inc
call
adc
cmp
xchg
pop
into
add
fisubrl
sub
or
mov
add
and
mov
push
bound
imul
icebp
pop
sub
rclb
push
mov
clc
mov
loopne
add
xchg
je
mov
fisubl
push
fstp
out
out
xchg
in
jmp
pop
mov
pushl
cwtl
and
jge
repnz
and
xchg
popa
mov
mov
dec
or
or
mov
cwtl
test
add
adc
in
pop
stos
dec
into
dec
imul
enter
sbb
dec
jno
orb
xchg
cmc
mov
mov
stc
sub
cmpb
sahf
lret
jnp
xor
cld
lods
cmp
int3
inc
bound
mov
pop
lods
jmp
push
shl
andb
or
push
add
leave
xor
cmp
ret
adc
test
sbb
and
xchg
mov
es
and
fstpt
sub
jp
xor
dec
pop
add
xchg
lds
dec
rcrb
push
sub
mov
frndint
push
add
pop
inc
dec
ss
push
xor
add
pop
xchg
jo
and
out
pusha
cmc
add
test
insb
add
and
mov
std
mov
or
and
aas
fimuls
insb
sti
lret
cmpb
ret
jo
add
out
mov
add
mov
dec
dec
rorl
in
jno
test
lret
stc
and
push
dec
xorb
add
xchg
mov
mov
jnp
fwait
add
fisttpl
lods
jae
push
pop
shlb
pop
shlb
pop
xchg
or
fs
jbe
xor
popa
test
sarl
lds
jge
and
sbb
lods
repz
cmp
ret
test
lcall
lock
aam
int3
pop
mov
pop
cmpsl
mov
imul
xor
jle
xor
mov
cmpsl
or
rclb
loope
jns
stos
or
stos
add
inc
mov
pusha
dec
push
loopne
cs
incb
mov
add
xor
movsb
dec
inc
xchg
outsb
ja
pusha
clc
cwtl
add
cmpsb
sbb
add
sub
ja
inc
stc
movl
push
push
or
test
add
fcom
enter
cmp
xchg
add
cmp
add
cs
rclb
in
pop
rcrl
sub
out
mov
xchg
mov
out
les
addb
dec
in
inc
jl
xchg
adc
push
fadds
adc
imul
pop
orl
lock
notl
loopne
add
fwait
andl
int
scas
push
jns
and
hlt
inc
pop
add
nop
insb
sbb
pop
add
jno
sub
push
push
lret
add
or
stos
inc
popa
jl
nop
add
add
jb
mov
hlt
fcoms
pop
lods
add
nop
xor
enter
push
inc
add
sbb
out
imul
push
dec
jb
hlt
mov
nop
mov
inc
hlt
xor
and
pop
scas
add
lahf
fcomi
add
icebp
sahf
enter
sbb
pushf
movsb
in
sti
lods
cmp
test
test
nop
add
push
clc
fucomi
dec
jne
add
popa
xor
ds
cmpsl
pop
push
aas
lock
cmp
or
loope
fcomp
mov
add
scas
inc
cmp
sbb
inc
pop
or
xchg
rclb
add
jb
xchg
testl
adc
notl
add
int3
into
loopne
cmpsb
cli
outsl
jno
add
adc
dec
push
adc
push
sub
dec
push
out
rolb
cmp
inc
sub
enter
pop
ret
sub
cs
out
in
dec
inc
xorb
and
aaa
dec
jae
push
pop
iret
and
outsb
push
xchg
pop
popa
add
lahf
adc
mov
rclb
out
dec
cld
add
pminsw
pop
inc
and
test
fmull
push
in
mov
rolb
pop
testl
pop
sub
jo
cwtl
pop
push
mov
adc
lea
cmp
sbb
xor
mov
push
js
fdivrl
outsl
adc
aam
fdivrs
push
and
xchg
sbb
xchg
outsl
mov
cmp
mov
xor
je
daa
mov
mov
adc
in
pusha
lock
add
dec
mov
packssdw
jecxz
insb
mov
inc
xchg
sbb
cwtl
push
les
pusha
shlb
mov
pop
mov
pushf
xchg
pop
loope
scas
mov
std
loopne
pop
movsl
mov
subb
cmpsl
or
mov
pop
mov
das
jno
adc
and
or
inc
lock
rolb
js
add
inc
mov
adc
add
fsubs
inc
or
rolb
add
sub
mov
nop
xchg
add
jle
jmp
pushf
sahf
into
sbbb
scas
fildl
lret
pop
pop
and
pop
xchg
push
das
dec
pusha
popf
pop
jge
push
or
into
add
insb
icebp
sub
hlt
adc
inc
shrb
push
lock
lcall
int
adc
push
ret
push
mov
ret
insl
adc
je
stc
cltd
loope
inc
hlt
pop
test
loopne
rol
rcrb
loopne
inc
and
push
and
scas
add
shlb
cmpsl
shrl
aam
add
cwtl
flds
xchg
pusha
dec
xchg
sbb
rcrl
subb
and
fcmovbe
clc
xor
inc
shl
inc
mov
add
push
dec
cs
lahf
sub
mov
cmp
mulb
clc
or
movsl
nop
and
stos
insl
dec
add
popf
cmp
sub
int3
jp
xor
scas
pop
cmc
inc
adc
push
xlat
mov
xor
in
shrb
jg
sahf
into
or
pop
inc
icebp
cmp
push
mov
add
hlt
mov
call
testl
cmp
ja
iret
add
sub
rcrb
xchg
add
lods
xor
into
sahf
imul
mov
pushf
xor
daa
pop
roll
out
add
dec
cwtl
cmpsl
test
push
add
cmp
dec
mov
or
or
cmp
add
mov
in
cmc
int3
pop
sti
pop
outsl
mov
rolb
add
shl
testl
xchg
in
stos
mov
mov
mov
mov
bound
xor
out
sbb
sarl
pop
lock
inc
or
and
mov
dec
push
xchg
sbb
add
cwtl
cmp
jp
js
ss
hlt
enter
jmp
add
adc
or
mov
pop
mov
sub
jecxz
add
ficoms
call
outsb
mov
push
inc
pop
adcb
add
nop
dec
push
dec
cld
mov
outsb
in
pusha
push
cmp
cwtl
adc
cld
mov
popa
mov
mov
push
sub
cwtl
addb
mov
push
xor
add
les
push
xor
stc
add
or
fs
ds
ret
cmp
faddl
jg
push
fistpl
rclb
out
xor
mov
mov
mov
sub
icebp
sub
int
push
js
xchg
push
lds
and
mov
ret
ljmp
mov
aas
js
push
mov
lahf
mov
adc
call
cmp
rclb
cli
popa
shlb
js
mov
push
add
add
cmp
jne
dec
clc
sbb
addr16
mov
mov
psrad
cmpsb
add
js
pop
add
adc
pushf
imul
sbb
gs
jb
add
int
jecxz
sub
mov
dec
push
jmp
lods
add
arpl
cmp
addb
pop
pop
leave
movsb
add
sub
mov
sbb
lret
xorl
add
sbb
and
adc
cmp
xor
xor
iret
lea
sub
jle,pt
sbb
xor
push
mov
test
incb
inc
mov
ret
mov
add
xor
js
sbb
movsl
fnsave
add
pop
pop
push
dec
cmp
add
sbbb
jle
jl
mov
add
add
stc
or
add
push
jo
pop
jl
push
addl
frstor
add
xchg
in
pop
adc
fmuls
pop
add
int3
movsl
and
cmc
adc
and
movsl
in
or
pop
lcall
fwait
and
int3
adc
call
add
adc
movsl
and
xchg
int3
lods
push
sub
mov
cmp
and
pusha
xor
xchg
lret
jo
add
pand
outsl
mov
scas
std
add
add
cmp
cmp
xchg
loope
pop
xor
rolb
jp
jecxz
mov
xor
sub
xlat
xchg
mov
sub
add
and
adc
pop
shlb
or
sbb
cmp
and
lret
sbbb
jp
add
mov
pop
mov
xorb
jmp
dec
in
mov
cld
add
pop
add
std
adc
rolb
in
jge
dec
xchg
fnstenv
push
test
fs
mov
rolb
test
mov
outsb
cmp
nop
gs
push
mov
call
orb
test
lock
sbb
das
psubusb
pop
addb
insb
loopne
flds
xor
sbb
std
push
mov
sub
mov
mov
cmc
add
sub
jns
cwtl
or
pop
rcrb
add
lods
icebp
loope
shlb
add
call
out
sbb
dec
add
popa
mov
add
mov
or
jae
and
mov
not
mov
pop
clc
add
repz
data16
inc
nop
mov
pop
aaa
dec
rclb
xor
lods
add
into
fiadds
jmp
ret
mov
xor
lock
push
inc
decb
or
jbe
cmp
gs
aaa
xchg
mov
mov
xchg
mov
or
jo
pop
add
cmp
inc
rorb
jmp
stos
jp
sub
cmp
add
nop
mov
lock
cmp
in
sbb
cmp
push
outsb
inc
xchg
or
dec
push
sub
enter
ret
push
je
cmp
lret
daa
hlt
push
push
sti
dec
xchg
xor
imull
jg
dec
pop
pushl
add
ret
mov
stc
cwtl
sti
loopne
push
xchg
add
push
xchg
add
sub
add
outsb
push
aam
lret
pop
in
xorb
push
adc
adc
or
adc
xchg
je
loop
add
testb
inc
lods
and
add
mov
pop
xchg
fcompl
add
bound
push
in
test
add
lret
sub
push
lock
mul
in
pop
add
sbb
and
negb
roll
and
mov
adc
pop
arpl
ljmp
aad
adc
lock
call
fldcw
or
test
jo
adcb
cmpsl
jb
mov
loope
or
sbb
shll
sub
adc
je
jb
cmp
mov
rorl
pop
pop
push
gs
push
popf
lock
mov
adc
cwtl
xlat
int
push
stc
xchg
add
dec
xorb
lret
add
or
or
jg
jmp
dec
push
fwait
inc
daa
mov
dec
or
pop
shl
fildl
lock
xchg
call
lds
outsb
xchg
add
addr16
loope
sub
test
repnz
pop
add
popa
cmpsb
add
les
add
cmp
jmp
insb
aam
clc
popa
add
xchg
adc
mov
divb
push
mov
xchg
sbb
xor
push
fs
fwait
mov
pop
insl
xor
fimuls
ds
mov
stos
cli
iret
and
mov
adc
xchg
and
insb
and
and
aas
sub
xorb
loope
jns
push
add
cli
xor
mov
push
mov
into
test
lcall
inc
cmp
add
xchg
sbb
inc
sub
shlb
jle
sarl
sub
nop
mov
or
add
idiv
xchg
lods
cli
or
adc
adc
adc
clc
cmp
sbb
xor
lds
add
decb
push
mov
inc
jmp
dec
and
bound
push
dec
sti
outsb
add
sbb
fildl
sub
nop
insb
fiadds
stos
cmc
or
rorl
pop
in
dec
adc
add
lahf
scas
roll
inc
push
mov
pop
sbb
and
js
lahf
adc
es
ret
pop
inc
sub
out
or
imul
mov
outsb
pop
inc
ljmp
int3
inc
roll
add
out
pop
xchg
iret
ret
imul
popf
mov
test
dec
pop
dec
mov
jbe
xchg
add
push
push
in
sub
into
add
add
rorl
pusha
sbb
add
sub
dec
add
xchg
xchg
sarl
jge
setge
xor
cmpsl
lcall
mov
bound
jg
push
inc
out
lea
hlt
cmpsb
add
mov
ret
mov
inc
loopne
and
sbb
add
imul
add
ret
inc
pushf
xchg
nop
pop
xor
add
ss
and
push
add
mov
xor
xchg
add
repz
mov
sarl
shlb
fwait
pop
mov
inc
jno
mov
sbb
mov
add
sbb
mov
loopne
jno
mov
repz
int3
and
mov
inc
notb
sbb
mov
icebp
xor
je
daa
sti
mov
pop
xor
fiaddl
enter
add
xchg
imul
push
xchg
cmp
in
incl
dec
cmpsl
xor
inc
inc
icebp
shrl
mov
sub
jge
outsb
xchg
dec
pusha
and
rorl
loopne
jg
add
ret
in
or
add
push
mov
nop
imul
add
addr16
addb
inc
popf
sbb
ficoms
scas
cwtl
jb
add
push
push
ja
add
pop
or
scas
push
dec
testb
adc
ljmp
push
inc
les
out
and
add
std
cmc
xor
ljmp
add
ss
cmp
ja
mov
xchg
add
mov
loop
jb
enter
ret
out
dec
add
jl
push
loop
mov
dec
sbb
and
jo
xchg
add
lock
je
jb
xor
pusha
add
dec
cmpsl
mov
mov
add
loopne
stc
jno
aad
add
mov
jg
xchg
add
imul
and
insl
mull
dec
mov
js
popf
nop
pop
xor
push
test
jmp
int3
mov
add
mov
xchg
push
pusha
jbe
out
and
push
jg
ja
pushf
psrad
idivb
jb
mov
add
mov
out
mov
or
fldcw
ror
add
adc
push
add
int3
fmuls
movsb
subb
mov
test
add
out
iret
push
rorl
fcoms
push
dec
mul
mov
mov
add
sbb
int3
lcall
sbb
fs
mov
pop
xor
mov
or
cmc
lahf
cmpb
add
fcmovb
clc
pop
mov
cmovs
add
ss
mov
out
add
mov
cmpsl
dec
dec
jp
jle
ljmp
out
mov
ja
sbb
and
clc
popa
and
arpl
jo
push
out
jne
mov
hlt
shll
or
xchg
jle
mov
or
aas
lods
xorl
cmp
fs
cmp
repnz
xchg
orb
adc
pushf
jmp
xor
jl
stos
inc
and
insb
pop
or
add
mov
inc
fistps
mov
or
pop
mov
inc
mov
int3
movsb
xor
aad
testl
adc
xor
loopne
sub
jno
dec
adc
mov
lea
fdiv
mov
sub
imul
mov
cmp
ret
enter
pop
add
inc
ret
pusha
add
xchg
jge
jb
fcomp
push
and
add
add
push
cmp
add
mov
or
jo
faddl
sub
fwait
sbb
jg
push
ja
cld
in
insl
xchg
loopne
lret
jnp
push
ficoms
push
inc
xchg
adc
data16
cmp
xor
add
shlb
dec
sub
testb
cmp
les
inc
mov
shlb
and
rorb
push
jne
pop
jl
pusha
jno
xor
sbb
in
cmc
adc
sub
jl
mov
mov
or
jl
sbbl
dec
inc
cmc
rolb
jnp
pop
fnstcw
mov
mov
fisubrl
popa
inc
dec
rorb
and
dec
or
dec
adc
movsl
add
pop
data16
shlb
xchg
sub
pop
dec
rorl
add
lcallw
sbb
adc
lods
mov
jge
xor
or
push
jne
add
jle
pop
outsl
addl
lahf
jmp
add
inc
je
rclb
pop
vmwrite
sti
sbb
lods
ljmp
syscall
or
ja
jns
adc
adc
lods
lcall
std
fidivrl
mov
pop
inc
add
add
loope
jno
popa
loop
jo
loopne
jecxz
or
dec
lods
fstps
cld
add
or
pop
loopne
in
add
sbb
loop
dec
add
dec
jle
inc
mov
lods
test
fidivs
lea
fildl
inc
mov
rol
mov
jp
add
add
and
push
test
xor
pop
inc
pushf
and
jg
mov
dec
jbe
test
sub
push
add
sbb
dec
adc
pop
push
shr
out
add
xchg
lods
repnz
leave
mov
stos
adc
xchg
jne
sub
lret
push
aaa
insb
or
js
adc
das
jno
add
addl
and
into
inc
ret
jmp
pop
leave
mov
xor
sbb
test
rorl
sub
cwtl
in
negb
jbe
enter
out
and
inc
push
cltd
leave
in
or
add
cli
xchg
push
int3
inc
add
jg
cmp
and
div
add
je
out
addr16
clc
pop
jne
rorb
mov
ljmp
add
add
adc
mov
cli
ljmp
ret
and
add
mov
cmp
mov
in
lods
and
cmp
bound
add
dec
mov
add
out
fdivrs
shl
test
int3
and
lahf
add
bnd
or
mov
add
ss
arpl
insb
daa
mov
add
xchg
lods
in
in
xchg
jae
add
pop
push
fwait
dec
add
insl
flds
dec
and
sbb
jp
cmp
dec
pushaw
xchg
add
push
ret
inc
icebp
and
pop
or
xchg
fstpt
jne
out
loop
cli
add
inc
mov
dec
pop
pop
xor
mov
rcr
sbb
sbb
xor
jo
add
or
xchg
out
dec
leave
rorb
pop
pop
push
mov
add
fstps
subb
js
mov
jb
icebp
cmp
jge
pop
repz
outsb
jmp
add
add
sbb
cld
add
test
add
fimuls
cmpb
add
and
fiaddl
add
dec
ret
xor
add
rorl
sub
addl
popa
jns
adc
out
cs
outsb
int3
xor
mov
inc
sar
push
push
lods
loope
mov
jns
inc
add
ficoml
mov
mov
sti
leave
push
add
push
enter
clc
push
add
test
sbbl
std
shlb
mov
popl
push
push
shrb
shl
jnp
or
popf
scas
inc
nop
xor
fdivrl
cmp
add
add
add
or
dec
addb
push
fwait
outsb
add
inc
push
js
jno
lds
or
add
jg
push
inc
lret
shlb
dec
add
pop
cwtl
cmp
mov
pop
jbe
lods
mov
or
movsb
shl
pop
dec
data16
sti
and
inc
jb
jne
cld
sbb
add
jno
adc
cmp
or
fmul
enter
in
lods
loop
push
ljmp
js
sbb
add
mov
jo
lahf
outsb
aas
fdivs
rolb
test
cmp
push
push
mov
out
repnz
pop
or
ret
js
mov
lret
dec
push
insl
add
mov
jo
pop
xchg
sahf
lcall
jae
mov
dec
adc
jmp
int3
sarb
sbb
add
jo
inc
lock
cvtps2pi
mov
xchg
pop
cmp
loop
mov
lcall
inc
jne
ljmp
outsl
xor
jae
cmp
out
add
lret
js
inc
cltd
roll
ljmp
enter
repnz
push
push
out
lods
mov
add
add
fsubrl
addr16
pop
dec
push
add
fildll
into
or
dec
xor
add
fsub
cli
adcb
out
out
loopne
push
jns
jmp
and
mov
add
dec
adc
mov
cmp
cmp
xchg
dec
add
jecxz
jle
fcmovu
rorl
add
jns
lods
into
notl
inc
insb
nop
xchg
jae
shll
sub
add
cmp
in
popf
cld
pop
out
leave
xchg
mov
mov
nop
insb
add
cmc
roll
adc
cmpl
sub
sub
jnp
add
loope
cmp
push
inc
cmc
ss
mov
fcompl
add
fimull
faddl
aaa
daa
xorb
js
add
xchg
add
mov
xor
icebp
sahf
or
loope
jl
frstor
dec
and
adc
add
int3
cmp
mov
and
addl
xchg
mov
add
jmp
lods
mov
xchg
fs
out
iret
insb
jo
in
movsb
aam
cmpsb
in
and
ss
std
incl
lret
les
js
xchg
xor
call
or
jl
push
mov
xor
mov
dec
loop
mov
pop
mov
aad
jae
cmp
add
cmp
fistps
aaa
int
and
adc
ret
pop
data16
push
mov
inc
ss
addr16
add
adc
push
out
add
mov
inc
cmp
xor
sbb
cld
sub
lret
fiaddl
pop
xor
adc
hlt
sub
in
roll
xchg
adc
add
adc
inc
nop
cmp
mov
cmpsb
pushf
sub
jl
mov
inc
and
add
sub
lods
inc
add
cmp
adc
sub
push
out
divb
inc
test
xchg
inc
add
or
add
ds
dec
clc
xlat
push
inc
arpl
add
or
mov
fidivrl
and
hlt
pop
movsb
add
enter
mov
jo
add
pop
pushl
repz
psubw
inc
pushf
mov
jno
popa
xchg
aam
jne
outsb
pop
out
and
scas
lret
add
mov
inc
test
test
push
out
movsb
or
add
push
xchg
pop
xor
push
xchg
add
dec
test
pop
pop
lds
movsl
xchg
mov
mov
pop
adc
mov
repz
mov
aas
mov
sub
orb
mov
add
pop
ret
iret
jmp
mov
add
insl
outsl
mov
push
rolb
jle
push
movsb
shl
mov
push
or
cs
pop
add
xrstors
cmp
sbb
into
push
xchg
nop
nop
insb
sbb
pop
mov
ficoml
cwtl
lock
cld
push
pusha
fsubr
or
add
add
mov
outsb
jo
add
mov
ljmp
inc
pop
iret
cltd
ds
add
sub
xor
pop
add
aaa
or
lahf
mov
add
movsb
ljmp
mov
inc
std
xor
cmp
lret
jl
inc
or
and
andb
sbb
jae
mov
insb
sub
push
inc
popf
insl
dec
sub
orl
sub
or
loop
mov
aaa
pusha
in
inc
add
loopne
add
jnp
xor
add
add
pop
mov
es
inc
orb
xor
cmp
adc
sbb
sub
sub
lods
xchg
aaa
add
dec
inc
pop
jnp
mov
imul
movsb
add
sbb
mov
sub
and
xchg
mov
sahf
cmp
in
aad
add
push
cmp
pop
lahf
push
add
pop
je
test
add
setb
xchg
add
or
inc
cmc
mov
sbb
mov
add
pop
dec
mov
imul
add
jns
add
cmp
cwtl
popw
verr
mov
jns
add
int
push
mov
or
cmp
pop
call
or
ret
push
iret
pop
hlt
daa
pop
hlt
push
ret
outsb
fwait
mov
add
cmp
cwtl
or
xor
add
pop
aas
dec
lods
cli
mov
and
pop
pop
insb
mov
out
dec
sbb
std
jb
and
test
jne
fcoms
push
in
push
add
data16
or
pushf
hlt
push
testb
or
mov
addb
inc
add
fistpl
xor
bound
and
repnz
leave
cmp
nop
or
pop
sub
sbb
scas
sarb
fists
and
or
jnp
pop
sub
dec
cltd
sbb
shld
pop
dec
int3
leave
push
jb
pop
movsb
sub
pop
lahf
orl
rep
add
xchg
mov
adc
mov
rorb
xchg
ja
shrb
push
add
dec
mov
jne
arpl
orl
pusha
push
or
daa
popa
std
dec
mov
dec
xor
inc
mov
mov
or
lret
add
add
push
cltd
cmpsb
out
js
enter
ja
push
sbb
stos
add
scas
xor
ficompl
lock
inc
negl
mov
add
sbb
sub
mov
adc
ret
clc
jne
arpl
pusha
lahf
dec
jg
add
push
lret
push
push
test
ret
dec
pop
sub
mov
clc
pusha
cmp
push
iret
mov
sbb
cwtl
fildl
sub
jmp
loopne
or
fxch
pop
xchg
pop
ret
lods
add
jmp
inc
js
inc
add
in
addl
mov
adc
push
jb
pop
lock
repz
add
inc
movsl
test
call
cli
add
mov
aaa
pop
movl
push
cmp
xchg
add
cmp
inc
lock
and
sbb
imul
ja
xor
aas
mov
mov
pop
std
dec
dec
stos
add
addr16
xor
xor
loopne
add
loop
jbe
aaa
xor
push
hlt
sarb
xchg
std
jo
icebp
mov
mov
shl
mov
js
and
inc
jg
popf
imul
cmp
mov
inc
mov
add
sub
or
jbe
bound
arpl
test
mov
fildll
sarb
add
mov
in
repnz
imul
insl
js
mov
push
jo
scas
and
or
sub
xor
mov
nop
push
xchg
pop
addr16
adc
fdiv
je
nop
in
cmp
rolb
inc
xchg
adc
push
xchg
clc
or
sbb
outsb
xchg
add
cld
inc
cwtl
jmp
stos
push
movsb
mov
sti
ret
outsb
and
lods
add
mov
shlb
int3
cmpb
mov
nop
roll
cmpb
lea
gs
test
fwait
push
inc
xor
pop
testl
out
xchg
out
cs
lds
adc
insb
mov
adc
push
inc
add
aaa
in
mov
pop
les
add
and
pushf
das
gs
xchg
and
shrb
add
push
lret
orl
in
imul
cmc
pop
lret
das
lock
jae
sbb
jne
push
imul
inc
out
andb
add
orl
pop
mov
pop
mov
test
pop
pushl
add
cmp
mov
sahf
pop
dec
add
mov
push
cmp
lret
adc
int
loop
movsb
sbb
xchg
cltd
stc
xchg
adc
sub
shrl
inc
push
insb
idivb
sbb
gs
sub
dec
aam
push
andb
mov
dec
add
jne
lahf
sub
jl
mov
or
pop
push
xchg
cmp
je
les
insl
add
dec
or
add
lret
push
sbb
push
jbe
xchg
subl
iret
and
push
das
imul
cmpsl
xor
fiadds
rorb
lahf
aas
sbb
inc
test
add
fldt
add
in
push
fldl2e
xor
cmp
xchg
pusha
mov
mov
test
adc
mov
add
jbe
push
test
outsl
adc
out
lcall
sub
push
neg
or
cmpsb
daa
test
xchg
out
add
and
hlt
mov
add
jae
loope
rorl
hlt
lret
ret
inc
add
test
cmp
adc
ljmp
lods
sarb
sub
adc
adc
out
mov
add
adc
pop
push
xchg
imul
data16
dec
push
push
xchg
dec
pusha
xchg
call
add
push
mov
sbb
es
in
pop
rclb
mov
cmp
and
mov
add
sub
fsubl
xor
mov
fiadds
mov
scas
dec
add
dec
push
jo
outsl
lods
pop
pop
pop
add
mov
push
sbb
ljmp
jae
cltd
ds
loopne
dec
incb
xor
jge
aaa
xor
movsl
jae
inc
insb
and
mov
xor
mov
xchg
mov
mov
cmp
shlb
mov
add
sub
pop
add
xchg
add
jl
repz
jle
and
icebp
and
push
cwtl
inc
arpl
mov
jbe
into
sub
rolb
and
loope
pushf
test
jl
xlat
or
or
and
cmp
xchg
movsb
rcll
xchg
fmuls
jo
add
push
rcrb
add
adc
mov
inc
add
add
iret
sub
lods
scas
addb
fcompl
outsb
push
imul
fistl
jae
add
mov
out
data16
inc
sub
or
imul
xchg
lds
icebp
push
mov
dec
lods
js
fs
scas
add
add
punpckhbw
jno
add
out
or
xchg
ds
mov
sub
fimull
rorb
stos
lret
sub
cmp
addb
xor
adc
push
add
and
jo
pop
js
jnp
pop
add
imul
ret
dec
data16
jbe
xchg
add
sahf
cld
jno
add
les
das
nop
movsb
inc
jb
ljmp
rcr
insb
jg
test
dec
jmp
jmp
add
xor
faddl
pop
loop
add
lods
mov
add
inc
cltd
lea
icebp
outsb
imul
inc
mov
add
xlat
dec
orb
ds
cltd
sbb
icebp
shll
add
push
adc
add
and
pop
add
xor
sbb
nop
add
and
push
mov
sbb
add
push
bound
and
dec
daa
call
out
push
mov
fmuls
ror
ss
in
jmp
xchg
loope
add
bound
aaa
stos
mov
adc
mov
sahf
dec
das
pop
pop
lar
cwtl
jmp
inc
sub
fiaddl
addl
xor
ljmp
fbld
out
stc
mov
int
adc
js
out
fimuls
sub
adcb
xor
push
or
imul
loop
xor
mov
dec
repnz
and
std
jbe
pop
add
bnd
fwait
das
dec
and
xor
xchg
mov
cmpsb
pop
rolb
xchg
and
pop
mov
and
inc
push
mov
adc
xor
pop
sar
lcall
jns
push
loop
and
in
pop
loope
ljmp
ret
and
push
rcrb
xor
outsl
repz
jo
mov
adc
adc
addb
js
ja
clc
inc
or
sbb
cmp
jge
add
or
xor
mov
mov
aad
scas
xlat
sbbl
add
je
dec
stos
adc
dec
sub
inc
aas
sarb
arpl
repz
jmp
mov
adc
xor
ret
mov
lock
push
add
aas
repz
pop
lods
add
inc
sub
xchg
push
xchg
add
into
xor
bound
adc
jb
adc
dec
inc
add
ja
xor
add
cltd
arpl
pusha
add
mov
test
in
or
sbbb
fists
jae
mov
jle
or
push
addl
dec
jg
pop
mov
add
push
cmc
add
test
add
pop
cli
mov
push
out
mov
rorl
andl
mov
sbb
add
outsb
shll
mov
jecxz
mov
sub
push
jbe
and
aas
inc
sub
cmp
jp
add
les
mov
imul
pop
mov
xor
xchg
xor
pushf
cmp
sarb
loop
sti
push
add
mov
add
mov
flds
dec
lods
and
lods
add
ret
cmp
jae
add
call
jmp
out
lahf
daa
clc
lret
add
inc
in
verw
jnp
dec
add
daa
mov
ja
cwtl
lods
add
pop
imul
repz
jmp
jne
mov
sbb
int3
lea
adc
sbb
sbb
ss
flds
pop
pop
add
popa
mov
mov
mov
hlt
sti
jo
cmpsb
jno
outsl
je
addr16
jbe
add
jge,pt
push
cmp
add
es
test
in
lret
mov
jmp
pop
inc
xor
js
lret
bound
push
out
roll
cmpsb
xchg
test
dec
inc
sbb
mov
scas
push
incb
aas
xorb
add
in
fs
sbb
push
push
pusha
cltd
inc
ret
out
mov
mov
sub
out
add
ficompl
sbb
orb
push
aas
sahf
pop
add
cmpsb
push
mov
xchg
enter
add
pop
sbb
and
dec
sub
test
push
mov
in
inc
add
fcoml
add
mov
jp
lods
pusha
pop
xor
xor
sub
add
xchg
sub
cmp
and
orb
bound
mov
push
pusha
cmp
cmp
js
mov
lods
add
pushf
fidivrl
std
aas
ficomps
inc
std
inc
xchg
and
call
lea
cmp
adc
mov
inc
inc
push
mov
mov
test
xchg
fsubp
bnd
cmp
icebp
and
adc
add
push
jno
sbbb
stos
adc
lret
pop
test
je
dec
cli
ret
mov
and
push
push
test
cmpsl
in
jbe
mov
sti
je
test
mov
sbb
adc
lea
shl
hlt
mov
fsubs
push
loopne
pop
pop
add
jns
mov
dec
xor
add
shll
jns
add
cld
sti
dec
dec
leave
daa
stc
int3
fdivr
add
in
mov
cmp
add
dec
stc
sub
mov
cmpsb
test
pushl
das
adc
xchg
jp
jl
add
into
and
cltd
push
enter
scas
shll
sub
adc
popa
add
jmp
scas
push
add
fimuls
pop
or
leave
xchg
add
shl
mov
pop
add
or
movsb
mov
mov
in
loopne
mov
push
adc
cvtdq2ps
pop
pusha
push
movl
test
and
jmp
pop
dec
and
add
xchg
xlat
xor
mov
ja
xor
adc
stos
fstl
sbb
adc
cmp
inc
and
add
insb
mov
cmpsl
iret
je
shlb
mov
add
sub
out
mov
inc
jno
add
in
arpl
pop
iret
inc
push
cmp
fsts
add
push
negl
arpl
adc
orl
sbb
movsb
sbb
adc
add
xlat
out
cmp
call
push
in
vorpd
xor
ror
xchg
sbb
test
sbb
xor
mov
mov
adc
mov
nop
jg
inc
cmp
mov
mov
inc
or
dec
lock
insb
add
movsl
jnp
daa
sahf
mov
inc
cmp
test
xor
xorb
mov
test
pop
insb
inc
jecxz
cmp
dec
push
stos
dec
add
std
jbe
into
mov
int
fs
add
ja
xchg
cmp
scas
pop
add
fdivl
xlat
adc
into
data16
cld
dec
or
mov
daa
data16
push
fnsave
mov
mov
mov
add
cmp
sub
push
out
cmp
jl
adc
xor
adc
sbb
fisttps
andl
add
sti
movsb
mov
dec
lret
enter
mov
push
enter
mov
jo
outsl
test
add
fisttpl
cmpsl
xchg
rol
inc
pop
xchg
sub
stos
add
fists
push
aam
add
sbbb
out
cmp
jge
add
mov
add
xor
push
and
dec
add
push
cmpsb
jge
shll
add
mov
in
jmp
cmp
test
andl
add
pop
inc
shrb
out
stos
sbb
mov
outsb
mov
mov
mov
xchg
movsb
sbb
sub
les
inc
fdivr
mov
out
jge
xchg
arpl
movsb
loope
inc
in
lods
push
mov
lcall
aas
mov
xor
lahf
add
mov
negl
mov
nop
or
rolb
push
xchg
add
or
xlat
int3
inc
rclb
pop
jmp
outsl
dec
xorb
lcall
sub
faddl
imul
movsb
rclb
sbb
add
or
in
sbb
sbb
fabs
call
and
xor
in
shlb
push
mov
outsb
loop
xor
addl
jg
das
add
push
jae
xchg
and
pop
movsl
mov
xor
xor
add
call
aam
pushf
fmull
hlt
mov
jge
mov
cmc
inc
jo
mov
dec
std
lea
adc
xchg
jno
leave
cmp
sahf
and
movsb
in
ja
rcrb
out
or
ljmp
test
push
mov
mov
xchg
jge
pop
cmp
mov
mov
add
inc
and
xor
mov
cmp
jo
mov
jo
cmp
subb
mov
adc
adc
movsl
shll
pop
or
or
sbb
fimuls
adc
add
dec
popa
ds
xchg
dec
mov
clc
hlt
dec
cmp
pop
jle
add
jae
mov
rcl
jbe
data16
cmp
cmpsl
mov
add
test
fsubl
mov
adc
pop
mov
fs
add
xchg
call
sahf
add
adc
daa
enter
or
test
sub
xchg
adc
xchg
fnstenv
jbe
cmp
mov
cmp
push
sbb
mov
lods
xchg
mov
add
add
jb
push
add
jo
test
add
pop
fstpt
mov
xor
sbb
bound
in
daa
out
adc
or
les
and
mov
sbb
push
gs
mov
dec
or
inc
test
fwait
mov
pop
jp
jae
inc
adc
pop
push
subb
pop
nop
push
sbb
add
sbb
and
stc
ss
push
cmovns
pusha
cmp
les
mov
test
mov
dec
push
xchg
loopne
fistl
push
mov
add
push
incl
outsb
jns
loopne
push
lcall
inc
nop
or
xchg
test
cmp
push
sbb
ljmp
add
mov
mov
loopne
xchg
adcb
call
mov
inc
add
sbb
int
pop
cmp
sub
jns
jl
cwtl
sbb
adc
jmp
ret
jne
cwtl
loopne
or
bswap
xchg
js
sbb
push
andb
push
or
jo
push
cmpsl
mov
sahf
and
xchg
lods
les
xor
xchg
mov
test
push
or
dec
jns
and
lahf
enter
xchg
pushf
mov
pop
lods
shlb
shlb
lock
add
xchg
jb
stos
mov
mov
adcb
fs
mov
push
ss
enter
add
pop
js
adc
push
mov
lea
nop
xchg
ljmp
std
dec
xor
inc
mov
inc
flds
dec
add
push
pop
in
push
push
fcomps
sub
adc
sbb
notb
mov
ret
cmp
pop
jne
add
xchg
lret
pop
rorb
push
xor
sub
ret
push
pop
lret
dec
sub
inc
pop
inc
nop
xor
pop
mov
sub
cmpsl
push
pop
nop
pop
dec
push
inc
pop
jle
adc
in
sbb
and
mov
sbb
fnsave
xor
out
pop
add
mov
or
ljmp
xorl
push
xchg
insl
pop
inc
xor
ljmp
call
icebp
or
xchg
subb
icebp
xor
adc
or
add
push
dec
pop
fiadds
inc
sbb
pusha
mov
enter
inc
mull
push
cmp
add
mov
xor
repnz
mov
ret
sbb
dec
mov
dec
jnp
inc
loopne
cmp
mov
pop
mov
add
ret
push
enter
in
or
inc
cltd
jmp
lret
jp
addr16
es
mov
lahf
push
mov
and
adc
lahf
addb
push
aaa
dec
jmp
pop
add
add
pop
aas
sub
cmpsb
adc
cmpsl
dec
adc
pop
adc
xor
data16
xor
fsubrl
xchg
bound
push
add
pop
and
mov
addl
inc
jae
mov
nop
sbb
fisubs
add
fs
out
push
lods
adc
inc
cmpb
test
adc
fsubl
dec
mov
inc
int
cmp
pop
xor
or
xchg
fiadds
and
fxch
add
addr16
into
pop
xorl
mov
add
testb
inc
lcall
pop
leave
add
test
pop
jnp
enter
sub
adc
test
dec
arpl
outsl
test
cmp
xorb
rorl
repnz
std
fcoms
or
xor
lcall
add
es
test
in
add
cltd
push
pop
out
daa
nop
pop
outsb
ret
nop
and
testl
outsl
mov
lret
pop
jno
cmp
sub
xchg
cld
lods
movsb
pusha
clc
out
add
sub
inc
mov
iret
sbb
push
out
xor
add
mov
add
rclb
add
mov
cmc
add
outsl
adcb
dec
add
lds
lret
ficomps
bound
cmp
js
mov
mov
call
jge
ljmp
imul
add
pusha
stos
sub
xchg
pusha
mov
adc
dec
int3
lcall
dec
outsb
add
add
test
cmc
and
add
mov
sbb
dec
push
scas
sub
andb
pop
pop
in
push
sarb
fcoml
insb
mov
add
push
in
popf
sbb
mov
add
mov
cmpsb
pusha
fiadds
popa
sub
in
sbb
add
mov
ja
insl
mov
push
push
push
cmpsb
inc
scas
mov
or
repz
jno
or
add
arpl
mov
sti
push
sbb
into
sbbb
xor
les
cmpsl
add
mov
mov
aaa
add
test
icebp
fidivrs
stc
cmp
push
lret
xor
and
addl
imulb
sbb
xor
and
out
xchg
ss
cwtl
or
adc
jnp
add
cmp
out
out
and
sub
testl
xor
rcrb
cltd
cmp
mov
test
dec
mov
in
pop
shrb
scas
xor
add
and
sbb
sub
add
movsl
popf
mov
or
pop
add
adc
cmpsb
mov
gs
fsubrs
lcall
test
dec
pop
into
leave
or
xchg
icebp
pushf
mov
loopne
add
adc
ds
pop
xorb
xor
insb
add
int3
sbb
mov
stos
adc
ds
xlat
mov
nop
xchg
fcmovnb
push
scas
add
add
mov
pop
add
or
jmp
and
les
dec
adc
cld
sbb
cmpl
push
movsb
cmp
das
pop
loope
fdivrp
mov
mov
iret
out
mov
and
fwait
adc
lcall
and
sbb
inc
pop
lds
sbb
rorl
xchg
add
lods
jo
lods
add
push
jno
mov
xchg
add
ds
bound
mov
lds
lods
in
test
xor
jnp
add
lods
mov
or
test
sbb
or
sbb
cmpsb
add
movsb
aaa
adc
cmc
or
enter
pop
mov
out
into
jecxz
mov
inc
repz
fyl2x
lahf
xchg
xor
fcmovnu
popf
jb
jno
xchg
test
jp
add
cld
sub
das
inc
aad
cld
mov
jnp
cwtl
inc
fiadds
cmp
ficompl
stos
sti
jnp
or
cmp
lock
icebp
fstpl
andb
add
lods
adc
jns
add
add
test
enter
add
shrb
jmp
jns
sub
push
inc
in
and
or
dec
mov
insb
cli
add
sar
mov
dec
and
jne
hlt
push
mov
push
push
jle
mov
or
push
pop
and
mull
outsl
faddl
int
in
and
scas
out
ret
xchg
lods
mov
cmp
push
xor
adc
add
jae
loope
cmp
sbb
int
or
mov
shlb
xchg
into
clc
or
cmp
loop
push
mov
add
mov
add
inc
mov
mov
dec
lods
dec
mov
loopne
idiv
mov
hlt
imul
daa
xor
add
add
mov
scas
xorb
cmp
inc
addr16
and
pop
add
pushf
cmpl
and
aaa
mov
test
inc
ret
add
xchg
jmp
lea
sbb
test
scas
lcall
xor
add
push
xchg
add
nop
mov
lret
icebp
mov
add
fldenv
int
ret
jb
pop
xchg
adc
xor
pop
inc
mov
cld
es
test
xor
add
xchg
xor
push
popa
dec
mov
add
rorb
sub
adc
cmp
shll
pusha
push
shlb
xchg
ret
repz
xchg
add
fdivrs
or
pop
or
adc
subb
rcrb
nop
mov
xchg
mov
add
out
xchg
mov
lret
cwtl
xor
mov
mov
aad
or
adc
movntps
mov
mov
push
push
loopne
or
test
adc
xchg
pop
sti
popf
inc
lock
addb
inc
or
xchg
inc
jg
jge
rorl
mov
jns
sub
add
insb
orb
cltd
xlat
pop
rolb
sti
lret
call
inc
xor
cmp
mov
scas
xchg
daa
xor
add
movsb
sti
addb
xor
lock
dec
push
clc
add
jl
scas
mov
in
adc
xor
dec
dec
sbb
mov
cld
test
add
inc
mov
dec
sbb
adc
jns
jo
stos
test
xchg
movsb
int
and
push
ror
popa
or
xchg
cwtl
cmp
xor
sub
cmc
cli
scas
sbb
test
mov
pusha
sbbl
and
cwtl
push
jmp
mov
mov
ret
scas
lret
mov
jno
iret
xchg
jl
std
pop
inc
or
or
dec
sbb
mov
aam
inc
mov
add
mov
add
fnsave
pop
pop
push
jp
daa
jne
hlt
lahf
adc
add
lret
inc
in
pcmpeqb
add
sub
jmp
loop
test
loopne
repnz
mov
inc
sbb
fiadds
inc
out
push
jl
mov
sbb
das
outsb
sub
add
imul
fisubrl
lods
inc
pop
jns
das
push
mov
mov
out
into
push
mov
xor
enter
rclb
push
outsb
sub
icebp
add
cmp
cwtl
cmpsb
repnz
test
int
ret
aaa
jae
fcomip
adcb
in
or
push
inc
orb
aas
or
add
je
lods
or
nopl
fimull
and
jae
add
dec
mov
xor
mov
xor
add
xor
pusha
js
and
fnstcw
hlt
mov
xor
fs
inc
and
stos
push
sbb
push
cmp
push
adc
cwtl
clc
xor
inc
ftst
mov
and
cmp
sub
arpl
and
xchg
lock
dec
invd
mov
repnz
push
bound
aam
lods
cmp
inc
mov
andb
loop
pop
push
notl
pusha
pop
and
mov
cmp
push
fs
dec
xor
vmovsd
in
int3
andb
or
lds
add
and
add
idivb
jno
inc
gs
mov
jecxz
lahf
gs
and
mov
cli
push
add
incb
gs
scas
data16
xor
add
and
pop
pop
jno
add
lret
adc
pop
pushf
mov
push
loopne
xor
xor
cmp
xchg
xor
outsl
inc
add
and
sbb
clc
sub
aas
sub
notl
push
add
jno
int
mov
pushf
cmpsl
fcoms
imul
pop
leave
and
xor
add
inc
andb
lods
sbb
push
and
movl
mov
ficompl
push
mov
lret
push
repnz
test
mov
sbb
aas
mov
fildl
inc
lock
cld
enter
aas
out
lea
in
in
popa
pop
or
imul
jge
sbb
test
adc
mov
int3
into
addr16
push
stos
xchg
and
jl
addl
int
xchg
test
in
icebp
jecxz
ljmp
or
lea
test
arpl
sbb
outsl
data16
adc
ljmp
or
sub
jmp
pop
sub
dec
cmpsb
cs
jl
popf
dec
adc
adcb
paddsb
push
rorb
add
mov
sub
inc
lret
scas
outsb
jl
fadds
fwait
add
fbstp
or
outsb
jb
adc
leave
push
and
divps
mov
ljmp
jp
sbb
hlt
ja
push
push
xchg
dec
and
lock
pop
add
dec
into
leave
jg
and
sub
testl
mov
dec
into
dec
xor
subl
scas
sbb
dec
cmp
loope
and
adc
lea
or
test
adc
mov
push
xor
or
cwtl
mov
xor
add
jns
clc
adc
xlat
cld
mov
fwait
ss
add
add
push
cmpsb
pop
add
rclb
mov
rorb
mov
add
xchg
aam
lcall
xchg
add
fisubl
mov
push
std
cmpsb
push
jle
jge
inc
mov
dec
loopne
fnstenv
mov
sub
les
loopne
jno
mov
push
jae
jnp
add
push
fisubrs
or
add
pop
scas
jmp
dec
rolb
mov
movsl
ja
mov
pop
jle
sbb
xchg
jp
jns
add
xchg
xor
lods
add
cmp
addb
nop
dec
js
add
mov
pop
adc
flds
cmp
fcmove
jbe
arpl
sbb
adc
dec
or
sbb
mov
jnp
pop
test
sbb
lcall
mov
dec
xlat
mov
cmp
add
push
divb
jmp
sarb
out
add
lret
add
shll
cmp
sarb
add
xchg
mov
add
ja
mov
xlat
cli
adc
sub
dec
mov
xchg
jge
cmp
or
mov
ja
add
or
add
adc
call
push
mov
cld
loopne
or
push
jne
popf
add
inc
dec
clc
outsl
lret
cmp
cmpl
pop
adc
mov
icebp
dec
add
fs
push
add
fldt
cmpsl
ss
add
imul
dec
pushf
sbb
adc
pop
pop
add
cmpsb
popf
dec
scas
pop
add
outsl
cltd
cmp
xor
sub
add
loope
or
mov
lret
les
add
sub
sub
add
pop
add
push
rcl
mov
mov
add
add
mov
ret
lret
jbe
xor
insb
pusha
mov
push
es
imul
loope
in
ret
mov
add
xchg
mov
add
cmp
push
jecxz
stos
add
or
add
push
loopne
jb
das
add
fwait
add
aam
imul
or
ja
mov
add
ljmp
loop
xor
loopne
fildll
outsl
or
shll
lcall
jle
push
setnp
pop
and
insl
rolb
or
mov
shrb
and
into
fwait
jl
cld
jmp
and
popf
rcrb
add
arpl
sbb
movsl
cld
in
add
stos
add
and
mov
sub
mov
fwait
mov
mov
loope
and
dec
xchg
pop
test
add
lods
cmpl
push
nop
adc
out
push
cmp
or
lods
es
shrl
fcompl
or
jmp
pop
in
mov
xor
rcl
sub
es
in
inc
add
imul
add
jl
dec
mov
xor
jmp
add
sbb
adc
lods
imul
sub
add
aad
cmp
mov
add
lock
add
ljmp
and
cmpsl
mov
jmp
jbe
sbb
add
das
sbb
push
lods
add
xor
push
add
ret
lods
in
aaa
movsl
jp
add
mov
ds
aam
stos
push
sti
jp
push
add
dec
push
xchg
scas
idivl
inc
pushl
inc
xor
xlat
add
push
xor
and
repz
jmp
mov
or
pushf
pand
jns
sbb
insb
adc
roll
pop
sti
test
test
pop
push
pop
in
add
sub
fs
add
jae
lahf
add
jl
mov
add
sbb
or
and
cmp
sbbb
hlt
dec
flds
sbb
inc
insb
movsb
fwait
jg
fstl
mov
into
ljmp
arpl
sahf
add
or
or
es
lcall
movsl
push
mov
arpl
gs
sub
hlt
add
mov
sub
sub
enter
push
add
test
sub
push
hlt
aad
sbb
mov
stos
ja
arpl
cmp
cs
dec
mov
es
or
dec
mov
nop
xchg
push
jo
shll
pop
loope
testb
fldt
and
add
jnp
push
push
cli
add
stc
push
sar
mov
push
ds
adcb
pusha
inc
lcall
outsl
into
and
mov
int3
aas
frstor
lcall
inc
scas
ljmp
testl
cmp
test
shll
or
jb
in
dec
sub
add
fnclex
pop
push
dec
xchg
dec
movsl
outsb
push
dec
cmp
fstpt
push
testb
inc
mov
adc
or
mov
out
add
scas
add
test
pop
jecxz,pt
andb
lret
sbb
or
add
jl
addr16
aad
mov
push
and
cmp
inc
jp
arpl
dec
add
fisubrl
xchg
divl
fildll
xchg
push
cmp
jns
inc
stos
imul
sub
in
fisttpll
movl
or
sub
jbe
les
sub
mov
es
fs
insl
sbb
cmp
add
inc
push
mov
rcrl
pop
add
and
mov
cmp
in
cmp
inc
lea
dec
or
jbe
pop
xchg
and
outsl
scas
int3
mov
cmp
cli
loopne
add
in
pop
pusha
cmp
flds
in
pop
add
adc
mov
in
pop
movsb
sti
sub
jae
xorb
rcrb
xsha1
cmpsb
dec
out
rorb
xlat
insb
push
shrb
xchg
xor
rolb
lret
xchg
cmp
xor
mov
fwait
mov
outsb
jp
cmp
movsl
sahf
insl
scas
fisubrs
dec
mov
lahf
adc
xchg
inc
cs
sbb
cmp
mov
in
sbb
mov
inc
enter
add
adc
mov
pop
or
fdivr
push
jb
jne
in
push
pop
pop
mov
mov
pop
add
sahf
or
imul
push
push
add
sbb
rorb
inc
stos
or
fildl
cmp
mov
adc
pop
lods
enter
mov
inc
add
leave
sbb
cwtl
jnp
pop
xor
dec
pop
mov
in
xchg
int3
mov
cli
pop
add
inc
sahf
ja
fadds
and
imul
pop
add
mov
jmp
add
cmpb
ficoms
adc
scas
add
or
jl
add
clc
rsm
pop
cld
hlt
mov
scas
jo
or
dec
add
xor
xchg
lock
nop
fidivrs
pop
cmpsb
cmp
pusha
inc
arpl
add
mov
inc
jo
or
mov
and
mov
add
je
in
cmp
mov
add
outsb
mov
and
ret
xchg
inc
sub
cli
dec
add
add
imulb
inc
cmc
sub
in
aam
shlb
sbb
ja
test
add
sub
add
xor
lcall
add
test
and
and
push
push
sbb
mov
popf
add
into
lret
push
pop
outsb
mov
xchg
iret
aam
je
push
lea
push
dec
and
add
adc
scas
out
testl
es
and
pop
jle
xor
scas
shufps
lahf
daa
push
or
cmp
addb
stos
add
ds
add
push
je
mov
in
xchg
dec
xchg
ds
outsl
add
fistl
in
cmp
lcall
mov
dec
adc
iret
and
mov
insl
shl
add
cmp
pop
add
adc
mov
jo
mov
aas
adc
xchg
pop
daa
mov
outsb
inc
and
add
sbb
lea
cmp
test
mov
add
rorb
mov
mov
mov
sahf
loop
dec
mov
cmp
lea
std
jle
ret
mov
shll
outsb
sbb
jbe
mov
xor
into
int
mov
sbb
add
in
test
clc
inc
add
mov
clc
insl
pop
subb
rol
loop
jbe
cwtl
je
scas
dec
pop
out
add
pop
xchg
jno
loop
in
pop
mov
movsl
outsb
int3
pop
mov
add
lahf
pop
sbb
arpl
test
sahf
scas
jb
cmpsb
das
pop
sbb
mov
mov
mov
add
lret
cwtl
adc
icebp
jo
mov
mov
adc
mov
insb
sub
dec
mov
in
xor
inc
sub
lcall
adc
xchg
pop
cli
ljmp
arpl
test
incb
add
and
stc
inc
sub
jbe
lahf
mov
inc
movsl
arpl
jns
les
add
sahf
mov
lahf
lock
inc
leave
cmp
jb
push
hlt
arpl
cmc
xor
push
ljmp
pop
ficompl
and
lock
std
inc
cmpsb
pop
jnp
xor
rorb
jge
call
push
jbe
add
xor
pushf
dec
jne
push
into
dec
int3
add
add
add
orl
and
mov
pop
mov
sub
pop
dec
xor
scas
fstpt
add
fisubs
mov
mov
inc
xchg
out
aas
in
in
add
or
jle
addr16
add
dec
andb
std
hlt
loop
sub
inc
movb
call
inc
aam
lahf
cwtl
fistl
stos
std
cmc
movsl
mov
adc
js
add
hlt
xchg
xor
ret
lcall
xchg
adcb
mov
jne
mov
das
jnp
or
iret
jmp
jo
xchg
in
je
pop
mov
lret
push
add
sti
adc
xor
sahf
fwait
mov
mov
scas
testl
or
pusha
sbb
dec
shlb
rcr
dec
int3
adc
xlat
mov
inc
cmp
adc
adc
jne
out
cmp
push
xor
add
mov
mov
xchg
lcall
mov
outsl
mov
add
add
xor
add
push
push
ror
stos
rcrl
push
mov
xchg
add
mov
sub
cltd
data16
and
hlt
rclb
xchg
push
pop
les
push
ret
movsb
jne
sbb
xchg
or
push
ret
cmp
loopne
xchg
cs
or
add
pop
cmp
push
jo
rol
pop
jbe
in
gs
push
ret
dec
outsb
xchg
stc
jp
add
insl
test
push
inc
add
rcrl
insl
sub
cmc
pop
push
jo
cs
xor
ret
fisubl
popa
in
add
fdivrl
scas
lahf
dec
testb
mov
sbb
jo
fwait
cmp
push
into
mov
mov
call
jb
andl
inc
out
adc
add
nop
imul
xor
repnz
shlb
dec
sbb
mov
in
xor
xchg
cmc
push
mov
sub
lret
xchg
jae
scas
sub
add
jp
jnp
out
jl
add
sub
inc
aad
sbb
add
xchg
lahf
jne
repz
jbe
pop
push
jle
loopne
sbb
mov
out
je
or
sbb
sub
loopne
xor
arpl
shr
stc
xor
mov
jmp
mull
das
or
mov
std
inc
sarb
in
rol
pop
pop
cli
dec
js
inc
lock
das
or
adc
ret
add
cli
adc
fidivs
movsl
xchg
xorb
nop
and
push
mov
cmp
or
xor
mov
call
and
cmc
add
jnp
lcall
xchg
mov
incl
pop
add
lret
push
aas
incb
push
and
adc
int3
sub
test
fstpl
jae
movsl
lret
mov
mov
scas
add
leave
rcrl
int
cmpsl
dec
push
data16
push
jl
add
cmp
jl
mov
mov
push
cli
hlt
sbb
nop
push
mov
adc
xor
fdivrl
push
add
mov
in
outsb
add
out
test
adc
fsubrl
movsb
fdecstp
cli
scas
add
xlat
jp
pop
pop
loopne
dec
push
iret
jge
sbb
rolb
pop
cmpsl
pop
ljmp
xchg
pop
inc
sahf
fisubl
andb
and
out
add
jno
mov
add
jae
fwait
insl
mulb
or
sarb
jo
mov
add
in
popa
jno
fdivrs
xor
xor
add
add
add
arpl
adc
stos
rolb
cs
stos
sub
adc
dec
lock
mov
mov
jmp
shl
pushf
cmpb
shlb
repnz
dec
mov
xlat
add
or
fdivrl
xor
xor
add
mov
adc
bound
sbb
movsb
outsb
dec
add
adc
pusha
mov
push
cmc
pushl
in
aas
pop
xchg
mov
setg
push
push
pop
and
or
nop
or
pusha
enter
mov
push
fwait
push
mov
inc
add
cmp
pop
push
ret
pusha
call
stos
cmpsl
or
movsb
addl
xor
mov
das
mov
lea
add
stos
ja
sub
aas
dec
cmp
cmpl
cwtl
push
mov
push
imul
pop
mov
push
pop
sarb
mov
push
push
icebp
lods
push
loopne
sub
sbb
nop
add
loope
mov
test
add
and
rclb
add
in
adc
jp
pushf
jg
pop
xchg
mov
sbb
mov
and
jns
pop
leave
sub
repz
add
cld
sbb
sub
inc
jle
dec
xchg
out
pop
jno
and
mov
xchg
cmpsb
ja
add
ss
cmp
sbb
mov
pusha
lcall
fmuls
sar
pop
add
adc
and
pusha
add
imull
nop
add
jo
or
ss
movsl
or
pop
shl
hlt
inc
stc
or
adc
cmp
lcall
mov
std
add
xor
add
fsubrs
loop
es
cmp
leave
add
fsubrl
mov
add
xchg
jge
stc
cmpsb
mov
push
out
push
rcrb
popf
or
xlat
mov
add
stos
int3
or
lock
lret
adc
dec
add
clc
in
fidivrs
cmp
inc
and
add
fildll
sahf
loope
and
dec
add
outsl
mov
sub
pushf
call
and
int3
adc
ljmp
push
loopne
pop
xchg
inc
jg
cs
add
and
add
lret
cmc
push
sub
add
adc
mov
ffree
adc
push
bound
enter
pop
add
lods
push
or
pop
gs
in
inc
mov
test
imul
mov
pop
cmc
in
xlat
fadds
lret
mov
jmp
sub
or
js
add
pop
mov
fdivrl
xchg
lcall
mov
inc
mov
notl
mov
sub
std
pop
mov
jb
add
sbb
je
jo
idivb
fwait
pushf
aaa
mov
add
and
fildl
leave
add
mov
cmp
adc
in
sbb
mov
fwait
in
add
cld
jmp
inc
sbb
pop
sub
pop
adcl
shr
cmpsl
mov
cmpsb
insl
xor
lahf
xor
add
jle
or
mov
adcb
mov
aam
xor
aaa
push
ds
jno
ficompl
inc
sahf
sti
scas
cmp
push
add
jp
roll
add
sub
cmp
sbb
out
out
and
push
les
xor
in
pushf
aad
das
scas
xor
movsl
addr16
call
adc
dec
add
inc
ror
aad
ds
subb
or
mov
cmp
push
dec
jge
mov
ret
cmp
ficoml
inc
pusha
fstpt
scas
inc
inc
dec
cli
mov
mov
xchg
push
lahf
mov
push
idivl
mov
pop
out
sbb
pop
inc
movsb
test
add
dec
shlb
cs
jne
add
cmpsl
jp
add
popf
aad
xchg
loopne
dec
pop
sarb
fwait
pop
mov
add
bound
pop
loop
es
mov
iret
loopne
out
add
mov
nop
add
insb
dec
cmpsb
mov
pop
sub
hlt
aaa
lds
das
add
and
faddl
push
add
rcll
jl
aam
inc
subb
loop
cwtl
cltd
add
sub
sub
test
adc
iret
adc
add
inc
pop
cmp
add
and
fiaddl
inc
fcompl
std
inc
rcrb
mov
mov
inc
es
add
inc
xor
or
mov
ljmp
cld
in
incb
lock
cmp
sbb
icebp
mov
add
mov
mov
inc
inc
pop
mov
add
hlt
xor
or
iret
mov
jns
sbb
fistl
cmp
mov
jnp
mov
dec
cmp
subb
push
call
xor
and
sti
or
insl
loope
mov
clc
push
ljmp
decb
sarb
pop
fstpl
nop
ret
dec
cmpsb
add
inc
push
add
shlb
add
arpl
loopne
pop
mov
leave
mov
cmp
in
hlt
xlat
and
jecxz
sub
notb
js
add
fldt
int3
sbb
fstpt
shrl
cmp
aas
cli
test
pop
insl
lock
mov
push
test
push
lret
clc
mov
cmp
lock
lds
hlt
sub
cld
jl
lahf
add
mov
call
cmp
push
test
adc
mov
or
sub
sbb
in
ds
jb
and
jle
shrl
add
xchg
inc
les
or
pop
push
pop
jecxz
int3
sbbl
aas
outsb
subb
pop
push
push
cld
inc
add
cwtl
movsl
cmp
and
notb
mov
or
cmp
les
pop
cli
cmpsb
es
rcr
xlat
sub
mov
stos
pop
add
xor
jne,pn
iret
or
inc
and
add
jmp
mov
cmp
popa
ja
adc
xchg
and
dec
scas
insb
add
xchg
fildl
sahf
pusha
mov
andb
add
aaa
mov
jmp
push
dec
push
cld
cmc
push
cmp
aam
push
fisubrl
dec
add
adc
subb
nop
mov
insl
push
pop
mov
mov
add
pushf
fsubs
inc
and
cmpsb
inc
rcrl
popa
test
cmp
cmp
loopne
or
scas
cmp
add
add
sub
pop
test
ljmp
aas
jp
xorb
insb
mov
data16
test
lret
sahf
sub
jge
xor
xchg
test
imul
add
add
or
stc
pop
xchg
iret
into
mov
add
mov
xor
arpl
and
out
cltd
out
add
cmp
xchg
sbb
push
pop
test
push
rolb
add
fs
fdivl
fiaddl
in
cwtl
sub
sub
mov
jle
je
mov
mov
loope,pt
add
xor
adc
bound
dec
popf
ja
out
add
or
mov
lods
adc
or
jle
jnp
sub
loope
dec
mov
pushf
add
cmpsl
push
popa
les
arpl
mov
pop
filds
sub
xchg
lods
add
fistps
push
xchg
int3
add
mov
mov
cld
jo
xchg
mov
pop
mov
jle
loope
push
dec
xor
nop
xchg
adc
xorb
add
add
insl
pop
mov
mov
xor
jp
aam
add
fs
into
pop
add
cmp
add
cwtl
sbb
push
and
jo
fiadds
enter
mov
outsb
cmp
jg
popf
mov
cwtl
or
jo
pop
inc
call
pop
or
jo
pop
mov
stos
mov
addr16
push
lods
dec
rcrb
dec
or
scas
outsl
shlb
add
lods
imul
lock
arpl
jle
call
out
ret
mov
mov
mov
std
pop
and
add
fbld
popf
or
jl
orl
sub
out
mov
mov
ja
hlt
repz
mov
mov
and
leave
mov
test
cli
xchg
add
ss
sbb
out
dec
cwtl
in
adc
mov
pop
call
orb
icebp
add
and
add
shlb
outsl
adc
push
xor
in
mov
fists
bound
lea
add
das
xor
pop
mov
adc
add
sbb
aam
jmp
cmpb
jb
mov
mov
sub
shlb
jnp
fxtract
jmp
mov
and
adc
dec
cli
test
push
lods
ds
or
icebp
je
adc
mov
jnp
jns
add
pop
sub
sbbb
add
push
scas
jbe
insl
add
lea
xchg
cmpsl
aad
loopne
push
scas
cmp
push
inc
icebp
pushf
add
dec
orb
add
in
into
add
pop
imul
mov
les
inc
pop
arpl
and
into
jae
and
dec
add
add
das
add
sub
mov
mov
out
xor
jl
add
add
sub
inc
add
sbb
jae
shr
xchg
add
mov
loopne
add
pop
fs
pop
fnsave
outsb
insb
pusha
mov
mov
jne
adc
in
jbe
xor
cmc
mov
repnz
popf
movsb
outsb
ret
imul
data16
cmp
es
mov
xchg
popa
add
in
movsl
add
hlt
mov
outsb
add
add
nop
or
sbb
mov
cmp
sbb
pushf
repnz
jno
inc
fdiv
jo
or
and
icebp
sbb
in
jmp
add
aad
mov
push
add
xchg
or
mov
enter
rorb
outsl
inc
push
testl
add
add
xchg
addl
mov
outsb
add
xchg
mov
in
inc
scas
or
pop
js
ret
out
jno
mov
add
in
popf
int3
lret
outsb
add
add
add
or
mov
sbb
jo
mov
int3
xchg
add
and
cmpsb
cmp
imul
repnz
cltd
push
repz
jns
add
xchg
mov
fidivrs
insl
int3
loope
repnz
jg
movsl
sbb
sub
sbb
cld
push
into
mov
sti
popw
enter
test
ret
adc
or
fs
add
divl
das
cld
pop
hlt
add
jle
jo
mov
leave
daa
xor
sbb
rcrb
cs
jecxz
lahf
push
cwtl
inc
cli
pop
add
push
add
enter
or
sub
lcall
bound
push
push
xor
dec
mov
out
pop
scas
xchg
add
jbe
pop
bnd
cmp
pop
nop
sub
jle
mov
inc
repz
outsb
loope
pop
inc
dec
fdivr
popa
inc
jbe
add
inc
frndint
jb
aad
push
cmc
mov
inc
in
add
jne
ss
test
add
cld
jae
mov
call
xor
cmp
popf
int3
lret
push
lock
inc
lret
add
insb
scas
xor
inc
aas
clc
int
movb
cmc
xor
and
jae
add
fwait
dec
arpl
sahf
mov
add
xor
inc
sbb
mov
push
arpl
cli
mov
flds
add
mov
loopne
lret
mov
or
test
test
nop
push
cmp
sahf
mov
xor
jmp
imul
mov
jo
ret
mov
xor
inc
dec
cwtl
pop
fstl
push
idiv
dec
bound
pop
movlps
sbb
loopne
andb
lods
add
leave
and
add
movsb
sbb
and
add
pushf
imul
xchg
das
add
out
sbb
pop
imul
pop
sti
shll
mov
in
push
mov
shl
cld
loope
or
mov
xchg
cmp
sbb
lock
clc
enter
cli
jns
rcrl
add
out
js
push
push
aaa
mov
sub
add
pop
add
jns
push
jmp
push
lock
sbb
rcll
push
hlt
adc
cmp
shll
xor
push
push
testb
leave
andb
inc
es
aaa
mov
sbb
lods
dec
incb
std
pop
or
insb
pop
lcall
mov
shlb
int3
inc
add
jle
mov
fmull
imul
rcrb
popa
push
push
in
xor
cmp
into
fdivrs
je
mov
addl
and
mov
repnz
and
jnp
inc
pop
adc
aas
jo
fcmovne
mov
mov
jge
xchg
mov
mov
arpl
pusha
inc
pop
and
subb
addr16
and
xchg
jns
sub
push
and
pop
test
sub
xor
repz
and
and
mov
cltd
adc
jle
add
repz
rcr
fists
cwtl
shll
jbe
or
add
repz
dec
test
ja
jo
cmp
cmp
loopne
jns
cli
dec
jp
add
mov
jno
sbb
inc
sar
pop
mov
nop
repz
xorb
xor
in
sub
bound
inc
scas
cmp
adc
jle
in
xchg
adc
inc
push
mov
dec
imul
ret
adc
xchg
cs
rorb
addb
jle
aas
mov
mov
and
push
loop
in
pop
push
enter
loopne
dec
sub
mov
or
in
push
lahf
gs
es
lods
std
sbb
or
jmp
add
sub
outsl
loope
mov
adc
subl
in
and
push
or
push
fcomps
push
xchg
add
xor
addr16
push
add
push
sub
ret
lea
push
nop
daa
push
jecxz
jb
jno
add
push
add
cwtl
cld
pop
jae
add
or
mov
cmp
scas
stc
rcrl
sbb
xor
pop
daa
shl
std
push
fwait
jno
enter
mov
loop
sbb
xor
fsubr
test
push
data16
add
test
loopne
and
sti
inc
mov
cmp
add
stos
subl
pop
mov
nop
in
push
dec
sbb
adc
adc
xor
mov
jnp
add
push
mov
pop
inc
loop
gs
pop
test
xor
add
dec
lock
lock
ljmp
push
add
out
adc
ljmp
pop
loopne
scas
lret
rolb
pop
add
adc
stc
repz
or
leave
push
pop
push
fisttps
jg
add
fiadds
add
call
cltd
cmpb
jmp
jmp
jnp
xchg
daa
xor
cmp
in
dec
xlat
add
lock
std
push
xchg
push
pop
inc
jne
fdivs
inc
and
out
loope
out
add
aam
scas
cmp
dec
andb
sub
xchg
sbb
mov
jae
push
inc
inc
rcrl
out
dec
pusha
aaa
fwait
out
jge
sub
push
ss
addb
xor
jo
add
sahf
or
xor
subl
repnz
ljmp
mov
mov
xor
xlat
repnz
pop
rorl
cmp
mov
rcl
cltd
gs
leave
cmc
xchg
xor
shll
jne
jl
add
clc
fiadds
jo
adc
les
and
fcomp
push
xchg
fnstenv
xor
push
sbb
dec
stc
loopne
and
cmpsl
cld
pop
adc
ror
or
jl
add
pop
aas
mov
sti
xlat
sbb
and
rcll
popf
bswap
dec
int
add
and
add
lret
or
add
adc
jle
mov
inc
inc
cld
aas
out
mov
std
pop
fcomps
stc
jno
lock
add
sbbb
in
push
or
lcall
fisubs
lods
cmpsb
xchg
cmp
sahf
rcrb
jns
arpl
add
callw
cmp
xchg
pop
stos
or
scas
jp
fiaddl
add
cli
mov
push
push
sbb
jp
rorb
jo
movsb
ss
cmp
add
loop
int3
jmp
fstpt
add
add
inc
inc
mov
add
int3
cltd
jne
jb
add
rcrl
add
adcb
push
sbb
mov
push
jne
add
test
cltd
adc
pop
lret
sahf
lock
jl
add
and
cltd
mov
adc
add
clc
dec
in
dec
add
adc
dec
or
jle
inc
iret
mov
sbb
pop
bound
lcall
cltd
aam
add
pop
in
aaa
or
shll
xor
roll
out
push
xor
push
addb
sbb
dec
cmp
jb
fnsave
mov
loopne
sbb
mov
loop
inc
mov
xchg
mov
sbb
mov
shll
pop
mov
movsb
ret
add
enter
xchg
mov
add
lcall
mov
outsb
lahf
rorb
mov
into
loopne
ror
add
mov
imulb
int3
int3
shlb
mov
mov
hlt
loopne
cli
sbb
aas
inc
bound
cltd
adc
outsb
push
popf
fwait
add
xor
dec
push
stos
jecxz
into
inc
ret
test
sub
jb
call
dec
ja
and
xchg
push
mov
or
push
int
inc
aad
pop
imul
lea
add
idivb
pop
or
pushf
mov
mov
inc
sbb
add
mov
imul
jle
nop
push
scas
add
fdivr
mov
icebp
pop
aad
xor
lods
iret
addr16
lahf
xor
mov
int
fwait
dec
adc
inc
push
shll
cmovno
ljmp
rolb
jge
sbb
movsb
push
or
fsubp
xor
ret
imul
add
clc
dec
aaa
add
imul
cltd
add
and
in
in
pop
stc
add
sbb
shll
xchg
lret
fbld
mull
shrb
xor
add
and
test
shl
cltd
add
sub
out
pop
cli
add
fisttpll
and
add
jp
cld
fisubrl
dec
lods
add
pusha
aas
pop
fld
call
push
call
push
push
js
push
cli
inc
add
and
pop
dec
fildl
sbb
push
mov
and
loopne
xchg
fadds
jns
push
dec
cmp
mov
out
add
loop
push
stos
adc
out
dec
add
fsubl
mov
cli
out
push
mov
test
cmpsb
pop
inc
add
cmp
fcomi
jl
cld
add
jae
fdivr
cmp
and
xchg
imul
aaa
mov
rcrb
cmp
mov
sub
xchg
or
mov
add
push
shll
call
fnstenv
into
add
mov
das
pop
adc
std
add
mov
fcom
add
orb
pop
movsb
shrb
inc
pop
lods
loopne
pusha
fimull
fiadds
mov
ja
inc
push
jb
ds
sti
add
hlt
stos
popa
sub
sbb
push
cmp
std
add
sti
pusha
mov
jp
orb
xchg
sbb
out
imull
movsb
add
gs
popf
dec
sbb
mov
shlb
ds
leave
pop
dec
loop
test
mov
scas
psraw
mov
pop
fwait
popl
icebp
push
mov
xor
push
pop
sysret
in
ss
and
fucomi
add
sub
add
lds
out
add
and
jbe
mov
xor
dec
repnz
mov
add
out
outsb
jbe
and
add
inc
mov
fdivl
jl
mov
mov
xchg
xor
cli
dec
cmp
add
sbb
sbb
fsubr
pop
push
mov
lds
mov
call
sub
out
or
add
mov
jle
inc
rorb
fiaddl
iret
gs
shl
mov
adc
mov
fidivrs
mov
add
loopne
in
or
cmp
adc
lcall
js
adc
add
pop
into
xchg
fst
aaa
pusha
in
mov
add
xchg
repnz
jmp
push
add
aam
fstl
in
cmp
and
shll
mov
aam
out
push
fsubrl
or
sub
push
mov
adc
cwtl
xor
pop
mov
pushf
ds
or
mov
pop
mov
and
and
cmp
xchg
add
mov
mov
push
out
cltd
aas
nop
hlt
add
dec
js
test
pop
dec
xchg
adcl
cmpb
stc
mov
xor
mov
cmp
and
jl
call
test
in
push
sbb
add
or
loopne
js
xlat
je
inc
sbb
stos
outsb
cmp
jne
add
jp
sbb
jb
mov
std
adcb
add
inc
cmp
cmp
push
faddl
leave
call
mov
ja
ficomps
jmp
int
shlb
scas
movsb
invd
push
pop
or
cmpsb
test
sbb
jg,pt
andl
add
lods
xor
rclb
loopne
inc
loopne
or
xchg
cmp
lea
mov
dec
repnz
sbb
aad
pop
or
clc
in
mov
xor
cmp
nop
jmp
repnz
cmp
xor
and
xor
arpl
aaa
shrb
sahf
in
out
cmpsl
cwtl
add
dec
jmp
cmp
int
out
adc
push
sbb
cmp
lods
cmp
call
or
xor
sbb
aam
xlat
lods
xor
in
add
mov
gs
and
cmp
ror
or
cmp
sub
and
icebp
cld
push
adc
fsts
push
lcall
sbb
out
xchg
xlat
add
or
xor
adc
incl
pop
arpl
add
add
cmc
movl
cmp
inc
shlb
fldl
pusha
cmp
mov
mov
es
add
add
rorb
leave
add
or
daa
jp
add
rorb
sub
ffree
jae
jae
mov
rolb
xchg
jmp
cmpsb
mov
add
or
jg
sbb
pop
sbb
add
pop
mov
push
xor
fwait
mov
clc
andb
daa
pop
add
ret
adcb
xor
arpl
andb
dec
inc
jno
add
xor
add
mov
into
daa
in
shlb
jp
add
stos
fcomps
jge
lret
shll
pop
mov
dec
insb
add
pushf
pop
inc
cld
sidtl
and
cmpb
arpl
out
add
rdpmc
adc
aam
popa
push
es
shlb
jo
add
in
mov
sub
inc
fsubrl
inc
xchg
mulb
sbb
fwait
cwtl
adc
sub
cmp
mov
mov
gs
lods
mov
mov
and
push
adc
decl
xor
and
add
mov
in
jp
loop
scas
cli
dec
pop
stos
sub
loopne
bound
jl
mov
es
ljmp
mov
js
call
outsl
pop
inc
fwait
xorb
scas
add
sbb
inc
xchg
or
mov
popa
les
psubusw
adc
sub
daa
inc
inc
sub
or
scas
push
mov
mov
nop
rcl
out
jne
push
fidivrs
fs
addr16
or
mov
dec
ret
movsb
clc
aad
push
mov
adc
push
inc
fldl
dec
popf
cmp
pop
xor
addb
mov
xchg
movsl
jmp
pop
xorb
and
jg
dec
mov
lock
pop
pop
outsl
or
mov
jbe
jecxz
pop
js
ss
lds
push
push
pop
xor
loop
adc
jb
jle
filds
or
idiv
mov
add
or
cs
sbb
out
add
or
mov
pop
pop
inc
lods
inc
movsl
and
dec
in
mov
loope
xor
add
roll
xchg
call
cmp
mov
fnstcw
xlat
sub
aam
movsl
pop
xchg
inc
in
mulb
or
cmp
inc
add
leave
and
cmp
sub
pop
cmpb
addr16
roll
rorb
xor
call
shl
add
xor
movsb
add
pop
sbb
aas
xor
inc
xchg
push
add
pop
mov
test
sarb
pop
push
or
fcom
imul
cmp
push
cli
mov
push
test
mov
inc
sub
inc
jo
imul
das
mov
pop
test
dec
push
es
inc
pushf
adc
xor
dec
adc
mov
add
xchg
sub
xchg
mov
punpckhdq
dec
pop
inc
xor
lret
sbb
adc
cmp
add
punpckhwd
out
movsb
data16
sub
xchg
add
push
adc
int3
stc
add
xor
mov
js
adc
mov
mov
mov
cmp
adcl
stos
rorl
enter
add
daa
cld
mov
rcl
leave
outsb
add
push
push
xchg
add
pop
sub
loop
sbb
in
icebp
inc
mov
add
fimuls
push
aas
mov
arpl
add
or
add
dec
scas
sbb
sub
xlat
mov
loopne
fwait
icebp
movb
bound
sbb
repnz
daa
jo
push
push
jne
jbe
dec
insb
push
cmpsb
and
mov
dec
add
jge
fdivs
push
mov
lock
push
cs
mov
xor
popf
aas
js
inc
mov
cld
add
fisttpll
add
mov
adc
jp
test
push
repnz
push
or
rcll
add
inc
hlt
pusha
mov
mov
das
xchg
inc
out
mov
out
add
insl
loop
sbb
adcb
insb
mov
fldenv
push
jge
dec
lock
fdivrp
inc
add
ljmp
add
or
jne
rolb
xchg
push
mov
push
or
stos
fadds
push
imulb
movsl
mov
xor
aam
pop
jne
cmp
mov
dec
popa
cmp
add
movsl
hlt
aaa
add
push
xor
dec
pop
mov
lds
jb
jae
add
or
jecxz
push
mov
add
push
pop
fstpt
and
push
lock
jge
xor
inc
inc
jecxz
fsubl
add
mov
push
cs
sbb
adc
jnp
aad
fwait
mov
popa
fsubrl
mov
mov
sar
loop
mov
jno
in
bound
rcrb
int
add
cmpsb
lcall
mov
ret
push
cmp
xchg
movl
and
shlb
ret
cmp
aaa
loopne
mov
xchg
mov
push
jl
cmpsl
fcoms
aaa
insb
cwtl
xchg
lock
rorb
cmp
add
mov
daa
xor
repz
cmpsl
adc
xchg
mov
in
mov
fmull
shlb
mov
sbb
pop
pop
movsl
sbb
xchg
mov
sub
lahf
sbb
add
jecxz
push
push
and
ljmp
adcl
mov
in
aad
dec
imul
sbb
dec
mov
sub
push
scas
js
inc
jbe
xchg
cmp
push
int3
negl
mov
sbb
or
pop
and
jbe
add
test
es
add
and
cltd
incb
mov
add
xlat
push
js
mov
xchg
js
add
mov
add
add
mov
mov
dec
cmp
xor
jg
imul
scas
mov
push
add
jbe
pop
add
mov
add
fnstenv
sbbl
xor
pop
pop
add
xchg
iret
push
cwtl
cmpb
inc
add
jae
js
and
mov
dec
add
inc
cs
pop
int
sub
les
xchg
flds
cmp
aaa
inc
in
cld
push
pop
out
adc
xchg
mov
fdivrl
add
ret
and
or
rolb
add
dec
xchg
faddl
and
push
mov
jg
repz
mov
mov
cmp
aas
addl
lock
inc
push
shll
movsb
lock
mov
inc
xchg
cmp
loop
mov
add
add
insl
icebp
add
mov
xchg
rorb
sbb
arpl
adc
xor
cmp
stos
inc
cwtl
add
call
dec
dec
enter
fs
lods
mov
cmp
out
inc
xor
or
mov
jp
roll
jg
ja
pop
enter
out
dec
rclb
sub
daa
popa
cmp
pop
pop
add
adc
mov
xchg
mov
daa
jns
jo
rcll
ljmp
stos
fstpt
jns
add
aad
jl
sub
mov
mov
test
mov
lods
inc
dec
xchg
scas
hlt
pop
add
sub
mov
sbb
xor
roll
mov
stos
ficoms
sbbl
dec
adcb
loope
jp
nop
add
aad
es
fbstp
jns
adc
sub
rcpps
orb
repz
push
fldcw
cmpsl
xlat
leave
fcoms
in
add
push
add
cmp
dec
add
sbb
mov
push
testb
gs
ja
and
lods
out
dec
sbb
rclb
daa
inc
or
popa
loopne
mov
add
out
jnp
lea
inc
lea
add
or
pop
cmp
push
mov
mov
aad
push
jmp
subl
shll
in
add
add
nop
mov
xor
inc
xor
in
into
lock
push
cmp
mov
sbb
test
add
sub
dec
ss
sbb
mov
inc
nop
push
leave
rorb
add
push
loope
pop
xchg
pop
call
push
fidivrl
test
mov
lods
mov
mov
inc
pop
pop
movb
sahf
ljmp
movzbl
aaa
mov
xchg
mov
dec
add
sbb
rcrb
push
push
in
fsub
push
sar
ds
ja
jo
pusha
loop
adc
imul
mov
pushf
pop
out
dec
xchg
adcb
add
in
or
lock
xor
insb
dec
addr16
cs
sbbb
clc
je
push
add
int3
dec
push
jg
add
arpl
pop
ret
mov
bound
mov
fldcw
in
test
outsl
add
xor
cwtl
sbb
or
or
stos
add
ret
inc
pop
mov
add
inc
cmp
add
test
inc
dec
push
dec
subl
push
add
lret
lahf
xchg
cmpps
sarb
pusha
mov
testl
imul
insl
ja
bound
je
push
dec
testb
add
fidivrl
pop
cmp
add
pop
xchg
addb
xor
dec
xlat
enter
cld
push
out
into
jo
adcl
shll
add
cmpb
movsl
jo
add
cmp
clc
dec
cltd
hlt
add
add
sahf
shrb
sub
add
lret
fsubs
sub
jo
add
jp
push
ss
add
mov
add
aam
das
shlb
cmp
out
loope
xchg
jmp
mov
add
inc
mov
sahf
loop
or
jo
add
jecxz
invlpg
rorb
push
enter
mov
dec
call
cmc
out
xor
jmp
sti
dec
aaa
push
dec
les
push
popl
cmp
arpl
push
sub
mov
add
or
and
jge
adc
shrb
mov
xor
jb
jb
push
rorl
xchg
mov
fwait
cmp
adc
scas
out
jns
push
mov
into
mov
icebp
push
xor
adc
clc
add
and
icebp
add
sub
xchg
imul
fistps
pop
imul
sahf
scas
xchg
into
pop
imul
inc
push
mov
orl
stc
mov
nop
sbb
mov
clc
dec
je
outsl
addr16
add
aad
add
and
lods
dec
pushf
test
ljmp
loopne
mov
sahf
push
inc
call
aad
jge
sarl
ja
xchg
jns
imul
inc
jmp
insb
clc
es
fisubl
rcrb
pop
aad
push
xchg
jecxz
loopne
dec
add
mov
push
shll
aam
add
stos
roll
xchg
cmp
hlt
cmpsl
jnp
clc
ret
add
mov
mov
jnp
mov
push
aas
dec
arpl
jns
push
or
add
push
pop
dec
scas
add
mov
xor
inc
or
shrb
dec
and
fwait
add
in
xor
inc
add
and
mov
mov
xchg
insb
add
or
loope
add
mov
jno
cmp
jmp
xlat
loopne
in
adc
rcrb
push
push
mov
xchg
sbb
aas
xchg
cmp
add
outsl
fldl
add
jne
xchg
out
adc
xchg
add
stc
bound
pop
cmp
xchg
mov
in
add
mov
mov
mov
mov
or
dec
rcr
add
aas
daa
rcrb
roll
dec
insl
jo
xlat
cmp
js
add
mov
aam
and
ret
add
push
or
addb
add
pop
xor
repz
loop
stc
jge
or
imul
inc
bound
add
pop
fwait
push
add
aas
push
push
mov
js,pn
sbbb
inc
clc
add
ljmp
test
push
or
mov
add
push
xor
sub
or
pop
add
stc
pop
gs
push
xor
imul
mov
jbe
adc
cmp
add
lock
int3
xchg
nop
test
mov
js
aam
shll
sub
into
stos
xorb
add
push
push
or
cmp
sub
out
mov
inc
pop
pop
imul
andb
fistps
cwtl
cmp
ret
xchg
enter
in
lahf
lock
sahf
pop
sbb
loopne
std
mov
nop
add
adc
add
cs
sbb
push
and
mov
mov
cs
stos
adc
sbb
add
fcompl
cmp
test
jle
dec
cmpb
imul
movsb
hlt
cmp
mov
mov
push
out
lock
fstl
xchg
aas
aam
inc
jmp
mov
std
sbb
xor
add
lods
loop
add
gs
add
xchg
or
cmpsb
adc
popf
loope
dec
add
outsl
mov
or
adc
xchg
fcmovnbe
shr
mov
adc
jnp
inc
lea
mov
adc
xchg
js
xchg
xchg
insl
repnz
dec
dec
add
mov
xor
push
stc
mov
add
mov
pushl
pop
cltd
jge
testb
mov
xchg
int
lret
push
cmp
fidivs
mov
push
test
jge
das
mov
inc
mov
and
push
pusha
add
pop
sbb
add
les
sti
add
xchg
cld
cmp
xlat
add
sub
or
lods
mov
out
movsb
sub
icebp
add
jg
mov
ds
jecxz,pn
add
push
inc
insl
testl
out
in
pop
lcall
clc
lahf
into
add
jle
sti
adc
lcall
incl
pusha
mov
lods
push
add
subl
insb
add
test
add
mov
enter
rolb
lods
jp
add
and
push
leave
xchg
cmovl
push
inc
xchg
cmovg
out
mov
push
jl
add
shlb
xor
xchg
cmp
inc
sbb
fstl
xor
inc
inc
mov
add
arpl
dec
insb
in
dec
scas
inc
je
mov
stos
jp
mov
add
jnp
xchg
add
ret
icebp
cli
or
xor
sbb
scas
dec
mov
fistpl
cmp
std
and
dec
movsl
cmpsb
cmp
push
loopne
push
mov
mov
mov
addl
out
dec
or
repnz
nop
fimull
shll
or
cmp
leave
shlb
or
add
xchg
sbb
pop
lcall
jmp
adc
cmpsl
adc
outsl
add
sub
cmp
add
sub
xlat
out
mov
daa
sbb
or
and
inc
add
fdivl
add
int
addb
stc
push
sti
mov
out
shr
or
out
push
iret
add
outsl
jmp
add
pop
ret
pop
clc
rorl
adc
mov
cld
daa
dec
inc
loopne
dec
or
add
pop
or
add
rclb
cmp
push
idivb
arpl
pop
and
scas
aad
sub
xor
or
pop
cmp
sbb
inc
test
sbb
pop
dec
or
and
mov
xor
adc
sbb
add
daa
or
cmp
hlt
add
cmovge
das
std
cmp
cmp
cmp
je
add
les
add
dec
add
cmpsl
add
mov
add
rep
sbb
mov
test
adc
sar
sbb
fldenv
test
lret
push
add
mov
test
popa
pop
call
lret
call
xchg
aad
add
arpl
sbb
add
mov
mov
cli
jle
sbb
int3
add
int
insl
and
outsb
add
aam
and
add
mov
or
scas
dec
lcall
nop
ret
jg
add
sbb
fstl
mov
sub
sub
jbe
push
mov
cmp
loope
xchg
pop
inc
loopne
xchg
pop
ret
loop
dec
rcrb
sti
sbb
xchg
nop
add
out
inc
jns
hlt
sub
insb
add
adc
rolb
or
fs
iret
leave
add
adc
es
mov
push
aaa
mov
repnz
std
dec
rcrl
mov
push
fstpl
sub
mov
jmp
fidivrs
aam
arpl
outsl
ret
bound
stos
lds
inc
ret
xor
and
stc
add
mov
mov
ficomps
xlat
add
mov
fld
cmpb
adc
xlat
cmp
fwait
test
pop
je
aam
dec
clc
sub
mov
in
scas
push
push
mov
or
or
js
jl
inc
insl
dec
and
scas
shrb
push
mov
mov
repz
test
jge
std
and
mov
jo
cli
add
and
add
dec
es
inc
inc
add
icebp
aam
mov
push
incb
mov
out
xor
mov
mov
cmp
pop
out
pop
push
int
add
mov
pop
add
or
or
outsb
lret
mov
mov
or
push
push
nop
mov
jge
or
sub
dec
imul
cmp
push
mov
dec
mov
xor
add
add
in
rcl
cmp
add
and
pop
or
inc
call
repnz
mov
daa
mov
xor
push
cld
pop
push
cmp
jle
push
jns
or
out
cmc
shrl
cmp
out
out
adc
jne
adc
mov
xorb
cmp
sarb
add
push
inc
mov
or
dec
enter
mov
add
loope
push
lock
out
cmp
jo
insb
sbbb
repnz
mov
pop
adcb
adc
jbe
and
add
pop
outsw
push
ja
jne
add
and
xchg
add
dec
movsl
mov
or
push
cld
add
cmp
dec
or
xchg
jmp
arpl
aam
hlt
add
mov
add
test
ret
pop
jnp
fistpll
adcb
lret
icebp
jle
or
sahf
out
push
add
mov
and
nop
push
lret
rcrb
inc
add
imul
add
add
jge
enter
sbb
sahf
test
adc
add
mov
pushf
shlb
mov
inc
add
push
xor
cmp
push
jb
sub
jo
add
inc
clc
rcll
inc
mov
rcrl
lds
add
psrlw
das
cmp
push
pop
outsl
ds
test
inc
xor
mov
add
xlat
dec
xchg
je
lods
out
orb
outsb
push
add
add
je
pop
test
iret
aam
xor
add
lods
enter
cwtl
cmp
add
repz
shlb
inc
cmp
add
and
hlt
mov
cmc
mov
mov
test
push
mov
ret
inc
and
mov
test
lahf
or
mov
stos
adc
add
push
lea
xlat
jbe
pop
add
push
insl
loopne
fmull
adc
push
out
jbe
scas
push
mov
ljmp
clc
inc
cmp
push
scas
mov
add
jbe
punpckhdq
jecxz
pop
or
push
pusha
cmp
addb
sbb
fists
pop
stos
nop
or
inc
add
fs
rcr
stc
xchg
add
insb
sahf
and
daa
fistpl
inc
paddd
mov
shl
iret
xchg
fdivrl
lahf
jg
dec
jmp
xor
clc
cld
jno
daa
adc
adc
inc
pop
cmpsb
add
mov
in
ds
adc
cwtl
lods
addr16
xor
xorb
out
adc
sti
pop
sub
xchg
aaa
in
dec
add
outsl
fsubr
cmpsb
pusha
sbb
mov
mov
xor
cmpb
mov
aam
add
push
into
lds
adc
inc
and
and
dec
xor
add
xchg
and
enter
dec
or
daa
dec
adc
mov
push
repnz
pop
addl
add
dec
pop
push
cmc
xor
push
mov
ret
xor
mov
pop
cmp
xchg
mov
xchg
lods
push
test
jl
test
iret
pop
out
and
loope
subb
call
push
jns
sarb
insl
pushf
dec
rolb
rcrl
add
in
xlat
push
add
fmul
dec
push
push
pop
push
popa
negb
or
in
sub
sti
jle
icebp
hlt
jl
fdivr
cmpsb
push
pop
imul
lret
lahf
adcb
divl
add
mov
pop
add
gs
mov
dec
adc
push
sbb
push
sbbb
mov
orb
add
mov
sti
add
in
sbb
lret
jno,pn
fs
pop
jle
add
aas
mov
push
hlt
inc
call
rcll
sub
xlat
sti
mov
sbb
add
xchg
cmp
pop
int
pop
mov
xorl
cmpsb
je
or
scas
push
loopne
cltd
sar
xlat
jbe
xor
xor
dec
add
scas
mov
dec
roll
cli
add
dec
stos
and
cmp
dec
inc
bound
data16
jl
cmpsl
fisubs
add
xor
sbb
xchg
xchg
pop
ds
xchg
add
xor
popl
outsl
subl
add
fs
mov
cld
add
mov
adc
bound
jne
pop
pop
in
testb
jmp
or
aaa
outsl
add
push
int
mov
and
ja
test
xlat
and
je
fbstp
mov
clc
icebp
adc
push
or
movsb
outsb
addl
inc
mov
inc
cwtl
and
mov
xor
les
sub
jae
xchg
and
sbb
jno
out
push
mov
cmp
enter
out
jnp
xlat
mov
mov
or
ret
loop
jle
mov
xor
sub
mov
pop
imul
xchg
add
adc
and
cwtl
lret
dec
popf
add
push
out
test
mov
sbb
adc
dec
or
out
fnstcw
add
jb
shrl
lcall
popa
add
imul
ror
clc
mov
out
scas
push
jle
mov
jns
jne
dec
add
xchg
dec
sub
into
cmpl
out
mov
inc
add
pushf
nop
fistpll
jae
hlt
add
cmc
push
jge
add
jl
xchg
ret
xor
adc
lods
jmp
and
les
push
outsb
adc
add
repnz
or
testl
jae
add
dec
cmpsb
mov
dec
jge
cltd
icebp
das
sub
sbb
mov
jge
add
inc
loopne
fcmovnu
xor
add
jno
and
fstps
xchg
inc
push
inc
shll
repnz
in
mov
aas
mov
and
pop
cli
stc
cmp
fwait
enter
mov
add
in
add
loope
push
cmp
das
loop
add
mov
aas
rcrl
pop
xchg
inc
xchg
add
mov
adc
or
fidivs
jge
popa
fistps
mov
js
push
add
push
movsb
mov
sbb
add
mov
cmp
push
cmp
mov
or
pop
dec
xor
arpl
jp
push
call
movsb
aas
pop
lock
jmp
sbb
lods
dec
aad
cmc
sub
fisubl
add
xchg
sti
lds
xor
jecxz
push
pusha
jle
nop
insl
out
jno
and
xchg
xchg
lods
add
jnp
sbb
sti
adc
add
scas
andb
cmp
movb
les
mov
pop
jmp
cmp
mov
pusha
and
push
clc
clc
add
sbb
xor
out
sbb
add
fwait
mov
add
pop
inc
or
bound
ret
cli
xchg
mov
addl
cld
imul
shll
out
xchg
dec
and
loopne
nop
insl
sbb
cltd
pop
pop
cmp
pop
push
jp
push
lock
inc
fwait
jg
hlt
pop
scas
fs
xor
rolb
xor
mov
push
ror
int3
in
cld
and
negl
add
sub
mov
scas
cli
push
sar
xchg
mov
add
sbb
sub
scas
addr16
fcoms
gs
adc
incb
test
aam
movb
adc
sub
inc
mov
sub
testb
cltd
xlat
cmp
adc
stos
push
lret
aas
mov
hlt
andb
mov
sub
xchg
xchg
add
mov
repnz
nop
int3
inc
dec
and
ficoms
in
cs
shll
cmpsb
xor
ret
xchg
test
adc
jae
pop
call
pop
ret
push
add
push
sub
push
add
pop
sub
das
aam
iret
test
out
dec
lods
add
xchg
cmp
mov
das
push
ljmp
pop
push
sub
sub
mov
mov
stc
pop
jb,pn
jne
clc
sub
idivb
jne
cs
or
mov
fisubrs
jp
jo
pop
pop
out
adc
push
inc
adc
fsubl
sbb
cmpsl
out
jl
push
jp
pop
in
mov
push
aam
rclb
pusha
int3
js
js
adc
mov
loop
pop
add
mov
and
xchg
add
pop
jl
inc
fisubs
and
idivb
xor
push
popl
mov
movsl
and
clc
lds
cltd
xor
arpl
pop
in
jbe
addb
stos
mov
mov
mov
xchg
jmp
jo
pusha
dec
mov
push
sub
stos
loope
xor
ret
dec
inc
mov
push
je
mov
insl
mov
or
mov
mov
add
jb
add
mov
mov
pop
fwait
idivl
jo
mov
jg
pop
add
loop
insb
and
mov
ljmp
cmp
mov
stos
pop
or
dec
jecxz
adc
and
fmul
xchg
pop
aaa
test
mov
mov
test
addr16
out
add
out
sub
lock
bswap
cmp
or
hlt
adc
ret
movsl
out
add
push
cwtl
add
sub
nop
mov
and
in
inc
jp
add
sub
lret
push
popa
fyl2x
fs
nop
and
xor
sbb
call
aam
pop
loopne
xor
shlb
repnz
repnz
push
rolb
mov
and
test
mov
mov
xchg
sub
jecxz
stos
push
mov
dec
cwtl
push
lcall
xchg
xchg
adc
add
rcll
pop
xor
jmp
mov
inc
push
shrl
xchg
cmp
cltd
insb
push
mov
ret
cmp
jmp
jo
sahf
psubsb
xchg
sbb
insb
inc
xor
movhps
add
adc
add
adc
iret
sub
xchg
data16
into
and
movups
std
sahf
cld
add
fwait
push
sahf
adc
mov
je
sub
pusha
sbb
cmp
leave
daa
sbb
testb
fisubl
jne
adc
aas
or
mov
shlb
push
adc
cld
dec
pop
dec
xor
xchg
pusha
add
jbe
push
stos
dec
xchg
cltd
aaa
add
adc
inc
scas
mov
push
or
jo
adc
imul
lahf
cmp
loope
or
cmp
add
int
mov
inc
aaa
jo
pop
out
cmp
adc
repnz
mov
pusha
lock
ds
fcoms
out
adc
outsl
aas
push
add
imul
test
popa
add
mov
aad
pop
sub
push
or
lea
cmp
mov
aam
jb
cmp
adc
imul
adc
inc
int3
jp
or
es
aaa
cmp
mov
push
push
push
andb
aad
add
and
fldcw
mov
jae
pop
mov
xlat
out
mov
dec
add
ds
divl
cld
cmc
rcrb
cmp
mulb
push
sub
add
vmovlps
cs
cmp
pop
stc
dec
mov
jb
scas
add
add
push
sbb
out
xor
or
sbb
cmp
mov
cmp
xchg
subb
addl
add
or
xchg
xchg
rcl
sbbb
in
add
ret
int
ja
leave
add
jg
adc
mov
jo
fsub
push
dec
aas
pop
xlat
xchg
add
mov
sbb
int3
push
and
inc
mov
xor
or
or
shlb
push
and
pop
mov
sbb
dec
popf
push
sbb
lret
jl
push
ja
mov
mov
push
push
cmp
or
or
dec
mov
push
in
inc
lods
xlat
aaa
mov
addl
add
dec
push
mov
fs
xor
add
mov
xorl
add
jnp
test
mov
imul
inc
add
dec
mov
popf
test
repnz
pop
data16
inc
add
sbb
fsubrs
lods
xor
jno
sbb
ljmp
mov
fisttps
mov
mov
test
add
sub
add
jmp
rclb
add
cmpb
jns
sub
mov
sbb
xchg
mov
push
lret
pop
or
add
xchg
and
mov
mov
add
iret
dec
adcl
in
jbe
pop
mov
mov
lods
xchg
fistps
fwait
sbb
out
and
mov
mov
in
mov
xchg
and
jns
xor
xchg
add
cmp
or
mov
xchg
cs
push
mov
mov
insl
fcomps
and
xchg
xchg
test
cwtl
inc
inc
push
mov
add
adc
add
orl
sub
fsubrs
ss
roll
mov
ret
pop
sbb
stos
cmp
add
scas
cmp
mov
dec
mov
in
jno
mov
mov
and
incb
ret
test
sbb
nop
xor
add
cmpsb
mov
add
fldenv
add
cmc
pushf
inc
inc
and
clc
outsl
xor
call
test
mov
ljmp
inc
xor
mov
dec
ret
cmpsb
js
dec
dec
xor
js
fisttps
or
dec
subb
fs
mov
xor
xor
push
loopne
je
sbb
fadds
call
int3
es
adcl
sub
insl
jp
cmp
std
sbb
sub
imul
leave
add
outsb
filds
ja
test
mov
mov
orl
push
push
xchg
lods
inc
cmp
or
mov
mov
sbb
and
sub
jno
test
dec
and
add
std
dec
mov
add
lret
xchg
mov
pushf
dec
inc
add
add
push
mov
cwtl
pop
data16
push
mov
adc
test
test
scas
ljmp
jecxz
test
call
cmc
iret
push
or
imul
xchg
filds
and
adc
mov
mov
leave
xchg
pop
dec
cld
jecxz
notl
dec
aam
and
test
aas
pop
and
pop
out
ret
jo
dec
sar
stos
enter
adc
les
repnz
int3
push
shrb
cs
add
push
jmp
cmp
popa
loopne
add
inc
cmp
out
jo
dec
pop
dec
pop
inc
call
add
add
in
add
imul
mov
xchg
movsl
das
xor
mov
dec
xchg
adc
mov
xchg
out
in
mov
in
mov
mov
mov
dec
out
push
int
dec
sbb
xor
xlat
add
cmpb
rclb
or
ja
mov
lods
jbe
ljmp
mov
arpl
or
and
adc
ja
inc
cmp
incb
stc
cmp
loope
stos
push
int3
fsubrl
jg
add
xlat
loope
or
pusha
fld1
jg
cmp
add
adc
insl
xor
imul
pop
rolb
add
mov
xchg
push
data16
scas
lahf
mov
sbb
aaa
nop
jnp
push
cmp
repnz
mov
lock
add
loopne
xor
pop
imul
addr16
andb
xchg
dec
repz
aam
sub
in
sub
cmp
sarb
rol
mov
lods
lcall
mov
mov
add
jge
xchg
pop
mov
leave
jno
inc
xor
out
mov
dec
xor
add
lds
pop
cmpsb
adc
lret
jp
pusha
ret
es
stos
loop
cmp
cmp
add
or
jb
or
jge
mov
jo
lret
cmpsb
aas
cmp
pusha
cmc
shlb
dec
add
cmp
add
sub
orb
inc
add
imulb
and
test
lea
inc
shr
dec
ja
push
add
sub
cmpsl
lock
or
addl
aad
out
dec
pusha
jno
add
fisubrs
xor
bound
inc
cltd
inc
ret
xor
pop
dec
add
mov
sarb
out
jecxz
pusha
jle
outsb
cmp
fsubl
ret
mov
nop
sub
fdivs
add
in
inc
xchg
add
pop
adc
mov
dec
mov
add
or
fsts
lds
mov
cmp
hlt
lds
lret
fs
adc
jae
inc
shrb
iret
xchg
and
cwtl
or
mov
sub
leave
pop
gs
add
fwait
add
and
and
cld
mov
cmp
int3
ja
jg
add
mov
movsl
inc
sar
and
aad
add
loopew
jnp
add
push
pop
adc
dec
mov
cmp
and
inc
pop
add
inc
cwtl
cmpl
test
fs
xor
push
pop
clc
les
add
inc
dec
or
add
jns
mov
in
sbb
mov
lret
icebp
or
test
adc
mov
and
xchg
cmp
mov
and
add
pop
mov
pop
test
out
int3
popl
or
push
jmp
pop
int
add
pop
ja
xchg
sbb
adc
test
sub
mov
jae
pop
xchg
in
add
arpl
loopne
fiadds
jns
shrb
dec
cmp
push
dec
daa
sti
lret
add
popa
adcb
push
adc
loop
outsl
add
sub
cld
xchg
subps
jmp
shl
sbb
xor
sbb
add
into
out
add
dec
xchg
xor
jp
add
shll
popf
push
fs
mov
adc
hlt
add
sub
push
data16
add
lret
xchg
push
fdiv
fnstcw
ret
push
add
pop
ret
mov
in
add
mov
popa
aas
orps
dec
lahf
inc
stc
loopne
out
out
ja
jle
dec
ds
add
pop
xor
in
shlb
sbb
adc
mov
or
cmp
xor
test
ret
orl
add
mov
call
sub
push
bound
add
mov
scas
lods
std
sbb
insl
mov
inc
jne
mov
mov
xor
add
mov
jg
stc
lock
and
or
test
mov
loopne
into
lock
push
mov
fcompl
and
imul
adcb
testl
cmp
aaa
add
ds
cmp
add
add
sbb
les
push
wbinvd
push
push
sbb
xchg
push
nop
mov
in
jg
sbb
aas
mov
andl
test
mov
jb
add
in
cmpsl
outsl
xchg
inc
push
pop
pop
cmp
call
add
scas
or
jmp
xchg
pop
imul
push
jo
sarb
add
ljmp
fsts
mov
fisttpl
xor
aaa
testb
add
or
in
adc
push
jne
and
mov
jle
into
repnz
clc
dec
add
adc
jl
xor
add
dec
mov
movsb
add
cs
lcall
ud1
xor
in
jo
stc
rcrb
nop
lcall
dec
ja
sub
mov
sub
inc
push
inc
aam
out
in
inc
add
pusha
mov
sbb
and
add
and
loopne
mov
bound
popa
xor
cs
add
mov
sub
add
mov
or
mov
rcll
add
jb
and
inc
pushf
icebp
or
je
divl
mov
xchg
lret
lcall
dec
jnp
aad
jbe
gs
insb
je
add
or
jno
xchg
repnz
mov
jns
aad
add
xor
pusha
aas
push
push
sbb
push
add
cld
mov
pop
push
pop
and
cmc
add
cmp
and
pop
dec
cmpsl
cmp
into
sti
lret
loopne
xchg
xchg
add
or
mov
mov
pop
push
nop
scas
push
jecxz
insl
add
mov
cmpb
dec
add
add
add
arpl
mov
add
cwtl
rcll
je
dec
xor
stos
lods
add
mov
leave
mov
inc
nop
cmc
subb
mov
adc
xchg
mov
rolb
sbb
fdivs
add
data16
xchg
push
test
push
jge
inc
shll
clc
xlat
inc
mov
jne
bsr
lods
js
movsb
cmp
adc
inc
xchg
jb
shrb
or
outsb
repz
stos
cmp
fwait
sbbb
rolb
dec
pop
sub
clc
add
loope
cltd
add
mov
popf
mov
add
arpl
aam
test
ljmp
imul
subb
stc
dec
add
sti
mov
fld
and
aam
loope
lock
sar
sub
hlt
mov
ret
xor
pop
xchg
pusha
aas
addb
out
shrb
xchg
push
push
mov
dec
out
jl
cmp
xor
adc
lahf
push
loope
cltd
sbb
inc
jno
cmp
cs
mov
mov
cmp
aad
fadd
testb
pop
cmc
pushf
outsb
dec
lods
adc
cmp
add
cli
int3
or
add
sti
dec
in
rcrb
pop
aad
sbb
mov
lea
jbe
and
add
test
inc
cwtl
adc
js
jb
add
ljmp
sbb
pxor
iret
and
add
dec
ret
push
loopne
dec
shl
test
dec
xor
shrb
inc
mov
cs
jl
sbb
shlb
pop
imul
add
dec
mov
sbb
jecxz
add
sub
push
outsl
jo
loop
rol
add
push
int3
or
pop
add
add
and
repnz
sbb
jns
add
aaa
pop
scas
jne
dec
add
and
or
add
mov
push
pop
aam
push
call
mov
xchg
into
inc
movsl
add
cltd
jo
lods
bound
xchg
pusha
aad
add
xchg
cmp
insl
xorb
sti
popa
inc
mov
sub
add
jnp
ljmp
outsb
inc
mov
addb
cmc
pop
cmp
inc
cmp
stos
mov
and
test
repz
and
xor
aaa
popa
inc
push
fidivs
les
add
bswap
mov
mov
dec
cltd
xorb
cmpb
vpacksswb
xor
ja
add
dec
push
xchg
add
imul
cli
fistl
sub
js
jl
cld
jp
xor
nop
popa
xor
add
lods
sub
add
sbb
sub
jl
adc
pop
lods
add
xor
in
xchg
or
adc
pop
dec
lock
nop
sbb
inc
aas
pop
sbb
mov
in
xor
int
fs
xchg
outsb
jno
inc
mov
adc
add
and
cmpsl
add
sub
sbb
push
or
andb
xchg
mov
std
pop
cld
stos
jl
jp
mov
xor
in
ljmp
aaa
pop
push
adc
outsl
pop
pop
test
scas
mov
repz
pop
xor
je
inc
jnp
lods
adcb
jp
cmpsb
inc
pushf
arpl
xchg
iret
dec
jns
int3
and
or
lods
pop
adcb
pop
jne
lock
sbb
es
pop
nop
mov
xchg
xchg
push
dec
mov
ds
and
and
ret
add
mov
add
sahf
pop
add
sub
sub
push
iret
pop
dec
xchg
das
lock
dec
test
aas
fstl
sbb
std
jne
add
shlb
sbb
push
movl
rolb
inc
nopl
mov
sbb
int3
movsb
or
jbe
aam
dec
jae
lret
popl
test
inc
jmp
add
in
adc
and
or
xchg
or
add
gs
add
push
mov
push
cmpsb
xchg
mov
mov
ret
iret
jle
push
push
jbe
imul
jae
pop
xchg
dec
mov
fadds
pop
andl
mov
mov
lret
js
scas
mov
je
add
jge
sub
mov
or
sbb
rcl
cltd
mov
movsl
jl
add
sub
push
adc
ds
outsb
js
jg
mov
cmp
addb
cmpsb
cs
jl
jge
push
int
out
dec
outsl
inc
add
repz
jns
out
dec
pop
hlt
cmp
add
rolb
lahf
sbb
pusha
sub
pop
and
fldl
cmp
in
je
test
sub
adc
fmull
push
push
mov
sub
lds
mov
xchg
push
bound
dec
ffree
add
add
mov
inc
mov
mov
bound
adc
add
insl
roll
and
inc
popa
scas
or
test
pop
fwait
mov
mov
mov
cmp
push
pop
inc
jae
dec
sbbb
pop
out
inc
mov
adc
push
cmp
add
jae
push
cmp
and
push
enter
outsb
push
xorb
xor
loopne
mov
leave
adc
lret
or
dec
clc
jnp
jbe
dec
stc
insb
sbbb
data16
cltd
mov
and
add
insb
dec
add
out
sarl
addb
test
sub
pop
xchg
stos
add
cmp
fcmovnu
xor
add
jae
cld
icebp
lret
idiv
jmp
inc
add
jb
sbb
icebp
xor
in
divl
add
sbb
shlb
stos
mov
sub
je
ror
sarb
fistpll
jmp
pusha
mov
pop
cmpsl
fs
add
sti
rorl
gs
dec
pop
insl
jge
inc
ficoms
in
pop
push
filds
fistpl
mov
jmp
and
cmp
mov
in
add
lock
xor
jl
mov
cmpsb
mov
roll
sbb
jle
mov
push
jne
dec
shll
lret
add
imul
mull
aaa
jp
cmp
jo
add
xor
mov
fiaddl
push
sbb
add
cmc
ds
push
jg
inc
repz
pop
fucomi
pop
data16
adcb
inc
xchg
sbb
fidivrl
mov
push
clc
dec
fnsave
sbbb
stos
sub
gs
mov
add
lcall
cmc
lods
andb
pop
scas
clc
popa
mov
add
push
sar
add
push
in
subb
out
mov
adc
clc
add
and
jle
add
mov
or
push
sub
sbb
jge
aam
aam
xor
cmp
dec
jbe
sbb
rcrl
add
xchg
fimull
stos
adc
jnp
lahf
xor
mov
xor
cli
pop
std
notl
repnz
sahf
inc
insb
xor
add
cld
and
lods
out
push
add
mov
mov
add
dec
xchg
test
test
fsubrs
fucomp
mov
lret
hlt
fdivrl
cmp
in
mov
cmp
out
inc
dec
cmp
mov
insb
inc
jns
sti
daa
sbb
les
rorl
push
or
add
xor
dec
fsubrs
sbb
jge
push
fwait
mov
out
or
es
pop
or
inc
xchg
dec
loop
shl
stc
data16
scas
inc
cmp
xchg
das
mov
cli
mov
roll
cwtl
pop
dec
mov
mov
rolb
pop
addb
add
cmp
pop
inc
int3
aaa
pop
pop
out
mov
scas
add
inc
add
or
arpl
add
mov
adc
out
add
push
loopne
imul
dec
inc
lods
lcall
sti
push
std
cmp
add
xor
int
ror
cmp
pop
and
aas
or
sbb
ds
add
sbb
jb
add
sub
rolb
xor
xorl
and
fnstenv
adc
adc
sbb
ljmp
jg
mov
sub
lock
push
rcrb
mov
mov
sub
dec
xor
popf
call
cwtl
pusha
arpl
mov
cmp
int3
jle
add
aam
xchg
nop
rolb
insl
aad
rcll
cmp
sbb
into
jle
loop
add
add
stos
sub
inc
cmovs
and
xchg
push
dec
add
mov
inc
test
push
xor
lcall
inc
and
xchg
int
jge
dec
push
add
mov
pop
aaa
dec
add
in
cmpsl
or
ljmp
and
inc
outsl
pop
clc
dec
gs
xchg
jo
popf
addr16
out
adc
mov
push
pop
add
je
bound
in
int
xor
popa
xor
push
xchg
xor
mov
jne
pop
dec
inc
les
mul
add
jnp
cmp
pusha
popa
orb
jo
jmp
lock
aam
out
add
sbb
popl
xchg
jbe
or
add
gs
sub
mov
pushl
test
sbb
dec
mov
and
cmp
pop
xor
add
xor
jmp
pop
and
roll
pushf
iret
rorl
and
ljmp
loopne
cmp
jnp
add
ret
cmp
jp
adc
mov
pop
jecxz
cli
cmp
ljmp
mov
ds
add
xchg
add
mull
je
in
sbb
in
pop
sti
test
movsb
and
add
dec
fmull
out
add
add
sbb
push
iret
dec
stc
and
cs
push
sub
xchg
add
mov
movsl
test
nop
sbb
sub
jle
adc
inc
add
in
push
jns
adc
add
push
xlat
jg
subl
andl
jbe
nop
hlt
push
mov
data16
shlb
cld
xchg
add
mov
mov
sbb
notb
adc
inc
cmp
cmp
add
stc
jp
aam
push
mov
sbb
mov
inc
shlb
cmpsb
or
rolb
cmpsl
push
in
mov
dec
les
hlt
and
stos
pop
pop
pop
stos
or
inc
lds
pop
mov
push
sbbb
fcoms
add
push
add
mov
pusha
sub
aam
sbb
in
mov
xor
loopne
add
ret
in
sub
pop
mov
enter
fs
cmpsb
pushf
add
das
jp
lcall
sub
mov
clc
add
push
mov
rolb
gs
mov
mov
push
mov
and
pushf
add
xchg
cmp
or
les
aam
cwtl
pop
lea
insb
sbb
aas
and
inc
stc
mov
loopne
js
mov
cmp
push
shrb
add
sahf
cmpsb
pop
or
stc
mov
add
add
enter
cmc
jge
ja
sub
cmp
sub
jo
bound
pop
pop
and
mov
ret
mov
jb
dec
or
or
and
add
sbb
cltd
roll
fildll
aam
mov
inc
pushf
adc
mov
cwtl
or
xchg
mov
jmp
mov
fcomp
or
add
pop
add
xchg
xchg
mov
and
adc
and
add
es
sbb
push
jb
or
fcomp
fwait
add
mov
xor
sbb
push
or
dec
add
push
sbb
adcb
add
aaa
mov
fdivs
mov
cli
xor
cmp
and
add
xchg
loope
cli
jae
add
jg
xor
pop
xchg
mov
lock
out
aam
mov
xchg
add
loopne
addr16
popa
test
add
jb
xor
cmc
and
sarl
jle
jnp
push
and
push
pop
cs
push
mov
sbb
hlt
xchg
sub
inc
add
lock
imul
sbb
add
jnp
cld
test
clc
stos
or
cmp
fs
or
jmp
push
adc
rcrl
dec
add
xor
fiaddl
out
sbb
mov
bound
mov
push
cmp
add
enter
cmpsl
add
je
pop
mov
aam
nop
sbb
xchg
sbb
enter
pop
cs
mov
jo
stc
clc
mov
cwtl
int
repnz
mov
imul
mov
add
clc
aas
add
das
xorb
sbb
jb
add
add
mov
jge
sbb
xor
je
aas
adc
leave
jne
pop
inc
imul
cmp
movsb
dec
bound
jecxz
inc
add
sub
mov
xchg
xor
insl
mov
or
add
mov
fsub
xorl
fucom
test
add
or
fisttpl
dec
pop
jp
lods
cmpl
sub
shlb
cmp
jnp
rcrl
daa
rclb
mov
rolb
scas
mov
rclb
sbb
daa
ljmp
xchg
or
ja
add
jp
ret
mov
mov
add
cmp
out
in
push
xor
mov
inc
pop
sbbb
mov
sbb
popa
jne
or
pop
add
dec
rcr
jae
add
mov
in
js
push
fs
mov
daa
rorl
out
mov
aam
pop
repnz
pop
and
shrb
pop
lret
xor
sbb
sbb
push
pop
xchg
inc
cmp
mov
mov
push
or
inc
jne
add
faddl
fdiv
aam
push
xchg
mov
aas
fimull
push
mov
and
loopne
mov
dec
pop
sbb
cmp
or
bound
sahf
inc
shl
adc
add
push
add
es
sbb
cmp
insl
paddsb
pop
add
and
es
loopne
xor
mov
push
adc
lods
cmpl
enterw
jecxz
loop
adc
mov
loopne
add
into
das
mov
pop
sbb
arpl
mov
movsl
or
mov
push
and
popf
xchg
xorb
jns
push
psrad
gs
mov
or
pop
sub
mov
movsl
out
clc
cmp
mull
xor
and
or
addb
fisttps
cs
mov
aad
mov
inc
cli
xor
scas
jne
test
jae
mov
pop
sbb
mov
mov
testl
imul
out
push
cmp
into
movsb
jb
shl
xchg
cmp
pop
sub
mov
mul
paddsb
xchg
pop
fdivrl
flds
loope
repz
or
mov
rcrb
daa
test
mov
test
sbb
popa
adc
aas
addb
test
or
popa
push
sub
and
cmp
in
add
xchg
cmp
rcr
adc
inc
mov
sub
inc
push
in
jp
adc
ret
int3
paddusb
shlb
jmp
xor
ret
cmp
and
bound
andl
es
mov
lock
jecxz
jle
mov
jmp
push
add
arpl
cmp
mov
in
fnstenv
mov
repnz
bound
test
pop
push
enter
imul
push
mov
aam
adc
into
add
ret
push
pop
cmp
pusha
jns
pop
inc
or
sub
sub
lods
fxam
jno
rolb
mov
and
adc
push
inc
cmpb
subl
jo
in
add
mov
mov
and
clc
cmp
pop
push
sbb
clc
jecxz
into
cmp
xor
add
lods
cld
test
add
jl
xor
jns
push
pop
mov
and
out
inc
pop
mov
cld
mov
add
daa
inc
pusha
in
xchg
cmp
ret
popa
jmp
add
adc
cmp
add
add
mov
pop
cltd
fstpl
add
les
pop
ret
ret
sbb
dec
sub
xor
sub
jbe
add
scas
sbb
jmp
add
push
adc
add
lea
mov
add
outsl
sbb
hlt
fnstcw
loop
dec
imul
in
out
lods
mov
pop
xchg
fnstcw
sub
imul
jl
jae
add
in
xchg
mov
fdivrl
jae
cmp
xor
add
jmp
push
push
clc
mov
or
jae
adc
roll
lods
lods
mov
stos
out
sbb
mov
jno
mov
jg
dec
push
jnp
add
mov
jbe
daa
xlat
test
xor
or
sub
or
push
sbb
mov
push
or
pop
xor
loope
xchg
add
addr16
loopne
in
mov
inc
and
mov
add
jl
out
in
and
pushf
sub
pop
jg
sbb
and
jp
inc
cmp
sbb
lds
push
push
rorl
add
add
inc
sbbl
mov
pop
popl
paddusb
aaa
cmp
or
inc
test
rorb
cwtl
add
xor
pop
adc
jae
in
repnz
jge
add
adc
adcl
jp
imul
rolb
jnp
push
mov
xchg
xor
cmp
and
cmp
dec
out
clc
jns
add
xor
cmp
arpl
int
xchg
mov
movsl
aam
jge
stos
loop
add
lret
add
nop
outsl
add
or
mov
pop
mov
div
mov
lret
inc
add
nop
adc
jle
ja
mov
mov
insb
push
mov
pop
imul
inc
push
sub
cmp
test
push
mov
sti
jl
add
ds
lds
mov
adc
loopne
mov
scas
cwtl
dec
shlb
scas
push
jno
jbe
add
int3
gs
sub
mov
push
clc
inc
popa
sbb
xor
cmp
out
or
cmc
negb
mov
inc
scas
adc
sbbb
dec
incl
pusha
fdivp
ret
or
dec
cmp
and
add
fcoms
sbb
add
add
arpl
jmp
add
jb
inc
mov
fsubrl
xchg
out
cld
jae
add
or
push
sub
xchg
xorb
in
lahf
jno
jg
add
rorb
push
cmc
syscall
pop
loopne
mov
ds
and
xchg
mov
xor
pop
addl
loope
je
cwtl
adc
push
inc
insl
push
rorb
cmp
or
add
xchg
push
pop
lcall
arpl
push
and
xchg
cmpsb
xchg
add
cmp
lods
mov
mov
pop
xchg
add
out
jno
mov
dec
or
cltd
clc
pop
sti
cwtl
rolb
das
and
or
push
or
mov
jbe
fcomps
inc
add
std
ret
movhps
mov
leave
testb
xor
call
cmp
or
jno
jns
add
fcomp
mov
mov
mov
cmp
sbb
clc
stc
add
nop
jae
add
aaa
or
cmp
dec
mov
icebp
add
into
shl
lcall
test
orl
sbb
leave
add
or
prefetch
mov
iret
pop
daa
test
lock
pop
scas
flds
mov
jb
mov
push
add
mov
xchg
sbb
scas
xchg
lock
cli
add
and
pop
push
xchg
aad
mov
rep
and
jmp
ds
xchg
add
lods
mov
push
dec
cmp
add
test
lahf
fisttps
xor
aas
push
and
xchg
jns
push
jno
cmp
pop
and
cmp
pop
jl
scas
push
xchg
mov
aaa
xor
loopne
mov
ror
dec
add
pushf
popf
inc
addb
rclb
loop
lcall
testl
call
fimull
jecxz
jmp
imul
add
sbb
push
pop
or
jo
pop
std
sub
cmpb
repnz
cmpsl
adc
loopne
xor
adc
sbb
into
pop
mov
lock
ret
sub
outsl
rcr
jbe
cmp
sbb
shlb
cmp
ljmp
xor
pop
leave
jo
lahf
add
pop
test
pop
dec
arpl
sbb
mov
dec
mov
inc
testb
pop
scas
ss
nop
add
pop
loopne
hlt
and
rcrb
and
or
push
sub
insb
addb
test
repnz
lcall
mov
xor
movsb
mov
jns
add
idivl
inc
add
shr
add
adc
arpl
add
in
pop
popf
adc
insl
shll
ret
sarb
inc
jo
add
cmc
dec
sbb
push
rcrl
inc
fsub
adc
sub
xchg
push
scas
adcb
xor
es
ljmp
adc
je
and
pop
test
icebp
dec
cli
sahf
add
decl
test
shlb
movl
xchg
shll
push
add
sar
or
stos
call
mov
push
out
sbb
mov
add
imul
mov
fs
push
inc
mov
mov
fcompl
sti
int
inc
dec
inc
add
mov
lock
shlb
loopne
push
jb
pop
mov
fildl
jns
add
pop
cli
pop
decb
in
cmp
xor
or
pop
arpl
pop
repz
or
dec
cmpsl
push
loopne
aaa
cmp
add
clc
sub
mov
mov
push
add
cs
dec
shrl
mov
lds
test
and
movsb
pop
add
ret
or
cs
jno
lods
adc
pop
arpl
ds
mov
add
aad
cwtl
jno
pop
imul
sbb
aas
sub
adc
lret
or
sub
test
xchg
loopne
aas
pop
xor
sub
xor
lret
or
inc
in
test
ret
clc
push
pop
adc
inc
mov
and
or
and
std
inc
movups
and
or
jmp
roll
push
lods
enter
add
cmp
mov
mov
adc
jno
add
inc
fwait
lahf
mov
ret
loope
out
mov
mov
xchg
aam
sarb
scas
outsl
dec
sbb
repnz
sbbl
movsb
cmpsb
cmp
sbb
push
es
pushf
mov
inc
jnp
shlb
add
xchg
bound
xor
in
dec
into
pusha
mov
sbb
jae
mov
sub
push
cs
xchg
aam
cmp
sbb
and
lock
add
out
and
jnp
lcall
iret
popa
inc
and
leave
or
jg
stc
xor
dec
in
push
push
xchg
xor
shrb
addr16
icebp
adc
jnp
in
in
jne
loope
dec
cmp
mov
pop
std
popf
test
mov
jge,pt
add
ret
adc
dec
jno
add
pop
negl
jo
fld1
int3
push
push
xchg
sbb
clc
sbb
push
mov
mov
inc
pushf
add
scas
jge
das
adc
addl
cmp
rclb
mov
add
jg
and
outsb
add
pop
ljmp
or
mov
and
mov
mov
jnp
add
lahf
movsb
loop
cmp
and
xor
push
pushf
ds
push
jo
lahf
jb
push
pop
add
mov
adc
jnp
cmp
js
xor
inc
push
add
ret
jecxz
pop
dec
add
push
sub
lret
outsl
int3
jg
dec
sub
sub
or
push
cmp
shl
test
lahf
jbe
scas
mov
mov
movsb
or
inc
or
sahf
pop
xor
iret
jl
pop
mov
lds
add
ret
ss
xchg
pop
clc
cmp
sbb
rclb
shlb
jne
push
std
ja
inc
add
jmp
add
mov
xor
int3
lds
inc
nop
and
xchg
jne
arpl
mov
ret
mov
mov
call
imul
mov
add
adc
jne
xchg
add
cmpb
pop
push
or
cmpsl
xorb
jb
mov
jle
add
mov
inc
adc
addl
xor
flds
aaa
push
in
adc
or
shll
aad
fwait
rolb
pop
bound
enter
xchg
pop
inc
cmpsl
cmp
shl
xor
inc
sahf
fstl
adc
enter
pop
cmp
and
push
mov
and
sub
push
std
sub
aad
add
or
or
fmul
hlt
and
sub
loopne
sub
add
loop
ja
fbld
mov
popf
jle
mov
cltd
loop
push
jp
xlat
add
mov
add
arpl
cld
dec
inc
push
jl
cwtl
push
add
mov
add
dec
mov
push
test
add
jbe
jo
xchg
mov
push
bound
cmp
sarb
add
and
enter
out
pop
fwait
push
or
cmp
lods
add
add
mov
pop
mov
add
das
out
daa
sbb
and
add
aaa
cli
mov
addr16
nop
jmp
gs
aam
mov
movsb
add
dec
inc
test
push
sarl
jbe
insb
add
repnz
push
addr16
add
xor
mov
lock
mov
lods
gs
jae
ficoml
pop
ret
add
fistps
xchg
in
rorb
pop
mov
fnstsw
loopne
cmp
roll
xor
sbb
sub
xchg
dec
add
and
dec
ret
jno
or
and
dec
fisttps
and
aaa
in
add
out
cmpsl
pusha
xor
inc
add
shll
inc
lock
xchg
push
fidivrs
pop
into
mov
jne
xor
adc
cli
jno
shufps
add
pop
imul
bswap
add
sahf
repz
in
std
rcr
xor
fwait
add
adc
stos
scas
jne
jl
dec
inc
pop
lar
cmpsb
pop
sqrtps
lods
lds
mov
jne
out
push
mov
xor
test
popa
lock
mov
push
add
sti
sbb
add
inc
rcll
lcall
add
add
aaa
pop
mov
jo
loope
in
push
jmp
cmpsb
mov
pop
insl
pop
dec
rcll
out
and
push
shrl
loop
xor
mov
cld
ljmp
mov
add
test
dec
add
outsb
jp
cmp
ret
and
dec
or
sub
testb
sbb
adc
sbb
jmp
xchg
cmp
insl
pop
jle
loopne
dec
add
sub
imul
inc
imul
cmp
fldl
stos
lods
in
add
sbb
flds
insb
push
clc
scas
jnp
pop
cmp
jp
je
pop
cmp
dec
add
mov
movsb
add
out
ljmp
das
loopne
movsl
pusha
inc
insb
pop
stos
xchg
decl
mov
and
mov
add
mull
icebp
in
inc
add
ss
add
call
xchg
jns
xchg
jecxz
leave
sti
push
pop
mov
out
xchg
subb
mov
push
cmp
sbb
sbbb
xchg
xchg
jne
xchg
xchg
aad
pusha
nop
mov
pop
adc
add
push
test
popa
or
clc
adc
js
outsl
ret
jle
add
sahf
lock
and
mov
sub
nop
inc
pop
aam
jne
les
add
push
jp
popf
mov
sti
loopne
mov
enter
mov
or
int3
or
test
fs
inc
add
mov
inc
cs
mov
orb
mov
orb
push
add
cmp
pop
call
aam
dec
push
les
mov
outsb
inc
push
adc
call
in
adc
dec
mull
int3
es
mov
and
push
lds
add
push
mov
cld
sub
sbb
sbb
cmp
push
mov
cmp
mov
loope
xchg
mov
sbb
loop
cs
sbb
addb
cltd
mov
xor
mov
test
rcl
sti
lahf
jns
jle
add
or
dec
cmp
pop
add
cmc
xor
add
scas
push
lods
pop
push
nop
fyl2x
sub
cwtl
mov
shlb
mov
into
jge
add
cmpsl
shrb
sbb
jns
cmp
fwait
insl
mov
sbb
mov
repnz
rorb
lock
and
cld
mov
push
lock
loopne
out
mov
xchg
stos
rcr
jmp
incb
cmp
es
push
mov
add
push
enter
cmp
test
jnp
fdivr
pusha
or
add
cmpsl
push
xchg
push
test
push
orb
mov
jg
push
in
push
fnstcw
and
addb
gs
clc
imul
fcom
outsb
pop
hlt
push
cmp
dec
xchg
test
pop
popa
gs
inc
push
or
add
push
add
xchg
jg
or
inc
cwtl
imul
jbe
mov
hlt
notl
arpl
add
out
aad
jp
loopne
push
outsl
orb
adc
daa
mov
clc
ds
pop
cld
aaa
adc
cmp
add
loope
jb
roll
call
mov
add
fwait
pop
out
notl
add
lods
push
pop
pop
sbb
pop
sarl
dec
mov
adc
test
xor
lods
mov
push
aad
adc
push
call
xor
jl
int3
test
add
inc
jbe
xor
mov
xchg
mov
rcpps
mov
fs
jnp
sbb
jmp
int3
add
cli
fiaddl
ficoms
roll
mov
inc
add
push
pushf
sahf
push
pop
or
dec
je
sub
cmc
orb
adc
mov
ret
lds
mov
mov
pop
pushf
xchg
push
je
arpl
adc
push
les
enter
mov
add
add
and
add
scas
das
jno
inc
push
clc
pop
mov
subb
push
sbb
bound
out
test
push
dec
hlt
lahf
or
out
repz
or
mov
mov
xchg
scas
pushf
inc
repnz
jb
add
int3
mov
inc
jne
sub
mov
add
repnz
test
mov
sbb
xchg
cmp
push
add
xor
mov
mov
jge
shrb
xlat
daa
jecxz
mov
pop
dec
push
cmp
add
push
pusha
and
jl
cmp
dec
cli
cld
add
xlat
test
inc
cltd
andb
les
add
xchg
pop
ret
aas
jns
add
inc
ficoms
movsb
mov
sbb
stos
aad
fdivrl
adc
sti
or
dec
lock
add
stos
xchg
push
push
sbb
jo
call
pushf
pop
xchg
jns
in
bound
sbbb
roll
push
jmp
mov
xor
aas
stos
js
out
inc
std
mov
adc
push
sub
mov
add
mov
push
add
dec
sub
mov
add
cmp
mulb
in
adc
pop
dec
shlb
cmp
sbb
stc
mov
loopne
test
mov
lahf
rolb
lcall
jnp
ret
inc
or
adc
cmpsl
add
push
sub
shrb
xchg
mov
dec
mov
cmp
or
and
enter
ljmp
loopne
push
hlt
add
into
push
cmpsb
pop
stos
xor
inc
pop
ja
nop
and
lock
enter
fldcw
add
jae
call
pusha
nop
fchs
std
or
sbbl
data16
push
shrb
mov
add
add
shr
movl
test
je
nop
add
sbb
dec
sbb
xlat
mov
aaa
sub
pop
or
and
adc
add
dec
add
outsl
lea
cmp
sub
mov
jnp
pop
xchg
pop
xchg
call
cmpsb
jb
add
idiv
jb
or
hlt
lcall
fisubs
flds
cld
call
ljmp
jno
inc
stos
les
or
lahf
add
stc
mov
jbe
jo
mov
aad
inc
jb
mov
lock
inc
sarb
cwtl
repz
adc
pop
scas
jne
pop
pusha
mov
or
adcl
in
adc
pop
lds
add
faddp
lods
prefetch
xchg
push
sbb
inc
fadds
pushf
std
ljmp
ja
push
jo
test
andl
stos
dec
cmp
or
sbb
xchg
sti
ss
dec
insl
sbb
add
rcrl
add
and
js
incb
or
int
push
call
inc
sub
loop
clc
xchg
jle
add
incl
cmpb
pushf
call
inc
pop
xor
test
mov
bound
sub
jmp
cli
or
cltd
test
sub
mov
add
shrb
aad
or
iret
sub
dec
pop
sub
pop
roll
inc
nop
mov
sub
mov
shr
jle
pop
add
aaa
mov
scas
jbe
add
bound
sbbb
lret
and
push
icebp
outsl
popl
add
push
jo
pop
xchg
or
add
lods
xor
or
jecxz
mov
xorb
sub
sbb
xor
adc
mov
add
xchg
mov
or
insl
sub
je
mov
sahf
add
fwait
add
shlb
stos
mov
sbb
lahf
xor
add
lret
xchg
shll
sbb
fsubs
jl
lret
es
pop
insb
add
test
pop
mov
and
pop
ret
movsl
inc
lock
hlt
and
aam
push
pusha
mov
jb
add
add
add
sbb
movsb
rorb
std
mov
or
xchg
cmp
jne
or
cmp
inc
int3
cmp
add
sarl
push
movsb
xor
add
mov
repz
xor
mov
in
or
and
movsl
mov
pop
push
mov
shll
mov
mov
add
cmpb
add
shll
xlat
jl
addr16
jnp
push
sbb
enter
or
rolb
mov
add
push
xlat
cmpb
sbb
loopne
pop
push
dec
adc
test
movsb
add
out
lods
dec
pop
cmp
jne
mov
push
cld
push
push
outsl
inc
adc
mov
mov
xor
cmp
add
ret
shl
add
insb
lret
push
test
fwait
outsb
enter
sbb
add
mov
imul
mov
lahf
add
add
and
xor
ret
dec
cltd
jl
jecxz
sbb
lcall
lds
je
add
mov
xchg
arpl
sbb
push
xor
cmpsb
xor
repnz
push
stos
adc
sahf
xchg
enter
pushf
add
and
mov
xor
lret
andb
ja
into
mov
pop
cwtl
pop
add
dec
popa
mov
and
add
or
loopne
int3
and
aam
movsb
pop
pop
and
pop
loopne
ljmp
iret
pop
fsubrs
inc
mull
push
pop
add
icebp
add
sbb
nop
add
mov
fs
rcr
xor
pusha
jo
repnz
stos
dec
imul
out
lcall
out
or
jp
rcrb
sub
inc
pop
push
sti
lock
shlb
fs
add
in
mov
inc
jae
xor
pop
hlt
mov
push
add
cmpsl
push
jg
dec
inc
andb
adc
adc
jne
add
enter
insb
add
lcall
or
leave
testl
add
push
sub
insb
cmp
sub
fcmovnb
pop
bound
negl
nop
or
add
imul
jne
addb
push
and
fiadds
sub
jp
je
insb
pop
push
rorl
in
and
sbb
fcoml
lods
xchg
sbb
sub
je
in
cmp
enter
adc
add
addb
pop
inc
nop
xor
lret
lret
push
lods
rcr
cmpb
mov
and
xor
bound
and
shll
lods
or
xor
ret
adc
jp
mov
sub
xchg
jae
add
loopne
dec
push
cmp
insb
dec
xchg
jne
sbb
dec
call
mov
addr16
inc
aas
add
fdivrp
mov
add
outsb
lahf
jo
push
pop
adc
mov
fiadds
loopne
xchg
add
xor
cmp
pop
fisttpll
inc
xor
ds
test
cmp
adc
cmp
cmp
add
sti
ja
addl
add
fldt
push
pop
add
addr16
sbb
jbe
add
mov
add
cmpsl
and
mov
dec
add
mov
mov
cmc
dec
adc
aad
cwtl
mov
add
or
jbe
mov
out
and
pop
adc
adc
mov
cmp
stos
scas
mov
or
xor
popa
hlt
jo
in
jle
add
jnp
sub
jns
fisubrl
mov
cld
leave
push
mov
in
pop
and
pop
dec
add
test
or
sub
add
movsb
imul
lock
sbb
or
cmp
xchg
mov
pop
bound
nop
add
sub
mov
xor
xchg
pusha
dec
jne
mov
push
pushf
in
xchg
push
sbb
add
push
rol
movsb
and
out
dec
les
jg
push
sub
test
lock
std
add
add
stos
xchg
sbb
repz
pop
les
bound
hlt
cld
inc
sbb
add
insl
inc
icebp
mov
cs
sbb
outsb
add
add
and
inc
das
jo
enter
fbld
fsubs
decl
mov
push
adc
jmp
mov
pop
push
dec
mov
mov
mov
mov
roll
adc
mov
inc
mov
pop
mov
adc
push
sbb
and
cld
ljmp
mov
or
loope
test
test
ds
add
adc
sarb
or
push
les
add
xchg
bound
cs
jecxz
mov
xor
mov
jg
xchg
push
incb
inc
dec
out
subb
cwtl
gs
sbb
mov
jbe
loopne
mov
test
dec
cmp
int3
call
or
push
in
loope
clc
sbb
test
decl
or
add
adcb
xchg
add
jnp
xor
out
xchg
push
je
cld
add
push
lret
jge
jae
sbb
lahf
mov
add
sub
fmuls
cmp
and
clc
fsubrs
add
int3
xor
out
sahf
psadbw
and
dec
and
std
jecxz
inc
addr16
cmpsb
or
add
add
cmp
nop
inc
add
jg
dec
push
aas
xchg
xchg
lods
ljmp
cmp
add
jg
in
je
adc
adc
sub
test
dec
inc
adc
mov
lea
enter
rcrb
push
jne
dec
rorb
imul
push
mov
ja
in
add
inc
ficomps
pop
xchg
rolb
sbb
adc
mul
add
iret
sbb
cs
in
mov
bound
xchg
mov
rcrl
mov
xchg
mov
out
aaa
add
scas
jg
clc
mov
arpl
xchg
add
cmpsb
jmp
add
out
cltd
into
push
pushf
nop
daa
sbb
mov
add
fisubrl
aad
mov
lods
addl
xor
lret
push
pushf
nop
lea
jae
jne
inc
repnz
and
dec
add
mov
mov
sbb
xchg
add
fbstp
ficoms
add
mov
xor
rcrb
seto
xor
jg
mov
neg
ret
aas
inc
xchg
outsb
stos
push
cmp
push
es
mov
jl
or
daa
addb
xchg
repz
int
stos
lods
xchg
sub
xor
test
jge
sub
loopne
pop
add
jmp
fs
pop
or
das
xor
out
loope
mov
mov
stc
add
aaa
lods
addr16
adc
sub
push
out
imul
out
sub
cmc
or
sbb
pop
adc
jb
mov
and
repnz
aas
and
adc
pop
in
mov
push
mov
push
addl
std
xlat
xor
jle
sbb
mov
sbbb
movsb
xchg
add
mov
mov
test
lret
test
add
mov
mov
xor
inc
cwtl
mov
add
jmp
das
xchg
insb
xchg
xchg
push
movsl
std
add
fstl
lea
pop
rolb
pop
sub
adc
cs
or
shl
dec
cmp
add
adc
push
stc
int
rorb
hlt
addl
movsb
in
mov
imul
cmp
ret
xchg
and
andb
dec
insl
mov
jo
pusha
mov
adc
xor
push
push
fisubl
int
les
cmp
ss
loope
test
jg
xor
fbstp
add
cmp
sahf
xchg
imul
jmp
les
dec
sub
jo
cwtl
add
cmpsl
xor
popf
add
ja
push
cmp
jo
push
inc
and
or
cmc
test
adcb
test
stc
add
inc
loopne
mov
add
xor
or
mov
push
pop
push
cmp
xchg
add
mov
pop
inc
add
in
mov
add
sbb
rolb
out
xchg
in
xor
test
add
dec
gs
xor
mov
andb
push
push
hlt
and
or
je
movsl
push
rolb
push
iret
js
not
dec
inc
lods
add
in
ljmp
out
dec
add
cld
xchg
in
inc
insl
xor
outsb
jo
push
mov
xor
cmp
xchg
jo
mov
dec
jne
popf
scas
jl
add
push
xor
inc
add
fnstsw
push
xlat
add
push
jnp
ficompl
movsb
in
hlt
xor
stos
mov
push
mov
xchg
or
pop
arpl
mov
mov
xlat
fstpt
rcrb
xchg
add
fdivrs
inc
aaa
pop
mov
sysret
cmp
mov
add
push
mov
and
mov
cld
sahf
xor
push
and
enter
push
je
aas
out
mov
add
das
push
cs
cwtl
mov
in
push
cli
dec
fisubl
lds
add
jle
les
inc
mov
addb
pop
xchg
push
iret
jecxz
dec
hlt
fadds
out
push
and
lea
add
mov
clc
add
enter
add
pop
out
orb
fdivp
add
jge
adc
add
andl
loopne
call
aad
sbb
add
mov
sbb
adc
repz
pop
and
adc
dec
loopne
in
xchg
addr16
repz
jb
xlat
inc
and
push
add
adc
adc
sub
sub
scas
rolb
push
xor
ret
xchg
insl
loopne
or
push
lods
pop
rorb
inc
mov
pushf
repnz
pop
mov
pushf
xor
ret
cs
rolb
lcall
jbe
add
cltd
push
sub
in
sbb
adc
and
sbbb
lcall
add
arpl
add
xchg
adc
les
cmp
xor
jmp
or
mov
into
cmp
loope
adc
in
dec
jns
or
sub
sub
mov
fcmovnb
je
or
mov
jnp
fsubs
sub
xchg
mov
adc
add
push
pop
pop
inc
jb
push
push
ret
mov
in
movd
sbb
mov
cld
nop
xor
push
pushf
and
inc
pop
add
sahf
ja
aad
lds
add
gs
jno
mov
jle
arpl
lret
xor
inc
adc
xchg
pusha
mov
into
notb
ss
or
movsl
dec
jp
xchg
mov
add
push
fadd
stos
jns
lcall
xor
jecxz
lock
xchg
add
out
cs
adc
insb
push
nop
sbbb
add
lea
aam
add
cwtl
rorb
cltd
xor
sbb
sub
add
cmp
jp
add
xchg
or
xchg
add
xor
outsl
pop
fsubr
andb
inc
add
clc
cmp
sub
cmp
mov
jns
lcall
filds
es
daa
aam
add
cmp
jne
jnp
xchg
repz
cmpsl
and
mov
and
sub
xchg
lods
add
out
imul
or
nop
popa
sub
add
sub
inc
and
mov
jg
loop
push
jno
mov
add
xchg
das
roll
add
icebp
and
std
sub
or
mov
cmp
mov
fsubrs
pusha
mov
push
push
inc
sub
sub
jae
jge
inc
push
adc
stc
push
or
xchg
incl
aaa
movl
jge
add
ljmp
cli
pop
insl
movsb
js
das
jo
data16
add
imul
lcall
ja
cwtl
ret
mov
sub
call
dec
dec
jl
cs
mov
or
add
and
add
pop
call
add
xor
mov
lock
mov
ljmp
mov
jne
mov
mov
xor
jle
or
mov
add
pop
pop
pusha
in
add
adc
arpl
aas
mov
dec
pop
dec
rclb
jl
add
or
push
push
jo
cwtl
outsb
add
lahf
mov
add
shl
mov
xchg
in
add
shld
cmp
jnp
insb
xchg
faddl
jl
mov
adc
sbb
lds
out
pop
cli
mov
mov
fcompl
sub
clc
pop
pop
lea
fildl
mov
loopne
jb
or
add
out
and
mov
mov
push
subb
in
pop
add
add
iret
int
orb
lea
add
add
scas
pop
dec
insb
add
clc
xor
fistl
loope
mov
sahf
aam
mov
pop
sbb
aam
cmpb
lcall
xor
xchg
mov
jo
pop
dec
xchg
xchg
push
jle
ret
mov
sbb
out
mov
xchg
mov
fisubrs
push
aas
add
pop
jbe
add
in
adc
mull
loop
inc
mov
add
pop
insb
lods
add
mov
loopne
int3
push
xchg
repnz
loope
add
bound
sahf
and
xchg
out
add
insl
mov
sub
ret
add
adc
call
shlb
into
loop
or
gs
add
inc
pop
repz
add
test
mov
rcrb
adc
cld
add
sbb
or
pop
jbe
rorl
or
pop
enter
loope
sub
xchg
daa
test
add
add
push
stc
xor
cmpxchg
dec
icebp
dec
adc
pop
adc
fdivrs
aam
add
sbb
xchg
rorb
add
imul
shlb
add
icebp
adc
dec
fwait
adc
imul
and
sahf
add
cmpsl
adc
gs
stos
and
dec
and
subl
pop
fstps
nop
int3
inc
ss
add
mov
insb
jecxz
xlat
dec
pop
add
add
add
bswap
mov
jl
test
xor
je
stos
pop
mov
rcrl
in
and
movsb
adcb
inc
mov
fs
jge
outsb
mov
or
insb
push
add
mov
shl
pushf
jl
pusha
daa
or
jo
mov
sub
mov
push
cwtl
popl
imulb
xor
lret
enter
out
aad
sub
and
mov
sub
mov
aas
or
add
jle
dec
sub
imulb
dec
xorl
mov
add
sub
popf
mov
clc
ror
xor
add
mov
ret
sub
lock
cmpsl
sub
leave
aaa
jns
call
cmpsb
orb
add
cs
adc
addl
gs
pop
sub
xchg
mov
test
out
sbb
cmp
scas
xor
cld
out
pop
rcl
subl
adc
adc
insl
ss
jb
lods
ja
xchg
lea
rorl
lock
mov
sbb
xor
ja
add
mov
icebp
add
inc
in
push
or
sbb
jp
adc
loop
jl
data16
push
jae
in
add
xchg
mov
ljmp
addr16
inc
pop
add
jp
std
jo
pop
pop
jmp
sub
add
adcl
fldcw
movsl
int3
sub
sub
into
ja
push
add
insl
jae
pop
dec
aam
jle
movsb
adcb
js
mov
add
sbb
mov
adc
mov
xor
imul
mov
and
sbb
dec
inc
mov
jnp
loope
add
out
dec
cmp
add
repnz
pop
push
sarb
scas
test
mov
outsl
push
pop
fiaddl
xlat
test
je
int3
push
add
outsl
mov
dec
dec
add
inc
mov
out
cmp
mov
movsb
mov
inc
jg
or
adc
inc
clc
cld
jnp
or
cmpsb
mov
lock
or
xchg
adc
mov
push
xor
push
js
neg
sub
test
movsb
inc
add
cmpsb
inc
add
cltd
in
rolb
sub
pusha
stos
pop
lock
or
adc
add
jno
mov
shl
jo
pop
add
xor
js
or
add
or
add
gs
daa
mov
pop
cmp
data16
rcrb
outsl
lods
adc
cmp
xchg
and
or
push
add
data16
outsb
movsl
loopne
mov
mov
add
xlat
test
pushf
cmp
dec
add
cmc
ret
add
shr
dec
sub
or
cmp
mov
sub
dec
clc
mov
fsubl
cltd
xchg
mov
insb
pushf
add
movsb
and
cwtl
mov
push
cs
push
push
les
iret
push
ljmp
mov
add
inc
je
add
sbb
popa
dec
mov
mov
aam
iret
mov
add
dec
leave
jecxz
and
ljmp
daa
test
shrb
add
sub
sti
add
das
inc
push
push
push
pop
testb
movsb
pop
dec
jno
clc
pop
outsb
mov
add
xchg
jnp
jmp
pop
lds
xlat
repnz
icebp
ss
inc
shl
pop
lods
lret
jne
pop
pusha
cltd
fistps
push
add
lods
movsb
and
or
jecxz
test
aam
jecxz
test
inc
mov
enter
andb
pusha
movsl
fdivrs
pop
call
loopne
inc
cmp
mov
aas
lods
mov
sub
jp
jns
add
lds
add
xchg
rorl
sbb
adc
xchg
insb
adc
cmp
add
and
cmp
ljmp
rcrb
xchg
or
add
fadd
mov
testb
por
js
pusha
xorl
jno
aas
es
and
leave
js
inc
add
andl
add
iret
and
add
sub
movsl
addr16
cs
and
lret
push
mov
inc
sarl
inc
ficomps
xchg
jle
push
xchg
cs
jo
add
and
jecxz
mov
cmpsl
fistpl
je
sub
dec
mov
pop
add
lret
mov
add
xchg
cmp
addl
faddl
fdivrs
pop
out
pop
lods
xor
xlat
adc
sbb
pusha
add
ficoml
jecxz
and
jl
add
inc
lret
std
cmpsl
mov
ljmp
dec
outsl
imul
xor
arpl
push
sti
shr
lods
or
fadd
mov
jmp
ja
dec
sbb
inc
sub
sbb
or
or
jb
cmp
lods
hlt
imul
push
das
arpl
lret
fs
xchg
sbb
add
pop
outsl
arpl
mov
sbb
jp
es
add
mov
inc
insl
cmp
adc
jns
xor
add
fxch
dec
inc
addr16
mov
lret
sbb
addl
mov
and
xor
adc
sahf
push
add
and
inc
fisttpll
inc
lods
cmp
jbe,pn
test
aad
mov
clc
out
sbb
pushf
mov
data16
sahf
sbb
dec
mov
xor
add
mov
lret
test
sub
add
xor
add
cltd
jns
mov
repnz
out
inc
jb
add
mov
pop
shlb
cmp
rclb
fwait
cmpsl
cmp
ds
cltd
xor
xor
mov
inc
pop
add
sarb
out
test
fstps
or
fistpl
push
inc
xchg
and
adc
aaa
or
cld
xor
push
in
sbb
dec
jl
add
or
stc
sub
add
inc
mov
push
xchg
jns
mov
in
jecxz
mov
es
add
push
cmp
nop
mov
push
inc
push
rorb
repz
sbb
sbb
cmp
fwait
pop
sbb
sbb
jp
add
cmp
mov
or
xor
cs
inc
fstpt
add
pushf
mov
leave
imul
sub
in
nop
mov
nop
lahf
sbb
sbb
imul
aad
loopne
data16
into
sbb
push
inc
mov
out
cmp
dec
orb
mov
rorb
add
jmp
inc
outsl
stos
bound
adcb
dec
xor
push
test
lahf
mov
mov
adc
xchg
add
mov
ja
pop
add
xor
cmp
test
inc
popf
mov
imulb
jmp
mov
in
add
cmpb
out
mov
arpl
push
filds
inc
sbb
int3
add
ljmp
nop
jle
inc
pop
dec
nop
add
push
dec
ljmp
loope
scas
aam
sub
sbb
mov
leave
bswap
in
lds
adc
sbb
sub
fmuls
mov
jmp
add
test
adc
stos
add
aad
inc
add
mov
addl
popa
pop
shrl
dec
inc
adc
adc
cmpsb
add
or
fidivrl
push
pop
and
xor
in
push
movsb
lock
aas
pop
fiadds
push
inc
inc
pop
sbbl
push
pop
push
push
pop
add
sahf
mov
push
rorl
jle
mov
addb
icebp
dec
je
repz
mov
jnp
sub
sub
jo
into
sub
fldenv
push
mov
sub
leave
mov
jmp
mov
and
or
dec
int3
sahf
and
add
call
adc
add
fisttpll
and
or
jge
fs
sub
orb
rolb
xchg
mov
fwait
mov
in
add
cmpsl
icebp
pop
or
pop
mov
js
ret
jns
out
call
mov
dec
idivl
lahf
mov
pop
pop
out
adc
je
cmp
add
sub
idivb
inc
jnp
bound
and
ja
jno
mov
rorb
add
sbbl
add
test
cmp
fmul
jae
cmpsb
adc
push
sbb
inc
roll
pop
push
in
ss
cmp
or
movsb
dec
add
xor
popa
mov
and
fdiv
push
dec
xor
add
syscall
lock
daa
test
push
xor
inc
jmp
add
loopne
pop
das
xchg
fs
xorb
es
push
xchg
push
sahf
dec
lret
add
adc
cmp
jo
add
movsb
fldcw
xchg
pop
add
sub
add
mov
js
into
das
push
xchg
sbbb
jne
jmp
sub
mov
js
into
push
jns
jl
sbb
and
xchg
faddp
movsb
add
fisubl
scas
test
push
hlt
in
jns
lods
and
jno
add
mov
std
in
stos
stc
cld
scas
add
cmp
push
mov
add
mov
aad
or
in
sub
scas
push
das
pop
shrb
sti
inc
pop
and
lea
hlt
rcl
mov
or
mov
fists
add
add
aaa
insl
stc
loop
dec
adcl
inc
dec
cmpsl
push
iret
push
xchg
adc
mov
jge
sahf
js
lahf
cmp
adc
sbb
pop
movsl
pop
add
or
in
sub
add
and
xchg
jns
sub
and
add
dec
sbb
std
out
ffree
jae
cs
ja
add
pop
push
in
inc
sarl
mov
xor
push
mov
mov
add
repnz
fs
ss
add
enter
ljmp
or
test
repz
push
cmp
add
and
or
mov
std
call
xchg
repz
mov
add
imul
repz
pop
xlat
push
add
in
mov
mov
sbbl
fcoms
mov
xor
jae
cmp
or
or
add
clc
cmp
dec
jo
add
lea
subb
pop
rorb
mov
cmp
pushf
incb
and
popf
inc
pop
imul
or
push
loope
xchg
xor
jae
add
push
enter
test
add
and
addr16
mov
dec
sbb
fldl
std
xchg
mov
push
loopne
xor
ffree
xchg
mov
jg
clc
mov
mov
je
loop
movsb
or
inc
js
add
daa
in
fimuls
jnp
mov
loop
leave
mov
and
es
xor
add
sub
daa
add
sbb
sbb
xchg
faddl
push
or
aas
mov
mov
mov
rclb
leave
sub
mov
sarb
sub
pusha
loope
dec
fnstcw
mov
in
lea
adc
fmuls
in
add
scas
aas
sbb
lret
xor
push
outsl
in
push
cmp
adc
push
cwtl
loope
pop
inc
pop
test
popf
pop
or
stc
cmp
add
xor
sbb
mov
xor
adcb
sbb
add
or
and
sbb
inc
rclb
xchg
add
or
jne
fildl
arpl
sbb
in
out
add
add
cmpsl
add
lahf
call
push
sbb
push
xchg
and
push
enter
mov
and
jle
xor
mov
sub
ljmp
repnz
test
xor
jbe
cmp
add
adc
loopne
roll
retw
mov
cmp
xor
stos
testl
in
mov
adc
cmp
push
push
mov
add
push
push
cmp
lahf
ss
xor
addb
jbe
add
cmpsb
sub
les
mov
pop
xor
add
lock
fs
sti
arpl
cli
and
frstor
adc
imul
lcall
enter
out
rcll
out
ds
xlat
add
dec
movsl
adc
dec
push
jmp
pop
sub
pop
xchg
xchg
stos
sahf
add
std
sbb
xorb
push
lds
dec
cmpsb
pop
adc
pop
pop
test
xor
inc
mov
pop
pop
and
icebp
call
adc
pop
sbb
cmp
ja
xchg
adc
and
inc
pop
adc
sbb
lock
sbb
daa
sbb
mov
cli
rcrb
filds
mov
pusha
push
lret
jnp
push
cs
xchg
mov
pop
loopne
push
xchg
push
push
nop
sbb
addb
lcall
sub
cmp
filds
cli
movsl
imul
add
xor
fsubrl
jmp
bound
push
xor
mov
pop
shl
data16
or
mov
aas
add
sarl
pop
stc
fadds
call
add
pushf
add
mov
lock
mov
imull
in
add
test
add
mov
and
stos
push
pusha
aad
fadds
lret
adc
jg
push
add
or
mov
or
stos
jb
stos
in
jo
pop
mov
mov
sub
add
mov
dec
test
add
shl
add
cwtl
pop
add
rcll
adc
cmp
add
test
ljmp
out
shl
cld
add
cmp
cmp
fmull
xchg
daa
xchg
push
out
push
fidivrl
push
sbb
test
adc
int
or
add
arpl
fisttps
xchg
cs
fdivs
fists
in
xor
cmp
lock
push
mov
pop
ljmp
xor
imul
stc
packuswb
test
in
add
cli
sbb
mov
jmp
insl
add
das
dec
cld
jbe
add
int3
pop
movsl
and
mov
rorb
cwtl
sub
or
jp
pop
add
xchg
stos
sub
scas
fsts
mov
and
jg
cltd
adc
cmp
jae
divb
iret
shl
cli
sbb
outsl
jns
add
push
sbb
and
test
lds
sbb
add
in
int
aas
pop
jge
add
dec
inc
jo
cli
push
ja
xor
outsl
call
mov
mov
push
mov
out
or
aam
fwait
push
pop
xchg
pusha
push
ret
stc
int3
jmp
adc
js
add
in
arpl
push
dec
ret
push
sbb
clc
and
repnz
stc
imul
popf
jge
jp
push
adcl
cmc
add
jno
rol
shr
lods
pop
rorb
sub
rcrb
add
add
pop
clc
icebp
adc
jo
sbb
repz
mov
cld
xchg
test
hlt
lret
cmp
stc
add
cmp
fmul
out
bound
jmp
sahf
push
sarl
mov
loop
sub
shll
fcmovnbe
sub
adcb
ds
mov
nop
es
aaa
or
jmp
lea
rcl
call
pop
pop
xchg
sbb
adc
inc
test
adc
pop
adc
cmp
outsb
pop
lods
push
xorb
adc
push
cmp
inc
arpl
iret
lods
add
out
fsubrs
pop
lods
cmc
in
xchg
push
push
inc
fstp
or
add
jecxz
cwtl
rol
stos
inc
cwtl
sbb
inc
in
out
movsb
add
sbb
imul
add
jle
stc
dec
iret
add
pop
mov
inc
sub
adc
or
aas
add
mov
ljmp
xor
and
test
lcall
add
push
cmp
and
inc
pop
add
adc
cs
add
sub
pop
jp
inc
fimuls
ret
imul
nop
adc
cmc
imul
jl
fadd
mov
jnp
push
imul
out
cmp
dec
push
add
stos
andl
jp
mov
repz
inc
cmpb
sbb
mov
je
mov
sti
jecxz
shlb
xor
or
adc
push
mov
pop
add
imul
push
inc
add
rcrb
ret
sbb
add
popa
fnstenv
pusha
mov
mov
xlat
fs
roll
loopne
mov
add
xchg
pop
lret
adc
inc
jo
cmp
push
add
and
xor
inc
rcrb
inc
inc
fcompl
add
adc
hlt
add
data16
nop
jb
mov
int
movsb
add
jne
imul
xchg
in
add
lret
repz
sbb
add
dec
jmp
add
sub
insb
outsb
or
add
fstpl
adc
cwtl
push
pop
mov
pushf
test
jmp
inc
int3
dec
inc
std
mov
loop
fnstenv
shrb
lret
mov
mov
add
xchg
mov
sti
mov
inc
loopne
lret
cwtl
mov
sbb
xchg
pop
xor
fstl
jmp
rol
sbb
sbb
mov
pop
inc
adc
xor
lock
aas
jns
jg
cmp
int
cmc
in
and
ja
aaa
insb
ret
dec
mov
sub
add
xchg
mov
push
shll
mov
or
add
mov
repz
or
cmp
push
in
mov
push
add
xchg
mov
pop
jb
mov
jecxz
pop
std
ret
hlt
mov
add
sbb
inc
push
divb
push
mov
out
cmp
push
testb
push
ret
push
cmp
or
or
or
jl
std
push
ret
incl
dec
cmp
shl
test
test
sar
adc
sbb
dec
cli
sbb
pusha
inc
ret
xor
rolb
jl
test
mov
aam
push
out
push
adc
dec
cld
push
ret
addl
mov
adc
mov
or
add
es
or
mov
ja
pop
or
pushf
push
repz
inc
enter
pop
mov
fnsave
iret
addr16
femms
mov
push
dec
jmp
lods
sbb
add
xlat
xorl
push
dec
loop
jno
mov
sahf
mov
cmp
and
nopl
stc
pop
xorb
add
or
xchg
lods
and
cmp
jmp
loopne
pop
loop
pand
loopne
inc
mov
cmpsb
sbb
add
add
mov
adc
sub
cmp
icebp
hlt
rorl
jae
int
adcb
lahf
aaa
add
cmp
mov
inc
sbbl
push
insl
mov
icebp
jle
ret
lods
mov
outsl
leave
inc
mov
add
cli
movsb
mov
sub
and
pop
jo
jb
and
mov
scas
adc
or
addl
mov
xor
clc
push
rcrb
xor
dec
ja
add
pop
add
test
push
or
lcall
mov
nop
jo
add
pop
fwait
cmp
sub
jecxz
jo
ficompl
rol
mov
jne,pt
sbb
mov
pusha
mov
icebp
and
inc
add
and
sub
xcrypt-ofb
cmpsl
scas
xchg
adc
pushf
pop
or
push
add
add
mov
cmp
mov
push
inc
loope
clc
ljmp
or
adcl
dec
mov
pop
add
mov
sbbb
inc
pop
pop
pop
xchg
out
mov
or
jle
sbb
orb
iret
jne
mov
dec
push
push
xchg
loopne
inc
sub
cmp
ret
pop
push
dec
push
iret
fnstcw
ljmp
arpl
add
cmc
fs
cld
testb
insb
sub
or
add
scas
pop
dec
test
lahf
inc
leave
aad
push
jo
adc
mul
push
int
jbe
pusha
hlt
or
xlat
add
ljmp
repnz
and
popa
sarb
xor
out
fsubp
add
clc
subb
xchg
jo
xchg
imul
mull
pusha
dec
inc
push
setb
mov
out
js
ja
xchg
xchg
or
push
mov
lret
add
inc
xor
or
aad
inc
clc
fiadds
shll
stos
or
loopne
mov
es
jo
es
add
aaa
push
pop
add
stos
jb
mov
addb
xor
jnp
and
pusha
jb
testl
imulb
lsl
loope
ja
cmpb
sahf
bound
rcr
cs
cmp
lret
mov
aam
and
adc
mov
cmp
pop
iret
jnp
add
inc
cld
divb
cmp
add
scas
cli
or
test
lods
and
ret
cmp
fldl
test
das
xor
stos
dec
push
je
adc
mov
addr16
rolb
lret
sti
outsl
arpl
mov
lock
lahf
xor
jo
sub
dec
mov
es
cmp
insl
mov
pop
jmp
cld
xchg
mov
lret
in
addr16
push
je
mov
adc
sub
pop
cld
loopne
dec
out
shlb
mov
rcr
lcall
adc
sbb
xchg
mov
outsl
cmp
add
cltd
or
mov
add
loopne
jmp
mov
push
les
push
push
mov
xchg
nop
push
jl
pop
xchg
mov
insl
sub
inc
xlat
loope
mov
mov
adc
decl
test
rorb
add
jb
xchg
cwtl
sub
inc
fiadds
int
nop
inc
test
push
cmp
add
ret
jne
movsl
out
sbb
jo
sub
pop
lret
fwait
mov
and
les
add
bound
and
test
lods
scas
call
add
jo
jno,pt
mov
loope
test
arpl
push
int
sahf
sar
aaa
es
movb
cld
pop
jns
and
enter
pop
mov
push
add
adcb
mov
popa
int
sub
pop
and
imul
pop
jne
imulb
loop
cltd
adc
ljmp
inc
aad
and
nop
dec
and
dec
inc
arpl
cwtl
pop
add
pop
xchg
pop
testb
sbb
adcl
cli
fmuls
dec
pop
and
test
mov
movsl
loopne
lods
xor
add
outsb
xor
ss
push
mov
jle
lret
out
add
xchg
cs
pop
ja
jbe
add
sbb
cli
xor
add
mov
clc
into
rorb
lods
dec
mov
icebp
xor
xchg
out
xchg
mov
xchg
aas
and
testb
lret
in
and
push
or
sbb
pop
xchg
lcall
call
mov
mov
pop
insb
mov
push
lods
inc
popw
in
jno
mov
dec
add
xchg
mov
add
dec
inc
cmpb
pop
xor
xor
cmp
add
sbb
jne
add
lock
dec
dec
mov
jno
push
and
sub
push
sbb
shll
cmc
add
out
leave
add
adc
addl
inc
je
add
sar
push
dec
sarl
imul
ret
dec
adc
adc
mov
cmp
add
outsl
out
adc
dec
in
inc
mov
xlat
add
sub
ficomps
xchg
or
add
mov
rorb
xlat
jg
inc
push
dec
out
test
jmp
xor
loopne
push
je
sbb
test
bound
push
test
nop
incb
mov
lods
icebp
call
pop
cmp
add
inc
sub
pop
lahf
aas
in
mov
pop
xor
xchg
js
test
sbb
arpl
pushf
sarb
ret
pop
mov
jnp
add
sahf
fistps
inc
mov
push
add
xchg
mul
fucomip
jo
stos
and
iret
loopne
mov
stos
popa
pop
xchg
pusha
rcl
sbb
orb
dec
adc
mov
sub
jb
mov
dec
pop
add
mov
xchg
decb
pop
inc
ret
lds
fimull
add
xchg
mov
clc
mov
add
or
cs
push
and
xor
imul
pop
fisubrs
xchg
les
es
mov
xor
fistpll
push
adc
fsub
dec
test
mov
sub
fistpl
xchg
leave
popf
aas
inc
clc
mov
xchg
leave
mov
and
movsb
test
std
popa
sub
and
loopne
dec
mov
xchg
mov
pop
add
arpl
mov
add
pop
mov
push
aam
mov
xor
sub
cmp
jge
jmp
aaa
xorl
inc
in
jbe
and
leave
outsb
sub
mov
push
sbb
push
fcoml
inc
add
jo
lods
adc
add
cld
add
mov
inc
mov
pop
sub
and
mov
inc
enter
popa
pop
cmp
and
jmp
add
mov
xchg
mov
inc
inc
add
push
lods
fcoml
dec
rorb
mov
adc
adc
xor
sub
adc
push
add
add
inc
or
nop
xor
aas
cmp
pop
inc
sub
add
pop
std
arpl
add
or
add
pop
dec
cld
xchg
mov
add
movsl
cmp
arpl
stos
mov
lock
repnz
loop
js
jno
or
jecxz
lods
out
pop
mov
xchg
add
adc
ficoms
mov
pop
jno
add
mov
push
push
psrlw
ss
unpcklps
sbb
das
xchg
adc
and
mov
or
jae
fucomip
add
stc
or
push
pushf
cmpsl
pop
push
fildl
negl
jno
lret
cmpsb
jb
add
mov
jl
sbb
add
insl
shlb
fcomps
sub
add
rclb
add
icebp
loopne
shrb
cmp
mov
nop
mov
xchg
mov
inc
movsb
outsb
adc
add
out
aad
arpl
cmp
cs
in
push
xor
push
and
movsb
loope
mov
or
and
addr16
lret
add
or
jmp
add
js
and
inc
mov
add
pxor
mov
inc
aaa
rcrl
dec
mov
cmp
je
xor
xlat
add
mov
nop
mov
in
push
xor
roll
cmpsl
jg
mov
push
in
add
jmp
notl
pop
cli
jae
jle,pt
pand
je
jl
in
stos
push
push
and
mov
movsl
add
pop
es
fiaddl
out
xorl
inc
xchg
add
xchg
notl
add
negb
and
xor
inc
cmpb
loop
aas
aaa
rolb
ljmp
cld
mov
shrl
adcl
mov
in
adc
sbb
push
orb
hlt
xchg
and
jmp
aaa
sbb
nop
jno
fstl
out
cmp
xor
cmp
imul
add
sub
mov
fnsave
loop
add
ljmp
or
push
ucomiss
fs
cmp
shl
orl
xor
subb
fisttps
test
add
in
jl
push
xor
cmc
jb
aas
mov
and
inc
mov
mov
cmp
jecxz
test
dec
jo
int
jne
push
jge
mov
mov
addr16
insl
mov
cmp
cmp
mull
dec
scas
nop
xchg
add
movb
mov
clc
jle
pusha
addb
cmp
mov
xchg
mov
adc
je
dec
ficoms
cwtl
out
lds
fwait
inc
mov
add
or
xchg
mov
test
push
out
mov
aam
dec
dec
addb
add
adc
add
mov
jge
imul
mov
push
adc
sarb
icebp
push
mov
arpl
add
loopne
lahf
dec
adc
xchg
hlt
add
jb
lds
jns
ficompl
or
adcb
mov
jnp
or
push
or
aad
add
nop
int3
and
push
adc
xchg
mov
xchg
shl
xchg
cs
and
pop
sub
xchg
push
fistl
add
xchg
mov
gs
mov
test
repz
adc
test
pop
popf
add
dec
mov
or
add
pop
daa
sbb
add
add
add
sbb
hlt
add
xchg
js
repnz
jbe
pop
mov
push
sbb
fsub
mov
fildl
movsl
add
scas
or
test
stos
pop
inc
or
push
hlt
dec
add
add
xor
cs
psubusw
ret
lea
jae
add
adc
test
cmp
adc
or
dec
adcb
and
jp
mov
mov
std
and
aam
insl
add
xchg
add
cmp
pusha
push
je
jle
add
jo
and
movsb
adcb
xchg
xchg
pop
xlat
lds
add
jl
and
aad
mov
call
add
jmp
or
add
hlt
adc
cmp
cmpb
mov
mov
lds
call
push
jp
add
mov
testb
cwtl
add
xor
add
adc
dec
push
push
shlb
add
shufps
cmp
add
pop
shlb
xor
imul
fcomip
mov
outsl
call
jmp
jb
pop
inc
and
add
mov
or
fdivrs
jg
mov
and
cmp
mov
push
fiadds
push
daa
popf
dec
adc
xlat
add
and
xor
outsb
xchg
repz
mov
gs
mov
xchg
mov
decb
push
loope
aam
xor
and
shlb
rcrb
mov
jg
add
inc
mov
push
jmp
mov
sub
cmpsl
xchg
addb
mov
enter
or
add
out
aas
mov
pop
pop
xchg
mov
verw
jbe
repnz
pusha
testl
mov
inc
inc
pshufw
cwtl
fmul
sub
lahf
jne
pop
ds
push
sub
test
notl
mov
push
shr
test
into
adc
dec
add
cmp
mov
jns
mov
movsb
xchg
sti
or
add
inc
loopne
add
add
fildll
pusha
sbbb
sbb
xchg
loopne
cmpsb
add
fadds
and
pushf
or
add
shlb
fildll
dec
cld
roll
xchg
inc
push
xchg
fsub
into
sub
cmp
add
loopne
mov
dec
mov
in
inc
xchg
push
cld
outsl
add
pop
push
sbb
in
xchg
test
xchg
sbb
outsb
fistl
shrb
mov
cmp
pop
ret
xchg
test
mov
add
xchg
xlat
cmpsl
mov
clc
pop
xor
lock
xor
mov
lock
pop
add
test
push
stos
cmp
mov
or
pushf
ret
jno
inc
int3
jmp
aad
add
sub
add
jae
sbb
and
sti
and
fsub
jo
add
pop
pop
add
mov
mov
adc
int3
mov
pop
jbe
icebp
mov
inc
lock
cs
call
dec
cmp
inc
mov
add
loopne
adc
or
inc
cwtl
jne
inc
pusha
stos
add
jge
jo
push
add
inc
ror
stc
repnz
sub
or
jns
xadd
call
dec
dec
adc
add
bound
repz
xchg
lret
jmp
pop
adc
int3
scas
and
adc
int3
clc
add
dec
mov
icebp
aad
pop
jecxz
push
lahf
xchg
and
mov
xchg
xor
or
xor
add
shll
add
mov
sbb
into
and
mov
pusha
lods
pusha
xchg
popa
lock
inc
iret
mov
sub
jbe
mov
or
es
pop
outsl
nop
pushf
or
shl
cltd
and
sbb
fcmovnbe
lret
je
add
xchg
js
mov
gs
add
mov
arpl
imul
mov
les
fstl
pop
ds
pop
dec
mov
in
sbb
jp
shlb
das
fsubp
pushf
ret
test
xor
push
and
push
xchg
iret
add
lock
out
adc
js
xchg
adc
bound
and
adc
enter
adc
iret
sbb
xchg
outsl
mov
nop
ret
lret
ljmp
dec
out
lahf
loop
add
pop
push
orl
clc
loopne
mov
or
mov
pusha
jl,pn
add
sbb
hlt
outsb
add
pop
push
xchg
mov
sarb
ret
jnp
loope
daa
in
sub
sub
adc
ret
xchg
rolb
lods
int
and
cmp
ds
insb
sahf
jmp
mov
out
adc
dec
mov
jne
rcrb
fisubrl
sub
cmpsb
add
sbb
jle
sub
fsubrs
fcoml
outsl
jge
psraw
movsb
mov
pushf
dec
and
adc
add
xchg
add
push
sbb
jns
mov
mov
jae
xchg
shrl
jecxz
cmp
or
fwait
lahf
xor
mov
hlt
cmpsl
in
push
outsb
pop
sub
add
inc
mov
push
pop
mov
jl
pop
xchg
jne
int3
mov
in
cli
mov
jg
popf
adc
push
cmpsb
push
outsb
testl
call
mov
mov
push
pop
add
in
add
mov
mov
add
addr16
add
push
cmp
into
dec
push
push
sbb
add
cmpsb
fwait
jg
outsb
rcrl
lea
orl
pop
stos
and
fmull
sub
imul
or
add
pusha
or
and
imul
mov
add
or
xchg
add
scas
repz
add
sbb
movsl
cs
sbb
rcl
jl
inc
call
push
inc
add
out
shlb
cmc
push
mov
mov
xlat
pop
mov
faddp
add
out
je
add
push
rcrb
aaa
jae
add
addr16
jl
mov
or
push
cwtl
fiadds
cmp
sbb
pop
inc
pop
pop
mov
and
jae
sbb
subb
mov
fnstcw
add
push
out
mov
pop
sub
jle
inc
shlb
add
movsb
push
lret
addb
adc
pop
pusha
and
mov
fldt
pop
add
bt
insl
jbe
mov
enter
inc
and
std
add
lods
aad
jae
fsts
inc
shl
jno
aas
cmp
imulb
xor
faddl
sbbb
fwait
into
inc
rclb
add
xorl
xor
pop
add
mov
ret
add
mov
xchg
pop
add
push
mov
sub
or
jns
add
add
bound
in
inc
mov
mov
add
mov
cmp
add
push
popf
orl
xor
and
sbb
mov
sti
pop
inc
push
jo
xor
imul
mov
aad
mov
int
sub
add
dec
pop
addl
xchg
add
out
pop
mov
add
mov
or
add
mov
fucom
add
clc
ret
testb
cs
insb
imul
lock
stos
loope
clc
dec
add
mov
enter
ret
insb
cmpsb
sahf
pop
inc
idiv
int3
lods
fistps
pop
lret
add
sub
inc
subb
cmc
jne
cmpsl
add
mov
push
fcompl
sarb
sbb
fimull
cmp
lahf
sbb
and
enter
add
cld
mov
call
ret
push
mov
cwtl
fadds
add
adc
lock
mov
out
sbb
pop
andl
mov
jl
aaa
add
imul
aas
aam
loope
and
xchg
pusha
or
lock
inc
leave
push
hlt
add
dec
add
shr
test
cmp
mov
icebp
arpl
add
stos
nop
movsl
hlt
add
cli
mov
xchg
xor
dec
sbb
in
add
adc
lahf
add
mov
movsb
fwait
jb
add
daa
fmul
push
push
ss
add
fistpll
jns
lret
inc
xchg
subb
and
rcll
mov
mov
inc
mov
push
lods
lahf
xchg
add
jbe
mov
arpl
cmp
mov
jl
cmpb
push
fisubl
mov
cmp
mov
mov
mov
pop
sbb
jmp
or
add
mov
mov
add
test
and
aad
in
sbb
xchg
pushf
pop
sub
sub
adc
in
pop
lods
sbb
mov
mov
add
loopne
std
xor
and
shl
into
cmp
leave
mov
lahf
pop
fs
out
xor
and
dec
xorl
xor
scas
in
ja
adc
add
add
rcl
xlat
add
test
fists
mov
add
inc
subb
jnp
loopne
dec
hlt
out
jns
loopne
orl
push
mov
out
clc
ljmp
dec
incl
add
or
mov
jb
or
add
sti
lea
jmp
leave
mov
stos
fnstsw
mov
rol
fcmovne
fiadds
xor
add
rclb
rcrb
push
stos
hlt
push
add
mov
and
lds
gs
dec
add
and
mov
test
roll
pop
es
or
add
outsl
std
jnp
gs
and
xor
xchg
push
dec
jne
add
das
fistpl
mov
mov
mov
inc
and
leave
sub
sbb
jmp
dec
push
add
jo
xlat
mov
or
mov
int3
jo
push
dec
xlat
fucomi
cwtl
push
push
mov
adc
lock
jbe
js
add
cltd
nop
pop
testb
leave
aam
or
cmp
rolb
pop
ror
pop
mov
cmp
jp
lods
or
inc
leave
xchg
cmpsb
sbb
inc
push
sbb
fdiv
add
sub
dec
out
pcmpeqw
pop
mov
mov
rorb
rcr
push
rcl
imul
add
sbb
push
mov
add
sbbl
inc
add
fmull
or
pop
fdivrs
leave
lahf
mov
addr16
add
push
push
fildll
xchg
xor
rclb
lods
sarb
pop
cltd
dec
add
sahf
fsub
pop
add
push
xor
out
sbb
sub
loop
push
les
mov
or
and
aaa
adc
dec
mov
pop
pop
pushf
push
pop
cli
dec
in
jge
pop
sub
dec
scas
mov
xorb
adc
push
lods
push
inc
scas
cmpb
add
dec
push
dec
add
pop
sub
jg
cmp
mov
adc
cwtl
mov
gs
push
pop
pop
or
shrb
add
call
sbb
xchg
mov
stos
cmp
sbb
mov
add
and
and
mov
sbb
movsb
mov
dec
cmp
cltd
push
inc
sbb
dec
jmp
fwait
pushf
add
add
pop
popl
adc
int
push
cmp
add
ret
jae
add
mov
cmp
xchg
inc
pop
fbld
data16
movsb
add
cmp
dec
fincstp
dec
lret
add
push
sub
sub
cmpsb
jmp
aas
cld
call
add
cmpsb
shlb
add
dec
stc
int3
fucomip
daa
and
rclb
pop
aas
dec
mov
push
data16
repz
pop
insl
dec
shll
mov
repnz
mov
mov
add
je
scas
sbb
lret
sub
push
mov
sub
add
hlt
push
scas
stos
xor
jl
pop
dec
divl
dec
flds
sbb
sub
add
stos
mov
cmc
repnz
hlt
mov
out
and
hlt
xor
sub
jbe
sbb
inc
xor
ret
test
xlat
sbb
dec
sbb
push
add
adc
mov
push
push
add
add
inc
jle
pop
cmp
cs
add
cmp
pop
fcmovnb
jo
xchg
cmp
rcrb
insl
sbb
mov
fs
add
test
ret
mov
icebp
add
loope
cmp
add
add
inc
inc
adc
or
popa
jb
divb
push
dec
out
cmp
and
fistps
add
add
push
mov
mov
mov
jecxz
xchg
xor
lds
push
push
add
fimull
pop
and
xchg
fadds
insl
add
into
mov
cmp
inc
imul
test
add
cli
mov
sub
add
sub
inc
into
mov
dec
test
in
rorb
add
aam
call
push
mov
js
bswap
ret
cmp
aaa
mov
pop
mov
pop
jo
pushf
incb
dec
xlat
mov
sbb
mov
test
adc
and
inc
sbb
mov
push
aas
push
xlat
pop
xor
ds
jecxz
and
mov
jbe
imul
lods
mov
xchg
xchg
popf
rclb
cs
add
insl
inc
enter
or
add
imul
or
sti
stos
fucomp
add
ljmp
add
pop
xchg
jl
sahf
mov
pusha
add
push
hlt
stos
cs
nop
rolb
fcmovnb
inc
xchg
pop
icebp
xor
pop
cmp
xchg
push
das
jns
out
add
lock
xor
je
xor
add
adc
mov
jmp
shll
rol
and
or
sahf
cmp
inc
jle
aaa
and
xchg
lret
xor
fisubrs
sub
mov
mov
push
sbb
adc
add
pop
loope
mov
addr16
mov
mov
mov
add
add
pushw
fmul
sahf
rcl
push
xor
shlb
jmp
or
stc
lock
push
sub
cwtl
add
dec
daa
test
jge
jne
xchg
add
fbstp
popa
jae
add
in
sub
adc
loop
shlb
dec
inc
lahf
mov
cwtl
mov
and
cli
out
in
dec
push
inc
into
repnz
xor
movsb
add
mov
call
fiaddl
or
stc
xor
add
inc
rolb
mov
fcomps
aaa
pusha
jo
cs
adc
fs
ss
adc
repnz
cs
sbb
mov
dec
data16
mov
andl
push
xor
inc
xchg
test
or
clc
inc
sbb
and
xchg
xchg
add
cmp
mov
push
add
sub
fldl
outsl
fs
mov
add
rdmsr
out
cmp
fistpl
fcompl
in
add
fiadds
sub
mov
insb
xor
jg
shlb
pop
imul
into
lahf
jle
sbb
iret
xorb
xchg
xor
into
sub
xchg
arpl
pop
insl
mov
xor
adc
or
dec
test
inc
pop
fmul
cwtl
xor
adc
and
add
out
jecxz
lret
dec
push
sub
stos
push
adc
int3
add
cwtl
js
or
mov
sbb
mov
sbb
pop
mov
mov
mov
testl
lock
inc
add
stos
mov
add
adc
addr16
arpl
push
in
add
sbb
cli
je
push
call
push
mov
xor
jnp
add
cmc
imulb
movb
scas
push
lcall
jb
loope
out
movl
rcll
scas
dec
or
xchg
push
sahf
test
out
add
add
or
jb
inc
or
es
pop
mov
das
loopne
stos
xchg
add
ret
test
mov
std
pop
shrb
jmp
dec
jnp
add
xor
xchg
push
add
out
push
idivl
insl
pop
rcrl
jae
stos
dec
imul
or
rorb
dec
cltd
into
pop
lret
xchg
shl
repnz
mov
mov
pop
fsubrl
mov
mov
xor
rol
add
dec
gs
dec
pop
jne
rcrb
adc
cmp
imul
add
cld
hlt
add
fdivp
jmp
push
js
add
pop
xchg
out
dec
js
cmp
cltd
add
cld
inc
or
addl
sbb
add
and
add
dec
inc
ja
daa
mov
notb
add
lcall
fs
ret
mov
xlat
or
in
repnz
xchg
loope
shlb
pop
ret
orb
mov
fsubrl
add
mov
add
sbb
push
jp
pop
pushf
rcll
cld
popa
rol
xor
dec
loope
lock
sub
push
mov
pop
fadds
pop
adc
mov
shld
add
mov
sbb
dec
mov
dec
add
mov
adc
jmp
add
mov
inc
sahf
mov
ljmp
sbb
lock
shr
push
bound
call
outsb
push
xchg
cltd
negl
pop
addr16
call
add
inc
mov
lret
faddl
dec
bound
add
mov
ret
inc
pop
stos
jo
jle
inc
ficoml
or
int3
inc
sbbl
sbb
stos
aaa
pop
pop
js
fmul
aam
adc
fsubrs
xchg
stos
mov
in
mov
and
test
inc
cmpb
shrl
mov
jecxz
and
pop
lock
or
pop
leave
pop
push
adc
dec
dec
add
push
push
shll
mov
mov
or
clc
in
add
and
xor
addr16
in
ficompl
add
addl
testb
clc
enter
push
push
mov
cmp
jecxz
sub
sbb
jnp
add
cmpl
lea
mov
sbb
pop
imul
movsl
push
cld
pop
mov
in
xchg
xchg
add
mov
aaa
pop
jmp
nop
int
inc
and
sahf
cmp
jp
push
pop
adc
mov
xlat
xor
int
add
or
cwtl
out
jbe
pusha
sbb
mov
push
xor
rorb
mov
mov
popa
cmp
jbe
and
test
sub
ret
iret
ljmp
add
fs
imul
push
xor
aas
adc
jb
cmp
or
add
test
add
push
adc
jo
pusha
xor
imul
js
inc
push
and
add
xchg
push
dec
add
icebp
popa
pop
pop
add
in
xor
jmp
mov
dec
add
inc
xchg
jo
mov
loopne
pushf
mov
xchg
stos
mov
add
hlt
mov
xchg
xor
xchg
and
ret
mov
jl
mov
das
mov
mov
in
stos
add
adc
repz
mov
add
mov
jp
roll
insb
loopne
mov
cld
add
fcompl
repz
mov
sub
jp
adc
out
push
jl
push
push
pop
dec
pop
mov
jecxz
cmpsb
das
xchg
mov
add
or
mov
stc
jl
out
add
or
xchg
imul
sub
xchg
out
out
mov
movsb
mov
lock
add
icebp
and
sbb
loopne
rclb
call
add
jle
sti
sbb
push
sub
shlb
pop
push
je
dec
push
loopne
adc
lcall
xchg
cmp
pop
jl
outsl
add
add
adc
leave
repnz
jb
add
cld
rorl
pop
ss
add
out
adc
mov
mov
or
inc
mov
jb
xchg
mov
ret
jge
insb
mov
jns
sub
into
mov
xor
incl
xchg
add
testl
mov
into
imul
inc
in
push
and
and
mov
mov
cwtl
mov
mov
inc
sub
adc
lcall
xor
xchg
cld
es
repnz
inc
fldcw
or
mov
outsl
jns
add
jbe
lret
pushl
adcb
movsl
add
jnp
orb
mov
push
jge
lock
mov
cmp
add
pop
lahf
add
fistpll
dec
add
jp
mov
cmp
add
rolb
sahf
and
das
test
pop
std
jle
push
in
nop
mov
xchg
testb
cmpsb
pop
push
xchg
repz
add
popf
or
mov
aad
mov
out
cmp
insb
xchg
adc
in
and
push
xchg
add
ret
sarl
cltd
jmp
idivl
jne
add
or
enter
insl
ljmp
cmp
ss
cmc
jno
add
mov
push
in
sub
fisttpll
xchg
xor
push
push
test
sti
jo
add
mov
outsl
fcoml
mov
add
add
cli
jae
push
rclb
stos
ds
mov
mov
pop
testl
jb
add
ret
xor
mov
mov
mov
mov
mov
movsb
and
mov
scas
scas
sbb
pop
cmp
xchg
add
lahf
outsl
icebp
mov
cld
dec
xor
or
jmp
add
push
repz
daa
and
mov
sarb
pop
cmpsl
shll
cmp
sbb
mov
mov
popf
popa
inc
add
cmp
das
lcall
xor
push
shlb
cltd
xlat
scas
mov
test
ja
in
call
or
bnd
out
jl
sbb
jmp
push
leave
out
dec
pusha
outsl
js
add
add
cmp
ljmp
or
inc
dec
fdivr
bt
add
mov
pop
shll
addl
mov
ja
add
adc
cmp
cwtl
pushf
xor
cmp
add
xchg
jg
data16
adc
mov
sbb
fistpl
loope
and
mov
fs
pop
in
xchg
add
sarl
adc
xor
aad
outsb
add
mov
push
add
loop
add
mov
fistps
jmp
jns
inc
pusha
push
mov
xchg
sub
insb
scas
xchg
add
test
sbb
out
cli
lds
push
dec
add
dec
mov
cmp
add
rcrb
cwtl
aam
add
and
leave
dec
sub
and
dec
add
fsubl
gs
and
out
add
mov
ret
adc
nop
lcall
add
add
cmp
inc
out
add
inc
dec
or
pushf
add
ja
data16
int
aas
in
add
daa
and
lret
addb
push
insl
out
shlb
sbb
jle
jo
add
add
mov
out
nop
adc
outsb
add
mov
add
push
adc
jae
mov
or
adc
mov
aam
mov
js
xchg
cltd
lret
pop
push
icebp
jns
add
jae
sbb
in
add
loop
push
add
ret
mov
repnz
add
out
mov
imul
pop
hlt
pop
fadds
dec
test
not
cltd
outsb
mov
adc
repz
lds
and
out
cwtl
cmp
test
jae
inc
jg
dec
jl
and
movsl
push
les
pop
pop
push
mov
add
mov
adc
jb
mov
sub
ret
sub
js
or
incl
mov
inc
roll
into
add
lock
and
sub
repnz
sbb
aaa
cmp
push
sbb
fcmovnbe
dec
lret
add
inc
in
nop
jl
test
bound
mov
mov
mov
in
stos
adc
aaa
sub
mov
push
push
sbb
inc
inc
mov
sub
add
cmc
push
mov
lcall
pop
lret
pop
add
jg
add
gs
pminub
lods
mov
lret
repnz
cmp
imul
repz
adc
mov
icebp
aas
aaa
jge
clc
add
pop
rol
dec
pushf
and
insl
cmpsb
cltd
or
inc
jle
inc
dec
faddp
or
xor
push
nop
in
insb
je
pop
out
lods
sub
add
jle
mov
imul
fisttpll
stos
add
push
and
inc
in
mov
jmp
add
repnz
lret
movsl
fs
pusha
test
or
xor
lahf
add
mov
cmpsb
add
dec
inc
pop
push
scas
inc
jne
insl
xor
add
bound
mov
sbb
jg
sub
rcrb
cmovne
lock
inc
fildl
fisttpll
stos
loopne
add
insb
and
mov
jae
aam
addr16
mov
cmp
add
cli
xchg
pop
sarl
push
aad
mov
enter
pusha
xchg
push
cmpsb
das
mov
mov
loop
or
pop
scas
pop
imul
repz
jb
cmp
ret
out
and
inc
out
xchg
inc
add
push
mov
inc
mov
sarl
add
add
pop
out
sbb
ljmp
add
xor
add
xchg
pop
add
sarb
sbb
in
movsl
add
ret
mov
mov
mov
cmp
add
ret
cmp
add
inc
xchg
test
jl
in
test
add
pop
xor
mov
bound
or
test
jno
fdivs
push
mov
mov
jp,pt
add
push
in
mov
xor
lods
rolb
in
cs
sub
add
jno
jg
jne
add
and
inc
pop
pushf
mov
out
add
dec
add
cmp
cli
mov
add
scas
or
sbb
data16
cmp
lock
or
test
aam
incb
arpl
iret
pop
mov
add
nop
stc
mov
mov
dec
js
in
hlt
xchg
add
cmp
add
cmp
int
popa
push
popf
addr16
loopne
xchg
dec
dec
dec
sbb
sub
or
dec
call
int3
inc
add
lahf
pop
inc
gs
lock
in
enter
loop
cmpsl
mov
add
jmp
pusha
and
jg
ljmp
sub
sub
or
lds
clc
sbb
popf
mov
mov
pusha
outsb
or
mov
add
add
push
pop
xchg
mov
push
outsl
cmc
lcall
shrl
pop
add
repz
add
aad
xchg
push
sarb
mov
test
and
mov
inc
adc
pop
xchg
add
jmp
add
add
add
cmp
inc
or
push
jnp
xchg
pop
mov
mov
out
dec
aaa
mov
xchg
rcl
mov
enter
rcrb
out
fwait
shrb
fsubrs
cwtl
sub
popa
das
mov
xor
push
sti
loopne
in
mov
outsb
cmp
lods
enter
xchg
scas
pop
push
outsl
out
mov
sahf
or
adc
ss
movsb
add
pusha
push
xchg
push
pusha
and
or
fwait
pusha
xchg
aam
fpatan
add
jmp
int3
push
mov
and
push
pushf
fwait
sbb
jl
jmp
scas
test
add
pop
cmp
sbb
or
add
shrl
xchg
sti
jbe
mov
cli
lods
xor
pop
fs
enter
sbb
add
mov
idivb
fsubp
inc
sub
add
hlt
pusha
dec
inc
into
cmpsl
sbb
popa
test
xchg
jp
add
fbld
leave
and
add
sbb
js
loopne
addb
into
pop
out
jae
pop
inc
ret
adc
cli
inc
mov
xchg
sub
and
les
mov
inc
mov
and
push
cmp
clc
ss
add
or
sbb
fwait
add
and
jno
ja
ds
ja
mov
or
add
sti
xchg
in
or
rcrl
stc
add
sbb
jbe
insl
fldl
add
dec
sbb
aam
add
dec
dec
lods
add
test
mov
adc
lahf
dec
add
inc
jge
xor
jl
test
in
stos
cmp
mov
sbb
add
rcrl
xor
sub
nop
fldt
sub
adc
push
cmp
test
mov
aaa
add
test
mov
add
and
mov
sbb
dec
pop
jg
lods
jnp
hlt
add
stos
sub
fmuls
pop
testl
push
leave
and
add
pop
rorb
adc
jns
js
xchg
test
sbb
jecxz
loop
sbb
jbe
add
fsubs
popf
cld
push
add
mov
stc
xchg
sti
adc
orb
cmp
pop
and
cmpsb
out
out
push
dec
add
rclb
out
push
cmpsl
lods
xlat
scas
mov
fldl
cwtl
data16
mov
add
mov
mulb
cmp
add
sbb
popa
adc
insb
add
mov
rcrb
movsb
inc
das
fldl
stc
adc
outsb
cli
cmp
rolb
add
popa
pop
jno
lret
push
pop
jg
jae
inc
fbld
inc
lock
movsb
aaa
aam
imul
dec
cmp
push
dec
mov
sbb
inc
push
jo
inc
lret
jnp
add
pop
movsb
sahf
inc
mov
test
mov
ror
in
pop
xchg
sub
std
pop
push
lock
add
and
or
adc
hlt
mov
in
add
sub
test
call
popa
inc
out
add
xor
out
add
or
and
ret
leave
and
and
push
sub
add
xchg
push
or
jle
inc
inc
xchg
iret
add
lret
xchg
lret
outsl
fisttpl
mov
jno
inc
test
add
add
add
jp
pop
js
incl
dec
lret
repz
subl
push
xchg
jge
inc
push
xor
xchg
addb
outsl
mov
mov
out
jmp
and
out
rolb
ret
lds
push
mov
xor
das
gs
add
mov
cmp
pop
int
add
fadd
add
cmp
orb
inc
and
jnp
das
outsb
sahf
sub
add
mov
mov
lret
add
sbb
and
pop
xchg
test
ror
add
inc
testb
pop
lret
loope
cltd
cmp
mov
loop
mov
add
fwait
push
adc
subb
push
add
int3
cmpsl
add
adc
inc
or
loopne
jg
fwait
dec
xor
decl
sbb
mov
add
mov
cwtl
js
bound
pop
adc
push
fistpll
add
sub
xor
rolb
hlt
sbb
sub
lods
scas
aas
dec
cld
out
jg
mov
jbe
cmp
incb
push
rcrl
add
lret
fisubs
mov
jle
scas
cmp
mov
movhlps
and
add
xor
mov
in
or
xor
cmp
push
sbb
and
dec
shl
cwtl
cvttps2pi
jns
cmpsb
inc
mov
out
ja
inc
inc
movsb
outsl
pop
mov
ret
jae
test
sub
int
fadds
lock
fs
jl
nop
add
jmp
mov
jno
add
mov
mov
out
xor
cmp
xchg
xor
jno
add
pop
pop
mov
add
out
adc
inc
andb
aam
push
jge
mov
mov
sub
add
mov
cltd
stos
mov
add
pop
shlb
je
ljmp
adc
inc
ss
sti
jge
movsl
sbbb
xchg
add
daa
ja
jns
sub
cs
addb
stc
cmc
pop
fdivrl
dec
sbb
xor
or
add
inc
mov
int3
mov
dec
add
test
fdivrp
loopne
add
add
inc
pop
lds
movsl
fdivr
aas
jns
fdivrs
push
xchg
push
adc
mulb
cmp
adc
loop
or
in
ljmp
popa
pop
fcmovne
sbb
add
mov
add
sbb
or
add
aaa
inc
push
sub
in
add
and
lock
add
ja
pop
mov
add
fsubrl
inc
jnp
cmp
push
ret
dec
xor
add
add
or
mov
cs
test
negb
xchg
insb
mov
fildl
xchg
mov
inc
cmpb
pushf
add
and
insl
sub
add
cmp
or
dec
subl
int3
rolb
fimull
and
fucomip
mov
dec
dec
xor
testb
adc
sub
andb
cmp
push
push
js
cmp
cmp
dec
and
sbb
roll
fs
ljmp
fbstp
pop
sbb
xor
hlt
sarb
xchg
add
imul
cmpsl
cmp
nop
push
add
mulb
loope
fs
dec
add
mov
out
sbb
add
jns
pop
or
pusha
xorl
in
add
cmp
jb
ret
pop
enter
cmp
lock
pop
mov
js
xor
pop
sub
mov
push
cmp
add
push
and
loop
xchg
add
adc
scas
and
divb
cld
and
add
fs
adc
mov
pushf
xchg
xor
sbb
dec
scas
add
out
cli
in
add
mov
stos
adc
xlat
loope
sub
add
test
hlt
cmp
orb
ds
push
jl
add
jns
jae
lock
rclb
jnp
push
push
leave
cmp
jp
cmp
rcr
xchg
arpl
mov
add
aam
and
loopne
and
xor
cmp
lods
cmpsl
add
pop
out
insb
insl
nop
xchg
add
sbb
cmp
and
aas
in
push
add
mov
insl
fstpl
jb
int3
bound
push
psrlq
adc
adc
orb
push
mov
jmp
mov
push
mov
addr16
insb
pop
adc
adc
jge
dec
aaa
sub
pushf
cld
rdpmc
xchg
mov
gs
cltd
mov
add
negl
fadds
adc
mov
inc
add
add
roll
mov
cmp
add
test
leave
xchg
dec
cmc
je
or
fmul
add
hlt
inc
or
call
scas
jae
cmc
ljmp
xchg
cwtl
dec
inc
aam
enter
sub
add
js
xor
mov
push
cwtl
std
fstpl
mov
add
aam
rol
inc
mov
cmpsl
test
or
ret
sub
push
cmp
xchg
jbe
inc
fucom
cwtl
add
mov
aad
cmpsb
ss
add
push
jb
mov
push
xlat
pop
loop
and
jge
aas
mov
xor
pushf
push
nop
ljmp
sbb
das
lret
aas
pusha
call
scas
inc
dec
dec
cmp
aaa
lret
dec
sub
hlt
xchg
add
mov
mov
pop
aad
add
cwtl
imul
mov
pusha
arpl
pop
push
mov
negl
js
gs
dec
xchg
scas
add
mov
add
cwtl
hlt
cli
movsb
lods
pop
fs
add
xchg
push
jl
cmove
cltd
add
xchg
fcompl
pop
sub
or
adcb
aam
test
loopne
sarb
sarb
cs
pusha
mov
mov
movsl
mulb
or
imul
cmpsl
nop
cmp
lods
out
outsl
sbbb
int
out
fiadds
loopne
mov
adcl
sbb
or
outsb
pushf
dec
fistl
sti
mov
ret
mov
ja
icebp
add
aaa
rolb
sarl
adc
ss
fisubrs
arpl
xchg
adc
mov
add
xor
add
or
pop
inc
jo
add
or
mov
mov
sbb
push
shlb
sbb
sbbl
dec
std
out
subb
mov
xor
pop
orl
jo
add
test
test
std
mov
scas
push
data16
addr16
add
insb
adc
outsl
jge
mov
inc
pop
jae
xor
in
les
dec
sbb
pop
xchg
aas
lret
rcll
mov
int
movsl
fistpll
cmp
sbb
push
mov
add
into
push
jge
addb
mov
add
mov
arpl
add
adc
aam
in
shlb
add
xchg
dec
je
cmp
add
inc
inc
lock
lods
inc
mov
lds
add
movsl
rcrb
dec
fwait
add
or
jb
add
or
sub
inc
sbb
add
mov
lea
dec
or
pop
lret
xor
lds
mov
push
add
test
cmc
icebp
loop
add
adc
add
and
cwtl
dec
das
push
scas
adc
daa
mov
xchg
mov
mov
scas
adc
cltd
scas
or
push
jbe
hlt
add
sahf
shll
inc
icebp
pop
add
orb
mov
xor
loope
sub
jae
movsl
movsb
or
sti
xchg
jg
add
cld
dec
xchg
add
add
add
sub
add
es
mov
push
jae
jl
jge
sub
inc
fadds
mov
mov
in
nop
mov
inc
insl
mov
loop
dec
out
push
shll
pmullw
xchg
add
ret
clc
movsb
xor
add
adc
mov
or
movsl
pop
js
insb
pushf
out
jb
pop
inc
insb
inc
fiaddl
mov
fs
enter
adc
cld
mov
int3
insl
imul
pop
xor
or
insb
jmp
mov
and
test
cld
jbe
fadds
dec
ja
adc
sub
xor
stc
add
iret
add
dec
xchg
xor
push
daa
enter
jge
jb
mov
lods
shll
push
in
es
xor
pusha
or
push
add
flds
icebp
jbe
test
imul
or
or
inc
xor
jle
pop
push
jne
stc
adc
repz
aam
mov
jmp
and
xor
enter
sbb
cli
xchg
out
std
stos
add
dec
push
sub
psrld
pop
push
add
adc
pop
lods
ja
cwtl
popf
add
rolb
inc
xchg
xor
out
fdivs
jge
inc
xlat
add
push
cmp
mov
out
pop
addl
imul
jo
rcll
mov
jge
test
nop
mov
mov
and
mov
jo
add
cmp
mov
jg
xor
imul
add
sub
cmpb
xchg
push
rcrl
adc
call
rorb
stos
jle
add
dec
mov
imul
fnstsw
pop
sbb
das
subl
mov
stc
pop
add
mov
clc
aaa
cmpb
mov
call
iret
fsubrs
stc
ret
fwait
pop
or
fstpt
stos
sbb
enter
inc
inc
xchg
loopne
neg
jl
add
mov
shrd
sbb
mov
mov
jmp
push
fldcw
inc
mov
lods
popf
mov
pop
mov
stos
push
fldcw
xchg
stos
adc
add
lret
add
aaa
sti
xchg
add
iret
or
dec
pusha
in
cltd
inc
pop
loopne
je
add
ret
sbb
xchg
dec
mov
add
xchg
mov
cmpsb
fsts
scas
loope
pop
sub
dec
loop
push
pop
xchg
fdivrs
add
sbb
jnp
shrb
add
add
out
or
jns
rorl
add
and
frstor
jmp
push
shrl
shrd
sbb
icebp
mov
add
out
push
std
mov
fwait
into
inc
testb
jns
and
mov
add
and
add
jp
out
or
icebp
clc
adc
jb
out
xor
or
repz
mov
xchg
sub
cmpsb
push
pop
mulb
push
or
mov
jnp
add
and
mov
cs
jo
mov
cmc
inc
mov
mov
nop
push
repnz
pop
cld
xchg
lods
add
or
sahf
pop
add
out
jno
idivl
insl
sbb
leave
pop
push
mov
xor
cmpsl
xchg
dec
add
or
stos
stc
cmp
add
lret
adc
in
data16
sbb
popa
test
arpl
inc
aas
add
or
pusha
loop
or
scas
add
ret
xor
and
adc
sbb
shrl
add
js
xchg
push
adc
mov
mov
sub
inc
add
xor
loope
push
pusha
lods
out
ljmp
into
inc
insb
inc
sub
push
ds
movaps
cmp
adc
iret
adc
and
cmp
jns
mov
inc
cmp
test
and
adc
sub
mov
cmp
sbb
inc
inc
xchg
sub
sbb
icebp
inc
adc
fwait
adc
inc
cmp
faddl
inc
inc
sub
xchg
cmc
cmp
add
pop
imul
in
clc
dec
xor
out
lret
add
stc
lock
mov
leave
jae
xchg
in
cmp
xor
insb
and
mov
adc
test
mov
aaa
add
cmpsb
lahf
mov
inc
idivl
adc
push
leave
jle
xor
cmp
lea
sub
dec
xchg
out
sti
int3
out
add
out
fcoms
mov
outsl
xchg
loopne
rdmsr
push
pop
jge
pop
cmpsl
inc
inc
add
and
movl
out
test
add
clc
int
bound
cmpsl
sar
lret
or
mov
pusha
sarb
aaa
mov
adc
scas
dec
cltd
andl
adc
clc
dec
test
dec
je
jns
add
push
loop
repz
shl
outsb
ja
leave
call
lcall
push
bound
push
subb
jmp
gs
daa
les
add
adc
add
aaa
cmp
add
pop
push
add
scas
adcb
and
pop
bound
adc
fwait
cwtl
add
in
lea
aam
enter
aas
adc
add
mov
hlt
cld
mov
dec
out
fldl
pop
test
lods
sbb
cmp
imul
mov
xchg
addr16
fadds
lds
das
xor
adc
dec
push
mov
mov
push
std
and
sbb
adc
xlat
cld
xchg
scas
cwtl
in
add
sahf
js
mov
ret
and
add
xor
lock
jb
in
std
jmp
mov
adcl
lcall
and
mov
xrelease
add
cltd
sub
mov
scas
xor
dec
sbb
clc
aad
das
mov
dec
fiadds
pop
fs
pop
or
rorb
pop
sub
inc
or
push
cmpsb
adc
pop
lret
adc
mov
pop
pop
insl
mov
dec
stc
addl
bound
rorl
out
cmpsl
out
xor
lds
mov
daa
or
popf
int
stc
outsl
or
fmuls
and
push
imul
cs
aad
fldl
jmp
pop
pop
and
mov
sbb
add
sbb
inc
add
xor
in
cld
loop
lahf
scas
xor
outsb
add
mov
leave
cmp
and
popa
test
pop
stc
xor
sub
adc
mov
xchg
mov
clc
add
pop
add
ds
mov
addr16
imulb
mov
das
ja
add
xor
out
sub
lea
mov
jne
add
xchg
gs
imul
imul
pop
in
fldl2e
add
jae
xor
mov
pushf
add
add
add
aad
rcrb
ficoms
iret
nop
gs
pop
rorb
adcb
sbb
push
dec
xchg
pop
cmp
imul
push
adc
mov
das
pusha
pop
add
or
jo
xorb
add
clc
addr16
imul
rolb
inc
xchg
lock
sub
add
loopne
jnp
ficomps
lds
out
mov
hlt
out
adc
in
jle
mov
add
movsl
imul
pusha
jae
or
fwait
xchg
pop
lcall
or
push
aam
adc
cli
jns
xchg
push
add
out
inc
pop
mov
lock
push
jl
pusha
into
and
mov
int3
and
out
jo
jmp
xorb
ja
cmp
sbb
cs
sarl
xchg
xchg
mov
mov
call
xor
or
xorb
xor
addl
into
notl
lods
xchg
filds
je
fisubrs
xor
jo
inc
adc
out
add
movsb
insb
enter
jne
sub
aaa
stos
add
pop
test
or
sub
xchg
pop
out
add
mov
add
lret
add
jbe
out
push
adc
add
rcll
mov
add
bound
add
lods
js
les
cmpsl
cmp
push
xor
add
cmpb
mov
testb
jmp
mov
adc
sub
pop
jecxz
add
dec
add
add
or
sbb
outsl
out
dec
ljmp
rcrl
mov
and
add
cmc
testb
jg
setnp
loopne
inc
add
jo
mov
jle
xchg
adc
out
fwait
add
popa
xorb
popf
ds
push
rorb
inc
fs
sub
xor
xor
adc
sbb
pop
and
adc
fiadds
adc
sbb
inc
sub
push
adc
call
cmp
and
ss
int
add
mov
jbe
and
or
sbb
pop
add
xchg
sbb
push
pushf
sub
xor
popf
ja
lahf
mov
dec
fcmovne
or
push
add
jp
sbb
into
sbb
add
stos
add
add
rorb
jbe
cmp
ljmp
adc
push
push
bound
out
xor
fld
popa
push
xchg
push
shll
mov
repz
mov
inc
icebp
ret
fst
add
int3
out
adc
add
jbe
test
mov
xor
xchg
sbb
pop
lcall
or
es
shl
cli
push
add
movsl
lea
out
shll
add
lahf
dec
insb
mov
into
test
shrl
iret
imul
add
lcall
mov
jo
cmp
fsubrs
and
loop
outsb
ss
in
js
fdivl
enter
push
mov
insl
ret
inc
cld
aas
adc
das
mov
pop
arpl
push
shl
enter
mov
add
sub
sub
sbb
mov
nop
subl
xor
push
faddl
jmp
jne
xchg
add
fildll
inc
mov
mov
add
imul
cli
fsts
add
nop
out
mov
dec
lds
pop
mov
jnp
stc
fdivr
add
cmp
les
mov
pop
mov
add
pop
and
add
mov
or
push
add
inc
loop
cltd
cmp
cld
dec
lea
cmp
jp
cld
push
adc
lods
sub
je
int
xchg
fs
jnp
push
cmpsl
fstpt
mov
pop
bnd
data16
pop
icebp
mov
xor
pusha
out
adc
fincstp
push
add
mov
clc
outsb
sbb
mov
jnp
jg
push
test
push
jne
addl
xor
lock
pop
test
jb
adc
sbb
add
sti
or
femms
test
sahf
mov
sub
ret
popa
mov
fdivp
mov
sbb
or
jmp
jg
mov
fcmovbe
lods
push
or
bound
sti
nop
xchg
add
mov
xchg
xorb
jnp
sbb
mov
stos
aas
fwait
sbb
jmp
hlt
popa
or
pop
cmp
sub
add
js
ss
lds
xor
arpl
cwtl
mov
cltd
ljmp
adc
cmp
add
inc
aas
or
sbb
adc
rep
add
out
sbb
ljmp
fcompl
push
testb
out
addl
add
sahf
mov
add
lods
and
std
test
xchg
jge
test
dec
add
sub
int
fistpl
je
add
push
push
pop
add
add
out
test
push
and
and
mov
lret
cli
add
jge
fcmovu
mov
shlb
sbb
mov
roll
fdivrs
xchg
testl
je
add
mov
or
sarl
rolb
adc
and
mov
imul
outsl
jne
inc
sahf
aas
insl
push
push
jo
jp
xchg
loop
add
frstor
dec
jmp
push
cli
mov
loope
push
aas
sti
cltd
incb
mov
cmpsl
shlb
xor
and
jne
or
les
sub
in
mov
test
faddl
leave
inc
sti
xchg
push
lea
add
mov
ljmp
pop
jno
add
loope
mov
add
lods
shr
loopne
test
movsl
cmc
xchg
cli
scas
add
mov
inc
pop
jno
add
ret
cmpb
test
outsl
xorb
adc
add
sbb
jge
add
and
dec
addr16
js
mov
insl
inc
xor
sbb
xlat
jle
and
inc
mov
enter
rclb
adcl
mov
popf
adc
cmp
mov
xor
shrb
dec
out
lahf
in
int3
testb
rclb
mov
subb
shl
hlt
push
sub
or
adc
pop
pop
push
jnp
push
nop
mov
leave
fildl
adc
popa
in
and
and
hlt
and
add
or
mov
dec
lods
add
inc
std
cmp
cmp
ljmp
cwtl
notl
inc
add
scas
push
sbb
test
sahf
pop
xchg
clc
jecxz
add
stos
lds
testb
loope
sub
cmp
repnz
or
adcb
aam
int
add
fldenv
adc
pop
cmp
add
dec
mov
mov
push
and
add
mov
add
call
mov
or
add
idivb
stc
mov
add
cmpsb
pop
cmpxchg
add
pusha
or
movsbl
sub
int3
sbb
add
jmp
fisttpll
adc
ljmp
mov
lcall
iret
xchg
xchg
stos
add
scas
cmpsb
mov
mov
fucomi
pusha
push
mov
sbb
jno
jmp
and
add
es
adc
inc
xchg
pop
sub
fdivs
out
push
jle
push
idivb
xlat
cli
in
mov
sbb
daa
adc
and
in
lahf
jmp
lods
push
adc
test
mov
fnstsw
jne
add
movsb
and
cmp
and
and
pop
ds
icebp
adc
and
xor
add
fildl
mov
and
sahf
add
jmp
filds
pusha
xlat
push
add
push
adc
cmp
inc
sub
sub
mov
arpl
rcll
inc
leave
xor
mov
aad
lds
lahf
dec
lods
mov
mov
lret
add
xor
add
mov
loope
adc
and
sub
mov
mov
mov
sub
lods
add
jge
xchg
add
int
inc
add
clc
and
test
xor
call
or
sahf
idivb
repnz
fcmovbe
and
repz
push
loopne
sbbl
add
ret
enter
aam
and
sets
loop
loopne
ss
xchg
add
mov
dec
fstps
mov
jnp
je
or
addr16
xorb
shlb
notb
sbb
sub
add
pop
xor
inc
and
cmpsb
out
xchg
test
out
mov
fsub
push
add
lahf
fldenv
mov
movl
jmp
pop
mulb
das
cmp
push
mov
push
rolb
lods
lcall
xor
gs
push
pop
pop
mov
push
lds
int3
add
sbb
mov
aam
scas
andb
push
test
xor
xor
pop
jo
mov
shlb
add
pop
xchg
sbb
leave
loopne
pop
ret
adc
mov
add
and
sbb
adc
inc
inc
insl
pop
fcoms
mov
push
push
pop
xor
das
xchg
inc
popa
orb
repz
ljmp
mov
shlb
pusha
mov
loopne
or
jle
hlt
testl
iret
pop
add
jnp
jo
int3
add
and
ja
loope
mov
add
fsub
scas
add
test
dec
push
push
mov
mov
outsb
fwait
nop
shlb
xchg
aas
aaa
je
lds
jo
adc
mov
shl
and
pusha
add
mov
sub
fbld
dec
sbb
in
insl
push
and
push
add
jmp
sbb
or
out
in
packsswb
mov
add
xlat
rcl
cmp
add
or
fwait
ds
inc
mov
shl
jae
jb
add
mov
cwtl
or
lds
fwait
xchg
test
sub
jns
add
mov
xchg
pusha
push
inc
lods
cli
fdivrs
xchg
and
imull
or
test
lcall
ds
sti
push
pop
add
sub
movsl
push
adc
xor
jecxz
mov
mov
dec
inc
je
jne
or
jnp
jecxz
enter
jbe
mov
pop
outsl
add
inc
and
in
jp
jo
loope
pop
ficomps
add
add
or
add
shrb
insb
in
add
mov
repz
mov
mov
jecxz
cmpsb
add
ds
mul
sub
mov
fstpt
and
test
dec
add
addr16
cmpsb
lret
inc
ss
push
sbb
test
add
push
fsubrl
add
insb
mov
lcall
loopne
xchg
sarl
add
pushf
fimull
xor
shll
pop
xchg
sbb
and
and
add
mov
not
jle
es
scas
bound
cmpsb
mov
jae
lods
cli
cmp
sbb
mov
in
and
add
fs
call
loopne
cmc
ret
jge
cmp
inc
sbb
mov
pushf
add
mov
sub
sbb
add
add
jae
inc
add
cmp
aam
faddl
cmp
ficompl
sbb
add
push
and
add
jmp
sub
mov
push
mov
add
inc
shl
fsubs
push
cs
and
ja
lret
addr16
add
lcall
add
jne
lret
andl
xor
mov
mov
cmp
addb
hlt
dec
mov
xchg
push
ljmp
add
mov
pop
enter
sahf
imul
fldl
icebp
xchg
adc
sbb
mov
adc
dec
or
or
sbb
add
pop
mov
mov
ss
xchg
add
outsb
add
outsl
mov
out
shll
cmp
ja
mov
push
push
push
cmp
outsb
inc
dec
addr16
pusha
int3
jno
jg
leave
add
push
in
cmp
pop
mov
sub
mov
lods
sbb
aad
data16
jl
add
mov
inc
in
loopne
or
cmp
pop
pop
aaa
loopne
add
adc
add
stos
xor
add
lahf
stc
fsubr
pop
push
and
add
cmc
aam
add
xchg
sub
pusha
xchg
mov
stos
pop
xor
call
test
outsl
shll
jo
push
lcall
imul
xchg
js
adc
and
add
pushf
add
jmp
test
add
xor
jno
shlb
dec
inc
test
fwait
push
sbb
inc
pop
add
les
jl
add
sub
in
leave
mov
fiadds
xor
cmp
scas
and
pop
icebp
add
cmp
mov
xchg
movb
aam
sub
and
xchg
or
subb
mov
cmpb
jmp
push
mov
add
cli
outsl
cmp
jle
lock
add
aad
arpl
lret
fs
icebp
jno
mov
mov
jl
lock
out
jb
or
gs
les
cli
cltd
add
jge
xchg
and
xor
jno
sti
xor
mov
jle
movb
inc
hlt
bnd
dec
aad
addr16
jno
shrb
add
inc
xor
hlt
imul
mov
cwtl
dec
pop
loopne
or
pop
rolb
mov
hlt
pushf
cmc
xor
mov
clc
jbe
hlt
add
ret
popa
jmp
cmc
movlhps
enter
js
fldcw
or
jecxz
lds
fcmovbe
adc
jle
inc
inc
in
pop
gs
add
fidivs
clc
ret
add
fimull
jecxz
or
aas
lcall
int3
jb
in
push
mov
cmpsl
sbb
aam
and
lret
xchg
psubusw
test
pusha
stc
sbb
jnp
xor
pop
cltd
xchg
add
xchg
or
popa
rolb
lret
cmp
mov
dec
xor
push
and
cmp
ds
xchg
push
test
lea
lods
jmp
mov
add
jecxz
sbb
mov
sti
faddl
jb
mov
jo
or
xor
out
or
lods
cmc
mulb
outsb
add
adc
adc
cli
mov
popa
cld
cltd
push
jl
out
mov
pop
add
push
outsb
jo
pop
xor
ficoml
call
addps
inc
cwtl
out
jge
test
addb
add
leave
outsl
repnz
aas
and
xor
push
mov
sbb
mov
mov
xchg
add
mov
xchg
or
imul
xor
inc
cmp
nop
js
sbb
enter
mov
sbb
inc
pop
cmp
mov
xchg
adc
es
push
sbb
test
xchg
pop
aam
fimull
lods
les
and
xor
pusha
loop
pop
sbbl
aaa
enter
push
add
aad
mov
xchg
jg
stos
add
push
push
add
rcrb
dec
add
add
pop
shrl
out
mov
and
gs
cmp
test
dec
dec
fwait
mov
and
and
add
and
push
cmp
sub
pop
add
pop
jmp
pop
push
add
std
add
shl
and
mov
cmp
js
in
lret
jb
or
mov
cltd
add
loopne
aad
and
out
push
nop
insb
or
mov
adc
lods
pusha
test
xorl
mov
movsb
fs
cmp
and
jnp
adc
xchg
repz
jae
add
dec
inc
pop
push
inc
lods
or
stc
sbb
xor
dec
out
negb
mov
pop
shll
aam
cmpsb
add
mov
jmp
or
sbb
inc
add
cmp
and
and
sbb
inc
sub
jge
in
mov
jle
add
sub
cli
pop
cmp
rorb
xchg
fdivl
js
add
rep
div
xor
inc
mov
sbb
fcoms
add
dec
fucomp
cmp
jecxz
mov
loopne
fdivrs
mov
add
jge
push
push
nop
fdivs
fwait
aas
sbb
add
mov
jge
pushf
test
aad
xchg
push
xchg
maskmovq
negl
pusha
in
inc
mov
dec
sti
ret
add
dec
xor
push
test
xlat
cmp
fs
sub
stc
lods
int
popa
aas
inc
dec
pusha
rol
jg
add
inc
mov
jmp
jns
test
add
dec
xchg
fsubrl
loop
sbb
rclb
xlat
frstor
adc
push
mov
inc
cli
push
xor
in
lea
pushf
add
into
jmp
add
push
pop
fsubrl
lock
add
cmpsl
fcmovnb
mov
and
mov
sbb
mov
fildl
add
daa
lcall
push
test
add
shrl
jns
add
imul
adc
jl
jg
je
add
dec
sub
fwait
stc
add
cltd
in
push
add
dec
ror
lds
mov
jb
cmp
adc
mov
cld
xlat
or
cwtl
add
andb
rcr
enter
add
push
shl
mov
add
dec
push
fiadds
out
cmp
lret
shll
pop
sbb
add
add
ret
xor
add
or
dec
add
or
jecxz
aad
add
jg
pop
outsb
out
aaa
cmpb
scas
push
dec
pop
dec
mov
out
cltd
btc
cmp
loope
lods
jo
int3
mov
adc
je
inc
jl
pop
xchg
gs
push
push
rcl
das
lods
pusha
inc
shlb
pop
fildl
mov
mov
mov
repnz
adc
cld
in
xor
add
sbb
cmpsb
push
fldcw
inc
adc
loop
dec
movsl
add
sub
inc
mov
js
xchg
add
jns
ljmp
fldl
sub
dec
push
inc
add
xchg
xor
mov
xor
das
sub
lahf
inc
loope
mov
pusha
and
sbb
in
stos
add
sub
push
incb
add
cmp
in
pop
or
xor
bound
dec
fidivrl
leave
add
jg
mov
cltd
jge
cmp
dec
jg
mov
mov
inc
mov
outsl
std
xorb
xor
mov
or
adc
fdivs
pop
push
add
mov
lret
mov
and
dec
int3
jmp
insb
shrl
icebp
ds
or
pop
pop
inc
daa
outsl
jae
dec
xorb
lods
sbb
sub
insb
fadds
enter
sub
jo
sub
adc
or
sbb
je
pop
cld
pop
dec
in
popa
mov
out
mov
pop
xor
pusha
test
addb
xchg
add
fs
aas
add
insb
cmpb
add
out
lea
cmp
mov
dec
jge
add
pop
cmp
add
sbb
js
jb
dec
inc
and
mov
push
popw
inc
xor
inc
add
rolb
dec
mov
std
add
xchg
das
out
ret
movd
pop
jge
lahf
mov
in
pop
dec
rcrb
stos
xor
sbb
aad
pusha
or
imul
lahf
pop
push
add
add
lret
push
dec
inc
cltd
shlb
sahf
js
xchg
roll
gs
add
inc
inc
bound
cmp
fimull
inc
lods
gs
jns
add
lcall
mov
insb
loop
loopne
mov
ss
daa
pop
cwtl
mov
inc
ret
cmp
arpl
add
mov
je
add
aad
and
mov
jecxz
push
push
dec
pop
add
lds
cmp
imul
popf
addl
aad
and
or
pop
and
dec
in
add
and
add
pop
and
inc
sbb
out
cld
mov
push
pop
cmpsl
fdivrs
adc
nop
lock
int
xchg
adc
push
bound
or
and
push
pop
add
fiaddl
ja
add
xchg
clc
push
mov
pusha
adc
add
cmpsl
dec
cmc
push
enter
push
call
mov
adc
pop
cmpsl
shl
mov
dec
or
adc
xor
or
xchg
cmp
or
fcomps
cmpsb
mov
gs
pop
adc
cmp
fbld
add
lock
jo
sti
sub
xor
jge
adc
iret
ss
scas
int3
push
add
cmp
dec
sbb
arpl
add
int
cmpsl
mov
cmp
sarb
es
and
loopne
mov
lcall
dec
repz
fs
add
fisubs
mov
pop
subl
jmp
in
movb
push
data16
inc
pop
or
arpl
cmp
jo
sbb
jl
add
lahf
test
lret
add
inc
sub
mov
enter
cmp
push
pop
xor
or
mov
sbb
xchg
inc
add
push
and
dec
mov
jb
push
push
push
jle
dec
test
jl
pop
ret
cwtl
mov
xor
adc
pop
inc
adc
mov
imul
sub
mov
sub
out
movsl
mov
scas
sbb
mov
add
jo
sub
add
stc
inc
mov
outsl
cld
cltd
ljmp
dec
or
orl
shl
dec
adc
cli
cltd
add
mov
pop
pop
jb
cmpsb
mov
xchg
mov
sbbl
add
mov
mov
add
sbb
and
jge
lcall
fisubs
mov
pop
mov
sbbb
mov
push
dec
out
cs
inc
sub
imul
inc
add
push
insl
repz
pop
mov
sub
nop
loope
mov
imulb
jns
std
mov
dec
pop
add
stc
pop
sbb
ss
add
loopne
imul
les
lea
sub
add
or
push
mov
inc
les
test
jbe
jle
add
hlt
adc
add
mov
rcrb
mov
mov
add
add
cmp
xchg
jbe
push
push
and
xchg
inc
pusha
xor
gs
pop
cwtl
add
iret
add
dec
lcall
add
ja
roll
mov
jmp
sarb
stc
repz
dec
test
test
subps
or
cmp
cmpsb
les
fsubrp
dec
leave
inc
add
add
xchg
add
jne
cmpsl
rorb
mov
add
cmp
cmpsl
dec
add
push
aaa
pop
push
js
mov
lock
hlt
sub
push
std
and
xchg
stos
jp
insl
add
pop
test
shrb
in
and
xchg
mov
or
add
cmp
insb
or
dec
mov
and
push
mov
inc
adc
aad
scas
mov
add
pop
push
jmp
add
movsl
sub
gs
add
pop
dec
or
inc
daa
pop
sub
xchg
aam
mov
mov
cltd
jge
inc
sub
test
dec
es
lock
add
push
inc
add
or
inc
das
dec
add
je
sbb
inc
jb
adc
lcall
lock
int3
add
jmp
pop
mov
inc
mov
or
jno
sub
mov
outsb
add
mov
mov
cli
sti
jnp
add
adcl
and
inc
lcall
add
or
mov
inc
cmp
jecxz
mov
sahf
add
rcrl
cmpsl
mov
add
aad
xchg
add
jne
cwtl
iret
das
and
out
sub
and
mov
sarb
mov
ljmp
and
pop
add
sbb
call
dec
lods
sbb
fadds
jo
pop
push
pop
adc
out
add
add
and
sahf
add
psubusw
add
sbb
test
imul
nop
adc
insb
pop
loopne
or
std
call
mov
push
mov
inc
lret
add
jbe
sbb
fistps
cmp
add
hlt
sti
dec
movl
or
rcrl
jns
in
mov
flds
call
pop
pop
stos
add
out
adc
xor
add
dec
imul
lahf
daa
in
add
in
pop
fcomi
hlt
or
cwtl
push
jbe
add
cmpl
or
repz
push
adc
pop
adc
flds
add
push
or
jbe
adc
cld
add
cmpl
mov
clc
xor
sbb
int
insb
add
pop
and
out
ja
sub
xor
sub
add
inc
dec
xor
gs
divl
sar
add
enter
aas
insl
dec
push
mov
pop
fdivrl
add
adc
dec
add
fbstp
add
inc
pusha
add
jbe
cmp
or
mov
xlat
scas
add
sub
push
jo
mov
add
push
fnstenv
cli
cmp
faddl
mov
mov
addb
inc
mov
pop
dec
add
mov
out
jl
inc
lcall
dec
es
bswap
popa
cmp
cmpsl
pop
bound
addb
aas
pop
out
push
dec
stc
add
jo
jnp
jp
mov
cmp
insb
add
in
xor
test
xor
add
ret
subl
jge
fcompl
and
mov
cltd
adc
xlat
add
xor
xchg
cs
fcoml
add
lods
mov
pop
sub
lahf
cmp
xchg
mov
int
std
add
sahf
addl
inc
push
add
fldl2t
sub
dec
mov
mov
cmpb
push
inc
add
jecxz
test
mov
cmc
add
gs
add
rcrb
jmp
out
imul
xor
fiaddl
divb
popa
dec
out
pop
pushf
add
and
mov
mov
add
and
jle
pop
jp
ret
std
into
shlb
add
inc
fwait
pop
add
xor
and
mov
aas
cmp
dec
pushf
sub
add
adc
jbe
add
loop
repnz
rcl
add
hlt
or
lret
sub
mov
xchg
nop
rcrb
sub
int3
pop
pop
dec
dec
loope
dec
jo
inc
add
cmpsb
test
mov
pusha
lret
push
cmc
stos
stc
add
lock
or
push
into
add
add
mov
repnz
adc
into
pop
sbb
rcrb
add
fistps
mov
add
jl
cmp
add
pop
out
sbb
add
hlt
push
cmpsb
sbb
jmp
sarl
push
cmpsb
mov
add
dec
push
mov
sbb
popf
push
xchg
add
pop
ljmp
xchg
jp
mov
ss
cmpl
sbb
mov
and
sub
pop
in
xchg
inc
js
sbb
icebp
cmp
mov
roll
popw
xchg
in
fnstenv
adc
xor
add
cmc
and
sbb
xchg
inc
jo
call
dec
aaa
int
rolb
add
ss
add
adcl
nop
mov
subl
dec
or
fs
cltd
in
push
pop
jmp
iret
mov
sub
push
push
push
dec
rolb
and
lock
cld
push
xchg
add
cltd
ja
mov
or
and
add
cld
jmp
pop
ljmp
xchg
sbb
cmp
movb
outsl
cmp
inc
and
adc
add
je
jne
add
stos
push
stc
popf
movsl
movsb
test
insb
mov
sbb
sub
push
shlb
cltd
xchg
in
push
add
lret
inc
aam
cmpb
adcb
lods
jne
jle
jbe
sbb
insl
mov
mov
fnsave
aas
out
andl
bound
stos
rcll
jns
xchg
add
or
nop
mov
imul
adcb
inc
fcmovnu
into
cmpsl
es
loop
add
dec
xchg
or
or
mov
add
pop
mov
inc
pop
fadd
mov
pop
pop
es
dec
add
je
dec
xchg
cwtl
cmp
add
movsb
rcl
fcompl
sti
jg
lods
jae,pn
clc
pop
lds
sahf
mov
fstpt
rcl
xchg
cld
cmp
add
pop
test
add
push
mov
mov
adc
pop
jb
add
and
mov
xchg
test
add
push
sbb
pop
pop
cmpsb
sub
in
inc
sbb
xchg
sbb
adc
fdivr
jae
int
lods
pop
sub
push
in
ret
push
add
gs
pop
icebp
dec
lahf
sbbb
stos
sub
adc
ja
lret
xor
lahf
js
add
imul
shrl
push
loop
push
add
mov
inc
mov
jp
jg
cs
pusha
add
jne
or
add
lret
jb
ljmp
push
and
loop
cld
test
pop
mov
in
fwait
push
sub
mov
jmp
cmp
push
in
dec
popl
mov
or
scas
cmp
pop
add
das
xor
iret
push
add
xor
lock
imul
fisubs
xor
dec
and
cmp
movsb
fwait
mov
faddl
rclb
xor
sub
mov
lock
nop
mov
aad
std
or
xchg
mov
sti
add
bound
les
shll
std
scas
lea
add
cmp
mov
fnsave
mov
and
jno
and
xchg
aam
dec
popa
mov
xchg
aaa
rolb
test
fldl
push
add
mov
sbb
add
stc
in
push
in
out
add
mov
call
repnz
push
rcl
stc
pusha
hlt
std
les
add
jle
and
outsl
lret
mov
fisubrs
jo
inc
add
stos
leave
lahf
in
faddl
jmp
jecxz
mov
dec
sub
aaa
fcomps
adc
xchg
add
insb
fdivrs
pop
fsubl
addl
shrb
jp
mov
add
sub
add
bound
pop
les
sub
jg
scas
adc
jne
add
adc
pop
ljmp
xchg
push
popa
add
push
push
cwtl
add
or
hlt
dec
sub
push
cmp
mov
pusha
push
fistl
adc
add
or
push
aam
outsb
pop
pop
jp
and
rcrb
cmp
sbb
fmul
icebp
pop
inc
cmp
inc
add
add
jnp
inc
jae
setbe
fistps
mov
or
or
add
inc
adc
add
insb
sbb
jns
in
add
pop
xchg
mov
addl
lret
sbb
andb
sbb
mov
push
push
dec
add
or
out
sub
push
outsb
push
push
pop
dec
cmpl
js
bound
addr16
adcw
in
negb
xor
sub
enter
pusha
mov
jno
dec
add
dec
out
adc
sbb
pusha
and
add
test
ljmp
add
fdivp
data16
pop
push
sbb
sub
push
mov
add
fidivrl
mov
xor
std
gs
push
mov
push
xchg
repnz
add
pop
pusha
cmp
mov
adc
cld
bnd
pop
push
ja
sub
pushf
sub
mov
or
cltd
add
sbb
push
push
mov
mov
dec
push
test
push
movsb
sbbb
push
stc
faddl
pop
loopne
push
and
bound
add
push
sub
notl
es
subl
sbb
std
fdiv
xchg
or
sbb
loope
xchg
shrb
mulb
in
pop
sub
push
or
jnp
dec
adc
mov
or
jae
fldl
adcl
jb
push
pop
dec
mov
add
or
rorb
lret
je
adc
and
dec
loopne
in
add
sub
js
jp
xchg
mov
sub
call
testb
jecxz
xor
lods
push
add
je
ret
loop
pusha
out
in
add
inc
sub
rolb
mov
sub
jge
xor
or
outsl
rorl
addl
sbbl
inc
sub
mov
repz
adc
cld
add
adc
imul
fwait
sbb
dec
loopne
sub
xor
pop
aaa
je
or
inc
cs
leave
sbb
inc
add
clc
jl
add
sbb
mov
inc
or
add
cli
inc
pusha
rcrl
xchg
dec
pusha
and
insb
cmp
mov
xchg
push
xchg
xor
jg
adc
das
lret
adc
std
rcrb
cmpsb
dec
xlat
stos
testb
addb
pop
pop
and
addl
cmp
int
fdivrs
mov
xlat
mov
add
xorb
mov
add
jnp
stos
add
pop
ja
push
movsb
addl
mov
or
pop
add
dec
xor
scas
test
add
test
cltd
xor
and
pop
movsb
lock
sahf
pop
aam
pop
lods
sub
and
inc
add
push
je
push
pop
fs
mov
jmp
addb
testl
add
sbb
inc
add
mov
repz
add
movsl
and
pop
bound
sub
sti
and
in
cs
pushf
push
xchg
sub
mov
lcall
inc
sub
cli
inc
mov
lds
add
dec
ja
pop
or
and
push
dec
adc
inc
adc
inc
jg
jmp
xor
jns
dec
cli
clc
cmc
add
jnp
data16
aam
sbb
mov
outsb
xor
cs
sub
std
jne
xchg
bound
sti
adc
add
mov
mov
jl
push
cmp
add
lahf
ds
repnz
lds
add
cmc
add
int
mov
xor
std
add
or
not
movb
inc
jo
xchg
mov
pusha
add
mov
dec
push
sbb
push
jmp
roll
jecxz
mov
cmp
sbb
xchg
or
adc
mov
cwtl
inc
add
lock
cs
mov
jae
xor
add
sahf
mov
cld
mov
rolb
cli
aas
mov
add
pop
add
mov
popl
mov
sub
outsl
and
pusha
jo
sbb
not
pop
xchg
ror
clc
xor
pop
mov
mov
orb
adc
clc
pop
fldln2
cmp
xorb
pop
imulb
pop
bound
cld
add
inc
mov
outsb
inc
add
clc
xor
loopne
add
sbb
mov
leave
pop
pusha
das
xor
mov
aas
add
lret
shr
sub
stos
add
dec
sbb
arpl
and
in
add
push
pop
xor
sub
xor
loop
inc
xchg
mov
fwait
sbb
sbb
cmp
les
jge
cld
inc
add
lcall
ret
add
stc
cmp
mov
fcomp
add
xchg
movsl
loop
imull
add
ret
insb
jle
dec
lret
sbb
into
addr16
pop
adc
aaa
popa
add
cmp
repnz
adc
nop
test
push
fildl
daa
push
mov
adc
inc
and
mov
add
imul
adc
xor
adc
dec
ret
in
cmpsb
in
rorb
mov
xchg
jbe
xchg
in
filds
arpl
xor
sbb
rolb
fsub
fs
xorb
mov
jl
jne
push
sbb
add
add
mov
mov
push
add
jnp
shl
divps
lock
add
adc
movsb
movsl
xchg
dec
adc
inc
add
faddl
cmp
movsb
test
ret
add
mov
jg
adcb
or
je
push
andb
sub
or
push
xchg
xchg
mov
dec
lods
mov
add
mov
aam
mov
pop
in
popa
and
sub
add
test
add
pop
and
add
pop
or
out
pop
in
pop
cmp
or
sub
add
mov
jne
xchg
cmpsb
sbb
mov
add
and
sbb
adc
sub
push
adc
mov
mov
ds
shl
pop
fsubl
andb
shrd
js
adcb
adc
mov
jmp
inc
lahf
pushf
and
xchg
mov
xor
xchg
xchg
popf
add
push
pop
aaa
imul
jecxz
cmp
shl
add
pop
and
cld
cmp
sub
cs
mov
mov
push
push
dec
sub
or
sub
sub
cmpb
clc
or
inc
fwait
xchg
and
push
push
in
in
je
fs
sti
rcll
inc
das
lods
jle
adc
test
test
ja
sbb
enter
cmpsb
or
xor
add
mov
mov
mov
add
mov
jmp
test
add
xchg
leave
mov
mov
mov
test
sti
add
lret
mov
scas
negb
or
mov
add
add
inc
mov
mov
xchg
mov
mov
lcall
shlb
shlb
xchg
adc
cli
test
mov
cmp
add
xlat
in
aad
test
and
push
or
sub
and
xor
add
lea
mov
mov
nop
jnp
push
add
xor
mov
xor
and
jno
add
iret
fimull
mov
xchg
add
pop
jmp
lahf
loopne
aas
adc
pop
popl
popf
dec
pop
sub
loopne
outsb
inc
nop
cmp
addr16
cmp
jge
add
push
scas
pop
ljmp
add
fmull
dec
add
mov
mov
xor
adc
mov
sbb
push
lahf
jno
pop
sub
imul
add
negl
xchg
mov
lahf
inc
loopne
lods
jo
aad
push
add
or
xchg
fsubs
adc
and
mov
mov
mov
aad
sbb
sub
add
cmp
jge
mov
add
call
decl
add
xchg
fwait
mov
mov
rcr
push
cwtl
mov
adc
aaa
out
in
loop
pop
lret
cs
sbb
cwtl
aad
btr
pop
inc
add
xchg
les
add
mov
mov
repnz
out
add
push
js
jle
rclb
and
sbb
aad
xchg
fmuls
push
pop
and
inc
fcompl
inc
sub
loopne
xchg
rorb
push
fistl
movsb
sub
pop
pop
cmp
andl
jmp
xchg
add
jl
jge
call
xchg
push
push
sbb
addl
pop
jge
ud1
push
iret
pop
push
roll
push
popa
scas
mov
push
pop
cli
enter
jno
imul
enter
jge
scas
scas
mov
xchg
aas
out
popf
icebp
cmp
and
add
js
fwait
rol
push
cmc
imul
inc
sub
enter
add
call
cwtl
xchg
out
jbe
das
fwait
ror
adc
jb
fcmovne
test
and
and
lcall
mov
sbb
pop
mov
inc
and
loope
sbb
add
pop
xor
add
rol
jne
in
add
sbb
repz
xor
pushf
pop
or
mov
inc
xor
sti
add
fcoms
mov
rolb
jo
dec
xchg
addl
aam
cwtl
test
push
loope
not
cmpsb
dec
inc
cmp
cmp
sub
ja
nop
movsl
jae
add
cmp
pop
lods
inc
roll
sub
cmc
mov
dec
cld
or
lret
xlat
icebp
cli
add
shll
xchg
mov
es
xchg
push
add
cmp
movsl
call
fs
xchg
lock
sub
or
push
push
pushf
inc
cmc
push
scas
insl
mov
out
pop
jnp
inc
add
cmpsl
testb
dec
ret
jns
pop
aas
add
or
mov
insb
rcrb
clc
pop
or
jmp
fisubl
popa
add
lahf
pop
jge
loop
sub
cmpsl
mov
mov
add
mov
mov
inc
in
add
imul
out
add
shlb
pusha
mov
push
sbb
das
sub
incb
mov
orb
inc
std
jmp
pushl
adc
lret
inc
into
aad
ja
jecxz
adc
in
add
push
jo
mov
scas
add
adc
add
lret
and
or
mov
data16
outsl
lahf
in
push
aam
je
andl
add
mov
ficompl
mov
push
aad
pop
add
inc
push
cmp
pop
add
add
out
imull
adc
dec
popf
mov
insb
ret
inc
movsb
incb
dec
out
cmp
mov
fidivrl
call
popa
jno
mov
aaa
or
fstp
aam
push
add
xor
sub
dec
insb
and
cltd
add
cmp
mov
xor
inc
mov
and
mov
and
popf
dec
test
insb
dec
out
ret
loopne
fs
inc
stos
mov
and
jo
jmp
add
out
pop
inc
xchg
ja
add
arpl
inc
jge
cld
cld
cmp
es
mov
mov
jae
dec
add
ds
movsb
jne
js
cmp
sbb
fwait
jecxz
adc
daa
aam
jl
arpl
jmp
mov
adc
xor
mov
jl
xchg
loope
iret
addr16
push
int
bound
bt
pop
iret
jno
add
ret
dec
sahf
add
cmp
push
decb
jno
push
ds
or
fbstp
jo
lret
add
cmc
cmp
mov
inc
adc
fistpl
loopne
add
lret
mov
repnz
add
jnp
add
inc
add
pop
xor
and
out
popf
insb
jg
push
pusha
cmpsl
out
lret
adc
mov
enter
je
cmpsb
loopne
iret
lods
cld
popl
add
in
mov
mov
sub
lock
inc
and
adc
jb
cs
rcll
aas
enter
fildl
inc
ss
pop
shlb
mov
sub
adc
test
lds
mov
pusha
divb
daa
add
xchg
mov
sub
repz
stos
data16
jae
pop
lea
add
sbb
add
pop
dec
mov
mov
rcrb
dec
sub
orl
dec
cmp
add
sbb
add
nop
pop
xor
xchg
or
rcll
jo
mov
dec
movsl
shl
mov
paddq
inc
testb
xor
mov
sar
pop
jbe
sub
loopne
aad
ss
mov
jo
insl
in
loop
pusha
popf
pop
sbb
adc
je
cmp
iret
in
les
flds
or
mov
add
lret
pop
pop
push
sub
or
and
dec
sbb
fiaddl
add
rorl
aas
lahf
filds
xor
inc
cld
and
lcall
in
xor
jmp
mov
or
add
push
cmpsb
sbb
adc
pushf
add
push
in
out
adc
dec
add
lcall
cmp
stos
pushf
inc
lods
test
stos
out
add
mov
pop
loop
int3
xchg
add
xlat
sub
add
cli
pop
mov
inc
xor
out
push
lea
add
ljmp
adc
fidivrs
push
add
xchg
scas
xchg
add
rcrb
xor
hlt
dec
inc
jmp
aam
int3
dec
ret
pusha
or
add
addl
adc
pop
and
jnp
xor
sbb
scas
out
repz
aaa
push
je
mov
add
test
stc
adc
lret
ret
fst
add
adc
faddl
add
repz
jmp
jp
cwtl
xchg
rorb
nop
js
insl
aam
mov
test
push
push
push
dec
fsts
fs
cltd
js
stos
outsl
shr
jb
or
and
adc
add
fs
sahf
mov
int3
add
inc
in
add
xchg
movsl
pusha
in
repz
sub
add
mov
jmp
and
mul
std
rcl
xor
mov
cs
call
dec
pop
add
bound
repz
sahf
mov
aam
mov
dec
pop
sar
sub
add
popf
xor
and
leave
mov
les
xor
push
mov
into
xor
or
insl
dec
add
jl
fwait
cmp
push
out
jo
and
fs
fcompl
movsb
mov
cli
mov
adc
inc
int
faddl
sar
aaa
es
ret
xchg
cmp
inc
movl
jge
jl
add
xchg
addr16
sub
mov
fldt
out
jle
and
fwait
insb
add
and
add
mov
inc
cs
cmpsb
rclb
leave
add
sub
repz
repnz
pop
fnstsw
push
cmp
adc
mov
ja
shr
pop
aam
lds
fnstenv
push
sbb
add
mov
lahf
outsl
dec
sbb
in
and
xor
pop
rolb
add
adc
inc
dec
fnstenv
mov
and
jge
cli
por
icebp
mov
mov
rorl
pop
xchg
ljmp
mov
jb
mov
sub
test
cmp
loopne
cmp
fimuls
push
add
out
mov
ja
sbb
or
sbb
xchg
jb
mov
mov
outsl
add
mov
cmp
add
jge
jb
test
pushf
sub
mov
push
popf
fistps
adc
cmp
cli
lods
adc
push
sub
mov
test
repnz
add
inc
nop
mov
nop
dec
decb
pop
pop
xchg
mov
push
mov
popf
loop
add
int
cmpsl
xchg
mov
mov
rorl
jae
push
sub
push
lret
pusha
pusha
xchg
mov
xchg
cmp
push
cmp
popf
scas
mov
ffreep
add
ret
bound
inc
jns
fwait
cwtl
mov
add
adc
or
and
jmp
and
mov
hlt
outsb
jmp
jb
arpl
pop
aaa
or
in
add
vpshufb
jecxz
mov
mov
sarl
pop
imul
jle
adc
sbbl
divl
mov
xchg
jmp
mov
jnp
clc
fsubrs
xor
subb
mov
mov
mov
in
js
or
cmp
jne
movsb
sub
movd
sbb
inc
pop
mov
inc
lret
pop
add
xor
scas
mov
push
add
adc
inc
repz
or
shlb
jne
mul
aam
mov
push
and
cmp
xchg
or
out
add
fisttpll
adc
sbb
add
test
push
jmp
add
push
jo
jmp
xchg
roll
jecxz
stos
stos
pop
loope
add
orl
int3
push
lock
add
jns
clc
sbbb
or
in
lea
pop
push
add
scas
jns
xor
push
add
dec
pop
push
mov
loopne
adc
add
add
xchg
lock
addb
mov
mov
roll
sti
dec
int
sbb
aas
pop
push
inc
lock
inc
in
pop
add
div
xor
nop
clc
adc
mov
movsb
sbb
lcall
mov
fcoms
lcall
dec
mov
stos
push
or
imul
mov
or
mov
aas
mov
imul
enter
jns
cwtl
leave
xchg
add
mov
cmp
add
adc
loope
push
xor
orb
sar
push
es
test
sbb
pop
adc
xchg
adc
add
pop
add
ds
inc
shlb
xchg
dec
loope
dec
add
pop
jmp
sbbb
xchg
nop
insb
pop
push
add
jno
dec
push
add
pop
test
xchg
add
inc
stos
xor
or
push
mov
fdiv
jmp
imulb
push
pushf
ss
push
add
pop
and
xchg
inc
testb
mov
mov
push
lods
add
push
imul
sbb
rcrl
repnz
call
push
icebp
add
inc
inc
add
int
add
aaa
add
sub
sub
jle
mov
adcl
jecxz
xor
bound
add
pop
fbstp
adc
add
dec
and
add
sub
lret
nop
inc
add
push
dec
cli
mov
fbstp
sbb
jl
sub
mov
sub
cmpsb
jmp
arpl
pusha
fcoms
hlt
add
sti
add
fcmovne
out
shr
aam
sbb
add
test
int3
adc
lcall
rorb
gs
mov
out
jl
addl
cmp
lock
sub
in
inc
add
xor
leave
add
cmp
mov
loopne
or
rolb
nop
add
sub
aam
jae
and
sub
jmp
cmp
hlt
mov
pop
xchg
pushf
lret
xchg
sub
aas
jo
cmp
sbbl
xlat
out
inc
sbb
das
gs
push
enter
int3
pop
outsl
inc
inc
mov
cmp
and
inc
daa
loop
ds
clc
jle
cmpsl
shr
pop
jae
test
add
sti
jp
inc
mov
sahf
sub
lock
add
mov
push
mov
xor
jno
xchg
rolb
push
loop
jno
add
mov
je
aaa
scas
std
mov
add
dec
out
inc
pop
adc
cld
push
cmp
sub
and
inc
or
add
push
sbb
dec
stos
xchg
and
inc
jo
add
icebp
nop
mov
lds
roll
sbb
or
add
xchg
mov
add
popf
add
ja
add
fildll
sets
fcmovnb
xchg
mov
into
adc
imul
inc
test
popa
scas
insl
or
idiv
ret
mov
sbb
or
arpl
int
sti
mov
sub
xor
and
xchg
and
mov
mov
lcall
jb
gs
cmp
add
jg
jecxz
test
mov
lret
loope
cltd
push
clc
xchg
cmp
jecxz
inc
fs
and
jle
test
xor
pop
pusha
mov
scas
add
gs
mov
ljmp
cmp
rcrb
push
add
inc
or
clc
mov
iret
mov
dec
push
push
add
xorb
test
fwait
mov
mov
test
in
add
jl
in
andb
stos
add
mov
dec
adc
pushf
cmpsl
add
jbe
xchg
mov
repz
negl
mov
scas
add
adc
sbb
mov
in
add
adc
sbb
out
push
add
scas
fsubrl
push
and
cmpsb
sahf
les
test
jg
mov
push
stos
xchg
add
xor
xchg
mov
leave
add
xchg
cmpsl
sub
int
push
movq
lret
and
jb
add
in
jmp
mov
fdivl
cmp
mov
ret
cmp
or
pop
jns
rcll
dec
and
and
add
cli
add
jl
lret
jb
outsb
dec
add
sbb
sub
int
dec
jns
daa
xchg
add
inc
cli
paddd
add
test
jo
add
dec
xchg
jne
jle
add
adc
lret
pop
ror
popf
cmp
adc
dec
ret
lcall
mov
adcb
je
jb
jne
jbe
movsb
cmp
jle
data16
pop
fdivp
pop
adc
imull
ret
pusha
add
bound
rcrb
inc
and
and
add
loop
shll
fadds
xor
xchg
mov
addr16
add
push
icebp
aam
push
movsb
and
arpl
bound
push
mov
imul
pop
popf
pop
inc
jle
loope
jle
inc
cmp
mov
and
add
call
loopne
xor
jge
add
roll
add
xchg
enter
add
xor
std
add
rcll
cmp
add
adc
mov
dec
aaa
jae
cwtl
jl
lret
push
cmp
xchg
movsl
lds
cmpsb
outsb
lahf
adc
repz
jno
add
sbb
add
das
lds
loope
in
adc
inc
sub
jbe
icebp
and
loopne
add
in
add
stos
pop
sbb
ret
jp
loopne
out
add
inc
hlt
jno
cmpsb
adc
add
enter
popa
cmp
push
loope
and
mov
jmp
out
jne
xchg
je
sub
push
cmp
jno
and
add
inc
rorb
mov
push
fwait
outsb
add
inc
pop
mov
mov
add
mov
add
xor
or
imul
xchg
pop
add
in
mov
cmpsb
add
shl
dec
add
mov
fidivrs
daa
dec
popf
loope
rclb
shlb
pop
jmp
ja
ds
roll
jno
push
cmp
mov
pushf
add
es
mov
ljmp
jmp
cli
pop
push
pop
les
jb
push
add
flds
mov
jne
push
lods
push
mov
cmp
mov
rolb
imul
pusha
sbb
add
dec
outsl
cmp
sub
int
pop
jo
push
lea
xchg
aad
jns
push
mov
and
dec
sti
dec
daa
xor
xchg
daa
mov
xchg
sbb
pop
mov
dec
and
sub
into
inc
mov
test
dec
xchg
xorb
in
repnz
cmp
cmp
mov
xchg
in
push
shll
in
xchg
roll
jns
lea
fwait
add
je
lods
mov
rorl
sub
cmp
or
fidivrs
fbld
jl
push
sbb
addr16
push
imul
cmp
cli
out
popl
mov
cwtl
inc
lea
adc
sahf
es
or
add
ret
shll
cmp
mov
add
cmp
in
je
jp
add
push
dec
and
pop
or
leave
pushf
pop
cmp
leave
out
sbbb
imul
mov
jne
xor
or
adc
loopne
push
test
ds
push
add
fbstp
divl
adc
popa
mov
pop
mov
ljmp
push
sbbb
testb
push
decb
jmp
jns
jp
pop
adc
push
sbb
mov
add
jo
mov
cld
orl
pusha
xor
push
push
add
inc
fidivs
cmp
icebp
popf
scas
add
pop
shr
fdivrs
movsb
daa
sbbb
nop
lods
add
cli
add
push
pop
or
add
inc
xor
inc
std
clc
pop
and
dec
add
jne
fstpt
xor
cmpsb
or
jp
sub
add
ljmp
and
stc
out
jne
jg
cmp
leave
jb
add
cmpsl
sbb
mov
add
sbb
mov
andb
je
cmpsl
test
mov
nop
inc
sbbl
insb
mov
test
push
pop
add
stos
mov
sub
mov
call
xchg
dec
push
dec
pop
cli
push
filds
mov
cmp
movsb
in
fildl
pop
sub
jge
mov
pop
sti
push
ror
sbb
inc
lock
cli
jo
inc
add
dec
mov
pusha
push
adc
fbld
cwtl
add
orb
icebp
add
dec
xchg
push
add
and
mov
das
add
js
mov
add
add
daa
sub
mov
leave
pop
icebp
or
pop
cld
pop
shrw
fcmovnbe
aam
std
call
mov
sbbl
mov
add
rol
jmp
movsb
dec
inc
or
and
add
lcall
dec
bound
cltd
aam
push
loopne
sarl
scas
push
insb
add
outsl
std
stc
popa
cwtl
lret
push
jae
in
add
shl
fadds
xchg
aam
add
adc
inc
adc
sbb
jne
push
out
ss
mov
mov
and
add
or
add
lcall
cmpsb
mov
dec
add
pop
xchg
adc
loope
lock
push
cld
pop
add
mov
ret
mov
sbb
push
fistpl
inc
cmp
cli
push
imul
fs
cmp
dec
inc
pop
mov
sti
clc
and
and
gs
push
inc
and
jp
add
xor
dec
xchg
push
pop
xchg
mov
push
fwait
jns
pop
push
orl
out
sbb
sti
dec
test
xchg
test
rolb
sbb
hlt
clc
jle
sbb
push
enter
cmpsl
xor
shlb
add
pop
sbb
jno
add
push
xchg
xchg
mov
jno
add
pop
jecxz
movsb
pop
pusha
add
aas
sub
int3
lret
add
nop
pusha
jno
pop
ret
add
sub
dec
out
lahf
add
lret
push
sbb
add
ss
lods
add
pop
pusha
std
jbe
or
imul
add
mov
nop
aam
in
mov
adc
shll
push
add
push
loopne
xor
ljmp
add
xchg
mov
mov
cmp
xor
jnp
push
add
xlat
xchg
jae
rcrb
insb
add
out
cmp
icebp
adc
cmc
jnp
mov
nopl
outsb
int
ret
add
adcl
inc
mov
das
lods
out
nop
or
rcll
add
rorb
add
comiss
xlat
sbb
cmp
jo
xchg
rorl
add
mov
les
xor
ds
xor
das
and
add
loopne
xor
nop
mov
js
and
sub
pop
adc
mov
inc
sub
rol
or
xlat
pop
shrb
jmp
mov
sbbb
add
push
test
add
cmp
or
sbb
pop
lock
add
push
aaa
add
test
add
dec
ret
mull
inc
push
addb
add
add
sbb
add
mov
fstpt
test
jb
into
es
out
xor
sti
add
sbb
adc
add
cmpsl
xchg
ret
jge
add
jmp
shlb
fidivrl
mov
mov
arpl
shr
aas
lods
add
lret
mov
mov
outsl
add
leave
repnz
jle
mov
push
imull
test
hlt
out
add
adc
jae
add
int3
push
inc
imul
add
fidivl
pop
cltd
adc
inc
icebp
mov
incb
cmpb
sahf
cmp
stos
push
loopne
or
xlat
or
subl
call
adc
add
mov
adc
and
stos
movsl
xor
loope
cmpsb
adc
sub
sub
or
add
repz
add
push
fimuls
inc
outsl
and
add
pop
inc
cmp
inc
fsub
inc
insl
push
inc
pop
or
mov
adc
adc
pop
mov
adc
mov
add
inc
aaa
fstpt
xor
test
scas
mov
sub
mov
push
mov
stos
xchg
or
adc
mov
in
add
dec
sbb
add
sub
mov
rolb
hlt
fmull
ret
test
cmpsl
int
ds
push
andb
imul
lret
enter
dec
push
push
lret
and
push
out
bound
mov
mov
and
dec
test
sar
push
adc
add
ror
subl
addb
ficomps
pop
cmp
loope
mov
ds
add
lcall
outsl
add
xchg
add
and
inc
leave
jmp
icebp
nop
mov
test
popf
xor
add
dec
mov
lock
mov
subb
xor
sbbb
adc
adc
jg
add
bound
outsl
andb
stc
nop
nop
aaa
jge
cs
add
push
into
xor
add
test
add
int3
pop
mov
idivb
push
or
mov
test
pusha
mov
mov
test
pop
xor
jmp
mov
sbb
fnstcw
push
cmc
mov
sbb
outsl
cmpb
dec
dec
cmpsb
arpl
push
mov
pop
mov
mov
mov
addb
add
xchg
jbe
mov
push
shr
cmp
std
push
mov
cmp
mov
mov
xor
lds
jl
add
hlt
rol
adc
les
mov
adc
mov
add
pslld
jae
mov
dec
out
and
test
push
cmpsb
mov
popa
mov
enter
jns
jg
fcmovnbe
cli
stc
add
loop
mov
lds
call
push
ror
add
add
fstps
dec
daa
sub
ljmp
xchg
add
cmp
push
fnsave
mov
out
repnz
sbb
dec
mov
bound
call
push
ja
push
stos
adcb
movsl
add
or
in
jbe
mov
aam
mov
pop
add
ja
movsl
add
fsubl
mov
scas
aaa
or
inc
call
add
leave
test
testb
push
lret
jecxz
hlt
add
adc
jnp
sbb
adc
test
adcb
mov
inc
imul
or
popa
in
clc
sbb
fildl
mov
dec
dec
ja
jo
iret
jmp
stos
adc
psraw
lret
and
mov
jns
xor
pop
dec
ljmp
or
xchg
dec
orb
push
push
pop
adc
fwait
pop
xor
sahf
add
mov
testl
adc
test
push
pusha
popa
scas
call
adc
mov
xor
fildll
lcall
add
out
add
and
dec
jge
add
add
mov
pusha
das
inc
loopne
adc
dec
jmp
dec
jg
pop
adcb
push
pop
loopne
xadd
nop
push
fldl
inc
xor
cld
pop
hlt
jae
cmp
adc
cwtl
push
push
loope
out
nop
mov
das
mov
pop
push
xor
insl
sbb
and
inc
jge
fsubrl
xor
ret
mov
pop
push
orl
shrb
inc
add
nop
mov
add
in
mov
cltd
hlt
xor
sahf
pop
xchg
nop
pop
add
in
or
out
outsb
add
jb
mov
and
mov
adc
jle
pusha
sub
loop
or
inc
sub
mov
andb
shrb
sbb
fisubrs
aas
mov
sahf
mov
mov
cmp
cmpsl
notb
mov
into
xor
push
jne
sbb
mov
cmovs
pusha
xorb
out
clc
pop
mov
add
xchg
in
cmpsl
sub
push
dec
cs
xor
add
xor
push
inc
sub
movsb
push
sbb
or
test
inc
mov
movsl
icebp
pop
inc
pop
mov
dec
cwtl
or
popa
clc
inc
ljmp
jo
dec
sub
fstl
jae
xchg
add
data16
cmp
insl
aad
outsl
loope
rcrb
call
add
or
les
aam
fisubrs
fcomps
sbb
sbb
add
and
dec
add
xchg
int3
pop
into
add
mov
aad
add
jns
or
add
pop
mov
test
add
and
and
pop
cmp
cmpsb
mov
xor
ss
dec
pop
in
mov
mov
add
xchg
push
loope
mov
xor
mov
inc
push
sbb
imul
xchg
push
outsl
imul
inc
or
mov
mov
xor
add
lcall
add
mov
add
jle
and
iret
cltd
and
sub
add
jns
int3
and
pop
pop
add
ljmp
clc
sahf
xchg
daa
in
add
cmc
les
or
add
add
pop
mov
jb
pop
pop
sbb
int
fs
and
flds
mov
lods
imul
jl
pop
sub
dec
add
loope
lock
loopne
filds
or
mov
add
ljmp
add
shll
sbbb
mov
sbb
mov
add
sahf
mov
in
add
push
call
call
scas
jno
mov
sub
jmp
fdivs
mov
cmp
mov
out
js
cmp
jge
jno
mov
pusha
outsb
fisttpl
in
mov
xorb
jp
push
das
movsl
loope
add
out
inc
cs
lock
sbb
aaa
rcll
pusha
fs
add
push
sub
in
leave
and
in
das
punpcklbw
ja
add
jns
addr16
fnstsw
call
jb
or
mov
ss
cmp
dec
xchg
add
add
jne
and
adc
cmpsb
fdivrs
add
dec
mov
rol
mov
ja
nop
test
test
outsb
pop
mov
sub
adc
sbb
gs
add
stc
xchg
mov
pusha
xor
loop
scas
cmp
add
lcall
lret
add
ss
mov
adc
inc
fs
addb
imul
js
xlat
subb
fsubs
dec
ret
ljmp
pushf
rolb
punpckhwd
xor
mov
push
xchg
lods
fmuls
pop
in
mov
nop
pop
push
sbb
or
outsb
xchg
les
jp
add
xor
push
test
push
pop
add
or
add
mov
xchg
loopne
js
push
add
jne
push
mov
in
mov
int3
sbb
clc
mov
roll
mov
iret
pop
xor
data16
inc
rcll
mov
add
mov
gs
mov
adc
arpl
add
xchg
cmpsb
or
jne
fisubrl
mov
xchg
xor
pop
xchg
arpl
stos
add
sar
jl
lret
add
std
out
shlb
cmp
xor
lea
pop
cmove
adc
mov
pop
xor
sbb
mov
inc
mov
rorb
cmp
adc
push
dec
add
jecxz
adcl
add
les
cltd
inc
jb
cmp
movl
mov
push
adc
add
aad
cmp
andl
lock
loop
sldt
jb
fbld
ret
jns
cmp
adc
sub
and
pushf
push
cmpsb
dec
fcoms
jnp
jge
xor
mov
push
add
pop
add
mov
in
lds
lret
mov
cmp
cmpl
mov
mov
cmp
test
fs
sub
push
int3
sub
add
lods
pop
loope
cmp
add
adc
lahf
scas
dec
xorl
fwait
pop
and
cmp
mov
lds
test
cs
inc
lcall
out
xchg
jo
mov
push
cmp
jmp
add
inc
shrb
js
jo
dec
outsl
adc
pop
aaa
push
mov
fbstp
fcompl
bound
lret
repz
pop
mov
fisttpl
xchg
and
rcr
cld
inc
add
cmp
fcomps
es
jle
add
shrb
mov
cmp
sub
rep
lret
inc
lock
divl
ljmp
in
in
sbb
or
ljmp
pusha
sbb
mov
enter
jg
clc
pop
fldenv
mov
mov
mov
add
icebp
or
pop
lds
lea
sbb
popa
imul
data16
or
xlat
adc
push
pushf
pop
inc
sub
add
repz
add
loop
xchg
add
mov
pop
add
pop
in
add
push
inc
jnp
push
add
mov
dec
add
nop
lret
xrelease
loopne
xchg
lret
and
insl
xchg
or
mov
ds
xor
sarb
push
mov
nop
add
movsl
daa
adc
mov
ss
inc
sub
add
jnp
cmpsb
push
xlat
shll
js
scas
cmp
add
rcrb
cld
mov
mov
in
xchg
aaa
scas
add
push
jns
fxch
pop
jne
sub
add
rorl
dec
daa
nop
sub
add
inc
loopne
lret
lds
rorb
inc
cltd
sbb
shll
add
popf
xor
pusha
add
outsl
stc
mov
or
add
lods
cmp
int3
cmpl
jge
stc
andb
lahf
mov
jns
nop
xlat
xor
enter
inc
loope
mov
add
fistpl
roll
jb
fadds
xchg
jl
fsts
add
ja
into
sti
jmp
jo
pop
pop
in
dec
push
pop
loopne
jl
add
add
add
jne
loope
aam
add
pop
jno
add
and
push
xor
dec
inc
lret
dec
mov
test
add
ds
sti
hlt
or
adc
add
lods
fiaddl
or
out
mov
or
add
mov
scas
cvttps2pi
add
testb
ss
push
inc
mov
and
push
pslld
add
stos
add
repz
pop
jp
pop
cmpsl
pop
ss
ficoms
nop
add
jb
call
adc
mov
mov
push
je
lcall
mov
sarl
nop
cmp
lods
loopne
add
fidivrs
test
sub
add
aad
xor
hlt
lds
cli
std
loope
sarb
faddl
xor
outsl
jae
fwait
mov
addr16
js
push
inc
add
mov
mov
xor
or
jo
mov
fnstenv
mov
add
shr
lahf
sub
sbb
scas
cmp
mov
xchg
jp
clc
push
packssdw
or
sub
pop
pop
inc
sbbb
cmp
pop
add
pusha
xchg
lcall
mov
push
sbb
inc
push
fnstsw
cmpl
movsl
push
andps
subb
xor
mov
sub
cwtl
inc
ss
add
push
and
cld
add
and
sub
mov
pop
lods
int
cwtl
pusha
test
ret
ss
rcr
mov
flds
js
imul
cmpb
cwtl
filds
ret
adc
add
loop
inc
outsl
xchg
add
mov
andb
fbstp
mov
testb
arpl
xor
int
mov
or
cwtl
sahf
lcall
cld
cmpsb
roll
pop
add
dec
pop
dec
enter
nop
mov
xchg
sti
cmp
dec
roll
lcall
adc
pop
jae
les
das
add
mov
aas
xchg
add
mov
add
xchg
dec
xchg
add
and
outsl
jo
lahf
pop
scas
pop
cmpsb
mov
cmp
and
inc
push
adc
add
nop
mov
add
mov
sbb
popa
pop
adc
cmp
xor
mov
dec
pop
pop
xchg
sub
nop
cmp
jo
lret
shlb
push
or
xchg
mov
shrl
je
sbb
add
dec
mov
rorl
jb
lock
fs
and
xchg
daa
jo
mov
test
add
jb
fadds
sbb
mov
dec
nopl
js,pn
pop
inc
mov
dec
xchg
addb
int
xor
xor
js
mov
stos
jne
je
addb
hlt
push
add
and
mov
dec
cld
jmp
inc
je
out
push
push
out
and
pop
cmp
ret
pop
push
or
add
cld
test
inc
add
cmp
aad
sub
cmp
and
add
mov
adc
fadds
jnp
es
push
xchg
jne
cltd
ror
add
pop
addl
add
jl
xor
in
adc
add
addr16
xor
fstl
add
pop
xchg
hlt
sub
xor
ret
shl
cld
push
rolb
push
pop
cli
xchg
push
add
sbb
fisubrs
lret
roll
fcompl
push
aas
arpl
add
imul
mov
add
jp
mov
dec
mov
sub
ljmp
stc
push
enter
repz
aas
lret
popa
add
pop
int3
pushf
push
rorl
bound
fcompl
cltd
test
lock
pop
out
add
ja
sbb
roll
int
js
iret
scas
enter
test
out
xchg
call
pusha
mov
jb
pop
add
add
jmp
add
add
js
ja
jl
add
pusha
mulb
fcmovu
rcr
xchg
dec
adc
adc
adc
ret
add
jle
out
push
xchg
loopne
xchg
clc
jl
add
xor
fs
push
mov
cmp
cmp
loop
cmp
cmp
out
les
xor
sbb
add
mov
add
push
adc
shlb
and
loopne
xchg
stos
test
jecxz
fstl
imul
push
add
subl
or
jecxz
add
pop
pushf
in
mov
addr16
add
icebp
lret
inc
cmp
ficoml
sbb
lock
add
pop
ret
or
arpl
das
insb
add
or
xor
and
pop
aas
xchg
lret
sbb
or
or
int
push
add
and
data16
push
aas
add
test
add
cmpsb
arpl
mov
pop
dec
sbb
sahf
xchg
sub
scas
inc
repnz
and
push
xchg
je
sub
xchg
xchg
jg
js
add
lds
and
arpl
lahf
les
mov
adc
push
shl
es
add
daa
out
mov
xchg
add
aas
enter
rcr
add
inc
mov
add
insl
pop
pop
out
mov
add
jbe
fsubp
aaa
rolb
je
push
cmovl
hlt
fwait
push
add
test
or
cmp
aaa
mov
sahf
mov
enter
call
dec
dec
or
mov
jge
add
push
clc
cmp
leave
sahf
mov
pop
push
cmpsl
adc
sub
inc
pop
dec
ficoms
iret
or
and
cmp
popa
lret
sub
pop
or
xor
sbb
icebp
fdivp
nop
or
add
mov
int3
mov
add
add
fimull
inc
add
pop
mov
fdivrs
enter
mov
xchg
add
dec
pop
dec
js
add
jbe
adc
fldcw
in
scas
repz
add
cltd
subl
ds
push
push
add
ljmp
inc
insl
cmp
aas
add
clc
outsb
add
lods
stc
adc
int3
test
add
int3
xor
clc
lret
call
mov
insl
gs
add
jmp
jecxz
repz
and
sti
fbld
jne
adc
add
fistpl
fiaddl
add
test
add
pop
shll
fstl
dec
pop
in
fisubrs
sbbl
ja
and
dec
add
leave
cmpxchg
addr16
xchg
xlat
mov
mov
scas
out
dec
mov
jg
mov
cmpsl
inc
push
push
and
and
adc
stos
inc
jmp
subb
xchg
jo
mov
lods
incl
iret
fcoms
loopne
arpl
add
adc
daa
pushl
add
sub
leave
out
rcl
add
pop
xor
sub
and
mov
jnp
push
add
sbb
nop
mov
mov
adc
xchg
mov
pusha
or
arpl
push
negl
mov
cmp
roll
bound
add
lret
jle
and
mov
xchg
push
cmc
mov
and
pusha
adc
hlt
fld
and
jb
or
lea
mov
push
mov
xor
and
sarb
pusha
mov
test
mov
movsl
jne
or
and
fadds
cmp
test
in
psrlw
or
inc
cmp
mov
pop
ss
lahf
add
cmpsb
add
call
in
or
jo
xchg
lods
jb
shr
rorb
repnz
stos
xor
je
or
add
xor
ds
repz
xor
and
mov
fdivl
jp
out
lock
out
mov
or
aaa
test
adc
and
test
jmp
sub
push
push
lods
test
push
int3
and
leave
xchg
lret
data16
in
ss
push
jmp
rolb
int
sub
call
out
mov
cs
nop
fldl
xor
xor
push
add
inc
or
sbb
prefetch
add
mov
cltd
xchg
xorl
push
in
add
xor
push
nop
dec
pushf
mov
push
pop
das
rol
int3
addr16
add
xorl
sarb
sub
add
je
pusha
jmp
cwtl
lock
ljmp
xchg
or
pusha
mov
add
mov
in
mov
push
jecxz
mov
mov
add
int3
inc
cmpsl
add
popa
mov
ret
loopne
nop
inc
add
adcb
dec
add
xlat
mov
xor
mov
jmp
pusha
adc
xchg
add
ljmp
jle
mov
repnz
aad
push
cld
mov
lret
inc
xchg
rclb
scas
jae
dec
add
clc
jns
mov
nop
mov
sub
xor
int3
sub
mov
fldt
add
mov
jmp
push
in
in
loopne
mov
add
xor
inc
inc
or
push
clc
fwait
nop
jnp,pn
cmp
les
scas
rorb
add
sbbl
inc
pop
ja
fs
nop
sub
jge
add
jo
sbb
popf
push
sbb
jno
inc
scas
movsb
sbb
nop
cmpb
cli
or
hlt
cs
add
sbb
mov
add
adcl
inc
call
popa
cmp
mov
mov
les
pop
inc
add
scas
or
aad
sbb
push
add
mov
scas
loope
aaa
mov
loop
add
pop
inc
sub
jne
gs
mov
and
add
mov
nop
imul
push
pop
xchg
inc
inc
pop
movsb
stc
dec
out
stos
push
cmpsl
loop
inc
shl
hlt
fs
dec
lds
pop
rcrb
sub
cmp
fiaddl
add
js
in
mov
xchg
add
test
add
inc
test
pop
jle
dec
and
pop
sbb
push
pop
inc
jo
lods
enter
lds
inc
add
call
add
mov
mov
jge
hlt
cmp
pop
or
adc
bound
add
fstpl
icebp
popf
jmp
or
and
filds
outsl
sub
add
cwtl
inc
push
ds
int3
jb
ficoml
push
in
sub
jl
push
mov
nop
add
mov
call
pushf
outsl
inc
jno
dec
push
in
and
cmp
dec
adc
inc
xor
and
cli
jae
mov
lcall
pop
hlt
mov
pop
xlat
jo
clc
dec
inc
add
mov
add
fdivrl
jecxz
mov
add
mov
mov
jle
mov
xor
popa
leave
bound
inc
hlt
adc
push
add
cmp
xorb
gs
leave
dec
cmp
jle
sarb
es
cmp
inc
fcomps
dec
mov
hlt
xchg
mov
add
inc
notl
add
mov
iret
add
in
ret
jmp
add
lret
dec
xchg
fs
adc
add
cmc
in
sub
cmp
stc
push
lds
movsb
ja
add
push
ss
jno
jecxz
mov
sub
fimuls
mov
sub
adc
subb
sbb
or
add
call
fbld
subl
push
int3
dec
pop
or
xchg
mov
adcl
fiaddl
mov
std
lea
faddl
xchg
loopne
adc
cli
out
in
adc
mov
mov
mov
or
stos
repz
xor
loopne
cmc
jae
add
mov
and
mov
fimuls
xor
add
cmp
mov
mov
in
divl
cwtl
push
insb
add
outsl
ss
or
shll
cmpb
loop
cmp
jb
add
test
stos
addl
cmpsb
pop
jo
mov
scas
push
mov
add
jle
nop
xor
add
inc
sub
add
out
cld
fnsave
inc
pop
inc
push
testb
mov
xchg
add
shll
sahf
arpl
inc
dec
out
mov
dec
movsl
cltd
mov
lock
test
mov
testb
xor
iret
fidivs
dec
push
sub
xchg
pushf
mov
test
mov
hlt
and
add
and
enter
lock
inc
test
sub
or
aas
dec
push
add
push
xchg
dec
fwait
inc
aam
lods
xchg
pop
adc
mov
push
int3
fmul
stc
or
ret
pusha
rcl
in
inc
insb
inc
mov
or
fcomps
xchg
mov
std
fstpl
aad
mov
inc
pop
mov
cmp
jne
add
mov
and
and
adc
add
icebp
mov
mov
imul
roll
les
clc
sti
aaa
and
mov
movl
push
sub
add
mov
xchg
xor
outsl
pop
jge
xlat
lea
xchg
cwtl
ret
add
mov
fld
push
stos
lret
xor
push
add
lret
aaa
into
je
or
sub
pusha
sbb
gs
subb
aas
mov
mov
mov
sub
and
test
test
dec
push
shr
inc
push
push
aas
mov
rcrl
test
jle
inc
mov
subl
shll
subl
cmp
loopne
add
je
scas
in
lret
ret
or
repz
inc
fs
jne
adc
xchg
arpl
add
sbb
add
in
mov
aaa
add
xor
add
loopne
add
adc
aad
sbb
shrb
inc
cmp
and
out
lret
dec
add
andl
jnp
fisttpll
clc
fidivs
add
push
or
add
lock
pop
imul
add
xchg
mov
jl
cmp
scas
add
sbb
and
sbb
sub
sarb
lret
xchg
mov
sbb
or
push
mov
aam
inc
mov
incb
test
push
pop
lret
push
in
test
mov
nop
and
testl
mov
dec
lret
jl
std
icebp
mov
mov
ret
add
jb
adc
inc
add
rolb
mov
int3
rorl
add
outsb
rcrb
dec
add
inc
or
push
repnz
mov
mov
sbb
dec
je
adc
pop
add
pop
cmp
mov
or
repz
dec
cmp
fsts
or
lods
sbb
push
in
aas
push
int3
outsb
jne
mov
leavew
lock
in
int
cwtl
push
iret
add
pop
pop
cmp
notb
add
shlb
repnz
xlat
dec
into
in
pop
test
das
mov
add
lods
mov
xorb
jne
iret
dec
mov
add
sbb
test
xor
pop
pmuludq
into
cmpb
and
add
dec
xlat
push
ljmp
pusha
lock
fdivrl
xchg
lret
aas
xor
push
add
jb
xor
xchg
test
add
jecxz
mov
addr16
sub
dec
adc
pop
and
mov
mov
flds
push
inc
dec
psubw
xor
scas
js
enter
add
repnz
sbb
inc
sbb
xor
add
jle
fmuls
add
popa
xchg
push
mov
sbb
stos
data16
and
dec
mov
inc
add
jne
push
add
pop
mov
setge
test
jns
divps
rclb
push
mov
mov
aad
adc
stc
enter
or
push
push
rol
jo
or
push
xor
sbb
pop
shr
mov
popf
jns
xchg
xchg
mov
jo
mov
shlb
add
xchg
mov
add
rclb
add
lods
popf
in
pop
inc
pusha
mov
adc
shlb
jo
xor
sbb
cmp
pop
loopne
push
or
xchg
xchg
add
aaa
jbe
xchg
je
sbb
pop
testb
adc
fadd
mov
push
sub
or
jecxz
nop
push
jo
leave
add
pop
and
outsb
inc
enter
ret
mov
lret
movsl
pop
out
arpl
pop
scas
das
xor
in
verr
mov
or
pop
imul
stos
add
dec
outsl
insb
or
add
push
mov
xorb
addb
add
lock
dec
pop
cmpsb
push
rolb
mov
add
nop
adc
lock
pop
and
ljmp
rcrb
adc
clc
dec
adc
ds
lock
fimull
and
rcrl
mov
jno
iret
jge
add
faddl
pop
sub
xchg
pop
aas
add
shll
xlat
icebp
mov
lock
add
jnp
mov
scas
pop
mov
into
subb
vmovups
dec
int
or
mov
adc
mov
lcall
lea
cmpsb
mov
shl
ss
xlat
lds
js
xchg
push
data16
cmpsl
jb
imull
mov
adcl
stc
dec
test
outsl
test
dec
xchg
inc
ror
pop
and
std
adc
inc
or
loopne
inc
shlb
test
or
jecxz
pop
test
dec
inc
inc
ja
nop
or
dec
out
mull
pop
sbb
sbb
jecxz
movl
inc
iret
adc
sti
xchg
mov
arpl
nop
add
inc
pusha
mov
lret
mov
sbb
lock
pop
outsb
jmp
movb
add
or
daa
pop
jle
sahf
and
test
add
test
and
ret
imul
jge
add
sub
int3
data16
add
or
or
sbb
sbb
gs
iret
cmp
xor
lds
repz
nop
data16
popf
and
pushf
add
adcb
sbb
popa
mov
sub
aas
lcall
insb
movsl
xchg
sti
add
addb
mov
outsl
pop
rolb
mov
xchg
call
pop
pop
shl
add
pushf
sub
scas
pop
inc
push
push
add
jns
pushf
add
sbb
sub
loopne
cmpsl
loope
add
movsb
ljmp
inc
je
jg
shlb
movsb
jne
jmp
mov
or
outsl
add
shlb
mov
pop
int3
adc
add
call
xor
jmp
lret
out
add
fdiv
aaa
cmc
add
shl
push
jg
add
or
pop
fdivl
test
cwtl
mov
add
push
and
xchg
xor
or
insb
es
xor
fldl
aad
outsb
int3
enter
cmp
incl
jp
lods
dec
icebp
loop
push
push
loopne
loope
dec
add
rep
hlt
adc
dec
fwait
enter
ss
jmp
daa
in
xor
xor
or
stc
adc
pop
push
sbb
cltd
add
lahf
test
shlb
adc
add
mov
adc
stos
rep
sub
fildl
jno
aad
and
repnz
and
xor
jecxz
mov
fcomps
push
ror
dec
fmuls
push
mov
xchg
fldenv
lds
jbe
cli
in
inc
mov
pop
cmpb
sbb
pop
cmpsb
adc
xlat
adc
add
addl
sub
cltd
pop
xchg
jne
cmpsb
daa
and
dec
aam
dec
xchg
add
mov
sarl
fwait
out
sbb
subb
rcrl
lods
call
add
pop
inc
scas
loop
es
pop
and
sub
cld
or
jne
inc
inc
inc
add
push
adc
adc
jb
lret
cmpsb
xchg
sub
add
xchg
fisttpll
jo
mov
add
adc
push
sbb
jbe
mov
out
and
fildl
dec
in
out
and
ret
xor
sbb
por
sahf
loope
stos
or
les
mov
test
insb
shl
add
je
cmp
adc
ljmp
sub
out
int3
push
filds
out
stc
icebp
test
stos
and
adc
jmp
aam
mov
xor
cmpb
int3
lock
stos
add
divb
es
ret
xor
out
and
nop
add
pop
insb
jnp
lods
and
xchg
sub
push
lret
outsl
cli
sbb
or
adc
add
pmaxsw
cmpsb
aad
std
cmp
loopne
xor
and
mov
xor
insl
ret
xor
xchg
add
es
out
xchg
xor
push
sub
jl
jno
jmp
subb
mov
mov
cwtl
mov
aam
mov
add
mov
mov
popa
mov
push
shrb
lock
adc
xchg
movsl
add
dec
sub
rclb
jae
cmp
cmp
out
int
jle
mov
mov
add
pop
sbb
add
adc
fnsetpm(287
out
add
mov
or
loop
hlt
add
push
push
push
pop
call
inc
fldt
ljmp
sar
fdivrp
rolb
leave
mov
aas
cmc
sbb
dec
add
pushf
fnstcw
sub
add
subl
and
lds
int3
movsl
cmp
add
addl
pop
mov
add
lds
xchg
sar
imul
repz
or
sbbb
out
bound
sub
ret
jns
loopne
jl
and
dec
xor
dec
outsl
add
xchg
insl
jg
jmp
cmpsl
and
xorl
pop
cmpsb
add
lods
xor
xchg
daa
test
shlb
mov
nop
add
push
or
loopne
lcall
insb
fadds
rcll
add
test
ficomps
add
and
leave
enter
cld
inc
dec
push
out
or
lods
pop
imul
rorb
adc
xchg
add
cmpsb
addb
jmp
push
inc
ds
addb
adc
cmp
or
daa
xchg
add
int
push
cld
mov
mov
rcr
fcoml
test
push
sbb
lcall
jmp
pop
add
sbb
xor
sub
ret
je
mov
or
dec
cld
add
loope
das
mov
ffree
clc
pop
jne
add
cmp
js
mov
inc
ds
lock
add
mov
sub
fadds
or
out
rolb
and
rclb
adc
jle
fildl
scas
scas
adc
adc
lods
subb
pop
adc
in
icebp
dec
add
test
rolb
sahf
addb
lcall
push
pop
mov
fsubl
repnz
add
imul
cs
add
jmp
xchg
adc
nop
and
je
inc
nop
xchg
test
loopne
hlt
push
xor
outsb
andl
in
add
cmp
loope
mov
or
int
sub
push
scas
aas
pop
mov
in
sarb
sbb
xchg
pmaxub
daa
push
cltd
jp
sahf
push
sub
pop
adcb
psrlw
xor
push
xchg
arpl
bound
ret
call
gs
add
sbb
push
adc
call
fldcw
ss
sahf
adc
clc
sub
add
cmp
add
lds
pop
sbb
add
sysenter
xor
aas
sub
fs
sub
jp
inc
pushf
stos
sbbb
sbb
aas
and
test
lcall
and
mov
and
aaa
adc
fsubrl
sub
call
aas
xchg
int3
cmp
lsl
lds
mul
mov
or
adc
sub
nop
add
imul
add
dec
push
inc
test
add
dec
jmp
mov
shl
outsl
sub
or
sarb
pop
psraw
bound
cmc
add
call
adc
popf
xor
pop
dec
xchg
fwait
hlt
adc
xchg
clc
xor
imul
push
sbbl
hlt
push
push
xchg
pop
add
or
loopne
push
in
cmc
jmp
mov
rolb
sti
mov
xchg
xor
mov
add
mov
mov
dec
pop
setae
insb
out
adc
pop
add
dec
int3
mov
sbb
lret
lds
mov
std
push
sbb
or
dec
add
cmp
setnp
loop
sbb
test
add
pop
adc
pop
add
push
jle
pop
nop
pop
addb
jl
sub
outsb
jno
push
in
add
jmp
xor
sub
jg
jnp
push
lea
xchg
pop
orb
outsl
add
and
push
or
add
pop
shrb
add
addr16
mov
imul
push
jo
insb
aas
mov
sub
rclb
cmp
pop
jne
xchg
mov
sbbl
into
pop
add
mov
sub
repz
je
dec
add
inc
pop
cmp
or
arpl
je
xchg
movsb
mov
or
sub
jge
dec
pop
or
xor
xor
sbb
or
mov
js
jge
jne
insb
jmp
mov
outsb
or
mov
loopne
push
push
inc
pop
xor
xchg
xchg
cmp
sub
jl
adc
in
mov
add
add
mov
mov
enter
js
mov
shl
loop
call
ds
xor
push
leave
aas
addb
sbb
std
add
das
cmp
aam
ds
js
adc
dec
outsl
add
push
pop
popf
mov
push
jl
jb
or
je
add
add
pop
mov
dec
pop
add
sub
cmp
test
cmp
call
jb
jg
aad
pop
dec
add
inc
shll
pop
xor
cmp
iret
add
jbe
rdpmc
pushf
dec
mov
fildl
dec
adc
push
pop
test
pushf
add
nop
clc
mov
sub
in
push
jb
dec
jo
stos
xchg
pop
ljmp
xorb
jne
and
adc
pop
pop
dec
pop
adc
and
jge
add
and
xchg
cmp
outsb
jmp
pop
fwait
mov
je
push
pop
repz
scas
sbb
out
jl
inc
mov
jo
add
inc
rorl
mov
or
add
jo
push
stos
ljmp
pop
adc
aam
xchg
add
xchg
repz
adc
cltd
mov
mov
aad
ficomps
repz
xchg
sub
das
sbb
xor
inc
and
add
sub
push
icebp
dec
jns
loopne
mov
adcb
mov
adc
push
mov
sbb
push
sahf
xor
jns
jb
xchg
loopne
add
and
mov
ret
nop
push
ljmp
dec
xchg
das
out
inc
add
sbb
imul
clc
sahf
test
add
jne
and
mulb
pop
scas
inc
rdpmc
inc
dec
data16
mov
mov
pop
stos
sub
pusha
and
fmull
lret
pavgw
testb
mov
sbb
pop
cmp
dec
test
sbb
incl
iret
icebp
xlat
xorw
adc
xor
pop
push
mov
imul
flds
enter
xchg
and
or
pop
pop
push
sbb
dec
inc
xchg
cmp
mov
mov
jns
fstps
and
jno
add
andl
rorb
cmpsl
cmp
jno
push
dec
mov
repz
xchg
xchg
inc
jecxz
push
enter
add
dec
xor
int3
jmp
pop
sub
les
pop
out
mov
push
aad
stos
sub
add
js
lods
shll
mov
pop
jae
and
sbbb
mov
rolb
enter
jo
sub
ret
cmp
lahf
sahf
or
pop
inc
nop
sbb
add
add
call
add
jne
lret
icebp
pusha
daa
test
lcall
add
push
rorb
ret
movsb
scas
add
sub
jae
fisubrs
pop
addb
and
fwait
add
jae
cmp
sbb
ja
mov
and
outsl
add
aaa
dec
sub
in
test
out
add
mov
add
hlt
jo
enter
add
mov
add
roll
ret
push
lahf
jo
repnz
mov
repz
into
dec
pop
btc
push
mov
cwtl
xchg
add
rcll
lods
dec
mov
call
sbb
insb
push
push
sbb
ror
inc
rcl
mov
cmp
loope
xorb
int
xchg
pop
pop
mov
jo
clgi
jmp
aas
xor
sub
mov
dec
movsb
bound
je
testb
gs
sbb
imul
inc
pop
xor
push
sti
and
lock
cli
lea
test
or
divl
icebp
pop
mov
popl
push
add
cmp
es
daa
in
add
bound
dec
popf
jl
inc
js
mov
fs
mov
pop
aas
push
add
mov
in
iret
and
cmpsl
fadds
outsl
lods
jmp
push
add
add
or
and
int3
pop
lock
sbb
xchg
add
cli
xor
movb
and
cmp
adc
fnstcw
fldl
mov
cli
pop
and
mov
mov
push
mov
add
sbb
sub
xchg
insl
mov
arpl
pop
pop
cwtl
shrb
or
xor
rcrb
lods
mov
jns
add
inc
cmpsl
add
jecxz
inc
and
les
stc
es
add
jge
add
decb
lods
and
adc
lahf
add
fcompl
sbbl
xchg
add
jnp
jb
pop
mov
arpl
mov
and
add
add
inc
sahf
adc
fsubp
mov
xor
ret
and
jle
pop
popf
push
push
sub
cmp
mov
mov
sbb
into
in
cmp
cmpsb
inc
sti
add
mov
in
mov
jl
das
jns
or
stos
mov
shlb
jne
fs
daa
adc
pop
jg
jno
mov
imul
sub
jno
loopne
and
add
imul
add
xchg
xchg
mov
or
insl
mov
mov
dec
lret
loop
push
adc
ss
xchg
andb
adcb
xchg
pop
and
lds
pusha
add
loope
adc
mov
sbb
es
push
cmp
aas
xchg
cltd
jo
cld
push
addb
notb
or
and
xchg
stos
xrelease
addb
dec
or
orl
dec
push
bound
xchg
fildl
push
sub
inc
lret
mov
adc
xor
shr
add
sti
pop
cmc
jo
add
push
or
loopne
rcr
add
lret
shlb
dec
in
cmp
xchg
and
or
push
cwtl
dec
lret
pop
gs
bound
shl
lahf
xor
insb
add
adc
add
int3
ret
sbb
insl
adc
lock
mov
push
pop
mov
jg
or
xor
bound
push
les
cmpsb
dec
lret
add
sbbl
mov
test
and
add
push
pop
cmp
enter
je
push
mov
inc
inc
lahf
iret
inc
adc
add
shll
add
hlt
test
add
seta
leave
xlat
rcll
test
out
xchg
popf
jae
add
fucom
adc
orl
sub
js
addr16
jp
inc
push
lcall
jne
xor
rcrl
and
push
add
add
jmp
lea
jbe
ds
subb
jb
mov
jg
aam
adc
pop
sub
mov
lods
test
addr16
cli
frstor
loopne
pushf
sub
into
repnz
add
push
nop
push
add
cmp
lea
sub
mov
jle
enter
push
cmp
cmp
push
cwtl
dec
jne
add
or
pop
add
lret
loopne
int3
outsl
jg
pop
sbb
inc
add
xor
lock
in
pop
and
movb
lret
pusha
and
scas
sub
add
cmp
dec
jns
jl
mov
dec
lock
xor
sbb
icebp
loopne
ss
add
push
xor
pop
aaa
or
shll
xor
add
dec
pop
push
test
roll
insb
sarb
sbb
lcall
add
popa
int
xorb
adc
adc
stos
cwtl
inc
aam
les
popa
adcl
push
jmp
and
add
das
or
and
adc
push
ljmp
icebp
int3
inc
sbb
clc
jg
nop
lret
dec
push
dec
test
jle
dec
or
sahf
hlt
andl
pop
dec
xchg
push
mov
adc
pusha
add
into
mov
mov
dec
add
imul
out
or
iret
in
cmpsb
push
jl
aaa
inc
cmp
loopne
mov
clc
and
cmp
lds
push
add
pop
cmp
jae
mov
mov
int3
nop
jnp
filds
movsl
repnz
ds
lock
ret
ss
add
inc
fsubl
clc
loope
add
mov
je
inc
or
pop
in
add
subl
int3
out
fadds
mov
mov
mov
loopne
adc
wrmsr
out
inc
and
sbb
adc
notl
mov
push
adc
pop
xchg
xor
notb
out
cmp
add
int
sbb
icebp
adc
xor
sbb
inc
fcmovu
add
sbb
sbb
es
mov
roll
or
cmp
jb
pop
mov
les
push
fadds
fs
xchg
sbb
cmp
inc
or
ror
dec
add
xadd
enter
adc
lcall
push
add
arpl
jle
imul
jbe
push
repz
shr
sub
cli
dec
push
test
xorb
add
and
mov
jle
inc
cmpsl
inc
aam
hlt
xchg
dec
cwtl
enter
fdivrl
shlb
xor
in
stos
inc
rcl
add
push
push
aas
rcrl
or
add
adc
lret
hlt
sub
fdivs
lds
ja
mov
cli
push
cwtl
or
dec
ficoml
push
or
and
xchg
xor
fistpll
repnz
in
sti
add
adc
push
mov
into
mov
sub
mov
and
out
ja
jnp
mov
add
dec
mov
mov
ret
add
and
mov
aas
or
lock
sti
push
fxam
sub
int3
leave
int
mov
andl
add
pop
movsl
inc
add
pushf
mov
out
cmp
das
jmp
pusha
pop
aas
and
fimull
fimull
jns
fistps
loopne
mov
lods
or
mov
jnp
add
jno
xor
dec
sbb
or
push
or
js
push
add
jp
fbstp
or
push
or
js
inc
pop
pop
mov
add
add
xor
adcb
pop
mov
inc
add
cmc
mov
jb
subb
xchg
jo
fadds
lock
xor
clc
aas
fists
mov
cmp
shlb
inc
xor
add
fstps
cmp
lea
aas
cs
push
rorb
out
dec
push
es
in
cmp
or
hlt
mov
stos
add
add
push
sub
loopne
sbb
test
test
pop
lods
inc
sbb
movsb
mov
xchg
and
add
sbb
sarl
mov
out
flds
ds
test
inc
jb
out
into
add
movsl
push
in
push
loope
jge
and
cwtl
fildl
cmp
add
xchg
inc
popa
mov
popf
and
pushf
add
std
or
ss
lret
loope
add
dec
and
add
nop
rolb
notb
cmp
sub
and
xchg
aaa
add
cmpsl
xchg
dec
jo
in
hlt
push
scas
stos
add
mov
mov
adcb
fidivl
and
leave
mov
mov
fs
out
adc
xor
test
sbb
jno
xor
js
cmpsl
orl
add
mov
pop
jo
pop
cld
add
test
dec
sti
pop
inc
dec
pusha
mov
adc
repnz
rcll
inc
insl
imul
push
mov
or
loopne
add
mov
jnp
xor
das
mov
ret
arpl
add
adc
insb
mov
push
test
imul
je
sub
inc
add
orb
add
mov
roll
movntq
mov
and
sahf
and
add
sbb
lds
adc
xor
les
sarb
vmwrite
popf
repz
mov
or
xlat
je
cmp
push
add
inc
xchg
jnp
add
out
cmp
jecxz
pop
or
adc
shlb
idivl
mov
bound
mov
mov
push
add
out
add
adc
mov
std
push
push
cmp
hlt
pop
lods
das
pop
lret
or
ret
mov
popa
arpl
push
mov
fucomp
jmp
sarb
clc
lds
jecxz
mov
incb
repz
aaa
xor
xor
and
aas
mov
movsb
stos
incl
xor
mov
sbb
add
mov
pop
scas
mov
popa
nop
enter
dec
push
cld
fnsave
mov
insb
cs
jo
in
clc
mov
or
lods
pop
ficoml
sbb
cmp
pop
lahf
adc
adc
mov
push
pusha
adc
lods
cmp
xor
mov
mov
shll
mov
dec
jge
pop
mov
sbb
lds
xchg
das
jo
push
mov
push
jle
push
data16
rclb
stc
ljmp
cmp
jmp
aas
jl
dec
add
int3
fsubrp
cmc
stos
repz
inc
xor
daa
inc
loopne
or
jmp
int3
push
jmp
sahf
gs
insb
sbb
test
scas
fcoml
fucom
or
test
inc
mov
xor
stc
or
push
and
mov
cmp
add
xor
in
lea
jle
xor
lahf
xorl
add
jnp
cli
cs
push
arpl
out
loopne
sbb
jle
jl
push
shrl
mov
mov
fildl
cmp
inc
andb
cmp
lret
fwait
mov
addb
addr16
and
sbb
test
add
fs
shll
mov
add
push
sbb
jge
addb
mov
in
lods
add
or
mov
cmpsl
jnp
mov
out
add
cld
adc
jne
hlt
jle
push
add
jmp
test
mov
push
and
inc
outsl
idivb
mov
pop
xor
in
inc
mov
mov
loope
cmp
add
test
push
call
fstl
sahf
out
xor
xor
ds
xor
add
mov
mov
insb
add
addl
jne
ss
add
cmp
ja
inc
aas
mov
cltd
notb
es
pop
add
or
xor
popa
lcall
ror
xor
ss
jp
add
and
cld
add
repz
inc
call
lods
and
xchg
ss
adc
popa
stos
imull
test
les
mov
xchg
lcall
adc
mov
decl
add
jno
cs
or
sahf
pop
cld
xor
xchg
fmuls
pushf
das
mov
push
pusha
enter
add
in
cmc
es
mov
xorl
add
jecxz
dec
loope
outsl
adc
adcb
xlat
inc
add
cmp
add
jb
add
js
jbe
push
add
mov
cmp
push
mov
push
jge
jns,pn
xchg
out
cmpsb
push
lcall
inc
and
ja
xchg
and
or
ljmp
add
pushf
push
push
xlat
imul
cmp
adc
das
sbb
dec
pop
int
daa
sbb
bound
mov
clc
aas
or
out
push
or
pop
mov
mov
mov
sbb
stc
fwait
pushf
inc
sbb
pop
inc
shl
pop
imull
stos
jae
pusha
push
add
ja
add
rclb
fcompl
mov
pop
pop
andl
lret
stos
add
fsincos
mov
push
push
mov
xlat
lret
and
mov
idivb
shlb
xchg
pusha
les
out
mov
subb
dec
jae,pn
bound
dec
sub
add
sbb
mov
add
mov
mov
iret
sti
sub
leave
sar
and
xchg
dec
shl
sbb
ja
fadds
test
cld
or
push
cmp
add
push
insb
jno
rclb
sbb
rcl
inc
or
and
ja
jo
sbb
xor
sahf
add
test
dec
stc
cmp
dec
inc
add
enter
push
mov
outsl
hlt
mov
adc
jp
pop
movb
inc
not
mov
jle
fcompl
pop
xorb
out
dec
pushf
xchg
jmp
sbb
aam
cmc
in
xchg
xor
loop
pushf
ficoml
xchg
push
sub
jae
loopne
pop
repnz
and
rolb
lcall
aam
xchg
add
jbe
orb
orl
or
test
add
sbb
inc
inc
icebp
jne
add
js
push
jge
lods
cmp
iret
sbbb
and
add
cld
imul
add
sahf
shll
jns
add
and
les
mov
mov
lock
dec
xchg
add
dec
jo
movsl
and
jnp
mov
add
jno
add
movsl
push
loope
cmp
pop
pop
sbb
popa
inc
cmp
push
add
lds
stc
or
mov
add
lods
fistpll
in
add
push
je
inc
test
mov
mov
inc
mov
mov
sub
emms
adc
mov
mov
scas
add
jl
pop
or
filds
rclb
push
movsl
add
int
lahf
and
inc
inc
les
push
add
pop
mov
xchg
mov
enter
insb
add
rorb
add
lcall
stos
test
orb
je
mov
sarl
adc
out
xchg
das
jge
pusha
rorb
sbb
insl
clc
addb
ja
pushf
add
imul
nop
sbb
enter
pusha
daa
addl
xor
jbe
and
jg
inc
rorb
sarl
out
push
aas
leave
xor
aam
xchg
fs
xchg
mov
loopne
gs
test
jmp
dec
mov
repnz
fwait
add
cmp
mov
and
pop
and
pusha
add
popa
xor
ds
push
inc
cmp
adc
mov
imul
mov
dec
pushf
jnp
add
adc
ja
mov
pop
into
ljmp
pop
mov
test
shlb
fstps
es
add
arpl
je
movsb
and
add
xor
xor
or
das
rcll
add
and
fndisi(8087
push
sbb
xchg
and
aam
pushl
dec
mov
add
mov
enter
push
imul
add
loopne
push
mov
test
lcall
rolb
sub
inc
inc
lret
pop
or
faddl
push
push
scas
fimull
jmp
add
inc
xchg
rolb
jnp
movsb
mov
mov
and
mov
dec
xchg
pop
sbb
mov
push
fldl
cmp
dec
testl
xchg
mov
jo
mov
sub
mov
and
pushf
mov
jae
jne
add
pop
into
jbe
outsl
add
cltd
xchg
xor
insb
enter
out
add
push
lods
js
cmp
in
pop
adc
andb
inc
xchg
pop
or
push
in
lods
mov
pusha
aam
cs
je
in
fistpl
pop
add
sbb
movl
in
and
cmp
adc
daa
xchg
sarb
mov
in
loopne
mov
jmp
add
rcl
xor
mov
insl
lahf
sub
rorb
xchg
loop
inc
loope
mov
ss
orl
adc
test
rorb
pop
icebp
add
sbb
in
and
leave
mov
fwait
inc
push
cmpl
sub
scas
add
stc
push
sub
or
push
sbb
add
ficoms
sbbb
sbb
or
sbb
jg
fdivp
cmp
xor
sub
push
das
dec
mov
int
rclb
loop
and
ficompl
mov
subl
add
push
xchg
fwait
and
inc
xlat
ret
nop
mov
jbe
imul
orl
adcb
jns
mov
shr
jp
xor
fistpl
lret
loopne
cwtl
push
rorb
adc
cwtl
rclb
mov
rclb
icebp
jg
add
add
mov
push
test
inc
jae
test
add
int
cmp
inc
gs
sub
mov
cmp
add
sub
xor
add
inc
and
dec
fsts
add
jnp
aam
ss
xchg
movsb
retw
and
jle
into
stc
sub
add
int3
nop
pop
inc
inc
adcb
enter
nop
pop
dec
clc
mov
cmc
or
push
add
cltd
dec
or
cmpb
cmc
mov
imul
int
popa
add
je
icebp
or
xor
aaa
addr16
fnsave
testb
xchg
sbb
xchg
add
data16
mov
arpl
jl
loope
ret
shl
mov
andl
sbb
mov
sarl
adc
sbb
jmp
in
xor
add
inc
mov
sub
cltd
mov
stos
or
mov
xor
add
and
add
push
push
stos
ret
nop
rolb
paddb
popf
mov
xor
add
cmc
ds
scas
push
adc
or
lahf
xchg
mov
add
or
mov
jmp
roll
sbb
cmc
and
mov
xchg
add
into
test
sub
xor
jo
aaa
hlt
dec
loopne,pt
shlb
add
pop
shll
dec
in
mov
mov
adc
or
jl
int
int3
inc
xchg
sbb
push
pop
or
xor
adc
jecxz
lea
xchg
hlt
ja
or
push
dec
fidivl
push
pusha
or
xchg
ja
sub
xor
das
inc
dec
popf
imul
cmp
dec
in
lahf
xchg
outsb
dec
pop
sub
mov
adc
push
pushf
mov
jl
fstps
add
ret
repnz
roll
out
cmc
orb
mov
jmp
push
addr16
jns
test
adc
pop
or
mov
xchg
xor
and
pop
add
or
adc
adc
xor
ret
loope
add
sbb
mov
into
clc
push
push
xor
cmpsl
push
lret
loopne
call
iret
fnstcw
inc
ret
add
jae
pop
pop
ja
stc
cmp
mov
add
pushf
stos
pop
cwtl
add
mov
loopne
dec
scas
ss
adc
fildl
or
inc
dec
push
add
ja
sbb
add
pushf
mov
xchg
xchg
xlat
daa
scas
mov
cmp
xor
sbb
outsb
das
pusha
mov
mov
push
lock
stc
add
mov
xor
push
push
xor
dec
leave
mov
je
inc
lret
mov
sti
cmpb
stos
xchg
lods
sub
add
aas
inc
push
fcmovbe
add
fwait
enter
add
mov
repnz
scas
sbb
lods
lea
adc
out
add
adc
xor
mov
bound
imul
xor
cmpb
scas
adc
and
rolb
mov
and
add
in
mov
add
mov
add
jnp
sbb
mov
add
into
cmp
adc
pop
sbb
ret
jle
adc
sbb
fucomip
jae
pop
pop
sti
adc
jbe
ds
in
xorb
aas
jecxz
nop
add
mov
jmp
mov
jnp
pushf
in
outsl
inc
sub
pop
daa
mov
repz
mov
shlb
sbb
arpl
sub
stos
dec
jnp
sub
daa
xchg
loopne
pusha
incb
mov
imul
or
inc
push
shlb
jno
lock
cwtl
in
test
and
test
sarb
pop
lret
iret
mov
add
popa
push
jmp
ja
pusha
mov
add
push
pop
aad
in
call
adc
or
and
sub
addl
push
jecxz
subb
call
xor
add
daa
push
sub
das
add
mov
call
inc
test
subl
cmp
mov
xorb
mov
cltd
andb
lock
fiaddl
push
in
mov
sbb
test
out
xchg
jmp
sbb
sbbl
pop
imul
shrb
stos
mov
in
decb
jnp
add
loope
aam
cs
rcrl
pop
shll
int
inc
pusha
orl
lock
bound
push
pop
lret
pop
mov
mov
pop
sub
andb
add
xchg
add
xor
adc
call
pop
xchg
enter
and
repz
mov
fucomp
sub
sti
cmpb
stc
jne
arpl
cmp
jae
add
outsl
loop
add
pop
sbb
shll
ret
imul
push
add
fdivrs
dec
mov
aas
push
mov
nop
xor
lock
inc
push
fildll
jno
test
repnz
mov
add
xchg
daa
pusha
leave
mov
jno
dec
mov
pop
add
je
faddl
add
jge
mov
in
mov
add
leave
mov
jl
aas
fldcw
sub
loopne
mov
bound
jb
dec
adc
jge
sub
fisubrl
mov
add
add
add
mov
nop
push
mov
clc
pop
xor
fistps
fsts
clc
xchg
push
dec
shlb
gs
movsl
add
dec
cmp
push
mov
adc
les
inc
jo
scas
inc
add
or
cmpsl
mov
adc
shld
jmp
add
aas
jnp
adc
mov
add
xor
fmull
xor
add
std
mov
push
adc
mov
inc
sbb
popf
dec
push
mov
pop
sbb
ret
push
jmp
add
cmp
xor
je
dec
adc
adc
mov
sbb
mov
add
add
int3
nop
or
add
jnp
and
xor
push
pusha
add
jecxz
push
cmp
lret
jno
enter
in
or
es
inc
js
aam
je
xor
push
sub
pop
fstp
shlb
xor
stos
or
jb,pn
clc
add
or
imul
hlt
mov
aas
test
sub
sti
mov
add
fsubp
je
add
adc
pop
repz
imul
fmuls
je
add
aam
cld
inc
and
or
add
mov
test
xor
inc
es
dec
adc
or
icebp
add
out
push
add
fsubs
jp
fstpt
add
in
mov
inc
into
movl
pop
dec
inc
sbb
xchg
add
push
fadds
movq
pushf
fimuls
loop
and
imulb
add
mov
or
push
sub
jbe
sbb
sbb
jo
mov
ficomps
cmpl
add
jp
push
xchg
movsb
in
add
fstps
das
outsl
cwtl
fucomi
and
add
lods
and
mov
or
stos
enter
hlt
dec
adc
dec
movsb
pop
push
inc
xchg
push
add
loop
fstps
js
in
fdivrs
mov
add
popa
cld
and
push
sub
and
test
lods
lret
sbb
dec
mov
push
mov
mov
cwtl
adc
rorb
fiaddl
sbb
mov
cmpsl
jecxz
fisttpl
xlat
add
push
xchg
and
mull
fwait
jo
inc
xor
and
int
add
ret
rcrl
and
xchg
add
lds
or
pop
cmp
add
pusha
xor
lea
add
lds
push
mov
mulb
or
outsb
cmp
jbe
lahf
in
rorb
push
jmp
lret
scas
adc
dec
or
out
popa
cmpsb
add
sbb
call
jge
add
push
out
data16
push
add
divl
add
and
add
xor
xor
push
cltd
sti
shll
pop
add
push
pop
daa
negb
pusha
inc
dec
nop
add
orb
jo
adc
pop
adc
or
or
ljmp
xchg
mov
add
sub
inc
ss
add
mov
sbb
cmpsl
jmp
inc
fists
insb
mov
imul
mov
fisubrs
mov
jo
cmp
xchg
aam
filds
ret
jmp
aad
cli
add
out
dec
lea
pusha
outsb
bound
push
pop
mov
mov
pop
sub
cmp
or
imul
add
rcr
add
int3
mov
or
sub
cmp
sub
push
mov
pop
loopne
mov
repnz
cmpsl
pop
inc
adc
in
pop
outsb
xor
xlat
adc
js
xchg
add
adc
pop
add
cwtl
testl
js
xchg
xor
insl
add
jmp
jo
sti
add
subb
pusha
pop
add
push
pushf
fdivl
pop
and
add
cld
and
out
dec
add
dec
pop
mov
sahf
popf
add
mov
test
movsb
scas
jg
xchg
adc
pop
leave
mov
add
sub
adc
sbb
adcb
xchg
cmp
movsb
addb
filds
xchg
cwtl
aam
stc
shrb
mov
pushf
jnp
add
idivb
push
sahf
pop
inc
or
mov
mov
std
xor
icebp
add
fistl
sbb
mov
add
imul
add
xchg
or
push
add
cltd
xor
rcll
and
mov
add
fs
xor
add
mov
add
add
insl
push
mov
sbb
xchg
lods
and
pusha
call
cmp
adc
mov
out
xchg
pushl
out
movsl
mov
fdivrl
sub
mov
jle
icebp
adc
scas
out
jae
addr16
imul
mov
adc
movsl
sahf
jae
popf
add
inc
adcb
cmp
out
test
pop
push
push
pusha
jecxz
icebp
iret
cs
mov
sti
lret
aad
cmp
rorl
mov
lock
jge
rclb
inc
aam
testl
out
outsl
pop
push
lcall
sub
cmpsb
and
fsts
shll
sub
repz
fistl
add
cmp
sub
add
sub
bound
shlb
test
pop
pop
add
ljmp
sbb
jo
inc
pop
sbb
iret
pushf
adc
and
insb
std
out
inc
xor
add
pop
mov
insl
orb
ret
jnp
add
int3
sar
aam
shlb
xchg
and
jg
adc
mov
jl
jp
loope
xor
sbb
sbb
add
cs
jno
int3
mov
popa
imul
scas
push
lret
pop
daa
ficoms
pop
pop
lds
xchg
insb
add
fwait
add
mov
das
pop
push
cli
pop
outsl
in
add
cltd
daa
insl
out
cmp
sub
test
call
add
into
xchg
add
ds
xor
dec
adc
xor
out
ror
inc
dec
scas
pop
nop
and
test
cmp
in
mov
mov
cwtl
mov
push
mov
cmp
or
add
aam
lds
and
adc
imul
mov
fistl
or
sbb
data16
mov
test
sub
jecxz
cmp
data16
jle
pop
cmp
pop
pop
xchg
add
xchg
add
mov
mov
nop
rcrb
add
inc
sbb
lret
adc
pushf
out
das
pop
cmc
mov
faddl
add
and
leave
mov
gs
or
ret
push
mov
xchg
or
jb
fs
fidivrl
jo
dec
daa
sub
jbe
push
rolb
notl
push
lods
add
cli
mov
mov
cmp
jl
and
jmp
mov
dec
jne
add
adc
rcrl
push
add
jmp
cmp
adc
xor
repz
xor
pushf
lret
mov
ds
sbb
xor
daa
ds
dec
pop
mov
and
jge
add
adc
addr16
push
lock
data16
out
incl
push
insl
aaa
or
mov
mov
xchg
icebp
inc
pushf
xor
aad
sub
ds
orb
shll
jno
add
jg
loope
imul
dec
addr16
pusha
insb
mov
xchg
xor
add
pushf
mov
dec
int3
add
sahf
fistpll
adc
sbb
mov
pop
fcmovnbe
cmp
push
shlb
or
mov
ss
cmp
cmp
ja
pop
add
mov
aad
test
add
dec
xchg
pop
ficomps
sbb
add
dec
and
cmp
ret
push
inc
sbb
pop
add
dec
adc
add
sub
mov
xor
xor
sub
add
sbb
mov
inc
loopne
mov
fcompl
fcomi
xchg
out
aas
add
lahf
xchg
mov
lock
enter
testl
dec
add
loope
mov
lods
pop
test
fists
shlb
ljmp
sar
dec
push
or
imul
jg
dec
aas
nop
fnstcw
mov
dec
dec
test
add
jnp
test
adc
jo
pop
lahf
dec
pextrw
pop
fsubrs
stc
or
xchg
cmp
clc
das
add
xor
mov
popf
pusha
aad
push
das
imul
push
jae
ss
jbe
aaa
std
jno
mov
xchg
adc
popa
lea
mulb
sbb
or
out
inc
sarl
arpl
lcall
jo
icebp
test
and
cmp
adc
jo
pop
xor
movsl
sub
pop
cmpsl
sub
lods
dec
sbbb
movb
es
inc
mov
inc
mov
movsl
push
jnp
mov
push
frndint
fildl
push
imul
lcall
cli
push
popa
sbb
xchg
ja
add
push
xchg
mov
xchg
cmp
or
sbbb
lods
push
pop
sbb
push
adc
mov
and
cmc
pushf
pop
scas
mov
sub
lret
push
push
adc
push
into
mov
scas
lods
mov
add
or
lcall
add
xor
add
inc
fucom
add
icebp
add
add
mov
or
push
inc
mov
out
mov
sub
jns
aaa
cmp
lret
jns
lods
shl
ret
adc
xor
mov
push
dec
push
movsb
sbb
and
ficoms
adc
and
add
cmp
mov
mov
push
nop
jle
adc
dec
sbb
imul
jno
push
aas
shll
jae
fldenv
cwtl
dec
push
popf
mov
xchg
push
daa
add
mov
adc
mov
cmp
mov
aas
mov
xchg
aad
movsl
jecxz
daa
hlt
add
dec
stos
pusha
jle
in
lcall
frstor
cmc
rcl
mov
fdivs
call
cmc
push
xchg
stos
shll
lock
pushf
ficompl
movsl
push
mov
sub
or
movsb
add
cld
add
xor
sub
or
fwait
cmpsb
in
add
cltd
paddd
add
mov
clc
cmpsl
jno
mov
ss
push
loopne
push
or
dec
cmp
leave
rorb
ljmp
in
xchg
xchg
sub
data16
add
hlt
shll
inc
pop
adc
pushf
add
sbb
pop
fbld
mov
xchg
push
cmp
and
sub
pop
cmp
dec
sbb
loopne
add
sub
mov
adc
movsl
mov
into
pop
icebp
std
out
movl
pushf
mov
sub
cmp
xchg
addr16
inc
fldenv
gs
mov
fs
mov
sub
cmc
shlb
mov
or
je
mov
and
test
jb
scas
movsb
loop
xchg
dec
adcb
ffreep
adc
insl
xor
and
add
pop
stos
movsb
add
dec
mov
clc
jo
add
pop
push
orb
sub
sahf
into
adc
lock
xor
cmp
test
lea
pop
pop
push
xchg
sbb
mov
mov
lret
add
mov
add
mov
pop
stc
sub
xor
jg
ds
push
loope
iret
inc
sub
add
in
sub
call
cmp
add
loopne
fisttpll
ret
mov
out
imul
or
add
adc
call
adc
pop
push
mov
int
add
jp
arpl
mov
mov
cmp
mov
inc
mov
add
jae
inc
push
into
jnp
add
add
out
pop
or
add
inc
pop
add
xchg
fcmovnb
sbb
xchg
push
lods
mov
mov
fcoml
sti
and
inc
push
xor
add
aam
mov
mull
pop
fdivs
nop
lds
or
pop
leave
add
xchg
test
mov
inc
jbe
jne
add
sbb
sbb
dec
dec
inc
xor
lock
dec
xchg
bts
outsl
mov
sbb
jns
rcll
jne
or
mov
andl
pusha
popf
jae
add
ljmp
shr
pop
jnp
dec
xchg
mov
add
pop
std
ficompl
xor
mov
add
jl
cmpl
outsl
jno
cli
roll
jo,pn
cmpsl
sarb
cmpsb
mov
out
rclb
push
ret
adc
and
data16
movl
add
popf
out
pop
jbe
add
test
es
test
and
and
xchg
xor
in
mov
push
pop
out
sarb
inc
jnp
add
xchg
or
push
pushf
lods
jl
or
punpcklbw
out
aad
addr16
dec
pop
sub
imul
cmc
mov
add
add
adc
fisubl
loop
cld
cmp
cmp
inc
xchg
mov
orb
incl
and
sbb
aas
sub
ud2
push
lahf
inc
popf
mov
cwtl
add
icebp
ficomps
fwait
push
sbb
push
pop
aam
aaa
cld
aas
inc
sub
daa
dec
cmp
xlat
es
adc
add
fisubl
cs
and
jmp
add
push
addr16
jge
fstp
outsb
jle
cmc
daa
subb
xor
add
xchg
xor
rol
sar
push
ja
lea
lret
adc
leave
adc
sbb
add
fisubl
xchg
imul
and
iret
rcrb
les
pop
mov
pop
icebp
movsb
mov
inc
adc
das
aas
andb
cmp
int
and
outsl
or
cmp
addb
fists
sbb
adc
and
push
call
pop
mov
dec
push
popa
push
jnp
out
add
jae
xchg
insl
fs
jne
xor
add
ja
test
mov
and
jbe
jae
mov
imul
out
pushf
sbb
dec
sbb
flds
or
or
add
nop
mov
dec
add
bound
xchg
ds
ljmp
or
mov
fdivs
mov
add
test
xor
lret
adc
dec
sub
adc
xorb
push
push
daa
cwtl
or
push
stc
and
push
inc
push
or
mov
cmp
or
cmpsl
pop
add
imul
cs
in
adc
mov
sbb
sub
inc
mov
mov
mov
sarl
mov
lock
mov
cmpsb
add
push
pop
nop
daa
into
adc
mov
add
sbb
ret
and
shlb
xchg
add
mov
mov
add
or
ret
or
dec
sub
or
in
les
fmul
hlt
inc
sbb
jl
jecxz
int3
inc
orb
mov
mov
shrb
and
lret
add
dec
push
dec
xor
testb
push
xor
call
push
mov
xor
xor
clc
jo
add
loop
inc
faddl
xchg
or
sub
xlat
push
xor
xor
and
and
add
push
int
push
sub
add
adc
fisttpll
or
sti
mov
xor
ret
and
out
xlat
mov
jo
gs
push
fistl
mov
pop
cmp
inc
lea
sbb
inc
add
inc
dec
in
daa
jnp
sub
push
lods
fcmovnb
adc
push
test
inc
seto
mov
int
fdecstp
pop
test
mulb
add
jbe
sbb
nop
add
shlb
nop
aam
movsl
iret
int
sub
test
cmp
fwait
loope
or
inc
popa
or
cmp
mov
std
outsl
mov
dec
jae
fiadds
adc
lret
in
imul
je
dec
mov
jns
sahf
call
or
fs
xchg
jmp
pop
int3
in
aaa
pop
popa
mov
sbb
rclb
add
add
popf
jecxz
lock
iret
dec
push
fiaddl
cmp
out
in
subl
push
or
lds
test
inc
add
and
inc
jne
arpl
and
lret
in
out
xlat
ja
mov
inc
dec
xchg
push
cmp
les
push
not
shll
add
std
xor
les
mov
add
mov
xor
sahf
xchg
add
sbb
and
push
sbb
pop
out
ret
stos
or
lock
sub
es
ret
cs
add
lods
sbb
rcr
add
int
mov
push
fs
dec
add
fsubl
adc
and
cmp
mov
dec
cmc
or
and
sbb
inc
push
or
push
push
dec
rorb
jmp
ljmp
xlat
xor
fnstcw
pop
and
pop
leave
sbb
adc
sbb
mov
sti
lahf
add
cltd
push
push
rorb
daa
adc
int3
sub
fwait
outsl
push
xorl
insb
inc
mov
push
lds
and
and
xchg
add
hlt
daa
aaa
xor
lret
iret
loopne,pt
mov
aas
mov
std
imul
adc
stos
dec
push
add
leave
xchg
and
pop
outsb
outsl
push
xor
icebp
mov
xor
in
dec
mov
and
scas
cwtl
pop
mov
adc
js
dec
sub
xor
or
roll
xchg
sbb
mov
pop
adcl
and
push
call
arpl
adcb
pop
push
and
add
pop
push
push
mov
add
leave
dec
and
inc
jae
xorb
inc
xchg
div
call
jne
add
test
mov
jno
cmc
or
inc
inc
mov
pop
lods
loopne
addl
and
pop
out
and
add
roll
pushf
add
or
adcb
movsb
add
arpl
pop
add
scas
inc
pusha
or
fwait
add
in
out
int3
pop
pop
mov
jle
push
and
jmp
data16
enter
pusha
fmuls
cwtl
in
add
out
jl
add
loopne
adc
rcrl
test
dec
popa
mov
out
and
mov
xlat
sub
jmp
outsl
in
out
pop
push
xchg
cwtl
repnz
mov
in
icebp
jp
bswap
hlt
clc
ret
test
mov
cli
dec
inc
stos
sbb
xchg
cmp
push
gs
inc
enter
mov
hlt
jbe
repnz
xor
je
clc
ja
mov
pop
cmpsl
dec
add
or
test
cltd
adcb
enter
jo
jno
or
rolb
sbb
imul
inc
dec
add
fldt
pop
jle
xor
add
lcall
push
xchg
inc
push
or
cwtl
adc
in
out
pop
lcall
adc
mov
xlat
cmp
xchg
mov
pop
leave
dec
sub
int3
or
mov
inc
ret
sahf
pop
add
mov
enter
cld
add
ds
into
sbb
movups
nop
adcl
incl
sbb
inc
pop
push
pop
push
dec
xchg
add
jno
bnd
pusha
fildl
add
dec
jecxz
or
jo
js
sbb
add
pop
testb
fnstenv
dec
fs
sub
inc
inc
adc
jl
sub
jmp
lahf
xor
mov
pop
pusha
dec
leave
mov
daa
subb
loop
dec
sub
push
lcall
jb
adc
sub
daa
es
inc
xchg
popf
rclb
fsub
lods
movsb
dec
ss
pop
jae
add
xchg
or
enter
pop
jno
fdivp
js
fstl
mov
add
movsb
sbb
jnp
or
pop
inc
mov
aas
lea
out
sbb
add
mov
fsubrs
pop
inc
andnps
es
roll
jne
sar
add
mov
xchg
gs
mov
lret
out
mov
loop
ficomps
cwtl
add
std
jo
faddl
add
ja
cmp
add
and
sarb
add
icebp
je
dec
dec
sbb
xchg
mov
jge
iret
xor
jp
push
mov
mov
xchg
mov
xchg
add
ss
icebp
push
pop
xor
push
mov
lods
lahf
mov
jno
adcl
push
xchg
push
jo
add
ljmp
mov
push
push
mul
hlt
mov
xchg
or
pusha
adc
or
mov
pop
mov
dec
xor
pusha
nop
insl
outsb
jbe
add
and
dec
fstl
xor
les
xorb
sbb
mov
addl
mov
cli
ret
stos
push
mov
sbb
lcall
pop
xorl
jnp
jo
add
dec
adc
pop
jno
mov
add
push
add
test
and
or
add
mov
sbb
sbb
or
rorb
add
dec
dec
cmp
jle
or
mov
dec
add
cmpl
je
jne
xor
jmp
or
push
mov
push
push
push
jge
push
add
jmp
ds
je
pop
adc
in
in
xchg
add
jmp
pop
filds
ds
push
and
pop
push
add
jb
fidivrl
stos
in
add
loop
es
adc
sbb
xor
push
push
call
pop
ret
enter
jge
addl
ret
loope
mov
mov
push
push
xchg
sub
jns
inc
sbb
push
ret
out
nop
arpl
aas
mov
pop
dec
mov
outsl
mov
insb
insb
cmp
push
mov
pop
ret
pop
out
and
add
ret
and
add
sub
push
icebp
cmc
push
aas
loopne
pusha
or
nop
add
loope
movsl
and
inc
add
xor
popf
std
dec
pop
dec
or
movsl
or
sbb
and
jmp
push
add
nop
out
out
cmp
and
push
in
ljmp
mov
push
add
adc
dec
sbb
insb
add
imul
loope
add
mov
ss
call
cli
mov
sbb
add
mov
add
or
addl
call
jl
push
out
add
cmp
or
adc
iret
call
lahf
sarl
add
push
adc
cmp
and
mov
cltd
and
add
rolb
sbb
enter
int
dec
adc
add
inc
test
or
xor
pop
gs
cmpl
pop
ds
xorl
bound
adc
and
jnp
sub
mov
sub
jle
add
or
mov
or
and
dec
mov
fcom
in
mov
adc
fstpl
loope
adc
data16
paddusb
out
stos
enter
fs
pop
xor
pusha
jo
out
filds
xorb
xor
cmpsl
lret
jge
icebp
dec
push
lods
in
outsl
add
add
neg
or
mov
add
into
repz
call
aad
inc
mov
add
sbb
sbb
testb
in
inc
add
pusha
adc
mov
adc
pop
lods
or
adc
lock
mov
arpl
and
push
push
pop
pushf
insl
cmp
scas
ficoml
aad
cli
cld
or
jnp
out
roll
fidivs
add
insb
add
cwtl
cmp
int
xor
push
add
fwait
fs
in
push
inc
les
addl
setge
insl
dec
lock
add
push
in
add
or
insb
jae
adc
xor
push
lahf
jecxz
jmp
and
mov
adc
sub
ret
mov
lahf
loopne
xchg
add
add
sti
adc
adc
sbb
imul
lods
jae
or
icebp
add
outsl
xchg
adcb
fadds
repnz
decb
sbb
pop
adc
xchg
xchg
clc
jp
pop
imul
sub
rorb
call
cld
jae
loopne
adc
js
xor
inc
adc
loopne
cwtl
test
xor
addr16
lcall
xchg
push
add
dec
into
dec
sub
pop
nop
ds
jecxz
or
pop
jnp
adc
add
and
lock
adc
push
and
or
jne
or
jg
sub
gs
mov
hlt
dec
sub
ficompl
xor
inc
dec
clc
out
cli
loope
mov
cmc
pop
adc
ss
movsl
add
jg
mov
fcomip
inc
jge
outsb
push
mov
shl
insl
push
pop
jmp
jl
cltd
shl
add
add
loop
adcb
and
mov
add
mov
std
je
out
add
lret
mov
push
stos
add
subl
and
lock
add
or
verw
imul
or
out
push
nop
add
mov
dec
stos
jmp
xorb
dec
outsb
ficomps
mov
lea
pop
mov
jl
mov
pop
jne
jbe
divps
mov
bnd
jmp
popa
push
icebp
cmp
cmc
adc
jns
or
movsb
es
mov
mov
add
int
in
sub
fsubrl
add
push
mov
iret
add
shll
sahf
jmp
add
push
dec
rclb
jl
sub
dec
ja
ss
inc
lock
add
stos
inc
or
loope
fs
or
mov
mov
and
dec
and
test
ds
and
iret
lret
cmp
jnp
loopne
push
cmp
add
xor
clc
jne
add
into
out
add
push
negb
gs
adc
xor
sub
inc
test
addr16
int3
ja
push
imul
mov
xchg
push
xchg
or
push
jge
add
inc
mov
xlat
lahf
xchg
jnp
cmp
pop
jae
idivl
xchg
fiaddl
stc
outsl
in
loop
dec
cwtl
add
mov
rolb
popa
or
sub
push
in
cmpsb
pusha
loope
loopne
sub
cmpsl
inc
add
mov
xor
imul
jge
xchg
dec
adc
add
pop
xor
cmp
fwait
sub
mov
xchg
fisttpl
add
lret
js
mov
fisttps
inc
mov
das
outsl
jb
adc
and
push
scas
ret
add
movb
jae
jnp
push
pop
inc
mov
inc
cmp
xchg
add
mov
incb
push
push
movsl
dec
adc
shl
dec
xor
lods
inc
cli
mov
add
je
and
lret
in
add
dec
or
rorl
cmp
push
sbb
loopne
add
imul
add
fistl
rclb
add
aaa
int3
pushf
add
push
cmpsb
add
daa
shrb
out
xlat
les
or
add
mov
push
je
mov
andb
dec
sbb
popf
sub
cmp
xabort
adc
add
push
xchg
sub
sahf
push
jo
sbb
push
mov
je
cmp
add
jg
add
lock
add
adcl
dec
dec
inc
ds
sbb
xchg
jg
lret
or
push
mov
xor
xchg
std
aad
push
push
push
sbb
push
add
out
add
fmuls
dec
out
les
xchg
sub
ss
mov
ljmp
jno
sub
add
cmc
cli
push
jle
jns
js
hlt
add
fdivrs
enter
cmp
xor
pop
add
adc
xor
shlb
and
mov
mov
gs
add
popf
inc
jnp
xchg
jmp
xchg
xor
push
add
mov
inc
repnz
or
mov
mov
or
sbb
add
cmp
cltd
shrb
mov
push
xchg
mov
adc
add
je
in
mov
pop
sub
fnstcw
mov
scas
cmp
cmc
fmull
dec
mov
mov
push
pop
or
sub
or
push
int3
dec
add
cmpl
pop
jne
dec
movsl
pop
xchg
dec
inc
sub
dec
add
sub
cmp
add
jle
orl
cltd
push
pop
mov
lret
cmp
mov
cmp
pop
push
and
sarl
push
loop
xchg
in
jae
push
push
sub
push
inc
das
adc
jge
sbb
int3
sbb
addr16
repz
fyl2xp1
fsubrs
add
add
call
insb
xchg
mov
sbb
adc
xor
inc
or
js
hlt
jmp
add
cld
sti
push
lock
adc
in
add
cmpsb
sbb
fistpll
pop
out
pop
jecxz
scas
push
adc
push
out
dec
add
fdivp
jle
xor
push
mov
add
aas
cmp
sbb
ljmp
lock
stos
add
push
inc
cmpsl
add
sar
jbe
pop
xor
icebp
or
repnz
inc
cwtl
jo
add
popf
fs
outsb
mov
push
mov
repz
jno
jbe
addr16
pop
xchg
mov
xchg
add
sbb
jecxz
fadds
or
add
pop
repz
xchg
sbb
adc
dec
add
dec
divb
lods
lahf
into
xchg
mov
flds
pop
add
ss
test
loopne
mov
pop
shrl
das
and
pusha
fldt
adc
rclb
inc
andl
xchg
inc
dec
lods
adc
paddusb
pop
add
jbe
push
push
test
mov
inc
rolb
shl
sarl
aas
jmp
outsl
and
add
int3
and
loopne
out
and
ror
adc
pusha
sbb
imull
rclb
insb
das
or
add
xlat
adc
loop
dec
push
adc
jge
addl
mov
fildl
xchg
fs
sub
lcall
lds
push
clc
xor
outsb
pop
mov
clc
dec
mov
shlb
push
mov
add
xchg
fcmovu
add
in
mov
call
clc
inc
hlt
push
add
mov
mov
popa
es
jecxz
and
das
or
packssdw
in
js
mov
les
pop
out
je
stc
cwtl
or
hlt
xchg
subps
and
inc
push
add
es
push
xchg
mov
int
in
inc
bound
cmp
mov
push
fadds
int
nop
xor
pop
xor
add
test
mov
repz
add
add
push
out
add
fdivl
and
roll
cmpsl
or
ret
ja
add
into
sub
xchg
out
xor
decb
sarl
in
cmc
add
inc
gs
mov
push
ja
int
cli
add
out
mov
xchg
out
add
jne
add
jmp
sub
add
fsubrl
xor
mov
dec
addr16
sbb
aam
mov
xor
xorb
push
and
add
mov
xchg
add
sub
sbb
pop
jnp
cmpsb
dec
or
stos
jne
mov
add
push
loop
inc
popf
cli
addb
mov
mov
cltd
subl
inc
inc
js
adc
adc
call
mov
out
std
movl
subb
es
mov
outsl
cmp
adc
add
enter
pop
lds
adc
aaa
xchg
test
in
dec
pop
js
mov
jnp
mov
jno
enter
xchg
imul
shrb
cs
adc
sti
and
fstl
shrb
add
pop
in
inc
pusha
pop
lret
fcoml
push
add
push
nop
pusha
insb
test
call
adc
jbe
aas
data16
mov
push
dec
pusha
lea
orb
add
push
rcrb
dec
popl
loop
gs
push
mov
sbb
pop
fs
push
fcomi
mov
movsb
lret
rcll
scas
gs
xor
inc
stc
mov
lds
push
add
mov
outsl
pop
dec
roll
out
nop
fs
les
arpl
insb
loopne
add
or
outsb
insl
in
adcl
das
jecxz
sub
inc
jg
sub
movsl
add
ss
and
adc
cmp
or
push
add
add
hlt
jnp
lcall
in
xlat
or
adc
xchg
xor
pop
out
push
push
fildl
jo
mov
and
sti
in
sub
add
sub
jg
orb
in
lcall
es
push
add
and
jle
stos
push
aam
out
jns
add
xor
push
adc
negb
sbbl
cmp
enter
push
pop
mov
ss
add
fs
add
xchg
jmp
add
repz
sbb
aam
add
fildl
or
push
loope
inc
insl
out
jmp
and
test
adc
leave
jnp
enter
pop
fiaddl
lods
jge
xlat
test
js
lea
fldcw
fsubrl
adc
or
sub
cwtl
ret
add
push
flds
lods
mov
push
add
cmc
jl
loopne
pop
jb
call
fs
outsl
cmp
adc
pop
sbb
mov
add
xor
add
inc
cmp
and
pop
pop
add
imul
fidivrs
repnz
cli
push
mov
insb
or
int
push
cmp
rsqrtps
or
push
filds
jnp
ret
mov
lods
add
outsl
dec
mov
inc
mov
or
xlat
fadds
mov
aas
and
jae
inc
cmp
jo
pop
add
outsb
xchg
pop
jns
mov
sar
or
lret
inc
mov
and
outsl
cwtl
fcmove
sti
mov
adc
and
sbb
or
inc
push
pop
push
jae
in
push
loopne
out
xor
jns
add
pop
and
cmpl
sbb
cld
mov
push
jb
xor
insb
es
xlat
sarb
hlt
int
arpl
or
mov
mov
scas
jl
jo
add
pop
aam
nop
push
loope
inc
pusha
jle
mov
mov
in
xor
call
out
inc
cmp
xor
jge
push
pop
aad
cmp
add
jle
add
std
ss
pop
lock
enter
mov
insb
stc
cld
es
mov
jbe
inc
adc
push
repz
mov
pop
or
stc
iret
jbe
add
adc
popa
add
inc
mov
cmp
xor
mov
jmp
sbb
in
sub
add
add
adc
sbb
xchg
jo
sub
push
sbb
jnp
addl
in
push
fsubl
jmp
mov
mov
in
ret
jnp
out
sbb
inc
imul
add
mov
mov
add
js
mov
dec
or
cmc
arpl
mov
movsb
cld
inc
add
sbb
jo
mov
mov
aas
or
js
loopne
jp
test
shl
lods
add
outsl
loopne
adc
nop
adc
pushf
add
test
sbbl
popa
dec
add
add
das
shll
cmpsb
shrd
outsl
xchg
add
lods
jmp
dec
jecxz
je
aaa
push
cmpsl
ljmp
mov
adc
mov
lock
loopne
pop
sub
push
xor
fdivrp
mov
mov
add
fisubrl
mov
in
xchg
mov
add
rolb
jmp
jnp
das
cmpsb
lods
mov
cli
mov
popa
push
pop
or
mov
fidivrs
jo
push
sub
mov
cmp
ljmp
dec
sub
cld
pop
add
jle
pop
nop
xorb
test
movsl
dec
shlb
or
into
xchg
nop
leave
push
add
cmp
call
inc
xchg
inc
push
mov
clc
sbb
push
xor
mov
push
fisttpll
or
add
mov
movsb
ss
jnp
ja
mov
and
pop
out
or
jnp
popf
pop
pop
aas
mov
icebp
fwait
ret
sub
nop
add
mov
add
add
aas
add
mov
cwtl
outsl
incl
int
fisttpll
adcb
adc
adc
add
fmuls
cmp
andb
jnp
mov
movsb
lods
xchg
ret
stc
das
sbb
cld
adc
jecxz
pop
push
pop
adcb
rol
out
shlb
and
fimull
or
and
push
jnp
add
adc
jns
dec
push
sbb
test
xor
popl
inc
xchg
dec
stos
and
jae
mov
xor
dec
jg
jns
popa
fs
sub
aad
add
mov
xor
push
les
sbb
daa
push
fsts
mov
fiadds
leave
lret
mov
pop
cmp
sbb
out
fldcw
and
out
pop
dec
popa
movsb
mov
xchg
push
adc
and
inc
lods
add
fwait
push
rorb
add
mov
in
cmp
sbb
insb
mov
test
rcl
ljmp
inc
mov
ret
adc
pop
sarl
add
add
mov
or
sbb
mov
push
fimuls
push
xchg
jae
pusha
aad
xchg
push
push
add
push
mov
daa
in
xchg
and
dec
add
xchg
bound
nop
mov
inc
push
adc
add
mov
popa
mov
fdiv
jge
repz
loop
mov
sti
push
inc
xchg
ucomiss
cmpsb
jmp
fwait
xlat
or
in
pusha
movsl
adc
pop
and
ret
getsec
rorb
adc
push
iret
add
hlt
in
dec
or
out
xchg
push
std
sbb
into
fs
and
add
or
xlat
inc
mov
int
test
hlt
adc
pop
bswap
pop
push
enter
inc
cltd
cmp
jb
ja
pop
nop
add
pop
add
lret
out
dec
add
ss
pop
jmp
xor
shll
and
pusha
rcrb
lahf
xchg
push
and
jle
or
push
cwtl
cmc
sbb
jne
push
out
cs
clc
add
cmp
mov
adc
daa
push
add
inc
jge
mov
fbstp
pop
jno
xor
repnz
sub
ja
add
mov
xchg
dec
add
lods
jae
es
mov
mov
hlt
and
ret
sbb
add
dec
pop
add
push
test
lahf
sub
inc
mov
add
jge
in
cwtl
jp
popf
add
mov
jae
add
or
add
cs
icebp
push
sarb
jne
mov
call
test
mov
sti
pop
xchg
sarb
lcallw
stos
sub
cltd
xor
sar
or
push
in
xchg
pop
jge
mov
pop
clc
mov
jle
xlat
jo
cmp
jae
in
pop
adc
push
aad
add
loopne
jnp
jp
test
xlat
jmp
leave
cwtl
add
out
xchg
xor
arpl
and
pop
clc
cmpl
pop
or
adc
outsl
int3
pop
add
cs
push
push
shlb
xchg
insl
add
push
nop
ret
and
adc
outsb
pop
pop
push
add
cmp
add
pop
mov
nop
xchg
mov
mov
fists
aas
dec
daa
dec
int3
add
repz
test
mov
icebp
cli
mov
xor
mov
add
test
adc
leave
xchg
sahf
add
subl
sbb
mov
es
cwtl
mov
orl
bound
iret
mov
cli
cmp
aad
mov
add
or
adc
mov
inc
scas
cmp
stc
xchg
xor
mov
mov
sbb
loopne
addl
sbb
subb
dec
test
shlb
push
inc
pop
test
mov
add
fiaddl
inc
xor
mov
pop
testb
cmp
adc
test
mov
mov
stos
pop
adc
dec
pop
adcb
movsl
idivb
fcoms
test
mov
inc
ret
add
xor
sbb
in
shlb
inc
xchg
push
add
icebp
aad
add
push
fadd
dec
rclb
pop
adc
addr16
fcoml
xor
add
and
push
pop
testl
outsl
addr16
in
testb
fcompl
sub
lea
add
mov
or
js
push
fdiv
add
out
mov
sti
xlat
aam
jmp
inc
sarb
add
lcall
pop
ss
or
mov
add
les
pushw
jg
ret
add
scas
xchg
fadds
mov
cmpsl
inc
push
negb
add
dec
aaa
jno
stos
fidivl
loope
jne
add
xchg
hlt
leave
stos
aas
outsb
adc
out
ljmp
xor
mov
cmp
xor
add
iret
xchg
pushf
adcl
or
imul
jle
sarb
xchg
dec
add
ja
xchg
cs
add
gs
mov
arpl
repz
popa
test
pop
popl
mov
int
jge
add
inc
mov
scas
aad
je
enter
lahf
in
lret
out
push
loopne
add
les
push
add
shl
daa
fistpl
jp
add
pop
rcr
nop
in
pop
cmp
arpl
add
insb
mov
push
vpsubsw
cltd
mov
jg
jp
add
mov
imul
popa
and
inc
in
sbb
add
movsl
mov
jo
mov
push
jg
mov
out
sti
and
sbb
pop
cli
add
inc
xor
es
mov
in
add
imul
pusha
add
add
inc
push
add
dec
push
mov
add
sar
inc
test
mov
fs
or
sub
pop
insb
and
ret
fstp
ror
aam
dec
xor
loope
cmp
in
push
mov
add
or
test
add
add
ljmp
sbb
mov
fisubrl
pop
or
cmp
les
cltd
pop
popf
cmp
inc
pop
jge
add
add
iret
shlb
sub
ret
adc
add
push
cmpl
pop
add
sbb
cs
add
ljmp
jae
add
mov
xchg
addb
mov
jnp
addr16
or
loop
andb
cli
mov
pop
mov
sbb
jbe
cltd
dec
sbb
inc
arpl
lret
xor
push
add
mov
mov
repnz
xor
push
aam
cmpsb
xor
mov
mov
shlb
push
sub
mov
cmp
or
sub
inc
mov
rcrb
jge
push
add
cli
xchg
pop
cmp
xor
or
addl
flds
out
mov
xor
hlt
data16
adc
mov
inc
rorb
or
andl
iret
pop
lods
les
mov
lock
in
fistl
incl
sub
lds
jg
xorb
sub
test
mov
pop
add
pushf
aad
add
into
insl
cwtl
add
pop
sbb
xchg
test
pusha
sub
pop
pop
lds
add
push
jp
lods
test
inc
cld
push
test
or
sbb
add
cwtl
jecxz
push
pop
jl
rcrb
and
mov
push
out
adc
insb
cmc
push
loopne
and
mov
xchg
ljmp
xorb
lret
pause
leave
add
je
testl
push
pop
fildll
pop
mov
push
in
sbb
mov
add
sub
sub
cld
call
cmp
jae
ss
or
pusha
dec
mov
pop
rcl
adcb
lea
ficomps
ud0
adc
xor
xlat
lock
pop
push
inc
stos
and
jne
test
jg
out
pop
outsl
inc
stos
cld
repz
and
xchg
mov
test
das
test
push
and
or
push
outsl
pop
and
das
sbb
cmp
push
ja
xor
cmp
dec
add
adc
inc
push
add
dec
cld
cli
add
ss
mov
sbb
mulb
push
cmp
inc
popa
mov
pusha
jae
into
add
adc
stos
das
lock
lahf
inc
mov
shlb
cld
dec
cwtl
inc
add
lock
jne
int3
mov
xor
ret
xor
xchg
insb
cld
cmp
aam
push
add
test
mov
xor
nop
or
and
cmp
pop
fidivl
xorb
outsb
sbb
pusha
int
shll
and
test
pusha
pusha
aas
mov
enter
aam
pop
jnp
lock
push
fwait
cmp
xor
inc
mov
es
cwtl
out
test
nop
sbb
lret
sbb
and
xadd
mov
add
inc
mov
push
adc
out
xchg
popa
je
adc
ret
mov
out
data16
jne
pusha
xor
add
shlb
dec
cmpsl
out
add
jns
jge
push
loopne
js,pt
xor
adc
adc
andb
leave
shrl
sbb
jle
push
gs
sbb
ret
in
jns
sbb
push
icebp
ss
lret
sbb
jge
xchg
jbe
pusha
out
or
test
pusha
dec
and
xor
xchg
in
stos
addl
push
rcll
push
pop
or
sbb
outsl
imul
adc
pop
daa
mov
mov
adc
dec
add
add
cmp
inc
xchg
push
add
fs
sbb
bound
cwtl
cwtl
js
pusha
imul
mov
dec
call
xchg
xor
add
jo
adc
call
sahf
bound
add
sub
out
jns
jle
gs
sbb
addr16
stos
mov
test
jg
add
lods
push
lret
pop
and
out
sub
int
cmpsb
xchg
out
lret
jo
pop
add
movsb
mov
dec
loope
xchg
and
rol
rcrb
aad
lds
sbb
dec
add
lock
add
ja
xor
cmp
loop
xor
pop
add
mov
or
add
repnz
and
mov
in
add
xchg
push
cmp
fs
fnstenv
xor
push
out
andb
and
test
enter
lock
xor
sbb
add
xchg
insl
sub
fstps
sarb
ret
mov
ret
or
xchg
into
xor
pushf
pusha
insb
jo
pop
shlb
add
ret
cmp
xchg
gs
mov
repnz
mov
jb
xchg
pop
enter
test
test
js
add
sub
xlat
add
mov
xchg
cs
inc
lahf
add
cmp
mov
add
rcrl
cmp
mov
jo
lcall
mov
push
sbb
adc
sub
movsl
shrb
movsb
jmp
cmpsb
mov
pop
cmp
imul
outsl
and
mov
mov
xchg
rclb
inc
mov
sub
jge
add
out
cmpb
xor
mov
pop
loope
push
mov
das
nop
js
or
adcb
rcrb
test
cmpsl
mov
pop
out
lea
cmpl
int3
push
aaa
mov
xor
jl
jg
ds
add
pop
in
popa
xor
add
notl
mov
shl
cmp
xor
stc
mov
adc
jne
add
ret
pop
cmp
push
incl
xchg
movsb
pusha
sbbl
outsb
lods
nop
pusha
mov
mov
scas
ljmp
loopne
lds
jmp
bound
cld
or
or
mov
push
pop
push
hlt
loopne
jns
mov
xor
mov
aas
add
sahf
inc
leave
push
cs
data16
je
cmpsl
jmp
pusha
and
add
xchg
flds
mov
sub
outsb
mov
jb
add
push
pop
push
or
and
sub
aaa
push
test
roll
jno
mov
test
and
push
add
xchg
test
add
mov
adc
in
pop
hlt
add
xchg
gs
fbld
lahf
mov
xchg
sbb
add
testl
cwtl
push
or
repnz
outsl
mov
daa
or
inc
ss
jp
cmp
push
add
out
mov
jns
hlt
add
out
sub
push
or
fisubl
lcall
jecxz
add
cld
rclb
add
loopne
ror
lcall
ss
sbb
jne
mov
add
ds
lea
mov
pop
shll
add
orb
data16
add
lock
lds
sub
push
sub
cmp
adc
orl
mov
adc
xlat
sbb
lds
addb
mov
xchg
sub
mov
and
sbb
mov
add
sub
enter
pop
dec
xchg
fildl
xchg
sarl
aad
cmp
sti
mov
and
movaps
iret
daa
cmp
insl
mov
add
sbb
pop
movb
test
in
mov
sbb
pop
xchg
jae
jle
jge
lcall
and
mov
mov
sub
push
jecxz
jne
les
adc
add
pop
imul
sbb
push
push
or
inc
mov
pop
add
cmp
rcrb
out
pop
add
or
lret
stos
add
inc
rolb
repz
or
mov
add
and
sbb
shl
pop
mov
dec
pop
out
jbe
in
pushf
jp
add
imul
cmp
dec
push
mov
jl
inc
xor
or
push
ror
repnz
daa
imul
sti
pop
cmpsb
and
push
or
gs
cwtl
add
je
into
add
stc
enter
mov
mov
jmp
inc
int3
xchg
jne
js
cld
adc
adc
outsl
faddl
dec
add
xchg
lock
popa
dec
jns
sub
add
roll
mov
pushf
xchg
incb
add
pop
lret
ja
sbb
and
add
jbe
repz
jno
rolb
push
sub
xchg
xchg
pop
mov
push
jecxz
cmovne
mov
insb
loopne
adc
in
sub
add
insb
xor
add
daa
pop
aaa
mov
add
or
into
mov
dec
test
xor
dec
and
cmc
sbb
adc
push
mov
or
inc
jp
ja
or
dec
iret
add
cmpsb
cmp
push
or
leave
stc
ljmp
mov
sub
cmpsb
dec
orb
lea
je
jbe
jle
jno
cmp
cmp
les
dec
mov
mov
pop
insb
loop
sub
aaa
jno
and
pop
cmpsb
push
dec
mov
mov
add
out
pushw
popa
mov
pop
xchg
pop
inc
pop
fiaddl
xchg
dec
push
pop
push
sarb
pop
cmpsl
push
cmpb
mov
shl
and
or
adc
mov
and
or
add
mov
jne
ds
mov
mov
int3
mov
add
loop
lret
in
add
add
das
addl
add
mov
add
cwtl
ret
add
cmpsl
test
pop
out
aam
into
xchg
sbb
shll
testb
inc
sbb
and
or
loop
scas
fcomps
add
lret
icebp
js
xchg
aaa
add
std
arpl
addb
lahf
push
pop
jno
shlb
xchg
xchg
clc
inc
add
subl
cs
pop
and
sub
or
loope
fcompl
xor
lock
cmp
rorb
movsb
leave
mov
jge
jo
add
cmpsb
std
les
outsb
sbb
in
inc
movsl
scas
jo
fwait
loopne
push
rolb
fsubl
je
push
add
rcll
daa
test
jns
add
lahf
sbb
ret
and
popa
ret
dec
add
sbb
add
push
and
jge
pop
lcall
pop
aam
or
pushf
fdivr
pop
pop
xchg
add
push
add
popf
jmp
add
inc
xor
push
into
and
xor
push
sbb
pop
scas
and
addr16
call
lock
ljmp
pop
in
jae,pt
lea
dec
add
fwait
or
xor
cmp
orb
mov
roll
dec
sub
jbe
push
xor
or
jle
lods
inc
add
jmp
clc
add
nop
cmp
xor
shlb
cli
adcl
add
sbb
push
jmp
dec
sbb
les
adc
xorl
test
shlb
add
and
adc
sbb
loopne
pop
adc
data16
jb
add
pop
push
arpl
push
sarb
inc
lea
andb
dec
inc
pop
mov
test
lods
lods
int
cmpb
rcll
call
mov
jmp
add
cwtl
outsb
hlt
mov
push
leave
andb
sbbb
pusha
das
mov
add
mov
cmp
daa
push
xchg
aad
push
in
inc
pop
fcmovu
fisttps
dec
cwtl
loop
inc
fmulp
hlt
add
mov
loopne
xchg
add
pusha
lahf
rorb
mov
xchg
mov
sahf
add
mov
insl
int3
nop
inc
add
lcall
pop
sbb
addl
je
out
push
cld
add
or
add
js
cmc
push
leave
adcb
and
mov
mov
or
out
aam
and
push
fisubrs
dec
jmp
xchg
stos
jno
sbb
pop
lahf
sarb
cs
xchg
add
or
enter
andb
jne
jno
xor
divl
add
jbe
je
cmp
rclb
cmp
cltd
clc
or
mov
negl
pop
out
addb
sarl
and
lret
dec
into
outsl
filds
mov
insl
push
add
mov
mov
add
or
loop
adc
int3
testl
subb
fdivrl
xor
mov
leave
pop
push
xor
faddl
or
jb
jmp
cmpsl
push
add
mov
arpl
xchg
cmp
cltd
pusha
sub
sub
and
fcoml
xor
add
fmulp
dec
pop
sub
nop
add
xchg
in
or
jns
jg
sti
rol
movsl
xchg
lahf
add
and
jle
inc
rorb
scas
xor
icebp
adcb
jo
add
mov
jg
test
addl
stc
loopne
add
mov
jmp
add
inc
imul
xor
mov
xor
add
mov
add
test
enter
and
faddl
imul
negb
pop
fsubr
loope
sarb
std
inc
ja
pop
mov
roll
sbb
cmp
fldl
bound
mov
call
les
adc
mov
jp
inc
roll
xchg
add
add
bound
idivl
push
sti
call
in
clc
inc
xlat
dec
or
mov
data16
add
xchg
sub
push
add
scas
aaa
aam
divl
mov
cmp
inc
imul
sbb
add
arpl
pop
push
add
je
mov
ss
or
pusha
dec
add
mov
add
add
mov
stos
add
mov
shll
add
adc
xor
add
adc
xchg
loop
mov
cmp
dec
xor
add
das
xorb
out
inc
flds
out
scas
cmp
and
adc
adc
cmc
push
add
enter
xor
sbb
cmp
pop
xorb
fdivs
dec
imul
in
cmpb
add
mov
test
fsub
sub
mov
add
xchg
hlt
xchg
sub
data16
fidivrl
jbe
jb
jp
in
add
mov
mov
ret
mov
or
dec
sub
sbb
add
outsb
movsl
jno
sub
jns
add
mov
ret
adc
stc
xchg
inc
cmp
in
add
sbb
xchg
xchg
loop
lock
and
jmp
repnz
xlat
inc
shll
adc
gs
add
xchg
fnstsw
jmp
das
pop
and
push
stos
sbb
xor
push
cmp
sbb
jecxz
loope
sbb
inc
jle
add
pop
rolb
std
add
sbb
sbb
clc
add
dec
out
mov
aad
mov
sub
jl
inc
xor
sub
mov
out
inc
adcb
xor
mov
pop
daa
mov
mov
add
lret
adc
push
daa
add
ud2
jmp
pusha
adc
xchg
jle
add
mov
ret
leave
or
push
add
shll
pop
sbb
mov
cld
add
cmp
pop
lahf
les
inc
add
mov
mov
jo
adc
clc
dec
xor
cmp
mov
add
and
add
daa
cmpsb
insb
add
loope
in
out
push
pusha
cli
sbb
aad
and
icebp
add
mov
xor
loop
and
loopne
pop
jle
adc
inc
mov
xor
adc
jbe
out
cmp
icebp
cmp
cmp
mov
rorl
sti
mov
add
aaa
sbb
test
inc
dec
lds
mov
add
mov
and
inc
adc
jl
or
rcrb
xchg
leave
orb
mov
jl
ret
inc
add
jns
xchg
icebp
je
sub
mov
jmp
jl
xchg
mov
scas
pop
push
add
fwait
jbe
push
pop
mov
pushf
pop
cli
pusha
lcall
inc
idivb
lods
xor
add
mov
jb
movsb
cmpsl
je
ds
cmp
fiaddl
push
movsl
sbb
mov
out
sbb
add
add
enter
lahf
out
in
divl
scas
js
xchg
sub
sbb
adc
dec
xchg
enter
adc
xor
in
push
xchg
add
sbb
dec
shll
and
and
push
inc
orb
idiv
lahf
insb
and
mov
sbb
jo
daa
imul
outsb
jecxz
dec
add
mov
sbb
cmp
or
push
stos
mov
insb
incb
cmp
add
pop
shl
cld
jae
bound
inc
dec
int3
push
adc
stc
imul
icebp
dec
mov
jno
add
inc
pop
stos
dec
ds
int
call
xchg
cmp
pop
add
insl
das
sub
hlt
xchg
add
mov
xchg
fildl
ret
add
push
pop
jo
or
add
dec
xchg
mov
addb
or
cmp
dec
lcall
sahf
loopne
mov
sub
fstps
or
cld
test
addl
cmpsl
dec
jbe
add
add
xor
mov
enter
addr16
outsl
adcb
test
cmp
mov
fstpt
pop
loopne
sti
adc
hlt
adc
add
push
xor
add
sub
pop
jge
adc
pusha
mov
and
xor
inc
leave
xchg
and
nop
push
xchg
lods
arpl
test
int
add
dec
add
sub
cmp
sbb
mov
xor
jg
sub
cmp
xorl
mov
push
mov
mov
mov
pop
int
xchg
and
pop
ds
jnp
or
pop
lret
add
jo
les
sbb
movsb
cmp
test
add
mov
imul
rcr
enter
push
setno
scas
stc
and
aam
hlt
sub
addb
mov
cmp
xor
adc
mov
aad
add
stos
xchg
xlat
add
icebp
add
ret
shrl
in
loopne
add
or
fstl
add
jb
test
in
ljmp
std
je
mov
xchg
inc
call
cmp
cmpsb
out
sub
mov
add
add
insl
shl
add
mov
jne
ja
add
dec
roll
nop
xchg
orb
ljmp
pop
sahf
in
rclb
das
jmp
cmp
and
and
inc
sub
daa
out
pushf
add
add
mov
rcl
jne
add
adc
or
popf
andb
fildl
push
xchg
jno
lcall
push
push
loope
mov
xchg
add
inc
inc
cmc
inc
dec
test
inc
ljmp
pusha
push
mov
sahf
lcall
outsb
retw
sbb
add
fs
in
daa
cmpsl
test
sti
ret
add
inc
mov
add
out
sub
push
mov
cmp
outsl
add
popf
inc
mov
jecxz
mov
or
mov
lahf
add
lret
shr
mov
mov
cwtl
leave
sti
add
xchg
pop
xor
jae
loop
add
out
sbbb
dec
ja
flds
sahf
or
popa
insl
addr16
adc
mov
push
jp
mov
cli
gs
in
push
fcmovnu
push
jecxz
pop
rolb
out
push
inc
cmp
xor
fs
popf
pop
lods
xchg
jge
mov
inc
add
fnsave
es
gs
ficompl
or
add
mov
loope
sbb
ret
add
cmp
popl
sub
push
xchg
insw
icebp
into
jl
leave
les
jnp
add
repnz
std
cmp
in
add
xorb
leave
jmp
fnstenv
or
dec
test
pushf
clc
pop
adc
bound
and
push
add
xchg
jmp
imul
leave
scas
inc
mov
mov
xchg
insb
jns
inc
sbb
add
and
dec
fmull
add
adc
add
lret
or
fdivrl
adc
xchg
inc
or
add
dec
int
lods
pop
cmp
jle
push
add
cmp
icebp
movsb
mov
je
and
loopne
push
add
sub
xor
lea
jp
cmpsl
rcr
add
xchg
jnp
add
lods
push
int
ss
cli
push
cmc
sub
pop
js
test
into
flds
jmp
repz
dec
mov
mov
movsb
and
ret
jge
sub
jl
jbe
jecxz
pop
addr16
xor
aas
lods
add
incb
test
popf
jmp
pop
cld
push
sbb
popl
mov
pop
add
mov
cltd
imul
xchg
clc
test
mov
fistpl
xchg
cmp
add
jmp
and
add
mov
pop
in
sbb
imul
mov
in
add
dec
dec
pop
or
push
add
or
imul
daa
repnz
in
jg
iret
push
fsubrl
sti
or
in
add
nop
jne
mov
sub
pop
mov
jnp
outsb
out
loopne
cld
cmpsb
add
xor
add
or
hlt
es
add
xor
leave
das
fwait
jno
in
lods
pop
daa
jno
xchg
enter
aad
add
or
paddd
lahf
and
nop
out
add
ret
add
mov
int3
std
sti
jmp
jle
in
jecxz
push
xor
mov
in
add
mov
jne
lcall
add
test
loopne
dec
movsl
add
scas
dec
les
inc
pop
insl
adc
das
sub
xchg
scas
mov
pop
xor
cwtl
into
add
pop
js
jmp
sub
rcrb
push
and
scas
subb
stos
xor
jns
or
mov
stc
scas
add
adc
mov
add
xchg
or
fisubs
or
jp
test
lahf
and
lea
rclb
loopne
aas
in
dec
add
and
nop
ret
pop
mov
jnp
xor
cmp
lea
nop
or
ret
enter
add
lds
sbb
sbb
jnp
lret
out
jp
inc
in
push
aam
clc
push
push
cmpsb
mov
add
xchg
out
addr16
jmp
jnp
jo
or
jle
movsl
outsb
mov
xor
and
dec
add
xor
mov
ret
sub
jae
test
pop
pusha
xchg
xor
xchg
add
push
sbb
or
test
es
pop
mov
push
mov
push
das
cmp
je
stos
mov
mov
cwtl
mov
pop
call
test
jae
mov
adc
inc
or
pop
pop
dec
hlt
sti
test
inc
inc
in
jg
add
xchg
lea
je
sub
es
or
popf
adcb
inc
aam
adc
inc
jg,pn
add
roll
ss
mov
sti
fwait
jo
je
mov
sub
cltd
test
or
sti
add
loop
or
in
push
xor
imul
xchg
add
jg
or
addb
sbb
adc
sbbb
lret
xor
inc
add
xchg
mov
add
adc
shll
mov
out
xor
std
addb
hlt
mov
cmp
pop
sbb
adc
inc
mov
mov
add
pop
xchg
add
lds
mov
cmp
xor
push
cmp
lds
test
cmpsl
mov
cli
fists
int3
add
popf
bound
jmp
dec
sbb
mov
or
lock
adc
cmp
shlb
push
scas
sub
fcompl
jmp
or
push
cmp
cmp
insl
shll
push
xor
nop
cli
jbe
add
sub
mov
sbb
sub
cmp
addr16
jge
add
xchg
fisttpl
sub
cmp
and
xchg
sbb
lods
mov
nop
pop
cli
add
xchg
and
dec
push
aas
add
and
mov
mov
mov
inc
stos
or
xchg
push
jge
jno
sti
andb
lds
repnz
ljmp
pop
pushf
test
xor
push
cs
pusha
sub
jmp
mov
leave
xchg
dec
clc
ss
shr
ret
call
jno
cli
std
xor
or
mov
inc
xor
movsb
or
pop
adc
daa
xor
imul
jae
sbb
jns
fs
cmp
mov
pop
bsf
dec
pusha
into
rcrl
xchg
clc
xor
jle
xor
dec
ss
dec
add
inc
mov
xchg
mov
add
xchg
and
add
xchg
cli
and
loop
mov
sub
popf
roll
push
cmp
dec
jns
xor
stos
call
fisubrl
jae
repnz
add
out
das
mov
mov
dec
xor
div
shlb
scas
pop
and
push
cmp
lret
or
popa
pop
adc
inc
push
sahf
push
je
mov
invd
ror
xor
movb
insl
adc
lret
mov
ret
pop
lret
loope
stc
add
in
pushf
pop
add
xor
hlt
push
into
xor
ss
jge
or
cmp
imul
sub
add
out
xchg
clc
jl
enter
clc
and
rcr
pop
loope
push
jnp
test
ficoml
jb
sbb
inc
sbb
bound
jne
add
cs
add
adc
pop
nop
movsb
push
add
mov
shrb
pop
lods
mov
mov
push
add
jne
mov
ret
icebp
xchg
fbld
shlb
push
cs
loope
adc
ret
sub
adc
ror
aad
pop
int3
sbb
fs
mov
jbe
add
xorl
jns
or
or
xor
dec
inc
fsubrl
adc
test
fsubrs
push
add
outsl
cmp
mov
add
popf
sbb
sbb
add
int
and
mov
sub
lods
out
and
gs
sbb
test
mov
lahf
pop
cwtl
sbbb
adc
mov
mov
mov
mov
mov
fs
int
sahf
mov
andb
fcmovb
cmpsb
xchg
adc
iret
mov
insl
cli
xchg
pop
mov
ret
mov
popa
cmp
cmp
outsl
std
jae
popa
sub
mov
jbe
jns
add
mov
repz
aaa
pop
sub
mov
sbb
lahf
jl
scas
imul
test
mov
shrb
and
js
pop
and
push
dec
inc
jb
mov
cs
hlt
fs
sbb
push
mov
mov
add
push
dec
cmp
mov
shr
popf
or
int3
insb
stos
cwtl
aaa
je
add
test
fwait
ds
or
pusha
jg
aam
pop
pusha
add
push
insb
lret
loopne
sbb
pop
pusha
adc
add
mov
nop
pop
mov
adc
loop
rcll
add
leave
in
push
inc
xchg
int3
inc
int3
insl
push
addb
test
lahf
test
into
data16
inc
stos
xchg
pusha
mov
mov
add
out
lret
repz
stc
test
movsb
test
cmp
pop
andb
pushf
movups
incb
flds
pop
xor
xchg
xor
jae
in
test
xor
mov
test
add
aaa
std
sbb
push
push
cmpsb
es
and
inc
xchg
pop
jp
sbb
into
in
push
adc
pop
cmp
xor
out
das
sub
push
ja
push
and
jo
jmp
leave
and
bound
sub
mov
adc
js
pop
nop
xor
ror
std
ret
fnsave
fisubs
xchg
add
mov
sbb
jns
push
and
pop
add
lods
jns
mov
outsl
addb
mov
leave
stc
ror
inc
inc
pusha
lds
jmp
add
movsb
enter
xor
hlt
or
das
imul
mov
pushf
adc
shr
push
aas
scas
ljmp
hlt
fidivs
inc
repnz
push
dec
and
adc
hlt
adc
mov
push
and
cmc
push
pop
and
xchg
mov
nop
rorb
dec
fidivrl
nop
lods
push
test
fisttps
mov
sbb
pusha
cmp
cmp
or
adc
add
sub
loop
test
mov
stos
or
out
xor
aaa
out
aad
pop
ficompl
ret
sbb
mov
add
sbb
std
jecxz
push
in
xchg
pop
andb
jo
stos
jae
cmp
outsb
sbbb
add
pop
xchg
data16
in
adc
mov
ds
and
ret
cmp
jbe
push
sbbb
hlt
loope
gs
test
mov
mov
pop
xchg
les
out
and
xchg
jnp
adc
andb
push
push
add
clc
jbe
in
bound
fs
pop
add
negb
mov
sbb
push
aam
mov
sub
cltd
push
cmp
xor
pop
or
fmulp
ret
nop
and
test
mov
adc
insl
add
int3
xchg
insb
mov
pop
js
adc
adc
mov
add
es
nop
test
fs
jo
add
mov
in
std
and
and
mov
pop
push
or
pusha
add
sub
clc
jne
adcb
fcomip
fisubl
jle
xor
or
dec
dec
push
add
and
addb
xorb
cmp
and
addl
fcoms
dec
adc
clc
adc
add
rolb
arpl
add
rorb
cmpsb
in
inc
add
in
mov
loopne
sahf
testl
xchg
mov
rol
cmp
enter
enter
dec
sub
or
inc
jb
add
cmp
mov
xorb
leave
sti
add
outsb
enter
or
pop
icebp
dec
sbb
xor
in
stos
add
add
or
add
mov
fmull
sbb
push
in
leave
lahf
adc
sub
push
aas
add
stc
popf
leave
xorb
dec
es
enter
jecxz
das
mov
rorl
lock
mov
je
jne
test
cmp
cmp
outsl
loope
xchg
shlb
test
inc
inc
and
sbb
add
imul
and
sbb
cwtl
mov
inc
mov
xchg
test
sbb
push
lods
je
shlb
mov
add
or
dec
imul
push
out
dec
shrl
sub
pop
movsb
iret
add
lahf
imul
adc
xchg
push
insl
and
pop
lret
out
insb
movsb
adc
inc
cmpsl
adc
test
add
fwait
and
imul
in
push
and
mov
and
in
and
pop
inc
xor
sbb
or
mov
adc
mov
inc
sahf
sub
loopne
jl
inc
cmp
inc
movsb
lret
fsubrs
pushl
mov
cmp
rol
or
sbb
insb
or
or
popa
punpckldq
out
mov
orb
es
out
ret
lock
mov
jo
pop
push
and
jmp
test
enter
cmp
stc
stos
hlt
loope
icebp
cld
cmp
aam
add
outsb
mov
inc
rclb
push
pop
jp
cmovl
add
nop
push
mov
inc
mov
sbb
popf
sbb
xchg
mov
add
sub
call
movsb
int3
add
stos
sub
mov
mov
jl
inc
popl
rcrb
dec
and
shll
insb
daa
lahf
aaa
hlt
push
inc
icebp
clc
dec
cld
cld
jbe
pop
gs
mov
xchg
add
fwait
aam
es
or
and
and
mov
pop
jge
add
test
rorb
int3
inc
dec
inc
and
cmp
sbb
ds
fs
mov
push
pop
xor
insl
add
cmp
push
lcall
inc
lret
add
mov
jnp
jl
jl
cwtl
fcoms
adc
sub
jge
mov
sbb
mov
sub
dec
outsl
xor
decl
std
add
inc
jecxz
test
loopne
popf
xchg
test
or
cmp
sbb
push
test
pop
xchg
loopne
adc
cmp
js
sarl
adc
cmpsl
aaa
pop
sub
and
jns
cmp
scas
xchg
sub
jnp
stc
adc
js
pop
lcall
popa
pop
dec
repnz
movl
fnstenv
inc
or
sti
inc
xor
sbb
popa
push
pop
mov
xchg
lcall
lahf
xor
shlb
das
xor
fcoml
lock
ret
mov
imul
cmp
movsb
inc
inc
stos
add
pop
mov
add
xchg
cmpsb
xchg
adc
lods
mov
and
mov
jno
mov
add
mov
xchg
adc
sti
aad
adc
add
and
in
cmp
inc
inc
scas
add
jecxz
out
pop
cmpsb
add
andl
adc
add
popa
aam
adc
divb
add
sub
xor
leave
shlb
jne
pop
pop
jl
fcomps
pop
ficoms
je
add
xchg
cmp
cltd
pop
mov
cld
test
enter
in
lahf
dec
addr16
sbb
push
push
out
fisubs
jp
xor
lret
orb
outsb
shll
inc
sbb
test
xor
cmpsl
popa
adc
mov
mov
inc
pushf
add
push
sub
repz
mov
inc
push
daa
test
push
jb
les
xor
mov
mov
fmul
adc
lods
adc
popf
insl
data16
sbb
xor
add
mov
cmp
jge
xor
roll
ds
push
sub
xchg
flds
pop
adc
ds
js
sub
es
sti
mov
in
andb
insl
or
add
repz
sbb
lods
inc
outsl
push
ja
pop
adc
cwtl
arpl
dec
xchg
ret
mov
fsubrl
xchg
jecxz
dec
jb
lret
in
nop
clc
std
lods
and
pop
pusha
js,pn
mov
push
or
jp
jns
cwtl
adc
push
and
adc
stos
mov
lods
loope
xchg
mov
out
pushf
mov
movsb
sbbb
add
jp
insl
and
es
push
cld
adcb
mov
xor
cmc
jl
mov
add
mov
jne
daa
pop
rcrb
cwtl
pop
adc
mov
scas
add
int
jo
add
mov
loopne
jne
nop
dec
xchg
cmpsl
add
das
pop
xchg
test
mov
add
push
rcrb
or
mov
dec
popf
xchg
add
xor
movq
lret
shlb
fsubl
push
les
or
lea
clc
adc
andb
lds
push
add
mov
push
gs
fidivrl
fwait
outsl
pop
add
imul
jns
aad
xchg
xor
mov
imul
sub
inc
pop
addr16
mov
and
adc
mov
mov
loope
inc
stos
dec
loop
push
mov
pop
je
das
xchg
xor
adc
sbb
pop
stc
mov
sub
sbb
pop
rclb
add
sbb
nop/reserved
xor
add
outsl
add
fsubrl
add
mov
outsl
add
ljmp
add
push
xchg
and
fisttps
xor
jp
loope
sub
jge
addl
insl
mov
jno
sbbl
adc
adc
stos
add
in
ret
cmpsb
les
xchg
inc
or
clc
xchg
push
xor
les
leave
int
add
fstps
lret
int3
pop
add
nop
int3
daa
adc
xchg
and
fwait
push
test
adc
or
aad
inc
sarl
xor
mov
dec
sbb
nop
and
mov
ret
aas
jns
add
and
add
dec
cmpsl
je
cmp
add
xor
add
sub
push
fdiv
data16
adc
and
inc
test
das
fnstenv
lock
setg
add
and
dec
push
adc
xchg
popa
insb
addb
push
jno
sub
enter
mov
adc
faddl
lret
sbb
fists
inc
xor
jle
and
xchg
mov
sub
mov
add
int3
push
jno
cs
add
andl
mov
fimull
sahf
mov
enter
push
xchg
inc
pushf
pop
fadd
out
leave
pop
push
push
push
and
or
jo
mov
inc
lea
out
ja
nop
stc
arpl
inc
xor
xor
les
cmp
sbb
sbb
and
mov
adc
jmp
js
in
data16
aas
fcos
jge
and
pop
lcall
adc
mov
pop
add
mov
push
fnstsw
mov
flds
add
add
outsl
cmp
int3
les
jl
mov
imul
cs
adc
clc
add
cwtl
loopne
cs
sti
xor
lock
jge
and
ret
adc
nop
fstps
pop
or
out
aad
imul
pop
add
in
out
and
fwait
stc
cld
or
loopne
jo
out
cld
add
adc
scas
and
cmp
sub
add
push
cmpsb
xlat
push
jno
adc
pop
popf
inc
pop
sub
in
enter
ret
mov
push
mov
push
xor
mov
js
mov
add
es
loop
sbb
adc
or
notb
cmp
and
add
push
jecxz
sbb
inc
and
dec
jge
xor
outsl
dec
adc
or
mov
shlb
lds
pop
mov
test
push
adc
dec
inc
insb
cli
mov
mov
lods
xor
adc
int3
fcompl
lods
cmp
pop
pop
pop
addr16
movsl
imul
cmpsl
xor
dec
xchg
dec
popa
xor
adc
fidivrs
dec
sarb
repnz
imul
xor
push
inc
sbb
mov
popf
mov
sub
add
popa
push
jge
cmp
flds
loope
test
in
clc
mov
jg
mov
add
push
jne
cmp
std
repz
cmp
pop
mov
bound
cmp
mov
sbb
sbbl
in
rol
into
or
shrl
je
mov
loope
pop
leave
cld
sub
or
push
push
out
xor
adc
adc
lds
push
sub
xchg
add
xor
and
cmp
jmp
add
outsb
outsl
cmp
fs
dec
or
jno
cmc
jns
xchg
mov
lahf
jg
and
shl
cmpsb
jno
int3
mov
dec
rolb
cld
mov
and
or
xchg
sbb
inc
inc
xor
cs
mov
out
stos
dec
xchg
jmp
or
loopne
push
add
mov
or
jae
sbb
scas
aaa
sub
inc
dec
scas
clc
dec
xchg
xor
adc
popa
push
and
out
rolb
mov
or
lret
ret
shl
push
pop
outsb
add
xchg
and
decb
inc
mov
push
stc
int
jge
add
push
and
fwait
je
fs
cmp
add
aas
push
xor
in
test
add
movswl
add
lds
stc
inc
cmp
dec
push
adc
sbb
addr16
movsb
call
adc
call
gs
je
pop
js
lret
gs
inc
add
push
xchg
roll
pop
add
inc
aaa
mov
add
scas
mov
add
pop
bound
xor
xchg
xor
and
rolb
pop
pop
cltd
nop
jo
sub
shll
iret
jno
cld
mov
hlt
inc
gs
test
call
inc
daa
outsl
xchg
data16
pop
sub
push
dec
pop
gs
mov
add
test
mov
add
push
push
js
inc
xor
mov
add
cmp
jmp
push
int3
fs
sbb
add
insb
mov
sub
inc
popa
fs
divl
loopne
pop
ret
and
clc
adc
mov
cli
shlb
mov
pop
push
loopne
cmp
jecxz
jnp
loopne
add
pushf
push
lcall
adc
add
sti
roll
call
mov
pop
movsb
push
hlt
adc
aam
cmpsl
push
push
imul
mov
lock
and
pop
and
sbb
bound
pop
xor
testb
outsb
dec
xchg
xchg
daa
cmc
mov
inc
add
aam
adc
jb
add
rol
out
mov
and
das
scas
xor
inc
dec
arpl
outsl
add
sub
jg
mov
or
cmp
lahf
stos
enter
adc
push
add
add
loope
add
lea
cmp
pushf
xchg
aam
or
sub
or
add
outsb
mov
dec
mov
ds
mov
mov
and
movsl
bound
inc
int3
add
dec
mov
adc
mov
stos
mov
in
or
cs
mov
pusha
mov
lret
push
test
rol
add
adc
add
mov
popa
adc
inc
or
sbb
pop
jp
loope
xchg
testl
ja
or
lods
shr
std
push
mov
add
stc
mov
mov
add
push
movsb
fptan
js
jg
inc
add
shrb
mov
jb
pop
andb
add
js
mov
pop
cmp
xchg
scas
push
mov
add
jnp
and
fldcw
inc
popf
sbb
jno
pop
pushw
sub
outsl
push
sarb
jbe
adc
add
mov
add
int3
movsb
sub
sbbl
cmp
pop
pop
push
xor
sbb
test
mov
pop
lahf
fdivrl
js
lcall
sbb
mov
jb
add
add
nop
pop
jno
lds
movl
mov
out
cwtl
mov
rorb
or
cld
outsl
xchg
jo
js
shlb
ljmp
inc
and
mov
call
add
cmpsb
sbb
adc
gs
xor
cwtl
mov
mov
jo
inc
or
rclb
xorps
nop
jl
add
hlt
add
enter
nop
cmpl
pusha
mov
pop
cmp
jnp
jg
scas
cmp
or
push
mov
pop
outsl
and
add
imull
inc
or
cs
nop
sbb
mov
xchg
sbb
mov
test
in
stos
adc
add
popa
out
out
enter
mov
loope
pusha
sbb
sbb
test
out
pop
inc
aas
push
sub
sbb
push
mov
daa
in
mov
movsb
dec
ja
add
cld
gs
jl
pusha
and
mov
pop
pusha
push
int3
push
daa
jl
mov
xchg
push
add
cmp
das
fwait
loopne
aam
cmp
jle
mov
pusha
or
jg
stos
cmp
sub
or
sub
scas
stc
pop
cmpsb
mov
rclb
int3
mov
mov
inc
jl
imul
pop
movl
rcl
push
add
and
arpl
test
pop
mov
hlt
or
jecxz
add
dec
repz
int3
jge
cld
mov
movsl
dec
lret
and
insl
xor
stos
sub
pusha
dec
inc
mov
ret
and
push
leave
or
jge
inc
test
mov
inc
xor
rclb
scas
add
or
inc
push
incl
das
mov
daa
sbb
inc
negb
dec
stos
adcb
aam
jae
cli
pushf
sahf
inc
xchg
pop
inc
fsubl
aas
add
sbb
fmuls
adcb
aas
xchg
adc
cs
inc
add
lret
mov
mov
xor
aas
and
mov
leave
add
cmp
loop
cvtpi2ps
mov
flds
aas
mov
movsb
push
pop
cmp
add
test
sahf
leave
test
or
cmp
in
add
ret
ljmp
add
dec
pop
inc
push
imul
xchg
sub
inc
outsl
push
add
idiv
or
js
or
int
xchg
adcl
test
test
rcr
arpl
add
iret
push
mov
inc
jp
lcall
add
mov
mov
add
cmpl
les
adc
sbb
push
hlt
mov
add
sub
mov
cmp
pusha
xchg
insb
loopne
cmpsl
sub
data16
loope
pop
and
jne
or
add
lahf
or
cmp
adcb
movsb
inc
mov
jae
test
xor
loope
mov
sarb
aas
inc
jl
add
es
jle
mov
and
push
add
leave
xorb
fmull
stos
outsl
adc
jb
in
ds
adc
add
xor
bound
in
adc
bound
addb
mov
js
std
dec
mov
adc
cmp
or
dec
iret
je
aad
mov
add
out
add
mov
leave
mov
jbe
inc
imul
stc
add
es
int3
or
testb
cld
rcr
push
popf
fs
xchg
add
jmp
or
add
adc
jo
fstps
xor
fwait
cmp
int3
or
push
or
test
insl
ficomps
mov
xorl
adc
push
add
jecxz
inc
pusha
and
lret
loopne
out
mov
mov
add
dec
jnp
mov
add
lcall
push
and
sahf
insl
inc
xchg
jle
mov
sbb
and
mov
add
xchg
frstor
mov
lods
mull
xor
rcrb
in
lds
xor
addr16
add
jecxz
jg
dec
add
es
mov
decl
stc
movsb
add
dec
dec
mov
add
lock
mov
repz
int
pop
insl
in
repnz
ret
stc
sbb
inc
lret
adc
jge
fwait
pop
dec
test
jns
in
je
sub
std
adc
lock
dec
mov
lock
movsl
std
enter
loopne
dec
jmp
xorb
ret
pusha
xadd
out
jge
add
orb
cmp
sarb
test
and
jg
mov
inc
mov
lods
add
or
clc
lret
jge
jb
xor
test
and
cmp
add
cltd
fcoms
outsl
lods
sarb
das
cmp
pushf
imul
stos
test
es
push
repz
inc
rolb
rcll
divl
rolb
mov
mov
sbb
sbb
das
sarl
psrad
jp
cmpsb
lcall
add
cmc
in
cmp
mov
test
mov
lret
sub
xchg
ss
xchg
fwait
add
adc
data16
popa
pop
iret
jae
cld
fs
xor
pushf
sub
jae
and
pop
pop
pop
mov
or
or
outsb
add
jns
inc
inc
pop
adc
add
js
aaa
add
mov
cmp
add
mov
stos
add
out
in
incb
jle
and
mov
mov
adc
add
imul
adc
loop
xchg
fwait
push
movsl
cwtl
dec
mov
sub
inc
sbb
dec
lahf
inc
nop
sub
jnp
movsl
push
mov
mov
movsb
adc
and
adc
fsubl
dec
call
mov
mov
repnz
aas
pop
mov
push
je
adc
clc
sahf
pushf
inc
dec
sub
mov
xlat
push
cmp
lahf
and
cmp
int3
int3
sbb
nop
cmp
add
mov
push
sbb
gs
adc
dec
sbb
and
inc
pusha
sbb
inc
add
pop
xor
add
data16
mov
pop
mov
dec
jno
pop
or
out
adc
mov
jae
mov
test
inc
fiadds
dec
cmp
loope
xchg
gs
add
je
lds
cmp
outsl
mov
mov
mov
adc
fcomps
inc
fdivr
mov
repz
push
les
or
nop
sbb
dec
imul
arpl
xchg
fcoml
repnz
sbb
stc
push
jl
or
cltd
popa
add
inc
pop
mov
jnp
push
ficoml
push
nop
clc
psubw
add
call
rorl
loope
sub
fdivs
inc
sbb
sbb
testb
mov
sbb
add
lahf
mov
les
mull
and
xchg
in
mov
sbb
dec
ljmp
shrb
int3
push
jg
dec
pusha
jp
cmpsl
out
shlb
add
push
push
je
xor
or
inc
test
cmp
cli
add
lock
faddl
in
rol
dec
clc
sbb
or
sub
cmp
clc
inc
cld
fisttps
push
loopne
add
adc
fldt
faddl
or
mov
outsl
adc
and
sub
mov
pop
and
cltd
add
mov
out
inc
mov
add
pushl
cmp
adc
or
addb
fsubrs
lds
inc
call
fldenv
popa
push
test
js
and
inc
decb
outsl
xor
shl
xor
in
sbb
ficompl
mov
dec
push
loope
js
jbe
mov
fs
mov
in
mov
cmp
dec
inc
mov
jbe
pop
int3
add
pop
cld
jne
pop
std
outsl
mov
nop
push
inc
mov
xchg
pushf
hlt
cld
adcb
ds
gs
sbb
inc
and
and
mov
add
sahf
mov
mov
jle
js
es
shrl
test
sbbb
notb
sbb
in
cmpsl
add
and
loope
ss
test
rclb
cltd
sbb
leave
shrb
inc
mov
push
sbb
sbb
pop
pop
xchg
iret
fs
inc
pop
test
xchg
sbb
fldt
rcrb
add
inc
mov
mov
int3
pop
inc
and
sub
out
or
in
sub
mov
insb
inc
fstpt
aam
push
add
fs
xchg
sbb
and
hlt
mov
inc
jp
ds
insb
addb
nop
adc
ja
xchg
add
dec
shrb
inc
pop
jb
lock
flds
rol
mov
pusha
push
cmpsb
and
cltd
mov
push
in
lcall
cmp
in
or
test
sti
or
inc
xchg
cltd
xor
popa
dec
cld
and
cwtl
movl
cmp
and
cwtl
in
jns
out
fs
mov
icebp
and
int3
test
shll
add
push
jo
adc
or
rolb
jae
add
pop
sub
cld
and
mov
cltd
es
adc
test
xchg
fwait
pop
addb
in
lds
mov
jns
lcall
scas
jg
add
scas
iret
mov
sub
orb
jmp
xor
das
js
dec
lahf
aam
in
out
mov
lods
nop
mov
pop
sub
xchg
pusha
or
mov
out
shl
sbb
mov
add
js
sbb
add
ss
shlb
add
data16
xchg
je
addr16
inc
mov
orw
pop
pop
ja
aad
xlat
jo
xchg
mov
jbe
or
sar
popf
cli
xchg
jns
jns
add
push
add
push
jb
movsb
dec
and
sarb
add
fidivl
add
jmp
js
pop
push
add
cmc
mov
add
pop
sub
es
js
sub
shlb
push
ss
mov
ror
popf
add
sub
outsb
data16
add
dec
adc
sbb
and
jmp
xor
or
sub
or
test
inc
stos
or
xor
sub
push
inc
push
into
pop
add
nop
cwtl
xchg
xor
sahf
mov
jmp
loop
sbb
push
jns
adcb
or
test
xchg
and
add
add
sub
es
enter
js
inc
xchg
xchg
ret
pop
inc
notl
nop
jae
jle
or
inc
fs
or
repnz
pop
aaa
test
adc
cld
adc
lahf
sub
add
inc
fs
mov
add
mov
inc
es
push
mov
popf
shlb
inc
data16
adc
into
push
xchg
jb
lahf
adc
insb
test
add
pop
pop
fdivl
add
sbb
mov
movsb
add
arpl
or
jb
xchg
fs
add
adc
outsl
lret
and
test
ss
mov
popf
add
add
jbe
or
data16
pop
mov
mulb
decb
sub
mov
adc
popf
sbb
stos
add
pop
sbb
fs
and
nop
add
mov
jecxz
add
xor
int3
rcrb
pushf
call
xor
iret
leave
mov
sahf
sarl
popf
cwtl
mov
leave
push
push
cmp
pusha
add
jg
sbb
pusha
pusha
mov
int3
js
and
pop
stos
sbb
pop
js
mov
add
mov
cwtl
js
or
movsl
in
in
cmp
popa
lds
dec
in
xchg
scas
pusha
and
add
cmpsb
add
dec
mov
dec
shrl
push
popf
cmp
mov
mov
dec
push
pop
cmp
int
fsubrs
mov
or
in
xchg
pop
or
rclb
ds
addl
add
sub
cwtl
insb
mov
cmp
ret
je
inc
loop
adc
add
pop
sar
push
lock
fdivs
xor
subb
fadds
inc
dec
xor
pop
test
push
cmp
sub
dec
pop
imul
sub
scas
int
arpl
add
adc
cmc
cs
cmp
jl
and
insb
in
or
sbb
add
in
in
dec
loopne
mov
ficomps
or
mov
xchg
mov
adc
push
nop
add
pop
xchg
loope
test
mov
xchg
lods
sahf
adc
out
fs
jae
fnstenv
adc
fadds
das
cwtl
adc
push
add
jo
inc
xchg
je
add
add
xchg
fstpl
pop
and
in
cmpsb
test
int3
mov
dec
push
cwtl
rolb
pop
dec
mov
int3
aam
sbb
ret
js
inc
es
push
addr16
cmp
fsubs
mov
sti
in
add
mov
sbb
addl
lcall
test
or
mov
imul
in
sub
inc
inc
push
rcll
fnstcw
jl
fldcw
movsb
aas
add
inc
adc
add
das
mov
xchg
test
mov
inc
pop
cmp
hlt
inc
aad
jmp
out
mov
mov
ret
sbb
jge
inc
les
int
mov
popa
add
in
addr16
pop
cs
test
test
dec
add
cltd
xchg
addb
pop
rcll
sbb
pop
or
add
int
movsb
pop
push
jl
fists
js
and
cmp
inc
int
ljmp
test
adc
push
dec
loopne
dec
xchg
nop
sbb
push
pop
dec
sub
into
jmp
push
jle
add
add
std
dec
jge
cld
dec
inc
aam
lret
sub
nop
pop
push
and
pop
jb
dec
in
insb
adc
ss
push
mov
fisubl
push
or
xor
sub
out
add
std
popf
adc
sbb
xchg
inc
or
idivb
dec
jecxz
pop
jo
sub
je
add
sub
add
insl
xchg
xor
jne
mov
mov
mov
sub
rorb
and
mov
orl
mov
shlb
daa
mov
or
mov
xor
movsl
sbb
ss
sub
pushf
ret
jo
or
jg
inc
pop
iret
jmp
inc
pop
idivl
shll
pop
add
sub
mov
push
pop
or
add
subl
mov
add
xor
test
addb
dec
push
mov
cmp
mov
adc
movsb
sub
cltd
mov
test
add
mov
cmp
add
loope
jp
je
mov
pop
mov
adcl
dec
es
push
push
je
mov
jb
mov
repnz
xchg
and
cmc
loop
sti
dec
xor
iret
jbe
lsl
or
in
rolb
sub
enter
or
pop
jns
popf
sahf
je
es
pop
cmp
movsl
dec
adc
xchg
nop
fwait
add
rclb
mov
negb
mov
lret
jge
mov
add
jae
jp
cltd
mov
je
movsl
push
daa
push
inc
push
bound
js
movsb
test
and
or
xchg
stc
add
rorb
rorb
mov
ljmp
dec
mov
sar
and
aam
loopne
lods
dec
rolb
push
das
cmp
add
mov
add
push
add
mov
push
adc
sub
mov
roll
retw
stos
mov
sbb
sti
lea
adc
inc
dec
jl
push
or
add
xchg
ret
dec
nop
js
inc
push
push
sbbb
mov
or
dec
push
lret
jp
cmc
shll
and
imul
mov
sub
sbb
jmp
dec
outsb
sub
lahf
dec
enter
or
fistpll
push
xcrypt-ecb
cmpsl
dec
mov
xchg
lock
mov
xor
or
push
cmpsb
negl
adc
xchg
decl
dec
cmp
jae
dec
inc
imul
gs
push
stos
cmpsb
mov
pop
add
lea
dec
xor
dec
mov
add
add
add
cmp
cmpsb
jb
mov
mov
aam
shl
dec
out
popf
xchg
adc
adc
pop
fcomps
insl
test
add
add
pop
scas
into
movsl
cld
daa
add
fwait
out
xchg
ds
pop
test
inc
test
arpl
and
pop
sbb
enter
inc
xor
adc
and
es
pusha
lcall
popa
cmp
repnz
wbinvd
sub
andb
addr16
add
xchg
dec
xchg
repnz
popa
pop
hlt
dec
add
add
jmp
test
cmp
enter
dec
scas
fmuls
clc
cs
push
lahf
xchg
inc
cmp
dec
push
inc
cld
mov
inc
cltd
and
sbb
rorb
int3
ds
mov
shlb
jp
jmp
loopne
jo
cli
std
add
sti
adc
add
and
clc
mov
pop
mov
daa
pop
fisubl
add
loope
inc
incl
and
jge
mov
js
dec
mov
lret
out
mov
push
pop
fdivs
pop
int3
in
cs
dec
pop
sub
outsb
mov
sbb
imul
inc
pop
add
clc
cmp
enter
shr
xlat
and
lods
movb
mulb
dec
cmp
ret
mov
xor
loopne
add
popf
stc
inc
and
test
int3
subb
dec
cmp
cmp
aas
sub
gs
ds
lock
push
sub
jmp
in
inc
cmp
push
mov
test
and
aaa
lcall
add
enter
cmp
cmp
mov
sub
outsl
and
add
popa
xchg
pusha
rcrb
inc
test
int
jp
sbb
mov
lret
js
cmp
sub
pop
pop
cmp
aaa
ret
mov
aaa
mov
pop
xor
int3
pop
add
into
aad
fistps
mov
or
pop
mov
adc
bound
test
xor
movq
xor
dec
adc
or
add
movsb
shr
add
jae
xchg
add
lahf
sti
nop
or
dec
movsl
in
sub
mov
loopne
push
push
stos
jne
outsb
sbb
sti
outsl
mov
sbb
add
mov
fdivr
or
fimull
add
mov
pop
jp
int3
pop
sbb
cmp
cmp
test
or
adc
mov
sub
shrb
rclb
outsl
lahf
adc
inc
dec
imul
push
test
add
f2xm1
xor
jb
push
mov
add
mov
int3
push
and
mov
and
dec
cmp
movsl
mov
xor
adc
xorb
or
rclb
adc
lret
pop
and
insl
in
repnz
xor
jae
mov
cld
xchg
cmp
lret
or
dec
aam
ds
cmp
pop
test
daa
nop
cs
xchg
sbb
add
add
mov
jbe
inc
bnd
mov
pop
stc
adc
out
scas
pushf
jo
in
mov
add
xor
dec
daa
pusha
push
mov
insl
in
or
xchg
xorb
clc
rorb
aas
imul
orl
add
xchg
leave
cmpsb
in
adc
cmp
in
add
scas
mov
xchg
xchg
xor
xor
test
in
leave
xchg
cmp
mov
lock
jbe
inc
pushf
je
dec
mov
pusha
sub
aas
fstps
cmp
xor
inc
sar
les
sbb
push
loopne
out
scas
out
xchg
int3
in
add
cld
cwtl
stos
add
inc
fstpt
mov
inc
loopne
clc
add
sub
xchg
cwtl
xchg
and
pop
mov
andb
add
sub
mov
pusha
push
add
es
call
pusha
xchg
jb
sbbb
cmp
pop
add
push
int3
lods
inc
mov
pusha
fmuls
jae
pop
lret
roll
sub
adc
jl
pop
add
push
lds
push
mov
stc
std
lods
add
scas
loop
and
and
xchg
stc
aaa
int3
int3
add
xchg
dec
sub
or
outsb
add
test
lods
jecxz
add
push
mov
data16
imul
or
adc
jns
movsb
add
mov
sbb
xorb
outsl
lock
mov
divl
cmp
clc
sbb
movb
inc
int
mov
and
cmpsl
and
and
adc
mov
inc
inc
jecxz
adc
sbb
daa
out
dec
fcomps
movsl
push
add
ror
loop
xor
mov
add
arpl
ret
jecxz
test
mov
push
int3
sbb
leave
testb
lahf
mov
add
stc
pop
xchg
mov
mov
add
and
inc
xchg
call
mov
push
sub
cmp
icebp
fldt
xor
inc
add
scas
mov
hlt
in
push
gs
inc
mov
xchg
fs
ret
jl
jmp
pop
lea
or
mov
sbb
rorb
std
aam
lret
js
or
and
xchg
mov
inc
inc
arpl
cmp
adc
mov
enter
or
fwait
mov
add
sar
add
sbb
sbbl
xorl
pop
jb
cmp
mov
loope
add
pop
test
mov
mov
call
and
test
arpl
fwait
int3
push
xor
es
mov
test
dec
add
rol
add
int3
out
add
imul
hlt
adcl
jge
sub
popf
push
out
sub
or
pushf
mov
nop
movsb
and
cmp
and
fs
push
daa
in
or
and
pop
jecxz
in
sbb
insb
fildl
mov
pusha
or
sub
cmp
popa
add
testb
outsl
and
out
popf
lret
add
mov
mov
daa
xor
mov
add
jno
faddl
push
mov
mov
int3
add
jno
movsb
sub
and
scas
and
out
mov
les
call
mov
lock
aam
add
xor
nop
cld
add
sub
arpl
push
int3
mov
mov
xchg
loopne
and
push
out
or
test
mov
xor
or
jl
mov
pop
cld
cld
cmp
bound
add
inc
or
add
mov
arpl
repz
xchg
cltd
mov
aam
jmp
enter
lods
out
imul
jno
dec
mov
jo
cltd
call
inc
add
gs
mov
aaa
cmp
int3
adc
mov
push
rol
aaa
add
mov
int
les
testl
mov
mov
pusha
sub
add
xchg
dec
and
mov
adc
mov
popa
or
je
call
jne
int
mov
andb
dec
adc
dec
outsl
mov
out
jae
test
add
daa
xor
cmp
cli
mov
jmp
mov
adc
int3
je
fs
xor
lret
adc
add
add
sbb
int3
dec
xchg
push
add
ret
iret
add
jmp
push
int3
test
jb
subb
stos
sub
or
cmp
jmp
outsl
sbbl
push
mov
adc
cmpsb
insb
push
jo
out
add
cmp
jmp
fdivp
jl
adcl
nop
mov
aad
adc
lods
sub
and
aad
das
lahf
jns
pop
push
or
add
xchg
adc
adc
inc
jle
or
lret
push
dec
push
push
or
xchg
data16
jae
add
xchg
shrb
orb
rcll
sti
cmp
pop
fdivs
pushf
xchg
movsb
loopne
xor
pop
imul
mov
add
pop
mov
sbb
fcoml
mov
test
test
xchg
decb
and
out
pop
sbb
xor
cmc
or
das
sbb
pusha
dec
repnz
pushf
in
inc
icebp
outsl
cltd
clc
mov
lahf
movsl
mov
pushl
or
jae
inc
dec
xchg
ss
sbb
xchg
dec
jle
bound
jbe
inc
outsl
cmp
push
or
fs
andb
add
push
xchg
or
rcr
push
aas
or
push
sbb
or
inc
fiaddl
movsb
test
clc
inc
xor
cmp
les
fdiv
jmp
daa
mov
mov
xor
pop
jo
adc
cmpsl
add
ret
xchg
mov
mov
mov
add
mov
sub
sarb
push
mov
pop
ret
sub
dec
scas
add
xchg
xchg
aam
or
and
loop
inc
add
push
mov
stc
cld
sub
add
rorl
movsl
xor
or
loop
out
addr16
or
lock
mov
xor
or
addr16
pop
mov
push
xor
cmp
dec
sbb
loope
push
jno
cmpsl
add
sar
in
lcall
xchg
loope
add
scas
cmpsb
jbe
or
lret
dec
xchg
mov
iret
mov
movsl
jnp
sub
sbb
xchg
push
cltd
mov
outsb
push
test
mov
std
xchg
add
addb
sbb
xor
or
add
shl
lock
sub
fcomp
add
mov
sub
mov
mov
dec
sub
push
pusha
xor
push
out
ljmp
cmp
orl
lea
xor
or
adc
icebp
mov
pushf
add
int3
out
sbb
frstor
mov
jb
adc
ss
add
mov
adc
loope
or
sbb
xchg
jae
and
add
shrl
xchg
xchg
or
fs
jl
subb
and
add
xor
push
js
in
inc
xor
cmc
iret
out
push
scas
int
lahf
inc
mov
cmp
cmp
aas
leave
jnp
enter
or
mov
jl
insb
aas
xor
imul
sub
scas
daa
mov
ret
fmul
pop
xor
in
je
cld
pusha
rorl
dec
and
ss
movsl
lods
cmp
dec
adcl
subb
xchg
movsl
xor
mov
add
ret
les
cltd
test
sarb
jae
pop
es
mov
push
test
inc
outsl
rolb
jp
jnp
das
out
ds
dec
shr
mov
sbb
daa
mov
int
cmpsb
cmp
mov
and
leave
mov
add
mov
mov
cltd
jp
scas
xchg
add
icebp
xchg
cmp
mov
add
cmpxchg
loope
movsl
jl
out
imul
xor
sbb
inc
jns
pusha
mov
popf
rorb
sub
mov
cmpsl
and
es
pop
and
loopne
pop
adc
shll
rcll
and
and
sub
push
movsl
and
orb
aad
out
push
pop
shll
lret
pop
cmp
popa
or
add
push
push
cmp
lock
cmc
xchg
or
pop
cmp
imul
leave
mov
lock
pop
push
pusha
cmp
or
mov
bound
jge
loopne
and
mov
fstpt
cmpsb
mov
mov
lret
neg
adc
rclb
sbb
daa
cmp
in
movsl
push
xor
add
dec
dec
sub
add
mov
dec
pusha
test
mov
adc
sub
cmp
add
add
cld
call
push
ds
inc
mov
insl
push
cmpb
les
sub
hlt
add
push
outsb
lods
pop
pop
adc
pop
loope
enter
push
fisubs
adcl
rcl
push
add
mov
int3
movsb
outsb
add
lds
jae
adc
add
inc
xchg
push
push
jl
or
movsb
sbb
sbb
lea
push
inc
inc
fldl
jmp
push
mov
loope
out
xchg
xchg
pop
aaa
pop
push
push
mov
ficoms
imull
cwtl
fnstsw
sbb
std
jnp
mov
je
mov
mov
inc
sbb
push
aam
shl
push
int
inc
call
pusha
adc
jl
inc
or
fildll
inc
or
push
jnp
inc
lret
out
mov
jne
jecxz
loopne
jbe
insl
add
xchg
push
out
subb
mov
pop
cltd
aaa
test
pop
pusha
loope
push
pop
or
or
push
push
mov
in
adc
add
outsl
adc
mov
negb
cld
add
add
push
push
insb
add
xor
ror
arpl
mov
test
and
lods
cmpsb
pushl
jno
push
scas
sbbb
jnp
mov
movsb
aaa
jbe
stc
shrl
xchg
mov
cwtl
push
in
movsb
jne
nop
cmp
mull
scas
push
and
pop
push
mov
push
imul
loope
mov
xchg
add
out
pop
mov
faddl
rclb
push
ret
inc
testb
scas
aas
or
ficoms
inc
out
add
pop
pop
ss
mov
push
add
das
jbe
add
xchg
push
mov
cmp
add
xchg
ret
push
pop
pop
stc
mov
cmpl
ret
paddusb
in
loopne
or
sub
sahf
inc
or
filds
push
dec
pop
es
dec
xchg
rclb
sub
rolb
loope
sub
sbb
pop
add
sub
js
mov
mov
xchg
and
lds
das
add
xlat
shll
sbb
addb
pop
inc
fldenv
fdivrs
add
and
loopne
dec
xor
inc
addb
or
pop
dec
pinsrw
int3
jmp
sarl
popa
sbb
movsl
push
xor
adc
lods
pop
loop
dec
mov
pop
outsl
xor
mov
add
sbb
cmc
add
push
fistps
popa
int3
jmp
xchg
subb
adc
cwtl
insl
adc
fsubrl
cmp
mov
or
pop
add
or
arpl
xchg
add
mov
mov
pop
ds
push
scas
fsubs
lret
pop
pop
pusha
imul
push
sub
push
in
add
pusha
out
mov
rorb
inc
mov
scas
test
jecxz
lahf
push
sbb
fwait
shrb
sti
xor
add
negl
mov
pop
xor
lret
push
orb
test
jecxz
insb
jbe
scas
push
mov
pop
add
je
sub
hlt
fildll
test
sbb
inc
fmuls
pusha
and
leave
sub
xchg
dec
int
shlb
add
repz
inc
sub
popf
movsb
pop
dec
add
push
mov
pop
nop
inc
rolb
jbe
add
rolb
test
daa
or
in
add
dec
fimuls
movsb
cltd
stos
sbb
sub
push
out
push
xor
and
cmp
xchg
in
add
mov
push
jge
add
adc
stos
jnp
lcall
xchg
loopne
test
xor
adc
add
daa
mov
fistpl
es
mov
inc
push
and
das
add
loopne
sahf
dec
sub
mov
mov
xor
stos
popa
xchg
es
add
sbb
fnstcw
push
or
lea
or
adc
xorb
mov
xchg
dec
and
xor
gs
jnp
imul
dec
in
mov
or
cmpsb
cmpsl
mov
add
lahf
fs
pop
cmp
shlb
loop
cmp
mov
cld
xor
jns
mov
dec
les
icebp
add
sbb
add
push
sub
and
cltd
pusha
or
mov
sub
push
rolb
gs
jp
push
mov
pop
mov
scas
mov
lret
jns
mov
sbb
cmpsl
imul
insl
add
add
cmp
pop
lahf
les
pop
add
inc
lods
sarl
cmp
lea
in
loopne
aas
mov
loopne
xor
or
add
lods
mov
inc
or
mov
movsb
jmp
out
inc
fsubl
and
pop
sub
push
or
add
mov
lods
dec
jl
popf
or
mov
dec
fidivs
xor
dec
and
add
inc
sbb
xor
push
lods
fimull
sbb
in
add
jb
adc
adcl
rcrb
sub
sub
in
lahf
pop
jae
mov
xchg
and
jecxz
test
leave
pusha
cmp
and
xchg
inc
push
dec
or
jbe
add
xor
aas
sbb
adc
js
and
rorb
scas
add
xchg
sti
pop
icebp
ja
test
fcomip
and
mov
or
xchg
cmp
cwtl
and
out
xchg
adc
and
adc
inc
lcall
add
out
ljmp
loop
add
lret
icebp
movsl
mov
mov
jl
or
outsb
into
imul
mov
cmp
filds
shrb
mov
mov
and
and
mov
testb
dec
sbb
push
in
inc
addr16
loopne
cmp
or
or
mov
aas
xchg
add
jge
cmc
push
shrb
jb
mov
test
xchg
xor
incl
loopne
and
pop
sub
sbb
ret
mov
xchg
aam
or
test
mov
pop
and
mov
push
sub
stos
je
cmpsl
fwait
cmp
sbb
inc
inc
xlat
jns
addl
sbb
inc
push
jnp
push
inc
cmp
pop
jmp
add
jl
inc
add
cli
inc
aam
or
loopne
add
sarb
or
jp
cmpsb
pusha
add
sbb
pusha
pop
add
mov
sub
xchg
push
jns
popf
setno
mov
inc
sarb
stc
inc
out
xchg
or
test
add
cmp
jnp
loopne
inc
insl
aas
add
outsb
test
inc
jl
mov
adc
xchg
shl
xchg
addb
lock
ja
add
repnz
dec
bound
andb
dec
test
inc
add
jecxz
jl
jo
mov
data16
test
es
mov
add
sbb
in
iret
and
jns
jb
xchg
mov
mov
push
mov
rdtsc
pop
pop
xlat
movl
bound
das
cmpsb
sbb
subl
outsl
fs
lods
add
call
out
xchg
mov
nop
sub
add
pop
mov
mov
jp
inc
adc
faddl
popa
dec
cmp
add
sbb
xor
push
fisttpl
shl
mov
mov
mov
cmp
cmp
xchg
jne
ror
dec
js
cld
lcall
jmp
push
or
mov
jns
pop
add
pop
jae
sbb
add
bound
add
mov
aas
push
imul
add
jns
and
lock
gs
push
xchg
add
incl
adc
pop
daa
sbb
iret
rol
jl
sarb
mov
jecxz
icebp
adc
pusha
sbb
aaa
or
push
xchg
out
stc
sar
pop
scas
sarb
inc
es
jg
mov
stos
sbb
push
cmp
incb
or
pop
jecxz
subb
ficomps
movsb
adc
rcrb
jns
xchg
mov
add
cmp
lret
and
fldl
mov
and
sbb
insl
xchg
jns
loopne
pop
cmp
or
lret
add
push
cs
syscall
sti
iret
gs
and
stc
and
add
xchg
shll
call
lods
mov
lcall
int3
rolb
fdivrl
mov
bound
sub
jno
jbe
xor
notb
pop
nop
aam
mov
push
mov
sub
cmc
sub
ljmp
mov
jnp
sarl
push
clc
mov
jae
es
jecxz
andb
fdivrl
ret
sub
xlat
seto
stos
bound
ficomps
lea
xchg
add
push
add
mov
xchg
mov
push
lret
pop
add
pop
mov
loope
ds
add
jg
add
mov
call
mov
sbb
cmp
jbe
push
add
daa
pop
test
arpl
pop
mov
sub
cmpsl
pop
clc
mov
rclb
pop
mov
xchg
push
test
xchg
ret
pop
cld
mov
fisttps
mov
mov
add
xchg
push
into
cmp
sahf
add
xor
nop
or
and
sbb
ja
lock
sahf
jb
out
dec
dec
enter
ss
push
scas
rorb
jecxz
xor
sar
sbb
pusha
or
fwait
mov
je
dec
xchg
jl
or
cmp
les
mov
cmp
fisubrl
sub
fsub
popa
nop
shlb
daa
shlb
je
divl
cmp
xor
mov
mov
aas
and
outsl
mov
call
inc
inc
xchg
pushf
xor
fcomps
mov
mov
jge
push
push
ret
cs
xor
sbb
xlat
add
mov
cld
ljmp
aad
mov
jns
jo
add
dec
xor
pop
fwait
jmp
jo
mov
data16
mov
je
fcmovnb
sbb
cmp
or
xchg
ret
inc
rorl
mov
in
add
and
shll
push
push
mov
dec
mov
pop
mov
add
inc
or
int
out
clc
sti
inc
or
mov
cmp
push
push
cli
lock
leave
enter
cmp
mov
std
test
adc
xchg
rcrb
lods
mov
cld
or
sbb
icebp
sub
out
cmp
push
addl
xor
cmp
int3
adc
jecxz
movsb
test
mov
push
test
dec
jl
je
or
iret
sub
inc
loop
hlt
sbb
add
adc
es
addl
imul
dec
adc
in
data16
xor
test
jge
xor
lods
pop
or
nop
in
leave
pop
and
mov
mov
xchg
adc
and
and
xchg
sbb
cmp
inc
out
lock
add
mov
cmp
lods
add
cltd
or
imul
sbb
dec
mov
out
in
loope
push
out
leave
scas
das
pop
pop
or
mov
fnstsw
dec
daa
xor
jno
sub
test
sarl
dec
test
in
mov
inc
push
jno
sti
nop
add
adcb
pop
adc
jle
bound
pop
aas
and
call
insb
inc
dec
cmp
lock
rcrl
nop
je
fsubp
mov
test
mov
mov
jl
push
loopne
pushf
out
enter
mov
add
popa
mov
or
mov
lea
loopne
loop
jnp
add
dec
les
icebp
sub
sub
pop
in
ror
inc
gs
pusha
sbb
dec
sbb
lret
dec
add
inc
push
cli
out
shlb
sbb
xor
inc
inc
inc
dec
xor
cld
test
inc
pop
sti
xlat
push
cmp
and
mov
pop
loope
test
testb
stos
aaa
call
iret
xchg
es
adc
mov
add
pop
mov
imul
and
add
mov
add
xor
inc
mov
mov
dec
clc
adc
ds
jge
scas
jb
sbb
stc
shll
and
inc
ljmp
movsl
rorb
mov
lret
add
mov
pushfw
sub
js
inc
xchg
push
add
cmpsb
fisubs
push
roll
inc
jg
xchg
pop
fisubs
out
test
mov
pop
out
sbb
shlb
out
cmc
xchg
ret
mov
adc
in
mov
xor
fucomp
arpl
fisubs
fsubs
leave
inc
out
add
sbb
aad
pop
mov
push
or
push
add
dec
xchg
leave
loopne
dec
mov
and
clc
mov
dec
push
je
sub
add
lods
adc
cmp
dec
fcoml
sbb
les
and
shl
mov
jae
dec
dec
js
bnd
jle
fs
mov
daa
add
rolb
jecxz
push
test
pop
lret
mov
and
push
divb
rorb
add
xchg
shl
ljmp
imul
adc
sub
adc
hlt
hlt
lahf
jno
jmp
inc
xorb
lcall
jg
or
mov
int
fistps
mov
inc
aad
mov
push
dec
dec
inc
add
test
add
lahf
rclb
dec
dec
mov
adc
mov
cmp
insl
mov
adcb
pop
jae
push
mov
out
add
inc
cmp
sbb
test
add
mov
dec
iret
enter
xor
mov
sarb
cmp
lahf
mov
mov
jns
ljmp
push
test
lock
or
out
add
loopne
aad
hlt
and
out
mov
into
jns
mov
pop
adc
cli
mov
sub
sbb
lahf
arpl
or
cwtl
or
mov
stos
jmp
jno
push
mov
loop
cmc
mov
dec
cs
mov
orb
movsb
dec
roll
aas
loope
mov
loopne
xor
mov
add
inc
jmp
test
ja
int
lcall
inc
pop
bound
jp
mov
popa
rcrb
data16
add
mov
add
ficoms
xor
and
sbb
add
cmpsb
fsubrs
scas
jnp
lcall
fs
jle
add
repnz
pushf
push
pop
movsb
add
lods
mov
gs
inc
je
enter
cmp
pop
nop
and
dec
add
sahf
test
pushw
sub
adc
loop
and
xor
cmp
jne
adc
mov
mov
popa
mov
jbe
popl
aas
fstl
subb
push
xor
lret
int
jle
add
adc
mov
or
je
out
mov
add
cmp
ficomps
movsb
mov
das
add
movsl
add
loopne
in
shrb
jno
leave
jmp
adc
loope
inc
lods
jle
inc
sbb
adc
jns
xchg
add
cmc
inc
andl
push
jno
adc
sbb
or
roll
mov
sar
ret
loopne
add
or
ficoml
rorb
inc
sub
add
mov
mov
dec
bound
subl
add
push
and
in
push
scas
out
daa
outsb
or
testl
pop
jmp
arpl
hlt
nop
sub
and
cld
out
sbb
stc
jbe
or
arpl
subb
mov
add
sub
hlt
cli
arpl
cs
push
xor
push
mov
mov
lds
in
pusha
addb
movsl
push
in
add
cld
pop
pushf
or
dec
pop
arpl
test
xor
add
jl
sub
cld
xor
mov
clc
into
fbstp
rclb
jno
enter
mov
xchg
in
into
add
jno
insl
sub
ret
scas
mov
adc
add
pop
adc
loop
xchg
push
lcall
out
xchg
aad
pop
in
sar
fbstp
add
or
cmp
cwtl
xor
inc
mov
add
dec
movzwl
ret
inc
subl
rclb
lret
outsb
aas
xor
fcmove
add
repz
or
lock
sbb
mov
mov
outsl
dec
push
pop
xor
adc
or
mov
sbb
fidivl
ret
subl
out
sbb
adc
jg
and
in
pusha
outsl
push
mov
jp
int3
push
in
scas
imul
hlt
test
iret
sub
cs
cwtl
pop
sub
xorb
dec
mov
sub
jp
std
xor
rol
lds
mov
arpl
xor
ljmp
arpl
faddl
incb
adcb
xor
and
mov
push
cmp
mov
mov
add
lods
out
xor
pushf
out
add
xlat
push
fdiv
add
and
mov
loopne
movl
mov
call
cmp
xchg
xor
add
out
inc
add
nop
shl
jp
pop
sarb
sbb
push
add
stc
call
xlat
ret
loope
add
mov
ret
inc
loopne
test
mov
outsl
add
iret
loope
aam
lock
add
les
inc
add
loope
dec
inc
test
sti
mov
cmp
lock
dec
or
mov
jne
pop
and
mov
rol
jecxz
add
jg
mov
push
dec
dec
inc
ljmp
lods
stos
jo
sub
push
loope
dec
cltd
pop
into
or
loopne
pop
lret
incb
pop
add
push
sub
mov
adc
in
popf
or
cld
push
mov
addb
insb
add
call
jb
or
mov
add
add
fwait
jl
cmp
es
dec
jnp
and
sub
mov
inc
fs
or
mov
out
bound
loope
push
js
mov
push
xor
insl
or
pop
push
lods
loope,pt
push
xor
aaa
sahf
add
adc
mov
inc
lcall
or
pop
mov
gs
add
adc
aam
xor
lods
cmp
add
pop
lock
cmp
cmp
insb
loopne
addb
xchg
inc
bound
xchg
and
or
cltd
leave
xor
add
pop
inc
push
cmp
mov
nop
jo
repz
mov
mov
jle
sbb
xchg
xlat
add
popa
frstor
or
jo
ror
hlt
fs
and
and
lcall
mov
enter
add
mov
dec
enter
and
loopne
or
pop
arpl
movsl
mov
xchg
mov
adc
cmpb
movsb
pop
fildll
mov
mov
into
add
mov
mov
adc
add
push
sub
orl
mov
out
aam
test
pop
imull
add
sahf
sar
dec
or
mov
inc
jmp
jo
jg
pop
adc
pop
cmp
add
pop
imul
fsubrs
cmp
in
jae
popf
dec
adc
test
aad
add
jns
cmp
xorb
sbb
sub
je
xchg
ljmp
cwtl
mov
testb
mov
dec
sub
inc
in
cwtl
or
mov
aas
addb
insb
mov
fmull
add
jle
into
push
inc
or
add
or
repnz
add
rorb
xor
inc
sti
pop
sub
movsl
inc
cli
push
mov
pop
add
in
xorl
mov
or
inc
or
or
add
ss
jo
mov
inc
out
add
in
or
int3
or
ror
sbb
test
jmp
dec
enter
push
pop
cwtl
sbb
sahf
xchg
xchg
repnz
ljmp
and
in
insl
cmpxchg
cs
jp
push
mov
shrb
pop
sbb
add
enter
in
ja
add
dec
roll
add
nop
mov
cld
scas
add
fnsave
xor
push
push
call
add
push
fisubrs
idiv
pop
add
dec
cmp
mov
jno
ljmp
pop
pop
lret
inc
loop
cwtl
arpl
test
and
iret
mov
mov
add
testb
pusha
cmc
js
xor
pop
iret
cmpb
push
int
cmp
cmpsl
jmp
out
sbb
and
nop
add
sub
imul
mov
lahf
push
sbb
popa
or
pop
in
adcb
jl
and
sti
sbb
dec
add
popf
lock
movsl
adc
sbb
test
cmpb
cs
xor
pusha
fisubrs
cltd
pop
push
and
shlb
xlat
negl
mov
ret
scas
popl
inc
rorl
int
aad
mov
dec
add
data16
adc
in
pop
mov
inc
inc
mov
mov
mov
xor
add
jnp
add
cld
push
dec
lcall
mov
adc
xchg
sbb
add
ljmp
stos
and
mov
lret
rclb
inc
dec
and
and
inc
inc
scas
cld
into
xchg
stos
pop
push
mov
test
negl
push
and
mov
sbb
leave
cmp
pop
xchg
call
jmp
popf
push
pop
mov
jo
jecxz
sub
in
cmp
sub
out
inc
inc
mov
scas
add
cmp
mov
xlat
push
push
mov
mov
sbb
arpl
add
jl
or
mov
push
inc
or
cmp
std
push
add
faddl
scas
xor
out
lahf
jae
add
lea
ret
lret
es
and
inc
push
push
xor
dec
inc
push
daa
jb
inc
pop
enter
les
mov
aas
inc
sub
add
mov
int3
and
xor
or
jle
cmp
sti
stc
test
mov
fcompl
xor
cmp
inc
stc
push
xorb
fiaddl
into
sbb
sahf
ret
mov
sbb
js
add
lahf
adc
into
mov
gs
and
cld
jbe
fdivrl
mov
xchg
or
and
inc
fsubl
es
push
add
dec
sub
xor
sbb
xor
outsb
dec
decl
add
data16
sbb
pusha
xor
aam
sbb
add
jb
and
and
mov
stos
std
lret
leave
xchg
setp
or
sbb
add
xor
and
add
mov
adc
sahf
add
sub
jge
mov
mov
sbb
mov
xchg
outsb
inc
js
fdivrp
xor
adc
jle
mov
nop
mov
sub
rclb
decl
jb
insl
mov
push
mov
incb
sti
xchg
add
fcomip
daa
cmp
add
inc
mov
dec
jge
pop
f2xm1
and
iret
fadd
and
mov
outsl
xchg
hlt
insb
jmp
push
sbb
out
adc
add
mov
adc
mov
push
mov
clc
sub
add
adc
pop
leave
int
add
inc
sub
push
or
add
rcl
pop
jecxz
pop
dec
dec
mov
stc
stos
sbb
mov
adc
movsb
lret
xor
rcrl
adc
dec
in
js
add
test
add
inc
and
add
imul
mov
sbb
mov
das
add
dec
add
jecxz
js
push
cwtl
cmp
mov
add
xchg
lahf
fadds
and
push
jecxz
mov
and
movsb
xor
jge
fs
xchg
and
rclb
leave
jb
push
add
jl
mov
popf
test
add
mov
sub
jle
jp
mov
add
negl
or
xchg
add
sub
stc
xor
add
incl
lock
mov
add
bound
pop
add
jecxz
cmp
dec
cltd
mov
fmull
and
jp
add
rcrb
sbb
dec
add
into
sub
inc
xor
inc
sarb
insb
les
add
inc
jno
add
cmpb
aam
pop
lret
pushf
loopne
enter
loope
lret
push
rorl
adc
pop
test
pusha
pop
or
out
push
push
je
sbb
fmull
out
add
or
dec
test
rorl
add
sbb
aad
and
outsb
mov
dec
out
ds
call
sarb
outsl
pop
jecxz
dec
mov
mov
rcrl
addr16
and
add
testb
mov
filds
pop
add
jnp
cwtl
add
cs
ja
pop
rcrb
sbb
push
xor
scas
in
sub
mov
test
adc
lret
sub
rcrb
add
mov
xchg
jecxz
sub
stos
mov
xchg
out
verw
cs
aam
cmp
mov
sub
sub
inc
lds
sub
jecxz
sub
test
in
mov
add
jp
sahf
jl
push
lea
xchg
cmpb
inc
mov
add
dec
out
dec
pop
adc
movsl
bound
mov
xchg
pop
aas
adc
cli
add
stos
imul
mov
test
push
pop
add
pop
jge
add
in
inc
addb
jmp
cltd
mov
and
xchg
cmc
jno
push
add
or
adc
dec
add
or
mov
cmpl
add
mov
jmp
jmp
add
sbb
test
mov
xchg
pusha
adc
pop
add
push
stc
add
xor
sub
cmp
mov
out
loop
push
or
cwtl
jecxz
enter
add
stos
add
fldenv
xor
cld
adc
js
cmpsb
or
xlat
xor
leave
inc
idiv
pop
and
inc
add
mov
imul
call
or
add
cmc
sub
fwait
std
aad
sbb
add
int3
jno
repz
out
or
add
xor
shlb
add
imul
shl
cmp
mov
xor
rclb
and
mov
cmp
inc
sbb
aam
ljmp
fbld
mov
andb
jnp
adc
jae
leave
into
dec
in
cltd
in
add
nop
pop
mov
mov
cs
add
jg
out
jl
test
push
add
shrb
cmc
and
negl
add
mov
add
or
adc
loope
add
stos
push
rorl
add
xchg
loopne
push
roll
sub
stos
ss
shr
add
popa
cld
add
inc
inc
scas
xchg
clc
or
lret
lods
or
mov
dec
jne
aad
loopne
int3
pop
xor
mov
dec
adc
inc
cld
enter
std
mov
clc
add
push
subl
or
jns
aaa
pop
xchg
rcr
add
ds
adcl
cmpsb
stos
ficoms
jg
testb
xchg
jno
add
fcomip
xchg
test
xor
add
jle
pop
pop
pop
add
pusha
cmp
ror
add
sbb
add
les
add
loopne
lds
imul
aam
test
mov
shlb
daa
sub
movsl
aam
adc
mov
addb
dec
xchg
pslld
cmpsl
push
and
ss
sub
add
push
inc
add
enter
addb
xor
mov
xchg
add
sbb
aam
rolb
adc
xchg
aas
scas
add
popf
push
dec
mov
add
imul
pop
enter
and
sub
inc
cmpsl
add
push
ja
gs
xchg
in
add
mov
mov
inc
pop
or
data16
mov
roll
roll
mov
fscale
ss
pop
pop
call
jo
leave
shr
sub
sbb
xchg
xor
and
sub
jl
ret
jg
push
sbb
cmp
cmp
lods
lret
stos
cwtl
movsl
mov
jg
xchg
inc
in
fcmovb
pop
jne
add
dec
lea
mov
cmp
test
sbb
fistps
idivl
pusha
sub
in
add
xor
pop
insl
add
mov
add
sahf
repnz
inc
xchg
in
js
add
jbe
add
mov
add
mov
push
or
daa
add
pop
shlb
or
aad
xlat
out
mov
add
decb
fisttpll
notl
sbb
xor
iret
push
lds
std
and
jp
out
pop
adcl
pusha
out
add
jno
movsl
mov
or
les
mov
cwtl
add
or
inc
and
ljmp
sbb
pop
imul
sub
add
pop
test
push
pop
add
orb
xor
push
loope
xor
jg
out
adc
sbb
dec
loopne
adc
cmp
add
jmp
les
lods
pusha
les
bound
and
pusha
push
js
xor
add
stc
add
stos
pop
repz
xorl
add
pop
dec
xor
dec
insl
push
notl
fwait
mov
pushf
fdivrl
shl
repz
xchg
push
call
lret
in
js
add
lock
pusha
sub
out
or
scas
in
mov
mov
bound
rcrl
mov
lds
add
inc
shrl
mov
mov
and
push
push
xchg
sbb
int
js
iret
cwtl
roll
and
into
std
sahf
mov
mov
sbb
jb
je
andb
ficomps
loopne
add
and
das
add
pop
outsb
popa
jle
xor
mov
sub
fucompp
jo
stc
sub
mov
add
add
lahf
inc
xchg
jnp
pop
pop
cmp
jae
aad
adc
sarb
adc
data16
stos
out
xchg
mov
stos
and
fcom
fiaddl
cmp
fsubr
scas
xchg
cmp
mov
mov
jne
je
icebp
inc
cmp
clc
mov
int
andl
sbb
outsl
adc
rorl
call
pop
ret
add
movsb
dec
pop
jb
out
add
sarl
sub
jl
xadd
cmp
js
sub
mov
in
pop
xchg
inc
stos
xor
loopne
cmp
test
outsl
fmuls
xadd
repz
orb
sub
inc
rol
inc
mov
mov
test
insb
aam
test
sbb
dec
cwtl
pop
cmp
push
add
lahf
sarl
adc
popa
pop
push
cmp
lea
das
in
sbb
dec
add
insl
aas
loop
shrb
aaa
xchg
dec
and
test
jecxz
mov
push
mov
cmp
add
inc
add
mov
in
mov
add
loop
add
in
push
add
fbld
xlat
call
adc
addl
jle
callw
test
cmpsl
addr16
pop
filds
jp,pt
add
and
fwait
movsb
andb
icebp
sub
lods
add
cmp
push
imul
es
and
roll
repnz
push
and
in
lods
inc
pushf
andb
outsl
stos
movsb
lds
or
xchg
popf
adc
subl
add
out
pushf
mov
dec
jb
in
stos
nop
sub
dec
xchg
dec
cmp
lock
and
or
stc
adc
cmpsb
xchg
add
es
push
lahf
add
das
leave
mov
ds
int3
js
jmp
sahf
inc
jae
add
xchg
jbe
lods
mov
add
sub
aam
dec
add
ljmp
add
shl
mov
and
nop
jno
lock
add
stos
mov
or
fcompp
mov
cmp
fmuls
cmp
or
mov
js
sbb
mov
shrb
sub
jno
cmpsl
popf
nop
jmp
incl
mov
idivb
fs
pop
sbb
dec
push
add
add
mov
xor
add
push
test
jnp
add
inc
out
in
and
rolb
lret
fisttpll
leave
add
mov
dec
add
imul
add
cltd
stc
psubsb
jg
add
cmp
pop
out
dec
add
movsl
xchg
pop
mov
rcll
ret
call
test
cltd
add
mov
in
jae
cmc
pop
pop
add
push
sbb
leave
scas
rclb
add
mov
xor
mov
mov
pop
sub
add
push
cmp
mov
int
out
imul
cmpb
loop
lret
pop
cmc
sbb
cmp
mov
push
js
lea
pop
aam
nop
decb
add
mov
cwtl
dec
pop
lds
pop
iret
jecxz
mov
ret
xchg
and
jnp
xchg
add
pop
lods
add
xor
mov
mov
or
sahf
pop
rcrl
jmp
ret
add
jle
or
popa
shr
data16
and
mov
insl
add
xor
ss
mov
cwtl
pop
testb
add
int
sub
push
in
jle
ljmp
jl
push
ss
push
sbbb
leave
dec
aaa
add
int3
cmp
leave
pop
push
sbb
push
mov
cwtl
jge
mov
sbb
lret
sub
cmpl
sbb
adcb
mov
xor
out
cmpl
xor
sbb
add
mov
icebp
cli
inc
add
adc
sbbb
inc
pop
movsl
pop
sub
repnz
dec
mov
add
cltd
pop
jne
testb
es
jno
cmpsl
icebp
inc
rolb
push
fildl
inc
mov
add
leave
les
push
out
adc
lcall
xor
push
lock
push
shll
pop
mov
pop
out
les
repnz
dec
lahf
or
xchg
dec
fs
adc
leave
clc
add
popf
xchg
arpl
sarb
sbb
sti
ljmp
push
jmp
mov
mov
cmp
sahf
cmp
and
xor
push
jnp
sbb
in
sub
or
adc
pop
mov
jge
and
push
push
ficoml
fiadds
xor
mov
enter
inc
adc
ds
push
jg,pn
xor
sub
xchg
call
dec
pop
shrl
or
mov
je
add
stos
jno
inc
mov
mov
ja
shrd
add
lcall
or
pop
data16
add
xchg
cltd
push
mov
jp
and
aaa
inc
lock
sbb
call
rolb
or
cmp
jb
int3
sbb
dec
xor
dec
push
lods
push
cmc
sub
lahf
es
out
push
mov
mov
fadds
push
rclb
insl
leave
sub
cli
cmpsl
sub
aad
fdivrs
testb
xchg
div
xchg
orb
mov
aad
test
out
dec
add
je
push
stos
cmpsl
call
cmp
add
icebp
lahf
push
imul
inc
dec
or
gs
add
faddl
and
add
mov
add
add
out
xchg
cmpsb
add
stc
hlt
dec
mov
lret
lock
inc
jmp
or
imul
inc
cmpsb
jae
or
push
mov
in
inc
push
mov
mov
adc
xor
sbb
loopne
xchg
fs
mov
mov
jnp
les
push
pop
stos
scas
push
mov
mov
rolb
bound
mov
movsl
push
pop
test
add
mov
fcoml
add
nop
dec
sbb
or
adcb
nop
std
shrb
addl
cmp
pop
aad
dec
pop
jl
pop
mov
pusha
fdivs
mov
mov
out
mov
add
je
pop
addr16
pop
cwtl
dec
xchg
add
imul
in
pop
cmp
dec
add
lock
add
js
mov
mov
and
jno
inc
call
fwait
inc
stos
fs
flds
and
xor
xor
add
or
mov
popa
mov
fidivrl
dec
add
or
js
add
test
xchg
dec
push
stos
ljmp
dec
fistpll
cli
shll
pop
xchg
cmp
push
cld
in
mov
cmpsl
into
ljmp
insl
mov
mov
sub
popl
cmp
cmp
outsb
loop
jbe
add
inc
mov
adc
xor
push
add
data16
test
pop
push
adc
das
rclb
aas
cmp
mov
nop
ds
pop
cwtl
movb
arpl
sbb
xorb
inc
pop
mov
movsb
add
in
cmpsl
insl
fdivp
dec
rolb
dec
mov
inc
jp
loope
aam
pop
mov
loope
inc
inc
aam
dec
xchg
xchg
rcrb
dec
add
ljmp
cmpsb
mov
testb
mov
daa
rorb
mov
add
push
out
cmpsl
jae
arpl
lock
mov
repnz
jo
int
push
or
adc
pop
xor
insl
insb
hlt
mov
orl
sarl
loopne
decb
or
jecxz
call
mov
add
mov
jns
testb
xor
icebp
lock
ret
aad
or
push
push
daa
bound
pop
add
fisubs
jnp
stc
mov
xor
sbbb
cmp
js
or
push
hlt
pop
mull
add
dec
test
in
xorl
dec
sbb
fcmovbe
testb
mov
add
sub
int3
test
and
fmuls
jno
test
inc
aam
jecxz
adc
add
pop
sti
mov
imul
pop
in
inc
xchg
jo
jns
add
inc
rcll
or
data16
mov
cmpsl
push
stos
mov
test
incb
movsl
fildl
or
mov
add
xchg
pop
sbb
cwtl
sbb
push
mov
jle
add
rep
pusha
enter
adc
add
pop
add
or
pop
add
and
mov
jns
ss
inc
enter
arpl
pushf
mov
mov
xor
push
or
cli
mov
or
aad
data16
push
cmpsl
or
jmp
pop
loope
rclb
add
les
or
in
add
movsb
sub
ret
and
inc
repnz
pushf
repz
add
or
push
adc
lret
add
loopne
pop
mov
jmp
rcrl
inc
jb
lods
xor
jo
mov
inc
inc
sub
sub
fcoms
test
add
lea
add
nop
dec
imul
add
xchg
addr16
push
add
push
aam
shlb
rolb
fdivrl
roll
mul
jae
loopne
out
fstpl
popf
jnp
cltd
jle
movsb
add
jp
jne
add
sar
out
add
sti
push
mov
mov
cmp
call
ja
cmp
pop
in
dec
cli
andb
adc
mov
subl
subl
not
inc
mov
add
adc
and
nop
mov
cwtl
enter
cld
bound
push
cmp
test
ret
inc
push
adc
pusha
mov
mov
sbb
inc
rcll
dec
int3
popf
fs
cwtl
stos
inc
add
cmpl
into
or
add
loopne
stc
add
pop
addb
test
movsl
fwait
push
mov
add
pop
scas
outsb
iret
push
dec
add
add
xchg
push
jo
mov
cs
aam
push
push
xor
enter
add
jae
jo
push
jno
dec
add
hlt
jp
add
and
aaa
ret
cmc
dec
lea
mov
xorb
cmp
pop
xlat
data16
dec
mov
lret
call
pop
add
sbb
out
add
sub
nop
cld
xchg
rcrb
pop
jo
jmp
mov
jb
add
shlb
or
sbb
mov
or
into
cmpsb
inc
push
add
mov
add
lahf
aas
data16
mov
jo
add
push
mov
insb
add
clc
adc
into
or
xchg
leave
add
jbe
movsl
add
add
jo
jns
lar
add
orl
test
mov
xchg
lret
or
mov
in
inc
add
jl
fiadds
loopne
push
xor
mov
in
add
popa
shll
or
scas
test
cmpsl
push
fwait
lock
mov
stos
mov
frstor
das
jge
in
int3
pop
lods
out
push
mov
or
repnz
push
ret
cmp
cmpsl
jle
adc
cli
sub
push
cmc
xchg
bound
xchg
in
push
pop
cmp
pop
add
loopne
xchg
cmp
pop
add
dec
fwait
loopne
out
add
push
popa
addr16
sahf
in
pop
jbe
add
repz
xor
or
jnp
imul
mov
cmp
iret
jb
xchg
imul
hlt
push
pop
roll
pop
add
cmp
mov
jge
xchg
clc
adc
aam
cmc
inc
in
fadds
pop
mov
stos
clc
cmp
addb
faddl
push
fnstsw
xor
icebp
cmc
add
xchg
dec
inc
add
fnstenv
popf
gs
iret
add
sbb
sarl
cmpsb
sarl
cmp
popf
push
sbb
ret
inc
cmp
shr
inc
push
inc
test
rorb
pusha
mov
fcoml
les
push
inc
ds
add
inc
mov
sbb
jnp
jo
add
fstl
cmp
push
push
mov
fistl
jmp
addr16
push
adc
adc
dec
push
mov
out
xchg
xchg
push
es
sub
pop
aam
cmp
cmp
cmc
pop
add
lahf
jg
imul
notb
icebp
mov
push
je
cltd
add
inc
pusha
mov
add
mov
jecxz
outsl
mov
jmp
jle
mov
pop
sub
add
imul
and
je
ret
push
xchg
cltd
dec
sbb
leave
ds
std
subl
cli
dec
adc
outsb
mov
xchg
mov
fldl
sbb
dec
testl
andb
js
adcb
test
adc
jo
cmp
pop
adc
jae
sub
push
sar
cmpsb
rcrb
filds
addb
ljmp
push
cmpsl
add
clc
push
fiaddl
test
out
mov
add
lahf
lcall
lock
or
not
nop
je
in
filds
scas
scas
sub
aas
cld
sbb
add
pavgb
cmp
movsl
pop
lea
rcll
pop
lock
fs
sbb
push
add
push
decb
out
jns
and
adc
add
dec
xor
jnp
xchg
sbb
mov
pop
pop
jno
mov
dec
push
ret
sub
fwait
add
push
sub
add
inc
call
add
sub
dec
es
test
adc
shrl
ret
pop
inc
insb
test
mov
movsb
loopne
or
jbe
enter
test
add
bound
clc
fsubl
dec
mov
xlat
lock
add
push
outsl
fisttpll
sti
js
lret
sbb
mov
add
jo
loopne
out
in
push
xchg
mov
mov
lock
fwait
pushf
stos
sub
add
cmp
imul
dec
add
fdiv
movl
movsl
enter
inc
mov
in
idivl
je
cmp
add
icebp
xchg
mov
flds
xor
inc
pop
test
jne
aas
inc
jo
cs
inc
pop
jg
mov
add
sub
inc
push
loopne
testl
out
faddl
jo
push
xor
mov
add
gs
mov
inc
cmp
hlt
push
pop
add
jp
es
cltd
mov
jmp
in
sbb
cmp
xchg
cs
sbb
aad
in
inc
mov
jl
sbb
loope
bound
out
add
add
sub
inc
mov
loop
mov
inc
jg
jb
xor
icebp
ret
out
adc
and
or
push
hlt
xchg
and
mov
imul
pusha
scas
dec
icebp
add
es
ret
add
mov
mov
cmp
loope
mov
inc
add
pop
movsl
cs
ljmp
lret
in
xor
mov
pop
mov
andb
stos
adc
scas
outsl
les
push
adc
fbld
in
inc
mov
enter
mov
xchg
add
push
or
xchg
push
jb
leave
popl
out
sbb
mov
sbb
pop
cld
cmp
and
loopne
dec
incl
cmp
and
xchg
scas
adc
add
mov
xchg
inc
cmp
xlat
jns
pop
inc
cmp
into
stc
and
js
call
inc
clc
and
dec
mov
xchg
xor
sbb
and
pop
pusha
push
add
gs
cmp
push
inc
enter
ret
mov
lea
cmp
push
dec
add
out
mov
sbb
repnz
add
fmuls
inc
jge
cs
xchg
mov
sub
cmp
ret
mov
mov
mov
or
cmc
loopne
mov
popa
xchg
mov
sub
fcmovne
out
sub
cmpsb
lds
inc
fdivrs
or
mov
pop
mov
arpl
xchg
and
cmpb
mov
add
ret
jmp
xor
sbb
pop
sbb
xor
call
push
pop
cmp
mov
add
pushf
add
test
push
xchg
mov
add
mov
inc
jbe
jno
add
jne
push
sahf
int3
mov
arpl
add
xchg
and
fdivl
pop
sarb
hlt
movsb
add
cli
sbbb
lock
ror
add
push
cmp
or
mov
push
xchg
xor
iret
mov
das
mov
and
adc
fildl
jmp
push
cmp
popf
xchg
push
addr16
add
sbb
subb
add
adcl
inc
outsl
pop
push
dec
jl
pop
mov
loope
inc
ret
and
call
add
and
inc
push
xchg
pop
je
cmp
loope
movsb
xor
daa
test
add
fmuls
mov
add
cmp
mov
add
add
andl
es
stos
add
mov
add
jno
add
leave
fimull
pop
jecxz
push
in
xor
in
push
inc
add
or
cmp
mov
and
fiadds
pop
pop
repnz
rol
int3
or
stc
pusha
dec
adc
and
push
push
sub
xor
in
cwtl
cmp
mov
icebp
icebp
das
mov
add
push
jle
push
or
repz
add
or
mov
xchg
shlb
adc
xchg
pop
addb
mov
sbb
fmuls
mov
cmp
setae
add
push
fst
add
pusha
sub
xchg
add
xchg
imul
stos
lret
sbb
adc
scas
lock
movsb
fisubs
out
xchg
test
enter
mov
fdivrs
sub
xchg
imul
jnp
sub
add
mov
int3
jp
sbb
inc
js
dec
inc
subl
push
ret
add
daa
fmuls
mov
iret
lock
add
mov
jbe
stos
add
enter
std
mov
mov
or
mov
in
popf
sub
cwtl
sub
call
dec
ds
add
inc
enter
pop
dec
pop
test
push
add
clc
xchg
arpl
xchg
mov
cmp
cmpsl
push
cwtl
push
mov
mov
stc
sub
sub
mov
xlat
add
outsl
dec
ret
and
add
std
xchg
rorl
scas
add
jmp
loopne
mov
add
into
nop
ja
divl
scas
rolb
adc
hlt
stc
sbbb
push
loop
repnz
add
fcoml
jb
es
scas
add
mov
or
loopne
aam
xchg
push
mov
aad
xchg
sub
adc
add
and
lods
xor
pop
xor
rcrl
in
cmovae
push
inc
add
mov
insl
mov
daa
add
mov
out
jmp
outsb
mov
add
test
sub
movsl
out
add
ds
or
mov
add
js
test
push
mov
ja
cmp
jbe
sbb
out
pop
arpl
leave
ja
adc
dec
sbb
sarl
roll
jb
xchg
cmpsb
add
imul
fsub
or
mov
push
ja
icebp
add
flds
dec
idivb
dec
and
inc
pop
cwtl
add
ss
loope
fcmovnu
add
sbb
inc
add
mov
and
add
pushw
scas
int
insb
push
add
sub
add
dec
mov
das
sbb
inc
xchg
cmp
add
into
add
add
fwait
and
push
mov
adc
lods
dec
aaa
gs
adc
rolb
mov
adcb
sub
jb
outsl
jbe
mov
push
je
fistps
pop
pop
cmpsb
add
push
xor
sub
aam
xchg
fcomip
dec
add
call
aas
jmp
test
adc
add
adc
pop
sub
stc
xor
push
add
or
push
lods
leave
imull
clc
loop
add
cmp
push
or
jo
sbb
add
inc
int3
mov
xchg
test
dec
mov
jmp
push
sbb
pop
jno
add
fchs
push
jne
rcll
mov
push
fwait
ja
mov
iret
jb
jge
add
icebp
xchg
add
mov
add
or
cmpb
dec
fcmovne
mov
pop
mov
shr
add
pop
fstps
mov
inc
add
test
xchg
js
dec
push
push
or
xor
pop
xorb
jecxz
daa
inc
popf
mov
inc
int3
add
mov
loope
rolb
popa
sti
mov
pop
sub
add
sub
or
sub
js,pn
in
and
lahf
pusha
mov
add
cli
jno
xor
ljmp
and
out
add
jle
pop
add
insb
and
mov
mov
pop
add
cmp
push
aas
test
rolb
es
add
sti
xchg
pushf
gs
lahf
add
in
iret
adc
mov
add
loope
inc
mov
add
push
arpl
push
shlb
aaa
jge
inc
add
adc
mov
nop
adc
push
mov
cld
or
add
aas
lret
dec
stos
add
lds
push
mov
xor
jmp
inc
stos
mov
adc
sbb
mov
aam
addl
jl
je
aas
cmp
add
or
ds
mov
addl
or
add
ja
lea
out
in
int
scas
jo
sub
dec
insl
push
push
push
dec
xor
adc
jg
clc
rcrb
stc
sub
add
stos
lret
jb
add
and
jge
mov
add
xor
add
pushf
pop
lds
jo
add
insb
push
fwait
add
je
stos
xor
sbb
aad
enter
jmp
cmp
jg
or
xchg
mov
movsb
jo
cmp
mov
popa
sbb
add
rclb
xor
add
sarl
cmc
lds
repz
pop
add
iret
mov
cmp
jmp
jo
lock
add
push
lea
sbb
sub
mov
hlt
mov
dec
xchg
push
cwtl
je
dec
out
sub
mov
or
lods
and
mov
pop
or
pop
enter
sub
mov
dec
shl
movsb
fdivr
sbb
fimull
fcmovnu
and
add
dec
enter
aas
addr16
push
clc
rol
jmp
adc
xchg
in
push
inc
or
mov
ja
je
pusha
pushf
and
xchg
push
jbe
mov
scas
mov
jae
pop
mov
call
xor
and
ja
out
add
pop
sub
orl
push
push
ret
add
pop
cmp
call
loope
mov
and
pop
mov
pop
aas
mov
out
jl
ret
inc
xor
xor
xchg
les
sub
int
inc
inc
sub
movb
lahf
enter
and
stc
int3
pop
das
lock
pop
mov
ror
xor
sbb
fmuls
sub
cmpsl
or
fwait
mov
adc
add
std
inc
xor
pop
jecxz
ret
in
push
sbb
adc
loopne
sbb
xor
fwait
add
jl
cwtl
or
and
sub
or
mov
jo
ffree
xor
push
push
sub
xchg
je
gs
or
inc
clc
jecxz
iret
mov
pop
jne
add
mov
xchg
sbb
sub
xor
add
mov
jmp
push
cmp
add
pop
or
aam
outsb
xor
rcll
dec
lock
mov
arpl
xor
out
inc
pop
adc
pop
adc
jne
jnp
add
mov
jmp
pusha
xor
cmp
insb
xchg
xchg
out
cmp
add
inc
loope
push
jl
pop
iret
mov
jge
and
add
jnp
scas
cwtl
flds
aas
jp
cltd
push
lock
cmp
inc
jle
inc
repnz
test
movsl
std
scas
push
jb
sub
or
dec
inc
lods
lock
jg
cmp
and
pop
jbe
adc
cmpsl
inc
adc
push
inc
jne
loope
adc
mov
or
jno
and
ljmp
add
add
xchg
or
sub
test
pop
shlb
pop
mov
xchg
pushf
jp
add
mov
and
pop
mov
imul
push
sub
dec
add
adc
out
and
push
cmpsl
mov
mov
push
insb
sbb
dec
mov
shlb
add
test
xor
fnsave
cmp
mov
and
fldl
xor
or
add
jg
sbb
mov
sbb
mov
push
add
inc
fnsave
jle
cmp
cmc
push
cmp
xor
mov
lock
fisubl
hlt
dec
idivl
and
jae
pop
into
jo
test
mov
add
pop
fidivl
adc
push
pop
test
cmp
mov
std
andb
sub
out
int3
add
add
sbb
cli
and
stos
mov
cmp
add
movsl
mov
es
push
data16
push
addb
je
mulb
dec
std
call
rclb
mov
mov
mov
xor
fldt
inc
rcr
and
xor
mov
ret
add
xchg
add
cs
and
lret
add
fwait
icebp
je
mov
jl
add
push
stos
jne
in
mov
add
icebp
orl
enter
shl
cmp
fs
lcall
pushf
rol
mov
ret
lahf
jle
add
mov
test
stos
jo,pt
add
movsl
nop
stc
lock
in
cmp
sub
xchg
out
ds
pop
push
jmp
adc
int3
add
xchg
out
movsl
cmp
mov
adc
icebp
add
call
lret
cs
or
sub
repz
push
adc
shl
sbb
sbbl
inc
inc
jmp
mov
pop
mov
sbb
nopl
mov
aam
in
decb
inc
push
add
sub
xchg
dec
imul
sbbb
adc
mov
add
mov
sahf
add
push
add
xlat
pop
add
mov
mov
xchg
dec
or
cs
test
jge
inc
add
push
addr16
rcr
sbb
jne
cld
insb
fistpll
nop
clc
dec
std
push
je
xorb
aaa
sti
notb
rorb
add
shlb
and
outsl
push
pop
add
and
xchg
sub
and
mov
mov
shl
hlt
add
inc
ss
pop
jge
add
fcompl
push
faddp
jns
adc
shll
loopne
mov
mov
cwtl
and
scas
add
inc
pop
or
adc
mov
gs
adcb
mov
sbb
lret
jno
mov
test
out
pop
leave
mov
mov
int3
stc
nop
out
inc
and
push
pusha
cmp
sub
out
ljmp
neg
subl
inc
je
add
or
add
cmp
inc
jae
or
mulb
int
pop
mov
and
addb
bound
xchg
loope
and
xchg
add
loop
sub
inc
mov
scas
and
mov
sub
push
mov
adc
sub
jge
dec
inc
call
xor
ds
int3
mov
test
add
sub
orb
add
mov
inc
mov
in
or
dec
xchg
dec
cmc
je
imul
and
orl
push
mov
roll
cmpsb
movsb
shll
adc
jb
sti
push
pop
test
pop
nop
jbe
sbb
punpckhbw
cs
lahf
pop
jae
jmp
les
sbb
jnp
rcrl
fsubrs
and
add
xor
andl
int3
push
loope
adc
cmpsb
push
data16
cmpsl
pop
rcrl
inc
lock
mov
jbe
test
xor
orb
stos
je
add
les
pushf
mov
and
arpl
add
leave
daa
inc
adc
loopne
sbb
jle
add
jge
push
adc
add
test
nop
and
mov
in
ret
lds
notl
call
add
ret
push
cmp
add
hlt
push
into
push
push
add
inc
inc
in
and
movsl
pop
nop
add
popf
cli
pop
lahf
fld1
lods
imul
repz
mov
je
add
adc
pushf
call
fiaddl
push
imulb
scas
shll
add
enter
add
pop
sti
ja
sbb
mov
call
sub
adc
xchg
adc
test
in
add
dec
cmc
inc
sti
cvtpi2ps
mov
ret
dec
loope
adc
mov
mov
push
inc
add
ret
scas
lods
xchg
incb
cli
and
outsb
add
push
icebp
jle
adc
insb
sub
add
loopne
mov
inc
jno
jne
push
cmpb
or
dec
pop
lock
ror
xor
jne
ljmp
pop
push
xchg
inc
cmc
jmp
xchg
jge
sbb
add
mov
cmc
cmp
dec
mov
ret
push
mov
cmp
std
jmp
add
fsubrs
add
cmp
adc
jg
lret
jae
add
dec
decb
jg
psrld
pusha
js
enter
mov
xchg
les
inc
add
test
mov
sub
bnd
stc
mov
sub
or
add
int3
fdivr
sbb
mul
ret
sub
fldl
sbb
repnz
lock
sti
mov
ljmp
add
xchg
test
add
inc
fs
add
xchg
out
or
cmp
nop
data16
sbb
dec
adc
jl
jno
add
sbbb
out
xchg
cmp
or
xor
xchg
add
test
jno
sahf
or
popl
cmp
xchg
jl
scas
loop
add
pop
shrb
xchg
stos
sbb
add
loope
jge
dec
add
xor
inc
daa
xchg
movsb
add
psubw
bound
push
cmp
add
iret
inc
mov
shlb
mov
pop
and
mov
mov
rolb
mov
pusha
fiaddl
sub
xchg
fnstsw
ja
add
aad
js
xor
add
imul
add
ss
cmp
sub
rcrb
bound
and
xchg
add
shrl
fwait
add
mov
mov
fs
mov
lea
inc
sbbl
rolb
andl
mov
pop
in
mov
push
adcl
mov
xchg
adc
pushf
test
add
jb
icebp
sbb
fisubrs
mov
hlt
mov
jp
sbb
inc
aam
adc
out
adc
ja
mov
clc
out
xchg
mov
fisttpl
sub
mov
add
pop
add
xchg
pop
icebp
mov
mov
and
add
push
push
mov
add
addb
insl
dec
mov
jns
and
push
hlt
add
inc
sbb
pop
dec
rcrl
cltd
out
add
cmc
dec
iret
mov
rcrl
popa
aas
mov
cmp
jge
ds
aam
jns
mov
push
incb
popa
dec
sbb
mov
add
js
loopne
sub
cmp
mov
rcl
xor
add
cs
lods
movsb
jns
push
mul
adc
popa
pusha
sub
mov
add
mov
push
popa
fs
testl
outsl
out
pop
mov
sbb
mov
insl
aam
add
shll
pop
add
jbe
stos
outsb
loopne
mov
adc
popa
xchg
lods
add
fwait
sub
or
or
scas
pop
ror
adc
fdivrs
dec
cwtl
xor
and
int3
pop
in
out
mov
pop
or
cmp
into
popf
sub
mov
sbb
add
lret
popa
aam
xchg
inc
out
dec
sahf
or
fwait
in
mov
imulb
push
lret
add
insl
or
pop
inc
cmp
add
pop
add
add
daa
testb
pop
dec
add
sti
push
out
enter
out
es
or
pusha
and
add
sar
call
add
sbb
pusha
mov
fs
rcrb
mov
inc
clc
loop
out
addr16
lret
push
add
adc
pusha
rol
push
push
fistpl
cli
scas
mov
pop
sub
insb
jno
wrmsr
or
add
mov
xor
fimuls
or
add
daa
xor
add
mov
pusha
sub
into
add
adc
pop
add
cmp
pop
mov
loope
out
sbb
adc
mov
jno
test
mov
mov
cmc
push
inc
rolb
cli
out
add
fsts
iret
mov
cld
cmp
inc
mov
push
andb
add
lcall
mov
xor
inc
cmovo
loope
gs
sub
mov
jl
aam
pop
decb
add
out
test
cs
mov
mov
mov
jo
add
shll
adc
mov
push
pop
mov
jle
push
std
pop
aaa
jge
add
imul
ja
and
cld
jge
daa
or
adc
mov
in
or
imul
xor
sbb
lcall
add
and
es
sbb
cli
add
mov
int3
sub
in
test
insb
sub
and
push
out
mov
add
xchg
add
mov
ja
mov
xorb
sub
dec
sar
pop
scas
ds
pop
add
jge
mov
movsl
push
call
flds
add
xchg
dec
pop
cmp
mov
xor
add
or
nop
mov
fmuls
jnp
push
sbb
addr16
in
cmp
add
xchg
pop
out
adc
push
je
dec
call
pop
push
jp
mov
jl
imulb
fs
pop
add
pop
mov
or
push
lea
andb
inc
das
js
add
lret
sbb
lcall
mov
neg
test
in
std
cmp
cwtl
leave
inc
mov
fistps
mov
andb
add
lahf
adc
test
dec
sahf
ret
xor
mov
pop
xchg
pop
out
jo
mov
enter
popa
xor
aad
add
add
xor
out
sub
bound
jnp
aas
cmpsb
cwtl
cmpl
scas
jbe
data16
pop
sbb
out
mov
outsb
inc
subl
dec
jb
mov
or
insb
nop
mov
pop
pusha
adc
sarl
dec
mov
sbb
lods
push
dec
cmpsb
or
xor
pop
mov
lret
jnp
inc
inc
dec
dec
jbe
cmpsl
cmp
fiaddl
sbb
pusha
add
lret
sbb
xchg
fnsave
int
cmp
in
xor
add
int3
pop
or
data16
ja
sub
mov
iret
inc
popf
aaa
push
xor
clc
mov
mov
fmuls
or
ret
add
mov
add
mov
add
sahf
fwait
add
stos
sub
or
jecxz
sbb
xchg
std
bswap
push
sub
add
loop
vcmpps
test
test
in
xor
sar
cs
cmp
xchg
add
frstor
mov
mov
add
jmp
sub
cli
inc
popa
movaps
out
movsb
jge
push
pop
jge
inc
jl
testl
inc
push
lcall
xchg
fistps
jne
jecxz
je
xchg
xchg
add
pop
push
push
pop
push
cli
pop
push
mov
inc
sbb
add
stos
add
inc
pop
in
clc
push
in
lock
add
jge
loopne
and
or
mov
aaa
pop
jl
jnp
pop
bound
push
loope
xchg
xor
cli
into
jb
sbb
sbb
and
sbb
inc
dec
loope
mov
inc
shlb
add
lret
jp
add
sub
sahf
out
mov
cmc
dec
pop
fmulp
add
mov
fdiv
imul
jl
nop
mov
daa
flds
add
adc
paddusb
adc
sarb
xchg
add
call
dec
pop
lret
add
push
push
loopne
and
xor
add
pop
out
sub
mov
outsb
add
aas
iret
and
mov
mov
ja
out
cmp
push
setbe
mov
data16
mov
leave
sbb
or
push
push
mov
sub
rcll
scas
aad
and
add
push
pop
fildll
add
pop
loopne
std
stc
hlt
fadds
mov
adcl
mov
out
movsl
loope
cmp
add
stos
push
or
repz
in
push
and
adc
mov
add
pop
mov
lock
mov
es
out
mov
divb
andb
dec
sub
xchg
push
xchg
push
insb
mov
jae
and
jo
add
dec
inc
popf
jno
sbb
decl
mov
xor
roll
adc
and
pop
aaa
mov
cmp
mov
scas
cs
xchg
xor
shrb
xchg
xchg
mov
lea
vmread
bound
jge
mov
out
mov
repnz
cmp
call
cwtl
inc
int
push
out
push
add
repz
push
adc
and
dec
sbb
push
hlt
cmc
std
add
xor
pop
sub
ret
add
in
rcr
insl
jp
add
or
pop
into
add
rcll
add
sub
aad
hlt
cmp
lea
add
inc
arpl
and
shll
movb
ss
inc
inc
pusha
fcoms
adcl
xchg
bound
divb
push
leave
sbb
sub
add
pusha
adc
out
xor
div
add
sahf
mov
dec
inc
fcmovnb
add
or
pop
mov
sub
fcoml
mov
fstpl
push
push
testl
aas
add
add
adc
stos
int
sti
inc
pop
xor
cmp
mov
repnz
jae
daa
cmp
push
inc
xor
cmp
fstps
add
adc
add
aas
popf
and
mov
push
add
mov
inc
push
sbb
add
mov
push
or
rsqrtps
adc
and
rorl
in
sub
arpl
xchg
push
fwait
add
stos
subb
stc
add
popa
test
jae
sbb
add
shrb
std
add
add
gs
mov
lods
and
sbb
jl
js
add
mov
ds
cmp
cmp
push
mull
jecxz,pn
sub
pushf
in
jb
and
xchg
pop
push
pusha
add
mov
lcall
stc
mov
mov
cld
and
mov
push
add
push
mov
xchg
sub
push
movsl
cs
in
pusha
dec
push
scas
into
data16
addr16
add
lock
or
push
mov
test
jae
pop
outsb
mov
roll
or
pop
test
cmp
addb
ljmp
pop
push
add
add
scas
push
bound
mov
ss
cmp
push
fdivs
cmp
cmp
je
or
push
pop
mov
sub
pop
fisubrs
or
pop
mov
xor
xchg
insb
add
cmp
or
hlt
add
daa
into
xlat
push
xchg
mov
or
pop
mov
pop
repz
mov
inc
add
add
sbb
jge
and
in
imul
ss
sub
das
sbb
dec
mov
jp
scas
idivb
sti
pusha
sub
cmp
movsb
add
aas
call
test
into
cmp
cmp
mov
xor
ret
inc
out
pop
inc
and
xchg
sub
add
add
jge
xchg
inc
xchg
rsm
jne
mov
cld
add
dec
std
or
xor
mov
cmc
inc
sbb
cmpsb
pusha
es
sub
jmp
pop
fdiv
imul
call
push
fwait
push
xor
loope
and
mov
add
pop
pop
imull
mov
adc
into
scas
cld
or
mov
lret
add
push
add
mov
push
fwait
into
sahf
inc
push
or
pop
lret
add
xor
jno
push
cltd
sub
fwait
call
add
adc
outsl
repnz
push
imul
enter
mov
insb
test
out
jg
add
imul
inc
pcmpeqb
into
jo
pushf
or
pop
add
and
out
add
or
data16
cmpl
inc
xor
sti
pusha
dec
add
or
phaddw
cmpb
push
lret
imul
add
pop
out
xor
loopne
and
xchg
push
add
mov
loope
cmpsl
xchg
fldenv
xor
mov
scas
test
mov
mov
sub
cmp
add
jle
add
add
mov
xchg
jp
cmp
mov
cmp
push
ljmp
ds
testl
push
lret
leave
mov
data16
push
and
add
or
add
mov
push
inc
add
inc
stos
inc
mov
jl
xlat
repz
cmp
mov
cmpsl
add
cmp
ljmp
leave
mov
or
fdivs
xchg
icebp
mov
lret
repnz
pop
push
or
adc
lds
cmpl
jmp
add
aas
add
add
shrl
cmp
loopne
xchg
pop
adc
push
or
and
push
popa
jl
cwtl
dec
andb
ds
daa
pop
push
jae
subl
mov
popa
add
ljmp
push
pop
les
dec
push
add
jmp
ljmp
lods
push
orl
lods
add
aad
rcll
out
lahf
add
mov
jbe
sahf
push
enter
adc
or
in
push
loopne
filds
mov
scas
xor
jne
mov
lret
data16
adc
je
sbb
and
add
cmp
inc
add
mov
mov
mov
push
push
jb
jo
cwtl
js
push
insb
push
data16
lahf
mov
mov
ja
movsl
mov
and
dec
push
sarl
push
mov
test
push
mov
sti
pop
add
mov
add
ds
adc
bndstx
xor
adcb
out
and
hlt
fisttps
mov
movsb
xchg
sahf
add
test
fcom
fwait
xchg
adc
push
pusha
in
aaa
cmp
loope
int3
daa
in
sbb
pop
es
add
enter
imul
lods
aaa
notl
mov
mov
add
dec
iret
fdiv
cld
mov
ds
sub
outsl
loope
cmpsl
ss
pusha
repz
lret
mov
xorl
xchg
addl
add
call
das
dec
or
test
and
mov
repnz
pop
faddp
pop
dec
out
out
jg
lcall
es
push
loopne
sub
fadds
sbb
mov
adc
push
mov
add
push
jnp
add
out
push
or
xor
dec
loop
add
loopne
cmp
xchg
add
loopne
xor
xchg
mov
pop
or
push
dec
sbb
add
mov
enter
sbb
repnz
mov
jg
cltd
inc
nop
imul
add
pusha
aad
sbb
and
inc
pop
into
pop
add
cmp
cmpsb
mov
jecxz
jb
imul
adc
aaa
dec
and
test
mov
jae
pop
push
sbb
push
cmp
in
insb
mov
scas
pavgw
jge
sub
jg
cmp
cli
add
xor
fbstp
mov
jge
sbb
ljmp
add
lods
xor
subb
ds
xor
in
dec
inc
clc
lret
pop
jo
roll
push
popf
loop
mov
add
adc
lods
or
mov
mov
xor
add
xchg
dec
in
sbb
mov
das
andl
pop
fsubr
cmp
enter
push
inc
adc
lock
sub
pop
mov
xchg
pushf
ds
jnp
ds
and
or
test
lret
out
xchg
sbbb
test
and
xor
xor
add
scas
out
pop
mov
les
xchg
and
push
inc
popf
or
aad
mov
or
add
lock
add
scas
mov
inc
jmp
lcall
ja
je
in
push
fsubrl
mov
subb
les
cwtl
outsl
jmp
add
adc
int3
sbb
mov
adc
js
pop
dec
adc
and
inc
or
or
sbb
cmp
aad
jns
add
sbb
mov
andb
jbe
mov
out
sbb
popf
push
mov
add
xor
sti
js,pn
js
divb
sbb
cmpsl
clc
fisubs
sub
add
jg
mov
rolb
in
and
add
outsb
xchg
into
lahf
dec
push
test
xchg
loopne
sbb
jne
add
mov
lock
imulb
add
or
or
cmp
pop
push
in
sbb
jmp
and
stos
add
sahf
daa
lcall
out
sbb
sub
ret
add
and
icebp
add
aas
fmulp
outsb
cmp
lods
in
add
mov
add
pushf
mov
and
add
mov
mov
adc
mov
push
loop
int
add
mov
adc
xchg
push
in
movsl
add
jle
jnp
idivl
mov
int3
cmp
jo
add
les
lods
fisttpll
and
add
repnz
mov
push
inc
repnz
xor
xchg
add
inc
jg
in
push
call
mov
add
pop
stos
xlat
jb
mov
xchg
movsl
add
sub
repz
adc
lcall
add
mov
push
aaa
mov
dec
pop
mov
xchg
mov
add
cmp
fwait
into
in
jl
xchg
push
insb
nop
fdivs
sbb
pop
insb
cmp
push
push
or
clc
xor
jnp
aas
arpl
mov
leave
mov
les
cmp
pop
fadds
jbe
push
pop
or
mov
dec
ljmp
cmp
sub
xchg
sub
stos
add
lock
or
xor
imul
xchg
lahf
mov
add
and
rorb
mov
inc
cmp
mov
push
in
out
nop
aam
lods
hlt
jno
das
and
dec
add
stos
mov
jp
add
push
stos
stos
or
fwait
mov
add
cli
push
push
add
sti
cs
push
mov
push
imul
leave
mov
cmp
out
mov
das
stos
and
cmpb
inc
cmpsl
mov
jne
add
xor
xlat
sbb
mov
es
mov
mov
ss
adc
arpl
push
sub
loopne
xchg
inc
icebp
or
addr16
mov
clc
mov
test
sbb
push
and
push
les
sub
nop
mov
jle
imul
push
fwait
insl
orb
add
in
pusha
movsb
dec
sahf
repz
addr16
xchg
shlb
and
pop
add
push
adc
lcall
push
lods
loopne
add
add
cltd
pop
aam
dec
pop
jns
inc
xor
sbb
jl
adc
add
or
cmp
lcall
mov
movsb
mov
push
lds
je
push
adc
addb
pop
mov
adc
std
pusha
fdivrs
in
inc
test
and
ljmp
loopne
mov
xor
ss
cld
test
repnz
jno
std
cmc
clc
add
mov
pop
daa
loope
add
clc
sub
jmp
aas
adc
sub
insb
pusha
lahf
pop
add
lods
dec
loop
ljmp
mov
push
imul
mov
test
inc
fisubrs
push
stos
shrb
cmp
xlat
add
add
sub
mov
adc
enter
mov
shll
mov
lock
das
jge
fs
xor
mov
mov
push
testb
adc
in
add
mov
test
jb
add
mov
push
lods
cmc
enter
add
and
xor
inc
adc
cmp
call
loopne
mov
flds
fsubl
dec
adc
and
data16
and
inc
dec
pop
fxch
cmp
imulb
sbb
lock
sahf
fst
add
cli
outsb
jg,pt
xor
rorb
xor
fwait
icebp
mov
mov
add
leave
mov
je
ret
add
nop
dec
test
push
mov
cmp
jbe
inc
gs
jb
enter
icebp
ja
and
push
cli
test
jae
push
cmp
clc
call
cmpsl
fadds
jl
sub
stc
push
mov
in
ja
xchg
jne
add
lret
add
jns
jle
push
sbb
addb
sti
test
sbbb
inc
js
add
mov
mov
mov
or
ret
dec
add
mov
and
cmp
mov
out
mov
outsl
popa
cwtl
pushf
add
mov
sbb
jno
dec
add
dec
loop
jecxz
cmpsl
push
add
jmp
sbb
stos
add
jle
popf
ret
outsl
sub
outsb
sbb
outsl
xor
test
out
xchg
aam
or
push
cmp
and
int3
pop
mov
xchg
test
mov
arpl
iret
xor
repnz
mov
add
inc
xchg
repz
ficompl
repnz
out
mov
ret
popa
fiadds
xchg
cwtl
jns
add
xor
dec
stc
call
and
dec
jbe
andb
push
rclb
or
push
mov
popf
xorb
mov
mov
mov
xchg
adc
outsl
ret
cld
and
and
push
add
sub
cmc
test
lds
add
sbb
sahf
mov
xchg
fs
adc
adc
lock
add
cltd
repnz
jge
add
or
cmpsl
add
or
add
pop
cs
pop
icebp
push
rol
add
push
cwtl
ja
and
xor
lcall
xor
stos
xor
in
and
cmp
cmpsb
decb
repz
insb
sbb
leave
or
or
test
pushf
mov
pusha
xchg
sbb
loop
inc
jo
imul
cmc
iret
mov
ss
cmp
xchg
and
sub
mov
jns
ja
add
jnp
testl
fidivrl
popf
cmp
fstpt
add
scas
faddp
push
xchg
dec
push
add
push
mov
dec
push
in
add
stos
dec
jl
sub
mov
jp
test
out
mov
mov
ljmp
pop
lcall
add
and
add
adc
rcrb
pushf
lcall
sub
add
pushl
push
mov
dec
daa
and
repz
xchg
sub
add
jns
xor
movsb
pop
cld
lahf
xchg
pop
gs
add
jbe
mov
mov
cmp
lds
lret
adc
pop
imul
fs
or
push
and
jb
pop
nop
in
add
arpl
lock
pop
mov
ret
or
fsubrs
mov
or
xchg
sti
leave
mov
and
push
stc
push
enter
add
or
cmp
test
push
or
dec
fwait
into
add
xor
push
or
add
lahf
lds
test
sbb
sub
inc
dec
test
xchg
push
add
push
xor
or
adcl
lock
sbb
sbb
mov
mov
pushf
push
push
cltd
inc
cmp
out
enter
jp
ds
mov
shll
imul
jle
test
addl
xchg
rclb
shr
xchg
mov
inc
in
cmpsl
adc
add
rcrb
inc
add
arpl
sti
xor
adc
push
shlb
cmpsl
jo
add
popf
mov
ret
sbb
add
test
adc
js
jbe
adc
rcrb
xlat
pmullw
shl
adc
pop
add
ss
sbb
bts
int
push
xchg
lret
loope
pop
leave
jne
ja
push
clc
ret
clc
pusha
sbb
add
imull
ud1
xchg
ljmp
stc
cmp
mov
fistpl
push
rorb
inc
dec
movsb
add
sarl
mov
xor
lcall
xor
popa
repz
ret
sbb
faddl
cmp
inc
sbb
push
push
and
pop
adcb
dec
ljmp
inc
jle
or
movsb
jge
push
sbb
add
jbe
cmovge
pop
lock
push
outsl
sub
orl
sub
xor
movl
js
aas
push
cmc
or
into
bound
mov
adcb
dec
pop
and
lret
add
cmp
stc
add
adc
mov
adc
cmp
sub
xor
xor
xor
orb
mov
iret
inc
jns
sbb
fdivrp
addl
pop
ja
lcall
orl
add
test
test
aas
add
adc
es
dec
cmpsb
cmpsw
add
sub
add
arpl
repnz
mov
rclb
push
xorb
je
in
add
mov
rcrb
mov
subl
adc
jmp
or
in
add
dec
pusha
push
mov
mov
daa
gs
pop
or
pop
xor
repnz
insb
cmp
sbb
push
add
add
push
inc
cmc
sti
add
imul
push
xchg
aas
cmp
xor
add
sub
movsb
js
mov
fdivrs
jbe
mov
push
add
push
pop
or
insl
test
jns
add
pcmpgtw
xchg
mov
xor
mov
add
sbb
inc
scas
mov
lods
xchg
andb
sahf
out
leave
ss
fldenv
sbb
xchg
orl
gs
xor
cmpsl
sub
lock
or
pop
inc
sti
insb
repnz
lds
inc
fadds
pop
in
lock
aas
aad
mov
pop
cmpsl
push
shl
fimull
or
sbb
mov
xor
add
bound
xchg
xorb
shll
dec
pusha
pop
insw
xchg
stos
add
stc
ror
add
das
nop
call
push
add
repnz
mov
push
push
ret
inc
das
orl
mov
cmp
in
jmp
add
cmp
incb
push
lds
shlb
mov
push
mov
add
add
adc
pop
pop
test
cmp
add
popa
cmp
and
insb
xor
xor
mov
add
adc
push
bound
add
addr16
and
js
add
cmp
mov
inc
faddl
sti
dec
rol
and
jl
add
testb
push
sarb
rorl
iret
add
jp
scas
pop
cld
and
xor
and
mov
add
adc
and
pusha
sbb
add
jecxz
das
sbb
ljmp
ret
add
pop
cmp
js
add
and
fisubrl
sbb
xor
sbb
adc
icebp
mov
leave
cmp
mov
mov
sub
inc
mov
in
fisubrl
in
movsl
xor
insb
sub
jnp
loop
xchg
push
jo
lcall
cmpsb
push
sub
inc
jns
pop
loopne
mov
lret
mov
fbstp
loope
push
mov
mov
mov
in
loop
xchg
leave
imul
push
imul
jbe
inc
pop
stos
sbb
sbb
cwtl
sbb
in
add
jp
lds
mov
mov
sbb
call
jo
add
movsb
mov
in
push
push
aam
stc
ret
lea
icebp
call
fistpll
sbb
or
aad
femms
xlat
int
movsb
and
add
inc
gs
mov
lods
sub
mov
aas
xchg
fld
bound
rcrl
cmp
or
xor
cmp
adc
inc
leave
inc
sahf
mov
xchg
jp
xchg
push
orb
lock
add
jns
shlb
outsl
add
add
pmaxub
mov
add
ss
add
lcall
mov
aaa
outsl
dec
nop
cwtl
fiaddl
pop
and
stos
mov
and
xchg
repz
sahf
out
cld
push
pop
dec
pop
nop
mov
add
dec
mov
bound
inc
sub
jb
cmp
and
inc
rorb
xor
cmp
push
testl
fnstenv
test
push
jg
arpl
pushf
sbb
push
sbb
adc
add
jl
mov
xor
adc
mov
add
push
in
add
cwtl
mov
mov
jne
dec
mov
push
cmp
mov
lret
addl
mov
push
fdivr
in
and
jle
add
iret
sbb
xchg
push
push
stc
hlt
or
cltd
add
inc
out
sub
mov
mov
aas
adc
sbb
dec
sub
movsl
sti
inc
add
jp
add
inc
adc
jle
pop
cmpsb
push
and
mov
push
mov
insl
xor
jp
call
pushf
in
arpl
push
cli
sbb
andb
insl
xchg
je
sbb
addr16
js
test
inc
and
xor
jae
js
mov
nop
addb
push
jp
ficomps
icebp
mov
push
cltd
loopne
rorl
leave
ja
push
je
xchg
ljmp
jo
cld
popf
or
arpl
call
sbb
stc
cwtl
mov
iret
and
jno
sub
rcll
punpckhdq
add
and
insb
loope
xchg
and
bound
and
xchg
in
cmp
push
dec
addl
test
ror
es
sti
cmp
jae
jmp
imul
fdivrl
adc
adc
inc
arpl
shl
cmp
push
lcall
shlb
adc
add
sub
add
ja
popa
in
or
addb
mov
faddl
mov
pop
and
cs
les
add
test
push
inc
xchg
add
int
add
push
pop
in
das
out
jno
rorb
cld
add
pop
mov
add
scas
add
je
mov
push
mov
mov
repz
mulb
lods
xchg
minps
rolb
imul
lahf
cwtl
add
jmp
int3
das
pop
mov
pop
shr
mov
roll
jo
push
add
fwait
sahf
pushf
sub
push
add
dec
cmp
in
in
mov
shll
leave
sub
sbb
adc
or
add
jb
push
mov
dec
add
add
pop
arpl
dec
mov
xchg
and
add
lcall
mov
out
sbb
lock
rcrb
cwtl
movsl
jb
add
push
fisttpll
nop
mov
loopne
sub
sub
test
mov
mov
pop
dec
push
jle
mov
sub
ffree
sti
add
testb
aad
cmp
ret
pusha
xor
leave
and
xchg
or
popf
loop
rorl
mov
repnz
pop
loopne
out
stos
jge
sti
or
inc
rclb
cmp
push
sbb
mov
test
fidivrl
iret
add
stc
test
xor
addb
mov
call
stos
pop
sbb
int3
adc
push
inc
or
push
lock
sbb
sub
jg
push
push
adc
add
or
sub
int
jno
or
incl
add
rorb
jo
fnstenv
add
addr16
mov
inc
xchg
lret
dec
push
push
add
notb
push
test
mov
shlb
inc
test
add
xchg
clc
sbbl
dec
xchg
test
xor
push
mov
or
loopne
aas
and
jbe
repz
mov
adc
pop
add
cmpsb
movsb
push
std
fsubrs
mov
insl
test
out
in
out
addb
stos
sub
das
cmp
sbb
aad
xlat
push
add
mov
mov
xchg
jg
shl
and
aaa
add
xchg
push
push
add
test
add
or
adc
xchg
push
jl
mov
sub
popa
add
ja
push
or
push
pop
cmovs
sbb
xchg
sbb
lock
xchg
dec
mov
out
out
xor
add
and
mov
nop
mov
incb
aam
out
xchg
mov
adc
lret
push
mov
faddl
sub
lret
es
and
add
loop
clc
add
jns
xchg
inc
int3
ret
jo
dec
or
adc
pop
jmp
xor
popa
adc
or
mov
add
ret
xor
pop
and
cmp
add
cmpsb
test
scas
lds
xor
push
xor
mov
mov
mov
and
and
xor
xchg
fsubrs
subl
sbb
aaa
pop
mov
add
sub
ljmp
cmp
inc
cmc
rcpps
aad
clc
jo
mov
cmp
sbb
jmp
fadds
sbb
imul
adc
inc
add
pop
mov
into
or
push
dec
push
add
and
jecxz
lock
add
mov
nop
pop
icebp
cmp
rorl
mov
xchg
mov
mov
ficompl
fcompl
subb
nop
lods
test
addr16
mov
loope
fldenv
cmp
xchg
insb
add
mov
lods
add
cmp
gs
pop
jmp
mov
add
es
je
rolb
daa
sti
outsl
sub
addl
insl
dec
add
roll
xor
xor
pop
push
data16
adc
add
inc
idiv
jae
pop
add
mov
mov
cmp
mov
add
idiv
sbb
add
call
mov
adc
and
setne
sbb
insl
push
add
out
push
mov
stos
pop
cmc
aad
mov
insl
aam
aas
ss
and
ljmp
sub
incl
cld
pop
lods
mov
xor
push
cmp
addb
dec
dec
lret
inc
rorl
out
push
sub
cmp
das
lret
fcompl
cmp
add
push
xchg
sub
addr16
add
inc
out
xor
imulb
mov
pop
ja
mov
subb
sub
sub
bound
aas
cs
cltd
mov
test
mov
sbb
test
sub
push
and
iret
cs
repz
arpl
pop
push
je
fwait
lock
or
add
cmpsb
mov
pop
imul
loopne
popa
xlat
jno
push
fcoml
in
pop
gs
mov
adc
add
push
rolb
jl
mov
in
daa
dec
mov
add
mov
or
xchg
xor
insb
mov
outsb
sub
fld
nop
inc
testl
pop
adc
xchg
add
insl
out
inc
iret
dec
in
xor
add
xchg
jnp
pushf
mov
pop
add
add
dec
lea
cmpsb
cmp
jbe
add
or
xchg
add
in
adc
mov
xchg
pop
pop
xchg
movb
fidivrl
mov
cwtl
mov
or
adc
subb
add
repz
mov
sub
rcrb
add
sbb
mov
lret
push
pop
mov
ja
add
and
add
cmp
jne
call
lock
mov
add
cld
pop
jae
std
mov
nop
icebp
lds
pop
add
mov
cltd
add
adc
mov
out
aaa
leave
lock
mov
or
imulb
subl
sub
enter
repnz
jb
lcall
cmp
or
mov
repz
xchg
xor
xor
stc
in
inc
mov
jecxz
fildl
add
stos
lret
dec
je
test
mov
push
test
enter
scas
das
jp
add
outsl
sub
xchg
add
add
fsubr
nop
sub
mov
sbb
in
insb
add
sbb
mov
mov
cmp
sbb
xor
enter
adc
popa
cmp
cmp
pop
divb
ficoms
out
adc
push
incb
mov
call
sbb
add
outsl
inc
xchg
adc
jns
add
int
insb
loope
xorl
dec
scas
mov
fstps
adc
pushl
jge
add
les
dec
cmp
iret
mov
xor
rorb
xor
cmp
js
cmp
sub
movsb
int3
jns
sbb
jae
sbb
hlt
push
add
dec
pop
ljmp
or
notb
jns
inc
testb
adc
iret
mov
push
xchg
xor
scas
add
enter
loopne
add
mov
rorl
verw
sub
xlat
push
testl
push
rorb
fsubr
testl
int
lods
and
clc
stc
add
ret
mov
in
add
mov
movsb
je
add
scas
loop
shr
add
addr16
movb
or
jmp
aad
fiaddl
mov
jnp
aam
pusha
add
roll
xchg
add
sbb
leave
add
mov
call
cmp
jns
rorl
pusha
enter
mulb
or
into
ss
add
aaa
push
loop
call
imul
add
sahf
mov
add
push
push
dec
jge
add
push
adc
dec
inc
cmp
cmp
sti
pop
lahf
jmp
pop
dec
lret
leave
jne
xor
and
lock
repz
xlat
push
adc
jecxz
jmp
nop
daa
add
sub
fwait
cmpsl
cwtl
jnp
das
fcoms
mov
mov
aas
sbb
add
test
sub
gs
imul
add
insb
and
mov
xor
jns
xchg
inc
imul
mov
cwtl
data16
pop
cs
add
cmp
outsl
scas
or
out
pushf
push
daa
add
stos
mov
add
mov
inc
je
insl
mov
and
inc
fmul
stos
jle
add
jl
mov
mov
in
inc
add
jg
cmp
xor
fsubs
jmp
insb
or
mov
lods
push
add
cld
fs
fwait
adc
mov
mov
js
add
push
clc
cmp
fiadds
mov
mov
and
cmp
sub
arpl
inc
xor
lea
icebp
bound
cmpsb
shrl
push
add
fdivs
lods
cli
mov
iret
sbb
hlt
rcrl
xchg
jmp
add
cmp
test
das
lcall
rol
push
shlb
pop
add
push
cmp
and
lret
jecxz
mov
xor
pop
loop
les
mov
mov
jp
cmp
jo
and
call
mov
rorl
insb
loopne
pop
add
mov
mov
mov
jp
lods
add
add
jmp
xchg
xor
sub
aad
pop
cmp
imul
inc
cmp
cmp
sti
clc
adc
jae
test
ja
lahf
stos
add
sbbl
mov
jnp
pop
add
dec
and
xor
ret
add
cmc
xchg
sub
repz
add
and
jb
or
test
and
add
mov
scas
xchg
xchg
insb
or
sbb
adc
mov
add
pop
data16
and
cli
outsb
lock
mov
das
or
add
push
cmp
xor
into
and
inc
loope
scas
sub
jmp
or
leave
cmp
mov
into
sti
lcall
jmp
pop
std
add
stos
adc
jo
sbb
ficomps
int
mov
and
scas
add
sti
add
js
dec
mov
and
jmp
in
dec
add
imul
lahf
jl
ljmp
add
out
pop
aaa
add
add
jge
gs
enter
fwait
pop
test
cmp
mov
movsb
adc
shlb
dec
pop
jecxz
pop
imul
sbb
cs
add
daa
or
lret
aas
imul
scas
mov
ret
pop
add
add
xor
cmp
jo
pop
dec
inc
daa
inc
or
loop
push
dec
add
in
shll
call
sbb
orl
aas
inc
cli
and
ret
int
xor
add
mov
andb
es
mov
add
and
inc
sub
cltd
push
fcoml
push
add
mov
sbb
dec
sbb
mov
pop
les
aam
push
adc
lcall
inc
call
rcrl
xor
jl
push
rorb
test
add
push
push
xor
xchg
sub
das
or
adc
rorb
leave
mov
sbb
call
ret
push
mov
and
daa
pushf
iret
movsl
out
mov
add
inc
add
sub
movsl
cmp
ljmp
js
rcrb
pop
mov
loopne
mov
inc
cmp
cmp
add
pop
rolb
jge
arpl
jo
rcrb
add
pop
mov
loop
add
mov
pop
rclb
add
sbb
mov
sbb
jp
aam
loopne
push
cwtl
andb
sub
mov
xor
fldl2t
rcrl
and
hlt
rolb
sbb
stos
mov
or
sti
sbb
or
out
enter
sub
mov
dec
lods
dec
add
ret
cmpsl
sbb
pop
xchg
aas
push
push
xor
add
movsl
imul
push
dec
xor
stc
mov
and
xchg
and
mov
add
inc
jb
add
addl
outsb
jno
cmp
cwtl
or
jo
dec
add
push
lods
xor
imul
in
fisttpll
jl
jmp
adcb
or
xchg
loopne
jns
xor
and
or
add
xorb
cmpsb
inc
push
and
mov
testb
dec
xchg
je
mov
shrl
aas
push
xchg
andb
icebp
push
cmp
cwtl
fstps
or
movsl
push
les
push
jl
add
adc
xchg
add
push
mov
pop
add
xchg
cmp
add
xor
fdivrl
pop
call
ftst
pop
les
inc
add
cmc
sbb
call
jae
push
cmp
push
xchg
aas
sub
aaa
aam
jbe
push
mov
mov
imulb
jae
cwtl
cli
add
xlat
lock
ljmp
adc
daa
fnstsw
loopne
mov
mov
clc
jl
mov
inc
cmp
mov
popf
clc
cmp
add
xor
push
nop
cmp
push
je
aam
add
inc
adc
data16
mov
int3
sbbb
cmpsl
cmp
mov
into
inc
imul
fdivrs
push
jecxz
cmp
or
inc
in
loopne
jo
jmp
xchg
scas
insl
add
mov
push
aam
mov
movsb
cmp
mov
rol
cmp
sub
or
js
ljmp
and
or
pushf
sbb
sbb
add
test
fwait
pusha
lock
and
es
les
xor
add
sbb
add
push
adc
imul
push
cmp
add
loope
dec
push
aad
lds
mov
xchg
mov
inc
push
jl
mov
xchg
lds
enter
lret
out
cmovs
fwait
pop
xchg
ret
add
jb
cmp
lods
roll
cmp
xlat
push
xchg
jne
cwtl
add
mov
push
xchg
xchg
add
xor
mov
add
xorps
and
sbb
adc
sub
push
mov
add
xor
add
das
sbbl
insb
out
dec
aas
push
sub
fwait
shr
add
test
push
imul
inc
add
shrb
dec
xor
mov
dec
call
aaa
mov
pop
add
sub
add
mov
and
add
xor
add
dec
mov
sub
add
popf
imull
popa
xor
mov
mov
les
pushf
decb
xor
cmpsl
dec
add
jmp
inc
mov
ja
addb
sbb
dec
les
pshufw
and
xchg
inc
inc
sub
jo
lahf
clc
push
or
stos
test
movsl
jmp
and
lods
cltd
xor
jl
add
loop
add
rcl
xchg
ljmp
or
je
fwait
xor
add
int
mov
cwtl
xchg
sbb
add
test
stos
sar
add
call
out
inc
xchg
cmp
sahf
or
add
lods
aam
jne
xor
jns
sti
sub
pusha
and
pop
int
sbb
fisttpll
mov
xor
add
or
sbb
add
js
inc
cld
popl
rcr
nop
fmull
pusha
jge
and
or
sbb
dec
rolb
add
stc
add
or
orl
add
shrl
mov
mov
lea
push
xor
pop
sahf
jb
push
mov
int3
repz
cmp
and
jmp
test
add
cs
cmpb
add
inc
cmpsb
push
and
out
sub
mov
mov
nop
xor
adc
loopne
js
mov
mov
ret
add
pop
push
not
ret
jns
pop
mov
mov
stc
iret
and
xor
stos
jbe
add
cmpsl
shlb
add
call
lcall
push
xchg
pop
aas
cs
cmpsl
int3
add
pop
cltd
jns
inc
ret
mov
pop
in
push
sbb
dec
fmuls
imul
or
lock
push
jmp
adc
nop
dec
sub
dec
dec
add
and
lods
pop
push
mov
sbb
add
pusha
mov
popf
pop
add
xlat
outsb
int3
xchg
pop
adc
sbbb
and
movsb
jl
inc
add
mov
test
mov
cmpsb
ret
add
lahf
xchg
adc
scas
cmp
cmp
push
mov
loope
jmp
cmpsl
rep
cli
mov
push
hlt
mov
das
sub
setl
or
and
adc
mov
sub
rorl
cmpsl
movsl
jbe
pop
and
cld
add
mov
dec
push
or
fsts
fistps
std
and
lods
sbb
mov
fwait
dec
pop
popf
popl
pop
jno
fildll
jl
enter
push
xlat
clc
mov
add
mov
cld
ss
push
fbld
jg
ds
fs
add
outsl
add
out
or
sti
pushf
add
push
xchg
fdivs
insb
add
cwtl
cld
scas
push
pusha
nop
add
aad
rcr
aam
add
sub
pop
push
gs
addl
movhps
add
ret
push
int3
and
aad
in
cmp
add
jl
insb
jecxz
jno
test
sbb
mov
in
jnp
sahf
stos
in
sub
and
push
popf
aad
lds
out
mov
sbb
push
add
sti
cmpl
adc
mov
and
loop
sahf
xchg
sbb
int3
jg
mov
outsb
cmp
or
pop
shl
jno
shlb
sub
sti
ret
sub
push
mov
jo
outsb
push
mov
cmp
loopne
add
dec
js
and
lock
pop
inc
addb
jl
add
call
push
shrb
xorb
add
gs
inc
popf
aam
stos
add
pop
dec
or
out
mov
outsl
push
daa
popf
add
fs
outsb
adc
add
sbb
cmc
push
add
outsl
lods
std
add
xchg
fmull
out
mov
aas
sbb
pop
sahf
iret
pop
lds
dec
mov
or
repz
cmp
out
mov
scas
ds
in
fnstenv
add
sahf
adc
cmp
and
call
ret
xchg
subb
int
std
add
sbb
lcall
les
cltd
and
jae
or
xor
jbe
jmp
je
push
test
jne
mov
mov
or
jb
mov
add
adc
and
inc
push
push
push
add
pop
lock
imul
scas
pop
addr16
es
add
xor
shlb
ret
aas
ja
hlt
movsb
sub
xor
add
push
pop
xchg
iret
and
jo
sbbb
fcoms
mov
cld
mov
pop
mov
sub
js
push
inc
adc
sbbl
sbb
psubw
mov
out
xchg
std
add
sbb
jl
xor
or
cltd
ss
mov
jbe
add
jae
cmp
lret
cmp
push
add
mov
das
out
add
cmp
mov
add
dec
xchg
inc
xchg
ficomps
pushf
sbb
push
pop
mov
dec
cli
mov
in
test
push
and
mov
mov
push
push
mov
jle
xor
repnz
call
add
pop
aad
in
mov
imul
lret
sbb
xchg
test
mov
mov
add
stos
lods
jb
jle
push
add
loopne
stc
xchg
nop
out
add
insl
sbb
jnp
jge
and
movsb
add
sub
subl
pop
add
lods
je
sbb
xor
into
leave
loopne
iret
xorl
mov
push
into
in
loope
jecxz
xchg
adc
lds
jl
rclb
pop
sub
rorb
pop
aad
sbb
and
imul
pop
loopne
testl
inc
xchg
dec
xorb
and
pop
and
pop
out
mov
inc
rclb
arpl
lods
mov
or
je
mov
dec
movsl
sub
cmpsl
add
push
clc
call
inc
test
insl
es
icebp
jb
leave
pop
pop
pop
rolb
pop
sbb
cltd
fistl
icebp
add
ret
leave
mov
inc
pop
das
add
or
icebp
jmp
lock
andb
psubd
int3
dec
jnp
mov
pop
push
fsubrl
push
aas
mov
add
jb
and
js
add
into
jno
push
rorb
cli
jbe
or
push
add
pop
and
insl
in
add
into
xchg
xsavec
cli
jge
pop
xor
movsb
inc
mov
inc
add
test
lods
add
fdivrs
push
cmpsl
hlt
xor
add
cmp
sbb
pusha
sarb
sbb
cmpb
shrb
jns
cs
leave
pusha
neg
mov
pop
fidivrs
pop
sbb
add
pop
loop
xchg
mov
add
add
sbb
scas
push
cmpsl
sub
sub
aad
ja
xadd
cmp
shlb
mov
inc
or
mov
xchg
jbe
mov
push
roll
xor
bound
sbb
pop
cmpsb
and
lret
jle
cmp
cmp
lock
mov
add
lcall
add
sbb
es
jb
xchg
pusha
sbb
adc
sub
fldt
sbbb
adc
insb
lods
or
pop
and
dec
orb
clc
dec
adc
add
cmp
cmc
and
xor
xchg
push
push
sahf
sub
icebp
push
adc
sbb
sub
adc
sti
ficomps
rolb
jb
mov
or
sti
pop
add
mov
adc
hlt
cmp
xchg
cmpl
and
jmp
push
or
aam
movntps
cmovb
in
lods
and
addb
gs
stos
xlat
pop
aam
cmp
pop
mov
dec
jl
adc
sub
push
mov
cmp
gs
dec
fidivrs
add
sub
sahf
add
jecxz
movsl
push
shll
cmp
and
rol
faddl
xchg
dec
sbb
dec
mov
bound
sbb
adc
mov
add
cmp
add
mov
test
xor
pop
sbb
sbb
or
cmp
cwtl
dec
add
push
push
es
dec
dec
xor
hlt
or
push
out
pop
pusha
cs
add
jl
imul
cmp
fdivr
add
das
add
mov
rolb
inc
pop
push
pusha
sub
or
inc
and
xor
or
mov
fistl
mov
jnp
pop
cmpb
dec
jmp
add
shl
frstor
lods
out
gs
push
cwtl
rcrl
and
inc
cmpb
xchg
ja
repz
add
ficomps
cli
mov
ds
repnz
lods
add
cwtl
sarb
xchg
and
dec
rorb
sbb
adcl
inc
mov
jo
lods
jle
stc
xchg
js
out
lret
jns
faddl
cmpsl
inc
sbb
adcb
add
lret
xor
dec
and
sbb
mov
push
shlb
xor
popa
sbbb
mov
xor
inc
cmp
dec
leave
daa
add
sub
or
fwait
inc
mov
lret
lahf
loop
ror
mov
add
xor
dec
add
xchg
ljmp
sbb
sarb
gs
add
lcall
scas
inc
push
mov
adcb
fucomp
divb
xor
xchg
ja
pop
pop
test
or
mov
loopne
adc
aam
jmp
popf
cs
inc
es
stos
add
dec
std
jecxz
test
fidivl
int3
faddl
mov
in
movsb
aas
sbb
inc
fstpt
std
mov
inc
push
xchg
sbb
je
pop
mov
push
adc
sbb
xor
ret
imul
sub
scas
inc
jns
scas
jg
andb
dec
ret
out
cs
lds
add
sarb
sarl
sbb
mov
jne
inc
xchg
dec
push
dec
add
data16
rorl
cmp
push
lea
mov
pusha
sbb
in
lods
inc
inc
adc
scas
add
flds
add
dec
in
push
push
adc
sbb
pop
inc
ds
add
lock
xor
xor
cmp
xchg
in
pop
push
add
cmpsl
addb
dec
add
inc
pop
movsb
add
outsb
push
push
or
pop
add
add
xor
add
mov
loope
rclb
pop
mov
outsb
cmp
cltd
lret
or
add
pop
hlt
dec
pop
pop
dec
or
mov
pop
ljmp
les
mov
outsb
jnp
clc
jae
ds
cmpsb
lret
add
adc
scas
jne
jo
pop
adc
or
je
int
movb
testb
addr16
lcall
add
stc
inc
dec
jae
inc
add
es
adc
iret
sar
test
mov
add
pop
ljmp
xorb
sti
movsb
fstpt
inc
lock
ja
aas
sub
add
push
xor
and
jmp
push
call
adc
xor
outsl
add
push
sub
xor
addb
repz
popf
jb
push
jge
add
mov
loopnew
or
adc
stos
mov
add
in
ret
pop
mov
adc
add
out
jo
add
in
loop
loopne
add
inc
das
add
daa
ja
sub
add
and
adc
xlat
pop
jb
mov
adc
pop
xor
add
fiaddl
in
mov
xchg
movl
into
jp
loop
mov
in
mov
pop
fstps
sub
in
dec
loop
lock
stc
xor
xchg
and
bound
nop
fdivrl
jno
dec
inc
dec
or
add
pop
fcomps
and
add
mov
enter
push
xor
cmp
lds
push
loopne,pn
adc
enter
sub
and
xor
and
sbb
sub
ret
cmpb
inc
test
inc
add
and
push
idivb
jb
sub
mov
push
mov
mov
xor
and
adc
pop
cmp
mov
push
add
or
add
es
dec
or
insb
movsl
pop
adc
add
cmc
and
jnp
cmpsl
fwait
add
arpl
fcomip
mov
add
cli
xchg
jae
stc
xchg
fdivs
mov
xchg
cmp
ret
jmp
stos
push
rcr
mov
sbb
mov
jle
outsb
ljmp
sub
adcl
test
xor
pop
stos
jle
mov
lcall
add
push
inc
mov
lret
add
and
fwait
pop
adc
sub
lock
adc
dec
jmp
enter
ret
sub
mov
mov
std
pop
adc
sbb
lret
add
pop
xchg
subb
loopne
into
lds
add
or
lods
sub
push
fisubrs
jno
cmp
ja
push
cwtl
int
sub
xchg
fists
insl
inc
sub
dec
leave
mov
fwait
add
das
scas
into
add
aaa
jg
cmp
add
pop
xor
lret
pusha
inc
jmp
jo
add
or
push
scas
pop
jecxz
lahf
inc
imull
cli
cmp
lret
adc
sub
pmaddwd
push
jae
pusha
es
cmpsl
in
jl
and
add
and
aad
int3
rcrb
add
dec
adc
jns
or
lods
mov
inc
insb
add
push
dec
xlat
add
sbb
into
mov
inc
mov
push
inc
jno
or
fimull
lahf
mov
adc
xor
inc
add
aas
shl
add
and
or
pop
jg
mov
cwtl
into
mov
cmpl
add
sub
aas
ret
and
xor
fwait
pop
xchg
dec
xchg
repnz
les
mov
sub
ficompl
xor
ljmp
pop
xor
dec
shr
adc
push
pop
mov
test
pop
stos
cwtl
pop
add
mov
in
add
fnsave
jo
jecxz
and
lret
in
add
les
add
cwtl
mov
and
jg
or
sti
mov
cmp
cmp
add
repnz
pop
add
stos
popf
or
gs
add
jo
push
sbb
aam
stc
push
dec
xchg
adc
filds
mov
movsb
mov
pop
xchg
cmp
sarb
and
jo
adc
and
pop
rolb
pusha
nop
sub
int
adc
jbe
mov
rorb
sbb
pop
add
insl
ja
not
roll
cmp
or
pop
out
cmpsl
in
addb
jmp
aam
iret
daa
push
jb
add
sub
push
or
push
pop
cmpsb
add
cmp
jmp
add
pop
and
imul
sub
lods
add
icebp
add
jmp
call
dec
cld
shl
sbb
mov
jp
iret
mov
xor
and
hlt
lea
cmp
jno
scas
popf
nop
addb
dec
hlt
mov
xorb
fsubr
add
lcall
popa
and
inc
insb
adc
ret
fdiv
pop
int
es
add
pop
in
aas
push
add
js
fdivs
pop
add
int
lea
add
testb
pop
cmpl
jbe
fcomps
aad
cmp
clc
orb
pop
sbbb
loop
add
push
int
sbb
insb
or
jg
inc
in
pop
int3
add
mov
jo
test
mov
sub
data16
lods
adc
jle
fwait
int3
fsubrs
outsl
iret
cwtl
mov
ds
scas
add
mov
dec
sarl
add
aas
sbb
mov
or
mov
jmp
aam
movsb
sbb
and
in
shlb
add
je
or
jmp
out
add
data16
cmpsb
lahf
hlt
push
jecxz
test
push
mov
gs
jae
add
aas
pop
rdtsc
testb
mov
cmpsl
mov
xchg
mov
inc
add
mov
out
mov
dec
mov
repz
push
push
rorb
add
arpl
aaa
adcb
lea
jecxz
sub
fmul
jnp,pn
jne
ficomps
or
roll
xchg
clc
add
dec
mov
sub
push
or
add
gs
jbe
add
mov
testl
mov
cmp
pop
imul
lea
sub
add
sub
cmp
mov
aaa
add
lods
rcl
addb
xchg
mov
dec
add
mov
sbb
call
xor
add
push
sub
mov
lahf
cmp
inc
jae
add
insb
sub
imul
or
orb
add
dec
inc
dec
mov
data16
orl
shlb
rolb
mov
in
and
xor
das
cld
pop
ss
jle
out
add
push
jbe
pushf
lcall
outsl
or
add
dec
ret
jmp
das
fdivs
out
mov
test
add
pop
or
popf
je
add
stc
call
add
sahf
inc
addr16
mov
repnz
push
add
jecxz
test
mov
bound
or
push
stos
mov
hlt
or
push
pop
xor
dec
lret
sarl
pop
pop
mov
add
lea
add
cmp
sar
movsl
or
push
mov
push
addr16
xchg
jmp
daa
adc
aam
jb
xor
fildl
add
add
addr16
lods
fcom
mov
bound
loope
mov
xor
mov
pop
mov
sbb
rol
add
cmp
add
ror
in
xchg
je
adcl
add
repnz
xchg
fadd
jle
mov
mov
add
jnp
out
ljmp
add
fcoml
sti
push
nop
pop
cmpsl
dec
add
jmp
add
jno
jns
cwtl
add
addr16
xchg
addb
int
add
js
push
div
stos
mov
pop
push
rclb
in
cmp
mov
push
sub
lea
sub
sbb
test
mov
mov
xchg
and
add
or
xchg
inc
incl
out
shr
add
mov
icebp
or
xchg
sub
mov
mov
imulb
stos
and
mov
test
mov
subb
in
test
xchg
andb
adc
mov
xor
fidivrs
inc
test
push
push
mov
hlt
loopne
ret
mov
fistps
mov
lods
scas
mov
aad
jnp
xor
ds
je
mov
fsubl
add
push
jno
test
add
scas
or
sbb
jl
add
xchg
jbe
lock
add
cmp
sbb
addr16
in
shr
xchg
dec
add
ret
shl
ljmp
hlt
push
fwait
add
loop
out
jae
or
stos
xor
int
test
insb
loope
jno
jns
cmp
rcrb
mov
sbb
mov
addb
pop
jno
push
xchg
call
jecxz
fisttps
rclb
test
or
dec
push
int3
jp
ja
add
enter
cmc
outsl
mov
movsl
sbb
mov
mov
orb
js
fsubrl
or
mov
icebp
mov
mov
adc
test
clc
mov
jge
dec
and
xchg
orb
add
pusha
xlat
roll
sub
fdiv
jl
and
into
out
fimull
jno
jbe
add
das
mov
sub
jb
cltd
pop
jl
jmp
mov
gs
dec
pop
adc
pop
test
mov
jge
sbb
aad
add
and
fnstenv
mov
adc
xchg
cmp
or
or
out
dec
adc
aaa
roll
insb
test
out
lret
inc
add
imul
xor
lret
xchg
stc
into
loopne
test
cli
jecxz
imul
mov
std
enter
icebp
mov
movsl
xchg
sbb
add
add
clc
pop
sub
dec
mov
mov
adc
loop
push
jmp
cmp
mov
loope
mov
sub
shll
xchg
imul
push
sbb
ficoms
adc
jmp
dec
cltd
mov
lods
lret
inc
add
mov
and
pop
std
jmp
sahf
scas
add
lret
add
push
pop
add
sbb
into
lods
xorl
pop
shlb
sahf
cmpsl
adcb
adcl
jo
lahf
add
shrl
and
sbb
movb
cmp
pop
dec
das
jmp
inc
xchg
mov
lods
pop
fisttps
fs
cld
lea
add
xchg
mov
xchg
xchg
inc
cltd
push
adc
out
mov
and
mov
add
scas
add
loop
add
fs
cld
out
jg
cmp
dec
lahf
mov
ror
cmpsl
test
sub
jp
inc
in
fiadds
cmovs
or
mov
jns
inc
scas
add
cmp
sub
out
sbb
jno
fldlg2
xorb
test
outsl
pop
insb
sbb
add
aaa
cli
mov
push
jnp
add
dec
mov
ss
cmp
in
pop
ljmp
jo
mov
jae
xchg
add
xchg
aas
fnstcw
xchg
add
jge
pusha
xchg
add
aas
out
js
jae
cwtl
or
test
dec
inc
lret
shll
add
jne
ret
fwait
add
ds
fldenv
std
cld
fsubl
mov
push
insl
jno
cmp
adc
sbb
shll
outsb
out
add
cmpsl
test
enter
cmp
or
add
fwait
add
jns
pop
inc
call
stc
mov
lahf
add
mov
les
pusha
and
cs
stc
test
cmc
repnz
mov
sbb
push
stc
pop
scas
inc
xchg
dec
int3
imul
inc
mov
aam
outsl
inc
dec
xchg
add
push
clc
jns
sahf
mov
pusha
cmp
in
add
cwtl
push
mov
je
cmp
push
sbbb
clc
dec
xor
sub
aas
and
add
xchg
add
sbb
mov
loope
lds
sti
sahf
fmul
fwait
lret
push
addr16
incb
bound
and
aad
mov
fcmovb
xorl
inc
lahf
add
enter
sbb
shl
ret
push
cmp
jecxz
fidivrl
nop
jl
push
pop
aam
add
push
cld
insb
repnz
outsl
dec
xchg
out
xor
mov
arpl
push
jl
ss
outsb
push
add
xlat
loopne
jnp
cltd
rorb
orl
add
xchg
cmp
pop
mov
mov
testb
lcall
cmp
pop
pop
fcomps
fadds
xchg
push
cli
cld
roll
loop
in
push
in
pop
mov
cmpb
push
sbb
pop
insl
dec
sub
add
and
movsb
add
jmp
in
add
xchg
ljmp
rorl
dec
add
dec
pusha
mov
fistpl
sub
adc
add
cmpb
adc
jnp
aas
pop
sahf
sub
mov
pop
add
mov
sub
or
push
aam
sbb
pusha
inc
insb
add
pop
jecxz
scas
jmp
mov
call
mov
sub
dec
xlat
mov
lds
pop
movsb
hlt
lcall
rorl
in
xacquire
add
inc
pop
add
iret
leave
pop
fsubs
add
out
in
jge
add
xor
add
icebp
cmp
aaa
xchg
jno
je
add
aad
cmp
pop
adc
fcmovne
pop
add
insb
jge
mov
add
adc
test
or
hlt
ret
je
sti
mov
or
mov
sbb
out
jp
adc
add
pop
scas
xor
jle
jle
sub
inc
jae
testl
adc
mov
add
xchg
imul
mov
sbb
inc
das
inc
dec
loop
xorb
stos
cmp
fmul
and
pushf
test
imul
cmp
pop
or
int
gs
jg
mov
in
inc
cmp
add
push
int
mov
sub
inc
mov
xchg
lock
int
mov
in
inc
sbb
ltr
es
outsl
jnp
sbb
and
je
pop
and
and
add
jo
sarb
xchg
jl
dec
out
pusha
push
aas
xchg
xchg
add
pop
fsts
mov
jb
aaa
adc
out
test
cltd
sbb
push
add
jge
lea
and
sbb
push
add
clc
xor
cmp
cltd
xchg
subl
add
out
sbb
repnz
arpl
pop
xor
int
add
fldt
repz
pop
lds
dec
and
aas
xchg
push
add
arpl
test
js
sub
push
mov
lods
lcall
incl
cmp
pushf
pop
mov
cmp
jae
out
ror
hlt
or
adc
sbbb
mov
sbb
add
in
lcall
jp
mov
add
add
cld
mov
aas
int3
push
add
lret
stc
leave
add
ret
enter
add
rcr
xchg
in
mov
popf
add
fnstsw
shll
push
add
cmp
push
addr16
ret
ds
ja
jno
or
push
aam
xchg
inc
lock
add
mov
nop
dec
add
xchg
mov
call
loopne
jne
cmp
pop
clc
add
shlb
or
cmp
out
add
fists
insb
daa
jl,pt
adcb
mov
dec
mov
loopne
push
or
cs
fmull
pop
and
leave
sub
mov
adc
lods
lret
add
jb
cmp
fisubrl
jle
addb
sbb
push
loope
or
addr16
sbb
mov
mov
adc
addr16
add
cld
cmc
lcall
sbb
adcl
push
inc
jno
add
add
sahf
bound
mov
pusha
imul
shlb
fdivs
add
icebp
out
sbb
or
mov
jecxz
push
sub
adc
jo
adc
scas
rorl
test
dec
shlb
mov
mov
out
xor
add
movsl
add
pop
push
xchg
xorl
fnstenv
mov
mov
fwait
stos
test
push
sbb
sub
fcmovnbe
int
addr16
andl
pushf
sub
ret
and
mov
shrb
push
lret
shlb
jle
and
inc
in
jp
sahf
jae
sub
add
pop
pop
js
pop
sbb
jbe
jecxz
out
data16
jp
xchg
sbb
sbb
sbb
xor
lock
jae
shlb
add
xchg
into
mov
inc
cmp
testb
push
lcall
iret
imul
cmp
mov
ss
insl
xor
sub
not
aaa
cltd
jg
add
scas
pop
push
add
flds
outsb
cmp
adcb
jbe
add
jp
inc
mov
cmpsl
sbb
mov
shrb
add
jecxz,pn
loopne
add
cwtl
pop
shr
adc
imul
and
xor
add
lret
xor
pop
loop
xor
dec
cmp
adc
pop
and
andb
mov
into
ljmp
xor
or
fmuls
inc
xchg
mov
add
dec
inc
rol
or
mov
sbb
add
push
jl
sub
mov
or
pop
sbb
add
loopne
in
popf
xchg
adc
imul
dec
inc
push
mov
js
adc
ret
and
gs
addr16
dec
rolb
add
cmp
js
cvtpi2ps
xchg
mov
lods
xchg
je
movsb
adc
add
jno
mov
push
lret
std
mov
push
mov
aas
add
mov
xchg
add
dec
xor
ss
pop
shrb
clc
add
pop
fmulp
test
add
shlb
adc
add
jo
xchg
bound
sbb
stc
sub
loopne
jp
adc
xor
and
enter
xor
dec
int
cli
lcall
fistpl
cmpsl
push
and
lods
push
loop
add
outsl
punpcklwd
add
gs
jp
inc
or
cmp
and
fwait
add
cmc
clc
jle
mov
mov
mov
lret
pop
jo
icebp
push
scas
sbbb
inc
add
push
xor
aaa
sarl
lret
pop
lods
mov
cvtdq2ps
adc
and
and
test
add
or
shlb
mov
dec
mov
fidivrl
add
cmp
or
adc
pop
mov
cmp
and
xchg
out
push
jnp
pop
cltd
jecxz
inc
add
aaa
int3
dec
and
add
dec
jbe
add
rcll
add
call
xchg
andl
mov
dec
or
cmp
ljmp
cld
pop
iret
xor
dec
sub
add
outsb
addr16
pop
mov
inc
addb
mov
cli
jle
mov
call
adc
mov
hlt
icebp
imul
out
out
jb
inc
mov
movsb
movsl
mov
add
je
add
xor
push
lds
into
pop
cmp
or
mov
add
add
roll
fistpll
subb
data16
inc
loopne
xchg
outsl
popl
sbb
push
add
cltd
adc
enter
jge
jnp
in
or
adc
mov
add
jae
jmp
mov
mov
inc
cmc
movsl
or
mov
rol
and
mov
add
mov
jns
add
lock
adc
pop
shrb
sbb
outsb
jecxz
sbb
das
add
inc
inc
lods
xor
push
es
mov
and
enter
dec
ret
add
add
ljmp
in
add
mov
movsb
stc
lock
cld
leave
xchg
mov
ljmp
jbe
adc
mov
mov
jb
leave
dec
and
icebp
pop
sub
push
pop
out
add
mov
add
sti
xlat
cmp
lock
add
lret
leave
sahf
cmp
adc
adc
lahf
add
lahf
jecxz
mov
jbe
and
jle
popf
inc
and
hlt
add
shrl
ja
femms
jnp
pop
jle
inc
pop
in
sub
sbb
les
ljmp
push
test
popa
lock
movsl
xor
loop
add
aad
pop
hlt
pushf
xchg
jmp
mov
stc
jp
sbb
sub
dec
cmc
pop
add
pusha
pop
mov
mov
dec
cs
xchg
inc
sbbl
pusha
mov
push
pop
ret
imul
loop
hlt
add
inc
mov
lds
xchg
adc
notl
mov
cs
cmp
xchg
jbe
add
addr16
mov
int3
fxch
rclb
and
pop
xchg
repz
sub
rolb
mov
add
les
cmp
cmp
pop
adc
cmc
sbb
dec
jne
push
add
iret
add
mov
lret
cs
and
lods
add
sbbl
or
cmp
out
popf
sbb
cmp
add
or
jle
jg
xchg
mov
daa
mov
add
add
sbb
ret
mov
jl
cmp
cmp
sbb
mov
add
xchg
cmp
cmp
cmpl
pusha
xor
das
pusha
lds
push
jne
or
sub
lahf
out
rclb
cmp
mov
cmp
inc
insl
scas
lock
jecxz
or
lods
sbb
and
inc
loopne
popl
fcomps
inc
lds
mov
leave
or
scas
add
jg
xchg
lea
add
inc
pop
in
mov
or
add
enter
mov
ficoml
inc
loopne
inc
adc
out
jl
add
stc
dec
in
pop
or
mov
adc
dec
jecxz
shr
clc
int
sub
or
sub
sub
mov
movsb
lods
int3
push
mov
and
out
in
or
sbb
mov
mov
test
bound
mov
add
jb
into
add
out
add
stos
mov
push
xlat
xchg
rclb
mov
push
xor
in
sub
sahf
mov
cs
lret
sbb
push
cmpsl
iret
or
add
scas
cmp
push
sahf
stos
inc
add
sbb
scas
push
call
shll
add
jp
subps
pop
inc
test
and
aas
loop
add
jmp
jns
cli
and
pop
pop
stc
sarb
int3
out
jne
add
std
xor
sbb
lods
out
in
dec
sbb
sub
in
add
sbb
test
adc
mov
sbb
and
data16
test
outsb
lods
or
cmpsb
popf
jae
fdivl
sub
add
test
icebp
adc
ret
sbb
rol
stos
add
popa
mov
cmp
add
loope
lods
push
push
stos
add
cmpsl
fstps
and
aas
add
fstpt
lock
cmp
movsb
jbe
adc
pop
adc
add
or
or
ds
pop
push
lret
pop
xor
in
xorl
dec
jecxz
mov
pop
adc
mov
sbb
fiaddl
leave
sbb
mov
inc
ret
xorb
mov
aas
stos
add
mov
jg
pop
in
call
adc
jge
insl
add
rcl
pop
filds
add
adc
push
mov
push
in
jle
out
add
inc
fsubrl
ja
je
inc
adc
cld
push
test
xchg
repz
add
leave
xchg
out
aaa
mov
cmp
mov
add
int
jp
int3
xchg
push
ret
add
adc
sub
push
xor
xlat
ret
sbb
or
add
cli
xchg
sub
or
pushf
and
pop
push
mov
ret
hlt
jecxz
inc
test
and
insb
or
push
add
test
sbb
jle
repz
pusha
inc
test
sub
out
into
dec
sbb
scas
xchg
sbb
mov
add
jo
xor
push
sbb
les
pop
int
dec
rcrb
push
pop
fwait
cmpsl
stos
iret
nop
inc
add
out
inc
jmp
pop
and
pusha
pop
int3
in
mov
pop
pop
and
cwtl
subb
bound
sub
cwtl
cli
rorb
xor
add
xchg
sub
inc
or
sti
pop
andl
stos
inc
xor
mov
outsl
mov
mov
mov
add
mov
jnp
push
sub
and
add
jl
mov
xchg
lahf
or
das
or
scas
outsl
add
push
mov
test
aam
pop
mov
ss
adc
xchg
push
cmp
cli
lds
scas
pop
pop
add
sbb
out
jae
imul
aas
and
cmp
inc
cwtl
push
add
pop
enter
fnstsw
stos
mov
subb
inc
pop
in
repnz
add
push
cmpsb
fldpi
xchg
fildl
mov
std
lret
outsb
jle
dec
popa
mov
scas
adc
mov
std
add
lcall
add
movsl
pop
mov
mov
dec
ret
mov
mov
inc
call
add
mov
stc
out
pop
push
cmpl
sub
mov
add
lds
sub
ret
dec
popa
test
out
test
stc
add
rcrl
jo
xor
mov
sub
mov
add
int
dec
loopne
in
add
inc
xchg
ficomps
xchg
pop
call
xor
pop
mov
ja
mov
add
cmp
mov
ret
pop
shlb
out
sbb
xor
adc
in
aas
scas
testb
dec
das
inc
sbb
or
cltd
xor
xor
subb
and
movl
inc
push
fildll
pop
sbb
mov
lock
add
es
cmp
fistps
add
mov
push
sti
jl
das
jp
decb
movsb
cmp
fidivl
add
add
sbb
and
shlb
inc
stos
add
sbb
sti
mov
imul
pushf
xchg
jae
aad
addr16
js
lock
lea
add
jg
loopne
and
lods
fiadds
in
movsl
fs
push
pop
add
aad
sbb
rcrb
push
add
into
jb
lcall
push
mov
es
call
cli
shlb
nop
cli
clc
loopne
add
stos
and
in
push
scas
jge
call
inc
or
add
in
pushf
pop
jns
add
xor
jae
js
mov
loope
ret
mov
aas
add
shlb
pop
movsb
mov
mov
xor
insb
and
imul
inc
pusha
lods
pop
mov
mov
sahf
out
ret
jmp
dec
mov
arpl
add
mov
mov
add
pop
fcompl
mov
sbbb
push
and
add
add
push
movb
add
jecxz
push
lock
fisttpll
sub
pop
jle
pop
add
sbb
ret
add
iret
pop
xchg
or
pop
add
adc
movl
xchg
adc
cmp
mov
dec
arpl
sti
shl
pop
dec
add
ss
cli
fcmovnb
sti
add
movsb
add
mov
jg
and
add
repz
cmp
xchg
shlb
movsl
xchg
xchg
shl
cmp
mov
insb
and
or
cld
sub
movsb
stos
lds
add
ret
movsl
xor
pop
test
jle
add
mov
in
push
cmp
mov
test
imul
or
or
test
ret
imul
xchg
mov
cmp
push
in
adc
ret
clc
daa
add
das
stc
adc
mov
adc
push
roll
dec
jns
sbb
inc
or
adc
and
mov
add
enter
mov
mov
cmp
add
loop
inc
jb
lods
nop
inc
push
rolb
call
or
sub
pop
mov
stc
dec
mov
cld
ds
std
add
shl
and
sub
lea
mov
clc
orb
push
aaa
cmp
inc
pushf
adc
dec
add
push
jbe
dec
cwtl
pop
enter
fidivrs
cmp
imul
loopne
cs
jo
arpl
sar
adc
imul
xor
movsl
in
les
sbb
pop
vmovdqu
inc
sarb
jmp
pop
xor
testl
jb
add
inc
aaa
xchg
cmc
fistpl
add
push
or
pop
add
mov
aaa
test
scas
int3
adc
js
inc
jecxz
enter
movsl
call
pop
fcoms
clc
add
xor
aad
outsl
jo
cmpsl
es
add
imul
and
loop
xchg
or
xchg
cld
xlat
bound
adc
mov
shrb
or
outsb
in
jp
sbb
add
fcmovnu
mov
iret
movsl
call
repz
test
mov
call
add
mov
out
jp
sbb
pop
out
movsl
outsb
cmp
insl
add
mov
and
in
push
int3
add
movsb
pop
clc
add
mov
jno
push
push
xor
insl
add
shrb
mov
xor
pusha
adc
insl
add
outsb
mov
ds
push
sbb
dec
and
xor
add
aad
sahf
mov
adc
jo
mov
mov
dec
mov
sub
popf
adc
inc
lret
add
adc
mov
call
sarl
pop
jo
mov
fbld
sbbl
ror
lods
imul
call
out
sbb
pop
aad
shr
add
add
xchg
mov
pop
sbb
fbstp
cmpsl
arpl
jns
pusha
add
inc
jle
adc
aaa
push
test
fisubs
loopne
mov
add
insb
jmp
imul
in
mov
xchg
test
lds
xor
and
mov
push
popf
adcb
aas
rdmsr
bound
cmc
cmp
inc
ljmp
xchg
testb
add
push
inc
push
push
adc
push
add
mov
rclb
popf
aas
dec
pop
mov
movsl
add
daa
int3
js
divb
cmovo
in
jns
jmp
add
cld
shll
mov
jne,pt
jb
call
jp
xor
add
roll
lret
or
xchg
shl
inc
add
adc
std
pop
dec
jmp
leave
ret
push
adc
push
mov
dec
add
inc
adc
in
mov
adc
cmpsb
push
mov
dec
es
pop
add
test
xor
cwtl
xchg
add
fsubrs
lahf
sub
add
outsl
xchg
cmp
mov
cld
add
jl
xor
add
inc
popa
jbe
add
stos
ds
and
sarb
push
leave
xor
adc
hlt
mov
pop
hlt
pop
add
mov
addr16
movsl
int3
sbb
imul
xchg
ljmp
les
ja,pn
add
fisubs
mov
jno
jae
add
sub
scas
jp
aas
jg
sbb
fcomps
jno
dec
mov
stos
popf
dec
loopne
pop
dec
add
dec
sub
nop
cmp
roll
mov
xchg
sahf
cmp
sti
add
jb
add
xchg
ror
out
sarb
jge
lds
adcb
sbb
lahf
sub
nop
sbb
inc
stc
or
add
mov
stos
add
jnp
inc
in
add
ret
or
jmp
cmc
sbb
arpl
mov
xchg
dec
mov
js
pop
sbb
mov
mov
adc
mov
push
fwait
or
aad
push
cmpsl
push
int3
add
dec
imul
sbbb
mov
and
add
jecxz
mov
scas
enter
add
pop
in
inc
inc
cmpl
add
sub
jl
adc
pop
dec
sub
add
push
pusha
push
aam
pop
sbb
repnz
mov
orb
repz
cld
add
mov
shll
and
mov
movsb
ret
leave
sbb
adc
pop
in
adc
dec
add
mov
add
std
sbb
cs
aaa
cmp
test
push
push
jl
ficoms
cmpsl
pop
xor
xor
dec
xor
call
and
add
ret
in
popf
stos
pop
pop
jne
das
and
mov
notb
add
incl
or
add
cmp
cmc
sbb
test
orb
lock
xor
sub
xor
ror
dec
sti
add
xchg
inc
dec
es
sub
mov
xchg
add
loopne
hlt
mov
or
das
addb
cmp
add
and
sbbl
hlt
fwait
pusha
add
sub
fdivl
sub
add
mov
mov
pop
outsb
xchg
loopne
mov
xchg
jb
insb
mov
pop
inc
mov
mov
call
decl
push
scas
push
xor
pop
xchg
jae
or
xor
mov
add
xor
mov
jnp
and
adc
jbe
clc
arpl
in
sbb
cwtl
mov
hlt
mov
mov
out
add
inc
iret
pop
daa
test
pop
shlb
rsqrtps
sub
js
push
dec
push
xchg
ds
add
mov
pop
cmp
pop
inc
adc
lods
cmc
sbb
hlt
push
lds
add
or
out
loop
mov
mov
cmp
orb
add
loopne
idivb
pop
add
mov
into
xchg
jno
add
out
push
or
cltd
lds
cld
mov
jnp
dec
and
cwtl
out
sbb
loop
shlb
dec
add
and
dec
pushf
jp
jecxz
pop
sbb
scas
pusha
pop
lds
nop
cwtl
stos
add
xor
les
test
in
pop
adc
dec
cwtl
fildll
and
psrlw
add
xchg
sbb
in
sbb
and
jbe
push
mov
xchg
call
clc
faddl
dec
xor
lret
pop
nop
cmp
add
movsb
inc
push
dec
mov
sbb
cmpsl
stc
mov
jmp
jp
jg
fimull
int
incl
insl
pop
sahf
lods
outsl
or
inc
pop
sbb
fisttpll
sub
pop
rorb
jecxz
add
sbb
xor
push
add
rorb
aas
add
pop
out
cld
xor
or
pop
cwtl
xor
fwait
add
icebp
scas
inc
outsb
add
fisttpl
andb
cmp
mov
add
ljmp
aam
les
pop
inc
mov
imul
nop
xor
enter
add
stos
add
hlt
mov
or
mov
scas
es
hlt
loop
cwtl
lea
add
je
jle
pushf
into
add
mov
push
negb
sub
add
call
sbbl
dec
jns,pn
call
sub
popa
mov
mov
mov
pop
push
cwtl
push
sbb
mov
test
sub
lock
js
add
push
jno
xchg
mov
outsb
sbb
lock
pusha
jnp
cmp
dec
hlt
mov
mov
mov
pusha
nop
pop
inc
fimuls
mov
mov
jo
loop
leave
mov
push
jl
adc
outsl
add
mov
das
rorb
add
push
xchg
dec
pop
mov
sbb
add
mov
add
and
sarl
fdivr
nop
xchg
jnp
add
cmpsb
insl
mov
pushf
add
inc
cli
test
dec
and
fistpll
and
addb
pop
rorb
dec
outsb
add
mov
pop
adc
jns
pop
dec
sbb
and
loope
aad
mov
aaa
push
pop
jne
xor
fidivs
jns
and
in
addr16
imul
jo
sbb
or
push
xor
call
pop
xor
adc
scas
insb
ss
movsl
fiaddl
les
negl
cmp
and
mov
inc
aad
cmp
mov
mov
push
xbegin
pop
jae
aad
inc
push
jge
or
dec
push
jbe
xor
push
add
pmaxsw
push
push
in
mov
frstor
test
js
sub
sar
jge
add
cld
es
scas
or
scas
mov
dec
idivb
inc
fidivrl
xlat
mov
popa
sub
or
mov
inc
cmp
enter
pushf
add
mov
negb
add
mov
mov
gs
lods
jecxz
push
xor
dec
int3
cltd
push
sub
inc
fs
add
gs
or
je
js
add
jb
mov
sahf
jae
out
roll
mov
jp,pt
stos
jo
mov
leave
mov
mov
jmp
cmp
push
fdivrs
push
cmp
pop
sub
add
push
pop
les
loopne
xchg
das
add
imul
sbb
ret
pushl
scas
pop
lret
mov
sbb
inc
andl
loope
xor
add
inc
add
repz
cmp
js
loopne
cld
push
or
mov
push
pushf
notl
add
ret
sti
or
add
lea
hlt
adc
push
pop
inc
dec
jg
xorl
add
and
mov
int
outsb
xorb
fdivrs
or
inc
shlb
adc
pop
adc
pop
or
adc
push
adc
jg
and
fiaddl
insl
add
in
adc
cmc
jns
add
das
jb
add
aaa
ret
mov
bt
imul
and
lea
mov
ret
pop
aad
pop
stc
cmp
push
insb
push
inc
add
mov
add
sub
sarl
pop
ss
pop
cmp
jp
add
fbld
out
insb
add
cmpsb
mov
add
outsb
and
or
xchg
pusha
xchg
andl
sub
add
aas
lock
lahf
cmpsl
divb
dec
cmp
adc
inc
clc
jg
inc
lock
mov
sbbb
dec
inc
andl
roll
imul
adc
shll
scas
mov
stc
sbb
lcall
loopne
cmpsb
aad
sub
adc
testl
fs
lods
inc
adc
sub
adcb
ret
lods
adc
sub
pop
adc
mov
test
adc
sub
jmp
add
out
test
add
movsb
sbb
scas
inc
jne
jns
fcoml
add
add
dec
add
cmp
sub
enter
ja
and
cwtl
inc
iret
pop
aas
or
add
repz
sub
push
mov
add
sbb
iret
pop
pushf
jo
cmp
sbb
adc
push
pop
sub
and
fdivrs
mov
xor
push
push
sub
lods
push
pushf
sbb
push
or
faddl
mov
in
mov
popl
shll
add
mov
xchg
sbb
sbb
jnp
xor
jns
dec
shlb
data16
mov
lret
enter
add
fisttpll
pushf
push
add
adc
jno
aam
hlt
add
cltd
nop
in
lcall
add
test
inc
jge
add
ret
add
mov
mov
mov
add
loopne
loop
jp
add
cmp
fdivrl
inc
cmpsb
jb
lods
sbb
add
int3
or
unpckhps
in
add
push
int
sbb
bsf
insl
ret
out
stos
add
testl
xchg
push
mov
xor
pop
inc
jle
cwtl
mov
clc
add
shrl
lret
fdivs
jmp
out
mov
outsb
clc
or
sub
pop
add
xor
int3
mov
pop
jge
shrl
sti
rorb
repz
dec
dec
jmp
out
loop
cmp
mov
sub
pusha
aas
nop
jb
cli
test
je
cmp
into
lret
jno
xor
add
cmp
andb
cld
jle
or
or
out
sbb
out
sub
cld
enter
cwtl
adc
push
xor
les
add
dec
in
push
int
cmpsl
xchg
pop
add
add
in
out
cmpl
add
outsb
test
negb
jl
mov
add
scas
pop
mov
call
mov
inc
cmp
push
push
lea
ds
lcall
aaa
xchg
add
sub
pop
sbb
sbb
roll
or
mov
mov
mov
push
push
stos
or
jnp
add
pop
xchg
aaa
lret
clc
movsb
in
add
and
je
xchg
scas
in
add
testb
mov
fldt
lods
ret
push
pop
cmc
cmpsl
clc
addb
sbb
aaa
jge
out
pop
xchg
shll
push
cltd
and
out
add
xchg
inc
jg
into
inc
mov
xchg
sahf
jb
xlat
jecxz
add
sti
nop
inc
inc
in
ss
mov
bound
sub
lahf
add
mov
outsb
clc
dec
fisttps
addl
into
pop
mov
in
inc
pop
sahf
add
fdivs
sti
cmp
add
loope
xchg
leave
out
add
icebp
fldenv
pop
into
sbb
out
fcompl
dec
pop
lcall
jl
push
fnsave
jo
add
or
test
stc
nop
lret
cld
addl
xchg
repnz
push
sbb
shl
push
and
fcmovbe
sub
adc
mov
add
sbb
push
cs
lods
out
fadds
jp
mov
cmp
incl
sbb
push
push
and
cli
add
mov
stos
and
adc
stos
add
jmp
cld
add
mov
lahf
push
add
sub
inc
sbb
stos
mov
andb
add
test
xor
add
jo
cmp
cmp
notl
mov
cmpsl
scas
movsl
jb
stos
add
push
pop
and
rolb
push
and
addr16
add
cmp
or
fiadds
mov
loopne
jge
rolb
cmc
in
addr16
pop
mov
test
std
sahf
jp
adc
jb
xchg
sub
mov
cs
icebp
gs
nop
cwtl
add
mov
xchg
testb
loop
sbb
popf
inc
test
pop
add
nop
mov
ror
inc
ret
fistpl
movsb
sbb
push
jae
packsswb
mov
clc
stc
cmpsl
lods
cli
add
jo
jp
add
sub
lds
xor
inc
jl
pop
pop
and
pop
scas
add
repnz
and
push
std
xorl
in
sbb
dec
mov
lods
aaa
dec
sti
xor
rorb
imul
fidivrs
cli
pop
sbb
xor
cmp
sub
fadds
cld
mov
cmp
push
xor
int
add
ljmp
inc
es
mov
dec
mov
jb
mov
sub
cmp
shrb
or
enter
cmp
jg
out
sub
inc
flds
hlt
ret
mov
sub
inc
in
xorb
add
push
cmp
lea
pop
mov
inc
jne
xchg
xor
stc
add
xchg
stos
mov
jge
in
adc
negl
dec
leave
add
loope
inc
sbb
test
cmp
dec
mov
add
push
cmp
mov
and
int3
lock
dec
push
mov
es
xchg
cmp
cwtl
mov
fiadds
add
fistl
sub
dec
or
sbb
push
xchg
jecxz
push
insb
inc
insl
cmp
ja
mov
add
pusha
popa
lcall
add
nop
inc
call
aas
or
ljmp
fdiv
jo
imul
test
add
movsl
rcrb
xchg
ret
or
push
cwtl
mov
repz
cmp
idivb
cmc
push
aad
in
lea
mov
xchg
xchg
mov
pop
adc
inc
push
mov
inc
movsl
sarb
xchg
dec
dec
je
adc
cmpsl
out
add
adc
inc
mov
push
in
dec
ljmp
push
cwtl
cmpl
add
rcrb
daa
mov
scas
lds
test
push
push
dec
mov
jbe
add
cltd
push
mov
fucomp
add
push
test
jg
fwait
xchg
insb
divb
add
icebp
aad
mov
xchg
inc
pop
or
flds
dec
iret
dec
enter
xchg
add
jp
jle,pt
xchg
mov
inc
jmp
js,pn
shll
pop
sbb
add
push
out
leave
mov
ds
mov
cmp
push
mov
scas
or
insl
and
xchg
jmp
pop
push
or
test
fcmovb
dec
pop
cwtl
mov
add
inc
repz
pop
rolb
push
add
inc
add
mov
imul
int
aas
inc
test
mov
add
cs
adc
jp
xlat
add
jo
add
insb
push
fwait
lods
pop
scas
add
sub
and
movsl
add
mov
ss
jg
and
xor
add
sarl
mov
add
mov
enter
fistps
jo
sbb
add
inc
test
subl
loopne
popf
jge
fsts
lock
pop
out
ss
fiaddl
mov
jo
aad
mov
les
jmp
add
mov
test
push
push
shll
sbb
adc
add
cmp
fldcw
ljmp
roll
hlt
or
xor
dec
add
cmovno
shr
out
repnz
inc
mov
add
pop
loopne
mov
add
xchg
push
addr16
filds
sbb
adc
sub
test
mov
push
mov
jno
enter
cmpsb
andb
add
imulb
outsb
push
loope
in
addb
xor
sahf
das
and
leave
push
test
push
add
sub
rcrb
sbb
push
pop
stos
rcl
dec
adc
test
enter
pop
out
jp
sbb
pop
mov
mov
jnp
mov
pop
std
out
les
or
add
add
lds
in
andb
loope
add
lahf
push
inc
idivb
and
dec
xchg
and
mov
sub
repnz
cli
add
testb
jnp
dec
jnp
fists
rorl
adcb
loopne
cmp
add
xor
cld
pop
xchg
add
sub
test
add
sub
mov
add
cmc
add
fdivs
add
testl
add
adc
out
nop
ror
int
test
adc
mov
and
inc
add
ss
outsl
adc
pop
mov
dec
out
arpl
add
ljmp
inc
pop
cmp
cs
jno
nop
dec
in
xor
shl
ds
push
ds
add
jg
or
inc
mov
lock
shlb
subb
add
insl
pop
push
jecxz
stc
add
mov
xchg
test
sbbb
cmp
or
sarl
cmpb
rcl
add
push
mov
or
test
out
add
sub
adcb
sbb
add
pop
mov
gs
mov
mov
jnp
stos
fnstsw
imul
and
sub
mov
mov
pusha
fs
pop
push
cmp
sbb
add
popa
mov
adc
sbb
jne
jp
jle
add
or
pop
mov
xchg
inc
cs
adc
inc
stos
dec
add
insl
scas
add
lods
mov
dec
insb
sub
cltd
rclb
add
lods
jecxz
add
dec
cmp
mov
sarl
lock
cmc
xchg
push
pop
xor
pop
outsb
aaa
mov
inc
int3
xchg
mov
pushl
loopne
mov
cld
add
insb
inc
jno
add
fcoms
out
sbb
mov
jmp
add
cwtl
push
push
xor
aaa
inc
scas
push
aad
idivb
lahf
adc
add
and
shlb
cmp
pusha
lods
jo
pop
aas
sbb
sahf
jge
shl
push
xchg
add
mov
call
sbbb
inc
mov
add
adc
arpl
or
outsb
dec
imul
cmpsl
bound
loopne
sbb
clc
xor
fistl
and
lock
or
into
test
outsl
nop
pop
adc
aas
or
call
sub
add
psubd
fistpl
jae
push
and
sub
test
pusha
cmp
fidivl
ret
or
sbb
and
in
aaa
aas
not
into
jbe
bound
mov
sbb
cli
mov
inc
mov
pop
sbb
push
xor
push
fstps
pop
pop
lahf
inc
cmp
pop
pop
mov
cmp
adc
add
sub
popf
pop
je
add
das
dec
mov
and
pop
dec
mov
repz
add
dec
or
call
add
and
sub
nop
mov
mov
sahf
cmovns
push
jle
xchg
inc
sbb
add
fs
adc
adc
xor
ret
fsubr
and
je
add
or
add
ja
adc
pmaxub
out
adc
cmp
add
test
sbb
lea
out
xchg
mov
out
iret
ret
sub
push
add
push
push
in
orb
clc
sub
adcl
test
add
or
inc
test
ja
sub
pop
inc
lfs
xorb
in
xchg
scas
pop
lea
jp
bound
pop
xor
push
shrb
hlt
push
scas
xor
add
mov
inc
testl
mov
cmp
pop
adc
adc
dec
test
xor
addl
cld
nop
in
inc
lods
insl
ror
mov
add
sbb
push
aas
add
lock
sub
pop
fs
fldl2t
cld
xorl
pmaxub
cmc
loope
jge
pusha
adc
orb
rcrl
mov
movsb
iret
jg
cmpl
jmp
add
loope
lcall
lods
lea
insl
test
add
or
inc
sarb
inc
lds
movhps
jecxz
inc
cmp
jl
push
push
or
aas
or
sub
or
jecxz
add
iret
jnp
pop
add
dec
loopne
int
mov
mov
mov
lock
ficomps
inc
addr16
call
dec
js
jbe
add
pop
pop
les
pop
or
lahf
push
mov
or
test
outsb
loopne
mov
jae
mov
lahf
xor
shl
in
add
imul
or
iret
cli
add
mov
cmpb
mulb
mov
cmpsb
cld
add
fsubrl
push
rcrb
push
lret
shll
push
cwtl
inc
or
cmpsb
and
stos
jge
add
sahf
fadds
fstl
nop
pop
fisubrs
inc
outsb
shrl
pop
mov
sub
pushf
fcompl
add
adc
inc
dec
xchg
mov
sbb
pop
jb
mov
sub
aas
icebp
stc
in
pop
xchg
inc
push
or
js
jp
aas
push
sbb
bound
ror
jbe
pop
roll
imul
push
mov
out
andb
or
xchg
lcall
cs
pop
mov
push
ret
add
mov
xchg
hlt
mov
js
ljmp
add
pop
ret
mov
and
cmpsl
leave
in
mov
popa
push
sbb
lcall
sbb
lods
roll
xlat
pop
mov
loope
mov
adc
sahf
out
mov
aas
lock
jne
and
add
push
push
test
and
rep
or
push
movhps
mov
dec
std
lea
stos
or
test
lods
insb
out
mov
add
notl
xor
dec
adc
add
mov
shrl
jle
stos
adc
inc
rorb
call
repz
popf
mov
mov
adc
add
addb
push
fadd
dec
add
inc
pop
mov
ja
es
int
cld
add
dec
fdivr
add
jl
out
add
and
das
inc
in
sarl
add
lret
sub
add
icebp
addb
loop
stc
pop
leave
xchg
lahf
shr
daa
test
pushf
or
test
push
push
add
popf
subl
xor
mov
fs
mov
sbb
fstps
std
push
and
add
adc
pusha
add
dec
xor
dec
inc
dec
cmp
add
xchg
enter
add
fwait
mov
addb
mov
mov
cwtl
inc
aas
data16
popf
push
mov
cmp
add
sub
hlt
lahf
sarb
pop
stos
mov
or
sub
push
and
sub
sub
sbb
dec
ljmp
test
fcompl
cmp
jge
fwait
sahf
lret
or
ss
cmc
sbb
ficoml
xchg
pop
cmp
hlt
aam
add
and
jp
add
xchg
inc
xor
stc
dec
add
test
mov
cmp
mov
mov
in
pop
imul
or
mov
lahf
xchg
sub
mov
loopne
cmc
cmp
test
add
pop
add
jecxz
and
mov
stos
jo
cmp
bound
push
add
movsb
fnstenv
imul
call
nop
adc
clc
mov
add
mov
inc
std
mov
cli
in
aas
in
fadds
add
into
and
pop
mov
ja
lcall
shrb
in
pop
dec
add
jecxz
stos
adc
in
hlt
xor
push
adc
xor
pushf
data16
jl
cmp
pop
fcoml
sub
pop
mov
mov
rolb
int3
add
ds
out
insl
pop
xor
xor
in
shlb
and
fucomip
add
rol
mov
and
ret
pop
loopne
sub
psubsb
push
and
or
mov
scas
xlat
clc
cmp
mov
nop
mov
jle
jl
push
fidivl
add
cmpsb
lods
out
inc
sbb
in
imul
xchg
cmp
dec
shlb
inc
add
pop
dec
push
into
add
push
aam
adcl
rol
fs
cmp
pusha
cltd
cli
pop
jno
dec
push
fldz
outsl
and
push
add
movsl
sub
or
in
add
cltd
insb
sub
sbb
test
push
xor
outsl
lret
and
add
out
xor
movsb
push
imul
fstl
mov
or
mov
add
fisttpl
aas
popa
add
addb
mov
add
and
add
xor
add
mov
mov
add
xchg
outsl
push
fistl
pop
or
popa
inc
shll
pop
test
add
cmp
mov
sbb
pop
aas
inc
inc
push
nop
call
fstpl
jl
add
xchg
cwtl
pop
add
popa
icebp
int3
test
das
push
add
jns
add
movsl
pop
push
cmp
push
add
sub
loop
xchg
mov
dec
dec
cmpsl
out
add
stos
adc
or
xor
outsb
loopne
fiaddl
mov
pop
jnp
push
mov
test
jbe
add
xchg
int
movsb
inc
adc
xlat
xchg
jmp
adcb
lcall
cmp
dec
movsl
push
and
add
loope
mov
pop
xor
leave
lods
mov
add
outsb
dec
push
pop
cli
shrd
or
mov
ss
pop
xlat
mov
lods
add
mov
repnz
cmpsb
add
cmpb
push
mov
mov
push
cli
popf
push
inc
shlb
iret
cmp
sub
gs
and
cmp
pop
or
add
sub
xlat
mov
sbb
mov
ja
jge
cltd
add
mov
in
daa
loope
xor
jne
mov
mov
xor
hlt
inc
xchg
add
mov
sbb
dec
add
cmp
mov
jae
pop
push
cmc
inc
sbbb
nop
stos
add
scas
mov
addr16
and
add
movsb
xchg
fwait
add
sub
sti
rcrb
aas
adc
aam
adc
sub
and
ja
aas
repnz
ljmp
sahf
mov
add
dec
subb
push
pop
cmp
and
daa
rolb
inc
clc
enter
dec
movl
push
sub
xchg
fcoms
jge
add
cmp
rcrl
or
fnsave
aam
lods
in
xor
add
mov
dec
dec
call
jmp
pop
das
cmp
ret
and
and
add
or
lds
push
test
add
lret
cmp
ljmp
mov
lods
aaa
mov
or
pop
sub
add
sarb
popf
or
pop
hlt
ficompl
ficoms
cmp
shlb
in
lods
jg
pusha
or
mov
mov
cld
call
orb
int
or
cmp
cli
mull
clc
jno
mov
add
data16
sbb
popa
test
outsb
cmp
loopne
mov
sbb
xchg
adc
ret
xchg
add
adc
int3
rorb
imul
fldl
mov
loopne
pop
and
hlt
sbb
pop
add
or
in
or
mov
movsl
push
adc
out
or
adc
fwait
ja
dec
sub
loope
addl
popf
popa
and
sbb
sub
or
ret
jne
and
sbb
push
or
aam
push
fimull
sub
int
scas
dec
dec
push
xor
or
sbb
iret
xor
cmp
jns
add
dec
add
mov
push
adc
jno
inc
dec
imul
xchg
rclb
add
jne
fisttpl
les
rorl
repz
sti
cwtl
mov
xorb
sub
sarl
pop
xchg
adc
ret
or
lret
les
adc
in
adc
jno
scas
sbb
mov
add
mov
mov
stos
adc
popa
push
adc
mov
adc
sub
xchg
sbb
cmp
jmp
cld
mov
les
mov
cwtl
inc
ljmp
cwtl
adc
push
movsb
mov
lds
push
adc
add
jns
enter
test
rcll
sub
xor
push
hlt
xor
sub
adc
ficoml
sbb
add
and
jno
xor
xchg
mov
jno
rorb
out
or
sub
jno
cld
xchg
int3
icebp
add
add
mov
cwtl
icebp
cmp
fsubl
icebp
adc
int3
xchg
cmp
int3
insl
push
inc
stc
mov
pop
mov
mov
or
jl
les
mov
pop
mov
and
pushf
movl
xchg
mov
nop
in
sub
test
adc
xor
sbb
pusha
gs
aas
lock
sbb
lods
sbb
dec
cmc
shl
mov
shlb
fadds
clc
push
nop
loopne
andb
pop
out
andb
pop
mov
sbb
test
push
fs
pusha
lcall
inc
mov
les
aas
sub
dec
pop
push
adc
mov
mov
mov
ds
insb
clc
nop
cmpsl
xor
aas
test
jo
flds
clc
pusha
cmpsl
shl
into
out
push
lds
cmp
adc
int
and
cmp
aam
mov
pop
rorb
or
mov
add
pop
lgs
in
gs
jne
push
popf
xor
sbb
lea
movsl
cmp
adc
bound
ds
mov
cmpsl
jl
sbb
adc
jbe
nop
add
imul
sbb
roll
adc
lock
push
sub
sub
pop
or
sub
insl
lret
sbb
or
cmp
mov
sub
xor
test
inc
popa
cmp
and
popf
stos
sub
icebp
std
mov
adc
inc
inc
mov
push
sub
lds
push
dec
and
mov
int3
fldl
xchg
cmp
mov
cmp
xor
push
mov
dec
in
sub
inc
inc
adc
add
lea
decb
cmp
dec
pop
lret
pusha
pop
in
pop
and
shr
pop
and
xor
cmp
mov
aad
adc
push
push
mov
sbb
sub
lds
icebp
push
add
add
ds
mov
loope
imul
test
inc
pop
movhps
rcl
popa
xchg
cmpsb
jl
aas
sub
add
cwtl
inc
xchg
or
add
mov
mov
xorb
inc
in
aam
jns
inc
pop
andb
les
js
inc
test
js
inc
addl
shrl
pop
inc
outsb
xor
adc
or
pop
cmpsl
or
inc
add
repz
movsl
sub
das
cmp
adc
and
subb
adc
xor
dec
fimuls
xchg
inc
cld
movsb
add
sub
lods
sbb
adc
cwtl
inc
jp
into
push
inc
gs
icebp
lea
test
mov
or
sub
sub
lahf
adc
xor
in
xchg
pop
jns
push
push
sbb
stos
mov
mov
js
xor
inc
dec
fsubs
adc
andl
push
fsub
out
mov
shl
jmp
vpsubusb
lods
ljmp
mov
mov
stos
iret
sub
add
xchg
cmc
xlat
ss
xor
inc
in
mov
ss
or
pop
push
std
cmp
xchg
stos
loop
inc
adc
push
push
and
loope
lock
rorb
loop
lods
cmp
cmp
js
std
mov
dec
cmp
shll
imul
xor
subb
lahf
push
push
jecxz
push
pusha
xor
cmp
inc
ss
cwtl
push
jp
cmp
lods
add
pop
shll
into
add
cwtl
jecxz
pop
adc
mov
jp
xor
jns
stc
or
inc
xor
add
mov
test
push
pop
shrl
sub
lea
shll
mov
inc
cli
cmpl
lock
les
test
mov
jge
popa
scas
fdivr
in
rcrl
lret
adc
inc
jp
pop
inc
inc
lcall
jl
lret
sbb
scas
dec
xlat
push
add
fdivp
sbb
xchg
dec
roll
aad
daa
addb
sub
or
bswap
push
dec
jl
ja
add
test
sbb
cmp
mov
insb
pop
loope
int3
pop
add
popf
push
sbb
mov
dec
sahf
add
call
jecxz
test
push
dec
enter
outsb
pop
fisubrs
pop
enter
leave
imul
add
push
dec
cli
xor
add
mov
loop
inc
bound
in
cld
mov
lods
test
pop
clc
fisttps
pop
fidivl
sbb
inc
xor
mov
arpl
sub
pop
jns
leave
push
mov
pop
add
lcall
add
scas
mov
sbb
ret
roll
pop
flds
stos
add
lods
push
pop
lret
orb
fs
and
jno
xchg
adc
mov
lock
pop
insb
scas
fistps
icebp
mov
dec
int3
jb
lock
cmp
popf
adc
jo
mov
sub
pop
nop
mov
testb
les
add
out
mov
in
add
inc
cs
mov
movsl
loopne
jp
inc
mov
push
xor
jecxz
push
arpl
in
call
push
mov
loop
fimuls
nop
and
add
jp
pusha
out
push
insl
or
and
pop
sbb
cmp
xor
das
cmpsl
jbe
add
int
ret
add
push
add
outsl
sti
mov
or
xchg
int
xchg
fsubr
enter
add
inc
cmp
push
and
xorb
mov
push
mov
xchg
inc
inc
or
add
pop
add
mov
push
jo
push
dec
ret
in
push
mov
pop
cld
or
pop
andb
push
xchg
inc
add
out
int3
adcb
xor
sub
pop
andl
and
add
aas
pop
cmp
or
push
leave
inc
fdivrl
lret
push
pop
jns
pop
cmp
std
xor
jecxz
int3
mov
dec
add
sbb
xchg
pop
add
lcall
or
loopne
leave
fdivs
in
pop
adc
aad
push
cmp
xor
xor
adc
out
sub
or
sbb
mov
inc
cld
xchg
cmp
pop
roll
mov
jg
ret
sub
aam
mov
xchg
add
shrl
xchg
add
dec
cmpb
push
fadd
ret
sahf
ret
mov
cmp
mov
out
add
lret
mov
mov
and
push
cmp
add
adc
dec
popa
inc
mov
dec
xchg
fcmovnb
xor
lods
cmc
test
shlb
test
in
popa
js
pop
add
xchg
xor
and
leave
add
aam
and
adc
mov
add
mov
xor
loop
or
lods
insl
and
or
push
dec
add
dec
and
and
bswap
push
popf
call
add
push
fst
lock
pop
ret
pusha
or
push
pop
mov
insl
rolb
mov
push
addb
into
enter
adc
inc
adc
push
movsb
pop
inc
gs
aas
push
fidivl
dec
and
repnz
inc
push
dec
xchg
add
sub
in
add
mov
sub
rorb
pusha
xchg
or
lock
inc
sub
ret
stc
ret
push
iret
jno
maxps
add
dec
in
pop
test
pop
cmp
loop
xchg
sub
enter
mov
subl
add
and
xorl
leave
mov
or
imul
arpl
mov
loopne
mov
or
test
into
mov
push
add
mov
mov
lods
rcrl
addr16
add
mov
add
je
mov
aad
jp
pushf
rorb
jbe
aam
sub
cmp
add
outsl
in
and
add
inc
xchg
fisubrl
add
cmp
in
cmp
repz
mov
rcr
add
js
loop
ljmp
push
push
xchg
mov
lods
add
scas
push
ljmp
mov
loopne
jo
loope
inc
add
push
cmovo
dec
inc
cmp
pop
adc
add
push
xchg
in
mov
iret
aam
mov
add
dec
jg
pop
mov
xor
cmp
pop
mov
je
outsl
add
xchg
xlat
mov
out
or
push
add
shll
pop
pop
testl
pop
loope
cld
sub
pcmpeqb
xor
out
jnp
mov
imul
out
mov
push
roll
mov
decb
jp
daa
repnz
movsl
jbe
sbb
pop
mov
mov
mov
arpl
add
insb
out
int3
push
xchg
shlb
push
rcl
mov
inc
pop
popf
ja
neg
add
leave
add
ljmp
push
add
fucomip
into
leave
cmp
test
xor
xor
shlb
in
lret
dec
cld
sub
sub
addb
add
xor
pushf
cmp
loopne
popf
xchg
add
pop
xor
fstpt
xor
sub
and
idivl
arpl
ljmp
mov
cmp
xor
pusha
dec
loope
jle
add
pop
and
adc
mov
rolb
int
inc
add
push
adcl
jg
cmpl
andl
loopne
mov
movsb
mov
push
mov
xchg
aam
filds
and
add
das
jne
imul
cmpb
dec
pusha
push
cmp
dec
add
cs
lock
cmp
mov
scas
cmpsl
fcmovnu
add
jns
roll
xchg
jno
inc
int
into
dec
add
push
cmp
push
add
push
adc
sahf
rolb
sbb
push
bound
push
mov
shlb
jb
repnz
add
push
lods
mov
xchg
das
xor
push
cmp
add
push
xor
dec
hlt
and
pop
and
push
rclb
lea
pop
enter
add
in
fs
jns
cwtl
inc
add
push
pusha
out
stos
popw
mov
jp
and
ja
add
mov
push
add
mov
sub
out
lea
cmp
add
dec
bound
adcl
jl
jb
vmread
sub
xchg
fs
push
jp
xor
ljmp
lea
dec
fidivl
imul
push
mov
cmp
add
mov
mov
jb
ret
scas
inc
loop
ja
xchg
cli
jno
lret
fisubs
test
sbb
sub
inc
jb
mov
sbb
pop
fsubs
add
jns
decb
push
cmpb
sti
inc
sysenter
mov
fnsave
lret
cmp
repnz
jo
int3
pop
imul
scas
cmp
add
pop
enter
pop
push
les
jns
sub
insb
sub
inc
xchg
jmp
in
add
shrl
push
incb
sti
loope
sbb
mov
ljmp
popf
cs
pusha
sahf
fdivrp
add
sub
mov
and
inc
add
std
mov
xor
mov
gs
pop
add
dec
add
hlt
das
jnp
mov
data16
dec
mov
add
aas
add
sub
rolb
xor
jmp
test
sbb
test
and
in
aas
out
jl
cli
outsb
mov
add
test
lock
xor
add
lods
mov
push
cmpsb
sbbb
js
addl
addb
jb
or
mov
fcmovnu
xor
mulb
cmp
insl
mov
xor
sub
roll
inc
rcll
cwtl
dec
inc
adc
clc
jle
pop
mov
jl
fldl
cmpl
lds
or
loope
popa
push
add
xorb
clc
sar
xor
mov
mov
jmp
jecxz
jbe
gs
out
push
push
adc
mov
mov
add
cs
and
popa
sub
inc
pop
fldt
shll
push
jmp
add
repz
inc
fwait
adc
mov
loopne
jmp
and
cmc
adc
add
or
daa
cmp
test
pop
out
frstor
fsubrl
add
pusha
mov
add
insb
cmp
mov
inc
lcall
xor
sbb
test
mov
imul
jno,pn
flds
ret
pusha
jne
js
stos
add
jl
sbb
jns
sbb
mov
int
mov
and
test
cmc
add
int3
imul
addr16
mov
xadd
push
jb
es
sbb
mov
mov
add
daa
push
sbb
add
sti
mov
fildl
andl
scas
cmp
and
int
or
fdivs
push
add
jge
adc
dec
les
pop
outsl
fdivrp
iret
add
inc
pop
xchg
xchg
int3
and
jne
imul
test
movhps
in
aam
mov
out
push
and
lea
jge
sbb
fwait
mov
repz
add
dec
fs
mov
add
insl
mov
xchg
cmp
xchg
enter
jb
repz
andb
dec
or
je
addb
adc
fwait
insb
icebp
pop
pop
pushf
cs
adc
ret
xchg
aam
fisttps
adc
fs
in
ds
add
lock
decb
scas
push
popa
pop
js
mov
xchg
dec
mov
or
ds
addl
pop
mov
int
add
ret
jno
mov
pand
inc
pusha
sub
das
femms
adcb
andb
dec
cmp
jnp
mov
test
dec
xchg
jo
inc
in
add
popa
xchg
mov
add
add
and
roll
aas
jno
jne
sbb
xchg
jl
cmp
in
push
fstpt
jne
xor
mov
lret
or
mov
add
in
pop
push
and
xor
mov
enter
lods
loopne
add
push
icebp
fmuls
or
mov
lcall
int3
xor
add
test
and
mov
add
add
jg
ffree
test
add
mov
xchg
pusha
add
sub
cli
xchg
add
movsl
aas
cmp
andb
pop
push
push
adc
add
js
outsl
int3
sbb
pop
mov
scas
sbbb
test
add
ljmp
add
movsb
fnstsw
push
inc
popa
add
or
mov
out
fcoml
sub
leave
mov
add
push
mov
aaa
cmp
add
lds
lods
mov
ss
scas
je
insb
sbb
add
in
and
cli
enter
scas
out
test
orl
push
aam
add
mov
jp
mov
data16
movsb
les
gs
pop
outsb
lahf
add
jb
inc
inc
clc
xchg
mov
call
push
pushf
das
inc
mov
out
inc
mov
popw
xchg
mov
pushf
sub
push
loopne
pop
mov
xchg
add
pop
add
pandn
add
mov
add
dec
sub
add
lret
mov
jmp
cli
push
dec
add
mov
insl
pop
mov
adcl
in
xchg
dec
inc
in
popa
pop
pushf
adc
push
lea
adc
mov
imul
ss
adc
lods
in
scas
cwtl
inc
add
outsb
imul
int
popa
adc
ror
or
in
sbb
xchg
gs
adc
movsb
mov
dec
outsl
jae
add
je
repnz
mov
add
adc
imul
and
or
mov
add
cmpsb
enter
sbb
pop
mov
mov
jbe
add
pop
sub
xchg
and
fldl2e
add
jmp
add
inc
int
sti
sub
mov
sbbb
xlat
movsb
add
lret
and
inc
pop
adc
xchg
and
ds
mov
adc
ja
jl
and
or
in
inc
sbb
push
add
sbb
jo
or
sbbb
add
fnstenv
mov
add
pop
jmp
jnp
push
add
stos
imull
pop
sbb
push
mov
call
xor
mov
imul
pop
and
test
mov
fnsave
xchg
or
leave
mov
pop
aaa
insb
jg
adc
xor
mov
pop
jbe
jl
adc
test
test
popf
roll
xchg
clc
ja
pop
or
cs
lahf
and
fs
imul
aad
into
in
and
push
std
jbe
ljmp
push
fs
push
movups
pusha
mov
ljmp
roll
and
add
jp
jge
push
add
clc
inc
mov
les
popf
or
mov
sgdtl
jnp
add
push
dec
and
push
int3
lock
inc
ret
or
jg
add
nop
jl
fdivl
daa
add
mov
aas
cmp
addb
push
push
inc
dec
push
ja
insb
pop
pop
xor
mov
xchg
add
or
js
mov
add
hlt
sub
stos
or
jnp
sbb
xchg
addr16
fiadds
out
and
test
xor
enter
out
imul
cmp
xor
sidtl
and
lahf
icebp
adc
add
jp
enter
out
cs
xlat
inc
popa
adc
test
scas
add
into
test
in
je
daa
stos
out
mov
xor
jp
pop
inc
jbe
adcb
xor
sbb
push
dec
imul
aaa
pop
mov
je
faddl
sbb
test
fstl
and
push
mov
enter
aas
mov
popf
add
pop
cmpsl
sub
rorb
sbb
sub
add
rclb
test
fs
add
lds
subb
std
add
cmp
jo
push
pop
insb
pop
mov
adc
mov
shlb
bound
ficoms
adc
aam
data16
lock
popl
sub
into
je
fwait
mov
push
pusha
mov
push
mov
jge
add
add
int3
xor
and
pop
stc
ds
add
mov
pop
dec
lahf
pop
pop
add
mov
dec
aad
mov
leave
or
push
mov
jae
or
sbb
mov
xchg
push
jecxz
add
xor
push
mov
pop
aaa
add
pop
gs
data16
jl
add
jb,pt
add
je
in
xor
mov
sub
push
imul
rcrb
out
xchg
cmpsb
rolb
fwait
add
adc
fiaddl
popf
sbb
push
in
sub
cmc
add
orb
cmp
aas
cmp
mov
orb
push
sub
cmp
xor
and
xchg
pushf
xchg
les
mov
enter
pop
dec
mov
or
xor
mov
int3
add
enter
pop
sbb
adc
jp
push
adc
adc
shlb
sub
test
dec
aad
int3
pop
jl
enter
jecxz
out
xlat
sbb
dec
inc
lds
mov
adc
add
fstl
xor
sbb
lock
xchg
inc
cmp
ror
pop
movsl
pushf
adc
jns
cmpb
jecxz
or
add
fxsave
data16
pop
xor
push
push
or
mov
pop
xor
adc
mov
cld
sub
mov
test
xor
add
adc
cmp
cld
xchg
mov
in
cmp
or
add
xchg
adc
sarb
add
stc
aas
xor
testl
enter
pushl
xchg
sub
leave
xor
out
rcr
mov
inc
mov
lahf
pop
adc
pop
add
lret
mov
push
xchg
pop
test
nop
scas
add
lret
cs
mov
pop
mov
subl
test
dec
jno
orb
lods
cmp
lahf
call
imul
add
bound
xchg
add
faddp
sub
adc
cmp
loop
add
outsl
pushf
add
sarl
mov
xor
sahf
test
pushf
int
sub
scas
incb
jmp
mov
push
andl
ds
mov
add
mov
sbb
push
lods
movb
call
leave
repz
repnz
xchg
pop
jl
push
shll
lcall
ss
or
xchg
inc
mov
cmp
es
pop
sbb
rdtsc
add
add
or
or
jne
push
jl
add
inc
push
test
inc
scas
xlat
xor
into
nop
cmp
frstor
inc
data16
in
add
add
pushf
movsl
push
roll
and
aad
stos
lods
add
xor
cmp
loopne
pop
xchg
pop
mov
daa
sti
and
dec
add
orb
sub
sbb
call
movsb
gs
loope
add
jo
and
sub
data16
dec
ljmp
dec
fisttpl
mov
sbb
addr16
pusha
loopne
xchg
adc
out
adc
mov
cld
pop
in
shr
add
push
lods
mov
jbe
sahf
adc
or
sbb
push
pop
outsl
push
cmp
xor
mov
fisubs
mov
or
mov
cmp
add
inc
gs
call
adc
leave
je
add
pushf
push
scas
cmp
js
fsubs
jg
jb
inc
jae
sbb
ss
fbstp
add
dec
add
shl
push
pop
and
in
cli
test
stos
add
sbb
jmp
add
cmc
jle
add
inc
ffreep
mov
and
cmp
in
cmp
pop
add
add
insb
mov
ds
cmp
pop
in
xchg
sbb
sbb
stos
mov
xor
andl
sub
je
add
sar
cmp
push
and
pop
add
or
lret
es
cmp
mov
add
scas
loop
mov
add
add
lock
lea
fstpt
ljmp
add
jl
rolb
mov
add
inc
pop
cmpsb
mov
cmp
inc
shrl
add
adc
cmp
leave
test
mov
sti
fadd
cmp
int3
sbb
jmp
sub
icebp
sub
adc
movsl
mov
xor
popa
adc
lret
daa
out
xor
adc
movsb
add
movb
repnz
insb
mov
data16
push
dec
into
addr16
lock
push
test
pop
out
ret
rcr
push
addl
sub
cli
add
push
movb
inc
or
xor
js
add
ss
fs
jns
mov
and
les
mov
mov
jno
add
jns
mov
clc
loopne
add
dec
mov
xchg
dec
enter
add
adc
add
push
bound
push
in
pop
stos
addl
sahf
test
sub
fsubs
adcb
xchg
add
rcr
roll
jbe
scas
cmp
jns
test
into
pop
enter
ret
and
nop
adc
pop
xchg
mov
sbb
icebp
js
jg
and
sub
push
dec
mov
sbb
push
or
lods
in
popf
xchg
mov
ss
pop
lahf
xor
pop
push
xchg
sarb
add
pop
test
aad
cmpsl
pop
add
cmp
xor
and
or
add
cmp
dec
sbb
cmc
mov
out
dec
adc
pop
and
into
aaa
xor
jg
jne
or
jno
lret
rclb
pop
out
stos
add
inc
adc
adc
or
cld
test
mov
add
cmp
subl
xor
std
mov
jmp
inc
cmp
stc
andl
out
shlb
pusha
push
jmp
and
cmpsb
mov
aam
es
cmc
mov
loopne
pop
jne
imul
popf
dec
pop
scas
shll
out
or
xor
shlb
mov
and
ljmp
pop
pop
cmp
in
jns
add
arpl
and
out
push
inc
lcall
push
rcrb
add
in
sbb
and
and
cld
es
addl
inc
pop
scas
das
stos
mov
add
mov
mov
xchg
add
pop
cmc
test
add
pop
push
rolb
fbld
add
jmp
inc
bound
cld
mov
add
cmp
cmp
ds
push
jp
daa
inc
cmp
ret
or
mov
dec
in
sbb
mov
pop
addr16
lea
les
cmp
dec
mov
push
add
adc
xchg
add
fimuls
sahf
lock
cmp
or
out
add
add
push
push
sub
cmp
or
xor
jle
dec
leave
ret
dec
add
test
or
in
sub
mull
jecxz
add
lods
xor
add
push
xor
pop
popf
xchg
pop
xchg
nop
leave
add
int3
xchg
ja
add
lret
popf
ss
add
mov
das
push
mov
in
mov
pop
dec
jg
add
out
sub
push
pop
orb
pop
loopne
cli
ljmp
jmp
jne
fildl
sbb
add
das
and
add
ds
inc
cmp
or
xchg
cltd
xor
ja
mov
sbb
xorps
adc
push
popf
pushw
int3
and
cmpsl
or
xlat
pusha
bnd
pop
dec
pop
arpl
mov
insl
add
and
leave
add
fsubl
inc
pcmpgtw
push
data16
push
add
xchg
and
cld
mov
jbe
sbb
clc
repnz
or
rcr
outsl
leave
pushf
dec
in
sbb
cmp
xorl
in
or
out
jmp
or
dec
jns
outsl
shll
stos
xor
popa
push
inc
das
xchg
rol
add
mov
sbb
push
dec
outsl
stos
or
add
dec
adcb
mov
mov
sbb
bound
sbb
add
add
popa
lret
or
movsl
sbb
sub
push
or
ljmp
jns
andl
movl
cwtl
sahf
sub
adc
js
push
add
insb
dec
sbb
sub
lret
mov
cmpb
pusha
jae
add
cli
or
pushf
test
bound
daa
flds
mov
scas
xor
cld
jl
add
cwtl
test
scas
cmp
add
jno
push
subb
sub
mov
jbe
sub
inc
or
pop
jmp
add
cs
inc
leave
add
xchg
std
in
jg
sbb
xorb
into
and
adc
cmp
and
jmp
test
out
cmp
dec
jne,pt
fs
cmp
adc
hlt
repnz
sbbb
add
out
mov
add
imul
jae
add
mov
popf
data16
sahf
add
repz
sub
or
popa
movsb
repnz
fdivrp
or
ja
insb
mov
add
fucomi
xor
pushf
testb
test
or
stc
xor
cmp
push
dec
mov
loope
xor
arpl
push
shll
push
imul
add
xchg
or
sub
loope
mov
or
add
cmp
inc
xor
loop
push
inc
add
stos
push
lret
xchg
push
roll
xchg
lock
mov
fwait
add
sbb
jge
orl
shll
sbb
movd
jno
and
xlat
inc
and
add
mov
dec
nop
test
aaa
mov
mov
jbe
push
out
shl
pop
or
mov
mov
rolb
inc
add
mov
fiaddl
dec
jge
fldenv
xlat
lahf
jg
push
push
push
ud1
and
ror
dec
add
inc
nop
or
jnp
cld
dec
test
sbb
out
pusha
add
jmp
push
mov
or
outsb
add
xchg
add
in
jl
add
jae
int
xor
xchg
sbb
idivl
das
add
lret
mov
and
sub
adc
push
rorb
xor
add
mov
jo
add
insb
mov
sbbb
movsl
lock
cmp
jge
cmp
cwtl
push
add
cmpsl
and
mov
jl
sub
fistps
addb
phsubd
loopne
dec
xchg
sub
inc
shrl
aaa
and
push
in
mov
add
repnz
imul
lds
pusha
into
btr
cmp
cs
add
add
mov
mov
pop
pusha
inc
pop
or
insb
add
hlt
enter
adc
mov
int
dec
out
sbb
ds
call
xor
adc
push
adc
sub
clc
push
xorb
aas
pusha
ret
filds
and
dec
cld
shlb
testl
add
inc
add
add
or
mov
cmp
inc
pop
lock
or
jae
scas
mov
cmpsb
in
movd
add
push
pushf
popf
push
add
dec
jbe
add
xchg
mov
aas
push
and
pop
or
pop
enter
in
add
lcall
outsl
lret
and
mov
push
mov
mov
lods
test
stc
out
sarb
andl
cltd
mov
dec
out
cmp
mov
hlt
lret
and
pop
cmp
and
test
ret
add
pusha
scas
xor
addb
adc
repz
andl
add
jno
mov
mov
je
add
out
int3
sub
inc
xchg
sar
add
fstl
pmaxub
jmp
pop
test
mov
add
lds
adc
int
push
inc
add
xlat
stc
mov
mov
lahf
push
out
test
mov
push
dec
push
push
lret
in
or
jmp
sbb
pushl
or
inc
and
int
gs
cld
aam
in
mov
incb
outsl
sbb
insl
ficoms
mov
add
repz
popf
repnz
mov
outsl
and
xchg
adc
lea
jle,pt
sbb
jmp
add
insl
cs
cmp
jge
push
int
mov
sub
cmp
mov
xor
outsb
aaa
sbb
stos
push
add
aas
cs
dec
xor
add
ss
insl
sahf
mov
pop
xor
push
push
mov
add
xor
leave
add
jmp
mov
outsl
enter
sbb
mov
pop
push
lods
cmpl
cmp
jae
add
jbe
push
ds
jle
add
daa
dec
int3
aad
add
cmp
pavgw
rorb
add
popa
sub
shlb
or
cmpsb
jo
iret
mov
add
adcl
push
imul
xor
in
sbb
mov
in
aas
push
shll
call
pop
pop
insl
add
cmp
push
cmp
testl
nop
add
jl
add
lds
sbb
push
iret
pop
ret
sbb
out
add
xchg
xor
cmp
cmp
addr16
loope
or
in
or
jne
ds
or
dec
push
push
add
add
fidivl
pop
sub
fidivrs
shlb
inc
sarl
sbb
lods
add
push
and
pop
mov
jno
lahf
jo
pop
xchg
push
jecxz
sbb
stos
mov
mov
imul
imul
lahf
movsb
sbb
hlt
cld
movsl
stos
add
adc
daa
mov
jl
add
or
lcall
mov
cld
jecxz
loop
arpl
push
add
or
adc
repz
cs
clc
ret
aam
jnp
fisttpll
sahf
adc
sti
inc
adcb
sub
pusha
add
or
js
jg
jnp
and
add
out
mov
ds
lcall
add
test
mov
shrl
ret
iret
shrb
ljmp
ja
or
cmp
js
fsin
shrl
mov
daa
add
mov
xchg
rclb
mov
adc
dec
sub
imul
push
jae
push
mov
sub
stos
sub
mov
jnp
add
lea
pop
fiaddl
jl
or
orl
mov
push
scas
sbb
or
jp
lea
sub
fldcw
or
repnz
or
sbb
jae
cmc
jb
mov
lret
push
and
lldt
icebp
in
pop
call
mov
and
mov
in
adc
into
push
mov
sbb
mov
add
and
mov
mov
mov
orb
lods
ds
lds
sbb
mov
push
sti
cmp
roll
fdivrs
add
in
xor
out
call
add
inc
cltd
adc
and
hlt
ret
jne
add
mov
imul
repz
ljmp
add
xor
out
ja
ds
adc
decl
clc
dec
sbb
push
ror
test
mov
xor
pop
mov
idivl
div
add
test
xchg
push
inc
hlt
sub
hlt
dec
out
cmpsl
xor
rorb
in
jmp
push
mov
or
sbb
stos
jbe
leave
arpl
loopne
inc
mulb
inc
sub
push
fstpl
add
xchg
fistpl
sbb
ss
lods
int
iret
jmp
add
push
mov
fistl
adc
int
sarb
push
insl
mov
leave
or
push
std
cmpb
arpl
sub
pop
lds
pop
scas
mov
push
das
sub
add
pop
xchg
inc
int3
xor
mov
loope
and
lret
cli
push
in
inc
add
inc
adc
cs
cmp
jne
stc
adc
xor
sarl
popa
gs
cli
into
add
mov
jo
add
aas
loopne
dec
jnp
mov
push
inc
subl
ja
pop
or
fsubs
das
add
fwait
xor
add
and
fldl
mov
jp
cmc
mov
mov
js
push
les
inc
icebp
xlat
arpl
inc
mov
and
leave
add
add
jo
or
mov
xor
mov
mov
out
and
cmp
ja
push
jp
inc
fwait
mov
push
ja
pop
inc
js
xchg
pop
adc
fwait
shr
push
rorl
xlat
adc
add
test
xchg
clc
dec
mov
or
push
cs
dec
mov
xor
in
lcall
ja
add
int3
cmp
xchg
mov
lds
add
leave
je
mov
scas
mov
inc
dec
and
addr16
repnz
shr
mov
test
lds
mov
fdivl
cmp
je
fildl
movsb
adc
addb
xor
pop
cltd
imul
jge
mov
xchg
pusha
xchg
cmp
dec
mov
int
inc
xchg
mov
add
lret
imul
inc
add
xor
movsl
or
cmp
jg
stos
getsec
out
imul
pop
subb
push
push
sub
cmp
add
sub
lret
add
dec
mov
out
aas
daa
mov
and
popa
mov
stos
insb
cmpsb
iret
rolb
mov
xchg
das
popa
dec
xchg
aaa
and
jb
sub
mov
or
mov
dec
data16
addr16
bound
cwtl
nop
adc
mov
mov
mov
sbb
lahf
test
cwtl
loope
push
es
add
adc
add
addr16
roll
gs
cmp
inc
add
jg
cld
lods
mov
test
aas
xor
add
sub
add
mov
fsubs
hlt
cmp
aam
nop
pop
cltd
cmovb
insb
enter
add
adc
sbb
test
dec
xchg
cmp
add
push
fsubrs
fldenv
dec
fistpl
push
hlt
inc
jo
test
sbb
jns
orb
add
scas
rdtsc
pop
xor
int
fiadds
push
negl
cmp
loopne
add
cs
test
pop
enter
sub
dec
add
xor
sub
arpl
fisubl
pusha
or
rsm
inc
cmp
adc
out
sbb
pop
mov
mov
lods
push
add
addr16
cmp
mov
xor
push
add
mov
imul
clc
xor
add
in
pushf
add
jne
inc
inc
popa
imul
inc
inc
lahf
xor
xor
ret
xchg
inc
and
mov
into
sarl
mov
pushf
adc
xchg
and
sub
mov
and
dec
outsb
shr
xchg
and
mov
pop
and
add
leave
and
cmpsl
add
xchg
lret
xor
aad
int3
test
cld
or
es
rolb
call
mov
push
add
into
mov
push
xchg
cmpsb
out
add
cmp
mov
icebp
dec
push
xorl
add
cmpsb
jle
cmp
shlb
dec
cmp
repz
imul
imul
movsb
jle
cmp
mov
data16
cltd
imulb
add
rcrl
int3
push
loop
add
fmul
jle
mov
xor
pusha
inc
pop
and
ret
add
andb
pop
test
push
inc
cmpsb
loop
push
loopne
pop
fadds
add
aas
nop
cmp
orl
movsb
int3
dec
scas
or
into
cmpb
cli
sbb
roll
insb
or
adc
add
push
push
xchg
xor
sub
xchg
aas
aad
add
daa
cmp
rcl
dec
add
push
jle
adc
add
and
outsl
sbb
or
push
sbb
xor
sub
mov
xor
js
sbb
mov
test
scas
inc
int
mov
xchg
lods
add
cmpsb
pop
cli
add
xchg
jecxz
fnstenv
repnz
pop
in
inc
into
pusha
lcall
fwait
dec
mov
add
push
cs
out
andl
xor
xor
inc
mov
into
add
and
xchg
push
pop
lea
jg
adc
push
das
fsub
mov
test
add
nop
jns
add
inc
mov
add
repnz
xchg
pop
pop
add
out
inc
andb
push
mulb
rcrb
nop
sbb
lea
xor
lods
add
pop
mov
add
sahf
test
add
inc
sbb
lret
call
xchg
nop
pushf
or
push
sbb
insl
repz
xor
sbb
icebp
ja
add
cmc
imul
sbb
push
xor
rclb
cld
sub
add
xor
mov
jl
sbb
add
push
sub
sub
insb
out
mov
xchg
xchg
dec
pop
jl
add
ja
xchg
scas
ret
sub
sbb
test
sub
test
mov
fldenv
popa
add
pop
mov
pop
lods
push
stos
ficomps
mov
or
pusha
mov
cli
data16
out
add
sbb
mov
in
sbb
mov
push
gs
lock
imul
movsb
std
jb
add
icebp
sarl
sub
das
add
orb
mov
sarl
ja
das
sbb
aam
push
dec
shll
mov
inc
daa
cwtl
or
inc
in
inc
xchg
scas
push
lods
pusha
add
or
cs
inc
add
mov
sub
cwtl
repnz
les
outsb
pop
add
sub
pop
gs
jmp
add
ret
cmpsl
pop
dec
sub
nop
xor
push
sub
out
mull
or
mov
add
sbb
in
push
sbb
or
rcrb
sbb
jecxz
jle
adc
xor
inc
jp
sub
adc
xchg
or
mov
add
popa
adc
int
inc
push
rcrl
icebp
mov
movsl
mov
or
fildl
cmp
lcall
stos
sub
fsts
bound
inc
mov
mov
pusha
mov
pop
scas
sti
orb
cmp
and
or
dec
cmp
or
mov
pop
add
mov
cmp
dec
xor
lea
andnps
xorl
in
les
pusha
xlat
sub
or
adcb
pop
mov
adc
xor
mov
jbe
enter
rorb
aad
fcmove
jns
push
int3
add
subb
cmp
incb
cmc
mov
xchg
sub
or
stc
repnz
add
or
cld
cwtl
cmc
testb
rorb
sbb
or
movl
sub
mov
jmp
subb
mov
icebp
push
mov
notl
leave
movsb
aas
push
fadds
add
loope
iret
lods
in
xor
mov
pop
xchg
ljmp
movsb
aam
mov
add
push
mov
inc
inc
out
mov
jle
divl
or
jl
es
add
adc
add
cmc
dec
sbb
rorb
subb
add
xlat
sahf
jle
clc
and
call
ja
lock
xchg
adc
popf
or
and
std
stc
jo
xorb
dec
cmpsl
call
and
add
add
mov
inc
in
out
mov
nop
jecxz
jge
rcrb
or
ds
push
sbb
gs
mov
fcoms
dec
inc
add
cmp
cld
pop
pop
or
add
inc
lcall
and
xchg
clts
jmp
sbb
sub
inc
add
push
dec
sbb
xor
jno
jbe
mov
data16
mov
or
out
ja
add
jp
or
xorb
mov
rclb
pop
leave
cmpb
push
mov
out
andb
ja
or
add
orb
es
arpl
and
dec
addr16
jo
cmp
shrl
jae
repnz
bound
ljmp
push
pop
mov
and
ss
xchg
or
mov
pop
fcmovb
sub
rcrb
xor
add
inc
hlt
fldt
sbb
imul
lods
int3
fnstenv
repz
arpl
inc
adcb
jnp
jecxz
mov
lret
adcl
push
insb
cmp
icebp
adc
js
xchg
loopne
cmp
fistl
testb
sbb
add
lret
aaa
dec
pop
cmp
icebp
lds
cmpsb
ret
inc
int3
aaa
xchg
cmpsb
rolb
arpl
add
jecxz
loop
xor
inc
or
adc
orb
test
in
add
push
iret
and
inc
sub
or
ja
add
fdivr
out
or
mov
loopne
dec
mov
push
or
lcall
fisttps
orb
mov
stc
std
xor
jb
pop
in
add
imul
or
fwait
inc
mov
je
movb
dec
jp
add
ret
js
out
ret
and
xchg
sarb
xchg
add
push
outsb
movsb
mov
push
pop
add
decb
jp
pop
out
push
mov
movsl
adc
pusha
fcomps
pop
adc
cli
adc
push
sub
xchg
add
sbb
cmp
adc
dec
int3
xchg
cmp
or
xchg
testb
xor
leave
incl
or
je
jg
sbbb
mov
xor
dec
cmc
xchg
mov
std
out
mov
adc
xorb
jg
mov
add
mov
cmpsl
xchg
stos
enter
mov
xorb
push
lret
stc
add
int3
sub
push
ror
mov
aas
pop
mov
cli
add
lea
stos
jle
nop
sub
or
pop
add
xor
loope
jbe
mov
aad
add
pop
in
inc
add
push
inc
mov
pop
mov
mov
cli
inc
push
xlat
int3
mov
scas
pop
fwait
repz
dec
divb
stos
cwtl
dec
dec
inc
and
push
sub
push
adc
movsl
adc
sub
daa
in
pop
xor
stos
fmull
lods
out
adc
add
dec
add
sbb
adc
cwtl
mov
add
push
xchg
addr16
mov
mov
push
adc
adc
sub
cltd
dec
cld
aam
push
mov
and
adc
cmp
sbb
aaa
arpl
jmp
and
testb
and
imul
sahf
dec
sbb
mov
xchg
or
jecxz
inc
test
jns
sbb
jle
nop
and
add
xlat
dec
inc
inc
or
cmp
sbb
shlb
imul
shlb
mov
mov
cld
add
xchg
xor
and
jo
xor
repz
mov
add
frstor
jo
pop
cld
or
sbb
loop
in
in
pusha
insl
ja
add
mov
in
repnz
scas
jae
jmp
lea
enter
mov
dec
pop
xchg
fidivrl
les
decl
cwtl
pop
lret
mov
add
xchg
shrb
outsl
push
fldcw
shlb
out
inc
imul
cltd
xorb
imul
and
adcl
cmp
aas
mov
loopne
call
fs
inc
inc
out
dec
and
inc
xchg
lea
test
jle
add
xor
int3
pop
push
adc
sbb
jge
decb
call
fsts
addb
push
inc
mov
pushf
push
pop
andb
movl
sbb
je
mov
mov
sub
push
jns
pop
and
lock
icebp
out
add
ror
mov
or
fs
ret
xor
lahf
push
mov
xor
sub
mov
jge
ds
or
das
add
ss
gs
mov
mov
nop
fmull
cmpsl
bound
jns
xchg
lock
imul
jno
mov
xchg
sarb
adc
add
in
std
xchg
in
adc
jo
cmp
fldl
out
jg
gs
pop
dec
add
push
jb
lret
adc
adc
vmread
add
out
inc
xlat
adc
aaa
repnz
data16
adc
xor
mov
insb
add
mov
testb
fcomi
jle
inc
rolb
xchg
adc
je
pusha
mov
ja
and
ret
jle
test
aaa
dec
sbb
jl
imul
sub
mov
clc
cmp
push
pop
out
pop
out
add
rorl
jne
sub
std
loopne
jge
xchg
dec
iret
sbb
mov
ficoml
mov
out
jle
cmp
pusha
hlt
adc
aas
pusha
mov
sub
das
sub
popa
push
jl
cmp
xchg
add
loopne
es
cld
je
fwait
add
add
adc
push
cmp
jo
in
pusha
out
cld
aas
dec
dec
test
dec
in
mov
xchg
movsl
add
nop
push
iret
add
and
cli
xor
lods
test
mov
or
xchg
mov
lods
xor
shl
dec
mov
repz
jae
fdivs
movsb
add
fmul
std
adc
mov
arpl
aaa
or
jmp
mov
sarb
into
jo
cmpsb
sarb
mov
aad
and
jnp
mov
lcall
fidivrs
setne
addr16
and
add
loopne
push
add
xor
cli
aam
push
add
xchg
cmp
hlt
mov
xor
xor
test
add
dec
cltd
outsl
mov
push
add
inc
leave
jo
out
push
jae
xlat
push
in
xor
inc
pop
loopne
mov
loopne
sbb
mov
jecxz
add
cli
mov
cwtl
or
popa
and
dec
mov
jmp
xor
add
out
sbb
test
push
loope
fsts
dec
in
jns
fimull
push
addb
and
or
clc
aad
fsubrs
adc
sub
mov
xchg
das
xor
js
xor
xor
ljmp
cmc
inc
xchg
arpl
adc
mov
andl
call
and
mov
mov
stc
cwtl
push
add
add
xchg
xor
push
xchg
pusha
shrl
pusha
loopne
enter
add
xchg
add
ja
ss
test
cs
mov
testb
gs
xor
inc
mov
lret
cmc
add
push
push
and
das
mov
mov
pusha
push
dec
loope
inc
inc
in
jmp
jo
push
pop
inc
jp
fsubs
xlat
xor
pop
sbb
clc
mov
add
dec
rorl
add
pop
js
inc
sbb
xor
adc
dec
hlt
pop
xor
xchg
shll
lret
xor
sub
pusha
mov
rolb
iret
in
test
xchg
js
add
and
pusha
or
pusha
pushf
repz
add
pop
jmp
fidivrs
or
hlt
movsl
es
lds
pusha
sarl
and
and
test
jb
jl
or
jmp
lods
mov
jb
dec
leave
stos
cmp
pushf
mov
scas
jnp
add
popf
pop
push
lcall
imul
addb
lcall
push
addr16
xchg
adc
lock
dec
pop
in
jg
xchg
sti
adc
and
sbb
inc
lods
dec
adcl
pop
push
inc
push
sti
add
fisubrs
shll
adc
sbb
pop
sarl
imulb
js
outsb
or
xor
mov
fiaddl
sbb
xor
es
ss
movsl
push
out
or
pop
insl
push
pop
into
sbb
inc
mov
popa
cmpsb
test
aaa
xor
push
adc
pop
pusha
xor
or
int3
outsb
stc
xor
inc
xchg
cwtl
es
xchg
pusha
sbb
cmp
mov
nop
sub
pusha
ror
jmp
xchg
pop
add
lds
int
push
pop
dec
lock
mov
add
cmp
jbe
rorl
imul
push
lods
jbe
enter
and
cmpsb
ljmp
addr16
xchg
jg
sub
sub
xchg
fwait
shl
or
nop
fcompl
or
push
xchg
movsl
pusha
mov
shlb
lea
mov
xchg
enter
pusha
out
mov
adc
mov
cmc
adc
jp
test
push
and
pusha
adcl
pusha
jl
out
xchg
insb
pusha
mov
in
push
or
cmpsb
lahf
lods
pusha
cmp
add
pop
add
and
nop
ds
cmp
sub
nop
clc
repnz
cs
and
pop
inc
push
push
pusha
add
pop
fcoms
or
lret
rclb
lock
add
jo
insl
loopne
insl
push
pop
in
cmpl
xor
rcrb
orl
xchg
add
ja
inc
inc
outsb
insb
dec
in
and
mov
insl
mov
int3
mov
dec
or
dec
lret
and
jl
pop
fwait
icebp
fstps
sub
scas
xor
adc
movsl
stos
and
aas
xchg
je
inc
out
push
add
jb
and
jae
arpl
adc
xlat
push
movzbl
sub
loopne
fucomp
sbb
xchg
outsl
pusha
lock
popa
bsf
cmpsl
js
push
mov
inc
jb
sub
rolb
push
fistl
cwtl
popl
and
popl
or
adc
mov
outsb
add
mov
cld
xchg
or
leave
and
test
sbb
or
pusha
add
push
dec
or
jo
add
mov
and
loopne
xchg
shll
bound
and
iret
jno
sub
xor
popa
lods
pusha
and
lock
xchg
outsl
pusha
shll
punpcklbw
xchg
push
into
add
popa
adc
inc
push
xchg
lock
push
xchg
jnp
or
xchg
sub
mov
xchg
add
test
cmp
lds
test
int
jle
push
andl
sub
adc
add
mov
xchg
add
adc
mov
cwtl
pusha
shrb
stos
orb
sub
stos
je
popa
out
push
pusha
mov
ret
and
push
mov
or
sar
xor
push
xchg
push
xchg
sub
push
imull
popa
outsl
pusha
shlb
test
xorl
icebp
pop
push
mov
push
add
out
ljmp
sbb
adc
dec
andb
adc
mov
cmp
push
mov
xor
lock
and
adc
dec
subl
or
xchg
sub
pop
mov
cmp
add
and
jae
test
shrl
fcmovnb
popa
push
jae
shll
pushf
push
xchg
xor
inc
pusha
ret
daa
adc
cltd
jne,pt
adc
xchg
mov
adc
xchg
shll
xlat
push
add
jg
push
icebp
push
addr16
pusha
xor
mov
jne
adc
lar
cmpsl
lods
sbb
add
inc
aam
cmp
or
and
or
xor
adc
push
dec
sbb
sbb
ja
push
in
add
ja
add
scas
in
xlat
roll
xchg
or
xchg
shl
daa
push
stos
pusha
ret
and
pusha
add
sahf
and
stos
mull
addb
popl
and
and
or
inc
mov
pusha
add
sub
jne
dec
sbb
scas
lods
pusha
adcl
push
adc
mov
int3
aaa
inc
push
movl
push
mov
popa
sbb
mov
mov
pop
jno
jno
mov
cmpsl
jae
cwtl
inc
adc
pop
push
stos
jo
test
out
pusha
push
cmp
sub
push
jle
mov
ja
xorl
pop
mov
mov
loop
outsl
scas
xchg
xchg
sub
push
cwtl
jo
xor
inc
pop
punpcklbw
push
dec
cmpsl
and
out
mov
jo,pt
inc
leave
popa
out
and
cli
cmpsb
rcr
add
out
push
push
pusha
orb
mov
mov
mov
jp
pop
mov
mov
sub
mov
xchg
loopne
fs
pusha
cmp
divl
lods
popa
inc
mov
jo
mov
inc
out
pusha
add
ret
mov
xchg
pushf
mov
inc
push
popa
jb
add
adc
add
dec
pop
xorb
fwait
or
sarb
mov
mov
movsl
jbe
inc
ljmp
pop
adc
jge
shll
call
pop
popl
adc
jge
adc
fwait
sub
popa
out
pop
inc
xor
pop
pusha
push
aaa
inc
cmp
or
pop
clc
mov
xchg
shll
add
mov
cmpl
popa
mov
out
and
icebp
repnz
loopne
add
mov
dec
jb
nop
cmpsl
adc
mov
xchg
lret
loope
rcrb
cmovo
insb
pusha
int
add
mov
ret
insb
icebp
adc
inc
lock
bound
inc
cld
icebp
inc
pop
add
xchg
dec
pop
adc
mov
ds
pusha
push
or
xor
punpcklbw
sbb
out
sbb
xor
sbb
insb
js
adc
cmp
mov
lahf
rolb
movsl
nop
inc
iret
fisttps
mov
inc
or
aaa
imul
or
or
popa
add
cmp
adc
push
pop
and
push
loope
pop
pushf
and
or
sbb
popl
adc
pop
lock
push
repnz
and
push
inc
loopne
xchg
add
scas
inc
rcrb
mov
xchg
lock
call
call
xchg
rorb
add
repnz
inc
insl
add
ds
lahf
jbe
shl
xchg
rorl
mov
clc
imul
popl
and
mov
or
fdivrp
or
jo
dec
ret
jbe
dec
pushf
inc
adc
in
lods
inc
sti
mov
loop
pop
mov
shrb
out
xchg
aas
or
enter
in
roll
cmpsb
popl
insl
adc
or
jmp
push
or
mov
push
filds
loopne
xchg
xor
insb
mov
mov
lock
mov
movsl
rcrb
sub
sahf
pop
sbb
fwait
enter
mov
outsb
mov
push
dec
bound
movsb
and
popa
inc
cwtl
shlb
repnz
xlat
outsb
dec
lcall
fdivrs
adc
xchg
xor
mov
loopne
push
movsb
rolb
ss
insb
jmp
mov
cmp
and
jne
dec
mov
into
cmp
popa
movl
inc
and
ds
cli
mov
shl
mov
int
dec
shr
sbb
adc
xor
lock
shl
pop
push
jb
sub
add
jmp
fmul
inc
sub
adcl
mov
adc
mov
lock
bound
or
movsl
outsl
or
lock
rolb
nop
popl
xor
rolb
lret
inc
mov
movsl
call
jo
loopne
mov
adc
loope
out
dec
sarb
lahf
xchg
push
inc
lret
scas
in
xor
lock
jl
adc
cli
inc
rorb
test
inc
mov
pop
mov
jno
insl
dec
into
adc
lock
imul
movsl
test
clc
fmul
adc
ror
push
lahf
hlt
cmpsl
cmp
dec
sbb
fdivrl
fnstenv
dec
leave
or
pop
push
adc
fisubrl
or
fcomps
adc
fcoml
dec
adc
shl
add
push
inc
mov
imul
dec
adc
adc
shlb
adc
or
add
test
mov
sbb
shl
sub
mov
jbe
jo
fcomip
adc
push
bound
pusha
or
scas
icebp
insb
xor
push
push
rol
sub
dec
shrb
mov
push
les
push
hlt
lods
shll
jecxz
inc
cltd
les
pusha
fcmovne
ret
stos
scas
pusha
push
dec
mov
adc
sub
ds
push
and
jl
sbb
xor
popa
sub
lods
pusha
orl
xchg
mov
popa
dec
xchg
scas
jae
cwtl
and
imul
mov
fstps
sahf
and
out
cltd
test
adc
dec
push
push
ret
shlb
loopne
xchg
lods
xlat
dec
cmovs
fcmovnb
xchg
sub
fmull
dec
popl
mov
fsubl
dec
lcall
imul
push
loopne
popa
repz
popl
mov
popf
out
mov
inc
add
jl
or
xor
xor
push
cmp
repz
push
lret
add
repnz
sbb
adc
pusha
mov
xor
pusha
lock
inc
mov
xchg
xor
mov
cmp
pusha
sbb
or
pop
into
pmulhw
adc
sbb
cltd
pop
popa
sub
lods
pusha
or
dec
mov
push
cmp
popa
imul
js
stc
and
mov
in
testl
outsl
sub
pop
in
xlat
call
inc
js
or
mov
inc
lock
push
adc
andb
loop
cmp
fldcw
mov
sub
pushf
sbb
add
popa
mov
mov
xor
jbe
stos
mov
xchg
in
mov
adc
movsl
mov
bound
pusha
add
xchg
mov
push
jl
sbb
adc
pusha
mov
rorb
inc
lods
and
loopne
les
add
xor
inc
or
pusha
rcrb
negb
adcl
cld
insb
dec
pop
mov
mov
dec
push
out
xor
pusha
shll
imul
mov
mov
pusha
out
adc
lret
push
sbb
mov
aas
mov
or
sub
rolb
sbb
push
xor
adc
pusha
add
or
ret
xor
and
push
imul
pushf
xor
mov
or
ds
outsb
nop
stos
test
dec
pushf
clc
popl
xlat
orl
mov
mov
insb
pusha
adc
adc
dec
lock
and
testl
and
mov
add
jmp
dec
clc
sub
movsl
and
divl
stos
mov
xor
inc
loopne
or
jl
sbb
jmp
or
lods
pusha
sub
mov
and
sub
rorb
mov
mov
lods
push
fsubl
mov
or
jbe
nop
stos
test
mov
jae
push
jge
shlb
inc
mov
add
xor
cmp
mov
and
add
inc
mov
mov
xor
cli
xor
sbbb
ret
sub
push
rcr
pop
clc
xor
cmp
ss
mov
pop
pop
sbb
mov
mov
cld
pop
lock
mov
inc
pusha
shlb
cmp
popl
adc
aam
and
xlat
fnsave
jl
ds
sbb
and
enter
cmp
sti
orl
out
pop
jno
imul
aam
clc
sbb
mov
cmc
int3
or
les
cmp
movl
mulb
popa
and
push
rcrl
pushf
jle
pop
imul
mov
div
pop
push
xor
and
notb
xor
adc
jl
cmp
push
shlb
loopne
scas
dec
pop
inc
negb
pusha
or
mov
test
or
popl
adc
pop
lock
and
sub
pop
insb
sbb
adc
andl
xchg
xor
ds
fistpll
mov
rclb
dec
les
pop
mov
and
add
dec
fmuls
adc
or
push
lcall
jbe
cmp
and
je
xchg
in
adc
mov
cltd
jg
sub
mov
adc
xor
jns
mov
jnp
mov
fwait
mov
jl
sub
or
push
js
andl
push
fs
sbbl
jle
inc
mov
xor
scas
xor
inc
clc
and
pop
enter
ja
lahf
adc
pushf
mov
cmp
mov
mov
mov
push
fwait
test
add
mov
xchg
jle
push
sarl
cmpsl
dec
scas
or
lret
enter
push
out
add
andb
daa
pop
popa
xchg
mov
js
fdivs
loopne
push
jge
xchg
and
test
inc
lock
sbb
pusha
das
fxch
cmpsl
jno
add
sbb
outsl
rcrl
adc
test
clc
sub
cmp
add
aas
leave
inc
aam
je
repnz
add
data16
call
cmp
fbld
and
cmp
and
push
mov
sahf
ror
add
adc
and
sub
mov
inc
js
insb
packuswb
push
pop
cmpb
enter
or
pop
mov
hlt
or
xchg
mov
mov
int
aaa
dec
sti
js
mov
mov
mov
cmp
sbb
add
inc
ret
into
aas
cmp
sbb
inc
pop
cmp
cmp
adcl
in
dec
push
subb
dec
test
in
lret
xor
lods
adc
into
inc
add
aam
pop
mov
mov
pop
xor
call
inc
or
push
pop
insb
cmp
xor
rclb
mov
jno
jmp
and
movsl
cli
xlat
push
int3
pop
shll
into
inc
loopne
mov
xor
sub
adcb
mov
cs
push
add
js
call
pop
mov
xchg
aam
aas
leave
dec
inc
mov
adc
adc
mov
add
sub
jmp
in
pusha
aam
adc
jno
faddl
enter
or
in
pop
daa
and
dec
test
adc
jo
test
mov
cmp
int3
mov
addb
in
lds
bound
mov
sub
mov
mov
int3
cmp
jns
xor
rclb
stc
leave
cmpsl
popl
jbe
sub
sbb
or
out
push
ret
xor
lret
bnd
and
fdivrs
cmp
or
mov
cmpsl
jle
sub
add
xor
jmp
cld
pop
push
jp
outsb
xchg
jge
dec
jg
hlt
test
sub
xor
cmp
in
nop
in
into
call
jge
xor
test
ret
xchg
sbb
inc
lcall
and
sub
cmp
sub
cld
inc
lock
aam
daa
jae
bound
inc
mov
popf
js
rorb
sbb
adc
fdivrl
push
shl
dec
inc
mov
or
pop
cltd
add
mov
shll
lods
mov
mov
add
lods
das
mov
dec
adc
push
fdivrs
jg
mov
mov
xchg
fldcw
nop
mov
leave
push
nop
or
inc
push
pop
or
loope
vandnps
insb
mov
clc
ficoml
xchg
arpl
add
push
roll
and
ja
popf
daa
adc
push
xchg
push
add
and
mov
push
pop
lea
loop
pop
cltd
add
add
pop
pop
or
adc
sbb
js
or
nop
sub
jmp
mov
or
pop
xchg
insb
cmp
mov
adc
in
mov
fidivs
cwtl
mov
sti
and
shrb
jmp
dec
xchg
inc
mov
in
xorb
push
inc
lcall
xor
inc
inc
clc
fsubs
mov
bound
ret
sbb
xor
push
sti
cmp
sbb
scas
add
sub
sbb
inc
loop
ss
outsb
xor
xor
stc
sahf
mov
sub
aas
adc
sbb
add
mov
dec
jo
adc
aam
and
jp
stos
test
pop
inc
sbb
and
outsl
push
or
sbb
lret
test
adc
into
mov
xor
xor
or
test
inc
movsb
sbb
aas
mov
or
or
test
and
cmp
dec
or
gs
mov
es
js
push
cmp
inc
pop
and
add
pop
lods
xchg
pop
cs
add
nop
adc
add
dec
leave
mov
fisttpll
jmp
or
cmp
jb
testb
fsubs
xor
repz
lock
add
movsb
add
repz
xchg
push
sti
add
sbb
xor
cmovbe
cwtl
fidivs
inc
xchg
test
out
or
cs
mov
xor
inc
mov
inc
pop
in
sarb
fldl
jge
xor
inc
push
add
inc
insb
add
out
xchg
jae,pn
rolb
je
std
xchg
fsub
cmp
bound
inc
add
mov
adc
mov
push
cmc
rolb
call
scas
cld
sbb
pop
inc
sarb
push
pusha
cmp
jnp
and
add
mov
add
ds
daa
or
ret
cltd
add
pop
adc
or
sbb
mov
std
push
mov
ja
add
xlat
adc
ret
lds
gs
pop
inc
adc
test
pusha
xor
inc
push
rol
loopne
inc
les
jae
nop
adc
cli
imul
ja
lods
out
loop
and
cmpsl
scas
sub
js
and
and
add
xor
repz
mov
xchg
pop
test
sub
mov
xor
xchg
jmp
and
clc
and
hlt
xchg
dec
pushf
out
and
push
repnz
hlt
or
out
mov
push
inc
mov
out
cmp
mov
dec
inc
xchg
ret
test
test
sub
out
sub
dec
cli
xor
loopne
mov
sbb
imul
cltd
mov
xor
inc
push
jle
cld
repnz
add
mov
lret
xchg
je
cmp
inc
fs
sub
xor
push
rcrl
ljmp
cmp
pop
in
loopne
stos
in
shrb
cltd
cltd
adc
sbb
stc
xor
or
pop
and
jp
add
js
jo
subb
inc
faddl
mulb
int
adc
sub
push
push
sub
push
push
add
pop
dec
test
sub
mov
sbb
stos
test
push
out
add
icebp
add
add
mov
inc
into
xor
mov
popf
jne
into
inc
or
push
in
paddusb
add
add
testl
into
inc
sbb
outsb
cmp
in
push
sbb
mov
mov
xor
adc
jno
xlat
fimull
mov
lds
out
cwtl
mov
mov
notb
sub
xchg
fsubs
ret
test
and
test
insb
sub
rcrl
push
lret
imul
mov
test
rorb
out
std
or
fnstenv
push
add
adc
inc
adc
push
sub
adc
mov
mulb
inc
nop
lea
or
or
adcb
xor
pusha
mov
adc
pop
pop
xor
add
sub
mov
enter
imul
mov
xor
mov
pop
pop
rcll
fiaddl
or
or
jl
out
aam
cmp
sbb
xchg
scas
jg
clc
xchg
and
enter
pop
mov
sbb
or
jge
rolb
fldenv
call
xor
cmp
or
fiaddl
mov
mov
pusha
and
dec
xor
mov
mov
lds
aad
mov
fdivrl
jns
lods
push
cmp
xor
cmp
scas
test
add
jne
rolb
sub
jbe
adc
rorl
dec
aam
push
pop
movsl
or
lock
lcall
push
and
mov
and
loopne
test
add
sbb
imul
adc
hlt
cmp
push
pop
sbb
mov
jbe
add
int3
cmp
cs
daa
add
or
cmc
test
ja
mov
adc
sahf
pop
mov
inc
arpl
pop
add
mov
pusha
dec
add
jae
ja
pop
test
and
xchg
xor
pop
cmc
flds
or
push
add
mov
out
add
jbe
jnp
mov
or
push
fsubp
inc
mov
jae
les
cmp
outsl
xor
mov
push
cltd
mov
outsb
shr
adc
mov
push
addb
mull
lcall
pop
out
add
pop
sub
sbb
jo
test
pop
add
cmp
mov
stc
inc
iret
mov
xchg
sbb
test
pop
cltd
flds
mov
int3
das
dec
jbe
pusha
addr16
xchg
pusha
jmp
sub
sbb
stos
inc
dec
outsb
or
lods
aas
jecxz
mov
dec
add
jne
ss
mov
insl
setae
outsl
xchg
lds
dec
add
mov
xchg
add
and
pop
push
jnp
lret
add
sub
push
or
add
dec
jae
push
inc
insb
sub
mov
movsb
or
addb
cmc
scas
add
icebp
add
fwait
add
stos
jmp
aam
das
add
xchg
stos
inc
notl
push
rcrl
cmpl
xchg
add
loopne
int3
xchg
stos
rorb
pop
add
insl
push
xor
fs
cmp
pop
imul
push
mov
addr16
sbb
cmp
mov
dec
and
and
add
pop
jae
add
into
outsb
push
icebp
sbb
mov
arpl
ljmp
hlt
lahf
push
cmp
int3
out
add
cmp
xchg
fs
test
loop
out
outsb
js
cmp
mov
xor
mov
popa
xor
sarl
hlt
adc
add
xchg
loop
add
mov
inc
push
test
add
pop
and
cmp
pop
mov
add
rclb
ret
shlb
cmpsb
or
ja
add
jne
push
add
lds
repnz
jae
add
mov
xchg
jg
push
add
pop
js
pop
subl
push
dec
loop
xchg
dec
mov
add
popa
adc
mov
outsb
or
mov
jmp
and
loope
add
inc
jl
or
add
inc
repz
ficoms
inc
mov
cwtl
mov
push
mov
mov
push
and
div
cvtps2pi
push
inc
mov
add
test
cmove
add
subb
add
sub
push
int
add
add
or
jae
push
jmp
cmp
movsl
add
icebp
pop
add
mov
cmpl
or
cmp
mov
adc
and
sti
add
jl
xchg
nop
outsl
call
cmpsb
and
jbe
rolb
imul
pop
aaa
sbb
scas
sti
sarb
add
lea
inc
addb
jmp
pop
add
jmp
aad
cli
add
movsl
call
sub
loopne
sti
negl
mov
dec
dec
aas
push
pop
xchg
imul
idivb
sbb
cmp
add
loope
and
fdivp
daa
sbb
push
dec
fnstcw
sbb
sbb
lock
cli
stos
pusha
push
xor
dec
jp
add
jg
sub
mov
rclb
jge
add
pop
fists
adc
push
add
bound
testl
mov
stos
mov
push
out
add
mov
fst
pop
xor
add
mov
adc
or
outsb
into
mov
add
nop
rolb
out
roll
lds
scas
aas
es
push
pop
psubsb
mulb
mov
inc
push
add
ss
add
add
movsl
test
shl
or
int3
sbb
dec
adc
cmc
sbb
add
sbb
adc
lret
dec
add
data16
cli
sti
xchg
fcomps
out
and
repnz
push
lcall
or
push
add
push
loopne
add
cmpsb
std
in
dec
jne
lods
sub
repz
xorb
sbbl
fstpl
lea
shlb
add
dec
push
mov
cli
test
push
cmp
imul
sarl
test
xchg
xor
mov
add
push
dec
jne
push
testl
inc
movsb
push
int
data16
loopne
mov
sti
dec
out
mov
icebp
and
add
cwtl
adc
loopne
push
jnp
addl
and
dec
inc
mov
clc
jl
fiaddl
mov
aad
and
cmp
adc
mov
xlat
mov
jge
pop
add
xchg
xchg
dec
ret
mov
or
inc
xchg
dec
lock
mov
lock
xchg
push
imul
add
enter
data16
and
sbb
mov
pop
stos
xlat
jns
test
add
inc
mov
sub
add
or
mov
test
aas
mov
add
mov
aaa
in
lret
sub
leave
imul
mov
test
in
cmp
insb
and
jle
shlb
add
test
fdivrp
sbb
sbb
jo
ret
add
fstpt
aas
pop
cmp
call
xor
out
and
mov
inc
add
and
pop
xchg
out
mov
xchg
insb
int3
stos
sub
lds
dec
std
mov
flds
test
xor
cmp
leave
ja
mov
test
jae
daa
add
mov
jb
fistl
in
dec
add
mov
jp
add
pop
out
fwait
mov
push
iret
lods
push
fmuls
jbe
cltd
push
push
xlat
jne
pop
sbbb
int
or
divl
cmc
add
add
mov
shrb
dec
add
stc
fsubp
and
jae
lahf
dec
mov
fwait
cmp
and
dec
sti
add
lds
ret
inc
sbb
mov
add
jb
loope
push
add
fidivl
imul
xor
xchg
add
push
gs
cs
lahf
inc
add
jae
jmp
pop
add
or
pop
loope
imul
mov
pop
xor
ret
mov
call
add
clc
ljmp
int
xchg
dec
cld
out
cmp
test
add
push
imul
mov
xchg
add
jb
insb
add
inc
xor
pop
mov
sbb
cmp
movsb
div
sti
add
cmp
jno
fisubrs
int3
add
mov
add
test
stc
add
leave
pop
test
lcall
sarl
fwait
lds
lock
adc
int
xchg
mov
cmp
mov
add
imulb
std
out
mov
call
add
popf
add
icebp
pop
mov
repnz
int
or
dec
add
dec
xchg
add
imul
lds
inc
cmc
mov
outsl
inc
adc
test
add
and
add
in
push
out
bound
add
roll
or
into
stos
loop
pop
outsb
ja
or
rolb
lds
add
jo
inc
stc
aam
scas
add
into
inc
leave
add
mov
insb
add
outsl
add
mov
js
mov
in
dec
xchg
pop
push
clc
adc
lret
cmc
or
add
jle
in
lds
add
fs
lahf
test
test
sbb
jl
cvtps2pd
mov
mov
mov
mov
cmpsl
rorb
add
xchg
data16
mulps
and
test
xchg
add
dec
incb
pop
sub
popaw
insl
add
xchg
sbb
ss
nop
sub
dec
add
inc
cltd
psubusb
mov
inc
push
add
add
adc
loopne
push
sub
rclb
pop
das
push
or
cmpsl
arpl
sbb
mov
xor
xchg
stc
or
jno
mov
std
add
sub
add
push
jns
inc
dec
je
flds
addr16
outsl
xor
xchg
stos
add
aad
lods
add
mov
fidivrl
dec
pop
addr16
test
mov
inc
jae
push
les
xor
dec
lods
or
or
and
cmpsl
rol
sbbb
mov
sbb
inc
ja
flds
sub
movsl
xchg
fcoms
lock
mov
rclb
mov
adc
call
das
jp
lds
sysexit
pop
mov
lcall
aad
loopne
and
mov
cmp
dec
out
cli
mov
jns
test
xchg
pop
ret
xor
dec
adc
into
mov
mov
out
test
addb
push
pop
stc
xchg
ret
stos
sahf
jb
jae
movsb
and
xor
dec
pusha
std
out
mov
and
fdivr
sbb
pop
inc
sub
les
mov
pop
sbb
bswap
or
mov
arpl
push
hlt
outsl
push
pop
xor
add
aam
or
pop
push
and
fnstenv
add
dec
pop
adc
pop
mov
roll
add
jae
mov
xchg
inc
mov
xor
cmpsb
dec
enter
sub
cwtl
pop
jnp
or
into
cmp
shlb
dec
cwtl
hlt
xchg
sbb
out
stos
dec
iret
addb
xchg
jl
sti
pop
imull
fldl
push
dec
pushf
xor
jns
sbb
add
mov
insl
add
pop
add
in
shrb
ret
pop
cwtl
inc
jno
inc
add
test
dec
add
add
insl
js
jge
mov
rclb
adc
sahf
add
xchg
mov
mov
repz
dec
xchg
outsl
mov
roll
adc
push
and
lret
cmp
add
int3
and
stos
stc
nop
sbb
xchg
push
rclb
adcl
push
scas
incb
adc
pushf
and
mov
push
rorl
hlt
add
dec
pop
add
mov
adc
shlb
add
mov
cmp
outsl
add
sub
add
xor
sub
and
and
or
into
inc
inc
pushf
or
orb
push
cmpsl
pusha
cmp
mov
addr16
lahf
setb
pop
in
jge
shr
xchg
jae
cmp
repz
mov
lods
loopne
add
mov
mov
add
adc
dec
nop
or
cltd
add
and
add
adc
aad
add
sbb
icebp
in
daa
sub
and
aad
out
mov
sbb
and
mov
xorb
push
adc
imul
sub
jle
js
mov
enter
pop
sub
add
pop
xor
leave
mov
sbb
push
push
add
or
imull
dec
add
movsb
sub
hlt
repnz
dec
out
leave
push
shlb
jne
mov
add
lds
nop
sti
push
mov
push
push
fs
lock
xchg
jmp
bnd
cmc
jnp
or
pop
jmp
adc
mov
jl
add
inc
sub
daa
popa
sub
hlt
rorb
push
and
jmp
sbb
ljmp
out
sbb
int
inc
sbb
or
jmp
daa
mov
add
xlat
cmpsl
out
sub
hlt
mov
addr16
jg
push
bound
sbb
fbstp
jne
pop
arpl
inc
cltd
nop
jmp
aam
xor
jl
andb
push
jp
fdivl
fldenv
ja
add
push
push
out
inc
mov
pop
add
push
push
in
lods
repz
inc
inc
sbb
jp
ja
aad
aam
sbb
ljmp
add
iret
and
jle
add
mov
daa
xchg
add
jmp
xbegin
repz
stos
pusha
mov
push
pop
ret
add
add
mov
cli
sub
addl
arpl
pop
sarb
aad
add
jmp
inc
jp
enter
stos
mov
int3
sarb
mov
addb
out
push
fcmovbe
insl
mov
sbb
and
sarb
lahf
adc
rolb
dec
mov
imul
loope
inc
das
scas
push
jo
add
sbb
rcrb
dec
bound
std
add
imul
jo
push
cs
cmpb
call
test
pusha
adc
jmp
jp
mov
sbb
pushf
notl
inc
add
bound
sbb
dec
sbb
leave
xor
add
sub
add
xor
js
push
jmp
cmp
rolb
jbe
loope
rolb
outsb
add
or
pop
add
dec
cltd
push
fmuls
aas
popl
sbb
jbe
lret
sbb
fwait
and
sbb
lahf
outsl
xchg
jno
les
cmpsw
popa
stos
lods
add
scas
push
mov
inc
cmp
incb
scas
and
cmc
mov
jns
add
mov
sti
cmp
xchg
adcb
sbb
mov
add
aad
out
xor
mov
pushf
or
adc
clc
sbb
sahf
ja
pusha
int
loope
add
mov
xchg
xor
jp
jecxz
mov
mov
add
cwtl
mov
aaa
adc
jp
mov
ljmp
sub
inc
add
cli
adc
add
faddl
add
arpl
out
add
sahf
icebp
adc
cmp
mov
adc
jo
cmp
sbb
mov
xlat
add
lds
popa
jne
jmp
cld
cs
and
fiadds
das
std
out
jecxz
outsb
cmp
mov
shll
repnz
iret
js
out
and
push
fidivs
pop
inc
xchg
fdivrl
add
inc
xchg
xchg
mov
push
stos
outsb
scas
sti
cmpsl
in
adc
xchg
sub
add
pop
mov
jle
add
mov
stos
inc
dec
pop
scas
add
pop
test
push
cmp
pop
mov
or
scas
mov
jl
addb
je
and
add
mov
dec
jbe
not
mov
sub
fisttpll
js
out
mov
in
imul
std
shlb
inc
arpl
mov
pop
pop
pop
mov
jmp
jbe
jle
cs
pop
add
mov
mulb
test
cli
jmp
fldl
lret
pop
xchg
inc
adc
mov
push
push
shl
pusha
add
mov
mov
ficompl
add
stos
and
aaa
loop
pop
testb
dec
push
xchg
add
movsl
dec
ret
lcall
nop
movsb
adc
inc
inc
cmc
repnz
ret
dec
mov
add
mov
rorb
ds
scas
cmpb
push
push
mov
or
xchg
adc
dec
adc
jb
pop
clc
loop
test
dec
lock
icebp
pushf
rclb
dec
in
add
dec
fwait
out
or
addb
cmpl
pop
test
cld
push
flds
loopne
adc
cmpsb
and
lret
out
mov
pop
add
adc
or
movsb
dec
lcall
sub
add
rolb
aaa
push
pop
cmp
test
inc
add
push
stos
push
add
pop
lahf
fldl
add
cmc
sbb
aam
inc
incl
roll
xchg
and
and
and
movsb
into
out
cwtl
mov
push
cmp
pop
add
mov
mov
lahf
add
mov
inc
xor
imul
add
push
mov
outsb
ret
rcrb
mov
mov
pusha
ds
sbb
dec
lahf
add
mov
pusha
dec
sub
xorl
aaa
es
pop
sbb
inc
repnz
in
cli
rolb
mov
jne
rcrb
add
das
jmp
dec
add
push
adc
mov
jns
add
inc
cmc
mov
mov
add
and
add
mov
jg
cmp
js
fistl
js
andb
xor
shlb
lea
sub
sub
push
push
flds
insl
cltd
dec
hlt
arpl
sbb
pop
jl
adc
xor
or
add
push
lcall
addb
push
fisttps
shrb
jae
sbb
adc
or
jle
adcl
fwait
testb
mov
pop
add
mov
adc
fs
mov
xchg
rcl
shll
cmpsl
and
cmp
ja
or
xchg
inc
and
lock
jae
add
adc
js
insl
cld
cmp
add
std
or
mov
push
jns
sti
add
fcomip
xor
cmp
jl
adc
xor
mov
out
fidivl
dec
inc
xchg
add
neg
adcl
jge,pn
ja
fdivrl
xchg
dec
cmp
jae
adc
call
les
sbb
cmp
sahf
xchg
push
push
inc
lods
test
add
inc
std
mov
roll
jp
add
pop
outsl
mov
sub
or
in
mov
push
add
cltd
dec
cmpsb
cmpsl
dec
arpl
xchg
outsb
mov
sbb
adc
xor
jne
or
xchg
loope
sub
jp
push
daa
jo
xchg
and
fnstcw
add
cmp
mov
sarl
add
jmp
rclb
dec
xor
sub
sub
repz
arpl
mov
cld
push
int
adc
orl
out
cmp
mov
sub
hlt
jae
div
ret
test
pop
jb
lods
sbb
sub
hlt
xor
data16
orb
push
add
pop
jmp
cmp
loopne
jb
outsb
sahf
jp
loopne
cmpsb
and
push
sbb
shl
add
addl
fcomps
lret
pop
rol
pop
xchg
enter
arpl
pop
xchg
inc
jbe
js
mov
scas
fidivs
sub
push
pop
pop
or
in
les
and
inc
xchg
mov
jbe
iret
add
inc
jo
cs
out
pop
lahf
pop
add
push
dec
je
mov
aas
popf
mov
test
sub
xchg
adc
xchg
jg
sub
or
xor
dec
add
repz
jle
inc
lahf
adcb
pop
pop
or
pop
mov
xor
push
xorl
je
push
jge
add
mov
ss
xor
cwtl
in
ds
sbb
adc
mov
sub
fdiv
lods
or
out
enter
cmp
push
dec
add
push
jmp
sbb
sbb
repnz
sbb
cmp
in
test
imulb
add
sti
xor
cmp
pusha
jo
loopne
pop
jl
cmp
test
sar
jp
nop
mov
loope
inc
je
jb
add
test
add
jle
or
lods
repnz
mov
fbstp
add
mov
adc
sbb
fstpl
mov
rclb
adc
pop
nop
faddl
inc
mov
adc
jbe
aad
mov
mov
xor
mov
fstl
in
or
and
shrb
fwait
add
push
es
push
push
imul
cmpsl
mov
int
cmp
xor
cmp
dec
add
sti
cmpsb
stc
mov
sub
or
scas
addb
add
lahf
mov
xor
sarb
ljmp
aam
dec
add
mov
and
add
into
cwtl
xlat
xor
cmpsl
rolb
out
inc
inc
hlt
push
cltd
call
sub
mov
push
data16
jb
xchg
add
aam
jge
popf
bound
mov
or
add
mov
adcl
mov
dec
push
xor
fdivrl
out
sbb
iret
add
xlat
mov
pop
adc
les
xor
add
das
fwait
aaa
sbb
sub
xlat
push
jbe
out
pop
mov
add
fimuls
in
sub
mov
test
pop
icebp
fsubp
mov
add
cmp
adc
test
xchg
ja
in
les
jp
hlt
and
xchg
mov
and
push
fldenv
cld
sbb
add
loop
pushf
fwait
shll
push
push
pop
xchg
mov
mov
fsubs
sti
mov
xchg
adc
mov
add
lret
jge
cwtl
sbb
xchg
push
popf
loopne
insb
add
pop
es
pop
lahf
imul
inc
cmp
inc
or
leave
push
push
push
sub
mov
movsl
mov
sub
pop
repz
imul
sub
movsb
sbb
or
and
adcb
popa
stos
out
push
sub
mov
jno
add
pusha
sub
sbb
in
sbb
pop
cmp
pop
repz
clc
xchg
in
sbb
adc
sbb
smsw
push
aam
cltd
add
fsts
je
mov
ss
push
add
or
incb
cmp
lret
pushf
add
ljmp
cld
nop
sbb
flds
call
mov
sti
adcl
repz
fwait
mov
and
outsl
and
dec
add
out
cltd
lods
pop
mov
cmp
stc
xor
inc
sbb
push
aas
or
nop
in
dec
add
lock
and
push
inc
xchg
mov
pushf
in
sahf
push
sbb
pop
bound
fsubrl
and
dec
loope
pop
popa
fadds
fs
inc
imul
jle
push
lock
cld
sbb
shl
bound
mov
scas
aas
sub
std
lods
add
adc
or
jecxz
cmp
pop
insl
and
mov
jae
pop
sub
xlat
push
xchg
out
mov
or
or
inc
into
inc
push
out
mov
jmp
cli
adc
mov
mov
lahf
data16
cmp
addb
inc
add
mov
sub
add
hlt
xor
jg
inc
clc
repnz
and
mov
mov
add
pop
das
jne
orb
add
hlt
mov
loope
pop
push
arpl
lret
fdivrs
xor
xor
repnz
and
adc
imul
mov
nop
into
adc
imul
cmp
jb
or
mov
adc
sub
jmp
andb
pop
add
pop
mov
inc
xchg
movb
shld
mov
enter
xchg
add
jo
xor
out
sti
push
jge
or
xor
sub
xor
pop
imul
pop
jo
xchg
fiaddl
inc
xlat
cmp
stc
inc
xor
and
loopne
repnz
mov
call
mov
fidivs
xchg
mov
sbb
add
repnz
test
adc
pop
push
add
jl
xor
push
mov
mov
push
cltd
in
pop
add
es
pop
dec
lods
mov
ds
fadds
pusha
arpl
lock
pop
es
jnp
dec
push
add
addb
push
fcoml
loope
adc
or
sub
ss
xlat
add
push
jbe
pop
stc
ja
dec
cmc
mov
xchg
adc
mov
jo
int3
sbb
insb
add
jo
mov
aam
jle
xchg
add
fldl
int
nop
lahf
pop
call
xor
add
or
cwtl
mov
jmp
jb
add
mov
xor
mov
pop
xchg
divl
or
fildll
mov
fsub
cwtl
in
pop
pcmpgtd
sbb
add
sub
add
push
jmp
je
mov
ds
mov
sub
sbb
xchg
pop
loopne
dec
cltd
shlb
add
or
inc
sub
sbb
pop
add
cmp
xchg
arpl
cwtl
outsb
mov
xchg
add
or
or
mov
clc
in
add
sysret
mov
es
push
add
jno
and
or
aad
sbb
js
loopne
pop
scas
outsl
cmp
shlb
xchg
add
test
enter
adc
lds
xchg
js
pop
dec
es
jecxz
mov
dec
ficoml
sbb
adc
ljmp
mov
mov
adc
jmp
loopne
add
pop
mov
lcall
fdivrl
add
arpl
popa
or
inc
movsb
add
mov
test
ds
push
adc
xor
xor
lock
fisttps
cmpsl
pop
and
ljmp
dec
inc
fstpt
aad
inc
outsl
fiadds
sbb
lcall
jp
dec
dec
lds
push
xor
pop
and
sbb
inc
dec
call
pusha
loope
mov
sbb
add
adc
xor
or
sarb
pop
add
sub
inc
sbb
pop
pusha
and
xor
mov
add
jge
lcall
mov
dec
call
test
loop
into
push
subb
dec
xchg
sbb
adc
mov
mov
cmp
pop
add
mov
add
leave
push
movsbl
out
popa
ljmp
and
mov
push
xor
cmp
pop
les
outsl
push
cld
pop
sbb
xchg
mov
add
sti
lahf
mov
and
or
sbbb
jle
pop
ja
inc
shl
pop
push
aaa
add
cmp
and
and
outsb
test
lods
mov
pop
int
sub
mov
cmp
add
fbstp
pop
and
and
xchg
rorb
mov
and
fs
repnz
enter
add
or
push
push
mov
sti
or
insl
jae
add
hlt
cwtl
add
pop
push
xlat
cltd
das
jp
into
inc
fnsave
gs
wbinvd
bound
loope
loopne
push
mov
cmp
jp
inc
sub
jns
scas
mov
arpl
inc
sarb
nop
clc
cmp
add
push
shll
int3
sbb
lcall
pushf
ds
cmp
sub
and
std
ljmp
sub
add
leave
xor
add
xor
popa
sbb
loope
adc
aad
test
loop
das
push
lods
ss
mov
mov
add
pop
jecxz
dec
subb
push
inc
add
fstps
insl
mov
mov
fwait
add
clc
lahf
cmpsb
push
ret
shlb
je
push
pop
cli
aas
popf
mov
in
pop
outsl
test
dec
dec
pcmpeqd
push
in
adc
lcall
leave
and
pop
mov
dec
push
sub
sbbl
inc
daa
scas
mov
adc
ja
in
jmp
hlt
sbb
dec
int3
inc
inc
add
pop
lcall
addl
lock
sbb
fsubr
sub
shl
mov
sub
nop
in
add
clc
and
inc
repnz
add
outsl
cmp
pop
push
movb
xor
xchg
jmp
jo
lock
scas
fldl
add
jl
sub
xchg
nop
rcrb
mov
stos
inc
rclb
repnz
cmp
mov
sub
push
movsb
gs
sub
stos
pop
in
pop
mov
adcb
pop
adc
push
xchg
dec
cmpsl
add
shlb
fwait
in
add
xchg
cmpsl
nop
dec
add
pop
sub
mov
shlb
mov
ja
in
movsl
add
xchg
push
push
sbb
inc
nop
mov
lea
dec
pop
bound
mov
dec
pop
adc
inc
iret
or
add
imul
call
add
icebp
insb
inc
adc
push
add
pop
and
sbb
sbb
lret
mov
fnstsw
popf
adc
add
sbb
sbb
aaa
loope
aad
leave
mov
sbbl
ret
pop
int3
xchg
cwtl
cld
xchg
pop
jae
popf
mov
xchg
call
sbb
jb
lea
mov
mov
push
inc
sbb
or
out
add
call
cmc
sbbl
cli
sbb
daa
cmpsb
stc
dec
mov
jo
xor
stos
push
lods
hlt
lock
mov
sahf
add
in
pop
std
pop
add
cs
cmc
adc
pop
cmp
push
inc
icebp
push
add
lds
add
sbb
jl
or
dec
bound
sbb
sub
mov
test
xchg
lea
add
pop
or
insb
lock
popf
fisttps
orb
cmp
xor
jle
xorb
ljmp
add
adc
xchg
add
push
dec
xor
sbb
out
pop
mov
cmp
push
enter
mov
dec
add
cmp
mov
sbb
jle
push
and
inc
mov
aas
mov
mov
rcll
imul
add
sub
mov
mov
inc
ret
jo
fmuls
pushf
lock
cmpsl
movsb
in
add
jo
lods
jne
aad
adc
xchg
add
pop
push
popf
out
shl
ret
nop
add
and
push
mov
femms
inc
cmp
daa
adc
addl
xor
stc
lea
pop
jmp
push
pop
xchg
adc
xor
into
mov
loopne
add
dec
bound
sub
or
scas
mov
dec
and
hlt
mov
pop
or
cmp
out
mov
add
sarl
sbb
add
xor
jno
add
jne
cltd
pushf
aam
dec
mov
add
int
sbb
sub
lods
arpl
jl
pop
popf
jg
sbb
mov
mov
stos
insb
filds
les
sti
push
dec
add
add
dec
mov
mov
stos
cmp
mov
sub
cwtl
adc
out
jo
lea
clc
imul
inc
sbb
and
enter
stos
sub
or
mov
pusha
subb
push
mov
pop
loopne
lar
mov
insl
outsl
cltd
dec
dec
add
xlat
xchg
jg
push
pop
stos
add
adc
jbe
dec
jne
call
add
out
out
cmp
cltd
add
scas
and
cmp
xor
mov
cmc
jo
xchg
adc
cmp
pop
jg
repz
out
dec
js
xor
std
push
add
pop
jp
jae
adc
mov
jne
and
out
clc
add
pop
nop
out
or
and
and
stos
dec
neg
mov
xor
mov
in
push
and
add
sbb
mov
sub
add
cbtw
sbb
adc
dec
scas
mov
push
icebp
fiaddl
f2xm1
sub
inc
push
add
dec
jle
test
daa
jno
add
xchg
int3
lret
sub
rolb
inc
lock
subb
leave
fwait
movsb
inc
jo
add
ljmp
mov
add
cmp
mov
dec
iret
sbb
push
pop
movsb
mov
add
sub
cmp
push
les
jecxz
dec
inc
shrl
add
jbe
jne
xchg
sub
dec
jae
inc
out
sub
imull
jl
pusha
add
cs
add
movsl
shrb
mov
xchg
xchg
inc
add
add
adc
enter
ffreep
push
or
adc
or
add
mov
add
and
add
sub
jb
sub
fwait
scas
mov
enter
cltd
jbe
rep
rcrw
jae
adc
adc
dec
add
xchg
cwtl
sub
xor
in
mov
jae
cmp
and
daa
xchg
adc
popa
in
mov
cmpb
or
inc
bnd
adc
push
addb
jge
aam
ljmp
add
inc
add
pop
and
rorb
pop
add
stos
lods
add
push
outsb
testb
and
movsb
sarb
cltd
lret
into
call
add
lcall
int3
pop
add
pop
pop
addr16
add
lret
das
gs
push
imul
xchg
in
roll
cli
jno
and
pop
cwtl
add
add
mov
push
bound
add
insl
mov
inc
add
add
lret
pop
sbb
pop
or
ret
orb
mov
mov
adcl
daa
or
push
inc
aam
pop
stos
ret
add
pop
gs
jmp
data16
or
mov
or
rorb
add
sbb
cmc
lret
sub
sub
icebp
arpl
aam
stos
cmc
add
and
nop
or
cld
pop
fldl
add
cmp
andl
mov
or
sbb
inc
es
and
in
cli
mov
jmp
pusha
ja
hlt
sub
movaps
pop
pop
shll
jb
stos
push
iret
fwait
scas
rcll
fcmove
or
add
pop
pop
push
scas
xchg
push
enter
sub
pop
adc
shr
stc
add
decb
xor
sbb
adc
gs
xchg
js
mov
cwtl
jno
das
imul
lahf
cli
push
mov
sbb
loopne
sbb
popa
add
aaa
jp
or
mov
lcall
pop
pop
in
push
mov
xchg
sub
aaa
xchg
mov
add
or
adc
adc
add
add
lea
add
mov
mov
sbb
out
dec
pop
add
add
add
push
cmp
and
inc
add
into
pusha
pop
cli
lcall
shll
mov
gs
cmp
add
inc
sub
xchg
divb
pop
xchg
push
xlat
mov
xor
std
ss
pop
pop
arpl
imul
cmpsb
add
ja
stc
add
cmp
add
dec
lods
lcall
mov
cli
add
in
jl
sti
int
pushf
add
repnz
leave
or
cmp
ret
sbb
jge
cmp
enter
int
cmp
and
add
add
xchg
add
rol
pop
mov
mov
sbb
push
or
push
sbb
or
xor
pop
mov
pop
out
add
xorb
mov
inc
ja
pop
aaa
mov
lret
push
add
dec
push
stc
std
add
into
daa
test
xlat
js
hlt
adc
xor
pop
outsb
je
sub
dec
add
in
add
loope
ret
aad
jg
ljmp
add
add
in
pop
pop
lea
sbb
mov
push
dec
clc
xor
fldl
inc
shl
loope
jbe
sub
inc
add
pop
negl
int
fldl
dec
rcrl
rolb
push
lret
test
sub
mov
adc
xchg
and
insl
pop
sbb
add
mov
cmp
fisubrl
mov
rclb
or
adc
add
rorl
adc
dec
sbb
xchg
flds
add
mov
lock
xor
je
je
push
sar
mov
pusha
jp
inc
xor
add
mov
loop
lods
ret
out
ret
mov
xor
sub
push
popf
icebp
mov
xchg
pop
pop
and
cmpl
push
mov
adc
test
mov
daa
jecxz
testb
inc
sbb
and
add
mov
adc
sbb
ds
jno
pop
imulb
pop
data16
sbb
mov
jb
adc
add
jno
adc
pop
repnz
dec
and
cmp
inc
pop
xadd
stc
pop
jp
cmp
sub
loope
jne
ss
pushf
sbb
push
mov
adc
jbe
add
xchg
push
int3
or
pop
cmp
add
daa
dec
fwait
jbe
add
jae
out
add
jge
xor
imul
fistpl
or
jo
add
outsb
out
pop
add
xcrypt-cfb
cmpsl
out
lahf
pushf
adc
xor
jge,pn
dec
pop
add
cld
cmp
pop
cli
add
out
xor
mov
inc
incl
sbb
lahf
or
lds
sti
lret
or
mov
mov
movb
inc
call
push
in
cmp
inc
add
fldt
dec
xor
push
aas
add
out
les
mov
lods
add
repz
out
mov
pusha
in
out
xchg
xchg
push
add
inc
add
ljmp
push
shlb
add
jnp
push
mov
add
mov
int3
add
rcrl
sahf
outsl
jle
jp
cld
ja
dec
mov
or
xlat
lds
jecxz
cli
push
add
jg
sar
in
push
jmp
test
mov
push
add
cmp
mov
fs
or
mov
add
fucom
mov
push
sbb
xor
sub
ret
fwait
mov
dec
pop
mov
pop
add
inc
push
rclb
mov
adc
sbb
add
pop
inc
dec
add
cmp
xchg
testb
out
jae
sti
mov
xchg
add
pop
dec
pop
adc
adc
test
xchg
lock
add
icebp
add
dec
sbb
movsl
shlb
pushf
jmp
sbb
in
mov
rcrl
sbb
xchg
and
or
imul
leave
jo
shl
rorl
add
push
push
aam
outsl
ja
pusha
push
stc
cmp
xor
test
repnz
add
sub
aaa
insb
cli
nop
push
dec
test
rclb
mov
outsb
flds
sbb
shlb
cmp
lea
adc
add
sbb
pusha
pop
or
incl
mov
clc
mov
mov
fwait
in
shlb
add
sbb
in
jns
mov
test
and
psrlq
sahf
add
repz
rcll
pushf
test
push
and
mov
rol
mov
sbbb
and
jp
pop
add
add
pusha
stos
mov
mov
das
aam
jns
cltd
sbb
push
jo
mov
cmpsb
roll
mov
out
dec
test
test
aas
je
pop
mov
invd
shrb
mov
xchg
xor
mov
add
test
roll
xchg
pop
cwtl
sarl
add
fsubrl
push
adc
adc
fisttpl
mov
andb
ja
sub
xchg
and
mov
cwtl
enter
sub
pop
loopne
movsl
sub
ret
xorb
sbb
add
sbb
mov
add
fadds
adc
and
xor
mov
push
and
cmc
add
rolb
inc
out
clc
mov
orl
xlat
push
mov
rcr
rcll
inc
les
inc
lods
cltd
aas
rcrb
inc
or
out
xor
cmpsb
movsb
test
inc
repz
addr16
scas
cmp
cmpsl
pop
mov
cmp
or
jo
inc
in
mov
mov
incl
subl
ljmp
xor
or
loopne
adc
mov
faddl
sub
ds
inc
mov
addr16
pop
or
add
push
mov
mov
or
daa
call
loopne
les
cli
addr16
idivl
ficompl
dec
je
into
shl
in
andl
xchg
jg
add
dec
inc
mov
lret
leave
cmp
sub
mov
pop
dec
cltd
fs
les
xor
xchg
add
mov
orb
clc
xchg
call
stc
mov
lock
cmp
jbe
fdivl
xchg
mov
xchg
mov
and
cmp
sbb
loopne
test
adc
cmp
or
insl
movsb
dec
xchg
mov
or
sub
js
cmp
shll
push
and
into
dec
or
sbb
test
ds
add
std
push
lcall
scas
mov
dec
mov
push
add
sahf
scas
and
sbb
xor
mov
or
add
push
pop
jb
out
push
xor
add
cwtl
push
adc
push
cmp
sahf
mov
rorl
les
cwtl
dec
or
pop
test
int
lret
add
ljmp
add
or
and
mov
mov
aaa
jae
mov
xchg
enter
adc
orb
add
pop
mov
cmp
call
aas
inc
fmuls
nop
out
aaa
xor
push
arpl
inc
mov
mov
jl
pushf
xchg
mov
stos
les
xchg
ja
ret
cmp
mov
add
adc
out
add
push
jno
and
rolb
mov
push
repnz
fdivs
add
xchg
push
mov
inc
test
es
int
fwait
inc
or
test
jo
fwait
add
mov
and
or
sbb
mov
jmp
mov
lret
jo
adc
movsb
cmpl
cmc
mov
and
xchg
je
or
testb
inc
loopne
xchg
mov
hlt
add
push
dec
cmpb
pop
ljmp
mov
jp
orl
sbb
je
cmp
mov
sub
pop
mov
inc
jo
sbb
ja
add
ret
xor
xor
xchg
adc
inc
int3
xor
dec
pop
sbb
arpl
fcmovu
xchg
xchg
clc
xor
lock
sub
or
pop
repnz
out
pop
add
xchg
or
popa
aam
mov
test
inc
mov
mov
rcll
jae
gs
faddl
and
dec
mov
faddp
mov
xchg
xor
jl
pop
in
sbb
and
jg
fdivrl
jne
andb
enter
add
jmp
or
adc
fisttpll
ljmp
shr
xchg
push
shll
mov
loop
sbb
xchg
push
or
jp
push
bound
add
and
ss
jl
cmp
fdivs
xor
mov
movsb
add
loop
mov
aaa
shrb
movsb
js
inc
fldl
cld
xorb
and
cmpb
pop
pop
cmp
xor
cmp
mov
mov
or
dec
mov
dec
sahf
push
add
shl
les
pop
inc
adcb
push
cmc
lock
mov
jns
ret
icebp
fcoml
outsl
fisubrs
lret
insb
add
mov
popf
dec
mov
fadds
loopne
sbb
dec
push
xor
and
mov
and
fs
add
bound
lcall
addl
shll
imul
dec
inc
add
je
mov
adc
push
push
and
sti
loopne
inc
xchg
loope
add
shlb
data16
loop
ds
mov
xchg
mov
imul
aam
sahf
mov
add
mov
jecxz
out
pop
addl
mov
testb
mov
test
sbbb
out
ror
je
add
mov
clc
adc
fcomps
push
mov
mov
shlb
cmp
cltd
les
pop
repz
jmp
pop
ret
adc
ljmp
hlt
pop
int
xlat
repnz
loop
js
mov
repnz
shlb
or
sub
loope
pop
pop
pop
add
popf
mov
aaa
adc
lods
enter
and
dec
cwtl
and
icebp
add
xor
sub
rclb
pop
pusha
stos
xorl
xor
xchg
jae
mov
add
xchg
lret
push
andb
stc
sti
pop
fwait
add
jmp
ja
shlb
inc
leave
dec
mov
mov
pop
adc
stos
popa
push
insl
xor
add
stc
push
xor
mov
shl
loope
shll
push
outsb
mov
mov
inc
nop
adc
cmp
add
mov
sbb
lcall
nop
mov
add
jmp
push
lods
cmp
pusha
iret
test
fstpl
lock
rclb
jo
testl
and
out
fcoms
arpl
fs
mov
pusha
mov
jg
sub
and
aad
mov
aas
iret
sub
mov
in
xchg
add
sbb
pop
cmp
mov
pop
roll
sbb
leave
rcrl
mov
test
notb
or
sbb
pusha
arpl
jmp
repz
cltd
clc
mov
add
sub
jecxz
sbb
xchg
cmp
sub
imul
lds
fmull
rcll
cwtl
in
inc
lods
jb
cmp
dec
shll
fs
nopl
jo
fcoms
add
jae
add
cs
add
adc
aam
dec
mov
sub
cmp
sti
jne
test
pop
rolb
push
pushw
jno
and
adc
in
add
and
cltd
or
adc
add
aad
fmuls
dec
ja
add
stos
out
add
js
inc
fucomp
adc
pop
neg
add
mov
dec
loope
in
push
ss
loopne
xor
jnp
int
cmp
sub
mov
xor
mov
add
js
rorb
jl
dec
in
ret
lret
pop
mov
leave
divl
mov
inc
xchg
sbbb
inc
and
int3
mov
es
mov
jecxz
dec
cmp
fdivrs
jns
shlb
in
fidivl
dec
inc
dec
stos
adc
cmp
lret
outsb
mov
xchg
dec
test
cltd
jne
imul
and
loope
shl
xor
mov
bound
adc
insb
jp
stos
pop
push
cwtl
or
std
add
pop
cwtl
js
push
push
bound
nop
push
sub
sti
loopne
jmp
jbe
jns
xor
enter
cwtl
mov
jle
mov
inc
inc
scas
testl
lea
out
xchg
movsb
add
enter
xor
test
push
cmp
dec
push
cmpsl
dec
sbb
sub
int3
xor
push
mov
in
int3
sbb
add
aaa
sbb
les
call
aam
pop
pop
into
inc
lret
mov
add
mov
out
aas
divl
pop
xchg
sub
sub
adc
xchg
loope
mov
movsb
xchg
sbb
add
subb
sbb
stos
and
adc
arpl
test
dec
loop
push
js
sti
int
andb
xchg
shrb
mov
pusha
add
sbb
pop
and
mov
inc
enter
outsl
in
xchg
rcl
pop
xor
das
gs
adc
lods
cs
icebp
adc
inc
int3
lea
fs
dec
jb
ret
out
pop
shl
mov
es
cs
xchg
leave
dec
mov
pop
sbb
push
enter
add
jo
mov
bound
sldt
sti
jnp
inc
mov
push
test
mov
dec
fcoms
xchg
pusha
popl
inc
or
nop
inc
insb
push
fists
andb
outsl
fdivs
mov
dec
jmp
lock
mov
ror
sar
ljmp
lahf
xchg
sbb
rorb
add
mov
ds
rcll
and
lods
pop
rol
inc
test
aas
fstps
add
aaa
inc
jns
add
xchg
sbb
lcall
divl
addr16
loop
jb
insb
addb
sub
add
push
and
mov
push
xor
add
incl
fwait
int3
mov
mov
and
aaa
xchg
pop
pop
mov
pop
lods
pop
xchg
shr
pushf
icebp
insl
sub
add
mov
and
xchg
sti
pop
stos
and
fdivp
inc
add
int
shrb
lock
imul
ljmp
mov
sub
test
add
in
lcall
adc
rcll
pushf
into
jno
add
push
inc
sub
push
insb
rolb
add
lcall
add
mov
mov
pop
cwtl
enter
es
cmp
inc
push
outsb
nop
scas
dec
in
call
pop
inc
inc
adc
faddl
test
icebp
sbb
adc
shll
mov
adc
add
insb
js
add
stos
mov
push
mov
inc
xchg
xchg
add
arpl
ja
dec
xor
js
mov
fdivrs
dec
pusha
test
xchg
add
enter
dec
stos
das
je
dec
popf
inc
xchg
cmp
lahf
pop
xlat
push
pop
into
cwtl
pop
or
ret
add
mov
or
or
adc
hlt
mov
push
jo
aas
inc
and
push
or
pop
lods
xchg
imul
scas
daa
test
cmpsb
lds
scas
jne
adc
lahf
and
sar
fnstsw
and
inc
cmp
in
add
in
into
mov
stos
adc
fiadds
jmp
cmc
pop
push
mov
test
dec
out
test
adc
inc
add
aam
aaa
call
aas
dec
ret
addb
cs
or
sub
pop
dec
pusha
or
push
mov
leave
sbb
sub
xor
mov
pop
sbb
mov
adc
fcoml
lahf
add
or
xorl
add
adc
icebp
jmp
cmc
push
enter
mov
dec
enter
add
in
push
dec
mov
add
or
mov
test
sar
xchg
xor
loop
scas
dec
in
add
cmp
je
sti
ljmp
xchg
xor
icebp
xchg
add
pop
add
shl
pop
sahf
sarl
pop
sbb
sub
push
and
inc
lds
add
movsb
faddl
pusha
ret
stc
and
or
rorl
add
fcmove
mov
and
xchg
mov
add
cmp
dec
mov
mov
nop
or
or
fstpl
and
push
test
dec
sarb
dec
shl
bnd
in
xchg
inc
dec
jp
and
mov
sti
addr16
lret
pop
or
dec
jo
filds
insb
and
movsl
das
mov
push
cs
cmp
xchg
shlb
adc
add
jmp
in
mov
ret
movsl
sub
mov
dec
roll
outsl
mov
cwtl
push
rolb
adc
sub
pop
mov
mov
xchg
and
push
enter
pop
cmp
shrl
mov
sbbb
movsl
loopne
cmp
adc
dec
lcall
and
or
cwtl
call
ss
xor
inc
cli
loopne
xchg
and
mov
adc
faddl
or
adc
sub
cmpsl
dec
add
and
loopne
test
out
orb
stos
scas
cmp
push
add
add
loope
adc
das
int
inc
test
aad
sbb
test
cmp
mov
outsb
pop
clc
adc
pop
adc
fistpl
pop
mov
aam
cmp
push
and
test
mov
fs
gs
sbb
add
add
adc
fcoms
lret
test
push
cmp
lea
mov
dec
enter
xchg
mov
add
aam
add
add
mov
out
int3
add
dec
push
ss
xchg
sub
and
or
cmp
jnp
movsb
inc
es
lar
and
pop
or
sbb
sbb
jecxz
mov
dec
xor
rcr
js
iret
mov
test
out
loopne
movsl
add
adc
shl
mov
inc
movsb
jo
mov
mov
lods
fmuls
pop
sub
xor
mov
pop
sbb
inc
cmp
sbb
xchg
mov
pop
push
loope,pn
pop
sub
lock
les
aam
inc
testb
shlb
adc
stos
pusha
mov
sti
insl
dec
xor
shl
or
movl
iret
mov
sub
ds
sahf
cwtl
lock
js
xchg
or
mov
adc
pop
lahf
add
addr16
or
dec
pop
adc
pop
imull
in
cwtl
test
loope
adc
lock
mov
or
aaa
cmp
xlat
and
sbb
aam
inc
lods
xchg
hlt
mov
mov
orb
repnz
add
sbbb
and
lea
xorl
test
popa
add
inc
xor
ljmp
mov
pop
or
and
add
in
mov
xor
pop
jmp
jns
adc
enter
add
dec
xchg
mov
sbbb
lret
inc
mov
and
jl
add
push
add
add
mov
xor
push
incb
mov
loop
mov
or
enter
add
sbbb
lods
ret
adc
repz
div
adc
cmp
in
subb
and
push
stc
xchg
cld
arpl
cmc
and
add
inc
jne
sbb
sbb
daa
stos
int3
inc
mov
mov
mov
rcr
add
outsl
daa
cli
fcomi
testl
mov
mov
mov
iret
or
or
mov
adc
sbb
mov
lret
mov
add
jnp
mov
fisubl
ja
cmp
pusha
int3
or
bound
pop
std
fs
add
loope
push
es
sahf
adc
shll
in
insb
loopne
pop
pushf
pop
push
xor
movsb
in
mov
ret
insl
xchg
out
fcom
outsl
xor
pop
push
scas
test
add
jmp
cltd
dec
loop
pop
add
outsl
ljmp
pop
mov
std
jns
cmp
scas
add
loopne
pusha
dec
push
and
xchg
fldcw
mov
cmp
sub
xchg
mov
in
add
jge
xchg
pop
stos
loop
add
int3
mov
sbb
push
loopne
mov
mov
movsl
adc
push
ja
popa
or
mov
add
shrl
xor
jg
add
je
xor
mov
lea
mov
xor
bound
mov
lock
movsb
mov
add
mov
ficoml
inc
in
pop
sub
aam
adc
add
lret
test
cmc
adc
and
mov
or
mov
push
or
or
cmc
rcl
add
ds
outsl
or
or
cld
lds
xor
mov
into
pushf
add
test
mov
and
fsubl
fyl2xp1
out
push
movsb
cwtl
out
mov
nop
pop
push
cld
jl
push
aas
or
lcall
add
icebp
pop
add
scas
lcall
cli
aad
add
jmp
inc
hlt
call
cld
sub
cmpsb
clc
addr16
push
hlt
jmp
fidivl
xchg
sbb
jbe
mov
adc
adc
mov
adc
mov
adcl
jno
pop
add
subl
add
mov
mov
jmp
mov
and
clc
mov
andb
sub
mov
mov
int
ret
enter
add
or
mov
sub
or
cmp
std
popa
adc
push
xchg
test
cld
daa
dec
gs
idiv
ret
dec
clc
dec
in
add
lahf
dec
jp
js
lcall
push
and
bound
add
push
out
aas
test
je
in
mov
and
sub
sub
fimuls
repnz
xor
push
incl
cli
loop
scas
bound
nop
rolb
mov
add
scas
jno
inc
push
repnz
add
iret
mov
inc
je
jecxz
call
mov
or
mov
push
and
nop
repz
add
inc
int
mov
les
add
cmc
popa
xchg
inc
out
sub
mov
notb
pop
shl
mov
in
inc
jo
loopne
push
cmpsb
mov
cmpsl
rol
pop
mov
push
cmpsb
cs
out
cld
popa
fimull
pop
fimuls
mov
xchg
add
mov
and
mov
xor
int
adc
in
dec
pop
inc
and
lock
ljmp
sbbb
jge
enter
dec
out
mov
shl
clc
jo
cmp
add
mov
xchg
lea
call
int3
fsub
dec
add
loop
fistpll
mov
jno
aam
cltd
lods
lcall
mov
lds
adc
nop
int3
mov
int
cld
mov
fidivrl
mov
jg
and
xchg
nop
sub
xor
inc
ret
pusha
insb
mov
inc
and
mov
pusha
sbbb
add
jb
sti
and
cli
addb
in
mov
lcall
lret
pop
push
inc
and
or
mov
mov
subl
bound
inc
push
sub
lods
push
iret
jnp
loopne
push
add
cmp
outsb
push
pop
sub
jo
into
sbbb
sub
pop
inc
adc
inc
cwtl
xchg
test
js
or
sbb
imul
jp
in
movsl
adc
fstps
dec
sbb
sub
add
imulb
dec
push
or
fwait
add
mov
or
sub
fcomps
push
pop
loopne
jnp
add
adc
sub
mov
or
jl
fnsave
mov
mov
jne
hlt
cli
dec
pop
pop
mov
push
mov
jns
or
lods
ficomps
and
iret
adc
sub
mov
mov
lock
and
xchg
jecxz
fs
imul
faddl
outsl
xor
xchg
adc
movsl
aaa
rcrb
add
cld
sbb
and
dec
pop
imul
sbb
fcmovu
jle
mov
dec
lods
ja
push
pop
ret
jl
and
cmp
shll
dec
pop
fbstp
daa
jno
jo
test
sub
dec
data16
add
dec
cli
andb
pop
push
add
mov
leave
cltd
stc
imul
scas
xchg
cmp
xor
sbb
xchg
xchg
mov
xchg
or
mov
xchg
mov
cmp
push
movsl
out
js
jne
or
mov
shrb
push
rorb
ret
lahf
xchg
in
les
inc
sbb
push
lea
push
mov
xorl
add
insb
loope
shll
add
es
inc
out
das
add
inc
aas
push
and
or
inc
push
out
mov
xor
add
negl
push
add
sub
mov
out
xor
dec
loope
xorb
xor
mov
out
pop
jecxz
jg
in
hlt
int3
iret
ja
mov
loopne,pn
xlat
out
mov
pop
rorl
jno
add
jae
addb
cmp
sbb
lret
dec
cmc
add
icebp
lock
push
pop
fwait
sub
cmp
push
or
sub
outsl
push
or
cmc
or
js
and
push
fimuls
fsub
add
and
or
push
xchg
mov
lahf
in
out
js
mov
dec
sub
adc
cmp
and
xchg
pushf
or
mov
data16
mov
out
mov
and
daa
sub
das
and
cmp
adc
push
cld
sbb
fsubl
or
gs
adc
adc
sbb
addb
xor
data16
sub
mov
sbb
cli
mov
mov
pop
xchg
jmp
nop
mov
sti
inc
lea
aas
jp
dec
xor
mov
lock
pop
test
mov
sub
sbb
lods
cltd
adc
aas
xor
cmpsb
shlb
data16
add
sbb
dec
lods
ljmp
mov
cmp
sub
inc
fsubrl
out
ret
popf
lods
push
pop
add
xchg
lods
or
push
int
adc
or
pop
adc
dec
pop
or
lahf
enter
mov
movsb
add
dec
push
mov
add
pop
popf
fs
in
adc
cmp
aam
adc
add
xchg
movsb
mov
inc
push
je
testl
in
add
cmpb
inc
fmuls
jp
outsl
or
stos
adc
test
adc
dec
add
and
adc
js
aas
push
mov
nop
add
sub
popl
jmp
imul
add
ja
lds
mov
xchg
push
mov
test
xchg
aas
sbb
jl
jge
mov
mov
fildl
repz
cmp
xchg
dec
pushf
in
lock
addl
adcl
mov
out
inc
in
xchg
add
shrl
repnz
shlb
outsl
test
xchg
mov
add
std
decl
push
movsl
ja
pusha
cmp
stos
pop
js
rorb
add
outsl
pop
js
shll
mov
pop
push
dec
rcrb
lods
cmpsl
inc
cwtl
je
mov
enter
mov
fnsave
ret
sub
mov
push
pop
fidivrs
lds
je
inc
mov
xchg
adc
addl
push
xor
inc
fidivs
jns
adc
cmc
lods
insb
mov
pop
cwtl
xchg
repnz
fcmovne
es
lods
sbb
pop
js
adc
shrl
test
jmp
adc
test
movsb
cld
add
dec
jo
loope
lahf
pop
lcall
adc
popa
inc
push
add
in
mov
mov
sbb
icebp
insb
js
sub
loopne
imul
sub
call
cmp
mov
cli
loope
loop
shlb
and
gs
pop
mov
mov
add
rcr
jmp
fnstenv
xlat
lock
cmp
cmc
jns
mov
and
loopne
in
ror
mov
inc
xor
pop
in
loop
pinsrw
imul
inc
cmp
add
outsb
iret
add
xchg
fwait
cmp
aad
call
push
or
mov
inc
pop
jle
stos
imul
lea
pushf
inc
jo
inc
popf
add
cltd
ss
lods
push
mov
scas
loope
cmp
mov
mov
lret
cwtl
push
jmp
pop
sbb
xchg
nop
rorl
add
xchg
dec
das
icebp
add
repnz
xor
push
sub
test
sub
and
pop
test
add
mov
add
popa
xchg
xorl
and
jecxz
es
pop
or
push
push
adc
rcrb
enter
imul
jb
enter
mov
or
imul
stos
mov
add
sub
popa
mov
dec
add
push
mov
pop
dec
and
inc
inc
pop
or
les
push
js
mov
movsl
jno
adc
faddl
shlb
mov
mov
dec
mov
das
adc
xchg
out
mov
xchg
nop
ret
add
mov
addb
add
mov
fldt
sub
inc
in
add
sub
sub
ds
dec
xlat
push
mov
mov
sbbb
lcall
cmp
adc
and
dec
ja
jno
jecxz
aam
sub
xchg
rcll
add
jb
add
add
loop
dec
je
addb
daa
movsl
outsb
rorl
scas
pushf
cmp
cmpsl
dec
inc
sarb
mov
movsl
out
aam
pop
or
sub
pop
aam
int
sbb
xchg
data16
inc
and
aad
pop
xchg
pusha
cmp
dec
pop
sarl
cmp
fidivrs
add
cmp
xchg
or
bound
inc
stc
mov
lock
inc
add
cmpsb
or
repnz
ret
scas
std
sub
movsb
inc
or
add
cmpsb
mov
jl
xorl
jo
insb
in
mov
mov
dec
hlt
shrl
push
in
push
mov
dec
cmp
adc
or
adc
or
or
xchg
or
cmp
pop
pop
mov
push
add
sub
iret
data16
xchg
cmp
mov
or
cmp
mov
outsl
mov
or
mov
mov
inc
stos
or
rorb
push
inc
cld
add
add
pop
shrb
mov
hlt
pop
rclb
dec
jns
int
cltd
out
jle
add
leave
nop
pop
negl
cmp
mov
xlat
jb
add
lret
movsb
shlb
adc
dec
outsl
add
sahf
xchg
mov
arpl
add
sbb
dec
bt
cmp
ss
mov
add
imul
and
mulb
mov
pop
cmp
fcoms
cli
or
mov
inc
cmp
inc
mov
enter
inc
mov
inc
movsb
lret
fdivrl
hlt
push
inc
add
mov
and
xor
jmp
leave
imul
push
cmpsb
aad
sbb
inc
or
xlat
mov
test
mov
test
cmp
xor
adc
lds
fisttps
mov
sub
mov
inc
inc
cmpsl
mov
inc
or
mov
and
imul
add
inc
jno
fcoms
movhps
mov
rcrb
mov
pop
pop
push
sub
dec
xchg
shlb
mov
js
imull
sarb
aam
in
cmp
decb
inc
es
and
pop
test
xchg
out
cli
int
nop
mov
lret
mov
fadds
add
mov
add
enter
inc
test
dec
aad
loopne
xor
fs
aam
hlt
sbb
repnz
add
test
scas
mov
mov
cmp
xor
sbbb
xor
sbb
push
cli
cmc
pop
into
mov
push
or
xor
jmp
movsb
mov
pop
add
mov
and
testb
inc
out
mov
xchg
add
aaa
mov
and
sbb
mov
dec
fcomps
or
or
jle
ja
in
addb
insb
cmp
add
fistpll
sub
test
lods
add
lds
add
das
jecxz
ret
movsl
cmc
and
ror
cwtl
enter
shlb
and
push
lea
mov
mov
loop
lods
cmc
shrl
dec
xchg
and
cmpxchg
or
mov
add
in
add
dec
adc
mov
sbb
stos
in
ss
outsl
faddp
and
mov
cmp
loopne
movsb
mov
jb
add
cltd
mov
nop
test
stos
cli
add
movsl
mov
sub
aaa
or
loope
divb
add
sbb
mov
pop
adc
sub
mov
mov
pop
push
adcl
jmp
ljmp
inc
mov
cmp
shlb
fs
bound
ret
fisttpll
enter
or
lods
push
mov
mov
mov
push
roll
adc
bound
pop
pushf
lret
push
adcb
add
fistps
mov
hlt
pop
xor
add
insl
cmp
or
xchg
test
rorb
call
aam
or
push
sub
pop
pusha
fistl
nop
dec
outsl
mov
mov
xor
rolb
xor
adc
scas
loopne
pusha
add
push
movsl
fcompl
push
mov
fs
fiadds
inc
dec
jle
adc
and
int3
stos
icebp
fdivrl
shll
jg
clc
les
and
stos
int3
add
ret
push
shrl
nop
lret
push
test
je
add
sub
cmp
lret
add
mov
fdivrl
test
and
cmp
movsb
psraw
movsl
add
inc
aad
outsl
fdivr
add
test
jl
int
mov
adc
in
lahf
bound
add
aad
pop
popf
xchg
mov
ret
or
pusha
stos
mov
mov
int3
ds
xchg
sbb
xchg
stc
add
dec
mov
subl
ljmp
pop
pop
stc
aad
int3
test
push
xor
xor
mov
fldl
jno
jns
and
mov
add
adc
mov
lahf
adc
add
test
dec
pop
pop
push
xor
mov
loopne
rdpmc
mov
mov
xchg
inc
mov
mov
push
inc
or
sbb
in
sub
pop
shlb
shl
repnz
clts
mov
icebp
js
in
bound
and
pop
loope
divl
xchg
sbb
mov
xchg
push
pop
mov
xor
mov
in
in
add
xor
out
add
mov
and
xchg
add
cwtl
mov
bound
test
xchg
pusha
lods
outsb
sub
je
inc
stos
add
mov
andb
cld
add
out
nop
hlt
mov
cmp
js
pop
cmp
push
and
pop
and
lahf
inc
mov
xchg
mov
fsub
dec
mov
push
test
pop
lret
pop
aas
mov
mov
aaa
sub
imul
jb
je
int
pop
pop
sbb
test
nop
movsb
aad
inc
mov
sarl
cmpsb
or
jne
jnp
pusha
xchg
testb
fcmovnbe
aaa
ficoms
shlb
pop
mov
nop
mov
test
dec
es
inc
out
outsb
xor
xor
pop
jbe
mov
add
js
fnstenv
fs
mov
mov
enter
pop
movsb
and
sub
and
and
mov
fidivrl
xor
mov
inc
add
nop
shrb
adc
popf
add
loopne
movsb
or
and
inc
lea
jne
push
sub
push
push
mov
or
jo
lret
cmpb
cmc
push
cltd
outsl
xchg
loop
mov
shlb
xor
ret
outsb
mov
lret
pop
or
hlt
je
test
popf
inc
mov
add
pop
into
cmpsb
mov
fdivp
nop
inc
mov
or
fldt
mov
loopne
push
cmp
lea
nop
mov
mov
inc
mov
sahf
enter
or
mov
and
add
and
rcrb
push
xchg
lret
nop
in
cs
add
repnz
addb
or
push
outsl
andl
mov
push
cmp
popa
cmp
fadds
shl
sbb
mov
cmp
enter
mov
gs
fildll
sbb
sub
xor
add
dec
shl
mov
xchg
cwtl
aaa
mov
fs
daa
icebp
pushf
add
scas
add
push
jbe
les
je
pop
or
dec
mov
dec
add
mov
mov
sub
andl
lock
dec
sub
and
es
rclb
bound
add
sbb
xchg
jl
test
add
or
rolb
cwtl
leave
xor
outsl
inc
lock
test
cmp
dec
mov
and
or
inc
push
mov
arpl
mov
push
in
xlat
add
daa
xchg
and
jnp,pn
sbb
cmpb
add
mov
and
dec
insl
rolb
and
div
and
notb
adc
add
adc
mov
loopne
dec
subb
pop
jns
add
jmp
or
icebp
dec
movsb
ds
xor
mov
fsubl
inc
ja
xchg
hlt
loop
pop
arpl
inc
and
aas
and
jl
inc
je
loopne
and
lock
jp
mov
loop
lods
subb
in
adc
xor
pop
mov
adc
das
aam
or
push
shl
xor
nop
mov
mov
pop
cmpsl
add
in
popa
add
pushf
mov
les
cmp
pusha
jl
mov
add
call
sbb
dec
and
xor
push
pop
enter
call
mov
leave
jmp
mov
push
xor
mov
loopne
lea
xor
mov
jp
shlb
and
pop
xchg
add
test
movb
sub
pop
imul
fsubl
inc
hlt
inc
addr16
in
dec
dec
push
inc
pop
inc
stos
xchg
leave
sub
pop
sbb
cltd
mov
sub
fucomi
jecxz
and
xchg
int3
enter
in
addl
test
adc
push
rolb
mov
or
sbb
push
sub
cmpsl
xchg
jo
movsb
mov
jle
xchg
cmpsb
adc
ret
xchg
sbb
sbb
cmp
bound
out
ds
push
insl
add
mov
mov
mov
hlt
xchg
mov
push
in
fldlg2
xchg
add
mov
pop
push
lods
xchg
repnz
pop
cld
stos
add
cmp
jne
jo
and
testb
sub
loop
push
adc
mov
fcmovu
push
jo
add
mov
js
add
sahf
xchg
test
loop
xor
loopne
movsl
mul
sub
in
jns
test
xchg
enter
adc
mov
jecxz
jne
mov
ja
or
sbb
jb
pushf
pop
mov
jb
adc
mov
sbb
pop
sahf
push
orb
imul
add
ljmp
or
add
add
dec
in
add
add
push
out
adc
push
in
xor
or
rcll
test
jo
iret
das
rcll
sbb
mov
cmp
sub
lea
iret
lock
sub
gs
cmpb
push
dec
and
xor
fiaddl
je
popf
jg
pop
mov
add
sti
movsb
pusha
dec
out
pusha
mov
fidivrl
jecxz
repnz
sarl
add
popa
mov
shr
add
frstor
cs
add
mov
and
mov
cwtl
pop
pop
or
leave
mov
aam
out
or
xchg
mov
movsl
or
aaa
dec
lods
mov
leave
mov
xorb
fidivl
nop
inc
pusha
stc
push
add
in
add
out
add
leave
and
xchg
imul
jge
mov
mov
inc
mov
xor
jno
leave
push
lods
stc
sbb
repnz
js
test
pop
sbb
inc
sub
push
out
das
dec
adc
pop
pop
and
rol
jns
decl
add
fistpl
cmp
mov
adc
and
repnz
add
xchg
dec
shr
sti
xchg
inc
xchg
cwtl
aam
xchg
cld
pop
add
stc
movsb
fcoms
jbe
loop
xor
pusha
xchg
pushf
clc
jmp
test
pop
shlb
push
and
inc
movsb
dec
jb
mov
enter
lods
pop
and
add
adc
jno
sbb
in
jp
sar
push
stc
mov
enter
fcomp
xor
pop
icebp
and
loopne
roll
pusha
and
jle
aam
mov
cltd
iret
cltd
and
pop
mov
lods
movsb
adc
push
pop
add
push
pop
in
pushf
mov
pop
adc
cmpsb
mov
inc
mov
fs
cs
addr16
push
add
scas
xchg
pop
out
aaa
out
pop
cmpsl
inc
mov
cmc
insl
pop
or
fs
scas
ret
adc
mov
out
add
fwait
insl
fisttps
inc
fdiv
frstor
in
sub
inc
mov
mov
inc
neg
dec
or
or
jno
test
cmp
popa
sbb
and
or
lret
mov
xor
lds
sub
push
add
jbe
jo
pop
test
jge
test
mov
sub
loopne
and
inc
inc
js
or
stc
mov
or
mov
imul
hlt
xor
jmp
test
movaps
addb
js
int
inc
lods
add
xchg
push
sbb
mov
jg
test
mov
add
sub
or
into
pusha
add
or
xor
or
and
jne
gs
sub
mov
adc
and
xor
dec
and
int3
jge
xor
mov
or
imul
adc
mov
call
es
push
movl
and
dec
adc
push
and
dec
sub
dec
dec
inc
fadd
add
pop
adc
shlb
shlb
pop
pop
sbb
pop
adcb
addr16
jecxz
or
or
pop
and
push
cs
dec
les
xchg
call
loop
ret
or
pop
or
mov
add
xchg
movsb
and
gs
ljmp
mov
jo
cmp
add
pop
or
ja
push
cs
sbb
and
icebp
lret
js
jecxz
xchg
enter
and
leave
cld
cltd
cld
add
fidivs
ljmp
mov
add
jo
test
aad
jnp
or
bound
add
sbb
add
xchg
enter
ds
js
jbe
inc
dec
xor
sub
shrb
jl
lods
xlat
les
cld
or
loopne
and
lea
data16
aad
fsubrl
sub
out
int3
stos
cmp
inc
enter
call
movsl
mov
xor
sbb
mov
arpl
add
cmp
push
lahf
xorb
es
add
test
jbe
cs
pusha
divl
pop
pop
aas
cmc
cmp
imul
sbb
xchg
adcl
cmp
shl
std
push
mov
push
mov
mov
push
pop
fdivrs
pop
std
sbb
dec
mov
addb
mov
imul
pushf
sti
inc
clc
add
pusha
lahf
scas
pop
sub
jno
js
sbb
adc
loopne
jmp
push
push
clc
pop
cmpsb
scas
sahf
jl
or
arpl
pusha
mov
fsubl
movsb
jl
dec
movsl
loop
xor
adc
loopne
ljmp
add
fmuls
xchg
add
sbb
push
push
add
stos
aas
jns
call
and
or
inc
mov
je
in
outsb
and
jo
out
shll
jb
js
adc
lods
les
ss
adc
jnp
rolb
mov
ret
neg
nop
pop
lods
test
xor
push
inc
aaa
ret
dec
clc
aam
mov
gs
shl
dec
sub
ficompl
mov
or
mov
les
sbb
out
pop
rclb
inc
sub
add
push
fimuls
notb
fcom
and
daa
add
mov
pop
imul
fcoml
jge
dec
mov
inc
xor
jmp
cmpsb
add
push
mov
int
mov
ficomps
mov
pop
dec
lahf
dec
popf
loope
cmp
mov
dec
jle
adc
fcomp
test
cs
and
lods
mov
push
dec
push
and
mov
nop
lea
fcomps
ret
daa
fidivrs
hlt
add
pop
je
shll
push
sbb
les
jno
test
add
lahf
mov
dec
cld
scas
jne
cmp
bound
inc
mov
into
push
popa
sbb
add
push
push
sub
mov
loopne
sub
sahf
daa
xchg
pop
mov
xor
inc
aad
sbb
add
dec
mov
leave
in
xchg
enter
orb
int3
or
push
cmp
subb
adc
pop
mov
pop
xchg
mov
and
sarb
inc
imul
out
mov
les
clc
faddl
xlat
add
incl
aam
dec
mov
sub
dec
inc
test
or
sbb
leave
dec
into
or
pop
adc
mov
jne
loopne
ss
sbb
pop
cmp
stos
cmp
xchg
or
xchg
jo
or
in
pop
or
mov
adc
xor
aaa
xchg
cmp
ss
sbb
mov
pop
add
mov
mov
clc
and
inc
pop
ds
or
rolb
scas
add
inc
ja
int3
lds
mov
sub
cmpb
mov
mov
insl
mov
adc
orl
leave
sub
and
pop
enter
pusha
push
fnstsw
pushf
add
loope
fisttpl
fnstcw
adc
pusha
mov
mov
add
add
inc
xor
cmpsl
in
add
mov
cmc
and
insb
orb
push
add
push
mov
nop
push
cmp
insl
inc
cmp
push
add
dec
int3
sbb
or
and
cmp
cmp
add
and
pushf
inc
push
mov
pop
dec
in
sub
add
stc
fs
mov
fidivrs
mov
add
lcall
dec
arpl
xor
pop
hlt
mov
push
xor
add
mov
call
lcall
orl
or
sub
leave
mov
pop
les
loope
dec
adcb
fs
jg
add
mov
js
loope
in
pop
and
movl
mov
cli
fsts
jae
push
pop
push
cmp
cmpb
or
push
push
je
ss
push
pop
add
std
mov
pop
cmp
dec
jl
cmp
jp
push
push
sbb
andl
mov
or
jns
daa
and
or
flds
cmp
fstpl
jb
mov
gs
sub
call
cmp
or
jno
and
mov
hlt
inc
jmp
mov
icebp
cmp
mov
cmp
adc
xchg
andl
push
xchg
out
dec
and
cmp
mov
mov
shll
push
pop
mov
cmp
mov
inc
pop
incl
inc
mov
mov
cmpb
std
mov
adc
fdivs
push
andb
and
jg
ds
xorb
or
lcall
push
cmp
cmc
and
mov
pop
aas
rolb
push
insb
filds
jne
and
enter
adc
cmp
xchg
push
mov
imul
add
ljmp
add
mov
ds
pop
pop
incb
mov
cmpb
or
inc
cmp
xor
pusha
rolb
jno
jle
inc
ret
fisttpl
and
sbb
outsl
dec
add
inc
shl
and
push
add
or
adc
cld
adcb
les
jae
xorl
dec
movsl
adc
mov
jl
mov
adc
scas
add
jae
out
nop
jnp
add
inc
xlat
cli
shl
call
hlt
dec
cmp
out
pusha
scas
jns
loop
in
fcom
test
push
nop
mov
cmp
mov
add
arpl
adcb
repnz
sbb
xchg
push
xor
jns
sbb
and
fdivs
mov
add
ffreep
mov
movzwl
mov
movsb
lahf
gs
outsl
and
cmp
sbb
adcb
xor
jl
pop
inc
pop
outsl
in
pop
xchg
cmp
cltd
idiv
mov
push
cmp
mov
xchg
add
insl
adc
mov
andb
cmc
mov
movsl
or
mov
scas
adc
ret
std
cmp
shr
aad
out
xchg
addb
cmp
pusha
sub
mov
pusha
scas
sbb
lea
add
loope
or
cmp
testb
add
in
mov
push
cmc
outsb
aaa
mov
imul
adc
outsl
push
xor
sbb
sbb
and
and
sbb
xchg
jecxz
jns
push
xchg
mov
cmp
out
popf
je
in
pop
mov
xor
mov
mov
and
out
mov
mov
mov
xchg
sub
push
cs
loop
aad
insb
cld
pop
sbb
inc
inc
inc
pusha
push
les
cmp
inc
loopne
icebp
orb
jnp
add
and
decb
ret
inc
push
cmp
cmc
testl
insb
mov
inc
insl
aaa
iret
repnz
mov
jle
test
js
and
pop
enter
jl
sbb
or
loopne
xchg
cwtl
cmp
cmp
sub
rcrb
sub
jno
bound
jecxz
adc
add
dec
cltd
mov
inc
cmpsb
loopne
insb
add
mov
xchg
jo
jl
sub
xchg
cmp
or
das
add
leave
sub
xor
ret
sbb
or
cmpb
test
jne
insb
stos
and
mov
movsb
jo
mov
loop
inc
or
fdecstp
fnsetpm(287
push
test
xor
push
mov
add
cwtl
rolb
mov
cmc
out
xor
inc
pop
jb
fisttps
mov
push
int3
ja
mov
xchg
adc
jl
iret
add
xor
mov
inc
lods
sarl
jo
dec
sub
popf
mov
sbb
xchg
in
hlt
outsb
sub
mov
sub
push
xchg
loope
adc
lock
adc
aam
rolb
lock
cmpsl
add
jno
jle
lcall
jbe
pushf
fcoml
popa
mov
xor
cmpsl
inc
in
fsubrs
stc
addb
jb
ss
push
jo
jno
dec
mov
int3
bound
add
in
int3
clc
pop
xchg
xor
dec
jnp
pop
pop
or
fdiv
popa
jecxz
icebp
shrl
fmuls
sub
push
inc
aam
jns
loop
adc
outsb
add
out
push
pushf
outsl
xchg
add
push
cmp
bound
dec
adc
adc
jo
dec
mov
ds
xor
add
aaa
inc
or
add
mov
inc
arpl
mov
dec
pop
jecxz
and
fdivl
adc
leave
xchg
mov
das
gs
inc
pop
pushf
sbb
inc
out
std
aam
fwait
imul
sti
call
xchg
or
push
cwtl
add
or
xor
repz
add
jae
adc
pop
xor
xchg
scas
mov
in
fs
inc
cmc
and
mov
repnz
mov
cs
and
xchg
rolb
incb
insl
bnd
add
mov
icebp
incl
xor
leave
jbe
fwait
cmc
add
cmpsl
or
mov
cmp
add
mov
inc
and
jno
xchg
scas
cli
sbb
mov
fcoms
xchg
xor
mov
mov
test
rcr
and
cli
xchg
lret
ret
mov
sbb
nop
nop
mov
dec
and
int3
jnp
or
mov
or
sub
sbb
stos
add
call
fwait
cmp
add
pop
popf
add
xlat
jns
sbb
repnz
mov
and
loop
scas
mov
popa
xor
or
or
out
push
add
icebp
sbbb
inc
loopne
sub
cmp
pushf
cli
aad
jbe
lods
orl
cld
xor
xor
xor
inc
cli
pop
xor
push
call
and
out
jo
mov
and
inc
sbb
in
dec
pop
fucomp
add
xor
dec
cmp
xor
ljmp
ret
and
push
pop
test
pop
add
fwait
mov
testl
pop
and
fisubl
xor
xor
add
and
pop
push
int3
add
daa
jnp
addl
lods
rcrb
add
in
shll
hlt
or
xchg
rorb
fdivl
mov
sbbb
mov
mov
ret
add
repnz
cs
cmp
lcall
push
mov
push
in
cmp
icebp
add
data16
push
xor
xor
add
or
cli
sub
test
outsb
xor
xchg
cmp
cmp
test
add
push
ret
pop
cli
add
xor
adc
or
outsb
cmp
pushf
aas
aam
mov
xchg
aad
sbb
or
test
xor
add
ret
adc
arpl
and
inc
xchg
sub
ror
enter
sbbb
add
mov
or
ss
or
jae
or
inc
or
xor
imul
shl
push
add
add
in
inc
pop
mov
fsubl
into
addr16
scas
std
rcrb
mull
arpl
and
mov
jns
xchg
icebp
pop
add
and
sbb
movsb
xorb
dec
aam
push
js
xchg
adc
push
add
imul
andb
push
add
rorb
mov
sub
inc
pop
call
dec
sbb
gs
cli
ret
add
imul
sub
aam
nop
pushf
sub
out
pop
add
outsb
cmp
cmpsb
pop
sub
xchg
rol
orb
es
add
sbb
ds
inc
and
xor
mov
repz
pop
jp
cmovnp
subl
and
dec
pop
inc
js
sbb
out
pop
add
mov
xor
into
aad
and
pop
xor
fists
aaa
adc
in
or
fiadds
pusha
cmpsl
jno
test
add
lods
cli
push
js
or
push
cmove
pop
pop
mov
jecxz
add
aad
fs
jae
mov
test
enter
pusha
pusha
adc
sub
add
dec
ret
testb
adc
xchg
inc
les
dec
nop
fwait
mov
orb
sbb
aad
pop
scas
inc
dec
cld
xor
scas
cmp
mov
or
loope
adc
and
jle
add
je
mov
mov
imul
add
xor
test
movsl
adc
insl
sub
rorb
fmuls
mov
inc
sbb
sahf
push
cltd
dec
inc
xchg
dec
outsb
shrl
shlb
leave
sub
aam
jmp
adc
dec
iret
and
inc
dec
xchg
sub
mov
inc
push
add
add
js
mov
hlt
inc
pusha
or
sti
test
add
sbb
mov
add
js
enter
and
sub
vmwrite
cli
repnz
scas
call
ret
inc
cmp
sbb
mov
add
mov
xchg
test
jecxz
pop
mov
add
sbb
mov
jl
outsb
clc
dec
enter
xchg
dec
pushf
add
push
pop
repnz
jns
mov
or
enter
push
add
into
lds
jnp
testl
or
and
sbb
sbb
push
cmp
sar
and
mov
cmp
das
dec
and
loopne
adc
repnz
or
and
pop
inc
adc
sbb
sub
sub
popaw
sbb
subl
mov
bound
dec
add
inc
imul
shl
push
fistpl
add
jne
rol
pusha
mov
mov
inc
xchg
cmp
add
xchg
cwtl
or
shlb
cld
test
lods
add
vpabsw
and
ljmp
add
jmp
repz
lock
mov
fsubs
cld
sub
cmpsl
lahf
ss
lods
xchg
add
bound
fdivr
fisubrs
repnz
add
xchg
mov
dec
cmc
push
add
stc
add
insl
inc
insb
cld
adc
mov
mov
or
std
lock
lret
pop
lods
dec
inc
add
fstps
je
mov
jge
xor
and
loope
cmpsl
int
mov
inc
add
in
jg
mov
sub
sti
outsb
add
xchg
push
call
cmpb
dec
mov
inc
iret
xorb
addl
fstpt
xchg
mov
and
fadds
xor
mov
fwait
jg
mov
dec
shl
cmp
sbb
inc
pushf
sbb
pop
inc
pop
xchg
cld
add
inc
rcll
shlb
int3
sbb
inc
es
mov
test
add
adc
stos
jne
jno
pop
insl
movsb
xchg
add
mov
adcl
cli
push
shrl
call
dec
daa
repz
in
mov
nop
sti
adc
push
adc
loope
into
and
fldt
sub
xor
nop
insb
xor
xor
xor
add
xor
add
ficoml
mov
xchg
add
xchg
ds
pusha
push
and
aam
sbb
cmp
mov
scas
js
into
sbb
add
or
iret
add
sub
fstpl
dec
add
add
xchg
ret
fcmovnb
adc
out
and
call
dec
outsb
out
test
movsb
movsl
insb
inc
cmp
xchg
cmp
imul
movsl
add
sub
nop
aad
cmp
push
repz
xor
cmp
test
call
aad
nop
mov
sbb
adc
or
icebp
pop
dec
roll
cmpsl
insl
stc
pop
hlt
test
andl
adc
ljmp
xchg
fwait
lret
xor
xlat
xor
loop
pop
mov
ljmp
fdivrs
stos
cli
mov
pushf
and
dec
inc
in
adc
add
inc
out
mov
aad
add
jg
mov
adc
enter
pop
pop
cs
xchg
dec
xchg
test
rclb
icebp
mov
js
cli
nop
mov
sbb
pop
in
add
jbe
in
test
adc
aaa
mov
mov
adcb
push
loopne
and
pop
jle
xor
mov
push
sbb
cltd
cltd
outsb
dec
andb
cmp
mov
jne
mov
rorb
lret
movb
lock
leave
pusha
sbb
add
jnp
sub
push
jne
adc
cmp
popf
adc
cwtl
es
loopne
xor
or
les
xor
sub
push
cwtl
add
pop
in
adc
inc
movsb
nop
scas
sbb
cmp
sub
loope
and
outsl
sbb
fisttps
mov
stos
and
std
inc
hlt
add
cmc
aad
jmp
mov
push
or
adc
inc
pop
movsb
or
add
mov
jp
push
negb
add
cmp
jb
xchg
push
jno
ja
shr
nop
rorl
adc
testl
leave
in
out
add
mov
lcall
scas
and
fists
fcomi
push
mov
add
inc
and
jb
sub
in
jl
jnp
cld
jo
mov
test
add
pop
sti
dec
out
add
insl
and
test
cmp
mov
pop
dec
in
add
rcrb
mov
and
loop
xchg
cmp
movsb
scas
xchg
je
cmp
mov
mov
and
xchg
fbld
lahf
push
pushf
iret
mov
and
pop
pop
in
adc
addb
and
das
test
icebp
out
mov
in
xchg
les
jecxz
or
push
sbb
mov
mov
jl
test
pop
inc
inc
cmp
add
cmovg
jecxz
xor
scas
push
enter
adc
pop
inc
xlat
pop
mov
xor
cmp
xor
cld
rcrl
jbe
xor
push
popa
fdivrs
or
xchg
aad
setle
loope
mov
enter
inc
or
pop
je
cli
or
dec
sbb
and
lock
rolb
xchg
lret
test
mov
sti
sub
out
add
or
xor
fists
or
sti
xchg
nop
inc
push
xchg
or
test
and
dec
leave
dec
cmp
add
push
outsb
ss
xchg
lock
outsb
hlt
jle
repz
jecxz
push
rcll
push
fildll
xchg
inc
push
adc
push
insb
and
xchg
add
mov
imul
adc
enter
mov
insb
ss
push
enter
bound
popa
movsl
dec
inc
cwtl
in
add
xorb
int3
push
pop
adc
or
mov
pop
and
ret
add
pop
fs
or
lahf
push
enter
add
push
lea
js
aaa
xchg
jmp
nop
fcomps
xor
iret
hlt
cmpb
leave
adc
or
pushf
and
inc
cmpsl
pop
mov
mov
lds
daa
bound
scas
call
xchg
push
pop
add
mov
test
add
loop
ja
daa
aas
mov
jns
add
mov
mov
loope
add
mov
cmp
dec
xor
mov
jno
addb
adcl
cli
cwtl
xor
pop
xchg
push
add
inc
pop
pop
inc
add
js
adc
popf
into
mov
mov
cmpsb
call
mov
pop
and
pop
adc
popf
push
push
icebp
repnz
js
int3
in
nop
and
xchg
add
addl
pop
aas
sar
mov
into
jmp
mov
mov
or
call
add
push
les
add
push
cmc
sbb
jns
add
pushf
ret
xchg
adc
rcll
pusha
dec
mov
xchg
mov
mov
and
enter
rcrb
sbb
adc
inc
bswap
jns
test
ret
xchg
aam
inc
push
rcrb
jbe
test
inc
fwait
int3
nop
mov
inc
pop
cmc
pushf
ja
and
andl
cld
mov
mov
das
sarb
out
ja
ljmp
stos
push
xor
xchg
mov
sub
sub
xor
mov
push
jne
cli
scas
ds
jge
cmp
cmp
fs
jle,pn
fldenv
mov
call
add
cld
pushf
push
mov
jbe
je
add
in
jae
repnz
cld
jnp
add
les
leave
dec
je
lock
movsl
dec
js
icebp
or
loop
ss
add
or
aam
mov
lock
fstps
fdivs
test
mov
jne
lods
lahf
aas
ret
mov
pop
stos
jbe
aam
xchg
dec
sub
je
hlt
mov
jg
and
repnz
cmp
adc
rcrb
flds
ret
adc
lahf
adc
add
out
popa
pop
outsb
dec
sbb
xor
add
adc
fsubrs
sub
lods
add
dec
add
pop
mov
int3
les
movsb
les
subb
iret
or
mov
inc
pop
cs
jmp
orb
cwtl
aaa
dec
mov
xchg
out
pushf
add
sbb
mov
sahf
add
inc
xor
sbb
mov
or
rorl
sub
pop
popa
inc
clc
andl
xchg
cmpsb
mov
ret
push
jae
jp
jbe
add
test
stos
jmp
dec
addl
push
add
sti
cmpsl
pop
sub
cmp
ds
cmp
dec
cs
jo
add
ljmp
in
mov
mov
bound
add
or
push
pop
movsb
fcoml
sbb
adc
ret
loopne
fucomip
sbb
xlat
aas
movsb
nop
jb
add
fldenv
insb
xchg
and
sub
inc
dec
mov
push
cmp
movsb
mov
and
cmp
jo
cld
dec
jno
add
mov
xchg
divb
jo
add
addr16
loopne
mov
cmpl
sub
call
push
aaa
add
mov
pop
cmp
mov
icebp
push
xchg
add
js
add
cmp
cwtl
or
mov
nop
or
push
pop
sbb
push
add
xchg
and
ficompl
pop
fs
fs
in
mov
out
add
fldl
cmp
int3
movsb
into
add
repnz
rolb
outsb
outsl
das
les
sbb
je
loop
rorl
cmp
add
daa
nop
movsb
icebp
test
movsl
testl
mov
loop
adc
push
fwait
and
andb
fcmovbe
lret
cmpsb
mov
or
nop
jp
add
mov
les
icebp
cld
fimull
cli
adc
or
mov
or
fisubrl
sub
fldenv
push
xchg
sbb
xorl
fldcw
rcrb
xor
push
fcomps
jl
add
push
mov
repz
xchg
ret
mov
pusha
je
xlat
add
loop
clc
add
lahf
mov
in
inc
add
xor
aaa
mov
mov
and
jb
pop
mov
loop
add
xchg
sbb
and
push
xchg
sub
test
hlt
mov
pop
dec
pop
in
xchg
add
adc
add
xchg
lds
mov
and
jmp
dec
xchg
shrd
pop
scas
jmp
rolb
daa
add
jne
repz
clc
sub
and
pop
or
pushl
imul
pusha
fdivs
std
xor
test
in
lock
inc
add
es
push
subl
push
mov
addb
inc
into
iret
add
fmull
xchg
mov
add
xchg
fisubrs
mov
add
pop
mov
cs
andb
mov
jg
sub
and
and
mov
add
adc
mov
mov
orb
in
cs
mov
sub
and
pusha
mov
and
ljmp
clc
mov
or
push
adc
jns
cmp
pop
shld
xor
pop
push
jo
call
xor
or
ror
repz
test
pop
in
add
lahf
scas
push
dec
in
add
enter
cmp
mov
add
add
adc
jns
andl
and
ds
dec
inc
mov
push
out
add
jbe
divb
sbb
dec
cmc
inc
pop
push
dec
mov
lahf
xor
adc
mov
into
adc
add
lods
sbb
pushf
jnp
dec
sub
lods
or
pop
mov
fiaddl
jns
xor
pop
sbb
aas
mov
mov
mov
andl
and
push
add
xchg
add
aas
lcall
mov
adc
or
stos
mov
add
sahf
jmp
adc
or
and
jle
xor
pusha
xor
or
adc
adc
enter
dec
subb
fadds
mov
jge
add
add
repz
inc
xor
adc
mov
xor
push
popf
sarl
outsb
push
inc
or
push
sub
push
pop
ret
test
mov
data16
mov
or
mov
xor
mov
lea
dec
sbb
add
jg
mov
add
sbb
jo
mov
mov
lret
xor
push
cmpb
adc
sub
aas
fwait
sub
or
mov
rolb
add
cmp
loope
sbb
jnp
cmp
pop
jb
mov
loopne
mov
adc
pop
leave
lds
cmpsl
lret
mov
xor
pop
adc
xchg
or
test
lock
mov
and
xor
mov
cmp
sbb
add
shrb
sub
fmul
lods
and
cmp
jnp
sbb
pop
out
push
xlat
xchg
fdivs
add
cli
dec
jb
cmc
aad
push
inc
xchg
lds
sub
sub
and
mov
jecxz
scas
inc
std
outsl
es
nop
add
and
xor
push
inc
addl
icebp
loopne
sub
das
cwtl
adc
sahf
jl
test
push
clc
in
add
or
push
inc
sub
push
push
mov
leave
mov
mov
ja
dec
mov
lods
inc
add
push
pop
inc
roll
loopne
mov
cmpsl
dec
sub
call
add
gs
out
pusha
sub
in
outsb
fnstenv
xor
int
lods
repnz
jp
dec
add
jmp
inc
adc
add
ljmp
push
sub
cmp
sub
and
outsl
push
repnz
dec
fsubs
add
lods
pop
dec
or
sbb
push
cwtl
xchg
sbb
imul
in
mov
scas
rorb
adc
incb
imul
cmp
pop
xchg
add
das
outsl
into
test
orl
popa
add
pop
js
fiadds
add
movb
sub
imul
mov
jmp
mov
in
inc
or
add
jp
jg
inc
push
or
pop
std
repnz
and
jnp
push
jge
mov
cmp
pop
lods
push
add
cmp
push
jl
or
add
pop
push
jnp
pusha
clc
or
sbbl
jle
movsb
sti
xor
pop
icebp
fmull
lock
xor
and
cwtl
mov
sbb
sub
or
jle
ret
adc
or
or
dec
or
inc
mov
sarl
nop
mov
and
sbb
add
dec
and
movsb
and
push
stc
sub
addb
adcb
jmp
sti
add
mov
aam
jae
out
jmp
gs
sub
cmp
std
xchg
push
or
mov
loopne
push
lahf
pop
lret
mov
add
clc
cld
pusha
sbb
rcll
jb
in
ljmp
push
lock
loope
xor
add
or
pop
sbb
xchg
push
std
mov
xor
add
jecxz
sub
jo
popa
add
aas
mov
pop
insb
and
add
out
xlat
pop
loopne
fs
and
add
stc
outsb
and
dec
cli
pop
nop
nop
fcompp
nop
lahf
rclb
adc
rorl
in
aaa
add
pop
jb
sbb
add
test
ljmp
pop
mov
in
scas
jb
imul
loope
ffree
pop
fistpl
nop
fistps
add
inc
negb
rorb
shl
idivl
adc
mov
xor
jmp
jno
add
push
test
add
inc
or
movl
test
xor
insb
popl
cltd
sbb
mov
or
test
js
sbb
fs
shrl
pop
cmpsb
testl
dec
outsl
or
dec
cmp
cld
or
mov
jle
add
ficoms
add
js
xchg
jg
test
mov
xchg
or
jno
pop
testb
and
fimuls
add
les
add
shlb
add
std
cmp
adc
lds
ret
sarb
mov
int3
mov
inc
repnz
pusha
in
out
pop
icebp
xchg
jb
add
imulb
frstor
push
or
xor
and
mov
add
das
int
out
fnclex
add
repz
and
std
rolb
sti
pop
jno
jno
add
cwtl
and
add
or
add
stos
or
sub
jle
mov
mov
push
add
inc
sub
pushf
cmovbe
mov
gs
clc
sub
pop
fidivrs
cltd
adc
add
add
sti
sbb
loop
and
inc
lock
pop
sub
gs
and
add
test
dec
loopne
rorb
loope
out
sbb
sbb
inc
gs
or
pusha
adc
mov
out
sbb
cmp
adcl
add
inc
xor
xchg
sub
push
in
and
sbb
rolb
xchg
loopne
adc
add
int3
push
inc
sbb
mov
lea
xadd
sub
shlb
sbb
insl
loopne
out
inc
add
push
push
add
mov
call
jp
adc
test
or
mov
sub
test
pop
mov
mov
mov
add
movb
subl
mov
cli
or
roll
loope
jmp
pop
jnp
jg
mov
mov
mov
in
inc
push
or
mov
out
int3
and
jbe
xor
orl
shl
clc
lods
push
add
sub
in
fistpl
adc
add
add
add
rolb
arpl
aad
xor
es
int3
cmpb
out
jmp
mov
sbb
je
std
mov
js
lods
push
sahf
xchg
leave
sarb
and
stos
or
xchg
mov
sar
xor
add
imul
add
xchg
inc
lods
loop
test
dec
jbe
adc
cmp
call
xlat
or
rclb
xchg
cli
xor
into
add
add
dec
jbe
je
xchg
int
lcall
add
repz
xchg
add
leave
inc
test
dec
imul
sbb
std
mov
ret
lar
lock
flds
add
outsl
sbb
dec
sbb
push
shlb
dec
and
fadd
adc
add
lcall
fwait
inc
lds
dec
fldenv
or
mov
cld
lock
insb
or
orb
fcoms
repnz
push
sbb
std
mov
decb
pop
aad
push
ja
mov
dec
lods
stc
in
sub
mov
jl
sub
shll
or
mov
mov
xchg
mov
or
xchg
xchg
pop
cld
xchg
test
add
hlt
stos
fistpl
movsl
mov
insb
add
shlb
loop
mov
adc
cld
add
lret
xor
cmp
xor
inc
insb
mov
loopne
cmpsb
push
scas
inc
shr
mov
mov
inc
ss
clc
mov
iret
pop
fidivs
push
mov
lods
out
mov
dec
cmpsl
jns
pop
jge
add
ret
push
stc
xor
push
add
jmp
pop
bound
lods
mov
push
rorb
out
ror
icebp
or
or
mov
in
scas
ja
or
movsb
mov
add
das
pop
test
mov
idivl
pop
movsb
add
js
mov
and
or
rorb
fistpl
dec
and
les
and
mov
pop
stos
out
imul
add
jge
out
dec
push
xchg
xorb
or
popf
rorl
test
sbb
div
lock
orl
pop
out
stc
aad
loop
jb
pop
inc
mov
add
repnz
outsb
imul
mov
dec
mov
hlt
add
mov
int3
jo
loopne
pop
dec
frstor
add
pusha
add
hlt
jecxz
shll
cmp
push
xchg
push
mov
cmp
fdivrl
adc
or
pop
mov
xor
add
mov
ret
nop
out
mov
rclb
in
adc
and
jge
jle
arpl
movsl
in
or
mov
inc
mov
call
test
add
xor
andb
push
pop
push
dec
add
xchg
loopne
dec
cld
test
fidivl
pop
jg
rorb
pop
pop
sub
add
aam
loop
add
pop
in
or
in
ljmp
out
sbb
cli
xor
pop
cmpsb
sbb
test
push
and
es
mov
in
fisubrs
mov
movsl
add
adc
imul
xchg
push
or
dec
xorb
fists
add
data16
int3
shrl
rol
adc
mov
loopne
cmp
xchg
and
sbb
xor
shl
add
shufps
xchg
loopne
data16
mov
push
sbb
ja
pop
js
pop
cmp
add
jne
cltd
xchg
sbbb
scas
loope,pn
movsb
cmp
addl
xchg
and
fs
inc
rol
or
mov
dec
cmovno
repz
and
loope
mov
dec
xchg
rcl
add
les
sbb
and
add
jle
or
dec
cmpsl
inc
adc
sub
push
cmp
pop
roll
adc
inc
sti
sub
add
sbb
fistpll
or
and
loopne
scas
or
in
outsl
dec
addr16
or
andl
pop
cs
push
cmp
push
and
addb
arpl
adc
clc
addb
cmc
jne
addb
jbe
sahf
add
ret
mov
pop
lret
mov
cwtl
pop
repnz
lahf
cmp
cmpsl
icebp
or
dec
std
add
lods
add
sbb
mov
mov
cmp
or
out
mov
into
and
inc
hlt
ljmp
xchg
cmp
pop
loopne
cmpsl
pop
stos
and
in
mov
jle
xadd
sar
stos
xlat
add
push
sub
out
jl
xchg
pop
loope
rcll
add
sub
inc
packuswb
mov
sub
pop
out
aam
sti
and
rolb
add
xchg
add
dec
sub
cli
xchg
add
jne
push
sbb
dec
add
out
add
adc
inc
int
insb
lods
sbb
icebp
sbb
aaa
push
fistpll
mov
or
ret
les
jb
int3
push
or
mov
int
data16
andl
leave
mov
sarb
adc
mov
adc
enter
scas
cmpsb
pusha
push
in
add
cld
cmp
cmp
ror
and
lods
bound
and
fmulp
pop
shrb
call
dec
les
dec
test
xchg
fmulp
mov
aad
lods
sahf
mov
je
or
shr
fstp
mov
loopne
addb
and
subl
or
jns
mov
xor
xor
call
inc
repnz
sbb
inc
ror
pop
mov
rorl
xor
popf
push
jno
hlt
cmp
jecxz
or
loopne
mov
imul
push
xor
popa
adc
test
inc
and
mov
shlb
mov
in
gs
jae
imul
ljmp
dec
add
and
stc
arpl
cmpsb
sbb
sbb
and
pusha
cmp
adc
call
dec
cs
pop
cld
sarl
je
inc
jecxz
jecxz
icebp
xorb
jecxz
out
out
rol
cmp
pusha
mov
push
clc
or
and
mov
loop
leave
push
mov
cltd
lret
sub
clc
jnp
pusha
test
mov
inc
mov
icebp
add
stos
les
jno
cwtl
insl
mov
mov
rcr
xlat
mov
add
adc
aas
sbb
cld
or
sbb
inc
in
fs
xlat
and
clc
or
adc
pop
out
xor
clc
lods
clc
ja
push
mov
or
adc
mov
out
or
adc
out
les
xchg
mov
ljmp
pop
sub
inc
rorl
testl
xorl
in
cmc
add
out
andb
mov
sub
imul
jbe
test
sbbb
js
aaa
loop
sub
enter
mov
fldl
mov
gs
pop
jecxz
clc
add
rclb
mov
dec
iret
or
lock
inc
mov
and
fidivs
scas
insl
movsb
test
out
orb
dec
inc
or
add
push
test
xchg
lcall
shll
gs
add
scas
hlt
dec
add
dec
mov
cld
dec
xchg
jae
gs
cmpsl
bound
loopne
cmp
sub
jmp
ljmp
xchg
lds
xchg
negb
add
cmc
sub
adc
inc
dec
mov
dec
scas
jnp
push
mov
push
mov
cwtl
pop
mov
lods
or
test
sbb
add
jmp
adc
scas
dec
shlb
in
mov
lahf
cmp
scas
add
scas
pop
ja
shl
cmp
push
add
in
hlt
or
and
out
incb
repnz
and
subl
add
sub
xchg
add
mov
sub
jae
dec
mov
gs
fsts
and
rolb
sti
cmp
xchg
enter
add
enter
push
stos
lock
lcall
and
jecxz
popa
pop
mov
cwtl
lock
cmp
addb
inc
add
outsl
or
in
adc
call
xlat
dec
mov
mov
rolb
add
jp
scas
sbbl
xchg
add
dec
aad
mov
lock
adcb
sub
push
or
cld
adc
cmpsl
push
icebp
cmp
adc
les
xorb
jl
fs
xchg
les
mov
add
mov
rclb
add
hlt
ret
pushf
je
xor
mov
jno
jle
add
fstps
enter
kmovb
adc
outsl
add
imulb
jb
shlb
adc
jle
xor
dec
scas
push
add
push
sbb
mov
rclb
sub
add
or
xchg
loopne
inc
add
shl
lahf
movsb
insl
andb
shlb
cmpsb
stos
ljmp
sbb
pushf
or
push
daa
inc
xor
adc
dec
pop
das
js
movsl
popf
xchg
xlat
jge
gs
rolb
xchg
cmp
xchg
mov
mov
add
data16
dec
add
iret
pop
repnz
xor
mov
dec
push
cmp
andl
mov
hlt
rolb
inc
int3
xor
gs
jge
or
sub
sbbl
std
mov
mov
add
mov
push
inc
mov
hlt
repnz
iret
ljmp
mov
aaa
xor
jle
pop
xchg
cmp
push
into
sahf
pop
adcb
or
inc
mov
int3
test
push
fisubrs
sub
popa
inc
or
and
fs
and
iret
aaa
add
daa
repnz
int
push
ljmp
push
lock
xorl
pop
xor
call
das
mov
jl
mov
xor
xchg
push
dec
bound
cwtl
sbb
shrb
xchg
cld
push
cmp
cmc
cmp
stc
mov
cvtps2pd
dec
arpl
fs
call
pop
mov
orb
or
aaa
cmpb
mov
xor
inc
inc
inc
dec
pushf
cmp
fcoml
in
ljmp
adc
jno
sbb
enter
mov
into
cld
or
mov
jecxz
es
call
jl
jno
cmp
add
notl
pop
or
incb
adc
add
and
push
dec
xor
mov
xor
addb
jge
push
fwait
pushf
add
mov
xchg
push
add
push
std
fsubrs
call
cmc
inc
cld
and
cmp
jmp
into
mov
jecxz
pop
std
cmpsb
pop
lcall
loopne
add
mov
and
xchg
mov
add
cmpl
mov
xor
adc
pop
push
aad
clc
rcll
rcrb
loop
add
or
repnz
add
add
inc
stos
push
adc
mov
jle
lret
das
rcll
add
mov
icebp
fptan
jg
cltd
clc
push
fistpll
sub
ret
add
cmpl
and
adc
inc
popf
mov
fdivrl
iret
cmp
xlat
pop
add
adc
and
in
bound
mul
and
dec
add
pop
jge
push
adc
ja
cmp
les
ficoms
push
push
incl
mov
mov
push
pop
imul
and
cld
cmp
lods
pop
stc
pushf
add
sbb
insl
inc
or
stc
leave
add
sbb
jmp
out
adc
add
in
mov
std
sub
mov
mov
add
stc
ljmp
cmc
outsb
add
adc
pop
or
and
mov
add
repz
push
sub
sbb
ret
rcr
imul
jno
mov
and
mov
dec
pop
cmp
or
or
js
mov
lret
std
dec
imul
push
addb
push
push
dec
mov
jne
cmp
test
add
sbb
xlat
rolb
nop
mov
outsb
sub
cld
dec
lret
rorb
aam
or
mov
icebp
mov
mov
popa
mov
inc
or
hlt
and
add
jno
test
imul
mov
xor
sbb
or
pop
fstl
push
mov
out
dec
mov
mov
fists
bnd
inc
nop
ja
add
mov
add
add
xchg
jl
jmp
mov
add
xchg
push
xor
jnp
add
mov
dec
icebp
je
in
add
mov
xchg
pop
mov
pop
mov
orl
mov
loop
lods
cmp
insb
lahf
int3
mov
or
outsb
dec
cmpsb
add
sbb
pop
sub
jno
push
pop
mov
stos
lahf
jmp
jge
jo
and
jno
jne
les
mov
adc
mov
add
add
shlb
push
ret
mov
inc
test
test
xchg
mov
dec
lds
ficoml
inc
rcrb
fadds
pop
imul
mov
rclb
stos
mov
insb
testl
sahf
add
cmpb
xor
push
mov
mov
xchg
adc
mov
cmp
add
out
mov
in
add
push
je
mov
inc
mov
jecxz
jl
xor
mov
aam
xchg
sbb
or
add
and
repnz
pushf
xor
mov
bound
cmpsb
pop
xchg
data16
loope
or
dec
and
cltd
aaa
fcmovnbe
xor
addl
sub
push
add
int3
add
idiv
jge
aas
aam
cltd
add
and
push
add
jge
aaa
cld
xchg
add
imul
cmpsb
into
add
xor
dec
out
mov
fmull
xor
or
mov
xchg
jo
cs
dec
aas
add
lahf
jns
lds
shlb
sub
inc
mov
or
xchg
add
mov
lret
in
add
push
pop
addb
jg
out
xor
jmp
adc
test
call
out
mov
loopne
inc
scas
rclb
mov
dec
repnz
jb
add
iret
loope
jnp
cmp
or
hlt
inc
subb
mov
movsb
hlt
loope
xor
stos
and
jae
add
stos
aas
inc
es
cmpsb
push
adc
test
pop
add
xlat
mov
loop
add
arpl
imul
push
xchg
sbb
dec
and
and
sbb
inc
popf
mov
and
adc
imul
ljmp
add
cmp
cltd
add
pusha
rorb
inc
insb
pop
add
add
jecxz
lock
loopne
test
sub
out
pop
dec
mov
int
fimull
or
cli
mov
add
fdivrp
mov
add
aaa
jae
adc
pop
test
push
and
pop
push
pusha
inc
scas
xchg
pusha
lock
add
or
pushl
addb
addl
nop
sub
fadds
push
loop
xchg
lea
xor
les
mov
mov
cltd
inc
gs
add
scas
sub
sub
jle
adc
inc
cmp
lcall
mov
hlt
add
sbb
adc
adc
lcall
xor
sub
scas
cmp
add
xchg
scas
pushf
sbb
testb
mov
mov
dec
adc
rolb
dec
push
les
adc
add
jle
out
ss
clc
cltd
push
add
mov
mov
add
cltd
loope
out
xchg
sahf
add
loopne
xchg
shrl
jmp
pusha
loope
sbb
pop
rcrb
xor
cwtl
jge
lods
sub
loopne
test
xchg
hlt
cli
add
pop
mov
push
xchg
adc
mov
ss
out
dec
cmp
rclb
pusha
loope
dec
pop
enter
cltd
add
adc
int3
jle
mulb
icebp
and
lods
or
sahf
cmp
mov
orl
ja
dec
push
into
in
mov
mov
adc
aaa
dec
andl
enter
cmp
lret
fs
mov
cltd
cmp
inc
mov
in
dec
inc
add
sbb
in
jne
test
push
pushf
push
in
mov
push
outsb
mov
sub
and
test
pushf
jl
push
xchg
test
and
int3
inc
jg
and
xchg
push
add
cmp
jo
sti
mov
ja
addl
jmp
jmp
push
add
rorl
in
in
and
adc
inc
cmpsb
leave
mov
sbb
imul
ds
add
inc
jl
sbbb
adc
nop
js
or
pop
loopne
fistl
adc
imul
sbb
dec
push
in
mov
bound
push
clc
and
xlat
icebp
pusha
adcb
adc
roll
sub
pop
sub
orl
add
lret
movsl
mov
xchg
jl
sub
ret
movsb
rolb
nop
adc
test
push
push
hlt
shlb
fisttps
lcall
icebp
sub
sbb
mov
push
pushl
movsl
or
cltd
cmp
movsb
adc
in
fcom
mov
pop
sub
add
dec
jl
mov
sub
testb
in
jl
hlt
out
pop
cmp
ljmp
stos
enter
les
rorl
xchg
rorl
mov
inc
xchg
and
nop
or
mov
les
xor
xlat
cld
xchg
jbe
add
lret
in
fnsave
add
ja
xor
in
push
mov
add
mov
sub
push
in
push
sar
fbld
mov
xor
push
adc
or
imul
mov
xor
str
and
fnsave
adc
sbb
imul
xchg
mov
adc
sub
mov
inc
jne
push
cld
sub
dec
dec
stos
insl
push
sbb
and
cmp
or
pushf
clc
fsubrs
or
in
dec
and
sbb
add
jo
loop
sub
test
icebp
and
and
jge
loope
pop
pop
js
les
add
xchg
jbe
xor
xchg
cmp
faddl
les
sbb
push
xchg
push
rcr
in
pop
out
ds
orb
pop
ret
sub
ljmp
movsb
lret
pop
mov
ret
orl
aaa
dec
icebp
pop
loopne
and
or
mov
adc
mov
xor
fsubp
dec
cwtl
push
inc
adc
xchg
or
or
push
cmpsl
pop
mov
add
cmp
cmp
or
loope
push
xor
or
lea
popf
dec
incl
stos
loop
adc
pop
fcoms
dec
lcall
dec
loope
xor
pop
add
orl
pop
popf
jmp
xorb
adc
arpl
add
shrl
ss
pusha
mov
sbb
sub
lods
mov
mov
add
mov
pop
xor
test
clc
dec
shrl
insb
clc
scas
lahf
mov
orb
lmsw
adc
jno
pop
shlb
cmpsb
and
add
pop
dec
out
loop
rcll
push
mov
xor
xchg
or
mov
js
nop
fmuls
push
mov
test
pop
int3
aam
inc
and
xor
or
test
jo
aaa
xchg
mov
xorb
push
inc
or
ljmp
sbb
push
sahf
ds
sub
cld
or
add
mov
loope
inc
pushf
inc
inc
clc
ret
or
or
adc
cs
add
add
hlt
or
xor
loop
add
mov
xchg
and
adc
mov
mov
push
mov
sbb
push
call
inc
inc
pop
pop
les
roll
adc
cli
dec
jl
lock
push
add
mov
lea
or
cmpsl
cwtl
fs
cli
push
cmpsb
mov
outsl
sub
mov
sub
push
out
xor
pusha
push
fisubl
or
add
sbb
jns
xchg
mov
xor
popa
aaa
sub
sbb
hlt
xchg
pop
push
or
rclb
push
out
insb
clc
add
push
xorl
add
cs
imul
les
fcompl
inc
and
stos
ret
aam
add
push
add
xchg
popl
pop
dec
in
pop
cmpsl
add
jle
dec
cmp
pop
adc
lds
adc
fs
icebp
aaa
testl
sahf
cmp
fs
dec
or
mov
mov
add
jae
out
adc
adc
inc
cwtl
dec
lds
pushf
loopne
inc
clc
ret
mov
jmp
cmpl
rcll
jo
mov
je
in
in
bound
lea
flds
hlt
add
insl
out
inc
push
sbb
pushf
aas
fdivrl
imul
jbe
sbb
data16
xchg
out
out
jecxz
movsb
or
cmp
adcb
inc
xchg
and
xor
jl
add
push
lahf
jmp
lret
adc
inc
sbb
leave
or
add
xor
in
lea
repnz
add
mov
and
add
adc
mov
iret
sbb
fs
lcall
jl
push
xor
or
movsl
sub
pop
sub
stc
out
test
lea
int3
dec
iret
add
fbstp
sqrtps
sbb
out
mov
test
test
pop
pop
sub
test
shll
ds
shrl
xchg
int3
pusha
enter
adc
inc
daa
mov
xor
loop
imul
leave
push
mov
test
inc
dec
rolb
push
mov
aad
int3
add
mov
xchg
adcb
add
adc
cmpsb
add
push
dec
in
int3
test
or
jl
imul
xchg
cmp
imul
std
ffree
mov
in
mov
loopne
mov
pop
out
lret
inc
inc
adc
out
jg
es
in
cmp
add
adc
or
xchg
mov
xchg
add
subb
inc
andl
subb
fnstenv
cvttps2pi
or
jmp
mov
mov
movb
clc
mov
xor
mov
lods
fimuls
add
scas
xchg
jbe
adc
add
cmp
shrb
cmp
sbbb
jno
adc
je
push
test
pop
add
cmp
or
mov
fdiv
lock
adc
dec
jge
or
pusha
les
jp
cwtl
dec
mov
aaa
in
int
je
ja
ror
push
out
mov
lods
insl
fisubrs
stos
fsubs
in
adc
and
pop
leave
add
ret
pop
jmp
sbb
or
inc
int3
add
pop
pop
adc
int3
add
inc
out
cmpsl
add
adc
push
or
or
pop
cltd
cmp
rclb
add
inc
mov
test
pop
push
fadds
popf
pop
inc
movsl
dec
mov
imul
ret
mov
mov
cltd
out
mov
movsb
cmp
xor
ss
add
in
out
sbb
dec
test
pop
fs
pop
orl
or
cmp
add
push
cmp
xchg
andb
and
std
mov
add
loope
aam
cltd
push
repz
sub
jo
sbbb
movaps
lods
push
add
data16
sub
out
ds
add
test
inc
dec
cmp
repz
xchg
mov
xor
and
and
shld
mov
fdivp
fsubl
nop
mov
inc
cmp
pushf
nop
mov
lds
dec
fcomp
dec
hlt
add
imul
xor
add
popf
frstor
add
int
push
sbb
xor
mov
in
mov
inc
cmp
sbb
adc
rclb
pop
add
sub
or
jmp
test
cmp
sahf
aas
xor
mov
mov
inc
hlt
scas
add
jl
lcall
lds
push
xlat
cmp
add
mov
fcmovnu
pop
sarb
shlb
iret
add
cwtl
add
int3
pop
icebp
mov
xchg
aam
lea
cwtl
fildll
fcomp
jmp
adc
call
sub
dec
dec
mov
add
sub
sub
adc
or
rolb
push
pop
pusha
in
or
sbbb
fcoml
nop
cwtl
cmp
ja
add
test
cld
and
nop
push
scas
test
cltd
and
pop
mov
out
pop
movsb
cmpsb
add
pop
lds
enter
shrl
push
cmp
adc
enter
jmp
insl
addl
ss
xchg
push
jp
xor
stos
xchg
inc
push
out
add
shll
sub
scas
jns
lds
push
mov
rolb
loopne
inc
lds
jbe
push
adc
sarb
call
and
inc
xchg
and
ret
add
shlb
loop
fbld
lock
cld
mov
mov
mov
das
and
mov
js
mov
cmp
mov
add
cld
inc
std
pop
push
and
imul
mov
subb
imul
incl
sbb
add
pusha
pop
pop
pop
iret
out
add
cmp
xlat
add
fnsave
test
pop
add
inc
jl
out
mov
add
stos
jg
adc
add
cmpsl
psrlq
sub
loop
push
outsl
add
subb
loop
cmpl
dec
sub
or
mov
or
jmp
push
sbb
xchg
dec
addl
and
add
pop
mov
xchg
sub
ss
mov
je
pushf
call
ficomps
sub
inc
andb
adc
ds
inc
pushf
cmp
cmp
sub
cwtl
pushf
orb
add
sub
mov
or
jb
sbb
js
push
inc
cld
push
ja
je
jecxz
jae
or
jne
ror
add
sub
mov
sub
dec
mov
jo
mov
test
add
push
and
mov
fcmovnb
jae
out
nop
aas
notl
dec
push
enter
xchg
loope
gs
xchg
aad
lock
shlb
sub
adc
leave
mov
mov
or
dec
icebp
and
mov
pusha
push
negb
popl
mov
mov
mov
loop
add
mov
fwait
add
lods
add
pop
fisubrl
movsl
add
sti
stos
mov
andl
roll
add
repnz
or
stos
int3
loopne
lods
lret
add
and
push
loopne
xchg
mov
sti
or
mov
adc
cmp
movsl
or
jns
mov
mov
mov
ret
xchg
and
cwtl
add
mov
pushf
loopne
inc
and
jecxz
sbb
jmp
cmp
ds
mov
inc
rol
jnp
mov
cmpsl
push
rclb
pushf
lds
leave
and
mov
in
mov
sbb
imul
aam
pusha
aam
xchg
cltd
fsubrs
loop
jae
addb
rep
ds
popf
cmp
popa
mov
mov
mov
push
mov
lock
mov
mov
mov
or
mov
adc
lock
xchg
daa
adc
cmpsl
xorb
dec
stos
sub
xor
mov
add
mov
inc
inc
inc
aad
ja
push
js
add
dec
out
nop
sahf
add
cltd
cmpb
push
fstpl
jo
push
pop
les
subb
push
add
xchg
fs
ljmp
data16
btrl
loope
push
iret
xor
mov
or
and
add
nop
and
xlat
mov
xor
outsb
cmpsl
cmpsb
inc
aaa
add
int
fs
mov
jge
aam
rorb
or
cmc
test
add
push
lock
mov
jns
and
cmp
and
stos
and
xlat
xchg
push
int3
mov
xorl
cli
mov
cmovl
sbb
rcrb
jne
in
mov
ljmp
sub
mul
mov
xlat
or
in
and
mov
sub
sub
pop
inc
sbb
bound
shr
imul
ret
sbb
in
add
addr16
lret
xor
adc
add
mov
or
movsl
test
xchg
out
pushf
cwtl
dec
andb
fwait
adc
add
jg,pn
add
or
mov
cmp
pop
ret
adc
add
lret
mov
mov
xchg
add
cmp
push
push
cmp
stos
mov
icebp
movsb
add
stos
xchg
xorb
inc
add
inc
std
adc
pop
imul
and
and
adc
cmp
mov
dec
xchg
mov
inc
sub
inc
mov
pop
sub
adc
xchg
jbe
xor
and
in
cmp
sub
add
cmp
jmp
jl
and
mov
shlb
xchg
pop
cmpsb
loope
xor
pop
push
aad
adc
mov
dec
xchg
inc
add
xor
adc
out
or
das
int
pop
ret
jns
mov
out
sub
imul
xor
scas
push
repnz
lahf
adc
aam
andl
or
cmp
xchg
mov
sub
mov
mov
lea
cltd
or
adc
subb
xor
ja
sub
aam
adc
or
or
push
adc
cmp
sbb
addr16
push
ds
jne
xor
mov
lret
mov
stos
mov
inc
adc
les
adc
mov
add
xchg
mov
push
movsb
pop
mov
cmpl
xchg
pop
mov
add
jge
and
enter
loop
sti
or
mov
je
sub
add
pop
jo
pop
cltd
insb
add
nop
sbb
jnp
loop
jo
xor
pop
sbb
add
push
lcall
cmpsl
add
scas
pop
pusha
mov
or
and
das
adc
test
subb
dec
js
jno
call
loop
xchg
jle
push
or
inc
or
adc
jo
int3
adc
mov
fisubrl
push
fwait
add
daa
xchg
sbb
imul
jge
add
and
mov
pusha
lods
fs
loopne
loop
test
je
sbb
and
add
insl
adc
cmp
and
clc
das
mov
dec
out
adcb
imul
or
adc
mov
xchg
mov
and
fbld
test
dec
mov
shr
dec
movsb
inc
lcall
aaa
scas
cmp
adc
setnp
in
add
jp
cmpsb
arpl
fsubrs
int
mov
das
rclb
loopne
adc
push
add
xor
xorb
iret
add
mov
outsl
pushf
cmp
call
or
push
inc
cltd
pop
add
nop
or
mov
cltd
adc
mov
test
inc
jbe
sahf
pop
add
not
push
pop
cld
adc
cmp
dec
push
or
icebp
into
fisttps
outsb
sub
addb
or
push
mov
jmp
mov
js
pop
sar
ficomps
dec
je
into
rcl
loop
mov
repz
stc
adcb
adc
jno
add
sahf
xchg
aam
xlat
in
mov
lret
adcb
jns
add
jae
gs
add
stos
sbb
dec
or
pop
mov
int3
scas
rolb
push
pop
pop
mov
enter
jbe
call
and
push
xchg
out
push
adc
push
xor
cld
aad
push
data16
je
faddl
add
mov
xchg
cltd
add
addl
lahf
adc
sub
cmp
mov
cmp
lods
dec
xchg
xchg
add
sub
mov
jns
push
mov
scas
aaa
sar
iret
fists
pop
xlat
loopne
scas
imul
in
cmp
mul
jmp
cmp
nop
push
cmpsl
nop
pop
add
sub
cmp
push
fadds
jmp
jo
lock
or
lds
lods
int3
pop
adc
sub
sbbb
in
add
cmpsl
jo
fadds
push
cmp
lahf
inc
add
inc
dec
pop
jmp
addl
out
push
rsm
xor
mov
ljmp
lock
mov
adc
add
mov
adc
fimuls
stc
xor
xor
in
fcoml
xchg
push
jo
pop
icebp
cwtl
jmp
push
and
inc
aam
dec
lahf
cmp
mov
int3
pop
cmp
dec
add
push
loop
fimuls
jne
dec
adc
sub
pop
dec
adc
xchg
inc
inc
inc
cmp
inc
loope
pop
test
jbe
xor
adc
scas
jno
cmpsb
pushf
add
mov
mov
fmul
mov
xchg
into
push
xor
mov
add
lret
std
jmp
loope
rorl
mulb
lret
add
into
mov
push
outsl
mov
add
mov
clc
and
loope
ret
cmp
add
loopne
sahf
push
add
add
sbb
in
out
adc
dec
or
sbb
pop
adc
sbb
adc
jl
ds
sbb
jnp
dec
jle
vpcmpeqw
addl
adc
movsl
adc
in
push
xchg
xchg
add
icebp
sub
sti
imul
add
into
mov
jg
out
loop
push
ja
add
xchg
xor
in
add
daa
push
out
xor
call
or
push
pop
shr
int
test
and
sub
or
in
cmp
outsb
push
cli
pop
add
cmpb
enter
sub
cmpl
pop
ficompl
xchg
test
fcoms
fwait
add
jno
divps
ret
data16
and
mov
inc
xchg
cwtl
pop
add
enter
push
sub
pop
mov
pop
stc
ljmp
adc
adcb
jns
stos
xor
lds
inc
aaa
push
lods
sahf
add
sub
loopne,pt
out
lock
lock
xor
xchg
dec
sub
add
and
mov
cwtl
int3
in
xor
push
or
xor
and
sbb
mov
add
dec
pop
xchg
enter
cmp
mov
add
sbb
int3
aas
inc
add
xchg
pop
mov
shl
insb
loopne
repnz
push
and
int3
adc
fadds
das
inc
in
and
shll
push
or
aam
inc
test
inc
out
dec
inc
and
cs
cmp
mov
test
and
inc
push
and
xchg
shrl
int3
add
pop
add
sbb
jns
fisttps
sub
add
imul
jo
push
scas
mov
nop
and
pop
aas
cld
pop
and
lret
add
scas
movl
hlt
adc
or
sbb
add
cmp
enter
add
cmp
jbe
add
lret
adc
int3
adc
fs
adc
add
jo
or
pusha
lahf
lea
js
mov
in
push
xchg
xor
sbb
add
pop
mov
pusha
aam
add
cltd
jmp
ss
adcl
ja
and
fdivr
test
adc
in
cmp
mov
pop
adc
xchg
bound
mov
jnp
and
lods
add
mov
jmp
sub
clc
cs
mov
xchg
add
pop
sbb
ss
pop
dec
ljmp
mov
les
lock
mov
jns
add
xchg
xchg
dec
push
cmp
movsb
dec
pop
xor
pop
scas
call
sub
and
pop
mov
mov
test
mov
mov
or
push
and
dec
ja
call
inc
lret
loope
jns
adcl
or
fisttps
in
ja
add
rcll
jo
adc
je
push
loopne
xor
aaa
or
imul
negl
test
les
add
out
dec
dec
and
mov
scas
pop
or
or
sub
out
int3
add
insl
leave
mov
adc
push
jae
rcl
mov
inc
mov
sub
mov
aas
clc
sarb
mov
pop
add
inc
push
faddl
out
movaps
daa
xchg
xchg
xchg
mov
xor
cmc
add
pusha
jmp
bound
and
sbb
sbb
xchg
add
xorb
add
jmp
xchg
das
or
loopne
inc
dec
in
add
mov
xor
push
sub
in
iret
adc
les
pop
push
pop
nop
mov
stos
add
mov
and
dec
pushf
add
in
jp
sub
inc
lea
adc
mov
pop
add
int3
lock
mov
daa
add
ss
lock
push
push
mov
pop
push
xchg
enter
inc
mov
rcll
js
addb
mov
push
jne
inc
clc
aam
adc
ret
addl
enter
pop
inc
andl
add
imul
cwtl
pop
mov
test
add
and
mov
jns
dec
adc
sti
add
add
mov
popf
jecxz
aad
nop
push
ja
movsl
inc
lea
mov
cmpsl
mov
nop
add
sub
icebp
test
pushf
inc
js
push
add
dec
js
add
loopne
push
add
imul
roll
mov
es
dec
jo
cltd
jl
sbb
lock
jbe
push
test
lret
lcall
sbb
mov
nop
enter
push
lods
pop
adc
lods
sub
jle
xchg
fildl
fs
bound
xor
in
jmp
shll
and
add
or
ret
test
cmc
jl
sub
push
sub
dec
xchg
test
xlat
sti
mov
xchg
popa
loopne
sbb
sbb
test
js
scas
push
dec
sahf
cmp
cmp
stc
icebp
orb
and
mov
mov
mov
pop
add
repnz
xchg
cmp
mov
pop
loopne
out
cs
adc
adc
mov
aam
pop
fdivs
sub
pop
loopne
ret
mov
add
jbe
in
lods
pop
push
sbb
adcb
add
sbb
enter
pop
test
call
mov
les
hlt
cmp
push
pop
add
jecxz
jo
imul
add
lcall
rclb
xlat
mov
mov
lahf
add
dec
cwtl
cmp
adcb
enter
test
lret
adc
dec
sti
fdivp
add
mov
xchg
lahf
mov
cmp
add
jb
xor
fmul
mov
mov
add
mov
repnz
lret
inc
sub
xor
add
pop
aad
or
push
adc
aad
pusha
mov
mov
and
call
fiadds
push
aas
aas
js
add
add
gs
sbb
adc
in
shll
ljmp
andl
push
enter
dec
jo
lods
mov
push
add
mov
enter
adc
loope
mov
push
mov
fmull
divl
jb
icebp
js
dec
mov
insb
add
jmp
hlt
adc
addb
leave
movd
push
mov
mov
pop
adc
enter
sbb
sbb
sahf
push
rorl
movsl
mov
arpl
cli
xchg
aad
dec
mov
adc
int3
dec
mov
or
icebp
xchg
push
movsl
lods
imul
mov
and
jae
test
cld
sub
inc
aaa
xchg
movsl
pushf
adc
mov
cmpsb
xchg
mov
dec
sbb
and
sub
bsf
add
pop
mov
xor
or
test
jo
add
adc
add
lock
pop
andl
xor
jl
sub
clc
faddl
lods
out
mov
push
and
sbb
push
lock
icebp
iret
mov
sbb
mov
push
ds
outsb
xor
lret
mov
add
push
test
push
xor
iret
cwtl
in
inc
pop
repz
sbb
mov
adc
loopne
inc
xchg
test
sub
pusha
xor
dec
test
sbb
xor
add
cmp
lcall
vmread
rolb
out
or
loopne
rcrl
hlt
hlt
pop
add
xchg
jle
mov
enter
adc
add
and
aam
data16
inc
xor
outsb
popa
and
xchg
mov
and
inc
add
xor
xchg
insl
pop
jno
out
subb
dec
mov
add
push
rorb
xor
jb
in
int
add
mov
stc
es
daa
mov
mov
cmp
movaps
in
scas
mov
mov
pusha
add
insl
out
dec
add
enter
pop
jp
adc
fmul
ds
aaa
sub
jg
pusha
ret
cltd
pop
add
mov
movsb
int
pop
dec
or
jmp
xorb
popa
inc
lods
in
lahf
cli
or
sub
pop
stc
mov
insl
jl
addb
gs
push
mov
and
out
xlat
jbe
stos
mov
int
pushf
cmp
test
or
fxch
mov
mov
js
leave
sub
add
or
scas
testb
clc
add
out
hlt
xchg
roll
int3
xchg
xor
push
mov
mov
outsl
and
sbbl
mov
icebp
imul
cli
xchg
aas
and
xchg
or
adcl
out
ficomps
and
adc
subb
adcb
ss
sbb
nop
sub
iret
jl
nop
mov
cltd
ljmp
add
ret
out
scas
xor
sarb
pop
add
jae
dec
pop
xchg
xchg
add
sti
mov
pushf
or
add
cmp
aam
jmp
mov
fwait
pop
xchg
mov
ds
add
sub
mov
out
popa
mov
and
cmp
inc
cmpl
jno
insl
add
xlat
pop
pop
hlt
loop
movsb
push
xor
outsb
cmpb
inc
xchg
sarl
add
lods
stos
sbb
and
rorb
lret
adc
xchg
scas
scas
lahf
mov
xchg
scas
repnz
adc
dec
fbstp
pop
fdiv
add
or
les
pusha
in
test
inc
xor
in
sbbb
test
fisubrl
xorl
sbb
pop
push
cmp
arpl
shlb
push
test
lea
mov
out
mov
xchg
cmpsl
cmp
mov
loopne
hlt
mov
add
mov
xor
cwtl
mov
pop
mov
cmp
or
lock
int3
mov
pusha
daa
cltd
add
xchg
cwtl
out
int
repnz
test
mov
adc
and
mov
pushf
in
dec
xorb
xchg
adc
add
inc
fnstsw
jo
add
mov
dec
shr
adc
jle
jecxz
mov
cvtps2pi
addr16
adc
or
js
and
add
cmp
xchg
add
sbb
xor
xorb
mov
and
push
cmpsl
mov
xchg
jo
fsubs
add
push
out
fwait
scas
push
add
mov
inc
int3
push
sahf
pop
mov
jl
jmp
outsl
add
inc
fwait
mov
int3
or
mov
rclb
sbb
dec
xchg
and
and
fimuls
in
mov
fs
add
and
xor
aad
lahf
add
ficoms
call
dec
jbe
and
cmc
mov
test
lret
clc
mov
jae
lahf
mov
fwait
jns
sbb
adc
mov
in
sub
cltd
cwtl
adc
inc
nop
and
imul
clc
scas
mov
lock
sbb
lods
cvttps2pi
testl
loope
ljmp
inc
addr16
loope
or
pushl
ja
sub
pop
pop
sub
mov
xor
push
cmp
xchg
add
pop
adc
ljmp
lret
cmp
add
out
js
xchg
imul
add
xchg
xchg
mov
or
or
aam
sbbl
and
pop
add
fistpl
test
add
mov
push
sbb
cs
jp
ss
xor
in
enter
sbb
mov
xchg
lret
add
rorl
cmp
pushfw
sbb
mov
fsubrs
test
sub
rorb
sbb
outsb
and
pusha
addr16
dec
pop
add
jecxz
inc
adc
popa
addl
mov
addb
fistps
sub
pop
outsb
add
insb
jg
add
sbb
mov
add
ja
xchg
mov
adc
call
test
push
adc
repnz
jno
mov
adcl
js
adc
dec
imull
repnz
fidivrs
es
loope
and
loop
arpl
lock
mov
or
add
mov
adc
icebp
jo
mov
je
test
addl
jo
mov
fst
or
and
cmp
xorb
ja
mov
or
sub
fwait
and
lock
out
push
or
pop
mov
rorb
adc
and
aam
into
mov
ja
mov
add
lcall
mov
daa
out
iret
test
add
ja
mov
jmp
sub
test
stos
call
add
sbb
out
xchg
jge
test
xchg
scas
ret
add
jge
add
insl
les
jmp
cmc
inc
lcall
lock
add
push
xchg
and
cmp
pop
xchg
and
pop
dec
pusha
push
out
inc
cmpsl
scas
push
jb
mov
rcrb
sarl
lock
jnp
add
movsl
mov
xchg
stos
iret
add
mov
cmp
outsb
lock
add
mov
filds
fildl
mov
jl
loop
aam
add
aad
add
neg
rorl
notb
dec
or
cmp
add
cld
mov
pop
lods
pusha
pop
shll
rcll
mov
push
mov
add
adc
ja
jg
adc
movsb
pop
mov
pop
scas
rclb
add
sarl
mov
cwtl
push
sbbb
call
into
xor
xchg
and
js
add
sub
xor
dec
pop
mov
imul
add
or
and
je
sbb
sbb
sbb
movsb
movsl
dec
inc
loopne
add
clc
sbb
push
rcrl
add
sub
vmovups
pop
mov
xor
pop
imull
adcb
jbe
add
or
push
test
int
aaa
idivb
scas
js
repnz
div
add
push
cmc
dec
add
dec
mov
inc
enter
mov
fsubl
add
into
shlb
and
mov
sbb
clc
push
add
popa
add
and
mov
repz
outsl
sub
pop
mov
xchg
fcmovb
push
push
aas
fstpt
rorl
cmpsb
clc
lahf
add
cltd
pop
int3
or
push
imull
pusha
out
in
sub
fisttpll
mov
inc
cmp
mov
push
outsl
clc
jg
add
outsb
aaa
imul
sbb
inc
xchg
ljmp
aaa
add
enter
mov
test
cld
ds
movb
and
dec
or
add
decl
sbb
movsb
inc
lock
push
mov
in
pop
pop
mov
or
cmp
test
push
jg
rolb
mov
clc
in
xchg
cmc
sub
push
adcb
push
cmp
movsl
push
adc
mov
mov
shlb
aam
pop
or
xor
and
gs
inc
sbb
or
fwait
in
xor
stos
loop
and
cmp
adcb
jge
adc
add
imul
test
test
add
mov
mov
loopne
pushf
test
sub
cs
pop
inc
out
push
out
add
outsb
lods
mov
test
pop
or
pop
scas
lcall
mov
jno
adc
enterw
in
dec
cmove
jmp
bnd
or
icebp
inc
addr16
or
stos
pop
lret
pusha
sub
sub
mov
cmpsb
sbb
inc
pop
add
leave
mov
orb
xlat
insb
xor
or
in
push
shlb
cmp
mov
outsb
cmp
hlt
pop
scas
add
ljmp
sub
dec
cltd
xchg
aas
fdivrp
add
jmp
or
daa
or
mov
stc
popf
test
or
adc
and
and
cmp
add
mov
cmp
add
lret
test
aas
sub
mov
and
in
add
andl
sbb
into
xor
pop
xor
cmp
jb
mov
xchg
movsb
roll
insb
inc
adc
push
or
cmc
sub
test
and
jo
loope
add
jecxz
daa
xchg
xchg
lods
mov
fistpll
adc
jle
cltd
and
mov
and
fucomi
adc
and
cmpsl
adc
sub
pop
aas
adc
stos
inc
aam
sbb
int
int3
add
popf
adc
test
mov
ljmp
cltd
cli
jl
inc
movsl
add
cmp
add
lods
lahf
repz
and
add
xor
in
pop
push
gs
ret
and
sbb
inc
sbb
rolb
aaa
daa
sbb
scas
cmp
bnd
dec
sub
mov
mov
pop
sti
pop
xchg
inc
mov
inc
add
mov
shll
lret
negb
push
push
cwtl
mov
jp
add
or
fiadds
inc
jne
ljmp
addl
repz
out
pusha
ljmp
lret
clc
mov
and
call
cmc
sbb
mov
jno
dec
mul
add
dec
scas
roll
xor
call
loop
lret
add
and
add
repz
cmp
sbb
and
pop
mov
loopne
cmp
mov
mov
jne
cmp
ret
rolb
lock
mov
push
add
lahf
addr16
mov
pop
cmp
push
repnz
mov
and
test
rcrb
and
rsqrtps
jl
shrl
sub
sub
jbe
shrl
mov
push
add
fsubl
out
jl
add
fldl
fxch
sbbb
icebp
mov
imul
pop
rorb
sub
and
lahf
pop
xchg
xor
movsl
add
add
mov
dec
mov
xor
call
add
cmp
mov
les
adc
stos
mov
pop
add
add
adc
clc
in
add
test
cwtl
mov
cmc
leave
popf
push
sbb
test
rcrl
lahf
rolb
mov
cmp
pop
mov
stc
jo
scas
bound
jno
mov
adc
xchg
sub
in
rcrb
mov
push
test
pop
mulb
je
pop
insl
or
cmp
sbb
lcall
xchg
add
push
dec
inc
clc
lock
mov
or
mov
xchg
icebp
add
mov
aam
fcmovnb
cmp
enter
rorb
es
imul
pop
add
jp
mov
das
loopne
je
loopne
add
rolb
jp
in
xchg
cmc
testl
rcl
add
inc
dec
add
xchg
and
fists
add
hlt
cmp
loope
in
add
daa
pop
add
fsubrs
jae
add
call
pop
dec
notb
rcl
rcrb
into
jo
lcall
cmp
inc
loope
fdivrl
ss
add
push
fcmove
sub
push
in
add
decl
jge
pop
andb
lret
xchg
ja
jp
mov
and
jbe
mov
add
jp
ljmp
je
mov
out
sahf
incb
daa
scas
pop
push
push
push
pop
out
mov
notb
pop
and
fdivs
sub
inc
xor
jge
xchg
int3
jno
sbb
sbb
cwtl
sub
and
in
cmpsl
fistpll
repz
andb
push
add
pop
cwtl
mov
cmpsl
pop
packssdw
adc
cmp
into
or
push
mov
clc
mov
or
popa
imulb
cwtl
cmp
jo
lret
rorb
mov
jo
test
add
shrb
pop
xor
xorl
int
xchg
addb
push
mov
div
xor
popf
inc
rcrb
inc
jge
ficoms
rcll
add
icebp
dec
add
iret
aad
mov
xchg
popa
mov
jp
dec
lock
inc
add
fadds
ficompl
iret
fisttps
out
dec
adc
add
jp
jo
enter
add
in
add
clc
cmc
addr16
jle
lret
pop
out
cmp
add
nop
aas
fdivrs
pop
xor
test
in
stc
sbbb
rcr
and
jns
insb
popa
sbb
dec
dec
pop
add
adc
ds
movsb
shrl
add
or
jecxz
js
je
xchg
xchg
dec
inc
cli
add
lock
adc
inc
cmp
adc
dec
icebp
icebp
sti
add
aad
mov
ja
jg
push
jno
scas
pop
jns
add
daa
dec
mov
das
add
pop
jle
jo
push
out
aad
sub
ss
mov
pop
jmp
mov
mov
and
add
es
adc
roll
xor
add
mov
loopne
rolb
cmp
in
mov
jns
sbb
rolb
arpl
pop
ljmp
push
pop
lret
cmp
xchg
bswap
xor
sbb
jb
rcrb
pusha
das
push
cmp
jne
outsb
cld
mov
fisttps
mov
push
sbb
cmc
orl
shl
cmp
loop
cmp
js
fdivrl
hlt
lock
push
mov
shlb
add
inc
cwtl
bound
mov
adc
xor
or
mov
iret
int
xlat
xor
sbb
mov
loopne
mov
sub
flds
xchg
int3
sub
clc
sti
cmpsb
push
sbbb
lock
jo
xchg
adc
or
mov
lock
jle
cmp
sub
push
pusha
roll
sub
nop
or
stc
cmp
clc
je
mov
arpl
jb
cmpsl
and
pop
and
sub
js
push
sbb
xchg
cld
inc
jle
add
repz
mov
lock
sbb
or
dec
xor
jp
adc
js
leave
add
data16
jl
xor
and
scas
xchg
fnsave
pop
test
and
cmp
add
inc
gs
or
fsubl
fstps
rorb
test
in
xor
xor
push
dec
shll
jg
data16
jb
jecxz
andps
sbb
cmp
roll
aam
adcb
xor
inc
mov
repnz
decl
mov
jmp
rcrb
add
push
push
js
ret
inc
scas
stos
not
mov
add
out
or
cld
push
jns
add
dec
adc
fmull
add
adcl
cmovo
add
xor
daa
dec
push
add
or
add
jle
add
adc
daa
xor
mov
mov
and
daa
daa
into
cwtl
adc
sub
and
xor
fbld
pop
and
adc
adc
and
rorb
pop
dec
es
cli
jge
sahf
andb
mov
jmp
cmpsb
cmp
cmpb
out
jecxz
aam
add
pop
scas
test
and
sbb
or
stos
fwait
mov
mov
add
cwtl
cmc
dec
sbb
and
mov
xor
and
testb
jl
dec
in
jecxz
add
add
loopne
push
mov
bndstx
mov
cmp
sarl
sub
movb
jne
inc
xor
loopne
enter
lret
add
cmpsl
xchg
int3
popa
jne
add
jo
add
sub
pop
and
pop
sahf
nop
add
jne
loopne
lret
mov
ret
xlat
fisttpll
sbb
cmp
pop
in
jo
add
pop
test
or
push
pop
mov
lods
cld
pushf
out
mov
jae
add
movsb
aam
or
push
repnz
jp
aas
jns
adc
dec
sbb
add
dec
dec
jb
in
loop
es
call
int3
inc
cs
add
pop
jle
mov
out
ljmp
sti
push
je
xchg
pop
push
pusha
divps
sub
addr16
jge
rcll
aad
inc
aam
les
jp
add
mov
dec
mov
add
pusha
add
add
inc
adc
shrb
and
sbb
inc
jnp
out
in
cwtl
add
mov
ljmp
les
mov
jg
outsl
and
nop
and
fs
add
and
imull
add
pop
in
lds
pop
inc
iret
jp
fstps
add
xchg
test
insl
sbb
adc
inc
cld
pop
push
daa
paddusb
fldt
es
add
pop
das
jecxz
add
or
mov
data16
or
push
cmp
ret
inc
xor
xchg
popf
nop
cmp
loopne
add
adc
dec
sbb
xchg
jle
arpl
lock
insl
stc
inc
mov
xor
add
out
add
adc
add
cld
movsl
cmc
or
sub
das
and
add
cltd
dec
mov
je
sbb
mov
mov
mov
jo
dec
add
inc
mov
stc
cmp
cmp
add
push
pop
add
dec
push
lods
mov
sub
cwtl
xchg
inc
repnz
fucomi
add
or
lds
pop
mov
or
std
movsb
cmp
dec
mov
fwait
add
sbb
movsl
mov
mov
adc
scas
push
rclb
iret
lock
xchg
out
sbb
add
stc
dec
test
int
and
repnz
inc
pop
pusha
dec
dec
add
out
lcall
mov
fildl
xchg
cmp
mov
inc
mov
lahf
push
loop
mov
mov
mov
mov
xchg
jo
xchg
mov
mov
in
sahf
add
add
and
inc
mov
mov
fdivrl
ds
sti
cmc
lock
adc
sub
jge
sub
or
push
sbbl
fs
call
mov
add
lahf
ss
pop
xlat
dec
add
fiadds
rorb
add
xchg
pushf
add
imul
add
in
push
add
cmp
mov
sarl
mulb
dec
sbb
jge
and
ljmp
xchg
pop
sbb
sarb
jns
jbe
add
cmp
cmp
jo
mov
mov
subb
xor
push
add
push
jbe
adc
or
inc
mov
xchg
stc
mov
pop
arpl
enter
out
loope
ficoms
inc
xchg
pop
mov
subl
fcmovbe
repz
je
fdivrl
xchg
jg
or
and
jo
add
pop
sub
add
fsubl
mov
add
ljmp
xchg
in
es
pusha
gs
xchg
subl
popf
jle
add
lds
imul
outsl
ret
cs
jae
hlt
xor
or
aam
sub
inc
idivl
scas
add
cli
xchg
daa
rclb
subb
push
push
push
xchg
inc
fxch
pop
xchg
test
mov
pop
mov
loop
xchg
adc
stc
jbe
sbb
pusha
mov
sbb
xor
outsb
add
cmp
add
clc
push
add
xchg
in
pop
jg
push
cmp
repnz
aam
in
mov
jecxz
int
pop
mov
xchg
mov
out
sbb
stos
popa
fwait
add
scas
dec
pop
xchg
jge
add
stc
xlat
push
xorb
sbb
pusha
sub
sbb
mov
mov
xchg
add
jno
or
mov
adc
add
or
data16
mov
ficomps
roll
dec
push
mov
sbb
pop
sbb
btr
stc
pusha
in
mov
inc
and
inc
push
add
dec
loope
rolb
inc
mov
popl
dec
add
out
or
jp
pusha
inc
dec
xor
mov
addr16
in
lock
mov
scas
add
mov
test
cmp
or
test
mov
jbe
adc
les
cmp
sarb
lods
dec
xchg
cwtl
add
lods
cmp
fcoms
notb
xor
pop
push
mov
xor
inc
jne
sbb
inc
idivl
cld
stos
add
cld
dec
fs
add
les
fsubr
cmpsb
add
mov
pushf
add
out
mov
pop
out
xor
mov
cs
push
jbe
inc
lea
jnp
fs
addr16
add
rcrl
mov
fcmove
inc
fadds
or
loopne
data16
add
fcoml
nop
hlt
add
jne
cmp
mov
add
popa
shl
push
les
add
inc
clc
ja
cmc
adc
icebp
add
pop
fstpl
loope
adc
lcall
sub
mov
loope
bound
in
add
adc
add
stc
imul
test
call
or
mov
inc
jle
jmp
jge
add
mov
cmp
inc
push
push
add
ljmp
call
out
inc
daa
cmpb
sahf
or
pop
add
into
mov
test
sbb
add
aam
jl
add
mov
mov
add
aam
fsts
pop
push
mov
xchg
mov
adc
mov
or
aaa
sbb
shll
add
arpl
repnz
dec
add
cld
mov
adc
shr
std
pushf
nop
pop
add
sbb
push
push
inc
push
int3
repz
test
xchg
jge
rolb
loopne
aam
call
mov
stos
xor
add
fdivl
adc
dec
add
xchg
test
pop
mov
adc
add
mov
adc
or
push
ljmp
sbb
jb
or
nop
je
sar
add
mulb
xor
add
mov
ja
push
outsb
add
lret
mov
es
cld
add
icebp
outsl
cmc
inc
aam
mov
ss
test
push
mov
stos
rcrb
int
mov
in
decb
aad
inc
cmp
jae
shlw
add
out
stos
out
xchg
add
pop
mov
data16
lods
pusha
xchg
add
mov
in
fsts
mov
sbb
push
dec
xchg
jbe
sbb
and
add
in
inc
jp
mov
dec
mov
pop
add
mov
fidivrs
imul
add
sbb
add
sub
mov
dec
mov
scas
ja
add
imul
lahf
lea
push
xor
jno
pop
inc
fwait
push
or
packssdw
add
frstor
pop
in
lds
push
push
add
jge
inc
adc
cmp
dec
or
aam
pop
or
dec
sbb
and
adc
aam
int3
xchg
dec
repz
aas
fidivs
add
push
sub
and
dec
mov
rcll
loopne
clc
mov
in
mov
and
arpl
adc
jmp
adc
cmpsb
ja
addl
add
xor
cwtl
lods
add
sub
nop
pop
pop
mov
sbb
fildl
out
jp
add
rcrl
dec
arpl
mov
fisttpll
jecxz
xor
icebp
pop
inc
xor
lcall
jo
push
mov
mov
cli
adc
cmpsb
gs
inc
sub
aaa
cmp
stc
xchg
clc
sbb
pop
dec
aad
xor
dec
sbb
cmp
ds
or
mov
rcrl
inc
add
nop
xchg
push
sbb
mov
rorb
pop
ret
and
sahf
add
leave
rolb
cmpsl
push
rcrl
adc
lahf
jmp
cmp
add
lock
mov
pusha
fisubrs
mov
out
std
jbe
push
ror
aas
imul
mov
negb
add
add
push
jmp
cmp
cwtl
push
xchg
addl
cmpsb
in
xchg
push
add
iret
inc
lcall
push
call
mov
cmp
lahf
pop
test
adc
adc
push
fsubrl
enter
bound
xchg
sub
loopne
mov
dec
repnz
inc
roll
fnstsw
test
pop
mov
fdivrl
icebp
mov
adc
push
fisubs
add
cmpsl
push
add
clc
mov
imul
pop
dec
pusha
cmp
shl
pop
les
or
jl
add
add
xchg
xor
add
pop
dec
and
fbstp
mov
nop
or
inc
aam
sub
or
rorl
sbb
sub
pop
xor
xchg
sti
mov
mov
lcall
out
mov
add
cmpl
mov
add
repz
add
jns
and
mov
fwait
aas
add
xchg
mov
pop
add
dec
outsl
aad
rorl
xor
mov
jae
pop
idivl
sbb
add
or
popa
daa
jns
add
xchg
push
add
dec
or
inc
add
add
cwtl
rcrb
movsl
pop
mov
insb
or
xchg
mov
rclb
sbb
inc
out
xor
xchg
jp
add
das
and
push
add
add
xchg
mov
rcll
jne
add
lret
in
lahf
fiadds
lock
inc
pop
add
or
mov
jbe
bound
jp
rol
and
fiaddl
add
dec
add
lods
aad
push
lahf
add
data16
inc
dec
adc
aas
fildl
popa
stos
pop
add
mov
fsts
hlt
shll
xor
adc
xor
adc
mov
subb
jns
hlt
dec
push
inc
add
in
xchg
pop
cmp
lret
test
add
daa
out
sbb
cld
xlat
add
pushf
sahf
popa
gs
inc
scas
mov
sbb
sbb
shrl
inc
sbb
jle
xchg
or
mov
and
jg
add
inc
test
test
or
dec
outsl
jae
and
jbe
pop
push
add
loop
add
imul
insl
inc
cmp
add
adc
int
adcb
push
mov
les
xchg
mov
cmp
fld
aad
and
dec
cmovle
add
ljmp
rcrb
add
add
cmp
rolb
push
outsb
xchg
cmc
and
push
movsl
push
inc
add
aas
dec
cmp
cmp
add
pop
jae
jns
ja
push
repnz
xor
pop
pop
jo
dec
test
mov
push
jle
add
fmul
sbb
add
test
mov
hlt
insl
add
lods
pop
pop
add
fwait
add
jno
insl
add
in
add
sub
cmc
andb
cld
sub
mov
dec
push
es
sbb
jb
add
and
stos
ss
enter
loopne
jp
mov
in
les
ret
cmp
fcoml
sbb
ret
pop
out
sti
add
adc
jne
fs
dec
jmp
in
rolb
out
ret
pop
or
push
aam
inc
adc
xchg
adc
cli
add
jecxz
xor
mov
add
repnz
and
cmp
incl
sbb
push
push
and
add
hlt
xlat
cli
mov
mov
mov
sub
lcall
in
pusha
sbb
adc
cmp
es
pop
arpl
mov
repz
movsl
insl
inc
adc
cmp
pop
call
shlb
mov
mov
lods
push
jnp
xchg
lock
adc
push
cld
shr
add
xchg
lock
iret
xchg
add
push
inc
ret
add
enter
xor
xor
iret
pop
dec
rol
add
idivl
xchg
add
sbb
or
and
mov
leave
mov
add
cwtl
jg
fs
adc
mov
xchg
inc
jbe
push
outsb
push
mov
loop
incb
mov
cmpsb
add
add
inc
std
inc
add
push
addr16
inc
popa
jl
mov
lods
repnz
mov
aad
mov
add
add
lods
test
add
jl
xor
movsb
mov
mov
xchg
sub
nop
jge
mov
sbb
add
dec
enter
add
popa
dec
aam
and
xor
out
or
cmp
push
lock
imul
mov
test
daa
sbb
fcomp
xchg
in
mov
loop
bound
lret
cmp
jo
sbb
add
xchg
fcomps
repz
inc
rolb
imull
dec
add
push
mov
repz
adc
daa
dec
sub
inc
and
into
xchg
xor
lret
xchg
insl
dec
adc
jge
filds
movsl
sahf
nop
in
or
adc
push
popf
fisubrs
or
xorps
add
xchg
add
xor
sbb
jle
ficoml
add
adc
jae
inc
add
flds
lahf
jns
sbb
popa
pop
mov
pushf
inc
js
movl
fistpl
or
clc
pop
cmp
sub
sbb
lea
pop
sysret
pop
leave
into
xlat
sbb
cmp
xor
sbb
dec
mov
imulb
mov
int
xchg
add
scas
or
add
lock
call
subl
or
mov
shlb
jb
cltd
outsb
aad
loopne
add
sub
dec
jo
bound
mov
aam
or
jl
into
mov
roll
test
mov
mov
mov
rcl
mov
add
jno
enter
or
cwtl
add
adc
xor
jg
sbb
lret
fdivrl
and
add
loope
lds
add
lret
add
adc
add
mov
fadds
adc
outsb
pop
sub
jge
rcrb
mov
loopne
es
arpl
jae
mov
lahf
imul
push
ucomiss
stc
add
sti
lds
das
jp
xchg
mov
into
pop
adc
mov
fincstp
roll
in
test
stos
mov
loopnew
into
daa
mov
push
add
cmp
rcr
mov
pop
aaa
push
sbb
cmp
add
fiadds
lahf
mov
outsl
rorl
add
push
data16
out
out
ret
pop
xlat
clc
andb
popf
or
jp
leave
std
test
arpl
mov
mov
xor
movl
jecxz
cmpb
mov
cmp
call
sub
xor
push
daa
fcom
add
cmp
fwait
shlb
test
pushf
lods
lahf
out
add
push
dec
mov
push
sahf
ja
mov
add
lock
push
outsb
in
cmpsb
adc
xchg
fs
packuswb
xor
fidivl
add
inc
jnp
jl
xchg
orb
mov
push
pop
insb
lret
loop
mov
nop
movsl
add
sub
mov
fisubrl
mov
out
xchg
mov
or
inc
mov
je
cmc
mov
mov
or
out
or
mov
jp
jb
fiadds
adc
xchg
test
pop
inc
push
sbb
movsl
sub
inc
add
cmpsb
mov
sbb
jne
mov
adc
adc
mov
cmp
out
xlat
push
mov
add
icebp
or
lcall
mov
add
out
std
cmpl
js
inc
mov
adcb
or
sarl
daa
mov
and
addb
add
sub
gs
push
cmc
add
mov
xchg
pop
or
and
and
pusha
push
loopne
mov
call
jg
add
inc
cmp
and
outsl
aad
adc
sbb
cltd
sti
popa
add
in
mov
xchg
int3
fwait
mov
add
sahf
int
jl
push
push
add
add
dec
add
repnz
sub
popf
push
and
mov
cmpsb
add
push
in
fwait
push
lahf
test
add
xor
out
push
sub
adc
stos
stos
mov
ror
je
add
push
adc
xor
mov
mov
mov
or
scas
je
mov
add
jae
cltd
jl
mov
or
imull
scas
and
xchg
movsl
push
shl
imul
pop
jle
data16
rolb
sub
sbb
sbb
mov
rolb
sti
mov
jbe
sbb
mov
mov
jns
push
cwtl
add
add
cmp
lds
cmpb
sub
int
scas
popa
push
mov
add
cmp
jmp
aam
cltd
outsl
or
insb
orb
add
xor
and
daa
fdiv
or
inc
xchg
stc
pop
leave
hlt
mov
fdivs
jecxz
idivl
add
dec
aaa
jb
add
and
ljmp
pusha
mov
insb
pop
dec
fidivrl
mov
xor
enter
sub
cmpsl
dec
cltd
pop
fwait
mov
inc
clc
mov
sbb
lahf
add
jmp
stos
sbb
mov
xchg
and
xchg
and
js
sub
add
fnop
cltd
mov
popf
xadd
pop
push
dec
int
neg
mov
pop
add
adc
in
sbb
mov
cmpsb
add
add
and
push
cmc
add
decb
cmp
xchg
and
rcll
mov
jnp
addl
rcrl
fidivs
dec
sub
lock
andl
sub
sbb
adc
stos
js
add
jge
loop
mov
push
push
shlb
cmpsl
jo
or
ss
xor
divb
adcb
sbb
cmc
cmp
cmp
push
fwait
jns
inc
add
inc
roll
clc
xor
ret
stc
jae
scas
leave
add
sbb
adc
jg
sti
stos
jb
adc
insb
add
lock
adc
je
ljmp
ror
xchg
out
add
icebp
ror
pop
or
push
movsl
mov
inc
hlt
sahf
scas
mov
aaa
ljmp
sbb
and
jmp
or
movsl
scas
pop
mov
pop
add
stos
clc
add
cwtl
push
pushf
popf
add
pop
pop
outsl
ja
clc
add
xor
out
add
adc
mov
mov
cld
pop
sbb
mov
xchg
lcall
adc
xor
xor
add
test
add
adc
stos
fimuls
jnp
xor
insb
popa
repz
in
pop
sub
mov
rclb
icebp
fs
jmp
daa
sbbb
nop
hlt
jae
jo
add
aas
xorb
imul
loope
jg
or
pop
ljmp
out
jo
mov
or
bound
push
xor
scas
xor
mov
mov
add
cld
xorw
dec
jnp
mov
sub
jo
pusha
push
repz
jmp
add
cld
add
in
ja
hlt
movsb
sbb
cli
mov
and
pop
pusha
push
adc
lock
loopne
mov
ficomps
jle
add
shrl
int3
adc
cwtl
dec
add
ss
push
push
mov
fdivr
addb
test
or
roll
mov
shlb
into
jge
std
mov
cmp
shl
dec
xor
in
loopne
js
push
push
mov
xor
loopne
mov
pop
add
mov
mov
addb
pushf
leave
test
add
mov
pusha
cld
push
pop
add
aam
adc
xchg
add
insl
sbb
pop
mov
lock
and
add
mov
push
adc
js
jl
pop
mov
ja
out
pop
mov
add
inc
xchg
jns
inc
sbb
mov
jo
xlat
xchg
lcall
or
outsb
add
lret
not
inc
adc
sbb
pop
movsl
sub
push
push
push
dec
push
loopne
popa
adc
gs
addr16
mov
dec
jp
test
in
xor
add
push
xchg
add
insl
jae
add
in
cld
stc
adc
jg
pop
push
sub
mov
push
pop
add
shrb
dec
add
icebp
cmpb
test
sahf
inc
punpckhbw
add
mov
testb
mov
cltd
lahf
inc
fbstp
jg
cmp
pop
or
loopne
js
fwait
cmp
lods
sahf
dec
mov
inc
mov
mov
into
test
mov
pusha
pop
repnz
nop
cmpsb
xchg
and
add
imul
adc
mov
loope
cmp
or
jo
jl
push
and
test
lahf
pop
xchg
cwtl
out
inc
mov
adc
push
jns
outsl
jno
imul
sbb
stos
loopne
add
add
shll
add
inc
add
mov
movsl
gs
inc
push
pusha
xchg
femms
bound
xchg
lret
xorb
inc
add
sub
cld
jl
pop
pushf
lods
cli
jg
mov
add
fbld
add
das
adc
or
inc
rcrb
cmovs
mov
lock
cmpb
insb
add
jbe
pusha
mov
jg
mov
mov
pop
inc
js
and
and
inc
or
inc
sahf
mov
inc
push
sbb
incb
out
std
or
adc
add
jbe
out
imul
mov
js
mov
mov
add
outsb
adc
pop
or
pop
xlat
mov
mov
data16
ljmp
add
xchg
cld
insb
xor
add
xchg
jnp
and
xor
jge
xchg
sar
subb
push
scas
lret
mov
xchg
dec
add
xchg
pushw
outsb
hlt
popa
les
sub
fs
add
push
hlt
push
icebp
pop
pusha
arpl
xchg
add
adc
mov
dec
int3
add
loope
fs
test
popf
pusha
fstl
outsl
dec
loopne
nop
pop
add
add
xor
add
mov
out
mov
inc
pop
inc
mov
into
cmp
or
add
loopne
test
inc
push
mov
mov
cld
inc
mov
fs
std
or
idivb
arpl
int
bound
aas
adc
popa
xchg
cmp
outsb
jns
push
mov
dec
fcoml
adc
add
push
mov
out
and
adc
std
ret
adc
ret
xchg
add
inc
inc
jl
push
clc
mov
psubd
cmpsl
rcrb
outsb
xchg
cmp
dec
add
push
cmp
add
mov
aam
std
add
jno
push
xlat
dec
and
pop
adcb
push
add
mov
pop
dec
sbb
cltd
je
jl
add
push
repz
divb
push
fdivrp
add
loope
loope
ret
fwait
int3
into
sarb
shrb
in
aas
ret
add
mov
inc
loope
insb
imul
mov
jne
pop
sbb
fisubl
pop
mov
lahf
pusha
rcr
hlt
mov
jle
inc
repnz
es
jne
sub
jecxz
jns
insl
mul
sti
adc
dec
scas
cmpb
add
add
int
cmp
stos
add
pop
sbbl
out
cmp
add
enter
hlt
pop
mov
call
mov
cmp
inc
dec
jl
pop
push
add
jno
ja
bnd
test
mov
loopne
scas
mov
jno
or
insb
add
sti
mov
lods
out
jo
push
jae
mov
clc
and
jb
add
mov
adc
sbb
fnstenv
pushf
mov
filds
out
jp
sub
ljmp
imul
add
cmpsl
mov
add
aaa
popa
mov
shl
fcmovne
push
loopne
add
inc
inc
jne
addr16
inc
test
gs
pushf
cmp
or
sub
push
into
xchg
xlat
jle
loope
lret
and
ja
arpl
clc
jecxz
dec
pop
xchg
push
sub
adc
mov
data16
lret
push
mov
push
cs
jecxz
add
push
pop
int
mov
sub
inc
or
insl
xchg
lock
mov
xor
mov
fsubl
xchg
dec
sub
fs
das
add
dec
iret
je
sub
ja
adc
add
daa
inc
int3
fadds
jne
jge
sbb
add
mov
int3
je
mov
xchg
push
into
cmp
lahf
pop
add
sbb
in
in
jge
cmp
arpl
outsl
mov
xchg
add
dec
adc
mov
pop
pop
sbb
inc
imul
pop
xchg
and
cs
inc
add
popf
and
outsl
imul
push
addl
shl
mov
dec
mov
loopne
sbb
mov
sbb
jo
jae
js
xor
inc
fadds
lock
sbb
jbe
jge
xchg
cmp
shrb
dec
and
rorl
dec
add
and
je
add
test
pusha
mov
sti
mov
jge
add
jo
mov
add
and
addr16
xchg
add
pusha
in
add
jbe
mov
push
mov
fs
pop
mov
mov
into
jle
add
cmp
adc
push
out
and
cmp
enter
out
icebp
scas
xor
dec
add
mov
add
push
call
jno
les
xor
enter
addb
rcrl
pop
xorb
xchg
int3
in
mov
sti
nop
push
push
and
mov
repz
mov
daa
sbb
in
mov
push
pop
mov
add
adc
push
incb
sahf
pop
mov
divb
push
pusha
push
mov
add
cmp
push
or
rorb
cli
xchg
pop
dec
jg
shlb
add
or
insb
movsb
pop
enter
pop
adc
pop
sub
add
fnstenv
pushf
dec
add
clc
test
xor
sub
mov
popf
addr16
arpl
adc
mov
jbe
sbb
imul
pop
jg
mov
fwait
and
pop
adcb
les
pop
sbbl
sub
pusha
add
sbb
add
adc
add
sahf
in
jge
mov
xor
and
add
and
add
pop
jmp
mov
outsb
sbb
xchg
adc
xchg
pop
idivl
add
scas
mov
add
lret
xchg
add
dec
dec
test
js
mov
stos
fwait
pop
gs
rol
fists
add
sub
cmp
movb
and
in
push
add
aam
push
shlb
jl
push
imul
jecxz
push
enter
int
add
mov
mov
push
mov
mov
in
dec
in
out
dec
add
fidivl
add
rcrl
add
mov
flds
adc
inc
mov
and
sbb
add
dec
ret
push
jno
pop
das
mov
aam
imul
pop
popf
add
mov
addl
std
jmp
inc
push
and
mov
xor
mov
push
inc
jb
and
and
lcall
add
dec
pop
or
test
mov
cli
push
sub
add
enter
xor
xchg
add
push
std
mov
pop
lcall
and
dec
std
or
lret
mov
add
testb
adc
mov
pop
xchg
cmp
mov
dec
mov
add
les
sub
add
push
sarl
pop
imul
mov
push
test
clc
jno
fs
xor
roll
adc
movsl
cmp
fldl
jg
sub
or
or
add
sar
add
out
test
add
sahf
dec
insl
lahf
std
xor
add
push
or
mov
adc
jge
push
dec
sub
mov
adc
rclb
pop
sub
jle
add
test
out
nop
sub
xchg
sub
pop
lcall
pop
test
cmp
or
xchg
ja
movl
and
les
add
ss
fs
dec
adc
sub
and
enter
pop
aaa
xchg
fiadds
add
mov
add
gs
mov
test
add
fucomip
adc
push
stos
fs
fcomps
inc
andb
stos
push
xchg
or
pop
inc
dec
jns
add
or
or
in
xor
arpl
stc
lods
adc
mov
add
dec
jp
add
dec
lret
fcoml
adc
jo
push
cmp
adc
xchg
pop
inc
cld
out
je
mov
lcall
add
orb
sub
sub
inc
shlb
jge
mov
push
add
cwtl
cmpb
add
xchg
bound
pusha
insb
pop
adc
pop
in
inc
hlt
and
jmp
add
mov
popf
mov
ja
and
jns
sahf
imul
sub
mov
clc
pusha
aas
rorl
sbb
cmp
movsl
je
shrb
add
or
dec
call
cs
movsb
sbb
rcrb
outsb
push
mov
shll
test
lods
cmp
push
push
jb
add
cmp
shrb
add
scas
fmul
fidivs
or
or
cmp
out
add
je
push
add
arpl
or
xchg
lret
cmp
and
jno
mov
add
imul
into
push
add
add
aas
stos
call
mov
add
xchg
add
je
push
pop
imul
jbe
mov
in
lds
movsl
xchg
push
addb
mov
and
les
push
xchg
in
or
dec
push
mov
pop
adcb
rcll
push
ds
mov
mov
cmp
inc
adc
or
jne
and
int3
shrl
add
mov
xlat
gs
lock
add
jns
rcl
xchg
movl
xor
mov
lahf
add
and
lock
jmp
dec
add
xlat
sar
add
cli
jo
sarl
push
inc
mov
nop
mov
inc
out
and
adc
adc
sbb
loopne
add
or
push
adc
xor
sahf
pop
xchg
pusha
add
ds
mov
leave
das
mov
jmp
hlt
dec
dec
cwtl
sti
aas
push
or
out
mov
je
sub
into
mov
nop
cmp
cltd
lock
adc
arpl
stos
test
push
mov
push
punpckhwd
loopne
xchg
add
adc
xchg
pusha
fldenv
xchg
lret
and
add
shlb
adc
and
divb
sbbb
or
push
add
in
xor
subb
push
shll
or
rolb
sub
cwtl
xor
adc
outsl
sahf
cmp
mov
xor
and
adc
jmp
push
cwtl
mov
jne
dec
imul
and
sub
xchg
adc
pop
shlb
inc
push
fwait
xor
lcall
std
jecxz
addr16
fcoms
add
ret
mov
xchg
add
lret
pop
lods
in
pop
iret
add
out
mov
or
loop
adc
shlb
out
arpl
ret
in
imul
inc
and
cmp
ljmp
add
repnz
data16
pop
clc
sub
jmp
call
inc
jecxz
mov
scas
insl
in
sbb
insb
dec
mov
push
nop
inc
adc
in
cmp
sbbb
xor
cld
loopne
and
mov
inc
movsb
inc
outsb
mov
add
add
loopne,pt
movsb
jg
fsubs
push
push
into
dec
add
andb
cld
push
fnstenv
roll
and
out
push
mov
dec
add
sbb
jecxz
in
add
xchg
adc
imul
push
call
adc
in
mov
jb
pushf
flds
hlt
cmp
mov
pop
adc
sti
or
sbb
stc
jne
add
add
cmp
lock
jnp
push
mov
mov
dec
rcrl
mov
jge
pop
lret
nop
add
test
imul
fcomp
orl
sub
dec
or
add
lods
xchg
inc
aaa
xchg
loopne
pusha
or
movsl
rcl
add
mov
shlb
sub
push
pushf
cmp
xor
outsb
fcmovnb
js
add
or
aaa
cmpsl
aas
xchg
cmp
rcrl
aam
dec
adc
in
adc
or
inc
rorb
mov
ltr
fistpll
mov
andb
mov
inc
dec
xor
pop
jge
add
cmp
add
mov
stos
sub
mov
lcall
ja
pop
aaa
lods
and
xchg
mov
add
adc
ret
cld
lea
mov
sub
shlb
jne
or
jle
add
dec
sbbb
ljmp
inc
mov
add
js
xchg
push
insb
or
je
test
mov
xor
mov
loopne
lahf
das
in
mov
test
dec
leave
outsb
lret
in
add
jg
fldcw
push
adc
pop
hlt
xchg
outsl
cmp
mov
and
cmpb
sub
inc
in
ljmp
das
xorl
scas
bound
dec
in
push
pop
fidivl
call
mov
in
enter
std
out
sbbl
add
adc
sbb
orl
sahf
mov
movq
icebp
aaa
push
sbb
test
lcall
test
ljmp
lret
add
fidivs
and
mov
mov
sub
or
sub
mov
jnp
push
jb
jo
fs
out
adc
wrmsr
imul
int
and
xchg
push
add
out
test
or
adc
dec
pop
int
rolb
cmp
jmp
add
mov
pop
mov
sbb
iret
lret
bound
pop
sub
sub
lcall
xchg
adc
es
sbb
stos
adc
add
out
ja
push
xor
cmc
add
xchg
sub
aas
mov
loop
xchg
rcrl
je
enter
push
in
and
add
push
pop
mov
push
or
rolb
jae
stos
popf
lahf
sbb
call
fs
inc
mov
push
adc
js
mov
add
aad
xor
mov
in
shrb
cmc
pop
fisubs
icebp
ficoml
push
movsl
push
cwtl
push
sub
and
cmp
inc
test
jbe
call
xchg
xchg
jecxz
adc
gs
leave
xor
xor
add
test
mov
fs
add
pop
jns
test
lea
outsb
flds
xchg
ss
mov
ds
test
data16
lahf
lods
jmp
and
cmpsb
fsubr
lods
add
inc
lds
lea
pop
sub
xchg
es
fdivs
ret
xchg
adc
aad
arpl
int
jp
mov
rcll
inc
mov
lds
jne
add
sbb
push
mov
inc
xchg
popa
xor
xor
fucomip
mov
repnz
push
pop
mov
movsl
and
ret
jl
pop
or
mov
aad
and
mov
xlat
jge
mov
loopne
xchg
aas
in
mov
ret
cmp
push
les
mov
pop
and
pop
mov
sub
icebp
test
ljmp
pusha
test
pop
pushf
por
jns
decb
call
add
movsb
movb
insb
mov
test
jmp
outsb
and
lods
test
mov
add
mov
imul
out
testl
mov
ljmp
mov
dec
aam
outsb
xor
adc
arpl
ret
or
aad
adc
clc
mov
popf
sbb
inc
push
xor
cmpsl
fsts
shlb
insb
popf
xor
adc
sbb
mov
rolb
int3
enter
ss
add
insl
xor
add
cmc
adc
loopne
cmpl
test
inc
out
or
add
add
dec
jmp
dec
xchg
into
enter
out
lds
add
imul
pusha
xchg
jb
pop
je
in
mov
sarb
lahf
mov
xchg
cmp
mov
outsl
nop
clc
add
jecxz
movsb
inc
mov
mov
add
stos
add
cmpsl
into
push
repnz
lock
vminpd
incl
in
inc
rcrb
dec
ss
cwtl
pop
add
mov
mov
out
sbb
mov
sbb
out
mov
inc
add
inc
mov
nop
xor
jne
mov
jnp
add
inc
loop
pop
clc
pushf
jae
and
fwait
pop
push
adc
add
push
mov
mov
push
add
out
and
faddl
loop
and
sub
enter
test
cmp
cmp
mov
pop
loope
add
xor
dec
shr
add
lcall
inc
jle
sub
and
xor
mov
in
fisttps
dec
stos
jo
add
xlat
jne
pop
mov
pop
aaa
mov
clc
sbb
push
add
out
adc
pop
add
xor
sub
cld
adc
jl
test
xor
add
repnz
fmuls
dec
push
fists
push
scas
push
jmp
addb
ljmp
pop
dec
fnstsw
psrad
mov
inc
int3
and
inc
call
add
test
mov
out
cld
insl
adc
add
xor
sbb
enter
lds
mov
mov
add
insl
das
fldl
nop
adc
pop
and
sahf
mov
or
test
xchg
js
test
outsb
sub
hlt
cmp
stos
cld
adc
subb
or
pusha
xchg
mov
sub
out
dec
pop
mov
add
cmc
call
cld
add
int3
add
nop
outsl
aad
jmp
add
popf
add
push
add
mov
push
sub
pop
pop
add
bound
add
ret
mov
das
and
xor
dec
mov
and
clc
pop
pop
inc
push
cmpsl
mov
jp
mov
xlat
mov
jl
inc
out
sub
cmp
cli
test
inc
daa
pop
mov
scas
or
xor
mov
test
add
and
push
stc
int3
nop
shll
notb
pop
jae
dec
push
test
inc
xchg
rcl
sub
shll
adc
jge
aas
test
fldl
and
fcompl
adc
add
add
sub
mov
scas
ret
rolb
jb
lret
jmp
add
std
dec
fistps
add
shlb
movsb
add
pusha
leave
mov
add
mov
pop
icebp
add
xor
js
nop
push
mov
push
or
add
xchg
dec
dec
mov
rolb
cmp
sbb
add
rorb
outsl
loope
nop
dec
sbb
add
popf
aas
adc
in
add
mov
sti
add
mulb
add
fiaddl
icebp
and
add
push
xor
sbb
dec
fs
out
sub
mov
jo
jle
enter
adc
inc
push
mov
repnz
jecxz
add
mov
pop
dec
mov
hlt
jb
add
mov
sbb
push
incl
lods
cmp
es
xchg
xor
popa
test
pop
idivb
popf
dec
push
ljmp
adc
stos
inc
and
add
add
add
or
jl
dec
pop
jg
add
shll
xchg
jmp
jo
bound
iret
or
popa
in
movsb
jo
add
and
fsubrl
add
push
push
cmp
push
in
xchg
push
mov
sarb
jge
pop
lret
fisubs
add
sub
int3
rclb
sub
leave
addr16
xchg
add
pop
loop
jns
testb
sarl
xor
sbbb
cmc
pop
arpl
xchg
mov
bound
mov
lock
sub
add
mov
arpl
cmc
jle
xchg
jno
add
subl
ds
out
ja
xchg
pop
mov
int3
pushf
ret
inc
call
loope
nop
add
ss
ja
cli
cmp
xor
add
sbb
mov
rol
mov
movsb
add
sub
dec
sahf
fs
into
jmp
sbb
push
mov
mov
filds
inc
lret
and
push
clc
loope
out
sbb
dec
cs
add
add
mov
dec
in
aaa
or
ret
xor
rorl
das
sbb
pop
sbb
adc
shr
iret
add
mov
jb
dec
stc
sub
xchg
xor
and
add
bound
push
into
out
inc
add
outsb
pop
add
xchg
addl
daa
inc
adc
xchg
push
mov
add
mov
in
test
in
mov
add
addl
dec
jbe
push
loopne
lock
add
out
mov
and
mov
andl
mov
ret
dec
loop
jle
sub
jno
sti
push
mov
or
and
pop
fmuls
test
push
adc
inc
or
lret
mov
xchg
jne
inc
sub
ret
sub
mov
add
neg
into
add
dec
fcmovu
rol
xor
push
repnz
aaa
xor
add
lahf
xchg
adc
mov
mov
sbbl
movsl
mov
push
dec
fwait
xor
les
mov
rcrl
adcb
jno
mov
sahf
mov
fldl
sub
or
repz
jbe
mov
imul
lods
testl
subb
xchg
nopl
scas
sbb
movsl
ds
in
movb
cmpsl
cmc
imul
loopne
arpl
add
cli
push
inc
mov
and
lods
mov
add
into
cmp
leave
aas
or
cmp
int
rorb
add
jge
shll
add
dec
insb
sub
hlt
jle
out
add
divb
mov
clc
ja
inc
ret
cmp
sub
fucomi
push
loope
lret
fsubs
pushf
push
add
shlb
mov
ds
jbe
bound
push
aad
faddp
push
stos
stc
repnz
add
mov
xor
mov
xchg
jb
push
pop
fstpt
add
dec
add
jnp
mov
adc
push
push
push
mov
pushf
xchg
loopne
in
xchg
rolb
mov
xchg
cwtl
jle
pop
test
dec
dec
lods
push
inc
in
cmpsl
add
insl
sahf
testb
outsl
stos
iret
fistps
or
add
pop
pop
sbb
xor
inc
xchg
scas
sahf
push
add
sub
rolb
pop
push
or
test
imul
dec
ja
lods
jo
mov
or
test
mov
mov
sbb
and
movsb
arpl
ret
pop
sti
xchg
mov
sbb
add
mov
cltd
push
or
popf
jg
cmp
pushf
add
or
add
loope
mov
es
cmp
iret
insl
sub
add
stc
xchg
stos
cmc
xor
ret
xor
mov
pusha
int3
bound
dec
dec
test
sbb
xor
push
cmp
cltd
push
xor
insl
and
lock
call
ss
faddl
jo
jg
test
pop
cwtl
xchg
aad
cmp
arpl
outsl
inc
add
xor
lret
or
push
fldl
cmp
daa
inc
jns
jg
cmp
pop
imul
jno
jp
cmp
jae
subb
xor
push
jnp
call
ret
shll
in
push
mul
add
orl
test
pop
pop
aas
dec
sbb
cmp
pop
ret
push
nop
rcrb
and
push
adc
push
rcl
sbb
inc
add
inc
insb
sbb
jns
cmp
je
int3
scas
mov
mov
cmp
ja
fldt
add
pop
sbb
or
movb
mov
jp
addl
sbb
jge
pop
xchg
mov
inc
cmp
pop
clc
mov
jo
pop
xor
addr16
mov
inc
inc
ret
pop
int
inc
add
jb
jl
push
test
sbbb
add
fwait
lcall
insb
data16
popf
loope
outsl
adc
add
cmp
mov
stc
test
pop
sti
inc
jns
jp
push
mov
mov
int3
lods
popf
sbb
add
inc
pushf
ja
xchg
ret
adc
or
pop
pop
scas
inc
std
inc
in
enter
push
fidivrs
sbb
stc
xor
inc
push
add
scas
add
sbb
sub
mov
push
ss
cmp
dec
push
mov
sub
mov
das
mov
jp
aam
sub
or
lods
bound
add
in
sbb
push
or
sub
or
lahf
enter
pop
pop
sbb
and
enter
test
jb
ja
js
pop
xor
or
nop
jl
dec
mov
les
int3
lret
pop
push
cli
iret
inc
in
mov
sub
push
adc
daa
enter
dec
add
cmp
mov
lea
arpl
es
add
dec
shlb
test
sbb
test
andb
leave
pop
dec
push
faddl
xor
cmp
test
das
imul
ds
sahf
shlb
pop
xor
xchg
pusha
addb
inc
xchg
add
and
shlb
ffree
jns
add
into
push
mov
add
inc
pop
push
inc
inc
pop
test
add
fistpl
dec
adc
xchg
push
pusha
scas
jae
add
and
rolb
sub
jp
add
sub
movsb
jmp
dec
jns
movups
cmp
add
jg
incb
dec
or
sbb
inc
movq
testb
mov
sub
sub
add
ss
sahf
add
add
out
sbb
sbb
add
sbb
mov
rcll
mov
loopne
or
or
jp
mov
mov
lods
add
jnp
fisttpl
mov
sbb
rcrl
cmp
and
mov
out
loopne
fucomi
xor
jle
mov
or
test
push
pushf
push
mov
pop
loope
mov
jns
movsl
add
fs
cmp
cwtl
cs
dec
add
into
loopne
lock
push
add
lret
push
mov
adc
out
bound
push
into
enter
gs
sub
sub
and
pop
or
adc
jle
repnz
and
inc
push
add
jl
enter
push
fiaddl
mov
out
mov
popa
cmp
je
roll
idivl
mov
pop
lock
jns
dec
flds
gs
dec
xchg
push
jne
fcoms
hlt
cmp
or
adc
pop
mov
roll
nop
adc
inc
cmc
ss
adc
fnstenv
add
cmp
cli
cmp
xchg
add
outsl
sbb
sbb
mov
daa
flds
icebp
push
popa
push
inc
stos
add
fmull
and
inc
push
sub
pusha
mov
adc
inc
sbb
mov
adc
cmpsl
stc
imul
scas
sbb
inc
lods
outsb
add
adcb
out
or
add
lock
sbb
push
mov
int3
mov
inc
xorl
push
xor
enter
xor
addl
cmpsl
dec
cmc
xor
loope
xor
fstps
mov
and
movsb
pop
call
add
stos
and
add
inc
cmp
jbe
add
imul
orb
in
jg
inc
aam
sbb
add
icebp
mov
sbb
or
ljmp
xchg
pop
insl
add
stos
push
add
stc
add
scas
mov
xor
inc
add
aas
cli
and
ret
js
inc
notl
mov
push
cs
sub
lds
lahf
mov
mov
std
rol
jle
call
mov
insb
adc
mov
mov
in
fisubs
add
shrl
jg
cld
popf
mov
add
xlat
cmpsl
loope
sbb
add
push
sbb
or
push
or
enter
loopne
lea
push
mov
cmp
ljmp
sbb
jl
test
xor
add
mov
mov
pop
cmp
pop
or
rclb
add
mull
jecxz
jnp
test
into
aam
out
pusha
pop
xor
add
inc
mov
nop
fadds
jb
in
call
cmp
cmc
test
pusha
in
xor
pushf
repz
sarb
add
and
xor
out
rdtsc
clc
aaa
in
stc
inc
mov
cmp
mov
mov
mov
ds
fisubrl
sub
mov
add
lcall
int
out
add
nop
daa
dec
jo
jle
add
lock
lcall
add
xchg
leave
in
orb
push
pop
mov
jne
sub
ss
orb
aad
loopne
jge
cmp
fistpll
cltd
cld
mov
loopne
ja
xchg
enter
dec
inc
rorl
loope
push
cmp
iret
flds
pop
inc
mov
add
dec
mov
mov
add
jno
test
out
push
adc
shl
add
xchg
add
shlb
add
gs
xor
pop
xchg
pop
ds
aaa
out
mov
call
dec
xor
rolb
add
mov
sahf
negb
and
lret
out
inc
rcrb
lcall
cmp
rclb
outsb
incb
dec
mov
cwtl
add
iret
xchg
mov
cmp
add
rolb
mov
pop
adcb
push
xor
repnz
test
add
dec
push
or
xlat
jo
mov
loopne
les
sbb
das
bswap
add
push
lods
les
mov
jnp
adc
sub
and
mov
cmc
and
imul
add
jo
push
pop
lds
or
jns
mov
sbb
je
hlt
mov
dec
mov
add
and
pop
ret
and
in
icebp
jl
int3
mov
and
inc
xchg
insl
mov
fbstp
sbb
outsl
js
xor
jle
adc
addl
sub
push
repnz
dec
add
add
lds
and
dec
xchg
pop
cwtl
sub
dec
cmp
ss
movsb
ljmp
xchg
dec
sbb
mov
fdivs
mov
adc
add
bound
add
popa
ljmp
inc
jno
add
push
testl
inc
push
movsb
push
clc
add
hlt
cmp
lea
xor
rolb
jae
add
and
fildll
xchg
xor
arpl
jg
add
ret
dec
or
imul
shl
pop
add
jg
movsb
shl
xor
loop
mov
jge
xchg
mov
lret
ljmp
pop
add
xor
or
test
jae
dec
dec
pop
add
xor
or
dec
pcmpeqb
add
mov
fwait
arpl
dec
add
scas
mov
dec
inc
test
cwtl
or
leave
push
sbbb
mov
cmp
test
xor
loopne
lahf
push
pop
mov
or
cmpb
adc
js
cltd
add
jnp
mov
push
sbb
mov
les
xor
xlat
dec
sub
shrb
repnz
adc
insl
add
ja
pop
xchg
add
inc
movsl
mov
adc
pop
or
xchg
inc
adc
and
or
cmp
ja
xchg
scas
push
pop
js
dec
inc
scas
fs
jl
sub
pop
rcll
and
sub
out
imul
test
cmp
mov
push
nop
sbb
push
les
adc
insb
or
add
jl
jae
and
add
inc
mov
sbb
imul
icebp
dec
adc
adc
xor
or
and
lret
xor
call
xor
sbb
fcoml
lret
rcll
dec
test
or
add
in
xchg
xor
cwtl
or
pop
filds
data16
dec
out
add
incb
pop
icebp
mov
scas
dec
jb
mov
dec
orb
add
jb
es
icebp
loope
mov
les
out
cmpb
pop
push
and
in
mov
mov
and
inc
push
fadds
fldl
test
lcall
add
adc
ds
leave
into
pop
xor
icebp
pop
push
andb
add
xor
sub
push
mov
pushfw
les
insb
cmp
mov
add
and
call
mov
ret
enter
add
add
or
and
mov
test
cmp
pop
jg
push
cmp
push
dec
enter
sub
out
add
mov
fildll
xchg
mov
mov
sbb
dec
pop
addr16
adc
or
in
fs
lret
add
inc
xor
lock
sbb
add
inc
loopne
add
mov
pushf
mov
mov
out
mov
and
sarl
test
mov
mov
les
add
adc
inc
pushf
inc
pop
pusha
mov
in
sbb
cmpsl
sbbb
dec
and
cmc
xchg
add
lea
dec
fstpt
dec
into
push
ljmp
ret
int3
mov
es
adc
push
sbb
scas
shl
push
mov
xor
adc
sbb
push
ret
aas
cmc
jp
pop
lock
jl
mov
or
jp
lods
add
mov
outsl
adc
xchg
and
fidivrs
mov
das
dec
and
pop
xlat
cltd
sbb
sub
push
mov
push
into
pop
xor
xor
jecxz
push
mov
pushf
test
sarb
dec
and
sbb
iret
jge
je
xchg
inc
or
ret
movsl
cld
mov
and
loopne
push
adc
or
mov
add
loop
pop
lret
add
cltd
fcoml
dec
lcall
mov
inc
mov
jp,pt
push
add
xor
imul
push
xor
jecxz
data16
xor
incl
sub
arpl
mov
xor
xor
or
lock
add
mov
mov
inc
xor
inc
loope
sub
sub
jae
cmp
or
lods
ds
bound
jns
or
lock
add
rep
leave
testb
xchg
push
push
mov
pop
add
ds
push
add
sub
xor
jle
dec
sbb
test
jnp
mov
sbb
jl
cmp
pop
or
push
int
jne
add
sub
jge
inc
cmp
pop
jno
mov
cmpsb
andb
int3
add
jg
cmp
and
aaa
ficompl
and
mov
sub
dec
aam
fiadds
lods
jns
fwait
cmp
xor
xchg
add
or
jmp
push
add
shll
out
xchg
scas
imul
sbb
lock
mov
in
or
iret
ds
popa
je
clc
sbb
mov
mov
cmp
pop
dec
mov
add
jg
dec
pusha
shlb
notl
jecxz
outsl
push
mov
clc
out
xchg
sbb
cmp
push
jbe
inc
andb
es
jne
int
push
lods
pop
jge
dec
pusha
cmpsb
push
mov
lret
cwtl
cmpps
jb
popf
or
cmp
jmp
out
pop
cmpsb
push
ljmp
test
lahf
cs
scas
fadds
das
sbb
jnp
or
andb
and
icebp
push
arpl
mov
push
xchg
mov
iret
jnp
lcall
out
clc
pop
cltd
or
dec
sahf
and
leave
add
iret
inc
ja
sub
add
popf
bound
and
push
mov
into
pop
and
aam
and
push
shlb
rolb
mov
add
jg
lods
fadds
xchg
cmp
bound
mov
adc
adc
and
push
push
fs
pop
and
push
add
add
add
mov
fmul
push
mov
mov
adc
xchg
mov
xorl
sti
aad
aam
cmpsl
cmp
int
pop
shl
bnd
add
pop
or
adcl
aad
add
iret
inc
icebp
arpl
cmc
jo
hlt
mov
ljmp
loop
mov
pop
insl
dec
and
add
rolb
lcall
xchg
data16
addr16
rol
and
push
add
sahf
xor
loop
sub
cmp
add
dec
push
pop
cmc
jg
clc
call
push
fcmovbe
ja
inc
fcoms
repz
shlb
out
pusha
xchg
push
sub
push
add
xchg
push
lahf
add
enter
insb
lods
inc
push
or
xlat
adc
fisubl
stos
mov
call
mov
fmuls
sub
fldl
push
inc
repnz
leave
xlat
xchg
mov
push
mov
add
subl
and
and
xor
cli
xchg
or
call
fcmove
push
orl
jg
out
lock
rorb
or
mov
imul
or
test
xor
in
lods
sub
int3
jle
and
pop
bound
push
jnp
stos
and
and
aaa
lcall
add
fdivr
jl
pop
inc
movsb
jb
inc
fs
adc
push
adc
mov
fildll
aaa
rep
and
out
dec
push
mov
jb
test
xor
push
mov
xlat
or
leave
and
js
xchg
mov
cmp
nop
dec
aaa
sbb
push
and
inc
js,pn
xchg
push
pop
stc
fldenv
mov
jae
pusha
mov
mov
push
mov
and
push
popl
adc
rorl
and
and
push
outsl
cmp
imul
adc
xchg
jmp
jae
lcall
xchg
sub
pusha
imul
pop
jo
popa
add
mov
xchg
mov
mov
xor
and
inc
enter
mov
and
int
inc
nop
loope
inc
add
repz
cwtl
ror
and
dec
js
or
nop
test
or
stos
sbb
or
mov
jne
imul
adcl
or
xlat
or
dec
dec
add
mov
ret
and
push
add
adc
add
nop
into
pop
bound
mov
sti
add
sahf
dec
arpl
add
xchg
out
push
icebp
adc
jl
or
inc
add
cmpsl
subb
movsb
dec
aas
dec
mov
aam
sbb
shrb
add
jl
push
xor
push
les
pop
add
pop
shl
mov
mulb
mov
mov
dec
clc
adcb
fs
jnp
dec
jmp
push
aam
sub
ror
inc
or
cmp
aas
and
and
jnp
mov
out
add
xchg
xchg
mov
popa
incb
sbb
mov
jb
push
pop
cwtl
cmp
rcrl
mov
icebp
jge
arpl
add
or
cmpb
ss
in
in
xor
loope
pop
cld
clc
xchg
push
enter
movsb
push
jbe
mov
stos
out
xchg
popl
ror
mov
insl
dec
xchg
cmove
les
cltd
mov
stc
shlb
xorb
ja
jmp
add
int3
inc
fld
mov
pop
inc
fdivl
mov
and
push
dec
jmp
lea
mov
sbb
in
add
rcrb
loop
mov
add
jmp
and
adc
shr
xor
inc
cld
loopne
in
mov
mov
addb
ljmp
in
jae
add
pop
int3
dec
jne
mov
push
add
lret
cs
adc
pushf
add
adc
mov
addr16
pop
mov
sub
mov
pop
xor
xor
add
into
filds
push
popf
hlt
inc
out
out
add
insl
mov
in
add
incl
sub
mov
jo
fldl
pop
and
xor
mov
loopne
ret
pop
push
sbb
and
pushf
loope
rolb
test
outsb
js
pop
int3
pop
cmp
pop
adc
insl
data16
jbe
out
add
bound
jb
fimull
mov
mov
xchg
fildl
fs
xor
in
pop
out
test
out
jns,pt
push
add
sti
mov
xchg
xchg
into
xor
enter
add
mov
adc
adc
add
dec
dec
ljmp
jo
movsb
add
cmp
roll
pop
loope
jle
data16
hlt
add
add
pop
test
jg,pn
mov
insb
dec
or
mov
pop
stos
cmp
test
std
hlt
lds
popf
add
xchg
jnp
mov
js
push
pusha
inc
xor
ret
sub
iret
clc
loope
pop
add
mov
pop
adc
jno
mov
push
mov
add
inc
mov
jb
test
fsubl
add
jnp
addr16
sub
push
inc
mov
hlt
push
push
or
or
jle
fimuls
jno
adc
ret
mov
push
ret
push
jb
lret
pmaxsw
add
and
int3
xor
lcall
push
sub
dec
cmp
repz
and
mov
test
and
rorb
xchg
cmpb
jmp
xchg
and
aaa
test
loop
sbb
dec
and
jnp
fdivrl
xchg
rcrl
or
ror
xor
add
mov
js
mov
mov
cmp
shlb
jge
add
jle
xchg
jg
addb
pop
sbb
xor
in
xor
test
shrl
rcrb
sub
inc
mov
out
cmpsb
add
or
aam
pop
jl
cmp
int
call
add
add
or
cmp
dec
stos
out
mov
push
inc
mov
dec
add
scas
out
mov
fidivrl
add
mov
and
je
add
cmp
repz
inc
cmp
add
mov
lret
addr16
loopne
push
jge
and
jns
or
sub
les
adc
add
imul
adc
lods
sub
repz
jb
mov
imul
and
mov
jbe
insl
push
pop
jl
xor
icebp
out
je
sbb
push
pop
ret
subb
mov
sbb
into
add
cmovs
rorl
dec
sbb
das
pop
pop
arpl
not
jmp
enter
mov
push
cld
roll
fs
mov
and
xorb
imul
ror
adc
ret
fstps
lret
and
or
xorb
in
jnp
cmp
mov
sub
std
lock
cld
je
add
xor
lods
out
dec
in
add
es
test
sbb
and
jle
std
cmp
xchg
add
pop
add
rcll
xor
xorb
imul
or
test
pop
lds
sti
out
sub
aam
gs
jle
cmp
stos
dec
inc
fimuls
sarl
and
idiv
daa
jg
xchg
and
push
adc
cmpsb
or
xlat
or
stos
mulb
movsb
and
push
js
cmpb
nop
or
mov
lcall
push
add
push
imul
or
adc
hlt
sub
les
add
int3
push
sub
mov
pop
orl
test
inc
ljmp
pop
xchg
add
pop
addr16
and
loopne
outsl
std
or
and
add
xchg
lock
andl
or
xchg
mov
int3
inc
fidivs
adc
ror
push
ja
add
jne
xchg
mov
nop
mov
frstor
adc
mov
dec
mov
ficomps
filds
dec
cs
add
je
push
sbb
pushf
add
jae
stos
leave
pop
push
xchg
lahf
dec
jl
push
adc
ret
sub
insl
xchg
pop
call
jbe
sbb
rol
inc
ss
movsl
sub
push
scas
test
dec
adc
faddl
cs
jbe
les
mov
fldl
aaa
mov
sub
lods
inc
stos
fldcw
lret
enter
arpl
push
dec
adc
fisubs
loop
lods
sbb
cwtl
or
loopne
icebp
adc
mov
test
cmp
mov
loopne
mov
jge
add
push
rorl
loopne
add
xchg
es
sbb
std
testb
bound
mov
mov
enter
stos
dec
dec
or
adc
mov
test
or
sbb
jecxz
stos
fiadds
pop
out
test
mov
das
inc
push
sahf
rolb
pop
push
sti
push
mov
or
loope
in
add
clc
pop
push
aam
and
inc
mov
out
stos
icebp
sub
mov
sqrtps
xchg
negl
push
fldlg2
aam
xchg
or
sbb
jecxz
cs
mov
scas
mov
aam
jb
lea
filds
cmp
in
daa
jl
add
jbe
imull
inc
lock
aad
xchg
mov
pop
inc
add
jb
cli
stos
fwait
xchg
dec
sbb
fiadds
test
jle
jno
xchg
adc
out
mov
pop
mov
or
in
add
shlb
add
or
xchg
add
outsl
fisubs
in
dec
add
stos
cs
jmp
sarb
mov
pop
add
std
sti
mov
int3
loopne
fcompl
add
xchg
repz
cwtl
or
les
cmc
clc
mov
or
mov
xchg
sub
and
xor
pusha
xchg
sbb
test
cwtl
divb
icebp
jg
out
inc
data16
jae
inc
call
mov
test
sbb
and
add
fwait
out
ja
lods
push
cld
clc
and
stc
push
cmp
and
mov
sbb
dec
sub
sub
pusha
mov
stc
sbb
pushl
push
add
xchg
jo
cli
push
mov
cld
imul
and
cmpsl
add
sbb
and
leave
cmp
adc
pop
xlat
jp
or
mov
outsl
xchg
add
cmpsl
aam
pop
ja
sar
insl
stos
mov
jb
add
fwait
hlt
sbb
add
repnz
mov
add
dec
sahf
cmp
dec
add
xorl
aam
verr
xrelease
and
testb
adc
add
xor
add
jnp
xor
es
and
inc
add
jae
aas
imul
and
rcll
mov
jae
add
sbb
mov
call
cmp
enter
nop
rcrb
std
leave
rolb
filds
sbbb
jo
je
cmp
lret
or
inc
mov
scas
inc
insl
or
in
xor
jecxz
pusha
jno
nop
add
cmp
out
pop
rclb
std
and
dec
push
inc
add
ja
xchg
inc
stos
add
dec
ds
mov
in
push
scas
inc
xlat
enter
inc
xor
add
jge
dec
sbb
outsb
add
test
dec
hlt
dec
fbld
lods
add
or
cmp
xchg
add
sbb
iret
inc
outsb
xchg
inc
add
jns
lret
mov
mov
push
xchg
aas
add
sbb
call
and
pusha
xchg
mov
stc
add
push
test
icebp
pop
add
fdivr
xchg
or
xchg
or
not
lds
push
push
test
call
dec
aaa
push
test
cmp
je
scas
incl
cli
pop
or
jl
xor
pop
mov
stc
pop
push
clc
inc
push
lods
or
andb
inc
inc
mov
mov
imull
aas
cmpsl
dec
ror
pusha
das
pop
lock
push
xor
pcmpgtb
test
pop
jns
mov
xchg
mov
cmp
jecxz
sarb
adc
add
nop
aas
add
and
xchg
push
jae
lea
daa
ficomps
mov
testb
mov
repz
push
aaa
pmaxub
ljmp
mov
jl
mov
and
add
pop
or
call
mov
add
dec
in
pop
iret
inc
rclb
pop
add
outsl
call
repnz
jecxz
add
jecxz
mov
add
inc
mov
xor
ror
popa
sbb
jb
leave
shlb
cwtl
dec
ss
loopne
movsl
cmp
in
cld
hlt
add
int3
sub
add
fadds
subb
out
sti
xchg
push
push
test
pop
sub
mov
mov
insb
jbe
jl
icebp
inc
clc
xchg
adc
stc
cmp
add
rcl
cli
cmp
xchg
sub
adc
pusha
sub
ds
js
or
lods
mov
jno
pop
icebp
jmp
shl
jns
push
or
lret
adc
or
mov
dec
clc
js
jge
cmp
pusha
rolb
xchg
jo
mov
xor
sbb
cmp
cmp
cli
jae
loope
add
insl
repz
jmp
add
push
and
mov
mov
pushf
int3
pusha
fsubs
xchg
in
sbb
add
sbb
outsb
or
cmp
stc
mov
leave
js
add
cmp
add
pushl
loope
sub
inc
mov
ljmp
xor
nop
add
mov
xchg
or
lret
sub
sbb
into
iret
and
loopne
loope
bound
push
ds
in
sub
inc
mov
loope
mov
aam
lcall
lods
test
add
inc
out
lcall
fadds
or
mov
int3
or
out
xchg
sbb
add
ret
lea
push
lcall
inc
and
dec
and
xchg
pop
adc
test
push
icebp
dec
roll
add
dec
mov
hlt
mov
cmpl
add
fmull
add
arpl
mov
test
inc
mov
mov
stos
jns
decl
cmp
loopne
add
out
inc
xor
andl
lods
sbb
mov
clc
adc
nop
fdivl
sub
or
out
loopne
mov
add
xchg
out
lretw
cld
push
add
sbb
mov
xchg
es
jnp
add
pop
out
dec
mov
add
push
add
add
xchg
aam
pop
sub
push
sub
adc
xchg
pop
add
mov
xor
jp
out
jnp
jne
out
cmpsb
pop
push
sub
push
jmp
mov
mov
fwait
push
jbe
add
jp
insb
in
inc
sub
rcll
data16
shll
mov
mov
pop
call
test
dec
ret
add
dec
mov
and
ljmp
add
test
add
and
int
fdiv
push
add
js
adc
out
add
dec
xrelease
arpl
jmp
mov
xchg
subb
scas
icebp
xor
adc
sub
mov
cmp
jns
pop
jb
lea
mov
mov
bound
mov
sbb
jl
lcall
and
push
fcmovb
xchg
and
or
pop
shl
out
sbbl
push
sub
js
xor
insl
pop
pushf
mov
ret
scas
xchg
subb
pop
roll
leave
rclb
cli
add
jae
add
sbb
sub
push
call
xor
loop
cmp
xchg
imul
sbb
rolb
lret
cmpsl
lret
inc
mov
and
lret
xchg
lods
cmp
xor
and
mov
and
sub
mov
shlb
adc
lock
data16
std
popa
dec
ja
push
mov
repnz
jne
fmul
jle
pop
push
add
aad
lods
das
sbb
out
roll
sub
or
es
adc
sarb
fadds
fildl
sub
inc
push
nop
outsl
adc
lea
and
cmpb
push
jno
xchg
push
add
jle
add
lock
test
pop
out
add
test
mov
out
xlat
dec
dec
mov
cmp
cwtl
xor
test
out
inc
fldl
jbe
mov
lods
pop
mov
mov
in
shll
sbb
jecxz
inc
add
scas
ds
jae
xor
stos
push
fadds
nop
scas
adc
xor
xchg
xchg
clc
xor
jae
mov
xchg
arpl
nop
sbb
dec
push
push
mov
faddp
dec
xor
push
add
dec
pop
ret
aaa
sbb
lods
and
imul
arpl
ljmp
mov
outsb
adc
sbb
and
mov
aam
lea
inc
mov
add
cmp
lret
inc
push
pop
add
sahf
insl
in
int3
xchg
cmpsl
cmc
cwtl
adc
stos
icebp
and
ret
sti
xlat
hlt
fiadds
xor
pop
lock
xchg
in
pop
lods
test
lret
pop
pop
int
add
pushf
adc
pop
or
pop
dec
das
or
into
push
lea
pop
aad
sahf
add
adc
mov
jb
pop
add
mov
sbbb
mov
in
ja
add
lock
push
sub
jge
pop
adc
add
scas
std
cmp
jle
shll
sub
xchg
cmpb
dec
xlat
in
add
test
adc
and
mov
loop
or
loope
xor
add
and
pushf
push
add
mov
jo
jle
sbb
add
jecxz
pusha
sub
cmc
adc
cld
pop
jmp
sub
xlat
fisttpll
xor
mov
lret
or
sbb
les
out
ds
mov
mov
mov
push
mov
jl
add
jmp
sub
dec
mov
imul
cmp
cs
xchg
fs
dec
notl
or
cmc
rcrb
hlt
or
popa
sub
sub
xor
inc
pop
or
push
pop
imul
lods
fcoml
sub
out
repnz
add
mov
xor
das
push
nop
push
loope
lea
inc
mov
mov
les
and
cs
aas
aaa
fdivs
sbb
add
cmp
pop
sbb
cmpsb
rolb
imul
mov
icebp
in
cmp
xchg
dec
dec
mov
jno
mov
mov
ljmp
jbe
and
test
push
sub
ret
in
fdivrp
je
mov
sar
test
pop
sti
lods
pusha
add
xor
fwait
roll
push
testb
sub
imul
ja
mov
mov
mov
unpckhps
bound
dec
jl
and
test
in
testl
lret
ret
add
sbb
lea
add
fadd
sbb
push
rcll
pop
icebp
inc
xchg
or
aad
out
mov
add
bound
mov
add
inc
fmuls
mov
add
dec
addr16
in
jp
pop
xchg
and
jp
pop
inc
sub
push
adc
cltd
or
jne
and
mov
cmp
sbb
add
mov
rclb
pop
mov
xor
sub
xchg
packsswb
test
mov
mov
pop
rolb
sub
scas
push
repnz
adc
xlat
mov
adc
or
pop
mov
sub
pop
data16
add
mov
scas
push
or
cld
xchg
pusha
add
out
jle
push
not
jg
lods
xchg
pop
adc
fs
xchg
push
pusha
les
jns
lods
inc
push
ljmp
sub
fistpll
add
push
std
xchg
inc
jnp
add
mov
inc
out
repnz
outsb
push
jo
into
inc
push
js
dec
leave
daa
add
sub
sbb
mov
sbb
and
pop
mov
dec
mull
or
jg
add
xor
xchg
fcompl
addl
ljmp
subl
hlt
push
cmp
mov
sub
dec
add
popf
lret
cmp
pop
cmp
add
mov
mov
or
and
leave
lds
sub
dec
push
nop
frstor
out
loopne
in
cmp
pop
clc
aam
jmp
mov
arpl
fcom
or
lcall
lock
cmpb
je
jg
or
into
in
mov
or
mov
subl
inc
jb
mov
inc
adc
sbb
sarb
shr
clc
mov
pushf
cmp
je
aas
cmp
outsb
add
mov
xchg
es
mov
jnp
mov
adc
push
push
shl
cmpb
fisttps
sub
add
or
adc
sbb
sysret
int3
addr16
mov
push
add
cmc
ret
out
add
aaa
pop
cld
add
test
out
xorb
imul
add
sti
add
mov
frstor
decl
mov
push
sarb
lret
outsb
hlt
jge
rcrl
frstor
sub
loope
movb
adc
adc
int3
inc
lea
mov
insl
mov
shlb
and
repz
add
imul
int3
stos
rcrb
std
addl
xchg
cld
or
test
add
push
insl
sub
jle
and
test
xchg
jb
mov
lods
push
add
add
lahf
cmp
out
and
mulb
adc
test
pop
pop
lret
cmp
cwtl
sbb
mov
fldt
or
cmp
jge
addl
dec
ljmp
rolb
rcrb
dec
fmull
mov
jge
dec
cmc
mov
pop
adc
ret
add
xor
out
cmp
rcr
and
add
cmp
mov
jg
adc
pop
ljmp
std
bound
mov
dec
adc
add
enter
and
loop
cltd
inc
lock
fsubs
cmp
lds
ror
jo
jae
dec
aaa
and
sbb
jno
cmp
pop
push
jb
arpl
mov
and
jp
dec
pop
mov
push
push
sbb
enter
xor
movl
add
and
shlb
iret
cltd
mov
lea
jns
cwtl
jae
adc
cmp
jbe
call
dec
and
adc
inc
je
mov
rol
in
movsl
add
cmpsb
lahf
xchg
pusha
adc
add
sbb
adc
ja
out
aam
push
adc
lock
push
jmp
rolb
pushf
inc
test
lcall
xor
outsb
cli
add
insl
idiv
add
fstps
int3
cmp
ja
fnsave
aas
add
xor
adc
add
cmp
inc
push
dec
nop
in
nop
jp
call
xor
stc
andb
mov
lahf
stos
outsb
cmp
sahf
add
in
sti
push
adc
mov
add
in
and
data16
add
and
rcrb
mov
ljmp
roll
sahf
and
dec
mov
xlat
popa
or
adc
jnp
cmpsl
ds
mov
mov
or
and
jnp
cmpsl
in
pusha
cmc
mov
push
xchg
dec
enter
fnstsw
cmpsl
inc
and
data16
dec
inc
dec
rcrb
adc
pop
xor
dec
sub
xor
push
test
pop
pop
add
insb
push
xor
add
js
lock
mov
cmpb
ret
sarl
xor
cmp
jnp
testb
test
jae
mov
sub
xchg
sbb
mov
enter
and
inc
adcb
push
out
in
xchg
fstps
andb
mov
dec
pusha
aam
in
push
stos
int
ret
in
add
out
movb
or
das
push
js
inc
fiadds
pusha
push
and
push
push
add
sbb
das
mov
inc
ud0
push
inc
shl
inc
pop
out
add
clc
popf
dec
dec
cli
or
testb
add
popf
addr16
mov
pop
xchg
jmp
jmp
pop
dec
das
inc
xor
movsl
add
sarb
push
or
sbb
and
enter
test
cld
dec
push
cmpsb
call
push
add
scas
push
sbb
jne
bswap
subb
add
ret
cmp
daa
in
cwtl
loop
xor
lock
jbe
pop
in
inc
add
sbb
and
push
shrb
push
jb
add
enter
xchg
faddl
cs
neg
add
mov
loop
add
push
inc
fisubrs
scas
or
add
cmp
sbb
mov
add
insl
rorl
adc
jg
stc
test
fsubs
xor
pop
mov
dec
insl
mov
sbb
mov
and
inc
fsubs
loopne
shll
sbb
mov
or
cmpsb
rclb
aaa
arpl
add
add
scas
mov
test
outsl
stos
call
push
subb
mov
test
es
cli
inc
cwtl
ljmp
jge
incb
push
repz
push
loope
aad
imull
mul
jno
in
mov
out
rcrl
cmc
inc
mov
data16
test
sti
add
push
cmp
sti
or
push
rorl
add
fisubl
ret
mov
add
pop
push
idivb
add
jle
push
dec
test
xchg
hlt
lock
sub
jp
cmc
rcr
fsubrs
add
inc
sbbl
insb
ret
fiaddl
aad
sub
iret
popa
push
add
cmp
cli
add
lods
jne
in
out
add
mov
jno
gs
push
fcom
mov
and
lret
or
rcl
add
lret
cmp
push
xorl
add
xchg
adc
add
sub
rolb
orl
fsts
and
add
idiv
sbb
pop
mov
call
subb
jb
sbb
or
lods
pop
sbb
and
es
add
push
push
push
xchg
add
cmp
add
pop
mov
inc
pop
cld
fstpl
movsl
lret
push
inc
out
and
cli
mov
fidivl
lcall
sub
and
sub
cltd
stos
sbb
and
sbb
cmp
xchg
aaa
adc
vcvtps2dq
mov
add
out
aad
jle
ja
sbb
iret
fiadds
jne
add
fucomip
repnz
outsl
add
mov
xchg
xchg
cmp
shr
sete
pop
dec
pop
pop
test
adc
sahf
data16
cmp
push
pop
in
imul
cmp
cltd
cwtl
pop
jno
dec
loopnew
mov
add
cmp
lret
leave
add
and
mulb
sbb
mov
or
lcall
lods
push
add
das
test
add
mov
sub
gs
cli
insb
jle
adc
jnp
push
cmp
and
sbb
push
test
sarb
cwtl
sub
repz
and
mov
pop
ja
inc
mov
packssdw
cmpb
or
cmpb
add
les
shrl
std
sti
je
hlt
imul
dec
repz
mov
add
add
push
pop
xchg
dec
and
in
adc
test
das
xor
aad
pop
add
or
sub
loope
repz
jo
mov
nop
jl
mov
je
fidivl
call
dec
and
ss
dec
ljmp
js
sarl
mov
aas
pop
repnz
push
lahf
mov
adc
sub
dec
aas
decl
sbb
xlat
mov
add
cmp
neg
stc
test
mov
jnp
cltd
cmp
cmp
xchg
push
out
add
sub
adc
xchg
add
mov
out
dec
jo
add
mov
xor
cmp
test
xchg
rolb
clc
ret
adc
or
decb
add
mov
xor
mov
aam
fistps
mov
mov
pusha
je
or
inc
and
lea
xor
cwtl
fnstcw
xchg
jo
and
cmp
imul
pop
rcrb
pop
jne
or
pushf
push
mov
cmp
push
sbb
jl
add
sub
inc
inc
cwtl
mov
cmc
sub
js
mov
xor
lea
add
shrb
enter
mov
incb
push
add
stos
pop
out
mov
pop
leave
xor
jmp
add
mov
mov
cmp
int3
repz
cmp
hlt
nop
popf
scas
mov
pop
out
sbb
incl
adc
fs
add
repnz
inc
sbb
cmp
jmp
into
pop
in
gs
xor
andb
or
punpcklbw
jno
out
sahf
jo
mov
jne
add
mov
cmp
xchg
faddl
rcrb
je
cmp
scas
mov
jo
dec
icebp
lock
add
les
add
stc
jl
sti
xchg
cld
add
xchg
pop
loop
fists
push
ret
add
les
cmp
jmp
mov
mov
popf
pop
addb
adc
stos
push
out
pushf
mov
inc
jno
xor
jecxz
inc
pop
stc
in
or
aad
jp
std
sub
rolb
xchg
mov
jo
lods
sar
lds
mov
sub
mov
xchg
inc
test
add
fst
inc
cmp
jne
add
mov
and
pop
cmp
add
jmp
aas
add
mov
lock
sbb
lcall
lahf
mov
mov
repnz
test
jge
movsb
push
fmuls
xchg
xchg
push
pop
fstpl
sub
aas
push
pop
xchg
pop
xchg
or
sub
rcll
push
push
jl
lret
lods
rolb
cmpsl
mov
dec
add
test
push
mov
fbld
mov
inc
cs
pusha
or
add
sub
dec
cwtl
js
fcompl
mov
pop
xchg
add
sub
push
xchg
sub
fisttpl
ss
loopne
sbb
lds
leave
inc
arpl
cmp
lret
iret
aam
outsb
add
cld
or
inc
and
jl
arpl
or
loope
out
mov
shrl
iret
inc
lahf
fidivl
shlb
add
jnp
out
fisubs
out
testb
dec
push
imul
push
test
jb
sbb
push
adc
jae
mov
pop
cmp
fsubs
faddl
ficomps
fnstenv
pop
pushf
sub
xlat
jp
scas
xchg
movsb
pop
rolb
mov
mull
cmp
pop
data16
adc
dec
stos
and
adc
xor
outsl
add
add
mov
mov
rolb
push
pop
cmp
pop
sub
mov
sbb
popa
sbbl
or
out
dec
sbb
add
ds
add
sbb
data16
add
add
ljmp
dec
jae
ficomps
add
xchg
shll
mov
rclb
pusha
cmpsb
pop
xor
push
mov
jmp
leave
je
mov
mov
lcall
jno
and
not
pslld
mov
cmp
dec
cwtl
add
imul
int
in
dec
sbb
or
sub
outsb
pop
cs
rcrl
mov
int
or
cmp
ljmp
out
push
mov
enter
nop
inc
sbb
icebp
clc
pop
sahf
cmp
mov
xchg
add
mov
pop
scas
jne
adc
stos
xor
in
adcb
push
xchg
push
pop
or
sbb
mov
add
sbb
add
fisttps
arpl
adc
xlat
inc
orb
mov
int
add
pop
add
enter
sbbb
fidivl
dec
imul
jg
stos
xchg
sub
mov
outsl
xchg
arpl
mov
pusha
cmp
adc
add
jnp
inc
cwtl
sbb
sti
cli
cmp
les
pop
jns
add
movsb
cmc
insb
pusha
and
add
sti
mov
xor
loopne
inc
pop
push
lock
filds
or
sub
or
pop
in
idivb
sahf
test
js
xchg
and
lock
lret
push
data16
ljmp
shl
push
sub
or
dec
ficompl
int3
mov
add
std
inc
xchg
sbb
xorl
add
rol
test
dec
add
mov
xor
add
push
mov
cmp
cmp
dec
mov
pusha
xchg
ret
cwtl
mov
add
xor
push
push
fildll
inc
push
mov
add
xchg
mov
mov
cwtl
jo
jmp
cmp
test
mov
sbb
lea
dec
add
pop
cmc
lods
push
sti
adc
dec
sbb
mov
movsb
add
repz
xchg
adc
ret
jl
add
sub
test
jnp
out
xchg
fcom
roll
mov
add
sub
push
jle
arpl
js
inc
inc
or
clc
fadds
mov
mov
xor
xchg
dec
stc
test
andl
dec
out
notl
push
out
and
push
incl
mov
jb
pop
and
add
adc
call
aad
jge
adc
pop
sbbb
inc
push
cmp
inc
std
les
cmp
movmskps
test
imulb
pop
test
and
dec
in
xchg
jge
add
jno
fcmovnu
loopne
mov
pop
int
fdivs
hlt
std
pusha
and
hlt
inc
mulb
out
inc
or
sbb
cltd
aam
mov
sbb
sbb
push
cltd
cwtl
testl
inc
rcrb
outsl
xchg
xchg
out
pop
add
mov
sbb
js
push
dec
or
sbb
nop
testb
adc
inc
mov
xchg
mov
mov
xchg
scas
add
insl
popf
xor
push
pop
nop
test
cld
pushf
ds
push
aam
test
cmp
mov
andl
mov
lret
mov
dec
pushf
push
gs
pop
test
mov
icebp
cmc
mov
inc
dec
sbb
aaa
nop
xor
and
pusha
lcall
xor
or
je
push
or
mov
jecxz
sub
mov
test
enter
js
dec
add
jnp
add
lret
jae
fcmovnu
or
xchg
mov
add
sub
sahf
xor
xchg
xchg
adc
lret
adc
repnz
adc
out
out
inc
sbb
inc
and
xchg
lock
fbstp
adc
xchg
lret
or
dec
ljmp
cs
clc
adc
out
sub
and
outsl
mov
sub
add
mov
dec
sarl
inc
push
lcall
dec
dec
fs
pop
sbb
subl
add
xchg
iret
repnz
lret
mov
xchg
ret
clc
add
sub
insl
repz
in
adc
inc
jg
jno
push
xor
push
inc
loop
daa
shl
jbe
pop
pop
decl
xchg
xchg
in
loop
ss
and
icebp
add
fisubl
and
push
repz
add
xor
or
sti
cmp
add
push
rorb
push
insb
ljmp
jmp
je
sub
nop
cmpl
xchg
adcb
dec
ja
pop
mov
fcmovnu
cwtl
les
insb
push
jmp
insl
cltd
rclb
jge
and
icebp
adc
ja
jecxz,pn
mov
xchg
sbb
into
add
pop
sbbb
or
in
inc
jmp
enter
paddw
outsb
outsl
int3
inc
cltd
lods
pop
mov
xor
cltd
or
daa
mov
jg
push
ljmp
add
popa
mov
outsl
push
lods
cmpsl
aaa
push
in
leave
inc
xchg
add
out
mov
dec
push
js
mov
xchg
mov
cmp
sbb
lret
in
hlt
je
out
or
sub
aad
jns
add
and
push
test
pop
add
andb
lahf
fs
mov
and
in
adc
sar
sub
push
xchg
rol
inc
dec
mov
add
bound
sbb
out
pusha
dec
mov
xor
pusha
jmp
jp
pop
inc
inc
mov
push
lods
ss
dec
in
orb
mov
jns
scas
pop
pop
xor
add
add
and
stos
add
shll
or
in
inc
add
xor
adc
arpl
popa
mov
loopne
sub
out
or
add
add
jns
pop
movsb
sbb
add
add
mov
es
or
add
pop
add
rolb
mov
stos
pop
lret
shlb
aad
outsl
stos
cmp
out
test
mov
jno
sahf
imul
pop
fsubl
inc
lods
add
pop
push
inc
jl
scas
cmpb
xchg
mov
dec
insl
mov
add
movsl
add
xchg
repz
adc
mov
aad
ljmp
in
push
xchg
lods
test
xchg
dec
sbb
pop
pusha
mov
daa
inc
mov
out
add
outsl
mov
push
roll
fwait
pop
repnz
in
push
pop
dec
or
xchg
seto
xchg
inc
add
out
push
dec
xchg
or
pop
lret
xor
nop
mov
add
mov
bnd
jg
mov
dec
sub
jae
add
js
insb
outsl
inc
mov
iret
push
adc
xchg
add
push
dec
dec
and
pop
inc
push
cwtl
adc
test
loope
xchg
aaa
sub
test
repz
cmp
mov
pop
sub
insb
add
mov
mov
sub
pop
xchg
or
inc
mov
sti
addr16
push
push
lret
mov
jl
in
notl
add
mov
test
movsb
add
out
adc
in
add
jb
sbb
shlb
and
add
jp
jno
cmc
fdivrl
xor
ds
cmp
int3
inc
sub
je
add
lods
cltd
push
add
jne
ljmp
fs
jl
mov
jns
pop
mov
insb
dec
mov
subl
jmp
rcl
add
fcoml
sti
mov
addl
mov
enter
mov
adc
call
int3
add
mov
jg
adc
jne
sbb
xor
inc
es
push
mov
test
xchg
mov
orl
jo
shlb
daa
xlat
data16
subl
mov
push
cltd
push
inc
sbbl
sub
cmp
adc
jge
inc
push
mov
mov
sbbb
sbb
dec
push
rol
dec
adc
dec
ljmp
shrb
xor
pop
dec
and
lahf
aad
movsb
cld
insb
popa
icebp
sub
in
add
inc
push
pop
push
adc
test
mov
mov
add
loope
les
xchg
pcmpeqw
enter
inc
cld
call
xchg
sbb
nop
mov
add
cmp
aaa
cli
xchg
add
sahf
call
pop
nop
pusha
push
rolb
bswap
aad
or
xor
inc
out
push
xor
jno
rol
adc
push
push
cmpb
pop
adc
cwtl
cmp
add
mov
dec
mov
push
mov
mov
paddsw
cwtl
jne
sub
inc
out
fwait
mov
fdivr
add
jne
rorb
mov
pop
mov
add
pop
popa
call
mov
add
in
mov
jle
push
cld
shlb
sar
jle
and
mov
inc
or
mov
xchg
iret
nop
inc
loopne
sahf
packuswb
aas
loope
sbb
orl
mov
addr16
cmpsl
add
cs
out
mov
dec
rorl
mov
addl
push
movsb
push
cmp
or
out
fisubl
es
xor
jo
insb
nop
mov
fimuls
xchg
dec
mov
iret
mov
add
or
outsb
sub
xchg
bound
mov
lds
nop
or
mov
push
addr16
inc
loope
jge
cmp
addb
int3
test
push
pop
lods
dec
dec
add
inc
pop
mov
movsb
scas
fdivr
mov
ja
cwtl
mov
add
int3
mov
in
scas
mov
jle
mov
and
daa
add
movsb
repnz
push
inc
cmpsb
rcll
fucom
repnz
or
push
iret
push
arpl
aam
sub
scas
aam
lahf
shr
sbb
daa
dec
inc
dec
icebp
cmp
repnz
jg
ss
insb
add
push
scas
lds
push
sbb
jmp
aas
mov
popa
lock
jne
cltd
adc
inc
out
sbb
sbb
sahf
loopne
adc
insb
xlat
faddp
fcoms
lods
lds
pop
add
jo
scas
cmp
and
mov
inc
ss
xor
scas
mov
lods
push
inc
mov
dec
outsl
test
pusha
inc
sub
add
inc
jae
sbb
push
mov
or
ss
dec
inc
and
rol
aam
xchg
push
and
jl
lahf
pop
loop
pop
cmp
cmp
jge
add
fs
cld
movsl
pop
cmp
imul
jmp
les
lds
push
and
cmp
add
xchg
jge
push
bound
insb
mov
pusha
mov
xchg
hlt
and
rcll
lret
inc
data16
pop
rol
inc
je
popf
fcmovne
xor
mov
adc
pop
add
test
sub
jl
or
mov
fnstenv
icebp
mov
cmp
sahf
fs
or
sbb
mov
jecxz
ret
fbld
mov
sbb
pop
enter
mov
mov
lcall
pop
xchg
pop
and
lahf
mov
rolb
sbb
cmp
mov
mov
ficoml
shlb
fs
sarb
out
test
adc
push
and
push
leave
sub
mov
in
inc
add
ret
add
pop
subb
aaa
xchg
add
jecxz
jmp
adc
dec
xchg
mov
orb
hlt
pop
jo
cmpsb
jbe
icebp
sub
pop
inc
insb
inc
mov
xor
fsubrp
push
addr16
pop
jmp
sub
and
and
je
test
mov
sub
jmp
sahf
pop
fwait
dec
add
jecxz
jne
add
mov
xlat
pushf
int
xor
stos
scas
mov
xchg
inc
insb
pusha
and
imul
jb
add
movb
icebp
je
cmpsl
and
cld
sub
inc
jl
or
pop
fcoms
pop
sbb
insl
hlt
mov
sbbl
sub
cltd
cmpsb
setbe
inc
sbb
sub
pop
loop
movsb
xor
insb
mov
les
inc
push
push
in
scas
and
mov
lock
add
lea
mov
outsl
push
and
cmp
hlt
push
xchg
cmpb
or
inc
shrb
sub
xor
xor
add
insl
xorb
rorb
dec
cmp
rcrb
adc
adc
inc
and
jae
mov
sub
push
and
or
jmp
cmp
sbb
je
sub
sub
inc
sbb
js
push
and
sub
mov
xchg
cmpsb
jmp
xorb
in
mov
pop
dec
xchg
mov
aam
addl
jp
loopne
add
das
insl
cmp
adc
jl
adc
add
mov
stos
test
lock
add
and
daa
adc
rcrb
shlb
add
fwait
pop
icebp
scas
fdiv
clc
pusha
xor
jcxz
ja
fs
int
and
loop
mov
mov
cltd
pushf
add
lods
add
jp
pusha
nop
int3
jb
push
lahf
mov
pushf
push
gs
shrb
adc
xor
or
xlat
fs
insb
mov
sub
sub
pop
xchg
clc
xchg
add
mov
test
ret
daa
sahf
sbb
bnd
jmp
loope
outsb
mov
fcoml
sub
add
xchg
inc
xlat
adc
push
sbb
sbb
cmp
cmp
mov
jl
inc
push
cmp
mov
mov
sub
mull
mov
out
add
pusha
adc
leave
add
cmp
mov
mov
pop
cmpsb
sbb
sub
rol
loop
sbb
mov
dec
cwtl
xor
dec
jge
cs
rorl
rcrb
hlt
lods
add
mov
mov
jle
into
add
rorb
mov
out
repz
pusha
mov
sahf
mov
mov
pop
icebp
in
je
loope
mov
adc
sub
xchg
xor
popa
push
mov
pop
sub
bound
xor
aaa
xchg
inc
inc
adc
jmp
add
cmpsb
enterw
lods
ret
pop
dec
add
jb
add
fstps
je
test
jecxz
fwait
adc
mov
addb
add
and
test
xlat
aaa
rol
mov
push
loope
dec
dec
sbb
jbe
fsubs
icebp
nop
and
or
jnp
xor
pop
pop
aas
in
xor
push
pop
jmp
or
lods
cmp
sub
fidivl
jne
inc
add
rorl
popl
cs
addr16
fsubl
add
or
loopne
xor
rol
sbbb
xchg
or
push
divb
out
mov
adc
insb
cmpb
iret
mov
inc
cmc
jmp
daa
xor
push
adc
arpl
cwtl
and
sbb
or
xchg
sub
xchg
sbb
xlat
xchg
test
inc
and
test
mov
mov
popf
inc
sbb
dec
negl
mov
repz
sub
jne
and
sahf
pop
inc
and
xchg
xchg
addb
repz
jb
or
adc
test
sub
jb
add
lock
mov
imul
mov
clc
mov
xchg
jle
lcall
flds
sub
inc
inc
rclb
roll
add
dec
adc
adc
xor
and
pop
mov
aam
orb
imul
loop
pop
ret
inc
or
dec
pop
enter
xchg
les
jmp
sub
test
repnz
xchg
fisubs
imul
mov
pop
xchg
rolb
imul
and
jb
jmp
dec
dec
sbb
pop
mov
stc
or
js
nop
rclb
fidivs
fcomp
xchg
xor
je
push
sub
xor
loopne
mov
inc
sub
and
cmp
dec
inc
sub
xchg
cld
and
mov
xchg
add
mov
pop
mov
addl
in
mov
push
mov
xor
aam
pop
into
mov
inc
gs
je
lods
sub
outsb
les
mov
push
inc
pusha
adc
sbb
xorl
sbb
add
js
push
push
sbb
adc
or
add
sti
repz
jl
or
sbb
sbb
ss
cmp
rorl
and
aam
push
lods
jmp
add
push
repnz
movsb
lcall
sub
pushf
dec
pop
jb
loope
sahf
lahf
iret
add
loopne
popa
add
xor
lret
and
push
leave
pop
cmp
add
jmp
jge
loopne
insl
bound
mov
add
out
call
inc
dec
mov
popl
xor
bound
inc
and
dec
pop
imul
shlb
sub
test
ficomps
fsubs
add
pop
mov
sbb
or
popa
or
aad
dec
loope
sbb
test
xor
add
mov
lods
mov
dec
mov
sahf
pop
in
je
pop
xchg
sub
inc
lock
icebp
jae
shl
jle
pop
push
xchg
and
aam
cwtl
inc
mov
fwait
inc
add
addr16
int3
add
clc
pop
aam
js
sub
jl
adc
add
nop
inc
jge
add
inc
outsl
roll
pop
call
fiaddl
shrb
inc
xor
jns
sbb
je
or
inc
pop
adc
clc
add
mov
adcb
xor
add
cli
pop
jne
call
fdivrs
js
shlb
test
inc
fwait
sahf
mov
out
outsl
mov
push
jmp
mov
mov
jl
inc
fsubrl
pop
out
enter
jae
and
jg
mov
inc
sub
out
sub
cmpsb
adc
add
dec
pop
push
inc
inc
mov
bound
loope
adc
xor
arpl
and
cmpsl
xlat
mov
sub
jmp
pushf
push
cli
loopne
std
and
pop
mov
add
sbb
add
icebp
jle
inc
sub
jmp
add
int3
scas
add
aam
push
clc
fs
mov
and
push
add
nop
add
mov
popa
dec
inc
iret
push
add
push
jg
stc
sahf
cmpb
lret
push
cmpb
popf
pop
sub
jnp
cmpsb
in
dec
arpl
xor
enter
sahf
mov
sub
or
dec
test
xchg
or
in
add
stos
pop
int3
stc
shrb
pop
pop
jno
into
call
ljmp
mov
dec
push
cltd
or
add
jg
jbe
movsl
inc
int3
add
inc
cmovno
add
add
mov
cmpsl
cmp
dec
enter
movsl
inc
push
outsl
add
movsb
addb
cmpsb
sub
jl
mov
pop
sahf
decl
or
or
addl
sbb
repnz
ret
add
sbbb
insb
add
jo
add
cs
pop
or
ja
xchg
cmp
aas
test
rol
cwtl
nop
lret
add
call
shrb
jge
cwtl
or
add
out
jg
dec
add
jno
cld
or
sub
sarb
loop
fs
adc
mov
sbb
lock
fwait
inc
push
sub
mov
cmpsl
mov
jnp
mov
sub
clc
inc
push
icebp
je
push
cmpsl
add
mov
fsubrs
push
push
outsl
fidivl
jge
sbb
mov
daa
cld
es
inc
int3
leave
movsl
pop
and
mov
mov
add
insb
cmp
pop
repz
arpl
mov
mov
xor
push
add
xor
dec
icebp
pop
addr16
mov
daa
fwait
add
das
inc
test
and
paddsb
pop
pop
sbb
add
test
or
or
inc
test
and
loopne
mov
adc
in
aaa
pop
pop
jnp
sub
fyl2x
inc
js
ret
jmp
fcompl
daa
aam
mov
xor
dec
nop
sahf
test
jo
push
adc
lods
lcall
mov
loope
lea
rcrb
add
xchg
in
ret
xor
mov
jnp
and
adc
or
cld
out
pusha
and
lods
rclb
sbb
adc
bnd
and
adc
out
add
inc
out
fbld
push
jns
dec
cmp
ret
jl
adc
or
adc
adc
and
fisttpll
subl
lret
mov
mov
add
and
les
adc
test
fld
add
pop
insb
inc
cmc
inc
mov
ret
scas
sub
add
sub
xchg
das
cmpsl
js
sub
int3
mov
dec
pusha
or
xor
push
or
cmp
or
cltd
mov
popf
sbbb
faddl
inc
out
and
mov
addr16
dec
pop
movsb
sub
jnp
cltd
add
dec
fadds
mov
repz
add
xorb
xor
cltd
les
add
pop
or
das
and
adc
sbb
mov
cwtl
decl
push
aam
pop
sahf
inc
dec
mov
pop
sub
and
and
xlat
xchg
inc
mov
jb
shrb
std
test
jo
inc
pop
or
fiadds
daa
shlb
cmp
sbb
in
ret
mov
rorl
ja
sbbb
add
data16
push
repz
lret
cli
out
mov
sub
add
adc
pusha
pop
dec
cwtl
pop
inc
or
dec
test
mov
call
outsl
and
dec
xor
lea
mov
ljmp
insl
jno
mov
mov
adc
sbbl
mov
sbb
xor
scas
insb
jae
mov
notb
sub
fs
aaa
or
inc
mov
xor
rorb
mov
bnd
hlt
iret
add
popa
popf
and
subb
sub
pop
in
dec
jecxz
je
xlat
lcall
push
adc
inc
xor
mov
adc
add
and
cmpb
sbb
js
data16
push
rorb
pop
pop
jle
cmpsb
xor
adc
das
xor
add
test
icebp
xchg
sub
mov
mov
ret
add
push
sub
add
sub
sbb
add
add
cmp
dec
adc
mov
jmp
xchg
inc
adc
jo
jbe
cmp
int
xchg
or
subl
sub
push
dec
fildl
out
outsl
ret
psllw
daa
loop
adc
shl
out
cld
dec
mov
sub
fsubp
stos
sbb
std
mov
hlt
and
imul
push
cmp
lahf
xchg
call
test
in
iret
add
cmp
inc
adc
popa
sbb
inc
loopne
aad
cwtl
mov
adc
cmp
jns
jbe
call
xor
jecxz
sbb
mov
inc
or
mov
movsl
pop
sbb
aas
and
add
dec
rcr
and
jle
or
add
adc
mul
pop
ret
repz
add
and
and
pop
adc
add
int
jge
sub
pop
lcall
jg
add
push
sbb
clc
in
mov
mov
gs
push
cmp
repz
insb
pop
pop
xlat
inc
jo
mov
pop
jle
jmp
add
outsl
xchg
stc
inc
outsb
lret
inc
pop
or
and
call
fwait
jp
pusha
mov
mov
cmc
js
add
mov
sbb
sub
nop
inc
push
pop
push
cwtl
inc
enter
mov
call
mov
insb
addr16
cwtl
or
out
inc
nop
loopne
scas
or
hlt
roll
mov
pop
inc
insl
add
xchg
sub
jne
sub
clc
add
mov
dec
add
xchg
dec
cltd
out
pop
push
push
sub
pushf
add
cs
cwtl
xchg
imul
mov
das
add
ret
testb
push
iret
mov
and
mov
adc
jae
test
and
inc
call
add
sar
cmpsb
cli
sbbb
xchg
in
cmp
xor
adc
xchg
jmp
jne
lock
lock
xchg
sub
insl
sub
jno
inc
inc
fwait
pop
lahf
push
repnz
sub
sub
pop
inc
inc
shll
clc
cmp
jp
inc
je
inc
xchg
pusha
arpl
and
enter
cmpsl
sbb
mov
adc
pop
sbb
push
push
int
push
add
xchg
jecxz
add
jnp
adc
adc
das
js
sahf
or
fsubl
add
jle
xchg
dec
dec
mov
movsb
push
test
jne
test
inc
cmp
mov
cwtl
add
dec
lahf
in
pop
nop
mov
movsb
pop
popl
vsubsd
adcb
lret
inc
mov
add
mov
xor
pop
mov
call
stc
fs
pop
data16
add
test
repnz
jle
cmp
loopne
faddl
add
insl
rcll
pop
pop
fldenv
xor
xsaves
sub
rcl
nop
inc
add
adc
shlb
sub
mov
mov
mov
in
hlt
mov
sub
sub
add
es
push
rclb
pop
dec
and
lds
jo
sub
jl
add
push
lds
pop
mov
push
lods
mov
imul
test
cmp
ss
addr16
sbb
adc
add
jae
xorb
inc
addr16
mov
xlat
pusha
int3
pop
sbb
pop
inc
cmp
scas
jg
je
add
stos
and
push
xchg
mov
shlb
in
adc
and
mov
add
addr16
xchg
stos
push
xchg
and
add
mov
pop
fsubrl
inc
fwait
cltd
fisubrl
mov
pop
mov
adc
xor
pop
add
mov
in
cmp
call
int3
inc
cmpsl
mov
pop
pmullw
and
andb
jb
in
push
enter
add
sbbb
rorb
sub
jg
add
mov
xor
addr16
testb
sbb
jno
loopne
js
mov
vpmacssdql
popa
shlb
frstor
add
pop
pusha
fdivs
pop
or
insl
test
sub
ret
mov
xchg
pusha
xor
or
xor
add
imul
das
mov
dec
daa
lock
mov
xor
mov
add
lcall
inc
jo
call
sbb
scas
dec
shrb
jl
add
mov
fisubl
xchg
rcrb
imul
sbb
or
mov
cmpsb
addr16
mov
add
lds
daa
mov
jl
add
pushf
sahf
add
sub
adc
xor
es
or
sub
lds
or
aaa
adcb
mov
or
rcl
fcoml
push
sti
das
sbb
test
adc
or
or
add
in
fwait
push
fidivs
sbb
jmp
inc
int
test
shl
xlat
adc
mov
ljmp
aam
xor
mov
outsb
xchg
repz
dec
push
mov
add
int
dec
add
or
imul
sub
add
push
dec
ret
cmp
add
in
mov
mov
int3
repnz
mov
pusha
xchg
jnp
mov
out
sub
pop
popa
sbb
push
pushf
test
cmp
clc
fisttps
inc
dec
add
and
imul
add
mov
pop
scas
movsl
cmp
popf
add
lds
xchg
sar
in
jb
and
add
push
adc
add
scas
inc
mov
add
popf
cmc
test
aad
jns
add
fnstenv
loopne
sbb
mov
fimull
js
clc
insb
popf
cwtl
cld
cltd
cmp
push
dec
or
xchg
stc
sbb
insb
sbb
inc
cmp
jl
sub
divb
bound
dec
addr16
cmp
mov
ja
ljmp
or
sbb
jo
sub
outsb
int
cli
push
je
push
mov
jg
cmc
testl
dec
inc
les
repz
push
or
sarl
add
cmpsb
add
iret
jae
or
inc
ljmp
xchg
fs
ds
jo
mov
sub
adc
xor
push
sub
xchg
xchg
jno
addl
mov
cli
loop
sub
in
add
stos
fidivrs
adc
xchg
add
or
sbb
add
or
dec
push
cmp
xlat
sbb
clc
addr16
in
push
xchg
sti
push
in
mov
dec
inc
insb
jae
jb
sbb
call
cld
mov
add
ror
subb
pop
xchg
xchg
loop
rorb
push
jbe
mov
sbb
je
add
or
push
add
orl
pop
mov
push
inc
sub
cli
faddp
inc
cmp
aas
mov
xor
int3
out
popa
loop
idivl
and
mov
and
dec
lahf
jp
in
sbb
push
add
adc
adc
sbb
fidivs
leave
pop
test
add
cmpsb
push
adc
aam
xor
mov
add
jl
in
imul
sub
push
inc
sbb
add
cwtl
hlt
inc
xor
mov
lods
mov
ffreep
jno
je
or
mov
aas
cmp
jo
sbb
pop
mov
dec
shl
add
xor
jle
fstpl
add
outsl
out
cmp
jb
loopne
mov
sub
addr16
jecxz
loopne
imul
and
jge
add
push
std
add
cmc
cmp
sub
jne
cli
adc
orb
push
jo
es
loopne
pop
push
les
add
jns
mov
popf
adc
sbb
xor
sub
inc
push
adc
add
xor
mov
aam
mov
rcrl
imul
pusha
pusha
mov
mov
dec
ds
pushf
sub
pop
in
popl
in
and
lret
dec
xor
jno
js
insl
pop
mov
add
sahf
mov
mov
imul
movsb
xor
jge
add
push
or
fsubs
or
int3
mov
jge
cs
test
shlw
add
add
mov
out
mov
or
outsl
mov
xor
addb
fadds
mov
or
in
add
insl
pop
mov
dec
and
xor
dec
hlt
icebp
jb
and
or
xor
add
mov
movsl
cmp
shll
pop
mov
sbb
or
je
sbb
or
and
push
aaa
sbb
inc
ret
xor
add
and
xor
andl
imul
cmp
pusha
sbb
sub
sub
lret
test
adc
xor
mov
adc
jge
bts
mov
add
inc
dec
subl
mov
pusha
inc
mov
or
mov
mov
xlat
outsb
lret
fcompl
inc
jecxz
pop
cmp
dec
dec
sub
lcall
cmp
rorl
in
pop
cmp
add
inc
insb
pop
mov
insl
mov
xchg
xchg
cs
cwtl
inc
lcall
push
add
mov
cmp
mov
sti
mov
lock
aam
add
fdivrl
int3
mov
out
xchg
shrl
rcll
push
dec
add
lret
cmp
pop
sbb
cmp
xor
sub
mov
mov
inc
inc
faddl
add
pop
fxch
sbb
mov
mov
adc
mov
pop
sub
gs
and
dec
cmpsl
sbb
dec
stos
test
jne
or
mov
adc
inc
in
mov
sub
inc
jnp
outsl
cs
aas
pop
cmp
bound
mov
addb
and
jns
dec
inc
dec
and
insb
add
inc
pop
nop
jg
sub
pusha
ljmp
mov
loopne
stc
jmp
cmp
sub
hlt
prefetch
or
adc
mov
stos
push
push
mov
mov
por
xchg
stc
or
jmp
rorb
pop
xchg
pushl
push
lods
pop
push
clc
rcrl
push
sti
fcompl
addb
pop
dec
xor
jns
lods
jno
sbb
mov
push
add
nop
xor
aam
gs
add
repz
cli
add
cmp
inc
dec
or
out
andl
add
sbb
int
push
add
or
aad
int3
sti
cwtl
popf
ja
push
jno
movb
sbb
adcl
add
fildll
clc
insl
jae
sbb
add
test
xchg
sarl
or
dec
inc
or
mov
xor
sete
cmp
cmp
sbb
adc
aas
mov
ds
out
push
push
adc
pop
out
movsb
or
inc
and
add
mov
insb
fbld
inc
push
mov
mov
popf
out
push
mov
rolb
and
mov
paddq
fcomps
cmp
pop
and
shrb
push
push
das
sub
in
addb
cld
test
fsubl
subl
daa
nop
cmp
icebp
sbb
movsb
imul
jae
jb
or
lods
cmp
jge
fildll
push
fadd
pop
shll
inc
jo
test
or
cmp
lods
xchg
inc
ret
inc
add
orb
imul
dec
or
or
ret
hlt
xor
mov
mov
xchg
sub
test
inc
mov
add
cmpb
pop
add
ret
data16
xchg
rol
xor
clc
in
popf
sti
sub
mov
adc
out
in
xor
sbb
mov
in
mov
add
stos
shlb
movq
and
hlt
fistps
imul
sub
add
loope
push
popa
lahf
div
push
stc
idivl
push
inc
repz
rorb
in
pop
stc
faddl
aaa
in
loopne
pop
pop
cmpb
inc
imul
loopne
pop
rolb
dec
add
adc
sub
sbb
xchg
pop
ds
int3
loope
hlt
push
leave
push
divb
pop
lock
mov
outsb
int
pusha
mov
cli
sbb
loop
es
pop
push
add
mov
or
shr
mov
pop
cmpb
ss
fbstp
fiadds
orl
adc
add
sbb
out
sub
jmp
pop
mov
packssdw
mov
nop
mov
adc
push
sub
jno
imul
out
add
mov
iret
mov
mov
pop
popf
push
imul
in
mov
fisttpll
cli
jb
icebp
lahf
std
in
dec
dec
test
add
sbb
mov
sbb
cmp
mov
or
fdivrs
mov
testb
into
movsb
add
and
add
arpl
data16
mov
sbb
and
add
loopne
imul
cmp
scas
hlt
push
sbb
filds
scas
cmp
rcrl
add
pop
and
ljmp
mov
mov
cmp
fistl
and
or
into
pop
adcl
loope
xchg
sbb
ljmp
pop
add
out
popa
popa
push
pop
inc
mov
movb
adc
aaa
scas
mov
fdivl
add
leave
pop
mov
xchg
add
lock
test
rcrb
xlat
sbb
add
fnsave
popf
loopne
mov
stos
clc
imul
adc
daa
mov
pusha
and
filds
mov
fidivrs
mov
imul
cmp
jbe
adc
clc
pop
ss
loopne
data16
mov
addr16
jbe
dec
loop
push
dec
inc
jnp
jmp
icebp
add
cmp
cmp
in
or
cmp
mov
hlt
cs
cmp
or
add
mov
xor
sarl
mov
sbb
cmp
cmpl
shrb
ds
jmp
fstpl
dec
inc
mov
mov
add
inc
mov
add
pop
jecxz
jo
test
adc
sbb
enter
or
cmpl
add
addr16
ret
movsb
call
aas
and
addl
cmpsb
mov
lds
dec
movsl
jo
and
mov
jp
mov
jae
cmp
xlat
add
add
ljmp
pop
push
hlt
fidivs
adc
add
dec
push
fisubl
cmp
adc
adc
push
xor
je
add
addl
pusha
inc
mov
aaa
shll
add
jno
jne
add
insl
mov
sbbl
testl
call
cld
test
add
movsl
add
movsb
scas
loopne
nop
add
mov
or
lods
add
add
sbb
sub
inc
loopne
and
add
movsl
ja
lods
mov
clc
add
sub
inc
pushf
popa
call
sbb
into
mov
cmpl
adc
insb
cmp
cs
push
pop
xor
and
pop
sbb
xchg
jmp
adc
and
shrl
cmp
js
in
fistpl
xchg
add
xchg
es
pop
inc
mov
or
push
sub
imul
pop
and
orl
push
in
jl
adc
or
inc
and
loopne
push
cmovs
mov
cmc
xchg
pop
fistps
das
sbb
xchg
add
pop
push
inc
cmp
or
stos
xchg
xor
rcrb
sub
frstor
push
add
push
inc
imul
xorb
adc
pop
jo
rol
jb
fistpl
mov
test
test
sbb
je
fxch
pop
add
add
adc
hlt
sub
adc
js
sbbb
movsl
rclb
add
iret
les
push
sbb
mov
inc
mov
pusha
lea
jne
rorl
add
inc
popa
mov
mov
in
ss
add
or
mov
add
jo
test
or
inc
int
mov
add
and
jge
insl
hlt
dec
bound
stos
sub
sub
push
jle
xchg
shrb
adc
lea
mov
add
cmp
xlat
scas
jmp
add
xchg
ljmp
add
mov
popf
xchg
dec
loope
push
mov
jne
lds
add
sti
ljmp
mov
xor
push
outsl
adc
sub
fsts
push
inc
movsl
push
scas
cld
icebp
stos
sbbb
mov
iret
test
je
add
and
fwait
js
push
pop
aas
int3
addb
pop
hlt
outsb
jmp
dec
pop
xchg
arpl
mov
sarl
push
call
vxorps
movsb
pop
inc
dec
imull
loopne
rcrl
xchg
or
mov
je
sbb
add
aas
mov
add
dec
cmpsl
push
jg
test
xchg
sub
pusha
ret
aad
lods
add
cltd
push
add
jb
mov
test
in
add
clc
push
push
xchg
adc
sbb
mov
leave
mov
addps
data16
cmp
icebp
add
mov
movl
ret
addb
jb
sub
ljmp
pop
sahf
and
adc
sbb
test
pop
mov
mov
adc
aam
pop
stos
pop
cwtl
inc
push
ret
loop
add
loop
clc
in
in
cli
shll
rcrb
fcompl
add
mov
js
push
rcr
jnp
sbb
insb
xchg
jbe
add
ret
dec
addl
add
aad
cmp
sub
js
pushf
ret
call
daa
dec
pop
inc
mov
xchg
clc
mov
insb
add
enter
enter
add
mov
pop
dec
add
add
bts
test
enter
test
call
das
mov
lods
or
mov
push
addb
decb
add
or
adc
popa
clc
or
jns
push
jecxz
add
adc
add
in
ficomps
and
sarb
mov
pop
dec
and
inc
loop
mov
inc
adc
lahf
fildll
sbb
adc
cmpsl
add
subl
add
daa
xchg
dec
adcl
dec
shll
out
mov
hlt
int3
lock
lcall
add
fucom
cmpsb
xchg
add
jmp
clc
into
dec
and
mov
adc
jmp
ds
sbb
xchg
add
dec
outsl
inc
cmp
les
xchg
daa
push
pusha
and
adc
rclb
gs
nop
push
mov
loop
lret
or
pavgb
add
andl
add
inc
cmpb
shlb
or
push
into
jo
cwtl
pop
mul
inc
dec
adc
sar
movsb
add
mov
stos
add
jp
and
mov
into
inc
aam
jno
nop
imul
add
ds
or
addr16
and
test
mov
push
push
aad
mov
xor
xchg
push
swapgs
dec
ja
cs
mov
fisttpll
push
cmp
repnz
adc
in
arpl
into
mov
dec
add
jae
je
movsb
inc
fnstcw
mov
int3
ljmp
add
cs
mov
lods
cld
dec
pop
xchg
cmc
add
cltd
das
cwtl
daa
add
dec
fisttps
pop
xchg
add
cs
sarl
jle
pop
iret
ret
push
xchg
call
leave
push
addb
xchg
mov
jnp
int3
adc
cmp
add
dec
push
jg
add
stos
popf
mov
pop
inc
fistps
xchg
lret
bound
xor
ss
xchg
jo
es
adc
pushl
and
out
sub
cmp
mov
add
cmp
es
fmul
cmpsl
add
push
add
jno
sbb
or
mov
push
xchg
sbbb
and
or
ret
sub
pusha
iret
pop
mov
dec
xor
xor
add
jnp
mov
es
mov
or
aas
adc
and
cmp
rorb
dec
sbb
frstor
push
daa
and
pop
sub
movsb
and
add
mov
insl
inc
push
jne
je
mov
push
cld
or
xor
fs
add
or
inc
xor
add
pop
repnz
nop
cmpsl
adc
pusha
sbb
loopne
mov
shlb
inc
imul
iret
fsubrl
int
pop
jmp
inc
into
xchg
add
xor
add
ds
sub
push
push
jae
arpl
inc
add
outsl
cmpsb
pop
or
icebp
jno
out
fnstenv
push
push
adc
sub
test
add
dec
es
cmp
nop
cmc
sarl
sbb
pop
mov
ja
enter
popf
mov
push
cmp
iret
imul
cmpl
insb
and
daa
andl
lea
add
push
mov
jne
add
shl
xorb
xor
jp
pushf
pop
bound
sar
push
out
mov
in
mov
aaa
cmp
inc
or
xchg
dec
mov
pop
and
inc
fdivrs
jmp
inc
rorb
cmp
movsb
push
mov
jmp
mov
fiadds
jl
add
sub
enter
clc
insb
cld
add
pop
push
faddl
mov
inc
add
daa
sub
addl
mov
sub
xchg
or
xchg
pop
fisttpl
les
mov
nop
jl
adc
sar
pop
pop
jmp
dec
pop
nop
xor
xchg
xorb
mov
or
out
fmul
adcb
inc
call
cmp
jecxz
out
add
int
sub
add
xor
add
jae
add
dec
xor
ror
cmp
mov
in
loopne
pop
add
xchg
mulb
clc
adcb
pop
add
ds
lea
add
addr16
fdivrl
mov
jbe
cmp
sbbb
add
dec
push
mov
dec
pop
add
loopne
push
and
pusha
sbb
popa
mov
pop
inc
and
in
add
inc
dec
out
add
push
leave
sub
dec
sahf
push
jae
cmp
xchg
cmp
xchg
add
bound
aad
inc
incl
jge
stc
add
cmp
int3
xchg
or
sahf
out
cmc
mov
jns
les
dec
push
add
mov
xor
lds
add
jnp
call
or
pushf
jl
mov
inc
pop
dec
or
xor
adc
cmp
cmpl
and
outsb
repnz
dec
adc
add
out
jae
pop
push
push
inc
xchg
xorb
sarb
and
int
orb
pop
add
pop
mov
imul
faddl
movsb
adc
test
sub
or
add
test
ret
in
dec
sub
or
sbb
loopne
mov
lahf
mulb
mov
les
out
hlt
incb
mov
jne
xor
in
adc
ljmp
rcll
les
into
push
mov
mov
in
add
jae
int3
fs
icebp
push
mov
pop
push
and
inc
jge
add
inc
mov
add
dec
push
loopne
dec
jl
es
and
inc
fnsave
nop
cmp
mov
xchg
mov
or
adc
js
pop
push
call
test
insl
sbb
mov
inc
test
les
pusha
leave
inc
add
dec
pop
movsb
xor
inc
mov
fucomi
dec
inc
enter
pop
out
add
pop
mov
shl
pop
inc
inc
sar
mov
fcmovu
fildll
sbb
adc
sub
ss
sti
popf
adc
add
cli
rorb
sub
push
scas
frstor
push
add
mov
adcl
add
add
xor
cmpsb
scas
inc
popa
pop
movsb
pop
sub
cmc
sbb
mov
cmp
in
cld
inc
add
or
hlt
repnz
mov
and
inc
sqrtps
jb
nop
or
fldl
sahf
repnz
orl
jo
jg
test
roll
imul
adc
jp
sbb
jmp
and
mov
scas
add
push
int3
cmc
es
push
cmpsl
movb
jle
sbb
xchg
aas
xchg
mov
hlt
add
mov
push
in
pop
lods
mov
enter
aam
inc
add
xorl
cmp
cmpsb
inc
sti
imul
rcr
or
ficomps
lock
mov
pop
jmp
sahf
xor
repnz
andb
flds
bound
mov
sarb
jge
xor
enter
iret
cmp
mov
dec
sub
cli
xchg
addr16
jmp
add
out
lcall
dec
add
xchg
enter
scas
inc
sbb
lock
push
fimull
mov
ret
and
xchg
add
push
inc
cwtl
mov
insl
and
mov
pushf
or
nop
pop
out
sbb
push
leave
faddl
into
mov
adcb
pop
sbb
mov
dec
lret
leave
lcall
xor
mov
aam
add
mov
dec
and
testl
dec
ss
movb
imul
pop
adc
lock
and
dec
lds
cmpl
outsb
ret
loopne
fsub
data16
lcall
pusha
mov
jbe
in
inc
inc
and
test
add
or
fists
sbb
add
in
push
mov
in
scas
add
add
sbb
jge
adc
pop
jae
movsl
add
les
adc
nop
orb
jno
imul
fistps
test
pop
in
jo
inc
add
imul
movsb
sub
and
jnp
dec
mov
add
stc
testl
in
addl
cwtl
and
ja
clc
xchg
lea
xor
aad
js
mov
and
mov
or
cmp
and
jnp
or
xor
popf
sahf
adc
leave
lret
repnz
pop
fdivl
push
mov
push
loop
xorb
daa
movq
lcall
xchg
out
mov
jp
subb
repnz
mov
xchg
cmc
daa
andl
add
sbb
shlb
in
into
enter
cmp
sti
add
jp
test
cmp
addl
push
jbe
iret
push
out
mov
int3
mov
addr16
mov
or
mov
add
add
add
loop
inc
je
loop
dec
int
add
sub
or
mov
ss
ljmp
loopne
jl
adcl
xchg
mov
add
cmp
mov
dec
fisttps
int3
into
adc
loop
in
add
add
mov
push
xchg
out
lcall
inc
test
add
adcl
xor
jl
pmulhuw
add
add
sbb
fucomi
adc
test
lock
jmp
pop
out
push
fbld
into
ja
shl
add
ficompl
push
fsubs
insb
dec
movsb
ret
roll
push
push
dec
das
loope
inc
adc
movsl
pop
and
add
cmpsb
jo
xor
clc
insb
and
cwtl
push
inc
lds
repnz
xchg
adc
out
call
incl
cli
mov
lods
lea
aam
jnp
jmp
pop
jmp
jp
adc
xchg
dec
in
mov
test
sub
lcall
int3
and
cli
and
sar
push
dec
loop
pushf
mov
inc
adc
call
mov
arpl
ret
mov
cmp
leave
sar
shl
jno
and
inc
sub
cmp
and
cmp
or
or
sti
jb
add
iret
add
and
pop
pop
fsubs
sbb
and
xchg
out
jae
and
cmc
add
inc
dec
sub
add
sti
mov
xor
and
add
mov
mov
lock
mov
pop
and
mov
sub
andl
jb
add
insb
dec
inc
clc
int
sbb
sub
popf
push
cmovbe
sbb
cmp
xchg
add
ret
popa
dec
cmc
dec
wbinvd
add
sub
mov
fsubl
push
out
mov
pushf
xchg
fadds
sti
std
push
jl
aad
jno
xor
shl
dec
test
loopne
mov
push
int
leave
xor
xor
mov
mov
push
inc
insb
in
inc
cmp
clc
inc
orb
punpckhbw
inc
xor
dec
into
or
mov
pop
and
loopne
scas
divl
add
daa
iret
dec
sbb
mov
testb
in
clc
inc
jbe
sbb
and
dec
xchg
dec
add
fcmove
nop
test
xchg
fnsave
mov
rcl
into
mov
push
dec
and
iret
xchg
inc
hlt
and
mov
cmp
aad
adc
and
dec
mov
mov
dec
add
xchg
push
repz
pop
xor
sub
cmp
cmp
inc
pop
pop
lcall
loopne
imul
pop
xor
popf
mov
pusha
int3
enter
xchg
xor
lret
cltd
testl
inc
leave
lds
xchg
sub
arpl
bound
add
movsb
into
mov
imul
adc
test
aad
and
dec
leave
add
jl
sbb
daa
cmp
jge
add
jae
int
wbinvd
dec
rorb
in
sarl
hlt
fsubrl
adc
scas
lcall
cmpsl
add
fildl
je
add
mov
cmpsb
push
repnz
hlt
loopne
inc
shrl
nop
lret
jmp
aam
inc
pop
sti
gs
cmpsl
rcrl
and
addl
sub
jnp
push
push
add
pop
jmp
scas
add
add
add
int
insb
in
std
test
push
dec
inc
xor
dec
sbb
out
sbb
shlb
notb
arpl
int
fsubrs
pop
daa
add
pop
sbb
mov
mov
rcrb
adc
aas
adc
dec
add
cmp
sub
shrb
push
popa
mov
loop
sbb
lahf
testb
pushf
add
sub
xchg
add
lret
and
movsl
add
push
rolb
push
dec
add
push
dec
add
dec
