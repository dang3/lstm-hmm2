jo
add
add
add
jo
add
add
add
add
add
mov
xor
les
rcl
xor
ds
test
icebp
popf
jno
pop
out
cmp
jb
dec
out
testl
pop
sbb
pop
clc
aad
fmuls
sbb
or
les
iret
cmpsl
pop
std
push
loop
loop
cmpsb
adc
cmpsl
lock
aaa
inc
xchg
aas
dec
popa
div
push
dec
dec
jae
inc
push
fimuls
pop
sbb
movsl
je
pop
aam
mov
pushf
jg
call
xchg
jmp
dec
mov
repz
jp
mov
ja
xchg
sahf
pop
ret
pop
and
cmp
shll
inc
mov
and
popf
rcrb
cli
lret
pop
mov
push
call
cmp
xchg
jno
out
nop
jg
test
arpl
dec
lods
cmpsb
mov
sub
inc
gs
dec
or
inc
xor
fadds
inc
dec
rorl
fstps
push
repz
push
xchg
fisttps
hlt
cmp
pop
adc
push
mov
mov
sahf
aaa
adc
fldenv
out
loop
lahf
and
sub
into
adc
and
mov
or
adcb
mov
xchg
pushf
mov
out
pop
int3
adc
mov
push
fcmovb
or
mov
cmp
mov
mov
imul
pop
mov
dec
pop
mov
les
sbb
lds
loop
ds
js
mov
jo
sub
adc
cmpsl
adc
sar
jne
push
xchg
mov
in
fwait
lock
mov
lcall
repnz
enter
shrb
pop
shlb
subl
add
pop
push
mov
push
js
cmc
data16
outsb
test
leave
in
mov
and
jb
cmp
push
jb
aaa
mov
pop
inc
lcall
repnz
sbb
jl
popl
scas
rcr
outsb
sbb
and
repnz
fmull
jmp
gs
iret
xor
pop
aas
sub
xchg
pop
jno
adc
fincstp
mov
jbe
mov
inc
sbb
push
xchg
int
xchg
loopnew
test
push
mov
outsl
mov
enter
and
sbb
jle
cmp
push
cld
pop
repnz
das
inc
mov
jle
pop
pushaw
adc
xchg
push
fcompl
popa
in
ja
or
lods
cmp
or
inc
push
js
popa
pop
push
repnz
inc
int3
inc
xchg
cmp
sarb
or
mov
lods
daa
stc
out
adc
rcrl
call
sbbl
out
and
jns
sti
and
leave
or
jge
fldt
cmpsb
push
ljmp
xchg
pop
js
loope
dec
outsl
push
loop
lea
mov
pusha
cwtl
mov
sbb
adc
dec
fs
xor
sub
sbb
sub
jecxz
stc
and
cli
int3
cs
xor
xor
sub
loope
jno
mov
nopl
ds
mov
out
jbe
sub
ds
mov
addb
out
out
dec
push
cltd
outsb
in
and
push
dec
fstl
pop
mov
inc
jnp
aas
inc
xchg
sub
into
out
je
fbstp
out
outsb
daa
mov
scas
nop
pop
mov
cmc
add
nop
or
leave
adc
inc
movb
sbb
addr16
xchg
shr
push
hlt
xchg
xor
sub
repnz
jp
movsl
push
xchg
inc
add
mov
adc
xchg
sahf
lock
push
adc
xlat
xchg
fldenv
lea
mov
sub
lds
mov
push
mov
cmc
cwtl
mov
mov
adc
xor
cmpsl
dec
mov
pusha
arpl
lods
jne
push
ret
sub
enter
int3
or
popa
dec
sbb
dec
mov
test
dec
jbe
repnz
push
mov
and
mov
ss
add
movsb
and
int
mov
inc
pusha
roll
in
aaa
xchg
cli
je
pop
xchg
outsb
test
push
and
movsl
lds
pushf
pop
cmpsb
xor
inc
push
cmp
ja
jno
mov
mov
in
out
inc
dec
sahf
mov
ljmp
jecxz
out
xor
shll
lret
jae
bound
xor
cmp
shrb
hlt
outsb
mov
push
mov
in
cmpsb
arpl
gs
ss
mov
lods
mov
ja
test
and
stos
repz
insb
fistl
xlat
imul
or
xor
fcmovbe
rolb
mov
vmread
dec
fstps
repz
or
aas
jl
push
pop
dec
daa
scas
daa
sbb
inc
gs
add
pop
clc
in
fs
push
jmp
out
mov
xchg
int
arpl
jnp
mov
adc
pusha
cmp
xor
push
test
enter
adc
fisubrl
sub
lahf
cwtl
jo
sahf
jge
inc
push
add
movsb
lods
cltd
das
pop
jge
outsb
push
clc
adc
shll
pop
inc
mov
lret
add
push
add
jb
jno
les
push
pop
xor
mov
xor
lsl
cmc
pop
mov
jl
outsl
loope
fwait
js
mov
inc
add
out
rolb
stos
adc
add
pop
mov
xor
outsl
movsb
lahf
outsl
add
rorl
push
sahf
or
repz
lret
mov
sub
push
xchg
jp
loope
jnp
pop
mov
mov
sub
push
mov
stos
les
test
out
dec
popl
pop
int
cmp
and
shlb
sub
pop
and
sarl
jp
jne
loope
cli
dec
inc
testl
adc
cmp
add
mov
test
aad
insb
mov
xchg
pop
fildl
add
mov
xchg
andl
loop
pushf
jae
mov
in
in
ss
loope
add
jmp
test
xchg
xchg
in
aad
and
inc
and
mov
push
adc
cmp
ja
mov
xor
clc
xchg
mov
add
fisubs
sbb
xchg
ret
jno
out
lret
mov
movsb
lahf
aaa
in
sbb
dec
mov
enter
jae
filds
in
and
or
int
or
or
cwtl
in
test
js
jle
inc
repnz
cmp
pop
xchg
pop
xor
imul
lock
in
cmp
sbb
jo
leave
inc
pop
cmp
cwtl
cmp
lahf
jmp
call
iret
jae
rcrb
test
mov
and
std
jo
dec
fstl
or
sbb
mov
jne
ss
out
out
mov
and
jg
sub
scas
fcoms
push
cmp
inc
or
int
pushf
rol
ret
or
dec
mov
out
sub
repz
dec
mov
aad
call
xor
mov
and
fisubrs
pop
xchg
cmp
push
add
add
das
or
add
sbb
nop
test
mov
les
mov
mov
in
adc
pop
push
adc
xchg
sarb
bnd
out
pusha
adc
cld
cli
dec
repz
xchg
mov
xchg
xchg
xchg
dec
outsb
das
inc
insl
hlt
or
aad
cmpl
adc
loope
cmp
push
ret
dec
shlb
push
in
fiadds
or
sbb
hlt
sbb
cli
icebp
enter
js
or
mov
ficompl
rcrb
into
jp
fmuls
push
leave
adc
cli
mov
ja
xchg
cld
daa
fsubs
mov
dec
xor
jp
add
dec
pop
pushf
leave
fsubs
push
fistpll
cmp
cmp
repnz
call
stos
mov
dec
subb
xchg
mov
dec
adc
inc
pop
fsubl
pushf
into
xchg
imul
add
or
push
cmp
or
jp
in
das
mov
jbe
xchg
inc
mov
sbb
mov
arpl
dec
and
shrl
aas
sbbb
sahf
fisttpl
sti
sbb
xor
mov
mov
movsl
lock
aad
cmp
pop
mov
inc
adc
mov
loope
adc
fs
add
jne
sbb
sbb
pop
out
add
dec
mov
lahf
sbb
adc
inc
sbb
loopne
mov
or
das
add
dec
mov
scas
rcr
lods
mov
std
stc
xlat
sbb
imul
sbb
fistl
and
jae
clc
sbb
clc
cmpsb
in
clc
xor
pop
sahf
dec
sbb
pop
cli
nop
in
jne
ds
push
xchg
inc
daa
lea
mov
in
rcll
mov
xor
icebp
fcmovb
mov
jmp
xchg
push
mov
popa
and
jg
je
aas
lock
ja
movsl
dec
out
mov
insl
pushf
sbb
add
fdivr
fnstenv
ds
cld
loopne
sbb
roll
cmp
sub
push
pop
lret
scas
xor
outsl
jmp
pop
je
push
in
cld
popa
les
cwtl
scas
outsb
adc
push
or
lret
lcall
daa
and
xchg
push
sub
divl
addr16
stos
ret
div
and
xchg
xchg
jecxz
lret
lods
pop
lea
je
push
inc
xchg
xchg
pop
inc
stc
dec
sbb
jp
aas
mov
xor
jmp
mov
dec
cmp
int3
scas
das
ret
sbb
in
enter
or
call
stos
add
pop
jmp
mov
or
xchg
in
aad
test
call
mov
sub
or
ja
mov
insb
lock
hlt
ror
inc
adc
and
insl
daa
mov
outsb
lea
stc
push
and
in
test
mov
sub
add
xchg
and
jo
out
adc
cli
inc
dec
xor
mov
sbb
xchg
inc
je
es
insb
jecxz
dec
movsl
and
mov
push
adc
loop
lret
lds
or
mov
cmpsl
daa
sub
fldl
push
add
sub
in
mov
lds
pop
mov
imul
xchg
cmp
xchg
lret
and
adc
mov
out
insl
sar
rolb
arpl
lea
adc
imul
xor
in
jle
je
jne
sbb
gs
mov
push
ds
nop
push
mov
pop
and
inc
testb
jmp
cmp
aas
mov
and
pop
pop
stc
jp
stos
fdivrl
into
adc
insl
pop
test
cmp
inc
cmpsw
test
add
in
scas
out
sub
push
movsb
insb
push
imul
lods
out
pop
mov
lds
mov
sbb
idivb
xor
insb
jnp
insb
adc
call
mov
add
sbb
test
sti
push
push
icebp
test
lret
sti
fcompl
outsl
je
inc
loop
mov
and
push
sub
lret
inc
adc
cli
aam
popa
xchg
aam
imul
pop
movsl
xor
mov
xor
pop
bound
loope
test
push
inc
outsl
mov
pop
or
out
lea
xlat
xchg
mov
add
mov
iret
insb
aad
stos
sbb
sahf
int3
ja
add
cmp
fistl
xchg
in
jmp
and
fstpl
nop
pusha
lret
sub
call
bound
mov
test
incl
arpl
repz
mov
nop
sahf
cld
xor
mov
mov
lahf
in
and
inc
popa
cltd
movsl
mov
and
enter
cld
lret
xchg
xor
sub
imul
add
inc
mov
xchg
push
push
cs
lea
pop
test
jbe
ret
pop
sub
lods
lods
cwtl
sub
ret
mov
dec
inc
ficomps
mov
jb
jp
mov
aad
pop
cld
mov
fldt
fcompl
daa
clc
outsb
movsl
dec
jmp
ret
jge
sarl
cmp
adc
add
push
push
icebp
scas
mov
sahf
jae
sbb
je
repnz
sbb
adc
cwtl
popa
test
dec
repnz
xor
in
out
addr16
add
xchg
adc
xchg
jmp
pusha
cmc
cmpsb
cld
jle
sub
cs
dec
pop
xchg
dec
in
sub
xor
mov
fsubr
cli
xor
dec
pop
frstor
add
add
mov
popf
mov
jnp
pop
gs
test
fucomi
cltd
mov
mov
push
mov
sub
arpl
or
inc
mov
cmp
add
hlt
adc
and
in
movsb
dec
mov
ss
mov
mov
xor
cs
or
jl
dec
mov
jb
cmp
mov
jecxz
fdivrs
push
mov
jno
je
dec
push
addr16
jge
mov
cmp
sub
bound
out
in
cmp
movsb
jbe
cmp
sahf
jg
push
les
in
mov
or
add
je
sbb
mov
out
ss
mov
fisubl
icebp
cmp
addr16
call
and
loop
ret
add
mov
ret
shll
push
iret
jnp
dec
cmpsl
mov
cmp
cmpl
add
lods
jecxz
cmp
adc
das
lods
or
jnp
sbb
push
sub
test
std
out
mul
sub
sub
cmpsl
xchg
push
mov
sbb
ficoms
negl
inc
outsb
dec
sbb
mov
sub
in
pop
xchg
popa
es
shll
je
stos
cmpsl
lods
in
outsb
mulb
lea
cmp
add
xor
jle
data16
shll
inc
cmp
add
aas
mov
in
push
in
lock
xor
or
int
pop
sub
loopne
mov
ja
std
fdivl
sub
xor
ja
xor
xchg
lods
repnz
mov
hlt
jae
cmp
insl
repz
rol
mov
dec
jb
std
pop
fcom
test
daa
xchg
ret
lret
iret
pushf
pop
jnp
cmpsl
addr16
xlat
je
mov
cmp
ficomps
ret
mov
and
xor
adc
mov
pop
andl
push
subl
jb
pop
mov
pop
out
shll
lcall
cmc
xlat
cmp
test
xchg
xlat
sub
inc
or
mov
addr16
jns
pushf
mov
jbe
mov
adc
xor
adc
sarb
inc
sbb
ficoml
sahf
push
ja
es
loope
push
arpl
inc
mov
adc
sbb
or
addb
xor
add
xchg
stc
je
int
stos
js
mov
dec
pop
pop
mov
andb
and
adc
xchg
or
jns
sbb
jp
jecxz
add
xor
xchg
jle
mov
jmp
out
push
sbb
jb
ss
add
xchg
daa
int3
mov
push
cmpl
add
pop
lahf
add
cmp
iret
stos
cs
adc
lahf
ret
leave
xchg
imulb
push
movsl
iret
push
xchg
lea
rclb
inc
pop
inc
mov
leave
iret
daa
sub
pusha
out
xchg
cmc
sahf
push
push
gs
je
xorl
mov
call
and
xchg
imul
test
jb
sub
inc
out
lret
push
jbe
push
add
call
gs
push
or
or
lods
dec
sub
xchg
jecxz
cltd
mov
cmpb
popa
xor
jae
mov
sbb
test
mov
int
xchg
sbb
lds
push
or
lret
insl
xor
out
sub
inc
push
push
test
test
sbbb
cld
xchg
xchg
or
cmpsb
cmc
addr16
mov
sbb
jp
adc
aaa
xchg
adc
int3
inc
cmpsl
cmp
loop
add
jge
jo
jo
jb
push
into
daa
add
mov
inc
mov
push
inc
sarl
sbb
dec
ret
stc
outsb
pop
fsubl
add
sub
cltd
ja
imul
sub
sbbb
divl
xchg
xchg
add
cmpsb
xlat
add
lock
mov
iret
insl
jne
inc
jle
fs
push
popf
rclb
pop
lret
sub
out
das
pop
ficomps
out
fisubrs
jg
dec
loope
add
loop
xlat
xchg
mov
fnstsw
jge
mov
sub
loope
notl
sbb
sub
adc
repnz
jg
cld
scas
xchg
mov
xlat
mov
arpl
stos
int3
ret
pop
push
jg
add
jbe
popa
test
mov
sub
jne
js
scas
fmull
ficompl
adc
or
dec
mov
rcl
xchg
dec
leave
mov
mov
or
sti
test
add
pop
sbb
sub
sub
clc
mov
mov
add
jne
jg
fstpt
leave
fldt
push
inc
fdivrl
aad
outsb
lcall
jnp
pushf
and
repz
rcr
pusha
sub
mov
testl
mul
icebp
xor
cmpsb
test
sbb
pop
dec
push
jg
push
cmp
sbb
stc
aas
rclb
popf
pop
daa
dec
push
jb
add
movsl
int
and
jl
xchg
dec
jge
xor
gs
data16
sbb
std
scas
pop
push
lods
das
lahf
push
sarw
int
jmp
lods
push
sahf
ja
lcall
push
fs
fsub
mov
repnz
push
push
js
or
es
xchg
sbb
punpcklbw
loopne
or
jo
push
adc
xor
or
inc
mov
push
push
pop
add
cmp
adc
lcall
les
cs
dec
imul
addr16
cmc
jb
inc
popf
lcall
std
jb
pop
enter
arpl
lea
rclb
jno
sar
mov
call
or
and
sbbb
xchg
and
push
xchg
sbb
mov
dec
add
inc
and
fs
es
stos
nopl
add
dec
stos
dec
scas
or
fnstcw
lock
in
lods
dec
push
lods
sub
vfrczsd
mov
adc
pop
cld
xchg
mov
xor
lock
mov
fadd
orl
mov
mov
cmpsb
arpl
push
jnp
ds
ds
adc
push
in
mov
and
mov
adc
mulb
inc
nop
mov
push
xchg
pop
add
lods
xchg
mov
lcall
mov
fbstp
xlat
or
or
aas
in
mov
repnz
pushf
pop
jne
cltd
sub
cli
push
pop
xor
movsb
and
pop
inc
and
xor
call
enter
sarl
enter
mov
sbb
inc
imul
push
loope
xchg
gs
adc
xor
pop
adc
push
jnp
sbb
aaa
sub
push
fs
cmp
adc
pop
shlb
lahf
pop
lcall
mov
lds
or
cmpsl
popa
mov
sub
bound
jns
les
mov
test
orl
out
sbb
inc
dec
dec
rcll
shll
dec
cmpl
mov
not
test
inc
pop
lods
imul
stos
dec
xor
sbb
adc
mov
mov
jae
or
adc
test
shll
das
aaa
push
mov
mov
loopne
fimuls
and
rcrl
pop
shll
push
loopne
adc
jno
cs
ss
and
mov
add
sarl
cmpl
pop
ror
sar
aas
cs
orl
push
in
fidivs
icebp
out
lea
sbb
shl
shll
ficomps
stos
shl
xlat
leave
inc
xchg
fisubrl
cmp
pusha
mov
mov
mov
xchg
aas
mov
mov
or
mov
imul
adc
test
mov
stos
mov
out
aaa
inc
sub
push
mov
aaa
bound
push
cmp
and
xor
mov
inc
std
or
loop
mov
mov
insl
aas
int
loopne
ret
fstpl
adc
pop
or
adc
testl
xchg
in
mov
nop
lds
das
lods
jp
jle
gs
xor
rorl
xorl
das
and
jmp
lock
jbe
fsub
ja
aad
sub
add
sbb
and
xchg
popf
test
mov
and
fwait
jmp
clc
repnz
cmp
fistps
aaa
mov
daa
fcomi
lret
jge
ss
out
repnz
and
push
pop
adc
push
push
aam
iret
pop
inc
add
mov
jae
sbb
push
mov
cmp
adc
cmpsl
pop
jmp
jb
dec
xor
jp
js
xorl
test
cmc
push
jmp
ret
lcall
or
pushf
sbb
pop
mov
add
rcrb
addr16
or
std
jns
stc
mov
les
jg
hlt
lea
lret
sti
pop
dec
mov
pop
ljmp
push
std
inc
fstp
inc
das
aad
hlt
sarl
sbb
cmp
and
jge
iret
or
cmp
sahf
mov
dec
sub
hlt
movsl
and
adc
mov
mov
xor
stos
sub
sub
aam
jmp
lret
shrb
aam
adcl
xor
mov
pop
xor
mov
xchg
cmc
jns
stos
call
adc
push
adc
pop
and
xchg
jb
addr16
sbb
push
aaa
inc
stc
mov
jb
jge
push
add
arpl
and
dec
mov
es
mov
adc
sbb
mov
stc
in
jb
fst
subb
clc
add
fs
lahf
in
icebp
insl
pop
rolb
pop
mov
push
std
in
nop
mov
sahf
aam
jecxz
lods
or
jo
enterw
xchg
test
je
ret
inc
inc
pop
fs
push
mov
or
js
es
xchg
subb
cmp
test
bound
in
test
xchg
or
inc
push
jmp
in
sub
dec
int
test
dec
inc
and
out
or
lahf
mov
adc
icebp
lret
add
dec
mov
data16
dec
int
repnz
dec
fdiv
mov
iret
fmull
jne
mov
mov
loop
mov
lds
roll
test
lret
or
cmp
bound
xchg
add
inc
lahf
movsb
mov
es
sub
inc
adc
dec
scas
add
scas
xor
fildll
das
mov
sbb
lods
push
lods
dec
pop
in
sbb
pop
pusha
sub
xlat
adc
and
push
addb
rorl
aad
and
add
add
andl
push
xor
add
addr16
out
lcall
jmp
mov
loop
xor
aam
push
mov
mov
adc
jne
add
mov
inc
or
lcall
push
aad
dec
test
imul
into
repz
shll
repz
mov
jb
adc
pop
aad
shlb
out
out
fsubr
ss
movsb
ret
shl
add
faddl
data16
sbb
aaa
inc
and
add
mov
loopne
cwtl
stc
sbb
and
mov
mov
adc
or
scas
pusha
sub
sub
xor
stos
iret
out
mov
rorb
push
cmp
lods
out
ss
data16
pop
rolb
add
insl
adcl
lret
cwtl
dec
dec
mov
int3
jmp
mov
lock
into
mov
sahf
call
fisubl
mov
cs
inc
ret
add
insb
lahf
mov
mov
movsl
je
or
fisubrs
dec
iret
xor
jb
jmp
push
jp
push
or
pusha
lret
lret
sub
pop
sub
sbb
mov
jge
nop
add
stos
aaa
bswap
or
nop
add
imul
mov
push
add
sub
dec
inc
popa
lret
lods
icebp
mov
subb
push
sahf
jle,pn
or
lcall
in
aas
jmp
dec
jl
iret
push
into
les
mov
shrb
pop
inc
dec
adc
sub
and
push
sbb
sbb
xor
int3
insl
out
jbe
sti
pop
cmpb
xchg
rcr
push
dec
adc
flds
inc
ss
jp
int3
pop
std
ja
xchg
das
sbb
stc
add
cmpsl
xchg
push
push
adc
xlat
jle
repnz
dec
and
inc
mov
enter
stos
popa
xchg
fists
cs
pop
adc
jmp
inc
and
jmp
rcr
ljmp
sub
lret
test
nop
je
add
cmpsb
jmp
fadds
mov
dec
ja
adc
dec
add
and
lods
fildll
push
xchg
out
leave
out
and
adc
ds
lahf
pop
sahf
mov
fidivrs
ss
dec
jecxz
pop
imul
pop
push
fisubrs
xor
jp
jo
addr16
jle
clc
push
add
test
stos
cmp
add
adc
inc
cltd
jge
jb
into
and
cmp
and
inc
leave
sbbb
mov
or
inc
jl
inc
add
and
fwait
jne
loope
pop
cmpsb
pop
inc
mov
mov
sbb
or
mov
or
repz
xchg
jl
cmpsl
outsl
pop
inc
add
pop
std
jecxz
outsb
cmp
arpl
int3
add
test
mov
in
mov
pop
pop
mov
or
enter
or
add
mov
aas
xor
lds
push
mov
repz
inc
arpl
je
adc
hlt
inc
and
pop
shlb
cltd
mov
fisubrl
and
bound
xor
jbe
dec
inc
mov
test
jns
jl
divb
fisubl
mov
dec
xchg
pop
add
jmp
jne
jmp
arpl
push
das
jge
cmp
mov
or
cmp
push
mov
fwait
jnp
mov
sbb
sbb
jb
push
cwtl
icebp
dec
push
and
xchg
pop
inc
mov
test
sub
mov
shll
cmc
push
ljmp
lret
mov
mov
add
je
insl
enter
pop
sub
cs
xor
in
aas
or
int3
sub
leave
scas
push
inc
lock
sbb
test
pop
imul
lock
mov
jl
pusha
leave
ret
mov
test
lea
test
push
or
adc
fistps
adc
and
je
ret
jne
lahf
sub
call
scas
fldcw
shrb
je
cmp
and
inc
idiv
xchg
push
test
add
push
mov
push
cmp
inc
repz
fcmovnb
lea
sbb
lods
sbb
xchg
das
daa
lahf
scas
jo
jbe
pop
std
fucomp
dec
cmp
push
gs
pop
leave
aad
fistl
ljmp
mov
mov
aam
sbbb
or
and
insb
lds
jge
sbb
dec
xchg
mov
dec
sar
js
cmp
xchg
jno
dec
ds
scas
mov
push
and
xlat
xchg
cmp
fiadds
mov
adc
jnp
mov
and
and
movhps
popa
inc
sub
loop
and
mov
fisubl
sbb
cmpsb
push
scas
xor
fildl
dec
add
into
push
subb
mov
sub
cmc
pusha
in
mov
dec
test
dec
cltd
ret
aad
test
xor
testb
inc
ss
sbb
push
cmp
fs
pop
mov
fcoms
subb
rcrb
jl
dec
push
ret
js
sahf
icebp
gs
dec
pusha
movb
mov
xorl
push
cmp
jae
aaa
xchg
hlt
fstpt
pop
ret
std
pop
jne
or
jne
mov
addl
add
pop
add
jne
inc
repnz
je
data16
xchg
sub
arpl
out
loop
ret
ret
gs
outsb
int
inc
mov
xor
movsb
xchg
dec
jmp
xchg
mov
fucomp
and
stos
mov
pop
ss
aaa
test
int
push
mov
cmp
das
xchg
mov
cld
test
stos
mov
or
cmpb
popf
xor
cmp
sbb
insb
lods
cmpsl
jle
aad
inc
push
fisttpll
push
addr16
xchg
leavew
test
pmaxub
inc
inc
ljmp
lock
nop
push
inc
pop
into
sbb
scas
xchg
outsl
adc
faddp
data16
cltd
adc
mov
xchg
or
insb
fwait
loop
test
xchg
gs
shlb
pop
daa
mov
lds
out
pop
bound
jmp
add
mov
js
pop
stc
push
test
jnp
jmp
xchg
cli
mov
or
call
shlb
cmp
push
pop
cli
int
aas
sti
or
inc
lods
inc
clc
mov
xchg
pushf
ljmp
or
out
sub
dec
jne
mov
pop
aam
outsb
in
daa
shl
xor
sahf
mov
inc
bound
cmp
cmp
lahf
mov
loopne
orb
or
iret
xor
sub
inc
sahf
push
jb
cmp
insl
pop
pop
cmp
sbb
push
nop
sub
ror
fistps
hlt
lahf
xchg
mov
jmp
or
mov
stos
out
mov
cld
fisttps
test
sub
add
mov
mov
pop
into
and
push
ret
or
push
push
jle
adc
gs
stc
lods
xor
pop
std
test
cmpsb
lods
popa
lea
fsubr
xor
or
add
filds
and
push
pusha
sbb
test
mov
cli
xchg
loop
sbb
jo
or
xchg
or
lahf
bound
mov
insb
popf
push
sbb
pop
nop
sub
jmp
mov
stos
subl
cmp
incb
pushf
out
xchg
fsubs
out
dec
scas
push
lret
repnz
ss
push
sbbl
pavgw
mov
dec
dec
dec
hlt
fbld
xchg
jle
xor
rcpps
xchg
push
lock
std
and
mov
add
mov
add
cld
and
outsb
idivb
push
gs
and
and
pop
mov
sub
jmp
add
and
add
test
loopne
jg
inc
mov
scas
jmp
popa
cmp
inc
aam
jnp
push
gs
test
std
stos
in
addl
pop
xchg
daa
mov
cmp
into
sub
dec
adc
push
jg
pop
mov
jge
and
sub
jo
icebp
jmp
pop
xor
lret
or
and
arpl
fisttpll
rcrl
or
adc
add
or
je
in
in
mov
repz
cmp
aaa
mov
and
and
cmp
repz
sub
jmp
dec
fisubrl
sub
lea
stos
aad
dec
andl
push
iret
lret
xor
jle
loopne
adc
dec
mov
mov
insl
adc
test
pop
ret
outsb
ficompl
mov
pushf
lea
cmp
sbb
movsl
pusha
pop
cmpsl
mov
imul
imul
xchg
push
orb
adc
out
out
mov
dec
mov
mov
push
adc
cli
pushf
out
xchg
test
add
in
dec
roll
jecxz
or
cmp
push
sbb
pushf
ret
xchg
push
xchg
mov
push
outsb
push
mov
xchg
push
pop
jge
test
int
jno
push
xor
inc
mov
and
sub
das
cli
pop
es
push
lock
cmp
cltd
jae
cs
jge
ds
mov
lds
inc
gs
sbb
out
jge
mov
pop
shll
out
mov
and
mov
out
je
js
push
aam
test
imul
inc
aaa
dec
push
push
adc
imul
mov
ret
dec
in
icebp
adc
cmpl
adc
out
cmp
adc
daa
xor
call
fcmove
mov
shlb
in
sbb
cmp
jnp
sti
loop
inc
mov
inc
bound
leave
sbb
pop
and
dec
stc
push
es
sbb
sti
sub
pop
mov
sbb
sub
sub
push
pop
sub
dec
jae
dec
notl
adc
cs
add
push
jp
es
xchg
push
loop
mov
push
cmpsl
jne
mov
xchg
stos
lret
cmp
pop
push
dec
or
push
xchg
sub
xor
pusha
in
fwait
pop
push
adc
xchg
fisttpl
push
gs
and
sub
cmp
sarl
xchg
outsl
pushl
dec
cwtl
mov
sbb
repnz
ret
dec
mov
mov
mov
xchg
xchg
add
negb
pushf
scas
jg
sub
jmp
iret
test
movsb
ljmp
mov
test
out
cmp
or
js
andb
nop
jle
popf
xchg
pop
fcmovne
jecxz
rcrb
addr16
fsubr
mov
fisubl
decb
call
adc
push
pop
xchg
push
mov
test
or
cli
fistps
sbb
into
or
shr
lret
sbb
pop
lcall
arpl
enter
mov
inc
xlat
cmp
mov
adc
jb
adc
sub
int3
add
add
cmc
inc
or
push
pop
or
mov
sub
out
je
aaa
test
je
and
ror
inc
imulb
cmp
cwtl
fisttpll
fwait
pushf
or
aas
ret
pop
aad
lcall
xor
mov
int3
iret
jge
mov
test
ljmp
xchg
shlb
cmp
sbb
jmp
or
inc
fisttpl
sub
jp
pop
roll
test
inc
mov
jno
repnz
pushf
jle
cmpsl
xor
stc
add
ds
in
push
cmpsb
sbb
mov
ljmp
movsb
stos
out
leave
adc
xchg
lods
nop
cmp
and
psubq
pop
xchg
and
movsb
adc
pop
imul
int3
pusha
movsb
cmp
mov
ljmp
outsb
dec
push
inc
lea
sub
add
push
hlt
aas
pop
call
nop
cmp
mov
mov
mov
add
ss
test
imul
pop
mov
jmp
xchg
jo
mov
in
dec
xlat
in
inc
lock
into
dec
sbb
mov
gs
xor
movsl
dec
inc
adc
nop
lcall
adc
mov
mov
arpl
dec
rolb
ror
fisubl
adc
mov
sti
xchg
out
jno
cmp
repz
aas
stc
sub
xchg
mov
imul
mov
fwait
jnp
push
and
mov
fdivrp
imul
and
pop
popfw
aam
mov
inc
push
sbb
cli
cmpsl
ljmp
mov
sub
idivb
dec
hlt
iret
lods
pop
push
cmp
xchg
jg
lods
popf
sbb
sbb
jg
jb
stos
xorl
clc
cmp
xchg
shll
jecxz
cs
mov
arpl
dec
cmpsl
add
mov
xchg
mov
inc
cmp
adc
nop
push
dec
rcrb
loop
insl
inc
sahf
pop
je
pop
xchg
xor
add
dec
in
xlat
mov
inc
mov
cltd
andl
hlt
stc
mov
adc
xchg
xor
mov
les
xchg
insl
dec
std
inc
imul
fidivl
sub
iret
lock
pop
imul
mov
jnp
xchg
cmp
mov
cmc
and
mov
sub
adc
or
rclb
jnp
dec
outsl
aam
loope
dec
imul
pop
outsl
mov
in
xchg
push
push
mov
fildl
out
in
aas
and
fs
arpl
shll
shll
mov
sti
hlt
in
mov
sbb
cltd
cld
gs
shl
test
xor
mov
mov
fisubrs
jns
rolb
in
mov
stc
mov
in
cmp
es
jbe
mov
mov
jmp
int3
test
pushf
daa
pop
sahf
cwtl
mov
mov
test
lret
mov
mulb
shld
pop
pop
xchg
mov
out
scas
fcom
xchg
push
push
cmp
add
fdivl
mov
pop
clc
lods
jl
and
rorl
aaa
and
push
icebp
stos
inc
add
sahf
sub
or
lret
or
inc
dec
sahf
std
insl
and
xor
pop
mov
mov
mov
lahf
arpl
movsb
aas
or
sbb
or
jmp
lret
and
pushf
inc
xor
dec
outsl
jecxz
insl
xchg
test
popa
adc
jne
test
push
xlat
fstl
out
jbe
sub
je
push
mov
or
inc
sahf
push
idivl
out
jae
jae
pop
jg
jecxz
inc
lcall
mov
daa
jecxz
sbb
cmp
lds
xchg
cli
nop
cmp
push
lret
popf
push
mov
push
sete
or
in
mov
movsb
stc
mov
push
loope
test
lcall
inc
jmp
adc
sub
mov
fstpl
push
mov
icebp
test
scas
pusha
lret
xor
mov
push
iret
dec
sbb
jo
dec
xor
cmpsl
pop
xchg
xlat
push
cmc
mov
or
ja
sahf
add
fwait
push
ja
lds
sub
std
shlb
or
mov
sbb
inc
and
mov
xor
ss
mov
push
iret
adc
xor
mov
clc
inc
pop
movsb
xchg
dec
lret
sahf
sahf
lret
jne
adc
pop
dec
sub
push
mov
xchg
mov
or
mov
in
pop
and
mov
and
inc
sbb
pushf
jp
out
xchg
jbe
pop
push
push
push
subl
stos
movsl
icebp
popf
fidivs
jmp
xchg
imul
xor
test
pop
push
out
dec
cmp
sub
das
mov
pop
movsl
adc
imul
movsl
ucomiss
nop
ljmp
inc
jne
adc
clc
pop
xor
cmpsb
ljmp
mov
mov
push
dec
out
aas
rcr
jl
xchg
cmp
lods
fisttps
jle
insl
ret
mov
xor
cmp
stos
pusha
pop
adc
xchg
ss
icebp
fists
adc
stos
fwait
add
push
mov
cmp
fcoml
mov
int3
jecxz
cmp
lcall
inc
add
inc
in
sbb
or
je
xor
cmpl
aad
adc
mov
mov
xor
push
cmc
pop
imulb
dec
inc
sub
repz
pusha
lret
js
and
or
or
mov
cmpsl
in
cltd
sub
sbb
das
sub
inc
lds
xor
mov
lds
cmp
rcll
sub
inc
jo
sbb
xor
inc
ds
dec
lea
mov
call
dec
scas
xchg
cmp
sub
clc
lret
sub
and
dec
and
lods
fldcw
into
add
push
lcall
ficomps
xor
push
push
enter
mov
push
jae
lea
mov
fdiv
rclb
mov
mov
inc
mov
mov
js
js
lcall
push
andl
dec
add
mov
mov
popa
inc
pop
mov
xchg
dec
stc
aam
stc
inc
xchg
pop
push
fisttps
push
call
int
mov
adc
into
and
iret
push
cmp
push
roll
rcl
ret
mov
xchg
rcrl
cld
pop
addl
icebp
sbb
sub
dec
push
jecxz
push
jb
mov
xchg
jb
movsl
mov
fdivs
pandn
mov
push
mov
js
sbb
in
mov
pop
mov
jecxz
aam
xchg
pop
pusha
inc
cli
xchg
add
inc
or
loop
jne
xor
pop
mov
nop
pusha
fneni(8087
push
mov
imul
xor
and
push
jne
pop
push
xchg
loopne
inc
cmp
dec
inc
fisttpll
repnz
push
shr
fnstcw
and
pop
sub
js
int
cmpsl
mov
mov
jmp
hlt
es
lds
push
cmp
pop
push
les
xor
cmpsb
shlb
mov
jmp
lcall
test
outsl
into
and
mov
cmp
dec
mov
add
ss
pop
sbbb
mov
add
push
mov
push
popf
mov
fldcw
lods
imul
add
scas
aaa
push
sub
test
cld
jb
lret
inc
sub
jl
lret
pusha
movsb
xchg
dec
push
and
dec
sbb
pop
or
mov
push
loop
cmp
ret
jnp
xchg
push
cmpsl
testl
mov
mov
mov
sbb
scas
outsb
jmp
movsl
mov
jnp
outsl
ja
cmp
cmp
out
lcall
push
mov
aad
les
insb
pop
mov
add
xorl
mov
std
sahf
rorl
pop
and
subl
dec
jle
fisubrs
lods
in
jmp
pop
pop
push
loopne
cmp
fnstcw
mov
addl
popf
outsb
inc
idivl
inc
ss
pop
out
pop
pop
cmpsb
popf
cmpsl
pop
fs
cmpsl
push
lods
pop
lahf
test
scas
cwtl
test
and
xorb
aad
dec
sub
sbb
subl
out
fdivrs
fwait
out
mov
cmpsb
push
xchg
mov
bound
and
mov
nop
hlt
rcrb
enter
movsb
inc
sbb
mov
inc
add
mov
xchg
pop
repnz
adc
notl
fadd
dec
stc
fimull
xor
or
push
pushf
in
push
scas
repnz
lahf
popf
and
pop
iret
out
and
add
inc
mov
xchg
popa
icebp
fisttps
addr16
sub
push
pushf
xchg
dec
dec
xchg
movsl
stos
cmp
sbb
ljmp
popf
cmp
cmpsl
mov
sbb
and
jg
lea
lea
sub
or
adc
mov
pop
outsb
mov
rorb
loop
pop
cwtl
xor
fwait
aas
test
test
loope
mov
mov
jne
push
mov
adc
push
cs
sub
cli
dec
sbbl
cwtl
into
fwait
loop
adc
mull
test
push
rcrb
fs
or
in
adc
ficoms
or
jno
adc
jmp
xchg
add
sahf
mov
push
inc
adc
cmp
adc
jmp
mov
fdivr
loopne
add
mov
lcall
adc
sub
inc
in
lret
dec
shlb
loope
mull
or
mov
mov
les
or
sbb
mov
dec
and
push
and
inc
inc
ret
xchg
adc
data16
out
int
cltd
jnp
loopne
and
jmp
int
xor
sbb
xor
sbbl
test
popf
add
push
xlat
push
jae
dec
cmp
or
mov
dec
mov
negl
gs
xor
pushf
cltd
scas
dec
cmp
bound
xchg
jno
pusha
in
sub
mov
insb
mov
movsb
jb
mov
and
cwtl
jae
ds
pusha
jns
sub
cltd
inc
mov
repnz
dec
cmp
in
pop
push
xorb
dec
cmp
push
scas
mov
cltd
roll
fisubl
jae
cwtl
cmpsb
sahf
stos
sbb
jno
ljmp
jmp
mov
sbb
aaa
rolb
andb
mov
pop
nop
mov
jecxz
push
jmp
outsl
xor
xor
stc
pusha
add
imul
and
xor
call
ja
fcompl
sbb
stos
decl
arpl
out
fidivrs
jo
and
mov
adc
inc
dec
mov
xchg
adcl
cmp
dec
mov
adcl
lahf
pop
fistps
mov
fidivs
pushf
push
into
xchg
push
cmp
push
push
mov
lods
xor
hlt
ficompl
jae
cwtl
aas
and
and
out
dec
shrb
invd
call
mov
push
das
or
xorl
sbb
adc
mov
mov
sti
add
andl
mov
mov
pop
push
push
test
xor
inc
push
stos
jp
test
jno
push
mov
add
xor
xchg
jle
xor
aam
test
sbb
jb
jbe
repz
mov
sbbb
dec
daa
add
xchg
push
jb
mov
push
adc
repz
push
xchg
sbb
sbb
pop
dec
fdivrs
push
stos
push
outsb
lret
sub
mov
inc
mov
iret
stos
cwtl
push
lahf
pop
mov
jbe
ds
jg
xor
dec
stos
cmp
mov
jns
out
iret
xor
pop
stos
push
into
xor
sbb
mov
dec
test
rep
adc
sbb
add
lds
cs
push
inc
or
pop
cmp
dec
lret
movsb
lcall
mov
icebp
loopne
in
sub
inc
jle
xlat
std
lret
adc
push
popa
in
data16
cli
sub
repnz
arpl
shlb
or
xchg
dec
fisubs
mov
sub
aas
add
jnp
lcall
inc
mov
cwtl
inc
fdivl
ficomps
xor
jl
ret
or
in
xor
out
sbbl
leave
mov
or
call
loop
pop
aas
mov
adc
fistl
mov
mov
loopne
mov
out
pop
ljmp
nop
aaa
xchg
popa
stos
mov
pop
mov
jb
das
xchg
add
xchg
jl
sbb
hlt
jmp
stos
andb
dec
sub
inc
cli
popa
iret
jno
popf
fwait
testb
inc
shl
mov
scas
lock
mov
icebp
pop
dec
xorb
push
lods
pusha
mov
jne
adc
loop
xor
jne
mov
lods
adc
std
sahf
cld
sub
pop
mov
icebp
xlat
push
les
scas
stos
mov
mov
jo
add
cld
mov
imul
pop
xor
lret
fs
push
sbb
mov
shlb
mov
and
iret
stc
dec
sbb
push
mov
push
add
lea
test
push
jae
aas
or
jbe
shrl
repz
dec
add
cmp
pop
neg
pop
pop
int
shl
mov
rcll
sub
jae
or
mov
push
fidivs
popf
sbb
nop
jbe
dec
sbb
jg
out
dec
xor
xchg
hlt
mov
sbb
jl
dec
repnz
movsb
xor
jns
mov
aam
aad
dec
repnz
mov
lret
cmp
xor
std
sbb
fisubs
out
out
xchg
and
icebp
mov
ds
lods
adc
inc
shl
ds
sbb
test
mov
in
push
jecxz
aaa
mov
out
fsubp
cmp
pop
mov
sub
sub
rcrl
aad
push
lods
pop
sbb
xor
and
shrl
dec
outsl
ret
inc
dec
pop
adc
jmp
mul
sub
mov
aad
ljmp
dec
and
les
add
mov
sub
and
and
int
dec
mov
push
testl
fisubrl
xchg
inc
inc
jl
mov
fidivrs
mov
pusha
jne
dec
mov
sti
add
push
push
cmpsb
pop
xor
js
les
xor
cli
pushf
arpl
jmp
sbb
icebp
imul
dec
outsb
adc
add
enter
cmpsl
call
out
insb
ret
pop
loopne
imul
lds
decb
jo
mov
mov
add
repnz
cwtl
mov
das
inc
sub
test
xchg
pop
sbb
push
sbb
aam
bound
out
jmp
clc
inc
and
out
popa
ret
pop
mov
cli
in
sub
shl
insl
sub
add
cmp
lock
int
dec
xchg
jbe
adc
fucomp
cmp
gs
push
mov
sub
xor
stos
push
xchg
inc
outsl
sbb
fcomi
mov
dec
ret
in
sti
lahf
xlat
and
jb
das
xchg
out
rcrl
shlb
jne
xor
stc
mov
outsl
insl
iret
mov
inc
or
xchg
push
push
pop
mov
imul
iret
dec
or
pusha
xchg
mov
and
jecxz
or
push
fdivrs
and
stc
xor
lahf
movsl
fs
out
jg
into
scas
inc
jge
xor
out
jno
inc
pop
sarl
mov
add
add
push
cmp
lret
add
bound
cmpsb
cmp
aam
je
mov
push
cmp
das
sub
enter
arpl
loope
xchg
bound
xlat
loope
scas
mov
dec
inc
inc
xchg
or
add
scas
and
inc
imul
cmp
xchg
xchg
cmp
push
nop
xchg
jns
mov
xchg
aam
insl
int
adcl
sub
lds
cmc
mov
push
mov
dec
mov
cld
test
mov
ror
cmp
add
fs
mov
int
lods
call
jge
jb
daa
sbb
jno
out
sbb
xor
popf
adc
and
ds
xor
shrl
sbb
push
jae
pop
jo
dec
ficoml
test
stc
int
fs
sub
adc
adcl
inc
in
fdivr
orb
ljmp
es
push
adc
push
sub
mov
jae
dec
lods
adc
pop
ljmp
add
ret
sahf
addr16
outsb
inc
add
shr
xchg
loop
inc
sub
pop
sbbl
push
jmp
xchg
outsl
aad
xchg
cmp
dec
xchg
stc
jp
popf
mov
lahf
ret
sbb
stos
cli
push
push
dec
pinsrw
lcall
sbb
lret
ret
mov
sbb
stos
adc
cmp
mov
pop
cltd
mov
mov
mov
fisubrl
cli
fdivs
imul
push
push
imul
jne
add
push
dec
and
faddl
mov
cwtl
out
icebp
mov
mov
and
leave
pop
add
and
push
mov
xlat
push
sub
dec
scas
loopne
dec
xorb
mov
mov
std
pop
movzwl
mov
mov
flds
jl
loope
lret
movsl
int3
jae
mov
push
jmp
mov
in
fcmovb
xchg
arpl
pop
jne
xor
cmp
xor
xchg
rcrl
testl
mov
in
pop
xor
std
popa
leave
shll
aaa
adc
lahf
and
mov
sub
sub
jbe
outsb
imul
push
jno
not
imull
add
mov
sbb
inc
mov
dec
lods
lret
jo
push
repnz
nop
cmp
in
out
dec
fldenv
jmp
das
scas
xchg
or
xor
lods
add
out
adc
xor
push
sbb
das
dec
xorb
jg
cltd
arpl
push
ja
cwtl
mov
in
sti
add
push
push
dec
jo
shr
dec
jae
lods
or
adc
mov
cmpsl
add
sbb
xor
movsl
nop
test
sub
pop
inc
xor
adcb
mov
push
bnd
aam
pop
pop
repnz
xor
xor
inc
xchg
jp
popfw
push
push
xchg
dec
aam
dec
lods
xchg
mov
rol
rcrl
ds
adc
test
mov
daa
int
sub
mov
into
adc
xor
aas
jg
stc
xor
clc
loopew
push
scas
sbbl
out
imul
rclb
fwait
cmp
mov
xor
cmp
stos
inc
rcrb
test
in
cwtl
add
cltd
std
xor
pop
push
mov
cmpsl
adc
pop
jo
add
add
pop
mov
adc
mov
repnz
test
jo
lret
cmp
gs
cmp
jne
shll
aad
leave
ds
shl
jb
lret
in
xor
in
movsl
lret
inc
ds
ljmp
and
dec
xorl
pop
test
and
jge
jo
pop
cld
loop
push
inc
xchg
adc
fdivs
fs
mov
psubsb
repz
and
jbe
push
xchg
pop
rclb
and
xor
inc
sub
icebp
stos
add
popa
sbb
push
pop
dec
jp
out
and
stos
loopne
call
aas
adc
pushf
xchg
jecxz
jo
mov
xlat
cwtl
inc
shlb
bound
aam
int
xor
fucomp
jns
push
aam
and
lods
pop
es
lcall
gs
testb
cmp
cltd
pop
lahf
loop
mov
in
ds
adcl
enter
pop
or
xor
mov
insb
test
mov
insb
or
pop
cmc
mov
test
push
pushf
es
pusha
dec
cmp
mov
sub
sbb
incl
std
lock
and
adc
nop
iret
mov
sbbb
ds
sub
dec
notl
and
or
out
mov
int3
add
pusha
adc
in
pslld
xchg
dec
popa
out
mov
dec
imul
jmp
fstps
imulb
mov
iret
cld
inc
dec
sbb
enter
push
lods
jne
sub
cmpsl
jmp
sahf
cmp
sub
pop
in
decb
push
call
mov
push
neg
jae
cmc
inc
or
pop
test
int3
out
sub
sarb
adc
and
push
ss
rcrb
outsb
inc
sbb
pop
mov
js
jns
add
aaa
mov
push
mov
inc
add
lret
loopne
testb
mov
push
cs
ret
arpl
sub
fwait
push
mov
adc
inc
in
xor
fcmovnu
mov
dec
xor
lahf
or
cli
cmp
inc
mov
test
push
jge
mov
xor
lahf
scas
cmp
sahf
pop
pop
mov
jmp
movsl
cmpsl
lods
cli
push
popf
fstl
xchg
cmp
test
jg
pop
fidivrs
je
dec
testl
xchg
mov
cltd
outsb
mov
pop
out
or
jle
jle
and
int
mov
outsb
lds
adc
imul
xchg
fs
int
lret
cwtl
lds
popw
inc
pop
and
push
scas
ljmp
cmpl
dec
mov
inc
loop
mov
mov
pop
test
aam
in
lods
outsl
dec
leave
cltd
mov
ljmp
popa
mov
fstl
adc
jne
cmc
mov
and
pop
es
jecxz
cmpsb
sbb
je
jp
mov
scas
pop
aad
jne
aam
stc
pop
in
pop
jne
add
test
mov
adc
and
pop
dec
xor
inc
xlat
mov
in
xor
lret
mov
das
pop
xchg
cmovs
xchg
loopne
bndldx
mov
aaa
icebp
repz
push
inc
sub
lahf
mov
aas
movsb
push
inc
ret
dec
pop
sarl
je
mov
fs
xor
dec
xchg
int
jle
xor
cmpsb
add
sub
pop
add
xchg
dec
sar
je
mov
pop
lret
pop
jg
dec
loopne
mov
mov
inc
jbe
call
sub
bound
xchg
scas
and
clc
push
mov
push
xchg
jnp
data16
test
inc
xchg
outsl
push
imul
jle
jmp
xchg
lds
or
test
push
mov
shlb
sahf
stos
cmp
fbld
adc
add
xchg
mov
insb
mov
sbb
adc
cmp
hlt
fsubrl
adcb
lahf
iret
pushf
shlb
fs
cld
pop
xchg
sbb
repz
aaa
xor
xor
pop
cwtl
xchg
push
ss
jl
shrb
das
sub
mov
mov
in
sbb
inc
ret
ljmp
repz
adc
rcr
or
xlat
mov
or
and
ret
aaa
test
pop
or
std
sarl
xor
cmpsb
ret
jecxz
outsb
btc
mov
mov
jmp
stc
scas
push
and
fs
std
mov
cmp
rolb
sbb
adc
iret
cld
mov
fistpll
aaa
sub
sti
fsubl
or
or
or
sub
push
push
dec
sahf
dec
and
mov
daa
pusha
adc
fcom
adc
and
out
push
xor
cmp
lods
push
mov
sub
les
loopne
jg
out
sar
int3
hlt
test
sub
jno
add
push
sbb
ljmp
out
subl
shr
hlt
inc
incl
cmpsb
mov
add
push
dec
mov
fcoml
stos
mov
movsb
sub
jmp
lods
or
arpl
in
fstp
into
fldenv
add
std
leave
mov
inc
pop
mov
push
es
or
cli
out
push
fucom
pop
xor
jnp
adc
data16
ret
aad
jae
fistl
fisttpl
sub
enter
fidivrl
neg
lds
sbb
hlt
stos
cli
cltd
inc
or
mov
sahf
mov
movsl
inc
push
xor
mov
xchg
mov
xorb
test
mov
gs
out
shr
insb
outsl
stos
jo
insb
cmp
movsl
cmpl
das
inc
pop
xchg
gs
and
mov
imul
sub
outsb
sbb
push
out
pop
jbe
or
or
mov
cmp
add
sbb
xchg
outsb
andps
xchg
pop
pop
xchg
pop
out
xchg
iret
rorb
xchg
inc
sbb
mov
xchg
stos
adc
lds
imul
fsubl
shl
dec
stos
xchg
aam
dec
sti
jo
sbb
repz
mov
ss
mul
pop
aaa
cld
in
test
mov
adc
fmul
fbstp
push
pop
iret
popl
cmp
dec
movsl
pop
fcoms
sub
ljmp
cmp
xlat
test
mov
shl
fnsave
xchg
jp
sub
rorl
mov
pop
dec
mov
sbb
mov
pop
push
mov
cwtl
mov
mov
loopne
mov
jns
adc
xchg
inc
mov
mov
cmpsb
mov
fdivrs
jbe
popf
jb
mov
loopne
test
repnz
and
mov
jo
cmpsb
js
cmp
lret
ret
sti
fidivrs
mov
jmp
or
inc
pop
xchg
jbe
rorl
cmp
jnp
repz
and
in
int
sbb
xchg
popa
adc
dec
dec
fildll
fwait
add
mov
inc
in
jp
in
sub
cltd
sti
cmovs
sahf
ja
fnstenv
xor
cmp
jg
adc
adc
sti
jle
outsl
popa
mul
xlat
dec
test
loopne
sub
or
mov
and
out
mov
je
pop
jl
jle
ljmp
mov
and
shlb
pop
dec
inc
push
cli
add
les
dec
out
mov
je
cwtl
and
push
cmp
mov
mov
cmp
or
mov
mov
in
sub
loope
push
stos
xor
sbb
mov
inc
arpl
pushw
mov
js
xor
sbb
and
jge
mov
push
adc
repnz
pop
jl
and
repz
lahf
jmp
lea
mov
outsl
or
out
rcl
int3
shlb
jno
out
shlb
fs
in
shlb
pop
sub
lcall
sbb
mov
ret
shrb
mov
sahf
xlat
divl
arpl
insl
jp
jns
fidivl
and
pop
jecxz
out
dec
xchg
fisubl
rcrl
inc
punpcklbw
roll
loop
out
hlt
cmpsb
pop
int3
stos
or
icebp
fmuls
lods
inc
mov
xor
or
nop
mov
sub
inc
iret
sub
pop
iret
cmc
pop
inc
nop
pop
daa
or
and
cld
mov
dec
pop
sub
and
loope
pop
in
lea
ror
inc
pop
cs
out
xchg
push
mov
adc
lock
and
fidivs
pop
enter
add
dec
jp
cmp
cld
mov
out
jle
lcall
insb
cmp
push
loop
es
pop
mov
sub
repnz
xchg
dec
aam
mov
cld
xchg
jno
pop
cmp
insb
or
xor
or
or
mov
adc
je
leave
jb
dec
lods
jbe
sar
mov
pushf
xor
dec
add
adc
push
sub
imul
jb
or
cmpsb
sub
push
shrd
ret
lcall
xchg
test
cmp
push
outsl
xchg
and
outsb
adc
int
inc
cmpl
hlt
cltd
and
hlt
push
out
mov
sahf
jecxz
icebp
adc
or
mov
mov
pop
or
aad
mov
pop
mov
aad
js
or
or
cltd
popa
lret
xchg
mov
ret
ret
jb
push
rcrl
mov
mov
stc
hlt
insl
inc
negw
in
jbe
push
add
out
pop
repz
push
cmpsb
daa
dec
add
shl
fbstp
adc
out
repnz
aad
out
scas
loope
pop
jmp
mov
mov
mov
and
push
cmc
adc
sbb
ret
mov
cmp
mov
mov
or
mov
lcall
jns
mov
incl
add
daa
stos
push
loop
cmp
test
jmp
lea
fstpl
loop
fnsave
mov
fmull
rclb
jg
adcl
inc
loopne
hlt
xchg
push
cmp
xor
pop
lahf
push
push
insl
mov
orb
mov
in
adcb
sub
cmp
mov
sti
pop
mov
testl
xchg
cli
inc
leave
out
outsb
adc
cmpsl
adc
stc
xchg
aas
or
xchg
cs
imull
xchg
adc
enter
shrl
aas
push
cmc
test
daa
pop
push
push
cld
sti
bound
int3
and
pop
imul
jns
pop
dec
lods
ds
mov
stos
dec
out
xchg
inc
add
jecxz
pop
adc
fwait
repz
cli
ja
sub
imul
out
test
cmp
sarl
sbb
push
mov
out
push
adc
int
aam
and
out
loop
test
add
add
adc
cmp
sbb
jl
fisubrs
imul
jnp
shrl
imul
mov
shlb
push
repnz
rcr
pop
in
cld
in
push
mov
imul
sbb
inc
popa
repnz
mov
xor
into
mov
rolb
nop
negl
dec
push
cltd
xchg
push
mov
ja
pop
es
repz
and
cmpsb
pop
cltd
mov
sti
cld
sub
sub
cmp
pop
inc
mov
aad
adc
insw
mov
jg
es
inc
inc
jo
gs
outsl
mov
cmc
stos
add
adc
xor
insb
and
jae
hlt
arpl
ret
jno
push
scas
call
lock
cmp
out
fdivrs
jmp
adc
ror
gs
ret
xor
lods
icebp
mov
jp
dec
stos
dec
xor
xor
cmc
xlat
xchg
jl
popf
insl
pop
sub
pop
jae
xchg
push
jnp
inc
hlt
push
jmp
cmc
roll
sbb
jnp
shlb
cltd
dec
or
or
mov
mov
xor
adc
hlt
lret
add
inc
out
jmp
sub
xlat
imul
inc
pop
ror
mov
outsb
pop
dec
sbb
jl
bound
xorb
aad
fcomip
stc
jmp
push
inc
js
rolb
fistl
out
test
imull
push
jmp
clc
ret
add
pusha
mov
test
ja
xchg
shrb
xchg
int
aam
jl
outsl
mov
sahf
push
lahf
pushl
mov
adcb
cmp
cli
test
add
cmp
push
adc
scas
lods
shrb
mov
test
sub
jns
push
out
into
les
movsb
sbb
in
outsl
or
adc
arpl
dec
mov
aad
dec
push
ret
scas
adc
rcll
mov
adc
mov
cs
movsb
mov
cld
stos
dec
cmp
aas
adc
sbb
mov
xchg
pop
mov
mov
dec
cmp
rorb
pop
mov
xor
cmp
adc
dec
mov
mov
cmpsb
cltd
lods
xor
mov
cmc
push
hlt
push
mov
sahf
mov
movsl
dec
mov
pop
adc
into
dec
loope
push
cmp
out
out
stc
pop
out
cmp
jecxz
and
xor
or
arpl
dec
lcall
inc
shlb
cmpsb
cs
dec
jne
popf
pop
out
mov
loopne
adc
pop
mov
xchg
jl
cmp
sbb
bound
sbb
mov
pushf
repnz
popf
scas
hlt
ds
lcall
adc
sti
fisttpll
fwait
les
loopne
fisttpl
out
push
mov
xchg
lcall
dec
push
addr16
dec
cmp
jbe
sub
loopne
lret
xchg
stos
je
or
dec
xlat
stos
clc
sbb
jo
fdivl
mov
leave
jge
and
and
jmp
mov
push
inc
arpl
mov
mov
addb
ret
jp
mov
mov
push
clc
push
push
das
or
jecxz
mov
ret
mull
dec
lahf
or
push
aaa
mov
xor
jp
stos
jl
rcr
sbb
in
adc
in
movsl
push
ror
add
dec
cmp
add
rclb
adc
mov
push
es
adc
test
xlat
adc
sahf
xor
ljmp
jns
decb
repnz
icebp
outsl
pop
fsubrl
fnsave
repnz
pusha
mov
pusha
in
add
es
push
stc
pop
xchg
jecxz
push
vandps
xchg
fists
addr16
mov
ds
inc
push
lret
dec
int
testl
lds
sub
addr16
insl
addr16
sub
adc
leave
sbb
sub
xlat
les
dec
xor
adc
dec
adcl
push
into
jmp
out
push
aas
lahf
dec
mov
sub
mull
push
sbb
jnp
adc
icebp
or
scas
sub
push
add
out
dec
fs
in
add
iret
out
or
jecxz
lods
mov
and
xorb
cmpsl
addr16
in
shlb
jo
fnstcw
repz
or
xor
shlb
lcall
cs
sub
xor
sub
mov
and
xchg
xchg
sub
sub
adc
and
popf
or
mov
fistps
sub
xor
enter
cwtl
mov
mov
out
fdivrp
mov
popl
jp
lcall
ljmp
sub
fdivrs
ljmp
xchg
xchg
dec
sub
rclb
cmp
mov
add
cmp
jnp
hlt
lahf
lret
mov
insb
test
es
sub
xchg
aad
dec
mov
loopne
xchg
or
mov
push
sub
cs
in
cld
push
jnp
inc
sub
imul
popa
push
dec
add
outsl
dec
pop
stos
mov
shl
push
ret
lret
loopne
or
adc
shlb
mov
mov
mov
fnstsw
mov
dec
cmc
jge
testb
mov
and
aas
cmp
jo
and
and
pop
mov
adc
cmc
test
imul
repnz
mov
xor
fsubr
out
lret
iret
xor
test
sbb
xchg
sbb
sub
mov
sub
jno
sbb
cmp
call
shrl
sub
cmp
mov
pusha
push
push
out
subb
fisttpll
out
popa
mov
xchg
popa
push
mov
cmp
or
mov
add
xchg
dec
cmp
jae
mov
and
pushl
pop
jg
dec
addr16
shr
cmp
mov
jns
pop
daa
jae
jo
mov
arpl
cs
xor
dec
mov
mov
sub
shll
stc
mov
insb
fdivr
fwait
push
xor
push
inc
pop
cmp
das
xor
pop
popf
mov
lock
sub
jns
and
lods
cwtl
sbb
cmp
decb
imul
popf
cmp
jae
xor
and
xchg
cmp
out
or
push
sub
cmpsl
mov
ds
mov
sub
scas
dec
sbbb
addr16
aas
test
sub
shrb
add
cs
in
shrb
push
and
xchg
or
lds
fadds
xor
dec
sti
pop
inc
into
fcompl
fsubrp
push
sub
mov
lahf
nop
loopne
nop
mov
fistl
ja
push
or
mov
mov
xorl
in
adc
sub
jge
iret
mov
call
out
fwait
dec
and
xor
pop
sar
leave
push
jmp
sub
test
cmpsl
lods
cltd
mov
and
ss
lods
mov
movsb
or
jl
loopne
lods
mov
cmpl
and
aas
xchg
mov
shlb
leave
and
popf
mov
sub
mul
pop
cmp
stc
lahf
inc
xchg
test
cmp
repz
pop
or
sbb
testb
mov
xorb
inc
imul
push
andb
xor
rcll
xor
lcall
and
mov
pop
pop
out
mov
cmp
test
or
mov
pusha
dec
xchg
and
push
push
rclb
jmp
jne
mov
cmp
mov
outsb
dec
sub
mov
inc
fldl
mov
inc
xor
cmp
test
xor
sub
mov
mov
insl
sbb
ljmp
push
pop
cmp
pop
or
sahf
in
out
lea
aaa
les
scas
movsb
mov
loopne
js
sbb
iret
popa
dec
sub
int
push
adc
and
cmc
xchg
mov
adcl
icebp
or
push
adc
scas
dec
das
in
lcall
sub
xor
adc
pop
lds
cmp
movsb
popf
xchg
xchg
add
cmpsl
es
ljmp
push
out
dec
js
sarl
imul
pushl
pusha
cmpsb
addr16
inc
ja
aam
pusha
dec
shlb
sub
mov
out
cmpsl
and
nop
jns
adc
leave
dec
pop
jbe
xor
jp
arpl
stos
lret
xchg
dec
das
enter
xchg
fildll
adc
push
icebp
sub
mov
scas
clc
fdivs
mov
pop
cmpsb
push
jg
arpl
push
xor
xchg
sarb
test
push
and
mov
sbb
sub
mov
lcall
mov
shl
sahf
ds
shlb
sbb
mov
push
cmp
adc
pusha
push
addr16
gs
xchg
lea
xchg
mov
aad
fcomps
add
test
and
scas
mov
mov
mov
subb
test
in
sub
jo
mov
jecxz
mov
or
xor
movsb
mov
and
imul
scas
call
nop
and
cld
cmpsb
popa
and
sti
shr
xchg
call
mov
jno
pop
jl
push
rcll
in
fdivl
cli
divl
lret
or
lods
jl
jno
movsl
cli
dec
negl
es
xchg
cmp
and
or
scas
xchg
mov
mov
cli
and
inc
cmp
xchg
inc
pop
les
dec
pop
sub
gs
inc
mov
push
das
inc
xor
cmpsl
add
pop
dec
test
dec
cmp
lds
inc
mov
sbb
in
mov
pop
jo
loope
out
mov
repnz
sbb
sbb
out
or
jmp
mov
in
in
pusha
insb
ja
aad
mov
fmull
jne
adc
lcall
and
ret
in
test
jnp
or
sbb
jp
push
lret
loopne,pn
and
movsb
push
mov
movsb
jp
jecxz
leave
stos
xchg
in
dec
mov
add
shll
popf
ds
sbb
push
test
dec
cmp
cld
cmp
adc
ret
popa
push
lds
bound
mov
add
arpl
xor
dec
sub
xchg
dec
pop
sub
jne
sbb
in
ffreep
push
fisttps
xchg
jp
pop
mov
or
mov
bound
mov
or
add
and
push
in
iret
and
add
and
jmp
xchg
arpl
outsl
cmp
test
inc
out
fiaddl
push
cwtl
fwait
into
sbbl
dec
dec
mov
stos
xor
gs
out
movsb
dec
ja
aas
lahf
repnz
mov
gs
dec
xchg
roll
addr16
push
xor
repz
sahf
lds
add
inc
es
lret
push
aad
addb
nop
pop
fs
sub
repz
and
mov
imul
movsb
push
dec
mov
cwtl
loopne
jmp
adc
clc
adc
push
pop
adc
sbb
aad
mov
mov
pop
gs
xor
bnd
mov
sbbb
aam
push
daa
pushf
aas
cmp
stc
mov
xor
dec
mov
xor
stos
xchg
xor
lret
sti
test
push
mov
mov
lret
mov
in
pop
test
adc
and
xchg
cs
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
sbb
pop
jne
cmpl
cli
sub
pusha
cli
xor
aas
cmc
fsts
in
mov
xchg
ret
stc
int3
add
push
ja
xor
std
icebp
push
ficompl
add
call
pop
push
pop
sahf
leave
rcl
jmp
iret
mov
sti
push
mov
xor
dec
mov
popf
cld
inc
lds
fisttps
push
mov
xor
pop
push
cltd
and
and
imul
pop
adc
pop
ds
cmp
xchg
fstpl
push
andb
adc
mov
mov
push
lods
pop
and
dec
cmp
popf
mov
in
arpl
adc
sbb
push
add
jle
and
lds
push
xchg
das
and
xor
out
pushf
movl
pusha
ds
xor
cwtl
aas
adc
lret
xchg
pop
jnp
mov
add
rolb
lahf
or
faddl
lds
js
je
jl
or
testl
loop
aad
mov
ds
xorb
aaa
dec
cwtl
add
mov
xchg
subb
jle
rcll
rcl
xor
push
xor
cmp
cmpsl
xchg
mov
out
xor
xor
pusha
mov
dec
sbb
xchg
jmp
pop
xor
outsb
in
xchg
sti
test
les
push
les
jno
jl
clc
inc
xchg
mov
sub
ljmp
or
mov
test
out
in
xor
or
sub
adc
mov
xor
adc
sbb
sub
push
repnz
sbb
mov
push
mov
ds
mov
idivb
iret
dec
mov
or
cmpb
inc
adc
xchg
stos
insb
les
dec
push
imul
lahf
test
insb
push
and
in
mov
xor
sbb
sbb
inc
inc
fs
mov
test
rcll
dec
dec
mov
int3
int3
sbb
xor
daa
aas
clc
dec
jns
or
inc
lock
out
jmp
data16
icebp
imul
lcall
mov
in
mov
mov
mov
icebp
xor
fldl
pop
cltd
cld
jb
and
shll
adc
mov
test
std
push
mov
mov
pop
pop
jp
xor
mov
push
xor
xlat
popf
inc
leave
test
jecxz
or
xorb
addr16
xchg
add
push
rcrl
sbb
sbb
fldt
daa
sti
imul
xor
and
insb
mov
in
pop
xor
adc
cltd
ret
xchg
push
cmp
enter
andl
mov
sbb
push
push
movsb
jns
push
sbbb
or
mov
mov
push
xor
sti
fldt
jmp
cmc
sbb
gs
fsubrl
loopne
sbb
dec
in
insl
and
xor
scas
scas
test
lods
lahf
out
adc
cld
push
adc
push
ja
or
pop
inc
cltd
push
dec
cwtl
fs
inc
cltd
add
icebp
inc
adc
cmpl
sti
cs
mov
mov
call
cmpsb
ds
mov
mov
adcb
mov
or
test
lds
mov
clc
repz
lret
fimuls
nop
hlt
test
xlat
adcl
inc
aaa
jmp
orl
shl
mov
cld
push
out
loopne
mov
mov
es
mov
pusha
xchg
or
inc
and
filds
in
aaa
mov
or
je
je
sub
shrd
pop
cld
mov
mov
mov
mov
rorl
pusha
cmp
sbb
dec
pop
imul
loop
jno
leave
in
dec
out
mov
push
mov
lods
jno
daa
add
ss
inc
fidivs
popf
stos
ret
sbb
jmp
mov
loopne
repz
lahf
adc
out
lret
scas
mov
pop
pop
xor
mov
push
lcall
cmp
inc
sbb
pushf
mov
dec
cmpl
cmp
ret
std
sub
xor
outsl
xlat
cltd
stos
cmpsl
incb
daa
push
push
or
pushf
push
push
xchg
scas
aam
mov
add
xor
jg
cmp
call
inc
js
sbb
fsubs
mov
sub
filds
loope
push
push
movsl
jns
std
mov
dec
inc
insb
stos
sub
arpl
mov
push
out
scas
pushf
loopne
shl
enter
je
inc
neg
dec
inc
out
xchg
mov
fwait
idivb
dec
jne
mov
jne
add
xlat
mov
ds
xchg
or
out
pop
notb
pop
fiadds
mov
mov
sahf
xchg
test
aaa
js
outsl
mov
sbb
xor
repz
lock
mov
add
test
imul
jp
rcl
mov
stos
cmpsb
adc
sub
xchg
inc
pop
std
aam
pop
inc
je
fisubrs
jecxz
push
mov
popf
gs
test
sbb
jno
jnp
lret
stos
ljmp
ja
dec
mov
cmp
jmp
inc
pop
movsl
fst
insb
pop
pop
rcll
loop
mov
sub
outsb
pop
aam
and
dec
shll
outsb
xchg
xchg
dec
and
ret
cmpl
dec
jae
sub
xchg
xchg
sbb
in
es
adc
xchg
imul
mov
mov
ret
std
jmp
addl
je
pop
lret
pop
notb
jecxz
dec
loopne
imul
or
loope
inc
in
mov
popf
add
xchg
xchg
roll
dec
xor
push
xchg
in
and
in
cmc
xchg
out
sbb
mov
cmp
dec
xchg
dec
sub
pop
adc
repz
pop
mov
sbb
jnp
sbb
rclb
adc
jecxz
scas
in
xor
mov
add
pop
addb
mov
pop
and
sbb
dec
mov
jmp
aad
fnstcw
pop
fsts
and
mov
cmp
mov
xchg
mov
sub
out
dec
enter
iret
subl
sbb
adc
and
outsb
mov
rol
dec
jl
cmp
mov
scas
push
mov
js
pop
in
pop
and
pop
mov
adc
lcall
pop
aad
int3
icebp
push
rorl
popf
push
jno
pusha
sahf
push
sbb
jns
push
add
jp
jns
mov
jl
adc
mov
inc
icebp
sbb
loope
mov
mov
mov
in
sub
pop
mov
aam
pusha
inc
push
mov
pop
ss
sbb
or
or
out
das
clc
jne
mov
jmp
jp
or
push
sahf
adc
mov
sub
jb
lods
stos
movsb
in
mov
cmp
inc
add
imulb
rorl
out
rcrb
jno
cmp
cmc
mov
in
push
loop
pop
sub
mov
int
inc
in
add
sub
sbb
mov
imul
mov
add
addr16
int
mov
lcall
dec
repz
dec
cmp
ja
ror
stos
pop
xor
jnp
cmpsb
cmc
add
rcll
inc
call
cs
pop
jo
jp,pt
jl
pop
push
or
imul
lcall
sub
mov
daa
outsb
cmc
sub
mov
out
and
movsl
mov
sbb
js
mov
arpl
mov
sub
cs
pop
scas
jnp
movsb
xchg
mov
and
int
cmpsb
and
lods
mov
cmp
sbb
add
in
push
mov
cmc
mov
push
mov
push
adc
mov
jecxz
rcr
fidivrl
mov
pusha
sbb
sbb
sarl
jo
pop
movsl
sub
fildl
jmp
pop
insb
test
and
fadd
jp
xchg
outsb
push
es
mov
and
or
mov
outsb
xlat
outsl
mov
xchg
loopne
stos
ror
or
jns
xchg
fidivrl
xchg
lock
pushf
xor
or
mov
and
or
xchg
movsl
sub
out
mov
insb
rorl
or
fcomps
cmpsl
fwait
pushf
and
outsb
insl
pop
inc
cld
popf
pop
mov
out
lret
addb
adc
lahf
add
add
call
and
std
mov
nop
in
inc
mov
jl
sub
xchg
adc
lds
addr16
adc
xchg
push
dec
push
nop
fcmovb
mov
and
xchg
sbb
rcrl
ja
push
pusha
jns
lret
or
int
mov
test
call
sbb
mov
pusha
pop
push
push
lcall
clc
lods
mov
xchg
push
fbld
cmc
and
push
adcl
adc
cmp
insl
arpl
push
mov
popf
cmp
xchg
insb
jb
push
stos
sar
push
push
stc
pop
xor
lods
das
jnp
add
xchg
add
xlat
jg
notl
je
jae
mov
rorb
push
add
out
loop
jp
mov
mov
fiaddl
cld
stos
cmpsl
stos
adc
out
mov
push
mov
mov
pop
sahf
mov
in
jno
lock
ficoms
imulb
dec
mov
iret
jo
or
mov
pop
mov
movsb
orl
cmp
jge
cwtl
inc
out
push
fistpl
fcomip
leave
lcall
das
jge
test
jle
jl
pop
je
cmpsb
dec
movsl
enter
mov
bound
push
inc
mov
or
mov
stc
fnsave
arpl
int3
dec
sti
mov
cmp
les
cmc
lods
sbb
clc
sbb
mov
movsb
hlt
adc
dec
ret
inc
or
movsb
call
lret
fisttpl
push
rolb
fcomp
or
test
ja
xchg
mov
inc
outsl
call
popf
loop
xor
mov
std
rorl
lock
mov
mov
sarb
lds
mov
out
insl
les
mov
test
jle
outsb
js
rcl
push
ljmp
xlat
push
sti
das
cmp
pop
test
rorl
inc
ret
imul
mov
push
movsl
cltd
xchg
push
push
out
lods
loope
sub
or
ja
popf
lret
xchg
xchg
xchg
pop
jae
dec
cmp
shl
fnstenv
dec
repz
pop
jne
jnp
xchg
leave
jbe
jb
call
fdivl
push
addr16
dec
mov
test
int
jp
frstor
xor
cmc
push
out
pusha
call
movsb
push
mov
inc
cmp
push
out
movsl
enter
mov
mov
enter
je
test
je
jnp
xor
imul
xchg
in
sbb
cmp
add
pop
inc
std
clc
or
sub
dec
pop
clc
stc
mov
lahf
pop
call
mov
xor
shlb
les
add
dec
rclb
jecxz
lods
loopne
mov
cmp
jnp
sbb
xchg
add
mov
cs
fldcw
push
xchg
ljmp
loopne
movsb
movl
mov
js
seta
sub
cltd
xlat
sbb
pop
ret
lods
in
lret
imull
sub
les
loopne
push
leave
loop
fidivs
imul
and
inc
sub
mov
subb
shr
ret
or
cld
push
add
and
add
iret
jg
dec
out
scas
jecxz
mov
adcl
enter
fs
aad
lds
fs
inc
sub
sub
sbb
aam
push
stos
cmp
imul
negb
jb
pop
xor
insl
in
cs
outsl
into
loopne
jmp
cmp
stos
xor
push
cwtl
or
mov
insb
cld
jmp
mov
std
sahf
pop
sub
popf
int3
push
jb
jle
push
lret
mov
lcall
shlb
push
inc
test
imul
inc
and
out
cltd
enter
pop
ud2
pop
push
mov
jne
or
scas
lahf
sarl
dec
in
je
cmp
mov
jecxz
xor
test
leave
push
js
insb
out
divb
popa
jge
out
pop
xlat
pushf
mulps
or
call
adc
or
movsl
imul
and
fwait
xor
sub
int3
dec
or
sbb
iret
aas
dec
inc
movsl
mov
ljmp
fimuls
ret
and
loopne
lea
jl
dec
les
scas
inc
iret
sub
enter
xchg
sti
icebp
ds
xchg
push
cwtl
sahf
jg
fs
fidivrl
jmp
addr16
pop
lcall
dec
lods
inc
out
mov
push
js
inc
mov
mov
hlt
mov
adc
dec
fdivr
pop
imul
mov
mov
pop
into
xor
insb
ds
movsl
inc
outsl
ja
sbb
lea
lret
ja
pop
adc
jmp
es
pop
arpl
xlat
gs
inc
pop
add
xchg
cwtl
int3
dec
jge
add
adc
dec
cmpsl
inc
mov
lcall
ficompl
ficomps
loop
sbb
insb
ljmp
cli
mov
fsubl
repnz
pop
sbb
mov
cmpsb
shrb
mov
mov
cmp
out
dec
lret
fwait
ljmp
loopne
int3
inc
push
mov
sahf
sub
test
push
xor
dec
js
popa
jns
enter
jbe
xchg
jno
pop
push
sbbb
inc
add
jl
shr
mov
fs
jnp
shll
mov
jmp
inc
pop
pop
xlat
mov
lret
hlt
clc
jmp
imul
add
pop
out
popa
jnp
pop
and
cmpsl
data16
lods
and
sub
das
xor
mov
int3
das
jmp
cmpsl
popf
cmpsl
sub
pop
lods
in
into
fldcw
xchg
pop
sbb
push
push
push
push
add
jmp
pop
in
cmpl
sub
pop
enter
sub
subb
shll
adc
push
testl
push
testl
push
mov
sub
jns
mov
push
mov
jne
cmp
arpl
bound
rorl
out
pop
aaa
mov
fs
lds
cmp
dec
jle
adc
sub
or
mov
out
sub
imul
pop
xlat
int
add
adc
jbe
sahf
jmp
add
dec
aaa
aas
aaa
push
fbld
mov
xor
wbinvd
icebp
mov
mov
mov
pushf
mov
pop
inc
xchg
hlt
cmp
xlat
add
jmp
outsb
shll
testl
outsb
addr16
pop
mov
mov
xchg
pop
in
adc
loope
add
in
xchg
mov
add
int
je
test
add
repnz
stc
push
xchg
addl
or
rol
je
imul
sub
add
dec
mov
std
mov
roll
test
and
xchg
out
in
call
test
les
xor
jecxz
lcall
testl
stc
or
jo
pop
out
dec
pop
frstor
and
sbb
cmc
and
push
pop
cli
pop
shrb
push
pusha
jp
lock
pushf
push
fsubrp
pop
in
fdivrs
sti
imul
into
mov
inc
fisubrl
mov
mov
shrb
mov
dec
ds
mov
mov
mov
fiadds
pop
and
fstps
in
ss
into
push
lahf
lock
stos
xchg
out
push
mov
in
sbb
mov
cmc
imul
or
sbbb
cmp
sti
insl
adc
in
push
mov
inc
lret
inc
idivl
xlat
sbb
add
pop
sub
ds
int3
cmp
sarb
cmp
inc
test
pop
mov
shl
ljmp
les
imul
jae
cmp
out
fidivl
shrb
adc
cmpsl
test
in
enter
scas
push
cmp
roll
dec
insl
in
mov
xchg
inc
mov
dec
inc
test
fwait
sbb
int3
es
inc
sbb
cmpsl
mov
jp
sbb
dec
sbb
mov
leave
sahf
jae
mov
cmp
push
rcrl
dec
push
daa
sahf
test
pushf
pop
enter
add
sti
aas
xchg
add
fwait
orb
and
and
mov
lret
adc
or
mov
pop
xor
push
lahf
mov
das
dec
push
cwtl
jne
mov
pop
shl
mov
xlat
popf
jnp
jecxz
sub
xor
sbb
pop
jecxz
xor
push
jbe
mov
xchg
les
sti
test
cmp
int3
shlb
insl
cmc
scas
std
pop
mov
subl
rolb
outsl
add
inc
js
icebp
aas
insl
jge
daa
xchg
fildll
cli
xor
and
repnz
xchg
ret
sahf
scas
fldl
dec
sbb
push
pusha
movsl
pop
aad
fidivrl
loop
cmp
mov
cmc
lahf
dec
xchg
jb
inc
pop
insl
cld
neg
mov
out
fwait
push
and
adc
or
xchg
sbb
jmp
aas
arpl
mov
jl
ret
and
add
xlat
out
pop
das
sbb
sarb
addr16
shr
repz
add
je
cmpsb
add
insb
movsl
aam
push
mov
push
sub
js
mov
pop
mov
and
fnstcw
mov
hlt
int
enter
sub
push
adc
roll
xor
call
mov
push
mul
cmp
mov
incl
jb
lret
mov
sbb
xchg
sub
push
pop
rcr
inc
fs
inc
aam
into
fsubl
movsl
enter
dec
frstor
enter
add
scas
adc
shlb
mov
rcll
push
dec
call
push
call
fnsave
mov
insb
sbb
push
rcrl
adc
xchg
or
in
jno
xchg
add
int
cmp
hlt
and
cmpsl
sbb
pop
mov
movsb
jae
clc
test
adc
xor
lret
lods
add
sub
fidivl
xchg
jo
xor
mov
lods
int3
ss
ret
adc
fdivl
into
sbb
xor
sbb
mov
fldl
and
out
jg
insb
pop
divl
rorl
adc
repnz
jmp
mov
nop
cmpsl
jg
bound
pop
call
cmpsb
sbb
pop
jmp
cmp
pop
dec
dec
pop
aam
or
cmp
dec
mov
push
stos
mov
test
cmpsl
jmp
lahf
pop
sbb
sub
push
daa
sahf
dec
mov
push
dec
fs
cmc
mov
cli
loop
mov
jmp
int
fnstcw
enter
sub
push
or
inc
lds
movsl
adc
adc
fistpl
insb
insb
or
xor
and
rcrl
mov
jge
mov
popl
dec
xor
decl
mov
inc
xchg
adc
xor
dec
push
xor
xlat
dec
or
pop
in
or
leave
inc
xchg
mov
mov
shrl
inc
ljmp
pop
ss
or
fdivp
mov
rep
sub
sbb
sbb
or
sub
iret
or
mov
jle
inc
rcrb
mov
shlb
mov
mov
enter
xor
xor
jbe
imul
xchg
mov
dec
add
lods
lcall
int3
hlt
ds
std
popa
and
jb
lds
rcl
cmp
add
mov
dec
fwait
jp
aad
lret
inc
pop
lods
xchg
loope
jl
cmp
push
mov
push
mov
add
add
pop
xchg
cmp
inc
shrb
in
push
adc
aam
icebp
gs
ljmp
adc
pop
push
mov
push
lret
xlat
pop
inc
cs
push
imul
and
and
adcb
adc
push
out
lret
repz
dec
pop
jne
xor
dec
xchg
ret
lods
imul
into
out
or
rcl
xor
sbb
pusha
fs
jno
ljmp
iret
std
iret
or
popl
add
sahf
xchg
and
mov
test
imul
add
int
pushl
andl
xchg
icebp
out
dec
mov
pushf
ficoms
push
xchg
mov
push
lock
dec
lds
shlb
mov
xchg
jbe
data16
pop
fwait
mov
fstpl
xchg
xor
test
test
lret
jo
inc
mov
push
out
sub
cmp
data16
shll
mov
add
scas
jle
icebp
cmp
jns
nop
iret
lret
inc
mov
jo
enter
push
push
push
sbb
pusha
pushf
enter
loope
cld
js
sbb
in
pop
into
daa
adc
sub
stos
fdivr
or
push
movsb
push
push
sbb
mov
daa
add
repz
inc
pop
lods
dec
inc
mov
loop
sarb
adc
inc
fbstp
paddsb
dec
roll
jle
xchg
jmp
aad
add
cli
jb
cld
std
cmpsl
loope
in
cmp
sbb
push
stos
mov
push
insb
xchg
lods
cmpb
inc
sub
add
and
jg
push
call
lahf
jo
lret
add
ret
je
adc
ret
jb
movsb
repz
pop
icebp
sarb
xor
sbb
loopne
pop
xchg
push
ret
lret
mov
sub
pusha
push
inc
lds
and
xor
insl
aas
xor
add
jecxz
aas
cld
out
xchg
dec
cld
out
jp
xchg
cld
stos
or
imull
orl
dec
jne
mov
pop
xchg
test
jne
ret
int3
movsl
add
fldt
shll
jo
lret
outsl
loop
add
cli
sarl
aad
pop
mov
sbb
ss
xor
loope
ret
fwait
or
stc
add
stos
out
test
xor
cmp
mov
or
cmpsb
jnp
mov
pop
aaa
cmp
insl
pop
xchg
inc
mov
xor
pop
dec
wrmsr
call
sti
cld
shrl
jmp
call
js
sbb
ss
pop
fistpll
roll
pop
out
mov
cld
mov
adc
das
adc
dec
arpl
pop
pop
rcl
cmp
sti
lds
cwtl
jle
gs
int
dec
insl
cltd
add
sti
mov
mov
int3
push
outsl
sbb
or
out
xchg
ret
loopne
sti
xchg
fdivr
lods
loop
mov
jecxz
int
addr16
add
lea
sbb
mov
test
dec
rol
lods
out
xor
cmp
push
mov
inc
popf
add
sub
pushf
xor
popf
sbb
add
inc
pusha
adc
jp
mov
or
cmp
mov
mov
pop
dec
jl
inc
inc
rorl
fisttps
fcomip
jmp
xor
push
xor
inc
push
divl
test
ror
jne
xlat
scas
cwtl
loopne
or
sbb
mov
dec
push
popl
insl
ficomps
xor
jge
subl
sbb
jp
dec
mov
mov
idivl
xchg
add
pop
mov
rcrb
dec
or
vxorps
hlt
out
mov
testb
data16
dec
in
arpl
mov
leave
test
movsb
or
sub
and
sbb
and
aas
cwtl
scas
push
push
fs
sub
cmp
adc
loope
sub
ss
shll
jae
add
pop
cld
cmp
adc
dec
fs
aas
jl
push
imul
push
jge
jno
and
iret
jl
lock
int
push
mov
movsb
push
inc
jmp
add
fwait
sub
jbe
outsl
jo
stos
fstpt
clc
sbb
and
cmp
jns
movsl
push
add
faddl
dec
mov
sub
leave
cmp
mov
inc
scas
movsb
data16
push
in
push
mov
jb
outsl
mov
loope
xor
int
mov
xchg
mov
int3
sahf
xchg
dec
jae
pop
xchg
stc
sub
movsl
lods
daa
iret
push
shrl
pop
push
test
pop
jnp
dec
adc
setne
outsl
mov
in
leave
push
xor
enter
and
je
cld
dec
or
xor
and
dec
popf
andb
out
cld
pop
xchg
xchg
cmp
dec
orl
pop
lods
ret
mov
cmp
test
jecxz
in
push
or
vpshufd
out
lret
scas
xchg
mov
inc
add
jp
mov
mov
sti
cmp
push
jmp
jnp
jg
popa
test
dec
add
int3
lds
sub
push
mov
or
fldcw
insb
outsb
aad
inc
stc
sbb
mov
cmp
jnp
fucom
xchg
movsl
sub
out
aas
lret
push
aam
push
sub
shlb
in
insl
lret
push
mov
sbb
and
inc
sbb
mov
push
mov
jns
rclb
jmp
xor
xlat
cwtd
push
ret
out
inc
fdiv
cmpsl
stos
mov
xor
push
ret
mov
pop
or
push
insl
fs
leave
ret
jl
iret
mov
adc
sbb
mov
or
nop
dec
mov
out
dec
aaa
loop
and
sahf
push
adc
mov
stos
push
das
push
jl
mov
das
or
inc
gs
mov
dec
insb
jg
adcb
jecxz
or
mov
fwait
sbb
sbb
aam
jnp
inc
popa
push
push
jecxz
push
and
adc
jl
into
cs
adc
push
or
jne
dec
and
push
jge
dec
xlat
int
js
mov
stc
fld
fld
movsb
outsb
dec
lods
mov
sti
mov
inc
jb
mov
jnp
fldl
ss
divl
cmp
cmp
cmpsl
or
xor
hlt
mov
cmp
arpl
push
cltd
mov
xchg
lret
or
repnz
mov
sbb
inc
lcall
add
add
ljmp
dec
mov
cltd
bound
jbe
repnz
xchg
jmp
pop
jb
lret
leave
push
std
inc
mov
and
mov
jecxz
loop
sub
je
inc
int3
sub
mov
jne
pop
aad
adc
repz
lret
xchg
out
stos
popa
ja
add
add
cmp
icebp
stos
pop
cli
dec
stc
cli
xchg
inc
jo
and
out
pop
cli
aam
int3
inc
in
imul
test
out
testl
xchg
dec
cli
loop,pn
mov
dec
inc
rolb
fists
shr
and
dec
push
popa
xchg
jno
aas
test
movsl
movsb
int
jg
cmpsl
popa
movsl
daa
add
fcomi
cmp
fwait
mov
mov
xchg
xchg
je
and
mov
ja
cmp
in
and
leave
cmpsl
xchg
xchg
dec
jne
jne
push
add
imul
dec
outsb
mov
mov
jbe
dec
add
mov
fisubrl
jg
outsb
cmp
addr16
jecxz
mov
push
mov
iret
adc
xor
insb
icebp
sahf
pop
push
js
fsubrl
daa
sub
sub
lods
lods
sub
push
pop
adc
xor
push
mov
ljmp
cmp
cmp
or
add
icebp
stos
or
ds
dec
pop
cld
sbb
out
push
or
lret
data16
movsl
lods
hlt
mov
push
jno
mov
in
xor
aad
dec
add
scas
cli
or
push
hlt
cmpsb
je
sub
dec
push
jno
pop
jbe
call
cmp
mov
fbstp
or
arpl
hlt
sub
int
mov
inc
add
ja
loop
mov
test
cwtl
or
xchg
or
pop
rcl
dec
insb
mov
sar
aad
ret
icebp
mov
rol
mov
fisubrl
push
xor
pushf
cmp
cmp
pop
xchg
je
xchg
mov
clc
xchg
out
xor
inc
add
hlt
xchg
cmpsl
pop
or
push
outsb
sbb
fidivs
fs
mov
jo
lahf
ret
inc
sbb
push
mov
or
xor
adc
xor
and
jno
dec
mov
push
push
mov
sub
in
sbb
jg
pop
push
insb
das
je
arpl
xlat
lret
jb
data16
cmc
mov
lret
sti
pop
xchg
lahf
movsb
dec
dec
jle
xor
mov
and
insb
lock
mov
lret
xchg
mov
xchg
adc
or
xchg
sub
dec
lret
push
aad
cmp
in
aas
xchg
fisttps
add
add
push
xchg
cmpsb
fisttpll
insl
pushf
scas
mov
xchg
stos
stos
adcb
add
push
sbb
adc
mov
sub
mov
aaa
cmp
testb
inc
je
sbb
dec
sahf
fildll
loope
mov
jp
hlt
ret
jnp
sbb
mov
sar
in
mov
lret
jno
lds
cli
mov
popa
or
call
jne
mov
adc
adcl
add
jle
call
lods
cld
inc
and
test
arpl
in
push
and
loope
or
cwtl
pop
pusha
sti
scas
lea
jae
repnz
mov
lahf
xchg
cli
or
add
inc
add
aas
fcomip
loopne
xor
fisttpll
cmp
inc
cmp
cmp
outsb
jno
xor
mov
lret
ljmp
or
pop
andb
pop
xlat
pop
push
dec
mov
dec
shrb
xchg
and
js
mov
add
sub
jne
bnd
ss
sbb
cmp
push
add
jbe
popf
test
fsubrs
decb
shll
push
adc
insl
aad
icebp
add
aam
and
and
lcall
mov
lahf
dec
pop
adc
movsl
clc
ja
mov
and
inc
fs
mov
mov
mov
jg
dec
aaa
cmpsl
stos
add
lcall
mov
js
inc
nop
adc
jle
pop
jae
sub
add
mov
jmp
dec
mov
xchg
or
jecxz
inc
cmp
sub
inc
setae
dec
mov
or
cmp
jge
pop
mov
addb
mov
int
xor
enter
insl
xor
xchg
aam
fbstp
ficomps
cmp
adc
loop
insb
pmaxub
out
pusha
jl
stos
arpl
and
dec
pop
cmp
lock
repnz
cmpsl
pusha
decl
xor
add
xchg
cwtl
mov
je
lock
or
or
test
mov
cmp
cld
cmp
push
int
sbb
add
shll
mov
lock
insl
addl
in
xchg
cmp
in
xchg
fstl
mov
loop
iret
pop
lock
xor
add
or
and
leave
xchg
mov
push
pop
aaa
movsl
xorl
jmp
sub
dec
dec
out
pusha
outsl
xchg
lcall
mov
xor
push
insl
jb
mov
jae
pop
fsubs
push
shrb
aad
shll
aam
popa
out
mov
std
adc
jb
cli
notb
movsb
in
sub
test
mov
mov
cmp
sahf
inc
fiadds
push
lret
mov
sub
sub
aaa
pop
nop
pop
fs
jge
and
jnp
jmp
test
ret
das
inc
adc
add
mov
mov
mov
cmp
fildll
cmp
pushf
pop
xor
in
mov
out
xchg
js
adc
icebp
iret
xorb
rol
adc
movsb
add
or
xchg
sub
mov
lea
nop
jge
lea
dec
dec
lret
in
pop
lods
out
cld
out
add
mov
inc
cmp
outsb
cmpsb
popf
jae
subb
rcrl
sub
repz
int3
cli
push
cmp
or
jbe
xchg
xor
and
jns
cmp
outsb
clc
sahf
jmp
jne
xchg
pop
insb
or
xor
in
lods
fcmovb
popa
ds
sbb
inc
mov
sub
push
daa
out
fidivrl
sub
cmp
mov
test
scas
lcall
pop
xchg
pop
mov
arpl
or
addr16
xor
cli
testl
test
in
out
nop
push
or
scas
jmp
adc
in
jl
lods
in
lea
lea
fldenv
adc
pop
xchg
sub
cmp
std
mov
pop
scas
and
mov
push
scas
jmp
hlt
sahf
jns
inc
sbb
jg
and
faddl
mov
inc
jecxz
add
dec
pop
dec
sbb
arpl
sub
sbb
push
cli
xchg
add
nop
adc
xor
hlt
or
dec
cmp
and
pop
mov
lret
mov
imull
icebp
test
scas
and
jo
dec
push
icebp
popf
and
movsl
cmp
sbb
jmp
jp
xor
cmp
add
and
pop
xchg
cmpsb
inc
adc
in
pop
ja
testb
neg
jns
and
nop
repnz
sbbb
repz
adc
imull
mov
cmp
mov
scas
arpl
fs
push
mov
stos
and
sbb
sbb
add
movsl
fldl
mov
mov
sti
cli
out
adc
inc
pop
mov
in
inc
and
cmpsb
into
loop
iret
sbbl
shlb
inc
das
push
cmpsb
mov
fbstp
into
cs
dec
fisttpll
mov
imul
jo
outsb
outsb
iret
dec
sahf
out
xchg
jno
mov
jae
jb
pop
dec
inc
or
push
sub
mov
mov
mov
int
xor
or
ds
xchg
add
addr16
cltd
insl
bound
jne
sub
lea
adc
mov
fdivrl
inc
sub
push
dec
repz
xchg
pop
inc
push
movb
imul
daa
ss
nop
adc
add
jecxz
das
pop
push
fdivrs
pop
add
mov
sahf
xor
dec
test
aas
bound
les
inc
and
shll
fs
into
cmp
mov
out
cmpb
js
ror
dec
mov
cmp
adc
aaa
pop
cwtl
pushf
cmp
or
arpl
mov
out
inc
and
mov
or
jmp
inc
push
fs
mov
cld
and
pop
roll
inc
jbe
fs
adc
cld
sbb
pop
jne
mov
push
jp
cmp
sbbl
jb
sti
mov
addb
fdivrl
push
cmp
xchg
pop
fwait
sub
repnz
and
push
and
cmp
lock
scas
outsl
add
pop
mov
xor
pop
div
xchg
mov
xchg
xor
xor
mov
iret
sub
or
dec
fadd
sarb
xlat
add
movsb
std
mov
cmp
outsb
lret
xor
dec
popa
into
imul
ja
addb
and
adc
mov
mov
and
jnp
and
sub
add
jae
mov
mov
dec
pop
mov
mov
push
xchg
jp
jno
fildl
sarb
sbb
in
jle
add
cmp
inc
adc
outsl
cwtl
xlat
add
stos
fsts
push
and
inc
inc
sub
add
lds
inc
mov
flds
scas
movsb
add
mov
nop
mov
fcomi
adcb
fwait
mov
mov
xchg
sbb
xor
xor
sbb
xor
bound
pop
cmc
scas
xchg
cld
rcrb
pushf
mov
in
cmp
sub
or
lret
dec
arpl
in
and
sub
jne
inc
stos
call
subb
cltd
aaa
pop
ja
fisttpl
and
cmp
mov
std
mov
rorl
jle
ror
or
cmp
ds
mov
inc
cmp
inc
sbb
outsb
pop
dec
movb
cmp
cmp
mov
insb
lret
dec
mov
faddl
mov
mov
lock
dec
xchg
cltd
sbb
mov
mov
in
dec
sahf
stos
add
out
imull
sbb
xor
loop
ffree
dec
push
and
pop
mov
inc
btc
xchg
push
clc
xor
jle
arpl
nop
dec
adc
jno
int
add
jnp
mov
and
iret
scas
mov
mov
inc
mov
sarb
mov
mov
fs
add
mov
sub
and
inc
flds
dec
lcall
shrl
sbb
and
fstpl
out
test
nop
xchg
mov
mov
out
int3
pop
mov
push
adc
cld
mov
lods
inc
loope
inc
ja
mov
nop
in
cmp
repz
add
jne
pop
jl
std
jecxz
inc
or
inc
jmp
ret
stos
loopnew
push
inc
pop
jl
into
cli
push
rorl
fwait
xor
bswap
fstpt
cmp
jo
sub
faddl
pop
imul
adcb
lret
jle
fcoml
inc
popf
cmpsb
xchg
clc
lods
adc
out
gs
aaa
ret
rcrl
arpl
ss
add
jle
add
sahf
add
ss
mov
and
or
out
not
jmp
jnp
sub
insb
cli
xor
jne
add
xlat
push
shlb
sbb
mov
sarb
and
test
adc
dec
testl
mov
in
push
sbb
cmp
dec
sbb
cwtl
js
xor
adc
jbe
adc
mov
and
mov
stc
fwait
out
rolb
pop
shrl
or
into
sbb
mov
in
sahf
fidivs
daa
push
adc
xchg
out
loopne
test
adc
into
fists
ret
xor
iret
dec
xchg
std
dec
mull
xor
pusha
mov
fdiv
jle
xor
adc
push
cs
add
sub
test
movsb
inc
int3
jns
dec
inc
jecxz
sbbl
fisubl
loopne
jp
inc
sbbb
xchg
fisubrs
mov
jo
push
out
test
xor
dec
pop
push
jo
sti
aad
push
inc
xchg
jecxz
inc
jmp
mov
sub
sub
mov
into
sbb
or
lcall
fwait
sbbb
incb
insb
dec
push
imul
xlat
inc
ffreep
dec
aaa
push
pushf
stos
mov
pop
ja
cmp
jl
jg
imul
xlat
pop
cltd
or
jg
and
loopne
jmp
ja
loope
push
prefetch
in
inc
cwtl
dec
dec
cmpsb
std
sbb
pop
cmc
push
xor
mov
mov
leave
test
mov
pop
popa
fcomps
cmp
std
cli
aas
repz
and
aad
sbb
jnp
lock
mov
xchg
xchg
sbb
jo
pop
inc
mov
mov
test
push
fsubrs
mov
sub
xchg
pusha
push
jno
lcall
daa
mov
sub
xor
repnz
dec
popf
dec
ljmp
cld
push
push
and
fistps
clc
out
and
xor
pop
je
or
loop
mov
test
hlt
jmp
jae
stos
inc
xchg
fsubp
mov
sub
pop
cld
mov
xorb
daa
xor
in
fstl
sbb
jmp
push
ss
inc
insl
and
mov
pusha
pop
repz
or
std
cmc
push
test
and
sbb
mov
pop
lahf
jb
movsl
pop
jne
out
repnz
rclb
lcall
push
add
scas
jae
sbb
loope
mov
dec
xor
push
popf
pop
xchg
mov
or
sbb
ret
xor
fstl
inc
push
mov
xchg
mov
push
sub
or
test
popa
push
orb
popfw
xchg
enter
mov
cmpsb
gs
int3
mov
push
scas
push
clc
lods
xchg
xchg
and
sarb
cmp
sub
mov
add
jo
xchg
insl
cmpl
push
nop
and
mov
adc
daa
or
mov
aad
into
ljmp
mov
fsubp
test
fstps
insl
mov
push
stos
dec
scas
xor
xchg
mov
cmp
xchg
adc
push
test
inc
fxch
scas
call
pop
notb
or
stos
into
or
xchg
push
mov
jge
push
cli
clc
and
sub
cmp
jge
shrb
dec
push
rcr
xor
inc
stos
adc
xor
insl
mov
mov
stos
cmpsb
cs
in
adc
jl
idivb
xchg
mov
sbb
popf
insl
mov
add
sub
das
scas
pushf
push
add
movsl
sub
movsb
mov
xchg
or
inc
andl
pop
or
add
hlt
int3
scas
addr16
adc
jae
ret
lods
out
adc
popa
xor
shlw
mov
fmull
pushf
js
push
test
push
xor
xchg
rorl
pop
movsb
lcall
mov
movsl
pop
push
and
arpl
pop
jo
push
sub
pop
fstpt
sub
faddl
gs
movsb
push
cmp
pop
gs
in
lds
lcall
fldl
adc
pop
hlt
mov
sbb
push
mov
mov
push
loopne
dec
mov
adc
xchg
insl
clc
cmp
sbb
cs
pop
xor
dec
mov
inc
in
mov
lret
push
imul
push
xchg
add
jae
cmp
jo
cmpb
enter
inc
inc
loope
fldenv
xchg
sub
cmp
pop
cmp
mov
push
mov
sarl
shlb
fstpt
hlt
hlt
xor
call
mov
ja
add
fs
jns
sti
push
repz
xchg
sub
and
stos
sub
addb
cmp
inc
inc
mulb
cs
test
mov
adc
mov
fcomps
sti
repnz
out
adc
or
int
push
ficoml
mov
subl
push
mov
sbb
cmp
gs
divl
jle
dec
push
xor
ds
sti
jmp
xchg
pop
sub
mov
jbe
lea
jno
mov
mov
xor
mov
fwait
cmpsl
packssdw
push
dec
sbb
andb
cltd
mov
dec
fisttpll
outsl
sbb
imul
pop
je
mov
scas
add
or
fs
pop
pop
fisubs
stos
lea
rcll
sbb
insb
or
jp
or
xchg
fsubs
or
mov
in
xor
pop
pusha
pushl
xchg
decl
jle
mov
sbb
cmp
push
lcall
jge
mov
inc
mov
adc
jb
jg
ret
cmp
xor
push
scas
sarb
inc
std
out
sahf
les
lods
xor
je
mov
mov
jg
xchg
movsl
dec
push
push
or
sbb
xchg
andb
lahf
into
sub
aam
je
out
aam
mov
movsb
jge
mov
fldlg2
or
mov
push
xor
dec
jge
lea
mov
lods
into
ljmp
shlw
mov
dec
adc
cs
repz
out
lods
push
sbb
ss
mov
mov
inc
in
out
mov
add
arpl
notl
xor
stos
js
jae
mov
mov
xlat
es
add
inc
lods
mov
in
fadd
lock
adc
fmull
mov
sub
out
popa
push
mov
mov
jne
cmpsl
mov
jb
push
iret
sub
inc
aam
push
daa
jle
xchg
pop
das
xchg
or
mov
cmp
imul
add
dec
std
push
xor
lods
fsts
rcrl
testl
pop
mov
mov
fwait
stc
sbb
or
pop
fwait
lds
cs
sub
aad
sti
cltd
in
mov
add
xor
stc
fiaddl
leave
aaa
xchg
insb
adc
xor
aas
pop
ss
xor
cmp
pop
es
dec
in
scas
sub
in
stos
jns
jge
pop
push
push
clc
mov
out
ret
lea
dec
into
pop
into
scas
ret
xchg
ficompl
std
and
mov
xchg
mov
mov
daa
fsubrs
icebp
lret
out
xchg
add
mov
xor
out
loope
gs
dec
lock
test
lods
lahf
out
fs
inc
adc
stos
pop
adc
cmp
nop
push
loopne
sbb
adc
and
jle
inc
mov
bound
pop
shl
push
mov
add
neg
stos
sub
scas
pop
sarb
inc
pop
cltd
popf
xchg
push
sar
xchg
push
adc
cmp
cmp
xorl
xor
notb
sbb
dec
mov
xchg
inc
and
sti
lods
mov
jo
sub
dec
test
ss
jns
call
mov
dec
sub
inc
lods
rolb
jle
jno
dec
incl
mov
mov
add
rorb
xor
cmovbe
enter
repz
sbb
push
nop
lcall
pop
and
pop
in
sarb
pop
mov
push
lret
loopne
cmp
ja
fcom
xchg
xlat
shl
out
iret
leave
push
fiaddl
lods
mov
imul
add
jmp
pop
inc
gs
ds
repz
repz
xor
mov
xchg
jne
in
xor
popa
inc
faddl
adc
push
mov
dec
aaa
popa
or
lret
jae
or
push
imul
ret
jne
repnz
mov
adc
arpl
das
leave
dec
or
hlt
xchg
mov
push
jl
sbb
add
and
jbe
jnp
xchg
add
loopne
inc
sti
pop
dec
inc
scas
test
xor
mov
cmp
sahf
stos
mov
push
mov
sub
inc
outsl
xchg
inc
xchg
sarb
push
dec
pand
imulb
ret
call
jns
jae
leave
fadds
fildll
les
push
inc
lock
jg
repz
xchg
or
mov
sbb
push
cmpsl
sar
pop
das
xchg
xchg
outsb
out
ja
jg
xor
add
in
lea
pop
lds
mov
mov
and
cmpsl
leave
add
push
shlb
push
or
mov
imull
ficoms
jmp
aaa
lods
js
xchg
xchg
sbb
mov
adc
je
dec
jge
test
mov
das
sbbl
adc
roll
pop
ds
xchg
mov
or
mov
xor
cwtl
mov
mov
jns
insl
daa
in
inc
push
push
aas
pop
insl
out
ss
fwait
test
std
sub
test
inc
pushf
push
in
mov
xor
xchg
sbbb
inc
loope
jae
mov
jno
jne
mov
out
js
xchg
mov
mov
adc
out
shll
xor
call
daa
imul
iret
idivb
and
test
mov
data16
cmp
cmp
xchg
xchg
les
inc
xchg
inc
ficoml
jae
int
imul
mov
jecxz
push
aas
aam
stos
push
pop
push
pop
mov
sti
fs
ds
testl
jge
xchg
push
jge
cmp
pop
shr
cs
jae
dec
pop
lahf
push
daa
push
jo
dec
dec
and
cwtl
inc
pusha
jmp
addr16
cmp
inc
pop
addr16
mov
mov
xor
test
test
out
push
dec
call
fdivrs
mov
add
push
into
xor
and
in
pop
inc
adcb
imul
outsb
sub
mov
shll
movsb
ret
and
lea
das
mov
jmp
in
cmp
fisubl
sbb
xchg
mov
mov
cmpsl
inc
hlt
ret
data16
es
pop
xchg
or
inc
scas
or
sbb
mov
fldl
shr
fmul
jl
mov
push
xlat
int3
pop
mov
arpl
icebp
push
sub
rolb
enter
lods
pop
cmp
push
jns
stos
imul
cs
mov
inc
pop
xchg
mov
idivl
ljmp
mov
pushf
mov
fwait
sub
lock
add
dec
dec
psubd
xchg
mov
adc
das
push
push
sti
mulb
and
in
push
jns
mov
dec
dec
jg
je
mov
xchg
xor
mov
push
add
lods
jo
psllq
add
pop
and
mov
sub
bound
jp
xor
push
and
mov
filds
pop
jp
mov
loope
mov
jg
pop
inc
daa
popa
in
lret
daa
dec
cld
push
xchg
lods
dec
lret
pusha
icebp
pop
pop
mov
aad
xor
xchg
push
mov
lea
lods
pop
push
xchg
inc
mov
dec
push
scas
aam
adc
jo
sbb
ja
insl
ja
sub
je
bound
and
xchg
mov
arpl
loop
cs
aad
or
stc
adc
cmp
push
clc
pushf
jle
cmp
add
in
adc
in
shrb
or
xor
sub
xchg
jmp
int3
jmp
sbb
jl
test
lret
mov
js
das
pop
xchg
mov
out
cltd
fdiv
push
jmp
mov
pop
inc
sbb
pop
outsl
sub
jl
mov
and
sbb
xchg
clc
sub
ss
in
sbb
sub
dec
inc
jg
sbb
mov
stos
test
xor
into
push
lcall
add
xchg
scas
cmpb
xor
jp
sbb
ljmp
and
pop
out
call
xchg
jge
and
lret
mov
xchg
fcmove
push
mov
cld
shll
shrl
lods
leave
mov
out
xchg
jnp
popa
push
pop
clc
adc
faddp
pop
shl
or
xchg
pop
or
in
jo
inc
sarl
test
nop
cmp
ret
jle
sbb
in
jno
int
xor
cmp
fmul
xor
push
jno
int3
pop
imul
inc
jmp
sub
mov
xorl
or
test
sub
jmp
and
pop
push
ret
xchg
aaa
int3
jb
enter
sbb
dec
addl
jb
jbe
ss
out
inc
dec
push
lods
or
dec
out
sub
and
ljmp
adc
inc
jae
jns
daa
aas
inc
repnz
add
loope
pop
push
jmp
pop
adc
in
insl
adc
cld
loope
movsb
in
repnz
jns
fcomps
pop
insl
div
mov
out
xor
les
jae
inc
arpl
scas
fldenv
push
repz
pusha
loop
jae
sbb
lock
pop
mov
dec
outsl
aas
mov
pop
shlb
lahf
scas
andl
xchg
in
sbb
inc
ss
push
mov
ret
in
pop
lret
sbb
push
fiaddl
jmp
cwtl
addr16
sahf
rcrl
pop
push
aaa
lahf
jl
out
hlt
mov
cwtl
jbe
push
sub
imul
pop
jne
shlb
imul
mov
subl
inc
mov
repz
pop
nop
push
fdiv
ret
mov
dec
test
movsb
cwtl
into
orb
test
push
daa
repz
sbb
popf
lret
jle
pop
aam
or
outsl
fcoms
inc
jo
into
inc
jbe
popa
sbb
pusha
and
lcall
fbstp
das
stos
cmp
and
iret
dec
iret
adc
std
dec
ja
int3
jl
jno
sbb
cwtl
into
std
xor
push
add
iret
lret
sub
aam
es
sbb
outsl
jbe
xor
adc
iret
ret
cmc
dec
xor
sbb
inc
jbe
in
sbb
test
sbb
push
mov
imul
mov
test
outsb
outsb
fdivrl
jp
pop
pop
hlt
leave
pop
and
lds
dec
fistpll
xchg
daa
popa
inc
push
sub
fistpll
cs
push
xchg
or
pop
mov
xchg
roll
stos
aam
test
popf
push
push
cmp
push
cmc
in
push
fnstsw
jmp
or
pop
out
mov
or
push
lods
aaa
mov
outsb
or
inc
mov
popf
pop
xchg
or
inc
xor
outsb
sarl
push
push
or
mov
xchg
ret
mov
sbb
insl
ljmp
sub
jbe
cmp
shr
rcll
fbld
push
xorl
movsl
sbb
stos
outsb
adc
sub
enter
push
pop
out
mov
arpl
adc
in
pop
in
cmc
test
add
inc
pop
js
cmc
fwait
nop
mov
add
push
inc
lods
mov
jp
jp
out
lret
xor
stos
fwait
mov
lods
clc
loopne
loopne
sarb
test
xchg
outsl
push
dec
test
mov
push
stos
lock
jmp
fidivl
into
rcrl
pop
xchg
in
in
pop
out
adc
push
cmp
xchg
loopne
xchg
in
lahf
iret
scas
mov
fcmove
add
dec
lods
daa
test
push
jge
pop
sbb
xchg
add
inc
mov
or
fimuls
pop
pop
in
sbbl
mov
jno
movl
iret
pusha
adc
mov
cmpl
out
repz
rep
inc
fucomi
push
mov
stos
push
rcr
or
out
je
adc
pop
and
inc
imul
mov
mov
pop
sbb
mov
adc
mov
imul
mov
or
cmpsl
addr16
ja
pop
fcompl
loop
xor
out
jmp
and
push
sub
xlat
or
lcall
out
and
dec
and
mov
mov
push
dec
test
outsl
outsl
test
or
mov
fstpt
jno
cmp
in
aam
push
inc
jmp
and
and
inc
shlb
or
xor
or
sbb
sub
and
mov
imul
scas
jmp
ds
sti
je
out
push
and
add
cmc
fildl
mulb
mov
mov
xchg
mov
das
push
sbb
rorl
roll
addr16
push
adc
fsts
cmpsl
lock
shll
andb
sub
lods
mov
iret
test
rol
mov
mov
xchg
in
mov
cmp
in
call
cmp
hlt
aaa
pop
scas
inc
addb
jp,pn
js
loop
pop
nop
adc
fnsave
or
add
movaps
les
sub
mov
adc
cli
lcall
add
push
iret
lahf
and
sti
add
call
movsb
mov
sbb
or
sbb
ljmp
imul
add
iret
sub
push
pop
mov
iret
xor
jl
sbb
dec
imul
sahf
arpl
cmp
push
pop
dec
pop
les
or
iret
xor
mov
cld
and
push
jne
stos
es
or
jb
scas
test
inc
pop
push
lds
xor
mov
pop
adc
fsubl
mov
not
lahf
or
adc
aaa
call
into
scas
fwait
dec
out
sbb
cld
jp
or
aaa
lea
nop
lahf
ret
bound
outsl
call
call
xor
or
dec
mov
jl
fwait
je
fisubs
push
std
add
lds
ja
out
inc
imul
filds
pop
in
hlt
imul
pushl
pop
pushw
or
pop
shrl
mov
and
add
or
in
test
enter
in
adc
sbb
ret
mov
sbb
popf
inc
in
pop
repnz
dec
enter
movsl
xchg
or
jl
mov
fsubs
and
clc
fstps
sub
das
enter
add
mov
fwait
mov
jbe
push
push
adc
repz
outsl
mov
pop
lods
pop
xlat
jnp
sbb
fadd
cmpps
aad
mov
lock
inc
adc
cwtl
push
push
inc
xchg
add
cmp
pop
adc
xlat
mov
ror
popa
inc
in
scas
xor
mov
hlt
mov
ret
cmp
in
dec
ret
mov
mov
lods
sbbb
popa
ja
sub
cmp
xor
rcrl
repnz
int3
repz
push
sub
rcll
inc
adc
lahf
fisttpll
in
loope
sahf
sub
aad
xchg
ss
in
shll
mov
rorb
pop
rclb
push
cmp
aaa
mov
aad
add
into
xor
and
jne
xlat
fistl
push
repz
pop
jnp
mov
inc
dec
or
sub
rcrb
adc
jmp
xchg
pop
in
lahf
xchg
call
xor
out
ljmp
cmp
aam
add
lahf
mov
mov
xchg
fsubl
dec
popf
xlat
mov
mov
lock
repnz
dec
imul
add
cli
or
pop
push
addb
les
gs
xor
xor
movl
sbb
inc
mov
je
xlat
mov
sub
cmp
in
push
cs
faddl
aas
mov
icebp
aad
in
pop
scas
add
push
cmp
aaa
push
nop
fstpt
mov
pop
cmc
or
jecxz
mov
fcmovnb
push
mov
mov
mov
daa
test
mov
addr16
lods
insl
inc
cld
mov
sub
and
cltd
imul
lods
pop
std
jp
push
and
test
or
push
xchg
inc
lods
adc
sub
pop
mov
or
cmp
fistpl
int3
sti
push
cld
rcrl
cwtl
or
test
jp
loope
xchg
mov
mov
dec
mov
loop
das
aam
clc
and
xor
jecxz
mov
ja
movsb
in
and
bound
mov
hlt
and
lds
push
mov
fiadds
mov
loope
jg
pop
mov
add
jns
xchg
lock
xchg
lea
sbb
sbb
out
scas
cmc
fimuls
push
adc
in
sbb
scas
sub
jbe
xchg
nop
mov
cmpsl
clc
and
xchg
jge
fisttpl
inc
outsl
jl
sub
cmc
jmp
jle
jl
sbb
sti
in
aad
jecxz
dec
repz
es
lret
xor
repnz
or
pop
push
jo
jo
out
icebp
and
adc
jo
repz
mov
or
rclb
or
les
scas
fistps
divb
jae
sarl
fsts
xlat
je
inc
jb
xor
mov
jl
mov
sbb
notl
pushf
out
test
data16
rcrb
xlat
imul
hlt
jg
or
cli
mov
or
push
cmp
sub
aaa
push
add
iret
jne
xchg
jb
js
push
xor
lea
pop
lods
aam
xchg
out
sub
ja
cmp
sbb
sub
fidivrs
in
adc
aam
fsubr
sbb
fs
push
mov
adc
pop
mov
inc
jns
lret
dec
frstor
or
mov
std
xchg
cmpsb
sarb
testl
and
jnp
mov
mov
push
jg
test
lcall
jb
mov
sub
rol
cs
mov
dec
sbb
in
test
repz
cmp
jle
mov
stc
and
callw
inc
test
imul
aad
push
jle
js
push
mov
sub
or
es
test
xor
push
cli
and
fs
push
mov
xchg
add
mov
xor
idiv
popf
cmp
push
sahf
rclb
push
pop
cmpsl
loope
leave
in
popa
mov
mov
sub
adc
rcrl
mov
shlb
insb
dec
rcrl
inc
push
dec
stos
orl
dec
lea
or
out
sbbb
mov
dec
aam
dec
imul
mov
int
jb
cmp
shlb
cmc
imul
arpl
lds
shr
ret
inc
leave
dec
xor
dec
mov
repnz
push
jg
push
cmp
lods
or
or
or
xchg
push
addr16
inc
out
into
loop
or
cs
ficomps
push
dec
addr16
out
inc
enter
jne
testb
notl
js
pop
ljmp
xlat
call
nop
out
jne
dec
shlb
sahf
push
loop
cwtl
and
sbb
outsb
mov
cwtl
xor
push
fdiv
push
fisubs
dec
mov
movsl
shlb
sbb
aad
out
push
sub
mov
push
nop
xchg
ret
mov
push
inc
and
aam
arpl
pop
lret
movsl
inc
push
lea
arpl
xor
mov
jl
cmp
or
or
push
call
inc
mov
sub
mov
mov
xchg
jge
stc
adc
lods
or
mov
adc
popf
lock
sub
ret
dec
jns
shrb
pop
mov
into
inc
sub
das
outsb
out
insb
lods
pushl
orb
sahf
pop
sub
outsl
stos
shll
mov
pushf
jmp
push
mov
pop
inc
cltd
sbb
hlt
ret
out
fidivrs
push
xor
cmp
sar
int
sub
les
imul
add
jns
mov
fcmovnbe
xchg
adc
pop
dec
or
and
sti
mov
mov
lea
adc
push
rclb
jb
cwtl
add
leave
fimuls
fisttpl
or
lret
mov
hlt
xorb
mov
dec
stos
bsr
pop
fwait
ja
rcrb
pushf
mov
gs
test
data16
pop
shlb
mov
xor
xchg
add
orl
out
data16
adc
jnp
sar
mov
lcall
push
push
js
shll
pop
cld
push
icebp
jg
js
ljmp
push
add
fstp
jbe
js
mov
push
enter
or
lret
iret
shrb
mov
je
jecxz
imul
mov
add
fisttpll
add
add
dec
int
into
fwait
popf
add
pop
cmc
cmpsb
or
inc
lock
repz
lcall
out
int3
xor
push
and
lds
push
push
mov
negl
rorb
sbb
sti
lock
je
mov
jp
adc
stos
sub
std
les
ja
adc
in
stc
cwtl
jecxz
xor
or
sarl
cmpb
icebp
lods
jns
mov
ljmp
xor
and
imul
jne
mov
dec
adc
sub
out
cmp
or
pop
adcb
lods
add
dec
orl
mov
cmpsl
pop
mov
enter
arpl
inc
sti
and
or
sti
fistl
arpl
push
pushf
mov
clc
mov
xchg
nop
jbe
push
jno
xchg
int3
repnz
pop
dec
sub
xchg
xchg
or
dec
ds
test
adc
mov
cli
xlat
jne
mov
pop
mov
lods
fwait
pop
inc
or
dec
shll
sbb
hlt
mov
fs
dec
std
add
inc
mov
flds
mov
insb
xor
popa
pop
pusha
sarl
and
mov
iret
clc
jnp
pop
ret
add
mov
in
and
sbb
aad
jecxz
test
pop
xchg
sbb
pusha
pop
ror
call
jb
pop
dec
xchg
dec
mov
rcrl
imul
movq
enter
jp
test
aam
cmpsl
loopne
icebp
lods
adc
pop
jae
push
hlt
xor
cmp
jecxz
repz
mov
or
cmp
shrl
jle
lds
jo
xchg
adc
xchg
sbb
pop
and
fs
push
pushf
push
jmp
adc
andb
or
mov
push
jae
xor
js
jle
push
dec
pop
lcall
mov
pop
addb
loope
test
sbb
rorb
adc
cmp
int
rclb
cmp
add
shlb
or
pop
jo
fadd
xchg
and
movsb
pop
mov
stos
push
jnp
jle
ss
popa
aad
sub
addr16
js
lret
ficoms
hlt
sbb
or
mov
dec
mov
mov
pop
mov
negl
out
inc
adc
jl
add
xor
mov
ror
adc
ss
sbb
mov
ret
add
rolb
adc
or
and
pop
mov
ficoml
cmp
pop
jl
fidivrl
pop
mov
push
sbb
jno
sbb
das
mov
sub
xchg
add
mov
push
pop
push
data16
sub
add
jb
inc
stc
es
mov
xacquire
dec
pop
push
ds
and
mov
xor
int3
outsl
add
lcall
outsl
cs
xor
xchg
aad
add
and
sub
mov
push
adc
imul
pop
xor
aad
dec
daa
icebp
xchg
bound
sbb
jg
pop
xchg
lcall
mov
ror
rolb
out
test
popf
jecxz
mov
cmp
adc
sbb
bound
inc
dec
xchg
cli
aam
xchg
pop
shl
popa
dec
mov
xchg
sub
inc
fidivs
fiadds
add
or
ss
inc
popa
xor
jnp
sahf
lea
pop
sub
dec
push
pop
xchg
test
data16
pop
or
sbb
xorl
sarb
jmp
push
xchg
fidivl
movsb
sbb
push
test
cs
jo
adc
push
jbe
jl
test
inc
fwait
and
push
mov
inc
push
repnz
mov
pop
stos
mov
xchg
adc
cwtl
mov
pop
loopne
xchg
fld1
inc
dec
and
ja
pop
das
in
je
cmp
pop
or
push
int3
pop
add
out
adc
sub
arpl
jnp
dec
jno
je
loopne
xchg
xor
imul
add
fsubrl
and
mov
ljmp
pop
sarb
mov
div
add
ljmp
jmp
push
pop
rcr
jb
adc
ret
ja
lods
jg
iret
push
addb
ss
fldenv
fs
mov
and
sbb
fstpt
mov
mov
lret
fdivrl
sti
push
dec
jle
mov
fnstcw
fadds
add
cs
outsl
lcall
daa
sub
or
into
xchg
retw
sbb
xor
ret
outsb
adc
jl
or
inc
xchg
dec
loopne
rolb
xchg
jne
xchg
mov
rcrb
jle
cs
scas
push
inc
jns
add
int3
pop
push
inc
cwtl
aaa
mov
mov
xchg
push
and
jle
push
lds
xchg
xor
cmp
mov
testb
inc
std
lds
ja
aad
cli
lods
adc
je
xchg
add
push
xor
inc
movd
pop
or
dec
inc
negl
sub
fcomps
and
inc
cwtl
gs
stos
xchg
or
lods
in
sbb
xorl
mov
ljmp
rcr
push
testl
fsts
in
or
ficompl
and
inc
sarb
dec
sub
xor
nop
pop
jo
mov
push
push
mov
mov
xor
mov
xor
cmp
mov
cmc
les
pop
dec
loop
mov
test
mov
pop
add
sarb
xchg
aad
cmp
imull
cmp
adc
jb
mov
es
sbb
lock
nop
fldcw
jmp
dec
loopne
jle
xchg
loopne
lcall
or
or
fstps
jl
jecxz
lret
and
imul
scas
div
mulb
mov
in
adc
push
shrb
push
jmp
inc
inc
adc
sub
roll
stc
roll
and
jno
enter
test
mov
add
jbe
adc
and
stc
inc
cmp
sbb
and
shll
adcb
jns
mov
js
adc
add
movl
sub
push
popa
mov
and
push
xor
ret
out
jp
enter
cmpsl
repnz
xor
roll
cwtl
jnp
pusha
dec
bound
xchg
mov
pop
loop
lahf
lea
rcrb
imul
ljmp
sub
xor
cmc
xor
lods
xchg
adc
mov
mov
adc
jb
flds
fildl
into
jg
pop
dec
arpl
adc
rcl
rcll
lock
jo
xchg
sub
push
pop
int
aaa
inc
popf
sbb
mov
ret
pop
outsl
mov
decl
outsb
int
lahf
cmp
jo
stos
mov
das
repnz
negb
sbb
pop
push
subb
fwait
sbb
xchg
scas
nop
or
add
scas
nop
je
mov
pop
push
sub
push
notb
fwait
ds
or
pop
sbb
jmp
scas
jl
cmc
roll
sahf
push
dec
lret
js
sub
sub
out
push
add
adc
test
pop
lret
mov
jbe
mov
mov
jae
sbb
test
shll
and
jge
lahf
mov
xchg
cs
sbb
test
jp
jge
test
lcall
jg
mov
add
adc
push
cmp
sti
lock
sub
movsb
aam
mov
xchg
inc
jns
jne
push
out
dec
insb
inc
inc
jge
cmc
or
or
movsb
dec
sahf
push
imul
sahf
cltd
mov
pop
loope
push
addl
xor
pusha
xlat
sbb
imul
and
mov
sbb
inc
lcall
lret
aaa
pop
lods
mov
sub
fisttpll
push
sub
test
and
mov
jl
pop
xchg
rcrl
loop
pop
jmp
mov
fwait
add
cmp
int
xchg
stc
xchg
jae
mov
inc
clc
in
divl
inc
xchg
daa
pop
adc
jmp
fwait
aad
mov
sti
jbe
fsubrl
mov
gs
and
mov
or
mov
push
outsl
cmp
pop
push
inc
sbb
stos
aam
adc
push
mov
add
inc
rclb
pop
and
mov
jbe
fldl
pop
push
daa
push
xor
push
xchg
or
mov
fdivrl
push
and
out
sarl
std
les
mov
in
out
mov
daa
xorl
and
cmp
jl
lods
and
xor
or
loope
bound
addr16
popa
inc
clc
daa
fnstsw
adc
int
outsb
dec
ret
hlt
mov
mov
dec
cmpsb
inc
or
lahf
jb
fstpt
ss
and
mov
sub
cmpsl
cli
maskmovq
notl
fisttps
sbb
repnz
and
outsl
and
fs
mov
lods
gs
push
call
push
lock
or
push
fsubr
and
loope
mov
popf
jge
rcrb
fdivs
dec
repz
cmpsl
mov
aaa
pop
xor
adc
xchg
xlat
fmuls
rcr
call
insb
repz
jge
sub
xor
lods
or
test
je
cld
adc
repz
sub
adc
inc
notb
popa
xchg
jp
les
xchg
dec
call
mov
ljmp
aam
jle
xchg
data16
jno
pop
lods
xchg
adc
or
dec
int3
leave
std
in
out
mov
sahf
jg
sub
ss
fs
adc
mov
scas
mov
ret
inc
adc
dec
andl
out
aam
repnz
jo
loope
lret
mov
jne
or
scas
or
xor
cli
xor
fcompl
pop
add
cltd
and
cmp
in
mov
mov
bound
roll
pop
aaa
ja
in
push
push
mov
mov
test
and
loope
pop
pop
lods
adc
cltd
cmp
pusha
sub
sub
adc
inc
and
cmp
and
lret
sti
je
and
mov
push
lds
out
stc
sub
adc
leave
mov
mov
mov
jl
sub
push
xchg
dec
les
fs
cmp
repz
int
into
xchg
lods
hlt
jb
scas
cs
xchg
fs
clc
in
dec
cmp
das
mov
iret
inc
or
sbb
movsb
mov
mov
xlat
xor
lods
xchg
repnz
aad
loop
or
mov
xchg
pop
stc
shll
fs
stos
pop
push
adc
outsl
jg
es
data16
jo
aas
inc
insl
lds
xchg
mov
dec
xchg
lods
jecxz
mov
sub
adc
xor
ds
or
jbe
adc
sbbl
xchg
dec
inc
es
mov
inc
popf
mov
nop
lods
nop
in
popf
roll
fs
sbb
cmp
pop
dec
add
xor
out
mov
fisttps
cmp
xlat
aam
ficoms
fwait
xor
aaa
imul
daa
pop
dec
lods
shlb
cld
dec
fidivl
jmp
arpl
push
insb
loop
adc
jno
arpl
dec
cs
mov
jae
add
sbb
inc
inc
ret
shlb
dec
pop
jns
jge
mov
or
popa
cmpsl
mov
and
sbb
and
addr16
xchg
test
std
gs
inc
cmp
fdiv
jne
cmp
aaa
adc
fwait
rclb
or
fimuls
jae
mov
cmp
fwait
andb
mov
inc
push
push
lret
inc
outsb
push
push
bound
pop
inc
addr16
divb
jecxz
dec
cs
adc
push
mov
push
scas
jg
inc
and
leave
mov
arpl
push
cs
fisttps
mov
imul
fsts
mov
dec
outsb
cwtl
lcall
leave
fsts
sbb
test
idivl
cmp
sub
pushf
and
jae
outsb
push
in
hlt
adc
repz
out
sub
outsb
aaa
add
nopl
out
arpl
js
jmp
jb
mov
jns
jo
ss
mov
adc
mov
mov
mov
pusha
adc
or
int
cmp
mov
jne
loop
sbb
pop
cmc
test
int3
mov
daa
and
scas
stc
mov
hlt
dec
fdivrp
mov
in
mov
add
sub
jg
cmp
add
lods
clc
loope
cmp
test
and
ja
out
fimuls
adc
xchg
cld
movsb
lock
cmp
push
ret
add
jecxz
pop
sbb
leave
arpl
mov
fmuls
and
pop
sub
jno
andb
pop
pop
jbe
jecxz
sub
lea
dec
sub
inc
sub
shl
mov
es
nop
push
add
push
ficoml
pop
lcall
pop
sub
and
xor
gs
push
inc
je
adc
stos
pop
adc
js
add
rorl
xor
mov
inc
lds
int
lret
or
or
xchg
jl
sbb
ret
dec
xchg
pop
cld
xor
mov
inc
into
xchg
cltd
dec
pop
jge
push
mov
js
int3
cmp
cmpsb
push
pop
sahf
mov
pushf
sbb
cli
mov
jae
dec
jg
mov
push
lret
and
shl
pop
jnp
std
cltd
sbb
mov
mov
mov
inc
dec
lock
mov
mov
and
adc
dec
out
jg
repnz
clc
ror
inc
icebp
mov
push
mov
jne
dec
jne
inc
nop
dec
or
int3
fstpt
imul
in
lods
in
cmc
jns
outsb
movsl
and
push
mov
call
pop
pop
addl
jne
stc
xchg
inc
lods
jg
add
sahf
sub
ret
push
rcl
subb
out
out
xchg
stos
in
into
loope
and
cwtl
fldt
xchg
push
int3
mov
loop
fisubs
inc
clc
pop
cmc
ljmp
aas
hlt
aaa
mov
ret
mov
pop
pop
pop
repnz
xchg
jecxz
xor
insb
jno
push
hlt
sar
dec
lods
out
out
add
rol
jle
mov
addr16
dec
and
repz
dec
pop
test
dec
ljmp
mov
dec
mov
sbb
cmpl
xor
lods
cmp
stos
cld
push
and
sbb
pushl
jg
and
stos
fbld
adc
inc
test
mov
fsubrs
sbb
in
sub
pusha
add
sti
and
push
lds
movb
xchg
xor
loope
repnz
fwait
and
call
cmc
cwtl
and
aad
lods
and
or
jb
bound
add
dec
test
loopne
lret
ret
or
rorl
mov
je
and
or
xchg
cwtl
popa
stos
sub
jge
sbbl
mov
jmp
mov
lcall
bound
ret
fdivrl
add
jns
pop
test
pop
inc
popf
aam
cmp
jo
or
push
popa
mov
out
inc
lds
mov
push
into
and
test
pop
in
sti
or
icebp
mov
insb
or
cmp
add
sub
inc
jbe
lahf
sarb
pushf
lods
lock
sbb
xchg
sahf
jge
pop
jne
popf
fstpt
sahf
aad
pop
int
sbb
fstps
pop
out
clc
xchg
and
lods
outsl
arpl
std
clc
dec
xchg
cmp
scas
fbld
jb
xchg
add
cmp
and
enter
add
incb
bound
daa
pop
pushf
fwait
push
mov
cmp
sub
imul
in
push
loop
scas
and
xor
jge
out
mov
adc
jp
mov
mov
ja
in
or
pop
pop
mov
cs
cmp
xchg
sub
mov
mov
sub
mov
xchg
dec
in
in
push
add
add
ret
adc
mov
or
shlb
push
aad
pop
dec
inc
mov
push
fs
mov
push
aam
testl
and
loop
pop
dec
xor
addl
movsl
xchg
inc
jecxz
aas
inc
cs
outsb
push
out
scas
ret
sub
pop
mov
into
les
jae
out
lods
out
sbb
in
or
jle
out
aad
in
fcoml
lcall
mov
sahf
jns
mov
outsl
loop
mov
push
fadds
jno
sbb
cmp
adc
icebp
cmpsb
push
jns
imul
xchg
xor
xor
xchg
xchg
sbb
lret
and
adc
sbb
xor
mov
mov
xchg
xor
fcmovb
jo
mov
aam
dec
movsl
std
imul
aaa
push
or
mov
int3
pop
mov
xchg
add
loope
xor
xchg
imul
call
movsl
gs
push
or
ficoms
test
lds
test
notb
mov
push
adc
adc
xor
scas
xchg
sub
lods
addl
dec
aad
clc
iret
mov
sbb
in
add
lods
pop
or
xchg
icebp
pop
jmp
xchg
es
inc
jo
push
add
popa
push
inc
sbb
dec
mov
fiaddl
sbb
inc
or
test
mov
cmp
out
push
fnstcw
jbe
mov
mov
mov
mov
imul
fs
test
out
pop
js
mov
mov
leave
lahf
pop
icebp
xchg
push
cmp
add
mov
shrl
repnz
xor
add
xchg
out
push
cmp
sub
sarb
jae
int
mull
jne
mov
pusha
jne
hlt
sub
adc
pop
dec
add
gs
jae
add
xchg
sbbb
fwait
pop
sub
inc
mov
pop
inc
xchg
or
cmpsl
mov
shlb
cmpl
sub
push
shlb
fstl
pop
test
jl
lret
hlt
push
mov
pop
sbbb
add
sti
or
paddw
orl
cmp
jne
in
and
stos
push
bound
loopne
insl
xchg
and
jo
add
cmp
inc
cltd
sub
into
cs
cld
scas
aaa
push
cmp
mov
shlb
xor
sbb
adc
int3
lcall
sbb
or
shrb
fmuls
sub
mov
gs
subl
mov
dec
out
daa
mov
mov
dec
insb
jb
aaa
add
mov
dec
je
clc
movsb
clc
sbb
loopne
jne
and
jle
adc
pop
add
cmp
and
or
cmp
iret
xchg
stos
std
rcr
pop
and
jl
lcall
cmpsb
test
js
mov
jne
push
push
rorl
mov
divb
fnstenv
arpl
sub
or
cld
test
mov
xor
dec
testl
iret
jo
mov
jb
and
pop
xchg
fs
and
lds
dec
cmpsb
out
sub
mov
shlb
and
jl
mul
or
out
adc
scas
sbb
sbb
mov
add
shlb
aaa
loope
dec
sbb
divl
push
lahf
into
pop
movsl
leave
fsubrs
loop
mov
mov
repz
mov
jp
mov
test
sti
push
pop
pop
push
cmp
adc
addb
jecxz
push
and
mov
cs
mov
clc
add
cld
sbbl
popf
or
scas
mov
jno
and
xor
and
data16
push
or
adc
cli
adc
daa
out
fwait
ljmp
xchg
push
aaa
mov
into
imul
push
lcall
fistpl
pop
mov
std
pop
cmc
arpl
mov
cmp
mov
fisubrl
js
add
into
mov
in
test
js
and
scas
pusha
xchg
or
jp
push
jnp
fwait
xorl
xor
insb
xchg
add
jae
cmp
subl
gs
pop
jnp
aas
push
fadds
push
cmp
adc
mov
and
lock
adc
fsubrs
insb
repz
in
clc
mov
push
ret
inc
inc
nop
adc
and
stos
sub
pop
sub
call
pushf
inc
xor
cmc
daa
insl
dec
cmp
pop
dec
cmp
int
push
xchg
shll
out
popl
scas
hlt
out
scas
jg
test
imul
mov
fcompl
add
cltd
mov
sub
pop
adc
pushf
insb
cmp
cld
lods
xor
cld
fldl
ret
xor
inc
sub
fstl
adc
lahf
mov
loopne
push
jne
mov
inc
and
xor
and
js
push
mov
dec
ret
outsl
lret
inc
xor
aad
xchg
lcall
in
push
and
inc
in
xor
dec
in
imul
in
or
or
sar
insl
cmp
cmp
xchg
push
je
pop
add
sub
mov
hlt
nop
fstps
imulb
sar
inc
aad
lret
and
test
jae
jecxz
aas
sub
je
mov
pop
xorb
insb
daa
jge
jmp
sub
ja
fcoms
mov
pop
jb
data16
mov
addr16
lret
adc
dec
sub
mov
aas
call
xor
test
in
xchg
sub
lcall
or
xchg
xchg
addr16
xor
mov
add
push
insb
lock
pop
push
cmp
rcrl
mov
dec
xchg
adc
adc
and
rorb
jnp
sarb
nop
leave
sub
fwait
icebp
clc
addb
cli
add
fmulp
or
inc
mov
adc
bound
jp
xchg
std
and
in
or
outsb
vmptrld
jnp
xor
push
cmp
or
push
inc
mov
or
enter
ret
popa
sti
mov
arpl
imul
mov
aaa
mov
push
or
pusha
popf
in
lret
jno
fs
es
inc
pop
das
dec
out
sbb
testl
jbe
xor
out
jecxz
lods
mov
jae
test
scas
sub
pop
push
dec
aas
enter
adc
ljmp
and
push
mov
mov
push
push
jae
outsl
adc
dec
adc
lcall
fs
roll
jno
loop
out
dec
and
aad
roll
loop
mov
in
stos
rcrb
pop
jbe
xchg
ret
ret
inc
test
inc
aam
xchg
outsl
mov
and
adc
or
pop
std
mov
ret
ficoml
mov
ficompl
add
fisttps
sbb
cmp
hlt
outsl
sbb
xchg
jecxz
jge
dec
gs
in
add
in
sahf
mov
mov
cli
jl
or
outsl
fistpl
out
push
lods
ret
sub
mov
cmp
imul
jae
or
pushf
aaa
outsl
jge
push
ret
and
lahf
notb
dec
push
cld
or
pop
dec
inc
xchg
pop
fnsave
pop
hlt
int3
push
lock
icebp
dec
dec
push
pusha
test
nop
pop
inc
out
rcrl
mov
and
out
push
dec
pusha
mov
icebp
xchg
aam
popf
in
insl
cmp
push
popf
insl
frstor
call
sub
or
mov
jne
stos
push
adc
leave
adc
fcmovnu
imul
ret
cmc
aam
jnp
xchg
shl
jns
xchg
push
sbb
int
sub
mov
pop
mov
or
iret
pop
movsb
push
mov
mov
xchg
loop
mov
xchg
fnstenv
jno
mov
inc
or
in
das
add
jmp
lret
xchg
fsubl
cwtl
hlt
adc
adc
push
cmp
pop
dec
sti
xchg
fiadds
ljmp
adc
jns
adc
push
add
std
pop
sub
pop
lock
or
or
add
mov
inc
push
add
fnstenv
mov
mov
repnz
fwait
lret
mov
test
sbb
pop
inc
xor
cmp
icebp
lahf
data16
rorl
ds
jae
xchg
or
rcrb
movsl
pop
in
popa
in
insb
imul
add
xchg
shrb
mov
cli
scas
mov
lret
mov
push
push
lods
xor
aaa
or
sarb
std
out
or
push
std
loop
xor
fistps
pop
imul
fldz
addl
loopne
push
fcmovnu
bound
mov
cmp
mov
lea
pop
jne
aas
shl
test
push
or
sub
dec
or
push
mov
jle
mov
sbbl
outsl
xor
call
pop
dec
adc
loop
repnz
rcrb
and
stos
outsl
insb
aas
test
add
adc
ds
pop
ja
add
std
pushf
daa
inc
xchg
enter
daa
mov
mov
ss
or
mov
into
adc
jae
xor
movsl
sbb
pushf
dec
enter
fdivl
pop
es
adc
cwtl
adc
imul
push
jb
leave
ljmp
sub
sbb
mov
sbb
out
mov
fmuls
call
mov
sbb
inc
pop
mov
or
xor
dec
sub
arpl
repnz
push
mov
sbb
jnp
dec
test
lahf
push
mov
fisttps
mov
std
leave
xor
rol
stc
lods
sarb
pop
mov
fdivrl
sbb
loopne
ret
ss
mov
es
mov
xchg
test
aaa
mov
sti
xchg
dec
mov
mov
hlt
inc
jge
sub
mul
popf
in
les
andb
push
jmp
push
jnp
insl
push
push
pushl
dec
sbbl
xor
popa
sub
push
pop
pusha
call
dec
sub
aaa
mov
std
fnsave
ret
inc
iret
or
out
sbb
xor
cmp
out
aaa
repnz
in
inc
fildll
and
mov
addr16
cwtl
inc
mov
mov
adc
mov
pop
ss
push
jne
outsb
sbb
popf
mov
push
int
xor
nop
push
insb
shlb
jle
int3
in
out
xorb
sbb
sbb
out
sahf
jg
dec
jnp
imul
adc
dec
xchg
mov
jnp
sbb
inc
or
lods
mov
pmulhw
push
cmp
int3
xor
lods
psraw
int3
and
outsb
les
or
mov
mov
pop
lret
cmp
movsb
test
daa
push
pop
cld
or
fwait
pop
repnz
push
out
cmpsl
arpl
fcmovbe
das
rorl
jecxz
das
hlt
imul
repz
jecxz
mov
movl
test
int3
pop
mov
and
sub
jp
rcrl
icebp
or
ret
push
rcrb
neg
mov
lret
in
inc
ret
sub
call
adc
sti
fwait
pop
add
or
cmp
push
data16
nop
add
test
hlt
lods
int
xor
pushf
mov
or
shrl
push
mov
dec
pop
xchg
sbb
and
popf
aam
mov
pop
xchg
movsb
mov
in
cmp
or
loop
cmc
inc
sub
sbb
sahf
pop
pop
arpl
xorb
repz
clc
out
push
mov
fcmovu
jg
lds
pop
pop
in
jcxz
stc
fidivl
jbe
jmp
xchg
mov
rol
mov
pushf
jno
xchg
bound
sub
lcall
mov
test
les
xor
shrl
mov
std
mov
push
pop
sbb
iret
inc
push
mov
dec
mov
stc
mov
mov
nop
inc
maskmovq
idivl
rcl
ficoml
in
les
int3
mov
pop
pop
fisubl
inc
sub
pop
mov
add
jmp
pop
or
lret
cmp
int3
inc
sar
repz
push
mov
and
or
dec
sbb
stc
test
rclb
dec
into
mov
fiaddl
js
adc
xchg
cmp
in
hlt
add
sbb
repz
outsl
sub
dec
pusha
mov
in
test
sti
push
cmpsb
xchg
mov
sbb
icebp
mov
xor
add
cmp
mov
or
mov
cld
add
sbb
and
idiv
jmp
out
cmp
mov
stc
enter
sbb
movl
xlat
rorl
cmpsl
std
mov
movsb
xchg
popa
ret
dec
std
dec
popa
scas
iret
pop
push
pop
outsl
adc
pusha
dec
xchg
dec
xchg
enter
out
cmp
outsl
movsl
stos
test
xchg
icebp
pop
jmp
ret
and
adc
imul
xchg
aas
cmp
enter
mov
or
dec
push
xchg
inc
pop
sbb
imul
mov
dec
jo
add
push
mov
sbb
adc
dec
pop
into
dec
nop
cwtl
jne
int
in
adc
int3
cmp
ja
aas
mov
adc
and
scas
das
xchg
ret
fstpl
int3
inc
xchg
jmp
adc
mov
xchg
fwait
cmpl
outsb
and
pop
scas
sub
lods
jae
call
dec
shl
pop
mov
adc
jmp
cltd
insb
out
shl
imul
pop
rorb
in
inc
xor
push
mull
movsl
xor
addr16
or
sahf
in
xor
jo
jl
sub
mov
out
pop
nop
jnp
push
leave
push
push
stos
sbb
or
pop
ja
dec
cmc
dec
dec
insb
pop
mov
gs
into
call
push
push
orb
int
adc
xlat
push
xchg
pop
neg
push
jb
add
mov
and
int3
int3
movnti
jbe
addb
dec
push
dec
sub
add
mov
int3
or
xchg
out
push
clc
test
xchg
inc
and
or
mov
popf
xchg
roll
cmpl
xchg
fcompl
ds
add
mov
icebp
cs
stos
sub
daa
jnp
lret
jl
xor
pop
push
leave
rorb
pop
push
xor
stos
fwait
and
out
loopne
jg
push
dec
pop
push
dec
pop
mov
aam
ja,pn
mov
fs
and
xchg
fsubs
inc
dec
or
aaa
sahf
mov
xchg
adc
iret
sub
shlb
mov
repnz
mov
inc
std
int3
inc
jo
push
push
push
std
mov
jbe
inc
or
ljmp
mov
sub
fsubs
jae
fldl
jl
scas
faddl
loope,pn
jo
icebp
int
sub
jmp
gs
and
push
in
or
and
push
cld
add
add
inc
rol
clc
cmp
lock
shr
cld
mov
xchg
push
fstpl
inc
sarb
push
xorl
lds
stc
in
adc
mov
and
movsb
filds
sub
dec
in
jecxz
dec
mov
push
add
sub
jno
pop
mov
adc
adc
adc
and
push
test
loopne
cmp
int
adc
mov
adc
fdivr
enter
ficoms
push
std
and
dec
pushf
jle
jl
jne
adc
cmp
je
sahf
pop
adc
mov
test
push
test
faddl
or
xchg
jne
mov
out
test
adc
and
xorb
rcl
sbb
xchg
lahf
fs
or
loop
and
add
daa
add
mov
or
cmovbe
repz
gs
loopne
or
xor
aam
test
and
adc
sbb
icebp
and
dec
and
xchg
pop
jne
or
and
repz
jo
je
pushf
jns,pn
aaa
pop
inc
xlat
ret
dec
popf
subl
jp
or
pop
aas
inc
inc
mov
push
add
dec
push
popa
out
lret
arpl
inc
stc
xchg
popa
inc
fsubr
cmp
xchg
xor
insb
icebp
jge
mov
push
dec
xchg
mov
mov
divb
inc
mov
xchg
mov
lods
lods
jecxz
xor
mov
test
push
sarl
xorl
pop
mov
popa
add
fwait
test
repz
jae
dec
lods
shrl
fs
out
xchg
add
push
pop
scas
add
xor
or
rorb
jnp
xchg
xor
dec
ja
sarb
loopne
pop
stos
mov
fdivrl
ret
lods
push
mov
into
cmp
scas
mov
dec
sub
rolb
or
fnstsw
cmp
xchg
push
push
lea
mov
mov
fldt
push
dec
adc
add
xchg
ds
cli
das
add
leave
icebp
or
cmp
out
enter
pop
mov
in
or
lea
sub
loope
dec
fwait
mov
xchg
pop
pop
adc
js
popf
pop
inc
mov
lcall
push
cmpsb
mov
dec
loope
or
xor
xchg
adc
xchg
mov
mov
addb
mov
test
or
fstps
xor
dec
or
xor
xchg
mov
lock
scas
inc
xlat
lods
movsl
and
in
bound
or
jno
pusha
jecxz
fucomi
int3
mov
and
cmp
stos
jns
out
xchg
push
js
pop
cmpb
cli
push
movsb
dec
arpl
repnz
data16
fimuls
lahf
push
jecxz
or
popa
loop
or
sti
mov
cld
bound
stc
pop
in
scas
lret
xor
mov
movsl
js
jle
fidivrl
mov
or
mov
push
mov
stos
or
push
aaa
dec
fdivrl
pop
sbb
movsl
and
xchg
mov
sub
int
scas
push
xchg
jno
cltd
mov
mov
mov
inc
and
add
fsubr
cmp
in
lock
dec
push
arpl
cwtl
xchg
sub
adc
fnstenv
push
inc
jno
mov
sbb
shl
pop
or
jp
jno
mov
cltd
test
mov
mov
movsl
pop
mov
sarl
std
ficomps
dec
pop
data16
lret
cmp
cmp
cmp
in
scas
pop
jbe
jmp
or
dec
push
lds
rcrl
out
cwtl
jae,pt
sbb
sbb
das
repnz
imulb
test
mov
ja
not
adc
jmp
xor
mov
hlt
repnz
call
mov
ss
sbb
xchg
sbb
lods
sbbb
fnstsw
cmp
dec
dec
sbbb
mov
je
sub
pop
cwtl
inc
and
inc
fildll
cmpsl
sbb
lahf
imul
nop
xor
frstor
mov
test
sub
push
jg
test
test
cwtl
divl
pusha
sbb
sahf
cmp
repnz
dec
sbb
stos
repnz
pop
jle
xor
pop
lock
or
ss
cmp
dec
adc
pop
push
cmpl
lahf
cmp
jge
test
in
js
sub
push
iret
xchg
jmp
mov
add
fldcw
in
and
jb
push
lock
mov
adc
push
loopne
std
dec
or
pop
scas
xor
int
dec
cwtl
adc
ds
xchg
inc
pop
add
xchg
test
cltd
push
out
and
mov
jmp
cmp
shll
adc
mov
mov
in
mov
mov
js
sub
lock
push
leave
pop
lret
jecxz
cwtl
mov
mov
jae
fsubl
push
sbb
inc
jp
push
lods
jb
add
mov
int
mov
fstps
in
xchg
repz
sub
jecxz
cmp
addr16
or
cmp
mov
fisttpll
int3
test
stos
mov
and
jne
leave
sbb
and
jae
lock
pop
cmp
xor
loopne
shll
pop
dec
das
cmp
arpl
sahf
cmp
jmp
mov
ljmp
popf
ss
push
sbb
leave
mov
out
call
cmp
gs
jbe
xchg
jecxz
inc
push
aas
inc
xor
mov
rclb
push
inc
mov
and
add
cmp
in
mull
mov
shll
repz
push
mov
dec
jl
aam
jmp
movsb
in
push
adc
test
shlb
mov
lea
xlat
ret
leave
add
movsl
dec
ds
leave
pop
mov
mov
mov
lock
jge
sbb
cmp
sub
loope
sbb
call
call
and
mov
int
sbb
sbb
jo
int
ss
pop
mov
xchg
push
mov
stc
pop
add
jg
jb
sbb
mov
les
add
fnstenv
nop
gs
push
adc
movsb
je
dec
mov
jns
or
rcll
mov
fisubrs
mov
or
sub
out
adc
adc
adc
add
pop
mov
or
scas
insl
orl
xorb
loope
bound
dec
mov
stos
mov
xchg
pop
inc
fldcw
dec
lret
mov
push
les
pop
inc
es
jge
or
in
xchg
push
mull
and
mov
xchg
pop
shlb
dec
stos
mov
dec
xchg
clc
dec
ret
sub
jns
shrl
lods
jnp
cmp
imul
cmpsl
pop
add
push
bound
jecxz
mov
fidivrs
lods
xchg
xor
push
dec
aam
inc
pop
nop
cmp
inc
imul
addr16
mov
outsl
pushf
dec
shrl
ljmp
adc
cmpsl
inc
mov
xor
fdivl
or
and
inc
aaa
dec
insl
sbb
cmp
xchg
push
mov
cmpsl
mov
pop
sbb
adc
cmp
scas
or
sub
jmp
sahf
ss
push
push
mov
mov
cmp
inc
je
jno
lret
ja
push
dec
mov
or
push
push
mov
inc
scas
js
or
xchg
les
enter
dec
das
lea
xor
sahf
aad
ja
rcll
ljmp
or
cmp
adc
jge
push
imul
test
int
adc
push
sti
jbe
sbb
outsl
xchg
mov
repz
shl
stc
fildl
lahf
cmpsb
ret
and
into
ss
xchg
mov
sub
sbb
mov
out
xchg
jp
pop
sbb
movsl
sbb
call
pop
subb
repnz
pop
outsl
movsb
jp
aam
pop
mov
aam
dec
and
or
mov
fstpl
roll
inc
dec
sub
push
pop
leave
jno
adc
adc
inc
scas
addr16
mov
inc
stos
mov
sub
adc
jno
and
mov
jno
fdivr
jnp
sbb
int
scas
mov
cmp
push
and
out
ficoml
in
dec
mov
push
add
inc
push
popa
pop
push
jge
shll
xchg
and
cli
xchg
and
mov
or
aam
cmpsl
cli
mov
lcall
out
jl
push
pop
mov
sarb
dec
fsts
sub
fsubr
inc
aas
sbb
mov
add
addr16
add
movsl
xchg
jle
adc
aam
mov
sbb
push
je
add
jmp
ljmp
int3
mov
mov
mov
pop
mov
scas
adc
jae
inc
setnp
repz
out
jmp
mov
push
hlt
adc
xchg
push
or
mov
mov
jno
filds
and
mov
inc
movsb
cmp
pop
sbb
pusha
stos
nop
sahf
sbb
scas
or
iret
cwtl
xor
pop
add
das
out
cltd
mov
mov
sub
addr16
dec
mov
pop
leave
jne
or
rcr
stc
call
sbb
mov
aas
lahf
test
xchg
or
and
lock
lcall
aaa
mov
xchg
xor
sub
int3
inc
push
sbb
and
fisubs
cmp
out
cwtl
sub
outsl
xor
mov
adc
stc
into
mov
out
iret
cmpsl
aaa
mov
inc
fmull
dec
cmp
aas
mov
movsl
push
mov
dec
cmp
mov
ja
rcrb
mov
mov
or
or
or
stos
mov
stos
add
sbb
or
xchg
in
mov
xor
dec
imulb
xchg
cmp
insb
mov
add
cmp
lret
mov
jecxz
xchg
movsl
pop
movsb
or
ljmp
add
pushf
mov
jbe
les
lds
mov
test
jnp
addr16
lock
cmp
inc
mov
pop
push
test
iretw
imul
sub
adc
jmp
fisttps
push
inc
pop
jno
pop
repz
mov
sbb
addps
mov
mov
or
add
fdivs
cmp
mov
push
test
mov
sti
jno
jge
sub
lds
loop
adc
mov
inc
xlat
ljmp
pop
and
cmp
aas
rcrb
sbb
addr16
es
add
xchg
mov
and
mov
push
cmp
clc
cmp
mov
movsb
aas
pop
sbb
fstpt
push
jno
lock
andl
mov
neg
mov
jmp
pop
add
mov
movsb
aam
aaa
repz
fiaddl
sbb
mov
pop
push
add
ret
or
cmp
xchg
fldt
in
divl
and
mov
cmpb
and
xchg
push
ja
mov
shl
gs
ds
sbb
push
hlt
dec
push
push
mov
jne
sti
pop
jg
jle
pop
fsubrl
dec
addr16
shlb
out
mov
fstp
mov
adc
xlat
inc
cmp
mov
dec
xchg
and
mov
jnp
cmp
popa
pushf
xor
or
rorl
xchg
fildl
decl
cmp
pop
cmp
pop
mov
data16
jo
jne
ficoml
and
cmc
pop
mov
cmp
sbb
and
dec
xor
adc
or
hlt
lret
cmp
in
daa
xchg
mov
mov
lahf
imul
adc
cs
pop
and
shll
rorl
cltd
push
fidivrl
jns
pop
mov
pop
aad
loopne
scas
xor
ds
frstor
mov
mov
pop
jae
jbe
dec
mov
pop
cltd
jl
ja
insl
adc
sbb
jns
repz
jg
lahf
mov
xchg
sbb
jns
popf
adc
aam
sar
pop
jne
mov
mov
sbb
mov
icebp
push
int
in
push
push
ret
into
out
ljmp
xor
pop
testl
cmp
stos
jl
cs
jge
test
ffree
inc
out
repz
jnp
cmp
cmp
adc
pushf
repz
cmp
jb
dec
loopne
lds
and
enter
hlt
punpckhdq
les
rorl
dec
outsl
pop
out
add
sbb
push
adc
cltd
cmp
fmuls
sub
seto
inc
jns
bound
or
mov
pop
aam
or
cli
cmp
or
pushf
jp
jae
shll
or
add
pusha
testb
aam
jle
push
jl
pop
mov
imull
xchg
mov
push
or
iret
add
mov
test
add
xchg
sbb
adc
in
xor
add
inc
je
push
lods
sbb
lret
push
cwtl
rcrl
or
mov
mov
cmpsl
in
sub
xor
rclb
push
mov
adcl
jp
out
pop
int3
xor
jns
ds
pop
xor
inc
scas
add
jae
lret
push
insl
aam
cmp
adc
loopne
push
mov
ret
adcb
lret
call
cmpsb
xor
icebp
push
xchg
scas
shlb
jns
or
call
shrl
sahf
aaa
inc
jl
push
fdivl
outsb
jb
orb
add
jmp
scas
lret
mov
or
fsts
sbb
mov
mov
jo
dec
cmp
loopne
fnsave
shll
cmc
stos
dec
clc
cld
cli
clc
adc
jle
fistl
jo
xor
fstps
mov
dec
pop
dec
push
inc
fnstenv
shl
es
test
js
xor
cli
push
and
or
lds
pop
sub
jg
fbstp
jmp
xchg
fs
data16
adc
rep
cwtl
popf
loope
and
and
push
inc
cmp
in
cmc
adc
xor
gs
rclb
xchg
pop
inc
and
out
cmpsl
cmp
js
ss
add
xorb
addr16
push
cltd
lahf
mov
pop
enter
xchg
sub
or
arpl
daa
aas
in
test
fisttps
xchg
cmp
stos
mov
fsubrs
setle
sub
jmp
adc
test
and
divb
mov
in
rcll
sbb
mov
xor
addr16
and
or
mov
ret
sbb
cmp
mov
xchg
imul
incb
sub
sub
dec
popf
fs
cmp
cwtl
cmpsb
pushf
or
push
mov
das
sbb
mov
sub
shlb
loop
shlb
ss
out
test
hlt
pop
sub
imul
mov
mov
nop
pop
jns
ds
adc
add
add
lcall
adc
sbb
adc
sub
fistpll
pop
in
iretw
sahf
jp
adc
ret
and
ret
mov
mov
sahf
xchg
idivb
int
movsb
mov
and
iret
lcall
mov
pop
out
jnp
popa
int3
xor
jmp
outsl
aaa
jle
adc
inc
fadd
push
mov
dec
mov
rcrb
jnp
cmp
outsb
xor
addb
mov
jle
rorl
int
inc
sti
sbb
jno
movsl
iret
mov
pop
jl
cmpsb
pop
adc
repnz
cmpsb
adc
in
int
int
dec
leave
incb
popf
jae
sub
inc
jl
xchg
lods
bound
pusha
or
pusha
adc
mov
int
xchg
sub
jnp
repz
popf
imul
inc
sti
xor
es
fwait
and
das
jns
mov
es
pop
adc
sti
int
add
inc
or
dec
dec
clc
cli
clc
out
and
sub
hlt
jnp
xchg
test
mov
lock
decb
call
push
push
add
loope
int3
sub
sub
fiadds
das
sahf
mov
dec
out
dec
or
stos
out
ret
jp
xchg
or
push
rcll
cmp
and
or
iret
inc
adc
andb
sarl
and
pop
iret
jle
and
push
mov
popf
rcl
xchg
enter
je
cltd
decl
and
inc
mov
mov
sub
inc
or
mov
mov
mov
and
inc
incb
cmp
in
or
mov
out
int3
fdivrl
hlt
popa
fwait
popf
jo
jne
shrb
add
sbb
sti
cli
push
andl
mov
mov
sub
jo
adc
fldl
dec
adc
or
mov
pop
stc
cmp
sub
sbb
xlat
xchg
lds
aad
lods
arpl
pop
mov
and
sbb
cmp
cmpsl
mov
jge
cmpsl
out
ss
test
fcomp
add
lea
shrl
pop
fistpl
push
add
push
mov
cmp
xchg
mov
inc
roll
incl
cmp
and
stos
les
mov
dec
aas
lcall
xor
jb
adc
ss
shrb
mov
cwtl
mov
jge
enter
push
xchg
sub
and
fisubs
ljmp
mov
shrb
mov
arpl
popf
or
scas
les
mov
xchg
dec
rolb
dec
lock
ja
jle
and
js
push
faddl
imul
jmp
cs
push
pop
jp
and
mov
xchg
mov
mov
mov
jns
inc
cmp
mov
sub
and
push
pop
mov
dec
mov
mov
out
mov
data16
add
mov
cmp
add
sbb
mov
loope
insl
jl
or
inc
adc
fildll
mov
xor
push
push
cwtl
dec
lcall
repnz
mov
push
push
jge
in
mov
ret
fwait
pop
and
mov
mov
jg
xor
mov
adc
mov
push
pop
sbb
add
ss
or
rcrb
pusha
lcall
mov
jl
xlat
aam
mov
mov
add
cmpsb
fbld
inc
cltd
icebp
outsl
test
repnz
call
lods
mov
shll
xchg
mov
pusha
fucom
sbb
lret
out
lods
sub
outsl
sbb
lret
sub
dec
das
pop
fwait
pushl
lret
or
fisttps
xchg
leave
cli
xor
xchg
scas
add
ret
xchg
loopne
pushf
sbb
cltd
sub
dec
and
xchg
push
lock
incl
push
mov
sbb
mov
in
imul
push
adcl
gs
fisttps
outsl
xchg
fs
mov
into
fisubrl
popa
sbb
int3
aas
xchg
ret
xor
dec
dec
pop
ss
loopne
cmp
test
jge
cmp
cmc
scas
lret
xchg
call
mov
incb
adc
push
nop
in
mov
fisubl
lcall
sub
sub
adc
cmp
cmp
inc
sahf
sbb
inc
or
xlat
jnp
adc
in
jg
xchg
dec
dec
std
repz
ljmp
add
adc
dec
lcall
fucomi
orb
sub
or
xor
mov
test
data16
fwait
sub
or
lock
les
fcompl
pop
jg
add
pop
ret
test
jl
mov
dec
imul
outsl
mov
cltd
aaa
dec
cmp
adc
shlb
push
push
fs
inc
cwtl
sahf
js
out
arpl
push
out
add
push
xchg
fiadds
mov
mov
dec
repz
dec
movsb
dec
shr
adc
fsubl
mov
push
cmpsb
push
push
mov
xor
stc
icebp
mov
mov
pop
adc
cltd
ljmp
je
negb
insl
pop
int3
mov
shl
scas
dec
dec
add
test
xchg
dec
ljmp
xchg
push
mov
push
jl
mov
sub
inc
jp
xor
sbbb
das
je
lods
jae
jns
insl
fwait
cmp
jp
sbb
fisubl
scas
rolb
jb
or
xchg
inc
jmp
add
mov
jle
jl
push
daa
inc
and
mov
push
mov
data16
cmp
xor
fistpll
fcmovnbe
xor
fsubs
dec
mov
daa
add
movsl
ret
movl
push
push
cld
dec
out
xchg
sub
aad
inc
imul
jmp
je
lcall
mov
pop
adc
out
and
or
mov
pop
mov
cmc
adc
inc
push
pop
xchg
mov
imul
and
rcl
cmp
aas
ret
fdivrl
ds
jo
je
add
mov
lret
fwait
stc
xor
mov
sub
push
adc
mov
hlt
jnp
xor
in
xor
jle
out
imul
rclb
push
xorl
add
xor
dec
pop
push
icebp
adcl
sub
and
fwait
cmc
mov
adc
dec
push
cmp
daa
mov
sbb
test
movsb
sbb
addr16
and
scas
stos
cld
xor
jmp
ja
jo
dec
shl
mov
xchg
dec
sub
test
dec
int
mov
in
adc
mov
outsl
sbb
fildll
cmp
rol
xchg
pop
mov
cmp
pop
mov
hlt
ds
xchg
or
cmpsl
loop
sub
add
dec
sub
outsb
fwait
cmpsl
imul
js
mov
cs
or
xor
movsl
push
aad
fists
pop
stos
imul
or
xchg
jl
xchg
insb
dec
inc
mov
psubq
mov
test
rolb
or
sbb
mov
shrb
aad
add
inc
add
sahf
ret
icebp
pusha
leave
push
push
mov
stos
test
test
cmpsb
inc
sbb
leave
adc
xlat
mov
insb
pop
jecxz
mov
pop
adc
ljmp
xchg
xor
lea
into
inc
scas
loope
sbb
and
dec
insl
das
fcomp
sbb
cmp
mov
cmpsb
loopne
out
addb
and
aas
pop
push
sub
stos
jge
mov
cmpb
mov
data16
jbe
in
and
xor
lock
inc
cld
int3
jl
mov
inc
cs
jmp
pop
sbb
jae,pt
or
jb
jecxz
hlt
gs
xor
sub
mulb
call
pop
dec
jae
mov
mov
fsubrs
scas
xlat
mov
mov
pop
add
cmpsl
enter
cmp
pop
push
push
lret
mov
outsl
jmp
in
sub
icebp
int
insb
loopne
cmpsb
add
mov
lods
fcom
mov
aas
push
lods
push
lds
dec
shlb
dec
jns
xchg
jg
enter
mov
repnz
xchg
xor
jecxz
addr16
jbe
add
jns,pt
popf
push
js
ret
scas
test
filds
mov
cmc
rclb
sbbl
call
lods
jo
xlat
pop
fwait
push
es
das
xor
jbe
fsts
push
testb
mov
mov
sub
mov
in
cmp
jno
cmpsl
or
push
movb
pop
sbb
jb
shl
roll
pop
nop
in
mov
jg
mov
cmp
pop
gs
mov
mov
add
out
adc
mov
aaa
add
shlb
and
xchg
test
fnstsw
jo
dec
inc
lods
mov
sub
push
push
jg
mov
cmpsl
xchg
and
inc
push
shrb
cmpb
vmwrite
sbb
imulb
je
data16
jecxz
popa
imul
mov
mov
notb
mov
cmp
dec
dec
jbe
xor
jle
xor
imul
add
and
subl
xor
shlb
jne
adc
and
sub
test
inc
xor
sub
rsm
es
outsb
jne
mov
data16
cli
fstl
adc
notl
div
and
mov
sbb
mov
jle
push
out
fs
stos
jp
lea
or
mov
pop
add
sbb
sub
adc
mov
js
sub
mov
les
gs
int3
pop
fs
call
enter
jno
loope
xchg
scas
sbb
add
call
pop
or
lcall
jle
and
movsl
and
sbb
aam
repz
xchg
and
sbb
xchg
fildll
or
xchg
inc
xor
int
mov
xlat
popf
inc
or
pop
push
lods
mov
outsb
loopne
sti
sbb
jne
ret
xor
push
aam
movsl
lods
cmp
es
clc
cld
inc
fcomps
stos
fcmovb
add
jns
jb
stc
arpl
sbb
test
adc
or
jns
test
pop
mov
add
in
push
out
fbld
aad
adc
jne
jae
xor
out
fcomp
push
nop
jns
les
js
je
push
sbb
pop
dec
push
loope
sbb
into
push
call
lea
sbb
dec
sbbb
jns
dec
std
dec
aad
xchg
das
iret
and
aad
sahf
cmp
stos
fsubl
pop
test
sbb
lods
repnz
dec
test
cmpsl
push
xchg
aam
xlat
or
mov
adc
movsl
sub
xor
outsl
fsubs
in
adc
outsb
not
movsl
lds
add
popw
idivl
mov
mov
lret
xchg
lret
inc
xchg
ret
mov
cmp
jge
mov
mov
mov
sub
jmp
fidivrs
and
adc
cld
or
xor
data16
pop
iret
inc
pop
das
loopne
loopne
pop
das
sbb
adc
sub
xchg
sbb
fbstp
lods
jp
repz
in
push
negl
in
in
scas
in
inc
xchg
jo
pop
xor
ds
out
outsl
sub
and
and
sbb
outsl
jecxz
add
and
lret
add
push
dec
lea
pop
xor
pusha
mov
aad
aad
addl
das
jae
or
push
inc
add
add
bound
movsb
rorl
mov
jmp
or
outsl
test
test
fdivr
mov
or
into
dec
xor
and
xchg
iret
lds
das
shrl
xchg
les
in
fstps
out
mov
stos
mov
xchg
adc
aaa
push
mov
sahf
movl
lahf
add
mov
inc
popf
xchg
lcall
mov
call
test
loop
movsl
insb
dec
jo
and
jbe
push
lds
fs
lahf
js
int3
dec
cmp
aad
leave
arpl
jp
add
xor
iret
xor
sbb
icebp
mov
lahf
sub
sbb
lds
sbb
cmp
test
mov
inc
cmp
adc
add
cmpsb
cmp
push
es
mov
outsb
cmp
dec
out
cmpsb
neg
ja
xchg
in
mov
ror
and
inc
xor
movsl
adc
mov
add
mov
add
dec
and
push
popa
ljmp
in
inc
xchg
pop
lret
push
or
out
jne
or
mov
push
dec
mov
lcall
lret
adcl
xchg
cmp
imul
sub
lock
hlt
insb
mov
fidivs
int
repz
leave
or
jae
lock
cli
push
push
aas
pop
jp
rcrl
mov
popf
aad
mov
adc
movsl
lahf
sbb
sti
cmp
xchg
xor
pop
in
lds
dec
sbbb
dec
lea
pop
mov
add
js
ljmp
stos
into
push
sbbl
clc
cmp
addr16
dec
sbb
test
test
sub
push
pop
aad
in
and
jns
iret
clc
lcall
fdivrp
push
cmp
scas
fucomip
lods
nop
sub
cmc
les
rcrb
lods
jb
movsb
vmread
xchg
out
fidivrs
cmc
fistps
add
adc
cld
cli
mov
jno
and
mov
in
imul
dec
out
mov
inc
sub
ret
int
mov
loop
push
add
inc
sbb
pop
jle
add
pop
std
lcall
ret
dec
in
add
call
pusha
adc
es
cmpxchg
daa
pop
popa
dec
add
sub
adc
push
xchg
not
ss
iret
mov
pusha
jle
fwait
nop
sub
push
mov
adc
jae
lods
and
pop
insb
scas
inc
in
subl
pop
jmp
mov
push
jnp
push
das
outsl
pop
and
inc
outsl
cli
push
and
mov
sahf
adc
xlat
xchg
adc
lods
jno
xchg
stos
test
xchg
in
pop
mov
add
ret
out
pop
lret
push
mov
mov
in
cmp
push
scas
loop
xchg
mov
and
inc
mov
sub
test
scas
adc
test
popf
dec
mov
ficoml
mov
lret
notb
jmp
xchg
stos
mov
in
mov
add
jg
movsl
sahf
mov
jp
and
add
popa
in
enter
mov
pop
add
sub
call
xor
test
or
daa
cmp
addb
push
rclb
dec
jg
adc
xchg
fdivrp
test
dec
imul
mov
or
pop
mov
aam
cmc
push
xchg
aas
mov
pusha
dec
adc
hlt
xor
cmp
mov
mov
adc
filds
mov
sub
ret
sbb
mov
xchg
test
je
sub
jns
sbb
and
lret
clc
sbb
dec
enter
mov
jno
mov
or
sub
pop
rclb
popf
or
xchg
dec
inc
inc
jbe
push
in
inc
mov
xor
arpl
mov
xchg
fiadds
jne
push
or
daa
in
jecxz
in
aas
mov
daa
push
sbb
or
adc
adc
push
mov
xor
sub
dec
pushl
ss
add
push
jne
jg
std
push
fs
xorb
cmpsl
and
int3
int3
xchg
sub
cmp
stc
movsl
cmp
icebp
mov
stos
mov
outsl
std
jg
out
xor
lret
rolb
push
dec
push
movsb
jbe
jge
cmp
mov
dec
xor
mov
jnp
aas
fsubl
xlat
jb
jno
data16
sarl
lahf
mov
out
ds
outsl
lret
je
xor
jp
in
jb
sahf
sbb
push
fcompl
cmpsl
les
sbb
lock
insl
shr
dec
aas
mov
xchg
fisubrs
call
dec
ja
pop
aaa
mov
mov
inc
loopne
mov
leave
repnz
xor
mov
hlt
jae
mov
mov
dec
andl
pop
dec
jne
pusha
pop
push
call
jnp
js
jmp
cs
mov
sub
aaa
rep
xchg
sbb
negl
or
mov
dec
mov
xchg
add
mov
and
cld
pop
sub
and
and
ret
adc
in
mov
push
and
cmp
push
sub
xlat
lahf
outsb
mov
sub
dec
adc
repz
lret
and
leave
push
lcall
int
jmp
xor
mov
push
dec
rorb
in
fidivl
leave
stc
test
push
inc
xchg
mov
xor
loopne
or
xor
cltd
aas
adc
add
push
add
mov
xchg
or
add
insl
cld
jecxz
push
and
icebp
jmp
xchg
pop
dec
sub
adc
imul
aas
bound
sbb
scas
out
xchg
xchg
inc
jns
push
mov
sbb
cwtl
into
stos
mov
jmp
mov
fs
icebp
aad
les
stc
and
lcall
jecxz
pop
xor
test
inc
outsb
sub
sbb
push
and
jbe
sbb
mov
bnd
aas
stc
pop
cs
je
sub
xlat
push
mov
cs
xchg
inc
lahf
mov
sub
sbb
xor
mov
or
mov
aas
es
dec
xorb
rcll
pop
mov
pop
std
scas
hlt
jnp
pop
aad
inc
popa
cmpsb
push
pop
out
cmp
fisubs
scas
iret
popa
cmp
andl
push
mov
jns
jnp
sub
pop
loopne
mov
push
shl
rcr
jmp
lret
lock
or
mov
pop
mov
jns
pop
fcoms
rcrl
leave
in
or
pop
rol
scas
insb
call
add
mov
out
mov
std
outsb
imul
incb
repnz
loopne
js
xchg
cmc
lock
scas
test
daa
and
adc
jp
lret
sub
loope
test
fildl
sbb
push
and
inc
add
sbb
lahf
adc
imul
insb
sbb
movsl
mov
cmp
fistpll
mov
fwait
cmp
rcrl
test
lret
push
nop
test
icebp
std
in
js
aam
adc
lcall
pop
pop
dec
cs
mov
mov
enter
or
js
jns
ret
sbb
add
xchg
mov
jno
pop
mov
add
jno
cli
xor
insl
adc
lcall
cmp
xchg
test
imul
rorb
leave
and
pushl
mov
fimull
mov
jecxz
mov
mov
fisttpl
aam
and
and
scas
or
aad
cld
mov
sarb
xor
jmp
call
pop
insl
les
stos
int
pop
lds
push
mov
cmp
and
aam
lea
out
xchg
or
scas
jecxz
dec
mov
push
xlat
pop
mov
fbstp
fidivs
das
fs
adc
in
mov
mov
pop
add
stos
clc
pop
out
out
or
lcall
sbb
dec
jo
mov
das
sbb
out
rolb
lea
mov
pop
mov
or
mov
push
test
push
adc
push
movsl
mov
lret
clc
mov
sbb
pop
xchg
xchg
gs
popa
sarb
jg
es
jge
pop
vpaddb
inc
popa
mov
xor
jg
stos
addr16
lods
sahf
mov
push
push
pusha
cmp
lcall
lret
sbb
pavgb
aas
int
sbb
fbld
ljmp
dec
mov
push
push
movsl
jp
scas
or
sbb
jp
xchg
nop
xchg
dec
aad
orb
xor
pushfw
pop
pop
test
add
xlat
les
std
nop
push
xchg
xchg
push
ljmp
repz
xchg
jne
stos
push
pop
pop
pop
mov
mov
pushf
test
in
pop
jbe
dec
xor
inc
mov
je
cs
mov
fwait
in
jge
daa
inc
outsl
outsb
in
loop
mov
bound
imul
mov
add
popa
inc
xor
mov
fadds
rclb
out
je
ffreep
loopne
sub
rcll
inc
cmc
cwtl
gs
jecxz
test
jge
fmull
xor
mov
loope
shl
or
cmpsb
and
lret
mov
bound
ret
jecxz
lea
push
arpl
push
add
or
push
cmpsb
je
ja
cmp
and
fisubrs
and
mov
dec
sbb
mov
repnz
mov
ret
int
dec
test
stc
shr
inc
xchg
clc
loop
push
jmp
cltd
mov
mov
clc
pop
frstor
sahf
xchg
scas
sub
insb
stos
mov
mov
xchg
sbb
cmpsb
xor
scas
repnz
sub
lods
stos
pusha
pop
add
cmpb
out
dec
std
and
and
ljmp
inc
inc
dec
jae
movsb
lcall
int
lcall
dec
outsl
repnz
outsl
and
mov
mov
dec
add
and
add
pushf
push
cmpsl
dec
inc
adc
popf
lahf
inc
add
test
and
xor
fsubrl
hlt
fcoml
aam
mov
xor
pop
and
lods
stos
cmc
enter
and
sub
shlb
idivl
into
lahf
into
dec
dec
notb
ja
sti
mov
cli
test
pop
fmul
mov
std
pmulhuw
mov
sbb
or
pop
fs
or
cli
fdivrp
movsl
vphaddbd
xlat
fcomip
sub
and
int3
adc
test
mov
cmpsb
mov
es
mov
mov
inc
lret
dec
int
mov
and
in
jb
fisubl
jne
add
push
add
push
call
roll
inc
in
fwait
push
pusha
lahf
imul
mov
add
xchg
ret
stos
inc
pop
sub
sub
lcall
cmp
insl
xchg
mov
cmp
sbb
enter
negl
in
fcmovne
and
or
or
cmpsl
ficoms
sbb
adc
mov
add
das
or
fwait
popl
lret
ds
cld
in
mov
xor
mov
push
and
and
loopne
push
jbe
xchg
leave
sahf
mov
test
dec
sti
test
xchg
jbe
ljmp
aad
outsl
pop
xor
cmpsb
push
mov
push
enter
jecxz
xlat
xchg
test
shlb
mov
inc
jge
mov
jle
pop
pop
xchg
ljmp
adc
nop
cld
ljmp
daa
jbe
lret
sbb
pop
mov
or
mov
add
movsb
je
and
push
stc
dec
mov
sub
movlps
mov
add
xor
fcmovne
add
xchg
fwait
mov
xor
insl
data16
inc
shll
and
lahf
mov
push
add
add
jle
mov
or
xchg
inc
imul
repnz
add
pusha
mov
stos
add
into
addr16
adc
lods
inc
push
std
inc
mov
subl
mov
pop
pop
and
adc
fs
aas
mov
mov
aad
out
nop
std
and
pusha
add
inc
jnp
cli
jp
and
fs
push
adc
sbb
fwait
xchg
or
xchg
ss
adc
sub
lea
cmp
push
push
push
cld
jne
iret
jo
fldl
lret
in
mov
lods
mov
sbb
aad
mull
mov
sub
dec
cli
sti
test
seto
add
std
push
mov
inc
outsl
sbb
loopne
testb
loop
test
mov
out
les
sbb
push
loopne
loopne
adc
adc
inc
fbstp
pushf
aaa
xor
dec
dec
into
push
out
xor
xor
push
jmp
cltd
jle
inc
aaa
into
shlb
rorb
call
test
inc
mov
es
jmp
fnsave
pop
or
pop
sbb
cmp
and
sub
push
or
pop
int
mov
cmp
pop
dec
push
push
test
mov
sbb
pop
nop
outsl
or
fcomps
xchg
je
lcall
push
pop
and
xchg
fcompl
clc
add
dec
arpl
out
jo
test
arpl
imul
adc
mov
lret
inc
and
sub
repnz
pop
xlat
xlat
jb
mov
sub
hlt
push
loop
imul
iret
mov
or
aam
mov
cld
mov
nop
addb
mov
sub
cmp
add
cmpsl
leave
aas
out
andl
mov
outsb
mov
push
call
inc
insl
inc
mov
sub
in
mov
jbe
inc
test
mov
dec
xor
cld
into
aam
shl
jno
ja
jne
adc
xchg
adc
incb
and
leave
mov
jo
sbb
sti
jmp
daa
out
inc
push
cld
mov
pop
cmp
cmpsb
pop
lret
xchg
cmp
adc
std
push
xchg
orl
iret
cmc
xlat
or
jmp
or
lods
jns
and
jp
cmp
daa
or
and
xchg
mov
add
in
mov
sbb
imul
sub
psraw
repz
cmp
inc
push
or
mov
cmp
out
dec
add
ds
push
sbb
nop
aad
push
jge
jmp
mov
js
pop
cmc
aas
pop
in
subb
clc
pop
mov
loopne
je
pop
mov
ficoml
shl
push
mov
fwait
cmpl
push
mov
or
mov
jmp
dec
dec
push
pop
jecxz
shl
cmp
pop
dec
jg
xchg
push
roll
or
mov
and
push
jmp
in
adc
push
jmp
push
mov
xchg
dec
dec
or
pop
and
jno
xchg
mov
pop
das
into
adc
pop
mov
xchg
gs
xlat
sarl
sbb
imul
jae
roll
pushf
test
les
jl
mov
je
cmp
aas
dec
inc
or
iret
cli
mov
pop
inc
int
push
mov
inc
sbb
dec
mov
adc
loope
fucomp
and
fisttpll
scas
fisttpll
and
xchg
in
jmp
repnz
jb
flds
jns
ljmp
jecxz
nop
repnz
pop
faddl
xchg
pop
jnp
insb
lods
jne
cmp
inc
cli
or
xor
pop
add
aas
sub
cmp
mov
dec
pop
rep
bound
cs
addl
mov
int3
sub
sbb
mov
cmp
outsb
sbb
daa
add
loopne
mov
pop
or
mov
add
sbb
out
cli
pop
cli
or
push
cltd
repnz
inc
mov
mov
faddp
inc
fcmovne
iret
pop
in
les
ret
test
dec
mov
cwtl
call
sub
ds
ret
mov
mov
test
rcrb
imul
lahf
stc
imul
mov
xchg
xchg
les
mov
adc
cmp
sub
les
push
add
scas
scas
jge
movsl
cld
pusha
xchg
cld
std
dec
sbb
sbb
fs
and
js
pop
movsl
jo
and
adc
or
cmp
mov
jns
adc
pop
movsb
cmp
lret
hlt
movsb
xor
xchg
fcmovnbe
xchg
and
clc
imul
dec
das
dec
stc
push
jl
in
xlat
incl
xor
and
jb
popa
mov
dec
inc
pop
adc
push
sub
cld
adc
jns
addr16
out
or
push
cs
and
pushf
scas
sub
mov
xchg
cli
cmp
jo
jge
dec
jecxz
push
jne
inc
jmp
sahf
dec
xchg
ss
and
and
add
repz
mov
cwtl
mov
jmp
dec
cmp
jp
sub
cwtl
daa
cmp
outsb
or
andl
stos
sarb
fsts
xchg
test
pop
sbb
lock
rcr
pop
daa
stc
shr
icebp
adc
add
std
test
imul
loopne
xchg
and
push
and
scas
lods
test
int3
sub
push
aas
push
mov
sbb
inc
bound
gs
out
stos
fcmovnu
lret
sbb
pop
xchg
sti
jecxz
dec
fmul
mov
pusha
xor
cmp
pop
int
mov
jmp
pop
test
paddw
scas
movsb
mov
js
movsb
fidivl
nop
into
xchg
mov
cmc
sti
pusha
jmp
idivl
dec
sub
clc
pop
in
and
sub
push
mov
add
mov
sub
adc
inc
or
ss
into
pop
jle
les
arpl
repz
in
ja
mov
mov
sub
xor
pop
repnz
xchg
ds
fdivs
mov
stos
sbb
test
ds
push
fsub
rorl
mov
cmp
into
or
test
and
cltd
adc
add
sbb
testb
movsl
into
popf
hlt
pop
clc
and
cmp
adc
mov
in
loope
in
add
icebp
call
addr16
and
mul
js
sub
xlat
xor
rcll
sbb
fiadds
test
repnz
pop
inc
mov
int
or
cmpsw
push
dec
rcrl
stc
cmp
xchg
adc
and
cmpsb
daa
xchg
jae
cs
cmpb
and
daa
clc
add
in
cs
xor
pop
jp
loopne
mov
pushl
fcmovnb
inc
loope
aaa
je
adc
cmp
mov
sub
or
repnz
and
out
xchg
jmp
lock
jne
sub
ret
arpl
dec
icebp
rolb
cmp
inc
fs
push
mov
cmp
jmp
enter
sub
inc
int3
xchg
fs
sub
mov
test
aam
xchg
jbe
mov
add
int3
cld
dec
dec
jecxz
fcoml
xchg
fidivrl
jle
out
das
jmp
or
stos
sahf
mov
mov
xchg
ljmp
mov
push
cmp
pop
and
jns
inc
inc
mov
out
cwtl
push
push
mov
fistpll
stos
pop
cwtl
mov
aas
jo
fdivl
fidivrs
jb
add
es
dec
mov
scas
dec
push
and
sti
popl
int
push
shll
cmpsb
andb
lds
das
sbb
arpl
aaa
adc
push
inc
lods
add
mov
leave
xchg
pop
in
aas
cs
out
add
inc
insb
idivl
xor
cmp
add
sbb
and
int3
scas
mov
fs
mov
in
sbb
cmp
cmpsb
xchg
mov
pusha
movsb
mov
xchg
inc
ret
mov
pop
loopne
es
inc
xorb
xchg
xor
lcall
xchg
and
adcl
sti
rolb
push
js
in
cmp
xchg
repz
push
inc
in
jo
push
adc
mov
shll
push
leave
mov
cs
xchg
std
lds
cmpl
pop
sbbb
pop
clc
pop
mov
mov
scas
inc
iret
outsb
mov
ret
xlat
and
call
adc
dec
out
xchg
test
and
xchg
and
xor
imul
inc
xor
pop
lock
dec
mov
insl
push
jb
test
adc
mov
push
xor
xchg
push
mov
sbb
jnp
in
dec
push
jbe
pop
pop
inc
add
sub
mov
pop
loop
or
inc
gs
xor
cltd
out
push
lods
jae
js
std
dec
xor
pop
xor
pop
or
add
popa
fs
lock
mov
mov
aas
aaa
popa
pop
stos
gs
mov
dec
fs
test
add
popf
out
loope
jae
int3
adc
jp
clc
inc
inc
mov
xchg
inc
mov
pushf
mov
push
bound
inc
aas
hlt
fst
dec
mov
sub
loopne
fsubl
aas
cwtl
dec
sbb
and
xchg
cmp
sub
sub
clc
hlt
xchg
subl
imul
cmp
nop
lea
sbb
fisttpll
and
xor
and
jmp
jnp
lret
mov
mov
mov
xchg
mov
mov
fnstcw
ja
cmc
cmpl
mov
lret
lcall
add
and
decb
mov
cmp
sahf
mov
mov
jo
or
push
cltd
int
pop
sbbl
fldl2e
inc
mov
movsl
xor
cli
ljmp
scas
lcall
dec
fnstcw
pop
lods
mov
call
jmp
lret
das
pop
jg
icebp
adc
mov
xor
add
clc
xor
add
stos
jge
gs
notb
mov
repz
push
ljmp
adc
xchg
pop
mov
arpl
mov
bound
pop
iret
sub
loopne
cltd
mov
loop
pop
ret
and
aam
insl
in
loope
dec
inc
out
jl
fiadds
jno
dec
pop
xchg
mov
dec
pop
cmpsb
inc
dec
jmp
imul
cmp
mov
dec
in
fs
xchg
dec
xor
jmp
jp
in
jge
out
xchg
insb
addr16
push
mov
icebp
sub
out
cli
mov
mov
lret
out
fs
push
jbe
xchg
pop
addr16
or
jmp
cmpsb
jl
lret
fistl
scas
cltd
sub
int3
lret
into
in
out
lods
fstpt
sbbl
lret
mov
xchg
xchg
nop
into
mov
xchg
jne
leave
mov
mov
dec
mov
addr16
leave
cmpsl
iret
stos
or
mov
insb
inc
xchg
xchg
xor
push
adc
sbb
out
stc
cmpsl
mov
adc
sub
or
mov
icebp
out
jo
je
jg
jns
test
xchg
fptan
outsl
pop
cmp
sbb
in
jnp
cmp
lods
jnp
jp
popf
imul
add
or
ret
jnp
xor
add
cmc
xchg
xor
push
inc
hlt
lods
ljmp
mov
pop
clc
ljmp
neg
cwtl
scas
or
inc
cmpl
dec
shrb
sahf
insl
movsl
enter
push
mov
inc
outsb
loop
scas
fwait
stos
subl
lock
call
inc
mov
test
out
inc
mov
das
paddw
cltd
inc
add
mov
xchg
xor
cmp
shrl
arpl
pop
scas
mov
icebp
xchg
scas
mov
cmc
mov
sbb
fadd
loopne
and
pop
jb
sbb
hlt
sbb
jo
mov
test
pop
sbb
jmp
push
sbb
test
add
dec
adc
xlat
jmp
inc
dec
and
sti
push
cs
add
adc
push
push
outsl
insb
xor
or
xchg
push
cli
hlt
sbb
movsb
sub
mov
fwait
sub
fisttps
inc
push
out
loopne
out
push
and
scas
push
cmc
sbb
cmc
fmull
jl
call
fcmovb
push
int
imul
mov
xor
out
imul
movsb
push
adc
cli
sbb
aam
loop
mov
idiv
dec
jns
dec
xchg
push
push
cli
shrl
or
popa
adc
inc
sbb
call
imul
push
push
lahf
sbb
mov
pop
xor
dec
xor
push
not
rorb
push
outsb
mov
inc
jmp
fimull
outsb
loope
or
mov
jge
enter
fisttpll
je
xchg
dec
call
xchg
mov
sahf
dec
mov
int3
sub
jecxz
adc
mov
sub
mov
sti
int
pop
xchg
lret
insb
shll
push
sub
push
insl
int
xor
mov
push
aas
push
sbbl
jnp
negl
jb
sbb
sub
jecxz
inc
mov
xchg
outsb
sub
pop
cmp
fldl
loopne
lds
je
mov
ss
cmp
inc
cs
imul
ljmp
subl
and
iret
and
sbb
leave
pop
xor
push
mov
repz
add
gs
and
mov
push
and
mov
or
rcll
jns
in
aam
cwtl
push
clc
mov
inc
dec
adc
sub
test
mov
popa
inc
ljmp
inc
and
inc
mov
xor
mov
fidivs
sub
adc
addl
push
xchg
push
and
pop
stos
loop
cmp
fcomi
adc
call
mov
dec
jge
pop
or
mov
sub
fsubl
xor
push
xchg
pop
bound
jae
mov
fldenv
pushf
fwait
xchg
out
mov
sub
dec
push
mov
inc
push
mov
mov
xchg
sahf
test
stc
movsl
int
ja
push
mov
xchg
mov
into
inc
add
fiadds
jbe
shll
adc
jecxz
ja
stc
sarl
pop
sub
fnstenv
xor
jp
sub
mov
inc
pop
sahf
pop
mov
repz
lret
rolb
pop
int
cltd
dec
lods
xor
bound
jnp
std
pop
sub
pop
jl
push
lods
pop
or
cs
pop
or
ljmp
cmp
xchg
es
icebp
pop
sub
cmp
stos
sub
cltd
cmp
std
pop
xor
je
lret
dec
insl
sbb
jmp
jo
cmpb
xor
stc
pop
mov
loopne
mov
sub
xor
sahf
pop
aas
and
and
adc
mov
repnz
out
fildl
sub
push
mov
popf
aas
or
mov
in
shll
add
vandnpd
call
cmpsb
pop
mov
push
std
xchg
ret
xchg
in
sub
ljmp
xor
pop
ds
ljmp
sub
xchg
xor
cmp
call
inc
ret
fildll
test
mov
jecxz
push
mov
mov
jg
mov
shll
add
cwtl
adc
incl
pusha
sbb
aad
leave
out
imul
fdivrl
xchg
loopne
xchg
scas
sbb
mov
daa
aas
flds
rol
jg
imul
mov
and
lods
adc
int
cs
sbb
jae
xchg
mov
repnz
mov
adc
arpl
outsl
lods
push
dec
push
adc
mov
into
loop
inc
cli
jmp
mov
jle
mov
mov
int3
push
mov
push
jne
cmpsl
adc
jle
out
sbb
mov
scas
pop
out
pop
add
repz
scas
iret
daa
aaa
jbe
enter
loope
jmp
mov
pop
pop
mov
pop
repnz
clc
daa
in
rorl
jge
das
aad
nop
sbb
mov
das
mov
jl
scas
ds
add
cmp
and
sub
fucomi
xlat
in
scas
and
sbb
push
lea
les
jne
stos
pop
je
orb
xchg
jg
pop
ficomps
stos
rol
insl
push
and
push
into
sbb
jmp
inc
nop
mov
popf
xchg
lds
inc
xchg
aaa
add
movsl
lret
add
adc
cli
fdivl
mov
mov
cltd
mov
jae
mov
mov
or
push
cmc
and
loop
lahf
lods
fnstsw
cltd
dec
pop
in
imulb
mov
push
mov
push
clc
sahf
push
add
adc
dec
xchg
push
or
or
jp
xor
or
inc
mov
pop
pop
inc
insl
movsl
add
cmpsb
pop
int
aam
daa
dec
negl
mov
jae
pop
aaa
out
out
out
in
dec
jl
mov
push
push
out
daa
cmp
sub
lods
push
inc
icebp
add
mov
cli
or
dec
popf
aam
bound
leave
xor
mov
pusha
in
inc
mov
andl
out
lret
mov
inc
lods
mov
mov
in
xchg
adc
cmpsl
aaa
adc
stos
push
cmpsl
xchg
push
dec
pushf
mov
int3
sarb
lcall
and
movsb
jnp
adcb
adc
imul
cmp
mov
ljmp
ja
out
mov
adc
inc
sti
adc
scas
pop
add
mov
bound
pop
mov
inc
push
pop
shll
cli
cltd
cli
push
outsl
clc
pusha
and
arpl
unpckhps
into
fsubrl
rcrb
sub
scas
pop
adc
push
inc
sub
enter
test
adc
daa
xchg
mov
int3
pop
enter
iret
and
lret
push
or
cmp
arpl
lret
test
push
arpl
xchg
or
dec
ret
inc
lock
repnz
shrb
jae
ds
mov
sub
xor
mov
and
jns
in
mov
popf
mov
imul
test
mov
insb
int3
pushf
adc
hlt
mov
sub
out
mov
out
cltd
push
pop
xorl
mov
in
addl
les
divl
jno
clc
mov
lret
cmp
lock
mov
adc
out
rcrl
mov
fdiv
cwtl
add
das
sub
adc
jecxz
mov
mov
or
jae
mov
sahf
bound
incb
bound
pop
sbb
push
mov
test
mov
xor
and
lret
push
xchg
or
ffreep
jbe
shlb
lcall
repnz
mov
nop
mov
and
inc
dec
dec
or
mov
push
sub
mov
push
or
loope
and
inc
lcall
fimull
insl
sbb
aam
mov
or
mov
test
mov
aas
inc
inc
and
push
stos
inc
out
mov
call
push
popf
add
sbb
imul
popa
pop
adc
movsb
pop
jo
cmpb
add
in
gs
mov
xchg
outsl
dec
popa
lds
pushf
jo
fldl2e
cmp
nop
adc
xchg
mov
cli
repz
lock
adc
xchg
mov
adc
bound
pop
outsl
push
dec
frstor
negb
sbb
sub
rorl
sbb
mov
xchg
or
pop
xor
fisttps
ret
mov
mov
mov
inc
mov
sbb
fidivrl
and
xor
call
cmp
loope
pop
add
lea
mov
data16
mov
cs
subl
pop
fwait
lods
sub
pop
mov
or
pop
rcr
sbb
daa
notb
adcb
and
sub
jnp
movsl
in
push
pop
gs
mov
xchg
mov
ret
push
mulb
xlat
stos
cmp
outsb
iret
and
cmc
cmp
adc
jb
cmp
xchg
stos
jo
sarl
scas
mov
cwtl
sub
test
add
sub
and
and
out
and
cli
pop
leave
call
mov
incl
jns
mov
divl
adc
arpl
inc
orl
mov
cwtl
gs
or
ss
data16
push
or
or
out
in
or
sbb
daa
shrl
sbb
inc
cmp
adc
or
test
mov
mov
xchg
dec
xor
lea
sbb
xchg
aad
or
stos
lret
jg
and
ret
pop
les
dec
sbb
ss
test
xchg
aaa
in
aam
and
and
js
adc
in
xchg
hlt
lock
jo
xchg
mov
sbb
loopne
clc
push
enter
xor
or
mov
mov
inc
les
or
inc
dec
cld
lods
jg
div
adc
and
lcall
cmp
dec
cmpsl
into
aad
and
inc
fwait
and
sbb
xor
and
ds
adc
cmpsl
push
fstenv
mov
out
aaa
lahf
dec
inc
pop
loop
adcl
pop
cmp
imul
pop
icebp
lahf
popf
mov
jnp
mulb
jecxz
push
or
jle
cltd
pop
sbb
loopne
push
negl
dec
rdpmc
out
and
mov
xor
jns
lods
jne
adc
sbb
push
mov
jnp
loop
push
mov
mov
push
adc
adc
pop
aaa
je
jmp
add
adc
clc
pop
shlb
mov
dec
sbb
hlt
jge
iret
mov
outsb
mov
inc
sbb
fnstenv
and
inc
push
fildll
outsb
mov
and
shl
adc
cmp
movsl
cmpb
fs
add
pop
mov
sbb
mov
int
mov
adc
add
sbb
push
jno
rcr
jle
test
cld
and
test
push
fs
inc
icebp
push
leave
jecxz
inc
jno
out
sub
jae
dec
inc
add
push
cwtl
pop
mov
insb
lock
sub
xor
loopne
in
or
in
pop
mov
push
fstl
call
mov
xchg
pop
test
jg
pop
jae
cltd
cmp
inc
pop
je
or
xchg
je
xchg
fcompl
aad
push
test
add
mov
into
jl
push
inc
andb
repnz
mov
mov
pop
sub
es
push
fisubrl
cmp
ret
out
cltd
ja
addl
lret
pop
push
dec
push
lods
dec
mov
outsb
and
dec
jnp
ret
movsb
lock
gs
and
cmp
push
cltd
fnstcw
gs
scas
arpl
out
xor
cltd
mov
or
xor
insb
pop
mov
pop
je
popa
push
insl
xor
dec
daa
mov
mov
cmp
test
cmp
hlt
data16
ljmp
or
push
push
push
xor
sub
pop
adc
mov
das
xor
sub
fdivp
loop
jnp
pop
xchg
jl
push
in
xor
mov
xor
mov
cmpsb
roll
xor
movsb
mov
mov
mov
lcall
aas
push
adc
mov
push
or
jge
xorb
cmc
xchg
fnsave
int3
scas
pop
cmp
ficomps
jbe
movsl
inc
aaa
jp
push
in
inc
sub
arpl
xlat
add
push
ss
inc
jbe
fisubs
cmpsl
jmp
add
dec
std
inc
movsb
das
pop
ljmp
sahf
adc
pop
add
popf
sbb
std
mov
push
cmp
pop
cmp
xchg
mov
daa
mov
pop
in
inc
bound
fsubrl
fisubs
jmp
push
mov
and
hlt
repz
mov
xor
push
adc
pop
out
pop
push
mov
cltd
inc
push
sub
gs
jmp
mov
stos
fcompl
cmpsb
sbbb
jp
adc
gs
jnp
push
outsb
outsl
mov
mov
push
xor
popf
or
jnp
pop
pop
and
pop
lret
js
add
cmp
pop
leave
sub
or
inc
rcrl
push
sti
hlt
in
shlb
sbb
je
stos
int
fdivrl
mov
shrb
rclb
dec
je
sbb
pop
jmp
movsb
gs
inc
lret
push
arpl
sarb
inc
lods
pop
mov
mov
add
repnz
cmp
xor
cmc
jo
in
sti
and
dec
sbb
sub
cmp
inc
pushf
rcr
inc
jp
mov
in
add
and
es
sub
sbb
loop
loopne
scas
or
mov
lea
and
shrb
in
xor
xor
adc
andb
iret
push
push
and
mov
dec
clc
jnp
loop
mov
sub
shrl
mov
push
cs
sbb
fs
jl
mov
loope
xorl
sub
inc
out
push
dec
loopne
push
mov
push
sub
xor
int3
cmpsb
daa
pop
sahf
scas
or
es
adc
adc
testb
lock
addl
fs
cmc
mov
cs
jnp
loop
xchg
xchg
bound
jae
imul
inc
mov
in
push
xchg
aaa
jl
xor
cmp
cmp
inc
jb
dec
cmpsb
pop
push
push
scas
add
cmp
mov
std
mov
dec
mov
cmp
addr16
test
pop
testb
into
iret
daa
inc
jb
into
or
ds
add
hlt
lcall
xchg
dec
sbb
mov
sbb
dec
and
test
nop
xor
and
roll
sbb
xlat
adc
mov
rol
mov
insb
cmp
adc
movsl
les
push
jle
xor
sahf
jl
fidivs
pop
jp
adcb
lock
iret
dec
outsl
xlat
repnz
add
mov
dec
shrb
add
gs
xor
mov
sub
data16
mov
or
ss
arpl
cmp
arpl
dec
hlt
out
dec
fadd
cli
and
and
insb
negl
inc
ficomps
fs
jge
xchg
jne
add
mov
xchg
stos
jmp
adc
sub
nop
sti
cld
adc
mov
fsubs
int3
call
pop
outsb
adc
mov
mov
les
adc
or
and
add
iret
aas
or
adc
loop
or
aaa
cmpsb
lahf
jl
int3
mov
iret
inc
push
popf
fdivrs
outsl
xor
mov
xchg
jge
sbb
movsb
mov
ds
aaa
js
lods
mov
push
lock
fidivrs
adc
cs
in
clc
jno
popf
jne
mov
inc
nop
mov
pop
ficoml
jge
or
jg
push
sti
cmpsb
dec
fstpt
gs
push
push
push
xchg
pushf
or
movsb
push
mov
rcr
mov
push
inc
add
testl
sbb
leave
icebp
shll
pushf
ss
outsb
mov
out
adc
in
loop
popa
mov
mov
sbb
repnz
pushf
daa
pop
fisttpl
adc
push
pushl
je
adc
jle
jbe
mov
scas
mov
lret
jmp
jmp
es
sbbb
sub
mov
xchg
add
out
outsw
adc
cmp
xor
jb
call
xor
js
sub
or
xchg
mov
call
jno
adc
jo
stos
ret
add
in
push
rolb
test
inc
add
fwait
add
out
xor
add
pop
mov
xor
or
daa
in
es
incl
or
or
shl
mov
popf
mov
sbb
js
movsb
pop
pop
cmp
lods
inc
popa
orb
aas
mov
xchg
mov
push
pop
pop
pop
nop
lret
lret
fisubs
arpl
xor
mov
add
jp
pop
inc
movsl
sahf
lret
jnp
js
sub
xchg
or
or
push
mov
loop,pn
aas
add
dec
mov
and
lock
adc
jmp
addr16
dec
mov
jno
adc
pop
stc
xchg
pop
jbe
fsubr
pop
lds
shll
in
cmc
std
push
insb
out
or
aam
dec
sub
inc
xor
adc
sbb
jecxz
sbb
repnz
push
loope
mov
mov
insl
scas
pop
mov
xchg
jo
mov
xchg
xchg
and
push
push
sbb
inc
push
aaa
push
ficomps
push
es
pop
adc
imulb
cmp
not
dec
dec
pop
ljmp
outsl
out
outsl
lea
in
movsl
fsubrl
sbb
mov
cmp
pop
lea
or
or
aad
loope
out
push
push
outsb
cmp
insb
sub
push
push
push
sbb
cmc
loopne
les
icebp
jbe
sub
movsl
sahf
or
nop
add
daa
aaa
fsubs
and
daa
push
lock
lcall
xchg
pop
cmp
ds
push
jb
push
cli
lahf
sub
outsl
ret
fdivr
out
ss
dec
add
jecxz
ficompl
adc
sbb
mov
iret
imul
jae
push
or
push
enter
adcl
adc
call
or
push
cld
adc
cmp
lret
push
arpl
mov
pop
inc
jne
push
ss
push
fistl
insb
dec
jnp
nop
mov
mov
mov
jnp
mov
cmc
push
fsubs
jbe
cmp
cmp
inc
mov
mov
cmp
pop
in
repz
mov
arpl
rcrl
mov
cs
sbb
fwait
out
pop
je
test
add
jno
or
xor
addr16
lods
shl
bnd
adc
lret
mov
inc
scas
popa
and
adc
dec
jmp
jo
stc
les
bound
pushf
mov
jnp
outsb
or
cmp
sbb
scas
call
bound
mov
jbe
push
aad
scas
mov
fstpt
lods
pop
pushf
adcl
push
pusha
xchg
or
adc
xorb
clc
lret
stc
fistpl
sahf
and
fs
mov
paddsb
xchg
repz
dec
mov
aam
les
in
popf
dec
jge
movsb
xchg
imul
in
es
push
nop
xchg
lea
sbb
jg
in
xchg
xchg
cltd
sub
pop
insl
and
int3
ja
imul
pop
cmpsl
daa
mov
mov
fisttpl
fisubrl
mov
or
xor
xchg
xchg
sbb
gs
push
es
or
sub
mov
std
das
adc
sub
adc
push
jb
add
push
out
dec
push
and
dec
or
sbb
xlat
out
push
iret
lcall
push
test
mov
in
dec
pop
dec
push
movsb
mov
and
mov
xor
ficoml
shlb
push
ljmp
mov
in
js
jnp
sbb
cwtl
add
sbbl
jge
pop
xchg
data16
sub
ljmp
call
in
sub
mov
fdivl
mov
sbb
fdivrl
jl
stos
xlat
pop
pop
lret
adc
andb
cs
scas
or
jne,pt
loop
rcrl
mov
pop
jmp
inc
mov
lock
jle
and
fmul
inc
add
daa
sti
cmpl
ja
out
cmp
pusha
xchg
cwtl
fsubl
inc
inc
shrl
cmpsb
je
shl
mov
adcb
jecxz
arpl
push
lahf
popa
sub
repnz
loope
sub
lahf
in
movsl
test
fs
push
lret
push
lods
cmpsb
cmp
fidivrl
sbb
mov
jae
repz
pop
lret
mov
xchg
sbb
icebp
lret
xor
pop
dec
jmp
lods
into
call
sbb
ss
stos
scas
ret
and
and
out
ljmp
mov
lods
push
ja
dec
cltd
dec
lret
lret
push
ret
pushf
lock
sbb
ret
stos
das
push
xchg
subb
lret
test
pop
sbb
lcall
xlat
das
inc
aas
lcall
sar
addr16
lret
pop
xchg
sbb
ror
data16
xor
mov
int3
pop
push
and
mov
xorl
lahf
dec
fs
or
pop
push
ljmp
inc
push
or
movsb
fmulp
gs
xchg
out
ds
add
mov
arpl
cmp
jmp
not
mov
shl
loopne
adc
ret
inc
daa
dec
inc
psrlw
js
stc
pop
or
jb
repz
test
lret
lods
or
mov
js
mov
jmp
shlb
aad
repz
xor
jae
fsubr
jne
cmp
jo
inc
mul
repz
ss
dec
nop
ljmp
in
call
mov
and
sbb
push
adc
xor
mov
sub
sub
sbb
pop
popa
mov
cmp
fwait
adc
dec
mov
or
test
aam
jmp
xchg
es
lcall
xor
xor
pop
sbb
addr16
in
sbb
xchg
mov
in
push
or
andl
scas
call
hlt
mov
fsts
inc
mov
mov
in
cwtl
adc
mov
push
cmc
or
out
mov
shlb
sbb
outsl
push
rcr
sahf
xor
shll
sarl
mov
mov
xchg
sub
ficompl
lock
mov
shl
jl
mov
ret
out
sub
sub
push
push
clc
es
and
clc
imul
imul
adc
out
ds
in
subl
lahf
das
lea
dec
dec
int3
test
cmp
fidivrl
dec
leave
jnp
dec
inc
aaa
mov
sub
push
jns
sbb
or
ss
jno
pop
enter
pop
inc
out
inc
mov
inc
gs
arpl
and
mov
pop
insl
xchg
mov
repnz
les
mov
imul
shlb
test
jge
pop
movsb
cld
in
mov
mov
push
aaa
dec
or
shlb
mov
es
mov
adc
push
cmp
and
clc
jnp
in
mov
lahf
shrb
cmp
fcoms
ror
aaa
jge
loope
sti
jnp
shll
xor
inc
dec
ret
push
hlt
push
lds
add
rcll
ss
mov
or
xchg
scas
sarl
and
fsubl
push
adc
not
lret
movsb
lock
pop
out
leave
and
pop
ret
pop
mov
hlt
pop
and
cmp
lock
dec
loope
rorl
adc
arpl
mov
dec
fsub
shl
cmc
cmpsb
das
lds
call
jle
inc
pop
xor
jne
push
movsb
dec
subl
jmp
inc
adc
add
addr16
insl
push
rcl
rcrb
mov
pop
mov
daa
jge
cli
cltd
aam
xchg
pop
ss
jmp
test
test
jl
scas
inc
mov
xlat
std
jl
pop
sub
data16
filds
fadd
ret
mov
push
push
test
cwtl
sbb
enter
dec
push
mov
scas
push
mov
pop
xchg
clc
jo
aaa
pop
cmp
inc
xorb
mov
pushf
or
movsb
stos
and
dec
push
xchg
push
inc
mov
nop
icebp
xchg
int
lock
sbb
enter
loop
in
add
cmp
sbb
cmp
test
int
test
adc
cmp
js
xchg
jb
es
cld
push
cmpsl
packuswb
sub
pop
add
inc
sbb
sti
call
xor
sbb
jge
fstps
add
pusha
mov
fnsave
adcl
movsb
mov
and
lret
xorb
sti
fnstsw
mov
test
rcr
shrb
jmp
decl
mov
hlt
push
or
ja
and
lods
add
shll
pop
mov
jbe
inc
jg
loope
out
stos
mov
nop
lds
jno
cs
jmp
xorl
pop
lcall
mov
out
iret
add
and
sbb
imul
imul
adc
adc
and
fxch
mov
mov
adc
jmp
in
push
add
jnp
dec
testb
test
jb
stos
nop
jae
insl
push
cmp
push
xchg
in
sbb
aad
adc
cmc
jae
pop
mov
xlat
jbe
scas
scas
pop
pushf
pop
cli
adc
stos
pop
loopne
cmpl
clc
imul
dec
jne
lahf
pusha
cld
mov
cmp
mov
insl
loopne
mov
ss
adc
xor
inc
pop
jmp
loop
add
cmpsl
xchg
mov
subl
cmp
lds
std
roll
mov
push
movsl
loopne
sbb
lods
pusha
jae
jbe
ret
or
and
adc
dec
outsl
add
daa
adc
jge
scas
sub
or
icebp
inc
iret
inc
xor
or
fwait
sbb
movsl
lret
or
shrl
js
mov
je
dec
cmp
xor
arpl
xchg
cltd
mov
mov
gs
xchg
xor
inc
mov
mov
xorb
mov
repnz
jb
fldcw
adc
sbb
addr16
push
cltd
aam
sti
pop
ja
dec
movsb
and
sub
adc
push
sti
push
mov
add
imul
xchg
lods
adc
jle
pop
jb
push
or
and
fadd
dec
mov
add
nop
loope
test
dec
hlt
dec
mov
push
fidivl
xlat
pop
int
xlat
mull
cmp
sarb
cwtl
jne
sbb
mov
add
cmp
popa
fistl
push
sub
nop
data16
rolb
fwait
jne
jp
sub
push
pop
loope
pop
mov
inc
xor
mov
loope
pop
xor
icebp
mov
push
mov
mov
adc
sti
hlt
outsl
mov
lock
std
hlt
jo
jno
shrl
rol
xor
xlat
inc
push
movsl
sub
add
into
hlt
sbb
add
fiaddl
dec
aaa
sbb
adc
jmp
in
aam
sbb
dec
lret
xchg
jno
je
pop
out
mov
jecxz
xchg
jno
imul
cmp
scas
test
xor
cmp
iret
shlb
mov
lea
loop
or
fsts
push
push
or
mov
mov
mov
xchg
aam
je
lret
push
rclb
outsb
pop
sahf
push
jge
cmp
xor
inc
jae
xor
add
mov
popa
lods
adc
xchg
cwtl
cmp
pop
jg
stos
jbe
popf
xor
mov
push
out
xlat
xchg
jl
mov
push
push
push
dec
and
subb
addr16
pop
push
and
ljmp
insb
iret
pop
stc
das
dec
iret
shll
jp
cmpsb
and
pop
popf
xchg
cwtl
or
mov
cmpsb
out
xor
mov
test
xorb
cmpl
clc
xchg
cmpsb
mov
loopne
and
inc
mov
add
lea
mov
xchg
cmp
test
pop
stos
ficomps
shr
sbb
dec
mov
xor
xchg
icebp
shlb
push
mov
insl
cmp
ljmp
sbb
aaa
jns
push
dec
mov
addr16
int
xchg
mov
jno
lcall
jne
insb
cltd
push
mov
or
xchg
xchg
daa
aam
in
xchg
movsl
sbb
pop
dec
mov
xor
xchg
jae
inc
mov
je
in
xor
sbb
je
lea
clc
xor
add
in
aaa
mov
loope
push
xchg
or
and
dec
js
sahf
push
cmp
popf
cmp
scas
shrb
leave
lods
adc
cli
mov
std
insl
fninit
pop
je
in
andnps
enter
mov
inc
data16
cmpsl
icebp
xlat
add
mov
push
test
ret
nop
sub
imul
aas
in
mov
jecxz
lahf
xchg
and
dec
aad
jecxz
jmp
sub
jns
fcmovne
and
insl
lret
in
shrb
push
lds
test
cltd
jg
stos
adc
sbb
xor
mov
jecxz
jnp
fistps
into
fistpll
dec
sbb
fdivrs
and
hlt
ljmp
jg
mov
out
mov
sub
and
clc
es
popa
pop
mov
rol
in
dec
add
fmuls
pop
test
in
push
dec
lds
mov
cmpl
adc
pop
ljmp
mov
sub
dec
call
les
dec
fldl2e
jb
jbe
mov
mov
xchg
mov
test
or
mov
scas
pop
mov
push
divl
jge
dec
shl
iret
ss
mov
jno
xchg
pushf
pop
adc
inc
js
inc
xchg
pop
fisubs
mov
cwtl
inc
add
ds
mov
jl
sbb
cs
fldcw
and
and
ss
and
xor
xchg
shll
adc
fistl
xchg
in
aad
shl
adc
and
pusha
jecxz
popa
lret
dec
dec
push
lahf
xchg
in
cmp
fdivp
and
inc
inc
imul
imul
inc
xor
push
sbbb
jg
mov
xchg
adc
je
ja
movsl
pushf
inc
lea
push
pushf
movsb
mov
cmp
pop
insb
push
jnp
mov
addr16
sub
sti
mov
mov
mov
data16
je
mov
ljmp
sub
in
or
iret
pop
data16
ret
push
ret
cmp
cwtl
dec
cmc
sbb
icebp
mov
push
cmp
jle
mov
lcall
data16
jge
push
push
imul
add
inc
xchg
imul
mov
mov
cs
ret
or
dec
fnstcw
jle
mov
popa
lret
push
xchg
pop
stos
imul
or
inc
sub
aam
clc
stos
pop
push
mov
ret
pop
xlat
lock
fwait
mov
rorb
jo
add
add
jbe
fidivs
out
cwtl
cmpsl
gs
cltd
mov
nop
and
jae
rolb
mov
popa
mov
imul
dec
in
data16
pop
hlt
mov
and
das
sbb
test
jmp
jno
in
test
fwait
imul
loop
in
pavgw
inc
dec
xchg
xchg
out
adcl
incb
push
out
insl
and
test
adc
adc
test
xchg
stos
xchg
fcomps
xchg
sbb
jl
pop
mov
popa
test
dec
stos
mov
sub
das
test
out
mov
lock
add
jmp
mov
dec
xor
pop
cmp
cli
fcoms
and
lock
dec
pop
or
xchg
dec
pop
fldl
aam
adc
repz
out
movsl
test
inc
inc
jg
jge
ds
sbb
sub
outsb
rcr
push
paddd
lock
hlt
mov
je
rolb
pop
cmpsl
nop
sahf
pop
push
nop
xchg
les
dec
jae
bound
cmp
aam
push
out
iret
mov
or
jne
cmpsb
bound
sti
cwtl
add
xchg
add
dec
cbtw
adc
jae
clc
ljmp
mov
jb
popa
mov
and
xor
push
push
mov
sub
mov
pusha
pop
clc
test
insb
test
repz
xlat
cmp
jg
pop
fdivrl
sub
decl
sti
jns
jo
lds
inc
inc
imul
pop
mov
loopne
inc
in
mov
jb
mov
jmp
mov
hlt
inc
xchg
mov
loop
mov
add
adc
repnz
popa
xlat
xchg
nop
out
pop
arpl
negb
adc
pop
sub
or
jle
ror
mov
and
add
xor
inc
mov
cli
in
insb
mov
inc
mov
pop
inc
popf
arpl
flds
test
js
in
jnp
imul
mov
dec
movsb
jnp
mov
leave
sub
jg
enter
sub
jmp
invd
xor
sub
cmpsl
gs
dec
mov
mov
pop
dec
scas
add
es
xor
insl
sbb
sahf
ret
mov
les
pusha
or
cmp
sbbb
aas
and
mov
leave
in
repz
in
into
je
in
cmp
outsl
jne
mov
mov
push
and
jb
add
xchg
enter
sti
nop
jle
inc
add
jb
xchg
xchg
enter
popa
cmp
imul
jmp
xchg
or
push
lods
inc
out
rorb
push
ret
adc
or
insl
adc
int
xchg
into
punpckldq
loope
mov
insl
cwtl
fs
adc
fstps
lea
popl
sub
cs
mov
mov
jl
jne,pn
nop
jmp
jb
push
mov
fnsave
in
mov
inc
or
lods
xor
ljmp
add
prefetch
inc
and
cmp
xor
les
jecxz
mov
xor
add
adc
ss
pop
add
add
sub
fwait
xchg
div
xchg
das
ja
inc
orb
mov
mov
mov
sbb
xchg
icebp
movsb
xchg
adc
cmp
mov
les
mov
push
and
data16
mov
js
cli
lods
lret
aam
cmpsb
push
gs
dec
mov
or
inc
sarl
inc
mov
jno
inc
sbb
cld
stos
andb
call
adc
inc
in
stos
popa
sbb
arpl
nop
push
mov
sbb
fdiv
aaa
stos
mov
rcll
and
stos
lret
pushf
loop
dec
cwtl
insb
cltd
lds
pop
fs
and
inc
call
push
jge
in
hlt
lds
test
rorl
stos
or
shll
jnp
adcl
mov
xlat
dec
test
cs
jp
push
out
in
hlt
inc
sbb
sbb
mov
push
jl
dec
pop
ss
sbb
dec
add
adc
and
daa
sbb
daa
pop
cmp
dec
movsb
sub
mov
inc
pop
fwait
and
jno
leave
pop
adc
cld
dec
xlat
adc
imul
push
mov
add
add
mov
loopne
or
in
mov
pop
and
imul
mov
mov
jp
in
out
pop
mov
pop
jl
lods
mov
xchg
push
pop
mov
add
xchg
mov
andb
std
mov
aam
ret
mov
xchg
ss
mov
aaa
popa
lds
imul
xor
and
clc
mov
pop
or
adc
decl
into
add
stc
mov
and
test
out
and
sub
daa
rcrl
inc
sub
xchg
aam
movsb
repnz
cmpsl
aam
pop
into
lret
fs
push
pop
add
mov
stos
mov
in
add
xchg
and
add
dec
insb
and
test
add
call
iret
faddl
sub
mov
sahf
cs
in
inc
mov
xor
pop
xlat
sbb
repz
inc
sar
mov
or
addb
adc
cmc
or
imul
iret
mov
cmc
les
cld
repz
sbb
push
mov
xorb
imul
mov
pop
xchg
lods
pop
mov
jle
inc
scas
adc
cwtl
lock
mov
cmp
adc
pop
aad
cli
outsl
stc
loop
add
imul
adcl
mov
out
sbb
cmp
insl
insl
jb
pop
cmp
xor
pushf
shll
les
int3
jp
les
pop
fildl
cltd
inc
xchg
imul
jmp
mov
fstpl
aam
movsb
lret
pop
dec
pop
push
out
cmc
sub
lcall
push
dec
sub
sub
ret
ret
cmp
lcall
mov
das
jmp
cli
mov
roll
mov
sbb
rcrb
xor
arpl
pop
int3
pop
aam
inc
movsb
mov
jg
fdiv
or
dec
push
aam
mov
ss
lret
jno
in
jns
out
pop
jmp
je
pop
enter
daa
outsb
in
and
aaa
bound
xchg
shrl
rorb
mov
xchg
push
movsl
or
aad
ljmp
pop
cmp
outsl
popa
xor
ss
dec
icebp
mov
stc
pop
mov
insl
mov
jno
dec
bound
sub
xorl
pop
jg
repz
jbe
ret
cs
push
sbb
cmpsb
adc
icebp
cwtl
decl
fcmovbe
lahf
jl
or
and
std
pop
and
push
xchg
xchg
mov
dec
push
push
push
sti
cmp
xchg
or
cmp
cmp
cmp
push
cmpl
push
jb
dec
dec
popf
nop
push
int
pop
out
shrb
dec
in
jae
add
xchg
push
sbb
mov
cmp
xchg
push
int3
outsb
test
jl
in
mov
push
and
cli
popa
xor
mov
imul
imul
mov
inc
sbb
frstor
imulb
fwait
shlb
push
jns
mov
mov
rclb
xchg
fs
jae
cltd
imul
and
in
push
xorb
jb
pop
cmp
test
gs
xor
inc
shrb
cmc
sbb
add
pop
xchg
mov
fucom
mov
out
ds
xchg
loopne
pusha
push
push
je
lcall
mov
mov
int
lahf
shll
push
jl
lods
lods
popa
ljmp
pop
xchg
sbb
mov
sub
repz
or
pop
sub
out
pop
cltd
stos
add
fbld
pop
jmp
lea
or
jl
sbb
lcall
test
in
out
mov
test
xor
in
sbb
fdivl
push
or
sbb
insb
add
lret
sahf
jbe
insl
ret
jae
iret
adc
jle
or
std
insb
adc
sahf
out
xchg
enter
xchg
rcl
or
cmp
xlat
pavgw
jg
das
es
hlt
jns
jb
outsl
dec
push
cmp
lcall
add
and
jno
out
leave
jge
cmpsl
icebp
fisttpl
int3
and
jp
mov
fnstenv
xchg
adc
lret
in
popa
adc
lods
pop
dec
pop
or
mov
lock
or
notl
xchg
sahf
inc
sub
cli
pop
jg
mul
rorl
lret
push
pusha
scas
imul
mov
cmp
gs
aas
nop
icebp
dec
sub
imul
in
arpl
shll
and
cltd
pusha
sub
mov
add
fs
fidivrl
xchg
shlb
je
aad
push
loope
outsl
adc
and
add
enter
out
pop
je
xor
testl
subl
outsb
mov
mov
test
push
aaa
add
mov
xlat
jmp
xchg
sub
push
add
loop
mov
dec
or
dec
pop
mov
and
sbb
ficoms
sub
insb
in
pusha
cmp
xchg
mov
decl
gs
jmp
popf
cmp
or
push
bound
or
enter
out
dec
add
leave
xor
test
div
movl
subb
in
and
mov
in
mov
aas
xchg
sbb
arpl
xchg
pop
cmpsl
js
aam
lods
xchg
fiadds
mov
push
jno
int3
fcmovu
in
cltd
daa
inc
lods
or
adc
nop
dec
mov
lock
imul
mov
or
cli
inc
xor
movsb
xchg
or
xlat
inc
push
or
inc
fs
loope
rclb
sar
mov
mov
out
jb
jecxz
cmp
data16
iret
stc
shll
lods
outsl
decl
data16
repnz
addb
sahf
cli
popa
inc
stos
pop
pop
pop
adc
sub
scas
lcall
insl
pop
ret
and
sub
jno
jmp
daa
pop
push
cmp
xchg
cmc
test
cld
dec
jmp
inc
pop
xor
inc
roll
fisttpl
addr16
xor
push
and
mov
pop
mov
inc
push
mov
aas
outsl
fistpll
mov
inc
or
imul
push
enter
pop
adc
and
icebp
xchg
sbb
jbe
dec
cwtl
pop
movsl
or
fs
adc
cltd
movsl
jb
mov
sbb
pop
fldt
mov
imul
lcall
mov
in
sbb
push
and
and
sub
mov
mov
push
mov
clc
in
dec
ret
push
pop
roll
xchg
in
lods
mov
inc
jp
shll
rcl
lods
pop
sbb
in
xchg
add
jns
in
mov
jecxz
cmp
mov
imul
inc
daa
adc
pop
xchg
cmp
mov
aas
gs
ja
jmp
fwait
pop
ljmp
and
lea
and
cmc
jecxz
push
loopne
popa
aad
pop
xorb
stos
outsl
jp
subw
dec
sbb
ja
out
sub
shrb
popf
aad
lcall
test
mov
push
xlat
inc
mov
rcrb
dec
sahf
xchg
out
aad
mov
and
rcrb
cmp
jae
insb
pop
adc
jne
mov
xchg
xchg
sub
jae
jne
vpunpcklwd
inc
xchg
imul
pop
push
sbb
rsqrtps
xchg
jg
sub
mov
repnz
pop
cmp
sbb
stos
push
sbb
pop
mov
sub
xchg
testl
inc
std
mov
pop
pop
jo
into
imul
dec
inc
mov
sub
jmp
mov
sub
mov
pop
pop
mov
xchg
out
lcall
dec
dec
aas
push
sub
xor
push
dec
outsb
icebp
pop
dec
outsb
popf
stos
push
dec
xor
cmp
std
fisttpll
adc
sub
out
fcoms
mov
mov
sahf
dec
sbb
ret
mov
pop
aaa
adc
adc
cmp
out
push
leave
cli
iret
lock
lcall
movb
ja
add
cld
fimull
fisttpll
cmpsb
pop
in
add
stc
and
push
add
cmp
and
stc
fdiv
lret
add
loope
xchg
mov
add
push
pop
shlb
insb
stos
jo
adc
jle
push
pusha
lret
loop
fiadds
mov
cmp
or
push
ret
cmp
or
fbstp
aam
sub
inc
cmp
or
push
lock
push
je
pop
jne
int
rcll
xlat
repnz
rolb
pop
aas
rcl
jl
lods
mov
dec
in
sub
std
lock
xchg
mov
rol
rorb
test
jb
adc
inc
mov
leave
and
pop
ret
jg
inc
or
pop
flds
cwtl
mov
jp
add
add
lods
mov
mov
insl
movsb
in
xchg
scas
and
scas
jnp
daa
push
repnz
insl
mov
out
or
lods
or
icebp
push
les
sub
in
cmp
mov
or
cld
cltd
jecxz
xor
push
dec
fldcw
adc
push
lret
out
cmp
jge
cmp
movsl
xor
mov
adc
rcr
jmp
test
mov
xlat
ret
inc
mov
cmp
cmovne
ret
mov
and
mov
in
bound
fidivl
fistpl
jbe
cmp
out
dec
pop
movsb
jb
dec
pushf
sub
dec
or
outsl
mov
decl
jle
jmp
mov
dec
dec
mov
or
and
dec
xor
fxch
pop
std
icebp
popf
xchg
aam
leave
jae
add
push
push
pop
fdivrl
aam
jge
cwtl
dec
call
push
rorb
enter
fiadds
test
pop
aam
out
jmp
mov
or
xchg
ret
clc
cmp
adc
jmp
mov
lds
rcrl
mov
das
popf
dec
test
loope
or
or
pop
adc
fstpt
or
int3
in
lods
push
pop
xchg
and
xor
data16
pusha
adc
dec
add
enter
cmp
mov
cmp
popl
pop
cltd
dec
mov
and
in
insb
inc
lock
mov
in
fldt
mov
lahf
mov
mov
and
xor
ja
mov
xchg
fs
out
scas
adc
shlb
clc
je
scas
mulb
xor
push
lcall
xchg
add
es
xchg
setg
sub
sbb
mov
xor
inc
push
mov
push
pop
push
xor
add
cmp
sbb
pop
sbb
loopne
jmp
dec
dec
mov
xchg
mov
add
or
cmpsl
xchg
sti
jns
cmp
dec
loopne
outsb
jns
add
pop
cltd
sbb
cltd
xor
popf
mov
mov
mov
or
icebp
arpl
pop
push
add
mov
in
or
and
mov
lods
add
lods
rclb
inc
jbe
enter
aas
xchg
push
bound
aas
cmp
movsl
sbb
push
xchg
lea
mov
xchg
dec
scas
jp
daa
ss
push
pop
shr
lahf
cmp
push
int3
sbb
xor
and
xor
cmp
add
mov
pop
add
mov
jne
inc
fcoms
jp
sarb
inc
pop
popa
insl
jae
lret
daa
test
les
inc
bound
mov
loope
aad
mov
outsb
jl
mov
cld
addr16
cs
pop
movq
pop
sahf
mov
data16
les
and
daa
cmpsl
pop
sahf
push
add
push
pop
or
jb
sub
cmpsl
xchg
rep
popa
push
call
add
rorb
test
mov
sbbb
outsb
jp
insl
aas
inc
jle
aaa
add
and
dec
je
pop
or
and
cs
ja
repnz
sbb
cmp
mov
lea
dec
scas
add
xchg
hlt
int3
push
aam
adc
fidivs
stos
movsb
into
inc
jp
ja
pop
sbb
loopne
xlat
xor
inc
or
jnp
cmpsl
fistpl
nop
add
andb
cs
test
jg
push
xlat
movsl
mov
hlt
movl
pop
lds
cmpsb
or
pop
pusha
add
mov
add
or
or
lds
inc
lcall
outsl
notb
outsl
loopne
scas
sub
rcrb
scas
xchg
add
adc
scas
std
mov
mov
imul
pop
in
mov
icebp
not
mov
rorb
fs
gs
inc
sti
repnz
clc
mov
mov
adc
fidivrs
pop
dec
or
jecxz
leave
push
stos
into
cltd
add
or
loope
fdivrs
dec
dec
sub
test
push
dec
mov
cltd
jo
inc
sahf
loopne
std
gs
and
cwtl
xor
int3
add
cmp
jl
scas
adc
aas
jne
hlt
xor
repnz
add
inc
ret
cmpsl
idivl
dec
mov
mov
sbb
shr
push
dec
mov
sub
jp
push
sub
xchg
push
add
rol
test
sub
add
mov
xor
jmp
xor
out
pop
sbb
xchg
faddp
bndldx
divb
cltd
sti
movsl
ss
cmpl
daa
aam
sbb
push
cli
hlt
popa
xchg
or
subl
fiaddl
add
mov
pop
dec
lds
ss
adc
sti
sbb
push
fmull
push
scas
ret
dec
mulb
pop
imul
ret
int3
rorl
xor
push
add
cmpsb
out
jb
imul
pop
mov
dec
std
sbb
jo
outsl
jp
call
fidivrs
outsb
aam
pop
inc
das
fists
movsb
stc
in
pop
out
and
ret
ds
repnz
data16
out
push
xor
enter
scas
lret
push
test
push
mov
mov
repz
push
scas
fisubs
pop
xor
mov
fildll
or
cmp
data16
cmp
jne
test
xchg
push
xor
imulb
sbb
out
sub
add
sbb
mov
lahf
push
addl
jp
scas
adc
lock
push
jecxz
pop
std
fwait
dec
out
iret
inc
pop
cmp
sbb
mov
jo
cmp
mov
pusha
out
dec
sahf
xor
add
popa
sbb
inc
std
out
dec
mov
or
xchg
es
cmp
lock
lcall
mov
mov
xchg
cmp
or
xchg
or
sub
shrl
loope
or
mov
pop
outsl
cmp
push
lahf
jo
lods
xor
mov
fnsave
adc
mov
mov
sub
jg
inc
movsl
loope
push
mov
jmp
das
adc
or
or
dec
xchg
jle
fcmovbe
xchg
push
cwtl
xchg
out
lds
adc
fidivl
js
xor
xchg
arpl
or
dec
push
ret
lcall
xor
and
dec
xor
push
out
sub
movsb
es
popf
mov
mov
mov
sbb
mov
ljmp
sbb
mov
adc
ret
push
sub
add
lret
add
xor
or
cmp
in
das
and
outsl
mov
das
cltd
ss
dec
lds
xchg
xor
lcall
cmp
or
xor
cmp
mov
mov
sbb
nop
or
lock
out
pop
or
das
cmc
mov
and
xor
repz
movsb
and
and
mov
sbbl
mov
mov
insl
jecxz
test
dec
or
sbb
dec
mov
push
repnz
popa
lods
mov
and
sbb
mov
pop
pop
imul
add
inc
je
pop
int3
jbe
scas
ficoml
or
in
aaa
enter
mov
ss
mov
or
adc
adc
pop
into
outsl
add
test
xor
dec
push
loope,pt
arpl
addr16
adc
add
pop
push
inc
cmc
call
call
nop
cmpsl
movsl
jecxz
jnp
cmp
push
out
dec
js
add
pop
inc
imul
ret
cmp
xsaves
fsubrl
loop
pushf
loop
mov
adc
sub
add
sub
dec
ret
inc
hlt
push
std
cwtl
xor
insl
xor
cwtl
js
xchg
xchg
ss
fldt
adc
loop
out
icebp
test
or
xor
push
jl
hlt
lret
insl
fmuls
das
fsub
popf
sbb
mov
xchg
add
pop
aas
test
stos
cld
mov
lds
into
cmp
adc
sbb
je
neg
lret
xor
shl
fiaddl
es
adc
sub
aam
movsl
jne
int3
jne
testb
scas
and
fldl
sti
jge
fisttps
hlt
je
fwait
sub
out
and
mov
xor
inc
mov
std
insb
lods
sbb
iret
add
jge
cmp
jo
xchg
xor
sbb
arpl
push
cmp
sbb
mov
adc
push
out
mov
insl
rcrl
adc
jb
in
jl
inc
ret
pop
fidivrs
sub
scas
repz
mov
fldt
push
repnz
dec
sub
inc
fwait
imul
arpl
inc
add
jp
mov
in
adc
xor
lods
repz
lcall
jmp
lods
mov
mov
stos
add
gs
pop
and
ljmp
imul
and
xor
rorl
fistpll
pop
xlat
push
jns
or
mov
addr16
addb
push
or
lods
lea
and
imul
sbb
cli
dec
mov
mov
mov
arpl
in
sub
or
out
ss
dec
push
dec
pop
into
cld
push
sarb
mov
les
mov
outsb
xchg
aad
scas
js
add
sub
subb
loop
mov
sbb
aaa
adc
aas
xor
pop
int3
nop
sbb
adc
xor
rcrb
jp
fisubl
push
mov
mov
setns
in
outsl
sub
xchg
pop
aaa
test
jle
pop
cmpsl
divb
dec
shr
lret
dec
mov
jp
fbld
das
mov
out
mov
fcoms
cmpl
int
js
addr16
call
cmp
or
cmp
sbb
aam
adc
or
sbb
jo
in
inc
cli
bound
pop
jg
pop
mov
xchg
pop
call
xchg
add
mov
mov
stos
iret
adc
mov
mov
cltd
add
fiaddl
out
sub
xchg
icebp
sub
ss
fsubrs
fcoml
xchg
mov
mov
xchg
pop
cs
cld
sub
cmp
sahf
push
fwait
in
or
pop
and
xchg
pushl
inc
jb
adc
or
add
ds
lret
nop
addl
hlt
lods
into
mov
inc
mov
insb
jae
pop
sbb
loop
adc
sbb
daa
jbe
ret
add
push
mov
stos
stos
adc
rorb
push
insb
sub
mov
and
mov
popf
pop
jecxz,pn
adc
out
xchg
aam
xor
out
push
std
imulb
xor
cmpl
pop
xchg
pop
les
push
pushf
enter
divb
lahf
repz
xor
adc
xchg
sbb
dec
enter
repnz
and
add
sbb
cwtl
xchg
outsl
fdivrp
mov
pop
lret
xchg
xchg
sbb
jae
add
inc
push
add
das
nop
hlt
or
movsl
or
pop
lods
xchg
out
cli
les
jnp
jne
enter
adc
push
mov
sub
and
les
sarb
sbb
and
arpl
push
push
dec
loope
stos
push
sub
roll
arpl
shll
jae
shrl
mov
xchg
mov
lret
xlat
xchg
icebp
push
mov
jne
pop
xchg
mov
int3
clc
cld
cli
rcrl
dec
pop
fisttpll
scas
mov
cwtl
sbb
loop
xchg
dec
mov
mov
inc
inc
mov
and
mov
cmpsb
cmpsb
sbb
pop
repnz
ds
and
inc
rol
and
mov
sbb
push
pop
addr16
nop
pop
xchg
insb
iret
push
inc
inc
das
movsl
das
xor
jecxz
jmp
js
shll
jle
popf
sti
push
push
xor
jo
xchg
xor
xor
fisubs
push
imulb
inc
gs
or
movsl
mov
xchg
stos
inc
ret
push
mov
cli
mov
test
mov
loop
gs
ss
add
movsb
out
inc
push
ja
xchg
pop
and
data16
push
and
xor
mov
cli
sti
loop
push
and
mov
aaa
jns
cltd
ffreep
push
scas
out
xor
arpl
push
sbb
adc
dec
mulb
insl
xchg
gs
push
test
mov
dec
das
aad
cltd
push
pop
or
add
shlb
push
inc
mov
test
inc
fwait
addl
aad
mov
lcall
xchg
pop
shl
scas
dec
jmp
js
adc
sti
loopne
dec
lock
mov
mov
dec
push
aam
scas
filds
jo
fcomi
push
mov
loopne
adc
mov
mov
aad
or
push
pushf
fwait
hlt
inc
jns
fnstenv
mov
hlt
fldenv
add
leave
cmpsb
pop
xor
out
dec
or
int3
insl
sar
add
fdivs
lcall
xchg
insb
xchg
mov
into
xor
repnz
jp
adc
mov
sbb
in
clc
fistpll
xchg
arpl
ja
int
pop
js
inc
push
and
outsb
movsl
ficompl
add
arpl
fidivs
lcall
movsb
dec
jle
test
loopne
push
ja
sbb
out
jb
push
lds
cwtl
pop
push
out
xchg
repnz
sub
mov
push
inc
test
das
mov
jae
adc
dec
mov
dec
rolb
lcall
loop
mov
xchg
cmp
jmp
les
hlt
sbb
les
and
or
jl
push
add
test
pop
and
sti
push
in
fdivrl
adc
xchg
cmp
scas
pop
jge
daa
insb
push
loop
cwtl
inc
jo
push
push
inc
mov
push
sbbb
jo
pop
mov
movsl
jno
or
add
jns
imul
fwait
cmp
sub
jle
cmpsl
jnp
clc
adc
push
fisubs
mov
sub
leave
and
je
testb
or
enter
out
push
movsb
sub
mov
sbb
pop
repz
mov
movsl
inc
into
mov
cmp
mov
and
push
insb
jecxz
or
mov
push
mov
aam
dec
cmpsb
push
subl
dec
mov
loop
push
ret
mov
fisttpl
sbb
int3
lds
fwait
ds
insb
jns
cmp
stos
dec
cmpsl
gs
sahf
xchg
data16
in
jno
mov
add
repz
mov
les
jmp
lods
mov
xchg
pop
addb
mov
test
and
fistpl
repz
in
sahf
loop
mov
add
ds
scas
call
ss
fidivrl
shll
xchg
pop
xor
xor
push
push
jo
dec
sbb
mov
sbb
loope
mov
subb
sbb
shrb
dec
les
cwtl
pop
pop
rcrl
and
pop
das
test
jl
clc
sahf
jnp
add
xor
lds
dec
dec
push
jo
mov
or
fimuls
daa
mov
inc
push
push
jae
cmp
jne
fsubl
in
mov
cmpsb
test
bound
xchg
inc
mov
cld
sub
into
mulb
mov
gs
dec
mov
repz
ljmp
movsb
fidivs
adcl
in
popa
testb
enter
push
push
in
dec
sub
push
movsb
dec
mov
idivl
rclb
aad
mov
leave
es
cmp
pop
inc
inc
movb
fcompl
imul
xchg
sbb
jl,pn
mov
sahf
xlat
lods
bnd
xor
movsb
adc
xor
cwtl
pop
shlb
pop
movsb
cmp
mov
leave
sarl
sti
fistpl
ss
sbb
sti
mov
cmp
stos
shl
in
lods
sub
sub
xor
and
jmp
sub
rcrb
push
fldcw
cmp
xchg
push
jl
adc
pop
movsb
repz
in
mov
sbb
scas
sub
push
pop
js
jno
loope
xor
cmp
fisttps
fstpt
mov
das
push
loope
inc
lods
in
xchg
nop
or
xchg
dec
mov
leave
nop
mov
unpckhps
test
push
in
rclb
inc
pusha
adc
sarb
adc
push
es
lock
std
xchg
adc
xchg
mov
arpl
fisttpll
push
pop
ret
int3
sar
fadd
cmp
in
sub
xor
in
push
and
jno
mov
adc
mov
mov
pop
gs
push
mov
stc
cmp
pop
sbb
inc
mov
pusha
xchg
xchg
cld
mov
cmp
mov
mulb
add
xchg
xchg
adcb
xor
addl
icebp
cmp
dec
ljmp
lods
aad
lods
jecxz
fwait
ret
enter
das
push
jno
mov
push
jb
out
into
stos
cmpsl
lret
imul
bound
pop
js
mov
fsubr
sti
mov
mov
inc
pusha
std
movsl
out
and
mov
pop
imul
mov
and
xchg
xchg
jb
xor
mov
jne
lcall
mov
pop
xchg
test
cmp
sub
pop
mov
push
movsl
ljmp
mov
xchg
notb
bswap
repnz
pop
push
cmp
mov
dec
lret
cmp
inc
hlt
push
jmp
push
mov
mov
push
inc
in
fwait
int
push
in
push
movsb
js
inc
outsl
xor
add
cmp
mov
add
adc
mov
add
lret
sbb
sbb
fdivs
aaa
and
rcll
lock
sbbb
push
cmp
ljmp
repz
hlt
lock
and
mov
aad
mov
cltd
mov
rcl
mov
shl
jmp
fs
adc
test
lret
pop
push
mov
inc
sbb
pmaxub
pop
bound
sub
sbb
pop
adc
jl
lock
or
test
es
push
mov
popf
add
or
sbb
in
jo
pop
jmp
pop
inc
inc
mov
mov
xor
loope
or
xchg
fcmovne
mov
or
and
pop
jmp
jge
jae
mov
sahf
push
bound
adc
je
and
scas
push
inc
push
adc
sub
fsubl
mov
js
or
aas
lea
lock
and
data16
inc
je
loope
push
lahf
xchg
rclb
lahf
popl
hlt
lahf
jbe
cs
or
sbb
sti
mov
call
shlb
xchg
mov
daa
sub
jmp
pop
ret
push
imul
imul
ret
lods
mov
lock
flds
out
inc
insb
inc
dec
fnsave
loope
mov
fwait
jno
add
sti
mov
jg
inc
jmp
mov
push
jnp
mov
dec
jp
movhps
push
and
pop
or
pop
sahf
sbb
lret
jnp
sbb
mov
mov
xchg
adc
enter
jnp
pop
mov
aad
mov
jnp
xchg
sti
jnp
dec
or
outsl
mov
fcoms
stos
fnstcw
xor
jno
pop
pop
in
lods
and
rcrb
inc
mov
mov
fwait
dec
sbb
sbb
mov
mov
out
into
xor
mov
mov
mov
and
rolb
jno
fsubrs
add
out
mov
and
cmp
xchg
in
xchg
xor
outsb
xchg
ret
fists
fnstcw
les
pop
jge
aaa
std
xchg
cmc
inc
in
out
inc
out
repnz
xchg
xor
enter
xor
sar
fst
imul
aam
fisttpll
orb
lea
or
sub
xor
push
add
lret
sub
mov
push
cmp
dec
lahf
add
cmp
add
lods
pushaw
jae
movsb
rol
sub
cmpsb
imul
loop
int3
pop
das
mov
or
jp
insb
mov
mov
push
mov
fs
jl
sbb
fnstcw
jp
or
ret
imul
xor
lret
bound
sub
fsubrs
je
insl
ret
jb
ja
sub
mov
cmpsl
fmulp
jns
or
dec
out
add
cmpsb
sbb
mov
lahf
and
ret
lret
adc
push
xchg
push
mov
jecxz
movsl
insl
aam
xchg
stos
test
dec
test
sub
das
cld
ljmp
add
sti
jae
cmp
rorl
ljmp
add
push
push
pop
loope
push
cs
xchg
jl
int3
je
inc
call
hlt
push
arpl
loop
data16
xlat
adcb
imul
or
and
add
addb
sub
jne
outsb
leave
inc
insl
inc
shll
sbb
adc
mov
or
rcr
ficoms
and
push
ljmp
push
fsubl
adc
shll
aad
inc
icebp
orb
test
mov
nop
dec
jp
adc
pop
jo
ficoms
jae
scas
add
add
jle
loope
mov
cwtl
sub
push
xor
shll
and
dec
lods
mov
mov
xchg
into
xor
push
sub
jbe
jnp
xchg
push
xor
lcall
pop
jo
sub
ljmp
fidivrl
cmp
insl
jo
pop
add
sub
mov
or
shlb
ret
aaa
xor
or
cmp
or
jb
pop
inc
negl
mov
xor
pusha
lock
xor
and
sbb
xor
mov
xchg
sbb
add
sahf
sbb
jecxz
sub
inc
daa
mov
xchg
in
mov
sahf
popa
bound
cmp
sbb
cs
dec
iret
mov
addr16
jns
jp
fisubs
out
mov
popa
xchg
inc
add
sub
outsl
pop
mov
dec
mov
inc
std
in
adc
dec
mov
mov
shll
mov
sub
and
mov
out
fisttpll
int3
push
out
mov
dec
push
sbb
rclb
pop
xor
mov
cmpsb
mov
inc
xchg
movb
or
addr16
pop
fsubl
mov
fwait
adc
mov
cmp
pop
popa
push
dec
rcr
cmpsl
push
xor
dec
rorl
es
or
pop
mov
pop
arpl
fmull
sub
cmp
or
outsb
adcb
mov
in
or
in
jecxz
in
jle
ret
adc
pop
push
mov
idivl
pop
sarl
dec
cmp
nop
es
stc
or
push
add
test
das
xor
shrl
push
movsl
sbb
outsl
sbb
invd
dec
test
mov
xchg
mov
sbb
push
lahf
mov
mov
rclb
mov
addr16
cli
scas
push
sub
push
xchg
je
xchg
out
ret
cmpl
sti
daa
xchg
outsl
gs
std
loopne
or
cmp
mov
call
push
shll
or
xor
imul
das
iret
in
and
inc
aam
push
and
ljmp
jp
adc
pop
pop
sbb
jno
sbb
push
sub
out
rcll
ds
adc
mov
fwait
mov
addr16
addr16
lahf
fdivl
fidivrs
jp
adc
aas
punpckhbw
daa
push
jg
cmc
push
les
daa
pushf
jl
jbe
lods
cmp
sub
push
test
adc
pop
call
mov
fdivrp
in
pop
jl
sbb
push
repnz
mov
mov
mov
jle
jnp
push
xor
int
subb
icebp
mov
rolb
roll
or
jl
lret
cmp
out
add
sbb
dec
pusha
test
mov
fsubrl
pop
xchg
subb
ljmp
out
jge
xchg
inc
stc
into
push
jmp
out
notb
loopne
pop
jmp
add
pop
dec
or
mov
repz
aam
sub
add
add
scas
fsts
ret
dec
pushf
clc
or
mull
je
cs
in
inc
mov
push
and
cmpsb
push
clc
or
xor
cmp
lods
or
outsl
adc
and
rorb
das
pushf
pop
xorl
fstpl
shlb
pop
dec
inc
loopne
xor
aad
loop
out
roll
jmp
popa
clc
aas
lret
into
clc
fdivrs
movsb
add
push
xor
mov
sub
cmp
mov
sub
inc
ret
jp
shll
rclb
jbe
xchg
xlat
sbb
gs
popf
repnz
popa
add
sahf
call
dec
sub
in
push
movsb
jp
mov
fwait
add
les
jl
inc
fdivp
les
and
cmp
jecxz
xchg
pop
shlb
fmull
sti
fiadds
or
and
lods
mov
cld
push
cmp
lds
mov
mov
popa
movsb
sbb
mov
test
mov
mov
out
enter
push
popa
jne
sbb
stos
popa
mov
push
shr
orb
dec
mov
fdivrs
push
ds
mov
jbe
shl
test
outsb
jne
hlt
pop
sbb
mov
gs
cmp
popa
mov
push
sahf
dec
int3
mov
mov
mov
dec
nop
and
insl
repnz
xchg
inc
xchg
add
mov
xchg
in
push
mov
nop
iret
cltd
das
aas
scas
lea
into
cmp
es
cmp
in
mov
fiaddl
jns
lret
inc
mov
lods
mov
xchg
shlb
mov
xor
popf
out
test
mov
gs
xchg
fwait
call
leave
inc
sbb
inc
in
fistps
in
les
mov
jmp
arpl
mov
mov
sbb
add
inc
cs
fidivl
stc
ljmp
jle
ret
and
cmp
xor
mov
rcrb
add
js
jg
add
inc
out
pop
in
fcomps
cmpxchg
loope
adc
testl
aam
lods
lds
mov
sahf
cmp
cmp
jnp
pop
in
mov
lret
adc
fnstenv
pushw
std
xor
movaps
sahf
aaa
or
push
in
aad
or
int
mov
sbb
xor
xor
lret
mov
push
mov
mov
dec
jns
inc
and
cltd
shl
test
je
leave
jbe
mov
cmpsb
inc
clc
cmovge
cmpsb
ss
adc
push
pop
sahf
mov
xchg
movsb
xchg
sarl
es
addr16
jbe
jb
pop
stos
xor
sbb
mov
pop
loopne
dec
mov
mov
push
inc
sbb
and
sub
dec
ljmp
push
adc
jp
vcvttss2si
push
icebp
cmpsl
cmp
movsl
jnp
cwtl
inc
out
push
and
ja
fsubl
add
and
push
pop
mov
pop
xor
inc
or
aas
xlat
xor
xlat
adc
fildll
je
fistl
shl
sub
insb
pop
fs
and
mov
rolb
push
inc
and
imul
pop
ret
loop
mov
out
xor
cmp
xchg
push
and
lea
int3
fdivrs
js
out
adc
in
orl
call
jge
sub
add
pop
stos
cs
mov
cs
jl
inc
loopne
enter
mov
xor
nop
loope
out
js
xor
jb
mov
scas
fldt
dec
xchg
push
nop
xchg
push
push
sub
or
xchg
mov
xchg
mov
fs
adc
rorb
xor
sub
fisubrl
xor
lahf
mov
push
push
push
push
dec
adcl
add
stos
subl
cmp
ret
add
fistps
sti
mov
push
sbb
iret
out
inc
lcall
add
inc
scas
enter
mov
adc
push
dec
fldcw
les
sbb
neg
dec
std
dec
and
in
sub
nop
inc
icebp
or
fidivs
leave
mov
jmp
mov
push
inc
pop
stos
out
mov
sti
or
sbb
adc
xchg
jmp
jae
test
inc
lahf
rclb
aaa
sahf
test
sti
push
fwait
lds
mov
test
insb
stos
scas
xchg
das
add
push
mov
jb
fs
insl
and
pushf
into
mov
jns
bound
fdivr
es
adc
dec
mov
cmp
int3
dec
sub
dec
mov
inc
and
addr16
bound
fsts
and
push
cs
rcrb
xor
jbe
mov
mov
mov
cmp
cmp
mov
int3
int
or
aam
sub
fs
sbb
repnz
sub
fwait
test
cmpsb
jb
jbe
lret
jne
jecxz
pop
pusha
xchg
cmpb
and
cmp
push
pop
xchg
xchg
add
mov
jg
imul
jbe
cmp
jge
cmovg
dec
pop
adc
add
pop
jno
popf
inc
mov
repnz
shll
pop
pop
add
add
dec
mov
mov
and
and
mov
push
or
addb
xchg
xchg
mov
ret
adc
lods
rorb
rcrb
shll
push
jns
hlt
push
xchg
dec
xor
lock
adc
std
adc
fimull
add
jmp
jno
mov
and
push
aam
repz
adc
sti
push
pushf
xchg
lock
aas
mov
dec
orl
ret
and
mov
shll
xor
jmp
mov
and
test
hlt
xor
mov
cli
mov
cmpsb
inc
jno
arpl
mov
jp
inc
ret
push
inc
bound
lahf
es
fdivr
insb
into
shufps
inc
dec
daa
sub
arpl
aad
stos
in
jo
sbb
sahf
pusha
mov
aam
xorl
repnz
mov
lcall
dec
aaa
aam
inc
jmp
xchg
ror
movsb
pop
mov
pop
xchg
sub
imul
add
push
es
sbb
push
les
int
xchg
cld
mov
mov
sbb
fs
imul
lahf
into
pop
and
shrl
xchg
out
sub
ss
mul
pushw
cld
cmp
dec
orb
lods
ret
xor
and
lahf
pop
cmp
daa
pop
test
mov
push
fimull
sbbb
scas
cmc
adc
outsl
jbe
xor
out
cmp
inc
in
fstpt
lahf
pop
push
stos
imul
sbb
out
dec
jl
cs
adc
imul
pusha
add
loope
mov
push
out
stos
xchg
mov
ljmp
out
call
or
mov
mov
mov
imul
rol
dec
dec
shlb
inc
scas
aam
outsl
jge
jb
mov
xchg
dec
je
adc
add
cmp
ss
cli
and
ds
mov
in
cmpsl
dec
in
sbb
add
aam
insb
mov
xor
xor
mov
jno
or
dec
enter
sbb
popf
sbb
int3
mov
adc
mov
ss
pop
push
mov
int
loopne
in
xchg
jmp
sbb
lods
adc
pop
mov
cmp
cld
loop
popf
sbb
dec
mov
push
adc
scas
shl
test
jbe
test
or
dec
dec
sahf
push
cmp
lahf
xchg
or
insl
push
and
add
xchg
push
test
dec
ret
push
mov
cmpsb
inc
or
outsb
orl
fwait
push
nop
cmp
outsb
gs
jmp
divl
inc
shl
cltd
sbb
sahf
sub
mov
dec
sbb
loope
pop
pop
pop
outsb
or
add
pop
outsb
mov
or
lds
lahf
or
xchg
iret
pushf
xor
xchg
adc
pop
jmp
push
xor
repz
and
or
scas
xor
jns
inc
mov
movsb
bndldx
dec
mov
test
cmpsb
cmc
cmp
mov
data16
mov
js
fisubs
ret
iret
push
cli
adc
clc
inc
pop
pop
popa
push
scas
movsl
les
xor
popf
inc
in
xor
adc
rcll
jo
lock
jbe
and
xchg
es
pushf
vmread
daa
inc
xlat
je
test
mov
or
sbbl
jge
jl
clc
movsb
pop
iret
cltd
or
sub
int3
xor
xchg
sbb
ret
cmpsl
ljmp
mov
in
out
pushf
pop
mov
add
shlb
das
lock
fdivrp
aam
xor
in
sub
out
push
dec
mov
test
add
ret
scas
mov
dec
xchg
xchg
popa
pushf
cli
lock
stc
insl
lcall
stos
bound
ss
addl
lods
mov
hlt
cmp
add
cli
js
push
in
cmpsl
icebp
mov
aas
ss
loope
mov
les
adcl
jmp
jmp
add
mov
aam
and
fcom
add
mov
aas
sub
flds
or
push
and
pop
in
data16
cmp
ret
cmp
int
push
sub
adc
cmp
pushl
jae
and
inc
ljmp
in
mov
xor
les
push
cli
es
inc
pop
pop
add
xlat
addl
mov
imul
stos
rorl
push
imul
pushf
cmp
push
gs
incl
sub
dec
adc
mov
push
jge
push
out
xor
xor
or
sbb
pop
fmuls
insb
hlt
or
int
dec
leave
xchg
je
pop
jecxz
aaa
xchg
sar
sub
int3
fidivl
xchg
hlt
sarl
daa
cld
sbb
lods
ret
addl
xchg
out
cmpsb
inc
or
pop
aam
mov
mov
insl
xor
clc
mov
adc
outsl
movsl
cld
xorl
jmp
dec
comiss
xor
add
adc
cmc
xchg
movsb
imul
xchg
add
stc
pop
or
data16
fldt
mov
repnz
mov
add
dec
sahf
popa
xchg
scas
push
pop
fldenv
add
jbe
mov
dec
lock
arpl
js
hlt
jle
adc
push
pushf
mov
aam
jbe
fwait
ret
leave
sbb
fmull
xor
lock
xchg
lret
leave
jae
fcmovnb
push
setl
pop
push
das
xchg
jno
addr16
shll
ret
out
orb
or
je
leave
cmp
mov
mov
jno
fidivrl
mov
dec
bound
push
bound
push
jae
addr16
add
jbe
push
ret
mov
lcall
rcll
jle
adc
ljmp
sub
movsb
mov
xchg
or
mov
cs
pop
ss
mov
sbb
sub
pop
mov
xlat
mov
pop
cmp
dec
xchg
movsl
mov
in
pop
pop
mov
ficoml
sbb
pop
mov
bound
rep
pop
data16
popf
add
and
jo
imul
addr16
in
ss
loop
mov
push
aas
inc
mov
aam
insb
or
arpl
sub
mov
push
mov
push
dec
cmp
cmpsb
sbb
add
mov
negb
jp
sbb
stos
shrl
ja
out
dec
inc
or
jns
dec
mov
fsub
dec
in
ret
das
imul
jo
cmc
inc
arpl
pop
add
push
cmpsb
aad
aaa
xchg
sub
aam
pop
sbb
jle
nop
inc
out
aad
fldt
js
mov
xor
or
sbb
pop
mov
sbb
inc
lods
xor
outsb
outsb
test
sub
sub
repz
dec
and
clc
xchg
je
popf
ror
int
pushf
popf
fcomi
ret
sahf
adc
push
mov
sbb
adc
cld
xor
sbb
sub
mov
mov
and
xchg
dec
push
daa
fwait
xchg
out
nop
mov
push
pop
push
dec
sub
adc
repnz
mov
fstl
cmp
or
in
jmp
lcall
inc
mov
loope
sub
lea
adc
inc
clc
pop
addl
jmp
loop
rcll
xor
imul
pop
push
das
dec
or
neg
push
and
or
outsl
stc
cmp
and
fwait
inc
nop
mov
test
jmp
das
ss
add
iret
push
sub
cmp
incb
mov
hlt
sub
jns
hlt
xor
mov
push
push
repnz
aam
sub
jo
movsb
jne
pop
cltd
add
mov
fdiv
xor
push
fistpl
mov
in
subb
pop
test
mov
lcall
cmp
dec
adc
jp
rolb
xchg
ss
loop
adc
aad
test
test
out
and
sub
notb
push
xor
imul
sahf
adc
jg
bound
push
jns
sub
insb
add
ss
xor
lahf
arpl
jl
and
clc
and
sub
cmp
les
xor
daa
xchg
jno
mov
pushl
insl
inc
pop
inc
fdivr
ljmp
fiadds
je
jg
test
xchg
sbb
jg
xchg
add
test
popa
inc
rol
push
or
pop
fsubl
pop
mov
or
lret
jo
insb
mov
jnp
push
mov
stos
pop
jle
cmp
cmp
in
push
roll
mov
dec
in
or
nop
push
sub
pop
roll
add
mov
in
mov
pop
add
cltd
xchg
sahf
mov
xchg
lret
mov
test
out
cmp
stos
add
ja,pn
push
sbb
in
mov
sbb
ljmp
fs
cs
jmp
mov
stos
shll
cli
push
cmp
cmp
mov
jmp
daa
icebp
and
lret
sub
jo
mov
js
inc
inc
push
int
lret
jecxz
insl
jp
fisubrs
call
jg
loop
sbb
jg
sarb
movsb
ss
sub
push
sub
pushf
fidivl
push
or
push
jb
popa
fs
and
mov
fmul
loopne
pop
insb
jbe
sbb
sbb
or
shll
mov
add
jae
pop
imul
cltd
stos
stc
adc
in
adc
ja
mov
ja
mov
or
movsl
mov
ret
leave
out
adc
dec
scas
cmp
in
or
mov
adc
fsub
xchg
jl
mov
xor
or
add
fstl
aad
stos
decl
test
jae
dec
xchg
cmp
add
adc
addr16
inc
scas
icebp
outsb
xor
inc
lods
adc
mov
popf
xlat
mov
and
mov
add
jne
cwtl
dec
add
pusha
jge
adc
adc
cli
and
movsl
lock
test
cs
ljmp
xorb
cwtl
sub
xor
iret
add
dec
loope
push
or
adc
ds
sub
dec
adc
mov
push
in
loope
mov
js
test
add
cs
cmp
bound
fxch
lahf
repnz
inc
int3
xor
add
dec
test
jmp
popa
push
fistl
rcll
and
in
dec
cwtl
add
stos
lret
adc
push
fistps
add
inc
cmp
lods
adc
cmc
fsubl
fisttpll
loop
jecxz
pop
sbb
dec
outsb
cmp
icebp
test
cli
dec
dec
adc
pop
lods
ror
cmpsl
pop
pop
jbe
in
test
pop
cmp
dec
push
and
lods
sub
out
repnz
popf
or
xor
adc
test
imul
inc
aaa
movsb
jmp
loop
xchg
fisubrl
std
xor
push
jne
or
inc
add
and
jmp
clc
fnsave
push
cmp
and
test
dec
inc
xchg
call
mov
add
loop
test
jge
mov
pop
scas
xchg
mov
push
jg
pop
or
dec
loop
dec
xchg
pop
mov
inc
ljmp
cltd
enter
shl
or
dec
pop
lds
or
imul
jnp
es
mov
aaa
push
mov
inc
fcoms
shlb
xlat
lret
repz
cli
mov
xlat
pop
js
xchg
mov
jle
add
dec
fsubrl
xchg
cmpl
das
mov
mov
push
clc
dec
iret
and
stos
push
loopne
sbb
mull
ds
inc
sbb
lods
mov
mov
mov
xchg
cmp
or
lods
inc
stc
sbb
jge
pushf
and
jbe
and
jb
aaa
sbb
or
das
push
js
je
int3
and
icebp
mov
outsl
daa
xchg
mov
push
pop
rolb
gs
dec
pop
pop
add
faddp
mov
sbb
insb
mov
arpl
cltd
pop
push
and
data16
imul
lcall
mov
test
pop
push
loopne
iret
jno
cmpsb
flds
scas
sbb
dec
iret
stos
in
sub
mov
ror
xor
mov
xchg
pop
inc
lret
dec
ficoms
pusha
pop
cltd
outsl
rclb
movsl
decb
popf
push
cltd
mov
adc
mov
push
gs
add
pop
mov
shlb
push
dec
test
mov
fsub
lcall
test
dec
dec
hlt
push
fsts
ljmp
imul
adc
mov
cwtl
sub
mov
repnz
scas
push
mov
sti
mov
jge
mov
cld
or
lock
ret
ljmp
or
dec
sbb
nop
jb
or
add
fistpl
push
and
xchg
mov
divl
xchg
xor
push
ss
and
sti
shll
xlat
mov
or
shrl
aad
jns
push
mov
push
adcb
xchg
jle
bound
outsb
xchg
stos
fistps
jns
mov
mov
aaa
fisubrl
mov
push
das
lcall
ret
jns
and
outsb
fsubrs
jns
outsb
loop
pop
orb
jge
shrl
pop
lods
outsb
mov
mov
leave
sub
leave
fisubrs
loop
adc
xchg
sbb
add
rol
aas
mov
imul
pop
test
mov
lds
imul
mov
js
subb
xlat
popf
pop
ret
push
xchg
sarb
dec
adc
std
cltd
lret
int3
aas
and
adc
out
sub
fdivrs
add
jp
lret
xchg
dec
mov
ja
push
xchg
xchg
add
outsb
int3
test
cmc
push
add
in
sbb
mov
or
lock
mov
inc
fimull
imul
aam
sub
das
inc
pushf
in
je
ds
cmpb
ret
lret
scas
or
jl
mov
fs
cmp
fwait
test
arpl
testb
xchg
in
fstpt
in
sub
mov
and
cmc
pushf
push
stos
pop
imul
fxch
subl
mov
je
pop
push
and
roll
aad
int
jb
jp
cltd
out
pop
push
add
mov
imul
gs
and
and
imul
js
lahf
sbb
sbb
sbb
scas
add
mov
loop
dec
mov
nop
xor
pop
add
testb
mov
mov
jo
pop
xchg
loopne
imul
orl
arpl
pop
gs
xchg
pop
enter
push
jns
fisttps
push
inc
jb
pop
dec
pop
sub
add
push
je
insb
dec
adc
jl
das
mov
mov
shll
jnp
sbb
insl
ret
sub
and
pop
mov
jl
int
call
dec
and
mov
lret
mov
adc
xor
mov
into
mov
and
mov
fnsave
dec
dec
sbbl
aam
dec
dec
les
and
push
jecxz
ret
inc
xorb
mov
adc
pushf
popf
or
movsl
ja
sti
or
fs
pusha
shl
sub
int3
dec
or
push
jno
pop
mov
outsb
aad
loope
cs
in
dec
jmp
inc
fdivr
and
fisttps
cmp
dec
es
adc
dec
hlt
je
loop
decb
repz
incl
jle
cs
sti
data16
xchg
shrb
ss
cmp
scas
nop
cmc
aas
int
subl
stos
xchg
lea
jbe
inc
push
sbb
sti
mov
sub
imul
xchg
ds
imul
mov
ja
lret
out
inc
push
icebp
pop
mov
cwtl
daa
pop
jno
mov
cmpsb
xchg
ss
cld
jo
hlt
ja
mov
je
jge
inc
xlat
das
bound
push
repnz
es
scas
push
dec
xor
sbb
add
sti
sbb
mov
fcoml
jb
adc
in
jbe
mov
push
in
jbe
bound
adc
pushf
and
push
jb
insb
cmp
sbb
pop
pop
pop
push
and
ss
mov
sbb
addl
lock
je
pop
mov
stos
out
sub
js,pn
or
mov
xchg
push
jg
mov
sub
sbb
shufps
faddl
add
inc
aad
lds
lcall
fsubs
fwait
test
xor
xor
sub
dec
hlt
cs
mov
lods
jns
mov
jge
sbb
mov
push
shrl
aas
xor
sti
icebp
pop
or
ret
xchg
inc
xor
sbbb
jl
lock
clc
jmp
sbb
xor
fimuls
mov
or
ret
dec
inc
lds
imul
xchg
popf
cmc
stos
je
imul
push
cmc
cmp
mov
mov
mov
adc
lock
mov
push
and
jecxz
clc
in
xor
rcr
push
xchg
loop
xchg
xchg
imul
jg
sahf
stos
es
push
cmp
sbbb
push
aas
in
setno
imul
popf
sub
push
mov
addr16
idivl
and
xchg
hlt
fwait
jle
mov
stos
xchg
jno
jmp
push
pusha
pop
out
mov
js
shrb
jmp
das
das
ret
jbe
inc
or
lods
pop
adc
cmp
or
imul
push
mov
pop
js
jg
xchg
mov
sbb
adc
stc
sub
sub
sub
pusha
out
sbb
jl
loope
sbb
jbe
ret
xor
jb
js
jo
cmpsl
mov
nop
and
pop
inc
test
pusha
add
test
sub
repz
divl
xor
mov
lods
push
or
fs
ljmp
rcll
fdivrl
rorb
cmp
mov
mov
pop
xchg
pop
jns
xor
and
fdivrs
mov
shll
repnz
and
subb
das
xor
cmp
popa
mov
and
and
fucomip
clc
cmpsb
or
inc
mov
add
jmp
xchg
cmp
inc
sbb
int
cs
inc
push
inc
xor
lret
push
faddl
loop
dec
sub
or
pushf
cwtl
mov
xorl
fisttpll
sbb
es
stc
movl
lret
gs
push
pop
sahf
hlt
push
sbb
call
jle
outsb
insb
sarl
es
mov
push
ljmp
sbbl
xchg
cmpsb
cs
sbb
sbb
jno
adc
test
mov
pop
push
scas
test
insb
loope
aam
cmp
inc
inc
mov
ss
vmaxps
lods
lcall
leave
jo
loopne
in
movsl
addr16
jnp
cmp
xchg
fst
stos
jne
jl
sbb
popa
xor
addr16
pop
sub
push
or
call
xchg
mov
sbb
and
int
rolb
mov
outsl
sub
push
shlb
xchg
popa
jl
mov
mov
xor
add
sbb
icebp
jb
pop
into
mov
sub
sahf
scas
mov
add
cld
cmc
pop
mov
cmpsl
or
inc
mov
fucomi
mov
rclb
sub
jae
popf
push
mov
icebp
mov
xchg
inc
fcom
sti
int3
mov
jns
nop
ret
jo
or
fmuls
push
xchg
bound
insl
les
cwtl
inc
cmpb
jg
popa
or
push
add
push
cmc
jmp
test
mov
popa
in
in
lods
faddp
xor
sbb
shr
divb
cs
add
push
mov
jb
pop
jne
lea
ret
push
enter
clc
cltd
mov
ss
cmp
pop
jmp
mov
repz
test
bound
mov
test
xor
xchg
cltd
pop
sub
aaa
out
call
mov
mov
lret
imul
xor
sbb
or
push
mov
add
repnz
lret
popf
cltd
mov
rcrb
jecxz
aam
into
gs
ljmp
outsb
fidivrl
aad
jmp
out
add
pop
loop
out
jle
ret
mov
shl
insl
test
add
lea
icebp
stos
mov
sub
mov
mov
addb
cmp
mov
dec
movsl
out
jl
sbb
into
pop
or
jnp
bnd
xor
sahf
sbb
pop
stos
mulb
lcall
mov
xchg
rcrl
sub
hlt
xlat
pop
ds
lret
mov
jecxz
mov
je
adc
sub
dec
lea
cmp
popf
mov
pushf
fcmovnbe
imul
out
scas
fwait
pop
aas
lods
pop
sub
pop
add
outsl
or
in
aad
pop
jmp
ja
mov
test
mov
xchg
pop
test
or
sbb
add
aaa
fs
mov
xor
pop
lahf
mov
xchg
lods
lock
movsl
sahf
xor
into
add
imull
out
inc
popa
or
cmp
enter
mov
mov
jnp
cmp
or
cmp
adc
aas
enter
sti
sbb
movsl
add
jnp
ss
test
loop
bound
mov
stc
je
and
ljmp
pop
jo
daa
sbb
push
test
scas
int3
push
push
pushf
mov
cmp
aad
sub
pop
inc
in
test
mov
into
shrl
das
pop
jb
nop
iret
addr16
push
mov
pop
aaa
jb
cmpsb
xchg
sti
or
xor
movsb
mov
and
shll
enter
xor
shll
inc
mov
add
clc
bound
mov
add
sbb
push
adc
das
jmp
pop
sbb
jae
inc
or
in
outsl
jo
inc
cmc
mov
subps
mov
xchg
test
fs
sub
fs
fistps
int3
adc
in
jnp
xchg
adc
hlt
pop
mov
mov
ss
jle
inc
adc
add
add
pushf
jmp
inc
insb
in
out
stos
sub
lods
cmpsb
sarl
or
cmpl
out
mov
cmp
mov
push
mov
push
jb
adc
aas
mov
pop
sti
pop
and
lods
mov
add
push
js
jle
jge
jae
pop
imul
loop
and
jo
or
adc
and
sbb
push
inc
mov
mov
mov
popf
pop
fistpll
dec
dec
es
cmp
add
inc
push
xchg
sub
push
popa
xor
jbe
test
aas
bound
cmpsl
xchg
sbb
lods
or
cs
sub
dec
bound
dec
mov
pusha
orl
add
rclb
sti
mov
mov
dec
iret
test
jb
aaa
rcr
rcll
aad
inc
cmp
jnp
scas
rol
add
aam
in
psubsw
arpl
in
or
rcr
mov
icebp
inc
mov
xlat
repnz
pusha
ret
jg
push
popa
or
and
rcrb
add
cwtl
icebp
imulb
and
pop
xchg
sbb
mov
xchg
movb
out
idiv
pop
adc
adcb
pop
xor
cmp
push
addl
cmp
xorl
push
and
mov
cltd
das
sub
pop
lods
sub
aad
fisubs
pop
mov
stos
sub
out
xor
inc
dec
xchg
clc
rclb
adc
stos
sbb
cwtl
out
cmpsb
push
outsb
xchg
repz
movsb
mov
out
dec
sbb
and
scas
mov
jo
jp
shrb
add
jecxz
mov
mov
sarl
jmp
mov
ljmp
ss
hlt
outsb
jle
xchg
push
lds
repnz
pop
xor
jb
jmp
shl
pop
or
ds
jae
cld
in
or
sub
jns
jmp
sbb
outsb
jns
inc
push
push
xchg
insl
add
les
mov
mov
or
lret
pop
mov
stc
out
out
pushf
int
mov
in
leave
bound
dec
mov
je
ficoml
inc
je
mov
jae
insl
and
sbb
pop
xchg
mov
pminsw
push
cmpsl
or
mov
test
sbb
or
ret
popf
sbb
stos
jg,pn
push
imul
add
lods
pop
xchg
icebp
lret
cmpsl
mov
shrb
ret
into
lret
cmp
int
xchg
mov
xchg
xchg
popf
ret
mov
ret
mov
fucomip
movsb
inc
fs
addr16
cmpb
mov
repz
jnp
out
cmp
cmp
movsl
xor
fldt
mov
inc
arpl
imul
or
outsb
or
fcmovb
leave
scas
cltd
push
mov
rol
repz
in
add
pop
into
xchg
inc
aas
fs
mov
dec
mov
arpl
inc
cmpsl
pop
out
call
jmp
lds
push
inc
or
jg
and
adc
or
stc
sbb
mov
add
xor
aaa
loope
cltd
popf
daa
jnp
sbb
adc
adc
daa
mov
add
sbb
inc
add
cmp
xchg
lock
rcll
hlt
push
test
inc
adc
pop
sub
mov
lea
and
or
mov
jle
jns
pushf
lds
push
les
mov
test
mov
test
push
test
inc
or
fmull
test
sbb
aad
dec
pop
mov
fwait
insl
cli
js
stos
out
popf
xorl
add
ss
inc
test
dec
jns
mov
xlat
push
push
icebp
test
adc
jl
dec
xlat
mov
mov
sub
and
shlb
xchg
loopne
ret
scas
mov
stc
mov
inc
lock
cmp
aas
mov
lahf
inc
jnp
dec
bound
orl
pop
into
add
insb
movsl
outsb
jbe
pop
dec
add
sub
and
hlt
fadds
negl
iret
dec
and
ret
add
adc
pop
int3
rcrb
lahf
rolb
repz
push
push
iret
in
imull
mov
sub
cmpsb
vmread
hlt
cmpsl
add
and
dec
inc
loopne
mov
dec
ss
cmp
pop
sti
xor
jle
in
adc
rclb
dec
loopne
out
fidivrl
pusha
pusha
mov
dec
ljmp
dec
sbb
int3
push
cwtl
cltd
mov
cs
pop
insl
and
fs
arpl
xchg
xchg
jae
mov
sub
sahf
test
sub
imul
int
jne
int3
loopne
nop
and
sub
jno
fwait
mov
stos
push
cltd
inc
addr16
cld
inc
rcll
cmp
fsubr
cmpsb
xor
mov
aad
ret
movsl
sbb
and
sbb
pop
jge
cmp
movsb
popf
dec
sub
sarb
outsl
adc
or
push
mov
aaa
fs
cs
lea
push
movsb
stos
pushf
xchg
adc
mov
add
xchg
out
iret
jo
jle
mov
daa
push
push
and
fisubrs
das
std
in
mov
and
push
jp
xor
jae
shrb
jns
jl
aad
fs
mov
xorl
jmp
push
adc
lods
xchg
jge
sub
xchg
stc
jnp
mov
mov
shll
sub
add
adc
jno
test
adc
loope
or
mov
push
nop
or
daa
mov
sub
fisttpll
and
pop
pop
xchg
push
push
clc
bound
ljmp
dec
jae
inc
lock
ficompl
push
mov
cmp
rcll
stc
mov
xchg
clc
cld
test
sub
fimull
test
inc
and
ret
insb
ret
lcall
lds
sbb
movsb
and
les
stos
mov
lret
mov
dec
jns
sbb
dec
cld
xchg
scas
mov
inc
sahf
ss
ja
jb
cmp
mov
out
sbb
sarl
pop
insb
mov
loopne
arpl
jmp
xchg
or
test
icebp
in
ret
jle
xor
pop
rorl
and
das
ja
dec
fdivs
shll
cmc
bound
jmp
hlt
mov
sbb
aaa
fstpt
xor
xchg
mov
aad
jp
cli
fmuls
shr
popa
sub
cmp
insl
inc
jo
mov
lods
lds
sbb
and
test
aam
lret
xchg
ja
sub
movsl
jnp
jg
mov
adc
inc
and
lods
rolb
movsb
dec
cs
adc
cmp
loop
sub
jmp
shlb
popf
sub
iret
clc
popf
adc
enter
xor
mov
mov
mov
test
mov
test
push
mov
out
sub
imul
adc
and
add
test
sub
pop
jbe
loope
pop
or
test
ret
sbb
ss
or
or
inc
xchg
xchg
push
adc
cmp
jno
scas
inc
gs
aaa
gs
cli
pop
cmpsl
or
mov
pop
jmp
dec
repnz
add
add
dec
add
jne
xchg
popa
sar
mov
xor
sbb
mov
out
dec
aas
xchg
pop
mov
dec
xchg
push
cwtl
mov
adc
add
inc
je
or
imul
imul
add
cld
or
and
add
inc
push
aas
gs
mov
xor
inc
std
and
popa
push
dec
fiadds
inc
repz
pop
fdivrl
inc
aad
xchg
dec
adc
rep
cltd
shl
mov
out
into
sarl
mov
testb
inc
push
shrb
mov
outsl
nop
sti
std
cmp
xchg
lods
scas
jge
movb
xor
out
jmp
xchg
push
out
notl
gs
je
jmp
orb
jge
imull
inc
outsl
jmp
fistpll
pusha
mov
add
addr16
pop
cmp
sbb
add
testb
pause
scas
sub
cmp
cs
sub
into
test
sbb
cmp
shlb
jl
add
imul
pop
clc
push
daa
ret
sbb
andl
push
jae
dec
pop
push
cmp
mov
mov
enter
dec
mov
mov
test
cmp
push
mov
push
xchg
shll
imul
dec
jp
popf
mov
pushf
pop
sbb
dec
mov
sbb
add
addr16
arpl
fs
pop
inc
adc
xchg
les
and
or
xor
mov
push
push
push
adc
or
aaa
push
ret
adc
mov
cmp
adc
jp
adc
sbb
push
icebp
cmpsb
dec
fisttpll
aas
dec
repnz
fsts
aas
push
iret
inc
add
push
push
ret
push
pop
and
xchg
mov
shlb
push
aaa
or
popa
iret
xchg
daa
push
jb
jae
int
sub
adc
hlt
xor
pop
subb
stc
call
push
xorl
push
cmp
loopne
push
test
in
movsb
dec
aam
add
pop
stos
iret
pop
lahf
inc
in
into
push
mov
xchg
pop
imul
mov
mov
ss
dec
test
int3
mov
ljmp
pushl
outsl
xor
dec
test
push
xchg
out
imul
xor
jmp
enter
shl
push
jmp
xor
or
xor
rcrb
lcall
mov
dec
jo
sub
jo
cmpsb
mov
gs
push
inc
out
or
decb
pop
shll
jns
push
je
and
lret
adc
adc
mov
adc
xchg
jo
aaa
repz
mov
lds
mov
and
call
xor
aaa
mov
sbb
mov
xchg
iret
or
cmp
movsb
fstl
out
loope
cli
out
loopne
fbstp
or
sub
das
push
inc
cmp
pop
out
ja
xor
ss
mov
into
jae
lahf
dec
mov
je
push
mov
mov
int3
pop
fxrstor
mov
jo
push
cmp
mov
out
mov
lcall
sbb
int3
and
ffree
adcl
adc
jp
jno
das
add
mov
pushf
mov
xchg
sub
xchg
dec
and
lcall
mov
bound
in
loope
outsb
push
call
stos
jae
xchg
mov
aas
bound
ret
xor
lods
aad
cmpsl
data16
sub
mov
mov
loopne
cmp
sbb
xor
mov
loope
testb
repnz
adc
adc
pop
and
add
sbb
mov
std
and
sub
sahf
popl
arpl
sub
and
dec
cmc
mov
ljmp
enter
cmp
movsl
push
in
sti
out
cmpsb
mov
jmp
mov
negb
push
inc
bound
stos
orb
or
test
fsubrp
add
sbb
jge
je
mov
cli
or
mov
mov
addr16
pop
cwtl
out
sarb
imul
hlt
out
and
mov
and
push
test
out
cmp
int
in
test
repnz
adc
adc
gs
push
loopne
incl
inc
popf
jns
inc
fs
int
stos
push
xor
adc
movsl
pop
pop
pop
divl
cmpsb
push
and
sub
xchg
stos
in
sahf
xchg
aam
cmpsb
inc
fwait
jmp
stc
je
int3
lret
cmp
out
pop
clc
mov
cmc
and
push
push
dec
cmpsl
and
sti
inc
push
sbb
mov
pop
aas
sbb
popa
or
lods
or
cmp
cs
loope
sub
pop
jbe
in
xchg
ljmp
inc
pop
or
hlt
sub
leave
shr
mov
mov
or
mov
test
sbb
xchg
mov
pop
mov
lahf
stos
mov
jmp
arpl
fldenv
sbb
cld
lock
arpl
js
sahf
mov
pop
mov
insb
push
fmull
hlt
mov
lds
inc
mov
sub
std
dec
push
lret
outsl
je
add
dec
xor
pop
cmp
xlat
sub
jl
pushf
arpl
or
xlat
adc
fcoms
xchg
popf
in
or
pop
cmp
mov
mov
das
mov
dec
inc
xchg
sbb
add
outsb
pop
sti
jecxz
push
mov
inc
aaa
bound
in
js
cmp
mov
mov
jns
stc
mov
mov
test
outsl
jle
lret
je
into
mov
sti
xchg
pusha
dec
jge
test
jmp
lret
pop
repz
or
shr
mov
xor
pop
scas
pop
and
fnstenv
sub
clc
mov
push
popa
aaa
or
mov
test
arpl
sarb
clc
lock
insl
loopne
jmp
mov
addr16
push
insl
inc
loope
and
mov
pop
add
ret
dec
dec
jmp
cltd
out
push
fisubrs
aam
pop
out
or
sub
mov
sbb
js
sbb
shlb
inc
sub
cld
nop
scas
push
and
repnz
lds
nop
dec
cld
or
push
mov
repnz
dec
aam
div
nop
xor
jecxz
xor
push
iret
adc
jg
mov
leave
dec
scas
icebp
xchg
insl
dec
and
jno
cli
test
dec
mov
adc
shll
mov
sahf
call
clc
pop
jne
pop
sub
and
mov
pop
aaa
mov
jge
push
push
insl
push
mov
gs
dec
lret
xchg
sbb
pop
fcoml
add
mov
sarb
je
pushf
and
pop
jnp
push
xchg
add
addr16
mov
andl
cmp
mov
mov
ljmp
out
add
mov
mov
or
imul
int
mov
push
jp
test
pop
test
scas
in
aam
pop
cld
push
mov
ja
cmp
sub
leave
jbe
sub
cmovg
fucom
shl
dec
filds
jge
xchg
in
loopne
adc
clc
repnz
iret
push
jle
sbb
jns
pop
loope
sahf
mov
inc
pop
adc
enter
cmpsl
sbb
cmpsb
push
xor
das
pop
adc
cmc
lods
mov
ret
fidivs
xchg
jecxz
cmp
pop
insl
mov
dec
and
pop
xchg
pop
sub
data16
sub
xor
jl
and
fwait
cmp
mov
push
addl
xchg
enter
sub
mov
inc
cs
xchg
xchg
xchg
pop
mov
imul
or
mov
lods
xchg
adc
inc
shlb
lea
mov
aam
or
cld
fsts
pushl
daa
sti
and
add
pop
mov
imul
mov
out
out
mov
hlt
jmp
jnp
in
sub
cld
sub
enter
adc
inc
add
incl
xchg
lret
jecxz
or
jne
inc
xlat
inc
jg
xchg
and
mov
cmp
adc
call
notl
adc
lret
and
or
xchg
xchg
aad
mov
xlat
pop
ljmp
pop
std
adc
cmp
mov
mov
icebp
sbb
sbb
bswap
ret
lods
gs
cmp
test
fdivr
sbb
repnz
rorb
fs
ja
shrb
outsb
cmpsl
mov
jne
jmp
inc
popa
cmpsl
idiv
nop
cmp
popl
jne
test
out
mov
hlt
ja
loope
xor
adc
aas
sub
aam
dec
jl
xorb
xlat
fnsave
inc
push
int3
xchg
jg
shll
inc
mov
mov
pop
fs
xchg
mov
mov
out
scas
and
sub
insl
std
addb
pop
sbb
aas
dec
test
into
and
cmp
outsb
lock
outsb
xor
pop
inc
scas
imul
loope
mov
stc
ficoml
and
mov
pop
out
cli
lcall
lret
mov
sarl
loop
dec
sbb
scas
cmp
pusha
in
fstp
dec
cmpsl
test
insl
shll
mov
inc
or
cmpsl
push
jecxz
pop
cwtl
andl
leave
aaa
add
pop
ret
xor
fldt
cmc
insl
mov
fwait
or
xor
rorl
lds
stc
add
mov
jnp
cmp
decb
mov
xlat
pop
pop
cmp
cmp
and
push
mov
push
je
jne,pn
push
adc
or
inc
loopne
mov
jns
or
daa
sbb
inc
shl
dec
test
xchg
lret
cmp
sub
mov
inc
cli
or
insb
push
out
hlt
xor
outsb
mov
leave
dec
xor
subb
and
mov
adc
push
jo
push
push
mov
adcb
cltd
mov
mov
cmp
ja
daa
andb
aad
dec
cmp
mov
dec
dec
sbb
std
cmp
lret
sti
into
or
fwait
push
push
and
adc
adc
sahf
int3
mov
sbb
popf
add
xchg
dec
std
rcll
out
lahf
subl
jg
mov
int
repz
scas
push
jle
xor
inc
mov
fiaddl
fistps
dec
pop
lcall
sub
jge
xor
fnsave
or
sbb
fmull
or
ds
leave
rcr
leave
push
ret
subb
lods
dec
xchg
push
or
clc
fwait
pop
inc
lahf
xchg
push
inc
repz
repnz
or
push
jbe
mov
mov
stos
push
outsl
or
or
call
mov
pusha
mov
inc
addr16
dec
or
divb
xchg
out
out
xor
mov
aaa
fwait
lcall
iret
jb
pushf
pop
ret
sarb
mov
and
ret
sub
in
jp
rcr
mov
pinsrw
clc
push
pop
cmp
aad
mov
lea
cmp
inc
adc
jb
or
push
pop
fisubrl
inc
jno
subl
fs
repnz
mov
push
cmp
cli
lret
in
mov
test
mov
and
sbb
mov
fwait
xchg
lods
xor
stc
mov
add
push
mov
push
xor
or
ljmp
mov
sub
push
es
cmp
sbb
stos
popa
mov
mov
and
mov
adc
jnp
test
mov
xor
xor
xchg
sbb
sbb
pusha
call
inc
stc
sar
mov
dec
cmp
jbe
mov
add
mov
sub
push
nop
lret
xor
adc
dec
mov
xchg
stos
dec
jecxz
jle
sub
push
add
int
inc
jne
mov
movsl
ror
push
add
mov
xchg
pop
mov
push
adc
out
rcr
dec
jno
mov
aaa
js
and
sub
adc
jns
mov
lea
rcl
add
jmp
adc
int
pusha
fwait
iret
push
aaa
in
xor
pop
je
pop
pop
iret
adc
repz
mov
scas
into
xor
and
outsb
inc
fsubs
in
insl
inc
hlt
pop
push
push
add
mov
in
das
aam
sub
cmpsl
repz
and
mov
inc
mov
jg
adc
lods
cmpsl
sbb
call
rolb
arpl
mov
fwait
lret
jmp
sbb
pop
andb
inc
pop
insl
leave
adc
or
mov
inc
and
orb
loopne
fists
push
or
hlt
lock
jl
pop
sub
scas
cltd
adc
clc
lret
sub
xor
sbb
and
xor
std
pop
or
pop
adc
out
fisttpl
punpckhwd
mov
int3
idivl
cmp
mov
dec
scas
dec
addr16
sahf
push
cmpsb
stos
f2xm1
mov
add
sbb
xor
shlb
ja
imul
jmp
pushf
fmul
leave
lods
pop
pop
push
pop
popf
ret
pop
je
mov
xlat
and
mov
xlat
xchg
mov
jns
stos
xchg
jmp
outsb
mov
ja
push
push
scas
hlt
and
lods
data16
mov
loope
pop
mov
and
hlt
pop
or
mov
enter
add
push
sub
mov
bound
out
fmul
cmp
mov
and
rcrb
icebp
mov
add
push
and
rcrl
xor
sub
sub
push
mov
int3
mov
cmp
int
add
cli
in
cmpsb
loope
adc
jbe
call
test
pop
imul
rcll
pop
mov
test
addr16
dec
dec
in
rorb
dec
cmp
jg
xchg
subb
movsb
xchg
and
pop
jge
mov
dec
adc
addl
mov
icebp
out
cmp
jp
sbb
jg
cmp
cs
and
sbb
and
in
roll
mov
aad
rclb
test
sub
pop
rclb
xor
leave
sub
and
add
xor
xchg
rolb
push
xor
xor
pop
add
cli
xor
pop
fbld
std
xchg
pop
cli
loop
repz
cld
in
pop
jae
jo
mov
out
cmp
mov
adc
movsl
mov
lock
or
rcll
aas
aad
insl
test
inc
sub
cmp
jecxz
adc
test
sub
outsb
sbb
sub
clc
icebp
sarb
negb
ret
std
jle
jae
xchg
jbe
sarb
sahf
fld
cmp
leave
test
jns
jl
add
stos
jmp
popf
xor
ror
or
lret
hlt
jge
insl
push
cmp
xor
jmp
or
adc
xor
add
cmp
popf
push
ljmp
sub
insl
sbbb
push
orl
push
sar
mov
push
cwtl
add
cmc
push
es
ja
pop
xorl
jns
xchg
push
pop
icebp
pop
mov
ret
mov
into
and
test
add
negl
and
test
popw
jle
mov
ljmp
cmpsb
insl
mov
xor
ss
mov
xchg
xchg
cwtl
fsubs
je
mov
mov
loop
enter
popf
arpl
fidivs
add
subl
stos
stc
movsl
and
pushf
adc
lods
inc
lret
notl
das
adc
imul
add
ds
gs
test
and
gs
sarb
sub
and
insb
cltd
xchg
dec
sub
repnz
mov
add
mov
mov
add
lcall
add
pop
popa
fisubrs
sbb
mov
data16
fstps
fildl
aam
addb
or
loop
mov
int3
fwait
cmc
movsb
ret
mov
test
push
shll
xchg
pushf
push
sti
xchg
or
dec
cli
or
fwait
addl
jns
mov
and
jg
sub
pop
lahf
scas
xchg
dec
sbb
mov
xor
add
pop
sahf
cld
push
adc
inc
lds
insl
sar
shrl
inc
cmc
or
cmc
push
in
xlat
mov
std
inc
pop
dec
mov
mov
pop
idivl
daa
sub
lods
sbb
push
jecxz
xor
cli
adc
stos
fcompl
mov
dec
mov
in
test
push
nop
pop
pop
and
movsl
or
das
xchg
or
pop
add
add
adc
or
outsl
or
iret
or
lret
ret
dec
fldenv
pop
mov
mov
and
xchg
mov
jns
in
mov
push
pop
adc
push
pop
iret
mov
mov
xchg
push
sbb
and
jmp
int
cmp
push
aaa
stos
push
mov
jg
and
xchg
mov
and
xor
pop
mov
mov
mov
dec
mov
jle
cmpsl
sti
mov
int
or
movsl
mov
or
cmp
addl
nop
pop
divb
bnd
addl
or
and
fdivs
test
cmp
jle
jb
mov
ret
push
loopne
fists
movsl
cld
mov
xor
cmp
inc
adc
stos
xor
icebp
outsl
push
fwait
sbb
and
jns
out
clc
ja
fiadds
sbb
and
test
out
inc
cmp
setne
mov
arpl
push
pop
add
cld
movsb
into
cltd
cltd
outsl
jg
mov
xor
std
inc
sahf
xor
addr16
pop
push
incl
adc
mov
dec
xor
inc
outsb
in
ficompl
shrb
addr16
cmpsl
sbb
test
and
sub
aas
xor
xchg
sub
jmp
push
cmp
xor
mov
dec
xor
fisttpll
rolb
pusha
sub
mov
jbe
cmp
mov
aam
cmp
inc
lret
push
xor
in
push
xlat
mov
ja
sbb
mov
push
lcall
and
loope
test
dec
jge
in
mov
sbb
mov
lcall
fs
jo
jbe
stc
mov
roll
cmp
xchg
cmc
xchg
pop
test
sbb
jb
mov
aad
adc
jg
mov
out
xor
or
enter
in
das
xchg
aaa
insl
jle
adc
sub
mull
or
negl
xchg
out
rcrl
ret
mov
or
and
xchg
ljmp
out
mov
mov
shlb
mov
mov
mov
icebp
push
push
jp
imul
add
xor
cmp
jg
mov
mov
imulb
arpl
dec
in
sub
movsl
popf
in
push
push
fs
lods
testl
scas
cmp
cmp
jae
push
cltd
sti
xchg
arpl
in
arpl
movsl
in
xor
stos
aam
jecxz
icebp
cmc
addr16
sub
lahf
and
adc
dec
push
dec
mov
jne
icebp
out
inc
fsubl
jno
jnp
test
or
pop
jle
inc
mov
jbe
cmp
fisubrl
mov
jge
cmp
or
push
sti
adc
es
xor
shl
int3
jp
pop
pushf
in
push
adcb
aam
xchg
aas
pop
mov
out
cmpsl
or
movb
rcrl
arpl
popf
adc
add
jns
icebp
cmp
gs
push
xor
jg
enter
cmp
dec
jle
push
out
mov
mov
adc
pop
pop
inc
pop
add
test
movsl
loop
inc
rorb
and
lret
fs
mov
adc
mov
test
in
and
shlb
or
inc
sub
mov
xchg
mov
inc
scas
imul
into
mov
inc
loope
enter
jmp
mov
lea
jg
repz
cmp
popa
push
pop
hlt
iret
loop
inc
push
clc
loope
clc
test
lods
js
test
pop
nop
outsb
pop
dec
mov
es
sbb
test
arpl
enter
out
xor
shrl
xchg
out
scas
test
popa
in
inc
sub
and
sbb
mov
adc
les
rcrb
clc
outsb
adc
lret
pop
pop
adc
mov
push
and
dec
pop
mov
out
jmp
fdivs
stos
scas
ljmp
repnz
mov
fcom
lret
push
lret
ljmp
push
sbb
sub
stc
imul
xchg
jbe
fs
ss
lret
jle
lods
scas
add
popa
jp
out
int3
movsl
cmp
xchg
push
rcll
arpl
in
mov
aas
pusha
xchg
lock
xchg
adc
lahf
int
jnp
sub
xor
das
xor
lcall
fnstenv
in
rclb
xchg
jg
sbb
inc
pop
mov
inc
in
lcall
subb
xchg
ja
xor
dec
mov
inc
mov
ds
push
rcll
int3
jno
lret
mov
mov
rclb
test
test
inc
mov
push
add
xchg
push
cmp
sar
sbb
fbstp
xchg
mov
lea
inc
or
or
pop
inc
jg
ss
or
test
insl
imull
mov
xlat
jg
leave
xchg
pusha
fdivrl
jg
mov
mov
enter
and
andb
fcmovnb
jno
dec
aam
or
nop
rol
dec
repz
hlt
jns
adc
ja
gs
por
push
adc
xchg
outsb
fildll
sbb
lods
out
scas
mov
pop
cmp
inc
sahf
das
cwtl
cmp
add
mov
das
xlat
cmp
jl
pop
shr
aas
adc
ss
ret
lret
js
mov
aas
mov
mov
xor
in
mov
push
mov
imul
adcb
dec
sub
mov
cmpsb
ret
clc
lds
sub
std
nop
jge
pop
ret
push
adc
inc
add
mov
fstl
ret
mov
jns
enter
mov
fidivs
fildl
dec
pop
push
insl
lea
ljmp
popa
cmp
sub
es
cli
xlat
xchg
int
jle
sarl
lods
ds
jns
push
fs
mov
out
and
loopne
sbb
shlb
inc
jae
leave
call
inc
mov
imul
adc
outsl
ds
ret
gs
fs
stc
ljmp
aaa
jns
gs
push
cmp
bnd
aam
nop
shlb
and
cmp
sahf
mov
out
test
mov
in
dec
and
sub
jae
mov
cltd
loope
outsb
jno
push
pop
and
sub
std
data16
xor
mov
das
mov
mov
outsl
scas
mov
loope
push
mov
fs
mov
cmp
ja
ss
push
adc
imul
ds
and
mov
fidivs
inc
mov
stc
mov
cld
inc
pop
or
inc
repnz
or
repz
ljmp
daa
inc
js
fsubl
jae
pop
dec
jecxz
jb
sarb
xor
xor
push
sub
stos
push
sub
test
and
pop
je
arpl
push
jne
and
das
jecxz
mov
popa
icebp
xchg
les
stos
ffree
and
or
push
pop
push
inc
loop
xorl
scas
pop
sub
pop
fcoml
popa
push
dec
xchg
imul
cmp
add
inc
xchg
jb
mov
rcrb
cs
subl
in
mov
sub
test
fldl
pop
fbstp
in
jns
adc
mov
pop
imul
sub
push
js
mov
or
loopne
add
mov
in
push
fwait
aas
dec
leave
sti
xor
sbb
enter
icebp
imul
out
ret
xlat
or
inc
mov
je
jmp
mov
movsb
sub
scas
mov
add
mov
mov
in
dec
dec
sbb
notb
xchg
jge
xor
cmpsl
xchg
add
and
fwait
nop
push
pushf
int3
xor
and
mov
insl
mov
mov
mov
loopne
push
jo
stos
movsl
mov
sub
xchg
out
dec
out
push
lea
jg
or
pushf
pop
xchg
push
aas
cmp
test
dec
rorl
std
in
fnsave
mov
out
mov
jg
fcompl
jnp
arpl
pop
cs
mov
cmp
or
out
jb
mov
push
add
lcall
pushf
repz
lcall
sahf
inc
pop
or
lods
ds
or
pop
insb
add
push
stos
xor
sahf
jbe
add
pop
cmp
add
mov
sbbl
push
fcmovbe
lds
or
push
mov
jnp
gs
mov
icebp
int
imull
clc
jns
dec
icebp
mov
dec
inc
fistpll
addr16
and
test
mov
loopne
adc
xchg
in
or
mov
into
and
clc
aaa
sub
cwtl
addr16
adc
inc
mov
jo
dec
push
cmp
push
movsb
jns
leave
pop
xchg
mov
add
pop
add
daa
inc
test
insb
adc
out
cld
sbb
mov
and
pop
fwait
inc
push
pushf
jp
int
stos
mov
adc
cmp
jg
nop
cmp
lret
inc
xor
jge
pop
cwtl
inc
push
or
loop
fsubp
sbbl
stos
gs
lock
sub
inc
xchg
or
xorw
add
add
mov
pop
sub
pop
mov
mov
dec
iret
and
push
and
fnstenv
xor
movsl
outsl
ljmp
mov
xor
int3
imul
mov
or
mov
insl
in
gs
mov
add
xor
dec
sbb
mov
hlt
int3
xchg
mov
add
enter
xor
mov
jge
insb
pop
inc
pop
mov
or
xor
pop
sbb
movsl
cmc
cs
xchg
xchg
pop
pop
mov
ret
or
outsl
das
and
ss
add
dec
mov
sbb
aam
mov
cmpsl
idivb
mov
fdivrl
cmp
sbb
inc
das
cmc
out
fcmovbe
sub
inc
pop
sub
ror
lock
xchg
loop
cmpsb
or
inc
push
xor
xchg
mov
call
sub
pop
sbb
dec
das
or
or
into
mov
jns
ss
fidivs
mov
imul
daa
mov
xchg
dec
inc
pop
pushf
addl
cmp
cs
movsb
push
into
sahf
and
dec
fdivl
xor
or
bound
fmuls
ja
cmp
lea
aas
xor
mov
fists
cs
fidivrl
push
add
and
push
xor
std
push
dec
into
es
repz
jle
fisubl
idiv
push
jge
add
push
sub
lahf
mov
and
xchg
arpl
push
cwtl
xor
shll
movsl
insb
in
imul
add
dec
faddl
daa
xchg
mov
sbb
cmpsl
dec
mov
xor
movsb
orl
pop
fldcw
in
xchg
cmpl
push
pop
ja
xor
iret
mov
inc
or
or
into
pop
jmp
lock
jg
daa
push
fst
push
xor
nop
test
adc
pusha
in
mov
and
mov
cmp
jae
in
loope
jne
pop
scas
jno
jecxz
sub
xchg
cmp
xchg
dec
add
push
mov
decb
and
mov
jecxz
jno
mov
imul
xor
push
inc
cld
cmp
ror
mov
popa
insb
loop
fbld
or
test
scas
sarb
in
xchg
push
fildll
call
mov
lcall
sbb
test
into
lcall
sahf
lahf
dec
fsubl
repz
loopne
pop
jne
push
in
adcl
cltd
stos
jp
xchg
jne
and
cmpl
les
inc
add
xor
mov
aaa
mov
adc
movsl
sbb
push
cmpsl
jns
push
arpl
pop
jmp
daa
into
mov
rcll
add
and
fbstp
and
dec
jmp
cmp
sbb
fisubrs
mov
testl
xor
mov
sbb
fiaddl
inc
fcomps
xchg
das
mov
mov
jno
sti
jb
inc
push
xchg
fstpl
lahf
cmp
lea
int
aad
hlt
mov
in
push
cmp
nop
and
xor
ret
adc
imulb
fnstcw
adc
loope
push
sti
icebp
outsl
push
dec
push
xor
jp
sub
push
push
mov
jns
pop
es
pop
push
mov
push
aaa
lahf
out
push
pusha
fmul
les
sub
int
fs
inc
int3
dec
and
popf
roll
mov
out
neg
daa
or
out
stc
mov
pop
push
xchg
mov
jns
shll
mov
push
dec
pop
cs
or
in
das
loop
fsub
cld
jnp
mov
sub
in
inc
cld
or
sbb
test
mov
insl
add
jbe
popa
ffreep
xor
cmp
inc
dec
mov
push
push
arpl
jb
cltd
adc
dec
call
out
mov
or
push
inc
repnz
xor
xchg
out
add
dec
icebp
mov
lds
mov
js
jns
mov
lret
inc
mov
push
jg
cmp
cs
mov
popf
push
cmp
dec
sbb
out
stos
xchg
add
add
xor
xchg
hlt
fisttpll
fmull
adc
fsubrl
mov
xchg
xchg
scas
add
push
push
movsb
adc
dec
dec
inc
jl
out
divb
in
jne
mov
aam
and
jbe
xchg
cmc
lahf
sub
das
adc
adc
pushf
pop
sub
pop
jnp
sbb
xor
inc
push
xchg
cmp
mov
out
push
xchg
sub
movsb
xchg
dec
cli
ror
cmc
rorl
popf
jge
les
mov
mov
out
outsl
xor
push
sbb
sbb
lea
orl
icebp
mov
popa
cmc
push
std
int
mov
frstor
mov
pop
in
clc
popf
adc
mov
clc
xchg
mov
lcall
pop
mov
flds
jbe
mull
dec
dec
arpl
sahf
or
xchg
sbb
adc
sbb
dec
sub
lret
inc
sub
popf
push
jne
fs
div
rol
in
pop
int
cmpsb
or
stc
es
ljmp
leave
daa
pop
and
mov
cld
fidivl
sbbb
xchg
push
or
bound
arpl
rcrl
shl
sub
daa
or
testb
xor
cmpsl
sub
inc
rorb
je,pt
in
hlt
xlat
std
repz
and
test
mov
mov
sbb
and
sbb
push
and
adc
jmp
push
in
add
adc
sub
push
xor
cmpsl
aaa
cmpsl
jbe
sar
cmpl
jle
and
imul
cli
sub
inc
addr16
xchg
sbb
loope
insl
and
dec
sub
dec
or
xchg
adc
insb
into
sub
sub
pop
cwtl
push
mov
nop
call
inc
sbb
mov
xchg
jmp
fisttpll
or
jmp
out
xor
xchg
xchg
jb
imul
pop
adc
cwtl
cs
ret
in
mov
pop
and
and
fldenv
push
ret
pop
jle
in
adc
sub
mov
and
aas
cmp
and
daa
leave
aam
in
into
xor
mov
das
dec
addr16
pushf
mov
aaa
popa
cmp
scas
das
or
cmpsl
mov
repz
mov
ja
rolb
scas
ss
repnz
xchg
adc
pusha
push
inc
das
push
and
dec
xlat
mov
jne
and
aad
and
pop
xchg
and
leave
movsl
cmp
rcll
sub
sub
movsl
inc
sub
adc
out
popf
xor
xchg
pop
mov
incb
cs
test
and
outsb
lods
das
and
mov
jno
fbld
sub
out
jmp
xchg
sub
ret
adc
mov
lret
mov
push
jmp
xchg
add
in
dec
or
ret
sub
mov
in
add
sbb
add
clc
and
ljmp
adc
stc
pushf
adc
sbb
sarb
dec
roll
data16
and
repz
adc
es
sub
jecxz
test
pusha
push
dec
xchg
push
or
or
rolb
sub
xor
test
or
jg
pop
xchg
mov
adc
enter
enter
insl
sub
stos
jbe
pop
popa
test
sub
stos
mov
mov
iret
dec
loope
inc
adc
mov
ret
adc
xchg
icebp
and
fwait
inc
or
mov
mov
popf
ret
add
pop
sahf
hlt
mov
ret
pop
and
mov
mov
pusha
pop
daa
pop
adc
clc
popf
sub
sub
in
mov
mov
mov
fisubl
loope
mov
cmp
add
dec
std
aas
fisubl
mov
stos
pushf
lahf
xchg
pop
mov
dec
js
mov
push
mov
push
stos
xor
xor
cmp
sbb
out
pushf
cmp
push
sahf
and
repz
xor
mov
cs
jp
adc
aam
cmp
insl
xchg
ret
jnp
aam
sub
sbbl
enter
and
sbb
ss
jl
or
push
pop
xchg
sub
jbe
movsb
sbb
out
adc
inc
inc
int
sbb
insb
mov
mov
int3
jmp
adc
pop
sahf
outsb
ds
cmp
and
out
roll
rcrb
lcall
push
push
sbb
xchg
cmp
fldt
adc
and
adc
or
sub
push
rcrb
dec
pop
jns
arpl
inc
rorb
xchg
sbb
sub
jbe
inc
adc
jbe
and
mov
int3
push
rcrb
fstl
rorb
jns
iret
shlb
xchg
sbb
lret
mov
xchg
pop
idivl
pop
call
out
sbbl
jmp
mov
jmp
in
and
jmp
lahf
or
dec
cmpl
out
xchg
stc
aaa
out
fildl
xor
ss
pusha
mov
movsb
lcall
cltd
in
jbe
pop
jl
pop
shl
cmp
jg
add
dec
or
xor
stos
out
dec
ds
add
push
sbb
sub
movsl
or
leave
and
lret
pop
sub
lods
sbb
rolb
inc
add
push
in
jbe
mov
lcall
cmc
in
arpl
xor
and
insl
or
je
ret
in
lock
jns
cmpsl
addb
pop
jg
out
dec
iret
sbb
int
xchg
mov
pop
xor
or
or
insl
mov
dec
mov
push
cmpsl
push
push
les
outsl
aaa
jo
in
scas
jo
and
rdtsc
out
xchg
les
fsubl
cltd
jae
je
rorl
movsl
add
mov
xchg
and
mov
mov
xchg
inc
mov
mov
nop
leave
sub
push
cmp
lfs
sub
test
jecxz
jle
cwtl
add
in
cmp
adc
pop
fnstcw
mov
xchg
pop
mov
mov
test
push
negb
aam
cmp
pop
push
lcall
imul
sbb
icebp
dec
jae
or
lods
rcrl
cwtl
cmp
cmp
fisttpll
icebp
or
cmp
rorb
push
data16
insb
mov
pop
or
and
dec
cmp
xorb
ss
leave
das
dec
or
inc
sub
mov
fucomip
stc
outsl
in
xor
test
clc
mov
sub
mov
gs
sub
lods
xchg
pushf
sbbl
sarl
dec
movsb
rorb
inc
pop
jns
int3
mov
shrb
jl
pusha
pop
xchg
pop
jne
out
clc
sub
in
icebp
into
sti
fisubs
cmp
loope
mov
fisubrl
ds
cmp
data16
mov
mov
jle
shlb
xor
mov
mov
pop
xor
ljmp
and
sub
xchg
add
and
lea
mov
lock
dec
xchg
mov
es
aad
pop
sub
scas
cs
cmp
or
lea
jg
imul
cmpl
addr16
push
or
or
ds
sub
repz
repnz
adc
xchg
sub
orb
mov
insb
into
imul
clc
mov
std
fbld
and
dec
outsb
call
adc
jno
push
movsb
cmpsl
mov
jge
or
xchg
mov
push
push
dec
lods
xchg
imul
xchg
call
mov
xchg
in
in
lret
rol
mov
cmpsb
clc
faddp
sub
mov
add
mov
hlt
mov
cmc
movsl
xchg
pop
mov
jns
mov
xor
mov
fs
pop
xlat
adc
add
add
push
xlat
test
std
cltd
je
push
sbb
and
adc
lods
rorl
sub
lods
mov
sbb
iret
and
addr16
mov
imul
mov
pop
jb
xor
int
enter
adc
sbb
jnp
inc
popf
cmp
test
mov
mov
jp
call
ja
add
cmpsb
das
loopne
loopne
jno
lods
sbb
or
iret
cmp
xor
xchg
add
pop
adcl
mov
es
mov
xor
sub
les
cmc
inc
popa
mov
movsl
jg
lods
ds
jbe
push
ret
jmp
push
cmp
cmp
mov
mov
add
fisubl
or
hlt
and
push
mov
fiaddl
xchg
mov
into
jns
les
mov
rorb
inc
in
mov
mov
popa
adc
cmp
or
sahf
mov
push
mov
add
adc
iret
xchg
rcll
movsl
dec
mov
in
or
xchg
repnz
mov
cmc
call
pusha
sbb
dec
pop
mov
dec
ret
mov
or
cld
mov
or
icebp
push
insl
pop
icebp
push
dec
cs
addl
call
rcrb
fsubr
popf
addb
xor
and
adc
jg
lea
pop
shlb
ficoml
jne
xchg
adc
mov
push
subb
sbb
cmp
repnz
fimull
jb
lods
and
dec
dec
sub
call
loope
pop
cmp
js
cmp
fiadds
stos
mov
gs
pop
scas
jl
push
sbb
mov
data16
jb
cmp
or
and
mov
in
je
imul
sub
lock
loope
jbe
mov
cmpsl
mov
rclb
fildll
jg
inc
iret
repz
lds
xor
push
clc
test
cmp
jae
sub
mov
dec
enter
push
cmp
fs
xchg
push
stos
jl
lods
cmc
or
sbb
mov
lods
mov
je
inc
jbe
mov
jl
loope
fmulp
cwtl
stos
jnp
or
adc
jno
xlat
inc
lahf
xor
nop
sti
out
cvtps2pd
out
in
dec
push
push
sti
mov
mov
sahf
mov
lret
mov
xchg
insb
pop
cmp
cmpl
mov
scas
lret
flds
insb
repnz
lahf
xlat
mov
pop
fldenv
dec
push
loop
mov
inc
xchg
xor
xchg
rcr
daa
pop
mov
xchg
cmc
in
fiadds
ljmp
xor
sbb
aad
mov
jo
ja
fldz
jmp
fsubp
aad
and
xchg
xor
setne
rcll
lcall
lods
in
and
sbb
dec
sbb
fwait
out
dec
jle
pop
leave
stc
add
and
addb
dec
rcll
cmp
sbbl
xor
std
xchg
mov
nop
sub
jle
xchg
dec
or
clc
dec
cmpsb
pop
push
test
push
loope
cmp
cmovnp
xchg
pop
jb
stos
mov
pop
inc
mov
js
and
shrl
and
mov
leave
jl
cmp
aas
mov
sub
mov
xor
sub
popa
add
lods
mov
or
cmp
repnz
mov
push
inc
fsubs
lret
lods
int3
fistpl
mov
fstl
stos
fistpl
mov
pop
mov
mov
dec
lods
and
mov
scas
cwtl
cmp
fwait
xor
repz
mov
jmp
sbb
hlt
shlb
stos
pop
xlat
sub
xor
fstpl
or
push
cmc
test
sbb
lea
jge
push
ja
icebp
mov
shrl
inc
into
out
mov
jns
aaa
bound
jnp
xorb
mull
iret
xchg
cltd
mov
lret
xor
idiv
mov
iret
loop
push
call
ljmp
loopne
jno
insl
pop
leave
push
adc
adc
sub
leave
sub
adcb
fistl
xchg
mov
rcll
push
cmp
data16
jecxz
inc
cmp
lcall
jns
mov
mov
jl
adc
dec
xchg
and
jne
leave
sbb
pop
push
push
int
lock
stos
stc
shl
loop
loopne
fs
cmp
scas
adc
sbb
or
jns
pop
xchg
dec
push
cltd
bound
or
dec
sbb
ret
inc
mov
jb
mov
or
popa
jle
jne
inc
cwtl
jne
outsl
test
scas
es
aas
aaa
scas
mov
cvtps2pd
pop
push
push
adc
lahf
mov
mov
out
mov
addr16
and
inc
imul
mov
out
inc
icebp
mov
mov
pop
scas
scas
subb
movsl
xchg
decb
mov
lds
adc
push
test
sbbl
and
pop
mov
sub
and
cwtl
in
cld
lods
push
test
movsl
bound
ret
mov
jb
mov
cwtl
mov
mov
lret
sarb
sub
aaa
xchg
xchg
mov
shll
add
mov
rcl
mov
jno
mov
mov
xchg
push
pusha
lret
sbb
mov
jb
iret
jbe
mov
add
ret
pop
jl
xor
xor
sbb
in
outsl
por
daa
es
loop
inc
mov
aas
sbb
mov
mov
icebp
rorb
adc
push
iret
filds
lcall
inc
lret
jp
and
data16
aad
or
add
mov
mov
and
pushl
mov
inc
inc
xchg
cmp
push
popa
or
movzwl
outsb
xor
mov
outsb
ja
jp
pop
adc
shll
cltd
test
es
test
in
repnz
push
mov
imulb
adc
pop
xlat
fbstp
ja
push
js
cmp
daa
fcomps
stos
mov
pop
xor
jge
xchg
lret
pop
cmp
jae
sub
push
and
cmp
arpl
hlt
mov
mov
out
ss
pop
dec
in
push
call
jmp
outsb
mov
and
lods
sbb
stos
out
push
hlt
in
mov
ljmp
repz
lods
or
sub
mov
dec
imul
or
dec
xchg
dec
mov
les
xorl
cmpsb
jmp
xorb
pop
lret
imul
sti
cmp
inc
cwtl
dec
loope
xlat
movsb
movsb
cmc
sub
cmpsl
out
into
sahf
les
mov
mov
mov
cltd
mov
mov
inc
ficomps
aaa
sbb
fldenv
inc
iret
cmpsb
push
xorl
sub
popf
pop
data16
dec
imul
movb
cs
and
jle
dec
ja
cld
imul
cli
cs
xchg
imul
icebp
mov
fldl
les
out
mov
sub
out
stos
sti
js
inc
jbe
jae
jmp
test
jo
leave
or
movsb
sub
pop
fcmovne
sarb
outsl
add
cli
mov
imul
jp
adc
and
enter
stc
mov
xchg
and
gs
stos
arpl
add
es
outsb
mov
xchg
mov
movlps
push
arpl
mov
mov
lods
dec
push
fcoms
loope
mov
xor
mov
pop
daa
jp
ds
es
loopne
add
cld
or
cltd
add
cs
add
imul
test
cmp
loope
mov
dec
mov
or
adcb
push
xchg
fdivl
dec
pop
movaps
scas
pop
and
sti
jae
rorb
ret
or
dec
call
lahf
lock
xor
xchg
outsb
inc
mov
loop
and
sub
test
pop
mov
xor
decl
jo
loop
mov
div
incb
ds
cmp
mov
in
ret
fldenv
pop
cmpsl
scas
imul
fwait
lret
mov
inc
xchg
and
xor
stos
cmp
roll
and
lret
cwtl
push
cwtl
cmpsb
mov
dec
xor
dec
not
xchg
mov
mov
insb
pop
cmp
cs
add
rcrl
add
push
mov
mulb
pop
mov
int
lds
shlb
movsl
or
jp
cwtl
clc
add
or
sti
pusha
lret
adc
mov
insb
pushf
mov
mov
fidivl
push
in
dec
ljmp
jg
mov
jmp
mov
fcoms
mov
cmpsl
adc
fwait
idivl
cmpsb
iret
cmp
inc
fisttpl
cmp
dec
add
push
cmp
cmp
mov
adc
fwait
cld
xchg
sub
daa
xor
cmc
fdivs
lock
jp
mov
ret
xchg
jmp
sub
xchg
inc
movsl
lahf
jle
bound
into
adc
insl
scas
mov
fidivs
sbb
xchg
xchg
or
mov
adc
push
ror
xor
mov
mov
in
stos
mov
fisubrl
and
fcom
stos
fdivrs
jbe
loopne
jge
xchg
pop
xor
pop
aad
pop
push
add
cld
pop
subl
push
push
mov
cld
jb
cmp
cwtl
aad
rol
dec
dec
lds
ret
icebp
add
cltd
xlat
jbe
insl
sti
cmp
xchg
into
dec
aaa
jo
and
xor
pusha
jecxz
and
dec
cmp
dec
cmpsb
inc
cs
xchg
push
jne
cmp
ret
add
adc
daa
call
rclb
aas
mov
cmp
jae
sub
imul
mov
rclb
lea
sub
push
arpl
lds
xor
fcomi
cmp
leave
mov
mov
mov
stc
jg
sub
cmp
mov
xor
cmp
and
mov
cmp
cmp
dec
mov
and
and
jle
test
jno
sub
out
mov
aaa
loopne
sub
mov
mov
ret
es
pop
aam
mov
cmp
push
fnstcw
xor
mov
jge
dec
lcall
jl
cwtl
test
loopne
ret
cmp
js
xor
inc
and
insb
leave
or
fildl
rorl
clc
test
aas
cmp
adc
outsl
mov
jbe
mov
mov
pop
aad
xchg
pop
popf
lods
pop
cmp
xchg
enter
bsr
ret
and
or
inc
or
jmp
int3
push
es
mov
inc
movsl
jg
cltd
sub
jl
cmp
loopne
xchg
mov
pop
es
dec
lods
scas
jl
mov
rcrl
cltd
cmp
push
xchg
clc
or
idivb
mov
out
adc
or
sarb
mov
fisttpll
in
imul
das
push
mov
imul
sbb
lea
mov
fwait
ret
push
lods
mov
loopne
xchg
sbb
nop
mov
call
cwtl
and
fwait
push
jp
inc
push
jb
call
inc
mov
lret
xor
daa
xchg
loopne
ss
and
push
or
call
lret
adc
insl
lds
sub
jne
pop
aad
imul
mov
fiaddl
or
loopne
and
ret
sbb
push
or
lret
and
sub
dec
push
cli
js
pusha
add
mov
adc
mov
adc
adc
aam
cmpl
pop
push
lods
mov
inc
and
iret
dec
adc
pop
into
and
cmp
je
mov
sub
gs
push
aam
out
outsb
aad
mov
pop
loopne
inc
mov
aaa
fs
fidivs
mov
xchg
repz
cmp
pop
mov
mov
mov
push
ss
adc
inc
sbb
jb
in
outsl
gs
cmp
xchg
imul
xchg
mov
add
jmp
popf
je
in
std
fidivs
add
mov
popf
imul
xor
dec
sahf
pushf
mov
and
les
addb
rorl
in
ljmp
inc
sub
movsb
insl
push
mov
out
mov
mov
jne
add
cld
sbb
nop
or
cmp
lcall
imul
dec
push
jno
sbbl
pop
scas
mov
or
sub
dec
jnp
mov
mov
adc
jge
imul
mov
push
divl
cltd
gs
outsb
sub
out
push
loopne
adc
insb
lock
push
cwtl
fidivrl
imul
xor
mov
and
stos
sbb
lea
jbe
mov
subb
push
repz
call
or
int
shl
test
or
outsl
add
cmp
jg
and
cmp
mov
js
add
mov
gs
push
mov
mov
cmc
inc
jno
adc
subl
mov
daa
sub
arpl
enter
cmp
dec
cmp
int
pop
cli
push
xor
mov
dec
dec
js
lahf
push
out
add
fucom
inc
mov
leave
nop
in
push
icebp
imul
jae
xchg
mov
push
jp
rorb
mov
pop
xlat
pusha
loope
cwtl
push
jp
daa
jp
jno
jae
sbb
scas
les
mov
jo
jp
imul
mov
ret
pop
outsl
pop
sub
jp
insl
fistpl
add
fistl
aas
add
fistpl
xchg
bound
mov
pushf
sbb
and
ds
and
in
inc
lahf
cld
mov
cmpsb
pop
dec
inc
lds
imul
data16
xchg
test
int
test
xchg
xchg
jne
lcall
sbb
mov
or
clc
push
mov
cmpsb
adc
sub
dec
out
mov
push
or
xchg
mov
stc
das
and
cmp
pop
or
lcall
sbb
lret
or
push
inc
add
bound
cmp
hlt
out
and
sub
xor
dec
lahf
fisubl
ja
jl
or
test
sub
xchg
fimuls
pop
aad
cmp
addr16
xchg
pop
xchg
cwtl
aam
push
out
insl
mov
inc
or
scas
xlat
les
dec
or
in
divb
xor
ljmp
fcompl
pop
mov
loop
icebp
jge
mov
push
mov
pop
jle
call
dec
fnsave
and
je
scas
pop
jns
pop
push
clc
push
mov
ret
pop
jecxz
add
je
mov
shr
into
arpl
cld
scas
mov
xor
pop
stos
ffreep
push
ret
gs
lods
and
push
loopne
ret
jne
cs
repz
jb
pop
into
xor
subl
cli
ret
adc
xchg
insl
xchg
mov
mov
mov
inc
sbb
mov
mov
mov
xor
stos
xor
das
jmp
adc
mov
scas
aam
in
mov
add
js
mov
dec
fisubs
fcompl
jnp
jmp
xor
xor
xchg
mov
xor
lods
fsts
add
mov
enter
outsl
stos
push
test
movb
push
sub
or
dec
jmp
pushf
sub
test
add
adc
repnz
and
into
fwait
hlt
mov
addr16
pop
inc
shl
insl
dec
ret
dec
lock
mov
leave
xchg
or
sub
mov
cli
adc
ret
stos
test
add
jle
adc
push
adc
pop
aaa
in
sti
es
lods
int
pop
lahf
sbb
sbb
adc
adc
sbb
fiaddl
dec
mov
mov
sub
dec
push
mov
or
lret
cmp
cwtl
xchg
pop
outsb
ja
call
cmp
std
adc
popf
enter
sub
adcl
ret
sub
movsb
or
dec
adc
fdivs
lds
inc
pop
ficompl
cmp
rcll
inc
mov
popf
inc
int
pop
outsb
ja
popf
jb
mov
add
cmp
shll
insb
dec
xchg
pushl
ret
inc
xchg
xchg
sahf
push
inc
mov
dec
adc
cmp
or
xor
add
fdivs
in
xor
sbb
aaa
aaa
adc
outsl
ja
imul
movl
push
fimull
stc
jle
add
in
out
add
cs
jg
sbb
mov
push
faddl
mov
dec
push
mov
lahf
loope
add
sbb
push
cltd
das
sbbl
icebp
mov
adc
pop
sub
and
push
or
lret
fnstenv
lock
lods
adc
outsl
adc
les
xchg
jge
inc
xor
mov
out
xchg
shrl
or
lahf
mov
decl
lret
lret
cmp
adc
adc
shlb
mov
lret
mov
jg
push
dec
push
inc
gs
adc
leave
xchg
inc
aaa
repz
pusha
or
and
jns
aad
leave
push
sahf
pop
inc
orb
add
stos
cmpsl
push
xor
push
outsb
sar
aas
mov
jmp
inc
mov
aam
and
fiaddl
xor
push
aam
ret
test
es
mov
mov
pop
lods
in
and
out
repnz
cmpsb
int
out
xchg
jb
ficoml
out
cmc
xor
mov
xor
out
imul
js
add
jecxz,pn
addr16
jp
loope
iret
inc
int
stos
cmp
and
pop
mov
int3
xchg
add
jbe
xchg
push
push
js
out
jp
pop
mov
loopne
and
icebp
lahf
into
insl
roll
in
enter
dec
lcall
mov
imul
ss
jne
sub
inc
fsubrs
cmp
pop
stos
cmp
insb
repz
stos
cmp
pop
stos
cmp
push
mov
jno
arpl
cli
mov
fidivs
mov
test
dec
pop
subb
mov
add
popf
cmp
pop
or
and
xor
pusha
xor
in
sbb
lods
push
dec
xchg
cmp
shrb
ds
add
add
mov
jmp
flds
mov
push
sub
stos
int3
xor
sub
cmp
cwtl
fnsave
mov
js
push
sarb
dec
mov
jbe
or
add
xor
cmp
mov
nop
call
clc
enter
push
mov
lock
leave
sar
pop
je
addr16
adc
pop
add
rep
sbb
cli
push
fs
lock
daa
mov
xchg
mov
int3
or
pop
outsl
xlat
pop
in
pushf
mov
push
rol
mov
jecxz
cmp
int
push
aas
sbb
rclb
mov
hlt
cmp
ret
aaa
sub
int
test
mov
arpl
adc
std
cwtl
xor
lcall
xor
push
data16
pop
add
aaa
lods
cmp
add
dec
je
dec
adc
add
rorb
das
mov
dec
inc
push
leave
aad
cmpsl
add
imul
or
mov
dec
js
push
lods
mov
xor
pop
sbb
gs
icebp
push
push
add
insb
sub
sbbb
das
inc
gs
cmp
ficompl
filds
push
pop
xor
xchg
pop
and
test
sbb
dec
cmpsl
and
pop
xor
out
cmp
nop
ljmp
in
repz
aad
das
and
dec
pop
push
or
mov
aas
mov
or
pop
int
xor
adcl
out
aas
iret
es
inc
pop
jae
bound
fs
mov
out
inc
cmp
std
inc
rclb
dec
mov
push
jae
orl
popf
jg
mov
pop
stos
imull
sbb
xchg
js
pop
arpl
push
psrad
mov
filds
xchg
add
add
dec
jmp
aad
mov
hlt
push
add
sub
inc
sarl
imul
jne
iret
test
cmc
sti
fs
fisttpl
jae
aas
mov
xchg
fdivrs
dec
and
loopne
pop
addr16
loopne
adc
add
pop
sbbl
and
xlat
mov
and
pop
in
outsb
push
repz
mov
jnp
xlat
ja
cltd
into
out
mov
out
cmp
pop
add
mov
and
dec
jnp
movsl
je
fisttps
xor
ret
in
std
rcll
lret
pop
sub
jmp
inc
push
add
into
dec
enter
stos
loope
pop
ret
ficoml
je
outsb
fidivrs
hlt
scas
sbb
popa
mul
dec
push
push
mov
popf
pop
mov
and
popf
push
movsl
add
jae
push
mov
inc
cmpsl
js
pop
cmp
addr16
or
jae
sbb
push
mov
xchg
rorb
and
mov
xchg
inc
fmulp
rcl
xchg
std
insb
cld
mov
dec
dec
nop
and
and
xchg
dec
jbe
xchg
sti
std
mov
fstl
test
add
sbb
lds
pushf
roll
sub
jns
mov
cmp
sbb
add
leave
xlat
xchg
xchg
cli
jne
mov
or
add
pop
lcall
movsl
xchg
lahf
sbb
insb
jns
inc
fstpt
cmp
jl
ficomps
fscale
jns
lret
test
mov
icebp
mov
popf
loop
imul
jo
dec
jne
xor
in
jbe
cld
jnp
out
add
or
cltd
scas
dec
inc
mov
push
testb
pop
data16
lret
add
daa
cli
xchg
push
xor
ja
addb
or
mov
mov
ret
outsb
pop
ds
xchg
loopne
jns
add
and
lret
lret
cmpsb
scas
xchg
int3
and
shr
and
mov
push
sub
sbb
ss
mov
es
or
fwait
adc
cmp
call
push
loopne
jmp
mov
jp
movsl
xchg
push
mov
jae
test
push
or
pop
hlt
cli
push
add
jbe
jno
or
mov
stc
dec
cmp
sbb
lea
leave
xor
out
inc
sbb
imul
lahf
cmp
cmc
jecxz
push
sbb
xor
rorb
rcll
fisttpll
rorl
sbb
shrl
cs
fimuls
mov
adcl
sub
mov
inc
dec
dec
pop
ss
pop
jecxz
push
in
xchg
iret
mov
adc
icebp
pushf
dec
frstor
mov
nop
jecxz
dec
adc
pop
imul
push
or
iret
jecxz
pop
aaa
lea
sbb
in
stos
or
mov
push
or
test
inc
fucomi
shrl
std
mov
inc
insb
or
inc
std
daa
sub
push
ja
or
adc
lock
fimull
popl
fsubp
repz
or
hlt
sub
in
mov
fimull
iret
sbb
insl
int
mov
movsb
insb
fsubs
ret
dec
lds
clc
rcrl
stc
imul
es
dec
pushf
ds
mov
in
in
mov
ljmp
pop
aam
jp
pop
dec
xor
cmp
xor
and
scas
mov
ret
shll
xchg
or
add
inc
mov
xchg
stc
insb
sub
imul
aad
clc
addl
pushf
sub
adc
ds
mov
pop
mov
lret
or
mov
test
std
jbe
add
jno
jge
push
jae
cmc
shll
clc
inc
sub
fstpl
xchg
nop
sub
pop
pop
jne
jno
and
mov
fmull
dec
xchg
adc
push
cmpsb
dec
ljmp
lret
mov
ds
lahf
push
gs
ret
cmc
mov
aaa
cmp
in
adc
mov
lret
loop
or
inc
shll
jmp
inc
sbb
pop
js
xorb
and
das
gs
jge
adc
mov
es
adc
or
test
sar
sub
call
fsubrl
lea
xchg
leave
xor
or
sub
test
addl
mov
sbb
icebp
fcmovnbe
add
enter
out
aad
das
xorb
pop
cli
insl
mov
mov
outsb
imul
xchg
leave
mov
xor
or
inc
push
dec
mov
jl
mov
js
jecxz
jne
bnd
push
or
push
push
or
int
push
adc
and
imul
sub
sbb
sti
fdivrs
dec
hlt
addr16
sub
mov
mov
push
es
les
push
aas
and
add
ja
mov
scas
insl
fdivrs
mov
std
ja
pop
push
pushf
data16
ds
add
push
mov
shl
add
mov
or
idiv
cli
js
rcr
inc
in
int
sub
pop
mov
sar
mov
push
repnz
enter
adc
mov
bound
cmp
dec
push
xchg
jge
pop
cmp
jl
popf
adc
fdivrs
lock
mov
cmp
aas
stos
and
mov
scas
rcrl
cmp
cmp
cmp
and
mov
mov
fcoml
fiaddl
fdivrs
iret
lock
mov
xchg
add
mov
cmpsl
adc
sti
call
outsl
pop
add
inc
scas
mov
sub
push
cmp
or
sbb
arpl
stos
dec
jno
xchg
and
cs
xchg
repz
jle
mov
enter
jae
test
mov
xchg
xor
mov
stos
xor
push
jmp
mov
add
jp
aaa
mov
pop
mov
pushf
enter
and
jbe
adc
xchg
scas
or
jmp
out
jns
mov
inc
push
divps
or
xor
pop
out
bound
pop
lret
cmp
inc
std
outsb
push
fs
icebp
push
cmp
out
xchg
cmp
popf
xor
pop
push
ret
icebp
jg
mov
sub
mov
in
scas
jo
mov
dec
push
out
sbbb
xor
jo
loop
adc
repz
cs
jbe
and
sub
sbb
push
cmp
jo
repz
mov
stos
daa
daa
lods
fs
inc
in
jo
pop
lret
xlat
mov
fwait
and
cmp
repz
sub
movsb
jg
xor
push
orl
sub
int
roll
nop
iret
xchg
rcrl
dec
imul
xchg
test
push
mov
sub
punpckhbw
insb
out
shll
push
pop
addr16
cmp
xor
dec
imulb
mov
lret
or
push
lret
push
cltd
jnp
cs
cld
adc
fs
add
inc
das
add
repnz
jle
xor
hlt
push
movsb
imul
mov
jo
push
xor
jb
mull
adc
xchg
sbb
pop
pop
pop
shlb
inc
lahf
inc
pop
sbb
push
sub
mov
pop
push
mov
repnz
in
lahf
out
and
mov
lea
cmp
dec
ret
xor
push
pop
xor
push
out
lock
clc
lock
and
push
push
jbe
fsubrl
adc
nop
and
rcrb
fstl
int
cmp
inc
cmp
sub
repnz
xchg
adcb
fdiv
xchg
in
pop
sti
mov
push
jns
fmulp
xchg
push
or
mov
add
pop
xchg
sub
rorb
repz
loop
cs
lret
daa
and
int
jl
rcrl
or
das
push
sub
dec
call
cwtl
or
imulb
cmpsl
jae
out
ficoms
out
inc
cltd
dec
mov
jno
inc
cmp
lock
insl
out
dec
add
je
lcall
mov
sar
ret
mov
hlt
mov
in
adc
out
loop
lret
pop
pusha
rcll
lea
cmpsl
sub
in
aam
fsub
es
mov
loope
ljmp
sbb
insl
aas
sub
seto
inc
cmp
incb
xchg
dec
mov
test
jo
pop
pop
jmp
lods
mov
out
add
jno
jmp
push
push
pop
pop
ror
je
mov
loopne
sub
sbb
jo
xchg
loope
aaa
xchg
lcall
int
shll
xchg
pop
lret
ucomiss
mov
iret
incl
lahf
mov
adc
out
inc
pop
sbb
movsb
adc
mov
les
es
add
push
xchg
dec
imul
cmpsl
fisubl
pushl
sbb
in
cmp
shlb
xchg
andl
cmpsl
pop
out
xorl
xchg
cwtl
bound
test
jnp
jmp
decb
mov
mov
insl
pop
add
hlt
or
cmp
and
lock
repz
cmp
jns
xor
shl
inc
orl
cmp
mov
add
test
and
mov
daa
push
xchg
es
es
mov
das
divb
fstpt
test
sub
ret
loope
pop
mov
jb
inc
ficompl
mov
in
push
aaa
je
loop
out
lret
and
mov
subb
flds
in
sub
ja
inc
mov
lods
and
in
jae
xchg
in
orb
pusha
jne
add
xor
push
jns
lock
adc
mov
fists
push
xor
je,pn
icebp
cmp
inc
mov
daa
mov
leave
stos
cmp
cmp
cmp
roll
mov
inc
in
jns
cs
loope
xchg
add
int
fwait
push
int
out
sti
jmp
mov
js
lds
jmp
jmp
mov
inc
scas
lea
stos
daa
es
jnp
in
addr16
shl
mov
add
push
dec
push
sbbb
pop
push
pushf
sbb
inc
arpl
and
or
rorb
and
sub
mov
push
mov
ds
lahf
jae
out
and
mov
clc
stos
stc
dec
data16
clc
sub
lea
adc
sarl
mov
or
mov
pop
ret
ds
push
adc
add
data16
jbe
ds
fimuls
js
add
movsl
inc
hlt
mov
popf
cli
cmp
cmp
fdivrl
int
out
outsl
push
jg
mov
pop
icebp
mov
inc
mov
int3
sub
aam
popa
mov
scas
iret
and
push
stc
in
pop
outsl
in
or
lea
testl
jmp
mov
xor
mov
ljmp
sbb
jno
cmpsb
mov
xchg
notb
icebp
mov
aaa
lock
cmpsl
popw
push
stc
push
push
sahf
fidivl
adc
sbb
nop
push
and
lcall
mov
jae
movsl
es
scas
fstpl
jne
inc
inc
ss
inc
xor
mov
jbe
rcll
sub
xchg
and
push
loop
test
add
adc
mov
pushf
das
imul
push
mov
adc
or
icebp
in
in
mov
pushf
lret
mov
jne
jl
repnz
repnz
cmp
in
fstpt
idivl
inc
dec
out
xor
mov
and
xchg
add
mov
xchg
mov
xchg
pop
jo
pop
in
or
jns
ret
fimuls
mov
and
fisttpll
out
push
les
ja
pop
dec
ret
inc
add
les
out
inc
sbb
pusha
out
sbb
jae
scas
insl
or
xor
mov
jno
gs
das
outsb
push
push
inc
mov
mov
jecxz
adc
inc
jne
scas
pop
imul
cmp
movsl
bound
push
pop
cli
lods
popa
mov
mov
cld
test
sub
lret
in
out
mov
divl
aaa
dec
js
testb
push
addb
in
or
or
xor
mov
push
jl
fdiv
pop
loopne
js
rcrb
jno
mov
mov
push
daa
out
inc
out
ja
insl
aam
xor
lret
mov
jge
xor
adc
notl
push
pop
jl
pop
xchg
pop
dec
daa
mov
xchg
lret
push
push
stos
fwait
pop
mov
mov
jno
pop
xor
ret
repnz
adc
dec
xchg
push
xchg
lds
cltd
fs
inc
mov
in
mov
jge
sbb
adc
xchg
mov
scas
jmp
cmpsl
out
push
mov
pop
jns
shl
mov
push
mov
push
test
outsb
xchg
test
xor
pop
icebp
mov
push
sub
pop
mov
ss
and
loope
iret
xor
outsl
mov
add
and
cmpsl
xchg
sub
xchg
lret
aaa
add
sbb
mov
jg
adc
stc
sub
inc
sti
mov
mov
out
cmp
xor
ja
lret
pop
pop
xor
adc
mov
mov
roll
cmp
xor
dec
idiv
sbb
rcrb
nop
insb
fwait
imul
cmp
outsb
outsb
dec
pop
loopne
mov
jne
test
aas
mov
sub
xor
fldcw
std
jmp
xor
ret
push
mov
out
sub
xlat
iret
jecxz
add
lcall
aaa
xchg
jle
and
jne
inc
cmc
add
push
cmpsb
lods
loop
push
aas
push
ds
shlb
xor
sub
or
mov
outsl
pusha
jb
insb
xor
testb
call
shlb
dec
in
mov
adc
cmp
aam
and
arpl
js
int3
pop
cltd
jbe
aam
int
fwait
lahf
cltd
sub
inc
and
insb
mov
adc
mov
push
cmc
push
adc
fdivrs
sbb
out
cs
sbb
dec
es
xchg
ss
adc
fisttpll
stos
add
or
rorl
in
roll
in
or
add
divb
jae
push
aad
add
sbb
mov
jg
xchg
mov
jb
cmp
xor
dec
mov
nop
dec
lods
xor
outsb
test
jne
aas
dec
inc
lret
lods
mov
aad
and
loop
cmp
lods
jbe
aad
arpl
repnz
sti
mov
xchg
and
xchg
fldcw
outsl
and
mov
lahf
into
arpl
push
cltd
mov
mov
jmp
cmovle
mov
mov
lret
push
add
mov
clc
in
and
push
mov
push
enter
xlat
fwait
shll
ficomps
outsl
and
dec
adc
push
sar
sub
mov
dec
setne
rorb
lcall
mov
and
js
call
cmp
daa
cmp
stos
test
fidivrs
cmp
int
nop
cmc
mov
jle
movsl
fsts
mov
enter
jle
pushl
in
mov
nop
shl
ss
test
rclb
fdivrs
xchg
or
push
cmc
mov
inc
sub
jl
fs
inc
and
repz
idiv
adc
xor
lahf
sub
sbb
push
icebp
stos
mov
lret
mov
mov
in
imull
pop
mov
ds
outsl
jns
ret
enter
or
aas
adc
xchg
jle
fidivrl
popf
shll
mov
xor
test
bndldx
pop
sahf
or
pop
vmulps
or
and
aad
lods
sti
and
sbb
rcrl
or
imul
das
jo
mov
and
pop
pop
mov
or
or
sahf
insb
inc
movsb
fiaddl
sbb
sbb
sbb
mov
ss
cltd
cmpl
aad
cwtl
push
adc
mov
or
test
cmp
dec
jge
out
mov
popf
nop
inc
imul
jne
pop
xchg
jl
mov
mov
push
repz
push
ror
and
stc
dec
dec
push
jle
stos
inc
dec
mov
pop
add
test
sbb
and
and
rcll
je
xor
mov
in
xchg
outsb
mov
push
out
nop
popa
cmp
int
lods
mov
out
inc
into
pop
mov
mov
mov
out
dec
jb
aaa
testb
adc
dec
lock
jae
sbb
sbb
lret
push
jl
out
sbb
stos
sub
inc
or
inc
cmpb
pop
fdivs
push
lods
push
icebp
mov
lcall
imul
sbb
lcall
mov
gs
addr16
adc
jne
aad
jno
push
dec
cmpb
mov
or
sub
pop
push
imul
inc
inc
fdiv
int
aas
popa
inc
gs
hlt
jp
stos
cwtl
cmp
mov
stc
ret
movsl
xchg
nop
in
or
pop
or
rorb
movsl
imul
inc
pop
fcompp
insb
outsl
testl
out
fidivs
fstpt
in
sbb
adc
fwait
adc
scas
xchg
or
jle
lock
or
mov
pusha
lret
into
mov
out
fnop
imul
mov
mov
shlb
or
loop
adc
sahf
push
or
push
rorl
adc
and
aas
mov
dec
adc
test
pop
imul
and
add
popa
xor
ret
test
ss
pop
cmpsl
adc
repz
int
hlt
jle
imul
dec
test
adc
pop
xor
sub
fdiv
pop
inc
mov
jecxz
cmp
xchg
or
sbb
jmp
mov
orps
stos
pop
lea
lcall
add
mov
rolb
imul
pop
push
subl
fstpl
imul
push
ss
pop
ja
sub
mov
add
int3
cmp
jo
stos
and
mov
adc
das
and
sub
add
enter
mov
mov
int3
cmp
mov
movsl
inc
dec
dec
jnp
and
push
imul
xchg
jmp
lock
xchg
and
stos
scas
sbb
pop
xor
or
pop
or
sbb
xor
cmp
or
repnz
cmc
mov
cwtl
int3
jb
or
push
lods
sbb
sarl
sub
das
mov
aam
ja
or
arpl
push
jb
pushf
test
lea
pop
fidivrs
add
andb
adc
aaa
mov
xchg
addr16
cmc
push
stc
lods
and
sub
sbb
push
movsb
movsb
shll
in
sub
gs
mov
xchg
pop
pop
sub
xchg
pop
mov
std
lods
jne
cwtl
jmp
jo
ljmp
je
mov
daa
mov
or
inc
or
cmp
add
fisubs
xchg
sub
dec
inc
dec
mov
jb
mov
ret
and
rorb
ret
or
and
aam
fxch
loop
mov
ljmp
jne
lret
xchg
xchg
dec
fiadds
mov
push
dec
cmc
pop
lret
fsubp
mov
mov
ds
jbe
xor
jnp
clc
inc
mov
cmp
jns
jb
and
mov
lds
sub
dec
add
push
shrl
int
fistpll
cld
cs
mov
lret
in
pop
jb
xor
mov
or
pop
mov
mov
jno
and
xor
ss
lods
insl
mov
dec
cmp
jle
mov
xor
fdivr
pop
jecxz
mov
lods
sbb
sbb
movsb
xor
test
lret
mov
hlt
sub
jl
adc
mov
es
or
imul
nop
add
mov
enter
daa
jge
cmp
adc
movsb
jge
or
cli
jo
or
call
lret
mov
test
outsl
es
jg
lcall
bound
xchg
sub
push
mov
pusha
mov
xor
xor
push
std
in
in
sbb
in
orb
sahf
push
or
xchg
xchg
pushf
pusha
movsb
add
sub
shrl
fadds
inc
jb
std
sub
sbb
and
xor
bound
and
pop
cmp
push
xchg
mov
clc
xor
test
xlat
push
xchg
scas
out
aaa
shl
lahf
sbb
insl
mov
adc
or
dec
inc
jecxz
dec
ljmp
and
jge
mov
nop
repnz
jmp
cs
sub
aad
cld
and
cmpsl
sub
fchs
push
push
lcall
out
lahf
mov
adc
std
xchg
enter
inc
in
cwtl
call
clc
das
mov
fwait
lcall
sbb
lock
roll
fbstp
cwtl
aad
lret
js
or
pop
sub
adc
in
and
mov
xchg
add
fsts
mov
dec
bnd
cmp
mull
dec
push
aam
mov
mov
pusha
fisttpl
aaa
iret
addb
and
inc
adc
subl
test
xchg
flds
mov
inc
jmp
jbe
xchg
adc
or
adc
fdivrs
sbb
sbb
imul
jnp
incb
pop
shll
xchg
jno
lea
fistps
mov
test
mov
in
mov
add
rcr
sub
push
mov
cmp
push
hlt
add
cli
mov
imul
cld
inc
lea
lock
cmp
test
dec
add
insl
mov
ret
jl
leave
push
mov
lds
jns
push
test
fmuls
mov
loop
adc
popa
outsb
xorl
bound
fiadds
ja
push
nop
or
pop
pop
sub
mov
mov
dec
jl
pop
fsubrs
out
cmp
inc
std
cmp
fcomps
lret
ffreep
push
mov
ja
mov
pop
sti
sbb
xor
and
lahf
lret
pop
lea
in
xchg
dec
hlt
inc
xchg
push
fnstcw
add
jb
hlt
mov
nop
cmp
cmp
jno
pop
and
push
les
iret
fidivs
push
adc
ds
dec
roll
mov
or
sub
mov
cmc
ljmp
shl
sbb
or
je
adc
out
ficoml
imull
test
jg
imul
pusha
stc
xor
push
ret
das
cmp
mov
lds
cmp
xchg
ljmp
fidivrs
cmc
mov
sub
sbb
push
jbe
lds
test
cltd
int3
sbb
movsb
fs
outsl
sbbb
jp
push
mov
mov
push
faddl
xor
pop
or
call
mov
sbb
clc
lods
fbld
stos
ja
je
jmp
leave
push
pop
mov
iret
outsb
imulb
popa
or
leave
or
sahf
lcall
xor
sub
add
add
imul
add
out
cmc
inc
push
add
mov
dec
aam
push
xlat
jmp
jge
fdivrs
sub
dec
cltd
repz
xchg
test
lods
outsl
push
sub
xchg
lcall
ret
mov
and
dec
sbb
or
adc
mov
mov
inc
dec
sub
jp
jb
jmp
mov
xor
and
xchg
jle
fldt
xchg
sub
cld
xor
rorl
or
aaa
cmp
dec
sub
adcl
pop
outsl
lea
xor
ret
mov
and
test
movsb
adc
mov
je
mov
and
jmp
mov
sub
inc
xlat
push
adc
push
ss
loop
mull
std
push
imul
push
std
lret
xchg
ret
and
out
dec
lds
outsb
mov
iret
popf
and
je
test
repz
sbb
push
leave
xor
sub
gs
sti
and
lea
fiaddl
sahf
sbb
lock
cld
inc
sbb
xchg
std
sbb
mov
inc
xchg
rcrb
pop
dec
stc
loope
insb
mov
adc
aas
roll
std
sub
mov
push
inc
int3
aam
movsb
mov
fcoms
nopl
add
fstpl
xlat
sub
pop
xchg
mov
lds
and
mov
repnz
add
lods
sbb
arpl
aaa
xchg
push
jne
jnp
add
xor
in
dec
push
xchg
fwait
decb
in
mov
inc
cmp
xchg
insb
ret
insb
xchg
aas
push
rcll
pop
or
mov
sub
stos
outsb
fadds
inc
and
mov
lock
or
mov
inc
lret
inc
outsl
std
and
jnp
addr16
sti
fcmovb
mov
push
xchg
cmp
mov
jns
repnz
insb
cltd
cwtl
lret
fsubrl
mov
clc
pusha
movsb
xchg
xchg
jge
pop
inc
mov
in
shlb
add
mov
and
pop
leave
and
cmc
and
js
dec
pop
sub
fidivrs
sbb
push
jns
push
fs
in
nop
xor
out
aam
pop
push
dec
cmpsl
xlat
ljmp
ret
fs
aam
sub
jl
mov
mov
mov
add
dec
stos
pop
pop
outsb
clc
and
test
mov
aad
jnp
das
test
dec
mov
push
ss
rcrl
cs
in
cmpsb
test
adc
adc
js
mov
sub
lahf
std
ret
daa
test
jns
mov
and
loope
sub
mov
cltd
push
ret
push
insl
mov
mov
jg
or
pop
sar
cwtl
in
daa
xchg
jb
jecxz
mov
add
jbe
cs
addr16
outsb
and
rorl
shll
subl
fldt
js
outsb
cmp
ret
jp
add
pop
les
xor
jge
test
mov
mov
jb
push
pop
mov
mov
cmpb
repnz
out
ljmp
lods
add
push
or
into
dec
pop
xchg
inc
mov
dec
cmp
addr16
mov
mov
pop
ficoml
adc
mov
add
sbb
mov
cli
cli
cmp
adc
negl
mov
cli
outsl
ffreep
pop
push
pusha
jmp
dec
mov
js
in
mov
sbb
xchg
sub
adc
sub
xor
mov
mov
aam
push
call
xor
push
xor
cmpsl
jo
popa
out
or
xor
outsl
hlt
mov
leave
xor
xor
sub
neg
jg
hlt
mov
mov
cltd
cmp
mov
sub
dec
aam
nop
sbb
cmpsb
mov
xchg
xchg
ljmp
pusha
or
dec
mov
call
ljmp
lds
popa
dec
mov
shr
adc
adc
push
mov
mov
inc
pop
subl
std
jo
push
enter
push
lock
mov
fisubrs
pop
or
mov
and
dec
cli
or
lods
mov
jbe
lahf
xchg
mov
and
rcr
lds
pop
fidivrl
repnz
fildll
xchg
or
popf
xor
cmp
ljmp
dec
iret
pop
int
cmpb
cmp
pop
pop
out
daa
cmpsl
add
cwtl
push
gs
or
mov
jecxz
pop
mov
das
mov
cmp
mov
push
insl
or
mov
pop
mov
inc
dec
movl
add
pop
xchg
jecxz
push
jecxz
sbb
call
xor
lods
stos
or
xlat
cmpsb
sub
negl
pop
pop
push
xchg
adc
mov
adc
push
enter
xchg
movsl
inc
rclb
out
xchg
loopne
xchg
inc
outsb
mov
jmp
push
jecxz
in
fs
xchg
sbb
cli
push
ja
sub
shlb
sub
loope
scas
mov
pop
xor
hlt
aad
out
mov
jns
pop
dec
mov
addb
adc
and
mov
add
push
add
lods
aad
mov
cmp
push
scas
mov
out
xchg
andb
popa
sbb
mov
jge
fwait
pop
cltd
inc
aas
cmpsl
popf
jmp
cmp
js
sti
stos
mov
jne
movd
jl
mov
inc
cld
and
push
mov
bound
xchg
sbb
inc
mov
inc
xor
pop
push
bound
push
xchg
adc
xrelease
fdiv
jl
movsb
js
repnz
jmp
fisubrs
sbb
pushf
out
lock
lds
push
les
sub
inc
and
fstp
mov
cli
pop
stos
xlat
dec
jecxz
sbb
and
pop
je
push
ja
loop
sub
adc
mov
push
sbb
dec
rorl
dec
jl
mov
call
shrd
push
fldl
and
and
cli
int3
dec
repz
mov
lret
aad
lahf
add
jg
addr16
push
sub
repnz
inc
insb
cmp
dec
cmp
stc
test
mov
pushf
aas
dec
shll
arpl
inc
jae
and
in
inc
fiaddl
xor
loope
adc
dec
shlb
fsubrl
out
push
ja
adc
jae
std
vpgatherqd
repnz
add
call
mov
sub
mov
and
cmpsl
insb
xlat
add
orb
lods
inc
shlb
sub
jmp
jo
dec
and
stc
in
jle
xor
mov
xchg
mov
sub
jb
aam
xchg
in
mov
je
roll
push
inc
xor
push
xor
add
mov
jp
jnp
jns
pop
cmp
fnstenv
leave
cmpsl
lahf
xchg
adc
jne
test
mov
mov
lahf
and
cmp
arpl
js
or
fsubp
inc
pop
add
jg
fdivrl
nop
fucomp
int
out
insb
in
addr16
dec
sub
inc
insb
or
jmp
xchg
fwait
mov
push
and
sbb
xlat
sarb
pusha
lea
or
into
lods
outsb
cltd
fdivrs
fwait
push
mov
stos
cmp
cmp
mov
adc
lods
pop
aam
das
jmp
jae
lock
xchg
jnp
int3
pop
adc
call
xchg
gs
lret
sbb
sub
add
icebp
shrb
movb
jae
cmpsl
push
jnp
lds
clc
push
cmp
mov
fldl
xor
lock
popa
shll
sti
xor
fs
out
mov
mov
in
jbe
out
sub
jnp
aas
lods
in
es
lock
arpl
add
iret
dec
mov
and
mov
xor
clc
push
repnz
sti
jg
rcrl
push
push
js
aas
rcrb
sysret
jne
sarl
dec
iret
sub
mov
pop
or
ret
clc
lret
inc
and
lock
push
int3
mov
pop
sub
shlb
or
aaa
negb
inc
or
cmp
xchg
out
adc
sub
mov
mov
dec
jmp
jecxz
jge
pop
mov
sbb
and
insb
popl
jnp
cmp
popf
add
dec
lds
mov
js
enter
jecxz
jne
rcr
and
fxch
cmp
sahf
mov
in
loope
insb
inc
or
lahf
dec
or
leave
mov
jle
call
mov
loopne
int3
cmp
cwtl
js
cmp
je
fs
lods
movntps
gs
fwait
and
mov
inc
popa
push
xor
in
xor
outsl
add
ret
stos
out
clc
xchg
mov
cmpl
loopne
fistpl
push
out
mov
fs
sbb
arpl
inc
dec
adc
iret
sahf
mov
mov
out
insb
jb
test
notb
add
sub
nop
sub
faddp
xchg
sbb
push
repnz
loopne
xor
inc
je
mov
movsb
aaa
fists
sbb
push
pusha
leave
lea
aad
cmp
pop
cmp
lcall
mov
movl
cmp
loope
and
and
cmc
push
test
jne
fdivrs
xchg
xor
sub
adc
fwait
jo
sub
lods
push
add
xchg
mulb
ds
loop
test
ljmp
cld
sbb
daa
lods
mov
inc
jae
fbstp
jl
sub
pop
stos
test
lret
fbstp
mov
aas
std
pop
paddd
sbb
shll
add
add
dec
push
xchg
sub
adc
adc
or
jo
jbe
rorb
dec
leave
pop
fwait
idivb
fucomi
ror
icebp
imul
sub
jge
inc
fildl
push
cmp
pop
outsl
mov
in
gs
lret
mov
testb
cmp
mov
dec
xor
jg
add
imul
or
jo
mov
pop
push
in
mov
xchg
imul
sbb
movsl
pop
int
mov
dec
and
fidivrl
std
enter
mov
mov
xor
pushf
and
stos
mov
mov
stos
jb
mov
js
cmp
outsb
sub
sbb
cmp
divb
or
rcr
std
int3
fidivl
add
cmp
adc
push
dec
cmp
push
pop
sbb
pop
mov
ja
lret
add
push
cs
mov
lret
test
dec
out
adc
mov
push
mov
xchg
mov
cld
notl
dec
adcl
add
outsb
outsl
and
sbb
pop
outsb
ret
sub
jge
pop
cltd
jecxz
aas
bound
mov
scas
testb
jmp
test
jmp
jne
mov
ror
or
pop
test
jecxz
cmpsl
inc
pop
call
loop
cmc
adc
jp
dec
iret
jno
bnd
push
jmp
fs
cmpsl
call
loope
add
adc
add
xor
test
sub
fdivp
or
mov
dec
pop
xchg
sub
dec
loope
loop
notl
js
addr16
call
outsl
inc
mov
ds
jmp
jae
mov
xor
cmc
push
call
inc
cs
in
push
dec
lock
add
pop
fwait
aam
cmp
push
std
cmpsb
scas
cmp
fwait
push
cld
pop
adc
and
xlat
das
lds
subl
mov
addb
xlat
ss
xor
cmpsl
insb
iret
push
sub
pop
fadd
lret
jmp
sub
add
dec
lcall
adc
push
jl
lahf
xchg
out
jl
cwtl
aad
push
test
repz
pop
out
mov
mov
cmp
inc
out
inc
jnp,pt
fsts
ret
inc
loop
icebp
cld
push
lock
adc
cmpsb
and
in
pinsrw
rolb
xchg
icebp
xchg
adc
daa
dec
mov
mov
add
aad
pop
xchg
mov
push
jo
jns
pop
inc
fmul
fstps
mov
xor
outsb
sahf
adc
jne
jae
mov
push
inc
cmp
mov
sbb
xchg
jp
sub
stos
cmp
out
mov
cltd
add
push
inc
mov
cmp
notl
dec
jle
sub
test
andb
orl
in
push
and
jge
and
shrb
pop
ljmp
pusha
lock
jg
sub
adc
adc
es
fwait
insl
cmp
mov
dec
outsl
arpl
inc
lea
das
jg
adc
aaa
outsb
divl
js
outsl
xor
jne
jae
push
call
mov
int
or
mov
mov
in
mov
push
inc
cmp
or
mov
imul
xchg
mov
bound
sub
dec
jge
stc
cmp
jecxz
jge
cmp
dec
adc
cmpsb
mov
xchg
and
iret
das
stos
clc
fadds
arpl
rolb
test
pop
dec
jecxz
inc
je
or
sub
adc
ret
mov
mov
sbb
bound
rcl
mov
pop
pushf
out
fdecstp
sub
dec
fcoms
push
hlt
xchg
and
xchg
movsl
fwait
pop
je
jno
neg
in
jecxz
cltd
jle
pop
mov
stos
sub
lret
cmp
lcall
jle
jns
stos
cmp
out
xor
cmp
mov
icebp
pop
adc
fdivs
jno
out
inc
cli
adc
push
pop
mov
mov
sahf
aas
dec
sbb
mov
adc
lret
xchg
cmp
fbld
sbb
addl
pop
fs
call
sub
sub
leave
push
popf
loope
into
add
in
nop
lods
jb
xchg
call
sub
dec
and
inc
inc
dec
push
and
push
add
pop
pop
pop
andb
rcrl
or
pop
lods
dec
mov
or
jo
dec
and
jge
int
jnp
sub
into
cwtl
add
loopne
or
sbb
lock
sbb
faddl
lret
mov
mov
push
test
mov
push
dec
mov
out
das
in
or
idivb
dec
in
fistpll
and
ss
aas
icebp
pop
ret
inc
stos
fildll
pop
out
jl
xchg
sub
cmpsb
xchg
pop
lock
mov
shr
dec
sbb
sahf
add
bound
push
adc
mov
in
out
outsl
jp
popa
rol
call
xchg
xchg
notl
mov
push
sub
xchg
je
jo
ret
jle
cmpl
repnz
into
mov
mov
mov
xor
loope
cs
mov
icebp
mov
out
cmpsl
aaa
jmp
sbb
insl
push
sti
aas
or
test
cwtl
pop
gs
mov
nop
in
jmp
pop
les
cltd
bound
gs
dec
ret
and
jnp
mov
xor
xor
js
mov
adc
flds
xor
popa
popa
mov
cmp
mov
xchg
aaa
mov
add
in
sbb
imul
aaa
add
push
cli
stc
mov
and
sbb
stos
mov
into
sbb
pop
pop
stc
test
stc
push
loop
sbb
sub
cltd
dec
mov
mov
add
sub
push
push
cmpsb
lods
imul
pop
adc
pop
insb
loop
pop
mov
add
push
shl
daa
repz
enter
cmp
add
adc
adc
lds
jns
data16
sub
sti
push
mov
js
shlb
mov
dec
xchg
mov
push
xor
jne
fldenv
bound
es
fisubs
pusha
cs
movsl
cmc
pusha
dec
scas
sub
mov
jno
and
pusha
movsb
inc
insl
sbb
loope
push
jnp
daa
and
push
bound
xor
cmpl
push
or
repz
adcb
loop
popa
jmp
lret
cs
dec
scas
sahf
sub
dec
mov
outsl
cwtl
add
cmpb
xlat
ljmp
daa
das
push
sub
xchg
and
inc
vfmaddsub132pd
es
adc
mov
sub
push
cmpsl
aas
out
in
insl
sub
aad
cmp
jno
sarb
rorl
inc
insl
jno
sahf
and
stos
std
sbb
test
mov
int3
push
out
shll
lea
fimull
jl
xchg
mov
xor
or
mov
call
mov
adc
adc
cmp
jmp
jbe
xchg
repnz
call
mov
rcrb
ret
mov
ljmp
push
lea
in
fstpt
stc
test
ror
xchg
inc
sub
jne
fsts
push
in
mov
nop
mov
outsb
sti
scas
sbb
push
mov
jg
fwait
arpl
mov
enter
mov
push
mov
and
lret
lods
xor
bound
das
popf
arpl
out
insl
pop
jecxz
jge
out
pop
xor
out
in
sbb
pop
fidivs
lret
insl
inc
dec
fdivrl
inc
jg
aad
jge
scas
mov
sahf
inc
inc
or
fildll
shlb
mov
xchg
push
push
add
leave
shlb
add
jne
mov
loop
cmp
mov
sub
out
xorb
shrl
adc
jnp
cmp
pop
mov
jnp
aam
dec
mov
cmc
add
fcomps
aad
stc
sbb
push
test
addr16
add
repz
dec
mov
xchg
sbb
rolb
in
leave
add
stos
xchg
icebp
add
push
xchg
sbb
pop
pop
in
arpl
imul
dec
sbb
iret
rorl
js
xchg
mov
mov
jbe
or
add
pushf
int
pop
imul
aas
adc
mov
jbe
ja
ret
push
add
sbb
mov
jecxz
call
fmull
orb
cltd
ret
sub
mov
fldl
add
mov
lods
or
or
adc
mov
cmc
jno
jnp
insb
ffreep
fldt
or
push
into
fsin
push
into
xlat
test
push
outsl
xchg
push
add
scas
ret
int
fwait
xor
test
fsubl
fmull
push
fnstcw
scas
xlat
adc
insb
mov
mov
push
mov
xor
adc
icebp
int
aaa
sbbl
jno
xor
test
cmpsb
push
pop
cmovns
or
mov
outsl
ficoml
mov
aas
mov
imul
xchg
xor
mov
push
xchg
das
pop
push
lcall
push
pushf
xchg
xlat
jg
sub
xchg
mov
push
cmp
jge
push
sub
imul
out
nop
test
push
mov
adc
pop
inc
sub
push
dec
fbld
pop
jo
gs
sar
add
push
pop
xchg
mov
xor
dec
cmp
sub
pop
mov
adc
ja
lods
lret
int3
cmp
sti
fdivrp
test
packuswb
movsb
loopne
or
bndldx
push
add
pop
fnsave
fadd
out
ljmp
pop
pushf
mov
pop
cmpsb
xor
roll
push
sti
xor
fisubs
sub
lcall
mov
hlt
add
dec
mov
jl
clc
cmp
scas
clc
push
adc
out
xor
in
xchg
lods
dec
iret
nop
sub
nop
add
inc
or
mov
jne
adc
push
popa
jnp
loop
jle
sub
lock
dec
rorb
ljmp
sub
pop
jae
mov
lret
sub
arpl
aaa
cmp
push
push
shrl
jo
enter
mov
jmp
sbb
mov
cwtl
mov
xchg
or
fisubrs
les
mov
push
pop
add
stc
in
sbb
fsincos
push
mov
jae
sub
scas
bound
cli
add
icebp
sbb
fdivrl
sub
repnz
ret
sub
loopne,pn
xlat
cwtl
jp
sbb
mov
gs
jp
outsl
inc
lahf
or
push
out
mov
jbe
pop
adc
ja
fcmovbe
daa
fdiv
stc
mov
push
aas
xor
and
lods
inc
mov
int3
inc
adc
ret
xor
xchg
pop
xchg
inc
aaa
jbe
cmpb
xor
insl
jne
outsb
in
add
sub
sbb
and
popf
mov
data16
sbb
fucom
jae
lea
mov
mov
ljmp
xchg
shl
pop
call
xchg
mov
xchg
gs
stc
mov
push
jmp
sub
aam
lret
xchg
stos
pop
push
rep
inc
lods
scas
or
aad
add
ds
leave
int
dec
push
fsubrp
fisubl
stc
xor
inc
inc
mov
add
pop
jle
xor
loopne
inc
add
mov
lea
fnstenv
mov
jae
xchg
scas
das
test
xchg
inc
mov
lods
xor
stos
xchg
in
sub
out
sbb
mov
into
dec
mov
sub
mov
push
fucom
addr16
shrb
stc
jnp
adc
jne
sarl
xor
mov
jg
cli
push
popa
mov
popf
dec
clc
ss
aas
jno
icebp
push
push
mov
push
pop
int3
popf
pushf
fisubrs
sbb
adc
es
nop
adc
mov
movb
mov
aam
loop
mov
rcll
pop
subl
lods
sub
add
mov
cmpsl
loope
mov
or
out
fdivp
fistl
in
push
lods
push
cmc
jle
and
cmpsb
mov
lods
sahf
insl
out
stc
mov
xor
lds
insb
ljmp
lods
pushf
or
jne
sbb
rcrb
adc
and
mov
and
aad
pop
or
mov
ljmp
sbb
test
fsubl
mov
cmc
pop
dec
fldcw
push
dec
insl
iret
sbb
popa
jp
mov
and
adc
enter
lods
sahf
sahf
inc
clc
imul
push
inc
pop
adcb
leave
push
xorl
fstpt
push
sub
cld
mov
pusha
sub
shlb
fwait
xchg
pop
cmp
sbb
cmpsb
mov
fadds
in
lods
push
bound
pop
xchg
in
xor
testb
test
sahf
in
call
ss
mov
inc
inc
jmp
sub
fwait
push
call
mov
nop
sahf
pusha
xchg
cmp
mov
inc
popa
shlb
xor
lret
lods
cmp
mov
sbb
mov
push
aaa
mov
cs
fs
test
movsb
insb
inc
push
mov
jae
fcoml
pop
imul
popf
hlt
inc
pop
pop
push
test
imul
push
movsl
or
lret
mov
es
mov
xor
sbb
inc
inc
inc
push
adc
je
jns
fsubrl
mov
lods
jl
ds
cmp
popf
mov
fsubr
sbb
dec
sbb
ret
dec
dec
mov
inc
movsb
out
push
jge
sub
movsb
mov
xchg
test
jo
adcb
loope
out
adc
sbb
icebp
lahf
adc
mov
sbb
cmpsl
mulb
je
cld
xchg
test
cli
pop
pop
shll
or
mov
lea
idiv
shrl
mov
into
sub
dec
dec
mov
das
outsl
xchg
aaa
clc
mov
decl
notl
or
mov
popf
ror
push
or
sbb
mov
xchg
movsl
test
jg
sub
jb
popf
mov
ror
dec
and
sub
mov
xchg
rorb
pop
es
test
rclb
test
adc
out
adc
add
cmp
leave
xor
xchg
xlat
inc
nopl
ljmp
clc
push
in
dec
cwtl
jle
pushf
inc
sub
int3
fs
ds
mov
push
std
mov
sahf
std
mov
sub
ss
mov
mov
filds
xor
aam
cmp
jae
test
add
xlat
lds
push
dec
loope
fxch
xchg
adc
push
loop
mov
or
sti
ret
popa
pop
cs
xchg
push
push
ds
lods
loopne
cmp
dec
inc
mov
mov
in
dec
add
addl
or
insb
push
sbb
dec
mov
adcb
in
cli
aad
shrb
or
rcrb
mov
int3
mov
lret
add
sti
push
in
push
push
ror
es
fldl
xor
jo
call
pop
cmc
adc
cmpsb
imul
stos
in
xchg
aas
in
xchg
and
cmc
xor
xchg
cmc
or
inc
xchg
outsb
arpl
mov
out
jns
aam
rorb
or
aaa
inc
inc
pop
xchg
jnp
or
mov
push
movsb
dec
stos
test
mov
push
lea
shrb
aaa
mov
dec
dec
bound
insl
nop
scas
fcoml
jae
inc
pop
test
dec
ret
cmp
notl
inc
pop
lods
push
out
lods
cmp
mov
pop
inc
roll
add
pop
mov
inc
xlat
mov
lods
dec
fimull
jl
outsb
jle
jmp
mov
dec
dec
int3
test
push
lret
mov
shlb
mov
mov
clc
or
std
insl
push
push
or
out
xchg
roll
repz
inc
add
icebp
shll
es
adc
cli
cld
mov
fcmovu
mov
pop
pop
mov
add
xor
pop
aaa
jno
or
dec
je
push
cld
cmp
jmp
in
movsb
inc
add
sbb
sbb
lods
out
rcrl
insl
sbb
imul
sub
daa
scas
pushf
scas
insl
fdivrl
icebp
lock
ja
jp
ficoms
pushf
ljmp
push
aam
daa
cli
mov
lret
jmp
or
xchg
cmpsb
mov
xor
stos
arpl
push
insb
push
lods
and
sbb
divl
lock
inc
fldt
inc
mov
sbb
fistpl
cs
aaa
xchg
mov
dec
popa
test
inc
and
jecxz
mov
repnz
jae
xor
jecxz
mov
adc
test
cwtl
jns
mov
mov
mov
fldenv
shl
movsl
push
sub
jo
add
or
mov
scas
cmp
xor
out
xlat
daa
test
adcl
ficomps
pop
lea
sti
mov
or
cmp
xchg
loope
test
push
adc
daa
adc
jne
loope
int
sbbl
mov
push
inc
cld
push
fnstcw
push
xchg
psraw
adc
insb
adc
inc
scas
pop
loopne
movsb
dec
jl
jns
fwait
push
pop
fcoml
dec
ss
mov
pop
into
insb
mov
and
mov
add
scas
jne
das
add
addl
icebp
data16
and
jbe
loopne
out
out
dec
jge
into
test
pop
sbb
push
ljmp
and
lret
xor
add
xor
xchg
xor
rolb
movsl
jbe
stos
add
mov
push
add
and
jecxz
lret
mov
test
lods
sbb
out
fdiv
cmpsb
jne
and
push
sub
fdivp
sub
rcrb
or
sub
mov
dec
sbb
pop
cmp
lock
jne
xor
cmp
inc
lcall
jno
mov
out
or
out
adc
loopne
sti
sub
jl
xor
test
dec
das
sub
adc
insb
fidivrs
adc
push
sub
add
out
pop
mov
movsb
inc
idivl
push
jae
xor
addr16
leave
and
fisttpll
insb
call
loope
rcrl
and
xchg
fisttpl
pop
ret
inc
inc
notb
ret
cmpsb
outsb
mov
cmp
mov
ss
mov
aam
sarl
inc
sub
and
test
xchg
aaa
sub
mov
sbb
mov
cmpsl
mov
ret
sub
in
dec
enter
adc
mov
mov
or
ljmp
mov
push
adc
adc
insl
lods
xor
test
fwait
mov
leave
xorb
out
cmc
movsl
add
cmp
pushf
andb
mov
js
fidivl
dec
inc
sahf
jmp
mov
mov
mov
and
xor
mov
add
jns
lea
cmpsb
mov
mov
shrb
and
cmp
gs
aaa
adc
mov
jbe
lock
adcl
add
int
add
test
xchg
loope
mov
outsb
stos
dec
mov
sub
xchg
pop
and
and
iret
dec
ds
inc
inc
mov
aas
addr16
mov
pop
nop
test
or
ret
pop
fcmovnb
pop
sbb
adc
mov
jnp
push
shr
daa
jg
test
cmp
adc
lret
xchg
fcmovne
mov
stos
in
add
ljmp
push
dec
xchg
mov
push
into
shll
pop
mov
cmp
inc
jge
cld
mov
loope
cmp
imul
popf
cmc
mov
mov
out
div
xchg
lret
fsubrl
dec
in
mov
hlt
imul
fldt
cmpsl
fstl
imul
incb
or
mov
xchg
scas
popf
aas
and
fwait
or
push
jno
jge
dec
mov
pop
jno
pop
arpl
push
xchg
push
mov
pop
mov
xor
icebp
insl
movsl
mov
push
es
jp
pop
mov
mov
lock
cli
mov
push
push
pop
pop
add
sbb
leave
test
jno
xor
and
add
lock
inc
clc
fbstp
pop
js
mov
arpl
das
testb
rcrb
insl
in
jno
dec
jbe
loopne
push
enter
pop
data16
fidivs
mov
pop
push
xor
inc
jmp
push
pop
lds
mov
ret
sbb
sbb
jo
notb
mov
push
xlat
mov
stc
hlt
xor
mov
cmp
out
jmp
nop
aam
lock
in
dec
pop
dec
adc
ret
inc
adc
fs
pop
xchg
insl
pop
inc
and
push
add
rcrb
shl
sbb
mov
pop
xchg
mov
xchg
ret
push
pop
mov
push
pop
js
mov
test
icebp
xor
sub
cli
pushl
in
sbb
shrb
js
mov
sbb
dec
shlb
data16
jl
rorb
pusha
and
sbbb
movl
or
into
inc
adc
nop
jmp
mov
leave
insl
jnp
inc
mov
cltd
packuswb
rcr
popf
sbb
icebp
pusha
shld
adc
xchg
sub
leave
or
incl
jnp
sub
test
adc
stos
sti
mov
push
loope
push
xchg
sti
imulb
pusha
mov
scas
test
xor
mov
das
pop
xor
jg
rcrl
pop
jmp
ss
push
lea
jmp
xor
dec
cmp
cwtl
xor
add
push
das
add
dec
lock
mov
mov
sub
stc
icebp
pop
decb
stos
loopne
ss
cmc
sub
pop
roll
mov
xlat
shlb
cld
out
test
jb
movsl
fcmovnu
mov
pop
xchg
leave
fwait
icebp
push
mov
into
cmpb
xor
fnstenv
popa
mov
sbb
jnp
xlat
cwtl
mov
cltd
mov
cld
adc
cmpsl
mov
jecxz
bound
js
in
pop
mov
jns
stos
push
aaa
in
mov
xor
xchg
sub
enter
pop
lret
lret
xor
push
ja
mov
imul
clc
push
xchg
jg
jo
pop
mov
mov
bound
sub
push
add
ja
fs
es
ret
pop
sbb
daa
insl
mov
repz
adc
xor
cmp
and
bound
mov
lods
push
add
daa
jo
out
pop
fdivrs
imul
aad
or
xchg
inc
ficoms
dec
ret
xor
stos
push
sarl
jne
lods
mov
arpl
mov
imul
jae
push
jno
ss
or
mov
ret
push
push
cli
or
mov
repz
mov
rorb
lahf
pop
mov
out
xor
imul
gs
sar
mov
cltd
pop
clc
lods
popf
ror
push
mov
mov
stc
out
and
adc
sub
push
jbe
int
orb
sarl
mov
out
sar
aad
inc
repnz
test
int3
xchg
fidivl
cmp
cmc
lcall
leave
cmpsb
stos
add
fwait
mov
mov
cltd
add
fcmovbe
xchg
push
mov
loopne
mov
push
add
jp
jle
dec
and
and
stos
jecxz
adc
jge
iret
ss
push
repnz
mov
xchg
jb
fwait
xlat
es
es
loopne
add
inc
sahf
pop
sub
scas
push
add
inc
adc
sbb
dec
sti
dec
dec
testl
and
test
xor
add
mov
test
pop
mov
scas
addr16
imull
mov
or
push
ret
lcall
movsl
sbb
sbb
jne
cmp
subl
int3
adc
mov
lock
fucomip
cmp
jo
xor
ret
inc
mov
cli
test
das
xor
rolb
mov
cmp
imul
mov
lds
test
or
mov
adc
and
mov
sbb
xchg
lret
mov
mov
inc
stc
bound
enter
jns
ror
addr16
inc
gs
xchg
iret
pop
in
insb
lcall
cmp
incl
lock
fbld
push
rclb
jge
fistpll
dec
pusha
ds
or
inc
stos
std
addr16
pop
push
fsubrs
jmp
mov
jno
out
out
cmp
stc
xchg
mov
mov
or
mov
das
xchg
xor
push
shl
add
je
xor
inc
mov
xor
lahf
or
shr
int3
mov
mov
leave
out
sub
pushf
mov
or
loop
and
test
jge
pop
sbb
xor
sub
gs
pop
in
movb
clc
lret
out
xchg
cmp
mov
call
testl
subb
adc
outsl
mov
push
imul
int3
lret
sti
loope
in
sbb
add
lods
mov
enter
repz
scas
mov
idiv
pop
popf
inc
push
shl
test
push
pop
jg
pop
and
ds
enter
fistps
xchg
pop
or
cmpsb
cld
popf
cmp
push
in
push
jo
mov
dec
xor
mov
push
out
inc
fcomi
jle
loop
inc
and
xchg
cmp
sbb
inc
mov
sbb
sbb
xchg
stos
and
jmp
std
jo
stc
mov
pop
pusha
push
lods
fmull
std
lahf
add
sbb
popf
std
adc
push
adc
jb
sti
jne
in
mov
dec
fwait
or
jp
xchg
cmp
mov
ret
jnp
out
add
xchg
outsl
lock
or
fwait
stos
adc
xor
cmp
sub
jo
ja
insb
dec
sbbl
in
repz
inc
subl
scas
xchg
std
adc
mov
imul
es
and
mov
movsl
pushf
mov
mov
lret
fwait
bound
pop
imul
pop
mov
mov
fcmovne
mov
jb
xor
int
or
lahf
pop
dec
gs
jecxz
push
sbb
or
test
xor
push
stos
mov
add
jnp
mov
popa
mov
sub
add
bound
cli
cmc
out
jg
mov
pop
push
daa
in
scas
push
fwait
notb
push
push
pop
clc
jl
dec
mov
xorl
sub
outsb
mov
test
or
mov
push
xor
mov
sub
xor
in
adc
nop
das
sbb
jbe
ljmp
das
leave
dec
cmp
fs
push
jl
fxam
dec
xchg
pop
ljmp
mov
pop
out
sahf
xchg
mov
ret
push
insb
sbbb
out
mov
cmp
sbb
mov
adc
push
lret
xchg
shll
xor
add
mov
repz
lds
leave
in
sub
int
loope
shlb
in
xor
sub
popf
jg
lcall
dec
stos
lcall
inc
dec
push
fwait
xor
mov
dec
jg
pop
fildll
mov
xlat
lea
fs
mov
fisttps
fmuls
aad
inc
jb
mov
cmp
xchg
xor
scas
test
ficompl
jae
push
sub
div
je
sub
out
loopne
loope
neg
xchg
stos
mov
pop
dec
add
pusha
mov
hlt
aam
ja
shrl
enter
push
cltd
loop
push
jns
sbb
inc
fistpll
pusha
subb
ljmp
inc
push
add
inc
inc
icebp
nop
ja
inc
cmc
xchg
fstl
popf
ljmp
pop
mov
adc
bound
fstp
cld
xor
cmpsl
fxch
jo
push
adc
xor
out
cmp
ss
lea
mov
mov
pop
test
mov
scas
clc
aaa
cmp
xorl
sub
push
cmp
push
rclb
fisttpl
pop
pop
pop
or
into
adc
fdivrs
or
out
pop
mov
jbe
mov
pop
dec
add
enter
aad
pop
inc
dec
nop
fs
test
shrl
sbb
ljmp
repz
inc
jns
or
stos
sbb
mov
xchg
les
mov
stc
mov
mov
or
lret
fdivrl
inc
cli
retw
adc
fdivs
popf
fs
xorl
mov
int
push
pop
lret
and
imul
cltd
or
call
cmp
insb
xchg
and
xchg
xchg
enter
mov
imul
ret
movsl
repnz
adc
jae
out
clc
into
ret
gs
or
outsb
inc
sub
mov
xchg
mov
xchg
xchg
outsb
push
mov
jb
xchg
orl
movsl
xor
lret
cli
sbb
in
jae
sbb
ljmp
je
pop
adc
inc
sub
or
fists
shlb
adc
cmp
sbb
push
loope
pop
aaa
stos
repnz
inc
enter
je
pop
add
dec
test
jnp
test
loop
outsb
sub
sbb
cmpsl
pop
std
insb
xchg
es
out
and
cltd
aam
jmp
and
ret
push
lret
popf
and
notb
ret
mov
xor
mov
push
and
pushf
lahf
popf
lret
sub
sahf
and
stos
repz
jnp
ret
and
int3
mov
out
pop
cmpsb
push
xor
insl
cltd
jg
inc
jecxz
xchg
clc
xchg
stc
aad
jo
jne
mov
ret
xor
push
les
pop
div
dec
shlb
popa
add
jl
mov
mov
add
sar
pusha
aam
cmp
pop
cmc
xor
jo
cld
popa
in
ja
jg
pop
dec
leave
mov
shlb
addr16
push
jbe
cmp
mov
aad
pop
mov
jbe
pop
loop
hlt
add
in
xchg
pop
lret
nop
imul
xor
adc
adc
push
test
sti
loop
sbb
mov
mov
int3
jg
ret
loopne
pop
xchg
or
loopne
and
pop
leave
imul
inc
adc
lahf
popf
sbb
out
aaa
xchg
loopne
pushf
imul
xor
sub
popa
mov
test
xchg
movsl
scas
arpl
gs
lret
push
add
cwtl
sub
fldl
push
jae
cmp
lods
nop
repnz
repnz
outsb
sub
mov
dec
adc
out
outsb
and
adcl
xor
xchg
push
jae
pop
lock
negl
loope
xchg
inc
sbb
add
loope
lcall
ret
pop
jo
xchg
xchg
push
iret
add
testl
or
jbe
jo
lods
scas
mov
in
lea
pop
insl
sbb
dec
push
mov
pop
out
ret
sub
xchg
sub
add
mov
adc
orb
in
call
mov
mov
adc
xchg
sahf
leave
mul
pop
inc
imul
mov
in
cmp
push
cmpsb
out
sub
cmp
arpl
out
enter
pop
push
iret
mov
sbb
repnz
das
sbb
xor
mull
pop
pushf
mov
inc
add
mov
addr16
in
ffree
orb
addb
lods
jns
jns
mov
mov
cmp
pop
stos
jae
sbb
test
jle
stos
xor
push
pop
push
mov
pop
cmpsl
lret
and
pop
dec
fidivrs
lds
cmp
adc
or
ds
lods
enter
and
push
add
stc
rcrl
roll
andb
sub
rcl
cld
std
daa
xchg
push
push
or
aas
sahf
bnd
pop
ret
jb
xchg
outsl
mov
test
nop
push
xor
insb
sbb
inc
mov
mov
and
or
insb
addb
ss
movsl
xor
bound
in
mov
mov
xchg
cwtl
push
xchg
cmp
adc
xlat
loopne
and
mov
push
mov
and
aam
push
xchg
pop
or
out
pop
sub
dec
ds
sbb
lods
mov
xchg
xchg
mov
mov
push
je
punpckldq
insl
add
clc
js
lret
sub
jge
dec
out
xchg
sub
movsl
xlat
xchg
lret
pop
inc
mov
sahf
adc
rcrl
loop
pop
add
aaa
and
or
xor
jle
test
push
dec
sub
iret
pop
test
push
push
outsb
cltd
in
lock
fs
div
mov
mov
sbb
cli
mov
xchg
dec
sub
jge
pop
mov
movsl
sub
dec
sub
andb
inc
or
or
les
ficompl
jae
out
clc
ret
loop
out
aas
rcr
jmp
xchg
sbb
dec
jge
out
ss
mov
push
xchg
mov
jmp
movl
test
push
pushf
out
das
js
and
imul
scas
repnz
xchg
fistpll
cmp
movsb
out
xlat
ret
jnp
jnp
sbb
sbb
mov
outsl
loopne
sbb
mov
pop
xchg
cmp
sub
aam
mov
push
ficomps
bound
cmp
mov
arpl
ret
push
icebp
and
fwait
int3
pushf
pop
scas
xor
mov
cmp
xchg
pop
inc
ss
mov
jb
cld
xchg
xchg
ret
fs
shlb
cmp
inc
ret
cmp
ret
sbb
cmp
mov
pop
jecxz
push
mov
inc
or
es
jmp
aad
ret
ret
fidivrs
jl
xor
loope
mov
and
ja
in
push
cmp
push
std
stos
bound
add
pop
pushf
xchg
mov
push
mov
jb
jo
xor
jge
scas
movsl
jp
adc
icebp
xor
xchg
xlat
sub
mov
lcall
mov
imul
mov
lret
sarb
sub
push
pop
into
mov
decb
sbb
and
push
bnd
sbb
jae
fldl
mov
outsb
mov
aas
sbb
jns
mov
cs
jne
pop
sbb
jno
stos
xchg
jne
test
lahf
mov
and
bound
dec
fisttps
mov
sbb
and
sub
sbb
cmp
adc
add
mov
pop
in
lock
stc
nop
dec
nop
push
ss
xchg
test
lods
rol
pop
movsl
push
test
jl
and
pop
pop
sub
cmpsb
mov
aad
in
and
addb
inc
shll
cmp
add
xor
sar
sub
roll
cmp
and
cmpsl
inc
dec
test
add
sti
aaa
xchg
out
mov
mov
add
div
jo
mov
adcl
das
adc
pop
dec
imul
add
out
pop
pop
ret
rcr
fiadds
xor
daa
bnd
dec
jle
or
shlb
jg
xchg
adc
xor
lret
adc
lahf
rcll
negb
or
mov
xor
pop
in
cmp
or
leave
pop
xchg
and
cmp
mov
popf
xchg
in
out
cmp
shll
cwtl
inc
and
or
inc
mov
jns
xchg
call
adc
ja
popf
xor
test
mov
daa
int
jmp
ja
jmp
sbbb
int3
fs
aam
xor
pop
cmp
push
cmpsl
pop
lahf
outsb
outsl
or
mov
and
outsb
cmp
mov
pop
mov
in
iret
dec
cmpsb
jmp
jns
jge
nop
jp
ds
xor
add
lea
xor
pop
push
shrb
mov
movsl
dec
movsb
adc
inc
test
cmp
imul
inc
jbe
movsb
sub
cmc
xlat
mov
int
xor
pop
xchg
dec
test
push
xchg
scas
sbb
addr16
out
mov
sub
pop
mov
insb
imul
jmp
rcrb
mov
lods
arpl
arpl
imul
and
mov
scas
jl
xor
arpl
and
xor
pop
mov
inc
cmpsb
jp
mov
jmp
das
insl
loopne
jns
icebp
xor
lock
mov
push
cs
scas
adc
mov
jno
mov
stos
fidivrl
mov
pop
add
mov
nop
and
test
inc
les
andb
dec
nop
xchg
cmp
lods
stc
call
movsl
movsl
lods
jbe
add
mov
fwait
hlt
xor
negb
jmp
xchg
testl
xorb
es
leave
fbstp
push
test
loopne
push
inc
test
fwait
mov
stos
sarb
or
inc
popa
inc
pop
stos
lret
ja
movsb
rcrb
daa
cld
jbe
xchg
inc
addr16
sbb
jb
test
push
pop
sub
fcomp
sbb
xchg
xchg
or
lea
add
jmp
das
add
out
bound
scas
inc
jge
and
insl
notb
dec
mov
jecxz
test
xchg
push
mov
mov
jg
sbb
xchg
movsl
movsl
sub
into
xchg
aad
ss
add
pop
or
mov
mov
pop
ja
xchg
ljmp
xchg
and
aas
out
dec
or
ja
mov
sub
inc
sbb
mov
gs
adc
dec
jp
adcl
add
data16
fsubrl
dec
sub
and
imul
into
adc
ds
mov
out
sbbl
add
in
xchg
daa
stc
and
stc
out
stc
dec
fistpll
inc
mov
xchg
jno
mov
add
cmp
fdivrl
push
lea
add
mov
int3
icebp
ja
pop
cmp
mov
jne
xchg
sbb
add
int
sbb
push
sub
pushf
mov
subl
pop
mov
push
or
cmp
push
jmp
push
inc
push
scas
stos
adc
adc
lds
or
mov
mov
jnp
jne
inc
imulb
push
xor
mov
cmc
int
pop
cmc
mov
repnz
push
pop
xchg
lcall
xchg
scas
clc
pop
mov
xlat
add
int
xlat
scas
iret
push
inc
js
mov
mov
sbb
testl
lods
add
jp
inc
cmp
stos
lahf
xchg
mov
mov
adc
jp
insb
add
fnstsw
inc
jecxz
push
pop
sub
into
in
xchg
mov
sub
in
lcall
lret
rcrb
cmp
xchg
loopne
add
ljmp
sbb
mov
call
add
ret
out
mov
imul
repnz
pop
mov
pop
movsl
fbld
push
pop
fucomi
scas
or
push
data16
pop
jp
dec
add
dec
mov
mov
out
mov
ret
mov
push
cmp
repnz
push
scas
pop
movsb
stos
call
jne
inc
mov
or
cltd
leave
and
lods
push
push
add
cwtl
xchg
jns
imul
xchg
mov
cli
test
xchg
addr16
jmp
adc
jne
dec
loopne
mov
ret
sub
addr16
pop
fcmovnb
pop
ja
pop
add
mov
bound
std
or
popf
jecxz
gs
jge
aas
scas
mov
sbb
fsub
cmp
jae
scas
or
mov
xor
mov
or
lods
jns
mov
dec
xor
daa
sub
shlb
and
mov
arpl
imul
dec
xor
pop
lods
rclb
push
mov
leave
repz
in
inc
out
mov
mov
test
pop
scas
filds
add
dec
int3
jp
inc
or
into
test
adc
jl
add
pop
mov
lret
cwtl
pop
pushf
pop
pusha
sub
in
push
cmpsb
pop
rcrl
in
bound
xchg
cli
daa
jns
and
or
xchg
test
negl
xchg
fsubl
ret
setl
ss
loop
sub
jnp
je
or
loopne
add
mov
fwait
test
je
xor
scas
cwtl
and
xor
pop
cli
mov
adc
out
pop
push
mov
and
mov
rorb
xchg
lds
shlb
dec
add
sbb
shll
lahf
out
testb
or
cmp
mov
inc
lret
jl
daa
jle
inc
xor
imul
jge
xor
sbb
add
mov
pop
sti
enter
adc
popf
cli
les
push
or
imul
mov
stos
out
fmuls
cmp
pop
test
popf
cmp
in
mov
test
aad
rorb
outsl
sub
mov
fsubrs
out
daa
jne
insb
xor
jno
lock
cltd
aam
outsb
jge
and
mov
pop
mov
cmp
sbb
sub
fsubrs
int3
dec
test
dec
or
popa
imul
test
jns
lods
push
fsubrs
and
lods
and
dec
push
dec
pop
inc
push
cmp
pop
cmp
inc
or
pushf
inc
jl
cmpsb
inc
dec
sub
jmp
cmc
cwtl
mov
mov
dec
push
xchg
movsl
or
cs
mov
jbe
mov
cltd
psubusb
insl
jg
rcll
xchg
mov
in
push
lods
out
test
xor
and
push
lret
mov
fsubs
lahf
js
jae
or
mov
adc
cmovp
jecxz
mov
outsl
cmp
dec
fsts
push
out
fnsave
loop
ja
daa
movsl
cltd
out
inc
jne
in
inc
mov
sub
das
add
fs
sahf
hlt
inc
daa
les
jno
test
fbld
sbbb
pshufw
jp
jbe
sbb
push
les
dec
xor
cmp
mov
jge
mov
or
push
mov
outsb
loopne
jmp
push
and
pop
lock
or
mov
dec
cltd
jmp
and
dec
ret
jns
jae
fistpll
ret
loop
int3
outsl
push
mov
push
cltd
sbb
imul
mov
int3
lea
mov
ss
xchg
pop
sbb
and
cmpsb
aas
mov
test
ss
inc
cwtl
xchg
add
xor
cmp
lods
pop
or
insl
mov
pop
add
cmp
push
pop
sub
lahf
xlat
fstps
mov
lret
and
jae
and
inc
mov
xchg
adc
or
into
or
cmpsb
mov
rcr
movnti
out
loopne
sub
lret
pusha
scas
adc
push
pop
jno
or
xchg
cltd
mov
fcomp
push
pop
arpl
mov
xor
sub
mov
lods
lds
imul
push
aam
mov
mov
popa
mov
out
xor
pushl
stos
mov
mov
imul
int
scas
mov
nop
dec
cmp
scas
fwait
bound
fisubs
cwtl
mov
enter
sarl
outsl
inc
inc
call
jae
arpl
inc
xor
jb
cmc
mov
iret
xchg
call
or
dec
call
ret
jo
stos
les
popa
dec
addb
mov
lods
pop
jp
pop
push
movsl
mov
insb
mov
xor
in
pusha
inc
insb
xchg
aaa
test
cltd
addr16
xchg
outsl
dec
mov
ds
aaa
mov
loopne
ds
mov
jne
stos
sub
test
xchg
add
or
cmp
ds
mov
xor
adc
and
in
cmp
jl
out
in
push
int
bound
imulb
clc
aas
add
imul
mov
dec
repnz
push
add
push
rcll
dec
mov
stos
das
mov
rorb
push
ret
lds
outsl
jl
in
or
clc
jbe
jnp
add
cmp
xor
popa
jg
jg
pop
aad
add
jae
rcll
jbe
popa
push
and
ret
subb
dec
push
out
jbe
xchg
push
sbb
outsl
pop
pop
fdivs
arpl
inc
or
out
ljmp
and
inc
xor
dec
test
lock
stc
ficoms
push
xchg
xchg
in
lret
inc
outsb
fidivrl
sarl
push
pop
lahf
mov
jp
arpl
sbbb
ret
push
mov
and
push
or
repz
cmp
mov
out
jns
arpl
int
jnp
inc
aas
dec
jo
jnp
or
sbb
mov
jnp
insl
jne
jns
adc
pop
scas
jmp
mov
sbb
iret
arpl
outsb
mov
arpl
xorl
add
jno
jb
adc
mov
push
xchg
movsl
imul
jl
cmpsl
mov
icebp
push
pop
lret
mov
sub
lret
pop
cld
xor
shll
dec
daa
jge
int
mov
in
sti
call
in
dec
cmpl
jp
ljmp
outsl
xor
and
push
mov
repz
sub
orl
icebp
adc
or
outsl
fmulp
icebp
scas
inc
xchg
movsl
cli
sub
hlt
dec
cmp
sub
jge
or
mov
push
bound
mov
arpl
inc
mov
pop
test
inc
xor
push
cmp
mov
orl
movups
aaa
lret
testb
pop
enter
sbb
add
pusha
pop
mov
inc
aas
mov
inc
pop
mov
sbb
int
stc
push
bound
sarl
test
or
jl
pop
xchg
js
fsubrs
movsb
sar
dec
sub
ficoml
push
adc
std
inc
fcompl
je
pop
sub
and
push
out
bound
int
and
jge
mov
push
addr16
loope
mov
or
pusha
pop
rcr
push
jg
jmp
or
xchg
es
into
cmp
shrw
int3
sub
arpl
test
cli
inc
loope
mov
testl
rol
enter
pop
jecxz
insl
mov
add
push
jg
int
xchg
push
pop
ret
cmpsb
ds
xor
mov
cs
call
in
addr16
scas
jo
xchg
or
push
dec
test
xor
mov
jecxz
jl
jecxz
scas
mov
push
add
mov
jns
adc
repz
movsb
pusha
insl
fs
or
enter
or
cmpsl
xchg
adc
in
cmp
mov
bound
pop
cltd
mov
jne
call
sub
sbb
movsl
sub
not
add
cmp
pop
in
std
in
inc
movsb
fistpll
das
test
inc
cmp
aas
push
mov
xchg
fsubrs
sbb
and
add
mov
jl
dec
xor
xor
popf
jbe
sarb
xor
cmp
cmc
lea
enter
cmpsb
orb
pop
jns
daa
in
andl
inc
lods
pop
and
leave
rcll
es
clc
jne
jo
cmpsl
test
mov
mov
sub
ds
sar
jno
lods
xor
xchg
mov
pop
fsub
jnp
adc
xchg
dec
cs
sbb
sub
rcl
push
mov
cli
xor
pop
adc
popa
into
jns
gs
xor
pop
mov
cmc
in
scas
inc
or
push
pop
sub
out
sub
ljmp
push
and
lods
cmp
xchg
das
ffree
shlb
cli
scas
adc
push
mov
cvttps2pi
dec
sub
in
in
sbb
sub
or
dec
int
dec
idivb
outsb
sub
stos
or
pop
jbe
dec
outsl
jle
add
jns
out
int
cmpsl
sub
add
dec
scas
aaa
sbb
push
cmp
rcll
in
cli
push
xor
or
cmp
and
ja
push
mov
push
pop
pop
rorl
inc
mov
insb
dec
icebp
push
cmpsl
ret
fiaddl
mov
mov
jno
fidivs
cmp
stc
mov
rcrb
adc
mov
push
inc
mov
leave
ja
pop
test
js
xor
aam
pop
and
pusha
arpl
and
push
lcall
fsin
cld
adc
cmp
sbb
in
xor
jae
leave
add
xor
shlb
mov
addl
mov
icebp
shll
pushf
sbb
je
in
sbb
add
fldl
pop
mov
mov
mov
push
push
cld
mov
dec
div
sti
add
cld
fmuls
mov
daa
jl
mov
test
xchg
adc
bound
enter
mov
aas
adc
pop
int
adc
stos
mov
sahf
mov
mov
les
es
mov
dec
xchg
xchg
daa
arpl
lahf
loop
jg
jb
bound
shrb
mov
mov
ss
sub
sbb
jl
mov
push
sar
mov
xor
mov
push
ds
in
cwtl
iret
lahf
push
outsl
loop
pop
adcb
push
sub
stos
insl
mov
ljmp
mov
divl
movsb
dec
xchg
inc
mov
ds
sahf
ljmp
sub
dec
and
mov
test
pop
repz
rcl
cmp
je
imulb
aad
jae
psubsw
hlt
in
adc
in
cli
mov
or
dec
jae
xor
add
pop
test
sbb
fcmovb
mov
andl
sahf
ret
push
rcrb
pop
sub
add
or
repz
mov
push
cwtl
out
mov
lret
mov
sbb
xor
stc
fsub
xchg
jnp
fdecstp
jge
mov
in
aam
dec
clc
fisubs
fdivr
and
les
mov
jmp
enter
adc
mov
sub
push
adc
mov
gs
hlt
dec
sub
mov
xchg
movsb
xchg
inc
lea
fwait
sbb
shll
aaa
xchg
repnz
or
in
cmp
mov
popf
sti
pop
icebp
xor
dec
hlt
imul
cmp
les
pop
xlat
data16
lahf
xchg
push
jb
mov
mov
dec
adc
mov
mov
sbb
push
rclb
or
xlat
lea
hlt
or
pop
aaa
inc
pop
xor
and
aad
sbb
rolb
xchg
xchg
cld
sub
add
xor
push
push
mov
cmp
lret
mov
cld
xchg
push
int
dec
mov
test
sbb
jle
xor
lds
push
pop
aam
dec
repz
jmp
fs
gs
push
mov
insl
rcrb
repnz
lods
aam
stos
adc
jno
dec
int
push
loop
mov
aad
pop
jne
shrb
aas
sbb
xor
loope
xor
das
int3
outsl
rcrl
adc
mov
popf
cmovbe
out
pop
outsl
data16
mov
mov
addl
arpl
sti
pusha
lock
jbe
dec
sti
mov
test
lahf
js
mov
lods
push
mov
pop
pop
addl
stos
jne
ds
shl
cmpsl
imul
mov
les
fcomps
jb
gs
pop
mov
pushf
leave
fxch
sbb
out
das
dec
adc
push
cmp
mov
rcll
bound
or
lcall
cwtl
out
jle
mov
adc
test
neg
and
or
imul
ljmp
stc
mov
mov
test
pusha
fiaddl
ficomps
or
sub
dec
loopne
or
add
scas
xchg
pop
sub
in
aam
out
mov
sti
xor
mov
sahf
dec
xchg
add
cmpsl
inc
ficompl
out
mull
lret
aas
xor
movd
sbb
jo
int
lret
test
sti
je
fs
xor
jg
cmp
push
mov
out
sbb
jl
xchg
ret
int3
xadd
sbb
xor
fiadds
outsb
enter
push
lods
rorl
in
adc
cmpsb
pop
or
sbb
in
mov
dec
cmpsb
and
inc
push
aaa
or
cmp
js
fcoml
adc
and
pushf
push
daa
fldcw
push
push
mov
mov
jmp
push
push
cld
jl
flds
xor
pop
out
int
or
or
push
in
mov
stos
sub
stc
xchg
mov
icebp
pushf
in
sar
sub
push
lret
inc
sbb
jno
pop
add
push
ljmp
xchg
xor
rcrb
mov
xor
daa
push
ret
mov
add
jg
sub
jnp
cmp
jle
and
fimull
add
in
mov
in
push
push
push
push
popf
repz
out
xchg
lods
cmp
mov
or
rorl
mov
stc
sbb
sub
mov
sub
into
mov
pushf
jns
cmc
lcall
and
dec
enter
sub
nop
pop
dec
mov
mov
stos
pushf
fcompl
aaa
std
test
outsl
pop
xlat
cmp
cmp
lret
testl
and
call
push
test
dec
push
insl
cs
mov
sub
mov
pop
or
loop
lret
adc
popf
test
dec
sbb
sbb
mov
jge
ljmp
pushf
xchg
clc
pop
sub
cld
dec
insl
jge
mov
push
jmp
xchg
sahf
pop
adc
gs
cmp
aas
cwtl
cmp
in
xlat
cmp
sub
fs
jle
test
aad
aaa
push
sbb
mov
imul
inc
in
icebp
sahf
rcrl
ljmp
xchg
sub
mov
xchg
stos
inc
sti
adc
pop
xor
dec
gs
insb
xor
data16
pop
jb
test
jle
fbstp
lret
mov
ja
dec
push
test
imulb
gs
lcall
bound
movsb
int
inc
jb
xchg
pop
xchg
push
xchg
inc
jne
dec
insl
fcmovb
mov
aaa
mov
les
lret
test
fs
and
les
stos
out
dec
or
hlt
push
jg
push
pop
mov
cli
in
jg
out
into
jo
mov
std
or
std
jbe
ja
pushl
sbb
mov
orb
push
movsb
push
push
adc
push
cwtl
lret
aam
mov
jno
sub
movsl
adcb
push
inc
mov
push
sbb
fcomps
das
imul
jo
sub
inc
lret
xor
rcr
popf
or
dec
cmpsl
xor
xlat
inc
jle
mov
dec
js
inc
stc
mov
clc
cmp
aam
and
shlb
lahf
stos
out
sarb
jnp
jg
xor
ljmp
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
call
add
addb
add
adc
add
and
add
add
add
add
add
add
add
pusha
add
add
lock
and
add
in
add
add
add
add
add
push
add
add
mov
add
pusha
add
in
add
add
add
add
add
add
add
mov
add
and
add
adc
add
in
add
add
add
add
add
add
add
fadds
add
xor
add
mov
add
add
add
add
add
add
add
inc
add
inc
add
xor
add
add
add
xor
xor
add
add
push
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
cld
and
add
add
and
add
xor
add
add
add
dec
and
add
add
add
add
add
add
xchg
and
add
add
add
add
inc
and
add
add
add
in
and
add
add
push
and
add
add
add
incl
add
push
and
add
add
add
add
jmp
add
pop
and
add
add
add
add
incl
add
insb
and
add
add
add
ljmp
and
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
outsl
insb
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
outsb
insl
insl
cs
insb
add
add
add
gs
gs
imul
sub
sbb
sbb
push
or
pop
inc
cmp
dec
insb
rclb
fisubrl
lock
inc
jp
add
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
roll
loopne
mov
add
and
push
jo
rcrl
xor
xor
adc
and
jo
cli
andl
push
add
push
mov
cmc
inc
lea
jo
jb
add
addb
sub
cmpsb
or
push
add
lar
test
push
push
push
les
in
dec
adc
sbb
inc
add
add
sub
mov
fidivs
sbb
cld
lea
mov
stos
movsb
add
nop
cmpl
je
pop
jae
cmp
xchg
xchg
inc
mov
rep
fistps
jb
xor
add
pop
repz
or
call
xor
mov
sbb
inc
xchg
lret
inc
jnp
aaa
and
mov
dec
divb
bound
sbb
int
mov
sub
or
test
pusha
lcall
mov
inc
inc
push
or
je
jnp
xchg
stos
sbb
lea
mov
test
push
daa
and
lea
push
and
pop
orl
enter
iret
aas
shlb
mov
lret
sbb
rcrb
push
or
aaa
ficoms
inc
push
or
addb
test
rcrl
mov
and
adc
pop
mov
sbb
into
cmpsb
cmp
add
add
pop
pop
pop
sub
ret
pop
inc
cld
dec
mov
sub
loopne
orl
xchg
and
test
push
ret
rorl
push
dec
roll
push
push
sti
scas
rol
push
fs
xchg
xor
pop
orl
add
in
push
lods
push
xor
scas
leave
inc
push
sbbl
mov
shrl
pop
adc
lods
and
loopne
jmp
cmpsb
cltd
inc
or
push
push
and
loop
push
sbb
pop
cmp
or
and
xor
jmp
popf
js,pn
add
mov
adc
jge
mov
xchg
push
jp
insb
and
mov
adc
add
jne
cmp
jge
loope
inc
jo
rorb
add
sub
not
je
dec
mov
xlat
jne
sub
ret
push
shr
popa
rclb
les
push
dec
add
pop
roll
pop
pop
and
inc
or
sub
xor
test
push
push
xor
jmp
or
cmp
inc
xor
in
aas
add
jbe
push
adc
incb
pop
mov
dec
aas
adc
out
shl
lods
inc
inc
pop
imul
test
inc
int
mov
adc
dec
leave
loopne
xchg
sub
or
pushf
roll
rep
shrb
jnp
add
cli
iret
movsb
push
push
sbb
stos
adc
test
fidivl
cmp
ret
add
pop
mov
pushf
sbbb
push
push
push
and
push
mov
in
es
enter
mov
pop
and
jl
add
push
mov
hlt
push
mov
jge
pop
dec
test
mov
outsl
push
push
flds
in
fnop
clc
enter
xchg
mov
inc
aam
sub
lahf
ss
sti
outsb
push
ret
pop
imul
nop
cli
cmp
jne
stc
sub
adc
repz
inc
rol
decl
movsb
stos
adc
fsub
fildll
jne
cs
cmp
xchg
ficoml
in
sub
lret
std
mov
fwait
mov
and
xchg
cmp
mov
or
or
mov
or
xor
jle
adc
push
push
or
call
sbb
mov
and
cmp
bound
in
sbb
subl
xchg
inc
adc
dec
sbb
shlb
sub
pop
test
mov
jmp
arpl
jmp
or
adc
mov
add
test
roll
jmp
mov
adc
inc
add
idivb
jg
test
and
jmp
shr
add
sahf
data16
push
inc
gs
dec
pop
adc
push
xchg
fs
sbb
stos
outsl
loopne
xor
ss
mov
call
cmp
inc
inc
jmp
repz
imul
insl
pop
sbb
sbb
lock
sub
mov
jl
sbb
add
test
shr
pusha
loope
push
lea
sub
adc
push
or
add
sbb
sub
jb
gs
test
sub
shlb
mov
and
scas
loop
adc
push
jnp
or
sbb
mov
lods
cmpsb
jmp
inc
jo
insb
imul
and
gs
out
pushf
adc
mov
jo
pop
push
push
arpl
fcoms
insb
cmp
outsb
je,pt
cmc
imull
ss
imul
inc
es
popa
insb
ja
movsl
xor
rcll
arpl
or
loope
jae
fwait
xor
rorl
xchg
popa
fadds
js
inc
jnp
mov
data16
mov
aas
inc
js
je
push
movsb
outsb
dec
or
dec
popa
outsb
fs
out
pop
dec
jo
adc
je
stos
les
sbb
jl
imul
mov
xchg
lcall
or
pop
add
insl
cmp
xchg
or
and
cmp
cmpsb
xor
dec
xor
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
and
add
add
dec
or
add
sub
add
dec
and
add
add
inc
and
add
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
jl
inc
add
inc
add
inc
add
add
add
add
add
fldl
add
push
mov
sub
mov
mov
xor
inc
push
mov
push
mov
shl
mov
mov
push
mov
shl
mov
add
mov
shl
dec
dec
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
rep
mov
push
mov
or
pop
mov
movzbl
shl
or
inc
dec
mov
jne
cmpl
mov
jbe
jmp
mov
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
movzbl
mov
and
push
pop
sub
xor
shr
mov
shl
mov
inc
add
imul
cmpl
lea
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
xor
movl
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
push
movl
jmp
sub
sub
mov
shr
sub
mov
add
push
movl
pop
mov
mov
mov
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
shll
mov
jmp
sub
mov
sub
mov
shr
sub
mov
mov
lea
mov
decl
jne
mov
xor
inc
mov
shl
sub
add
cmpl
jge
addl
cmpl
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
lea
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
shr
sub
mov
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
addl
sub
add
decl
mov
mov
incl
inc
cmpl
mov
mov
jne
mov
cmp
jb
mov
mov
pop
pop
mov
xor
pop
leave
ret
push
mov
sub
push
mov
movzbl
push
cltd
push
pop
idiv
push
pop
push
push
movzbl
mov
cltd
idiv
mov
mov
mov
mov
mov
add
mov
shl
add
shl
push
push
call
mov
mov
lea
push
push
pushl
mov
push
add
push
lea
push
call
push
push
pushl
call
mov
pop
pop
leave
ret
add
push
add
add
add
add
inc
add
add
scas
add
add
add
add
inc
and
add
add
add
insb
or
add
mov
add
loopne
add
add
ret
and
add
lock
mov
and
add
add
add
add
add
push
mov
add
add
lods
add
add
add
add
ret
mov
add
add
add
andl
add
add
add
add
add
push
mov
add
add
add
add
les
add
jo
add
adc
add
add
add
add
add
insb
pop
add
add
add
or
add
mov
faddl
add
push
push
push
push
call
pop
sub
lea
mov
add
sub
cld
mov
mov
mov
add
lea
lods
stos
lods
stos
lods
stos
lods
stos
nop
cmpl
je
mov
test
je
mov
add
mov
add
rep
mov
lea
add
add
add
lea
push
call
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
push
call
mov
push
call
lea
test
jne
push
call
push
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
add
push
push
call
test
je
mov
mov
test
jne
lea
jmp
test
je
push
and
push
lea
push
lea
push
call
jmp
mov
add
inc
inc
push
push
lea
push
lea
push
call
lea
push
lea
push
push
push
call
push
call
mov
mov
cmpl
jne
mov
mov
mov
add
movb
add
sub
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
nop
nop
nop
nop
nop
nop
push
call
push
push
pushl
call
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
push
call
mov
mov
mov
add
add
xor
add
je
push
mov
add
push
pushl
call
stos
pop
add
jmp
add
add
jne
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
lods
test
je
add
mov
jmp
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
test
jne
test
je
push
push
mov
xor
mov
movzwl
mov
add
cmp
jge
mov
inc
movzbl
add
sub
mov
je
dec
mov
jne
mov
cmp
jne
shr
rol
xchg
sub
mov
add
add
add
inc
jmp
pop
pop
xor
add
je
cmp
je
call
pop
sub
lea
jmp
jmp
push
mov
mov
add
sub
pushw
push
push
call
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
mov
mov
movzwl
test
je
push
mov
mov
mov
add
mov
sar
rep
add
and
rep
mov
mov
add
xor
push
mov
sar
rep
add
and
rep
pop
mov
mov
add
mov
mov
sar
rep
add
and
rep
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
mov
push
push
push
movzwl
test
je
push
mov
mov
mov
mov
sub
mov
add
mov
sar
rep
add
and
rep
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
mov
dec
mov
push
push
pushl
call
lea
push
pushl
pushl
call
mov
inc
je
xor
add
je
dec
mov
pushl
pushl
popl
popl
jmp
pop
push
mov
add
cmp
jne
add
jmp
mov
mov
sar
rep
add
and
rep
mov
add
shr
shl
sub
mov
xor
push
mov
sar
rep
add
and
rep
pop
pop
pop
pop
pop
add
dec
jne
xor
pop
pop
pop
leave
ret
pop
pop
pop
pop
xor
inc
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
xor
cmp
jne
cmp
je
add
je
add
mov
add
mov
test
je
add
push
push
push
push
call
inc
jne
dec
pop
pop
pop
leave
ret
add
jmp
insl
jae
bound
add
in
add
push
push
push
call
pop
sub
mov
mov
xor
mov
xor
inc
inc
mov
pushl
call
mov
mov
test
jne
dec
jne
xor
dec
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
jne
mov
test
jne
mov
movl
mov
test
je
push
mov
test
je
and
push
jmp
mov
add
xor
mov
push
inc
inc
push
pushl
call
pop
test
je
mov
mov
add
add
jmp
xor
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
sub
mov
xor
lods
test
je
cmp
je
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
add
xor
mov
lea
add
mov
shr
shl
push
lea
push
push
push
push
call
mov
test
je
sub
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
lea
mov
shr
shl
push
lea
push
push
push
push
call
mov
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
jo
insb
imul
and
jb
jb
inc
jo
insb
imul
and
jb
jne
je
add
and
outsl
arpl
jne
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
add
cmp
arpl
cmp
jne
gs
xor
dec
gs
popa
addr16
outsl
js
add
jo
imul
gs
gs
xor
add
imul
jae
inc
insb
outsl
jae
dec
popa
outsb
fs
add
outsb
push
jb
arpl
jae
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jb
jne
insb
push
jb
je
arpl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
cmp
lcall
add
push
cmp
insl
push
cmp
rcrl
cmp
jmp
cmp
push
push
cmp
cmp
cmp
dec
push
cmp
add
add
jp
cmp
pushf
sbb
add
