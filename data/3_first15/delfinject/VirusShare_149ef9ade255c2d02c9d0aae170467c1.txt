fildll
int3
daa
jge
sbbb
daa
xchg
xor
pop
in
xor
xchg
popf
or
fwait
pop
test
inc
outsl
push
jnp
stc
xchg
jle
jl
movsb
mov
sahf
push
dec
inc
mov
mov
sbb
daa
xor
shrb
or
xchg
fimuls
outsb
cmp
sub
lds
sub
pushf
incl
leave
pop
dec
push
mov
divb
popa
cwtl
int3
ds
jp
jb
pop
adc
and
jne
add
lods
or
daa
mov
out
shrl
or
pop
fwait
sahf
jo
or
imul
xlat
cwtl
dec
pop
mov
or
jl
cmpsl
aam
mov
push
sub
pop
mov
dec
push
inc
mov
pop
outsl
aaa
stc
test
xor
out
test
or
scas
or
movsb
add
ja
mov
insl
adc
add
sub
or
in
inc
sbb
mov
inc
enter
cmp
fcomps
jecxz
cmpsl
hlt
nop
jnp
xchg
jmp
data16
addr16
js
jmp
scas
jmp
pop
jae
scas
int3
mov
rcll
xlat
shll
cmpl
add
xor
stos
aas
sub
xor
mov
ror
mov
mov
pop
and
jae
out
xchg
sub
mov
scas
loopne
sbb
in
sti
adc
dec
dec
gs
mov
and
sub
loop
push
test
daa
adc
mov
repz
das
mov
jae
and
add
icebp
aam
outsb
repz
jne
cmp
aam
ficoml
dec
lods
leave
sbb
sti
dec
insl
or
rcll
mov
xchg
loop
jecxz
push
xchg
loopne
mov
push
pop
stc
in
stc
push
icebp
dec
mov
pop
sub
add
and
push
sbb
mov
rorb
jle
loop
bound
or
jge
divl
pop
in
aad
fdiv
arpl
ror
dec
subl
cmp
fistps
cld
lret
dec
pusha
cmp
sub
xor
jb
iret
in
in
ret
mov
repnz
and
mov
add
shr
mov
sub
iret
mov
jne
mov
adc
cmp
mov
push
fwait
sbb
cld
sti
cmpsl
js
dec
pop
aam
orl
fcmove
pop
lock
sahf
lea
shlb
in
pop
inc
sbb
inc
sahf
dec
or
aad
pop
mov
int3
aas
xchg
mov
in
fistl
cli
xor
dec
adc
enter
mov
mov
cmp
cwtl
mull
mov
xchg
and
sbbl
mov
inc
mov
jle
and
pop
fwait
lahf
xor
lods
adc
cmpsl
fidivrl
lds
outsl
lock
lret
sub
xchg
aaa
inc
ss
dec
push
cmpsl
sub
push
cwtl
adc
or
pop
je
je
in
lret
movhps
and
subb
dec
testb
adc
cwtl
cmp
mov
xchg
stos
cmp
lahf
or
aam
dec
sub
clc
clc
jmp
pop
ss
ret
ja
mov
push
sbbb
or
lahf
mov
mov
jbe
jl
imul
fcmovnb
xchg
cmp
lods
in
cltd
enter
lcall
mov
add
inc
adc
xor
cmp
mov
fdivrl
insb
dec
out
mov
ss
xchg
cmp
sar
jae
inc
fisubrl
fcmovu
jo
pop
int
xchg
subl
push
ret
int3
dec
mov
add
mov
mov
movsl
pop
cmp
in
ljmp
sbb
pusha
mov
ret
push
mov
sbb
imul
lret
out
jo
addr16
push
add
mov
jns
or
push
inc
sbb
inc
pop
test
sbb
aaa
sbb
jmp
xchg
out
xchg
ds
aaa
popf
mov
sti
mov
lods
xor
sti
sub
jne
xor
cmp
addl
repnz
les
loopne
testl
xor
inc
push
mov
or
mov
sahf
push
test
mov
mov
mov
outsl
nop
mov
out
popf
mov
fnstenv
fnstcw
and
pop
mov
xor
iret
sarb
add
lcall
xchg
in
push
ss
fimull
jno
and
negb
dec
maskmovq
divl
push
xchg
mov
mov
insb
mov
pop
andb
mov
dec
pushf
sbb
cmp
pusha
aas
lret
cmp
push
cli
loopne
roll
sbb
or
dec
pop
sti
mov
stc
mov
roll
insb
arpl
stos
jae
cmp
mul
mov
mov
aas
fbstp
stos
out
pop
pusha
ret
jle
or
and
negb
mov
bound
std
cmpsl
mov
repnz
push
add
xchg
mov
sub
pop
xor
stos
inc
cmpsb
xor
cmpb
adc
out
clc
jno
movsl
fcom
repnz
scas
mov
jge
daa
inc
cmpl
sub
dec
jl
push
inc
mov
push
pop
imul
cmp
in
xchg
popf
or
or
adc
push
sub
iret
inc
lahf
shl
sbb
test
xchg
mov
push
gs
mov
jecxz
or
rorl
adc
xor
cmp
imulb
cmp
pop
or
and
push
mov
xor
ljmp
clc
cmp
xor
stc
sbb
int
stos
movsl
stos
xchg
test
mov
andb
sbb
xchg
mov
jb
pushf
and
lea
push
loop
test
dec
dec
push
pop
ret
pop
mov
cmp
mov
pushf
call
adc
xlat
loopne
pop
push
lret
les
dec
mov
pop
cld
mov
jae
inc
xchg
js
xchg
sbb
xchg
add
push
lret
popf
jp
arpl
nop
sbb
cmp
sbb
lock
fwait
daa
mov
mov
mov
xor
sbb
hlt
aas
xor
movl
mov
nop
adc
ljmp
in
ret
mov
fstps
adc
nop
sub
insb
lret
pop
cmp
and
sahf
xchg
stc
fwait
inc
jbe
aad
loope
movsl
dec
xor
pushf
mov
mov
jae
mov
pop
or
imul
mov
dec
in
dec
out
loope
loopne
inc
orl
aam
ljmp
push
mov
jbe
adc
movsl
loope
je
cld
lret
cmp
pop
inc
ja
mov
mov
push
sbb
and
es
mov
int
sub
mov
mov
or
cmpsb
jge
jge
sbb
jecxz
test
push
pop
in
iret
outsb
out
gs
lret
xchg
lcall
push
je
addr16
dec
cmp
and
ljmp
enter
ret
clc
push
jo
insl
sbb
or
push
repz
push
imul
mov
lret
imul
call
stc
dec
add
inc
cmp
stos
xchg
lods
ret
shlb
adc
dec
inc
out
push
jns
in
imul
cmpb
push
mov
ljmp
jmp
aad
stos
push
aad
adc
mov
jne
je
add
sbb
or
push
fsubrl
lret
stc
loope
lock
mov
movsl
push
push
dec
jg
mov
into
jmp
daa
push
test
test
sub
jb
dec
fcomps
aas
jecxz
imul
lahf
pop
nop
inc
jp
mov
call
xchg
sub
fstpl
adc
sahf
fcmovnb
xchg
add
xchg
fmuls
bound
insb
mov
rcr
adc
sahf
jns
xor
jl
xor
popf
scas
lret
mov
incb
dec
add
pushf
loope
pop
jo
pusha
jecxz
frstor
lret
mov
xor
loop
pushf
aas
dec
cwtl
push
lret
jmp
jmp
nop
imul
push
push
mov
pop
rcll
inc
orb
or
cmp
dec
icebp
pop
cmpsb
jge
movsb
or
dec
sub
push
dec
fwait
push
xor
ljmp
fwait
or
xchg
es
scas
inc
stos
addr16
rclb
out
imul
pop
or
xchg
mov
rolb
pop
jl
out
pop
loopne
test
push
loop
inc
push
stos
shl
hlt
stos
xlat
push
mov
out
sbb
jne
mov
or
inc
sub
enter
mov
push
sub
mov
call
fwait
mov
mov
jg
out
scas
pushf
jno
daa
sahf
add
movb
cmp
hlt
test
push
lds
push
test
or
jno
inc
pop
push
int3
ja
setns
or
iret
mov
add
hlt
inc
loopne
dec
jns
aaa
dec
and
lock
fmul
scas
cmp
xchg
xor
jno
fs
mov
adc
jnp
dec
xor
adc
pop
gs
jmp
inc
enter
jns
dec
lcall
mov
xchg
cltd
pop
sub
jmp
fdivrs
or
pop
add
push
add
enter
mov
out
cmp
mov
sbb
cld
mov
xor
add
jno
cmpsb
xor
test
xchg
mov
push
mov
loope
mov
mov
aad
out
cmp
xor
in
in
sbb
scas
sub
loope
or
sti
cmp
cmpsl
mov
mov
shrl
sub
push
dec
jge
ret
ret
and
inc
adc
out
and
mov
mov
ja
filds
mov
fstps
add
pop
cmpsb
xchg
xchg
pop
add
inc
mov
ficoms
pop
mov
push
sbb
call
jo
ret
and
adc
jmp
mov
into
decl
pop
insl
cltd
dec
out
mov
lret
lret
dec
xorb
adc
out
sbb
stos
ret
adcb
aaa
imul
cld
mov
jne
mov
mov
inc
sub
movl
jb
add
dec
fimull
scas
rdpmc
lret
mov
stos
out
nop
cwtl
aaa
xor
call
bnd
or
rcr
gs
fcmovnb
and
in
sub
insl
mov
pushf
ds
and
dec
imull
pop
and
xchg
fst
mov
cmpsb
leave
inc
scas
lret
and
push
fldl
or
scas
cld
test
fmul
fs
aad
dec
test
rorl
cs
gs
xchg
pop
jb
adc
out
or
jo
xchg
pop
mov
pushf
aas
cmpsl
lret
cmpsl
aam
fs
dec
fmuls
mov
or
mov
push
out
cmp
loop
mov
cmp
or
in
jg
stc
lock
or
arpl
lea
lret
hlt
jecxz
mov
filds
xchg
jp
idivb
mov
test
sbb
and
push
fidivs
dec
lods
pop
sbb
lahf
mov
adc
dec
fwait
sub
sbb
xchg
adc
fsubr
lods
and
jg
call
aaa
out
mov
cli
std
hlt
or
scas
adc
jl
fmull
mov
fidivs
mov
or
pop
or
mov
jns
bts
jl
filds
repz
insb
std
cli
cltd
nop
jo
jbe
in
mov
stos
scas
ss
push
dec
and
mov
pop
push
lods
jb
les
xor
inc
out
jge
movsb
inc
and
xchg
push
pop
out
test
xchg
lcall
add
add
lods
js
pusha
aam
mov
in
test
sub
ljmp
mov
je
or
les
rol
addb
in
andl
mov
add
stc
pop
lcall
xlat
out
inc
les
loop
rcrb
or
lret
xchg
mov
adc
cmp
sbb
push
adc
pop
outsb
imul
addr16
daa
imul
xlat
imul
and
adc
mov
mov
test
outsl
xor
xor
test
in
xor
cmc
pop
jle
cli
mov
movb
cs
daa
mov
arpl
or
test
negb
nop
shll
jl
mul
xchg
and
inc
mov
mov
dec
inc
es
add
push
scas
pop
jp
nop
ljmp
clc
or
outsl
icebp
test
mov
adc
fwait
push
cs
mov
cltd
js
in
sub
rcr
orb
mov
scas
stos
iret
in
mov
mov
mov
dec
test
sub
push
inc
enter
shl
xchg
rcll
aaa
pop
mov
mov
pop
adc
adc
gs
xor
xchg
mov
jbe
stc
test
loope
xor
add
adc
ja
shll
fstps
mov
pop
rolb
insb
inc
dec
push
sbb
xorb
loope
inc
test
jmp
mov
stc
int
jae
adcw
aaa
jle
xchg
negb
mov
cmp
pop
push
cmp
add
inc
pop
scas
lea
das
dec
lahf
jge
dec
in
popa
dec
push
test
or
fdivs
fsub
fcomps
adc
aaa
cmpsb
sti
lea
lahf
jmp
movsl
popa
loop
mov
stc
xor
mov
sarl
cli
inc
add
icebp
dec
adc
mov
mov
ret
xchg
in
mov
push
pop
lahf
mov
cli
fs
dec
pop
inc
cmp
cmp
push
rclb
xorl
cld
mov
pop
pushf
mov
push
cmc
hlt
sbb
jno
shll
xor
xor
adc
sbb
push
sbb
dec
sbb
repz
lcall
and
cmp
rcll
stc
call
push
cltd
outsl
inc
dec
mov
jae
lahf
testl
jge
lds
push
fs
jmp
mov
ret
out
adc
xchg
sub
push
gs
nop
push
cli
xchg
in
sbb
sub
dec
test
pop
mov
test
repz
lea
jecxz
loopne
cmpsl
aam
lahf
jb
ja
sbb
scas
jbe
add
inc
loopne
leave
mov
pandn
sbb
sub
das
lods
mov
jne
stos
or
xchg
test
push
xchg
rorl
push
dec
cli
clc
je
sub
popf
inc
loope
call
or
lods
scas
pop
hlt
cmp
call
es
jo
jecxz
or
fmull
scas
scas
aas
pop
into
test
cmp
into
lcall
int
in
xchg
hlt
adc
pop
outsl
bound
mov
loopne
xchg
aaa
adc
pop
testb
push
sub
adc
inc
push
fstl
inc
rcrl
nop
out
push
fwait
je
lcall
push
adc
fidivl
fimull
or
ljmp
add
and
mov
lret
outsb
lods
daa
sub
xchg
or
push
push
inc
and
mov
ss
or
push
pop
jge
lods
mov
and
push
pop
icebp
rcrb
hlt
ss
insb
outsl
push
sbb
sub
int3
add
aaa
adc
add
ret
pop
adc
sub
xchg
and
ljmp
pop
scas
push
mov
clc
outsb
insl
aaa
in
sbbl
outsl
jnp
stos
popf
sub
pop
push
inc
pop
bound
jo
fldl
pop
inc
mov
cs
sub
pushf
push
sbb
sarl
mov
jg
stos
lahf
xorl
or
incb
outsb
jge
movl
int3
push
imul
push
rorl
sbb
or
inc
gs
fidivl
std
fwait
ret
jl
sbb
add
addb
call
cmp
mov
jne
movsb
js
pushf
int
inc
pop
sub
movsl
pop
sub
push
call
movsb
popl
cld
stc
lahf
repz
lds
mov
popa
lock
adc
xor
mov
mov
sbbl
add
mov
push
loop
jo
lds
jbe
imull
enter
mov
shll
and
sarl
mov
mov
jg
xrelease
negb
pop
sub
lcall
jle
push
dec
xor
lcall
mov
push
aas
repz
mov
inc
mov
movsb
movsb
or
movsb
xchg
adc
and
lcall
dec
je
mov
test
clc
leave
mov
mov
bound
xchg
dec
imul
fstl
pushf
popf
out
or
movsb
rol
cld
inc
int
popa
ja
push
call
xchg
mov
mov
stos
es
mov
lds
xchg
movsl
mov
pushf
inc
mov
std
or
xchg
jp
jle
mov
scas
in
and
or
or
cmp
jl
push
mov
outsl
inc
jo
insl
test
ss
mov
push
mov
lea
out
test
mov
roll
dec
mov
or
testl
mov
in
cmp
jae
daa
fnsetpm(287
add
xchg
fimull
add
jbe
adc
xor
notl
xor
mov
ds
ss
push
lret
rcr
push
xchg
fs
mov
shrb
inc
idivl
jno
dec
bound
loope
mov
scas
insb
fstl
jbe
movsl
push
jae
outsb
in
out
pop
popf
in
nop
push
pmaxsw
ret
dec
jne
cmp
popa
dec
cld
add
cmpsb
imulb
in
sbb
mov
popa
out
into
popf
fcmovu
xchg
adc
not
sub
adc
roll
pushf
je
mov
nop
mov
shrl
inc
xchg
pop
cwtl
xchg
ficompl
fstps
ret
mull
and
rcrl
push
xor
neg
rcrb
lds
sti
aas
xchg
orb
rclb
and
pop
jecxz
je
sbb
mov
in
js
outsb
jl
or
hlt
or
push
mov
mov
pop
push
sbb
lcall
xchg
cli
push
sbb
mov
into
lods
rcrl
icebp
incb
sbb
add
in
lahf
cmp
mov
jns
popf
aad
fistl
popa
xchg
dec
ret
scas
scas
mov
sub
push
movsb
stc
cmp
ja
addl
iret
sub
test
mov
testl
or
test
hlt
popa
js
mov
mov
mov
inc
pop
ret
outsl
xor
dec
add
lods
addl
insl
jbe
mov
jb
mov
imul
insb
push
in
mov
cs
scas
sub
xor
push
jo
dec
and
mov
xor
xchg
cmp
jp
es
fldl
mov
lcall
xchg
ret
mov
xchg
xchg
cld
mov
cmpsb
xchg
daa
addr16
shl
cmp
sub
mov
cmp
shr
xlat
mov
and
add
xor
outsb
or
or
mov
xchg
lods
jbe
call
jl
mov
cmpsb
fcompl
adc
addr16
mov
rolb
das
sbb
cltd
fcomps
lds
loopne
cs
inc
mov
or
push
out
sbb
or
adc
icebp
out
incb
jge
pop
iret
fs
and
loopne
lret
imul
shll
loopne
inc
jg
movsb
mov
mov
xchg
ret
mulb
and
insl
gs
test
scas
imul
scas
fildll
sub
leave
daa
int3
adc
arpl
fidivrl
jg
or
inc
testb
mov
or
jmp
stc
repz
jmp
or
cmp
pop
scas
pop
scas
push
mov
pop
cltd
xor
notl
lret
sub
loopne
fmulp
pop
hlt
cwtl
xor
inc
sbb
dec
push
push
stos
adc
push
shrb
sub
pop
adc
or
dec
dec
xchg
idivl
mov
sahf
cltd
fwait
lret
sahf
push
and
int3
shlb
or
cmp
psubw
xchg
xchg
jle
in
pop
repnz
pop
mov
shl
or
aas
push
icebp
in
ja
cmc
sahf
ljmp
pusha
jmp
sbb
call
mov
adc
fidivs
jg
push
add
std
dec
mulb
mov
ja
xor
loope
xchg
push
pop
pop
sbb
pop
les
mov
loopne
arpl
out
fidivrl
adc
faddl
daa
sub
hlt
je
ds
sub
add
sbb
mov
mov
pusha
ja
rcrl
mov
out
sbb
lods
mov
xchg
arpl
lea
repnz
dec
cmp
cmpsl
fs
cmpsb
adc
or
xchg
push
or
movsl
mov
cmc
int3
mov
xorl
out
or
sbb
mov
movsl
or
mov
stc
cmpl
out
insb
test
inc
push
ja
arpl
rorb
ret
insb
es
subb
mov
std
cmp
iret
inc
jl
pop
cli
lods
mov
andb
dec
int3
sub
mov
cmpsl
jo
sub
insl
adc
mov
in
xor
je
xchg
lods
std
cmp
aas
int
icebp
xor
inc
out
repz
jl
mov
xchg
sbb
xor
xchg
mov
sub
xor
sbb
mov
inc
loope
mov
imul
out
sub
mov
xorb
push
or
mov
jno
pushf
xor
pop
and
aaa
xor
popa
push
adc
ss
cmpsb
pushw
jle
cmp
mov
scas
xchg
lcall
or
jmp
sti
pop
and
inc
mov
and
push
lahf
loope
xor
xor
int
pop
cmpsb
pop
xor
fisubrl
shlb
lods
and
or
jl
xor
cmp
push
ljmp
mov
fildll
jl
notl
test
rclb
ficompl
outsb
jp
rcrl
adc
in
sbb
daa
inc
adc
adc
inc
lret
sub
arpl
dec
out
or
xchg
test
inc
fcomps
push
and
jbe
add
or
fsubrs
es
xorl
jo
andl
sub
pusha
icebp
ljmp
arpl
push
iret
je
jbe
mov
aam
js
adc
js
pop
pop
jp
mov
pushl
adc
xor
cmc
enter
mov
mov
cmc
lods
lcall
dec
fwait
ret
imul
dec
test
jmp
inc
xchg
movsb
mov
test
popf
adc
lret
shll
cmp
add
les
scas
cmp
jge
mov
fstpl
cmp
arpl
sbb
mov
mov
cmpsb
call
fimuls
outsb
stos
pop
mov
test
sbb
mov
dec
out
pop
sub
cmp
scas
jno
jbe
pop
or
pop
shll
adc
push
sub
or
clc
dec
shlb
sarb
push
cld
dec
pavgw
add
add
mov
mov
mov
dec
fldcw
push
jl
imul
mov
sbb
sub
push
cli
sub
lea
pop
cmp
jge
repz
ficompl
insl
std
aad
stos
fsts
sbb
mov
ljmp
adc
mov
pop
je
cltd
scas
in
xchg
leave
push
shrl
jnp
mov
adc
inc
popf
cltd
pop
fldt
inc
divb
inc
loopne
jmp
enter
ljmp
or
cld
cld
sti
dec
add
imul
fstpl
mov
outsb
fstl
loope
insb
and
aam
cli
lcall
fwait
lcall
jp
mov
push
and
adcb
sbb
cmp
clc
sub
jae
sub
gs
push
repnz
jno
cmpsl
stos
cmp
and
ret
inc
and
cli
pusha
jno
inc
in
mov
cld
fdiv
mov
push
jmp
pop
scas
sbb
addr16
xchg
inc
rol
aaa
or
add
cmp
fists
das
mov
sahf
shlb
add
ret
mov
sub
inc
test
lock
xchg
stos
shll
cmp
pop
cmpsb
outsl
dec
mov
mov
sub
xor
cmp
push
cmp
inc
iret
inc
lret
jne
aad
push
test
xchg
idivl
inc
mov
inc
cmp
in
lods
xchg
imul
fs
fs
dec
iret
mov
das
in
fildll
push
adc
loopne
testb
sahf
push
scas
inc
xor
and
mov
clc
dec
sahf
into
test
repz
mov
adc
cmp
mov
xor
push
mov
sbb
pop
je
xor
cwtl
sub
push
xchg
test
es
pop
add
bound
dec
dec
pop
mov
adc
mov
lahf
icebp
ss
inc
ss
lret
jnp
mov
dec
jno
xor
lcall
test
fwait
negb
mov
call
fdivrs
test
xchg
adc
push
cmp
sub
orl
popa
cmp
inc
outsb
icebp
call
imul
imulb
jge
clc
sahf
dec
lcall
push
and
aam
adc
cs
sbb
dec
push
dec
inc
test
sti
ret
push
dec
cmc
addr16
loopne
clc
push
mov
pushf
push
add
and
into
inc
mov
lret
hlt
and
addr16
mov
lock
outsb
rorl
cmp
dec
lods
mov
cmp
outsb
dec
mov
mov
and
and
lahf
int3
ja
rclb
sbb
mov
sbb
mov
mov
adc
into
push
sarb
and
sbb
in
inc
xchg
cwtl
daa
xor
aaa
jo
cwtl
fwait
les
nop
jbe
sub
push
mov
dec
test
jo
xlat
es
fisubl
mov
rorl
shl
int
cmp
cmpsb
mov
outsl
push
rcrb
jg
popa
pop
sub
jl
jle
cmp
aaa
dec
lret
out
push
loope
cwtl
xchg
xor
roll
ror
into
shrl
idiv
or
add
mov
mov
test
fimuls
ljmp
mov
sbb
sbb
mov
dec
cmc
xchg
sub
popa
in
test
fyl2xp1
test
adc
adc
in
mov
hlt
pop
mov
int
lret
orb
imul
mov
cld
push
inc
bound
adc
es
fdiv
shrb
bound
jle
leave
rcrb
std
movsl
push
adc
aas
dec
push
xchg
inc
movsl
inc
pop
sub
and
sub
push
pop
xchg
fldcw
jnp
mov
sbb
insb
aam
add
dec
and
mov
lret
jo
iret
int
cmpsb
and
cmp
xlat
repz
or
xor
scas
pop
mov
dec
adc
fs
aad
xor
test
sbb
fdivrs
adc
pusha
cltd
adc
sub
dec
stc
dec
stos
iret
jo
repz
sbb
inc
push
xchg
clc
ljmp
lret
pop
sahf
les
xchg
cld
movsl
lahf
push
sub
inc
inc
inc
aam
inc
push
jbe
das
jmp
imul
aam
mov
aam
pushl
icebp
add
mov
addr16
out
jecxz
xchg
or
dec
aaa
jnp
push
dec
lret
data16
outsl
xchg
imul
mov
pushf
faddl
sti
inc
sub
xor
pop
xor
xchg
or
loope
sbb
xchg
outsb
stos
loopne
pop
loopne
in
orb
popa
and
mov
call
vpmaxub
cmp
or
ret
pushf
mov
push
adcl
sub
movsb
aad
mov
or
jl
or
adc
psubq
jno
loopne
push
jbe
xchg
inc
cmp
icebp
outsl
fwait
pushf
je
sahf
jle
ret
in
push
cmp
movsb
mov
in
shr
jb
xor
mov
imul
stos
xchg
sub
xchg
xchg
mull
icebp
test
xchg
shrb
cmpsb
or
or
xor
adc
mov
push
ja
ds
cmc
pop
sub
jle
das
sub
mov
ds
cli
lret
cmp
xorb
push
pop
dec
mov
and
lods
jne
cmp
and
in
push
xor
sti
out
loop
or
scas
out
ds
fsubs
repz
adc
inc
adc
gs
mov
out
and
lret
ljmp
ss
out
jmp
sbb
pop
cmp
sub
stos
shll
int
mov
test
mov
aaa
mov
xor
outsl
add
test
outsl
rcr
pop
jnp
pop
mov
clc
xchg
mov
into
jne
cmpl
int
mov
std
ret
aas
movsb
leavew
inc
push
adc
cld
mov
xlat
push
outsb
orl
push
fwait
rorl
sub
push
mov
xor
sbb
and
push
loopne
call
and
aaa
cltd
xchg
xchg
jmp
jb
xlat
daa
push
mov
test
add
cwtl
cli
test
add
jg
xor
jmp
out
fcoml
fiaddl
jg
xchg
add
add
fwait
and
mov
pusha
jae
mov
jo
xor
xchg
mov
xor
scas
cmp
pop
fbstp
arpl
in
mov
aaa
outsb
cltd
adc
mov
pop
push
and
ret
outsb
faddl
into
out
sahf
cmp
and
stos
mov
je
mov
cmpsb
das
sbbl
les
bound
cli
fstpt
lret
mull
inc
and
jmp
xor
movl
mov
adc
xchg
imul
mov
push
ret
pop
cmp
int
jbe
jns
push
and
adc
or
xchg
shrb
xchg
mov
test
and
stc
mov
push
enter
out
fwait
mov
stos
rdmsr
xor
jp
adc
cmp
and
out
mov
sbb
inc
test
mov
and
andl
negl
out
into
inc
ret
xchg
stos
cmpsb
int3
push
xchg
add
popl
enter
out
xor
adc
adc
xchg
dec
lea
pop
cli
push
lcall
les
jle
fwait
pushf
mov
cmp
pop
xor
or
lahf
dec
fiadds
lds
mov
mov
lret
xchg
mov
sbb
push
jg
mov
out
mov
inc
xchg
jnp
jmp
sahf
hlt
ds
fsubp
test
rcrl
fwait
inc
outsl
inc
mov
cmpl
pop
fists
or
icebp
sbb
jne
adc
jecxz
adc
pushf
mov
add
mov
lahf
aaa
sub
cmpsb
dec
addb
ret
pop
aas
lret
out
ljmp
cmp
mov
or
or
cmp
aaa
gs
ja
add
fs
dec
les
xor
lahf
addb
call
pop
loop
addb
and
das
cmc
mov
mov
xchg
fiadds
dec
mov
push
ret
push
sahf
jge
jl
test
mov
ja
cmp
push
jecxz
movsl
in
mov
mov
add
ja
insl
jp
fcoms
xchg
lock
mov
test
add
aad
test
leave
xorb
mov
adc
nop
xchg
sarl
jmp
ret
popf
inc
mov
in
cld
sbb
inc
ljmp
cmpsl
add
icebp
ficoms
mov
cmpsb
insl
push
inc
pusha
or
repnz
adc
sbb
aam
in
daa
loope
xor
lcall
and
fsts
add
inc
fcomps
addl
jbe
out
in
inc
or
and
jp
xchg
hlt
nop
push
mov
inc
adc
cld
cmp
movsl
xchg
repnz
imul
stc
ret
mov
mov
lods
dec
cltd
inc
mov
adc
jno
sub
sbb
mov
mov
jmp
test
jb
cwtl
xchg
aas
add
pop
and
mov
push
out
push
inc
popf
cmp
sub
cmp
and
push
fisttps
jge
jne
cs
stos
shlb
sub
cld
fnstsw
mov
sbb
loope
adc
push
stc
psllw
mov
mov
pop
pop
mov
lea
inc
ljmp
aaa
fidivs
xor
mov
pop
aas
ret
push
jbe
in
mov
mov
adc
je
inc
pop
ret
lea
inc
pop
xor
loope
and
jle
enter
das
push
and
ss
sti
or
sbb
xor
lea
cmpsl
mov
adc
outsb
or
rclb
bound
xor
sti
imul
inc
dec
lods
or
push
int
push
ja
int3
in
mov
mov
add
jne
fcmovbe
mov
lcall
mov
cmp
aam
jp
jno
repnz
sahf
xchg
xchg
ror
sbb
cld
or
xor
not
sbb
std
cmp
xor
imul
mov
mov
lret
xchg
jb
test
jge
outsl
jge
mov
fucomip
imul
mov
sub
mov
lcall
push
cwtl
adcl
xor
es
sar
daa
dec
and
cwtl
push
gs
mov
cmpsb
fisttps
stos
lcall
icebp
movsl
nop
shrb
sahf
add
lahf
loop
jp
insb
dec
push
jp
fdivs
shlb
cmc
lcall
jae
dec
mov
or
cmpsb
mov
adc
je
insl
ja
mov
xchg
dec
inc
icebp
iret
popa
adc
mov
push
in
inc
in
inc
sbb
and
xchg
mov
adc
sub
leave
je
cwtl
sbb
push
aad
movsb
or
mov
repz
dec
jp
jne
imul
sti
out
push
push
stos
pop
or
push
repz
popf
dec
push
push
mov
inc
push
lea
pop
stos
js
mov
sbb
repz
sahf
push
and
mov
mov
sbb
imul
mov
mov
fimuls
push
xchg
jbe
jo
cmp
popf
mov
sti
das
cs
jmp
sub
pop
shl
xchg
add
jb
xchg
leave
jmp
pop
ljmp
push
inc
sbb
or
dec
pop
push
cs
test
insl
es
mov
jmp
in
jp
cli
sbb
ret
in
pushf
add
nop
loopne
decl
xlat
into
loop
iret
iret
mov
mov
scas
lcall
xor
mov
shrl
and
sbb
sbb
dec
bound
mov
insb
sahf
stos
ret
in
pop
push
xor
sti
out
cmp
bound
test
pop
add
mov
pop
nop
out
mov
popa
mov
aaa
jl
adc
xlat
addr16
daa
pop
push
add
add
daa
sub
push
mov
and
jbe
jmp
sbb
popf
js
movsb
sti
push
or
test
cwtl
in
stos
lock
fimull
jno
out
push
mov
cmp
add
outsl
fwait
mov
xor
dec
adc
and
xor
pusha
cwtl
mov
mov
mov
ret
into
push
imul
xchg
jge
xor
es
jb
stc
xchg
xor
hlt
jb
out
frstor
sbb
es
pop
mov
mov
test
add
lock
jp
or
add
addr16
push
ror
lahf
insl
into
xor
fstpt
cmp
add
xor
jg
cwtl
or
mov
insb
push
push
jg
call
mov
sub
add
mov
mov
push
pop
push
bnd
invd
or
addb
pop
mov
je
mov
mov
adc
hlt
pop
sbb
gs
push
cmpsl
rclb
cmc
sti
imul
int3
loop
popf
or
js
mov
jge
nop
lahf
mov
shlb
out
test
xor
push
ds
push
roll
js
int
or
xchg
cli
mov
mov
loope
and
jp
sahf
adc
dec
mov
iret
pop
not
in
dec
sub
cmp
xor
icebp
push
rep
cmpsl
mov
add
out
jnp
adc
xchg
pop
push
hlt
xchg
add
lods
in
mov
push
lods
add
adc
imul
xchg
jns
pushf
out
and
mov
xchg
imul
in
call
in
lock
gs
dec
push
dec
xor
add
dec
test
or
inc
inc
inc
fwait
or
adc
fldenv
dec
sbb
aam
xchg
mov
inc
sub
mov
inc
push
cmp
inc
cltd
pop
lods
mov
push
or
xchg
sbb
or
popa
xchg
cmc
ja
inc
std
aad
idivb
sbb
xchg
fdivs
stos
add
inc
cwtl
xor
fbstp
pop
lea
xchg
add
or
mov
stc
aaa
fildll
insl
int3
sbb
cld
push
mov
cmpb
stos
insl
or
pop
mov
negl
dec
pop
dec
sbb
jno
add
jp
mov
push
jmp
xchg
dec
dec
sbb
add
push
pop
mov
mov
push
dec
sahf
mov
sub
push
decl
mov
mov
or
mov
cmp
cli
fbstp
cmc
shll
lahf
sbb
adc
out
fwait
ss
popa
imul
dec
fidivs
mov
mov
in
iret
insl
rorl
fildl
mov
lods
pop
popf
add
add
clc
lret
mov
mov
loope
cmp
ss
jbe
xor
scas
lods
nop
aaa
aam
and
je
fld
dec
rol
push
mov
mov
sahf
mov
lcall
cld
inc
inc
scas
call
js
fwait
pop
adc
xchg
popf
mov
mov
clc
push
xchg
ljmp
sbb
roll
pop
mov
lods
and
lods
call
cs
dec
scas
push
int
mov
mov
sbb
cmpsb
xchg
es
stc
sub
les
mov
cmp
in
js
dec
jmp
shll
mov
fimull
fsubrs
clc
pop
pop
jmp
jo
cmp
mov
mov
in
dec
jl
ret
mov
repz
call
arpl
int
je
sahf
mov
or
pop
imull
pop
in
movsl
xchg
insb
mov
stos
rol
mov
aas
or
pop
nop
out
mov
cwtl
jnp
sbbl
insl
pop
out
mov
fucomp
pop
sbb
mov
scas
test
xchg
faddl
in
xchg
mov
in
pop
lret
hlt
out
and
sbb
je
shrb
sub
pop
mov
mov
movsb
or
cld
sbb
or
cld
repz
dec
sub
ss
xor
cmpsl
mov
xchg
xchg
scas
adc
jg
pop
ss
mull
inc
sub
outsl
pop
jle
mov
lds
lods
rcrl
ss
push
lcall
repnz
scas
scas
push
push
xor
ret
or
mov
call
jae
sbb
popa
and
out
adc
pop
inc
push
xchg
enter
sub
sti
jecxz
jnp
outsl
xor
and
push
cmp
out
pop
in
test
mov
lock
or
or
popa
mov
ss
sti
adc
loope
enter
sub
lods
adc
xchg
das
rolb
cmpsb
mov
repnz
mov
dec
adc
sub
lods
test
xchg
inc
push
xor
icebp
rcr
out
push
xchg
push
add
test
inc
out
ds
mov
sub
sub
imul
mov
mov
xor
icebp
inc
jne
sbb
or
xchg
stos
dec
jecxz
mov
and
sarl
sbb
or
push
ret
sbb
xor
test
shll
xor
cmp
jp
pop
in
cli
inc
jns
aas
daa
mov
or
mov
or
fs
adc
es
mov
roll
mov
fst
push
adc
stc
orl
adc
scas
enter
push
stos
xor
lcall
in
cmp
stc
movsb
shrb
dec
mov
das
or
imul
test
jno
sahf
push
in
mov
scas
add
sbb
cld
aad
inc
and
sbb
xor
jp
xchg
test
stos
dec
xchg
pop
dec
sub
neg
addr16
scas
cmp
outsl
lahf
sti
cmp
inc
push
cmp
mov
stc
into
lods
jae
iret
subb
test
push
gs
lods
outsb
mov
addr16
das
testl
lahf
lock
mov
xchg
mov
mov
xchg
xor
jno
outsb
loop
sub
and
cmp
pop
inc
je
bound
not
movsl
notb
movsl
lcall
xchg
stos
lea
mov
sti
int3
in
push
movsl
fsts
arpl
adc
incl
incb
dec
cs
clc
mov
inc
push
ss
xchg
int3
in
inc
push
cli
outsb
mov
lds
pop
xchg
shll
jg
fdiv
fisubs
add
adc
leave
push
imul
iret
add
stos
push
cwtl
cld
fs
frstor
adc
popa
in
mov
xchg
adc
ja
lret
std
and
nop
add
jo
mov
dec
iret
sub
stc
popf
ss
aas
sub
jmp
inc
out
dec
cli
inc
clc
dec
pop
inc
sbb
or
sbb
mov
pusha
jno
mov
add
movsl
mov
xchg
fsubrl
inc
mov
outsl
insl
xchg
mov
mov
sahf
pop
add
mov
jecxz
push
add
addr16
inc
popf
stos
mov
pop
js
push
int3
lret
jns
lods
fsubrp
sub
ss
addb
pop
pusha
xor
sub
pop
arpl
inc
or
sub
lods
test
jg
xor
jb
and
jae
inc
les
mov
into
ljmp
jl
pop
aam
mov
xchg
outsl
lea
data16
fdivrp
push
std
jmp
inc
dec
lods
popa
inc
js
push
into
xchg
push
mov
in
mov
jecxz
mov
aam
repnz
jecxz
cmp
xor
pop
xchg
pop
xchg
in
incb
fcomi
jle
push
push
mov
mov
lret
cs
sahf
pop
jbe
dec
push
and
pop
in
divb
pop
push
sahf
pop
pop
aad
and
cmp
mov
mov
mov
lds
in
cmpsb
test
popf
pushf
fwait
xor
stc
pop
mov
pop
jb
pusha
fs
int
or
cmp
mov
subb
ljmp
sub
inc
cmpsb
sub
lcall
pop
mov
ljmp
jmp
insl
cwtl
lret
jae
cld
sbbl
outsb
stc
fstpl
add
or
cmp
xor
inc
and
mov
mov
in
ds
mov
inc
aad
jno
adc
pop
cltd
mov
cmp
dec
and
inc
or
dec
xor
pushf
shl
pop
inc
cmpb
pop
outsl
rol
cwtl
pcmpgtd
loopne
stos
pop
lock
leave
call
push
jbe
sub
mov
push
jae
subl
aam
ds
mov
xor
cwtl
sbb
dec
shll
inc
daa
sahf
dec
or
mov
fstp
outsl
fcmovb
adc
xchg
mov
dec
add
jle
sbb
adc
pop
loopne
std
mov
inc
sahf
outsb
sub
and
into
clc
je
hlt
repnz
les
sub
out
jmp
loope
fistl
lahf
ljmp
lahf
outsb
adc
out
lods
sbb
das
mov
cmp
cmpsl
inc
mov
shll
mov
dec
inc
push
pop
loop
jge
nop
mov
jmp
mov
sub
lahf
or
sbb
mov
or
scas
push
add
pop
mov
jo
scas
mov
pop
adc
nop
or
sub
and
out
int3
mov
shrl
fwait
mov
xchg
enter
fdivrs
add
jle
jl
in
adc
inc
xor
jo
cmp
cmp
popf
cltd
int
sahf
loopne
jb
ret
pop
fcompl
std
iret
ds
push
data16
test
add
cld
in
mov
mov
in
outsb
fimuls
in
xor
pop
sub
popf
add
fimuls
imul
and
or
add
cmp
push
cmp
adc
sbb
jo
sub
dec
jp
fisttps
out
jmp
jbe
xchg
push
int3
loop
xlat
lahf
scas
lret
cmpb
jbe
sbb
xor
jmp
push
or
and
mov
ja
lcall
and
mov
aaa
loope
aas
pop
lods
mov
fcomps
jg
add
lea
pop
inc
or
and
inc
into
xor
cli
or
jo
lea
jl
fisttpl
leave
adc
dec
dec
sar
fdivl
mov
data16
push
mov
adc
stos
call
jl
out
pop
jge
push
fistpl
add
add
sbb
mov
push
jecxz
lock
mov
cmp
cmp
loopne
adc
push
xchg
push
and
and
mov
dec
imul
sbb
lcall
adc
and
pop
adc
mov
jg
pop
cltd
mov
cmpb
cmp
sub
mov
mov
inc
mov
lcall
jmp
xor
jmp
cmp
or
cmp
mov
pop
cmpsb
and
stos
mov
data16
lods
sbb
nop
pop
sub
movsb
jbe
lcall
popf
int
decl
mov
dec
fdiv
adcb
push
and
dec
gs
aam
adc
mov
in
arpl
mov
add
mov
and
mov
or
and
in
pop
xor
insb
dec
addb
adc
popa
cmpsb
clc
dec
icebp
dec
xchg
mov
movsb
sub
icebp
jmp
cmp
incl
orl
xchg
inc
loop
adc
add
jb
gs
pop
es
cwtl
popf
es
inc
mov
lcall
out
test
mov
es
lods
sbb
test
mov
shl
stc
jmp
cmp
or
jecxz
daa
push
mov
int3
insb
mov
dec
ljmp
push
push
loop
in
mov
rcll
test
sbb
out
test
cmp
cmp
mov
addr16
aaa
ds
fisttpll
cli
lods
lahf
fimull
int3
mov
inc
add
sub
mov
or
inc
aas
fsubs
int
cmp
jae
add
loop
mov
or
pop
mov
sbb
inc
lahf
xchg
leave
adc
stc
cmpsb
aas
or
loope
jbe
push
sbb
inc
movsl
daa
push
pop
cmp
aam
lret
testl
rcrl
addl
dec
insb
or
cmp
call
popa
in
jo
in
xor
loope
lock
aaa
or
fcmovnu
cmp
dec
in
pop
xlat
dec
push
rcrb
das
nop
sti
nop
in
jns
scas
test
in
test
cmp
scas
ret
and
xchg
mov
adcb
loopne
bound
pop
mov
jnp
inc
sub
pop
add
sarb
cmc
sub
aam
arpl
jg
and
add
and
cwtl
jnp
sub
imul
idivb
sahf
or
cld
or
jecxz
cmp
dec
aaa
add
xchg
daa
lods
and
int
das
pop
imul
icebp
and
jbe
shl
and
enter
push
in
test
mov
sub
or
xorl
jmp
mov
dec
out
push
jmp
mov
xor
shrb
mov
xor
push
lret
xchg
mov
sbb
lds
outsb
cwtl
sbb
iret
inc
pop
pop
repnz
push
push
cmc
or
push
and
or
dec
out
cmp
insl
inc
cmp
push
push
mov
rcrb
and
ss
ficoms
jecxz
std
leave
outsb
arpl
jae
int3
or
repz
mov
xor
dec
out
and
mov
leave
dec
cld
pop
cmp
subb
or
cli
push
loop
sbb
repnz
jl
xchg
lock
jb
stc
mov
fs
or
xor
mov
fwait
cs
sub
std
jbe
mov
mov
dec
jno
in
pusha
fiaddl
mov
popl
std
inc
aas
hlt
imul
hlt
sti
out
pop
adc
jge
loope
adc
test
push
adc
gs
and
shrl
in
inc
in
add
push
fildl
cmp
cmp
testb
aaa
nop
jecxz
enter
repnz
push
push
and
and
movsl
imul
mov
fisubrs
mov
add
nop
mov
repnz
ja,pt
test
test
fisubrl
fsubr
xlat
inc
in
mov
xlat
sti
pop
mov
push
lea
push
inc
popa
scas
push
fisubrl
stos
sub
and
aas
decb
pop
rorl
push
aam
into
lds
sarl
stos
arpl
push
fwait
sub
jns
test
cld
ds
xlat
add
insl
pop
jle
rorl
mov
push
mov
ja
and
rcrl
cmp
xchg
aad
mov
xor
std
lcall
sbb
sbb
clc
daa
mov
mov
cwtl
rcrl
or
mov
andl
in
aad
test
mov
jmp
pop
jle
add
mov
in
xchg
lds
inc
into
xchg
out
dec
std
push
loopne
inc
je
mov
fstl
fidivl
pop
inc
mov
fdiv
dec
mov
xor
xchg
or
fsubl
xor
in
std
xor
jae
out
arpl
enter
daa
outsl
sbb
pmaddwd
jecxz
pop
jmp
jns
ficompl
ljmp
imul
mov
add
mov
cli
fstp
das
or
mov
pop
cmpsl
or
into
mov
movsb
push
mov
ds
jnp
jb
incb
inc
mov
adcl
stos
push
pop
pop
inc
lods
or
stc
stc
jbe
pushf
pop
or
or
dec
adc
loop
and
inc
mov
cmp
cmp
and
xchg
pop
pushf
inc
in
lods
arpl
sbb
fnstenv
mov
jg
jb
xchg
cltd
ds
xchg
pop
dec
movsl
incb
sub
jns
cmp
movsbl
enter
push
cmpsb
cld
je
imull
push
shrb
out
call
shlb
xchg
inc
popa
and
or
popf
mov
adcb
cmp
cs
push
out
pop
dec
mov
xor
xor
dec
pop
movsl
mov
lcall
jb
sahf
int
dec
pop
insb
aaa
sbb
push
arpl
or
adc
mov
sbb
pop
addr16
push
arpl
or
and
faddl
mov
add
lahf
cmpsl
or
jmp
inc
cltd
movsb
sbb
xchg
ret
inc
je
hlt
aam
sub
loop
xchg
in
xchg
sahf
push
mov
sub
and
js
cmp
adc
out
dec
stos
xchg
das
xchg
mov
inc
out
mov
cmp
std
push
add
jge
stos
xor
ljmp
push
movsb
xor
or
dec
dec
shr
int
xchg
std
push
ret
mov
or
xor
shl
sub
mov
pop
aam
sbbb
mov
xchg
mov
mov
aaa
shll
xchg
inc
icebp
add
insl
add
pop
and
ljmp
and
arpl
jo
and
fdivrl
int3
mov
sahf
inc
dec
sbb
push
call
lahf
push
dec
mov
mull
ja
outsl
out
imul
xchg
pop
and
push
iret
pop
je
sub
ljmp
addl
iret
jp
movsl
add
jo
aas
fstpl
or
xlat
in
rcrl
pop
mov
aas
or
dec
imul
nop
xchg
or
adc
cmp
and
lret
mov
xor
add
loope
jge
insb
testb
sbb
in
jle
sub
stc
xchg
shrl
outsl
js
test
out
testb
mov
aaa
jg
xchg
pop
stos
js
jle
ds
daa
adc
push
loop
jb
pop
xchg
sbb
cmp
daa
test
and
lds
out
inc
cmp
leave
add
in
insl
ret
movsl
test
push
xchg
and
mov
repz
sub
out
mov
dec
sub
mov
sbb
sub
mov
mov
pop
mov
test
mov
mov
into
sbb
cmp
mov
ja
pop
mov
mov
dec
sub
movsb
dec
repz
and
mov
lods
mov
push
jge
ffreep
jle
push
jnp
xor
cmp
or
int3
scas
mov
rorl
adc
dec
test
and
add
aaa
lret
jecxz
xchg
cmpsl
xor
shl
in
iret
fwait
mov
sbb
inc
into
push
scas
lcall
jbe
cmc
inc
pop
insb
aas
xor
mov
in
out
dec
and
add
loope
movsl
movsl
inc
push
xchg
push
movsl
repz
aaa
orb
dec
outsb
add
jge
insl
jp
xchg
dec
shlb
pop
xchg
scas
cli
ret
mov
pop
mov
roll
and
bnd
mov
stc
xor
jno
lods
inc
xchg
jmp
scas
dec
lahf
and
inc
xor
adc
fldt
jne
cmc
cli
push
std
pop
in
jg
sbb
movl
xor
pop
idivl
fwait
or
adcb
cmp
and
cmp
fsubrs
adc
add
ds
mov
or
ss
icebp
and
xchg
xor
fildl
mov
sbb
xlat
sahf
negl
xchg
push
loopne
nop
adc
inc
sub
dec
jge
push
mov
neg
into
pop
test
mov
arpl
in
mov
or
into
fdivr
sbb
mov
int
mov
pop
das
mov
cmc
jnp
pop
iret
mov
test
mov
adc
leave
test
adc
ret
lods
xor
xchg
push
call
mov
ss
cmp
push
incl
movsl
push
adc
pushf
clc
xor
lods
mov
loop
dec
roll
lock
cs
sbb
sbb
cmpsb
movsl
jae
push
pop
mov
push
jge
ja
cwtl
movsl
mov
in
leave
pop
cmp
or
mov
xor
adc
sub
adc
ror
mov
ja
movsb
in
dec
fmuls
jmp
test
inc
js
mov
dec
jns
adc
test
je
cmpb
dec
dec
dec
mov
sbb
push
and
frstor
cmp
fs
inc
pop
jle
cli
pop
and
sbb
add
adc
pop
adc
aad
inc
add
fwait
inc
int
out
movsb
xchg
movsb
mov
aaa
xor
push
icebp
scas
fs
xor
jns
pop
ficoms
add
xchg
sarl
adc
mov
loopne
es
pop
aas
add
scas
stos
jbe
mov
mov
cmp
imul
or
insb
mov
adcb
jl
xorb
push
ljmp
roll
add
int3
cmpsb
testb
dec
pop
out
sbbl
xchg
xchg
imul
cli
cld
cwtl
pop
lcall
mov
mov
int
loopne
sub
sub
insb
std
shl
into
sub
sbb
icebp
clc
mov
push
adc
xor
cmp
lds
xor
lcall
fcmovne
iret
je
arpl
inc
inc
fbld
adc
ficomps
jo
out
jno
gs
xchg
out
popa
adcl
outsb
mov
shlb
mov
popa
or
jae
addr16
dec
sbb
mov
lahf
push
bound
cwtl
inc
push
stos
movsl
jg
fcompl
sub
fmull
adc
adc
sbb
and
pop
cld
ljmp
mov
notl
mov
dec
push
mov
push
test
cwtl
call
inc
fiadds
in
je
bound
push
cmpsl
jne
sbb
jmp
lcall
or
int3
cmpsb
dec
ffree
lcall
dec
sub
int
sub
lcall
nopl
in
aas
pop
incl
jge
xchg
push
ret
or
fstl
dec
jl
test
mov
mov
push
xlat
xorb
jmp
enter
and
cmpl
int3
push
daa
sub
inc
repz
mov
leave
mov
aaa
lods
sbb
pop
xchg
push
test
fadd
out
sub
push
xchg
lahf
xchg
xchg
lret
or
and
in
jmp
nop
xchg
jae
push
sarb
adc
xchg
pop
mov
call
mov
in
pop
mov
imul
ljmp
push
in
and
xor
dec
xchg
lods
pop
in
push
ret
loopne
xchg
sti
repnz
add
mov
cmp
mov
mov
or
or
pop
dec
mov
sub
bound
es
push
xchg
pop
add
aas
sub
mov
mov
pop
dec
cmp
icebp
mov
adc
out
sti
std
sti
jbe
mov
imul
sbb
loope
decb
cmpsl
mov
mov
inc
ficompl
roll
xor
jp
rorl
sbbb
dec
inc
xchg
jle
dec
dec
cmpsl
add
sbbb
and
repz
dec
rorb
out
dec
jmp
and
das
ljmp
inc
add
adc
fildll
cmp
jne
js
loopne
jl
mov
jb
arpl
int
mov
shl
mov
adc
sahf
push
mov
or
push
inc
inc
jno
xchg
cmp
mov
jmp
aaa
scas
rol
lret
add
inc
das
sbb
imul
fmuls
adc
into
adc
int
mov
aam
repnz
imul
lods
mov
iret
mov
stos
inc
add
rolb
inc
outsl
push
add
mov
cmp
xchg
dec
pop
repz
in
push
and
mov
out
adc
popa
cmpsb
lods
jne
xor
adc
xchg
shrb
fwait
inc
not
jmp
mov
ljmp
jmp
mov
repnz
shlb
cwtl
ds
mov
aam
or
in
cs
cs
cmp
add
dec
cmp
sti
xor
jns
call
mov
sub
pushf
lret
cmp
push
inc
mov
pop
add
mov
inc
sarl
faddp
insl
pop
xorw
scas
jb
iret
push
pop
inc
mov
je
rclb
add
test
xor
mov
xchg
sbb
dec
scas
xchg
adc
aaa
mov
sbbl
cmp
hlt
je
jle
bound
scas
push
ficomps
sub
jo
jae
cmp
ret
ljmp
xchg
or
push
fcomps
and
or
popa
cmp
outsl
daa
dec
fildll
mov
or
push
stc
stc
xlat
xchg
or
je
or
andl
cmc
lret
ljmp
test
out
xor
outsl
mov
inc
insl
dec
movsl
mov
and
jge
sub
mov
and
insb
xor
clc
mov
movsl
mov
shrb
daa
adc
dec
cltd
std
pop
fdivr
sub
add
inc
push
lds
sahf
jl
mov
add
fidivrl
pop
xor
and
xor
jno
xorl
sbb
mov
in
mov
out
fldcw
stos
and
inc
stos
or
mov
sbb
pop
hlt
jle
fcmovne
push
mov
mov
arpl
lods
push
cmpsl
xor
out
loope
es
jp
in
push
xor
lcall
pop
mov
in
pop
cli
fidivl
cli
je
lret
push
fcoms
inc
mov
rorl
jnp
ja
pop
add
leave
lret
sub
xchg
repnz
mov
add
add
pop
mov
mov
mov
mov
rol
mov
andb
jnp
in
nop
inc
fimull
mov
ja
pop
sbb
stc
scas
push
mov
nop
aas
sub
push
add
fstpt
arpl
dec
enter
mov
jl
sub
xor
arpl
jns
xchg
mov
jo
jb
xor
cmp
aaa
push
cld
dec
mov
aaa
lcall
and
std
inc
jmp
aad
cs
dec
ljmp
xchg
xor
cmp
hlt
sahf
push
xor
icebp
fdiv
testb
leave
cmc
sbbl
addb
inc
mov
sub
jno
jecxz
pop
jne
ficompl
ss
xor
push
cmp
test
icebp
sub
and
incl
rcll
push
pop
cmp
js
inc
shll
aaa
arpl
fmull
hlt
fidivrl
fidivrl
jmp
adc
dec
xor
mov
fbld
push
mov
xlat
popf
js
adc
cmp
sub
add
icebp
dec
les
lcall
outsl
movsb
mov
movsl
bound
cli
push
jecxz
or
fmulp
cmpsb
xchg
or
hlt
mov
loop
push
and
subl
fistpl
incb
push
mov
mov
inc
jb
mov
or
in
mov
mov
push
jmp
outsl
std
das
fldt
sbb
in
mov
pop
scas
lahf
pop
inc
xchg
stos
dec
inc
rcr
push
push
test
aam
int3
cmp
sbb
mov
sarl
mov
cmp
and
mov
pop
adc
dec
dec
xlat
loop
mov
and
repz
gs
hlt
mov
cmp
lcall
dec
mov
test
idivl
lods
test
shlb
inc
mov
out
sbb
push
inc
fbld
cmpsb
inc
xor
in
adc
mov
insl
pop
push
or
push
dec
push
pushf
xchg
jl
xchg
or
or
mov
movsl
fcom
mov
mov
mov
and
fnstcw
adc
dec
push
in
and
sub
mov
fcompl
aam
in
mov
sub
inc
cwtl
mov
cmp
mov
dec
ds
cmp
es
mov
dec
adc
add
xor
xor
pmulhuw
insl
mov
mov
jmp
incb
ret
add
jbe
mov
test
mov
mov
xor
sti
jo
push
lahf
fidivl
daa
cmp
xor
add
jno
ja
or
ss
xlat
adc
test
sub
add
add
stc
iret
sub
cli
pop
mov
fstpt
test
cld
loopne
inc
push
xor
mov
cmp
jns
pop
jnp
test
push
pop
popa
in
lods
mov
dec
mov
mov
adc
popf
pop
divl
and
sub
fs
mov
dec
int
cmp
pop
lret
andl
imul
cwtl
leave
xor
dec
lret
das
mov
inc
repz
xor
in
cmp
xor
das
add
mov
xor
cmp
mov
scas
push
mov
das
push
push
movsl
inc
push
gs
adc
negl
or
push
es
adc
pusha
xchg
mov
push
adc
mov
or
test
in
mov
push
inc
adcl
mov
leave
inc
lds
shl
sbb
jmp
in
movsb
jnp
scas
lahf
stos
pushf
adc
mov
ja
or
iret
inc
push
inc
mov
enter
rcrb
in
pop
movsl
cmc
mov
pop
sub
sbb
leave
jge
mov
and
pop
or
rcrb
and
add
xlat
add
decb
add
movsl
das
or
pop
shrb
shlb
lods
mov
shll
fldcw
mov
lcall
sub
mov
adc
ret
mov
mov
jmp
in
dec
subl
inc
out
cmp
sub
xor
xchg
sbb
js
dec
call
sti
ret
psadbw
jl
xor
add
fildl
movsb
add
push
mov
xchg
js
and
stos
jo
daa
cltd
out
cmp
add
mov
push
leave
jbe
jb
adc
jae
pop
push
or
jecxz
dec
lret
sub
push
xchg
jle
or
int
and
mov
xor
test
pop
dec
popa
jmp
mov
sti
push
outsb
lcall
mov
arpl
pop
adc
ss
pop
cmpsb
or
fs
lcall
mov
idiv
dec
icebp
pop
adc
pop
mov
lahf
add
xor
xchg
push
cmp
out
and
inc
inc
add
incl
lret
fisttpll
mov
mov
cmpsl
mov
ljmp
and
xchg
dec
xchg
rcr
mov
stc
xchg
nop
fdivrp
movsl
adc
cwtl
add
cli
sub
iret
daa
movsl
out
dec
aas
xorb
test
cmp
into
push
clc
pushl
dec
insl
jmp
ret
data16
mov
loopne
out
mov
mov
scas
lret
mov
push
imul
jae
inc
xlat
and
pop
dec
mov
pop
js
mov
and
cmpb
cli
inc
cmpsb
popa
shlb
push
cmp
out
jne
xchg
cmpsl
icebp
lods
movsl
or
sub
leave
mov
jp
shll
mov
in
sub
pop
imul
add
test
xchg
jl
test
push
push
divb
cld
xchg
pop
jmp
aaa
or
dec
or
ja
pop
inc
ror
mov
outsb
inc
push
push
call
clc
pop
mov
testb
insl
pop
cltd
push
dec
addb
push
iret
and
inc
rorb
push
xor
dec
lods
sbb
dec
leave
cwtl
into
mov
testb
ret
es
pop
outsl
sbb
popa
jecxz
mov
or
std
and
ss
inc
hlt
push
mov
lret
sub
xor
jp
ja
lods
test
jmp
sbb
adc
pop
arpl
sub
dec
lcall
mov
ja
in
out
enter
cs
test
dec
loop
testb
andl
jae
lret
test
cmpsb
inc
adc
sub
fsubrl
inc
iret
pusha
ss
dec
into
ja
pop
mov
cmp
or
popa
jecxz
in
sarl
stos
in
loop
imul
in
lods
je
into
mov
pmaxub
sarb
out
inc
repz
pop
jl,pn
je
bound
loop
xchg
je
jmp
cltd
sbb
cmp
aad
pop
sub
pop
push
fisubl
mov
push
popa
jge
lret
xor
push
cwtl
mov
mov
cli
jno
pop
jnp
push
stc
xor
push
imull
bound
ljmp
mov
mov
or
fldcw
jno
add
inc
sbb
dec
and
or
scas
mov
pusha
inc
stc
mov
addr16
dec
or
push
mov
push
xor
popf
mov
mov
or
divb
mov
cmpsb
mov
sbb
addl
dec
ret
xor
pusha
test
push
or
xchg
ljmp
testl
aad
std
lock
add
jmp
push
test
stos
adcb
negl
xchg
rcrb
or
pop
stc
and
pop
pusha
mov
cmp
or
adc
ret
loop
cmp
scas
cmp
pop
xor
pop
ss
jno
sub
cmp
popf
imul
inc
lcall
jecxz
sub
adc
fsubrl
xor
fisttpll
or
outsb
xchg
jns
sarl
icebp
mov
into
pop
cmp
test
mov
push
cmp
es
jno
mov
sbb
movsb
jb
xor
test
aas
lods
cmpsl
icebp
mov
lea
adc
pop
aad
mov
fs
mov
lcall
into
push
inc
and
decl
and
push
out
lea
daa
nop
xor
sti
cli
imul
stc
cmp
cmpsb
lahf
outsb
lcall
pusha
pop
je
xorb
inc
pop
cmp
xlat
xor
cmp
add
scas
dec
in
adcl
shlb
xchg
mov
das
mov
xchg
ds
popf
adc
mov
push
bts
push
add
aas
cld
ja
mov
js
nop
es
loope
and
pusha
pop
mov
sbb
mov
fs
cmp
fcomip
int3
cmc
enter
cwtl
loop
push
pop
fnstenv
xchg
xor
test
js
mov
sbb
test
dec
xor
inc
roll
cli
pop
addr16
mov
mov
cmp
in
mov
ret
in
jne
aaa
sub
pop
mov
xor
movsb
mov
mov
sbb
fdivp
mov
jo
shrb
sub
test
mov
dec
or
in
add
sbb
xchg
sub
mov
or
or
xor
push
inc
fcmovbe
mov
in
inc
and
sub
je
dec
jno
mov
inc
and
sub
mov
enter
sti
dec
rclb
icebp
lret
enter
hlt
and
ljmp
push
push
xchg
fistpll
mov
adc
jge
in
and
lods
add
insb
lret
orl
lock
jo
pop
xor
cmp
dec
add
inc
dec
or
lds
cmp
lea
pop
jecxz
icebp
push
pop
inc
and
dec
and
xor
movsl
lret
sarl
das
xchg
xchg
test
dec
inc
and
add
pop
mov
pop
add
sub
or
xchg
test
movsb
dec
in
jmp
adc
add
cli
inc
jge
loope
invd
pop
sub
sbb
rorb
ret
mov
or
test
int3
mov
mov
push
ja
adc
pop
rcll
sub
repz
test
clc
adc
sub
cmp
in
rcll
sti
shlb
shr
rclb
pusha
mov
daa
cmp
or
movsl
jp
adc
and
sbb
stc
stc
imul
outsb
out
adc
ss
int3
xchg
pop
imul
mov
fisttpl
cs
lods
push
push
les
mov
pushf
or
lcall
stos
mov
mov
mov
sub
repnz
cs
repnz
cmpsl
decl
add
dec
dec
jnp
mov
icebp
and
sub
push
lret
fucomp
add
sub
adc
bswap
scas
push
hlt
gs
test
inc
scas
mov
or
jno
xchg
icebp
iret
add
sti
mov
fmul
mov
cmp
xchg
dec
lock
bnd
mov
sbb
add
rol
xchg
in
push
rorl
outsl
add
cs
cmpsb
repnz
adc
mov
aas
jns
sahf
imul
dec
cwtl
shlb
arpl
bound
mov
in
filds
sbb
sbb
sub
jecxz
insl
cmpsb
cltd
in
js
add
pop
push
fstpt
mov
jecxz
and
or
pavgw
push
inc
int
cmp
dec
push
sarb
push
jne
cwtl
aas
mov
out
sub
sahf
cmpl
mov
dec
jne
and
mov
lcall
jp
mov
scas
mov
cmc
cmc
jp
add
adc
stos
mov
lods
loopne
jl
mov
mov
xchg
pop
mov
jp
mov
cmp
in
mov
or
xchg
xor
xor
fsts
div
aaa
mov
inc
iret
inc
push
ficoms
push
xor
sbb
push
dec
inc
aad
jle
out
fdivrl
aas
test
in
sbb
cmpsl
test
pop
xchg
or
jmp
popf
sbb
push
fistps
push
aad
ds
lods
test
cmp
stos
imul
dec
mov
imul
scas
lods
push
inc
xor
mov
aaa
aas
jl
sti
js
xor
push
outsl
aas
sub
sbb
out
pop
sbb
push
sub
rdpmc
mov
jmp
mov
jg
xchg
dec
lret
adc
fstpl
cmp
mov
mov
jecxz,pn
push
pop
push
cmp
nop
mov
mov
adc
sub
sub
mov
dec
ja
aam
push
push
push
jae
sbb
push
stc
stos
pushf
lahf
outsl
ljmp
movsb
aam
push
sti
or
in
lods
out
sbb
jne
div
call
dec
add
jbe
sarl
mov
orl
push
push
nop
jg
subl
xchg
icebp
ret
sahf
adc
addr16
sbb
adc
cltd
mov
lret
xor
xor
leave
lods
mov
sti
adc
dec
push
scas
jnp
stc
dec
int3
std
jle
rclb
stos
xor
pop
sahf
xchg
jbe
out
sbb
push
push
jmp
push
xchg
or
jecxz
add
das
cmp
jecxz
sti
fs
int3
data16
and
and
jp
or
cmpsb
and
lea
movsl
lea
insl
cmc
out
test
jae
cmc
in
test
pusha
mov
mov
pusha
cmp
loop
je
test
mov
es
int
mov
scas
rorl
ret
or
in
sub
xchg
pop
iret
sahf
mov
sub
inc
leave
decl
lods
mov
cmc
fwait
pop
fsubrl
adc
test
imul
insl
mov
lock
push
xchg
aaa
cmp
push
add
xchg
pushf
jns
push
xchg
sbb
mov
push
jb
test
xlat
mov
adc
mov
jle
xacquire
xchg
mov
and
pop
shl
or
ret
cmp
dec
outsb
imull
adc
repnz
lods
aam
add
out
sahf
icebp
ficoml
idivl
push
xchg
sbb
sahf
mov
lcall
test
cmp
xchg
sbb
jl
xchg
lret
xor
inc
pushf
mov
dec
cmp
jb
mov
out
aam
in
push
jo
lods
mov
push
mov
pop
mov
mov
push
add
mov
dec
fstps
sbb
out
loopne
das
out
xlat
icebp
movsb
mov
lds
mov
popf
insb
sbb
arpl
sbbb
lcall
xchg
aam
fwait
pop
mov
imul
jne
sbb
inc
push
stos
push
mov
mov
mov
cmpsb
mov
shlb
or
push
out
dec
xchg
mov
dec
testb
mov
out
pusha
mov
addr16
fwait
mov
sub
stc
addb
cmp
incb
lock
sbb
setl
fsts
adc
pop
mov
xchg
xchg
imul
int3
jae
pop
fiadds
push
mov
je
xchg
sarb
shlb
out
pop
or
aas
push
dec
fs
call
shr
fidivrl
aad
mov
addb
cmp
sub
cld
mov
int
pop
cli
icebp
flds
mov
pop
out
add
dec
aaa
mov
dec
xor
insl
fs
inc
sub
cmpsb
sub
frndint
psraw
cltd
test
imul
mov
gs
adc
sub
mov
add
mov
xchg
push
jge
sub
add
or
or
lcall
xchg
jge
or
lret
cmpsb
jle
jbe
mov
mov
aaa
pop
mov
movsb
mov
mov
pop
imul
dec
sbb
mov
mov
pop
mov
dec
jge
push
test
add
ljmp
inc
in
and
outsl
push
fbstp
add
or
adc
sti
adc
sahf
lcall
dec
push
and
or
ret
rol
imul
push
dec
jne
bound
adc
cld
arpl
sbb
subl
fmul
lods
stos
mov
and
cmp
fucomp
push
inc
sbbl
nop
xlat
cmp
fwait
xchg
inc
lock
loopne
out
push
sub
lods
inc
fstpt
mov
gs
mov
pop
fadds
jno
xor
xchg
testl
test
cltd
push
cmp
jns
add
mov
jle
and
les
mov
add
xchg
outsl
xchg
fmuls
mov
test
push
pop
je
aaa
stc
jge
incl
adc
aad
mov
dec
int
push
enter
lock
lods
fcmovne
out
dec
adc
in
fsubp
pop
cmp
sbb
insb
push
dec
push
fwait
out
fcoml
f2xm1
callw
xor
popf
mov
xor
jmp
es
mov
jbe
push
add
pop
sbb
fldl
dec
push
lcall
pop
test
fistl
xor
popf
gs
jae
icebp
xchg
lods
shlb
lods
shl
jl
pop
shrb
sbbl
cmc
rolb
dec
xchg
imul
xchg
or
cmc
in
pushf
stos
mov
mov
jbe
jb
dec
shlb
pop
xchg
cli
jne
std
dec
js
in
fcmovbe
fdivl
or
stos
xor
out
aam
sub
lods
imul
dec
pop
pop
rcrl
sub
cld
enter
sarl
fwait
mov
sahf
lock
xchg
dec
lods
addr16
mov
mov
sbb
ljmp
jge
bound
pushf
iret
insl
or
cmp
aaa
or
adcb
cmpsl
or
or
insb
popf
add
dec
dec
xor
inc
clc
loop
int
cmp
push
cmp
sbb
dec
xchg
sbb
mov
fidivs
jl
inc
pop
xlat
leave
cld
sub
mov
aam
or
in
cmc
pop
dec
sbb
cmpb
jbe
rorl
sbb
xor
dec
movsb
push
sub
test
pop
loope
test
jg
jnp
in
flds
test
ja
sahf
inc
pop
aam
add
mov
jnp
jmp
mov
test
or
adc
mov
movsl
scas
cmpsb
idivb
or
jo
dec
jns
loopne
xor
xchg
jo
aam
pop
cwtl
lea
dec
push
cmp
jne
imul
and
in
cmp
icebp
addb
bnd
add
loopne
and
and
cmp
mov
inc
nop
rcl
les
test
cmp
or
bound
shlb
outsl
xlat
rclb
xchg
ds
aam
mov
adc
ffreep
iret
addr16
xlat
fistps
in
test
sub
into
add
mov
or
inc
jmp
push
mov
mov
movsl
shll
mov
ficoms
dec
dec
in
push
out
jmp
lret
lret
aaa
stos
sub
leave
in
xor
iret
leave
out
loope
hlt
dec
sub
push
js
aad
fcmovnb
mov
mov
sbb
dec
mov
or
jbe
xor
movsl
sub
movsb
loop
pop
in
mov
daa
in
xchg
stos
push
leave
fs
xor
sub
inc
es
mov
sub
jno
aaa
inc
inc
enter
and
inc
push
mov
lds
lock
mov
cmpsl
cli
and
aas
out
cmp
mov
call
or
rorb
cmpsb
adc
hlt
outsb
loope
push
sub
add
sbb
pop
push
and
pushf
or
int
insl
jne
mov
outsb
enter
sbb
fsubrs
fists
in
js
bound
fsts
dec
dec
jle
rcrb
mov
cmpsb
pop
sarl
aas
push
ja
cmp
sub
mov
cmp
push
or
iret
push
imul
lret
jae
xchg
ret
xor
pop
jge
jg
sahf
mov
jmp
testl
inc
mov
mov
jne
scas
inc
add
fnstenv
adc
popa
dec
enter
mov
pop
mov
sbb
lahf
or
scas
imul
sbb
je
sarl
adc
push
sarb
cmp
pop
pop
lods
leave
cmpsl
fidivrl
sbb
movsb
outsb
xlat
xchg
mov
mov
push
jge
scas
xor
popa
sahf
cs
mov
cwtl
mov
sbbl
arpl
jno
push
xor
daa
lods
pop
addb
test
jb
mov
jno
loope
add
and
add
pop
cmp
xor
mov
cmp
lock
push
pop
push
jns
sbbb
ds
mov
shll
and
mov
cmp
jbe
jne
test
cmp
xchg
insb
cs
cli
and
push
pop
mov
cli
sbb
in
lds
xor
sbb
lea
in
xchg
test
scas
xchg
mov
xchg
push
in
jne
lods
lret
jge
aam
jne
sbb
push
add
cmp
inc
push
nop
cmpsb
out
lock
or
in
push
das
call
daa
in
jnp
push
pop
jp
aam
out
cmp
std
out
nop
pop
fidivrs
in
mov
inc
xorl
push
rcl
mov
icebp
stos
testb
xchg
fsubrs
adc
jecxz
pusha
fstpt
test
out
adc
mov
lods
daa
pop
mov
inc
add
xchg
iret
push
in
cmp
jl
and
mov
bnd
out
insl
jl
test
sahf
mov
xchg
mov
or
pop
mov
pop
inc
mov
cmc
shll
jno
push
push
bound
cmc
pop
adc
loopne
sbb
add
pop
cmp
fcompl
xor
stc
nop
jo
inc
cmp
sub
and
in
insb
mov
bound
ret
stc
popf
mov
jge
jmp
jl
sbb
inc
das
popf
clc
ss
cmp
xchg
pop
xor
push
popa
stos
out
cltd
lock
pushf
in
fcompl
gs
fldenv
repnz
mov
loope
add
les
mov
cmp
jmp
adc
movsb
sub
clc
sub
pop
mov
push
in
cmp
ret
nop
pop
int
or
dec
aam
addr16
push
push
xchg
pop
and
xchg
mov
cmp
push
add
ffree
loop
repz
dec
rep
rdmsr
lret
outsl
xchg
bound
and
loopne
mov
sarl
les
clc
mov
jne
xchg
in
sahf
sbb
jno
sbb
cmp
or
xor
pop
loopne
scas
cmp
jge
mov
cwtl
or
mov
pusha
cmc
xchg
sbb
xchg
inc
adc
aam
adcl
mov
push
xor
lea
dec
xchg
and
out
pop
mov
out
dec
idivb
and
sub
inc
mov
js
add
ret
loope
mov
xchg
stos
rcrb
pop
fistpll
jne
mov
jo
xor
ficompl
cli
or
mov
pop
jnp
pop
nop
out
sub
mov
pop
les
or
inc
aad
test
fs
enter
lea
pavgb
int
pop
mov
xor
xor
lahf
or
popa
dec
lods
roll
repz
mov
push
inc
dec
lahf
add
sbb
or
loop
inc
sbb
or
pop
add
subb
jl
test
lret
push
outsl
testb
leave
es
push
dec
in
movsb
les
mov
fcompp
dec
fdivp
dec
lock
push
xor
fsubp
and
inc
xchg
mov
push
mov
inc
lock
roll
mov
mov
or
adc
divb
aaa
cmpsl
inc
xchg
xchg
dec
dec
dec
jp
sbb
pop
mov
or
sbb
cmp
leave
ljmp
jno
xchg
jb
mov
daa
lahf
sub
cmp
cltd
mov
push
mov
xchg
mov
enter
xlat
addl
loop
aaa
cmp
int3
loope
adc
js
mov
out
in
add
mov
xchg
daa
adc
xchg
lahf
dec
xchg
roll
sub
mov
es
andb
pushf
pop
xlat
or
dec
xor
aaa
es
xchg
dec
cmp
jo
clc
out
test
jle
mov
inc
movsb
dec
mov
xor
mov
std
addb
cli
xchg
adc
das
ss
mov
lret
arpl
imul
and
jbe
test
inc
arpl
mov
mov
rolb
cmp
adc
je
pop
lds
rcrl
xchg
mov
aam
jnp
lret
push
in
jae
mov
ds
cmp
adc
mov
jg
xchg
nop
jne
cmp
daa
push
push
xor
pop
inc
sbb
cwtl
push
fnsave
push
sbb
loope
pop
mov
fnstsw
cwtl
mov
dec
pop
dec
dec
rorb
pop
in
leave
jno
shll
jmp
pushf
xchg
subl
loop
sahf
adc
mov
mov
adcl
jbe
fldenv
aas
push
decl
push
pop
insb
push
scas
repz
daa
mov
cmp
mov
out
xor
lahf
xchg
sti
sub
in
mov
xchg
adc
pop
jne
js
xor
pop
movsb
in
jnp,pt
adc
adc
dec
mov
ret
aad
test
pop
std
lds
test
fldl
testb
fistpll
daa
ja
pop
jge
sub
popf
pop
push
and
shl
xor
cmp
jo
push
xor
dec
lds
shr
add
mov
sbb
popf
call
inc
pop
adc
pop
pop
sub
gs
mov
aas
imul
into
inc
adc
mov
sub
and
das
and
mov
push
leave
pop
mov
ss
jg
pop
cs
into
pop
xlat
mov
rorl
cmp
sbb
mov
ss
cs
xchg
lahf
push
xor
and
into
orb
cld
mov
les
mov
ret
push
sbb
mov
ljmp
xchg
hlt
xchg
pop
pop
jo
call
mov
pop
mov
push
ficompl
cwtl
call
and
jecxz
imulb
test
test
mov
adc
addr16
and
inc
sbb
in
jmp
popa
lock
add
in
sahf
int3
mov
imul
jmp
fwait
mov
movsb
das
inc
jmp
mov
js
ret
dec
bnd
leave
bound
dec
mov
in
push
lds
xchg
xor
sub
and
inc
pop
dec
popa
dec
sub
imul
cmp
jne
dec
xchg
mov
mov
imul
jg
das
mov
mov
popa
cmc
data16
jb
lods
add
xchg
lods
mov
loope
inc
shrb
jnp
inc
in
mov
push
adc
xor
scas
cmp
pop
cmovl
jae
or
enter
xchg
out
aam
sub
shrb
inc
pop
push
push
cmp
aam
inc
pop
push
scas
jmp
pop
out
sbb
loopne
sub
adc
movsb
mov
jge
sbb
dec
insb
stos
in
es
or
sbb
adc
mov
add
cld
movsl
pop
or
mov
pop
jb
dec
xor
fcmovb
pop
ss
enter
subb
jb
mov
test
imul
and
lret
xor
into
or
and
pop
or
and
mov
jmp
ret
out
sub
pop
fistl
jg
push
jno
inc
adc
ret
mov
pop
cmp
mov
cmp
nop
push
call
fxch
arpl
add
xchg
inc
bound
repnz
out
adc
xor
sahf
iret
xor
cmp
push
dec
inc
repz
pop
push
add
out
inc
push
mov
cmp
je
jg
lcall
test
sbb
xor
rcl
loope
call
adc
sar
fs
sbb
cmc
mov
cmp
push
xor
add
mov
ret
cltd
stos
outsl
cmpsb
roll
insl
repnz
sarl
shrl
into
xorl
or
cmpsb
push
int3
sbb
pop
enter
popf
incl
cmpsl
dec
iret
inc
push
jp
scas
ljmpw
mov
das
xchg
jecxz
stc
mov
cmp
aaa
mov
iret
ljmp
pop
fcmovnb
cs
ficomps
rep
adcl
jbe
inc
dec
jg
push
xor
xchg
dec
testl
mov
int
dec
mov
sub
pop
xchg
mov
fsubrs
ja,pt
adc
lahf
popa
mov
fcoml
mov
loop
push
aas
mov
ret
stc
test
ds
pop
int
mov
mov
call
outsl
les
aam
ja
insb
dec
jnp
fisttpll
fcmovnb
lcall
outsl
dec
out
lock
cmc
pop
mov
add
mov
jbe
cmc
inc
leave
lcall
jno
xor
sub
testb
pop
xchg
ret
pusha
test
xlat
inc
xchg
cmp
sub
pop
push
daa
xor
pop
adc
dec
dec
mov
in
arpl
cli
xchg
popf
sahf
gs
mov
test
mov
jecxz
jae
gs
and
jne
lods
stos
fdivs
or
pusha
mov
xchg
movsl
dec
mov
mov
sahf
pop
add
pop
pop
dec
scas
jbe
add
dec
cmpsl
aaa
mov
aad
cmpsl
in
les
mov
lret
xchg
lcall
movsb
jo
jg
insb
cmp
inc
mov
mov
iret
dec
lods
mov
outsb
sub
push
insb
ficomps
push
rcll
pop
push
cmpsl
lcall
push
xorl
rcrl
xor
rcr
push
mov
rclb
and
fadds
cmp
push
mov
int
shrb
lods
mov
nop
out
mov
jle
lock
out
fwait
inc
cmp
mov
push
push
xchg
rcrl
test
xchg
in
pusha
push
fsubs
mov
imul
add
mov
sub
inc
push
mov
mov
and
xorl
les
jg
scas
ds
jp
mov
jnp
loope
and
testb
dec
pushf
js
lds
cwtl
cmc
pop
stos
loope
mov
into
out
pop
stc
addl
xor
mov
mov
jno
popa
notb
lods
jle
push
and
addl
push
xor
push
inc
cmp
cmpl
es
push
mov
jle
push
sub
cmp
dec
dec
and
scas
ret
je
mov
aad
in
out
jp
adc
sub
xchg
fwait
rcl
and
mov
xchg
out
sbbl
setbe
insl
fsubr
mov
and
movsb
sbb
stc
outsl
cs
and
scas
sub
jnp
mov
aas
push
push
mov
mov
adc
mov
scas
pop
int
sub
push
inc
setl
pop
fs
ljmp
ds
inc
jns
inc
inc
mov
sub
xor
lods
aad
add
stos
and
cwtl
mov
jg
pop
pop
cmpb
xorb
jno
jle
push
cmp
nop
cwtl
js
movsl
sahf
sbb
mov
cwtl
inc
pop
mov
out
add
std
pusha
mov
sbb
enter
sahf
xchg
sub
mov
test
inc
mov
pop
inc
subl
xorb
push
mov
add
xor
orl
in
jns
sbb
scas
cmp
jne
sbb
dec
popf
out
cs
push
jp
and
repnz
push
push
push
in
push
arpl
aas
jmp
push
fisubs
jne
in
or
pop
adc
or
imul
out
xor
fwait
into
idiv
jnp
mov
outsl
aaa
push
lea
pop
push
icebp
addr16
cmp
dec
mov
mov
mov
sub
loopne
xchg
scas
iret
or
or
insl
dec
cmc
int
in
xchg
mov
push
rcrl
jg
xchg
es
pop
sbb
sbb
mov
inc
loope
outsl
push
imul
in
xor
stc
in
mov
and
js
sub
cmpsb
mov
inc
aad
into
xchg
nop
repnz
scas
dec
push
sti
jnp
es
sbb
add
xor
lcall
dec
mov
jb
andl
daa
jmp
push
and
inc
scas
outsb
sahf
cmp
adcl
scas
sub
and
popf
call
mov
xchg
pusha
push
aam
xchg
hlt
cld
xlat
jb
sub
or
or
jecxz
out
fsubrl
repz
mov
out
insb
test
insl
scas
stos
fcomps
inc
shrd
pushl
dec
push
ljmp
push
and
xor
aam
mov
fwait
sub
dec
iret
in
fisubs
cmp
jb
xor
mov
sub
jmp
lcall
popf
loopne
jmp
incb
js
push
fs
xor
dec
repnz
cmp
jge
inc
jecxz
pop
enter
dec
adc
sbb
sub
in
in
xor
push
shrl
in
out
cmpsl
aaa
test
xchg
push
or
in
adc
xor
cltd
sbb
ljmp
std
insl
shr
lds
xchg
je
popa
pop
sub
test
ja
or
aas
xchg
lods
jmp
xor
sub
dec
outsl
test
ljmp
pop
lret
jbe
pushw
fucomi
mov
lods
jbe
dec
inc
bound
push
pop
adc
std
xchg
lret
shlb
pop
fnstcw
jecxz
or
cli
sub
xchg
int
sub
mov
pop
iret
mov
inc
inc
cld
adc
cmp
cmp
sub
loop
pusha
pusha
xchg
fcoms
pop
outsb
dec
and
inc
cmp
lret
dec
jo
pop
test
lods
insb
fadd
lods
gs
sub
outsl
data16
dec
aaa
gs
aad
out
insb
inc
or
adcl
je
cmpsl
rclb
or
fcoml
xchg
mov
call
addr16
adc
rclb
push
test
jo
xor
loope
hlt
pop
dec
and
loopne
adc
push
pop
mov
xchg
in
and
sub
stos
mov
push
mov
xchg
fs
cmp
mov
mov
mov
pop
push
adc
pop
nop
test
bnd
jle
push
mov
mov
scas
mov
push
movsl
inc
sbb
sbbb
inc
div
push
data16
cmp
inc
cmp
xchg
add
shrl
mov
loopne
int3
mov
lock
mov
nop
repz
imul
out
jle
mov
mov
cmp
cmpb
or
mov
xor
inc
dec
scas
aam
scas
enter
fwait
repz
ljmp
adc
xchg
mov
jp,pt
mov
test
cmp
fists
imul
in
data16
pop
push
dec
ja
enter
repnz
add
cmp
push
aas
imul
push
push
jl
sbb
loope
lods
lods
adc
shlb
ljmp
push
adc
ds
xor
fcomp
xchg
add
dec
ja
jne
sti
pushf
divl
fimuls
adc
adc
add
fstpl
rorl
sbb
push
xchg
insl
cmp
inc
std
or
ljmp
jl
lock
xchg
rorl
adc
rorb
or
mov
iret
sahf
inc
imul
out
or
xchg
mov
scas
lods
jb
mov
lea
lcall
jecxz
sarb
hlt
leave
sbb
dec
pop
rorb
sbb
dec
adc
imul
cmpb
jmp
lret
adc
pop
add
xchg
insl
cmp
push
push
in
cmp
inc
jns
aas
aad
xchg
xlat
mov
loopne
inc
aam
push
pop
ficompl
test
xchg
pop
cs
enter
jnp
xchg
repnz
loopne
mov
adc
jbe
cmp
jbe
in
daa
sub
fdivl
jecxz
mov
mov
in
shll
mov
or
leave
mov
hlt
jns
push
mov
mov
jbe
cmp
mov
cmpsb
jge
dec
dec
or
aam
scas
sub
cmc
sbb
xchg
popf
cmc
or
xor
sub
cmp
repnz
pushf
cmc
mov
lock
ljmp
cmc
fisttps
xor
rclb
sbb
jecxz
enter
aaa
das
xchg
jg
add
adc
lahf
mov
sbb
lret
sahf
xor
test
add
push
pop
adc
ret
xor
inc
push
add
lds
shll
ja
hlt
mov
pop
or
stc
and
adc
push
inc
cmpsb
mov
mov
xor
orl
daa
ss
adcl
insl
mov
mov
scas
imul
jbe
dec
in
or
shl
cltd
movsb
add
sti
and
jae
xchg
cmp
jmp
ss
jg
mov
addr16
aam
mov
and
imul
sbb
inc
scas
arpl
lret
push
cmpsb
mov
test
xchg
pushw
jp
loope
dec
xchg
ljmp
mov
jnp
dec
fsubrs
add
adc
dec
arpl
lds
pop
inc
push
das
lock
and
loop
ret
mov
lods
pusha
in
fistl
stos
scas
data16
pop
rorb
imul
pop
mov
dec
inc
jp
loop
divl
test
mov
mov
sub
sub
cmp
mov
insb
push
inc
test
arpl
rclb
push
xchg
push
sbb
sub
fidivrs
xchg
addr16
sti
sti
shl
jne
sti
sbb
lods
ror
es
dec
lds
sub
std
jge
movb
ror
stos
lcall
scas
and
imul
ret
mov
dec
or
add
adc
lods
adc
ljmp
aas
sarb
in
incl
pushf
rcrl
in
pop
and
sub
sahf
xchg
xor
fnstsw
mov
cltd
dec
dec
adc
inc
jbe
fmull
lods
sbb
adc
jae
mov
addr16
rclb
pop
in
lret
pop
popf
outsl
outsl
xchg
inc
lea
xchg
or
lods
sbb
out
xor
imul
dec
sub
sbb
into
dec
and
out
mov
inc
xchg
sub
xchg
les
jmp
xchg
jo
imul
mov
jg
idivl
mov
and
cmp
jns
fs
movsb
add
fs
adc
icebp
mov
out
idivb
push
lods
cmp
jae
dec
dec
out
and
call
cmpsb
mov
ljmp
sti
arpl
push
xchg
add
cmp
sub
outsb
mov
mov
mov
jno
dec
cmp
jg
mov
or
decl
lods
push
repnz
push
imul
xchg
ljmp
ja
fildl
xor
pop
mov
lahf
xchg
jmp
or
shlb
adc
mov
jnp
pop
sbbl
cltd
sub
iret
lret
adc
lcall
pop
xchg
cmp
pop
dec
mov
cmp
dec
jp
mov
xchg
inc
rclb
mov
imul
je
xor
lds
lret
enter
adc
int3
cmovbe
push
dec
or
pop
push
inc
leave
jge
push
or
push
daa
cmp
fisttps
pushf
ds
pusha
cltd
sti
push
add
jg
jns
or
test
adc
dec
andb
and
pop
xchg
sbb
jmp
dec
jae
dec
lahf
inc
js
mov
fisttpl
xchg
imul
jbe
sbb
addr16
push
sub
pushf
out
xor
cmp
xchg
sub
addr16
jb
clc
mov
clc
mov
fcomip
xor
cmpsl
push
xchg
pop
xchg
jo
pop
lahf
je
adc
add
push
adc
jp
mov
or
sub
cltd
mov
call
sahf
cmp
pop
lcall
jbe
xchg
xor
mov
jns
inc
repz
adc
arpl
lea
cwtl
sub
nop
nop
or
test
sahf
push
or
cmpsb
cmp
or
pop
mov
adc
cld
pop
arpl
movl
fildll
sbb
cmpsl
jp
adc
test
lret
dec
inc
ljmp
mov
stos
andb
fidivrs
mov
ds
mov
outsb
lret
sbb
scas
scas
fdivrs
push
mov
fabs
push
nop
cmp
test
leave
int3
fwait
in
xorb
fs
mov
popa
loop
shrb
out
add
adc
out
inc
add
push
cmc
int
xchg
in
in
push
inc
or
xor
dec
dec
jle
cmpsb
mov
pop
popa
sub
addl
and
push
rcrl
js
cmp
inc
jle
scas
mov
or
ljmp
arpl
aas
fstl
sub
mov
out
in
gs
push
leave
aam
cmp
fwait
cmpl
mov
outsl
test
fcoms
fxch
cmp
or
ds
mov
jle,pn
int
adc
ret
jmp
sub
cmp
lods
mov
aad
xchg
inc
sbb
inc
xchg
dec
mov
inc
enter
iret
mov
xor
shlb
pop
repnz
inc
sbb
scas
cs
add
cmp
ficompl
fs
push
incl
daa
lods
mov
std
xor
cmp
xchg
in
es
mov
loop
adc
mov
jne
mov
outsl
test
xchg
out
adc
in
fistpl
je
jno
and
int
sbb
jo
dec
sbb
popa
mov
adc
arpl
cmpsl
pop
sbb
shl
cltd
iret
lret
out
jecxz
movsb
mov
sbb
mov
aam
enter
jnp
mov
out
repnz
push
aas
mov
push
mov
jle
fimull
add
pop
mov
popfw
and
xchg
add
fcomps
jle
dec
pop
testb
js
outsl
cwtl
pusha
mov
movsl
imul
arpl
insl
shll
nop
nop
clc
and
test
lods
out
mov
xchg
xlat
leave
lret
mov
stos
and
adc
mov
shrl
in
or
cmp
xchg
jns
xchg
adc
cld
jg
push
xchg
pop
hlt
add
imul
inc
dec
stos
add
aam
mov
dec
pusha
movsl
addr16
adc
lret
push
int3
jecxz
dec
or
jecxz
cmp
xor
xor
sub
imul
cld
aas
add
mov
aam
inc
cmpsb
mov
cmp
movsl
push
inc
movsb
movsl
sub
repz
mov
lret
mov
outsl
in
jecxz
dec
add
sbb
xor
mov
pusha
test
mov
nop
pop
jo
sbb
roll
jp
rcrl
dec
popf
and
inc
cwtl
xor
jb
adc
push
sahf
ds
push
subb
mov
aam
les
repnz
mov
jp
jns
sbb
inc
jno
pop
out
repz
movsb
fwait
jmp
je
into
mov
and
lds
les
jns
xchg
cmp
xor
adcb
jb
stc
outsb
sbb
test
add
inc
incl
fwait
fwait
scas
daa
ja
mov
bound
or
inc
lea
or
jae
cmp
push
inc
push
inc
sti
pop
jle
and
add
aam
push
jg
mov
es
jbe
push
jo
cmc
test
xchg
sbb
adc
shll
pop
mov
popf
pop
push
clc
fbld
sbb
lds
ficomps
nop
inc
andb
cwtl
sub
xor
movsl
inc
movsl
out
ja
test
pushf
cmp
pop
sub
pop
loop
in
dec
stos
or
imul
push
addb
push
ret
inc
and
push
jae
lods
fistl
jecxz
bound
jns
sub
imul
xchg
out
in
loopne
push
rcrl
imull
lods
inc
lods
xchg
insb
mov
int3
push
cmpsl
sub
movsl
ret
cld
in
inc
mov
rcll
fs
mov
dec
jne
test
imul
aas
adc
sbb
push
pop
add
mull
aam
and
popl
lds
pop
inc
loop
cmp
xchg
in
arpl
or
shl
add
movsb
daa
ret
in
xchg
mov
shlb
dec
cltd
jg
xor
into
out
jle
aaa
pop
push
dec
cmp
dec
subb
lret
call
adc
xchg
jae
sbb
mov
mov
cld
pop
jle
inc
andb
out
daa
jns
mov
mov
ret
divl
add
and
or
gs
arpl
add
insl
ss
jl
ja
pop
xchg
and
lret
arpl
xor
fwait
je
fisubl
push
inc
out
mov
outsl
popa
mov
or
mov
mov
lret
push
lret
mov
cmp
or
adc
dec
xchg
cmpsb
push
sub
lds
mov
lret
push
xor
mov
adc
jp
sub
mov
jbe
pop
add
lods
xor
push
mov
enter
fs
cmc
aaa
xchg
dec
sub
aas
sub
andl
inc
in
mov
pop
out
xchg
dec
sub
ds
mov
xchg
pop
sarl
jmp
pop
outsl
xchg
roll
nop
sbb
jl
stos
fcmovne
pop
imul
push
cltd
or
cli
mov
es
fwait
pop
cli
sbb
es
stos
rcr
add
aad
add
hlt
out
sbb
push
movsb
loop
lcall
adc
scas
mov
adc
xchg
and
call
fwait
and
test
out
aaa
lret
stos
or
shrl
inc
push
sub
scas
adc
cmp
mov
sarl
mov
notrack
mov
aas
push
test
cmpsb
idivl
inc
fwait
cmp
hlt
pop
push
add
stc
dec
push
dec
gs
jecxz
das
push
movsb
jmp
rorl
call
scas
aaa
jns
pop
and
hlt
test
sbbl
stos
lods
mov
pop
cmpsl
xlat
pushf
cmpsl
insl
mov
xchg
fnstcw
andb
push
movsl
aad
das
xorl
in
adc
movsb
rolb
movsb
xchg
ret
ficoml
aad
push
jae
lret
inc
cmp
imul
xor
and
add
xor
sub
inc
xor
aad
sbb
sbb
mov
scas
sbb
mov
push
dec
outsl
aaa
cmp
imul
xor
and
lods
loop
test
push
inc
enter
loopne
xchg
scas
jno
out
push
loop
cmp
cld
dec
inc
aam
lds
xchg
sub
jle
or
mov
lahf
imul
insb
sbb
dec
ljmp
lret
mov
sub
jns
jle
and
dec
out
mov
ljmp
mov
or
or
scas
jo
jbe
hlt
mov
mov
in
daa
testl
notl
add
scas
addb
jbe
cmp
cmpsl
jne
mov
mov
into
cmpsl
dec
inc
mov
lea
test
mov
inc
mov
aas
cs
or
movsb
icebp
cmpsl
sub
mov
jl
lret
push
sub
call
dec
hlt
loop
scas
mov
andl
popf
sub
test
leave
mov
enter
sbb
repz
sub
push
mov
push
sahf
fwait
shrl
cmp
lcall
enter
and
adc
pop
pop
repz
lret
fidivs
and
inc
push
lcall
jmp
lods
inc
sub
add
fcoml
mov
insl
inc
stc
xchg
pop
nop
mov
fnstsw
out
les
rorl
mov
fldenv
fimuls
in
scas
add
inc
mov
fsubl
add
cmpsb
push
sub
orl
repnz
adc
cmp
mov
pop
in
int3
in
or
mov
mov
out
mov
or
cmpsl
outsl
pop
dec
mov
gs
popa
or
das
jl
mov
cltd
jp
xchg
testl
xor
mov
enter
xchg
xchg
icebp
inc
cmp
aas
adc
jbe
inc
xchg
repz
pop
hlt
orl
inc
sub
lods
pop
testl
mov
imul
mov
push
jg
dec
aam
and
cmpsl
jns
or
cmp
cmp
pop
inc
adc
jno
insb
ss
call
mov
es
mov
inc
jne
sub
xor
loop
push
pushf
pop
stos
sub
bound
scas
xchg
test
jb
push
or
xchg
fisubs
clc
mov
mov
sbb
popf
jmp
cli
inc
sbb
push
les
pop
xchg
mov
sub
aaa
cld
mov
and
rcrl
push
add
lods
jge
icebp
in
sbb
lret
in
sub
mov
inc
sahf
or
pop
inc
ds
aad
dec
dec
fwait
xchg
push
pop
or
je
xchg
inc
push
push
dec
lods
and
xor
jmp
pop
sar
movsl
cld
push
fnstsw
loopne
push
popa
loop
mov
and
mov
fs
icebp
lret
aas
aaa
dec
cmp
bound
pushf
xchg
test
mov
dec
loopne
lea
xchg
mov
hlt
lock
pop
sbb
sbb
jae
fistps
cmpsl
dec
dec
les
pop
outsl
stos
pop
popa
out
mov
pop
popa
repz
sbb
mov
int3
mov
jbe
xor
and
mov
inc
pop
iret
mov
sbb
push
push
xlat
jge
mov
pop
popf
pop
sub
cmp
js
adc
push
mov
js
xor
pushf
xor
sub
fs
xchg
pop
sti
jge
dec
or
jo
add
sub
test
mov
daa
test
ret
push
lods
pop
es
push
jp
add
leave
and
lcall
popa
mov
mov
outsl
jle
je
aam
mov
mov
arpl
bound
push
int
repnz
xchg
push
in
aam
cmp
sub
mov
lds
jbe
add
inc
fadds
mov
pop
jae
sbb
mov
xchg
push
and
add
cli
push
mov
xchg
ja
movsl
mov
std
push
or
shll
pop
mov
pop
flds
sti
arpl
mov
dec
push
pop
add
movsb
jno
ljmp
dec
gs
rcr
xchg
loope
test
loope
or
insb
inc
bound
cs
push
xor
mov
es
jo
mov
jecxz
xor
pop
in
push
jbe
inc
clc
sarb
jns
lcall
adc
loope
or
stc
es
xchg
sub
mov
clc
sti
or
add
es
xchg
jp
adc
mov
repnz
xlat
sbb
roll
sahf
daa
add
mov
mov
xor
or
jl
movsb
inc
pop
mov
dec
pop
test
ret
jg
pop
sub
jmp
ficoms
jb
mov
subl
aas
jnp
insb
stos
dec
push
movl
bound
int3
inc
test
lcall
dec
loope
mov
xor
push
cmc
mov
fldenv
nop
dec
jp
dec
aas
ret
push
adc
or
mov
mov
mov
clc
movsl
data16
sahf
dec
mov
add
out
mov
mov
jae
neg
push
mov
add
jnp
and
mov
jbe
xor
cli
in
push
lcall
inc
xchg
and
test
xchg
xchg
pop
in
inc
pop
adc
scas
in
jo
push
cmc
mov
ja
leave
rcl
xor
out
push
or
dec
into
in
ljmp
xor
shlb
sbb
adc
movsl
daa
and
xchg
jmp
xor
dec
cmp
pushf
dec
sub
cmp
pop
mov
pop
movsl
fidivs
mov
push
ret
adc
dec
mov
out
enter
dec
addr16
in
and
jg
sub
incb
xchg
mov
xchg
ds
fldenv
push
cwtl
xlat
mov
and
and
pop
shrl
mov
rcr
fs
lods
fwait
outsl
xchg
pop
xchg
inc
pop
pop
xor
lods
push
jecxz
cmp
stos
push
insb
add
adcb
mov
cmpsb
sbb
inc
cmp
aaa
inc
cmpsl
mov
add
mov
in
and
clc
mov
push
pop
in
lahf
and
jg
cmp
or
or
pop
gs
movsb
sub
jne
push
jae
iret
ss
inc
add
xchg
dec
inc
je
dec
adc
sbb
pop
or
push
sbbb
xor
inc
cwtl
rol
mov
mov
aam
int3
add
mov
les
sub
xchg
xor
int3
mov
cmp
adc
in
je
mov
mov
jno
nop
scas
or
popa
and
sti
daa
out
jmp
les
sbb
scas
mov
cmp
mov
push
shll
mov
xchg
cmpsb
cmp
xchg
jns
xchg
push
lcall
adc
iret
insb
lds
xor
xor
call
fisubl
enter
ficompl
iret
pop
addr16
pop
das
mov
in
fisubrs
movsb
call
mov
cmp
lds
xchg
lret
push
adc
sub
addb
dec
inc
lods
insb
iret
test
popa
jmp
add
mov
or
adc
dec
or
jmp
js
dec
push
lods
jbe
fisttpll
test
and
ja
scas
sahf
mov
sahf
push
sahf
jp
push
idiv
inc
pop
insl
pop
pushf
mov
pop
pop
xchg
mov
pop
dec
rcrl
sbb
popf
xchg
and
xchg
cs
mov
arpl
cmp
or
leave
dec
add
pop
div
imul
xorb
mov
mov
nop
sub
cs
shl
xchg
notl
mov
sbb
lock
jno
jns
rcrb
jmp
mov
inc
test
cmp
pop
add
xor
shlb
and
mov
ljmp
or
xchg
fistpll
fcomps
sub
jo
iret
stc
add
sub
stc
imul
testl
jecxz
lahf
xor
mov
out
sti
mov
pop
outsl
mov
and
iret
sub
pop
insb
test
or
in
ret
aam
mov
in
cmc
nop
or
in
popf
pop
sbb
fcomps
loope
push
mov
or
roll
xor
add
sbb
lret
pop
xor
in
aad
mov
out
stos
cmpsl
lret
sti
mov
outsb
shll
xor
xorb
cmp
add
dec
lret
fisttps
add
add
sbb
pop
mov
push
imul
mov
lret
pop
outsb
outsl
and
enter
mov
pop
mov
mov
rolb
xor
sbb
dec
loopne
inc
rcll
mov
dec
ja
lods
mov
xchg
popf
jmp
cmp
mov
pop
lcall
mov
ss
ss
push
sub
in
fbstp
jno
or
jle
pop
xchg
sub
mov
lcall
fwait
jecxz
mov
pop
ret
sbb
xchg
jns
pusha
shlb
add
roll
fmul
call
add
jno
fldt
je
arpl
fucomip
pop
mov
fucomi
jecxz
mov
and
pop
mov
mov
aad
mov
aas
add
mov
sub
inc
xchg
icebp
dec
arpl
imul
cmp
mov
bound
jne
pusha
sar
inc
test
addl
mov
jg
xor
cmp
push
cmpsb
jmp
jne
mov
movsl
dec
outsl
inc
cmpsb
sbb
in
jb
jno
movsb
mov
sbb
sahf
cmc
imul
dec
sub
or
mov
sub
stos
dec
bound
push
sbb
mov
sbb
ret
adc
fmul
mov
test
ss
lahf
out
and
bound
sbb
jns
in
mov
gs
cmp
test
enter
out
cmpsl
push
xor
inc
out
mov
rcl
xchg
fs
hlt
neg
leave
xchg
sti
mov
mov
xchg
add
movsb
loop
ljmp
xor
mov
xor
cmp
jnp
sbb
mov
cmp
xchg
ja
cwtl
movsb
sub
imul
fists
fst
jp
mov
fldenv
sbbl
and
loopne
fidivs
imulb
outsb
dec
ret
cmp
jb
jecxz
adc
add
ficompl
dec
cmp
adc
jecxz
and
cld
fisubrs
iret
call
xor
mov
shrb
mov
mov
js
mov
lods
add
enter
orl
scas
ds
call
pop
push
inc
sarl
movsl
adc
popf
push
xchg
add
cmpsb
enter
sbb
loope
and
shl
push
in
lea
mov
arpl
fists
dec
mov
and
mov
mov
fistps
cmp
loopne
jno
xor
sub
ret
add
jecxz
sbb
ds
cvtps2pd
pop
xchg
je
or
mov
adc
cwtl
add
push
or
mov
jl
sbb
sbb
int
in
push
neg
scas
outsb
cli
leave
pop
mov
pop
sahf
cltd
mov
mov
fs
inc
std
testb
or
push
add
sub
scas
leave
mov
enter
jo
dec
lret
aaa
in
pop
insb
adc
mov
adc
and
mov
cmp
in
lret
ret
sub
into
enter
and
mov
sub
lock
mov
insl
jmp
sarl
dec
es
jg
jae
mov
push
fsubs
test
hlt
sahf
pushf
cmpsb
decl
arpl
sbb
out
pop
lret
mov
cmp
mov
ljmp
jno
adc
adc
addr16
xchg
mov
mov
pushf
aam
or
pop
push
mov
in
imul
stos
scas
mov
push
lea
outsl
jae
es
fs
lret
xchg
int3
jb
cmp
jae
test
push
cmpsl
pop
mov
pop
insb
mov
cmpsl
dec
out
jbe
sbb
daa
mov
xor
cmpsl
inc
fcoml
sbbl
outsb
pop
xor
push
arpl
shll
push
jge
xchg
fbstp
aas
sub
aad
mov
repz
lret
xchg
mov
and
push
test
pop
arpl
test
cmp
pop
mov
rolb
inc
push
imul
inc
movb
fistps
push
mov
stc
inc
clc
and
scas
lods
outsb
mov
pop
in
cmp
fwait
cld
mov
push
dec
xchg
loop
nopl
iret
std
adc
mov
or
or
push
dec
xchg
xor
sarl
dec
in
pop
mov
roll
push
in
imull
dec
lods
add
test
in
adc
dec
test
mov
aad
sub
lahf
pusha
sbb
std
xchg
xor
loope
xor
fnsave
stos
and
and
popa
cmp
sbb
faddl
stos
test
sti
testb
xchg
mull
mov
add
jbe
and
ret
sbb
rcl
call
aaa
es
xor
sbb
out
les
ret
and
inc
aam
jmp
push
shlb
out
dec
outsl
ret
in
cmp
inc
push
pop
adc
stos
lret
jbe
xchg
lds
push
rorl
cli
cmp
jbe
rcl
dec
jg
xor
push
cmpb
push
cmp
xchg
bound
jg
mov
ret
in
loope
repnz
jge
mov
adc
jmp
sbb
xor
movb
adc
jle
jl
jle
pusha
cltd
jae
sbb
cld
popa
xchg
leave
sti
dec
push
jbe
data16
bound
push
fisubl
inc
dec
push
outsb
inc
inc
gs
sub
add
test
jae
dec
jl
int3
add
pop
or
popa
xchg
cmp
loope
xchg
imul
xor
shlb
or
ss
aaa
ret
leave
push
xor
dec
push
lahf
dec
push
pop
je
jnp
loope
pop
xor
jmp
popa
xchg
pop
ret
push
orl
stos
lret
push
mov
xor
je
bound
inc
push
pushf
outsl
and
inc
jmp
hlt
ffree
inc
mov
add
xchg
loope
ds
mov
inc
inc
out
sbb
fdivrl
xor
shll
pop
repz
dec
bnd
roll
pop
push
jns
xchg
sbb
and
or
sbb
add
dec
addr16
add
jnp
xchg
lahf
in
clc
int
mov
out
and
jl
data16
aam
filds
push
rcl
test
mov
add
inc
daa
adc
mov
test
outsl
mov
dec
cmp
pop
rcll
inc
xchg
clc
and
pop
xor
arpl
add
inc
sbb
lods
xor
pusha
daa
stos
iret
lahf
in
pop
data16
jle
mov
scas
mov
je
mov
adc
call
fsubs
imul
out
sbb
cli
fisttpl
fstps
inc
sbb
test
cmp
jmp
jmp
cmp
out
scas
mov
outsb
stc
jp
fwait
aaa
std
mov
loop
ljmp
js
idiv
push
test
mov
std
outsb
jge
std
pushf
addb
mov
fisubrs
jmp
jmp
insb
inc
cmp
into
sub
dec
cld
xchg
mov
push
push
popf
jecxz
test
outsb
xor
push
leave
in
fnsave
jb
lret
aas
xlat
mov
jnp
out
or
pop
hlt
lods
mov
xor
mov
int
mov
andl
scas
jbe
aaa
dec
or
clc
fcomi
stos
fsub
mull
or
jecxz
test
and
adc
mov
and
fwait
xchg
mov
mov
adc
mov
mov
jno
movsl
push
mov
sbb
stc
dec
inc
push
loopne
in
or
fimuls
ret
mov
and
into
in
in
adc
je
inc
mov
aaa
popf
mov
inc
pushl
ja
jmp
adc
or
dec
dec
sbb
lods
add
push
xor
stos
enter
ds
mov
stos
sbb
or
push
movl
test
mov
setl
dec
xor
xlat
mov
pusha
std
enter
pop
xor
in
mov
in
add
hlt
sbb
stos
std
negb
mov
cmc
test
mov
cs
pop
push
pop
cwtl
dec
ss
inc
movb
in
sti
push
push
xchg
fildl
test
xchg
fs
and
aaa
mov
and
or
bound
push
push
push
jle
lret
cmp
cmp
enter
push
fcoml
xchg
ds
cmpsb
pop
adc
xor
xor
dec
fiadds
inc
jne
sbb
lret
repz
js
aad
sub
je
lcall
sub
sub
sub
add
xchg
cltd
jne
sbb
jns
mov
sbb
push
jp
pop
jge
mov
imul
in
cld
adc
add
inc
lret
rcr
push
insb
mov
add
pop
xchg
mov
and
shll
jae
addl
add
je
push
dec
mov
fidivs
inc
shrl
cmp
testb
ret
push
lea
das
jne
push
pop
xchg
sbb
add
sub
sub
cmpsl
repnz
test
cli
test
lock
test
insl
inc
cmp
iret
in
scas
cwtl
scas
push
or
cmp
pop
inc
movsb
cmp
mov
sbbl
repz
ds
xor
subl
insb
js
dec
mov
xchg
loop
jnp
loop
sbb
lea
add
mov
mov
loopne
aas
jb
std
mov
xchg
pusha
mov
and
lret
mov
jno
pop
in
pop
fcom
rorl
ss
lods
cmpl
clc
jne
jle
sub
iret
and
mov
addb
cmp
stos
xor
inc
mov
repnz
jp
pushf
or
xchg
mov
cmpsl
mov
xchg
sub
add
inc
push
scas
inc
adc
or
insl
pop
mov
push
scas
fcmovbe
xchg
stc
movsl
or
jb
imul
sbb
mov
or
inc
clc
xor
rorb
inc
mov
sbb
push
rcrb
sub
pop
jp
jge
dec
enter
insl
and
push
gs
fadd
sub
lcall
mov
or
test
jnp
inc
pop
adc
addl
mov
jge
inc
mov
push
add
lock
adc
add
es
cmp
insl
nop
lahf
popa
iret
xor
cmpsb
idiv
sarb
icebp
mov
mov
sbb
mov
jecxz
pop
lret
movsl
pop
test
insb
mov
mov
nop
ljmp
into
or
imul
inc
xchg
pop
lods
inc
cmpsb
sbb
sti
push
adc
mov
xorl
lods
jae
jmp
lods
mov
mov
testl
gs
and
jmp
js
fisttps
movsl
cmpsb
aas
pop
fwait
cmp
dec
aam
cmp
data16
mov
out
and
repnz
add
fs
dec
jp
xlat
mov
sub
jae
fs
imul
into
stos
cvtps2pi
push
clc
mov
decl
dec
push
inc
rorb
dec
xchg
or
sarl
mov
add
push
add
test
cmp
imul
int3
cltd
adc
mov
mov
ljmp
andl
popf
mov
or
cmp
mov
nop
adc
int
cmpsb
shl
push
rcrb
das
fnsave
pushl
inc
stc
push
ds
in
sarl
sti
pusha
outsl
aad
mov
scas
clc
xlat
mov
push
cmpl
mov
icebp
add
lods
pop
orl
and
repz
sbbb
sub
ja
out
daa
mov
xchg
mov
sbb
push
push
int
mov
or
in
xlat
pop
leave
cwtl
pop
ret
addr16
and
cld
aaa
mov
sub
stos
repz
test
push
pop
shll
ss
js
and
daa
sbb
out
pop
movsl
rclb
or
cli
mov
mov
sub
mov
mov
out
loopne
or
xor
pop
cli
cmp
cmp
mull
xor
stc
pop
stos
inc
sub
rolb
popf
lock
mov
adc
and
nop
xor
leave
xor
and
je
inc
add
jg
ljmp
add
aaa
pop
fisttpll
test
hlt
push
inc
scas
push
mov
pusha
out
pop
sbb
hlt
jle
adc
add
push
hlt
mov
xor
pop
mov
insl
cmpsb
push
dec
pop
fst
icebp
inc
sbb
test
mov
push
inc
cmc
sub
adc
dec
mov
popa
and
mov
pusha
aas
xor
push
pop
mov
and
sub
nop
add
jb
outsl
popa
fwait
lret
test
negl
into
pop
out
add
sbb
test
jg
leave
je
mov
fistl
jge
repz
negb
movsb
pop
pop
insb
lea
jle
shrl
repz
add
mov
pop
adc
add
and
mov
dec
fwait
mov
cmp
scas
arpl
or
lea
iret
mov
cmpsl
lods
push
and
orl
push
test
setno
mov
repz
pop
jp
fsub
xlat
cli
sbb
jnp
std
jno
cmpl
mov
adc
ret
xchg
mov
inc
scas
dec
ret
sahf
lods
stos
add
cmp
in
sbb
cmp
xchg
mov
cwtl
leave
or
add
and
repz
inc
sti
scas
add
sbb
jnp
and
lret
mov
mov
movsl
xchg
lea
dec
insl
jo
mov
fidivrs
dec
and
or
ret
shrb
add
fcmovnu
mov
imull
push
insl
cmp
xor
icebp
jp
mov
das
imul
out
xchg
lcall
data16
and
in
mov
xchg
cmp
mov
sub
sbb
mov
pushf
mov
out
mov
push
jp
sub
mov
and
loope
enter
mov
jle
jmp
jmp
adc
ret
xchg
lahf
leave
and
pop
dec
int
mov
out
push
cwtl
jbe
int3
aaa
jb
xchg
sbb
xchg
sbb
jne
pop
stos
or
inc
cmp
jmp
cmpb
inc
jno
xor
nop
adc
lds
sbb
lods
jecxz
jae
loope
stos
ljmp
and
jmp
sbb
pop
sub
mov
lods
xchg
xchg
mov
inc
cmp
push
cmpsb
dec
int3
orl
cmpsl
cld
adc
fsubr
jle
and
testl
cmp
fs
loopne
add
xchg
out
mov
lods
aam
xchg
or
mov
fwait
jg
lods
shr
push
mov
cmpsl
add
jae
pop
adc
dec
imul
sub
lock
test
jle
les
mov
mov
and
ds
push
jns
mov
cmp
scas
and
xor
pop
xchg
jnp
jns
sbb
xorl
js
mov
iret
out
insb
mov
notb
out
stc
daa
and
imul
pop
bound
mov
popa
lret
xor
cltd
mov
jl
jno
cli
inc
enter
lahf
outsb
lcall
fsubs
sar
pop
test
leave
data16
popa
jbe
scas
ljmp
outsl
xor
xor
test
or
mov
xchg
sub
sbb
push
jle
int3
sarl
inc
xchg
dec
sahf
je
jb
adc
xor
pop
push
dec
or
loopne
inc
add
push
int3
outsl
xlat
fs
pop
and
mov
push
in
pop
sub
and
lds
cwtl
xchg
ror
sub
mov
fsubs
and
adc
xor
xor
dec
out
mov
push
cmp
int
push
mov
sbb
mov
mov
xor
mov
sbb
mov
lret
ja
xlat
push
in
mov
ja
int
mov
in
aaa
lcall
pushf
lea
daa
sti
and
cli
ret
push
add
inc
scas
mov
lods
push
xor
mov
cmpsl
add
mov
loop
jb
in
add
fisubl
mov
arpl
leave
dec
cs
rcrb
cld
pop
stos
mov
pop
cmp
mov
cmp
or
scas
push
aam
add
push
mov
inc
sub
and
adc
call
shll
ret
popf
cli
inc
je
int
jl
jbe
and
les
rolb
push
ret
jmp
loop
jg
in
xchg
jmp
insb
adc
repnz
jae
push
mov
loope
loope
jge
mov
ljmp
lcall
jmp
mov
arpl
add
subl
push
das
ljmp
das
push
push
lret
push
inc
js
outsb
pop
pop
int3
adc
pusha
mov
sbb
scas
push
inc
push
push
push
into
pop
jnp
adc
cmp
int
sub
mov
mov
mov
fisttps
push
aam
out
dec
std
idivl
adc
rcl
mov
sarl
mov
dec
push
mov
lods
xchg
jp
iret
int3
mov
test
cltd
ret
sub
loopne
inc
out
ret
mov
es
sub
jp
hlt
mov
add
std
xor
arpl
mov
sub
imull
push
jle
mov
sbb
das
inc
in
or
sbb
xchg
dec
test
lret
sub
xor
or
mov
dec
mov
test
inc
stos
and
or
aad
pop
cmpsb
int
cmpsl
ret
rorl
int
insb
sarl
data16
sahf
andl
addr16
cmp
mov
scas
mov
xlat
lcall
cld
xor
mov
mov
mov
fsubrl
cmp
push
hlt
scas
in
pusha
jle
cmpsl
daa
and
inc
mov
std
xchg
bound
adc
pop
test
push
xchg
pushl
fnsave
cmp
dec
pusha
test
cmp
mov
in
xchg
jg
cmp
mov
lcall
xchg
ds
decb
jmp
mov
mov
data16
jp
xchg
or
sar
pop
sbb
sarb
enter
dec
or
cmp
sub
sbbl
jl
insl
jge
mov
in
pop
mov
push
and
add
loop
fisttps
int
sub
sbb
scas
add
jl
pop
enter
mov
stc
fucom
fldcw
les
mov
xor
push
xor
xor
leave
inc
popf
push
push
cmpsl
aam
jl
insb
stos
xor
cmc
lret
or
aad
xchg
dec
push
cmpsl
jo,pt
add
dec
mov
into
xchg
pop
mov
mov
daa
mov
and
int3
dec
daa
mov
loope
imul
inc
aad
punpckhwd
loopne
inc
xchg
adc
push
leave
stc
xchg
pop
mov
mov
inc
mov
mov
mov
pushf
pop
aad
rclw
daa
sahf
movsl
sbb
ss
or
jbe
fistpll
cmpsb
adc
in
int3
pop
rcl
pop
cs
out
jns
jb
fadds
fldcw
jecxz
cltd
inc
and
xchg
stos
sub
jbe
loop
lods
repz
insb
fdivrl
mov
push
fstpl
cld
dec
push
jmp
cmc
outsl
add
stos
cmp
cwtl
pop
aas
rcrl
sub
mov
out
les
jo
lods
push
inc
lods
clc
fwait
add
test
cs
push
out
sub
push
add
xor
repz
loope
aam
or
lods
cmpsb
js
xor
mov
stc
nop
lret
cwtl
dec
scas
mov
sti
rcrb
stos
jnp
mov
or
add
xor
and
out
push
mov
shl
and
fs
orb
mov
xchg
adc
mov
je
pop
jmp
cmpsl
dec
pop
addr16
int
mov
lea
dec
shl
push
out
xchg
pop
testl
sub
lahf
out
lret
movsl
mov
mov
cltd
push
js
inc
push
adc
xor
mov
sub
nop
fldl
js
gs
jne
lsl
pop
ljmp
shll
aaa
mov
es
jne
jo
jnp
flds
es
test
sub
scas
dec
or
push
mov
lock
ret
pop
cltd
xor
iret
dec
add
xchg
aaa
xor
aam
jle,pt
mov
sbb
pop
stos
or
std
xor
rolb
outsl
in
outsl
mov
jle
mov
sub
cmp
jbe
mov
rolb
fstl
imul
je
aam
mov
add
mov
mov
and
pop
jecxz
mov
enter
inc
fisubl
imul
aas
out
push
imul
push
imul
insb
sub
sarb
in
rorl
sahf
mov
jne
push
shll
pop
test
push
sbb
out
inc
dec
jae
lahf
jp
or
push
adc
pushf
nop
xchg
pop
or
adc
fxch
mov
or
test
adc
aam
js
filds
les
jbe
push
repz
add
data16
mov
icebp
push
cli
sarb
movsl
xor
fcoms
fs
insl
jecxz
movsl
fstpt
in
cmp
or
mov
sahf
es
outsb
inc
push
test
mov
mov
fcompl
lret
push
xor
fimull
mov
and
mov
es
lds
fsubrs
push
mov
addl
and
cli
aam
jns
xor
pop
data16
cmc
sbb
jle
jae
sahf
mov
fcomi
xchg
jl
push
fwait
cmc
mov
sub
test
js
xchg
cmpsl
ja
pop
add
and
dec
jbe
mov
cmc
push
or
mov
or
and
and
xchg
push
int
push
imul
adc
lret
push
test
cmpsb
xlat
es
inc
adc
jge
xchg
and
int
and
je
xor
repz
xchg
dec
adc
mov
data16
repnz
aas
mov
sbb
xor
mov
jg
nop
jp
sbb
faddl
jl
jecxz
test
inc
inc
mov
jne
push
in
jp
jo
loope
scas
push
outsb
ja
or
push
fst
test
sbb
and
jnp
fldcw
ss
sbb
sub
imul
mov
pusha
rclb
or
ret
out
jle
rcrb
popf
or
jle
sbb
mov
je
imul
jmp
hlt
imul
add
and
sub
test
fisubrl
mov
dec
sarl
stos
inc
rcll
xchg
addr16
xor
shrl
jb
mov
or
mov
xchg
xor
cmp
jne
fwait
aad
cli
cmp
das
fldt
shrb
test
pop
adc
jp
mov
cmp
jne
sbb
stos
pop
push
stos
aas
rolb
mov
cmc
cmp
ret
std
outsl
add
xor
scas
stos
aaa
add
ljmp
sbb
gs
inc
dec
in
lret
mov
inc
in
sbb
dec
cmpb
sub
les
rolb
mov
inc
rolb
dec
add
cmp
jbe
cwtl
fwait
addr16
sbb
sbb
fiadds
nop
mov
enter
dec
mov
or
pop
cmp
arpl
into
test
mov
cwtl
jb
ljmp
dec
push
and
icebp
push
loopne
cltd
lcall
add
lods
dec
jb
shlb
xchg
cmpsb
jg
fwait
cmpb
or
or
inc
sti
pop
mov
or
aas
stos
mov
sub
mov
stos
pusha
mov
pushf
pop
arpl
jne
adc
dec
mov
mov
fcompl
and
out
ds
stos
and
int3
adc
cmp
outsb
mov
jae
subb
icebp
pop
push
aaa
mov
int3
arpl
rcr
cmpsl
mov
xchg
and
popf
xor
loopne
or
movsb
add
xor
mov
enter
cmpsl
pop
movsb
push
mov
mov
xchg
dec
loope
stos
ja
cmc
fstps
repnz
sahf
mov
xchg
xor
cs
pushf
bound
adc
add
inc
sbb
rclb
out
test
mov
stos
add
pop
test
outsb
imul
xlat
pop
jmp
out
inc
and
insl
pop
mov
psllq
sahf
sti
push
fisubrs
clc
push
in
push
test
xchg
stos
push
into
loope
fdiv
bnd
mov
add
call
dec
xor
cmp
clc
mov
xlat
fisubs
std
push
inc
cmp
cmpsb
push
mov
and
add
mov
fcoml
pop
movsb
leave
ret
int
aad
repnz
daa
aam
push
sahf
xchg
test
out
jo
sub
or
pushf
push
shrl
sbb
xlat
xchg
outsl
xor
add
hlt
fdivs
and
mov
xor
jecxz
pushf
inc
adc
cmc
jns
gs
ds
les
sbbb
dec
call
cmpsb
pop
negl
rcrb
iret
pand
arpl
mov
orl
inc
push
andl
sti
jae
movsb
ds
daa
mov
les
mov
add
mov
in
mov
dec
inc
subb
fnstsw
add
test
cmp
std
mov
xor
pop
in
push
lods
pusha
mov
frstor
pop
dec
stos
jo
shr
sbb
adc
addr16
out
nop
mov
lea
add
inc
int3
push
negl
push
stc
jne
jecxz
or
inc
bound
addr16
or
pop
dec
and
dec
fisttps
xchg
loop
lea
push
int
dec
xchg
inc
loope
cmp
pop
push
ret
and
sbb
push
dec
push
jmp
shr
or
aaa
je
dec
sbbl
pusha
popf
daa
into
imul
jg
sub
sbb
fwait
subb
outsb
xchg
dec
dec
and
sbb
sbb
fmul
add
in
sub
pop
inc
loop
add
repnz
ret
aas
jbe
add
lret
mov
test
rcll
lret
mov
pop
xor
mov
fisubrs
mov
into
test
shlb
and
ja
dec
pop
mov
push
adc
dec
jns
lock
mov
hlt
std
sar
adc
nop
xor
jp
jmp
mov
sbb
sbb
js
xor
sub
inc
mov
das
inc
mov
movsb
scas
in
ja
cmp
mov
or
mov
adc
push
cmp
mov
popf
clc
lahf
and
mov
cmp
push
cmp
lret
arpl
mov
loope
add
nop
mov
inc
sbbb
ljmp
fistpl
loopne
test
sub
push
cmc
dec
or
cld
lods
lock
push
lods
test
or
mov
pop
and
mov
test
jmp
adc
jne
test
xchg
aaa
in
jns
ret
shll
pop
stos
jmp
xorl
mov
xorb
mov
jno
jl
scas
mov
cs
xchg
test
jge
inc
adc
popa
mov
or
xchg
cmp
xchg
fistl
and
push
mov
imul
ret
or
lahf
mov
inc
aam
xlat
push
hlt
or
bound
and
cmp
sbb
mov
movsl
fstp
cmpl
fisubrs
sub
sub
pop
push
scas
test
push
sub
mov
mov
sub
add
adc
jp
dec
xchg
dec
inc
je
in
jg
mov
fsubrl
mov
movsb
shrb
scas
clc
mov
insb
xor
cmp
stos
fidivs
test
repz
into
sahf
dec
sahf
hlt
xchg
pop
xor
addl
add
and
mov
sub
xchg
cmp
dec
push
jae
call
pusha
in
or
mov
mov
mov
cmp
add
mov
cs
mov
sub
lods
dec
add
aam
lahf
xor
aas
je
mov
xor
sti
insb
sub
xchg
stc
sbb
lea
xor
xchg
pop
mov
outsl
mov
std
push
and
hlt
sarb
sti
nop
dec
shrb
lret
sub
mov
mov
call
mov
addr16
shr
ret
cwtl
inc
xor
imul
and
mov
cli
adc
dec
mov
mov
and
cmpsb
push
mov
fldenv
pop
out
div
scas
sbb
sub
loopne
fistpll
and
cmp
stos
mov
lcall
cmpsb
push
movsb
mov
jle
inc
shr
pmaxub
pop
stos
pop
add
out
jnp
lahf
or
cmp
xorb
jg
jp
aas
mov
stc
and
cwtl
cs
dec
hlt
cmpsb
push
fs
and
xor
lods
gs
push
mov
dec
addb
pushf
add
xchg
inc
jg
aam
dec
push
dec
repz
adc
push
jge
dec
adc
lods
pop
repnz
jecxz
notb
orl
and
mov
xchg
insb
and
popf
add
rcl
xchg
adc
cmp
and
subb
jae
shrb
les
aad
stc
and
fisttpl
nop
pop
ja
or
add
fwait
cmp
enter
nop
mov
add
sbb
add
lret
xchg
mov
pop
sbb
xchg
cmp
sbb
pusha
insl
lahf
lahf
movsb
into
and
stos
repz
out
sub
adc
dec
out
das
andl
lret
inc
leave
or
push
push
sub
cld
mov
sarb
add
sbbl
adc
xchg
ds
loope
int3
xor
nop
divb
cmpsb
dec
xchg
cmp
xchg
loop
addl
fisubs
and
stc
mov
sub
mov
pop
cmp
in
addr16
out
sahf
pop
cli
fmull
cmp
js
mov
pop
xchg
loop
int
dec
data16
scas
lds
lds
int
jp
mov
pop
enter
adc
jne
sahf
pushf
jns
pusha
sbb
fldt
sar
fcomi
xchg
or
test
clc
mov
sti
mov
stos
enter
std
pop
sub
mov
enter
fmuls
outsb
lfs
xchg
mov
push
xor
pop
fstl
rol
jle
sub
aam
xchg
and
cmp
xlat
pusha
lret
outsl
pop
out
mov
xor
inc
bound
add
repnz
mov
mov
dec
inc
xchg
cmp
and
outsl
fistl
pop
jmp
clc
push
shll
jae
dec
lret
add
dec
ret
hlt
fcompl
ret
aam
je
and
mov
sub
aad
push
incb
sub
pop
iret
inc
dec
data16
into
in
or
hlt
inc
or
push
std
shrb
jb
cmp
aad
jge
testl
jle
inc
xor
inc
outsb
movsb
mov
lahf
adc
lock
lahf
shll
jmp
sbb
arpl
xor
int
jl
pop
dec
sbb
mov
push
adc
mov
imul
jnp
aas
jl
clc
fwait
lock
push
test
add
mov
jne
cli
out
jmp
bswap
xchg
xchg
lock
roll
in
mov
add
lahf
push
mov
push
sbb
sub
and
mov
jno
lahf
stos
insl
call
add
pop
mov
or
in
lret
fisubl
leave
fiaddl
mov
stos
test
popf
outsb
iret
jo
mov
mov
mov
pop
stos
xlat
inc
mov
xchg
dec
push
or
lret
cmpsb
test
outsl
clc
nop
sub
or
lcall
or
or
lods
mov
sbb
ret
inc
sbb
out
jnp
pop
rcl
out
fwait
and
pop
icebp
push
add
iret
pop
addl
jmp
cmpsl
and
pushf
and
and
mov
stos
nop
int
dec
call
inc
mov
sbb
or
fnstcw
js
outsl
inc
fs
lcall
stos
clc
pop
or
test
orl
daa
leave
xchg
es
outsl
ja
call
shlb
stc
jecxz
pusha
in
sub
sbb
push
ret
ss
out
comiss
xchg
lcall
jno
pop
mov
xchg
lret
aad
bound
pop
inc
xchg
dec
mov
push
ljmp
mov
sbb
push
adc
out
out
sub
mov
mov
xchg
add
push
test
orb
int3
push
inc
in
fldenv
test
loope
mov
mov
pop
pop
or
cmp
inc
arpl
lods
js
std
in
jne
pop
mov
call
dec
outsl
js
add
test
shr
push
rcrb
dec
xor
pop
and
sqrtps
cld
dec
sub
sbb
or
push
cmp
add
mov
outsb
es
loopne
inc
sbb
or
jae
xchg
dec
mov
or
lods
pop
dec
ja
mov
xor
xor
leave
popf
shrb
pop
sahf
adc
sub
push
add
and
test
or
mov
lar
xchg
es
in
scas
xor
clc
xor
mov
ja
test
or
shlb
repz
dec
shll
arpl
cmp
aaa
nop
pop
lods
push
lahf
call
addr16
xchg
and
scas
fbld
dec
mov
hlt
fcomps
das
test
jbe
in
lahf
aam
adc
sarb
aam
xchg
mov
loope
push
or
ds
sti
sub
xor
mov
shlb
xlat
fwait
imul
mov
push
mov
scas
and
fs
mov
fisttpl
sbb
push
push
cltd
mov
xchg
push
das
outsl
push
lcall
push
into
cmp
mov
add
cmc
loopne
cmp
pop
arpl
mov
sarb
push
leave
outsb
jns
rcl
pop
in
cli
pop
mov
sbb
push
lods
daa
mov
stos
je
fadds
mov
mov
adc
fsts
mov
ss
inc
shrl
addl
mov
cltd
pusha
lods
or
imul
or
fsubrs
popa
ljmp
xorl
es
add
mov
out
jo
push
test
cli
js
xchg
sbb
sub
add
rorb
pop
mov
push
aas
fs
sub
pop
xlat
dec
out
fwait
add
arpl
data16
je
mov
in
dec
test
fst
sbb
stc
fdivrl
add
xlat
jge
inc
dec
add
dec
cmpsl
insl
call
cmpsb
int3
ffree
ret
call
in
pop
in
sbb
cmp
iret
outsb
push
pop
ficompl
add
adc
cmp
jle
or
inc
pop
xor
jl
or
sub
mov
jmp
mov
bound
xchg
xor
xchg
mov
xor
adcb
jnp
leave
std
sbb
rcl
and
cmp
push
call
sbb
ja
test
xor
jae
call
sarb
je
jl
into
jl
mov
inc
add
mov
adc
imul
xor
daa
test
and
insb
add
loopne
shrb
sub
jp
lret
into
pop
inc
xchg
push
pushl
inc
insl
leave
ja
stos
mov
push
pop
jno
and
jmp
or
xchg
mov
outsl
rol
call
cld
jbe
xchg
jb
roll
mov
lds
inc
inc
adc
mov
pop
sub
out
lret
aas
and
aaa
stos
dec
sub
jmp
pop
add
dec
rcl
jbe
test
mov
push
rolb
jo
vdivss
jl
xchg
imul
pop
imulb
jmp
xor
dec
dec
fisttps
sub
inc
aad
and
jns
jns
add
in
fucom
inc
shll
mov
cmp
out
sbb
mov
addb
insl
cmp
adc
cmp
cmp
cli
inc
addl
jg
mov
or
test
mov
imul
pop
adc
pop
rclb
lcall
and
pop
popa
ds
std
shlb
rolb
push
stc
adc
xor
fnstenv
leave
cld
mov
inc
aad
add
sti
shll
sub
jne
ljmp
dec
pop
add
pop
push
adc
sbb
push
sbb
dec
xchg
ret
outsl
jmp
adc
add
mov
leave
xor
fwait
jb
sbb
sub
into
ret
mov
xor
je
cld
hlt
aad
and
outsb
enter
dec
sbb
sbb
stc
scas
sub
jecxz
adc
and
and
pop
mov
fnstsw
jl
inc
or
in
mov
push
mov
sub
clc
sub
sub
scas
dec
pop
push
pop
pop
popf
stc
push
mov
push
mov
sbb
xchg
das
mov
fstpt
inc
or
sbbb
jnp
jle
fwait
mov
lret
adc
cmp
and
push
jb
dec
sub
mov
sub
dec
in
mov
imul
xchg
lret
idivl
test
jne
lods
addr16
mov
inc
lock
add
popf
aaa
mov
jo
push
mov
jge
adc
mov
adc
mov
dec
and
lret
jp
mov
mov
sbb
mov
or
lods
aaa
mov
loope
push
mov
jp
cmp
rcll
in
jle
hlt
pop
pop
mov
enter
mov
sbb
fsubl
mov
xchg
fisubl
lret
mov
jnp
sbb
into
adc
xchg
out
or
inc
push
xchg
or
or
scas
pop
fimull
stc
jbe
sbb
add
xor
fs
sub
ja
clc
add
mov
mov
inc
pusha
cltd
scas
push
lods
push
sub
pop
cmc
insb
outsb
add
mov
or
pop
push
push
xor
lods
jmp
xchg
mov
jno
cmp
ss
pushf
xchg
mov
rclb
lock
lods
in
push
push
loop
inc
lret
mov
fstpl
test
lret
sbb
ss
scas
ss
pop
or
int
dec
rcll
xchg
movb
pop
pop
xor
sbb
push
mov
mov
xchg
xchg
fidivrl
cmp
pop
adc
xlat
cmp
lea
inc
jne
icebp
pop
ds
cmp
aam
fmul
push
repz
punpcklbw
daa
add
pusha
mov
imul
inc
pop
in
adc
dec
popa
push
cmp
sbb
fwait
pop
mov
sbb
pop
movsl
daa
test
sbb
push
and
push
icebp
jns
inc
mov
dec
cmp
cmp
sub
mov
fstpl
jge
pop
scas
fcmovnb
inc
pop
lods
lds
es
push
cmp
cltd
push
xlat
jns
cld
and
fidivrl
sbb
push
mov
hlt
cmp
mov
mov
rcrl
adc
pop
or
jbe
in
mov
pop
xchg
js
mov
jecxz
insb
inc
cmp
pop
rol
adc
insb
imul
jle
lahf
repz
and
shlb
add
push
mov
ja
or
inc
xrelease
or
mov
fildl
fidivrs
pop
lahf
lcall
ret
push
insl
pusha
dec
cmpsb
sarl
imul
xchg
jg
test
leave
jp
sub
cmpsb
rcll
push
jbe
xchg
xor
sbb
jo
loope
push
xor
jp
ret
mov
inc
shr
leave
mov
jmp
pusha
inc
es
js
pop
out
push
cmc
mov
incb
in
stos
cmpsb
jg
sbb
in
aad
loop
pop
lret
or
xchg
xor
xor
sti
sub
leave
inc
loop
xchg
dec
rcrb
inc
add
cmp
push
sbb
adc
cmp
fsubr
mov
xchg
loopne
hlt
pusha
mov
sti
imul
cli
mov
addl
mov
dec
or
call
push
sbb
or
js
inc
out
sahf
cmpsl
xlat
push
jae
popaw
out
push
add
adc
push
imul
push
fs
sub
loopne
hlt
pop
xchg
popa
in
repz
and
or
dec
bound
push
out
test
jo
loop
inc
push
insl
jg
subb
push
xor
xor
add
stos
sub
sbb
int
pusha
jae
inc
iret
jmp
xchg
xchg
mov
and
add
push
fiaddl
enter
or
leave
outsl
sub
xchg
sbb
shlb
popa
movsb
and
leave
out
mov
adc
iret
jns
jle
fdivl
mov
clc
pop
xor
xchg
test
icebp
orl
add
sub
cwtl
push
lods
in
lcall
insl
push
lahf
mov
xor
loop
cltd
sub
jp
and
popf
adc
mov
je
into
pop
and
or
and
pop
mov
xchg
jbe
and
cs
push
lea
mov
cmp
dec
cmpsb
xor
popf
mov
xor
fyl2xp1
cmp
mov
cs
cltd
fs
cmp
dec
jmp
cmp
lret
pop
add
dec
pop
dec
pop
outsb
out
movb
mov
icebp
lcall
dec
jns
mov
pop
insb
cmp
scas
dec
xchg
scas
adc
cmp
movsl
adc
std
dec
jmp
gs
cwtl
bndldx
lahf
inc
imul
cmp
pop
rcrb
mov
mov
inc
pop
cld
pop
lds
mov
adcl
jae
scas
aas
movsb
inc
and
xchg
pushf
sub
adc
sarl
mov
inc
rclb
pop
cs
mov
fsubs
lods
push
dec
idivl
imul
pushf
inc
and
and
cmpsl
mov
jb
inc
imul
xor
mov
fisttpl
mov
lcall
mov
jp
loop
cmp
ret
ror
add
lcall
adc
sbb
movb
mov
jecxz
or
jno
and
mov
jbe
sbb
test
push
pop
enter
and
sbb
popa
insl
roll
lahf
stc
das
stc
sub
xor
pop
inc
and
sub
or
nop
fsubrl
mov
in
mov
stos
mov
cmc
aad
int3
sub
xchg
dec
or
xchg
dec
test
repz
sahf
jbe
push
jb
in
mov
cmp
test
sbb
mov
pop
xchg
sar
push
adc
cmp
repnz
ss
or
pop
insb
mov
xor
inc
pop
mov
adc
pop
aas
imull
mov
jmp
add
inc
jbe
mov
ret
pushf
add
inc
test
or
inc
inc
lods
shrb
dec
lret
shr
inc
push
or
or
add
subb
push
leave
xor
push
or
push
jne
pop
push
jecxz
xchg
test
inc
stos
jae
nop
jg
or
stc
dec
idivl
ror
xor
mov
movsb
das
jge
jo
jne
push
jbe
mov
inc
xchg
xlat
mov
push
add
mov
repz
popa
jbe
mov
or
cs
xchg
cmpsl
add
push
xchg
mov
gs
inc
add
cmc
lea
sub
add
repz
mov
pushf
add
ret
pop
mov
into
adc
sbb
icebp
imulb
fcoml
inc
shrb
lret
dec
pop
sbb
cltd
add
arpl
movl
and
shlb
test
inc
sub
cld
sbb
mov
add
jmp
into
dec
shll
ja
lock
xor
test
xor
cmc
sar
lods
gs
call
dec
pop
in
ret
xor
dec
mov
cmp
mov
jge
fdiv
sub
ljmp
lcall
jp
imul
xchg
popf
aam
lods
cmpsb
popf
dec
push
andl
les
push
addr16
sbb
mov
jecxz
decl
ss
insl
mov
sbb
rcl
adc
cs
sbb
stc
mov
bound
mov
dec
testb
inc
dec
xchg
in
ja
pop
pop
mov
pop
xchg
clc
push
clc
pop
xchg
std
jmp
adc
inc
and
adc
and
add
cmp
jp
pop
pop
call
cmpsb
in
mov
pop
rcr
and
lock
lods
jne
and
fmull
ret
mov
pushf
arpl
sbb
pop
stc
sti
stos
adc
mov
popf
ja
iret
adc
dec
adc
xchg
adcb
nopl
and
jl
xlat
mov
sbb
and
inc
push
or
xor
push
xchg
fimull
shll
int
insb
cli
add
push
cmpsb
fs
mov
ljmp
inc
cld
sti
cmpl
stos
and
andl
and
pop
cmp
jmp
or
push
pusha
pop
sub
lret
pop
fisttpll
repz
mov
fistl
mov
out
inc
and
rcrb
sub
jg
jo
mov
repnz
mov
mov
jno
loop
cmp
sbb
xchg
cmp
inc
jp
les
lock
jmp
fsubl
mov
add
pop
jmp
mov
pushf
push
jb
mov
adcl
sbb
inc
insb
iret
mov
xchg
lahf
sbb
or
and
add
cmp
les
xchg
leave
jle
or
sub
mov
jmp
jmp
inc
fs
xchg
or
cmc
pop
and
pushf
or
mov
fistps
mov
gs
sbb
fldcw
mov
hlt
addl
push
add
inc
push
add
sbb
and
icebp
jge
lods
or
mov
mov
cmp
bound
shl
mov
inc
dec
shlb
out
scas
dec
adc
xchg
inc
xchg
xchg
lods
cmp
push
test
outsl
fistpl
xchg
rcl
or
in
mov
mov
in
test
jo
mov
pusha
jge
rcrl
stos
and
jo
mov
fisubrl
xor
inc
jge
adc
sub
adc
push
out
mov
sti
nop
dec
loopne
cltd
std
pusha
pusha
jne
fidivrl
jp
iret
dec
shrl
and
out
sbb
dec
mov
sub
sarb
lods
inc
outsb
inc
sbb
dec
sahf
adc
mov
dec
push
mov
or
add
popf
push
shlb
push
add
dec
mov
lds
push
nop
lds
inc
and
xchg
mov
in
jne
mov
dec
pop
scas
dec
testl
xor
dec
mov
xor
push
xchg
pop
data16
mov
pop
cwtl
sbb
add
subb
cmp
idivb
and
push
sub
add
cmp
pushf
aam
and
loopne
xor
mov
test
push
push
lahf
iret
sarl
gs
sub
lcall
cmp
mov
pop
xor
cmc
stos
adc
jecxz
loop
mov
cmp
mov
cmp
cmp
xor
xchg
outsl
inc
jecxz
ficoml
mov
mov
sub
sub
jne
mov
push
gs
sbb
outsb
fs
mov
fldt
push
out
sbb
push
jmp
adc
pusha
mov
gs
pop
jno
mov
cmc
adc
dec
hlt
cld
pusha
popf
repz
lcall
fiadds
jl
mov
mov
xor
loopne
std
mov
xor
jl
add
mov
or
lods
mov
xor
mov
push
mov
pop
add
cli
int
outsl
in
xchg
pop
pop
insb
test
pop
idivl
add
sub
js
rcrl
mov
jbe
in
push
lods
xor
jge
movsl
cs
jnp
rolb
lldt
and
enter
and
cs
out
xchg
or
mov
push
sub
stos
int
jle
rcr
das
and
enter
pop
jne
js
jno
mov
into
mov
dec
sub
fs
dec
push
das
sbbb
pop
sbb
adc
stos
push
scas
insl
test
mov
test
and
pop
ret
in
xor
mov
xchg
or
fisttpl
push
cmp
int3
push
jae
xchg
movsl
imul
packsswb
cwtl
js
sbb
stc
mov
loop
into
rolb
pusha
scas
mov
out
in
lods
aam
outsb
push
sub
adc
ljmp
jmp
inc
jecxz
call
jnp
ficoms
inc
or
xchg
xchg
pop
sbb
xchg
inc
sbbb
inc
mov
dec
adc
shl
sub
insl
jo
add
inc
mov
insb
jne
or
inc
aaa
xchg
pop
lods
rcrb
and
push
lds
cld
enter
vpmulhuw
mov
cli
mov
out
cmpsb
sbb
inc
cli
mov
test
xchg
add
sub
push
xchg
push
sbb
pop
sarb
xor
sarl
std
ret
adc
add
pop
mov
pop
mov
jo
and
jg
imul
std
pop
xor
or
repnz
jo
ds
leave
inc
mov
mov
and
cmp
jl
jns
push
fwait
add
lahf
pop
pop
xchg
outsb
pop
testl
jo
inc
das
and
cmp
les
cli
push
es
in
repz
leave
mov
iret
mov
mov
sahf
in
inc
test
mov
jmp
loope
out
jb
and
out
dec
jo
sub
mov
movsb
pop
outsl
mov
adc
jb
daa
les
jg
popf
cmp
adc
pop
das
push
mov
sbb
push
xor
jmp
repnz
movsb
dec
xchg
aad
mov
xchg
test
jecxz
iret
inc
addr16
and
xor
pop
xor
pop
cmp
ss
cmpsl
cld
or
jecxz
mov
ss
mov
push
shll
inc
shlb
cmpsb
fmul
adc
dec
inc
push
and
pushf
bswap
pop
xor
jmp
js
mov
push
stos
pop
fwait
push
or
cltd
test
popf
std
lock
mov
shll
es
xchg
sub
inc
cmpb
jnp
inc
cmpsb
jge
stos
in
cld
jo
cmp
sub
imul
std
test
pop
data16
push
dec
sahf
and
sub
mov
mov
aam
adc
inc
mov
scas
and
mov
add
xor
mov
lcall
inc
out
out
fists
call
aad
dec
in
dec
cmp
mov
inc
and
fisttpl
mov
notb
nop
xchg
xchg
nop
jl
mov
xchg
cmpsb
fdivs
mov
jl
ret
add
dec
adc
addr16
inc
movhps
push
or
sub
inc
mov
inc
or
insb
jmp
xor
into
adc
stc
and
pop
lret
push
mov
outsb
sbb
lods
xor
add
test
lahf
xchg
or
sbbl
fistpl
mov
xchg
pop
push
fnsave
dec
jl
push
sti
insl
jmp
mov
mov
lret
sahf
cmc
not
add
inc
insl
inc
jmp
cmpsb
cmp
xor
mov
mov
inc
dec
jns
repnz
mov
divb
inc
sti
mov
fimull
loope
mov
and
add
popf
adc
jmp
adc
ss
adc
or
add
mov
fadds
jo
dec
es
enter
stos
mov
dec
out
sub
jbe
fbld
test
data16
sub
sti
and
rorl
or
imul
mov
popf
ljmp
call
js
inc
iret
mov
fistl
enter
mov
fisttps
lods
inc
dec
push
or
ljmp
push
mov
out
imul
ss
rcrb
jecxz
repnz
inc
or
pop
fisttpl
sbb
cmp
popf
mov
add
push
pushf
sbb
xchg
dec
push
inc
int
dec
mov
mov
pop
push
insl
daa
lahf
pop
bound
orb
je
jbe
xorb
sub
push
sahf
mov
mov
or
push
test
push
addb
cmp
fucomip
dec
and
adc
sbb
dec
cltd
add
sbb
cmp
fs
shl
std
pop
or
xchg
jae
dec
and
lds
pop
test
or
in
mov
push
xor
cltd
and
pushl
test
xchg
xchg
mov
std
xor
ds
ret
inc
in
popf
pop
mov
sub
and
pop
call
jmp
jo
mov
jbe
fidivs
aaa
pushf
mov
push
inc
push
cmp
stos
enter
daa
dec
pop
std
aam
jecxz
mov
lret
loop
mov
sub
es
movsl
push
or
pop
popa
inc
sbb
adc
jg
je
repnz
das
aam
loopne
jp
or
add
sbb
pop
mov
sbb
cmc
push
push
into
push
pop
add
cmc
cs
adc
jno
push
shrl
dec
cltd
push
xor
cwtl
arpl
push
in
insl
daa
mov
pop
cmpl
fdivrs
sub
rol
dec
rcll
mov
sbb
shlb
lret
daa
mov
fadds
lods
outsl
xchg
xchg
cmp
push
cmp
cmp
xor
cmp
dec
inc
pop
mov
xchg
mov
jg
inc
pop
lods
mov
jmp
icebp
push
repnz
adc
inc
sbb
in
ljmp
mov
mov
push
sbb
jae
in
aad
lods
pop
push
daa
jae
clc
jnp
pop
lea
pop
test
mov
dec
and
fsts
cmp
insl
jae
mov
ds
test
dec
inc
pop
movsl
add
xor
fstpt
xchg
or
test
add
out
es
adc
and
mov
jae
jbe
outsl
pop
sub
stos
pop
mov
fcomps
xor
dec
and
icebp
dec
add
popf
dec
and
clc
adc
cmp
cmp
loope
cld
pop
push
nop
inc
mov
movsb
andl
cmp
jmp
sub
push
popa
inc
adcb
addr16
std
fimull
cli
loop
sahf
pop
daa
out
rclb
fcmovu
mov
pop
push
loopne
mov
jg
movsl
scas
std
fstl
pop
ret
push
cld
jae
sti
add
pop
mov
loopne
mov
fcmovb
mov
sub
insb
testl
pop
dec
aad
lret
jge
xchg
dec
cld
sbb
jg
fcomps
je
dec
inc
push
scas
or
fsubs
stos
xor
dec
adc
mov
fdiv
jne
pop
mov
and
pop
push
lods
or
ret
lahf
add
lahf
xor
repnz
daa
jne
iret
sti
xor
add
dec
enter
cwtl
or
lret
je
jp
jmp
xor
es
fs
cmp
adc
sub
cmpsb
adc
loopne
cwtl
xor
sub
mov
divl
and
shrb
xchg
xor
outsb
push
sub
sub
fiaddl
fwait
jmp
sub
inc
sbb
into
lret
mov
adc
lret
sar
hlt
push
mov
int
cmp
ficoms
test
xchg
pop
iret
adc
mov
movsb
sbb
aaa
lods
fisttpll
xor
roll
and
dec
mov
dec
cld
jns
add
shlb
daa
loopne
scas
and
cmp
cmp
pop
sbb
push
dec
jmp
inc
add
push
test
aas
scas
cmp
sub
push
pop
dec
nop
xor
ljmp
popa
xor
dec
js
fistpll
int
sbb
pop
int3
in
int
add
decl
rcrb
fs
and
rorb
sub
stos
and
adc
repz
pop
out
in
fnstsw
int
mov
push
mov
aaa
jo
test
mov
inc
aad
dec
lock
mov
jecxz
adc
lahf
mov
mov
xchg
mov
jb
xchg
dec
xor
enter
push
shll
mov
addb
inc
jbe
and
enter
pop
xchg
jle
xor
add
repz
pop
lods
cmp
pusha
inc
lods
insb
fwait
sbb
push
or
shrb
pop
or
lret
imul
xor
out
add
mov
jne
hlt
dec
aam
xchg
adc
fsubs
push
inc
sub
push
jno
xor
or
xchg
jne
ljmp
stc
mov
mov
repz
out
adc
pop
jns
or
push
data16
mov
mov
jno
in
mov
cmc
mov
cmp
arpl
mov
jns
js
jmp
mov
shlb
cltd
fldcw
mov
fisttps
jp
test
xor
jno
ds
dec
arpl
push
mov
jbe
dec
movsl
repz
inc
cmp
fidivs
iret
rolb
mov
sub
and
mov
push
popf
mov
adc
mov
cli
and
aam
stc
insl
push
dec
jno
pop
rcrb
arpl
sahf
rorb
add
xor
iret
sub
fwait
into
mov
pop
jnp
add
xchg
dec
cmp
push
ds
push
push
adc
xor
cmpsl
daa
std
pop
out
mov
jne
subl
adc
or
jo
and
int3
into
stc
mov
stc
push
lods
shr
push
pop
popa
jmp
cmp
ja
cwtl
cs
es
inc
test
push
sbb
or
jg
sbb
xor
mov
pop
cltd
push
mov
inc
addl
mov
sub
mov
or
test
push
push
call
lahf
sti
dec
add
pop
lods
jmp
stos
pop
stos
rcrb
mov
pop
jns
es
popf
fistpl
ds
rcrb
or
rorb
inc
imul
imul
push
xchg
int3
fildl
psrlw
loope
push
cmp
pop
jo
mov
xchg
lea
out
add
xlat
in
fildll
add
stos
jns
dec
and
stos
dec
sbb
sub
cmp
mov
ret
sbb
mov
out
dec
mov
dec
sbb
ret
xchg
jnp
imul
inc
js
xchg
loop
ljmp
sbb
enter
jmp
es
mov
sub
xlat
or
add
push
pop
push
sub
adc
out
mov
in
mov
jnp
js
jge
mov
fbstp
push
shll
xchg
jnp
ss
add
shufps
mov
xor
inc
mov
lret
push
scas
mov
sahf
sahf
mov
mov
insb
jp
xchg
cs
enter
add
adc
xor
sbb
shll
arpl
sub
imul
lahf
add
jmp
nop
jbe
inc
xchg
icebp
cmp
dec
dec
or
insb
cwtl
fidivl
movsb
adc
jp
std
repz
and
push
mov
movsb
sub
incb
in
movq
cmc
xchg
pop
jmp
dec
mov
mov
push
xor
xchg
sarl
mov
dec
and
adc
enter
jb
add
mov
sub
push
test
or
jae
je
pop
shll
xor
popf
mov
or
and
cmpsl
jl
fmuls
push
inc
inc
inc
cmp
aas
aad
icebp
xor
cli
pop
subl
or
adc
out
xchg
lds
out
push
mov
push
cmp
ds
ret
lea
xor
dec
ja
sub
jl
sbb
push
sub
and
push
insl
mov
imul
cld
pop
jae
cs
xchg
mov
icebp
xor
mov
jp
out
aaa
dec
mov
std
imul
cmpsb
aam
jle
cmp
jle
sahf
out
push
jge
mov
out
xorl
orl
cltd
xlat
stos
dec
sbb
insb
jmp
inc
js
cmc
adc
jno
ret
adc
dec
add
mov
shl
push
add
add
mov
loope
or
mov
movsb
cmp
leave
mov
test
sub
mov
es
or
sub
arpl
add
mov
adc
cmp
push
inc
test
inc
fwait
loope
lahf
mov
sahf
cmp
aad
pop
or
mov
cwtl
pop
leave
cmp
andb
gs
sub
roll
adc
mov
test
push
inc
xchg
dec
popa
xor
inc
sbb
ret
adc
xlat
lods
lcall
fwait
push
mov
adc
cmp
pop
ljmp
sbb
lret
in
pushf
notl
arpl
sbb
xchg
mov
dec
cltd
xchg
sub
movsl
sbb
sub
mov
mov
test
inc
movsl
pop
push
rcl
dec
aam
or
pop
rorb
xor
popf
or
bound
out
xchg
xor
sbbb
inc
test
pop
xchg
pop
push
mov
movsb
dec
dec
mov
xchg
or
in
mov
pop
aam
je
rcrl
stos
inc
std
into
psllw
jo
loopne
shl
std
fs
push
xor
add
or
cmp
cmp
sub
insb
sbb
push
ret
pusha
lods
rorb
mov
in
outsb
enter
sub
data16
fistpl
mov
shrb
jge
ja
popf
inc
fwait
or
or
push
adc
and
mov
jne
push
sbb
sub
inc
cmc
sbb
or
hlt
aam
push
outsl
cmp
or
mov
jle
jae
dec
lahf
jecxz
adc
daa
inc
cs
sbb
mov
std
xchg
inc
stos
addr16
jmp
sahf
or
sbb
lods
jle
adc
in
or
bswap
jecxz
push
ret
outsb
pop
dec
scas
cmp
clc
ficompl
dec
leave
inc
mov
test
add
rcll
pop
popf
lds
jno
jl
outsb
push
cmp
sub
lret
sbb
test
push
fnstcw
dec
nop
clc
addb
in
push
ret
lret
jmp
nop
or
and
dec
rolb
inc
fsubr
lock
std
sbb
lea
les
pushf
jmp
addr16
lcall
push
ljmp
nop
dec
imul
cmpsl
pop
cmpsb
xchg
ss
cmpsl
dec
mov
lret
nop
xchg
xor
mov
pop
mov
adc
lds
and
in
shlb
adc
cmc
push
sbb
les
pop
mov
push
mov
lret
test
in
sbb
jno
add
or
ret
mov
in
mov
in
jno
inc
mov
leave
pavgb
mov
push
mov
mov
sahf
inc
das
inc
icebp
mov
sbbl
repz
mov
scas
cmpl
cmp
sbb
pushf
xor
addr16
test
pusha
rcrl
adc
pop
in
jo
andb
adc
and
mov
cmp
mov
or
inc
scas
sub
jnp
or
sub
mov
jno
jbe
xor
mov
fadd
stos
dec
call
or
test
fdivrs
jecxz
or
or
scas
pop
inc
sbb
xchg
fdivrl
jle,pn
xchg
or
mov
es
push
fidivrl
jb
scas
xor
decb
movsl
int
aaa
es
hlt
mov
lahf
push
pop
inc
pop
ret
lods
lahf
cmp
movsb
sbb
lock
add
sub
inc
std
fadd
inc
test
add
in
test
jmp
xchg
stos
cmpsl
or
movsb
stc
pop
sbb
push
cmp
xor
scas
mov
les
sub
inc
fsubrs
ror
in
xlat
push
mov
and
subb
sub
insl
jbe
pop
ljmp
mov
sti
insl
out
sbb
icebp
fcmovnbe
shrd
mov
repz
inc
xor
jo
xor
xchg
adcb
ljmp
mov
xor
cwtl
insb
test
fbstp
mov
adc
aas
cli
fldenv
in
cld
in
stos
xor
shl
add
or
adc
lret
push
int3
clc
pusha
ror
pushf
loope
push
out
repz
jae
add
lods
mov
xchg
add
cs
or
bound
in
aas
roll
lods
mov
gs
notl
clc
sub
sahf
aam
addb
aam
add
je
sahf
dec
out
push
dec
push
je
pop
out
into
and
test
jnp
imul
cwtl
pusha
mov
int3
xchg
shrl
adc
mov
clc
push
add
in
jle
mov
lea
jbe
fbld
addr16
and
cs
jp
add
arpl
test
aad
cmpsl
xlat
roll
sub
sbb
adc
cmpsl
xchg
cmpsl
inc
loopne
push
adc
daa
fidivrs
pop
popf
cmp
repnz
mov
push
fs
mov
mov
sub
popa
setp
pop
sub
dec
pop
lcall
in
sbb
aad
inc
sub
xlat
push
iret
loopne
in
cmp
subb
int
dec
jns
mov
or
js
das
ret
add
stc
push
jmp
aaa
adc
mov
dec
sbbb
ljmp
popa
fsts
insb
inc
add
pusha
pop
xchg
in
in
movsl
addb
fstl
mov
xchg
adc
xchg
jge
sti
fists
push
fistps
pop
lahf
jl
push
ja
lret
push
xchg
or
stos
add
jns
and
cmp
ror
sub
repz
dec
lds
frstor
or
sub
out
shlb
pop
sbb
inc
cmpsl
push
sbb
cmc
aam
jle
xor
fcmovnb
xchg
mov
mov
ja
cld
testb
push
lods
mov
mov
xlat
call
cmpsb
dec
push
ret
pop
lahf
rcll
pop
push
arpl
or
cmpsl
jbe
lds
out
pop
mov
out
daa
stos
lods
xor
sub
lcall
mov
mov
cmc
sbb
dec
push
xchg
sbb
or
xchg
xor
cltd
adc
pop
movsb
mov
add
das
xchg
and
stos
sub
jnp
push
jmp
lahf
xchg
cmpb
xor
int3
loope
outsb
mov
mov
sub
pop
mov
dec
int3
into
stos
dec
scas
jmp
mov
int3
xlat
pop
ljmp
js
out
jg
push
mov
fcoml
push
sbb
xchg
imul
xor
xlat
test
int
jnp
lret
loope
mov
jmp
push
add
mov
sarl
sbb
dec
push
sbb
xlat
shl
inc
out
aad
fdivrl
roll
mov
test
sub
std
vsqrtpd
aam
adc
pop
push
push
mov
cwtl
push
outsb
popa
xor
outsb
push
or
mov
popf
xchg
clc
add
mov
push
mov
mov
loope
das
and
mov
jle
and
cmp
shll
or
mov
and
dec
or
gs
ss
aas
in
jbe
mov
cmp
ds
sahf
in
std
sub
dec
jne
mov
or
and
cs
fbstp
ljmp
stc
cmp
and
mov
clc
mov
es
lods
xchg
cs
or
mov
outsl
rolb
int
sbb
icebp
fidivs
imul
or
or
jmp
sub
mov
in
popf
mov
mov
xor
xor
add
bound
stos
in
pop
mov
xorl
out
and
in
lahf
adc
icebp
pushl
mov
ljmp
mov
cmpsb
cltd
aad
and
mov
movsb
xor
jno
cmp
stos
jg
adc
aas
das
and
mov
mov
cmc
loope
lcall
leave
cmp
pop
pop
in
add
and
call
addr16
out
iret
and
add
cmp
pop
pop
pop
push
outsb
loope
mov
stos
push
lea
jecxz
inc
xorl
cld
std
mov
in
arpl
jnp
add
xor
mov
andb
xchg
jne,pn
jp
pop
sbb
and
jmp
in
push
mov
rorl
jno
sbb
pop
push
jo
jne
push
mov
push
enter
test
jb
jbe
idivb
cmpb
stc
fdivl
ficoms
mov
jmp
dec
cmp
movsb
push
adc
scas
push
stos
mov
jmp
xchg
add
xor
cld
inc
inc
and
shl
movsl
jo
dec
cli
fwait
outsb
and
adc
fucom
mov
jbe
mov
ljmp
scas
mov
jmp
in
test
out
stos
xchg
test
jnp
or
outsb
jnp
aas
std
shlb
xchg
jae
cmp
je
addr16
xor
jle
ret
dec
mov
pop
push
rcrb
imul
push
aas
add
ss
or
movsb
cmp
mov
mov
xorb
mov
es
in
xchg
push
call
fistps
jns
add
cmpsl
jbe
inc
inc
dec
movsl
jae
cmp
mov
test
aad
dec
imul
inc
xchg
cmp
mov
shlb
pop
push
shll
pop
rcrl
or
mov
out
in
arpl
inc
dec
xor
sub
dec
inc
sub
mov
xchg
jae
iret
cmpsl
jle
xor
cltd
mov
or
adc
or
daa
adc
sbb
push
push
daa
mov
mov
xor
dec
fidivrs
and
sub
xchg
roll
push
add
push
adc
test
in
add
lcall
or
or
adc
jl
cmp
xchg
popa
xchg
cmp
lret
cltd
movsl
dec
fcompl
aas
fsub
jg
jmp
mov
bound
or
jg
outsl
inc
pop
mov
cmp
adcb
outsl
in
xchg
movsl
cld
push
xor
lds
cmp
inc
out
sub
push
jne
or
rcrb
lock
sbb
vmptrld
shrb
into
scas
stos
add
adcb
jne
cwtl
add
jl
int
mov
sub
cmp
arpl
divb
int
testl
xchg
inc
stc
cmpsb
push
pop
ss
adc
push
mov
xchg
dec
pop
mov
or
lods
jmp
jmp
cmc
adc
mov
pusha
fidivrs
dec
das
sub
jns
rclb
cmp
push
movsb
xor
adc
popf
dec
jne
sbb
jae
adc
pop
dec
jmp
jbe
ja
aas
mov
nop
insb
xor
inc
sbb
repz
mov
enter
push
lock
ds
icebp
mov
cwtl
in
pop
adc
pop
push
fmul
flds
dec
jge
scas
jle
dec
dec
call
int
mov
cmp
fwait
cld
ror
sti
icebp
jne
orl
aas
jnp
popa
addr16
adc
mov
or
adc
loop
insl
mov
add
push
int
push
ret
or
xchg
loopne
sub
jb
or
jecxz
lods
mov
jecxz
adcb
and
lahf
xchg
pop
sub
mov
push
mov
add
push
popa
mov
movb
jmp
mov
out
or
adcb
lock
iret
xchg
pop
add
repz
frstor
mov
adc
icebp
nop
push
pop
repnz
mov
sub
lods
stos
or
imul
ss
xchg
into
lahf
pop
jno
and
xor
iret
fcompl
sarl
mov
jmp
jge
mov
fcomps
fsubs
jae
or
std
push
inc
pop
xchg
mov
test
shll
xchg
and
xchg
adc
leave
mov
add
inc
sbb
inc
push
dec
jo
adc
add
arpl
pushf
xor
pop
popa
cwtl
lcall
clc
dec
push
in
mov
andl
inc
mov
in
insb
data16
fadds
mov
repnz
xor
dec
pop
xchg
mov
sbb
sbb
subl
mov
pop
inc
popa
popa
sub
js
loopne
popa
jne
inc
xchg
sub
push
mov
add
push
lods
mov
ss
pop
or
jns
jo
cmp
pop
lods
loopne
push
xchg
sbb
sahf
or
leave
jmp
incl
mov
push
fdivr
xchg
bnd
stc
popa
sub
xchg
addr16
xchg
lret
jns
mov
gs
cmpsl
cld
in
jnp
mov
adc
cwtl
adc
fcompl
pop
jne
dec
jne
icebp
lahf
dec
testb
adc
push
jl
inc
fisttps
test
cmp
cmovb
sub
dec
scas
mov
xchg
adc
or
dec
test
into
pop
arpl
mov
add
lea
enter
jae
add
and
pushf
dec
mov
insb
or
sbb
ret
es
sub
mov
iret
pushf
scas
dec
push
pop
popl
addr16
call
lock
push
sub
pusha
push
push
arpl
jns
xchg
imul
loopne
sub
hlt
dec
lahf
fistps
jge
jmp
mov
je
dec
adc
mov
dec
cltd
or
les
aaa
cld
cwtl
mov
in
in
pop
xchg
xchg
cmp
push
insl
outsl
push
xchg
in
mov
jp
mov
push
out
adc
jg
bound
mov
stos
repnz
scas
cmp
dec
xchg
mov
insb
add
mov
out
jne
and
daa
mov
mov
out
lock
lea
add
inc
aam
mov
mov
daa
dec
pop
sbb
dec
cli
mov
rcll
mov
subb
out
icebp
jle
sub
and
and
pop
enter
xchg
inc
arpl
daa
fmul
movsl
pop
imul
and
mov
mov
inc
lods
int
add
test
and
add
cs
test
std
mov
push
out
sub
mov
xor
mov
adc
and
xor
or
adc
fdivrl
icebp
push
sub
lret
fistps
jae
xorl
mov
cli
movsl
orb
dec
addr16
in
cmpsb
sbb
add
or
add
xchg
jne
pop
inc
push
lret
mov
push
js
dec
lret
rcr
sub
rcrb
and
xlat
andl
jne
ljmp
jb
adc
adcb
xchg
dec
or
push
and
jb
push
jno
push
jb
fisubrs
jp
inc
pop
mov
add
lret
mov
popf
jmp
cwtl
mov
push
bound
jge
cmp
inc
dec
fimuls
into
xchg
test
addr16
mov
xchg
xlat
push
clc
ds
pop
loop
and
inc
push
jmp
inc
dec
push
pushf
mov
stos
inc
sub
xorl
int3
push
add
mov
jecxz
mov
push
dec
insl
mov
xchg
pop
ficoml
jecxz
cmp
jg
iret
dec
aas
out
xor
rolb
add
mov
dec
enter
push
jb
lock
mov
add
mov
jae
adc
loopne
out
cmp
xchg
cld
dec
mov
repnz
mov
or
cmpsl
mov
xor
lea
xchg
mov
sub
sbb
xchg
dec
dec
rcl
sbb
inc
fs
out
cwtl
lea
cmpsl
cli
movsb
or
popa
push
push
mov
lahf
mov
dec
pop
fucompp
mov
sub
xor
adc
scas
daa
addr16
mov
mov
lock
add
pop
loope
shrl
mov
mov
sbb
push
cmp
test
dec
mov
xchg
aam
sbb
sub
pop
add
dec
inc
cmp
roll
push
inc
hlt
test
push
insl
lret
inc
das
adc
ret
push
add
aam
pop
jb
mov
cld
sub
mov
sub
pop
jbe
or
movb
push
clc
out
xor
fidivrs
or
pusha
add
lds
push
je
push
mov
mov
aad
sub
and
fsubrs
pop
in
test
xor
imul
jns
sub
stos
loopne
pop
inc
in
popl
loope
clc
insb
pop
mov
call
lret
jnp
mov
or
mov
sti
xchg
in
fwait
popf
and
mov
ficompl
cwtl
push
fldenv
roll
ljmp
adc
int3
add
fdivrl
mov
sbb
addr16
mov
jg
stos
test
xor
mov
loop
dec
aaa
pop
mov
jb
and
xchg
imul
dec
notl
repnz
pop
lcall
sbb
fsubrl
push
leave
orb
lret
mov
pop
pushf
push
jge
lods
jns
sbb
push
fbld
and
andl
mov
out
popf
jo
movsl
subb
push
push
mov
test
aas
cld
push
mov
jo
push
in
into
cli
pop
lcall
dec
or
mov
xor
rorb
outsl
fidivrl
inc
jnp
and
cmp
rcrl
ficoms
adc
cmpsb
jae
add
aas
test
ljmp
push
jge
bound
push
out
inc
and
clc
jge
inc
push
xchg
pop
push
int3
inc
mov
mov
pop
mov
xlat
in
xchg
push
call
int3
jnp
pop
add
fwait
pop
scas
lea
jo
sub
adc
push
mov
int3
mov
orb
popf
bound
cmp
sbb
mov
bound
fwait
arpl
int3
xor
fsqrt
outsb
push
in
dec
jnp
mov
mov
ja
jbe
dec
adc
sbbb
adc
stc
jle
cmp
add
mov
out
mov
xchg
mov
arpl
push
cmp
rcrl
testl
xor
aaa
xchg
sub
jge
mov
test
ss
out
or
sub
repz
icebp
faddl
out
sub
repnz
or
pop
jmp
test
loopne
mov
mov
clc
clc
insb
inc
sbb
lds
adc
in
jno
or
push
xor
paddq
iret
dec
mov
push
nop
nop
dec
scas
test
cltd
das
dec
sbb
scas
popa
mov
js
xchg
ret
clc
or
cmpsl
jb
ret
in
nop
push
and
mov
or
mov
je
repz
mov
add
clc
ret
aam
push
popf
shlb
std
mov
lahf
cmc
push
lock
ret
imul
or
jbe
push
and
sub
jno
xor
ret
add
xor
fcmovne
xchg
aad
push
push
lret
lahf
add
pop
or
push
dec
adc
rcrb
movsb
jns
mov
xor
adc
sub
push
loop
aaa
inc
cmp
test
cmp
add
fistpll
lret
jmp
cmpsb
sbb
sti
rcl
inc
jmp
loope
mov
js
mov
adc
sbb
les
pop
mov
pop
lea
popa
inc
lret
out
push
push
and
faddp
sbb
aaa
sub
decb
or
mov
inc
test
or
sahf
sub
in
aad
add
or
push
mov
adc
and
adcb
jl
dec
mov
adc
repnz
add
cmp
fcompl
mov
mov
ljmp
mov
popf
inc
in
dec
sbb
fdivr
lods
and
sub
sbb
insb
sbb
leave
fwait
adc
outsl
movsl
xchg
addr16
in
jnp
jae
xor
mov
pusha
adc
dec
test
bound
mov
pusha
jge
push
aad
call
pop
adc
mov
sbb
pop
daa
scas
mov
push
sub
testl
insb
fdivr
xchg
test
push
push
fld
ret
loop
sub
lahf
xchg
cmp
ds
shll
push
hlt
sub
push
inc
mov
outsl
and
popfw
subb
out
pop
call
leave
aam
rorl
mov
cmp
push
in
pop
aam
lahf
sahf
iret
loope
sbbl
pop
mov
out
scas
ret
xor
jmp
incb
jmp
cmp
cs
out
gs
push
mov
mov
cmp
xchg
iret
rcrl
cmp
mov
cli
add
cmp
mov
add
adc
jle
pop
mov
mov
sub
test
xchg
int3
jle
push
or
mov
dec
cmp
loop
loope
mov
rcr
sbbl
les
bound
divl
add
sbb
push
setp
xor
jecxz
mov
fyl2xp1
jnp
lods
cmp
negb
addr16
ds
andb
aaa
aam
sub
pusha
mov
jo
xchg
movsl
jecxz
stos
dec
add
push
dec
xor
repnz
sub
dec
outsw
movsb
loope
xor
mov
sbb
cwtl
scas
adc
xlat
mov
lcall
push
jbe
ret
push
pop
jle
xlat
je
loop
aas
xchg
loop
xor
ret
out
pop
lahf
mov
int
movsl
add
fxch
xchg
sbb
adc
imul
cmp
ret
hlt
out
mov
lret
pusha
data16
inc
mov
test
mov
lods
lcall
loop
jg
aaa
xor
ja
icebp
cli
or
pop
xchg
out
push
movsl
adc
adc
stos
loopne
jg
dec
aad
mov
jae
sti
fildl
dec
pop
mov
jno
push
call
add
jmp
aaa
lds
push
sbbb
mov
dec
scas
mov
test
cli
mov
sub
sbb
cltd
aad
push
daa
sub
repnz
stos
in
bsr
insl
add
aam
cmp
jg
out
sub
xchg
xchg
sub
out
push
pop
shl
lcall
mov
mov
rorl
push
cmc
mov
mov
and
lret
adcl
or
jl
test
popa
in
call
xchg
mov
adc
aam
das
xlat
mov
das
xlat
push
scas
push
jno
mov
les
jle
dec
jbe
or
loope
fdivrs
mov
ljmp
xchg
and
in
in
pop
insb
mov
adc
leave
xchg
xchg
xchg
hlt
int3
push
dec
aad
and
and
std
and
nop
enter
les
je
pop
clc
test
sub
mov
add
data16
dec
cmpsl
mov
push
leave
cmp
sub
dec
popa
mov
test
jl
xlat
xor
push
mov
mov
mov
and
stos
inc
adc
jae
enter
sbb
pop
je
divl
lret
mov
cmpsb
loop
inc
pop
mov
cwtl
add
fbstp
mov
shlb
test
mov
hlt
lock
in
rcl
movsb
cltd
dec
in
in
mov
divl
sti
fists
inc
mov
pop
jnp
sbb
data16
insb
test
int
lea
push
imul
adc
mov
xchg
pusha
mov
push
lcall
int
cwtl
mov
inc
mov
push
jne
mov
idivl
fadd
xchg
mov
mov
push
imul
adc
xor
jp
mov
cmp
mov
pop
mov
mov
jne
ljmp
xlat
push
ret
xorl
add
ss
jne
imul
adcl
pusha
pop
pop
movsb
test
cmp
lods
stc
in
xchg
fistpl
add
imul
pop
mov
jmp
mov
mov
dec
adc
test
mov
pushf
or
clc
fistl
lret
pop
stc
cmp
out
or
add
mov
movsb
insb
loope
xor
push
call
notl
dec
into
sub
xchg
sbb
int3
push
leave
test
mov
or
imul
sahf
loopne
fwait
cltd
outsl
dec
inc
and
jne
fidivl
cmc
jbe
cli
inc
pop
or
mov
sbb
lret
in
add
jecxz
test
sub
cwtl
cmp
fidivrl
add
test
jnp
and
fs
jno
inc
outsb
xor
sub
mov
fwait
inc
hlt
sbb
and
sbb
loope
pop
and
or
mov
xchg
cmp
fsubl
inc
and
pop
in
shrl
lock
sbb
pop
lret
adc
mov
add
jmp
jge
lock
cld
jle
mov
sti
pop
jp
stos
arpl
or
pusha
adcl
js
xchg
jno
testb
clc
pusha
test
mov
scas
leave
push
or
imul
ja
subl
inc
loope
fsubr
lret
sbb
ljmp
dec
into
arpl
leave
add
xchg
cmc
testl
sbb
or
xchg
xchg
lret
sbb
dec
ja
mov
xchg
xchg
mov
push
xor
xchg
clc
push
add
js
pop
cs
dec
cli
sar
sub
aaa
iret
rcrb
jge
into
dec
shll
sbb
idivl
jo
pop
add
mov
push
mov
loope
push
int
or
testb
imul
sub
adc
inc
adc
push
fwait
jno
xchg
rcll
add
push
adc
and
or
out
lea
dec
mov
inc
mov
rcrb
std
jecxz
cmp
loop
pop
cli
jmp
ret
mov
mov
xor
enter
mov
xor
ds
ja
jb
addr16
mov
hlt
cmpsl
mov
dec
mov
pop
push
jle
aaa
cwtl
sub
pop
sar
sbb
fucomi
mov
jmp
pop
dec
fwait
push
mov
and
loopne
add
fwait
test
pop
lds
push
mov
movsl
fstps
movsl
es
inc
mov
hlt
mov
adc
mov
sbbb
lods
xor
push
nop
mov
into
dec
leave
push
mov
pop
gs
push
js
popf
xchg
jo
sbb
lds
mov
mov
sarb
lock
inc
xchg
lea
mov
inc
js
andb
pop
aam
popf
dec
inc
inc
aad
mov
or
and
pop
dec
mov
outsl
in
outsl
cmp
andb
xor
sub
aas
out
xor
jp
cmp
adcb
pavgb
mov
sub
pop
cli
cs
push
jno
cmp
subl
sub
xchg
test
rcll
mov
fcmovnb
mov
stos
xor
adc
aaa
loope
mov
mov
sub
cli
pop
push
and
adc
cmp
inc
jle
ja
shrl
push
add
dec
push
imul
dec
loope
das
add
subl
mov
movsb
sbb
es
test
xchg
js
sbb
movsb
incb
xlat
lcall
movsl
iret
aas
dec
loop
push
daa
or
into
mov
xchg
pop
out
inc
and
mov
jns
xlat
pop
inc
adc
lret
cmc
fnsave
inc
and
scas
icebp
ljmp
sub
push
add
arpl
mov
stos
pop
fimull
mov
cmpsb
addl
lds
push
adc
sub
imul
xchg
scas
and
or
or
add
sbb
lea
pop
xchg
and
sub
xchg
cmp
inc
xchg
mov
addr16
or
int3
pop
adc
sti
push
jno
push
dec
test
out
mov
mov
outsb
enter
ljmp
xchg
aas
enter
mov
jmp
pusha
fildl
mov
les
rorb
inc
cli
repz
xchg
mov
jecxz
scas
mov
mov
stc
xor
sbb
fwait
xchg
pop
pop
test
inc
popf
jo
jp
je
clc
sub
pop
fists
aam
aaa
xor
adc
adc
sub
movsb
dec
dec
aad
xor
sbb
pop
hlt
dec
jnp
inc
arpl
repnz
repz
cmpsl
pop
iret
pusha
psrlw
shrl
fisubl
mov
sub
bound
mov
mov
aam
in
test
int
fnstenv
adc
fistps
shl
and
mov
mov
mov
push
lcall
scas
dec
ffree
cmpsb
ja
repz
pop
mov
ljmp
enter
std
sbb
int
sbb
out
insb
ljmp
xchg
cmpsw
test
cmp
mov
sti
adc
jo
add
push
fimuls
or
jo
jecxz
fdiv
mov
insb
ret
adc
mov
inc
xlat
imul
jns
dec
and
push
ds
lds
cmc
lret
dec
cmpsl
push
addb
dec
sbb
stc
and
push
inc
in
or
lahf
fldl
jecxz
mov
mov
subl
aam
rol
and
or
mov
adc
jle
pop
fisubrs
sbb
cmp
stos
push
pop
rcr
in
inc
int3
lods
push
xchg
idivl
in
or
int3
outsl
pop
mov
sarb
mov
pop
xchg
add
clc
mov
sarl
jmp
inc
out
rcl
push
cmp
add
jl
cmpsb
cmp
pop
rcrl
das
pop
dec
clc
pop
gs
push
sbb
shrb
test
dec
cmp
lds
sub
jmp
imul
jno
or
addr16
paddw
cmp
and
into
inc
fcmovu
or
pop
test
insl
loop
sub
or
sub
adc
lcall
je
fs
pop
sbb
inc
shrl
dec
jnp
adc
fs
leave
sub
stc
sub
cmp
lea
loope
fbstp
adc
pop
adc
sarb
stos
sbb
clc
push
lret
mov
or
popa
pop
jge
xchg
inc
xlat
inc
outsb
hlt
aam
sbb
out
xor
out
in
test
ret
push
imul
or
in
push
dec
jp
push
cmp
mulb
jl
cmpsb
in
xchg
cltd
stos
not
pop
ljmpw
in
xlat
outsb
test
inc
ljmp
in
mov
xor
adc
pop
addr16
lret
scas
jg
jg
in
mov
push
inc
lcall
mov
fcompl
cmpsl
nop
jp
jge
mov
mov
sahf
cmp
stos
mov
push
int3
cmp
mov
stos
sub
cmp
mov
out
dec
pop
inc
inc
or
mov
jb
inc
fcmovnb
idiv
and
arpl
sbb
ds
fsubrl
add
xor
inc
mov
imull
test
clc
out
xor
pop
add
sbb
adc
fcompl
or
test
and
lods
jbe
stos
push
stc
cs
jmp
mov
mov
add
jbe
lods
push
orl
cmc
iret
in
call
and
mov
pushf
mov
lret
ss
inc
xor
cli
xchg
cmp
ja
and
fsubrs
or
int
cmp
fistpll
add
push
push
mov
in
aam
dec
out
rcll
int
rolb
mov
jg
jno
mov
cmc
adc
leave
int3
xor
ds
outsb
jecxz
push
pop
fcomps
jbe
or
lret
sub
call
pop
aas
cmc
pop
jns
jae
cwtl
xchg
or
bound
xchg
jl
cmp
sahf
ds
jge
mov
mov
inc
lcall
loopne
add
pusha
xchg
mov
jbe
cmp
mov
and
sbb
xor
cwtl
jae
add
cld
xchg
ffreep
mov
inc
xor
shll
outsb
nop
xchg
dec
or
ss
adc
cltd
out
xor
aaa
push
xor
inc
popa
push
fisttpll
xchg
sbb
rcr
pop
dec
popf
aam
mov
mov
scas
mov
sub
dec
pop
sub
xor
cmp
repz
push
adc
fistps
mov
stos
clc
lods
xor
xchg
pop
pop
fnstsw
inc
xor
in
jp
jnp
into
xchg
push
fnsave
dec
fildl
jo
sub
mov
xor
push
lcall
mov
pop
fcmove
stos
scas
repz
call
imul
test
xchg
lret
jmp
mov
jo
lahf
mul
sbb
cmp
mov
pusha
cli
imul
mov
mov
mov
add
shl
addr16
mov
jae
or
ss
pop
gs
mov
cmp
adc
inc
imul
cld
xlat
ja
inc
and
jo
in
or
sbb
sbb
pop
lds
leave
add
inc
pop
loope
sbb
imul
cmp
int
xchg
arpl
sub
pop
adc
out
clc
jb
jle
xchg
in
dec
xor
xor
and
push
and
daa
push
gs
inc
leave
pop
mov
sbb
mov
int
pop
out
pop
sub
sub
mov
in
sub
imul
dec
lahf
out
cmc
push
or
xor
pop
imul
jle
jno
mov
nop
leave
shr
jbe
pop
scas
pop
mov
jge
sahf
push
mov
imul
loop
jae
push
pushf
lods
sbb
movsl
sbb
cld
fstl
bound
pop
cmc
fld
jno
push
pusha
mov
or
mov
int
mov
jmp
pop
test
xchg
pop
bound
add
cwtl
lcall
popf
mov
arpl
loope
dec
cmpsl
cmp
ret
icebp
dec
aas
push
xorb
cld
push
aas
inc
imul
sbb
push
add
mov
or
out
flds
jb
xchg
stc
mov
fidivrs
test
outsb
xor
aas
cwtl
jae
popf
pop
pop
mov
and
dec
stc
data16
pop
push
mov
sub
outsb
mov
in
pop
jb
pop
popa
mov
xor
insl
addl
movsl
lret
fldenv
paddd
mov
dec
sub
jle
mov
stos
ds
inc
icebp
out
in
mov
jg
aam
scas
mov
imul
cmp
es
scas
es
mov
jecxz
shll
cs
jno
sti
cmpsl
lret
add
mov
cmp
adc
dec
mov
stc
pop
out
sbb
leave
fstpl
xchg
mov
in
xor
roll
jnp
or
and
scas
lods
inc
sub
imul
pop
adc
mov
sbb
or
std
inc
mov
cmpsb
scas
pop
cltd
sub
lock
mov
leave
pop
inc
mov
push
and
pop
push
ljmp
gs
adc
mov
and
in
xor
push
jo
adc
aam
out
les
push
sub
aaa
jbe
aaa
sahf
ja
mov
arpl
xor
insb
je
push
dec
cli
cltd
out
mov
shrl
dec
call
loop
jne
xchg
inc
stc
cs
xchg
dec
incb
push
call
das
push
push
dec
mov
mov
pop
cmc
cmpsl
xor
inc
movsb
test
jb
mov
imul
outsb
and
js
adc
inc
xchg
dec
es
sbb
inc
shrb
and
mov
pop
fwait
test
ret
sbb
in
mov
mov
sbb
dec
mov
mov
imul
jp
pop
jge
popf
scas
lcall
cmp
pop
sarl
xor
push
pop
mov
lods
aad
mov
pop
mov
xchg
aam
arpl
and
push
push
xchg
ret
mov
mov
stos
mov
mov
es
lea
sub
mov
jg
out
push
mov
dec
xchg
mov
ffree
sarb
push
add
push
sti
je
pop
cmc
inc
jge
shlb
test
out
cmpsb
xorl
jno
fstl
gs
jmp
mov
lea
mov
sahf
fs
repz
sbb
lock
jmp
push
xchg
inc
ds
scas
cmpsb
std
shl
jge
orl
jbe
dec
icebp
ss
pop
xor
mov
in
or
jp
and
inc
or
xlat
and
into
fdivs
xor
fmul
add
loope
int3
pop
mov
adc
mov
iret
sub
sub
push
jae
call
push
push
shrl
mov
imul
pop
cmc
mov
lret
pop
leave
pop
add
rorl
hlt
scas
js
push
inc
shl
dec
incb
push
sti
and
lods
into
adc
mov
rclb
jmp
cs
test
inc
xor
adc
mov
mov
outsb
xchg
lret
jmp
arpl
sbb
call
cs
inc
dec
mov
mov
pop
ret
pop
pop
outsb
or
xchg
pop
fiadds
cmpsl
addr16
insb
xchg
pop
adcl
fadd
pop
cwtl
out
cli
mov
out
test
push
adc
pop
mov
add
mov
enter
cld
hlt
adc
cmpb
movsb
dec
pop
jno
test
xchg
pop
lret
push
stos
rolb
inc
pop
pop
fldenv
pusha
stos
add
sbb
push
xor
loope
pop
aaa
out
dec
bound
std
rclb
mov
icebp
das
jb
ljmp
xchg
inc
shrl
push
xlat
inc
push
push
enter
insl
stc
jle
addb
sub
out
xchg
les
xor
pop
into
repz
xchg
fwait
cwtl
lods
mov
loope
dec
add
movsl
aaa
or
aas
mov
adc
stos
fadds
lcall
aam
out
mov
bound
std
xor
xchg
out
imul
cmp
xor
or
les
lahf
repnz
ret
fucomi
int3
jge
mov
out
sub
cmp
popf
aaa
ljmp
out
loope
dec
ja
iret
mov
aad
or
mov
outsb
push
inc
add
lret
fs
push
jno
cmpsl
inc
scas
push
cltd
jge
pop
push
data16
inc
mov
push
popa
cli
pop
aam
adc
push
std
repz
xchg
mov
shrb
scas
sahf
or
leave
test
cmp
cmp
int3
sbb
repz
mov
and
cmpb
data16
leave
pop
lods
loop
mov
mov
ja
fstpt
fcomip
enter
sarl
ss
jns
mov
fiaddl
push
inc
cltd
sti
inc
pop
and
fsubrs
inc
dec
scas
pusha
xlat
dec
out
xor
or
add
sahf
outsl
adc
pusha
jl
dec
ja
hlt
popf
pop
xor
dec
stos
pop
push
mov
je
pop
popa
rcrl
cmpsb
mov
mov
xchg
pusha
pop
insl
sub
mov
in
xor
push
cmc
push
mov
adc
xor
mov
push
xor
mov
shr
add
cmpsb
dec
xchg
xchg
mov
scas
out
in
scas
lcall
popf
add
pop
fnstcw
sbb
popa
sub
jns
adc
inc
adc
sbb
add
mov
cmp
push
sti
mov
lcall
xor
push
adc
fadds
inc
shr
cli
inc
lods
xchg
shlb
fisubl
aas
push
sbb
mov
fcomi
xor
pop
dec
call
adc
inc
jecxz
mov
call
outsb
fnstsw
int3
lods
cmp
and
push
stos
xchg
fistps
mov
or
xor
cmp
ret
outsl
dec
and
sub
mov
test
adc
adcl
or
jle
add
clc
jp
sti
inc
mov
in
bound
pop
push
lods
faddl
jb
xor
addr16
pop
pop
sahf
ret
sti
movsl
pop
mov
out
fcmovu
fidivl
lock
jmp
lods
lods
outsb
js
push
or
in
xor
pop
add
fldl
xchg
and
in
mov
xor
out
out
pop
stc
out
push
ja
int3
test
push
ficoml
sarb
dec
aad
jno
xchg
andl
xchg
push
jbe
cld
cmp
cmpsb
les
cs
test
mov
sbb
xor
in
rolb
jns
xor
or
fucom
rolb
lods
xchg
sbb
pop
mov
jmp
cmpsl
and
push
mov
add
movsl
out
lods
in
lcall
or
cmp
fistps
sub
dec
loopne
push
fnsave
jbe
int
test
inc
add
push
push
dec
mov
add
sahf
arpl
jg
ffree
or
adc
out
xor
mov
sarb
fnsave
mov
lret
xchg
leave
cld
mov
jge
mov
mov
jnp
lcall
js
pusha
push
adc
add
cltd
rolb
or
xchg
pop
pop
adc
mov
mov
repz
push
psubusw
fs
in
cmpl
pop
xor
inc
rcr
adc
cli
jg
pop
out
pop
mov
mov
pop
mov
divb
sbb
test
fiadds
adc
lahf
hlt
xor
imul
loope
sub
cmp
xlat
scas
inc
sbb
nop
loope
lock
sub
jne
sub
push
fisttpll
scas
mov
sbb
push
dec
pop
cmp
jbe
test
and
iret
jl
test
xor
mov
outsb
lods
ljmp
mov
add
outsl
cmp
dec
arpl
push
rcrb
lock
jp
xchg
inc
dec
and
cltd
enter
inc
xor
in
sahf
imul
cmc
test
push
ret
lods
pop
sbb
pop
shll
pop
pop
sbb
jmp
aaa
in
mov
pusha
shl
push
push
push
sti
dec
bound
nop
jmp
mov
popf
add
and
hlt
les
sarb
fwait
aaa
and
push
test
cmp
out
inc
push
enter
jo
out
out
arpl
jae
push
sbb
inc
js
lds
ja
jmp
loopne
cmp
sbbl
sbb
adc
sub
orl
mov
mov
pop
jb
cmp
jbe
push
jecxz
adc
aad
cld
add
fidivs
dec
scas
xor
sub
pop
xchg
push
adc
mov
leave
sub
std
xor
push
and
push
sbb
dec
out
iret
or
xor
addr16
pop
in
sub
dec
mov
aaa
inc
sbb
cmp
loopne
aaa
in
sbb
xchg
test
jno
xor
adc
shl
outsl
divb
loopne
add
dec
std
scas
lret
inc
push
test
shlb
sbb
mov
and
xchg
repnz
fldenv
or
jae
flds
xchg
test
inc
lods
jb
push
leave
xchg
jmp
mov
push
jae
movsb
bound
cmpsl
fcmovnb
out
dec
and
push
pop
test
aam
pop
pop
pop
jne
adc
jecxz
loopne
ret
int3
sub
mov
inc
mov
and
and
insb
inc
push
sub
negb
sbb
push
add
mov
jg
and
subl
mov
movsb
popa
icebp
pop
adc
sub
dec
xor
cld
jo
ds
and
mov
and
pop
xor
sarb
subb
push
sub
mov
in
lahf
sbb
cmpl
notl
test
mov
adc
push
and
jmp
push
push
mov
or
arpl
pop
mov
push
gs
int
stc
pop
mov
addr16
dec
or
je
fwait
cli
push
lret
or
in
ret
add
hlt
inc
push
push
dec
sub
xor
dec
dec
outsb
sbb
stos
fldcw
jb
popa
ja
cmc
add
xchg
adc
mov
cmpsb
cwtl
scas
xchg
fstpl
cmp
ss
fstl
inc
faddl
lock
gs
fs
pop
outsl
push
jle
pop
cmpsl
push
sbb
std
insb
test
sbb
adc
or
rolb
shll
rclb
mov
cmp
add
add
mov
cltd
roll
fiadds
pop
cmp
in
pop
jo
add
sub
or
test
int3
in
cmc
cmc
imul
js
aaa
movsb
pop
mov
insb
xor
xor
jo
je
inc
pop
fsubp
mov
into
xchg
cli
sub
loopne
xchg
pop
cld
pop
add
mov
loop
mov
sub
mov
fisttps
flds
cmp
outsb
daa
mov
cmp
mov
dec
loopne
cmp
ret
xchg
ljmp
xor
lret
insl
cmp
adc
dec
jmp
add
mov
xchg
call
inc
shrl
fld
mov
fistpl
fimuls
in
adc
mov
out
in
xchg
xchg
xor
and
mov
cmp
cmpsb
adc
pop
and
mov
pop
out
leave
xor
movsl
mov
xchg
aaa
sbb
or
popf
cmp
mov
push
and
pop
xor
ret
js
sbb
jno
je
icebp
xor
mov
in
ljmp
arpl
imul
ret
ret
pop
xlat
invd
sub
xchg
cmp
test
ret
or
test
sub
sbb
jnp
aam
jnp
jns
and
fsts
aad
push
xor
cwtl
aam
daa
push
jg
adc
push
mov
or
xor
mov
loop
insb
lods
push
push
aam
fdivrl
iret
imul
fwait
scas
ret
stos
ret
daa
xor
dec
mov
sets
sbb
clc
push
inc
dec
cld
sub
int3
stos
mov
lcall
sub
out
mov
inc
jge
xor
in
sbb
les
shrl
lods
ficoms
push
lret
xlat
andb
mov
cmpsl
mov
shrl
repz
or
push
add
mov
xchg
mov
xchg
or
jp
mov
jnp
or
call
lcall
push
in
aam
incb
adc
inc
mov
xor
push
movsb
xchg
and
cmpsb
rolb
insl
ss
fstpl
push
sti
dec
nop
mov
outsl
sbbb
push
icebp
pusha
jno
sub
or
adc
lcall
dec
pop
js
loope
sub
push
jg
dec
inc
sbb
aad
mov
shrb
rcr
mov
mov
push
icebp
imul
cmp
mov
xor
cltd
sbb
sbb
cmc
cmp
jg
sbb
sub
mov
xor
shlb
or
aad
ficomps
mov
movsb
mov
mov
lds
sub
test
pop
sbb
mov
dec
cwtl
pop
scas
dec
insb
stos
out
dec
movsbl
push
jno
fsts
sbbl
mov
or
and
sub
sbb
jle
les
push
lock
sub
test
loope
inc
testb
mov
mov
fwait
xchg
push
cltd
jnp
movsl
out
sub
out
test
test
sbb
adc
popa
mov
mov
add
jmp
dec
loop
jnp
pop
xchg
mov
imul
or
ret
add
js
xor
fwait
mov
xlat
aas
jmp
and
call
movsl
pop
xchg
cmpsb
in
cs
push
pop
fnstcw
xor
add
stc
mov
add
pop
movsl
outsb
addr16
or
mov
xor
push
adc
cmp
xor
inc
jae
push
aam
jne
dec
or
push
insl
pop
imul
jb
in
ficompl
insb
popf
clc
ds
loop
cmp
iret
enter
mov
into
inc
pop
cltd
push
iret
test
stos
sub
decl
shrd
sbb
repnz
jg
mov
or
or
jae
inc
inc
xchg
add
dec
outsl
mov
pop
xor
imul
rcrl
inc
cwtl
jne
aas
mov
mov
call
cs
mov
sbb
cmp
stos
dec
imul
loope
cli
int3
sbb
pop
mov
mov
xchg
imul
mov
cmp
mov
scas
mov
hlt
jb
insl
xor
pop
add
mov
in
push
push
mov
fwait
sub
fs
icebp
or
cmp
js
sbb
mov
sbb
cltd
xor
clc
lcall
ss
les
aas
fdivrp
jmp
mov
cmp
setbe
popa
inc
dec
pop
lods
cmpsl
mul
jp
xorb
loopne
mov
ss
lea
xchg
lods
inc
cs
jb
xor
inc
push
cs
cwtl
push
rcrl
std
adc
ds
sub
mov
xor
pop
push
and
adc
cld
jns
dec
mov
inc
pop
out
ret
hlt
lret
sbb
in
repnz
sub
sbb
aam
jle
daa
sub
pop
scas
dec
insl
fucomi
mov
fsubs
ret
test
xchg
xor
push
cli
jl
testl
movsb
jp
idivl
repz
mov
inc
mulb
rcll
or
cmpsb
daa
js
jmp
and
stc
push
dec
lds
and
push
sbb
addr16
cmp
test
clc
push
or
int
ss
sahf
pop
jne
adc
mov
sahf
mov
mov
push
inc
fs
gs
dec
dec
jge
pop
jbe
jne
js
xchg
lock
nop
jmp
je
lea
and
mov
stos
jp
call
aaa
cmp
leave
rorb
out
mov
repnz
jns
ficoms
adcb
call
jge
daa
jno
jnp
cmp
popa
sahf
add
push
sub
mov
push
cmp
cmpsl
mov
jb
mov
xchg
xchg
sbb
je
add
inc
cmp
sbb
inc
dec
or
and
in
sahf
mov
flds
cmp
cld
movsb
pusha
sahf
and
das
in
aad
jb
push
jmp
add
popf
xor
push
adc
add
stos
add
cltd
push
in
pusha
inc
jnp
jg
cmpsl
or
cmc
adc
cmc
and
js
push
sti
pushf
push
clc
push
jmp
adc
repz
sub
leave
fs
in
xor
shll
adc
mov
imul
loopne
aad
addl
outsl
adc
mov
inc
test
mov
mull
or
pushf
jne
add
inc
xor
or
mov
mov
es
mov
push
mov
sub
pop
pop
in
sub
sbb
pusha
pushl
add
sub
lock
imul
lea
xorb
mov
jp
mov
fcmovbe
cli
push
mov
data16
inc
test
sbb
mov
scas
fwait
adc
fcomps
sub
dec
jns
repz
jmp
mov
test
push
ror
adc
insl
and
ss
cmp
outsb
xchg
xchg
dec
sar
jbe
lods
imul
iret
repz
call
scas
inc
jecxz
imul
hlt
idivl
jmp
jmp
jae
jmp
loopne
mov
push
fildl
mov
cs
xchg
lock
jae
fisubrl
xchg
call
repnz
scas
ret
xchg
add
jbe
pusha
pop
fsts
andb
clc
jno
fsts
mov
fxch
stc
xor
fisubrs
mov
xor
cwtl
aam
mov
lahf
jbe
add
push
jle
insl
cmp
shlb
xor
mov
jmp
push
je
int
movb
mov
mov
mov
and
or
xchg
aaa
push
aam
xchg
aas
dec
and
cmp
mov
mov
mov
insl
jle
push
adc
xchg
test
test
inc
mov
stos
in
std
in
ror
pop
outsb
and
cmp
addr16
aam
inc
pop
imul
pop
add
out
jbe
clc
sbb
mov
pop
pop
es
add
and
shlb
movsb
fcomp
es
mov
xchg
int
mov
in
int
cld
call
mov
add
or
pop
xchg
shlb
push
sbb
in
leave
popl
mov
mov
pop
xchg
enter
aad
dec
je
pop
xchg
scas
ret
push
dec
fmul
adc
xor
jg
int
adc
dec
lret
das
pop
in
or
pop
mov
sbb
into
out
jo
mov
add
push
in
in
inc
je
cs
mov
fidivs
add
ret
and
add
pop
imul
adc
mov
inc
lds
sbb
test
mov
cltd
mov
lcall
cld
js
dec
ror
je
imul
push
mov
inc
and
ljmp
add
xchg
pop
pushw
mov
sti
cmpsl
in
sbb
lret
js
push
jl
or
xchg
pop
leave
cmpsl
les
das
fs
popf
sbb
sub
or
jmp
jo
pop
in
push
push
imull
push
cmpsl
lahf
and
jp
sbb
and
aas
addr16
notl
add
dec
pushf
cmpsb
enter
popa
stos
adc
jecxz
sbb
pop
movsb
add
in
sbb
pop
inc
add
xor
out
mov
aad
and
arpl
add
std
or
mov
pop
pop
jmp
icebp
mov
sbbl
mov
mov
mov
dec
out
in
cli
inc
xor
add
mov
and
ds
jb
sbb
mov
sub
xlat
xor
jle
mov
divl
ljmp
pop
sbb
xor
dec
cmpb
push
in
mov
jmp
lahf
cltd
add
jl
xorl
cmp
sbb
dec
dec
test
pop
adc
mov
sbb
or
mov
cmpsb
jmp
mov
ret
mov
jns
into
aaa
mov
or
jl
cwtl
sub
into
mov
popf
jns
mov
out
inc
jne
test
or
sbb
adc
inc
test
mov
iret
aas
psrlw
xchg
loopne
cbtw
pop
mov
inc
aam
push
jo
rcrb
adc
popa
jg
ror
cltd
int3
xchg
or
test
push
daa
mov
aad
xchg
fs
push
adc
pop
shlb
sbb
mov
dec
cmp
xchg
aas
or
xchg
insb
sbb
pop
out
dec
xchg
push
xchg
mov
xor
fimull
scas
xor
pop
cli
push
ljmp
jns
out
adc
xlat
in
xor
mov
int3
stos
push
sub
pushf
mov
xchg
jecxz
lods
mov
ja
nop
in
stc
cmp
sub
dec
lods
rcrl
inc
or
sarl
pop
fwait
mov
pop
pop
add
setne
pop
loope
xchg
inc
addb
sbb
or
and
add
sub
shrl
push
mov
adcl
nop
dec
mov
shlb
push
push
ja
xor
jno
push
hlt
adc
pop
and
scas
testb
daa
sbb
or
es
in
insl
popf
dec
cs
and
and
subl
out
lods
bound
xchg
xor
ret
cwtl
sbb
xchg
cld
in
mov
shll
test
push
or
hlt
imul
ja
cmp
push
mov
insb
mov
lahf
enter
mov
gs
in
lock
repz
dec
jmp
xchg
enter
xchg
dec
sub
and
mov
pop
pop
jl
pop
xchg
push
jp
cmpl
fwait
nop
jnp
subl
lea
mov
shll
subl
fwait
jbe
adc
inc
sub
inc
fists
jg
push
adc
jmp
xchg
mov
jle
inc
into
ljmp
xor
jp
out
cltd
rclb
sbb
out
idivl
jmp
cmp
push
adc
jno
push
scas
shrb
les
arpl
movsl
loop
adc
ficomps
ja
mov
jmp
xor
push
lret
in
sub
pusha
cmpsb
sbb
test
add
cmp
gs
clc
test
dec
mov
sbb
sub
stc
dec
push
pop
imul
dec
out
test
xchg
outsl
or
inc
or
int
test
or
or
and
daa
nop
aam
pop
and
mov
clc
add
xchg
movsb
inc
jecxz
in
fiaddl
je
or
in
jg
test
push
notl
jmp
jae
mov
stos
sub
cwtl
dec
sbb
int
ss
sarb
xchg
pushf
out
aaa
xchg
nop
fbstp
scas
lea
xor
mov
inc
stos
jle
popa
or
fimull
sahf
mov
pop
cmpsl
cmpsl
jl
lds
sbb
mov
and
popa
sbbb
gs
dec
cmp
lea
jmp
sahf
jl
movsb
fcompl
aad
xor
push
out
or
fildl
xor
out
imul
inc
leave
sub
inc
lods
mov
xchg
mov
ss
dec
or
negl
orl
inc
daa
lock
roll
mov
fiadds
add
leave
lahf
dec
jno
mov
jns
inc
notb
shlb
imul
arpl
ja
cltd
dec
nop
xchg
xchg
into
test
enter
in
add
jb
enter
out
mov
jb
jns
mov
dec
dec
shll
js
push
jbe
sarl
leave
popa
and
inc
into
cmpsl
jno
sahf
dec
pop
shrb
std
sub
aas
test
sbb
cmp
in
adc
test
sahf
les
fwait
xor
jae
push
mov
push
std
jle
outsl
push
cmp
repz
inc
and
xor
outsb
push
adc
insb
mov
ds
sub
jge
aas
dec
dec
cmp
ljmp
jle
aaa
inc
dec
dec
cmp
cli
xor
xchg
fdivl
sbb
dec
scas
inc
cmp
adc
fdivrl
scas
mov
sub
cld
lahf
leave
cltd
lds
cmp
and
inc
or
sub
outsl
xchg
mov
out
xchg
mov
out
lds
cmpsl
sbb
push
jl
es
cli
in
data16
jbe
sbb
ljmp
nop
cs
jl
cmpb
addb
adc
jnp
sbb
mov
adc
mov
pusha
fwait
mov
mov
and
movsl
mov
inc
call
cmpsb
mov
test
es
clc
jp
mov
aas
jnp
jp
xor
push
or
mov
addr16
int
outsb
mov
pushf
xchg
fwait
sub
fwait
xchg
add
sub
pop
jg
add
imul
pop
pop
imul
add
mov
push
je
repnz
mov
push
ss
lods
xchg
add
nop
pop
adc
loopne
scas
adc
bound
push
and
fsts
push
mov
adc
fildll
mov
iret
pop
sbb
popa
cmp
xor
divb
std
std
fidivrl
pop
inc
aam
inc
into
adc
sbbb
jne
adc
bound
or
and
lock
out
fiadds
in
xchg
shrb
pop
repnz
sbb
lds
fs
mov
jecxz
mov
push
dec
out
mov
loope
mov
ss
test
mov
test
leave
and
out
test
in
ret
test
insb
mov
inc
jmp
and
push
in
sbb
clc
pop
inc
push
sti
sbb
jg
mov
out
pop
sahf
jae
sbbb
xchg
adcl
loopne
mov
push
mov
nop
mov
mov
cmp
psubq
xchg
sti
mov
aaa
mov
lock
and
idiv
decl
push
scas
mov
add
enter
lds
aaa
pop
inc
adc
mov
mov
push
ljmp
mov
dec
adc
stos
xorb
sbb
jmp
outsb
and
mov
sar
cmp
bound
pop
bound
pusha
out
call
lcall
mov
cmp
mov
cmp
outsl
jg
add
in
sbb
lret
lret
dec
mov
lret
popa
jno
dec
rorb
insb
cmp
jle
or
xchg
int3
pusha
dec
je
jmp
out
adc
sbb
xor
fs
fidivl
push
je
je
pop
ss
lds
inc
or
inc
jno
insl
int
repnz
adc
sbb
mov
outsb
outsl
mov
pop
test
test
cltd
xchg
repz
call
les
aad
cs
pop
cmp
loope
dec
adc
sub
jg
xchg
push
fwait
jmp
insl
loope
add
push
dec
add
std
xchg
pop
jo
popf
inc
push
jo
jnp
lret
adc
inc
imul
and
jecxz
mov
rclb
cmp
dec
push
adc
arpl
out
jg
mov
js
lcall
cmp
sarl
out
js
mov
pop
test
stos
pop
jbe
pop
mov
mov
inc
mov
jns
xlat
jle
jmp
and
aam
insl
in
xor
mov
out
adc
int3
loop
jae
mov
mov
sahf
or
pusha
aam
mov
cmp
nop
jle
cmc
jl
scas
rcl
cmpsb
pop
inc
aam
jnp
xchg
and
mov
and
jae
lock
sbb
iret
test
in
mov
lods
clc
pushf
push
xchg
xor
stos
pop
fcoms
or
lret
sti
mov
popl
mov
adc
or
mov
jne
and
jnp
mov
and
xchg
sub
dec
movsb
outsl
pop
jne
adcb
cltd
xor
popf
mov
xor
mov
sub
jae
pop
rolb
stos
clc
xchg
cwtl
jne
sahf
xbegin
adc
mov
xor
mov
mov
and
or
pop
lods
lret
sbb
stc
xchg
xor
sbb
fiadds
or
pop
mov
add
jnp
pop
lret
or
mov
jno
pop
orl
jae
pop
imul
cmpsb
jmp
pop
jo
mov
add
jbe
dec
fisttpl
aam
dec
test
out
add
fdivs
mov
pop
pop
cmp
mov
aas
jo
or
movsb
or
and
addr16
xor
stos
loopne
mov
sub
sahf
jl
mov
and
push
clc
push
aad
test
lea
jmp
jne
push
inc
mov
fwait
into
push
daa
sbb
jecxz
outsb
in
pusha
xor
add
lds
fld
cs
sub
lret
mov
mov
int3
loopne
mov
xchg
test
mov
fwait
pop
es
repnz
cmpsb
out
sub
push
push
scas
pop
sbb
sbb
dec
into
mov
out
mov
call
mov
ds
sbb
xchg
outsl
cltd
out
sbb
insb
in
iret
mul
hlt
xor
in
ljmp
cmp
or
push
sub
mov
mov
add
movsl
out
iret
popa
call
sub
sub
lock
jae
inc
ret
stos
test
out
sets
enter
pop
cmp
negb
jmp
xchg
dec
les
mov
bound
sub
mov
or
sub
dec
lcall
imul
data16
mov
mov
bound
stos
daa
movsl
insl
sub
dec
mov
mov
ret
pop
jmp
pop
fdivl
jns
xlat
cmc
popf
pop
push
aad
cmp
bound
and
mov
mov
add
mov
outsl
mov
dec
jle
mull
lret
xor
seto
pop
out
pop
mov
je
imul
cmpsl
jecxz
insb
enter
fists
push
and
sahf
dec
cs
ljmp
inc
fwait
int
pop
push
rcll
cwtl
jnp
inc
jl
mov
loope
inc
cwtl
xor
add
push
les
jb
xor
sbb
xorl
mov
jp
ds
inc
inc
pushl
and
push
ja
inc
rcl
testb
subb
inc
lahf
push
mov
cwtl
adc
xor
and
inc
pop
into
mov
cmpsl
sub
movsl
icebp
push
insl
lcall
mov
mov
push
mov
jne
data16
mov
jp
cli
scas
mov
or
stc
in
loope
push
imul
jge
mov
mov
inc
mov
std
mov
sub
mov
das
xor
inc
rolb
or
xor
jle
jp
xchg
sbbl
mov
movsl
sub
clc
jns
push
inc
test
and
inc
mov
loopne
inc
jnp
enter
dec
cmp
std
retw
test
fistl
xchg
mov
fisttpl
js
add
sahf
mov
lock
stc
bound
cmc
clc
add
push
dec
mov
jl
test
cltd
ss
and
addr16
push
js
pop
ds
subb
mov
mov
into
push
popa
adc
clc
stc
and
sahf
scas
test
xor
in
sti
push
ret
mov
cmp
dec
pop
xor
fdivrs
lret
dec
cmp
pop
inc
jg
popa
aad
cmp
or
sbb
xor
or
jbe
aaa
jge
adc
xchg
out
jbe
mov
pop
clc
shll
mov
mov
insl
jae
mov
movsb
jp
cmp
jge
lock
xchg
mov
cmp
mov
mov
pop
xchg
pop
loopne
in
stc
mov
fcmovne
and
cmp
and
iret
jns
mov
and
jne
jmp
cs
dec
push
sarb
xchg
lock
js
jbe
movsb
call
jns
testl
std
jl
or
enter
push
lret
iret
mov
mov
sti
mov
out
test
push
mov
lret
clc
imulb
out
inc
sti
lea
mov
jge
out
push
mov
add
cmp
outsl
pop
xchg
lods
or
lods
jmp
inc
adc
es
fld
sub
mov
fistpll
push
sbb
jbe
jg,pn
push
rclb
lahf
movsl
inc
inc
sbb
repz
add
adc
xor
push
ficomps
jp
or
icebp
or
push
xor
out
imul
dec
stos
movsl
push
outsb
jle
daa
dec
iret
test
sub
dec
and
xor
clc
std
sbb
pause
roll
mov
rcl
cmpsl
dec
int
hlt
shl
mov
adc
aaa
sbb
xchg
push
jbe
lds
mov
bound
adcb
cmp
arpl
cmp
mov
enter
add
fisttpl
or
mov
inc
cmp
mov
arpl
xchg
ja
shr
mov
fwait
inc
dec
lock
imulb
mov
stos
jns
push
cmpsb
and
mov
hlt
and
and
jae
ficoms
add
loop
cld
mulb
lock
push
scas
xor
cltd
or
xor
pop
lcall
mov
fbld
push
repz
mov
mov
dec
add
push
mov
push
jmp
fistpl
pop
inc
adc
xor
aad
jle
jbe
mov
adc
movsb
enter
mov
es
adc
in
nop
fsubrs
mov
jle
sti
inc
aas
mov
sub
mov
sbb
mov
push
imul
mov
test
ljmp
into
pop
adc
fisubl
in
mov
aas
fadds
sbb
sbb
fdivs
loop
jl
icebp
add
jne
mov
test
push
xor
mov
push
hlt
or
push
movsb
fsubl
shll
loopne
or
scas
stos
ficomps
and
cli
inc
ja
js
inc
pop
lret
jnp
stc
call
ds
sahf
scas
and
adc
dec
in
add
jg
popf
mov
lahf
dec
xor
adc
add
jo
lods
dec
dec
xchg
clc
mov
enter
hlt
mov
fs
ret
sbb
adc
aad
mov
pop
push
dec
mov
into
les
mov
outsl
gs
mov
aad
addr16
mov
sub
lret
push
cwtl
out
cld
push
mov
fisttpl
jo
into
jne
cmp
push
ja
cli
and
andb
xorb
loopne
cmp
add
push
ror
into
jp
mov
fwait
int3
cmc
rcrl
cwtl
test
shlb
das
lods
lret
subb
jmp
popl
pop
add
cmpsl
in
inc
shlb
movsl
inc
and
fdivl
mov
cmp
sbb
loope
dec
pop
add
or
mov
fsubrl
cmc
clc
or
cmp
fisubs
scas
add
loop
out
push
xor
xor
pushf
xchg
addb
dec
cmc
push
push
fildll
imul
pusha
inc
xchg
mov
popf
js
push
sbb
lret
inc
and
cmpsl
add
or
iret
push
insl
sbb
mov
cld
or
xor
into
shrl
dec
jle
pop
negl
ljmp
inc
outsl
test
xchg
or
mov
jecxz
ret
mov
push
pop
push
inc
pop
rorb
into
adc
in
sbb
aad
mull
fstl
lcall
fnsave
sub
jae
mov
adc
outsb
ds
popa
cmp
xor
loop
aam
pop
cmp
lahf
aam
add
shl
add
pop
mov
lods
fnstenv
es
xor
fs
mov
inc
in
and
out
mov
popa
enter
dec
xor
jnp
sbb
jo
or
mov
gs
arpl
add
or
into
cmp
ljmp
jl
jp
push
xor
jp
xchg
mov
gs
sahf
mov
fsubrp
jae
xchg
push
and
add
dec
push
hlt
xlat
call
stos
inc
jno
pusha
movsb
and
inc
push
cmp
and
hlt
adc
pop
push
sarb
mov
lret
dec
sub
dec
scas
pop
mov
pop
cmp
bound
popa
clc
out
fnstsw
adc
pop
sub
popa
cmpl
sub
xor
shrl
lret
push
aam
outsb
mov
cmp
addr16
int3
lock
xor
xor
sub
push
dec
loopne
sbb
xlat
xor
mov
push
lcall
sub
mov
mov
mov
imul
pop
roll
push
fidivs
rcr
push
and
clc
mov
aam
mov
cld
shl
push
aas
xchg
nop
addr16
add
jecxz
lea
int3
or
mov
sbb
cs
add
sbb
xchg
mov
test
xor
scas
data16
mov
movsl
jo
dec
xor
push
es
sbb
xchg
ret
sarb
or
movsl
mov
ss
aas
jmp
sahf
xchg
repz
mov
icebp
sarl
fisttps
sub
repz
push
inc
cmp
int
scas
test
out
stc
std
sti
sahf
test
mov
std
enter
test
aad
pop
sbb
movsb
lea
jmp
arpl
dec
add
sub
gs
imul
les
jl
fst
pop
jp
inc
sub
shll
cmp
mov
dec
or
lret
fs
fidivs
push
dec
jl
sub
xchg
mov
js
fldt
sbb
loop
leave
cmpsb
sub
insl
adc
out
outsb
mov
addb
sbbl
jno
in
inc
xchg
xor
pop
insb
and
aad
les
xchg
leave
mov
add
jnp
cmp
addl
cli
xchg
outsl
in
mov
adc
pop
mov
les
fs
in
pusha
scas
cs
push
pop
mov
push
push
ja
push
test
jbe
test
jl
push
mov
push
out
scas
jl
mov
lahf
dec
pop
jl
sub
push
ss
push
fld
inc
inc
jg
lea
js
or
sar
sub
pusha
lds
dec
jecxz
pushf
js
cwtl
aad
jbe
sbb
repz
loopne
lcall
cwtl
xor
mov
repnz
mov
insb
fsubr
lret
mov
dec
les
fbld
lcall
sub
push
leave
cli
frstor
xlat
insb
test
hlt
jno
or
cld
dec
cmp
rorb
lahf
das
fistpl
sub
stos
lea
lret
adc
and
add
jle
insb
stos
cmc
lret
cltd
dec
push
xchg
rolb
ja
xor
add
add
pop
jae,pt
or
aam
test
mov
cmp
add
ret
adc
sbb
push
icebp
loop
add
pop
outsb
ljmp
shlb
xchg
jge
lret
pop
ficoms
mov
pushaw
shrb
mov
mov
in
int
push
push
mov
out
mov
push
push
xor
mov
aam
sbb
aas
inc
sarb
add
dec
lods
inc
out
cmp
adc
jb
decb
out
pop
push
cmp
adc
and
jge
pop
mov
mov
pop
cmc
and
out
pop
ds
pop
cmpsb
mov
in
es
cmp
orps
jae
fs
add
repnz
xchg
push
mov
fdivs
aas
adc
dec
cmpsl
fisttpll
sbb
rclb
imul
stos
mov
pop
or
inc
sub
xor
jecxz
daa
inc
or
into
mov
xchg
and
lods
mov
push
adc
jns
out
sahf
mov
ficomps
insb
mov
lock
int3
ds
fnsave
mov
xchg
outsb
setl
mov
in
mov
out
push
arpl
shr
adcl
mov
data16
std
cmp
mov
cmp
push
arpl
pop
mov
dec
mov
sahf
stos
mov
mov
or
cmp
imul
mov
fndisi(8087
adc
push
inc
mov
mov
inc
mov
add
bound
dec
daa
orl
sbb
add
stc
cmpl
xchg
adc
cli
movsl
gs
jbe
pushf
dec
dec
mov
mov
std
cmp
sbb
xchg
add
xor
cmp
movd
in
les
dec
out
insl
je
sub
pop
sbb
aam
push
rorl
push
push
pop
xor
jl
xor
addw
xchg
je
cmp
add
and
rcrb
xchg
cmp
cli
je
in
jne
sub
dec
outsl
xchg
sbb
lock
or
shr
inc
xor
dec
cs
add
ror
fstpl
mov
lds
add
xlat
add
adc
in
sub
scas
push
enter
dec
push
or
pushf
push
imul
push
xor
loop
loop
out
mov
je
out
pop
ds
xor
sbb
cmp
xchg
out
enter
in
imul
pop
cmpsl
pop
sbb
push
mov
icebp
aaa
cmp
sahf
dec
ret
gs
out
int
mov
cmpsb
clc
or
mov
cmc
pop
sbb
imul
cld
divl
cmp
test
data16
mov
jne
adc
cmp
movsb
ds
xor
lcall
sbb
aam
dec
xchg
push
pop
adc
cld
jl
fstpt
xlat
flds
sahf
mov
out
pop
jp
fiadds
scas
or
jno
cmp
fsts
arpl
movsl
mov
dec
mov
xchg
jge
xchg
into
ss
scas
nop
and
addb
cmp
inc
js
adc
pop
std
shll
outsb
push
arpl
into
xchg
xor
mov
sub
pop
mov
repz
xor
add
movsl
adc
je
sbb
rclb
in
in
or
xchg
mov
inc
dec
xorb
and
mov
inc
sbb
in
mov
jnp
pop
stos
imul
dec
rol
xchg
push
pusha
arpl
fbstp
xor
push
dec
mov
push
lahf
xchg
popf
icebp
cmp
pop
cli
aaa
cmp
loopne
mov
adc
pop
xchg
jno
mov
lcall
outsl
inc
mov
push
mov
outsb
or
lcall
lret
sub
mov
sub
adc
xchg
fdivr
push
mov
xchg
xor
mov
out
gs
pop
pop
les
daa
pop
pop
nop
mov
ljmp
sbb
inc
sub
ret
push
sbb
adc
lods
outsl
insb
sbb
in
jnp
mov
add
arpl
jb
in
sub
icebp
lds
ret
or
in
ds
mov
sti
dec
test
sbb
jae
stc
shr
sbb
pop
pop
lea
fwait
mov
cmpsl
push
push
sub
mov
xchg
in
arpl
mov
mov
xor
mov
or
xorl
cmp
jl
or
mov
popa
fcmovnb
in
out
mov
or
or
and
dec
faddl
cli
adc
cmp
outsl
xchg
pop
push
adc
dec
push
xchg
lds
aam
dec
into
ret
mov
nop
pop
inc
pop
dec
jl
or
and
inc
rcll
ret
mov
mov
sbb
mov
dec
fs
or
test
xor
push
mov
test
fcmovu
sti
jg
pop
lock
inc
jl
lock
nop
nop
jb
pop
jnp
fmul
movsl
lods
fbstp
push
data16
jbe
push
pop
sub
cli
into
dec
cmpsb
popf
daa
lahf
push
cmp
jbe
sti
pop
and
mov
or
sbb
das
in
jo
hlt
shrb
pop
jmp
xchg
dec
pop
lea
mov
xor
dec
addb
jmp
and
mov
dec
sbb
js
bound
mov
es
mov
sar
outsb
mov
clc
lea
ljmp
loop
push
sti
repz
fidivs
sti
insl
lea
lock
ljmp
xchg
inc
mov
out
cmp
in
stc
pop
in
dec
and
out
push
lcall
jne,pt
and
dec
or
adc
xor
jne
js
movsb
jbe
xchg
shll
ljmp
push
pop
mov
push
sti
test
arpl
lcall
imul
lret
push
inc
xchg
mov
fisttps
sahf
jb
jns
mov
xor
and
jo
sub
sbb
pusha
testl
jbe
add
inc
cld
movmskps
shlb
or
call
mov
mov
add
dec
sub
push
add
add
inc
jb
xlat
push
mov
rorl
jl
inc
mov
pop
loope
rcrl
hlt
ja
and
popf
pmaxub
std
popa
lret
add
dec
sti
into
pop
mov
mov
ljmp
adc
push
and
or
movsb
mov
loopne
outsb
lea
pop
clc
adc
outsb
xchg
jne
repz
mov
add
push
cmp
in
push
adc
cmp
out
outsb
mov
pusha
add
fisubrl
pop
imul
adc
mov
push
aas
or
mov
sbb
sbb
es
pushf
xlat
in
or
fld
fwait
inc
jl
cld
jg
cs
xor
adc
pop
jg
mov
pop
or
aad
cli
cld
sub
lds
das
fisubl
mov
xchg
imul
addr16
sub
es
mov
add
push
repz
sahf
out
bound
sub
xor
jns
icebp
xor
test
aam
cwtl
cmpsb
and
jbe
xor
jl
mov
cmp
pushf
cmp
cmc
ret
hlt
mov
xchg
xchg
push
jbe
sbb
jno
insb
iret
jge
int
scas
xorb
push
insb
pop
ret
push
addr16
cmpsb
inc
jle
insb
subl
out
out
mov
dec
bound
ljmp
adc
push
subb
push
loop
mov
dec
mov
test
fidivrl
jp
mov
cmp
ret
push
xchg
pusha
imul
dec
jecxz
rorb
or
loopne
mov
repnz
int
insb
or
icebp
mov
jb
mov
fiadds
cmc
movsl
out
push
pushf
testl
out
mov
icebp
xorl
fistpl
mov
add
push
adc
je
jb
and
ret
push
jb
fbstp
push
push
arpl
in
jne
or
mov
push
nop
repnz
jecxz
xor
aaa
pop
sbb
addb
adc
and
popa
ds
mov
or
jns
sub
les
jecxz
pop
jecxz
imul
pop
cltd
jo
pushf
cmpsb
sbb
xor
sub
jo
in
mov
sti
loop
fs
sub
inc
inc
in
fcom
xchg
stos
pop
aas
call
sub
sbb
fsub
xchg
cmp
mov
push
sbb
sub
jns
push
lock
pop
outsb
xor
idivb
jne
arpl
hlt
dec
lods
sti
out
or
rcr
dec
or
jnp
mov
pop
push
pop
mov
xor
cltd
sub
mov
hlt
stos
stos
ja
xor
xchg
outsl
sub
or
sub
sarb
sbb
dec
xchg
out
mov
push
xchg
xlat
sti
sahf
sbb
xchg
cmp
adc
int
mov
lds
lds
dec
jp
mov
test
sbb
addb
xchg
mov
mov
cmpsl
ret
imul
sub
pop
mov
mov
add
repnz
cli
cld
add
addl
cmpsl
push
addl
js
addr16
adc
mov
call
sub
xlat
fisttpl
testl
xor
xchg
xchg
call
test
repnz
fmul
xchg
push
adc
loope
test
push
scas
ret
mov
gs
ljmp
rorl
pop
and
mov
cmp
xchg
lret
fwait
enter
stc
push
loope
lock
shlb
mov
sub
xchg
scas
and
jmp
inc
outsl
pushf
add
sti
leave
les
push
dec
mov
inc
call
scas
les
mov
les
lods
stos
fcomps
insb
gs
ficoms
inc
pop
in
pop
cli
test
jae
loop
enter
fcoml
out
sub
xchg
pop
add
repnz
testl
fcomi
fidivrs
test
insb
sar
jne
mov
scas
cmpsb
xchg
cmp
inc
push
int
xchg
sub
mov
push
push
loop
shr
insb
test
dec
lahf
xchg
dec
shll
xor
aam
mov
sbb
pop
push
mov
iret
xor
pop
pop
cmpsb
jb
jle
adc
mov
popf
add
aad
loop
icebp
lea
lahf
cmp
push
or
call
sbb
imul
push
jl
xor
std
xchg
jge
push
jge
cli
pop
hlt
call
mov
inc
xchg
andb
sbb
mov
or
fistpll
xor
mov
pop
movsl
mov
xchg
lock
and
pusha
cs
stos
lret
movsb
inc
xor
shll
mov
std
test
test
sbb
push
sub
es
lods
or
imul
sbb
dec
test
mov
cmc
pop
fidivrs
mov
dec
push
mov
rcrb
into
jae
fidivl
mov
jp
cs
outsl
sbb
in
popa
fnstsw
punpckhbw
ja
jle
pop
das
lea
repz
pop
cmpsl
cmp
jp
lahf
mov
mov
and
mulb
mov
and
and
in
cmp
and
fistpll
imul
pusha
fisubrs
int3
shll
fstl
dec
aas
cmc
pop
repnz
xchg
loope
push
ja
xchg
push
sub
jl
ret
mov
fsubp
or
div
std
xchg
ljmp
jge
in
mov
or
pop
subl
orb
std
fisttpl
push
cmpsb
mov
sub
gs
mov
jne
rcll
int
mov
test
sbb
xchg
mov
stos
sbb
and
out
jns
jge
xchg
sbb
in
lods
adc
push
loope
xchg
push
jmp
fs
das
cmp
push
xor
cmc
clc
sub
jbe
push
mov
push
add
imul
ss
mov
mov
mov
es
adc
push
push
inc
shrb
lcall
mov
and
adc
shr
or
sbb
xchg
sbb
dec
xor
inc
lods
stos
mov
jg
in
mov
stos
xor
in
sahf
sbb
mov
xorb
jns
out
jp
call
mov
mulb
outsl
sbb
xlat
ficoml
adc
mov
or
jnp
adc
rolb
hlt
rcl
push
insb
outsb
inc
and
stos
cmc
arpl
jg
mov
lret
lds
mov
rolb
adc
mov
pushf
cwtl
pop
adc
fcoms
dec
loop
call
pop
push
arpl
lock
adc
decl
pop
shr
std
inc
jbe
daa
mov
gs
jae
sbb
hlt
enter
fadd
mov
es
out
xchg
inc
jp
cwtl
add
or
or
inc
xor
int3
cmp
loopne
out
ljmp
loop
es
add
or
cmp
adc
xchg
or
mov
popa
andl
inc
pop
in
adc
sti
into
test
and
pop
push
sub
inc
sti
lods
xlat
xor
subb
mov
lret
mov
mov
add
adc
imul
es
xor
sub
pop
scas
xchg
xchg
sub
stos
inc
xchg
mov
sbb
clc
insl
cwtl
jo
mov
adc
cld
loop
mov
pop
sbb
out
xchg
dec
hlt
daa
push
outsl
ja
mov
jne
dec
sbb
rcr
loopne
popf
aaa
int3
movsb
dec
lret
daa
add
push
cli
mov
das
loop
adc
cli
push
fdivrs
inc
addl
in
imul
icebp
inc
rolb
ret
sbb
dec
and
pop
adc
fcoml
sbb
fwait
jle
mov
out
xchg
jp
mov
and
in
sub
outsb
jg
adc
jp
mov
jno
push
inc
push
jg
into
ljmp
repnz
cs
and
in
push
and
xchg
fs
repz
aaa
mov
fwait
ljmp
out
mov
mov
into
pop
lds
out
mov
mov
adc
add
xor
jns
push
lods
mov
sbb
jge
xor
fistps
pop
clc
addb
orb
push
jge
dec
popa
mov
push
out
or
jae
dec
jg
xchg
stos
cld
adc
jle
popf
imul
dec
xchg
xor
in
mov
inc
sub
xor
or
fistpl
repnz
xor
lods
xlat
sbb
and
cmp
into
inc
inc
mov
or
cmp
aas
inc
and
add
rcrl
pop
fcomip
xor
jmp
add
std
das
pop
push
and
pop
fucomp
pushf
rcrl
sub
dec
sbbl
push
lods
add
ret
cld
jp
addr16
ret
add
daa
icebp
dec
popa
cwtl
sbb
lods
pop
pusha
mov
mov
xor
popa
pushf
or
cmpsb
hlt
aas
aaa
xlat
jnp
popa
sahf
aas
test
mov
loope
fbstp
jg
mov
sarb
pop
loopne
cmp
fs
imull
pusha
and
dec
outsb
out
movsl
insb
or
sbb
loope
dec
sbbl
mov
fs
insl
fcmovne
xor
bound
sti
fimull
ds
and
xor
ret
stc
mov
ret
fisttpll
or
call
sub
adc
fimull
fsubl
mov
sbb
jp
jnp
inc
sti
mov
adc
dec
mov
lods
sub
popa
int3
xchg
test
mov
inc
sub
out
pushf
repz
test
push
enter
lret
and
pop
cmp
aaa
jp
jbe
ret
xor
cmove
aas
loop
mov
inc
sub
rsm
or
inc
mov
dec
cwtl
outsl
push
push
jo
mov
data16
and
clc
imul
xor
shl
inc
clc
add
mov
xor
adc
mov
enter
cmp
cmp
inc
pop
inc
inc
repz
mov
in
or
xorb
xchg
adc
push
cmpsl
push
pop
add
inc
nop
les
mov
fsubr
aaa
test
into
fnsave
in
jp
arpl
xlat
xchg
lods
orl
imul
jnp
ds
stc
lods
push
lods
pop
pop
leave
loopne
fcmovbe
jle
add
push
roll
repnz
test
sub
adc
stos
cmp
sub
push
sti
xor
es
inc
rcr
daa
adc
jg
gs
loop
add
mov
or
sbb
push
add
cmp
fidivrl
mov
jne
cld
nop
jl
stos
sahf
bound
or
sbb
in
xchg
movsb
cmp
mov
xchg
imul
arpl
jmp
test
add
clc
lea
mov
jo
dec
loop
shll
out
out
mov
push
push
add
add
fsubrl
sbb
imul
enter
mov
leave
add
xor
or
iret
push
inc
das
stos
push
decb
add
mov
xchg
push
ljmp
cmpsb
lea
mov
mov
stos
adc
lock
and
mov
inc
sti
xlat
hlt
lret
subl
xchg
adc
lret
dec
jl
je
fs
cmp
jge
adcb
jo
mov
mov
mov
cmp
leave
cmp
into
pop
pop
data16
mov
outsb
scas
pop
lcall
mov
and
cmc
rolb
jp
aas
inc
sub
mov
mov
jmp
mov
pop
push
ret
xchg
imul
xchg
pop
in
add
scas
jl
mov
test
out
sub
xchg
mov
mov
icebp
mov
pop
mov
add
jbe
mov
les
dec
aas
cwtl
testb
orl
cmp
and
adc
inc
scas
adc
aas
out
cmp
fwait
xor
mov
stc
clc
jmp
mov
cld
mov
popa
adc
xor
add
dec
lds
cmp
mov
test
fiaddl
cmp
add
fidivs
enter
into
sub
lods
sub
push
lret
repz
push
cli
jns
mov
movsl
sahf
insb
push
inc
je
outsl
int
lret
addr16
sahf
push
xchg
lcall
xchg
mov
out
add
push
xchg
xchg
or
or
jp
inc
pop
std
movsl
sbb
xor
stos
cld
loopne
mov
push
jae
pop
call
mov
out
lret
or
in
adcb
jb
cmp
cmp
adc
mov
out
mov
cmp
les
shrb
cmpl
lret
mov
les
leave
repz
mov
cmp
int
jp
daa
in
cmp
loopne
pop
push
sbb
push
mov
fisubrs
dec
lds
out
idivl
cmp
in
pop
adc
jo
sub
in
mov
sub
inc
pop
subb
lds
out
shl
sub
push
or
clc
xchg
xor
and
lods
fs
xchg
cli
loope
aas
rol
jae
pop
jb
xor
add
mov
or
aas
dec
pop
in
or
fcoms
in
scas
ja
jne
push
inc
xchg
pushf
sarb
stc
push
movsl
sarb
pop
std
pop
pop
and
xor
push
enter
jmp
mov
cld
scas
mov
and
sub
in
das
jns
lds
fsubrl
aad
push
xor
dec
dec
lds
dec
aas
fidivs
in
das
test
inc
cmp
add
and
jge
jo
dec
pop
bound
enter
pushl
xor
notb
adc
jae
sbbl
mov
cmpsl
fcoms
pop
mov
cwtl
adc
cmpsb
mov
or
mov
es
aas
adc
mov
mov
cmp
cmpsb
mull
adc
into
out
jl
dec
mov
ljmp
test
pop
insb
ficompl
cmpsl
aam
ljmp
stos
mov
add
push
xor
pop
scas
adc
adc
insl
push
nop
cli
jbe
mov
add
faddl
in
mov
xor
leave
out
stos
pop
mov
sbb
adc
sti
pop
dec
mov
lcall
insb
cli
rcrl
ret
dec
mov
xchg
jmp
cltd
or
filds
jmp
dec
test
int3
xchg
mov
mov
mov
and
fwait
push
mov
mov
dec
mov
pop
adcb
cld
in
adc
add
inc
mov
xchg
dec
scas
enter
and
adc
repnz
mov
popf
sub
dec
in
dec
int3
xchg
addr16
icebp
fistpll
mov
imul
jg
fdivrl
adc
pop
outsb
call
sub
xchg
mov
jl
jge
push
in
xchg
or
outsl
mov
lcall
sti
and
imull
sbb
add
jl
mov
pusha
cmp
and
jae
fs
hlt
inc
les
dec
test
jae
jp
sbb
jne
aad
scas
xlat
sbbb
sub
addb
out
mov
pushf
ss
cmc
pop
push
push
mov
mov
mov
jle
je
in
lcall
adc
loopne
leave
data16
pushf
xor
int3
fists
push
int
in
push
dec
hlt
mov
or
and
into
imul
pop
add
int3
std
mov
push
or
ret
loope
jns
out
stc
sbb
cmp
xor
subl
and
xchg
out
addr16
pop
int
arpl
sbb
movl
int3
test
fs
inc
push
dec
push
pop
lret
cmpsb
scas
js
out
sub
or
sbb
push
pop
ds
bound
setns
inc
aaa
adc
aam
cmpsl
pop
pop
call
shlb
pop
sbb
xor
push
pop
mov
cli
jae
xor
mov
push
shrl
sub
jg
lods
mov
pusha
inc
xchg
aam
into
push
dec
mov
fcomp
pop
lahf
or
and
xchg
and
xchg
add
in
add
mov
movsl
pop
dec
mov
mov
popf
stos
shl
sahf
int
push
lds
add
pop
jb
mov
xchg
adc
sbbb
and
mov
add
aaa
or
push
sub
and
push
shr
mov
sub
lods
mov
dec
push
dec
mov
lret
push
cli
das
pop
fisttpl
ljmp
fwait
popa
cmpb
ret
sub
mov
cmp
jle
in
lods
cli
mov
clc
cmp
jbe
bts
filds
rol
jg
pop
iret
mov
ret
dec
out
mov
jmp
mov
int
xchg
lock
fmul
mov
cmc
push
push
int3
ss
pop
mov
jp
repz
sbbl
sub
dec
stc
imul
hlt
in
pop
cmp
xor
and
aas
cmp
popa
inc
mov
cmp
mov
or
xor
or
daa
fsubr
pusha
sub
cmp
test
push
push
fld
jp
out
pop
jle
fldcw
outsl
test
insb
pop
adc
push
lret
lds
bound
jne
or
enter
js
sbb
sbb
cs
pop
and
xor
orb
aas
pop
xchg
data16
mov
out
imul
lret
leave
or
mov
scas
shll
adc
test
jae
mov
inc
fsubrs
mov
jmp
cmpsl
aaa
leave
scas
mov
outsb
call
sbb
xlat
mov
iret
inc
inc
test
cs
scas
and
imul
cmp
mov
ret
ds
cmp
xlat
loop
cld
es
dec
push
push
cmp
arpl
repz
inc
popf
jae
jnp
insl
jmp
pop
stc
scas
dec
bnd
sub
push
push
add
jle
jno
inc
ss
mov
divb
in
sub
cs
movsl
or
pop
scas
xchg
lea
and
xlat
mov
and
jbe
sub
pop
clc
add
jmp
xchg
stos
je
mov
xchg
mov
sub
xor
fisttpll
cmp
mov
out
dec
mov
out
outsl
daa
push
ror
outsb
fstl
jae
mov
mov
ja
fwait
in
add
and
aas
out
or
repz
mov
scas
add
fmull
stc
pop
jg
mov
enter
pop
aas
negb
insb
pop
adc
idivb
sbb
ffreep
inc
pop
and
rorb
in
ljmp
add
add
pop
lock
fwait
pop
shrl
ljmp
scas
and
addl
sbb
call
aam
lahf
fdivrl
and
movsb
mov
pop
mov
es
std
lods
loope
jp
cmp
jo
mov
std
pop
jmp
xor
mov
xchg
ss
push
jbe
jne
movsl
cmp
out
inc
and
cs
mov
and
sbb
shlb
lock
jns
pop
xchg
dec
sbb
xor
and
or
xchg
arpl
pop
inc
xchg
lret
xor
dec
push
jecxz
fwait
add
jg
scas
pop
or
fistl
sub
lds
push
lret
das
mov
jb
arpl
sbb
dec
xchg
push
scas
add
mov
pushf
or
out
and
jno
dec
aad
insl
sbb
in
push
sub
out
jl
lock
pop
je
or
push
mov
orl
sub
sbb
lahf
filds
and
cmc
mov
jb
fs
pop
mov
ds
sub
sub
dec
or
out
push
jle
sub
addr16
push
add
xor
xchg
jmp
mov
jnp
popa
mov
jp
out
pop
sbb
mov
push
pusha
daa
or
mov
pop
mov
scas
push
mov
mov
fstl
pop
jle
mov
shll
cmc
xchg
cmp
cmp
jb
add
in
xor
rolb
xchg
dec
out
add
push
mov
fwait
dec
cltd
movsb
iret
inc
xorb
mov
dec
push
dec
xor
rol
out
out
push
push
je
mov
nop
movsl
xchg
pop
add
test
adc
xor
xor
push
icebp
iret
imul
add
mov
mov
pop
lahf
xchg
jmp
and
clc
adc
mov
or
push
gs
stos
icebp
pusha
mov
iret
into
push
lea
jle
movsl
jbe
dec
int3
ja
mov
mov
xchg
dec
icebp
orl
divb
xchg
fucomip
out
inc
mov
ficomps
pop
scas
addr16
pushf
lea
pop
hlt
mov
cmp
mov
fbld
adc
xlat
inc
inc
xchg
cmp
or
add
sahf
loopne
rol
gs
dec
stc
shll
xor
push
mov
fdivs
jp
pop
aaa
syscall
adc
jo
imul
xor
mov
push
sarl
mov
dec
and
sbb
cld
jecxz
ffree
rcll
in
je
je
scas
and
mov
mov
mov
data16
data16
ret
adc
test
sbb
mov
cmp
into
lret
test
sub
loopne
rep
mov
pop
jns
dec
pop
aad
in
subb
scas
dec
fstpl
dec
pop
enter
add
cvttps2pi
xchg
jp
test
mov
jp
cmp
xchg
movl
loopne
sbb
dec
pusha
out
int3
and
inc
xchg
push
enter
ja
rorl
lcall
add
sub
stos
pop
mov
adc
add
xlat
cmp
ret
inc
lock
movsl
rorl
cmp
lret
fs
mov
call
ret
sbb
add
je
test
cmp
lret
or
pop
stos
add
add
pop
sbb
fstl
pminsw
dec
sbb
push
jl
stos
int
incb
shrb
daa
cwtl
loop
stos
inc
cltd
adc
jbe
xchg
rcll
insb
xchg
mov
mov
push
or
mov
js
sub
bound
inc
fs
jecxz
test
out
mov
movsl
es
pop
je
dec
fs
xor
test
cmpsl
fwait
cmp
xor
insl
jnp
sbb
mov
sub
jmp
addl
mov
movsb
sbb
adcl
inc
adc
cmp
ret
xchg
cwtl
xchg
int
dec
sbb
mov
lcall
push
lcall
fisubrs
mov
pop
jg
jno
mov
adc
mov
movsl
mov
sub
and
pop
gs
imul
jns
aaa
repz
jae
push
cmc
pop
leave
shl
push
daa
stc
imul
int
rcrl
cmp
add
add
fucomip
divb
fists
das
and
jae
popa
mov
mov
jg
sub
jg
pop
adc
jmp
sarl
test
adc
cwtl
and
dec
into
mov
pop
cltd
xor
cmc
stos
push
and
jb
and
int3
sub
cmp
pop
jno
movsb
push
lret
rcr
inc
cmpsb
add
add
inc
mov
idivl
mov
push
out
sbb
stc
add
push
jmp
enter
dec
sbb
jb
and
push
and
mov
outsb
popa
shl
loope
jmp
mov
lcall
mov
pop
sbb
cmp
fbld
push
jg
cli
and
pop
pop
mov
jl
xchg
jbe
subl
js
jp
imull
add
add
inc
push
inc
sbb
out
ret
mov
fistl
push
loope
sahf
in
rol
xor
jns
mov
ja
aas
cmp
adc
add
jmp
fldlg2
xchg
stos
aaa
and
and
jbe
insl
lcall
inc
sub
insl
xor
add
dec
ficoml
push
mov
int3
ss
ljmp
mov
pop
aad
push
jmp
xlat
cmp
mov
out
and
test
pop
daa
or
add
ds
push
mull
xor
pop
sbb
or
cmc
or
cmp
pop
enter
push
jl
ss
stos
mov
xchg
add
push
ja
mov
stc
fsubl
sti
stos
sti
imul
sbb
rorb
repz
test
pop
jl
out
sbb
xchg
xor
outsb
ret
add
cmp
and
cltd
fidivrs
idiv
cld
ret
outsl
lods
jno
push
xchg
into
mov
das
fcoml
add
shrl
cli
fsubr
insb
and
arpl
and
rorb
adcb
and
stos
test
push
and
dec
icebp
cmp
nop
adc
xor
je
in
mov
mov
scas
xchg
lods
mov
xorb
push
mov
or
pushf
lahf
clc
je
inc
jecxz
push
iret
aam
ret
push
adc
push
fwait
test
and
in
jne
ret
jl
xor
xchg
xorb
mov
dec
adc
add
je
inc
jno
lcall
or
in
outsb
iret
scas
xor
aaa
mov
icebp
xor
scas
loope
mov
xor
popa
dec
roll
jle
in
push
inc
and
mov
mov
sub
mov
sbb
add
rolb
std
sbb
mov
div
add
roll
fsubrl
mov
jb
lcall
stc
shll
add
jo
cld
fcmovbe
push
add
cmp
fwait
xchg
jbe
push
hlt
cmpsl
xor
ja
push
addb
pop
or
imul
push
out
dec
mov
push
add
jbe
lret
xchg
mov
lea
sbb
adc
sub
xchg
xchg
jg
push
call
xchg
das
ds
out
loop
in
hlt
push
stos
jne
sub
mov
outsl
nop
add
mov
and
add
arpl
js
adc
or
pop
lock
adcb
aas
out
inc
fs
enter
or
shl
jnp
test
pop
cmp
xchg
add
addb
sti
dec
add
lods
fldl
sbb
push
nop
ja
sub
dec
aaa
stos
inc
pop
jge
addr16
cmpsl
jnp
test
cmc
cmpsl
cmpsb
out
adc
fs
enter
push
testl
pop
aaa
sti
jb
mov
pusha
cmc
in
mov
or
xchg
sub
cwtl
jne
mov
das
clc
inc
in
jno
sbb
scas
test
lea
dec
jnp
loopne
or
mov
js
xor
mov
pop
shrl
in
inc
mov
ret
pop
cwtl
je
in
xchg
es
int
fldl
or
inc
inc
nop
sub
inc
scas
lock
nop
push
xchg
mov
loop
mov
imul
shll
xor
sub
add
inc
imul
aad
pop
pcmpgtd
sub
cs
dec
out
inc
pushf
lahf
in
or
sbb
cmp
pop
adc
xchg
cmp
pusha
mov
pushf
sub
or
jnp
fnstenv
and
insl
call
addl
add
adc
fcmovb
xchg
jbe
xchg
xor
test
test
sbb
mov
jo
sbb
lods
sarl
push
sbb
lcall
xor
jg
or
jl
test
push
sub
mov
jno
jmp
outsl
or
inc
jnp
sub
add
xchg
xchg
loop
daa
cmc
mov
adc
fcoml
mov
mov
fcomps
repz
stos
mov
sub
les
mov
lret
les
cmp
inc
scas
jo
pushf
lret
jl
pop
aam
ljmp
push
jns
bound
les
xchg
jno
pop
fisttps
pop
adcl
cmp
adc
movsl
lods
aam
push
ret
dec
jo
mov
scas
out
jns
cmpb
dec
cmpsb
mov
shrb
push
clc
sbb
inc
sub
jbe
add
lods
cmp
cli
push
mov
add
gs
shlb
push
int3
stos
ja
jg
pop
out
test
fstl
lret
movsl
lea
xlat
int3
mov
and
fdivl
mov
adc
addr16
or
jnp
punpckhdq
pushf
mov
pop
imul
lods
data16
cltd
cmp
mov
rol
in
test
jb
cmp
mov
mov
push
and
xor
cmp
jns
dec
ret
pop
pushf
and
add
lcall
or
in
outsl
popf
mov
fidivl
jno
or
and
or
adcb
leave
mov
mov
lods
cmpsl
cmp
jbe
aad
xchg
mov
mov
or
test
mov
dec
adc
or
stc
jbe
fptan
jmp
pop
aam
xchg
gs
scas
push
out
ja
shlb
sub
xor
ficoml
xchg
add
adc
xor
push
enter
cmp
cmp
clc
arpl
in
std
inc
hlt
add
push
es
fsubp
dec
mov
insl
sub
ljmp
xchg
stos
jmp
adc
sti
rcll
aaa
sti
pop
dec
cmp
das
add
lcall
xchg
mov
idivl
insl
ja
xchg
sub
xchg
jl
cmp
daa
xchg
jmp
aaa
cmp
inc
inc
adc
ljmp
adc
jns
out
sahf
jnp
or
push
ret
int3
push
jae
fdivs
pop
in
cltd
stos
mov
cli
loop
call
mov
mov
mov
imul
mov
xchg
pop
int3
fdivrl
scas
add
outsl
cmc
int3
mov
jo
inc
outsl
jb
mov
sbb
cld
sub
in
and
ret
xor
dec
das
xchg
jp
and
mov
call
out
and
dec
xchg
sbb
jae
mov
sahf
loop
xor
lock
pop
mov
inc
int3
cwtl
scas
stos
and
push
adc
mov
addr16
xchg
imul
cmp
pushf
xchg
je
clc
mov
or
cmp
mov
jp
jo
fimull
cltd
mov
popa
sbb
xchg
fisubrs
mov
mov
aas
in
pop
xchg
fstl
mov
adc
sar
cltd
movsb
mov
inc
and
mov
pop
mov
xlat
mov
xor
mov
xor
inc
pop
or
pop
and
mov
xchg
lods
mov
sub
push
mov
and
xchg
or
xchg
xchg
lods
fsubr
fdivl
xchg
shrl
hlt
jmp
mov
outsb
lahf
loopne
sti
imul
mov
xor
fs
fucomip
into
mov
addr16
cmp
aas
inc
hlt
test
insl
sbb
xor
mov
fsubrp
mov
repz
jle
mov
int
add
cmc
in
out
xchg
xchg
inc
and
das
push
inc
outsl
icebp
pop
cmpsl
or
pop
mov
aaa
push
mov
cmp
sub
xchg
stos
es
cli
sub
rorb
mov
cli
icebp
cmpsl
cmp
push
dec
xlat
jno
out
neg
mov
sti
shlb
movsb
xor
in
mov
lock
cwtl
push
sbb
das
add
in
nop
addr16
imull
jge
ljmp
movsb
mov
cmpsb
lahf
sbb
int
in
lods
xlat
mov
sub
in
jne
shrl
xorb
fidivl
es
fisubrs
adc
jl
xor
cmp
push
lret
addr16
mov
cmp
rcrb
ret
inc
mov
dec
sub
cmp
jge
inc
sahf
jno
mov
js
fldt
into
fisttpll
mov
push
lods
pop
stos
jge
fnstenv
sbb
std
push
or
cld
xor
fistl
and
sbb
dec
loope
in
xchg
mov
xchg
mov
cwtl
sub
mov
lcall
movsl
xor
sub
cmp
ljmp
cmp
xor
dec
jo
sahf
xor
mov
add
rcrl
mov
out
ja
jge
stos
out
jecxz
xor
dec
add
hlt
pop
xchg
data16
mov
mov
cmpsl
cltd
adc
out
aaa
cmc
jae
push
imul
jnp
and
inc
js
pop
inc
inc
sub
dec
data16
inc
leave
mov
add
sub
es
cmp
outsb
aas
and
mov
inc
lahf
jns
inc
std
mov
test
pop
sub
add
addr16
push
nop
insb
xor
rcll
adc
or
dec
add
push
daa
cld
inc
lods
cwtl
jne
scas
adcb
fiaddl
xchg
push
scas
mov
aaa
mov
loope
dec
adc
add
mov
pop
addr16
inc
inc
mov
lcall
lds
fwait
and
sub
inc
add
xchg
lahf
popf
or
xlat
xchg
or
ja
xchg
loopne
xor
inc
in
sbb
dec
pop
add
adc
push
mov
cs
std
fs
sbb
rclb
or
inc
inc
xchg
shll
adc
push
nop
dec
pop
fldl
test
loop
and
fistps
call
enter
out
rcll
in
xor
add
mov
stc
jae
and
int
clc
gs
push
pop
xor
cli
or
add
test
imulb
xchg
hlt
mov
add
dec
xchg
xlat
jecxz
push
sbb
sub
fucomp
inc
into
fldenv
cmp
jne
test
and
jmp
jae
fcoml
pop
insb
jno
mov
jge
iret
divl
cmp
int
sti
out
scas
xchg
out
lret
jle
adc
jge
adcb
mov
addb
lcall
lret
and
popa
rol
cmpsl
insb
or
and
cmp
out
xchg
dec
loop
and
sbb
je
fwait
sbb
cs
js
movsl
fists
nop
test
push
es
pop
movsb
add
addr16
xchg
ror
pop
insb
adc
aam
cld
leave
gs
sbb
scas
push
jns
xchg
int3
rorb
mov
xchg
nop
and
add
push
bnd
mov
sti
rolb
push
jne
out
jle
push
or
jb
xchg
mov
rorl
in
repz
xchg
mov
jle
sub
popf
or
sub
lods
mov
xor
bound
sbb
daa
cmp
xchg
xor
jno
test
xor
push
dec
aad
cli
or
jl
or
and
add
cmpsb
jp
pop
fcomps
sub
lret
jp
jb
movsl
lods
jg
mov
xor
inc
popf
xchg
mov
lods
movsl
mov
in
xor
mov
cld
cmpsl
adc
outsl
lods
jns
decb
mov
and
out
pop
arpl
mov
js
ja
lea
mov
orb
mov
cmpsb
mov
dec
mov
aas
or
mov
lahf
lods
cli
std
repnz
add
fldcw
lock
loop
js
jp
mov
dec
sub
xchg
dec
dec
jge
sbb
hlt
xor
sub
or
fs
mov
push
mov
jge
mov
push
movsl
inc
lds
out
inc
pop
popf
jno
loope
leave
fldcw
xor
arpl
addl
pop
and
stos
adc
or
jne
pop
enter
out
fmuls
push
jnp
xor
jno
or
insb
shr
pop
gs
fistpl
mov
add
int
pop
mov
rolb
aas
shrl
xorl
jb
xchg
jge
fildll
stc
shll
faddp
inc
fdivr
leave
cmc
cmc
gs
add
push
data16
stc
sub
pop
fcomp
repz
inc
lods
fiadds
scas
or
jge
mov
add
jp
pop
jo
mov
sbb
push
pop
mulb
imul
test
cld
rclb
mov
jns
fld
add
pushf
sbb
ja
int
sbb
mov
mov
repnz
pop
call
inc
sub
xchg
lds
add
mov
loop
dec
stc
inc
lock
mov
leave
out
shl
addr16
adc
push
stos
mov
das
or
idivl
xor
in
negl
pop
cld
pop
mov
lahf
xchg
xchg
push
adc
incb
sub
dec
clc
les
cmpsl
nop
call
outsl
sub
mov
mov
sub
jo
pop
adc
xor
insb
jecxz
xchg
dec
fidivrl
cmp
pushf
loope
sbb
add
or
jl
inc
or
aaa
pop
adc
xchg
dec
cmp
repz
aas
and
push
dec
in
jge
inc
dec
mov
jb
outsl
gs
xor
cmpsb
ss
dec
push
or
lea
iret
out
ret
adc
sub
stos
xchg
mov
push
or
pop
inc
test
xchg
mov
dec
mov
mov
xor
stos
subb
fcomps
nop
cmc
xchg
pop
ljmp
aaa
dec
cmc
movsl
mov
pop
pop
stos
in
sub
mov
mov
rolb
jnp
lods
mov
push
cmp
pop
in
adcl
xor
loopne
pop
mov
xlat
ljmp
aas
push
sarl
mov
xor
lret
inc
inc
dec
mov
sbb
test
xchg
leave
fcoml
jnp
daa
pop
mov
mov
adc
sbb
adc
sti
pop
push
or
dec
call
jno
filds
or
sub
cmp
ljmp
sub
int
dec
call
sbb
addb
jecxz
xchg
or
icebp
loope
xchg
jo
lea
movsl
add
rclb
rorl
lock
cmpb
mov
popf
or
sti
ljmp
sub
mov
mov
fwait
or
data16
dec
pop
fwait
data16
repz
push
bound
and
scas
int3
movsl
inc
out
dec
push
jl
mov
cmp
xor
cmpsb
aam
addb
dec
icebp
cmp
jnp
sub
mov
ljmp
inc
into
dec
fisubl
sub
rcll
and
aad
mov
cmpsb
sub
push
lods
test
mov
and
or
gs
or
stos
xchg
cltd
in
jle
mov
leave
mov
pop
xor
push
sub
dec
out
xor
adc
insl
pop
jbe
mov
into
push
xchg
repnz
out
inc
fbld
mov
mov
mov
outsl
inc
enter
push
jge
sbb
scas
sarb
jno
mov
mov
mov
scas
adc
xor
add
ficompl
or
inc
xorl
lds
add
jno
into
mov
mov
loop
push
mov
cmp
jp
stc
jnp
cmp
test
enter
sbb
out
jecxz
mov
repnz
fwait
mov
out
mov
jp
imulb
js
ljmp
mov
dec
mov
nop
scas
ja
lock
xor
test
push
mov
std
xor
xchg
mov
xor
jne
scas
stos
rcll
and
fldl
sbb
ss
xor
das
es
xchg
jg
mov
push
jp
xor
sbb
fsubrs
pop
mov
cmp
lods
mov
add
imul
add
dec
lret
cmpsb
mov
cwtl
loop
repnz
add
insl
faddp
mov
fs
or
aam
je,pn
mov
sbb
mov
add
fldpi
or
roll
ret
and
mov
sub
movsb
add
xchg
pop
lret
push
out
fcoml
jmp
ss
lods
gs
mov
dec
pushf
popa
mov
imul
je
pop
xchg
mov
and
jecxz
int
les
mov
pop
mov
cmp
pop
in
inc
cltd
popf
cli
xor
in
out
push
adc
rolb
inc
repnz
xchg
mov
hlt
mov
sub
out
push
jge
xor
lods
rcl
add
sub
xor
fs
je
jmp
xchg
das
fldt
popf
pop
mov
push
mov
fistl
adc
in
mov
dec
es
fs
icebp
testl
push
out
jg
bound
push
lock
stos
shrb
xor
xor
fs
mov
or
les
sub
lret
cmpsl
insl
xchg
arpl
mov
jg
movsb
and
xor
dec
aas
popa
sbbb
ljmp
adc
lret
mov
mov
add
add
std
jle
mov
and
cmpsl
cmp
sub
sub
dec
testl
xchg
jbe
jne
pop
adc
int
shrl
cltd
or
test
mov
push
rcrl
jg
adc
mov
subl
das
les
xor
mov
cmc
int3
daa
cmpsl
and
vphaddbw
xchg
dec
xor
cmp
pop
clc
mov
mov
std
and
loope
sbb
clc
aas
das
xor
pop
inc
add
add
cwtl
out
jge
test
cli
mov
mov
in
mov
push
loopne
test
or
addb
push
cmc
imul
ret
aam
unpckhps
and
sub
ds
fcoms
sbb
mov
mov
scas
aam
mov
push
mov
call
cltd
cmp
out
or
mov
fnstcw
cmp
inc
fsubr
mov
daa
cmp
inc
iret
gs
enter
add
xor
and
stos
or
test
mov
pop
in
jo
loopne
loop
cmp
hlt
fiadds
mov
mov
ds
adc
sub
subl
loope
scas
orb
pushf
fistl
leave
pop
inc
das
les
aas
fstpt
cltd
inc
leave
sub
adc
inc
loope
push
mov
sbb
cmpsl
jl
in
movsl
cmp
fmuls
aad
push
xor
push
jnp
push
sbb
lock
in
mov
mov
push
in
xorl
popf
xchg
int
jo
jns
jle
xchg
add
sbb
pop
fists
ret
mov
in
xchg
adc
jle
loop
imul
scas
iret
lods
test
jg
or
adc
stos
rcrb
sub
xor
fcmovnb
or
std
push
lea
addr16
test
pop
and
lcall
jmp
fnstenv
out
sahf
int
decb
test
cltd
jg
xchg
lcall
data16
lahf
adc
adc
push
xchg
sub
inc
jmp
xor
lods
in
pop
mov
jnp
bnd
stos
sbb
push
or
push
xchg
sbb
cmp
je
jecxz
cmp
cmp
je
xor
sbb
scas
lret
pop
inc
xor
into
mov
repz
hlt
pmulhw
pop
gs
cld
lret
imul
sbbl
je
dec
mov
sbb
sarl
in
jns
das
push
jb
imul
outsl
jno
xchg
negl
daa
dec
mov
or
sbb
test
fisubrs
add
mov
or
out
nop
mov
cmp
popf
add
jg
jno
cld
inc
shll
mov
mov
sub
sahf
push
cmp
xchg
fstpl
cmpsl
loope
adc
push
dec
mov
fs
adc
push
add
stc
clc
pmulhw
in
push
aam
aad
ret
push
and
mov
mov
lret
sbb
mov
push
push
sbb
adc
lds
daa
mov
sarl
inc
xchg
mov
jae
nop
push
push
and
xchg
and
jb
sub
clc
in
ficomps
fsts
sub
sub
or
dec
adc
mov
dec
pop
daa
push
lea
mov
std
orl
into
mov
xor
lods
pop
cmp
ja
fnstenv
xchg
adc
outsb
jmp
add
icebp
dec
add
xchg
mov
scas
add
lcall
push
xor
mov
pop
imul
lock
push
cld
aam
push
push
inc
mov
into
lods
loopne
shrl
stos
cmc
pop
std
inc
jae
pusha
lahf
rolb
mov
xlat
fldenv
mov
mov
pop
mov
andl
mov
xchg
mov
cmpsb
inc
adc
xor
and
loope
mov
js
jg
cld
xor
aad
pop
mov
scas
js
sbbb
xchg
popf
imul
and
repnz
std
sbb
pop
sbb
arpl
testb
out
aas
ss
insl
dec
xor
outsl
cmc
hlt
pop
sti
xor
int
mov
in
repz
mov
dec
inc
mov
sbb
or
jb
imul
int3
fwait
mov
iret
lret
pusha
movsl
leave
cmp
xor
or
adc
adcl
movsb
stos
dec
and
negl
aas
mov
jo
pop
pop
mov
push
cmpb
push
into
fcoms
mov
lods
leave
lock
jns
mov
mov
sahf
lahf
popa
fsubs
jb
popf
ret
fucomip
lahf
add
lods
outsb
mov
out
orb
or
dec
cmp
scas
in
jb
in
cmpsl
lea
jns
jl
pushf
cmp
cmp
in
inc
ljmp
cmpl
cld
push
xor
addr16
and
daa
testl
mov
jnp
mov
add
outsb
or
int
dec
cmpl
inc
imul
jne
adc
out
inc
cmpsl
push
mov
cld
mov
inc
xor
or
sub
mov
pusha
mov
lahf
fwait
and
mov
jle
jne
push
dec
push
lcall
dec
sub
xlat
in
jle
negb
dec
rcll
fs
sbb
movsb
add
es
ja
add
imul
mov
mov
imul
insl
imul
xor
icebp
movsb
or
push
ds
repnz
and
add
xchg
jns
shl
dec
xor
lock
pop
add
movsl
lea
xlat
push
cltd
imul
ficomps
xlat
pop
push
insb
ret
jbe
mov
repnz
mov
jle
inc
imul
cmp
ss
xor
icebp
stos
and
dec
mov
xor
je
stos
mov
out
xchg
aaa
outsb
in
mov
xchg
imull
cmp
int
and
daa
jle
mov
add
push
xchg
push
push
aaa
fimull
sahf
mov
add
push
je
subl
dec
pop
push
frstor
call
movsl
loope
test
int
push
inc
ss
add
sbbb
cmpl
mov
xchg
xlat
loope
out
lcall
cmpsl
mov
shrl
in
sti
sti
push
sbb
push
pushf
mov
jae
mov
mov
inc
inc
sbbl
insl
mov
push
out
test
jmp
movsl
adc
jb
mov
shl
inc
mov
subb
mov
in
xchg
insb
fimuls
ljmp
pop
mov
insl
dec
insl
pop
in
mov
xchg
mov
lahf
jle
roll
adc
fisttps
cmpsl
jno
outsl
add
je
mov
mov
jmp
gs
pushf
adc
add
sbb
les
call
xchg
int
jbe
ljmp
push
mov
pushf
imul
or
mov
mov
leave
dec
jae
test
xor
pop
mov
mov
shlb
jae
ror
sbb
sbb
xor
addr16
dec
inc
ljmp
add
and
aaa
outsl
je
mov
into
push
pushf
add
ljmp
ja
nop
imul
fnstsw
jo
lret
xchg
jno
push
cmp
pop
or
sbb
sub
dec
rclb
xchg
cmc
mov
push
imulb
fs
in
push
aas
mov
stos
popa
jecxz
fisubrl
or
pop
sub
fldcw
call
aad
dec
dec
adc
cmp
out
sbb
xor
inc
push
ret
out
pop
xchg
fs
dec
cmp
daa
add
lock
and
jbe
pop
push
jp
lcall
jecxz
bound
add
adc
icebp
dec
mov
cld
hlt
jmp
xchg
sbb
inc
das
enter
cmp
dec
or
pop
cmp
test
dec
fistl
dec
out
nop
xor
pop
arpl
or
xor
cwtl
push
mov
xor
push
add
test
mov
dec
test
pusha
push
fcomi
popf
mov
xchg
cmp
adc
mov
lret
push
mov
pop
adc
cmp
jo
outsb
pandn
call
int
inc
clc
pop
hlt
loop
xor
jle
cli
lret
repz
jns
pop
and
jl
mov
xchg
es
mov
mov
test
mov
outsl
dec
mov
nop
jle
add
jns
aam
dec
lods
loop
clc
push
fs
pop
enter
aam
push
test
sbb
jnp
mov
or
mov
in
add
mov
popf
dec
sub
inc
mov
insb
in
inc
adc
jb
out
jno
les
inc
mov
outsb
ljmp
dec
cmpsb
cmc
inc
jns
xchg
sbb
ljmp
pop
add
imul
push
xor
das
mov
mov
adc
lock
sbb
stos
jle
int
or
gs
sbb
rorb
insl
loopne
lods
jno
cmc
fwait
outsb
fisubl
cmpb
rorb
xchg
fiaddl
pop
cmpsb
mov
scas
fcmovne
cs
addr16
adc
out
jle
adc
lret
aad
loopne
jne
dec
sbb
xchg
xorl
lds
mov
mov
popf
enter
pop
arpl
push
xchg
push
fmuls
adc
jae
and
add
mov
push
dec
and
ss
adc
sbb
sub
dec
sub
pop
dec
lock
jp
dec
dec
push
iret
push
sub
jne
mov
lods
fldt
xlat
mov
or
fidivs
xlat
pop
mov
jle
ja
xchg
xchg
push
rcl
leave
insb
daa
or
mov
pop
and
nop
and
mov
sbb
ja
aad
std
mov
mov
mov
ljmp
enter
sub
ds
mov
outsb
mov
aaa
xor
xchg
adc
cmp
jnp
popa
stos
xchg
dec
and
dec
mov
arpl
jae
jg
jge
and
add
and
jne
rcr
test
sub
icebp
xor
repz
inc
xchg
test
inc
test
cmc
ret
data16
jl
aaa
fnsetpm(287
sbb
and
arpl
and
xchg
mov
insb
mov
movsb
fistps
jnp
ret
shrl
sbb
dec
mov
xchg
mov
idivb
adc
cmp
sub
xor
mov
push
les
inc
lret
pop
or
std
fwait
push
gs
decl
pop
dec
divl
cmp
adc
test
scas
lret
add
jge
add
dec
cmp
mov
mov
mov
xchg
mov
fistpll
ret
mov
imul
das
and
daa
popf
shlb
xchg
push
or
test
dec
popf
pop
lret
aad
scas
out
mov
sbb
dec
int
ja
dec
fcomi
mov
sbb
jecxz
sub
fcmovnbe
dec
ss
push
mov
popa
sub
adc
pushf
push
xor
jno
movsl
sub
mov
fsubl
data16
lret
pop
loopne
aas
in
xor
mov
fs
outsb
mov
cmpsl
cli
jae
je
mov
cwtl
in
jbe
pop
mov
in
ljmp
jno
inc
sti
xor
sbb
das
ror
fstpl
sub
sbb
nop
xor
pusha
test
sbb
pusha
imul
add
xchg
xchg
mov
pushf
inc
jge
sbb
xchg
int
adcb
xor
mov
repz
ret
lret
lds
mov
pop
mov
jmp
lds
fistpl
sub
fistpll
dec
mov
dec
jne
adc
imul
hlt
sbb
repz
or
dec
pop
mov
sarl
mov
aad
add
iret
xchg
and
xchg
push
sarb
daa
cs
in
xor
add
sbb
push
ror
xor
popf
jle
pusha
jp
jp
and
leave
mov
jno
mov
ss
sbb
dec
inc
rep
jns
popf
pop
jecxz
gs
adcb
test
cmc
mulb
fbld
mov
and
jbe
mov
out
xor
popf
pop
loop
hlt
mov
test
xchg
add
dec
sbb
push
push
fistps
add
xchg
xchg
mov
dec
loop
into
mov
mov
or
out
icebp
cwtl
push
jne
mov
out
in
sti
pop
dec
cmpsl
and
adc
in
test
jecxz
pop
repz
in
push
mov
out
fldcw
dec
ss
dec
cmp
mov
cltd
lret
dec
test
cmpsb
adc
xchg
xor
pop
mov
xchg
jge
xchg
insl
inc
in
add
daa
movsb
inc
adc
mov
loope
push
gs
cmp
cwtl
pop
pop
xchg
lea
mov
mov
mov
sub
adc
jg
inc
aam
jb
mov
dec
cli
sbb
ret
in
mov
xchg
out
mov
aam
das
fldt
mov
sub
dec
dec
scas
jmp
ljmp
pusha
sbb
mov
int
push
lock
loope
add
cmpsb
sub
test
scas
cli
aaa
sub
aad
test
mov
out
inc
adc
xchg
jbe
jge
stc
loope
inc
aas
adc
inc
clc
add
mov
sbb
mov
jecxz
pop
fisubs
pop
out
jmp
popf
test
jg
rcpps
jb
rorb
arpl
je
mov
out
scas
xchg
pop
loope
jns
sub
and
mov
fidivrl
imul
jne
sbb
adc
xchg
jg
and
lret
pop
cmp
adc
push
jo
testb
inc
pop
stos
subl
xchg
pop
cwtl
cld
jge
mov
lds
arpl
sub
out
fbstp
lcall
adc
add
xchg
out
ficoms
filds
pusha
mov
xor
scas
push
loope
xor
xor
cmp
popf
xchg
js
jbe
mov
ret
ss
sti
jne
add
fadd
pop
int3
das
jp
sbb
sarl
dec
arpl
icebp
mov
dec
test
dec
xchg
push
int3
mov
hlt
or
and
cmpsb
test
ffree
mov
xor
pop
mov
and
out
and
sti
repz
pushf
sub
addr16
or
sbb
sbb
stos
xor
xor
gs
sbb
mov
adc
add
dec
or
dec
dec
sub
repz
sbb
cli
icebp
mov
mov
frstor
xchg
gs
std
enter
rdtsc
int3
jbe
std
pop
mov
or
aam
xchg
jecxz
sbb
insl
pop
pop
xchg
test
add
or
sub
push
sub
add
enter
xlat
leave
clc
test
gs
jle
jns
xchg
lahf
ljmp
or
mov
cmp
push
scas
stc
pop
imul
lea
clc
xchg
cli
push
loopne
lea
mov
jecxz
fstpt
pushf
adc
push
mov
or
scas
pop
pop
out
add
leave
lods
popa
pop
imul
push
mov
insb
pop
pushf
shrd
mov
adc
xchg
test
adc
nop
cmp
mov
popa
cmpsb
inc
gs
xorl
ljmp
or
sahf
mov
pop
sbb
leave
ljmp
dec
add
adc
fistpl
sti
mov
jl
mov
pushf
mov
sub
jbe
mov
pop
add
dec
movsl
data16
pop
adc
call
xor
dec
pop
and
or
rol
lret
popf
into
sub
loope
mov
popa
faddp
fsubrs
add
mov
faddl
mov
sub
mov
jg
in
jmp
fnclex
cmpsl
testb
loop
sbb
xchg
fldcw
xchg
clc
lods
popa
rcrl
mov
lcall
push
xchg
adc
mov
call
add
arpl
xor
jmp
push
push
iret
mov
pop
sarb
stc
dec
adcb
mov
mov
movsl
xor
iret
test
outsl
push
loop
out
inc
and
in
pop
lods
xor
push
lods
pop
xchg
xchg
inc
addr16
jae
repnz
out
fucomi
repz
cmp
mov
mov
sarb
pop
out
in
shlb
cmp
cmpsb
adc
sbb
jne
cmp
sbb
cmc
inc
ja
lahf
sub
sbb
mov
int3
ja
imul
hlt
scas
orl
movsb
dec
int3
mov
cltd
sbb
pop
xor
out
mov
ss
dec
sbb
xchg
adc
xchg
cmc
les
add
outsl
xchg
add
lahf
and
push
sbb
xchg
daa
test
movsl
inc
inc
xchg
or
inc
les
js
dec
mov
in
addl
shrb
pop
or
adc
lds
int
adc
xchg
push
cmpsb
xor
mov
lock
push
mov
div
xchg
mov
pop
or
fcomp
pop
fwait
adc
fsubs
test
aam
lea
js
sahf
fwait
rcrb
or
imul
jae
test
jmp
and
add
enter
xor
mov
mov
add
xchg
sub
aaa
adc
test
and
das
jmp
jae
inc
mov
fists
and
addr16
sub
xchg
mov
scas
andl
xchg
add
jecxz
in
aas
pop
and
push
mov
std
sub
add
push
mov
adc
dec
pop
lahf
add
les
xlat
outsb
stos
mov
bnd
ljmp
in
sti
dec
add
cwtl
sub
push
dec
jbe
shl
pop
fs
hlt
cld
mov
push
cmp
and
add
adc
daa
test
rcrl
xchg
or
in
test
or
and
and
fbld
jcxz
mov
je
cld
add
xchg
cltd
jg
lret
pushf
cmpsb
push
cltd
xchg
jecxz
adc
xchg
xor
dec
mov
cltd
jecxz
ret
dec
mov
pop
cwtl
shll
gs
mov
mov
mov
push
imul
test
pop
pop
jb
sub
jg
jg
enter
sub
imul
mov
push
int
test
mov
pop
mov
add
mov
mov
xor
lret
sbb
mov
and
lock
lds
orl
addb
cmp
hlt
inc
mov
js
add
mov
cmp
or
jo
adc
out
icebp
jmp
adc
icebp
jge
xor
pusha
add
cmpsl
inc
dec
stos
les
fistps
xchg
or
or
andl
cmpl
sub
mov
sarl
cmp
cmp
cmp
lea
sub
jecxz
aas
mov
cmp
xchg
jo
sub
nop
sar
pop
and
test
imul
jae
outsb
mov
xlat
lea
pusha
mov
mov
out
jne
or
ja
out
int3
insl
adcb
push
test
sbbl
add
popa
test
mov
es
jns
push
in
or
loop
sbb
rcll
cltd
scas
icebp
and
sbb
sbb
cmp
inc
nop
iret
add
xor
aam
mov
aas
xor
popa
sbb
dec
fwait
cwtl
rcll
je
inc
xchg
lret
cmpsb
imul
and
jle
push
add
out
sbbb
jl
outsb
int
ret
aam
in
je
cmc
popa
cmp
cs
js
cmpsb
sub
ret
dec
cmp
ret
inc
dec
dec
call
aam
mov
sub
adc
dec
dec
jmp
sub
pop
sub
lods
mov
pop
test
mov
mov
jle
aam
push
lea
out
fs
enter
xlat
lcall
push
rcrl
scas
int3
scas
add
mov
or
push
repnz
ret
daa
jl
mov
lret
sub
aaa
xchg
inc
cmpsl
cltd
cmpsl
mov
mov
lahf
inc
loope
rcl
nop
imul
mov
insb
shrb
out
pop
cmpsb
dec
jno
in
cmpl
add
into
stos
adc
push
xor
gs
into
in
adc
hlt
decb
fsubs
subl
inc
test
nop
lods
mov
push
mov
icebp
movsl
or
stos
leave
xor
scas
ret
mov
in
loop
push
dec
fldcw
das
adc
mov
es
push
fstpt
jge,pn
in
inc
or
mov
cltd
cmp
adc
cld
pop
ret
repnz
out
aas
mov
sbb
dec
push
cltd
lcall
jmp
add
shll
mov
jno
fisubrs
jl
rorl
loope
jb
sti
outsl
dec
mov
sub
cmp
inc
pop
daa
pop
nop
shlb
adc
mov
rclb
in
ret
and
notb
stc
std
push
mov
std
es
dec
stos
outsl
gs
xor
in
addb
fcoml
outsl
mov
rol
scas
and
xchg
cmpsl
inc
scas
xchg
jnp
dec
test
push
jne
in
sbb
xor
orl
push
lea
call
pop
xchg
mov
ljmp
pop
loope
fbstp
mov
lds
cmpsb
fisubl
lods
loopne
in
add
jp
jbe
xor
sbb
and
in
ljmp
stos
rorb
jo
mov
xor
cmc
adc
mov
pop
flds
push
fdivrp
sbb
mov
and
ret
mov
fwait
jl
daa
mov
xchg
imul
decb
test
sbb
or
call
sahf
sbb
add
ror
pop
adc
in
test
outsl
cwtl
fnsave
sub
xchg
mov
dec
jle
jns
sub
scas
mov
mov
xchg
fs
push
sub
pop
stos
nop
aam
insl
cbtw
xchg
mov
mov
pusha
xchg
xchg
and
mov
aaa
cli
adc
shrb
cmp
mov
data16
xchg
dec
push
push
sarl
outsl
mov
sbb
mov
fcomps
out
sbb
adc
lea
sar
jl
mov
mov
add
xlat
lds
and
inc
fnstenv
sbb
mov
es
mov
icebp
pusha
add
xlat
and
in
sahf
jo
addl
ret
adc
fsubrl
mov
jecxz
lea
cs
cs
sbb
rorl
outsb
les
into
dec
push
push
xchg
clc
shl
std
clc
dec
cmp
ficoml
xor
out
mov
mov
or
mov
je
loopne
mov
imul
je
and
xchg
outsb
cmp
ljmp
mov
stos
ds
repnz
mov
and
rcrl
rolb
xor
jne
sbbb
xlat
mov
shl
or
ljmp
aaa
fcomp
fdivs
pusha
cmp
loope
inc
or
lahf
aad
mov
adc
ljmp
xchg
sbb
into
loopne
xor
mov
pop
inc
stos
cmp
insl
cmp
jg
lcall
adc
testl
adc
mov
jo
les
or
repnz
mov
jg
xchg
add
cmp
adc
cli
js
ds
addr16
push
inc
sub
adc
cltd
aaa
lret
mov
popa
mov
and
pop
jae
cli
or
aas
add
or
and
sbb
cmp
mov
out
lea
hlt
leave
test
mov
xchg
sbb
cmp
cmp
jns
stos
ret
lock
xorb
xchg
cmp
push
jge
pop
shr
inc
adc
cmp
repz
jns
out
push
insl
mov
aaa
js
insb
jecxz
pop
ds
cld
cmp
jmp
arpl
push
or
aad
scas
pop
hlt
rclb
das
jo
xor
aad
gs
ret
jmp
add
pushf
lret
mov
pop
ss
es
adc
cmp
cmp
rcr
loop
sti
dec
and
rclb
and
movsb
stc
xchg
jle
test
sub
and
push
in
or
xchg
mov
leave
xor
cmp
int3
movsl
jge
aad
sub
adc
dec
rclb
mov
fmuls
adc
aam
xor
inc
cs
jge
xor
faddl
out
std
sarb
xchg
cmc
fsubrs
test
movsb
push
insb
mov
pop
sub
xchg
test
sbb
stos
mov
pop
jne
add
loope
push
and
cmp
insb
adc
ljmp
sbb
mov
push
mov
inc
adc
dec
cmp
or
inc
inc
mov
lods
mov
mov
pushf
mov
sub
mov
lcall
fistl
shll
jle
and
and
insl
dec
mov
xor
xchg
sub
mov
xchg
je
lods
aaa
data16
fs
mov
es
sbb
jmp
mov
les
cmp
sub
mov
mov
popf
sbb
sbb
xor
push
and
mov
mov
shlb
and
jmp
adc
xor
ret
jno
add
out
cmp
xchg
std
stos
pop
test
adcb
in
call
cmp
ret
push
sub
mov
dec
fsubl
stos
lds
jge
sbb
dec
jmp
stc
adc
mov
jnp
xchg
xchg
in
inc
xchg
aad
test
mov
stc
movsl
test
stos
adc
add
notb
mov
sub
cmp
adc
cmc
int3
sub
faddl
or
xlat
les
shlb
test
loopne
xor
in
dec
lods
cmovs
es
insl
dec
js
add
push
add
pop
inc
int3
mov
idivl
ljmp
test
push
push
dec
inc
dec
cmpsl
jae
sub
sbb
xor
sete
pop
das
mov
jle
test
dec
push
xchg
adc
sbb
jle
popf
xchg
or
jno
lock
fcmovnu
jnp
mov
add
xchg
add
sub
mov
repnz
pop
dec
std
dec
sub
icebp
pop
call
ret
xchg
ret
mov
scas
fsubr
xchg
ds
inc
push
push
ja
xchg
pop
lds
mov
js
xor
xor
jae
add
aam
push
and
fwait
and
mov
pop
inc
add
xor
pop
repnz
jbe
dec
xchg
mov
lea
cmp
or
cmp
ja
sub
les
mov
xor
mov
jbe
movsl
push
mov
jge
pop
mov
in
stos
adc
rol
lea
fmuls
es
dec
pusha
xchg
out
and
pushf
sub
cmp
or
mov
lret
dec
test
std
jae
fisubs
mov
lahf
jne
lcall
lods
xchg
test
outsl
push
dec
std
add
jge
xor
mov
xchg
int3
ds
sbb
test
pop
or
push
shrl
dec
cltd
inc
xor
pop
popf
sbb
jno
mov
mov
mov
push
cmp
iret
jae
jnp
lret
in
iret
add
outsb
call
sti
dec
fwait
and
daa
xlat
or
in
cmp
insb
xor
aaa
sub
pusha
loopne
mov
in
and
mov
jnp
outsb
and
popa
movb
call
repz
ret
sbbb
in
or
dec
cld
outsb
sbb
and
sub
and
push
dec
ror
jnp
clc
fistps
fdivs
dec
push
es
xlat
sub
loop
xchg
adc
xor
mov
adc
dec
popa
pop
sub
cmpsb
out
mov
out
fstpl
outsb
xchg
lock
jmp
pushf
test
and
ficoms
or
mov
sbb
repnz
movsl
push
fdivrs
mov
popf
ret
outsl
push
lock
nop
lds
popf
adc
mov
adc
addr16
sub
mov
mov
test
outsl
push
mov
std
inc
icebp
inc
scas
aad
pop
xchg
test
cmp
jbe
in
popa
aas
pop
adc
mov
mov
hlt
js
mov
enter
das
jbe
sahf
ror
dec
push
orb
mov
xor
lea
mov
add
cwtl
fidivrl
stos
mov
ds
sbb
icebp
jae
aad
sbb
xchg
nop
mov
fs
loope
jne
push
ss
adc
adc
sub
jp
xor
sahf
repnz
in
sub
jle
lcall
ss
fs
lds
and
pusha
inc
sti
lcall
rclb
sahf
cmp
and
xchg
adc
adc
or
enter
out
test
jmp
loope
xor
lock
jg
sarl
out
adc
add
inc
loop
mov
sbb
movsb
jnp
aam
in
sbb
sub
mov
inc
jp
sti
xchg
imul
jno
loope
and
lods
push
pop
test
and
lods
addb
adc
call
sub
ret
ds
ja
and
js
add
push
inc
mov
push
mov
mov
pop
xor
gs
mov
adc
xchg
mov
iret
sbb
call
gs
push
push
sarl
adc
fisubl
lret
lea
std
loop
pop
jo
loopne
xor
mov
addr16
cmp
mov
mov
push
inc
or
push
rolb
lret
add
sbb
inc
mov
or
sarl
xchg
xchg
ficoml
xchg
rcrb
pop
dec
dec
push
mov
mov
jno
xor
pusha
and
stc
sub
mov
inc
int3
mov
or
mov
fnsave
pop
mov
jnp
into
outsb
xchg
sti
mov
insb
test
mov
pop
out
jb
loope
mov
enter
shll
jl
xlat
je
mov
jmp
sub
xchg
push
cli
es
aas
mov
mov
push
adc
aas
sti
xor
add
sub
mov
out
pop
cmpsb
pop
push
enter
jb
fwait
cmp
outsb
jg
out
fs
mov
outsb
and
xchg
push
ret
xlat
adc
inc
mov
mov
push
enter
mov
mov
cmp
fcoms
adc
cld
int
mov
xor
loopne
jae
je
xlat
mov
ljmp
shufps
xchg
sub
jnp
mov
gs
jmp
in
inc
jmp
cmp
or
cwtl
sbb
inc
sub
imul
outsb
in
add
mov
sahf
test
mov
subb
shll
xorps
mov
add
jg
ret
hlt
test
and
push
sti
ds
push
lret
fsubs
pusha
cmp
mov
gs
ss
and
pop
jo
cmpsl
jbe
repnz
in
and
xchg
shll
negb
lods
test
insl
xchg
push
dec
insb
mov
hlt
mov
fists
imul
arpl
into
jb
movsw
and
mov
pop
pcmpgtd
ja
call
jns
ja
pop
adc
in
insl
add
cmp
es
mov
or
iret
jg
imul
adc
fstps
cmp
add
sub
mov
out
jg
push
xchg
mov
xchg
push
push
je
stc
sub
inc
stc
roll
mov
leave
push
push
and
cmp
mov
mov
pop
mov
jae
fwait
add
jg
mov
insb
loop
pop
push
aaa
and
pop
lock
sbb
lea
pop
repnz
xor
mov
mov
xchg
mov
jecxz
add
mov
push
cmp
out
cmp
test
rcl
into
mov
or
dec
jge
mov
mov
cmc
mov
jle
in
adc
dec
imul
cli
subl
xor
push
sub
int
push
stos
es
push
pop
push
mov
mov
or
mov
test
test
js
and
cmp
ja
in
subb
cmp
mov
or
mov
arpl
cmp
pop
mov
cmpsl
pop
ret
movsl
sahf
test
ja
cld
lock
loope
out
mov
adcl
adc
rcll
or
xchg
ficoms
pop
mov
jg
in
jno
or
in
fstpl
add
cs
pop
and
xchg
ljmp
pop
cmp
and
mov
fimuls
mov
lods
test
nop
add
cmp
pop
movsb
fs
inc
xor
stc
push
repz
push
aad
insb
lods
jo
xchg
fldenv
inc
jns
xor
popa
pop
and
enter
scas
movsl
add
daa
cmp
add
pop
pop
fs
stos
push
fidivrs
fwait
push
rclb
lds
insl
test
roll
adc
jg
out
dec
xchg
lret
clc
pop
push
mov
cmpsl
aas
lods
es
cmpsl
js
inc
loope
fwait
aaa
mov
and
mov
aad
sbb
inc
jbe
jmp
lds
ficompl
clc
push
loope
into
cmp
xor
cmp
je
sub
jl
fs
mov
leave
mov
push
mov
ret
inc
or
sbb
orl
shl
xor
dec
into
dec
fildll
insl
insl
xor
imul
push
dec
fdivrs
and
add
xchg
pop
cltd
int3
mov
mov
xchg
clc
add
mov
pushf
in
xor
push
mov
movsl
call
lcall
pop
fiaddl
cmp
add
and
jns
sbb
xlat
dec
fadd
xchg
jnp
pop
xchg
xchg
push
cmp
outsb
jnp
insb
into
out
sub
orb
mov
into
and
xchg
nop
fldl2e
sti
frstor
idivl
jno
inc
lods
jecxz
loope
imul
nop
cmp
cmp
and
in
push
xor
sub
lcall
es
add
aas
cmp
int
or
fsubr
outsb
push
les
pop
and
xchg
sub
jle
push
dec
sbb
shrl
adc
es
xchg
mov
lods
addr16
sub
sub
jge
mov
mov
fadd
pusha
push
std
mov
pushf
out
repz
movsl
sarl
out
orl
or
mov
inc
and
sub
jecxz
andl
nop
stos
jg
xchg
shlb
lret
ret
push
xchg
or
lock
dec
xchg
insl
pop
push
inc
inc
das
pop
pop
je
outsl
stos
stc
test
push
data16
lret
pusha
add
cmp
jae
xor
add
fstl
cmp
add
push
popl
je
ds
xchg
add
incl
push
cli
call
outsl
scas
mov
cmp
pushl
xor
pop
adc
sbb
les
jo
inc
dec
mov
push
mov
lahf
aad
cmp
xchg
sbb
sub
ret
sarb
idivb
adc
inc
dec
xor
test
leave
adc
cmp
sti
sub
hlt
subb
cmp
nop
cmp
nopl
xchg
shll
stos
push
pop
mov
or
mov
outsl
stc
mov
cmc
out
jmp
pop
nop
cmc
pop
imul
shl
jecxz
int3
mov
dec
dec
clc
loope
jbe
andb
push
loope
sub
jl
adc
xchg
pop
loopne
ss
es
out
cmc
xchg
pop
daa
fimull
add
cmp
mov
jno
and
xchg
in
lock
ret
pop
mov
pop
inc
aas
pop
xor
lret
pand
jp
ret
repz
or
push
loopne
in
push
stos
xchg
icebp
fwait
pop
sub
mov
push
jae
call
in
fstpt
cs
std
adc
in
jmp
lock
add
jl
mov
dec
sarb
push
mov
cmp
mov
sarl
xlat
mov
movsl
repnz
or
shrl
lods
popf
in
call
xchg
lea
pop
out
add
cmp
pop
sbb
clc
iret
mov
or
scas
pushf
mov
aaa
std
push
sbb
dec
push
sub
lea
add
mov
imull
cmp
inc
dec
insl
jb
or
cmp
jg
dec
push
mov
outsl
lret
or
out
dec
push
cmpsb
hlt
mov
leave
fimuls
sahf
xchg
divl
or
addr16
and
ss
fs
mov
aad
movsb
aad
jb
cmp
push
and
aas
sbb
jp
jno
daa
mov
pushf
mov
mulb
std
and
fs
xchg
jle
and
push
dec
sbb
xchg
jb
jmp
ss
cld
pop
imul
inc
stos
sub
mov
hlt
and
mov
dec
push
pushf
fwait
cmp
adc
sbb
loopne
mov
mov
cmp
sub
xor
or
stos
in
and
xchg
jmp
add
out
jb
jnp
in
xchg
xchg
popa
outsb
popa
insb
mov
cmp
lcall
pop
pop
mov
dec
or
dec
pop
loope
xchg
push
pop
jae
into
cmp
cwtl
cmp
push
imul
fsubs
xchg
out
int3
and
sub
sub
sub
imul
ret
and
sub
pop
dec
sbb
adc
cli
jg
dec
sbb
inc
orl
cltd
push
add
nop
das
jle
mov
stc
cmp
das
mov
icebp
mov
dec
xor
into
xlat
mov
iret
daa
fiaddl
lds
and
loope
lods
ja
and
pushf
gs
popa
mov
inc
push
ja
jp
inc
sbb
cli
gs
test
jb
movb
xor
fadds
adc
mov
stos
adc
jae
popf
cld
add
pop
or
outsl
ss
add
addr16
xchg
psubq
out
mov
js,pt
push
nop
dec
cmp
mov
push
popa
call
mov
sub
jno
inc
xor
mov
sti
xchg
jb
daa
cmp
ljmp
inc
test
xchg
test
sbb
sub
movsb
ret
test
jecxz
jbe
scas
adc
push
cld
cmp
mov
xchg
push
negb
or
adcl
sbb
cmp
jne
loop
dec
call
cli
pop
mov
dec
fdivr
lcall
rolb
cli
add
or
push
dec
cmpsl
add
sbb
int
cmp
fidivs
jmp
push
out
lea
daa
xchg
cs
sbbl
pop
inc
inc
ja
and
adc
or
repz
cwtl
enter
cmp
mov
pop
mov
out
mov
lret
pop
dec
mov
icebp
das
shl
mov
cmc
xor
jmp
pop
jnp
bnd
jmp
adc
cltd
jns
in
scas
out
and
push
call
sbb
inc
mov
dec
icebp
xor
mov
loopne
push
mov
pop
aaa
mov
inc
arpl
in
xchg
and
stos
adc
dec
pop
mov
or
mov
stc
mov
shl
dec
jae
stc
push
andb
or
mov
jne
mov
push
enter
sub
fcom
push
pop
push
add
es
fisubs
out
cmpsl
lods
addb
adc
mov
cmp
xor
lret
addr16
sub
inc
loope
or
mov
sub
and
in
fiaddl
dec
repnz
fwait
push
lret
lods
test
add
lea
leave
hlt
sub
call
pop
je
pop
leave
shrl
mov
lcall
in
sbb
pop
clc
out
jns
xchg
mov
ss
or
test
stos
test
jb
pop
stos
loope
pop
mov
push
adc
sti
mov
push
cmp
sbb
clc
lock
cmpl
cs
mov
stos
sbb
push
popf
inc
mov
xor
divb
in
leave
adc
dec
fcompl
xchg
pop
lock
pusha
mov
les
popa
jno
xchg
fdivrl
sub
test
xchg
add
jmp
out
jmp
pop
dec
nop
jecxz
xor
add
push
pop
popf
xchg
test
inc
adc
mov
lahf
enter
sub
jo
fsubrs
xchg
xchg
popf
insb
dec
jns
pop
add
or
out
xor
or
sbb
or
cmpsb
mov
or
call
adc
push
loope
in
sub
fcomps
lret
frstor
ss
test
sub
shr
in
divb
mov
xor
or
push
test
cmp
and
xchg
jge
loop
stos
ljmp
push
xorb
mov
cmp
mov
arpl
hlt
mov
cld
xor
jp
lret
or
sahf
test
aaa
sub
es
xor
cmpb
int3
sahf
rep
sub
xchg
lea
lcall
mov
mov
andps
push
out
cmp
fwait
insb
mov
mov
and
push
or
jae
lret
jp
adc
dec
push
jno
mov
adc
and
and
aas
fildl
aaa
cmpsl
pop
stos
jo
imul
loope
pop
ss
lret
dec
jns
mov
stos
outsb
pop
cwtl
into
cmc
pop
or
cli
push
jnp
leave
popa
jl
scas
xchg
and
add
out
lret
dec
lahf
cmpsb
cmp
leave
mov
movsl
cmpsl
pop
hlt
push
jbe
push
imul
push
mov
adc
insb
insb
dec
stc
jo
fs
pop
repz
sbb
jmp
push
sub
in
jno
xor
repnz
jno
stos
cld
shlb
inc
mov
mov
and
outsl
enter
das
jle
xchg
jmp
idivb
push
cmp
inc
cmp
adc
movsb
xor
cs
stos
mov
xor
sbb
leave
or
jg
add
ret
out
movsl
int
pop
lds
jae
shrb
add
cmpsb
mov
outsl
frstor
loopne
adc
push
adc
mov
jge
mov
add
mov
shlb
push
mov
lock
inc
mov
aas
mov
cmpsb
jp
rcl
gs
aam
sub
mov
cmpsb
sar
in
stos
mov
insl
jle
jmp
sbb
and
dec
push
loope
mov
stc
repnz
lret
loop
add
ljmp
orl
je
mov
cmp
repnz
call
scas
dec
ljmp
shrb
sbbb
ljmp
repnz
xchg
jno
inc
shll
fdivrp
in
add
sarl
outsl
fisubrl
jp
mov
mov
push
pop
pop
test
lods
cmpsl
pusha
lods
xlat
inc
loopne
jl
iret
stc
add
mov
and
push
in
jge
imul
push
cmp
cmp
enter
inc
out
scas
aas
gs
xchg
push
jmp
jle
sbb
mov
clc
lcall
cmp
ret
push
cs
cmp
jle
fnstenv
sarl
movsbl
fadd
lock
push
iret
loope
xor
mov
pushf
andb
lahf
insb
cmc
fdivl
pop
hlt
push
xor
test
test
mov
jns,pt
mov
add
inc
xlat
add
push
xor
push
std
lret
and
and
dec
mov
in
imul
mov
mov
lods
ficompl
out
loope
push
imul
and
ljmp
or
js
sbb
ljmp
jno
add
and
add
rep
pusha
jge
push
push
cmpsb
addb
cwtl
inc
loope
and
aam
mov
jmp
cmpsl
loopne
out
test
in
and
mov
push
scas
add
inc
shlb
out
cmp
mov
leave
inc
or
int
daa
je
add
inc
adc
enter
xor
dec
mov
testb
test
lock
bound
loop
mov
adc
call
stc
adc
repz
cld
in
popa
cmc
rclb
repnz
enter
adc
xor
sub
fisubs
xchg
in
pcmpgtd
mov
pop
jno
ret
out
cmpb
and
aaa
jg
popf
test
add
aam
call
repnz
test
fstl
adc
inc
and
add
inc
pop
out
js
inc
je
js
pop
das
adc
pop
dec
mov
mov
add
xor
xchg
sarb
imul
and
test
in
pop
pusha
add
popa
out
scas
push
push
cmovs
hlt
sub
lahf
push
adc
dec
push
xchg
pushl
aam
daa
rolb
popa
mov
mov
int
or
sub
icebp
pop
jo
sub
xchg
jbe
dec
cmc
or
add
or
mov
sahf
and
hlt
cld
or
scas
cltd
mov
or
push
imul
adc
test
inc
fidivrs
add
fstps
movl
xchg
jae
add
jp
push
ds
out
cmp
or
cmpsl
aaa
mov
jge
mov
ljmp
out
ret
icebp
and
cmp
cmp
pop
mov
js
adc
adc
loop
push
pop
push
pop
scas
push
cmp
xor
pop
dec
jno
mov
sub
les
add
fldenv
sti
pusha
pop
jle
ret
add
add
xor
int3
pop
jo
sarl
jnp
jo
cmp
sbb
sub
push
into
pop
aas
test
push
xor
push
popa
sbb
call
cld
xchg
out
mov
jl
mov
push
or
call
push
stc
lods
mov
lret
in
repz
xchg
icebp
rcl
aam
imul
subl
xor
push
sub
stos
inc
call
rolb
addl
es
push
or
lods
ficoms
data16
and
mov
xor
dec
inc
imul
jnp
hlt
pop
in
ds
push
dec
mov
xor
xor
fistpll
inc
movsl
les
jle
dec
push
adc
mov
inc
jne
sbb
dec
je
mull
xchg
test
adc
dec
stos
rcrb
xchg
idivb
dec
add
mov
mov
popa
jo
mov
outsb
iret
lcall
imul
mov
dec
xor
dec
incl
loop
cld
dec
std
aaa
gs
sub
push
insb
jge
and
gs
jb
and
jbe
sub
add
cltd
inc
mov
stos
stos
hlt
sub
xor
dec
iret
lock
add
idivb
fldl
out
imul
jno
xchg
leave
mov
push
cmp
push
pop
push
enter
loope
mov
xchg
ja
fstpt
stos
pop
adc
mov
pop
sub
cmp
jecxz
rcl
pop
or
add
shrb
cltd
adc
imul
pop
jae
jb
ljmp
hlt
mov
jno
lock
sbb
cmp
sbb
rorl
sbb
inc
add
lret
bound
jge
xor
popa
adc
test
cli
aas
cmp
aas
inc
test
shrb
add
pusha
xor
jmp
mov
push
jle
mov
mov
aam
shr
fs
repz
in
sarb
jne
pop
sbb
push
js
or
cmpl
sub
pusha
test
ret
sub
popf
rcrb
inc
sub
dec
dec
cmc
adc
jo
xchg
fs
cmp
push
imul
xorb
lret
stos
ret
fldcw
mov
jp
into
push
stc
pop
ja
js
cs
rolb
lret
cmp
cwtl
fld
lahf
ljmp
cmpsb
movsl
mov
shlb
mov
jnp
mov
xor
xor
loope
stc
dec
nop
icebp
xchg
loop
inc
and
and
lcall
sbb
aam
in
outsl
dec
pushf
fcompl
jg
arpl
notl
std
lcall
aas
fs
push
adc
or
out
cmpsb
cs
nop
ds
dec
or
leave
xchg
popa
jle
lret
xchg
ljmp
stos
cltd
sti
pop
dec
sti
xchg
int
pop
adc
xchg
mov
sti
rcrl
and
ret
or
pop
add
xchg
call
push
test
dec
fsubs
aam
icebp
int3
lret
sub
outsb
pop
out
iret
out
iret
cmpsb
insl
inc
push
lcall
mov
xlat
mov
push
scas
xor
sbb
pop
pop
movsb
fdiv
fsubp
scas
pop
add
or
push
cmpsl
rorb
sbb
stos
push
jbe
aam
cmpsb
cmpsb
lahf
aam
xchg
filds
dec
pop
stos
pusha
push
cmp
jg
mov
pop
enter
add
inc
ret
mov
aad
das
popl
addr16
loopne
mov
xlat
mov
js
adc
ret
add
imul
ljmp
dec
and
mov
mov
daa
int
sahf
hlt
adc
popa
das
cli
mov
test
lcall
movsl
fstps
push
jne
add
loop
scas
inc
pop
dec
clc
cli
pop
arpl
cmpsb
ss
dec
pop
cld
xor
movsl
dec
xchg
dec
mov
push
bound
or
mov
cltd
daa
insb
and
mov
mov
cmpsb
xchg
mov
rorb
push
pop
inc
fwait
aam
pop
inc
or
sub
out
dec
or
std
cli
arpl
out
adc
test
ror
push
cs
aad
insb
popa
daa
bound
lret
imul
cli
and
pop
adcb
outsl
sbb
xor
push
cmc
push
cmp
mov
push
or
pop
xor
xlat
iret
sub
lcall
xchg
sub
mov
cmp
scas
xor
fstps
mov
jo
mov
xor
test
xchg
xorl
dec
pcmpgtw
cmp
ret
push
jbe
loopne
pop
mov
iret
sbb
stos
out
pop
nop
out
inc
sub
mov
cwtl
mov
bnd
xchg
jnp
inc
add
lods
popa
sbb
les
shl
add
scas
push
jle
arpl
mov
rorl
mov
addr16
push
sub
cmc
ljmp
xor
jo
in
mov
or
or
xor
icebp
xchg
iret
push
dec
sub
iret
cmp
jne
inc
cltd
subl
and
jecxz
xor
mov
pop
pop
cmp
das
sbb
or
fnstsw
fcmovnu
cmp
rorb
dec
sbbl
repz
dec
push
mov
xorb
iret
push
cmp
sbb
lahf
ret
or
rclb
inc
xor
dec
pop
xor
jae
push
imul
movsb
sti
cmp
or
mov
xor
and
add
les
xchg
xor
insl
je
cli
jo
push
sbb
dec
push
and
mov
rcll
add
cltd
lods
cmp
pop
test
push
push
jbe
das
invd
push
outsl
mov
jne
or
jno
jne
dec
and
jl
aam
dec
repnz
int3
out
inc
xchg
mov
mov
push
add
imul
push
jecxz
xchg
adc
push
int3
aad
rcrb
cmc
sub
adc
imul
movsl
inc
shl
push
ds
jnp
ja
or
push
outsl
outsl
inc
ja
outsl
xlat
add
xor
shl
xchg
test
and
dec
sub
enter
insl
mov
call
incb
cs
xchg
pop
xchg
or
mov
jecxz
xor
xor
jae
and
clc
loope
sti
and
pop
sub
aas
xor
push
in
popf
outsb
jne
dec
fstl
push
aad
cmp
cli
adc
pusha
das
mov
dec
mov
mov
cmp
loop
inc
lret
mov
in
mov
cld
jae
movsl
fwait
mov
jp
push
mov
sbb
push
out
notb
pop
nop
pop
and
pop
stos
cmp
sub
and
sbb
lds
and
sub
cli
out
jne
or
xchg
int3
sub
mov
ljmp
cmp
in
and
cmpsl
ret
pop
inc
int
xchg
push
sbb
enter
mov
xchg
dec
daa
add
mov
outsb
sbb
push
and
and
mov
jns
rcr
pop
repz
mov
leave
scas
mov
aas
add
mov
dec
inc
hlt
or
xor
dec
fiaddl
pop
push
insb
push
adc
add
jg
fsubl
xor
roll
sbb
pop
jo,pt
es
mov
dec
fldt
scas
xchg
and
sbb
pushf
sub
test
jle
add
or
push
incb
rorb
std
and
sbb
or
pusha
lods
push
cmp
jno
cli
or
outsl
push
outsl
pop
pop
test
inc
xchg
lahf
pushf
push
jb
pop
sbb
fisubrs
into
sbb
mov
std
mov
pop
out
sub
in
fdivrp
cmp
fwait
xor
lret
rclb
repz
push
das
insl
pop
mov
dec
out
nop
cmc
pop
jne
std
addr16
mov
push
push
jae
ss
mov
rorl
arpl
jecxz
cmp
mov
pop
and
cmpsb
and
mov
fmuls
sbb
mov
lahf
adc
pusha
pop
pop
mov
add
fbld
pop
ret
cmp
jnp
incl
addb
repz
movsl
es
dec
cltd
sbb
loop
mov
mulb
lods
aas
dec
ret
mov
mov
pop
xchg
outsl
sub
popf
mov
or
dec
fisttpl
mov
mov
jns
das
jo
psadbw
popa
aaa
jae
int
in
loopne
dec
movsl
sub
orl
xor
movb
jmp
int
stos
loopne
or
xchg
sbb
sbb
mov
in
mov
ret
into
dec
and
mov
scas
xchg
aad
cmpsl
cmp
aaa
lahf
bound
push
adc
fnsave
add
outsl
std
push
dec
and
mov
cmp
pop
clc
push
test
jnp
loopne
cmp
fldl
sub
outsl
pop
in
jp
loope
adc
inc
inc
add
fwait
mov
scas
call
and
cmp
cld
xor
andb
insb
lods
out
push
dec
and
ss
lea
data16
cmp
push
cld
and
adc
imul
mov
je
nop
subb
ret
mov
xor
mov
js
lock
arpl
adc
dec
sbb
sub
shlb
outsl
adc
add
pop
jno
jg
cmpsl
push
xchg
sub
push
arpl
and
popa
pop
push
xchg
test
inc
ret
push
stos
mov
or
cltd
clc
stos
xor
ds
dec
stos
stc
cwtl
lret
sub
sbb
adc
xchg
or
pop
popa
inc
movsb
cmp
repnz
fistpl
mov
nop
jb
inc
mov
jo
mov
sub
add
xchg
pop
shl
and
gs
adc
xor
movsb
pop
sti
popl
es
incb
test
aas
lds
test
das
push
push
repz
or
aas
cwtl
pop
fcompl
int3
xor
xchg
addr16
sbb
imul
ss
call
lds
push
dec
fists
cli
imul
or
nop
jg
cmpl
lret
mov
sub
push
adc
mov
inc
das
xchg
or
push
test
mov
xor
shll
inc
popf
jnp
jne
and
jb
jb
inc
xchg
jp
xchg
xchg
mov
ret
jmp
push
jb
ja
sbb
jl
jl
ret
cmp
in
xlat
leave
push
pop
mov
inc
stc
mov
bound
test
mov
inc
add
sbb
sbb
dec
lret
inc
jb
sti
scas
push
into
int3
dec
xchg
add
push
stc
lock
cmp
loop
and
dec
sbb
lahf
fs
push
inc
in
cwtl
push
xchg
cmc
stos
xchg
bound
scas
adc
mov
push
mov
lcall
jp
dec
test
cmpl
sti
or
movsb
adc
addb
and
dec
jle
xchg
push
mov
add
dec
in
mov
and
xor
xor
cmp
cmpb
and
push
insl
xchg
mov
dec
jge
aam
sbb
mov
push
shll
sahf
pop
add
xchg
dec
jae
cmp
stc
adc
jnp
dec
xchg
add
adc
divb
xchg
wrmsr
das
ficoms
or
mov
xor
sub
sbb
cld
xchg
andb
in
add
mov
dec
mov
add
xchg
div
xchg
push
ds
sub
mulb
lods
sahf
lods
addb
sub
mov
jl
add
xchg
repz
ficomps
xor
mov
sbb
fisttpll
xchg
jmp
divl
xchg
cmp
mov
push
int3
cltd
cmp
fpatan
je
sub
cld
push
jae,pn
js
cmp
or
in
mov
shr
cwtl
leave
or
in
mov
clc
dec
xchg
shl
stos
adc
mov
sbb
loop
mov
adc
test
rorb
loop
or
sbbl
mov
mov
lods
scas
pop
lret
jge
es
inc
cltd
aaa
mov
ja
incl
int
ret
int
into
and
aad
dec
hlt
pushf
cmp
mov
xchg
push
jns
test
fnstsw
fstl
movsl
pop
stos
mov
movsl
push
mov
out
sbb
loope
cmp
cmp
cld
dec
sbb
push
dec
ds
jmp
cmp
inc
jo
sub
mov
stc
and
mov
or
sbb
imul
addr16
test
rclb
bound
or
push
cld
xchg
lahf
popf
pop
int
and
mov
sbb
test
fcoms
sti
or
notl
add
dec
add
pop
ja
rorb
cltd
push
sub
iret
cltd
xchg
xorb
ja
repz
cmp
stc
inc
pop
cld
movsb
add
loopne
adc
xchg
mov
add
mov
ret
mov
mov
dec
call
dec
rclb
add
dec
xor
fiaddl
rolb
xor
dec
int
dec
mov
xchg
xor
jge
movsl
scas
fidivl
xor
mov
lcall
jmp
rcrb
das
imul
lahf
andl
mull
xchg
or
cmp
push
cwtl
js
mov
jno
jg
push
sbb
pop
mov
sti
push
add
mov
loopne
jle
test
and
sub
scas
pop
xchg
test
scas
cmp
cmc
pop
or
inc
into
rcll
fisubl
lea
inc
sbb
outsl
xchg
lahf
lahf
insl
pop
popf
dec
mov
push
mov
gs
lret
das
insl
and
test
call
cwtl
fwait
movsl
adc
push
cmp
dec
out
inc
and
iret
in
fs
xchg
pusha
inc
cmp
in
out
arpl
loopne
xor
movsb
rorb
lods
xchg
enter
aaa
xor
lahf
sti
mov
mov
push
ja
jge
push
cs
sub
push
inc
pop
jno
add
psubd
xor
das
aam
stc
lods
sbb
mov
mov
inc
lahf
leave
xor
mov
mov
into
sar
jns
mov
ds
std
mov
in
je
lea
sbb
dec
cmpsb
pop
insl
imul
ja
push
vprotd
mov
mov
inc
mov
nop
lock
fimuls
loope
xlat
stos
dec
dec
imulb
jbe
mov
ret
lcall
mov
or
inc
es
adc
xchg
mov
xorb
or
rcll
mov
inc
or
pusha
push
cmc
add
mov
frstor
sbb
mov
je
jmp
jl
sbb
dec
sub
push
adc
adc
dec
dec
outsl
fstps
lcall
adc
sbb
inc
aaa
xor
cld
mov
aam
outsb
outsb
add
sub
lods
mov
inc
gs
or
int
outsl
iret
cli
mov
push
outsb
dec
ficompl
ljmp
fistpll
gs
inc
jg
pop
shl
mov
xor
sbb
imul
icebp
mov
xor
ljmp
test
dec
mov
cltd
cmpsb
test
arpl
das
mov
push
sub
cwtl
and
mov
xor
mov
outsb
push
inc
out
sbbl
aas
xchg
inc
add
pusha
xchg
inc
pop
push
mov
sahf
mov
imul
mov
mov
in
insl
rclb
mull
push
cmp
lret
cwtl
into
test
push
iret
sbb
cmp
jno
inc
jne
divl
cmp
inc
add
mov
cmp
mov
loope
test
lret
jge
push
outsl
jbe
xchg
mov
movsb
inc
repz
dec
jnp
inc
xor
test
sahf
and
pushf
prefetchw
or
add
movsl
call
leave
mov
mov
enter
sub
scas
dec
adc
enter
test
and
popf
and
sub
ds
mov
outsl
cwtl
push
repnz
pop
dec
jl
fldln2
lret
jge
cmp
pop
or
and
lods
jmp
out
push
jmpw
mov
data16
xchg
push
mul
stos
sar
adc
outsb
fstpt
fnsave
scas
aas
and
out
push
mov
aas
pop
sbb
fcomps
in
imul
sahf
adc
int
mov
inc
jl
fisttpl
adc
add
jp
lcall
and
fwait
jp
jbe
out
mov
sahf
popa
in
or
pushfw
pop
cmp
mov
mov
inc
xchg
mov
push
jne
inc
jb
xchg
pop
mov
jae
jecxz
cld
mov
in
inc
pop
jg
xlat
xor
pop
std
cmpsl
xchg
mov
mov
or
lea
jp
xor
push
mov
jnp
sbbb
adc
lea
pop
add
fs
mov
outsl
popf
rcr
adc
xor
sub
out
and
pop
mov
and
pushf
gs
stc
and
call
pop
setno
fstpl
movsb
or
dec
pop
lds
lcall
dec
and
mov
test
aaa
pop
sbb
and
push
push
cmc
orl
aam
lds
fsubr
int
les
test
jecxz
aaa
adc
fdiv
in
pusha
xor
out
sub
loope
scas
or
mov
clc
pop
mov
xchg
mov
cwtl
pusha
adc
gs
adc
or
popf
xchg
xor
xchg
add
je
fadds
fs
pushf
dec
xadd
xor
sbb
or
and
mov
ffreep
loope
cmpsl
cmp
stc
jb
push
lahf
xor
pushf
inc
scas
into
loopne
fstps
fldenv
mov
std
jno
dec
cmp
xchg
jle
sbb
pop
mov
mov
push
aas
mov
xchg
mov
push
xor
enter
xchg
lods
pop
outsl
loop
xchg
js
push
dec
adc
pop
xor
shll
ss
scas
adc
shrb
int3
out
and
imul
mov
das
shlb
scas
xchg
jmp
pop
xchg
lret
outsb
cmpsl
aam
nop
int3
mov
int3
inc
push
dec
jmp
loopne
xlat
pop
stc
jmp
movb
xor
sbb
mov
aad
xor
repz
rcrb
int3
in
mov
iret
pop
add
outsl
push
cmpsb
lock
stos
inc
aad
out
push
lahf
nop
push
inc
mov
popa
jns
insb
cmp
mov
xchg
out
ror
pushf
add
pop
adc
and
icebp
dec
mov
mov
sub
ja
pop
adc
push
pop
out
dec
mov
ljmp
push
mov
cmp
daa
mov
sbb
mov
cmp
jmp
sbb
scas
mov
xor
cmp
xlat
xor
jle
cmpb
stc
jge
ret
sbb
popa
mov
enter
jno
cmp
mov
cmp
orl
mov
xchg
filds
and
cmpsl
jge
xchg
push
std
notb
lret
cs
jp
and
pop
dec
xchg
sbb
sbb
dec
je
sahf
adc
mov
ljmp
bound
fcom
in
mov
clc
lods
jnp
or
clc
sbb
cli
ss
int
cmpsl
xchg
test
jecxz
inc
and
xchg
in
xor
addr16
jp
rol
mov
pop
out
fists
mov
movsb
mov
jno
push
mov
int3
in
pop
std
insb
in
xor
js
int3
daa
adc
adc
mov
aam
xor
push
jne
pushf
sub
arpl
ljmp
pop
and
cmp
add
and
out
jmp
adc
in
pop
cmc
pop
cwtl
in
adc
repz
sub
push
fcmovu
inc
jno
xchg
pop
adc
addr16
push
ret
inc
mov
ficoml
sbb
leave
repz
push
je
testl
in
sub
mov
repnz
out
in
cltd
push
in
sub
movsl
xor
jp
icebp
xchg
adc
add
pusha
or
xchg
repnz
xor
jg
scas
lret
add
rorl
push
inc
sub
lea
dec
xlat
stos
and
sub
fsubs
pusha
leave
mov
inc
and
ja
inc
in
popa
std
and
push
jl
cmpsb
sbb
inc
jmp
jne
ljmpw
sahf
out
or
call
mov
and
daa
movsb
push
lcall
mov
fmull
push
fwait
sbb
aad
mov
clc
lods
adc
filds
or
rep
add
add
imul
push
inc
and
fistpl
or
dec
push
adc
pusha
sbb
inc
mov
dec
mov
sbb
add
js
stos
roll
push
push
movsb
cmp
lahf
sbb
leave
jae
repnz
lds
inc
inc
icebp
in
neg
insl
testl
je
cmp
imul
add
jne
pop
negl
xchg
clc
jge
mov
pop
int3
imul
or
and
pop
sbb
inc
in
jb
mov
mulb
mov
or
ret
pop
pop
ljmp
int
imul
cld
cmp
jne
and
and
mov
mov
sub
or
outsl
mov
cmpsb
pop
repnz
lds
inc
shll
aad
xor
int3
add
or
jp
mov
mov
and
in
pushl
xchg
pop
fdivr
adc
jns
lods
jo
lds
scas
out
add
jecxz
push
and
ficoml
mov
mov
stos
jnp
xchg
and
jnp
out
movsl
cli
stos
mov
aad
in
mov
in
fwait
mov
lods
jmp
je
fsub
mov
aam
jecxz
mov
jp
out
mov
aad
test
inc
pop
psubb
outsl
jo
dec
mov
pushf
aaa
loope
frstor
rolb
mov
or
sbb
scas
negl
rcll
int
sbb
call
jb
enter
xor
jmp
out
out
ds
pop
mov
and
rcrb
xor
outsl
and
push
lcall
aad
jne
inc
or
out
fdivrs
fldenv
mov
icebp
or
je
stos
push
ret
xchg
mov
ret
into
repz
imulb
xchg
adc
jo
lahf
insl
sub
cltd
mull
pushf
bound
inc
notb
push
inc
orb
dec
jnp
ret
inc
mov
sbb
lods
aaa
push
jge
in
pop
jne
mov
pop
jb
stc
xor
xchg
mov
icebp
xchg
jle
getsec
stos
mov
mov
pop
add
xor
sub
shr
mov
jbe
inc
xchg
xchg
or
sub
add
mov
pushf
mov
mov
cmc
int
push
pop
cmp
hlt
xor
pop
or
nop
dec
pop
xchg
in
add
outsl
popf
sbb
lods
aam
or
mov
mov
test
test
in
dec
dec
nop
jae
mov
inc
inc
add
fistpl
mov
pop
pop
addr16
and
ja
inc
cmp
cs
push
inc
jp
jge
std
xchg
dec
cmp
sbb
punpckhwd
inc
lret
pop
xor
cmp
shll
xor
fsubrs
push
mov
sti
mov
ljmp
fistpll
leavew
fsubrs
ret
lret
or
push
ja
xorl
popf
sahf
hlt
imul
nop
add
ret
dec
and
push
cmp
ljmp
jge
push
jp
imulb
ret
push
pushf
daa
xor
in
arpl
rorl
movb
hlt
repnz
mov
andb
mov
jb
out
jl
lcall
aam
and
jns
jno
int
shr
cmp
jmp
sbb
and
xchg
addl
test
xchg
sahf
enter
fstps
leave
imul
mov
push
jg
cmp
dec
cld
shlb
and
insl
adc
repz
pop
jge
inc
outsl
sub
pop
sub
dec
dec
movsl
add
leave
shrl
mov
dec
es
cmp
fisubrl
xorb
lods
cmp
or
xchg
dec
mov
test
xchg
mov
fdivl
push
arpl
int3
pop
dec
lods
scas
jo,pt
in
and
push
mov
addr16
scas
or
sbb
jge
lret
aad
pop
cmpsb
cmpsb
jge
and
in
ret
or
insb
test
and
int3
mov
cmp
sbb
fs
fwait
loopne
and
imul
pop
xchg
lea
cs
add
mov
pop
aam
pop
fwait
stc
movsb
ret
add
push
lret
out
outsl
pop
inc
addb
mov
fbld
aas
test
or
imul
subl
sub
cmp
insb
jmp
rclb
aad
mov
pop
xchg
repz
push
imul
fs
int3
xor
add
loop
dec
das
xor
and
and
cld
gs
pop
ret
test
lods
imul
mov
xor
sahf
and
sbb
pusha
add
pop
inc
rclb
es
mov
imul
adc
and
jmp
mov
inc
out
sub
xor
dec
mov
lcall
loop
push
mov
or
in
out
in
cli
sbb
mov
sahf
dec
mov
mov
mov
or
cwtl
rorl
pop
fs
in
out
push
pop
test
sub
repnz
loopne
hlt
cmpl
sbb
imul
pop
mov
sarl
cmp
push
pop
mov
pop
out
mov
jl
push
add
push
std
push
pop
mov
test
lea
and
mov
insb
dec
aas
outsl
lret
mov
stos
clc
mov
adc
cmovno
cltd
adc
push
dec
ficompl
cmp
cli
mov
fists
jg
idivb
pop
add
iret
sbb
fistl
mov
jae
jo
movsl
xchg
mov
and
dec
dec
push
fldenv
dec
mov
in
and
lea
cwtl
mov
jno
push
sbb
daa
je
inc
mov
arpl
cs
mov
xchg
jmp
je
add
xchg
mov
fadd
test
push
lods
jnp
imull
inc
jo
shr
xchg
test
xchg
pop
sub
leave
dec
outsb
lcall
and
test
cwtl
xchg
inc
sub
lock
das
cmp
xchg
pop
in
in
xchg
in
clc
jecxz
cmp
bound
mov
movsb
and
std
lock
inc
test
adc
sbb
iret
add
cwtl
in
sbb
mov
test
add
out
add
mov
into
pop
mov
jnp
cmp
mov
jno
std
mov
jl
ljmp
mov
lea
int
jbe
repnz
in
in
add
fpatan
in
mov
pop
sbb
aad
xor
popa
add
push
mov
mov
xchg
call
mov
ss
sarb
mov
mov
sbb
jnp
mov
cmp
rcll
stc
outsb
cld
add
push
cmpsb
ljmp
into
push
arpl
pop
out
aam
sbb
outsb
pop
call
loopne
sub
lods
test
mov
cmp
cwtl
xlat
in
fisttps
enter
inc
lret
jp
push
pop
mov
mov
hlt
jo
inc
shl
fcomp
mov
mov
pop
outsb
test
jno
jmp
rcrl
inc
xor
pop
popf
xchg
jb
dec
sub
les
pop
push
scas
mov
cwtl
pushf
outsl
jmp
or
std
mov
out
pop
jne
aam
cs
xchg
jae
adc
aam
rclb
pusha
sub
es
pop
mov
push
lret
xor
jns
push
and
mov
shll
jecxz
into
sbb
cmp
add
push
fsub
pop
shrl
sub
dec
mov
push
mov
ficomps
icebp
cld
ljmp
test
xor
pushf
stc
jns
je
test
jae
insl
and
pop
push
enter
imul
mov
push
lcall
lret
jb
sbb
and
add
scas
fs
sub
inc
cmp
lods
pop
int
mov
outsb
mov
rcr
icebp
add
lcall
add
sbb
lds
into
lds
mov
lret
je
push
in
add
ss
push
or
into
adc
inc
mov
and
ja
icebp
and
mov
in
out
xorb
dec
test
stos
mov
xlat
cmp
cs
in
jo
mov
sub
cwtl
adc
into
pop
jnp
cmc
mov
shlb
xor
ja
stc
and
jo
xor
mov
sti
dec
jae
fcoms
js
pop
insl
mov
adc
xor
mov
clc
mov
loope
aad
push
test
push
push
mov
adc
mov
push
push
jbe
bound
cmpsb
mov
in
aam
ja
fcompl
inc
shlb
mov
xor
and
fimull
xor
fcoms
aam
push
ret
and
shlb
sub
add
mov
jp
and
orl
les
lock
mulb
popa
dec
xor
sub
jecxz
mov
mov
addr16
loope
roll
iret
sub
jne
gs
xchg
cmp
and
pop
lret
out
sti
sub
jbe
popw
lcall
push
mov
add
sbb
lret
mov
test
push
xor
xor
lock
popa
mov
and
push
cmp
pop
xor
mov
add
xor
push
xchg
pop
loope
and
inc
in
xchg
or
xor
adc
lret
daa
or
and
jle
pop
divl
jmp
add
mov
xor
push
sbb
loope
inc
sbb
sti
inc
push
rcrl
mov
sbb
loope
pop
add
leave
call
test
jmp
dec
out
icebp
in
cmp
adc
or
sbb
xlat
add
mov
shlb
and
or
sbb
js
dec
test
jecxz
dec
fcomps
dec
add
clc
outsb
cwtl
lods
rol
stc
negl
jmp
ss
sti
ret
rcrb
cs
cli
mov
add
pushf
cmp
inc
xor
pop
rorb
inc
jecxz
push
pop
add
xor
imull
push
movsb
cmp
outsb
dec
push
stos
jae
dec
into
pop
stos
imull
out
movl
cltd
mov
ja
sub
mov
or
pop
rorb
cs
add
pop
stc
fnstcw
xchg
xchg
lock
add
dec
adc
and
sub
jle
shrd
sbb
xlat
sub
add
cmp
dec
xor
mov
sbb
or
mov
pop
xchg
xor
mov
mov
imul
mov
daa
jo
add
ss
adc
bound
lcall
inc
fisubrl
xor
jns
pop
fsub
sub
add
or
cli
imul
or
sub
pop
aaa
jnp
sbb
dec
push
fisubl
inc
call
loope
xchg
sub
sub
ljmp
ljmp
insb
sub
push
rolb
xorl
add
add
cmpsl
cmp
imul
cmc
movsl
mov
into
sbbb
xor
or
mov
push
in
pop
add
ljmp
out
cli
sti
sub
sbb
repnz
imul
jmp
pop
inc
mov
add
sub
js
xor
orl
repz
cmp
jae
ja
pop
lret
xor
icebp
enter
dec
loop
rcrl
jle
sbb
xchg
dec
je
mov
popf
mov
cmp
inc
shld
dec
enter
ja
call
add
std
into
lahf
subl
in
mov
scas
mov
aaa
pusha
out
push
aas
cmpsb
inc
addr16
mov
and
jle
cli
cmp
and
fnstcw
xor
repnz
jno
sbb
inc
dec
or
cmp
adc
push
sbb
add
sti
jbe
and
out
xchg
xor
push
mov
xor
pop
inc
and
adc
iret
sub
loopne
hlt
cmc
or
lods
jae
dec
sub
movsl
data16
cmp
dec
and
aad
jle
inc
xor
incl
mov
mov
mov
dec
dec
scas
mov
add
sbb
cmc
sbb
mov
shl
mov
and
daa
push
outsl
mov
and
insb
out
jo
decl
outsb
xor
cmc
jl
mov
mov
jns
shll
adc
bound
out
inc
and
pusha
bound
xor
jp
add
xchg
stos
mov
sarb
mov
sbb
push
ret
pop
aas
and
lods
subb
jb
jmp
int
roll
movsl
stos
sbb
mov
mov
test
or
pop
fidivrs
adc
mov
fisubs
lret
mov
adc
add
jae
mov
pop
addl
js
aas
fmuls
mov
fldl
sub
movsb
adc
imul
mov
shlb
push
xorb
cmp
adc
out
outsb
sti
adc
fdivp
mov
pop
push
xchg
adc
xlat
andb
in
out
xlat
jns
add
mov
lods
cmp
sbb
mov
jle
jecxz
adc
adc
push
xor
loopne
xchg
mov
loope
mov
pop
bound
test
sub
stos
sti
into
push
test
cmpsl
sbb
inc
push
out
gs
stos
mov
and
rcll
xchg
xchg
push
inc
mov
inc
mov
jmp
jb
loopne
test
fwait
sar
fldl
fs
push
pop
inc
pop
xor
movsl
popa
in
xor
cltd
xchg
inc
jb
insl
in
sbb
fnstenv
rcrb
mov
into
fiaddl
xor
add
mov
lret
ds
sbb
mov
mov
ja
shr
sbb
push
lds
shlb
sarl
icebp
inc
mov
out
and
mov
lods
cmp
stos
or
mov
jno
ljmp
out
and
inc
mov
outsb
loope
pop
xchg
inc
aam
sbb
dec
data16
hlt
js
leave
push
inc
mov
jle
or
dec
dec
cwtl
xchg
lea
jo
dec
loope
xchg
test
in
inc
mov
or
sub
cmp
outsb
leave
popf
inc
add
lcall
popa
int
or
loope
mov
arpl
pop
inc
clc
mov
jae
jbe
ja
call
ss
shll
daa
cmpsb
out
lahf
xchg
or
xorb
lret
pop
repz
jecxz
mov
adc
fwait
jl
cmpsb
xchg
lcall
sarb
aam
cs
adc
jecxz
orb
mov
xchg
sub
add
cmp
mov
push
push
gs
pop
adc
rcrb
stos
add
dec
adc
clc
and
or
push
movsl
sbb
pusha
iret
sbb
stc
jno
mov
and
sbb
cld
push
lods
dec
xorl
loopne
in
sti
xchg
inc
fwait
sahf
imul
jns
push
cs
mov
mov
mov
iret
inc
adc
popa
inc
sbb
lret
and
jle
orl
jle
sahf
icebp
inc
pop
mov
mov
xor
sbb
push
fcmovbe
cmp
sbb
loop
pop
xor
jne
add
repnz
mov
jnp
pop
xchg
xlat
push
stos
inc
daa
push
sahf
push
lret
sub
bound
gs
test
fs
and
jns
or
shr
cmpsl
ret
shll
aas
ljmp
mov
push
inc
sbb
pop
pop
xor
aaa
stos
pushw
push
adc
push
orb
pusha
xchg
mov
aaa
mov
adcb
inc
pop
mov
fwait
dec
mov
shlb
or
xchg
sbb
cmpsl
pop
nop
fmuls
fdivl
mov
jl
push
xchg
sbb
inc
dec
sahf
cli
inc
jbe
repz
ja
jl
lahf
fcoms
jge
mov
pop
icebp
mov
popf
and
push
hlt
sbb
cwtl
loopne
push
stc
ret
add
xchg
or
jo
add
mov
xchg
stos
ss
stos
shll
lcall
idivl
dec
arpl
fdivrp
jecxz
es
xchg
xchg
jge
shlb
ja
repnz
loopne
mov
add
mov
or
sbb
xchg
xor
pop
or
cmp
cmc
jae
fxrstor
mov
lock
pop
jl
outsb
ss
test
ret
push
ret
mov
xchg
push
inc
ss
sbb
shlb
aad
add
mov
insb
fstp
negb
in
insb
call
es
pop
rorl
pop
mov
bound
popa
iret
in
scas
aaa
adc
lea
lahf
fiadds
push
les
push
shlb
mov
popa
adc
test
add
enter
add
mov
sbb
iret
rolb
lahf
popa
adc
cli
push
addb
std
adc
js
es
mov
adc
enter
push
fdivs
and
test
leave
pop
xor
jae
dec
cmp
cmpb
orb
js
popa
xchg
scas
sbb
and
mov
repz
cmp
iret
sub
mov
pop
add
ret
fwait
jno
mov
push
daa
fldt
ja
mov
pop
dec
pop
mov
dec
push
shl
dec
dec
lahf
cmc
and
sahf
movsb
mov
adc
push
inc
gs
lret
cs
xor
test
imulb
xor
xchg
pop
imull
out
std
or
jbe
out
fsubl
dec
arpl
jl
xchg
xlat
fwait
mov
mov
sub
jae
dec
daa
nop
mov
fildl
and
mov
jg
sub
jns
mov
mov
cli
sub
pop
mov
mov
test
jmp
xchg
cmp
cmp
mov
gs
hlt
adc
sbb
std
inc
test
incl
jae
jo
push
sbb
outsl
mov
scas
bound
jb
mov
and
mov
adc
xchg
inc
int3
jne
push
lcallw
mov
jmp
frstor
mov
mov
mov
lcall
arpl
xor
mov
sub
push
or
push
sbb
dec
cmp
adc
lcall
ret
add
inc
or
push
clc
or
cld
jg
mov
mov
out
jge
loopne
aam
mov
cmp
mov
pop
gs
lcall
add
pop
outsb
rorl
es
sti
add
sub
insb
jb
push
dec
and
icebp
inc
and
sub
das
xchg
xchg
push
jmp
shll
and
out
sub
in
imul
icebp
pop
ficomps
aaa
std
jp
orb
shll
stos
int
mov
or
lret
push
cmc
jbe
andw
loopne
leave
pop
xchg
jecxz
sahf
iret
xchg
add
push
ror
xor
add
or
andl
inc
fistpl
dec
loope
push
cmc
sahf
inc
cmovg
push
scas
dec
jg
sub
dec
jmp
cld
jo
outsb
aas
pop
mov
pushf
mov
out
and
outsb
pop
push
cmp
outsl
mov
call
push
nopl
rcll
sbb
mov
sahf
stos
or
fs
arpl
pusha
pop
push
or
lcall
xor
daa
je
rclb
stc
ror
jge
repz
sbb
and
imul
pop
adc
push
arpl
pop
fbld
xchg
lods
jge
add
and
xchg
out
mov
aaa
xchg
pop
inc
dec
cltd
mov
push
or
mov
js
je
or
data16
mov
adc
lods
pushf
pushf
data16
inc
outsl
insl
sub
dec
inc
lret
iret
sbb
inc
movsl
jmp
dec
lock
inc
pop
movsl
inc
enter
xchg
pop
mov
cli
mov
test
xor
in
ss
test
ja
sub
arpl
rcll
push
or
iret
test
leave
or
push
stc
adc
enter
enter
into
rcrl
lahf
sub
popa
fmull
loopne
fstp
stos
jae
push
lock
or
out
inc
popf
jp
lret
insb
out
mov
jmp
pusha
fdivrs
ret
sbb
jns
and
andl
push
lds
or
movsl
sub
scas
in
leave
test
mov
stc
loope
mov
and
mov
or
icebp
cmp
xor
les
loope
pushf
pop
jge
subb
or
cltd
sbb
rolb
xor
cmc
movsl
scas
lods
addr16
cld
push
mov
jo
sub
sti
sbb
jns
outsb
inc
nop
inc
cs
sub
xchg
push
js
stos
pop
out
outsb
xchg
outsl
cmp
dec
cmp
leave
pushf
mov
pop
sub
dec
push
enter
fnsave
or
xchg
pushf
cld
xor
sub
adc
and
inc
pop
cwtl
in
push
push
jae
lock
cmp
dec
lods
push
or
out
movsl
out
xchg
in
mov
push
mov
push
into
cmp
cmp
sti
or
lret
out
imul
mov
mov
out
lea
fwait
inc
jle
fimuls
and
inc
jns
or
inc
xchg
stc
cmpsb
pop
rcrb
shl
loopne
sub
lea
int3
fs
bound
cmp
cs
mov
mov
outsl
hlt
pop
push
sbb
dec
adc
stc
out
mov
test
lea
test
or
inc
lcall
in
inc
stc
xchg
rorl
xor
negb
push
mov
or
lret
sub
sub
ljmp
pop
jbe
pushl
mov
jnp
aam
mov
aaa
and
or
cwtl
add
insb
fisubrl
xchg
pop
pusha
frstor
push
je
imul
jno
sbb
cmp
stos
sub
xchg
ljmp
imul
jns
cmp
pushf
sarb
jne
mov
test
mov
loop
jmp
fwait
das
iret
call
dec
adc
push
dec
or
sbb
pop
inc
imul
adc
cmp
push
imul
push
dec
in
xor
jg
fidivl
pop
jl
push
jb
stos
cwtl
in
roll
push
nop
sub
ds
repz
pop
out
inc
js
iret
jl
cmp
data16
dec
dec
xchg
mov
push
testl
icebp
mov
xor
mov
mov
shrl
cld
cwtl
jo
insb
daa
sub
cmpb
xchg
dec
mov
lods
pop
call
aad
pusha
inc
stos
repz
mov
int3
fwait
jnp
lahf
cld
ja
into
mov
push
adc
pop
jmp
call
lcall
inc
adc
insb
outsb
dec
sbb
dec
cwtl
xor
lods
clc
jnp
insb
jp
pop
pop
push
iret
inc
jg
mov
sbb
push
dec
jge
jle
pop
push
clc
or
sti
mov
stos
gs
js
fsubrs
loop
daa
add
cmpsl
pop
or
js
iret
xchg
and
lahf
dec
data16
xchg
stos
iret
adc
and
loope
lds
mov
push
sahf
aaa
ret
out
pop
jge
stos
pop
and
pop
inc
pop
lret
imul
pop
push
mov
push
stc
pop
popa
push
aam
das
and
xchg
mov
enter
cmp
xlat
jmp
loopne
aam
mov
mov
pop
mov
ret
aam
jle
mov
pop
jecxz
sub
cmpl
scas
addr16
in
and
sti
pop
jge
fcomi
xchg
popa
test
mov
mov
out
cmp
xor
or
cmc
push
jnp
out
sub
into
stos
js
xor
cmp
xchg
jne
xchg
sbb
mov
cs
pop
pop
andl
and
pop
push
add
xchg
push
adc
xor
int3
mov
sbbb
dec
es
xor
push
iret
add
fidivrs
leave
aad
out
std
jecxz
std
pop
fstpl
lahf
jns
push
dec
push
mov
iret
aam
mov
not
aas
or
or
cmp
xor
ljmp
rcl
outsl
sbb
aad
dec
in
incl
mov
mov
pusha
in
sub
xor
cli
add
jle
inc
adc
testl
jo
pop
push
xchg
imul
xor
int3
sub
je
movsb
cmpsb
std
in
stos
enter
mov
mov
jbe
add
in
filds
ret
pop
xor
xchg
lock
push
push
jl
shr
inc
mov
add
adc
mov
in
in
jb
sub
push
lock
loopne
mov
les
lcall
ret
xchg
push
jnp
rol
cmpsl
xor
jbe
or
adc
jne
or
aas
jb
lods
xchg
jge
xchg
adc
inc
jae
push
add
lcall
cmpl
loop
add
xchg
inc
leave
stc
and
ret
dec
lcall
out
mov
ljmp
aam
lds
scas
test
dec
push
daa
adc
sub
les
ljmp
mov
cmp
pop
int
dec
mov
inc
in
or
mov
mov
jmp
rolb
jb
sarl
mov
insl
mov
mov
cmp
push
mov
fdivrl
mov
jmp
divl
inc
ds
std
jb
dec
mov
scas
sbb
repnz
jle
cmpsb
jp
into
dec
pop
cld
or
sbb
rcl
xchg
lcall
mov
cmp
and
mov
jb
imul
es
mov
testb
int3
mov
sub
xchg
mov
or
jmp
jae
xchg
seto
and
fs
cmc
dec
nopl
cmpsl
sub
or
adc
inc
jg
daa
cmc
cmp
push
addb
bound
ja
imul
mov
push
scas
mov
inc
je
mov
xor
add
ret
xchg
sbb
enter
jne
and
xorl
push
add
or
lret
lret
fs
push
aaa
and
pop
adc
fwait
inc
jb
jae
inc
shr
push
xchg
jo
mov
push
lret
xchg
cmp
iret
mov
xchg
jle
negb
push
mov
iret
bound
push
int3
jbe
insl
sub
sbb
stos
mov
jae
cs
rclb
pop
add
dec
pop
psrlw
enter
in
push
les
sbb
xchg
inc
add
insl
test
or
gs
bnd
negl
adc
push
sti
loop
daa
sub
insb
ljmp
shrb
popf
das
pop
shrl
jge
jo
pop
mov
adc
outsb
jl
mov
push
inc
jp
shll
clc
aas
out
lock
xor
jecxz
cli
jl
movsb
sub
insb
add
inc
or
ror
fdivrp
lock
adc
fistpll
shlb
in
inc
push
mov
lods
jp
mov
dec
loop
pushf
loopne
fnstcw
pop
mov
int
sbb
aam
add
sbb
leave
je
add
xchg
push
movsb
fwait
push
int3
mov
int3
jl
mov
mov
xchg
cmpsb
mov
icebp
loope
push
pop
fbld
or
cmpsb
xor
xchg
adc
sarl
fists
add
dec
mov
jb
dec
mov
sub
push
loope
fs
sarl
cmp
stc
movsl
pop
mov
mov
jg
mov
dec
inc
xchg
std
shll
int
std
ficompl
packuswb
mov
xor
dec
ja
int
pop
pop
adc
out
addb
push
adc
mov
aam
pop
sahf
enter
imul
pusha
inc
fmuls
out
jmp
int3
ss
movsl
add
sub
and
mov
push
stos
mov
outsl
das
xor
dec
imul
xor
dec
xchg
xchg
push
cmc
icebp
sbb
sub
dec
repnz
mov
fbld
mov
cltd
je
sub
pop
add
pop
pop
aaa
scas
add
inc
mov
cmpsl
xchg
inc
test
and
mov
sub
jge
popa
in
mov
repz
adc
mov
mov
cltd
dec
out
sbbb
dec
test
fldcw
inc
inc
xor
inc
cmp
adc
jne
sub
fisttpl
ss
into
jns
shr
pop
and
hlt
testb
pop
cltd
mov
inc
jnp
ds
inc
mov
mov
add
les
shl
cmp
mov
or
mov
int
loop
xor
adc
addr16
mov
ljmp
or
aaa
test
push
xor
rcr
fdiv
cmp
cld
icebp
cmp
lods
pop
mov
mov
js
mov
jnp
push
cmc
subb
or
xchg
sahf
add
mov
pop
gs
sbb
xor
daa
jge
push
aam
iret
inc
mov
adc
xlat
add
fidivrl
or
lods
xlat
sar
int
pop
or
fcoml
stos
mov
jb
xchg
push
adc
enter
pop
cmpsb
hlt
mov
mov
cmpsb
ljmp
je
mov
aam
push
mov
cltd
inc
dec
push
pop
cmpsb
loope
test
push
fisubs
mov
sub
div
shl
int
shll
xchg
enter
push
es
xchg
dec
xchg
lcall
jae
outsl
sti
adc
out
mov
mov
fwait
neg
aas
pop
scas
scas
lahf
adc
adc
push
jns
stos
cmp
repz
popa
jo
lahf
lds
jo
dec
inc
and
adc
ret
xchg
clc
sbb
insl
faddl
xor
aaa
push
push
pop
mov
jp
test
ss
xlat
loop
inc
outsl
xor
push
pop
xor
jmp
sbb
adc
in
js
test
or
enter
jo
aad
or
movsl
hlt
test
mov
dec
mov
xor
insb
xor
jae
sbb
movsb
mov
mov
lea
andl
outsl
add
fnstenv
inc
nop
gs
mov
iret
cwtl
pusha
jge
aas
push
not
and
or
jbe
mov
xor
enter
aad
sti
or
add
lcall
mov
cli
lcall
dec
sti
cmp
dec
es
in
xor
xchg
insl
and
inc
or
stos
loop
pusha
xor
adc
test
test
out
adc
or
xchg
or
dec
sub
push
pop
lahf
scas
push
cmc
dec
shl
cmc
xchg
aam
fadd
sarw
cld
xlat
add
adc
icebp
pop
dec
hlt
pop
out
aam
lahf
mov
in
add
cmp
add
pop
pop
push
dec
and
mov
cld
loop
add
pop
add
ficomps
dec
inc
push
lcall
out
rcrl
movsb
mov
gs
inc
mov
lahf
mov
dec
mov
adc
in
insb
push
jne
je
mov
cmp
pop
mov
push
jae
adc
mov
js
int3
fisttpll
loope
cwtl
jle
mov
sarl
sbb
std
daa
cld
ljmp
cltd
leave
xchg
xor
sbb
cld
fs
xchg
jp
movsb
test
push
mov
popf
icebp
xchg
sub
xchg
jb
jp
sbb
jb
add
xchg
insl
cmp
mov
cmp
ficompl
shrl
les
xchg
scas
cld
xor
and
rcrl
lahf
xor
or
mov
xchg
jmp
mov
lret
pop
cli
inc
dec
pop
xor
jnp
cmp
sbb
inc
xchg
and
pop
rcll
lret
xchg
stc
sahf
imul
pop
inc
add
mov
movsb
mov
pusha
xlat
pop
loope
pushf
inc
lds
out
xchg
shrb
aad
shll
call
pop
lea
xchg
cmc
fs
jne
sub
rorl
and
test
add
stos
repz
push
mov
fists
xor
andl
push
pop
push
adc
dec
out
add
idivl
inc
jmp
jle
gs
mov
xorl
mov
fimuls
mov
shrb
out
ret
cs
fdivrl
dec
inc
hlt
into
jge
in
jb
repnz
out
jl
bound
or
cld
fwait
mov
xor
sahf
inc
test
cld
shlb
repz
mov
std
ja
addr16
push
and
cld
mov
repz
inc
mov
loop
add
xor
scas
push
cmpsl
adc
int3
cmp
dec
mov
ret
popa
stos
inc
icebp
pop
jmp
jle
outsl
scas
xor
inc
mov
cmpsb
ret
mov
pop
scas
js
cmp
aad
into
popl
out
push
xor
adc
adc
aas
mov
outsl
jb
adc
adc
sbb
stos
add
add
imul
jns
loop
ljmp
push
test
arpl
fbld
sub
mov
jne
cmp
shrb
mov
adc
dec
jno
ret
xchg
sub
mov
pop
stos
outsl
and
stc
xchg
cli
dec
cld
lock
frstor
arpl
lock
mov
adc
stos
rorl
mov
xor
into
jno
xchg
mov
loopne
shll
arpl
pushf
movsl
pop
fisttps
cmp
push
jle
or
lret
inc
fnstcw
fs
pop
mov
inc
mov
inc
inc
inc
or
sub
xchg
arpl
push
or
bound
push
mov
adc
shlb
adc
jp
jne
imul
lret
sbb
add
xchg
inc
lret
mov
imul
push
jo
cmpsb
sar
push
dec
push
out
movsb
scas
sarb
cli
inc
divl
jo
enter
shr
sbb
hlt
pop
xchg
andb
push
and
loop
and
subb
fwait
dec
popf
iret
shlb
adc
mov
cltd
xchg
push
xchg
xchg
pop
push
sarb
pop
shrb
in
mov
push
xor
frstor
lret
pushf
cmpsb
mov
fiadds
sbb
and
pusha
scas
in
scas
pop
inc
out
fidivrl
push
popa
inc
fsubp
negb
repz
int3
xchg
adc
xor
adc
push
dec
mov
sbb
nop
addr16
xchg
push
xchg
das
les
dec
xchg
and
mov
xchg
fildll
inc
inc
or
movsb
jbe
push
ja
test
call
fnstcw
out
mov
and
mov
orl
insb
pop
dec
dec
mov
push
test
lods
dec
mov
and
pop
cmp
fdivr
mull
test
out
jae
pop
add
ror
jb
xchg
sti
jmp
sbb
stc
jbe
out
inc
test
es
subl
and
repnz
mov
in
jne
fistpl
mov
cltd
cwtl
adc
psllw
out
xor
add
inc
adc
xchg
ss
or
nop
stos
inc
push
fxch
gs
jl
enter
push
stos
lock
in
and
or
push
pop
mov
mov
adc
or
jns
imul
cmp
insl
mov
enter
test
inc
push
lret
filds
push
or
xchg
mov
or
fidivl
xchg
mov
mov
jl
or
push
test
or
in
and
adc
insb
movsb
fs
mov
pop
in
add
and
popf
push
clc
test
mov
xchg
xchg
outsl
push
xor
jp
inc
into
jecxz
stos
pushf
push
jb
xchg
mov
add
mov
outsl
dec
out
pop
mov
pop
cmp
mov
cmp
mov
sbb
fucomip
jo
nop
sbb
push
push
scas
dec
das
fidivl
mov
mov
dec
cltd
std
das
test
addb
adc
repnz
clc
xchg
fsubrp
adc
out
add
stc
push
sbb
into
jmp
mov
add
jmp
pop
inc
jb
ret
mov
sub
test
mov
dec
pop
and
and
sub
scas
mov
push
sub
xchg
leave
pop
jle
fnsave
aas
lock
popa
mov
fcomps
les
notl
xchg
inc
sahf
hlt
mov
pop
cmp
mov
and
addr16
mov
leave
mov
cmp
mov
popf
push
mov
lcall
pop
test
dec
scas
call
rorl
out
mov
cmp
xchg
pop
mov
sub
xorb
push
icebp
inc
jbe
sub
sub
push
fisubs
aaa
repnz
aas
dec
rcrl
test
add
sub
push
daa
xchg
xchg
xchg
jge
add
rcl
sbb
in
popf
inc
push
aam
mov
lahf
shl
clc
pop
loope
dec
std
es
hlt
sub
je
jo
aam
cli
jo
pop
inc
fwait
add
mov
mov
movsb
push
jns
out
imul
lods
push
mov
mov
push
or
pop
ja
xchg
popf
cmp
js
jae
stos
lahf
push
xchg
test
sub
xchg
out
and
adc
jmp
aad
sub
inc
les
test
add
fildl
sub
ficompl
leave
sbb
test
add
xlat
xchg
insl
lahf
xchg
stc
mov
rclb
mov
je
jge
icebp
mov
inc
call
aaa
cli
dec
add
aam
and
jmp
add
inc
sub
push
or
xchg
push
orl
js
sar
mov
jge
cvtps2pd
rorb
cmpsl
dec
mov
jb
jl
out
sbb
add
insl
into
or
fsubl
xchg
pop
or
mov
out
pop
push
lods
pop
push
jbe
divl
fimuls
jns
jae
rcrb
sti
leave
imul
and
mov
out
dec
movsb
ja
jmp
loop
hlt
js
fstps
stc
dec
into
mov
xchg
rcrl
mov
fnstsw
mov
and
jmp
add
push
gs
or
push
repz
lea
add
mov
repnz
cmc
inc
adc
or
dec
outsl
inc
ja
mov
arpl
js
lock
cwtl
and
add
rolb
call
inc
addb
xor
notb
xor
jns
inc
sub
mov
imulb
testl
repz
or
popf
hlt
repnz
leave
xchg
jmp
adc
ja
jle
and
ror
fadd
pop
movb
jge
out
and
jmp
hlt
jb
lcall
subl
jb
xor
pop
inc
cld
sbb
pushf
dec
stc
repnz
lods
jge
mov
fsubr
add
pop
jp
in
icebp
lock
dec
lock
xor
loopne
repnz
push
bound
pop
popa
test
cmp
dec
xor
bound
pop
test
add
ljmp
or
push
ret
scas
test
icebp
inc
pop
fnsave
mov
imul
pmulhuw
daa
cmp
xchg
mov
je
mov
out
faddp
cmpsb
lahf
lods
lds
mov
sub
add
pop
in
mov
shrl
iret
adc
fidivrs
int
popf
xor
mov
div
jae
repnz
sub
mov
xchg
std
jae
out
fldt
sbb
mov
sbb
js
adc
sti
in
aam
mov
mov
adc
sbb
xchg
mov
aas
fisttps
mov
push
mov
or
dec
adcb
idivb
sti
cmp
adc
inc
sbb
out
mov
jecxz
xchg
xchg
sti
lds
ret
push
cmp
jno
out
mov
push
xchg
ret
lcall
sub
jno
mov
or
mov
push
je
mov
adc
bnd
fistpll
inc
jae
outsb
repnz
sbb
outsl
mov
inc
dec
out
pop
popl
sahf
shll
mov
leave
pop
imul
call
es
fdivrp
sbb
in
mov
xchg
popf
in
das
mov
jns
mov
inc
shlb
jp
inc
ss
cmp
sub
adc
mov
xor
sbb
xchg
es
out
sbb
mov
leave
dec
dec
add
clc
sbb
popa
sbb
lods
cwtl
test
push
fwait
cli
dec
sbb
jbe
test
lahf
or
gs
negl
faddl
adc
icebp
xchg
maskmovq
testl
xor
push
scas
mov
gs
bound
dec
pusha
pop
pop
imul
pop
mov
iret
stos
and
add
mov
les
sbb
fs
fldenv
ljmp
and
mov
sub
sbb
jns
xchg
loope
push
cmp
bound
cltd
int
pop
lds
sub
ret
or
jo
xchg
lret
inc
rcl
fnstsw
ja
or
sbb
dec
imul
jge
mov
aaa
xor
xor
stos
push
push
icebp
jmp
mov
mov
enter
popa
inc
not
les
push
adc
notl
mov
ret
pop
xor
fistl
and
mov
outsb
cmpsb
add
add
push
fistl
divl
sbb
nop
xchg
adc
lret
rcl
pop
fcom
pusha
es
pusha
jnp
cmp
insl
jle
cmpsl
mov
or
sbb
inc
daa
cmp
dec
mov
mov
in
push
loope
mov
aas
mov
push
jb
shlb
pop
arpl
mov
mov
inc
jns
xchg
dec
push
sarl
or
repnz
pop
sub
sbb
imul
xchg
sahf
mov
jbe
int3
gs
or
push
or
int
mov
jmp
imul
je
sub
cmp
in
push
cmp
inc
sar
mov
or
sbb
push
rcl
pop
mov
pop
inc
jl
xor
and
rclb
mov
mov
aas
mov
push
ljmp
call
shr
xorl
cmovne
lea
aam
leave
fwait
inc
pushf
movsb
outsb
push
ljmp
pop
aaa
lahf
add
xchg
enter
sbb
jne
jno
mov
enter
pop
out
or
mov
inc
mov
cmp
scas
jns
jb
sub
push
jo
in
mov
leave
repnz
add
int3
das
in
iret
loopne
mov
test
popf
adc
dec
inc
fmuls
inc
mov
enter
pop
shll
pop
sbb
call
mov
cltd
insl
pop
pop
arpl
jno
adc
aaa
std
ret
sbb
adc
push
dec
imul
xor
jecxz
pushf
jno
jnp
mov
push
push
xor
loope
or
stc
cmp
out
stc
inc
fildl
call
sbb
and
ret
xchg
inc
sbb
rorb
add
pop
add
pop
sbb
imul
movsl
popf
nop
int
pop
or
dec
in
jp
out
lock
cmp
sbbl
in
lds
test
pushl
pop
stos
mov
pop
bound
or
adc
loop
xchg
ja
sub
cs
dec
ret
dec
or
pushf
pop
pop
out
ljmp
pop
jbe
pusha
rcll
adc
mov
sbb
mov
movsb
adcb
dec
fidivrl
pop
fwait
pop
fcomi
pop
push
les
xchg
sub
xor
cmp
repnz
into
jns
add
push
adc
xor
aas
jnp
sub
repnz
into
out
adc
push
push
int
pop
pop
lea
dec
pop
popf
add
cmp
inc
sbb
xor
sub
mov
pop
das
lret
push
decb
sahf
ljmp
das
outsb
sbb
lods
rcll
sbb
test
sub
adc
mov
sub
insb
mov
cli
mov
es
add
cli
dec
pop
sbb
movsl
xchg
mov
in
and
insb
mov
pop
iret
aas
mov
fimull
cld
adc
test
and
cmp
in
sbb
and
sub
inc
mov
dec
cltd
test
imul
cmc
inc
in
jbe
pop
mov
or
push
jne
lcall
adc
jg
xchg
shl
cmp
test
loope
rcrb
loope
inc
jmp
fsubs
lods
jnp
sbb
in
pop
dec
lret
xor
push
sbb
mov
sub
nop
ret
push
mov
mov
lods
sahf
rorl
sub
sbb
loop
inc
dec
fisubrl
jg
ret
divl
sbb
out
push
cwtl
jge
jo
xchg
sbb
mov
xorl
lods
jecxz
insl
push
mov
andb
clc
sub
push
inc
cwtl
shl
nop
dec
into
sbb
insb
aad
mov
rolb
loop
xchg
and
mov
dec
pop
test
add
cmp
adc
pop
pushf
jmp
mov
bound
jecxz
in
jecxz
xchg
clc
mov
rcl
lock
fxch
loope
jae
outsb
adc
aas
jne
stos
and
push
bound
roll
mov
loop
outsl
sahf
out
loope
test
xor
pop
xor
fists
mov
sti
dec
sub
mov
shr
mov
stos
mov
lds
out
or
movl
lock
pop
adc
mov
add
xor
outsb
mov
lea
ds
out
inc
rcll
call
pusha
xchg
adc
clts
xchg
shlb
add
int
mov
fildl
mov
int
mov
cmp
adc
push
pop
jle
push
pop
jnp
inc
outsl
imul
add
push
jae
pop
in
mov
add
jb
test
outsl
outsb
pop
icebp
outsb
orb
cmp
mov
test
mov
bound
fbld
sti
in
xchg
mul
pop
and
push
pop
sahf
gs
cmpsl
dec
xor
sbb
shrb
mov
xor
idiv
jl
sub
imul
jmp
inc
mov
daa
xchg
push
sbb
jp
push
and
cmp
add
mov
pop
jno
movsb
adc
stc
addl
cmpsw
push
lock
pop
push
bswap
ja
or
dec
and
int
cmove
cld
mov
fiaddl
inc
ss
bound
jmp
add
addb
lods
push
adc
xchg
push
stc
addl
push
lock
xchg
movsl
aas
cmp
jae
sti
xchg
xchg
repz
xchg
lahf
insl
ss
mov
aaa
scas
sbb
xchg
cmp
sti
cmp
movsb
insb
adc
fstpl
inc
jnp
mov
push
push
cmpsb
sbb
aas
cmp
pop
out
mov
in
push
in
test
sub
push
inc
aad
dec
sbbb
test
adc
mov
dec
xchg
pop
leave
repnz
es
mov
out
lret
sub
cwtl
movsb
adc
xchg
mov
mov
add
fmuls
jg
pop
jg
dec
pusha
mov
and
int
jle
sbb
xlat
insb
roll
adc
mov
das
jns
sub
in
test
fwait
mov
pop
imul
jmp
mov
push
aad
mov
sub
sub
shll
add
cs
dec
or
into
popf
cmc
fucom
push
mov
xor
bnd
cmpb
js
repz
push
xchg
cmpl
push
cmp
jle
pushf
popf
fbstp
repz
shrl
push
gs
lret
mov
loopne
sub
lods
es
xchg
addr16
jg
je
mov
adc
sub
cmpsb
in
lcall
test
jle
pusha
add
enter
push
mov
jmp
cmp
sub
out
js
loope
xchg
push
dec
movswl
lahf
popf
aad
sbb
shr
sub
idivl
pop
aaa
repnz
pop
in
xor
cs
test
dec
pop
sub
jp
les
orps
imul
pop
in
mov
xchg
sub
push
mov
clc
inc
xchg
cmp
repz
loope
push
fadds
xor
inc
inc
xor
arpl
mov
stos
sbb
xor
les
jp
test
cmpsb
cmc
jecxz
hlt
xchg
test
sbb
mov
int
lods
xchg
call
imul
inc
adc
shl
sub
sbb
xor
sbbb
insl
jle
jecxz
and
lods
pop
dec
dec
push
fnsave
push
push
sub
mov
les
cmc
testb
xor
in
and
or
test
sbb
adc
jnp
mov
pusha
sahf
mov
push
xlat
rclb
out
sub
lock
lds
pop
dec
push
rcll
lret
icebp
sub
cmp
push
mov
rcll
pop
mov
cmpl
xchg
shrl
mov
push
or
sahf
or
push
xchg
adc
lds
pop
xor
sub
subl
mov
adc
cmpsl
xchg
jl
sarl
xchg
xchg
into
mov
imul
jmp
mov
jns
arpl
mov
imul
adcb
push
adc
adc
xchg
ds
cmp
sbb
cmpsb
aaa
mov
push
pop
ja
push
ss
sub
stc
shlb
mov
leave
jge
lods
pop
or
sarl
subb
jno
mov
test
movsb
adc
fwait
ja
and
fsubl
dec
xor
push
loop
fildl
mov
fs
repz
shl
mov
dec
lret
adc
aad
paddsw
or
outsl
je
push
and
ror
iret
jne
or
stos
push
inc
fdiv
mov
lret
outsb
sbb
in
cli
scas
mov
push
lods
or
sahf
pop
repnz
fidivs
mov
loope
loop
outsb
call
and
std
rclb
mov
ljmp
mov
jo
xchg
pop
mov
mov
jbe
lcall
rclb
stc
sub
cmpl
fs
test
push
pop
cwtl
inc
imul
mov
xor
iret
jbe
jo
arpl
icebp
pusha
decb
aam
dec
xor
enter
cmp
imul
push
stos
stos
push
imul
and
fldz
mov
fwait
repz
adc
popf
sub
fwait
jae
add
mov
rol
mov
jl
aam
xchg
data16
clc
sbb
out
dec
lods
add
imul
mov
and
xchg
push
sbb
int3
mov
mov
pop
mov
add
shll
mov
mov
nop
aam
inc
xchg
mov
bnd
xor
out
push
xor
inc
je
sti
jb
push
mov
sbb
int
jecxz
insb
mov
iret
popa
cmp
push
cltd
mov
std
ljmp
inc
enter
xchg
dec
lahf
int3
lcall
lcall
aaa
push
inc
push
mov
stos
test
pop
dec
lds
mov
daa
stos
cmpsl
inc
mov
pop
pop
xchg
dec
std
repnz
in
pop
ljmp
xorl
sub
inc
ljmp
sbb
and
out
sahf
decl
inc
mov
add
pop
sub
insb
lahf
mov
test
xchg
mov
int
sbb
jo
loope,pt
mov
push
outsl
test
or
stos
push
and
dec
iret
lret
push
out
popf
inc
cmp
cmp
adcl
sub
cmp
mov
leave
sub
xchg
arpl
dec
mov
mov
fs
mov
mov
popf
sarl
pop
mov
cs
clc
es
jb
outsb
enter
jle
cli
repz
inc
bound
lea
in
aas
xor
jno
inc
mov
ja
xchg
add
push
cmp
movsl
loopne
imul
inc
jmp
repnz
pop
jb
fistpll
mov
out
sarl
ss
push
mov
stos
pop
or
sti
jge
loopne
addr16
push
dec
scas
sahf
hlt
rcll
test
xor
fdivl
ror
jno
sbb
jmp
mov
mov
addb
pop
rorl
cmp
jl
loop
xchg
dec
mov
andnps
inc
stos
push
fwait
dec
and
out
jle
mov
or
jle
dec
out
xchg
loope
jge
xor
mov
rolb
in
ljmp
cli
scas
cmp
inc
cltd
add
and
int3
dec
or
popl
mov
xchg
bound
cmp
pop
jbe
jp
adc
jo
cmpsl
les
mov
inc
add
xchg
int3
xor
popf
mov
adc
cmpsl
loope
loopne
rcr
movsb
rclb
mov
inc
iret
push
popa
push
ja
pusha
mov
int3
sbbl
jne
inc
cmp
mov
jmp
adc
mov
addl
out
mov
xchg
xor
push
inc
cmp
jge
add
leave
fwait
loopne
xchg
lcall
or
aaa
mov
jne
bound
test
outsl
notb
jbe
mov
adc
arpl
orl
push
jbe
jge
divb
sbb
jnp
adc
inc
dec
scas
scas
push
stc
cmpl
mov
clc
movsl
loopne
ret
xchg
pushf
imull
jge
ja
les
aas
dec
xchg
xor
test
push
std
lcall
push
jle
je
test
inc
mov
pop
int3
mov
jnp
xor
divl
mov
aam
fsubl
push
inc
mov
sub
rcrb
out
cwtl
adc
out
js
fwait
pop
push
scas
aad
into
rorb
xchg
add
fstpt
ret
push
loope
inc
jmp
sbb
rcr
or
div
clc
mov
jns
jecxz
pop
fcomip
clc
out
pop
dec
add
lret
lds
in
push
vaddps
mov
lock
addr16
daa
xor
xchg
mov
and
andb
into
stc
stc
sbb
mov
fcmove
jno
rcll
loop
push
push
int3
push
dec
jb
aam
xchg
push
leave
fiaddl
push
pop
aas
scas
int
or
push
cmp
outsb
into
orb
ret
sub
fcompp
jg
or
adc
pop
mov
scas
add
inc
xchg
inc
jne
test
test
imul
mov
hlt
mov
jb
dec
pushl
insl
fcmovnu
sub
int
imul
dec
add
mov
sarb
sub
sub
or
rcll
sbb
mov
out
or
popa
pop
pause
xlat
das
sarb
in
sbb
ja
lods
and
fsubs
sub
mov
ret
fdivr
hlt
stc
sbb
test
add
daa
inc
mov
mov
lret
inc
clc
push
scas
movsb
mov
arpl
shrb
aaa
push
sahf
sub
bound
mov
pop
adc
and
cwtl
dec
xor
sarl
push
lods
idivl
pusha
insb
jnp
mov
aas
mov
pop
popf
int
mov
add
jl
fistl
iret
icebp
daa
into
cmp
lods
add
xor
cmp
neg
mov
inc
pop
xor
jl
lcall
pop
loope
in
pop
scas
pusha
popf
data16
mov
and
idivb
daa
shlb
out
xor
movsb
popf
mov
cmp
pop
sbb
xor
xchg
stos
and
imul
imul
inc
jp
mov
and
sbb
stos
fwait
add
jle
stos
mov
push
jl
repz
push
clc
sub
dec
shlb
aaa
loopne
rcrb
mov
mov
loope
pop
dec
dec
outsb
mov
movsb
out
faddl
jno
jne
icebp
and
sarb
mov
shr
mov
mov
subb
insb
jg
out
mov
pop
cmp
movsl
rorl
xchg
lods
or
mov
pusha
sbb
arpl
movsl
xchg
outsb
xchg
mov
les
pop
popf
push
out
ds
adc
mov
jge
push
pop
jl
jle
loopne
sub
jnp
lock
das
addl
cltd
inc
imul
cmp
dec
push
shl
mov
mov
push
sub
xor
repz
fmull
xchg
mov
mov
sbb
lret
push
in
sub
xor
cmpsb
aam
lock
loopne
les
jne
dec
into
das
dec
jle
enter
push
movsb
repnz
inc
adc
scas
repz
xchg
enter
xchg
scas
xor
mov
jo
jne
sub
mov
popa
stc
popa
imul
push
iret
ljmp
lret
sub
inc
and
int3
mov
imul
pop
ret
or
or
dec
ja
mov
es
sbb
in
jns
in
xchg
addr16
sub
sbb
mov
dec
sbb
sbb
into
inc
lods
jne
push
stos
sar
mov
or
push
mov
nop
jmp
sti
out
jmp
mov
sbb
sbb
add
lds
mov
fucompp
push
negl
scas
inc
xor
pop
dec
dec
fucomp
fnstenv
dec
scas
out
pop
pop
fcomip
popf
and
jno
xchg
sub
out
imul
es
popa
cld
mov
mov
stos
sahf
or
cmovns
scas
and
or
and
insb
fnstcw
repz
pop
jecxz
jns
test
push
mov
dec
inc
ret
inc
add
mov
vunpcklps
xor
jecxz
movsb
lods
or
arpl
repz
idivb
jecxz
repnz
push
xchg
out
enter
cmp
xor
jecxz
imul
test
pop
jmp
enter
sub
or
outsl
jl
sti
ret
add
push
mov
out
jns
insb
or
inc
test
in
sarb
rclb
cli
mov
inc
sub
fsubrs
sarb
adc
jae
inc
aaa
inc
xchg
push
insb
lock
outsl
jbe
imul
add
hlt
test
pop
das
hlt
shr
jo
jmp
cmp
in
testl
or
xchg
aaa
gs
mov
push
dec
adc
std
jae
mov
out
shlb
cwtl
std
jno
lods
mov
sub
jge
jecxz
cmp
lds
and
lods
in
sub
cmc
pusha
ss
aas
adc
mov
loopne
lcall
addr16
jge
xchg
sbb
jecxz
mov
out
pop
arpl
fistl
push
mov
faddl
mov
cwtl
add
pop
sub
aad
dec
loop
dec
iret
insb
push
lahf
lret
dec
bound
mov
xor
mov
pop
add
jge
test
mov
stos
fwait
dec
repnz
stc
insb
mov
mov
insl
fmuls
insl
inc
and
scas
loopne
and
icebp
inc
pop
xchg
lea
mov
xchg
loope
dec
outsl
aad
mov
pop
push
inc
insb
les
and
ret
dec
add
in
xchg
les
jno
sub
sbb
push
add
add
pop
and
jae
push
popf
cmp
mov
xchg
add
iret
cs
fidivrl
mov
lret
addr16
test
xor
xchg
arpl
push
cli
jmp
xchg
int3
roll
mov
or
call
orl
pop
cmc
fsubrp
lods
rcl
icebp
cmpsl
scas
in
sub
mov
jbe
fucomp
mov
lahf
adc
jns
scas
movsb
daa
jae
mov
pop
jmp
xor
adc
sub
mov
mov
lods
outsb
jmp
push
xchg
sti
inc
xchg
stc
mov
adc
mov
pusha
lea
ret
jno
test
aad
xor
pop
add
pop
popf
jo
jo
pop
jge
arpl
inc
imul
icebp
mov
and
xchg
or
std
xlat
in
imul
jg
shll
mov
xor
sub
adc
cltd
fsts
push
fwait
sub
cmp
dec
xchg
popf
enter
movsb
call
fldcw
push
push
ss
adc
jg
stc
frstor
insl
sbb
fwait
shll
mov
fisttpl
cltd
into
inc
jns
cmpsb
xrelease
pop
xchg
mov
jnp
cld
insb
js
mov
mov
icebp
addr16
dec
inc
insl
dec
xor
mov
jnp
or
out
sbb
loop
and
cmc
popa
mov
ds
jb
mov
dec
add
fisubrl
xchg
and
ds
mov
aam
dec
dec
popf
shll
push
test
sbb
fistpll
cmc
pop
mov
xor
dec
gs
cmpsb
adc
jmp
arpl
or
es
jbe
arpl
pop
into
mov
cwtl
into
stos
push
jmp
mov
mov
mov
movl
test
jmp
subb
push
pop
fs
push
push
pop
mov
and
xchg
lock
loope
mov
mov
or
stc
mov
inc
repz
xor
mov
mov
add
and
out
mov
mov
dec
sub
notb
lods
jbe
sub
jg
sub
or
or
jmp
mov
push
or
int
jl
das
sbb
pushf
in
pop
leave
scas
lcall
dec
sub
mov
mov
push
and
lods
clc
rclb
ja
xor
ds
or
mov
loopne
xchg
outsb
cmc
out
mov
scas
lret
sub
lock
add
sbb
notb
sbb
ret
dec
adc
ds
rcl
out
mov
push
or
add
aaa
fistpll
mov
mov
cmc
dec
test
std
sbb
loop
loopne
mov
fwait
push
ss
ss
jmp
push
sbb
or
push
loopne
ljmp
pushf
xlat
loope
gs
imul
and
xchg
dec
fmull
gs
je
xor
les
xor
ss
push
subb
jnp
jge
xchg
lock
pop
mov
or
outsb
mov
lea
sub
jbe
pop
test
jns
mov
push
jl
pusha
emms
xor
iret
add
nop
dec
sbb
inc
mov
sub
pusha
cmpsb
cwtl
jnp
roll
dec
int
cmp
add
mov
lods
adc
bound
cltd
sti
out
xchg
test
das
test
outsb
inc
fwait
xlat
loop
pop
jbe
aaa
mov
pop
sbb
lret
and
je
sti
jmp
jge
sbb
in
xor
sar
mov
jle
inc
mov
xchg
mov
fs
jae
xchg
pop
mov
ficompl
add
add
dec
sub
stos
out
push
xor
imul
insb
xchg
adc
add
push
sub
pop
mov
orl
xor
mov
add
or
or
insl
ret
mov
adc
xchg
movsb
sub
pop
testl
pop
pop
fldenv
pushf
stc
cs
mov
xor
jne
cmp
cmp
jg
sbb
and
out
pop
movl
inc
andl
or
int
sbb
popf
add
sub
cld
stc
inc
pop
bound
inc
mov
lods
sub
dec
repnz
rcrb
or
fs
movsl
aas
dec
jmp
sub
sbb
pushf
cs
push
dec
xor
lahf
mov
and
ret
dec
xor
sbb
push
stos
inc
insb
mov
int
call
or
sbb
jecxz
pop
or
daa
loope
dec
int3
inc
push
rclb
add
cmp
scas
xor
loopne
xchg
dec
xor
mov
pop
sti
pop
int3
mov
leave
jnp
sbbl
stc
dec
mov
iret
mov
mov
add
lock
mov
ja
outsl
mov
adc
xchg
ret
jae
mov
outsb
lret
and
mov
jmp
dec
add
cmpsb
add
xchg
shrb
in
and
fbld
lds
shrb
int3
cmp
mov
arpl
rcrl
mov
jae
sbb
dec
xchg
jg
adc
mov
popl
fldcw
jo
test
incb
shlb
pop
outsl
bound
jp
jmp
jecxz
pusha
mov
mov
icebp
pusha
leave
xor
mov
ret
mov
mov
fcmovb
test
and
sbb
mov
inc
test
push
or
jp
orb
xor
add
incb
mov
movsb
psubb
popf
add
jl
ror
sbb
mov
dec
mov
ficoms
mov
movsl
cwtl
pop
mov
mov
hlt
insb
jns
aas
scas
pop
lock
xchg
clc
mov
xchg
repnz
xchg
or
push
push
push
arpl
data16
xor
popf
pop
sar
shrb
pop
cmp
repnz
dec
lret
sbb
cmpsb
sub
pushf
stos
add
cmp
mov
push
ljmp
push
mov
test
xchg
xchg
jno,pt
popf
adc
pop
mov
dec
pusha
movsl
aad
add
jns
and
adc
dec
lea
emms
adc
stc
je
mov
out
push
lods
jl
les
mov
ss
test
inc
adc
mov
push
xchg
ja
xor
mov
push
push
fs
cwtl
clc
mov
sbb
popf
sub
movsl
aam
stc
push
fildll
mov
loop
pop
insl
jp
in
movsl
cmp
lock
cli
push
bound
test
mov
out
sbb
mov
and
fisttpl
xor
movsb
xor
nop
ret
in
inc
mov
pop
add
sub
push
repz
aaa
lock
push
adc
mov
pop
mov
stos
leave
loope
mov
lahf
out
add
hlt
lods
mov
jo
mov
mov
scas
aas
fsubrl
sub
arpl
lods
push
outsb
popl
mov
jnp
jb
dec
inc
jae
int3
pop
cmpsl
xor
sbb
lahf
in
mov
sti
jo
rcrb
sbbb
dec
inc
and
dec
nop
bound
mov
out
mov
test
inc
daa
or
leave
mov
fiadds
jecxz
rclb
dec
clc
cwtl
enter
dec
xchg
in
fildll
idiv
xor
sbb
jmp
add
mov
mov
adc
push
call
mov
addr16
das
loope
loopne
sbb
test
jnp
xor
enterw
testl
inc
mov
out
test
shlb
ja
mov
add
icebp
ljmp
fdivr
ret
adc
push
cmc
add
xchg
jb
mov
xor
aad
sbb
inc
xor
shlb
mov
mov
jno
xor
jae
dec
inc
jne
pop
jns
mov
push
xor
inc
inc
ja
and
jle
test
loopnew
mov
lock
pop
jmp
mov
call
pop
stc
push
fldenv
or
mov
das
outsb
out
cli
jmp
fs
scas
add
mov
out
inc
sahf
negl
enter
mov
sbbl
out
cmp
and
adc
dec
subb
mov
popa
sub
pop
jno
add
test
add
jle
std
cmp
xchg
pop
bound
mov
mov
and
sti
xchg
push
or
rcll
call
fstl
iret
pop
out
popl
adc
in
movntq
fcoml
shll
jae
xchg
dec
test
xlat
in
outsl
pop
cmp
loop
adc
sub
jmp
mov
jno
fildll
fwait
inc
or
shr
ficoms
dec
xor
das
inc
add
sti
mov
stos
jne
call
out
add
and
decl
xchg
stos
dec
mov
pop
int
add
or
shrb
add
lahf
sub
adc
mov
add
mov
or
mov
push
hlt
xchg
sbb
data16
ret
pop
aaa
cmp
pop
stos
movsb
push
hlt
shr
rcrl
adc
into
icebp
mov
and
or
shll
cmp
jecxz
clc
push
fidivrs
sbb
ss
rol
jne
dec
mov
test
adc
sub
jne
lret
mov
fdivp
lret
add
or
je
imul
mov
push
mov
aaa
mov
jbe
rorb
adc
jle
cmp
or
stc
add
push
mov
popa
mov
out
dec
cmp
dec
inc
cmp
xorl
mov
adc
push
shrb
filds
sbb
rcll
sub
and
inc
and
pop
push
leave
add
jae
repz
loopne
cmpsb
loopne
incl
aad
mov
lcall
lret
cmp
fbld
fcoms
push
mov
out
and
mov
les
mov
andl
mov
jmp
dec
jle
int3
adc
or
ljmp
pushf
and
ret
fsubrl
sub
xor
mov
sbb
lods
push
lods
fidivrl
pop
xchg
or
jecxz
outsb
push
mov
cwtl
ffree
sbb
fidivl
adc
cli
sbb
out
fs
mov
sbb
hlt
incl
jge
adc
or
lret
jge
jl
negb
cmovns
fildll
incl
add
test
xchg
mov
ret
rclb
leave
push
repz
into
xor
mov
pop
das
aas
jecxz
inc
mov
and
pusha
sub
push
pop
insb
iret
inc
jno
xor
xrelease
mov
adc
sub
enter
int3
bnd
push
das
sub
int3
mov
pushf
fincstp
sbb
lret
iret
out
mov
mov
mov
and
dec
rclb
pop
in
fisubrs
inc
and
mov
js
dec
imul
and
mov
stos
pusha
jmp
xchg
sbb
fisubl
pushw
pop
mov
inc
push
loopne
jo
fistps
or
mov
insl
push
cld
adc
sbb
popa
loopne
mov
test
out
adc
ret
inc
xlat
cmc
clc
push
xchg
repz
mov
xor
xlat
fmull
mov
iret
rorl
ficomps
or
popa
data16
lock
jmp
inc
push
adc
int3
aad
xchg
pop
mov
dec
lods
les
cli
scas
dec
cli
sti
ret
cmp
pop
into
mov
push
xor
jne
jbe
mov
fdivl
mov
inc
push
dec
out
push
and
push
add
inc
push
out
das
rclb
xor
pop
aam
mov
pop
movsl
cli
popa
dec
in
xchg
and
cmpsl
inc
sbb
mov
ror
pop
in
cwtl
bound
and
mov
push
insb
divl
loope
sarl
scas
dec
lea
adc
xor
xchg
sbb
push
cmp
mov
xchg
mov
mov
dec
fnsave
jl
shr
sbb
lock
sub
sbb
pushl
inc
notl
mov
stos
les
mov
bound
in
stos
mov
lods
roll
push
sti
test
mov
inc
mov
xchg
rep
jne
jnp
cli
mov
jb
insl
out
xchg
aas
int3
cmc
stos
in
jns
jo
loope
dec
xor
lock
xor
pop
inc
or
ja
pop
rcrb
cmpsb
leave
mov
into
push
dec
mov
rclb
outsb
gs
mov
out
xor
int
inc
lods
fldenv
fucomp
xor
and
data16
sahf
sub
mov
jnp
push
adc
dec
leave
cmp
mov
sub
scas
int3
push
xor
repz
xchg
fwait
inc
and
dec
inc
movb
sub
outsb
fadds
incl
mov
add
in
mov
lods
pop
sbb
mov
addr16
ja
add
imul
or
inc
sub
pop
jbe
inc
adc
and
shl
jbe
xchg
xor
mov
fstps
fwait
outsl
lods
or
jno
aaa
mov
mov
imul
adc
xchg
popa
fldenv
pop
ja
push
loop
enter
pusha
and
je
mov
insl
cld
push
inc
or
pop
pop
and
add
fcomi
cmp
lock
xchg
mov
test
insl
leave
ror
jmp
sub
fs
xor
pusha
jmp
push
in
xchg
jecxz
in
fistps
xor
and
or
mov
ret
xchg
mov
fdivrs
mov
shll
pop
xchg
ja
ret
iret
imul
fidivrl
jp
cmp
jmp
aas
and
out
hlt
imul
add
repnz
out
in
mov
add
in
sub
and
call
push
cmp
pop
adc
iret
js
or
pop
sarl
lock
es
jns
or
adc
call
and
or
lcall
fiadds
pop
sub
lods
add
mov
mov
sbb
cs
int3
mov
mov
ja
jle
popa
push
es
data16
xor
inc
dec
clc
cwtl
inc
scas
imul
mov
icebp
fdiv
stc
nop
xor
mov
inc
lea
loope
test
cmp
add
xchg
pop
sbb
hlt
dec
imul
sub
and
shlb
mov
xchg
stc
sahf
cmp
jg
jmp
pop
jnp
inc
mov
jecxz
or
dec
fimuls
add
mov
ja
cmp
stos
stos
add
jns
sub
enter
les
xor
ficomps
addl
adc
enter
jnp
pop
fldl
repz
dec
adc
subl
sahf
outsb
pop
mov
push
mov
dec
repnz
lcall
push
fcmovb
stos
and
test
test
push
dec
loop
out
out
mov
sub
repnz
and
lret
xchg
mov
and
fcoms
iret
ss
sub
push
and
stc
jle
jge
push
lods
fistl
mov
sub
sub
dec
pop
into
xor
xor
adc
addl
jge
mov
add
cmp
es
adc
cmpsl
cmp
repnz
ljmp
inc
or
into
mov
adc
ret
dec
or
ds
push
lret
shrd
and
loope
adc
push
int3
test
cld
xchg
test
insb
das
sbb
dec
scas
out
or
pop
inc
xlat
xor
lock
out
jne
dec
sti
add
push
nop
decl
loope
outsb
in
popf
mov
mov
outsb
dec
orl
inc
sahf
int
decl
arpl
xchg
dec
sbb
out
mov
pop
cmp
insl
dec
jle
sbb
stos
push
jl
std
xchg
lea
mov
adc
clc
std
cmp
push
cmp
mov
sub
cli
das
cld
movsb
push
cmp
jecxz
adcb
pop
push
loope
dec
push
cli
ja
addr16
add
hlt
sub
or
sbb
jecxz
lods
jo
xchg
in
movzwl
sub
stos
xor
jge
inc
aad
xor
sub
sbb
repnz
or
or
faddl
xchg
dec
add
loop
fdiv
mov
aaa
lret
mov
xchg
inc
mov
cmp
fisubrs
xor
jno
iret
pop
cltd
gs
imul
into
insb
int3
mov
jp
rcrl
cmp
dec
add
dec
in
jae
and
cs
pusha
sub
addb
lds
jecxz
fldl
sub
into
push
xchg
ret
fisubl
xchg
xchg
jle
pushf
lds
pop
push
in
xchg
cs
dec
cs
outsb
inc
das
and
adc
adc
mov
movsl
lcall
popf
dec
mov
sub
loopne
out
push
and
loopne
insl
xor
jmp
add
inc
dec
rcll
xchg
out
jne
cmp
das
or
sbb
stos
clc
jg
rcrb
mov
mov
pop
cmpsb
in
aaa
loope
xor
iret
int3
int
or
dec
and
mov
dec
stos
call
sub
jbe
sbb
mov
pop
out
xchg
stos
enter
mov
cmp
hlt
or
and
popf
xor
sub
add
jmp
sahf
jge,pn
mov
dec
aam
mov
and
movl
xor
pop
aad
sbb
dec
mov
mov
aaa
shl
and
push
ret
sbb
dec
xchg
push
fcomp
rcl
mov
sub
or
add
aad
movzbl
inc
sub
ljmp
push
mov
rcrl
jno
and
cltd
cmp
loope
std
scas
gs
ret
add
std
int3
out
add
xchg
and
test
test
lods
stos
mov
push
rcl
or
fucom
xchg
xlat
jg
sarl
jle
lods
lock
push
adc
mov
aad
adc
lds
addr16
mov
pop
adc
fisttpl
mov
movsb
push
repz
test
xchg
mov
test
test
jle
push
sbb
mov
decb
mov
hlt
icebp
pop
in
movl
mov
je
dec
jb
mov
jb
in
pop
subb
fdiv
incl
mov
imul
mov
xlat
mov
out
jbe
out
pop
leave
xor
pop
xchg
mov
loopne
sub
lcall
add
adc
repnz
sub
push
mov
inc
cwtl
inc
jmp
cs
pop
repz
and
out
cwtl
inc
in
fdivrl
jb
push
xor
sbbb
aas
test
push
mov
lahf
sbb
stc
movups
ret
add
pop
mov
xchg
fldenv
lods
js
add
fcoms
pop
mov
in
fldt
mov
rorb
jno
cmp
dec
fstpt
cwtl
movsl
and
nop
xchg
ret
sbbb
cli
and
arpl
sbb
xchg
adc
inc
push
in
push
cmc
jecxz
test
dec
lcall
xor
adcl
push
daa
xchg
insl
xchg
lds
imull
jge
mov
xchg
xor
inc
dec
mov
cmp
ss
pop
push
xlat
fimull
in
mov
es
mov
insl
fsubl
mov
insl
mov
mov
add
mov
adc
fistps
es
cmpsb
repz
xor
mov
cmpsl
pop
lahf
jne
not
in
cmpsb
cmp
icebp
jg
jbe
xchg
xchg
mov
stos
addr16
cmp
out
cmpsl
test
adc
xchg
in
xchg
aas
arpl
movsb
fcmovu
xor
test
adc
pop
repz
or
mov
fmuls
or
bound
jb
dec
fwait
dec
bound
xor
push
pop
movsl
or
je
mov
inc
jo
push
aas
push
mov
mov
clc
xchg
mov
adc
pop
lret
mov
dec
mov
imul
fwait
mov
fcmovnb
cmp
inc
or
add
cmp
mov
rcrl
push
data16
out
inc
les
mov
xchg
popa
js
adc
je
in
scas
push
jo
fnstenv
stc
and
cmpsl
sbb
sbb
outsl
xchg
or
jo
sub
out
mov
insb
pushf
mov
xchg
cmp
xchg
pop
and
dec
lahf
dec
bnd
test
mov
push
aam
mov
enter
idiv
lcall
adc
out
leave
push
test
inc
ret
adc
adc
repz
push
jo
aas
pushf
orb
clc
xchg
lock
xchg
fcoms
call
and
jg
aaa
mov
lahf
push
sbb
mov
and
inc
xchg
cmp
xor
outsb
cmp
mov
lea
fadds
jmp
xor
pop
fildll
test
cltd
xchg
and
repnz
insb
popf
popf
dec
dec
or
iret
loop
cli
js
js
xchg
jmp
test
sbb
cmc
sahf
notb
adc
dec
into
imul
mov
rcrl
jo
ljmp
aam
int3
cmp
sbb
or
sahf
mov
push
std
fisttpl
pop
jb
mov
push
insl
pop
pushf
cmp
cbtw
sbb
adc
mov
mull
pop
les
mov
mov
and
sbb
pop
out
rol
and
mov
jae
push
mov
lahf
mov
sbb
icebp
ret
xor
ljmp
cmp
in
imul
inc
pop
gs
sbb
jnp
pop
js
pop
cmpb
sub
xor
movsb
xchg
cmp
push
arpl
mov
pop
dec
sub
push
pop
mov
je
cmc
les
dec
inc
rorb
out
and
adc
mov
xchg
dec
test
out
fistl
or
fdivr
inc
movsl
jl
sarb
mov
xchg
std
add
mov
jo
lahf
in
jge
xlat
pop
mov
pop
xchg
data16
pop
mov
lahf
adc
push
rclb
and
jbe
mov
iret
jo
or
mov
add
ret
mov
pop
mov
add
fs
mov
xlat
add
push
repnz
push
loopne
adc
add
int3
fnstsw
sbb
cwtl
scas
push
fists
in
lock
and
mov
xchg
imul
pop
mov
jg
mov
lcall
push
push
push
xlat
and
mov
mov
pop
push
xchg
das
imul
mov
fwait
mul
pusha
lds
xor
push
nop
jle
dec
jge
push
scas
dec
cmp
addl
dec
cmovno
ficomps
pop
dec
pop
out
cmc
and
xchg
nop
sub
push
mov
or
in
in
pop
push
dec
mov
push
sbb
movsb
addr16
xor
mov
mov
inc
cmpl
mov
jns
aas
lea
xlat
inc
xchg
in
lods
inc
data16
out
cmp
jb
or
je
loopne
stos
dec
outsb
adc
mov
outsl
pop
data16
out
mov
mov
in
inc
or
sbb
les
outsl
arpl
sahf
rolb
inc
arpl
push
pop
cmp
push
pop
and
add
push
inc
testl
mov
xchg
pushf
dec
out
insb
sti
pop
inc
sbb
adc
mov
pop
xchg
cli
data16
cmp
adc
imul
mov
jbe
popf
data16
jmp
inc
push
imul
popa
imul
scas
or
movl
pop
adc
scas
sbb
neg
test
bound
sbb
and
in
aas
sub
mov
pop
and
aaa
outsl
clc
jge
inc
bound
xor
stos
pop
push
pop
sbb
mov
fadds
gs
mov
lahf
jnp
and
push
sbb
and
jno
and
dec
push
adc
shll
push
adc
aaa
cld
adc
push
sbb
shlb
or
in
sub
loop
mul
mov
jp
data16
sbb
dec
sahf
inc
cmp
inc
pop
fwait
sub
sub
inc
or
pusha
in
dec
mov
fcmovu
hlt
dec
xor
jmp
shll
push
pop
mov
mov
imul
repz
icebp
sub
gs
sub
adc
movsb
stc
les
cmp
mov
lret
fbld
sbb
pushf
xchg
jb
sti
fbld
inc
and
cmpsb
les
ret
cmp
das
xchg
mov
and
fsubrl
nop
pop
push
ljmp
ret
outsb
cmp
xchg
ljmp
push
cmp
dec
sub
adc
js
out
sub
push
and
movsl
or
sub
cwtl
jae
inc
pop
and
or
mov
dec
cmp
cmp
and
scas
mov
dec
xchg
aas
insl
hlt
mov
rcr
popf
xchg
cmpsb
cli
popa
je
call
insl
pop
xchg
jbe
push
sahf
icebp
les
aas
adc
mov
in
dec
xor
and
xor
aaa
inc
call
scas
ljmp
outsl
push
out
mov
pop
cmpsl
fcoms
hlt
or
mov
push
jl
movsb
fadds
xor
insl
out
es
xchg
fsubrl
imul
xor
lret
popf
inc
jbe
sub
push
subb
xor
sub
mov
call
outsb
xorl
in
ljmp
shlb
adc
and
stc
ja
mov
shl
test
adcl
xchg
imul
shrb
test
jb
mov
icebp
or
fbstp
push
adc
sub
les
dec
adc
fadds
dec
fldenv
inc
daa
popa
leave
stc
pusha
fs
jns
nop
loopne
cmp
mov
je
aam
imul
loopne
into
and
imul
add
aam
imul
fstpt
lret
movsb
xor
roll
aas
cli
fs
stos
push
aaa
push
pop
test
aad
rorl
jnp
push
in
cld
pop
jmp
add
inc
sbbb
lret
cmpsl
push
push
lds
lcall
cmp
scas
xor
jb
lret
lret
das
inc
cmp
or
push
in
mov
dec
out
arpl
xchg
mov
or
imull
aas
rorb
mov
jnp
sub
mov
push
jne
dec
in
xchg
outsl
or
jge
lcall
ret
push
int3
pop
mov
mov
cmp
dec
ss
rclb
mov
adc
ffree
mov
push
popa
outsl
mov
jne
and
sub
mov
iret
adc
inc
repz
iret
lcall
out
adc
push
dec
bnd
or
dec
xchg
arpl
mov
lea
aam
out
int3
ficomps
lea
xchg
sti
into
je
cmpsb
jle
enter
rolb
aas
sbb
sub
mov
loop
mov
inc
cltd
xor
adc
sub
dec
and
dec
xor
jp
adc
mov
and
xchg
push
add
pusha
xchg
push
push
mov
sub
xorl
hlt
mov
mov
cmp
dec
addr16
xor
add
adc
imul
fdivl
or
cmp
dec
js
roll
mov
call
or
outsb
aad
inc
std
mov
adc
das
out
add
data16
adc
dec
cmp
bound
pop
pushf
sbb
int3
and
fdivl
xchg
push
popa
idivl
rorb
mov
fdivrl
lcall
cwtl
or
mov
xor
data16
jno
cltd
sbb
in
popf
jge
or
mov
pop
xchg
xor
dec
shlb
in
jo
ljmp
cltd
cmpsb
sti
pop
lcall
sbb
out
mov
cmp
movsb
aad
cs
inc
scas
adcb
cmpsl
pop
jo
pusha
loopne
stc
xor
ds
push
jb
in
fisttpl
push
rcl
jb
xchg
sub
or
mov
fwait
test
or
insl
mov
scas
and
loope
lahf
test
je
movsl
enter
fdivl
sbb
loop
pop
cmp
lcall
and
xchg
dec
and
and
test
xor
cmovg
loop
xorb
sub
push
imul
mov
and
and
push
push
mov
cmp
das
adc
int3
les
das
cmp
pop
repz
lds
dec
ds
pusha
and
into
fsubr
mov
lea
and
push
sbb
add
pushf
aaa
clc
mov
push
dec
rorb
int
int3
sbb
aad
mov
mov
fidivrs
cwtl
outsb
mov
pop
mov
call
lea
sahf
mov
test
pop
in
pop
gs
rcl
cld
repnz
in
movsl
mov
scas
sub
pop
pop
xor
xor
add
repnz
jae
mov
dec
les
lock
xchg
aam
push
subb
and
iret
sahf
fwait
sbbl
out
cltd
or
sahf
lods
pop
push
inc
dec
jnp
out
pop
mov
ret
setp
imul
cmp
cmpsl
jae
fcomps
sbb
pushf
lock
xor
xchg
hlt
hlt
loope
lods
jb
popa
dec
mov
mov
push
mov
jmp
shlb
pop
sbb
lahf
test
fucom
int
mov
push
incb
shlb
xor
dec
or
jno,pt
mov
insb
and
push
mov
xor
call
iret
int
push
sbb
lret
sbb
cmovs
pop
int
imul
repz
add
in
pusha
imul
ret
cmpsb
cmovne
sub
mov
push
pop
sahf
or
in
push
popf
pushf
mov
jmp
scas
mov
adc
inc
in
xor
xchg
xchg
pop
outsl
in
jge
fucomip
sub
mov
lock
xor
popf
push
xor
in
pushf
mov
fdivrl
mov
inc
jp
in
ljmp
dec
data16
lods
fstl
loope
inc
test
push
test
pushf
push
pop
cmpb
jg
jo
mov
jno
pusha
dec
push
jbe
cmp
jbe
jp
push
mov
cmp
imul
pop
stos
outsb
in
pop
sub
inc
add
roll
sti
xchg
loopne
push
jbe
add
pop
mov
sbb
mov
mov
sub
test
and
adc
mov
jnp
aam
test
mov
outsl
jo
icebp
sti
movsb
lds
insl
out
lahf
inc
add
dec
test
mov
mov
push
repz
add
jl
outsl
xchg
repz
lock
cmp
ljmp
add
push
sti
mov
or
inc
sti
testb
arpl
hlt
adc
add
xchg
sbb
inc
pop
mov
neg
cwtl
push
sahf
mov
add
mov
pop
and
and
add
cmp
mov
in
movsb
jbe
ret
sub
or
and
mov
mov
push
add
add
shrl
adc
popf
popf
ja
divl
div
adc
and
shll
loopne
bnd
in
popf
data16
xchg
lods
int
jne
add
cmpsb
cmp
inc
push
inc
or
test
out
mov
in
mov
xchg
mov
mov
push
ret
mov
lret
lcall
mov
xor
out
jno
loope
cwtl
fwait
in
repz
lock
cld
fdivs
pop
sbb
mov
int3
cmpsb
inc
xchg
xchg
pop
xchg
push
xchg
in
outsl
mov
sub
cmp
xchg
sbb
sub
or
std
xor
inc
adc
xlat
push
aaa
xchg
xor
cmp
add
sbb
and
dec
lahf
add
push
idivb
sahf
xor
and
dec
jl
andb
std
xlat
push
inc
sbb
test
into
lods
mov
std
shr
adc
pop
sbbl
xlat
and
call
mov
jne
and
sbb
add
stos
loopne
in
sbb
out
data16
xorb
cmp
xor
mov
dec
sub
mov
sbb
popf
pop
daa
mov
or
test
pop
or
imul
mov
add
xor
mov
add
popa
add
mov
pop
adc
cmp
and
push
mov
aam
jle
call
cld
popa
add
push
pop
in
imulb
pop
repnz
cmp
lahf
cmp
xlat
xorl
push
mov
lret
loope
inc
int3
jge
xorl
cld
add
jbe
inc
mov
push
dec
pop
fwait
in
incl
mov
cld
sub
enter
push
lahf
mov
xchg
iret
cmpsl
ljmp
lods
inc
imul
aad
outsl
and
lods
ss
push
mov
outsb
mov
repz
lods
cmpl
mov
addl
fwait
sti
mov
repz
in
mulb
jns
lcall
cld
pop
stos
int
mov
or
movsb
or
mov
dec
xchg
xchg
mov
test
pop
push
cmp
sbb
ja
push
push
xlat
dec
push
pop
sub
mov
dec
mov
dec
iret
fists
jl
lea
loope
lcall
shlb
inc
aam
and
inc
mov
fcomi
xchg
jp
les
data16
mov
loopne
movsl
mov
xor
pop
lock
jne
pop
xchg
lds
pop
dec
ljmp
mov
in
pop
and
sbb
inc
adc
push
pop
jns
jbe
jl
mov
adc
insb
cmpsb
or
cmc
rcr
push
xor
insb
sbb
jge
mov
add
ljmp
loop
ret
vmovss
sahf
sbb
cltd
cld
in
or
add
inc
sarb
stc
inc
jg
xchg
jg
mov
inc
xor
and
mov
pop
mov
or
loope
jns
sub
stos
fwait
stos
xchg
add
adc
jnp
movsl
dec
aad
jo
icebp
push
push
push
iret
adc
jno
push
pusha
fs
popa
aam
imul
test
sub
les
ret
in
ja
inc
ds
dec
std
dec
add
ja
leave
loope,pt
xlat
jp
dec
mov
xchg
imul
fsubrl
mov
movl
jle
je
jno
adc
push
fcoml
push
push
jle
mov
mov
les
xchg
cmp
cmp
mov
lcall
add
repnz
into
je
sti
sahf
and
stos
repz
push
into
int3
clc
push
mov
xchg
cmp
and
mov
dec
jne
insb
or
push
sub
movsb
xchg
sbb
dec
and
clc
pop
jecxz
ljmp
es
lods
mov
jno
out
dec
lock
cmp
mov
push
or
rcrl
dec
sub
ja
inc
sbb
or
dec
cwtl
ret
xchg
xor
aas
iret
cmp
inc
cmp
mov
test
cmp
jp
outsl
adc
movsb
stos
cmp
sbb
rorb
lods
push
stc
lea
lahf
rorl
mov
xchg
cs
in
fcmovne
out
xor
adc
adc
fidivrs
test
xor
enter
loope
fnstsw
adc
pop
sub
sub
cmp
das
add
sub
repz
or
dec
lds
clc
inc
daa
inc
or
mov
sbb
js
push
cmc
cmp
mov
jecxz
imul
repnz
rorl
pop
add
and
rorl
push
fcmovnb
daa
dec
add
test
xor
cmpb
cld
sub
scas
or
push
lcall
jmp
mov
cmpb
push
iret
cld
cwtl
movsl
or
into
adc
pushf
jno
mov
mov
mov
mov
ljmp
sub
scas
cmp
mov
inc
mov
mov
repnz
adc
out
sarl
test
jle
mov
inc
mov
or
jecxz
push
fldenv
cli
xchg
test
cltd
fcompl
inc
sub
out
leave
inc
inc
mov
pop
aaa
sbb
sbb
mov
pandn
xorb
in
pusha
pop
leave
lea
add
les
lcall
lea
dec
jl
lods
inc
cmp
mov
in
insl
mov
lock
fdivp
mov
push
xchg
repnz
decl
mov
xchg
out
inc
push
lcall
inc
xor
fstpl
cmpsb
mov
add
cmp
cmpsb
loope
push
out
dec
sbb
xor
inc
cmp
clc
lcall
sub
popl
subl
dec
out
dec
or
mov
or
popa
jle
leave
lret
movsb
popa
movsb
pushf
sub
jge
test
cld
cmp
daa
loop
pop
lea
sub
lds
test
stos
mov
int3
add
popf
ljmp
std
push
add
mov
add
or
pop
sti
into
lea
sub
jp
je
xchg
sub
dec
jecxz
xchg
lods
cld
adc
imul
ljmp
xor
xchg
cld
mov
loopne
push
or
std
inc
pop
xchg
mov
sub
roll
sub
popf
fldt
and
sbb
addl
inc
push
or
lea
sbb
cmp
lea
ljmp
sbb
int3
mov
in
andl
sbbl
sub
out
push
mov
xchg
aad
mov
pushf
out
xor
ds
outsb
repz
movsb
pop
xchg
mov
fcmovnu
test
loope
pop
mov
ror
push
daa
loope
fistpl
test
sbb
fs
repnz
adc
mov
ret
out
inc
pop
fwait
lods
fstpt
jg
mov
sbb
in
pop
mov
cmc
sub
fisubl
shrl
loop
xchg
bound
das
mov
imulb
xor
jmp
xor
cmp
cmp
cmc
jne
sbb
mov
fwait
cld
xchg
push
mov
stos
or
ficoms
sbb
inc
inc
sub
mov
ss
outsb
adc
call
arpl
into
sub
lods
fwait
adc
pop
xchg
imul
jnp
cltd
fs
in
movsb
mov
jbe
into
in
cwtl
push
jnp
addb
andb
aas
lret
out
sub
out
xor
jno
fidivs
lods
sbb
aad
add
pop
in
mov
cwtl
push
cltd
push
push
minss
inc
shrb
dec
nop
xor
clc
in
push
cs
fsubr
xlat
mov
dec
aaa
dec
pop
stos
sub
or
pop
subb
jmp
popa
stos
inc
or
incb
insb
add
xor
sbb
lods
mov
out
insb
lret
xor
dec
add
push
ret
mov
aad
test
xchg
pusha
inc
popa
sar
lock
add
push
xchg
ss
ja
movsb
sbb
sub
fcompp
clc
pop
imul
cmp
imul
std
jnp
xor
mov
xor
pusha
push
pop
into
outsl
daa
inc
xor
leave
xlat
stos
test
test
push
adc
cltd
call
int3
sbb
and
lods
cmp
mov
xchg
pop
data16
xchg
mov
in
aaa
dec
and
out
outsb
stos
out
in
jae
lods
xor
xchg
je
test
out
fldenv
mov
loopne
lock
mov
cmpsb
pop
mov
js
add
sbb
xlat
lds
sahf
scas
out
stc
cli
rorl
in
insl
or
ljmp
out
pop
pop
aas
cltd
jb
rcr
pop
pop
shl
ds
mov
push
bound
and
lcall
shll
add
mov
lods
jecxz
inc
into
mov
lods
xchg
faddl
clc
push
dec
out
idivb
xor
cmpl
lahf
sbb
popf
iret
rep
imul
lods
inc
mov
inc
sub
or
std
lret
clc
pusha
nop
loopnew
in
rol
sub
in
pop
je
and
sub
test
and
setae
xor
xchg
sub
sub
xchg
xchg
jnp
xchg
push
jecxz
adc
pop
dec
add
pop
and
jg
add
inc
stc
lahf
cld
in
mov
stos
adcb
outsb
int3
icebp
sbb
mov
rorl
scas
add
xchg
xchg
pop
sbb
call
lea
fisttpl
out
cli
mov
add
insl
push
pop
jp
out
stos
inc
les
repz
in
jae
sub
shr
fsubrl
push
shlb
jno
lahf
mov
inc
pop
pop
lahf
jl
ficomps
imul
xor
icebp
aad
pop
out
popa
or
mov
push
or
stos
test
jo
and
push
xorl
sbb
sub
out
cmp
mov
cli
dec
es
aaa
dec
xchg
and
push
test
enter
sbb
lods
pushf
dec
and
arpl
mov
sub
xlat
adc
fmull
xor
add
sbb
jl
mov
sbb
aas
jmp
xor
test
push
mov
jb
jbe
dec
dec
leave
and
mov
cmp
test
mov
dec
pop
aam
xor
ja
and
add
mov
in
or
xchg
xchg
movsb
mov
jmp
add
xchg
iret
cmpl
subl
sub
frstor
es
into
test
mov
adc
jp
les
or
in
icebp
jmp
lcall
scas
in
divl
inc
inc
mov
cmpl
xor
adc
cmpl
xchg
mov
sbb
cmpsb
scas
pusha
cmc
ja
testb
jg
sarl
shlb
pop
adc
cmp
adc
push
test
push
and
adc
jmp
mov
icebp
out
or
fs
filds
pop
cmpl
mov
xchg
aam
mov
test
inc
xor
pop
sarb
jb
cltd
inc
xchg
inc
mov
cmp
nop
lret
add
aam
jne
push
mov
mov
mov
lods
pusha
pop
push
mov
test
xor
lret
test
push
lcall
pop
or
pop
out
mov
pop
add
aas
hlt
rcll
addr16
or
test
addw
repnz
dec
push
mul
aaa
push
push
pop
pusha
mov
xor
rcrb
add
jg
or
mov
ljmp
into
ja
jg
or
add
dec
addr16
pop
pusha
inc
jnp
dec
push
xchg
loop
cmpl
or
aas
jge
cld
cmp
lret
sbb
imul
jno
mov
rcrb
dec
pop
adc
cmp
sub
nop
xor
repnz
pop
dec
shll
pop
or
clc
jle
inc
sub
jp
push
push
jno
jmp
push
repnz
sbb
dec
outsb
lds
inc
xchg
ret
sbb
mov
mov
push
mov
shrl
cmp
cltd
dec
sub
fdivrl
sub
ljmp
imul
lret
jl
xchg
shlb
sbb
sahf
test
jmp
popf
in
rorb
shrb
mov
xchg
cmp
lds
xchg
ja
test
push
mov
mov
imul
adc
clc
pop
xchg
mov
dec
das
jbe,pt
pop
cs
in
or
dec
shlb
add
inc
pop
adc
mov
adc
std
aam
lret
inc
dec
loope
xor
subb
leave
push
arpl
jnp,pn
mov
mov
jb
push
pop
xlat
add
fwait
pop
and
inc
mov
jo
shrb
pop
push
in
or
ljmp
sub
or
adc
aas
cmp
hlt
inc
pop
subl
mov
mov
fidivrs
sub
movsb
jb
push
jns
push
cmp
cmp
or
repz
adc
das
dec
and
jne
daa
ss
ss
test
push
adc
sbb
jno
sub
lods
sbb
lock
xchg
mov
imul
pop
add
push
iret
lahf
aaa
mov
mov
jp
pushf
inc
dec
mov
imul
int
xor
xchg
imulb
mov
mov
add
int3
sub
dec
or
push
mov
aam
nop
lret
sbb
mov
xor
int3
addr16
cmpsl
push
pusha
xor
jge
adc
ja
fdivrs
leave
pop
cmp
movsl
pusha
in
jae
fcmovbe
fcmovu
jge
test
rolb
mov
mov
nop
mov
or
xchg
fdivr
lods
insb
adc
pop
rol
mov
icebp
jne
jb
xchg
das
insb
pop
loope
testl
pushl
dec
push
insb
lret
pop
push
jne
xor
lahf
into
push
push
mov
adc
jmp
loope
aaa
out
or
sbb
fwait
inc
addb
adc
dec
add
jle
rol
sbb
mov
push
test
fdivp
cmpl
push
adc
subb
ljmp
stos
and
sbb
fwait
or
lea
and
jne
gs
out
mov
rorl
cltd
in
cltd
push
lcall
iret
and
call
pop
and
hlt
sub
pop
sar
pushf
adc
repz
sbbb
adc
jnp
sbb
idivb
add
sub
clc
push
nop
insl
sahf
mov
cli
outsl
or
aad
lahf
ret
sub
or
out
dec
xorl
cmpl
movsl
cmp
xor
je
out
pop
daa
or
outsl
dec
ret
or
sub
cmp
pop
jle
ret
xorb
outsb
mov
outsb
lods
mov
xchg
push
or
mov
leave
bt
sub
xchg
or
rolb
stc
jns
aaa
xchg
adc
and
dec
or
pop
inc
and
pop
xor
xor
cmp
xchg
jmp
xor
push
add
lcall
pop
les
subb
push
cmc
loop
sti
aad
pop
adc
add
mov
ja
add
sbb
rcll
add
repz
sub
xchg
cmp
aas
stos
shrb
inc
insb
stc
push
out
pop
nop
rcl
dec
or
mov
dec
xor
fwait
and
or
cmp
data16
mov
pop
aad
mov
addr16
and
xor
xchg
scas
push
mov
pushf
dec
or
push
ja
outsb
pop
push
icebp
andl
jp
jmp
mov
dec
dec
xchg
cmp
xchg
jmp
fmuls
lock
pop
lods
mov
xor
repnz
outsl
stos
sti
lods
xor
jmp
idivb
add
arpl
mov
push
push
mov
xor
pop
in
sbb
mov
jecxz
pop
and
lret
inc
lds
neg
cld
insl
push
inc
mov
jp
sbb
test
lock
repz
aad
dec
test
mov
push
out
and
xor
ss
mov
cli
cwtl
shl
aas
fidivs
dec
xchg
mov
dec
lea
xor
sarb
sbb
jg
inc
mov
std
mov
test
push
andl
push
fidivrs
icebp
and
add
mov
pop
lret
xor
pop
xchg
in
jg
pop
mov
and
add
sub
fxch
and
mov
pop
imul
ficompl
or
mov
testl
or
inc
out
cmp
subl
pop
shrb
ficoml
movsb
inc
loopne,pn
arpl
and
mov
sub
push
nop
test
cwtl
xchg
xlat
push
jae
data16
jmp
mov
xorb
sbb
out
inc
cmc
leave
fildll
out
out
mov
fs
sub
add
mov
orb
push
jo
adc
push
dec
xor
push
in
cmpsb
xchg
xor
or
or
dec
and
mov
rcll
je
jnp
andb
inc
lods
or
jmp
pop
rclb
pop
dec
cmpsb
cmp
loope
mov
inc
notl
push
push
xor
push
daa
mov
dec
fwait
out
popf
sub
mov
cld
sub
dec
pop
dec
inc
inc
es
repz
mov
xlat
push
ficompl
test
xchg
mov
or
rcpps
jg
add
cmp
xchg
in
mov
clc
mov
sub
pop
mov
inc
push
repnz
push
arpl
inc
mov
iret
jmp
inc
xchg
js
imul
sbb
dec
clc
jle
sti
rcrb
adc
push
and
or
and
movb
mov
rcrb
lcall
lods
push
inc
cmp
and
pop
repz
decb
das
adc
push
jnp
pop
jb
inc
push
ficomps
pusha
mov
stc
or
xor
ss
push
shl
cli
dec
mov
jo
push
scas
xchg
add
inc
dec
jo
sti
ret
stos
fsubrs
xlat
test
dec
pushf
or
mov
in
call
jge
jno
das
xor
cmc
sarl
cli
aaa
rolw
out
xlat
lods
stc
mov
and
lods
test
xchg
push
call
popf
aad
fnstcw
sub
loope
mov
mov
repz
cmc
and
popl
ja
xor
ret
xchg
mov
push
fwait
out
ja
mov
push
arpl
xchg
jne
sub
mov
stos
outsb
adc
adc
push
xchg
lahf
or
cmc
daa
orb
adc
imul
mov
pop
dec
das
mov
rol
mov
push
mov
jp
or
stos
repnz
sub
jl
inc
dec
out
mov
icebp
push
dec
adc
shrl
push
hlt
jnp
into
cs
fstpt
icebp
pop
aaa
dec
push
pop
xchg
inc
or
cmp
push
xchg
or
cmpsb
aas
repz
pop
mov
add
ss
add
cmp
bound
shrl
fs
repz
cli
xlat
arpl
imul
and
orl
daa
rcll
sbb
xchg
scas
out
ret
mov
lock
sub
cmp
dec
mov
lcall
shrl
leave
lods
xor
test
push
mov
sub
popf
loop
adc
repnz
mov
test
mov
add
jbe
rol
sub
popa
or
cmp
mov
cmp
scas
filds
lods
jae
enter
inc
and
and
popf
xchg
bound
jbe
leave
and
mov
sahf
testl
jle
lods
jae
out
jno
hlt
mov
push
iret
sub
xor
imull
bound
rcrl
mov
pop
mov
inc
push
mov
adc
test
sbb
add
add
xor
imul
jno
pop
std
mov
add
cli
inc
roll
pushf
add
pushf
cltd
sub
test
pop
xor
pop
mov
adc
mov
insl
or
and
inc
aam
xchg
in
xchg
sub
xor
xchg
data16
jge
pushf
fstpl
push
sub
mov
aad
test
dec
dec
movsl
addr16
dec
xchg
enter
arpl
xchg
dec
lret
mov
dec
or
inc
adc
push
fmuls
and
lods
bound
mov
lods
jae
inc
dec
xchg
cmp
sbb
jne
shll
cmc
or
add
jne
dec
or
jb
jg
cmp
lahf
and
int3
push
pop
stos
int3
fs
add
scas
mov
push
std
pop
jle
xchg
pop
cmp
push
out
mov
iret
sub
push
sub
push
cmpsl
dec
mov
int3
dec
into
mov
sbb
pop
xchg
mov
jne
pop
lds
cwtl
jecxz
add
imul
mov
mov
push
dec
addl
mov
popf
or
mov
push
cld
adc
or
mov
addr16
cmpb
addl
pop
xchg
std
jecxz
movsb
mov
cmc
sarl
sti
mov
mov
loopne
pusha
ss
jl
adc
xchg
aad
sbb
out
lds
sub
outsl
xlat
cwtl
dec
adc
loop
lea
push
in
xor
xlat
adc
pop
mov
add
test
rcrb
movsb
sbbl
mov
adc
arpl
inc
jge
cmp
cmp
xor
insb
pop
mov
push
mov
pop
cmp
std
lds
inc
and
adc
cli
test
pop
fldt
jp
lret
sbb
cwtl
add
dec
or
scas
out
inc
mov
call
push
jmp
push
sbb
adc
mov
xor
mov
add
pop
lea
insl
out
test
jbe
xchg
adc
ss
test
inc
fsubs
clc
and
js
sbb
inc
jns
inc
int3
and
push
xchg
aam
sub
lret
cmpsl
dec
mov
and
loope
cmp
mov
xor
lahf
testl
jp
rol
stos
xchg
cld
sub
cli
xchg
test
cmp
mov
inc
aas
push
ljmp
mov
jp
mov
loope
sti
and
lcall
or
repnz
sub
jae
or
cmp
or
push
inc
into
mov
or
mov
adc
mov
shld
rorl
test
or
adc
scas
out
int3
push
cltd
mov
mov
jnp
xor
dec
mov
gs
sarl
push
test
mov
xor
sbb
out
repz
negl
push
test
mov
movsb
pop
in
in
or
aaa
inc
push
add
cmc
aam
adc
icebp
lcall
xchg
std
shll
lahf
aam
sahf
das
bound
inc
pushf
and
stos
push
or
jmp
fstl
jne
movsb
test
std
sub
jp
mov
bound
cwtl
ljmp
outsl
mov
jp
sbb
dec
push
jb
or
push
lds
cmc
pop
ret
arpl
mov
repnz
pop
mov
xor
ss
sub
jo
rclb
scas
fists
mov
imul
shll
fs
js
dec
push
addr16
mov
sbb
add
mov
imul
stos
lods
pop
xor
dec
into
ljmp
daa
sub
mov
xchg
add
push
icebp
or
push
xchg
es
fdivrl
jno
jae
out
out
add
ss
in
jnp
inc
out
pop
push
dec
push
xor
adc
push
pop
xlat
lods
aad
dec
fwait
daa
lea
jne
mov
jbe
sbb
mov
jle
std
cli
dec
fxtract
fcmovb
and
divl
jbe
jecxz
add
sub
jb
mov
ja
in
push
test
pop
leave
fadds
sahf
cmp
adc
and
cmpsb
insl
add
test
stos
vphaddubq
leave
mov
in
xor
dec
mov
es
cmp
add
mov
cmp
bound
movsb
fildll
lock
dec
xchg
rcll
sti
fldenv
stc
pop
xor
mov
add
sub
push
outsl
push
mov
push
or
xor
jne
dec
mov
xor
mov
inc
repz
aad
and
es
xor
push
pop
fldt
pop
rcrl
mov
cld
push
in
repz
out
mov
stc
mov
pop
or
ret
insb
insb
out
sub
imul
xor
sti
icebp
loop
dec
dec
bound
scas
pop
push
adc
fistps
mov
mov
ret
fldcw
lcall
enter
std
jns
xchg
pop
decb
push
clc
cmpsb
push
inc
or
ror
loop
sub
lock
lock
push
sar
mov
scas
jle
aas
xchg
imul
push
loope
imul
mov
pushf
inc
fcomi
jns
jo
push
ret
mov
clc
push
or
scas
xchg
or
je
stos
cmp
mov
jbe
movsb
iret
jp
dec
add
mov
and
stos
add
pop
sub
add
sub
adc
mov
dec
mov
sbb
in
mov
cmp
xor
loope
in
xor
icebp
add
inc
add
mov
sarl
cmp
in
xor
pop
sbb
mov
adc
inc
and
adc
inc
mov
cmc
andl
jecxz
fstps
push
xor
jecxz
add
add
shrb
cmp
das
imul
sub
inc
cmpl
mov
data16
out
mov
mov
repnz
addr16
mov
inc
repz
mov
call
ret
push
test
add
mov
dec
dec
mov
popa
leave
inc
mov
leave
mov
int3
imul
negl
push
nop
repz
mov
mov
les
pop
adc
sbb
and
xchg
adc
notb
push
cmpl
mov
jmp
push
adc
adc
adc
sub
push
cmp
aas
sub
sbb
frstor
xchg
out
push
loope
jp
lret
stos
dec
dec
in
shll
dec
mov
pop
pop
sub
add
filds
jecxz
fucomi
es
data16
xchg
ror
mov
xchg
cmp
inc
or
mov
loopne
and
mov
mov
fstl
add
cwtl
xchg
jp
and
xchg
mov
push
scas
fimuls
int3
shll
jo
testl
ret
and
pop
ret
repnz
fwait
das
lds
int3
inc
test
mov
dec
ficompl
sub
int3
jp
xchg
mull
lds
popl
int
int
rorl
xchg
push
aam
xlat
iret
sub
out
in
data16
mov
lcall
push
lea
stc
push
push
cs
mov
pop
add
jns
outsb
rol
movsb
add
scas
popf
daa
pushf
bound
insb
aam
std
jo
lret
and
aas
xchg
hlt
sahf
adc
push
sub
jae
pop
dec
and
xchg
pop
lods
popl
and
mov
xrelease
outsl
sub
sbb
out
jae
mov
pop
xor
popf
lock
cs
dec
jp
sarb
jae
jecxz
mov
sub
add
enter
inc
insl
push
cld
lret
dec
xchg
sahf
jge
push
popa
movsb
lods
inc
mov
or
mov
incl
mov
xchg
pushf
mov
fcomi
xorb
notb
fisubs
loope
subl
dec
jno
loopne
xchg
push
xchg
dec
sbb
cmpsl
push
add
xor
mov
cmp
lret
and
push
shlb
and
clc
aad
sbb
daa
scas
loopne
mov
popl
jne
notb
icebp
add
ja
arpl
pusha
ds
int
jb
jne
sub
sub
or
or
outsb
xor
push
sar
inc
xchg
jle
pop
sbbl
xchg
mov
repz
add
ja
inc
cltd
out
lahf
mov
fldenv
push
in
sbb
push
ret
das
movsl
leave
push
lret
mov
jecxz
leave
rcl
nop
test
xchg
cmp
xchg
mov
cmp
xor
mov
fcmovnbe
loop
sti
or
aad
out
pop
push
out
pop
gs
out
inc
adc
cmp
xor
jne
inc
mov
fsubs
push
xor
int3
leave
sbb
dec
dec
sbb
iret
rolb
sub
dec
sbb
popf
sub
inc
jl
test
mov
add
ss
std
ljmp
jge
mov
push
mov
xchg
mov
pop
fwait
push
inc
inc
insb
sbb
fmul
sub
pop
pop
faddp
mov
pusha
and
push
push
push
fdivs
test
clc
push
lahf
jbe
jp
sub
jbe
sbb
xchg
xchg
je
dec
mov
push
lock
mov
cmpsl
sbb
mov
clc
out
les
and
stc
cmpsb
or
scas
lret
cmc
add
jge
sti
xchg
or
mov
cmp
clc
cwtl
push
adc
jns
dec
sbbl
and
in
pop
inc
popa
mov
repnz
cmp
pop
hlt
adc
stc
pushf
cmp
enter
sbb
pushf
sub
sub
mov
aad
inc
daa
or
out
in
test
loope
iret
and
dec
jnp
popa
xchg
clc
xor
adc
decb
rolb
ficomps
vmread
cmp
inc
adc
cltd
rcrb
pop
scas
loop
fst
sub
sub
test
aaa
mov
mov
mov
jmp
pop
pop
gs
inc
jns
loopne
sbb
aam
pop
lret
inc
icebp
inc
mov
nop
js
adcl
imul
or
nop
and
ja
and
aaa
inc
daa
inc
pop
clc
icebp
popf
pushf
jae
sub
mov
ret
outsl
mov
push
sub
pop
scas
fisubl
cmpsl
pop
jbe
and
fists
push
stos
mov
cs
mov
xchg
bound
xchg
adc
ficoml
orb
xchg
iret
scas
mov
mov
shll
push
mov
xchg
add
repz
sub
jbe
cpuid
push
je
push
dec
push
sbb
dec
jnp
sub
subb
cmp
les
pop
popf
lret
loopne
fwait
movb
xor
mull
mov
fsts
fcomps
mov
sub
pusha
lods
mov
mov
dec
sbb
and
inc
mov
scas
loopne
jecxz
mov
int3
dec
adc
mov
xchg
in
xchg
mov
jb
adc
cltd
dec
popf
inc
pop
xor
adc
cmc
clc
adc
insb
repnz
movsb
inc
aad
dec
test
cmpsb
test
or
in
daa
fsub
adc
imul
lods
retw
je
mov
out
mov
jno
mov
popa
insl
test
cmp
sbb
orb
sar
mov
fisubl
loop
in
cltd
add
mov
mov
int
jecxz
andl
fcomip
mov
dec
push
clc
sbb
mov
mov
lds
or
iret
aas
faddl
subl
adc
dec
insb
sub
arpl
mov
mov
stos
add
bound
pop
xchg
mul
mov
mov
enter
lock
jb
xchg
cli
test
arpl
jnp
cmp
cli
rcl
repz
pop
jecxz
sahf
clc
out
cli
xor
inc
orb
cld
decl
or
stos
inc
hlt
faddl
sbb
loope
scas
add
mov
fwait
push
js
arpl
inc
lahf
pop
jne
shlb
ds
popf
push
cmp
pop
push
das
xor
nop
mov
mov
lcall
in
mov
push
jne
repz
jle
in
mov
mov
mov
or
daa
mov
hlt
cmp
mov
mulb
mov
insl
pop
scas
shll
xor
stos
incl
jle
rol
scas
xchg
ret
aad
jae
mov
mov
bound
mov
les
sahf
pop
hlt
adc
jo
push
mov
into
rcr
lods
outsb
jae
pop
push
popf
mov
mov
lcall
out
adc
mov
test
bound
and
inc
jle
aam
and
adc
jmp
cmc
lds
or
add
jp
dec
push
aas
fdivl
jne
dec
sbb
mov
or
sub
shlb
sbb
sub
dec
sbb
or
xchg
xchg
jmp
mov
jp
mov
pop
xchg
xchg
jge
mov
fisttpll
rorb
mov
xchg
push
mov
xor
bound
pusha
repz
int3
rorl
and
in
dec
inc
dec
inc
pop
fstl
mov
fpatan
lret
mov
stos
pop
pushf
add
push
mov
std
sbb
mov
iret
popf
in
pop
testb
rcl
ja
ds
mov
mov
out
adc
out
adc
mov
lods
mov
xor
sub
test
jbe
cs
insl
sub
sbb
add
add
shll
lret
cmp
pop
pop
shrb
ficompl
out
adc
mov
add
scas
dec
mov
jl
addr16
or
into
mov
cmc
push
sbb
jbe
inc
push
lcall
cmpl
and
lahf
and
repnz
movsb
sbb
ljmp
sbb
mov
stc
orb
addr16
and
fwait
shlb
adc
stc
repnz
lcall
pop
imul
dec
out
lea
lods
fwait
fwait
and
mov
jp
or
fdivs
mov
and
movsb
test
push
dec
lcall
insb
data16
xchg
add
daa
sbb
pop
ja
aad
add
xchg
pop
jl
stc
and
or
xor
or
lds
jb
push
test
lock
sub
loopne
xchg
add
add
mov
jge
test
inc
mov
mov
push
mov
fists
fisubrs
sub
adc
xor
xor
mov
inc
dec
xchg
push
es
adc
jg
mov
jg
movl
jge
into
js
xchg
pop
cmpsb
iret
xor
addr16
sti
or
loop
mov
int
or
in
hlt
jg
push
jecxz
inc
dec
fdivrs
add
nop
aam
or
mov
inc
ds
xchg
sub
mov
test
mov
movsb
dec
jno
loopne
cmc
push
pusha
inc
sti
dec
fsts
lods
sarb
xchg
cmp
mov
push
out
pop
enter
mov
inc
fdivrl
test
mov
jecxz
xchg
int
mov
pop
adc
and
push
dec
mov
dec
adc
aad
fs
sub
nop
rclb
ficompl
ficoms
dec
mov
pop
in
fisubrs
sbb
adc
inc
stos
shl
cmpsb
inc
cmp
inc
into
inc
rcrl
shr
xor
and
push
add
ficomps
insb
jne
jge
inc
addr16
xchg
jae
add
lret
sub
jp
ja
mov
push
ret
clc
xchg
push
aam
jb
ljmp
add
mov
mov
jns
dec
sub
push
or
and
xor
sub
sar
mov
popf
stos
jge
and
mov
cwtl
aam
lods
in
stos
pop
push
add
sub
add
inc
std
ja
in
inc
test
fldl
xor
xor
xor
test
arpl
xchg
xchg
mov
lods
mov
pop
mov
jne
push
mov
mov
scas
inc
cld
scas
push
sbb
dec
jle
mov
aam
jg
movsb
notl
mov
inc
mov
mov
dec
xor
mov
shrd
mov
sbb
or
repz
dec
nop
loopne
shll
mov
cmp
outsl
add
cmp
aas
add
scas
cmp
jno
jecxz
loop
pop
negb
in
imul
and
push
daa
hlt
in
adc
fmulp
lods
mov
out
outsb
or
pop
mov
sbb
pop
out
cltd
cmp
pop
xor
push
insb
nop
jnp
cltd
mov
adc
cld
leave
pushf
mov
sub
imul
insl
test
fwait
pop
jnp
aam
in
add
sti
mov
push
fwait
sti
movsl
sub
jmp
mov
sbb
cmpsb
mov
daa
pop
dec
xchg
jne
jge
in
mov
sbb
fiadds
fldt
jge
ljmp
or
jmp
adc
lods
or
add
cmp
push
jb
popa
icebp
lods
xor
rcrb
push
mov
push
mov
or
inc
clc
popf
stos
imul
repz
mov
dec
nop
daa
outsb
and
andnps
push
gs
jns
repnz
push
xchg
jns
ret
xlat
subb
js
icebp
pop
sub
cmp
or
sub
mov
sti
jnp
fs
push
pop
jnp
scas
sub
shlb
ret
movsb
outsb
std
push
inc
and
dec
imul
pop
mov
xchg
and
dec
pop
mov
lcall
pushf
stos
pop
das
ljmp
push
or
jae
inc
cwtl
addl
mov
stc
enter
loop
fstpt
cmp
in
mov
mov
xchg
ss
sbb
dec
imul
pop
jnp
loope
scas
fisttpl
and
outsl
jmp
fists
repz
and
movsb
inc
and
cmp
lret
aad
fwait
and
ljmp
ret
sti
sbb
out
stos
inc
sti
push
in
adcl
mov
add
aas
aad
dec
out
mov
rorl
adcb
sbb
push
mov
testb
sbbb
adc
push
adc
hlt
lahf
fldt
adc
mov
std
fldenv
jo
int
or
adc
int3
mov
lret
mov
xchg
in
or
xor
xchg
xchg
out
sub
jnp
ds
add
jl
jno
repnz
movsb
movsl
xor
sub
push
outsl
cmp
cmpsb
in
scas
insb
icebp
push
pop
jmp
movsl
les
jo
mov
aad
iret
push
inc
out
out
pop
cs
sbb
repnz
rcrb
lods
sub
faddl
push
mov
adc
outsb
mov
aaa
out
lods
scas
sbb
xchg
mov
push
sub
movsb
jb
fnstenv
xchg
adc
lock
in
sub
loopne
aam
pop
pop
pop
pop
dec
cmp
ret
fs
iret
ljmp
sub
mov
mov
popf
adc
jb
dec
outsb
sub
sub
push
mov
imulb
push
cli
mov
dec
test
inc
pushf
leave
cli
pushf
sahf
pop
pop
xor
divb
lret
dec
loop
idivl
shr
mov
les
fwait
mov
push
add
or
clc
dec
dec
xchg
rcr
insl
js
push
sar
cmp
adc
imul
negl
sbb
addr16
or
mov
imul
enter
insl
or
pusha
out
cmc
ljmp
int
cmp
lock
add
or
mov
and
add
out
movsb
int
je
and
mov
jmp
ja
and
xchg
in
test
jp
jns
popf
jno
cmp
mov
addr16
cltd
push
sub
movl
in
fisubrs
adc
jp
pop
pop
cmp
cmpsl
scas
sti
js
popa
xor
bound
rorl
lods
mov
movsl
mov
les
imul
fstps
shrb
fcoml
stos
dec
movsb
mov
inc
sbb
fiaddl
loopne
add
pop
jne
jp
cmc
rolb
xor
pop
sahf
and
int
xchg
sub
pusha
inc
push
arpl
jne
loope
mov
push
push
data16
fwait
popf
rcrl
fisttpll
mov
call
adc
scas
inc
xchg
push
xchg
cld
loope
inc
nop
fyl2x
or
aam
aas
and
clc
jns
sub
bnd
lcall
cmp
test
rorb
lods
sbb
test
push
js
cmp
testl
mov
lret
pop
cld
mov
push
rorb
les
bound
cld
push
xchg
and
xchg
into
iret
mov
sbb
jmp
aam
jge
add
push
ss
mov
adcl
jno
sbb
fildl
dec
fs
add
enter
testl
inc
je
popf
int
or
dec
jge
or
imul
or
aaa
stos
inc
sub
sti
jns
outsl
jecxz
aas
mov
orb
inc
cmp
lret
imul
mov
daa
jbe
cmp
int
lret
pop
sbb
fnstcw
es
ret
mov
sahf
aad
cmp
out
divl
jmp
mov
fwait
div
stc
xor
mov
mov
mov
pop
push
mov
inc
xchg
fiadds
repnz
repz
stc
xchg
sbb
and
jge
pop
fldcw
mov
sub
test
ret
adc
mov
cli
divb
shrb
test
inc
inc
inc
mov
add
addr16
addr16
jne
sub
stc
in
fwait
push
cld
xchg
xchg
mov
push
sbb
into
scas
and
xor
cmc
cmp
xor
mov
adc
mov
out
dec
jle
mov
mov
dec
mov
mov
push
fcomps
sbb
aad
loopne
inc
jecxz
lods
push
ja
mov
cltd
shll
jns
sub
cmpl
push
test
and
mov
repz
cli
ss
je
rcl
imul
adc
pop
sub
aam
mov
adc
out
or
test
adc
lcall
pusha
adcl
ljmp
mov
pop
cltd
test
test
jae
repz
aam
mov
std
inc
inc
inc
out
rclb
pusha
xchg
mov
mov
sbb
js
jae
js
fsubs
lcall
jecxz
and
mov
les
push
in
push
push
xor
jge
pop
mov
jns
mov
jle
mov
iret
push
inc
fdivr
out
push
cs
hlt
pop
pop
test
push
cltd
cmc
dec
xchg
sub
scas
xchg
roll
cmp
in
adc
popa
lret
pop
push
loope
pop
xor
xchg
insl
test
push
and
call
dec
js
fmuls
dec
push
adc
lds
adc
test
add
jae
cmpsb
or
std
xchg
pusha
mov
and
push
lock
test
mov
push
add
cmp
xorb
cmc
addr16
ret
or
and
jle
mov
sarb
or
andb
out
arpl
and
pop
mov
and
mov
cmpsl
dec
adc
cltd
decl
pop
aad
lcall
jp
xchg
int3
bound
rorl
pop
movl
movsl
into
jnp
pop
pop
cwtl
xchg
icebp
or
int3
lcall
cmc
push
cmp
jno
sarb
arpl
cli
data16
test
sbb
cli
xchg
xchg
xchg
xchg
icebp
dec
ret
xchg
dec
sbb
pop
cmpsb
fisttps
xchg
sbb
out
leave
pop
inc
mov
sbb
sub
fwait
pop
movsb
sbb
inc
rclb
xorl
call
loopne
pop
ds
and
fidivs
push
xor
xor
ss
ficoms
mov
or
ja
gs
push
pop
addr16
ficoml
js
xor
repz
pusha
sub
scas
pop
sbb
push
cltd
add
jno
mov
sbb
sub
sub
pusha
xor
iret
call
jge
addr16
push
cmp
imul
imul
xchg
push
dec
jle
add
jb
xchg
mov
addr16
dec
push
xor
pop
addr16
scas
lret
idiv
lea
xor
push
push
sub
or
cmpsb
movsl
daa
pop
add
ss
lds
rorl
pop
xor
ret
mov
lods
jge
mov
mov
std
push
add
je
cli
out
xchg
sbb
inc
das
lcall
jne
push
popa
push
pop
mov
lahf
xor
pushf
cli
int3
and
jno
sbb
loop
sbb
fmuls
mov
imul
and
mov
mov
mov
cmp
negl
pop
clc
and
mulb
sub
sub
mov
mov
and
into
in
fldl2e
mov
dec
xor
mov
loopne
pop
inc
vmovupd
add
or
loop
je
aam
mov
sahf
and
inc
enter
mov
jae
and
icebp
jp
and
xchg
cmpsb
mov
cli
xor
sub
cwtl
push
popf
out
aaa
cmc
lret
mov
clc
inc
repnz
cs
fdivrl
sbb
fnstsw
ds
sbb
lea
das
mov
or
sub
imul
adc
fisubl
cmpsb
fmul
fdivl
icebp
push
dec
fnstenv
aad
popf
mov
mov
cltd
fnstsw
add
xor
stos
or
inc
mov
xchg
jnp
mov
aaa
movsb
xchg
mov
call
ret
shl
dec
mov
push
inc
jno
pop
push
aas
push
dec
inc
outsb
test
stos
dec
mov
loope
mov
pop
sbb
dec
dec
addr16
cmpsb
aam
daa
jl
out
lahf
popa
fstps
jp
fwait
add
lds
aaa
and
in
inc
mov
cwtl
cld
jle
rcl
test
cltd
jae
cmp
fldl
iret
outsb
sbb
cmp
sbb
pushl
and
movsb
dec
es
fists
rolb
pusha
xchg
add
imul
idivb
stos
in
fwait
jg
andl
fmulp
addb
mov
sub
fldenv
lcall
sub
xor
test
frstor
inc
cli
popf
and
in
cltd
dec
or
xchg
jg
push
out
scas
pop
movsl
sti
lret
data16
and
or
imul
push
movsl
sbb
cmp
inc
std
loopne
pop
out
not
push
cmc
mov
scas
fwait
add
jbe
jmp
adc
inc
fwait
add
jbe
sub
xchg
adc
mov
mov
mov
rcll
mov
lods
or
or
pop
or
in
addb
push
mov
cs
mov
dec
push
mov
xor
clc
fwait
add
fsubrl
dec
pop
mov
aam
jb
popa
xlat
iret
cld
dec
iret
mov
jl
inc
mov
dec
mov
loop
int3
in
add
or
jmp
add
loopne
mov
pop
jmp
mov
outsb
mov
jp
lods
cmpsb
sub
ficoml
andl
fdivrs
int3
jo
pushf
jnp
dec
pusha
ret
sbb
fimull
rep
pop
dec
scas
into
les
out
ja
clc
pop
call
dec
jbe
push
pop
cmpsb
mov
addr16
bound
aad
pop
int
dec
imul
cltd
mov
dec
jo
ljmp
inc
cld
mov
into
or
jg
inc
xchg
jge
cmp
mov
pop
stc
idivb
mov
jp
inc
insl
sahf
adc
mov
mov
enter
and
out
sbb
lahf
add
ret
scas
ret
sbb
sbb
js
insl
sbb
and
leave
sbb
jae
pop
push
fs
ret
enter
push
inc
jnp
das
popa
push
sbb
fdivl
push
jb
daa
fld
xor
imul
nop
rorl
inc
and
add
ret
fisubs
cld
sahf
mov
mov
enter
fldt
imul
out
in
push
xlat
inc
xrelease
push
loope
adc
and
hlt
xchg
call
mov
hlt
rorl
pop
call
icebp
mov
aad
fcoms
jae
xor
sbb
sbb
mov
in
xor
and
pusha
clc
cs
jno
mov
push
xor
imull
and
or
cmpl
lock
fldcw
popf
mov
hlt
lods
and
aam
push
push
std
sub
stos
push
ret
adc
popf
mov
fisubl
push
cmp
cmp
pushf
jp
or
inc
mov
movsl
fsubrs
icebp
imul
inc
mov
cmp
sbb
scas
icebp
cmp
and
int
test
push
mov
dec
sbb
popf
das
gs
add
adc
or
pop
push
bound
scas
lret
shlb
mov
ret
jo
dec
orl
push
testl
lahf
fbld
pop
dec
enter
pusha
inc
adc
pusha
outsb
sub
repnz
and
aas
cmp
in
lcall
xchg
lods
xor
loop
test
mov
sub
lea
jmp
stos
outsl
cmp
scas
xor
cmp
mov
orl
jmp
popa
lock
push
jecxz
sbb
out
out
sti
jl
arpl
adc
icebp
loopne
mov
sti
loopew
mov
hlt
outsb
outsl
add
dec
mov
jns
sub
and
sbb
stc
cmp
push
sub
rclb
xchg
cmp
sub
adc
adc
and
movsb
sub
lret
insb
xchg
xor
jp
data16
loope
rcll
push
mov
out
xchg
insb
ss
pushf
fisubrl
aaa
pusha
push
mov
out
cwtl
insl
incl
adc
inc
sub
iret
insb
enter
mov
cltd
test
add
clc
fnstsw
pop
or
out
dec
call
out
stc
mov
stos
jb
movsb
or
sbb
fs
or
leave
sub
pusha
mov
push
in
andb
lods
and
fsts
mov
mov
mov
outsl
jg
mov
and
ljmp
and
and
jo
mov
cmpsl
pop
sbb
xchg
sti
sbb
pop
xchg
or
orb
add
loop
mov
add
push
movsb
or
push
daa
mov
ret
cltd
xor
or
push
xchg
jmp
push
sub
shlb
push
add
dec
scas
stc
inc
mov
push
or
pop
sbb
add
les
xor
subl
pop
test
lret
inc
jge
dec
test
mov
mov
cmp
or
inc
and
inc
insl
xor
insl
fists
mov
shll
icebp
ljmp
ret
push
sub
imul
fwait
mov
cmp
xor
femms
cltd
mov
adc
mov
popa
and
insl
idivb
leave
repnz
and
xor
pop
xor
xor
mov
les
xchg
dec
ret
jne
into
lods
fstp
insl
mov
inc
sbb
add
sbb
adc
pop
fdivrl
sarl
dec
inc
dec
test
inc
and
and
popa
lock
xorb
cltd
inc
adc
ljmp
dec
jbe
cld
mov
mov
mov
cmc
testb
mov
dec
jg
dec
flds
and
loope
leave
inc
or
jmp
or
pop
rcrb
mov
push
pop
jno
mov
cld
mov
add
pop
jge
mov
int
pop
inc
mov
mov
cmp
bound
xor
add
push
andl
pop
sbb
fsubs
ret
mov
nop
jle
adc
loope
or
rorb
pushf
sti
push
scas
mov
sub
lods
enter
mov
inc
xchg
push
jno
pop
mov
andl
sub
enter
rol
shrl
andb
mov
push
add
lods
sub
cmpsl
aaa
mov
int3
inc
cmp
pop
mov
jmp
push
movsl
cmp
adc
scas
clc
adc
pop
rcr
jno
mov
orb
xchg
xor
pop
pop
test
loopne
jmp
xor
xchg
arpl
cmp
aad
and
inc
add
addr16
and
mov
xor
add
mov
pop
and
enter
ret
dec
fcomps
es
aam
enter
and
js
sarb
inc
cli
imul
xchg
mov
mov
das
dec
aas
push
aad
pop
cs
movb
dec
xor
enter
les
add
jge
mov
aam
mov
call
leave
cld
or
in
je
daa
jmp
xor
sbb
push
pop
inc
jbe
inc
mov
push
adc
std
pop
push
dec
cmpsb
or
mov
mov
xchg
inc
mov
mov
nop
jae
inc
fcompl
and
sbb
test
or
xchg
sahf
jne
movsb
jg
test
jecxz
repz
sbb
popl
push
jmp
lea
push
sub
daa
push
hlt
mov
sub
jo
pushf
or
aaa
pop
sti
xor
sbb
jecxz
mov
dec
ss
shll
add
xlat
bound
sbb
test
ret
push
notb
sahf
and
xchg
dec
into
ror
dec
pop
cmp
dec
add
pop
add
push
sbb
flds
sbb
dec
fcmovne
fdivrl
or
sbb
xor
rcl
adc
push
xchg
fidivrs
stos
jmp
pop
xor
fidivl
test
pop
inc
mov
daa
stos
pop
movsb
lds
fildll
push
mov
pop
ret
fcmovbe
fldcw
xchg
aaa
or
cmpsb
pushf
lret
sub
add
sub
mov
pop
mov
mov
mov
sbb
stos
fimull
leave
in
xchg
push
push
mov
daa
lock
xchg
sub
mov
fimuls
adc
pop
mov
jge
ss
sbb
pop
mov
mov
mov
inc
cmp
xor
mov
mov
imul
lret
bound
stos
insl
mov
jne
jg
xchg
loopne
inc
push
cld
icebp
aaa
into
das
push
insb
mov
insb
mov
xchg
test
and
int3
repz
sub
test
ret
xorl
and
fidivs
into
xor
sub
mov
adc
out
cltd
adc
xchg
sub
dec
push
lcall
pop
inc
dec
sti
push
xchg
jno
adc
cmpsl
cmp
xchg
adc
fiaddl
mov
push
add
jnp
sub
xchg
mov
je
pop
push
push
outsl
adcl
idivb
aam
fwait
xor
jg
push
xor
shrl
pop
idivb
add
push
or
or
pop
cwtl
clc
in
adc
enter
addr16
inc
xor
jecxz
adc
push
imul
jp
int3
hlt
dec
pop
jle
daa
add
xor
jmp
mov
ja
add
scas
pop
push
push
adc
mov
or
xor
subl
jae
and
imul
cli
scas
stc
cs
dec
faddl
cmpsb
lcall
jmp
push
lea
int
xor
push
das
movsl
out
lcall
data16
push
mov
sti
fmull
div
xor
dec
dec
or
pop
or
jae
sarl
xchg
insl
stos
cmc
push
adc
cmp
aas
xchg
add
cmpsb
out
or
sub
je
js
or
fsubl
hlt
ja
notb
pusha
jg
test
dec
mov
inc
les
loopne
jns
xor
push
push
mov
imul
ficoml
out
into
dec
lcall
aam
xor
fidivrs
into
mov
xchg
mov
in
cmp
repz
jae
adc
xor
or
clc
fdivrl
roll
mov
es
cmc
std
das
push
aas
fwait
divl
jne
pop
sbbl
pop
orl
sub
loopne
inc
or
cltd
dec
push
lcall
out
dec
shll
inc
mov
mov
lods
cmp
test
iret
push
dec
bound
out
pop
leave
inc
mov
pop
repz
jg
outsl
add
aaa
fisttpl
data16
icebp
jns
lods
jp
fadds
scas
xor
enter
and
mov
shll
mov
cmp
and
je
push
lock
or
xor
sub
push
arpl
aam
or
push
sub
into
adc
push
pop
xchg
inc
dec
loop
mov
adc
sub
jl
jecxz
xchg
adc
pop
sub
mov
enter
aaa
mov
shl
das
leave
and
and
adc
xchg
out
and
mov
sbb
cmpsb
jb
xchg
jnp
mov
in
inc
in
xor
push
mov
cwtl
jmp
adc
fucomi
jl
mov
push
hlt
pop
dec
into
inc
push
lods
pop
in
xor
je
mov
adc
pop
outsl
repz
adc
insb
stc
mov
nop
out
xor
adc
arpl
call
lret
inc
mov
or
pop
jl
lahf
pop
fwait
out
sub
lods
sbb
xchg
pop
cmp
test
stc
mov
sbb
stos
mov
sub
jnp
jecxz
std
dec
or
mov
hlt
int
pop
arpl
ljmp
stc
jp
or
adc
sbb
lret
sub
push
lods
pop
cmp
mov
sahf
mov
add
cld
add
sub
pop
push
add
sbbl
call
mov
dec
dec
icebp
loopew
nop
shlb
xor
fiaddl
mov
jle
cli
enter
and
xchg
sub
adc
pop
mov
fistl
out
inc
cli
mov
and
sub
mov
sbb
scas
push
jne
lret
pop
aam
adc
lret
pop
jmp
loopne
or
sub
push
dec
dec
mov
adc
adc
mov
xchg
in
shrb
pop
in
xchg
fidivrl
ret
aas
mov
into
xchg
loop
daa
jecxz
mov
xchg
or
and
into
pop
bound
jge
mov
cmpsb
jg
dec
enter
jp
jae
lods
jg
imul
xchg
das
jns
flds
fidivrl
shrb
dec
dec
or
jae
addr16
sbb
cld
add
mov
inc
insb
mov
mov
dec
out
loopne
dec
jo
ljmp
adc
jmp
ja
stos
stos
inc
pop
iret
pop
xchg
mov
pusha
push
push
add
xor
sbb
repz
mov
stos
inc
addr16
fistps
mov
jg
cmp
cwtl
xlat
cmp
ret
cmp
rorl
sub
cmp
bound
scas
repz
mov
pop
ljmp
xchg
mov
cwtl
push
iret
jg
bound
mov
aam
shr
mov
pushf
mov
mov
lock
push
inc
in
push
xchg
push
jno
pop
leave
insl
pop
or
push
imulb
jmp
or
mov
pushf
out
push
je
jbe
pop
paddsw
or
cmpl
cmp
dec
pop
jnp
data16
imul
sub
scas
mov
push
dec
and
adc
popa
inc
stos
mov
mov
fcompp
sarb
rorl
loop
inc
pop
inc
mov
jecxz
daa
adc
add
dec
push
fstps
mov
xchg
sbbl
cmc
je
push
or
fadd
push
pop
jno
outsb
and
mov
push
sti
cmp
outsl
adc
mov
call
push
dec
mov
cmp
rcrl
sbb
imul
aas
movsb
push
mov
out
xor
adc
test
out
inc
daa
ret
stos
out
ficompl
fistl
sbb
or
dec
mov
fnsave
xchg
inc
xor
xor
push
repnz
mov
xor
out
or
adc
mov
ljmp
jb
ret
push
lock
rcrl
sbbb
inc
out
mov
pop
cmpsb
pop
or
dec
or
add
inc
ja
inc
cmpsb
lods
fisttps
cmp
add
shl
mov
cld
aaa
jge
xor
dec
jo
icebp
call
fiaddl
mov
lea
xor
inc
mov
push
lahf
scas
fnstsw
jne
ljmp
insl
or
xor
mov
lds
jle
cmp
es
jbe
aaa
cltd
aam
pop
mov
nop
jae
push
mov
ficoms
mov
mov
cmp
cmp
fiadds
mov
out
mov
sbb
jg
sbb
jg
orb
xor
jns
cmpb
push
insb
add
jnp
mov
lret
inc
or
pop
aaa
rsqrtps
xor
pop
enter
test
ss
or
bound
xchg
xorb
sahf
xor
pop
loopne
stos
mov
xchg
nop
nop
aam
cmp
mov
mov
mov
out
imul
scas
mov
dec
sub
jno
pop
cltd
filds
pop
fldt
and
int3
je
lcall
outsl
lcall
cmp
aam
fstl
xchg
cmp
sub
aaa
xor
popf
pop
push
clc
pop
faddp
dec
dec
fxch
mov
or
jnp
cmp
adc
cwtl
fdivs
or
mov
iret
mov
xchg
add
sbb
jg
in
loop
jl
call
mov
or
fbld
push
dec
adc
shlb
scas
mov
sub
fimull
out
dec
cld
outsl
in
js
and
mov
or
jae
aad
faddp
adcb
or
lcall
and
push
ficomps
xchg
sub
rolb
mov
movsb
or
sbb
dec
popa
push
orb
dec
daa
lret
scas
xchg
push
dec
lods
xchg
scas
cmpsl
rcrl
enter
aam
lcall
xor
jle
test
jnp
xchg
cmp
sub
sub
mov
cmpsb
insl
imul
cmp
xorl
loop
sahf
ljmp
xor
icebp
dec
xchg
rcl
lret
adc
pop
lret
jg
cmp
xor
cmp
aad
jae
or
enter
pop
outsb
in
xchg
pop
cmc
dec
loopne
push
pop
lods
out
icebp
xchg
cmc
adcl
mov
jg
jns
adc
jle
add
and
in
call
pop
mov
cmc
mov
sbb
aas
ljmp
sti
hlt
and
add
fucomip
shlb
in
popa
stos
in
stc
xor
or
lcall
jb
sbb
add
pop
push
push
adc
stos
jnp
jbe
sbb
adc
cmpsl
scas
sbb
rcrl
xor
movsl
sti
cmp
scas
pop
or
pop
sbb
inc
je
gs
dec
push
or
andl
cmpsb
js
not
leave
clc
xchg
das
cmp
mov
cwtl
test
lea
pusha
xchg
pop
adc
dec
lds
sub
xchg
lock
xchg
scas
repz
cltd
and
adc
push
subl
jecxz
xor
adc
cwtl
ficomps
jge
jb
ja
jecxz
je
xor
sbb
mov
adc
fcompl
iret
jne
rolb
jg
or
paddb
jno
shrb
hlt
jno
mov
ljmp
aaa
mov
pop
cmpsb
push
pop
jecxz
adc
jb
je
push
dec
jl
mov
std
popf
idivl
loopne
flds
mov
cmp
stos
xchg
mov
fdivr
test
rcll
shll
xor
movsl
push
mov
fidivs
cmp
outsl
sub
arpl
xor
push
jne
jmp
ret
mov
sub
ret
cmc
inc
repz
jb
add
adc
inc
lahf
xor
sbb
dec
lock
dec
push
ret
push
mov
jb
xchg
push
sub
cmpl
nop
jb
hlt
push
out
jge
mov
adc
ret
cwtl
or
iret
mov
sub
sub
adc
fistps
sti
add
mov
pop
out
aad
inc
inc
repnz
nop
lods
mov
sbb
add
shl
xor
xchg
sahf
dec
and
xchg
xor
sti
push
int
aad
test
xor
xchg
cmp
dec
mov
stos
shlb
inc
mov
fistps
popa
xor
adc
aas
dec
jae
popf
sub
loope
ret
and
add
mov
xchg
jl
mov
cmp
xor
loopne
pop
ds
test
lahf
push
dec
push
mov
adc
sti
mov
leave
test
adc
ror
stc
push
push
cmp
cmpsb
cld
sub
fisubl
mov
push
adc
mov
fsts
dec
sub
repnz
cmp
in
jecxz
test
mov
sub
jae
pop
outsl
in
xchg
inc
sbb
leave
lret
dec
jp
testb
popa
daa
add
shr
adc
jmp
hlt
loope
adc
aad
stos
xor
xor
pusha
dec
dec
dec
mov
ds
aam
mov
sub
movsl
xchg
cmc
fwait
clc
das
jo
push
in
sbb
push
jno
mov
xchg
inc
add
add
or
push
inc
xor
pop
lret
mov
push
fcmovbe
inc
sbbl
jae
ret
jg
inc
pop
add
sarl
adc
xor
imul
shlb
and
enter
sub
mov
pop
pop
adc
dec
shll
cltd
mov
roll
arpl
mov
ljmp
repnz
int
rcll
leave
mov
add
stos
mov
mov
push
andl
xor
icebp
sub
in
out
ret
cmp
pop
or
insl
push
xor
xchg
fadds
dec
xchg
out
ja
pop
xchg
push
cmp
push
mov
sar
xlat
adc
bnd
clc
mov
and
jno
pusha
pop
sub
push
fbld
add
xchg
pop
call
jmp
ret
sbb
dec
add
lods
xchg
pop
mov
insb
xchg
jl
negb
xchg
xchg
and
add
add
or
pop
sbb
inc
add
popa
cmpsl
sar
jo
loopne
xor
adc
or
cmp
sbb
or
dec
das
jp
dec
repnz
mov
popa
inc
push
loopne
jae
cld
cmovs
add
dec
cmp
movsb
test
cmc
add
xchg
push
pop
arpl
push
pop
pusha
push
cmpsl
jg
idivl
jbe
popf
sti
mov
sti
cld
or
aad
sub
sub
push
inc
rolb
int
fs
arpl
pop
sbb
xorl
pop
fwait
loopne
ret
mov
gs
les
sub
push
jl
lret
popa
xchg
mov
dec
repz
mov
sbb
jbe
iret
sub
addr16
int
insl
mov
into
aas
loope
stos
lret
mov
inc
addr16
loope
rorb
mov
fcomps
xchg
fisubrs
push
mov
repnz
inc
add
mov
mov
mov
mov
aad
jne
clc
lock
sbb
pop
sub
out
sub
xchg
loope
aad
leave
test
dec
jecxz
push
inc
lods
cmp
dec
lods
insb
xchg
into
pusha
arpl
adc
aad
sbb
mov
pop
loop
lcall
push
add
and
int3
sub
jge
in
mov
or
mov
cmp
inc
dec
ret
sbb
dec
stos
jle
adcb
das
pop
fldl
mov
jae
mov
mov
shll
jmp
mov
xchg
inc
pop
das
shlb
ret
mov
xchg
lret
dec
stos
cwtl
inc
push
mov
sub
mov
push
mov
mov
xchg
jns
lods
scas
sar
jmp
sub
pop
jo
pushf
jge
xchg
pop
xchg
in
add
mov
test
loop
js
pop
lret
pop
mov
rcrb
fstpl
mov
sub
mov
or
cs
xchg
scas
xchg
pop
leave
pop
loopne
cmp
push
pop
sbb
mov
das
push
push
loope
pop
or
xor
cmc
push
mov
or
mov
xor
andb
mov
sub
adcl
xchg
js
mov
aam
pop
jecxz
jo
adc
mov
lods
push
out
addr16
int3
test
xor
repz
mov
cmp
aad
das
pop
mov
dec
imul
mov
jecxz
pop
cmp
cmp
gs
das
jg
fidivl
clc
adc
mov
enter
jno
icebp
xor
jg
lock
outsl
rcll
lods
in
and
and
dec
stos
lods
iret
add
jp
divb
fsubrp
cmp
in
mov
ja
sub
js
fildll
mov
or
adc
or
icebp
imul
test
adc
dec
in
push
sbb
xor
mov
lcall
and
mov
out
cli
test
ficoms
dec
and
inc
adc
mov
mov
popf
sub
cmp
cwtl
dec
dec
mov
addr16
sbb
popa
into
out
inc
in
jl
insb
xor
lea
es
mov
mov
mov
mov
inc
jle
pop
gs
sub
popf
pop
imul
xchg
cmp
shrb
pop
cmp
mov
out
pop
cmpxchg
cmc
into
lahf
cmp
sub
repz
ss
daa
cmp
test
mov
push
imul
pop
hlt
nop
shr
imul
ja
fimuls
jns
imul
outsw
aas
pop
cmc
popa
je
mov
push
push
jne
jb
inc
in
fs
adc
xchg
mov
das
add
mov
lret
les
and
and
in
imul
sti
mov
aaa
pop
pop
sub
ja
push
and
test
sbb
loopne
out
push
sub
lods
jo
mov
dec
js
push
jae
ja
lea
adc
jae
sbb
xchg
jecxz
dec
dec
pop
or
iret
ja
aam
mov
cmp
jbe
cmpsl
pop
rcll
push
xor
and
add
jecxz
inc
iret
and
arpl
test
adc
in
jp
std
movsl
and
je
push
mov
cwtl
fwait
inc
fwait
ds
int
pop
mov
repz
xchg
shll
cmp
imul
clc
lea
mov
mov
xchg
inc
inc
mov
ljmp
lds
into
and
aam
sub
pop
pop
xchg
cmp
into
mov
aas
dec
loope
sbb
mov
cmpsb
insb
leave
jp
gs
loop
jae
cmpsb
fwait
pop
jo
je
sub
outsl
cmp
xor
fiaddl
aas
popf
fisubl
fstl
jno
or
js
dec
mov
les
mov
fisubl
ret
fcomps
cmp
push
sub
fcos
adc
dec
stos
data16
int3
or
mov
hlt
popa
push
pop
lds
sbb
push
ret
int
loope
jae
es
dec
movsb
mov
push
int3
pop
das
lea
push
aas
dec
or
sub
movsl
ljmp
mov
or
inc
mov
inc
sub
sub
mov
sbb
push
push
push
jb
pop
xor
ret
js
loope
pusha
cli
mov
icebp
mov
je
ljmp
cmpsl
popf
adc
mov
cwtl
out
lahf
push
pop
adc
mov
nop
jle
testl
and
push
adc
mov
xor
push
and
mov
stos
leave
stos
xor
mov
pop
jb
data16
and
dec
push
or
pop
mov
movsb
push
xor
and
or
sub
stos
in
sbbb
rcrl
in
loope
pop
std
sub
xor
mov
and
jmp
insb
push
cld
test
push
inc
negb
pop
push
lock
insl
mov
iret
xlat
ds
xchg
xlat
mov
mov
stc
nop
filds
stos
xchg
adc
cld
std
jge
dec
test
sub
push
or
in
arpl
xor
scas
jg
call
roll
mov
mov
jge
dec
enter
idiv
jns
ds
hlt
ss
cwtl
inc
and
out
stos
add
push
lret
shl
aaa
call
mov
cmc
cmc
leave
arpl
push
or
rcrb
xchg
int3
jl
inc
xor
decb
mov
rcrl
dec
jbe
jns
adc
add
sub
loope
xchg
loope
insl
xchg
clc
sub
sti
into
lods
jae
movsb
push
xor
aad
push
cmp
std
cwtl
stc
loop
push
dec
enter
stos
popa
stos
mov
ss
push
cmp
mov
pop
ficomps
cmp
fwait
xchg
dec
add
mov
add
aas
dec
movaps
or
adc
xor
push
test
ret
xor
mov
fcoms
lcall
and
std
test
notl
mov
insb
cmp
jmp
or
jns
fs
pop
popa
mov
or
dec
in
movsl
add
cmp
inc
lods
addr16
pop
or
pop
sbb
sub
add
mov
cltd
iret
clc
sbb
imul
into
and
dec
push
lods
and
push
mov
std
sbbb
or
mov
jmp
xor
add
mov
int3
sti
out
dec
push
xchg
lods
mov
es
inc
pop
lret
jno
push
and
mov
sub
xor
sbb
jp
add
xor
pusha
stos
nop
inc
jbe
sahf
orl
int
mov
mov
out
shlb
adc
cltd
mov
push
cwtl
frstor
cmp
pop
mov
ret
cmp
cmp
dec
sub
push
pop
push
test
jae
push
mov
sbb
add
insb
pop
ja
cmovb
inc
dec
adc
sub
pop
mov
test
pop
push
jno
in
jne
xor
outsb
push
daa
ljmp
inc
adc
daa
rcr
mov
mov
sbb
mov
push
xor
sub
cs
pop
cli
dec
iret
aas
leave
cmp
test
int3
call
lret
add
inc
dec
inc
test
cmp
mov
insl
mov
fmulp
popa
lcall
cmpsb
adc
mov
lret
pop
jl
mov
xchg
add
xchg
negl
out
and
test
mov
stc
inc
imul
divb
das
mull
pusha
fnsave
adcb
lock
nop
daa
mov
jns
js
cltd
fstpl
mov
hlt
lods
stc
ds
and
je
aam
push
cld
ljmp
sbb
xchg
and
icebp
xchg
mov
xor
nop
test
ja
icebp
inc
or
stc
adc
push
xchg
mov
stc
adc
insb
jb
sub
mov
or
mov
daa
dec
inc
push
lret
add
xchg
lahf
scas
ficoms
pop
lret
lods
jg
push
add
imul
mov
out
xchg
imul
sti
dec
int
adc
jnp
mov
pop
dec
mov
sub
dec
stc
xor
xchg
mov
scas
xlat
clc
stos
enter
out
iret
mov
out
jbe
lahf
dec
or
hlt
mov
movsb
arpl
ds
adc
cmp
inc
xor
out
dec
push
filds
aam
pop
mov
dec
mov
adc
mov
add
pop
push
repz
popf
xchg
mov
dec
mov
sbb
movsl
xor
cmpsl
jmp
xchg
jg
repz
cmp
sbb
je
sbb
pop
and
pusha
push
cmp
dec
xor
inc
dec
ficoml
pop
cmpsl
movsb
pop
cmpsb
adcl
mov
or
mov
iret
xchg
xor
aas
jecxz
pop
fisubrl
mov
call
add
mov
int
mov
push
shlb
scas
mov
imul
ret
imul
cs
fiadds
scas
idiv
aaa
jnp
imul
xchg
xchg
rcrb
divps
sub
lret
mov
mov
xor
mov
mov
pop
and
repnz
sub
sub
int3
sub
push
inc
dec
es
movsl
or
adc
daa
jp
mov
int3
jge
jb
adc
add
shrl
neg
sub
ret
add
cmp
xchg
cld
je
cmpsl
nop
and
les
cmp
and
sbb
cmpsl
mov
or
adc
xor
fs
or
adc
xchg
cmp
fidivs
cmp
mov
add
push
notl
popw
jbe
aad
jb
imul
push
pop
add
push
gs
pop
adc
mov
sbb
clc
scas
mov
in
es
sub
aad
jmp
out
adc
and
bound
xchg
mov
in
pop
int3
test
fstpl
cmp
orb
pop
shll
and
nop
orl
pushf
mov
inc
imul
mov
pop
mov
gs
shrl
xchg
cltd
pop
repnz
imul
xchg
cld
int
sbb
jnp
call
fbld
cltd
ss
mov
fdivl
jmp
ds
or
sub
pushf
cmp
mov
in
inc
testb
test
test
dec
arpl
call
lahf
mov
mov
int3
adc
test
data16
mov
jne
aaa
pop
repz
xchg
adc
push
ds
lock
push
ficompl
mov
sahf
out
jae
push
in
mov
div
jne
ss
pop
xchg
stos
add
cmp
clc
lret
lods
dec
inc
push
and
insb
adc
or
aad
mov
std
test
mov
stos
mov
rclb
sbb
pop
iret
add
jmp
outsb
adc
add
or
mov
jmp
ljmp
adc
pusha
repz
sbb
lds
mov
jae
xchg
in
inc
push
cmp
push
in
mov
cmp
into
or
push
out
push
sub
add
fisttpll
xor
pop
push
repnz
aaa
jns
call
cmp
shrb
pop
icebp
lahf
out
out
adc
aad
cmc
pop
insl
pop
and
pop
mov
pop
pop
jg
sbb
pop
pop
push
xchg
push
xor
xchg
cmpl
xchg
popa
ljmp
imul
sub
movsl
rclb
je
pop
leave
shlb
push
xchg
push
rcrl
lahf
insl
icebp
repz
in
add
mov
push
ljmp
in
into
mov
imul
jg
xchg
test
mov
lds
and
xchg
pop
push
adc
mov
insb
sbb
in
jge
pop
adc
cmp
test
sub
sub
inc
inc
add
and
sub
scas
jno
xlat
out
nop
ficoms
jl
adc
iret
flds
sahf
sbb
or
pop
mov
sbb
dec
ja
gs
andl
pusha
test
lock
sub
xchg
insl
inc
ja
mov
fbld
inc
fbld
dec
aaa
mov
lock
jecxz
push
fwait
int
jp
js
xchg
sub
and
or
push
pushf
mov
sbb
cmpsl
mov
xchg
clc
decl
nop
imul
andl
fwait
andb
popf
ljmp
or
push
xchg
es
mov
imulb
outsl
dec
sti
les
xchg
gs
pop
divb
loopne
ss
popa
in
es
out
fwait
dec
lret
xlat
int3
push
sub
loopne
outsb
inc
icebp
push
push
mov
aam
in
cmp
into
mov
fsubs
pop
push
and
out
outsb
jbe
push
ds
mov
add
nop
enter
cmp
out
cli
mov
mov
pop
mov
pop
enter
stos
ljmp
test
cld
inc
rcrb
aaa
push
cmp
cmpsl
pushf
xor
add
dec
rcl
dec
in
adc
js
pushf
jns
jb
in
mov
loope
and
sub
bound
xor
xchg
mov
hlt
pop
ret
addr16
out
pop
bound
mov
nop
in
cld
test
jae
mov
pop
pop
imul
xorb
cmp
daa
aas
push
ss
mov
fcompl
push
push
gs
pop
xor
xor
mov
sbb
mov
pushf
mov
fisubrl
out
inc
js
scas
sbb
or
cmp
fistpll
lahf
cmp
jle
mov
cld
pop
test
jmp
jb
cli
xchg
mov
inc
xor
enter
xor
pop
bnd
lock
sub
jae
fbstp
std
push
scas
pop
pop
jno
pop
shr
push
sbb
cmc
jmp
jo
cmp
stos
inc
push
dec
jae
and
in
ljmp
sbb
sbb
jp
inc
ljmp
mov
mov
and
push
cmpsb
jecxz
pop
add
xchg
sub
out
jo
fwait
lret
cli
lahf
jb
aam
lock
xchg
dec
sub
out
test
cmp
sub
sbb
xchg
sub
mov
outsb
jecxz
lret
insb
sbb
daa
add
mov
aaa
lods
icebp
into
cmp
dec
jnp
mov
ret
jbe
test
out
inc
scas
pop
ror
or
scas
js
push
idivb
mov
in
pop
jae
loope
addr16
cmpsb
enter
inc
insl
mov
loop
in
test
pop
jmp
push
fistpl
mov
imulb
insb
sub
push
out
mov
stc
in
rol
cmpsb
inc
pop
add
lcall
lcall
mov
jle
mov
push
test
adc
pop
fldt
loope
jg
and
leave
mov
lea
xchg
lds
or
sti
pusha
leave
stos
inc
cltd
fistpl
bound
daa
nop
test
insb
sbb
add
cs
xchg
ljmp
fcmovb
cltd
mov
jns
push
add
adc
xlat
sub
pop
dec
pop
mov
jne
iret
pusha
les
bound
push
and
aas
pop
jg
into
enter
jle
push
arpl
stc
sbb
das
out
and
mov
leave
aaa
rcr
cld
cmp
cs
arpl
scas
shlb
cmp
sbb
jge
cld
fwait
xchg
sbb
xor
int3
cmp
fldl
sub
cmp
scas
push
mov
loopne
sbb
cmc
sti
push
cmp
sbb
leave
repnz
nop
push
ss
sbb
mov
lcall
adc
jp
jle
scas
out
repz
out
cmpsb
stc
sbb
lret
pop
xchg
mov
imul
and
xor
push
jge
ds
dec
mov
pop
mov
lahf
xchg
jns
jne
mov
pop
out
jne
iret
mov
stc
dec
sbb
mov
push
adc
movsl
mov
testb
dec
jecxz
sub
mov
adc
mov
ficompl
cmpsl
shrb
mov
pop
cmc
pop
pop
iret
stc
push
frstor
xchg
daa
jecxz
int3
shrb
xor
imul
mov
lcall
mov
mov
leave
sbb
xchg
jns
fidivs
xchg
leave
adc
dec
pop
loopne
imul
testl
sub
cmp
fs
and
iret
and
xlat
mov
cmc
pop
cmp
testb
nop
testl
and
pop
sbb
cli
shl
and
cs
repz
pop
dec
cmpsl
jno
cmc
dec
lods
and
stos
pop
xchg
adc
sar
lods
imul
repz
inc
or
cmpb
xchg
sahf
and
jmp
add
repnz
in
dec
iret
lcall
iret
popa
sahf
movsl
xchg
cmc
ss
pop
out
cs
cmp
bnd
and
sahf
repnz
xchg
int3
pop
xchg
cmp
add
cmpsb
popa
mov
ds
mov
js
scas
out
xchg
into
loop
mov
out
mov
inc
add
sub
scas
jecxz
sub
movsl
jns
aaa
in
ficompl
dec
dec
mov
pusha
push
aad
sbb
je
or
or
lods
ljmp
sub
mov
jno
lret
test
lods
jmp
vmwrite
dec
push
test
or
add
rorb
xchg
jecxz
jmp
mov
ror
sti
nop
out
adc
fwait
mov
mov
pop
jle
es
jae
push
jns
imul
sti
imul
sbbb
add
mov
fsts
mov
xor
jb
aaa
sub
rol
loopne
andl
push
push
jbe
bound
mov
sbb
or
inc
and
lods
imul
lret
ret
daa
mov
push
sub
sub
ret
jb
faddl
jne
xchg
pop
clc
mov
loope
lea
jmp
int3
popf
jnp
dec
cli
fldl
nop
fisubrs
leavew
mov
adc
sub
imul
das
xchg
add
movsb
mov
cmp
mov
pop
aas
fistl
test
cmp
dec
test
xor
into
iret
bound
mov
imul
mov
mov
arpl
adc
jge
and
jbe
enter
mov
subl
cltd
inc
inc
lcall
cs
in
cli
sub
loopne
mov
shlb
pusha
and
scas
test
sbb
ja
not
cs
mov
jae
daa
scas
test
xchg
and
lcall
loope
orb
and
mov
into
jno
xor
aaa
mov
std
pop
and
inc
adc
xchg
jbe
jecxz
dec
shl
or
adc
xorl
ret
and
xchg
sbb
jle
cmpsl
movsb
roll
inc
xchg
xchg
mov
mov
pusha
jae
mov
cmp
pop
in
or
sbb
adc
dec
fistl
jno
enter
sub
mov
into
jb
xchg
add
pop
insl
loope
push
test
jae
inc
push
jns
std
and
and
cmpsl
in
sbb
dec
in
mov
jo
les
cmpsl
add
fdivrl
pushf
jmp
pop
push
xchg
mov
dec
lret
add
push
sbb
jb
xchg
pushf
call
fwait
xor
sbb
je
sbb
cld
mov
push
dec
sub
push
sbb
xchg
cmp
mov
cs
lcall
sti
jge
adc
pop
pop
ret
test
xchg
icebp
add
imul
les
stos
jbe
insb
dec
iret
mov
mov
movsb
pop
dec
fdivrs
mov
pop
dec
sub
scas
jge
insl
mov
rorb
pop
mov
das
mov
movsb
sbb
or
cmc
jno
sbb
rcrl
sub
fsts
xchg
rolb
pop
mov
push
jp
ret
or
fstl
adc
cmp
leave
sahf
mov
adc
xchg
mov
mov
outsb
imul
out
xlat
movsl
mov
mov
mov
scas
lods
lock
inc
xor
jmp
sti
loop
cmp
insl
inc
mov
sti
cmpsl
add
dec
xor
mov
adc
pop
fistl
sti
sbb
outsl
pop
pushf
jmp
sbb
test
jb
bound
loope
jbe
test
xchg
pop
or
ret
sbb
les
addr16
cmp
xchg
cltd
lock
sbb
sub
cmp
icebp
mov
cmp
or
fwait
stos
out
sub
push
rcrb
and
xchg
or
out
inc
std
mov
fdivrs
mov
ret
sbb
mov
loope
mov
inc
pop
xchg
lcall
lds
sahf
imul
xchg
test
repnz
jns
inc
in
mov
ret
das
push
mov
addr16
mov
ljmp
xchg
xchg
hlt
cmp
je
daa
mov
cmp
gs
or
call
add
or
add
sti
jbe
in
test
aam
mov
add
xor
fcoml
out
cmp
add
jge
test
inc
int
ds
pop
test
mov
push
mov
inc
add
in
or
mov
mov
outsl
sbb
inc
push
push
les
cmc
out
mov
dec
dec
add
mov
test
xchg
popa
jns
out
cwtl
mov
inc
dec
test
je
push
mov
add
mov
push
inc
or
jne
pop
inc
es
mov
pop
ss
jnp
xlat
mov
loope
psubsb
mov
lcall
incb
cmc
fwait
xlat
push
ret
jmp
sub
sarb
test
xchg
adc
lock
jb
or
add
jecxz
fsub
push
lret
imul
lds
int3
jge
xchg
fcomip
jae
jne
adc
xchg
mov
les
and
jecxz
movsl
shll
bnd
popf
inc
mov
add
cli
inc
adc
push
gs
rorb
ss
loop
or
shrb
insb
int3
int
subb
mov
xchg
mov
movsb
mov
mov
sub
inc
jae
push
pop
jecxz
enter
push
mov
decb
std
mov
addr16
push
jle
add
pop
stos
xor
jno
sub
je
pop
push
mov
icebp
ret
rcrl
mov
cmp
and
push
push
add
sub
jmp
ret
int3
out
xlat
test
loopne
and
sub
mov
jl
jns
mov
mov
loop
push
ljmp
aam
add
push
idiv
mov
adc
test
dec
shl
ficoms
scas
jae
inc
cmp
mov
sub
jae
xor
cmp
ljmp
mov
das
mov
lea
or
int3
sub
repnz
mov
cli
jo
aam
xorb
xor
push
xchg
and
or
lcall
mov
jns
mov
je
out
dec
iret
cmp
adc
pop
fldenv
cmp
or
pop
lods
xor
mov
mov
out
and
in
mov
pop
xor
sbb
daa
int
fwait
mov
flds
pop
aaa
out
cltd
xor
aam
movsb
adc
mov
adc
dec
stos
in
adc
faddp
ds
inc
xor
inc
xor
imul
fistpl
mov
test
test
int
jnp
push
loopne
lods
mov
push
cmp
mov
pusha
outsl
out
sbb
out
js
xor
xchg
xlat
mov
pop
dec
enter
push
scas
sub
mov
push
jge
mov
pop
inc
test
cwtl
leave
sbb
cmpb
jmp
jns
cmpsl
cmp
cmpsb
cltd
loope
fwait
insb
gs
fnstcw
jb
loop
mov
scas
les
mov
repnz
adc
loop
in
sub
inc
jne
mov
and
cmpsl
jnp
imul
arpl
push
lcall
lahf
imul
iret
sbb
inc
inc
mov
out
movsb
lods
mov
lahf
mov
cmpsb
lds
mov
mov
mov
push
xchg
insl
pop
es
dec
in
sub
jae
ss
stos
lods
aad
inc
cmpsl
imulb
jg
lods
shl
dec
cli
push
xchg
xchg
lret
outsl
adc
sub
sbb
xor
aad
jno
mov
mov
sub
inc
repz
arpl
xchg
inc
jecxz
in
iret
hlt
push
pop
out
sbb
mov
scas
push
inc
je
dec
insl
jb
or
cmp
push
imul
aam
cmp
mov
inc
das
push
sub
mov
in
push
pop
xor
mov
loopne
fistpll
sub
bound
jae,pn
sub
mov
and
mov
sub
fcoms
pop
popa
push
lahf
and
fcmovnu
cli
jns
cmp
cld
repnz
test
fstpl
jbe
xchg
pop
xchg
je
and
shrl
lret
mov
push
repnz
clc
in
arpl
rcl
sub
push
in
push
xor
fdivrp
pop
xor
inc
xor
xchg
jns
pop
outsb
mov
dec
sub
xor
imul
arpl
fbstp
push
aaa
out
mov
daa
pop
mov
add
stos
gs
pop
mov
push
sub
in
outsb
sub
fsub
imul
fistl
pushf
xchg
pop
jmp
xor
dec
jne
inc
xor
and
lcall
jae
test
and
scas
sub
adc
add
aaa
inc
call
push
sbb
push
inc
jle
cwtl
cwtl
xchg
or
aad
jge
push
loope
jmp
push
cmp
popf
push
fsubrs
scas
test
in
push
adc
jbe
mov
or
xchg
cltd
pop
testb
out
dec
xor
call
adc
xlat
loop
cli
icebp
out
out
cmpsl
cwtl
cmp
movsl
fdivp
rorl
inc
mov
and
mov
dec
out
pop
je
enter
pop
lods
cld
mov
inc
cli
lret
in
cmp
hlt
or
dec
fdivrs
lcall
pop
adc
mov
jae
mov
dec
cltd
xor
mov
lret
sub
mov
or
test
mov
lahf
es
jle
push
xor
mov
ljmp
mov
lods
jnp
je
data16
repnz
mov
jle
popf
je
ficoml
xor
pop
adc
sbbb
lahf
imul
subl
cmc
ficomps
es
lcall
in
xlat
test
push
mov
aam
lret
xchg
out
mov
push
jno
push
mov
cmp
loop
lea
pop
lods
dec
movsb
adc
shll
xchg
sub
popa
pop
std
mov
test
mov
das
dec
aam
cs
xor
pop
das
ljmp
mov
inc
mov
mov
idivb
add
arpl
es
mov
out
lods
jno
mov
outsl
cld
and
shr
divb
jae
cmp
aam
cmp
jno
lret
lea
push
pop
ja
and
inc
out
and
loope
mov
xor
cvtpi2ps
mov
or
jecxz
inc
add
mov
cmp
cltd
iret
bound
pop
cmp
xchg
out
loope
lret
cwtl
mov
mov
loop
push
arpl
push
imull
bound
cmp
sahf
adc
mov
loopne
clc
or
mov
and
rcl
outsb
push
jno
xor
mov
push
mov
push
mov
pop
mov
pop
imul
mov
jmp
andl
std
inc
or
gs
mov
mov
push
inc
test
ja
in
jle
sti
shl
cld
in
jl
xchg
pusha
add
cmp
punpckhwd
scas
mov
es
cmp
push
popa
push
sbb
scas
hlt
out
ljmp
push
mov
inc
sub
jmp
cltd
outsb
adc
dec
inc
inc
aam
sbb
mov
and
lock
sbbl
addl
in
mov
mov
fucom
sub
mov
in
stc
sbbl
xchg
push
das
enter
jne
pop
adc
hlt
jns
cmp
clc
xorl
mov
adcl
push
xor
addl
pop
int3
dec
push
in
adc
xchg
out
cmpsl
push
jno
lods
mov
repnz
jmp
scas
fsubrs
jp
repnz
daa
lods
shlb
xor
jmp
add
aas
movsb
ss
and
call
std
fucom
adc
cs
mov
sti
shll
sbb
movsl
daa
and
sbb
cltd
js
outsb
adc
aam
rclb
xor
add
jl
or
xor
dec
jge
mov
xchg
cltd
push
sub
gs
push
int
pop
dec
xchg
sbb
mov
and
push
adc
xor
lahf
test
jmp
aam
ds
adc
data16
cmp
test
dec
jecxz
mov
xor
lret
enter
and
bound
lds
inc
out
int3
in
xor
mov
inc
xchg
inc
jbe
cmc
out
dec
push
rclw
shll
stos
mov
and
shrl
test
jb
js
scas
cmp
out
stos
popa
xlat
mov
cmp
jno
sahf
imul
mov
jle
jno
or
int
jae
push
push
mov
mov
push
xchg
pop
push
test
and
aad
cmp
adc
repnz
inc
loopne
out
mov
add
out
decb
mov
shl
repnz
pop
dec
mov
xchg
out
cltd
movsl
dec
ljmp
push
inc
pop
xor
xor
in
ficomps
and
and
mov
mov
push
ja
shlb
jbe
enter
push
popa
xchg
or
incb
lret
addr16
dec
jne
arpl
sbb
mov
mov
xorb
rsqrtss
mov
in
push
add
scas
rcrb
mov
sub
repz
ret
lahf
dec
sub
lret
fcomip
mov
push
nop
shlb
sub
insl
push
adc
mov
fsts
inc
inc
dec
mov
cmp
aaa
insl
bound
sub
lahf
push
out
xor
add
jbe
es
ja
negl
mull
push
in
mov
inc
movsb
loopne
jno
sub
sarl
aam
fs
inc
cmp
pop
add
insl
enter
pop
filds
jo
orb
push
insl
cmc
pop
out
clts
fcompl
clc
pop
iret
aam
mov
fistps
xor
gs
out
adc
adc
gs
cld
pop
pusha
sub
ret
fcmovu
faddp
lds
adc
daa
ret
test
es
into
inc
pusha
inc
loopne
scas
pop
jnp
lods
bound
push
rcr
mov
icebp
lret
inc
hlt
xlat
aas
xchg
hlt
lahf
jp
sub
mov
pop
popf
test
jge
movsl
lods
adc
sbbb
inc
adc
movsb
call
cmc
mov
neg
xor
in
sbbl
int
jecxz
sbb
fists
adc
or
jg
test
and
imull
negb
aaa
push
mov
adc
pop
loop
pop
out
rcrb
push
mov
pop
and
mulb
bnd
mov
sti
inc
xchg
std
cli
mov
adc
shlb
and
push
xchg
push
sbb
cmp
js
repz
mov
aaa
cmp
pop
mov
jecxz
jo
mov
ds
pushf
fdivl
adc
les
insl
inc
dec
lcall
rol
mov
mov
lods
mov
push
sub
int3
sub
xchg
outsb
mov
repnz
in
xchg
fwait
daa
xor
and
inc
insl
xchg
pusha
inc
jns
loopne
outsb
rorb
sbb
mov
xor
jne
or
ret
out
jp
cld
inc
sbb
mov
add
push
sarl
push
fwait
cmp
dec
cmp
shrl
aad
dec
movl
frstor
mov
mov
xchg
push
test
insl
fs
adc
xchg
add
loop
xchg
repnz
or
icebp
rcrb
ljmp
inc
test
fcomip
dec
push
adc
and
inc
or
xor
push
fisttpll
int
or
daa
mov
dec
rcll
xchg
jg
mov
gs
pop
call
std
addr16
push
icebp
jnp
movsb
sub
fcmovnbe
stos
ja
xchg
jmp
stos
negl
data16
icebp
mov
add
xchg
rclb
sbb
scas
clc
add
push
add
or
mov
xchg
pop
push
mov
xchg
xorb
dec
nop
fstl
sbb
adc
push
lods
cmc
lret
sub
insb
dec
mov
nop
or
mov
mov
mov
sarl
push
int3
mov
mov
jnp
xlat
xorb
in
sbb
add
adc
outsl
in
jae
and
addr16
mov
dec
mov
mov
aaa
es
repnz
pop
mov
xor
vpslld
inc
mov
mov
sub
out
dec
push
push
int
jg
sbb
and
and
fisubs
xchg
lahf
mov
jae
cmp
cmpsl
push
xor
cmp
lods
xchg
sbb
shl
es
pushf
xor
outsl
xchg
stos
fmull
mov
mov
and
mov
inc
dec
mov
pop
stos
and
ljmp
pop
cltd
stos
dec
pop
std
into
add
icebp
dec
adc
push
imulb
das
mov
inc
aaa
mov
jmp
iret
sub
gs
aas
jle
fdivr
std
mov
lock
pop
subb
out
jge
dec
jl
pop
iret
push
rcl
daa
xor
ret
adc
mov
jmp
jne
shll
scas
test
pop
mov
mov
leave
into
scas
ret
mov
jp
repnz
dec
not
int
aad
jbe
or
cmp
das
dec
lret
jo
cmp
inc
dec
dec
cmpb
je
cltd
pop
sarl
xchg
sub
rol
or
xchg
iret
int
std
add
pushl
xor
out
mov
mov
sub
dec
xchg
push
sbb
test
and
bound
mov
sub
mov
jl
mov
push
gs
insl
lret
fs
scas
pop
mov
push
daa
dec
pushf
or
ja
jo
xor
notb
mov
fistps
stos
js
push
adcl
jg
jp
dec
negl
faddp
daa
adc
fmull
rolb
fnclex
or
lcall
into
pop
lret
out
aam
jp
pushf
sub
lret
lcall
gs
xor
sbb
les
inc
mov
pop
mov
in
flds
out
fistps
push
jmp
movb
fisubrs
jnp
imul
or
iret
and
pop
je
sbb
push
bound
jnp
js
aam
dec
sarb
jbe
or
ljmp
jge
fisubl
mov
std
movsb
rol
sbb
add
sub
mov
enter
mov
pop
push
mov
into
sbb
ja
gs
adc
lock
lock
jge
cmp
inc
divb
in
daa
mov
cltd
xor
dec
cs
hlt
jecxz
pop
mov
das
pop
mov
in
cmpsb
ljmp
fyl2xp1
sbb
pop
out
insb
inc
pop
into
mov
push
cmc
incb
pop
jo
sub
push
movsw
fdivrs
push
insb
out
mov
and
roll
mov
xchg
lret
sbb
jnp
es
cmp
fsubs
call
inc
push
mov
jge
inc
jle
jnp
inc
ret
lea
ficomps
mov
ljmp
add
sti
add
mov
movb
ret
popa
inc
lock
out
or
ror
das
push
xchg
jno
sbb
adc
push
lcall
sbbl
orl
mov
orl
sbb
jmp
int3
jns
aam
dec
and
mov
fsts
xchg
rorb
fadd
mov
andb
push
out
xchg
test
pushf
orl
inc
int
pop
scas
or
mov
out
in
lods
movb
or
sahf
je
xlat
pop
rol
negl
popa
inc
daa
dec
jb
adc
frstor
push
fisttpl
repz
sbb
xchg
loop
sbb
leave
lods
push
inc
jl
mov
mov
int
mov
pop
movsb
xchg
cs
sub
sbb
dec
xor
push
xlat
enter
xor
push
sti
xchg
adc
leave
push
inc
jns
xchg
fnsave
lcall
aam
mov
int
inc
jg
lret
cmp
or
mov
and
push
or
push
and
push
les
cmpsl
adc
xorl
mov
arpl
icebp
jno
xor
jb
fsubr
sub
cmp
push
jecxz
dec
dec
imul
test
out
dec
mov
leave
pop
dec
outsl
rclb
xchg
push
insb
ds
das
shr
jp
ret
adc
dec
pop
cmp
out
pop
shrl
fists
cmpsl
js
or
pop
out
insl
pop
or
in
in
int
lahf
ljmp
repnz
leave
or
jecxz
sub
cmp
jns
mov
xchg
jl
jae
pop
cltd
or
xlat
pop
clc
in
adc
fs
rcrl
xchg
adc
jnp
je
pop
and
lds
inc
pop
jl
sub
cld
or
or
add
inc
fdivr
aaa
pop
push
negb
mov
pusha
icebp
inc
hlt
in
jecxz
jbe
mov
push
lcall
mov
mov
adcl
push
movl
lahf
jle
scas
nop
testl
mov
pop
inc
pop
cmp
pop
faddp
fldenv
jl
insl
pop
push
cmp
adc
push
jg
f2xm1
in
aad
and
imul
push
stos
ds
mov
repz
xor
fwait
mov
add
icebp
and
dec
inc
or
xor
fidivs
pop
adc
arpl
xchg
mov
xchg
pop
imul
cmpsb
or
shll
arpl
xor
shrl
inc
movsl
lret
addb
inc
push
lcall
dec
mov
xchg
and
loopne
data16
pop
dec
push
dec
arpl
jmp
int
fwait
pop
jp
cmp
popa
sahf
or
mov
rcll
inc
jbe
mov
push
xchg
jns
cmp
lret
sahf
fistpl
xchg
rcrl
stc
ss
out
sbb
pop
dec
inc
jo
jb
xchg
orb
mov
adc
das
cmpsl
jl
or
adc
adc
pop
dec
mov
shl
in
filds
add
aad
repz
aaa
iret
push
jle
add
jle
cld
popa
fildl
loop
mov
xchg
push
lods
mov
adcb
ret
sbb
leave
fld
jb
lods
dec
lods
nop
stc
int
push
xchg
push
xchg
loop
fcoms
movsl
xlat
mov
xchg
data16
cmp
fsubr
insl
imul
mov
in
mov
push
out
stos
push
dec
mov
add
xchg
cmpsl
imul
xor
pop
ds
mov
movsl
insb
pop
popa
jne
inc
xchg
pusha
xchg
addb
lret
cs
dec
imul
mov
ja
rolb
jnp
bound
inc
jnp
dec
fcoms
fmuls
xchg
cmpsb
sub
cmp
or
push
in
sbb
jb
inc
mov
or
cli
scas
or
dec
in
mov
ret
data16
fwait
xor
jmp
xchg
xchg
add
adc
in
sbb
push
cltd
aaa
in
and
adc
adc
push
inc
pop
insl
cmpsb
repz
test
fisubl
xor
cmpsb
cmp
adc
and
mov
adc
mov
repz
stc
imul
push
in
push
adc
out
xchg
cltd
clc
pushf
mov
xchg
into
enter
xorb
adc
adc
pop
mov
adc
mov
push
inc
pop
orb
xchg
jns
jb
mov
cmp
push
shll
test
mov
adc
push
mov
lea
cmp
inc
push
mov
mov
jbe
pop
addb
inc
pop
mov
push
hlt
inc
mov
aam
icebp
cmp
mov
roll
push
xchg
mov
in
xor
pop
sbb
ret
jb
and
data16
pop
inc
popf
ret
outsb
push
adc
pop
subps
mov
flds
hlt
enter
and
push
adcl
divl
iret
mov
lods
xor
aas
insl
outsl
mov
sub
pop
mov
push
shlb
jbe
in
div
add
xchg
adc
fbld
sbb
xchg
adc
jno
ja
sarb
jne
jnp
jbe
cmp
and
lret
in
mov
test
pop
sub
mov
mov
test
ficoms
rclb
sbb
mov
dec
push
cwtl
ficoml
arpl
mov
mov
addr16
nop
jb
pop
into
fidivrl
std
pop
push
shll
test
or
xor
mov
push
mov
sti
jnp
imul
add
outsb
sub
enter
and
dec
cmpsl
orb
cmp
push
cmpsl
pop
leave
pop
in
pop
jp
dec
mov
sbbb
sbb
into
mov
fwait
sub
dec
xchg
cmp
xchg
scas
jmp
inc
js
sub
js
mov
mov
imul
imul
or
mov
ja
xchg
dec
popf
xchg
sbb
ret
add
shll
mov
mov
add
inc
xchg
inc
jmp
cmp
add
xchg
imul
scas
sahf
ja
insl
dec
cmp
loop
cmp
mov
pop
out
xchg
lds
mov
jbe
or
outsl
test
jmp
inc
pop
pop
jns
mov
cld
int
in
xchg
ds
adc
cmc
push
and
cmp
jno
jae
add
inc
test
js
xchg
or
in
mov
pusha
jle
insl
cltd
aad
stos
mov
dec
es
loop
leave
dec
mov
pop
aaa
sbb
pop
cmp
mov
rclb
outsl
sub
into
shlb
mov
popa
adc
pop
jg
xor
and
push
sub
cld
fcom
outsl
ja
loope
arpl
decb
ljmp
andb
cmpsb
movsb
push
mov
movsl
xor
mov
xchg
or
test
fsubr
jge
push
mov
jecxz
adc
fistpll
dec
clc
andb
loopne
mov
fucomi
xchg
mov
dec
sub
sbb
pop
shlb
cwtl
into
hlt
sbb
mov
mov
movsl
pop
pop
pop
outsb
or
addb
fisttpll
js
pop
ss
cmpl
xor
push
roll
mov
test
and
mov
sub
scas
insl
inc
js
mov
je
sbb
or
imul
insb
dec
divl
fstpl
pop
and
xchg
push
add
add
jmp
jns
in
dec
test
dec
dec
cmc
test
jnp
jbe
popf
addr16
xchg
jo
mov
add
sub
cmp
jb
addr16
mov
hlt
push
jbe
enter
mov
cwtl
inc
addr16
ljmp
shll
in
ja
mov
adc
sub
mov
sub
xchg
insb
xor
pop
mov
repnz
xorl
mov
insl
mov
and
aas
mov
inc
sahf
loopne
test
pop
push
xchg
or
daa
int
inc
inc
or
test
mov
nop
jmp
add
andl
mov
sbb
cmp
xchg
mov
inc
push
pop
inc
cld
les
loop
int
pusha
cld
add
sbb
mov
add
icebp
mov
cmpsb
addb
sub
jmp
loopne
cltd
push
loop
rorl
insl
ljmp
mov
mov
or
jg
shlb
in
outsl
xor
in
sarb
andl
xchg
mov
and
pop
movsb
iret
fs
addl
insl
sbb
pop
loope
fisttpll
dec
pusha
or
sbb
popf
push
fdivrl
fcmovnu
inc
into
cmpl
repz
sub
lret
add
or
lcall
or
add
adc
adc
push
aad
jecxz
mov
jns
je
lret
bound
imul
sub
dec
lret
cltd
mov
in
inc
or
lahf
pop
loop
cmp
and
and
clc
sbb
jg
mov
out
dec
nop
js
push
push
inc
mov
mov
cmpsl
sub
ds
leave
cwtl
mov
rcrb
jne
jp
mov
jbe
sub
xchg
aad
fistl
cli
loope
jns
push
enter
std
out
mov
popf
push
cmp
pop
cwtl
dec
lahf
dec
push
cltd
out
jbe
jge
adc
jns
call
push
mov
out
dec
stc
ds
out
int
cld
sbb
loop
cmpsb
add
lret
mov
jg
pop
mov
sarb
mov
jle
cmpsb
fstpt
out
xchg
pushf
insl
pop
sbb
mov
push
adc
pop
int3
jmp
pop
and
inc
sbb
jne
pop
xchg
pop
mov
add
cmpsl
into
xchg
sahf
push
btc
cmpsb
jmp
jl
xor
fidivrs
mov
js
or
add
push
fwait
inc
push
scas
xchg
outsb
sbb
clc
mov
daa
jae
push
mov
ret
mov
js
incl
shl
add
imul
mov
test
add
mov
pushf
adc
and
fistpll
mov
adc
jno
xor
sub
or
lcall
aad
xchg
xor
and
fwait
lcall
jo
and
inc
sbb
cmp
push
inc
pop
add
insl
mov
or
std
xor
jae
jo
ret
cli
imul
fstps
adc
hlt
es
push
push
pop
outsb
ud1
lods
cmp
addr16
out
repnz
or
movsl
jg
mov
xchg
repnz
or
pop
or
shl
jg
xlat
adc
sahf
jmp
insb
mov
dec
and
mov
xchg
rorl
xchg
bound
adcb
push
lea
shrl
fisubl
outsl
lods
xor
add
std
in
enter
sbb
mov
cs
fcompl
inc
fdivrl
or
pop
mov
inc
jg
xor
add
sub
fs
es
sbb
mov
or
incl
xchg
shlb
add
mov
jae
daa
mov
repnz
sub
pop
xor
xchg
cmc
idiv
inc
xchg
push
orb
arpl
sub
xor
sub
loope
jno
jbe
popf
lahf
pop
xor
test
int3
stos
enter
mulb
imul
mov
mov
and
push
in
mov
sub
jg
jb
addr16
mov
mov
sub
adc
adc
fs
lods
insb
inc
add
cmp
xchg
lea
jb
out
inc
in
cmp
pop
fsub
orb
loopne
jno
in
popa
mov
notb
sahf
inc
push
pop
adc
outsb
rcr
or
push
stos
push
stc
mov
xchg
add
pop
xchg
xchg
insl
movsb
sbb
daa
rorb
xor
push
ret
ljmp
cld
add
roll
test
push
dec
aaa
and
imul
movsb
lahf
mov
aaa
jl
mov
mov
cmp
xor
adc
xor
or
jnp
lret
adc
dec
and
subb
mov
xchg
push
jmp
lcall
add
cld
or
push
out
clc
mov
test
das
jge
call
cmpsb
lods
ret
insl
lods
in
xchg
fildl
xor
addb
movsl
push
xchg
dec
nop
ss
inc
jl
push
adc
pop
mov
lds
decb
lret
xor
pop
scas
pop
sbb
ss
sti
jb
cld
adc
mov
loope
out
and
jae
fwait
inc
xchg
pop
out
jno
sbb
jbe
push
popa
cwtl
mov
in
in
add
aaa
sub
sub
or
outsb
mov
repnz
mov
mov
pop
fnstsw
mov
dec
pop
sub
jb
sti
in
cmc
mov
repz
push
leave
sbb
xchg
dec
nop
out
imul
and
cmc
jbe
jb
lret
push
mov
dec
mov
ret
dec
hlt
push
mov
pop
push
xorl
sbb
jl
xchg
movsb
or
jmp
jmp
enter
arpl
addr16
add
repnz
dec
test
rcll
fdivs
out
pop
push
xchg
jl
and
loopne
cmp
adc
fbstp
pusha
fst
arpl
cmp
inc
xchg
lcall
mov
jae
jg
sub
mov
imul
dec
in
das
scas
adc
into
push
into
cmp
cmp
mov
mov
imul
notl
int3
jle
ret
or
mov
xor
xchg
lret
xor
jno
loop
fldcw
mov
mov
stc
lret
cmpsb
fsubs
adc
jle
mov
loope
mov
mov
push
jno,pt
cmpsl
push
push
cmp
jae
sti
or
cli
lcall
jmp
dec
inc
in
lods
scas
sti
mov
jno
stos
jns
inc
push
loopne
mov
and
push
mov
pop
scas
stos
and
and
pushl
iret
arpl
popf
lahf
popa
iret
jns
fisubs
and
in
int
test
cmp
stos
scas
divl
add
pop
push
lock
mov
shlb
sbb
iret
in
mov
dec
ret
adc
ljmp
cli
jg
in
loopne
push
outsb
xor
int3
inc
iret
jmp
pop
les
pop
roll
cld
or
dec
push
daa
cmp
jl
xor
cltd
test
sbb
or
dec
insb
mov
pop
jnp
adc
in
adc
icebp
sarb
scas
imul
roll
and
jge
sub
add
fsubp
adc
fstp
repnz
xsave
xor
mov
push
inc
mov
insb
mov
movsl
jmp
addl
mov
dec
shlb
shlb
xchg
inc
sbb
mov
lcall
add
fmull
pop
arpl
cwtl
repnz
into
pop
sbb
daa
xchg
stc
mov
xor
shlb
sub
lods
orl
push
mov
xorl
lea
jle
pop
into
shll
or
inc
add
ret
leave
pop
bound
iret
and
mov
inc
mov
and
xor
lret
sub
dec
sbb
add
pop
xor
or
cmp
orl
or
mov
into
js
mov
pop
rol
inc
xchg
inc
popa
js
mov
call
bound
fdivl
xchg
sbb
pop
stos
push
std
adc
andl
mov
mov
lret
xchg
stos
cmp
push
punpckldq
jle
mov
aam
push
xchg
sub
arpl
and
rcrl
cmp
mov
cmp
inc
stos
mov
je
js
add
aaa
das
imul
ds
repnz
pop
adc
sarb
mov
fistl
lcall
jne
mov
test
jo
js
push
mov
inc
cmp
push
cmpsl
stos
dec
not
orb
add
pop
push
js
in
idivb
nop
ss
pop
mov
fxch
ja
das
add
popl
incl
add
ret
fisubl
mov
adc
push
cmp
mov
addr16
mov
adc
pop
jbe
and
jg
mov
sbb
jge
mov
jg
pop
lret
stos
shlb
in
bound
dec
fs
aas
gs
pop
insl
mov
js
mov
test
scas
dec
int3
in
test
cs
dec
cmp
test
add
dec
loop
xor
loop
decb
cltd
sbb
xchg
cld
xor
push
call
dec
les
ss
add
mov
es
das
fisttps
mov
jns
rcrl
cli
inc
sub
mov
lea
sarl
sub
sub
jle
cmp
xor
leave
mov
js
cld
call
es
data16
out
cmp
lret
out
mov
mov
cmp
xchg
push
sbb
add
cld
loop
cld
inc
inc
mov
lods
sbb
test
cmp
inc
in
push
xchg
out
sbb
push
push
mov
sahf
lret
insl
fwait
add
and
lods
enter
test
clc
les
push
adc
sti
iret
pop
std
stc
bound
adc
push
leave
lods
xor
into
pop
push
aam
xor
popf
adc
push
popa
push
fdivl
dec
outsl
in
pop
sub
adc
mov
push
jge
add
push
mov
repz
add
mov
push
iret
in
std
popf
in
movsb
xchg
or
int
and
cmc
imul
test
cwtl
and
fmuls
into
lea
jb,pt
mov
push
fbld
or
call
and
jp
in
xor
repz
pop
and
mov
inc
iret
iret
js
pop
cwtl
insl
mov
jb
xchg
mov
pop
inc
iret
jge
push
push
sahf
add
loopne
pushf
pop
fwait
push
test
popa
mov
xchg
je
inc
test
aad
aas
popf
test
xorl
xor
fcoms
nop
add
test
push
add
movl
test
mov
insl
mov
xor
stc
cmp
sahf
inc
cmpsb
icebp
add
jge
dec
dec
dec
inc
lcall
lock
inc
xor
mov
decl
insl
cmp
mov
and
sbb
sbb
lret
pushf
dec
xor
push
fiaddl
outsl
aaa
aaa
push
mov
sub
pop
inc
movsb
repnz
dec
push
das
inc
sub
pusha
pop
mov
inc
dec
pop
xchg
lods
int
jp
hlt
mov
repnz
sub
jbe
push
shlb
sahf
leave
add
dec
xlat
inc
nop
pop
push
imul
xor
ljmp
pop
movl
fst
ljmp
sbb
aam
ja
in
xchg
int
xor
out
sbb
cs
xorb
hlt
dec
aas
lea
lea
mov
rolb
jmp
repz
jae
push
xchg
ljmp
stc
dec
xchg
rcrb
jge
adc
push
pop
push
fldt
sub
adc
cmpsl
xchg
or
icebp
testl
lret
frstor
xchg
mov
sti
inc
xchg
lahf
in
pop
enter
pop
lea
shrl
push
iret
xor
andb
sahf
jnp
cld
stos
pop
outsb
arpl
lods
xchg
add
fdivs
add
mov
mov
fistpl
mov
xchg
pop
sahf
out
std
jnp
lret
mov
mov
xchg
adc
push
mov
mov
popa
xchg
push
imul
sbb
add
cs
and
push
inc
inc
mov
xchg
and
add
pop
loop
imulb
sti
std
or
icebp
add
dec
cmp
mov
aam
mov
jp
repz
stos
cltd
mov
bound
xchg
hlt
mov
lcall
xlat
pop
mov
jne
jmp
sbb
cmp
and
mov
mov
sub
loopne
sbb
mov
shlb
inc
push
or
cwtl
xor
jmp
pusha
push
aad
fmuls
sbb
sbb
dec
out
in
mov
pop
int3
ss
sbb
scas
pop
sarb
jne
pop
cmc
cmp
or
les
cmp
or
dec
test
inc
jnp
pop
outsb
xor
daa
idivb
stc
jns
les
fdivrl
int3
sbb
iret
cmpsb
addr16
fadds
movsb
fcoml
stos
movsb
add
into
dec
lds
sti
or
jmp
lods
and
cmc
sbb
pop
mov
push
cmp
insb
sbb
xchg
push
test
jne
mov
scas
pop
mov
push
jg
pop
gs
xchg
imul
and
inc
jae
lea
pop
ljmp
mov
iret
mov
dec
dec
add
mov
mov
popa
leave
hlt
lcall
dec
ret
ljmp
lret
mov
ret
or
add
push
inc
shrl
ret
test
in
dec
jbe
popa
mov
andb
xor
ja
inc
std
fcompl
mov
adc
notl
sub
cmpsl
pusha
push
addr16
cli
xchg
add
out
ss
mov
and
mov
out
insb
scas
or
ljmp
mov
mov
aad
mov
cld
push
mov
clc
scas
lods
dec
inc
shlb
xor
push
pop
mov
in
fcompl
pop
filds
xchg
cmpsl
or
sbb
push
cwtl
lods
ljmp
cli
insb
ja
les
xchg
in
cmpb
addb
outsl
orl
or
imul
push
leave
add
sub
dec
lcall
lahf
out
xor
add
iret
and
mov
dec
cli
mov
fsubr
add
pop
out
outsl
fnstenv
in
mov
mov
push
test
pushf
inc
bound
jb
scas
pop
mov
xchg
sbb
outsb
cmp
outsl
test
jne
and
and
fcmovne
rcl
lret
int3
jo
xor
push
aas
lds
cmc
mov
cli
arpl
mov
hlt
pextrw
insb
add
cmc
ss
mov
xchg
sbb
scas
xchg
lods
add
push
mov
popf
das
and
xchg
mov
mov
lcall
sbb
shrb
js
ljmp
js
je
cld
dec
lret
pop
xor
mov
sub
jg
add
imul
and
daa
mov
fstpl
mov
mov
push
lods
dec
sbb
adc
ds
mov
rcll
out
lret
and
dec
cmp
daa
push
pop
ret
push
repz
popa
sub
mov
push
cmp
nop
pusha
ds
aas
mov
jmp
outsl
push
movsb
or
pushf
icebp
out
dec
sti
outsl
jne
dec
into
cmp
sub
outsb
sbb
mov
xchg
or
mov
inc
or
xlat
into
notl
adc
and
cmpsl
stc
iret
std
loopne
popf
sbb
dec
movsl
loop
fstl
aad
insl
cli
xorl
jmp
jo
sub
jns
xchg
and
jecxz
push
out
lods
fisubl
call
nop
cmp
cmc
xchg
mov
testl
sti
vcvtsd2si
jno
mov
xchg
stc
out
aad
jb
loope
gs
mov
mov
mov
adc
pop
xor
pop
pop
add
xor
lret
xchg
inc
push
mov
xor
int3
push
popa
sbb
cmpsb
pop
dec
sbb
xchg
sub
cmp
cld
adc
mov
cltd
mov
xchg
movsb
aad
imul
mov
sbb
das
xlat
cmpsl
push
pusha
pop
xchg
cmpsb
cmp
push
aas
add
arpl
fisttpl
inc
add
mov
imul
push
add
xchg
xor
rcll
adc
shlb
in
or
mov
cmp
fcom
mov
testb
std
pop
insb
inc
jo
repz
dec
cmp
div
icebp
adc
mov
jg
and
imulb
mov
pop
adc
icebp
xor
in
add
dec
mov
out
inc
mov
stos
mov
es
adc
popf
into
out
jle
popf
fs
aad
shrb
testb
jl
xchg
pop
inc
scas
mull
jl
mov
and
xor
call
xorl
jnp
test
inc
pop
aad
jb
push
pusha
dec
fiaddl
sub
or
out
lock
inc
test
xchg
cltd
aam
repnz
pop
loop
jns
clc
movsl
ss
aaa
push
shlb
inc
and
fld
imul
les
int
cmpsl
iret
shll
jno
repnz
sub
mov
jo
jp
sub
enter
fdivs
stos
add
adc
ret
mov
inc
orl
jecxz
outsb
rolb
adc
dec
ja
mov
lock
data16
data16
jl
test
sub
arpl
out
idiv
je
adc
ds
mov
lret
xchg
cmp
push
and
pop
add
fwait
sbb
daa
push
jp
mov
sub
add
jg
rol
pop
xor
cmpsl
outsl
das
inc
mov
jp
in
sbb
fcomp
test
inc
inc
cmp
jecxz
push
xor
fs
mov
cmpsb
popf
aaa
xchg
add
add
stc
add
insl
push
fmul
pop
imul
out
movsb
inc
ljmp
inc
mov
push
pop
jne
fistl
inc
mov
loop
xchg
pop
mov
jnp
adc
es
mov
xchg
mov
cmp
or
mov
inc
lock
clc
push
and
out
cmpsl
out
xchg
clc
sub
cmp
ret
inc
xor
popa
or
inc
aad
ret
cld
cli
insb
ss
ss
pop
mov
movsb
jmp
cmpsb
sub
add
call
lds
push
pop
dec
arpl
mov
ret
loop
loop
out
out
jbe
push
sbb
adc
dec
xlat
mov
pop
xor
add
roll
and
push
insl
hlt
jmp
push
and
xor
loop
cs
xchg
mov
xor
jnp
dec
xor
aad
or
imul
jno
pop
cmpsl
into
int3
cs
jne
popa
addr16
push
enter
sbb
push
push
mov
cmp
mov
es
gs
sub
scas
xorl
and
mov
xchg
sub
adc
mov
test
cs
filds
mov
push
cs
add
mov
inc
mov
lahf
jo
mov
push
sarb
mov
popa
push
jl
arpl
stos
jl
push
or
mov
sbb
lock
cwtl
mov
jp
movsb
cld
and
in
mov
mov
mov
or
scas
pop
or
aaa
jmp
out
adc
mov
xchg
xchg
std
iret
lds
sub
dec
mov
dec
clc
ss
ret
dec
xchg
in
repnz
push
push
imul
xchg
cmp
xchg
cmp
gs
mov
loope
adc
jmp
addl
fwait
cmp
lcall
push
leave
aad
rorb
mov
fistpll
andb
lahf
pushf
push
pop
sub
pop
popf
movq
sub
push
add
out
inc
cmp
lret
repz
inc
orb
and
fimull
and
pop
sahf
mov
hlt
data16
cwtl
lret
pop
jle
out
dec
push
pop
cmpl
pushf
inc
jmp
inc
sbbb
scas
mov
or
cs
mov
cmp
and
fwait
inc
in
loop
mov
dec
cld
loop
decl
stc
jp
lds
jp
inc
ret
ficoms
jle
and
lret
mov
xchg
call
addr16
adc
insl
sub
cld
sub
sub
aam
aam
mov
mov
sub
lods
push
lds
xchg
mov
iret
push
jnp
mov
cltd
mov
xor
fcmove
repz
push
dec
add
cltd
cmp
lcall
out
sahf
dec
pop
adc
cmp
push
dec
cltd
xchg
pushf
jbe
sub
pop
in
hlt
and
lahf
sub
mov
cs
jmp
push
jno
fistpl
aam
jno
mov
lds
sbb
imul
das
adc
jae
shll
dec
jl
lahf
lret
int
lods
dec
add
outsl
insb
std
cmp
jle
inc
das
inc
pushl
popa
ja
movsb
and
mov
cmpsl
mov
jle
lock
pop
inc
push
sub
ret
fldcw
sub
or
inc
mov
cmp
ss
sub
out
mov
add
cli
and
scas
fists
repnz
sub
or
xchg
popl
les
adc
mov
lods
dec
popa
or
push
iret
icebp
xchg
aad
sub
adc
mov
adc
loope
mov
out
shrw
xchg
fstps
lods
cmpb
jns
mov
cmpsb
mov
xchg
pop
lods
xchg
mov
jbe
sbb
adc
dec
mov
sub
mov
jae
sti
pop
cmp
imul
pop
mov
addr16
dec
sbb
testb
inc
or
cld
and
lea
scas
dec
js
mov
mov
pop
cmp
push
fmull
cld
jmp
testl
jecxz
lods
fadds
inc
push
jno
hlt
lcall
lret
outsb
imul
mov
or
sbb
aam
fstpt
xchg
shlb
mov
scas
mov
outsl
scas
push
pusha
aad
mov
imul
mov
cwtl
and
xor
xorl
nop
pop
roll
mov
xchg
add
mov
shrl
mov
mov
inc
loop
lahf
into
xchg
in
cmp
push
lcall
pushf
out
jns
pop
cmp
mov
mov
xor
test
cmp
xchg
aas
add
data16
push
jecxz
sub
cmp
add
add
or
std
out
outsb
and
fwait
pusha
stc
or
call
xorl
bound
push
ds
sarl
jbe
cltd
sahf
mov
jl
insl
cmp
or
cmp
mov
shlb
pop
cwtl
enter
add
pop
andb
mov
xchg
xchg
xor
loope
or
mov
and
push
xor
push
and
pop
and
ret
cmpsl
stos
add
out
add
sbb
pop
ret
aad
jecxz
add
sti
imul
mov
sub
dec
nop
ljmp
push
out
lret
ror
and
scas
aam
lret
xchg
mov
adc
push
mov
mov
jae
into
mov
or
testb
dec
push
aaa
fildll
stos
mov
jmp
sbb
inc
mov
fadds
adc
out
jo
pushf
adc
mov
dec
test
push
sub
mov
test
dec
mov
ss
fs
mov
pushf
xor
pop
out
int
imul
mov
dec
and
push
cmpb
mov
xor
cmpsb
out
addr16
adc
inc
add
pop
jbe
or
sahf
psllw
mov
aas
jb
mov
pop
push
jge
sbb
lcall
out
add
sbb
xchg
out
mov
test
in
xchg
fs
addr16
adc
xchg
test
scas
fistps
adc
stos
movsb
xor
repz
shll
adc
cmpsl
dec
nop
pop
and
das
jg
shlb
mov
gs
adc
dec
std
imul
push
pushl
push
mov
and
cwtl
mov
in
inc
pop
sub
ret
sahf
inc
repz
fistpll
imul
mov
sahf
daa
mov
inc
mov
movsl
xchg
add
xlat
jl
bnd
add
test
sub
es
je
inc
xor
stc
mov
inc
popf
inc
movsb
push
sti
mov
lds
lea
out
ss
mov
notl
lds
adc
jmp
add
xor
pop
jge
rorl
jecxz
or
mov
mov
mov
shrb
xchg
dec
xor
xchg
dec
loope
pop
mov
pop
jne
pop
mov
jnp
repnz
fdiv
outsb
sbb
push
pop
div
loope
push
pop
jne
imul
cli
jp
inc
push
ficoml
cmp
mov
xor
lahf
in
cmp
jne
cltd
push
inc
test
push
dec
iret
iret
dec
push
and
sbb
cwtl
sqrtps
mov
xor
add
mov
push
repnz
inc
xchg
lret
andl
push
add
fcoml
xchg
cld
push
and
insl
adc
or
mov
xor
lret
imul
stos
faddp
mov
mov
int3
mov
repnz
out
mov
std
out
cli
cmp
cld
pop
cmpsl
pop
in
in
lods
mov
cmp
mov
mov
mov
push
push
dec
fsub
nop
nop
or
adc
pop
sub
jmp
inc
test
and
pop
push
insb
dec
rcr
dec
rcrl
std
js
dec
cmp
add
jl
mulb
xchg
je
repnz
mov
mov
mov
mov
and
add
fisubrs
test
ds
push
cmpsb
mov
pop
hlt
or
sbb
fsubrs
stos
hlt
in
xor
pop
outsl
aad
add
sbb
jmp
xchg
jae
xor
lcall
call
xor
xlat
movsl
in
movsl
arpl
add
int
cltd
sahf
mov
xlat
out
xor
in
pop
lods
addr16
and
popa
or
push
mov
dec
jnp
stc
ret
ja
insb
fyl2xp1
mov
aas
mov
dec
jl
out
or
push
cwtl
xchg
das
add
addr16
int
inc
stos
and
movsl
xchg
push
inc
xchg
repz
pop
dec
mov
sub
pop
mov
add
daa
and
jne
rorl
jge
cmpsl
mov
mov
dec
fisttpll
loopne
imul
call
cmc
shll
lods
sbb
ficompl
lcall
testl
xlat
push
cli
sbb
cmp
add
test
sarl
cld
loopne
inc
imul
jmp
xor
sti
pusha
scas
test
jp
push
ret
cld
cmp
dec
sbb
or
cltd
mov
cwtl
and
insb
mov
shrb
xor
xor
inc
mov
enter
inc
in
test
push
mov
add
add
cmp
icebp
addl
arpl
call
sbb
andb
xor
js
cmp
inc
pop
sahf
cmp
jbe
and
into
lock
xchg
lods
vcmpsd
push
cmc
call
mov
insb
mov
setp
notb
xlat
jge
cmc
fnsave
inc
jo
loop
fs
adc
and
in
mov
push
push
add
out
fidivrs
fsub
aaa
call
and
pop
std
cmp
daa
jmp
popl
in
and
lods
insb
mov
jg
mov
sub
lret
ret
fisubrl
ficomps
or
fs
sbb
dec
xor
jnp
aaa
cli
ret
add
gs
jae
cmc
int
stos
dec
jne
cmpsl
inc
fnstcw
xlat
cmp
ds
popf
jmp
daa
push
xor
xchg
jg
sub
adc
pop
jne
aaa
insl
jbe
mov
jge
ret
scas
rorl
sub
or
fadds
push
popa
jno
lret
ss
mov
mov
aam
cmp
hlt
pop
add
test
stos
leave
sbb
pop
and
int3
and
outsl
data16
fdivrl
mov
jge
dec
adc
lcall
and
mov
jmp
repnz
fcompl
fwait
cs
jle
add
mov
or
cmp
inc
jg
inc
pop
pop
mov
je
hlt
jne
out
jp
stos
add
xor
cmc
push
dec
icebp
addr16
pop
into
jp
and
adc
push
stos
loopne
shlb
cmp
xchg
and
lcall
push
stos
fsubp
or
mov
ja
enter
in
pop
mov
jbe
mov
fs
or
push
fadd
add
sbb
test
rcrl
jg
lock
fmull
enterw
outsb
pop
repnz
jmp
in
lods
movsl
mov
cmp
popa
movsl
daa
lret
cmp
and
aad
inc
leave
pop
jae
neg
nop
dec
sarl
or
jmp
pop
out
push
rcrb
notl
hlt
dec
adc
cmpsb
jne
movsb
pop
push
notb
aas
test
push
sub
lods
mov
mov
and
mov
push
sbb
stos
xor
inc
imul
xchg
movsl
ja
xor
in
mov
fs
cmp
mov
insl
mov
push
aad
mov
aaa
jnp
nop
rcrl
add
sbb
and
in
adc
mov
out
in
xchg
and
clc
std
cmp
jne
inc
pop
push
pop
dec
push
jbe
push
icebp
fisttpl
fcomip
push
sbb
shrb
adc
pop
mov
sbb
adc
adc
mov
jns
cmpb
stos
addr16
int
cmp
call
xchg
xchg
clc
shll
pop
fs
js
bound
pop
cmc
pop
and
adc
pop
xchg
dec
jle
in
push
ds
pop
out
sub
sub
loope
push
and
loopne
push
fwait
out
enter
shrl
sbb
jle
pop
fdivrl
loope
and
outsb
inc
push
jg
mov
xor
mov
xchg
mov
jecxz
push
dec
rolb
dec
xchg
rorl
outsl
xor
xlat
xchg
rcrb
mov
jb
dec
push
xor
out
xor
xor
fadd
mov
mov
scas
or
mov
out
mov
jmp
cli
ret
jecxz
xchg
add
daa
push
jns
cmp
movsl
sub
xlat
sub
or
lcall
push
or
mov
popa
push
jmp
jo
and
adc
daa
sub
stc
or
push
test
pop
mov
pop
in
xchg
or
xchg
lods
dec
imul
mov
adc
xlat
icebp
mov
dec
nop
inc
das
sub
pop
cmp
clc
jbe
mov
insb
pop
add
jns
or
or
dec
test
mov
aam
aaa
mov
xor
add
inc
jle
cmpsb
scas
mov
test
sbb
mov
andb
clc
hlt
xor
mov
daa
xor
in
cs
jmp
test
daa
xchg
mov
lock
fnsave
mov
repz
cwtl
outsb
stos
or
mov
pusha
cs
cmpsl
cmp
mov
sbb
mov
popf
xchg
shlb
sahf
das
push
inc
mov
cld
xchg
mov
inc
inc
ds
inc
aad
sti
aas
stos
or
dec
negl
lock
xchg
rcll
arpl
xchg
dec
lock
adc
ss
and
xor
jae
push
pop
push
dec
das
jp
aaa
mov
dec
push
jns
push
mov
and
cmpsl
nop
shlb
adcb
push
fidivl
out
das
mov
cmc
and
mov
lret
or
imul
ss
inc
repnz
xor
mov
je
pop
adc
inc
sub
dec
mov
rorl
pop
push
xchg
repz
mov
std
mov
rcl
sbbb
es
jbe
mov
cmp
faddl
jbe
xor
negb
insb
outsl
jne
loopne
mov
and
lret
ds
jnp
jp
idivb
lods
and
popf
out
loop
mov
jb
nop
pcmpeqd
clc
int3
shlb
icebp
sbb
xor
and
clc
icebp
jecxz
mulb
sbb
sbb
es
into
push
aad
outsb
imul
mov
dec
mov
or
and
pop
das
add
test
xchg
cmp
js
shr
inc
add
inc
outsb
push
imul
jne
stc
aam
push
pop
mov
ret
mov
adc
cmp
pop
test
push
sahf
dec
rorl
dec
mov
sbb
int3
in
push
shlb
xchg
mov
aam
loop
std
sub
push
inc
push
insb
add
imul
sbb
hlt
aaa
pop
fsubr
jg
mov
push
mov
push
loope
xor
xchg
xchg
cli
repnz
adc
idivb
or
mov
aad
insl
pop
mov
push
mov
cld
pop
push
out
dec
cwtl
or
insl
sarl
les
int3
and
push
lock
aaa
lods
mov
stos
fcmovnu
push
jecxz
jae
hlt
sahf
daa
ja
cmp
mov
rorl
pop
xor
fwait
repnz
adc
roll
jne
jp
test
mov
std
mov
mov
stos
call
enter
cs
fcmovne
into
test
sbb
inc
and
push
xchg
push
inc
arpl
test
adc
pop
push
adc
sbb
pop
js
and
sbb
jmp
xchg
push
mov
popf
aas
call
cmpsl
sub
in
jae
rcrb
insl
cld
inc
cmp
cmp
cmp
jle
xor
clc
lret
sub
shl
push
xor
adc
push
jmp
and
push
dec
ret
and
stos
rcll
sbb
scas
mov
mov
imul
cmpsb
aaa
rorb
movsl
int3
xchg
xor
add
rcll
jo
and
sub
iret
mov
sub
clc
or
imul
mov
fistpl
xor
scas
incl
mov
addr16
iret
fcomip
inc
push
out
sub
out
or
inc
pushf
mov
ss
cmc
hlt
fisubs
scas
sti
lea
adc
sbb
aaa
mov
mov
jbe
lea
dec
test
out
loopne,pt
or
push
sub
push
sahf
add
fwait
xor
mov
adc
sub
push
les
inc
xor
push
daa
nop
in
out
and
negb
mov
sbb
mov
scas
xor
or
mov
filds
pop
jl
fists
mov
pop
mov
jle
outsb
test
repz
ret
daa
dec
xchg
mov
pushf
mov
push
add
push
mov
pop
cmp
sub
sar
inc
xor
mov
outsl
out
ret
data16
mull
push
ljmp
idivl
or
adc
push
lret
aad
dec
scas
dec
xchg
jp
or
dec
cwtl
pop
or
imul
lods
fisttps
pop
leave
xor
lods
or
jle
hlt
mov
jne
push
pop
and
icebp
sahf
pop
test
cmp
cltd
mov
sahf
dec
popa
icebp
mov
push
jle
dec
and
aad
stos
cwtl
ret
fsubs
lock
lret
repz
xchg
das
imul
mov
xchg
shll
adc
imul
test
jnp
ja
lret
or
stos
neg
fs
inc
je
out
std
daa
lods
sbb
jno
stos
call
or
sbb
dec
inc
rcl
mov
xchg
cmpsl
xchg
push
xor
insl
mov
scas
push
push
mov
lret
bound
add
push
pusha
sahf
xor
fimull
popf
mov
mov
and
int
ss
mov
jnp
jge
insb
sbb
inc
pop
jbe
or
mov
inc
pop
subl
add
cmpsb
xchg
mov
jb
cmp
mov
jle
mov
xor
pop
cmpsl
adc
adc
fisubs
cs
sbb
inc
ljmp
mov
icebp
testl
dec
sbb
push
pop
mov
pusha
out
or
xchg
pop
clc
ljmp
fnstsw
jne
cmp
and
jne
mull
loop
jle
aas
pop
jne
lcall
xor
dec
rorb
xchg
ds
inc
lcall
dec
xor
movsl
lods
daa
shll
bound
adc
xchg
ds
and
jnp
shlb
jg
ds
xor
dec
jns
aad
push
out
jnp
ljmp
fadds
pushf
icebp
out
inc
or
shll
in
outsl
lret
or
adc
mov
lcall
aam
push
push
leave
not
jle
and
add
icebp
inc
cltd
test
fiadds
mov
jecxz
sub
mov
jl
mov
lods
mov
mov
into
push
cmpsb
or
lea
mov
subl
dec
jg
arpl
lea
loope
cmpsb
sub
xchg
xchg
cmpsl
dec
cmp
sub
cmp
cltd
icebp
add
nop
add
imul
pop
sub
into
cli
idivb
shrb
das
rcl
sbb
xor
jg
sub
adc
fldl
dec
mov
fwait
sbb
mov
out
lods
clc
push
out
dec
mov
shll
mov
xor
xlat
sbbl
int3
mov
cltd
call
out
das
mov
ss
push
push
xchg
add
repnz
add
mov
jp
mov
dec
push
inc
dec
pusha
pusha
adc
addr16
adc
and
mov
gs
and
repnz
or
xor
sbb
or
or
fldcw
lahf
ja
addl
gs
test
sbb
sbb
xor
cmp
lods
xchg
hlt
je
bound
in
mov
ds
call
xor
fdivrp
call
pop
jg
enter
mov
jne
mov
push
dec
pop
push
repnz
or
js
push
pusha
xor
imul
xor
mov
adc
pop
lret
mov
iret
stc
push
push
lahf
arpl
adc
xchg
adc
and
cmp
or
inc
sahf
jo
in
pop
mov
and
mov
bound
stc
jae
xor
jecxz
ffree
xor
add
jmp
and
mov
repnz
pop
push
add
push
push
shlb
push
sbb
test
fisubs
jae
mul
lods
jno
cmp
adc
add
outsl
push
mov
mov
jmp
sub
jmp
and
in
lods
in
ret
in
add
cs
sahf
pop
imul
cmpsb
jbe
pop
loop
fcoml
jmp
mov
push
cwtl
pusha
xchg
aam
push
push
xorb
push
mov
push
fucomip
fnsave
dec
ja
xor
repz
ret
lret
push
shll
mov
inc
jmp
fwait
xchg
jbe
inc
cmc
ljmp
fcomp
pushf
and
rcr
inc
out
mov
pop
gs
sbb
xor
std
lock
lods
xor
or
lret
pop
inc
jno
aaa
mov
or
dec
cmp
adc
or
pop
lock
int3
xchg
dec
mov
fidivrs
arpl
lcall
add
mov
and
or
inc
imul
mov
push
imull
xchg
mov
out
popf
mov
xchg
xchg
xlat
jo
cld
ja
dec
lcall
aad
push
pop
cmc
loope
mov
mov
test
ds
imul
push
mov
lcall
cld
pop
lods
fwait
cmp
xor
cmp
add
or
inc
enter
repz
sbb
adc
sbb
ja
and
xor
dec
mov
test
sbb
fwait
jo
adc
and
ret
pushl
jg
test
sbb
loope
in
cmc
call
lock
fcmove
pusha
jb
dec
xchg
je
cmp
mov
in
mov
ret
movsb
push
nop
rcr
fimuls
add
popa
sub
iret
xchg
pop
pop
outsl
add
xchg
test
inc
mov
popf
adc
mov
pop
out
fwait
sbb
jmp
add
push
daa
pop
fucom
fisttpll
push
dec
xchg
insb
add
mov
push
lods
pop
mov
jne
and
rcll
pop
pop
cmp
enter
xchg
jge
dec
cmp
loopne
adc
in
add
cmpb
xchg
mov
or
mov
jp
add
mov
add
movsb
shr
sub
xor
push
add
jmp
push
add
jne
fldt
or
xchg
xor
fwait
testb
mov
addr16
xchg
push
aas
jg
jecxz
aaa
xchg
dec
push
cli
lock
popa
pop
and
jg
adc
xor
pusha
imul
test
jle
out
shlb
add
xchg
repnz
xor
pop
fwait
xchg
cmpl
lahf
push
fucom
sahf
mov
loop
mov
shl
hlt
pop
fcmovne
jecxz
fstpt
out
insl
mov
out
cmp
add
ds
cmp
dec
insb
fsubrl
dec
pop
dec
bound
cmp
add
mov
sbb
aaa
adc
mov
pushf
test
sbb
dec
rcll
pushf
jl
ret
in
push
dec
jmp
idivb
dec
out
in
cmp
test
adc
test
pusha
icebp
mov
jb
bound
ror
xor
movsb
mov
sbb
aam
sbb
nop
out
loopne
jp
popf
cmovnp
insl
adc
jno
iret
jge
push
clc
sub
out
mov
lcall
ret
pop
cmp
sbb
loope
xchg
jbe
mov
xor
popa
subl
mov
adc
jne
mov
divb
ja
sbb
icebp
sahf
adc
in
jp
out
inc
jae
das
push
pop
fbstp
mov
mov
jp
xlat
cmp
shlb
out
mov
pop
pushf
js
jmp
lcall
adc
cmp
test
pop
outsl
push
fwait
add
mov
add
adc
in
nop
fs
sbb
das
jbe
or
xchg
cwtl
cmp
sbb
pop
int3
test
mov
jl
hlt
in
loope
sub
stos
inc
xor
dec
shr
push
mov
xor
cmp
cmpsb
shr
mov
add
shl
mov
mov
push
and
clc
adcb
lock
das
stos
jne
inc
xchg
in
or
lea
sub
sub
push
sub
push
cld
shll
or
pop
int3
push
jb
cmp
lret
or
rcrb
inc
jnp
lret
pop
pushf
pop
sahf
inc
mov
xchg
sbb
ficompl
mov
mov
pop
cmp
cwtl
repz
sub
jb
xchg
call
pop
push
jno
xor
sub
iret
add
loopne
inc
xchg
test
cmpsb
xlat
loope
hlt
in
xchg
orb
jg
stc
jl
dec
paddw
xchg
data16
lods
insl
pop
scas
sub
pop
sub
lcall
shl
and
cmp
jge
sbb
ret
and
mov
into
pop
xchg
adc
cmc
icebp
sti
push
pop
sub
mov
cmp
and
xchg
lahf
shlb
jl
in
sti
psrlw
lcall
pop
mov
push
loopne
xor
inc
loopne
and
pop
or
add
cmpb
xor
mov
ret
into
mov
enter
loope
and
cmc
or
jecxz
cltd
sub
xchg
popf
jb
les
mov
imul
pop
in
stos
add
sbb
sbb
push
sbb
loope
sahf
mov
mov
arpl
mov
xchg
aas
jno
pop
insb
icebp
ret
outsb
jge
or
sbb
pop
arpl
ss
fidivrs
andb
int3
jge
in
add
in
in
and
jns
mov
loopne
lahf
jae
lcall
movsl
push
pop
cltd
mov
ret
jae
aad
fidivl
xchg
cmp
shlb
jno
mov
loope
iret
lods
jl
xlat
repnz
mov
repnz
jmp
mov
xchg
xchg
movsl
mov
mov
mov
pop
int3
divl
int
popa
int3
add
rorl
hlt
xor
adc
cli
pop
int3
lahf
out
cmpsb
pushl
lds
xchg
and
test
jae
mov
and
out
mov
bound
fldl
out
inc
and
fsubl
cltd
and
ret
je
pop
loope
aaa
xchg
dec
movsl
addb
mov
shrl
out
icebp
lcall
jge
and
push
iret
icebp
sahf
repz
pop
out
mov
outsb
xchg
out
sub
daa
inc
push
ss
xchg
cs
insl
and
gs
cmp
hlt
pop
loop
mov
aam
mov
sub
stos
push
mov
push
and
test
incl
cwtl
pop
mov
shr
inc
outsl
in
insb
sti
mov
add
sbb
pop
popf
in
push
mov
dec
ret
xlat
mov
mov
or
xor
ret
lcall
push
xor
pusha
imul
cmpsl
ret
pushf
ds
sahf
scas
gs
pop
pop
mov
fildl
test
jne
popf
and
xor
sub
repz
xchg
pusha
js
out
in
pop
add
mov
jg
fidivrs
add
lcall
cmp
mov
pop
fwait
xchg
std
test
fs
or
jo
mov
and
sar
pop
icebp
inc
mov
and
add
dec
jmp
xor
jmp
push
add
lcall
xor
sub
lahf
mov
adc
push
sub
add
inc
roll
push
pop
push
pop
and
add
or
push
out
cmp
push
test
mov
std
adc
xlat
add
pop
adc
cli
cmpsb
stos
jnp
in
xor
out
pop
in
mov
lds
xor
repz
pop
fmull
lea
sbb
jg
pmulhuw
push
loopne
bound
add
sub
mov
xlat
dec
xor
mov
dec
mov
packssdw
mov
std
jecxz
or
or
dec
inc
jp,pt
or
clc
test
add
mov
push
rcrb
test
dec
ret
leave
in
push
sub
mov
mov
mov
loop
add
ds
into
jle
jne
mov
xchg
lea
inc
fdivr
test
adc
dec
out
fdivl
mov
add
xchg
lret
add
jae
jne
jae
lret
or
sbb
in
pop
scas
sub
jne
sbb
xor
roll
nop
mov
test
xchg
mull
push
stos
lds
rcr
push
adc
nop
popa
push
popa
addr16
inc
or
cmp
mov
inc
add
mov
pop
xor
leave
jmp
int
sbb
stos
cltd
lcall
or
sub
loopne
adc
loopne
rorl
dec
sub
enter
iret
xor
mov
and
jbe
test
lock
mov
rorl
mov
loopne
adc
mov
fsts
pushf
mov
push
or
xchg
ret
pop
test
pop
test
daa
adc
enter
jbe
pop
xchg
mov
fdivl
mov
insl
add
shl
dec
test
lcall
xor
andb
insb
rol
cmpsb
sbbb
aam
mov
mov
out
xchg
sub
cmp
sub
pop
aas
xchg
das
repz
fbld
xchg
inc
adc
pop
mov
int3
adc
cmp
rorb
mov
lods
and
loop
mov
cld
sub
pop
outsb
pop
jecxz
adc
fisubrs
cmp
sub
mov
push
jno
pop
and
out
test
inc
ja
inc
push
mov
iret
pop
sub
sbb
cmp
mov
mov
jl
push
adc
stos
test
fidivrl
xchg
pop
xor
jo
shr
adc
cmp
inc
add
mov
jno
jbe
jbe
xchg
jno
lods
xlat
and
and
mov
das
lock
and
loopne
repz
fadd
cmp
xchg
fadds
dec
mov
sub
fidivrl
sub
mov
shrb
inc
sbb
repz
loopne
lahf
scas
jno
ja
jmp
cli
mov
fimuls
mov
push
jnp
hlt
mov
sbb
cmp
insl
pop
out
lcall
fs
mov
adc
adc
shl
aas
xchg
movsb
xor
xor
sub
add
push
imul
scas
or
mov
xor
cmp
mov
add
pop
xchg
sbb
jno
push
int3
cmp
es
push
clc
or
je
out
cs
insl
leave
sbb
or
xor
xor
stos
ljmp
mov
pusha
lret
int3
lcall
loope
std
sahf
aaa
clc
xchg
and
add
pop
cld
std
movsl
dec
hlt
mov
push
ljmp
push
jl
xchg
push
sbb
and
mov
cmp
mov
je
pop
fcom
jge
imul
and
and
aad
adc
mov
jl
jmp
out
adc
or
adc
xchg
xchg
adc
sub
mov
movsl
adc
inc
mov
or
cmpsl
decb
outsl
repnz
sub
mov
mov
add
je
sub
add
fisttpll
in
mov
xchg
rcrb
das
leave
xchg
mov
divl
add
popf
ret
jns
mov
xchg
cmp
sbb
push
jmp
out
pop
cmp
mov
mov
sahf
int
mov
xchg
or
test
fisubrl
jle
pop
stos
clc
cmpb
inc
add
mov
fistl
pushf
xor
cli
pop
adc
adc
mov
pop
and
jae
pop
aad
jge
pop
or
push
xchg
lret
inc
add
ja
or
aam
pop
scas
inc
or
inc
pop
mov
adc
inc
jbe
neg
pop
sub
je
push
xchg
xor
clc
das
je
xchg
lcall
add
pop
mov
sarl
lds
push
leave
fcompp
aad
adc
jae
es
mov
push
xchg
cltd
ficomps
push
jle
sub
mov
stc
jl
inc
adc
sub
mov
fistpl
or
roll
aas
stos
ja
xchg
out
divl
fs
movsb
lds
mulb
adc
jno
mov
lds
js
cmp
loope
arpl
movsl
fsubrs
lock
dec
loope
jl
mov
js
stos
shll
cs
pop
pop
jge
pushf
adc
jl
cmp
push
outsl
in
mov
mov
sub
xchg
mov
mov
jg
pushf
jg
out
fwait
shl
adc
cmp
adc
lahf
xlat
ljmp
flds
sbb
add
mov
insb
sbb
sub
js
mov
dec
and
shll
testb
stos
or
adc
imul
lods
mov
sti
aam
mov
into
fxtract
insb
scas
shlb
and
inc
lahf
data16
loop
jb
pushf
mov
in
jmp
xor
fdivp
decb
xor
xchg
cltd
outsb
lcall
shld
aas
jmp
and
sub
pop
inc
subl
bound
enter
mov
popa
mov
jae
pop
cmp
lahf
or
xor
add
test
fadds
dec
pop
jecxz
ret
icebp
dec
push
push
jge
mov
int
push
jne
pop
inc
scas
imul
lea
mov
add
repz
fsubp
jno
add
pop
inc
mov
repz
adc
pop
je
sub
es
xchg
lods
pop
cmp
pop
xchg
jbe
and
ret
lock
push
xor
js
gs
sbb
and
mov
pop
adc
jns
lods
jns
sub
mov
sub
pop
insb
adc
sti
pop
je
movsb
sub
or
ja
pop
jle
push
imul
imul
lock
notl
shlb
out
pop
aaa
push
inc
aas
cwtl
je
xchg
leave
mov
stos
pusha
sbb
call
rorl
out
xor
sahf
jns
shll
outsb
shrb
cmp
or
xchg
add
iret
out
pop
shl
insb
mov
cmp
je
pop
or
xchg
xchg
aas
pop
mov
ss
mov
movsl
mov
push
sarb
out
push
sarb
ret
je
out
push
xchg
mov
dec
ds
test
mov
inc
cmp
lods
cmp
notb
mov
adc
mov
inc
hlt
inc
mov
fidivl
shll
test
stos
test
or
out
mov
push
mov
out
dec
ret
cmp
mov
mov
jne
push
jle
inc
xchg
nop
pop
cs
dec
inc
cmp
push
fnstenv
or
loop
test
jp
or
hlt
xor
rclb
add
jns
xor
jle
cmp
jp
daa
sbb
mov
and
adc
sub
dec
clc
push
xchg
mov
adc
jae
gs
stos
addb
dec
mov
xchg
and
jb
dec
mov
lds
out
sub
pop
push
clts
mulb
dec
jnp
bound
pusha
inc
repnz
xor
push
mov
jno
test
mov
rcrl
lock
sub
imul
lahf
sub
adc
dec
loopne
push
push
mov
out
mov
lock
xchg
fsubrl
lahf
fildll
lcall
and
mov
mov
nop
jns
mov
repnz
sub
dec
repnz
jb
inc
pop
jmp
mov
lods
es
stc
fwait
push
jo
add
xor
dec
xor
push
fbld
jne
xchg
xchg
lock
xchg
bound
out
popa
mov
pushl
mov
lret
out
ror
out
test
leave
pop
test
stos
ljmp
or
mov
nop
jbe
test
test
mov
dec
push
mov
into
and
push
fsave
clc
or
aad
lahf
inc
repnz
push
xor
lods
mov
add
lret
xor
add
in
xchg
push
aaa
into
outsb
and
mov
sahf
xor
mov
inc
hlt
cmpsb
lret
data16
mov
stc
sbb
xorl
push
xchg
flds
into
mov
aam
and
xorl
out
mov
addr16
jl
ss
cmp
xchg
mov
fdivrs
push
daa
or
clc
push
test
mov
imulb
out
jb
mov
sbb
add
mov
sub
sbb
ss
repnz
jl
popl
sub
je
sbb
inc
push
push
mov
pop
insl
dec
outsl
cmpsl
adc
fimull
dec
addr16
mov
mov
aam
rolb
rorb
sbb
or
pop
jecxz
int
xchg
loope
inc
iret
xor
dec
xor
shl
iret
sbb
stc
push
mov
popf
push
and
cmp
cmp
and
scas
pop
hlt
insb
punpckhwd
mov
int3
popf
dec
hlt
cmpsb
sbb
ljmp
int
insb
xor
pop
scas
pop
sbb
int3
xorb
and
xchg
insb
xor
rcrl
cmp
pop
or
mov
clc
stos
add
dec
imul
mov
ret
add
mov
subl
cmp
loope
lea
jmp
mov
aam
mov
inc
sub
sub
nop
in
neg
cld
sarl
fcmove
push
scas
mov
in
sbb
jb
cmp
inc
mov
inc
xor
jno
push
dec
pop
xchg
insl
scas
fnsave
xlat
or
lcall
add
lods
jnp
push
int3
lods
and
lods
xchg
gs
cmp
mov
insb
insb
mov
popf
fadds
lods
push
inc
std
lcall
mov
aaa
repz
rcll
xchg
dec
inc
cmp
xchg
mov
lds
adc
sub
mov
mov
scas
stos
add
xchg
mov
push
dec
imul
adc
pop
test
popf
pop
mov
imul
repz
loopne
rcll
in
movsb
cli
in
repz
js
add
mov
jns
in
sti
add
fnstenv
lea
in
mov
in
and
imull
add
and
fiaddl
mov
lcall
leave
add
cli
jb
pop
pop
mov
cld
add
xchg
jae
cmp
inc
cmp
cmp
and
insl
inc
nop
push
outsb
clc
jg
lahf
mov
inc
mov
insb
hlt
cmp
es
push
mov
xor
push
cmc
jmp
xchg
lods
mov
push
jo
movhps
jp
push
imul
push
push
roll
mov
imul
mov
inc
cltd
jle
add
loope
mov
xor
lock
dec
pop
push
push
test
mov
pop
into
lds
scas
rorl
gs
cmp
les
leave
and
enter
pop
clc
jmp
jns
repz
loop
test
inc
mov
sbb
ror
adc
outsb
xchg
aas
xor
add
push
push
push
jne
ret
mov
mov
push
adc
ja
sbb
xor
scas
pusha
bnd
ficoms
mov
dec
xchg
push
scas
test
imul
out
xor
sub
stc
xchg
sub
cwtl
xor
test
add
out
pop
mov
xchg
push
nop
data16
push
and
movsl
loop
mov
or
mov
mov
sti
xor
or
gs
pusha
push
or
jns
jne
and
sti
mov
in
test
fcompl
jg
pop
mov
push
flds
movb
mov
add
cmp
dec
aas
pop
push
iret
add
xchg
icebp
sub
and
and
aas
push
jbe
pop
add
pop
cmp
jo
hlt
push
cmp
outsb
inc
inc
leave
dec
insl
in
add
xchg
xchg
xlat
lods
fstpl
idivb
enter
mov
sbb
imulb
and
outsl
inc
test
mov
cmpsb
pop
in
fstl
jmp
mov
mov
adc
dec
inc
jle
out
xor
sbb
adc
popf
xchg
mov
inc
cli
xor
lods
das
xor
bound
test
or
repnz
fdiv
adc
mov
mov
xchg
xchg
es
sbb
and
sub
pop
inc
sbb
add
int3
pop
adc
call
out
mov
mov
jne
mov
jo
loop
cld
sub
ficompl
adc
pop
mov
out
enter
ficompl
xor
jmp
dec
cmp
das
stc
jb
add
adc
jnp
add
fidivs
xor
push
cwtl
pop
mov
cmpsb
loopne
dec
xor
arpl
add
adc
mov
lock
inc
out
andb
in
pop
ja
push
sti
fldt
cmpsl
cli
or
cmp
adc
cmc
ja
ret
add
adc
cmp
jecxz
sub
jmp
pop
xchg
and
fcmove
pop
xchg
mov
push
pop
push
mov
cmp
dec
dec
inc
fwait
adc
js
and
sbb
xchg
inc
mov
bound
push
sbb
fdivrl
loop
dec
dec
decb
inc
popa
or
or
mov
pushf
mov
cmp
nop
or
ds
aaa
xchg
xchg
ret
adc
sar
lock
jmp
sbb
sub
fdivl
xor
dec
je
fwait
aaa
adc
sub
and
out
jmp
adc
cli
aaa
sub
or
movsb
imul
and
or
out
or
aad
adc
jae
mov
or
or
pop
xor
std
add
jbe
cwtl
out
mov
test
or
cmpsb
jl
call
shrb
pop
and
dec
push
fmuls
in
cmp
movsl
out
std
jge
imul
aas
mov
mov
dec
mov
pop
jmp
mov
faddp
lods
insb
mov
sbb
mov
outsb
push
cmp
decl
jbe
js
inc
sbb
mulb
icebp
negb
test
inc
fdivrs
cs
jnp
inc
jmp
ss
shrb
mov
aaa
jl
std
jmp
scas
insl
filds
movsb
test
mov
push
sbb
pop
jo
fstpl
xlat
lret
push
pop
jle
jo
imul
pmulhuw
cmp
loop
inc
test
addr16
pusha
popf
in
push
popa
js
movsb
mov
loope
jg
sub
in
cmp
mov
xchg
ljmp
cmc
mov
adc
jnp
aam
cmp
add
rcl
call
adc
jp
iret
scas
inc
xchg
aad
shrb
fidivl
arpl
mov
mov
mov
les
dec
repz
in
imul
lods
mov
push
js
xor
pop
cwtl
add
mov
clc
and
movsb
scas
jge
inc
xor
mov
pop
push
pop
mov
jo
out
push
inc
dec
cmpsl
cwtl
sar
mov
orb
scas
mov
xchg
daa
cmpsl
lahf
iret
cmp
lds
and
call
fdivrp
and
adc
popa
test
fists
stc
sbb
xor
pop
sbb
hlt
aam
sub
cmp
fwait
push
je
mov
leave
jg
aam
jb
daa
inc
xor
adc
sub
aam
push
or
sbb
adc
xor
fcmove
push
push
ja
jmp
bound
ja
ja
cmp
roll
push
add
int
andb
mov
cmpsl
and
negl
add
fcomps
adc
pop
or
dec
mov
loopne
cmp
repz
push
push
dec
leave
push
ds
in
mov
leave
inc
insb
sbbl
jnp
cs
std
cli
push
add
add
push
cmpsl
mov
inc
jp
push
mov
test
test
dec
es
idivl
leave
jne
mov
js
push
push
dec
and
sub
loop
mov
leave
or
lahf
fsubrs
cmc
mov
mov
and
fcmovnbe
dec
loope
and
add
xchg
adc
cmc
push
aaa
jmp
in
xchg
sbb
xor
xor
pushf
jbe
inc
jnp
sahf
mov
aaa
jecxz
push
sub
adc
xchg
popf
aaa
and
sub
repnz
int3
xchg
mov
adc
and
ss
cmp
hlt
testl
rcr
out
xchg
sub
adc
xor
aas
jle
sbb
icebp
ss
pop
jle
add
mov
jne
aas
fcmovnbe
test
or
push
fwait
push
jb
jecxz
push
cmp
xchg
add
push
adc
xor
add
js
bound
xor
orb
in
add
fmull
repnz
cmpsb
or
test
outsl
mov
xchg
fcomps
or
xchg
addb
push
leave
pop
fidivl
dec
adc
xor
shlb
cmp
push
xchg
inc
ret
popa
mov
jae
mov
dec
jge
jb
xor
lahf
mov
notb
lcall
mov
mov
xchg
push
int3
fistpl
clc
cmp
or
xor
and
dec
rorl
into
fnstsw
and
sub
out
fnstenv
popf
mov
lods
push
popa
xor
pop
jge
mov
and
cmp
jmp
push
sbb
cli
push
push
lds
ret
stos
xor
pop
push
sub
je
pop
aas
out
insb
sub
mov
dec
cmp
test
inc
mov
and
flds
xor
cmp
call
dec
xchg
ds
add
jl
fwait
std
or
fdiv
cmp
mov
xor
add
sti
fbstp
cltd
mov
rorb
adc
mov
xor
jge
cmpsl
cmc
cmp
xor
insl
dec
mov
sti
les
adc
lret
lcall
push
scas
jbe
test
jo
sbb
cmp
les
stc
insb
sbb
xor
lock
aas
out
clc
add
sarl
adc
mov
dec
ds
and
sbb
bt
loopne
jb
insl
sbb
mov
data16
call
in
push
jns
mov
stc
mov
fists
inc
pop
xor
rolb
lret
addr16
cmp
pushf
xlat
outsl
push
mov
imul
push
add
sbb
add
test
rol
cmp
movsl
lock
mov
sbb
mov
aas
lret
lds
repz
adc
arpl
push
inc
sbb
adc
ljmp
mov
jo
rolb
std
leave
pusha
pop
sub
mov
sarl
inc
sbb
sub
jmp
xchg
and
aam
testb
cmp
mov
mov
push
sbb
sarl
sahf
mov
push
in
in
shlb
jno
inc
lret
adc
cltd
in
les
adc
cs
add
jl
stos
lret
les
push
mull
dec
sub
cmp
frstor
sbb
loope
mov
arpl
les
subb
jbe
push
lods
dec
test
cmpsb
fildll
mov
lock
pop
cmp
adc
cwtl
xchg
mov
xchg
pop
in
movsl
mov
xor
mov
pop
adc
jae
adc
enter
jne
push
or
mov
jge
or
dec
cmp
stc
lret
js
cmp
xor
bound
shll
out
fstl
push
sbb
jmp
xchg
rcll
outsl
mov
or
data16
pop
cmp
fcmovne
test
and
pushf
enter
hlt
in
aad
lea
mov
cld
and
insb
mov
lds
xchg
loop
dec
mov
inc
inc
into
lcall
imul
xor
in
sarb
and
outsb
mov
lahf
sub
mov
and
add
in
inc
jb
lods
adc
push
sub
pop
xor
aad
cwtl
in
pusha
xchg
cli
dec
add
loope
sub
jbe
mov
das
and
cltd
inc
js
jb
fisubrl
int
punpckhwd
test
xor
pop
or
xchg
std
pop
jge
mov
fiaddl
bound
insb
data16
mov
fdivs
lods
adc
sub
inc
inc
aad
and
sbb
and
shrb
hlt
lods
loopne
movsl
gs
xchg
sbb
test
aas
mov
pop
xor
cwtl
xor
mov
or
or
inc
mov
xchg
into
rorb
push
or
orb
add
jb
out
lahf
out
loopne
and
add
jle
push
pop
inc
inc
push
mov
push
or
nop
aam
shll
xchg
fsubrs
insb
xor
inc
or
sub
push
pushf
dec
jecxz
stc
out
pop
imul
subb
fisttpll
xchg
scas
popa
xchg
gs
es
jae
hlt
jno
repnz
inc
cmp
leave
ror
imulb
pop
cmp
in
cltd
xchg
jae
jns
cmpl
push
adc
mov
and
dec
mov
lret
out
movq
fwait
push
push
push
mov
dec
call
loope
test
dec
push
vfmadd213ps
dec
pop
jmp
data16
icebp
cmp
cmp
push
outsb
dec
pop
outsl
jmp
iret
icebp
ss
pop
js
cli
xchg
mov
adc
pop
sarb
aam
jne
jne
xchg
dec
dec
sbb
pop
dec
call
xchg
imul
add
dec
int
movsb
add
add
jg
sbb
gs
shl
dec
notl
call
outsl
inc
enter
std
sub
sbbl
push
stos
lock
inc
xchg
cmc
repz
aad
outsb
sub
std
into
jecxz
push
cmp
push
adc
out
int3
jg
pop
movsb
add
loope
ss
mov
sbb
mul
jno
dec
stos
push
sub
mov
in
and
mov
xchg
fsts
movsl
jge
dec
mov
popf
or
in
mov
out
sbb
inc
pushf
ja
push
inc
pop
mul
mov
and
mov
shlb
pusha
loopne
divl
and
arpl
cmp
or
movsl
movsb
not
inc
sarl
and
rcl
cli
mov
ficoml
out
ret
sbb
mov
fwait
out
mov
arpl
rcrl
sahf
es
xlat
mov
add
jns
inc
in
movsl
aas
sub
xchg
insb
lahf
scas
dec
in
jnp
xchg
mov
les
aas
adc
dec
cmpl
leave
stos
shll
movsl
sahf
xchg
add
rol
pop
stos
cmp
push
les
inc
lods
jno
les
sub
aad
adc
sub
sarl
sub
or
jb
ret
mov
jno
pop
xchg
push
ret
push
mov
mov
sahf
adc
jg
fldenv
inc
cwtl
cmp
dec
dec
dec
inc
fisttpll
mov
dec
enter
stos
or
xchg
or
shr
aaa
sbb
jae
adc
mov
call
xor
mov
mov
dec
scas
pop
push
pop
xlat
leave
jno
inc
cld
leave
jo
jp
cwtl
negb
lret
in
mov
dec
imul
jmp
rcrl
pop
shlb
adc
int
xorb
fwait
xchg
outsb
sti
push
in
ss
inc
adc
or
add
cmp
cmp
js
insb
cmp
jne
test
clc
and
pop
jae
dec
sbb
add
pop
mov
jbe
inc
cmp
mov
sbb
popf
xlat
enter
cmp
cmp
fnstenv
les
add
or
imul
mov
daa
xchg
aad
push
setb
pop
cmp
mov
mov
lods
outsb
xchg
sub
push
fisubl
cmp
mov
in
cmp
mov
lea
test
stos
pop
xchg
xor
xchg
loopne
push
jl
adc
add
add
pop
pusha
cmpsl
push
push
outsb
outsl
push
cmp
jp
push
sub
and
leave
es
addr16
in
leave
mov
hlt
jmp
sbb
int3
adc
outsl
fcompl
in
sbb
xchg
loop
pop
iret
push
aas
push
or
adc
std
stos
int
jnp
sbb
pushf
adc
lret
sbb
pop
shl
int3
sub
jmp
gs
or
std
loope
mov
in
push
loope
push
lahf
and
jno
pop
mov
movsb
dec
jno
mov
sbb
cmp
add
adc
jne
pop
mov
clc
inc
dec
jmp
push
or
clc
add
xlat
jno
push
dec
add
pop
push
std
mov
punpcklbw
mov
int
mov
jmp
loope
mov
js
cmp
loopne
cld
push
pop
or
out
add
xchg
mov
mov
je
in
js
imul
jmp
fwait
pminsw
xor
jmp
out
xor
mov
cld
mov
int3
int
cmp
inc
cld
mov
and
and
jae
daa
xor
xchg
addr16
mov
mov
std
iret
mov
cmp
cld
mov
lret
adc
sub
xor
icebp
xchg
mov
jno
cmpsb
data16
jo
sahf
mov
stos
or
add
leave
aad
jnp
mov
sbb
popa
in
dec
xor
loope
mov
inc
jnp
out
test
xchg
adc
xorb
jo
ljmp
cli
test
rorl
pop
cmp
clc
mov
aaa
divl
jle
int
sbb
inc
add
cmp
xorl
divb
imul
mov
dec
jno
loopne
cmp
jo
jae
lock
mov
jle
jge
ja
dec
mov
adc
aas
es
scas
stc
mov
xchg
adc
leave
je
xor
leave
sub
xchg
fbld
push
jge
mov
dec
lret
pop
stc
xor
and
add
les
addr16
dec
mov
inc
cmp
pop
in
sbb
inc
xor
jbe
cs
idivl
mov
lds
rorl
addb
pop
imull
int3
and
push
out
arpl
roll
mov
cld
xor
xor
mov
and
xchg
add
std
out
cs
mov
test
out
or
test
and
test
in
rol
roll
push
inc
or
sub
pop
fisttpl
movsb
mov
aas
test
fs
jle
mov
sbb
mov
inc
shll
repnz
xchg
mov
mov
rolb
and
adc
pushf
cs
rclb
add
inc
addr16
dec
pop
pop
ljmp
mov
add
xor
xchg
popa
push
pushf
xchg
test
insl
in
mov
mov
shlb
xchg
sbb
outsl
rcl
inc
adc
inc
fsub
adc
inc
aaa
sub
iret
pop
xor
lock
dec
cmc
and
fmull
inc
aas
mov
add
sbb
popa
inc
add
mov
ret
xchg
xchg
xchg
dec
cmp
add
fstl
pop
cmc
xlat
cmp
sub
mov
pop
lcall
mov
lods
inc
jge
xor
inc
jecxz
or
mov
adc
popa
das
pusha
addr16
mov
jp
rcrl
sub
inc
bound
adc
popf
rcrl
int
ficoms
add
adc
and
cmp
xchg
out
xchg
jmp
call
bound
addr16
jg
insl
cld
xor
sub
dec
stc
mov
or
lock
les
sub
es
inc
addr16
sbb
scas
add
ss
jmp
movsb
mov
xchg
sub
movsb
xor
mov
sbb
cmpl
clc
xor
mov
movsb
jo
jmp
push
adc
push
out
xchg
push
notb
out
stos
popa
out
sahf
aad
and
cmp
cli
inc
sbb
fcoms
aam
jns
stos
add
mov
push
push
outsb
shl
xchg
mov
outsl
incb
popf
sbb
xchg
jp
or
push
out
stc
or
dec
add
int
insl
pusha
js
mov
aaa
dec
daa
xlat
xor
pop
movhps
inc
xchg
pop
call
test
lea
sarb
inc
cmp
mov
scas
sub
inc
mov
xchg
jb
or
and
arpl
and
leave
test
icebp
lds
mov
scas
jne
jl
cld
mov
inc
cs
add
sbb
mov
or
sbbb
les
rcrb
xor
xor
add
scas
adc
jae
add
scas
ret
and
pop
and
outsb
test
es
pop
arpl
lahf
adc
mov
sahf
jge
rcl
icebp
mov
es
and
inc
and
add
sub
movsb
hlt
and
out
xchg
push
nop
jp
inc
inc
jg
dec
dec
push
mov
dec
scas
sub
push
out
icebp
mov
or
and
adc
or
mov
out
pusha
sbbb
repz
push
outsl
fstl
ljmp
and
insb
loopne
shl
aam
sbb
sbb
or
loopne
sub
out
out
and
scas
dec
jne
pusha
push
jmp
add
pop
ss
sbbl
lretw
dec
in
adc
in
mov
xchg
xor
sbb
inc
push
repnz
sub
pop
dec
sub
mov
testb
addr16
xchg
lods
sub
jo
xchg
inc
push
fnstsw
jl
xor
sub
int3
jge
pop
xlat
aam
outsl
aas
stos
push
push
aam
in
jg
ds
aad
lea
stos
push
push
xor
aad
cmp
mov
xchg
in
pop
pop
mov
sub
fsubl
stc
jbe
push
aam
int
pop
sbb
adc
call
fidivrs
jecxz
add
pop
int3
ret
and
nop
lods
mov
cmp
nop
mov
sbb
adc
mov
insb
test
inc
cli
mov
icebp
jecxz
pop
cmp
outsl
dec
sbb
xchg
scas
cmp
imul
mov
adc
shlb
mov
cwtl
add
lea
and
or
jle
pop
in
cs
sahf
inc
cld
addb
js
ffree
mov
loopne
push
xchg
inc
div
xchg
add
xchg
mov
dec
jmp
add
mov
cmp
xor
sbb
dec
jl
cmpsl
adcl
push
loopne
lcall
add
scas
sbb
in
fs
xor
imul
xlat
test
sbb
xor
mov
js
outsl
imul
xchg
mov
mov
sahf
push
fldt
sub
or
in
repz
dec
sub
dec
push
push
add
scas
int3
nop
mov
stos
xchg
bound
sbb
lahf
xor
jns
mov
dec
icebp
out
jnp
dec
push
call
sbb
ja
cmp
xor
cmp
addr16
dec
xchg
movsb
out
push
loope
clc
nop
lock
lea
pop
lods
lret
mov
ljmp
inc
cmp
stos
pop
loope
add
sti
aaa
daa
mov
je
adc
push
fldl
xor
movsl
pop
lock
sub
sbb
aaa
pusha
adc
adc
pop
jge
add
jne
xchg
mov
xchg
jbe
push
pop
bound
pop
fnsave
frstor
mov
mov
addr16
cmpsl
add
jg
adc
rclb
ret
out
add
mov
mov
ljmp
dec
sbb
xchg
mov
arpl
xchg
shrl
daa
scas
es
fcoml
pop
or
ret
xor
cld
insb
mov
fstl
xchg
sub
or
or
sbb
pusha
ljmp
push
xchg
pushf
xchg
adc
jl
push
sub
cmp
aaa
aas
test
sbb
or
mov
jmp
notb
sub
mov
xchg
add
inc
xchg
xchg
out
sti
cmpsb
aam
std
add
dec
out
push
test
sbb
outsb
sub
push
stos
sbb
mov
sub
mov
lcall
stos
pop
push
and
negl
pusha
adc
and
aas
fidivs
sub
outsl
insl
mov
or
fimull
je
cmp
stos
adc
xor
jae
mov
add
jmp
dec
push
xchg
sub
pusha
orb
xchg
insb
fnstenv
inc
fldt
inc
sub
mov
adc
fsubrs
movsl
mov
fstl
fwait
xchg
mov
bound
cmp
fdivrp
jmp
movsl
cs
pop
cwtl
mov
ds
fs
daa
adc
imul
push
sbbl
push
dec
mov
push
and
jns
adc
pop
test
push
pop
outsb
shr
stos
ss
push
into
lock
movsb
test
sub
loopne
xor
mov
inc
leave
bound
inc
inc
mov
and
jmp
push
mov
xchg
rolb
lret
sbb
adc
xlat
pop
je
lea
inc
fisttps
and
mov
mov
pop
out
repnz
push
pop
xor
xchg
imul
test
fdivp
aam
popa
ret
sub
jns
adc
test
ds
outsl
pop
mov
push
in
mov
adc
jecxz
ret
jg
inc
push
sbb
repnz
jne
out
push
inc
xor
movsl
or
jecxz
push
pushf
loopne
popf
loopne
pop
popa
jp
mov
bound
mov
mov
pop
xor
mov
inc
adc
mov
out
xchg
mov
jle
mov
ja
jne
adc
xor
outsl
test
dec
adc
jnp
movsl
fldt
lock
pop
pop
lahf
movsb
push
daa
dec
addr16
cmp
inc
push
xchg
sbb
push
push
mov
fs
jnp
mov
orl
pop
cmp
jns
sbb
cmp
subl
leave
mov
fnstsw
mov
in
mov
xchg
jge
out
icebp
cwtl
sbb
mov
push
clc
mov
push
sub
jbe
sub
sbb
dec
stos
jnp
daa
in
xor
dec
mov
or
jb
jb
mov
mov
dec
aas
rorb
adc
mov
and
pop
pop
sbb
mov
insl
cmc
scas
test
fwait
mov
mov
mov
faddl
sbb
mov
mov
std
pushl
setb
mov
jle
or
out
fcoms
jecxz
and
ja
loop
xchg
dec
adc
sub
cld
orl
push
push
jl
sbb
jb
dec
mov
cmc
mov
push
cmpsb
mov
aas
gs
je
jecxz
lods
jno,pn
enter
dec
or
sub
ss
mov
inc
push
jo
movsl
clc
sub
cmpsl
pusha
xchg
sbb
jmp
pop
fistps
sub
lods
jbe
cmpsb
popf
sbb
push
icebp
mov
fdivrp
je
bound
push
sbb
push
movsl
push
out
dec
jnp
push
sarl
subb
pop
in
scas
sub
jae
lcall
xor
fcomp
mov
das
cwtl
loop
cmp
push
mov
xchg
les
sub
pop
mov
xchg
int
push
xor
stos
mov
mov
int
lret
js
jne
daa
test
or
leave
xor
out
fistl
sti
outsl
jecxz
fldpi
pop
jne
push
fwait
mov
into
setbe
push
icebp
int3
pop
xor
xchg
adc
cmp
or
mov
outsb
ja
daa
xchg
lods
in
cli
mov
dec
push
xchg
adc
jmp
lret
xchg
test
mov
jnp
jmp
push
push
fisubl
repnz
stos
mov
add
mov
sbb
fcmove
fisubrs
jmp
xlat
dec
dec
xlat
pop
add
mov
pop
sub
leave
inc
jno
jne
es
xchg
inc
jmp
fstpl
js
xlat
and
cwtl
mov
repnz
iret
mov
test
cltd
fs
pop
sub
xor
mov
das
fistpl
iret
mov
and
jl
xchg
daa
add
sub
pop
pop
jbe
jb
inc
out
shll
enter
inc
mov
cmc
scas
push
mov
jecxz
jg
mov
js
sarl
pop
jecxz
gs
mov
and
test
test
cli
fnstsw
mov
jnp
fmull
sti
fs
sub
stc
xor
inc
pop
push
dec
lods
imul
inc
test
clc
push
cmpsb
jb
hlt
stc
loop
repnz
push
movlps
ljmp
or
mov
mov
mov
or
sub
adc
pop
push
rcl
xchg
inc
arpl
inc
out
mov
add
iret
sbb
mov
jne
adc
lods
xor
inc
mov
and
cli
out
jle
add
mov
into
aas
sbb
fdivr
fistpll
mov
xor
push
or
sti
push
test
jb
leave
movsl
subl
dec
lret
adc
ja
fs
lods
xchg
pushf
xor
sub
scas
inc
jo
stos
das
mov
xchg
subl
clc
outsl
push
push
jnp
ffree
pop
sbb
xor
mov
mov
outsl
fcmovnb
insb
lret
xchg
in
icebp
pop
dec
pop
inc
and
gs
cmp
sub
js
adc
stos
jae
out
push
xchg
fst
stos
jp
inc
mov
insl
ljmp
or
push
or
test
xor
adc
mov
ss
mov
jbe
lcall
int3
adc
dec
test
imul
mov
jmp
icebp
mov
lock
or
mov
jne
adc
loopne
or
xor
adc
jne
les
mov
push
xchg
test
out
cmpsb
es
mov
mov
stos
fstpl
popf
imul
bound
sbb
push
dec
pop
sub
xor
int
lds
hlt
movsl
dec
or
pop
mov
mov
xchg
test
add
mov
cmp
fbstp
mov
inc
pop
ljmp
mov
daa
mov
push
mov
je
subl
mov
sti
fbld
das
jne
jecxz
imul
and
js
jg
xchg
rclb
lcall
lods
cmp
mov
xorb
loopne
sub
cmp
jns
out
shrb
cmp
xor
fistpll
sub
outsl
push
cmp
lahf
jp
scas
xchg
jl
int
out
leave
push
mov
or
dec
cld
sbb
out
hlt
adc
stc
insl
xchg
int3
pop
iret
push
add
pushf
pop
jb
aas
push
fcomp
sti
mov
mov
cmpsl
loopne
repz
xor
into
dec
sub
out
out
cmp
xchg
dec
fisttps
les
push
push
cmp
push
out
xor
sti
lret
and
ds
cmc
daa
popf
nop
pop
lret
add
mov
pop
push
dec
lods
out
adc
jae
adc
call
mov
pop
adc
or
hlt
pop
sbbb
jnp
mov
jne
cmp
cld
push
xchg
mov
push
jp
imul
xchg
fdivs
add
int
fldcw
outsb
ret
push
or
pop
iret
xor
lods
push
js
int3
mov
jp
dec
lret
adc
aaa
icebp
mov
push
ljmp
test
mov
stos
fnsave
mov
outsl
lods
dec
mov
scas
outsb
bound
int3
repnz
lret
aam
and
mov
shll
ja
jo
jno
ds
std
repnz
sub
push
jb
sbb
es
and
cwtl
and
dec
gs
inc
mov
mov
mov
ret
mov
mov
inc
sub
lds
daa
sub
filds
popa
push
or
test
pop
mov
outsl
xor
jnp
and
xchg
jecxz
cli
add
iret
lret
inc
xor
int3
out
mov
and
pop
fnsave
fistl
stos
fs
mov
push
add
addl
and
repz
lods
inc
push
pusha
in
lea
add
addr16
pop
ss
xchg
adc
add
fcoms
cli
pop
pop
xor
sarl
jb
out
sbb
sub
sub
mov
testl
arpl
inc
mov
data16
xchg
cltd
and
add
jo
insl
shl
aas
jns
xor
nop
jb
cmp
jecxz
scas
xchg
gs
popf
cmc
cmpl
inc
jmp
shrb
xchg
cmp
mov
pop
lret
cmc
sbb
into
arpl
mov
loopne
sub
and
icebp
aaa
addr16
push
roll
and
cli
fucom
push
in
lahf
or
cld
dec
adc
popf
sbb
xchg
and
aas
push
sbbl
jecxz
mov
jns
mov
outsl
cmp
push
aaa
mov
fsubl
mov
jecxz
cmp
aaa
insl
dec
dec
mov
or
lods
xchg
fldt
jne
jnp
test
mov
xor
std
jge
aas
das
mov
pop
stos
repz
dec
loopne
xchg
dec
jns
sbb
int
inc
inc
aaa
cltd
jbe
push
cld
cwtl
and
cmp
mov
in
push
pop
sbb
jle
or
sbb
sbb
pop
xchg
mov
push
add
pop
push
mov
dec
int
push
fcmovb
dec
jle
dec
jl
dec
mov
xor
mov
loopne
mov
xor
pop
mov
mov
fildll
in
dec
lods
ret
sbb
mov
test
inc
pop
insb
push
gs
jle
ret
fidivl
idivb
inc
push
outsl
jno
and
int
push
xorl
cmp
sub
or
mov
mov
jg
faddl
test
adc
ljmp
setl
andl
pop
mull
fwait
cli
mov
mov
andl
jae
inc
sub
inc
cmp
push
jbe
sti
int
push
lcall
popf
xchg
sub
and
lret
jae
addr16
push
leave
pop
ja
sub
std
adc
dec
sbb
loop
and
sub
outsl
or
mov
std
and
mov
xlat
cli
add
cs
fucomip
stos
pop
aaa
leave
inc
mov
jmp
pop
outsl
pop
out
in
mov
mov
sub
orb
mov
push
push
idivl
add
xchg
fiaddl
cld
cmpsl
mov
xchg
pusha
fs
jg
leave
enter
lahf
sub
test
movsl
mov
add
xchg
or
jb
push
sbb
aas
pusha
pop
stos
bound
test
push
andb
lret
ret
push
xorl
test
add
movsl
stc
jo
loop
subb
popa
movsb
cmpsb
sbb
sbbl
filds
sbb
jmp
sub
cmpsb
lods
pop
push
in
imul
inc
xchg
data16
sbb
out
inc
sbb
aad
push
repnz
push
int
sub
hlt
ret
lcall
imulb
mov
ss
sahf
lahf
xchg
mov
xchg
xchg
add
ss
call
mov
adcb
or
es
mov
xor
xchg
call
adc
pop
sub
and
xchg
add
add
or
data16
in
add
pop
xchg
fimuls
test
xor
pop
xorl
and
xchg
or
aam
arpl
xchg
inc
xchg
cmc
out
pop
push
push
push
pop
test
repz
or
or
das
mov
je
add
xchg
sahf
adc
push
ljmp
movl
stos
bnd
adc
sub
or
xchg
mov
es
or
dec
xor
das
mov
cmp
add
add
xchg
pop
dec
mov
mov
clc
cmp
xchg
pop
dec
fmul
les
cli
imul
sub
dec
lcall
sbb
mov
xchg
push
inc
sbb
rcll
pusha
repnz
imull
mov
pop
shl
or
or
xor
stos
push
dec
test
jmp
cmp
push
jae
clc
mov
enter
jnp
pushf
jnp
js
int
mov
fisttpll
daa
fs
fistpl
mov
aad
xchg
mov
mov
xor
cs
pop
out
jnp
imul
sub
popa
adc
cli
pop
push
pop
push
outsl
xor
mov
rcll
out
mov
xchg
push
push
aaa
das
add
jnp
jo
insl
lea
sahf
jne
mov
nop
jae
mov
cmc
cmp
cmp
jl
clc
rcrb
xchg
cmp
mov
cli
icebp
push
adc
ljmp
xchg
push
in
ja
cwtl
lods
repz
or
popa
jle
mov
and
lret
lea
sti
repnz
dec
shrb
mov
sub
testl
sub
jg
or
cltd
test
and
fcoml
popf
push
xchg
push
xorl
jo
mov
ret
jae
rcll
mov
sbb
out
popa
frstor
or
daa
cld
and
or
aas
xchg
pop
add
repz
into
or
notb
xchg
cmpsb
fldl
pushf
fisubrs
fwait
ja
mov
test
sub
or
mov
pop
andl
mov
lds
xchg
js
mov
fmull
push
jl
test
lret
mov
clc
movsb
mov
cmpsb
out
lock
mov
loopne
pop
add
in
xchg
pop
imul
cmp
lock
sub
insl
pop
dec
inc
jge
out
fwait
cmpsb
xchg
mov
adc
scas
cmc
rcrl
sub
cli
add
push
xchg
dec
jns
ja
aaa
enter
and
xor
in
and
hlt
jg
add
pusha
mov
popa
jmp
arpl
jo
dec
fsubrs
and
jl
cmpsl
out
dec
jecxz
add
cmpsb
cmp
data16
insb
xlat
loope
jle
insb
lock
pushf
popa
cwtl
imul
aaa
and
mov
xchg
mov
mov
ljmp
cli
js
dec
pop
int3
add
lea
paddd
pop
cmp
sbb
and
jle
into
scas
pop
sub
fsubr
pop
mov
mov
jbe
mov
and
xchg
hlt
pop
pop
dec
add
lret
addb
push
inc
or
jbe
ljmp
or
cmp
pushf
push
lea
popf
loope
test
or
in
ljmp
sbb
xchg
and
push
adc
out
sub
imul
les
pop
into
data16
push
shll
int3
push
xor
cmp
ljmp
inc
cwtl
mov
repz
cmp
pop
sbb
sbb
insb
inc
cli
loop
shl
pop
mov
dec
idivl
fdivrp
pop
dec
mov
int3
mov
jns
popf
cmc
das
mov
or
lcall
imul
addb
sbb
nop
aad
xchg
mov
pop
lock
sahf
pop
mov
movsb
xchg
rolb
inc
and
pop
leave
ljmp
add
fxrstor
adc
test
push
jmp
jb
hlt
push
out
inc
int
pop
out
inc
iret
and
lea
das
jae
inc
movsl
adc
mov
jo
mov
cmp
pop
arpl
jb
iret
mov
cmp
int
jge
mov
into
mov
xor
bound
fwait
push
dec
cmp
xor
mov
push
and
push
jb
daa
leave
stc
in
cmpsb
loope
mov
inc
and
jge
and
mov
in
and
add
xchg
push
fldcw
aas
insl
cwtl
cmc
enter
fdivl
adc
in
and
xchg
fnstsw
dec
pop
xchg
sub
pop
shrl
and
fwait
popa
and
push
hlt
pop
andl
jle
int3
loopne
mov
es
mov
adcb
stc
lret
add
lock
mov
subb
xorb
enter
mov
fidivrl
xchg
mov
add
mov
xor
push
mov
xor
mov
pusha
repz
xor
fucomp
stos
out
mov
mov
invd
mov
dec
jb
and
mov
jp
mov
cld
hlt
push
ss
xchg
popa
rol
push
cwtl
imul
cmp
pop
xchg
adc
add
int
out
jle
ret
icebp
jp
dec
addr16
arpl
sbb
aad
lea
sub
sub
icebp
ds
loop
mov
xchg
mov
test
pop
sbb
test
or
lahf
fisttps
mov
pushf
push
jmp
sbb
sub
inc
cli
mov
xchg
and
adcl
push
into
and
jge
fstpt
sahf
mov
jp
pushf
xlat
jg
lods
loope
xchg
enter
popa
mov
or
insb
or
push
jb
dec
sbb
sbb
xchg
dec
mov
and
sbb
xchg
push
or
or
xchg
inc
and
pusha
ret
popf
test
hlt
cli
cmp
jecxz
xchg
daa
jb
hlt
pop
mov
ljmp
push
sub
lds
lods
leave
fldt
fsts
pop
imul
xchg
out
jecxz
or
cmc
aad
pop
push
aas
cmpsb
lods
int3
pop
mov
jne
scas
add
sbb
and
fadds
cmp
xor
daa
mov
testl
cmp
test
cmp
ret
iret
fsubrl
xchg
mull
mov
movsl
mov
imul
sub
lods
inc
adc
stos
dec
lods
add
adc
push
or
cmpl
mov
sti
test
stos
into
js
fidivl
je
daa
lret
sbb
incb
outsl
push
mov
das
mov
pop
jne
call
sbb
outsb
jb
pop
lea
lahf
pop
enter
pop
xor
pushf
pop
inc
outsl
cmpl
inc
sub
xchg
sti
xchg
fs
inc
mov
xchg
push
xor
cmp
inc
push
add
fdivl
inc
inc
pop
sbb
dec
repnz
test
into
adc
outsb
fsubrl
jl
dec
ss
sbb
jbe
pop
xchg
or
cmp
sti
or
iret
scas
pop
adc
inc
push
cmp
mov
shrl
push
and
std
push
mov
js
subl
pop
stos
loope
adc
sub
mov
loop
imul
jnp
xor
sub
mov
and
add
lahf
mov
arpl
xor
mov
jns
loope
cmp
pop
out
ja
aam
test
scas
loop
sti
lret
mov
arpl
out
test
sub
adc
lret
insl
jge
fistl
std
push
push
mov
out
sub
or
in
aad
test
loope
jae
test
mov
movb
out
jno
cs
push
mov
and
push
xchg
testl
lret
mov
adc
repnz
and
cmpsl
add
mov
ja
arpl
jg
leave
inc
insl
inc
xor
pop
xchg
xor
push
popa
pop
dec
aaa
jl
sub
sub
inc
mov
int
push
add
in
dec
add
jns
fbstp
cmp
jge
xor
scas
sbb
aad
cmpsl
popa
stos
fcmovnb
adc
pop
mov
inc
mov
cmpsl
sbb
addr16
pushf
push
cwtl
lea
push
shll
ret
xchg
repz
sbb
inc
cs
aaa
lock
cmpsl
xor
and
jle
sub
ret
add
sbb
add
aad
lea
fwait
push
repnz
pushf
inc
sbb
or
jl
jno
sar
sub
lcall
mov
lcall
jle
push
sbb
mov
add
add
sub
mov
mov
notb
inc
jp
mov
dec
andb
addb
aam
lock
mov
ret
iret
push
lea
jle
arpl
adc
sub
add
mov
jp
repz
dec
inc
mov
cmpsb
mov
adc
mov
mov
pop
or
jmp
gs
cmp
movsl
iret
jb
inc
mov
mov
mov
pop
outsb
aas
xchg
mov
push
out
jg
fstpl
mov
push
xchg
add
dec
lcall
stos
jb
jno
enter
cmp
test
jg
pop
push
xchg
pop
cmp
mov
movsb
sbb
cmc
in
divl
icebp
and
mov
mov
out
or
dec
sti
xchg
pop
jbe
lea
das
mov
xchg
sbb
add
loope
push
jmp
cmpsl
xchg
sbb
xchg
cli
enter
mov
in
jns
adc
mov
shlb
std
cmp
addl
lea
jg
mov
nop
in
inc
jbe
int
xchg
jecxz
mov
push
std
pop
xor
adc
inc
pop
xor
pop
mov
push
cld
inc
rclb
xor
cmp
mov
cmp
jo
xor
add
adc
adc
mov
imul
add
test
fnstcw
push
out
cmp
fwait
push
sub
add
xchg
and
cmp
mov
mov
push
or
notb
add
cmpsl
xchg
popa
dec
add
xor
ljmp
mov
sub
sbb
pushf
mov
lret
rol
adc
xchg
adcb
in
lods
mov
jbe
mov
xor
nop
dec
aaa
or
inc
mov
mov
mov
sbbl
dec
push
aaa
fstpt
xor
int3
imul
jns
cmp
clc
roll
mov
dec
cmp
ret
xor
or
popa
add
mov
in
adc
ds
aad
push
push
out
aad
inc
imul
inc
xor
sarl
loope
dec
fdivs
scas
mov
popa
or
call
jno
push
in
mov
lock
ret
test
fcmovbe
lcall
mov
cmpsl
push
mov
imul
mov
cmp
mov
ret
cmp
jp
cmp
add
jne
jo
insb
clc
pop
push
jb
mov
lcall
push
add
lock
jecxz
insl
mov
inc
jns
and
aas
repz
mov
pop
popf
gs
sbb
inc
dec
sti
or
pop
jno
and
and
decl
add
add
lret
addr16
sbb
rorl
cmpb
sub
cltd
das
and
and
adc
or
cmp
mov
or
mov
test
mov
and
in
rol
cmp
ret
aas
pop
jle
shr
pop
jecxz
mov
movsl
jl
sbb
arpl
cwtl
sub
in
jbe
dec
jecxz
lods
pop
jne
inc
pop
pop
leave
add
sbb
shlb
lea
mov
or
daa
sbb
scas
mov
mov
xchg
push
aam
push
stos
adc
and
shll
mov
in
fcompl
push
xor
and
sub
and
popa
mov
inc
pop
jnp
xor
aam
push
aas
arpl
add
fcmovne
test
xchg
out
mov
and
cmp
cmp
jg
lock
call
dec
fstl
add
mov
cmp
cmc
popf
jnp
push
xor
jp
insb
xor
dec
mov
or
pop
es
notl
fdivr
or
sbb
divb
xor
jge
bnd
cli
mov
mov
push
jl
repz
inc
je
aad
das
lods
fnsave
mov
add
cmp
and
popa
mov
aad
pop
jle
jno
jg
sahf
jmp
jnp
push
out
mov
shll
adc
cwtl
inc
int
lret
and
fdivrs
scas
xor
dec
arpl
ss
stos
pop
push
jmp
leave
ja
xchg
jno
insb
outsl
out
push
xor
movsl
and
or
sbb
sbb
frstor
sbb
mov
ja
xchg
and
out
and
rcr
cmp
push
rorl
in
pop
je
stos
mov
pop
jb
lods
pushf
jp
repz
pop
push
mov
aas
and
cmc
and
popa
cmp
fildll
pop
xchg
test
outsl
lods
inc
mov
jg
pop
push
xchg
mov
negl
or
cld
int3
add
lock
pop
xorl
movsb
in
in
mov
lret
andl
adc
and
cmpsb
dec
xor
cmp
imul
das
mov
inc
xor
push
xor
pop
scas
iret
jns
jno
push
fidivl
in
adc
xchg
gs
je
mov
test
or
mov
mov
pop
mov
sbb
mov
mov
add
cmc
inc
mov
fdiv
cmp
inc
clc
mov
std
mov
mov
sarb
fstpl
inc
and
and
xor
popaw
jmp
lea
mov
jl
fisubl
lcall
adc
and
push
call
call
mov
pcmpgtw
popf
pop
int3
cmp
pusha
repnz
xchg
or
daa
dec
mov
add
sarb
adc
mov
gs
jp
add
mov
cmp
mov
mov
mov
pusha
push
push
in
sbb
adcb
not
scas
inc
xor
and
ficompl
test
inc
mov
mov
out
jmp
fidivrl
sbb
adc
lock
jg
int3
sbb
mov
nop
mov
mov
dec
pop
jae
not
sbb
jecxz
jle
lea
js
or
adc
adc
dec
aad
sub
stos
inc
shrb
add
test
int3
daa
lcall
test
lock
cmc
shl
xchg
xchg
pop
std
jns
iret
test
jge
sarl
mov
fistpl
cmpsl
bnd
lahf
cmp
lahf
inc
je
outsl
pop
fildl
xchg
dec
std
pop
addl
push
sub
clc
push
xchg
ret
daa
jae
jmp
sub
adcl
ja
mov
test
mov
mov
popl
arpl
push
aam
lods
mov
fld
gs
sbb
cld
mov
pop
adc
idiv
jge
push
push
or
pop
lret
cmp
cmpsl
push
addl
clc
or
push
jo
and
std
std
dec
mov
lret
sbb
fs
xor
jmp
das
xor
push
push
and
sahf
mov
inc
adc
in
xchg
das
push
and
xor
add
mov
fidivl
cmpw
push
dec
mov
in
nop
aad
ret
scas
sarb
add
lods
aaa
shl
jg
push
scas
lret
or
cmp
mov
push
scas
dec
cltd
insl
les
test
push
push
add
add
adc
push
mov
mov
fdivrp
dec
ficompl
xlat
dec
mov
add
rclb
sbb
jns
std
push
out
andb
lret
xor
cltd
int3
add
inc
xchg
cli
jnp
add
push
jmp
xchg
call
loopne
cmp
adc
ja
fiaddl
xchg
fcompl
lahf
jg
cmc
mov
out
adc
out
ret
mov
push
lcall
iret
icebp
outsb
and
dec
dec
push
out
nop
push
aas
notl
adcb
repnz
mov
loopne
inc
inc
pop
enter
push
xchg
pushf
inc
fwait
cs
fs
dec
loope
lock
mov
loop
xor
fildl
inc
gs
into
mov
jle
dec
xchg
imul
xchg
std
pop
stc
dec
imul
cmp
int
or
cld
pop
outsl
push
dec
stos
inc
sbb
ret
xor
mov
xchg
fs
sbb
dec
subl
fldcw
dec
fistpll
test
arpl
xchg
and
in
ret
sbb
shrb
lcall
sub
out
xchg
mov
mov
sub
jb
rorl
xchg
ja
int3
nop
xchg
adc
insl
mov
mov
test
aas
ret
movsb
aam
sahf
int
inc
ja
mov
sub
mov
xchg
leave
rcll
jp
out
push
outsb
sahf
out
jne
outsl
out
aaa
xchg
push
popa
push
divb
repz
xor
push
jbe
icebp
add
push
cltd
add
repnz
repz
dec
data16
push
pop
daa
and
sub
aam
inc
shl
mov
fidivrl
mov
lds
lret
mov
into
jp
cltd
or
iret
adc
dec
shlb
ret
inc
mov
aas
inc
out
dec
stos
pop
faddl
xor
clc
cs
add
in
or
fwait
aas
xchg
js
mov
int3
jle
pop
xchg
push
loopne
cmp
enter
out
adc
and
arpl
dec
fisubrs
push
mov
fdivs
xchg
xor
jbe
data16
das
or
and
fstps
jnp
xchg
fbstp
loope
jne
fimuls
stos
fstps
das
rolb
outsl
sbb
ret
sbb
insl
data16
inc
jns
loopne
mov
adc
jmp
add
out
sub
movsb
arpl
inc
add
enter
outsl
lds
loop
mov
cs
inc
push
adc
adc
mov
lret
jb
sbb
cld
push
mul
fstp
xchg
mov
mov
jge
fldl
or
insl
ja
jne
add
mov
adc
mov
les
xchg
sub
ss
xlat
pop
popf
stos
popa
test
pushf
test
fwait
lds
leave
clc
and
adcb
mov
testl
jg
cmpsb
movl
push
cmc
xor
in
or
cmp
clc
rcr
jecxz
adc
call
mov
lcall
inc
daa
shrl
insl
lcall
add
jae
into
xor
inc
nop
repz
loop
dec
xor
pop
inc
cwtl
bound
inc
sbb
pop
and
call
xlat
popa
ss
inc
iret
lret
cmp
in
daa
into
stc
dec
aaa
ja
pop
cs
lods
mov
std
push
rorb
fisttps
jb
mov
mov
in
and
fdivs
xor
jo
aam
and
aas
hlt
push
mov
stos
pop
mull
dec
or
imul
push
push
xor
insb
imul
sbb
aad
stc
adc
addr16
mov
jo
pop
fdivrl
xor
mov
fcoml
mov
cmp
shl
push
mov
adc
movsb
pop
mov
push
js
dec
in
je
divl
dec
stc
ja
mov
ficoms
push
psubw
mov
push
aas
mov
inc
xor
mov
mov
outsb
scas
sbb
shll
mov
lea
sub
sub
sti
insl
lahf
sub
dec
and
pop
popa
sbb
push
xorb
hlt
mov
sahf
xor
in
mov
jns
pop
das
and
push
fcmovnb
incl
sbb
sub
sub
xchg
cli
sahf
sbb
xchg
jle
mov
push
adc
aam
dec
pop
les
xor
jno
aaa
push
popl
sbb
push
sub
sbb
xchg
sti
mov
jae
inc
stos
or
cmp
mov
jecxz
ss
std
cltd
jmp
push
jno
jl
cmp
adc
lret
sti
sarl
pusha
data16
cld
mov
push
ja
mov
into
mov
inc
or
inc
jne
cmpsl
iret
push
outsl
aaa
jb,pn
fwait
pop
dec
testl
lahf
scas
pop
add
bound
sbb
jbe
adc
sbb
mov
mov
dec
cmp
pusha
push
incl
mov
imul
ret
jb
test
paddq
stc
pop
punpcklwd
sbb
add
jmp
pusha
aam
cmp
cmp
out
xor
xchg
mov
xchg
les
inc
cmp
lahf
sti
stc
mov
and
mov
sbb
les
or
shll
rcrl
jb
dec
add
enter
xor
xchg
or
fnsave
fwait
adc
mov
divb
into
mov
or
add
js
jp
cmc
rcrb
repnz
or
sub
xor
jmp
adc
inc
lods
cli
in
test
stos
in
insb
scas
sub
mov
loopne
xchg
push
jmp
jmp
ja
repz
dec
sbb
and
add
mov
ss
iret
mov
add
adc
cmp
sbb
data16
imul
stc
dec
and
jns
dec
add
pop
push
imul
out
in
push
mov
fdivl
popf
adc
adc
and
cld
xor
inc
call
pop
outsl
inc
xchg
shrl
mov
mov
jbe
mov
inc
dec
into
pop
test
bound
fwait
insl
pop
pop
inc
mov
and
xchg
inc
mov
push
and
lcall
sub
ret
int3
mov
inc
inc
testb
pop
subl
std
sbb
mov
pop
cmpsb
inc
adc
lds
nop
dec
xchg
call
int3
imul
adc
jae
xor
sbb
mov
iret
movsb
mov
dec
outsb
cmpsl
fs
das
and
pop
sub
out
and
sbb
nop
add
add
out
add
inc
lods
push
xchg
mov
push
orl
xor
push
js
fs
lcall
icebp
mov
rcrb
pop
lds
dec
repnz
sbb
test
dec
push
aaa
test
xor
jne
aas
push
lcall
pop
mov
out
sub
fldl2t
scas
adc
sub
in
pushf
sbb
jg
imul
mov
cmp
test
out
mov
sbb
std
movsl
nop
add
push
pop
imulb
sbb
xchg
dec
jno
jecxz
xchg
sbb
push
mov
jl
xchg
cltd
repz
dec
inc
jo
xchg
cmp
loopne
test
mov
dec
ss
aaa
mov
loopne
xor
sarl
call
nop
das
bound
dec
popa
mov
fistpll
stos
xor
or
cld
cmp
dec
in
push
sbb
es
mov
pop
mov
cmp
jecxz
pop
out
jno
inc
pop
roll
jne
pop
sbb
insl
cmp
pusha
and
xlat
jne
lcall
paddusw
sarb
in
aam
xchg
addl
and
lock
cld
mov
pop
cmpsb
jae
sbb
jae,pt
fimull
pop
rclb
popf
pop
add
mov
mov
push
out
fstpt
inc
fistl
mov
push
adc
mov
xor
push
inc
dec
push
clc
mov
lret
or
test
js
fistps
dec
or
data16
cli
in
xchg
idiv
clc
imul
push
out
or
dec
les
lret
lcall
xor
pop
xchg
loope
scas
loope
jmp
icebp
inc
sbb
movsl
and
and
pop
lock
cwtl
mov
pop
pop
or
inc
mov
lods
cmpsb
cmp
daa
inc
lahf
inc
sub
push
xorb
and
lcall
xorb
dec
in
aam
sub
or
flds
sub
cmp
mov
mov
or
pop
push
jnp
call
or
mov
jge
xchg
xchg
push
daa
jne
push
mov
cmpsl
imul
sub
dec
xchg
or
mov
push
xchg
into
xchg
sub
insb
and
mov
mov
cmc
test
jg
mov
push
mov
sbb
incl
mov
push
scas
xchg
scas
mov
cmpsb
cmp
sbb
cmpsl
adc
sbb
dec
roll
fstpt
push
mov
stos
push
scas
arpl
loopne
mov
scas
ror
es
push
ret
fsts
xchg
aad
pop
subl
mov
lret
lods
xlat
pop
outsb
sbb
jmp
xchg
or
lods
dec
icebp
xchg
cmpb
popf
adcb
mov
xchg
xchg
lret
xchg
imul
test
scas
ret
inc
sbb
jne
pop
les
daa
inc
or
and
call
es
sub
push
cmpsb
popa
sbb
outsl
xchg
pop
scas
pop
cmp
loop
or
cmp
mov
sub
pushf
dec
jge
outsb
mov
sahf
lcall
cmp
mov
rorl
and
adc
xchg
push
push
lret
sti
fiadds
sub
mov
shll
sub
adc
jno
sbb
inc
ljmp
inc
test
mov
popf
add
lds
imull
andl
mov
xchg
sub
xchg
mov
inc
popa
leave
add
nop
add
jmp
daa
repz
push
jge
jecxz
xchg
mov
aas
dec
faddl
jg
sbbl
jg
jmp
add
pop
mov
or
lret
sbb
inc
mov
sub
jns
out
mov
loopne
in
lret
jo
in
je
lods
lods
test
lea
cwtl
adc
push
rcrb
push
insb
loopne
stc
pop
add
in
jecxz
pusha
mov
sbb
pushf
sbb
rorl
mov
enter
aad
sbb
popf
cld
pop
push
cmpb
xor
stc
aam
jne
stc
xchg
or
sbb
mov
cld
and
rdmsr
mov
mov
mov
pushf
push
mov
jg
jb
data16
push
add
xchg
mov
sbb
xchg
mov
and
shll
mov
lcall
sub
inc
outsl
call
push
mov
ss
xchg
mov
xlat
adc
stos
mov
pop
push
leave
gs
push
and
cltd
push
inc
adc
sub
adc
sbbl
or
pop
adc
sahf
sbb
mov
push
sub
sbb
mov
push
add
add
or
mov
xchg
pop
pop
or
and
test
rcll
cmc
addb
jge
mov
sbb
jb
ljmp
pop
aam
scas
or
add
lds
sti
push
sarl
add
add
call
and
test
xor
inc
xor
and
dec
and
scas
leave
int3
int3
fiaddl
mov
ljmp
mov
cld
mov
push
or
lea
notb
lock
cmpsb
add
pop
jae
out
aas
and
int
push
sbb
movsb
jl
push
fs
xchg
xor
pop
lret
pop
mov
pusha
and
push
cmpsl
ret
and
loopne
sub
and
inc
xchg
cmc
je
add
stos
mov
cmpsl
cmpsl
sbb
push
test
pop
or
sahf
in
mov
call
outsb
mov
das
or
sub
out
in
bound
inc
sub
jnp
aaa
add
mov
pushf
sbb
lods
xchg
cmp
pusha
mov
push
push
test
mov
ljmp
push
mov
sarl
sahf
or
aam
out
or
and
mov
rcrl
orb
or
cmp
loop
add
adc
int
ss
push
push
push
pop
sbbl
rorb
out
outsb
sbb
jl
mov
and
dec
movsb
movsb
xchg
fisttps
push
arpl
sbb
xchg
push
sub
test
xchg
movsb
add
add
stos
push
pusha
fld
adc
xchg
or
stos
lds
outsb
mov
jg
dec
ftst
lds
shll
add
mov
loop
inc
mov
call
jbe
test
shrl
or
xor
xchg
cmp
out
adc
aas
mov
jbe
or
sub
or
mov
loopne
dec
in
mov
test
dec
adc
dec
movsl
cmpsb
jmp
subb
pusha
mov
lret
dec
pop
cmp
sbb
adc
push
mov
push
mov
popf
jnp
mov
jmp
aaa
push
push
cld
ficoms
out
sarb
mov
sbb
scas
scas
cmp
xchg
adc
sbb
imul
or
into
cmpsb
add
or
and
xor
stc
jecxz
push
push
add
sbb
lahf
int
xchg
test
jmp
movsl
stos
mov
lahf
mov
scas
sbb
jle
test
add
xchg
jmp
adc
ljmp
inc
xchg
sbb
mov
leave
std
in
enter
enter
adc
lock
int3
cltd
or
in
push
ljmp
les
xor
xor
lret
or
std
test
mov
add
popa
lds
orl
pusha
push
cmp
mov
sbb
out
push
xchg
repnz
dec
cmp
mov
pop
test
xor
mov
push
or
imulb
add
int3
xchg
rsm
mov
push
aad
repz
aas
add
xchg
inc
scas
push
pop
insl
lcall
xchg
lock
mov
lahf
inc
xchg
mov
inc
into
jmp
or
xchg
test
mul
insb
and
dec
fstl
out
cmpb
lret
inc
cld
fldz
mov
aaa
add
adc
clc
jge
dec
gs
xorb
ds
sub
push
test
pusha
push
ret
stos
cmp
dec
movb
shll
cmp
out
das
sub
movsb
sub
jge
or
js
xchg
mov
jge
pop
pop
jbe
lock
push
inc
imul
xchg
addr16
inc
stc
in
xor
mov
adc
clc
pop
xchg
xor
mov
xor
jg
pop
lret
imull
repz
sub
or
out
adc
pop
mov
xor
xor
rcll
loope
xchg
mov
arpl
and
pop
ret
fcoms
jecxz
dec
xchg
ja
or
imul
mov
pop
add
sbb
xchg
sti
pop
cld
icebp
mov
cmp
sbb
arpl
sub
fdivs
mov
xor
popf
stos
push
jns
xchg
cmp
sub
adcl
mov
das
sbb
ret
push
mov
push
add
or
cmpsb
mov
mov
dec
xchg
jns
cmp
jae
jb
mov
loopne,pt
or
out
sarb
pop
jne
clc
les
jg
mov
sbb
cmp
loopne
mov
lahf
mov
ror
inc
movsl
insl
add
mov
sbb
xor
push
out
imul
mov
jbe
sbb
pop
and
jg
dec
fnsave
outsb
lods
hlt
fidivs
jmp
cmpsl
dec
xor
sbb
out
mov
push
adc
pushf
sbb
push
cmp
ja
xor
out
ja
hlt
xlat
pusha
inc
and
and
push
inc
cmp
adc
xchg
in
in
insb
adc
xchg
fildll
cmp
and
in
add
int
mov
fs
jmp
jno
mov
cli
popf
daa
das
jge
in
cwtl
clc
stos
adc
xor
and
aam
das
sbb
dec
mov
daa
aaa
xchg
mov
out
pop
popa
mov
aam
push
bound
jle
sbbl
sub
ja
loope
and
out
fldl
stos
mov
sbb
pop
add
push
addb
mov
push
mov
jecxz
addr16
insb
jg
dec
lahf
jge
jecxz
jne
cwtl
iret
stos
adc
sbb
xchg
gs
pop
test
mov
cmc
aad
pop
push
add
jnp
jae
add
lret
test
jg
imul
mov
or
jnp
jne
cmp
hlt
rol
divl
leave
jns
mov
mov
fwait
stos
cltd
dec
mov
dec
shlb
imul
pusha
in
xchg
mov
std
shr
cli
shl
and
popa
cwtl
cltd
mov
dec
mov
shrl
mov
fwait
sub
jle
mov
inc
dec
mov
mov
fistl
int3
mov
mov
std
jns
mov
lock
inc
xor
mov
pop
cmp
ds
iret
sbb
pop
mov
pop
cmpsb
out
sub
icebp
push
sti
test
inc
push
push
cwtl
ror
jg
inc
pop
or
out
std
repnz
dec
push
push
mov
fistl
stc
mov
aaa
out
in
cmp
jno
jp
mov
jb
xchg
mov
push
push
xor
jns
ret
cmpsb
out
jbe
inc
in
xchg
ss
scas
fs
mov
push
mov
dec
aad
icebp
or
mov
xor
cmp
jmp
sub
sbb
cmp
nop
insb
test
paddq
cs
enter
and
data16
inc
cmp
push
cmp
sub
xor
pusha
leave
push
pop
cli
cmp
fists
cmp
rcrb
xchg
sahf
jb
ret
pushf
daa
cmp
sbb
pop
jo
mov
lds
sbb
cmp
inc
inc
popf
ds
cli
jle
insl
imul
test
gs
xor
std
bound
lret
push
ret
cwtl
push
sbb
sbbb
pop
inc
push
or
out
stc
xorl
insl
lret
push
pop
adc
fsubrs
add
and
cmp
jp
push
pop
push
stos
mov
jbe
loopne
jmp
jmp
rolb
dec
add
mov
outsb
dec
or
test
push
cmp
gs
mov
fs
add
pop
push
or
dec
stc
sbb
cmpsl
and
mov
aam
out
inc
jle
sub
push
xchg
in
xor
dec
or
test
loopne
mov
push
dec
je
sub
inc
and
inc
sub
es
ret
mov
lret
mov
jmp
imul
sub
cmp
in
jnp
rolb
sbb
jmp
mov
dec
mov
lahf
add
out
mov
jge
gs
jb
and
mov
sub
nop
xor
test
jne
xchg
mov
mov
or
mov
out
insl
dec
fstpl
pop
mov
std
and
dec
cmp
popf
frstor
inc
mov
xor
insb
sbb
dec
in
fcompl
jl
cwtl
mov
int3
cmp
xchg
mov
and
stos
mov
rol
inc
inc
adc
cmp
adc
xor
pop
push
dec
aaa
movsl
fs
pop
lcall
inc
adc
rorl
aad
fs
adc
jnp
push
fidivrl
popa
xchg
popf
imul
lret
xor
pop
push
mov
push
pop
pop
mov
ja
mov
sbb
or
xchg
psllq
sti
mov
shlb
shlb
dec
and
mov
das
cmp
xor
mov
arpl
nop
mov
repz
mov
add
das
lret
icebp
push
in
add
sbb
outsl
lea
bound
mov
ds
add
mov
shll
adc
leave
mov
xchg
andl
imul
cmpsl
pusha
shl
jo
cmp
int
aam
outsl
dec
clc
cmp
pop
in
pusha
lret
ja
xchg
pop
push
scas
xchg
cld
jae
insl
test
dec
testb
jno
mov
mov
jge
xchg
cmp
add
mov
test
mov
xchg
pop
push
cld
pop
loope
cmp
lea
dec
stos
push
lahf
pop
add
or
call
or
mov
push
out
xchg
imul
or
sub
rorl
int
jns
cmp
xchg
fmull
mov
dec
icebp
mov
xor
pushf
jge
add
mov
cmp
mov
mov
dec
ror
insb
testl
fistpll
stc
push
gs
movsl
cmp
add
sub
jecxz
cltd
or
cmp
nopl
pop
sbb
pop
mov
cwtl
push
test
cmpxchg
and
test
pop
fwait
lcall
cmc
mov
pop
in
jle
dec
test
int3
lods
mov
add
pop
push
cmp
sbb
es
mulb
cmp
subl
loop
mov
jno
pop
mov
test
ret
in
aaa
lods
mov
shrl
pop
pop
sbb
mov
test
imull
cli
cmp
out
int3
xchg
sub
pop
adc
dec
mov
dec
jl
sbb
xor
pushf
inc
in
enter
cmpsl
xchg
mov
cwtl
sub
xchg
rolb
inc
jne
lock
adc
jnp
or
sti
xchg
xchg
clc
push
sub
add
pop
jno
lods
xchg
enter
jno
cs
and
push
jle
aam
sub
xchg
dec
movsb
pusha
sahf
stos
jecxz
xlat
xchg
mov
push
adc
push
js
add
fadd
pop
pop
and
subl
div
push
sub
sbb
sbb
cmp
xchg
xchg
dec
outsb
add
clc
dec
push
add
mov
jg
scas
shll
push
or
scas
mov
mov
das
push
dec
gs
push
pop
xor
test
call
lds
fcmovbe
sbb
sti
or
pusha
jp
scas
aam
xor
cli
jae
jg
dec
lods
in
cwtl
push
orl
xchg
stos
pushf
cmp
mov
lret
out
loop
test
aad
cmp
push
pop
jnp
xchg
cmpsb
and
ss
mov
mov
pop
ret
mov
adc
inc
test
js
pushf
jne
inc
push
mov
or
add
fs
jle
enter
test
lret
int3
dec
pop
ljmp
xchg
pushf
sbb
fisttpll
dec
add
sub
cmp
int3
clc
adc
lahf
inc
xchg
addr16
movsb
insb
std
mov
xchg
popf
pop
jecxz
xor
cmc
jno
mov
aas
int3
mov
std
jg
ret
cmpsb
mov
sbb
adc
push
pop
test
imul
sbb
faddp
add
addl
sbb
scas
pop
jecxz
fldt
or
outsb
push
loopne
nop
jmp
xor
shrb
jp
mov
fisubl
dec
sub
adc
push
inc
inc
push
bound
outsl
fistpl
or
dec
pusha
aad
mov
xchg
push
bound
sub
add
scas
jno
fwait
mov
fdivrs
mov
ret
add
inc
stos
mov
hlt
insl
push
xor
dec
mov
add
jmp
fbld
mov
or
out
aam
lcall
jmp
andb
mov
daa
rclb
sbb
call
in
ror
scas
add
mov
movsb
sub
or
fisubs
xchg
leave
xchg
push
xor
ret
lods
sbb
lret
push
jo
add
add
pop
gs
in
insl
mov
stos
mov
xor
out
scas
stc
pop
enter
addr16
aaa
xchg
dec
mov
mov
jo
pop
adc
call
xchg
fwait
sbb
dec
jns
imul
add
jecxz
pop
loope
sbb
clc
jp
cmpsl
and
sub
sub
inc
adc
jae
jno
push
nop
pop
fdivrs
mov
mov
fidivrs
pusha
out
aam
jecxz
adc
add
in
shr
outsl
fldl
push
xor
les
fwait
jmp
cmp
jns
mov
imul
xchg
xchg
add
mov
sub
lock
sbb
pop
lret
enter
inc
iret
pop
sbb
out
pop
dec
sahf
ret
xchg
flds
bound
add
cmpsl
out
dec
dec
cmp
call
mov
jns
stos
cmp
popf
add
sbb
and
pushf
ljmp
cmp
adc
xchg
pop
inc
in
pop
jb
out
dec
mov
mov
pop
stos
leave
sub
sub
and
add
mov
sub
push
pop
dec
push
in
dec
repz
dec
adc
fwait
xchg
popf
xor
lods
hlt
sbb
aad
cltd
xor
clc
jae
jb
andnps
dec
xlat
outsl
loop
xchg
pop
mov
sbb
cmp
iret
inc
and
repz
mov
pop
mov
add
outsl
ljmp
lcall
jge
sbb
into
cmp
fistpl
dec
mov
add
mov
enter
lea
pushf
mov
lea
and
inc
fsubrl
cmp
test
and
int3
adc
popa
mov
inc
movsbl
out
mov
jb
in
js
notb
ss
mov
cli
inc
dec
mov
scas
mov
add
scas
cmp
loop
xchg
js
cmp
repz
pusha
popa
test
ret
lret
jmp
xor
sbb
ja
fwait
inc
nop
and
jp
int
push
adc
cli
jo
cmc
sbb
leave
xchg
or
mov
dec
jo
mov
hlt
in
sbb
mov
mov
and
imul
dec
jge
mov
dec
mov
pop
xchg
jb
adc
add
dec
int3
xlat
icebp
xchg
push
sub
inc
dec
jns
or
loop
xor
insb
insl
and
jb
ja
or
rol
lcall
movb
push
in
mov
mov
dec
sub
push
cli
pop
add
sub
xchg
push
fdivp
or
jp
jo
mov
adc
call
movsb
aaa
out
stos
push
dec
aad
mov
fdivrs
dec
dec
mov
xchg
aad
filds
mov
and
int3
call
and
inc
adc
shrl
xor
push
adc
sbb
mov
mov
sbb
cs
es
aam
test
add
inc
or
fnstenv
fsubrl
mov
lea
in
adc
jnp
ljmp
pop
pop
cmp
aad
lea
xlat
stc
push
out
test
or
stc
mov
or
daa
int3
dec
loop
mov
sarb
pop
dec
fidivrs
dec
shlb
sub
mov
enter
pop
jecxz
repnz
loopne
mov
pop
fcoml
outsb
or
adc
daa
sub
or
inc
fimuls
mov
mov
cmpsl
pop
out
lods
aam
pop
inc
cmp
adc
sbb
test
sti
cld
icebp
test
clc
loope
xorb
and
add
cs
add
mov
mov
cmpsl
rcrl
push
jns
aaa
stos
push
mov
jp
inc
sub
push
sub
les
sbb
leave
push
cmpsb
aaa
xchg
and
mov
sub
mov
xor
xor
cmp
pusha
dec
fdivrs
outsb
jecxz
mov
jae
ret
mov
out
js
mull
data16
inc
cmp
jg
pop
adc
jnp
test
push
fcoml
inc
sub
push
dec
imul
xchg
inc
push
cmpsb
add
jmp
xor
mov
fimuls
mov
fsubrs
push
sub
xor
push
aam
mov
pop
enter
xor
xor
adc
xchg
imul
fldenv
call
arpl
mov
xchg
fsubs
pop
or
fsubr
sbb
loope
out
ds
push
jge
xchg
negb
mov
pop
sbb
jmp
shll
mov
clc
and
ret
int3
and
sbb
mov
cli
mov
ror
xchg
and
inc
xor
imul
arpl
jb
mov
xchg
sub
push
xchg
pop
testb
and
scas
fs
adc
push
mov
pop
lods
mov
mov
push
adc
inc
rcrl
push
mov
shl
shrb
dec
repz
test
dec
push
js
adc
jmp
mov
jb
push
sbb
sti
scas
push
out
mov
xchg
push
imul
inc
popf
mov
loop
xchg
add
arpl
fmul
mov
push
pop
cli
dec
mov
js
cmp
jno
pusha
xor
adc
sub
outsb
lods
roll
out
icebp
add
sbb
movsb
sbb
xchg
movsb
nop
inc
out
adc
add
daa
dec
mov
push
cmpsl
clc
mov
lcall
and
sbb
ss
cmp
scas
int
inc
aas
push
mov
xor
xor
or
mov
out
mov
push
dec
sbb
ret
sbb
push
xchg
repnz
fisubrl
ss
outsb
fwait
ret
dec
add
es
and
stos
dec
adc
sub
popf
adc
aam
dec
ret
insl
outsl
or
push
mov
mov
out
push
adc
mov
inc
pop
push
add
pop
lock
aam
or
aad
enter
pop
rorb
stc
cwtl
lahf
lret
add
and
pop
or
xchg
rorb
std
in
testl
mov
mov
push
lds
inc
pop
jmp
popa
inc
lret
xchg
jbe
jle
enter
js
int
sbb
fsubrs
mov
mov
sbb
adc
add
mov
push
aaa
ret
pop
sbb
pop
jns
shl
xchg
mov
cmp
mov
out
jg
pop
stos
xchg
jle
dec
pop
ficomps
movsb
mov
lods
mov
xchg
ss
cmp
and
mov
fs
movl
dec
in
sahf
adc
jo
or
pop
das
dec
in
out
jp
ss
cmc
dec
sbbl
cmp
add
mov
inc
add
jnp
mov
cmpsb
add
jo
out
and
push
sti
dec
xchg
and
add
mov
mov
xor
pushf
mov
bound
cwtl
pop
sbb
imul
or
xor
jnp
sahf
pop
mov
fldcw
ret
sar
inc
inc
scas
lret
jmp
subl
movsl
cmp
cmp
sbb
scas
enter
repnz
jge
inc
fadds
adc
adcl
fwait
dec
jbe
jl
mov
std
mov
sarb
pop
mov
out
mov
xor
jmp
hlt
ljmp
cmp
push
xor
lock
fcmovnbe
sbb
test
mov
or
lcall
lret
pop
pop
push
cmp
fisttpll
jb
inc
push
outsb
jecxz
inc
cltd
jnp
adc
xor
push
or
repnz
inc
xchg
movsl
aad
jno
jmp
test
ds
mov
and
cli
nop
pop
dec
inc
jae
cmp
xchg
mov
das
roll
mov
mov
int
jnp
mov
jo
inc
push
fistps
js
mov
xchg
leave
or
outsl
lods
xor
out
mov
cmpsb
jle
insl
icebp
test
scas
sub
cwtl
pop
loopne
aam
jle
aas
inc
std
inc
push
pushf
add
lahf
loope
adc
push
jae
lods
push
add
ret
lret
dec
lcall
adc
and
repz
repnz
or
out
xchg
out
mov
pop
out
jae
insb
adc
pop
stos
arpl
add
fs
mov
imul
jno
bound
dec
int
jmp
aam
dec
in
cmpsl
fbld
cmc
ffree
in
repnz
das
into
into
in
dec
xchg
icebp
mov
cmp
repz
inc
imull
jle
inc
loopnew
push
jb,pt
mov
jns
and
lock
sahf
pop
call
or
hlt
mov
out
rcrb
shrb
or
jo
leave
test
push
out
mov
xorb
mov
xchg
cli
xchg
pop
push
dec
mov
loope
sub
lret
mov
or
add
push
mov
test
scas
adc
ds
les
sbb
mov
cmpsl
divb
lret
xchg
mov
sbb
fcomi
outsl
nop
and
insl
divb
push
mov
sub
push
cld
clc
ljmp
dec
sbb
movsb
cmpsb
sub
inc
push
and
jbe
mov
push
mov
lods
adc
ret
push
fs
xchg
lock
lret
mov
imul
pop
fwait
mov
sbb
sarb
shrl
lods
cmp
xor
mov
adc
ss
jmp
mov
xor
dec
cmp
inc
push
pop
inc
mov
ds
mov
mov
outsb
lea
add
in
mov
add
xchg
dec
repz
and
sub
aas
fldcw
imull
mov
leave
stos
fisubrl
lret
or
push
sub
cmp
mov
fs
pop
inc
pop
test
inc
mov
sbb
mov
add
add
adc
mov
or
cld
sbb
cltd
addr16
not
or
movsb
cmp
shrb
sbb
adc
mov
pop
clc
mov
aaa
push
lock
push
lret
call
imul
fisubs
movsb
mov
lods
mov
mov
out
jb
es
lock
fwait
bound
pushf
orl
push
daa
pop
sub
orl
inc
data16
push
ds
insl
dec
daa
ljmp
rcll
fists
int3
pop
in
add
pop
sbb
mov
outsb
inc
icebp
repz
movsb
out
loop
inc
psubw
jnp
jae
inc
jb
out
sbbl
loop
jmp
inc
clc
dec
or
pop
add
pop
outsl
xor
mov
not
das
jb
out
ljmp
in
iret
nop
jbe
push
outsl
xchg
jl
aas
stc
sub
jo
push
aad
dec
int
or
sub
cmpsb
out
mov
push
cmp
orb
ss
into
jg
xlat
hlt
xor
aam
repz
xchg
push
cltd
pop
int
xchg
andb
cmp
aas
std
mov
stc
imul
pop
push
and
in
aad
push
mov
lea
add
and
adc
sub
dec
mov
data16
lret
and
jno
adc
fwait
pop
xchg
lods
mov
sarb
jae
cld
mov
in
jb
xchg
ret
test
ja
orl
test
shlb
adc
cld
mov
jg
add
pop
mov
clc
popa
or
ret
pop
push
setae
ds
test
lods
sarl
sub
outsb
and
push
insl
push
sti
xor
pusha
inc
adc
lock
push
pop
call
dec
outsb
push
xorb
mov
std
out
and
je
out
or
dec
in
cwtl
jns
xchg
and
je
stos
stc
jp
lcall
and
mov
pop
dec
jae
cmp
push
insl
imul
mov
js
xchg
fdivrl
test
ficompl
mov
or
and
cwtl
cwtl
lock
iret
cmp
mov
xchg
adc
adc
cmp
mov
ret
jl
shr
mov
mov
fwait
push
ljmp
in
call
aam
enter
sbb
lahf
das
aam
dec
sti
xchg
int
dec
xchg
add
cmpsb
sahf
test
add
and
fnsave
sbb
ds
sbb
cmpsl
sub
lret
ja
orb
add
or
jp
mov
and
or
jg
in
out
sub
pop
imul
cmp
and
pop
rol
sbbb
insb
test
add
cmp
push
int
push
and
shll
imull
pop
outsb
int
imul
rcll
cs
push
aas
fadd
inc
mov
aaa
mov
inc
adc
lret
and
fwait
dec
je
inc
test
cmp
int
mov
mov
js
inc
mul
pop
mov
iret
mov
cld
std
push
pop
jns
hlt
call
sub
stc
inc
stc
fldenv
shl
aad
dec
dec
das
sbb
mov
pushf
add
pop
out
ret
cli
rol
inc
and
add
xor
out
jne
mov
adc
or
orb
loop
jmp
sbb
test
repz
mov
xlat
or
and
popf
stos
and
push
aaa
movsb
les
dec
push
or
mov
push
inc
clc
pop
loope
push
jge
pop
fsubr
sub
outsl
xor
and
ss
jne
stc
idivb
lahf
push
mov
mov
icebp
out
xlat
sbb
scas
daa
or
roll
out
outsb
scas
and
mov
leave
mov
xor
cmp
movsl
mov
jb
xor
movsb
or
dec
mov
xor
xchg
in
jnp
roll
mov
push
fsubs
or
sbb
pop
xchg
jb
sub
mov
test
sbb
jecxz
notb
xor
sbb
jbe
or
js
fistpl
enter
xchg
pop
aaa
push
fbstp
nop
rclb
hlt
adcl
arpl
ret
loopew
cmp
out
loopne
enter
inc
inc
xor
lahf
push
mov
mov
fmuls
sub
sub
inc
fstpt
lods
jge
jmp
mov
aad
incb
stc
in
pop
mov
push
xor
mov
mov
imul
scas
xchg
pop
dec
push
icebp
lret
stos
nop
aad
mov
sbb
inc
mov
mov
imul
cmpsb
inc
popa
movsb
popf
dec
sub
jecxz
xor
aaa
ds
push
mov
lcall
test
je
push
lret
mov
loope
jne
pusha
mov
push
mov
push
loope
cmp
addr16
shrl
pop
pop
jmp
inc
xchg
and
sti
daa
sub
int
test
push
movsl
adcb
sub
outsb
pop
adc
sub
popa
adcb
out
mov
addr16
pushf
xor
jl
jle
lret
pushf
lods
test
dec
mov
sub
mov
out
sbb
iret
sub
xchg
adc
jno
dec
je
mov
popa
jae
ja
cmp
fmull
movsl
pop
hlt
repnz
push
cmp
sti
aaa
pop
dec
pop
shlb
and
add
mov
inc
sbbl
in
imul
mov
add
cmp
or
ror
mov
sub
inc
ds
out
repz
mov
inc
add
xor
add
cltd
insb
inc
mov
inc
jb
in
jae
enter
iret
add
ljmp
cmpsb
sbb
cs
dec
fistpll
outsb
pop
pop
cs
adc
popa
inc
decb
push
out
or
add
push
push
jo
iret
and
adc
cmp
lods
mov
xor
push
test
icebp
dec
jnp
lds
cmp
aam
pop
inc
cmp
out
fmulp
insl
ret
lds
mov
in
push
repz
out
add
pop
outsb
jg
out
add
mov
lret
add
shl
test
arpl
ret
xchg
or
cs
sub
addl
outsb
sbb
dec
add
xor
fidivrs
bound
xchg
int
mov
and
and
or
fcoms
push
mov
cltd
cmp
xchg
lcall
add
mov
jne
iret
inc
fnstcw
cmp
xor
add
mov
shrl
sub
lds
popa
xchg
mov
mov
jo
dec
xchg
mov
sub
cmc
rcr
xchg
mov
dec
and
movsb
rcll
dec
stos
lret
dec
jle
dec
lods
imul
out
mov
or
jae
sbb
subl
dec
call
mov
in
loope
xorl
push
mov
mov
xchg
mov
scas
and
xor
outsb
jecxz
push
push
mov
mov
push
and
mov
js
and
roll
ret
or
xchg
movsb
push
mov
mov
cmp
cmp
mov
push
adc
jmp
pop
dec
jge
and
popf
mov
xchg
sbb
xchg
mov
mov
cltd
in
mov
xchg
sub
mov
and
inc
clc
lock
cmp
in
cmp
test
popf
or
mov
dec
sub
out
cld
insb
sub
cwtl
cmp
and
xchg
or
fistpll
dec
test
add
sbb
inc
lock
ret
lods
sbb
sbb
cld
jge
pusha
mov
mov
push
lea
pop
jnp
mov
mov
xchg
mov
cmp
adc
jbe
push
mov
dec
xchg
lret
xchg
aam
or
xsha256
cmpsb
shll
pop
jo
cmpl
mulb
add
cltd
cmc
data16
jne,pn
jecxz
fsubrs
xchg
add
cmp
mov
jmp
mov
push
into
adc
into
movsb
cli
ror
cld
out
js
and
imul
pop
lea
cmp
arpl
out
pop
xchg
shrl
push
push
cmp
or
stos
xchg
mov
sub
std
dec
pop
xor
jl
movsl
cmp
sbb
mov
cmc
sbb
fcoml
sbb
sbb
mov
sbb
loopne
cs
scas
xchg
mov
cmp
mov
xchg
js
pop
push
xchg
mulb
data16
aam
gs
lea
xchg
fmuls
jecxz
outsb
test
sbb
cmp
outsb
xor
fisttpl
adc
adc
ds
negl
outsl
imul
xchg
cmp
push
xor
push
out
cmp
mov
jns
lea
mov
add
cmp
es
into
cltd
pop
stos
int
loop
sbb
fwait
add
pop
cmp
or
dec
dec
xor
xchg
leave
jl
xor
out
pop
popa
outsb
lahf
mov
inc
sub
mov
pop
ss
xor
inc
and
or
rcrb
xchg
push
or
ljmp
arpl
stos
sub
out
rcrb
jge
inc
jl
inc
sbb
ss
leave
out
adc
repz
mov
int3
in
out
sbb
shl
xor
cmp
mov
jbe
lods
lret
xchg
mov
bound
push
dec
cmp
pusha
outsb
adc
imul
fisttpl
mov
into
adc
pop
jmp
out
adc
fwait
sbb
mov
hlt
pop
push
ds
lods
adc
xchg
mov
xchg
and
and
scas
mov
cs
cmp
fisttpl
inc
lahf
test
pop
fidivrl
clc
fdivs
mov
inc
and
jbe
popf
push
lret
sub
fsubs
sti
sahf
in
dec
mov
subps
loop
cmp
data16
dec
clc
cmpsl
jge
mov
rcll
sbb
or
test
jmp
out
push
mov
andb
ret
fldt
jb
mov
fcmovnbe
out
fwait
cmpsl
ficoms
cmp
pushl
roll
hlt
cltd
sub
mov
push
movsb
mov
psraw
or
mov
or
lea
mov
fdivr
mov
movsb
jge
xor
and
push
test
bound
mov
sbb
leave
mov
cmp
mov
aas
xchg
mov
lcall
adc
lods
insl
std
mulb
mov
cmp
lods
push
xor
inc
mov
jl
in
hlt
das
cltd
sub
cmp
sbb
mov
sub
js
lods
loopne
inc
push
pop
push
xchg
add
scas
jecxz
mov
ficomps
pop
mov
aad
mov
flds
ror
or
xchg
mov
imul
stc
push
es
xchg
loopne
fs
add
int3
inc
inc
mov
movsb
jecxz
sar
movsb
mov
sarl
imul
push
jns
sbb
jns
orb
loop
ja
mov
movl
out
adc
in
mov
mov
fistps
or
add
sub
jno
cmc
inc
aaa
pop
enter
sbb
ja
pop
rolb
sub
cmp
mov
dec
mov
mov
repnz
ljmp
in
cwtl
in
pop
out
add
jno
mov
sub
or
xor
mov
jnp
ss
loope
push
jecxz
xor
sbb
sbb
or
pop
pop
gs
pop
fcoms
xor
and
sarl
enter
out
sbb
cmp
fwait
or
cmc
psrlq
sbb
push
pop
insl
sub
jbe
push
xorb
cmpsl
in
and
cmp
into
sbb
dec
shlb
cld
ret
mov
jg
inc
cmp
setnp
adc
adc
dec
test
loop
mov
fldt
dec
stc
jne
orl
fs
sub
lcall
jp
sbb
mov
add
dec
int3
lds
in
ret
inc
popf
sbb
fisttps
sarb
in
es
addl
es
aad
lds
sub
cmpsb
mov
dec
loop
push
or
mov
out
jecxz
ss
sbb
mov
pop
or
sub
cmpsb
in
daa
adc
pop
add
and
cmp
sbb
jns
inc
inc
fistpll
imul
lea
lods
mov
into
mov
mov
push
mov
sub
adc
out
pop
and
enter
or
inc
add
stc
push
and
push
inc
sbb
iret
push
and
andl
and
shr
cld
dec
imul
shl
rcr
mov
pop
mov
in
mov
sar
push
in
sub
aam
mov
rcll
ret
ds
and
jecxz
push
fcomps
clc
int3
mov
dec
dec
inc
shlb
sbb
mov
clc
mov
dec
outsl
movsl
adc
rolb
or
inc
lret
and
scas
imul
or
pushf
mov
std
ljmp
inc
es
sbb
sub
mov
and
add
lods
pop
or
mov
pop
scas
dec
mov
adc
lret
jmp
aad
loope
shlb
cmpsl
add
imul
add
scas
ret
push
lods
mov
xchg
sub
jne
cli
push
ficoms
repnz
out
or
cmpsb
insl
mov
in
lret
test
mov
movsb
inc
pushf
fwait
out
xor
cmp
sub
test
enter
int3
hlt
mov
dec
mov
test
pushw
jl
hlt
xlat
or
jp
xchg
pop
stos
mov
data16
jno
or
mov
xchg
xor
xor
mov
add
push
dec
or
testb
add
and
xor
mov
out
mov
std
mov
sbb
and
rcrl
ret
lods
or
mov
or
cltd
icebp
and
sub
adc
sbb
mov
insl
sar
add
push
movsb
adc
or
std
inc
sub
xchg
mov
pop
adc
ljmp
push
scas
outsb
dec
ljmp
adc
xlat
add
decl
outsb
sbb
lock
fidivrl
stos
mov
fstpl
fstl
inc
ffree
sbb
mov
aas
adc
pusha
push
scas
push
push
popa
out
xor
dec
cmp
adc
js
sub
mov
std
fs
xchg
ja
xchg
cltd
cmp
pop
cltd
andb
jae
lock
or
and
in
sub
sub
mov
ja
xor
pop
inc
psllq
test
scas
pop
mov
mov
cs
pop
test
or
dec
in
rcl
mov
mov
or
add
or
insb
dec
scas
pop
xchg
aam
mov
outsb
inc
into
jecxz
jp
dec
scas
inc
cmp
idiv
push
pop
jnp
imul
into
test
mov
sbb
out
int
adc
add
dec
mov
or
orl
or
add
xchg
pop
xor
addr16
pop
movsb
ja
out
jecxz
rcrb
mov
cmpsb
test
jne
int
mov
jne
and
scas
nop
cmp
fsts
mov
mov
push
mov
movsb
mov
repnz
lcall
stos
scas
xchg
enter
neg
add
jb
das
or
inc
pop
sti
adc
jbe
sub
lods
add
add
cltd
hlt
popa
mov
and
xor
xor
and
ss
and
sbb
jb
add
cmp
mov
popa
or
xor
repz
inc
pop
mov
mov
pop
adc
test
mov
jno
adcl
mov
insb
xchg
clc
lahf
arpl
xchg
stos
lret
bound
sti
outsb
gs
adc
les
imul
cli
gs
sti
or
xchg
rclb
xchg
dec
pop
pop
mov
pop
lret
xor
pusha
inc
test
jge
mov
aad
xchg
jbe
sub
mov
mov
bound
push
mov
loopew,pt
lret
lea
or
fldl
xchg
int
pop
outsl
sarl
pop
cli
push
cmp
mov
cwtl
mov
leave
mov
mov
dec
xchg
loop
enter
jle
inc
test
sub
out
sahf
roll
cmc
jb
adc
add
mov
les
jg
or
rcr
shrb
int3
inc
rolb
mov
ret
xchg
call
push
fucomi
rcll
mul
ljmp
clc
adc
sbb
mov
std
xor
out
fistps
jecxz
xor
sub
test
cli
test
sbb
jl
jl
loop
dec
insl
insb
into
dec
and
add
cs
pushf
lds
or
repz
mov
aaa
into
adc
cmpsb
dec
push
inc
jmp
xor
movsb
decl
and
cwtl
mov
push
sub
add
cmp
test
or
mov
xor
mov
jmp
mov
lods
pop
jnp
das
xchg
pusha
pop
mov
xchg
ds
insb
outsl
clc
rcr
daa
adc
lds
cltd
cmp
jns
es
push
and
sub
jmp
mov
lret
xchg
dec
cmc
fwait
mov
xchg
sbb
pop
mov
mov
jge
out
pop
dec
js
jnp
bound
clc
jo
imul
mov
bound
add
lods
pop
cwtl
stc
dec
movsb
mov
inc
jb
adc
inc
push
mov
fistpll
int
add
mov
cmp
lretw
add
cld
pop
cmc
mov
cmp
mov
pop
jb
rol
cmp
or
mov
push
adc
movsl
mov
sbb
jge
xchg
mov
in
adc
mov
xchg
in
pop
and
cmpb
shlb
cli
inc
push
pop
pop
xchg
and
xorl
pop
addb
and
out
lret
mov
nop
mov
dec
test
mov
fs
cmc
and
loop
mov
out
xchg
xabort
lea
adc
xor
es
jo
xor
fdivrp
adc
adc
push
xchg
jle
mov
push
lret
addr16
int3
jp
mov
lods
pop
sbb
icebp
xor
cmp
add
aam
or
xor
and
push
stos
push
or
jbe
sub
data16
leave
mov
xchg
mov
aas
jbe
push
and
xchg
and
fbstp
or
mov
inc
mov
fnstsw
sbb
imul
jecxz
fistps
bound
test
push
jle
sub
mov
xchg
imul
sub
jp
mov
out
fcmovnu
aad
sbbl
mov
imul
push
push
inc
outsl
pop
cltd
lods
jecxz
jmp
mov
data16
push
sub
rcr
pop
ljmp
add
hlt
and
gs
imull
stos
sti
pop
xchg
add
mov
dec
dec
sbb
out
fimuls
cmp
sub
cmpsb
jb
aam
dec
lahf
jns
out
push
incl
aam
leave
cmpsb
int
call
push
pop
xlat
bound
xor
pop
loop
sbb
sbb
rorb
xor
mov
enter
leave
loop
aas
mov
xchg
or
add
xor
or
mov
adc
mov
fcmovbe
shrl
std
sub
jge
test
xchg
enter
fcmovb
xchg
es
sub
mov
xor
and
sbb
int
lahf
imul
jge
mov
mov
mov
xchg
sbb
sub
lea
fildl
sbb
or
test
in
ljmp
pop
idivb
lahf
pop
lcall
jae
dec
mov
mov
lods
cmp
jp
fistl
mov
outsb
xchg
movsl
call
push
test
jg
icebp
repz
leave
push
adc
jae
push
stos
xorl
cmp
cmpsl
pop
ficompl
lods
xor
cmp
lahf
shlb
jae
cmp
add
pop
std
add
std
sbb
test
bound
pop
into
shll
lcall
jmp
jg
sti
loope
pop
rep
dec
mov
fldl
lcall
dec
popa
jmp
cmp
call
push
rcrl
fisttpll
lret
pusha
stc
dec
movsl
aas
stos
or
iret
sti
ret
mov
aaa
bound
pop
lret
js
sar
mov
lods
xchg
pop
mov
mov
ljmp
jmp
add
clc
lret
in
adc
testb
dec
mov
dec
fsubl
leave
add
aaa
inc
out
push
or
outsl
dec
or
iret
push
pop
xchg
sub
cli
sub
fs
dec
add
mov
icebp
mov
loope
inc
cmp
add
push
mov
mov
repz
sub
jecxz
outsl
push
test
lahf
jb
jg
jbe
out
pop
scas
hlt
and
sub
movsl
into
fstpl
out
cmp
push
lret
pop
insl
push
stos
test
stc
test
and
dec
lods
pop
subw
pop
add
in
roll
xchg
adc
stos
lret
cmp
xor
sub
test
mov
insl
adc
push
add
shlb
scas
jl
dec
jl
lock
sub
sbb
inc
mov
es
icebp
cld
xor
push
push
xor
addr16
cvttps2pi
mov
cmp
xor
mov
sbb
unpckhps
sub
pop
push
adc
movsl
aad
xor
push
dec
cli
mov
lret
mov
faddl
dec
fbld
clc
cli
jl
ret
push
pop
dec
push
shrb
inc
mov
arpl
or
xor
add
repz
in
mov
cmpsb
push
lods
jmp
jp
mov
sub
sub
cli
xchg
xor
inc
mov
jp
push
stos
sti
int3
rcrl
add
and
mov
sub
add
call
cld
fcompl
mov
mov
xchg
lock
sub
adc
mov
iret
scas
aaa
in
pushw
lock
mov
stos
rcr
dec
sub
or
cli
testb
push
inc
pop
or
inc
cmp
mov
sbb
fwait
dec
pop
cmc
scas
fstl
xchg
in
mov
nop
out
mov
lcall
std
mov
lock
mov
jp
fcomps
mov
lods
cmp
mov
mov
dec
xorl
sahf
ror
mov
in
into
push
mov
dec
arpl
test
pop
push
mov
fwait
enter
sbb
das
xor
push
push
xchg
jb
pop
xlat
out
fbld
out
push
jne
mov
jno
add
in
sbbb
or
subl
stc
mov
loopne
stc
stc
int
xlat
sub
fisttps
cltd
test
or
sbb
fcomi
icebp
lahf
mov
cmc
insl
mov
and
push
cmp
mov
xchg
imul
insl
add
or
add
inc
das
pushf
cmp
inc
mov
inc
fxch
out
arpl
or
leave
push
cwtl
and
mov
push
cld
fstps
fistpll
into
jns
in
sbb
cli
mov
js
bnd
mov
out
aaa
enter
repnz
ja
mov
mov
orb
imul
cmp
cltd
add
and
or
in
adc
adc
jae
mov
in
insb
movsl
and
xchg
popa
repz
hlt
in
outsl
icebp
shll
in
in
je
xor
cld
push
lcall
in
sbb
lcall
push
push
add
push
or
mov
iret
and
daa
mov
xor
lods
xchg
fs
cmp
push
push
mov
test
int3
ffreep
and
dec
mov
jecxz
int
xor
adc
sbb
jp
fdivr
iret
lret
cmp
dec
sub
fisttpll
cltd
orb
rorl
inc
xor
adc
and
es
dec
cmpsb
or
leave
jne
sub
cltd
pop
rcll
out
push
inc
jmp
nop
xor
cld
out
insl
dec
mov
loopne
lret
ds
in
mov
xor
jb
mov
js
sti
mov
xchg
sar
xchg
mov
les
xchg
cmc
xor
lret
js
out
sti
fadd
jae
js
fildl
pop
cs
push
outsb
ss
mov
mov
stc
adc
jno
test
int
test
jp
lret
xorb
pop
add
xchg
and
mov
in
push
addr16
fcmovnb
sub
xorl
dec
mov
test
in
in
cmp
ret
rclb
or
icebp
inc
jmp
inc
inc
mov
mov
inc
rcll
mov
mov
mov
cmp
inc
stos
mov
pop
or
and
orb
int3
test
jne
decl
sarb
adc
movsl
jg
mov
add
je
push
sbb
ret
movb
sub
cmpsl
mov
enter
cmc
mov
mov
push
sub
orl
add
xadd
or
ss
xor
xchg
ja
mov
lret
aam
cmp
xchg
xchg
test
and
jo
mov
dec
pushf
movsb
dec
popf
add
adc
daa
jb
shll
shrb
lods
stos
cmp
push
cmpsb
repnz
cmpsb
adc
test
insb
imul
mov
dec
je
dec
sbb
test
pop
mov
push
int3
pusha
sbbb
sub
ret
fstpt
aad
ficomps
jns
adc
inc
xchg
aaa
mov
in
int
cmp
mov
lock
lea
dec
out
imul
xor
xchg
test
push
mov
sub
or
mov
jnp
or
xor
insb
js
sub
sbb
out
add
sub
sub
add
icebp
sub
xchg
jp
cwtl
cltd
inc
xchg
ja
ljmp
push
movsb
inc
and
jb
jecxz
into
add
insw
lds
add
andb
cmp
pusha
stos
fistpl
add
aad
pop
jg
data16
sbb
xchg
mov
mov
dec
pop
insl
lahf
stc
add
je
rcl
xchg
xchg
mov
pop
jno
push
ror
lods
dec
push
sub
fst
in
lods
mov
ja
inc
jp
push
pop
lds
pusha
inc
jle
jns
push
fnstsw
sahf
xor
or
mov
xchg
hlt
sub
out
adc
fimull
jle
pop
adc
push
cmp
xchg
add
insb
push
push
add
sarl
mov
jno
mov
in
out
popf
ret
inc
push
outsl
cmpsl
mov
mov
dec
sub
mov
push
cmp
xor
roll
aas
addl
pop
jl
mov
jecxz
imul
arpl
push
into
dec
jns
das
cmp
adc
jmp
xor
loope
xchg
cmp
arpl
add
push
push
jnp
das
addr16
mov
mov
and
orl
mov
or
ficoms
mov
adc
mov
xlat
shlb
mov
push
orl
adc
xchg
mov
mov
sbbl
jecxz
pop
jns
mov
int3
ret
xchg
jno
int
sub
dec
xchg
mov
and
xchg
pop
pop
int3
scas
fildl
cmpsb
lods
into
sbb
or
jb
inc
movsl
mov
jmp
mov
sub
insb
enter
rcll
stc
in
ds
insl
outsl
add
push
out
sub
lret
push
out
push
jb
jge
or
xor
jae
insb
jnp
aad
jns,pn
clc
sbb
add
cmpsl
fstps
es
sbb
pop
das
mov
jbe
fisttps
pop
andl
push
movsl
mov
orl
dec
sub
in
lock
mov
pushf
jl
lea
mov
xchg
cmp
flds
lcall
lea
scas
xlat
adc
frstor
in
loop
movsb
mov
push
cwtl
filds
push
mov
push
daa
sub
out
xchg
addb
mov
popa
data16
xchg
push
pop
push
in
inc
mov
iret
inc
cmpl
mov
jnp
aas
int
in
pop
adc
rcl
and
inc
loop
sbb
sub
ds
stos
je
xor
sarl
incl
xchg
push
fdivs
bound
xchg
outsl
hlt
sub
mov
mov
leave
cmp
pop
cmpsl
pusha
pop
aam
popf
mov
arpl
lahf
sbb
mov
dec
jg
pushl
out
cld
and
pop
or
mov
fsts
cmp
pop
add
ljmp
ljmp
out
push
les
lds
mov
sub
lahf
repnz
cmp
xchg
xchg
pop
enter
cltd
dec
sbb
mov
mov
cmp
or
xor
movsl
pop
sbb
shll
push
and
push
int
xchg
mov
sahf
cmp
loope
cmp
or
push
and
add
movsb
jo
add
xor
cmp
nop
fwait
mov
mov
test
or
or
adc
pop
sbb
cmp
sub
sbb
inc
dec
mov
mov
scas
push
addr16
inc
jge
xchg
adc
in
lock
lcall
dec
pop
mov
inc
add
xchg
out
ret
dec
std
out
mov
testb
dec
and
cmp
push
push
fmull
pop
int
pop
pop
xchg
jbe
sbb
sbb
ljmpw
je
pop
or
push
jnp
or
scas
sti
or
dec
dec
sarb
pop
mov
fstp
sub
scas
add
sbb
out
fucom
dec
sbb
mov
cmpsl
inc
test
arpl
xor
xchg
shrb
xchg
int
shll
xchg
clflush
mov
adc
and
mov
popa
inc
stos
in
out
repnz
jnp
lret
mov
cmp
int
aas
and
rorl
nop
std
fwait
aam
inc
test
fbstp
push
xchg
adc
jns
mov
insl
xor
cmpsb
lret
and
and
stos
fs
fnstenv
dec
or
imul
call
out
lcall
cs
fadd
test
mov
or
sub
add
inc
xor
jbe
mov
mov
or
sub
mov
loope
mov
mov
lcall
jne
pop
sub
fs
xchg
jmp
cmc
stos
test
pop
push
in
mov
pop
test
lahf
or
loope
and
neg
jmp
cmp
push
clc
int
stos
test
xor
std
xor
int
out
stos
adc
xor
in
sbb
and
push
mov
cmc
pop
in
dec
test
jbe
adc
mov
imul
sarb
dec
pop
mov
mov
in
popf
cld
stc
dec
das
push
aas
pop
aam
sahf
addr16
inc
in
jo
push
arpl
mov
enter
adc
fbld
outsb
test
adc
xchg
cmp
mov
hlt
out
push
movsb
sbb
cmc
loope
incb
hlt
xchg
decl
sbb
push
stos
call
jg
mov
jge
xchg
addl
cli
flds
push
sub
leave
jmp
push
jae
shll
sub
xor
daa
adc
xchg
add
sub
mov
add
sbb
xchg
dec
call
lret
xchg
out
pop
in
aas
shrb
stos
fnstenv
xor
jae
enter
sbb
jp
sbb
lret
je
push
in
int
aam
cmpsl
cmp
hlt
mov
iret
or
pop
outsl
jae
out
cmpsl
aaa
jg
in
jecxz
mov
push
scas
sub
xchg
mov
pop
clts
insb
xchg
jl
add
jns
mov
push
scas
and
or
notl
out
and
jo
push
cmpl
jne
lcall
push
ret
pop
xor
pop
cmp
and
inc
cmp
dec
fistpll
or
int3
std
les
adc
push
mov
iretw
daa
dec
scas
adc
jno
int3
clc
cli
jmp
sub
ss
std
inc
jae
arpl
cli
orb
and
imul
or
xor
lahf
les
imul
xchg
and
mov
jecxz
mov
jg
inc
loop
add
imul
sub
loop
shr
mov
push
cmp
fs
dec
push
stos
pop
gs
loop
outsb
xchg
sbb
push
xchg
in
ret
sbb
xor
mulb
test
inc
gs
pop
or
ja
out
lret
ret
shll
stc
scas
lcall
jmp
jb
jae
adc
fidivl
sub
mov
xgetbv
add
jmp
inc
push
cmpl
inc
xchg
and
pop
lds
sbb
jmp
ret
mov
movsl
in
pop
aaa
sbb
cmp
cli
sub
dec
push
cmc
mov
cmp
push
push
push
push
popf
mov
mov
fldl
push
test
repz
xchg
mov
aas
clc
ffree
int
sti
sub
ss
xchg
cli
fwait
add
in
out
cmc
add
outsl
jmp
in
cwtl
mov
and
jmp
pop
sarb
insb
xor
adc
xchg
int3
xchg
mov
xchg
xor
icebp
fstpt
movsb
rcl
xchg
repz
cltd
adc
push
xor
sub
test
cli
lea
push
mov
testb
ret
push
int3
mov
push
cmp
icebp
fdivs
sbb
xor
jnp
and
adc
addr16
xchg
repnz
in
or
inc
push
lods
sbb
js
stos
stos
in
shrl
sub
scas
imul
mov
cmpsb
mov
pop
sub
xor
mov
xchg
push
mov
rcrl
sub
inc
aam
xlat
cmpsb
dec
xchg
push
or
add
jl
aaa
fsubrp
xor
xor
mov
mov
out
push
js
mov
dec
pop
rcr
push
rcr
and
xchg
in
stc
aas
xor
idivl
push
imul
dec
cmpsb
add
outsl
sbb
xorl
mov
xchg
and
mov
lock
xchg
mov
xchg
scas
cwtl
into
sbb
mov
mov
loopne
xor
dec
xchg
lret
pop
push
daa
pop
daa
in
loope
insl
iret
push
iret
sbb
mov
inc
mov
xchg
dec
push
push
ja
mov
and
pop
stc
add
imull
ljmpw
mov
sarl
mov
xlat
sbb
cltd
xchg
mov
das
sbb
push
ss
jmp
into
inc
pop
mov
dec
shr
loopne
mov
stc
xchg
es
scas
inc
mov
sti
adc
imulb
test
cmp
or
out
repnz
rcrl
bound
clc
lds
push
bound
mov
test
and
xlat
loope
aam
out
jle
shll
rorb
cs
and
mov
insl
sarb
jmp
jg
pop
pop
jb
mov
push
div
push
mov
xor
mov
inc
scas
add
js
xchg
push
shrb
pop
movsb
fisubrl
imul
xor
cli
mov
orb
sub
sub
les
sarb
mov
mov
xlat
mov
std
cmp
xor
sub
cmp
mov
fcomps
rorl
xor
hlt
adc
dec
jnp
das
popa
cmp
lock
pop
lret
sahf
xchg
in
pop
inc
cwtl
dec
enter
gs
mov
mov
insl
outsl
imulb
jg
leave
jae
cmp
into
aam
cli
dec
js
xchg
out
inc
xchg
aas
lret
daa
cmp
jno
movsl
push
imul
ss
je
xchg
mov
fiadds
cmc
cmp
in
cmpsb
mov
mov
and
outsl
pop
sbb
dec
jle
out
mov
jge
mov
subb
and
pop
push
mov
cmp
rcrb
xchg
arpl
adc
ret
jno
out
push
stos
jne
mov
xchg
into
je
pop
test
jno
push
fimuls
int3
bound
ret
cwtl
mov
icebp
cmp
fidivrs
int
fistpll
mov
sti
fstpt
outsb
pop
in
xor
testl
hlt
aam
fcmovnbe
or
dec
mov
push
xor
stos
jecxz
xchg
pop
xchg
ret
xor
mov
call
dec
out
xlat
dec
dec
imul
popa
dec
das
dec
mov
dec
enter
push
jb
or
lock
aaa
sbb
idivl
test
loop
loop
mov
push
mov
mov
js
pop
popf
popf
push
sbb
mov
and
jne
or
pop
adcl
mov
mov
aad
int3
loopne
xchg
xchg
jle
sbb
std
mov
sbb
and
push
mov
or
shrb
lods
cwtl
mov
and
mov
xlat
pop
mov
sub
mov
leave
cmp
mov
jb
out
lcall
pop
rclb
sub
hlt
into
push
rorb
xchg
shrl
jle
ds
in
lret
data16
arpl
ljmp
imul
sub
dec
repnz
fcomi
sbb
xchg
mov
cmp
sbb
mov
hlt
and
out
iret
inc
icebp
sub
leave
jecxz
lea
xor
in
nop
pop
iret
int
adc
jnp
pushf
aas
jl
fisubs
push
xor
pop
sub
mov
mov
outsb
mov
popf
fstpl
jnp
xchg
daa
mov
loop
pop
jb
scas
mov
mov
ret
add
mov
fdivr
imul
stc
sar
sub
popa
loop
inc
mov
add
add
inc
ret
pop
loop
xchg
cmp
mov
push
lds
pop
inc
test
ja
mov
movl
stc
dec
push
pop
mov
push
fildl
jb
xor
das
adc
fistpll
add
and
cmpsb
dec
mov
cltd
mov
pop
insl
cmp
xlat
adc
dec
or
sub
gs
aas
and
mov
fnstenv
xchg
shlb
scas
add
movsb
and
pop
adc
ss
jne
or
ja
and
jge
imul
cmpsb
and
sub
outsb
cmpsb
sub
sub
lea
push
loopne
sbb
dec
test
lock
mov
push
and
cmp
mov
add
loope
xor
sub
mov
and
fildll
add
aam
or
adc
stos
sbb
repz
adc
arpl
les
addl
lret
mov
or
fidivrs
sub
push
loope
push
in
outsb
jnp
mov
inc
xchg
ffree
fimull
cmp
in
sbb
out
clc
or
ret
lods
pop
pushf
sbb
inc
cli
in
mov
out
iret
mov
repnz
test
mov
add
and
shrl
mov
hlt
out
aad
dec
adc
les
sbb
jl
and
sahf
push
add
cs
xchg
add
or
hlt
loope
jo
xor
fsubrl
outsb
or
inc
sub
repz
dec
cmp
mov
xchg
mov
cwtl
jns
sbb
sbb
mov
pushl
ljmp
shll
dec
sub
repnz
jmp
loopne
xorl
test
mov
neg
pop
outsl
pextrw
mov
call
popa
jno
or
clc
lcall
icebp
les
and
xchg
pop
out
push
mov
scas
jns
stos
pop
out
mov
push
jl
sub
ja
pop
lret
xchg
sub
jle
mov
mov
mov
daa
test
arpl
repnz
adc
clc
sbb
lods
inc
inc
lock
cmpsl
pushf
jp
xchg
push
pusha
imul
dec
jge
not
mov
lods
divb
out
test
fiaddl
dec
das
cmp
mov
sub
mov
xchg
pop
pop
es
push
dec
nop
cmpsb
sbb
adcl
cmp
bound
scas
adc
push
mov
mov
pop
sbb
pop
gs
insl
ja
dec
mov
xor
in
push
xor
loope
bnd
push
clc
or
sbb
ds
shrb
dec
xlat
into
fstps
mov
jle
std
shr
cs
ja
loopne
test
add
xchg
gs
sbb
pop
and
mov
mov
std
mov
mov
xor
popf
mov
adc
shrb
push
lret
pop
adc
inc
sbb
enter
dec
and
sbb
adc
out
push
ljmp
test
dec
jmp
mov
add
hlt
test
insl
repnz
lcall
repz
mov
push
sub
inc
clc
call
test
pop
call
or
stos
xchg
rorb
lods
mov
add
xor
popa
fsubrs
sbb
stos
int
add
shl
jbe
test
out
bound
dec
push
xchg
aaa
fstps
jb
or
inc
xlat
sbb
mov
xor
and
scas
and
inc
out
ljmp
bound
jl
xor
and
pop
shrb
mov
adcl
cmp
out
adc
push
lret
out
xchg
jae
push
insl
sub
or
inc
movsl
lock
and
stc
push
sub
adc
rolb
ret
xchg
push
push
fadds
push
dec
dec
fstpt
ja
insl
repz
repz
ds
mov
jle
sub
cmp
push
add
mov
dec
mov
mov
ret
jb
cmpsb
fiaddl
pop
push
outsl
cmpsb
iret
and
lcall
in
and
outsb
add
sbb
jmp
push
popa
xor
or
gs
sti
fs
cmp
lods
cmp
mov
stos
cmp
sbb
loopne
lcall
adc
aas
xor
sbb
icebp
rorl
sub
xchg
mov
imul
mov
scas
pop
rep
add
bound
push
cld
adc
xchg
stc
adc
cmp
idiv
les
sbb
push
add
mov
mov
in
int
sub
pop
sbb
ret
into
sti
jbe
mov
imul
or
into
sbb
mov
outsb
or
or
imul
mov
loope
ds
jno
push
aam
shlb
and
mov
jmp
mov
lret
in
push
mov
mov
pop
arpl
test
push
inc
cli
sbb
leave
xchg
add
pop
scas
mov
fstps
cmp
repz
mov
fmuls
push
cmp
xchg
fmul
ja
int
mov
xchg
test
lods
sbb
and
mov
ds
mov
hlt
lret
mov
xor
out
insb
push
aad
addl
lods
cs
cmp
fwait
ljmp
lret
insb
xor
movsb
ficoms
adc
adc
and
sbb
lcall
and
push
xchg
into
cs
insl
cwtl
mov
sbb
jmp
or
test
dec
jae
inc
hlt
mov
imul
stos
lcall
mov
jnp
mov
cmpsl
das
lret
jb
addr16
xchg
push
adc
add
std
jge
push
cmp
out
pop
lds
mov
sbb
mov
push
jmp
cmp
inc
xor
inc
xchg
pop
das
cmpsl
cmpsl
and
aas
push
lods
inc
cmpl
cmp
inc
adc
jno
lret
call
xor
das
lcall
out
lea
jge
lods
xor
pop
jne
dec
leave
xchg
mov
push
mov
mov
cmpsl
mov
sub
lea
sti
addl
cld
and
lock
push
cltd
sbb
jo
push
push
pop
xchg
xor
or
hlt
int
mov
mov
popa
push
repz
lods
jp
dec
lods
mov
mov
jmp
ljmp
cmp
jb
sbb
or
stos
aaa
mov
addl
xchg
or
sub
and
sub
mov
pop
lea
mov
xchg
jl
shrl
cmp
pop
fs
sbb
mov
mov
lds
inc
insl
dec
jne
mov
cmp
iret
push
lcall
xor
pop
inc
pop
mov
jmp
adc
aas
dec
add
mov
loopne
outsl
mov
idivl
repnz
adc
cltd
enter
mov
ret
inc
fwait
inc
xchg
inc
pop
jo
sbb
clc
xchg
dec
mov
adcl
fcomip
gs
push
outsl
js
xor
or
cs
stos
pop
stc
icebp
sbbb
or
jno
pop
sbb
xor
fldl
cmp
inc
adc
cmpsl
pop
scas
rcrb
repz
subb
inc
cmpsl
push
sbb
mov
mov
cmp
adc
inc
fmull
daa
xor
dec
pop
jno
push
dec
push
lret
and
lahf
scas
pop
pop
jmp
rolb
jnp
sbb
pop
mov
imul
ret
test
test
mov
pop
xor
mov
push
xchg
inc
add
push
ljmp
loop
or
rcl
and
pusha
fsubp
mov
ja
ja
adc
sbb
xlat
clc
repz
sbb
loop
mov
fyl2x
call
in
sti
arpl
adc
sub
adcb
cmp
out
adc
inc
mov
imul
lret
sbb
aad
jg
xor
xchg
lret
cmp
jo
sbb
cmp
fucom
pop
scas
std
push
popf
ja
mov
fadds
push
dec
popf
ljmp
lret
pushf
cli
es
in
xor
pop
movl
imul
sub
adc
dec
movsl
mov
push
push
iret
pop
xchg
rclb
das
cmp
mov
xchg
pop
xlat
pop
lea
jl
aaa
iret
mov
lea
push
scas
xchg
sti
adc
rclb
adc
jne
mov
gs
and
push
ss
dec
push
push
in
vfmadd132ps
pushf
mov
mov
scas
movl
loop
ds
pop
in
mov
mov
out
add
fwait
andb
ds
rep
add
dec
adc
out
mov
fcompl
sub
add
xchg
fdecstp
jnp
fisubs
addb
and
in
fstpt
push
int
inc
mov
sbb
mov
push
adc
mov
push
out
imul
xorl
add
jmp
fst
and
in
ret
mov
fsts
push
int
iret
scas
mov
lods
adc
jp
jno
ret
fstl
jle
clc
xor
es
dec
mov
jno
pop
gs
pop
sbb
add
leave
jecxz
rolb
cld
push
jb
xlat
mov
or
mov
loopne
adc
pop
xchg
jge
bound
mov
out
mov
sbb
gs
sti
mov
rclb
cltd
pop
and
mov
xor
daa
or
pop
loopne
pop
repnz
in
loope
sub
cmp
lods
push
cli
or
and
sbb
scas
cmc
mov
lret
inc
outsb
sub
std
ficompl
push
stos
fildll
adc
mov
insb
xchg
mulb
in
sahf
lret
mov
mov
xlat
cmpsb
or
jp
jle
lret
mov
jle
mov
cltd
imul
addr16
shrb
push
aad
mov
jl
std
scas
push
fiadds
cwtl
arpl
push
xchg
xchg
xor
int3
mov
outsb
push
jne
xchg
or
mov
and
iret
sub
popa
dec
mov
inc
ds
test
ss
scas
inc
lea
cmp
jl
cmp
imull
in
dec
ja
and
mov
sbb
lcall
pop
test
fcmovb
ja
leave
je,pn
or
jno
xor
dec
mov
cmpsl
push
mov
jno
lds
or
movsl
push
or
fadds
fists
push
leave
inc
push
sbb
pop
and
das
ror
mov
mov
pop
sub
mov
jmp
out
fnstenv
and
gs
out
aad
sbb
push
gs
push
mov
subb
pop
cli
push
ljmp
lods
cmpb
sub
adc
lret
cmpsb
add
out
jo
push
popa
lods
jno
inc
inc
in
fsub
mov
imul
jl
repnz
js
dec
and
in
repnz
test
outsb
pop
adc
pushf
iret
iret
sbb
add
or
mov
hlt
ds
cs
mov
inc
test
mov
cltd
repz
mov
inc
in
cmc
pop
mov
mov
popa
mov
xchg
jne
loope
or
cmc
cltd
cli
xchg
sarb
cmp
cmp
sbb
stc
add
daa
push
xor
pop
out
dec
dec
push
repnz
xor
aaa
jae
pop
int
and
push
adc
mov
daa
lret
aad
insl
stos
inc
scas
in
mov
sbb
jle
mov
imul
add
push
jbe
sub
pop
insl
xchg
dec
lcall
mov
ret
xlat
notl
test
pop
xor
mov
arpl
pop
dec
scas
mul
aas
add
rorl
daa
addr16
xlat
call
sub
div
pop
inc
and
les
mov
imul
mov
mov
outsb
sub
sbb
pop
push
add
add
test
pop
gs
add
jle
fstpl
rcll
push
dec
mov
dec
adc
dec
xchg
int3
push
push
out
popf
inc
stc
mov
clc
jno
test
bound
outsl
outsb
or
or
mov
ret
pop
xchg
or
imul
or
sbb
fidivrl
cmp
aaa
mov
jbe
mov
add
push
xor
add
and
or
dec
add
mov
in
pop
ljmp
mov
les
mov
pop
lea
sub
loop
mov
or
enter
jle
leave
stos
cmp
idivl
jecxz
cmpsb
xor
jg
sbb
cmp
nop
subb
xor
hlt
or
add
pushf
lahf
mov
dec
or
and
jp
sbb
outsl
cmpsl
sub
adc
out
push
out
adc
and
jl
into
push
xor
mov
icebp
push
cwtl
or
hlt
xchg
call
xchg
xor
inc
daa
imul
fdivrl
jle
xor
les
cmp
xchg
jnp
ja
pop
adc
add
movsl
ret
mov
adc
and
add
adc
notl
je
sbb
jne
popa
jl
adc
mov
push
dec
test
mov
dec
popf
test
pop
je
nop
enter
stos
subl
les
adc
xchg
scas
or
ss
xchg
push
je
sarb
lcall
lock
je
lods
lcall
lds
popa
cmp
pop
fdiv
test
add
or
fidivs
adc
xlat
aaa
inc
lods
fdiv
out
jecxz
and
int
dec
add
dec
sub
loope
aaa
mov
xchg
cli
sbb
and
adc
sbb
jae
filds
cmp
leave
and
and
add
mov
sti
sbbb
jmp
bound
fcomps
or
mov
sub
mov
pushl
sub
push
iret
xchg
mov
sub
fwait
mov
outsb
test
inc
outsl
insl
add
pop
add
add
add
add
test
add
mov
add
adc
add
mov
add
add
add
rorb
addb
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
addb
add
add
addb
add
pop
add
addb
add
addb
addb
add
add
add
add
add
add
add
add
add
test
add
add
add
add
in
add
add
add
add
add
add
add
rolb
add
cmp
add
add
in
add
add
add
add
add
add
add
clc
add
add
or
xor
add
in
add
add
add
add
add
add
add
and
add
test
or
xor
add
in
add
add
add
add
add
add
add
dec
add
add
je
add
add
in
add
add
add
add
add
add
add
jo
add
sbb
add
add
in
add
add
add
add
add
add
add
cwtl
add
add
or
xor
add
in
add
add
add
or
add
enter
adc
add
cmp
add
pusha
add
orb
add
and
xorb
add
dec
add
addb
add
sub
add
push
add
addb
add
mov
add
add
add
add
add
add
add
add
add
sub
add
mov
add
add
add
add
add
add
add
add
add
add
push
add
add
or
in
add
in
add
add
add
add
add
add
add
js
add
inc
jl
add
add
add
add
add
add
add
add
add
add
mov
jle
add
add
add
add
add
add
add
add
add
add
enter
loopne
or
rolb
add
in
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
sbb
add
addb
add
add
add
add
add
add
add
add
inc
add
add
or
rolb
add
in
add
add
add
add
add
add
add
push
xchg
add
add
add
add
add
add
add
add
add
add
nop
add
add
mov
add
add
add
add
add
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
inc
add
inc
add
push
add
add
add
add
add
add
dec
add
add
add
add
inc
add
inc
add
inc
add
dec
add
add
add
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
add
inc
add
inc
add
dec
add
inc
add
add
add
add
inc
add
dec
add
add
add
add
add
inc
add
dec
add
add
add
add
pop
add
inc
add
inc
add
add
add
add
inc
add
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
add
add
add
add
lock
or
add
add
add
add
add
add
add
add
add
loopne
add
test
or
push
add
add
add
add
add
add
add
add
push
add
dec
add
dec
add
push
add
add
add
add
sbb
jmp
add
add
or
add
xor
add
pop
push
add
addb
sub
add
test
add
rolb
add
clc
push
add
and
add
dec
pop
add
jo
add
cwtl
pop
add
rolb
xor
add
call
sldt
adc
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
addb
add
js
add
add
add
add
add
add
add
add
add
clc
add
or
test
add
in
add
add
add
add
add
add
add
and
add
mov
add
in
add
add
add
add
add
add
add
dec
push
add
nop
xchg
or
clc
add
add
add
add
add
add
add
add
add
jo
add
mov
add
in
add
add
add
add
add
add
add
cwtl
push
add
cwtl
cltd
or
adc
add
in
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
call
sahf
or
push
add
add
add
add
add
add
add
add
add
adc
add
clc
mov
add
in
add
add
add
add
add
add
add
cmp
add
nop
movsb
or
jo
add
in
add
add
add
add
add
add
add
pusha
pop
add
add
add
in
add
add
add
add
add
add
add
mov
add
add
add
in
add
add
add
add
add
add
add
mov
add
clc
test
add
in
add
add
add
add
add
add
add
fadds
add
clc
lods
or
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
sub
add
fsubrs
add
in
add
add
add
add
add
add
add
push
or
add
or
or
add
in
add
add
add
add
add
add
add
js
add
push
mov
add
add
add
add
add
add
add
add
mov
mov
add
in
add
add
add
add
add
add
add
enter
adc
add
in
add
add
add
add
add
add
add
lock
add
or
in
add
add
add
add
add
add
add
add
add
sbb
add
pusha
mov
add
in
add
add
add
add
add
add
add
inc
or
add
or
rolb
add
in
add
add
add
add
add
add
add
push
lds
add
add
add
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
add
add
inc
or
or
add
lock
adcb
sbbb
add
add
add
add
add
add
add
add
add
loopne
add
or
add
add
add
add
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
add
add
xor
add
clc
lret
or
fadds
add
in
add
add
add
add
inc
add
add
add
add
add
add
add
add
push
add
xor
add
add
add
add
pop
add
jg
add
jg
add
or
cmp
add
clc
or
cmp
add
and
add
dec
or
cmp
add
jo
add
cwtl
or
addb
add
add
add
add
add
add
add
add
add
rorb
add
rorl
add
add
in
add
add
add
add
add
add
add
call
rorl
add
add
in
add
add
add
add
add
add
add
adc
add
add
or
adc
add
in
add
add
add
add
add
add
add
cmp
add
sbb
or
adc
add
in
add
add
add
add
add
add
add
pusha
or
add
aam
add
add
in
add
add
add
add
add
add
add
mov
add
dec
aam
add
add
in
add
add
add
add
add
add
add
mov
add
pusha
aam
add
add
in
add
xor
dec
inc
outsl
insl
add
add
add
add
fmuls
add
xor
dec
inc
outsl
insl
add
add
add
add
lock
add
mov
add
add
add
add
movsb
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
flds
or
sbb
add
flds
or
sbb
aas
add
add
add
add
add
add
add
add
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
loopne
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
mov
push
les
dec
hlt
data16
or
pop
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
xor
cmp
sub
and
xor
sub
and
xor
aaa
add
and
cmp
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
jo
add
je
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
dec
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
sldt
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
insb
add
push
add
add
je
add
add
js
add
add
add
add
add
add
jb
imul
je
add
jne
imul
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
insb
add
push
add
add
je
add
add
add
sldt
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
xor
cmp
sub
and
xor
sub
and
xor
aaa
add
and
cmp
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
mov
add
cmpsb
lods
add
inc
mov
add
push
add
add
std
add
mov
add
sbb
add
pop
add
sbb
add
add
mov
mov
add
cli
push
add
xchg
xor
add
cmp
add
xchg
add
xchg
add
push
repnz
cli
fs
dec
outsb
add
push
fadds
cli
fiaddl
sahf
cmc
add
mov
push
add
add
cwtl
push
add
mov
add
add
add
dec
add
les
or
call
xchg
or
add
add
adc
or
add
add
cmp
add
pop
xchg
or
add
add
jl
or
add
add
pushf
xchg
or
add
add
rclb
add
xchg
or
cld
xchg
or
add
add
and
or
add
add
inc
xchg
or
add
add
jo
or
add
add
pushf
xchg
or
add
add
inc
nop
or
add
add
pushl
or
push
nop
or
add
add
decl
xchg
or
push
nop
or
pop
nop
or
add
add
ljmp
xchg
or
pop
nop
or
fs
or
add
add
decl
add
add
add
add
add
pushl
or
insb
nop
or
je
or
add
add
call
nop
or
jl
or
add
add
pushl
nop
or
test
add
fcoml
or
nop
nop
or
add
add
lcall
xchg
or
nop
nop
or
cwtl
nop
or
add
add
pushl
or
cwtl
nop
or
mov
add
add
jmp
or
mov
nop
or
add
add
decl
or
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
outsl
insb
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jb
imul
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
imul
insb
add
add
add
jb
popa
insb
imul
arpl
add
insl
arpl
xor
fs
insb
add
add
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
add
gs
insb
xor
cs
insb
add
add
gs
insb
inc
js
arpl
gs
add
add
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
add
outsl
arpl
xor
fs
insb
add
add
inc
push
je
jb
jne
add
add
ja
outsb
imul
insb
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
add
dec
inc
inc
push
xor
cs
dec
dec
add
add
add
arpl
inc
gs
jb
jbe
jb
gs
jb
jo
imul
popa
jae
jo
xor
cs
insb
nop
add
add
add
jae
outsb
jne
inc
outsb
je
imul
faddl
add
outsb
or
mov
add
add
add
mov
push
or
jle
add
or
dec
loope
push
push
push
push
mov
test
je
push
out
or
outsb
insb
xor
cs
push
mov
cmp
xor
jb
jne
insb
inc
gs
push
add
mov
call
xor
sbb
mov
jl
sar
sbb
adc
ss
clc
cmpl
mov
push
push
jbe
push
or
lea
inc
aad
stc
mov
add
adc
push
push
call
sub
je
int3
adc
jne
dec
push
addb
pop
push
add
push
jmp
pop
pop
pop
pop
ret
in
xor
push
add
addr16
lea
mov
or
loopne
dec
and
add
xor
add
dec
mov
sub
inc
adc
adc
jmp
xor
or
cmp
or
rolb
sbb
inc
adc
pop
pop
mov
movsb
enter
ret
cmp
rolb
sbbl
shr
enter
stos
adc
mov
add
xchg
lea
xor
or
mov
shr
add
lea
iret
inc
repz
shl
sbb
add
cmc
inc
inc
cmp
jl
mov
imul
mov
js
mov
xchg
adc
xor
sbb
lret
xchg
add
fcmovb
jecxz
add
cmp
mov
int3
sbb
push
push
push
cmp
dec
mov
ljmp
mov
movzwl
dec
pop
lock
test
int
icebp
xorl
push
sbb
mov
and
lock
add
mov
jle
push
xor
mov
or
lret
mov
shr
and
jecxz
lds
sti
lock
shl
inc
push
and
push
sahf
flds
sub
mov
sub
adc
pusha
mov
lds
repz
aas
pop
mov
dec
push
shl
movsl
add
fstpt
sbb
lods
movsb
cmpsl
push
jae
insl
fisubrl
push
testl
test
test
shl
fcmovnu
mov
inc
xor
lea
mov
or
and
insl
push
lock
dec
or
mov
mov
dec
jbe
mov
jge
dec
stos
imul
dec
cmp
inc
nop
icebp
push
push
and
loopne
add
stc
nop
xchg
les
inc
cmp
insb
incl
xchg
mov
sbb
and
xor
ljmp
icebp
push
sub
daa
in
cwtl
imul
mov
clc
xsha256
cmpsb
xchg
or
add
jge
mov
sbb
jmp
es
and
jne
jmp
dec
aaa
rolb
xor
push
mov
and
push
push
sbb
insb
or
test
jl
lahf
adc
and
push
sbb
sbb
test
adc
cmpsl
pushf
push
cmpb
jae
jle
mov
mov
push
and
sub
inc
icebp
jge
adc
adc
mov
xor
setl
dec
loope
push
cwtl
rorb
jbe
lahf
test
xor
js
and
inc
or
adc
pop
dec
xchg
test
fldl
push
test
push
sar
or
mov
or
cmp
push
popa
sbb
jae
and
dec
sub
icebp
leave
fs
arpl
and
cmp
push
cmp
and
inc
push
sbb
unpcklps
cwtl
xor
mov
sub
daa
jecxz
adc
dec
or
pusha
mov
xchg
adc
call
decb
es
push
and
out
fldcw
mul
xchg
mov
test
inc
cwtl
adc
add
mov
mov
jl
lods
jo
jb
outsl
and
in
enter
sbb
and
and
sub
and
rcr
inc
or
xchg
sub
jl
pop
int3
adc
imul
or
xchg
call
lods
push
rcll
test
add
testl
or
sub
shlb
sarl
bnd
ret
cli
and
add
mov
jmp
xchg
pushf
or
xlat
fwait
ret
xchg
xchg
cmp
cli
and
jae
and
mov
clc
shr
sbb
pop
sti
cmp
jae
mov
pusha
add
jecxz
jns
lea
nop
add
divl
decl
push
mov
sbb
sub
cmpsl
test
xor
sub
mov
or
sbb
lcall
cmp
mov
das
cmc
dec
in
and
aad
cwtl
xor
push
out
adc
pop
leave
add
shl
jmp
mov
inc
call
cltd
addr16
hlt
jne
xchg
test
or
loop
sub
lret
pop
mov
cld
xor
ret
add
sbb
add
mov
and
pusha
pop
inc
out
push
sub
push
sbb
leave
data16
or
add
cmc
adc
fxch
xor
inc
cltd
mov
jmp
jge
insl
xchg
cld
and
addb
jne
sub
add
mov
or
and
out
xlat
push
sar
and
or
xorl
xor
movsb
jge
out
or
xor
fistpl
roll
pop
adc
pop
or
mov
sbb
call
add
push
les
push
fiaddl
repz
xchg
cmp
add
nopl
test
imul
test
pop
rcrb
push
and
fstpl
hlt
mov
cmpsl
frstor
fscale
xchg
fsts
inc
or
pop
sub
sbb
dec
repz
dec
inc
mov
jmp
inc
jmp
mov
stc
dec
je
xor
and
adc
ja
std
sub
add
lea
ffreep
mov
setns
mov
iret
inc
insb
sbb
fisttpl
movsl
popa
jl
clc
cmp
pop
mov
inc
and
xlat
mov
jbe
sbb
inc
test
pop
add
jno
cmp
out
hlt
xor
push
inc
mov
lock
adc
adc
cmp
xchg
pop
shll
fcoml
xor
jo
sbb
or
or
inc
mov
es
test
push
mul
outsb
lock
add
jo
add
cmp
adc
sbb
push
xor
hlt
add
jmp
or
or
in
dec
push
push
push
push
call
add
in
aad
les
inc
cld
add
push
call
or
add
lea
fdivs
lods
stos
add
jnp
add
jae
test
push
jo
pop
pop
mov
shl
inc
mov
add
cld
cmp
clc
sbb
push
call
lret
add
add
push
xor
mov
mov
mov
out
scas
enter
mov
xchg
sub
push
inc
dec
sub
nop
add
mov
push
inc
jne
outsb
je
mov
mov
lea
inc
jne
mov
rcll
push
push
and
test
mov
or
sbb
inc
push
lds
and
dec
xchg
or
test
xchg
sbb
xchg
rcll
aas
and
mov
inc
or
sub
icebp
add
movb
add
mov
sub
loope
repz
bound
and
pop
jle
or
dec
shrb
orl
ret
push
ret
mov
clc
cld
cmpsl
call
pop
sub
push
add
push
call
orb
sar
xor
std
mov
push
push
push
adc
mov
pushl
inc
mov
add
in
jo
lods
lods
push
jne
scas
leave
push
nop
add
inc
scas
ror
roll
or
or
scas
pop
add
push
and
jne
jmp
cltd
or
icebp
nop
sub
adc
cmp
dec
cmp
or
add
adc
cs
jmp
sub
push
clc
movzwl
test
int3
jne
jge
push
and
dec
nop
pop
loopne
cld
inc
pop
adc
add
cmp
jge
push
inc
movzbl
flds
rolb
push
cld
sub
shll
mov
jne
sub
lcall
shr
rclb
les
scas
lahf
xor
add
xchg
pusha
inc
jmp
pop
pop
mov
cmp
xor
push
psubsw
xor
pop
push
mov
clc
xor
in
add
adc
call
sbb
inc
inc
dec
mov
push
mov
mov
push
sub
in
xchg
dec
fmulp
inc
in
mov
je
loopne
pop
jge
dec
or
bound
or
stc
add
movsl
sbb
push
cli
movsb
outsl
rcrl
fwait
or
stos
pop
into
pusha
cmp
sub
nop
inc
cmp
mov
push
pop
pushf
jb
roll
push
push
push
xchg
push
mov
loope
mov
mov
dec
sub
pop
sub
cwtl
push
inc
xor
lret
dec
push
hlt
push
push
dec
jge
dec
or
mov
into
jle
jo
push
push
in
shr
xchg
mov
enter
inc
adc
decl
sub
adc
jmp
pop
sbb
ds
inc
popa
push
stc
jmp
fiaddl
out
or
stos
adc
sub
jno
sti
pushf
dec
pop
push
mov
in
lahf
and
leave
dec
and
xlat
icebp
pop
sarb
push
pop
and
add
adc
and
inc
dec
jns
sbbl
push
push
push
push
call
push
inc
pop
dec
xchg
outsb
or
adc
lds
pop
jno
inc
or
sbb
sub
xchg
mov
imul
popa
mov
push
addr16
jmp
adc
cwtl
jp
fprem1
jmp
test
add
idiv
stc
mov
inc
pusha
and
call
test
pop
cmp
cmpsl
adc
push
jecxz
cmp
and
imul
jmp
int
dec
mov
movsb
cld
add
pop
adc
sub
mov
jne
mov
loopne
sbb
dec
or
jmp
movsl
xchg
and
je
cmp
xchg
or
mov
cmp
inc
jo
add
add
iret
shr
loope
sti
leave
int3
push
lea
add
addl
mov
sub
leave
mov
jecxz
adc
add
jne
sbb
inc
sub
and
or
call
and
orb
insb
imul
gs
add
aas
jle
jo
arpl
and
out
insb
mov
mov
and
mov
pop
xchg
jecxz
push
inc
dec
inc
cs
push
jp
popa
insb
and
inc
imul
jne
je
sub
mov
jmp
xor
xchg
fcmovnb
dec
popa
addr16
fadds
js
ja
data16
xchg
je
adc
popa
or
jae
or
fisttpll
roll
inc
js
sbbb
test
mov
sbb
fs
jo
ljmp
out
insb
add
aam
sbb
mov
mov
xlat
sbb
xor
push
add
aad
xchg
xchg
out
sbb
add
add
xor
pusha
mov
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
aam
or
pop
pop
add
orb
outsb
mov
or
dec
nop
or
add
inc
add
or
inc
nop
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
add
add
add
dec
add
mov
add
add
cld
pop
idiv
fldl
add
add
add
add
add
jmp
push
xor
call
mov
and
lds
insb
ret
jnp
leave
jmp
push
push
cmpl
stc
jb
andl
test
or
scas
jle
sti
mov
mov
jmp
js
hlt
push
fcoms
dec
add
jmp
cmp
push
cmp
dec
call
mov
add
stc
jmp
test
add
mov
jmp
push
hlt
ret
subl
jmp
mov
mov
and
xlat
test
add
test
jmp
sub
or
add
subl
stc
jb
xchg
jne
jmp
sbb
mov
clc
jmp
es
jmp
ret
clc
jmp
cmpsb
jmp
mov
sub
mov
andb
lods
or
inc
sub
sub
insl
adc
shll
sub
stos
inc
jp
clc
push
sub
mov
jg
fwait
add
cs
daa
mov
stos
push
mov
mov
and
es
mov
lods
lods
idivb
jb
xchg
push
jmp
sub
testb
lea
sub
mov
or
jo
pop
jl
arpl
mov
fisttpl
mov
pause
stos
lock
fwait
js
push
xchg
mov
test
daa
mov
inc
das
xchg
add
mov
push
inc
jl
xchg
push
test
add
andb
sti
cmpsl
es
cld
push
sub
adcb
lods
pop
mov
lods
inc
adc
xor
and
es
test
iret
scas
iret
scas
sub
jbe
jb
and
dec
add
loop
and
dec
add
mov
add
mov
mov
add
jmp
sbb
lea
scas
fmull
dec
int3
dec
loopne
cs
cmpsl
pushf
jb
