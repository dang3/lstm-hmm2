mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
push
hlt
dec
aam
xlat
lahf
outsw
adcb
lock
daa
push
ss
jp
sahf
ds
cmpl
mov
sti
push
mov
cs
jge
pop
sub
popf
aaa
push
xchg
mov
das
pop
xor
popf
lahf
pop
mov
sbb
icebp
mov
cmp
inc
aaa
fs
les
adc
add
es
and
dec
mov
or
outsb
xor
cmpsb
ds
mov
enter
sub
jno
jno
mov
cld
sahf
shll
aaa
jg,pn
sarl
mul
bound
sbb
test
xor
test
adc
imul
icebp
lcall
pop
jge
or
lret
mov
mov
repnz
add
lahf
cmpsl
out
fsubr
pop
and
hlt
nop
mov
adc
es
and
es
sub
sti
dec
and
push
lcall
out
add
cmp
stos
mov
data16
iret
add
mov
cltd
inc
mov
mov
sbb
push
fwait
mov
mov
arpl
outsl
adc
les
imul
popf
mov
mov
xlat
inc
sbb
rorl
insb
inc
stc
xor
in
shr
shrl
xchg
dec
sub
dec
mov
xor
pusha
lea
jae
lret
cmpsb
addr16
pop
pop
jmp
inc
daa
int
dec
cld
stos
add
lahf
mov
dec
jle
shrl
mov
rcll
fisubrs
xor
mov
jae
in
xchg
and
xor
outsb
cli
aad
and
mov
and
adc
out
test
jge
repz
jnp
imul
xchg
ja
add
mov
clc
arpl
js
jns
pop
test
pop
or
sub
dec
sbb
or
and
insb
pushf
mov
mov
lcall
bnd
aas
fwait
arpl
test
adc
mov
inc
inc
mov
jne
arpl
and
mov
dec
insb
sarl
sub
xor
jns
cs
mov
jge
adc
insb
fs
nop
outsb
mov
mov
mov
xor
sub
into
mov
xchg
mov
call
js
sub
jmp
jle
sbb
sbb
push
les
das
jecxz
jne
xchg
cs
or
hlt
data16
xor
arpl
xor
add
mov
test
call
out
stc
sub
lds
jbe
mov
dec
sbb
inc
mov
dec
daa
outsb
pop
out
jne
xor
out
arpl
mull
popa
popa
out
pop
pop
jo
sub
dec
in
inc
or
cmpsl
idiv
fstl
mov
lret
xlat
add
inc
imul
adc
xorb
mov
adc
iret
movsl
xchg
lret
xchg
aaa
sub
xorl
les
js
stos
in
push
andb
popf
ljmp
rolb
jbe
pusha
dec
out
clc
or
rcrl
jnp
xchg
or
xor
sarl
pop
in
mov
lods
adc
fcom
jno
pop
outsb
inc
xchg
mov
push
loopne
filds
pop
inc
lret
pop
std
loop
mov
push
pop
bts
fdivrs
bound
inc
dec
sub
inc
call
xchg
jmp
les
lcall
movsb
dec
dec
jae
fcoml
insb
jp
loope
sbb
je
mov
cmp
mov
imul
xchg
xchg
int3
repnz
add
lahf
push
pushf
je
push
pushf
sbb
shlb
rolb
scas
ds
pop
push
sbbl
fmull
ret
adc
sbb
inc
rdtsc
inc
push
pop
mov
pop
je
outsl
xor
jge,pn
pop
dec
push
add
xor
mov
out
enter
jge
and
dec
psubusb
cmpsb
adc
pop
jle
push
out
xchg
pop
xchg
pop
enter
fucomip
and
jo
adc
fs
jge
aam
pop
pop
dec
jae
and
jge
or
popl
ja
fbstp
jle
adc
push
jecxz
jl
dec
movsl
ret
xor
iret
pop
repnz
mov
mov
cmpsb
or
pop
add
xor
mov
mov
cld
pop
in
popa
outsl
pop
out
mov
adc
iret
or
insl
add
xor
pop
push
movsl
sub
mov
xor
xchg
ret
sahf
insb
lds
icebp
inc
inc
in
andb
out
andl
pop
pop
cli
ljmp
sub
adc
jnp
xchg
lcall
pop
xchg
sub
xor
loope
push
sbb
aaa
xchg
test
mov
in
jle
cmp
ret
cld
mov
iret
sbb
mov
out
xchg
sbb
pop
stos
xor
addl
sbb
cmp
xchg
call
and
xchg
xor
xchg
imul
icebp
mov
dec
test
mov
icebp
out
or
push
mov
push
rolb
test
add
dec
pop
sub
or
mov
pop
insl
jnp
dec
lods
int
pop
lods
and
lret
icebp
repnz
stc
mov
pop
jecxz
enter
dec
xchg
adcb
mov
cmp
xchg
lahf
imul
sub
adc
sbb
sub
and
dec
fcoms
and
jmp
inc
mov
js
mov
out
rcrb
xor
aam
lahf
pop
stos
add
pop
divb
xor
pop
xlat
push
mov
jbe
sahf
adc
xchg
das
inc
test
cli
push
test
out
jmp
and
test
int
mov
sub
dec
pushf
mov
jnp
xchg
adc
test
cmpsb
loopne
icebp
push
push
mov
cmp
cmp
sub
pop
std
pop
mov
int
push
pop
or
nop
movsl
inc
pop
sbb
cmp
cmp
and
movsl
out
xor
mov
jle
jns
xor
adc
lods
fistl
test
adc
sbb
add
out
dec
mov
aam
xor
xchg
fistl
movsb
in
jmp
sub
pushf
inc
fs
xlat
push
dec
imul
mov
ljmp
push
xchg
sbb
dec
paddsw
jns
push
test
jne
dec
enter
int
repz
mov
mov
pop
and
loop
dec
add
das
popf
fsubrs
mov
ret
stc
leave
jbe
dec
inc
loopne
push
mov
dec
ret
aam
je
push
pop
sbb
and
dec
enter
sub
into
jg
in
xchg
ja
push
shrb
jno
fimuls
inc
add
ret
call
fsts
mov
mov
sub
xor
mov
pop
imul
mov
mov
bound
mov
outsb
xchg
sbb
xor
fadds
mov
add
aad
cwtl
rcl
je
push
fdivrs
in
xchg
sub
push
adc
adcb
daa
fildll
in
inc
call
rcl
sti
push
decb
popf
insb
cmp
in
flds
dec
movsl
mov
push
les
aad
cwtl
insb
lahf
add
pop
mov
push
aam
inc
push
jbe
inc
pusha
test
or
scas
call
mov
mov
sbb
pop
mov
cmp
inc
or
cmc
aas
mov
roll
pop
pushf
popf
rcr
lock
add
xchg
sahf
cld
mov
lcall
stos
repz
das
sbb
mov
loopne
add
mov
arpl
dec
adc
int
js
jns
push
and
das
out
inc
addr16
mov
xor
dec
mov
inc
dec
jae
adcl
push
into
cwtl
rcll
sbb
dec
xlat
mov
adc
inc
cmpsb
dec
inc
xchg
sahf
mov
ret
mov
in
ja
pop
pop
mov
mov
push
pop
popf
cmc
pushf
loope
int3
cmpsb
out
enter
stc
push
pop
dec
push
push
pop
cmp
pop
test
pop
arpl
int
dec
fwait
xchg
rolb
iret
sbb
jge
mov
mov
mov
movb
and
inc
sub
sbb
leave
mov
popa
mov
out
push
mov
mov
les
icebp
dec
lods
test
mov
sahf
cmp
dec
adc
sub
loopne
bound
xor
lret
xchg
adc
popa
xchg
pop
push
lock
and
adcl
decb
into
xchg
lret
sbb
add
jp
or
in
cmp
or
test
test
fcmove
xor
jne
pusha
dec
orl
xor
sbb
add
ss
pop
push
lods
cli
gs
movsl
sahf
mov
push
xor
fidivl
repnz
lcall
aas
inc
and
xchg
call
cmpsb
les
clc
cld
cmc
or
test
iret
mov
insl
fldl
js
arpl
lock
stc
pushf
sbb
dec
jle
pusha
push
lods
jb
jo
movsl
lret
cmc
xor
xchg
jne
pop
movsl
xchg
xor
fdivrs
mov
mov
sbb
std
and
and
fcompl
movsb
add
pop
mov
imul
xchg
jae
dec
add
jg
arpl
push
dec
mov
jbe
xor
xchg
ffreep
or
mov
inc
push
loopne
outsb
shll
mov
fs
repnz
aad
cmp
xchg
cwtl
xor
pusha
or
insb
ljmp
jp
cmp
ret
push
and
movsl
ss
inc
cmp
xor
stc
repnz
mov
jmp
call
out
push
sub
sub
jmp
cmp
cmpsb
jo
in
sub
push
xor
in
jle
ss
faddl
movl
xor
adc
std
lahf
xchg
or
pop
cmpsl
cld
mov
scas
iret
push
and
pop
inc
int
mov
mov
in
mov
in
sub
cltd
adc
int
enter
pop
pop
jne
test
dec
rcr
js
and
dec
mov
dec
int
mov
std
shrl
loop
mov
ja
mov
popa
pushw
lret
stos
mov
pop
fistl
mov
sub
dec
sbb
stc
out
es
add
fsts
cmp
adc
out
inc
push
ret
adc
dec
xlat
xor
and
in
mov
test
or
stc
sub
and
imul
adc
test
nop
or
mov
push
dec
mov
push
int
fidivrs
and
fistps
pushf
push
jb
bound
lahf
int3
inc
sub
mov
sub
scas
aaa
mov
mov
jecxz
mov
rolb
outsb
scas
pop
jl
add
xor
xor
fcmovnbe
lea
rol
lea
fildl
mov
lret
mov
lret
push
cltd
loope
pop
pop
cwtl
incl
adc
std
jbe
mov
add
addr16
enter
data16
push
sub
jbe
xor
xchg
ret
icebp
xchg
orl
add
sub
shlb
rcll
xchg
or
adc
xor
xchg
cmpsb
xor
add
push
push
bound
add
pop
jp
in
mov
add
push
adc
das
fadds
repnz
jle
nop
test
mov
push
int3
sub
push
dec
shl
and
push
add
add
rorl
pop
jne
gs
adcb
std
imull
hlt
adc
fnstsw
or
push
mov
loopne
or
andb
stos
jbe
jns
xchg
pop
test
iret
inc
outsl
xchg
ja
stc
push
xlat
adc
dec
mov
std
cltd
mov
mov
fcmovnb
and
popa
rcrl
pop
pop
mov
or
pop
in
dec
lret
jecxz
leave
hlt
mov
xor
adc
rdpmc
loop
add
sarb
outsl
rclb
addb
xor
test
lock
fdivrs
jl
into
cmp
fmull
cmc
test
pop
adc
inc
mov
and
mov
fwait
inc
xor
ja
lock
cmpsb
sti
xor
dec
cmpsl
std
cltd
dec
call
jno
sahf
cmpsb
or
aaa
add
mov
xor
push
push
push
in
adc
inc
mov
dec
cmp
ret
imul
lds
mov
inc
test
arpl
lahf
ja
loopne
mov
pop
sub
fdiv
outsb
bound
xor
pop
sub
cltd
ret
cli
popf
pop
lds
push
jmp
lock
scas
mov
outsl
in
outsl
fs
push
jp
std
jnp
fsubrl
test
lahf
out
or
pushf
and
mov
in
sub
jmp
inc
jne
push
test
dec
ja
or
inc
pop
jp
gs
or
sbb
mov
subl
notb
pop
adc
lcall
lea
xlat
xchg
pcmpeqd
xchg
xchg
mov
jp
imul
ja
jo
sti
sti
imul
push
imul
xchg
pop
push
mov
inc
popa
hlt
prefetchwt1
mov
add
jns
sbb
xlat
std
rcll
sub
push
repnz
xor
iret
cmpsl
xorb
fdivr
or
imul
xor
sbb
mov
scas
cmpb
jae
js
rcl
leave
mov
push
mov
aas
and
loopne
mov
adc
add
cmp
out
sti
out
enter
dec
mov
sub
xchg
jb
jo
adcb
aas
fisttps
or
cmpsl
push
mov
pop
dec
lret
add
push
push
cmpsb
jmp
fisttpll
sbb
adc
push
shl
insb
xchg
sbb
icebp
test
add
lcall
arpl
aas
mov
cltd
shlb
rcrl
xlat
add
pop
jl
and
stos
push
ja
es
sub
scas
push
in
addl
jmp
jecxz
adc
pop
xlat
pop
lea
inc
mov
lcall
pop
insl
cmp
cli
outsb
sbb
divb
push
insl
lea
adc
icebp
ret
add
call
cmp
push
in
add
lret
adc
push
pop
fdivs
outsl
popa
dec
lods
cld
or
mov
xor
cmc
mov
push
std
pusha
mov
les
adc
dec
jbe
mov
jecxz
and
dec
das
cmp
dec
pop
sub
dec
repnz
jg
int3
fxch
or
inc
pop
lret
jns
dec
icebp
notb
dec
mov
xor
pop
or
inc
pop
cmpsl
addr16
ljmp
sahf
test
and
je
jecxz
add
sahf
pop
es
and
mov
mov
std
sahf
push
cmpsb
fs
lret
stos
xchg
xchg
pop
shll
mov
xchg
repz
loopne
mov
and
ret
mov
call
adcl
pop
outsb
sti
cmp
addl
enter
mov
mov
rorl
inc
jecxz
cmc
popf
out
jl
ds
push
andb
mov
xchg
sbb
lcall
in
fstl
shlb
xchg
or
ret
mov
push
push
xchg
scas
sub
arpl
mov
scas
in
scas
lret
mov
or
rolb
or
jecxz
insb
pushf
fucomp
dec
cmpsl
loop
cmp
jae
sub
daa
in
sub
dec
sbb
dec
gs
mov
mov
or
hlt
mov
sbb
adc
adc
and
adc
push
push
jbe
mov
inc
jno
inc
es
andl
iret
lret
push
out
mov
or
jge
and
jbe
mov
mov
sbb
and
sbb
lahf
sarl
inc
jns
cmpl
cmpsl
lea
icebp
xchg
xchg
int3
stos
mov
out
and
fidivrs
mov
mov
cmp
test
pop
pop
roll
sbbb
shrl
cltd
mov
dec
sbb
out
inc
xchg
jne
or
fs
ret
test
ljmp
jo
loopne
movsl
and
pop
lods
nop
dec
dec
shll
loop
ss
mov
dec
mov
dec
in
inc
iret
and
push
je
and
and
adc
cmpsl
jge
push
dec
cmc
paddb
jmp
rorl
lea
add
mov
int3
in
int3
addl
jecxz
and
hlt
jmp
inc
xchg
sbb
jecxz
loopne
cmpsb
push
xchg
xor
mov
inc
add
dec
push
push
iret
jg
jb
lds
pop
insb
ljmp
pop
cwtl
es
aad
dec
jg
dec
movsb
dec
dec
push
nop
push
ja
and
test
and
mov
nop
mov
cmpsb
test
pop
sbb
rcll
push
fdivrl
push
xchg
addb
fwait
or
data16
xlat
and
jbe
out
xlat
sbb
push
lock
bound
sbb
or
inc
push
mov
cmp
mov
xchg
cltd
pop
popa
or
shll
mov
nop
rolb
repz
pop
lret
scas
addr16
sub
insb
aam
inc
loope
inc
mov
daa
fistl
jo
xchg
mov
lock
fsubs
enter
sbb
inc
js
bound
addr16
mov
sbb
cmc
jecxz
add
out
stc
repz
arpl
add
nop
push
rcll
sub
inc
mov
pop
mov
stos
and
sarl
gs
fsubrs
nop
pop
sarl
sahf
mov
sub
test
insl
rolb
cli
loopne
or
xchg
aaa
imulb
cmpsb
rcr
cmp
sbb
fsubrl
jne
iret
aad
lds
cwtl
mov
in
enter
mov
fstps
or
push
jp
inc
xlat
pop
sbb
cmpsl
push
sub
fnsave
divl
mov
repnz
leave
cmpsb
xor
xor
add
es
movsl
xchg
push
xchg
and
sbb
xor
ss
jae
icebp
jnp
cwtl
in
jge
loope
dec
out
xchg
adc
sub
popa
dec
fisttps
pop
sub
mov
push
sbb
stc
jp
lods
imul
mov
addr16
push
and
sub
fstpt
leave
shrb
cs
es
dec
rclb
mov
add
ljmp
sbb
out
shl
cmp
mov
shrl
xor
push
jmp
add
mov
inc
lods
mov
ja
xchg
adc
sbb
aaa
cmc
or
add
add
push
std
sahf
rorl
loopne
imul
pop
add
xor
sub
push
cmp
adc
sbb
cmpsb
sbb
dec
jb
push
jbe
add
lea
ljmp
sar
ja
jno
add
gs
xchg
xor
scas
test
pop
push
repnz
popl
sbb
ss
mov
or
sub
cs
inc
mov
sub
fstps
movsl
lods
cmpsl
jmp
xchg
add
push
rolb
and
shlb
aas
pop
or
unpckhps
stos
rep
add
xor
lahf
aas
test
loop
scas
cwtl
aaa
adc
movsl
sbb
movsl
mov
lds
xor
ja
hlt
test
mov
push
in
dec
mov
and
imul
xchg
fnstcw
mov
mov
rcrl
sub
inc
notl
and
pop
scas
pop
out
mov
jp
jge
mov
shlb
stos
xchg
add
or
xchg
es
inc
or
fabs
and
mov
insb
jb
incb
ret
push
sbb
sub
fildl
push
mul
mov
xor
loope
xlat
xchg
sub
mov
imul
rcll
stos
xchg
adc
int
xor
mov
xchg
mov
jb
xor
std
sub
or
imul
mov
xor
iret
cmp
je
mov
sub
push
jmp
add
sub
sbb
xor
cltd
jmp
aad
mov
push
mov
mov
push
es
xchg
in
push
cwtl
loop
dec
mov
ljmp
push
not
sbb
and
pop
xchg
fcoms
mov
dec
aaa
and
mov
aaa
in
mov
addps
clc
cli
xchg
jecxz
scas
je
fidivs
pop
push
adc
xchg
xor
outsb
sbb
mov
enter
hlt
add
out
add
push
cmpsb
outsb
scas
into
add
inc
clc
mov
cmp
push
sub
sbb
das
mov
shrl
cmc
aaa
movsl
dec
in
rcrl
mov
iret
push
push
inc
rorb
jnp
iret
sarl
cmp
push
inc
shl
iret
mov
cmp
loope
mov
add
jno
mov
jge
int
je
lahf
mov
rcrb
test
add
jbe
and
mov
cmp
std
xchg
pop
in
and
and
subl
outsl
or
xor
sti
xchg
jmp
add
jns
mov
dec
cmp
int3
lret
loope
aaa
mov
pop
jns
inc
outsb
or
lods
jecxz
adc
aaa
sahf
mov
lret
inc
adc
xor
inc
push
popa
jb
pop
xchg
pop
jg
pop
sarb
cmc
sarl
mov
push
insl
sub
push
ret
sub
push
fnstsw
cmpsb
push
aam
jmp
inc
mov
insl
mov
pop
popa
jo
push
mov
inc
pop
daa
sbb
mov
mov
mov
testl
mov
in
pop
lock
sub
push
add
shll
scas
sub
in
popa
repnz
jb
scas
sbb
ror
dec
ss
inc
pop
dec
cmc
lcall
rclb
in
ss
or
xchg
cwtl
push
fwait
inc
cmp
mov
xor
inc
and
fs
dec
xchg
arpl
stc
iret
clc
dec
cmpsb
inc
in
sbb
les
jnp
mov
sahf
dec
dec
push
sbb
hlt
lahf
mov
das
mov
leave
jl
xor
pop
popf
sahf
mul
out
out
add
mov
and
inc
pusha
fiadds
stos
mov
push
inc
loopne
add
dec
lea
dec
icebp
loope
fldl
clc
lods
jge
and
bound
les
inc
cld
fidivrl
mov
sub
cli
sbb
aam
push
and
mov
xchg
jnp
cmpsl
and
jl
outsb
aam
cmp
cmp
pop
cwtl
sub
or
fwait
sub
fnsave
push
ss
loope
pop
ret
stc
aad
pop
test
clc
mov
mov
sbb
test
ret
repz
push
fistpl
cmp
sbb
stc
jecxz
sbb
out
leave
push
test
aas
push
fwait
lock
ja
pop
push
stos
subb
xchg
add
cwtl
mov
sbb
inc
fs
mov
outsl
sub
xor
mov
or
jbe
cmp
and
and
cwtl
push
scas
out
jmp
insb
stos
inc
jbe
in
inc
inc
ljmp
dec
pop
lock
leave
add
mov
andl
lods
loopne
jno
mov
jecxz
int
aam
fwait
sbb
push
sarb
les
jns
sub
daa
les
xor
out
inc
push
aad
adc
out
fisubs
lock
cmp
and
mov
push
cmp
mov
call
sub
xlat
dec
andb
lea
dec
test
imulb
sub
cmp
stc
or
cmp
jnp
adc
pop
imul
inc
arpl
dec
cs
pop
data16
loope
cmp
repnz
sub
rorl
sarl
add
out
xor
bound
sahf
pushf
fistl
xchg
pop
test
adc
push
mov
jmp
pop
out
jmp
adc
push
mov
sub
push
mov
test
add
adc
jge
xor
int3
pop
or
lods
dec
fcmovnu
jle
cmpsl
roll
jnp
insb
hlt
xor
inc
inc
outsl
ret
push
pushf
fistl
adc
push
fstpt
dec
in
inc
dec
test
adc
rclb
xchg
fmulp
cmp
addr16
dec
jmp
int3
das
stos
fwait
testl
cmp
dec
inc
js
mov
rcr
pop
ficoml
enter
out
or
hlt
dec
fisttpl
enter
cwtl
std
sub
xchg
fdivrl
jge
lea
jg
mov
and
pop
inc
sbb
mov
das
dec
inc
lock
pop
and
jp
divb
dec
cmp
inc
ret
inc
int3
mov
fscale
add
in
add
jmp
push
fdivr
flds
xor
mov
inc
inc
clc
inc
sub
and
ss
ss
adc
lret
ja
idivb
inc
orb
push
dec
std
fcompl
insl
jle
out
add
xchg
ret
gs
flds
cli
cwtl
scas
inc
cmp
pop
or
jns
mov
imul
lods
xchg
rorb
sub
imul
push
push
enter
pushf
jae
aam
inc
mov
cmp
dec
xchg
gs
jnp
repz
mov
addr16
test
pop
and
inc
sub
sub
out
push
dec
inc
xchg
and
mov
jge
mov
mov
xchg
inc
jae
enter
jne
in
mov
cmc
mov
pavgw
dec
cmp
lea
xor
xchg
daa
jle
push
pop
fmul
add
cwtd
dec
ss
mov
push
pop
push
das
fimull
in
in
mov
xchg
push
jecxz
out
test
dec
xor
mov
and
movsb
cmp
push
andl
das
jle
or
mov
mov
idivb
ficoms
cmp
andb
and
mov
adc
sub
cmp
into
iret
rcrb
fists
and
pushf
xlat
testl
std
push
dec
stos
mov
sub
cld
cli
push
clc
adc
push
jl
pop
std
fcoms
movsb
add
sub
cmpsb
dec
je
pop
or
jnp
ss
lcall
add
or
sbb
in
clc
aas
fs
pop
cmpsl
xchg
and
sar
fs
add
add
xchg
or
fdivrl
xlat
fcomp
sub
xor
cld
ror
add
push
lea
sbb
test
sbb
and
lcall
and
or
test
jecxz
xor
inc
ss
loopne
lcall
jb
mov
xor
out
lock
rclb
loopne
int
cli
add
cmpsl
in
xchg
loop
and
pop
test
popf
jno
cmp
loop
mov
movsl
ljmp
test
iret
inc
push
adc
xor
mov
pop
int
cmpsl
and
inc
add
scas
cmpsl
add
dec
andb
daa
dec
stos
jmp
inc
and
xorb
sub
aad
push
dec
push
sbb
iret
fisttpll
fsubrs
xchg
and
imul
and
push
cmpsb
gs
xor
push
les
dec
out
and
dec
pop
inc
xlat
xor
lret
adc
inc
movsl
mov
xor
jae
leave
rcll
repnz
into
mov
dec
mov
jb
sbb
and
movsl
mov
loop
ljmp
popa
outsl
mov
or
xchg
pushf
jle
adc
nop
out
loop
push
repnz
jp
mov
mov
sbb
or
pop
inc
mov
or
scas
mov
test
adc
ss
xor
sbb
sbb
leave
cmp
inc
cmpsl
xor
pop
xlat
mov
addr16
jns
add
outsb
lea
mov
hlt
enter
or
clc
pushf
imul
dec
imul
aaa
in
out
mov
adc
pop
pop
out
sub
nop
inc
mov
or
clc
ret
or
sahf
jmp
stos
inc
shr
add
pop
gs
lods
cmp
fidivs
cmp
dec
je
dec
sub
pop
cmp
lret
in
jg
sub
fidivl
mov
iret
icebp
ret
push
enter
cmp
mov
mov
lret
loope
jae
cmp
xor
lret
xor
stos
adc
add
mov
std
push
mov
dec
je
testl
mov
fisttpll
inc
mov
push
rclb
mov
in
dec
xor
xor
cltd
repnz
fistl
mov
xchg
call
in
loope
ret
mov
addr16
sbb
jno
jbe
bound
mov
mov
and
lcall
xor
out
insb
cltd
pop
pop
ja
push
fdivp
iret
mov
adc
add
inc
es
xor
adc
xchg
cmp
lock
sub
inc
push
fs
shrb
scas
clc
in
mov
adcl
mov
jp
test
cld
dec
filds
jmp
les
lcall
sti
inc
rorl
push
in
add
mov
pop
sbb
jg
sub
pop
idivb
mov
inc
in
push
mov
ret
in
jmp
sbb
xlat
ljmp
inc
into
cli
mov
or
rclb
and
divb
int
jnp
ficoms
inc
push
pop
push
out
mov
dec
mov
ret
dec
cmpsl
pop
jmp
sahf
sbbl
jp
dec
sub
xchg
add
sub
pop
aas
jb
jae
xchg
add
adc
ret
stos
jo
sub
mov
dec
stos
in
mov
adc
out
pop
outsb
mov
icebp
loopne
pop
loopne
sub
in
mov
cmpsl
jl
pop
xlat
stos
movsb
and
mov
dec
movsb
pop
ja
sub
jnp
cmc
je
mov
pusha
cs
mov
insl
mov
enter
xor
clc
sub
out
lods
cmpsl
cli
mov
cmp
in
or
push
daa
icebp
out
outsb
jno
xor
push
pop
push
lea
jno
pop
push
ljmp
cmc
stos
fdivl
inc
sahf
or
sub
cmpsb
lods
push
divl
cmp
movsl
fsts
je
adc
mov
pop
clc
dec
add
adc
xchg
inc
std
leave
jl
cmp
mov
popf
insl
loope
sbb
shlb
mov
adc
das
cmp
cmpsl
in
icebp
ds
cltd
je
outsl
add
mov
add
imul
in
test
xchg
aas
mov
popf
cltd
dec
mov
cmpsl
das
xor
js
dec
xor
dec
dec
dec
call
ja
data16
mov
cmp
ds
ss
sbb
sbb
outsb
xor
cltd
sub
ja
xchg
push
cld
rclb
lods
lock
xlat
lea
repnz
cmc
fisubrs
test
push
scas
mov
dec
popf
insl
cmp
cmpsb
sub
or
inc
fidivs
jno
mov
xorb
inc
loope
lea
hlt
inc
mov
push
push
idivl
lahf
in
mov
shll
sbb
xchg
pop
jbe
cmp
inc
into
in
adcb
cmp
es
dec
mov
mov
fsub
pop
mov
mov
sub
outsb
cli
and
stos
or
jge
mov
jbe
andb
jmp
je
xor
xchg
xlat
cltd
push
rcrl
orb
pushf
sti
bound
sti
dec
mov
xor
dec
iret
nop
xor
mov
paddb
dec
sarb
xchg
push
out
dec
mov
cli
ds
xchg
jp
loop
mov
imul
jne
sub
pop
aad
dec
sbb
cmp
ljmp
cmp
pop
and
or
jmp
inc
adc
sbb
repnz
jno
mov
pop
and
jge
outsl
pop
inc
push
pop
aam
loop
add
rcr
loope
out
sbb
ds
mov
mov
ljmp
subb
cmp
push
sti
and
fwait
add
hlt
sbb
sahf
push
fisubs
out
mov
and
cmp
hlt
pop
lods
das
push
in
aaa
jecxz
int3
outsl
xchg
ja
dec
jbe
test
mov
cmpb
dec
adc
pop
je
dec
shl
mov
push
push
shlb
je
stos
std
cs
lret
lret
cltd
sbb
test
push
or
fnstenv
or
sahf
push
mov
mov
pop
bound
mov
or
imul
in
dec
sub
popa
pop
orps
add
popf
push
sub
cltd
loop
jecxz
pushw
mov
imul
xchg
xchg
lea
gs
and
jnp
ret
jo
out
jno
cmp
fwait
push
fcomi
xor
xchg
das
sbb
aam
dec
inc
jne
sub
pop
dec
pop
call
lcall
mov
fnstcw
outsb
and
test
rolb
scas
add
and
add
inc
mov
mov
scas
je
mov
push
nop
sub
mov
xchg
xor
xchg
sbbl
push
add
fwait
push
mov
push
fwait
roll
add
movsb
jno
test
mov
cmpsb
scas
int3
mov
lds
jb
pop
mov
fnsave
ja
push
call
jae
lods
sahf
lds
call
aad
xor
fcoml
dec
shr
cmp
xor
xor
or
mov
mov
das
mov
sbbb
insb
mov
fisubl
lds
ret
fldl2e
lahf
sub
adc
xor
int3
lcall
cmp
divl
dec
rol
or
aas
das
xor
sub
pop
sub
lock
test
popa
insl
sti
sti
int
xor
xchg
js
nop
jns
pop
xor
fsubrs
push
jns
cld
cmp
xchg
test
ret
rcrl
add
jge
leave
mov
push
dec
push
paddb
fadd
insl
loope
xchg
inc
lds
inc
mov
sbb
jns
mov
js
push
lret
cmp
dec
ret
pop
jo
call
mov
add
or
repnz
notb
call
pop
mov
pop
popf
cs
fidivl
dec
pusha
hlt
jl
jg
inc
mov
inc
or
iret
negl
cmc
cmp
inc
cmp
push
push
das
test
ljmp
test
stos
loop
loope
popa
mov
dec
in
lahf
sub
xor
lea
pop
pop
push
cmp
adc
inc
dec
mov
adc
test
pop
sub
ds
sub
mov
js
mov
sub
cld
jle
inc
mov
lret
mov
mov
fwait
or
pushf
adc
jecxz
mov
pusha
xchg
push
or
je
cmp
mov
loope
loopne
jecxz
arpl
ljmp
mov
cmp
loopne
out
sbb
xlat
dec
mov
xchg
outsb
jge
and
xor
pop
jge
lea
loope
push
idivb
out
rcr
xchg
ljmp
shl
adc
arpl
outsl
or
dec
lock
jp
jns
mov
aaa
add
jle
mov
lret
push
or
or
and
jl
cltd
shl
fbld
out
nop
in
pusha
cmp
cld
pop
cmp
mov
add
sti
repnz
jbe
xchg
popa
sti
dec
or
xchg
mov
xchg
push
lcall
push
jmp
sub
ja
js
aad
leave
fdivrp
cmp
fwait
ds
adc
insl
sub
popf
lahf
fstl
or
pushf
ss
loopne
xor
fwait
lea
fnstsw
fbstp
ret
aaa
push
adc
mov
out
sbbl
mov
xchg
mov
jecxz
and
fnsave
nop
and
adc
fidivrl
fcom
out
decb
fsts
in
hlt
push
in
adc
lret
dec
jno
sub
push
push
fdivrl
or
cmp
movsb
cmpsl
mov
or
outsb
ds
imul
pop
sahf
in
cmpsl
cld
dec
and
jle
dec
in
das
lcall
insl
mov
stc
lret
lds
fcoms
sub
add
icebp
cli
sahf
jns
dec
ds
repnz
roll
xchg
shlb
push
and
in
repz
sbb
pop
clc
sbb
sub
push
adc
sahf
inc
inc
mov
push
rolb
lea
orl
adc
cld
pop
or
cmp
out
pop
pop
sti
adc
test
sbb
sub
in
pop
and
std
adc
push
cs
mov
scas
hlt
sub
lret
inc
pop
iret
mov
fisttpll
add
subl
repz
pop
add
dec
dec
call
aad
loope
jmp
xchg
mov
and
cmp
bound
inc
je
cld
std
adc
arpl
insb
stos
std
scas
and
push
ja
mov
jmp
cmc
fidivrs
adc
cmpsl
mov
sub
add
adc
pop
out
popa
cltd
sub
pop
movsb
sub
rcr
sub
pop
sbbb
test
mov
jmp
pop
push
pop
js
out
cld
pop
loope
call
and
test
cmpsl
or
cli
lahf
and
iret
dec
mov
or
lea
jl
pop
push
and
cmc
push
push
bound
sbb
add
add
jbe
fwait
cmp
xor
jbe
sub
out
mov
sub
out
push
cmp
addl
and
xchg
adc
ret
fidivrs
lcall
lret
xor
add
rorl
add
adc
xchg
xor
inc
add
adc
jns
icebp
ja
push
cmc
dec
push
adc
mov
mov
and
adc
add
inc
sbb
frstor
cmpsl
dec
xchg
xchg
inc
push
mov
lock
mov
pop
cmpsb
or
xor
iret
mov
cwtl
add
dec
lods
test
xchg
xchg
add
jae
mov
pop
js
movsl
jle
scas
fstpl
and
popf
pop
push
dec
loop
cmp
and
jo
stos
sbb
int
xchg
add
jmp
outsl
mov
rorb
je
in
cmp
push
cmp
dec
adc
push
and
inc
out
hlt
mov
aad
inc
mov
or
pop
add
out
mov
adc
sbb
test
fistpll
sub
repnz
jns
mov
xlat
jl
mov
cld
mov
aam
cli
je
addr16
lods
bnd
pop
mov
out
icebp
fadds
jmp
popf
outsb
lods
sbb
adc
adc
outsl
scas
scas
inc
cmpsl
add
jecxz
sub
insb
and
int3
add
fcomip
mov
test
insl
jp
data16
cmp
mov
negl
cmp
js
rorb
leave
dec
jo
lahf
fucom
push
jmp
gs
inc
sahf
dec
andl
fs
mov
mov
push
cmp
outsb
jl
in
mov
inc
xor
popf
mov
js
mov
insl
negb
mov
push
inc
or
pop
xchg
jbe
pop
xchg
pop
es
sbb
mov
movsbl
test
jle
mov
js
add
sbb
and
mov
or
mov
jle
mov
and
das
xchg
aad
add
test
and
out
mov
mov
sbb
or
inc
or
sub
add
leave
push
mov
loopne
sbb
imul
push
or
out
cli
into
ja
mov
adc
pop
movsl
cmp
jbe
mov
sarb
sahf
in
cmc
in
mov
and
dec
int
pop
xchg
dec
movl
or
addr16
in
or
mov
add
xchg
fsubl
cmpsb
sub
jb
test
mov
loope
xchg
ret
dec
std
test
pop
aaa
fnstsw
repz
mov
add
and
and
pop
jmp
cmc
addr16
xchg
or
mov
inc
pop
dec
scas
and
sbb
xor
mull
cmovb
jmp
mov
sub
jg
shll
clc
ljmp
jae
mov
push
xchg
lret
and
int3
das
dec
lods
xor
or
jne
enter
mov
xchg
xchg
dec
popa
jle
push
add
outsl
aad
imul
xchg
push
and
in
jbe
mov
cltd
push
in
pop
add
add
cmpsb
adc
jg
stos
repnz
pop
jnp
add
push
leave
sub
inc
mov
adc
inc
ret
lods
sbb
inc
call
ret
cltd
adc
jns
mov
rcrb
and
xchg
sub
iret
cmp
cmp
test
mov
push
outsb
pop
cli
aam
add
les
sub
mov
test
mov
push
xorl
stos
mov
das
and
inc
outsl
in
push
adc
dec
je
pop
cmp
fldenv
cli
in
inc
jae
js
movsb
adc
das
clc
sbb
pop
dec
lret
push
std
pop
inc
jnp
mov
nop
int3
add
sbb
sub
cltd
push
mov
push
pop
sbb
xor
push
mov
sbb
xor
mov
xchg
xchg
push
pop
ja
scas
mov
add
and
pop
sbb
data16
jmp
jmp
cmp
hlt
adc
push
jne
xor
sbb
push
xchg
out
sub
mov
jno
loop
mov
mov
mov
jo
fsubrl
sti
loope
cmp
loop
daa
stos
movsl
xchg
das
cmovne
inc
cmp
andb
into
test
cmc
ljmp
push
and
std
jns
dec
out
outsb
mov
or
in
xor
add
xor
adc
cmpsb
mov
ret
xchg
mov
out
add
fwait
mov
fstpt
movsl
loopne
mov
jo,pn
mov
xor
cmpsl
or
dec
mov
cmc
lods
pop
mov
repnz
repnz
jg
sahf
movq
dec
xor
cmpsl
add
pop
xchg
dec
sbb
mov
mov
push
rolb
push
orl
or
xchg
xor
movsb
xor
shlb
mov
lret
dec
ret
pop
xchg
dec
push
mov
lods
and
dec
les
dec
insb
mov
fdivrl
stos
push
mov
sar
fisubl
orb
adc
ljmp
adc
shll
and
push
push
dec
pop
add
cmp
push
adc
lret
sbb
rcl
movsb
jp
and
or
push
insl
fdiv
push
in
xchg
insb
dec
jmp
test
aad
jns
adc
lret
clc
test
je
out
daa
es
lock
inc
ja
add
loopne
hlt
sbb
or
pop
push
stc
jmp
loop
clc
nop
push
bound
sarl
cmp
stos
fistps
rcl
shll
rol
loop
scas
clc
adc
fisttpll
loop
or
cmc
sub
lcall
addr16
mov
dec
or
adc
ds
pop
inc
xchg
mov
push
mov
or
adc
pop
cli
rolb
dec
mov
mov
sar
mov
pop
pop
pop
out
in
inc
dec
xchg
push
xor
or
sbb
insl
pop
pop
mov
cltd
xchg
adc
fisttpll
out
sbb
inc
mov
in
loopne
pusha
rorl
jbe
lock
push
loop
cli
mov
pushf
mov
xchg
sub
in
es
mov
adc
inc
push
or
mov
in
out
outsb
cmp
arpl
fadd
mov
ljmp
lcall
in
xor
push
xor
pop
jns
icebp
push
rorl
aas
shlb
aas
sbb
push
adc
pop
mov
lahf
add
test
add
cmp
mov
pushf
lock
repz
sti
ljmp
pop
push
scas
or
xchg
cmpsb
sub
xorl
test
jns
sub
push
aad
test
lahf
or
pop
js
hlt
sti
jmp
iret
inc
scas
imul
in
xchg
mov
enterw
rcll
cmp
mov
into
in
pusha
imul
add
mov
jecxz
sbb
aam
rorb
das
je
lcall
loop
pop
outsl
stos
pop
adc
xor
lcall
jecxz
jmp
fldl
mov
dec
fisttpl
idiv
mov
icebp
pop
jecxz
rorl
sbb
sahf
stc
xlat
scas
stc
shll
ja
cmp
mov
fimuls
repnz
mov
push
les
ret
aaa
setae
push
cmp
inc
push
in
mov
jbe
push
pop
pop
scas
push
fs
and
insb
aad
xorb
xchg
shll
pop
mov
adc
imul
sahf
push
pop
dec
pop
test
xchg
sub
xchg
cmp
fstp
ja
dec
adc
adc
push
daa
cmc
xchg
fisttpll
data16
or
push
mov
aas
sub
mov
jae
test
stc
adc
aad
mov
sub
je
bound
mov
xchg
jbe
inc
in
les
mov
int
pop
lahf
fisubl
add
xchg
push
popf
and
jb
aas
les
xor
push
mov
add
mov
ss
test
xchg
fwait
rorb
sub
jns
lret
mov
pop
inc
in
into
mov
lret
loop
push
aaa
movb
mov
push
cli
lea
jl
ret
popa
cmpsb
lcall
push
pop
arpl
and
sbbb
inc
fisttps
xor
stc
mov
jbe
jbe
inc
stc
ljmp
xor
out
test
daa
mov
fadds
out
loope
mov
fldt
and
and
mov
push
jge
push
lods
push
out
stos
aad
sub
mov
insl
sub
xchg
mov
dec
imul
loopnew
sti
jnp
xor
inc
push
xor
repz
inc
fldenv
push
rcr
sub
add
mov
push
stos
sahf
mov
out
out
push
mov
jno
sbb
loop
ja
push
test
lahf
and
xor
jg
pop
xchg
fs
mov
dec
and
mov
mov
pop
call
pop
lahf
popa
pop
cld
jp
push
rolb
cmp
xchg
insl
push
jmp
imul
inc
ret
inc
fsubs
bound
push
arpl
rcll
sbb
and
xor
insw
jo
fldl
xor
mov
cmp
in
push
repnz
cmp
dec
sbb
jle
je
hlt
push
push
movsl
and
mov
mov
and
push
xchg
adcb
jle
inc
nop
adc
fbstp
or
lret
pop
popf
inc
xor
push
jb
js
mov
shrl
gs
imul
pop
pop
es
cmp
shrb
mov
inc
cwtl
push
cmpsl
bound
stc
sub
int3
repnz
je
sub
lods
push
loopne
cmp
xor
iret
or
sub
cmc
sub
ss
fisttps
xor
popf
movb
xor
mov
push
mov
inc
or
adc
in
out
ljmp
xchg
sub
fadds
icebp
mov
pop
int3
addb
imul
leave
out
cld
or
rorb
xchg
xlat
lock
mov
xor
outsb
pusha
cmp
mov
jnp
mov
out
cmpsl
adc
xor
lods
roll
xchg
pusha
sahf
cli
push
repnz
xor
imulb
bound
jbe
xchg
frstor
mov
mov
xchg
xchg
test
cld
fstps
in
cmp
insl
sbb
popf
lock
jae
mov
test
xchg
push
xchg
inc
adcb
and
jp
loop
xchg
jnp
sti
clc
in
cwtl
fsubr
repz
fstpt
adc
gs
lret
mov
inc
pop
repz
lods
push
rolb
cmpsl
test
pop
xor
hlt
dec
in
jne
cmp
es
ss
out
movsl
and
mov
mov
pusha
test
lcall
sarb
adc
rcll
sub
inc
out
imulb
sub
sub
and
fwait
and
bound
sbb
adc
and
cwtl
loopne
js
call
mov
push
lahf
dec
jg
pusha
cmp
xchg
cmc
xor
iret
or
arpl
call
loopne
mov
movsl
xor
jge
jg
gs
jne
test
sbb
add
jmp
pushf
mov
iret
in
mov
stc
out
fs
mov
popa
add
sub
loope
mov
mov
xchg
mov
shlb
inc
daa
push
sbb
aad
xchg
jge
lods
xchg
adc
mov
cltd
add
cld
adc
mov
jecxz
ljmp
mov
push
xor
in
sbb
fdiv
mov
fcoml
leave
adc
push
das
jno
outsl
sbb
pop
push
fcmovnbe
addb
addr16
roll
cmc
shlb
aam
fs
adc
dec
cmp
leave
jnp
sarl
stc
dec
mov
mov
xchg
pop
push
sbb
cmp
cmp
xchg
cld
mov
mov
enter
data16
out
xor
mov
add
dec
loope
cmp
jge
or
mov
sub
dec
dec
mov
in
cmp
mov
lcall
cmp
repnz
leave
mov
fildl
in
arpl
add
icebp
ljmp
ja
or
ss
pop
adc
cmp
xor
lret
jmp
out
je
add
int3
add
jmp
adc
or
xchg
cltd
fmull
cmp
adc
cwtl
insl
push
xchg
in
pop
xchg
sub
xchg
adc
fidivs
out
jecxz
leave
dec
and
add
lahf
hlt
cmpsb
test
mov
push
les
mov
pusha
mov
in
pop
cmp
rclb
adc
jecxz
in
push
outsl
add
and
and
adc
cmp
push
add
hlt
out
push
jl
or
cmc
fdiv
mov
pop
push
mov
rcr
ljmp
enter
push
dec
and
sahf
or
mov
cmpsl
xchg
js
pop
insb
lret
mov
adc
iret
push
icebp
imull
leave
xchg
mov
push
mov
repnz
fimuls
add
sbb
push
notl
mov
push
out
xorl
push
push
pop
bnd
out
popf
xor
add
cmpb
aad
push
adc
inc
push
test
sub
and
loopne
imul
in
sysexit
mov
ret
mov
dec
cmp
mov
test
jns
inc
data16
cmp
push
jp
repz
or
xchg
adc
xor
adc
or
sbb
nop
mov
jg
add
lret
pop
pushf
out
pushf
insb
adc
sub
adc
imul
repnz
mov
mov
nop
dec
fildll
inc
pop
ficoms
rcrl
mov
fsubr
pop
loop
movsl
fimull
ret
mov
adc
ljmp
cmp
leave
add
adc
call
add
mov
lods
jp
push
data16
mov
xlat
fldt
xchg
push
jbe
imul
test
dec
pop
xchg
hlt
jo
mov
add
or
popf
inc
push
popa
stc
xor
pop
ss
xchg
sahf
jo
iret
or
adc
mov
ss
shll
cmpsb
cmp
cmpsb
pop
mov
dec
insl
popa
fs
push
dec
adc
gs
sbb
shll
pop
hlt
add
int
frstor
in
pusha
out
cmp
pop
aaa
insb
sub
xchg
dec
jmp
and
stc
add
lock
aas
shl
cli
mov
daa
pusha
mov
jnp
mov
call
aas
mov
rcr
faddl
call
sbb
out
jle
cmc
and
leave
lock
or
cmc
lret
shrl
or
mov
int3
jae
aas
out
dec
data16
adc
cltd
out
push
rclb
fcomps
fwait
je
xchg
es
push
ds
jecxz
insl
fcmovu
fincstp
imull
and
test
inc
pushf
xor
adc
in
lock
cmovp
fistpl
clc
addb
jnp
adc
jne
sub
pop
add
push
jne
pop
ja
or
fsubl
cli
ds
fidivl
or
mov
hlt
cmp
sbb
clc
add
cmc
xchg
sub
scas
fsubrl
pop
sub
imul
outsl
adc
cmp
xor
adcb
mov
mov
xchg
clc
or
sbb
push
int
xchg
sub
ds
add
lcall
inc
test
push
fst
sbb
pop
stc
and
lahf
inc
cmp
lahf
les
orl
mov
sbb
vmaxss
cwtl
lahf
dec
and
dec
popf
lret
insl
clc
fisubl
pop
and
aaa
inc
lahf
xor
push
ljmp
test
jle
addr16
lcall
or
xchg
jb
nopl
push
aad
test
arpl
cmp
dec
popf
mov
xchg
sub
lret
mov
shll
inc
cwtl
rclb
lahf
es
jle
mov
fisttps
inc
adc
mov
les
aad
xchg
aas
test
push
sbb
icebp
jae
in
dec
and
hlt
sub
and
lock
xor
fucomp
sub
adc
jno
dec
xor
sbb
stos
stos
enter
mov
cs
lock
aam
cld
clc
cld
mov
rclb
xchg
stos
mov
adc
sub
ds
sti
or
leave
cld
adcl
lods
mov
sbb
addr16
insb
into
cwtl
out
aam
daa
pop
lret
fnstsw
pop
mov
rcr
scas
jns
test
jg
dec
dec
inc
push
insl
in
or
inc
cmpsl
insb
addl
inc
enter
stc
inc
sahf
adc
push
pop
cmp
sub
clc
jge
jl
mov
out
stos
orb
push
xor
lcall
dec
mov
or
push
and
into
pop
mov
jge
adc
insl
inc
repnz
loop
orb
add
adc
pop
ret
mov
mov
aaa
push
mov
pop
pop
adc
imul
and
pop
jmp
sub
inc
cs
cmp
bswap
sets
xor
push
push
lret
test
and
testl
push
test
xchg
pop
mov
push
imul
mov
push
subl
les
add
push
hlt
int
push
fcmovb
sbb
scas
push
push
mov
fyl2xp1
pop
adc
or
je
and
stos
push
incb
mov
inc
repnz
outsl
jecxz
push
push
add
out
push
divb
out
mov
pop
or
sbb
jmp
das
mov
cmp
adc
mov
adc
rcrb
notb
imul
cli
push
int
mov
int3
push
cmp
xlat
test
cmpl
lcall
lcall
mov
stc
movsbl
jns
and
sbb
push
add
lret
jb
and
ss
jb
dec
jg
mov
loopne
xchg
and
push
jno
push
fisubl
xchg
pop
out
mov
testb
cli
gs
inc
sbb
imul
fldl2e
or
jl
jmp
fucomip
xor
shll
pop
jo
js
or
xchg
pop
lcall
push
lea
insb
test
ret
mov
jg
push
movsb
sub
mov
adc
xchg
mov
add
and
pop
inc
fidivrl
fildl
mov
push
fnstenv
test
cmp
jl
mov
in
jne
jl
fiadds
push
mov
mov
add
push
jg
dec
pop
and
add
adc
xchg
imul
xor
lods
lods
push
jle
jnp
enter
in
repz
dec
dec
or
inc
or
lock
test
mov
das
sub
jmp
ret
mov
pop
mov
cwtl
aam
rolb
mov
push
popa
push
loop
test
jb
mov
or
and
jae,pt
aam
out
lock
jecxz
lcall
pop
and
sbbl
push
pop
int3
sahf
or
xor
mov
push
jb
pop
nop
insl
dec
pop
add
popa
mov
addl
orb
push
mov
loopne
insb
js
sub
jo
and
jbe
xor
loope
cmp
push
xchg
std
push
and
pop
stc
pop
fcomps
pop
mov
test
outsl
xchg
push
mov
add
adc
fimull
fucom
ss
push
fldt
leave
jns
mov
and
mov
add
sub
iret
sti
jecxz
mov
jnp
mov
scas
xor
test
jbe
cli
add
mov
movsb
add
and
cltd
cmpsb
cmp
mov
lret
or
mov
push
add
out
aam
es
push
sub
mov
mov
pop
mov
popf
test
inc
pusha
js
fimull
mov
pop
xchg
inc
clc
loope
cmp
pushf
lret
lahf
pop
jg
cli
push
out
scas
insl
adc
jo
incb
gs
xchg
xchg
out
inc
xchg
aad
xor
ret
loopne
lea
imul
push
fcompl
and
inc
xchg
rolb
or
lcall
mov
out
mov
or
xor
jg
andl
dec
daa
inc
aam
pop
seta
adc
or
xor
xchg
xchg
cmpsl
aaa
jmp
mov
or
out
rolb
repnz
icebp
hlt
inc
add
cmp
jl
adc
mov
mov
lret
cltd
xor
inc
xchg
and
mov
mov
xchg
jne
xchg
js
fs
out
lds
inc
cli
mov
push
mov
scas
pop
je
and
mov
xor
inc
gs
adc
cltd
adc
sbb
cmp
adc
mov
mov
mov
aas
sub
add
xlat
mov
inc
push
rclb
dec
or
lahf
shrb
mov
push
push
adc
mov
ret
test
sarl
inc
lods
test
mov
cmpsl
int3
aaa
nop
xor
jmp
in
adc
mov
cmp
movb
add
mov
jmp
pop
dec
pshufw
jge
test
fsubl
jecxz
cmp
pop
mov
out
loopne
xor
int3
sub
or
adc
enter
jg
sbb
mov
arpl
cmc
dec
inc
xchg
dec
sub
es
xor
xor
mov
cmc
add
or
xchg
insl
std
enter
std
or
or
mov
cwtl
pop
std
sahf
cmpsl
jae
xchg
icebp
lret
test
fs
sub
or
in
mov
push
stos
shll
ficompl
xchg
clc
adc
test
add
std
cwtl
mov
jns
pushf
inc
mov
data16
dec
pop
imul
jns
rcrl
inc
inc
movsl
and
push
xor
xor
das
xlat
pop
or
jmp
add
pop
call
lcall
push
jp
jb
xchg
shrl
out
cmp
fbstp
scas
sti
and
dec
int
dec
cmp
xchg
cmpsb
mov
push
pop
lods
xlat
cmp
dec
add
mov
sbb
xchg
inc
sbb
inc
lea
js
or
xor
mov
sub
jmp
cli
rcl
stos
dec
cwtl
dec
xchg
pop
lods
inc
push
jmp
cltd
sbb
scas
push
jbe
lods
cmpsl
inc
cmp
sbb
mov
cmpsb
insl
jecxz
xlat
pushf
fs
cmp
faddl
ret
ret
scas
movsl
in
mov
divw
cmp
mov
mov
cmpsb
adc
in
in
loop
sbb
push
fdivr
das
notb
icebp
xor
scas
jg
xchg
cwtl
dec
sub
fstpl
ss
mov
ljmp
and
mov
xchg
pop
push
jg
sahf
out
testb
mov
test
inc
jae
dec
fimull
out
jg
pusha
mov
lahf
push
adc
enter
and
jo
add
push
imull
add
movsl
push
jp
mov
lds
xchg
push
pushf
sbb
jle
dec
das
fistpll
push
mov
mov
mov
xor
in
aaa
repz
cltd
xchg
insl
cmp
in
jno
jnp
sbb
lods
shl
xchg
sbb
adc
sbb
std
mov
test
push
or
push
add
pop
das
inc
push
push
cmp
lcall
adc
pop
scas
lea
mov
lock
mov
sub
mov
cmp
repnz
fs
mov
int
xor
loopne
test
and
jge
mov
cld
movsl
popf
push
sub
jg
movsb
cmp
mov
inc
mov
shll
cmpsb
inc
not
fbld
cmp
insb
es
adc
test
cmc
inc
dec
lds
inc
imull
inc
and
dec
mov
inc
in
dec
icebp
mov
pop
or
mov
decb
js
jg
mov
and
loope
loop
fistps
xor
cmp
in
aad
pop
or
clc
xor
cli
sbb
jg
cmp
call
jne
sbb
cvttps2pi
sub
cmp
not
or
mov
inc
aas
sub
cmp
or
ret
mov
imul
aaa
mov
arpl
lea
jl
std
mov
dec
repz
icebp
negl
xchg
push
cmp
jg
shll
int3
xchg
pop
push
icebp
popf
ret
cmp
cmp
pop
push
xchg
mov
test
sbb
cmpl
inc
test
or
jnp
inc
ror
jae
int
fistpl
test
jne
js
cmp
pop
push
sarl
xor
dec
arpl
into
rolb
and
outsl
lret
enter
or
sub
ljmp
or
fidivrl
es
sub
push
inc
outsl
aas
cld
adc
xchg
inc
outsl
clc
in
or
lds
sub
push
or
jge
jmp
inc
pusha
stos
sar
push
push
call
pop
pop
xchg
enter
faddl
out
or
aad
push
ja
dec
inc
push
fwait
imul
push
sub
daa
inc
xchg
and
ficompl
jge
dec
pop
outsl
sbb
jp
sbb
out
push
and
daa
xor
dec
das
insb
out
sub
or
mov
pop
sahf
sbb
pop
add
subb
test
jge
int3
test
sub
push
repz
aam
int
xchg
incb
inc
inc
cmpsb
dec
sbb
cmpsl
punpckhbw
sub
xchg
jmp
push
jb
or
rcll
mov
fiaddl
cmp
das
xor
xchg
lds
repnz
inc
cmp
push
xor
mov
mov
mov
mov
imul
inc
cmp
mov
in
sub
pop
mov
gs
jmp
push
mov
lret
xor
cld
test
fmul
push
test
fcom
sbb
mov
jno
jns
jno
scas
xchg
jmp
aaa
out
add
or
xchg
cmpsb
xchg
mov
pusha
out
jne
lods
dec
lds
xor
adc
cmp
das
je
popf
xor
jg
ja
and
andl
lahf
push
pop
sbb
add
pop
ret
jecxz,pn
or
in
loopne
and
test
in
push
subl
mov
jge
aas
sub
push
sbb
test
out
ja
in
cmpsl
or
ljmp
fisttpl
jecxz
inc
mov
mov
stc
add
push
push
inc
pop
xor
mov
mov
cmp
add
jecxz
scas
insb
mov
push
inc
insb
into
pop
ss
in
je
adc
or
xor
mov
dec
or
lcall
es
mov
fstps
test
icebp
xchg
mov
jae
sahf
mov
scas
cmp
cmp
and
arpl
out
div
push
mov
shlb
jb
ret
pop
das
shlb
mov
mov
sbb
sub
rol
inc
add
mov
ds
imul
test
dec
and
imul
or
sub
adc
popa
subl
ljmp
sub
or
inc
jecxz
imul
iret
in
out
fcmove
dec
out
mov
jmp
sub
jl
jae
push
arpl
in
aaa
mov
add
out
lcall
sub
xor
xchg
mov
sub
aad
mov
imul
out
je
mov
pop
add
andb
aas
pop
xor
push
lret
mov
jno
push
push
or
clc
add
sub
js
lret
popf
mov
nopl
lcall
push
scas
aas
push
mov
addb
sbb
pop
mov
mov
sub
and
loop
subb
push
mov
mov
xchg
and
cli
cmp
fldl
negb
cltd
aam
jmp
outsb
mov
fsubrl
ljmp
add
js
inc
push
jle
sbb
jbe
popf
aad
nop
outsl
pop
add
addr16
mov
insl
sub
mov
lods
sub
enter
adc
lcall
add
popf
mov
mov
pop
fisttps
jnp
sbb
ds
push
mov
xchg
int
dec
aad
sub
or
or
jmp
inc
andl
rcll
mov
xchg
cmc
in
cmp
ret
jmp
or
mov
icebp
push
cwtl
call
inc
push
andl
aas
scas
jae
mov
roll
adc
aad
pop
shll
shl
sbb
fchs
imul
gs
cmc
or
mov
nop
sub
xor
hlt
mov
outsl
mov
ret
xchg
je
xor
data16
inc
iret
sub
dec
add
lock
in
aam
jne
xchg
push
cwtl
filds
test
je
cmp
push
insl
push
jo
stc
cmpsb
leave
sbb
stos
or
pop
mov
xor
cmp
adc
iret
aaa
lahf
ja
jl
adc
int
or
add
loop
cwtl
div
mov
push
loope
jmp
int3
xchg
movsl
mov
dec
stos
push
into
xchg
and
mov
push
mov
fsubrs
xlat
int
cwtl
shl
scas
xchg
fadds
mov
jmp
aas
add
movsb
jp
mov
jge
ret
stc
mov
lret
testb
push
inc
dec
jl,pn
dec
into
lods
fsubrl
clc
cld
testb
ljmp
jbe
xchg
cmp
das
pop
xchg
stos
mov
inc
rclb
push
push
inc
lds
aas
aad
subl
pop
xor
adc
xchg
cmp
sahf
mov
pop
shl
add
and
dec
inc
jle
sti
insl
push
sarb
cltd
ret
pop
push
mov
pop
sub
es
adc
lea
mov
movsb
test
pop
push
pop
dec
roll
mov
arpl
adc
and
jg
mov
leave
pop
inc
in
sub
push
mov
data16
cmc
jge
mov
rcrb
lcall
inc
loopne
sahf
dec
pop
popf
insb
cmc
es
or
xor
int3
pop
cmpsb
out
fwait
or
int
les
sbb
cmp
mov
cld
mov
rcll
mov
sbb
sub
push
popa
shl
ds
arpl
out
sub
outsl
lods
test
rcrb
insb
xchg
test
ja
xor
std
stos
push
bound
pop
push
cli
andb
push
sub
ffree
cmp
subb
mov
test
hlt
inc
pop
icebp
sub
mov
dec
xchg
int3
aad
xchg
std
mov
test
or
lahf
push
fsubrs
ret
call
ljmp
test
jnp
call
pop
push
xor
movsb
jle
pusha
jge
push
adc
mov
push
jbe
mov
fs
loop
fwait
sub
mov
or
adc
push
and
or
jg
rorb
ja
in
aad
adc
jno
loopne
in
sbb
notb
xchg
jmp
loop
jne
sub
mov
jns
pushf
and
xor
mov
jne
sub
dec
mov
stos
adc
xchg
mov
push
sub
cmp
cmpb
pop
cli
mov
in
rol
test
movsb
out
dec
pop
xor
scas
xor
fistps
xchg
lret
sti
icebp
cwtl
hlt
out
push
mov
mov
xor
shrb
pop
cld
adc
xchg
jb
sbb
mov
xchg
xlat
das
inc
gs
fstpt
sahf
das
jge
or
adc
loop
pop
test
adc
addl
addb
cmc
jg
call
ljmp
add
mov
xchg
xor
imul
push
add
mov
dec
ret
jmp
inc
or
mov
sbb
loop
clc
and
sub
pop
adc
les
mov
rorb
popa
xor
push
mov
fnstenv
in
xchg
mov
outsb
sbb
push
jle
in
adc
mov
data16
mov
inc
pop
push
cld
push
pop
mov
daa
fldenv
iret
jle
es
fwait
jge
cmpsl
dec
loopne
test
jae
je
mov
and
je
jl
push
inc
sub
pop
push
lods
std
sbb
xor
mov
fldl
dec
es
arpl
pop
xchg
or
mov
push
fisttpl
insb
add
andb
jae
stos
cmc
lods
pushl
iret
and
mov
push
push
les
mov
dec
subb
outsl
cmp
subb
adc
adc
mov
cli
mov
mov
test
popf
pop
or
jbe
and
inc
sub
mov
cli
sti
adc
dec
mov
cmp
mov
xor
mov
sahf
cmc
or
stc
push
repnz
movsl
push
cmc
insb
hlt
imul
xor
lods
arpl
cmpsb
pop
movsl
mov
lds
aam
mov
das
xchg
push
jecxz
fisubrs
xchg
sbb
mov
jno
sbb
and
inc
fs
icebp
lds
cmp
mov
mov
or
insl
mov
xchg
mov
sbb
and
xchg
sbb
push
mov
xchg
jp
dec
pop
cwtl
or
xor
dec
xchg
and
or
out
mov
sbbl
mov
insl
mov
sti
sbb
cmp
lea
jp
scas
repnz
lds
pop
mov
js
mov
cwtl
test
shl
insl
cmpsl
fists
js
mov
pop
pop
das
mov
in
xor
or
outsl
cs
cli
ret
cs
das
cmpsb
dec
xchg
push
sub
out
das
test
fsubrs
mov
push
aas
sbb
or
inc
lods
mov
cltd
or
dec
dec
jnp
int3
mov
mov
cltd
xchg
insl
jbe
lahf
dec
aad
shlb
out
adc
jp
push
icebp
scas
push
fistl
lahf
out
mov
test
mov
or
push
push
leave
pusha
sbb
into
push
repz
test
dec
pop
roll
fnsave
std
inc
idivl
xchg
pop
add
fiaddl
mov
lods
lcall
lret
call
xchg
pop
test
inc
test
xlat
sbbl
hlt
jge
push
fstpl
daa
test
pop
xor
dec
fiadds
in
popl
rorb
ss
pop
js
pop
mov
sbbb
xchg
sub
pop
add
sub
mov
ds
lock
int3
jbe
lcall
cmpsl
pop
cmp
movl
idiv
cs
jne
das
insb
or
sbb
and
jo
aaa
or
xor
mov
sbb
bswap
jg
mov
pop
fs
aaa
loopne
dec
sub
push
mov
cmp
fsubrs
cmpl
outsb
popf
sahf
pusha
sbb
cmp
add
jno
lods
insl
gs
sub
stos
stos
fwait
ret
call
push
stos
outsl
pop
out
repz
mov
adc
into
lret
clc
xor
adc
mov
out
jno
je
hlt
lahf
andb
shlb
in
inc
add
dec
cmp
out
mov
mov
xor
lea
addr16
jmp
sti
clc
lds
call
cmp
push
mov
mov
adc
cmp
loop
jge
push
jnp
movsl
sub
rcr
push
jno
push
fwait
ret
sub
push
jmp
mov
xchg
andb
push
dec
mov
xchg
and
js
lea
xor
ds
sbb
mov
mov
loopne
and
scas
repz
les
popf
inc
push
mov
push
sarl
dec
rclb
leave
push
xor
pop
cmp
pop
dec
lock
cltd
sbb
fs
ret
cld
sub
add
loopne
stos
mov
fdivrs
push
pop
rorl
inc
hlt
mov
ljmp
das
les
fsubl
subb
add
sub
mov
pop
xchg
adc
inc
mov
outsl
repz
sub
stos
sub
loope
out
repz
cmpl
loope
cmp
dec
add
mov
sbb
in
jp
jmp
cli
push
div
scas
lahf
sub
mov
ss
lcall
xchg
and
and
dec
xor
ss
pop
nop
sub
lods
and
outsb
dec
shlb
mov
mov
xor
xchg
pop
xchg
idivb
push
aad
pop
mulb
sub
aam
pop
hlt
mov
fstpl
test
dec
nop
lahf
rcll
cmp
jb
cmc
jae
fcmovnb
push
xchg
xor
enter
out
leave
xchg
xor
xchg
push
xchg
add
jno
push
mov
pop
cli
sub
push
cmpsb
inc
add
add
clc
pop
jbe
cld
sbb
sub
sub
mov
sub
cmp
call
cmp
xchg
test
jmp
and
xchg
cmp
push
sbb
xlat
fxtract
push
cld
or
outsb
in
xchg
mov
cmp
push
int
and
sbb
popf
clc
cli
adc
xchg
xor
clc
outsb
jne
pandn
lods
xor
insb
mov
jae
test
mov
rcr
sbb
and
stos
test
sbb
mov
fdivl
aaa
lock
xchg
or
add
fcompl
mov
fsubl
aad
mov
adc
ficompl
sbb
and
test
mov
xor
aaa
imul
popf
or
xchg
imul
mov
repnz
idivb
add
inc
jg
adc
mov
arpl
dec
xor
ljmp
in
xchg
inc
fidivl
insb
dec
mov
and
pop
mov
inc
mov
add
lahf
jp
xor
mov
mov
sbb
xorl
and
mov
insl
pop
popa
cltd
mov
cmp
icebp
cmpsb
push
dec
stos
inc
cmpsl
xchg
add
mov
cmp
sub
pop
andb
out
incb
cmp
lret
jb
dec
pusha
jl
adc
sbb
xor
dec
push
push
inc
je
ja
push
test
scas
jmp
jp
repz
sub
fiadds
sahf
icebp
lret
cmp
add
or
mov
push
push
sbb
pusha
pop
xchg
add
adc
push
xor
inc
fists
sarb
std
jp
inc
mov
mov
add
or
cmp
out
iret
aaa
out
clc
ljmp
pop
jb
pop
sub
and
repz
jo
mov
mov
cmp
mov
jecxz
pop
test
faddp
xor
rcr
pop
loopne
repz
dec
arpl
push
sti
jecxz
imul
push
fs
jmp
movsl
idiv
pop
mov
andb
sub
mov
aad
adc
pop
push
imul
scas
mov
push
dec
cmpsl
xor
pop
les
movsl
dec
aad
fmuls
popl
lcall
push
xchg
xchg
aaa
shlb
int
and
add
or
outsl
outsb
push
or
ret
push
and
sub
out
movsl
mov
push
xor
dec
and
jo
push
xor
inc
push
add
push
cmc
dec
inc
fwait
cmp
cmp
fs
jecxz
add
jbe
dec
loop
adc
pusha
bound
gs
cmp
adc
sbb
clc
sub
nop
test
and
stos
jo
add
pop
sub
enter
or
movsl
sti
pop
mov
jge
sub
push
lods
fdivrl
fwait
aad
jecxz
cmp
mov
pop
lret
in
push
ret
lods
pop
pop
mov
push
jmp
rorb
mov
jnp
add
pop
add
xor
into
shll
pop
jecxz
fstpl
test
pop
inc
mov
ret
loopne
inc
push
mov
mov
out
mov
in
cs
inc
bound
push
xchg
out
cmp
stc
dec
testl
mov
mov
dec
outsb
rorb
xchg
imul
push
pop
in
fimuls
mov
dec
daa
inc
jp
lea
lcall
lahf
xchg
xor
xchg
mov
ja
arpl
or
rclb
jp
cmpsl
cld
push
in
pusha
cs
outsl
sub
test
loop
mov
out
sub
pop
int3
adc
push
repnz
mov
push
mov
add
sub
je
push
and
incb
ja
xchg
xchg
cmpsb
pop
sti
in
rcrl
shlb
int
add
mov
bound
jmp
hlt
mov
lea
or
push
loope
jb
lds
or
in
dec
add
cmpsl
push
mov
jl
cmp
leave
xor
mov
loope
sbb
sub
jl
mov
in
push
ficomps
cmp
js
lock
popf
adc
repz
cmc
aaa
movsl
sub
push
mov
movsb
loope
add
cmp
shll
jg
mov
int3
or
pop
cmc
loopne
mov
jne
or
pop
mov
push
jno
in
idiv
scas
into
sbb
call
and
arpl
popa
cld
cs
loopne
mull
decl
in
xlat
aaa
pop
xor
jae
xchg
add
mov
fcomps
out
push
push
jmp
scas
addl
pusha
pop
inc
jg
scas
les
sub
loope
push
xor
inc
jecxz
adc
les
or
push
fucom
fimuls
sbb
mov
pop
fscale
imul
jo
add
inc
and
sbb
jbe
sbb
xor
pop
aaa
rcll
out
xchg
push
xor
mov
dec
jl
dec
cmp
imul
xlat
dec
xchg
stos
adc
popf
fistpll
popa
inc
sub
mov
xchg
insl
xchg
loope
cmp
fdivp
push
sbb
xor
xor
or
xor
pop
insl
mov
cltd
lahf
nop
push
dec
mov
push
xorb
mov
pop
je
nop
push
sub
mov
outsl
ret
inc
ret
sub
out
and
ds
cwtl
adc
stos
pop
mov
repz
pop
mov
adc
sbb
jnp,pt
negb
mulb
xchg
add
loop
aas
push
pop
jb
or
push
loopne
mov
aas
andl
mov
add
xchg
and
notb
faddl
sub
inc
jle
aaa
cmp
in
inc
in
jo
jp
imul
arpl
pop
enter
pop
and
mov
bound
test
ffreep
push
mov
jp
smsw
fdivrs
or
dec
daa
adc
cmc
aaa
mov
shl
dec
inc
jb
cmp
mov
cmc
rorl
popf
fldt
shlb
pop
idivb
leave
push
bound
in
insl
andl
test
outsl
jnp
push
jnp
std
test
leave
lods
loope
adc
daa
dec
out
outsl
test
xchg
xchg
add
nop
xor
sub
cmp
pusha
sbb
fldl
clc
test
imul
leave
pop
jle
dec
cmc
mov
mov
ss
out
sbb
cmp
mov
sub
add
fimuls
lahf
mov
ret
addr16
add
push
jns
stos
addr16
mov
vpsubusb
cs
and
rcll
sub
sub
push
test
in
lds
mov
xchg
loope
enter
incl
dec
das
aaa
rorl
and
pop
fadds
rcl
cld
push
mov
ret
int3
xor
ds
or
jb
loopne
aam
pusha
pop
ss
int3
ds
fdivrl
sub
mov
jp
mov
push
imul
inc
push
gs
sub
xchg
pop
pop
add
and
or
sbb
or
shlb
adc
xorl
push
and
jg
push
insb
pop
mov
bnd
xor
mov
leave
dec
xchg
rcl
ret
mov
cwtl
inc
cli
aad
ja
test
lds
mov
cmp
fwait
add
js
or
out
pushf
mov
dec
fwait
mov
insl
cmc
pop
insb
insl
add
jae
jge
mov
je
loope
dec
mov
cmc
movsb
imull
rol
push
and
mov
inc
pop
dec
add
sti
les
rcl
bound
cmp
cmc
addl
out
mov
mov
xchg
cwtl
stos
pop
nop
mov
pop
inc
popf
dec
dec
addl
call
adc
scas
in
inc
pop
mov
push
and
mov
xor
lods
mov
mov
int
sub
mov
pop
dec
cmp
and
pop
dec
mov
ficomps
movsb
stc
leave
pushf
xchg
mov
aas
pop
dec
mov
inc
aam
outsl
mov
pop
aaa
sbb
xor
cltd
notb
inc
inc
into
insl
dec
xchg
xlat
enter
cmp
adc
or
in
pop
aaa
shl
cmp
fcoms
pop
loope
push
pop
mov
mov
adc
xchg
jge
int
push
es
mov
jbe
sbb
jg
xlat
ljmp
jne
mov
add
repnz
fiaddl
mov
hlt
int3
xchg
mov
mov
cld
out
mov
fcompl
jecxz
push
std
mov
stos
cmp
mov
imul
xor
xchg
jge
push
fs
push
push
in
adc
dec
lods
movsb
sar
adcb
jae
jg
mov
movsb
cltd
loop
imul
dec
in
push
bound
mov
xchg
cmc
in
insb
xchg
xor
es
outsl
pushf
dec
pop
pushf
mov
or
mov
lds
and
add
rorl
rcr
imul
out
loopne
int
in
cmp
sbb
mov
xorb
and
xor
push
mov
pop
pop
add
push
stc
fcmovne
pop
pop
test
and
xchg
fstpl
xchg
add
dec
and
insb
sarl
stos
cmp
cmp
push
paddusb
cmp
and
mov
push
jbe
push
jmp
jae
aam
icebp
rcrb
mov
pop
mov
cmp
fmull
mov
lods
insb
adc
lods
xor
aad
loopne
ds
faddl
sub
fs
out
mov
pop
data16
or
std
movsb
mov
or
jnp
pop
mov
mov
push
std
dec
mov
push
addb
data16
inc
shl
adc
cmp
mov
pop
cmp
lahf
aad
sti
fwait
inc
sbb
push
insb
add
jl
pop
int3
sub
loope
fistl
ds
fstl
popf
ss
pop
mov
das
jae
pushf
mov
mov
fsubs
lcall
sub
cmpsb
loope
orb
or
jmp
sub
jl
mov
inc
xchg
mov
ret
mov
sub
inc
lods
stc
sub
mov
imul
rorl
les
sub
xchg
movsb
std
aaa
lods
leave
adcb
pop
or
xor
push
lods
sub
mov
and
in
push
pop
pop
dec
fs
ljmp
mov
mov
adc
test
dec
adc
int3
dec
or
subb
ljmp
shrb
sbb
mov
jle
cli
icebp
cmp
imul
pop
xchg
jno
sahf
ret
dec
adc
pop
test
mov
cmpsb
dec
or
div
popf
ret
sbb
enter
sti
pop
outsb
gs
ds
data16
mov
cmpsb
fcomps
mov
mov
dec
sti
adc
inc
out
clc
test
dec
in
xor
mov
mov
or
lcall
flds
in
jb
inc
push
mov
and
loopne
sub
xor
adc
clc
divb
bound
out
add
sbb
mov
sub
imul
pop
movsb
aam
jns
sbb
scas
pop
sbb
mov
in
loop
leave
jecxz
insb
out
sub
repnz
push
popl
icebp
sub
shlb
adc
xor
lea
xlat
xchg
pop
push
xchg
cltd
mov
jbe
jnp
and
and
stos
push
aad
mov
roll
les
pop
orb
ss
xchg
outsl
pop
and
loope
das
pop
xchg
mov
fidivrl
push
into
pop
push
test
push
cmp
or
lahf
lds
and
ljmp
cmp
arpl
pop
push
mov
or
mov
daa
cmc
out
stos
mov
inc
rcrb
imul
outsb
in
repz
leave
cmp
pusha
mov
adc
imul
sub
movsl
jb
xor
pop
sahf
mov
test
mov
bound
ret
pop
and
mov
ss
jbe
lahf
cli
xor
or
pop
in
aaa
insb
fidivl
sbb
sbb
data16
sbb
add
clc
loopne
sbb
or
and
pop
add
adc
cmp
shlb
movsb
jg
sub
push
imul
jno
jne
dec
add
cmpsl
sarb
clc
cltd
sahf
jne
pop
cmc
pop
test
aad
mov
imul
jecxz
test
mov
sbb
push
add
mov
inc
sahf
cli
lret
mov
hlt
or
inc
mov
xor
push
pmullw
mov
push
rcrb
xor
test
pop
xor
cmp
cmpsl
fucomp
adc
rorl
cmp
mov
push
adc
sbb
or
and
shll
push
out
pushf
ret
sbb
lock
mov
negl
lret
pop
jno
xor
push
mov
lods
or
lds
call
fwait
aas
sub
xchg
jns
add
mov
pop
sahf
sbb
xchg
add
jg
cmc
sbb
mov
mov
pop
xchg
add
dec
or
stos
fidivl
or
push
sub
xchg
mov
popa
inc
mov
fistps
popa
jl
sub
ret
and
mov
popa
adc
jnp
mov
sbb
movsb
daa
fidivrl
jl
sarl
daa
sbb
xor
jno
repnz
jo
or
frstor
insb
or
push
shrb
and
stc
jno
iret
inc
sbb
insl
lods
add
imul
push
loop
pop
cli
scas
shl
adc
adc
imul
jg
push
imul
add
addr16
lret
loop
xlat
xchg
sbb
enter
cltd
out
or
notl
stos
xchg
les
rclb
les
xor
sbb
aaa
sbb
push
movsl
pop
xchg
inc
test
cld
or
mov
mov
lret
popf
clc
nop
jbe
xorb
iret
sbb
daa
cmc
lret
popa
ja
xor
into
mov
adc
insb
pop
or
adc
ret
and
in
jmp
pop
in
mov
adc
shrb
pop
cmpsb
rclb
into
js
test
decl
cmp
xor
cmp
jnp
dec
out
jmp
sbb
stc
jae
inc
sub
in
out
mov
ljmp
sub
inc
jb
xchg
add
outsw
out
sub
sub
pop
adc
add
fildl
or
mov
addr16
rolb
jp
aas
lds
mov
or
out
xchg
repnz
jmp
pop
mov
and
std
or
sub
mov
std
mov
push
sbb
inc
shr
push
mov
fistps
xor
pop
sub
push
cmpsb
inc
pop
insl
xchg
cmpsl
lahf
or
pop
jp
aam
mov
insb
sti
mov
xchg
jmp
lret
mov
fmull
push
out
pop
lods
les
mov
gs
repnz
arpl
cmp
inc
int3
les
cmp
xor
nop
adc
mov
outsl
ret
js
dec
jno
mov
push
in
mov
mov
xchg
les
mov
repnz
addr16
pop
cld
push
addl
xchg
mov
lcall
test
fcoml
add
inc
pop
sub
sbb
adc
pop
aas
ja
inc
sbb
idivl
fwait
mov
pushf
adc
xchg
sbb
cwtl
mov
pop
adc
pop
sti
ficoms
movsb
aad
pop
cmc
mov
test
cwtl
push
xlat
stc
xchg
stc
pop
and
mov
inc
sub
fs
push
push
sbb
mov
test
les
adc
pop
sub
cltd
movsb
or
add
pop
jae
inc
add
fisttpl
pop
mov
repz
test
xchg
mov
sub
insb
pop
or
pop
inc
rcrl
adc
sti
popl
mov
subl
shll
cmp
std
cwtl
mov
sahf
or
add
sbb
inc
clc
mov
mov
sbb
xchg
xchg
jne
xchg
iret
ret
idiv
jns
mov
mov
lods
jg
scas
pop
dec
cmp
mov
jge
mov
mov
add
add
lock
inc
sub
pop
ss
pop
leave
xchg
and
mov
std
jo
int3
push
jecxz
aad
sub
sbb
loopne
adc
inc
push
mov
lret
aad
ss
scas
cld
testb
clc
sbb
sbb
dec
lret
mov
mov
xchg
in
cmp
dec
adc
lds
xor
xchg
das
push
lods
fnsave
inc
vmovupd
fisubl
pop
dec
leave
sub
ret
jecxz
mov
mov
and
lret
sub
push
sahf
and
lret
push
jno
adc
xchg
lods
jecxz
cld
mov
jne
cmp
fs
add
lock
mov
mov
xorl
and
adc
pop
testb
push
cld
js
int3
jb,pt
or
les
adc
push
and
inc
jmp
fs
inc
mov
inc
call
mov
mov
or
pop
mov
imul
sahf
ss
sub
loope
cwtl
mov
add
add
cs
jle
jo
push
fstpt
fdivs
repnz
ficoms
sbb
sti
mov
or
add
sahf
js
aam
lahf
movsb
mov
out
rcrl
and
xchg
pusha
outsl
jmp
or
jge
int3
popa
xor
mov
mov
int
mov
fists
sbb
jl
jmp
jl
adc
xchg
or
cli
lods
bnd
cltd
dec
je
and
or
fs
cmp
pop
sahf
inc
loop
nop
and
out
dec
adc
outsb
bound
adc
mov
jae
das
pop
or
push
test
and
es
lcall
dec
enter
jmp
arpl
bound
leave
xchg
xorb
mov
imul
mov
mov
lcall
cld
jns
mov
xchg
std
mov
fwait
inc
mov
jp
aaa
ret
dec
pop
pusha
ret
dec
mov
sbb
fucomi
mov
inc
xchg
imul
jge
jno
or
jb
pop
push
mov
scas
fld
dec
icebp
call
cmc
roll
orb
outsl
nop
hlt
lahf
pop
jae
mov
jne
sub
mov
stos
adc
ja
dec
dec
repnz
cld
das
add
lock
scas
hlt
orl
sub
pop
cmp
daa
pop
js
push
sbb
addr16
out
mov
add
and
jmp
inc
inc
mov
fisttpll
jnp
cmp
fistpl
jnp
jae
stos
xchg
xlat
loope
jb
xlat
out
mov
hlt
scas
adc
adcb
test
fwait
xchg
jp
ficoms
orl
jo
sub
pop
cmp
xor
hlt
enter
mov
ret
adc
daa
addb
xor
jno
loope
jle
shlb
fwait
pop
dec
xchg
jecxz
imul
clc
loope
push
sbb
push
frstor
call
adc
mov
loop
movsl
push
xchg
lods
cwtl
lret
add
push
fwait
and
ds
ret
mov
jo
mov
outsb
data16
rclb
dec
jns
sbb
and
outsb
mov
dec
pusha
and
pop
add
and
imul
mov
mov
stc
xor
leave
ss
pop
fisttpll
xchg
repz
aas
push
cmp
mov
mov
pop
jno
bound
fdivl
movsb
inc
adc
shr
stos
mov
shrb
pop
call
mov
rol
scas
xor
lock
imul
ret
push
xchg
jae
aam
cmp
in
das
fnsave
popf
inc
mov
cli
xor
or
loope
jbe
mov
sbb
out
xchg
and
mov
fsubs
jg
mov
push
test
xor
push
lods
dec
push
mov
sub
icebp
dec
sub
xor
xor
movsl
mov
push
mov
daa
mov
shrd
lods
cmp
adc
xor
push
or
push
mov
jl
adc
mov
sbb
adc
addr16
ljmp
sub
mov
in
pop
cli
int
push
xchg
inc
jmp
in
test
sbb
mov
mov
jle
and
enter
into
inc
sar
push
aad
dec
jg
mov
add
jae
adc
ret
xor
sahf
mov
mov
jg
mov
test
lods
xchg
sbb
cli
decl
mov
in
jne
mov
dec
push
mov
mov
decb
out
in
ret
cld
inc
test
fnsave
xor
sub
and
cwtl
pop
jo
and
inc
pop
shl
pop
pop
xchg
rcr
into
inc
push
inc
mov
mov
popf
push
das
repnz
xchg
lock
inc
rorl
mov
lds
sub
std
shl
out
daa
fidivs
mov
lahf
fwait
mov
push
imul
lods
push
flds
aam
cmpsb
xchg
enter
int
ficompl
cmp
sarl
jns
push
outsl
jle
jp
mov
sub
cli
xor
cmp
cmc
push
sub
inc
xchg
xor
lods
ljmp
xchg
nop
iret
outsl
sub
dec
or
cmp
mov
stos
inc
mov
pop
out
fs
les
lcall
xchg
push
lea
lods
mov
mov
cs
add
cwtl
repnz
push
or
in
jns
fbld
mov
cmp
fisttpl
fwait
pop
xchg
mov
enter
stc
mov
sub
sbb
xchg
in
jp
xchg
popf
mov
mov
loope
or
dec
dec
arpl
mov
and
add
enter
std
outsl
not
mov
sub
mov
pop
and
or
lret
sub
fistpll
fsts
xchg
loopne
dec
inc
lock
pop
mov
pop
mov
mov
push
call
mov
dec
fmull
imul
into
jno
push
cmp
imul
adc
imul
popaw
into
and
shlb
ficoml
scas
sti
pop
cmc
jbe
xchg
sarb
inc
fistl
lea
inc
data16
adc
pop
popl
cli
fs
daa
pop
nop
sbb
dec
lods
jecxz
add
std
int3
leave
sarl
add
or
mov
movsl
fidivl
xor
xchg
lds
das
int3
or
push
inc
fbld
cli
mov
sbb
cwtl
add
rclb
int
nop
leave
sbb
sub
mov
in
out
and
sub
dec
mov
les
inc
cmp
xor
loope
test
adc
sbb
in
int
mov
add
sbb
movsb
and
xchg
adc
add
xchg
pop
out
or
imul
nop
mov
int
ljmp
dec
or
lret
cld
sub
xorl
icebp
xor
dec
pop
mov
and
inc
insb
outsb
sbb
je
push
rolb
push
mov
outsl
test
daa
dec
pop
lods
lock
test
and
dec
fdivrp
add
jmp
xlat
cmp
ljmp
push
rcl
xchg
jge
or
in
enter
inc
or
sbb
dec
loopne
mov
xchg
in
xchg
ja
ja
cmpsl
fbld
add
cs
daa
xor
in
stos
mov
shll
rolb
jnp
in
sbb
push
add
pushf
mov
popf
lcall
inc
cmpsb
aaa
adc
out
outsl
sbb
xchg
aad
xchg
or
inc
cmpsb
popl
jl
adc
lods
mov
icebp
clc
cmp
pop
cmp
loop
out
xchg
xor
push
jae
mov
addr16
jmp
mov
adc
lret
xor
pop
adc
sti
mov
fwait
pop
aad
jns
push
inc
mov
push
mov
jbe
lret
inc
insb
stos
mov
sar
inc
test
loopne
xchg
lea
add
xor
loope
paddd
insl
mov
push
mov
out
not
lods
add
xchg
dec
iret
sbb
pop
bound
in
cli
cmp
ret
dec
leave
out
cmp
cmpsl
adc
fsubl
xor
mov
fmul
pop
dec
dec
fsts
mov
ficomps
imul
sbb
pushf
push
sub
aam
cmc
mov
inc
jg
and
push
xchg
push
and
pop
push
cmp
cltd
mov
addl
sti
xor
clc
movsl
ficoms
std
xlat
lea
pop
inc
jecxz
popa
pop
cmp
sbb
mov
sti
mov
or
daa
mov
mov
outsl
dec
push
sub
call
cmp
in
cli
pop
out
inc
add
pop
mov
pop
inc
sbb
mov
push
mov
in
mov
sub
inc
hlt
xchg
add
stc
das
xchg
test
subb
js
or
out
cli
cmp
pop
fisttpl
jns
daa
dec
in
out
xchg
and
mov
inc
jae
cmp
in
arpl
sti
push
ja
lea
sub
fs
sti
mov
push
lock
push
sbb
mov
outsb
mov
pop
add
fnsave
loop
jle
adc
add
fsubrs
leave
inc
mov
mov
xor
mov
js
push
xor
push
into
mov
push
stos
and
loop
subl
dec
sbb
inc
out
add
fs
fwait
sub
add
sbb
xchg
push
ds
fwait
out
adc
xchg
inc
pop
add
pop
lret
repz
mov
xchg
arpl
mov
mov
mov
jle
arpl
cld
cwtl
fisttpll
rcrl
xchg
jo
iret
pop
sar
xchg
pop
out
out
jne
jns
jmp
stos
and
test
inc
push
push
loopne
xor
or
into
mov
decb
adc
push
call
pop
adc
fdivrp
int
xor
adc
sbb
jp
fwait
pop
lcall
xchg
jg
arpl
mov
aas
ficompl
hlt
into
xchg
fwait
out
clc
mov
pop
daa
mov
lds
jno
fidivs
es
nop
xchg
add
popa
push
inc
hlt
xchg
cwtl
jg
fwait
push
sub
aaa
idivb
sub
nop
ret
aaa
insl
mov
outsl
mov
push
pop
jne
add
les
paddusw
andl
into
cltd
cmp
xchg
bound
xchg
sti
mov
dec
mov
push
xchg
test
xchg
pop
adc
cmp
imul
cli
adc
mov
scas
enter
and
lea
push
je
out
sub
fisubl
mov
lret
repz
sub
jo
ds
inc
lahf
xchg
xor
subl
imul
les
mov
mov
out
insl
iret
arpl
es
rcrl
dec
cli
test
incl
or
or
and
nop
fists
insl
xor
mov
in
cmp
out
cmp
fs
inc
xor
clc
add
pop
cmp
jns
xchg
push
mov
push
mov
test
fmul
cmp
jge
mov
or
jl
and
pushf
sahf
push
mov
fcoms
dec
mov
or
and
inc
xchg
dec
sub
jcxz
fisttps
outsb
xor
and
jne
je
outsb
mov
in
jle
xchg
int
mov
scas
add
mov
mov
fsubl
add
adc
fiaddl
inc
lods
lret
out
sbb
rcrl
rcr
loopne
ss
clc
sbbb
jmp
sbb
icebp
inc
in
in
ja
inc
addr16
cwtl
xor
pop
lods
lds
out
pop
aaa
jle
xor
mov
bnd
xchg
mov
adc
jb
inc
and
xor
test
xchg
arpl
stos
mov
or
xchg
aam
movsl
adc
mov
ljmp
lock
js
inc
lods
push
xchg
lret
loopne
fistl
shll
mov
ljmp
adcb
pushf
fwait
and
jbe
rolb
lahf
dec
cmp
xchg
and
ja
fs
lock
cmc
jns
mov
add
sti
jns
xorl
gs
xor
jecxz
cmp
dec
cli
jle
das
pcmpeqb
ds
fcompl
and
lret
adc
in
inc
xchg
test
test
jecxz
aas
fimull
fwait
push
mov
xor
aas
out
lods
out
dec
outsl
loop
dec
adc
dec
rcl
enter
add
imul
jno
xchg
xor
jl
mov
es
stos
and
mov
cld
add
call
int
int
inc
js
in
popf
jmp
fsts
pop
or
cld
imul
loopne
aad
out
adc
cld
mov
jo
xor
xchg
and
outsb
dec
jo
mov
add
mov
into
pop
cmp
inc
data16
iret
xchg
jp
pushf
jo
out
lcall
pop
dec
fdivp
outsl
pushf
aaa
aam
cmp
in
push
jns
ds
cmp
test
cmp
jne
xor
jg
arpl
jecxz
xchg
stc
pusha
sbb
lcall
xor
jbe
pop
push
mov
push
xor
push
xor
fidivl
mov
filds
push
out
aaa
jnp
xor
loope
fucomip
inc
cmp
sbb
stos
repz
pop
pop
push
push
adc
jmp
insl
imul
in
xchg
adc
fidivl
or
pop
dec
mov
xor
sti
xor
roll
cli
stc
imul
mov
movsb
add
ret
adc
sarl
mov
jecxz
mov
enter
cmp
cmpsb
lock
out
popl
push
push
test
and
or
mov
inc
cmc
add
mov
dec
out
pushl
scas
mov
or
test
or
movl
dec
mov
push
popf
lret
mov
cmp
inc
test
xchg
xchg
xchg
gs
cmc
jge
cmp
add
cld
xor
pop
out
es
xchg
mov
cmp
dec
xchg
add
sub
jns
cs
sbb
add
push
outsl
push
dec
pop
xor
mov
mov
cli
jle
xchg
pop
add
ret
push
push
add
scas
enter
orl
sbb
divb
addr16
jmp
shrb
pop
and
jecxz
cmp
jg
inc
dec
cmp
std
das
mov
add
aas
and
pushf
mov
inc
xchg
out
popa
adc
or
pop
jmp
rcll
ret
sub
sbb
push
mov
or
nop
lea
inc
inc
fld
pop
push
or
mov
dec
in
push
int
mov
pop
subb
or
mov
mov
in
mov
or
lcall
add
arpl
mov
ljmp
xor
les
cwtl
cmp
loope
shrb
rolb
lret
aad
inc
mov
mov
dec
push
stos
imul
fmul
fsts
inc
nop
lret
and
fldt
xchg
adc
rcrl
inc
sti
adc
xor
cmpsl
mov
sahf
out
mov
jmp
imul
push
or
sahf
ret
jp
insl
test
popl
nop
addr16
push
mov
jnp
test
pop
test
lock
repz
sti
pminsw
fisubs
dec
ret
fwait
jb
adc
jecxz
dec
push
lods
inc
hlt
insl
insb
cmp
sub
jae
in
cmp
jg
push
insl
jp
cli
pushf
push
and
es
fdivrl
xor
xchg
jmp
icebp
int3
push
mov
loopne
loopne
xor
and
inc
pop
add
mov
lods
inc
imul
mov
mov
imul
mov
lods
jnp
cmpsb
subl
dec
addr16
sub
lahf
cmp
mul
sub
stc
push
xor
mov
ret
adc
jg
xchg
repnz
outsb
jp
mov
mov
iret
push
insb
mov
ret
jmp
mov
dec
imul
in
adcb
mov
bound
std
negl
sarl
popf
test
pop
clc
xlat
jbe
sub
mov
xchg
shll
mov
cld
jno
dec
xor
leave
xor
ds
xchg
mov
and
mov
fwait
sbbl
push
cltd
push
jmp
pop
push
or
jl
inc
into
pop
mov
push
jge
dec
sub
jmp
jg
jge
mov
push
fnstsw
cld
inc
mov
pop
sbb
mull
xorl
mov
dec
stc
mov
jns
aas
mov
and
bound
push
data16
lret
cmp
inc
dec
cmpsb
dec
gs
mov
test
aaa
fnsave
popf
dec
pushf
ud1
cmpsb
or
dec
push
sti
pop
pop
out
imul
jne
inc
xchg
insb
dec
mov
lods
call
ret
sub
shl
sub
lock
repnz
mov
cli
bound
add
fildll
loope
out
pop
mov
xor
fdivrs
jne
sbb
add
mov
loope
push
int
xor
pop
adc
adc
mov
sbb
add
push
leave
mov
push
or
and
or
mov
in
divl
pushl
lahf
pushf
add
xchg
in
fadds
pushf
int
add
jle
jne
mov
scas
jae
or
cmpsb
movsb
gs
cmp
iret
in
push
mov
mov
fidivrs
lahf
shll
pop
daa
imul
lret
xor
nop
mov
push
les
shlb
int3
fsubrs
mov
clc
xor
push
sub
xchg
aaa
dec
pop
cmc
adc
jecxz
pop
ja
loope
add
mov
mov
nopl
cmpsl
push
mov
ja
mov
mov
out
or
sahf
xchg
adc
leave
dec
cmpsb
cld
xchg
mov
cmpsl
push
push
jno
mov
xchg
shrl
cmp
mov
sub
and
sbb
xchg
inc
mov
mov
adc
dec
loope
fs
jmp
jle
jl
mov
das
in
subl
push
mov
pop
cmp
in
ret
nop
and
sbb
mov
aad
and
sub
jmp
pop
jecxz
or
cwtl
push
cmp
pusha
into
pop
mov
sub
mov
out
jg
mov
int3
imul
inc
xor
push
and
jmp
ja
push
ret
rcrl
fiaddl
fs
mov
add
xchg
ds
dec
jns
inc
and
jl
pop
or
mov
jno
js
cmp
mov
mov
jbe
lahf
test
mov
ret
in
mov
imul
inc
or
mov
push
mov
push
push
add
mov
bound
cmc
jg
rclb
push
mov
andps
ljmp
or
stc
xchg
pop
push
sbb
ds
imul
lods
push
push
dec
mov
dec
xchg
push
push
sbb
pushf
inc
fistps
cmpsl
cmc
lea
nop
sub
mov
sub
push
mov
hlt
imul
jb
loopne
aaa
mov
xor
subb
shlb
imul
pop
subb
sub
pop
jns
mov
add
cmp
pushf
xchg
das
mov
rorb
fisubrl
leave
add
or
imul
mov
fwait
cli
out
xchg
push
pop
jp
cmp
sbbb
adc
ja
and
dec
ds
or
mov
ret
dec
dec
sub
xor
pop
ja
fimull
mov
arpl
mov
shll
mov
and
pushf
jb
jmp
ljmp
and
xor
or
repnz
push
nop
lock
jo
xchg
aaa
or
dec
loop
mov
dec
pop
dec
in
or
imul
jmp
mov
sbbl
inc
mov
into
out
mov
jno
xorl
sbb
test
pop
fsubs
mov
and
push
cltd
int3
repz
cld
adc
lods
movsb
enter
out
out
lods
cmp
adc
fcomps
and
xor
cwtl
xor
mov
fstl
xor
push
in
les
mov
fwait
outsb
dec
mov
in
and
xchg
je
adc
dec
fwait
loop
ljmp
mov
sbb
adc
mov
and
enter
pop
fimuls
add
in
aas
out
dec
outsl
jno
jne
cwtl
sub
cmpsl
and
cmp
mov
jae
or
sbbl
nop
lret
mov
cmp
out
pop
adc
mov
xchg
jns
xor
lods
dec
pop
cmp
mov
add
pop
test
loopne
sahf
dec
mov
cmp
fidivrl
cmp
test
ret
add
push
fidivs
pop
ss
push
lds
fadd
pop
inc
xor
lods
pavgb
in
outsl
push
sub
pop
push
bswap
movsl
xchg
or
repz
and
cld
inc
xchg
cmpl
inc
mov
es
sub
andb
jmp
mov
js
leave
mov
jp
loop
add
sbb
int3
dec
pop
jbe
cmp
pop
movsb
insl
std
sarl
pop
inc
sub
mov
and
fdivrl
jp
mov
inc
pop
or
xor
jecxz
int
into
stos
and
or
push
dec
clc
mov
lea
mov
mov
fists
orb
icebp
mov
pop
push
pusha
test
outsl
int3
fstps
xchg
xor
jbe
jns
xchg
pop
dec
add
das
add
add
repz
mov
in
push
shll
je
jle
inc
repz
inc
scas
push
shll
imul
inc
and
mov
aad
and
mull
or
aas
jmp
jmp
dec
and
sar
insl
aam
int
dec
sub
sbbb
cli
pop
mov
scas
jo
call
gs
icebp
repnz
iret
ds
xor
or
and
mov
addr16
dec
xchg
inc
nop
pusha
mov
jg
cmp
aad
or
jg
movsb
test
loopne
popf
or
mov
sub
sbb
cmp
cmp
pop
and
sub
insl
mov
xchg
mov
pop
subb
inc
cmp
outsl
jno
cmc
sarb
dec
bound
sbbb
cmp
mov
sub
outsb
cmp
inc
mov
xor
xchg
sbb
pop
pop
ret
mov
fsubs
in
sub
fsub
mov
aam
jecxz
test
aad
ljmp
jns
xchg
pop
gs
add
es
dec
add
aam
ljmp
mov
inc
fcompl
add
loope
push
mov
jecxz
fwait
mov
cmp
fcoml
aaa
jne
push
jmp
stos
cld
repnz
push
dec
cmp
mov
and
adc
pop
mov
inc
or
sahf
inc
mov
mov
sbb
imul
push
lods
sbb
movb
inc
lret
lds
push
leave
add
sahf
jbe
icebp
pushf
xchg
pop
es
jle
pop
xlat
addl
sbbb
iret
or
and
jo
icebp
bound
inc
ret
insb
push
aad
fdivp
lods
xchg
push
stc
push
xchg
cli
hlt
pop
movsl
movsl
jge
clc
pop
inc
xchg
jae,pt
cmpsl
mov
cmp
movsb
add
aad
cld
std
lea
repnz
ja
mov
and
mov
dec
rorb
mov
je
imul
shl
xor
dec
ljmp
mov
mov
je
iret
pop
add
aas
sbb
xchg
pop
xlat
cmp
fwait
add
ret
cli
and
xchg
xchg
jmp
and
cli
repz
jns
in
lds
add
xlat
inc
add
dec
inc
fcompl
cmp
test
dec
out
popf
les
dec
stc
mov
xchg
imul
in
push
xor
andb
mov
lods
jle
adc
repz
mov
call
rclb
pop
dec
lds
or
xchg
mov
sub
mov
sbbl
mov
fsubs
lahf
adc
cli
cs
mov
push
js
xchg
mov
call
mov
into
addb
clc
ds
push
outsl
push
fcoms
push
ret
and
or
pop
xchg
js
aad
aad
ds
jle
inc
add
outsl
mov
mov
xor
fnstcw
aas
daa
dec
test
sbbb
push
sti
dec
lods
inc
lods
fildll
dec
mov
orb
xchg
mov
sub
sub
les
mov
out
pop
xchg
cli
out
sbb
aas
inc
outsl
icebp
and
mov
movsb
in
cltd
xchg
lcall
ds
lcall
lret
push
test
xorl
sbb
lds
fsub
inc
fstl
sti
mov
cld
inc
daa
inc
loopne
sbb
aam
push
pop
dec
fsts
and
push
sbb
mov
lock
loope
repnz
jl
or
pusha
adcl
pop
test
pop
mov
pop
cmp
pop
fcom
dec
mov
adc
mov
inc
ljmp
mov
adc
push
clc
fisttps
fcomip
imul
jle
pop
hlt
pop
push
xchg
mov
add
lods
push
sbb
call
imul
mov
cmp
repnz
sub
xchg
add
mov
ret
movsb
imul
idiv
add
fcomip
and
adc
in
iret
sbb
adcl
in
insb
stos
idivl
mov
pop
jp
loopne
cmpsb
ret
clc
and
lret
sbb
pop
pop
imul
movsl
mov
in
adc
imul
inc
sub
sub
lret
lret
adc
cmp
test
mov
mov
or
push
jmp
ret
inc
lds
fcoms
mov
scas
and
or
mov
imul
dec
and
dec
cmp
push
mov
mov
test
popf
int
add
or
gs
idivb
xchg
pop
xchg
orb
das
fldl
jg
cmp
pop
mov
in
adc
or
test
add
dec
inc
mov
mov
pop
jmp
in
lock
ja
sarb
mov
jecxz
sub
jbe
xchg
mov
xor
sbb
out
mov
jp
cmp
push
inc
cmpsl
adc
out
mov
and
shlb
mov
dec
cmp
mov
adc
je
adc
in
sbb
pop
mov
lcall
jbe
cwtl
xor
jnp
test
jge
push
mov
out
mov
dec
dec
push
aaa
aad
sub
loop
and
adc
fadds
push
inc
xchg
outsl
push
jnp
testb
xor
add
jnp
pop
shl
pop
hlt
imul
jmp
push
sar
cmp
shrb
mov
cmpsb
divb
sub
sarl
add
mov
jns
gs
js
sbb
pop
add
mov
dec
pop
cmc
gs
mov
lcall
test
icebp
inc
xor
mov
aad
mov
inc
mov
mov
cmp
push
xchg
cmpsl
fdivl
enter
adcb
mov
imul
shlb
push
out
cmp
adcb
pop
push
out
mov
lods
or
mov
mov
pop
xor
cmc
es
mov
sbb
stos
roll
ds
jecxz
imul
xchg
push
push
movsl
cmp
test
lods
adc
pop
or
mov
jmp
pop
push
cli
sbb
in
outsl
sbb
xchg
call
int
dec
fsts
bound
idivb
mov
sbb
jp
adc
or
add
mov
xchg
mov
mov
aad
loop
jno
push
ret
dec
sbb
sub
mov
cmp
dec
jp
jo
js
popf
bnd
pop
ss
testl
dec
push
sub
push
icebp
pop
xchg
into
int3
enter
lea
cmc
fisubl
dec
xorl
dec
cmp
lret
push
imul
pushf
orl
cmpsb
pop
addr16
popa
andb
aaa
add
sub
jns
adc
inc
ss
push
and
leave
aad
add
ret
cmp
sub
fmull
repnz
pop
sbb
xchg
push
push
mov
cmp
cmpsl
ljmp
mulb
arpl
or
addl
ljmp
fsubp
ja
shll
mov
xor
inc
js
lock
add
cmp
mov
mov
or
pop
mov
fnstcw
imulb
cltd
and
loope
shlb
sub
clc
xchg
cmpsb
mov
imul
push
add
xor
adc
test
and
jle
je
add
aas
test
ret
mov
inc
fidivrs
mov
xchg
sub
std
sbb
push
push
hlt
negl
hlt
jmp
xchg
sub
push
mov
pop
out
outsb
jecxz
mov
mov
pop
aam
xchg
stc
mov
jmp
jbe
jb
leave
decl
mov
das
stos
sbb
xor
jns
add
jbe
mov
mov
jecxz
cmpsl
jbe
push
jns
push
dec
xchg
xchg
push
in
xchg
cmp
jge
les
sub
sub
out
inc
cmp
jge
pop
jecxz
enter
out
sub
sub
ja
push
rorb
aad
mov
push
pop
fisttpll
inc
test
ss
fnstcw
repz
sub
xchg
fxch
in
xor
aam
lods
fmull
outsl
push
add
in
inc
out
pop
stc
addr16
or
xchg
lcall
sub
movsl
clc
push
stos
or
mov
arpl
jecxz
enter
in
cmp
jecxz
insb
jb
sbb
test
lock
scas
mov
pushf
adc
arpl
and
xchg
test
inc
adc
daa
imul
jp
nop
ja
sub
xchg
dec
mov
scas
movsb
cmpsl
enter
sbb
out
mov
sahf
jecxz
faddl
js
add
loope
fldenv
popa
push
cmp
rorl
ljmp
xor
movsl
inc
shr
mov
mov
push
orl
pop
dec
into
inc
out
test
loop
jge
stos
adcb
or
push
sti
stos
dec
and
fnsave
add
push
or
add
cltd
mov
popa
sbb
add
js
and
inc
hlt
aas
inc
cmp
out
ror
xchg
xor
into
push
dec
and
in
mov
xchg
cli
sbb
popf
stos
adc
push
mov
fdivr
ficompl
or
xchg
xor
cmp
clc
or
dec
call
inc
mov
mov
sub
push
shll
push
add
fldcw
ds
mov
not
mov
call
jns
shl
inc
or
pop
push
bound
push
sub
jns
lods
sub
sub
rcrb
push
gs
imul
mov
xor
mov
jns
mov
in
mov
push
mov
fdivs
xchg
push
mov
pop
mov
inc
stc
add
fwait
mov
clc
sbb
sbb
iret
mov
mov
jb
xchg
mov
pop
cld
push
or
mov
shrb
jmp
sbb
and
pop
lret
add
in
mov
xchg
pop
das
scas
mov
arpl
mov
loope
adc
jmp
lahf
push
in
mov
xchg
fcomps
push
sarl
and
cld
scas
add
cmp
bound
loope
xchg
jp
push
cltd
sbb
fsubp
testl
sbb
rorb
jmp
outsb
push
mov
push
fwait
xchg
icebp
lret
sub
xor
sbb
arpl
cmp
dec
cmpsb
and
add
jne
aas
pop
mov
push
leave
les
les
notl
jbe
push
out
repz
nop
arpl
inc
test
ret
decb
xchg
jne
jg
xor
dec
sub
xchg
jnp
mov
sub
nop
push
xor
insl
pop
loopne
in
lret
inc
push
jne
add
testl
nop
insb
push
cmpsb
xchg
adc
and
inc
jecxz
jecxz
mov
aad
cmp
adc
sbb
sbb
cltd
push
xchg
xor
push
call
jl
mov
and
pop
fiadds
adc
adc
sbb
mov
jnp
dec
dec
cmp
mov
xchg
xchg
push
xchg
js
or
cwtl
ljmp
sub
roll
inc
dec
mov
cmpsl
sub
jno
idiv
add
and
pusha
and
xor
inc
push
mov
jbe
sub
aad
scas
cmp
ret
imul
push
popa
push
xor
iret
mov
xor
test
xchg
out
xor
cmpsl
test
cmp
into
sub
dec
mov
dec
inc
notl
sub
in
repz
lods
jnp
cmp
sub
mov
fists
mov
push
outsl
mov
add
xor
xor
cmp
xor
std
cmpsb
popf
jg
or
mov
or
cld
push
pop
gs
dec
adc
jg
movsb
mov
test
ret
push
cltd
cltd
or
mov
out
jns
sbb
inc
shrl
mov
and
in
dec
leave
add
adc
or
xchg
xchg
or
fisubrl
adc
dec
jnp
iret
in
sahf
ja
cmp
inc
adcb
lods
add
mov
cmp
iret
scas
add
and
dec
popa
xchg
mov
push
cmp
sub
imul
icebp
shlb
inc
pop
aas
mov
and
stos
lret
xchg
imul
int3
and
pop
or
sbb
jp
push
stos
sbb
nop
add
lock
push
popa
testb
loope
in
mov
std
icebp
pop
insb
leave
insl
ret
inc
leave
sbb
loopne
imul
sbb
push
cli
add
adc
clc
jg
mov
scas
jns
dec
add
or
mov
xchg
stos
cltd
out
leave
cmp
sahf
call
lods
lds
cmp
mov
sahf
iret
outsl
and
cmp
pushf
xor
jne
roll
andl
xchg
ret
rcr
lret
mov
sbb
cli
loopne
ret
ss
icebp
sbb
ss
cmp
fdivr
insl
sbb
rcrl
pushf
popf
or
js
subl
sbb
adc
lods
mov
mov
or
adc
or
adc
stc
xchg
out
xor
or
and
sbb
leave
sar
xlat
xorb
adc
pop
mov
cmc
stc
add
lcall
and
push
inc
adc
mov
in
in
inc
add
lock
mov
jp
sbb
push
out
sub
cmc
daa
je
push
xorl
gs
inc
or
jns
push
mov
les
enter
cli
jmp
add
fcomps
mov
js
bound
ja
jb
fdivrs
mov
fwait
dec
mov
movsb
lods
call
mov
je
rcrl
pusha
cltd
cmp
imul
repz
dec
cmp
adc
cmp
movsl
push
aam
leave
dec
cmp
push
fisubrs
pop
pop
int
jne
xor
adc
sarl
int
add
test
push
fsubrl
mov
adc
sub
scas
push
cld
dec
mov
fistps
mov
call
cmp
adc
and
out
mov
test
movsl
sub
testl
out
push
cmp
aad
out
mov
mov
rol
mov
mov
fdivrl
sbb
mov
xor
adc
sub
cmp
pushf
ficompl
das
xorl
inc
pop
sarb
jle
imul
rcr
mov
into
adc
xchg
out
das
jg
mov
clc
cwtl
pop
dec
pop
mov
pop
pushf
cmpsb
mov
sub
push
popa
rcrl
or
ret
imul
xor
shlb
push
jge
sbb
call
pop
scas
mov
imul
add
xchg
jecxz
test
push
cli
xchg
cmp
adc
jle
clc
leave
shrd
cltd
mov
adc
or
pop
adc
push
xorl
jl
sarb
xchg
scas
lods
xchg
ljmp
mov
mov
pop
loope
mov
pop
fdivl
sub
bound
sub
mov
les
std
rcll
sbb
push
shlb
jmp
lret
test
aas
jo
xchg
push
iret
push
es
insb
xchg
mov
aas
jno
dec
dec
xor
lret
mov
push
pop
stc
inc
xchg
xor
xor
xor
rorl
or
add
mov
or
add
mov
push
stos
xchg
xchg
jns
pop
fidivl
add
adc
aas
fs
push
push
sub
insb
cmp
idivl
adc
mov
or
jp
add
shrb
das
pop
and
push
sar
and
js
lret
sbb
adc
fcmovne
into
in
mov
cmp
out
mov
jl
hlt
addr16
xor
fildll
fs
aaa
pop
shrl
mov
lods
xor
jb
dec
add
jp
sti
in
fwait
jle
sub
xor
and
cmc
sbb
and
faddp
pop
test
lock
mov
repnz
sbb
xor
lret
or
arpl
outsl
popa
popa
sub
int
movsl
sbb
xchg
pop
bnd
daa
cli
aas
pop
mull
xor
pop
adc
test
aaa
in
sub
scas
xchg
mov
in
dec
iret
out
aad
pusha
movb
dec
outsl
jno
pop
rolb
inc
test
cmp
jle
faddl
iret
sahf
add
sub
adc
add
pop
dec
pop
xchg
and
les
and
mov
js
jge
add
cwtl
les
sbb
seta
jne
addr16
stos
es
call
sub
sarl
in
sbb
mov
fwait
xchg
divps
pop
es
dec
test
pop
shlb
sub
arpl
ja
adc
shl
mov
insb
mov
shll
mov
lret
pop
inc
push
dec
add
mov
stc
cmp
lods
xchg
inc
stos
lret
jecxz
mov
jno
jecxz
mov
leave
aas
insb
js
jo
pusha
pop
stos
fdivp
out
adc
aad
jmp
aas
je
dec
je
bound
inc
adc
std
gs
cs
out
push
outsb
xor
arpl
mov
sub
repz
pop
or
mov
or
enter
clc
push
ds
cmpl
cmp
pop
pusha
or
mov
inc
dec
jo
js
dec
lahf
adc
sar
nop
sub
and
arpl
sbb
scas
test
adc
inc
sbb
aas
out
xor
pop
test
sub
js
aas
ret
ror
fs
xor
jecxz
mov
pop
fistl
mov
xor
lret
mov
lret
test
shr
cmp
fwait
pop
cmp
or
mov
cmp
push
cmp
jne
xlat
and
adc
lods
xor
mov
aam
cltd
movb
xchg
cmp
adc
scas
mov
and
insl
pusha
clc
inc
adc
mov
sbb
mov
and
xchg
jmp
loop
and
inc
mov
push
scas
or
fdivl
pop
add
addr16
lahf
roll
pop
subl
jg
es
push
int3
aam
adc
outsb
add
sbb
mov
lods
jg
mov
push
and
ret
sti
and
inc
lcall
dec
mov
mov
add
jmp
pushf
inc
inc
sub
inc
mov
jbe
pop
jg
push
inc
repnz
mov
movsb
testl
xchg
in
enter
jmp
mov
sahf
jbe
push
out
icebp
lcall
jnp
xor
ret
int
xor
xor
subb
jge
std
movsb
loope
popf
loopne
movsb
sti
add
sti
sbb
xor
bound
pop
out
xchg
imul
mov
addb
jg
push
pop
aas
jb
mov
sbb
lods
or
outsl
mov
sbbb
scas
je
mov
xchg
cmpb
cmp
dec
sti
add
mov
mov
insb
pop
mov
sbb
insb
xchg
jo
mov
xor
fs
jp
shrb
xlat
inc
xor
pusha
pop
enter
outsb
jp
dec
ret
sti
ss
mov
cmp
test
cmp
fbstp
call
iret
out
or
sub
in
or
adc
sbb
cmc
sahf
dec
or
jp
and
out
nop
enter
add
and
popf
jp
std
push
insl
popf
inc
mov
push
push
daa
in
mov
cwtl
pop
sbb
ffree
ja
mov
decb
mov
cmpsl
icebp
inc
push
dec
mov
dec
lahf
mov
mov
es
lods
xchg
push
stos
mov
push
xor
shlb
ds
insl
int
push
int3
fldcw
xchg
in
mov
mov
js
in
adc
sub
inc
dec
jae
sub
dec
sbb
jmp
and
fildll
mov
mov
adc
in
cmp
and
leave
pusha
xchg
cmp
in
repz
or
jbe
lret
xchg
adc
insl
cmp
mov
in
and
sub
jae
jecxz
inc
in
xor
popa
ljmp
sbb
mov
sbb
xchg
in
and
mov
jl
test
mov
inc
xchg
push
arpl
sub
fidivrl
ja
gs
test
ret
subb
or
mov
inc
fs
aad
pop
popf
jno
mov
movsl
std
imul
in
pop
sbb
xor
in
cltd
pop
pushf
push
std
fldenv
mov
ret
push
mov
mov
and
outsl
mov
pop
mov
out
mov
addr16
inc
and
dec
mov
xor
pop
push
dec
xchg
scas
popa
mov
ja
pop
or
jle
sub
daa
xor
aam
or
xchg
int3
mov
lret
add
movsb
fucomi
cmc
out
rorb
repnz
pushf
lds
imul
jg
dec
cmp
out
push
test
push
ret
mov
in
aad
pop
shrb
cwtl
aad
leave
std
mov
inc
pop
je
out
out
ja
divb
pop
mov
fimuls
idiv
inc
sub
adc
fnsave
add
pop
jmp
or
fcomi
add
outsb
ret
cmp
jge
and
and
incb
int3
or
jp
in
mov
jne
sub
mov
sbb
mov
mov
adc
jp
adcb
repz
mov
loope
mov
mull
sbb
call
out
xchg
stc
aaa
jnp
jb
jg
js
in
cmp
imul
icebp
lahf
fcmovnb
mov
clc
jg
inc
dec
xor
cmp
jp
fistpl
rcrl
push
lock
aad
imul
xor
jnp
pop
shrl
add
in
mov
jns
test
leave
ss
nop
push
sbb
pop
mov
dec
mov
pop
lods
test
cmp
xchg
sahf
mov
test
mov
sub
and
mov
rcll
mov
mov
loopne
sub
ja
push
out
je
std
jo
addr16
fmull
xchg
popf
push
call
daa
and
pop
aas
cmp
or
adc
enter
into
jae
insl
in
les
inc
and
or
scas
lcall
mov
jo
popa
lret
push
aaa
xchg
sbb
ja
loope
dec
stc
loop
jl
test
push
lock
loope
stos
sub
imul
ds
cmp
ljmp
sbb
jecxz
mulb
mov
aaa
stos
fimuls
adc
ficompl
loopne
ss
mov
xchg
enterw
pop
add
push
push
jbe
dec
adc
lock
push
add
and
repz
jnp
push
lret
add
loopne
loopne
xchg
mov
cmpsl
or
xchg
pop
cmp
pop
adc
lods
aam
stos
or
and
icebp
sti
int3
adc
scas
aaa
push
movsb
scas
pop
and
lcall
addb
mov
xchg
mov
sub
pop
adc
iret
pop
iret
adc
add
popa
daa
filds
add
cmp
les
aaa
xchg
sarl
fcompl
and
xor
dec
iret
cmpsb
sbb
scas
sbb
nop
leave
mov
stos
in
outsl
pop
inc
pop
pop
pushf
cwtl
mov
mov
sbb
inc
add
scas
cmp
repnz
or
outsl
repz
lds
icebp
xor
and
add
and
mov
daa
mov
aaa
add
or
mov
aas
outsb
decb
scas
xchg
push
push
rcrl
sub
mov
out
js
or
movsl
and
push
fwait
sbb
cmp
jge
dec
cmp
rorb
cmp
push
ja
loope
cmc
and
cmp
adc
ss
mov
fwait
mov
pop
jmp
dec
inc
fadd
ret
mov
cmp
cs
jl
mov
add
push
test
bnd
jno
std
addb
mov
mov
das
mov
or
lods
push
pop
and
push
imul
mov
int3
and
stos
pusha
ret
lods
mov
push
pop
push
fdiv
sub
das
add
lret
arpl
xor
stos
repnz
adc
insl
mov
inc
inc
push
push
dec
aam
pop
mov
fdivrs
dec
out
adc
add
in
cli
sbb
scas
fbstp
push
dec
fstpl
mov
or
ficomps
ficomps
xchg
pop
in
mov
cmp
and
inc
dec
jg
fisttpll
aaa
stc
add
lret
jnp
sbb
inc
lret
aas
mov
imul
jns
fsts
sbb
ja
pop
xor
dec
mov
jo
sbb
mov
pusha
inc
fcoml
inc
lods
cli
cwtl
testb
dec
or
mov
ljmp
or
dec
jecxz
out
enter
jge
sbbb
into
sbb
cmc
loop
aad
lds
fisubs
je
and
repnz
xchg
clc
mov
mov
out
bound
pop
push
lods
jecxz
fildll
outsl
inc
push
xchg
imul
push
pop
outsb
mov
pop
push
filds
adc
or
cmp
and
mov
sbb
cmp
sbb
ljmp
add
addr16
jmp
cmp
rorb
jle
add
or
leave
adc
mov
xor
fsub
dec
cmp
push
and
cmc
je
sub
fldl
add
jo
ljmp
scas
push
inc
xor
cmp
mov
scas
sbb
loop
xchg
lcall
lret
mov
mov
xchg
aaa
jno
cli
inc
add
cwtl
jmp
xor
mov
repnz
adc
lcall
jp
jae
cmp
dec
push
scas
stos
lods
and
loopne
xlat
imul
and
ja
inc
xor
inc
and
das
lods
cltd
popf
push
popa
pop
and
xchg
iret
or
pop
dec
pop
cltd
pop
mov
push
cmovle
hlt
test
stos
mov
xchg
ret
shll
pop
js
and
sub
jb
enter
cmpsl
adc
xlat
inc
adc
inc
fbstp
popa
mov
push
pushf
jae
outsb
shr
add
dec
and
push
and
iret
xchg
call
add
fmull
mov
xlat
and
call
testl
loopne
mov
daa
aad
sub
stc
push
push
test
int
dec
xlat
xchg
mov
inc
add
je
adc
pop
pushf
cltd
jno
mov
mov
sarb
mov
and
rol
leave
mov
lods
call
xor
les
adc
or
add
lahf
aas
mov
adc
jmp
mov
cwtl
or
loopne
test
fmull
sbbl
pop
rcll
gs
mov
fisubrs
rcll
xor
dec
add
loop
ret
repz
or
dec
lcall
arpl
jge
sub
cmp
or
sub
and
push
mov
es
jnp
sub
sbb
xorl
push
dec
add
rorl
ror
sub
sub
into
xchg
pop
lock
inc
mov
inc
and
arpl
pop
ds
inc
jae
jmp
xchg
andl
sbb
mov
mov
xchg
insb
pop
aad
dec
lods
push
sub
in
inc
rclb
pop
jmp
push
aas
mov
int
cmp
jbe
push
clc
xor
cmpl
enter
data16
mov
outsl
testl
push
addr16
jbe
lahf
cmpsb
pop
jb
push
test
stc
sub
sbb
or
inc
pop
and
lods
mov
mov
sub
xor
jmp
ret
sub
incb
cmp
das
fnsave
sub
popf
cli
mov
xor
adc
rorl
pop
dec
jbe
inc
es
jo
lods
xchg
push
sarb
dec
pop
mov
push
clc
add
xchg
add
imul
out
push
push
dec
jno
sahf
sub
push
adc
sub
popf
pop
mov
cmpsl
bound
xchg
push
push
dec
jbe
fstpl
or
jle
sub
lcall
jno
and
add
cld
lock
imul
push
mov
or
mov
add
and
sbb
outsb
pop
mov
sub
mov
cmp
loop
stos
sbb
cmpsb
outsl
in
js
stos
sbb
fcoml
leave
cmp
out
test
add
stos
rorb
inc
ret
aas
orb
iret
rcrl
and
imul
mov
imul
sub
pop
sbb
lock
popf
imull
mov
dec
or
inc
pop
sbb
mov
sbb
jns
add
pop
ss
mov
push
cltd
sbb
outsl
ficoml
dec
out
xor
mov
cmp
push
jmp
cmpb
je
pop
xor
add
and
adc
dec
inc
shll
addr16
jbe
mov
pusha
je
xchg
lret
outsl
loopne
repnz
rcrb
mov
scas
js
cwtl
rorb
nop
push
push
cmc
mov
clc
jp
loop
addr16
ret
push
sub
and
push
cs
push
ret
sub
out
popa
pop
push
adc
out
adc
popf
push
mov
sbb
lea
mov
rol
sub
mov
in
aaa
mov
lret
mov
sti
push
sub
fsubrl
push
lret
inc
bound
repnz
mov
xchg
sbbb
mov
sbb
mov
ret
cmp
sub
fldt
sub
cltd
cltd
aas
iret
push
mov
sbb
dec
in
cmp
sub
sbb
and
jb
pusha
sbb
jp
push
push
fldenv
in
mov
push
stos
sub
adc
ret
lds
cmpsb
int3
xor
push
push
or
in
or
mov
and
fadds
fstps
pop
std
sub
cmp
xor
sub
jbe
or
fbld
jecxz
sti
add
sub
cwtl
sbb
adc
sbb
jne,pt
xor
push
pop
mov
data16
fsts
mov
loopne
pop
push
in
mov
mov
mov
xor
sbb
push
add
mov
xor
sbb
jge
and
sub
and
pop
fisttpl
pop
mov
dec
push
sbb
mov
xchg
das
sbb
loope
or
push
pop
neg
add
stos
mov
test
clc
inc
daa
leave
mov
inc
lea
cmove
sub
popl
sbb
inc
repnz
leave
sbb
rclb
pop
js
stos
push
xchg
add
and
arpl
into
fnstenv
push
jmp
jg
pop
add
loop
cmp
rcr
ret
lods
jecxz
dec
pusha
cmc
mov
pop
or
mov
lods
mov
dec
xor
mov
stos
shll
push
rorl
add
out
bound
test
sbb
and
lahf
xchg
in
push
jg
pushf
int3
xor
push
rorb
adc
out
xchg
ja
push
xor
lock
insb
pop
sahf
mov
rorl
adc
loop
push
mov
push
and
std
ja
insb
jl
sahf
ljmp
stc
aas
je
iret
nop
mov
push
or
out
cmp
inc
in
jge
push
sbb
les
loope
jno
add
shrl
fdivs
push
mov
jp
xor
out
imul
lret
dec
decb
rcrl
jbe
xor
lock
push
or
cmc
push
movb
jb
lods
lcall
aaa
pusha
mov
call
jmp
sti
pop
mov
loop
hlt
out
cltd
dec
in
mov
jl
mov
negb
pop
jb
ljmp
cmp
jl
inc
push
adc
xor
push
outsb
mov
repz
add
movsl
and
mov
testl
mov
cwtl
es
fsubrs
push
cltd
push
cltd
cmp
jmp
mov
dec
rcr
push
sub
into
or
xor
and
int3
lcall
sahf
dec
push
xchg
push
aad
sbb
dec
pop
cmpsl
jle
cmp
and
fwait
out
out
ds
and
sub
mov
addl
push
adcb
les
test
lahf
je
push
sti
int
cmc
popf
leave
leave
repnz
jo
pushf
sbb
les
mov
cli
aaa
push
jg
and
inc
mov
push
push
push
es
repz
ds
mov
gs
fwait
xchg
or
lcall
ret
sub
cmp
fwait
rorl
xor
sbb
jo
add
adc
out
mov
imul
jecxz
out
sub
loop
fldl
xor
divb
jb
push
xchg
adc
pop
mov
mov
adc
aaa
insb
mov
sbb
mov
xor
and
arpl
dec
and
pop
stc
pop
xor
fdivp
rcrl
ret
xor
icebp
insl
ret
or
stos
pop
mov
outsl
andnps
pusha
add
mull
les
push
lods
dec
mov
gs
sub
mov
addr16
inc
push
dec
jmp
cmpsb
mov
push
cs
xchg
add
sti
or
dec
mov
fwait
add
lret
mov
jno
notl
inc
mov
repnz
rcrl
pop
fisttpl
sub
or
mov
push
rorb
sahf
adc
adc
dec
outsl
mov
movsl
mov
out
ret
sub
pop
sbbl
pop
jb
data16
pop
mov
push
jnp
jmp
mov
jg
inc
pop
fwait
sub
hlt
pop
sub
pop
xchg
popl
loope
jb
inc
sti
jne
push
outsl
mov
iret
lock
xchg
pushf
lcall
jo
jge
xchg
and
rcrb
xchg
sub
outsl
rcrb
out
loopne
sub
inc
pop
cmp
jp
inc
shr
inc
adc
popf
xchg
lret
in
sbb
jns
mov
outsl
stc
sbb
mov
push
dec
shlb
notl
cmp
cwtl
sub
loopne
dec
aaa
jno
in
bound
xchg
jnp
or
jl
decl
out
sarb
cwtl
icebp
rclb
out
fmuls
mov
pop
push
pop
push
loopne
es
gs
outsl
add
lahf
pop
mulb
push
cwtl
mov
fnstenv
inc
dec
outsb
xchg
insl
or
add
call
loopne
inc
jmp
cli
pop
lods
cmpsl
push
adc
call
arpl
loop
cmpsb
push
push
cmp
repz
or
in
sbb
repz
dec
push
test
loope
push
xchg
pop
fnstsw
sub
outsb
pop
sub
pop
in
push
and
les
jmp
sbb
fsubrs
sub
shrb
mov
cmpsl
dec
ret
mov
loope
fwait
mov
and
mov
xchg
imul
dec
imul
add
orl
sbb
pop
push
sahf
loopne
inc
pusha
sub
sahf
cltd
jmp
inc
pop
cwtl
sub
push
and
lods
dec
jb
pop
std
pop
xchg
mov
outsb
stos
adc
out
dec
or
into
push
xchg
xor
std
lods
cld
outsl
stc
sbb
dec
dec
xor
fsubl
outsb
jne
aad
sub
sbb
sbb
jno
scas
pushl
repnz
and
les
sub
xchg
ds
or
data16
xchg
push
das
pop
or
mov
add
push
inc
cmp
pop
out
push
push
xchg
out
mov
out
mov
or
adc
sbb
sub
xchg
cmpsb
mov
jecxz
call
or
and
and
fwait
mov
insl
push
or
js
lret
loopne
xchg
mov
sahf
xlat
fwait
sub
mov
arpl
xchg
sub
and
jg
add
icebp
mov
adc
dec
stos
ss
cmp
shrb
sub
dec
inc
dec
xchg
sbb
in
clc
loop
push
pop
xor
stc
xor
adc
sub
mov
xchg
xchg
mov
sub
add
mov
rcl
gs
pxor
pop
fnstenv
rclb
outsb
sbbl
imul
idivb
ss
in
xor
mov
mov
insb
or
mov
aas
xor
in
cmc
inc
outsb
pop
mov
leave
mov
dec
mov
fwait
sub
jl
inc
xchg
cmp
or
sub
sbb
push
push
aam
fildl
and
inc
cmpsl
mov
inc
or
es
sbb
fisubrl
mov
iret
and
mov
hlt
cli
scas
xchg
mov
adc
bound
sub
xor
adc
enter
loop
sbb
bound
aad
test
mov
repz
or
dec
mov
jns
mov
test
popf
rorl
or
and
mov
mov
cmp
in
pminub
daa
stos
loop
dec
push
jp
fiaddl
dec
outsl
and
fadds
pop
ljmp
ss
adc
je
icebp
adc
fdivl
loope
push
dec
mov
imul
sbb
and
inc
roll
ret
ret
xlat
lea
sbb
sbb
imul
mov
mov
xlat
adc
rorb
cmp
jb
dec
xor
int3
add
repnz
jb
and
sti
rol
jp
ftst
pop
xor
xor
mov
imul
rcl
add
es
aas
adc
mov
loope
or
inc
movsb
comiss
and
addr16
and
dec
out
inc
jae
dec
jp
daa
sbb
fimuls
push
mov
js
xchg
jp
loopne
sub
test
scas
add
or
and
movsl
dec
pop
aad
daa
adc
stc
mov
jl
pop
test
xchg
test
pop
cmc
pop
xchg
adc
jmp
cmp
jecxz
jmp
orb
ret
adc
andl
xchg
test
xchg
data16
shrl
dec
or
divb
jo
pusha
popf
adcb
push
jb
sbb
sub
shrl
lock
addb
loopne
inc
jp
mov
mov
jae
mov
cmp
inc
dec
inc
push
data16
pop
lret
mov
mov
pop
or
jne
xor
mov
sbb
xor
mov
xchg
mov
adc
sub
or
cmp
sub
sub
scas
jbe
mov
mov
insl
loop
aam
andl
add
je
jle
inc
stc
test
add
xor
mov
mov
mov
testl
inc
jg
inc
divb
pop
data16
je
fiadds
sbb
lock
daa
xor
mov
xchg
cvtps2pd
rcl
cld
insb
pop
cmp
in
push
sti
ret
loop
lea
stos
push
outsb
andb
popa
int
jae
fwait
or
pop
and
out
fstp
or
outsl
mov
aaa
ljmp
mov
jl
fs
dec
push
movsl
and
mov
push
pop
fdivr
pop
inc
xchg
xchg
js
cltd
push
sti
gs
and
mov
fildll
sahf
cmp
inc
sub
int
imulb
fs
jne
in
mov
xor
inc
icebp
or
es
in
push
and
scas
cmc
and
or
sti
js
ja
jge
add
dec
push
push
jb
daa
adcb
and
mov
sarb
fcomps
lods
mov
xor
inc
adc
ret
pop
cwtl
xchg
push
inc
inc
push
lods
add
jle
pop
fwait
dec
inc
xor
pop
xor
cli
dec
xchg
outsb
in
out
pusha
pop
jmp
mov
test
pop
jp
or
push
mov
xchg
and
xchg
lcall
dec
xchg
notl
inc
lahf
push
xlat
sub
and
cmc
es
jmp
mov
sub
sbb
cmpsl
fs
les
cld
fisttps
out
call
cmc
dec
int3
fbstp
mov
push
test
and
xchg
mov
leave
and
mov
incb
cli
movsl
push
add
test
xor
and
nop
or
dec
stos
clc
push
mov
mov
adc
ljmp
ret
push
mov
xchg
test
sub
xor
mov
pop
cmp
push
adcl
mov
dec
dec
sarb
mov
lods
ds
xor
andb
jg
mov
into
push
ljmp
pop
repz
jmp
or
mov
inc
test
insb
imul
daa
push
popa
jge
adc
mov
adc
jmp
gs
pop
mov
in
sub
push
ret
or
sub
add
stc
push
mov
adc
js
cmp
adc
push
aas
shrl
sbb
lahf
or
inc
popa
cmp
sub
rolb
xlat
test
or
xchg
and
fbstp
adc
repnz
sbb
push
repnz
repnz
jns
sbb
mov
dec
mov
mov
mov
inc
scas
sbb
mov
mov
add
into
sbb
cmpsl
add
pop
dec
lds
lret
pop
mov
scas
add
jge
push
in
jbe
jp
out
inc
aas
mov
jb
test
out
jecxz
das
adc
mov
inc
outsb
dec
lods
out
mov
shlb
sub
xchg
mov
push
dec
mov
in
leave
in
popa
push
ds
jecxz
jle
jo
adc
mov
cwtl
add
sbb
cmp
dec
cli
push
or
std
mov
push
xchg
test
out
inc
test
jle
mov
hlt
jns
in
ret
lea
or
adc
scas
insb
idivl
jbe
dec
dec
xchg
mov
cmpl
rcr
rorl
or
xchg
adc
or
stos
mov
pop
fisttpl
jl
dec
mov
sti
adc
pop
ret
cmc
or
mov
fdivr
push
sbbb
and
jbe
mov
jbe
cli
sti
mov
sbb
cmpsl
cld
cmp
cmp
mov
xchg
mull
cld
aas
gs
push
inc
cmp
ds
dec
sbbb
aas
cmp
stos
cmp
add
and
add
sub
test
fildl
cmc
mov
test
jnp
scas
ja
pop
push
fstps
jno
out
jmp
fs
mov
fs
and
push
rol
scas
fldt
push
jmp
jns
mov
jo
xor
adc
test
bound
mov
jb
fbstp
xchg
and
insl
mov
fdivs
out
xchg
push
xchg
pop
mov
arpl
and
in
arpl
xor
js
movsb
int3
int
je
js
mov
push
movsl
cmp
jo
mov
gs
insl
inc
xchg
shrb
std
add
aam
add
pop
mov
lret
and
jecxz
sub
inc
popa
fistpll
or
addr16
imul
stos
ja
push
pop
and
test
aaa
adc
loope
mov
jne
jo
jl
int3
stos
scas
cmp
cmp
fcomps
iret
sbb
xchg
jl
lods
push
add
inc
sbb
pop
sbb
adc
shl
mov
and
int
outsl
or
inc
dec
movsb
movsb
push
data16
and
cltd
mov
jb
repz
cmpsl
gs
adc
add
cmp
xlat
adcl
out
jne
push
sahf
aad
xlat
popf
or
cmpsb
sarl
es
xor
out
int
push
sarb
pop
or
insl
iret
xor
es
mov
in
cld
add
xor
mov
cmp
xchg
rcl
popa
out
jg
popa
sub
push
and
jno
cwtl
dec
test
push
outsl
cs
or
mov
ffree
sti
xor
imul
das
fnstsw
movsb
stos
vpackssdw
into
daa
xchg
pop
outsb
ljmp
jg
cmp
loope
push
jge
fisubl
ja
mov
loopne
sbb
mov
stos
push
in
pop
mov
or
inc
and
add
mov
adc
out
rcrl
in
movsb
jne
lods
fwait
or
fsubrl
dec
sbb
addl
imul
fcom
jg
add
subl
insb
xor
cmp
icebp
inc
mov
mov
pushf
pop
sbb
cwtl
push
xor
jb
fsubrs
add
dec
sub
fisubrs
sbb
sahf
inc
add
sahf
adc
es
mov
xorb
or
aam
scas
or
sub
inc
cld
jle
in
and
imul
fstpl
mov
cmp
pop
popa
cmp
jns
add
dec
test
pop
xor
stos
test
xchg
enter
or
push
adc
sub
jecxz
lods
lock
cltd
lock
scas
lock
inc
inc
add
push
sti
ret
inc
jns
mov
repnz
ss
repnz
cmp
rcll
loopne
jecxz
cmpb
sbb
in
stc
xchg
or
jb
ljmp
pop
xor
rcrb
cld
sbb
pop
sub
cmpb
popa
push
pop
nop
inc
fwait
lock
adc
mov
cs
popf
mov
mov
or
mov
lods
adc
and
pop
arpl
pusha
arpl
push
xchg
mov
adc
or
stos
sub
fidivrs
inc
pop
adc
fisubl
inc
adc
cmp
cwtl
jecxz
mov
sbb
and
in
stc
inc
out
mov
mov
aad
pop
add
add
in
ss
in
xchg
arpl
stos
mov
xchg
scas
out
xor
pop
inc
xchg
cmpsb
mov
insb
cmp
icebp
jge
jmp
mov
out
inc
stos
dec
adcl
insl
dec
daa
xor
setg
test
jno
mov
sti
mov
daa
scas
mov
loopne
cmpsl
dec
leave
fadds
shrl
shll
sub
mov
dec
jnp
in
push
mov
xchg
stc
push
ss
iret
push
dec
mov
and
cmpsb
nop
aad
and
inc
cmc
mov
xchg
inc
out
cmp
nop
sqrtps
pop
jo
insb
out
rcll
inc
cmc
sub
xchg
das
xchg
mov
iret
pop
clc
dec
addl
daa
push
dec
insl
iret
mov
clc
sbb
lock
jns
mov
jecxz
ret
pop
sub
pushf
pop
das
mov
jbe
js
fsubrs
loope
jl
pop
sub
icebp
aas
sbb
jne
sub
push
cmp
push
push
mov
mov
add
repz
push
in
lret
xchg
nop
das
pop
fs
mov
test
and
or
fwait
jb
cmp
aaa
fildll
mov
lds
pop
das
rcrb
dec
cmp
pushf
mov
mov
or
cmc
test
pop
xbegin
cmp
movsl
fmul
sbb
dec
add
pop
sahf
adc
push
sahf
dec
and
pop
push
rclb
push
scas
or
add
stos
std
adc
inc
sub
out
outsb
aam
and
adc
fildl
ret
jecxz
dec
add
jb
popf
pop
pop
sbb
sub
stos
jp
jge
and
pushf
in
pop
test
xchg
pop
mov
inc
cmpsb
inc
jecxz
jmp
jne
and
xchg
cmpsb
push
xlat
pop
pop
pusha
cmp
dec
stos
xchg
rorb
ss
lahf
mov
mov
or
pop
xor
cmpsb
jge
sbb
and
call
out
popf
lret
sbb
fwait
sbb
test
jbe
jecxz
push
mov
xor
mov
mov
data16
iret
mov
pop
jnp
jmp
dec
sbb
scas
xor
dec
test
aaa
insl
jne
cmp
mov
shll
mov
cmp
roll
cmp
lahf
pop
dec
shrb
aaa
push
aas
std
jle
sbbl
or
out
inc
jmp
mov
loop
inc
adc
notl
leave
imul
out
pop
addr16
mov
in
mov
mov
sub
mov
xchg
movsl
testl
pop
or
pop
mov
lea
test
mov
and
push
test
popf
or
or
js
js
scas
lahf
sbb
lcall
test
and
mov
std
push
lret
or
ss
jae,pn
cmpsb
cmpsb
aas
jp
push
das
lret
mov
sti
cmpsl
aam
jl
add
sub
std
cmpsb
cmc
mov
sub
dec
mov
push
inc
inc
mov
movsb
or
frstor
dec
test
xor
into
dec
loop
ficoml
pop
out
inc
das
push
arpl
cmp
xchg
test
movsb
cmp
mov
mov
add
add
sbb
iret
es
movsl
in
mov
addr16
push
and
or
adc
or
add
adc
ficompl
and
jl
ja
inc
jle
dec
inc
xorl
pop
icebp
mov
out
adc
mov
cwtl
gs
lahf
stos
lds
fisubl
xor
test
cmp
hlt
filds
clc
add
lcall
push
jne
jae
sbb
call
or
sub
push
sub
fcmove
mov
out
inc
stos
xor
test
pop
imul
dec
add
mov
test
cmc
mov
mov
in
out
or
or
adc
in
jbe
sub
sarb
test
or
mov
xchg
mov
lock
sub
ret
sbb
out
int
pop
sbb
inc
out
aam
lock
pop
pusha
subl
xchg
out
add
out
rcl
mov
std
push
push
add
add
mov
adc
rclb
adc
cmpsl
push
adc
xor
xor
fbld
int
add
cmp
fstpl
mov
and
clc
scas
repnz
push
or
stos
in
xlat
mov
sbb
sub
adc
sbb
jp
mov
stc
fucomip
push
test
mov
and
scas
add
comiss
jne
cltd
push
jmp
lods
int3
dec
jbe
xchg
xchg
rclb
int3
mov
shlb
cmp
xchg
fadd
test
push
imul
sub
and
xchg
xor
jo
pop
movsb
jg,pt
add
sbb
stc
test
fwait
jg
scas
mov
nop
xor
pop
lcall
push
xor
mov
daa
push
pop
adc
lock
mov
cmp
test
mov
outsb
in
repz
and
mov
pop
mov
add
call
mov
mov
mov
jb
and
lcall
imul
add
xor
imul
mul
popf
loopne
xchg
push
jl
push
sbb
arpl
mov
imul
mov
mov
arpl
dec
aam
dec
inc
push
into
xor
cs
negl
aas
sub
dec
cs
aaa
loope
into
inc
jbe
div
ja
xlat
mov
adc
mov
aas
jb
inc
lods
mov
jae
test
fnstcw
arpl
mov
sub
push
sar
call
pop
out
pop
push
fneni(8087
mov
mov
out
and
subb
mov
adc
fwait
mov
std
out
mov
test
repz
cmp
int
cmpsl
adc
jmp
jle
dec
scas
push
xor
push
outsl
bnd
pop
pop
xor
jmp
xlat
push
xchg
xlat
dec
lds
es
stos
mov
adc
sbb
lock
mov
lods
jns
jb
inc
sarl
lret
cmp
loopne
das
jecxz
int3
push
iret
lret
data16
jl
flds
lock
mov
and
jg
rcll
scas
xchg
add
pop
sub
pop
stos
ds
nop
loopne
fiadds
jo
fistpll
stos
add
fsub
mov
sub
cmc
out
mov
es
xor
push
movsb
lods
adc
mov
jbe
fidivrs
add
sbb
mov
mov
add
imul
enter
dec
pop
mov
je
insl
dec
cmpl
mov
jge
stos
or
jge
cmp
pop
popf
xor
arpl
xchg
push
push
xchg
xchg
push
fwait
jmp
mov
scas
fistl
xlat
mov
mov
addr16
sbb
xor
mov
testb
xchg
sbb
mov
movl
jno
xchg
loopne
jg
aaa
push
xchg
mov
and
xor
lods
jle
fstl
xchg
cwtl
int3
pop
mov
cmp
lods
pop
sbb
add
nop
ljmp
dec
inc
inc
into
jge
sahf
nop
jge
stc
scas
push
adc
leave
xchg
fcomp
bound
mov
call
or
loop
jl
dec
sub
push
sbb
fistps
bound
push
testl
insb
shrl
cmp
mov
jp
and
lret
jns
cmp
test
pop
sbb
cmp
jle
pushf
inc
loop
call
lods
add
leave
daa
xlat
mov
outsl
fists
rol
aad
push
and
out
roll
sbb
push
outsb
popa
xchg
ja
ret
imul
shll
int3
push
cltd
mov
lahf
arpl
cmp
xor
pop
enter
out
fmull
fiadds
outsl
pop
ja
dec
aad
test
xor
lret
shll
pop
sahf
and
adc
push
hlt
hlt
mov
xlat
mov
mov
sti
xchg
mov
andb
sub
int3
pmulhuw
adc
roll
push
frstor
lds
fnstsw
mov
and
adc
push
mov
adc
push
push
lret
inc
sbb
fdivs
stc
pop
push
jecxz
pop
test
aas
xor
inc
rorl
inc
jo
xchg
call
pop
push
push
enter
sbb
or
test
mov
scas
and
popf
jnp
pop
pop
insl
jno
hlt
cld
adc
jle
xor
data16
insl
aaa
cmpl
ljmp
add
adc
push
mov
ds
cmp
stos
cld
or
in
push
push
or
in
js
in
and
mov
mov
push
cmp
adc
and
push
imul
loop
inc
jl
sbb
sbb
adc
sub
xchg
xchg
ljmp
sbb
mov
mov
adc
pushf
call
sbb
repnz
out
xchg
lret
cs
sub
and
or
bound
rolb
cmpb
cli
cs
mov
push
mov
jbe
out
mov
das
into
fistps
insb
in
out
lahf
int
out
mov
in
pop
sub
lea
mov
jo
adc
enter
shlb
and
mov
incb
inc
rdpmc
xchg
and
adc
or
mov
nop
cmp
movsb
aam
adc
mov
jge
les
xchg
mov
lret
sbb
adc
addr16
rorl
jle
xchg
add
xchg
sub
lods
scas
dec
leave
pop
mov
sub
std
push
jnp
adc
movb
movsb
rol
in
push
inc
cmp
add
shrl
ja
inc
and
push
xchg
insl
fistpll
xchg
in
push
lret
sbb
pop
lcall
mov
shll
sarl
jmp
push
sub
mov
push
inc
xchg
jp
mov
or
aaa
aaa
rclb
jl
push
adc
mov
adc
notl
mov
imul
mov
mov
mov
movsb
popf
mov
pop
pop
jne
in
fimull
xor
stos
fstp
lcall
lea
mov
icebp
lds
rorl
hlt
inc
inc
xchg
mov
pop
add
xchg
xor
mov
out
test
add
divb
adc
jecxz
push
xlat
rcll
and
cwtl
xor
cli
inc
jnp
popf
es
and
pop
push
or
pop
andl
imul
xor
inc
lret
sub
xchg
push
pop
movsl
cmp
push
and
je
rclb
lock
xchg
ss
out
test
jns
adc
test
xchg
mov
cltd
lods
sbb
in
pop
add
je
and
hlt
sbb
push
popa
and
sub
lds
xor
nop
adc
dec
xchg
push
fsubrp
in
or
push
stc
repnz
in
ja
and
cmpsb
xorl
xchg
cli
leave
mov
mov
sub
std
es
lock
out
add
adc
scas
lds
adc
fcomi
fcoml
ss
jle
mov
cmp
fisubrs
add
roll
lods
xchg
mov
jnp
cmc
jg
jno
add
in
mov
jo
or
daa
pop
fnsave
out
das
push
leave
hlt
les
fadd
sarb
push
loop
mov
xor
and
popf
das
cmp
rcll
sub
xchg
jl
mov
icebp
xor
cmp
addr16
lret
adc
out
lret
xchg
imul
aad
push
add
loope
push
push
inc
arpl
mov
in
lds
xchg
mov
push
dec
es
mov
mov
dec
pop
mov
popa
arpl
pop
out
mov
rolb
mov
rclb
jnp
mov
pop
jbe
fwait
or
scas
fisttpl
bound
stc
push
sbb
pushf
jge
jecxz
mov
lods
ja
jb
ffree
int
icebp
lahf
pop
out
leave
inc
jg
negb
aas
je
mov
mov
xor
mov
jbe
cmpsb
and
loope
mov
int3
fs
sbb
dec
rolb
sar
stos
push
pop
push
add
and
jb
mov
aaa
insb
lods
cmp
mov
and
cmp
ret
cmp
dec
jno
out
mov
outsl
fucomi
sub
cmpsl
xchg
inc
jge
ret
jmp
cwtl
arpl
or
fs
jae
test
cltd
xor
ja
mov
sub
mov
movsl
mov
cmp
dec
xor
out
fistps
popf
mov
hlt
addr16
sub
mov
loopne
lret
clc
pusha
sub
dec
xchg
xchg
xchg
add
lods
int
pop
push
push
inc
inc
outsl
movsb
dec
mov
inc
mov
lret
jb
pop
inc
xorl
aaa
fwait
testl
dec
js
pop
jbe
incb
hlt
sahf
test
outsb
cmpsl
out
in
pop
jbe
aad
rclb
adc
sti
jmp
in
pop
sbb
sbb
adc
push
or
jmp
pop
xor
lret
scas
fwait
popl
lcall
push
negl
lock
xchg
and
jae
sar
in
loope
nopl
and
xchg
out
fidivl
fildl
mov
mov
int3
test
jae
outsl
outsl
fxch
push
int
psubusw
dec
stos
or
xchg
out
add
xchg
ljmp
rcr
gs
sbb
add
std
loope
daa
loopne
cmp
mov
mov
sub
lods
xchg
iret
scas
and
mov
arpl
loope
je
mov
jbe
mov
or
sbb
dec
xor
call
cmp
test
scas
mov
mov
cmpsb
add
mov
into
aaa
imul
out
or
push
pop
fdivrl
nop
xor
test
out
cld
xor
movsl
pop
push
mov
imul
sbb
shlb
mov
mov
dec
mov
aas
stos
rclb
jae
test
add
std
stc
add
aad
push
jae
jp
in
push
cmp
scas
dec
jg,pn
fs
cmp
aam
jle
ret
mov
daa
mov
sbb
mov
xlat
jne
leave
jge
push
fstp
mov
mov
mov
xor
leave
xchg
xorb
aas
inc
mov
scas
test
int
in
add
pop
push
daa
adc
ja
loopne
and
adc
sub
nop
mov
movsb
pop
fs
jle
jne
fwait
out
adc
push
in
xor
das
add
push
xor
adcb
mov
or
or
cli
rcr
call
inc
lods
inc
in
cs
std
sub
cmp
insl
imul
outsb
movl
mov
cmp
js
nop
cmp
stos
xlat
das
push
imul
sbb
popa
out
and
shll
or
std
mov
lret
jbe
inc
out
repnz
and
push
lock
arpl
or
inc
lahf
repnz
outsl
lret
xchg
daa
xchg
cld
stos
add
adc
xor
test
adc
out
scas
dec
add
or
imul
call
mov
out
es
jno
data16
ljmp
dec
add
pop
fst
lock
dec
and
stos
xlat
add
pop
in
js
jae
daa
fldt
fcompl
addr16
xlat
lds
aam
scas
sbb
pop
mov
cmp
pop
mov
push
dec
insl
adc
add
rclb
and
fwait
shlb
fisttpll
ror
andl
mov
iret
into
mov
mov
jno
jg
das
popf
lock
or
movsl
stos
es
and
int3
dec
loop
or
int
jp
pop
call
xchg
lds
das
sbb
cwtl
jns
out
sub
cmpxchg
pop
adc
push
pop
cltd
jnp
push
popf
adc
push
call
arpl
out
push
into
xor
push
test
mov
jb
je
xor
mov
adc
push
das
leave
adc
movsl
adc
in
sbb
stc
mov
mov
std
std
cmp
popa
pop
cmc
push
jp
push
xor
dec
nop
jne
pop
add
fwait
push
aaa
in
push
mov
leave
call
fwait
sbb
jne
aas
xchg
dec
shll
pop
cmpsb
lock
hlt
adc
adc
jg
xor
add
ljmp
xchg
sub
shll
cltd
mov
add
clc
pop
pusha
or
dec
das
int
fdivr
pop
lods
xchg
cmp
int
leave
out
rolb
rcr
dec
mov
pusha
xchg
imul
adc
mov
push
stos
adc
sbbb
push
xor
jb
mov
pop
mov
or
call
je
push
push
in
out
sbb
fcomp
pop
out
jbe
out
mov
mov
popf
push
and
or
and
lods
out
into
jno
inc
jbe
mov
sbb
int
jle
cs
xor
notb
cmpsb
and
jne
sbb
push
adc
in
adc
call
mov
icebp
jne
push
push
or
sahf
jo
pusha
mov
sbb
sbb
daa
xor
pop
pusha
sbb
jge
and
push
push
xchg
enter
pop
cltd
lods
push
fcmovnb
out
fsubp
pushf
dec
mov
add
in
push
lret
mov
aad
lahf
xchg
xchg
add
aaa
inc
mov
cli
push
push
cmpsb
scas
cltd
inc
xchg
sbb
pop
add
jns
mov
insl
inc
inc
sub
inc
sub
xchg
sarb
mov
lahf
in
inc
dec
rcrb
dec
mov
int3
dec
push
mov
je
repnz
movsl
xor
pop
lahf
repz
mov
jno
and
sbbl
shrb
vmread
test
outsb
mov
push
sbb
inc
imul
mov
sbb
aad
add
mov
mov
mov
sbb
jg
or
mov
pop
leave
int
dec
push
cmp
fdivr
mov
inc
push
mov
and
push
aam
mov
mov
cli
fisubrs
jns
xchg
dec
loope
out
std
dec
fbld
xorb
lea
cmp
mov
jmp
rep
sub
andl
cltd
out
inc
orb
addb
mov
pusha
sahf
mov
ja
mov
pop
loope
mov
mov
mov
into
push
std
xchg
stos
insb
enter
adc
rolb
sub
insb
pop
xchg
sub
call
push
push
pushf
sub
lods
pop
dec
inc
sub
fwait
xchg
mov
sbb
aam
test
push
test
jecxz
loope
enter
or
js
add
arpl
idivl
icebp
lods
jbe
xchg
lcall
call
sti
mov
or
jnp
cld
sahf
dec
cs
sbb
stc
push
xor
in
cmpsb
xchg
pop
push
mov
iret
fmuls
cmp
repnz
push
mov
push
sbb
xchg
movsl
or
clc
or
dec
xor
repnz
cmp
mov
mov
pop
cmp
jle
in
lret
pop
aaa
repnz
pop
dec
int3
mov
pushf
rcrl
mov
cwtl
fidivrs
fdivrs
push
inc
outsb
fidivrl
pop
pushw
and
flds
scas
or
repz
pop
mov
orb
imul
aad
push
sub
push
arpl
in
hlt
xorl
je
xor
dec
fnstsw
mov
and
mov
dec
lds
jp
outsl
imul
lock
xor
sbb
mov
insb
cmpb
cwtl
inc
sar
jo
pop
mov
call
sub
mov
sbbb
xchg
cmp
sti
push
and
sub
cs
mov
bound
jmp
push
mov
push
lods
xchg
xor
and
imul
mov
dec
movsl
and
push
addr16
mov
clc
iret
mov
es
inc
push
sbb
cmp
xchg
insl
pop
fildl
fidivrs
neg
outsl
xor
xchg
sbb
cmpsb
int
xlat
push
mov
fildl
add
adc
lahf
xor
cltd
add
push
leave
sbb
push
jl
aaa
iret
ja
ss
and
ja
jb
push
hlt
leave
push
inc
pop
cltd
out
hlt
pop
data16
adc
fdivl
dec
jecxz
inc
std
push
frstor
dec
dec
jns
leave
mov
fildll
ljmp
or
xchg
loop
sub
mov
test
sub
fsub
loope
add
add
lds
xchg
sti
pusha
scas
aaa
sub
addr16
daa
sub
cmpsl
or
adc
mov
or
xchg
lods
or
test
pusha
mov
adc
scas
cs
adc
cmpsb
lods
jne
sbb
insl
cs
sbb
inc
icebp
mov
es
dec
repz
out
dec
pusha
cmp
loope
xchg
out
fdivr
jle
sbb
and
dec
mov
outsl
decb
sbbl
or
xchg
xchg
fdivs
jge
dec
cmpsb
mov
icebp
xchg
fwait
scas
arpl
xor
push
shll
jmp
xchg
fistps
push
test
fnstenv
push
fnsave
sub
mov
push
out
sub
outsl
lret
jge
mov
xchg
mov
imull
lret
mov
push
leave
and
mov
movsb
das
call
pop
outsl
mov
add
cwtd
mov
loope
inc
inc
repz
popa
les
cmp
xor
push
loop
jge
roll
aad
test
mov
mov
out
in
gs
add
inc
push
mov
sbb
lcall
fldcw
int3
pop
or
add
jecxz
push
dec
mov
pusha
std
inc
inc
or
sahf
lods
fimull
pop
aas
das
cmc
scas
je
arpl
pop
pop
fnsave
push
push
ljmp
mov
or
inc
dec
das
mov
aam
mov
cmp
cmp
std
addb
dec
hlt
bnd
mov
imul
aam
mov
int
addb
fisubrl
inc
push
xchg
fyl2xp1
lds
pop
jae
adc
loop
outsl
scas
sub
scas
outsb
je
xchg
jecxz
jle
inc
movsb
xor
push
dec
es
pop
jmp
xorb
jl
loope
outsb
mov
cmp
popa
cld
pop
inc
in
in
xlat
aaa
jge
xlat
jmp
test
lahf
stos
mov
popa
sbb
pushf
cmp
lock
xchg
sbb
fidivrs
pop
xor
and
cmc
jg
cmp
pop
mov
mov
das
sub
outsl
outsb
xor
stc
adc
test
movd
adc
mov
lret
dec
jmp
mov
sub
add
jg
xor
ljmp
fdivp
inc
clc
xor
or
xchg
pop
mov
cmp
xor
mov
leave
shrl
pushf
insl
filds
and
fs
ret
cwtl
mov
push
push
pop
cmp
fwait
in
daa
pop
mov
call
mov
mov
cmp
mov
movsl
mov
push
iret
icebp
in
inc
imul
mov
leave
inc
loopne
or
adc
pop
fsts
xorl
in
jecxz
xchg
sub
xor
outsb
sub
lock
sbb
daa
mov
pop
sti
or
cmpsb
mov
push
ret
mov
loopne
xchg
fs
sarl
rcll
jle
mov
cmp
sub
cmp
dec
out
sbb
and
aad
mov
pop
pop
mov
aam
cmc
push
out
cld
mov
or
outsb
xchg
add
pushf
sbb
or
xor
ret
sub
xor
and
dec
cmp
stc
jns
jmp
push
xchg
loope
mov
popf
aas
jo
pop
adc
xchg
dec
ljmp
pusha
aam
sbb
mov
ret
inc
xchg
mov
inc
test
fimull
dec
fisttpll
mov
mov
xor
cmp
inc
xor
lret
pop
insl
cmpl
cmc
std
out
dec
call
sti
push
sub
dec
xchg
pusha
fnstenv
in
mov
pusha
mov
dec
add
dec
movsb
fstps
or
loope
pop
in
xchg
fistl
or
dec
scas
mov
aam
iret
adc
es
dec
int
fwait
push
xchg
test
hlt
popf
lret
inc
inc
test
cvtps2pd
jl
insb
test
mov
xchg
jecxz
mov
lret
inc
inc
push
inc
xor
divb
in
jno
lock
jne
add
ss
mov
mov
adc
cmp
ret
push
movsl
cmp
test
pop
push
push
cli
out
sub
sub
fs
out
repnz
pop
in
inc
push
cmp
xchg
outsl
out
jns
ljmp
test
and
fsubrl
sbb
mov
jnp
push
pop
imul
frstor
scas
jge
ss
and
dec
loopne
xchg
cltd
fnstsw
sub
jge
xor
jge
mov
icebp
fsubrl
stos
fwait
adc
popf
xor
imulb
push
push
adc
outsl
push
popf
outsl
out
inc
arpl
xchg
iret
clc
jg
mov
int3
shlb
incb
jbe
daa
divb
mov
lcall
cli
jbe
scas
fidivs
inc
fisttpl
dec
pop
push
inc
mov
push
jnp
gs
or
mov
in
roll
fldl
mov
add
pop
in
sbb
cs
fnstcw
fstpt
pop
mov
shr
jecxz
stos
xchg
mov
add
std
xchg
xchg
xor
repz
test
imul
push
add
cltd
js
cmc
fimuls
in
inc
jnp
outsb
enter
es
cmpsl
rorb
jle
stos
sub
mov
arpl
insl
nop
cwtl
nop
add
imul
xchg
sub
orl
mov
out
xlat
sbb
or
nop
add
or
push
adc
fbstp
jo
in
add
mov
sbb
mov
cwtl
jns
mov
test
fwait
imul
jae
sub
fadds
jno
add
xor
mov
je
jp
xor
and
add
mov
xchg
mov
jmp
fcoms
insl
lcall
ja
negb
popa
xchg
push
jae
pusha
mov
mov
mov
pop
cmc
mov
out
jmp
push
xor
leave
fwait
and
pop
addr16
cmp
mov
inc
shlb
adc
ljmp
fbld
adc
sub
mov
and
xor
inc
and
fldenv
and
loope
or
pop
cwtl
xchg
int3
xchg
pop
push
jbe
jne
int
repz
mov
aas
lods
lcall
dec
jo
fstps
dec
adcb
mov
stc
shll
push
in
jb
jle
xor
inc
scas
popa
scas
shl
mov
test
lods
mov
cmp
adc
sbb
inc
daa
insb
jb
xchg
bound
jl
sbb
cmp
mov
pop
inc
das
stc
sub
in
rcll
jne
and
xchg
outsb
jbe
add
mov
cmp
out
bound
sub
cmp
lods
out
iret
xor
or
cmp
in
mov
loope
cmc
xchg
cmc
add
int
in
xchg
cltd
pop
sub
xchg
xor
mov
scas
cltd
lock
les
push
in
loopne
or
sbb
cmc
push
jge
inc
jae
pop
sub
add
lods
loop
xchg
lds
jo
sub
bound
and
call
add
cmp
jno
jle
call
mov
fyl2xp1
cs
or
fcom
jp
adc
jbe
aas
sbb
mov
xchg
clc
and
xchg
mov
test
push
jbe
xchg
cli
das
cmp
push
push
popf
mov
scas
int3
lret
xlat
pop
mov
mov
xchg
outsl
hlt
loopne
test
cli
out
adc
fdivp
pop
lahf
addb
mov
cltd
adc
je
and
mov
jge
sub
and
inc
fwait
sahf
xorl
rcl
inc
xor
or
movsl
adc
dec
push
movsb
lret
xchg
les
push
push
sub
mov
sti
mov
ljmpw
mov
fisubl
cmp
shll
das
or
test
out
sub
and
aad
mov
arpl
jo
pop
dec
push
test
into
mov
iret
inc
adc
outsb
pop
add
daa
xchg
shll
call
inc
xchg
add
xchg
push
lock
out
cmp
nop
test
out
jnp
dec
cmp
cmp
mov
push
mov
nop
insb
mov
add
movsb
popa
in
pusha
mov
jnp
cmovle
cltd
testl
stos
sub
cmp
fnstenv
add
fcoml
outsb
push
xor
fstpl
jl
shll
pop
jb
out
call
and
ja
fildl
sub
insb
inc
ja
jp
inc
out
sub
sub
sbb
mov
sub
cld
out
xchg
mov
mov
cli
pop
mov
pop
addr16
pop
bound
jb
fisubl
loope
and
push
and
mov
sbb
int3
insl
pop
movsl
and
mov
xchg
mov
clc
inc
lret
and
jmp
or
jne
mov
inc
inc
cmp
dec
das
les
imul
dec
push
or
gs
repnz
es
cmc
push
mov
jbe
push
fdivl
lret
mov
cmp
ljmp
and
pusha
xchg
sbb
fnstcw
push
jmp
lods
xor
mov
arpl
repnz
fistpll
pop
stos
jmp
mov
insb
ficomps
popf
test
or
cmpsb
push
or
sub
push
and
ds
dec
imul
aam
int3
cmc
test
andb
pop
rclb
jl
in
xchg
pop
mov
push
jl
rcrb
fcoms
push
xchg
dec
out
mov
jne
push
scas
loopne
push
push
xor
cmp
mov
mov
push
in
cmp
movsl
xor
jmp
and
lods
ja
les
xchg
add
mov
mov
out
fsin
insb
es
and
sub
pop
ret
adc
mov
fnstsw
mov
shlb
in
mov
mov
cmp
stc
push
mov
sub
daa
ja
in
clc
xchg
jg
or
fstl
mov
xchg
shlb
xchg
imul
adc
leave
ss
enter
cs
es
dec
or
leave
cmc
xchg
arpl
xchg
fisubs
push
mov
or
adc
andl
lea
push
dec
sub
pop
out
adc
les
jo
data16
nop
cld
sbb
pop
pop
mov
out
adc
aaa
push
call
in
adc
adc
sbb
pop
xchg
out
ljmp
hlt
test
push
xchg
xor
mov
push
push
cmp
adc
shll
sbb
pop
ficompl
iret
dec
xchg
xchg
ret
sub
loope
push
jb
cltd
xchg
ds
jl
shlb
mov
xchg
adc
es
cmp
xor
stos
or
or
xchg
pop
mov
je
pop
adc
dec
jl
push
sti
push
jmp
lock
out
jb
and
pop
cmp
xchg
mov
dec
aas
mov
fisubs
jae
and
xchg
lcall
rclb
lret
loopne,pt
xchg
in
inc
data16
lds
sbb
lock
xchg
stos
rol
add
aas
jecxz
mov
dec
jge
aad
mov
daa
pop
mov
push
inc
pushf
or
push
jb
rolb
stos
cmc
sub
inc
test
xchg
leave
inc
sbb
cmp
adcl
mov
lods
aad
test
push
std
sti
jl
out
ljmp
push
sbb
out
pop
mov
xchg
xchg
sbb
or
ja
sbb
sbb
cld
sahf
ret
and
addr16
xchg
push
and
ret
fs
mov
add
pop
mov
inc
cmp
aas
add
js
xchg
iret
adc
fwait
push
test
sub
shll
xchg
jmp
rcrb
jmp
into
lret
mov
clc
add
loopne
fiaddl
nop
int3
jo
test
and
xor
mov
mov
movsb
sub
xchg
dec
push
jnp
xchg
shr
and
jnp
ret
sub
ret
xor
lods
dec
dec
outsb
pop
loopne
pop
lea
aad
push
push
pop
sarb
lea
adc
js
sbbb
cmpb
mov
jne
ret
addb
clc
cs
mov
or
sub
lds
or
and
inc
or
sub
daa
arpl
and
scas
insl
jp
and
mov
int3
dec
adc
data16
hlt
lods
jb
cmp
lods
or
xorl
pop
pushf
daa
aaa
push
adc
pop
pop
jno
mov
cmp
es
or
pop
jno
sti
mov
cmp
ret
dec
add
jb
inc
popf
xchg
test
push
cmp
inc
aaa
insl
push
lods
mov
cmc
add
or
push
lahf
in
decl
jno
mov
mov
or
xor
mov
lret
xchg
loopne
scas
xor
mov
jg
out
repnz
mov
incb
jg
pop
pop
iret
cmp
icebp
pop
adc
ljmp
jae
hlt
push
and
lahf
pop
out
or
fcmovu
scas
and
clc
clc
dec
inc
sub
cmp
in
push
insb
push
pushf
push
aam
mov
arpl
les
xor
nop
stc
jne
jp
xchg
mov
cmp
or
and
jge
mull
push
cmp
mov
inc
out
sub
mov
ljmp
xchg
scas
or
push
sahf
jns
mov
inc
mov
push
pop
ja
mov
add
repz
sbb
jnp
mov
inc
sbb
push
popf
dec
cli
fistpll
pushf
add
xchg
mov
mov
outsb
sbb
lretw
enter
mov
mov
xchg
je
stc
fcomps
loope
fs
xchg
cwtl
mov
inc
cmp
pop
fistpl
xchg
test
ljmp
jp
xchg
pushf
cmp
nop
lcall
pxor
jge
out
fstl
or
add
sbb
loope
dec
aad
cmpsb
or
sbb
testb
and
jge
iret
or
add
cmp
repnz
filds
sbb
mov
cmp
pop
ficoml
in
xchg
dec
mov
dec
test
popl
sbb
pop
sub
cli
into
xchg
dec
imul
mov
jg
mov
adc
scas
jnp
cmpsb
jae
jne
push
sahf
jns
negl
jno
jecxz
iret
cs
pop
mov
cmpsb
test
pop
js
xor
fisubs
mov
out
cwtl
gs
xchg
mov
fwait
sbb
pusha
mov
std
in
mov
lods
loop
cmp
xor
loopne
mov
xchg
repnz
rcrl
data16
test
pop
jne
fstpl
jp
test
push
jne
pop
out
ret
sub
mov
movsl
mov
jno
sbb
test
mov
mov
push
jne
push
nop
or
into
rcrb
ljmp
fmuls
cmc
push
adc
out
mov
pop
std
lods
mov
push
mov
adc
fsts
int3
sub
dec
mov
xor
jae
in
xchg
aad
aas
popa
push
mov
push
stos
stc
pop
loop
jno
mov
loope,pt
sub
std
ljmp
lods
cltd
add
jno
push
lret
and
outsl
sbb
pop
add
jb
mov
lea
and
or
fs
add
aaa
pusha
mov
ja
mov
test
js
xchg
sub
ds
ss
jnp
cmp
push
adc
jg
shlb
push
sarb
mov
bound
jne
in
mov
sub
push
or
jl
mov
ss
xchg
inc
dec
ficoml
sbb
dec
push
and
pop
mov
lcall
sarb
jbe
rol
cwtl
sub
loope
decl
lahf
jg
sti
push
ja
popl
adc
mov
xor
pop
stos
add
add
leave
arpl
xchg
ljmp
icebp
cs
mov
stos
inc
mov
jno
rorb
rcrb
inc
push
stc
xorl
mov
xchg
mov
dec
movsb
das
ljmp
out
sub
pop
pop
cmp
in
xor
inc
sbb
adc
add
and
xchg
lcall
fsubl
ret
stos
cs
mov
mov
lods
arpl
arpl
mov
add
es
cs
cmp
xor
subl
popa
mov
in
lods
push
sub
xchg
adc
cmpsl
daa
mov
repz
sbb
in
cltd
adc
mov
mov
add
cmp
dec
clc
fsub
cmp
jae
mov
adc
icebp
insb
pop
jns
pop
sub
ret
push
flds
and
les
add
stc
lock
addl
or
sahf
add
stos
mov
xor
fwait
mov
and
pop
xchg
sarb
loope
fnstenv
lret
jecxz
sbb
icebp
mov
push
push
test
or
daa
adc
ret
lea
sbb
subl
xchg
inc
ret
iret
popa
faddl
fiadds
test
push
push
sbbb
sbb
inc
or
sbb
sub
push
stos
mov
std
add
stos
xchg
fucom
lea
cmpsl
leave
sub
movsl
loop
xor
enter
stc
dec
leave
clc
jmp
jae
mov
dec
repz
pop
xchg
mov
ror
xchg
aad
fs
inc
and
push
std
test
dec
mov
fwait
mov
inc
stos
inc
dec
cmc
mov
xor
inc
stos
jbe
int3
repz
lea
in
or
int
sbbb
outsb
stos
shrl
mov
cwtl
sub
push
or
pop
addb
mov
icebp
xchg
ret
outsb
mov
shrb
and
cmp
jnp
xorl
rol
jnp
cmp
or
or
jge
add
xor
jl
push
sbb
test
pushf
pop
sbb
shr
inc
mov
gs
add
xor
push
pop
add
cmpsl
sub
push
nop
or
jbe
pop
iret
sub
cmp
inc
aam
adc
and
icebp
sub
mov
sbb
stos
aas
pop
pop
dec
movsb
je
jp
fdivrs
sbb
gs
jp
icebp
xor
scas
cmp
sub
cmp
in
mov
adc
movsl
mov
std
arpl
cmpsl
xor
jecxz
popf
pop
jbe
outsb
movsl
jecxz
call
fiaddl
pop
int3
cmpsl
jmp
sbb
repnz
pop
rcr
pop
inc
jo
mov
add
cmc
mov
inc
iret
shll
in
pop
sbb
scas
cmp
aas
jl
inc
subb
call
cltd
mov
popa
test
lcall
adc
cmp
subl
jmp
push
aas
mov
add
in
ficomps
sub
fwait
dec
cmpsb
or
mov
jmp
mov
push
add
dec
xchg
inc
cmc
out
pop
fisubl
mov
mov
out
mov
in
push
in
sub
bound
insl
inc
loope
filds
outsl
mov
jne
out
pop
cmp
jle
pop
and
fistpll
rcrb
dec
push
lcall
insb
xor
mov
int3
mov
pop
cli
test
mov
fdivl
mull
js
push
and
aam
or
mov
dec
test
dec
xor
dec
jl
inc
jno
jl
insl
popf
mov
xchg
scas
lret
pop
adc
repnz
adc
shl
out
aam
cs
adc
subl
adc
cmpsl
xor
jecxz
lock
adc
inc
jg
xchg
xchg
js
test
aaa
inc
aas
in
sbb
leave
out
and
jne
inc
stos
rcll
inc
pop
hlt
pop
mov
mov
lahf
and
popf
insl
sub
push
fisubs
sbb
loopne
adc
fstpl
scas
and
ja
and
shlb
les
xor
cltd
icebp
jge
jl
xchg
mulb
in
in
mov
or
sbbb
stos
sar
in
in
xor
cmpsl
int
add
cltd
pop
jmp
add
fwait
jp
lock
in
jmp
cld
int3
rol
out
testb
in
and
adc
movl
lret
mull
xor
lods
or
in
jns
jp
insl
jb
dec
xchg
adc
inc
dec
imull
icebp
mov
jmp
mov
or
divl
enter
leave
mov
mov
stc
je
test
loope
in
popf
jmp
inc
into
clc
mov
add
sbb
fidivs
out
pop
cmp
outsl
shll
mov
cmp
inc
and
cld
sub
in
nop
outsb
test
lods
pop
sbb
jns
inc
cmp
psubb
inc
xchg
dec
lods
cmpsb
lock
mov
rorl
inc
fisubrl
jae
js
and
dec
rorb
inc
mov
icebp
andb
xchg
loopne
jns
loop
mov
mov
leave
and
dec
fcmovnu
int3
not
pusha
add
sbb
outsb
mov
mov
dec
sub
shrl
xchg
pop
arpl
and
cmc
iret
xor
push
js
and
addr16
pop
icebp
push
dec
adc
jmp
xor
in
xor
insb
test
cmp
shl
sbb
insl
pop
push
clc
nop
cltd
inc
mov
and
mov
mov
add
mov
dec
xchg
aaa
mov
xorl
popf
enter
pop
mov
rcll
jge
dec
dec
and
adc
rorb
mov
pop
push
xor
and
inc
popa
xchg
call
mov
push
das
data16
mov
inc
inc
ret
arpl
dec
stc
cmp
mov
push
movsl
cmpsb
cmp
stc
loop
iret
mov
lcall
lahf
inc
xchg
arpl
in
mov
sub
out
push
mov
clc
out
sbb
in
shlb
stos
loop
cmpsl
inc
loop
cmp
or
ss
lock
pop
pop
popa
sub
adc
mov
mov
repnz
insb
sbb
sahf
decl
test
cltd
fs
and
fistpl
sbb
add
and
dec
adc
sbb
mov
lret
into
inc
in
sar
insb
fwait
pusha
and
sbb
mov
xchg
xor
cmp
inc
add
mov
mov
int3
ja
sti
in
sbb
xor
cmpsb
test
jmp
cmp
inc
mov
dec
mov
or
push
sbb
bound
pop
cmpsb
lret
pusha
jmp
mov
pop
lds
fs
fwait
xchg
jo
jle
jae
ss
jg
pop
xor
jns
or
fcompl
addl
mov
jg
pop
mov
test
cmp
out
lret
cmpb
aaa
dec
jae
fwait
mov
push
pop
push
add
xchg
mov
aam
xor
push
push
jmp
cmp
mov
ds
fldenv
mov
mov
add
bound
lds
aaa
sbb
xor
adc
inc
test
or
xchg
push
notl
insb
xor
sbb
fcoms
mov
xchg
mov
push
xlat
mov
fwait
jmp
imul
add
test
sarl
mov
sarb
imul
sbb
enter
xlat
das
inc
fidivl
inc
insl
pop
xorb
pop
sahf
and
stc
sub
xor
mov
pop
and
rolb
or
mov
cltd
repz
cmpl
mov
mov
xchg
inc
and
js
cld
sub
lds
mov
sub
ds
rclb
enter
inc
pop
in
jno
xchg
out
pop
out
push
pop
push
scas
mov
decl
mov
sbb
xorl
cld
push
or
jl
cs
es
dec
arpl
data16
xor
cs
mov
xchg
bound
stos
addr16
enter
sub
addb
xchg
or
jle
add
testl
mov
jle
xor
add
cli
sti
jo
mov
movsb
imul
xchg
mov
xchg
jmp
lret
repnz
shlb
jb
lahf
js
mov
test
bswap
aad
ja
xor
inc
and
xor
pop
mov
int
xlat
inc
mov
mov
mov
mov
pushf
lods
aam
cli
mov
pushf
nop
mov
pop
lods
and
dec
xor
push
xchg
neg
fdiv
pop
jle
mov
idiv
mov
mov
jecxz
mov
dec
inc
ss
xor
sbb
out
mov
xchg
sbbl
test
ret
mov
cmp
shl
xor
cmp
jno
mov
ret
pusha
inc
cs
sbb
cmp
notb
fldt
xor
repz
imul
cwtl
or
orl
call
outsb
ret
and
movsb
xchg
dec
pop
out
mov
cmp
cli
sub
dec
scas
ds
adc
out
imulb
test
daa
adc
icebp
jo
call
dec
popa
inc
fwait
push
ljmp
in
fisubrs
imul
loop
dec
xchg
sub
sahf
imul
jb
xor
in
mov
fbstp
mov
adc
insl
sub
fwait
and
and
mov
lea
dec
fistl
push
ljmp
dec
shrb
jmp
pop
ds
pop
push
adc
int3
dec
hlt
or
mov
pushf
gs
jnp
mov
daa
xor
or
fidivs
xchg
lds
mov
or
loopne
and
shl
shll
mov
mov
aam
dec
and
add
push
aas
mov
jnp
loop
pusha
dec
and
mov
mov
es
aad
rcrb
stc
push
cltd
inc
ja
mov
mov
jae
addr16
out
in
xlat
adc
jnp
stos
mov
mov
mov
arpl
arpl
daa
jbe
xor
sbb
add
add
sub
jp
insl
lret
repz
test
and
jl
stc
xor
push
jne
les
shrb
fsubrs
fsubrs
testb
out
fwait
mov
jge
mov
cmp
jnp
sbb
inc
aam
sub
mov
fs
and
cmp
jecxz
cmp
jg
push
shll
es
jecxz
cmc
dec
sti
add
cs
inc
lret
das
fistpll
mov
mov
cmp
lahf
mov
push
jb
fcoms
fisubrs
cs
push
mov
sbbb
adc
pop
pop
mov
rclb
ds
ret
jge
cld
mov
pushf
sbb
lock
sbb
fs
enter
pop
mov
into
add
ficoml
push
std
xchg
sub
pop
pop
mulb
ret
dec
add
xor
fldl
jg
push
mov
push
xor
adc
xchg
out
data16
scas
inc
out
outsl
add
cmpsl
cmp
popa
adc
add
mov
adc
sub
jno
std
mov
mov
movb
xchg
pop
mov
hlt
sbb
adcl
cmpsl
cld
ljmp
mov
and
stc
ret
push
mov
movsl
fwait
jmp
inc
mov
in
in
mov
insb
xor
ss
adc
add
stos
adc
adc
sub
cmpsl
fs
pop
std
ljmp
pcmpeqw
xor
shr
pop
xor
add
push
fildl
out
not
rcr
cwtl
lods
outsl
jno
daa
fidivl
arpl
jecxz
test
jecxz
xchg
pop
scas
loopne
stos
inc
ror
add
pop
mov
ss
adc
fwait
jp
fs
fildll
fwait
mov
hlt
push
js
sub
pop
lcall
lods
inc
jno
call
aad
push
cmp
push
daa
ficoms
lea
jnp
xor
ds
bnd
inc
cwtl
popa
bound
sbb
insb
fsub
push
ret
jg
push
lods
jns
aaa
or
inc
ret
daa
inc
xchg
mov
mov
xor
and
xor
pop
pop
outsb
hlt
push
scas
mov
ficoms
mov
and
out
in
and
movsbl
dec
mov
jno
sbb
push
int
mov
inc
sbb
test
pop
cmp
outsl
sahf
insl
scas
loopne
dec
lods
push
imul
fs
or
push
test
fsubs
jbe
imulb
in
je
or
test
aaa
insb
sbb
mov
add
pop
mov
fnstenv
or
sti
pop
lock
jne
or
aam
std
je
std
mov
lret
push
cmp
and
imul
cwtl
pushf
adc
sub
xchg
out
jge
cmp
push
and
xor
or
mov
xchg
cmp
mov
imul
sbbb
jmp
and
adc
into
lahf
dec
andb
in
jbe
cs
mov
cmp
aaa
enter
cmc
repnz
pop
xchg
mov
out
push
xchg
out
aas
ret
mov
jns
movsb
out
push
out
cmp
js,pt
test
cmc
add
xor
mov
sahf
outsb
and
je
mov
dec
pusha
xchg
in
xchg
adc
pop
add
test
insb
ret
jge
fistpl
mov
cli
cmp
dec
mov
mov
negb
imul
add
int
push
aaa
cmp
mov
lock
mov
mov
xchg
sbb
fs
je
jo
xchg
roll
and
jns
mov
lock
rcll
and
jp
fdivs
lretw
and
xor
jbe
fbstp
xlat
xor
push
mov
dec
loop
xchg
out
bound
out
enter
and
negl
aaa
pop
in
jbe
pushf
pop
iret
insl
xor
mov
popa
adc
xor
add
insl
add
pop
or
jnp
jmp
or
xor
ss
mov
jo
cmp
jmp
insb
fdivrp
add
inc
jnp
sbb
adcl
xor
outsl
push
xchg
mov
pop
push
cmp
pop
xor
clc
sbbl
mov
dec
cwtl
sti
aam
pushf
js
xchg
or
clc
movlps
jecxz
push
daa
lahf
hlt
push
xlat
dec
xlat
jbe
gs
scas
mov
out
xor
cwtl
mov
lcall
xchg
in
push
div
jl
inc
sbb
or
mov
inc
adc
lods
test
fcomps
icebp
inc
fwait
and
push
jb
add
call
cmp
sbb
gs
pusha
mov
fld
in
push
sar
pop
ljmp
insl
push
setnp
mov
pop
cmp
out
loopne
movsl
mov
cmp
sti
push
adc
fldl
push
movsb
mov
loop
sub
jecxz
enter
adc
add
xchg
jg
imul
mov
add
sub
gs
stos
les
cmp
stos
rorb
pop
sbb
mov
mov
iret
nop
mov
sbb
or
out
addl
push
imul
testl
dec
push
popf
test
sti
and
sub
in
in
cmpsl
xor
pop
notb
jnp
ja
push
mov
pop
pop
adc
dec
adc
lea
mov
inc
or
xchg
xchg
pop
xlat
cmp
mov
mov
mov
add
jp
add
enter
pop
cld
icebp
cmp
mov
mov
mov
xor
mov
aaa
jns
aad
mov
cmc
notl
int
jb
xchg
xlat
mov
inc
jns
and
ss
les
jp
in
push
dec
jnp
clc
stos
xor
inc
inc
jmp
dec
jp
push
insl
mov
mov
jp
add
gs
jns
push
jbe
dec
jnp
jo
add
xchg
jae
push
insb
ret
dec
push
push
out
xchg
push
xchg
enter
loop
pop
mov
loope
movsl
movsl
jle
or
pop
dec
out
cmp
push
jmp
fmuls
loope
imul
enter
add
dec
sbb
dec
xchg
xchg
cld
pop
mov
pop
in
mov
imul
mov
xor
jg
adc
xor
pop
fimull
pop
leave
int
or
push
sbb
ljmp
inc
data16
fwait
push
ljmp
scas
addr16
cmp
sub
xor
int
adc
inc
mov
lahf
gs
mov
inc
xchg
movsb
in
adc
dec
adc
sbb
nop
jo
mov
fwait
gs
repz
pop
out
pushf
daa
lret
aaa
push
mov
add
mov
dec
mov
int
ret
mov
or
roll
jecxz,pn
pop
pop
std
enter
sti
add
subb
fwait
pop
je
dec
add
add
daa
in
push
push
pop
aaa
into
cmp
icebp
jl
and
sti
sahf
hlt
or
movsl
xchg
insl
adc
mov
mov
shl
and
hlt
stc
or
aam
flds
mov
push
jns
push
aad
xchg
push
in
mov
int
pusha
inc
mov
cs
mov
add
hlt
or
xlat
jne
cmpsl
inc
xchg
data16
push
mov
adc
cmp
popf
sub
sti
adc
or
cmp
xchg
cmp
or
xchg
popf
jecxz
xor
loope
jp
mov
pop
mov
lds
stos
mov
insl
jg
pop
mov
movsl
icebp
sbb
ja
pushf
int3
pop
jne
mov
pop
shll
sub
shrl
cmp
adc
stc
data16
jg
repz
mov
pusha
stos
in
popf
std
dec
mov
adc
cmpsb
mov
addl
aam
into
mov
sbb
inc
adc
mov
mov
andb
xchg
fstpl
test
popa
sahf
popf
cld
cmp
addr16
fs
xchg
jno
jnp
ljmp
lock
mov
fisttpl
lahf
add
pop
jnp
gs
fdivl
jg
in
inc
aam
aad
push
leave
xchg
test
std
and
movsl
mov
pop
insb
jbe
jne
gs
dec
dec
rcrb
out
repz
inc
out
xor
sahf
push
mov
lahf
orb
mov
cs
or
pop
loop
mov
stos
subl
pop
aaa
xchg
pop
stc
addr16
or
mov
sub
mov
push
int3
fdivr
xchg
and
rcr
mov
test
negl
rcll
lahf
sub
xor
stos
sbb
in
clc
fwait
inc
les
adc
jo
mov
push
out
dec
test
push
xor
jle
mov
xchg
dec
int
mov
xchg
ja
cmc
popl
pushf
shrl
int3
shlb
adc
outsl
out
push
fldenv
mov
mov
es
pushf
mov
or
stos
popf
add
mov
mov
xchg
cmp
xchg
outsl
lock
sbb
inc
mov
subb
sub
in
icebp
and
fwait
jae
jae
xor
aam
dec
vpunpckhwd
out
xchg
push
and
sub
stc
in
lahf
test
mov
sbb
int3
ja
mov
pop
cmc
inc
or
fcoml
dec
in
pop
jp
add
fcoml
in
cmpsl
movsl
mov
mov
stc
push
jecxz
sbb
adc
mov
xor
mov
xchg
and
fwait
es
jno
test
cmp
stc
call
not
daa
les
jle
test
fwait
das
sahf
lret
mov
add
mov
sub
and
sub
lret
jnp
out
sub
stc
rolb
cmpsb
sbb
sub
push
push
imul
jl
out
scas
mov
sbb
cltd
ds
jbe
mov
out
das
lods
inc
jo
dec
or
adc
jecxz
cmp
mov
xchg
push
rcll
jmp
or
or
dec
in
and
movsb
outsb
fstpl
dec
push
int3
cmp
ljmp
out
push
lahf
outsl
cmp
fs
adc
ret
dec
clc
or
lcall
cltd
int3
iret
pushf
adc
xor
inc
mov
mov
mov
cltd
mov
or
outsl
fcmovnb
nop
les
and
cmc
out
jb
cli
mov
push
xor
dec
cmp
rcrl
xor
mov
inc
hlt
cmp
mov
xchg
mov
test
pushf
mov
int
adc
js
pop
or
icebp
jae
lods
movsb
push
xchg
push
cmp
sub
dec
mov
cmp
inc
ss
insb
and
or
jle
mov
pop
in
aad
insb
insl
inc
xchg
lods
andb
jns
pop
imul
fistps
and
mov
dec
cmpsb
jne
pop
adc
dec
jno
mov
or
lea
or
jnp
pop
ja
addr16
enter
int3
sti
add
add
add
in
in
sub
push
dec
in
in
into
dec
cmp
enter
mov
lock
or
cwtl
push
into
cld
out
pop
aaa
sarl
enter
lock
sahf
lds
push
xchg
jbe
cmp
hlt
testb
add
inc
cli
add
rorb
pop
mov
mov
xchg
clc
aas
jo
popf
mov
mov
in
out
rorb
sub
les
mov
push
ds
mov
and
push
in
popa
cli
ja
loop
test
push
dec
rcll
imul
mov
scas
in
or
outsl
aaa
mov
in
add
sub
rorb
daa
or
in
mov
sarl
daa
sub
mov
pop
scas
mov
pop
add
jp
fs
call
rcl
into
cli
xor
and
mov
sub
cmpb
std
imul
jno
movsl
add
push
cmp
mov
xchg
cltd
push
inc
cli
inc
pop
add
pop
xor
xchg
ss
xor
inc
sub
push
xor
sbb
jle
stos
lret
pop
lcall
mov
ja
scas
mov
jecxz
add
jne
push
out
cwtl
cmc
fdivr
xchg
or
push
mov
adc
stc
idiv
je
fnsave
out
cmp
fldt
sbb
jno
pop
test
ret
ret
movsl
arpl
pop
adc
add
adc
stos
xchg
jl
int
lods
lcall
adc
popa
ret
mov
pop
sahf
add
mov
inc
mov
scas
xchg
daa
dec
sub
dec
pushf
sar
add
jno
popf
lret
pop
enter
sub
adc
jbe
xchg
loope
cmpsb
sti
mov
orl
sbb
jae
arpl
or
mov
sub
mov
jg
and
popa
into
pop
mov
mov
clc
jg
or
mov
dec
aaa
cmp
int
ljmp
rcll
add
dec
outsb
push
imulb
addr16
mov
pop
mov
cmp
jle
inc
dec
div
or
cmp
scas
into
psubsw
fs
jmp
and
test
mov
cmovbe
ret
sbb
push
scas
xchg
sub
and
mov
hlt
jne
xchg
mov
mov
in
flds
xchg
pop
mov
inc
lods
pop
mov
sbb
test
jp
divb
ffreep
hlt
insl
rcrb
ss
xor
mov
fsubrs
rorl
xor
stos
mov
xchg
fldz
out
inc
xor
inc
dec
psubusw
flds
aam
rorl
fld
adc
sahf
repnz
rcr
lcall
xchg
xchg
cmp
mov
outsb
fidivrs
mov
adc
xor
popf
mov
adc
xor
xchg
arpl
push
dec
pop
fildll
cmc
stos
subb
pop
arpl
cltd
jnp
roll
mov
xchg
sub
inc
jo
add
xchg
stos
stc
sar
push
sub
pop
ror
sbb
pushf
fsubrl
inc
mov
dec
mov
rcrl
ret
xchg
jmp
in
mov
in
imul
les
and
inc
jle
loop
push
ja
jp
int
decl
xchg
add
ja
sub
std
js
mov
or
push
lret
int3
jae
shlb
jns
cmpsb
sbb
cmp
sbb
in
jne
in
push
and
ds
movb
inc
aad
stos
movsb
lds
sub
outsb
cmp
mov
mov
push
mov
dec
jns
xrelease
movsl
mov
repz
je
dec
xor
js
loop
cltd
loope
subb
inc
push
jo
fldcw
movl
add
mov
and
roll
shlb
test
sahf
fcmovbe
cwtl
jne
jnp
mov
and
repz
in
ret
cmp
mov
imul
ss
mov
std
push
jbe
jnp
fs
mov
jbe
lahf
xbegin
aad
adcb
sub
filds
xchg
or
xchg
mov
les
jo
call
test
jns
push
inc
mov
insb
sub
fcomps
push
rol
rcl
mov
pop
repz
cmp
out
aaa
pop
add
jge
lahf
mov
nop
sbb
jb
fisubrs
notb
jb
adc
mov
sbb
cltd
push
inc
lret
xchg
add
jae
lea
cmp
cmp
cltd
jmp
push
cmpl
out
inc
repnz
mov
sahf
test
cli
mov
sbb
shrb
nop
mov
enter
sarb
shrl
pop
js
or
push
mov
or
add
inc
call
add
push
xor
adc
fnsave
inc
mov
test
dec
std
outsb
aad
mov
lcall
es
sbb
in
xor
mov
inc
out
aam
repnz
negb
xchg
push
cs
mov
mov
mov
cs
jne
jg
lahf
cmpsb
or
pop
adc
movl
test
scas
lods
movsl
test
pop
and
mov
mov
or
adc
cmpsb
add
sub
ret
dec
lret
loope
cwtl
push
mov
or
fisubl
pushf
popa
es
push
loope
ja
movsl
xor
xchg
nop
dec
loopne
adc
loopne
popf
jno
jmp
xchg
mov
roll
pushf
aam
cmp
xor
dec
js
mov
lret
push
xorb
popf
sub
insl
jo
xchg
jbe
lods
and
std
xchg
and
cli
jmp
push
pop
pop
sub
rol
xchg
fldl
lods
dec
dec
pop
push
mov
add
cmp
add
divl
push
test
test
adc
push
fs
pop
xchg
jns
adc
jnp
bound
int
sbbb
xor
jo
ret
cwtl
jb
stc
xchg
dec
pop
std
addr16
mov
xchg
jb
dec
sbb
push
rcll
cltd
jp
adc
xchg
lock
stc
ljmp
enter
xlat
or
sbb
push
xchg
xor
mov
adc
mov
sar
adc
loopne
mov
adc
lods
xor
pop
jno
mov
icebp
cmp
push
repnz
jb
cltd
rolb
int3
jmp
jo
cmovb
xor
addr16
and
push
and
aaa
or
pop
out
sub
mov
mov
jg
inc
cs
jp
stos
scas
cmp
inc
insb
mov
push
std
iret
arpl
psraw
in
shrb
out
dec
add
lcall
add
and
cmpb
dec
sti
sub
sub
das
insl
fsubs
push
dec
jp
jle
mov
shlb
fsub
push
cs
cmp
rcrl
sbb
scas
fbld
xchg
hlt
lahf
test
in
popa
pop
mov
sub
sub
mov
xchg
mov
mov
dec
cmc
jmp
xor
mov
jge
das
mov
int
push
daa
test
inc
push
mov
adc
mov
inc
and
lds
push
sub
inc
cld
mov
aam
mov
enter
and
mov
mov
cmp
ror
mov
inc
inc
jmp
jge
loopw
imul
inc
shll
xchg
sti
xlat
jmp
adc
xor
scas
cli
ss
pop
test
aaa
sub
sbb
fs
hlt
test
fcoms
push
cld
lods
movsl
mov
mov
mov
xchg
cmp
je
cli
out
pushf
sub
mov
int
dec
mov
popf
and
insb
mov
or
mov
fistpl
inc
cli
ja
mov
mov
xor
xor
and
inc
stos
cmp
lock
push
cmpsb
lds
arpl
scas
sbb
xor
mov
int3
and
xor
pop
leave
sar
aam
sbbb
mov
inc
fisubs
xor
int
or
push
pop
adc
xor
nop
movsl
xor
add
mov
pop
pop
and
dec
sbb
imul
insb
loop
rorl
call
sub
arpl
mov
inc
and
jg
aas
fcmovne
cmp
xchg
jno
adc
push
sub
jo
enter
into
das
adc
add
adc
pusha
inc
push
xor
ret
add
fisubl
mov
adc
mul
or
cmp
mov
sub
cmp
int3
popa
jecxz
mov
ss
xchg
fadds
jle
dec
xor
push
or
mov
subb
dec
dec
jns
and
pop
adc
cwtl
add
repz
or
sub
out
cmp
out
sub
push
cmp
xor
mov
push
dec
xchg
xchg
pop
dec
fsubp
imul
xchg
out
enter
mov
lret
inc
in
xchg
stos
pop
out
xor
sbb
sar
lock
jnp
repz
pusha
lock
sub
leave
stos
jno
fadds
js
jae
lds
sbb
ja
sbb
push
pop
fidivl
pusha
jne
cmc
jl
les
mov
cmpsl
clc
inc
outsb
imul
mov
and
sub
dec
cltd
mov
bound
in
stc
je
sub
shlb
sbb
or
xchg
movsl
fldt
push
jmp
and
sub
mov
out
pop
add
frstor
dec
inc
push
mov
loope
xbegin
mov
adc
sahf
mov
loop
sbb
out
lret
test
xchg
cmp
lea
mov
cmp
in
mulb
and
testb
cmp
pop
dec
scas
mov
ja
push
jp
jecxz
mov
aam
jns
repnz
clc
outsl
incb
xchg
mov
and
pop
dec
nop
movsb
mov
stos
stc
test
insl
fiadds
cwtl
lret
fldl
fwait
jge
dec
xor
insl
repnz
xchg
or
inc
sbb
orl
pop
shll
cmp
adcb
sbb
push
je
push
mov
rorb
adc
aad
nop
pop
test
add
mov
cmc
xchg
adc
cmp
push
xchg
mov
cmp
test
pusha
sub
fldt
xchg
xor
jmp
mov
ja
daa
cmp
inc
sti
mov
sarb
imul
jae
or
in
xor
shufps
and
cmp
pop
adc
int
and
sub
mov
xor
iret
std
and
add
mov
push
in
jo
out
sarb
cmp
jmp
sub
call
movsb
clc
movsb
addr16
imul
push
popa
jecxz
adc
xor
shlb
jg
sub
insl
push
pop
mov
stos
jae
push
xchg
cld
in
cmp
movsb
add
inc
jnp
add
insl
movsl
sbb
stos
in
mov
in
mov
push
and
ljmp
addb
insl
int
cmp
pop
add
pop
aaa
xchg
iret
push
sub
inc
outsb
xchg
jbe
mov
in
mov
fucomi
mov
adc
sub
jbe
sub
dec
pop
jne
enter
lcall
inc
lahf
rcrl
mov
add
cmp
mov
ds
repnz
inc
push
loop
stos
leave
pushf
jns
pusha
and
jne
daa
es
notb
cmpsl
pop
enter
arpl
int3
and
mov
add
test
popf
inc
stc
js
das
add
xchg
push
mov
push
fwait
or
ret
sbb
mov
icebp
test
sahf
call
or
daa
jbe
aas
aad
add
push
movsb
push
adcb
jle
ret
jae
adc
in
pop
mov
inc
int
icebp
inc
xchg
xor
pop
outsl
and
sbb
pop
std
cmpb
test
daa
xlat
rcr
jae
xchg
jl
stos
mov
jae
pop
sbb
stc
out
push
and
lcallw
pop
rclb
sbb
xchg
xor
push
jmp
jnp
xchg
sbb
shl
les
mov
int
xchg
scas
mov
pusha
xlat
repnz
mov
pop
out
jo
std
lods
popf
scas
insb
psubq
push
iret
push
lds
xchg
stos
push
or
pop
ss
add
icebp
add
sub
ljmp
and
orl
adc
addr16
add
push
mov
mov
leave
push
loope
inc
push
aaa
sbb
es
jne
mov
stos
jns
mov
mov
add
push
add
mov
and
xchg
iret
js
mov
or
jne
xor
out
push
stos
pop
or
mov
mov
in
outsl
dec
js
imull
dec
push
aas
outsb
pop
dec
pop
adc
out
pop
or
cmp
cmp
rcr
scas
push
jge
enter
add
aam
es
cmc
fisubl
movsl
jno
lock
lret
add
jg
mov
das
rcll
xor
andb
pop
sbb
fldl
mov
sahf
or
push
xor
mov
pop
pop
xchg
cmp
mov
icebp
mov
ss
pop
and
pop
jge
jl
pop
cmp
imul
mov
js
sbb
lret
aas
fwait
add
pop
test
loope
mov
jb
xchg
or
lret
enter
stc
aad
mov
out
sub
jns
call
sub
outsb
push
push
or
jge
adc
dec
aad
popa
ret
adc
cmpsl
lret
sbb
in
sub
sub
nop
and
add
adc
aas
notb
or
aad
rcll
in
sub
cmp
lods
mov
xor
pop
mov
cmc
xchg
push
gs
jl
cmp
in
adc
in
sbb
icebp
fcomi
arpl
insl
shll
ljmp
pop
mov
mov
in
out
cltd
arpl
cmp
cwtl
dec
enter
cmpsl
pop
lret
mov
gs
addl
mov
aad
jb
bound
mov
repnz
jae
rolb
cwtl
mov
fwait
and
repnz
or
adc
jo
xor
scas
mov
aaa
jae
movsb
xchg
nop
inc
adcl
lret
mov
scas
sbb
mov
mov
inc
sbb
addr16
sbb
in
cld
popf
dec
jg
loop
mov
mov
notl
shlb
mov
lds
mov
push
lret
add
popf
adc
push
fldl2t
and
push
orl
sbb
dec
xchg
cmp
add
cwtl
xor
jnp
mov
jb
fiadds
mov
or
jmp
arpl
repnz
cmpsl
clc
or
lret
out
jo
xchg
dec
stc
dec
push
sbb
xchg
insl
test
xor
mov
mov
pop
aam
cli
and
xor
jge
imul
aad
lods
inc
in
sbb
mov
dec
cmp
lahf
outsb
adc
mov
xor
xorl
jmp
in
push
call
popf
mov
add
add
hlt
mov
lds
mov
jne
xor
mov
mov
call
cmp
add
push
xlat
mov
dec
and
cmpsl
ss
sbb
xchg
fs
out
inc
jmp
mov
push
push
and
movsb
movsbl
xchg
mov
negl
dec
and
ficompl
dec
fs
cs
and
loope
aam
xlat
pop
in
rorb
mov
sub
test
fidivrl
shll
lods
or
push
out
data16
in
es
inc
aad
lret
cmpsl
mov
shll
roll
orb
jae
leave
lcall
lds
addr16
loop
popf
roll
and
scas
adc
fdivs
push
gs
ljmp
xor
ret
adc
jnp
or
mov
aad
enter
les
and
sbb
sbb
mov
mov
mov
pop
jae
pop
into
and
lea
mov
ret
dec
sub
call
lds
cmpl
xor
mov
cmpsb
push
and
adc
scas
fisubrs
mov
xor
imul
pop
or
jae
loopne
pop
sub
enter
repz
mov
jp
nop
jl
lds
lods
jae
fldt
sub
add
sbb
mov
add
repz
xchg
arpl
dec
dec
iret
inc
scas
push
insl
mov
mov
jp
arpl
jbe
xchg
cmp
cmp
mov
inc
mov
in
jo
cmp
les
push
xchg
rcl
mov
inc
std
mov
mov
mov
aas
movzbl
pusha
fsubp
mov
xor
fwait
xchg
lcall
sub
pushf
arpl
fwait
jno
cltd
cmp
fstpt
int3
mov
inc
sub
push
sarl
jno
mov
pushf
mov
out
int
and
clc
clc
xor
and
shll
jle
inc
xor
mov
repnz
sub
lods
stos
jns
xchg
jne
rcll
in
lcall
cli
jle
std
sbb
daa
add
mov
xchg
loope
rcl
sbb
loopne
jbe
cmc
jno
stos
lret
inc
pop
mov
call
fisttpl
and
movsbl
inc
jae
pop
popa
inc
ja,pt
ja
movsl
fsub
ja
sbb
out
frstor
sub
ficoml
mov
mov
mov
inc
into
fists
sbb
or
xchg
or
xchg
jb
std
stos
jle
push
jle
jno
aam
dec
xchg
notl
pop
push
sbb
mov
jl
daa
mov
add
mov
call
ds
popa
and
xchg
cli
cld
pmaxsw
fdivs
xlat
cmpsl
loopne,pt
call
cwtl
push
lcall
es
sbb
xchg
lds
fsub
xor
repnz
mov
mov
xchg
jnp
dec
mov
outsb
imul
pop
stc
or
push
add
out
fldl
jle
imul
pop
jo
in
aas
pop
add
mov
mov
cld
scas
aad
ret
xchg
dec
fs
bound
into
jecxz
ret
dec
jmp
arpl
inc
adc
jno,pt
and
jl
and
push
test
out
fsts
test
lcall
ret
and
xchg
pop
xchg
shl
aas
pop
jp
push
pop
mov
cs
pusha
cld
inc
push
pop
filds
mov
mov
lods
frstor
and
test
jecxz
in
sarl
or
inc
mov
push
jl
mov
nop
inc
sbb
out
scas
test
pushf
mov
aam
movsb
lret
add
jmp
mov
push
ret
push
adc
scas
aad
fldl
lret
js
bound
mov
orb
and
shl
lahf
mov
cmp
mov
push
leave
stc
xchg
jmp
mov
push
or
push
cmp
test
leave
sbb
jo
dec
adc
popf
xchg
ds
jbe
fcompl
add
sub
lds
out
push
push
push
sub
outsb
inc
adc
xlat
sbb
xor
lods
sbb
cmp
leave
pop
pop
rorl
in
shll
mov
stos
mov
add
push
adc
and
cltd
aad
pop
lret
jbe
aaa
push
out
sarl
jecxz
mov
lcall
fmull
aaa
dec
out
jno
movsb
cmp
and
mov
mov
sbb
jecxz
fildl
adc
in
push
insl
push
sbb
jns
scas
leave
mov
fstp
sub
lock
mov
loopne
repnz
jl
push
xchg
pusha
in
jl
mov
jmp
add
es
push
dec
mov
ret
sbbl
pop
mov
xor
add
pop
dec
in
sub
movsb
pop
mov
incl
leave
pop
jmp
or
jnp
adc
sahf
out
popa
xchg
rorl
adc
hlt
dec
dec
hlt
stos
out
imul
or
pop
lea
inc
push
int
fisttpl
mov
les
ds
rorl
mov
and
xchg
je
jne
xchg
or
or
push
imul
add
mov
int3
testb
or
lock
and
xor
xor
dec
push
sbb
clc
aas
je
and
lock
testb
push
push
mov
stos
mov
fistpl
ja
cli
daa
mov
sbb
add
movsl
les
mov
aas
jno
adc
cmpl
std
dec
add
xchg
das
push
xchg
and
imul
mov
adc
adc
or
inc
pop
stos
push
repnz
jne
icebp
setb
mov
or
xor
mov
push
inc
mov
sbb
adc
cmp
and
lock
decl
scas
and
dec
cmp
test
xchg
shlb
pop
in
fcmove
imul
or
mov
fsub
adc
fcompl
fdiv
in
test
addb
pushf
dec
xor
adc
rclb
scas
mov
dec
push
sub
push
push
dec
xchg
mov
xchg
pop
pop
cmp
xor
int3
pop
pop
in
cli
inc
fcoms
es
or
in
fwait
clc
imul
iret
mov
push
pop
mov
adc
lret
pop
jp
sbb
shll
lods
sub
xchg
add
lahf
jbe
imul
xchg
add
and
push
sbb
xchg
inc
pop
pop
xchg
jmp
mov
mov
jbe
out
movsl
cmpsb
pop
cld
mov
lods
in
pop
sahf
lock
daa
mov
add
ffree
mov
aam
loopne
bound
cmpsl
adc
pop
or
mov
ret
pop
das
in
jno
mov
aam
lret
inc
dec
loope
scas
or
and
push
mov
push
ss
loop
js
stc
pushf
adc
fdivp
xchg
movsb
shr
sbb
out
addl
fsubl
daa
pop
lret
mov
in
xchg
fucomp
push
data16
xchg
push
aaa
pop
mov
lret
sbb
test
push
dec
mov
stc
pop
iretw
xchg
xchg
mov
pop
sbb
test
popf
test
pop
addb
adc
xor
aas
aam
push
jle
dec
dec
pusha
jne
cmp
ss
mov
cmpsl
ret
push
frstor
std
test
cmp
cltd
or
aas
jo
jno
sub
xchg
out
push
pop
and
std
jo
mov
dec
cmp
nop
or
xor
push
shll
ror
inc
icebp
push
fs
push
and
push
daa
push
test
ja
push
add
sub
add
sub
in
push
mov
hlt
stos
add
jbe
leave
xor
pop
cmc
jle
and
sahf
cmp
insb
cmp
inc
imul
jns
imull
frstor
push
mov
in
xchg
pop
mov
mov
inc
sbb
arpl
jmp
xor
aaa
cmc
pop
xor
stos
jge
cwtl
stos
mov
sub
push
fsts
and
mov
int
jnp
mov
jecxz
inc
test
dec
dec
xchg
dec
adc
bound
inc
lods
push
mov
sub
lds
ret
lds
jecxz
mov
push
add
xchg
push
push
mov
daa
dec
rol
out
jl
push
sarl
mov
ret
mov
gs
jns,pt
in
data16
daa
rcll
mov
lods
cmp
or
push
shld
inc
push
push
notl
cmp
shll
les
fidivs
push
fimull
pop
or
mov
loop
dec
xchg
lahf
cwtl
cltd
inc
or
outsb
fimull
inc
mov
xor
xlat
repnz
add
and
loopne
and
xchg
lea
cltd
mov
lret
xorb
test
pop
mov
push
das
xchg
xchg
in
out
jae
xor
pop
cs
push
loopne
pop
scas
ret
mov
lds
nop
xchg
sti
fwait
shrl
sti
jae
out
in
lahf
sbb
sahf
sub
mov
sub
lret
xchg
mov
scas
push
cld
add
xchg
mov
popa
add
in
xor
jmp
int3
orl
xchg
int
lret
inc
cli
mov
mov
mov
pushf
lods
cmpsb
push
jo
cwtl
incb
out
fadds
adc
movsb
mov
jbe
lret
xlat
mov
push
dec
insl
aad
insb
pushf
sub
add
push
push
cmc
add
adc
pop
shll
mov
pop
mov
lods
loop
daa
mov
adc
mov
mov
test
jmp
sarl
aaa
add
adc
cmp
xchg
test
pop
push
jne
adc
fdivrp
xor
xor
push
xor
fwait
es
push
ljmp
lret
in
xchg
in
rcrb
jecxz
dec
in
stc
movsl
xchg
aad
pushf
movsl
mov
out
loopne
fs
ja
imul
mov
xchg
sbb
add
add
push
hlt
testl
enter
les
mov
mov
js
sub
cmc
out
pop
mov
les
add
mov
sar
test
ja
hlt
stos
call
sub
jne
xor
fwait
scas
iret
push
xchg
daa
ds
push
ja,pn
cmp
jmp
out
adcl
xchg
mov
xchg
sti
mov
in
mov
dec
cmp
mov
ficompl
shlb
dec
adc
add
aam
xlat
mov
push
sub
fadds
pusha
push
mov
and
rolb
sbb
out
dec
mov
gs
xchg
cmp
mov
imul
mov
sub
xorb
shlb
pop
mov
jo
add
je
repz
in
pop
push
or
fwait
xor
into
dec
ja
dec
dec
scas
lret
pop
ficompl
and
in
jbe
sub
jnp
pusha
cli
or
or
lock
ficoms
in
cmpsl
push
sbb
jmp
push
or
call
mov
mov
sub
dec
inc
inc
jp
cmp
sarb
mov
xor
jecxz
rcll
stos
push
xchg
iret
fcmovnbe
cld
insb
push
sbb
or
popf
mov
sbbb
mov
push
sbb
adc
xchg
insl
adc
movsl
cs
adc
push
dec
call
add
leave
loop
shlb
gs
mov
or
or
or
hlt
add
es
flds
mov
jns
adc
test
in
jns
mov
or
leave
jl
pop
pop
out
lret
and
pop
hlt
xchg
inc
outsb
mov
jecxz
mov
jnp
int
data16
repnz
dec
xchg
mov
inc
push
in
jns
divl
outsl
out
push
sar
push
sbb
sbb
fst
inc
std
mov
outsl
pop
pop
fisubrl
sarl
mov
je
int
mov
xor
jg
mov
int3
int3
jbe
sti
in
testl
outsb
ss
xor
add
mov
das
ret
jmp
dec
ja
dec
inc
jbe
rcr
fwait
in
ljmp
fs
test
pop
push
cmp
std
sub
or
fcompl
mov
pop
icebp
rcrb
pushf
dec
xchg
in
dec
cli
into
lock
ljmp
adc
and
push
movsl
sub
mov
adc
std
and
cmp
add
mov
shl
push
jmp
pop
mov
inc
xchg
mov
andb
push
pusha
fsts
movsb
mov
incb
pop
gs
mov
test
stos
xor
adc
dec
mov
lahf
ret
push
mov
ret
dec
xchg
mov
and
hlt
jnp
push
xchg
movl
dec
repz
push
rcrb
xor
jnp
push
les
rep
push
xor
lret
lods
add
pop
push
mov
cmpsb
mov
push
xchg
mov
sbb
sbb
cltd
je
std
pop
mov
and
mov
fsubr
push
adc
xor
arpl
out
push
xor
stc
ret
clc
stos
or
or
movb
sub
fucom
add
das
inc
jne
rol
imul
mov
arpl
or
mov
jns
push
outsl
ffreep
stc
xchg
jp
sub
neg
jns
iret
out
shlb
mov
fbld
mov
sbb
jl
gs
xor
pop
enter
mov
pop
add
xor
lahf
and
pop
and
in
mov
movq
sub
sarl
ss
sti
loop
pop
ds
adc
and
in
pusha
push
ret
sub
push
add
pop
sbb
gs
dec
dec
push
in
aaa
adc
inc
sbb
push
dec
stc
hlt
push
xchg
mov
jno
call
es
aaa
js
mov
jnp
xchg
std
and
mov
pop
movsb
jl
stos
mov
jl
sub
xor
gs
addr16
inc
push
jo
clc
pop
sar
push
cmp
sbb
insb
dec
mov
pop
cmpsl
add
pop
sbb
sub
xor
xlat
jae
outsl
add
insb
addb
fmuls
sbbb
xchg
pop
fcmove
jnp
mov
or
inc
lock
mov
sbb
icebp
or
enter
and
jns
cmp
cmp
jns
in
lret
dec
loop
loop
addr16
faddp
cmc
lds
arpl
fldenv
lret
icebp
in
mov
push
in
jne
push
rclb
push
pop
cltd
xor
inc
xchg
ljmp
adc
cmpsb
repnz
jno
call
jb
jge
gs
xchg
ficompl
and
sub
pop
pop
mov
das
pop
or
out
mov
and
dec
or
cmp
gs
mov
sahf
sarb
and
jae
test
add
sbb
stc
adc
push
fistpll
dec
icebp
into
loopne
mov
sbb
or
int
mov
sbb
fadds
dec
loope
mov
mov
mov
push
out
ljmp
adc
lods
pop
fidivrs
aas
mov
inc
shrl
pop
imul
insb
jae
sahf
sbb
jmp
inc
clc
add
dec
and
sbb
sub
mov
inc
push
push
sahf
fbstp
mov
gs
sarl
or
aad
test
cs
enter
push
cs
sub
mov
aas
xor
call
lea
sti
xchg
dec
add
lahf
jb
lret
or
addl
sti
sub
out
xor
inc
int
aaa
push
jp
pop
push
rorl
test
jne
outsb
je
iret
mov
mov
jp
mov
out
mov
rorw
cmp
fcoml
daa
testl
or
loope
scas
adcb
aam
inc
lods
in
xchg
mov
pop
rcrb
jg
add
test
push
cli
popa
or
sub
repz
or
lret
pop
adc
sbb
pop
dec
push
dec
sub
jle
scas
clc
icebp
pop
mov
mov
push
mov
rorl
pop
clc
addl
out
les
flds
add
rcll
pushf
es
sub
push
and
jne
and
icebp
xchg
icebp
dec
add
ret
and
push
pop
filds
push
xor
mov
cmp
jbe
fisubrs
pop
cmp
mov
leave
stos
pop
lcall
sbb
aas
add
push
in
or
repnz
in
xchg
cltd
inc
inc
ds
sbb
push
test
xchg
je
add
cmp
andb
jno
pop
test
idivl
xor
adc
ds
pop
xchg
lret
insb
icebp
orl
rol
dec
repnz
pop
jg
in
inc
sti
aas
pop
inc
add
pop
xor
popf
jns
or
push
jl
add
pop
inc
mov
push
mov
mov
push
lds
iret
xchg
pop
test
dec
cld
jb
jno
and
inc
das
das
shr
mov
repnz
sub
lret
cwtl
inc
ljmp
popl
inc
or
test
out
cwtl
cltd
lret
arpl
jno
aas
pusha
xchg
ficomps
pop
ljmp
nop
subl
insl
vpextrw
lds
loop
jns
inc
mov
loope
push
push
int3
out
add
pop
dec
stc
inc
mov
std
xor
lcall
mov
idivb
push
push
mov
in
aas
lea
dec
push
inc
push
mov
daa
jg
loopne
je
dec
cmp
or
insl
jb
hlt
outsb
jmp
adc
jbe
dec
push
push
aas
lock
inc
push
scas
fstpt
push
loope
arpl
stos
cwtl
frstor
sub
add
pop
dec
or
scas
nop
cli
mov
add
lods
movsl
in
xor
or
or
mov
loop
sbb
mov
lret
and
fimuls
mov
xor
dec
les
xor
ret
sbb
insl
mov
and
les
xor
inc
movsb
dec
sub
pop
sub
push
adc
repnz
mov
call
lcall
in
pop
or
xor
inc
push
mov
sbb
ja
jnp
add
pop
or
mov
repnz
pushf
push
mov
xchg
insl
out
inc
sbb
xchg
daa
fmuls
sub
jmp
fsubrl
cmpsl
cmp
dec
inc
push
outsl
ret
sbb
fwait
loopne
xor
mov
ret
fadds
sub
ljmp
xchg
andl
fs
mov
in
push
popf
out
jl
dec
mov
xchg
add
add
adc
addl
ret
inc
jbe
mov
xor
push
sbb
mov
push
dec
pop
repnz
xorb
xlat
addr16
cmp
enter
decl
or
lahf
xchg
inc
movsl
dec
pop
push
gs
mov
jmp
rcl
jle
mov
cmc
in
jo
fcomps
mov
or
xor
test
adc
push
leave
xor
push
aam
jns
lcall
mov
mov
andl
ret
xor
inc
decl
mov
mov
sarb
je
mov
in
daa
add
aam
rorb
frstor
adc
cmp
test
pop
pop
pop
add
sbb
inc
pop
subb
je
mov
ss
ja
cmpsl
cs
aad
push
push
out
xor
mov
sarl
push
fsts
scas
loope
xor
test
stc
inc
repz
push
cmp
dec
mov
cwtl
imul
clc
aad
lock
xor
popa
add
cmp
enter
in
or
push
call
cmp
mov
add
pushf
loopne
cwtl
dec
add
dec
lods
ljmp
mov
int3
mov
add
int
push
gs
pop
jae
inc
and
xchg
mov
xor
insb
mov
testl
fs
push
shlb
ja
mov
iret
and
mov
or
outsl
push
lcall
mov
mov
pop
mov
adcl
lock
jecxz
cmp
mov
inc
xchg
inc
inc
jecxz
inc
jge
cmp
add
je
inc
call
or
mov
fildll
popa
sub
fdivrs
addr16
adc
dec
mov
xor
cltd
cmpps
push
xchg
inc
movsl
mov
hlt
fsub
lock
push
xor
sbb
sub
in
inc
mov
in
pop
mov
push
es
aad
out
xchg
test
lods
pop
push
mov
mov
jle
das
and
lcall
in
sbb
xor
repz
add
cli
sub
das
out
push
out
je
scas
movsb
cmc
dec
imul
jae
xchg
dec
test
negb
testb
mov
jns
scas
cltd
scas
xchg
sbb
neg
dec
pop
out
jl
dec
out
sbb
cmpsb
and
gs
sbb
nop
mov
pop
mov
or
jnp
push
add
pop
fidivl
cltd
mov
jecxz
sbbb
mov
sub
push
dec
sub
pop
idivb
mov
pushf
addl
in
xor
rorb
pop
mov
mov
adc
scas
lahf
sar
mov
mov
mulb
mov
sub
sub
cmp
pop
stos
pushl
mov
lahf
insb
cmp
or
mov
call
imul
incl
push
adc
mov
add
imul
mov
pop
push
jge
and
add
icebp
dec
mov
and
daa
subl
jp
out
jbe
imul
mov
inc
lcall
leave
dec
adc
decl
mov
in
push
outsl
stos
inc
out
mov
enter
cmp
mov
inc
jns
pop
jl
out
push
sbb
das
ja
push
test
arpl
leave
vmovq
jno
jp
addr16
mov
in
cmp
push
jge
mov
jmp
in
fdivrs
loopne
loop
jnp
mov
pop
call
test
imul
push
xorl
divl
xchg
or
dec
pop
cwtl
jl
dec
pslld
jno
in
cmp
aaa
out
sbbb
jge
in
mov
fistl
mov
fcmovne
xor
add
mov
cmp
sbb
mov
test
cwtl
mov
xchg
ljmp
push
jecxz
scas
inc
inc
scas
inc
fcoms
dec
push
int
mov
pop
imul
or
out
inc
dec
sub
inc
adc
dec
mov
pop
sbb
ds
push
enter
jno
insl
pop
xor
lods
jmp
xor
sbb
into
xor
in
pushf
daa
jno
int3
cmp
xchg
mov
xchg
fimuls
rolb
jb
dec
jp
std
dec
mov
sbb
lahf
fwait
xchg
mov
inc
mov
pop
fsubr
sahf
pusha
mov
add
mov
xlat
in
ret
xorl
dec
sbb
push
and
xor
jp
lcall
adc
pop
mov
dec
fwait
out
fwait
mov
shlb
call
out
inc
cli
test
dec
xor
clc
fwait
cwtl
stos
int3
test
aam
jns
dec
mov
xchg
orb
mov
push
dec
pop
or
mov
inc
ss
push
pop
inc
mov
mov
cmpsl
and
out
xchg
push
test
mov
cs
sbb
shlb
negl
cmc
out
dec
icebp
pop
and
mov
push
cmp
les
push
sbb
mov
or
cld
movsb
pusha
or
icebp
call
aam
jmp
push
out
mov
sub
dec
out
cltd
les
mov
arpl
add
ja
jo
push
sbb
sbb
or
mov
scas
add
ss
sub
or
dec
mov
jg
andl
xor
sti
jp
pop
push
hlt
pop
pusha
push
jecxz
aam
mov
negl
mov
call
imul
push
je
pop
or
or
xchg
xchg
sahf
into
je
xor
mov
mov
sbb
jecxz
jmp
push
cmpl
aam
mov
xchg
inc
xchg
jbe
stos
pusha
rclb
orl
test
push
xor
outsl
mov
cmp
sarl
cmp
sbb
sbb
inc
jg
cld
stos
push
lock
sub
adc
dec
or
push
dec
dec
mov
xchg
nop
bound
sbb
cmp
test
and
cmp
jg
mov
das
aad
mov
pop
mov
data16
add
js
ret
mov
cs
add
dec
dec
test
repnz
xchg
dec
push
rorb
cmp
pop
xor
jl
lcall
adc
popa
mov
jo
fwait
xchg
stos
inc
jno
lret
xor
xchg
pop
lds
das
test
lods
popf
dec
jae
add
in
mov
xchg
call
addr16
push
lock
xor
mov
sbb
fildl
lcall
shrb
jb
and
fisubl
mov
mov
add
aam
repz
cmp
inc
iret
add
das
cmc
cld
mov
cmpsl
adc
mov
les
mov
mov
subb
fs
cmpsl
clc
into
rcr
movsl
sub
inc
gs
es
das
fwait
pop
out
mov
pop
test
sbb
les
pop
push
dec
mov
scas
cmp
mov
mov
daa
fildl
dec
insb
dec
out
jbe
add
addr16
scas
xor
cltd
jns
out
ret
repnz
pop
sub
or
pushl
daa
inc
imul
add
sbb
aaa
scas
sub
mov
lds
dec
pop
cwtl
lret
imul
nop
imul
iret
cmp
sahf
shl
cmpsl
fildll
lods
mov
push
loope
cld
shlb
push
push
test
dec
xchg
and
push
ds
push
push
pop
popa
repnz
xchg
mov
jno
sbb
xchg
dec
popa
pop
fildl
jb
out
jne
fwait
jecxz
push
add
jbe
call
cltd
imul
dec
or
add
dec
das
and
lcall
cli
jge
ret
lahf
pushf
sub
stos
dec
notl
ficoms
les
pop
sti
mov
movl
nop
in
inc
mov
shr
add
pop
out
std
dec
es
orb
loop
cmp
sarb
push
push
mov
mov
jnp
adc
mov
inc
iret
pop
daa
sbb
push
loope
or
es
loopne
pop
pop
mov
or
pushf
push
adc
cld
inc
jecxz
xor
cmp
subl
xor
xor
enter
mov
push
dec
cmp
add
iret
and
out
xor
inc
aaa
int3
repnz
popa
xor
ljmp
mov
mov
call
mov
std
pop
fisubrl
jp
xor
xlat
clc
add
mov
loopne
clc
mov
mov
dec
mov
adc
cltd
jg
lret
pop
push
pushf
push
sub
fwait
mov
dec
fcompl
add
imul
push
and
shlb
test
mov
lcall
jno
cltd
repnz
xchg
xchg
cmp
dec
push
sbb
hlt
sub
sub
loop
in
imul
mov
jnp
popa
pop
lret
fidivrs
repnz
jg
mov
shl
ret
adc
sub
lret
cmp
fnstcw
mov
push
cwtl
mov
jbe
sbb
pop
mov
movsb
daa
test
mov
movb
mov
rorb
inc
dec
mov
sar
xchg
pusha
adc
outsl
push
dec
js
outsb
xchg
mov
aaa
xchg
inc
lret
scas
rolb
push
loopne
or
adc
in
clc
jb
xor
sub
outsb
addr16
shrl
push
rclb
rcr
ds
test
xchg
or
aaa
das
add
sub
xor
lret
mov
inc
mov
or
lods
xchg
push
stos
sub
hlt
andl
gs
xchg
decb
xchg
nop
mov
loopne
dec
sub
mov
xchg
sahf
movsb
push
xlat
lea
je
inc
dec
nop
jno
fmull
mov
push
mov
add
cmp
inc
mov
arpl
repnz
pop
mov
push
rcrl
aad
lret
adc
jg
jno
dec
adc
loope
mov
sbb
mov
cmc
sbb
iret
push
mov
push
pushf
ficompl
pop
movsl
jl
jp
dec
stos
fs
mov
in
test
arpl
cmp
add
fdivrl
enter
add
jmp
pop
fstps
icebp
xor
jnp
call
mov
xor
pop
dec
repnz
jl
ja
out
inc
out
ljmp
repz
xor
pop
dec
outsb
repz
outsb
mov
mov
incl
jne
lahf
repz
pop
repz
lret
pop
lods
lock
adc
sbb
test
daa
fisubrl
inc
clc
fidivrs
xor
jge
pop
pop
xchg
adc
lret
inc
ljmp
addr16
sbb
push
and
push
psllw
cmpsl
mov
int
loope
mov
cmp
insb
pop
es
jp
pop
mov
rcr
mov
nop
mov
arpl
dec
cmp
xchg
mov
dec
mov
insb
les
repnz
lock
fwait
sub
mov
mov
cmc
mov
das
mov
lea
dec
inc
rorb
and
sub
imul
icebp
mov
mov
ds
lea
cmp
push
cmpsl
cltd
ret
in
dec
movsl
ss
xchg
xlat
jnp
movsl
je
les
adc
cmp
rorl
adc
inc
lock
xor
mov
or
dec
outsb
cli
cmpsl
sbb
sub
inc
push
sahf
xchg
loop
adc
iret
idivl
or
inc
int
call
pop
fcomip
lcall
je
cmc
mov
push
xchg
inc
out
cmp
rol
cmpsb
inc
out
sahf
iret
inc
in
push
je,pn
xchg
movsb
icebp
dec
clc
dec
or
xor
fidivrl
mov
add
lahf
dec
adcb
imul
gs
lock
pop
out
in
sub
mov
pop
or
fistpll
movsb
movsl
test
sti
mov
fdiv
pushf
rcll
mov
imul
mov
jns
aaa
js
divl
test
popf
fildll
les
js
jns
cs
xor
inc
je
scas
sbb
pushf
or
sub
pop
cld
adc
add
mov
lods
add
in
orl
adc
insl
out
fdivrs
rcrl
jnp
call
add
xorb
push
pop
fistpl
jns
sub
lret
pop
divb
pop
cltd
les
loopne
fisttps
pop
lcall
std
add
bound
push
jns
in
sub
lea
inc
out
daa
and
call
and
push
add
cmc
xchg
std
dec
inc
dec
and
mov
fsubs
mov
lret
imul
xor
je
mov
inc
sub
fisttpl
and
add
fldcw
bound
add
dec
sbb
jne
cli
out
ret
out
test
mov
insl
sbb
pusha
aas
shl
addr16
cmpsb
out
push
gs
scas
jle
ja
add
inc
cmp
les
fistpll
out
push
jg
push
lods
sub
inc
dec
mov
xchg
or
inc
scas
movsl
scas
lahf
test
jo
test
js
sbb
stos
mov
cmp
dec
sbb
loopne
cmpl
or
adc
push
fsubrl
push
sbb
mov
dec
push
xchg
bound
mov
jae
sub
cmp
xor
jp
and
and
test
or
sti
pop
stc
std
rcrl
pop
mov
cmp
fwait
push
mov
pop
sbb
xchg
inc
jge
mulb
ficoms
fs
fdivs
outsl
shl
and
addr16
jl
jae
sti
leave
loopne
les
lods
clc
rorb
inc
or
and
add
and
into
ja
xor
adc
xor
push
imul
mov
adc
mov
ss
stos
jb
mov
mov
adc
pop
sub
jns
subl
jns
or
outsb
cmp
and
xchg
jb
pop
jl
imul
ficoms
or
movb
scas
ret
cmp
adc
jns
pusha
or
mov
cmp
cmc
mov
pop
jp
sar
sahf
sub
push
or
out
xchg
sub
mov
add
in
pusha
adc
mov
notb
jl
loop
xchg
inc
aad
pop
loop
push
xor
sbb
fmull
or
add
adc
jl
test
scas
repz
adc
push
push
mov
cmp
aad
out
cmp
xchg
jp
call
pop
lret
jnp
int3
ss
lds
in
adc
test
jne
ja
popl
xchg
shll
je
sbb
inc
or
stos
shlb
ss
dec
jns
pop
sarb
cmp
outsb
add
mov
pushf
sbb
ljmp
sub
arpl
pop
cmp
lock
mov
ret
and
loopne
fimuls
test
dec
and
add
sbb
jno
or
test
add
jnp
sbb
mov
cwtl
test
mov
adc
ficompl
rolb
pusha
xchg
adc
jge
hlt
pop
cs
pop
das
jno
neg
cwtl
jle
push
and
dec
cltd
sub
lds
addr16
and
negb
in
cli
add
xchg
and
arpl
repnz
loope
rcrb
push
cmp
scas
pusha
fdivrp
push
xchg
sti
das
mov
lret
lahf
fsubp
in
and
add
inc
mov
adc
stos
and
shlb
mov
pop
xchg
pushf
mov
nop
mov
popl
cltd
mov
sbb
mov
xor
lods
push
and
mov
aas
or
mov
pop
jbe
jecxz
fwait
popa
add
inc
and
stos
out
daa
and
push
xor
xchg
push
or
lret
aad
mov
loope
push
xchg
loope
or
mov
pop
pop
add
and
dec
mov
push
out
mov
xchg
jo
jnp
push
bswap
lahf
sahf
mov
cmc
inc
push
lds
out
cmp
sbb
hlt
push
mov
xor
push
int3
or
mov
popf
mov
cltd
ljmp
cltd
lock
push
xor
addb
sbb
std
rcrl
push
jno
test
push
jb,pt
dec
mov
pushf
insl
addl
lds
mov
mov
xor
movb
mov
mov
outsl
mov
xlat
pop
out
jl
lods
jb
and
inc
jmp
mov
stos
sub
push
gs
mov
stc
cli
mov
sub
push
dec
mov
test
xchg
insl
iret
jp
push
int3
xlat
xchg
mov
adc
add
jg
out
leave
iret
sub
outsl
rcll
cwtl
cmpsl
jo
or
or
cmp
pop
push
mov
fisttpll
xchg
lock
je
clc
push
cmp
mov
inc
leave
mov
lcall
hlt
lret
mov
jmp
sbb
and
push
mov
pushf
sti
jecxz
sbb
push
and
mov
fucompp
adc
jmp
dec
rclb
inc
xor
jo
outsl
outsb
mov
dec
mov
sbb
xlat
and
pop
xor
jl
push
dec
xchg
enter
and
enter
fs
push
sbb
les
mov
and
or
test
movsb
filds
pop
and
stos
outsb
stc
push
enter
in
inc
loop
mov
jb
js
lods
add
xlat
loope
adc
jae
and
sub
test
daa
mov
rcll
sbb
subb
pop
rolb
lds
push
xchg
in
adc
sbb
push
mov
lret
push
and
pop
movl
iret
and
shrl
xchg
ss
mov
shrl
in
ret
sbb
push
pushf
fisttpl
inc
cmp
and
add
adc
adc
mov
repz
dec
inc
movsl
adc
or
bound
push
xor
mov
mov
repnz
cmc
push
or
popa
sub
push
adc
push
fisubrl
test
dec
jb
jns
cmp
pushf
cmpb
out
inc
call
push
inc
aad
mov
ds
cwtl
sahf
xchg
inc
inc
cmc
mov
push
and
xchg
dec
fidivl
jge
jbe
cmp
and
pop
je
xchg
pop
in
call
mov
pminsw
icebp
into
and
or
aas
pop
sbb
sub
loope
gs
mov
addb
sub
cmp
and
cmp
jo
sbb
xor
inc
cs
lahf
xchg
sub
inc
add
aas
hlt
cltd
xchg
lock
sbb
outsl
sbb
sub
jge
andb
mov
xorl
xchg
mov
outsl
popa
dec
mov
jecxz
in
or
mov
adc
fs
imul
hlt
push
subb
pusha
mov
adc
mov
jae
daa
mov
rolb
inc
out
mov
and
jae
add
and
jbe
or
rolb
jge
pop
notl
cmp
fs
xchg
add
or
jecxz
into
in
fidivl
push
adc
idivb
and
rorl
mov
mov
dec
lock
sarb
leave
sbb
jge
cmp
stos
fisubl
hlt
sbb
cmpsl
fisubs
xor
push
push
lea
pop
cs
imul
dec
test
jb
int
hlt
and
ljmp
stos
lods
cmpsl
std
push
jno
xchg
lahf
loop
add
dec
cmp
or
and
or
mov
shrl
sahf
fwait
call
cmc
cmp
push
je
mov
inc
jg
xchg
adc
iret
in
pop
iret
rolb
pop
mov
and
je
sub
xchg
jo
xor
popa
out
cld
fildl
sub
sub
pop
sub
decb
ja
push
aas
loopne
ja
sub
fnsave
add
filds
mov
scas
lock
mov
in
stc
push
add
fdivrs
add
jbe
outsb
pop
lahf
xor
jge
rcll
movsb
pop
xchg
pop
es
inc
sub
xchg
inc
out
adc
ficomps
dec
xchg
sbb
fisubs
call
jbe
cmp
fdivl
push
fcompl
fcmovbe
inc
mov
out
mov
nop
popf
pop
xchg
inc
push
pop
push
stc
pop
mov
bound
cmp
push
repz
jns
fcoml
or
pop
lock
inc
mov
aam
jne
std
inc
mov
int
jne
adc
inc
add
jecxz
enter
push
mov
jp
add
jl
pushf
gs
dec
cs
xor
kmovb
pop
in
js
inc
add
xor
lods
cld
iret
je
dec
xchg
cmc
push
das
testl
ljmp
cmp
cltd
iret
fnstsw
clc
adc
jb
mov
or
inc
pminsw
movl
mov
cmpb
pop
cmc
fmull
insb
push
stos
fbld
xor
sbb
es
rclb
and
test
dec
push
sbb
dec
xchg
sbb
xchg
add
or
sub
cltd
cmp
movsb
jnp
sub
icebp
mov
add
mov
sbbb
adc
dec
mov
fadds
pop
enter
push
lea
dec
rorl
push
not
pop
cmc
push
das
push
js
xchg
bound
sub
scas
push
stos
cld
jnp
icebp
and
pop
das
fsubrs
dec
outsl
jle
push
imulb
inc
inc
jb
push
lods
daa
ljmp
cmpsb
jns
mov
lods
dec
pop
xchg
xchg
shll
push
mov
jmp
or
jae
inc
ss
lahf
mov
inc
ret
insl
inc
jne
or
sub
imul
repz
mov
jle
iret
adc
aas
jbe
lods
cltd
inc
cmpsb
xchg
mov
fisttps
mov
in
inc
pop
fptan
mov
stos
push
idivl
jg
xor
shrb
nop
xor
sub
jle
or
push
fisubrs
or
scas
shrl
cmp
xchg
je
and
adc
jle
push
mov
add
jle
fdivrl
xor
xor
data16
xchg
les
pop
loope
jle
test
fdivrl
inc
frstor
jnp
push
mov
scas
xchg
lret
push
dec
lret
flds
mov
xchg
insb
mov
loopne
mov
aam
adc
lods
pop
das
pop
stos
fwait
push
and
data16
sub
ljmp
sarb
test
les
aaa
lods
cwtl
push
adc
xor
adc
out
sbb
inc
aaa
pop
ret
bound
cld
pop
adc
push
adc
adcb
shlb
gs
mov
cmp
and
pusha
lea
sahf
sub
loope
xchg
popf
sub
idivb
sub
mov
nop
adc
inc
lcall
pop
xor
addr16
addl
fyl2x
add
and
dec
jl
imulb
mov
and
fbld
outsb
insl
cmp
cmp
adc
dec
mov
mov
cli
loopne
in
int3
aam
jecxz
dec
xchg
arpl
xor
les
sub
sbb
dec
test
and
jae
aas
pushf
cmp
scas
sub
xor
jo
adc
sub
xor
pop
pop
dec
fs
jmp
lds
pop
mov
notb
push
mov
adc
push
xor
lds
jbe
inc
fbstp
pop
xlat
shll
pop
lret
pop
add
cmc
or
out
dec
and
in
and
neg
pushf
out
pop
or
push
push
sbb
cmp
xchg
shll
mov
pop
mov
push
add
add
or
in
cmp
xlat
ffreep
test
stos
aad
or
lahf
mov
test
cmp
sbb
inc
movsb
sbb
cmp
ss
in
cmp
aaa
push
loopne
ret
sub
and
sbb
outsl
xchg
inc
mov
push
mov
roll
lcall
adc
xchg
stos
aas
jp
pop
and
jae
movsb
dec
mov
fs
orl
adc
inc
shr
xchg
out
xchg
dec
icebp
mov
sti
and
outsb
push
dec
in
mov
aad
mov
cmc
int3
arpl
rclb
xor
mov
fmull
sbb
icebp
scas
das
into
std
jl
cmp
addl
adcl
lret
mov
andl
sub
inc
mov
pop
cmp
icebp
popa
fstps
mov
inc
add
bound
mov
inc
in
nop
fdivs
fsubs
mov
push
arpl
out
lret
push
dec
and
rorb
cmp
pop
aam
or
cmp
add
fwait
sbb
and
out
imul
jg
cmc
mov
inc
xor
sbb
cmp
mov
pop
mov
fidivl
pop
pop
xor
lret
push
pop
mov
std
jbe
imul
mov
call
fildll
dec
mov
xchg
pusha
lods
inc
loopne
test
jmp
test
xchg
out
dec
mov
pop
xchg
jno
xor
and
lahf
pop
push
mov
sbb
add
or
push
repnz
add
lds
int
cltd
or
inc
fsincos
jae
mov
pop
mov
sub
outsb
cmc
push
clc
cld
xchg
push
mov
or
fsubl
cmp
mov
sbb
stos
pop
xchg
stc
xchg
push
inc
adc
lret
cli
add
jmp
test
xchg
aaa
dec
insb
sbb
dec
inc
mov
sbb
jb
sahf
imulb
fmul
sahf
cmp
push
lcall
sarb
lods
test
pop
mov
outsl
pushf
jns
jecxz
ds
cmc
fsts
fcoms
pop
rcll
jecxz
rorb
outsb
jecxz
sub
xchg
fsubrp
ds
push
pop
push
ret
decl
mov
push
mov
daa
hlt
loop
jae
add
std
mov
aas
arpl
in
jb
stos
mov
pusha
and
cwtl
push
xlat
mov
mov
test
sbb
push
and
into
gs
fsubrl
ret
es
inc
add
lcall
loopne
add
lock
in
add
icebp
in
enter
ret
insb
lock
pop
cltd
mov
loopne
les
dec
xchg
faddl
mov
cmp
clc
push
fsubl
mov
mov
xor
insl
mov
lcall
mov
push
add
inc
test
ljmp
stos
pop
pusha
ss
mov
dec
push
push
pop
mov
movsb
mov
lock
xor
cmp
xor
sbb
loopne
mov
push
and
ljmp
aaa
cwtl
xchg
mov
add
adc
out
sub
cmp
sahf
jb
sub
push
mov
mov
xchg
and
jg
cmp
mov
mov
in
aad
cmp
or
push
test
aam
inc
inc
addr16
aam
out
adc
and
sbb
inc
repz
out
mov
dec
stos
sub
mov
das
movsb
add
out
mov
iret
inc
scas
scas
and
and
and
pop
out
addr16
sbb
add
iret
sahf
ds
dec
test
dec
cmpsb
adc
mov
cwtl
push
sub
outsl
mov
xchg
dec
lods
test
xor
mov
in
lea
iret
ds
jp
stc
sub
jecxz
aam
rep
cmp
sbb
push
bound
sbb
xchg
pop
xor
dec
scas
mov
rol
xor
fnstcw
imul
movsl
push
dec
cwtl
out
jl
mov
ljmp
cli
or
mov
fwait
nop
lds
int
aaa
cltd
cmpsb
add
inc
test
sub
xor
xor
aaa
nop
xor
fxch
dec
js
fwait
movb
pop
clc
or
fchs
fcmovnu
dec
jns
ja
call
pop
cmp
enter
in
push
inc
mov
ljmp
or
push
hlt
and
orb
clc
jo
loop
xor
mov
xlat
fistl
pop
aas
scas
mov
mov
pop
arpl
lea
push
ffree
mov
push
add
mov
test
pop
popf
test
in
rcll
cwtl
add
and
fimull
sub
mov
mov
pop
sub
push
cwtl
mov
jecxz
cmp
pop
mov
in
mov
daa
push
mov
jecxz
in
fldcw
mov
lock
pop
add
int
jmp
fnstsw
addr16
test
sbb
xlat
push
and
std
ljmp
inc
decl
lds
push
jne
pop
shll
pop
repnz
in
add
ljmp
jge
insl
adc
test
push
mov
and
inc
divb
xchg
test
ja
pop
jp
pop
gs
push
cwtl
movsl
push
pusha
out
mov
xchg
jp
sar
xchg
dec
and
push
and
jnp
jle
scas
sub
daa
jl
outsb
bound
test
mov
pusha
xor
fsts
loop
adc
stc
push
mov
out
dec
xor
je
js
icebp
and
sahf
and
inc
movsl
mov
out
push
inc
jb
stc
mov
lret
dec
outsb
or
ret
lea
std
ja
test
or
push
and
test
mov
dec
lret
ljmp
inc
imul
add
jl
pop
jo
adc
enter
mov
call
dec
rcrb
and
inc
cli
fbld
incl
sti
and
adc
das
sub
fimull
push
inc
mov
adc
mov
add
or
mov
test
mov
les
jnp
add
dec
and
ljmp
sti
enter
mov
push
out
and
andl
rcrl
popf
loope
sub
lock
mov
pop
idiv
fnstsw
or
dec
aam
imul
filds
sbb
inc
inc
push
push
lea
rcll
data16
rolb
lcall
insl
sub
call
lret
inc
in
std
xchg
fisubrs
cmovbe
adc
cmp
cmpsl
in
mov
lea
inc
cmp
push
push
and
arpl
das
fsts
test
push
dec
and
int
jp
push
add
sbb
pop
out
xchg
mov
push
and
into
sti
cmp
jge
subb
popf
sahf
int3
xchg
lahf
jb
xchg
xchg
pop
loopne
mov
xor
insl
or
std
test
push
mov
dec
jns
shr
xlat
dec
mov
iret
jne
fldenv
pop
pop
mov
xchg
fcoml
cmp
jge
dec
dec
mov
enter
jmp
aad
mov
pushf
pop
lea
and
mov
divb
dec
aas
mov
pop
popa
insb
pop
mov
ja
pushw
or
or
shll
cmp
dec
add
sub
imul
mov
outsl
adc
dec
pop
push
jb
ljmp
popa
ja
ror
lahf
cwtl
xlat
mov
adc
cmp
mov
movsb
pop
inc
push
fs
push
js
dec
and
or
ss
mov
loope
xor
xlat
aas
pop
jmp
cmpsl
fwait
pop
fistpl
push
or
and
mov
repz
push
je
imul
mov
roll
mov
fdivrs
fcomps
cmp
pop
mov
mov
push
add
insb
dec
push
sbbb
shl
push
xchg
ss
test
xchg
arpl
outsb
leave
xor
jbe
out
pop
sub
out
test
sub
and
push
ret
jne
iret
dec
js
jno,pt
mov
inc
js
add
test
xchg
loopne
or
jle
mov
or
je
xchg
sbb
adc
out
pop
push
enter
test
jge
aad
andl
test
and
movsb
jg
mov
push
inc
aad
dec
pop
xor
and
push
das
push
ret
bound
adc
or
imul
loopne
jb
stc
js
lea
hlt
xor
or
int3
add
cmpsl
test
or
adcb
ds
les
adc
pop
add
push
adc
shl
mul
lods
repnz
test
pop
xchg
jecxz
dec
and
fs
push
imul
cmc
mov
inc
js
mov
and
movsl
dec
xchg
lahf
outsl
push
jno
aad
enter
into
xor
xchg
cmc
aas
fs
pop
lods
test
sbb
fadds
adc
mov
scas
test
fmuls
mov
addr16
adc
cmc
call
mov
adc
test
aam
test
add
and
jae
aaa
xchg
pop
xor
cmp
ss
push
add
je
hlt
cmp
dec
sub
gs
stos
fsubp
dec
mov
inc
lcall
inc
std
shr
pop
push
mov
sarl
cld
xchg
pop
lock
mov
stc
cld
mov
mov
mov
xchg
sti
cmp
repnz
enter
loop
out
xchg
lret
adc
sbb
std
bound
push
push
mov
or
sbb
iret
fcompl
in
cmc
pop
outsb
mov
dec
insb
sbb
or
mov
sti
sbbl
cmc
cld
imul
clc
adc
mov
push
movsb
pop
ljmp
dec
dec
adc
ud0
leave
jp
push
xchg
je
sbb
sbb
xor
ds
repnz
push
test
les
and
call
in
cmpsl
hlt
push
sbb
or
ds
sbb
mov
xchg
mov
loopne
ljmp
movsb
outsl
pop
jns
dec
sub
aad
sub
sub
data16
push
push
xlat
clc
xchg
pop
jne
jb
shl
aaa
mov
js
mov
mov
aas
out
inc
fldenv
mov
xor
daa
jle
sbb
xor
add
add
es
fstpl
pop
nop
push
adc
rep
ret
leave
stos
imul
ja
popf
fildll
outsl
sub
loopne
fildl
lods
repnz
push
mov
faddl
push
jne
fistpl
push
sbb
cmpsb
sbb
mov
cmp
imul
je
scas
int3
in
js
in
dec
pop
adc
pop
and
fsubrp
int
scas
movsl
mov
and
fisttps
enter
leave
inc
xor
xchg
psubw
lock
xchg
mov
adc
addr16
and
pusha
outsl
pop
sub
stos
pavgb
xchg
or
int
arpl
jp
lss
mov
mov
inc
xor
pop
stos
mov
sub
mov
dec
inc
mov
leave
lds
fildll
sbb
add
jl
stos
inc
and
fs
negl
xchg
shld
ljmp
push
sub
call
std
iret
jbe
sbb
pop
aam
lcall
in
mov
xchg
sub
mov
mov
dec
lods
adc
ss
inc
mov
push
sub
push
in
pop
shrb
push
cs
jg
adc
lea
call
adc
jae
outsl
jae
les
push
or
mov
lds
ljmp
loope
cmp
cmp
cmpsl
inc
pop
pop
std
mov
imul
lret
dec
imul
jmp
mov
sbb
push
or
mov
imul
pop
adc
cwtl
jecxz
bound
xchg
fimuls
sar
stos
xchg
scas
mov
sbb
cmp
xchg
xor
mov
xchg
push
pop
pushl
jmp
push
xchg
inc
lock
sub
lcall
xchg
dec
in
aas
push
pop
nop
and
aam
add
inc
mov
lods
mov
pop
cmpsb
in
inc
and
in
cmpsb
int
inc
cmp
and
js
xorl
dec
sahf
jl
std
inc
out
in
in
lahf
ficomps
fwait
push
movsb
xor
or
stos
fs
pusha
xchg
mov
mov
pop
das
xchg
pop
pushf
pop
jns
call
imul
call
inc
ret
popa
and
rcll
xlat
cli
aam
mov
mov
pop
pop
fadds
push
cmp
cmp
shrb
push
jmp
xorb
rcrl
mov
cmp
inc
movsl
rcrb
popa
add
mov
inc
jmp
mov
xchg
mov
lahf
lahf
je
cmpsb
adc
lods
xchg
adc
gs
or
ja
jmp
cmp
add
pop
stc
test
mov
or
xchg
and
lock
mov
aaa
mov
hlt
repz
sub
pop
or
xchg
in
cs
fs
data16
xchg
hlt
pop
mov
pop
jge
sub
mov
add
int3
in
jge
loope
lods
push
or
fdivp
arpl
call
hlt
push
lock
rcl
cs
or
add
cwtl
clc
imul
pop
outsb
jns
aam
pop
inc
fists
lret
sbb
ljmp
pop
pop
sub
cwtl
xor
jg
mov
mov
add
aas
jl
int3
mov
xor
xchg
pop
in
rcrb
ds
leave
lock
inc
in
sbb
mov
popf
and
or
inc
jg
sub
pop
int
push
jae
aad
dec
lcall
mov
mov
adc
das
stos
sbb
push
sbb
call
outsl
dec
das
mov
ja
iret
add
dec
adc
mov
adcl
and
dec
jno
push
xchg
adc
in
sahf
mov
into
sti
fists
loopne
sbb
cwtl
loop
mov
inc
dec
add
in
or
sub
fwait
bound
dec
mov
ret
in
leave
out
mov
xor
mov
pop
ret
mov
jl
mov
adc
cmpsb
hlt
sbb
out
xor
adc
cs
pushf
arpl
push
pop
loopne
lods
bound
dec
add
pushf
sub
xor
lds
pop
jge
rol
ret
mov
ljmp
fstp
cmp
dec
mov
xchg
pop
xchg
pop
loope
lds
rorb
das
or
mov
repnz
jbe
cmc
jmp
mov
leave
xchg
cli
sbb
fcoms
ffree
xchg
scas
cmpl
mov
loopne
sbb
pop
aaa
fstps
mov
in
mov
js
mov
mov
add
inc
lret
push
dec
fmuls
xlat
hlt
inc
mov
test
pop
sbbl
sbb
in
aas
roll
rcrl
xchg
sub
add
push
push
in
push
stc
out
mov
cmpsl
jg
lds
ja
xchg
sub
add
sti
jmp
mov
push
cltd
jmp
rclb
je
cmpsl
sbb
pop
xor
repz
aam
pop
sub
mov
mov
xchg
inc
test
mov
in
mov
or
inc
das
aad
jno
and
jmp
sti
sbb
dec
cmpsl
les
shrb
stc
jno
insl
adc
frstor
inc
dec
jmp
xchg
mov
mov
push
fnstsw
bound
clc
stc
loop
jo
aad
stos
call
or
fcmovnu
jns
jne
das
std
add
mull
sub
je
rcll
ss
incl
or
inc
ljmp
push
cmc
test
add
jbe
cmp
add
push
xchg
fwait
push
testl
push
pop
xchg
jmp
out
pop
fisubl
data16
dec
push
xchg
insb
adc
and
cmp
popf
ret
push
sbb
jle
pushl
insl
lods
xchg
in
out
add
or
pop
inc
shlb
lahf
sub
jg
sub
jbe
popf
lahf
ljmp
je
sub
leave
aas
sahf
out
aad
mov
push
ss
dec
ret
test
mov
adc
mov
adc
xchg
push
cli
addl
sub
or
rep
xchg
fwait
imulb
jl
loopne
push
and
mov
vmwrite
icebp
sahf
fwait
jns
dec
xchg
jno
cmp
ficoms
mov
mov
outsb
jae
insb
lock
add
inc
mov
mov
sti
lods
icebp
in
inc
aam
dec
in
movsb
cmp
cmpsl
push
cmpsb
push
xor
repnz
push
in
sbb
cltd
dec
imul
sub
iret
pop
inc
cmp
arpl
mov
les
out
out
pop
or
sbb
stos
loope
fwait
ret
movsb
repnz
je
inc
mov
mov
cltd
aad
stos
or
lret
popf
mov
pop
inc
shrb
aas
icebp
bound
imul
mov
int
sub
das
je
mulb
bound
add
mov
dec
cmpb
sub
push
inc
sbb
pop
adc
or
les
and
push
mov
andb
lock
mov
jo
scas
lret
insl
popa
adc
jbe
mov
sbb
sbb
imul
cmc
dec
or
pop
mov
jmp
popf
add
imul
sarb
pushf
xor
mov
data16
xchg
std
daa
into
popa
cmp
mov
scas
iret
cli
mov
movsl
add
add
gs
xor
jno
cwtl
xchg
out
mov
mov
lahf
xchg
loop
cmp
push
inc
push
sahf
cmp
jbe
mov
mov
jo
xor
dec
or
mov
sbb
cli
xor
push
loope
adc
stos
out
rcrl
out
push
call
rep
xchg
pop
pop
cmp
pop
push
addr16
jp
in
in
daa
pusha
adc
cs
adc
nop
cmp
mov
ljmp
push
nop
mov
rolb
cmp
cli
fucomp
cwtl
dec
fnstsw
sub
push
cmp
lods
jns
ds
jnp
test
lcall
rcrb
xchg
mov
dec
call
pop
xor
movsb
dec
jl
jno
sbb
mov
mov
sbbb
leave
scas
jns
xchg
mov
jge
stc
xor
les
or
mov
jp
adcb
xchg
sbb
pop
xchg
js
ret
outsb
or
jp
cmp
data16
jmp
sub
mov
in
repz
xchg
pop
xchg
mov
mov
ja
jo
aad
sub
popa
stos
subb
or
cltd
subb
add
and
jg
fdivrs
inc
imul
hlt
addl
or
mov
xor
sub
cmc
lock
in
pop
sbb
cmp
insl
jg
adc
push
outsb
mov
shll
dec
sub
cmpl
xchg
jb
daa
incb
jns
pop
inc
stos
jae
mov
xchg
std
test
loopne
mov
cmp
fistpll
sbb
cld
adc
cmp
and
mov
cmp
inc
sub
xchg
lahf
inc
add
enter
sbbb
jae
dec
jb
dec
dec
lcall
loop
inc
insl
push
mov
scas
ficomps
ja
jge
mov
xlat
mov
inc
les
jecxz
jmp
sysexit
mull
aaa
pusha
data16
inc
sbb
mov
mov
stos
xchg
je
test
mov
xor
les
imul
jno
jne
in
xor
cmp
mov
sar
pop
jb
scas
test
adc
mov
jge
out
dec
jle
jmp
out
mov
and
mov
and
jnp
dec
jo
jle
and
jle
out
xchg
gs
rcr
repz
dec
cmp
mov
fists
push
xlat
sahf
or
cmc
adc
popa
lret
mov
daa
adc
leave
into
popa
adc
icebp
ss
jns
data16
jb
xchg
dec
xchg
pop
sub
mov
sub
sbb
mov
sbb
test
pushf
push
or
jge
jno
sub
sbb
adc
hlt
add
push
xor
out
imul
clc
cmpsb
orl
imul
lahf
or
add
push
pop
mov
jns
movsb
out
jnp
add
mov
mov
nop
daa
bound
movsb
cmp
cmp
jl
mov
je
mov
js
jmp
lea
lods
cmpsb
jb
test
pop
sub
sub
mov
into
push
cltd
addr16
jg
hlt
loop
aam
adc
mov
add
dec
rorb
data16
sbb
outsb
pop
pop
shl
pop
cli
add
pop
loop
jp
leave
xor
and
inc
sbb
xlat
pop
es
mov
xchg
popf
fdivr
jo
add
jge
mov
cmpsl
xchg
mov
cwtl
insb
mov
shlb
adc
pop
pop
jb
mov
mov
fs
pushf
jne
jae
sbb
notb
inc
add
mov
lret
and
add
jmp
rorl
sbb
xchg
mul
data16
into
lret
jno
and
out
lea
out
xchg
jns
sti
cmp
xor
hlt
jne
sub
cmp
push
aam
test
mov
mov
cld
push
addr16
jg
fs
mov
dec
xor
leave
adc
jl
pop
inc
stos
push
xor
sbbb
jnp
adc
push
lahf
pusha
loope
push
loopne
cli
ficompl
lods
mov
mov
fwait
das
ud2
insb
imul
ret
push
sub
ljmp
jns
in
out
jmp
cmp
or
andl
sub
lds
sbb
andl
or
mov
adc
adc
dec
jl
xchg
xchg
jp
xor
mov
push
lods
mov
jecxz
pop
scas
or
cmp
data16
out
sti
fsubrs
adc
push
xlat
xchg
add
or
ret
insb
sub
aaa
in
dec
in
and
add
xor
and
jmp
int3
sub
and
inc
subl
jno
pop
pop
not
pushfw
pop
mov
cld
cmp
lods
pop
je
mov
je
sbb
cmc
pop
jge
ds
pop
aad
mov
in
mov
repz
jno
fwait
mov
popa
call
stc
stos
in
outsl
cmpsb
and
dec
test
or
pop
lods
push
ss
sti
xchg
fcmovnbe
and
addr16
mov
outsb
add
sub
fsubrs
std
push
leave
cli
adc
xchg
pop
sub
in
xor
imul
fbstp
mov
pop
push
add
mov
push
dec
push
jl
xorl
jecxz
sbb
adc
sti
idiv
out
adc
into
in
daa
sti
imul
adc
shrl
mov
shrb
fsubrp
and
int
push
pmulhw
fistpl
and
push
mov
mov
mov
mov
mov
dec
xchg
insl
adc
mov
xchg
mov
mov
adc
jle
sub
mov
les
mov
mov
push
int3
int3
inc
ljmp
cmpsl
pop
pop
inc
pop
lcall
add
adc
mov
cltd
aam
pop
sahf
lds
fldcw
lods
popf
mov
imul
or
iret
fidivs
push
adc
cmp
enter
and
mov
in
fildl
lods
cli
dec
and
jo
out
pop
je
test
sbb
imul
cmc
lahf
fsubrl
jp
push
or
xchg
xor
or
adc
and
jne
xchg
leave
pop
divl
mov
sub
adc
popa
dec
aaa
xchg
inc
jno
outsl
jmp
iret
jmp
jge
xlat
cltd
xor
lds
test
jp
xor
dec
lret
movsl
in
mov
in
cld
pop
and
xor
lock
jp
decb
pop
or
push
mov
cmpsb
leave
mov
imul
sub
jns
lods
sub
pop
stc
out
addl
stc
aam
sahf
dec
cmp
jne
pop
aam
cmpsb
rol
popa
or
in
scas
inc
adc
in
fstl
jb
push
pop
iret
inc
sub
cltd
dec
push
sbb
adcb
insb
in
pop
dec
cltd
pop
flds
mov
mov
das
cmp
xor
in
mov
addr16
cmc
lods
xlat
pop
sbb
xchg
popf
push
jnp
lods
adc
hlt
fs
stos
jle
pop
mov
cltd
sub
push
xchg
pop
inc
inc
pop
call
insl
dec
mov
pop
push
xor
ds
pushf
nop
ljmp
test
cmp
push
xchg
dec
int
icebp
mov
xor
mov
add
js
fidivrl
inc
test
mov
addr16
cmpl
mov
xchg
add
and
push
iret
daa
xchg
jg
or
imul
js
aam
punpckhbw
dec
lea
subl
mov
fwait
std
fwait
repnz
inc
clc
cmpsb
mov
mov
dec
mov
mov
add
sbb
adc
aaa
aaa
mov
into
cmpsb
mov
outsl
fldcw
lock
add
mov
daa
lret
in
das
add
and
mov
push
or
sub
xor
push
mov
xchg
fadds
cld
lahf
mov
mov
test
in
out
mov
enter
cmpsb
rolb
lcall
loope
sarl
mov
sub
mov
mov
addr16
ja
xlat
mov
sbb
insb
test
cmp
movsl
mov
sbb
inc
pop
push
scas
jnp
aas
dec
call
lcall
popa
xchg
fimuls
sbbb
cmp
mov
adc
pop
pushf
iret
es
jo
ret
adc
sub
and
or
pop
scas
xchg
clc
nop
clc
aaa
cmpsb
aaa
dec
in
mov
test
insl
rcr
rcrb
adc
pop
movsb
push
ss
aas
and
js
outsl
xor
adc
cmp
jmp
mov
cwtl
sbb
int3
xor
fmull
movd
out
aas
xor
push
xor
cltd
or
push
in
xchg
fstpt
call
mov
lock
add
lock
xlat
gs
cwtl
stos
movsl
lock
xchg
jmp
adc
rcr
cld
inc
xchg
shll
fildll
mov
sub
sub
sub
push
mov
sbb
push
push
or
call
xor
push
aaa
js
cltd
cmp
add
jg
pop
pop
push
int
fldl
cld
call
mov
adc
add
aad
mov
imul
mov
sub
cmc
add
cld
mov
ret
dec
incb
call
push
xchg
mov
loopne
push
fidivrs
subb
dec
leave
jns
cwtl
test
jge
inc
ds
ret
rcll
fisttpl
out
and
mov
icebp
jmp
or
xorb
or
push
pop
ret
movsb
and
sbb
add
push
dec
sub
imul
push
jl
leave
push
sbb
mov
pop
jg
insb
mov
xchg
cmpsb
mov
xor
sbb
mov
adc
jle
sub
pop
adcl
stos
in
sbb
mov
std
stos
lock
aas
adc
inc
ja
into
inc
jb
adcb
adc
push
es
out
out
jle
test
adc
xchg
dec
lret
clc
icebp
out
mov
mov
popf
fidivrs
ret
bsf
cmp
andb
test
dec
rcrb
std
and
fldenv
jl
cli
loope
dec
push
repz
pushf
push
call
test
orl
push
and
mov
call
fsubl
sti
cmp
sar
loop
pusha
mov
ss
das
dec
into
mov
loop
adc
pop
cld
cmpsl
movb
or
fs
inc
mov
std
inc
jns
sub
pop
les
xchg
jecxz
jo
in
dec
mov
cs
int3
add
ja
les
out
jo
cwtl
dec
scas
cmp
or
mov
mov
js
lds
cmp
cwtl
mov
xchg
enter
adc
mov
jl
add
xchg
mov
ja
mov
leave
xor
lret
loop
stos
aad
repnz
outsb
mov
cmp
mov
cmovge
mov
mov
mov
pushf
dec
mov
xlat
jge
mov
xor
int
pop
add
lahf
jo
ret
inc
lret
mov
sub
int
mov
push
xchg
rorb
mov
insb
adc
fs
cmp
cs
mov
xchg
shll
lods
mov
and
mov
sbbb
pop
jp
pop
cmp
lods
arpl
mov
ds
hlt
sub
fwait
mov
add
mov
xorb
sbb
xor
pop
cmpsl
inc
xchg
mov
or
imul
pop
ret
leave
sti
cld
mov
push
sbb
push
jecxz
or
fneni(8087
decl
rcrl
xchg
rolb
cmpsb
pop
xlat
out
adc
fwait
test
xlat
adc
cwtl
add
xchg
xchg
addr16
fdivrs
mov
xlat
pop
in
loope
popa
mov
mov
mov
jns
pop
cld
out
fcmove
push
xchg
js
mov
jp
fistl
out
or
adc
adc
fnstenv
sarb
push
mov
and
sbb
sti
jb
daa
cmp
xchg
repnz
mov
mov
and
jo
pop
inc
fisubrs
scas
mov
scas
pop
lods
adc
or
cmp
and
and
inc
icebp
inc
shrl
xchg
out
mov
popf
sbb
jp
stos
popa
outsb
jae
mov
ss
cmp
pop
mov
pop
adc
shl
pop
mov
push
fadds
lahf
add
xor
fs
cltd
fldcw
fildl
sbb
jecxz
cmp
push
mov
xchg
mov
mov
stc
jl
ja
shl
mov
mov
adc
cmpl
sbb
es
sbb
pop
and
loope
xchg
mov
or
dec
mov
xor
negb
mov
adc
movsb
mov
pop
loop
sahf
mov
mov
and
cmp
int3
rcr
inc
shl
popa
lods
in
dec
mov
mov
pop
lahf
jge
cwtl
ds
or
jl
xchg
jns
out
jb
xorb
insb
pop
pop
xchg
sub
dec
stc
mov
sbb
mov
mov
stos
or
pop
and
test
js
imul
push
arpl
sub
repz
cmp
imull
lahf
sti
gs
inc
call
sub
lret
sbb
test
movsl
cmc
int3
jno
cmp
scas
out
ljmp
push
xchg
and
mov
jmp
std
push
push
inc
mov
stc
xor
inc
sti
test
push
aas
loopne
mov
cld
push
add
sahf
ljmp
cli
and
das
imul
jge
inc
mov
or
aad
jle
sub
ds
inc
mov
rcrb
lret
lahf
dec
cmpl
int
mov
insl
push
pop
cmpsl
pushf
push
inc
cwtl
push
jl
push
xor
fwait
sbb
mov
lcall
inc
cli
pushf
add
sti
and
in
testb
lods
lret
call
and
mov
mov
xor
push
int3
mov
jmp
imul
out
in
jge
test
nop
dec
js
dec
cmp
inc
ret
push
sbb
xchg
and
scas
mov
test
mov
int
cmp
fcoml
push
push
pop
popa
and
xor
xor
imulb
scas
leave
scas
scas
xor
xchg
inc
fldenv
lds
shl
add
sbb
pushf
addr16
lock
and
xor
in
lahf
cmc
jle
cld
shlb
mov
jno
sbb
mov
pop
and
sbb
xor
dec
in
push
icebp
xchg
addr16
pop
lock
add
push
mov
lea
test
in
pushf
daa
lcall
jb
vpsrlq
xor
sub
fdivl
dec
mov
int
cmpsl
lcall
dec
int
nop
cmp
fstpt
cmp
das
add
outsl
mov
int3
shl
insl
or
lret
cmc
mov
dec
cmp
cmp
or
push
rcll
xchg
pop
add
out
stc
cltd
in
jg,pn
xor
and
in
fxch
sarl
out
arpl
loopne
jmp
adcb
or
mov
cld
jge
dec
add
jnp
mov
out
enter
jl
stc
pop
fldcw
and
dec
pop
pop
and
sub
xchg
mov
rol
mov
mov
insl
push
mov
imul
sub
je
push
test
cmpsl
mov
rol
mov
in
cmp
adcl
push
sub
inc
inc
or
lock
out
pop
pop
push
stos
les
inc
out
aad
ret
inc
jp
je
sbb
sbb
stos
xor
sbb
sub
stc
mov
adc
xor
sahf
add
aas
jbe
push
jnp
jp
add
in
fcomp
cmp
push
mov
insb
scas
cwtl
repz
cmp
inc
lret
icebp
repnz
in
sahf
aas
cli
lea
add
cmp
repz
and
push
popa
fisubs
adc
xchg
out
mov
stos
shlb
ljmp
inc
or
jb
imul
lret
and
jmp
jbe
decl
shll
mov
dec
insl
mov
or
pop
push
cmpsb
in
mov
add
push
mov
lock
jbe
pop
jae
jbe
jae
pop
adcb
in
dec
in
js
shl
push
jmp
mov
add
movsb
scas
loope
jo
mov
test
push
xor
cs
addb
cs
incl
cmp
pop
cmc
mov
enter
into
mov
inc
sub
flds
mov
jg
mov
xchg
mov
test
fcoms
je
cmpb
loop
adc
in
ret
pusha
dec
outsb
bnd
add
jmp
clc
lods
inc
mov
lret
mov
fisubrs
sub
mov
mov
jb
aam
pop
or
call
loopne
cwtl
add
lahf
test
pop
cmp
sub
lds
push
insb
jo
lret
sbb
mov
adc
scas
negb
sarl
mov
ret
pop
xlat
ljmp
dec
add
add
aaa
pop
ljmp
cmp
cld
xor
pop
sbb
inc
mov
or
xchg
les
sub
into
mov
pop
jo
add
ds
adc
mov
cmc
pop
sbb
pop
out
mov
aaa
lock
int3
fwait
cld
lds
cmp
adc
dec
cli
movl
mov
jns
pop
push
mov
sbb
sti
hlt
pushf
jnp
fiadds
jae
pushf
ljmp
inc
adc
and
and
rolb
xchg
mov
jns
fsubrs
jne
sbb
ja
mov
xor
cli
hlt
sub
sub
mov
iret
xor
adc
and
sub
les
scas
mov
les
cli
fwait
cmp
lock
ja
jb
push
or
cmpsl
in
imull
push
jp
scas
lock
ret
js
sub
mov
nop
adc
mov
sbb
cmp
lret
addr16
xlat
xor
adc
cmp
scas
out
mov
pop
adc
mov
jp
and
xlat
xchg
xor
pop
cmpsl
arpl
insb
pop
xchg
out
push
inc
dec
sub
mov
sub
jo
in
push
out
divl
push
pop
mulb
out
push
pop
out
incl
mov
fisubs
inc
jo
xchg
test
mov
xor
mov
adc
leave
addr16
movl
addr16
sahf
repz
mov
sbb
nop
dec
sbb
sub
jge
pop
popa
cmc
enter
cmc
cmp
nopl
lea
and
push
sub
sub
rcrb
popa
jno
jge
push
mov
push
jecxz
ret
inc
and
mov
pop
dec
popa
cld
mov
gs
pop
aas
pop
xchg
aaa
push
inc
fidivl
sub
adc
pop
data16
push
ljmp
pop
rolb
pop
inc
push
sti
test
repnz
xor
adc
mov
jne
pop
jecxz
mov
in
repnz
decl
adc
xchg
push
push
fcoml
inc
popf
gs
bound
into
inc
jge
out
test
pop
or
repnz
add
lds
lcall
mov
lcall
cmp
adcb
jge
mov
loopne
sub
rcl
imull
bnd
out
sub
xor
aad
xchg
sbb
adc
lea
les
lret
push
add
mov
loopne
dec
sti
sahf
enter
jp
gs
adc
adc
or
xchg
andl
adc
jmp
jae
mov
sub
loop
and
lahf
in
loope
inc
call
data16
idivb
push
test
mov
stc
int3
stc
mov
mov
leave
popa
add
push
dec
push
and
mov
jl
jge
fcoms
sub
mov
inc
add
into
xchg
push
jmp
adcl
leave
dec
mov
andl
dec
jbe
pop
mov
outsb
fld
xchg
and
mov
ret
cs
or
orl
jae
or
mov
stc
lock
cld
mov
ja
aad
cmp
stos
mov
inc
push
aam
lcall
pushf
popf
sub
sbb
pop
jmp
jle
addl
sarb
pop
icebp
lods
xchg
inc
addl
dec
ficoms
ja
or
insl
lods
imul
xchg
idivl
dec
insb
cmpsl
mov
dec
pop
jmp
inc
loopne
enter
mov
sub
mov
aas
inc
pop
mov
inc
sbb
jae
add
lods
ret
push
je
fiaddl
leave
pop
fistpl
push
bound
out
mov
xchg
int3
out
outsb
shrb
test
loop
dec
pop
xchg
or
lods
jns
popa
addr16
push
adc
push
ret
aaa
mulb
add
push
fdiv
insb
std
das
dec
testb
pushf
aaa
mov
fucomp
push
adc
jo
sub
and
push
into
mov
cmp
lahf
pusha
xor
or
clc
lods
test
pop
popf
mov
adc
mov
lret
bound
out
inc
popa
dec
icebp
xlat
in
xchg
mov
mov
fstps
scas
adc
cmp
insl
jns
or
cmpsl
or
imull
call
mov
scas
sub
push
dec
or
fsubl
mov
mov
mov
ds
repz
mov
xor
pop
cmp
sub
ja
sub
popf
pushf
inc
out
mov
lcall
data16
sti
js
and
mov
sbb
fisubs
in
xor
dec
push
mov
jl
mov
mov
lahf
insb
push
cmp
aam
popa
mov
jns
xor
mov
mov
add
dec
int3
inc
stos
in
and
add
sbb
pop
push
or
fwait
pop
adc
push
adc
outsb
mov
js
sub
or
push
cmc
pop
fxch
dec
xchg
jg
dec
jecxz
and
imul
lds
xor
in
fwait
in
push
jae
ljmp
mov
add
into
mov
not
mov
cmp
sub
push
mov
data16
loop
xlat
jnp
adc
mov
jp
cltd
jne
shrb
add
fdivl
shlb
or
stos
sbb
hlt
bound
repnz
aaa
movsl
rep
mov
int3
pop
add
mov
popf
push
popa
cmp
ficomps
rcrb
xor
pop
push
xchg
mov
and
push
mov
roll
xor
sub
mov
or
or
cmp
jl
inc
dec
pop
xor
xchg
iret
rclb
xor
inc
jnp
push
fcoms
mov
jae
push
pop
adc
jns
fcmovnb
pop
and
or
sbb
cmp
jns
add
out
ror
gs
mov
mov
xor
enter
xor
nop
mov
ss
pop
mov
lds
cmc
sti
adc
aaa
in
lock
flds
jnp
out
inc
test
lds
cmc
dec
mov
or
in
pop
insb
add
cmp
fisubrl
sti
jp
shl
mov
in
loopne
and
pop
sarl
das
xor
cmp
push
lds
xchg
xchg
int3
cmpsl
data16
imul
xchg
mov
jb
xchg
in
iret
xor
mov
in
fwait
jmp
pop
movsl
aam
sub
mov
leave
jb
ss
dec
scas
insl
xchg
pop
inc
xchg
cmp
flds
jmp
xor
or
pop
int
insl
and
scas
leave
adc
dec
inc
loopne
cmpsb
add
jb
movsb
pop
dec
push
sahf
sahf
sub
xor
fnstcw
andl
mov
jno
fs
pop
mov
rcrb
adcl
jae
push
aad
icebp
mov
dec
or
mov
mov
data16
sbb
mov
js
cmp
scas
mov
push
int
inc
out
pop
fwait
mov
aam
loopne
sahf
or
mov
dec
jne
lock
stc
pushf
push
xor
pop
imul
pop
mov
fildll
mov
jns
xor
mov
push
sub
cli
sbb
adc
push
push
fcoms
mov
ja
jbe
mov
arpl
adc
jle
mov
mov
imul
lods
add
in
lea
les
daa
push
sub
out
repz
js
js
pushf
jne
or
std
inc
out
test
sbb
xchg
mov
pop
dec
ret
movsb
xchg
sub
mov
call
pop
mov
cmpsb
mov
movsl
mov
addr16
jmp
cs
dec
shll
adc
mov
aaa
dec
sbbl
cmp
les
and
std
pop
mov
xor
incl
rolb
stc
fimull
cmc
jmp
fisubs
imul
add
popf
push
or
neg
sub
mov
sbb
and
pop
pop
mov
lahf
insl
jecxz
aam
gs
sbb
jne
pop
push
sti
fdivl
sub
dec
lods
addr16
in
cmpsl
xchg
pop
in
adc
jb
lret
test
add
mov
pop
dec
fwait
jecxz
sub
js
lods
shrl
dec
push
xchg
xlat
popf
cli
outsb
jmp
push
mov
mov
clc
xor
inc
and
xchg
shrl
jnp
dec
push
daa
popf
push
movsb
out
adc
push
fwait
cmpsb
xor
test
fsubr
xchg
xor
adc
inc
or
stos
ret
loop
add
pop
aam
sbb
push
idivl
into
pop
pop
pusha
or
dec
fwait
sub
notl
cmp
lret
into
mov
rolb
imul
inc
pushf
jge
ss
leave
xchg
or
insb
data16
loope
arpl
fsubl
add
xchg
jmp
cmc
rcll
mov
mov
pushf
inc
pushf
mov
xorl
imul
hlt
dec
mov
and
and
jno
cwtl
ds
cmp
dec
sar
sarb
adc
sbb
mov
and
enter
ds
in
jge
aad
pop
dec
mov
jmp
ds
pop
inc
dec
mov
jne
push
cmpl
fmulp
psraw
aas
xor
xor
lcall
dec
clc
sub
pop
xchg
sti
pop
dec
cwtl
xchg
cmp
xor
mov
jle
sbb
push
bound
ror
outsb
test
mov
cmpsl
cmp
and
mov
inc
sub
enter
repz
push
dec
or
out
cli
mov
fs
in
jge
xchg
dec
lahf
popa
push
sub
mov
in
push
std
sub
pop
js
jl
xchg
loop
mov
jbe
or
test
xor
dec
lea
fs
dec
imul
jno
sbb
in
into
stc
aas
popa
loopne
call
cs
cmpsl
sbb
fidivs
in
orl
ficoms
pop
xchg
xchg
in
sti
inc
popa
cld
dec
mul
sbb
lods
es
xchg
mov
sbb
cmp
xchg
rolb
push
cld
dec
inc
push
addr16
mov
pop
add
dec
mov
or
mov
mov
cld
outsb
insb
insb
sbb
or
fdivl
rorb
icebp
lea
in
aam
aam
es
cmpsl
adc
shrl
inc
adc
icebp
inc
xchg
inc
stos
mov
aam
cmp
push
fwait
push
or
or
and
cmp
jbe
sbb
inc
push
rcrb
dec
cli
stos
repnz
mov
sub
imul
cmp
and
sub
ja
pop
movsl
push
mov
mov
imul
stos
push
addr16
sbb
bound
mov
fmulp
in
jp
lret
xchg
mov
inc
imul
xor
or
mov
and
das
imul
xchg
fnsave
mov
dec
stos
lahf
cs
ljmp
push
xchg
push
or
arpl
xchg
xchg
jg
jge
out
lea
mov
out
ja
xlat
mov
or
int
or
xlat
pop
insl
add
rolb
dec
or
movsl
inc
hlt
cmp
adc
and
cmpb
lds
mov
jg
faddl
xor
mov
fdivs
je
add
pop
rcr
add
fisttpl
clc
dec
scas
cmpsl
mov
add
sbb
rol
jns
inc
les
int3
xchg
insb
cmp
push
popa
pushf
add
lahf
mov
stos
mov
sub
pop
cld
push
cmp
inc
xor
sub
nop
lcall
push
xor
sbb
inc
fld
and
jl
push
addr16
test
and
in
fsubrp
jno
ffree
adc
jae
mov
sub
scas
mov
ret
sti
lahf
mov
enter
lods
mov
inc
test
loopne
or
fwait
cld
dec
sahf
stc
in
int3
mov
pop
and
dec
iret
or
sbb
pop
dec
out
jnp
std
fwait
mov
xor
mov
or
ret
jb
adc
and
mov
sub
in
mov
xchg
or
movsl
push
inc
cmp
jo
jl
lds
cmp
xchg
pop
or
fwait
push
push
xor
rorb
movsl
ret
in
sub
jg
rcll
adc
add
mov
mov
jae
in
pop
xchg
push
mov
imul
dec
dec
pop
mov
imul
fisubrs
decb
imul
xor
imul
jge
cld
xor
jge
cmp
mov
loop
jne
jae
test
xchg
andl
arpl
push
rcr
test
xchg
pop
nop
push
in
daa
jo
aaa
cltd
xchg
outsb
cli
push
nop
je
rcrb
jno
inc
cltd
in
jp
mov
icebp
std
test
pop
inc
repnz
jne
adc
cmp
bnd
xchg
dec
mov
movsl
sub
mov
int3
lcall
dec
popa
pop
cmp
pop
pop
push
pop
popf
dec
or
and
lret
xor
sub
popf
jne
mov
stos
push
fisubs
sbb
push
sbb
insb
cli
out
mov
or
lods
ljmp
mov
and
inc
mov
xorl
push
movsl
push
pusha
icebp
push
int3
add
push
mov
cld
xchg
inc
cmc
subb
xchg
outsl
jg
mov
push
cmp
jl
ret
popf
push
mov
push
push
push
adc
out
xor
add
out
inc
mov
pop
lock
mov
and
mov
fdivl
clc
xor
xchg
shlb
or
scas
push
cmpl
ja
and
addr16
jbe
fistps
ret
test
sahf
cmp
mov
and
sub
shlb
pop
dec
fmull
imul
sub
xchg
rcll
test
jmp
popf
mov
divb
jbe
adc
jmp
xchg
fsubrl
add
push
loopne
inc
in
icebp
test
xchg
inc
in
jmp
aam
int
roll
leave
pop
arpl
mov
fcoml
insl
mov
roll
jb
xor
and
lret
jb
outsl
and
aam
jo
or
push
xchg
stos
fists
pop
ja
pop
jb
mov
nop
and
pop
or
insb
mov
jbe
sbb
jb
sbb
sbb
sar
adc
push
mov
in
mov
loop
lcall
mov
ss
js
insl
scas
ret
ss
roll
icebp
add
xor
push
pop
xchg
enter
in
and
dec
mov
sub
sub
jge
addr16
and
lea
mov
or
push
adc
mov
cmp
in
fimuls
flds
xor
dec
inc
pop
shl
xor
pop
fdivrs
mov
sti
fcomps
push
aad
xchg
stos
jbe
push
dec
push
stc
sub
xor
mov
jmp
push
push
fstpl
jp
fsubr
push
pop
cmp
pop
pop
hlt
xor
fsubs
xchg
xor
or
add
xor
sub
adc
int3
and
xchg
fdivrl
jnp
add
outsl
pop
shlb
mov
movsl
scas
pop
add
int
popf
fstpl
sbb
lods
test
jbe
mov
jb
and
and
sub
dec
ret
adc
ljmp
adc
lods
xor
addb
and
sarb
mov
scas
pop
pop
mov
imul
orl
lock
inc
jmp
dec
inc
inc
daa
pop
lcall
add
jp
and
imulb
jecxz
cli
jge
fldl
dec
gs
inc
push
xchg
xchg
enter
out
sbbl
mov
mov
ror
and
mov
dec
fucomip
lods
aad
dec
dec
mov
jg
rcrl
rcrb
cwtl
insl
dec
jg
jbe
inc
or
scas
jo
rcll
and
cld
es
dec
adc
cmp
ret
cs
or
andl
adc
fidivl
jg
lds
loop
ret
cmp
pop
jecxz
mov
aas
xor
inc
rcl
mov
repnz
or
or
adc
lds
enter
movsb
arpl
daa
add
mov
scas
jno
lds
test
cmpsl
lret
cmp
out
addr16
ret
dec
dec
mov
repnz
xchg
iret
cld
fstpl
dec
fs
lea
data16
inc
clc
mov
push
mov
lods
dec
lock
cmp
pop
add
movsb
push
pop
rcll
cmp
push
adc
ss
jo
push
scas
shll
mov
fldl
jae
fimuls
cmpsb
insl
cli
adc
scas
call
sbbb
mov
enter
out
cmpsb
dec
dec
cld
inc
insb
mov
lcall
cmpsb
xor
repnz
pop
scas
xchg
jns
mov
pop
ss
xchg
cmpsb
dec
xor
nop
decl
movsb
jbe
mov
inc
scas
adc
loopne
add
out
cltd
dec
jne
vphadduwq
fs
jl
jge
insb
rorb
movsl
daa
loope
ds
jge
push
xor
xchg
mov
leave
sub
jns
ret
push
mov
mov
mov
std
es
mov
mov
test
sbb
out
fnstenv
fidivl
push
mov
daa
xchg
loope
arpl
push
pusha
dec
ret
nop
jmp
adc
add
std
cld
pop
repnz
sbb
xor
lock
push
xor
lods
cmp
incb
stos
xchg
es
shrl
pop
adc
xor
mov
dec
test
in
imul
lea
sub
mov
mov
cmpsb
fldenv
ds
sbb
mov
cmpsb
out
sbb
mov
mov
fnop
mov
repnz
sub
mov
adc
jmp
jne
lret
jl
lods
test
mov
je
aas
cltd
jl
mov
and
dec
sub
fidivrl
pop
jne
cmpsl
loop
aaa
shlb
addr16
in
lds
in
push
push
mov
jl
mov
mov
lret
lahf
cli
mov
sub
lret
push
ja
scas
or
fbstp
or
cmp
imul
sti
cmp
das
dec
aam
in
aas
iret
cmpsb
jo
lret
lahf
inc
inc
adc
call
jmp
mov
push
mov
and
xchg
rclb
out
std
rcr
mov
mov
jmp
mov
mov
outsb
xchg
dec
inc
je
mov
icebp
pop
icebp
adc
push
adc
inc
in
xor
std
dec
mov
inc
je
std
fnstcw
je
and
xor
mov
or
repnz
loope
popf
xor
sub
sub
jnp
mov
pop
xchg
repz
dec
imul
loop
lcall
xor
pop
cli
xchg
or
ss
sti
adc
hlt
inc
in
loopne
fbld
cs
fisubs
mov
movsb
rsm
ret
aas
xor
mov
ljmp
ljmp
mov
sbb
and
xchg
and
xor
cmp
mov
or
pop
xchg
sarb
add
int
in
push
leave
sub
cmpsl
sbb
xchg
lea
inc
dec
mov
jne
lds
iret
ja
pop
cli
dec
test
pusha
sbb
dec
int
ja
andl
test
push
ljmp
xchg
and
sbb
lods
ja
xchg
rcl
fisubl
addb
cmpsl
testl
stos
mov
push
subb
divl
dec
in
imul
incb
int3
jno
cld
fwait
xorl
fsubs
test
xchg
and
ljmp
cmp
add
out
push
push
inc
fwait
sbb
pop
xor
xchg
daa
stos
cmpsb
fmuls
std
jge
mov
cmp
ja
or
and
lods
in
add
inc
ss
sub
bound
add
cmp
cwtl
and
add
fisubs
clc
xchg
aam
xchg
cmp
push
addr16
aaa
jnp
out
push
add
in
popa
mov
inc
cwtl
sbb
in
imul
sbb
push
add
mov
stos
dec
mov
out
ret
jge
lcall
cmp
out
mov
mov
in
jb
sub
lahf
int3
xchg
bound
push
ljmp
mov
ds
enter
cmp
cmp
outsb
xchg
mov
add
cltd
mov
jae
and
push
fmul
sbb
inc
pop
int3
out
cli
dec
mov
je
push
xchg
dec
mov
sahf
and
pop
mov
arpl
mov
push
push
movsl
mov
sbb
out
xor
dec
cmp
dec
mov
cmp
mov
test
push
pop
or
les
add
sub
push
jle
sbb
lahf
roll
sbb
mov
push
roll
push
mov
das
test
sub
mov
xchg
lea
sub
add
push
push
insb
insl
push
scas
js
mov
pushf
ja
test
xchg
push
or
push
jecxz
scas
sbb
ja
enter
mov
shl
sub
push
xchg
and
mov
lock
sbb
das
int3
jb
iret
das
xor
inc
sbb
mov
adc
sbb
test
xchg
hlt
pushf
inc
inc
int
jecxz
pusha
cmp
jmp
lahf
sti
mov
add
adc
mov
add
mov
xchg
lock
dec
sbb
cmp
mov
mov
inc
sbbl
and
clc
idivl
test
in
pop
mov
mov
jo
xchg
and
aaa
sub
leave
inc
xor
fxtract
subl
test
xchg
std
jb
fisubs
lea
adc
jle
pop
out
test
jnp
out
aaa
stos
mov
negl
ljmp
mov
pushf
sbb
and
scas
and
pop
pop
daa
arpl
es
scas
test
jae
or
hlt
sub
add
sub
cld
jge
xor
rolb
rcr
stc
loop
in
and
std
mov
rol
inc
roll
pusha
push
nop
fstps
lret
dec
in
jmp
loopne
imul
add
gs
data16
cmp
repz
fs
fs
inc
xor
pop
sub
xchg
std
push
scas
push
xchg
lea
sarb
filds
fidivrl
push
xchg
loop
cmp
jg
sbb
ret
test
jb
fdivs
sub
rolb
aam
loopne
sti
leave
aas
and
pushf
jmp
gs
and
out
stc
stc
adc
dec
inc
mov
notl
gs
lds
daa
mov
mov
test
push
shl
ljmp
jp
call
pop
dec
rorb
or
lcall
cld
out
nop
lods
xchg
and
loop
pusha
out
pop
jns
push
mov
add
gs
aas
xchg
icebp
pop
jnp
adc
xor
loope
aaa
xchg
mov
dec
int
in
mov
das
rcrl
mov
dec
dec
xor
out
fwait
nop
es
lret
or
js
mov
dec
pop
adc
dec
imul
fidivl
jb
stc
arpl
cmpsb
ljmp
test
and
aad
in
pop
out
cs
ja
adc
xchg
loope
mov
imul
jb
push
jb
insl
lock
js
daa
cmp
jl
fisubrs
inc
ficomps
cltd
in
push
cmpsl
sub
and
jns
mov
ret
loop
jmp
clc
adc
mov
mov
jge
xchg
ss
stc
cli
scas
push
inc
cli
iret
daa
adc
call
std
div
imul
je
imul
aas
or
mov
dec
negl
and
dec
inc
sub
cmpsb
pop
jmp
inc
pop
lock
out
cmp
push
cs
insb
jnp
adc
arpl
cmp
aad
mov
inc
mov
daa
lahf
out
add
cltd
mov
add
inc
mov
es
stos
mulw
fldenv
push
adc
sbb
sbb
outsb
inc
dec
cmp
aas
cltd
xchg
and
aad
lock
outsl
dec
daa
jle
jp
je
sbb
ret
into
mov
xchg
je
dec
jmp
pop
fnsave
sbb
sahf
dec
mov
mov
mov
sbb
js
push
mov
sbb
sbb
or
lods
dec
sub
sbb
xchg
dec
jp
jno
push
adc
dec
xchg
ret
inc
xor
je
dec
pop
ljmp
hlt
cld
gs
adc
xor
pop
pop
jp
js
addr16
outsl
hlt
fnstcw
push
jnp
mov
gs
dec
das
fwait
add
stos
in
cmp
test
xor
adc
fucomip
lret
sbb
int3
sub
iret
idivl
insl
in
mov
insl
int3
cmp
xchg
and
lea
mov
push
repnz
or
scas
sbb
mov
cmpsl
inc
fldt
inc
stc
add
xor
jmp
dec
dec
push
fbld
push
mov
lahf
gs
xchg
add
adc
pop
inc
aaa
ss
jmp
xchg
aad
ds
mov
pusha
fmull
jns
jp
jmp
jp
mov
pop
mov
mov
jb
popa
sub
push
adc
and
push
xchg
inc
push
inc
gs
xchg
dec
mov
push
inc
xor
scas
cmc
cmp
jp
push
icebp
push
shr
std
jae
les
mov
xor
jo
cmpsb
inc
and
popa
cmp
int
lds
push
or
or
loope
scas
sahf
and
push
insl
cld
in
cmpsb
enter
jle
imul
in
xlat
fstl
adc
stos
ja
loope
jae
inc
jmp
add
jmp
mov
es
in
pop
pop
mov
outsb
stos
aaa
dec
xor
imul
mov
push
inc
lods
popa
and
mov
lret
and
push
push
aaa
adc
ficoml
sub
adc
mov
lods
mov
movsb
jg
test
dec
jge
je
and
push
cs
ficoms
popf
sbb
cltd
movsb
push
adc
test
dec
mov
inc
or
dec
outsl
je
mov
and
sub
sub
dec
test
lock
and
rcrb
sub
or
hlt
neg
stos
dec
test
xchg
inc
js
mov
iret
orb
pop
mov
fsts
xor
test
das
movsb
test
push
push
cmp
ja
sarl
adc
inc
add
mov
sbb
pop
popf
jne
ret
xlat
and
push
bound
leave
rcr
jmp
xor
pop
mov
in
sub
ljmp
xchg
cltd
testb
in
adc
sub
idivl
xor
pop
pop
inc
shrl
jb
and
xchg
and
sarb
mov
xor
test
inc
add
cmp
sub
and
dec
stc
fs
jne
cltd
jecxz
mov
lahf
pop
mov
xchg
jle
aas
addr16
pop
jnp
ret
popa
cmp
outsl
mov
or
pop
in
cmc
cwtl
jb
jecxz
and
data16
inc
jg
jle
ja
clc
pop
je
xchg
dec
call
aas
cltd
lea
sub
push
push
jne
rcll
push
insb
cmp
icebp
aaa
shl
mov
shr
fnstenv
mov
aaa
jmp
stos
mov
push
in
mov
sub
push
pop
jo
jge
cmpl
pop
mov
enter
je
es
dec
dec
or
mov
xor
sub
cs
cli
push
dec
mov
adcl
xor
push
xor
dec
mov
cwtl
pop
in
in
bound
idivb
pop
mov
jno
mov
cs
cli
das
fldcw
or
push
andb
flds
jae
je
in
notb
sbb
or
in
mov
into
jae
into
movsl
and
movsl
cmp
cmp
jae
cmc
mov
xchg
xchg
push
mov
cwtl
mov
fidivrl
cmp
inc
scas
das
adc
add
sti
pop
popa
and
aam
iret
test
cmpsb
pusha
xor
fyl2x
rolb
inc
test
mov
jge
xchg
xorb
icebp
repz
loopne
mov
jnp
dec
push
xchg
pop
xchg
lea
cmpsl
add
xchg
pop
push
dec
dec
xor
pop
jae
fwait
divb
repnz
cmp
xchg
std
sub
loope
lods
sbb
jmp
push
stos
scas
push
sahf
and
clc
lods
js
cli
cmp
das
mov
jns
inc
xchg
mov
fstl
sub
or
shl
testl
sbbl
lock
fidivs
and
call
enter
pop
aad
jge
mulb
std
pop
fwait
ljmp
mov
mov
sub
inc
push
push
or
popa
or
fcmovnb
mov
fs
cli
jne
dec
push
frstor
les
xor
sarl
mov
mov
fstpl
mov
mov
jnp
inc
jp
or
dec
cmp
sub
mov
sub
insl
and
scas
mov
icebp
test
loope
es
and
sbb
mov
mov
or
test
and
or
pop
fidivl
mov
in
mov
jnp
add
iret
lret
lds
jg
sbb
ja
fbstp
push
xor
cmp
xor
xor
in
movsb
and
fbstp
pop
mov
hlt
mov
add
loope
inc
out
or
repz
inc
push
nop
sbb
insl
or
push
xor
hlt
sahf
nop
jl
call
jge
ja
mov
fdivrs
or
or
js
add
mov
shrl
or
xchg
lahf
and
mov
mov
sub
jnp
aad
adc
xchg
mov
nop
pushf
loopne
stos
loope
sarl
xor
rol
out
in
add
mov
fsts
dec
add
lahf
fdivs
and
push
and
das
sub
jge
xor
addr16
hlt
xchg
addb
xchg
pavgb
fiadds
outsb
int3
sbb
dec
lock
pcmpgtd
mov
pop
and
mov
and
adc
inc
jmp
jp
outsb
sbb
int
iret
xlat
dec
movsb
pop
add
pop
lahf
fs
inc
pop
jecxz
bound
popa
loop
loop
lea
mov
rorb
decl
mov
push
and
movsl
dec
push
pop
lret
sbbb
add
sub
mov
push
sarl
pop
ret
lcall
adc
ret
xor
sti
imul
loope
adc
mov
sub
test
add
ss
gs
je
out
cmpsl
pop
xor
push
cmp
loope
fldenv
out
or
dec
lret
mov
fmuls
std
adc
dec
sbb
cli
shlb
cmp
movsb
popl
jle
and
push
shl
inc
mov
jns
mov
shll
xor
cmp
or
pop
arpl
cmp
or
movsl
add
xlat
jp
mov
cmpsb
daa
sbb
adc
mov
bound
add
jge
arpl
and
pop
pop
mov
ret
adc
loopne
cmp
add
cltd
jbe
jnp
xlat
or
filds
jg
adc
outsl
fistpll
stc
add
movsl
enter
jno
jae
popa
and
add
mov
lea
loopne
jge
push
ds
xchg
and
or
mov
mov
cltd
fdivrs
dec
popa
push
jno
inc
inc
lds
xor
cmp
cwtl
jg
xor
lcall
mov
dec
mov
mov
mov
ss
aaa
enter
lds
data16
xorl
jecxz
ret
ret
add
add
xor
adc
mov
pop
mov
outsl
sbb
cmpsl
dec
fsin
add
roll
xchg
loop
adc
mov
xchg
push
movsb
adc
aaa
add
add
pop
mov
add
into
adc
inc
icebp
pop
loope
sbb
pop
push
add
cmp
sbb
sub
sub
mov
outsb
hlt
push
xchg
fmul
std
ljmp
sbb
stc
pop
sbb
test
pushf
lcall
pop
loopne
dec
xor
scas
call
dec
mov
mov
popa
sbb
hlt
lds
and
jnp
fwait
cmp
mov
cwtl
lahf
sbb
dec
int
iret
push
dec
je
push
mov
sub
dec
and
mov
mov
push
mov
cwtl
cmp
add
dec
xor
addr16
xchg
dec
ljmp
push
shl
sbb
dec
jae
ficoms
mov
arpl
enter
btc
cmp
lods
pop
outsl
mov
lret
in
popf
push
lods
jmp
adc
in
into
sub
adcb
scas
repz
addb
xchg
mov
dec
inc
fwait
jecxz
mov
pop
adc
fsubs
mov
mov
lahf
pop
movsl
adcb
sbb
mov
imul
gs
aad
pop
jo
movsl
pop
dec
imul
mov
loopne
clc
es
addr16
andb
mov
fdivs
stos
inc
xchg
mov
es
dec
mov
negb
cmpsl
sub
jb
jg
inc
xchg
in
pop
xlat
and
mov
inc
mov
rorl
xchg
adc
add
divps
loope
cmpsl
adc
scas
sub
lahf
jmp
in
shlb
fs
ds
rcll
sarl
cs
push
lcall
and
fistl
xor
iret
xchg
adc
cld
xchg
aas
outsl
jns
push
insb
xchg
push
test
jno
fiaddl
test
mov
sub
cmpsl
dec
icebp
jns
cmp
mov
xchg
push
sti
push
jb
sbb
movsb
push
add
aas
add
ljmp
roll
push
sub
fcomp
or
pop
jbe
mov
aas
loopne
cli
insb
lods
xchg
mov
mov
jno
cmc
fisubs
sub
push
and
cli
and
mov
cmp
xor
mov
gs
add
js
push
in
faddl
test
fmuls
dec
fildl
jns
loope
dec
jmp
fsincos
cmp
fimull
fdivs
iret
push
bnd
les
test
lods
fisubl
scas
jb
sbb
adc
sub
sbbl
ljmp
stos
xchg
aad
cmp
ljmp
adc
jno
movsl
mov
rorl
inc
scas
or
jnp
movsl
mov
sub
imul
mov
or
jg
pushf
mov
and
mov
add
fisttpll
adc
clc
fnstcw
push
add
cli
fnstenv
test
arpl
jae
xor
orl
pusha
cld
mov
rcrb
gs
mov
sub
inc
fsub
dec
shrb
out
dec
add
push
xchg
xor
mov
mov
sub
dec
pop
pop
fdiv
xchg
cli
lret
lcall
pop
aaa
push
daa
cmpsb
jns
lods
sbb
clc
pop
fmulp
inc
bound
ja
and
pop
std
stc
lret
mov
sbb
push
stos
sbb
rcll
clc
and
jmp
rcrl
sbbl
test
in
adc
jmp
mov
fwait
mov
out
xor
lahf
jne
add
adc
ret
push
mov
jne
in
jg
test
cld
int3
leave
test
or
add
xchg
inc
fcompl
cli
pop
sub
jmp
clc
fmulp
sbb
sub
mov
push
mov
arpl
and
out
dec
inc
lcall
mov
sbb
adc
lods
shl
jmp
mov
popa
inc
arpl
int3
jle
test
orb
mov
ret
sarb
gs
lret
pop
sahf
out
cltd
imul
roll
pop
pop
mov
insl
out
mov
cmp
xchg
sbb
mov
dec
or
xchg
ja
loope
cmp
push
pop
imul
or
mov
popa
mov
in
xor
fwait
sti
pop
lcall
fbstp
movl
cltd
lcall
add
testb
cli
dec
adc
mov
dec
mov
jae
inc
scas
pop
sub
scas
std
test
xchg
mov
cmp
inc
pushf
jl
xlat
pop
add
cwtl
push
fmuls
sbb
decl
jecxz
popa
daa
ret
and
add
clc
into
cld
mov
scas
pop
aaa
insl
cld
pushf
les
mov
cwtl
stc
dec
std
jne
int3
xor
addr16
std
pop
jecxz
xchg
pop
in
push
cmpsl
inc
pop
xchg
inc
cmp
je
rcrb
loop
mov
pop
or
mov
add
or
arpl
pop
mov
sbb
cltd
dec
mov
jecxz
inc
pop
outsl
mov
cltd
loop
xor
xchg
mov
std
adc
sahf
mov
lahf
rorb
frstor
ret
iret
pop
push
or
mov
lods
insl
pusha
cmc
sbb
and
cmp
or
jecxz
jp
int
sbb
ljmp
mov
xchg
lahf
add
dec
loopne
push
push
push
pop
xchg
dec
fisttpl
rorl
sub
jecxz
imul
push
ret
push
push
xchg
jmp
jg
inc
pop
dec
loopne
movsl
fcmovnu
pop
jno
jp
fsubr
popf
push
int3
mov
and
add
mov
pusha
mov
mov
cmp
jmp
add
enter
sti
jae
cmp
cmp
inc
sar
push
add
or
mov
mov
outsb
icebp
or
daa
and
xchg
xor
sarl
inc
jnp
jno
adc
sub
jmp
mov
je
lahf
sub
ret
inc
sub
or
je
fwait
test
push
out
and
popa
jo
mov
sbb
cli
mov
and
in
andb
sbb
in
mov
and
jnp
dec
imul
testl
add
push
adc
xchg
decl
jmp
inc
scas
fstpt
lods
or
das
gs
in
test
jbe
jno
or
sub
push
jbe
test
leave
and
enter
mov
iret
dec
xor
add
push
clc
test
or
cwtl
push
sti
push
xor
lret
xchg
add
clc
or
jp
pop
subb
mov
incb
xchg
cwtl
shrl
sbb
xchg
xchg
repnz
or
aaa
std
mov
icebp
dec
xor
mov
popf
adc
mov
ljmp
in
sbb
xchg
mov
lods
arpl
sub
sbb
data16
jmp
jae
adc
xlat
fcmovbe
mov
stos
add
cwtl
xchg
iret
and
xchg
outsb
cmp
into
test
push
add
fdivp
aas
push
mov
das
pop
fnstsw
mov
aaa
mov
fildll
roll
ficoms
stos
jno
jno
stos
mov
adc
sar
andb
je
or
mov
cmp
sub
insl
xchg
out
je
je
xor
mov
jge
mov
or
imul
mov
push
adc
pop
fcmovbe
add
mov
lods
loop
aad
daa
in
and
fdivl
xor
jo
lods
scas
aas
inc
add
jnp
enter
xor
mov
sahf
xor
notb
xor
cmp
inc
sti
inc
sub
jbe
add
xorb
cmpsl
jbe
inc
es
xchg
push
iret
adcb
add
outsb
arpl
pusha
xchg
sarl
lret
sbb
enter
jl
inc
xchg
subl
out
cmp
dec
xor
dec
sbb
mov
xor
mov
int3
and
fld
xor
mov
mov
ret
icebp
sbb
adc
inc
stos
mov
clc
std
jbe
inc
xchg
push
fldl
outsb
mov
dec
xchg
pop
test
or
imul
mov
add
repz
mov
loope
popa
gs
mov
stos
jge
inc
orl
xchg
jg
inc
mov
pop
in
rorl
enter
les
xchg
sti
mov
lock
pop
ret
xchg
ret
loope
push
add
fsts
dec
lock
loope
ficompl
sub
adc
andl
hlt
adc
test
test
jo
push
dec
cmc
inc
pop
jae
ret
xor
gs
stos
push
add
or
lea
mov
xorl
inc
jne
fdivrl
fistpl
rcrb
sti
call
lds
sbb
push
mov
xchg
rolb
add
lods
pushf
xlat
in
adc
cmp
xor
xlat
adc
call
xor
std
mov
add
ja
aam
or
mov
and
std
adc
adc
lock
xchg
jmp
test
pop
sti
adc
mov
int
clc
cmc
into
jb
xchg
pop
daa
in
js
in
fsincos
arpl
xchg
push
xor
fimull
mov
pop
aas
mov
fadd
hlt
test
push
sti
dec
xlat
repnz
stos
loope
cld
add
push
sbbl
or
int
xchg
or
push
jo
mov
insb
insl
xor
and
cltd
push
in
pop
rorl
cltd
test
gs
cld
sub
adc
sbb
xor
iret
sbb
idiv
xorb
cltd
or
pop
in
jne
fcoms
inc
std
sub
mov
add
notl
sbb
inc
or
sub
ds
mov
push
jne
dec
push
stos
dec
push
stos
popl
push
les
es
js
fistl
xor
fwait
sbb
lock
dec
cmp
cmp
pop
cmp
insb
xchg
dec
adc
sbb
inc
sub
out
sbb
cmp
fcmovnu
shrl
add
pop
inc
jae
add
int
sbb
mov
loop
int3
dec
and
in
pop
ret
and
fisubrs
imul
sbbb
push
fistpl
lods
jg
mov
in
pop
movsl
inc
mov
sbb
daa
in
sub
sub
jg
fidivl
mov
cld
fstps
movsl
push
ljmp
jle
or
nop
xchg
fidivl
mov
lods
daa
and
lea
in
mulb
scas
dec
push
mov
sub
sub
sar
aam
mov
pop
add
out
mov
fdivp
popf
pop
cld
stos
in
mov
xchg
mov
rcrb
sbb
add
ja
je
push
pop
jecxz
ficoms
add
out
pop
sub
jbe
push
add
loop
xor
mov
imul
cmp
mull
rol
jp
aam
into
es
push
xor
mov
xor
pop
and
mov
mov
insl
push
ja
mov
hlt
xchg
jns
adc
and
inc
inc
add
in
imul
mov
loop
push
faddl
in
push
adc
inc
insl
mov
jne
ljmp
dec
out
pop
stos
add
fidivrs
xor
mov
lret
inc
sbb
movsl
mov
mov
xchg
into
clc
and
jmp
imul
fstps
or
xor
xor
add
addr16
push
ljmp
mov
repnz
pushf
mov
and
cmpsl
cmpsl
mov
fwait
ja
cld
in
mov
xchg
out
dec
adc
cli
ss
mov
lret
and
dec
sub
shlb
iret
lods
add
inc
inc
cmp
or
push
pop
addr16
sub
adc
dec
std
dec
push
xor
lock
pop
aas
ss
cmpsl
adc
test
jl
bound
mov
fbld
cmp
lods
or
cs
adc
adc
add
add
movsb
mov
jnp
jge
add
aam
mov
lods
aas
pop
cmpsl
pop
fidivrl
adc
adcl
das
in
cmp
push
sub
fs
decl
aam
cmp
lahf
and
jb
sub
jno
mov
push
imul
js
sbb
sbb
pop
mov
mov
add
jns
fwait
repnz
xchg
invd
sub
pop
or
fiaddl
pop
inc
or
cmpsb
ss
dec
or
pop
mov
xor
pop
repz
cmp
jb
sbb
loop
stos
lea
jge
push
jg
out
push
mov
dec
pop
imul
jle
lock
aas
add
lret
clc
xchg
fs
mov
mov
enter
adc
or
fimuls
mov
lods
mov
mov
aaa
xlat
imul
stc
push
jnp
jnp
adc
push
sbb
arpl
cmp
mov
popf
or
aaa
mov
cmp
and
lret
pop
mov
mov
cmpsb
xchg
adc
adc
push
mov
jne
xchg
lods
faddl
das
sub
xchg
leave
sbb
xchg
sti
aas
out
push
and
movsb
pop
inc
pop
out
jnp
in
nop
ss
pop
fwait
mov
inc
mov
xchg
inc
jge
dec
sbb
lods
lahf
sbb
into
cmpsb
xchg
jae
cmp
lcall
insb
stc
sub
gs
clc
cmp
nop
sbb
mov
mov
sub
push
sub
inc
in
add
push
out
push
sbb
fcmovnb
data16
xor
jl
dec
stos
fstl
icebp
pop
inc
cwtl
mov
cmp
popa
fcoms
dec
xor
xchg
jge
gs
aas
leave
jae
mov
shrl
fistpll
push
icebp
pop
mov
sub
jp
test
loopne
inc
cmpsb
mov
jl
and
mov
ljmp
inc
out
jbe
sarb
xor
mov
xor
lret
cmpsl
enter
lods
out
mov
xor
jne
jp
sahf
pop
mov
cmpsl
add
repnz
jnp
push
sub
leave
mov
mov
inc
jecxz
sbb
shrl
xor
sub
pop
sbb
adc
mov
pop
movsl
inc
sub
mov
adc
cmc
sbb
jmp
imul
or
call
add
fcom
pushl
and
mov
add
jle
not
xchg
mov
push
sub
fsts
stos
loope
lcall
sbb
sub
test
fbstp
cmp
cmp
jle
sahf
inc
mov
add
jmp
sbb
cmp
xchg
mov
aad
mov
and
and
mov
lahf
cli
imul
outsb
jecxz
pop
out
push
dec
inc
add
ret
mov
mov
out
int3
or
int
xor
jl
sub
das
bnd
jbe
aas
aad
mov
adcl
push
sbb
aad
dec
popa
cmp
mov
das
loopne
mov
sbb
mov
jnp
aad
push
and
adc
loope
lcall
data16
enter
xchg
push
lea
pop
js
dec
push
or
adc
ret
mov
add
dec
cs
jnp
sbb
mov
ljmp
pop
mov
std
xchg
inc
sbb
in
sub
and
fmulp
and
mov
jge
inc
mov
cli
repnz
sbb
scas
testl
sbb
xchg
mov
mov
lods
sub
repz
fsubrl
je
cmp
shrl
jbe
pop
incl
pop
lods
sub
sbb
in
adc
dec
xchg
xchg
adc
jo
xchg
xor
pusha
stos
icebp
lds
loop
jle
add
dec
mov
push
and
arpl
xor
add
das
jecxz
pop
and
clc
sahf
xchg
stos
and
outsb
scas
test
adc
xchg
sub
adc
xchg
scas
lcall
in
or
addl
and
call
mov
fdiv
imul
or
cmp
mov
adc
xchg
jbe
je
or
sub
testl
and
adc
fwait
mov
outsb
inc
jbe
outsl
pop
lahf
push
imulb
loopne
cmp
testl
mov
ret
popf
and
or
nop
imul
in
cmp
daa
es
aaa
les
fnstenv
mov
push
xor
andl
lret
ljmp
mov
add
xchg
pushf
mov
sbb
mov
dec
mov
loop
pop
movsb
mov
xor
ret
dec
icebp
jcxz
bnd
mov
mov
ja
cmp
cli
pop
imul
inc
movsl
mov
and
jnp
aaa
orl
jne
pop
mov
sbb
jg
aam
cmpsl
jg
ret
push
cmp
xor
gs
inc
in
nop
ds
xor
xor
push
call
cmp
and
pushf
jge
dec
pop
push
sub
imul
mov
mov
xchg
pop
add
inc
jb
hlt
push
orl
enter
and
ds
mov
push
and
adc
call
fwait
add
fwait
push
cmc
call
movsb
testl
xorb
push
lods
or
add
sub
outsl
mov
xchg
add
insl
adc
or
in
xchg
cs
jg
sbb
xor
leave
rorl
inc
jnp
push
inc
sub
lock
cmp
sbb
push
add
out
mov
xor
lods
call
sbb
test
fbstp
int3
enter
mov
pop
add
icebp
add
in
cmp
ds
inc
mov
jecxz
in
lock
les
xchg
callw
aas
xchg
ret
subb
popf
hlt
repnz
popa
mov
push
lret
daa
sahf
dec
xor
hlt
adc
mov
sbb
sbb
cmp
ss
hlt
sub
push
out
inc
add
shll
sbb
push
and
popf
xor
xlat
push
aam
pushf
cli
inc
cwtl
leave
rorb
out
dec
mov
cmp
int
pop
icebp
jge
scas
push
fstpt
fnstenv
loop
stos
vpackssdw
mov
gs
cmp
or
sbb
dec
imul
jne
cmp
cmpsb
adc
int3
test
rcrl
jge
lret
aad
pop
aaa
or
aam
inc
push
std
stos
stos
mov
lock
data16
bound
xor
shll
enter
ret
mov
je
jmp
lcall
dec
cmp
jb
pop
lds
movsb
fisttps
fs
push
stos
lock
cmp
pop
cwtl
cmp
fdivl
or
stos
sar
cltd
dec
jg
mov
fldl
call
cmpsl
movsb
in
inc
dec
cmp
dec
add
iret
xor
out
and
push
aas
pop
xorl
lcall
push
and
jmp
mov
out
fcoml
outsb
dec
daa
dec
jecxz
testl
ds
xor
xor
and
or
fdivrl
push
xchg
pop
push
jge
mov
lret
xchg
mov
notl
outsb
sbb
push
or
jae
dec
push
in
mov
xchg
loop
sbb
into
adc
in
and
xchg
push
sti
or
jne
daa
cltd
fwait
xchg
in
inc
ficomps
aad
icebp
cmpsb
out
into
pop
aad
iret
in
aam
and
cmp
stos
or
into
cmpb
out
stos
jge
fidivrl
pop
lods
adc
leave
lds
mov
push
cmpsb
xchg
es
or
pop
fxch
xchg
clc
mov
sub
mov
hlt
or
jbe
mov
sti
mov
inc
cld
cmpsl
push
popf
push
cwtl
sahf
fisubrs
jne
mov
jne
sub
sub
sbb
and
jg
nop
sbb
mov
imul
cmp
fisttpl
imul
int
cmp
popf
mov
ds
adc
ds
jmp
pop
cmp
imul
push
mov
add
xlat
jl
xor
pop
mov
ss
dec
fs
out
fldt
jge
gs
dec
xorb
push
sub
adc
loope
lret
jbe
mov
incl
addr16
shr
sub
mov
sbb
add
pop
mov
sbb
jnp
les
cmp
cli
adc
jmp
mov
add
lcall
mov
hlt
dec
jnp
leave
cltd
fidivrl
fiadds
loopne
fwait
out
xchg
dec
sub
pop
rcll
iret
loope
adc
lcall
mov
subl
gs
jo
adc
and
test
push
cmpb
jb
push
loope
mov
imulb
sbb
xchg
shll
popf
sbb
sub
cli
sbb
neg
and
cmp
cmp
pop
outsl
jae
aad
pop
jno
jnp
cmp
icebp
in
call
push
stos
popa
and
in
xlat
and
jns
imul
out
dec
in
repnz
cld
cmpsl
xchg
movsl
out
dec
sbb
lea
fsubs
push
jg
testl
aas
jge
sbb
adc
and
in
stos
sub
test
imul
cmpsl
sbb
shlb
test
jno
add
test
stos
daa
es
or
movsb
cmp
and
mov
shlb
in
das
lret
xchg
add
rcll
test
jmp
mov
stos
pop
aaa
insl
call
scas
mov
lock
aam
cmpsb
gs
inc
cmp
cmp
pop
in
sub
mov
fimuls
jmp
into
in
add
in
out
dec
aad
inc
inc
mov
ffree
ljmp
fnstenv
mov
inc
inc
pop
xchg
dec
cmpl
clc
repz
pop
jae
shl
inc
fistl
aad
jp
mov
xor
out
lret
mov
add
arpl
push
push
insb
ja
push
and
pop
popf
and
mov
out
aaa
add
movsl
sahf
rorl
sti
insl
push
test
xchg
xchg
or
pop
or
mov
stos
in
sti
mov
pop
pop
xchg
pushf
push
pusha
out
addb
idivb
ljmp
mov
xor
je
hlt
sti
inc
ret
sub
mov
xchg
sub
pop
nop
pop
je
lahf
or
or
scas
loopne
and
leave
shlb
sbb
in
imul
sbb
outsb
adc
xor
dec
outsl
adc
xor
mov
push
mov
ds
int
mov
mov
lock
add
test
mov
jmp
mov
or
push
scas
out
jns
test
aas
insb
or
push
push
jb
add
sbb
lret
lcall
repz
stc
mov
dec
jg
inc
addr16
or
cmp
aaa
xchg
jp
jnp
xchg
in
cs
mov
loope
cmpsl
std
cmp
mov
xlat
add
cmc
add
faddl
add
mov
call
lods
push
ficoml
daa
xor
push
call
insl
cwtl
mov
jg
and
cmp
icebp
sub
movsb
jmp
push
dec
stos
and
ret
mov
fidivs
frstpm(287
inc
mov
out
aas
cwtl
fisttpl
mov
mov
cmp
cwtl
jnp
rcll
push
ja
push
mov
pushf
sahf
jecxz
repz
addl
cmp
mov
fnsave
mov
add
icebp
gs
inc
decb
in
fcoms
push
pusha
mov
rclb
fsqrt
jne
push
test
mov
push
cmp
fisttpl
mov
addr16
and
push
movsl
cmc
adc
lods
inc
sarl
add
push
fcoms
pop
outsb
pop
adc
xor
mov
jge
sahf
jno
and
xchg
je
out
dec
stos
movsl
lds
insl
and
popa
push
scas
jbe
xor
xchg
mov
iret
imul
hlt
jmp
adc
jo
nop
xor
cmp
andl
enter
push
dec
jne
xor
ret
popa
leave
loop
pop
mov
push
add
adc
xchg
fwait
xchg
push
cwtl
mov
fwait
inc
cmp
add
mov
sub
push
imul
jle
xor
dec
ret
push
fadds
lret
pushf
lret
inc
jne
mov
cmc
or
sub
inc
vaddss
or
popa
jno
stos
repz
shlb
add
shlb
hlt
les
scas
mov
push
push
sbb
mov
loop
push
or
dec
inc
bound
pop
cs
hlt
insb
pop
es
or
repnz
sub
cwtl
sub
out
jnp
mov
mov
mov
or
xor
ds
loop
dec
lods
cmpsb
sbb
call
mov
and
push
pop
or
call
push
scas
cmpsb
sarb
mov
rolb
cmpsb
ss
pop
xchg
inc
pop
popf
loope
xchg
cltd
pop
mov
cmp
loope
cs
cmp
mov
cltd
jo
cmpb
bound
in
outsb
dec
je
jne
inc
ja
mov
cs
sub
pop
test
scas
pop
xlat
js
sbb
jne
cmp
fisubrl
scas
cmp
mov
bound
pop
xchg
mov
jne
inc
sbbb
out
out
movsl
popf
test
lods
lahf
dec
push
mov
jbe
aad
and
jle
push
sub
push
push
stos
addr16
ret
dec
dec
jecxz
ficomps
call
sub
fcomp
imul
sti
cs
jmp
adc
daa
sbb
hlt
mov
cmpl
pop
pop
lods
addb
push
aaa
sub
call
xlat
pop
or
subb
test
cmc
fisttpl
or
rolb
push
leave
hlt
pop
cmpsl
ret
and
push
nop
shlb
arpl
or
inc
jnp
fcoml
push
xor
shll
or
and
mov
pusha
out
mov
sti
xchg
gs
imul
arpl
or
inc
stos
or
xor
pop
pop
dec
shlb
or
add
xchg
sbb
out
xor
fidivrs
xlat
push
hlt
mov
loopne
popa
or
cmp
test
xchg
lock
cmp
ret
scas
roll
shrb
sbb
mov
add
and
pop
fildll
or
mov
inc
jle
jae
inc
push
adc
pushf
insb
cwtl
popf
and
into
js
adc
mov
xchg
mov
cwtl
inc
mov
test
test
and
leave
divl
push
push
sub
push
cld
mov
xchg
jmp
pusha
lret
cmpl
mov
push
loope
xor
mov
pop
loopne
popa
popa
adc
jmp
jno
fcmovne
pop
or
leave
lcall
pop
repz
cli
loopne
pop
add
adc
mov
mov
sahf
ljmp
insl
cmp
and
nop
loop
jmp
xchg
pop
lret
cmp
repnz
sbb
lahf
jnp
in
jb
test
inc
and
gs
test
dec
outsb
and
outsl
cmpsl
push
add
adc
stc
lcall
adc
ja
jbe
je
jnp
cltd
pop
or
jle
pushl
jbe
rorl
dec
add
inc
shr
jb
ret
mov
cmp
out
loopne
adc
push
xchg
and
xor
mov
xchg
in
in
sbb
inc
push
addr16
lahf
jnp
push
and
adc
sub
leave
push
sarl
push
jecxz
inc
add
or
cmp
fmuls
sub
lock
mov
dec
mov
xchg
jmp
xchg
enter
xor
and
xchg
int3
jmp
daa
imul
adc
pop
mov
mov
shlw
xchg
loopne
xor
inc
shll
call
pop
pop
jae
fimull
sub
and
inc
lcall
adc
pop
je
daa
hlt
pop
pop
adc
sbb
scas
jmp
outsb
cmp
dec
mov
and
aaa
lcall
sti
js
push
int
inc
leave
mov
mov
fidivrs
xor
ret
and
dec
push
shr
dec
insb
cmp
scas
xchg
jg
or
pop
pop
stos
xchg
xchg
sub
dec
or
rcll
push
out
leave
fidivl
sbb
cmpps
or
cli
dec
dec
xchg
push
cmp
or
mov
int
pusha
call
mov
clc
mov
jo
add
xchg
je
jp
filds
jp
and
cli
idiv
aad
outsb
cmpsl
shl
sub
test
cltd
outsl
das
adc
dec
or
in
and
loop
push
mov
adc
cmp
dec
xchg
jb
or
push
out
fdivrs
int
stos
mov
mov
mov
pop
bound
pop
lret
loope
add
aam
jecxz
dec
popa
and
jmp
jo
mov
repz
divl
xor
cli
mov
es
js
and
aam
shl
xor
out
cmp
jno
dec
cmp
sub
fstpl
inc
push
mov
xor
and
mov
out
mov
outsl
push
xor
adc
xchg
in
cmp
mov
cmp
xor
out
mov
mov
jns
test
andb
cvtps2pi
jmp
inc
push
mov
pop
das
pop
in
jbe
insl
jo
sahf
fwait
add
in
pushf
cmp
in
insl
xchg
movaps
xor
push
lret
testb
mov
in
call
sbb
mov
popa
mov
pop
inc
mov
xlat
fadds
mov
xlat
icebp
mov
push
movb
sub
std
mov
clc
mov
jge
mov
addl
shr
in
and
pushf
push
fidivs
cmc
dec
subb
or
test
loope
fisttps
xchg
mov
das
sbb
in
inc
add
cli
int
popa
xor
data16
push
iret
mov
mov
andl
aam
loopne
add
inc
adc
fldt
rcl
enter
mov
adc
xor
jge
insb
in
aam
and
out
out
inc
mov
jp
adc
fildl
inc
imul
iret
adc
mov
pop
pop
icebp
xchg
sbb
sub
cmp
xchg
jle
adc
movsl
push
jle
lock
sbb
rcll
scas
icebp
lods
sub
pushf
cmp
xchg
cltd
lret
cs
mov
jmp
std
test
mov
sub
imul
add
mov
jmp
mov
shl
call
sbb
mov
mov
cli
je
mov
dec
test
fucomip
sbb
pop
mov
xor
leave
jne
subl
out
fidivrs
or
fsubrs
enter
inc
iret
sub
repz
xor
nop
out
jns
push
scas
mov
xchg
aam
cmpsl
aad
xchg
sub
ror
pop
arpl
jecxz
in
lret
add
into
fimuls
outsb
push
dec
pop
into
dec
lods
xchg
loopne
hlt
cmp
imul
push
jle
jne
shl
jb
sub
shlb
rcrl
lds
loop
sub
loope
or
nop
iret
cmp
or
mov
inc
je
test
dec
fidivs
push
cmp
adc
sbb
mov
xor
out
das
fcomi
mov
rorl
into
jecxz
xchg
out
jge
sbb
inc
fwait
repnz
xor
jl
nop
xor
or
into
insl
pop
add
lods
mov
outsb
cli
mov
add
mov
clc
js
jno
push
lahf
out
mov
and
cmp
lcall
adc
dec
add
sbb
and
jnp
or
cmp
mov
add
pop
sub
scas
dec
test
or
adc
mov
cmc
mov
xorb
in
cmpsl
test
pop
pop
push
lods
mov
jl
lds
mov
and
fdivrl
test
sub
pop
loope
mov
mov
ds
xchg
std
ficompl
mov
pop
cmc
scas
hlt
and
negb
loope
out
xor
fs
pop
rolb
xchg
inc
into
pop
jnp
sub
pop
add
xchg
insl
sub
fwait
xor
push
jecxz
fstpt
popf
cmpsl
mov
gs
mov
or
jmp
clc
imul
or
xor
iret
add
inc
popf
inc
cli
je
cmp
lds
jbe
xor
imul
dec
cmp
push
push
adc
cli
sbb
xor
insl
add
push
cwtl
or
push
mov
sub
daa
dec
push
xchg
in
loop
inc
inc
mov
add
xor
je
test
aaa
lahf
js
inc
sub
and
insb
and
push
xchg
rcll
bound
jns
jb
or
inc
cltd
sahf
or
mov
lods
movl
stc
test
out
mov
or
jecxz
stc
inc
lods
mov
xchg
push
dec
fwait
push
jb
push
shll
mov
mull
cmp
cmp
rcll
or
aas
fstp
add
scas
push
imul
push
scas
into
mov
push
call
fstp
fwait
ret
icebp
fucomp
xchg
in
dec
cmpsl
push
mov
mov
cmp
cld
push
in
dec
jb
insb
loopne
pop
cmp
sub
fnstcw
into
dec
push
hlt
sbb
movb
rolb
bound
dec
xor
aas
or
pop
cmpl
hlt
inc
ss
mull
outsb
jno
imul
push
into
lahf
jp
jl
pop
lahf
push
jl
push
in
mov
xor
test
dec
pop
dec
fists
sub
lock
movsl
das
cld
lcall
dec
loop
out
rorb
cmp
scas
out
insl
mov
outsl
jno
sub
sbb
notw
mov
icebp
jmp
xor
inc
or
push
stc
aad
and
or
xor
addb
in
arpl
out
pop
push
adc
out
cmp
pusha
andl
cwtl
cmc
icebp
addb
jno
cmp
xor
sub
or
cmpl
mov
jo
jns
inc
inc
xchg
fsubrl
outsl
addl
push
jmp
sti
leave
mov
roll
mov
stc
sbb
enter
icebp
out
mov
xchg
pushf
leave
mov
cmp
and
dec
nop
mov
dec
cmpsb
push
ret
mov
das
lret
xor
cmpb
push
inc
push
test
mov
clc
mov
fisttpll
cmp
xorl
sbb
cmp
adc
cmp
inc
aas
xchg
inc
sbb
scas
test
int
pop
cmc
sub
fwait
push
xchg
out
dec
jecxz
xor
int3
cmovo
sub
fsubs
inc
and
mov
pop
push
imul
mov
dec
pop
and
testb
push
adc
xchg
scas
jmp
push
lods
mov
int
mov
push
stos
lods
pop
sbb
test
cmpsb
pop
push
ss
jae
xor
jg
dec
xlat
scas
fsubl
in
in
cmp
filds
mov
sbb
jno
lcall
pop
pop
decl
xor
rcrb
icebp
inc
lock
mov
outsl
and
mov
ds
outsl
in
addl
negb
enter
addr16
int
shrb
out
lods
es
scas
and
enter
fldcw
dec
cmp
cld
jnp
fstl
dec
xchg
ficoml
lret
clc
add
ds
mov
jmp
lods
jbe
xchg
sbb
fldl
arpl
rolb
mulb
js
out
outsl
or
mov
divl
xor
lock
clc
sarl
or
mov
test
ret
adc
in
push
sub
xlat
int
fmull
cld
ja
fxch
loopne
inc
push
adc
pop
rolb
test
add
jg
jae
js
xor
inc
cld
imul
into
push
mov
or
daa
addb
and
sub
jno
mulb
xchg
in
iret
lahf
arpl
mov
sar
push
and
out
jg
pop
rclb
xchg
mov
insl
popa
jp
ret
cs
push
inc
push
cmc
sub
dec
das
sti
imul
mov
inc
fwait
lcall
add
push
dec
aas
test
adcb
movsb
or
jae
and
js
fcomps
jo
rcrl
inc
ja
inc
xlat
inc
jge
cmp
ficoms
insb
stos
push
mull
stos
cwtl
ja
and
das
adc
scas
inc
adc
pop
imul
xchg
add
fwait
push
cmp
jne
jmp
int3
inc
inc
call
fists
dec
or
add
pushf
xor
jmp
cmp
in
subl
out
xor
xor
mov
mov
sbb
jne
mov
sbbl
fsubs
mov
mov
mov
imul
add
jbe
inc
lahf
jmp
hlt
inc
inc
push
pop
add
lahf
and
stos
push
orb
hlt
xchg
sbb
aas
addr16
jmp
out
pusha
or
cs
mov
inc
adc
sahf
sbb
loop
adc
or
popa
adc
add
fiaddl
pusha
ljmp
or
cmpsl
lcall
or
adc
int
pop
add
ss
test
outsb
nop
pop
pop
movl
mov
dec
xor
das
mov
or
mov
sti
int
out
inc
dec
pop
jmp
add
push
pop
int
dec
repz
out
rcl
aam
adc
rolb
inc
les
shlb
lret
jne
outsb
push
sbb
jecxz
sarl
jb
arpl
mov
xor
inc
imul
mov
addr16
push
data16
push
stc
and
mov
pop
jecxz
fnsave
push
dec
fwait
pop
mov
inc
dec
sub
dec
xchg
xor
jbe
gs
jns
adc
cmpsb
loope
rcrl
int
fidivrs
xchg
xor
push
add
push
dec
in
std
pop
inc
inc
cltd
nop
cmpsb
add
popa
and
lea
add
js
inc
outsb
mov
cld
cmp
push
repz
dec
data16
xchg
adc
dec
fsubrs
add
and
ds
and
sahf
lods
xor
pushf
mov
scas
mov
addb
or
inc
mov
dec
repnz
jle
sti
jne
lods
and
inc
insl
push
loope
jl
or
data16
mov
out
and
cmc
sbb
jp
adc
sbb
fimull
sbb
jbe
pop
xchg
ret
lret
loopne
xchg
mov
nop
inc
adc
imul
inc
in
xor
movsb
mov
or
in
lfs
fsubrl
pop
or
clc
jle
std
mov
imul
addl
into
mov
add
xchg
xorl
push
int
push
repz
jmp
push
and
call
nop
dec
stos
jp
xor
std
jecxz
adc
mov
stc
and
add
outsb
mov
mov
pop
dec
loope
pop
mov
xlat
sbb
sbb
mov
mov
push
jmp
fldl
or
loope
lods
ret
xor
int3
add
dec
outsb
push
dec
es
cmp
push
lret
loope
pop
lods
pop
lods
cmc
inc
es
xchg
call
movsb
mov
xchg
es
mov
lret
inc
adc
out
push
addr16
xchg
lea
mov
imul
add
add
xor
and
xchg
sub
enter
popa
inc
or
ret
movsb
cmp
adc
jg
cld
push
shll
push
outsl
les
mov
scas
arpl
sbb
inc
test
icebp
mov
sub
sbb
inc
roll
dec
pop
sbb
adc
ret
out
pop
clc
arpl
sbb
cmc
nop
int3
xorb
insl
mov
jne
push
std
loop
sbbb
out
mov
mov
pushf
xor
int3
inc
mov
xchg
loopne
pop
or
sbb
cli
dec
sub
sub
les
xor
inc
push
ret
cs
xor
and
push
push
and
inc
aam
lret
inc
pushf
int3
dec
out
dec
pop
test
push
pop
lock
or
loop
pop
pusha
mov
imulb
jecxz
push
push
jp
and
mov
fisubs
int3
sbb
push
mov
jecxz
call
xorl
scas
push
in
outsl
jge
sbb
cmpl
test
jl
dec
stos
in
jno
inc
ss
pop
jg
push
jno
ljmp
test
pop
push
lea
xorb
aad
push
dec
jb
pop
gs
aaa
add
fs
sti
add
in
test
ret
je
cltd
cmp
jb
lods
sbbb
fcoml
jp
mov
push
mul
stos
inc
out
cwtl
test
rorb
cwtl
inc
in
mov
mov
sub
mov
jno
bound
mov
or
lcall
hlt
push
movsl
cmp
fs
insl
ret
jl
push
dec
inc
int3
cmc
cmp
leave
add
daa
xor
fmul
mov
mov
ja
data16
jne
mov
xor
mov
outsb
pop
dec
insl
inc
mov
arpl
loop
fadd
inc
loop
xlat
idivl
jmp
ss
ret
dec
push
push
pop
fstpt
jb
xor
jmp
inc
mov
add
loopne
ljmp
addr16
sahf
or
into
and
insb
xor
jle
jo
push
mov
sub
push
lea
ficomps
stc
jg
sbb
dec
sbbl
pop
pop
sbbb
ja
nop
mov
int3
cld
mov
ss
scas
push
std
jecxz
scas
mov
aad
scas
int
fcmovu
mov
icebp
xor
ljmp
into
je
call
sbb
adc
jl
in
je
shrb
addb
pusha
pusha
mov
imul
lods
jmp
fsubl
push
cs
aad
lahf
iret
bound
add
mov
sub
test
insb
adc
out
bound
fldenv
mov
nop
hlt
cmp
scas
mov
sub
mov
call
mov
sub
jge
rcrl
mov
lock
les
mov
into
jbe
xchg
and
aas
pushf
test
sub
and
scas
mov
push
gs
iret
cmp
mov
rcr
mov
push
jbe
mov
pushl
or
inc
imul
out
sti
add
dec
subl
popa
sti
movl
jae
cmp
nop
adc
sahf
das
mov
xor
jnp
and
push
stos
push
fsubrl
outsb
jno
xchg
clc
mov
pop
sarb
aas
add
mov
je
adc
cmp
es
sub
mov
jle
inc
ds
mov
aad
lcall
sbb
imul
in
xor
daa
push
jp
or
push
mov
adc
test
sub
push
mov
pop
iret
int
decl
and
xchg
push
xchg
mov
adc
jle
jbe
ret
dec
in
ljmp
cwtl
xchg
pop
movsb
xor
jns
divl
addr16
sahf
movsb
and
lret
lret
cli
movsb
hlt
dec
push
ret
lds
fadd
pushl
or
jg
fistl
jb
push
cltd
push
dec
roll
pop
jnp
mov
loop
ljmp
aaa
or
jo
pop
sub
aam
imul
and
cltd
outsl
insl
sbb
or
mov
xor
js
jl
rcl
dec
arpl
jbe
lret
sbb
aaa
jecxz
movsb
and
xor
xchg
xor
push
out
lcall
cmpsl
fnop
mov
jge
lods
loop
int3
lds
sbb
jmp
adc
fistpl
push
sbb
je
orl
sub
insb
cmp
mov
hlt
icebp
fcoml
movsl
ret
xchg
nop
fisttps
jne
testb
or
rolb
dec
jne
cmpl
xor
daa
inc
mov
lret
mov
sub
and
ss
adc
mov
mov
xchg
sub
stc
jge
mov
aaa
into
sbb
pop
rcl
xchg
sbbl
xor
or
rolb
add
aaa
xchg
dec
dec
mov
test
je
jecxz
push
mov
pop
arpl
daa
jb
sbbb
shll
fdivr
rclb
data16
into
pop
out
out
push
adc
imul
shlb
scas
insl
mov
adc
lods
push
add
jge
or
roll
pop
les
xor
cmp
xor
fstpt
adc
pop
sub
lret
mov
jnp
and
fucomip
xchg
xor
ja
negl
aad
les
and
inc
roll
sbbl
int
aas
xor
movsl
sar
imul
out
movsb
or
cltd
xchg
imul
repz
je
xor
jecxz
pop
adc
in
popa
loope
scas
push
mov
and
popa
or
dec
filds
aaa
repz
imul
dec
sbb
and
inc
aam
imul
sub
fisubs
lds
xchg
dec
mov
incb
dec
fisttps
xor
std
sub
adc
in
ret
cmp
mov
mov
mov
into
xor
cmc
in
pop
mov
call
push
popw
pop
jns
cmp
popf
hlt
pop
xor
cltd
stos
aam
stc
cmpsb
shll
in
stos
ficompl
cmc
stc
mov
push
dec
xchg
out
and
cmp
mov
jecxz
std
add
das
xchg
mov
mov
lret
jmp
loopne
aad
mov
cs
xchg
sbb
xlat
fists
repz
xor
sahf
cmp
jns
xchg
ljmp
adc
lahf
fwait
pop
popf
lret
aas
scas
aam
adc
dec
aas
fisubl
icebp
xchg
xchg
add
cmp
mov
cmpsl
lock
mov
hlt
mov
push
adc
pop
jnp
int3
daa
pop
dec
add
cmpsl
lahf
sahf
push
pop
je
pop
scas
repz
mov
xor
imul
into
adc
cs
or
jl
xor
aaa
and
jns
je
imul
shl
fstpt
rcrl
lods
cwtl
adc
jnp
add
sahf
mov
icebp
jp
adc
push
or
mov
in
xchg
adc
sbb
rclb
jl
adcb
call
subl
mov
sbb
xor
popa
inc
fwait
add
incl
in
sub
sub
imul
nop
scas
loope
and
jl
push
imul
js
loop
dec
xchg
mov
inc
jo
dec
sub
jmp
sti
inc
jno
adc
lcall
jmp
jnp
mov
loope
xchg
mov
flds
ja
sub
pop
dec
shl
iret
dec
add
jnp
pusha
dec
imul
mov
mov
xchg
xor
sbb
imul
inc
pushf
int3
imul
adc
pop
push
mov
in
mov
pop
push
fwait
in
ds
jle
sub
popa
cmc
pop
mov
mov
repnz
mov
test
jne
inc
push
xor
adc
pusha
and
dec
cmp
sub
and
and
clc
xchg
fistpll
adc
pop
mov
ja
test
test
adc
xchg
mov
gs
xor
sbb
aam
lds
xor
cwtl
xor
cmpsl
dec
lea
enter
cltd
and
xlat
dec
inc
push
lock
fwait
iret
ja
adc
mov
xchg
mov
or
int
mov
push
js
pop
xchg
inc
dec
outsb
pop
stc
jno
xchg
mov
enter
movb
or
aam
add
in
jo
xor
mov
lret
sub
lock
mov
lods
insb
push
push
add
sbb
int3
in
std
arpl
mov
or
pop
and
push
mov
and
cmp
jae
and
cmp
push
in
imul
iret
outsl
inc
sahf
outsb
andb
sub
movsb
adc
xor
mov
pop
inc
push
dec
xchg
ret
and
outsb
jmp
xchg
or
lret
xor
inc
cmp
and
xor
mov
push
mov
mov
lock
addr16
xor
aaa
jge
cmp
incb
sbb
repz
test
lahf
mov
sbb
inc
pop
push
movsl
sbb
mov
or
cmp
pop
loop
pop
in
arpl
adc
icebp
pop
dec
mov
rclb
mov
mov
pop
push
pop
clc
inc
jmp
mov
outsb
insl
pusha
lds
mov
nop
lea
gs
pop
nop
je
mov
dec
outsb
dec
mov
dec
pop
andb
jb
shl
mov
icebp
lods
jbe
shlb
cmpsl
or
lds
mov
and
std
push
mov
pop
xor
push
mov
fimull
push
cmp
jns
jb
loopne
loope
sbb
push
jb
fcoml
ret
test
mov
mov
cwtl
imul
pop
rcrb
add
out
push
aas
dec
das
cmp
push
js
in
add
mov
rcr
push
jns
jns
xor
or
fstps
arpl
daa
das
lret
cmpsb
test
dec
out
xor
out
popa
dec
sahf
ja
xlat
push
mov
push
lds
jp
xchg
repz
jl
out
stc
subl
pop
xchg
xchg
std
push
adc
cltd
shll
mov
int3
popa
cmp
mov
loopne
pop
or
push
sbb
cmc
add
mov
mov
pop
out
test
inc
or
push
dec
lret
repz
adcb
push
cmpsl
xchg
inc
or
lret
cmp
stos
rclb
sbb
pop
divb
pop
jbe
ret
cld
cmp
pop
dec
jle
in
add
std
insb
xchg
mov
bound
inc
xor
cmp
pop
repnz
or
scas
xchg
test
mov
out
cs
inc
add
jbe
inc
sub
adc
xor
sbb
sub
ds
sbb
outsb
addr16
push
mov
sub
ljmp
add
sbb
sub
push
sar
xor
adc
sbb
xchg
mov
dec
ret
lock
rcrl
gs
cld
loop
fwait
sbb
pop
mov
adc
gs
push
clc
jo
lods
rolb
or
adc
cmpsb
mov
xor
movsb
sbb
xchg
xchg
cwtl
sub
fisubrl
sbb
xor
pop
xor
jb
popf
cs
inc
repz
int
add
fwait
imul
pushf
sbb
jmp
mov
jg
fmulp
in
fwait
stos
dec
sbb
mov
fs
push
sub
mov
push
sti
les
pop
and
outsb
aas
jo
jns
cmp
mov
mov
pop
sti
repnz
jne
sbb
xchg
jecxz
cwtl
xor
dec
aad
adc
lahf
mov
xor
add
ljmp
pop
int3
mov
sti
or
icebp
pop
xor
fsubr
rorb
int3
js,pt
jae
addb
mov
sysexit
push
mov
xor
divb
mov
cli
adc
inc
pop
cli
imul
jecxz
cmp
mov
xchg
jmp
xor
andl
loope
movsb
xchg
push
pushf
daa
adc
mov
test
mov
out
push
adc
and
scas
sbb
loop
sarl
pop
inc
ss
stc
int
pop
scas
inc
xor
lods
stos
push
imul
aaa
dec
cmp
mov
lret
bound
push
jnp
mov
loope
imul
iret
pop
gs
mov
jmp
add
in
lock
stos
fiadds
test
sti
dec
insl
das
jle
pop
push
cmp
shll
loopne
cmpsl
fsubs
add
mov
lret
dec
xor
ret
mov
push
inc
ja
pop
fnstenv
das
sti
pushf
adc
cli
pop
aaa
pop
inc
adc
xor
inc
shl
mov
xor
in
push
pop
push
xchg
mov
sbb
cld
cmp
pop
pop
dec
outsb
jle
aas
test
mov
fildll
shll
xchg
mov
inc
add
pop
cmp
pop
test
lret
pop
filds
xchg
arpl
and
mov
pop
mov
pusha
mov
mov
shrb
jnp
es
xor
adc
stos
int3
and
jl
jmp
add
rcrb
dec
jg
not
inc
mov
inc
test
add
push
xchg
outsl
das
mov
pop
mov
notl
test
in
dec
in
nop
out
mov
loop
sbb
push
mov
popf
shrb
cwtl
testl
dec
loopne
add
fidivrl
fisubrs
fildl
xor
int3
pushl
and
or
repz
ficoms
inc
dec
cmp
mov
js
cs
fldcw
inc
fldl2t
orl
xor
jno
or
scas
sbb
mov
mov
shlb
cmp
push
cwtl
int3
sub
testb
jne
xor
ffreep
movsb
xchg
dec
adc
cltd
imul
dec
add
jp
insl
pop
xchg
pop
lock
sbb
mov
mov
xchg
pop
aas
pop
popa
adc
sub
sub
push
dec
adc
dec
adc
popf
stos
lret
cli
cmpsl
and
pusha
sbb
mov
idivb
data16
insb
lock
out
fisubs
dec
sbb
xchg
cwtl
mov
xlat
loop
insl
mov
test
jbe
push
movsb
mov
loope
mov
int3
cmp
insb
ficoms
sub
push
cmc
push
xchg
mov
cmp
or
shlb
dec
push
mov
cmp
xchg
mov
push
add
xchg
popa
jge
int
aaa
test
aad
pop
jno
xchg
out
mov
ljmp
add
out
pop
push
ret
nop
mov
sub
jbe
pop
in
mov
lcall
icebp
or
outsl
imul
mov
lea
and
je
cmp
pmaxsw
pop
movsl
nop
push
xchg
mov
movsl
cmp
lret
rolb
adc
test
inc
aad
ret
insb
xor
insl
stos
push
mov
test
outsb
push
xor
cmc
mov
dec
sbb
jg
dec
jp
lcall
mull
mov
mov
xor
iret
push
cmp
insl
sti
push
push
jecxz
inc
and
mov
mov
mov
into
sbb
imul
push
dec
sti
in
mov
xchg
inc
je
into
aaa
cmp
lods
jb
sbb
xlat
cmpsb
sarl
jae
rolb
inc
sbb
adcl
in
or
push
xor
clc
xchg
mov
inc
mov
mov
rclb
dec
clc
ret
inc
lock
xchg
mov
leave
jns
scas
jle
test
xchg
rolb
fiadds
repnz
inc
into
jne
lods
xchg
in
cltd
gs
loop
dec
js
aad
lcall
call
cltd
out
lods
aas
mov
out
popa
dec
daa
rorl
cmpsb
mov
lods
sub
push
xchg
add
es
jnp
shlb
enter
add
mov
inc
dec
push
jl
iret
inc
sub
test
loope
cs
pop
sarl
repnz
aad
jp
shlb
dec
fsubr
sbb
hlt
in
and
sbb
shlb
sarb
jg
imul
cmp
pusha
out
imul
adc
mov
jno
lcall
outsl
lahf
fs
mov
pop
mov
dec
into
ret
sub
cli
inc
int
dec
cmp
mov
push
in
fdivs
adc
imul
jl
roll
mov
jle
inc
push
out
xor
xor
jne
jl
mov
cmp
inc
mov
daa
ret
cmpsb
jmp
in
subl
fsubrl
sbb
or
mov
imul
inc
dec
stos
or
lret
mov
adc
mov
jle
mov
and
pop
adc
cltd
dec
mov
jno
lds
xchg
cmp
xchg
or
or
stos
dec
and
je
arpl
and
movsb
dec
lods
add
movsb
loop
call
out
aam
lock
jle
cmp
mov
jb
lahf
jno
pop
aad
jb
sbb
and
lods
fisttps
sbb
mov
outsb
push
cmc
cmp
mov
sub
popf
ds
notl
mov
es
repnz
pop
xor
pop
nop
mov
fcmovne
sub
es
repz
mov
fstpt
pop
arpl
mov
sti
xchg
mov
rcrb
fs
fmull
inc
sbb
bound
fdivp
xchg
pop
je
sub
and
fsubrs
xchg
fistpll
inc
lahf
es
pop
xchg
and
cmpsb
or
loopne
test
inc
pushf
test
iret
xchg
pushf
sub
xor
dec
andb
cli
inc
jns
and
push
sub
inc
aam
lock
inc
sbb
add
roll
cmp
enter
or
loope
push
sub
mov
sub
adc
imul
or
xchg
jns
dec
mov
aas
outsb
push
rcll
enter
mov
dec
jmp
out
mov
mov
jae
cmp
jb
into
xchg
xchg
mov
push
mov
mov
push
fcoms
cs
je
xor
divl
add
cmc
pop
add
sub
sbb
lret
push
mov
fcomp
lds
test
fmuls
loope
mov
popf
jno
rol
loope
fcmovnbe
lahf
pop
jae
push
sbb
pop
mov
jnp
fsub
arpl
cmp
xchg
pop
or
aam
jmp
test
dec
push
data16
or
jnp
int
out
dec
cmp
hlt
addr16
fldpi
push
jns
scas
push
jg
insl
mov
loop
jae
xor
xchg
aaa
les
in
fwait
sahf
sub
aaa
mov
cwtl
mov
stc
popf
mov
xchg
popf
jmp
xor
inc
mov
ret
scas
call
adc
dec
out
ja
sbb
sbb
data16
loope
es
inc
cmp
popf
dec
shrl
out
mov
adc
dec
mov
lret
jo
adc
mov
fxch
addl
notb
push
xchg
cltd
gs
lcall
xchg
ds
lods
xlat
call
out
mov
fs
mov
pusha
inc
pop
push
cld
fs
aaa
and
pushf
call
or
fisttps
ret
mov
aas
loope
cltd
adc
pop
sub
leave
xorb
or
js
icebp
inc
cmp
shll
in
stos
jo
icebp
lahf
fs
add
inc
hlt
mov
cmovo
popl
shll
adc
fcmovb
loop
es
xchg
mov
leave
push
shr
inc
dec
mov
js
lea
std
popa
outsl
push
mov
leave
jae
cmp
out
xchg
insb
aam
sbb
xchg
adc
loope
pop
dec
sbb
push
mov
or
mov
jo
in
jmp
aas
mov
mov
xchg
pop
lret
xchg
ret
rorl
fiadds
pop
test
mov
mov
dec
es
minps
jmp
outsb
adc
ds
mov
int
cli
ret
enter
jle
xor
mov
cld
lea
mov
arpl
xor
xlat
call
cmp
jmp
jb
popf
pop
sahf
cld
addr16
sbb
shll
addr16
fdivr
pushf
inc
and
out
adc
and
adc
stos
inc
inc
inc
nop
mov
mov
mov
jb,pn
dec
inc
scas
and
or
cld
scas
and
ret
jg
xchg
aaa
decl
enter
pop
sub
movsb
inc
daa
inc
sub
or
xchg
aaa
enter
int3
sub
push
jbe
enter
icebp
into
xor
fiaddl
call
scas
cltd
sbb
pushf
repnz
push
enter
pop
lcall
cs
jns
mov
jnp
mov
add
sbb
add
adc
xchg
inc
outsw
leave
mov
mov
pop
iret
mov
jle
insl
fs
movsb
mov
pop
leave
out
push
xchg
xor
pop
aaa
testb
inc
and
fnstenv
fists
mov
sub
mov
push
int
out
out
push
mov
or
pop
push
sub
addl
pusha
lds
pop
or
or
mov
int
push
int3
stos
pop
inc
mov
push
sbb
imul
add
es
cltd
cmp
negl
pusha
jle
and
ljmp
inc
lods
js
sbb
addb
pop
push
mov
ds
pop
sub
mov
aaa
pop
sbb
pop
push
pop
insl
pushf
push
push
ja
into
fs
nop
push
out
int
inc
sti
sub
dec
jecxz
call
xchg
fnstsw
frstor
stos
pop
push
aas
pushl
pop
sbb
popa
out
es
ja
mov
adc
int
add
not
idivb
add
mov
inc
sub
jmp
icebp
push
jecxz
lds
daa
andl
ljmp
lret
popf
int3
add
xchg
mov
sti
scas
sbb
adc
jnp
pop
dec
push
loop
push
mov
inc
jns
stc
sub
add
dec
aad
cmp
out
mov
shrb
es
xchg
mov
jne
inc
dec
mov
lods
aas
jb
fidivrs
inc
bound
push
aas
out
or
lcall
or
lods
iret
push
je
insl
adc
push
jb
push
add
pop
sbb
and
dec
cmpsb
xor
dec
jmp
xor
inc
cmp
movsb
bound
xchg
cmp
leave
jge
loopne
pop
into
xor
sub
mov
jle
add
lea
in
jl
inc
push
jle
xor
jg
and
add
and
pop
leave
cli
inc
xchg
sub
inc
fxrstor
mov
mov
xchg
fldcw
lock
leave
xor
cmp
roll
out
or
arpl
xchg
aam
test
xchg
add
sbb
or
cld
call
sub
push
les
sbb
stos
mov
add
push
and
xor
pop
mov
sbb
prefetchnta
clc
xor
push
cli
and
out
pusha
pop
push
addr16
in
mov
dec
loope
lret
or
stos
dec
inc
nop
pavgw
or
jo
lods
pop
push
mov
jl
adc
jae
sbb
cli
jl
inc
jmp
mov
cmp
icebp
jo
fcoms
fistps
cmc
and
and
gs
add
and
aam
push
ss
or
mov
adc
jb
rcr
xchg
out
push
dec
mov
decl
movsb
xor
nop
mov
jbe
imul
cmp
mov
sahf
pop
shll
stc
or
dec
jo
sub
jmp
or
movsl
adc
jns
mov
xchg
fdivr
or
xor
mov
cmp
dec
pop
dec
xor
mov
cli
fnstcw
cltd
or
repz
ja
xchg
out
insl
adc
popa
std
rcll
mov
fsubrl
ret
sub
dec
loopne
decl
cmp
mov
rol
mov
ret
xchg
jecxz
inc
sub
sub
sahf
jo
lahf
stos
push
or
push
stc
test
lahf
push
and
cwtl
xlat
dec
fs
pop
out
loope
mov
sbb
sub
xchg
cltd
ss
dec
and
push
les
mov
int3
add
insl
fcomi
testl
arpl
cmpsl
or
repnz
inc
mov
xchg
dec
shll
loop
int3
pop
adc
ret
ja
add
mov
stos
and
push
jns
insl
pushl
sbb
loop
mov
xchg
sahf
push
mov
les
in
stos
enter
out
and
push
mov
jnp
gs
lahf
in
jae
cwtl
xchg
lock
jle
adc
mov
movsl
std
scas
sub
lret
mov
dec
xorb
xchg
mov
mov
inc
fadds
testb
addr16
in
imul
mov
add
or
fdivs
sbb
pop
insl
jg
lods
jne
jbe
sti
dec
in
cltd
mov
sahf
xchg
inc
test
fistpll
rolb
jo
das
xor
jmp
add
mov
adc
pop
inc
das
movsl
push
int3
xor
adc
test
cwtl
lcall
icebp
adc
xchg
xchg
jg
js
push
pop
adc
pop
sahf
xor
dec
fmul
test
ret
adc
xor
xor
insl
mov
add
in
lea
sbb
add
inc
cmp
push
sub
xchg
or
add
stos
sub
fidivl
xchg
jp
jge
mov
outsb
pusha
push
fs
jae
aam
mov
xchg
aad
or
cli
push
bound
xchg
mov
jmp
mov
cmp
out
mov
ret
mov
out
in
mov
mov
inc
push
aad
adc
jno
call
mov
fistl
and
iret
mov
add
fsubr
clc
mov
movsb
gs
decb
xor
sarb
jo
sub
popf
jnp
lods
into
je
push
psllq
sbbl
sti
aam
adc
nop
sahf
sub
cmp
jae
out
add
flds
rcll
mov
flds
jne
int3
pinsrw
jno
sbb
xor
sub
dec
or
sbb
xchg
sbb
test
aam
jae
sbbb
add
int
or
pop
movsb
ja
outsl
movsb
xchg
cmp
mov
mov
cld
es
call
ja
xor
scas
adc
mulb
mov
jmp
pushf
test
sbb
or
pop
in
cmc
xor
enter
xor
mov
push
mov
fnstcw
push
sub
imul
js
inc
jl
ss
and
insb
test
jmp
or
pop
jg
fs
iret
loop
xchg
imul
scas
push
mov
dec
sbb
cwtl
mov
and
push
lods
push
pop
jnp
sub
lods
out
xor
js
push
and
add
xor
cmp
and
lods
sbb
jb
xor
dec
push
cmp
scas
lods
dec
cmp
into
loope
sbb
jae
push
cli
call
sub
xor
cmp
add
dec
mov
inc
movsb
out
imul
xor
mov
fcmovbe
mov
aam
sahf
mov
mov
add
push
repnz
or
stc
adc
sub
outsb
jnp
inc
and
sbb
int3
fsts
std
std
mov
xor
mov
aad
push
arpl
cwtl
ds
xlat
sbb
shlb
dec
jbe
movsl
sti
cmp
mov
aad
sbb
ljmp
movsl
jecxz
test
xor
int
imul
negb
fadds
pop
addr16
imul
xchg
cmp
cmp
mov
push
outsl
add
xchg
daa
std
push
insl
rcrl
dec
add
ljmp
or
mov
loope
repnz
cmp
jbe
inc
pushf
xchg
sbb
nop
xlat
mov
mov
fcompl
in
enter
sub
or
sbb
imul
mov
js
sub
push
xor
into
mov
int3
xchg
mov
and
popf
enter
xor
push
aam
nop
outsb
xchg
shll
dec
jns
or
and
fcompl
push
js
mov
push
adc
fs
xchg
hlt
pop
sbb
mov
sub
adc
mov
cmp
jne
mov
in
stos
ljmp
and
cld
sub
and
pusha
sbb
xlat
scas
sub
adc
jmp
sbb
push
je
adc
push
mov
xchg
jbe
ret
scas
insl
jmp
pushf
fwait
shll
xor
sahf
out
fsubrl
mov
pop
cld
popa
bnd
jbe
cmpsb
sahf
fs
inc
test
inc
int3
lea
mov
mov
inc
into
test
jno
mov
cmpsb
shl
lret
push
mov
or
cmp
movsb
sbb
cmp
cltd
mov
jmp
sbb
or
sub
and
or
out
fldl2t
adc
pop
popf
add
push
movsb
into
jl
fs
stos
add
sbbb
jl
shl
or
sbbb
mov
test
sti
in
xor
lea
mov
lods
iret
imulb
lods
sahf
arpl
sbb
int
aad
mov
sub
popf
rclb
loope
and
shrb
call
mov
jnp
xor
nop
out
stc
adc
out
loop
dec
inc
rcrl
cmp
xchg
sub
jge
insl
adc
mov
jo
pop
hlt
imul
cmpsl
pushf
leave
mov
hlt
xchg
mov
pop
and
jne
jne
push
call
fs
dec
push
insb
aad
int
cmp
insl
sub
xor
add
cmc
pop
stos
call
std
push
fistpll
cmp
jne
pushf
call
pop
mov
psubb
adc
push
mov
into
popa
ja
jp
mov
xor
sti
and
or
push
xor
je
xchg
mov
jg
data16
xchg
adc
add
out
movsl
icebp
jge
xor
idivb
mov
dec
pop
mov
mov
jle
fsubrl
jno
fsubs
testl
xchg
mov
xor
sbb
dec
cmp
xchg
push
adc
pop
mov
ror
icebp
jmp
jno
lods
cltd
push
stos
bound
je
cmpsb
and
daa
out
loopne
lds
pop
aaa
imul
cmp
imul
bswap
cmp
mov
mov
and
push
and
jbe
psrlw
popf
sub
mov
mov
test
pop
jnp
lret
mov
fldt
test
test
enter
sbb
jnp
loop
out
adc
jmp
sti
jl
cli
add
pop
cld
inc
testl
dec
out
ljmp
inc
cmp
cs
add
ljmp
jecxz
test
ret
outsb
cmp
mov
orl
add
mov
jge
movsb
sub
imul
add
repnz
mov
xor
fisttpl
loopne
mov
test
mov
jae
neg
test
int
in
push
inc
add
cwtl
stos
mov
cmp
and
xor
lock
add
push
in
lret
add
dec
mov
std
or
out
cmp
lods
lret
aas
andl
mov
add
dec
xchg
jmp
dec
mov
add
xor
xor
out
fistpl
es
or
and
stos
arpl
mov
scas
pop
cmp
orb
xchg
sti
sbb
mov
xchg
or
cld
push
add
sub
mov
out
lret
stos
sbb
sbb
or
rcrb
and
out
sti
and
jg
lahf
sub
outsb
into
sub
push
xchg
mov
lret
dec
mov
in
sbb
push
shlb
insb
push
ljmp
jbe
ret
rorb
mov
mulb
or
xchg
jecxz
into
cltd
fsubl
adc
pop
in
and
stos
push
in
aad
cmp
stc
jns
mov
popf
cmp
mov
mov
mov
fs
sub
adc
sbb
push
sbb
xchg
fsts
int3
cmpsl
add
std
dec
fimuls
data16
fwait
adc
inc
push
imul
les
add
test
ret
test
push
sub
in
ja
mov
std
adc
lea
sub
ret
xchg
fsubrs
push
test
jecxz
call
jle
push
push
movsb
inc
aaa
out
mov
rcrb
sbb
inc
push
das
cli
or
xor
adc
jl
xor
or
push
xchg
sbb
jg
pop
mov
int3
and
sub
jge
imull
sub
jl
insl
test
ret
dec
jge
xchg
stc
mov
movsb
insl
jns
sub
pop
cmp
inc
mov
icebp
mov
outsl
ret
addr16
inc
xor
sahf
hlt
and
popf
out
add
pop
out
xchg
mov
imul
xchg
sub
je
fbstp
mov
add
push
adc
popf
xor
pushf
leave
das
push
cltd
inc
push
push
and
mov
or
sub
std
dec
and
sbb
aas
ljmp
inc
lahf
inc
ret
push
xchg
cmp
mov
xlat
add
daa
sub
inc
lcall
push
jae
pop
stc
shrl
call
imul
jno
cmp
add
rcrb
in
add
pop
std
int
inc
pushf
lahf
xor
cli
les
mov
push
sub
outsb
cs
inc
repz
bound
inc
xlat
popa
test
incl
xor
shlb
jle
sbb
dec
mov
shl
movsbl
in
jmp
fstl
pop
inc
mov
out
aaa
das
inc
lea
out
cmpsb
ljmp
push
mov
bound
cmp
xchg
mov
movsb
pop
pop
adc
pop
ss
enter
aas
aad
or
mov
gs
xor
pop
mov
add
jno
ja
push
push
pop
loope
mov
int3
sub
add
or
sub
std
jnp
push
jmp
scas
xchg
dec
dec
sbb
ficompl
jb
and
inc
dec
pop
sbb
dec
push
xchg
mov
sbb
outsb
cltd
dec
aas
xchg
mov
js
nop
push
mov
aaa
cmpsb
pop
fnstenv
or
cmpsb
insl
jns
repz
xchg
rolb
test
dec
mov
inc
cmp
test
dec
adc
ret
mov
mov
ja
dec
push
lret
daa
push
clc
cltd
push
pop
xchg
loopne
push
int
dec
cmp
adc
aas
inc
sbb
movsl
aad
testb
adc
aam
into
gs
pop
adc
mov
xor
jp
push
popa
mov
andb
stc
fldcw
mov
lds
fsubp
sub
insb
pop
dec
push
rcr
sbb
mov
adc
bound
mov
nop
stc
sbb
push
rcr
jbe
add
or
test
inc
shl
cwtl
cmp
sbb
repnz
scas
test
mov
mov
inc
fwait
inc
in
ficompl
mov
jb
jnp
or
xor
adc
jnp
in
cld
inc
in
mov
inc
mov
inc
cli
xor
xchg
cmp
push
and
je
lcall
mov
fdivrp
mov
jle
outsl
pusha
xlat
mov
dec
pop
scas
das
enter
or
mov
fbld
and
icebp
mov
lock
inc
cmpb
lods
pusha
inc
mov
inc
mov
data16
mov
dec
xchg
and
or
sub
fidivs
push
int3
sar
mov
mov
rcrb
mov
je
ds
into
cmp
pop
fmuls
push
shlb
pop
cs
js
mov
imul
xchg
pushf
mov
cltd
cwtl
inc
sbb
add
leave
jno
stos
xor
dec
mov
std
call
in
mov
pop
das
pop
add
andb
notb
sahf
or
bound
jge
cmp
shr
mov
or
test
sbb
pop
dec
and
movsl
test
mov
jns
jo
stos
imull
loope
adc
cwtl
mov
cmpsl
sub
fs
cld
sbb
xchg
push
lods
in
sbb
icebp
pop
xor
cwtl
mov
std
adcb
loopne
inc
pop
mov
mov
loop
out
push
and
sub
mov
dec
dec
iret
cmp
std
sub
xchg
lahf
lock
adc
cld
clc
inc
cltd
fists
add
aaa
js
inc
add
js
fwait
pop
negb
gs
out
fs
and
mov
sarb
sub
cmp
jle
repz
jo
test
ljmp
cmp
xlat
std
mov
dec
stos
or
les
jle
mov
mov
rol
imul
push
jno
dec
fisttpll
pcmpgtd
mov
test
jno
xor
pop
aad
js
cmp
xchg
and
push
les
or
and
push
xor
scas
data16
aas
add
jg
movsl
lret
out
mov
mov
and
dec
adc
push
mov
hlt
pop
loope
mov
aad
fisubs
outsl
adc
xchg
jg
lock
loopne
and
aaa
pop
out
inc
sahf
push
lods
jbe
mov
clc
pop
jp
dec
mov
push
and
cld
movsb
repnz
push
decl
and
push
aam
or
lock
gs
out
or
xor
shl
mov
icebp
sbb
pop
enter
pusha
sbb
add
test
mov
jns
aaa
mull
mov
enter
dec
lods
dec
inc
pop
mov
push
xor
std
aad
ja
mov
sbb
mov
pop
bound
xchg
xor
dec
fs
fcos
or
test
into
out
push
fcmovbe
jmp
pusha
or
ds
xor
push
stc
xor
sbb
aam
and
jbe
pop
scas
in
movsb
cmpsb
lods
cld
and
or
ds
and
mov
mov
pop
push
ss
add
loope
cmp
xchg
adc
cltd
mov
fidivrl
jno
sub
popa
out
pop
ja
adc
adc
loopne
dec
push
mov
jo
push
inc
xchg
ds
pop
lret
sbb
mov
add
sub
cmc
jge
test
pushf
loop
jnp
test
jae
outsl
adc
and
xchg
lds
xchg
imul
and
mov
lahf
data16
ljmp
push
cmp
stc
dec
mov
xor
call
push
push
enter
cmpsl
xchg
mov
jp
outsb
sub
or
cmpsb
jge
jno
call
adc
into
lcall
mov
icebp
mov
mov
sub
mov
loope
loope
aam
jl
les
xor
hlt
pop
mov
dec
xchg
aam
mov
jnp
jmp
sbb
sbb
cli
mov
xlat
inc
dec
inc
movsb
das
mov
adc
lds
popf
fstpt
adc
jae
pusha
imul
adc
add
xor
mov
cmp
sbb
jb
xchg
mov
aaa
into
je
test
xchg
out
daa
iret
jne
push
aas
jb
xor
inc
les
shlb
pop
gs
popf
shl
or
fsubp
and
movsb
sbb
incb
out
int
test
rclb
das
in
mov
cmp
arpl
fucomp
inc
sbb
or
xchg
jb
inc
movsl
and
outsb
test
push
loopne
repnz
push
dec
ret
mov
cmp
test
jge
pop
rcrl
add
pop
lock
lods
enter
jns
cmpsb
sti
es
outsb
pusha
xchg
inc
fstps
ficomps
test
mov
sbb
cmpsl
inc
in
xchg
jcxz
outsl
or
fiaddl
pop
xchg
ja
cmc
das
xor
add
adc
adc
stos
imul
stos
xchg
xor
pop
push
push
test
mov
xor
pop
nop
imull
mov
int
lds
xchg
jbe
push
push
pop
loop
mov
inc
rcrb
cltd
andl
in
adc
add
clc
int
sub
push
ss
in
pop
push
jmp
push
xor
dec
out
imul
mov
inc
mov
call
fidivrs
scas
loopne
mov
pop
fmuls
xor
test
sub
xchg
push
cs
and
pop
or
ja
daa
arpl
cli
fsubl
push
inc
sub
mov
pop
add
jmp
mov
fsubrs
add
sbb
cltd
aam
push
push
cli
push
shl
dec
out
jns
daa
push
push
xchg
dec
adc
xchg
pop
mov
jmp
inc
nop
xchg
sub
push
jo
int
lcall
jge
sub
sbb
stos
in
add
sbb
cmc
mov
loopne
inc
movsb
jb
mov
xchg
or
mov
das
pushf
jne
mov
repnz
stc
xor
xchg
subl
adc
outsb
test
scas
pop
jg
add
cmc
inc
xor
js
aaa
test
dec
fstl
xchg
outsb
push
enter
dec
cmp
sub
fwait
outsl
jle
sbb
out
add
cmp
iret
stc
shrb
and
sub
incl
decl
inc
mov
push
xor
cmp
xlat
jge
pop
imul
cltd
xor
pop
movsb
mov
leave
inc
add
clc
nop
add
jnp
push
and
cltd
mov
or
adc
sbb
imul
arpl
cmp
pop
das
push
roll
adc
ret
es
jecxz
xchg
mov
and
dec
or
and
rcll
jno
sbb
stc
cmc
addl
cli
cmc
popl
inc
or
mov
icebp
jecxz
or
jecxz
scas
std
addb
inc
inc
jne
jecxz
jmp
jecxz
out
pop
pop
js
hlt
jge
mov
push
dec
add
ljmp
data16
mov
outsl
lahf
scas
mov
mov
loope
cmp
test
mov
call
mov
cs
insl
mov
and
pop
sbb
ja
push
cmc
cmp
cmpsl
in
pop
xor
imul
repnz
repz
insl
clc
pop
insb
sub
loop
add
or
mov
dec
sub
nop
mov
sub
aas
out
lar
fldt
sbb
adc
mov
cmp
add
or
outsl
push
shl
aad
cwtl
xchg
dec
sbb
fnstcw
push
xor
xchg
jbe
mov
lret
or
inc
and
popa
stos
mov
pop
rol
mov
lahf
inc
mov
mov
lock
sbb
xchg
add
sbb
cmp
xchg
iret
xchg
mov
cmp
test
jecxz
jecxz
ret
shll
leave
push
adc
int
int
mov
scas
dec
and
cmpsl
xchg
fldl
and
xor
dec
test
cli
imul
xlat
inc
aad
dec
mov
push
push
stos
cmpsb
cltd
decl
je
jo
mov
sbbb
and
inc
pushf
test
nop
js
sbb
mov
jmp
ljmp
adc
sub
jge
and
test
sbb
pop
sbb
rep
icebp
insb
jae
cld
test
pop
or
and
jbe
in
mov
iret
es
mov
push
cltd
mov
imul
cs
mov
cmp
sti
adc
je
test
and
adc
dec
std
mov
sub
pop
jo
dec
nop
xchg
cmp
lods
adc
cmp
jno
xor
pop
mov
lock
dec
outsl
sub
enter
lea
outsl
or
sub
push
sub
xor
cmp
inc
outsl
insl
add
add
adc
add
sbb
add
or
add
add
add
add
xor
add
or
add
add
add
add
dec
add
add
add
cmp
add
cmp
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
je
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
xor
add
add
add
dec
add
add
add
sldt
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
xor
add
add
push
jmp
and
sahf
pop
mulb
dec
movsb
bound
push
push
add
add
cmp
push
add
add
imul
push
add
jb
jae
imul
add
add
add
and
xor
sub
and
xor
sub
and
xor
xor
xor
xor
add
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
and
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
add
add
add
add
outsb
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
xor
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
xor
add
add
push
jmp
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
and
xor
sub
and
xor
sub
and
xor
xor
xor
xor
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
fsubl
add
add
add
add
add
add
add
dec
mov
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
fcomp
add
push
incb
add
add
add
add
jg
inc
test
mov
push
jnp
cltd
pop
add
or
dec
loope
push
push
push
push
mov
test
je
push
out
or
outsb
insb
xor
cs
push
mov
cmp
xor
jb
jne
insb
inc
gs
push
add
mov
call
xor
sbb
mov
jl
sar
sbb
adc
ss
clc
cmpl
mov
push
push
jbe
push
or
lea
inc
aad
stc
mov
add
adc
push
push
call
les
pop
pop
je
or
push
addb
rolb
add
pop
pop
pop
pop
ret
push
and
or
orl
jne
jne
inc
adc
mov
ret
mov
roll
inc
and
push
repnz
push
xchg
ds
pusha
push
mov
add
dec
or
push
inc
add
je
mov
push
call
dec
or
rol
or
cmp
outsl
dec
jne,pn
mov
in
mov
inc
push
jl
gs
iret
pop
mov
xor
mov
mov
shll
cmp
jb
push
cmp
sub
repz
andl
dec
jecxz
or
fiadds
fmuls
nop
mov
add
pop
pop
ret
xchg
add
mov
jl
loope
xchg
or
or
imul
jmp
or
jae
push
fbld
push
andb
sarb
incl
cmp
mov
mov
data16
mov
pop
frstor
fwait
xlat
push
sbb
rorb
sarb
ljmp
paddw
inc
std
adc
jge
pop
sub
push
loope
adc
jne
lea
add
push
call
xchg
into
adc
mov
enter
or
shl
rcr
adc
fldt
or
adc
push
orl
sub
out
jbe
cmp
add
decb
adc
shl
sbb
cmp
scas
sbb
pop
pop
mov
pop
mov
push
push
or
insb
das
rcll
or
test
jl
xchg
nop
rclb
adc
push
jbe
and
xchg
pop
dec
add
mov
addl
xchg
fildl
cmp
cmpsb
sbb
sbb
outsl
ret
ds
add
push
mov
fwait
nop
jne
mov
push
mov
and
inc
inc
push
div
jne
xchg
or
sbb
push
push
js
cltd
and
pushf
or
out
sbb
inc
adc
mov
sub
push
lods
lods
or
popf
push
adc
cmp
loope
addr16
jo
sbb
ret
lea
push
mov
add
call
or
out
mov
push
lock
in
adc
pusha
inc
je
ss
cmp
fisttpl
push
cmp
imul
call
push
pop
jmp
ljmp
enter
add
jne
loopne
rep
adc
popw
push
andl
or
mov
andl
addl
call
into
mov
out
sbb
test
adc
push
mov
clc
lea
push
mov
das
add
enter
std
sti
int3
pop
test
inc
mov
and
loop
inc
add
mov
sub
sahf
ret
shr
mov
add
movsl
add
pop
inc
push
or
push
pop
movl
mov
mov
es
into
xchg
mov
sbb
movntq
out
xor
mov
fcoms
jge
cld
nop
or
decl
or
sbb
out
add
clc
jmp
jmp
aam
lea
andb
loope
or
movsb
jnp
movsl
fistps
add
rcll
mov
bsr
lock
cmp
xor
inc
push
fdivl
cmp
je
stos
lock
lds
push
inc
orb
clc
xchg
mov
lcall
inc
enter
dec
lock
jnp
idiv
cmp
jmp
test
in
mov
jae
lock
mov
inc
cmpb
push
mov
sub
push
dec
loopne
or
movb
test
nop
sbb
or
inc
or
dec
clc
add
jl
push
xchg
dec
cwtl
mov
jge
scas
mov
sarb
push
in
sti
clc
cwtl
cwtl
push
jl
dec
xor
add
jecxz
add
stc
dec
lret
add
sub
jge
lea
push
test
cld
xor
sub
push
icebp
or
add
jmp
sar
jno
test
movsb
dec
fdivrs
push
mov
xchg
cs
sub
shl
mov
pop
test
ss
ja
daa
sbbl
stc
inc
lcall
xchg
add
adc
cmp
subb
lock
or
jb
pop
xor
sub
cmc
pop
pop
leave
pop
push
es
test
notb
cmp
cmp
and
hlt
sub
test
outsl
xchg
adc
mov
pop
movsb
cmp
prefetch
and
scas
sbbl
js
inc
push
dec
insl
and
push
sub
add
cmp
add
and
es
loop
push
mov
shlb
xchg
push
call
inc
bound
in
aad
push
lea
rolb
jbe
es
sbb
repnz
xor
dec
add
jae
test
push
mov
mov
jnp,pt
cli
rep
in
jb
push
add
outsl
xchg
popa
clc
mov
push
call
jno
sbb
mov
movsb
and
stos
mov
ret
add
adcb
ret
test
cmp
push
jbe
sub
xor
cmp
leave
inc
sub
adc
imul
mov
lea
mov
pop
or
or
and
sub
je
push
and
xor
push
push
movsl
sbb
xchg
xlat
es
inc
mov
aas
dec
push
or
adc
test
or
xor
and
fisubs
cwtl
orl
icebp
add
movb
mov
sub
mov
inc
adc
sub
or
cmp
add
or
imul
pop
pop
pop
and
cmpsl
call
pop
sub
push
add
push
call
and
push
add
sar
fwait
mov
je
push
push
adc
push
ret
mov
cld
inc
mov
add
in
jo
lods
lods
push
jne
scas
leave
push
nop
add
dec
scas
outsl
push
add
cld
jl
enter
inc
cmpsb
rclb
add
jmp
cltd
or
and
push
call
mov
cmp
dec
cmp
or
cs
jmp
sub
out
bound
push
clc
movzwl
test
inc
xor
insb
xadd
pusha
ss
inc
pop
adc
add
cmp
jge
call
inc
movzbl
add
sub
shll
mov
in
sbb
jne
sub
rorb
rclb
les
addr16
xor
push
add
rcrl
pop
pop
mov
push
aaa
xor
push
aam
lds
mov
aaa
xchg
clc
add
xor
adc
lcall
sbb
das
push
aas
bound
push
lret
mov
dec
xchg
inc
in
xorb
pop
push
loop
xor
dec
or
sar
rep
xchg
fildl
sbb
add
cli
movsb
test
push
nop
outsl
rcrl
stos
lret
insl
ss
pop
into
pusha
cmp
cmp
dec
lods
xorb
pop
add
mov
pushf
lcall
push
inc
inc
lret
mov
aam
cwtl
inc
mov
outsb
dec
cltd
test
push
sub
ss
and
add
lret
dec
jge
sbb
hlt
push
dec
or
jle
push
lea
in
xchg
mov
iret
ror
inc
je
inc
decl
out
adc
adc
jbe
push
jmp
pop
sbb
popa
pop
jge
push
stc
jmp
fiaddl
movl
loopne
pushf
dec
jb
push
pop
fimull
xchg
movsb
pop
sub
inc
xchg
iret
mov
leave
xlat
sbb
pop
sarb
hlt
pop
call
and
or
cmp
or
adc
nop
and
push
push
push
push
call
dec
xchg
inc
loope
out
jmp
rolb
jno
inc
or
xorl
push
fadd
adc
inc
cltd
out
adc
sarb
jg
and
insl
push
addr16
jmp
pop
and
cmpsl
pop
adc
aad
adcb
rolb
subl
xlat
testb
mov
push
push
test
and
and
xchg
add
inc
jecxz
and
push
xchg
mov
imul
jmp
sahf
movsb
pop
adc
jne
mov
xor
sub
mov
loopne
sbb
dec
or
and
cld
jmp
ss
cmp
pushf
sbb
nop
adcb
dec
adc
jl
sbb
in
sbb
jmp
push
adc
pop
cmp
mov
call
mov
and
sub
push
scas
adc
bound
sbb
andl
and
aas
inc
jo
imul
mov
jb
jmp
jo
arpl
sti
clc
fs
and
out
outsb
out
jmp
iret
je
and
mov
pop
push
inc
dec
fimuls
xor
insb
and
loope
xor
insb
push
call
cmp
mov
insb
dec
jne
xchg
xor
dec
sbb
in
popa
addr16
outsl
js
push
call
je
adc
popa
rclb
jae
or
inc
es
js
je
into
test
push
mov
dec
popa
outsb
fs
pop
icebp
jp
sbb
xchg
dec
mov
sbb
shl
mov
sbb
ret
inc
or
xor
sub
imul
sbb
add
add
pusha
mov
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
dec
scas
add
cwtl
mov
add
add
add
mov
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
add
add
mov
jo
mov
jo
mov
jo
