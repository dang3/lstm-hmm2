and
cmpsl
mov
cmp
lock
fildl
and
in
fisubrl
enter
pop
jg
push
mulb
mov
aad
pop
cmpsb
fdivp
dec
adc
mov
jle
pusha
scas
sub
iret
mov
mov
inc
or
andb
sub
addr16
pop
bound
popf
xor
aaa
ss
xlat
mov
addr16
int3
mov
mov
and
pop
and
mov
int3
popa
dec
mov
aam
out
push
sbb
fisubl
cmp
mov
jae
sbb
xor
cmp
negb
mov
add
push
cmp
cmpsb
xchg
add
sbbl
push
and
mov
and
push
sbb
mov
sbb
add
negl
ret
repnz
and
scas
sub
xor
loopne
bound
cld
dec
cwtl
jmp
add
jb
pop
scas
lret
jmp
daa
es
cmpsl
jmp
rcrb
lahf
dec
mov
cmpsb
adc
and
ljmp
xchg
call
dec
push
repz
shrl
mov
adc
nop
jmp
cmp
daa
cmp
and
mov
mov
loope
addr16
cmp
movsl
fdivrs
rcrl
xchg
cwtl
lods
pop
stos
sub
out
stc
dec
stos
les
push
sti
imul
adc
xchg
popf
or
inc
clc
mov
xchg
sub
out
lret
sbb
fsubrs
mov
inc
cmp
sbb
stos
aad
mov
or
pop
in
enter
sub
test
daa
movsb
and
or
push
call
pop
pop
addb
xor
filds
movsl
inc
lds
jecxz
jae
cmp
ljmp
dec
add
mov
pop
push
add
pop
push
mov
cltd
jns
lahf
pop
stc
xchg
outsl
push
test
je
or
sbb
lret
push
loopne
scas
lea
mov
mov
fld
scas
out
fwait
jnp
cs
adc
cmp
std
pop
fwait
inc
push
and
push
sub
jle
in
inc
call
dec
or
imul
and
push
inc
and
cmp
pop
adc
mov
pop
xor
js
test
push
fbstp
popf
sbb
out
sbb
loopne
pop
mov
sub
bound
push
pop
fnstcw
mov
addl
adc
pop
addl
sbb
insb
or
push
adc
and
inc
and
jne
cltd
sub
dec
inc
gs
mov
ljmp
mov
lret
jmp
outsb
adc
pop
scas
ss
cmp
flds
mov
jb
outsb
mov
sub
clc
and
dec
sub
mov
pop
in
adc
push
dec
cmp
push
dec
xchg
jmp
sarb
xchg
testb
adc
shlb
imul
mov
aaa
mov
out
icebp
mov
jecxz
jmp
das
aaa
movsl
mov
es
push
xor
pushf
cltd
jecxz
xlat
add
xchg
mov
dec
ret
inc
mull
insb
popa
pop
dec
and
pop
jb
cs
fldl
mov
je
push
jg
shll
cmpsl
lock
cwtl
push
in
xchg
jl
mov
mov
fisttpll
adc
iret
sub
pop
hlt
daa
and
and
sub
sub
mov
sbb
loop
lock
stc
mov
jno
pop
and
mov
xchg
jp
xor
jmp
insl
loope
mov
test
jle
cltd
fsubl
sbb
pop
cmp
jg
add
ss
pop
mov
in
pop
mov
xor
pop
sub
fcoms
mov
pmaxsw
or
out
fld
das
push
jl
jmp
mov
std
stos
pop
mov
cmp
mov
mov
rcll
push
ret
pop
mov
jg
dec
jnp
cmp
dec
jmp
mov
ss
test
mov
iret
iret
sbb
add
clc
cmc
sbb
jbe
out
inc
sbb
cmp
jg
add
roll
xchg
fidivs
insl
stc
cltd
aas
scas
ljmp
mov
js
addr16
cmpsl
dec
push
outsl
stos
push
loope
cmp
bound
xchg
scas
xchg
addr16
and
pop
fdiv
dec
xor
mov
push
and
pop
pop
push
or
cmp
pop
jle
enter
or
arpl
frstor
leave
dec
and
pop
xor
dec
add
hlt
stos
ljmp
mov
and
pop
addr16
mov
loopne
pop
adc
pop
in
or
ret
pop
fcmovbe
mov
imul
insb
sar
inc
sub
aas
pusha
lods
pushf
sahf
push
sbbl
aad
jo
testb
jmp
addr16
bound
dec
outsb
lock
or
cltd
jge
ret
cmp
mov
cli
push
cwtl
ds
lea
push
ds
pusha
and
rcrl
stos
mov
inc
mov
xlat
fwait
dec
push
cmp
int3
ret
pop
mov
adc
xor
dec
or
cli
jae
add
fdivrp
es
int3
mov
pop
daa
push
pop
mov
dec
inc
xchg
xor
push
cmp
fnstcw
push
test
mov
lods
push
repz
lret
inc
ds
out
in
mov
rcrb
mov
xor
inc
subb
pusha
inc
adc
and
adc
cmpsl
jno
push
inc
mov
and
lods
dec
jl
jnp
sar
sbb
cmp
jg
data16
sahf
push
dec
inc
and
and
push
sarb
shrb
je
mov
es
fs
xchg
dec
cmp
jle
call
fs
jo
add
pop
fmuls
cmpsl
jb
pop
addb
inc
jg
sarl
push
out
push
adc
lods
in
mov
jl
les
fisttpl
icebp
and
mov
shll
es
sub
push
pop
ds
sbb
inc
rorl
adc
jp
fiaddl
xchg
out
xor
or
jno
roll
cmp
mov
loope
jmp
push
adcb
adc
xchg
das
repz
rclb
inc
popa
mov
add
lcall
push
jnp
cs
xchg
inc
push
lahf
mov
sub
fwait
xor
xchg
fnstenv
fbstp
jb
movsl
rclb
loopne
lock
dec
push
lds
lahf
enter
test
in
push
cmpsb
push
push
pop
nop
cmpb
cmpsl
jbe
pop
jmp
sbb
dec
jb
dec
mov
cmpsb
cmp
enter
xchg
in
popf
daa
xor
ds
push
test
mov
push
mov
fnsave
mov
add
scas
jo
dec
cmpsl
mov
ret
mov
mov
or
pop
xchg
outsb
into
mov
sub
mov
pop
jb
out
mov
pusha
clc
xor
sbb
sbb
xchg
mov
dec
mov
xchg
mov
xchg
stc
sahf
mov
jbe
jo
cmpsl
or
iret
sti
add
lret
sbb
cmp
jecxz
and
inc
arpl
or
cmp
and
add
in
es
enter
mov
mov
out
mov
xchg
fdivl
out
loope
pop
mov
outsb
mov
iret
mov
jnp
jo
pop
js
mov
mov
test
push
pop
sbb
push
aam
loopne
outsl
adc
insb
sub
in
sub
xchg
or
push
shll
sub
cmp
data16
jne
mov
pop
mov
add
fcmove
ds
jle
xchg
pop
bound
test
repz
xchg
mov
push
arpl
scas
outsb
mov
addr16
outsl
mov
mov
fcoml
and
dec
xor
aam
rcrl
jmp
imul
jae
push
pusha
mov
dec
insl
andb
loope
dec
jne
lsl
adc
cli
dec
jecxz
and
push
call
pop
and
mov
add
cld
incl
sbb
xor
and
add
push
icebp
sbb
pop
pushf
mov
and
mov
sub
pusha
pusha
xchg
ret
mov
push
sti
or
jae
dec
sub
mov
pop
xchg
stc
mov
jge
jecxz
mov
mov
jns
xchg
dec
pushf
shll
aam
adc
mov
dec
js
sub
test
pop
mov
test
cmp
adc
and
xchg
decb
shlb
or
jge
mov
cmpsl
fnstenv
test
mov
gs
push
adc
popf
push
or
fdivrl
mov
fdivp
and
mov
push
iret
cs
and
pop
pop
pop
scas
xor
push
popa
xor
jns
mov
push
loop
nop
lcall
lods
inc
clc
cmpsl
pop
pop
std
out
dec
add
adc
movsl
vmovdqu
xchg
jmp
out
dec
dec
lahf
hlt
mov
inc
gs
add
pop
sbb
inc
cmp
dec
faddp
push
je
push
out
cmp
mov
bound
daa
sbb
pop
mov
adc
rcr
lahf
js
cmp
fisubrs
test
fidivrl
sub
and
and
leave
adc
xchg
cmp
cltd
and
repnz
xor
lods
mov
sub
cmp
adcl
mull
mov
das
sub
loop
aas
xchg
jno
or
pop
pop
xchg
inc
pop
fcmovb
or
out
data16
mov
rcrl
sbb
imul
data16
mov
loopne
xchg
and
lock
pop
insl
jge
mov
loope
fbld
and
rcl
mov
pop
lods
stc
mov
aas
pop
xlat
pop
xchg
cmpsb
arpl
xchg
mov
jbe
cld
cltd
jnp
cli
xor
mov
pusha
pop
mov
xor
fcompl
xor
add
movsl
not
jg
mov
add
enter
je,pn
sub
mov
push
dec
dec
out
loop
es
pushf
adc
adc
push
test
cmp
and
mov
dec
stos
pop
inc
mov
mov
in
loop
inc
outsb
mov
mov
mov
push
lcallw
push
int3
or
mov
pop
arpl
sbb
sbb
sub
aaa
push
xchg
push
in
outsb
adc
ret
push
xchg
add
xor
pop
and
or
mov
enter
fbstp
loope
sbb
jg
mov
es
push
add
push
mov
adc
and
outsb
enter
cmp
add
into
cmp
cmp
xchg
test
jne
push
pop
inc
in
add
xchg
rcpps
shll
mov
jno
sub
inc
xchg
int
lods
mov
aaa
adc
out
mov
in
ret
lcall
mov
movsb
jge
xor
mov
outsb
pop
aaa
jl
rolb
stos
adc
inc
daa
aam
pop
adc
dec
pop
push
loope
dec
jns
jge
inc
out
pop
lods
add
jmp
aam
popa
jecxz
jne
mov
fcompl
pop
dec
daa
jge
les
pop
pop
aad
repz
dec
mov
das
lret
jne
es
lds
scas
mov
scas
sub
mov
sub
daa
icebp
loopne
scas
mov
mov
fcmovu
popf
or
jbe
bound
pop
clc
and
cltd
jge
mov
cwtl
shrb
add
loope
adc
or
mov
dec
mov
ret
inc
inc
dec
popf
and
or
adc
jno
and
pop
mov
push
das
ret
or
push
xor
dec
and
adc
cs
loop
lods
or
mov
sbb
frstor
sbb
and
ds
in
lret
mov
xor
out
mov
shlb
xor
movsb
test
xor
push
repnz
lcall
jecxz
and
adc
mov
dec
outsl
mov
mov
daa
stc
aad
aaa
lea
dec
adc
in
dec
xor
scas
sbb
mov
pop
popa
int
xchg
cmpsb
inc
pop
lea
and
cmp
jl
mov
ret
inc
int3
scas
ds
sub
iret
mov
loopne
pop
jae
mov
cmpsl
fsub
sub
xor
cmpsb
scas
mov
xchg
or
call
xchg
roll
xchg
pushf
outsl
fxtract
lahf
cltd
imul
fstpl
addb
xchg
or
stc
dec
cli
add
fnstsw
cmp
sbb
and
jg
insl
pop
aaa
pop
jbe
mov
aaa
sub
fisubrl
gs
jle
fdivs
pop
loope
cwtl
hlt
aas
jecxz
inc
js
lds
xchg
je
insl
inc
adc
xchg
push
pop
mov
in
mov
daa
lods
mov
mov
sub
dec
xor
popf
rorl
outsb
int
mov
psrlq
mov
or
adc
loope
hlt
push
fimuls
push
xor
scas
xlat
or
jo
pop
xor
and
mov
sub
daa
dec
xchg
ja
lock
sub
out
xchg
stos
mov
out
pop
cmp
ja
inc
rclb
mov
push
pop
scas
mov
push
xlat
push
rolb
ljmp
stos
pop
fstpl
pop
int3
or
jno
jns
dec
jecxz
lcall
xor
dec
cmp
xlat
inc
push
add
pop
pop
stc
clts
adc
and
in
mov
cs
adc
das
mov
mov
jecxz
mov
mov
movsb
in
and
call
xchg
arpl
mov
cmpsb
jno
fsubs
lahf
jle
mov
es
cmpsl
dec
jns
inc
mov
outsb
xor
rolb
sub
xchg
adc
sbb
push
pop
scas
sbb
cs
xchg
jnp
data16
movsb
idivl
inc
cmp
out
leave
sbb
jle
sub
or
fwait
jb
scas
push
xchg
in
mov
das
or
pop
test
xor
fldl
xchg
loope
dec
dec
inc
pop
and
call
mov
sbb
jns
sub
pop
cmpsb
dec
push
ret
fsubrl
push
insl
lods
mov
adc
sahf
in
inc
jne
mov
dec
mov
push
mov
mov
into
pop
daa
roll
jno
fists
jle
xchg
xchg
stos
arpl
aaa
dec
pop
arpl
insb
and
mov
jg
scas
mov
es
hlt
dec
adc
std
xchg
push
popl
cmp
add
xlat
and
xchg
pop
test
pop
mov
add
in
mov
sub
xchg
xchg
addb
push
push
pop
dec
inc
or
je
xchg
imul
mov
mov
push
pusha
pop
jae
cwtl
adc
popf
sarl
lret
xchg
lock
out
pusha
mov
and
lds
mov
cmp
cmp
shlb
int
pop
pop
scas
cmp
dec
cwtl
push
test
std
test
and
in
cmp
js
jnp
aad
xchg
push
mov
fs
and
adc
into
mov
and
addr16
stos
mov
sbb
mov
fadds
mov
xchg
aam
pop
push
fmuls
arpl
pop
sbb
and
je
inc
jp
jbe
mov
movsl
shlb
lods
cwtl
outsb
es
mov
ficompl
das
popf
push
and
mov
mov
jmp
dec
sbb
bound
xchg
in
sub
and
mov
es
pop
push
mov
sbb
leave
adc
nop
cld
adc
adc
nop
cmp
adc
cmpsl
and
adcb
inc
sub
fmull
jmp
daa
jbe
outsl
cmova
daa
insb
lret
popa
sahf
and
addr16
xchg
pop
push
in
ljmp
or
mov
div
je
es
push
jge
sub
bound
mov
es
data16
mov
or
sahf
daa
pop
test
xchg
jecxz
popa
les
xor
mov
dec
shl
cmp
jns
mov
loopne
xchg
push
push
pop
aad
mov
mov
jecxz
popa
in
mov
and
sub
cmp
stc
sbb
mov
mov
pop
and
add
cwtl
movsl
cmp
sub
and
jle
xlat
mov
mov
push
subl
push
rorl
gs
and
fsubs
and
push
shrl
outsb
sahf
and
lds
outsb
push
inc
sub
cltd
test
cmpsl
add
je
dec
mov
scas
sbb
push
and
mov
mov
mov
xchg
lods
adc
jecxz
mov
mov
pop
jle
mov
sbb
inc
add
inc
dec
lea
in
imul
fs
sbb
xchg
call
xchg
cmp
insl
out
push
xchg
xchg
daa
ficomps
pop
sub
xchg
pop
and
and
mov
mov
mov
sbb
mov
aam
pop
mov
aad
shlb
sti
pop
ja
ret
fimuls
fdivr
cmp
jg
out
sarl
mov
popa
mov
mov
jns
jle
adc
mov
stos
out
pop
fldt
test
repz
ret
lods
mov
and
pop
test
mov
and
fdivl
ret
jmp
push
pop
pop
sbb
push
jno
daa
sbb
push
loopne
fidivs
out
fdivr
jo
ss
fnstcw
ds
test
mov
outsb
jle
scas
movsl
sbb
jns
pop
fstpt
lods
scas
jbe
int
and
test
xchg
fdivrl
jle
pop
addr16
in
mov
sahf
fwait
das
mov
jg
fdivrs
mov
mov
outsl
or
ja
cmp
lret
ljmp
xchg
mov
stos
mov
pop
call
es
out
test
adc
decl
mov
mov
add
dec
cmpsl
test
sub
sbbb
cmp
pop
pop
push
cmpsl
pusha
add
jo
and
pop
insl
sub
inc
aaa
mov
push
rclb
lahf
xchg
aas
lea
pop
mov
rcll
cmp
mov
sbb
mov
mov
jl
sbb
rorb
fimuls
das
icebp
in
clc
es
xchg
cmpsl
test
dec
pop
arpl
push
lods
outsl
in
cmp
jns
lods
pusha
lea
adc
sbb
data16
aam
mov
mov
jnp
pop
stos
ja
cmpsb
lods
dec
mov
mov
xchg
sbb
push
lret
fs
in
adc
mov
sbb
enter
adc
rorb
mov
data16
imul
aaa
sahf
lcall
rcrl
xor
nop
push
es
inc
repnz
inc
mov
jnp
enter
int
sti
in
in
mov
mov
mov
mov
fsubr
jle
insb
jne
inc
test
push
sbb
imul
mov
or
sarl
mov
jmp
add
fldcw
and
mov
mov
mov
or
sbb
stos
adc
push
mov
sbb
pop
call
mov
loope
mov
sti
cli
cmp
ss
and
push
mov
insb
inc
cs
jg
sbb
xchg
dec
inc
call
frstor
pushf
inc
mov
js
cltd
jnp
push
popa
xchg
stos
pop
inc
repnz
ss
dec
loope
mov
sbbl
adc
inc
dec
mov
inc
cmpsb
es
stos
jecxz
jb
pop
outsl
xor
iret
outsb
cltd
xchg
mov
flds
push
dec
inc
xchg
inc
and
sarl
sub
xchg
mov
aas
adc
int3
and
daa
out
push
cmp
and
cmp
scas
pop
clc
mov
mov
hlt
mov
push
mov
callw
daa
scas
out
and
cwtl
sub
popa
divb
pop
mov
mov
sub
push
lods
pop
cmpsb
mov
sarb
movsl
iret
sbb
and
mov
push
in
das
and
pop
mov
fistpl
and
call
mov
push
xchg
sub
sbb
lock
xor
dec
gs
add
mov
cs
sbb
dec
sub
push
imul
into
xchg
sub
cmp
cmpsb
pop
scas
sub
sub
lods
fwait
xor
xchg
addr16
xor
cmp
es
mov
js
popa
js
scas
mov
rsqrtps
push
cmp
push
daa
pop
sbb
addr16
jno
vmwrite
push
cwtl
in
lods
lock
dec
xchg
mov
cld
sbb
dec
inc
jns
addb
and
mov
or
jb
and
ja
adc
pop
push
stc
jecxz
cmpsb
xchg
es
in
cmp
jnp
pusha
jg
loope
cs
pusha
push
je
lret
inc
jnp
xorl
xor
scas
daa
push
inc
stos
fstpl
sbb
pop
fs
and
pusha
xchg
inc
arpl
sbb
mov
xchg
pop
sub
and
pop
es
push
inc
sub
in
push
je
inc
inc
inc
scas
fsub
mov
das
inc
sbb
arpl
mov
mov
out
sub
sub
repnz
xchg
sbb
adc
mov
lea
pushfw
pop
add
adc
popf
mov
cmp
sbb
dec
ret
xchg
test
mov
adc
and
shl
push
push
and
or
mov
loope
mov
fistps
adc
loope
scas
sub
and
and
dec
pusha
push
pop
and
dec
js
or
inc
ds
xor
jbe
dec
xchg
mov
arpl
rcr
shll
jmp
push
aam
inc
pop
and
mov
and
lahf
jo
jb
int
cld
test
jmp
cmp
sbb
addb
inc
popa
sbbb
popf
xor
sub
pop
push
and
inc
mov
and
div
inc
in
push
mov
in
xor
inc
mov
push
mov
outsl
sub
pop
and
divps
mov
dec
outsb
inc
sbb
adc
sub
scas
push
and
pop
cmp
outsb
aas
mov
xchg
pop
jmp
ret
push
inc
stos
aas
dec
push
and
inc
add
ds
cmp
fstpl
push
dec
sub
cmpsb
in
push
rolb
push
cmp
cmpsl
popw
sub
inc
out
rcr
or
inc
mov
inc
and
xlat
fisttpl
out
movsl
and
in
pop
outsb
mov
cmp
mov
sti
movsl
arpl
icebp
in
iret
and
outsl
subb
test
mov
sub
cld
ficompl
cmp
inc
movsb
inc
cli
in
out
out
cmpsl
test
movsb
mov
xlat
int3
mov
je
xchg
nop
cmpb
aaa
out
call
aam
test
cwtl
lcall
dec
push
dec
jb
sahf
sub
in
inc
xor
pop
adc
out
gs
movsl
mov
push
cmp
test
sub
inc
push
mov
ljmp
and
cltd
mov
mov
pop
or
dec
ds
sti
nop
aas
imul
pop
xlat
or
aad
fsts
pop
and
pop
out
lret
sbb
andb
sbb
fs
add
aam
xlat
push
fistpl
mov
mov
add
pop
sub
xchg
pop
fwait
jl
sahf
pop
sahf
jl
mov
mov
rolb
xchg
add
shl
in
mov
cmp
shlb
es
ficoml
add
scas
idivb
mov
xchg
or
or
adc
fldenv
jo
arpl
inc
mov
repz
xorb
push
xor
add
or
xor
lock
mov
mov
xor
xlat
lret
lods
testl
push
xchg
and
pop
mov
lcall
push
push
jle
test
xchg
imul
jle
cli
je
jle
inc
out
or
mov
cmc
in
jg
subl
aaa
inc
subb
jle
add
test
scas
std
add
mov
push
and
or
js
adc
lret
or
pop
cmp
pop
and
jmp
popf
mov
cs
push
fs
jmp
lea
sti
xchg
je
sti
xchg
out
add
xorb
cmp
jle
adc
ja
add
fcomps
jmp
xor
popa
push
out
push
pusha
xchg
mov
and
outsb
adc
enter
adc
jl
add
add
shrb
mov
mov
mov
out
es
rclb
push
daa
sub
out
xor
fdivrl
lods
hlt
cmp
and
sub
movsl
lods
sub
mov
xchg
xor
mov
jp
add
mov
addr16
jo
mov
mov
jns
mov
mov
loop
out
mov
mov
bound
lods
push
subl
pop
pop
jle
dec
imul
xchg
fcoml
es
push
daa
popf
ret
xchg
sub
std
fs
lods
insb
cmp
imul
sbb
cwtl
add
mov
mov
ljmp
cli
pop
setle
imul
mov
scas
add
pop
xor
leave
pop
dec
mov
flds
push
sar
aaa
in
lret
aaa
xor
sbb
dec
subl
mov
and
fcomip
pop
push
ror
mov
cmpsb
adc
es
addl
lock
push
jbe
lea
cli
popa
loopne
xchg
xchg
out
pop
pop
mov
shlb
mov
mov
cmp
push
filds
insb
cmp
ret
les
into
dec
fbld
and
jle
inc
sub
fst
mov
cmp
call
add
push
ljmp
scas
pop
int
xor
jle
inc
and
add
repnz
add
js
and
push
mov
xchg
jae
adc
es
aas
cmpsb
jl
mov
cwtl
add
fldl
sbb
in
mov
jge
jmp
push
xlat
dec
fistps
push
dec
mov
out
ja
or
out
adc
cmp
push
mov
sbb
test
pushf
pop
lea
xor
test
pop
pop
mov
pop
pop
ja
push
mov
sub
sub
outsb
popa
sahf
lea
in
inc
xchg
sti
jl
sbb
pusha
or
push
inc
jo
mov
js
fcmovnu
dec
daa
push
mov
out
arpl
enter
xchg
shll
cmp
je
push
and
mov
loope
and
inc
outsb
cmpsb
xor
mov
xchg
out
subb
push
lock
dec
inc
sbb
push
xor
pop
push
not
push
cmp
adc
jmp
xchg
jne
sub
and
xorl
mov
in
popa
insl
pop
inc
xor
mov
sub
jo
pop
out
jnp
aad
lods
xchg
xchg
xchg
sbb
js
xor
push
xchg
arpl
dec
or
inc
scas
stc
fisttpl
cs
cwtl
cmpsb
sbb
mov
mov
mov
dec
jns
sbb
iret
loop
push
aad
aas
cmp
out
mov
test
sbb
dec
sbb
pop
jo
jl
jl
fisubrl
scas
xor
cmpsl
push
and
inc
sbb
imul
fbld
and
xor
in
and
jmp
push
sbb
sarl
js
adc
cmp
push
cltd
mov
aas
push
mov
sub
push
mov
xchg
movsl
add
clc
and
add
cld
out
sahf
jb
push
fs
dec
and
mov
jno
pop
mov
and
outsb
call
lcall
push
out
xchg
mov
sbb
pusha
mov
outsl
inc
mov
mov
adcl
mov
dec
push
pop
mov
inc
aas
orb
lea
aas
add
clc
lea
xchg
shll
outsl
cmp
cmp
xchg
scas
or
pushf
adc
loopne
aad
sarl
and
mov
push
push
jb
xchg
imul
add
sbb
cmpsl
stc
push
pop
jp
in
pop
push
fsubr
dec
pop
mov
in
incl
testb
push
dec
stos
call
and
fistpl
push
jg
in
jecxz
fdivrs
js
es
push
jne
and
push
jmp
cwtl
inc
cltd
mov
popf
mov
pop
pusha
mov
imul
push
fnstsw
or
pop
lahf
cmp
jmp
jg
into
dec
bound
mov
pusha
dec
mov
mov
dec
sahf
daa
test
pop
sbb
ds
xchg
mov
sub
inc
call
call
dec
jg
mov
pushf
enter
mov
sahf
sbb
bound
test
xchg
cwtl
pop
addr16
xchg
push
mov
pop
xor
cmp
and
or
out
js
int
sbb
lods
ret
mov
lcall
sbb
xchg
gs
xor
std
inc
mov
aas
mov
mov
std
ja
inc
movsl
insl
cwtl
nop
mov
jmp
popa
rcr
dec
addr16
adc
cmovb
add
jge
sub
addl
pop
mov
pop
lcall
inc
popf
mov
je
stc
pop
push
cmp
loopne
xchg
fucom
push
cmp
mov
out
mov
xor
std
add
call
psubq
inc
ret
adc
arpl
aam
cltd
cmpsb
mov
xor
push
push
clc
push
cmp
mov
pop
je
fsubl
test
adc
inc
mov
and
ffreep
pop
xlat
jns
and
xchg
and
daa
inc
int3
popa
stos
push
loopne
mov
mov
adc
stc
mov
adc
and
push
mov
dec
mov
adcl
cmpsb
addb
lea
mov
xchg
cmp
pop
pop
inc
mov
sbb
sbb
stos
push
xchg
jmp
nop
mov
rcl
mov
pop
icebp
xchg
mov
inc
ret
mov
rcrl
mov
and
and
lret
pop
pop
loopne
movsl
mov
aas
push
push
inc
ret
add
pushf
xor
gs
les
pop
into
pop
jle
xchg
sbb
arpl
inc
andl
insl
cmc
aam
insl
in
aam
insl
not
push
insl
clc
aam
inc
mull
pusha
call
dec
aam
jo
jg
xchg
adc
sahf
inc
mov
in
add
pop
jg
jmp
mov
incb
mov
xor
fnstsw
pop
mov
pop
bound
lods
push
ret
je
bound
sbb
push
inc
clc
jmp
das
or
ja
aam
push
push
out
mov
cmp
and
sahf
push
testl
aas
and
pusha
add
fldcw
cmp
dec
xor
or
mov
jg
jecxz
sbb
jecxz
dec
out
push
dec
xor
sbb
pop
and
jo
xor
push
inc
dec
adc
mov
lret
shl
bnd
mov
mov
and
sub
push
xchg
test
insl
push
fidivl
mov
add
dec
cmp
in
out
mov
jo
cli
popa
push
divl
or
mov
clc
jle
out
sbb
test
out
sub
in
or
jge
xor
sub
loopne
xor
mov
sarb
xor
dec
push
mov
shl
cmp
les
pop
fs
xchg
out
ficoms
or
inc
inc
pop
xlat
outsl
pop
xchg
xchg
mov
xchg
xchg
sbb
daa
daa
cmovs
insb
and
xor
arpl
scas
mov
dec
in
mov
imul
lret
daa
mov
inc
sahf
mov
cmc
or
mov
cwtl
push
ds
out
pop
or
dec
call
int3
mov
mov
pusha
cmp
outsb
dec
pop
pop
push
nop
jecxz
les
cs
xor
and
test
in
sbb
adc
xchg
jecxz
fstpl
adcb
bound
inc
xor
cmp
push
scas
adc
das
aam
cwtl
push
ljmp
inc
xchg
in
adc
pop
push
adcb
and
es
fistps
mov
mov
push
std
mov
xor
test
daa
popa
fsubrs
lods
add
pusha
dec
dec
out
bound
push
mov
inc
mov
stos
addr16
clc
inc
xchg
cwtl
and
xor
rcr
mov
or
push
and
repnz
mov
shll
leave
mov
jnp
dec
xchg
pop
cmp
fisubrs
mov
js
fisubl
xchg
pop
daa
arpl
dec
jge
lret
mov
push
sub
and
cmp
outsb
int
loop
sarl
insb
pop
cmp
and
pop
xor
lcall
fsub
sbb
dec
mov
sahf
jns
add
push
mov
aad
cmp
sub
pop
jp
xchg
mov
pop
dec
nop
jb
jle
mov
jbe
adc
dec
pop
xor
jb
pushf
scas
add
mov
or
xchg
out
cmp
pop
rorl
add
mov
lcall
sbb
clc
repnz
daa
sub
add
loopne
cmp
out
cmp
fbld
xor
jb
scas
sbb
ret
sbb
nop
pop
lea
and
adc
fucomip
aas
sub
xchg
lods
pop
xchg
mov
stc
cmc
mov
mov
and
sub
mov
and
inc
verr
xor
sub
fs
xchg
test
mov
jecxz
loopne
inc
aaa
cmp
add
hlt
cmpsb
test
push
jnp
inc
push
bound
mov
mov
sbb
xchg
mov
pushf
cltd
push
jb
rorb
xor
es
mov
fs
rcrl
pop
add
push
insb
or
push
ljmp
jmp
imul
push
cmp
mov
inc
jo
shlb
cld
pop
fidivs
mov
jmp
jnp
mov
mov
mov
pushl
cltd
sbb
jle
hlt
inc
lahf
xchg
jo
push
xor
inc
jmp
scas
ret
dec
popf
and
dec
lods
sbb
aad
xor
pop
pminsw
out
add
into
mov
std
loopne
movsl
mov
mov
sbb
mov
fsubrs
repz
fiadds
fdivs
bound
lcall
ret
inc
jno
pop
xchg
fisubl
fwait
into
add
and
push
test
and
test
sahf
jns
pushf
enter
ret
pop
bound
ss
neg
cmp
stos
sbb
ret
and
iret
icebp
xchg
jne
stos
sub
mov
mov
pusha
ret
jle
adc
push
es
inc
cmc
sahf
and
enter
iret
xchg
mov
lcall
stos
adc
cmpsl
cmpsb
aad
pop
add
call
adc
das
mov
mov
sbb
fisttpll
shl
and
arpl
aam
ret
out
stos
fstpt
aas
push
inc
sub
addb
aam
vpmovsxbq
popa
sub
in
jns
popf
stos
aas
xchg
hlt
jle
rolb
jg
ss
and
jg
aam
cmc
adc
lcall
pop
adc
mov
mov
fnstenv
sub
arpl
xor
push
jbe
int3
stc
lea
xchg
jmp
push
test
push
scas
ds
mov
sub
push
out
sbb
cmp
push
inc
push
pusha
lcall
xor
push
hlt
dec
push
mov
js
shrl
in
or
cltd
fistps
addr16
pop
fwait
sbb
sbb
sbb
sub
lret
pop
test
les
or
mov
mov
jle
xor
mov
movsl
in
aad
xor
sarl
and
mov
pop
pop
test
mov
pop
mov
xor
inc
testl
push
cmc
daa
push
push
cmc
push
xchg
xchg
mov
das
cld
and
call
adc
sbb
imul
pop
cmc
mov
cs
pusha
mov
mov
xchg
add
mov
daa
clc
jg
mov
dec
push
call
pop
push
popf
cs
jne
jecxz
and
pop
push
inc
outsl
mov
icebp
lock
pop
mov
jecxz
mov
adc
in
inc
push
mov
sbb
pop
das
lcall
jnp
push
mov
jnp
nop
out
adc
sbb
mov
sub
xchg
mov
lcall
lods
inc
adc
jbe
cmp
call
adc
bound
inc
xor
jno
ret
pop
test
and
fstl
mov
daa
pushf
jle
fisttpl
push
or
xchg
jg
pop
adc
mov
cmpsb
jbe
sub
bound
xchg
es
ficoml
mov
jle
dec
xor
pusha
or
add
loopne
xchg
jb
ja
mov
ljmp
xchg
clc
lahf
repnz
push
hlt
push
ret
rorl
jecxz
fwait
leave
mov
es
dec
int3
pop
dec
cs
fstpt
push
icebp
cmp
xchg
jnp
dec
into
mov
aaa
cmpsb
cmp
inc
inc
jns
idivl
pop
lock
gs
aas
xor
cld
push
push
inc
xchg
movsb
jecxz
cmpl
inc
bound
es
pop
push
sub
fbld
inc
sub
mov
aad
dec
pop
cmp
mov
mov
insl
mov
mov
xchg
leave
and
pop
mov
sbb
dec
push
or
in
sbbl
stos
or
xchg
in
cmp
aad
lcall
movsl
xchg
mov
lods
cmpsb
mov
scas
or
jno
fcomps
jg
sti
cli
addb
sbb
push
pop
or
push
movsb
xchg
xchg
push
sbb
sbb
or
xchg
cmp
adc
mov
ja
and
push
out
and
insb
and
loopne
in
ret
imul
into
daa
and
inc
sbb
movb
adc
scas
dec
arpl
out
jno
xchg
pop
pop
xchg
addr16
es
outsb
jecxz
int
sub
mov
popa
es
mov
inc
popa
cltd
mov
jle
xchg
and
ret
lcall
daa
pop
jg
repnz
jns
popa
and
popf
jns
mov
movsl
outsb
inc
pop
nop
pop
or
bound
xchg
xchg
ss
add
stos
xchg
pop
clc
mov
mov
test
sbb
adc
scas
mov
or
pop
and
mov
filds
inc
lods
out
dec
jns
js
cwtl
mov
xchg
cli
jp
and
fidivl
sbb
xchg
daa
inc
mov
movsl
ret
es
xchg
divl
stos
cltd
xchg
aaa
mov
mov
inc
sub
les
aaa
sub
in
jnp
cmp
xchg
insl
adc
std
pop
sbb
repnz
inc
inc
dec
pop
add
arpl
pop
outsl
lcall
movsl
fnstenv
outsb
scas
xchg
rol
sub
mov
fadd
inc
fadd
shrb
xchg
mov
sahf
mov
ljmp
push
sar
mov
es
shlb
jno
mov
inc
pusha
mov
sbbl
sarb
xor
cmp
leave
add
test
aaa
call
idivl
ja
mov
sbb
ficoml
add
pop
daa
movsb
and
sbb
and
sub
mov
jle
arpl
mov
mov
pop
cwtl
cltd
sbb
mov
hlt
enter
sbb
idivl
aad
inc
inc
sub
lret
and
cmpl
bound
loopne
jmp
pop
mov
mov
inc
arpl
mov
ja,pt
scas
mov
clc
sub
jge
jmp
xor
inc
or
add
arpl
out
pop
sbb
lret
cmpsl
orl
adc
ret
jge
repz
add
jnp
pop
fsubs
aas
std
push
out
xor
pop
rcll
pusha
sbb
adc
xchg
push
push
idiv
mov
jecxz
flds
sub
outsl
mov
out
mov
out
mov
jae
ds
daa
ret
inc
fcomps
pop
das
fidivrl
mov
fwait
push
add
mov
inc
mov
xchg
pusha
xchg
ficoms
xor
pop
push
lods
enter
and
and
and
pop
xor
insb
sarl
pusha
push
fiaddl
sbb
dec
rep
or
mov
xor
pop
ja
cmpsl
cmp
bound
inc
pop
fnstcw
push
push
insb
dec
dec
pop
pop
push
pop
pop
out
push
ljmp
push
adc
pop
mov
fimuls
mov
xchg
dec
jecxz
add
sahf
xor
fsubrs
or
push
fs
fs
pop
es
pop
cmpsl
cmp
pop
in
jnp
pop
xor
f2xm1
das
cs
mov
push
aad
pop
sbb
push
and
dec
daa
imul
mov
mov
mov
loope
mov
jle
pop
mov
push
mov
pop
inc
xor
and
mov
xchg
mov
cs
int
ret
mov
jle
insb
push
mov
xchg
mov
jns
popa
xchg
sarb
sbb
pop
jno
loop
scas
xor
xor
js
jle
lahf
test
cmpsb
pop
push
cs
pop
or
imul
sbb
cli
add
adc
inc
push
mov
iret
jge
jae
ljmp
mov
ficomps
ds
inc
into
adc
mov
mov
sbb
mov
push
and
mov
xchg
xor
out
data16
es
insl
and
add
push
push
adc
sahf
and
loopne
inc
sbb
sbb
dec
pop
fdivrl
mov
stos
push
test
mov
popa
xor
ret
addr16
int3
lret
mov
in
loopne
shll
and
ljmp
ljmp
lret
idivb
sub
xchg
cmp
outsl
pop
inc
add
std
cmp
mov
loope
mov
dec
pop
icebp
cmp
mull
jbe
and
lret
mov
lods
sbb
stos
jbe
xchg
cmp
adc
push
and
mov
mov
popa
sub
das
adc
js
sbb
scas
push
mov
push
inc
lods
mov
xchg
and
sub
push
sub
xchg
icebp
data16
fidivl
test
or
and
out
sbb
mov
lock
fisttpl
jns
push
stc
addr16
leave
mov
into
push
movsb
mov
js
mov
inc
mov
push
pop
xor
cmpsb
xchg
ret
aaa
shl
mov
mov
stos
mov
mov
mov
cltd
adc
sbb
cmp
or
icebp
js,pt
cmp
out
fistl
mov
jp
jns
inc
xor
cmp
jg
sahf
sub
inc
push
jle
xchg
out
cmp
scas
adc
lods
jo
addr16
xor
lcall
movsl
inc
cmpsl
daa
fsubs
js
imul
fistpl
in
lock
arpl
mov
gs
ja
int
sub
cmp
dec
scas
pop
xbegin
inc
xchg
cmp
imul
cmp
addr16
or
push
mov
sahf
sbb
push
jne
lods
mov
inc
xchg
popf
pop
imulb
push
fnstsw
pop
addr16
rcr
mov
subb
je
xchg
hlt
das
cmp
or
out
cmp
jmp
jp
in
stos
dec
mov
int3
xlat
pop
je
mov
clc
inc
lods
mov
js
sub
pusha
pushf
rolb
xor
mov
movl
out
and
cmp
jbe
ds
push
cmp
mov
dec
mov
daa
mov
xchg
imulb
stos
jae
pushf
cli
test
and
jb
fsts
adc
cli
jns
jo
jo
push
jae
sub
xor
mov
mov
lcall
cmp
idivl
and
popf
mov
movsl
in
jne
outsb
or
cwtl
mov
xchg
iret
cwtl
shrb
cmp
add
mov
and
lea
jle
cltd
lock
icebp
pop
js
push
and
dec
decl
mov
icebp
pop
rcll
xor
lock
arpl
scas
adc
loop
mov
adc
or
bound
dec
and
lahf
cmpsl
scas
and
sarb
dec
das
mov
inc
in
stos
jo
rorl
jb
pop
sahf
inc
imul
inc
fstpt
sbbb
and
cmp
test
pop
mov
aad
mov
push
aas
xchg
pop
sbb
outsb
das
sub
scas
cltd
repnz
sbb
ja
repz
dec
lret
sbb
and
push
imull
push
mov
clc
pop
push
fdivs
push
test
iret
ss
ficomps
movsl
push
lret
cltd
push
cmp
adc
cs
pop
pushf
loope
aaa
xchg
lea
or
xchg
stos
xchg
lahf
pop
add
mov
sbb
pop
addr16
sub
mov
cwtl
xor
sahf
sbb
sbb
or
sub
popa
mov
push
pop
dec
stc
mov
mov
push
mov
insb
ret
mov
mov
xchg
jne
mov
aas
or
cmpl
fcomp
push
mov
push
cmp
pop
cmp
popa
cwtl
mov
pop
loop
pop
int
xlat
pop
and
loop
pop
rorl
pop
movsl
mov
and
xchg
nop
push
cmc
xor
mov
xor
repz
mov
lods
cli
push
push
iret
mov
xchg
scas
add
aad
jnp
cmp
adc
shl
pop
sub
pop
fiadds
addl
je
inc
decb
jge
xchg
repnz
subb
dec
scas
xchg
or
rorb
inc
adc
fildl
mov
jge
jbe
add
jl
in
fadds
pop
fwait
lock
jge
and
sub
call
sbb
sar
fwait
jle
adc
mov
test
fldl
sbb
int3
arpl
pop
filds
aaa
andl
jns
decb
lcall
sub
adc
sub
stos
enter
push
inc
mov
add
icebp
sbb
mov
and
icebp
mov
mov
aad
add
push
shlb
test
cli
int3
inc
fsubs
adc
push
sub
xorb
les
xlat
hlt
mov
mov
xor
cmp
insl
push
pop
inc
lods
loopne
shl
fwait
sar
xchg
in
add
add
cmp
in
loopne
dec
dec
lds
xchg
pop
lret
jp
inc
inc
sbb
pop
lcall
aas
in
scas
ss
and
fcomps
adc
jbe
pop
mov
mov
sub
scas
mov
sbb
aas
xchg
pop
rolb
sbb
movsb
mov
jge
adc
mov
mov
mov
fsubs
and
mov
outsl
mov
jge
jns
pop
and
push
sbb
and
push
pop
lret
add
loopne
jnp
clc
dec
jg
arpl
adc
xchg
aad
in
inc
test
and
repnz
enter
negl
adc
xchg
add
movsb
mov
test
scas
add
test
mov
cmp
shrb
lahf
push
stos
push
cmpsl
cmpsl
ljmp
sub
adc
mov
xchg
jae
loope
xchg
in
pop
icebp
or
icebp
mov
dec
ret
jae
fwait
inc
mov
movsb
dec
clc
adc
xchg
outsl
repz
xchg
scas
and
rcll
fmuls
pushf
pusha
dec
jb
fsubl
adc
es
sub
jg
mov
lahf
adc
pop
imul
xchg
in
cs
and
xor
push
pop
lahf
jbe
stc
cmpsb
cmp
aas
xchg
sbb
mov
jns
xor
in
sbb
xchg
xlat
sub
push
pop
jns
push
fcmovbe
dec
adc
add
xchg
fimull
aaa
adc
in
or
imul
fdivl
ret
test
ret
sub
movsb
dec
popf
adc
lock
cmp
cs
fwait
xlat
push
adc
push
cmpsl
and
pushf
sbb
or
cltd
push
in
push
sub
arpl
cmp
or
mov
out
sahf
mov
and
jge
mov
lahf
loope
xor
xchg
xchg
pop
mov
add
andb
addr16
pusha
out
add
add
mov
xchg
daa
pop
mov
adc
lock
movsl
jecxz
test
loop
mov
dec
out
lahf
inc
addr16
pop
mov
mov
jmp
sub
leave
loop
xchg
lock
jno
nop
lds
mov
jl
inc
lods
push
pop
push
cs
lret
push
push
fidivrl
jae
jb
aam
mov
xchg
push
out
outsb
std
jecxz
cwtl
cltd
hlt
testb
outsb
inc
sub
dec
xor
and
add
int
mov
fwait
sub
aaa
xor
movsb
icebp
fistps
push
and
xor
push
mov
loopw
movsb
daa
sub
xor
mov
orb
and
pop
lahf
dec
pop
pop
mov
inc
arpl
inc
xchg
pop
ret
mov
iret
mov
decl
adc
dec
or
pop
iret
add
push
cs
stos
out
sarb
jp
sbb
pusha
cmpsl
xchg
pop
inc
mov
clc
dec
adc
aad
ds
pop
add
pop
dec
lcall
js
adc
jo
mov
sbb
pop
cmp
and
sahf
sbb
rclb
leave
push
pop
filds
or
add
dec
or
mov
in
inc
cwtl
mov
les
loop
mov
add
jno
cmp
pop
jle
ret
fstpt
mov
aaa
imul
fstps
cmp
jo
jo
sbb
push
inc
xlat
add
push
out
mov
lods
loopne
repz
sub
and
je
ljmp
mov
xchg
sub
sub
movsb
movsl
push
sbb
js
repz
mov
cmp
loopne
jo
ljmp
xlat
sbb
cmp
test
lret
push
shlb
loop
stos
ds
mov
insb
mov
shl
out
pop
dec
dec
lock
jge
out
repnz
loopne
xor
inc
or
or
pop
jo
sbb
icebp
insl
fsts
inc
pop
xchg
call
mov
pop
mov
pop
xchg
stos
sbb
sbb
insb
xor
or
lea
into
add
imul
in
outsb
mov
pop
idivb
mov
add
das
pop
pop
xchg
mov
inc
add
sbb
and
hlt
mov
loope
outsb
mov
and
lret
mov
mov
ror
jnp
rcrb
xchg
mov
pop
pop
mov
jle
call
mov
mov
fldt
cmp
fldenv
stc
push
loope
out
lahf
xchg
or
or
out
pop
popf
jecxz
fistpll
jg
jno
mov
dec
mov
cmp
jle
cld
xchg
cmpb
popa
xlat
lahf
sbb
sarl
popa
pop
dec
daa
cwtl
repnz
inc
popa
inc
test
xorb
mov
xor
pop
daa
mov
aas
add
imul
pop
gs
cmp
xchg
push
fnstenv
test
cli
xchg
in
jmp
stc
xchg
xchg
pop
js
mulb
insb
push
mov
cmp
sub
dec
lods
out
bound
jp
xor
xor
dec
es
out
popf
cwtl
lea
movsb
and
jae
adc
jg
scas
stos
int3
jno
mov
jo
aam
mov
push
shlb
xchg
and
push
push
sub
add
imul
jbe
mov
sbb
stos
push
push
addr16
dec
inc
mov
cmp
mov
rcrl
jmp
and
mov
sub
jb
in
in
mov
and
loop
xchg
imul
mov
es
fldenv
xchg
rorb
inc
or
pop
adc
dec
adc
inc
sahf
jle
sbb
ds
mov
stos
aas
js
rclb
and
lret
sbb
popa
fwait
cmp
cmpsl
jb
loopne
push
out
sti
cmp
mov
pop
lcall
cs
adc
mov
icebp
lcall
out
push
cmp
mov
add
daa
push
je
cmp
dec
mov
popa
cmp
jcxz
sub
sub
call
mov
cmp
push
pop
jg
pop
daa
jo
push
xor
scas
icebp
sbb
enter
push
sbb
push
adc
or
push
pop
or
push
out
jp
xchg
xchg
jp
xchg
dec
add
movsb
lahf
add
roll
out
add
adc
test
data16
je
out
pop
adc
icebp
mov
push
imul
insl
push
or
jno
or
faddl
std
cmpsl
es
jp
xchg
loope
and
movsb
lahf
in
pop
shl
out
add
adc
sti
mov
cmp
into
pop
xor
rorl
xor
das
dec
push
call
push
push
dec
in
sub
and
frstor
rclb
movsb
lahf
lds
rol
out
add
adc
fstpt
inc
push
ss
sbb
scas
xlat
lds
jb
int
cmpsb
adc
xchg
jae
stc
fwait
hlt
hlt
shlb
cli
out
cmp
pushf
dec
add
sahf
mov
mov
lahf
lock
sbb
test
movsb
pop
xchg
daa
cli
jb
dec
scas
mov
fildl
aad
lcall
sti
mov
lea
aad
xchg
and
jnp
sbb
mov
xchg
adc
dec
adc
cmpsb
insl
mov
arpl
sahf
inc
inc
test
subl
sbbl
fs
mov
push
add
fidivrl
mov
sbb
cltd
popf
fldt
out
dec
inc
scas
jbe
inc
bound
dec
popf
jmp
adc
stos
jbe
out
cmpsl
repnz
aas
mov
scas
fwait
testb
not
sbb
dec
and
mov
lcall
jbe
pop
mov
lods
js
sub
rcrb
xchg
orb
cmp
inc
mov
cmpsb
xlat
xchg
xchg
push
inc
cld
fwait
or
shl
adc
sub
and
subl
test
roll
dec
pop
and
bound
and
mov
dec
pop
test
mov
bound
xorl
pop
sbb
mov
xchg
mov
cmpsl
shlb
int
lcall
pop
test
test
dec
cltd
lahf
dec
inc
mov
lret
and
cmp
fdivr
sahf
fadds
imull
loop
jmp
inc
sti
mov
repz
jg
aam
decb
jmp
xchg
xchg
ret
cli
sub
rcl
jl
push
out
adc
out
orb
xchg
mov
sub
mov
cli
push
inc
addl
out
mov
and
mov
out
lea
push
xchg
enter
ss
loope
fildl
out
pushf
in
pop
cmc
in
aas
lods
cmp
xchg
fistpl
inc
mov
add
mov
pop
mov
dec
add
push
ret
in
push
out
inc
popf
jbe
es
icebp
xor
addl
icebp
ja
xchg
push
and
pop
fisttpl
aas
movsb
push
nop
lahf
mov
mov
es
pop
cmp
dec
fidivrs
jmp
cmc
fidivrl
test
xchg
add
cmp
pop
leave
cmpsb
enter
sbb
dec
mov
leave
cmp
sub
mov
sub
dec
sahf
xchg
xor
int3
mov
addr16
stos
add
ret
inc
fsubrl
xor
fisubrl
fldcw
xchg
jne
lcall
lods
sub
addb
sar
jg
in
pop
cli
push
sbb
push
xchg
pusha
daa
inc
mov
add
aas
fldl
add
cmpsb
xchg
cmp
pop
test
jbe
push
xchg
jbe
xchg
out
scas
jo
push
stos
sub
mov
jbe
xchg
pop
aam
jo
inc
sub
jb
dec
bound
mov
scas
jae
adc
inc
jmp
lea
cmp
sbb
in
push
fs
popf
popf
fisubrl
dec
call
mov
cmp
filds
push
test
dec
jl
movsb
loopne
add
cmp
mov
cmc
xchg
pop
cmp
outsl
aaa
lock
push
mov
nop
or
mov
pop
push
aas
out
scas
sahf
dec
fisubl
and
mov
dec
push
xchg
push
das
xor
addr16
sahf
push
jnp
daa
sub
shlb
ret
xor
add
shlb
mov
add
pop
loopne
das
pop
mov
pop
mov
sbb
pop
rorb
push
aad
or
dec
pop
aaa
cmp
jns
jle
pop
ds
mov
jge
mov
pop
call
out
and
scas
shrb
adc
loop
mov
jns
jmp
lahf
mov
mov
push
cmpsb
in
jmp
xor
sub
aaa
and
sbb
jns
mov
daa
push
movsl
sarl
mov
es
mov
sub
cmpsb
pop
sub
adc
stos
jecxz
jg
es
mov
and
popa
pop
shrl
lods
aas
lds
push
scas
dec
sub
lods
icebp
push
and
jb
pop
cwtl
and
sbb
fildl
jbe
js
cmp
xor
scas
cmp
push
aas
mov
popa
xor
in
inc
imul
sahf
ret
ss
adc
rclb
xchg
outsb
and
mov
jmp
xchg
jb
cmp
leave
iret
push
gs
adc
bound
daa
scas
notl
shll
stc
pop
jmp
sbb
test
das
out
mov
cmp
insl
in
push
dec
push
scas
sub
aaa
xlat
stos
sbb
lret
std
es
inc
ljmp
mov
pop
inc
mov
test
mov
imul
cmp
sbb
lahf
mov
cltd
lret
jle
xor
push
outsb
inc
das
push
in
ja
or
mov
addr16
hlt
jle
lods
adc
pop
int
mov
popl
xor
cmc
int3
icebp
sbb
adcb
lret
sbb
jg
sarl
cmp
mov
push
bound
aaa
fs
jo
mov
pop
pop
jo
xchg
jg
mov
inc
gs
ds
jecxz
sub
or
cs
xchg
pop
add
xchg
pop
push
loope
xchg
in
sub
fsts
jge
rcrl
add
mov
jmp
xchg
jmp
cmp
call
fwait
dec
gs
fdivrs
xor
xchg
or
sbb
pop
cmp
pop
shl
jle
rclb
clc
sub
jae,pn
stos
push
idivb
xor
pop
roll
sub
sub
sbb
push
and
and
pop
sarb
inc
out
nop
sub
popf
call
cwtl
inc
sub
mov
leave
out
jae
and
add
inc
add
dec
and
pop
aaa
lods
loopne
mov
dec
mov
sbb
jnp
pop
rclb
leave
adc
ds
test
call
and
push
sbbb
push
xchg
jns
mov
mov
pop
shlb
jle
repnz
adc
add
xor
loopne
push
pop
sbb
repnz
pop
jnp
mov
cltd
mov
inc
divl
sahf
cmc
mov
jae
test
inc
test
movsl
push
jb
dec
aas
repz
pop
cs
xchg
mov
outsb
popa
arpl
jecxz
cmpsb
cmc
repz
xchg
repz
cmp
data16
lods
bound
or
or
adc
cmpsb
mov
mov
mov
and
jo
fwait
push
xchg
lahf
mov
cwtl
shl
and
jmp
es
mov
sbb
into
out
mov
fbld
push
popa
lret
jmp
mov
dec
pop
nop
clc
push
jge
pop
push
jl
ja
shrl
cltd
inc
ljmp
dec
out
push
inc
mov
addr16
test
insb
dec
inc
cwtl
xchg
insb
inc
jbe
mov
jge
and
fsubl
insb
lret
lahf
cmpsb
mov
pop
jmp
pop
and
mov
pop
fs
mov
xchg
test
pop
fwait
inc
mov
js
and
sbb
addl
cmp
imul
stos
insb
pop
pop
notb
adc
std
jbe
xchg
incl
mov
mov
jp
pop
loopne
es
add
push
mov
and
dec
pop
in
cmp
jg
nop
js
call
fs
jb
iret
in
and
mov
pop
dec
popf
fs
scas
xor
mov
into
lock
adc
shlb
cltd
pusha
mov
jg
pop
in
pusha
in
roll
mov
jle
stc
fists
push
fcomps
stos
arpl
mov
push
xrelease
mov
push
and
pop
out
testb
jge
out
rcrb
push
dec
das
mov
cs
sbb
cmp
pop
xchg
shlb
es
call
push
insl
pop
pop
sbb
mov
test
out
scas
int3
ret
cmpsb
scas
and
dec
aas
and
ljmp
sbb
clc
jmp
push
pop
xchg
idiv
cmp
cmp
cs
pop
jb
add
mov
js
or
inc
xchg
sbb
mov
jge
stos
addr16
lea
fwait
pop
pop
mov
push
pop
inc
lds
test
mov
xchg
mov
push
daa
mov
and
iret
loope
sbb
loope
add
fcmovu
jae
jecxz
add
mov
sub
pushf
mov
cmovl
stos
adc
fcoml
mov
nop
bnd
fsubp
enter
daa
stos
outsl
and
lods
and
mov
jnp
loope
jno
cmp
pusha
mov
dec
enter
rcrl
pop
pusha
cmpsl
dec
mov
sbb
push
cmpb
pop
add
xor
xor
add
scas
and
adc
outsb
pop
add
pushf
sub
dec
lea
imul
mov
inc
imul
cmpsb
ljmp
adc
pop
jbe
mov
xchg
lret
push
push
cs
and
sub
mov
into
dec
movsb
bound
and
shl
xchg
movsb
and
outsl
pop
popf
mov
add
lea
jg
clc
bound
popa
out
in
adc
pop
gs
lcall
mov
out
rcll
push
aam
aas
mov
push
addr16
xchg
sub
hlt
das
std
daa
or
shlb
mov
pop
in
xor
out
mov
mov
out
inc
hlt
aaa
or
inc
mov
xchg
leave
push
sub
or
fidivs
mov
cmp
jg
sub
out
es
loopne
movsb
dec
cmpsb
loop
sbb
cmp
and
jle
mov
inc
addr16
jb
lds
jge
adc
dec
arpl
jns
add
lea
rcll
arpl
mov
xchg
inc
inc
dec
inc
jns
dec
pop
insb
ret
push
fisttps
inc
divb
repnz
or
popf
mov
xor
mov
clc
sbb
sbb
mov
pop
jbe
mov
aas
fwait
and
dec
scas
adc
xchg
orl
inc
push
aad
js
out
and
pusha
xchg
mov
pop
and
stos
stos
push
and
or
popa
cwtl
jae
dec
adc
lahf
cmp
arpl
iret
mov
mov
arpl
pop
movl
jo
leave
inc
shl
popa
adc
aad
mov
xchg
pop
rcrb
inc
lret
and
mov
mov
loope
add
xchg
pop
bound
imul
out
and
sbb
in
xchg
inc
mov
inc
icebp
lcall
mov
sbb
jno
cltd
mov
adc
in
insb
dec
imul
stos
mov
xchg
mov
sbb
ja
lret
push
out
mov
es
lock
jmp
xlat
mov
jnp
repz
push
adc
ds
pop
mov
push
push
mov
dec
add
inc
aam
push
cltd
sbb
adc
pop
call
jae
cwtl
bound
outsl
rcrl
add
enter
xorl
sbb
jp
dec
insb
ss
cmp
xchg
test
add
inc
inc
loope
repnz
pop
push
mov
scas
inc
ret
mov
pop
outsl
push
addr16
lods
pop
imul
jge
lds
mov
mov
mov
mov
xlat
push
xor
push
or
ss
or
testl
add
in
fstpl
dec
rorb
mov
out
rcll
mov
push
dec
jl
xchg
jle
rclb
hlt
mov
daa
mov
push
stc
inc
sti
push
inc
and
cli
out
andb
imul
xor
pop
nop
jno
dec
xor
dec
stc
jmp
into
xor
mov
fidivs
inc
push
push
aad
rcrl
in
mulb
jae
imul
mov
scas
nop
scas
inc
pop
mov
xchg
rclb
cmpsb
es
fcomi
ret
xchg
fs
xchg
sub
inc
xchg
add
and
mov
sahf
int
ret
push
scas
cmpl
and
mov
fisubs
and
mov
inc
cmpsb
push
repnz
push
xlat
pop
push
mov
aaa
outsb
push
ror
fiadds
xor
test
mov
ljmp
cmp
pushf
jl
daa
jecxz
dec
xchg
add
jp
sbb
loopne
imul
std
cmpl
push
sub
mov
movsb
mov
popf
test
test
add
aaa
jl
xchg
dec
push
mov
fsts
out
pop
xor
stos
push
in
jmp
pop
inc
push
out
jae
fldcw
cwtl
cli
xchg
xor
ret
dec
shll
push
popa
sbb
loopne
ficoml
imul
mov
decl
mov
aas
sub
into
loopne
repnz
inc
mov
mov
and
push
xchg
shlb
or
add
in
add
cld
clc
adc
mov
out
pop
loop
pop
je
decb
dec
ss
imul
addl
cpuid
jb
lahf
testb
shrb
sarl
in
pop
cmp
cmp
fsub
repnz
popf
xor
cmp
sub
xlat
es
mov
xchg
out
add
sub
scas
cmp
cli
testl
ds
ds
xchg
scas
or
clc
xorl
cmp
int3
push
inc
mov
loop
cmp
cld
push
stos
cld
inc
loopne
out
pusha
shr
sbb
imul
mov
loope
mov
enter
pop
sbb
lock
mov
inc
and
addr16
add
xchg
lcall
dec
mov
pop
bound
into
test
push
shlb
inc
ss
pop
fstpl
sbb
pusha
xchg
test
cmpsl
cmpsb
insb
sarb
outsb
pusha
sarl
out
mov
cmpsb
sbb
or
adc
lds
inc
xor
dec
mov
push
int
sbb
sbb
cmpsl
dec
inc
enter
sbb
rcrb
or
or
ss
mov
roll
das
fmull
fscale
xorb
stos
jbe,pt
mov
jg
js
popf
movsb
xor
adc
mov
add
std
lcall
mov
mov
cmp
cmc
cmp
cmpb
in
sub
inc
cltd
gs
and
in
lods
pusha
in
fistl
or
inc
icebp
fcmove
pop
mov
mov
popf
mov
add
inc
mov
bnd
sbb
outsb
mov
popa
sbb
and
insb
mov
mov
shll
hlt
inc
fsubl
jl
and
repnz
xchg
mov
mov
fdivrs
mov
outsb
inc
into
cltd
pop
mov
adc
into
or
fldl
cmp
rol
mov
repnz
inc
out
es
cmp
xchg
pop
out
jns
xchg
sub
jb
mov
mov
mov
mov
adc
sbb
mov
xchg
add
sarb
movhps
sbb
inc
inc
mov
lcall
xchg
inc
push
sub
or
repnz
push
clc
pop
mov
inc
cli
lret
mov
jne
add
pop
mov
dec
cmp
addr16
lret
pop
in
negl
in
scas
scas
adc
pop
xchg
jg
sbb
jmp
mov
ret
cmpsb
mull
and
mov
addr16
mov
cmpsb
mov
mov
les
fstl
mov
rcrl
test
call
mov
xor
adc
mov
popf
outsl
test
xchg
shl
or
daa
add
stos
ss
push
add
int3
sbb
inc
je
loopne
test
popf
pop
out
inc
jp
repnz
leave
add
repz
jne
jbe
mov
mov
lods
dec
sti
ret
daa
sti
daa
mov
mov
and
in
aaa
std
cmpsl
cmp
xor
jp
mov
mov
or
ficoml
insb
into
xorl
stc
or
mov
push
jae
pop
mov
lds
lahf
scas
daa
inc
push
and
mov
adc
pushf
mov
and
and
mul
test
int
xchg
mov
cli
sub
aad
sbb
mov
mov
cmp
xor
mov
fcoms
and
inc
mov
pop
adc
jns
movntps
ljmp
pop
push
test
inc
jno
rcrl
ja
jle
xor
subl
add
jg
imul
pop
in
clc
push
addr16
xchg
push
adc
lahf
shll
sub
cmpsl
scas
xchg
and
or
push
pusha
and
adc
jecxz
mov
mov
and
sbb
subl
pop
xchg
pop
sbb
dec
lahf
and
sub
out
dec
push
inc
jno
nop
xor
fs
fwait
sbb
clc
fistps
loope
fadds
mov
inc
pop
mull
add
fcompl
stos
dec
mov
test
cmp
sub
fstpl
scas
jmp
mov
cmp
or
cbtw
roll
mov
mov
sbb
inc
inc
or
xchg
fnsave
cmp
movsl
lock
add
inc
out
or
add
jns
cltd
ds
daa
in
ret
push
xchg
adc
push
mov
mov
add
dec
xor
jle
mov
xor
lcall
sub
cmp
xchg
adc
inc
pop
mov
lock
dec
cmc
xor
bound
pop
cmp
xchg
popa
cmpsb
cmp
stos
push
xchg
fcomip
xchg
ds
jne
sbbb
dec
aas
pushl
sbb
xchg
adc
jg
lcall
add
pop
push
xchg
mov
cwtl
mov
xchg
sub
and
cmp
ret
ret
rol
out
data16
pop
sbb
or
stos
xor
fsubs
cltd
lea
adc
xchg
push
jb
cmpsb
lods
pop
push
cmc
pop
cli
ss
in
aad
xchg
lahf
sahf
jl
cmp
les
jo
jno,pn
inc
dec
xchg
lcall
rcrb
dec
xor
add
cmovs
es
fninit
fadd
repz
orl
mov
pop
cmp
or
sbb
push
add
leave
test
mov
aad
push
push
pop
js
mov
add
out
jns
sub
inc
fsts
bound
ja
jns
sub
mov
mov
cmpsl
and
sbb
sarb
xchg
sub
mov
pop
dec
mov
clc
xchg
lahf
dec
mov
ss
and
jle
jns
xchg
jns
daa
mov
cwtl
and
and
ja
pop
imul
sbb
rcr
ret
andl
mov
xchg
mov
lret
sbb
or
fists
and
push
cmp
mov
cmc
sbb
pusha
sarb
out
in
test
bnd
and
sbb
sbb
int3
xchg
fildll
lods
push
push
testb
sub
xor
push
sarl
stos
xchg
inc
mov
mov
into
dec
insb
mov
test
popa
cs
push
clc
mov
adc
add
pop
clc
mov
add
pop
sbb
cmp
in
xchg
cmp
dec
fcmovne
hlt
and
fidivs
idivl
lods
sbb
mov
sub
out
jae
cwtl
pop
inc
mov
mov
xrelease
adc
sub
xlat
xor
inc
sbb
cwtl
iret
jbe
pop
ss
pop
sahf
das
xchg
or
cmpsl
sbb
pusha
js
and
xchg
xchg
lcall
add
jnp
les
data16
js
stos
push
push
jle
xchg
arpl
xchg
pop
or
jno
mov
mov
push
scas
cli
popa
lods
faddp
sahf
add
lret
cmp
xchg
faddl
cli
sub
ret
fisubs
dec
outsl
call
and
xchg
sub
sbb
push
lds
loop
jge
addr16
lods
push
pop
out
clc
cmp
aas
cmpsl
and
dec
pop
adc
ds
inc
jg
dec
pop
or
and
arpl
pop
mov
adc
into
or
mov
std
push
push
bound
or
mov
js
push
fldcw
mov
inc
sub
jae
outsb
or
cmc
cmp
lahf
insl
outsb
aas
and
fwait
mov
inc
inc
test
mov
add
jmp
mov
xchg
call
movsb
adc
fildll
inc
and
xor
inc
fidivrs
xorb
and
cs
push
mov
dec
cmp
mov
inc
push
push
nop
out
imull
mov
mov
jg
sbb
and
movsb
stc
xor
movsb
dec
cmpsl
xchg
in
add
mov
in
outsb
cli
cld
and
pop
dec
adc
adc
push
push
subb
pop
rcl
insb
fs
or
out
mov
add
lcall
mov
js
into
cli
mov
shrb
fildl
lods
lock
hlt
pop
xchg
mov
dec
pop
and
mov
arpl
xchg
jle
and
jns
test
xchg
les
push
push
cmp
sub
daa
inc
mov
cmpsl
jle
inc
jg
insl
cmp
pop
stos
and
xchg
inc
xchg
ljmp
cmp
pushf
daa
xor
jne
mov
mov
sbb
push
out
cmp
inc
mov
ss
pop
adc
push
je
rcll
push
std
sbb
lahf
out
jb
and
inc
sub
mov
stc
push
cmp
loopne
dec
dec
push
pop
lock
xlat
xchg
and
or
xchg
sbbl
adc
mov
aas
dec
pusha
dec
xchg
aas
mov
and
adc
pop
cmp
add
sbbl
sbbl
sbb
shll
negl
add
xlat
cmp
stos
fldt
xor
cmovae
dec
addr16
dec
sbb
push
and
push
aad
push
cmp
lods
ret
mov
jnp
sbb
pop
inc
xchg
cmpsl
add
and
xor
or
jmp
push
mov
inc
dec
jle
push
sahf
sbb
mull
mov
xchg
cmp
xchg
addr16
insb
xchg
dec
mov
rorl
sub
adcl
imul
insl
cmp
std
rcrb
lods
xchg
ja
push
pop
sbb
stc
xchg
xchg
mov
fcos
je
push
mov
pop
nopl
jo
push
psllw
popa
mov
mov
je
enter
add
jmp
sbb
and
adc
leave
in
xchg
mull
cmp
adc
xchg
lods
outsl
push
mov
and
mov
mov
into
insb
push
daa
xor
lds
cs
sub
fwait
dec
and
into
mov
bound
add
loop
fidivl
jb
sbb
cs
mov
daa
add
mov
test
pop
stos
push
and
ficompl
mov
cmc
jmp
repz
mov
repz
mov
inc
mov
inc
lret
mov
bound
or
mov
ffreep
and
add
jnp
jo
add
lea
icebp
add
test
push
jecxz
js
mov
inc
mov
pusha
mov
or
fldcw
adc
pop
sub
lahf
and
jmp
push
fimuls
dec
push
add
jle
fbld
mov
mov
or
inc
imul
aam
or
daa
sti
cs
jmp
mov
push
push
les
lret
mov
imul
fstl
inc
sbb
repnz
inc
fidivl
jb
mov
mov
mov
add
jo
iret
sbb
and
imul
push
test
mov
add
sbbb
mov
inc
daa
imull
sub
push
lahf
mov
inc
fwait
out
mov
and
jmp
enter
fwait
shr
out
negl
outsb
or
movsb
popa
ret
lods
push
pop
xchg
xchg
dec
mov
test
sub
inc
cmpsb
add
jge
jne
mov
cmpsl
push
pop
adc
sbb
dec
cmp
fwait
sub
inc
push
mov
inc
movsb
ds
xchg
stos
xchg
pop
push
mov
mov
idiv
out
pushf
sub
xchg
lods
lods
xchg
das
add
mov
xlat
dec
adc
mov
loopne
mov
sub
pushl
or
fcomi
and
into
loopne
sbb
push
shlb
inc
cmpsb
lods
xchg
bswap
and
adc
xchg
inc
mov
jnp
add
and
and
adc
adc
inc
test
mov
jle
jne
es
jnp
xchg
in
aas
rcrl
cmp
jne
jns
daa
sub
xor
xor
sub
xchg
ljmp
jns
xor
mov
mov
fldt
jle
icebp
lds
pop
paddb
test
dec
scas
sti
insl
add
lea
js
mov
sbb
jns
dec
pop
mov
test
lcall
std
or
fwait
lahf
push
dec
push
push
shl
xchg
icebp
push
fisubs
data16
push
and
ljmp
xchg
and
fidivl
loope
loope
add
xchg
adc
movsb
sub
nop
stos
jge
enter
xchg
xchg
sub
cltd
imul
inc
filds
mov
lahf
adc
xchg
lcall
pop
fistpl
xor
or
icebp
sub
shll
pop
ja
loope
test
or
loop
add
fbld
ja
xchg
push
mov
push
add
xor
pop
out
adc
cmp
or
divl
call
xor
into
pop
pop
push
xchg
iret
cwtl
fsubs
ss
mov
xchg
add
mov
jle
ja
and
pop
mov
mull
dec
cmpsl
sti
iret
cmp
sarb
loopne
callw
or
inc
loope
inc
push
jl
in
xor
std
lock
popa
jo
inc
cwtl
es
inc
in
xchg
fisttps
push
mov
sbb
shr
int
mov
sar
jbe
add
xchg
jge
mov
popf
xchg
movsl
test
add
and
nop
jle
movsb
and
push
in
add
mov
add
and
outsb
test
jle
fidivrs
popf
add
add
xor
pop
cltd
rcrl
push
stc
and
inc
fsts
pop
outsl
nop
mov
ja
mov
out
mov
fwait
inc
ds
aas
mov
inc
xchg
aad
mov
mov
rcrb
or
leave
cwtl
stos
mov
jo
sub
inc
sub
jle
int
add
lcall
push
cmp
out
fld
jbe
arpl
imul
testl
insb
mov
popa
pop
sbbb
fisttpll
insb
mov
cli
mov
stos
mov
test
push
pop
shrb
fnstsw
xchg
out
jns
jb
inc
sbb
jecxz
sbb
pop
scas
xchg
cs
scas
or
jge
mov
sbb
pop
loop
pop
fbstp
ds
xchg
jge
mov
inc
in
inc
mov
sub
jge
in
adcl
adc
and
jae
mov
std
sarb
fisubs
xor
ret
inc
inc
push
shrb
lods
shlb
dec
push
fst
xor
cmc
repz
jle
cmpsb
cmp
cltd
cmpsb
out
jmp
xlat
shrb
dec
out
inc
xchg
adc
xchg
jns
and
sbb
nop
scas
loop,pn
es
xchg
andb
mov
mov
inc
add
lods
xchg
out
js
add
in
pop
mov
cmpsl
sbb
rcrl
sub
iret
or
cwtl
cmp
data16
sub
roll
xor
loope
sbb
aad
pop
xchg
cmp
push
repnz
das
lock
es
ss
and
rolb
addr16
jge
repnz
shl
jo
cld
stos
push
cmp
xor
pop
inc
stos
stos
lcall
aaa
sbb
mov
push
movsl
push
and
and
pop
daa
cmpsl
popa
cmp
cltd
or
cmpsl
aad
push
daa
mov
ficoms
fwait
loopne
xchg
inc
frstor
fidivs
loopne
out
scas
je
and
ss
cmp
orl
cmp
cmp
push
xchg
shlb
movsl
mov
cltd
pop
xchg
lret
inc
pop
in
add
aaa
ret
dec
xor
in
cmp
movsb
adc
pop
dec
lea
cwtl
and
cs
inc
jp
fwait
push
movl
cmp
pop
jbe
repz
dec
sbb
inc
fcomps
jge
leave
xor
xchg
jbe
inc
push
cwtl
xor
xchg
lea
inc
sahf
push
inc
cltd
and
push
cli
push
push
add
pop
cli
int
fiadds
repnz
pusha
bound
out
fisubs
int3
sub
inc
pop
inc
ret
out
ja
aas
and
sub
and
add
fcoml
mov
loop
sbb
sbb
adc
pushf
dec
pop
mov
out
mov
jmp
pop
aaa
xor
movsl
das
jbe
mov
cmp
cmp
sub
mov
call
std
je
xor
xchg
lcall
dec
sbb
mov
mov
push
push
js
out
push
push
cmp
ror
jg
cwtl
outsl
mov
inc
adc
aam
js
pop
or
mov
cmp
mov
inc
sub
pop
push
and
rcr
add
and
outsb
inc
push
sbb
pop
mov
xor
dec
pop
jle
dec
arpl
pop
pushf
std
sarb
push
mov
push
and
lcall
inc
in
xor
lods
cmp
xchg
mov
lcall
pop
fbld
pop
adc
stc
or
mov
out
std
sbb
pop
cmp
inc
mov
push
pop
and
rol
dec
push
stos
bound
sahf
pusha
xchg
push
or
out
xchg
scas
loope
dec
and
sbb
ljmp
ss
mov
cs
std
cmp
jecxz
xchg
xor
push
call
pushf
add
inc
fidivs
dec
sub
sub
mov
stos
xor
arpl
sahf
inc
dec
mov
mov
andb
inc
adc
movsl
push
dec
lods
jge
cmp
sub
ljmp
lcall
scas
pop
adcl
mov
and
xchg
adc
outsb
cmp
sbb
out
lods
in
sbb
fmulp
mov
pop
xchg
inc
fcmovnbe
inc
lock
dec
pop
hlt
cmp
jno
ss
jb
push
inc
mov
cwtl
fisubrl
xchg
xchg
imul
push
das
jecxz
imul
xchg
int3
cmp
ja
loop
jg
push
movsl
pushf
lods
cs
cmp
sub
ljmp
enter
cld
aas
movsl
sub
or
or
insl
mov
dec
stos
in
xorps
mov
sbb
push
mov
repnz
dec
arpl
add
jg
push
mov
cmpsl
lahf
rorb
scas
sbb
pop
cmp
iret
xchg
fcmovbe
push
sbb
dec
roll
jnp
ret
mov
loope
jb
mov
jle
pop
es
call
daa
mov
bound
add
lcall
scas
insl
daa
mov
cmpsl
mov
addb
icebp
imul
out
mov
jg
jne
lcall
cli
fcompl
lds
dec
scas
aas
lock
lahf
jle
enter
add
cmova
xor
dec
sub
jmp
fadds
xchg
xor
pop
sub
dec
cmpsb
setns
xchg
lret
sub
or
testl
mov
data16
mov
jp
xor
repnz
cmpsl
stos
cmp
icebp
add
adc
inc
xchg
push
ficompl
pop
cs
adc
adc
jo
xchg
mov
std
ss
lods
out
sbb
movsb
cs
je
sbb
sub
out
add
cld
mov
pop
sbb
leave
pop
xor
xchg
and
callw
push
enter
pop
add
xchg
out
and
enter
mov
dec
addr16
sbb
test
xchg
push
pop
or
in
into
ss
lret
push
xor
push
jbe
test
ds
rcr
clc
pop
sbb
push
cmp
xor
addr16
int3
and
adc
aaa
lea
sbb
icebp
sub
xchg
mov
mov
sub
repnz
push
dec
out
mov
enter
clc
mov
addr16
cmpsb
xchg
andl
mov
sbb
push
push
ja
jnp
movsb
es
mov
loope
outsb
xor
outsb
hlt
ja
add
dec
fisttpl
fisttpl
sub
icebp
cli
insl
jb
and
jg
adc
bound
xchg
sub
and
scas
mov
push
popl
xchg
push
push
into
outsb
xchg
nop
push
cltd
and
add
push
shll
je
test
inc
jmp
outsb
mov
mov
in
aas
sub
in
mov
jne
sbb
jae
push
scas
and
push
mov
cmpsl
mov
add
inc
sbb
inc
sbb
or
notl
adc
jo
add
lds
imul
mov
aad
mov
mov
push
mov
das
dec
ss
cmpsl
jg
mov
or
test
lods
call
dec
jmp
mov
arpl
sub
fldenv
sarb
jg
mov
jp
adc
mov
adc
jecxz
pop
pop
in
adc
lds
filds
and
daa
shll
and
dec
lock
stos
ss
pop
sub
xchg
cmp
cmp
into
mov
sbb
lret
mov
movsb
sub
push
fcomps
iret
mov
pop
test
scas
into
rorb
adc
push
add
push
jno
xor
and
sbb
mov
jae
aaa
fistpl
jno
jmp
dec
inc
dec
jno
cs
mov
imul
je
cwtl
andb
cli
mov
push
movzbl
inc
inc
mov
add
shlb
jae
sbb
into
cli
xor
mov
xchg
sub
sbb
and
inc
adc
pop
xstore-rng
cmpsl
inc
and
test
xlat
stos
adc
sti
mov
inc
jecxz
int
mov
mov
jb
enter
xor
push
jo
fsubrs
sarl
lahf
mov
pusha
lods
and
test
fwait
jno
cs
xchg
and
jne
fadds
fldl
and
fstl
aaa
cmc
ja
cmp
fstpt
ret
jnp
xchg
sahf
jb
push
inc
sub
and
lahf
pop
sub
fisubrl
cmpsl
add
fs
movsb
xor
sbb
and
aam
and
clc
mov
in
push
pop
fwait
popa
scas
ss
and
xor
js
andl
adc
insb
pop
pop
std
sti
adc
inc
adc
jbe
repz
and
adc
mov
rcl
xchg
rcrb
sahf
insb
aas
xor
push
push
repz
aas
xor
adc
lods
add
mov
pop
jb
test
push
push
push
sbb
push
sbb
or
fldenv
push
adcl
popa
jbe
mov
jnp
stos
ss
sub
sbb
cmpsb
adc
outsl
inc
jp
andb
xchg
cld
xchg
jno
out
jg
and
and
inc
mov
push
or
and
sub
vmovups
mov
lods
fnstcw
xchg
cmp
sahf
jge
jae
popa
jnp
shlb
and
or
mov
out
leave
out
popa
shr
xor
xor
stos
pushf
lock
sbb
clc
bound
test
jae
cmp
popa
xchg
lahf
aaa
or
scas
leave
jae
cmp
cltd
leave
sbb
std
adc
xor
bound
inc
mov
shll
push
xchg
mov
loopne
daa
sbb
pop
xchg
mov
sub
ret
dec
push
mov
jae
pop
in
push
pop
arpl
push
stos
add
push
cmp
push
inc
jmp
pop
arpl
gs
lods
repnz
cli
ret
sahf
ret
into
and
xor
mov
cwtl
es
scas
insl
xchg
mov
sbb
mov
lods
js
push
adc
pop
xchg
cmp
pop
pop
cmp
ret
dec
and
and
daa
mov
jmp
or
movsl
mov
xor
lock
mov
in
push
sbb
cltd
test
call
hlt
sbb
push
pop
out
mov
mov
ret
data16
jae
leave
lcall
sbb
sub
push
pushaw
sub
insb
lock
and
mov
jg
ffree
cmp
sbb
pop
fsubs
xorl
in
add
shrl
fs
sar
and
cmp
mov
cmp
lahf
jmp
pop
repz
jle
bound
or
dec
out
mov
or
dec
sub
xchg
xchg
sbb
jbe
loope
popf
mov
pushf
mov
mov
mov
pop
fistl
lcall
not
mov
mov
push
outsl
adc
pop
push
mov
scas
pop
pop
xchg
push
sbb
xchg
sub
inc
popa
int3
fldl
inc
dec
popf
ret
mov
call
jg
pop
pop
pop
out
jl
pusha
sbb
pop
lods
out
jg
icebp
cwtl
mov
jnp
in
loope
pop
sub
inc
scas
mov
mov
push
orl
cmpsl
std
push
push
sbb
movsb
sbb
pop
fdivs
subl
sub
outsb
cltd
leave
sti
andb
push
jl
xchg
ret
icebp
mov
and
adc
arpl
add
jo
mov
adc
arpl
pop
mov
sbb
lods
into
dec
mov
movsl
fstpt
out
pop
addl
pop
ds
outsb
dec
xorb
repnz
andl
or
adc
dec
adc
pop
cmp
and
insb
jp
mov
movsl
call
mov
pop
ds
push
pop
aas
clc
hlt
outsb
pop
mov
push
jbe
adc
aas
xchg
mov
mov
dec
mov
les
fcmovnb
repnz
add
dec
ja
mov
gs
rorb
cmp
pop
add
cmp
mov
pop
sbb
jle
scas
xchg
pusha
xor
inc
sub
imul
mov
test
sarb
jge
aaa
mov
add
lock
mov
repnz
sbb
mov
mov
roll
pop
outsl
mov
add
rcrb
mov
inc
addl
inc
daa
cld
pop
xchg
pop
cmp
sbb
addl
inc
sbb
inc
mov
xchg
pop
pop
cmp
arpl
sbb
in
popa
pop
inc
sti
mov
cwtl
mov
lods
jge
push
pop
add
inc
pop
jno
out
leave
pop
cmpsl
cltd
fucomp
jo
scas
jp
inc
sahf
pop
add
shlb
nop
inc
decb
xor
push
sbb
icebp
cmp
pop
sbb
je
jmp
push
pop
cmp
call
lret
out
in
inc
push
xchg
hlt
cli
lods
jecxz
ret
inc
sbb
cmpsb
jge
xchg
decb
sarl
mov
shrb
out
cmp
or
enter
jge
push
inc
fwait
leave
stos
sub
inc
imul
xlat
ja
out
jecxz
pop
dec
mov
sbb
loopne
push
cwtl
aas
lcall
fdivrp
push
out
lock
daa
or
sub
pop
jae
pusha
adc
adc
out
mov
jbe
cs
pop
adcb
xorb
sbb
inc
lock
nop
xchg
movsb
and
and
aas
inc
mov
clc
aam
push
mov
push
mov
mov
bound
xchg
sbb
push
push
or
repz
inc
and
xchg
stos
iret
in
out
sub
stc
aaa
mulb
aaa
inc
dec
adc
pop
cmpsb
xchg
xchg
cld
inc
mov
pop
dec
in
mov
cmp
setp
cmp
mov
mov
push
xor
and
sub
hlt
mov
mov
ficoms
pop
jmp
in
jg
xor
aaa
jns
daa
test
add
nop
mov
xor
inc
mov
out
ret
jmp
xchg
pop
sbb
sub
xchg
jecxz
mov
pop
stos
test
repnz
cmp
imul
inc
rcr
lods
and
loope
jl
stos
aaa
jno
jecxz
dec
xor
mov
mov
mov
hlt
mov
or
mov
rclb
mov
inc
ss
jns
lods
adc
and
and
or
xor
lea
rolb
cmp
jne
xchg
lcall
sub
notl
mov
daa
add
clc
adc
jnp
add
add
out
xchg
cmp
push
fdivr
inc
mov
mov
std
cs
pop
aas
ror
addb
sbbl
push
loopne
andl
xchg
aas
pop
xchg
sbb
mov
fstp
test
popa
es
inc
testb
inc
mov
into
sbb
fwait
mov
pop
pop
and
xor
out
fwait
cmpsb
in
jbe
mov
jecxz
dec
xchg
cs
adc
sbb
popa
dec
inc
fldt
inc
roll
lds
pushf
or
jg
and
jecxz
mov
jmp
inc
stos
push
push
mov
aam
cmpsl
push
adc
scas
bound
stos
loope
sbb
xor
mov
cld
lds
jnp
fs
ljmp
xlat
rcl
out
aas
fidivrl
outsb
dec
test
in
sub
inc
xchg
xchg
ror
and
jo
and
pop
mov
sti
mov
sub
mov
push
andl
mov
rcll
or
push
cmp
mov
sub
lcall
icebp
lret
mov
ret
das
mov
pop
mov
mov
push
xor
adc
mov
fimull
jnp
jge
gs
sub
aas
dec
dec
ss
jmp
movsb
or
jg
insb
mov
or
hlt
xchg
fwait
cmp
ds
cltd
and
stos
lds
scas
pop
lock
rorl
xchg
scas
jne
dec
xchg
cli
sub
leave
dec
pop
sbb
imul
mov
repnz
push
fsubrs
insl
inc
dec
xchg
mov
push
mov
lock
outsl
jecxz
add
or
lods
scas
fcomps
dec
inc
and
sbb
pop
xchg
lds
jbe
cmp
push
ret
inc
push
ret
inc
mov
sahf
mov
fnstsw
xor
test
push
shrb
pushf
icebp
fcmovbe
adc
fldenv
repz
pop
cmpsl
jbe
pop
xlat
fiadds
negb
mov
stos
popa
xor
mov
push
dec
aas
sbb
data16
adc
add
xor
mov
pop
pop
and
test
mov
jg
xchg
inc
jmp
push
pushf
shrl
out
aam
sub
outsl
popf
lahf
inc
nop
js
xor
ret
push
dec
xchg
adc
jno
sti
aas
fs
and
xor
push
fwait
into
loope
mov
shlb
sbb
push
add
fidivs
jo
xlat
sub
mov
repnz
in
pop
inc
jl
hlt
ret
mov
cmp
bound
cmp
xlat
push
xlat
fdivs
orb
fsubs
imul
pop
mov
xchg
lods
dec
jns
fildll
jg
rcrb
and
sub
into
dec
jnp
fwait
push
je
push
scas
mov
adc
js
jne
cli
mov
pop
dec
ja
push
adc
ds
push
jne
int3
push
fcoml
inc
daa
xor
cmp
loop
jle
inc
insl
pop
je
andb
pop
fmull
cmp
xchg
ret
ret
pop
icebp
pop
bound
mov
inc
sti
mov
imul
mov
and
sbbl
subb
jl
adc
mov
and
and
cmp
xchg
in
rorl
cmpsb
and
mov
and
push
sub
rcrb
js
movsl
mov
mov
popl
fldl
jle
adc
cmpsl
xor
xor
inc
pop
push
pop
inc
xor
test
cli
mov
in
and
and
fists
fldl
xchg
stc
xlat
scas
rol
mov
rcrb
insb
pop
inc
insl
addl
stos
sbb
cmp
xor
sarb
flds
sbb
in
pop
out
cli
notl
xchg
jecxz
dec
fisttpll
imul
jb
inc
sbb
inc
aas
and
lea
pop
mov
cmp
xchg
xchg
sbb
sub
ror
mov
je
fcoml
loope
lcall
rcll
jle
popf
sbb
shlb
xor
mov
xor
hlt
pop
sbb
xor
mov
jle
outsb
pop
xor
and
push
mov
repz
les
fnstcw
sub
or
sbb
push
shll
mov
in
outsb
mov
inc
rorl
mov
pop
mov
and
les
dec
cmp
jge
inc
xor
dec
cmp
popf
push
cmp
and
in
sbb
fnstsw
cmp
outsb
cmp
or
loop
cmp
push
out
mov
mov
shlb
jne
xor
fildl
clc
iret
xor
mov
inc
ljmp
out
pop
pop
push
mov
inc
or
movl
sub
test
and
aam
shll
dec
push
ret
jae
mov
xor
daa
pusha
jp
or
push
cmp
jecxz
inc
cmpb
aas
inc
decl
mov
xor
sub
mov
daa
cltd
js
xor
outsl
js
lret
push
outsl
mov
push
adc
test
xor
xor
pop
fstps
aad
gs
movsb
push
mov
xchg
xchg
push
mov
or
mov
loope
mov
jmp
mov
adc
pop
popf
jbe
add
add
adc
lret
cmp
fldcw
lds
jle
mov
dec
inc
mov
mov
mov
dec
mov
iret
mov
lock
dec
pop
inc
mov
xor
loop
jmp
fbstp
mov
sub
pop
aas
xchg
aad
into
pop
xchg
cltd
inc
aad
fwait
lahf
push
pop
inc
aas
mov
jae
jg
imul
shlb
and
in
and
stos
sub
mov
lods
mov
push
es
inc
mov
dec
sub
push
push
xor
cmp
pop
mov
cmp
dec
jecxz
in
jmp
mov
pusha
loop
mov
cli
fstpl
mov
or
adc
pop
sbb
loopne
in
mov
xor
mov
int3
testb
insl
lock
popa
popf
popf
jp
mov
hlt
sub
mov
aam
sbb
pop
lods
test
sbb
xchg
ficoml
jb
dec
mov
arpl
pop
mov
cld
pushf
lea
push
push
pop
inc
sahf
les
loope
stos
dec
test
movsb
sahf
mov
stos
ret
es
shll
add
push
inc
mov
xchg
cmp
mov
stos
cmp
lods
push
mov
pop
pushf
cmp
nop
and
add
repz
cmp
add
loope
test
data16
je
xchg
cmpsb
js,pn
push
mov
rorb
sub
push
arpl
scas
ret
inc
mov
mov
add
clc
fsubrs
in
adc
push
cs
jmp
xor
clc
mov
fdivs
inc
in
cmp
add
ficompl
mov
bnd
ficoml
xor
pushf
inc
push
inc
rorb
push
ret
mov
pop
push
pop
inc
dec
push
aas
frstor
push
dec
loop
mov
inc
cmp
scas
les
gs
int3
inc
or
inc
dec
scas
aaa
push
or
insb
jb
jle
xchg
mov
pop
adc
push
popf
inc
loope
jnp
repz
ret
out
inc
sub
add
ss
xlat
cmc
aaa
mov
pusha
mov
ds
incl
dec
push
arpl
arpl
aaa
lret
xor
roll
cmp
pop
adc
push
inc
inc
mov
sar
out
fistpl
out
push
nop
add
lds
lods
aas
aam
gs
inc
inc
scas
aaa
pop
jecxz
add
sbbl
inc
sbb
popf
jp
out
mov
mov
jecxz
sub
mov
pop
pop
xchg
pop
jno
fistpl
divl
push
adc
stos
sbb
roll
sbb
cli
mov
or
sub
push
add
sbbl
mov
push
inc
movsb
xor
pop
add
xchg
in
cmc
cmpsb
mov
out
rolb
mov
and
mov
inc
xchg
imul
sbb
or
aas
out
push
dec
fiadds
imul
repz
mov
lds
arpl
pop
pop
pop
mov
daa
iret
popf
inc
insb
aas
aad
fs
pop
sub
into
jmp
jno
jecxz
sbb
movsb
jbe
mov
mov
pop
jae
cmp
or
aas
nop
push
aad
xchg
insl
dec
sbb
cmp
push
pushf
xchg
xor
mov
add
xor
inc
notb
add
mov
jle
imul
rorl
lret
aam
adc
jnp
fnstcw
sbb
add
repnz
je
sarl
mov
lcall
scas
jns
add
sub
mov
push
sbb
pop
ret
xchg
jae
icebp
push
cmp
adc
lahf
adcb
mov
fidivs
test
dec
mul
subb
xchg
or
cltd
popf
add
movsb
nop
mov
jp
int
call
loopne
sbb
dec
cwtl
loop
xor
xor
scas
mov
pop
pushf
sbb
jecxz
sbb
arpl
inc
pop
push
pop
push
and
and
mov
ja
pop
cltd
jge
lret
and
dec
testb
xor
add
sub
sbb
adc
lcall
arpl
insb
mov
and
push
sahf
mov
nop
dec
cmp
fsubl
mov
fstps
pusha
mov
mov
push
sahf
and
sub
jmp
lcall
mov
cs
cltd
mov
jo
xchg
cwtl
dec
xchg
jns
daa
or
pusha
push
outsb
mov
sub
bound
cltd
add
mov
lcall
pop
aaa
inc
push
mov
mov
xchg
xor
js
jns
push
in
xor
in
sbb
sub
or
push
gs
push
daa
mov
in
jnp
sub
push
fstps
sub
sub
lock
push
fdivrs
dec
test
popa
mov
inc
inc
jle
mov
inc
sub
inc
xlat
sbb
leave
jb
mov
mov
jnp
mov
push
cs
jg
repz
repnz
cmc
push
sbb
mov
rcll
and
les
adc
mov
outsb
dec
or
aaa
sar
aad
cs
adc
fwait
and
dec
lea
mov
jno
add
mov
adc
push
sub
sub
mov
xchg
or
lock
jmp
lahf
lds
jbe
fistps
cmpsl
mov
add
stos
fldl
cmpsb
scas
iret
and
and
lret
loopne
jle
ret
insl
ficoms
cli
jl
adc
mov
cmp
mov
mov
inc
inc
aam
mov
lahf
mov
scas
dec
fnsave
ja
fisttps
mov
lods
movsl
popa
dec
push
sub
cwtl
mov
xchg
test
xor
inc
xchg
mov
mov
ss
jmp
nop
das
xor
arpl
lods
stos
lret
sub
push
inc
call
dec
pop
stos
push
bound
test
mov
mov
mov
sbb
sbb
ds
mov
out
pusha
ljmp
pop
mov
cmp
sbb
inc
sub
mov
adc
and
lods
lds
sti
xchg
or
das
xlat
dec
ja
mov
loope
mov
pop
mov
rclb
and
jge
add
xchg
aaa
jecxz
mov
imul
es
popa
and
jb
mov
mov
nop
add
lock
inc
xchg
pop
cmp
xor
xor
xchg
fiadds
fiadds
xchg
push
inc
stos
or
jo
sub
scas
mov
mov
das
push
cmp
leave
das
jb
fs
mov
push
scas
and
lods
jecxz
hlt
and
outsl
orb
jnp
mov
sbb
sub
or
and
ret
pop
mov
xchg
lock
scas
imul
pop
xor
mov
out
sub
push
and
popf
dec
cmp
loop
mov
loopne
mov
imul
bound
iret
in
adcl
les
fwait
pop
imul
mov
add
loope
mov
js
jo
mov
lahf
je
arpl
mov
jnp
inc
lds
aaa
notb
sub
lcall
sub
ja
dec
movsl
mov
mov
pop
jmp
es
adc
popf
data16
cmpsl
jo
push
dec
fwait
out
es
xchg
mov
das
stos
push
mov
jo
inc
dec
mov
loop
fstpl
pop
loopne
lahf
dec
xchg
add
int3
popf
and
cmp
js
sub
test
pop
sub
xchg
pop
cwtl
adc
jge
ret
aas
inc
or
mov
mov
or
mov
out
int3
nop
mov
inc
js
movsl
fmuls
xchg
or
or
leave
jo
dec
and
mov
loopne
out
mov
ret
jmp
and
lret
pop
es
mov
push
sbb
xchg
lret
leave
imul
xchg
xor
loopne
jle
pop
dec
outsb
sbb
into
fmuls
ljmp
int
xchg
mov
into
dec
mov
add
jo
mov
popl
loop
cli
sub
dec
fisttpll
xchg
push
repz
push
dec
pop
pop
int3
daa
and
daa
xor
lcall
mov
sarl
pop
andl
addr16
cmpsb
es
out
aaa
das
inc
bound
xchg
das
sbb
int
cli
daa
mov
cmp
es
lret
sub
inc
scas
lea
lahf
pop
std
push
dec
inc
testb
mov
xchg
pop
or
xor
sahf
cmpsb
xor
aaa
out
xchg
call
sahf
mov
scas
stos
cmpb
jb
mov
sub
stos
push
push
dec
xchg
xor
cmp
mov
cmpsb
pop
xor
dec
fisubs
xor
push
aas
lcall
cmpsl
ss
and
imul
aaa
add
cwtl
cmpsl
or
jle
popf
xor
mov
daa
or
mov
stos
mov
mov
repz
mov
out
cmp
ljmp
xchg
cmp
adc
push
rclb
mov
sub
icebp
movb
movsl
xchg
jmp
inc
fwait
aad
cmp
mov
movl
jbe
ds
addr16
mov
testl
fidivs
das
mov
mov
es
shl
mov
xchg
sbb
negb
and
xor
push
mov
pusha
adc
jp
sahf
movsl
cmc
scas
dec
pop
push
xlat
or
movl
sub
xor
outsl
and
push
inc
push
es
daa
dec
cltd
mov
dec
es
push
inc
cmpsb
sbb
arpl
int
js
mov
lea
mov
and
and
scas
mov
inc
inc
gs
push
loope
cld
rcl
inc
and
inc
xchg
and
aas
jno
lods
ss
daa
mov
sahf
jae
daa
jmp
shll
cld
mov
imul
fiaddl
je
ja
scas
mov
or
jnp
or
pop
xor
lods
pop
imul
pop
mov
xor
lret
cmp
sub
jns
aas
imul
fldcw
gs
sub
in
scas
int
aaa
aam
dec
and
mov
cmpsl
adc
push
rcrl
mov
fcoml
cwtl
push
xor
das
pushf
pop
cmp
mov
cmpsl
or
and
xchg
sbb
cmpsb
popa
xlat
or
xchg
call
lock
mov
imul
nop
dec
in
jmpw
enter
test
popa
leave
or
or
xor
popa
xchg
stc
out
push
xchg
push
fs
scas
push
scas
sbb
popa
xor
xor
mov
sbb
or
cmp
jp
shrb
hlt
lock
dec
stos
idivl
ss
inc
jp
dec
adc
jne
repz
icebp
inc
mov
push
mov
mov
test
insl
popa
adc
mov
cmp
aaa
outsl
add
dec
adc
mov
in
leave
filds
fstpl
fwait
movsl
stc
cli
mov
inc
popf
cmpsb
sub
pop
xchg
mov
in
pop
test
push
dec
loopne
loop
jle
pop
dec
mov
sbb
cmp
sub
dec
or
jp
icebp
add
pop
mov
shlb
mov
push
pop
jo
lcall
push
sahf
jl
fcoms
dec
xor
mov
mov
int3
out
notb
pushf
fsubl
ss
aas
pop
popf
icebp
xorl
inc
dec
loop
inc
fs
push
inc
jb
mov
inc
xchg
inc
es
mov
popa
or
icebp
xchg
cmpsb
insb
fsubl
popf
ljmp
push
jecxz
popa
inc
inc
imul
fidivrs
add
push
dec
bound
aas
mov
frstor
xor
lcall
rolb
cs
or
mov
mov
push
mov
push
movsl
popa
in
inc
or
push
sub
fidivrs
lahf
movsl
jge
jle
fcomi
xchg
push
xchg
adc
cmp
pop
xchg
lea
mov
jae
jge
pop
sahf
adc
and
testl
in
cmp
xorb
mov
subb
hlt
daa
gs
aas
in
not
jg
cmc
lahf
stos
fisubs
jno
sti
mov
push
shll
jae
cmp
data16
dec
sub
xor
loopne
push
in
aas
ds
aas
mov
xlat
popa
mov
ja
pop
addl
loope
mov
cwtl
sub
insl
orl
fs
stos
xor
inc
int
cmp
cmpb
jle
adc
popa
pop
outsb
movb
xor
daa
xchg
adc
inc
pop
cmpsb
fisubrs
test
xchg
mov
outsb
fnsave
dec
sub
mov
scas
push
aad
and
orl
pop
cmp
sub
sub
inc
lods
movsl
stos
mov
sbb
push
inc
scas
aad
daa
mov
repz
xorl
sarl
mov
fidivl
inc
lds
dec
mov
mov
addl
fsubs
mov
inc
hlt
dec
or
jno
test
jmp
fstl
and
add
jmp
pusha
enter
bound
adcl
fldenv
adc
ret
incb
and
pusha
sbb
sbb
stos
sbb
popa
mov
add
jge
pushf
cmp
cli
xorb
xchg
push
inc
repnz
add
repnz
xchg
inc
or
fcoms
lahf
inc
cltd
pushf
push
orl
sbb
ret
aas
sub
popf
jmp
pop
xor
cld
cmp
addb
fldcw
addb
ss
es
xor
xchg
cmp
push
sti
mov
mov
dec
adc
jno
fstps
imul
mov
jns
adc
push
andb
aas
pop
daa
add
call
int
aaa
in
mov
inc
shlb
jl
xor
xor
mov
rcrb
mov
add
bound
push
daa
inc
jns
stc
add
fstpt
sub
shll
fldl
sarb
inc
add
cmp
push
sbb
dec
incl
and
arpl
clc
mov
arpl
and
xor
fsubl
push
mov
bound
bound
addr16
mov
pop
xor
inc
jne
xor
jp
cwtl
cli
js,pn
pusha
and
pop
mov
xchg
out
sti
outsl
mov
dec
adc
mov
mov
mov
out
test
inc
mov
ret
mov
imull
cmpsb
and
rcrb
je
mov
ljmp
ds
xor
pushf
sbb
sub
pushl
addb
and
push
jns
aas
lds
jb
insb
rolb
bound
test
pop
pop
aam
mov
and
mov
pop
rolb
mov
fidivs
jo
mov
push
add
es
inc
mov
jecxz
fstps
and
mov
fidivrl
aad
adc
mov
pop
cmp
inc
es
shrb
es
inc
stc
test
jns
fstps
inc
jp
mov
jg
movsb
das
mov
fists
sti
lods
imul
inc
std
andl
jmp
push
dec
push
dec
int
xor
test
imul
mov
test
push
into
pop
cmpsl
and
cmpsb
sub
mov
jae
js
mov
mov
sbb
into
xchg
stos
inc
stos
push
mov
sti
aas
outsl
and
sub
daa
cvtdq2ps
lea
arpl
hlt
mov
arpl
pop
mov
sbbl
jle
pop
popa
int
outsb
call
sbb
mull
pop
jmp
icebp
fldenv
in
and
sbb
and
mov
xchg
sub
andl
mov
jns
sub
scas
inc
jb
dec
lock
adc
pop
mov
mov
inc
sbb
icebp
test
jmp
loop
jne
outsl
test
popa
dec
dec
cwtl
jbe
push
sbb
pop
dec
mov
sub
lret
xchg
push
inc
cmp
lcall
mov
cmp
sahf
jns
fdivl
lods
sub
data16
xor
cmp
ljmp
dec
pop
test
into
lea
dec
sbb
aas
aaa
fisubrl
push
xchg
push
mov
lods
shlb
dec
cmpsl
inc
xlat
outsl
sub
rcrl
inc
pop
mov
aas
and
les
dec
bound
lahf
pop
aam
cmpsl
les
jnp
jp
jmp
hlt
fmul
lcall
lock
fldenv
dec
adc
fwait
loopne
pusha
cmc
adc
inc
mov
arpl
mov
or
mov
and
xchg
cli
js
push
fidivrl
fdivs
and
push
cmc
mov
xchg
cmp
fcmovnbe
pop
lahf
int3
pop
xlat
lock
jae
pop
js
add
cmpsb
sub
lret
inc
inc
inc
mov
das
xor
sbb
mov
cmp
cmp
xor
add
xchg
mov
adc
jb
xchg
lock
cmp
cs
mov
out
js
pop
mov
lods
mov
mov
je
sbb
lret
adc
fsubs
movsl
jp
cmpsl
mov
cmp
sarl
sub
mov
dec
cmp
fsubrs
pushl
call
and
xchg
sbb
lret
insb
mov
adc
or
dec
xchg
xchg
fildll
cmp
daa
out
push
inc
out
movsb
gs
dec
dec
nop
sub
aas
add
jmp
repnz
lds
out
push
add
aaa
jle
mov
mov
and
add
add
dec
pop
shlb
sub
in
ss
dec
loop
rolb
sti
push
jecxz
dec
adc
mov
call
add
cmpsl
and
test
ret
pop
addr16
test
dec
xchg
fnstsw
fdivs
daa
mov
insb
lahf
xor
daa
rorb
dec
mov
pop
push
aas
xlat
loop
stos
inc
out
xor
out
sbb
sub
push
scas
pushl
mov
sub
mov
shll
fwait
mov
mov
inc
lods
sbb
mov
push
pusha
mov
in
push
out
pop
push
pop
call
icebp
fsts
push
aad
jg
sbb
and
sbb
insl
cltd
roll
dec
out
cmp
dec
mov
inc
jns
es
int
outsl
and
dec
aam
aad
cmp
inc
jb
loop
and
je
mov
dec
out
jle
sbb
and
mov
pop
dec
fisttps
pop
ds
dec
ja
mov
loopne
mov
inc
mov
mov
push
sub
pop
xorl
mov
ficompl
inc
xlat
jbe
in
jns
xchg
dec
lcall
push
repz
mov
and
inc
xor
inc
cli
xchg
daa
test
and
inc
dec
dec
jge
test
dec
nop
mov
pop
mov
jmp
xor
das
not
pop
cmp
jbe
sub
add
pop
aad
push
adc
xlat
clc
mov
jnp
shl
stos
mov
mov
jg
cwtl
inc
fstpl
dec
push
lahf
pusha
mov
sbb
sbb
add
sub
int
es
adc
sbb
scas
xchg
pop
scas
dec
adc
pop
and
cmp
pop
xchg
inc
add
lea
sub
repz
js
sub
ss
push
jecxz
pop
inc
out
jae
stos
ljmp
inc
jbe
sub
add
xor
pop
add
push
cmpsb
pop
add
push
add
ja
lock
inc
into
jb
pop
sub
and
cmpsl
xchg
nop
popf
cltd
push
push
repz
push
adc
xor
or
fldenv
sahf
loop
scas
mov
sti
mov
mov
push
dec
pop
push
dec
inc
int
jne
xlat
mov
push
sahf
ja
les
pop
and
push
sbb
cmpsl
adc
jge
mov
sarl
jne
jae
ds
dec
xor
fstpl
in
cmp
and
xchg
xor
aam
add
push
sbb
jge
push
outsb
mov
test
ljmp
jmp
loope
bound
cmpsb
push
lea
inc
mov
pop
jge
jns
clc
push
loopne
adc
or
mov
mov
inc
dec
cwtl
fdivl
inc
xor
lret
arpl
or
add
fnstcw
in
xor
inc
idiv
cmp
push
jmp
add
mov
inc
pop
adc
jl
inc
out
int
inc
outsb
fdivrs
gs
jl
inc
popa
adc
sbb
pop
aaa
repz
inc
pusha
out
mov
pop
rcr
gs
bound
cmp
xchg
sub
fisttps
sbb
push
xor
or
mov
mov
outsb
push
daa
rcll
mov
mov
test
cmp
imul
ss
push
dec
xor
pop
flds
mov
dec
jns
xchg
sbb
jecxz
mov
mov
test
arpl
or
pop
cmpsl
cmpsl
arpl
cwtl
fldenv
cvtpi2ps
lret
int
ss
push
outsb
pop
mov
xor
pop
pusha
mov
arpl
inc
lcall
inc
push
movsl
bound
arpl
movsl
filds
popf
dec
push
das
ds
fildl
lss
test
rorl
cmpsl
outsb
mov
aas
std
es
dec
mov
cmpsb
jno
dec
ret
scas
jmp
loop
mov
mov
daa
aam
ss
cmp
jnp
test
dec
xchg
fisubs
icebp
jle
into
pop
jle
jmp
pusha
mov
and
mov
loope
jno
clc
imul
mov
cld
mov
mov
jo
dec
mov
mov
les
rcr
xchg
movsb
cltd
decl
mov
jle
push
das
xchg
sub
mov
push
and
sub
jne
push
add
jmp
mov
mov
mov
push
push
jnp
pop
repz
loope
adc
mov
int
js
imul
xchg
xchg
lcall
mov
mov
jge
cmp
pop
jbe
mov
push
aas
leave
or
sbb
loop
out
div
add
push
jb
xor
mov
adc
bound
push
mov
pop
outsl
cmp
jb
inc
mov
add
jb
pop
int
aaa
cli
shlb
dec
and
mov
jp
jne
mov
and
inc
jno
xor
leave
inc
jl
mov
inc
cmpsl
add
mov
adcb
mov
inc
xor
enter
cmp
outsb
pop
mov
mov
push
jecxz
cmp
mov
mov
xor
push
cmp
arpl
add
push
inc
jge
dec
or
aas
stos
pusha
stos
fsubrs
sub
mov
inc
xor
inc
xor
or
lret
es
jb
in
fadds
inc
jmp
dec
out
sbb
stc
xchg
jge
xor
lret
mov
arpl
xor
push
pop
adc
mov
hlt
adc
mov
push
mov
pop
repz
ret
mov
push
mov
pop
out
jle
movsl
adc
mov
push
mov
adc
and
sti
popa
gs
or
mov
int3
lret
cmpsb
xor
add
cmpsb
bound
xor
das
inc
stc
fisubrs
mov
inc
jo
test
pop
and
addb
ljmp
cmp
adc
push
xor
lcall
push
mov
mov
push
lret
push
js
iret
jle
jge
xchg
shrb
jg
nop
mov
lret
mov
stos
insb
enter
pushf
push
fnclex
xchg
jo
pop
sub
daa
push
icebp
std
dec
xlat
popf
inc
fstpl
and
mov
xor
mov
mov
push
mov
jne
mov
jl
arpl
xor
arpl
xchg
popa
xchg
call
test
mov
shll
rcll
push
mov
fidivrs
push
xchg
insl
jg
and
dec
mov
xchg
push
das
mov
push
bound
dec
mov
dec
add
test
cltd
bound
xlat
mov
testl
add
pop
pop
push
int3
mov
adc
cmpsl
push
cmp
pop
popa
arpl
sti
cmp
xchg
cmpsb
xchg
into
cmpsl
jno
les
cwtl
loop
arpl
mov
stos
xor
jp
mov
sbb
push
int
sbb
popf
pop
mov
cmpsb
dec
cmp
push
jbe
das
es
cmp
sbb
jno
push
inc
movsl
jns
xchg
movsb
xchg
pop
xchg
mov
push
sbb
mov
andb
sbb
adc
ds
inc
movb
jp
outsb
add
mov
daa
testl
cmp
pop
jp
loopne
mov
std
push
sbb
sbb
or
pop
aaa
jno
addl
aaa
pop
mov
xor
mov
divl
jl
test
mov
bound
enter
in
lahf
ret
lret
add
pop
push
out
cmpsb
xchg
shll
fsubs
aas
popf
mov
scas
pop
mov
cld
ss
inc
dec
call
sub
and
fsubr
cmpsb
mov
stc
enter
notl
bound
fisubs
xor
arpl
pop
pop
cmp
fldt
add
imul
adc
out
adcb
jecxz
arpl
cmp
shll
jbe
xor
shrb
mov
cmp
fmull
fsts
xor
icebp
lock
lahf
or
sbb
bnd
movsl
aad
test
xor
movups
dec
mov
pop
aaa
popa
dec
xchg
pop
push
sbb
bnd
push
stc
mov
adc
shlb
leave
insb
pushf
push
mull
xor
es
xor
mov
dec
adc
mov
inc
loop
inc
ja
dec
mov
push
or
inc
xchg
cmp
pop
mov
enter
push
bound
nop
push
add
inc
sbb
ss
sarl
jbe
pusha
cld
mov
xor
mov
sbb
pop
xor
scas
and
sbb
sbb
std
cmp
mov
inc
lock
xor
rol
cmp
scas
mov
cmp
arpl
sarl
aas
mov
mov
and
or
arpl
ret
xlat
pop
cmp
frstpm(287
sbb
mov
out
in
frstor
ljmp
cmp
xor
test
xor
lcall
inc
and
bound
gs
movsl
push
and
mov
jp
ljmp
ret
repnz
sub
adc
mov
in
lods
xchg
stos
add
sub
and
fmull
pop
or
in
cmp
into
mov
loope
cmp
fistpl
loope
pop
aam
les
pop
enter
mov
fnstenv
data16
daa
lea
cmpsb
and
mov
dec
sub
xor
xchg
das
inc
or
pop
popf
mov
mov
scas
sub
aam
es
decl
das
in
pop
and
mov
xchg
pop
add
or
fnstcw
xchg
cs
jmp
mov
xlat
movl
xchg
cmpl
cli
into
out
in
mov
jl
out
mov
pop
aaa
jbe
pop
cmpsl
addr16
sbb
lock
mov
add
pop
fmuls
test
push
jg
xor
push
rcrb
cld
push
es
inc
mov
lea
lods
stos
loope
mov
push
and
jbe
sahf
pop
adc
mov
fldt
xchg
ret
sti
mov
inc
mov
scas
mov
lahf
jmp
xchg
and
popf
jmp
ljmp
addr16
das
enter
dec
rcrl
stos
outsb
xlat
shr
lahf
cmp
dec
mov
and
pusha
pop
or
push
cmp
cmp
mov
inc
repz
cmp
aaa
adcl
test
xchg
xchg
shll
push
dec
lcall
mov
inc
jo
sbb
call
mov
pop
add
pop
out
icebp
fwait
sub
data16
jg
cltd
fcoms
jle
loope
mov
add
push
aaa
cs
sub
inc
or
fcompl
sub
jp
mov
push
outsl
pop
mov
xor
imul
pop
inc
lcall
cmpsl
shll
adc
aam
aaa
cmp
mov
pop
lret
xchg
push
gs
inc
mov
sbbb
cmpsl
sub
flds
cmpsb
sub
xchg
sub
xlat
xor
dec
out
mov
popa
into
mov
fwait
push
bnd
mov
sub
loop
jmp
bound
ficoml
cltd
xchg
shll
rclb
jp
push
push
mov
ja
js
pop
jnp
lods
lds
push
std
cmc
in
jecxz
out
enter
stos
dec
cld
gs
mov
sub
mov
inc
mov
inc
shlb
jecxz
leave
inc
dec
mov
pop
les
fwait
cmp
add
xor
pop
aad
and
lret
adc
mov
repz
jo
ja
mov
cmc
hlt
and
fwait
xchg
inc
cmp
mov
test
jl
push
flds
xor
inc
sub
out
xorl
mov
adcb
mov
mov
pop
dec
jnp
jg
sahf
cltd
in
mov
jnp
pop
jo
leave
test
andb
dec
pop
mov
test
sub
xchg
dec
and
enter
stos
cmp
jns
sub
movsl
es
jne
sub
jnp
jb
or
sbb
adc
sub
ljmp
jns
stos
es
xchg
nop
aas
adc
in
cmp
push
xor
out
sub
fadds
dec
adc
scas
sbb
dec
inc
insb
mov
mov
cmp
cmp
cmc
or
push
mov
jne
movb
push
aam
movsl
dec
repz
mov
psubw
call
xchg
pop
sub
mov
adc
ret
pop
imul
mov
jno
ret
and
addb
loope
adc
ret
pop
shlb
add
mov
push
push
pop
pushf
push
jnp
fdivrl
movl
jae
push
jne
or
xchg
lret
stos
scas
ffree
inc
or
pop
pop
add
adc
insl
cmc
and
sbb
dec
rcrl
add
fcompp
mov
mov
mov
int
ss
add
sub
out
mov
pop
adc
sub
mov
push
pop
mov
leave
fists
jae
mov
or
mov
shlb
xor
test
mov
fdivl
test
dec
loop
out
mov
push
xchg
fidivrs
int
add
sbb
push
dec
shll
cmpsl
jge
inc
sbb
sahf
mov
jmp
fstl
mov
push
clc
das
in
push
das
xlat
mov
mov
aaa
xchg
sbb
iret
fsub
aas
jns
rcll
sbb
movsl
frstor
sbb
lds
fwait
pop
mov
xor
and
lods
mov
push
push
push
mov
ret
inc
insb
push
cmp
loop
mov
orb
or
in
xor
jae
add
arpl
int
mov
pop
inc
loop
adc
test
mov
fisttpl
sahf
orb
stos
test
pop
adc
gs
xchg
aas
jp
lds
repz
push
mov
jg
cwtl
in
cld
xlat
sbb
xchg
push
inc
shrb
pop
test
negl
sarl
lret
arpl
jo
or
pop
or
loope
or
lea
fdivrs
popa
out
fsubs
add
push
jnp
sbb
pop
push
pop
sub
push
push
mov
xor
fwait
daa
mov
data16
daa
ljmp
jge
mov
xor
mov
movsl
cmp
pushl
in
dec
sub
adc
dec
fwait
jns
pop
cltd
dec
push
mov
mov
les
dec
or
je
imul
push
xlat
xchg
decb
ret
lods
fcoms
inc
mov
int3
add
mov
les
xlat
jnp
xor
xchg
pop
mov
adc
aad
ja
inc
jno
cld
and
jb
push
sbb
icebp
and
arpl
in
and
cmp
scas
sbb
mov
stc
jp
scas
imull
mov
mov
cld
or
mov
push
add
push
pushf
mov
and
inc
sbb
mov
cwtl
notl
cltd
std
xchg
inc
idivl
push
sbb
addr16
sub
pop
jmp
ficomps
scas
pusha
cld
xchg
pop
test
sub
push
mov
js
and
sbbl
mov
iret
sbb
cmc
mov
sbb
mov
mov
js
jecxz
pop
lods
pop
sti
lods
xor
cmp
cli
cwtl
add
jb
mov
push
xchg
push
cmp
leave
loopne
fdivrl
xor
jecxz
and
sbb
mov
leave
cmp
stc
arpl
mov
mov
add
inc
jae
jmp
dec
sub
cmp
cmp
cmp
mov
pop
lods
insl
xchg
test
mov
mov
jo
pop
inc
and
pop
push
jno
dec
adc
pop
int
fadds
push
and
gs
cmp
nop
add
cli
test
dec
or
and
xchg
lahf
es
pop
int3
jb
into
and
lahf
popa
test
outsl
bound
jl
sub
sub
jmp
fsubrl
mov
jno
xor
mov
rorb
dec
addr16
push
pop
or
shrb
lret
push
adc
cmp
cli
fdivrl
sbb
xchg
fsubrs
inc
aas
repnz
push
out
mov
les
inc
icebp
cmpsl
dec
int3
inc
mov
push
ja
subl
adc
mov
and
xor
inc
jp
jp
jp
and
cmc
sub
mov
mov
pop
pop
adc
lahf
lret
nop
mov
pop
push
lcall
jne
adc
jb
xchg
sbb
jbe
xchg
orl
test
shrb
daa
fisubl
cmpsb
ds
jp
aas
ret
repnz
mov
xchg
inc
sbb
fcomps
lcall
in
or
add
dec
mov
shlb
jle
and
inc
rcl
push
cmpsl
mov
push
mov
or
pop
pop
sahf
or
test
icebp
jne
mov
xchg
icebp
stos
jp
add
arpl
clc
adc
mov
sti
insb
dec
jo
sbb
mov
cmpsb
pop
pop
movsb
sbb
pop
hlt
push
shll
cmp
loope
subb
std
rolb
mov
mov
out
ss
pop
fsubs
push
pop
sbb
inc
pop
popa
and
mov
cmp
movsl
cmp
scas
out
sahf
enter
and
xor
pop
push
pop
cltd
inc
rcr
cmp
push
and
or
lret
cmpsl
push
sbb
jno
lock
push
adc
sub
jge
inc
mov
push
sbb
ret
pop
sahf
lret
out
aad
cmp
mov
add
movsb
pop
mov
cs
insl
adc
mov
and
les
jbe
sbb
ficomps
pop
dec
ljmp
repz
push
pop
sbb
rcl
ret
js
outsb
xor
adc
adc
mov
mov
push
push
push
mov
and
dec
jg
rclb
movsl
psubd
add
and
faddp
pushf
cs
inc
inc
pop
movsb
dec
xor
dec
and
bound
les
call
mov
and
pop
push
cmpsl
rcr
pop
mov
mov
mov
mov
push
mov
pusha
cmpsl
fwait
adc
or
pop
stc
mov
mov
pop
jb
cmp
xor
pop
repz
nopl
add
dec
lret
cmpsl
testl
adc
inc
aas
mov
cmpl
loopne
mov
pop
mov
aad
add
push
push
pop
lods
ja
mov
add
mov
push
lret
add
and
inc
movsl
mov
lods
div
pop
mov
cmp
sbb
pop
xchg
mov
adc
setae
xchg
pop
mov
and
lcall
scas
mov
cwtl
stc
fwait
and
jmp
xchg
leave
mov
mov
pop
popf
jmp
mov
sub
sbb
out
out
jne
push
pop
or
daa
mov
sub
cmp
sarl
xchg
cmp
sahf
push
and
push
sbb
fwait
ss
add
xor
lds
push
loopne
fsubrl
int
daa
or
testl
sub
dec
mov
aaa
push
or
push
popf
fbld
out
mov
dec
int
mov
mov
out
xchg
or
push
xlat
mov
xor
aas
pop
xor
pop
pushf
and
mov
add
dec
add
cmpsl
or
and
xchg
into
stc
imulb
nop
mov
xor
lahf
out
lahf
rorb
pop
fbstp
ss
popa
cmp
fldl
sbb
out
dec
popa
sub
adc
sbb
out
les
push
lods
cmpsl
iret
and
pusha
sbb
cmpsb
shll
ss
inc
test
inc
enter
add
stos
popf
lods
push
inc
mov
mov
aam
mov
shrl
xchg
out
enter
push
xor
divb
arpl
ljmp
stos
push
dec
adc
shr
pop
dec
sub
ljmp
ds
pop
mov
pop
mov
sbb
out
xchg
inc
add
and
xor
gs
pop
sub
leave
push
rclb
sbb
popa
push
in
rorl
pop
pop
or
sub
inc
outsl
mov
shlb
pop
cmpsl
or
repnz
mov
sarl
mov
and
ljmp
lcall
ret
xor
aas
push
xor
in
sbbl
push
iret
iretw
mov
jmp
inc
sub
lods
xchg
mov
add
pop
arpl
cmpsl
add
sahf
push
add
jge
inc
sahf
mov
pop
cmp
xchg
xchg
dec
js
cs
inc
jns
shr
mov
fwait
jecxz
das
jne
cmpsb
mov
mov
push
jbe
lahf
sub
leave
cmp
fistpll
add
mov
push
repz
push
iret
mov
fidivrs
bound
xlat
in
test
xchg
pop
fstp
cmp
xchg
push
es
fsubs
sbb
stos
push
out
cmc
inc
sbb
gs
push
jae
outsb
inc
imul
in
addl
cwtl
es
add
pop
pop
push
or
data16
mov
and
inc
sbb
and
iret
pop
push
push
ds
das
movsl
jge
call
leave
loop
xchg
pop
in
sahf
fidivl
jnp
mov
xchg
jo
push
mov
cmp
cmc
cmp
push
stos
jg
dec
das
sub
bound
lcall
test
das
sub
sbb
xlat
cld
lahf
adcb
xor
mov
mov
outsl
or
jp
in
dec
repnz
jecxz
vpxor
xchg
or
dec
es
and
or
pop
pop
inc
or
daa
mov
outsl
ljmp
xlat
repz
xor
scas
adc
push
mov
push
add
xchg
or
adc
or
xchg
or
sbb
in
add
flds
pop
sub
leave
rcrb
pop
xor
adc
scas
sti
add
pop
orl
aad
dec
movsl
jp
movsl
xor
and
leave
sub
mov
ret
and
rclb
dec
inc
push
and
lcall
pop
xchg
out
into
das
pusha
mov
push
dec
aad
pop
out
xorl
jle
repz
xchg
jg
dec
stc
lods
add
pushw
clc
lcall
mov
jg
jmp
mov
add
scas
popf
pop
xlat
cli
mov
pop
sbb
push
cmp
cmpsl
loop
out
mov
push
sahf
sti
xor
stos
ss
enter
sub
in
addr16
pop
mov
jecxz
movl
sbbl
outsb
inc
repnz
pushf
mov
xor
sahf
aas
call
fidivl
mov
mov
mov
aas
enter
or
std
mov
adc
nop
xchg
mov
fst
das
das
in
ret
pop
sbb
push
repz
cs
xchg
push
insl
or
inc
inc
dec
stos
jb
dec
ja
mov
mov
sti
daa
mov
mov
xor
jb
mov
aam
lahf
jl
cs
int
jl
es
testb
cmp
popa
or
sbb
and
push
stos
xchg
rcll
adc
in
cmpsb
push
pusha
and
push
cmpsl
cmp
inc
sbb
clc
and
lea
jg
ja
mov
mov
sbb
mov
adc
cmp
jo
xor
sub
pop
push
paddsw
in
mov
xor
movsl
loop
outsl
or
sub
lret
push
jne
mov
push
push
cvtps2pd
pop
pop
stos
mov
push
ljmp
ds
js
popf
int3
shll
aaa
das
fstp
xchg
je
or
je
adc
aas
push
mov
pop
mov
stc
cltd
int3
aam
sbb
jmp
push
out
pop
daa
std
pop
jl
xlat
ljmp
daa
mov
xlat
push
lcall
add
mov
sti
push
sbb
mov
ljmp
xchg
and
add
mov
jp
outsb
pmullw
test
pop
push
mov
daa
adc
aad
popa
arpl
hlt
jle
rolb
jp
add
jge
jl
mov
xor
or
jmp
jo
ljmp
jle
jge
ret
adc
ss
pop
adc
cmpsl
fistl
stos
or
xchg
out
lock
inc
dec
aam
outsb
push
pop
sbb
mov
cwtl
jmp
call
mov
dec
pop
mov
movsl
mul
jo
push
call
popl
insl
imul
repz
xchg
mov
outsl
mov
int3
outsb
ja
lret
test
sub
insl
cmp
xlat
sbb
inc
fldcw
xchg
jg
dec
hlt
test
jle
je
leave
sbb
add
jae
rclb
xchg
adc
mov
push
mov
fbstp
mov
push
mov
jno
lret
inc
cmpsb
mov
rol
pop
test
sub
mov
pop
xchg
add
mov
mov
push
mov
gs
mov
xlat
sbb
mov
sbb
lods
push
push
lods
inc
sbb
jns
pop
ja
sbb
bound
lock
outsl
inc
xchg
jnp
clc
inc
cmp
inc
sub
push
bound
mov
push
stos
popa
pop
es
jle
mov
mov
hlt
mov
in
push
mov
add
xor
push
movsb
and
js
test
loopne
add
adc
cmp
scas
jl
pushf
push
add
mov
push
enter
xor
mov
inc
mov
push
sub
and
popf
inc
jo
xchg
jbe
mov
loope
adc
jle
add
aad
pop
fisubrs
stc
cmp
scas
push
lea
rolb
mov
sbb
jmp
push
adc
and
fistpll
xchg
test
es
out
xchg
movsb
scas
les
sbb
orl
loop
arpl
xor
mov
ja
daa
das
or
xor
inc
sbb
sub
loopne
xor
mov
aad
in
add
icebp
jg
mov
les
mov
inc
and
push
outsl
xchg
mov
data16
stos
sbb
xchg
pop
pop
push
pushf
pushl
pop
dec
not
pop
mov
in
out
cwtl
fs
fdivl
sbb
inc
jno
sub
mov
jge
shlb
mov
mov
dec
jbe
cmp
xor
ja
dec
outsl
add
loop
loope
mov
out
push
daa
mov
pushf
lret
pushw
pushf
mov
push
movsl
sub
sub
dec
push
sarl
cmp
cmp
cltd
adc
lods
xlat
int3
dec
push
pop
ss
cmp
lret
fstpl
or
add
in
pop
dec
daa
jp
sar
data16
cmp
lret
add
mov
push
and
mov
cli
lods
mov
mov
aad
xor
xchg
cmp
in
scas
xchg
into
sbb
fiadds
jl
mov
lods
in
mov
outsl
rcrl
jnp
push
clc
mov
mov
mov
call
cmp
inc
sbb
mov
ljmp
adc
xor
adc
clc
imul
je
push
popa
loope
out
and
push
fistps
scas
sbb
dec
jge
jo
or
mov
das
mov
jo
jbe
push
daa
test
imul
ja
popa
loopne
jg
jge
dec
test
sub
shr
and
inc
push
adc
repz
mov
adc
loop,pt
iret
pop
sub
and
hlt
stc
dec
mov
pushf
mov
inc
jns
outsl
adc
lock
mov
sub
pop
fs
sbbl
push
jmp
xor
aad
sub
repnz
in
mov
out
xchg
xchg
xor
mov
xor
mov
js
pop
shlb
pop
xchg
inc
adc
push
mov
sti
stc
sub
and
mov
jns
bound
ljmp
mov
orl
mov
leave
enter
xchg
xchg
push
mov
cmp
in
inc
xchg
scas
adc
pop
loopne
mov
cs
test
aas
xor
push
mov
test
mov
sbb
fidivrs
dec
jbe
push
mov
mov
sub
ljmp
fwait
mov
jg
mov
jecxz
adc
sub
stc
push
mov
cmp
mov
jmp
dec
fsubl
fbstp
push
fistl
jge
ds
sub
mov
and
inc
inc
jae
mov
inc
negb
mov
xchg
data16
sub
fnstsw
pop
mov
mov
shl
jo
hlt
sbbb
push
cmpsb
and
adc
mov
fidivrl
mov
adc
gs
stc
cmp
imul
inc
add
push
mov
fnsave
fdivrl
test
mov
pusha
hlt
in
aaa
stc
inc
outsl
mov
push
fistl
sub
sbb
sub
push
scas
aam
dec
adc
insb
stos
mov
and
mov
in
pop
fistps
sahf
pop
lcall
add
cltd
sub
ret
psrad
das
xlat
inc
gs
repz
aas
lods
enter
add
stc
and
push
mulb
cmp
ret
addr16
and
push
sub
mov
aas
push
jg
pop
sbb
adc
sbb
fsubrs
pop
dec
jno
pop
fdivrs
xor
pop
enter
js
fimuls
ret
pop
mov
in
psubsw
sbb
pusha
xor
aad
cmpsb
lods
mov
and
aam
jg
or
out
xchg
test
mov
jle
pop
lock
sbb
call
in
mov
scas
pop
pushf
mov
fwait
mov
fdivrs
and
pop
sub
jns
fiaddl
cmpb
mov
cmpsb
ds
and
aad
dec
das
fsubs
mov
fstpt
pop
mov
sub
pushf
les
popf
sbb
cmp
je
and
aas
loope
stos
in
lcall
fdivs
xchg
lds
sub
aaa
loope
daa
das
mov
mov
mul
ficoms
pop
pop
mov
mov
aad
pop
icebp
jnp
rcll
punpckhwd
mov
insl
fldl
push
cmp
outsl
stos
ficompl
jge
fiaddl
fmull
testb
inc
outsl
imul
aas
dec
mov
mov
out
xchg
aad
lcall
adc
sub
ret
mov
test
cmp
or
rcr
test
mov
lcall
inc
sbb
rolb
push
frstor
xchg
fs
xchg
in
fwait
mov
mov
pushf
xchg
mov
mov
push
cmp
jg
pop
popf
ds
mov
inc
scas
fnsave
cmpsl
nop
rclb
adc
popa
dec
dec
mov
mov
in
mov
or
roll
jbe
daa
js
add
enter
bound
sub
and
push
pop
push
jmp
pop
scas
sbbl
leave
cmpsb
inc
push
jae
cmp
mov
lret
daa
imulb
or
sbb
dec
pop
jge
loopne
mov
fstps
push
sbbb
arpl
shlb
clc
add
outsl
outsb
ret
cmc
sub
je
sbb
mov
and
aam
xor
idiv
data16
test
sub
imul
mov
adc
popa
aam
addr16
xor
and
pop
outsb
mov
xchg
das
leave
adc
push
jne
aas
xchg
pop
lods
stc
lcall
test
shlb
stos
cwtl
push
stc
lods
lcall
and
pusha
sbb
cmp
pop
xchg
xchg
arpl
cmp
push
sbb
pusha
rclb
cmpsb
xchg
pop
jp
sbb
xor
jo
mov
push
psubusb
ret
push
daa
sbb
adc
jmp
jb
fisubs
pop
mov
xchg
lods
test
push
mov
push
pop
mov
insb
adc
xchg
sbb
out
sti
xor
pop
xor
out
in
fwait
sbb
into
ret
mov
sahf
dec
pop
into
repz
mov
inc
stos
lahf
dec
ss
fwait
es
pop
aaa
pop
mov
fs
rorb
ja
jp
xchg
adc
movsl
sub
pop
jp
shlb
dec
pop
es
inc
mov
mov
jo
shl
std
orb
push
push
sbb
and
insb
jmp
ficomps
sbb
repz
loop
mov
xor
push
and
push
dec
rolb
inc
cmp
push
inc
imul
jle
aaa
cmpsb
mov
ret
mov
cmpsl
mov
cmpsl
jl
std
std
sub
mov
dec
sub
mov
inc
pop
xor
push
fisubrl
pop
mov
dec
fistl
sbb
mov
mov
fs
push
sti
dec
es
push
pop
jns
mov
push
in
xor
add
outsl
xor
hlt
xor
inc
cmpsl
sarb
cs
jns
shrl
fsubrp
sar
jg
inc
outsl
in
mov
pop
push
lcall
lea
inc
mov
subl
in
ds
ja
sub
pop
repnz
jns
mov
fwait
inc
rorl
xchg
pop
sarb
xchg
and
cmp
adc
sahf
frstor
jge
lret
fidivrl
fs
sbb
jecxz
xor
xorl
fisubl
and
or
bound
dec
divb
sub
xor
adc
dec
xchg
stos
and
pop
and
mov
mov
pop
push
xchg
pop
and
ljmp
cwtl
sub
jnp
push
sub
xor
jmp
mov
jl
lea
adc
dec
add
mov
bnd
sahf
and
xchg
sub
imul
mulb
bound
icebp
mov
mul
pop
inc
xlat
dec
inc
shlb
out
divl
push
xor
pop
cld
fwait
daa
sub
jle
out
in
lcall
cmpsb
ret
leave
and
rcrb
mov
mov
out
pop
push
pop
push
mov
jnp
cld
outsl
pop
xor
mov
xchg
outsl
adc
inc
repnz
and
fsubr
push
das
push
cmova
sbb
add
ja
push
orl
mov
push
outsl
pop
push
inc
xchg
repz
inc
outsb
sub
scas
jmp
out
jnp
js
data16
xchg
inc
add
and
aam
js
jecxz
scas
imul
jae
test
add
je
test
loopne
mov
jge
lock
xor
pop
pusha
mov
ja
sbb
fnstsw
adc
inc
imul
loop
add
ret
daa
sbb
loop
out
test
scas
jo
ficoms
popf
add
mov
or
pushf
add
aas
in
test
lahf
or
cwtl
dec
xor
lea
jbe
sahf
push
cmp
outsb
inc
fs
sti
mov
rcpps
pop
rolb
es
dec
mov
xchg
dec
out
adc
in
jns
ljmp
loop
idivl
push
loop
mov
pop
dec
jecxz
sub
stc
mov
mov
cli
inc
xchg
and
inc
jg
jbe
in
lret
sbb
jmp
jbe
inc
icebp
and
dec
out
mov
cmp
push
mulb
popf
enter
cld
ds
jno
int
push
daa
fisubl
adc
add
hlt
xor
and
xchg
lock
daa
std
aas
mov
cmp
pop
ret
scas
std
mov
pop
jmp
insl
mov
insl
push
es
outsb
std
mov
sub
mov
xor
sbb
xor
lods
out
scas
mov
dec
cmpsl
mov
sahf
sub
inc
adc
lahf
out
enter
add
cli
cld
lcall
sti
loop
cli
xchg
adc
cmc
xor
icebp
dec
ror
out
lods
sbb
mov
int
loopne
adc
fldcw
cmp
rcrb
inc
lahf
clc
xor
and
jns
inc
add
lea
dec
lea
mov
cmp
call
insb
pop
lock
pop
cltd
popa
mov
xor
add
adc
movsb
adc
loope
psadbw
mov
repz
mov
xchg
dec
rorl
inc
mov
jg
mov
add
dec
or
cmp
call
and
mov
and
xlat
adc
cvtdq2ps
jle
jb,pn
dec
hlt
ljmp
xor
test
ficompl
sub
push
mov
pop
pop
or
repz
sub
rcll
mov
or
mov
mov
mov
jle
dec
pop
cvttps2pi
std
pop
push
sub
mov
lcall
sub
jge
jno
ljmp
call
pop
daa
jecxz
lods
jno
popf
jge
arpl
lock
imul
sub
fs
movsl
pop
sub
mov
ljmp
pusha
cmp
mov
cmp
shl
int3
js
fwait
cli
mov
jno
pop
inc
mov
jle
xchg
mov
mov
inc
inc
sub
sahf
in
leave
xchg
inc
sbb
cmp
dec
sub
adc
arpl
cltd
inc
mov
or
test
cmpsl
fdivl
cmp
aas
add
push
outsb
add
fsubs
je
nop
cmpsl
mov
cwtl
icebp
into
aas
dec
call
aas
in
sarb
jnp
xor
mov
jne
idiv
add
mov
xchg
add
and
fstpl
xchg
mov
mov
mov
pop
xor
push
dec
cmp
test
cltd
leave
mov
fadds
adc
imul
push
lcall
nop
in
lds
pop
sbb
sub
sub
push
enter
push
sub
std
stos
cmp
cmp
ds
mov
daa
dec
lock
icebp
ss
or
mov
fmull
mov
jge
fs
cltd
xchg
sbb
add
lock
test
pop
xor
sub
sti
adc
jecxz
mov
adc
arpl
mov
cmpsb
inc
out
rcrb
mov
jg
sbb
out
cmp
add
das
xor
rorl
sub
jo
test
jns
add
push
dec
scas
ror
push
add
leave
into
je
push
out
mov
repnz
lods
xor
repz
shlb
xchg
jl
inc
sbb
jge
pusha
mov
xchg
xchg
ljmp
push
xchg
jno
mov
adc
shlb
insl
aas
jg
mov
mov
jmp
xor
pop
in
imul
add
inc
cs
pop
lea
fimuls
mov
insl
lret
mov
sub
xor
jb
lcall
nop
fiadds
push
ret
mov
arpl
aaa
bound
xorb
inc
xor
and
leave
aad
xor
mov
and
mov
popa
xchg
movsb
adc
cmp
and
daa
iret
dec
pop
jns
iret
jnp
nop
push
shlb
shrl
popa
fnsave
mov
add
ljmp
enter
aaa
loope
jg
ljmp
and
addr16
mov
sbb
and
adc
mov
and
cmp
fs
sbb
out
xor
dec
mov
fmul
pop
repnz
lea
sbb
mov
outsb
jl
nop
sahf
testb
mov
dec
mov
sarl
mov
mov
pop
jbe
mov
jno
in
mov
inc
xchg
dec
addr16
inc
int3
insb
dec
imul
mov
dec
mov
negl
insb
xor
fdiv
pop
scas
pop
sbbb
cmpsl
aad
and
sub
aad
push
shr
pop
popf
mov
xchg
and
shll
mov
pop
or
iret
nop
mov
push
fistl
sbbb
or
or
mov
sbb
xchg
mov
sbb
les
jecxz
jl
or
mov
xchg
mov
outsb
push
push
in
jb
push
out
push
dec
mov
or
xchg
aas
jg
xchg
pop
xchg
pop
js
xor
leave
mov
call
inc
jbe
push
xor
mov
out
pop
aad
pop
inc
cmpsl
add
and
ficomps
bound
bound
and
fbstp
lahf
aas
and
mov
cmpl
insl
jp
adc
adc
stos
dec
pop
mov
add
cmp
cmp
insb
lods
outsl
in
ret
ljmp
mov
pusha
push
push
pusha
mov
loop
adc
bound
addl
inc
push
iret
inc
scas
jge
cmp
xchg
out
push
ss
adc
fs
fwait
stos
xor
icebp
xchg
xor
cs
mov
lds
pop
movsb
adc
pop
xchg
push
and
xchg
pusha
nop
xor
xchg
popa
clc
sbbl
fidivrs
inc
dec
lock
stc
shl
mov
jne
xchg
stos
int
stos
pop
inc
aas
xchg
dec
inc
mov
pushf
imul
adc
in
xor
or
mov
daa
sub
test
inc
or
clc
adc
cwtl
mov
or
dec
push
pop
roll
out
jecxz
fbld
inc
push
add
enter
loopne
xor
push
xlat
pop
lea
xchg
fstps
fisttpll
mov
cmc
sbb
stc
pop
adc
mov
inc
test
dec
test
sbb
fmuls
pushf
fsubp
inc
pop
cs
adc
sti
mov
dec
sub
mov
jmp
lcall
popf
aas
data16
mov
pop
cmp
pop
iret
pop
jp
and
enter
out
jle
mov
mov
xchg
sbbb
pop
mov
out
cmp
and
lea
and
pop
das
inc
pop
adc
mov
imul
test
mov
testb
icebp
xchg
leave
mov
jns
movb
dec
push
or
and
outsl
mov
outsl
xchg
sub
and
sbb
add
dec
in
and
dec
clc
insb
js
imul
rcrl
dec
lret
int
fldt
inc
popa
inc
ja
nop
ljmp
test
inc
popf
mov
aad
mov
es
cmpsb
jae
mov
inc
xchg
jmp
cwtl
mov
jmp
jns
xchg
adc
inc
and
xchg
js
loop
pop
inc
fdivl
stc
int3
sbb
dec
imul
inc
push
leave
lds
loopne
dec
cli
xchg
jl
and
test
and
push
adc
mov
pushf
shll
mov
rcrl
jb
std
je
inc
jo
inc
push
test
xor
mov
pop
ret
ret
sub
mov
xor
icebp
insl
sti
push
insl
xor
dec
or
xchg
cmp
adc
cltd
cmp
je
xchg
dec
test
inc
int
sbb
mov
fldt
out
mov
int
adc
sarb
movsl
ljmp
push
repnz
cmc
fdivp
out
nop
mov
hlt
repz
mov
andb
cmp
xchg
lock
lcall
cmp
arpl
xor
int3
sub
jge
test
rcrb
lods
dec
add
mov
std
roll
incl
int
xchg
insb
sbb
pop
out
cmp
rol
push
or
movswl
mov
icebp
fcmovnbe
lahf
ljmp
insl
jb
ret
mov
adc
dec
cltd
inc
add
clc
mov
push
jmp
sbb
xchg
into
nop
xchg
faddl
jbe
add
shll
mov
xchg
addr16
xor
jmp
test
in
arpl
out
adc
sub
sub
cmpsl
xorb
in
fdivrp
xchg
test
cmp
jae
test
pop
orb
cmp
inc
repnz
xlat
call
leave
lret
cli
test
insb
add
inc
out
jle
jnp
adc
cmpsb
aam
mov
inc
out
mov
xor
pop
xor
sbb
or
jb
scas
fiadds
loop,pn
push
lods
adc
pusha
pusha
mov
jae
sub
lcall
push
cmp
lcall
scas
insl
adc
rolb
lods
stos
insl
fldcw
dec
mov
jl
bound
mov
and
xor
out
cmc
dec
rorl
subb
mov
xor
xchg
mov
shlb
cmp
fsubp
imul
ficoml
sub
or
jns
mov
jge
insb
into
cli
cmp
sub
adc
xchg
pop
stos
inc
mov
fstpl
push
sti
loopne
xchg
pop
aad
mov
push
rclb
adc
cld
and
add
add
andb
inc
adc
sbb
arpl
sti
sub
jb
jbe
test
add
lcall
inc
sbb
jle
adc
js
dec
rclb
movsl
sbb
into
leave
scas
scas
mov
ss
cmp
xchg
mov
xchg
and
push
jl
and
insb
mov
push
andl
in
and
test
leave
mov
adc
add
mov
inc
rclb
movsb
fidivrs
fdivs
add
pusha
ss
aaa
push
shlb
neg
int
das
stc
add
popa
sbb
or
mov
sub
adc
lcall
mov
cwtl
lret
andb
lret
cmpl
imul
xor
dec
repz
cwtl
ja
aam
mov
add
in
lret
xchg
push
cltd
roll
mov
mov
mov
mov
xor
push
clc
rclb
sub
sbb
call
sub
or
and
inc
xchg
mov
scas
ss
cltd
in
in
test
adc
pop
cmp
incl
pop
loop
and
loopne
push
pop
popf
es
xor
and
in
aas
scas
div
xor
pushf
out
mov
adc
mov
xchg
push
arpl
xor
lahf
in
aaa
mov
es
mov
pushf
pusha
fisubl
inc
xor
stos
repz
xor
call
mov
xchg
in
imul
cli
adc
and
mov
loop
in
sbb
xchg
push
inc
lret
cmc
push
mov
xchg
jp
lock
or
add
stos
lret
sub
rcrb
push
and
push
cmp
cld
mov
and
mov
inc
add
dec
cmp
jl
repnz
aas
std
xchg
leave
stos
popf
inc
jbe
pop
lds
clc
scas
iret
out
pushf
mov
dec
and
xor
paddw
dec
shlb
push
inc
scas
push
mov
xchg
xchg
push
cmc
out
pop
cld
cmp
or
or
mov
notl
xchg
and
cmp
mul
and
aad
push
cmp
and
loopw
jbe
jo
xchg
sub
pusha
sbb
sub
jg
jle
clc
inc
or
scas
dec
mov
dec
pop
add
dec
lds
js
mov
nop
add
mov
cltd
add
inc
adc
inc
imul
mov
adc
mov
push
lods
cmp
mov
xor
enter
inc
out
pusha
cmp
shl
pop
sub
pop
xor
mov
outsl
push
jecxz
dec
pop
push
and
mov
add
in
aaa
mov
mov
jp
add
jp
out
jmp
daa
jae
aad
gs
or
lret
push
mov
cmp
fxch
add
cmp
jecxz
leave
testl
jmp
in
sub
and
in
outsl
jns
lcall
aad
and
sahf
dec
ret
xor
lcall
in
je
loop
adc
cmp
ret
lods
xor
mov
adc
jecxz
mov
rcrl
pop
pushf
add
dec
scas
cwtl
ljmp
mov
mov
sub
cmp
loopne
scas
sbb
imul
xchg
das
movsl
bound
scas
lods
xchg
div
rcrl
bound
mov
pop
push
jb
insl
adc
mov
out
mov
fidivrs
xlat
sarb
dec
and
sub
cld
nop
lock
loopne
rorb
jo
mov
or
mov
out
jno
cmpsl
push
subl
arpl
add
test
xor
cmc
sub
inc
dec
mov
inc
out
add
mov
xchg
pop
stc
movsl
inc
ret
loop
xchg
rcrb
pop
ja
xor
hlt
addr16
xchg
icebp
pop
stos
inc
mov
scas
in
sarl
sahf
inc
dec
pop
mov
nop
daa
into
mov
mov
xor
sbb
vpmaddwd
cltd
mov
imul
or
pusha
aaa
fwait
imul
and
or
dec
lahf
inc
daa
xchg
add
fsubrp
or
mov
xchg
jle
rcrl
fnstsw
inc
jecxz
popa
hlt
mov
ljmp
mov
push
and
movsl
jae
test
mov
pop
sahf
lods
aad
dec
pop
sbb
ljmp
daa
xchg
das
insl
jb
and
adc
fisttpl
and
mov
dec
cmpsb
sub
inc
lea
addl
and
arpl
mov
pop
cmpsl
push
sahf
sbb
into
jo
aas
sbb
stos
and
icebp
xor
push
vpextrw
jne
lds
inc
scas
push
in
test
ss
fiadds
lret
ret
push
mov
mov
mov
lret
mov
and
ljmp
js
push
mov
and
cli
sbb
and
xchg
clc
shlb
pop
adc
dec
lret
push
sub
jp
cld
cmp
cmc
jbe
pop
iret
mov
sbb
push
xor
sub
jge
mov
and
hlt
sub
adcl
cmp
and
clc
mov
stos
add
mov
and
pop
ficoml
mov
push
addr16
test
arpl
cli
cmc
xchg
aad
test
dec
push
fstl
fldt
std
xchg
cmp
jge
jae
les
iret
cmpsb
popf
lods
pusha
cmpsb
add
xchg
test
dec
test
sub
mov
inc
aam
mov
stc
dec
mov
rclb
and
pop
lods
mov
or
sbb
mov
sub
stos
sbb
inc
xchg
in
jo
lds
mov
and
outsb
test
mov
jl
jl
xor
adc
ret
stc
mov
mov
negb
push
sbb
sub
push
add
and
xchg
inc
pop
dec
sub
movsb
push
stc
push
addb
and
cwtl
xor
mov
adc
clc
and
aaa
cld
inc
mulb
hlt
gs
push
pop
xor
xchg
arpl
jbe
add
mov
cmpsl
call
lods
nop
lea
xchg
les
jbe
repnz
mov
enter
mov
cmpsl
in
add
sbb
ret
dec
sar
jmp
xlat
pop
jb
xor
pop
jp
rcrl
dec
jge
aam
jb,pt
jge
add
jge
cmpsl
shrl
xchg
cltd
mov
fs
xchg
cmpsl
jno
dec
cmp
pop
cmpsb
xor
push
and
dec
lret
call
mov
icebp
test
jge
mov
xchg
out
add
shll
cmpsl
sahf
out
and
push
xchg
int3
fwait
sbb
adc
pop
add
sahf
add
sbb
ljmp
sbb
out
mov
test
mov
lret
std
dec
lods
in
daa
imul
pop
loop
mov
test
xor
dec
sahf
xchg
mov
cltd
or
sbb
ja
call
pop
outsl
mov
add
ss
jle
int3
andb
cmpsb
mov
jg
xchg
rcrb
rcrb
dec
out
xchg
jmp
in
push
inc
pop
dec
cli
xchg
push
mov
fcmovu
jno
jecxz
sub
push
mov
fwait
subl
addr16
adc
xchg
add
mov
push
push
test
pop
inc
xlat
stos
fldenv
cmc
iret
pop
js
sbb
cmpsl
xor
rolb
inc
jecxz
frstor
cmp
cmp
sub
xor
es
daa
setg
sub
cs
push
ret
mov
jno
rorb
sub
mov
mov
jns
jge
pop
inc
fistpl
daa
pop
ds
popa
xor
cltd
inc
out
nop
sub
lret
pop
daa
in
jo
outsb
mov
xchg
aad
inc
inc
out
mov
sub
arpl
and
pop
pop
inc
mov
repz
push
lock
mov
and
test
out
cmp
sbb
mov
ss
and
movsb
sbb
ret
insb
mov
jecxz
inc
cmpsl
mov
imul
jno
notl
loop
xor
sarb
jecxz
stos
inc
jae
aad
sub
lcall
pop
inc
jle
mov
aas
xchg
decl
cmc
xchg
adc
scas
repz
pop
sbb
adc
mov
test
outsb
movsb
inc
xchg
pop
js
sbbb
jo
bnd
mov
pop
packuswb
jb
push
loope
int
je
pop
pop
cmp
inc
fldl
call
sub
jp
cmp
mov
into
mov
das
fnstenv
in
insl
mov
cmpsl
sbb
sti
xor
imul
sbb
jo
dec
xor
xor
inc
mov
loope
dec
push
sbb
mov
pop
mov
adc
and
nop
lods
int
and
jnp
push
lcall
jns
pusha
aas
cmpsl
xchg
fsubrl
jb
into
xchg
shlb
std
xchg
outsl
es
xor
mov
lret
test
adc
fsubrl
cmp
lods
scas
mov
int3
adc
mov
sbb
adc
sti
cmpsl
cwtl
sub
inc
daa
call
sbb
enter
in
sahf
es
jb
push
mov
ds
push
xor
xchg
cli
dec
adc
xchg
movsb
add
jp
rolb
pop
mov
mov
aas
jb
aas
pusha
loope
xchg
fdivrl
push
cwtl
insl
aam
outsl
inc
push
inc
jae
sub
xchg
push
in
je
into
jp
scas
add
clc
inc
inc
sub
pop
sbb
into
push
and
pop
cmp
add
ja
pop
adc
push
and
sbb
je
push
iret
and
sbb
fadd
stos
adc
inc
inc
xchg
push
mov
ret
or
or
xor
or
leave
loopne
faddp
in
and
mov
imul
inc
jnp
fwait
les
repnz
inc
stos
adc
cmpsl
sahf
imul
test
mov
xor
loop
pop
out
adc
mov
popa
adc
sbb
dec
lret
loope
scas
push
and
lods
xor
mov
xlat
cmpsl
pusha
xor
pop
xor
adc
dec
emms
inc
cmc
mov
orl
jg
lods
jno
cs
mov
aad
das
xor
in
jne
sbb
in
sub
mov
fs
hlt
inc
test
push
mov
imul
arpl
add
mov
jae
jb
or
in
mov
gs
dec
xchg
stos
xchg
xor
and
shll
dec
sub
std
sub
les
cwtl
leave
push
xor
and
dec
fldcw
push
add
lock
jae
push
pop
xchg
jg
test
fs
out
xchg
ja
ljmp
mov
mov
and
sbbl
ret
pushf
movsl
nop
pusha
movsb
sub
aas
sub
sti
mov
fcmovnu
repnz
jne
lds
fldenv
dec
ret
fs
rcr
test
adc
fcoml
mov
mov
mov
inc
mov
jmp
sarl
daa
jl
jle
xlat
dec
jns
mov
adc
call
rcl
pop
or
mov
jge
loop
scas
mov
shrb
jb
mov
outsb
cltd
dec
ret
out
mov
jno
xor
xlat
out
into
xchg
lods
int3
cmpsb
push
aaa
lret
mov
stc
stc
and
aas
in
fidivrl
dec
stos
jl
jo
fcomi
inc
add
outsl
lods
fldt
std
push
push
ret
mov
pop
lock
fldenv
jl
inc
add
test
cmp
cmpsb
jp
pop
sub
xchg
fadds
lret
cmp
adc
imul
ret
jp
sub
pop
mov
andb
push
pop
lret
or
ret
popa
int3
aaa
mov
sub
mov
mov
xor
jns
jle
mov
mov
sbb
jp
ljmp
and
jbe
aaa
dec
ret
inc
loop
into
popf
pusha
or
cmp
pop
xchg
dec
arpl
frstor
aad
rcr
aad
push
adc
jg
pop
and
jecxz
lea
xor
scas
cmp
fbld
inc
inc
out
mov
and
arpl
inc
lods
inc
or
mov
pop
sbb
rcll
add
fsts
and
in
movsb
inc
jecxz
out
xor
les
lahf
or
mov
sub
mov
jp
cli
lret
and
sbb
inc
mov
cmp
cmpsb
inc
cltd
inc
inc
and
fwait
popf
mov
and
push
sbb
pop
xchg
lds
int3
pusha
clc
cmp
shrb
pop
cmc
loop
jg
test
add
push
cmp
xor
scas
fstpl
iret
or
out
dec
dec
stc
jecxz
popa
es
dec
scas
sub
cmpsb
pusha
shll
add
push
mov
lret
push
scas
pop
aam
jp
inc
rcrb
xor
ret
pop
inc
or
mov
mov
xor
test
mov
xchg
cmpsl
je
mov
push
stc
pusha
mov
add
or
lcall
call
cmp
mov
and
fcoms
in
ret
inc
add
mov
int3
das
popf
loop
loopne
mov
pusha
insb
and
in
mov
push
negl
mov
push
rcll
out
jb
aas
dec
jno
sbb
ljmp
dec
fcomps
ret
popa
fstpt
mov
jb
mov
loope
xchg
dec
xchg
push
decb
mov
pusha
pushf
dec
dec
push
in
dec
sti
jbe
rcr
pop
mov
pop
je
mov
or
bound
mov
mov
es
movsl
jmp
adc
mov
add
add
data16
sub
loopne
lcall
fs
and
xchg
inc
mov
icebp
lcall
xlat
lcall
fisubrl
xor
les
stos
cmp
xor
loop
pop
xor
mov
mov
ret
and
sti
leave
jecxz
fisubrs
call
enter
mov
lea
xchg
aas
lahf
nop
imul
dec
add
dec
ja
es
out
jb
add
scas
les
scas
push
in
pop
pop
add
popf
faddl
jne
cmpsb
test
jp
xchg
imul
andl
call
cmc
xchg
or
adc
or
jge
sbb
mov
mov
mov
mov
xchg
jae
leave
sub
hlt
sub
or
mov
xchg
xor
mov
scas
shll
incl
inc
lcall
sbb
inc
in
jl
xor
pop
adc
popf
cmc
data16
inc
movsl
stc
xor
sbb
jmp
bound
rcrl
inc
mov
push
xchg
in
arpl
ret
xor
lahf
push
sahf
mov
lret
push
pop
icebp
push
icebp
xchg
push
adc
add
test
lods
fstp
pop
rcrb
mov
mov
push
cmp
mov
mov
sbb
cmp
mov
jmp
xor
popf
push
cmp
outsl
cmp
int
mov
xor
daa
push
push
push
sub
sbb
inc
ret
push
or
ss
push
jb
adc
jmp
and
pop
mov
leave
or
scas
mov
aad
xor
add
mov
mov
out
xchg
je
mov
push
in
fcoms
mov
sub
insb
fs
mov
daa
outsl
add
movsb
fisttps
js
aas
xchg
daa
xor
mov
sbb
call
xor
outsb
insb
push
rorb
cmp
lds
into
sarb
test
mov
inc
inc
lret
sarl
shrb
xchg
lret
in
idivl
sbb
addr16
pusha
sbb
mov
iret
cmpsb
loope
jge
mov
add
sbb
add
rcl
into
jns
daa
push
out
mov
jg
mov
and
ficoms
jae
mov
sahf
movsl
sbb
psubsw
mov
inc
leave
in
shl
push
test
stos
leave
pop
pop
lods
repz
pop
mov
int3
jecxz
push
xor
pmulhuw
cmp
mov
jl
aas
jge
sub
bound
pop
mov
scas
mov
xchg
aad
or
aaa
imul
ljmp
or
pop
push
xchg
test
jbe
push
fisubrs
mov
sub
pusha
idivb
or
xchg
out
push
pop
sbb
addr16
pushf
pop
test
stc
mov
or
or
jg
lods
mov
sub
jbe
jae
xor
push
adc
mov
repz
loopne
rcrl
ret
dec
jns
cmc
add
insb
and
dec
jae
fmull
mov
pop
push
enter
fdivs
cmpsb
es
popa
cmp
mov
test
icebp
add
push
dec
push
inc
in
int
fdivrs
enter
sub
pop
jl
ja
push
jnp
cmp
mov
dec
fsubl
sbb
pop
fs
fnstsw
cld
pop
and
out
add
xchg
std
and
fistpl
jae
orl
cmp
sbb
xor
mov
mov
repnz
gs
mov
sub
idivb
fidivs
into
popl
sub
adc
or
or
movsl
mov
jp
fnstcw
push
xchg
std
or
gs
sbb
mov
cs
pop
xchg
cmc
aad
adc
jl
pop
mov
lret
or
push
mov
data16
jbe
outsb
xchg
inc
mov
sbb
fstpl
xchg
imul
add
mov
add
dec
dec
shrl
std
inc
pop
mov
hlt
fdivs
xchg
adc
arpl
cltd
mov
mov
aaa
and
aaa
pop
sti
jle
movsb
hlt
adc
mov
cld
stos
subb
call
xchg
sbb
test
addr16
push
addr16
jl
mov
and
xchg
add
jnp
pop
repnz
addr16
sub
into
lcall
jle
repz
add
cmpsb
jge
xor
loopne
lahf
xchg
lret
adc
imul
cli
mov
mov
push
inc
mov
add
test
movsl
fstl
inc
fnstsw
test
stc
jmp
sub
addb
push
pop
pusha
in
xchg
mov
gs
aaa
icebp
cmp
lcall
nop
bound
mov
out
dec
bound
std
in
push
sti
insl
mov
out
xorb
jb
xchg
jns
pop
jmp
shl
and
and
mov
cs
aam
iret
data16
inc
inc
lea
out
push
add
push
mov
std
and
divb
inc
mov
xor
dec
in
pop
mov
dec
rol
pop
gs
fsubs
outsl
jnp
cs
in
jo
dec
lods
andb
int
push
xor
mov
fidivrl
lea
jne
and
divl
push
mov
sub
ja
dec
pop
adc
nop
cmp
inc
aas
sub
add
sbb
push
xchg
cmpsl
cmpsl
aam
inc
sarl
sbbb
sub
xor
shll
push
or
int3
or
popf
xor
je
add
cmp
adc
outsb
push
mov
dec
xor
mov
sbb
xor
mov
stos
mov
popa
aas
ljmp
sbb
push
iret
inc
cmc
dec
sub
lods
and
xchg
add
push
dec
aas
xlat
cmp
scas
pop
push
push
scas
inc
daa
or
loop
push
push
mov
les
mov
das
andnps
mov
ljmp
jo
and
and
and
loope
iret
dec
das
aad
repz
mov
sbb
cmp
lret
add
je
or
xchg
sub
fisubl
sbb
inc
or
push
jne
js
xchg
jle
jb
repnz
inc
lahf
add
and
pop
jle
and
je
or
push
dec
lcall
pop
into
stos
lahf
sbb
movsb
xchg
aas
cld
sub
sub
loopne
insl
jp
mov
shlb
dec
inc
mov
xor
ret
sub
and
and
mov
adc
sub
pop
mov
and
sub
daa
lea
outsb
fldl2e
mov
loop
mov
inc
push
jnp
sub
fisttpll
lret
pop
cld
scas
push
aaa
icebp
jb
in
mov
pusha
inc
and
test
les
or
adc
pop
xlat
mov
adc
test
mov
ficompl
lods
mov
leave
mov
mov
pop
xchg
adcb
cld
push
lods
call
frstor
ss
xor
jle
in
adcb
in
jnp
inc
into
ljmp
sub
adc
mov
push
mov
outsb
sub
popf
push
and
mov
out
in
popa
cmpsl
pop
insl
push
dec
iret
aaa
inc
sbb
push
into
xor
mov
xor
inc
mov
jbe
insl
ret
pop
or
adc
ds
dec
out
adc
push
and
sbb
and
xor
inc
cmp
addb
push
sahf
cmp
mov
xlat
xchg
sbb
inc
stos
cmp
out
pop
add
test
pop
mov
aad
fadd
icebp
sub
ret
add
inc
imul
inc
mov
push
in
cmpsb
sub
ja
inc
loop
mov
rcl
dec
int3
mov
sahf
jp
mov
mov
dec
pop
test
ss
xor
maxps
ret
add
add
and
pusha
jecxz
cmp
movsb
aaa
push
xchg
mov
xchg
int3
inc
and
xchg
or
repnz
push
adc
xor
mov
inc
jge
mov
imul
adc
sub
xor
jg
sbb
cmpsl
movsb
xchg
dec
cmpsb
sub
mov
mov
vunpckhps
pop
xor
sub
mov
dec
aaa
sbb
mov
jno
add
xor
loope
jne
insb
adc
pop
insl
mov
mov
jecxz
lods
and
dec
dec
sub
adc
imul
sub
pop
leave
fsubrl
or
jns
or
push
outsl
mov
notl
ret
sbb
inc
cli
cmpsb
arpl
popf
daa
pop
cmp
fsubrl
fmull
cmp
jl
mov
movsl
gs
dec
loop
or
mov
dec
xchg
add
hlt
imul
fdivp
dec
pop
jecxz
call
sarl
and
inc
jle
push
ja
pop
fxsave
push
shll
or
fwait
out
and
jl
cmp
scas
movsb
sub
movsl
int3
scas
dec
xchg
sahf
je
shl
lret
jle
xchg
mov
jge
mov
popa
fisubrs
sahf
mov
mov
adc
mov
aam
push
xor
in
inc
mov
sbb
jp
and
inc
xor
dec
add
inc
outsl
aas
dec
or
fdivrp
sti
push
int3
xchg
js
pop
sbb
jge
jns
or
psubusb
pop
pop
xor
dec
jb
imul
fisubrs
jns
and
sub
decb
in
sarl
lahf
jnp
fmull
push
dec
mov
inc
sbb
fimull
mov
cmc
shrl
popf
sub
aam
imul
cmpsb
scas
sahf
and
push
mov
jb
repz
xchg
sub
mov
or
shlb
movsl
outsb
in
movsb
aam
in
stos
fwait
cs
clc
mov
fs
aaa
faddl
je
mov
imul
xchg
test
lods
xchg
xchg
pop
ret
push
aam
push
or
mov
mov
mov
js
dec
mov
fbld
sbb
cmp
mov
xchg
lods
in
jmp
push
sub
aad
into
cld
pusha
in
les
testb
std
bound
cmc
jnp
xchg
rcl
mov
lods
push
sub
add
or
fldenv
jb
inc
icebp
mov
int3
mov
and
xlat
adc
scas
dec
add
mov
icebp
mov
aaa
mov
and
ja
addr16
inc
pushf
mov
mov
cltd
sub
xchg
inc
push
adc
ja
fcomps
cltd
sbb
loop
mov
aaa
das
sub
lret
jne
xchg
test
pop
mov
leave
adc
lods
fs
mov
es
jecxz
jnp
test
clc
inc
lock
push
inc
inc
cli
mov
jb
bound
nop
push
data16
test
pop
inc
and
push
jmp
int3
test
jle
mov
xor
jnp
xchg
mov
lods
daa
mov
fcompp
sbbb
mov
lcall
test
jge
test
lock
pop
xchg
scas
xchg
ficomps
and
mov
rcl
daa
pop
notl
je
outsl
hlt
mov
mov
and
rcrb
mov
push
inc
andb
mov
js
test
int
or
fwait
add
mov
ret
jp
aaa
aaa
cmp
out
fiadds
daa
out
and
jle
push
pusha
nop
jnp
lahf
cmp
xor
mov
call
xchg
mov
xor
test
addr16
pop
mov
cmpl
mov
clc
lods
addl
mov
xchg
scas
aas
sub
push
jno
xor
pop
test
jbe
fprem1
js
ffree
subl
adc
pop
jge
pop
das
es
ljmp
push
adc
test
sbb
mov
or
iret
sub
lock
xor
jp
fstpl
or
inc
adc
mov
add
mov
repz
negl
jno
out
jp
lods
loopne
and
push
add
and
adcb
xorb
popa
push
cmp
icebp
mov
push
adc
mov
js
pop
shll
shrb
cmpsl
mov
mov
xor
inc
sbb
xchg
mov
mov
jl
and
sbb
push
in
dec
stos
mov
mov
js,pt
icebp
ret
cmp
bound
popf
inc
jl
add
les
or
fwait
or
iret
push
jge
cwtl
sbb
push
pusha
jno
inc
fdivl
loopne
xor
push
sahf
push
lahf
xor
int
clc
lds
aaa
pop
jns
stos
outsl
push
cmp
or
inc
add
fucomp
jnp
mov
aam
mov
stos
xor
ret
or
adc
cmp
pop
dec
js
xor
mov
mov
es
test
insb
sub
dec
jmp
pop
adc
dec
loop
sub
lahf
mov
lods
aam
cltd
or
mov
out
fcmovu
push
int
popf
mov
xor
jbe
mov
fisubs
std
into
mov
std
and
pop
xor
in
loop
add
mov
aad
int3
mov
sub
jg
pop
pop
xor
xchg
orb
mov
out
add
loop
push
jae
aaa
sub
and
push
in
pop
xchg
fwait
and
fnsave
pop
aas
call
adc
in
lea
push
jge
jl
fwait
lods
frstor
or
jp
out
sub
inc
pop
jle
jno
loopne
mov
pop
mov
daa
int3
xchg
lcall
push
call
mov
mov
cltd
xchg
add
lock
mov
xchg
movl
pop
cmp
pop
mov
fmuls
shll
add
scas
int3
adc
mov
fdivl
pop
xchg
add
or
pop
rcll
mov
xor
push
iret
inc
call
sub
dec
mov
pop
movsb
mov
cmp
movsl
xchg
inc
popf
test
adc
sub
push
jge
in
fwait
in
in
clc
das
mov
xor
adc
adc
fninit
mov
mov
pop
jmp
push
jo
scas
sbb
or
cmc
mov
shll
stos
and
jecxz
mov
xchg
ds
daa
shrl
cmp
in
mov
mov
adcl
sbb
jbe
jb
imul
imul
repnz
je
or
pop
inc
sub
paddd
dec
xchg
inc
mov
out
cmc
fstl
adc
or
xor
mov
cli
add
addb
dec
or
or
pop
aaa
out
sbb
xchg
push
shr
push
and
mov
scas
leave
outsl
je
mov
test
ss
lods
inc
adc
pop
pop
cmc
pop
sub
inc
add
cmp
jnp
push
bound
push
sub
pop
pop
push
test
dec
mov
pshufw
mov
hlt
test
mov
fwait
mov
shrb
inc
in
push
add
pop
mov
cmp
outsb
cmp
pop
dec
mov
aaa
scas
arpl
flds
lcall
mov
pop
rorl
sub
sbb
push
dec
push
cmp
les
std
aaa
out
mov
dec
mov
paddd
movsl
dec
pop
jae
mov
ljmp
xlat
aad
mov
std
xlat
add
pusha
mov
aaa
and
daa
gs
mov
pop
pop
int3
xor
cmpsl
xchg
adc
pop
mov
mov
and
xchg
imul
or
movsl
pop
arpl
adc
sbbb
mov
sahf
inc
inc
cmpsb
mov
std
aas
pop
adc
out
jo
loopne
dec
mov
cmp
orb
shll
cmc
loope
jle
orb
xor
xchg
or
mov
mov
js
iret
add
addr16
dec
fdivs
mov
sbb
mov
ret
inc
and
jbe
sbb
flds
lods
jns
adc
lods
and
push
test
pop
xor
inc
lret
lods
cmpl
pop
fmuls
dec
mov
adcl
test
xor
xor
ftst
jecxz
pop
subl
mov
fcoml
push
ljmp
mov
movsl
jns
and
jl
insl
gs
jbe
or
adc
jb
ds
jbe
jp,pn
jmp
xchg
mov
adc
inc
mov
push
inc
mov
jl
or
pop
jae
sbbb
mov
lods
xor
daa
xor
fmuls
adc
cltd
adc
nop
adc
fidivrl
dec
daa
push
push
mov
je
fbld
ret
inc
fisubl
scas
out
or
sbb
neg
cmp
out
stos
push
shrl
adc
lret
in
mov
movb
shlb
lret
xor
cld
sub
xchg
xor
pop
push
push
shlb
mov
sub
adc
lock
aas
add
add
cwtl
shll
mov
xchg
enter
addl
xchg
ja
in
ja
adc
adcl
push
shll
xor
pop
daa
xor
cmpsl
adc
icebp
inc
mov
nop
aam
movsl
sub
inc
and
mov
in
lahf
or
repz
pusha
cmc
jmp
push
lahf
mov
ficompl
mov
xchg
out
mov
scas
popf
loopne
mov
xor
push
adc
mov
ljmp
aam
xchg
mov
mov
mov
mov
dec
or
cmp
leave
jg
sbb
les
pop
add
leave
and
sti
cmp
push
and
mov
enter
adcb
cmp
xchg
push
cltd
and
push
or
jecxz
insl
push
inc
push
cmp
ret
xor
adc
cmp
int
inc
daa
test
in
scas
dec
adc
push
and
jecxz
jle
adcb
inc
aaa
xchg
fmull
test
sbb
repz
jl
mov
mov
aam
sbb
orb
mov
insl
fcmove
push
mov
jecxz
or
test
push
xchg
cwtl
test
ds
mov
js
cmpsb
inc
jae
cld
cmpsl
and
inc
mov
jns
push
push
fdivl
push
jnp
sahf
mov
sbb
inc
mov
sbb
je
fdivs
or
es
repz
and
add
sbb
cmc
inc
pop
dec
jle
rolb
xchg
mov
mov
add
sbb
lahf
sarl
mov
into
shrb
pop
sub
jbe
mov
ss
push
cmp
jbe
rcrb
push
mov
cld
inc
cmp
sub
lock
jg
repnz
pop
fistps
xchg
pushf
xchg
sbb
sbb
push
sbb
mov
arpl
mov
pusha
mov
cmp
pop
addr16
sub
cmpsl
fbld
insl
jmp
pop
jns
cld
xlat
mov
xchg
js
in
outsl
lock
xor
sbb
cltd
and
pop
sub
mov
jmp
nop
mov
pop
jge
sub
shlb
fldt
ss
xor
sahf
andl
jmp
lret
mov
pushf
enter
dec
data16
movl
jp
adc
pop
jo
push
lea
fwait
adc
sbb
std
inc
ret
lods
fwait
adc
xor
xor
movsl
and
push
xor
pop
push
adc
add
fmul
cmp
mov
mov
or
scas
fidivrl
add
loop
shll
ljmp
mov
das
es
pop
repz
xchg
lahf
inc
out
fs
fistpl
fstpt
aas
orb
push
imul
adc
arpl
and
mov
outsl
outsb
out
leave
mov
movsb
ret
outsb
outsb
scas
push
test
dec
push
pop
outsb
mov
pop
in
push
scas
ss
jb
mul
lock
cs
popf
fwait
outsb
stos
mov
gs
ss
xchg
call
movaps
icebp
pop
loopne
lock
out
popf
jle
pop
push
xchg
xchg
adc
xor
or
jge
cmpsl
inc
fs
sahf
cmpsl
jne
mov
jno
inc
pusha
outsb
and
shrb
jnp
and
mov
push
push
or
inc
ret
stos
push
into
cwtl
jg
dec
sbb
and
dec
mov
or
or
ds
ljmp
les
dec
sbb
out
xchg
mov
insl
and
test
xorl
and
xor
clc
icebp
das
xchg
xchg
iret
lods
scas
dec
mov
ret
xchg
jns
imul
push
ds
pop
cmpsb
lock
dec
pop
cwtl
mov
sub
rep
sbb
out
adc
sbb
mov
andb
fincstp
or
push
mov
and
pop
cs
pop
cmp
clc
add
outsl
jle
xchg
sbbb
push
mov
adc
outsb
and
enter
ficompl
lock
fsubrs
mov
adc
and
nop
mov
adc
mov
dec
mov
cmp
xchg
inc
shl
jge
sahf
jl
sti
mov
les
mov
cs
dec
stos
xorb
push
stos
dec
bound
mulb
adc
mov
lahf
dec
sub
stos
int3
fistpl
in
rolb
jbe
scas
inc
cmpsl
lods
lret
out
xchg
popf
and
add
mov
push
pop
xchg
in
outsl
or
xor
call
and
push
scas
int
mov
or
pop
and
jl
mov
xor
xchg
mov
jecxz
addr16
sbb
push
icebp
fistpll
and
jge
xlat
int3
mov
mov
ret
mov
and
pusha
mov
push
cmp
and
ja
stos
in
mov
sub
lret
daa
adc
icebp
movsl
push
ss
std
dec
xorl
xchg
repnz
push
insl
sub
out
and
scas
xchg
addr16
dec
fsubrs
pusha
gs
loop
stos
xor
inc
into
pop
imul
mov
pop
push
and
mov
jecxz
pop
icebp
xchg
mov
cltd
mov
js
loope
jb
xchg
sub
jb
inc
push
and
and
into
adc
mov
and
jmp
int
xor
push
pop
scas
shlb
xor
cmpsb
cmp
adc
pop
push
xor
dec
mov
fwait
inc
mov
in
lret
pop
push
test
mov
mov
jae
fidivrs
jecxz
in
xchg
mov
xchg
push
aas
sahf
cwtl
sbb
in
sbb
hlt
fstl
mov
lods
pop
pushf
and
aaa
dec
cs
push
inc
rcr
xchg
outsb
mov
add
popf
xor
stos
adc
inc
insl
and
inc
roll
xor
mov
ja
pop
push
xlat
in
cmp
repz
jno
adcb
das
fisubs
add
loope
xchg
mov
mov
mov
and
cmp
ds
sar
mov
imul
push
js
xchg
repz
mov
cmp
dec
mov
sbb
push
sbb
mov
jne
sbb
je
inc
adc
out
fxtract
add
imul
in
in
inc
cmpl
sbb
arpl
add
pushf
dec
jl
push
and
pop
loope
cmp
mov
dec
add
or
jnp
imul
cwtl
ret
jb
mov
ja
enter
mov
adc
xlat
js
stc
mov
dec
ret
push
push
cmc
mov
rclb
mov
xor
lock
lret
mov
jle
insb
rclb
jae
pop
pop
sarb
in
pop
subb
mov
inc
push
repz
loopne
arpl
cmpb
push
add
sti
cmc
mov
repz
sbb
cmpsl
in
jmp
rorb
pop
daa
repz
sarb
mov
cs
js
enter
mov
rolb
pop
push
sub
cs
add
out
xlat
push
sti
loope
imul
mov
pop
jo
push
sbb
psrad
mov
sbb
mov
cmp
js
dec
dec
mov
cmc
xchg
aas
es
pop
subl
push
movsb
ss
jnp
inc
adc
pusha
sub
mov
xlat
xchg
pop
add
cli
sub
cld
enter
mov
ja
xlat
insl
out
ljmp
inc
adc
jecxz
popw
arpl
out
cmp
mov
jno
insl
loope
je
in
and
arpl
je
xchg
fwait
jbe
pop
pushf
fwait
daa
cmp
cmc
mov
scas
shlb
push
inc
repz
push
leave
daa
mov
lahf
mov
pop
add
dec
enter
pop
xor
inc
gs
rclb
xchg
test
mov
or
fs
aad
jg
or
jno
movsl
push
mov
cmp
cltd
imul
js
cmc
aas
arpl
xor
ds
hlt
pop
aaa
xchg
jns
icebp
fiadds
sub
stc
imul
sub
add
in
lea
imul
fwait
mov
je
inc
lods
xchg
inc
sub
and
mov
arpl
loopne
pop
pop
xlat
ljmp
insb
mov
lret
bound
rcrl
adc
xchg
sti
iret
cmpsl
stos
sbb
loop
pop
in
mov
jmp
cmp
cmp
arpl
pop
daa
xor
push
sbbb
cmc
test
push
jecxz
xor
test
add
or
jl
mov
icebp
cmp
dec
jo
xchg
fidivrl
shrb
jl
xchg
adc
mov
repnz
mov
adc
popf
test
lahf
adc
nop
arpl
hlt
into
mov
sub
in
xchg
cmpsb
mov
daa
cld
adc
incl
ret
xor
cmp
inc
mov
xor
mov
sbb
or
add
test
push
enter
push
push
mov
shlb
dec
ljmp
and
pop
mov
and
mov
iret
popf
jp
jbe
push
les
pushw
xor
jnp
mov
sub
push
aaa
mov
push
outsb
sub
cmc
pusha
sbb
fdivr
xor
lods
inc
out
add
push
test
fsubrs
mov
sbb
inc
mov
imull
fimull
inc
and
add
sbb
cmc
push
in
sarb
sbb
cmp
mov
nop
out
adc
mov
jle
xlat
pop
jnp
lock
cmp
mov
xor
call
adc
stos
rorb
mov
dec
bound
and
jl
loopne
imul
loope
insb
xor
sbb
test
jbe
and
ljmp
leave
sbb
stos
sub
cmpsl
fcoml
add
xor
repz
call
loop
and
nop
jp
and
stos
jle
mov
outsl
fiadds
sbb
cmp
in
dec
cmp
mov
cmpsl
inc
push
outsl
fwait
pop
stos
mov
inc
es
loopne
xor
in
pop
lcall
stos
les
xor
cwtl
out
mov
outsb
scas
stos
jp
dec
sub
pop
ret
lea
dec
shrl
sbb
jl
jp
dec
and
outsl
popf
or
sbb
or
sub
mov
or
popf
daa
push
loope
fadds
notl
xor
aas
pop
idivb
sub
jle
add
outsl
outsl
inc
and
inc
and
repz
mov
pop
mov
movsl
in
aad
push
jecxz
xchg
xor
pop
ja
cli
cmc
or
or
jbe
js
das
push
out
adc
push
jmp
mov
and
or
xor
add
loopne
push
adc
std
test
inc
into
idiv
fadds
pop
mov
cltd
xchg
js,pn
push
push
popa
jecxz
pop
cmc
paddusb
outsb
sub
das
mov
js
popf
fs
jl
inc
jge
xor
sbb
in
fdivl
dec
cmpl
popf
jnp
inc
out
inc
pop
test
adc
cld
and
sahf
push
aam
cltd
cwtl
jg
xlat
pop
cmp
inc
aad
push
push
fnstsw
add
pusha
addr16
popa
push
push
aad
push
dec
and
adc
sbb
popa
loop
mov
insb
mov
mov
jl
mov
stos
orb
jnp
gs
dec
stc
mov
aas
outsl
shll
cmpsl
cld
ret
flds
sarl
inc
stc
and
idivl
xchg
adc
pop
pop
in
xor
in
and
mov
or
sub
out
cmp
ds
fisubrl
cli
outsb
mov
hlt
cmpb
repnz
cmpsb
popf
lahf
aas
pop
jl
xor
add
fsts
xchg
stos
mov
xchg
es
mov
test
test
push
xor
clc
and
aas
add
fiadds
imul
sub
mov
mov
bound
jl
popf
arpl
mov
movsl
inc
mov
fwait
xchg
add
inc
jmp
jne
out
dec
push
ss
add
fsubs
mov
jle
push
jns
xchg
push
sub
orb
jecxz
sbb
cmp
xchg
push
and
mov
lret
pop
mov
sti
pop
jp
ret
mov
cmpsb
pop
jecxz
fcomi
fdivrs
xlat
jle
jbe
cwtl
sti
push
cmc
js
push
jae
lods
xchg
lock
mov
inc
dec
dec
mov
lea
adc
arpl
mov
dec
ljmp
incb
jg
addb
out
xchg
js
xor
adc
sub
inc
pusha
popf
test
cmp
movsl
les
jo
cld
xchg
pop
ds
call
rorl
ds
jae
sub
rol
sub
add
jecxz
xchg
mov
testl
aad
pop
loopne
fstl
xorl
nop
imul
push
das
or
cmp
xor
dec
aas
test
lcall
jae
fnsave
mov
call
pop
data16
cmpsb
push
testb
jl
fwait
add
ss
inc
rcl
sbb
pop
sub
xlat
mov
cld
outsb
js,pt
ss
sub
push
sbb
push
push
and
lds
pop
cmp
popa
and
stos
push
outsb
mov
mov
leave
mov
xor
jg
arpl
add
test
push
sbb
icebp
push
iret
jno
push
xchg
jle
sub
mov
stos
test
xor
divb
repnz
sub
das
and
mov
stos
xlat
dec
ret
sub
adc
ds
cmp
mov
push
mov
pop
xchg
test
pop
inc
pop
bound
scas
xor
and
inc
orl
mov
jns
and
in
xchg
aad
adcb
sbb
mov
bnd
push
test
int
pop
test
sti
ficoms
jecxz
push
ret
rclb
mov
mov
mov
xor
daa
jge
or
jle
adc
add
mov
sbb
outsb
ljmp
lods
sbb
dec
mov
or
cmpsb
lods
bound
inc
mov
xor
pop
rol
mov
mov
sub
jmp
sbb
or
repz
cmp
sbb
jo
push
cmpsl
xor
popa
xchg
cwtl
and
ds
loopne
xchg
or
xorb
or
push
les
pop
jmp
cmpsl
iret
outsl
jno
rol
sbb
jae
adc
hlt
cmpl
sub
cltd
sbb
adc
pop
arpl
call
pop
xchg
mov
pop
push
or
fadd
adc
test
xor
mov
mov
std
jne
and
les
scas
popf
mov
mov
andb
jmp
cmpsb
scas
jnp
in
daa
mov
xor
jbe
xchg
mov
lods
loopne
jl
jb,pt
and
and
imul
out
aam
push
xor
imul
hlt
cmp
sub
aad
adc
fstpt
cmp
mov
jge
mov
fwait
push
js
cli
sub
inc
aaa
xchg
dec
push
xlat
out
mov
inc
and
fs
pusha
mov
mov
mov
cmp
movsl
stos
lea
loopne
lock
xchg
aas
xor
mov
push
test
pop
push
setge
or
into
pop
lahf
aaa
mov
je
lahf
cmp
jae
adc
jle
add
xchg
mov
add
push
xor
xchg
sbb
mov
mov
test
jg
cmp
push
in
mov
test
loop
sarl
add
dec
pop
sahf
nop
loope
xchg
cmpsl
mov
mov
sbb
scas
xchg
nop
add
jns
or
shr
mov
cltd
daa
addr16
popa
pop
mov
popl
add
daa
mov
or
adc
cld
hlt
jmp
addr16
ds
fidivs
callw
mov
repnz
fcompl
push
lods
hlt
adc
ret
inc
insl
pop
out
fcompl
inc
inc
je
aas
je
cmc
popa
push
and
pushf
jne
cs
bound
and
push
es
outsl
sub
pop
jmp
ljmp
adc
add
test
out
leave
pop
std
pop
jns
arpl
add
aas
cmp
in
test
imul
mov
cli
add
mov
add
test
sub
push
push
cmp
and
push
scas
adc
fistpl
out
and
fsubrs
fwait
push
dec
imul
xor
mov
scas
mov
or
dec
push
push
popa
sbb
xor
push
inc
cmp
fcmovb
les
inc
push
cmp
loope
inc
xorl
mov
push
push
push
push
mov
sbb
and
scas
and
mov
pause
push
inc
jecxz
das
or
sbb
arpl
adc
sbb
mov
out
dec
sahf
popf
js
imul
in
mov
icebp
mov
dec
mov
add
cmp
in
push
jno
shll
pop
ljmp
int3
adc
cmp
xor
xchg
fsubr
repnz
test
sbb
jb,pt
add
insb
test
xor
pop
push
repnz
dec
psraw
sub
repz
adc
jecxz
push
xchg
aaa
mov
cmp
mov
aas
cwtl
ljmp
adc
shlb
jg
cmp
push
push
add
jb
call
shr
jecxz
mov
jge
sub
gs
mov
adc
sti
sbb
jecxz
out
gs
ss
jl
xchg
cltd
mov
pop
mov
clc
mov
leave
or
lahf
aam
push
jecxz
xchg
pop
push
adc
sbb
sub
pushf
loope
jae
loope
mov
sti
push
dec
lods
sahf
dec
cmp
or
inc
loop
mov
pop
push
loopne
loop
daa
scas
push
add
jge
adc
in
subl
dec
xorb
pop
mov
mov
xchg
push
fistpl
popf
stc
or
rcrl
inc
clc
add
jmp
mov
arpl
in
test
inc
je
out
sbb
incb
jb
jge
lock
ja
pop
jle
lods
push
adc
stos
shlb
ja
pop
repnz
adc
pusha
rcrb
push
mov
mov
das
arpl
repnz
outsl
push
sarl
das
add
or
adc
xlat
jp
inc
fldenv
out
cmp
and
mov
xor
mov
cmpsl
xor
dec
cwtl
in
inc
mov
dec
cli
cwtl
outsb
imul
imul
cmpsl
pop
xor
and
add
push
sbb
adc
mov
jno
sub
cs
enter
push
push
cmp
dec
js
or
out
mov
mov
jns
fistl
cmp
sub
sub
sarb
mov
ja
jb
faddl
nop
stos
sbb
push
mov
gs
adc
xor
les
in
out
jmp
aas
mov
mov
jp
sub
push
mov
pop
dec
pop
push
mov
and
push
xchg
mov
push
gs
cmp
or
out
jo
and
cmpsl
loopne
bound
dec
cmp
mov
data16
jns
add
dec
fnstsw
stos
push
xchg
or
jbe
out
cli
dec
adc
xchg
dec
lods
xchg
xchg
stos
dec
ret
les
xchg
int3
and
aad
std
sub
dec
scas
fiadds
out
adc
jo
aaa
xchg
fcomip
iret
sub
cli
stos
mov
mov
push
jbe
ret
test
test
notb
or
call
movsb
add
pop
pushf
repnz
push
movsb
mov
arpl
sbbl
loopne
inc
mov
jge
into
push
xchg
jle
rorl
jo
sub
adc
sub
int
sbb
push
sub
sub
ret
repz
fldcw
and
movsl
outsb
jg
fmulp
bound
mov
xor
mov
jmp
pop
xchg
xor
jge
jl
xor
faddp
xchg
add
cli
fst
or
mov
fsubrs
pop
mov
mov
ret
pop
push
clc
pop
fisttpll
pop
mov
mov
lock
mov
add
dec
and
scas
popf
and
lret
insl
daa
xchg
movsl
inc
arpl
outsb
ds
fdivrs
dec
adc
stos
sbb
aas
sub
int
sahf
jmp
out
lahf
push
sbb
ret
bound
jge
pushf
unpcklps
dec
sub
jae
or
insl
pop
lahf
not
fsubrs
cmp
sbb
xchg
jle
lahf
dec
sahf
add
movsl
and
fidivrl
cmp
cmp
jmp
aam
repz
or
arpl
mov
or
fisubrl
pop
ss
bound
mov
leave
mov
sbb
iret
jae
arpl
movsl
push
xor
jbe
mov
iret
xchg
cld
pop
lahf
xchg
stos
cmp
and
sahf
xor
ret
ret
jle
sbb
mov
fwait
jg
addr16
aaa
rcll
cli
ret
ds
stc
popf
inc
mov
pop
push
jae
scas
add
fldenv
and
inc
dec
sub
pop
call
or
push
and
jb
mov
mov
mov
es
cmpsl
cli
addl
testl
sub
cmc
pusha
imul
imul
repz
cmpsb
sub
dec
jl
add
gs
add
scas
es
mov
push
ljmp
aas
adcb
ljmp
ret
dec
xlat
jnp
arpl
pop
xchg
jb
lret
push
mov
loope
pop
loop
inc
inc
push
lret
cmp
jg
mov
sbb
inc
mov
lcall
add
rolb
mov
sbb
mov
or
jb
rcrl
and
cmp
pop
push
scas
mov
out
inc
in
or
jbe
jl
sar
push
pop
ror
jle
dec
repz
les
fld
inc
scas
xor
cld
daa
adc
out
data16
cwtl
sbb
pushf
test
nop
cmc
jle
ljmp
lods
loopne
inc
in
dec
pop
xor
xlat
loope
xorb
push
pop
xchg
sbb
cmp
jo
pop
loope
fcomps
sub
add
adc
cmpb
or
pop
sub
stos
call
shrb
int
mov
ss
loopne
cld
push
out
in
and
cltd
out
xor
add
mov
mov
sub
dec
inc
inc
scas
sub
inc
das
mov
jmp
inc
mov
push
rol
adc
ss
jp
rorb
push
test
mov
pop
imul
sub
pop
popf
push
and
outsl
adcb
imul
lods
mov
push
xchg
repnz
dec
fcmovnbe
lahf
pop
xchg
and
adc
inc
jmp
jecxz
and
jp
jmp
dec
popf
sbb
push
jg
jmp
fisubrs
xchg
pusha
pop
lret
daa
push
jg
sub
fwait
adc
shrl
cmp
jg
push
sbb
data16
cmpsb
repz
jl
and
mov
fiaddl
mov
data16
inc
fucom
cmp
repz
addr16
les
loopne
in
lea
loop
fcomp
push
dec
xchg
sub
sub
rolb
or
mov
pop
std
jnp
popf
and
js
bound
sbbl
into
test
mov
push
filds
sahf
pop
pop
inc
aad
sub
push
cmc
jbe
adc
imul
pop
shlb
out
xor
jno
cmp
orl
push
repnz
imull
movsb
pop
out
jmp
mov
insb
mov
cltd
or
push
xchg
push
call
mov
dec
fbld
mov
inc
ja
loope
mov
shlb
fs
insl
mov
add
and
push
push
je
pop
cltd
shl
loopne
gs
and
push
mov
sbb
fidivrl
add
lret
ljmp
cmc
sub
pop
mov
push
jno
inc
push
pop
test
ss
push
ret
shrb
scas
mov
lds
scas
mov
icebp
xor
mov
push
jmp
pop
les
dec
jo
cmpsl
sbb
out
mov
push
mov
daa
loop
xor
incb
add
inc
call
mov
lahf
ret
cmp
out
push
test
pop
mov
adc
in
loopne
inc
dec
stos
and
dec
pop
sbb
push
pop
out
sbb
and
fsubs
push
mov
xor
sbb
cmp
push
scas
nop
outsb
mov
cmp
daa
lock
push
imulb
push
popf
push
imul
or
and
mov
test
popa
and
popa
lds
cwtl
mov
mov
inc
push
out
or
cmp
test
fnstsw
cwtl
mov
jmp
xor
cmpl
xor
enter
sar
mov
ficomps
rcrl
dec
outsl
faddl
lods
mov
inc
inc
inc
cmpsb
mov
pop
addr16
ljmp
and
xchg
sbb
out
aas
lods
jg
fsts
cli
ret
mov
cmp
popa
lcall
icebp
sub
xor
sahf
mov
mov
xor
mov
xchg
test
xchg
pop
daa
push
dec
popa
inc
scas
and
xchg
mov
adc
xchg
movsb
adc
push
xchg
xchg
pop
mov
pushl
imul
cmp
cmp
bound
xchg
cmp
mov
inc
scas
mov
stos
aad
pop
cmc
adc
add
popf
test
and
cmp
leave
jle
or
inc
frstor
scas
ss
pop
xchg
sub
xchg
es
adc
fidivs
ja
sahf
mov
xchg
repnz
cmpsl
mov
ss
and
push
aas
movsl
jge
sub
sbb
leave
push
push
aam
xor
or
loopne
pop
mov
sub
push
mov
sbb
xor
pop
mov
sahf
adc
fwait
dec
xchg
lahf
lahf
xor
sbb
jmp
leave
outsl
mul
push
test
fs
es
movsb
adc
mov
jbe
sub
aaa
adc
lret
xchg
mov
mov
sub
jle
sbb
push
jbe
xchg
xor
test
push
pop
fwait
push
sbb
xor
cmpb
addb
shll
cmpsl
std
jbe
mov
stos
pusha
int3
mov
pop
cmc
and
imul
mov
xor
pop
inc
mov
sbb
scas
xlat
inc
xlat
mov
inc
mov
xchg
sahf
pop
lea
out
push
dec
int
jnp
ja
scas
and
arpl
cmp
jne
push
mov
adc
push
and
sahf
pop
fistpl
xchg
pop
mov
cmp
cmp
dec
adc
incl
jo
push
popa
scas
pushf
loop
dec
jecxz
cmp
mov
xchg
addr16
xchg
sbb
sbb
hlt
fiadds
xchg
arpl
out
push
jne
mov
mov
jmp
sbb
popa
pushf
lret
pop
or
inc
lcall
pop
push
push
insl
int3
dec
jp
inc
sbb
andl
push
ss
into
imul
adc
testl
push
mov
in
push
cmpsb
mov
data16
call
add
xor
subb
push
test
std
dec
cwtl
sub
clc
inc
or
hlt
xchg
or
mov
shll
jmp
jne
in
test
data16
mov
jge
xchg
xor
bound
fstps
fs
push
fldl
pop
fisttps
sub
lcall
jns
xchg
dec
into
mov
push
mov
rcll
int
push
adc
test
pop
cmp
add
xor
cmp
das
cmp
inc
inc
push
and
adc
sub
pop
scas
nop
pop
push
xchg
mov
xlat
push
jbe
dec
outsb
iret
mov
out
push
xchg
push
fs
lcall
mov
xor
mov
fwait
sbb
test
mov
or
inc
cmpsl
cltd
lock
lmsw
aas
rcrb
lock
pop
outsl
pop
add
mov
adc
inc
insb
xor
cld
cmc
mov
aas
add
mov
sub
loop
jno
and
sahf
sbb
ret
stc
inc
rcll
mov
xchg
xorl
lods
xchg
je
jl
unpcklps
fsubrs
pop
lods
lret
insl
dec
jp
inc
push
add
lcall
add
sub
and
dec
jmp
sub
pop
jne
mov
jl
sti
mov
or
sbb
xchg
xchg
loopne
in
jb
mov
push
pop
xor
insl
imul
lret
dec
adc
mov
daa
or
and
sub
mov
adc
adc
and
pop
sub
cmp
xchg
les
das
inc
xchg
dec
mov
cmp
out
stos
fisttps
adc
ds
mov
sub
mov
fimull
movsb
mov
cmp
pop
and
sbbl
fisubl
sysenter
fiadds
jge
repz
idivb
mov
imull
adcl
sub
mov
ret
cwtl
push
and
pop
pop
bound
jae
insl
movsb
pusha
push
and
push
xchg
icebp
out
mov
mov
push
mov
push
mov
jecxz
adc
fcmove
fucomp
inc
mov
add
loop
xor
clc
fs
fdivrs
xor
dec
dec
dec
add
xlat
or
xorl
mov
adc
andl
add
dec
lret
jp
in
xchg
negl
pop
outsb
or
lcall
add
les
mov
xchg
xchg
cmc
lds
roll
sbb
jecxz
jmp
jp
pop
gs
jge
scas
cmp
inc
mov
or
dec
cmp
fnstsw
std
mov
test
push
ja
lea
stc
xlat
pop
icebp
cs
mov
xor
popf
fs
jg
add
mov
sub
push
jecxz
testl
sbb
push
mov
inc
push
pop
je
test
scas
aaa
pop
out
subb
and
aad
and
add
sub
incb
add
push
in
jp
cmpsl
ds
dec
jmp
loop
and
and
movl
test
imul
fwait
in
push
in
cld
xchg
xor
stos
mov
xchg
aaa
adc
cmp
lretw
dec
inc
and
xor
sub
push
test
dec
insb
call
movsb
sti
xrelease
fdivp
fildll
clc
pop
xor
or
push
sub
ljmp
xchg
xchg
adc
mov
or
mov
out
scas
mov
test
pushl
sub
mov
arpl
in
mov
scas
lods
repz
outsb
pop
mov
in
or
push
fs
add
sahf
mov
push
test
jmp
xchg
addl
xor
jns
cwtl
xor
sbb
das
xchg
xor
mov
or
sti
pop
bound
xchg
pop
cmp
loop
xlat
add
imul
cmp
mov
gs
mov
outsl
fstpl
movsb
xor
push
add
push
daa
js
push
int
adc
mov
xlat
pop
lret
pop
fstps
bound
cmpl
sbb
call
cmp
mov
and
mov
xlat
mov
jge
aas
pop
xor
daa
hlt
pop
mov
push
shlb
dec
jnp
dec
add
fildl
sub
loop
mov
jmp
cmc
pop
lea
hlt
sahf
enter
das
in
lds
repnz
xor
jno
sbb
mov
shll
sbb
lret
and
and
loop
sbb
and
inc
inc
add
repnz
xchg
xor
cmpl
dec
stos
aad
mov
scas
sbb
es
and
jp
xchg
daa
lock
dec
filds
aas
jnp
dec
sbb
incl
xchg
and
popf
dec
mov
dec
inc
stc
dec
and
and
sbb
mov
fdivrl
sbb
adc
sti
in
stos
test
pusha
pop
dec
inc
lods
pop
lock
or
pop
jle
call
aas
subl
push
ds
rcrb
cmp
push
and
add
rclb
test
das
jae
mov
dec
pop
push
adc
dec
xor
ja
push
mov
popf
addr16
leave
and
push
mov
adc
ss
fidivl
inc
add
mov
and
popf
sbb
mov
push
bnd
outsb
dec
pop
add
mov
and
and
xchg
adc
divl
sub
sarl
xchg
mov
mov
dec
and
outsb
call
pusha
jecxz
into
je
dec
loope
icebp
xor
test
xchg
and
lods
mov
filds
adc
sub
shll
inc
push
mov
ret
mov
push
rcll
inc
cli
insl
iret
xchg
pop
adc
cmpl
je
inc
lahf
rol
aaa
repnz
jl
mov
lret
out
xchg
addr16
imul
popf
out
shrl
sbb
mov
xor
jbe
gs
pop
mov
adc
pop
sub
mov
ret
lcall
or
test
or
stos
inc
test
dec
xlat
leave
inc
sbb
pushf
enter
fidivrl
push
daa
sbb
data16
cmp
inc
sbb
test
pop
sbb
andb
hlt
mov
xchg
nop
addb
out
jge
bound
lcall
ret
arpl
mov
mov
shll
push
xor
xorb
pop
lods
fs
fnstenv
movsl
gs
jns
jno
imul
fbld
dec
cmp
cmp
in
adc
jge
xor
testb
or
out
addr16
fsincos
sub
mov
cmp
push
inc
mov
sub
xlat
sbb
adc
inc
cwtl
or
and
insl
call
cmc
ret
sub
inc
pop
push
addl
mov
aas
push
mov
imulb
push
mov
ficoms
jo
pop
inc
bnd
lea
xchg
addr16
mov
and
mov
xor
fwait
jbe,pn
mov
or
idivb
enter
loop
cmc
jne
movb
popa
push
enter
lods
sar
fstpt
xor
cmc
mov
call
mov
inc
mov
cld
mov
add
dec
ja
fisttpl
cmpsl
fnstsw
mov
fidivrs
into
cmc
pop
dec
jnp
mov
push
dec
xor
stc
lret
cmpsl
ja
and
sahf
dec
xchg
xor
pushl
dec
shr
out
mov
cmpsb
adc
inc
mov
add
or
jmp
xchg
xchg
dec
cs
loop
lds
jnp
mov
jecxz
pop
cltd
cmpl
lods
iret
push
dec
mov
cmp
aaa
loop
cli
cld
rorb
jecxz
jp
inc
add
adcl
sbb
bound
push
pop
pop
out
cs
stc
cltd
icebp
inc
xor
and
cmpsl
mov
aaa
xor
fimuls
insl
mov
mov
inc
bound
outsl
cmovge
cmp
mov
adc
adc
scas
fstp
imul
addr16
xchg
xlat
mov
lods
jns
int3
scas
xchg
push
jnp
iret
fisubl
pop
push
repz
or
cmpsb
fstpl
bndldx
into
fwait
cmp
xor
adc
mov
aad
pop
iret
push
xor
jnp
cmp
push
in
test
cmp
sub
mov
jle
pop
cmp
addl
mov
and
mov
push
lcall
cmpb
push
sti
pop
mov
pop
aaa
push
pop
aaa
pop
scas
dec
sbb
pop
inc
mov
dec
mov
inc
push
testl
sbb
addr16
test
push
aad
mov
jno
and
cli
xchg
dec
xor
push
adc
out
pop
inc
stc
xor
sarl
or
dec
sbb
out
sbb
loop
iret
sub
aad
cmc
cltd
cmpsb
and
lock
mov
add
push
and
pop
pop
popa
mov
cmpsb
insl
add
push
std
mov
lods
mov
je
scas
or
pop
add
inc
push
inc
jb
repnz
xchg
add
fwait
or
cld
jnp
sub
in
and
test
jo
jl
mov
sub
mov
pop
mov
jl
out
popl
dec
pusha
jae
test
cltd
test
mov
jne
inc
cmpb
sub
dec
test
jle
data16
sbb
push
pop
sbb
movb
ds
pop
xor
loopne
sbb
adcl
test
cmpl
mov
push
mov
mov
arpl
gs
stc
je
pop
inc
int
inc
mov
ds
adc
out
mov
xchg
pop
mov
pop
shlb
lock
ret
mov
inc
inc
dec
sbb
lahf
cli
iret
cltd
out
or
mov
in
inc
cltd
sahf
stos
daa
adc
mov
mov
xchg
push
mov
inc
push
outsl
fs
adc
cmp
call
push
mov
sbbb
lcall
xchg
pop
cltd
hlt
movsb
mov
cmp
jns
xor
rol
inc
popa
sub
fsubrs
xor
fs
xor
js
and
ret
daa
adc
ja
or
dec
jle
mov
int
loopne
gs
lock
lret
xchg
mov
mov
sub
mov
adc
inc
data16
in
dec
pop
imull
sbb
addb
popl
pop
push
mov
sub
out
leave
mov
inc
jns
mov
repz
xchg
push
in
sbb
push
and
and
in
pop
adc
daa
pop
jp
es
mov
xor
dec
inc
ss
push
les
xor
frstor
xchg
mov
jae
mull
outsb
test
sub
jb
fidivrl
into
das
mov
inc
repnz
push
insb
sarl
shlb
jne
subb
inc
repnz
xlat
dec
inc
hlt
ljmp
jl
int
and
loop
lret
fsubrs
incb
movb
and
xor
sub
jbe
clc
dec
adc
inc
gs
test
test
insl
ss
xchg
add
xor
sbbb
sarl
push
ss
jb
sbbl
jg
mov
adc
sbb
adc
and
jbe
bound
fwait
cwtl
or
scas
push
ja
pop
rorb
in
lds
pop
outsb
or
adc
xor
jg
cltd
adc
mov
jmp
and
sub
jge
stos
dec
cmp
mov
mov
jb
mov
mov
push
dec
test
jbe
lock
scas
js
add
cmp
into
adc
mov
ds
mov
or
test
cltd
int3
cwtl
pop
fadd
xchg
lret
enter
iret
int3
xor
push
scas
dec
xor
outsl
scas
movsb
out
pop
dec
imul
jecxz
pusha
pop
fisubrl
fildll
push
pop
pop
inc
sahf
sahf
xchg
loop
sbb
xor
or
test
ret
mov
adc
daa
les
push
test
dec
push
xor
js
popf
stos
int
xchg
imul
dec
rcrb
push
sbb
xor
cmp
mov
adc
cmpsl
aaa
mov
icebp
rolb
psubusw
aad
inc
inc
cmpsb
out
test
cmp
cmp
mov
sub
push
test
pop
outsb
jge
jl
andb
dec
xchg
adc
aam
lret
push
mov
fwait
imul
push
cmp
sub
mov
scas
pop
ja
push
cmc
ljmp
fcomps
jae
xor
pusha
jae
xchg
xchg
mov
out
xchg
popa
insl
loope
push
push
fdivrs
outsb
fldt
mov
mov
arpl
push
stos
popf
cwtl
jle
cmp
pushaw
xor
xor
sahf
jge
fiaddl
add
lods
in
push
lahf
sub
add
int3
addr16
jb
sub
fisttpll
mov
aas
dec
xor
push
inc
mov
inc
cmp
jne
das
and
repz
add
pop
dec
jo
xchg
xorl
jle
loop
cltd
scas
dec
jb
xor
push
xor
cmp
mov
sahf
xchg
push
in
inc
xor
bound
hlt
fstl
jb
stos
jne
cmp
pop
lds
ljmp
and
outsb
scas
imul
push
je
sbb
les
sub
fcoms
and
call
pop
and
bound
push
dec
inc
xchg
push
adc
cmp
js
cmp
popa
mov
test
sbb
jle
cmpsb
add
mov
mov
add
lea
fwait
ds
dec
ficompl
popf
mov
clc
es
arpl
aam
xlat
aas
repnz
cmp
sbb
push
test
inc
sarb
adc
mov
xchg
addb
shr
xor
jle
dec
xchg
std
lods
das
int3
lcall
pop
xchg
dec
mov
xor
xchg
scas
sub
dec
mov
hlt
push
dec
nop
ljmp
inc
out
and
scas
aam
push
push
pop
test
addr16
cmp
push
cmp
popa
ret
pop
cmpsl
aas
sub
inc
mov
and
xchg
push
sub
ljmp
xchg
les
and
inc
mov
es
push
cmp
or
rcrl
in
xor
pop
cli
ret
mov
sbb
xlat
jg
push
mov
cmpsb
jle
aaa
fptan
pop
sub
stos
sbb
pop
shll
cmp
loopne
xor
cmp
sbb
popa
mov
xor
mov
inc
cmpsl
xchg
popa
push
fisubrs
jecxz
and
cmp
sbb
mov
loopne
lahf
mov
lahf
mov
movsl
mov
push
pop
test
rep
popf
bound
hlt
sub
xor
insb
addr16
mov
aaa
dec
adc
and
pop
fldt
mov
in
insb
xchg
fwait
shlb
jb
inc
aas
sahf
mov
cs
adc
out
or
inc
mov
xor
aam
mov
cmp
in
cmpsb
dec
sbb
xor
jns
sbb
mov
cli
leave
dec
mov
lcall
xor
xor
scas
rcrl
cmp
mov
sub
and
inc
loop
pop
push
sbb
sbb
lods
notb
movsl
add
pop
push
xchg
or
or
and
sub
or
mov
sbb
cmp
jg
mov
daa
dec
rolb
dec
in
aaa
sub
cmpsl
movsb
test
sub
cmp
fwait
rcl
insb
pusha
ljmp
jb
mov
vmovaps
cmp
int
xchg
aad
mov
ret
dec
fwait
cli
jge
imul
shll
xchg
cmpsb
cmp
mov
push
push
xor
test
and
pop
lock
daa
and
cs
jmp
stos
cs
in
fildll
int
push
aaa
aam
dec
loopne
cmovnp
push
dec
dec
hlt
jp
cwtl
xor
jo
cmp
imul
bound
push
test
rol
sbbl
bound
testb
rcrl
out
lods
inc
dec
or
pop
fwait
push
push
stc
jmp
mov
xchg
mov
pop
sbb
pop
iret
bound
adc
mov
lret
cmpsl
and
mov
loopne
xor
xor
mov
dec
lds
jae
mov
and
cltd
cmp
or
inc
cmp
sub
adc
daa
add
fstp
pop
lods
push
sub
dec
add
fsubp
inc
imul
add
mov
lods
shrl
ror
loop
lods
mov
dec
iret
notb
mov
subb
xlat
xor
pop
jp
out
rorl
dec
pop
sub
pushf
dec
inc
cwtl
popa
lret
lahf
cmp
popa
daa
lods
inc
sbb
dec
cmp
push
cmp
loopne
pop
sahf
sbb
sti
adc
sbb
push
sub
mov
fwait
push
or
ficoms
or
arpl
gs
sub
ljmp
xlat
sbb
shrb
inc
jns
leave
in
fisubl
insb
stc
xor
jo
test
jns,pt
xchg
aad
shll
lret
mov
sbb
jnp
mov
xorb
mov
nop
les
pop
push
mov
jbe
mov
outsl
add
jne
pop
add
ljmp
jmp
test
jp
jns
mov
pop
out
mov
scas
mov
fsub
xlat
and
push
cmpl
push
into
mov
xchg
push
ss
xchg
cmp
xor
out
or
mov
orb
andb
push
and
sub
cmp
mov
inc
inc
jmp
leave
scas
push
cmpsl
daa
push
jg
pop
cltd
repz
js
aaa
iret
sbb
cmp
mov
push
jmp
mov
jb
movl
test
mov
popl
dec
std
lds
pop
mov
push
jno
aaa
popf
add
push
cmc
loopne
pop
and
call
cmp
lods
int
jmp
test
mov
xchg
int
mov
and
stc
and
roll
fimuls
pop
cwtl
pop
int3
call
int3
fisubs
sbb
push
js
mov
ja
mov
pop
push
and
adc
int
sti
out
push
jl
subb
test
sbbl
scas
int3
mov
mov
dec
xchg
cmp
sub
movl
inc
daa
push
pop
dec
jmp
sub
daa
mov
jbe
pop
sbb
mov
adc
std
scas
gs
mov
mov
out
js
lcall
enter
pushf
daa
push
in
cmpsl
inc
adc
int3
fnstcw
xor
roll
sub
cmpsb
sub
lods
pop
stos
inc
xor
movsb
scas
pop
xlat
push
jo
lahf
mov
sbb
std
out
lcall
movsl
mov
cmc
ret
fmull
push
dec
hlt
push
arpl
push
rcll
jne
cmpsl
or
test
pop
push
mov
in
xchg
ret
daa
adc
in
das
sub
push
xlat
mov
dec
mov
sbb
jb
out
jbe
sarb
pop
sbb
and
lods
dec
dec
insb
push
and
leave
movsb
stos
push
xor
jnp,pn
out
ds
jle
pop
in
adc
xchg
fcmovb
push
int3
fsts
mov
adc
cltd
dec
lods
and
lret
cmp
push
inc
and
mov
pusha
add
jp
jg
lahf
mov
jo
cmp
into
int3
sub
jp
mov
inc
ds
dec
push
and
mov
pop
popa
ds
cmp
xchg
sbb
jb
inc
rcrl
xorb
sbb
imul
popa
iret
push
sub
jmp
mov
pop
jge
or
sbb
stos
mov
jmp
cmp
mov
push
add
sahf
xchg
cwtl
fwait
aaa
push
das
pop
mov
outsl
push
mov
adc
mov
shll
decl
out
repnz
dec
jl
arpl
push
imul
out
add
cmp
iret
jno
cwtl
daa
inc
push
pop
add
addr16
jno
mov
ds
sti
mov
mov
loop
cmpsl
les
cmpsl
sti
mov
dec
sub
and
jle
mov
int3
fs
lahf
or
cmp
or
mov
jmp
jle
xchg
push
xor
pop
jmp
shlb
adc
vmaxsd
mov
xchg
imul
in
out
inc
and
inc
stos
add
mov
cmp
pop
jp
mov
stc
outsb
push
daa
stos
sub
iret
ljmp
mov
in
gs
mov
fsubl
mov
cld
loop
sahf
js
in
ss
adc
mov
stc
push
outsb
mov
subps
mov
pop
inc
clc
lods
jecxz
push
loop
movsb
gs
int
fs
std
cs
scas
pusha
pop
jnp
notl
push
out
cmp
pop
movsl
repnz
out
in
jle
out
jae
mov
jbe
lods
xlat
xchg
out
mov
in
sbb
cld
push
and
pop
lcall
outsb
dec
cmp
inc
pop
adc
push
insb
lods
je
xchg
addl
mov
mov
xorl
lods
stos
xor
mov
nop
and
pop
das
shlb
stc
and
in
and
or
jmp
bnd
inc
hlt
sbb
sti
xor
fwait
inc
push
sbb
pop
out
pusha
sub
pop
cmp
sub
subl
arpl
cs
cmp
sahf
pop
enter
mov
xlat
sti
insl
jg
add
je
push
jnp
jge
int3
inc
and
jns
cmp
loop
push
and
stc
adc
fdivl
or
dec
arpl
lea
aas
jne
xor
lds
pop
xchg
inc
stos
bound
xchg
test
clc
and
and
sbb
out
inc
loop
mov
and
or
lds
sahf
adc
xor
fidivrs
sbb
mov
dec
dec
adcl
sahf
mov
fwait
jb
pop
xlat
idivl
mov
ret
lods
mov
shlb
xor
adc
and
loope
dec
inc
in
push
imul
aaa
xchg
shrl
cmp
mov
repnz
stos
xlat
clc
inc
cmp
ljmp
repz
cltd
fsubl
jnp
shrb
pop
repnz
mov
cwtl
insl
inc
mov
cmc
lods
or
addr16
push
cmp
fdivs
nop
movsb
sub
pop
add
push
mov
cmp
ret
and
movsb
call
pop
pusha
pop
jge
cmp
pop
mov
loop
jns
mov
or
out
in
sub
add
mov
xchg
popa
push
in
movsl
jo
pop
aas
add
ret
fnstcw
fldcw
mov
push
in
pop
dec
cmp
aaa
mov
andb
xchg
lcall
xlat
nop
push
push
fistps
inc
adc
sarl
xchg
sbb
xchg
jno
outsb
push
pop
mov
stc
aad
cmpsb
jge
mov
pop
fwait
outsl
jo
sub
sbb
decb
inc
gs
mov
and
ret
cmp
cltd
add
pop
sbb
hlt
jg
and
pusha
idivb
xor
jecxz
mov
lahf
sub
xchg
adc
lahf
out
repz
sbb
and
mov
pop
out
mov
push
mov
int
arpl
mov
insb
dec
out
aaa
add
sub
neg
into
pop
jb
push
mov
or
insl
jle
pusha
ds
cmp
pop
repnz
xchg
inc
sbb
inc
lret
mov
adc
and
outsb
cmpsb
out
push
pop
pusha
fs
dec
sbb
hlt
pop
mov
xlat
mov
inc
inc
fnstsw
and
in
jle
dec
cmp
push
fcmovu
mov
addr16
dec
mov
lock
out
mov
adc
and
xchg
push
rorb
mov
insl
adc
mov
pop
xor
sbb
shl
scas
jge
pushf
xor
cmpsb
mov
push
xor
sub
adc
mov
into
out
stos
adc
cmp
mov
pop
xor
pop
mov
cs
inc
ja
dec
xor
iret
lret
ret
sub
dec
lret
std
in
fisttps
pushf
aam
cmpsb
sti
ret
jne
cmp
mov
xor
xchg
cmpsl
push
xor
xor
xchg
movl
lahf
rcr
out
push
fdiv
pcmpgtw
clc
jae
push
popa
push
mov
pop
mov
sub
bound
bound
movsb
and
ja
and
es
xor
bound
fisttps
loopne
jo
lretw
sub
out
lahf
test
imul
movsb
adc
fsubp
pop
fwait
jl
mov
leave
ret
sub
stos
cmp
mov
mov
mov
xor
xchg
mov
dec
dec
and
adc
push
pop
jle
inc
add
les
shrl
pushf
pop
mov
jge
daa
in
mov
jge
jmp
pop
les
mov
in
scas
sbb
pop
cmpsl
sahf
push
js
sbb
mov
cmp
out
js
aas
in
inc
pop
jmp
lahf
dec
cli
push
jle
mov
out
lcall
pusha
jb
pop
frstor
sbb
bound
push
iret
sub
mov
push
daa
add
dec
mov
in
and
lahf
popa
adc
add
pop
sub
pop
fadd
scas
aas
lods
mov
fnstsw
inc
aam
cmc
pop
les
and
mov
jnp
mov
inc
cli
and
mov
rcrb
aad
mov
outsl
movsl
cwtl
repz
inc
mov
cmp
dec
push
lds
dec
push
out
cmp
ds
push
outsl
jmp
push
lahf
dec
movl
sub
xorl
cltd
inc
cwtl
mov
pusha
out
test
mov
jecxz
das
pop
int
gs
push
add
and
cwtl
bound
sbb
aad
lcall
xchg
bound
mov
mov
mov
in
lds
stos
cmp
stos
adc
popf
sub
fadds
into
mov
push
clc
int3
pop
bound
fcompl
mov
push
fnstcw
and
pop
fimull
loop
xor
and
rcrb
push
out
jge
pop
cld
mov
sbb
int3
aas
int
lods
jecxz
add
xchg
test
inc
aad
pusha
sarl
call
mov
cwtl
xor
arpl
pop
jae
sarb
ds
jmp
push
add
inc
mov
push
xchg
arpl
scas
jno
mov
sbb
add
test
iret
pop
pop
cmpsl
data16
daa
cld
out
jno
mov
jae
xchg
xchg
pop
in
mov
add
daa
xlat
xchg
xor
rorb
mov
mov
jecxz
or
adc
sbb
out
push
mov
loope
add
loop
in
dec
jge
mov
cltd
lods
inc
mov
add
jmp
jo
aaa
mov
xor
std
pop
adc
jne
imul
movswl
add
mov
xchg
fnstenv
mov
call
or
cmp
inc
fst
addl
inc
adc
and
push
dec
jg
lods
inc
popf
and
jns
inc
popa
mov
insb
or
fstpt
pop
out
mov
xor
movsl
push
das
mov
xchg
pop
mov
mov
cmp
cmpl
js
pop
jb
dec
test
pop
dec
mov
push
jl
iret
mov
pop
test
fimull
xlat
sub
insb
push
push
jo
imul
loope
inc
lcall
jp
xchg
popa
mov
xor
cmpsb
inc
cwtl
test
lret
add
jo
out
xor
cmp
sub
sub
ja
and
mov
std
dec
sub
cmp
ja
or
lcall
and
xor
out
cmp
inc
push
sbb
jp
lret
inc
dec
sbbb
loopne
mov
and
lcall
mov
inc
pushf
sbb
daa
and
mov
adc
in
pop
jecxz
xor
cmp
mov
subl
mov
outsl
cmp
stc
shlb
and
jb
in
mov
out
cld
inc
cmpsb
arpl
cmpsl
mov
push
adcb
inc
jae
inc
mov
cli
ss
jl
sbb
pop
inc
xchg
jno
and
ficoms
in
call
bound
xchg
dec
or
sbb
pop
xlat
add
mov
scas
jg
adc
out
mov
and
das
lahf
dec
outsb
repnz
pushw
cmpsl
aad
imul
sub
icebp
arpl
push
push
inc
stc
inc
push
popa
bound
lret
data16
pusha
sbb
inc
outsl
mov
xchg
xorl
jae
jns,pn
js
xchg
inc
sbb
push
mov
sarb
push
daa
test
pop
lods
out
movsb
roll
cmc
jmp
lcall
push
jno
xlat
cltd
daa
jne
push
dec
fmul
pop
xlat
lret
and
sbb
inc
xor
cli
cltd
xor
es
jge
ljmp
pushf
jp
adc
xchg
push
or
dec
dec
fstps
bnd
ret
inc
imul
jmp
jbe
bound
add
inc
cmpsl
cs
fistl
pop
sbb
imul
ljmp
cmp
push
xchg
pop
mov
loope
dec
lret
stc
cmp
lock
sub
pop
inc
xchg
dec
mov
lea
sub
iret
loopne
and
add
jmp
in
jl
out
sbb
pop
out
push
out
sbb
es
stos
and
pop
or
mov
test
icebp
mov
xor
adc
pop
push
aas
cmpsb
jecxz
mov
outsl
fwait
leave
es
cmp
dec
pop
cwtl
inc
xchg
mov
movsl
dec
inc
push
cld
cltd
rcll
dec
dec
cwtl
or
inc
imul
lock
sub
loop
mov
xor
dec
lcall
cwtl
pop
cmp
mov
push
mov
mov
push
icebp
jnp
nop
and
push
cmpsb
xor
andl
mov
adc
popa
sbb
aaa
adcb
xchg
movsb
mov
in
mov
fldl
dec
pop
repnz
jno
int
dec
insb
jne
sub
stos
adc
loope
lahf
aaa
push
push
mov
jo
ficompl
mov
shlb
les
fdivrs
rclb
loop
jne
pop
jp
add
es
inc
out
pop
jmp
daa
out
xlat
add
scas
push
sbb
mov
das
aam
mov
mov
xlat
clc
and
lds
jnp
mov
jno
rcrl
pop
call
notl
popa
or
add
mov
orb
and
pop
inc
mov
mov
pop
xchg
sbb
push
inc
xchg
mov
xor
movsb
sti
les
fidivl
mov
scas
jle
sub
mulb
out
or
imul
and
pop
test
jb
fbstp
push
daa
mov
jp
cmc
inc
push
inc
mov
je
aad
sub
mov
jle
addr16
pop
addb
jle
jae
xchg
adc
in
jnp
mov
xchg
stos
jns
pop
jbe
pop
repz
nop
inc
popf
or
xchg
jbe
add
pop
pop
addl
jbe
add
push
mov
ljmp
xor
xor
nop
mov
xchg
sahf
sub
add
inc
hlt
pop
mov
jp
ffree
push
movsb
sbb
popf
xchg
sarl
mov
daa
xorl
and
mov
lcall
sub
fwait
add
pop
jbe
adc
xor
push
sbb
dec
sub
js
mov
mov
inc
jmp
xlat
in
jb
push
cltd
test
mov
test
jno
push
bound
out
cmp
inc
notl
xchg
and
lret
pop
xor
test
orl
in
push
mov
bnd
sub
cmpsb
mov
lods
rolb
jecxz
mov
jl
push
ret
mov
sbb
jb
pop
nop
add
pusha
jne
cmp
es
rcll
or
es
mov
stc
pop
or
pusha
sarb
dec
cmp
sub
jne
sub
outsb
jle
fistpl
sbb
inc
je
jae
dec
and
jne
and
add
inc
jo
fdivs
hlt
xor
inc
push
inc
cld
xchg
popf
in
or
jb
enter
cmpsl
sarb
shr
xchg
cwtl
loop
lea
js
inc
pop
pusha
je
jl
jne
xor
sub
xor
pop
aas
xchg
xchg
testl
gs
lea
fimull
pusha
rcrl
out
icebp
mov
fldl
jbe
int
fstl
add
fwait
repnz
mov
and
xchg
inc
fbld
ffreep
test
mov
in
rorb
lret
loopne
sbb
push
push
sahf
adc
cmc
mov
adc
enter
mov
popf
mov
pop
aam
cvtps2pd
dec
adc
fwait
rorb
xchg
repz
or
adc
enter
jne
dec
dec
add
loopne
push
sbb
out
fldcw
jmp
lret
jnp
inc
sub
fdivrp
sahf
ret
andl
cmpsb
in
das
dec
push
mov
mov
es
cmp
push
or
push
sbb
je
popf
or
mov
andl
inc
ljmp
test
sbbb
cmp
pop
cmp
int
ret
in
inc
lcall
mov
imul
cmp
xor
adc
cmp
pushf
fidivrs
inc
fidivs
xchg
arpl
js
xor
jae
aaa
divl
lods
cs
mov
adc
xchg
push
jle
addr16
mov
es
and
push
lret
or
jbe
das
sbb
sbb
fwait
pop
aas
dec
je
push
movsl
rolb
pop
out
pop
jle
enter
ret
pop
mov
cmc
mov
add
mov
fsubp
xchg
sub
sti
in
mov
repnz
push
mov
mov
push
lods
xlat
in
lcall
ja
push
lcall
mov
outsb
es
bound
testb
iret
pop
mov
jb
leave
scas
mov
sub
es
clc
lea
dec
arpl
and
clc
gs
ss
aas
js
fimuls
pop
push
js
inc
outsl
cld
lock
in
push
pop
mov
or
mov
mov
stos
jmp
mov
sbb
pop
or
xchg
sub
xchg
cmp
iret
push
xchg
inc
mov
push
add
xchg
ja
mov
test
in
fcmovu
cltd
movsl
or
or
mov
push
push
adc
mov
mull
add
jb
fldl
in
testb
gs
pop
js
test
incl
jmp
sub
mov
cmp
out
cmp
scas
call
sub
mov
jle
xorb
mov
dec
add
sub
jno,pn
dec
cmc
sarb
in
sub
and
mov
add
outsb
fisttpll
lea
adc
loop
daa
ljmp
mov
out
rcrl
insl
cltd
out
test
mul
dec
push
stos
loopne
cld
cs
fcmovbe
xchg
pop
xor
xor
adc
cmp
xchg
test
rcll
insb
mov
and
sahf
mov
outsb
xchg
cmp
punpcklbw
in
ret
mov
lods
mov
or
add
icebp
enter
pop
cmp
repnz
pop
fiaddl
push
rorl
cltd
add
xchg
sarl
pop
loopne
mov
shrb
in
into
fdiv
fsubp
cmp
inc
add
sbb
cmovne
pusha
jbe
push
push
clc
stos
adc
sti
mov
fcmovnu
loopne
das
xor
stos
xchg
and
stc
pusha
ds
dec
mov
sub
fnstsw
mov
inc
fildll
nop
xor
push
testb
sbb
hlt
mov
inc
imul
cmovge
jmp
mov
mov
je
test
pop
inc
push
push
fdivl
sbb
inc
push
or
push
data16
sub
add
notl
inc
fs
jae
out
int3
or
cmp
push
xor
mov
daa
xor
out
and
add
inc
dec
daa
ja
popf
and
sub
adc
push
push
lea
mov
push
loopne
pop
mov
push
xor
mov
fidivrs
leave
inc
aad
xchg
mov
and
pop
jle
hlt
xor
test
clc
ja
mov
inc
mov
mov
ja
mov
xlat
icebp
dec
cs
or
sti
or
xchg
dec
and
cmp
mov
sub
jg
pusha
es
push
inc
dec
push
fidivrs
xchg
inc
jnp
add
add
jae
xchg
add
jae
mov
mov
add
sub
xchg
cmp
outsb
data16
inc
sbb
push
btr
push
jbe
stos
fdivl
fildll
lcall
loop
inc
push
mov
lods
andl
ret
ljmp
fcompl
mov
into
sahf
lahf
inc
loopne
push
lods
add
mov
test
xchg
dec
fistl
fldt
pop
das
xchg
lahf
or
pop
sti
push
lock
notb
sbb
xchg
jecxz
push
mov
push
xchg
inc
daa
call
mov
xor
add
daa
or
or
data16
dec
mov
pop
inc
pop
or
sbb
mov
inc
enter
aas
sbb
pop
and
xchg
out
int3
sub
pop
xor
xor
cmp
sbb
sbb
fwait
inc
cltd
lcall
pop
scas
mov
and
cmp
pop
out
aad
and
addr16
sub
lea
and
cli
inc
xlat
arpl
mov
or
pop
bound
inc
lretw
lret
cmc
sub
int
rorl
xchg
dec
sbb
aaa
cmc
push
dec
mov
xchg
push
or
loop
scas
sbb
stos
cld
imul
cmp
push
xchg
pop
xchg
mov
dec
inc
mov
mov
jp
mov
inc
xchg
stc
into
mov
xor
jne
push
add
jle
lods
ret
fbld
mov
mov
jae
rorl
xchg
sbb
fsts
je
fadds
shll
mov
and
cmpsb
out
pushf
nop
mov
mov
ljmp
ja
ds
and
stos
rolb
pop
add
sbb
push
mov
iret
cli
lret
xor
push
inc
mov
dec
pop
out
push
scas
lahf
ret
jp
jl
lock
rol
test
xchg
adc
xor
leave
inc
aaa
icebp
rcll
mov
ss
mov
lock
push
pop
sub
cmp
aas
xchg
repnz
cs
xlat
adc
mov
mov
rorl
xor
xchg
cmp
call
and
ljmp
adc
mov
and
sbb
stc
aam
cmp
sbb
ficomps
lock
cmpb
ja
mov
andb
insb
pop
xlat
mov
aam
mov
jg
cmpsb
lods
mov
sub
stc
pop
rorl
sub
dec
bound
insb
dec
mov
sbb
cmp
test
push
cmp
shrl
aam
daa
out
xchg
jp
xchg
and
mov
sbb
cld
sbb
in
in
cmp
cmpsl
jle
mov
test
outsb
adc
mov
pop
out
mov
mov
cmpsb
push
cmp
jnp
lock
xor
pushf
insb
push
jg
mov
test
push
cmp
cmpsl
pop
xchg
add
push
xor
sbb
push
jmp
es
js
outsb
push
es
cmc
test
or
mov
shl
mov
push
mov
xlat
jl
cmpsb
mov
sahf
orl
push
fisubs
inc
js
neg
test
and
subl
fisubrs
lret
popf
mov
xchg
pop
ja
sti
loop
xchg
cmc
jle
out
in
push
jb
push
sub
cmpsl
push
enter
push
test
nop
jp
cs
inc
pop
push
shlb
jl
xor
xchg
pop
xchg
push
dec
mov
mov
enter
out
adc
lahf
icebp
sbb
imul
mov
fs
and
sub
push
or
jo
ret
cmpsl
mov
les
sub
push
dec
or
cmpsb
leave
jle
or
sbb
xchg
mov
shlb
testl
bound
adc
daa
test
mov
pop
jno
mov
inc
cmpsl
jbe
lea
cmc
push
mov
cmp
leave
insl
popa
loop
stos
inc
scas
jmp
sub
pop
xor
push
dec
push
mov
mov
push
roll
adc
into
dec
mov
mov
pop
mov
mov
pop
mov
scas
jmp
test
cmp
jbe
call
add
or
subl
sbbl
dec
clc
jb
jo
xchg
cltd
xor
adc
mov
inc
and
repnz
les
push
mov
cmp
adc
push
shl
sub
cmp
imul
push
in
insb
mov
or
cmp
jae
call
xor
sub
shrl
cmp
addr16
sub
lods
mov
mov
sbb
dec
xchg
inc
hlt
push
pop
ss
mov
inc
ret
jae
jp
inc
enter
xchg
and
bound
xchg
mov
bound
lret
sub
mov
push
mov
test
mov
mov
dec
loop
icebp
or
cmp
test
mov
icebp
jne
jns
pop
inc
pusha
pop
lcall
rcll
fisttps
cwtl
mov
cmp
inc
mov
adc
and
xchg
pop
subb
jne
xlat
cmp
enterw
dec
add
cld
cld
push
loop
mov
enter
jl
out
mov
jmp
sbb
xlat
test
es
loop
xor
scas
xchg
dec
sarl
out
sbbl
dec
movsl
xor
movsl
sbb
push
cld
popa
lods
or
daa
inc
sub
fs
nop
ds
sub
rorb
sub
xchg
push
movsb
vcmpneqss
cmpsb
xor
xor
adc
and
push
divl
mov
hlt
roll
fcmovnbe
ret
pop
insl
std
sub
lret
adcb
lcall
and
cmpsl
adc
fdivl
push
fldenv
mov
lret
ror
jl
cwtl
cmp
stos
out
cvtdq2ps
sub
mov
mov
sbb
imul
bound
dec
jecxz
pusha
cmp
xor
popa
bound
imul
cli
xchg
popf
sarl
aaa
jge
mov
js
dec
call
and
sbb
sbb
dec
aas
iret
adc
push
and
lock
cmp
mov
adc
mov
xor
push
roll
mov
loop
and
out
fcmovne
xorl
xlat
cmpsb
and
test
and
stc
mov
mov
mov
jbe
dec
rorl
nop
arpl
pushf
loope
negl
xor
int3
leave
loop
xor
sub
or
pop
pop
cld
xchg
and
insl
sub
cmp
mov
inc
xor
add
repnz
je
dec
sti
push
xchg
pop
mov
fmul
divl
inc
int3
jo
popf
cmp
pop
jno
and
xor
xchg
nop
adc
sahf
outsl
cs
cli
pusha
imul
lcall
sub
pop
mov
out
ja
frstor
out
adc
xchg
test
cmp
addr16
pop
gs
cmp
out
xor
push
into
out
fistps
rolb
loop
xor
cmp
xchg
fwait
sbb
dec
rcll
jne
inc
dec
cmp
fsubrp
cld
pop
call
out
xchg
pop
or
push
mov
inc
gs
xlat
pushaw
xor
cs
loop
push
mov
inc
out
xchg
or
pop
popa
xchg
sub
mov
pop
sbb
pop
shlb
hlt
mov
into
mov
push
cmp
lahf
cmpsb
jge
je,pt
rorb
jnp
cltd
dec
les
inc
sub
out
rcll
dec
dec
cmc
xor
cltd
sbb
insl
add
xchg
pop
mov
mov
mov
mov
pop
imulb
repnz
shrb
sub
mov
mov
xor
push
dec
jne
in
into
ret
pushf
aaa
mov
movsl
in
xor
cs
xchg
ret
add
dec
sub
xchg
aad
or
push
mov
call
mov
mov
jb
push
mov
push
sarb
xor
aas
push
jl
mov
push
dec
mov
lock
rcrl
sti
fisttpl
adc
sahf
shrb
push
add
iret
call
add
jmp
mov
sub
mov
into
sub
out
pop
clc
cmc
popf
jns
inc
sbb
jp
mov
icebp
sbb
and
push
add
xchg
pusha
mov
xchg
sub
mov
test
adc
in
inc
push
lcall
sbb
push
ret
sbb
mov
xchg
push
mov
sub
insb
inc
dec
xor
push
arpl
sbb
cmpsl
sbb
xor
loopne
pop
and
push
cmp
pop
mov
jns
cmc
inc
fsts
dec
int
xchg
mov
sahf
mov
mov
adc
bound
cmp
shrb
jmp
sti
xor
cmp
jb
test
and
or
xchg
cltd
xor
ja
lahf
pop
xchg
xor
xor
popa
xchg
mov
inc
mov
fdivr
pop
inc
pusha
daa
jo
out
aaa
mov
lcall
push
or
inc
movsb
mov
adc
das
inc
arpl
sahf
movb
fisubl
dec
mov
mov
daa
xor
cltd
adcb
xchg
fnstsw
sti
dec
inc
jae
pop
and
cmpsl
xor
outsb
outsb
mov
sti
jno
in
imul
ds
mov
adc
out
std
dec
jno
cmp
bound
inc
movsl
jno
mov
out
sar
cli
pusha
push
inc
fistl
add
add
daa
in
dec
scas
cwtl
es
cmp
xchg
jne
pop
jns
lock
js
cs
push
sub
xchg
repz
or
icebp
and
mov
inc
push
cmc
mov
sbb
leave
ret
or
cmp
pop
xchg
mov
jge
cmpsl
mov
inc
shlb
jnp
int
mov
arpl
pop
aad
rcrb
mov
push
jnp
aaa
dec
inc
loopne
xor
cmpsl
movsb
sahf
xor
lret
sub
repnz
and
aam
inc
inc
lcall
jns
addr16
mov
fwait
mov
fldenv
mov
sub
sub
stc
dec
cmpxchg
jne
mov
pop
lcall
ret
add
scas
pop
rcll
dec
mov
jecxz
sbb
in
and
cmc
or
or
mov
arpl
mov
jb
ficompl
pop
xor
xor
and
sbb
mov
cmp
cmp
imul
xor
insb
popl
xchg
orb
lret
inc
testl
dec
mov
jl
sbb
xchg
adc
jmp
cmc
sbbl
jg
push
adc
jecxz,pn
lcall
test
inc
or
cmp
add
mov
pop
arpl
cmp
data16
pusha
idivl
mov
gs
xor
xchg
rorb
mov
les
dec
fisttpll
mov
movsb
leave
inc
push
cmpxchg
imul
add
mov
jp
mov
js
shlb
sub
repnz
mov
nop
inc
cli
mov
fbld
in
dec
insl
dec
iret
push
dec
and
mov
dec
popa
xchg
cmp
call
jne
pop
fstps
xchg
adc
lcall
or
orb
scas
je
addr16
loop
and
pop
imul
pop
dec
sbb
nop
mov
inc
fadds
pop
in
or
xchg
push
sub
add
mov
pop
mov
sub
and
mov
call
cmp
pop
push
outsl
mov
cmp
call
hlt
xor
aad
inc
aam
adc
fcmovne
xor
insl
push
std
cld
push
mov
pop
add
xor
test
adcb
movsb
je
jge
mov
leave
fsubr
adc
outsb
loop
xor
insl
mov
sub
lret
movsl
gs
aam
pop
mov
pop
std
jae
test
sub
shlb
sarl
cwtl
cmp
pop
stos
test
jl
pop
adc
or
adc
outsl
mov
or
xor
cli
cmpsl
out
movsb
jp
jbe
fistl
inc
arpl
cli
mov
inc
cmp
outsl
cld
repnz
sbb
es
stc
mov
fsubrl
aas
enter
xlat
ss
imul
in
insb
ds
push
or
bound
jo
dec
leave
out
push
or
enter
test
mov
xor
sub
pop
jne
inc
cmp
sahf
notb
jp
aas
inc
jmp
nop
xchg
lret
inc
dec
loop
sbb
and
push
loop
mov
or
xor
pop
pop
mov
mov
xor
or
shl
aas
dec
cltd
cmpsl
out
push
xchg
std
lahf
pop
test
mov
push
cmpsl
xorb
mov
mov
popf
and
inc
mov
mov
push
add
mov
xchg
aam
insb
insb
in
aad
jbe
fwait
icebp
cmc
testb
pop
shrb
xchg
mov
imul
fisubrs
jp
inc
cld
xchg
adc
jle
adc
pop
loope
fiadds
jo
push
data16
and
shll
and
mov
mov
and
shll
gs
nop
incl
popf
xor
xor
movsl
scas
icebp
jecxz
cmp
out
mov
jae
xor
add
inc
push
dec
mov
cmpsl
loop
inc
daa
push
mov
in
repnz
imul
pop
jne
or
sub
mov
fs
jp
ret
lret
daa
lcall
sub
ja
popa
addr16
fstpl
das
ljmp
push
lods
mov
stos
push
jo
daa
lea
in
sub
lea
pop
mov
ret
inc
xor
xchg
sub
adc
xchg
jle
std
movsl
insl
sbb
cmpsl
loope
cmc
pop
cs
pop
jecxz
xor
dec
insl
jg
incb
lock
pop
cmp
jb
popa
js
pop
imul
and
loope
mov
lahf
dec
adc
int3
sub
pop
js
movsb
or
mov
fisubrs
shrb
sbb
cld
inc
xlat
push
arpl
icebp
mov
scas
jne
and
rorl
mov
cmp
mov
dec
repnz
ljmp
pop
push
cmp
fwait
mov
push
xchg
cmp
adc
dec
xchg
pushf
or
and
out
incl
sub
add
mov
pop
sub
xchg
pop
dec
and
ds
jne
lods
in
push
pop
sub
pusha
xchg
add
and
in
mov
fisubrs
lock
inc
ljmp
scas
dec
xor
adcb
dec
out
sub
cmpsb
lcall
movb
and
fstl
into
and
inc
inc
and
cmp
outsb
hlt
inc
jp
xchg
sbb
mov
xor
xchg
cmc
push
xchg
sbb
mov
fimuls
shll
bnd
mov
sbb
sbb
arpl
gs
lds
insl
lcall
loopne
jbe
lcall
xchg
xlat
in
push
cmp
xchg
outsl
mov
cs
adc
cmp
lods
jne
cld
fistpl
mov
mov
fldl
arpl
scas
xchg
pop
test
mov
loope
mov
push
in
lock
mov
nop
loopne
dec
arpl
lcall
loop
dec
sub
lret
lret
lahf
mov
sub
xchg
or
xchg
pop
push
pop
sti
pop
icebp
ficoms
mov
fimull
and
xchg
and
xor
mov
dec
ljmp
stos
cmp
out
dec
xorb
std
mov
and
repz
inc
mov
pop
sbb
in
imul
jno
nop
mov
cld
shlb
out
cwtl
lret
es
mov
add
and
inc
and
dec
add
push
je
mov
jo
inc
xchg
mov
jge
inc
and
or
and
push
xor
stos
btc
add
scas
mov
push
rorb
loop
insb
mov
movsl
dec
or
cmpsl
add
fdivs
lahf
enter
sbb
sub
mov
dec
movsb
les
push
xchg
ret
xor
inc
in
sub
mov
bound
shr
notb
sub
clc
mov
xor
cli
fiaddl
mov
popf
stc
in
stos
sbb
mov
in
adc
lret
scas
mov
mov
xchg
scas
rcr
leave
and
into
push
xor
push
lock
scas
loopne
out
xchg
adc
xor
stc
adc
mov
cmp
std
clc
in
mov
dec
scas
stos
mov
xchg
cltd
pop
or
sub
push
cltd
lcall
dec
push
sub
jae
adc
xor
arpl
stos
push
test
pop
jp
dec
jle
pop
push
push
pop
push
loope
enter
stc
mov
imul
jno
jg
out
pop
jne
inc
dec
mov
popa
arpl
dec
es
jno
inc
and
jne
xchg
bound
dec
in
outsb
pop
mov
push
imul
inc
push
xchg
out
and
mov
cmpsb
xor
fcmovu
cmp
dec
outsb
add
jl
sarl
jge
mov
jl
pop
dec
out
push
lcall
lods
adc
inc
or
popa
addb
test
jp
mov
arpl
jae
insb
sbb
mov
and
cmp
nop
and
pop
addr16
push
jp
gs
in
in
jmp
pop
in
lds
dec
adc
xchg
jecxz
loopne
ss
lcall
push
push
xor
and
cmp
sbb
es
lock
mov
sub
cmp
test
jns
push
dec
fs
or
in
ja
xor
cmpl
inc
adc
lods
pop
sbb
lahf
inc
cmp
int3
fstpt
inc
jb
ja
jae
jle
sarb
popf
inc
mov
idivl
mov
inc
dec
mov
notl
negb
mov
out
and
or
pop
lods
clc
mov
and
inc
insl
das
mov
stos
and
jle
aam
shr
push
xchg
cmp
out
mov
cmpsb
jmp
fwait
or
mov
add
dec
xor
dec
stc
dec
pop
fcoml
inc
jns
inc
fsubl
int3
std
ror
mov
push
inc
arpl
jns
sub
mov
fdivrl
push
and
insl
mov
fwait
call
lods
shrl
push
pop
pop
pop
adc
and
addr16
mov
mov
fsubs
popa
ss
xlat
and
sbbb
jno
pusha
lret
mov
outsb
add
and
daa
cmpsb
mov
fsubp
scas
and
sbb
pop
loop
jae
mov
push
fbstp
outsb
and
inc
and
mov
outsb
rolb
out
stos
xchg
jmp
mov
lahf
and
inc
sub
in
or
cltd
xor
scas
sub
cmpsb
and
lahf
mov
das
push
in
sbb
jecxz
adc
xchg
mov
loopne
shrb
mov
icebp
daa
adc
inc
add
scas
add
imul
xchg
nop
push
aad
popa
movsl
inc
mov
pop
dec
sahf
pop
adc
dec
popa
stc
sbb
ss
add
pushf
scas
fadd
or
mov
clc
mov
push
jge
call
mov
lcall
jge
sub
adc
popf
xchg
mov
shrb
sub
jbe
inc
pop
pmaxsw
adc
fcmovb
sti
dec
lahf
dec
jbe
mov
lret
mov
or
shlb
mov
pop
mov
fidivl
stos
sbb
sarl
xchg
stos
call
test
jb
add
add
xchg
test
ja
out
aam
push
pop
jns
jecxz
push
das
pusha
mov
mov
mov
sbb
xchg
push
aaa
in
outsl
mov
adc
inc
out
mov
jmp
xor
pop
jecxz
jge
adc
jno
sbb
pop
loop
outsl
cltd
xor
lock
xchg
data16
sbb
add
inc
xlat
outsb
iret
push
mov
fidivl
pop
sahf
stos
fldl2e
mov
push
mov
xor
jecxz
mov
jl
push
add
add
scas
jbe
fs
adc
cli
test
les
pusha
dec
add
dec
faddl
clc
inc
add
ds
std
add
loop
xchg
add
push
imul
jl
loop
sahf
push
jmp
jp
xchg
jno
fisubl
pusha
dec
lea
cmpsb
mov
sti
sub
mov
cmpsb
pushl
jns
loope
push
dec
orl
jecxz
add
lock
or
insl
fldcw
scas
pop
aaa
xor
sarb
mov
xor
cltd
iret
push
test
jmp
adc
dec
inc
mov
inc
mov
sarb
pop
adc
push
ja
mov
xchg
cmpsb
loop
push
or
call
cmp
shl
sub
push
or
sbb
test
out
add
push
ret
xor
xor
sbb
adc
jle
inc
test
roll
xor
sbb
cwtl
fnstsw
in
pop
cmp
inc
ja
push
xor
ja
or
daa
and
sarb
dec
jno
daa
in
fbstp
and
aas
xchg
ljmp
je
mov
shlb
repz
pop
and
mov
cmpsl
sub
inc
mov
rclb
mov
sbbb
cmpsb
neg
xor
mov
cmp
imul
cld
pop
cltd
fstl
add
fs
imul
xchg
pop
inc
and
and
jmp
adc
in
xchg
pusha
xchg
add
cmp
jo
cwtl
sub
lahf
lock
push
test
push
scas
std
adc
dec
mov
add
stos
push
adc
cmp
or
mov
imul
xchg
jmp
push
mov
or
sbb
mov
push
ds
and
mov
mov
jg
and
sub
mov
cmpsl
lahf
pusha
stc
sub
mov
popa
shlb
adc
push
mov
xlat
loopne
ret
jge
clc
imul
jb
loopne
dec
cmpsl
mov
sub
adc
ss
jl
repnz
icebp
mov
outsb
xor
jae
or
mov
pop
in
inc
sub
mov
xor
and
aad
out
sbb
lock
fisubrs
mov
es
nop
into
xchg
fcomps
scas
and
xchg
jge
cs
stos
mov
or
mov
fcomps
scas
and
loop
xor
out
ds
movsbl
cmp
inc
sbb
fcmovnbe
xchg
pop
call
sbb
sub
push
jg
pop
push
js
mov
and
ret
xchg
fwait
out
lds
lcall
shrb
daa
jbe
mov
add
mov
outsb
sbb
cli
pop
in
aaa
data16
aas
sti
sbb
bswap
or
and
sbb
jecxz
adc
sbb
and
cmp
arpl
mov
faddl
ss
mov
addr16
or
mov
je
push
and
shll
add
jno
or
in
dec
cmpsl
fisubrl
xchg
out
dec
push
pop
ljmp
or
cmp
xchg
in
fimuls
jns
mov
cltd
insl
xchg
mov
push
push
rcr
cmp
push
mov
shll
jecxz
cli
jbe
mov
inc
arpl
cltd
popf
fcmovnb
push
and
into
ficoml
sarb
mov
dec
jp
inc
mov
into
cmp
stos
inc
lods
sbb
movsb
mov
repz
xchg
pop
lret
jecxz
mov
test
mov
mov
or
ss
out
dec
cli
and
fs
mov
jb
repz
in
stc
and
push
imul
mov
push
insb
cli
push
adc
push
nop
popf
mov
rcrb
aas
out
inc
cmp
xchg
ret
jge
rclb
lock
inc
push
lds
mov
movsb
fldenv
aaa
push
daa
inc
mov
popf
jns
and
push
inc
pop
loope
insb
jl
inc
and
xorl
inc
jbe
je
lds
sub
data16
push
jbe
sbb
push
test
fists
lock
and
shrb
push
loop
mov
inc
sahf
ret
add
pop
jg
jb
mov
cmp
fldcw
and
dec
cwtl
pop
push
dec
rcrb
jmp
std
xchg
pop
aam
scas
stc
out
divb
lsl
daa
pop
push
rol
push
mov
or
outsl
jp
daa
xor
xor
jge
ret
and
insb
jae
je
inc
pop
ret
jo
xchg
sarl
icebp
test
nop
dec
xchg
mov
aad
int3
inc
pushf
ja
and
sub
aaa
push
arpl
loopne
mov
cs
outsl
mov
aaa
mov
in
adc
aas
mov
jp,pt
mov
std
or
scas
push
sub
xchg
scas
loop
fcoml
sbb
into
cmpsb
mov
test
neg
or
jp
and
gs
jg
jle
leave
test
aaa
push
repnz
and
pushf
fdivs
std
mov
int3
jnp
pop
or
jp
aaa
cmpb
jecxz
fisubl
cltd
enter
sub
lods
leave
inc
sbb
js
out
iret
mov
jmp
andb
sbb
cmp
adc
lret
mov
shl
sub
and
enter
jae
jecxz
mov
js
cmc
gs
fneni(8087
pop
xchg
repnz
mov
xchg
jle
sub
cld
jge
mov
xor
rcl
sub
cmp
sbb
pop
das
sbbl
jle
xchg
dec
push
fbld
jp
sub
int
loope
pop
and
stos
add
sub
addl
out
outsb
and
lahf
out
xchg
lock
lods
sub
and
aad
ljmp
out
addr16
and
xchg
aad
xor
dec
bound
loopnew
adc
pop
mov
fnstenv
das
cmp
pop
mov
mov
mov
rorl
mov
or
pop
jae
xchg
fcoml
cltd
sbb
and
fnsave
sbb
call
sbb
aam
sarl
sbb
inc
fimuls
pop
outsb
add
icebp
mov
ror
inc
addb
aam
mov
mov
outsb
inc
in
into
aam
mov
cltd
stos
xlat
inc
loop
jb
mov
mov
xchg
movsb
sbb
dec
jle
aaa
jge
jnp
loop
test
shl
scas
imulb
addr16
lock
fstl
sbb
fnsave
jb
xchg
cwtl
or
jp
mov
fcompl
mov
cmp
sub
sub
daa
jnp
inc
ljmp
nop
mov
ljmp
outsb
jnp
mov
stos
xor
jnp
xchg
xchg
int3
sti
pusha
cwtl
imul
sbb
movsb
adc
dec
xor
adc
dec
lahf
sahf
pop
jns
add
dec
lcall
mov
lret
data16
stos
rcr
lods
mov
mov
shl
adcl
mov
test
outsl
pop
jmp
stc
cmpsl
les
or
push
mov
insl
out
data16
adc
push
gs
int3
notl
data16
add
jmp
adc
ret
int
mov
loope
out
popa
leave
jnp
pop
adc
ljmp
xchg
mov
scas
adc
xor
pop
inc
mov
adc
mov
jb
loop
int
pushl
cli
mov
cmp
add
cmpsb
sbb
push
ret
popf
mov
mov
cmp
lret
or
daa
stos
mov
jle
sub
gs
lea
pop
mov
xor
inc
push
cmp
in
xorb
add
jb
pusha
cmp
test
pop
sub
lret
xor
cmpsb
or
mov
dec
sub
rorl
jb,pt
pop
mov
mov
xchg
cmp
adc
js
scas
pop
ss
out
leave
nop
mov
lods
cli
sub
push
into
sbb
sarl
inc
loop
idiv
imul
fistl
ss
stc
in
lods
push
repz
cmp
mov
jmp
lock
cmp
bound
jge
ljmp
cli
push
adc
idivb
inc
mov
inc
fs
adc
call
pop
cmp
and
dec
mov
xor
pop
mov
cmp
adcl
cmp
ret
add
adc
inc
stc
and
dec
loopne
xchg
mov
jns
repz
andl
sub
ja
fcoml
pop
cmpb
imul
inc
push
gs
sub
mov
pop
jbe
push
cmpsl
pop
in
push
daa
adc
mov
adc
das
jmp
movsb
xor
dec
pop
push
cmpsl
push
gs
test
aaa
sub
insb
ja
mov
test
add
and
rcr
or
movsl
out
or
out
dec
inc
sub
dec
inc
mov
stc
sub
inc
int
pop
and
push
test
adc
jne
mov
xor
jle
ss
adc
bound
pop
mov
jle
stos
shrl
fwait
push
jle
mov
cmp
daa
fbld
cmp
jmp
mov
pop
cltd
inc
xor
lahf
cmp
pop
outsl
and
nop
add
lahf
mov
jl
in
addl
cwtl
imul
mov
gs
adc
popfw
cmpl
inc
push
pusha
mov
mov
test
les
fadd
inc
xchg
xchg
out
jg
repnz
in
adc
clc
xchg
dec
sub
lcall
test
mov
inc
xchg
adc
ret
arpl
inc
push
insb
lds
sub
mov
adc
sub
lret
cli
fistps
js
mov
movb
dec
ja
insl
out
jo
mov
loopne
popa
test
lcall
jl
int
mov
insl
movsb
in
add
pop
cs
mov
ss
sub
inc
inc
scas
movsl
fimuls
test
push
mov
paddsw
mov
xchg
add
mov
outsl
xchg
in
scas
sub
xchg
xchg
sahf
xor
mov
pop
ja
in
push
sbb
shlb
cs
cmp
pop
xchg
lods
pop
xchg
jb
addl
and
xlat
fiaddl
outsb
ljmp
xchg
mov
outsl
sbb
popa
aas
jb
lock
jnp
push
jle
inc
lds
dec
adc
sub
cmpsb
lret
sub
jnp
mov
inc
popf
or
in
lods
cmp
mov
add
das
and
negl
in
and
sub
pop
adc
popa
test
outsl
push
xor
or
popa
or
push
sbb
cmp
cmc
popa
push
adc
sti
inc
sbb
fdivrs
mov
mov
dec
jle
std
arpl
imul
cmp
jne
xchg
loopne
xchg
mov
aaa
and
pop
jnp
loop
mov
jae
inc
and
mov
dec
xor
push
mov
pusha
shll
cli
lcall
in
push
outsl
inc
in
mov
fwait
sbb
fiadds
and
push
mov
mov
test
fdiv
popa
push
ss
out
dec
pop
fs
clc
or
subb
testl
xchg
add
call
call
and
ljmp
or
pop
insb
xor
adc
pop
mov
sbb
dec
rcll
in
jbe
xlat
sbb
and
jmp
in
inc
and
sbb
push
mov
or
mov
mov
push
pop
ret
ds
sahf
jecxz,pt
clc
ss
shrb
das
mov
fs
inc
out
popa
fdivrp
loop
xor
jno
fildl
inc
xchg
jnp
mov
adcl
sbb
mov
scas
sub
aaa
loop
orl
fstpt
cmpsl
push
pop
stos
sbbl
pushf
jnp
in
jae
in
sti
fistps
ret
mov
testb
xchg
sbb
push
adc
push
fstp
ds
lock
andb
jle
xor
adc
sub
jge
jno
mov
call
add
xor
sbb
inc
sbbb
sahf
xchg
arpl
cmp
pop
sbb
aad
dec
scas
dec
pop
jae
xlat
pop
inc
fcmove
pop
xor
xchg
push
add
inc
mov
pop
out
fdivl
inc
frstor
sbb
out
sub
xchg
cmp
adc
andb
enter
cli
daa
dec
dec
add
jb
jns
imul
push
roll
test
data16
dec
aas
mov
jae
push
xor
out
loop
cs
lcall
cmp
add
inc
sbb
mov
cmp
mov
minps
arpl
sbb
cmp
pop
popf
dec
arpl
xor
fiaddl
scas
fstpl
push
bound
inc
ja
ss
inc
and
cli
inc
lods
and
gs
lds
push
add
and
into
inc
mull
scas
cmpsl
jp
inc
pop
and
lcall
mov
cmpsl
mov
aaa
sbb
cmp
pushf
cmp
arpl
icebp
mov
js
in
xor
test
mov
pop
cmpsl
fldenv
or
repnz
adc
xchg
nop
andl
adc
imul
jmp
sarb
imull
cmp
sbb
call
xchg
adcb
xchg
jbe
xor
fbstp
dec
sub
push
aad
mov
pop
mov
scas
hlt
adc
popf
roll
ljmp
jge
out
pop
orl
gs
ret
lods
xor
icebp
movsb
aaa
out
jae
adc
xchg
xor
inc
ljmp
mov
xchg
cli
jbe
mov
or
jle
pusha
jns
jmp
push
jle
push
out
pop
cmpsb
scas
aas
test
insb
pop
xchg
xchg
add
pushl
outsb
mov
jle
mov
dec
push
call
inc
inc
push
idiv
fwait
and
mov
jae
sbb
mov
mov
push
or
aas
cmpsl
pusha
push
aas
jo
xor
inc
jo
jno
jmp
push
mov
xchg
outsb
fldl
sbb
loopne
arpl
in
xchg
mov
push
pop
add
repnz
cmp
cwtl
nop
sti
mov
xorb
push
dec
insb
notb
lret
cli
and
jo
clc
iret
cwtl
nop
addr16
sarb
rcr
dec
call
movsb
mov
iret
pop
fwait
test
mov
xor
ret
cmp
stos
mov
inc
vmulps
mov
inc
push
shrl
cmp
inc
lods
and
into
je
insb
movsl
mov
xchg
and
pop
and
cmp
add
std
repz
bound
xchg
js
mov
cmc
cmp
pushf
xchg
jg
and
or
in
fnstsw
push
aaa
cmpsl
fidivrs
add
loopne
and
inc
and
jecxz
xlat
xchg
inc
cmpsl
std
iret
pop
mov
movsb
mov
lret
js
push
cld
shlb
mov
rol
xor
dec
mov
shr
add
mov
and
das
ret
adc
lahf
push
mov
add
mov
push
inc
mov
xchg
xor
sub
pusha
cmp
sub
push
jmp
push
mov
cld
pop
cmp
mov
mov
or
xor
and
push
jae
je
cwtl
push
mov
test
cltd
pop
frstor
idivb
cmp
cmp
push
shrb
lods
stos
stos
jbe
add
jg
adc
aam
sbb
and
das
inc
cmp
pop
add
xchg
or
and
fabs
mov
popf
pop
mov
pop
dec
lahf
push
pusha
pop
lahf
clc
pop
sahf
xlat
sbb
repnz
loopne
int
pop
push
xchg
pop
jg
pop
daa
mull
popf
inc
sbb
inc
and
pop
subb
sbb
test
inc
ret
test
jg
adc
out
cltd
xchg
push
jmp
out
add
test
push
sub
push
fstpl
repnz
adc
daa
aaa
cmp
popf
pop
rolb
bound
and
stos
jmp
xor
sbb
es
roll
inc
scas
ret
stos
into
in
cmp
push
lock
es
and
mov
jb
popa
mov
stos
xlat
outsb
push
push
push
lods
data16
cs
ds
adc
xlat
xchg
sbb
popf
out
pop
call
xchg
pop
mov
cmp
imul
push
gs
mov
jno
sbb
mov
adc
add
ljmp
mov
and
mov
push
addr16
sub
lahf
adc
es
popa
pop
xchg
inc
out
data16
push
aam
cmp
mov
aaa
rorb
dec
je
fisttpl
inc
cmp
jns
out
pop
lcall
loop
scas
push
arpl
repnz
mov
pop
bound
xchg
scas
xchg
jp
sub
out
lods
adc
sub
cmp
jb
ss
xor
fwait
xlat
inc
sub
mov
add
lahf
mov
in
jb
cmp
ss
fwait
xor
ficomps
mov
rcrb
xchg
push
daa
sub
pushf
les
test
mov
mov
imul
xchg
sbb
bsf
movsl
mov
gs
mov
sbb
pop
fdivp
fistl
fidivrs
mov
test
cmpsb
inc
daa
dec
aas
imul
mov
scas
adc
mov
repnz
je
repz
jno
pop
xchg
ss
adc
shl
push
jne
sbb
movsb
mov
out
hlt
or
dec
ds
push
scas
call
push
pop
clc
aad
stos
fcomps
xorb
aad
mov
mov
cmpsb
out
idivl
xlat
iret
cmpsl
mov
movb
add
ret
mov
mov
daa
fdivrl
push
add
fnstcw
out
mov
scas
lcall
cmp
mov
clc
xchg
data16
adc
aad
clc
sti
aas
cmp
cmp
or
cmp
inc
xchg
push
cmpsb
mov
icebp
aam
aaa
add
xchg
arpl
scas
scas
negl
loop
dec
mov
pop
mov
loopne
psllw
mov
test
xchg
enter
lahf
clc
dec
and
jns
add
daa
cmpsb
push
test
lds
pop
mov
cmp
add
push
mov
jg
jle
xor
loopne
or
das
cmp
mov
xchg
ja
xchg
out
test
loope
jmp
cmpsl
jns
mov
sbb
ss
outsb
ds
inc
push
cld
lcall
fidivl
pop
out
mov
inc
xchg
loope
mov
add
cmp
mov
jge
fisttps
mov
ret
and
sbb
push
ljmp
sbb
and
jg
push
xchg
dec
pushl
in
fidivrl
push
cmp
jae
ficomps
inc
cmp
aaa
push
cmpsl
aad
testl
xor
sub
in
pop
add
les
mov
mov
pop
dec
idivb
ljmp
push
xor
popa
adc
inc
fsubrl
lcall
xlat
ds
fwait
ljmp
dec
les
mov
dec
mov
sub
xchg
mov
pop
add
push
test
cmp
mov
pop
and
cld
jp
jns
lret
xorl
arpl
test
mov
xchg
push
xchg
cmpl
addb
mov
lret
addr16
rcll
and
pop
cmove
fbld
push
arpl
popf
cmpsb
xchg
nop
outsb
outsl
add
pop
mov
mov
ds
and
or
lret
pop
lahf
pop
xor
cmp
inc
loope
xor
dec
aam
adcl
mov
mov
test
and
insl
add
sub
loopne
iret
lcall
in
push
mull
jns
push
sbb
push
fst
sbb
mov
adc
rcrb
lahf
sti
jnp
pop
xor
cmpsl
jne
out
inc
ss
mov
imul
pop
lahf
mull
aam
pop
push
lods
jle
add
scas
and
daa
pop
lret
xor
and
std
fwait
sub
adc
or
mov
gs
jmp
xlat
pop
lcall
ljmp
rorl
inc
cmp
jp
aaa
xchg
push
sbbl
mov
mov
shlb
arpl
fdivrl
scas
test
cltd
xor
lahf
lcall
popf
jae
cmp
adc
xchg
dec
fs
or
sti
sar
sub
fidivs
sbb
pop
add
addl
fs
jge
movsb
pop
ds
popa
sti
cmp
cmpsb
je
fs
into
cmp
xchg
rcll
dec
pop
ret
stc
xchg
loop
inc
mov
loope
test
icebp
out
mov
pop
sbb
inc
inc
outsb
mov
push
addr16
xchg
sub
pop
lea
mov
mov
mov
js
mov
push
icebp
gs
push
repnz
inc
mov
in
push
cld
sub
xchg
cmp
sahf
push
jmp
jg
add
mov
pop
cmpsl
daa
push
dec
movsl
cmp
cmp
xor
push
int3
les
arpl
aas
gs
xchg
dec
inc
stos
and
js
insl
adc
or
repnz
cmp
idivb
pop
dec
sahf
stc
and
and
sti
pop
mov
loope
push
out
outsb
cmp
mov
cmp
daa
and
cwtl
insb
pop
sbb
es
int
out
insb
inc
scas
or
xchg
mov
xor
jle
loop
std
mov
out
pop
fcompl
cmpsl
mov
xchg
cmp
jecxz
call
cmp
inc
inc
mov
or
push
shlb
mov
fisubs
mov
and
inc
arpl
imul
pop
nop
cmp
lahf
jl
loope
cmp
sub
mov
xor
dec
ret
int
bound
or
sbb
test
push
arpl
push
loope
jg
mov
ret
ret
pop
xor
jb
cltd
add
sbb
dec
cmp
sarb
xor
lea
adc
jecxz
sub
inc
popa
sub
gs
pop
jl
pop
cmovb
out
jnp
adc
jmp
out
add
int3
sub
ljmp
mov
mov
jl
mov
sbb
int3
inc
cmpxchg
or
jle
pop
and
jecxz
add
mov
jl
mov
adc
mov
adc
jns
iret
bound
xchg
jnp
jg
sbb
sub
insb
cmp
mov
mov
sarl
cltd
in
gs
pop
inc
int3
add
or
xchg
xor
out
loopne
push
aad
xchg
mov
mov
ficoms
out
seta
inc
and
cltd
push
jno
add
sub
mov
inc
xor
enter
inc
fidivl
call
out
xor
pop
jb
jns
ds
and
mov
xlat
push
mov
adc
aaa
mov
bnd
mov
mov
dec
xchg
orb
dec
hlt
xchg
loopne
mov
fs
dec
mov
incb
popa
mov
cmpsl
repnz
push
icebp
xchg
pushf
mov
movsl
jmp
scas
jp
daa
xlat
dec
lcall
inc
and
je
mov
push
adc
daa
jge
xchg
xchg
scas
and
cmp
mov
push
jmp
add
ror
fs
and
pop
sahf
fisttpl
sub
push
mov
out
fsubs
sbb
jb
xchg
popa
scas
es
test
jl
cmp
out
ret
pusha
add
pusha
lock
clc
adc
jno
jmp
mov
and
sub
xchg
sbb
jle
dec
leave
into
jb
icebp
sbb
push
add
inc
cmp
push
pop
pop
fmuls
or
jg
mov
mulb
jo
clc
mov
mov
push
or
adc
push
iret
add
repz
ljmp
push
sub
xor
call
sub
pop
jle
in
pop
and
insl
ljmpw
sbb
inc
jb
mov
xchg
jbe
inc
inc
add
inc
jns
cmpsb
push
xor
push
mov
inc
cwtl
jb
das
dec
iret
repz
sbb
scas
iret
test
mov
cli
jne
out
inc
daa
sub
sub
xor
jno
notl
and
nop
mov
mov
and
adc
dec
outsb
lahf
dec
cltd
mov
fwait
mov
push
lods
nop
push
adc
or
cwtl
aas
xchg
cmpsb
cmp
fisubl
mov
mov
pop
daa
pop
inc
lods
or
push
mov
or
mov
push
inc
xor
cltd
cmp
xchg
sbb
sub
int3
sbb
in
jecxz
stc
pop
adc
sub
pop
mov
inc
xchg
xor
jle
jp
push
push
mov
sbb
loopne
out
inc
inc
fs
aaa
fidivs
xor
mov
cwtl
push
cmpl
mov
aas
mov
ja
cmp
mov
add
mov
test
stos
in
ja
pop
mov
cmpsl
sbb
test
adc
xor
fst
pop
mov
cmp
imul
scas
sbb
adc
popa
sbb
mov
jo
xchg
fidivs
in
scas
mov
add
int
mov
push
cs
sahf
pop
lods
add
notl
adc
arpl
sahf
sti
sub
jbe
inc
iret
int3
ja
mov
cmpsb
out
pop
popf
mov
outsl
sarb
ds
jecxz
fstpl
lea
movsl
push
xor
sub
daa
inc
pop
push
jecxz
mov
pop
cmpsl
adcl
lahf
pop
jns
lods
xchg
leave
push
loopne
and
std
ljmp
ficompl
sub
mov
stc
push
xor
cmp
and
filds
iret
jno
mov
addr16
cmpsb
les
xchg
sarb
dec
es
inc
jp
dec
pop
xor
movsl
fisubl
push
push
dec
add
out
cmpsb
mov
icebp
addl
lret
hlt
outsl
mov
push
cmp
jmp
cmp
mov
jae
adc
mov
push
std
xchg
jns
std
mov
addr16
sub
pop
cmpsb
jbe
cs
push
mov
sub
sub
mov
cmp
in
mov
mov
sahf
pop
dec
and
aas
lea
pop
outsl
xchg
mov
lea
int3
shll
xchg
sub
xor
hlt
mov
xchg
xor
mov
jnp
outsb
fnstcw
xchg
ret
imul
xchg
inc
loopne
lods
lods
pusha
subb
and
fisubl
sbb
sub
or
mov
frstor
fbstp
xchg
push
fucom
jl
loop
lock
xchg
mov
inc
mov
pop
repz
dec
mov
mov
arpl
add
mov
test
push
xor
pop
mov
popaw
aad
push
inc
loopne
lret
out
lcall
repz
and
ret
in
pushf
lea
xchg
pop
sbb
mov
gs
inc
cmp
arpl
fidivl
cmp
jmp
mov
dec
mov
mov
xor
loop
inc
sub
add
lcall
or
nop
push
sbbb
jge
mov
mov
outsb
sub
mov
push
pop
xchg
mov
inc
dec
cmpsb
push
xor
leave
jge
mov
dec
in
subl
xchg
insb
lret
pop
daa
loopne
push
cltd
mov
mov
das
sbb
xchg
inc
jge
popf
xor
cwtl
lock
test
add
jl
pusha
in
xchg
insl
jecxz
loop
js
das
inc
outsl
sbb
es
gs
dec
ret
out
xor
xchg
and
xchg
xchg
les
jg
bound
ret
in
bound
mov
lcall
popa
fildl
test
arpl
mov
aaa
pop
test
xor
icebp
out
nop
int3
sarb
lock
dec
jle
iret
xor
jo
ds
scas
test
movsb
ss
fdivl
add
inc
enter
shlb
pushf
push
test
adc
stc
and
int3
xlat
push
sub
jnp
xchg
ret
aas
jae
inc
mov
int3
xlat
xor
movsl
js
in
inc
movsl
inc
xchg
ficoml
jae
mov
xor
lret
pushf
and
stos
jbe
inc
int
mov
lcall
test
jae
fnstcw
push
fbld
out
fldl
fisubrs
ret
je,pt
loop
movsb
imul
pop
lea
cmp
push
mov
mov
and
mov
ror
sub
jb
iret
rcll
pop
xor
xor
and
ficompl
data16
mov
gs
cmpsb
cmpsb
icebp
xchg
xchg
pop
lea
je
icebp
or
ds
rclb
and
lods
cmpsb
cmpsb
jg
loop
pusha
pop
xchg
test
sbb
ja
add
pusha
outsb
dec
mov
fcompl
shlb
leave
inc
push
stc
lret
xchg
adcl
leave
xchg
movsb
pop
dec
xchg
mov
das
mov
add
jbe
add
jmp
out
xbegin
mov
cmp
cmpsb
ss
loop
inc
cmp
jmp
push
cltd
xchg
adc
stos
lock
aad
pavgw
sahf
shlb
add
mov
loopne
jl
cmp
mov
out
xchg
adc
adc
cli
push
pop
adc
push
pop
adc
in
popf
cld
sub
adc
xorl
xor
inc
jg
cmp
push
fistl
arpl
fwait
inc
jg
addr16
adc
or
mov
scas
jle
cli
movsb
sbb
add
cltd
xchg
out
jmp
inc
popa
and
popf
jno
cwtl
lcall
jne
scas
lcall
adc
cwtl
mov
lds
pop
aas
div
loope
out
xchg
add
rclb
xor
sub
out
gs
notl
cli
and
rep
sub
adc
sub
sbb
cmp
push
add
orb
jmp
push
mov
test
or
popf
xchg
fsubr
xchg
adc
out
xchg
or
xlat
call
enter
add
jp
lahf
sbb
push
pop
or
sub
pop
pop
std
repz
orb
xchg
jb
inc
and
repnz
cltd
xchg
cmp
mov
int3
add
xchg
mov
cmpsl
jbe
jmp
out
div
lcall
cmpsb
data16
addb
mov
insl
ficoml
mov
in
pop
inc
adc
orl
mov
cmc
pop
sub
idiv
add
jno
sbb
adc
filds
xchg
les
rcll
mov
dec
and
ffreep
sbb
cmp
mov
mov
inc
rol
xchg
xchg
mov
ret
mov
sub
jo
movsl
jbe
pop
xchg
cmp
xchg
xchg
lcall
add
loopne
cmpsb
inc
push
mov
xorb
sbb
mov
insl
jge
or
repz
mov
test
pop
push
out
lret
adc
imul
pop
jnp
mov
test
push
dec
bound
adc
xor
out
xor
xor
icebp
mov
mov
inc
pop
adc
and
mov
dec
insl
mov
mov
add
clc
mov
mov
pop
jbe
imul
mov
jp
mov
das
add
mov
cmp
mov
stc
xchg
or
dec
dec
ja
nop
mov
imul
pushf
jle
mov
pop
cmp
pop
jmp
in
lcall
xchg
pop
test
cld
cli
dec
mov
sbb
inc
pusha
xor
popa
cmp
jecxz
iret
scas
mov
loop
adc
repz
push
push
nop
popa
mov
enter
popa
repnz
dec
pop
pop
fisubrs
daa
test
mov
adc
jge
addr16
out
pop
inc
mov
fists
adc
dec
cmp
sbb
cmpsl
out
out
xor
stos
mov
jmp
sahf
sbb
andb
daa
loop
hlt
mov
js
jno
insb
jle
mov
shlb
subl
out
outsb
add
pop
dec
xchg
movsb
sahf
cmpsb
test
out
ss
mov
cmp
movl
loop
or
data16
mov
sti
xor
dec
and
jmp
cmpsb
adc
ja
dec
xor
add
xor
jle
adc
in
dec
sbb
movsl
adc
cmpsb
out
out
out
popa
fiaddl
lcall
mov
sahf
imul
shll
push
xor
jmp
mov
jle
mov
pop
sub
dec
cmp
or
stos
in
lods
into
mov
sarb
jmp
push
mov
sbb
pushf
or
mov
ret
sbb
outsb
dec
xchg
sub
inc
test
lods
add
test
xchg
in
mov
jno
sbb
add
mov
mov
and
push
ror
or
aaa
shrl
js
push
sub
pop
xor
sub
jge
es
in
xchg
pop
jne
inc
in
stc
mov
imul
popf
dec
mov
mov
into
push
mov
popa
push
testb
cmp
jae
testl
lret
cmpl
and
xor
mov
jnp
mov
push
into
daa
jg
imul
int3
enter
mov
inc
outsl
sbb
inc
push
cmp
jl
cmp
jp
inc
and
and
sti
out
cmp
lahf
daa
mov
aas
sub
and
xchg
loop
mov
add
adc
roll
inc
adc
pop
mov
cmp
push
mov
push
push
push
cmpsl
imul
mov
sbb
lret
pop
repz
dec
test
data16
icebp
aas
sbbl
aas
push
mov
adc
dec
hlt
aam
add
sub
xchg
sub
aaa
cmp
and
mov
shrl
daa
adc
paddw
mov
lods
pop
add
fiadds
and
test
push
mov
cli
cli
mov
mov
dec
repnz
pop
mov
sbb
inc
pop
jae
in
jnp
lods
jg
add
cli
dec
jmp
pop
sub
xor
es
push
and
mov
inc
imul
jb
aaa
add
fistpll
lahf
or
outsb
arpl
es
addr16
test
pop
ss
dec
jg
cmp
pop
cmp
lods
dec
ljmp
pop
inc
xor
movsb
daa
ret
out
add
pusha
lods
rclb
push
cld
xchg
push
repz
cmp
inc
pushf
cli
lahf
pop
pop
pop
arpl
loop
fsubrs
shr
ja
popf
lea
pop
push
mov
push
mov
arpl
xchg
rcrb
mov
out
xchg
inc
mov
sarl
idivl
out
and
inc
in
sti
sub
mov
or
rcrb
pushf
push
lods
and
cmp
jg
cmpsb
xor
push
out
mov
ja
adc
jp
dec
dec
shrl
adc
and
mov
es
jmp
push
sub
sbb
arpl
cmp
shrl
jae
xor
xchg
loopne
fdivl
push
fsubrs
fldt
dec
les
cmp
lods
stos
shlb
sbb
jb
xchg
xchg
pop
dec
adc
call
rorb
or
mov
gs
push
ds
syscall
mov
push
enter
mov
sub
mov
jno
push
jecxz
sbb
sbb
cld
jmp
or
cmc
mov
mov
mov
or
dec
bound
aaa
mov
cmp
pop
mulb
insb
loopne
sbb
jecxz
mov
mov
cmp
xchg
cwtl
mov
jnp
mov
stc
mov
sbb
jae
in
aas
test
fldcw
cmp
dec
fdiv
inc
push
xchg
bound
aam
mov
pop
jle
out
mov
pop
ficomps
xlat
mov
and
inc
xlat
cmpsb
pop
mov
lret
xchg
adc
and
push
mov
lock
bound
int
fisubs
les
push
pop
and
xchg
ficoms
jae
pop
stos
enter
fldt
lcall
push
mov
pop
xor
outsb
dec
xor
push
or
jae
or
aaa
mov
imul
inc
push
inc
lahf
pop
push
leave
dec
ss
mov
mov
jae
leave
jecxz
adc
mov
int3
in
insb
leave
lret
push
sub
out
inc
pop
loop
jnp
nop
push
fnstcw
repz
std
xchg
jg
sbb
loop
inc
test
sbb
out
sbb
popf
dec
pushf
mov
orl
scas
sbb
inc
lcall
cmp
mov
and
pop
ds
sub
imul
mov
mov
mov
ljmp
jmp
pop
sbb
into
push
lods
push
rcrl
xchg
xchg
or
add
mov
mov
dec
loopne
add
jl
add
jecxz
cmp
cmp
arpl
push
popa
scas
dec
mov
data16
int3
ret
mov
and
sbb
in
mov
or
int3
enter
ret
fisubrl
adc
lret
into
push
cmp
cmp
lret
pop
jp
mov
add
jle
int3
cmpsl
jg
mov
sbbb
fsubp
mov
cs
mov
jo
test
dec
in
iret
add
test
pop
outsb
and
dec
in
mov
ss
adc
lock
fwait
mov
lea
mov
jg
cmp
dec
cld
cmp
loope
lods
fcmovnu
stc
mov
std
popa
mov
insl
pushw
repnz
jne
mov
inc
xchg
and
out
loopne
test
data16
dec
xor
mov
jp
dec
das
pop
mov
inc
repnz
inc
iret
iret
fwait
cmp
cmp
and
cmpsl
cs
fsubr
ret
ret
mov
jmp
sti
or
imul
lds
andl
fiaddl
mov
xchg
push
hlt
faddl
sub
sub
stos
xor
bnd
xchg
es
and
hlt
ficompl
pop
popa
fists
push
and
hlt
adc
frstor
jne
outsl
dec
pop
sub
lds
out
divl
cld
mov
addr16
push
mov
popf
sti
xor
push
xchg
shll
cmp
dec
xchg
fiaddl
cmpsl
inc
push
add
ljmp
nop
cmp
mov
push
ljmp
inc
pop
pop
in
sbb
out
in
adc
adc
mov
sbb
testl
pushf
pop
mov
lds
pop
xchg
rep
pop
iret
test
inc
ss
add
inc
cmpsl
mov
ficompl
sarb
addr16
stos
fwait
insl
dec
pushf
pop
imul
pop
ja
shl
arpl
cmp
ss
test
xchg
cmpsl
test
jg
jne
stos
push
into
dec
daa
pop
jg
cmp
lcall
adc
pop
cmp
push
test
es
ret
sub
push
adc
jb
dec
pop
mov
movsl
pop
aas
popl
pop
popa
jno
or
insb
adc
sub
or
fwait
xchg
leave
pop
out
cmovge
and
out
sbb
or
cmp
mov
mov
cmpsl
mov
fbstp
stos
jmp
jae
pop
push
pop
fbld
dec
lahf
test
jno
pop
cmp
and
pushf
and
fdiv
fwait
push
fnstenv
or
or
mov
add
xchg
xchg
mov
fcoml
inc
jno
addr16
es
xchg
sub
cmp
pop
lcall
jg
cmp
xor
xchg
pop
leave
mulb
mov
pop
adc
add
ret
daa
inc
adc
ja
jl
out
outsb
xchg
fwait
jecxz
xor
outsb
dec
xchg
inc
mov
andb
lahf
mov
out
aad
mov
push
and
aam
sbbl
lahf
aas
xchg
cs
ss
push
pop
adc
cmp
into
stos
addr16
sbb
mov
sub
cmpsl
cmpsb
in
mov
jle
mov
add
inc
mov
cmpsb
push
mov
fcmovnu
pop
daa
pushf
sbb
test
mov
ret
add
es
jmp
repz
daa
mov
out
and
xlat
xchg
mov
cmp
mov
imul
jmp
insb
cmpsl
ret
outsb
sub
jecxz
ror
je
and
cmp
push
mov
dec
mov
mov
add
inc
jl
test
mov
pop
pop
roll
push
enter
sbb
and
fs
dec
inc
xor
sbb
push
xchg
outsl
outsb
in
pushf
daa
mov
ret
movsl
je
adc
xchg
mov
sub
mov
sub
loope
out
dec
mov
popa
and
pop
fwait
push
adc
arpl
jae
arpl
cmp
cmp
out
fnstsw
xchg
sbb
push
ss
pushaw
es
cmpsl
popa
and
cmpsl
cmpsb
insb
mov
xchg
cltd
push
adc
inc
mov
or
out
xchg
stos
adc
pusha
or
int3
sub
pop
or
ret
jb
insb
aas
es
andl
ret
into
push
pop
pop
jp
ret
inc
xchg
icebp
movsb
cmp
andb
insb
ss
loopne
into
jns
jp
push
leave
sub
or
pushf
fs
mov
and
cmpsb
faddp
sub
mov
mov
imul
leave
hlt
jecxz
aad
ss
pop
fisttps
testb
xor
xor
inc
push
mov
rolb
testl
scas
das
sub
shll
jb
iret
mov
adc
or
in
jle
out
dec
out
xchg
xchg
aas
cmp
lret
ja
mov
js
shll
pop
cmp
popa
inc
jmp
aad
outsb
jae
loope
jge
mov
mov
sbb
pop
cs
push
daa
rclb
mov
xor
pop
pop
xorb
lret
lret
xchg
inc
lahf
sbb
pop
push
ja
pop
add
popa
movsb
and
and
xor
dec
ret
bound
cld
in
stc
pop
mov
adc
push
cmp
sub
push
push
mov
xor
jnp
lock
dec
inc
xor
orl
xchg
je
mov
divb
bound
mov
lea
pusha
dec
outsb
call
push
sbb
dec
inc
push
addr16
ficompl
aad
jp
push
xor
test
and
or
push
adc
cmpsl
pop
jne
addl
aad
imul
loopne
fstl
hlt
minps
xchg
js
and
push
mov
jl,pt
aad
cmpsl
xchg
loop
xchg
mov
mov
xchg
cmpsb
and
jae
add
jb
loop
jo
mov
push
fidivl
movsl
jno
add
add
rcrl
repz
cwtl
mov
test
js
xor
mov
push
ss
cmpb
xchg
stos
in
jmp
lods
push
gs
cmp
adc
mov
mov
xorb
call
dec
mov
ja
fs
xor
xchg
int3
mov
lcall
or
xchg
jno
sub
sahf
mov
je
in
rcl
in
lods
pop
jecxz
mov
inc
out
mov
cmp
mov
inc
dec
aas
cmpsl
fcmovne
lahf
ficoml
and
adc
and
xor
sub
out
dec
pop
mov
xor
or
lcall
inc
sub
lret
xchg
sbb
loop
sub
aas
outsb
out
in
cli
inc
mov
ss
pop
cmc
lods
sbb
mov
js
push
xchg
nop
pop
loopne
and
aas
sti
cmp
jns
mov
sub
ret
or
and
xlat
icebp
jnp
sbb
push
mov
out
loop
fldl
fidivs
mov
int
fwait
stc
add
xor
mov
scas
pusha
mov
sbb
cs
sti
loop
shll
ss
imul
out
into
push
dec
fstpt
mov
inc
adc
adc
adc
cmpsb
mov
test
sub
cmp
jle
pop
inc
or
mul
cmp
dec
push
mov
cmp
pop
pop
in
pop
or
ret
cmp
fidivrl
inc
call
adc
movsb
jnp
xchg
or
ljmp
jne
inc
lcall
aas
lea
jne
jne
out
jg
xor
stos
mov
and
and
loopne
fcomps
ds
xchg
arpl
arpl
repz
aam
xchg
ja
cltd
sub
lahf
inc
pushf
jno
fbstp
cmovge
xlat
sub
inc
nop
fisttpll
cltd
out
lret
dec
and
in
test
in
movaps
mov
sbb
xchg
mov
push
mov
sbb
out
mov
mov
and
and
sbb
push
inc
jp
mov
les
jae
jmp
stos
movsb
rorb
jnp
mov
fcmovu
dec
jge
out
mov
sub
outsb
nop
add
xchg
adcl
bound
fwait
dec
out
add
popa
aas
pop
lcall
pop
inc
xor
mov
popf
dec
mov
dec
mov
in
mov
mov
rolb
inc
jae
outsw
popa
mov
mov
push
sub
testl
sarl
in
sbb
jae
jle
lock
sbb
repz
int
jns
out
mov
inc
mov
aas
lds
xchg
lcall
push
mov
dec
pusha
test
jnp
fldenv
scas
test
jmp
add
and
pop
lods
sbbb
aaa
mov
cmpsb
xchg
xchg
aad
cltd
cli
ret
mov
dec
arpl
or
pop
aad
popa
mov
push
jb
inc
jae
inc
jnp
shrd
pop
inc
or
pusha
pop
addr16
cld
xor
aad
aaa
mov
cmpl
enter
dec
mov
xchg
inc
push
popf
in
mov
into
daa
scas
loope
scas
mov
incb
dec
arpl
fcomps
pop
cmc
pop
clc
shrl
adc
lds
in
sbb
lds
dec
pop
in
ja
leave
cmp
xchg
mov
pop
sub
and
jp
inc
mov
mov
and
push
inc
mov
pop
popf
lods
sahf
ret
mov
mul
sbb
cs
cmc
mov
inc
mov
pop
call
cmp
and
pushf
dec
sub
aas
fisubrs
bound
in
daa
mov
add
test
xchg
pop
inc
jbe
jbe
dec
adc
jg
or
pop
cmpsl
test
jge
cwtl
je
inc
dec
adc
pop
repnz
push
adc
lds
mov
mov
lret
icebp
and
in
lcall
xor
fs
adc
pop
sbb
cli
pushf
pop
in
jmp
movsl
sbb
sbb
and
mov
and
std
aas
stos
add
mov
mov
cmp
popa
cmp
mov
push
mov
mov
and
aam
and
les
and
fnstcw
inc
or
add
shlb
push
int
push
outsb
and
dec
or
iret
cmp
or
mov
adc
jecxz
and
inc
stos
dec
xchg
jge
dec
in
mov
ret
std
jb
and
fistl
std
cmp
pusha
mov
pop
inc
xor
bound
mov
inc
mov
xchg
push
outsl
xchg
inc
shll
add
jo
test
sbb
or
in
jecxz
popw
cmp
lcall
or
les
dec
in
cmp
jns
push
xchg
movsl
cmp
push
xchg
inc
ret
dec
test
dec
sti
sub
aas
hlt
insb
pop
sbb
jns
add
mov
inc
xor
sbb
adc
mov
movsl
movsl
jae
rcl
mov
and
sub
jb,pt
sbb
insl
push
fistpll
jb
or
fisubs
outsl
mov
outsl
mov
nop
jp
andl
in
jmp
daa
pop
je
pop
fmull
enter
iret
aas
cltd
js
aaa
mov
ss
lods
or
dec
movsb
leave
dec
aas
test
jle
push
mov
pmaxub
jno
adc
pusha
in
frstor
inc
sbb
xchg
mov
mov
sub
sbb
es
mov
pop
push
shll
sarl
xlat
jl
mov
inc
sahf
push
testl
xchg
jno
pop
mov
xor
call
fdivrs
adc
sbb
pop
fwait
add
push
and
push
lcall
sub
or
sbb
pop
stc
insl
fwait
lea
into
cld
cmp
lock
cmp
sub
jl
inc
xchg
js
jae
scas
lret
out
xchg
and
dec
cmpsl
inc
mov
leave
sahf
xchg
test
push
sub
xlat
mov
inc
sub
repz
jns
shlb
sub
mov
incl
sbb
lds
shrl
lcall
lods
xchg
rol
sub
ss
add
pop
rcrl
mov
int3
mov
mov
sbb
dec
add
inc
mov
inc
jbe
ljmp
fnstcw
popa
aaa
xchg
lahf
mov
push
rcr
arpl
and
daa
inc
mov
jle
jbe
mov
rol
pushf
mov
lret
scas
inc
movsb
stos
cmp
push
loope
sub
sub
dec
pop
and
mov
pop
pop
or
and
xor
pop
inc
stos
push
mov
daa
loop
adc
cs
loopne
or
call
dec
rcrb
pop
cli
popl
repnz
ffree
push
imull
aaa
cmp
fs
xor
scas
les
dec
or
and
push
cmp
jle
or
fisubrs
inc
adc
add
jecxz
loopne
into
mov
and
mov
je
inc
les
xor
mov
pop
out
mov
cmp
jge
mov
mov
aas
and
pop
into
sub
dec
adc
inc
shrl
sbb
out
jp
loopne
xchg
mov
ljmp
mov
pop
dec
inc
xchg
cs
or
xlat
cmp
jg
mov
and
repz
leave
sbb
andb
and
xor
shl
icebp
in
cmc
sti
pop
lret
int
xor
mov
push
mov
mov
imul
stc
shlb
call
mov
mov
sbb
fidivl
jmp
ficomps
xchg
dec
push
mov
inc
jmp
mov
jle
jne
lock
mov
or
xchg
add
and
subl
push
cmp
stos
cwtl
dec
in
aam
adc
mov
fstl
jns
sub
jp
data16
xor
lret
inc
or
mov
pop
xlat
loopne
stos
add
lret
mov
mov
dec
sti
push
sub
inc
aaa
sbb
push
test
pop
jg
xchg
cmp
nop
ds
fwait
mov
das
sbb
fwait
or
push
stos
jns
les
cmc
mov
cmp
or
sub
mov
sbb
mov
pusha
insb
sbb
cmp
test
jecxz
adc
pop
ficompl
daa
jle
mov
addr16
ljmp
xlat
push
out
cmp
adc
les
push
out
gs
sub
out
enter
inc
sub
mov
mov
pop
xor
push
mov
leave
lret
test
and
cmp
out
sub
lods
jnp
imul
cmp
mov
loope
xchg
addl
jmp
test
out
pop
pop
sbb
inc
leave
cmp
cmpsb
inc
pop
inc
lds
push
sub
add
and
mov
fs
xchg
sub
xchg
mov
incb
sbbb
inc
pushf
aas
mov
stc
fisubrs
divb
adc
insl
sbb
repnz
inc
ret
scas
ja
sbb
mov
jne
repnz
pop
mov
pushf
aam
cmp
inc
inc
mov
mov
cmp
gs
push
inc
mov
aas
inc
roll
stos
es
pop
es
sub
xor
bound
pop
addr16
cs
jno
inc
inc
rorb
adc
jp
inc
sbb
pop
add
movsl
fists
adc
lods
dec
pop
mov
add
mov
dec
out
movsb
adc
scas
add
bound
push
scas
sub
and
mov
icebp
add
inc
and
jp
repnz
cmpsl
pusha
int
shrl
ljmp
jp
cmpsb
fcomi
push
sub
and
push
push
xchg
data16
push
aas
mov
subb
dec
je
mov
scas
push
out
mov
xchg
in
aam
loopne,pn
mov
es
xchg
xchg
call
pop
loope
xor
out
addr16
stos
push
adc
arpl
les
xchg
add
je
mov
test
mov
jb
mov
push
dec
inc
sbb
dec
pop
es
mov
mov
push
mov
add
xchg
ja
aas
fwait
ret
sbb
mov
es
pop
into
pusha
mov
lret
scas
movsl
cmpsl
mov
es
daa
out
mov
movntq
lods
sbb
sub
fistl
arpl
pop
inc
fcoml
and
push
ds
ret
outsl
sbb
mov
stos
xor
mov
ja
sbb
mov
cmpsl
popa
mov
daa
pop
jecxz
lea
fdivrs
mov
aas
push
pop
fiadds
cmpsl
cmp
fs
ljmp
mov
lea
popa
iret
inc
xor
sub
jge
push
mov
insb
dec
outsb
pop
xor
sub
jl
icebp
inc
pop
neg
pusha
fwait
dec
hlt
and
sub
sub
add
sub
repz
ss
mov
xor
hlt
xchg
push
jp
jnp
fsts
stos
cs
pop
push
bound
dec
mov
icebp
adc
mov
xchg
jnp,pn
addb
cmp
push
popa
popf
sbb
lcall
pop
pushf
add
mov
sbb
dec
cmp
push
cmp
shll
xor
mov
jae
out
sti
lods
imul
xchg
and
imul
pushf
add
int
lcall
jge
popf
call
imul
or
popa
js
arpl
add
pop
je
bound
mov
xchg
xor
xor
cld
sarb
pop
mov
jae
stc
call
xchg
enter
lock
cmpl
mov
pusha
push
loopne
aas
pop
mov
xchg
mov
add
cmpsb
popf
cmp
ret
pop
lahf
adc
mov
add
lret
aas
out
jg
cmp
push
push
mov
ficoms
roll
addr16
xor
test
and
mov
clc
pop
cmp
or
imul
push
mov
out
fisubrl
xchg
movntq
push
outsl
mov
aad
pop
movl
xchg
inc
cmpsb
mov
adc
scas
mov
stos
inc
pop
dec
inc
adc
mov
data16
inc
cmpsl
add
dec
pop
xchg
pop
arpl
push
mov
mov
lcall
aaa
iret
rcrb
jp
fnstenv
mov
sbb
adc
imull
jge
imul
mov
cmpsl
inc
xchg
xor
mov
daa
mov
movsl
jbe
incb
cmpsb
imul
xor
lea
testl
lret
cmpsb
in
shlb
xchg
ss
pushw
pop
pop
scas
pop
xchg
adc
mov
daa
push
lock
sub
inc
loop
outsl
ja
into
les
repnz
mov
or
sub
xor
hlt
rcr
xchg
push
int
xor
pusha
lret
mov
sahf
pop
mov
push
mov
repz
daa
loop
iret
cmpsl
and
jb
cmp
imul
inc
xor
int
scas
or
loop
iret
xor
dec
push
ja
mov
mov
cmp
cmpsl
add
adc
xchg
pop
sbb
push
xor
out
stos
negl
cmc
mov
hlt
mov
fimuls
adc
cmpsl
mov
mov
filds
dec
pop
mov
jp
inc
push
dec
pop
popa
mov
push
mov
das
fisubl
cmpsl
and
fidivrl
dec
popf
jae
sbb
int
loope
adc
popf
fwait
bound
cmp
ds
and
rdmsr
jl
cwtl
xor
or
in
out
shlb
shrb
fidivrl
and
push
xor
addb
movsb
mov
sbb
mov
mov
mov
aad
xchg
cltd
xor
pop
fldenvs
sbb
cmc
or
sbb
pop
sub
stc
xchg
es
aas
push
movsl
movsl
js
divb
or
loop
cmp
and
mov
sub
mov
mov
mov
nop
sub
and
iret
and
pop
sub
push
mov
ret
mov
popf
push
pushf
inc
lock
jp
cmp
dec
test
aas
adc
lret
lret
stos
notl
mov
cmpsb
push
cmpsl
gs
ja
pop
in
aas
fsubr
lret
cmp
pop
xchg
pop
daa
sbb
and
subb
cltd
fistps
xor
rcll
mull
dec
fsubrl
sub
fcoms
sub
jle
dec
iret
sbb
adc
mov
adc
jo
rclb
pop
div
and
lcall
or
or
popf
in
out
out
popf
and
mov
aaa
or
ljmp
mov
adc
xchg
out
xchg
sub
mov
adc
pop
loope
inc
aaa
cmpsb
pop
repnz
repz
icebp
ret
inc
xchg
lock
les
lods
add
mov
leave
hlt
add
test
movsl
and
fildll
rep
out
mov
sbb
sbbb
push
mov
mov
cmpsl
mov
adc
lods
mov
xor
insl
cmp
or
cmp
scas
mov
or
cltd
lock
sub
mov
pop
push
in
push
dec
cmpsl
mov
push
dec
sbb
push
cld
mov
je
mov
daa
mov
push
inc
xchg
out
add
es
mov
push
jne
jecxz
mov
ja
jecxz
ret
sbb
dec
fbstp
scas
jns
mov
sbb
mov
sbb
jo
jecxz
into
xor
sbb
xchg
adc
mov
inc
cmp
shll
mov
or
mov
pop
adc
call
aaa
and
aam
and
idivb
xor
cmp
or
mov
popf
xor
inc
es
lret
aaa
xchg
push
in
adc
xor
or
mov
lock
and
mov
xchg
das
mov
push
lret
sahf
int
pop
pop
xlat
mov
data16
jge
in
jno
jmp
mov
psrlq
and
pop
jle
int3
pop
pop
enter
inc
xchg
insl
out
js
jle
xchg
pop
cmp
cld
adc
and
adc
jle
mov
pop
and
fldenv
push
ds
push
add
fwait
adc
pop
cmp
pop
popa
fdivp
cld
fldenv
hlt
adc
mov
inc
jae
fwait
adc
jbe
pop
and
sahf
pusha
cmp
push
mov
pop
or
dec
mov
aaa
jg
mov
adc
les
add
nop
jg
stc
cmp
and
call
dec
cmp
mov
shr
jae
pop
inc
insb
fdivs
and
pop
jecxz
dec
xchg
mov
xchg
adc
pop
cmp
jg
insl
shrl
sub
push
neg
out
mov
mov
sub
aaa
lahf
jns
push
movsl
daa
dec
mov
rol
stos
orps
inc
mov
sbb
mov
mov
outsl
jg
call
mov
push
popa
add
cmp
xor
sub
cmpsl
aas
push
popf
scas
mov
stos
mov
aas
mov
cwtl
js
add
push
inc
jo
mov
xor
mov
xchg
das
xor
jns
xchg
imul
fdivs
movsl
xchg
mov
or
jo
pusha
push
adc
or
sub
divl
mov
aaa
sbb
sub
mov
mov
xchg
fisubl
lret
sbb
enter
insb
loopne
inc
cmp
aas
pop
imul
fs
cmp
fs
stos
xchg
lea
sub
iret
lret
sub
scas
jecxz
repnz
sbb
xchg
sahf
sbb
cwtl
lahf
xchg
roll
idivl
push
sbb
or
xchg
and
mov
sub
test
jg
push
mov
cltd
add
mov
loope
repz
pushf
popa
mull
push
fisubrl
stos
sub
test
shlb
lds
add
jmp
mov
arpl
call
mov
jg
pop
pop
add
mov
xor
pop
add
jg
or
jmp
sub
loope
dec
jge
xchg
jb
pop
mov
in
rclb
loop
fwait
sbb
pop
std
cmp
push
iret
cltd
xchg
dec
sbb
daa
popa
xchg
cmp
cmp
xchg
mov
aas
and
shrl
mov
xor
inc
repz
xor
mov
arpl
push
mov
xor
test
sub
aaa
mov
adc
xor
sbb
inc
out
mov
sahf
push
popa
popf
cmc
inc
mov
stc
cmc
dec
push
sbb
clc
sbb
fnstcw
or
mov
or
sbb
packssdw
mov
sbb
jo
adc
mov
leave
inc
pop
mov
pop
sub
jns
xchg
mov
xor
leave
pop
sbb
roll
mov
arpl
in
sbb
rorb
add
aaa
popf
rclb
fimuls
xor
jle
in
pop
imulb
mov
ds
lea
int
leave
test
pop
sub
test
adc
mov
xor
mov
pop
dec
mov
push
test
movsb
cwtl
aad
out
fs
icebp
les
mov
push
push
sub
aaa
shrl
or
push
pop
jle
rclb
out
sbb
pushf
jb
iret
loopne
insb
sub
outsb
push
mov
mov
xchg
out
incl
mov
and
cltd
cmpb
mov
cmpl
xlat
mov
pop
scas
fstpt
dec
sub
clc
inc
push
out
aaa
mov
pop
pop
mov
roll
jb
mov
cmpsl
mov
xchg
lcall
mov
out
insb
decb
sbb
and
das
shr
push
push
idiv
clc
leave
imul
aad
outsl
and
int
scas
xor
push
sub
cli
das
sbb
inc
cmpsb
push
mov
icebp
popa
pop
loopne
dec
fs
xlat
sub
popf
cmp
lock
adc
sbb
cmc
test
mov
fbstp
inc
push
push
dec
mov
sub
xchg
pop
scas
mov
inc
repnz
jg
mov
jb
popl
lahf
mov
push
data16
mov
xchg
sub
nop
push
jle
cmpsb
mov
fdivr
ds
mov
jp
es
outsl
cmpsb
sahf
dec
ficomps
xchg
mov
jb
pop
xor
mov
out
inc
test
and
sbb
int3
sti
cmp
in
cmpsb
jno
mov
and
sub
fidivrs
pop
mov
mov
out
mov
xchg
daa
mov
xchg
pop
daa
inc
and
dec
jnp
aas
adc
push
mov
jo
outsb
xor
ss
cmp
add
in
push
and
inc
mov
outsb
stos
scas
fisubrl
iret
mov
xchg
sub
mov
add
ficoms
pop
int3
xchg
test
mov
sbb
fs
pop
mov
mov
ret
pop
jb
mov
orb
sbbb
cltd
mov
fs
sbbb
pop
popa
jbe
scas
pop
test
mov
sub
idivb
in
cmc
ftst
cmp
out
adc
imul
andl
jecxz
sbb
insb
dec
jg
push
mov
fmulp
xchg
inc
lea
mov
bound
jge
adc
xchg
in
add
inc
dec
in
cmp
cmp
inc
mov
out
jne
push
cmp
pop
cmp
adc
jle
repnz
or
sub
pop
cli
sbb
data16
push
mov
inc
dec
pop
scas
test
xor
cmp
xchg
and
add
lcall
dec
jae
arpl
and
in
aas
aaa
and
pop
jb
mov
insb
jle
lret
or
pop
mov
ja
sub
test
mov
inc
dec
jae
popf
and
jmp
mov
push
fsubrl
mov
rcrl
pop
stos
mov
inc
popa
test
outsb
inc
sbb
repnz
faddl
outsb
addr16
retw
ret
out
popf
repz
imul
mov
xchg
push
add
inc
testb
and
int
jno
stos
pop
orl
hlt
sahf
inc
mov
in
pop
lcall
jb
mov
mov
lahf
lds
mov
xor
inc
decl
mov
mov
dec
dec
pusha
add
ja
jecxz
jge
add
sarb
negb
or
inc
mov
or
xor
pop
push
xchg
test
insb
imul
test
dec
arpl
mov
clc
mov
and
mov
cmc
add
sub
mov
mov
out
cmp
xlat
out
dec
and
adc
jb,pn
shll
insl
test
ja
mov
pop
add
pusha
loope
adc
fxam
fsubl
push
mov
cmp
popf
adc
push
push
xchg
cmp
or
scas
dec
mov
mov
sub
sbb
xlat
mov
pop
inc
inc
shlb
shll
and
movsl
iret
ja
lods
es
outsl
scas
xchg
mov
adc
mov
jbe
fs
je
and
shl
inc
push
mov
xchg
mov
xchg
mov
jecxz
imul
lss
repz
jge
dec
dec
mov
mov
mov
sbb
cmp
in
xchg
sbb
aaa
enter
dec
push
outsl
lods
popa
inc
subb
mov
cmpsb
into
aas
int3
fsubl
adc
popa
cltd
ja
mov
fadds
mov
shll
jno
fidivl
enter
scas
sti
xchg
cmpsb
gs
add
cmp
imul
pop
mov
movsb
lods
pop
adc
mov
lods
push
cmpsl
lahf
ficoml
pusha
mov
xor
sbb
ja
and
dec
mov
imul
pop
test
push
pushf
shll
in
and
sti
sub
rcr
gs
jo
jp
inc
jne
filds
scas
jno
xchg
fmull
mov
or
dec
mov
add
out
sbb
push
mov
mov
push
ret
jg
jno
bound
daa
and
cmp
shl
fiadds
adc
sub
js
add
and
or
testb
mov
inc
cwtl
in
and
pop
sahf
adcl
and
mov
enter
xor
xchg
push
xchg
lea
popa
xchg
imul
mov
and
or
xchg
and
xchg
jg
cmp
push
jle
jb
pop
out
mov
mov
sbb
sbb
rolb
mov
mov
cs
jg
cmp
popf
dec
arpl
jae
jae
in
lods
mov
pop
cli
outsl
scas
loopne
gs
or
imul
or
and
in
sub
insb
in
js
sub
fwait
das
sbb
das
jns
mov
rclb
pop
movb
xchg
mov
fs
xchg
push
mov
mov
sahf
push
mov
test
loope
cs
inc
mov
jb
ja
hlt
add
add
xor
loop
add
cs
pop
and
sbb
daa
shl
loope
rolb
and
sarl
xchg
add
adc
push
es
adcb
fisttpll
repz
add
and
and
push
pop
stos
popa
shl
sbbb
std
or
cmp
sbbb
push
xor
cli
xor
rcr
inc
addb
mov
inc
dec
jb
push
ret
xchg
roll
es
push
addr16
es
test
xchg
add
xchg
iret
fsubp
mov
mov
and
iret
popf
dec
push
sub
sbb
scas
ss
and
cs
pop
mov
cmp
lret
adc
test
fadds
fs
adc
je
dec
mov
cmp
xchg
mov
sub
and
mov
fisttpl
ss
mov
lods
jmp
xlat
insb
mov
leave
daa
mov
repnz
jnp
pop
pop
and
push
pop
jle
mov
ret
inc
in
lret
out
push
mov
xchg
xchg
jnp
ret
ds
dec
fstpl
add
mov
xchg
stos
pop
xor
inc
movsl
out
roll
es
mov
mov
in
dec
test
iret
inc
in
movsb
pop
pop
inc
add
aas
mov
mov
roll
cltd
sbb
or
test
push
lds
into
aad
mov
fidivrl
test
cltd
inc
cmc
xor
jecxz
out
push
xchg
loop
fs
call
aaa
push
dec
fidivrl
lret
data16
imul
xchg
jecxz
out
popa
xor
and
cmp
daa
lods
xor
mov
ljmp
daa
cs
mov
mov
inc
mov
adc
ror
movsb
testb
lds
add
leave
out
sbb
pop
lret
and
mov
jge
jp
adc
fmuls
rorl
inc
mov
and
aas
pop
roll
push
lahf
cmpsb
xchg
cs
add
xor
testl
pop
nop
push
fistpl
fcom
xor
daa
push
xor
dec
movsl
fs
inc
cli
jb
testb
push
out
cld
cmpxchg
pop
mov
pushf
out
push
jno
out
or
mov
dec
outsl
push
pop
out
sahf
sbb
cmp
mov
in
mov
in
mov
mov
mov
mov
inc
inc
cmpsl
xchg
popf
mov
pop
pushf
sbb
mov
ja
dec
scas
lods
cltd
outsl
test
loopne
push
push
rcll
pop
adc
outsb
pop
imul
inc
push
scas
inc
gs
push
int
mull
jo
fldl
adc
sbb
aas
out
pop
add
inc
dec
les
and
push
rolb
mull
shrl
pop
push
jmp
loopne
out
out
stos
scas
cltd
repz
in
push
push
inc
add
aad
xchg
jne
sbb
cmp
stc
cwtl
push
out
jne
iret
mov
xor
cli
mov
jge
clc
jnp
imul
and
add
test
lea
sbb
lods
xchg
sbb
jmp
popf
xor
sbb
movsl
and
xor
jne
inc
into
bnd
movsl
cmp
in
imul
mov
mov
dec
mov
mov
add
test
add
loopne
cmpsl
mov
daa
inc
fwait
test
in
enter
mov
js
pop
adc
in
xor
shlb
pushf
push
int3
loop
mov
sub
sbbl
add
mov
test
sbb
das
mov
cld
dec
pop
stos
scas
dec
add
sub
aaa
inc
mov
fwait
popa
xor
mov
xor
sbb
sbb
hlt
aas
xchg
mov
arpl
divb
adc
popa
xor
inc
aas
andb
xor
xor
ret
mov
cli
out
xor
sub
out
into
aaa
fisubs
stos
mov
scas
xchg
sahf
cs
dec
push
les
sub
rorb
stos
cmpsb
mov
out
jo
add
ret
push
add
pop
add
in
push
ljmp
cmpsb
push
fdivs
cmp
jbe
int3
jo
xor
jbe
jecxz
movsl
in
scas
loopne
rorl
lock
mov
jnp
dec
push
xchg
out
rclb
test
dec
or
loope
cs
or
push
or
jno
fstpt
testb
imul
lcall
mov
sbb
loop
hlt
and
addr16
addr16
fidivs
xchg
add
xchg
shrl
out
pop
dec
repnz
lcall
ds
pop
push
mov
nop
inc
popf
add
lcall
mov
add
xor
mov
pop
sub
inc
daa
mov
in
fdivl
ja
xor
aam
addr16
imul
mov
adc
xchg
xchg
cmp
sar
jp
call
push
rcll
add
or
jle
pop
std
popf
push
cmc
mov
dec
imul
clc
xor
add
mov
jg
add
jb,pn
push
fsubrs
adc
mov
lods
push
cmpsl
js
pop
xchg
and
ljmp
or
xchg
fisubrs
cltd
andl
or
outsl
xor
fidivrs
jge
shrl
pushf
adc
outsb
out
xchg
lods
pop
push
xchg
mov
jb
rcrl
lcall
out
cmp
insb
dec
pop
arpl
mov
sub
bound
repz
xor
sub
cmpsb
push
stc
cli
sub
pop
dec
jns
dec
ret
mov
add
lret
xlat
popa
outsb
out
mov
mov
mov
cmpsl
pop
cltd
xchg
sub
ss
inc
mov
inc
mov
lods
and
cmp
negl
pavgw
arpl
inc
scas
ficomps
jo
adc
inc
and
mov
test
mov
ss
or
cmp
mov
xchg
mov
imul
clc
les
pop
or
pop
jnp
xchg
mov
loop
mov
fdivrl
icebp
sub
imul
outsb
sub
mov
jae
xor
mov
pop
hlt
xchg
jl
je
popa
jo
mov
and
push
pop
icebp
subl
orb
stos
jge
mov
fadds
roll
ss
fldl
or
sub
jmp
dec
out
negl
in
or
popf
mov
add
pop
lock
pop
idivl
loopne
fisubl
sbb
mov
lea
pop
shlb
cld
mov
pop
or
inc
notb
aaa
psubb
adc
aas
popf
fiadds
fldenv
fistl
mov
pop
out
cmp
shll
pop
or
cwtl
xchg
mov
xor
xchg
push
xor
aaa
sub
or
xchg
inc
in
push
outsb
nopl
mov
jnp
fsubr
stc
out
pushf
lcall
jle
aam
push
leave
pop
rorb
sbb
in
mov
popa
mov
lods
mov
jns
pop
imul
mov
jle
shll
jnp
mov
daa
mov
mov
jp
push
add
std
pushf
cmp
cmp
lods
mov
or
mov
push
jns
sarl
inc
flds
or
mov
iret
and
movswl
dec
popf
xor
lcall
sub
rcr
push
and
out
pop
mov
mov
arpl
cmp
int
test
outsl
xchg
mov
sub
mov
repnz
push
inc
xchg
imull
daa
imul
mov
popa
lods
gs
pop
bound
repnz
adc
dec
cld
dec
push
aaa
adc
lret
or
or
and
xchg
imul
or
lea
mov
and
cmpl
lods
ss
fs
cltd
insl
popa
popl
popa
xchg
jle
mov
jb
and
jg
in
pop
xor
fs
jbe
out
lock
pop
in
rcrl
fnstenv
test
inc
clc
inc
daa
mov
push
xchg
cmp
inc
mov
xor
lods
push
paddd
movsl
rorl
sbb
xchg
jb
mov
push
dec
shrb
arpl
sbb
fldl
push
ficompl
scas
lea
jp
aaa
pushf
pop
subb
xor
lgdtl
jne
loopne
add
stos
lcall
add
insb
sub
sub
mov
roll
icebp
fcoml
out
sbb
xor
jne
je
push
and
mov
xor
xchg
push
sub
cmp
jbe
sahf
lret
mov
jmp
test
fstl
outsl
cmp
out
mov
xor
in
scas
call
inc
shl
dec
xlat
cmp
call
xchg
cmpsb
add
dec
addr16
daa
loopne
in
inc
jne
test
ss
jns
adc
gs
insb
in
aad
jmp
lods
jo
push
mov
mov
outsl
loop
cmp
inc
adcb
cmp
imul
sahf
mov
pop
imul
cmp
xlat
popa
dec
repnz
cmp
insb
stc
or
shrb
test
in
test
test
test
push
cmp
adc
fidivrl
cmpl
sub
jmp
test
inc
mov
aad
in
dec
xchg
mov
cmpsb
xor
sbb
lock
popf
sahf
cwtl
outsb
and
dec
add
lods
push
std
inc
pushf
mov
ds
and
popa
cmp
outsl
into
add
stos
cmp
out
jno
add
notl
ret
and
xorb
repnz
pop
mov
xor
xchg
or
inc
mov
xchg
pop
and
adc
shrb
inc
je
mov
cmp
dec
ja
inc
ja
mov
aaa
ret
dec
mov
or
lahf
push
mov
popa
jb
std
mov
pop
xchg
test
jge
cwtl
xchg
dec
mov
sub
js
jnp
xchg
cwtl
cmp
jbe
mov
xor
sarl
mov
jnp
aaa
es
adc
or
sbb
fsub
insl
jns
inc
pop
jmp
xchg
cmpsb
inc
lcall
adc
ficoml
ret
and
jmp
movsb
mov
xor
lcall
dec
aad
hlt
adc
xchg
ds
jecxz
es
adc
ja
cwtl
pop
mov
je
ja
lods
and
in
aas
call
add
add
mov
jle
fidivs
adc
das
or
repz
sbb
cwtl
clc
in
out
jno
push
rorb
rcrl
sbb
lahf
stc
add
out
add
lods
pop
push
mov
inc
push
cmpsb
xchg
sub
mov
pop
sbbb
add
mov
outsb
pop
xchg
dec
andb
leave
in
int
inc
in
push
jmp
leave
cwtl
adc
cmp
popf
ds
lods
cmpsb
inc
in
pop
mov
sub
aad
mov
pop
fistpll
idivb
pushf
ret
fdivp
outsl
insl
dec
addb
out
cmpsl
inc
jno
push
cmc
aaa
mov
jo
fistps
loopne
mov
mov
test
jnp
jmp
cmp
shll
dec
jge
adc
cmp
pop
dec
loop
pop
mov
sbb
test
inc
xor
cld
enter
pop
inc
and
or
das
scas
add
mov
pusha
jmp
or
add
adc
sub
sbbb
ret
push
stos
adc
ljmp
ja
add
cmp
adc
jle
push
repnz
and
and
fildll
fisubrl
xor
mov
cmp
push
inc
cmp
rolb
xor
lret
cmc
or
pop
leave
sub
add
push
adc
pop
inc
sub
pop
popf
inc
push
incb
insb
sbb
cmp
sets
dec
add
adc
cmpsb
adc
cltd
pushf
mov
data16
pop
js
jnp
lahf
int
cmp
mov
mov
fnstenv
mov
mov
mov
push
pop
fadds
lret
pop
and
push
cmp
sbb
mov
lcall
inc
inc
das
stc
mov
aam
idiv
cmpsl
pop
rcll
repnz
xor
mov
out
icebp
cmp
and
out
or
mov
jae
adc
xor
lret
mov
test
push
das
dec
xchg
shrl
pop
mov
xor
jbe
cmp
gs
out
and
cmp
mov
daa
sub
rcll
pushf
gs
es
add
inc
ret
filds
leave
cmpsl
ret
and
jecxz
xchg
cmc
xchg
xchg
mov
cmc
data16
sbb
mov
xchg
jg
cmp
lgs
iret
flds
push
mov
jae
mov
pop
call
push
add
lahf
jge
outsb
xchg
mov
repnz
or
inc
int3
pop
inc
adc
mov
jnp
sbb
mov
js
in
pop
adc
mov
bound
adc
mov
aas
and
and
call
push
fmuls
mov
dec
cs
or
ret
pop
and
sbb
jae
cmp
cmp
xchg
inc
fwait
popf
xchg
dec
divb
dec
frstor
push
sbb
decl
imul
aad
and
pop
addr16
mov
popa
scas
push
mov
daa
mov
mov
xor
sbb
pusha
sbb
jmp
cmp
sahf
hlt
jecxz
xor
daa
adc
and
xchg
sub
adc
cltd
push
or
cmp
lcall
aas
jmp
ljmp
jle
mov
pusha
cmpsb
pop
popa
adc
push
jge
jae
adc
lods
mov
bound
xchg
arpl
mov
mov
in
mov
stc
lea
jp
imul
pusha
js
mov
inc
das
jg
add
inc
cmc
and
inc
inc
orb
adc
cmp
sub
daa
cmc
rorb
push
stc
add
in
mov
dec
xchg
test
mov
mov
pop
leave
or
cmpsl
mov
scas
std
pop
jno
and
in
loopne
pop
mov
push
jle
rcl
repnz
xchg
fimuls
in
cwtl
in
pop
xchg
dec
xlat
scas
add
and
movsl
push
je
cwtl
and
adc
mov
inc
pop
cmp
mov
xor
pushf
sti
adc
ret
xor
lcall
cli
dec
jge
insb
inc
ja
addr16
pop
in
sub
inc
mov
fimuls
das
inc
pop
movsl
dec
in
fists
out
ret
fnstcw
and
ret
cmp
cld
daa
rcr
repz
adc
jmp
jl
fldenv
pop
loopne
pop
or
and
lahf
xorl
fcoml
adc
call
mov
jbe
inc
negl
nop
addr16
cltd
js
fldenv
mov
lcall
les
shll
and
mov
sub
notl
pushf
xchg
push
stc
push
popf
rorl
sbb
cmp
js
mov
xor
mov
cmp
jno
ss
mov
je
sbb
push
icebp
in
lea
lea
push
out
aam
or
sbb
lock
fisubrl
push
mov
and
arpl
sub
cli
push
lods
push
out
ds
push
xor
gs
sbb
mov
jmp
int
xchg
lret
in
and
call
cs
sub
dec
aas
lea
sbb
or
mov
stos
or
mov
jle
xor
js
shlb
stos
push
sub
xor
out
push
mov
pop
sti
mov
xchg
mov
sub
and
cmp
outsl
push
mov
repnz
jge
or
scas
dec
push
mov
xchg
inc
cli
ret
dec
icebp
pop
je
imul
xor
bswap
sbb
sbb
daa
in
and
jbe
sbbb
mov
stc
sub
or
jns
imul
dec
cmp
mov
cmc
cmp
fldt
dec
or
xchg
and
mov
cli
cmp
lahf
mov
in
pushf
inc
idivl
mov
bound
gs
call
shrl
pop
call
adc
dec
jo
mov
xor
in
out
and
inc
rcrl
mov
push
cmovae
mov
xchg
mov
xor
cmp
and
rorl
je
jp
imul
mov
cmpb
shrb
fstpt
pop
into
or
xorb
fbld
mov
pop
fdivs
mov
push
mov
mov
sbbb
push
inc
cltd
gs
std
stos
jb
nop
xchg
aaa
hlt
add
adc
jle
mov
push
outsl
sub
push
out
movsl
jo
mov
mov
push
sbb
leave
dec
cmc
mov
addr16
mov
dec
es
in
cmpsl
dec
mov
sub
fldenv
bound
push
mov
adc
sub
adc
into
pop
xor
cmc
inc
xchg
cmpl
adc
xor
fisttps
cmp
inc
xor
push
pushf
fnsave
outsl
fwait
add
mov
jno
ret
jne
aas
adc
sarb
xor
shl
lods
scas
cmpsl
xor
addr16
push
ja
push
shlb
pop
pop
dec
xor
aaa
mov
mov
popa
dec
jmp
adc
rolb
jl
pop
out
push
xchg
add
aas
and
gs
jb
scas
add
cmpsl
cs
xor
jns,pn
gs
inc
stos
and
dec
xchg
xchg
ljmp
and
aas
push
mov
std
pop
xor
sbb
xor
cmp
decb
out
popa
ss
pop
gs
mov
loop
icebp
fistpl
xor
mov
pushf
rclb
dec
int
push
stc
lds
inc
nop
and
std
cwtl
decb
xchg
push
push
cltd
lahf
bound
cmpl
fdivrs
mov
call
sbb
jb
das
mov
icebp
pusha
stos
and
and
shll
inc
mov
jns
test
adcl
xor
xor
push
sbb
push
or
xchg
cmp
xchg
out
call
bound
jne
fstpt
cmp
jp
dec
push
jns
arpl
or
fwait
hlt
xor
scas
in
cld
les
jl
int
arpl
addr16
fs
mov
hlt
and
fwait
cmp
push
xchg
movsb
imul
lahf
pop
pushf
adc
les
cmc
daa
vaddsd
bound
sbb
xchg
decl
inc
data16
js
pusha
mov
call
nop
repnz
cltd
jge
sbb
movsl
jle
in
mov
and
adc
cmp
xchg
or
mov
and
or
or
int3
mov
clc
push
inc
jmp
add
sub
popa
test
andl
add
add
inc
stos
jno
out
out
mov
les
stos
ds
leave
scas
or
js
push
out
out
xchg
or
xchg
dec
lcall
pusha
dec
sbb
and
sub
cli
adc
add
sub
daa
mov
cmp
mov
push
pop
push
jp
lock
cld
jnp
out
repz
push
add
ss
xchg
daa
stos
imul
pop
pop
fildll
scas
push
sub
ds
pop
lods
mov
jp
out
enter
sti
scas
icebp
inc
jp
add
sub
int
cmp
dec
mov
test
pop
es
push
shl
ss
pop
arpl
dec
add
pop
inc
sub
out
inc
movsl
sub
pop
aad
jg
and
xor
ds
in
leave
adc
and
sbb
cmp
lods
push
pop
dec
pop
arpl
int
mov
pop
aas
or
jle
scas
in
inc
mov
adc
divb
cli
out
jmp
sbb
aas
push
cmc
jns
mov
push
pop
bound
jnp
clc
aam
xor
or
inc
add
cld
jne
bound
fs
or
fwait
movsl
sub
push
sbb
jb,pn
ljmp
mov
dec
jne
dec
bound
and
mov
sbb
pop
sahf
pop
adc
cmp
and
xor
loope
stc
sahf
lret
push
popf
in
mov
sti
imul
sbb
xor
inc
fidivrl
fisubl
mov
cmc
int
fildll
fstl
mov
hlt
aas
out
jp
push
and
mov
cmp
add
roll
ja
jl
scas
inc
add
fisubrs
dec
mov
stos
test
dec
jp
push
pop
jo
jecxz
xor
inc
and
mov
aas
adc
out
ret
pop
adc
sbbb
in
pop
mov
inc
xchg
jmp
ret
cs
sub
lahf
ss
gs
dec
mov
mov
jecxz
jge
jae
rorb
xor
scas
pop
adc
mov
mov
mov
mov
ljmp
xorl
cltd
dec
ljmp
push
aaa
pop
xchg
mov
into
imul
inc
or
lods
ss
addb
push
bound
ret
lcall
xlat
scas
push
imull
or
mov
sbb
xchg
and
nop
shll
sub
mov
jmp
mov
pop
cmpsb
pop
in
cmp
fiadds
pusha
pushf
mov
in
addb
es
lcall
mov
js
and
ljmp
add
mov
sarb
sti
sub
bound
ret
mov
aad
and
daa
movsb
jne
lds
lret
out
and
jnp
lods
popa
and
sbb
and
lods
loopne
pop
in
cmpsl
mov
stos
mov
mov
fs
mov
scas
push
pop
and
das
testb
cmpsl
xchg
push
jl
int3
lret
pop
or
dec
mull
push
sub
test
mov
mov
jae
jmp
sbb
stos
bound
pusha
xchg
jnp
fcoml
lret
inc
jp
out
inc
sbb
xlat
mov
icebp
jne
xor
pushf
in
sub
xchg
fsubr
aas
jb
mov
cmpsl
and
iret
leave
leave
jb
into
push
mov
cwtl
lahf
fwait
andl
in
adc
add
mov
out
das
cmpsb
xchg
roll
pop
data16
sarb
iret
enter
mov
cwtl
mov
jo
dec
sti
jo
cli
ret
sbb
xchg
mov
sbb
xchg
stos
or
dec
inc
sbb
jmp
xchg
stos
dec
cmp
shlb
push
cli
push
inc
ja
loopne
or
aad
fsubs
xchg
jmp
lcall
and
nop
call
lods
out
jecxz
cmpsl
cmp
mov
fnop
pop
rcrb
arpl
mov
ds
xchg
test
jmp
inc
fistps
test
cmp
mov
mov
in
stc
adc
sbb
xor
xor
inc
sbb
mov
inc
cld
push
leave
lds
jae
ret
aam
mov
nopl
jb
jno
add
aam
add
fiaddl
cpuid
out
cmp
js
scas
ljmp
inc
pop
dec
pop
outsb
fstl
add
pop
xor
pop
jge
inc
cli
dec
and
cmpsb
jnp
dec
cwtl
mov
mov
fidivrl
jbe
mov
inc
xor
pop
pop
and
add
adc
jns
test
loop
arpl
push
add
push
jno
mov
dec
lret
push
mov
in
movsb
xor
pusha
xchg
ffree
mov
mov
test
mov
insb
inc
mul
pop
jno
sbb
orb
xchg
push
hlt
adc
cmpsb
roll
lock
sub
xchg
push
scas
mov
pop
add
popf
popa
out
mov
outsb
push
and
jge
es
fnstcw
xchg
es
and
cmpsl
imul
add
daa
inc
dec
mov
ss
test
dec
pop
std
cmp
pop
clc
stos
or
xchg
jmp
jo
mov
dec
jns
mov
mov
cmp
test
fnstenv
jmp
mov
stos
into
pop
leave
out
xchg
pop
sti
jae
daa
sub
cli
jecxz
jl
lcall
outsl
jb
lods
jae
mov
jmp
cmpsb
jae
insl
mov
jge
fwait
lea
or
hlt
ljmp
pushf
movsl
push
leave
icebp
repz
cmpsl
inc
sti
add
pop
pop
shll
lcall
fwait
mov
je
mov
mov
push
pop
rcll
in
scas
into
fincstp
lods
or
cmpsl
aas
add
in
dec
push
gs
xchg
xchg
ja
xchg
imul
rcrl
jno
rorb
mov
and
cs
repz
inc
shrb
popa
jp
stc
aas
dec
sbb
movsl
int3
adc
mov
mulb
mov
push
mov
dec
in
add
dec
sub
pop
push
dec
jbe
adc
xchg
icebp
lcall
arpl
push
xchg
pop
xchg
stos
daa
fcoml
pusha
imul
clc
aas
inc
jge
jle
sbb
cltd
scas
jge
lret
scas
push
cmpsl
adc
adc
pop
scas
imul
arpl
addr16
outsb
in
adc
xor
and
sbbb
cmp
push
stos
dec
xchg
adc
cmp
cmp
arpl
pop
das
mov
psubw
popf
lea
mov
dec
lea
cmc
and
aam
mov
jae
mov
inc
jbe
insb
lret
inc
or
adc
rcll
dec
das
or
jo
push
jecxz
or
in
shll
in
mov
out
dec
push
sub
mov
adc
mov
add
jbe
mov
mov
fildll
out
mov
jl
testb
push
aaa
jb
imul
repz
xor
push
mov
mov
adc
pop
nop
sti
mov
jle
mov
int3
outsb
mov
push
cwtl
stos
pop
fisubrs
jp
or
repnz
xchg
daa
pop
xchg
dec
das
je
cmpsb
mov
jnp
out
movsb
popf
adc
cltd
fwait
ljmp
cltd
mov
imul
xchg
sub
xchg
loop
xor
add
rcl
jae
dec
movsl
mov
aaa
mulb
and
addr16
lods
dec
inc
pusha
push
inc
xor
hlt
notl
rcr
cmp
dec
jecxz
add
dec
mov
or
push
data16
mov
dec
or
fisubl
dec
sahf
and
xorb
jg
jmp
jle
and
lods
mov
push
xchg
add
mov
adc
push
repnz
sbb
fcomps
stos
mov
addr16
out
and
ret
in
andb
mov
mov
push
movsl
pushf
sbb
mov
pop
mov
xchg
sbb
jp
and
sub
sti
sbb
jg
pop
cltd
push
adc
aaa
cmp
jnp
fsubp
push
cmp
push
fwait
and
movsb
push
ja
js
inc
dec
jmp
fs
jns
test
sbb
mov
xor
and
pushf
pop
or
cmp
adc
push
fwait
lahf
xchg
movsb
movsl
fcom
in
cmp
pop
sub
adc
ds
sbb
popf
mov
xor
outsl
mov
jmp
and
mov
rcl
adc
inc
dec
pusha
outsl
dec
pop
adc
dec
xlat
shll
cmp
fisubl
dec
or
cmc
lret
inc
pop
loopne
xor
cld
and
adc
xchg
jo
xchg
xor
cmpsl
push
jecxz
pop
cltd
loope
and
push
add
ljmp
push
jmp
adc
movsl
sub
mov
and
lock
fsts
leave
dec
dec
cmpsb
insb
das
and
data16
dec
pop
lock
rolb
lea
xor
cmp
xor
or
fcoms
fistps
sbb
and
mov
pop
push
mov
into
aas
or
andl
xchg
addr16
push
mov
jno
add
arpl
sti
inc
popa
xor
adc
test
ret
xor
xchg
insb
mov
dec
pop
shr
cli
and
andb
cli
dec
xchg
sub
cmp
lcall
out
nop
pop
mov
mov
dec
mov
arpl
daa
and
adc
icebp
lahf
ja,pn
mov
or
inc
ret
stos
sbb
lods
mov
mov
jne
loopne
hlt
and
loope
pop
jecxz
jp
insl
xor
inc
sub
pop
cmp
in
inc
movsb
xchg
xchg
add
je
jmp
arpl
add
and
in
push
ja
or
mov
cwtl
out
push
in
sbb
sarl
push
lret
or
mov
das
nop
push
mov
cmpsl
mov
iret
jle
test
push
addr16
push
pop
xchg
sub
insl
or
pop
inc
mov
pop
jb
sbb
lods
mov
shr
mov
fildl
lods
jo
sti
add
pop
inc
mov
pop
stos
pusha
pop
stos
mov
pop
add
sar
adc
pop
pop
out
cmp
fisubl
cmc
jnp
shlb
pop
and
jbe
mov
push
imul
cmp
or
aas
xlat
jo
adc
mov
test
out
fcomps
dec
and
cmp
fwait
jmp
lds
push
and
out
mov
push
ret
sbbb
arpl
xchg
aam
es
xchg
sub
jns
jns
pushf
test
add
mov
loope
movsb
mov
add
add
fldt
pushf
leave
test
clc
out
sbb
sub
loope
sbb
add
fs
mov
inc
fldenv
fmul
fwait
inc
mov
cs
inc
cmp
sub
mov
push
xor
sub
xchg
adc
sbb
push
xlat
xchg
jns
sub
inc
dec
dec
jo
fisttps
xor
aaa
imul
pop
jne
pop
mov
sbb
dec
sub
mov
jle
repnz
mov
daa
mov
fsubl
inc
cmp
pop
mov
stos
jbe
xchg
sbb
lahf
push
je
inc
lock
cmp
xchg
adc
hlt
dec
arpl
add
pop
out
jnp
outsb
aad
or
sub
iret
mov
push
xchg
rol
stc
das
mov
xchg
shll
adc
inc
imul
stos
dec
lret
pusha
or
xor
sahf
int
icebp
sub
aaa
ss
pushf
sub
cmp
cmpsl
js
loopne
xchg
and
push
sbb
cmp
cmpsl
push
outsb
mov
cwtl
addr16
enter
stc
xor
mov
push
xor
insb
add
addr16
scas
xchg
andl
inc
fmul
sbb
in
xor
aas
and
into
push
sub
movsl
fdivrp
push
imul
cmp
xor
cmp
pmaxsw
mov
mov
out
ds
insb
mov
dec
inc
inc
mov
cmc
stos
jns
xchg
leave
inc
xchg
mov
inc
loopne
mov
in
iret
jmp
push
sub
js
cmp
mov
insb
cmp
mov
and
mov
and
add
test
cwtl
cmovle
repz
rcrb
fadds
into
scas
mov
xor
ds
rorl
enter
idivl
sbb
loope
mov
insb
sbb
adc
fwait
push
lret
test
test
mov
jns
sub
cmp
adc
fldl2e
xchg
hlt
xchg
jecxz
lahf
push
inc
mov
popf
aas
test
or
pop
lods
add
test
pop
subb
pop
fwait
data16
mov
inc
fldl2t
les
push
jmp
aad
pop
mov
das
pop
out
insl
lret
aad
sbb
arpl
loopne
mov
jne,pn
inc
or
insl
add
hlt
lea
pop
xlat
lcall
ret
cmp
inc
mov
push
data16
rcl
xchg
jg
mov
arpl
out
dec
inc
mov
or
inc
mov
mov
test
sbb
mov
xchg
or
lahf
mov
ljmp
mov
ja
ret
outsb
das
push
inc
js
sub
mov
stc
pusha
add
shl
bound
ljmp
mov
loope
adc
mov
aam
xlat
jge
loope
fwait
hlt
outsl
sub
and
lds
mov
sub
aaa
xchg
xchg
inc
jns
cmp
push
pop
jns
sti
data16
jg
daa
fisubl
xchg
jp
dec
imul
adcb
ljmp
outsb
mov
and
sub
sub
std
lds
or
and
inc
inc
sub
test
mov
popa
imul
push
inc
negb
sbb
sti
mov
or
xchg
adc
add
mov
cwtl
dec
addl
mov
sub
inc
aaa
jbe
xlat
pop
mov
or
cmp
cmp
inc
scas
mov
jle
mov
jbe
pop
data16
inc
push
dec
pop
loope
imul
cmp
lret
fsub
or
jne
mov
test
into
push
push
fwait
push
xor
lds
inc
sub
mov
outsl
fisubrl
orb
mov
or
lock
pushf
cmp
popf
push
pop
push
movsb
in
push
vandnpd
js
leave
cmpsb
sbb
pop
test
sbbb
fdivr
adc
scas
mov
mov
mov
mov
gs
push
repz
shll
lods
icebp
rcr
in
lahf
inc
fildll
lods
cltd
scas
mov
pop
cmp
dec
stos
and
in
divb
mov
call
mov
fsts
mov
leave
or
mov
cmpsl
incl
xor
jp
and
daa
mov
xchg
insb
jmp
shlb
jno
mov
sahf
enter
jge
enter
xor
and
mov
cwtl
xor
dec
adcb
inc
jmp
mov
loop
test
lret
cmp
inc
lods
cmp
sbb
pop
ljmp
sub
mov
adc
loopne
inc
fwait
insl
or
test
fwait
push
push
dec
sub
aad
push
mov
imul
mov
dec
pusha
pop
inc
mov
push
fidivrl
mov
xor
jae
insl
inc
roll
push
movsb
inc
sbb
outsl
and
rcll
test
and
mov
and
or
xorl
mov
jae
sub
adc
icebp
mov
jp
xchg
out
out
sbb
mov
inc
inc
outsb
jo
repnz
fimull
imull
test
scas
movsl
push
cmpsl
sbb
or
xor
pinsrw
mov
xor
mov
push
sbb
inc
xchg
nop
bound
sub
je
dec
adc
dec
xchg
in
pop
pop
adc
xor
rcrl
inc
ds
dec
and
stos
xor
cmpsb
lret
cli
scas
stc
cmp
xor
xor
daa
movsl
mov
daa
aam
inc
insb
jg
icebp
jnp
lock
mov
fldenv
jbe
loope
mov
pop
dec
sub
daa
je
add
out
arpl
cli
push
movsl
sub
sbb
mov
loope
outsb
adc
push
xchg
inc
imul
cwtl
movsl
jb,pn
push
lods
mov
inc
stos
add
stos
lods
mov
adc
and
push
mov
pop
insl
in
fldenv
orb
cld
insl
cwtl
rcl
nop
jnp
push
cmpsb
out
cli
push
dec
lahf
out
mov
push
int3
inc
pushw
cwtl
das
in
and
lods
push
cwtl
stos
scas
mov
mov
sub
inc
mov
out
xchg
cltd
das
dec
shrb
pop
jmp
push
test
inc
cs
xchg
icebp
xlat
jns
inc
sub
inc
inc
lcall
or
ret
inc
jge
inc
push
fsubr
xchg
sbb
mov
pop
cwtl
mov
aaa
arpl
xchg
fs
cld
xchg
xor
pop
hlt
popf
arpl
jbe
gs
test
sub
aam
lret
pop
shll
rclb
inc
add
xlat
jge
lret
mov
imul
insb
scas
xor
js
fstpl
daa
add
push
outsl
add
iret
daa
jnp
stos
ss
out
bound
addr16
imul
aaa
shlb
out
aad
fldcw
push
sbb
fstpl
enter
xor
push
mov
inc
fstl
xor
cmpsl
push
mov
int
cmpsl
adc
sub
shl
enter
mov
sahf
ds
pushf
push
fildll
mov
fldl
aam
ljmp
call
dec
inc
inc
and
out
bound
cs
dec
cmp
call
add
push
aad
in
adc
pop
pop
sub
push
jae
movsb
loope
popf
arpl
jge
jns
aas
fisttpll
aas
pusha
cmpsl
test
sbb
cmp
push
add
ljmp
xchg
stos
shrl
mov
mov
xlat
push
ret
xor
and
scas
xor
enter
popa
inc
cmp
lock
fisttpll
pop
jge
aaa
fucomip
push
push
inc
das
dec
mov
mov
push
ret
jmp
push
xchg
and
pop
jle
pop
xor
adc
movl
ds
es
fcmovu
test
call
fimuls
es
inc
xchg
addb
adc
aaa
inc
push
push
xor
in
aad
cmpb
addr16
and
dec
and
fisubrs
pop
lcall
dec
sub
sahf
and
ljmp
mov
scas
fwait
mov
push
test
loop
add
push
jecxz
fdiv
mov
repnz
push
movsb
push
out
sub
pop
ja
insl
sar
iret
movsl
jno
jns
inc
mov
fists
ds
lods
ficoms
loopne
lcall
fcoms
mov
cmp
cs
loop
idiv
push
cmpsb
hlt
and
dec
out
push
aad
aam
adc
pop
inc
mov
pop
icebp
xchg
mov
dec
mov
inc
movsl
shll
mov
stos
add
pop
das
or
stos
or
fdivl
adc
pop
jns
sbb
or
aam
inc
pop
xchg
push
sbb
orl
xor
imul
repnz
inc
xchg
pushf
cmp
cltd
pusha
push
pop
adc
pushf
jg
imul
push
push
inc
and
cmc
andl
mov
jecxz
scas
cmp
xor
sarb
insl
jmp
sbb
dec
jmp
int
push
fistpl
xor
cltd
jno
iret
addl
and
mov
mov
lea
and
ret
fstps
stos
outsl
adc
daa
pop
insl
loope
sub
arpl
sbb
lcall
lods
add
sub
leave
push
push
decl
pop
mov
jns
cltd
mov
cmpsb
jmp
imul
jle
dec
inc
ficoml
repz
test
orb
rcrl
movsl
mov
jno
push
flds
mov
data16
pop
movsl
into
and
xchg
jae
aas
insl
fiaddl
mov
jp
sbb
xchg
jbe
shlb
sub
dec
scas
add
xor
pop
pop
arpl
mov
das
pop
call
xchg
sahf
mov
fsubs
sub
push
insl
fistl
and
scas
sahf
cmp
fwait
bound
rclb
push
and
sub
inc
and
or
mov
arpl
mov
sahf
data16
mov
fstps
mov
push
aas
fwait
xchg
mov
or
pop
dec
stos
push
std
fwait
mov
mov
outsl
loope
pop
movsl
es
mov
xor
mov
or
sbb
mov
shr
aas
cmp
inc
and
bound
lods
shlb
sbb
mov
sbb
out
mov
mov
jecxz
xchg
addb
cmpsb
jno
sbb
xor
mov
mov
xchg
idivb
cmpsb
and
arpl
enter
inc
xchg
jb
inc
shlb
cmp
push
ja
mov
js
mov
testl
xchg
fistl
and
rolb
mov
adc
clc
inc
or
cmp
int3
add
fcoml
lahf
and
adc
inc
shlb
mov
arpl
fisubrl
das
out
push
xchg
int3
add
popa
and
iret
bound
mov
xor
pop
leave
cmp
scas
out
ds
sahf
mov
imul
pop
sahf
pop
mov
mov
xor
cmp
push
xor
or
dec
xchg
daa
idivb
outsl
mov
gs
roll
mov
enter
jg
jno
jbe
test
mov
dec
sarb
xor
or
fstl
mov
hlt
andl
pop
gs
push
mov
shll
inc
lahf
add
les
cli
orl
push
shlb
push
nop
sub
daa
adc
push
push
je
cli
pushf
adc
cmp
out
mov
cmp
hlt
ss
bound
push
andb
jmp
lret
addr16
pop
cmpsb
imul
push
xchg
inc
gs
ficomps
cmp
mov
cmpsb
pop
movsl
inc
fistpll
cmp
cli
call
std
pop
aas
cmpsb
scas
pushf
jg
mov
aaa
and
sub
js
or
aam
pop
fucomip
outsb
or
data16
jo
and
add
sahf
jns
jmp
cmp
loope
fsts
pop
ja
add
and
pushf
xchg
clc
cmp
xor
sub
pop
mov
inc
mov
inc
and
pop
sahf
cli
xchg
pop
mov
bound
dec
mov
addr16
rclb
ljmp
mov
jle
scas
sub
xor
data16
movsl
mov
jns
mov
gs
xchg
stos
lea
ja
jle
cmp
mov
outsl
aaa
jl
mov
push
jne
xchg
lock
int
mulb
xchg
cs
popf
xor
add
or
sub
loop
jp
adc
loope
pusha
rcr
stos
es
sbb
sbb
and
fldl
cmp
pop
imul
pop
outsb
inc
aam
outsb
test
push
outsb
mov
dec
outsb
pop
aam
outsb
pop
aam
inc
sbb
xchg
pop
jle
xchg
push
test
push
cmpb
cmpb
jge
push
cld
jge
push
cli
jge
push
clc
jge
push
idivb
push
hlt
jge
push
bnd
push
lock
push
out
jge
push
in
jge
push
jmp
sbb
jmp
adc
sub
adc
cmp
mov
dec
ficomps
pop
movsl
xchg
add
and
push
jmp
sbbl
rcr
push
and
pop
ja
adc
test
testl
lcall
push
cmpsl
sti
inc
stc
mov
add
push
sbbl
cmp
stos
in
arpl
cli
cld
xor
jne
mov
inc
test
and
sub
popf
jp
mov
dec
mov
jno
aas
and
pop
mov
adc
int
fmul
outsb
leave
pop
test
daa
mov
into
xchg
mov
xor
lcall
push
push
test
push
dec
and
arpl
mov
out
arpl
ds
jnp
xorl
cwtl
pop
jp
cltd
jg
jno
jp
mov
rorb
sahf
xchg
xor
lea
lret
nop
sbb
mov
movsl
lret
filds
cmpsb
xor
jno
loope
ret
xor
popf
mov
punpcklwd
shlb
dec
inc
pop
jbe
adc
push
cmovns
adc
daa
adc
sub
and
test
jo
xor
lods
ret
and
mov
shr
dec
xchg
in
cli
jbe
sub
xchg
cmp
in
mov
nop
mov
stos
inc
cwtl
mov
test
xor
inc
inc
pop
into
cmpsb
out
cs
outsb
xor
shll
xor
sub
fucomi
jne
mov
insl
ret
sub
rorl
hlt
loope
pusha
test
xlat
lahf
mov
and
pop
scas
ds
fsubrp
xor
dec
cmp
gs
and
and
les
xchg
ret
repnz
sti
jb
cltd
loop
repnz
in
sub
mov
fwait
test
out
test
dec
push
lcall
js
nop
shll
push
pop
sti
enter
test
cmp
sub
mov
fcomps
aam
inc
imul
jl
rorl
and
xor
lret
outsl
pop
mov
cs
lcall
js
mov
or
gs
loope
and
mov
mov
bound
fnstenv
add
sbb
cmpsl
fs
call
push
bound
loopne
loopne
adcl
xchg
and
mov
mov
or
and
popa
and
pop
jmp
xchg
add
cwtl
pop
mov
sbb
push
lret
mov
jmp
and
and
xor
jge
and
icebp
es
mov
xchg
in
sbb
in
sbb
xchg
dec
cmpsl
fwait
inc
loopne
cmp
xchg
cmp
and
and
sbb
pop
xchg
loop
push
out
lret
dec
scas
sub
jns
sbb
pop
movsb
loop
push
mov
jecxz
cmpsl
out
pop
push
mov
push
fstpt
push
fnstcw
add
jbe
lcall
rcll
inc
scas
mov
pop
ficomps
daa
pop
push
xor
mov
jb
out
mov
aaa
daa
dec
mov
mov
out
xchg
xchg
and
add
pop
aas
push
in
push
addr16
jae
mov
dec
cmp
push
jecxz
mov
cmp
das
jg
cmpsl
add
pop
cmpsl
aaa
jne
adc
push
arpl
jecxz
push
das
push
xchg
inc
push
xor
mov
push
mov
inc
mull
add
pop
cmpsl
mov
icebp
push
lret
push
push
pop
dec
leave
sub
test
mov
push
push
or
dec
cltd
xchg
daa
jnp
cmpsl
or
mov
fisubs
xchg
lahf
cmpsl
cli
push
xchg
cld
pop
jae
aam
je
push
sub
dec
jmp
das
mov
adcl
stc
dec
idiv
or
mov
mov
mov
mull
cmp
pop
lret
scas
out
xor
ljmp
pop
add
push
enter
and
dec
xchg
inc
filds
fcomp
xchg
inc
cli
mov
jno
fistpll
dec
shl
movsl
jecxz
jnp
out
dec
mov
out
stos
pop
push
inc
push
gs
addl
mov
push
in
mov
loop
ds
sub
xorl
jae
adc
pop
sub
adc
and
inc
add
loope
inc
dec
test
das
pop
daa
fisttpll
scas
push
cmp
ss
mov
push
mov
push
and
shlb
push
repz
xchg
fnstcw
in
xor
aas
sub
dec
test
pop
xchg
mov
mov
in
lcall
scas
fwait
push
cmp
sbb
mov
dec
movsl
inc
and
arpl
into
sub
jp
pop
xchg
cli
jge
push
subb
adc
movsl
sub
mov
lcall
mov
int3
inc
push
fiadds
and
or
sub
popa
jecxz
daa
das
jle
orl
imul
fsubl
inc
pop
cmp
and
pop
sub
scas
rorl
aas
pop
adc
cmc
jle
push
aad
popf
out
bound
or
lock
sarl
and
jb
add
stc
push
cmp
aaa
cmpsb
arpl
xchg
or
inc
dec
lea
fistpll
dec
out
pop
xchg
push
or
cmp
aas
popa
movsb
inc
mov
movsl
shl
inc
push
inc
shll
xchg
cmp
inc
cmp
mov
mov
stos
inc
xchg
ret
mov
cmp
inc
inc
push
aad
jne
mov
add
pandn
aaa
ja
scas
stc
sub
movsb
add
adc
jg
sub
pop
and
loope
pop
add
bound
sub
ljmp
ss
cmp
nop
js
shl
orb
sub
out
dec
jbe
test
lahf
cmpsb
xchg
mov
clc
adc
mov
inc
jg
lahf
mov
movsl
pop
add
pop
pop
inc
mov
and
hlt
pop
pop
push
cbtw
push
loopne
fs
sub
mov
adc
sbb
mov
sbb
and
sub
jb
mov
jmp
cmp
xchg
mov
daa
test
test
mov
nop
pop
iret
lahf
mov
stos
stc
lcall
mov
pop
pop
inc
push
push
mov
jnp
jnp
int3
mov
sar
fprem
in
xor
pop
push
add
fstp
aam
pop
pop
stos
lods
dec
pop
mov
xor
xor
stos
fildll
cs
lahf
cmp
sub
dec
rcr
dec
jne
and
out
jg
and
enter
jl
cmp
push
shl
sub
sbb
inc
pop
ret
std
sahf
adc
xor
push
scas
inc
cltd
popa
add
sbbl
jbe
ljmp
scas
movsl
mov
xor
in
popf
jno
test
add
addr16
lods
cmp
andl
insb
test
lahf
callw
or
repnz
mov
mov
out
cmpsl
xor
push
jnp
idiv
inc
mov
imul
xchg
and
test
fidivrl
cmp
cmpsl
dec
dec
jp
outsb
pusha
or
and
or
rcpps
xchg
out
mov
ds
adc
xchg
hlt
dec
jle
out
xchg
mov
lret
mov
sub
bound
js
shrd
ds
popa
bound
aam
xchg
jno
mov
dec
jb
dec
stc
scas
cs
lcall
es
inc
ljmp
lods
sbb
outsl
push
outsb
mov
inc
out
push
mov
xchg
jp
dec
aaa
mov
mov
mov
dec
enter
cmc
loop
sbb
sarb
fdivs
push
test
dec
mov
bound
sub
sbb
and
aas
jnp
adc
es
loopne
dec
sbb
mov
jp
dec
or
jp
stos
aad
lds
mov
or
popa
fmuls
jb
sub
add
outsb
cmc
cwtl
loope
mov
mov
dec
fs
cmp
mov
dec
ja
adc
push
mov
jmp
push
mov
add
in
dec
xchg
sub
bnd
repnz
movsb
fldt
and
push
leave
daa
xor
arpl
pop
add
mov
xchg
gs
xchg
jp
pop
sbb
xchg
inc
jmp
sub
jne
es
addr16
push
sub
aam
lods
cltd
mov
repz
and
clc
xlat
daa
jecxz
daa
cld
in
adc
sbb
mov
jge
adc
cli
mov
mov
sti
cmp
enter
or
lcall
int3
sbb
shll
fdivl
dec
jl
mov
mov
jno
sbb
add
lods
mov
out
dec
inc
sub
fsubp
stos
fs
push
cltd
mov
not
jbe
jmp
subl
and
push
mov
mov
in
enter
push
push
push
mov
fisubrs
loopne
cmpsb
xor
daa
dec
into
es
and
push
and
push
call
ds
loop
fnstcw
xchg
xlat
jecxz
xchg
and
push
sub
and
xchg
xor
into
popa
mov
out
shll
subb
hlt
aas
and
mov
push
in
adc
mov
adc
and
test
jae
inc
jle
jae
mov
or
enter
mov
jg
nop
pop
jnp
ret
sub
shrl
jnp
frstor
repz
lock
hlt
jmp
scas
add
mov
hlt
xrstor
cmp
cmp
push
int
cmp
sub
pop
cwtl
call
push
in
rcll
fidivrs
and
mov
xor
imul
hlt
addr16
mov
xlat
push
out
adc
aas
mov
fistpl
stos
jle,pt
es
insb
jb
push
movsl
aam
ja
mov
movsl
out
out
xor
imul
add
lcall
repz
out
adc
sbb
jg
dec
lahf
bound
and
je
fldt
pushf
sub
sbb
cltd
adc
xchg
jge
aas
lock
adc
push
aad
dec
lods
xor
pop
outsl
inc
jle
inc
xchg
dec
xlat
push
add
pop
loop
cmpsl
pop
and
daa
jl
sub
add
dec
sbb
mov
adc
js
mull
xor
cmp
rclb
into
mov
fildl
and
rorl
and
decb
in
pop
inc
pop
or
xor
lods
pop
jnp
in
pop
lcall
ds
enter
jle
ljmp
pop
call
test
mov
xor
sub
push
adc
dec
fs
pop
add
mov
add
loop
test
adc
int3
jno
cmpsl
inc
out
mov
ljmp
stos
mov
and
sub
jecxz
mov
push
repz
iret
test
adc
jg
mov
mov
cli
les
into
and
in
xchg
xchg
out
sbb
mov
fs
add
sub
ficoml
fbld
fists
add
and
dec
push
jmp
jnp
std
adc
pop
jo
fmull
ja
sbb
sahf
loopne
xchg
je
addb
scas
stc
xlat
mov
stos
rcrb
dec
inc
push
jmp
cmp
fstl
mov
fildl
jb
enter
xchg
outsb
xchg
cltd
cld
pop
pop
bound
pop
test
pop
ljmp
mov
sbbb
xor
dec
sub
and
sub
mov
int3
xlat
and
adc
push
xlat
ret
push
pop
xor
adc
daa
popf
sub
popf
rclb
pop
jo
and
std
andb
push
xor
push
and
mov
mov
mov
push
mov
and
sbb
mov
and
pop
subl
inc
in
insb
mov
mov
sub
xchg
xchg
mov
xchg
ljmp
arpl
loop
fsubrp
inc
movsb
xlat
ljmp
add
or
pop
or
cmp
and
xor
jmp
inc
es
cmpsb
gs
int3
push
pusha
mov
xchg
bound
outsl
push
jmp
call
mov
scas
scas
mov
mov
jb
cmp
mov
jo
lds
mov
lret
mov
fistpl
lock
jp
dec
pop
dec
mov
xchg
lods
popa
sti
pop
imul
cmp
aaa
xor
push
in
jecxz
cmp
popa
jecxz
pop
cmpsl
lea
inc
xchg
jnp
andl
mov
push
lret
out
xchg
fldl
jae
push
mov
dec
repnz
cmp
cli
sbb
add
fdivl
lcall
lods
cmp
mov
adc
pop
sub
insl
iret
fsts
mov
cmpsb
lcall
or
add
shlb
insb
sbb
and
sbb
adc
push
stos
pop
dec
mov
mov
push
push
roll
scas
addr16
add
or
aad
mov
sub
xchg
adc
or
and
mov
test
into
dec
pop
pop
mov
bound
adc
jo
inc
mov
pop
mov
ljmp
sarl
rclb
cmp
test
xlat
in
adc
dec
adc
pop
push
cmp
push
fstps
add
addb
mov
imul
std
negb
stos
mov
outsl
fidivrs
dec
add
shll
movsl
mov
mov
push
xchg
push
pushf
xchg
scas
subb
aad
ret
shl
jg
sti
shll
inc
fbstp
stos
test
data16
adc
lcall
xchg
mov
fs
ja
pop
sbb
pop
push
xchg
ss
sub
mov
lods
test
pusha
ds
out
inc
dec
inc
xchg
arpl
xchg
inc
int3
jns
mov
shll
adc
fs
arpl
xor
shlb
mov
bound
xlat
cltd
stos
addr16
inc
loope
pop
out
sub
sub
jo
xchg
lea
jnp
popf
mov
mov
repnz
les
xor
insb
stos
call
clc
sbb
or
test
cmp
clc
mov
xchg
out
mov
leave
in
sub
pop
sti
in
push
sbb
movsl
pop
lods
pop
lods
sub
in
mov
mov
ljmp
xor
loop
jmp
subl
pop
rcrl
jg
cltd
insl
inc
js
push
adc
inc
repz
addr16
pop
xchg
out
fdivl
jle
mov
in
rol
pushf
mov
lahf
mov
inc
sub
xor
dec
mov
xchg
cltd
loope
xchg
xchg
xor
scas
and
jle
test
in
sbb
cmp
add
inc
pop
and
fcoml
mov
and
push
or
jne
adc
sti
insl
je
and
jp
outsl
and
xchg
dec
lods
mov
mov
mov
lret
sbb
and
out
adc
xchg
imul
je
cmp
out
sub
loopne
and
inc
pop
pusha
shll
mov
pop
les
jge
xlat
mov
mov
es
sbb
gs
dec
daa
pop
dec
and
xchg
adc
subl
mov
xlat
inc
flds
inc
in
cs
push
push
aas
mov
fwait
and
cmpsl
ret
pop
inc
jecxz
xor
pop
pop
inc
aam
enter
mov
test
add
mov
or
mov
push
jge
inc
pop
mov
pop
jnp
andb
inc
sbb
push
inc
and
test
stos
jo
addr16
xor
lea
ss
dec
add
cltd
lods
loopne
mov
sti
shrl
repnz
outsb
sbb
into
adc
data16
scas
mov
les
ret
xor
and
and
mov
and
fsubrs
out
inc
jns
lahf
es
inc
mov
cmp
aas
roll
lcall
xchg
call
mov
xchg
mov
repnz
fimuls
loopne
cmp
sub
sub
inc
pop
rcr
mov
lods
adcb
push
mov
call
jecxz
adc
inc
arpl
adcb
shrl
jge
out
ds
push
enter
or
and
cmc
das
and
andl
cmp
inc
lahf
jmp
aad
rolb
cmpsb
pop
jge
fstl
ret
cmp
mov
fcomps
xchg
push
in
movsl
jno
mov
negl
inc
mov
popa
adc
imul
loope
push
xchg
ret
mov
fldcw
and
pushf
cmp
imul
cmc
sahf
jae
or
cmp
mov
mov
mov
jg
rcrb
out
in
pop
arpl
imul
push
pop
xchg
nop
push
out
mov
jle
pushf
adc
sbb
aaa
rorl
cmp
mov
push
jge
out
push
push
sub
dec
les
pop
xor
lcall
push
and
ds
jbe
shlb
xor
lods
mov
mov
inc
dec
jge
pusha
xchg
cli
lahf
cmp
mov
jns
loop
js
xchg
cmp
push
mov
push
ss
inc
aaa
inc
or
test
sbb
ret
ljmp
shrb
mov
xchg
pop
push
pop
add
push
add
dec
mov
inc
popf
aam
mov
test
inc
sbb
cwtl
or
push
mov
xorb
mov
xchg
mov
jecxz
icebp
lods
js
lods
mov
xlat
neg
cmpsb
cmp
mov
or
ja
lods
mov
add
sahf
mov
mov
mov
dec
sbb
xor
aad
and
pushf
sbb
sahf
mov
repz
dec
jmp
lret
and
addr16
adc
repz
jbe
jle
mov
jmp
cmp
sbb
fneni(8087
xor
int
inc
or
clc
sub
shlb
xor
rclb
pop
clc
mov
cmp
cmp
popa
mov
mov
mov
cmpsl
and
mov
cmp
and
repnz
push
sub
push
sahf
jge
or
pop
scas
xor
mov
mov
sbb
mov
push
mov
daa
in
xchg
mov
in
pop
cmpsb
sbb
mov
scas
mov
data16
jbe
bound
stos
push
mov
imul
mov
cmpsl
aaa
daa
lea
stos
xor
mov
fwait
xor
jle
jge
dec
lods
stc
inc
xchg
pop
and
xor
mov
and
or
dec
jo
push
lods
xor
out
mov
adc
pop
mov
int
jp
cwtl
add
mov
sbbb
pop
call
xchg
lds
mov
sbb
imul
clc
mov
mov
push
sub
push
mov
daa
mov
cmp
push
sub
shl
push
xor
fwait
sub
and
or
hlt
scas
fistps
mov
fnsave
mov
imul
cmp
aas
pop
pusha
and
dec
lds
filds
push
or
in
std
mov
test
fisubl
lahf
jns
pop
mov
mov
pop
push
int3
adc
call
pop
lcall
js
push
hlt
sub
sarl
push
stos
sbb
mov
mov
jns
lea
call
mov
add
cmpsb
lods
out
js
lret
mov
call
cmp
xor
fiaddl
jecxz
mov
jle
mov
cmp
add
lds
repz
add
fnstcw
adc
dec
xor
arpl
jp,pn
fstpl
sub
cld
nop
popf
mov
test
out
mov
push
mov
mov
loopne
in
and
add
cmp
shlb
mov
sbb
and
sbb
cmc
inc
and
cs
pusha
and
push
push
imul
pop
dec
xor
jae
push
call
dec
inc
in
xlat
mov
in
ret
ret
push
jbe
aas
popf
scas
popa
out
pop
mov
and
popa
movaps
ret
sbb
test
push
pop
imulb
repnz
popf
sub
sub
shl
sub
sbb
sbb
scas
sahf
pop
sbb
push
ret
dec
jp
loopne
add
mov
adc
lea
add
fwait
mov
insb
aam
sbb
mov
pop
adc
test
cli
sub
popa
add
iret
imul
dec
cli
sub
adc
push
add
les
pop
faddl
adc
inc
jecxz
out
aaa
ljmp
sbb
push
jbe
cmp
jg
inc
stos
jns
or
dec
mov
cli
sahf
fwait
mov
test
aaa
mov
and
sbb
outsb
cmc
movsb
fstl
daa
mov
fs
clc
aad
sub
inc
mov
push
imul
adc
nop
mov
aaa
cltd
mov
mov
flds
or
pop
mov
cmpsl
int3
pop
adc
dec
jg
cmc
adc
pusha
mov
or
jbe
cmp
mov
jge
pop
xchg
and
and
scas
xlat
sbb
or
dec
jmp
lea
in
test
addl
mov
outsl
mov
je
push
mov
inc
aam
pop
and
push
and
sub
loopne
push
cmpsl
loop
jbe
int
sti
cmp
cmp
mov
psllw
std
mov
pop
incl
aaa
jb
sbb
adc
movsl
jno
ss
imul
ret
dec
sbb
scas
movsl
out
dec
mov
xor
sub
inc
int
adcb
enter
pop
sub
fwait
inc
jl
xor
daa
push
dec
jbe
cmp
shlb
fldl
xchg
adc
cmp
or
or
push
les
stos
decl
outsl
mov
xchg
aad
cmp
ret
mov
sarl
mov
xchg
xor
jns
insl
inc
int
mov
xlat
enter
pop
imul
sub
xor
mov
test
lea
test
sahf
xor
daa
mov
sbb
and
inc
inc
inc
sbb
mov
jle
fldl
sahf
imul
sbb
adc
mov
repz
xchg
aad
xorl
sar
cmp
shlb
mov
mov
ret
mov
dec
dec
mov
mov
push
mov
jle
ret
xor
or
fmuls
adc
pop
data16
mov
inc
sbb
lds
push
test
int
loop
stc
mov
fwait
sub
jle
inc
mov
and
in
sbb
sahf
xchg
daa
popl
outsb
xor
cli
jbe
negl
nop
lea
push
ficoms
xor
add
loop
xchg
xchg
daa
mov
mov
pop
and
inc
jae,pt
out
cmp
sub
add
je
imul
push
cmpsl
mov
xchg
push
cmp
xchg
xchg
push
filds
and
xchg
in
mov
pop
subl
gs
imul
hlt
xor
fsubrs
subl
mov
xchg
mov
and
add
addr16
inc
pushf
cwtl
mov
ljmp
ljmp
push
lret
out
mov
shlb
lcall
push
jge
sbb
or
shll
popf
inc
sub
mov
xchg
mov
sbb
sbb
pop
cmp
mov
in
popa
daa
jbe
mov
pop
loopne
loope
dec
push
push
test
jecxz
adc
fcmovbe
cmp
inc
lods
rcrb
push
sub
shlb
enter
mov
fwait
or
popf
fdivr
dec
xchg
idiv
inc
add
aas
ret
sbb
pop
xchg
les
sbb
mov
popa
jge
inc
dec
adc
cmp
sub
inc
cld
pop
in
bound
and
xchg
pop
or
mov
mov
xlat
add
dec
fstpt
rcll
mov
dec
push
dec
push
xor
push
lea
and
mov
gs
inc
dec
pop
push
xchg
mov
pusha
adc
mov
sti
lret
mov
divb
scas
call
lods
mov
mov
mov
mov
pop
xchg
stc
aad
scas
push
ds
es
stos
dec
arpl
sbb
sbb
push
rcll
imulb
cmp
sbb
pop
mov
push
xor
in
xor
add
jnp
testb
pop
pop
js
scas
jg
mul
imul
dec
jl
pop
xor
ret
mov
cli
or
repz
adcl
push
or
sub
int
gs
inc
es
ljmp
mov
inc
and
pop
cwtl
lods
shrb
mov
ljmp
lods
push
sti
jno
ret
inc
xor
and
push
mov
in
add
jne
loopne
je
adc
repnz
scas
xchg
or
pop
andb
pop
pop
xchg
lods
scas
adc
push
push
test
jns
and
add
bound
aas
cmp
lock
mov
hlt
mov
cld
push
pushf
ljmp
and
popf
or
ljmp
popf
mov
pop
push
pop
fdivrs
pop
mov
imull
sbb
add
out
imul
xchg
xchg
mov
cmpsb
test
lret
faddl
fnsave
cmp
cwtl
insl
pop
jg
es
cmp
cmp
cmpsb
sub
fcomip
outsl
lret
and
stos
cmpsl
aad
dec
out
icebp
negb
adc
xchg
push
sub
and
jp
inc
stc
jne
sahf
mov
fldt
and
push
insl
and
pop
ljmp
imul
hlt
cltd
mov
inc
fwait
test
adc
fwait
aas
xchg
movsl
mov
xorl
aad
pop
cmp
mov
xor
es
pop
gs
mov
xchg
pop
mov
sub
mov
dec
mov
sub
lock
sbb
mov
in
enter
pop
mov
fsubrs
popf
lret
std
pop
pop
inc
mov
ret
inc
out
scas
pusha
add
ret
icebp
outsl
lret
push
into
xchg
daa
xor
pop
arpl
mov
outsb
inc
jecxz
xor
nop
dec
mov
pop
sub
sahf
divb
push
pop
pusha
hlt
mov
in
in
sbb
push
sahf
xchg
insb
push
fldenv
in
push
add
scas
cmp
jecxz
dec
nop
xor
mov
popa
and
jle
sahf
out
stos
inc
loope
dec
sahf
add
push
or
pop
jecxz
pop
push
mov
xor
or
pushf
xchg
add
arpl
fbld
call
pop
inc
mov
push
add
js
mov
shld
and
pushf
rorl
icebp
lcall
push
xor
andb
sbb
pop
rclb
sub
inc
fscale
inc
mov
out
mov
mov
in
dec
cmpb
inc
les
mov
mov
mov
sar
push
movsb
negb
imul
out
push
mov
xchg
nop
push
mov
jle
mov
loope
sbbl
or
or
mov
and
scas
shll
popa
push
mov
cmpsb
push
es
xchg
arpl
out
test
pop
cmpsl
push
push
nop
jge
popf
pop
jo
pop
fnsave
ja
jl
mov
xchg
jae
movsb
inc
ds
jl
xchg
test
inc
mov
or
stc
ss
sahf
push
lods
inc
sarb
and
loope
jb
pop
or
enter
jl
iret
mov
stos
test
imul
add
int3
and
roll
push
icebp
dec
inc
cmc
loop
addl
push
outsl
fnstenv
sub
lds
cld
es
sub
outsb
fs
xlat
iret
fdivp
xchg
cs
sbb
cmp
adc
pusha
xchg
test
xchg
jecxz
push
mov
mov
and
icebp
cli
in
or
subl
add
sbbl
daa
sub
lds
push
test
mov
repz
jbe
fdivrp
dec
test
cmpsl
push
mov
stc
inc
xor
pop
xchg
shl
pop
inc
push
rclb
inc
push
imul
sub
mov
loopne
stos
in
stos
rcrb
xlat
lcall
fldenv
repz
cmp
out
sub
nop
push
daa
or
adc
popa
cmp
pushf
lcall
xor
fsts
sub
sbb
sub
fwait
lods
xor
nop
cmpl
rcll
mov
aam
repnz
and
xchg
add
shr
mov
and
dec
xchg
stos
outsl
pop
movsb
insl
jmp
xchg
mull
cmpsb
cmpsb
ror
ret
pop
dec
shll
shll
push
and
rcrl
aas
ja
movsl
mov
movsb
sbb
cmpsl
inc
cmp
data16
push
mov
pop
jbe
cs
and
jge
mov
and
fldt
stos
testl
and
push
cmpsl
rcrb
xorl
cmp
inc
aad
push
aam
stos
lods
inc
push
pop
lea
add
inc
add
outsl
push
push
adc
out
fildl
mov
pop
inc
mov
adc
repz
shlb
lret
add
fadds
push
in
insl
add
jne
or
jb
push
sub
or
pop
ljmp
inc
subl
cs
or
sub
pop
ljmp
jecxz
aam
mov
mov
cmp
pop
xor
add
fucomip
xor
mov
clc
mov
ljmp
cmpl
sub
mov
adc
inc
inc
dec
scas
fnstenv
lock
push
fisubl
addr16
ficomps
pop
xchg
daa
mov
enter
inc
arpl
ret
ret
sahf
pusha
xchg
push
mov
dec
test
fidivrs
or
cmp
imull
ret
pushf
aas
add
xchg
ficoml
xchg
test
lods
hlt
sbb
pop
inc
popf
stos
fidivs
cs
popa
sub
ret
jae
test
push
dec
dec
popf
into
xchg
popa
mov
movsl
push
and
lods
data16
sub
push
push
aas
adc
jecxz
push
cmpsb
gs
push
xchg
sub
mov
stos
ljmp
in
push
dec
out
bound
and
test
jp
shll
sbb
dec
imul
ja
repz
jns
ss
xchg
jcxz
aaa
xchg
add
out
mov
push
jb
mov
push
mov
pop
sbb
cli
rclb
mov
xchg
stc
dec
mov
dec
in
sub
jo
push
pop
out
pop
leave
jae
in
test
cmp
repz
push
bound
sbb
mov
pop
xor
fwait
cld
scas
ds
pop
jp
cmpsl
in
jno
das
stos
cmp
xchg
cld
add
stos
icebp
or
xchg
mov
inc
lea
cwtl
sbb
mov
aas
outsl
mov
pop
pop
sub
add
jecxz
add
adc
ret
sub
and
push
cmp
mov
test
sub
stos
leave
pop
mov
push
sub
jg
mov
in
stos
loopne
pop
adc
and
inc
add
nop
sbb
jae
jl
outsl
xchg
addr16
xor
fbstp
fdivp
xchg
xor
clc
divl
add
pop
in
or
test
add
loopne
dec
repnz
cmp
outsl
cmpsb
xor
pop
mov
incl
pop
mov
cmpsb
shrb
fidivs
dec
fwait
int3
ret
mov
popf
loopne
imul
cmp
adc
jmp
sahf
xlat
mov
clc
loop
jns
cmp
sub
in
xchg
loop
mov
pop
sub
rcll
ret
incb
xchg
out
pushf
dec
push
data16
scas
sub
or
fs
push
adc
fildl
add
out
mov
les
mov
insl
adc
cmp
sahf
mov
mov
xor
mov
or
loope
and
xchg
aad
sub
xchg
cmpsl
cmpsb
pop
push
mov
xchg
loop
mov
cmp
popa
data16
imul
pop
xchg
xor
fwait
cmpsl
push
cmp
cmp
xor
dec
aas
std
xchg
cmp
jl
mov
push
xchg
sub
outsl
loope
es
out
call
and
adc
inc
pop
push
xor
pop
test
xchg
enter
dec
ds
movsl
push
push
ja
cli
mov
cltd
sub
add
inc
mov
cmp
add
cltd
sbb
in
jle
lret
cmp
cmp
fs
daa
jb
xchg
adc
sti
xor
and
adcl
mov
fdivrs
inc
hlt
shll
sub
repnz
insl
rolb
jg
mov
inc
lds
cmp
bound
repnz
dec
ss
push
mov
pop
lods
jmp
popa
cmpsb
out
pop
out
jb
int3
push
sub
loope
out
dec
pusha
jp
jp
outsb
loope
daa
push
pop
sbb
mov
and
aam
jnp
fs
dec
scas
or
mov
and
add
js
dec
arpl
xchg
cmpsb
and
fwait
dec
or
das
cmp
jg
and
out
jge
lcall
or
cli
jne
dec
cli
xchg
les
aam
inc
cwtl
jg
dec
xlat
xor
arpl
sbb
aad
inc
mov
bound
jbe
scas
cmp
stc
push
push
xor
enter
push
cs
outsb
or
and
je
lahf
leave
fadds
push
and
cmp
xchg
mov
lds
rcrb
xchg
fidivrs
mov
xor
jg
mov
mov
mov
roll
jp
mov
dec
fstp
mov
cltd
out
push
add
cltd
mov
mov
je
mov
jne
lock
mov
bound
scas
sbb
jge
lods
xchg
ret
popf
sarl
adc
sbb
es
fiadds
les
lcall
inc
pop
enter
ljmp
shrl
mov
notl
sub
mov
test
iret
sub
sub
and
mov
pop
sbb
scas
movsb
add
mov
in
and
dec
sbb
popa
xor
aad
and
popa
out
shll
stc
movsb
xor
push
lds
jns
inc
sbb
repz
roll
arpl
sbb
push
mov
xchg
clc
imul
fs
xor
inc
xor
paddusb
mov
mull
and
ret
sbb
sbb
xchg
xor
js
stos
mov
icebp
mov
enter
data16
scas
sbbb
push
loop
xor
mov
jno
jecxz
in
mov
inc
in
push
xlat
adc
lea
shrb
mov
shl
dec
mov
adc
inc
pop
hlt
and
loop
mov
lds
adc
pop
cmp
rcll
movsb
nop
ficomps
jne
std
shlb
mov
out
es
dec
sub
loopne
xchg
dec
mov
adc
shlw
test
popf
je
jge
cmp
movsl
pop
cs
mov
xor
in
in
nop
sahf
jbe
pop
fnsave
push
sub
or
outsb
mov
scas
cmp
ds
dec
test
pop
pop
adc
xchg
adc
xchg
pop
fadd
push
popf
movsl
or
cmp
cwtl
bound
mov
mov
and
xchg
fistpl
pop
cmpsl
pop
ja
daa
mov
sar
data16
mov
sub
lds
leave
imul
dec
mov
xorb
or
mov
push
push
data16
mov
sbb
aaa
jecxz
sub
push
pop
pop
jnp
pop
inc
cmpsb
cltd
fdivrl
push
cltd
shlb
inc
sbb
xchg
mov
xchg
or
insb
fnsave
dec
cmpsw
insl
fldcw
cli
loope
inc
sbb
push
or
cmp
pusha
xor
out
cmp
sti
xor
scas
sbb
pusha
mov
push
icebp
pop
inc
in
jl
movsl
adc
sti
outsb
dec
dec
add
jnp
mov
andl
inc
jmp
ss
mov
mov
inc
sub
xchg
mov
adc
insl
loopne
cmc
and
adc
loop
adcl
jnp
in
adc
lcall
adc
add
mov
cwtl
mov
dec
jle
sbb
push
hlt
push
cmp
out
and
push
out
sarl
xor
mov
insl
xor
cmp
popa
cmp
dec
adc
and
aad
xchg
out
jle
mov
gs
adcb
aaa
push
lret
loope
sahf
cmp
cli
lods
cmp
jge
mov
dec
int3
inc
mov
ss
push
neg
dec
mov
xchg
outsb
jg
lcall
jnp
mov
push
and
dec
mov
fidivrl
pusha
xchg
add
dec
lahf
ficoml
pop
add
cmpsl
scas
addr16
push
jae
jno
mov
inc
cli
in
leave
loopne
and
loopne
inc
push
hlt
pop
mov
xchg
loope
jno
push
and
out
xor
or
cmpsl
jecxz
pop
jne
pop
subb
dec
popa
push
pop
push
pop
fldenv
pop
push
pop
push
mov
popf
repz
jae
push
adc
loope
andb
mov
cmpsl
fs
popa
mov
add
js
push
mov
sti
in
dec
inc
sbb
loope
in
push
in
outsb
and
cmp
dec
mov
pop
pop
jmp
dec
cmp
inc
cmp
mov
sbb
xor
jp
jl
add
mov
mov
pushf
mov
out
popa
orb
fcmovnbe
sti
in
and
mov
jo
incb
in
or
push
fidivs
cmpsl
test
xor
scas
cmpsb
icebp
xchg
ret
mov
cltd
lods
movsl
mov
push
lahf
xchg
hlt
imul
aaa
mov
in
aas
and
ret
mov
pop
cmp
cmp
push
jne
or
pop
mov
bnd
pop
dec
fdivrl
mov
jg
xor
mov
or
cmpsb
mov
loope
add
mov
inc
inc
les
sub
stos
popa
mov
js
cs
mov
rcrl
int
mov
dec
or
leave
sbb
sbb
notl
mov
icebp
fnstenv
push
fcmovnbe
lock
leave
xchg
pop
jle
add
lods
adc
popa
adc
mov
repnz
mov
imul
mov
mov
adcb
ja
movsl
ja
xor
inc
cmp
loopne
pop
lret
arpl
dec
movsl
pop
in
jo
sbb
add
adc
mov
pop
pusha
push
loope
mov
inc
iret
pop
pop
mov
cmp
and
push
divl
xor
xchg
jne
sub
in
cmp
out
int
push
mov
mov
jecxz
inc
loopne
mov
pop
mov
popf
in
mov
pop
outsl
jno
sub
xchg
icebp
mov
fnstenv
push
mov
mov
jne
push
mov
push
sbb
jecxz
jp
dec
aam
jp
movsb
mov
aad
and
clc
jo
lret
mov
sbb
pop
adc
mov
jae
testb
push
stos
jge
fsubl
mov
icebp
push
adc
ret
or
mov
push
in
hlt
adc
cmp
dec
sbb
jbe
sub
add
push
jle
sub
dec
dec
lds
mov
clc
inc
aas
xor
cmpb
push
add
mov
or
cmpsb
pop
popf
js
xchg
jo
adc
inc
mov
inc
das
mov
xchg
push
mov
icebp
rcr
sub
cmp
repz
lret
nop
cmp
test
or
xor
push
sbb
mov
lcall
fwait
lcall
imul
fimull
cld
cmp
sbb
and
rol
push
js
lcall
lods
leave
xchg
int
pop
inc
call
test
sub
sub
cmp
in
rcl
pop
les
ficoms
sbb
andb
shlb
jne
mov
mov
pushf
push
pusha
push
fnsave
push
and
sub
and
push
rcrb
mov
sub
icebp
adc
rcll
stc
repnz
lods
sahf
push
aas
mov
jp
pushf
add
pop
cmpsb
sbb
pop
push
scas
je
mov
imul
adc
jecxz
cli
sub
cmpsl
sub
mov
shlb
cwtl
stos
sub
pop
scas
cli
xchg
pop
vdivsd
add
outsb
sbb
sub
sbb
es
shrl
aas
xchg
mov
fistps
push
mov
dec
jns
imul
xchg
xor
pop
inc
jb
push
mov
jge
pop
lret
pop
add
adc
sahf
pusha
add
sti
jne
cmpsb
sub
mov
sub
inc
xchg
popa
xchg
scas
xor
mov
mov
pusha
mov
pusha
pop
mov
stos
sbb
stos
cmp
mov
andb
dec
push
adc
jecxz
mov
jbe
dec
cwtl
push
nop
sbbl
lds
into
and
ret
fwait
pop
divb
adc
sbb
test
stos
mov
xchg
xchg
push
fistpl
cmp
and
mov
cmpsl
dec
rclb
mov
mov
mov
test
push
cmpsb
xchg
cmpsb
cmpsb
mov
sbb
xchg
mov
arpl
mov
ds
pop
cmp
adc
dec
cmp
pushf
es
cli
sbb
dec
cwtl
lcall
inc
in
push
std
mov
cmp
cmp
pop
adc
and
add
lock
ret
xor
es
ja
push
popf
jae
icebp
add
movb
mov
mov
pop
movsb
in
jnp
lods
mov
push
lods
lcall
mov
sub
add
rcrb
ret
in
sbb
fwait
ret
call
iret
ja
call
pushf
mov
insl
mov
aam
xlat
repnz
mov
fsubs
or
lahf
adc
pop
adc
xchg
fst
out
jno
cmp
mov
scas
pop
jns
hlt
cmp
jl
jae
add
and
popa
fnstsw
popf
lret
jge
push
js
fisubl
xchg
pushf
ljmp
in
or
mov
cmpsl
ret
loopne
shlb
movsb
mov
lds
dec
test
fs
scas
cmp
ret
mov
inc
pop
mov
xor
push
mov
es
dec
arpl
test
pop
adc
lds
add
mov
cmp
mov
xor
xchg
roll
dec
fisttpll
xchg
repz
clc
mov
xchg
and
fwait
sti
push
mov
add
sbb
sub
gs
cmc
and
jl
aad
sub
lock
fidivs
mov
mov
out
and
mov
inc
lods
push
inc
xor
and
cmp
fadds
xor
sti
lret
cwtl
stc
int3
int
cmp
dec
jbe
xor
mov
popa
js
mov
popf
inc
cwtl
lahf
dec
or
xchg
xchg
pop
lahf
xchg
iret
movsl
fisubrs
fs
imull
js
sub
push
mov
dec
jne
add
iret
stos
mov
aad
out
subl
mov
mov
mov
or
mov
cmp
sahf
insl
cmp
insb
mov
cltd
ja
mov
xchg
adc
and
arpl
or
es
mov
sub
inc
es
adc
aas
in
mull
mov
aam
mov
push
daa
or
and
and
mov
ret
mov
jnp
push
fisubl
outsb
std
jle
cli
push
sub
ret
push
push
shl
loop
mov
in
and
rclb
stos
testl
clc
iret
sub
ss
fists
dec
pusha
mov
dec
push
cmp
add
xchg
push
mov
dec
out
imul
xchg
push
sub
jb
ljmp
aam
inc
fsubrp
sti
dec
fwait
push
arpl
inc
test
in
inc
jmp
in
jecxz
in
cmp
pop
dec
pop
lods
and
pop
out
jb
iret
mov
push
and
or
mov
test
pusha
popa
mov
ds
cltd
jecxz
mov
xchg
scas
in
lea
xchg
and
call
ret
dec
mov
mov
and
inc
negl
and
push
into
fldenv
inc
fidivrs
outsb
in
cli
adc
out
cmp
out
xchg
lret
cmpsl
daa
fwait
aas
sbb
int
nop
cmc
jecxz
adc
xchg
push
cmp
pop
incb
add
jle
imul
push
pushf
daa
outsb
and
mov
imul
pop
push
scas
cmc
stos
es
mov
push
jns
in
or
sub
lods
inc
jg
dec
cli
sub
ljmp
mov
add
shll
pop
mov
iret
fs
sar
and
sub
stc
pop
sbb
dec
out
add
mov
jl
in
insl
pop
cmpsb
lods
mov
add
addr16
call
xchg
std
notb
mov
and
lea
mov
bound
pop
push
cmp
dec
cmp
push
mov
jne
out
xchg
mov
pop
adcl
iret
pop
ror
sbb
pusha
sbb
push
mov
pusha
arpl
outsl
adc
push
and
jbe
cmpsb
jp
ds
ja
leave
sbb
inc
pop
dec
dec
pushf
out
xorl
pop
sti
lcall
cmp
jns
xor
shl
sbb
add
mov
adc
jns
and
mov
dec
daa
gs
repnz
mov
lret
loopne
mov
pop
inc
add
out
out
je
repz
pushf
mov
push
loop
dec
inc
test
scas
mov
fsubr
push
out
push
in
and
push
addr16
aad
push
xchg
clc
mov
adc
mov
ret
test
xor
out
and
mov
add
in
sahf
rcrl
mov
cmpsb
jnp
ds
cltd
adc
jecxz
orl
jecxz
ja
lcall
inc
pop
mov
push
push
test
mov
sub
xchg
mov
fldenv
cmpsl
leave
es
aas
out
pop
mov
cwtl
jmp
arpl
pushf
mov
pop
jnp
ret
add
add
mov
adc
mov
lret
stos
roll
and
add
sbb
xchg
bound
movsb
stc
pop
arpl
dec
subl
jmp
into
stos
sahf
xchg
mov
cmp
xor
mov
push
addr16
push
inc
daa
cmp
arpl
sbb
dec
xor
out
push
sbb
xchg
mov
cmpsl
aaa
lahf
cwtl
push
mov
stos
and
pop
pop
push
cmpsl
fldcw
or
lahf
gs
mov
sbb
inc
xchg
fildl
mov
cmp
repz
lret
pop
loop
push
aaa
js
xchg
int
cmpsb
in
pop
ljmp
push
ds
test
add
and
fwait
es
sbb
cmpsb
mov
add
add
xlat
pop
pop
enter
mov
int3
add
xchg
push
and
push
shlb
ficoml
sbb
dec
mov
imul
shl
js
rolb
or
xchg
loope
and
mov
push
ja
cmc
push
mov
cltd
ret
mov
lods
dec
enter
xor
es
movsl
dec
sub
jbe
push
push
aas
in
lcall
sahf
fisubrs
mov
lock
imul
rcrl
add
fwait
mov
jp
sub
sub
imul
jmp
xchg
mov
pop
stos
gs
sbb
and
add
adc
cmpl
aaa
jnp
xlat
jno
in
mov
mov
sti
sub
mov
xchg
push
mov
fcoms
mov
dec
mov
lock
test
popa
rcrl
pop
out
xchg
xor
enter
xor
push
fists
cli
out
push
or
xor
in
cmp
bound
pop
leave
ja
or
push
pop
int3
lea
repnz
sarl
xlat
cwtl
mov
ficoml
inc
outsl
add
pop
cmpsb
shlb
xchg
aaa
mov
mov
out
sub
cmp
mov
outsl
scas
jge
popa
dec
jns
pop
and
aaa
cmc
adc
aad
jnp
adc
dec
and
mov
mov
sub
shll
int
add
test
mov
imul
inc
jae
call
mov
mov
ficompl
mov
mov
loop
jns
int
fdivl
daa
mov
je
loop
inc
out
into
jge
in
mov
dec
ret
mov
jns
dec
xchg
jo
inc
popf
rclb
cltd
xchg
loop
sub
adc
and
add
adc
lcall
inc
sbb
mov
flds
stos
sarb
dec
test
push
xor
push
imul
or
in
push
jb
jmp
lods
lods
cmp
mov
imull
fidivrs
push
jg
pop
adc
add
in
sub
push
and
sub
cmpb
jne
jno
push
shrb
cmp
adc
imul
mov
aas
dec
or
and
out
cld
stos
push
fwait
pushf
adc
mov
testl
test
sub
pop
jne
testb
push
xlat
out
push
adcl
pop
bound
sbb
pop
ret
pop
xchg
jo
xchg
dec
outsb
mov
ret
sub
jl
inc
test
fwait
mov
sbb
test
adc
jge
fs
xchg
jbe
xor
xor
test
cs
xchg
push
cmc
pop
jns
push
push
std
push
call
ja
repnz
fcoml
test
cwtl
and
sti
out
pusha
dec
sahf
jno
idivl
je
int
mov
gs
js
in
shrl
fsubp
adc
xchg
cmp
inc
xchg
pop
rcrl
jle
xor
stos
pop
fcompl
jno
mov
movsb
dec
lahf
and
push
daa
popa
pop
add
fcomps
dec
mov
or
jb
mov
ret
sub
mov
ret
shrl
fcomps
sub
dec
dec
cmp
push
and
xchg
xchg
sbb
movsl
insb
pusha
cmc
in
push
xlat
popf
cltd
loopne
xchg
movsb
gs
pop
loopne
mov
lds
inc
icebp
les
dec
jg
out
jnp
mov
add
jle
mov
jbe
outsb
add
bound
and
mov
sub
fbld
push
out
push
mov
inc
int3
or
pop
jp
insb
fstpl
lcall
sbb
test
sub
in
xchg
sub
sub
inc
movsl
ljmp
jg,pt
shll
pop
mov
cmp
arpl
sub
mov
insl
sub
sbb
push
xchg
cmc
add
and
push
jbe
mov
mov
scas
or
pop
jle
pop
stos
pop
dec
stos
adc
arpl
gs
mov
mov
and
or
inc
sub
mov
in
inc
xor
or
int3
jecxz
repz
push
add
sub
push
cmpsl
push
xchg
sbb
dec
hlt
rcrb
scas
sbb
sub
fs
nopl
ficoms
ffree
cmp
xor
lea
jg
arpl
and
cmp
pop
jecxz
mov
pop
and
in
aad
arpl
roll
call
push
test
xlat
popa
pop
mov
cmc
dec
adc
xor
dec
jno
in
jo
fsts
ja
repz
movsl
mov
mov
mov
cmp
test
cmpsb
in
xchg
jl
and
lret
and
int3
fisubl
or
jns
ret
push
mov
mov
jb
inc
mov
daa
bound
mov
xor
fidivrs
les
je
enter
xchg
add
mov
ljmp
mov
shll
leave
push
mov
xor
mov
movsl
imul
mov
cltd
movsb
sub
sti
sub
lods
inc
mov
imul
sub
cmpsb
js
test
xchg
arpl
jecxz
jg
es
jne
adc
adc
std
add
lds
adc
in
or
cmp
xchg
cs
xorb
sahf
and
lcall
cmp
xchg
fistpll
mov
dec
cltd
inc
mov
pusha
cmp
jbe
outsb
or
ret
add
stos
dec
fwait
mov
scas
mov
push
addr16
shrb
aas
inc
and
cmp
push
push
pop
rclb
test
mov
out
adc
pop
std
xchg
pop
add
pop
daa
sbb
ja
dec
mov
ret
pop
nop
lahf
shll
or
aaa
or
sti
push
in
pop
inc
xlat
xor
lea
mov
aad
mov
mov
fwait
add
xor
add
push
fimull
stos
lock
aaa
popf
jne
loope
mov
mov
std
into
pop
jo
test
aaa
xor
xchg
mov
mov
je
hlt
inc
xchg
cmpsb
aas
subl
mov
mov
add
int
lret
jne,pt
lods
or
cmp
pop
cmpsl
imul
push
jecxz
fnsave
adcb
jecxz
sub
xchg
stos
jge
cmp
inc
addb
pusha
lds
and
idivb
lret
bound
int
and
cmpsl
mov
adc
out
cmp
mov
popa
mov
mov
sub
jbe
cmpsl
cwtl
sbb
sub
mov
push
cmpsl
xchg
in
sbb
cmp
icebp
icebp
adc
add
add
icebp
jecxz
cmp
mov
mov
xor
mul
pop
dec
into
std
pop
test
fsubl
nop
lcall
xlat
mov
inc
sbb
jnp
cmp
movsb
lock
push
push
mul
cmp
loopne
fisubrs
xor
and
mov
aad
inc
in
mov
fs
out
xor
mov
bound
push
dec
out
sub
xor
in
xchg
sub
bound
mov
loopne
fstl
or
cld
pop
aas
lock
iret
cmp
pop
inc
push
gs
add
popf
and
imul
xchg
iret
fistps
test
loopne
and
sbb
cmpsl
xor
sbb
mov
ja
mov
fstps
jp
adc
ss
cmp
leave
scas
sub
mov
pop
adc
adc
in
and
add
test
mov
sub
push
neg
jbe
mov
fsubl
es
mov
and
test
std
shlb
jae
or
test
cmc
arpl
push
je
jle
or
xchg
pop
loope
pop
xchg
push
cmp
xchg
arpl
incl
jnp
push
ret
adc
jb
fdivrp
lahf
clc
pop
fimull
and
cld
xchg
out
xlat
dec
mov
sub
fidivs
cmpsb
cmc
out
icebp
push
xchg
ljmp
jp
pushf
push
adc
mov
xchg
test
dec
xchg
push
pop
ror
inc
insl
in
cmpsl
rcrb
push
adc
fwait
lock
jmp
inc
cmp
pop
ja
shlb
stos
xlat
mov
ret
je
or
mov
xchg
loopne,pt
movsl
cmp
stos
push
pop
mov
ret
sahf
jb
idivb
arpl
pop
sbb
cli
jo
mov
jo
call
add
mov
clc
sbbl
sahf
aad
movsb
in
inc
sub
int3
jbe
mov
pop
add
jecxz
ret
daa
add
pop
pop
repnz
pop
adc
lds
or
push
inc
cmpsl
cmp
xor
xchg
mov
gs
les
add
pop
sbb
jl
mov
stos
js
js
mov
dec
mov
adc
dec
scas
jmp
jmp
adc
nop
mov
movzwl
in
adc
sahf
xor
enter
stos
call
push
cmpsb
pop
mov
mov
mov
outsb
sbb
dec
fldt
xchg
cwtl
rorb
pop
pop
popf
xchg
mov
arpl
scas
sets
rolb
lahf
sbb
push
mov
jecxz
xchg
out
daa
mov
sub
inc
cmpsl
aas
jl
xor
pop
adc
mulb
sub
nop
push
scas
mov
test
popw
pop
jae
int3
fiadds
in
xlat
shll
sbb
inc
mov
xlat
cld
aad
mov
push
mov
out
repz
out
mov
cmp
into
pop
repz
mov
pop
outsb
fs
mov
jp
fldenv
jl
adc
cmc
outsl
mov
mov
test
addr16
xorb
lea
or
fldcw
aad
push
jno
and
cmp
stc
nop
sub
and
aam
adc
jl
jge
addl
or
lcall
pop
pop
mov
lea
rolb
lock
movsb
and
xchg
out
mov
cmp
outsl
dec
movsb
cmpsl
rcrb
out
out
pop
dec
add
mov
popa
lret
and
xor
jecxz
aam
push
add
add
loopew
xchg
negb
shlb
insl
mov
sub
xchg
sti
adc
fs
outsb
cwtl
mov
and
out
imul
mov
fisubrs
fwait
push
sbb
es
shl
or
loop
xchg
fsin
sub
out
int3
rcll
arpl
scas
loop
inc
lcall
movsb
mov
ljmp
cmp
push
sub
push
mov
icebp
or
jle
pop
jg
mov
adc
push
cmc
push
jo
lret
add
mov
xor
xchg
cs
fwait
idivb
fsub
jg
pop
and
movl
adc
repnz
outsb
pop
xor
loope
fadds
mov
daa
xchg
out
cmpsl
inc
cmp
jp
aaa
mov
sbb
adcl
cwtl
cmpsl
into
bound
out
inc
push
dec
dec
daa
fsubp
inc
test
inc
leave
imul
je
mov
pushf
rorb
fdivp
in
dec
mov
and
fs
cs
sbb
stos
fstl
pop
sub
fistl
pusha
pop
mov
jnp
inc
jl
xchg
je
pop
lret
es
xchg
fcomps
cmp
sti
adc
es
dec
scas
adc
pop
mov
or
and
add
xchg
and
es
inc
jno
test
cli
add
mov
rorl
popa
inc
loopne
test
stos
popa
lock
mov
pop
ljmp
lock
pop
pop
aas
dec
add
movsb
out
cmpsb
dec
scas
push
sub
pop
dec
test
mov
jno
mov
loope
pop
fisttpll
pop
inc
pop
inc
inc
and
cmp
popa
mov
loopne
insb
cmp
sbbb
bound
mov
mov
lods
ja
push
aaa
mov
inc
cmp
jle
cmovo
dec
sbb
add
xor
xor
sub
insb
sahf
fcoms
out
pop
add
testb
ficompl
stos
pop
add
jns
inc
lret
adc
mov
fs
lods
xor
outsl
dec
pop
ret
dec
cmc
fimuls
fidivs
push
nop
imul
fwait
sub
mov
mov
push
aad
dec
notl
or
sti
and
inc
fstp
mov
and
adc
loop
js
inc
out
cmp
jb
cmp
or
mov
jne
icebp
push
repnz
iret
adc
push
push
cmovo
bnd
aaa
cmc
sub
int3
mov
adc
ret
mov
mov
add
push
ret
stos
fidivrl
stos
cmpsb
inc
sti
es
mov
ljmp
test
cmpsl
aam
je
sahf
cmpsl
fiaddl
rorl
stos
rcrb
mov
adc
fmulp
mov
pop
sbb
and
ss
adc
add
or
dec
mov
rcrl
sbb
aas
rcl
push
sbb
xlat
add
inc
les
mov
testb
dec
dec
mov
mov
repnz
jp
cmp
xor
mov
xchg
fildl
out
rorb
imul
cmp
dec
adc
in
icebp
lds
test
push
aas
jge
xor
in
roll
jecxz
dec
push
and
testb
mov
cmpsb
outsb
mov
mov
scas
loope
bound
jne
adc
or
push
add
rorl
mov
jno
nop
enter
jae,pt
xor
iret
insl
pop
sub
movsb
mov
lock
shrb
test
stos
gs
and
inc
outsb
push
pushf
sbb
mov
std
push
cwtl
cmp
jg
fnsave
inc
cmp
loop
adc
movsl
imul
arpl
shlb
xor
dec
mov
sub
cmp
sub
loope,pn
int
test
inc
xchg
lcall
sbb
or
mov
in
mov
push
mov
sbb
aad
mov
xchg
jne
cmp
lcall
aas
mov
xor
ret
loop
pop
mov
jns
lret
int3
add
fs
and
sub
mov
sub
cmpsl
xor
push
inc
pop
ret
mov
and
stc
and
push
daa
dec
xchg
sub
out
cmp
cwtl
mov
jmp
adc
mov
inc
test
imul
loop
outsb
in
lock
cmp
dec
andl
popf
pop
arpl
call
inc
ja
in
cmp
and
jp
cs
cmp
pushf
test
xor
lcall
loop
loop
cmc
sub
inc
or
enter
sbb
push
dec
xlat
jecxz
mov
fcomip
movsb
test
dec
sbb
and
mov
ret
pop
xor
xchg
jg
mov
mov
shrl
cmp
cwtl
scas
mov
sbb
mov
imul
push
and
clc
out
inc
test
pop
sbb
lea
mov
into
leave
jnp
aad
cs
inc
mov
out
adc
or
sbb
in
fimuls
jmp
pop
mov
mov
stc
mov
xor
out
fs
fs
cmc
in
fstl
sub
push
aam
sub
fistl
xchg
nop
inc
mov
jmp
aam
xor
mov
add
notl
inc
cltd
sub
stos
dec
jb
pop
sbb
push
shll
js
jge
mov
pop
pusha
sub
sub
fs
cld
jecxz
sbb
loopne
sti
push
fwait
and
lock
in
cmp
xor
cltd
mov
aas
jecxz
icebp
jns
jb
inc
sub
push
mov
mov
pop
loope
test
sub
push
xor
daa
or
jne
pop
push
or
popf
pop
stos
out
lea
adc
imul
out
inc
mov
and
jne
xor
shrl
add
and
inc
sub
sub
mov
in
mov
movl
cmpsl
lods
mov
mov
ret
stos
fistl
push
inc
rclb
or
xlat
mov
cmpsl
int3
fiaddl
out
mov
sbb
push
adc
mov
sub
adc
addr16
out
lods
clc
xchg
push
mov
je
dec
pop
movsb
xchg
pop
pop
ficoml
shlb
cmpsl
sub
jbe
push
daa
mov
mov
lret
popf
popa
out
sbb
cmp
add
ja
repz
inc
pushf
and
inc
adc
xor
jp
popa
xor
repnz
push
cmpsl
jne
je
push
xchg
sub
dec
or
jb
es
cmp
lcall
push
mov
addr16
dec
enter
lcall
jge
nop
cmp
xlat
leave
dec
add
mov
and
jne
inc
cmp
and
or
daa
xor
xchg
mov
push
addb
pop
movsl
stos
aas
sub
push
mov
loop
jnp
jo
push
insb
jmp
or
adc
mov
repnz
mov
scas
je
pop
jmp
addb
xorb
dec
pop
cld
inc
fstpt
sub
xchg
subl
sub
gs
shll
xchg
in
call
daa
aad
jne
jmp
pop
mov
bnd
hlt
and
sub
mov
xchg
ja
jmp
inc
inc
movsl
int
loope
or
lret
inc
mov
or
lcall
mov
inc
enter
jge
sbb
push
adcl
roll
push
dec
int3
push
sbb
cmp
fs
xor
leave
loope
inc
in
fwait
movsl
push
cltd
inc
mov
mov
push
lods
push
push
ss
aas
pop
inc
aas
xchg
bound
pop
xor
sahf
xchg
pop
fmuls
movsb
fdivrs
movsb
js
add
inc
pushf
pcmpeqd
cwtl
shll
mov
jecxz
add
sub
idivb
inc
cmpl
dec
mov
cwtl
jle
push
adc
jmp
pop
add
fdivrl
gs
repnz
fisubrl
xchg
lds
bound
sbb
sti
stos
je
xchg
mov
or
aad
pop
jne
add
rcl
sbbb
or
int
test
lret
aad
inc
daa
das
pop
push
or
jle
cmovae
cmc
icebp
iret
sahf
daa
ficomps
aas
cltd
mov
push
fs
test
mov
mov
je
pop
ja
std
shlb
mov
scas
or
movsl
or
mov
cmp
shll
adcl
sub
bound
test
cmp
mov
pop
or
inc
iret
or
and
faddp
mov
sahf
int3
pop
imul
pop
xor
sub
dec
dec
and
mov
fbstp
rcl
cmpb
adc
mov
push
jne
ds
xchg
mov
mov
inc
mov
jb
aam
repz
adc
outsl
cld
xchg
sub
sarb
jbe
push
test
sbb
add
sbb
scas
pop
ljmp
sbb
lahf
daa
lock
pop
mov
enter
xor
fdivr
push
inc
in
call
mov
in
dec
dec
xchg
push
icebp
mov
scas
daa
or
mov
test
cmpb
stc
orb
fnclex
lcall
aad
push
roll
scas
ret
fcomps
push
push
lret
sbb
mov
cmp
in
jle
rcrl
jb
pop
aad
popa
shrb
loope
jmp
std
jno
mov
push
push
call
inc
push
cmp
dec
push
in
loope
scas
add
push
add
lods
loop
jae
insl
inc
loopne
push
push
shrl
data16
arpl
xor
adc
gs
mov
aad
cmpsb
and
in
push
pop
aam
mov
mov
ret
adc
int
dec
pop
idivl
cmpsb
and
fcoms
cs
mov
sbb
adc
push
and
mov
push
sbb
dec
ret
gs
test
pop
sub
pop
xor
adc
popf
repz
jmp
cwtl
xorb
push
aas
adc
lcall
in
lods
adc
jl
or
dec
dec
sub
or
loope
adc
cmp
add
mov
out
jnp
inc
loopne
jp
imul
jp
sbb
jmp
sahf
inc
mov
inc
mull
mov
pushl
push
mulb
mov
xchg
sahf
ja
filds
xor
in
jb
mov
mov
xchg
xchg
mov
sub
sub
out
frstor
and
xlat
mov
nop
pop
inc
inc
orl
adc
add
test
popa
in
pop
pop
push
arpl
movsb
lock
jns
frstor
inc
xor
mov
in
stos
cmp
mov
aaa
clc
or
mov
loope
js
push
push
es
mov
cltd
sbb
fwait
dec
xchg
xchg
mov
sub
push
std
dec
cltd
sub
pushf
daa
mov
fidivrs
and
stos
sub
mov
push
lock
outsb
fstpl
pop
inc
sbb
fs
sub
mov
xchg
sbb
mov
and
and
ljmp
scas
stos
pusha
pop
sbb
mov
jg
inc
es
inc
inc
sub
shlb
push
into
mov
mov
movsl
imul
push
adcl
ss
xchg
outsb
add
out
sbb
pop
xor
sbb
push
mov
mov
mov
sbb
jp
mov
ds
fwait
cli
cmc
mov
subl
cmp
test
mov
out
cmp
ftst
pop
dec
iret
cltd
call
jae
add
ror
outsb
sti
cmp
dec
push
lcall
cmovge
lods
xchg
scas
mov
mov
pusha
js
popf
das
cmpsb
jns
and
dec
mov
aad
push
sbb
pushf
fists
lods
inc
cmp
stos
arpl
sbb
and
lahf
sub
mov
into
mov
xor
in
lock
lcall
mov
dec
pop
inc
test
in
movlps
fists
incl
jg
jle
dec
cmp
rolb
jbe
cmp
and
add
cwtl
inc
fiaddl
loope
sub
adc
sub
xchg
and
imul
popa
lahf
mov
shlb
push
test
fnstenv
cmp
nop
int3
pop
xor
cmp
das
or
cmp
dec
jle
aam
pop
xchg
dec
insb
sbb
and
or
or
jno
fwait
or
scas
jp
daa
lods
jns
sbb
push
loop
mov
jns
aas
cmpsb
mov
inc
cmp
cld
imul
insl
and
inc
ja
pop
data16
push
int
or
shrb
inc
clc
clc
or
lock
out
mov
push
aas
push
lret
lods
jle
ror
push
cmc
rcl
push
inc
aaa
xor
fisttpll
sub
loopne
cmp
add
cwtl
pop
pop
mov
pushf
test
mov
sarl
das
push
push
sbb
imull
into
popf
pop
mov
ja
es
rcrb
test
dec
dec
loopne
rol
aad
or
test
dec
cltd
xchg
mov
push
jno
js
mov
jge
icebp
imul
xchg
xchg
ss
das
leave
popa
sub
dec
xor
push
xchg
subb
sub
cs
arpl
es
push
cmpsb
sbbb
mov
xor
jb
inc
lock
push
cltd
inc
loop
imul
mov
push
lahf
ficoms
and
pushf
sbb
push
scas
and
sbb
sub
mov
fnstsw
das
test
test
sbbb
ja
add
push
add
iret
out
pop
in
push
jle
shrb
xor
and
xchg
push
xchg
test
push
std
mov
dec
inc
mov
mov
sti
push
adc
jge
fisubl
sub
mov
and
mov
inc
iret
stos
and
frstor
fcoms
inc
cs
pop
mov
mov
out
ljmp
or
fbstp
call
rcrb
insl
xor
dec
cs
sub
shrl
arpl
xchg
stos
insb
popf
arpl
mov
sti
icebp
dec
ja
test
sbb
inc
and
mov
std
sub
cs
inc
lock
aas
push
adc
test
xor
inc
int
pusha
xchg
push
movsb
pop
pop
ror
sub
lret
dec
cmp
jne
cld
insb
lods
xlat
cmp
repnz
dec
xchg
fucomip
dec
jnp
dec
dec
mov
int
push
stc
outsl
mov
add
mov
fisttpl
imul
cmovnp
dec
test
mov
repz
xchg
aad
into
mov
pop
push
movsb
int3
lds
les
in
xor
mov
xor
loope
push
bts
out
orl
in
add
add
inc
sti
cmpsb
jb
inc
aad
cmp
rorl
iret
push
jno
int3
push
xchg
dec
stos
rcll
adc
cmp
add
xchg
xchg
mov
test
jo
subb
pop
stos
decb
xor
inc
lods
mov
pop
cltd
mov
push
movsl
inc
pop
sbb
arpl
aaa
mov
add
mov
test
shll
mov
xchg
sbb
sub
jnp
fistps
imul
out
mull
mov
jns
ljmp
pop
es
jnp
scas
lret
dec
inc
loopne
mov
mov
aaa
cmc
jmp
sub
push
cmp
leave
int
push
sub
xchg
loope
and
push
mov
push
xchg
push
aaa
pop
mov
ret
or
lods
test
shlb
roll
rcrb
nop
scas
mov
add
lret
fldz
push
aaa
out
test
shr
mul
cmp
push
fabs
or
bound
and
lods
mov
mov
daa
ror
add
and
cmc
xchg
xor
inc
aaa
iret
aam
jne
sbb
pop
xchg
fimuls
and
cmc
fnstcw
ja
dec
je
mov
loopne
bnd
sbbb
loop
jmp
inc
jnp
iretw
xor
divb
cmpsb
add
and
xchg
cmp
fimull
out
xor
les
push
cmp
fcompl
jae
hlt
sub
xor
int3
pop
fldcw
jecxz
in
jp
jae
xor
test
xor
push
and
lods
adc
inc
xor
add
mov
pop
pop
testl
dec
imul
nop
arpl
xchg
pop
mov
ja
push
movsl
jmp
outsb
pop
cmp
xchg
inc
mov
cmpsb
pop
arpl
lds
pop
add
pop
and
xchg
bound
das
jae
dec
lods
sahf
or
repnz
popa
rcr
dec
shrl
popa
inc
daa
int3
and
and
ret
cmpsl
leave
icebp
imul
sbb
outsb
rcrl
fstl
jecxz,pt
ret
mov
mov
xchg
xlat
fidivl
sbb
leave
dec
popa
pop
xchg
rcrl
and
fadd
mov
jecxz
movsb
inc
xchg
call
sbb
mov
jl
xchg
add
mov
fiadds
push
ljmp
pushf
add
push
push
in
ror
jnp
jecxz
notl
fimull
cld
fsubl
inc
cltd
push
xchg
inc
fidivrs
lds
test
xchg
and
out
cltd
adc
pop
fdivrs
cmp
cltd
or
loopne
lret
js
push
mov
dec
and
push
shlb
dec
outsl
mov
stos
outsb
es
loop
fwait
sub
cmp
inc
dec
jne
daa
inc
mull
orl
xor
xor
push
daa
and
cmpsb
mov
int
test
rcrl
in
xchg
jb
cmpsb
jo
inc
jmp
dec
lcall
inc
ja
aad
pop
call
js
mov
cli
inc
cmp
scas
out
jns
stos
jno
dec
subl
xchg
decb
adc
test
jo
inc
insb
xchg
ja
push
popf
push
mov
jp
jp
scas
lea
push
jne
adc
loopne
add
pop
pop
loopne
and
fimull
fwait
pop
pop
sub
adc
cmpsl
adc
cltd
jbe
mov
mov
xchg
mov
pop
or
cs
inc
rclb
imul
arpl
mov
add
mov
xchg
ficomps
rcl
cmc
pusha
mov
pushf
add
inc
adc
or
insb
mov
shll
mov
std
out
adc
push
and
rorb
jp
push
dec
sbb
lret
xor
dec
aas
pop
repz
stos
jne
loop
cltd
aas
fidivrs
xchg
inc
lret
cmp
pop
in
mov
pop
jmp
dec
jmp
sbb
test
xlat
lock
pop
mov
add
mov
inc
ret
jp
dec
inc
xchg
sub
fs
inc
or
in
mov
sub
push
test
das
jno
bound
stc
pop
and
out
call
sub
mov
add
inc
add
adc
mov
xlat
test
movsl
mov
adc
sbb
call
xor
jno
jne
hlt
bndstx
imul
push
inc
mov
cli
cmp
int3
addb
sub
mov
imul
pop
xchg
pop
inc
cmp
xor
dec
movsl
push
popa
inc
ss
fstps
rcrl
cmp
cmp
adc
inc
sbb
pop
and
dec
sbb
push
add
mov
sub
cmc
scas
inc
in
imul
jne
out
shlb
out
xor
pop
add
sbb
mov
and
mov
jmp
mov
aas
jae
mov
inc
movb
in
xor
loopne
fsts
pop
mov
shrb
mov
jecxz
ret
rorb
add
mulb
inc
pop
mov
mov
shlb
sbb
push
push
ja
adc
lret
lret
aaa
xchg
int3
outsb
dec
mov
inc
jecxz
sub
aaa
aas
nop
repz
mov
cmp
in
test
in
mov
sbb
fdivrl
fildll
fildl
dec
pop
jecxz
lock
addr16
ljmp
loop
xor
xchg
and
push
fcmovnbe
mov
aaa
jmp
inc
gs
xlat
negb
mov
gs
repnz
push
cld
repz
roll
fstpl
xchg
add
adc
icebp
inc
pop
pop
pop
xchg
adc
pop
xorl
daa
or
sub
push
movsb
hlt
jno
ficomps
adc
cmc
cmp
dec
and
lahf
pop
insl
push
frndint
hlt
push
dec
xchg
jae
addr16
sub
scas
out
shrb
mov
pop
mov
daa
add
sbb
mov
mov
jmp
cltd
mov
aaa
data16
lods
test
mov
xchg
test
dec
inc
xchg
jle
jmp
orl
lahf
jbe
and
aas
decl
aaa
inc
push
leave
dec
pop
test
das
subb
es
ja
jp
pop
dec
mov
iret
sahf
xchg
mov
sub
dec
aad
and
xchg
es
aas
xlat
insl
fwait
sahf
sahf
mov
and
sub
test
xchg
lcall
jo
inc
cltd
lcall
push
cmpsl
aam
popa
mov
push
sbb
dec
sub
jecxz
addb
or
or
lea
xchg
push
inc
mov
jb
imul
jbe
pop
mov
xchg
jo
jbe
shrb
outsb
cmp
mov
loopne
xor
shl
je
jo
aaa
fisttpll
cmp
cmp
rorl
sbbb
call
inc
fldcw
repz
das
roll
ja
mov
push
imul
mov
cltd
cli
xor
dec
mov
rorl
aad
mov
sub
xchg
mov
push
arpl
sub
clc
mov
mov
xor
cmpsb
popf
jae
addl
inc
int
xor
or
imul
popa
mov
push
xchg
dec
in
push
cs
arpl
pop
mov
cltd
jle
inc
push
xor
jecxz
sbb
mov
js
xor
cmpl
push
push
cld
cmp
cmp
push
lock
jle
nop
add
push
xchg
xor
xchg
rclb
jbe
adc
fistl
jne
lcall
cmpl
pop
pop
mov
add
jb
in
jae
cmpsb
push
inc
and
lea
cmp
pusha
mov
clc
sub
cmpl
daa
out
mov
jbe
in
aam
or
and
mov
pop
loope
daa
sbb
cmp
movsl
insb
scas
int
sti
andl
cli
ror
sbbb
in
es
icebp
dec
cmc
fstps
mov
add
pop
pop
mov
lea
or
inc
and
pop
enter
mov
pusha
mov
mov
and
cmp
lds
ss
sbb
sbb
inc
cmp
mov
push
dec
pusha
scas
popa
push
xchg
cwtl
in
push
cltd
lcall
mov
add
lahf
popf
in
pop
ss
mov
xor
and
andb
repz
jb
sahf
or
sbb
sbb
push
add
xchg
aam
mov
xchg
stc
jae
orl
loope
rclb
jnp
xchg
xorb
mov
ss
sub
xchg
mov
or
jae
ds
lahf
es
sbb
lods
imul
cwtl
dec
scas
adc
pop
sti
les
xor
push
sbb
xchg
outsl
jg
push
int
push
inc
lods
out
push
in
mov
insb
addl
out
dec
xchg
adc
cmpsb
xor
push
ja
out
mov
push
jne
imul
lret
test
enter
les
xor
inc
mov
jl
sti
sti
push
sub
cmp
imul
fildl
push
pop
inc
vmovdqa
jns
stos
dec
sahf
mov
cwtl
adc
aaa
mov
or
in
sbb
or
lahf
fsts
cmp
sbb
scas
loop
and
mov
ds
fstpt
or
out
mov
subl
test
rcrb
test
fstpl
xchg
cmp
sub
cwtl
adc
ficomps
jb
pop
dec
mov
es
and
clc
imul
cmpsb
sbb
sub
adc
popa
cmpsl
lcall
jne
shrb
jo
and
jne
fbstp
inc
das
mov
inc
push
cmp
sub
pop
mov
or
pop
test
push
ds
xor
pop
fidivrl
cltd
inc
pop
rcll
push
cmpsl
hlt
mov
call
shrl
dec
push
out
test
sub
stc
jmp
and
push
jmp
pop
faddl
int
xor
mov
pop
cs
sub
fisttpl
outsl
mov
cli
push
aas
dec
xor
mov
pop
xor
sbb
xor
mov
xor
jno
xor
daa
in
jmp
dec
mov
stc
leave
aas
mov
ss
jle
cmpsl
daa
xlat
mov
add
pop
dec
xchg
sbb
test
push
mov
in
imul
xor
mov
fistl
xchg
ljmp
repnz
lock
insl
xchg
mov
inc
pop
mov
mov
mov
bound
aas
iret
inc
xlat
mov
js
sub
sub
push
add
push
sub
movsb
test
out
mov
mov
popf
loope
inc
add
mov
jp
test
inc
mov
cmpsb
xor
mov
movsl
pop
cmp
test
adc
pop
lea
shrl
fldcw
loope
push
add
adc
push
jmp
sub
iret
cmp
mov
in
mov
pushf
imul
jno
cmp
ret
mov
mov
cmpsl
fsts
mov
sbbb
mov
shrb
jae
cs
pop
out
pop
mov
jbe
cmp
cs
les
mov
ficompl
fcomps
scas
jg
and
sub
pop
sti
int
call
inc
popa
repz
xchg
ja
push
sub
or
lea
lods
adc
mov
jl
mov
frstor
sarl
stos
sahf
jb
sbb
inc
fbld
outsb
mov
xor
and
inc
xchg
mov
ret
jp
mov
cmp
je
clc
adc
sbb
add
arpl
fidivrl
adc
xchg
cmp
mov
push
xor
push
cmp
add
jg
pop
pushf
enter
bound
fwait
inc
iret
adc
sbb
ja
dec
andb
mov
clc
mov
inc
nop
xor
shl
repnz
bound
cmp
into
popa
insb
or
mov
hlt
mov
fistpll
cmp
push
popf
out
out
inc
pop
jle
aas
pop
stc
xor
mov
mov
aaa
das
add
fimuls
mov
sbb
cmp
jg
mov
xlat
xor
dec
adc
dec
sub
andl
hlt
jecxz
pop
inc
sbb
mov
cmpb
xchg
sub
ss
scas
inc
jo
jno
cli
lea
test
mov
daa
and
and
cmp
xchg
aas
repnz
dec
inc
mov
addr16
rorb
sbb
pusha
neg
cmp
scas
push
fnsave
cltd
mov
gs
aas
dec
mov
push
dec
xor
cmp
mov
arpl
adc
cmpsl
xchg
sbb
mov
jnp
insb
dec
jmp
and
test
stos
testl
xor
mov
inc
fimuls
rcrb
stc
push
inc
xor
pop
dec
mov
repz
lret
cmp
negb
stc
sub
inc
cmp
inc
fld1
in
fs
sub
jg
sub
mov
cmpsl
aaa
pop
out
scas
xlat
push
clc
pop
or
pop
lea
fwait
xchg
pop
dec
push
mov
mov
push
pop
rcrb
and
fwait
inc
xlat
xlat
rclb
xor
aaa
mov
pop
lods
cmp
lods
out
mov
mov
adc
gs
out
push
sbb
out
jmp
cwtl
loope
andl
mov
add
or
ja
stc
int
stos
neg
inc
rcll
rcrb
imul
jle
xchg
sbb
shrb
or
fisttpl
fs
add
ret
cld
cwtl
xor
jmp
inc
repz
dec
fsubr
leave
rcr
jge
push
jecxz
xor
pop
jge
loop
das
negb
cwtl
cmp
dec
xor
arpl
mov
push
inc
jo
andl
daa
mov
repnz
imul
mov
ja
aam
and
jge
jecxz
jmp
push
scas
fwait
sub
mov
mov
movsb
push
push
dec
mov
fucomp
stc
sub
sub
test
out
into
mov
bound
dec
mov
mov
sar
cmp
or
pop
push
xor
fstps
cmpsb
mov
sbb
add
or
sti
pop
out
into
mov
xor
dec
cmpsb
sub
xor
lahf
in
xor
ficoml
inc
sub
fstpt
adc
jge
mov
aas
scas
mov
dec
movsb
cltd
pushf
and
arpl
aas
call
stc
mov
adc
inc
out
xchg
and
mov
jno
add
xchg
inc
mov
jne
mov
in
mov
outsl
push
out
aam
cmpsl
xchg
mov
mov
pop
lods
cltd
mov
sub
mov
adc
stc
mov
jne
jge
mov
loopne
sbb
mov
xor
adc
loope
xchg
pop
mov
xchg
je
les
rcr
adc
cmpl
cs
adc
fstpt
iret
call
sub
mov
mov
dec
loopne
jp
test
pop
xchg
imul
jae
cmp
jno
inc
and
frstor
je
daa
cltd
subl
mov
sub
jmp
dec
add
or
outsb
lcall
mov
mov
xor
xchg
push
bound
mov
add
mov
fistps
push
pusha
loop
pop
pop
jne
mov
cwtl
adc
dec
into
sarb
jle
mov
mov
stos
cmpsb
imul
xor
fisubl
cmc
xor
pop
test
add
mov
mov
sub
pop
jb
and
ds
mov
jmp
add
repnz
js
adcl
ret
loope
inc
xor
int3
jle
jne
insb
mov
stc
in
lret
ljmp
rorl
pop
das
jmp
mov
add
call
sti
rcll
bound
dec
xchg
add
xchg
nop
stos
xchg
scas
jbe
fmull
sbb
or
mov
sub
pop
lcall
inc
mov
repnz
mov
xlat
shrb
ss
ret
negb
lahf
push
mov
in
sub
mov
outsl
xchg
mov
and
mov
mov
repz
fsubs
jmp
ss
cmc
addr16
sarb
inc
ja
push
repz
and
adc
in
jns
call
sarl
adc
pop
pop
loop
xchg
fs
sahf
fidivs
mov
xchg
stc
inc
mov
out
mov
les
sbb
gs
xchg
mov
leave
sbb
jb
stos
les
aam
push
mov
or
setle
fs
push
and
in
push
shll
lds
xlat
jb
pop
dec
sbb
imul
loopne
push
pop
mov
or
pop
mov
loope
push
lds
pop
pushf
clc
mov
mov
mov
lahf
adc
or
out
loope
sbb
stos
testb
add
inc
cmp
push
mov
nop
adc
test
fwait
pusha
adc
push
jae
in
push
cmp
jo
cmp
cmp
mov
mov
or
rorb
pop
jle
adc
fs
iretw
inc
les
cmpsb
cltd
and
mov
in
out
and
repnz
pop
js
ret
mov
or
leave
lods
mov
mov
stos
adc
sarb
shld
xor
adcl
cmp
nop
loop
pop
dec
add
cltd
xchg
pop
cmp
sub
out
mov
adc
aad
cltd
out
rcrl
cwtl
sub
in
int3
and
imul
and
sub
cmp
xor
mov
lahf
pop
pop
jno
jle
mov
shl
and
xor
dec
mov
fldenv
pop
sub
mov
pop
nop
sbb
adc
lock
xlat
mov
mov
outsb
fisttpl
adc
jmp
cmp
cmc
or
pop
xchg
lret
dec
push
les
popa
adc
xchg
mov
pop
leave
out
jae
lods
sahf
add
pop
push
mov
dec
adc
fidivs
adc
push
mov
mov
pop
pop
fidivl
xor
daa
cmpsl
pop
out
test
aas
inc
cmpsb
inc
sub
dec
xchg
push
mov
packsswb
mov
cmp
pop
imul
or
mov
out
fidivs
mov
je
sti
pushf
xchg
loopne
adc
out
jmp
pop
in
sub
in
data16
test
push
jb
and
iret
loop
pop
mov
icebp
fcmovu
adc
xchg
test
adc
loop
nop
add
cwtl
test
mulb
pop
jle
pop
dec
dec
sarb
stos
cmp
sub
sbb
outsb
cmp
pop
sub
mov
shlb
and
shl
or
aas
xchg
push
push
push
mov
inc
pop
cmp
and
push
add
mov
mov
stos
pusha
dec
lret
scas
pop
ja
inc
shr
aas
inc
movsl
inc
pop
xchg
aas
dec
dec
sbb
pop
mov
mov
xchg
cmpsb
mov
lods
jmp
arpl
push
and
jp
addl
sarl
pop
cmp
or
inc
inc
clc
add
aam
scas
repz
push
daa
dec
xlat
push
addr16
and
xor
mov
xor
add
rcll
or
add
push
xchg
lods
cmpsb
dec
ja
scas
out
int3
imul
or
bound
lcall
add
jmp
mov
push
adc
aas
jae
add
cmc
xor
jo
inc
shll
movsb
popf
mov
hlt
rcrl
sub
loopne
test
xchg
jns
ffreep
stos
addr16
jns
mov
outsl
adc
mov
dec
in
pop
mov
mov
sbb
loopne
xor
insl
hlt
adc
push
aad
dec
push
mov
inc
xor
xor
sti
cmpsl
stos
sbb
mov
movsb
adc
jecxz
mov
mov
mov
inc
push
mov
sub
xchg
aas
jno
cld
popa
js
std
pop
push
cwtl
cwtl
fldl
adc
sbb
addr16
movsl
xlat
add
inc
push
sub
mov
stos
add
int3
in
mov
pop
fwait
les
pop
xlat
scas
pop
insb
xchg
and
lods
xor
xchg
ret
fdiv
jmp
shl
cli
jns
xor
cmc
push
xor
movsl
mov
dec
or
inc
cmp
stc
pop
fimuls
sbb
mov
adcl
rorb
cmp
in
popf
adc
decb
mov
ss
mov
pop
jecxz
lahf
xchg
pusha
and
aad
push
xchg
pop
ds
jae
dec
mov
mov
and
xor
push
nopl
scas
jns
xchg
jmp
fcoms
jle
cmp
or
sarb
cwtl
cmc
mov
inc
int
test
cmp
pop
or
fnstsw
jge
js
and
cmp
cmc
mov
dec
test
inc
les
ja
mov
filds
movntq
jnp
pop
daa
shll
lret
pop
pop
scas
test
mov
pop
or
sub
pusha
pop
test
test
adc
pop
and
fimull
inc
ljmp
sbb
pop
and
sub
mov
fiaddl
call
pusha
push
sub
mov
mov
mov
mov
out
dec
pop
jl
sbb
mov
add
jg
icebp
push
data16
test
or
call
xchg
pusha
pop
mov
cli
sahf
xor
sbb
popa
mov
pop
fsubl
sub
mov
addr16
mov
in
test
or
out
fucom
ror
decb
bound
mov
cs
repz
pop
lcall
mov
pop
mov
mov
push
jp
jmp
mov
jmp
push
mov
sub
out
faddl
mov
sub
jb
inc
sahf
fidivs
cli
xchg
lea
out
sbb
sbb
nop
mov
mov
cwtl
and
daa
psrld
mov
test
sub
jb
push
repz
jecxz
stos
outsb
jl
jns
test
push
xchg
and
jbe
aaa
lods
pop
arpl
int
dec
lods
mov
sahf
add
pop
inc
filds
enter
test
dec
stos
sbb
outsl
out
fisubl
jo
pop
push
push
and
fcoms
push
push
inc
scas
mov
lahf
jns
lods
and
xchg
sbb
mov
mov
cmp
mov
sbb
imul
adc
leave
sbb
imul
pop
and
pop
imul
dec
mov
mov
mov
loope
aas
jno
loopne
inc
idiv
mov
bound
rcl
inc
push
test
sbb
icebp
sahf
je
jno
adc
scas
xchg
dec
in
jle
xchg
stos
pushf
xchg
jge
dec
mov
and
das
fistps
and
out
and
popa
inc
cli
jne
cmpsb
fisubrs
gs
mov
lret
inc
mov
movsb
mov
mov
xchg
lods
mov
jp
sbb
push
inc
imul
mov
mov
cmpl
pop
xchg
pop
mov
xchg
sti
out
dec
aaa
shll
lahf
mov
cs
fs
outsl
insb
in
jecxz
loop
push
cli
dec
sub
faddl
jecxz
cmpsl
adc
jg
adc
aaa
inc
aam
push
inc
add
aad
or
jl
adc
and
test
mov
cltd
fbld
xchg
and
xchg
push
clc
fcomip
jnp
mov
faddl
pop
mov
jne
jnp
insl
incl
push
and
jae
ljmp
gs
xchg
and
in
adc
xor
jle
hlt
mov
shlb
out
out
test
and
out
sar
sub
adc
adc
sbb
mov
jecxz
push
inc
imul
imul
aas
lods
push
xchg
adc
out
test
fwait
xlat
and
and
xchg
xor
sbbb
inc
adcb
popa
movsl
cmp
and
xorl
cld
push
mov
mov
fs
jg
mov
insb
inc
or
ljmp
xor
jecxz
mov
lret
and
int3
pop
mov
repnz
push
mov
mov
xor
pop
iret
xchg
aaa
adc
stos
pop
dec
aas
scas
sub
pop
icebp
subb
cmp
cmp
sahf
loop
fwait
xchg
orl
jecxz
test
xor
xchg
shlb
shll
cs
fcomip
ja
pop
lcall
pop
pop
les
push
xor
stos
popa
cmp
loope
or
fsts
mov
sbb
sub
iret
inc
xchg
push
test
out
fwait
jb
xchg
addr16
out
wrmsr
jno
mull
dec
mov
adc
outsl
inc
imul
mov
dec
dec
aas
pushf
sub
js
nop
fwait
add
sahf
inc
dec
xchg
leave
adc
adc
adc
test
mov
xor
push
ret
popf
sub
es
cmp
mov
jmp
mov
clc
cld
or
lods
add
add
fs
scas
je
lcall
cmp
mov
std
mov
sub
sbb
sbb
xor
outsb
or
pop
std
push
roll
sbb
call
mov
push
popl
in
jl
dec
divl
iret
mov
mov
mov
insb
sbb
xor
mov
roll
dec
push
loope
push
and
rorb
and
std
pop
mov
cmp
cmp
dec
repz
mov
cmp
sbb
cli
dec
xchg
push
xor
ja
cmpsl
les
popf
cmp
mov
sbb
mov
xor
or
loop
xchg
sahf
clc
aad
pop
jo
mov
imul
cmp
sbb
popf
mov
aas
dec
pop
fsubrl
out
cmp
or
inc
lods
inc
jg
inc
xchg
mov
mov
xor
lds
xor
js
cwtl
and
not
aam
out
je
and
negb
fcomp
and
jge
jo
cmpsb
pop
leave
mov
adc
adc
adc
lret
pop
test
adc
repz
ret
in
pop
add
addr16
pop
jle
aad
mov
pop
hlt
test
fsubrs
push
jae
inc
adc
inc
sbb
mov
inc
sub
xor
ss
cli
repnz
push
test
mov
or
hlt
xor
jg
daa
sbb
fs
mov
les
xor
sub
insb
mov
add
pop
cmp
jb
mov
adc
stos
leave
xchg
xor
jg
jp
loop
inc
pop
push
pop
cmp
rcrb
sahf
shrb
sub
xor
lods
out
sti
xchg
out
aad
xchg
sbb
cltd
xor
jbe
addr16
sub
call
js
lods
inc
mov
jg
filds
push
lret
jle
and
and
cmp
stos
adc
xchg
push
adcl
ja
ret
mov
lret
sbb
and
les
out
jns
dec
sub
and
sbb
mov
in
mov
cwtl
lods
fildl
mov
mov
cmpb
dec
sbb
add
sbb
push
inc
xchg
bound
lds
in
out
cltd
xchg
jp
shlb
rcrl
mov
or
outsl
xchg
sahf
cli
and
xchg
and
bound
mov
push
das
sub
dec
sbb
jae
jl
rol
jae
and
xchg
scas
jp
test
shll
test
lret
pop
push
mov
aas
arpl
dec
in
pop
jmp
ret
push
jne
pop
pop
es
mov
and
or
pusha
xchg
push
mov
repz
push
hlt
mov
push
or
stos
adc
test
push
ret
dec
xor
aaa
xchg
out
mov
pusha
imul
test
mov
pop
pop
pop
imul
jae
push
mov
and
test
xor
mov
dec
xchg
mov
cmp
xor
leave
jno
push
sub
push
nop
mov
sbb
inc
mov
bound
xor
add
out
and
push
and
es
push
daa
dec
xor
push
and
push
ficoms
sub
push
push
mov
sbb
outsb
in
pop
outsb
mov
mov
ret
mov
divb
push
add
mov
xlat
dec
jecxz
out
ja
and
dec
or
int3
mov
inc
movl
adc
stos
andl
nop
ficoms
cld
lds
in
sahf
mov
push
adc
or
pop
test
or
scas
sub
stos
dec
loop
mov
add
mov
lock
push
out
dec
mov
fcmovne
repnz
mov
push
addr16
push
out
cli
popf
jmp
cmp
dec
iret
ss
cmp
sub
mov
or
xor
loope
rclb
dec
out
sarl
lcall
xor
adc
sahf
es
jp
inc
lock
push
addr16
cs
lods
test
pushl
daa
and
sub
cmp
outsb
cltd
push
dec
fisubl
fsubs
xor
inc
or
xor
or
pop
shl
mov
pop
in
xor
or
xchg
inc
sbb
mov
ljmp
and
and
inc
mov
or
icebp
test
sub
mov
jns
xchg
hlt
jne
inc
xor
jp
cmpsb
lret
mov
xor
inc
jp
fildl
dec
mov
cmpsb
or
call
test
addl
outsl
dec
push
imulb
out
mov
pop
push
inc
imul
call
mov
xor
and
add
addr16
xchg
push
les
or
push
jbe
sbb
test
mov
pop
int
pop
mov
mov
pop
in
mov
popa
scas
pop
insl
aas
outsl
pminub
inc
es
inc
jno
and
adc
xor
cmpsb
xlat
lahf
dec
aas
push
lahf
cwtl
mov
cmp
mov
jbe
enter
push
mov
adc
xor
hlt
popa
and
mov
inc
or
les
mov
fdivr
bnd
mov
cltd
xorl
scas
push
rorb
cmp
pop
jge
rclb
push
jnp
orl
adcb
ret
fcmove
xchg
cmpsb
inc
pusha
xchg
fidivrs
push
xchg
movl
mov
clc
scas
add
fstl
push
testl
mov
cmp
sbb
pop
ret
inc
pusha
adc
daa
fdivr
stos
xlat
pusha
out
out
add
xchg
xchg
push
ss
lahf
sahf
adc
jge
stos
push
push
xchg
mov
cmp
pop
and
lret
repnz
xchg
in
add
pop
gs
xchg
jge
add
xchg
dec
xchg
inc
ss
xchg
cmc
add
xchg
fsubrs
aad
cli
sbb
push
jne
std
jle
icebp
pop
cmp
dec
sti
mov
loop
out
xchg
push
shr
xchg
or
or
jo
mov
cmpsb
sub
ljmp
nopl
fnstcw
notl
loope
je
aas
outsb
sub
inc
push
add
mov
fcomi
pop
inc
sarl
mov
jb
push
cmp
push
or
aad
or
inc
add
mov
das
rcrb
fildl
test
lds
imul
push
stc
rcrb
lock
cmpsb
ljmp
dec
loopne
xor
jecxz
aas
xchg
and
test
dec
movsl
aad
cmpsb
aas
stos
mov
xchg
data16
mov
das
cmp
adc
or
xor
sub
imul
and
jg
mov
arpl
test
pop
push
out
stos
iret
scas
dec
jns
mov
cmp
ret
inc
jle
data16
and
test
pop
ja
js
fs
xor
outsl
int
pop
inc
inc
xor
dec
mov
adc
mov
and
out
cs
dec
clc
sbb
inc
xchg
xchg
lods
dec
push
inc
insl
mov
push
stc
add
adc
or
arpl
dec
pushf
hlt
sub
scas
ljmp
mov
inc
aam
repnz
push
gs
or
and
xchg
push
aad
out
sbb
and
lods
jno
subl
sarb
push
insb
sbb
xor
push
or
and
lea
aaa
jg
jg
inc
and
and
sbb
jp
fs
pop
jnp
jmp
aaa
bound
sub
shrl
clc
outsb
mov
mov
iret
popf
aas
adc
push
sarb
jle
jle
jge
cmpsb
mov
or
outsl
jbe
int
or
dec
rol
aad
out
and
pop
ljmp
xchg
mov
add
xchg
push
mov
cmc
lock
lock
outsl
push
bswap
gs
lahf
sub
frstpm(287
sub
cli
and
lods
jne
sub
push
push
inc
jecxz
test
cli
jbe
sbb
dec
mov
dec
daa
xchg
les
addr16
xor
jae
jne
xlat
cmovp
lock
shll
cmp
fs
jp
adc
je
xchg
push
pop
fisttps
out
ficomps
mov
jecxz
das
out
sub
mov
sub
loope
lods
out
xor
mov
mov
divb
push
and
mov
push
mov
sarb
nop
mov
jle
pop
stos
js
sbb
xchg
paddsw
test
pusha
push
mov
xor
insl
push
mov
pop
loop
pop
and
arpl
icebp
jp
imul
jae
in
mov
jns
cmpsb
data16
fdivl
sub
das
js
stos
ret
outsb
jo
js
inc
clc
xchg
inc
shrl
mov
decl
in
aad
orl
test
push
in
scas
call
outsl
jmp
mov
add
sti
add
fwait
mov
lods
es
imul
ss
sti
and
divb
insb
cmpb
adc
mulb
jg
loop
dec
push
xchg
cmp
sbb
lds
in
les
stos
mov
xor
test
pop
out
jle
and
outsl
jge
pop
call
negl
inc
pop
je
ljmp
mov
nop
mov
mov
iret
mov
push
jb
push
loope
lret
fisttps
data16
dec
ficoms
mov
push
xor
sbb
push
dec
dec
push
aaa
dec
std
inc
stos
push
add
fistps
mov
cmc
mov
ss
lds
or
xchg
pop
sbb
pusha
mov
lods
push
ljmp
push
mov
xor
sbb
jno
dec
bound
cwtl
cmp
sub
cmpsl
adc
pop
insb
aad
bound
pop
push
outsl
cmpsb
push
cmp
daa
and
sbb
sbb
inc
jge
test
inc
adc
movsb
mov
shlb
mov
push
repz
mov
xor
lods
cltd
mov
out
lods
sub
mov
push
dec
xor
sbb
adc
inc
mov
shlb
cmp
jle
xchg
rcr
xor
or
jbe
add
mov
scas
inc
inc
mov
mov
ja
fiadds
jb
test
lds
jg
sub
iret
orb
testl
and
dec
xchg
lret
add
push
xchg
lret
push
cmpsb
sub
lcall
sahf
sets
les
jmp
pop
in
and
jbe
out
push
dec
sbb
roll
inc
push
in
sbb
mov
sbb
fucomp
in
iret
mov
shlb
in
pop
sbb
into
aad
mov
jb
imul
int3
xlat
ljmp
push
js
fstpt
dec
xchg
xchg
cmp
cwtl
push
sbb
pusha
mov
adc
pop
add
fldl
cmp
aad
cmp
mov
js
enter
pop
popf
mov
push
bound
xor
subl
mov
enter
sub
add
inc
push
push
push
loopne
outsl
jecxz
loopne
stos
pop
jle
lea
adc
fwait
xchg
jns
pop
je
scas
test
sub
mov
int
std
in
push
mov
bound
mov
divb
xchg
add
sbb
jbe
jl
pop
mov
popa
mov
mov
and
pop
into
lahf
mov
outsb
jae
leave
or
cmp
lcall
test
test
ret
bound
mov
adc
in
sub
fisubs
adc
stc
iret
xor
xor
push
jae
mov
bound
mov
adc
mov
mov
inc
and
add
popa
inc
scas
call
xchg
push
sub
xor
movsl
xchg
xchg
dec
cmpsb
inc
xchg
lcall
mov
inc
add
pusha
xorl
stos
sarb
or
push
ret
push
and
mov
fs
push
mov
cwtl
xchg
jns
sub
fs
mov
cmp
push
sbb
pop
insb
jne
mov
add
adcl
inc
inc
outsl
jmp
xchg
xchg
dec
jecxz
pop
sub
inc
test
and
pop
xor
inc
jbe
sbb
mov
in
dec
outsl
inc
pop
cwtl
cmp
out
dec
gs
cmpsb
sbb
cmp
xorb
jle
ljmp
mov
in
pop
ljmp
mov
fldenv
sub
daa
fisubrl
push
sbb
sbb
sub
stos
lea
scas
push
daa
fcoml
movsl
lods
loope
inc
add
xor
or
ljmp
cmp
or
jnp
aas
jmp
mov
rcr
adc
mov
mulb
std
jb
in
cmp
fs
loop
leave
mov
nop
mov
sbb
inc
jnp
in
xor
inc
jno
es
add
je
sbb
xor
dec
mov
cmp
sbb
cmp
jo
dec
fwait
adc
or
int
pop
cmp
adc
and
lea
push
mov
out
imul
xor
xchg
pop
jge
sbb
int3
andb
push
addr16
jmp
fbstp
test
test
aas
out
ficoms
push
sbb
dec
dec
stos
and
and
or
cwtl
dec
jnp
lods
cmp
fs
pop
in
testl
lock
test
in
inc
inc
call
enter
add
cld
aaa
stos
jl
sbb
mov
stos
daa
dec
jp
rcrb
sub
mov
hlt
jg
cwtl
sub
stos
mov
push
les
jne
fisttpl
or
rol
mov
or
sti
jge
sahf
lods
stos
int3
add
mov
xor
mov
xchg
mov
sub
mov
pop
and
scas
ret
xchg
xchg
pusha
inc
dec
xor
lret
or
bound
mov
in
and
ret
insb
mov
loop
xchg
mov
push
jne
xchg
icebp
das
sub
fisttpll
or
je
cmp
sub
mov
adc
sbb
sahf
sti
stos
stos
mov
nop
notl
pop
arpl
inc
mov
int
out
mov
sbb
cmpsb
adc
ret
out
jmp
mov
cbtw
js
pop
ret
mov
sub
mov
pop
inc
mov
xchg
xchg
cmp
fincstp
fsubp
sbb
mov
pusha
pop
inc
xchg
mov
negl
push
ss
push
xlat
pop
repnz
movsl
adc
cmpsb
fcmovbe
dec
js
jo
dec
les
ss
mov
aam
inc
push
lcall
sti
pop
jmp
jne
jno
mov
xor
cmp
dec
rcll
adc
frstor
stos
fstl
or
jns
push
lret
push
aaa
jnp
add
lret
in
test
mov
add
xlat
xor
xor
xor
into
outsl
subl
ja
adc
fldcw
xchg
dec
clc
les
pusha
pop
data16
dec
push
lret
aam
add
loop
fcomps
loop
push
adc
and
mov
mov
call
or
daa
nop
imul
lcall
mov
clc
scas
push
dec
addr16
adc
movsb
xchg
mov
insb
ja
cltd
movb
mov
push
sbb
outsb
dec
std
out
mov
jmp
jae
push
jae
mov
jbe
je
call
fbld
shll
and
or
lods
addr16
js
push
jge
xchg
lds
sbb
sub
jg
mov
sub
pop
or
and
mov
inc
popa
daa
add
jge
aad
cmpsl
jno
inc
xor
shll
cmp
addr16
pop
xchg
add
inc
cltd
in
cmp
hlt
sbb
lock
movsb
mov
jo
mov
xchg
xlat
pop
int
call
add
cmp
and
popa
jnp
outsb
in
aad
ljmp
dec
sahf
pop
sbb
pop
mov
dec
test
mov
rcl
scas
jne
clc
jge
push
jmp
pop
add
jae
int3
int
mov
mov
lods
popf
xchg
inc
xor
mov
aad
shll
das
dec
sbb
dec
xchg
jmp
inc
mov
adc
xor
add
cli
xchg
xchg
scas
adcl
inc
xorps
push
pop
lcall
stos
and
mov
out
jae
xlat
xchg
jmp
cmpsb
push
mov
and
or
jl
mov
mov
jns
je
mov
cwtl
rorb
push
mov
xorb
sbb
sarl
es
jno
fsubrs
mov
push
nop
shll
cmp
mov
inc
test
jle
xchg
data16
adc
lds
xchg
cmpsb
cmp
daa
lods
add
jmp
les
adc
gs
add
je
scas
lods
cmpsb
shrl
pop
cmp
or
out
cmpsl
arpl
leave
mov
or
inc
mov
inc
push
bound
mov
jns
adc
mov
jmp
add
inc
xchg
mov
out
pushf
mov
mov
inc
jecxz
out
aaa
stc
into
jecxz
dec
jns
or
xor
ffreep
into
dec
in
xor
lahf
out
iret
mov
push
out
push
cmp
scas
xchg
dec
inc
inc
adc
xor
test
xor
enter
jb
leave
adc
dec
dec
dec
xchg
ret
in
inc
add
imul
cmpsl
popa
sarb
sahf
cmp
mov
testb
pop
js
jecxz
sub
mov
xor
xor
push
sub
push
mov
shl
xlat
pop
leave
jp
lcall
cltd
mov
mov
movsl
inc
xor
fists
mov
arpl
inc
addb
jecxz
lods
push
jl
and
pop
mov
std
mov
cmp
push
scas
xlat
mov
scas
fdivrl
stc
out
cmp
or
outsb
xchg
mov
rorb
jecxz
lcall
and
fs
cmp
sub
inc
mov
and
mov
subl
or
aaa
pop
ret
mov
mov
lahf
jns
fldl
mov
lcall
cwtl
and
push
sbb
out
inc
inc
push
addr16
xchg
push
pop
pusha
sub
jg
inc
mov
xor
sti
inc
push
ds
cmpsb
pushf
mov
gs
mov
sub
into
cmpsl
jle
pop
in
jnp
mov
cmp
push
or
jae
mov
xchg
sub
popa
cmpsb
inc
pop
push
icebp
push
mov
fidivrl
dec
rcll
lock
pop
sub
mov
and
dec
loop
or
xor
imul
mov
fcompl
sbb
and
jne
mov
sbbb
test
aam
mov
sbb
movsb
cmp
xchg
imul
in
push
cmp
int
mov
push
jle
out
das
in
cmp
nop
test
aam
lock
fmuls
mov
fwait
or
xorb
pop
daa
divl
xchg
iret
mov
push
ficomps
js
dec
xor
imul
cmp
jp
out
add
ja
inc
jo
xor
jno
jp
cmp
loopne
aad
jbe
jle
aam
or
cmpxchg
sbb
out
or
pop
movswl
pop
fisttpl
mov
popa
mov
mov
mov
iret
js
fstps
pop
adc
or
sbb
mov
stos
xchg
cmp
add
aam
test
addl
sahf
jl
call
cmp
sbb
inc
pop
push
sbb
loopne
ljmp
mov
mov
jnp
push
sarl
lahf
sub
sub
adc
adc
jno
pop
imul
push
sub
mov
lret
sub
cltd
or
or
shrl
les
xchg
cmp
shlb
ss
outsl
daa
push
sub
out
out
add
xorl
std
dec
mov
repz
lods
loopne
mov
or
pop
jge
sbb
jo
inc
pop
fsubrs
mov
dec
sub
loop
pop
dec
jnp
sbb
mov
outsl
sbb
mov
lds
xor
jne
out
stos
sbb
fidivl
mov
inc
or
ljmp
mov
icebp
xor
cmp
jb
push
insl
dec
mov
push
adc
xchg
and
scas
lahf
xchg
lock
xchg
cmp
cmc
lods
sbb
jle
incl
pop
andb
mov
inc
jmp
dec
push
mov
mov
stos
sbb
pop
daa
xchg
xchg
jbe
int
leave
pop
inc
pop
fdivrl
lock
jns
lods
mov
mov
jo
imul
imul
fcmovnu
sbb
add
movsl
jle
fcoml
dec
mov
insb
fistps
icebp
scas
jbe
and
xchg
cmp
adc
stos
xchg
mov
or
cmp
ljmp
loopne
pop
cmp
inc
mov
push
repnz
lock
xor
cmp
and
xchg
int
xchg
subb
mov
push
xchg
jmp
sbb
es
jbe
dec
int
inc
push
ss
lods
add
shll
es
ja
mov
jb
mov
jg
test
mov
cmp
insb
stc
loop
cli
pop
pop
mov
rcrb
scas
xchg
mov
pop
cmp
sbb
out
and
mov
popf
movsb
xchg
ret
dec
popf
lret
in
push
mov
mov
aam
mov
pop
push
icebp
mov
lret
add
xchg
fbstp
daa
adc
mov
js
xchg
add
sub
inc
sub
pop
aad
sub
mov
inc
xchg
pop
hlt
test
lret
aas
pushf
pusha
pop
pusha
cmpsl
xor
dec
adc
movsb
xchg
enter
andb
std
jnp
jge
dec
and
push
push
jle
mov
pop
cmp
jb
mov
or
pop
push
jbe
dec
rorl
js
sbb
mov
pop
push
mov
and
sahf
xchg
mov
enter
and
and
sub
repnz
jnp
mov
mov
mov
adc
and
or
mov
jo
xor
enter
sbb
push
test
xor
xor
test
leave
clc
fs
mov
das
lods
shlb
cmp
daa
ja
mov
pop
or
fstps
call
push
cmc
call
pop
jnp
xor
mov
aas
loop
mov
lahf
sub
or
pusha
and
cmp
jno
addr16
add
cmp
test
add
aaa
sahf
fistpl
jb
daa
ja
or
cmp
sub
jb
mov
lret
pop
mov
jge
shll
aad
sbb
scas
leave
xor
mov
pop
cmp
push
daa
flds
and
in
jae
popl
xchg
inc
ret
icebp
les
inc
mov
das
stos
xchg
jle
leave
test
cmp
lret
mov
loopne
sti
out
movsl
pusha
xor
push
pushf
in
xor
jbe
iret
sub
cmp
dec
dec
push
fs
mov
adc
icebp
aad
out
mov
cmp
ja
mov
jnp
fidivl
loopne
dec
add
fldl
pop
iret
sarl
pop
ror
pusha
das
cltd
pop
mov
notl
inc
sarb
xchg
mov
roll
mov
mov
and
sbb
and
xchg
sub
inc
cmp
mov
inc
addr16
daa
mov
jmp
push
mov
fwait
in
js
pop
sarb
mov
std
xchg
inc
or
inc
or
pop
pop
in
xor
es
sahf
mov
pop
pop
lldt
dec
xchg
dec
les
ja
mov
pop
xor
fucom
sub
push
mov
scas
jge
mov
and
mov
and
inc
test
mov
movsb
dec
arpl
cmp
imul
push
lea
mov
jne
loope
test
dec
push
in
mov
sahf
xchg
cmpb
mov
push
push
pop
cmp
lahf
add
push
outsb
xchg
pusha
jne
into
push
sub
lea
xchg
xorb
lock
mov
push
push
adc
int3
mov
or
adc
jle
xor
outsb
xor
jle
xchg
adc
dec
add
ljmp
enter
jb
test
xor
enter
inc
mov
stos
mov
dec
out
and
jb
mov
js
xchg
arpl
xchg
movsl
cmp
out
std
in
fiaddl
bswap
std
sarb
leave
adc
pushf
lods
test
fwait
pop
lock
sub
mov
jecxz
xchg
mov
cmp
aaa
xlat
mov
jge
or
sbb
sub
jmp
pop
sbb
icebp
jg
sub
adc
in
xchg
test
xchg
mov
inc
call
or
inc
scas
mov
adc
mov
mov
jo
and
inc
inc
sub
jne
pop
mov
xchg
or
into
es
repnz
fisubrs
clc
sbb
mov
fldcw
adc
test
in
push
je
incl
stos
fdivrs
inc
adc
cmp
adc
outsl
jo
in
xchg
pusha
xchg
cmp
jmp
in
ss
adc
insl
mov
cmp
cwtl
lret
roll
cmp
in
mov
jo
dec
mov
jmp
xlat
inc
jge
jb
cmp
mov
xor
in
add
les
jae
xchg
insb
xlat
add
add
add
les
scas
add
cmp
xchg
push
pop
sbb
cmp
mov
scas
mov
ss
arpl
in
aas
add
mov
push
xor
out
xor
test
mov
mov
inc
bound
pop
popa
sbb
xchg
dec
mov
adc
inc
inc
out
sub
or
push
inc
mov
add
cmpsl
dec
add
in
mov
push
ret
jmp
jno
jge
dec
jno
lock
inc
dec
je
mov
outsb
mov
inc
in
dec
push
or
ficoml
data16
pushf
pusha
mov
stos
test
and
loopne
fisubs
mov
cmp
mov
arpl
out
jb
and
push
sbb
out
aam
push
fadd
out
sub
inc
insl
mov
xor
or
dec
and
xor
sarl
pop
mov
aas
in
js
mov
int3
popf
mov
xchg
fidivrl
fdivl
sub
inc
push
push
insl
shlb
cltd
inc
push
mov
fiaddl
inc
outsl
lahf
push
add
pop
add
loope
je
xor
imul
je
ds
aaa
xor
mov
popa
cltd
insb
jo
mov
push
popf
outsl
xchg
lret
mov
jg
sbb
mov
jns
push
inc
xchg
fwait
pop
or
in
mov
xchg
sub
in
pop
rclb
movsb
inc
pop
insb
leave
cmpsl
jg
pop
test
inc
pop
push
insb
les
add
pop
add
lds
sbb
stos
int3
push
and
rol
adc
popa
sbb
push
and
cmp
ret
mov
or
xchg
ds
cmpsb
xchg
scas
cmp
push
mov
mov
in
xor
sbb
cmp
adc
cmp
push
mov
mul
pop
ret
fistpll
inc
fiadds
push
aaa
dec
cltd
pop
out
and
cmpl
jle
xchg
sbb
pop
shll
adc
pop
cmp
in
es
cmp
cmpb
mov
outsb
fldcw
jae
idivb
sub
ret
mov
ds
jl
add
jb
inc
scas
sbb
push
pop
mov
stos
pop
and
lahf
cmc
in
pop
loop
cli
xor
repnz
daa
bnd
mov
iret
movsb
jns
sub
hlt
mov
and
fisubrs
iret
jp
mov
jbe
mov
cli
xchg
hlt
daa
sub
scas
iret
loope
dec
mov
jmp
dec
leave
mov
lods
pop
push
dec
jbe
dec
push
nop
xor
dec
mov
cmp
xor
test
outsl
cmp
enter
sub
mov
push
dec
jno
lds
inc
daa
leave
mov
jnp
mov
xchg
outsb
push
xchg
sbb
add
scas
scas
test
popa
xchg
mov
xchg
push
popf
cltd
cmp
stos
pop
loop
popf
or
stos
lods
push
mov
pop
mov
push
mov
sbb
pop
sub
les
loope
in
orb
ficoml
xor
addr16
mov
push
pusha
adc
outsl
movsl
mov
sub
mov
pop
push
add
push
mov
clc
daa
out
sbb
inc
call
pop
dec
aaa
xchg
or
lret
cmp
int3
fnsave
ffreep
add
cmp
fimuls
xor
cmp
std
stc
xor
pop
sbb
xor
inc
push
cmp
jg
pandn
out
test
fistpll
test
mov
cltd
lcall
pop
and
mov
inc
movsl
pop
inc
lahf
pop
inc
rcrl
sbb
imul
dec
test
in
popa
xchg
mov
jno
dec
push
jmp
loopne
outsl
in
dec
rcrl
or
push
jb
cmp
push
dec
adc
addr16
out
jb
loop
cmp
pusha
les
push
sbbb
dec
jnp
sub
mov
xor
push
or
imul
mov
sahf
mov
popa
xchg
jp
jmp
cmp
xchg
enterw
xor
fadds
inc
mov
push
cmp
pop
lock
mov
mov
cltd
ficompl
cmp
inc
call
les
movsl
mov
orb
cmp
sarb
fldcw
pop
inc
idiv
xchg
enter
mov
je
leave
push
or
add
jae
mov
cmpsl
fidivrl
xor
mov
sbb
ja
sbb
int3
cmp
mov
in
ret
adc
dec
fcoms
in
insl
add
sub
jle
push
scas
movsl
add
sahf
sti
mov
inc
push
jo
xor
sub
adc
jmp
pop
cmpsb
xor
mov
outsb
mov
nop
pushf
loop
xlat
or
push
xlat
shlb
cmc
ja
lods
cmp
push
push
and
or
mov
cmpsb
sbb
mov
pop
pop
fincstp
aaa
lods
dec
loop
dec
or
int3
or
arpl
pop
sbb
xchg
mov
sbb
iret
sbb
inc
movsl
dec
in
addr16
fstpl
dec
adc
push
movl
inc
subb
ret
outsl
into
sub
dec
jge
aam
jbe
lods
push
stos
mov
pusha
adc
fsubl
dec
xchg
xlat
dec
movsl
clc
jecxz
in
or
xor
dec
shlb
fdivrs
es
stc
mov
mov
or
sbb
ret
jns
mov
push
ljmp
mov
xor
jno
cmpsl
inc
repz
adc
inc
fs
jne
xor
add
mov
fwait
xor
inc
xor
test
aaa
popa
sbb
inc
xor
dec
js
int3
cmp
add
flds
movsb
movsl
pop
cwtl
test
insb
pushf
mov
and
push
std
mov
push
repz
ficoms
push
cld
xchg
mov
ret
ret
lcall
sbb
cli
test
push
out
test
and
pushf
dec
sbbb
sbb
dec
pop
arpl
sub
inc
and
incl
cmpsl
out
popa
dec
push
sub
test
sti
adcl
jecxz
sub
out
adc
filds
jo
xor
testl
add
fs
addr16
fldcw
scas
jg
xchg
sbb
mov
rolb
aam
mov
mov
stc
icebp
movsb
cmpsb
lods
loop
sbb
rorl
lock
iret
scas
mov
pop
out
and
fimull
push
mov
or
es
inc
push
mov
rcr
xor
arpl
sbb
mov
cmc
dec
imul
bound
movsb
call
push
dec
jne
xchg
ja
sub
cli
test
jecxz
dec
pop
xor
dec
stc
outsl
adc
gs
repnz
cwtl
lret
scas
out
jge
div
repnz
inc
mov
pop
loopne
fldenv
mov
cld
jl
add
mov
mov
cld
cmpsl
sarb
pop
aas
dec
push
fs
mov
mov
addb
mov
cmp
sti
jmp
mov
xchg
xor
jno
sahf
push
xor
sub
jp
jnp
mov
sbbl
cmp
mov
add
or
lds
fdivs
popf
xorb
nop
in
inc
sub
scas
mov
mov
mov
pop
adc
and
mov
sbb
in
pop
pop
and
into
seta
mov
movsb
cmpsl
loopne
test
sti
fst
imul
mov
jo
lret
inc
sbb
mov
mov
and
stc
fists
jmp
mov
cli
mov
sbb
add
icebp
inc
push
out
gs
push
lcall
dec
or
popa
xchg
lods
fsubrl
mov
or
push
pop
lea
arpl
shl
mov
je
cmpsl
inc
push
push
mov
ret
xchg
sub
sarl
xlat
push
add
push
adc
add
stos
sar
lcall
mov
mov
mov
xor
mov
jo
fdivs
inc
fs
dec
enter
roll
imul
ret
cmp
lea
ret
jp
fcmovu
inc
mul
mov
dec
arpl
js
lea
mov
daa
pop
xchg
xor
xchg
pop
or
cmpsl
repnz
out
push
test
cmpsl
shrb
out
cmpsl
aas
xor
test
push
pop
int
xchg
clc
stos
add
arpl
idiv
dec
dec
sbb
push
cmp
mov
fisubs
js
sub
sbb
push
popa
lahf
push
mov
sbb
sahf
push
les
mov
mov
addl
jg
std
xchg
xchg
ret
lods
fs
jmp
in
loopne
mov
jmp
sub
xlat
cs
push
mov
shr
mov
js
lea
outsb
in
pop
push
push
mov
fldcw
test
push
xor
pusha
or
push
xor
pop
push
mov
push
add
mov
mov
aaa
idivb
insb
xor
add
mov
sub
push
lods
js
pop
jo
in
call
push
mov
clc
xor
int
rorb
fdivl
fld
cmpsl
jecxz
lea
pop
jae
push
xchg
andl
into
jns
dec
and
mov
test
adc
sahf
mov
jp
push
sbb
sub
mov
cmp
sub
call
out
daa
mov
aaa
ret
scas
insb
je
or
rcr
les
psubsw
pop
pushf
aas
out
popf
das
inc
mov
stos
aaa
mov
jb
cmp
cmp
mov
and
int
push
outsl
enter
sub
dec
int
rcrb
repz
lods
or
es
mov
movsb
pop
nop
lahf
inc
scas
outsb
xchg
out
out
cmp
arpl
movsb
and
mov
dec
jae
mov
and
xchg
insb
push
and
stos
xlat
and
fistpl
push
in
enter
xchg
loop
mov
js
lods
jae
dec
ds
adcl
add
pusha
dec
jns
cmp
pusha
add
scas
lock
cli
lds
lcall
mov
mov
setns
cmp
xor
out
jo
or
mov
xchg
outsl
mov
shll
scas
fwait
sbb
outsb
lahf
sbb
adc
jb
pop
test
shl
and
push
cmp
or
stc
test
ret
repz
mov
inc
cli
int3
lahf
pop
add
jle
pop
add
pop
movsb
jl
jl
adcb
mov
push
jo
jl
xchg
cmp
hlt
xor
adc
stos
orl
mov
popf
sbb
sbb
fstpt
lahf
push
cmp
negl
xchg
imul
repz
xor
add
std
xchg
cmp
in
imul
xor
inc
dec
add
pop
lahf
jnp
jmp
stos
xchg
ror
or
jp
inc
xorb
push
sbbb
sub
addr16
rcrb
adc
cmpsb
cmp
inc
sbbb
mov
lock
and
xor
adcb
xor
aas
ds
inc
std
cld
aaa
mov
shrb
and
sahf
cmp
dec
push
fdivs
loopne
and
imul
pop
mov
xor
inc
xor
leave
out
ss
dec
es
and
and
pusha
fsts
and
stc
daa
sarl
dec
pop
and
xchg
and
movsl
push
shll
xchg
inc
xchg
cltd
pop
jns
adc
dec
adc
ret
cbtw
jecxz
mov
mov
xor
pop
sub
push
sbb
fiadds
jns
pop
das
aas
add
xor
cmp
test
pushf
dec
mov
xor
stos
mov
mov
pop
les
lahf
xlat
aad
mov
pop
jge
pop
and
outsb
int3
out
adc
rclb
popf
and
stos
and
icebp
cmp
xchg
push
push
mov
in
mov
lock
mov
cli
fldenv
push
pop
jl
push
xchg
dec
and
xchg
mov
xchg
les
push
dec
sahf
cltd
and
xchg
fwait
and
lss
adc
js
mov
mov
mov
pop
icebp
lock
sbb
sahf
push
push
data16
jle
and
out
negl
mov
push
sub
aas
mov
xor
dec
mov
xchg
ffree
jnp
lret
icebp
adc
or
outsl
pop
lcall
bound
jae
les
xchg
xor
lahf
push
xchg
xor
inc
call
sahf
out
pop
stos
mov
fcmovne
loope
dec
divb
sbb
into
push
add
dec
in
int3
out
pop
add
cmp
dec
sti
inc
push
push
es
fidivs
dec
test
out
dec
mov
mov
pop
out
loopne
push
xchg
sbb
push
scas
andl
movl
and
enter
and
cmp
fcoml
push
aam
aas
mov
sub
inc
inc
les
test
xchg
and
and
out
fisttpl
cmp
xor
mov
ja
and
scas
pop
and
pop
pop
in
pop
pop
in
daa
push
inc
lods
fstl
scas
aaa
push
arpl
sub
sub
inc
das
mov
dec
sahf
xor
inc
inc
cmp
stc
adc
and
fnstcw
call
inc
add
xor
out
xorb
rol
inc
dec
mov
xor
xor
data16
jo
mull
xor
cmp
addr16
and
inc
out
xor
mov
inc
xchg
nop
inc
sbb
inc
jns
aaa
pop
push
xchg
inc
xchg
jle
cmp
cltd
imul
sbb
xor
ss
xor
sahf
pop
arpl
sbb
inc
cmp
and
scas
stos
dec
cmp
xlat
inc
inc
and
repz
rcll
mov
xor
ss
aas
push
popf
inc
jecxz
aaa
stos
xor
aad
sub
dec
aas
bound
lahf
xor
cs
mov
mov
in
gs
mov
push
mov
xor
popa
jp
loop
mov
lea
and
addl
mov
and
inc
mov
inc
andb
std
xor
inc
xchg
inc
xchg
imul
test
in
mov
dec
mov
mov
push
iret
xor
push
sub
aaa
mov
aam
lds
lds
jle
iret
mov
cmp
outsb
lea
cwtl
loop
into
inc
out
sbb
out
subb
pusha
pop
xor
fldt
bound
psubd
adc
push
or
cli
jg
dec
dec
push
jns
bnd
mov
std
push
cltd
lods
and
or
ret
and
add
xorb
mov
imul
lcall
divps
arpl
sub
aaa
idivl
pop
inc
jmp
lea
test
shll
loop
and
nop
pop
fldl
mov
bound
mov
pop
das
or
pusha
xor
test
mov
mov
hlt
jg
mov
lods
inc
inc
mov
adc
xlat
inc
inc
cltd
dec
iret
enter
pop
out
shlb
xchg
push
pusha
and
in
test
out
lcall
add
xchg
xor
xchg
inc
cmpsb
push
mov
daa
pop
jae
fdivr
orb
mov
fadds
andb
int
andb
xor
dec
sbb
adc
sub
dec
pop
lock
xchg
or
push
xchg
outsb
in
in
daa
mov
xchg
inc
or
fidivrs
cmpsb
divl
xchg
xchg
sahf
sbb
jg
jmp
xchg
imul
add
fistps
push
aas
sti
fcompl
insb
out
mov
pop
loope
push
lret
ret
push
inc
cld
mov
xor
mov
inc
xchg
mov
pop
mov
mov
push
dec
pop
int3
pop
xchg
jae
inc
outsb
and
cmpsl
dec
xor
push
or
and
gs
sahf
aam
lods
sub
stc
mov
push
cli
pop
mov
mov
xchg
cmpsb
pushf
fs
sbb
out
mov
insb
loope
mov
outsb
dec
jl
in
pop
sub
in
push
movsb
dec
pushf
and
test
ret
movq
sbb
sub
ret
push
repz
push
lret
lock
cmc
fidivrs
jmp
pop
dec
fs
push
sub
in
leave
fisubrs
imul
hlt
xlat
mov
pusha
pop
ret
scas
in
lcall
lret
add
fcompl
fldcw
mov
mov
insb
rol
push
repz
mov
pop
testl
jns
mov
in
push
into
sbb
sbb
ljmp
repz
movsl
enter
dec
loopne
sbb
xchg
jge
stos
int3
xchg
or
fimuls
push
cli
xor
call
push
mov
cmpsl
pop
pop
dec
push
inc
xor
js
push
test
pop
sub
imulb
mov
inc
outsl
mov
mov
cmp
sub
fmuls
jb
out
fdivp
cs
nop
mov
cmp
jmp
nop
pop
sbb
adc
rcll
and
adc
push
xlat
cmp
xor
mov
repz
push
dec
cmp
int3
sub
decl
rcrl
jns
push
test
daa
pop
test
gs
mov
add
lea
cmpsl
dec
jecxz
mov
test
out
lret
mov
aas
and
add
mov
dec
and
push
nop
mov
inc
gs
cmp
les
jnp
std
mov
sbb
popa
hlt
xchg
fistl
data16
sub
fidivrl
mov
js
test
sub
les
mov
aas
aam
mov
sarl
jecxz
sub
movsl
sbb
push
push
jecxz
pop
adc
scas
mov
inc
lods
or
mov
arpl
fcompl
fimull
mov
fidivrl
lret
lods
inc
inc
jnp
xchg
hlt
scas
dec
lea
and
pop
mov
pop
cmp
rol
sub
insl
cli
ret
jb
sub
fistpl
push
mov
push
fdivs
std
rorl
test
fcoms
iret
ret
faddl
jno
xor
or
loop
mov
xor
imul
outsb
dec
push
out
xor
jbe
dec
or
jnp
fcoms
cs
pop
pop
mov
mov
test
in
adc
dec
mov
mov
std
or
enter
xorb
lods
adc
bound
xchg
arpl
inc
mov
add
cmpsl
lods
xor
sub
sub
xchg
lock
xchg
adc
lods
mov
pop
fwait
adc
arpl
mov
sub
and
bound
pop
and
jle
subl
std
xor
in
scas
add
stos
jb
dec
jnp
rol
rcrl
jp
ljmp
jno
mov
mov
enter
jmp
rcrb
and
or
mov
es
jns
cld
cmp
adc
mov
test
clc
rcrl
daa
and
int
push
dec
imul
roll
ljmp
mov
sub
sub
pop
or
xchg
scas
imul
mov
add
clc
test
dec
or
jecxz
cmpsb
iret
aas
insb
ss
daa
icebp
adcb
pushf
jg
sbb
pushf
icebp
aaa
js
repz
jno
cmpsl
and
and
fsub
scas
cmpsb
imul
outsb
push
adc
and
je
ret
xlat
popf
pop
mov
inc
fimull
or
cs
and
rcll
insl
mov
cltd
dec
jg
adc
icebp
jno
sub
dec
test
jmp
fnsave
cltd
dec
push
outsl
adc
dec
js
inc
filds
push
and
inc
cmpsb
pop
adc
test
mov
mov
cmp
std
jne
pop
mov
lods
mov
int3
orl
cmpsb
cmp
dec
lods
dec
popa
shrd
dec
mov
jmp
add
stc
adc
test
adc
pop
mov
dec
xchg
div
mov
xchg
pusha
and
jbe
leave
mov
daa
cmp
add
dec
mov
sar
loop
aam
adc
xor
cmpsb
int
insb
mov
or
cltd
push
xchg
fcompl
mov
mov
les
cwtl
jge
addr16
clc
adc
push
cmp
cmpsl
xchg
test
inc
sub
data16
arpl
cmpl
jmp
popf
pusha
es
ds
push
je
mov
imul
popa
mov
sbbl
xchg
cli
mul
sub
mov
jmp
sahf
xchg
dec
push
arpl
popf
enter
std
adc
pop
jp
jb
pop
push
push
pop
sbb
cmp
adcl
cmp
dec
mov
xchg
aaa
pop
mov
sub
out
pop
loopne
xchg
loop
jnp
loop
pushf
pusha
or
cltd
clts
aad
cmpsl
call
push
dec
cld
cmp
fdivs
mov
sti
ja
mov
es
mov
mov
push
dec
insl
ljmp
dec
lret
mov
xchg
adc
mov
cld
negl
cmpsb
test
test
adc
maxps
add
repz
cmp
xchg
lea
pop
cmpsl
push
arpl
push
test
dec
insl
add
xchg
fcoml
or
lret
cwtl
popf
jle
jle
insl
idivl
mov
pmulhw
sbb
inc
pop
xor
cmpsl
mov
jns
jns
and
sub
and
add
test
sahf
lods
push
jle
icebp
pop
inc
insb
lahf
and
xchg
jg
ret
aad
mov
sbb
jbe
js
adc
mov
jmp
pop
pop
sbb
in
in
pop
cmp
and
test
popf
cs
rolb
cli
int
push
push
mov
and
lret
sbb
mov
lahf
mov
jns
mov
inc
dec
lock
mov
jnp
or
sub
mov
pop
pop
sti
aaa
dec
or
fiadds
jge
testb
and
inc
jp
xor
dec
lcall
popa
lods
mov
push
inc
mov
in
adc
sbb
out
test
repz
hlt
adc
xor
adc
pop
sub
jb
gs
mov
movsl
xor
adc
mov
push
stos
and
lock
daa
push
repnz
stc
xchg
or
lahf
std
das
pop
out
pop
add
call
int3
aam
bound
mov
xor
ret
mov
adc
imul
leave
jno
cmp
pop
mov
dec
mov
enter
push
fs
mov
aad
stos
and
dec
rolb
and
jp
ret
xchg
rcrl
or
mov
addr16
xchg
gs
lcall
sbb
add
out
inc
push
leave
cmp
hlt
lock
pop
sbbb
jp
mov
aam
mov
roll
sbb
ja
mov
mov
out
sarl
dec
xchg
sub
dec
cmpsb
roll
mov
cmp
cmc
pusha
arpl
xor
rcll
mov
mov
and
sub
jg
lcall
add
test
xchg
cltd
addr16
lcall
mov
fs
aam
add
sub
sbb
jecxz
arpl
ret
add
push
add
or
xor
outsl
and
je
ljmp
hlt
aad
sbb
mov
inc
cmc
mov
sub
out
and
testl
subb
lahf
mov
xchg
test
inc
push
nop
mov
rcl
xlat
outsl
jbe
add
int3
mov
jge
xor
lea
fists
and
push
lcall
adc
fwait
scas
sbb
test
push
mov
cmp
gs
lret
loope
fcomip
push
scas
inc
data16
xchg
cli
cmp
mov
adc
rcr
jge
and
pop
filds
push
xor
loop
jne
lea
test
xor
cmp
xlat
xor
push
push
rcrl
dec
in
jo
dec
jno
pop
mov
mov
sahf
mov
mov
mov
psllq
out
pop
mov
rorl
mov
bound
ficoml
pop
cmpsl
popf
cs
and
jnp
fwait
shrl
enter
xchg
imul
mov
and
lcall
adc
stc
lahf
and
mov
and
iret
bound
dec
in
outsl
addb
dec
inc
out
aaa
sub
push
pop
pop
mov
xlat
jb
jno
sub
sub
adc
inc
mov
mov
shrb
out
inc
jne
xorl
push
jae
mov
mov
mov
inc
insl
test
cmp
cmp
cwtl
mov
push
sar
and
pop
inc
push
dec
loope
cltd
call
fbld
sbb
scas
or
pop
and
scas
push
push
mov
je
test
pop
push
mov
std
cmp
mov
stos
push
aas
nop
xchg
mov
xchg
mov
xchg
fidivrs
outsl
jp
mov
jo
or
pop
mov
cmp
mov
dec
out
mov
pushf
mov
or
ljmp
mov
in
mov
ja
outsb
mov
xor
sub
mov
das
mov
xlat
cmc
xor
mov
pusha
daa
or
out
or
add
pop
nop
and
lods
cs
ss
cmc
dec
cmp
inc
popf
add
leave
pusha
jp
cmpsl
enter
aas
pop
push
xchg
add
dec
mov
mov
and
insb
pop
arpl
jmp
xorb
in
repz
pusha
mov
fsubrs
rcrb
mov
lret
cmpsl
inc
imul
aad
filds
fbstp
ficoms
testb
add
pop
xor
sub
lods
aas
inc
ret
push
push
call
stc
cmpsb
ret
sub
fs
subb
data16
cmovp
push
cmp
scas
les
incb
loop
loopne
push
setae
aaa
pop
lahf
popf
daa
and
data16
mov
xor
pop
insl
sub
cld
jp
mov
cld
push
cmp
jmp
xor
xchg
jle
cmpsl
and
dec
es
fwait
lods
scas
mov
outsl
sbb
subb
in
nop
or
cld
mov
stos
jmp
repnz
scas
iret
jb
repnz
add
roll
pusha
dec
xor
orl
fwait
aas
inc
outsl
mov
push
cmp
movsl
jg
cmpb
das
lea
stos
movb
sbb
xchg
cmp
cmp
outsl
fisubs
out
fistpl
mov
jo
adc
pop
push
cli
jge
dec
out
cmpb
aaa
jp
mov
std
dec
mov
into
loop
mov
mov
push
jecxz
sub
cmpsl
popf
aas
mov
jecxz
and
sub
leave
jp
cmpsl
add
in
or
bound
inc
and
arpl
xchg
or
jge
test
call
mov
test
jbe
xor
adcb
mov
into
pop
mov
push
pusha
cld
xchg
mov
cltd
lret
push
in
xchg
jne
xchg
xor
jg
hlt
adc
lods
add
mov
sbb
daa
jmp
shll
sub
outsl
pop
pusha
cmp
out
push
imul
mov
outsb
adc
fisubl
movsl
mov
mov
mov
mov
add
jns
add
xor
mov
dec
xchg
pop
mov
scas
sbb
xchg
or
xchg
daa
call
xor
ret
push
adc
sub
mov
cwtl
and
shrl
inc
popf
dec
cmpsb
fbld
lds
jge
add
push
outsb
adc
in
jbe
shll
and
jnp
cmpsb
cs
out
les
jg
sbb
push
push
push
pop
jl
loope
pop
mov
adc
push
cltd
pop
push
mov
lret
mov
fistl
sub
add
cld
xchg
jo
jb
push
add
add
mov
mov
cwtl
and
push
push
cmp
inc
mov
movsb
cmpsb
loop
aaa
fcmovb
fwait
xor
adc
xchg
sbb
in
loope
repz
xchg
sahf
xor
add
lds
inc
ret
lcall
jae
into
daa
cld
inc
push
add
sub
xlat
xor
dec
pushf
repnz
and
outsb
loop
mov
sub
cmpb
imul
fistps
lock
out
jns
jb
out
mov
sbb
fnstenv
mov
mov
xor
outsb
fisubrl
icebp
xchg
sbb
daa
data16
add
aad
sbb
prefetch
or
ja
dec
sub
jae
mov
scas
push
mov
jno
dec
mov
xor
push
fs
pop
mov
frstor
mov
push
jno
sbb
fs
adc
in
pop
sbb
push
pop
ret
mov
mov
fistl
subb
out
outsb
mov
inc
jge
dec
cmp
je
cmp
dec
sbb
cld
push
inc
loop
mov
ret
lret
mov
ds
mov
not
int
and
je
addl
xchg
lds
es
xchg
push
movq
daa
adc
std
and
movsl
nop
shll
xchg
push
idivb
dec
pop
roll
inc
sar
inc
jnp
push
xchg
sub
inc
mov
push
imul
push
pop
lahf
add
into
and
cmpsl
clc
cltd
sub
loope
push
popa
fdivp
mov
push
cmp
sbb
sbb
inc
popa
mov
lahf
cltd
inc
popf
filds
hlt
rol
inc
loop
or
add
imul
sar
loopne
push
pop
dec
pop
out
hlt
mov
mov
cs
pop
sub
and
jno
xchg
pop
loope
adc
imul
mov
mov
pop
and
pushf
out
xor
rcr
popa
mov
lods
cmp
lods
lahf
andl
leave
imul
scas
push
int3
pusha
addr16
or
xor
lcall
pop
inc
jb
ja
outsl
imul
icebp
sbb
hlt
push
jnp
mov
adc
add
inc
mov
push
cltd
mov
popa
inc
inc
mov
sbb
or
jecxz
pop
pusha
arpl
xchg
push
push
lahf
orb
and
aad
fwait
push
sub
aad
mov
inc
fwait
int
and
pop
push
mov
and
adc
jns
idiv
int3
outsl
jge,pt
pop
js
jecxz
int3
sub
xchg
cmp
push
pop
mov
pop
push
xchg
or
shll
jge
jne
push
xchg
out
xchg
jb
add
test
jne
daa
push
xor
outsb
mov
ljmp
push
pop
cs
jecxz
sbb
xchg
cmc
lcall
cmp
cmpsl
cld
lods
jns
repnz
icebp
jle
cwtl
repz
inc
jp
testl
pop
bnd
inc
pusha
sarl
and
or
stos
inc
cli
push
mov
xor
outsl
loop
dec
imul
jmp
xchg
push
imul
loop
adc
jge
mov
mov
bound
cmp
xorb
dec
mov
inc
cli
pop
idivl
lods
sbb
fdivl
fnstcw
inc
inc
push
pop
pushf
movsl
repz
cmpsl
jb
or
aas
in
push
lcall
loopne
mov
fcoms
sbb
xchg
pop
xlat
addl
add
inc
dec
cmp
cmc
ret
cltd
jp
cmpsl
xor
jb
js
jnp
sahf
jnp
shll
mov
pushf
mov
daa
sbb
out
jb
cmpsb
outsb
ljmp
xchg
xchg
mov
xlat
dec
cwtl
hlt
popa
adc
and
fwait
xor
mov
jp
cmp
cltd
cltd
fs
push
mov
arpl
sub
push
cmpsb
inc
daa
mov
dec
mov
add
sbb
rolb
ret
mov
fs
inc
xor
iret
dec
mov
xor
js
mov
pop
adc
mov
jg
xchg
mov
mov
dec
xor
es
pop
xlat
sub
mov
cmp
add
shrb
jle
test
in
pusha
jl
stos
mov
popf
inc
pop
sub
xchg
pop
je
add
and
movsb
jb
xchg
jo
or
sbb
sbb
mov
or
stc
xchg
arpl
sbbl
mov
and
shlb
add
scas
aad
jle
mov
pushf
mov
repz
nop
insb
por
mov
arpl
mov
mov
xor
fcmovbe
dec
insb
inc
or
jmp
add
and
repz
jns
inc
pusha
adc
js
popa
int
cmpb
sbb
pop
xor
popw
pop
clc
daa
bound
fcomip
adc
xchg
scas
daa
push
adc
push
jns
test
sti
ret
dec
and
pop
xchg
scas
out
xchg
sti
cli
push
movsb
sub
lods
jbe
cmp
popf
sbbw
adc
jp
mov
daa
lcall
into
adc
fnclex
cmpsb
inc
push
cmpl
or
out
mov
ljmp
mov
stos
pop
sar
scas
sar
aas
sarb
add
popf
xchg
xchg
das
call
jecxz
dec
fs
xchg
push
lret
fwait
cmpsb
cmp
inc
push
mov
and
cmpsb
aad
and
rcrb
cmpsl
mov
cmpsl
ficomps
cmp
sbb
es
stos
fdivrs
outsl
cmpsb
sbb
cmp
in
movsb
mov
inc
fildll
mov
xchg
hlt
ficompl
inc
push
pop
outsb
outsl
dec
and
pop
and
ror
cmpsb
incb
jne
push
movsl
call
mov
aas
ss
repnz
inc
cmp
pop
inc
jl
fisubs
scas
out
lods
pop
arpl
dec
xchg
or
xor
and
stc
push
call
add
ret
sarl
out
pop
es
push
sbb
addr16
add
and
shrl
ret
lods
daa
adc
idiv
cmp
sub
jg
and
mov
vcvtss2si
mov
shlb
in
add
pop
arpl
and
fisubrl
out
lds
dec
test
aas
jno
xor
xchg
xchg
mov
lret
cmp
cmp
test
test
adc
push
push
lds
dec
repnz
push
mov
add
mov
mov
mov
mov
xchg
out
cmpsl
cmp
xor
ja
rorl
inc
jnp
jns
push
and
les
xchg
pop
push
pop
jae
imul
lahf
mov
stos
mov
inc
jmp
push
jne
add
cmpsb
and
adc
and
std
cmpsl
and
add
pop
cmp
test
pop
mov
mov
mov
xchg
pop
cmp
ss
xor
adc
xor
js
push
es
imul
dec
bound
popa
pop
ljmp
pop
test
adc
and
pop
imul
loopne
sbb
call
out
int
loopne
les
pop
jmp
push
jae
add
jne
mov
test
iret
pop
jno
xchg
pop
test
orl
pop
push
and
mov
add
in
test
mov
cwtl
arpl
pop
jg
lds
test
scas
pop
add
cmp
test
clc
mov
xor
xor
jb
mov
dec
or
pop
dec
add
ss
add
pusha
mov
and
in
jg
test
lahf
push
arpl
fidivs
and
pop
lahf
or
sub
shl
push
shr
scas
mov
push
inc
scas
add
lret
loopne
call
mov
fnstsw
ret
inc
mov
movsb
insl
mov
aad
dec
lret
jmp
inc
ret
pop
rcl
and
fwait
mov
xchg
xchg
xchg
ss
push
pop
push
mov
and
mov
aaa
xchg
cmp
gs
les
sub
cmpsb
lret
sub
enter
mov
cld
and
dec
pop
and
pushf
dec
cs
mov
dec
mov
pop
mov
ret
sub
and
cwtl
add
popf
js
pop
ds
cmp
cltd
push
cwtl
or
mov
stc
movsb
negb
xchg
lcall
mov
outsl
mov
xchg
pop
fisubrs
test
hlt
inc
lds
jmp
inc
sbb
mov
pusha
push
push
and
decl
into
imul
mov
cltd
push
or
sbb
addl
jge
mov
rdmsr
lds
jae
inc
mov
ret
cmp
std
cmp
insl
shll
inc
push
bound
cmpsl
pop
orl
das
and
fdivl
mov
and
mov
mov
popf
sahf
sub
mov
mov
pop
jns
aaa
cmc
arpl
repz
mov
bound
xorl
pop
and
cmpsl
mov
jns
jp
push
leave
daa
and
subl
fiaddl
cmp
js
out
sbb
imul
inc
sbb
aad
pop
ljmp
divb
out
arpl
mov
sub
pop
aas
xor
sahf
push
pop
xor
xchg
shll
mov
xor
fiaddl
mov
cmp
and
loope
inc
scas
leave
inc
imul
inc
lahf
fistpll
jae,pn
mov
cmpsb
scas
push
dec
inc
mov
pop
rclb
and
jo
push
aaa
popa
inc
sti
sub
loope
dec
mov
fiadds
rclb
mov
pop
scas
call
stc
in
and
xor
das
adc
in
aaa
adc
in
aas
adc
in
push
adc
in
fiaddl
clc
popf
inc
outsl
mov
test
leave
xchg
cmp
xchg
aas
lods
loopne
iret
pusha
jns
xchg
ret
sub
adc
jmp
pop
test
sbb
pop
daa
add
sbb
in
filds
inc
inc
pop
fnstenv
mov
cmpsb
in
fimuls
sbb
iret
daa
push
fwait
pop
inc
es
sbb
loope
xchg
jno
rorl
pop
pop
aaa
add
sub
sub
mov
mov
mov
scas
inc
inc
fbld
out
and
mov
aaa
or
adc
mov
xor
jne
cs
mov
lret
and
rcrb
fsubrp
inc
andb
xor
std
sbbb
and
ss
mov
movsl
sub
mov
bound
into
inc
cltd
jb
sbb
movsb
fmuls
cmpsl
aaa
cmp
xchg
fsubp
mov
sahf
xor
pop
push
rcr
xchg
cmpsl
insb
pop
cltd
xor
jmp
fnstenv
stos
cmpsb
cmpl
push
call
popf
adc
or
test
repz
mov
cmp
mov
cmp
cmp
cmp
jne
std
outsb
lock
xor
cltd
push
movsl
sub
int3
inc
sbb
cwtl
nop
and
outsl
push
std
andl
loope
mov
mov
dec
inc
shr
adc
and
out
outsb
pop
sbb
pop
andb
sub
pop
addl
jbe
sub
dec
push
aas
gs
mov
mov
jo
stos
cmp
inc
jle
push
push
xchg
push
xchg
fnstenv
xchg
xchg
cmpsl
mov
mov
andl
jns
xor
pop
rcrl
clc
add
xor
jns
inc
in
fstpt
popf
xabort
push
cmp
sub
out
insl
ljmp
xor
jg
xor
imul
lds
test
lahf
inc
jnp
imul
std
inc
or
pop
pop
divb
arpl
dec
xor
mov
in
and
imul
adc
xlat
and
jp
in
mov
dec
jp
sbb
pop
pop
sub
inc
mov
insl
std
push
xchg
in
push
clc
push
xchg
adc
xchg
rcr
xchg
or
push
sub
inc
jne
xor
std
out
mov
xchg
mov
jno
inc
inc
mov
les
dec
mov
and
inc
lret
jno
lcall
fdivrp
or
cltd
sub
mov
std
fwait
pop
leave
cli
xchg
data16
cld
scas
xchg
aas
sahf
inc
inc
repnz
repnz
aam
xchg
fidivrs
stc
add
dec
mov
adc
sbb
jecxz
dec
fs
fldcw
mov
fsubl
repnz
pop
mov
and
repnz
xchg
cmpsl
push
outsl
or
pop
mov
cmp
push
inc
xchg
mov
or
mov
sub
adc
rcll
push
popa
mov
mov
leave
jo
fists
jp
cmp
xor
mov
pop
arpl
xchg
outsb
mov
xchg
dec
push
out
inc
sub
push
lahf
sbb
and
push
aaa
add
ss
sti
dec
arpl
pushf
mov
push
ljmp
icebp
fsubl
push
stos
sbb
sub
int
mov
mov
mov
jo
sahf
cmp
pushf
aam
cltd
mov
mov
mov
leave
ret
orl
addr16
cmp
pop
jl
adc
add
push
adc
jl
cmp
int
xlat
rcll
clc
adc
mov
adc
inc
cld
aas
dec
push
push
fdivp
imul
in
subl
ljmp
insb
cmp
xchg
push
pop
xchg
popa
js
pop
repz
xchg
imul
mov
sahf
sahf
and
add
movl
fstps
mov
inc
sbb
rcl
lea
xor
push
loope
jns
out
pop
xor
frstor
mov
les
add
cmp
mov
mov
dec
mov
aad
jne
pop
add
arpl
int
int
xchg
xor
cltd
or
inc
pop
idiv
pop
test
popf
rolb
mov
aas
jl
into
xor
mov
push
or
jp
pop
jl
popa
sbb
out
sbb
mov
xchg
sbb
mov
test
out
and
mov
pop
jge
jnp
fwait
movsl
loop
addb
das
insl
repnz
stos
pushf
inc
ss
or
fildl
jmp
stos
jle
out
mov
roll
addr16
ljmp
sahf
daa
jbe
and
cmp
mov
push
fiadds
lds
popa
mov
push
int3
inc
pop
cwtl
in
out
das
inc
cmp
jp
sahf
mov
inc
mov
fstpl
test
imull
adc
imul
idivl
int3
push
or
imul
sbb
lahf
pop
mov
daa
lahf
mov
jge
jle
adc
in
loopne
aas
adc
mov
jnp
jne
ret
sbb
fisttpll
jmp
mov
addr16
fcmovne
rcrl
xchg
lret
imul
pop
mov
std
push
psrad
mov
mov
dec
icebp
outsb
or
fsubs
pop
stos
cltd
shll
inc
outsl
add
push
sub
pop
mov
sub
in
aas
jnp
scas
pusha
sub
push
jbe
and
pusha
int
jmp
fadd
sbb
push
es
xchg
lahf
stos
fidivrl
adc
mov
int
cld
stc
sub
mov
mov
movsl
gs
mov
xor
add
inc
dec
sub
sub
mov
add
push
mov
test
in
leave
out
sub
hlt
pop
cmp
cmpsl
xchg
lret
xchg
mov
in
std
pop
nop
lret
mov
inc
jns
sbb
arpl
andb
pop
in
sub
into
or
push
lret
sbb
or
or
sbbb
mov
arpl
or
std
and
fnstcw
pop
adc
push
cmp
jg
dec
nop
adc
jle
lret
mov
nop
std
sarl
sub
ss
jb
pop
mov
push
push
lret
ret
lret
add
xor
mov
ja
mov
mov
dec
inc
mov
and
and
fcmovb
fmul
negb
mov
pop
mov
ja
push
lds
into
mov
dec
push
loopne
or
cwtl
xchg
ficomps
sub
faddl
lods
data16
popa
mov
inc
xor
dec
popa
or
xor
cs
pop
jae
xchg
mov
mov
int3
ja
sub
mov
adcl
rcr
mov
loope
mov
or
mov
xchg
push
xor
push
out
inc
xrelease
inc
push
add
mov
lret
mov
xchg
mov
push
rcll
or
lahf
sbb
add
mov
frstor
int3
es
pushf
es
rcrb
mov
scas
pop
xchg
daa
add
lock
out
cwtl
pop
jae
test
xor
sarb
cmpsb
sub
insl
sub
or
punpckhdq
dec
or
pmullw
ficomps
pop
jae
addl
ja
into
push
and
inc
sahf
sub
aaa
pop
inc
mov
jmp
rclb
mov
pop
std
xor
jle
mov
xor
mov
out
call
inc
sbb
and
sub
inc
add
mov
shlb
mov
test
call
sub
jmp
adc
out
incb
jae
push
daa
loop
jge
mov
add
cmpsl
mov
movsl
xchg
or
cs
movsl
insb
or
enter
test
mov
mov
repz
inc
add
pop
outsb
mov
push
jns
or
push
mov
rclb
xchg
adcl
addr16
inc
pop
sub
xchg
out
mov
insb
arpl
jns
std
cld
mov
dec
or
movsb
flds
mov
lret
test
push
leave
adc
jge
pop
push
mov
stos
or
mov
push
mov
scas
cmpsb
fdivrs
sbb
loopne
mov
sbb
pop
cmp
lahf
jnp
cmp
inc
mov
add
aas
aam
push
inc
das
imul
je
pushf
stc
stos
and
arpl
adc
rorl
fiadds
rolb
in
repnz
xchg
jle
stos
pushf
lds
dec
dec
cmp
mov
sub
js
aas
sub
pop
loop
xchg
mov
test
adc
push
add
popf
push
sbb
add
test
xchg
out
xor
outsb
dec
inc
add
mov
dec
mov
dec
stc
pop
jns
mov
in
push
notl
stc
stos
mov
mov
and
idivl
cs
mov
xchg
out
mov
mov
sub
mov
inc
test
jmp
in
pop
out
cmp
jbe
mov
cmp
jmp
push
push
fcomps
rorb
pop
or
pop
push
cwtl
mov
xchg
inc
jo
mov
aaa
or
or
psraw
inc
cltd
lret
subb
ds
aaa
out
xor
cmpsb
arpl
int
fildll
fwait
je
ja
insl
flds
cmp
fdivrl
mov
shlb
pop
into
lret
mov
and
push
lock
stos
jb
add
cmp
repz
cmpsb
sub
call
pop
out
loop
adc
fcomps
je
in
push
jno
mov
mov
sbb
cmpsb
sbb
inc
pop
in
sub
add
enter
xchg
add
mov
fimuls
dec
jbe
mov
testb
sbb
repnz
dec
lcall
mov
out
xor
add
sbb
cmc
sub
adc
shl
mov
cmp
jecxz
mov
push
jno
or
lds
adc
mov
push
stc
sub
ljmp
dec
idivl
pop
jle
mov
sub
mov
frstor
scas
repnz
ret
in
push
pop
lret
loop
test
xchg
adc
sub
rcrl
ja
sub
push
movsl
inc
mov
out
mov
andl
pop
inc
orb
push
scas
les
bound
mov
pusha
daa
lahf
stc
pop
dec
mov
test
imul
in
cmp
xchg
subb
aad
aas
ffreep
xchg
pop
out
rclb
or
mov
popa
add
adc
ds
pusha
cmp
jp
xor
aam
mov
sub
ljmp
fnstsw
mov
mov
fdivs
mov
imul
add
cmp
mov
movsl
negb
pushf
sub
sub
cmp
mov
push
dec
cmpb
adc
test
xchg
jle
inc
ret
test
aas
ret
cltd
cli
mov
mov
pop
xchg
cmp
stos
gs
call
insl
pop
fisttpl
mov
outsl
adc
xor
in
inc
xor
and
movsl
mov
mov
mov
rorb
mov
stos
pop
mov
popa
mov
jbe
loopne
adc
and
dec
stos
es
mov
cmpsl
mov
mov
fsts
cmp
mov
divb
pop
sti
sub
push
add
and
je
add
xor
mov
pop
js
fs
in
mov
loop
popa
and
cmp
xorb
push
pop
fdivr
imul
out
and
lahf
enter
popa
lcall
inc
outsb
or
loope
xor
mov
jno
mov
movsl
popa
out
out
dec
fsts
fcmove
loopne
call
jae
or
repnz
in
xor
xchg
mov
dec
test
dec
dec
mov
pop
lcall
cmc
cmpsb
loopne
cmp
cmc
fdivs
hlt
mov
jmp
aas
push
xor
ret
dec
insb
adc
mov
dec
add
pop
ret
shrl
mov
dec
test
sbb
lahf
mov
bound
clc
pop
xor
push
pusha
mov
pusha
movsb
mov
ljmp
enter
push
sbb
and
sub
push
scas
scas
fincstp
sti
lahf
shlb
lods
push
jbe
arpl
iret
jb
cmpsb
sub
pop
sub
mov
ret
mov
mov
sub
outsb
je
arpl
outsw
dec
in
jb
mov
jnp
push
pop
in
inc
adc
idivl
ds
je
mov
sahf
inc
mov
pop
xchg
mov
aas
inc
jecxz
push
ret
sub
jae
sub
hlt
mov
fistl
pop
jmp
mov
lahf
repnz
pop
fistpll
sub
fmul
stos
xchg
jl
fcoms
cmp
push
pop
lcall
xor
xchg
js
and
arpl
adc
and
push
in
and
jno
stc
xchg
jl
shrl
ds
adcl
imul
cmp
xor
mov
mov
imul
pop
mov
testb
aas
popl
adc
arpl
xchg
dec
cmp
dec
push
outsl
addr16
mov
stos
add
sub
lods
push
incb
pop
push
popf
scas
jl
mov
mov
rorb
pop
fcoml
lahf
mov
jae
pop
in
into
pop
jecxz
fimuls
and
xchg
mov
ret
pop
add
pop
jae
in
and
ja
push
sub
and
mov
cmp
mov
jnp
dec
int3
or
in
adc
ljmp
xor
mov
xchg
fwait
add
jle
int3
sub
and
ja
xor
fucomip
arpl
mov
fstpl
in
sub
faddl
test
dec
ret
popf
inc
add
jecxz
ret
dec
stos
rcrb
dec
push
pop
shlb
add
sbb
scas
pop
sahf
insb
adc
jmp
mov
jecxz
ret
fsubs
push
and
jg
mov
xchg
out
xor
cld
lods
mov
jle
xor
inc
inc
inc
or
pop
add
and
jno
std
dec
cmp
push
int3
fidivrl
dec
lea
jne
daa
and
outsb
sub
aas
cwtl
mov
stos
sbb
repnz
int
lret
imul
sbb
jbe
mov
dec
or
pop
mov
mov
jae
pop
repnz
stos
outsb
cmp
sbb
daa
insl
and
test
xor
pop
mov
sbb
arpl
idivl
repnz
xchg
js
aad
lods
mov
lcall
pop
sbb
adc
fcoml
movsb
cmp
sub
xchg
aas
or
faddl
fiadds
out
cli
stc
mov
test
push
inc
mov
sub
xor
push
out
loopne
popf
in
loopne
push
roll
pop
inc
mov
repnz
fcompl
fldcw
mov
mov
sahf
or
jecxz
ss
and
in
push
mov
int
andl
fld
test
push
jnp
push
sbb
add
fdivp
pop
or
sbb
sbb
cmp
lcall
lahf
add
pop
test
mov
dec
dec
pop
push
cs
add
cmpsb
cwtl
sbb
jl
and
and
loope
push
inc
lods
sub
inc
sti
mov
mov
jl
stc
sub
mov
lahf
mov
fmuls
push
push
cld
fsubrs
outsl
adc
std
pop
mov
mov
mov
jmp
daa
daa
in
daa
add
ss
mov
fistpll
inc
cwtl
mov
pop
lea
sub
sbb
sub
mov
repnz
adcb
out
mov
out
mov
mov
inc
xchg
pop
imul
popf
or
mov
pop
lock
test
fsubl
xor
mov
xor
mov
adc
sbb
je
pop
mov
mov
in
xchg
mov
add
pop
loope
fisubrs
jb
and
cmp
pop
mov
int
pop
out
or
sub
lds
inc
add
mov
inc
mov
jb
adc
push
xlat
pop
sub
cmc
lret
jecxz
push
sub
test
or
and
shll
mov
ljmp
mov
or
dec
arpl
std
mov
scas
lcall
sti
cmp
leave
cmp
or
sbb
add
pop
adcb
add
mov
add
inc
sub
cwtl
icebp
fs
inc
loopne
jle
inc
mov
sub
jmpw
push
int
cli
and
testb
cwtl
ds
and
push
dec
shl
xor
sti
mov
jmp
dec
xor
jp
adc
scas
gs
mov
adc
movl
scas
adc
aam
push
scas
shlb
mov
lods
std
lods
les
sub
and
or
sub
xchg
scas
mov
sub
outsl
ret
stos
xlat
in
mov
or
cmp
cmp
inc
lret
lret
jb
test
and
fnsave
push
icebp
sbb
and
fs
loopne
pop
xor
clc
lods
jb
push
jne
push
arpl
fsts
inc
adcb
push
pusha
cmpsl
sbb
cld
jge
out
xchg
arpl
ljmp
adc
mov
test
jg
out
popf
stos
add
sar
add
imul
sahf
inc
imul
pushw
and
cs
iret
dec
xchg
inc
flds
push
adc
shr
inc
sub
ret
cmpsb
sub
pop
mov
jo
mov
and
inc
popa
loope
mov
shlb
addr16
mov
popa
jb
cmc
jo
pop
inc
mov
xlat
lahf
rcll
out
mov
mov
mov
rcrl
inc
es
popa
mov
push
std
xchg
xchg
aaa
iret
sub
aas
imul
ret
pop
pop
movsl
push
pushf
daa
popf
add
dec
dec
addps
mov
bound
test
hlt
ljmp
sbb
fistpl
adc
pop
ja
mov
imul
jmp
push
fsubrl
loope
daa
insl
mov
cli
fsubrl
pop
in
mov
cmpsl
dec
cmp
mov
rcrb
cmpsl
pop
mov
out
pop
jns
pop
and
mov
stc
cmc
inc
bound
xchg
push
stos
cmp
xor
pop
jecxz
xlat
xor
repnz
inc
pusha
fiaddl
imul
xchg
sbb
mov
mov
sbb
clc
mov
data16
fisubl
and
je
xor
xchg
xor
jl
popf
in
adc
frstor
cmp
in
loope
jbe
cs
leave
syscall
outsb
mov
jle
pop
dec
inc
ret
movsb
or
gs
cmp
pop
lods
pop
jno
xchg
sub
jle
call
mov
push
in
aad
sub
addr16
push
aam
dec
add
push
sti
xor
sahf
mov
js
cmp
sahf
and
out
rcll
sub
or
lods
movsl
xor
shrl
out
pop
lods
xchg
cs
in
mov
jo
xor
inc
sbb
mul
and
mov
fs
mov
cli
pop
push
mov
cmp
and
aas
push
ret
sub
adc
cmp
jl
mov
aas
pop
push
inc
lods
mov
mov
push
cli
cli
xchg
inc
sbb
outsb
xor
fidivrs
rclb
jae
iret
in
jle
dec
mov
push
and
repnz
mov
enter
jecxz
loop
xchg
icebp
adc
bound
fsubrs
xchg
xchg
fs
out
movsb
popf
push
cmp
jmp
outsl
fucomip
cld
inc
mov
ja
push
mov
mov
int3
out
dec
jl
cltd
cmp
pop
jle
push
jnp
mov
shl
sub
fistl
add
push
mov
jno
or
mov
into
mov
mov
xchg
xlat
bound
cmp
adc
jno
fsubrl
dec
add
shlb
dec
xchg
pop
mov
scas
sub
mov
jae
out
jp
push
jle
enter
mov
mov
paddusw
push
test
aam
xchg
inc
cmpsb
pop
and
int
popf
ds
jmp
imul
scas
repnz
push
shl
dec
stos
jnp
fldenv
mov
inc
icebp
test
jg
and
cmp
dec
scas
xorb
pusha
push
and
popa
xchg
cs
cltd
lods
mov
test
sbb
sbb
push
cmpsl
jge
xor
sbbb
cmc
add
mulb
andb
outsb
ret
push
adc
adc
pop
inc
add
ss
mov
pop
scas
outsb
mov
mov
xchg
rorl
xchg
push
mov
int
rolb
and
mov
jg
daa
cmp
add
sub
fstps
pop
sub
imul
js
rcr
popf
mov
pop
jp
and
and
pop
mov
mov
pop
jecxz
push
ss
sub
push
pop
fwait
adc
and
out
pusha
pop
mov
lahf
add
adcb
xor
dec
mov
jne
xor
sub
int3
sbb
loop
mov
leave
xchg
mov
aam
jae
popa
mov
data16
inc
scas
mov
into
sbb
cmpsl
pop
ret
lods
aaa
push
mov
lods
adc
and
cld
jns
push
jmp
cmp
push
daa
pop
xor
fnstenv
jge
cmp
jecxz
andb
loope
cltd
push
cld
and
lret
or
xlat
xchg
outsb
cmp
mov
mov
leave
cmp
sub
in
xchg
cmp
inc
or
push
adc
andl
mov
adc
pusha
mov
and
push
jno
jle
sbb
push
ljmp
pop
stos
sub
mov
sub
push
sbb
scas
mov
inc
orl
pop
and
mov
aaa
sub
xchg
in
lahf
loopne
mov
imul
pop
inc
sub
push
push
es
push
shll
or
fs
shll
sbbb
cmpsl
in
or
stos
repz
ja
in
movb
adc
mov
push
lret
and
dec
aam
aaa
push
sbb
loop
lds
stc
and
mov
jle
outsb
imul
xchg
xchg
and
js
xor
fdivrs
int
push
add
inc
pusha
cmpsb
xchg
mov
xchg
mov
pop
and
sbb
mov
mov
and
movsb
xchg
sub
fnstcw
sub
adc
cmp
add
push
mov
leave
dec
imul
mov
adc
xor
push
jg
negl
scas
mov
xchg
repnz
and
mov
sbb
bound
sti
in
jb
adc
sub
inc
xchg
dec
mov
jle
dec
in
push
dec
fs
inc
ds
cmp
popf
push
and
arpl
cli
inc
les
mov
cmc
xchg
int3
outsl
scas
inc
xor
mov
pop
popf
cmp
int
cmpsl
scas
daa
dec
lcall
scas
sbb
pop
aas
mov
pop
jo
rcrl
test
xchg
mov
int
cmp
xchg
xchg
add
sub
mov
mov
data16
fbld
pop
inc
rcrb
lea
jg
lret
adc
fisttpll
xchg
mov
aad
in
out
jmp
pop
movsb
inc
cmp
in
push
mov
sub
sahf
aas
xchg
lock
add
subl
iret
mov
rolb
mov
testl
bound
push
dec
and
leave
stos
mov
mov
xchg
fistps
ds
je
ds
pusha
or
es
int3
ljmp
sub
loope
lahf
ficomps
repz
int3
out
jg
and
pop
popf
jl
cs
pop
xor
lds
push
and
mov
add
add
lcall
sbb
lods
iret
shlb
and
xorl
pushf
cwtl
iret
sbb
sub
cmp
sub
or
pop
lds
cmp
xlat
adc
dec
dec
dec
mov
loopne
pop
jns
mov
cmp
ja
xchg
lods
and
and
mov
aas
inc
insl
arpl
mov
lcall
vhsubps
cmp
mov
hlt
jno
mov
mov
dec
inc
fldenv
setne
mov
adc
jg
pop
insl
push
fs
ja
mov
outsb
std
pop
nop
arpl
data16
popa
incb
repz
ret
and
and
jnp
xlat
ds
pop
fs
int
xchg
fidivrl
pop
mov
jnp
outsb
daa
ljmp
inc
out
jle,pn
popa
movsl
pop
and
leave
aam
lret
jecxz
scas
mov
jae
in
inc
xchg
rcrl
popa
mov
dec
into
fimuls
mov
popa
inc
xchg
xor
lret
rol
jbe
es
mov
add
test
fildll
or
dec
sbb
xor
test
aaa
push
int3
jecxz
rcrb
mov
push
ret
test
lods
rol
jbe
push
dec
xor
es
mov
inc
outsl
sti
pusha
xor
fwait
sbb
sbb
subb
jbe
pop
ret
sbb
mov
mov
hlt
mov
inc
subl
mov
sub
push
push
popa
xor
mov
mov
inc
and
cmc
add
inc
mov
push
cmp
push
cmp
cs
addr16
pusha
mov
inc
mov
loopne
clc
xchg
lcall
lret
inc
mov
mov
or
test
push
sbb
xor
push
mov
add
mov
ljmp
out
jmp
jmp
jle
mov
dec
ljmp
xchg
sbbl
sarb
andl
pop
shlb
push
out
inc
cmpl
push
and
std
clc
and
out
pop
ds
sbbl
rol
fistpl
jnp
xor
popa
cmp
out
out
dec
les
cmpsb
dec
int3
dec
cli
jae
push
rclb
xor
sti
inc
in
ja
mov
xor
xor
cwtl
aaa
mov
sub
out
jb
rorl
xorl
sub
inc
aas
lcall
pop
mov
inc
xchg
ficoms
dec
rolb
stos
or
rclb
xlat
popf
cmp
or
mul
ljmp
add
cltd
inc
in
inc
incl
dec
mov
mov
in
or
and
sbb
jno
mov
jae
inc
sbb
stc
or
mov
movsb
jmp
mov
popa
mov
shrl
pop
inc
cmpsb
inc
push
jb
pop
dec
in
aaa
xor
test
jno
inc
or
sbb
repnz
add
ret
fs
lahf
and
and
pop
in
imul
mov
das
cmpsl
jmp
xchg
stos
subb
test
out
shrl
adc
mov
mov
stos
sub
mov
push
loope
int
mov
daa
inc
into
mov
mov
int
repz
mov
cmp
aas
xor
pop
dec
hlt
push
scas
es
sub
es
bnd
jp
popa
jnp
lods
out
push
pop
jge
mov
sahf
sbb
push
pop
mov
mov
mov
mov
daa
cmpsl
mov
xor
xchg
xlat
icebp
xchg
dec
pop
lret
sub
and
adc
xor
dec
inc
push
stc
xor
rcrb
xchg
scas
push
insb
movsl
cmp
call
scas
sub
shrb
cmp
lds
les
lods
in
das
ret
lock
dec
imul
neg
stc
adc
ss
addr16
notl
jae
mov
sbb
rolb
fimull
push
pop
push
cmc
xor
mov
out
adc
sub
mov
jb
push
xchg
stos
imull
and
sbb
popa
xchg
sbb
cwtl
shr
xor
cmp
loop
pop
jge
in
cmp
faddl
jge
mov
js
es
lahf
mov
jp
xchg
lret
xchg
mov
movsl
push
push
adc
sub
sub
sub
sbb
shl
sbbl
adc
fisttps
mov
scas
dec
mov
sbb
mov
dec
xchg
sbb
sbb
mov
mov
pop
pop
lret
and
js
sbb
cmp
mov
jg
lahf
jecxz
mov
test
mov
jmp
pop
inc
mov
dec
xor
and
add
mov
shl
mov
shlb
nop
jno
fisubl
mov
cmpsl
int
arpl
fdivrl
push
daa
out
cmp
jmp
pop
dec
mov
jns
adc
push
jecxz
push
call
cmp
sub
cmpsb
xchg
pop
stos
inc
fcmovnu
mov
lds
scas
sar
cmp
push
push
mov
mov
sbb
aam
mov
mov
or
sti
pop
movsl
int3
inc
pop
inc
xchg
mov
push
test
std
inc
in
sbb
loope
or
outsl
lret
cmc
pop
xchg
lods
jns
sub
fiadds
aaa
shll
xchg
out
jl
jecxz
std
pop
mov
ljmp
test
dec
adc
shlb
lea
into
imul
loope
jle
mov
stos
pusha
jnp
call
cmpsb
fnstsw
xlat
inc
out
out
cmpsb
flds
cmp
add
outsb
push
cwtl
sbb
push
and
xor
aad
pop
in
out
xor
inc
test
dec
adc
aaa
mov
dec
push
pusha
jo
xor
mov
dec
inc
push
mov
jle
stos
stos
addr16
sbb
mov
mov
fwait
lea
cmpsb
das
sarl
sbb
ficoms
mov
lock
pop
mov
jge
sub
test
jb
jmp
dec
push
in
loopne
or
aam
push
cs
orl
fcoms
xor
fisttpll
out
jle
mov
and
push
adc
minps
adc
jae
clc
ds
jne
pop
xlat
dec
addr16
shrl
cmp
fdivrs
shlb
mov
xchg
mov
and
cmpsl
xor
test
mov
pop
or
inc
adc
mov
bound
mov
fisubl
and
stos
das
pop
jecxz
out
or
outsb
xchg
mov
lds
imul
sub
sub
and
or
inc
lret
dec
mov
subl
xor
shrl
cli
mov
xchg
add
dec
inc
dec
idivb
xchg
enter
adc
lods
add
pop
mov
add
insb
sub
inc
test
sarl
test
inc
es
pop
push
sub
fldl
sbb
shll
jmp
jge
inc
cltd
aad
pusha
out
mov
inc
movsb
lods
pop
sub
mov
mov
mov
cmp
sbb
test
cli
ficompl
dec
dec
push
repnz
pop
pop
mov
lret
dec
xor
cmpsl
fidivl
add
sarb
fneni(8087
and
popf
push
xchg
cmc
dec
and
cmpsl
mov
xchg
pushf
xorl
lea
inc
jge
sbb
xchg
insl
mov
sbb
scas
mov
and
scas
inc
or
inc
lea
filds
popa
inc
fildll
std
sbb
ret
in
in
pop
dec
daa
bound
inc
jae,pt
sbb
test
mov
jg
call
repz
push
loopne
mov
xor
xor
shlb
cmp
mov
ljmp
inc
ret
lcall
rcr
xor
pop
xchg
push
xchg
outsl
in
mov
xchg
mov
or
loop
add
push
mov
adc
add
call
cwtl
push
cli
push
into
sub
or
lea
in
dec
mov
inc
dec
inc
cmp
push
sarl
sbb
and
xchg
xor
ret
out
xor
jo
popa
leave
pop
mov
enter
push
dec
xorl
or
cmp
xchg
cmp
sub
nop
add
sub
jnp
cltd
xchg
mov
inc
pop
cmp
push
mov
pop
push
mov
sub
pop
push
adc
les
lods
xor
lcall
div
imul
adc
lea
sub
jne
cmc
jns
xor
mov
dec
in
loope
xor
jle
sti
ret
xor
sub
cmpsb
push
dec
sbb
mov
pop
dec
je
push
mov
push
mov
cmpl
adc
jge
test
das
jnp
test
jne
ret
out
sahf
fs
stos
and
lcall
scas
inc
mov
add
jns
and
cmp
xchg
dec
lods
daa
pusha
and
fidivs
xchg
out
push
daa
xchg
ljmp
outsl
mov
mov
push
jb
add
add
addl
and
xchg
and
data16
push
call
dec
sbb
out
pop
sbb
pop
pop
aam
inc
push
cmp
sahf
push
lahf
jecxz
dec
pop
mov
mov
mov
bound
xlat
pop
add
cmp
xor
lock
sub
jp
pop
adc
into
and
and
test
dec
and
sbb
xchg
sub
sub
sub
inc
cmp
pop
sti
addb
faddl
inc
mov
xchg
dec
clc
sub
jb
stos
loop
aaa
jne
cmp
xchg
ds
mov
stos
test
mov
sarl
pop
es
pusha
daa
push
sub
outsl
loop
ret
cmpsb
mov
add
cmp
fildll
daa
jecxz
inc
cwtl
mov
or
or
xchg
xor
out
push
orb
mov
mov
xchg
jns
and
sarb
in
pop
arpl
mov
mulb
push
mov
adc
jae
and
filds
outsb
mov
int
aad
jne
mov
cmpsl
fiadds
jo
pop
cmc
xchg
int3
push
and
sub
mov
mov
mov
out
pushl
daa
loop
std
scas
fwait
test
xor
xlat
jns
les
in
ss
sub
repnz
test
fcoml
cmp
mov
push
sbb
mov
push
cmp
loopne
adc
inc
mov
scas
sbb
testb
arpl
push
pop
outsl
imul
and
out
jbe
add
cltd
in
leave
data16
sbb
in
lea
lea
add
lret
dec
xor
inc
data16
push
imul
cmp
imul
dec
push
push
ficoms
test
dec
or
push
pop
jnp
inc
pop
and
sbb
add
push
xor
ljmp
loop
fstps
and
clc
pop
daa
push
sub
xor
lods
sbb
repnz
shlb
sub
ja
pop
mov
cmp
dec
jg
fdivrp
mov
sub
fstps
lods
jns
pop
out
loope
inc
stc
mov
pop
inc
es
or
sarb
jb
add
lret
xor
sbb
sub
out
jl
mov
dec
aaa
lcall
xchg
cmp
fidivrl
insb
fs
push
insb
push
inc
push
repnz
inc
xor
xchg
into
les
mov
mov
movsl
test
cltd
out
dec
shr
lds
movsl
add
lret
push
jnp
mov
das
or
push
ds
mov
out
dec
and
dec
jecxz
or
mov
int3
or
adc
addb
into
xor
stos
or
hlt
pop
push
in
dec
setp
pop
mov
push
adc
jecxz
and
pop
aas
ror
cmc
out
pop
les
fimull
sahf
fiadds
sub
and
imull
add
inc
test
adc
jge
es
push
sti
and
loopne
scas
ror
rcll
sahf
lahf
fists
loope
mov
lods
sbb
in
fstpl
sahf
jnp
xchg
push
push
or
pop
fldcw
rcr
and
inc
cmp
add
push
xchg
or
cmp
pop
pusha
add
xchg
mov
mov
push
xchg
push
jp
std
cmp
pop
imul
lahf
jb
mov
sbb
push
stos
xor
adc
xchg
or
adc
shrb
jg
pop
add
xor
pushl
ret
fimull
pop
ss
mov
lret
out
cltd
sbb
inc
mov
inc
and
popa
lea
adc
shr
push
inc
les
inc
inc
dec
lock
mov
inc
and
daa
movsb
or
aaa
adc
aas
lahf
notl
jecxz
mov
inc
lahf
mov
mov
add
aas
lcall
xchg
pop
test
inc
dec
dec
cmpsb
mov
add
push
push
push
or
jecxz
imul
xor
movsl
dec
jmp
repnz
mov
xor
mov
sahf
cmp
jns
mov
pop
jne
std
mov
mov
cmpl
xor
ds
outsl
jg
fs
jnp
pop
and
out
shr
inc
cwtl
and
mov
fs
push
jmp
aas
push
imulb
int3
fucom
add
push
push
and
fbstp
sbb
stos
inc
negb
into
mov
stos
fists
sub
popa
testb
pop
dec
add
xor
call
aaa
insb
xchg
addr16
mov
adc
fcomps
popa
out
xrelease
dec
inc
into
and
mov
aam
fstpl
jmp
dec
in
pop
push
mov
mov
cmp
add
pop
mov
dec
mov
xchg
mov
ficomps
dec
mov
pop
cs
inc
sbb
mov
dec
shl
push
push
push
loop
mov
rcll
fwait
sub
xor
adc
mov
pop
cmp
popf
out
lret
mov
inc
pop
ret
ds
xchg
in
cld
outsb
nop
mov
leave
sub
or
popf
xor
mov
test
add
lahf
lods
inc
and
mov
in
aaa
push
lods
inc
sub
jno
lds
push
mov
add
das
ja
sbb
xchg
dec
addr16
jge
out
jno
cmp
sub
movsb
ret
xchg
stos
scas
inc
shlb
in
sbb
pop
nop
mov
pop
bound
jne
jo
or
cld
and
fcmovu
add
call
aas
daa
sub
sub
cmpsb
imul
inc
jge
aaa
loope
mov
icebp
rcr
fldenv
lods
mov
dec
insl
mov
cld
xor
and
arpl
fldcw
pop
xor
fcmovnb
stos
scas
mov
rorb
test
sub
adc
sub
push
mov
js
stc
and
movsb
bound
jnp
fadd
shlb
or
sub
push
fneni(8087
inc
rcll
add
inc
sbb
adc
xchg
xorb
out
and
imul
mov
and
lret
out
adc
test
dec
inc
inc
adc
std
cltd
sbb
clc
addr16
inc
adc
nop
idivb
mov
push
inc
leave
je
sub
mov
push
jae
inc
push
cltd
xor
test
xchg
jae
mov
fidivrs
pop
sbb
rol
xchg
or
push
xor
dec
rcll
stos
std
aaa
mov
inc
cmpsb
cmpsl
jecxz
mov
lret
shll
adc
inc
add
mov
mov
pusha
and
mov
dec
ficoml
dec
shll
pop
loope
cmpsl
adc
push
mov
shrl
adc
cmp
lods
mov
mov
outsl
jbe
mov
cmp
xchg
push
cmp
adc
in
sub
lcall
testl
lods
lcall
leave
aam
adc
sbbb
std
outsl
cmpsb
adc
and
cmpsb
fs
into
frstor
sbb
test
test
lcall
lcall
pusha
lods
inc
jne
rcrb
shr
dec
pop
sbb
xor
add
mov
fdivr
test
lods
adc
jno
hlt
jns
rcrl
popf
mov
mov
lcall
pushl
lods
gs
ss
ror
scas
jl
cltd
jp
icebp
lret
mov
cmpsl
scas
les
rorl
out
mov
pop
mov
mov
gs
into
dec
repz
sti
addr16
mov
test
xchg
faddl
and
mov
pop
pusha
fs
and
push
inc
push
movsb
adc
xlat
mov
sub
and
jnp
cmpsb
mov
out
inc
ret
mov
pop
jno
xchg
lea
mov
lods
cmpsb
or
test
cwtl
xchg
lcall
fistl
jb
push
xor
xor
or
fs
jnp
mov
xchg
mov
cmp
fildll
cltd
pop
pop
sbb
inc
in
mov
fdivl
ficomps
popa
lahf
xchg
in
ja
cltd
xor
lahf
sub
movsl
dec
xorb
jp
fisubs
out
pop
inc
enter
mov
ljmp
add
mov
sbb
and
push
push
mov
out
jge
lret
aaa
dec
aad
jne
lds
cmp
leave
fstpl
je
outsl
fsts
lock
xchg
mov
andl
out
jle
mov
pop
sub
dec
dec
mov
scas
xchg
adc
or
pop
or
ret
test
fldenv
sarb
sbb
xchg
mov
or
out
dec
xor
jmp
fwait
mov
ja
and
pop
call
xor
rorb
pop
or
hlt
sub
cs
jno
mov
xchg
adc
jg
inc
pop
je
push
in
pop
mov
pop
and
xor
gs
dec
outsb
sub
jne
push
jns
mov
cld
mov
inc
and
jmp
shrl
and
inc
xchg
sbb
jnp
push
fwait
mov
or
mov
loopne
pop
push
repnz
test
or
xchg
outsl
jbe
fdivrs
sub
loop
ja
push
loop
cmp
mov
es
xchg
cmp
fldenv
adc
push
aaa
cmpsl
ret
outsb
push
adc
add
push
mov
sub
ret
push
loop
dec
adc
adc
inc
dec
jecxz
mov
sub
pop
out
mov
dec
inc
and
cltd
pop
shr
mov
jno
xchg
enter
and
jb
std
mov
loopne
lods
inc
pop
xor
imul
adc
imul
adc
pop
es
les
jnp
pop
cld
repz
std
cmp
push
pop
mov
in
fistl
lahf
sub
sub
cmp
push
ss
aas
mov
fdivrs
in
sbb
pop
clc
repnz
jns
mov
pushl
push
test
add
mov
test
adcb
sbb
jae
loope
sbb
ja
fildll
out
inc
pop
push
pushf
push
shll
cmp
bound
and
jae
inc
mov
and
pop
movsl
or
xor
mov
cmpsb
dec
lret
pop
jle
outsl
cmpsb
dec
inc
xchg
addr16
pop
inc
js
fldenv
cltd
adc
push
xlat
std
sbb
test
lea
hlt
push
xchg
and
subb
adc
rol
addb
pop
sahf
test
test
fwait
mov
xor
sbb
cld
cmp
pushf
popf
jge
ss
push
shlb
loop
cmp
fwait
sbb
pop
push
int
push
xor
outsl
imul
arpl
fsub
in
mov
jne
outsl
push
lcall
jmp
push
leave
js
jo
push
cmpsb
mov
sbbl
das
movsl
pop
cmp
call
jle
insl
mov
fisubrs
stc
sti
mov
sbb
jmp
mov
mov
xchg
jb
xchg
hlt
rolb
inc
xchg
xlat
imul
xchg
mov
bound
js
lods
xorl
cld
gs
andl
adc
loopne
jecxz
leave
push
arpl
pop
xorb
inc
int
cltd
lcall
clc
call
lret
dec
movsl
jns
pop
dec
inc
or
lret
push
popf
jge
mov
insl
cs
push
and
sahf
pop
nop
sahf
popf
test
jecxz
mov
mov
sub
push
pop
xchg
repz
in
inc
sub
iret
adc
inc
mov
jmp
adc
into
aad
push
fisubs
pusha
cmp
cmp
jp
popa
stos
movsl
pop
pop
mov
xchg
jbe
mov
jae
mov
lret
push
in
xchg
arpl
cli
push
add
sahf
shll
xchg
cld
es
dec
and
gs
pop
mov
pusha
push
fwait
stos
shlb
sub
push
mov
aaa
dec
add
hlt
sbb
cmpsl
les
sbb
js
repnz
aam
fs
mov
fwait
add
adc
jae
jp
xchg
cs
sub
cmp
ficomps
stc
push
flds
inc
push
adc
out
mov
and
aam
rol
push
sti
das
aas
aaa
push
jle
adc
and
aaa
ds
imul
gs
jo
push
push
push
xor
mov
lahf
imull
cmp
cmp
shrl
mov
jg
xlat
adc
out
or
xchg
movsl
call
cltd
cltd
sub
es
and
mov
jae
test
and
inc
enter
and
fistpl
sarl
pop
push
movsw
movsb
and
xor
or
dec
add
xor
mov
pop
jb
and
dec
xor
test
mov
push
sti
pushf
add
out
and
fimull
aad
insl
inc
adc
inc
fldenv
pop
sub
push
fidivl
mov
in
mov
scas
xchg
int3
sti
cwtl
cmc
jae
es
push
sub
pop
ss
out
shrb
or
adc
mov
testl
mov
push
out
mov
xchg
sahf
call
jne
das
fbstp
orl
gs
sahf
fbld
incb
pop
test
xor
out
inc
cltd
sarl
and
adcb
cmp
push
jns
pop
mov
jne
cmp
pop
xchg
or
or
pop
mov
sbb
clc
inc
cwtl
jle
popf
mov
pop
sbb
pop
push
xorl
xchg
push
icebp
xlat
stc
aas
sbb
int3
push
xchg
lods
fs
mov
fldpi
jmp
sub
into
push
adc
in
fdivrs
test
jmp
lret
lret
and
pop
in
add
bound
es
xchg
fsub
aam
push
lods
pop
jno
lcall
jbe
in
or
pop
mul
loope
add
popa
filds
mov
enter
pop
xlat
aad
push
push
sub
lods
mov
jl
cmpsl
stc
xlat
outsb
shll
fidivrl
push
iret
es
pop
popa
orl
cmp
or
imul
jge
xchg
pusha
and
lds
loopne
sub
pop
fldenv
sub
add
add
and
lds
mov
mov
das
fiaddl
and
xchg
adc
jae
xchg
cmp
ds
inc
imul
scas
clc
inc
lods
mov
sti
test
sub
loop
les
loopne
stc
adc
xor
fwait
jecxz
enter
pop
sub
cmc
mov
filds
aaa
in
aas
xor
mov
inc
jg
imul
in
roll
andb
cmp
lahf
xchg
jge
rclb
inc
divb
jb
in
mov
imul
mov
push
mov
movsl
inc
cltd
jecxz
repnz
insb
adc
mov
xlat
mov
push
mov
xchg
out
sub
int3
jnp
sbb
pushf
mov
push
pusha
and
outsb
inc
rcrb
inc
lods
mov
cli
fadd
sahf
sbb
imul
dec
cmp
fwait
lea
mov
mov
mov
mov
xor
int
dec
lea
xlat
and
adc
mov
add
dec
push
ss
in
mov
xchg
mov
cmpsb
xchg
inc
mov
push
adc
xor
fdivrl
sti
xchg
cltd
arpl
dec
jbe
das
push
jp
mov
int
daa
mov
xchg
adc
mov
push
mov
and
sahf
pop
cmp
mov
cmc
es
add
lds
imul
mov
or
mov
sub
cmc
fwait
pop
loope
lods
js
jae
cs
push
push
xchg
sbb
add
in
roll
cltd
fcmovne
ret
movsb
ljmp
mov
shl
lods
xor
mov
loopne
into
js
and
imul
dec
xor
xchg
pop
out
pop
lahf
sbb
ficomps
add
aaa
pop
cmpb
pop
sbb
lahf
mov
in
out
inc
xchg
sti
adc
mov
add
push
fdivs
js
dec
cmpsb
push
mul
push
ss
test
out
sbb
test
push
pop
adc
xchg
xchg
push
mov
test
nop
inc
lcall
aas
mov
pop
in
pop
daa
xchg
jmp
cmpsb
sub
xchg
pop
and
pop
inc
sub
xor
dec
cmp
and
inc
dec
add
xchg
cmp
popf
leave
hlt
cmp
pop
js
jp
sbb
or
aaa
stc
and
jge
fs
mov
or
add
scas
sbb
push
jmp
push
push
stos
xor
xchg
xor
inc
out
cmp
aam
iret
pop
mov
out
xchg
mov
mov
rolb
xor
xchg
xchg
adc
dec
int
mov
pop
inc
add
cmp
sub
and
jns
xor
cwtl
cmp
scas
gs
inc
popf
inc
test
fistpll
jnp
out
sub
jl
xchg
sub
mov
or
arpl
or
fisubs
adc
mov
pop
pop
cmpsl
mov
int
and
fcomi
jle
fstpl
ret
or
mov
jp
in
popa
or
lods
inc
scas
sub
dec
xchg
rcl
addl
adc
lahf
pop
lar
leave
sarb
mov
lods
int
loope
push
and
sahf
or
test
mov
inc
sbb
cmp
shlb
nop
mov
cmp
lahf
pop
imul
mov
incl
xlat
dec
mov
ja
push
cmc
jmp
cmp
imul
sbb
push
insl
jmp
inc
mov
ds
in
pop
push
fucomp
or
cltd
adc
cltd
mov
fimuls
dec
inc
push
jb
jle
ret
test
jne
push
mov
xchg
and
iret
jmp
sarb
clc
imul
test
sbb
and
cli
pop
push
xchg
cmp
add
outsb
add
mov
adc
jp
into
mov
scas
mov
xchg
mov
mov
insb
scas
push
cmp
ljmp
xor
lods
dec
pop
mov
jp
es
xor
push
jecxz
pop
adc
sahf
xchg
and
sub
outsl
imul
dec
shlb
pop
inc
pushf
sarl
and
mov
jb
xchg
add
xchg
stos
jmp
push
inc
mov
daa
jg
fmuls
pop
jns
test
popa
jo
pushf
bound
sahf
das
jne
pop
sbb
leave
repz
ja
push
sbb
popa
and
das
sti
shlb
mov
in
and
movsb
inc
aas
or
inc
sysret
js
ret
repz
movsl
ljmpw
pop
cmc
mov
pop
and
jg
mov
rol
aas
sub
push
imul
mov
popa
frstor
jmp
mov
lods
stos
dec
push
jbe
pop
cmpsb
out
mov
sarb
cmp
adc
repnz
add
inc
push
jne
in
mov
addb
push
rcl
movsb
rcrb
in
jp
push
movsb
cmpsb
test
inc
out
inc
pop
aad
push
cmpsb
sbbl
popa
dec
lahf
mov
and
sub
mov
mov
icebp
cmpsb
ds
loope
or
jbe
dec
daa
adc
inc
inc
pop
xor
cwtl
test
aas
mov
sahf
das
test
rorl
dec
popa
jno
sbb
cmp
xchg
cmc
xchg
insb
jl
iret
aas
pcmpgtb
pop
lahf
fldenv
inc
call
fs
loopne
in
mov
popa
jae
mov
stc
inc
adc
popf
cmc
pop
fnstsw
sub
jae
orb
ret
sub
mov
push
mov
les
pop
push
or
sbb
xor
jp
add
and
add
addr16
sub
xchg
push
or
push
pop
mov
adc
lods
out
push
dec
and
mov
jmp
push
mov
mov
popf
mov
popa
jmp
or
and
mov
daa
cmp
mov
sbb
mov
in
jle
push
adc
mov
xchg
and
push
sti
addl
dec
cmp
push
clc
xchg
lret
mov
sub
rcrl
adc
sub
push
sti
and
shrl
aaa
xor
mov
pop
lods
mov
cmpsl
xor
nop
jl
push
xchg
movsl
mull
std
pop
xchg
push
decb
jl
push
mov
imul
or
daa
sub
xor
xor
popf
sbb
pop
mov
inc
or
push
inc
ss
hlt
test
jno
sub
movl
popa
dec
rorl
repnz
mov
cmp
cs
imul
dec
mov
sbb
and
mov
jnp
aad
pop
or
jb
js
xlat
in
xor
pop
jno
sub
cmpsl
iret
push
lahf
push
sbb
jns
into
cmpsl
mov
leave
push
insb
jecxz
in
cmp
test
addb
xchg
scas
mov
arpl
cmpsb
cmpsb
pop
and
lret
inc
mov
je
inc
dec
xor
enter
fdivr
sbb
adc
cltd
inc
push
in
pop
add
or
jmp
insb
sbbb
mov
cmpsb
in
sarb
ss
nop
test
inc
ss
and
sub
rclb
jno
scas
fsubrl
cwtl
iret
cmp
mov
repnz
loope
aad
repnz
xlat
xor
clc
dec
clc
cmc
fwait
loope
nop
add
mov
fiaddl
fs
in
jns
adcl
sub
popf
xor
iret
pop
and
sub
and
push
push
arpl
fcoml
fs
nop
insl
push
ja
pushf
push
mov
push
inc
mov
addb
mov
pop
test
or
scas
dec
in
mov
popa
rcr
push
push
es
rcl
rclb
xchg
out
xchg
xlat
testl
imul
imul
lcall
dec
mov
out
sbb
xchg
mov
and
dec
dec
cmp
pop
psubusw
cmp
push
push
mov
xchg
adc
hlt
iret
dec
ljmp
ljmp
test
lret
fldt
sahf
addb
add
cmp
push
shll
lds
mov
push
pop
push
push
inc
mov
out
or
cli
fimuls
mov
ss
push
mov
fsubrl
pop
xchg
dec
xchg
in
loop
in
and
sub
nop
xchg
add
je
push
pop
call
inc
out
ds
push
aaa
xor
sub
dec
sbb
cmp
or
jnp
das
lcall
mov
sub
pushf
into
rcrb
jne
inc
lock
xchg
shlb
scas
and
dec
pop
addr16
push
movsb
out
pusha
mov
pop
sbb
mov
stos
out
cmp
psrld
fildll
or
sub
xorl
adcb
in
mov
jl
daa
sti
pop
xchg
iret
adc
ljmp
mov
mov
dec
jbe
popa
mov
lock
sti
and
adc
les
push
scas
fdiv
sahf
sti
xor
sbb
push
je
mov
jo
jl
xor
aaa
mov
cmp
clc
xor
mov
je
imul
sti
mov
or
loop
lcall
pop
dec
out
data16
jle
bound
sbb
idivb
out
testl
sbb
add
xorl
push
scas
xchg
in
ds
fstpl
mov
mov
jb
outsb
mov
adc
sub
cwtl
inc
fstpl
frstor
pop
xlat
push
mov
ja
cmpsb
jo
lret
test
push
pop
dec
ret
cmc
mov
xchg
je
insb
and
jge
out
repnz
or
mov
cs
pop
loope
jge
js
insb
pop
pop
dec
mov
mov
mov
js
shlb
pavgw
lcall
sub
out
mov
pop
jae
scas
jecxz
loop
pop
cli
jae
rcrb
jb
lock
cmpsb
fxtract
mov
xchg
shll
xorb
sbbb
pop
inc
or
xchg
mov
fistps
pop
cltd
lods
stos
btr
mov
mov
into
les
xor
fwait
test
test
loope
mov
test
cmp
and
lret
ficoml
fs
sarb
js
fiadds
mov
push
add
sub
jno
aas
inc
xchg
push
and
data16
scas
jp
out
lahf
idivl
inc
mov
or
shlb
movswl
test
loop
xor
xchg
push
xchg
aaa
dec
nop
icebp
mov
mov
pop
insb
into
into
shll
inc
arpl
sbb
leave
testb
dec
cltd
pop
test
aam
ljmp
test
jnp
lods
xlat
adc
and
pop
js
aas
stos
lahf
insl
daa
ja
pop
popf
rorb
enter
scas
sbb
xchg
adc
ret
test
inc
cmp
aam
repz
js
cmp
mov
popa
mov
mov
push
mov
sub
cli
dec
repnz
xor
xor
jbe
push
loope
notl
int3
jecxz
hlt
lock
test
push
dec
das
int3
ret
add
mov
xor
inc
mov
lods
sti
cmp
dec
lock
inc
dec
popa
mov
mov
inc
repnz
arpl
fsubrs
push
mov
jb
push
js
lods
jle
ror
rol
stos
or
and
xlat
adc
inc
and
push
xor
mov
xchg
mov
dec
mov
and
mov
notl
leave
cmp
js
mov
jno
lods
add
es
pop
jne
je
add
add
inc
push
and
aaa
sbb
sbb
xchg
push
shl
pop
adc
cwtl
xor
cmp
and
hlt
cmp
push
inc
rcrl
ret
inc
cli
ljmp
es
sbb
add
mov
sub
icebp
adc
gs
arpl
inc
cwtl
inc
adc
ret
fs
fldt
scas
xor
adc
fcmovnbe
mov
mov
and
into
jo
push
or
adcb
adc
mov
mov
and
cmp
xchg
mov
mov
jns
cmp
dec
inc
inc
xchg
cld
jnp
pop
add
test
sbb
enter
mov
sbb
xchg
out
out
pop
push
jge
punpckhwd
ss
mov
and
lahf
inc
test
scas
and
push
xor
fcoms
aad
into
pop
or
add
lret
mov
mov
ficomps
add
xchg
xchg
mov
xor
outsb
lret
jg
int
inc
push
sahf
rcrb
dec
arpl
ret
rorl
xchg
inc
cmp
mov
inc
stc
mov
sub
cmp
mov
and
inc
cmpsl
cmpsb
ret
mov
mov
pop
push
pushf
cwtl
scas
xchg
movsb
les
and
femms
arpl
sub
movsb
mov
dec
push
jmp
outsb
mov
jge
repnz
sbb
or
jge
bound
cltd
adc
sub
aad
and
in
rolb
cs
lds
inc
mov
pop
arpl
je
stc
pop
push
pop
int
or
aam
popf
cmp
inc
jg,pt
xchg
shrl
jbe
inc
mov
inc
out
inc
cs
fwait
mov
pop
ret
leave
adc
cmpsb
int3
pop
loop
lea
push
shll
movsl
pop
loope
imul
mov
hlt
adc
adc
pop
outsl
les
inc
xor
cmp
adc
int
cwtl
cmpsb
mov
mov
adc
mov
outsl
cmp
xor
cmp
loop
mov
movsb
add
pop
cmp
mov
adc
sub
imul
or
sbb
test
dec
sbb
mov
movsb
decb
std
cmp
aam
and
ss
fcomi
bound
push
adc
cmp
pusha
pop
push
rorl
test
cmp
stos
add
aaa
add
and
jne
jg
test
pop
in
outsl
cmpsl
push
mov
mov
xor
lahf
mov
mov
mov
outsl
js
sbb
call
daa
and
pushw
in
jbe
inc
xchg
andl
cmp
mov
leave
aas
push
cmpsb
fs
pushf
enter
lret
pop
dec
lods
in
xor
and
dec
xor
movsl
adcb
mov
xor
inc
jge
cmp
insl
aad
and
fstpl
rclb
pop
popf
jns
js
fnstsw
xchg
mov
xchg
xlat
cmpsl
jb
cmp
into
outsl
and
sbb
aad
mov
push
mov
les
sub
ds
enter
fisttps
pop
hlt
scas
push
pop
add
lock
inc
fmull
icebp
mov
stos
pop
cmp
subl
jne
sbb
orl
inc
push
call
shrl
cmp
cmpsl
or
cmp
popf
and
xchg
push
xchg
call
xor
lods
fcomip
jno
mov
aas
fmulp
movsb
lret
iret
stc
daa
jb
fs
xchg
xor
pop
mov
fwait
jle
cmp
in
dec
mov
aas
es
int
jg
sahf
xchg
pop
mov
xchg
xor
das
cltd
out
out
popf
cwtl
mov
cld
xchg
dec
repnz
dec
mov
sub
mov
in
in
inc
movsl
xor
jmp
jle
push
add
xor
jo
data16
pop
in
aaa
ret
mov
rcrl
or
jnp
dec
js
scas
sub
leave
sub
adc
shlb
test
shll
addl
aaa
pop
mov
dec
push
aas
mov
push
repz
or
aad
mov
push
arpl
rorb
inc
popf
shl
xchg
scas
movsl
inc
inc
jae
dec
loope
sub
imul
mov
pop
push
pusha
in
ljmp
mov
imul
xor
lahf
push
cmpsl
or
and
out
jno
outsl
push
cwtl
in
ss
xchg
xchg
sbb
pushf
adc
sub
sbb
jl
pop
loop
int3
xor
cltd
xchg
sub
roll
xor
pop
loopne
dec
cmpb
xor
shlb
inc
mov
push
fnstcw
hlt
pop
push
pshufw
adc
fldl2e
fld
js
push
lds
push
cmp
add
cmp
mov
hlt
sub
adc
jb
mov
mov
lahf
mov
sub
mov
test
imulb
lahf
loopne
clc
loope
mov
rcrl
arpl
subl
lea
std
cmpsb
in
cs
dec
add
pop
jbe
imul
mov
nop
xlat
in
jb
dec
addr16
xor
sarb
adcb
into
scas
and
fstpt
adc
jae
cwtl
cs
aam
push
lods
pusha
loopne
mov
inc
imul
cmpsb
ja
mov
shrl
or
or
cmp
test
int3
fcom
int3
mov
scas
int3
aas
inc
xchg
out
popf
lcall
ret
adc
xor
jmp
mov
into
test
cmp
pop
cmp
xchg
pop
dec
icebp
rorb
mov
stos
and
sub
call
cmpsb
jbe
ret
adc
arpl
xchg
add
fsub
add
ljmp
jg
sub
ret
shlb
ret
roll
sub
push
sub
jbe
push
dec
dec
daa
sbb
adc
xor
popa
rcl
leave
mov
xor
mov
xor
sbb
loop
addr16
cltd
pop
loop
adc
daa
bound
mov
mov
and
xor
mov
pop
fcmovu
jecxz
pop
cli
lret
mov
rcr
xor
jne
lret
fnstcw
xchg
mov
inc
jno
mov
push
test
cltd
test
sub
pushf
xchg
sub
popa
dec
popf
aas
sbb
mov
xchg
adc
jmp
aam
push
ljmp
and
jge
pop
stc
push
jmp
lds
int3
pminub
xlat
ror
cltd
out
push
jo
push
mov
jge
pushf
sahf
das
or
jmp
xchg
ds
pop
lcall
imul
lea
dec
sbb
loope
and
dec
rorl
lret
pop
pop
xor
add
nop
sarl
rorb
xlat
mov
ret
test
push
mov
add
jmp
loopne
cmp
jo
or
mov
sub
sbb
inc
ds
cmpsl
push
jecxz
pop
fcoms
pop
mov
sbb
lds
fisubs
pusha
jbe
dec
out
cmc
sti
jnp
in
int3
bound
jno
push
mov
outsb
cmpsb
mov
into
xchg
pop
stos
mov
inc
inc
push
repz
mov
mov
mov
inc
imul
dec
and
mov
shrb
test
cli
mov
enter
jecxz
insl
loop
mov
jb
imul
dec
mov
pop
test
xor
mov
pop
lcall
jne
fucom
mov
sbb
and
xor
shll
fisubl
mov
lock
in
cwtl
mov
push
stc
lahf
jae
cmp
adc
cmp
adc
mov
xor
data16
jp
xlat
aaa
out
mov
sub
rolb
shlb
out
out
pop
dec
cltd
daa
lods
sbb
dec
xor
movsb
lahf
jmp
pop
sahf
sub
pop
aaa
sub
fadds
sbb
adc
mov
and
dec
shlb
mov
mov
shlb
add
pop
adc
push
out
dec
cmp
pusha
inc
mov
pop
jbe
into
testl
aad
jb
mov
cs
mov
inc
daa
out
outsb
fstl
jne
adc
jae
imul
ja
sahf
jge
mov
out
in
rorb
cs
lahf
jge
mov
jno
adc
fs
lods
test
mov
inc
or
add
cmpsl
cmp
adcl
sbb
xchg
mov
push
add
daa
lcall
sbb
pop
ficompl
inc
rep
icebp
shrb
testb
mov
ret
adc
bound
dec
cmpb
xchg
jo
js
daa
das
mov
outsb
adc
xor
add
mov
pop
out
or
xor
dec
fistl
das
mov
in
loopne
pop
sub
test
push
ljmp
shll
pop
xor
dec
pusha
aaa
adc
ffreep
ja
jp
mov
popl
xchg
mov
inc
pop
xor
leave
test
adc
ret
aad
scas
fidivrs
cmp
gs
pop
mov
cmp
mov
mov
mov
jmp
lea
push
ss
test
sahf
out
jp
decl
mov
mov
pop
dec
sti
inc
dec
fsubs
xor
clc
add
cmp
shll
out
sub
mov
cmpsb
cmp
sub
arpl
dec
xor
sub
sbb
imul
aas
inc
stos
iret
push
xor
lock
mov
aas
ret
fidivrs
pop
imull
dec
xchg
test
fwait
and
lods
test
pop
add
lret
dec
in
xor
add
clc
mov
dec
cmp
xor
pop
sbb
fcomp
inc
xor
in
cmp
xchg
les
lods
pop
mov
sub
imul
ljmp
out
mov
pop
xchg
insb
outsb
dec
mov
dec
mov
mov
sbb
out
xor
mov
fsubr
push
mov
movsl
and
push
stc
pop
pop
out
sbb
test
xor
cmp
cmp
jns
lcall
hlt
ss
inc
lock
in
jno
cltd
push
cltd
cmpsb
jae
negl
pop
out
cmp
push
nop
cmp
cwtl
movsl
push
leave
mov
inc
cmpsb
out
mov
scas
sub
std
faddl
in
dec
lock
xchg
mov
pop
ds
call
je
pop
out
pop
in
mov
addr16
movsb
sub
outsb
dec
jp
in
jmp
lahf
pop
lahf
lods
xchg
pop
int3
cmp
push
jnp
in
inc
insb
pusha
rol
ds
jle
insl
push
je
cli
popa
add
or
mov
jmp
or
data16
and
into
sbb
repz
ret
or
mov
fdivr
push
mov
cmc
daa
out
pop
cmp
cmp
jl
add
pushf
lahf
inc
in
mov
stos
dec
xchg
clc
aaa
fiaddl
std
into
xchg
bound
push
nop
out
sti
popa
push
xor
xchg
popf
mov
fsubrl
mov
mov
dec
mov
rcl
lcall
dec
into
or
repz
or
mov
mov
sahf
cmp
cs
xchg
xchg
andl
cmc
sub
aam
popa
mov
es
jae
xor
sub
xor
inc
inc
movsb
in
adc
or
push
pop
sub
jge
mov
jle
inc
mov
fucom
mov
adc
insb
imul
jnp
loope
mov
adc
push
sbb
fwait
xlat
push
and
jns
cld
fisttps
mov
inc
pop
mov
inc
xchg
movsb
out
data16
xchg
lcall
pop
mov
adc
popa
sub
xor
mov
dec
adc
cmp
movhps
fwait
les
nop
fs
sub
and
xchg
pop
pusha
rorb
pushf
xchg
push
cmp
dec
fdivs
pop
mov
mov
and
test
sbb
push
xchg
movsl
mov
cmpsb
adc
inc
adc
cmc
fmuls
mov
cltd
dec
pop
or
loop
inc
fldenv
sbb
bnd
push
cs
and
adc
sti
pop
sahf
mov
in
mov
push
jmp
lret
pop
mov
push
scas
sar
sbb
arpl
addl
sbb
mov
sbb
pushf
ljmp
ljmp
subl
mov
stos
inc
inc
xlat
enter
mov
aad
fstps
imul
clc
lcall
push
aas
outsl
xchg
movl
sbb
jecxz
mov
inc
insb
in
sbb
js
jge
add
inc
mov
int
ds
bound
jnp
push
call
mov
popa
mov
cs
mov
pop
jp
sub
xor
cmp
loope
outsb
fimuls
mov
push
negb
xchg
and
jmp
mov
xchg
pusha
call
and
sub
pusha
rorl
push
sbb
mov
aam
jl
bound
or
cmc
popf
bound
inc
stos
call
and
sbb
data16
add
and
test
jg
insl
jmp
jle
xor
addr16
loopne
sub
movsl
aaa
sbb
xchg
bound
jb
loope
std
cmp
push
sbb
jl
mov
xor
je
jnp
or
mov
xor
into
pop
fsubrp
push
adc
push
cmp
fstpt
mov
jle
adc
jp
pop
loopne
or
js
lods
push
stc
ret
insl
jg
or
ror
mov
or
push
call
inc
popf
push
lcall
cwtl
popa
mov
mov
xor
adc
outsl
pop
xlat
imul
dec
fldln2
stos
or
pop
lret
pop
shlb
stos
movsb
ljmp
push
adc
pop
xor
and
js
frstor
popf
sahf
jnp
leave
mov
lea
out
xchg
adcb
popf
push
mov
roll
fsub
fwait
enter
cmp
fldenv
inc
ss
mov
pop
xor
mov
or
sub
into
and
mov
xchg
sbb
das
adc
add
cmp
lcall
popl
popa
sarl
push
in
int
in
push
adc
shll
loop
jp
add
pop
ss
leave
aad
jl
mov
imul
push
lcall
fiadds
call
mov
dec
addr16
mov
mov
fsubrp
cmpsl
mov
xchg
cmc
add
popa
dec
fbstp
inc
test
flds
mov
pushf
orb
pop
fld
icebp
stos
cmpsl
fdivrs
mov
aas
lds
mov
je
inc
data16
adc
mov
sub
cmpsb
or
ja
add
jecxz
cld
in
outsl
or
cmp
add
pop
mov
mov
and
ret
jnp
mov
sub
fstpt
mov
or
push
sub
push
xchg
mov
loop
cmp
jb
push
xchg
sbb
pop
ja
xor
fstps
inc
mov
inc
pop
inc
cmp
inc
mov
outsb
fldl
cmp
sarl
mov
leave
jo
fldcw
pop
and
out
lods
push
rorl
cs
sbb
mov
inc
mov
xchg
xchg
and
jb
push
or
adc
and
in
ret
rorl
xor
lea
popa
xchg
scas
fcoms
fwait
mov
clc
dec
nop
sub
shlb
insb
or
push
xchg
gs
out
mov
sbb
clc
mov
sbbl
pop
insb
call
stc
push
or
mov
mov
mov
push
xor
lea
jl
mov
aas
pop
hlt
xor
cli
pop
sub
mov
adc
dec
jb
stos
sbb
std
leave
leave
or
xchg
lods
enter
ds
outsb
pop
rcll
add
mov
jo
fmuls
rorb
loopne
pusha
arpl
pusha
ds
cmp
ret
sbb
add
push
mov
std
dec
lcall
pop
bswap
insb
mov
rcr
mov
fidivs
dec
push
popa
adc
sbb
and
shrl
fsubs
xchg
jns
push
push
sarb
out
std
adc
add
push
cmpsl
sub
push
sbb
jg
cltd
shlb
ds
lock
test
fbstp
adc
xor
xchg
push
push
push
pusha
xor
fmull
xor
jge
daa
mov
mov
cltd
out
cli
pusha
mov
pop
mov
shufps
stos
mov
add
bound
enter
cmp
aad
cmp
mov
inc
mov
push
jecxz
mov
imul
adc
sbb
mov
adc
cwtl
sub
and
lods
dec
aad
or
push
xchg
dec
sbb
push
sarl
mov
loopne
loop
fmuls
mov
insb
aad
mov
push
dec
sbb
sbb
mov
pop
add
push
out
lahf
shlb
jo
and
js
xlat
shr
push
shlb
in
mov
cmp
xchg
dec
in
ret
es
dec
insl
dec
pop
sbb
sbbb
dec
xchg
sub
out
push
xlat
push
jge
lahf
mov
dec
dec
fs
xor
ss
xchg
push
scas
sbb
add
sarl
xchg
popa
dec
js
aaa
add
and
jae
sub
mov
in
sbb
mov
push
xor
in
cltd
push
mov
dec
loop
pop
in
push
xchg
outsl
stos
cmp
pushf
ret
ja
daa
mov
gs
shrl
addr16
jecxz
jp
xchg
call
mov
and
pop
dec
sub
andl
ljmp
fidivrs
sub
xchg
sub
jle
cmp
pop
push
push
mull
and
dec
jne
mov
pop
cwtl
xor
inc
or
jge
or
mov
adc
decb
sar
push
or
pop
and
lods
mov
or
lahf
ja
scas
mov
cmc
lea
xchg
jecxz
repz
ja
dec
push
push
xchg
js
push
sub
inc
jl
push
sbb
xchg
jbe
adc
mov
in
mov
or
sub
outsb
dec
and
or
scas
gs
shlb
mov
mov
lods
add
adc
mov
lods
fs
loop
mov
sti
imul
jb
mov
test
outsb
inc
aam
dec
insl
sbb
sbb
dec
cmc
pushf
fsubrs
popa
pop
inc
mov
dec
mov
inc
in
mov
pop
pop
leave
mov
lea
stos
inc
ljmp
pop
stc
cmp
imul
mov
mov
scas
jbe
or
dec
std
push
ret
adc
fidivrs
lods
jns
mov
add
fnsave
jge
jcxz
jo
xchg
pop
movsb
popf
adcb
push
mov
mov
xchg
xor
out
push
xor
in
xor
inc
sbb
shll
js
jle
dec
int3
pop
inc
daa
mov
sti
mov
add
dec
bound
loopne
xchg
sbb
and
pop
out
cmp
testb
mov
pushf
mov
mov
sub
sub
cs
punpckhbw
mov
lcall
addr16
pop
push
xor
iret
test
adc
mov
cld
push
mov
and
or
ficomps
mov
loopne
addb
fdivl
xchg
push
icebp
scas
in
xchg
les
jp
js
xorb
lret
aas
jb
addl
fstl
push
sub
arpl
jmp
mov
pushf
shrl
scas
faddl
inc
sub
insb
mov
shlb
mov
adc
mov
sub
and
aad
xchg
lea
mov
xchg
mov
rol
and
or
cmp
mov
pop
jo
fidivl
nop
fbstp
test
fmull
call
and
clc
mov
cltd
sub
out
dec
jnp
jge
mov
daa
add
xlat
dec
adc
sarl
into
stos
mov
scas
inc
sarb
push
jmp
aaa
roll
ds
pop
pop
out
rdtsc
cmc
xor
mov
shll
stos
or
mov
sub
std
stc
and
xchg
add
pop
shlb
inc
mov
sbb
push
mov
xor
inc
out
mov
into
nopl
aam
cmp
mov
lcall
lock
push
imul
out
sub
push
mov
adc
xor
arpl
outsb
int
test
in
popf
mov
lods
push
mov
push
cmp
icebp
repnz
or
adc
and
fstps
in
jne
fidivs
xchg
mov
cmpsl
push
cmp
dec
and
xorb
mov
cmp
or
lea
jle
adc
lods
mov
push
and
xchg
scas
in
mov
add
adc
ficoms
adc
fidivrl
push
mov
push
xchg
xchg
dec
xchg
bound
adc
fs
ret
or
pop
xor
xor
push
ljmp
in
aaa
jbe
xchg
in
arpl
pop
fucomp
shr
xchg
pop
xchg
jbe
dec
lock
xchg
and
cmp
jmp
neg
enter
repz
repz
in
xchg
jge
ret
shrb
mov
je
inc
lret
jecxz
rclb
xor
mov
rorb
and
jg
iret
scas
mov
insl
repz
cmovns
es
out
test
cs
into
arpl
dec
js
mov
out
scas
mov
mov
push
sahf
into
push
cmp
push
jecxz
xor
cli
scas
cmpsb
js
xor
loope
lock
mov
dec
aaa
fisubrl
aad
shlb
add
xor
pop
jmp
mov
sahf
pop
cmpsl
inc
addr16
mov
jns
outsl
mov
sub
arpl
lret
test
popa
xor
inc
or
inc
mov
and
dec
idivb
loope
push
cmpsb
int
sbb
push
bound
lahf
mov
cmp
andb
in
lret
and
mov
jmp
aas
pusha
sub
add
cmpsl
cltd
mov
lret
or
outsl
rcrb
aas
cmp
mov
adc
push
xor
inc
mov
aas
push
rclb
xchg
adc
xchg
imul
jecxz
icebp
xor
xlat
das
test
jmp
cmp
xchg
dec
pop
pop
mov
cli
xchg
icebp
mov
jae
repz
fcmovu
aas
mov
aas
push
lret
cmpsl
ljmp
std
xchg
jmp
and
in
and
test
jmp
xor
sub
xor
pop
and
fiadds
inc
xor
and
mov
hlt
xor
js
cld
insl
rcrb
adc
arpl
in
out
pop
pop
jne
movsl
cmp
jle
jne,pn
mov
call
and
inc
add
push
mov
ja
call
pop
sub
lods
lret
iret
addr16
or
out
pusha
sbb
ret
aaa
add
out
test
mov
sbb
cmpsb
jne
dec
xchg
jp
mov
ja
push
jbe
inc
mov
inc
dec
cmp
mov
jbe
adc
push
and
jno
imul
dec
adc
cs
xchg
push
inc
icebp
sbbb
andb
cmp
add
and
mov
sub
gs
lods
js
xchg
loopne
sbbl
xlat
and
adcl
mov
std
mov
test
fildll
fisubl
mov
xor
and
sub
sar
inc
push
out
lods
shll
loop
jnp
add
xchg
cmp
js
lahf
and
sarb
cmpsb
push
loopne
jle
rorl
lds
jne
adc
inc
sbb
jno
out
in
dec
data16
xor
dec
push
repnz
in
stos
xchg
jecxz
scas
leave
xlat
and
imul
xorb
popf
jb
inc
adc
movsb
push
push
sarl
mov
ss
xchg
aad
stos
mov
cmp
xor
inc
push
ficoml
fidivrs
xor
pop
sahf
arpl
call
int
imul
dec
add
xchg
sbb
sub
mov
dec
scas
insl
cmp
mov
mov
xor
inc
and
cli
pop
lods
xchg
fwait
les
add
das
jae
sub
or
jle
ss
les
daa
jne
sbb
pop
jl
stc
ja
mov
add
dec
cld
call
sub
xlat
pusha
xchg
stos
inc
xchg
test
jns
mov
cmpsl
nop
sbb
cmc
sbb
bound
sarb
cmp
rcrl
add
stos
mov
gs
popf
dec
fldpi
jl
sbb
mov
mov
sub
jle
in
mov
push
mov
pop
mov
js
out
inc
push
pop
pop
loopne
push
loop
lods
mov
daa
jae
adc
xchg
mov
mov
push
lahf
ror
decb
mov
jae
popa
aad
add
mov
and
cwtl
enter
sub
mov
test
inc
les
xchg
movsl
pop
mov
les
push
sbb
sbb
push
out
ds
cli
loopne
push
shr
sub
cmp
adcb
xor
sub
fcoml
adc
cs
push
cs
dec
or
inc
ja
sub
jl
mov
pop
addb
popf
and
push
xchg
xchg
lock
inc
fnsave
out
inc
imul
jb
sub
jp
pusha
pusha
pop
lret
in
mov
mov
pusha
and
ficoms
call
jl
mov
daa
je
push
mov
filds
jg
lcall
sbb
jo
stos
sti
repnz
mov
in
fnstsw
rcrb
jp
inc
push
cwtl
stos
jo
fs
xor
sub
xchg
mov
inc
test
das
sbb
sub
pop
xlat
push
xchg
push
out
aad
mov
xchg
xor
shll
mov
imul
andl
roll
inc
ss
jge
shl
sahf
scas
inc
mov
jg
pushf
pop
mov
and
subl
and
rolb
int
dec
push
sub
pop
jbe
ret
mov
lret
push
popf
loop
mov
mov
dec
cmp
scas
mov
mov
out
inc
mov
out
mov
sbb
cmp
mov
inc
push
sbb
push
rcl
inc
inc
loope
sub
notb
arpl
mov
jmp
out
xchg
dec
and
shlb
js
push
fimuls
movsl
sub
int3
push
adc
shlb
adc
hlt
inc
ljmp
mov
add
js
mov
outsb
mov
and
and
and
popa
jb
and
pop
jbe
lods
pop
in
sbb
jmp
in
aaa
fildll
cmp
inc
inc
leave
and
loope
and
addr16
je
ljmp
jecxz
jo
scas
mov
add
fistpl
leave
dec
lods
xor
push
cltd
cli
movsbl
mov
xor
daa
jecxz
int
repz
bnd
ss
pop
shrl
inc
sub
sbb
lcall
inc
jae
sahf
pop
pop
test
hlt
mov
mov
or
cmp
fistpl
jbe
aas
pushw
test
push
and
or
hlt
jmp
shll
jb
loop
lahf
ds
ljmp
scas
leavew
push
aaa
in
imul
push
xor
push
loop
ds
adc
lahf
jnp
fimull
mov
pop
inc
inc
jo
mov
adcb
mov
cmp
testb
cs
sbb
xrelease
push
lock
sbb
xor
cwtl
or
dec
sbb
movsl
pop
push
scas
faddl
jo
ljmp
pop
push
stc
push
addr16
pop
shlb
inc
jns
loop
addr16
mov
lcall
sarl
push
add
jg
les
sbb
arpl
push
adc
dec
mov
xor
mov
sub
push
out
sub
and
jb
pop
repnz
lods
popa
cli
out
fadds
adc
add
imul
adc
shr
loopne
mov
fisubs
movsl
cmp
gs
dec
or
outsb
xchg
xchg
lcall
lret
xchg
sarl
dec
or
fistl
scas
movsb
sbb
mov
call
cs
repz
adc
xchg
dec
dec
adc
cmp
ds
sub
movsl
fwait
scas
ds
inc
xchg
cld
cli
or
jmp
popf
push
push
and
sbb
pop
cmpsb
jecxz
and
cmpsl
je
es
loop
out
dec
inc
pop
mov
jg
cmp
test
xor
inc
mov
jp
push
sarb
pop
stc
mov
add
in
ret
push
jmp
pop
lods
scas
lret
mov
inc
mov
pop
mov
pop
fldt
cld
enter
jmp
pop
in
dec
dec
rolb
scas
pop
xchg
sbb
dec
xchg
jb
xchg
mov
or
addr16
stos
xchg
icebp
add
nop
jb
inc
hlt
xor
fisttpll
pop
pusha
fld1
popa
lods
cli
testb
int
or
mov
sbb
addr16
or
push
jbe
and
fisttpll
xor
xchg
sahf
xchg
shrb
sbb
jl
pop
push
inc
jns
outsl
pop
mov
lret
outsl
imul
imul
pop
xor
rorl
cmp
cmpsb
out
pop
pop
xchg
aas
xlat
pop
push
push
js
outsb
mov
cmp
ret
mov
adc
cld
mov
cmp
pop
out
fidivrl
fdivrs
lret
sub
enter
rcl
inc
pop
xor
push
mov
cmp
xor
mov
push
cmp
sbb
mov
jp
and
call
mov
loop
in
jl
inc
xchg
and
mov
ficompl
add
inc
cs
jle
ja
imul
mov
mov
inc
lcall
pop
out
sbb
ja
imul
lds
xor
ret
pop
rcr
pop
or
lcall
push
inc
xor
jae
and
mov
xchg
mov
or
call
cmpsl
mov
lret
push
into
gs
shrb
clc
or
inc
dec
pop
xchg
jns
rcll
scas
inc
cmp
xchg
mov
mov
xor
hlt
jo
mov
dec
adc
cwtl
mov
pop
jle
mov
int3
push
add
es
add
inc
repnz
push
dec
xchg
lcall
ljmp
sbb
or
add
xchg
inc
mov
test
imul
lock
into
dec
insb
or
push
into
ja
xchg
mov
repnz
out
lea
repnz
push
cmp
jmp
adc
ss
xchg
cmc
cmpsb
mov
das
in
clc
je
jge
mov
adc
adc
mov
add
iret
jg
fs
pop
lods
fs
dec
pop
ja
les
add
and
mov
mov
cwtl
cmp
cmp
les
cltd
dec
jne
js
push
pop
cltd
push
lahf
in
xor
mov
test
mov
mov
lcall
into
adc
mov
push
aas
daa
adc
cs
out
daa
insl
mov
xlat
in
out
bound
and
cmp
mov
loopne
push
cmpsl
xchg
movsl
out
and
xchg
lods
imul
push
icebp
pop
sar
jle
mov
bound
pop
xor
test
popf
rorb
adc
int
clc
jbe
push
lahf
cli
sub
jecxz
push
inc
mov
je
mov
jae
mov
xorl
lds
nop
addr16
pop
push
inc
inc
jmp
aad
test
jbe
adc
lock
xor
jns
arpl
xchg
add
or
cwtl
jmp
fdiv
add
and
clc
outsb
add
mov
adc
jmp
loop
xchg
mov
les
inc
and
addr16
dec
pop
pusha
xchg
and
mov
xor
ljmp
push
jle
shr
pop
mov
mov
dec
mov
mov
sbb
jno
xor
sbb
mov
movsb
mov
and
push
sub
xor
inc
sbb
inc
ss
cmp
repnz
test
cmp
xchg
fdivp
mov
outsb
jnp
xorps
mov
and
shr
push
sub
or
lret
mov
sbbl
sub
in
jge
cmp
cltd
mov
inc
insb
dec
lret
aas
rol
lret
push
pusha
shrl
subb
sbb
sub
ret
jnp
lds
jmp
gs
xor
int
push
loopnew
add
popa
sbb
jnp
pop
lods
pop
call
or
cwtl
and
lods
in
out
nop
and
leave
add
mov
add
mov
dec
mov
inc
ret
pushf
in
sub
fwait
out
pcmpeqb
iret
inc
adc
divl
cmp
sbb
pop
jnp
cwtl
mov
jns
pop
in
insb
sub
mov
pop
loopne
out
imul
fldcw
in
push
sahf
movsb
aam
and
cmp
dec
aas
test
jge
mov
mov
or
inc
xor
mov
test
push
outsl
insl
icebp
jae
dec
in
test
mov
jae
dec
xchg
aad
stos
mov
shlb
fs
xorl
xlat
push
mov
ljmp
adc
test
sub
cmpl
scas
mov
out
call
aaa
out
mov
int
sub
xor
inc
inc
pop
add
jnp
xchg
ficomps
push
xchg
jno
jle
daa
aam
ffreep
inc
stos
xchg
ljmp
negb
pop
push
xchg
popa
pop
divl
mov
sub
xlat
outsb
sbb
sarb
fucomi
adc
mov
fwait
push
jmp
cwtl
mov
outsb
test
push
or
pop
cmp
sub
xor
dec
and
inc
ds
pop
xchg
and
shlb
stc
jb
sbb
mov
sti
adc
xchg
movsb
fsubs
sbb
cmp
mov
hlt
push
jo
insl
cmp
nop
jno
sub
das
movsl
sbb
call
jbe
sub
mov
sahf
sub
sub
or
xor
xor
mov
xor
sub
scas
addr16
mov
test
xchg
sub
xchg
mov
push
jns
lcall
aaa
inc
xor
and
out
mov
inc
jl,pt
xor
repnz
and
decb
mov
rcll
aaa
movsb
pop
rorb
mov
ret
jnp
in
mov
rcll
and
aas
or
aam
sub
lea
aad
jae
js
cmpsb
or
ror
or
and
push
mov
cmp
xor
dec
lods
stc
jno
sub
inc
scas
xchg
mov
dec
add
sbb
insb
add
or
push
or
inc
sbb
xchg
aas
loope
ja
sbb
add
dec
or
setp
mov
dec
inc
pop
pop
pop
sub
pop
add
das
mov
adc
outsl
jb
xchg
xor
cmp
cmovnp
mov
mov
fsubl
jns
pushf
mov
pop
test
or
mov
les
arpl
test
lds
arpl
sbb
call
xchg
sbb
xor
movsl
stos
outsl
mov
int
mov
xor
addr16
mov
cmp
movsl
daa
fstps
mov
int3
cmc
ds
mov
mov
pop
mov
mov
xor
das
subl
scas
xorb
out
mov
pop
pop
nop
je
stc
sbb
inc
repz
add
lds
push
jg
mov
sub
xchg
sub
add
daa
pop
lcall
dec
pop
in
stos
jge
cltd
cmpsl
mov
lock
dec
and
les
and
jbe
mov
sahf
sbbb
mov
push
sub
stc
int
adc
lods
daa
or
sbb
fwait
movb
mov
jae
sub
cmpsb
aas
push
jp
test
das
dec
adc
icebp
mov
cltd
lds
cmp
out
les
shll
xor
sub
pop
arpl
push
xor
inc
cmpsl
mov
xor
stos
jne
mov
xor
dec
push
or
jl,pt
mov
push
push
insl
cmpsl
and
xchg
cmp
lcall
mov
xchg
loopne
pop
out
jns
xchg
or
std
sti
mov
xor
fisttpl
mov
stc
sbb
testb
sub
cmpsb
push
les
push
mov
loope
insb
xlat
push
jmp
cmpl
jnp
jp
popf
lcall
cli
jb
out
cli
mov
sub
sub
nop
call
jge
jge
push
bswap
ret
inc
mov
sub
mov
aam
cmp
scas
inc
xchg
test
es
fadd
out
cmp
rcl
dec
sbb
jp
cmp
mov
push
imul
shll
into
jb
mov
mov
cmp
dec
ss
cmp
pushf
fcomps
rep
jne
out
mov
imul
into
out
popa
mov
push
xchg
pop
dec
jp
mov
mov
pop
dec
or
mov
push
inc
lods
loopne
out
add
mov
push
and
dec
cltd
mov
ret
adc
fistps
out
sub
fsubrs
out
mov
int
lock
ret
aaa
adc
inc
dec
mov
adc
mov
inc
es
push
idivl
icebp
lcall
std
cmp
sub
lea
xor
scas
xor
push
mov
dec
mov
inc
mov
es
idivl
in
iret
cld
outsl
cmp
mov
jae
adc
cmp
fcoml
fmulp
xchg
ljmp
jns
jl
inc
mov
mov
push
cld
xchg
mov
push
jae
lret
out
dec
in
out
mov
xor
xchg
inc
add
push
add
sub
mov
flds
jae
daa
adc
cmpsb
xor
fiadds
cltd
loopne
mov
enter
xor
and
mov
repnz
push
iret
xchg
inc
jecxz
jle
ret
rorl
mov
lea
xchg
in
mov
mov
out
jnp
mov
ds
jae
dec
pop
stc
divb
push
orl
or
in
insl
jo
xor
pop
jmp
in
into
push
movsb
inc
or
add
sub
push
jge
loope
pop
dec
mov
arpl
ret
xchg
xchg
push
or
add
jmp
cli
movsl
and
or
fnstsw
insl
insb
mov
out
cltd
and
ja
movsb
lock
mov
es
add
or
fs
mulb
sub
inc
stc
aam
jge
outsl
pop
int3
pop
pop
xchg
mov
sbb
pop
push
ljmp
fwait
sysret
stos
cmp
les
movsl
xorb
imul
push
inc
cmp
loop
shll
dec
pop
mov
inc
repz
push
sbb
cmp
cmp
jle
mov
mov
inc
cmp
roll
repnz
or
add
loop
test
lods
and
mov
lret
mov
inc
pop
imul
sub
sahf
sub
add
sub
popw
mov
out
imul
fnstsw
aad
pop
aas
xchg
repnz
jae
xlat
dec
loopne
lahf
adc
xchg
cmpsb
rcrl
fsub
pop
sub
std
dec
in
cmc
addr16
div
sub
adc
cmpsl
adc
lods
in
xchg
mov
movsl
stos
mov
stos
fcomps
xchg
mov
inc
add
add
rolb
arpl
push
popf
sub
pop
mov
loop
repnz
stos
es
xchg
and
sub
mov
dec
in
jge
rcrb
test
lcall
pop
in
ja
leave
add
mov
inc
aaa
cld
lcall
pop
xchg
sbb
rorb
lock
test
jle
loop
into
les
aad
jno
arpl
and
sbb
pop
sub
aas
and
fstpt
cltd
xlat
and
jp
push
adc
mov
xchg
fs
mov
cmp
cwtl
sti
pusha
jo
sarl
mov
mov
stos
fcmovnb
xchg
out
sub
sbb
mulb
jecxz
pop
dec
xor
add
cs
mov
mov
dec
dec
ss
dec
arpl
rclb
cmpsl
dec
and
out
outsl
add
xorl
dec
pop
int3
fwait
lcall
fwait
pop
pop
sub
test
and
cld
push
mov
mov
mov
pushl
mov
sub
repnz
lret
test
pop
xor
xlat
pop
jmp
push
jg
daa
lods
sbb
rcll
pusha
mov
ret
and
sbb
jg
cltd
sbb
sbb
repz
fsubs
xlat
mov
xchg
or
mov
dec
xor
inc
jge
test
xor
xchg
mov
mov
adc
jns
cs
in
ret
mov
imul
mov
cmp
pop
cwtl
pop
inc
sti
and
in
jg
ja
adc
shll
xorl
fdivs
imul
fs
jg
daa
jmp
push
in
mov
out
out
jp
out
ds
inc
xchg
add
mov
ret
jns
adc
shl
push
jmp
dec
push
loopne
mov
xchg
sbb
jbe
andl
adc
movsl
sub
mov
mov
inc
test
mov
mov
sub
scas
outsl
xchg
pop
mov
or
mov
in
mov
jbe
sbb
mov
imul
ffree
popa
jle
int
lea
dec
ljmp
pop
xchg
dec
dec
mov
outsb
mov
cmc
cmp
inc
mov
push
stos
into
inc
mov
fiaddl
mov
xlat
out
out
es
daa
xor
add
scas
into
xchg
out
inc
and
sub
push
mov
and
add
lea
int3
dec
insb
push
pop
xchg
or
lahf
sub
push
test
scas
and
repz
or
das
outsl
sbb
cld
jl
and
ss
push
mov
sahf
sub
and
push
pop
lea
mov
push
dec
push
js
jle
xor
rclb
push
pop
ffreep
cli
push
test
inc
es
stos
sub
sub
sbb
xor
xchg
sti
repnz
cs
xchg
push
or
cmp
ss
imul
test
dec
or
dec
xchg
and
les
mov
int
or
jno
testb
inc
inc
scas
ja
add
sarl
pop
fcomip
addr16
pop
push
ss
push
inc
ret
cmc
addr16
sbb
add
sub
jns
mov
inc
mov
adcl
jl
mov
dec
mov
aad
and
jae
inc
and
mov
iret
outsb
adc
sub
iret
stos
insb
adc
cmp
cmpsl
sbb
xchg
mov
loop
dec
sbb
hlt
cltd
pop
or
dec
adc
lods
pop
sarl
mov
cwtl
sbb
addr16
jno
icebp
mov
aad
jbe
cmp
xchg
sbb
add
lea
push
dec
loop
and
push
js
fidivs
xor
dec
push
pop
cmp
stos
leave
mov
mov
mov
enter
inc
sub
mov
jl
jg
mov
sahf
mov
xor
xchg
fs
cmpsl
dec
inc
jge
add
fstps
incl
xor
cwtl
sbb
cmpsb
or
rorb
lods
or
call
pop
cmp
loopne
loop
or
filds
jo
mov
imul
movsb
std
cmpsb
mov
dec
call
sub
mov
sbb
mov
dec
push
inc
xlat
cmp
lret
xor
lahf
loopne
fs
dec
arpl
test
jp
jg
stos
jno
into
rclb
push
stos
aaa
push
lfs
dec
dec
inc
sub
addr16
xlat
mov
jns
sub
and
or
pop
xchg
sub
gs
out
jmp
sub
mov
cwtl
call
les
mov
mov
inc
add
xchg
aas
stos
into
push
in
test
mov
stos
fs
insl
pop
cmp
and
rcrl
subl
xor
mov
loope
jae
dec
std
daa
mov
pop
inc
lcall
sbb
dec
jp
aas
dec
pop
nop
jp
out
push
out
cmpsb
xchg
insb
jo
jge
loopne
xchg
and
lret
stos
inc
xor
mov
dec
int
cmp
sub
fs
or
adc
imul
inc
test
out
inc
cmp
stc
rcrb
sub
scas
rcrl
mov
cmpl
sbb
js
push
mov
sbb
cltd
xchg
shll
inc
cmp
sbb
cmp
out
inc
mov
clc
jb
pop
repnz
xor
inc
mov
and
dec
lahf
popa
aaa
cs
ljmp
fists
cmp
mov
inc
jbe
dec
cwtl
inc
sbb
inc
add
mov
xor
xor
sub
bound
xrelease
jo
mov
mov
fdivrp
dec
cmp
and
aaa
mov
lds
mov
fwait
lahf
lods
push
ja
pop
scas
mov
xor
outsb
arpl
fneni(8087
scas
pop
xor
call
fcomip
mov
inc
addr16
push
lcall
jmp
and
out
xor
mov
dec
cmp
scas
ret
sbb
movsb
imull
mov
shl
inc
aaa
es
lret
inc
aaa
push
and
lret
mov
adc
sub
jg
xchg
inc
aaa
lahf
fldt
popa
jg
inc
sbb
data16
clc
dec
inc
stos
add
clc
sar
popa
dec
ss
and
scas
sahf
test
movsl
cli
cmpsl
pop
jmp
mov
or
mov
sti
scas
push
pop
cmpsl
pop
out
jp
xchg
mov
or
pop
pop
sub
cmpsl
or
mov
fwait
dec
loope
popa
daa
mov
xor
outsl
sbbl
and
ds
popa
push
pop
sbb
aas
inc
nop
add
inc
sbb
inc
xchg
add
jbe
out
inc
xchg
add
inc
fdivs
fidivrs
mov
arpl
fisubl
mov
cmp
out
cmp
fnstsw
sbb
frstor
rcr
mov
pusha
xor
mov
inc
pop
sub
js
mov
scas
shlb
sti
scas
push
pop
cmpsl
jp
jp
xchg
mov
dec
in
pop
adc
pop
pop
cmpsl
dec
out
mov
push
dec
loope
popa
daa
mov
xor
outsl
enter
and
ds
popa
push
pop
sbb
aas
inc
push
add
inc
sbb
inc
push
add
jae
out
inc
push
add
inc
fdivs
fidivrs
es
mov
pusha
rcr
pusha
faddp
bound
mov
cmp
fcmovnu
mov
sbb
frstor
fstp
mov
pusha
ficomps
jnp
sahf
mov
inc
pop
sub
shlb
xchg
mov
push
mov
sti
and
pop
shrl
sbb
sub
xchg
fcomps
shrl
pop
mov
ss
aas
daa
mov
ficomps
sub
cltd
pop
mov
ds
aas
je
sbb
cmpsl
pop
fbstp
add
jmpw
pop
jmp
cmp
lock
das
push
mov
adc
pop
lock
mov
jecxz
jb
ret
jb
jle
dec
pop
daa
pop
xor
sarl
jg
lret
add
das
xor
daa
arpl
es
sti
stos
pop
push
mov
cmp
repz
adc
sbbb
ss
mov
ljmp
push
lcall
pop
push
cmpsl
fistl
bound
cli
lock
adcb
imul
dec
mov
mov
pusha
and
sbbl
sbb
mov
xorl
and
dec
or
nop
test
mov
lock
rcrb
and
cmp
pop
jge
xchg
xchg
xchg
lea
dec
std
inc
dec
cmp
mov
xor
push
cmp
out
pop
mov
in
out
repz
mov
jnp
test
sub
rolb
fwait
fs
subl
inc
je
filds
lea
daa
lods
pop
arpl
xchg
pop
xor
and
cmp
rcll
cs
movsl
lret
js
negb
mov
xchg
xchg
lret
into
data16
push
mov
lock
lcall
inc
js
adc
lods
in
sbb
lret
jae
inc
enter
mov
addr16
lcall
ffree
stos
fwait
es
sahf
inc
dec
test
cli
push
cmpsl
xlat
push
in
sbbl
and
and
cmp
stos
ja
pusha
je
xor
outsl
add
dec
jno
mov
aam
lock
and
lret
jle
xor
inc
jecxz
inc
cs
outsb
mov
arpl
pop
rcrl
xlat
repz
jg
lods
and
xchg
jb
repnz
cmp
in
inc
mov
mov
mov
and
cmp
adc
cwtl
xor
mov
push
repz
xchg
sbb
or
xchg
cmp
dec
mov
push
int
jnp
fmulp
shlb
add
fldt
test
loope
mov
dec
sbbb
ret
mov
inc
inc
pop
mov
jno
dec
push
mov
pushf
into
mov
std
stc
mov
or
sub
mov
mov
bound
cmp
out
ss
mov
pop
and
lods
lret
mov
inc
test
lods
lret
push
mov
ret
xsha256
cmpsb
xchg
pushf
aad
jnp
xor
rorl
out
icebp
add
xchg
adcb
inc
add
pop
and
mov
mov
cmp
aas
jne
clc
inc
popf
ja
daa
inc
into
mov
pop
inc
ret
out
aaa
sub
jg
fs
jne
aas
mov
adc
and
mov
cmp
add
dec
jne
push
dec
sub
bound
mov
dec
mov
cmp
xlat
mov
rclb
pop
stos
push
loopne
loopne
stos
or
mov
inc
mov
adc
lahf
sub
pop
sub
push
push
cmpsl
pop
inc
mull
rcll
fisubs
fwait
mov
add
and
cltd
inc
into
daa
cmp
daa
xor
push
push
cmpsl
xor
cmp
gs
or
push
and
and
aaa
push
sti
inc
push
iret
add
shrb
test
popf
movsb
ja
fwait
xchg
dec
push
mov
jge
sbb
cmp
jmp
js
push
jle
imul
cmp
or
mov
xchg
ss
jp
cmp
xor
into
and
xor
xchg
outsb
addr16
adc
inc
fadds
jl
xchg
and
sub
push
xchg
pop
fbld
or
dec
in
cmp
test
mov
and
repnz
mov
out
clc
lret
pop
push
lcall
mov
inc
mov
cltd
pop
pop
js
lods
mov
mov
pusha
fdivrs
push
rcrb
fmuls
or
xlat
mov
push
imul
jmp
pop
inc
xor
aad
bound
sbb
stos
movsb
das
insl
in
fst
jg
loopne
sbb
rorb
movb
outsl
pop
scas
out
and
pop
pop
popa
mov
imul
jnp
sarb
jo
test
jbe
xchg
pop
xchg
push
push
fdivrl
inc
in
jns
mov
xchg
call
aam
sti
gs
stos
lahf
mov
xor
xchg
mov
jnp
xchg
imul
add
aad
repnz
pushf
dec
rclb
sub
loopne
out
sub
lret
aad
shrl
adc
mov
jmp
imul
xor
mov
divb
sbb
sarl
repnz
fcomps
sbb
popf
or
out
sub
dec
into
arpl
sbbb
daa
sub
mov
pop
dec
cmpb
xchg
adc
xor
pop
jo
push
sub
xor
imul
xchg
sbb
sub
xor
mov
lock
cs
jge
dec
enter
pop
cmpsl
xchg
cltd
leave
fpatan
pop
or
inc
rcrb
lea
push
sub
push
insl
and
xor
mov
xor
mov
rcrl
addr16
or
or
loop
mov
sub
push
pop
lods
dec
into
and
or
push
xchg
dec
sub
mov
jge
outsl
push
lock
in
jmp
mov
pop
in
cmpsb
mov
stos
ret
ja
add
pop
push
xor
adc
leave
jmp
inc
adc
out
dec
aaa
push
jne
fsubrs
and
push
aas
dec
icebp
inc
addr16
xor
push
dec
jl
loop
mov
pop
sub
insb
fwait
inc
movsb
push
aas
jp
stos
mov
fdivs
in
sbb
cltd
test
push
cwtl
outsb
and
sub
pop
push
inc
fstps
dec
and
test
sbb
and
lcall
and
ljmp
cmpsb
adc
xor
jno
lds
out
fldl2t
lcall
std
test
jl
pop
fisubrs
pop
fstps
stos
mov
cmpsl
mov
hlt
flds
into
fisubrl
add
fsubrl
mov
push
lret
push
lods
pop
sti
cwtl
lods
xchg
hlt
sbb
loopne
pop
xor
and
cmp
outsl
mov
fcomps
sub
mov
fcmove
loop
sub
movsb
fnsave
addr16
pop
dec
ds
mov
mov
out
in
leave
aam
pushf
aad
std
aad
inc
add
loop
roll
sub
das
xor
dec
ja
sub
stos
cs
push
sbb
xor
call
mov
dec
push
mov
jb
xor
cmpb
and
or
cmpsb
add
mov
jbe
push
ret
jmp
xchg
adc
pop
dec
out
in
sbb
out
pop
test
pop
inc
jecxz
sbb
lods
test
push
rcrl
mull
movsl
inc
out
add
add
stos
aad
imul
push
xchg
jge
in
xchg
imul
adc
dec
xchg
pushf
js
fisubrl
repz
in
fwait
dec
add
out
mov
imul
int3
lret
pop
stos
gs
sbb
lcall
xchg
fiadds
jle
jg
cmpsl
mov
add
mov
push
xor
out
aas
inc
dec
and
in
ficompl
add
pop
jle
loop
xor
rolb
jecxz
les
test
popf
jle
sub
hlt
push
adcb
inc
dec
arpl
imulb
lea
mov
sub
or
outsl
lret
dec
fsubrs
out
ret
addb
fnstenv
imul
mov
inc
adc
mov
aad
aam
mov
push
xchg
loop
pop
jg
stos
push
cmpsb
mov
addr16
mov
pusha
dec
bound
jmp
scas
xor
lods
mov
in
and
insl
inc
inc
sub
mov
cmp
popf
enter
inc
mov
sub
push
popf
xchg
out
push
loopne
testl
push
dec
sub
orl
fcomps
mov
movsb
fldcw
paddsb
dec
pop
cwtd
fbstp
movsb
push
add
mov
or
lods
mov
cmp
fld
addr16
pusha
sbb
push
sub
dec
cli
xacquire
fs
fdivs
push
sbb
loope
pusha
call
xchg
dec
sbb
stos
aam
inc
xor
add
pop
daa
mov
mov
mov
mov
out
fldenv
sbb
push
and
fcomip
xchg
push
xchg
stc
cmc
fiaddl
and
or
outsl
or
cmp
dec
stc
pusha
sub
icebp
jle
sub
cmp
push
cs
sub
or
mov
loopne
xor
inc
jne
lahf
jecxz
push
sbb
xlat
jp
jns
hlt
or
sub
mov
dec
push
mov
xor
push
and
mov
xor
mov
arpl
adc
cmpsb
jecxz
mov
xlat
push
pop
lahf
lds
bound
and
add
inc
pop
push
std
pop
mov
sub
lods
xchg
call
pushf
and
js
nop
pop
dec
adc
cmp
pop
data16
in
push
mov
into
dec
gs
nop
cmp
sub
push
stos
adc
es
jnp
xor
ss
sbb
xchg
call
into
inc
adc
jecxz
xchg
jle
stc
cmp
sbb
xor
sbb
cltd
mov
mov
push
fcoml
xchg
es
int
test
push
xchg
cmp
mov
mov
scas
push
jmp
ds
and
fdivs
inc
sub
xchg
pop
jns
mov
or
add
push
lods
cs
xchg
or
push
add
and
daa
adc
mov
inc
sub
shrb
pop
xchg
iret
shlb
js
js
out
scas
sub
inc
pop
xlat
test
jno
cmp
pop
pop
dec
scas
jo
arpl
sub
add
fistpll
outsl
sbb
call
addr16
mov
leave
add
cmpsb
loope
adc
adc
movsl
mov
cmpsb
sub
rcll
dec
inc
insl
lcall
cwtl
push
sbb
insb
mov
push
je
pusha
and
mulb
sub
popa
push
sbb
pop
cmpsl
mov
push
rcll
in
and
cmp
stc
xlat
es
lds
movsb
popf
jns
jno
push
jbe
cmp
and
jecxz
js
lret
popa
mov
push
stos
cmp
sbb
mov
fcmovnb
cmc
mov
mov
sub
xchg
mov
mov
mov
mov
insl
sub
dec
sbb
adc
pushf
push
cmp
sahf
mov
or
out
sbb
pop
pop
shrb
jne
add
pop
mov
fs
adc
cmp
and
or
cmp
cmp
jae
adcl
jbe
addl
shr
dec
and
pop
mov
clc
clc
mov
fdivrl
cmpsb
aaa
cmp
xor
adc
repnz
jl
add
jno
mov
pop
jns
push
push
scas
test
mov
enter
pop
jmp
or
and
sarb
xorb
pop
shll
and
addr16
jecxz
pop
push
sub
in
pop
cmp
cmp
ss
push
push
pushf
test
adc
in
mov
jecxz
fiaddl
cmp
lds
das
pushf
jge
subl
test
icebp
hlt
lods
add
decb
xchg
jp
inc
stos
cli
pop
mov
pop
mov
xor
in
lock
movsl
es
sub
xor
inc
fsubrp
push
es
dec
xchg
pop
scas
stos
sbb
movsl
sahf
aaa
outsl
sub
movsb
mov
cmpsb
xor
jge
sbb
push
jg
sub
dec
mov
mov
addr16
jb
testb
out
cmp
push
pop
cmp
lret
dec
add
mov
into
jecxz
xchg
mov
sbb
int3
outsb
mov
mov
fwait
dec
outsl
sub
xor
adc
xchg
cmpb
enter
push
mov
cmpsb
mov
ds
mov
inc
or
or
mov
pop
jno
lretw
mov
fcmove
and
jl
sub
push
mov
rcll
dec
add
enter
sahf
fdivrl
cmp
ljmp
aad
inc
xchg
mov
xchg
dec
pop
dec
loop
dec
pop
jmp
xchg
pop
leave
mov
pop
pop
and
sti
and
ljmp
push
xchg
ds
cmp
xchg
fs
popa
mov
pushf
stos
fs
aam
xor
pop
adcl
push
inc
imul
cli
or
push
mov
sub
or
int
movsl
out
jno
cmpsb
jle
stos
es
pushf
outsb
sbbb
adc
icebp
mov
fstl
outsl
mov
pusha
push
ret
cltd
mov
or
or
cmp
movsl
addr16
les
movsb
mov
inc
mov
subb
push
scas
out
out
subl
dec
cmpsb
jp
mov
xorl
shlb
xor
cmpsb
adc
pop
cli
pop
sbb
dec
xor
fstpt
push
hlt
pop
cmp
aam
loope
pop
rorb
pop
dec
in
inc
dec
or
sub
ja
mov
lahf
pusha
stos
pop
adc
push
mov
outsl
inc
mov
in
or
call
push
and
mov
loopne
sbb
leave
scas
sub
xor
mov
in
popa
push
jmp
fnstsw
out
jns
inc
sub
adc
fmull
leave
adc
push
dec
js
pop
jmp
pop
test
cwtl
dec
cmp
sub
dec
ljmp
xchg
push
sti
jl
je
ja
push
xor
jne
jnp
mov
flds
pop
mov
pop
xchg
imul
mull
icebp
sbb
inc
or
je
mov
inc
jae
adc
xor
mov
out
enter
cmp
sub
out
movsl
in
sbb
mov
push
mov
mov
mov
pushf
dec
sbb
pop
sub
dec
push
push
pop
mov
push
js
ljmp
push
js,pn
dec
in
adc
mov
lods
lret
or
je
fst
pop
mov
mov
data16
mov
ljmp
notw
jmp
add
pop
sti
loop
sarl
shll
mov
fstpt
mov
jp
pop
jl
and
into
sbb
test
into
mov
sbb
push
fldcw
add
bound
enter
xor
loop
jo
outsl
pop
jg
daa
ja
dec
jp
arpl
jmp
jae
pop
and
lret
and
cltd
mov
mov
ljmp
jbe
push
mov
sub
push
pop
inc
add
xor
fstps
pop
jns
and
mov
pop
stos
inc
mov
jo
mov
sbb
xchg
adc
xchg
bound
jecxz
rcrl
push
mov
bound
lret
cmp
mov
cmp
testl
faddl
ds
xor
jbe
jg
pop
xchg
jae
cmp
xchg
pushf
nop
and
ss
addr16
aam
arpl
pop
mov
pop
cmp
cmp
scas
mov
mov
sahf
dec
sarb
and
pop
incb
jle
enter
insb
outsl
adc
mov
inc
pop
js
sarb
and
mov
jle
inc
fwait
stc
mov
mov
sbb
and
sbb
sub
cmc
lahf
cmp
mov
pop
pop
xchg
sub
pushw
push
mov
mov
adc
xlat
ret
xchg
sub
inc
sbb
and
xlat
pop
cmpsl
movsl
out
cmp
and
aas
stos
mov
xor
fistpll
pop
cwtl
sbb
fsubs
pop
icebp
mov
mov
xchg
xchg
xor
data16
nop
adc
insb
mov
push
or
mov
out
scas
and
pop
xchg
sub
fucomip
lods
push
mov
adc
pop
mov
sub
sub
fbld
xchg
cmpsl
insl
and
ret
aad
cmp
mov
lret
dec
mov
add
rcrb
lahf
cmp
ret
loop
sub
in
bsr
pop
cli
add
cwtl
andl
sbb
sub
push
adc
xchg
fdiv
push
fcomps
and
pop
pop
pop
push
cmpsb
arpl
jle
jo
push
mov
movsb
rcrl
sub
push
inc
cmp
mov
mov
cltd
or
mov
sbb
pop
stos
mov
add
cmpsl
push
jl
out
mov
or
stc
inc
mov
xchg
nop
pop
stos
out
lods
cs
mov
dec
js
andl
mov
cmp
inc
sbb
push
in
lahf
cwtl
and
sbb
clc
es
mov
mov
inc
or
repz
pushf
das
stos
dec
insb
sbb
inc
mov
repz
pop
popf
daa
std
aas
cltd
mov
cmp
adc
cmpb
pop
insb
inc
cltd
cmp
cs
jbe
mov
imul
scas
and
adc
int
mov
pop
push
aas
jmp
sbb
pop
sbb
mov
cmc
mov
pop
push
and
mov
push
sti
es
mov
leave
and
cmp
pop
adc
imul
aas
in
sbb
ljmp
test
or
jge
insl
outsl
repz
xchg
sub
shlb
xchg
push
adc
mov
xor
push
fstl
aaa
xchg
cmp
mov
push
sub
and
jo
inc
adc
xlat
push
xor
xchg
fisubl
mov
pop
mov
movl
scas
pop
subb
test
hlt
cvtps2pi
xor
in
push
cmpsb
insb
aaa
ret
jp
mov
push
jge
popa
ja
cmp
cmpsl
nopl
adc
cmc
inc
push
jl
in
pop
sbbb
movsl
inc
loope
push
lcall
loopne
out
outsb
mov
enter
adc
lret
cmp
fs
nop
cmp
sbb
and
lods
daa
sub
subl
dec
incl
inc
fsubs
adc
movsb
call
mov
or
mov
stc
hlt
dec
xor
pusha
dec
enter
dec
jp
pop
shll
repnz
pusha
cwtl
orl
add
and
mov
pusha
imul
in
push
popf
pop
fidivs
inc
mov
push
jp
sbb
ljmp
stos
sub
fwait
int
fnstenv
cs
pop
mov
stos
call
and
xchg
xor
xor
mov
cmp
dec
jno
adc
and
repz
pusha
cmp
cmpsb
aas
sbb
scas
aam
or
mov
mov
add
js
dec
cwtl
jg
lret
stc
fnstenv
or
movsb
lret
aas
repnz
xchg
out
cmp
popa
in
dec
jno
sarl
jbe
sub
aas
arpl
idivl
and
lret
or
cmpsl
in
dec
sbb
dec
mov
int
xchg
test
lret
xchg
and
lea
cmp
mov
mov
dec
scas
add
lahf
mov
js
sub
push
out
pushl
or
pop
cmp
in
jmp
stos
sub
xchg
push
rorb
mov
ja
xchg
pushf
inc
ret
mov
into
hlt
mov
daa
in
xchg
push
inc
xchg
adc
int
adc
aam
stos
or
xlat
mov
mov
daa
and
mov
fistps
push
adc
test
inc
mov
mov
cltd
mov
or
filds
inc
push
and
test
cmpsl
xlat
pop
outsb
push
out
mov
scas
mov
pop
add
bound
sub
sbb
or
mov
in
push
sbb
and
loopne
push
outsb
jg
js,pt
aaa
lret
decb
repz
add
lcall
inc
into
push
dec
sbb
jp
leave
mov
addb
pop
push
lock
and
sbb
fisttps
out
sti
outsb
jne
aas
and
sbb
sti
add
jnp
cwtl
jmp
mov
loopne
test
cmp
daa
pop
sub
jbe
xor
lds
scas
in
arpl
cmpsl
negb
jns
loope
lcall
adc
cmp
repz
shll
mov
adc
sub
fadd
fwait
push
mov
mov
shlb
mov
aas
dec
sbb
adc
insl
dec
popf
or
add
xlat
jb
imul
sub
iret
jo
mov
inc
pop
popa
mov
mov
int3
mov
fistpll
xchg
add
lock
lcall
mov
arpl
int
js
rorl
and
jle
mov
push
push
cmp
or
cmp
andb
adc
pusha
dec
das
xor
xor
std
sub
lods
and
xor
push
push
jns
mov
out
xlat
leave
ret
pop
cmpsl
mov
sbb
int3
and
sbb
aad
cmpsl
and
jbe
and
pop
call
mov
daa
add
lret
cmp
ds
lahf
ds
jecxz
inc
insl
lcall
pop
pop
xchg
pop
or
pop
loopne
pop
repnz
cs
pop
jne
jle
int
push
mov
mov
inc
in
jbe
mov
test
dec
fimull
pop
pop
dec
fstpt
push
or
aas
cmc
mov
mov
fnstcw
adcl
das
mov
xchg
sub
loopne
sbb
jle
fwait
and
pusha
push
fwait
mov
test
cli
cld
jns
add
cltd
jno
scas
lcall
cmc
and
xchg
push
js
lahf
stos
push
dec
and
rolb
sub
idivb
imul
lds
or
mov
pop
ret
js
dec
stc
cli
pop
mov
xchg
imul
rorl
ss
dec
mov
cmpsl
loopne
xchg
jbe
out
mov
jge
rcll
scas
inc
sahf
aaa
xor
fsts
rcrl
xchg
push
lods
sub
cmp
pop
movsb
icebp
addr16
lcall
call
dec
push
push
xor
ficoms
mov
idivl
jne
lods
jo
int
and
mov
pop
dec
cmpsl
pop
popa
ljmp
xchg
pop
jg
mov
rcll
rclb
mov
mov
add
xorl
and
popf
cltd
mov
mov
pop
aas
insb
xor
fwait
in
test
sbb
out
xchg
imul
stc
mov
mov
sbb
pop
out
sub
fwait
fwait
mov
mov
xor
xor
sarb
sbb
icebp
das
sbb
mov
out
jl
pop
push
xchg
dec
sub
mov
jns
and
je
pop
mov
popa
repnz
loopne
sbb
cmp
stc
mov
ret
mov
bound
lret
inc
repnz
mov
pop
xchg
mov
mov
shll
movb
jb
nop
jnp
pop
data16
cli
mov
lds
arpl
sbb
inc
stos
jne
and
sarb
ds
inc
mov
fstpt
dec
jnp
cmpb
pop
pop
stos
mov
push
fcompl
mov
pop
cmp
clc
scas
outsb
nop
mov
jecxz
cld
pop
ret
push
push
sub
mov
pushf
mov
dec
sbb
imul
out
jno
or
js
lret
sahf
pop
je
arpl
out
and
jns
aam
sub
xor
mov
pop
imul
dec
js
cmp
xchg
lock
jle
and
test
and
data16
adc
int
push
xor
pop
scas
xchg
sbb
mov
stos
imul
push
arpl
enter
jle
or
mov
pop
test
mov
dec
in
daa
or
rorb
je
cmp
and
sbb
sarl
call
mov
fnstsw
repz
and
cmp
movsb
mov
jle
call
dec
lcall
and
push
pop
mov
ss
ret
jg
cltd
pop
lahf
cwtl
gs
mov
mov
mov
push
ror
mov
mov
cmpsl
lcall
test
pop
in
lods
add
adc
mov
leave
mov
out
mov
mov
loopne
loop
xchg
jg
pop
pop
jno
cmpsl
rol
or
mov
pop
jmp
ftst
mov
xchg
dec
adc
pop
pop
inc
std
xor
outsl
scas
rorb
xchg
mov
and
loopne
loopne
sbb
jne
and
mov
and
pop
jne
sub
pop
inc
mov
push
mov
insl
mov
and
jg
ljmp
and
dec
outsl
in
lahf
clc
jmp
jo
loop
fcoml
xchg
fwait
out
repz
fs
mov
arpl
adc
scas
sub
mov
stos
jle
mov
push
std
inc
mov
pop
das
cmc
mov
push
xchg
out
sbb
mov
dec
jge
push
mov
push
xchg
andb
cmp
and
ret
lret
in
sub
ret
stos
adc
push
xchg
mov
es
mov
nop
scas
and
repnz
and
test
in
and
xchg
pop
shlb
pushf
js
inc
push
adc
xchg
dec
push
ret
js
mov
cltd
push
pop
daa
push
xor
sbb
test
nop
in
dec
ljmp
mov
xchg
jl
push
jnp
adc
and
lock
add
fbstp
ja
xchg
push
xchg
mov
nop
fldt
movsb
mov
push
dec
mov
cmp
pusha
test
mov
inc
fs
ds
xor
push
cmpsl
inc
in
rorb
adc
pop
xchg
rorl
pop
adc
sub
adc
add
gs
imul
pushf
sti
mov
insl
cmp
mov
mov
jns
das
mov
pop
test
mov
aad
mov
repz
fistpll
mov
rcll
data16
aad
inc
adc
push
in
inc
inc
dec
xlat
imul
mov
inc
decl
sbb
out
adc
pop
loope
sahf
repnz
push
lea
jle
push
mov
pop
jns
fadd
es
sub
xor
cs
jp
movsl
pushf
sbb
sbb
mov
inc
in
aas
lods
push
push
mov
inc
call
out
imulb
stc
mov
pusha
jp
mov
sub
cmp
and
pop
inc
mov
dec
dec
int
push
cmpsl
lret
mov
xchg
cmpsb
mov
setg
xor
xor
xchg
lods
xor
test
fisttpll
cli
test
xchg
pop
test
out
pop
cmp
mov
mov
xchg
scas
jns
push
out
mov
inc
cmp
loop
lods
mov
mov
xchg
adc
xchg
jl
push
xchg
dec
xlat
pop
pop
fcoml
shlb
push
push
call
and
lods
push
xor
xlat
mov
mov
xchg
shl
int
cmp
sbb
push
pusha
addr16
push
sahf
pop
arpl
push
and
out
mov
mov
inc
jnp
cmp
inc
add
inc
jne
mov
mov
xchg
aad
repz
fs
cmp
push
add
jno
mov
xor
push
add
xor
cmp
outsl
mov
pop
xor
mov
cld
and
lods
cmc
mov
in
push
inc
push
insb
lock
fbld
mov
lahf
mov
jbe
mov
mov
push
push
and
inc
xor
dec
roll
insl
cmp
jmp
rcrl
sub
cmpsl
and
lcall
jo
cmp
popf
arpl
sahf
call
pop
sbb
or
mov
cmp
push
insl
sub
out
mov
cmp
sbb
cmp
hlt
adc
iret
adc
xlat
test
mov
adc
or
and
cmp
enter
push
ret
mov
jp
pop
xor
dec
repnz
sti
es
push
aad
cmp
mov
or
ret
push
repz
mov
int
mov
jl
dec
sub
sbb
jl
out
cmpb
mov
xor
adc
mov
mov
jge
jle
orb
push
and
pushl
test
xchg
sub
xchg
iret
test
sti
int
insl
dec
push
clc
mov
pop
fstpl
inc
leave
mov
idivl
cmp
mov
fwait
push
xchg
cmpsb
add
aas
push
lea
add
adc
mov
mov
lcall
addr16
ljmp
cmpsb
dec
lahf
movsl
inc
inc
mov
push
pop
jae
jno
test
mov
pop
sbb
inc
pop
cmp
pop
je
lcall
mov
cmpsb
shll
movsl
loope
jge
aas
sub
and
pop
xchg
pusha
pop
stos
sbb
scas
mov
dec
fucom
cs
pop
aaa
push
inc
fsubrs
mov
mov
xor
pop
dec
ret
addr16
inc
repz
xchg
dec
inc
or
inc
pop
cs
movsl
xchg
or
push
pusha
fldl
cmp
and
imul
mov
fwait
mov
pmaxsw
aas
cltd
push
or
loop
mov
mov
push
inc
jbe
loope
ret
and
mov
cmc
rorl
mov
in
stos
std
outsl
dec
stos
fdiv
insl
or
test
aam
jbe
mov
dec
inc
fisttps
bound
cmp
cld
ljmp
xchg
jb
inc
dec
cs
fiadds
scas
mov
mov
pop
scas
and
ja
scas
movsl
fidivrs
scas
lods
pop
jmp
pop
ret
and
es
cmp
cmpsl
xchg
out
ficompl
inc
cs
daa
cli
lcall
daa
test
addr16
xor
es
cmp
lcall
movsl
shll
mov
inc
loope
and
imul
add
jno
pop
mov
push
pop
add
mov
xor
lahf
insl
cmpsl
mov
add
and
pop
sbbb
adc
or
adc
fiadds
imul
inc
test
notb
pusha
push
jnp
popa
pop
push
cwtl
xchg
or
pop
popa
or
add
test
jle
mov
test
fbld
sub
add
add
mov
xor
sbb
loope
std
int3
aas
es
fwait
xor
std
pop
scas
jp
xchg
pop
sbb
iret
das
mov
inc
mov
ret
sub
jl
jae
das
inc
mov
inc
ret
into
cli
inc
xchg
mov
xor
loop
sahf
stos
xchg
xchg
xchg
add
call
jae
mov
pop
pop
addr16
repnz
mov
es
into
sub
movsl
icebp
mov
inc
ret
filds
cltd
adc
or
jbe
inc
jno
jns
inc
neg
loope
jns
aam
add
mov
and
cmp
cmp
xor
fldl
sub
lds
push
imul
loop
in
popf
rcll
lcall
fdivrp
stos
and
xchg
andb
add
adc
scas
jecxz
xchg
fwait
xor
cmp
dec
loop
dec
mov
data16
adcl
mov
popfw
popa
jo
pop
imul
in
cs
fldenv
das
jmp
xor
ret
dec
pop
outsl
xchg
mov
xchg
pushf
adc
sub
push
filds
pop
sub
mov
add
sub
ror
mov
test
in
or
incl
and
ljmp
mov
mov
lahf
je
mov
mov
popa
lret
fwait
lock
popa
sti
loop
xor
lds
dec
cmp
sub
jecxz
js
sbb
out
mov
lcall
and
fstpt
sub
out
cmpsl
sub
iret
sub
in
dec
jo
cmpsb
pop
std
add
mov
inc
and
dec
pop
xchg
xchg
neg
sub
mov
rclb
adcl
inc
mov
in
or
cmp
orl
adc
sbb
mov
mov
mov
shrl
scas
add
xchg
push
arpl
push
idivl
sahf
mov
adcl
in
jno
mov
or
cwtl
fstpt
xchg
cltd
fs
mov
mov
pop
out
movsb
cmpsb
inc
popf
pop
adc
je
push
loopne
sbb
inc
pusha
or
xchg
push
mov
das
and
push
ja
sub
sub
cwtl
ss
lahf
andb
xchg
and
cmp
jbe
je
cmp
mov
push
aad
mov
or
jb
push
mov
call
scas
cmp
test
xchg
sub
loope
loop
dec
mov
inc
xchg
dec
mov
dec
movl
jle
xor
je
fstpl
mov
sbb
mov
pop
lea
inc
push
dec
bound
cld
mov
sub
ja
loop
cmp
mov
out
pop
xchg
jecxz
push
fstl
pusha
inc
sti
scas
sbb
int3
lock
mov
scas
loope
xor
push
inc
mov
dec
out
jns
xchg
mov
dec
dec
mov
xor
dec
out
add
sbb
scas
and
cmp
movsl
pop
pop
add
xor
and
das
and
pop
popf
clc
jno
nop
xor
xchg
xor
or
xor
lock
dec
sub
adc
cs
cmpsl
add
cmpl
dec
mov
jle
xchg
sbb
add
sbb
mov
imul
mov
pop
lods
xor
mov
mov
clc
push
test
es
or
and
xor
sbb
jne
adc
iret
stos
add
inc
mov
inc
jmp
data16
xlat
icebp
add
fs
jmp
jns
adc
xor
xchg
jl,pt
lock
lahf
call
repnz
loopne
mov
push
negb
in
cmp
mov
sub
pushf
imul
cmp
in
add
cmpsb
adc
or
adc
pop
in
iret
cmpsb
mov
test
lcall
fdivr
inc
outsb
lods
stos
insl
addr16
push
hlt
push
shlb
negl
adc
idiv
cwtl
pop
fcos
inc
jne
add
loop
add
push
mov
outsb
mov
lret
lods
in
in
dec
jecxz
clc
add
aaa
subl
or
pop
iret
jo
dec
inc
mov
xor
jl
mov
add
js
movsb
ret
or
insl
sub
adc
sub
lret
lahf
jecxz
test
shrb
mov
dec
es
inc
mov
lds
cmp
mov
cltd
shrl
push
clc
lds
ret
adc
jo
cmp
fwait
outsl
push
push
xchg
dec
popf
pop
cli
adc
mov
push
pop
test
pop
cmp
sbb
inc
xchg
push
mov
jno
mov
xor
cmp
or
mov
cmp
adc
bound
scas
ret
mov
lahf
xor
in
mov
andb
add
push
and
jmpw
aas
in
mov
mov
xchg
int
jle
lods
jno
mov
cmpsb
xor
ret
fs
shlb
xchg
stc
mov
iret
mov
and
arpl
lahf
push
popa
xor
orb
inc
or
jp
movl
xchg
mov
xor
sub
mov
and
sub
adc
push
and
sub
or
repnz
outsb
mov
fadds
adc
popa
lahf
or
jns
test
lods
inc
adcl
xor
flds
fwait
movsb
and
or
out
adc
imul
mov
outsl
mov
jg
movsb
mov
mov
mov
push
in
outsb
fistpll
and
dec
jnp
into
sub
es
add
mov
loope
dec
aaa
mov
and
adc
out
icebp
shll
lods
mov
out
addr16
imul
cmpsl
sbb
popa
int
scas
lahf
pop
je
dec
rol
cmpsb
push
xchg
dec
pop
mov
and
repz
adc
xor
mov
mov
adc
sub
testb
or
sti
enter
cwtl
xchg
push
mov
pop
jno
fnsave
aas
orb
sub
aaa
cmp
outsb
mov
jno
ss
pusha
test
and
lods
xchg
sbb
pop
xchg
aas
jge
dec
dec
popa
pop
daa
sbb
sahf
nop
loopne
fldenv
outsl
dec
movsl
aad
repnz
pusha
pop
inc
popf
sahf
mov
test
dec
outsb
ds
jle
jge
movsl
push
clc
outsb
mov
adc
repz
loop
push
dec
inc
inc
mov
lea
popa
push
pusha
cmpsb
stc
shll
out
out
xchg
iret
mov
orl
rorb
out
xchg
push
xor
push
xchg
outsb
fisubrs
sub
mov
ljmp
inc
hlt
xchg
test
inc
and
inc
cmpsl
cmp
idiv
xchg
rcrl
fwait
cmpsb
negl
int
inc
cmp
pop
nop
push
push
movl
not
push
xor
push
dec
dec
push
jecxz
pop
adc
aas
in
or
mov
ds
out
movsl
adc
test
sub
sub
sahf
push
xchg
or
call
arpl
jae
jp
cmp
xchg
xchg
xchg
scas
add
les
and
push
sbb
pop
std
adc
mov
aaa
sbb
mov
call
mov
cmc
dec
pop
nop
jno
popa
je
pop
push
cwtl
mov
xchg
outsb
cmp
xchg
jle
call
jnp
mov
lods
adc
xor
fwait
cmpsl
movsb
inc
jnp
add
jbe
pop
fwait
out
and
orl
je
xchg
mov
add
cltd
testb
aas
dec
ret
cli
cmp
popf
cmp
mov
out
jo
push
call
clc
lds
jle
popf
ds
out
fidivrs
dec
arpl
push
ficoml
dec
lods
mov
mov
and
inc
in
push
jnp
gs
xor
bnd
out
in
dec
xor
lret
movsb
adc
jge
daa
lods
pop
xchg
push
mov
das
imul
add
sub
xchg
and
xlat
out
xchg
or
loop
xchg
dec
cs
or
into
cmp
loope
pop
dec
insl
sub
in
pop
jmp
repnz
mov
in
ljmp
mov
inc
xchg
outsb
xchg
cmc
mov
adc
out
daa
push
int
js
pusha
or
rcll
insl
push
out
mov
movsb
xchg
dec
mov
xchg
ss
jmp
adc
enter
aaa
rcrb
mov
adc
xchg
mov
outsl
inc
sub
dec
dec
popf
je
sbb
nop
and
cmp
fwait
push
mov
rclb
xchg
test
ret
in
arpl
xchg
push
lret
fistpl
jmp
les
and
pop
out
and
sub
mov
cltd
ret
int
lods
dec
pop
jae
add
push
nop
mov
shrl
push
adc
adc
cmp
mov
xchg
dec
jno
push
xchg
out
aam
les
xor
mov
or
test
pusha
scas
cmp
icebp
sbb
adc
ja
std
icebp
sbb
sbb
test
addl
mov
jge
xchg
movsb
out
daa
in
dec
mov
push
xchg
icebp
push
inc
push
cmp
loope
push
lds
xchg
cwtd
sti
jge
in
repz
andb
mov
jge
into
pop
jne
sbb
inc
or
sbb
shr
scas
or
mov
lods
test
cltd
add
jb
push
jl
loopne
jecxz
jge
xor
push
int
xchg
scas
fidivrl
sbb
sbb
data16
inc
out
push
rolb
jp
and
mov
dec
adc
xchg
and
test
mov
movsl
sbb
inc
lds
sub
push
jle
sub
aad
and
test
mov
dec
mov
cs
add
into
das
and
dec
dec
dec
cltd
out
bound
mov
bound
pop
jb
pop
aam
inc
in
sbb
ja
scas
jge
and
push
or
push
mov
cmp
xchg
rorb
mov
out
adc
sbb
mov
xchg
inc
ljmp
gs
cs
push
push
sub
das
lret
ljmp
test
fildl
mov
out
shrl
inc
cmc
pextrw
mov
xor
arpl
jne
hlt
test
out
inc
in
cmpsb
outsl
and
xchg
addr16
inc
out
xlat
add
xlat
repnz
ret
pop
jnp
cli
and
std
popa
int3
xchg
cli
dec
pop
bound
pop
mov
sub
jl
adc
pop
cmpsb
lret
jp
rol
cmc
call
jb
lret
mov
ja
dec
stos
je
adc
mov
mov
sbb
sbbb
shl
adc
mov
dec
scas
aam
dec
aam
fsts
xchg
and
jb
mov
inc
dec
movsl
movb
test
add
sbb
cmp
dec
cmp
inc
addl
popl
stos
or
inc
dec
pusha
dec
aas
icebp
pop
adc
xchg
sbb
loop
sbb
shl
nop
sbb
loopne
pop
xchg
mov
pop
les
and
dec
mulb
movb
or
sub
adc
negl
daa
loop
adc
and
fsubp
pop
mov
mov
xor
std
bound
out
lock
and
repz
xchg
dec
inc
cli
jns
cmp
fcomps
jno
aaa
adc
fiadds
aam
sub
or
gs
jle
cmp
pop
push
jns
mov
push
int
flds
cmp
outsl
or
cmpl
pop
dec
push
icebp
fstpt
jb
jg
lret
adc
push
repnz
xchg
js
nop
push
into
dec
xchg
adc
xchg
cmpsl
pop
jle
cwtl
test
clc
rcrl
sti
pop
push
xchg
insb
inc
or
mov
ror
scas
imul
add
xchg
jp
js
andb
jns
out
inc
mov
ljmp
add
sub
es
dec
lea
in
shlb
mov
cs
sub
or
pop
adcl
adcl
cmp
cld
loopne
jae
xor
sub
sub
mov
ficomps
lock
mov
mov
cmp
repnz
ja
ds
fnstsw
adc
dec
aad
xchg
pusha
xchg
push
imul
out
sbb
mov
jne
xor
jp
pop
push
mov
repnz
arpl
mov
inc
add
xorl
cmp
adc
or
mov
push
adc
jp
sbb
mov
jge
in
mov
cs
xchg
push
sub
mov
mov
in
adc
adc
sbb
call
aas
cltd
fucomp
fiaddl
popf
fwait
xchg
xchg
jp
gs
daa
adc
imul
ficomps
jmp
jmp
push
push
push
add
aaa
cmpsl
mov
xchg
sahf
mov
shrl
dec
push
in
lahf
sbb
movsl
test
lfs
dec
scas
adc
ret
cli
test
mov
fbstp
adc
and
gs
mov
lock
sbb
lods
xcrypt-ecb
cmpsl
mov
adc
test
insl
pushf
inc
arpl
iret
inc
and
mov
lock
jge
jae
jecxz
js
mov
mov
les
lods
jne
ss
sti
lock
cwtd
loope
and
push
push
call
testl
pop
jl
fmull
xchg
jne
mov
loope
pushf
outsb
daa
pop
flds
pop
xchg
aaa
push
push
and
loop
inc
aam
and
and
movsl
mov
and
out
clc
or
add
sqrtps
stos
sub
inc
jle
in
mov
cli
dec
aas
imul
cmp
xor
call
into
mov
xchg
sbb
and
adc
xchg
mov
lods
daa
sbb
shll
fdivrs
scas
subb
push
int3
mov
outsb
mov
inc
mov
jbe
mov
pusha
je
mov
gs
jmp
pop
and
mov
xor
jg
mov
pop
cmc
aas
sbb
pop
nop
and
mov
pop
rcrb
in
jae
xchg
jns
xchg
mov
out
cmp
jp
sub
bound
xchg
lds
pop
xchg
ss
lret
test
jmp
and
scas
movsl
add
ret
push
arpl
test
xchg
cmpsb
mov
fwait
add
ret
xor
mov
push
jb
hlt
inc
out
out
mov
jg
dec
xor
daa
insl
mov
mov
mov
pusha
mov
cmc
xlat
mov
mov
pushf
fstpl
jp
jae
adc
or
jge
aaa
js
js
out
or
mov
xorb
push
pop
je
inc
inc
lods
mov
out
and
daa
call
pop
push
lret
loopne
add
test
sbb
add
loop
sub
pop
aas
push
inc
outsb
popf
jle
scas
imul
bswap
pop
jg
cwtd
test
aas
xchg
push
jnp
mov
fldenv
push
and
jg
mov
test
test
das
or
push
push
xor
ljmp
arpl
xor
pushf
pop
ljmp
cs
rcrl
into
mov
sub
insb
iret
cli
jns
xor
mov
sete
repnz
adc
mov
adc
dec
push
mov
add
popf
or
mov
loop
sub
lahf
add
pop
and
pop
jle
aas
lcall
mov
lock
pop
ret
scas
mov
mov
fdivl
std
push
scas
mov
xchg
xchg
ficoml
xchg
dec
iret
inc
stc
push
leave
insl
popa
jmp
test
xor
lret
xchg
or
lret
repnz
mov
sbb
popl
arpl
pop
daa
pop
push
or
cwtl
movsl
adc
cs
fstps
mov
inc
mov
sub
and
ds
loopne
xchg
popa
sub
lret
cltd
cmp
xchg
aam
sbb
mov
negb
loope
mov
fdivrs
loopne
stos
shrb
test
cltd
pushf
pop
inc
cmp
mov
fistpll
inc
dec
cmpsb
inc
and
cltd
push
sub
addl
call
lahf
les
jmp
inc
xor
test
cmp
pop
push
adc
dec
fcomi
in
out
testb
sbb
es
jae
fstpl
and
idivl
shll
sbb
arpl
mov
dec
loope
and
inc
sbb
lcall
in
scas
inc
and
xchg
and
xor
int
mov
add
movsl
and
push
or
jbe
jae
movsb
lcall
push
test
adc
out
mov
dec
sbb
mov
mulb
aaa
mov
mov
xor
imul
lret
add
dec
and
xlat
addl
xchg
ds
fwait
adc
push
mov
sub
push
das
std
or
mov
sbbl
add
imul
xchg
mov
inc
aas
ja
pop
cld
lahf
xchg
adc
lock
mov
and
in
cli
cwtl
cmp
popf
push
popf
out
arpl
cmp
mov
inc
sahf
popf
ljmp
xchg
add
push
mov
scas
mov
in
mov
scas
jmp
xchg
pop
adc
xchg
mov
enter
cmp
mov
jo
mov
shlb
pop
iret
and
andb
fiadds
ja
cli
inc
add
shlb
inc
sub
out
push
out
popa
mov
push
and
cs
pop
leave
bound
inc
scas
mov
cmp
shr
mov
repz
jecxz
arpl
lods
movsl
dec
clc
lock
mov
or
mov
repz
mov
in
xchg
dec
dec
rcll
xor
mov
into
mov
add
push
arpl
xor
lret
xchg
shrl
inc
es
adc
repnz
sarb
ret
sarb
in
int
fwait
lret
in
and
xchg
repz
pop
imul
ss
arpl
inc
xchg
mov
sahf
idivb
adc
bt
cs
push
fnstcw
mov
mov
push
scas
push
fmulp
out
jmp
test
mov
outsl
cmp
add
sub
out
push
ss
xor
push
pop
out
or
cmpsl
pop
add
or
dec
js
mov
shll
ss
add
out
pop
cmpsb
pop
fistl
or
xor
aad
mov
pop
sti
and
imulb
lahf
mov
ljmp
jmp
cmpsb
fidivrs
xchg
out
and
sub
ret
cmpl
int3
scas
dec
xlat
in
popa
repnz
push
and
fsts
pushl
xchg
xchg
pop
mov
pop
popa
shl
scas
mull
aaa
fwait
xchg
xchg
or
jae
outsb
mov
popa
cli
ds
jae
sti
mov
imul
xchg
shrl
mov
mov
jg
sub
bsr
dec
add
pop
inc
add
or
and
int
or
jle
outsb
lods
xchg
xchg
and
inc
mov
jle
mov
stos
adc
sub
aas
mov
call
xchg
jo
icebp
xchg
fbld
cmpsl
pop
and
inc
xchg
inc
outsl
jb
movsw
jbe
lods
mov
push
dec
mov
mov
imul
xchg
sbb
mov
inc
push
or
mov
cs
inc
cmp
enter
adc
mov
pop
and
xchg
mov
cli
stos
rcrl
imul
shr
cld
or
mov
jne
cmpsb
scas
pop
fsubs
inc
into
shrl
sahf
ja
fcmove
mov
sbb
sub
xchg
inc
daa
scas
lods
fiadds
push
add
jb
out
adc
lds
mov
ret
jb
mov
inc
mov
in
cmpb
xor
pop
into
mov
fwait
mov
mov
sub
in
cmp
mov
stc
repz
stos
cmp
inc
jge
sub
leave
jmp
gs
xchg
fwait
loop
dec
and
jbe
test
dec
dec
out
add
leave
out
xor
pop
pop
mov
inc
lahf
out
arpl
push
pop
jno
loop
roll
out
inc
xlat
dec
data16
mov
inc
dec
in
xchg
or
icebp
lahf
cmp
mov
pop
test
pop
jbe
cs
mov
jo
push
adc
test
sahf
inc
shr
mov
inc
sbb
push
imul
daa
adc
mov
push
clc
sbb
push
bound
push
mov
lret
shll
int
inc
jb
cltd
faddl
xchg
inc
pop
sbb
ja
outsb
adc
fcmovnu
mov
sahf
pop
sbbl
pop
cltd
mov
imul
fisttpl
jecxz
sahf
push
and
mov
stos
inc
je
inc
add
cmpsb
outsl
adc
mov
pop
pop
jmp
xorb
jnp
aaa
mov
dec
out
fwait
cmp
bound
xchg
in
dec
fisubl
pop
fcom
jno
jg
dec
jo
mov
jb
pop
in
iret
push
and
dec
sbb
cmp
rol
or
sbb
mov
xor
ljmp
pop
cltd
insb
sbb
sub
jns
pop
xchg
cmpsl
test
jle
pop
mov
ds
sahf
jb
mov
call
mov
mov
sub
push
push
sbb
imul
popf
pop
clc
insb
mov
or
mov
push
rcrl
push
and
mov
mov
inc
das
dec
ss
leave
sahf
adc
mov
mov
dec
fsubp
push
xlat
stos
lods
inc
pop
jnp
jb
out
adc
sahf
aas
jbe
inc
int3
ret
add
call
bound
out
repnz
mov
popa
xchg
push
xor
pop
mov
inc
ja
jo
loopne
mov
jb
add
xor
pop
cmpsl
jae
add
sub
sbb
flds
scas
adc
sub
mov
stos
pusha
mov
pop
incb
sarl
shlb
aam
push
mov
mov
or
xlat
mov
outsb
adc
mov
loop
divb
mov
cmp
xchg
xchg
pop
xor
mov
clc
popf
mov
add
cmp
xor
pop
ret
pop
sub
movsl
cmpsl
into
fisubl
int
call
xchg
shrl
xlat
pop
out
dec
aaa
addr16
cmc
xchg
adc
cmp
insl
adc
loopne
in
subb
xorl
push
sub
dec
jmp
das
mov
cs
outsl
or
xchg
scas
or
xchg
fisubl
mov
sahf
cli
sbb
cmp
scas
push
loop
and
adc
imul
pop
jecxz
xlat
inc
or
and
inc
sub
repz
aaa
fnstsw
ss
and
adc
add
sub
repz
bound
fdivrp
adc
mov
xor
mov
add
mov
mov
dec
xor
ss
out
in
push
popa
pop
idivb
cmpsl
neg
bound
fmuls
pop
jbe
push
or
in
mov
add
jne
out
ds
xchg
prefetcht2
sub
test
jae
add
add
add
pop
inc
pop
cmpsl
leave
fsubl
xchg
sbb
adc
adc
xor
xor
cltd
fidivrl
fidivs
ljmp
pop
mov
adcb
jl
ret
xor
gs
scas
or
push
xor
movsl
cmp
movsw
add
push
dec
lcall
inc
cmpsl
das
in
inc
jecxz
icebp
mulb
aaa
xchg
aaa
andl
jmp
xchg
flds
stos
test
aaa
or
mov
stos
into
pushf
mov
mov
es
inc
sub
ds
fadds
inc
xor
mov
fwait
das
mov
ret
das
mov
or
mov
ds
sub
mov
mov
aad
jmp
lea
jecxz
jne
out
and
lahf
push
out
cmp
push
repnz
push
idivb
push
xchg
scas
jno
xorl
push
daa
adc
jnp
into
and
ret
inc
push
mov
mov
dec
sub
stos
jp
inc
sbb
adc
pop
inc
push
cmpsb
pop
inc
lret
inc
mov
fidivs
cs
push
dec
cs
push
dec
es
arpl
sahf
addl
orl
orl
test
leave
inc
jae
int
mov
roll
push
aad
push
sbb
mov
xor
das
fwait
xor
nop
pop
jae
movsl
pop
ja
pop
pop
mov
and
xchg
movsl
stc
ret
std
push
movsl
bound
mull
aaa
repz
into
cmp
inc
mov
in
scas
mov
jge
cmpsl
scas
leave
out
sub
sbb
xor
sahf
mov
mov
ret
add
mov
inc
es
cmp
enter
xchg
push
shll
cltd
dec
jmp
pop
dec
out
scas
and
mov
out
ds
lahf
jbe
out
sahf
scas
mov
and
push
sub
sbb
add
and
dec
pop
mov
mov
mov
xchg
mov
xchg
dec
bound
movb
xchg
test
test
jmp
or
addr16
pop
enter
dec
ljmp
adc
push
adc
loope
test
cmpsb
mov
cld
pop
xchg
jle
ljmp
dec
pop
push
jle
out
xchg
xchg
into
js
aam
inc
pop
sub
imul
mov
ror
sbb
hlt
jnp
push
insl
add
xchg
ljmp
addr16
push
xchg
fldenv
mov
lahf
jbe
loop
loopne
inc
mov
jbe
mov
enter
loope
lock
push
jno
push
push
adcb
in
notb
pop
sub
xor
mov
out
inc
push
mov
adc
mov
adc
mov
sub
xchg
sbb
adc
sub
mov
arpl
and
popa
xor
lahf
push
dec
fldcw
loopne
cmpsb
sub
pop
xchg
test
xor
push
inc
mov
jae
mov
mov
push
gs
push
outsl
pop
sub
negb
sbb
aam
pusha
add
sahf
movsl
sub
xchg
pushf
inc
inc
out
stos
aaa
push
adc
adcl
adc
mov
divb
test
shlb
aaa
out
xchg
leave
stos
les
xchg
mov
shrl
push
cs
fwait
aad
xchg
or
lods
pushf
jnp
aaa
xchg
cmp
aad
mov
inc
aaa
mov
outsb
mov
sarl
mov
das
outsl
fildll
sub
out
bound
inc
lods
shrl
pushf
sub
pop
in
push
push
stos
lcall
bound
xor
pop
and
jge
mov
insb
or
jmp
mov
push
pop
dec
mov
push
rolb
cmp
aaa
call
inc
sub
lods
scas
cmc
mov
pop
aaa
scas
sahf
and
std
mov
sar
mov
test
mov
pop
inc
push
rol
leave
fsubs
lock
xchg
pop
push
jmp
mov
mov
jo
out
cmp
mov
push
cmp
loop
test
sub
pop
pop
ret
sbb
xchg
lock
cs
mov
in
adc
arpl
pusha
pop
fs
in
scas
test
aad
aas
es
movsb
mov
test
adc
adc
inc
icebp
pop
push
cmpsb
ret
and
inc
mov
outsl
push
enter
jle
lret
gs
xor
mov
cld
push
dec
scas
out
call
fs
inc
mov
sbb
push
mov
test
es
cmp
adc
lods
mov
xor
mov
popa
neg
movsb
rol
cmp
push
lcall
cmp
cmc
aas
xchg
sub
mov
fildll
je
mov
rcr
loop
mov
and
rcrl
xor
jb
outsl
stc
adc
jne
hlt
push
aad
push
or
pop
dec
mov
pop
adcb
mov
adc
faddl
out
test
xchg
ljmp
push
adc
mov
outsb
shlb
adc
test
in
or
clc
ret
pushf
ds
in
cmp
mov
or
inc
adc
dec
xor
dec
dec
jo
scas
pop
mov
pop
sub
cmp
jg
mov
fstpt
mov
sarb
lods
repnz
test
adc
out
fstpl
xchg
dec
xor
fiadds
cli
ss
lds
and
add
mov
push
nop
and
adc
sub
mov
push
out
mov
and
cmpsb
jae
leave
inc
add
rorb
cmp
daa
mov
jecxz
test
xchg
xor
fcmovbe
jmp
dec
add
and
lcall
cwtl
mov
push
int
outsb
arpl
cmp
pop
fstpl
or
lods
lds
mov
mov
in
scas
pop
pop
xchg
xchg
jmp
sbb
push
xchg
lahf
ds
jl
xor
mov
mov
jmp
mov
dec
ds
add
jns
add
inc
addl
dec
sbb
mov
sti
pushf
push
clc
push
imul
jae
pusha
arpl
mov
cltd
mov
loop
data16
adc
ss
aam
pop
xor
cwtl
jnp
jne
out
adc
sar
sub
out
or
mov
stc
orl
mov
xchg
fcomp
imul
aam
push
xor
lea
and
subl
mov
jp
in
jnp
pop
sahf
fadds
and
add
lahf
subb
mov
sbb
loope
sub
popf
mov
fiadds
jne
mov
push
out
xor
mov
cmp
and
in
push
inc
mov
scas
cs
lods
and
cmp
gs
mov
mov
mov
imul
mov
test
shrb
fcmovnu
adc
stos
pop
xchg
mov
bound
add
mov
lret
adc
rolb
and
add
fcomip
push
pop
insl
lods
pushf
stc
mov
push
and
jecxz
cli
xor
fbld
test
into
daa
bound
repz
mov
push
fwait
inc
jnp
hlt
scas
daa
movsl
push
rolb
loop
imul
cmp
inc
jp
icebp
rcrl
sahf
xor
fidivrl
sbb
cmpsl
jl
xchg
cld
pusha
adc
push
xchg
pop
rcr
out
lock
inc
in
testl
push
lret
dec
jmp
dec
fsubs
inc
xlat
jmp
aad
std
fidivs
orb
insb
es
scas
and
mov
and
lods
inc
cld
cmpsb
push
fwait
rcrl
xchg
jmp
sub
adc
es
inc
pop
pop
fisubrl
aaa
xor
inc
push
adc
es
inc
jne
gs
cmp
inc
xchg
cmpsb
int
mov
inc
pop
xchg
fsubrl
fcmove
inc
arpl
pop
aad
pop
inc
push
dec
int
inc
sbb
inc
aaa
outsb
fldcw
cwtl
and
push
inc
xchg
lea
dec
shll
and
std
cmp
and
inc
inc
in
xchg
popa
jae
push
in
data16
rclb
mov
lret
notb
mov
mov
out
sahf
jnp
shlb
popf
xor
xchg
rclb
xchg
inc
orb
inc
flds
sarl
flds
cmp
daa
fs
mov
popf
inc
das
inc
arpl
repz
jp
mov
fbld
cmpsl
gs
sub
xchg
mov
sbb
inc
sbb
out
jge
testl
cld
mov
push
adc
mov
aas
mov
add
dec
pushf
sub
mov
inc
subb
fdivrs
jge
lcall
mov
fsubs
xor
mov
adc
lcall
adc
or
fwait
adc
mov
mov
and
xor
xor
adc
cmp
ret
sub
das
call
mov
aaa
xchg
pop
sub
push
and
insb
fcmovbe
cmp
push
mov
cmpsb
push
insb
cmpsb
sub
cmp
cwtl
idivb
sub
pop
lcall
xor
ss
mov
leave
call
iret
hlt
div
xchg
pushf
push
jle
push
mov
repz
xchg
imul
inc
ret
push
xlat
aas
push
outsb
pop
jnp
pop
ja
imul
cwtl
adc
in
sbb
loope
push
and
dec
fiaddl
mov
jp,pn
clc
pop
mov
and
std
xchg
jg
mov
mov
outsl
xor
leave
ljmp
sbb
push
xlat
dec
push
pop
leave
xchg
data16
pop
into
xchg
ds
dec
or
lret
sbb
jno
inc
mov
call
hlt
push
test
xchg
cmpsl
pop
adc
or
pop
jo
pop
ja
loop
leave
imul
fwait
outsl
movb
adc
pop
inc
int
pop
xchg
or
or
bound
nop
insl
mov
ljmp
outsl
loop
lock
pusha
xor
stos
lods
aad
std
js
mov
push
xchg
cmp
lods
or
add
push
xchg
xchg
fcomps
idiv
insb
inc
mov
fsubl
add
add
pop
scas
es
scas
sub
cmovs
mov
sbb
lret
rcrl
es
jae
mov
int3
into
hlt
xchg
xor
daa
dec
xchg
fwait
shr
push
mov
lcall
rcr
push
jmp
loope
ss
adc
scas
dec
loope
sub
cmpsl
ljmp
ret
daa
loop
dec
or
xor
les
pop
hlt
arpl
lods
mov
fcomps
movl
pop
xchg
lock
add
aas
jmp
sbb
daa
mov
jns
fistps
mov
les
ret
shrl
pop
add
cs
sub
sub
mov
jg
mov
adc
xor
mov
or
pop
adc
insb
dec
stc
mov
pusha
mov
fwait
xchg
sbb
pop
out
jg
xor
or
fistl
aaa
and
xchg
daa
sti
sub
ficomps
dec
and
pop
mov
bound
decb
leave
bound
and
rcrb
and
cmp
mov
inc
int3
inc
sub
or
and
push
rorl
js,pn
adc
fwait
mov
inc
pop
jne
jno
mov
ror
jl
cmpl
sbb
dec
addr16
mov
pop
repz
lcall
pop
int
inc
pop
rorb
fbstp
jmp
mov
out
cmc
fstpt
les
cmpsb
mov
xchg
jg
test
jp
sbb
sbb
stc
mov
repnz
aaa
pop
insb
int
xlat
cwtl
mov
repz
out
xor
loop
lock
pop
adc
jnp
pop
inc
adc
and
nop
sbb
cmp
push
jno
pop
insb
ss
lret
and
mov
dec
cltd
cmp
mov
es
mov
sub
bound
das
mov
ss
mov
xchg
ret
or
sbb
push
outsb
test
insb
ficompl
sbb
push
or
jge
mov
into
aad
addr16
scas
xchg
and
or
fs
jns
mov
addr16
push
ss
inc
push
aas
loope
scas
push
push
outsl
adc
sbb
sbb
les
imul
mov
dec
push
inc
mov
inc
cmp
sbb
cmp
mov
shrl
mov
mov
cmp
or
lret
inc
mov
xchg
ficoml
add
mov
loope
jno
sub
mov
sub
testb
lcall
fs
dec
inc
jge
sti
mov
lret
ds
test
clc
mov
adc
dec
sbb
mov
insb
pop
jle
les
ja
adc
andb
cs
cwtl
rol
fwait
inc
mov
lods
mov
outsb
es
scas
mov
inc
clc
sti
inc
jl
mov
push
int
add
int
push
test
dec
mov
jnp
jg
clc
outsl
lcall
xor
mov
out
ljmp
outsl
out
mov
jns
scas
mov
lods
push
add
fiadds
loop
sbb
adc
divb
dec
mov
push
shl
lahf
daa
aad
out
add
stos
fldl
test
insb
mov
sub
pop
mov
fisubl
pushf
mov
roll
cmpsb
push
jns
mov
cwtl
or
popa
aas
lea
test
adcl
out
movb
sbb
jbe
jns
fiaddl
pop
mov
addl
sbb
and
xor
xor
xor
push
dec
daa
lds
pop
lcall
data16
mov
jae
addr16
pop
repz
jns
jae
xchg
outsb
and
stos
insb
int
jp
mov
pop
das
and
and
push
adcl
decl
repnz
sub
popf
stos
jp
mov
and
lock
sbb
mov
xlat
leave
fsubrp
pop
jb
lods
push
cmpsl
loopne
lods
sbb
out
ja
shlb
jecxz
lods
mov
inc
aas
daa
fcomps
clc
call
dec
jp
add
ret
xchg
mov
sub
call
sbb
ja
andb
ror
test
or
sti
adc
fimuls
push
loope
sahf
les
mov
pop
das
push
out
popa
fstpl
aas
pushf
sarl
inc
jge
testl
int
fdivs
pop
sbb
out
mov
fimull
jg
negb
mov
jno
shll
xchg
xchg
movsb
mov
das
test
pop
cwtl
adc
mov
cmpsl
mov
and
enter
push
shl
inc
push
and
fcomp
test
push
repnz
stc
out
sub
clc
cmp
sarb
ret
sbb
rolb
jb
ficompl
loope
xor
filds
out
iret
mov
fidivrs
xchg
lea
xchg
push
pop
in
adc
and
cmpsb
push
xchg
insl
dec
cmp
aaa
sub
movl
arpl
pop
ds
push
leave
test
stos
mov
or
outsb
adc
add
movsb
mov
mov
outsb
inc
mov
imul
mov
mov
jp
outsl
leave
dec
je
sub
ret
adc
fdivs
cmpsl
pop
in
mov
push
imul
bound
and
out
aad
sub
mov
stc
sbb
push
outsb
mov
push
aam
mov
pusha
pop
dec
xchg
rolb
paddq
in
jmp
adc
ror
pop
pop
into
nop
add
repnz
push
mov
xchg
mov
xor
incl
sbb
sub
push
push
sbb
dec
mov
mov
aam
ret
filds
mov
data16
adc
lret
in
aas
sahf
xchg
dec
sub
aam
std
xchg
jp
mov
inc
in
xor
mov
pop
inc
mov
ja
mov
inc
ljmp
out
cmp
sub
inc
and
sbb
inc
rcll
push
test
sti
pusha
inc
sbb
inc
mov
out
lahf
scas
pop
push
lock
loop,pn
fidivs
and
xor
je
mov
and
int
jno
aas
ret
ja
push
fcmovne
mov
hlt
fmuls
sub
fistpl
jge
aas
mov
fistps
daa
inc
mov
syscall
push
push
xor
loope
jnp
inc
out
pop
lea
inc
leave
es
add
push
pop
pop
lods
mov
xor
mov
daa
scas
or
pop
pop
cmp
xchg
push
xor
mov
inc
cmpb
sbb
lcall
clc
stos
jns
ret
jmp
insl
adc
ljmp
and
jno,pn
jo
cmpsb
or
inc
inc
mov
adc
in
mov
cmp
cwtl
out
daa
mov
ljmp
sahf
and
inc
icebp
faddl
cmp
dec
mov
outsb
bound
cwtl
outsb
outsb
icebp
dec
test
jno
mov
pop
ret
rorl
mov
daa
and
mov
add
push
add
loop
cli
xor
add
xchg
lret
mov
cli
cmp
jbe
cmpsb
dec
jge
add
scas
mov
inc
jl
pop
adc
repz
insl
es
imul
push
and
aam
pop
jns
rol
in
dec
je
sub
inc
mov
js
les
pop
dec
iret
mov
pop
adc
dec
jp
push
inc
fists
iret
int3
xor
xchg
fwait
jecxz
stc
xchg
inc
das
push
rorb
sub
cmpsb
pop
sti
daa
vpacksswb
stc
pop
pushf
mov
sub
cmp
cwtl
mov
sub
out
xor
test
outsl
mov
push
cmpsl
enter
insl
shll
dec
push
loopne
sahf
or
ss
pop
sbb
or
pop
push
mov
movsb
lock
cmc
popa
xor
xor
mov
test
mov
out
jge
pushl
push
jp
nop
xchg
outsb
movswl
bound
pop
sbbl
jmp
sbb
imul
pop
mov
sarl
cwtl
push
mov
push
mov
sti
mov
out
in
leave
sub
xor
arpl
in
xchg
in
adc
icebp
shll
les
rorl
mov
and
and
test
insb
dec
jno
ss
add
xchg
mov
shl
lock
xchg
push
sub
jae
inc
adc
xchg
cmp
xchg
dec
mov
push
jmp
sbb
adc
pop
xchg
jne
mov
aas
cmp
xlat
push
out
xchg
push
sbb
out
out
leave
movsb
pop
mov
stc
loope
push
ret
pushf
rclb
fwait
lock
mov
js
sbb
pop
mov
cmc
adc
ret
adc
les
aam
jo
sbb
jbe
inc
jbe
dec
push
loop
call
pop
sarb
or
sbb
jp
popf
push
xchg
add
sub
movl
and
inc
repnz
ficoms
cmp
je
xor
push
jl
xor
test
dec
insl
out
add
sbb
leave
enter
aas
insb
scas
cmp
or
icebp
mov
jg
into
sub
stos
icebp
cwtl
pop
enter
jne
cwtl
inc
mov
loope
icebp
inc
push
ret
subl
out
add
push
aas
and
pop
xchg
mov
mov
pusha
mov
sub
dec
push
mov
nop
imul
inc
cmc
fcom
lahf
jg
push
cmpsl
nop
and
pop
pop
cmpsl
jo
push
out
mov
cmp
lods
cmpsl
jmp
pop
aad
cmp
mov
cltd
dec
mov
mov
mov
xchg
nop
and
sub
ret
pop
mov
sub
loop
mov
sub
clc
xchg
xchg
pop
aad
inc
aad
jb,pn
xor
fdivs
fdivrs
sub
cwtl
out
pop
aas
pop
jo
das
mov
fcmovb
mov
das
add
iret
int3
leave
aad
adc
pop
test
mov
cmp
fidivrl
and
mov
sbb
dec
lcall
cli
loopne
adc
andl
dec
and
in
or
jno
cmp
insb
mov
pusha
leave
arpl
push
push
jbe
mov
out
cwtl
insl
hlt
adc
jecxz
popf
adc
inc
loope
jp
add
pop
pushl
sahf
clc
push
repnz
iret
call
xlat
rcrl
iret
mov
repnz
push
push
fidivrl
out
ret
shrl
scas
cwtl
or
sbb
stc
aam
sbb
mov
shrb
add
mov
lcall
stos
popa
xor
xor
in
xor
fdivrl
lea
loope
lret
mov
call
scas
jb
psubw
fdivrp
mul
movsl
mov
idivl
mov
push
aas
pop
lahf
fnstsw
movl
ret
jbe
pop
pop
xor
fstps
xor
and
jmp
icebp
jb
inc
xchg
jbe
sbb
test
in
jns
adc
sbb
gs
sbb
xor
xchg
sbb
adc
dec
mov
dec
shll
daa
int
imul
fnstenv
rorb
lea
scas
mov
mov
gs
cmc
dec
scas
pop
sbb
jnp
and
jecxz
mov
adc
out
adc
scas
test
jle
and
mov
pop
pop
lahf
lock
adc
mov
mov
cmpsl
pop
jb
and
adc
fstpl
out
add
mov
pop
aaa
mov
and
shll
jge
push
movsb
jle
mov
int3
aaa
outsb
test
sub
dec
mov
mov
imull
fisttpll
xchg
push
lods
fs
mov
mov
cmp
addb
aad
sbb
loop
lret
outsb
xchg
gs
adc
xor
ljmp
cmpsl
add
and
push
cwtl
movsb
loope
jle
sub
sahf
jne
sub
insb
mov
sbb
xchg
xor
and
push
xor
int
imul
adc
adc
or
popf
xor
inc
cmc
jl
mov
dec
or
fnsave
add
adc
jecxz
sbb
push
stos
je
movsb
pusha
add
jp
fiadds
sub
int
aaa
jmp
rclb
sub
pop
push
lods
ljmp
insl
mov
test
or
scas
jle
cmp
sub
cmpsl
cmp
cmpsl
icebp
insl
in
xchg
cli
mov
lods
add
les
sbb
adc
popa
push
lods
ja
or
mov
cmpsl
daa
sbb
mov
lock
jb
out
sarl
and
out
aas
dec
cmc
sub
imul
xlat
mov
call
roll
and
addr16
add
pusha
aas
xchg
cli
in
pop
js
jecxz
mov
int
outsl
mov
scas
inc
gs
out
cltd
push
cmpsl
dec
mov
jbe
gs
repnz
sub
ret
pop
jbe
push
mov
bound
aam
push
mov
daa
sbb
jge
xor
xchg
std
ret
cmp
fidivs
ds
push
cmp
popf
pop
xor
js
sub
add
mov
test
daa
mov
ss
outsl
lret
jae
dec
lods
test
add
test
mov
cld
push
pop
test
cli
inc
lea
xor
pop
imul
jg
sbb
mov
stos
ja
test
and
pusha
cmc
pop
mov
pop
fisttpl
repz
push
jmp
mov
push
stos
pop
xchg
outsb
ret
popa
rolb
xor
fbld
int3
dec
push
nop
int3
ss
jp
fisttpl
adc
sti
loopne
sbb
in
imul
adc
pop
popa
dec
cmpb
cmpsb
push
pop
add
cld
imul
fbld
add
lock
mov
xchg
and
popa
dec
test
fcompl
inc
push
xchg
ret
mov
scas
and
push
inc
scas
sarl
cld
cmp
fisubrs
cmc
out
fistl
xchg
push
jg
pextrw
cmp
pop
jle
hlt
adc
rcll
loop
push
pusha
mov
sub
stos
mov
jle
jo
icebp
es
loopne
xchg
cmpl
andb
scas
jns
mov
or
sahf
mov
inc
repz
fwait
sbb
idivb
mov
imul
out
inc
xor
loopne
loope
stos
and
stos
mov
lret
ret
push
icebp
andb
sbb
movsb
fsubrs
repnz
divb
sbb
push
mov
mov
cmpsb
lds
pop
cmp
and
testl
shrl
cmp
adc
idivl
mov
lds
jl
sti
sub
and
pushf
fidivl
jnp
mov
stos
mov
inc
jge
sbb
add
sbb
push
jo
aas
sbb
insb
push
repnz
cli
bound
sub
cmp
jnp
leave
cmp
sub
push
xchg
das
and
fists
repnz
scas
and
mov
mov
pop
mov
nop
or
arpl
mov
imul
mov
jmp
loope
xchg
daa
outsb
pop
fiadds
mov
and
push
out
pop
push
fsubr
stos
or
sub
jle
aas
or
inc
mov
xchg
cs
out
ret
scas
dec
call
add
dec
aam
add
dec
lock
aas
push
cmp
in
mov
cmp
inc
xchg
mov
jae
pop
lods
cmpsb
xchg
mov
push
fnstenv
bound
test
inc
jb
shll
fsubrp
mov
xchg
out
out
push
cmp
cltd
mov
xchg
mov
push
aaa
sbb
pop
jmp
dec
cmp
mov
sbb
into
mov
xlat
es
pushf
addl
add
lcall
lret
mov
cmp
sub
ret
popf
fimull
jne
fwait
sub
push
jmp
cmp
sub
test
es
pop
test
xor
pop
mov
push
mov
mov
js
incb
adc
popf
sbb
mov
out
dec
out
pop
inc
push
push
aas
mov
hlt
xchg
mov
sbb
sti
sbb
push
or
mov
and
shrb
push
jnp
push
jmp
or
mov
sbb
xchg
lret
adc
jo
stos
cmpsl
gs
cmp
jno
xchg
les
dec
push
insl
and
pop
dec
adc
jg
sbb
cmpsl
out
mov
mov
sbb
bound
pop
and
push
xchg
pop
mov
and
out
aaa
loope
jg,pn
les
movsb
jb
push
lahf
lahf
mov
sbb
cltd
clc
in
xchg
cmpsb
pop
jg
cmp
aas
scas
call
xor
dec
es
and
or
rcrb
and
add
mov
xchg
inc
mov
lea
mov
and
test
mov
pusha
push
loop
sbb
addr16
cmp
out
cmp
cmp
movsb
loope
roll
sub
aaa
dec
mov
dec
lods
outsb
push
dec
mov
movsl
sti
shll
mov
pusha
fsts
inc
test
mov
test
pop
add
fisttps
addb
fs
xor
jns
iret
outsb
mov
inc
xchg
xchg
fs
pop
mov
and
rcll
dec
dec
mov
andl
add
scas
repz
aaa
cmp
popa
mov
lds
mov
pusha
repnz
aaa
rcll
out
sahf
in
ds
mov
hlt
pop
pop
pop
stc
dec
scas
movsb
sbb
jecxz
mov
int
xchg
jmp
fucomi
andl
int
daa
cltd
push
sahf
inc
push
insl
xor
xor
add
test
sbb
inc
aam
fisubrl
pushf
aas
push
repnz
js
dec
dec
and
pushf
adc
inc
push
add
jnp
popf
pop
aas
rorb
aaa
cmc
gs
data16
add
sbb
inc
jp
loope
mov
and
xor
loope
sbb
mov
aas
hlt
mov
pop
jae
ja
sbb
cmp
mov
mov
pusha
and
clc
xor
in
decb
mov
pop
push
shl
aad
or
imulb
imull
aad
push
inc
adc
cmpsl
mov
mov
test
icebp
lret
pop
inc
pusha
mov
mov
push
or
xorb
jne
inc
and
inc
add
in
sbb
xor
or
inc
stos
je
repz
xor
clc
aad
cld
xor
cmpsb
push
repnz
cmc
sahf
push
bound
fs
lock
ljmp
jns
jmp
push
aaa
pop
cmp
sub
cmp
push
stos
scas
pop
dec
sbb
je
sbb
idivb
stc
adc
jp
xchg
mov
sub
xchg
and
ret
movsl
aas
iret
nop
out
xchg
pop
fisttpl
mov
dec
push
frstor
ret
jo
shrb
or
jecxz
mov
in
mov
adc
int3
mov
or
sbb
dec
mov
pop
add
int
in
ds
fcomp
adc
inc
xchg
mov
out
fwait
and
aam
cmp
pop
aaa
aas
and
es
push
pop
repnz
inc
out
jae
xchg
scas
mov
mov
cwtl
dec
call
fiadds
icebp
inc
sbb
packuswb
rcrb
lret
and
lcall
mov
push
dec
outsl
add
test
sarb
mov
cmp
mov
pop
repz
pop
dec
ret
sti
aaa
dec
mov
cmp
dec
mov
mov
stos
cmpsl
mov
jge
push
cmp
leave
lock
sbb
notb
push
fsubrs
addr16
jg
out
pop
inc
icebp
cmp
es
or
inc
xlat
mov
fs
jge
movq
stc
ljmp
inc
lock
out
test
ja
nop
dec
hlt
xchg
pop
fistpl
adc
and
jecxz
fcomip
aad
imul
mov
and
jmp
repz
sahf
xor
mov
out
pop
mov
movsb
xchg
xchg
dec
rorl
ret
ljmp
lcall
js
cmpsb
push
mov
mov
xlat
test
arpl
dec
scas
push
das
jno
and
dec
scas
jne
mov
fidivl
jecxz
icebp
mov
fsubrl
dec
or
pop
push
repz
dec
hlt
cmpsb
sub
xor
inc
mov
pushf
adc
shll
outsb
mov
fnstcw
push
das
imul
mov
inc
repz
testb
sbb
mov
shrl
mov
inc
fnstcw
popf
fdivr
adc
lret
out
js
sub
sbb
dec
rcrb
testb
addb
pop
push
pop
jecxz
cmpb
and
lret
ja
mov
rcrb
lcall
pop
rcl
negl
fmull
pop
aaa
pop
push
xor
mov
mov
mov
rorb
pop
jns
movsl
xor
jecxz
dec
inc
sub
sub
pop
aaa
mov
in
in
test
arpl
mov
adc
outsb
xchg
cwtl
das
adc
stos
insl
pop
clc
pushf
addb
adc
scas
mov
stos
in
cmp
mov
inc
addr16
in
cmc
jbe
pop
test
push
xor
pop
and
ja
popf
pop
inc
sub
mov
and
rol
push
xchg
out
ljmp
and
mov
adc
int
push
js
sbb
inc
aad
jg
test
xor
ds
in
inc
das
or
shrl
sub
push
adc
fimuls
sbb
xchg
dec
lea
addr16
sbb
xor
fsubrl
sub
jge
mov
fildl
sti
mov
arpl
adcl
push
mov
popf
push
mov
xchg
dec
sbbb
dec
and
and
test
and
into
negl
push
pop
xchg
mov
and
push
mov
jle
nop
lods
daa
mov
outsb
orl
xor
mov
cmpsl
ljmp
mov
cmp
and
sbb
sbb
inc
mov
dec
out
pop
pop
pusha
adc
js
cmpsb
xchg
push
mulb
test
cmpl
movsb
ds
pushf
cmp
pop
cmp
shrl
ds
in
xchg
stos
cmp
cmpsl
cmp
stos
sub
lret
adc
xchg
pop
jg
jmp
ret
pop
daa
cmc
or
fadds
jp
mov
ret
or
fisttpll
xchg
sub
push
mov
stc
mov
or
mov
and
mov
int3
iret
lahf
mov
mov
inc
test
mov
sub
outsl
cli
jmp
add
push
mov
outsl
imul
mov
shlb
orl
call
idiv
sub
and
jbe
pop
lods
add
fs
je
adc
sub
mov
mov
pop
stc
mov
fs
jb
dec
jnp
sbb
pop
icebp
xchg
in
pop
pop
mov
dec
jecxz
jno
pop
xchg
lds
cmpsl
rcrb
pop
lods
and
cld
pop
imul
mov
or
or
test
loop
pop
jge
loopne
fcomip
jns
mov
mov
jbe
dec
mov
in
loop
es
lahf
mov
and
outsb
dec
pop
push
mov
scas
xchg
jge
call
sub
xor
jne,pn
sbb
mov
cmp
sbb
inc
mov
mov
dec
inc
mov
rolb
mov
ljmp
fstl
incb
pop
daa
ret
push
loopne
cmp
lcall
sub
cmp
leave
inc
mov
fcmovnu
nop
nop
ret
scas
stos
sub
xor
sub
push
xor
cmc
push
push
shrb
lcall
inc
cmc
std
pop
fstpl
or
jb
xchg
mov
xchg
dec
push
scas
movsl
xor
or
mov
dec
push
add
dec
sarl
cmpsb
inc
push
mov
movsb
out
cmp
ffree
scas
jle
in
scas
add
sbb
fiaddl
cmpl
dec
setl
loop
mov
jmp
shll
cs
fmull
mov
dec
mov
add
int
mulb
popa
cmp
movsl
imul
nop
int3
mov
cs
xlat
mov
push
fildl
call
jge
push
fiaddl
and
push
inc
adc
sbbb
inc
scas
sbb
inc
jno
sbb
jg
and
dec
test
cmp
ljmp
mov
fidivrl
out
cmp
aad
pop
mov
and
sarl
roll
in
arpl
cmp
inc
cwtl
sbb
clc
lahf
cmp
filds
inc
add
jne
sub
icebp
sbbb
pusha
lods
mov
jno
mov
jbe
jnp
pop
mov
sub
cli
push
mov
in
fs
add
xchg
mov
xor
pushf
icebp
inc
lret
cmp
mov
or
mov
out
mov
or
and
leave
jb
stc
into
xchg
les
daa
sub
xor
mov
jg
mov
mov
sbb
mov
mov
inc
adc
push
pop
ljmp
call
xchg
jno
jo
and
cmpsb
cmpb
mov
mov
movsb
or
or
dec
mov
arpl
mov
sbb
or
cmpsl
cld
lahf
fmuls
mov
xchg
dec
xchg
aas
repz
mov
imul
xor
sbb
int
adcb
mov
xadd
mov
and
mov
sbb
adcb
xor
mov
jb
ret
shrb
mov
imul
loopne,pt
adc
aaa
faddp
sbbb
cltd
push
scas
inc
pop
shrl
inc
sbb
mov
push
mov
std
dec
and
fldcw
into
ret
cltd
mov
mov
insl
xchg
rclb
jp
cmp
es
out
cwtl
jb
popa
xlat
popa
cmpsl
fistl
fldt
dec
sarl
cmp
add
and
insl
cmp
test
fmuls
xchg
lock
xor
pop
push
inc
push
jg
nop
cs
pop
cmp
xlat
xor
repnz
pop
cmpsb
addr16
pop
ds
roll
sub
add
xlat
xchg
jne
xlat
enter
pop
movsb
mov
hlt
pop
jecxz
sti
cmp
sub
xor
cmp
push
iret
push
xchg
rorb
sbb
jecxz
popa
and
mov
jne
inc
push
ret
xchg
mov
pop
ja
ljmp
jne
adc
sbb
out
lock
xchg
test
pop
loop
ret
cmp
pop
mov
pop
outsb
inc
sahf
je
inc
fs
xchg
nop
xor
adc
rol
lahf
stos
and
jg
out
addr16
xor
mov
repnz
jo
xor
sbb
out
jno
dec
inc
jnp
cmp
cmp
cli
fs
sbb
das
jp
jns
out
jge
jmp
in
ja
aas
push
rcll
inc
in
hlt
jg
mov
sbb
or
sub
test
jle
push
shrb
jecxz
mov
adcb
sbb
in
xchg
mov
push
repnz
push
outsl
dec
sahf
lcall
mov
ljmp
out
hlt
jb
loope
ret
fisubl
aad
push
mov
inc
jl
jb
sahf
shll
lahf
repz
fs
mov
inc
bound
jnp
push
lahf
ss
mov
fimuls
lock
inc
pushf
and
inc
imull
mov
mov
in
dec
mov
push
cli
mov
stc
adc
repnz
lock
xor
imul
mov
pop
or
cli
mov
push
gs
out
das
push
push
loope
pop
lock
pop
dec
in
fcompl
inc
out
sbb
call
iret
adc
incb
rcl
pop
mov
pop
jp
adc
cmpsb
dec
lret
fwait
push
ud1
addb
push
xchg
mov
or
pusha
add
inc
push
iret
mov
jle
pop
add
fistl
adc
mov
out
jns
out
jle
nop
test
sub
test
mov
and
mov
inc
daa
sub
and
jecxz
push
cmpsl
sbb
popa
jl
fildll
add
mov
sub
insb
jge
dec
iret
dec
jle
test
cmp
shrl
jge
mov
gs
ds
sub
xor
pextrw
dec
mov
or
mov
lods
je
add
cmovle
cltd
push
mov
mov
mov
push
addl
movsb
xchg
xor
pop
jno
sub
loope
js
pusha
scas
mov
cmp
inc
arpl
aam
mov
jg
lret
or
pop
dec
scas
mov
add
and
jne
movsl
cmp
je
lahf
inc
outsl
out
bound
sub
and
mov
loop
sbb
push
xchg
stos
std
fidivs
fmul
daa
cli
divb
push
pop
stc
jnp
test
negl
cmp
es
js
mov
push
sbb
mov
inc
dec
leave
adc
cs
push
mov
sub
xchg
loop
scas
add
mul
sbb
cmpsb
cmp
push
cmp
imul
jecxz
push
mov
nop
sbb
inc
or
daa
mov
pop
cmp
jmp
pop
and
clc
and
pop
inc
pop
xchg
ret
add
inc
pop
add
test
adc
mov
mov
jae
sbb
mov
adc
mov
div
cwtl
mov
mov
fsubs
add
scas
add
fs
add
std
enter
sub
xor
dec
push
xor
dec
mov
xchg
xchg
pop
jp
push
jge
mov
push
icebp
ja
and
js
sub
ja
pop
ss
addb
push
and
mov
sub
xchg
sub
cmp
fadd
push
inc
popa
subl
jl
mov
fdivr
xor
loop
daa
mov
xchg
adc
mov
insb
pusha
cmp
add
xchg
cs
cmpb
push
dec
xor
pop
lock
xchg
cltd
mov
push
xchg
pusha
bnd
ja
inc
cltd
shll
out
add
insb
dec
pop
sete
xor
int
aaa
ja
mov
mov
dec
pop
and
mov
xor
test
lods
mov
sarb
lret
inc
rorl
scas
inc
lea
xchg
inc
inc
fsub
insl
fcoml
inc
cmpsb
jnp
adc
or
ss
xchg
mov
sub
jne
fcoms
jae
xchg
xchg
jb
fisttpll
and
ja
jb
sarl
stos
sub
loop
icebp
xchg
fsubrl
inc
imul
push
aas
dec
add
ljmp
mov
jae
or
xchg
push
and
lcall
inc
inc
sbb
mov
dec
or
and
loope
adcl
scas
adc
adc
push
cltd
inc
push
sub
dec
addb
pop
add
push
jg
outsb
mov
dec
aad
insl
inc
push
mov
daa
and
push
test
jbe
inc
cmp
pop
and
sahf
imul
call
das
cs
sbb
xchg
in
sbb
adc
sbb
daa
push
xlat
idivl
xor
jb
jns
add
xchg
mov
pop
mov
jo
dec
and
cmp
xchg
sbb
and
pop
adc
loop
fnstsw
jge
pushf
sub
aaa
mov
mov
pop
push
xorb
popf
and
enter
rolb
pop
popl
mov
jp
call
aaa
cld
pop
sub
dec
add
xor
inc
rcll
jnp
out
scas
js
outsl
xor
inc
jge
sahf
push
mov
mov
pop
or
loope
xor
mov
add
mov
pop
dec
mov
fldl
pop
daa
cwtl
jl
shl
rol
xchg
sub
mov
add
mov
shr
jge
cmp
lahf
inc
ja
mov
out
cld
jo
nop
fsubs
in
push
and
jl
and
inc
stos
mov
or
lcall
arpl
jmp
into
lret
add
shll
test
nop
dec
cltd
jne
je
fmuls
mov
cmp
aaa
js
fs
xor
mov
push
push
outsl
inc
inc
mov
cwtl
or
sbb
mov
addb
push
xchg
inc
aad
push
push
dec
repz
pop
xor
fs
negl
sub
loop
xchg
ret
inc
mov
mov
clc
dec
mov
sbb
and
pusha
jecxz
or
push
scas
es
mov
push
icebp
fisttpl
daa
arpl
cli
adc
cmp
adc
test
icebp
add
out
test
je
sub
repz
ret
sbb
fists
pop
inc
push
and
pop
daa
mov
stos
es
mov
insb
cmp
push
cwtl
ror
mov
cmp
inc
or
sahf
adc
in
push
fnstenv
sub
popf
sub
sahf
repnz
fwait
int
dec
stc
insb
jno
add
and
arpl
mov
mov
pop
pop
mov
cwtl
dec
gs
iret
fbld
push
dec
orb
sbb
imul
clc
outsb
arpl
pop
bnd
popa
mov
push
cli
ja
jg
ds
test
mov
sub
movsb
cmp
loop
inc
push
loop
dec
jmp
mov
loope
jne
jg
sub
dec
stc
test
insb
jl
jns
movsb
or
stos
pop
sub
cs
xor
stos
insb
js
mov
test
push
push
push
iret
fs
lret
jge
nop
fwait
xor
sti
sbb
in
xor
cmpsb
xchg
je
add
pop
jns
add
pop
cmp
mov
sbb
daa
xor
arpl
xchg
movb
loope
addr16
jne
sub
adc
loope
or
cmp
pop
xor
jne
aad
mov
fimull
in
out
push
mov
jle
mov
mov
cmp
cld
ljmp
xchg
xor
cmp
mov
xchg
dec
arpl
sbb
push
sub
jecxz
mov
xchg
mov
fimuls
jne
mov
add
fbstp
pop
insb
stos
stos
push
lret
xchg
cltd
mov
sub
pushf
cwtl
jnp
xor
pushf
push
add
mov
adc
mov
int
bound
and
loopne
xorb
mov
int3
inc
aam
arpl
add
dec
cwtl
mov
mov
and
pop
imul
iret
push
xor
lods
and
into
xor
xchg
dec
and
int
sub
inc
jle
mov
jmp
cmp
negl
pusha
push
pop
inc
daa
lea
inc
push
in
lods
mov
jecxz
mov
es
stos
dec
mov
jg
sub
mov
inc
inc
or
cmp
xchg
mov
hlt
fwait
out
cmp
xchg
rolb
stos
stos
cmpsb
push
in
jns
outsb
pop
bound
xchg
popa
cltd
es
dec
push
sbb
mov
mov
jne
jle
ficoms
mov
fidivrs
sahf
push
pop
icebp
iret
or
icebp
jae
xchg
fistpl
outsl
pop
ret
pop
inc
ret
call
push
dec
xchg
sarb
outsl
jb
int
pop
lds
js
mov
jbe
jmp
mov
push
inc
adc
outsb
popa
pop
mov
addl
mov
stos
mov
cmpsl
sub
push
or
inc
test
mov
xchg
fwait
lahf
and
jle
arpl
imul
mov
cwtl
mov
mov
in
lret
out
sub
gs
xchg
mov
add
and
cwtl
pop
mov
iret
xor
mov
scas
daa
push
xchg
data16
hlt
addl
or
pop
scas
or
fwait
out
xchg
mov
cmp
scas
je
cmp
push
out
in
mov
mov
cmp
pusha
dec
leave
sbb
inc
stc
fisubrs
and
sbb
jmp
mov
sarb
ficoms
sub
cmc
push
addr16
adc
dec
fdivrl
pop
push
popa
cld
repnz
test
pop
cs
testb
and
push
sbb
xchg
xor
rdtsc
data16
cld
stc
imul
pop
dec
gs
sub
adc
pusha
or
mov
mov
sub
sub
data16
loope
xor
sarb
mov
adc
repz
std
fistpll
rcrl
rclb
scas
xchg
lahf
jle
push
xor
xchg
out
lods
test
xchg
adc
mov
cmpb
xchg
daa
call
mov
rcrb
or
push
sub
mov
and
ret
lcall
and
pop
inc
jecxz
call
xor
pop
push
mov
bound
cli
out
xchg
sarb
or
push
adc
sti
idivb
sbb
popa
sbb
sub
sbb
popf
ret
mov
mov
push
popf
jp
pop
scas
sbb
jb
sti
pop
mov
push
je
mov
imul
adc
repz
or
sahf
or
hlt
pop
jns,pn
or
in
mov
test
sbb
pusha
in
dec
loop
incb
shll
testl
mov
pop
pop
orb
scas
dec
sbb
dec
movsb
and
dec
rolb
stc
push
clc
pop
ss
test
and
mov
inc
and
call
jg
mov
xor
or
insb
xchg
xchg
cmpsb
repnz
stc
out
outsb
out
jno
cmpsb
loope
add
repz
jge
push
pop
push
cmpsb
inc
add
lcall
xchg
add
lods
fisttpl
negb
sbb
movsl
jo
pop
sub
pop
sub
into
loop
dec
jne
add
cmc
ljmp
das
cmpsl
adc
fwait
mull
dec
inc
or
test
aaa
jb
pop
pop
mov
pop
repz
add
outsb
fstpl
lahf
push
in
mov
in
xchg
gs
xchg
stos
lahf
pop
cmpsb
movsl
push
xchg
sub
inc
gs
mov
dec
sbb
loopw
outsl
dec
mov
lahf
out
push
pop
push
aaa
lock
dec
inc
sbb
addr16
xor
dec
lods
mov
mov
scas
sbb
inc
daa
ret
jae
sbb
push
daa
fisubrl
dec
iret
aaa
or
enter
xchg
mov
cli
or
mov
jno
bound
push
fsubrs
iret
jmp
lret
dec
sub
pop
test
int3
aad
cmp
pop
lea
sahf
test
adc
aad
mov
xchg
dec
lds
mov
jae
outsb
pop
push
lock
out
mov
call
mov
add
dec
movsl
in
nop
pop
jge
xor
dec
xchg
pop
pop
sub
fimuls
pop
popa
scas
addr16
inc
bound
repz
add
ds
mov
push
sub
push
cmp
ds
push
mov
inc
sub
lea
mov
mov
mov
enter
mov
nop
dec
arpl
loop
addr16
into
and
mov
xor
out
andl
jecxz
enter
xchg
inc
push
cmc
mov
add
inc
ja
ja
lea
and
xchg
jb
fbstp
or
dec
sub
cmpsl
push
and
in
push
mov
out
jp
ret
jb
mov
lods
mov
ffree
lods
add
push
pop
add
push
inc
mov
stos
loopne
mov
test
bound
stos
lea
lods
push
jb
in
dec
mov
sbbb
dec
jle
and
imul
call
orl
push
das
mov
aaa
mov
pop
fdivrl
repz
movsl
jge
nopl
pop
xor
ss
sbb
mov
pusha
rcr
push
pop
popa
jl
pusha
stc
sub
xor
ror
mov
mov
xchg
mov
jne
das
jae
jmp
xor
fists
xor
push
inc
sbb
mov
add
add
mov
out
mov
add
lret
jbe
sbb
test
jbe
loopne
ja
loopne
sub
sti
cli
mov
js
shl
imul
lret
aam
mov
in
add
outsl
ds
mov
mov
sbb
ror
sub
pop
mov
and
testb
fdiv
aas
hlt
leave
xor
pop
aad
adc
int
inc
insl
insl
jl
jle
jb
adc
adc
popa
test
sbb
cwtl
mov
xchg
jecxz
dec
push
cmp
dec
sub
mov
cs
ljmp
outsb
mov
cmpsl
mov
pop
mov
cltd
inc
adc
pop
jns
mov
pop
mov
xor
cwtl
mov
stc
mov
test
leave
outsb
ret
sub
push
dec
pop
loop
in
mov
loope
mov
arpl
xor
push
xchg
nop
xor
mov
fs
fidivl
mov
gs
imul
movsl
call
aaa
mov
add
divb
ss
ret
cmp
mov
imulb
inc
sub
sub
mov
sbb
les
std
mov
popa
imul
test
pop
test
pop
xlat
bound
and
xchg
out
testl
aad
xchg
loop
jne
pop
std
xor
lea
and
pop
fstpt
js
js
shr
mov
mov
sub
popf
stos
mov
mov
add
test
popf
lods
test
cwtl
pop
jmp
sbb
jp
repz
divb
pop
push
jl
mov
movsl
adc
imul
dec
push
cwtl
mov
test
icebp
mov
into
and
mov
dec
adc
xchg
loopne
aaa
stos
sub
adc
and
popa
add
xlat
notl
test
xchg
in
push
clc
lret
pop
inc
mov
movsb
popa
add
add
pushf
push
int3
cmp
iret
jp
push
ljmp
push
loope
push
xchg
daa
push
repnz
lret
dec
cltd
repz
lcall
divb
jae
mov
pushf
pop
inc
pop
and
mov
pop
push
fwait
pop
loope
inc
sbbl
and
sub
out
es
shlb
repnz
dec
gs
pusha
xchg
insb
xchg
pushf
outsb
xchg
addr16
mov
jne
mov
xchg
lods
jns
subl
sub
sbb
aas
xor
test
repnz
cmp
dec
inc
cmpsb
ss
jp
push
into
lock
in
test
adc
mov
loope
decl
jb
mov
stos
mov
jbe
ja
icebp
cmp
hlt
addr16
insb
pop
mov
pushf
mov
push
push
in
lret
push
daa
add
mov
jnp
nop
mov
fldl
in
enter
jle
and
jno
hlt
test
sub
clc
out
mov
lea
add
enter
je
hlt
insl
orps
loope
dec
sub
bound
pop
xchg
int
out
ret
adc
outsl
enter
mov
xchg
aaa
loopne
daa
jg
push
pop
xchg
insl
add
imul
test
push
xor
sub
xor
imulb
push
stc
cmp
inc
mov
xchg
sbb
mov
imul
sub
ss
loop
out
leave
roll
mov
scas
mov
lods
ds
shlb
sub
inc
retw
scas
dec
pop
movq
xor
sbb
orl
inc
cmc
outsl
inc
push
in
adc
push
add
cmp
les
fwait
scas
and
jmp
mov
lods
mov
xchg
sub
insb
xchg
fldl
daa
jp
or
sarl
push
aas
popa
jno
push
xchg
cmp
jbe
fidivs
sarl
mov
pusha
ror
pop
sbb
pop
ds
pushf
popf
or
add
sarb
nop
out
or
xchg
data16
inc
mov
and
xlat
inc
movsl
sbb
pop
cmpsb
and
add
push
sub
jecxz
ss
sbb
mov
jo
pop
dec
mov
stos
test
sbb
lahf
pop
add
lahf
cmp
bound
or
fmuls
inc
pop
sbb
lcall
das
in
dec
cmpsl
push
insb
popa
sbb
in
push
push
cmp
xlat
dec
das
or
ljmp
push
push
fdivrl
lock
les
das
rcr
jnp
aad
xchg
sbb
shlb
jnp
push
cli
gs
shr
mov
insb
and
sub
sbb
stos
sub
scas
mov
inc
aas
or
push
fldenv
outsl
pop
mov
and
mov
fcmovnb
add
mov
das
movl
xor
pop
jle
icebp
por
and
arpl
ret
xchg
dec
cmp
jmp
test
bndldx
clc
bound
and
mov
pop
jnp
rclb
jne
push
cmpsb
popf
xchg
adc
xor
xchg
cmpsb
mov
add
mov
ljmp
push
cmp
pop
dec
dec
or
imul
arpl
ret
sbb
cmp
imul
rcll
outsl
or
loopne
bound
cmpsl
test
inc
fisubs
dec
xor
add
mov
xchg
sbb
jg
inc
cmp
in
es
adc
shl
sbb
xchg
out
fnstenv
lods
mov
and
int3
loopne
jp
jne
mov
fcomps
push
mov
jle
and
fists
jns
sub
out
sahf
inc
and
mov
push
xor
hlt
gs
cmpsl
fdivr
add
cwtl
jmp
fidivrl
xchg
test
xchg
mov
or
pop
lret
pusha
push
and
xor
aam
sbb
xor
movsb
jge
repnz
cs
es
mov
or
cmp
int
cmp
es
jnp
inc
mov
sbb
adc
sub
fcoml
xchg
cmp
repz
dec
push
jns
dec
bound
gs
sarb
outsb
addr16
mov
sahf
repnz
shl
lret
jle
mov
stos
xchg
push
daa
mov
pop
dec
lock
icebp
mov
lock
inc
cmc
aaa
scas
xor
add
inc
cmpsb
popl
fnsetpm(287
mov
loop
mov
and
stos
mov
cltd
ret
inc
ljmp
adc
sahf
shl
jne
xchg
mov
add
leave
mov
shr
fwait
mov
and
sub
dec
mov
inc
jns
and
aam
mov
cwtl
push
dec
or
jae
pop
fwait
add
cmp
repz
jle
push
mov
out
call
cli
ljmp
mov
mov
add
push
sbb
dec
push
mov
into
stos
lcall
jl
and
stc
xchg
test
and
flds
jnp
sub
add
bound
and
fs
cwtl
lods
adc
jp
xor
sub
xor
sar
mov
popa
inc
mov
xchg
in
add
out
add
mov
inc
jns
xchg
popa
inc
iret
cmp
sub
lods
mov
daa
mov
sub
cmp
jbe
add
push
insl
add
jno
and
dec
sub
jmp
mov
mov
mov
jno
cli
xlat
scas
lods
dec
mov
call
scas
sbb
jns
xchg
neg
mov
or
jg
fcoms
rol
jno
sbb
andl
daa
mov
ss
inc
inc
xor
push
or
add
cmp
jb
mov
cmp
adc
push
xchg
jmp
sbb
jbe
out
dec
leave
jae
add
lahf
or
ret
xchg
and
add
sbb
add
inc
pop
pop
in
mov
sbb
mov
mov
dec
cmova
scas
repnz
pop
cs
lcall
mov
jge
and
cmp
cmp
jl
lcall
test
sbb
scas
pop
js
shr
out
loopne
shrl
mov
inc
xlat
jge
test
ficompl
das
aas
pop
xchg
cmpsb
fwait
push
lret
outsl
xor
mov
aaa
inc
or
aaa
dec
shrb
mov
jo
push
cmc
dec
in
xchg
adc
loop
sub
cld
cmc
das
cwtl
adc
icebp
shlb
add
fwait
orl
fcomi
rcll
movsl
test
mov
mov
mov
inc
add
test
fistps
adc
lods
lcall
mov
add
pop
pop
mov
lods
push
insl
aas
inc
jmp
dec
fsub
stos
push
mov
imul
test
repz
aam
stos
cmp
stos
mov
filds
xchg
pushf
inc
scas
or
mov
sub
arpl
adc
push
pop
mov
lahf
xor
push
insb
adc
clc
je
hlt
pop
inc
shrl
mov
fildll
into
fdivs
dec
pop
sbbb
outsl
adc
xor
dec
shll
xchg
call
push
push
lret
ljmp
push
sbb
cmp
xor
xor
adc
fsubp
and
nop
xchg
lds
add
imul
adc
push
pop
gs
in
out
add
sbb
jae
add
and
daa
sbb
add
nop
out
clc
mov
xchg
into
push
xor
lahf
jecxz
pop
sbb
or
mov
stos
sub
jl
cli
push
mov
mov
bound
daa
nop
xor
xor
mov
cmp
fucompp
lock
mov
out
mov
das
jge
xor
or
pop
push
aad
iret
insb
add
in
movsb
lcall
sbb
stos
push
pop
lods
aaa
shr
sbb
push
push
mov
and
mov
scas
aas
lods
cmp
push
les
jae
inc
dec
ret
dec
je
and
jae
shrb
cmp
cmpsb
push
js
fs
negb
lea
pop
push
scas
cs
sub
lds
mov
cmp
jnp
and
pop
mov
hlt
jns
dec
jp
dec
cmpsb
insl
mov
jg
ds
aaa
inc
rcrb
rcrb
es
out
movl
sbbb
xor
mov
sahf
jo
push
inc
jno
aam
es
mov
sub
cmp
sub
jb
push
sub
mov
hlt
pop
les
mov
xor
mov
inc
sub
add
cmpsb
mov
xlat
cmpsl
rcrb
jae
int3
arpl
cmp
ss
lcall
mov
cmp
cmpsb
movsb
dec
rcrb
mov
push
cmpsl
les
mov
push
fdivrl
mov
lea
jae
jge
cs
negl
push
ret
dec
mov
add
movsb
dec
cmpsb
mov
mov
lods
xchg
jmp
in
and
es
shlb
adc
imul
rcrl
movsl
push
push
xchg
xchg
into
mov
mov
daa
pop
jp
mov
dec
sub
and
fmull
cwtl
out
xchg
iret
mov
mov
mov
scas
cltd
imul
outsl
mov
mov
dec
pop
fnstenv
out
dec
cmp
inc
bound
add
cmp
or
fldln2
and
push
pop
sub
lock
push
xchg
sbb
cmp
fnstenv
pop
imul
dec
mov
or
jmp
lcall
iret
fldt
popf
mov
add
aas
mov
cs
call
and
mov
inc
sub
sbb
mov
lock
mov
movsb
jbe
pop
outsb
push
xlat
movb
adc
int3
xor
mov
dec
cmp
arpl
or
add
push
jo
pop
jno
dec
fstpt
and
push
aas
negl
dec
inc
repnz
add
lahf
cmp
mov
pop
mov
dec
ficompl
and
mov
fldl
xor
fsubs
scas
xchg
xor
sub
ret
addr16
add
sub
xorb
jge
xchg
adc
ficoml
fcmovbe
xorl
fcompl
jle
lods
dec
popf
cmp
int3
or
inc
stos
push
and
sub
sub
loopne
dec
repnz
clc
dec
dec
cmp
mov
mull
adc
sub
pop
pop
dec
jnp
and
out
dec
pop
dec
add
dec
and
jb
jl
mov
in
data16
mov
fldl
addr16
negb
xor
movsb
xchg
push
pop
bound
xorb
sub
arpl
dec
call
mov
cmp
fcompl
push
xchg
dec
inc
arpl
rclb
sbb
jbe
push
sub
cmp
mov
dec
sbb
jge
loopne
mov
add
add
fidivrs
insl
nop
neg
or
mov
jnp
xorb
mov
sbb
xchg
ret
mov
cmpsb
xor
add
pop
dec
cmpsl
pusha
mov
jle
lret
cmp
push
and
sub
xor
pop
add
push
mov
pop
mov
push
mov
lds
xor
ss
xor
xor
ss
lds
push
xor
jg
add
fildl
fnstsw
mov
int3
mov
movsb
nop
lds
xor
dec
mov
xchg
push
mov
fs
xchg
nop
movsb
mov
nop
loopne
mov
pop
jp
insl
shlb
in
mov
pop
mov
adc
into
aas
xchg
dec
arpl
mov
scas
stos
jp
xchg
clc
cwtl
jmp
test
stos
inc
popa
pop
fistl
bnd
pop
lea
jbe
rcll
in
mov
mov
fs
fwait
xchg
jmp
cld
inc
cmpsl
inc
das
and
mov
out
cli
jnp
jle
cwtl
and
push
lods
imul
xchg
je
mov
push
fildll
out
div
mov
aam
into
inc
adc
jbe
push
mov
cmpsb
scas
imul
cmpsl
dec
mov
cltd
mov
mov
test
push
push
sbb
mov
into
push
cmp
subl
pop
fbstp
insl
sbb
movsb
xchg
push
cmpsb
fcoml
inc
cli
ret
push
jae
mov
xchg
pushf
loope
push
rol
dec
movsl
fisttps
cwtd
mov
dec
xor
mov
je
push
cmpsl
mov
cmpsl
xchg
and
xor
inc
pop
xor
adc
pop
arpl
daa
inc
or
xor
int3
jmp
fsubs
pusha
xchg
nop
movsl
addr16
bound
mov
jno
cs
out
fcomps
push
fistl
pop
fisubs
xchg
or
cs
mov
movsl
insl
and
dec
scas
add
clc
stos
or
inc
icebp
lods
aad
cltd
or
clc
in
nop
sbb
fidivrl
and
cli
lea
dec
jl
insl
outsl
cld
lods
lahf
jmp
sbb
sti
mov
mov
cmp
cli
cld
mov
jne
xchg
inc
es
gs
fdivs
xor
mov
ss
xchg
cltd
jl
test
incb
adc
pop
adc
dec
dec
andl
aad
aas
jecxz
mov
lea
orl
imul
mov
out
icebp
mov
pop
sub
rcrb
imul
inc
sub
repnz
jno
shlb
mov
xchg
fcmovb
cmp
pop
daa
push
scas
pop
out
insl
inc
adc
mov
hlt
push
and
pop
fs
xchg
mov
outsb
pop
es
loope
mov
dec
dec
movsb
daa
movsl
mov
ds
iret
fs
cmp
mov
sub
mov
dec
movsb
nop
inc
xor
and
movsb
scas
dec
sbb
scas
pop
ss
cli
push
aad
cmpsl
push
xor
movsl
pop
jno
xor
mov
inc
pop
add
add
pop
in
sbb
loopne
stos
lods
call
pop
imul
cltd
data16
jae
push
ljmp
scas
ret
cmp
push
push
cmp
push
jle
cmp
je
jae
mov
test
out
stos
jno
lret
pop
push
and
jge
sarb
dec
cmp
pop
negl
xchg
push
popa
ds
lret
and
int3
add
ja
push
into
lods
and
pop
push
fldt
int
jp
inc
jmp
cmpsl
call
mov
adc
xlat
fildll
xor
imul
imul
mov
lret
shrl
xor
mov
cli
jnp
jle
iret
xor
push
sub
dec
sub
int3
xor
shl
rcrb
roll
rclb
in
mov
mov
push
cmp
jo
inc
dec
outsb
scas
push
mov
cld
fcmovbe
and
cmp
vpmacsdqh
mov
jne
test
push
jl
scas
add
sub
mov
scas
inc
xchg
jbe
mov
adc
inc
negb
in
push
loop
inc
in
rclb
fisubs
dec
clc
rorb
xor
cmp
cli
cmp
lea
xor
movsl
ds
mov
out
mov
xchg
pusha
inc
inc
idivl
or
xchg
dec
adc
cld
lcall
xor
add
out
out
push
mov
shll
mov
mov
mov
cmp
test
xchg
out
or
shrb
rcrl
add
dec
out
in
std
subl
jle
mov
or
lret
jg
mov
push
pop
sub
xor
enter
push
addb
insl
sub
adc
outsb
pop
divl
mov
nop
dec
mov
and
push
mov
push
and
loopne
pop
pop
cmp
jnp
jecxz
lret
arpl
push
inc
or
test
xchg
add
andl
dec
int3
sub
dec
les
adc
jae
add
aad
jns
andl
icebp
and
fnstenv
adc
mov
fs
jl
adc
pop
scas
lcall
xlat
dec
cmp
repnz
pop
int
sbb
orl
jnp
xor
or
adc
mov
mov
pop
mov
lods
pop
sti
sahf
mov
and
inc
pop
loop
mov
sub
adc
adc
lds
cmp
orl
sbb
lahf
jbe
mov
push
outsb
jmp
inc
enter
bound
test
jns
cmp
pop
push
jecxz
and
and
dec
pop
in
xor
mov
push
scas
mov
andl
lods
push
movsb
push
adc
lea
aaa
movsb
xor
jecxz
inc
ss
jae
loope
and
sbb
mov
mov
xor
push
sub
xor
jge
fnstsw
sub
xchg
popa
pop
and
mov
adc
or
xchg
and
popf
mov
dec
ds
addr16
shl
dec
insl
test
bound
jle
fsubrs
les
mov
sbb
loop
cld
sbb
cmp
ret
pop
push
vmovq
and
fidivrs
sub
out
rcrb
adc
fisubs
movsb
xchg
movsb
cmp
out
test
add
rolb
pop
outsl
gs
mov
mov
sub
outsb
mov
pop
mov
mov
or
fwait
cltd
push
call
mov
mov
jl,pt
mov
outsl
mov
cmp
out
daa
sub
inc
cmpsl
hlt
mov
cmp
jnp
jnp
sub
rcll
pop
push
sbb
call
push
lret
cmp
add
arpl
mov
fldcw
sbb
repz
dec
mov
push
jle
popa
xor
movsl
cmpsb
pop
and
and
aaa
adc
push
mov
faddl
shrb
xchg
cmp
xchg
pop
loope
sbb
mov
aad
aas
mov
and
sub
stos
mov
and
js
or
addr16
pop
fcoml
or
adcl
or
imul
cld
sbbl
inc
add
and
ret
inc
push
adc
pop
xchg
xor
cltd
add
mov
inc
aas
rcr
lahf
xor
adc
mov
xchg
loop
adc
xchg
fisubs
inc
gs
sarl
push
pushf
mov
fimull
arpl
mov
inc
loope
push
sarb
sub
pop
xchg
insb
cmp
xchg
and
or
jmp
xchg
sarl
inc
add
add
xor
push
out
adc
inc
inc
pop
push
cmp
adc
push
mov
inc
sbbb
dec
xor
push
stos
cmp
lds
or
adc
cmpsb
push
and
in
outsb
fwait
sub
pushf
int
mov
cmp
divb
incb
fimuls
adc
or
bound
xor
pop
sbb
lcall
inc
cmp
fwait
mov
popa
mov
pop
adc
push
jae
adc
push
rclb
pushf
cmp
cltd
mov
or
and
mov
out
pop
cltd
mov
cltd
frstor
sbb
clc
cmp
addr16
sub
push
jnp
sbb
pcmpgtb
call
out
loopne
pop
push
lods
pushf
mov
mov
aas
mov
sbb
gs
prefetchw
xor
adc
pop
sarb
mov
stos
cmp
insb
add
jmp
cs
cmc
movsb
mov
mov
or
mov
dec
addr16
push
lock
inc
leave
cmpsb
sub
push
push
cmp
push
push
jno
cli
cmpl
inc
xor
cwtl
jp
in
mov
pop
les
data16
add
jae
notl
std
movsl
xchg
mov
fidivs
jp
push
inc
jcxz
cli
aas
ds
xor
es
mov
cltd
jmp
adc
jbe
push
mov
fcomps
lahf
mov
lea
and
ds
out
push
or
loop
lahf
out
shrb
adc
inc
mov
cmp
mov
leave
mov
movsb
pushf
in
call
mov
or
jp
xor
xchg
mov
ror
mov
sti
scas
lods
sbb
leave
mov
ljmp
sbb
stos
xor
mov
cmpsb
pop
sbb
fdiv
rcrb
shll
sbb
pop
insl
ret
popa
std
sbbl
sub
ja
scas
adc
sub
add
cltd
es
fidivs
aas
dec
push
lret
pop
adc
adc
pop
mov
mov
das
daa
mov
mov
out
dec
jge
mov
bound
ret
adc
pop
repnz
imul
fidivl
nop
sub
je
lcall
jb
movsl
lea
cmp
xchg
and
pop
pop
repnz
mov
daa
imul
dec
outsb
loop
imul
cwtl
not
or
rcll
test
push
ljmp
add
mov
push
mov
out
mov
imull
fsubrs
xor
push
fsubl
aaa
int
es
or
push
fwait
pushf
out
gs
mov
scas
mov
ja
in
mov
inc
popa
dec
sub
dec
loop
call
pop
push
lds
dec
mov
xor
lock
add
inc
adc
repnz
xor
icebp
lcall
mov
das
aaa
xor
subb
adc
imul
xlat
in
daa
repz
add
rcrb
cmp
lods
mov
mov
ja
cmp
movsb
inc
sbb
pop
or
cmc
leave
push
loope
das
add
ss
lcall
push
pop
xchg
sub
inc
dec
ljmp
mov
gs
cwtl
jge
insl
scas
inc
pop
setp
jo
test
test
sti
inc
xchg
xchg
lock
adc
sahf
test
call
push
lods
sbb
js
loop
int3
adc
push
adc
pop
pop
mov
fld
dec
rcr
cmovl
pop
pushf
dec
ss
pop
dec
pop
push
xchg
dec
out
rcr
xor
cmpsb
jp
adc
pop
inc
bound
ja
lcall
ja
fstl
inc
movsl
add
mov
add
and
es
jge
add
icebp
gs
or
aas
je
fst
xchg
mov
lcall
jg
jo
mov
push
inc
mov
cmp
test
push
xor
push
outsl
lock
xor
mov
scas
popf
pop
and
stos
mov
pop
jb
cwtl
and
xchg
push
dec
arpl
push
fldcw
dec
jb
inc
push
scas
movsl
pop
out
cmp
mov
dec
pop
jecxz
push
mov
jo
loop
ret
mov
stos
insl
mov
int3
jne
in
xchg
jl
cmp
dec
cltd
add
and
adc
imul
jecxz
sbb
loop
jle
xor
jle
lock
push
or
lahf
mov
lahf
dec
in
popf
outsb
ss
xor
xchg
nop
sbb
push
outsb
pushf
fisubs
pop
pop
and
sub
arpl
pushf
dec
das
std
ret
vmovq
jb
cmp
pop
mov
sub
sbb
add
push
sti
inc
inc
xchg
dec
mov
aaa
fnstenv
ds
dec
outsb
sbb
inc
mov
loop
add
dec
stc
push
xchg
mov
leave
and
scas
fstpl
js
pop
movsl
pop
dec
sbb
jge
mov
and
xor
xchg
mov
push
and
push
fdivp
les
movzbl
xchg
inc
dec
lret
adc
lods
sbbl
mov
push
push
shl
stos
push
pop
in
test
or
cs
jns
int3
inc
and
scas
rcr
or
adc
mov
ret
xor
out
cli
inc
mov
inc
out
push
mov
ja
push
cmc
stos
xchg
arpl
dec
test
mov
pop
lret
push
jb
cmp
testl
jb
or
in
or
lods
mov
xchg
jno
enter
call
mov
out
xchg
xor
testl
mov
push
andl
jae
inc
in
mov
addr16
xor
es
cmpsl
lods
fsubrl
pop
jns
mov
mov
pop
xor
xor
inc
imul
or
mov
fistpll
aaa
mov
mov
lahf
loopne
aas
icebp
xor
int3
push
mov
inc
mov
call
and
dec
out
xchg
jecxz
aas
cmpsb
fsubrl
daa
jno
cmpsb
arpl
daa
xchg
aad
paddsw
xchg
loop
aaa
ss
mov
mov
sub
jg
lret
jg
cmpb
fstl
iret
sub
sbb
dec
dec
bound
xor
mov
mov
fimuls
add
mov
adc
xor
push
sbb
xchg
sahf
mov
mov
mov
gs
ljmp
xor
out
cmpl
fstl
add
lods
in
lcall
ret
push
cwtl
cmpsl
add
mov
loope
jb
pop
in
fcmovu
pop
fs
test
mov
or
fnsave
mov
adc
inc
pop
sahf
ret
xor
mov
popa
movsl
fdivrs
pop
mov
sbb
xor
lahf
jb
jge
xor
pop
lods
fdivrl
jle
ja
add
subl
inc
data16
ret
in
push
jl
dec
sbbl
cmp
sbb
pop
cmp
repz
daa
mov
push
ja
mov
push
inc
push
aas
xchg
in
ja
scas
sbb
or
dec
sub
dec
inc
cmp
gs
incb
in
xchg
adc
inc
out
push
aaa
cmc
fdivrs
sub
pop
rclb
aas
push
or
fnstenv
test
fsubrs
cmc
jo
push
add
push
mov
mov
push
test
mov
cmp
mov
jecxz
addr16
xchg
push
jge
out
mov
xchg
pop
mov
or
out
xorl
pop
inc
ja
into
push
cmp
int3
push
xor
pop
adc
rcll
test
pop
mov
sbb
mov
or
dec
lcall
sbbb
frstor
clc
scas
pop
repnz
jb
xchg
cmpsb
in
and
or
shll
shlw
push
xchg
stos
or
and
iret
int
jne
and
pop
adc
scas
and
cmp
dec
pop
jmp
ret
xchg
stc
aam
roll
out
adc
adc
icebp
mov
jmp
mov
push
imul
inc
xor
mov
add
mov
das
xchg
fs
adc
inc
fisubrl
xchg
inc
add
sahf
addr16
dec
cmpsb
mov
pop
sub
add
or
cltd
jmp
ret
lret
cmpsl
stos
jle
je
repnz
xchg
out
imul
scas
jp
daa
dec
sbb
jbe
cmp
mov
pop
mov
jp
cmp
inc
fiadds
xchg
fcmovnu
ja
push
dec
and
je
fnsave
dec
jbe
cmp
jp
pop
mov
je
mov
xor
jae,pt
mov
loopne
jmp
push
mov
out
mov
xchg
in
xchg
ds
adc
ret
andl
fidivrl
ds
pop
pusha
pop
and
xchg
cs
sahf
pop
xor
pop
clc
test
punpckldq
popf
int
mov
mov
push
sbb
and
icebp
in
xor
jl
aas
repnz
fiadds
loope
push
stos
xchg
sahf
mov
int3
xchg
jbe
cltd
data16
pop
dec
mov
repnz
lock
xchg
stos
pusha
out
fsubrl
mov
bound
fnstenv
jne
sub
popa
jp
pop
jo
push
or
mov
mov
aas
inc
pop
push
jecxz
pusha
out
cwtl
mov
push
mov
in
sub
cmp
lcall
jecxz
push
aad
repz
sub
pop
scas
rclb
loopne
jno
mov
and
notb
pop
ljmp
call
popa
fwait
test
icebp
jb
or
add
into
int3
fstps
lret
cmc
je
pop
push
push
and
dec
push
pusha
js
add
cmp
inc
or
push
pop
sti
push
sub
mov
hlt
cld
js
test
xor
add
push
lcall
cmp
push
stc
loop
test
lods
test
sub
cmp
fnstenv
aad
push
mov
push
bound
cmp
and
lret
mov
hlt
enter
mov
sub
arpl
ss
out
pop
sub
sub
adc
jle
cmp
orl
insb
inc
rcl
inc
xlat
mov
out
dec
adc
js
sub
inc
pusha
mov
arpl
aad
inc
inc
cmp
arpl
push
movsb
inc
test
cmp
mov
jo
pop
lea
mov
adc
cmp
arpl
test
data16
clc
mov
push
push
or
sbb
addr16
mov
adc
lock
mov
and
ja
inc
mov
shlb
das
dec
ficoms
xlat
shl
into
testb
and
rcr
es
pop
jbe
sub
and
cmp
aas
or
clc
je
daa
popf
outsl
jmp
test
jns
sbb
fwait
pop
xor
ds
cmpsl
mov
jns
sub
sbb
iret
add
jecxz
jp
incb
mov
inc
sub
mov
push
repz
and
shrl
xchg
dec
mov
and
add
out
mov
test
ss
jo
and
daa
bound
mov
add
movsb
dec
xor
scas
outsl
add
sub
daa
mov
mov
add
faddl
aas
mov
insl
incl
fistl
std
pop
repnz
mov
xchg
cmp
xor
xchg
fcmovnb
cmp
fidivs
dec
cmpsl
cmp
cmp
mov
test
adc
loopne
push
sub
mov
outsl
fdivl
cmp
inc
pop
inc
and
xchg
ljmp
xchg
int3
or
es
xchg
stos
js
inc
add
aas
jg,pt
loop
jns
into
test
mov
rorb
mov
stos
std
and
xchg
cmpsl
scas
inc
out
data16
cmp
sarl
jo
andb
inc
es
add
daa
mov
test
sbb
push
call
sahf
xchg
js
sbb
loopne
or
insl
xor
mov
add
and
movsb
dec
jbe
sarb
lahf
mov
mov
int
cmpb
inc
push
dec
pop
cmpsl
cli
pop
andl
ss
xor
loopne
and
pop
fildl
push
daa
sub
inc
fisubs
jp
xchg
stos
and
add
iret
mov
sbb
mov
sbb
ljmp
pop
mov
xchg
push
js
adc
inc
jp
lahf
jne
or
cwtl
leave
push
mov
xchg
rclb
insb
xchg
sbb
sbb
movsb
scas
pop
loop
clc
cmp
test
cmc
push
jecxz
lahf
pop
negb
pop
mov
lock
sbb
sbb
pop
inc
sub
and
retw
jnp
inc
cmp
mov
cmp
test
sarb
jmp
xchg
call
shlb
mov
call
scas
dec
pop
jecxz
imul
into
ja
test
data16
in
mov
stos
jns
pusha
pop
mov
cmpsl
scas
jmp
adc
lahf
jge
mov
jle
jecxz
js
xchg
loop
insb
inc
and
push
or
jnp
dec
jbe
push
arpl
mov
and
xchg
xor
cmc
sbb
cmpsl
int
inc
sbb
mov
sub
jo
fs
inc
fwait
imul
adc
sahf
xor
sarb
cmp
add
push
andb
idivb
iret
push
dec
out
jge
mov
cmp
and
or
insb
repz
push
push
sub
jbe
cmc
stos
rol
lcall
sbbb
xchg
mov
outsb
lret
mov
add
push
neg
fcomps
es
mov
imulb
fcomp
ret
mov
cmp
call
into
lea
pop
cmp
mov
lcall
inc
pusha
mov
dec
xor
and
xor
pop
cmpsl
and
enter
fsubp
stos
xor
sub
inc
jl
adc
jge
adc
shr
arpl
ret
fdivrl
arpl
add
repnz
xchg
push
push
rclb
dec
or
inc
cli
pushf
mov
mov
and
ret
repz
push
mov
shlb
cmp
push
xchg
push
cmpsl
mov
fnstcw
arpl
or
cmc
and
sbbl
xchg
cmp
jg
test
jb
pop
sub
jo
cs
or
mov
jo
cs
repnz
push
cli
lcall
mov
or
inc
and
lret
cli
fcoml
jnp
movsl
sbb
cli
out
inc
dec
cltd
mov
or
mov
or
or
inc
and
lahf
sbb
test
cmpsb
push
int3
lret
cli
fistpl
or
stc
pushf
xchg
xor
push
or
jmp
fldenv
pop
jno
pusha
inc
xchg
les
test
pop
inc
aaa
flds
out
ss
jne
or
inc
mov
mov
iret
aad
scas
sbb
rcr
push
popa
push
add
or
enter
cld
sbb
pusha
or
dec
imulb
lahf
jmp
nop
les
fistpl
sub
adc
and
dec
mov
pop
sbb
and
xchg
daa
mov
pop
mov
gs
cmp
iret
loopw
loop
sbb
mulb
hlt
inc
mov
jo
cmc
jnp
xchg
mov
sbb
cmpb
std
pop
test
lods
dec
mul
or
add
decb
rolb
pop
icebp
xchg
fidivrl
or
and
xchg
xchg
sbb
popf
adc
loopne
shlb
insb
jns
cmpsb
push
inc
mov
rolb
pop
jno
jo
xor
inc
or
imul
mov
lret
sar
movsl
mov
mov
and
fidivrs
addr16
mov
popa
pop
and
push
push
pop
mov
mov
aas
daa
pop
loop
outsb
fcmovnu
into
mov
test
inc
jmp
mov
dec
std
push
popf
mov
mov
movsb
or
lret
in
mov
mov
xor
pushf
dec
pop
loop
mov
lret
jecxz
push
lea
and
cmp
push
testb
out
push
add
lcall
stc
lcall
add
inc
cmc
jns
popa
dec
jno
out
stos
movsb
cwtl
pop
faddl
and
xchg
sbb
sbb
inc
scas
cwtl
imul
clc
inc
dec
test
add
or
popa
jl
sub
push
push
cmc
inc
ja
and
add
loop
inc
pushl
lea
aas
jns
inc
xchg
pop
jg
add
cwtl
aas
addl
test
push
mov
mov
fwait
lret
jo
mov
repnz
add
xchg
mov
xchg
jae
jo
mov
insl
adc
ficomps
inc
es
les
mov
data16
jge
addb
jl
lahf
jne
sub
sbb
inc
and
xchg
sub
fwait
mov
mov
sub
mov
popa
in
aas
add
pminsw
mov
out
cmp
ret
dec
cmp
xchg
div
jecxz,pn
push
fsubr
call
xchg
outsl
js
shlb
daa
lcall
jns
xor
mov
pop
cmpsl
dec
jle
aaa
lret
out
mov
fisubs
aam
dec
and
insb
cmpsl
icebp
mov
and
stos
inc
pusha
test
outsb
push
in
into
notl
repz
jns
dec
bound
in
clc
add
inc
addb
adc
xor
lea
daa
pop
arpl
and
inc
pop
test
gs
ds
lret
dec
and
push
xchg
sbb
fisubs
xchg
test
mov
xor
es
ficoms
pusha
bound
or
mov
mov
cmovnp
std
andl
fstl
xor
mov
push
out
aad
cmp
add
jne
nop
cli
or
cmp
jb
xor
push
jnp
pop
inc
dec
repnz
jnp
outsl
mov
pop
xor
add
cmp
inc
cmc
loope
mov
leave
jb
mov
jbe
loopne
lret
sbb
iret
outsb
xlat
mov
dec
lret
lods
clc
sahf
or
push
add
cmp
pop
xlat
cmp
lods
inc
jecxz
sarl
mov
int3
jg
xchg
sahf
xor
lcall
lret
and
inc
push
jb
fldt
setb
aam
inc
xlat
dec
hlt
inc
inc
sbb
xor
and
mov
lea
lahf
mov
lock
pop
mov
xlat
in
xor
add
sbb
jmp
xor
out
adc
popf
push
jb
loope
add
cmp
sbb
in
pop
mov
sbb
bound
add
pop
xchg
jae
ja
pop
aaa
mov
inc
mov
push
out
xchg
rorl
jle
in
out
and
cltd
repz
fsub
scas
adc
test
xchg
or
scas
sbb
loop
push
mov
pop
bound
leave
dec
cmpsb
jb
and
ret
or
dec
xor
inc
aaa
popa
out
mov
pop
jmp
and
push
scas
mov
cmp
test
ret
mov
inc
mov
imul
pop
outsb
inc
sub
cmp
push
lds
push
ret
add
inc
dec
cmpsb
push
mov
idivl
iret
mov
push
sbb
pop
xor
lea
fsub
mov
popa
xchg
add
push
and
ret
push
inc
lock
pop
pop
jae
ret
sahf
je
add
adc
jp
xchg
or
mov
fsubl
mov
sub
mov
add
jnp
xchg
xor
mov
or
add
addr16
pop
pop
fscale
test
cli
mov
dec
sub
mov
ss
sbb
xchg
cmpsl
adc
xchg
pop
and
push
scas
jnp
xor
adc
add
mov
or
push
sub
in
in
and
adc
mov
mov
mov
mov
jns
sbb
test
adc
inc
movsl
mov
and
pushf
inc
dec
pop
mov
mov
pop
push
mov
inc
daa
pop
movsl
pop
and
movsl
add
and
and
out
adc
mov
xor
xor
repz
sub
lret
aaa
insb
push
cmpsl
mov
cmp
adc
imul
movsl
flds
cmp
push
mov
inc
pop
dec
dec
out
pop
push
fs
shlb
pusha
push
shr
add
mov
jg
mov
or
aas
lcall
je
iret
lods
fcoml
cmp
or
inc
mov
fbstp
test
xchg
test
mov
aaa
fs
mov
pushf
mov
xor
aad
mov
jnp
mov
insl
mov
imul
pop
cmpsl
mov
fadds
or
pop
rcl
jb
dec
sbb
sbb
add
sti
addb
push
movsl
daa
in
xor
mov
sti
mov
aaa
mov
in
lods
sub
int
mov
jp
adc
fidivrl
mov
fsubrp
jmp
jg
out
jecxz
cmpsl
in
out
push
lea
dec
mov
popf
repnz
nop
cld
pop
pop
fcoml
add
pop
xchg
aam
xlat
aam
push
sub
push
mov
pop
js
in
outsl
mov
adc
popf
pop
cld
les
mov
out
push
mov
cltd
adc
lds
jg
mov
sub
cmpsl
lods
and
bound
jg
cltd
add
cmp
dec
cmpsl
push
enter
das
stc
clc
aas
fisttpll
pop
inc
jae
popa
cs
ljmp
addr16
js
pop
push
jge
push
xchg
call
icebp
push
out
push
test
inc
mov
jle
inc
ror
enter
sbb
mov
popa
lcall
cltd
jns
or
or
insl
aad
std
pop
jb
push
daa
pusha
pop
and
cwtl
ds
pop
dec
pop
dec
xorl
sub
mov
pusha
into
sbb
inc
mov
or
popa
clc
jmp
dec
jno
movsl
mov
stc
es
jl
xor
repz
popa
or
cmp
and
or
or
ja
enter
adc
jb
push
pop
loope
mov
fwait
mov
pop
jecxz
test
xor
push
xchg
adc
aas
out
es
shl
cmp
push
scas
pop
fidivrs
dec
mov
and
push
insl
pop
inc
es
cmp
pop
inc
movsl
nop
es
mov
xor
out
dec
lahf
jbe
fimull
jl
cmp
pop
sbb
sbb
dec
loope
mov
mov
cmp
push
push
cltd
mov
mov
xchg
xchg
fwait
inc
jb
fucomp
sub
ja
inc
in
fstps
daa
outsb
subb
fdivl
test
shl
or
shlb
pop
mov
fwait
sub
wbinvd
xchg
push
push
ljmp
lods
xchg
jne
mov
fisubl
inc
mov
mov
repnz
jbe
jb
stc
adc
imul
add
sbb
sbb
pushf
or
push
xchg
sahf
cmp
stc
cld
add
mov
cmp
sarl
in
adc
jle
fbld
pop
dec
and
nop
aaa
mov
xor
push
ja
lcall
data16
ret
repnz
daa
in
push
fsubp
out
mov
outsb
adcb
bound
xchg
xor
addr16
inc
lcall
rorl
xchg
lahf
es
push
in
lret
xchg
movsb
xor
lods
pop
loop
in
lcall
lahf
pusha
xchg
jle
in
xor
sub
addl
lods
push
cltd
dec
cmpsl
inc
mov
insb
pop
test
outsl
jb
pop
cmp
sbb
dec
push
adc
add
push
dec
cli
cmp
mov
gs
and
lods
pop
and
shll
hlt
in
scas
pop
adc
dec
pop
aad
dec
push
out
or
stc
fidivrs
or
notb
mov
es
movsl
and
jmp
icebp
icebp
pushf
test
push
mov
mov
fdivr
pushf
fsubrl
call
xchg
xchg
in
movsb
pusha
jns
lea
movb
stos
test
pop
inc
les
stc
hlt
into
stc
in
pop
cmp
push
cmp
repnz
lcall
gs
ss
mov
jle
mov
xor
push
xchg
xor
in
xor
sahf
cwtl
test
mov
mov
daa
mov
clc
out
cmpsl
pop
pushf
sbb
aas
ljmp
jge
or
add
inc
iret
xchg
cmp
std
int3
inc
imul
sbb
pop
xchg
cmp
cmp
or
hlt
and
jb
shlb
adc
add
push
nop
insb
into
fisttpll
orb
je,pn
sub
and
mov
mov
ljmp
popa
mov
mov
es
and
mov
bound
mov
sub
inc
add
les
imul
fcoms
popa
jnp
xchg
mov
mov
dec
add
addr16
mov
mov
rclb
add
pop
dec
int
sti
rsqrtps
dec
push
cmc
stos
test
lret
out
dec
in
mov
loope
imul
push
imull
stos
shll
roll
insl
mov
adc
outsl
or
pop
xor
stos
cmp
lock
addl
hlt
xchg
sahf
add
mov
push
push
dec
and
jbe
dec
push
adc
inc
cmpsb
push
fsubp
adc
shlb
aaa
push
movsl
ret
lods
neg
sarl
mov
add
int3
fisubs
addr16
add
jnp
aaa
mov
incl
push
movsb
popa
sbb
xchg
mov
ds
push
xchg
fcoml
mov
xchg
sbbb
cli
inc
loopne
jne,pt
push
aas
xchg
fiadds
in
jo
sub
or
aaa
arpl
out
sub
fcomip
mov
das
pop
sub
hlt
int3
in
jg
insl
lcall
pusha
arpl
in
fnstenv
scas
nop
arpl
rcrb
mov
dec
lahf
add
xchg
aad
push
mov
push
mov
imul
mov
pop
in
or
into
push
cmpsl
les
inc
dec
xchg
test
jge
nop
cmp
inc
nop
pop
jbe
icebp
dec
xchg
repz
lahf
fisubrl
jbe
push
jns
mov
mov
and
leave
inc
out
cmpsb
mov
jg
xchg
dec
sub
and
adc
mov
add
xchg
sub
jnp
push
nop
daa
pop
and
and
fbstp
jg
push
out
outsb
dec
mov
pop
cmpsb
roll
mov
arpl
xchg
bound
xlat
sbb
or
xchg
jge
sbb
ret
fldt
faddl
aad
dec
sub
cli
inc
xor
aad
es
int3
mov
xor
push
test
and
scas
jmp
push
cmp
sbb
mov
cmp
das
shlb
enter
fildll
pop
pop
ret
xor
icebp
pop
imul
jg
add
lcall
jle
jbe
and
push
mov
and
xor
ja
cmp
and
xchg
cmp
fs
jle
je
les
sub
xchg
mov
push
iret
jns
stos
xlat
sbb
cmp
pop
inc
xchg
cli
add
mov
mov
data16
mov
dec
rcrl
xchg
or
mov
xchg
popf
dec
jo
mov
cmp
stos
pop
cmp
cli
int3
leave
pop
fwait
adc
cmp
push
dec
dec
cmp
add
xor
sub
jle
cmc
aam
les
andl
and
lcall
xor
lock
iret
movsb
inc
insb
lods
addr16
das
nop
jae
jle
aas
xchg
mov
xchg
dec
xor
in
push
dec
jmp
mov
mov
sbb
xchg
cmp
xor
xchg
insb
mov
inc
xlat
xor
int3
sub
mov
xor
repz
pop
mov
or
mov
das
mov
int
inc
xchg
js
je
mov
jecxz
cmp
fidivrs
ja
cli
aam
sbb
cwtl
xor
cmpsb
xlat
out
dec
mov
mov
int
bound
arpl
sub
sarb
sbb
repnz
adc
dec
xor
test
xor
je
ss
ljmp
mov
xchg
les
mov
ret
xor
in
xchg
lret
pusha
cmpsb
sahf
xor
dec
mov
lcall
fs
in
xorb
shrl
sahf
jnp
movl
les
outsb
cmpsl
cli
fsubp
test
adc
sub
shlb
daa
cmpsl
push
xchg
xlat
lcall
xor
or
cmpsb
mov
lods
pop
rcrb
xchg
jg
jmp
addr16
pop
bound
xchg
bt
or
data16
add
fistpll
inc
push
mov
lock
xor
loop
xor
add
xchg
dec
mov
fsubrs
cmp
cs
xchg
nop
inc
dec
mov
lea
fstl
cs
data16
popf
mov
cwtl
pop
jbe
pop
popf
cli
jbe
repz
inc
iret
cltd
xchg
lret
push
or
dec
inc
push
mov
in
into
movsb
add
push
mov
sbb
int
jbe
xchg
xchg
mov
sti
xor
scas
lock
rcrb
repnz
push
inc
incl
aam
mov
dec
push
dec
mov
cmp
icebp
adc
jb
sbb
xor
fsubp
das
dec
pop
sarb
pop
jnp
pop
adc
inc
bswap
jns
adc
repnz
pusha
push
sahf
xchg
sbb
inc
arpl
add
clc
mov
push
or
es
mov
cmp
leave
xlat
scas
push
lods
mov
mov
jp
cwtl
test
out
xchg
or
xorb
mov
fisubs
stos
or
inc
shrb
call
mov
mov
xor
mov
jae
test
js
lcall
addr16
cmpsw
dec
leave
mov
mov
lods
push
dec
mov
xchg
or
fldt
ficoms
push
dec
ret
xchg
lret
lret
popa
xchg
stc
jne
fildl
popa
notb
ficomps
imul
push
inc
aad
cwtl
push
xor
xchg
push
clc
repz
jo
addr16
ljmp
jae
gs
fcmovnbe
out
push
mov
mov
pop
lahf
push
fistl
testl
inc
outsl
pop
mov
adc
ds
jge
iret
mov
mov
mov
dec
add
lcall
pop
mov
int3
push
pop
cmc
xchg
or
cmpsb
add
mov
push
lds
fwait
loop
mov
xchg
nop
xorl
jge
loopne
or
fcomip
pushf
data16
pusha
jb
test
arpl
shl
arpl
mov
les
ds
xchg
lahf
imul
mov
push
dec
out
outsl
sub
stos
scas
adc
je
and
pop
pusha
ds
scas
out
sub
dec
dec
lcall
movsl
hlt
scas
push
dec
mov
lock
stos
flds
insl
cmc
mov
gs
xor
dec
leave
repz
add
mov
mov
pop
jno
addl
xor
lds
push
gs
jnp
mov
mov
inc
jle
push
shlb
adc
mov
cmp
push
ss
or
or
adc
jecxz
pusha
add
adc
dec
loopne
xor
cmp
out
fwait
popf
je
xor
movsb
xor
popf
cwtl
jg
imul
popa
dec
push
dec
bound
cmp
jne
ja
jmp
mov
push
pop
mov
imul
xchg
jg
xor
mov
sub
test
popf
or
jl
and
xchg
push
push
xor
or
frstor
bound
xor
call
add
inc
push
imul
mov
lret
xor
adc
xchg
pop
lret
jnp
test
fwait
jg
jns
pop
mov
lret
mov
clc
add
int
cmp
mov
dec
arpl
push
out
xchg
aas
inc
cld
pop
push
pop
subb
jb
scas
add
xchg
int3
jnp
fwait
push
ret
outsb
pop
cwtl
or
xchg
jns
pop
test
jnp
aaa
sahf
cmpsb
shlb
lods
cmpsb
sub
push
pop
stc
mov
loope
cmpsb
lods
pop
add
pushf
test
cmpb
js
gs
add
les
xor
insb
fildl
inc
and
cli
xor
in
push
pushf
jno
fisttps
sbb
aad
push
mov
int3
scas
das
dec
inc
dec
cld
push
cmc
cli
push
out
hlt
loop
push
bound
xchg
subb
adc
push
int
or
adc
xor
out
sub
cmp
addr16
into
xchg
pop
sub
arpl
repz
dec
cltd
dec
mov
popa
add
call
mov
pop
imul
sbb
pop
pop
push
dec
jp
pop
clc
mov
push
arpl
mov
adc
sarb
repnz
lods
addr16
aam
push
lret
sahf
popa
push
ss
sub
dec
icebp
inc
mov
jge
in
dec
imul
xor
fcoms
insb
sub
push
lods
pusha
scas
xchg
test
fdivrl
push
cwtl
movsb
jge
ret
repnz
or
and
cmp
jmp
xchg
or
fidivl
bound
or
mov
cmpsb
push
xlat
add
ljmp
rcr
cmpsb
loop
push
stc
adcb
cmpsb
adc
int
jg
iret
jle
into
lret
sub
lock
imul
pop
push
js
adc
jns
jg
fisttpll
stos
xor
push
movl
jl
stos
mov
rclb
arpl
sbb
inc
or
xchg
stc
push
daa
pop
mov
push
subb
test
mov
pop
xor
push
push
ss
push
dec
enter
stos
inc
mov
lea
std
in
mov
or
data16
xchg
fstpt
jl
in
sar
push
fdivrl
inc
movsl
scas
fwait
pop
in
shlb
rcr
mov
sub
mov
std
xorb
fcmovb
inc
call
arpl
call
rolb
cs
push
or
negl
push
stc
imul
call
stc
lds
xchg
mov
cmp
daa
push
jg
mov
repnz
cltd
push
ret
add
lcall
xor
repnz
ret
fidivrs
bound
mov
xlat
push
mov
pushf
stos
cs
scas
xor
rclb
push
xchg
ret
jp
mov
mov
stc
andl
xlat
cli
push
mov
movsl
push
mov
mov
pop
fwait
andb
xchg
movb
lods
mov
jge
mov
dec
mov
lret
inc
mov
dec
repz
lret
sbb
jb
lods
or
cmp
aad
imul
adcb
adc
push
or
mov
ret
out
ljmp
jno
xchg
lds
push
fstps
xchg
jnp
call
dec
pop
mov
add
inc
into
pusha
xchg
addr16
fs
dec
aas
out
cli
jmp
push
cs
pop
pop
test
ja
loope
addr16
push
nop
enter
pop
mov
popa
movl
pop
jg
mov
dec
sub
xchg
pop
mov
xchg
lock
mov
and
and
push
sahf
scas
cmp
push
jl
mov
and
pop
inc
enter
pop
inc
xor
cs
and
insl
mov
push
shll
push
push
insl
and
mov
lahf
call
sbb
push
push
loopne
push
leave
adc
outsb
stc
mov
roll
mov
int3
mov
lcall
mov
push
or
fistpll
pop
ds
pop
push
test
mov
jbe
adc
lret
inc
pop
xchg
andl
outsb
push
pusha
int3
jo
cmpxchg
or
dec
push
cmpsl
add
pop
mov
or
jae
mov
dec
inc
mov
cmpsb
sarl
fs
xchg
and
pop
in
lods
fs
fldpi
cmpsb
lea
and
lods
sub
pop
push
push
loope
and
test
arpl
les
imul
outsl
push
lcall
fdivl
mov
inc
adc
mov
jnp
sti
test
stos
lret
inc
add
ret
adc
les
ret
inc
gs
mov
xchg
jnp
sti
aaa
push
scas
fildll
push
inc
divb
je
hlt
push
js
xlat
mov
dec
stos
mov
jge
stos
scas
or
repz
mov
test
dec
ljmp
lods
das
mov
add
rclb
mov
push
jp
shrb
sarb
movsl
jge
pop
dec
das
hlt
mov
repnz
push
stos
outsb
jae
cmp
xchg
and
rep
int
loope
rorl
imul
sahf
cwtl
arpl
cmp
jmp
jmp
push
ret
push
notl
cmp
scas
and
push
js
mov
jl
push
pushf
jg
push
adc
or
pop
scas
xlat
cltd
aas
inc
jl
out
int3
imul
add
dec
xchg
xchg
into
lret
fucomip
popa
mov
jmp
add
xchg
sub
rclb
cmpsb
sbb
test
mov
adc
jns
mov
lods
iret
scas
mov
stc
bound
inc
lret
mov
jg
mul
mov
inc
mov
in
dec
push
bound
pop
mov
hlt
arpl
fstl
dec
push
lret
icebp
pop
out
lret
or
std
fs
dec
push
adc
jg
jp
mov
mov
out
fwait
mov
mov
out
jp
push
sbb
ret
mov
mov
xor
cmp
test
ja
movsb
mov
mov
push
cmp
push
pop
vmovdqa
mov
bound
test
out
fldcw
out
testl
push
lahf
scas
addr16
cli
mov
adc
mov
inc
and
ljmp
xlat
fwait
mov
mov
push
lods
cmpl
xor
mov
inc
adc
jge
mov
loop
xlat
fmuls
iret
mov
fs
dec
ret
cmp
mov
push
data16
test
xorb
std
fwait
add
mov
cmpsl
push
lret
lock
ret
pop
mov
icebp
push
cmp
fimuls
movsl
bound
inc
inc
xchg
mov
addb
inc
add
mov
inc
dec
sbb
mov
pop
iret
xor
lods
mov
jbe
push
cmpsb
inc
pop
mov
loop
adc
dec
sahf
sub
cmp
ret
mov
xchg
push
xor
pop
pop
std
xchg
fldl
lret
into
int
and
inc
mov
add
jecxz
dec
out
ljmp
push
xchg
adc
test
mov
stc
stos
mov
pushf
jp
arpl
mov
sti
insb
jmp
sahf
push
movsb
loop
push
enter
xor
jmp
push
cmpsb
xchg
out
addl
fstp
push
jp
mov
push
sub
jno
xor
data16
push
push
lret
pop
lahf
addr16
mov
aaa
adc
inc
jb
ficompl
int
nop
sarl
push
pop
and
adc
and
xchg
inc
push
xorb
xor
mov
sbb
mov
dec
out
test
push
push
scas
push
jbe
mov
pusha
int
jmp
adc
or
and
lods
cwtl
push
inc
int
mov
push
test
test
dec
add
sub
data16
int
enter
xchg
ret
scas
and
roll
push
addb
jp
jnp
ss
push
jno
jnp
leave
jae
cs
xlat
mov
mov
test
xchg
push
sbb
enter
xor
lahf
outsb
fdiv
push
xor
test
jg
dec
push
dec
dec
push
push
dec
xorb
aam
push
inc
ret
inc
cmc
cmpsb
mov
lret
xchg
dec
or
cmp
andl
in
scas
in
add
mov
stc
inc
jl
mov
int3
add
sbb
push
test
or
push
ret
outsb
fiadds
inc
push
lret
cmpsl
in
mov
cmpsl
mov
pop
movl
in
push
test
or
aad
movsb
pusha
lret
mov
popf
adc
sub
aam
insl
pop
pop
mov
popf
xor
les
fwait
xchg
adc
pop
push
xchg
adc
sub
ss
rcrb
push
enter
test
mov
pushf
les
inc
push
out
lods
dec
sbb
popf
lods
jne
xor
mov
je
imul
jecxz
mov
push
jno
fiadds
push
lds
stos
dec
shl
or
fisubl
test
rclb
mov
aas
sub
scas
std
xchg
dec
loope
push
jno
les
sbb
test
lcall
mov
inc
push
push
loop
imul
test
jne
leave
movl
in
lret
dec
movsb
cmpsb
inc
rorb
addr16
je
scas
pop
jo
push
push
and
jle
mov
cmc
in
pop
repz
pop
cmp
mov
push
aaa
cwtl
fs
fsubs
shrl
lods
xchg
es
shrl
mov
mov
pop
das
das
enter
mov
adc
fwait
decl
mov
dec
pop
dec
lock
fcom
ret
scas
pop
cwtl
jb
les
out
mov
out
idivl
gs
pop
pop
jecxz
in
jmp
pop
or
jmp
xchg
pop
adc
dec
scas
jae
cmp
jns
sub
mov
xchg
xchg
cmpsb
ljmp
jb
push
jb
popf
jno
inc
inc
sbb
popa
mov
hlt
xor
cmpsb
add
xchg
sbb
sahf
xchg
ja
jecxz
test
aam
mov
inc
jbe
cwtl
push
sbb
scas
jmp
loop
mov
push
jle
inc
jmp
pop
inc
out
shll
push
mov
scas
jno
xor
dec
aas
inc
ljmp
adc
xor
jb
fnstenv
sbb
adc
addr16
mov
or
stos
pop
add
mov
leave
test
dec
icebp
cmp
cmp
nop
std
push
mov
push
xchg
dec
jbe
jmp
int
mov
cmp
pushf
xchg
int3
mov
mov
das
push
jb
stos
sti
ret
jle
add
jae
stos
inc
push
out
cmp
subl
mov
push
ss
push
pop
fists
mov
mov
mov
xor
inc
xlat
loopne
dec
jae
mov
push
dec
mov
inc
push
outsl
lret
out
mov
int3
push
out
jmp
sub
xchg
mov
aas
push
mov
mov
mov
popa
xor
shrb
cltd
lret
arpl
lret
mov
iret
pop
mov
jp
in
inc
sarb
das
pusha
call
mov
jae
pop
jle
lods
in
jo
xor
push
push
mov
out
sti
jns
mov
xchg
sarb
push
xor
xor
mov
sbb
dec
jae
mov
sbb
push
push
push
shlb
or
push
or
ss
mov
mov
int3
push
aad
dec
iret
sub
enter
dec
dec
jg
into
or
mov
mov
out
push
aad
ret
cli
sbb
mov
pop
jbe
cmp
mov
sub
popa
imul
insb
std
xchg
inc
lret
pop
fnstcw
iret
sbb
pusha
out
and
add
inc
outsl
cmp
rcll
lahf
pop
call
xor
xor
hlt
mov
jp
cmpl
pop
cwtl
jg
and
xchg
cmp
insb
push
mov
ret
jns
dec
inc
in
faddl
cs
lods
push
xor
pushl
clc
in
dec
push
lds
pop
xchg
lcall
bound
iret
xchg
cmp
out
inc
or
mov
pushf
imul
dec
jns
pop
pusha
mov
cmp
sbb
sub
adc
adc
mov
mov
mov
mov
add
out
pop
cmc
pop
test
andl
mov
or
xor
cs
gs
add
xor
push
push
xchg
inc
push
sbb
dec
dec
add
add
push
dec
push
cmp
inc
push
inc
loopne
bound
adc
push
dec
out
enter
cmp
ret
hlt
inc
push
outsb
repnz
lds
xchg
mov
xchg
pop
inc
add
inc
ss
dec
pop
pop
push
jne
hlt
repnz
dec
xchg
pop
mov
mov
addl
inc
icebp
mov
add
push
push
nop
test
js
jo
ret
and
lods
in
or
jae
cmp
mov
test
jnp
call
cli
jno
rorl
push
sub
mov
cwtl
or
inc
daa
lahf
jg
lods
int
xchg
xor
jg
xchg
shll
pop
pop
in
mov
outsb
pop
dec
stc
push
out
dec
sub
fidivrs
mov
or
negl
cmpsb
sub
fdivs
rcll
dec
mov
lock
adc
in
orl
xchg
mov
cltd
rcrl
sahf
jns
or
or
xchg
lahf
lret
outsl
repz
mov
cmpsl
and
aaa
xchg
push
mov
sbb
or
nop
and
int3
push
test
dec
cmpsb
jbe
js
push
dec
adc
dec
ljmp
add
adc
das
fwait
fwait
push
jle
mov
xchg
jnp
mov
aaa
ret
mov
sbb
xor
fistps
mov
add
stos
jne
xor
loopne
cmp
fdiv
cwtl
test
and
jns
xorl
add
ffree
and
icebp
cmp
xlat
imulb
vpsrlw
out
orl
ja
clc
cmp
xchg
stos
push
jmp
lahf
or
dec
int3
lods
jg
mov
mov
mov
cli
xor
sub
hlt
xchg
aas
mov
mov
repz
mov
repnz
fnstcw
push
shlb
shrb
stos
adc
fdivrl
pop
push
popf
pop
roll
mov
pop
adcb
add
and
add
pushf
lds
cmp
mov
lret
add
cmp
pop
mov
jecxz
and
lods
dec
jnp
fdivr
fcmovne
incb
stos
es
mov
lods
cli
inc
cmp
inc
imul
fsubs
xor
loop
sub
insl
std
scas
stos
ds
movsl
lea
scas
mov
stos
pushf
out
fstpt
out
push
adc
test
jge
arpl
out
lea
inc
xchg
push
xchg
lret
out
mov
xchg
jmp
sbb
push
outsl
leave
pusha
repz
test
xlat
bound
mov
test
orl
ffreep
inc
jb
sbb
out
add
mov
push
outsl
mov
out
jp
xor
es
imul
scas
dec
in
xor
add
push
mov
mov
sbb
inc
popf
int
aaa
sahf
cmpsb
int
popa
addr16
mov
xchg
sbb
push
mov
inc
mov
xchg
test
repz
in
sub
push
fsubr
adcl
sub
bnd
and
call
sbb
insl
add
inc
sbb
mov
insl
push
jge
inc
subb
dec
push
or
int
mov
ficoml
xchg
daa
push
inc
fsubp
clc
adc
scas
push
das
mov
mov
mov
imul
rcl
push
je
jmp
dec
cmp
dec
mov
adc
cmp
inc
xchg
dec
ljmp
add
mov
in
add
imul
inc
aad
movsl
push
insb
js
push
out
xor
pop
cmp
push
ljmp
ja
cmp
inc
mov
roll
repnz
cmp
jp
jne
sti
jns
cmp
inc
dec
jmp
ss
pushf
pop
insl
imul
out
pop
cwtl
popa
daa
add
mov
push
outsb
adc
xor
out
push
iret
push
jns
or
mov
mov
or
daa
movb
int
mov
test
sub
mov
adc
aad
pop
jo
dec
stos
sahf
mov
aaa
cwtl
imul
pop
mov
std
and
dec
dec
xchg
pop
sbb
pop
enter
xchg
or
sti
fs
movsl
xchg
rcll
and
and
out
loop
in
xchg
sbb
into
push
rcrl
cmp
sbb
in
test
push
adc
cld
mov
fwait
hlt
addl
int3
lcall
repz
push
ret
and
xchg
testl
push
sbb
xchg
mov
xlat
jno
jecxz
pop
hlt
mov
inc
pop
lea
and
out
pop
sub
aas
pop
leave
iret
mov
cmpsl
imul
sysenter
xchg
scas
xor
fstl
ds
outsb
lods
lods
fprem1
scas
mov
add
and
popf
jecxz
inc
mov
int3
out
sbb
pushf
in
aas
jae
add
pop
and
mov
ret
popa
cmpsb
imul
sub
jae
and
outsb
mov
jnp
cld
sarb
mov
mov
xchg
fistpl
or
in
mov
repz
movsl
pop
scas
lret
push
pop
add
pop
mov
lods
dec
dec
fs
out
jl
lods
or
sti
repz
popl
push
cwtl
mov
jae
jle
push
loop
fdivrs
pushf
jl
iret
or
cmc
mov
inc
mov
fimuls
inc
mov
inc
fwait
out
pop
sub
jg
mov
mov
and
mov
jnp
mov
loopne
cmpl
mov
xor
ss
sarb
cltd
jg
enter
mov
adc
ljmp
jg
cmpsb
scas
lret
flds
and
subb
test
inc
xchg
pop
xor
shlb
scas
push
lock
movsl
nop
pop
cmpsb
ficomps
pop
outsl
leave
jl
mov
lret
inc
orb
cmp
jl
das
mov
enter
aas
loope
movl
xor
push
sbb
pop
test
mov
out
or
lcall
or
adc
inc
pop
push
and
gs
jae
in
xchg
dec
add
cs
mov
inc
cmp
pop
jo
xor
call
inc
mov
inc
pusha
xchg
and
adcb
adc
das
adc
push
and
pop
sub
test
xor
mov
aad
loop
lcall
pop
out
mov
lret
popf
lret
adc
mov
lahf
lods
adc
jbe
and
cs
inc
xor
mov
and
push
mov
scas
je
sbb
dec
push
ds
and
popa
mov
pop
aad
lods
outsb
stos
insl
cmp
sbb
xor
shr
xor
outsl
negb
lcall
in
imul
out
loop
and
mov
lock
pop
or
xchg
popa
insb
xor
test
jae
mov
test
and
push
add
rcll
sahf
cli
scas
dec
popf
insl
push
dec
jge
xchg
jb
add
test
xchg
roll
outsb
dec
into
jg
movb
ret
mov
pop
pop
push
fcoml
mov
adc
xchg
es
clc
xchg
or
cmp
sub
pushf
mov
lds
imul
xchg
orl
call
sbb
in
je
ficoml
jbe
loope
out
xor
fmuls
cmpsb
pop
xor
pop
mov
inc
ljmp
cmpsb
adc
sbb
jno
and
mov
scas
es
scas
movsb
mov
mov
scas
push
sbb
test
sbb
jo
inc
dec
add
loop
mov
jns
test
pop
out
adc
mov
addl
jb
in
jle
fcoms
pop
pop
pop
xor
cmc
jmp
andb
pusha
loopne
or
xor
bound
cmpsl
adc
mov
mov
inc
filds
call
pop
mov
add
jmp
pop
inc
mov
ja
pop
and
pop
cltd
aam
shrb
adc
and
ret
daa
add
push
test
jl
sbb
aad
jg
mov
dec
cmp
data16
shll
sbb
stos
mov
cltd
test
les
lock
xchg
inc
or
fidivrl
mov
xor
rcrb
add
jge
scas
fldl
cli
daa
sti
test
flds
stos
in
pop
xor
ret
out
mov
test
or
sub
jmp
out
xchg
fwait
cmp
mov
cmp
gs
cmp
lret
push
push
mov
jbe
xchg
jg
inc
or
aas
js
and
popl
daa
push
pop
std
jl
inc
inc
jl
out
push
popa
jge
push
mov
mov
mov
xor
xor
adc
push
sbb
gs
jle
jle
or
dec
pop
idivl
push
sbb
sbb
mov
into
adc
sbb
jl
jl
sti
jno
rolb
int
ds
mov
roll
mov
insb
mov
inc
xor
and
or
xlat
cmp
sbb
pop
or
adc
or
mov
jo
sarb
xchg
test
loop
cmpsb
push
pop
push
mov
pushf
xchg
test
mov
cli
jp
push
mov
lret
mov
xor
popf
addr16
xchg
lods
insl
xor
fldenv
cmp
push
pop
push
inc
jae
sub
dec
lret
or
push
or
dec
scas
lods
push
adc
ljmp
inc
fs
scas
xor
sti
test
lret
dec
sbb
mov
out
sub
out
dec
sar
fildl
inc
pop
dec
insl
mov
lods
pop
arpl
movsl
into
ret
mov
sbb
and
add
xchg
outsl
jo
push
ds
test
jmp
jnp
scas
shrl
repnz
lret
sbbl
jns
or
daa
shr
inc
aaa
shll
lods
cltd
mov
jne
popa
jmp
dec
inc
cmp
lock
sub
nop
and
lock
and
mov
enter
roll
loopne
mov
daa
adc
mov
push
mov
psubsw
sbb
inc
movsb
stos
xor
sahf
cmp
inc
sub
xchg
mov
cli
xor
mov
inc
in
xchg
fsts
repz
ret
jne
ficoms
das
nop
out
popa
add
pop
inc
les
ja
popa
faddp
adc
sti
inc
movsl
xchg
andl
xchg
inc
pushf
adc
sbb
sub
cmp
clc
mov
xor
cli
push
dec
sbb
mov
arpl
in
rclb
jns
pop
es
ljmp
cmc
fsubrl
push
xlat
addr16
mov
ljmp
jnp
daa
xor
pop
mov
xor
mov
cmpsl
pop
and
out
cmc
gs
jle
inc
cltd
mov
scas
outsb
pop
mov
stos
jnp
push
and
push
mov
inc
pop
int
jmp
inc
shl
inc
lds
divb
jae
cmpl
mov
xchg
testb
xor
gs
pop
inc
cmpb
and
jo
aad
cwtl
add
mov
out
fmul
dec
in
bound
pop
mov
aas
xchg
dec
in
push
xorb
xor
xchg
in
in
jl
dec
mov
xchg
outsb
test
mov
xchg
out
cwtl
pop
int3
ds
add
test
and
add
push
pop
pop
in
mov
push
mov
sub
in
jae
xchg
and
and
sub
sbb
inc
cmc
cwtl
frstor
aaa
pop
xchg
dec
stos
or
mov
jmp
mov
addr16
sub
mov
mov
jns
les
push
dec
push
mov
fwait
pop
sub
daa
cmpsb
add
mov
push
cmp
push
pop
in
xor
add
cmp
xor
pop
and
inc
cmp
nop
lods
xor
leave
mov
loop
jne
idivl
jnp
or
jg
push
push
fistps
inc
mov
mov
jnp
xchg
pop
js
push
pop
shll
lcall
cs
xchg
add
out
sti
cmpsb
mov
das
aad
mov
mov
xor
jae
ret
mov
jno
adc
add
inc
xor
bound
fisubs
iret
adc
mov
jg
pop
add
mov
and
test
dec
cs
shlb
insb
lret
scas
lahf
aaa
pushf
loop
inc
ffree
push
push
dec
aas
or
popa
outsb
jns
stc
jns
sub
addr16
daa
sbb
lret
movsb
repnz
push
sbb
mov
lahf
scas
jge
popf
lret
pop
mov
mov
mov
mov
xchg
cwtl
add
cmpsb
cli
icebp
fmuls
jb
and
cmc
aas
into
cs
repnz
divl
push
cmc
xchg
dec
sti
mov
xchg
lock
cmp
sub
stc
sub
dec
xor
fbld
pop
mov
jno
dec
inc
pop
inc
repnz
pushf
or
add
jmp
arpl
push
lea
sti
jl
mov
fiadds
fidivrl
xchg
addr16
lea
push
or
push
in
pop
das
daa
cmp
push
mov
dec
aas
aad
aas
add
mov
icebp
jae
rorl
jnp
pop
jns
jns
jp
addb
sub
mov
cmpb
outsl
and
jp
pop
stos
repnz
or
pop
lods
into
pop
inc
xchg
out
xchg
sub
aaa
je
pop
adc
sahf
ja
jmp
fidivrs
and
xchg
xchg
out
jo
inc
movsb
iret
inc
sbb
push
addr16
imul
or
xor
mov
cmp
out
xchg
jmp
fwait
arpl
push
loop
rcrl
inc
inc
pop
jb
addr16
test
ds
push
stc
jmp
xor
mov
add
lea
loop
movsl
filds
mov
and
pusha
aad
mov
jecxz
inc
lods
les
jle
lcall
pop
or
lret
add
xorl
mov
mov
insl
mov
pop
mov
scas
adc
xchg
mov
push
inc
in
sub
daa
cmp
fmulp
jbe
scas
jg
xchg
mov
addb
xchg
popf
movsb
jmp
sahf
mov
and
lret
test
movsl
pop
cmp
repnz
jp
repz
push
cmp
mov
dec
pusha
pop
add
std
dec
mov
mov
rcr
or
mov
pusha
inc
xchg
fnstenv
jmp
jb
push
fwait
mov
outsb
mov
mov
pop
and
dec
adc
sub
dec
fdivrs
popa
insb
mov
inc
stc
pop
adc
jmp
test
mov
pop
hlt
jae
rclb
insb
rcl
xor
cltd
push
dec
mov
xor
dec
adc
xchg
fcmovbe
lods
aaa
inc
arpl
outsb
cmp
sbb
mov
mov
adc
sarl
push
xchg
fsubp
pop
xchg
jp
push
fstp
scas
mov
xchg
mov
scas
insl
pop
or
mov
mov
cs
cmp
cld
test
gs
pop
test
out
mov
mov
aas
sbb
pop
scas
notl
xchg
nop
or
loope
xlat
mov
cmp
dec
mov
fistps
frstor
mov
sahf
xchg
adc
xor
stos
inc
popa
xchg
cmp
or
or
arpl
sub
xor
das
sbb
insb
lahf
sbb
in
cmpsb
jge
push
mov
sbb
iret
in
inc
cmp
pop
idivb
negb
fucomi
adc
mov
xor
in
push
add
xchg
sub
addr16
inc
shrb
lcall
pop
jmp
cltd
daa
lds
movsb
ss
jb
outsl
fwait
sub
scas
fnsave
sti
sub
lea
pop
add
jb
push
xor
sbb
mov
dec
sbb
pushf
stos
sub
in
cltd
lret
push
dec
pop
jle
sbb
sbb
fwait
jle
pop
inc
inc
mov
sbb
clc
into
mov
mov
icebp
outsb
in
dec
inc
or
cmp
popf
fistpl
adc
mov
adc
jg
nop
cs
sub
scas
cmp
popa
leave
pop
xchg
sbb
mov
shlb
in
orb
mov
xor
addr16
imul
pop
pop
in
jmp
dec
xchg
cs
cmc
outsb
and
xchg
inc
add
adc
movsb
push
sub
sub
cltd
pop
es
sub
jns
mov
adc
inc
imul
fwait
mov
and
data16
bound
mulb
fdivrs
arpl
sub
jmp
adc
jns
aaa
lods
repnz
je
data16
cmp
push
sub
mov
call
inc
test
mov
outsl
or
cvttps2pi
cltd
cs
ret
sub
dec
and
test
out
ret
xor
popa
scas
imul
lods
pop
cmp
xchg
loope
adc
scas
sarl
pusha
fsub
mov
mov
das
pop
addr16
or
mov
outsl
xchg
scas
cmpsl
scas
ja
hlt
mov
and
test
sbb
leave
cmc
mov
lret
mov
inc
mov
xchg
pop
adc
clc
mov
scas
adc
mov
in
jae
mov
adc
cmp
lock
sbb
dec
push
xchg
subl
gs
dec
and
mov
or
insb
into
jbe
stos
ljmp
xchg
jnp
in
pushw
inc
es
cmp
sbb
js
ja
js
mov
jp
push
movsb
mov
sub
jl
dec
fcmovnbe
push
mov
imul
jns
arpl
testl
aaa
fwait
inc
add
insl
rcr
loope
pop
pushf
mov
pop
mov
or
rcrl
sbb
loope
or
test
in
cmp
mov
movsl
dec
inc
and
in
dec
xchg
fwait
adc
stc
add
ds
ds
mov
jle
js
mov
jno
mov
test
cmp
pop
sbb
pop
jo
pushf
add
testl
leave
lea
test
repz
sub
dec
je
push
or
pusha
sti
in
xlat
xor
add
push
jecxz
clc
addr16
out
aas
js
xchg
nop
jbe
cs
xor
test
push
xchg
adc
sub
pop
sub
jbe
pushf
sub
mov
mov
testl
jmp
pop
test
movsl
out
movsl
ret
adcl
mov
xchg
xor
inc
leave
cmpsl
rcll
mov
push
xchg
and
jmp
sahf
xchg
pop
loope
sub
inc
sub
arpl
test
lods
ret
mov
jno
mov
jns
pop
pop
dec
sub
popa
cmp
js
xchg
sub
sti
mov
xchg
int3
cmpl
fwait
push
insl
in
testb
fnsave
aaa
or
inc
push
inc
mov
aam
movsl
jmp
inc
inc
lds
xchg
test
pop
aad
cltd
sub
inc
icebp
mov
imul
gs
jg
ljmp
pop
out
adc
xchg
inc
ret
fs
mov
bound
sbb
pop
bound
div
adc
out
dec
lahf
lock
dec
js
das
xor
inc
dec
fsubl
mov
xchg
inc
leave
aam
add
push
mov
sub
pop
aas
sbb
inc
or
ret
pushf
mov
cs
and
xor
fwait
pusha
ret
lods
push
jge
aas
push
dec
lcall
cwtl
imul
dec
xor
jns
jl
pop
mov
push
cmpb
xchg
addr16
aam
sbb
mov
cli
div
add
mov
mov
mov
adc
push
mov
cmp
insb
push
sbb
lods
sbb
add
mov
and
jb
dec
push
int
cmc
add
cmpsl
leave
lds
xor
sub
or
arpl
imul
fstl
ds
das
mov
or
sub
or
xchg
fistl
scas
jge
mov
cwtl
rep
pusha
ljmp
loopne
mov
mov
and
or
mov
cmp
and
mov
out
push
pop
mov
pushf
sub
sbb
lcall
nop
test
push
dec
mov
lods
leave
xlat
sub
jmp
mov
ljmp
mov
jecxz
sbb
sub
adc
sub
aas
lret
rclb
jge,pt
sbb
and
inc
or
xor
cmpsb
rol
pushf
cld
aas
and
lods
loopne
sub
jae
cwtl
mov
data16
pop
jae
sbb
cmp
cmpsb
icebp
adc
lcall
lcall
inc
popf
sub
dec
lods
adc
jmp
sub
dec
mov
sub
lds
jae
fmuls
test
out
aam
sbb
push
lock
repnz
into
mov
sbb
pusha
scas
sahf
dec
sbb
inc
inc
js
popa
add
fcoml
les
xchg
mov
lahf
mov
or
pop
push
pop
add
lock
adc
mov
push
lods
inc
cmp
je
js
outsl
push
insb
dec
mov
nop
mov
sub
mov
ss
ja
popa
stos
js
pop
adc
xchg
jnp
lds
push
daa
mov
pop
jle
add
lock
sbb
inc
or
pop
jge
stc
fxch
jnp
arpl
mov
jb
mov
xchg
idivb
test
inc
mov
test
push
in
jle
add
int3
stos
addl
daa
sbb
mov
popa
xor
mov
movsl
jne
and
daa
shll
pop
adc
adc
mov
xchg
or
popa
loopne
push
addr16
notb
cld
sbb
push
cmpsb
imul
inc
jno
xchg
xor
adc
out
jae
bnd
loop
xor
push
enter
mov
nop
addb
fucomip
ja
add
adc
add
fisubrs
psraw
push
xor
test
cmp
add
jo
loopne
stos
jns
lahf
xor
pop
mov
fdivs
aas
out
sub
mov
sbb
arpl
push
fnstsw
call
or
mov
sbb
mov
pushf
jae
lock
test
in
cs
sbb
insl
scas
add
orl
popa
lock
sub
dec
push
jbe
dec
sbb
mov
shrb
mov
sub
cmp
stc
ja
cmpsl
outsl
jecxz
pop
lds
dec
sahf
cmc
jge
jnp
add
jns
aam
xchg
add
test
fcmovbe
je
mov
push
ss
mov
and
add
add
mov
sbb
xorb
test
out
dec
ss
mov
cmpsl
ja
dec
frstor
scas
sbb
outsb
jle
push
mov
push
mov
js
push
cmovnp
stc
sbb
push
ljmp
jp
adc
push
icebp
test
cmc
mov
rcl
cli
push
bound
cmp
data16
test
mov
xchg
ror
adc
adc
mov
push
pop
push
dec
sti
sub
lock
mov
xchg
bound
jb
into
cmpsl
cmp
mov
pop
xchg
pop
adc
add
jae
filds
ss
cmp
imul
xor
mov
sahf
pop
rcrb
popa
dec
inc
or
jnp
arpl
clc
jg
add
faddl
jle
mov
out
push
rclb
ja
mov
popa
jmp
xor
sahf
pop
popf
fisubl
aam
pop
gs
daa
push
jecxz
dec
dec
sub
mov
pop
cltd
xchg
push
mov
xchg
push
pop
data16
js
push
fsubp
loopne
mov
mov
nop
ret
xchg
aaa
daa
popa
ret
ret
push
jae
ss
inc
push
test
jmp
ja
fdivs
push
jo
mov
mov
xor
mov
cmp
mov
mov
mov
sub
movsl
xchg
out
test
ret
mov
cmc
lret
lcall
pop
fwait
cs
or
call
pop
shlb
ret
pop
scas
pop
xor
add
mov
shrb
cmp
cwtl
jmp
cmp
mov
inc
add
cli
mov
sahf
adc
aaa
and
sub
hlt
test
sti
cmp
inc
mov
push
pushf
fs
cld
cwtl
dec
mov
push
popa
adc
stc
imul
mov
imul
scas
and
mov
jecxz
lret
jp
adc
movsl
loop
movsl
orb
and
mov
mov
mov
xchg
adc
imul
data16
call
mov
out
fidivs
add
cld
xchg
xor
das
adc
out
test
mov
ficoml
mov
push
int3
scas
push
inc
push
out
and
das
cmpxchg
mov
sub
inc
push
pop
dec
push
pop
inc
or
pop
decl
or
xchg
sbb
xchg
dec
fstpl
sarl
loopnew
ss
enter
lret
jbe
out
aas
add
sahf
aas
sub
jno
les
mov
xchg
cmpsb
ss
dec
sbb
pop
jae
lods
adc
xor
setb
fstp
dec
sbb
pop
dec
ret
sbbl
aas
jl
addb
ss
add
push
fiadds
arpl
dec
dec
inc
gs
out
jecxz
fwait
sti
fidivl
xchg
out
dec
cmp
xor
sub
test
mov
or
cmpsl
jmp
imull
jae
mov
cmc
shl
nop
hlt
add
cs
xchg
dec
mov
push
in
sbb
dec
pop
scas
out
test
push
ljmp
cwtl
sub
lods
xchg
cs
je
outsb
pop
or
lahf
mov
dec
shlb
mov
into
inc
aad
aaa
arpl
xor
jmp
les
ds
ljmp
repz
ds
push
lea
cmp
je
frstor
cmc
jmp
cmpsl
jno
lahf
pop
cmp
popf
push
mov
repnz
rcrb
hlt
icebp
add
and
pusha
movsb
mov
incb
pop
addb
stc
stos
cmp
fldt
js
jns
fnstenv
dec
sbbb
sub
testb
ljmp
stos
mov
and
dec
mov
lahf
mov
inc
and
loopne
shrb
loope
pop
cwtl
fildl
in
lds
dec
mov
shl
mov
jg
lods
and
cmpl
cmp
and
loope
ja
cmc
xor
sbb
push
push
mov
mov
imul
iret
adcl
and
cmpsb
jo
sbb
jmp
cmpsb
ds
arpl
or
jl
inc
or
mov
pop
lahf
jnp
fidivs
sahf
jns
les
adc
fisubl
xchg
lods
insb
sti
sub
pusha
data16
mov
push
xchg
mov
xchg
xchg
sarb
sub
xchg
mov
sbb
shll
fldcw
nop
xchg
jp
pop
adc
dec
mov
gs
jmp
nop
jl
insl
inc
test
inc
and
ljmp
mov
pop
iret
mov
iret
mov
jo
sbb
fstl
cs
push
fs
xchg
rcr
mov
inc
sbb
xchg
mov
mov
inc
add
pushf
mov
fs
sbb
push
repnz
cmp
push
mov
lcall
call
bound
push
or
and
aaa
inc
push
dec
or
push
xor
in
inc
or
lods
add
mov
popf
sub
jmp
pop
sub
pop
xchg
insb
scas
stos
mov
popa
int
pop
icebp
in
rorb
mov
and
xor
ljmp
sub
mov
imul
test
pusha
add
adc
jle
push
dec
mov
xchg
movsb
inc
mov
leave
or
adc
sti
in
xchg
aas
mov
inc
and
dec
out
inc
pop
daa
add
fnstcw
push
and
daa
pop
inc
jle
orb
pop
fnstcw
mov
push
iret
dec
sahf
add
subl
hlt
adc
vpmaddubsw
pop
pusha
jle
dec
cmp
int3
sbb
pushf
mov
push
xor
jecxz
les
jb
stos
dec
inc
ss
dec
xchg
push
aas
push
cwtl
imulb
mov
and
rclb
pop
out
cmp
add
pop
mov
testb
add
pushf
mov
fbld
sub
xchg
outsb
imull
cli
lret
dec
adc
push
pusha
mov
js
mov
xchg
es
aam
mov
imul
mov
in
jle
jno
adc
aad
dec
fisttpll
std
jb
fincstp
sub
hlt
cmp
insb
dec
mov
xchg
push
sub
pop
push
jo
aas
mov
pop
xor
popa
das
cmp
cli
add
out
sub
mov
xchg
lock
sarl
cli
sub
pusha
mov
popf
mov
daa
jg
outsl
out
inc
cltd
pushf
aas
pop
dec
and
scas
in
repz
sub
add
mov
xlat
scas
xchg
cmp
jmp
stc
test
fistpl
mov
pop
out
add
dec
scas
stos
mov
mov
mov
pop
jbe
jae
push
dec
push
cmp
mov
mov
cmp
lahf
and
mov
jl
pop
movsb
data16
fs
test
push
aaa
xchg
fistps
testl
movsl
fisttps
test
scas
ret
pop
adc
mov
push
in
aaa
cmpsl
inc
push
xlat
sub
es
ja
dec
mov
lock
imul
fucomi
mov
jg
mov
mov
sbb
in
pop
or
cmpsb
push
dec
lock
push
lret
ljmp
inc
addr16
stos
mov
movsb
out
loope
pop
mov
ret
pop
packuswb
xchg
push
stos
add
push
push
sbb
sbb
sub
jbe
sbb
das
lock
inc
push
fiaddl
pop
int3
push
add
push
xor
adc
scas
cmp
mov
aaa
scas
test
mov
scas
sbb
loope
fnstcw
shll
push
push
daa
pop
or
xor
fidivrs
out
dec
popa
ret
mov
inc
pop
push
and
sub
sub
inc
repnz
ds
xchg
push
repnz
popa
inc
push
outsl
ret
rorb
aad
push
jmp
adc
mov
jle
inc
add
sub
push
popa
sbb
xor
fbstp
pop
mov
jno
add
jmp
sub
pop
inc
cmp
mov
icebp
sub
imul
int
push
dec
inc
lods
xchg
out
mov
lret
or
xchg
aaa
mov
outsl
lahf
outsl
scas
and
xor
push
push
lret
mov
jnp
sub
inc
repnz
fiaddl
dec
inc
test
and
cmpsb
jae
or
fs
outsb
and
cmp
fiaddl
dec
call
or
jg
pop
addl
imul
imul
je
jmp
lcall
js
mov
out
sbb
push
lods
cmpsb
sub
mov
push
add
inc
fstpl
adc
rcrl
cmpsb
pop
cmp
mov
xchg
cmp
xorb
sub
fidivrs
pushf
push
rol
mov
dec
and
jp
daa
push
shll
inc
adc
xchg
sbbl
adc
xlat
fisubrl
xor
inc
mov
inc
inc
addps
pop
pop
les
fbld
and
jbe
enter
scas
sbb
insl
call
push
divl
mov
bound
xor
test
jp
pusha
xchg
mov
rclb
stos
out
lret
cmp
gs
push
xchg
fistpll
add
add
jp
scas
imul
cmpb
clc
dec
add
jne
sbb
stos
aad
inc
enter
pushf
lret
inc
xor
out
fcomi
push
inc
imull
mov
fistps
repnz
mov
sub
mull
fadds
jae
faddl
push
mov
jg
aad
inc
cs
cmpsl
mov
gs
mov
cmp
add
xor
jno
outsl
outsl
xor
lds
jb
mov
xor
jp
mov
jo,pn
popl
and
test
jbe
insl
clc
push
xchg
aas
and
mov
push
popa
pop
pop
jae
adc
cmc
subb
adc
popa
int3
nop
xor
roll
lahf
subb
stos
loope
inc
xchg
mov
int
xor
mov
xlat
fs
xadd
or
xchg
scas
xchg
dec
xchg
jnp
jecxz
sub
lods
or
lods
je
ret
push
adc
nop
negl
dec
xor
jmp
push
and
mov
fsts
idivl
xchg
inc
xlat
add
test
jg
jmp
push
shll
in
jno
call
xchg
xor
xchg
push
sbb
dec
fs
ljmp
mov
cltd
pop
fwait
les
sbb
mov
mov
jbe
add
and
mov
jo
push
mov
fcoms
add
sub
xor
in
and
pop
add
pop
test
mov
cmp
dec
or
mov
sbb
rol
inc
xchg
cli
dec
sub
mov
add
es
popa
sbb
leave
fnstcw
pop
mov
in
and
jg
add
pop
bound
cmc
sub
arpl
int3
or
mov
jns
cltd
outsl
jb
cmp
dec
loope
jge
push
cld
xor
dec
movsb
out
insl
sub
mov
inc
aas
imul
xor
push
cli
lea
mov
repnz
jecxz
and
sti
insl
mov
pop
jecxz
xorl
inc
aas
daa
inc
mov
loopne
daa
out
lea
frstor
push
and
push
fcoms
dec
loopne
inc
aam
std
lret
es
mov
adc
das
xor
dec
add
in
fcoms
aaa
rcl
adc
jae
sbb
out
xor
pop
jae
stos
outsb
inc
sbb
add
and
push
lods
leave
push
lahf
movsb
fsubl
sub
mov
lock
fldl
mov
inc
push
in
mov
pop
push
sbb
daa
subb
repz
dec
test
lods
xor
rcll
jbe
mov
dec
mov
xchg
movsl
pop
cmp
std
popa
jmp
cmc
arpl
and
adc
push
mov
mov
dec
scas
jmp
fnstcw
sbb
jae
cmp
mov
mov
cmpsb
imul
mov
sub
jmp
shll
aad
cmpsb
outsb
jno
push
sti
imul
adc
mov
or
into
shrb
aaa
aas
xor
xchg
lahf
push
cmp
jecxz,pt
xchg
dec
mov
sub
cmp
mov
mov
out
pop
xchg
jecxz
stc
add
mov
sub
lcall
jb
sbb
xor
sub
xchg
pop
mov
bound
sbb
aaa
sahf
mov
ret
in
ret
sti
out
sub
scas
xor
inc
test
inc
lods
dec
aas
push
push
addr16
adc
icebp
inc
mov
sbb
inc
jbe
test
xor
xchg
or
jmp
data16
jecxz
jnp
sarl
ss
pop
xor
lods
insb
mov
cmp
xchg
cld
shrl
lds
pop
xor
dec
dec
and
fisubrs
sub
repnz
sti
adc
or
pop
cld
push
out
sti
xor
rorl
add
sub
inc
pushf
loop
mov
push
xlat
inc
xor
rcrb
add
pop
jmp
jno
ficoms
nop
imul
xor
xor
out
mov
inc
daa
cld
daa
pop
sub
inc
pop
adc
rorl
sub
cmpsl
pop
mov
lahf
xlat
lcall
dec
or
fadds
arpl
fistpl
es
les
add
scas
inc
dec
inc
repz
add
sbb
sbb
cmp
lcall
add
aaa
shlb
ret
scas
cltd
test
addr16
jg
les
cmp
fcmovnu
rcr
xchg
orl
cmp
push
call
pusha
das
lret
pop
ss
cmp
rolb
jmp
inc
dec
pop
daa
adc
pop
into
cmpsb
or
and
mov
movsl
mov
ret
sarl
pop
stos
mov
les
lds
arpl
lea
loope
pop
jo
sub
fbld
stc
mov
mov
pusha
jo
int3
shrl
or
mov
cmc
dec
add
sbb
sub
cmpsl
dec
xchg
mov
dec
daa
push
sbb
fdivrs
cmpsl
mov
dec
jb
test
fdivl
cmpsb
mov
adc
fisttpl
pop
inc
cmp
loope
xor
lock
cmp
lea
sarb
orl
push
add
push
in
add
xlat
mov
popa
imul
popa
scas
sub
aas
jbe
and
lods
xor
xor
leave
fdivs
repnz
jecxz
or
dec
lds
cmp
enter
scas
push
mov
push
lahf
jge
add
pop
mov
push
dec
in
lea
lahf
pop
dec
stos
test
call
cwtl
lock
fmull
les
mov
mov
test
outsl
adc
sarl
pop
scas
pop
xor
inc
fwait
data16
cmp
inc
cld
int3
jnp
mov
pop
cmp
push
mov
push
mov
sub
xchg
and
repz
add
lods
fadd
push
push
jb
xchg
push
hlt
scas
fbstp
test
int3
pop
jle
xchg
adc
xor
and
push
scas
mov
xchg
cmp
cs
sbb
mov
daa
mov
mov
arpl
pop
cmp
push
fdivs
pop
sbb
sbb
lods
jmp
add
inc
inc
push
inc
stos
pop
pop
cmp
add
cmp
mov
adc
xchg
popf
insb
cli
xchg
xchg
sub
stos
sub
incb
fisubrs
outsb
push
pop
xor
sbb
dec
addl
jle
bound
push
ficoml
add
ja
mov
negl
or
pop
out
popf
fimull
movsl
outsb
push
fwait
cmpsb
xor
out
push
inc
push
repz
fisttpll
pop
cmpsb
pop
xchg
inc
sarl
cmp
jb
icebp
pop
xor
mov
push
aad
mov
dec
shlb
imul
sbb
lahf
xchg
ja
jmp
arpl
repz
dec
test
ja
mov
push
out
lahf
fistpl
xchg
es
sub
sahf
test
lds
mov
ds
dec
daa
fstpl
hlt
icebp
ret
leave
dec
mov
pushf
jo
xor
jae
jmp
and
xor
stc
and
add
mov
sub
jns
aas
dec
pop
add
jge
je
mov
pop
jp
mov
mov
sbb
sub
sbb
lods
mov
add
dec
pusha
cmpl
jno
add
mov
mov
sub
pop
cmpsb
cltd
das
jns
adc
or
and
sbb
mov
mov
js
add
dec
jno
sub
or
cmpsb
dec
cmpsb
or
inc
negb
mov
in
dec
mov
sub
stos
fwait
and
xrelease
mov
cmpsl
jne
movsb
out
testb
les
sbb
stos
jecxz
scas
sub
ljmp
jecxz
inc
xchg
or
insl
mov
imul
std
out
mov
mov
nop
cmpsb
xor
mov
adc
mov
fs
or
shll
call
sahf
or
sub
jae
scas
mov
sahf
cmpsl
cli
jle
inc
mov
ds
andb
jle
pop
mov
hlt
inc
lods
lret
jmp
inc
rolb
xchg
ss
lea
push
fnsave
inc
jmp
cmp
xor
sbb
lea
jnp
test
cmp
ja
imull
mov
dec
int3
push
sbb
imul
pop
and
fnstsw
mov
mov
bound
arpl
mov
push
jle
pop
aam
mov
pop
shrb
out
lds
dec
popf
push
add
lret
stc
push
ret
cmpsb
shll
inc
cmp
pop
insl
or
sub
xor
movsb
pop
add
jo
push
jnp
sbb
inc
dec
iret
mov
daa
push
iret
jmp
cmp
jmp
arpl
add
out
popa
fistpll
jae
jo
movsb
adc
jo
movsl
mov
sbb
cmpsl
lret
pop
dec
insb
leave
push
imul
xor
jb
fisubrl
jp
mov
mov
movsl
std
adc
out
xor
test
iret
lock
jbe
dec
jl
daa
loop
sbbb
or
cwtl
pop
decl
pop
and
mov
mov
inc
lahf
sbb
fwait
clc
xlat
mov
jp
scas
add
mov
call
mov
mulb
inc
lods
stos
pop
in
pop
jne
outsb
addr16
sub
mov
cs
aad
in
cmp
stos
dec
addr16
xlat
cld
mov
push
mov
les
fcom
xchg
les
mov
cmp
cmp
ds
inc
daa
jl
lock
adc
and
adc
mov
mov
jp
adc
rorb
sub
adc
int3
stos
dec
push
jmp
pop
hlt
cmpb
xchg
sub
push
sub
xchg
sub
push
mov
cwtl
dec
xor
pop
loopne
sbb
ljmp
out
mov
or
jle
adc
aaa
inc
divb
inc
mov
push
inc
dec
cwtl
push
in
sbb
sbb
or
in
cmp
imul
mov
int3
popl
pop
popf
in
pop
push
jno
dec
pop
cmc
cmp
ds
es
jo
gs
fadd
daa
pop
pop
in
inc
pop
or
xorl
ss
stos
in
mov
fwait
arpl
imul
mov
pop
mov
cwtl
mov
and
or
test
stos
imul
mov
pushf
sub
mov
aaa
mov
jne
fdivs
pop
ds
jb
mov
les
mov
xchg
movsl
mov
mov
leave
pop
hlt
sub
dec
fdivl
add
and
out
push
jb
in
and
push
or
ja
mov
cwtl
xchg
push
sbb
mov
ret
jo
sbb
inc
rclb
pop
jbe
dec
add
mov
ficoml
in
aad
ljmp
stos
and
jg
adc
into
mov
jp
jp
roll
sbb
fstpl
mov
cmpsb
push
inc
in
mov
push
inc
push
mov
jge
int
pop
xor
movsl
and
or
nop
cmc
add
jb
pop
popl
imul
push
cmp
push
push
fcomi
stc
aad
cmp
fs
lods
xor
sub
sbb
jno
sbb
mov
mov
fs
dec
neg
pop
call
sbb
adc
inc
mov
inc
cwtl
or
test
xchg
lcall
stos
xorb
cli
cmp
scas
xchg
dec
inc
adc
frstor
cmpsb
jb
and
test
jne
adc
lods
popf
mov
jbe
mov
sub
xor
pmulhw
mov
push
outsb
out
lret
scas
es
outsl
or
outsb
divb
popf
lods
loopne
iret
xchg
into
iret
cwtl
bound
mov
lods
repnz
mov
fiaddl
lods
ficoms
data16
and
dec
push
addr16
inc
and
icebp
pop
jmp
and
jmp
cmpsl
or
fwait
ret
lock
and
loope
mov
rorl
imul
notb
insb
xchg
scas
jge
and
insl
sub
imul
xchg
push
daa
cmp
or
addr16
ds
lahf
mov
shlb
xchg
cmpl
jb
addr16
sbb
dec
pusha
jbe
rorl
jecxz
jae
xchg
les
adc
pop
and
push
std
js
in
insb
inc
into
jae
fs
scas
dec
cmp
test
into
xchg
or
adc
pushf
add
xchg
aas
pop
gs
cs
aas
mov
sahf
lcall
stos
sbb
dec
adc
pop
xor
xor
mov
mov
sbb
mov
adc
jb
std
lock
ret
test
outsb
pop
dec
dec
cmp
or
mov
loop
cmpsb
ds
push
mov
jae
icebp
aam
idivl
and
data16
rcr
inc
cmp
out
lods
in
pop
push
adc
pop
push
push
xor
jge
andb
packsswb
outsb
or
xlat
adc
arpl
adc
in
jp
movsb
cwtl
das
aad
imul
test
iret
addr16
addr16
shld
lock
rolb
lahf
andb
dec
fidivrs
stos
and
xchg
add
jne
xchg
jp
jo
pop
cmpsb
roll
dec
fiadds
mov
xor
xor
clc
inc
and
shl
and
int3
pop
inc
les
sbb
test
dec
pop
mov
jbe
add
dec
push
rolb
jo
push
mov
push
pop
flds
mov
addr16
xchg
xor
aad
push
repz
lods
sbb
mov
fsubr
sub
lock
mov
mov
pop
ss
jp
sub
incb
cmpsb
mul
adc
xchg
sbb
out
cmpsb
cltd
aam
jne
sub
jae
mov
xor
push
add
mov
dec
dec
inc
pop
add
dec
repnz
add
loop
push
out
fs
xor
xor
lret
and
adc
je
popf
in
mov
inc
imul
in
aas
push
sahf
lret
ds
xor
test
cmp
fsubr
push
xchg
inc
dec
mov
pushf
imul
inc
or
repnz
cs
inc
inc
mov
mov
gs
lods
xchg
jnp
scas
fsubs
sub
fcmovbe
iret
jo
jae
adc
fdivl
mov
and
decl
movsb
dec
dec
xor
jnp
or
mov
adc
mov
xchg
aaa
stos
sub
jbe
daa
negb
add
fnsave
mov
rcll
pushf
add
sbb
dec
scas
and
mov
pop
and
mov
pop
xchg
cmp
daa
push
imull
movsb
int
scas
sub
les
out
arpl
daa
cmp
stos
sub
mov
inc
loope
push
push
dec
imul
xor
mov
jp
cmpsb
cmp
xor
mov
mov
lret
mov
out
daa
xchg
mov
and
cmc
push
repz
in
push
cmp
jo
es
rorl
popf
rcr
push
stos
pop
dec
pusha
push
loop
sbb
xchg
repz
aad
aam
add
xchg
lods
stos
out
cmpsl
and
add
js
in
enter
idiv
mov
ret
mov
mov
adc
fdivs
cmp
push
sbb
xchg
stos
dec
fwait
mov
fldcw
cmp
sbb
xlat
inc
std
mov
rcll
xor
pusha
push
arpl
mov
sbb
std
mov
icebp
adc
sbb
and
mov
sbb
push
nop
stos
jp
cmpsb
aad
mov
push
lret
jae
pop
enter
out
mov
dec
pop
int3
aad
cmp
cmp
scas
leave
int3
sub
into
and
sbb
fidivrs
stos
sahf
daa
ret
mov
sub
adc
push
mov
xchg
cmpsb
dec
mov
push
lret
mov
mov
sub
xchg
gs
lcall
aas
fnstenv
add
ret
int3
push
dec
push
es
and
jmp
sub
repnz
adc
adc
jmp
push
xor
div
cmp
push
jnp
repz
loope
stc
lahf
popa
adc
mov
pop
leave
sbb
push
pop
fiadds
daa
jno
dec
and
adc
push
daa
mov
add
push
aas
je
mov
gs
xor
loopne
or
cli
xor
imul
inc
sub
xor
jae
jne
inc
divl
push
and
dec
pop
pop
gs
lcall
pop
data16
out
rcr
bound
jbe
and
mov
inc
dec
xchg
aas
scas
movsb
lea
dec
loop
outsl
mov
in
xchg
out
es
mov
push
pusha
lea
int3
xor
or
lods
mov
xchg
out
sbb
inc
pop
fs
jbe
mov
mov
mov
pusha
add
loopne
jle
fwait
jno
lcall
push
mov
mov
es
jns
push
sbb
push
mov
test
int3
jge
shrb
scas
pop
pop
fsubl
push
jbe
cltd
fidivl
xor
lret
push
jno
aaa
mov
scas
xchg
dec
out
jno
in
pop
cmp
dec
jno
divb
adcb
into
add
test
mov
out
mov
popf
sbb
xchg
out
ffree
std
xchg
push
cltd
pushf
scas
xchg
enter
adc
push
dec
lds
add
mov
mov
and
outsb
ljmp
cli
shr
fsubl
sub
loopne
xchg
mov
jne
mov
in
mov
mov
pop
adc
std
aas
dec
push
and
or
sbb
xchg
inc
shr
push
movsl
cli
sbb
sbb
fcoms
cli
setae
fnstcw
mov
jb
adc
inc
push
pop
enter
orl
mov
roll
ljmp
jne
or
lahf
in
xlat
cmc
out
lods
jmp
jne
outsl
xchg
xor
lods
dec
cmp
pop
test
dec
mov
rcrl
imul
pop
bound
fstps
pop
lea
inc
push
out
je
adc
fidivs
xchg
mov
push
mov
fldt
arpl
gs
cmp
les
je
bound
mov
and
push
pusha
add
scas
or
mov
aaa
sub
mov
mov
pusha
lds
pop
push
sub
add
dec
xchg
cmpsb
outsl
add
xor
dec
or
sbb
out
cwtl
xchg
mov
stos
daa
loopne
imulb
addl
data16
jp
movsb
adc
lock
pop
dec
jb
mov
adc
test
icebp
mov
sub
ds
dec
cmpsl
pushf
mov
sahf
fcoms
cs
xor
jae
jle
cmp
push
mov
xor
add
push
pop
push
cltd
ja
sbb
pop
scas
mov
inc
sbb
adc
and
xchg
pop
jle
les
js
push
stc
xor
daa
mov
inc
daa
cltd
leave
sub
jle
clc
jno
pop
jmp
mov
and
mov
stos
push
inc
outsl
in
mov
dec
or
xor
sahf
push
leave
pop
insl
mov
dec
repz
call
pop
xchg
mov
fimuls
xchg
jmp
in
dec
sub
pusha
out
je
pop
leave
xchg
shl
and
add
fwait
mov
sub
or
mov
and
addb
mov
outsb
inc
test
pop
jmp
xchg
loopne
inc
adc
int
outsl
iret
mov
pushf
nop
xchg
mov
subb
inc
jno
das
inc
jge
push
notb
fs
repnz
fsts
dec
or
xchg
xchg
pop
mov
and
push
jmp
jb
dec
or
fisubl
xchg
push
popf
and
insl
adc
mov
shr
sahf
loop
lods
ret
loopne
jns
inc
fdivs
xchg
push
or
sahf
sbb
mov
mov
sub
loopne
shll
inc
xor
lret
in
loop
adc
stos
mov
or
insb
stos
clc
pop
sahf
in
movl
repz
fdivl
xor
test
imul
mov
xor
push
out
stos
xor
pop
cltd
xor
xlat
xlat
jne
mov
pop
sbb
into
xor
loopne
sahf
inc
repz
wrmsr
inc
adc
jns
xor
or
out
mov
in
pop
xchg
mov
sbb
and
mov
and
ljmp
xor
inc
dec
jecxz,pn
clc
daa
dec
cmp
push
mov
xor
es
pushf
and
fbstp
sbb
jg
insb
mov
scas
mov
lret
es
notb
mov
inc
jmp
daa
pop
jne
jae
ljmp
mov
xor
test
arpl
pop
mov
cmp
or
push
xchg
ret
mov
inc
andb
push
pop
jae
pop
stos
adc
loope
lock
xchg
mov
dec
fs
aam
clc
daa
test
mov
ds
push
lea
pop
pop
xchg
clc
mov
fnstenv
imul
and
fsubrs
xor
add
mov
sbb
adc
xchg
mov
fnstenv
push
test
dec
dec
lea
dec
mov
cmp
xchg
scas
sahf
cmpsb
jne
add
repnz
andb
cmp
push
jb,pt
cmp
mov
aad
cmpsl
and
rorl
daa
jmp
mov
movb
adc
xor
mov
xchg
pop
ret
aam
inc
dec
add
cwtl
pop
xor
and
test
sub
sub
pop
xor
sbb
addr16
mov
out
inc
div
mov
fsubp
mov
inc
data16
inc
mov
mov
xchg
inc
sub
mov
pop
cltd
inc
lahf
sbb
nop
cmp
sbb
jne
cmpsl
bound
aam
xlat
lret
cmp
xor
jbe
mov
adc
mov
insb
push
mov
xchg
lds
jno
out
clc
xlat
insb
sar
mov
and
jnp
cmp
mov
ljmp
insb
fiadds
and
rcrl
push
pop
ret
fsubs
jle
inc
sbb
adc
push
fcmovne
out
jne
inc
add
xchg
stos
xchg
dec
mov
adc
pop
push
out
mov
adc
in
mov
mov
lea
out
push
shlb
push
inc
or
xor
aas
sbb
mov
or
movsb
sbb
shlb
sbbl
ret
inc
cli
js
adc
lods
dec
lcall
sti
push
fisttpll
and
movsl
aaa
push
lods
mov
mov
xchg
inc
gs
dec
mov
mov
stos
ss
aas
inc
xor
movsl
mov
fisubrs
and
jae
and
aam
orb
sub
les
sti
mov
insl
ret
xor
dec
inc
dec
mov
jo
cmp
rorb
dec
lcall
imul
jbe
lods
stos
jae
jge
jne
xor
aad
call
stos
andl
in
jne
daa
mov
ret
subl
jne
mov
aad
call
js
sbb
pushf
loope
test
mov
push
mov
cwtl
roll
idivb
dec
dec
bound
mov
rcr
jmp
out
dec
push
cld
dec
push
iret
adc
dec
rcrb
and
xor
xor
and
lret
mov
insl
and
js
imul
jne
or
fisubs
adc
out
cmp
stos
sub
jg
mov
jp
xorl
daa
in
add
cmp
xchg
sbb
es
pop
push
adc
xor
and
mov
movsb
mov
push
ljmp
repnz
inc
insl
test
test
xchg
aad
xchg
or
cwtl
or
dec
xchg
xchg
pop
cld
test
mov
adc
fs
mov
lea
jg
testb
inc
mov
add
insl
cmp
lahf
out
mov
in
test
jge
mov
xchg
and
notl
movsb
lahf
mov
pop
and
popf
jo
std
loope
idiv
divb
rcrb
jns
cmp
dec
adc
andb
and
xor
lret
imul
arpl
jne
push
push
or
xchg
push
xchg
cmp
vmovdqa
xor
mov
pop
mov
cmp
aaa
fdivs
pop
mov
push
loopne
pop
jne
rcrl
inc
xor
mov
pop
orl
aaa
ds
sbb
push
addr16
dec
fsubl
sbb
and
cld
inc
xor
in
cmpsb
and
xor
cmp
xchg
dec
or
int
sbb
inc
push
or
or
loope
fistps
xchg
cmpsl
daa
and
hlt
jl
frstor
cs
out
fisubrl
lcall
lea
adc
rorb
jl
inc
bound
push
dec
mov
rolb
pusha
cmp
or
cmc
lods
loopne
jns
pop
xchg
jmp
popf
pop
fdivl
dec
push
pop
mov
stos
or
mov
fimuls
lods
je
mov
repnz
outsl
cmc
popa
xor
sahf
movsb
add
fistl
sbb
lcall
mov
ljmp
xchg
pusha
mov
enter
pop
mov
enter
mov
inc
in
cmp
push
lahf
rcrl
jmp
lcall
movsb
jne
out
xchg
out
dec
xor
push
inc
sub
xor
adc
mov
arpl
lcall
shlb
cmp
loope
mov
in
mov
push
mov
push
jge
dec
xchg
or
mov
dec
xor
pop
aaa
int3
push
jl
aas
mov
ljmp
test
sub
jb
popf
sub
fisttpl
bound
mov
fwait
jp
pop
inc
rcrl
pop
sub
jno
fistps
lret
addr16
pop
and
cmpsl
subb
jg
lds
jne
cli
sbb
lock
xor
pop
cmp
xor
lds
xor
rcl
fs
pusha
jg
cmpsb
jb
mov
fimull
call
mov
xchg
loop
xor
pop
xor
cs
imul
xchg
mov
adc
cmp
sti
dec
fisttpll
push
out
insl
fldl
fcomi
sub
adcb
aas
movsl
add
ja,pt
jbe
hlt
mov
imull
gs
sub
pop
mov
popf
popa
push
jecxz
fidivrl
lock
lret
stos
xchg
and
and
pop
lea
dec
or
push
lods
loope
adc
fdivs
add
in
fmuls
jge
popa
and
out
ss
and
mov
or
fcomi
inc
add
push
mov
pop
inc
decb
icebp
movsb
xchg
test
jecxz,pt
push
jg
sub
or
xchg
mov
test
jmp
or
pop
adc
dec
or
fsubl
stos
jmp
repnz
mov
pusha
pop
push
insb
std
lcall
adc
or
stc
pop
cmp
hlt
aaa
test
add
jno
aaa
push
and
push
and
aas
pop
in
jbe
sub
or
popa
pop
icebp
pop
jnp
inc
lahf
cmp
sub
popf
fwait
dec
push
div
mov
push
and
cmp
mov
jno
jle
jmp
cmpsb
mov
mov
lock
cmp
dec
mov
scas
inc
adc
fdivs
add
out
mov
push
mov
push
adc
mov
xchg
movsb
popf
imul
sarb
push
push
mov
push
xchg
lock
repz
jge
repz
loope
sbb
cmc
or
jg
test
mov
aad
mov
or
out
inc
pop
xor
pop
and
icebp
dec
addl
sbb
ret
push
adc
mov
cs
inc
adcl
sub
mov
pop
xchg
bound
adc
lcall
push
shll
push
std
dec
jecxz
jmp
out
sti
pop
imul
mov
push
pop
adc
cmpsl
dec
mov
dec
adc
sbb
push
push
ds
std
mov
sub
pop
cmp
stos
rdmsr
cmp
sub
sub
cmp
ja
add
stc
cs
adc
and
mov
fnstenv
bound
nop
sub
mov
mov
shlb
outsl
mov
adc
rorl
mov
xor
popf
jle
pop
adc
gs
push
jge
xchg
les
cmpsl
inc
sub
imul
push
lret
fisttpl
je
mov
stos
add
xchg
in
arpl
cltd
pop
adc
int
aas
in
fsubrs
mov
mov
mov
cs
cmc
out
pop
push
ret
mov
or
or
std
clc
aad
xchg
addr16
push
daa
xchg
outsl
and
mov
jge
scas
repnz
xchg
clc
mov
inc
mov
cli
jmp
inc
outsb
dec
mov
add
mov
es
jge
hlt
repnz
adc
bound
movsb
daa
mov
gs
ss
cmpsl
adcb
hlt
add
mov
inc
lea
mov
imul
jecxz
add
pop
and
adc
rol
push
stc
cmp
icebp
inc
movsl
push
mov
dec
mov
mov
rorb
cmc
xor
repnz
call
xchg
mov
push
shll
push
outsb
push
lea
mov
xchg
push
aam
push
loop
in
inc
pop
mov
dec
dec
stc
pop
les
jge
in
sbb
ljmp
mov
daa
sbb
mov
leave
and
cld
cmp
cmpl
loopne
jle
and
push
mov
gs
int3
repnz
shll
icebp
add
lret
rclb
inc
call
in
ljmp
mov
jge
mov
xchg
aas
mov
loop
xchg
in
in
push
pop
mov
out
loopne
pop
scas
rcl
dec
in
scas
movsl
les
fdivrs
int3
jnp
insl
popf
inc
fwait
dec
daa
fcomps
pop
sub
pop
jp
mov
and
pop
outsl
dec
jge
xor
ja
or
shlb
loope
divl
testb
aas
lcall
xor
adc
jle
in
out
dec
loop
and
leave
pop
shlb
lods
arpl
inc
and
cmp
mov
jno
iret
xchg
push
xor
cmp
mov
xchg
movsl
xchg
pop
out
jbe
jae
xchg
add
inc
shrb
pop
adc
rcrl
ja
pop
imul
push
scas
jmp
push
inc
mov
inc
fucomi
dec
ja
and
add
dec
lea
scas
lods
push
iret
add
xchg
pop
mov
rclb
push
daa
je
cltd
mov
sbb
jno
out
sbb
sbb
jbe
out
push
jg
adc
loop
loop
test
adc
jecxz
aaa
daa
add
pop
and
xchg
clc
mov
mov
lods
gs
sub
int
fwait
add
xor
icebp
jmp
nop
into
in
ss
fcmove
pop
mov
icebp
mov
insl
lea
cli
ss
jns
push
mov
addr16
xor
into
cmpsb
fisubrl
orb
sub
jg
iret
les
jbe
sub
inc
popf
push
popf
leave
jo
and
lcall
and
xchg
push
cs
push
push
xor
or
pop
push
ret
sub
fsubrs
jg
ljmp
jg
stc
fwait
dec
hlt
leave
stos
and
stc
jbe
adc
push
and
je
push
sbb
push
rcrb
shll
mov
ljmp
push
jnp
push
xor
test
fs
sub
mov
das
push
pop
push
stos
mov
scas
or
stos
pop
sub
jle
push
mov
or
xchg
addr16
aam
popa
cwtl
testb
dec
xchg
lock
add
mov
jns
sub
das
cmpl
mov
dec
inc
and
dec
cltd
lds
loop
popa
insb
imul
sbb
push
jbe
push
sub
sahf
xchg
jg
pop
dec
mov
daa
mov
iret
mov
aam
xchg
lds
add
xchg
out
sbb
xchg
pop
mov
cmpl
dec
sbb
and
mov
das
jnp
jge
push
jae
pop
inc
add
mov
sbb
sbbb
test
cmp
xor
cltd
mov
mov
xchg
inc
cmp
xor
pushf
outsl
dec
mov
jle
bound
data16
and
aas
mov
push
cltd
repz
mov
inc
pop
push
data16
mov
movsl
negl
mov
mov
movsb
xlat
sbb
hlt
scas
mov
in
aam
call
xchg
ret
xchg
aaa
out
mov
sbb
adc
ss
fmul
adc
aas
lret
sti
sbb
jg
jl
jecxz
jb
es
mov
aas
push
popf
xorl
out
dec
or
add
imul
mov
xchg
cmp
xchg
mov
repnz
cmpsl
xchg
lahf
fisubs
xor
inc
sub
sbb
sbb
pop
inc
cmpsb
dec
mov
mov
jnp
xor
push
jne
ret
mov
jle
arpl
xchg
or
and
dec
shrl
jns
push
inc
mov
add
lahf
fistpll
inc
ljmp
lods
fcmove
mov
jg
and
je
daa
enter
xor
or
aad
xchg
js
adc
hlt
cmpsl
int
sbb
outsb
and
fnsave
and
inc
inc
iret
jnp
push
fnstcw
mov
fmuls
les
inc
dec
mov
cmp
adc
inc
cmpsb
pop
es
sub
mov
lahf
and
insl
xlat
in
clc
int3
jb
inc
aaa
pop
fadds
rolb
ret
jle
rolb
sub
push
mov
adc
adc
mulb
dec
xor
ds
repnz
and
rol
scas
or
out
notl
aad
stos
lret
into
dec
arpl
lahf
jp
xor
inc
mov
push
shr
cmpsl
adc
aaa
pop
sub
push
jg
jns
mov
mull
sti
mov
jae
inc
push
lcall
xchg
mov
mov
sbb
sahf
push
xchg
andb
xor
into
mov
pushf
fcomps
sbb
or
and
std
repnz
jecxz
mov
in
xchg
pop
jle
jmp
cmp
stos
jae
out
bound
arpl
ljmp
push
xor
dec
pop
mov
std
js
call
scas
mov
pop
bound
adc
pusha
and
push
stc
int3
iret
jg
pusha
mov
adc
mov
scas
aam
cmpl
add
cwtl
and
jle
fs
scas
mov
daa
sbb
scas
xor
pop
stos
ljmp
mov
daa
mov
ljmp
sti
xlat
jae
jg
outsl
cmpsl
ss
in
xor
add
inc
popf
popf
xchg
jl
jbe
cmpsb
mov
xor
lds
lahf
xchg
push
dec
lock
fwait
pop
pop
mov
icebp
repnz
inc
ret
xor
lock
lods
stos
inc
cli
int3
mov
push
push
fsubs
jae
pop
daa
movsl
and
xchg
pop
pop
pop
inc
add
push
inc
mov
aaa
cmp
jnp
xchg
daa
test
test
xor
enter
and
shll
xchg
fistps
push
leave
mov
lret
adc
mov
insb
push
adc
sub
mov
adc
jle
or
pop
pushf
mov
xor
inc
mov
repz
insl
dec
subl
jge
fldenv
scas
pop
ret
sbb
mov
gs
dec
pop
loopne
fadds
push
mov
pushf
jl
xlat
xlat
xchg
scas
sbb
xchg
jno
xchg
mov
cmp
jp
cmpsl
fsubs
and
in
mov
pusha
dec
mov
mov
lea
movsl
lods
sbb
std
mov
inc
dec
sar
cltd
dec
outsb
or
aas
or
jle
ds
xlat
sbb
mov
pop
pop
dec
data16
rcrl
fwait
call
inc
inc
int
sub
in
push
mov
fstps
inc
or
mov
fisubrl
cmpb
nop
sahf
addr16
cmp
sub
insb
out
inc
xchg
inc
into
stc
jecxz
push
dec
add
dec
inc
ds
daa
mov
popf
mov
iret
sbb
sub
push
sbb
outsb
xchg
in
das
and
mov
cmpsb
mov
xor
mov
stos
push
pop
inc
and
out
inc
jae
cmp
jecxz
fcompp
shrb
rorl
arpl
fldt
and
mov
mov
xchg
adcl
push
jbe
pop
ficoms
mov
inc
nop
push
mov
or
cli
cwtl
adc
xor
test
inc
dec
push
and
sahf
scas
mov
loop
cwtl
hlt
sahf
dec
clc
pop
pop
lods
ds
sti
push
jecxz
fs
xor
fcomps
test
pop
inc
push
in
cmp
mov
xchg
setne
jo
jbe
mov
cmp
xchg
and
fdivs
nop
add
hlt
sbb
ljmp
out
push
loop
pop
mov
xor
lret
imul
push
pop
jecxz
stos
bound
movsl
addr16
outsl
mov
and
xor
cmp
loop
test
scas
and
push
pop
mov
jmp
jg
ss
cmpsl
enter
scas
push
pop
popf
sti
push
push
sub
xchg
push
push
fisttpll
mov
mov
cmp
in
jl
cmp
pop
inc
add
data16
fisubrs
mov
push
sub
aas
test
mov
scas
shrb
cld
clc
popa
mov
pop
call
inc
ss
push
aas
sub
inc
cwtl
xlat
ljmp
sbb
leave
mov
mov
lret
test
inc
inc
mov
mov
and
sub
sbb
mov
out
loope
jnp
scas
mov
dec
and
cmp
js
inc
das
jns
mov
out
cmp
cs
outsl
lret
mov
ds
ficoml
scas
mov
aaa
dec
and
cmp
adc
sahf
push
fiadds
ficompl
inc
mov
sub
popf
movsb
negb
data16
out
cltd
cmp
xor
testb
xchg
cmp
mov
pop
and
sub
movsl
add
xchg
outsb
repz
and
pushf
jg
nop
jle
adc
out
cmp
lods
cmpsb
cmp
or
dec
pushf
daa
stos
push
es
xchg
mov
cmp
sti
sub
pop
or
scas
icebp
je
dec
stos
test
ds
jno
arpl
lock
and
xor
xchg
push
subl
popf
std
daa
aad
das
test
xor
pop
mov
mov
dec
movsb
mov
inc
sub
inc
add
movb
test
rclb
cwtl
mov
movb
adc
bnd
xor
pop
sub
push
lds
ret
xchg
add
and
and
out
test
inc
push
es
dec
xchg
jns
ret
stc
xchg
mov
fsub
mov
adc
jnp
daa
mov
clc
dec
aaa
stos
in
jae
std
ljmp
in
lret
movsl
jns
inc
fistl
lret
jecxz
mov
lret
mov
jmp
cwtl
xor
incl
jnp
aaa
mov
outsl
push
inc
jb
and
adc
sub
mov
imul
jg
cmp
jb
mov
mov
and
mov
js
pop
aad
push
repnz
mov
jb
push
and
nop
xchg
mov
and
call
xor
pop
pop
testl
scas
outsb
mov
push
rcrl
sub
and
bound
inc
neg
fisubrs
dec
jmp
jecxz
adc
je
pop
lcall
scas
aaa
sbb
cs
icebp
sbb
push
xchg
mov
adc
movsb
mov
insl
pop
mov
mov
jg
cmp
or
bound
ljmp
mov
in
outsb
popa
lods
dec
movsl
inc
jne
ljmp
mov
sub
jnp
adc
add
jbe
mov
lret
icebp
sub
les
sti
mov
addr16
popa
push
frstor
pop
fsubrl
push
sbb
fs
cmp
dec
push
mov
je
lds
lods
xor
cmpsb
mov
inc
lods
adc
add
shll
cmp
gs
push
dec
pop
aad
xor
dec
and
sahf
shll
xchg
xor
xor
aad
cmp
aam
or
mov
jne
mov
aas
in
mov
cmc
sub
jl
in
push
cwtl
fwait
leave
cmp
or
cmp
mov
bound
cmp
jbe
mov
shlb
mov
cmp
arpl
sbb
enter
pop
push
inc
add
mov
fsubs
jge
push
fildll
xchg
inc
sub
gs
push
ret
pop
and
cmpsb
test
lds
cmp
aaa
xchg
fdivs
mov
push
cli
adc
je,pn
push
test
in
les
inc
out
sbb
jmp
out
mov
inc
cmp
inc
inc
push
inc
mov
out
inc
ss
mov
mov
dec
and
inc
xor
xor
sahf
xchg
mov
xchg
jb
cmp
jmp
loopne
pop
outsl
ret
push
mov
stos
mov
inc
hlt
dec
fisttpll
pop
popf
push
mov
fwait
and
insb
mov
add
inc
gs
mov
mov
and
inc
jmp
outsl
mov
shrb
jo
mov
sub
arpl
stos
das
xchg
push
adc
pusha
shll
xor
dec
push
negb
mov
and
imul
push
loope
mov
push
or
push
ljmp
xor
fldenv
fwait
and
pushl
adc
in
out
cmp
adc
lret
mov
aaa
inc
mov
in
jmp
or
leave
cmc
sub
aas
or
adc
xchg
mov
xor
les
movsb
push
lods
js
push
outsb
mov
movsl
pop
movsb
outsb
sbb
mov
xchg
sbb
and
lahf
cmp
xor
pop
push
mov
pop
add
xlat
aas
mov
inc
popa
add
pop
or
pop
cwtl
push
push
lods
mov
pusha
inc
inc
ret
and
and
pop
inc
faddl
and
jb
push
xchg
mov
adc
daa
add
int
and
outsb
push
ret
cmp
test
sub
mov
or
push
jge
dec
dec
add
imul
sbb
cmpsl
ds
push
inc
push
out
pop
pusha
aam
inc
pushf
bound
test
outsl
dec
and
js
ljmp
adc
imul
in
and
fldl
and
cmp
inc
xor
lods
in
mov
pop
sbb
nop
jbe
cmp
inc
mov
mov
outsl
ljmp
out
pop
mov
loope
ss
xchg
xorb
mov
or
addr16
adc
sbb
lds
cli
add
inc
jecxz
lods
inc
fisubs
cmp
ficoml
sbbb
bound
sbb
cmp
frstor
mov
ficoms
sub
lods
popf
jmp
outsb
gs
push
or
or
push
test
jl
jmp
inc
mov
push
dec
out
cmp
testb
mov
aad
loop
dec
pop
push
popf
jle
scas
jbe
jg
and
stos
or
jg
inc
jnp
xchg
or
adc
cmpsl
outsl
aas
mov
sub
insl
adc
cli
cmp
popf
push
scas
or
int
ljmp
mov
in
out
ss
mov
sub
adc
scas
xor
jnp
outsb
pop
ror
inc
xlat
pusha
adc
movsb
add
popa
stos
cmp
mov
mov
scas
mov
adc
daa
mov
lea
push
in
sbb
ss
jo
xchg
push
push
jmp
roll
pop
cli
imull
push
cwtl
sub
xchg
jecxz
aam
mov
fdivl
loop
aas
xchg
out
or
sbb
dec
mov
mov
imul
ficomps
subl
nop
adc
sub
ljmp
sbb
jns
cmpsl
mov
jge
xchg
out
cmpl
leave
sub
mov
test
bound
cltd
pushf
loop
mov
lods
jle
cmp
cmpsb
bswap
loopne
jle
into
jnp
and
in
xchg
xor
mov
pop
out
sbb
popf
dec
push
cmp
xor
push
dec
add
push
add
mov
cmp
pop
aaa
out
mov
nop
xor
cmp
inc
scas
flds
insl
and
test
xor
jns
ret
pop
fstpl
sub
sub
mov
dec
sti
ret
iret
and
js
pushf
pop
pop
pop
and
inc
loopne
fidivs
adc
jbe
add
inc
pop
int
bound
inc
mov
add
dec
mov
inc
jns
popa
add
clc
iret
js
sbb
jmp
xor
movsb
andl
mov
inc
shlb
add
loope
ds
popa
popa
daa
sbb
jp
insb
scas
dec
cmpsb
ficoms
movsb
loopne
sbb
mov
push
xchg
cmpsl
scas
xlat
xchg
cmp
or
aad
hlt
nop
cmp
mov
sub
sbb
xchg
xlat
cwtl
push
mov
add
rorb
or
bound
mov
xchg
jns
subb
cmp
xchg
pop
test
add
or
ljmp
inc
insb
jge
or
test
sbb
xchg
pop
cltd
pop
fistl
inc
push
jmp
push
mov
loope
jbe
mov
sbb
xlat
ss
int3
jns
push
mov
out
jecxz
pop
sbb
inc
daa
xchg
ret
mov
in
outsb
in
ficompl
ret
into
xchg
xchg
faddp
orb
pusha
xor
cld
cli
xchg
mov
cmp
bound
mov
add
sbb
push
mov
xor
pop
inc
and
and
sti
popa
scas
mov
dec
into
movb
mov
lret
push
sbb
add
lcall
rclb
mov
dec
lods
loop
mov
push
pop
gs
mov
pop
cltd
neg
sub
push
ss
iret
mov
test
into
mov
pop
and
sbb
pop
push
mov
decb
std
ret
and
xchg
jbe
sahf
std
cmp
imul
inc
icebp
inc
mov
sarb
orb
loopne
push
shlb
push
mov
inc
mov
dec
sub
cmp
mov
push
mov
pop
mov
push
in
inc
xchg
sar
out
cli
ret
popl
xchg
xchg
lea
cmp
adc
mov
mov
mov
push
inc
test
mov
mov
das
cmpsb
add
inc
scas
enter
sbb
sub
lds
mov
inc
arpl
xor
jnp
stos
hlt
jmp
and
sahf
jns
aaa
aaa
add
jnp
xchg
jge
repz
pusha
mov
mov
or
inc
sub
adcl
lods
insl
leave
inc
ljmp
shrb
xor
pop
mov
adc
idivl
add
insb
mov
cmc
xchg
cmc
icebp
ds
sbb
mov
addr16
cmp
mov
jecxz
test
pop
pop
les
jbe
sbb
fcomi
adc
push
inc
xchg
out
cmpsl
sbb
and
mov
popf
clc
or
push
mov
dec
nop
out
push
and
in
xlat
orb
xor
mov
mov
rclb
sub
dec
adc
mov
pop
xchg
add
aad
pushf
mov
add
or
and
pop
push
fiadds
loope
ficomps
mov
decl
clc
ret
add
enter
lmsw
inc
imul
into
xor
sub
outsb
xor
xchg
xor
lds
in
arpl
fwait
jno
out
mov
mov
xor
cmpsb
cmp
add
xchg
pop
orb
sahf
inc
scas
mov
ret
pop
jl
jbe
jg
push
lock
jns
xchg
fwait
jle
add
push
mov
cmpsl
push
outsl
jmp
je
in
stos
and
jmp
or
rcl
jbe
sbb
dec
inc
add
lods
cmp
push
divb
nop
mov
push
pop
sub
test
mov
dec
fdivs
mov
lcall
push
push
mov
and
sub
lret
daa
xchg
add
mov
popa
int3
cwtl
aad
into
fdiv
cmp
dec
ret
cmp
cmp
daa
xchg
fists
mov
ret
jbe
insl
or
push
aaa
xor
pop
lret
cmc
test
movb
xorl
cmp
aas
loop
push
push
mov
iret
loop
push
or
fmulp
or
sub
mov
loope
fbstp
sub
movsl
fs
push
mov
push
lahf
ljmp
sahf
fisttpll
add
and
loop
je
mov
lahf
xchg
jnp
pop
inc
fwait
mov
push
lods
and
incb
push
and
sbb
push
jecxz
xchg
cmpsb
mov
jbe
les
sub
outsl
sahf
into
pop
xchg
in
hlt
mov
in
push
and
and
loop
daa
dec
dec
aas
aam
aas
mov
mov
jae
dec
iret
inc
sahf
xor
rcll
in
cltd
testl
add
addr16
sahf
sahf
dec
push
add
add
dec
fstl
leave
iret
jp
inc
in
xchg
es
aaa
loopne
into
les
cmpsl
cmp
inc
jns
shlb
inc
inc
sbb
push
dec
jecxz
xchg
pushf
dec
mov
sub
loop
xor
push
aas
push
je
mov
lahf
mov
cmp
scas
testl
lcall
mov
hlt
xor
lea
xlat
add
test
push
mov
push
add
ss
pop
cmp
mov
push
push
xchg
ficoml
mov
xor
sub
movsl
fs
lds
xchg
jbe
insl
xor
lret
movsb
mov
adc
and
lock
addr16
mov
roll
scas
testl
add
push
or
pushf
jmp
mov
pushf
xlat
mov
stos
xor
sub
insb
sahf
into
lcall
ret
fadds
push
pop
scas
ret
pop
imul
cmp
in
in
loope
aas
aas
and
ret
xchg
fcompl
mov
sub
dec
lret
out
pop
clc
push
idiv
into
adcb
outsl
xor
movsl
dec
nop
leave
cmc
jp
sub
and
inc
insl
andb
pop
loop
ss
or
and
insl
mov
arpl
adc
punpckhwd
sbb
xor
in
xor
leave
cmp
outsl
jb
pop
adc
dec
xor
sbb
gs
mov
arpl
mov
es
test
insl
mov
out
nop
stc
cltd
and
sbb
fdivrs
fstpl
xor
mov
xchg
insl
scas
push
es
pop
cmpsb
nop
daa
test
add
and
mov
fmull
mov
jbe
sub
ljmp
leave
pop
arpl
cmpsl
stc
mov
fsub
mov
les
sub
aam
sbb
sub
jns
inc
xchg
lea
add
sbb
pop
sbb
or
adc
jge
loope
fidivl
outsb
sbb
test
sub
test
movsb
jge
loop
sub
outsl
push
add
add
inc
inc
icebp
cwtl
stos
xor
mov
cmp
pop
and
stos
cmp
pop
lret
fistpl
test
cli
xor
ret
notb
in
mov
add
ret
xor
mov
pop
sub
dec
mov
xor
push
insl
jb
sbb
ja
les
and
neg
adc
cmp
inc
inc
push
add
test
sbb
jmp
xchg
mov
cmpsl
lahf
jnp
cmp
jno
pop
ret
pop
xor
fsub
daa
jne
into
call
fwait
xchg
or
xor
xchg
iret
dec
shr
scas
xchg
aad
jne
in
pusha
aaa
inc
mov
push
or
and
data16
lahf
iret
pushf
ret
and
or
decb
jge
mov
int
inc
dec
incl
cmpsb
xor
push
sbb
inc
rcrl
addr16
out
inc
mov
dec
js
cmp
cmpsb
nop
jbe
adc
dec
sub
pusha
jle
fbstp
sarl
sbb
daa
out
pop
popa
aas
mov
sbb
mov
outsb
mov
sub
mov
jecxz
or
inc
adc
jp
ja
mov
int3
js
or
fwait
mov
jno
push
lea
aad
int
xchg
imul
lcall
das
dec
adc
loop
call
inc
aam
jge
inc
pop
roll
js
dec
ljmp
sbb
aad
rorl
mov
add
stos
cmp
fwait
lcall
adcb
mov
mov
jbe
in
pop
aas
imul
ret
xlat
sbb
jle
xchg
jg
pop
lea
bound
popf
ljmp
inc
call
inc
lea
push
testl
and
mov
testl
idivb
lahf
repnz
aaa
mov
and
mov
push
out
xlat
loop
scas
divl
pop
jmp
aas
xchg
push
pop
inc
sub
and
xchg
dec
popa
bnd
outsl
pop
add
popa
sub
leave
arpl
fst
cmpsl
sbb
daa
test
jmp
call
das
movsl
into
insb
cmp
push
rcrb
and
cmp
das
test
es
ficompl
xor
fisubs
std
fnstsw
adc
aas
fwait
insl
and
inc
push
sub
jno
and
test
mov
popa
mov
repz
and
and
xchg
movl
cmpsl
push
stc
cli
inc
icebp
jno
sbb
scas
in
fidivs
inc
scas
imul
xchg
sub
pshufw
pusha
icebp
inc
xchg
fistpl
data16
fisubs
test
ljmp
lahf
movsl
pusha
loope
fistpl
sbb
mov
push
push
sub
mov
popa
xchg
in
scas
cmpsl
push
push
add
inc
call
repnz
pop
mov
xor
mov
mov
mov
loop
adc
dec
push
pop
adc
scas
sub
or
cli
xchg
mov
cmp
mov
and
push
sub
mov
fmulp
in
xchg
pop
ret
in
dec
fs
cmpl
rolb
jo
jge
pop
lcall
dec
orb
add
add
sub
mov
cmpl
pop
stos
fisubs
dec
mov
aaa
lret
inc
and
ret
ds
dec
mov
cs
in
mov
jecxz
mov
xor
scas
mov
rcrl
jne
aaa
pop
jns
mov
shr
cmp
mov
mov
insb
sub
icebp
sub
jo
fistpll
sub
jns
cmp
mov
push
imul
jmp
xchg
cmpsl
loop
pop
add
sbb
cmpsl
pusha
popa
rclb
dec
ss
lret
sahf
outsb
pop
loop
shlb
push
cmpsl
and
je
jae
popf
sbb
mov
sbbl
or
jae
cmp
or
dec
sub
cmpsl
gs
and
push
xor
mov
mov
push
sbb
fcmovnb
inc
xor
mov
fstpt
outsb
or
pusha
cmp
cmc
sbb
cltd
adcb
jecxz
cmp
pop
sbb
repz
jg
dec
je
rep
push
jp
add
xchg
frstor
xchg
mov
dec
stos
add
into
divb
mov
push
cld
push
js
mov
cmp
xchg
movsl
pusha
in
push
loope
mov
mov
inc
mov
dec
mov
cmp
aad
xchg
sahf
cmpsl
and
daa
push
fidivl
xchg
ss
dec
push
xchg
cmpb
push
vpsubq
loop
adc
sbb
ficoml
mov
xor
aad
out
popf
pushf
inc
fimuls
addr16
mov
bound
inc
adc
and
pusha
cmp
inc
movsb
add
icebp
out
in
dec
and
inc
inc
adc
pop
inc
data16
push
xchg
repnz
push
cmp
into
and
cmp
pop
aam
xor
push
inc
jle
scas
bound
lret
jecxz
add
jo
sti
pop
aas
sub
cmpsl
dec
fiaddl
repnz
add
mov
lret
sub
and
in
out
xor
push
adc
dec
sub
cmp
outsb
mov
idivb
inc
fildl
sub
or
inc
into
outsl
test
cmp
lahf
outsl
fs
test
sbb
jns
pop
and
mov
popf
push
dec
lods
and
sub
lcall
xchg
lahf
stos
mov
popf
aaa
movsl
daa
inc
movsb
fwait
xchg
iret
fmuls
scas
fbstp
rorb
mov
in
les
mov
fdivrl
xor
cmpsl
mov
mov
nop
mov
rcll
cwtl
push
fimull
shll
xchg
mov
stos
lahf
cmp
cld
nop
je
das
jns
cmc
push
push
cmp
dec
sub
enter
int3
out
cmp
push
dec
cmpsb
xchg
leave
xlat
adc
dec
aas
inc
mov
sbb
test
dec
mov
fisubs
dec
bound
sub
add
scas
je
xor
int3
mov
pmullw
lret
push
mov
test
stos
dec
jo
fcoms
mov
mov
shll
mov
pop
inc
lahf
cmpsb
cmp
test
xchg
sub
jecxz
xor
addb
mulb
imul
pushf
fiadds
mov
inc
negb
lds
test
push
push
out
mov
jl
cltd
and
jmp
out
push
cmp
xlat
enter
cmp
out
pop
sub
outsl
popf
jp
cmp
dec
mov
mov
mov
mov
mov
lds
fildl
mov
push
xchg
mov
inc
mov
mov
jb
cmp
mov
ljmp
xchg
cld
bound
movsb
sub
outsl
push
dec
stc
lods
jle
inc
mov
std
inc
xor
out
das
sbb
and
and
in
dec
inc
clc
pop
test
adc
adc
cmp
cmp
std
cli
bswap
clc
out
mov
xchg
int3
xchg
mov
aaa
xor
jne
daa
in
xchg
jp
adc
xchg
cltd
and
mov
mov
fwait
pop
push
xor
scas
mov
jmp
idivl
les
fdivrl
lds
jl
int
movsb
jge
and
cltd
push
adc
iret
or
out
cltd
sbb
pushf
and
xchg
sbb
sar
sbb
inc
push
sti
jecxz
xchg
jg
push
mov
add
mov
sub
popa
pop
pop
pop
inc
jmp
add
lods
mov
idiv
xor
out
xor
es
sbb
push
insl
mov
adc
sti
adc
fdivr
pop
mov
jo
je
movsb
pop
jbe
mov
int
sub
test
xorb
sub
mov
xchg
mov
rorb
pop
jecxz
ret
inc
ret
pusha
ret
dec
pop
and
dec
inc
sbb
pop
test
cmpsl
pop
dec
and
fidivs
and
sub
shll
jg
sbb
mov
iret
sub
xchg
in
inc
mov
and
pop
test
fidivrs
xlat
shl
fmull
int
cmpsb
dec
mov
xorl
and
pop
sub
pop
lods
packsswb
pop
mov
jnp
xor
jmp
inc
enter
inc
dec
xor
pop
subl
dec
sub
inc
dec
out
push
orb
xor
aam
jne
inc
mov
xlat
fldl
or
loop
mov
inc
test
es
stos
xor
std
and
pusha
ret
xor
and
rclb
inc
adc
inc
add
pop
hlt
pop
dec
and
mov
fcmovnb
fdivrs
mov
xor
mov
mov
movsb
repz
popa
fisubrl
jbe
push
and
ficompl
aas
sub
in
ds
pop
or
inc
inc
jge
test
xlat
mov
jecxz
cmp
movsb
repnz
dec
fsubs
push
daa
dec
aam
jl
jbe
mov
add
mov
jne
mov
mov
cmp
and
jb
pop
fadd
scas
movsl
outsb
jge
mov
cmp
mul
adc
pop
pop
jbe
out
mov
lcall
scas
mov
jecxz
int
popa
arpl
fmul
mov
and
ret
xchg
sub
scas
lea
mov
jae
fidivl
insb
dec
push
sub
cmpl
nop
xchg
add
cltd
sbb
mov
mov
mov
cmpsb
mov
jb
mov
jg
in
into
jg
lcall
fldl
daa
scas
rorl
cmpsb
mul
pop
jnp
jbe
cmp
push
sbb
mov
inc
cltd
imul
mov
jle
pop
inc
out
popf
xchg
fbld
stos
inc
inc
mov
aaa
push
add
add
add
aaa
out
pop
ljmp
sahf
xchg
loope
pop
xor
subb
scas
mov
pusha
js
xor
enter
cmp
fildl
aas
movsl
loop
mov
dec
sub
das
sarb
inc
xchg
cmpsl
push
ljmp
insb
ret
mov
orb
jne
mov
sbb
mov
mov
in
popa
pop
in
inc
lcall
and
inc
aas
out
sbb
xchg
add
aas
in
repnz
mov
repnz
or
mov
mov
imul
repnz
mov
inc
mov
push
cmp
out
andb
pop
push
sub
mull
gs
push
dec
notb
fsubl
aaa
inc
in
loope
xor
das
cmp
scas
in
sahf
int
ret
aad
rcll
pop
ret
ret
adc
mov
pushf
lret
mov
lods
pop
pop
inc
in
out
pop
outsl
mov
mov
idiv
fiaddl
es
movsb
jl
or
mov
sbb
lcall
cmp
aas
and
jnp
aaa
cld
mov
into
sub
test
push
jmp
test
cmpsb
inc
xor
roll
bnd
subl
fnstcw
adc
leave
cmp
push
push
lods
jbe
insl
addb
das
xchg
nop
add
sub
xlat
xor
out
jmp
std
test
mov
sarb
xchg
mov
and
sub
push
aaa
jmp
loop
cmc
lea
lock
xlat
mov
mov
sbb
ljmp
cltd
mov
or
inc
ds
mov
fsts
mov
popa
cli
aaa
inc
aas
cs
adc
scas
in
clc
inc
scas
test
aas
arpl
sahf
cmp
jns
and
and
loope
cs
stos
push
fimuls
rcll
arpl
xchg
shrb
adc
xor
cs
rcll
shrb
dec
popa
cs
out
mov
mov
pop
xchg
aam
ds
sahf
inc
je
insb
inc
mov
shr
jns
int
movsl
mov
and
jecxz
sbb
cmp
dec
mov
aaa
push
fdivrs
inc
adc
aaa
movsl
push
cmpsl
mov
dec
loop
inc
imul
inc
xor
and
int3
mov
and
inc
ds
fiadds
sti
aaa
dec
loop
jecxz
inc
xchg
mov
fcompl
dec
scas
cmpsl
in
inc
sub
mov
jl
dec
shl
fld
out
std
enter
test
cmp
sbb
xor
sub
in
in
push
xchg
inc
push
outsb
bound
push
push
cltd
mov
inc
cmp
ficoml
mov
mov
cmp
pop
insl
mov
add
fwait
shrb
or
or
mov
sub
stos
shl
push
mov
sub
inc
sub
push
inc
enter
fs
shlb
push
pop
loope
inc
xor
in
mov
mov
idiv
dec
cmpsl
or
mov
cmp
enter
in
mov
pop
mov
cs
push
add
mov
das
sbb
push
fwait
imul
mov
dec
jecxz
in
xchg
mov
jle
pop
hlt
lcall
cmp
adc
lods
fiadds
shl
sbb
out
test
out
pop
test
add
lcall
xor
test
push
lret
out
and
arpl
inc
movsb
add
dec
repz
xor
and
mov
enter
adc
dec
dec
mov
or
sub
in
rep
xor
arpl
jae
and
jmp
and
push
addr16
xor
inc
out
mov
cmp
sub
call
xor
mov
out
test
arpl
jmp
sub
aad
and
lret
movsl
cmp
nop
stos
mov
movsl
aaa
add
mov
dec
inc
cmpsb
das
sti
ror
and
sti
mov
dec
lods
shll
adc
cs
mov
pop
mov
ss
mov
inc
dec
push
pushf
jae
loop
lock
arpl
sub
cmp
dec
xor
out
stos
stos
gs
pop
mov
inc
cmp
mov
jno
dec
lret
dec
iret
xor
loop
dec
pop
scas
leave
dec
fistpl
dec
cmc
aad
push
sbb
mov
decb
je
dec
lret
dec
iret
and
dec
pop
inc
clc
inc
pop
cmpsb
push
out
stc
push
cmp
ja
lods
fdivrl
dec
mov
mov
mov
fbstp
and
insb
mov
insl
mov
pop
mov
cwtl
movsb
add
sub
or
lret
ds
push
xchg
insb
inc
sti
push
imul
xor
pushf
pop
lahf
dec
lcall
and
sbb
xchg
sub
pop
push
xchg
push
ljmp
push
data16
adc
push
add
pop
mov
xchg
rcrb
xlat
leave
xor
inc
mov
dec
pop
fidivrs
push
sbb
insl
mov
cltd
test
mov
shlb
shlb
jnp
dec
daa
and
xchg
mov
bound
jne
shlb
pop
push
mov
mov
push
jg
scas
xchg
ret
push
or
aaa
mov
push
aaa
iret
mov
and
int3
outsl
xor
push
push
dec
iret
sbb
pop
lock
imul
cmpsb
insb
int3
out
iret
sbb
stos
loopne
ret
repnz
mov
sbbl
mov
jp
rcrb
imul
outsb
cmp
and
push
daa
sbb
cs
jns,pn
jb
jle
fimull
or
mov
mov
pop
les
mov
sub
ret
dec
cmc
cmp
lahf
or
pop
jo
sub
add
inc
inc
inc
jb
inc
push
or
int3
mov
or
and
es
stos
mov
pop
mov
cmp
mov
pop
cvtps2pi
shr
loop
cwtl
push
das
aaa
and
mov
mov
loope
and
push
sub
xchg
std
pop
or
mov
mov
pop
mov
lahf
xor
outsl
into
in
adc
pop
dec
push
imul
inc
mov
test
repnz
pusha
ss
roll
push
repnz
cmpsl
icebp
or
sbb
jne
movsl
fldcw
movsl
push
test
fstpt
dec
xchg
or
push
test
ljmp
not
loope
flds
and
inc
out
push
js
xchg
cltd
push
inc
daa
push
or
mov
shl
inc
jns
pop
in
mov
mov
push
fsubs
xchg
jmp
out
xor
movsb
aas
outsl
cld
filds
gs
jge
fsts
fdivrl
sbb
enter
pop
dec
daa
cmc
fmull
pusha
roll
out
scas
sbb
dec
or
inc
int3
stos
clc
sti
mov
lcall
pushf
les
pushl
lock
push
jbe
popf
inc
test
outsl
xor
inc
rcrb
push
imul
jp
push
xchg
or
sbb
nop
jg
xchg
mov
dec
jno
out
dec
ret
xchg
daa
adc
dec
jmp
xor
push
data16
xor
and
push
repnz
pop
jle
or
sti
js
push
add
jmp
inc
xlat
inc
xchg
mov
cltd
in
aaa
sbb
adcb
out
cmpsl
bound
out
mov
pushf
ficomps
and
fcoms
cmp
es
inc
jp
inc
mov
fs
dec
dec
imul
sahf
jb
push
cld
dec
cmpsb
es
dec
pop
test
sub
inc
sub
in
mov
sbb
sub
ja
in
popf
mov
or
pop
sub
push
stc
adc
lcall
cmpsl
xor
lea
sub
pop
mov
orb
sub
gs
inc
mov
in
push
xor
notl
xor
or
sbbl
daa
push
cmpsl
loop
lea
sub
cmp
jmp
in
test
jbe
insl
notl
dec
mov
fldt
notb
sbb
scas
stc
adc
inc
inc
cmp
ljmp
and
call
xor
xor
push
movsb
inc
xchg
dec
sub
pop
daa
lea
es
shrl
cli
mov
ret
mov
in
mov
mov
je
mov
mov
inc
jmp
jmp
push
xor
testl
aas
jbe
push
movsb
sub
mov
mov
dec
and
sub
sti
cmp
xor
jns
mov
push
andb
aas
add
pusha
and
sbb
scas
mov
popa
fists
arpl
push
gs
sub
pop
jmp
rolb
fsubrs
xor
aas
jbe
push
movsb
add
push
xor
rclb
mov
and
cmpsl
and
lea
and
mov
test
xor
xchg
push
ja
cmp
inc
popa
and
mov
scas
sub
mov
mov
daa
push
cmpsl
das
and
xor
push
push
mov
stos
imul
adc
xchg
push
mov
cmpsl
sub
sub
in
mov
xor
mov
orl
lea
test
in
fstpl
leave
jle
jecxz
jl
xor
imul
jb
outsl
lea
cld
xchg
aam
and
lea
ficoms
cmp
pop
pop
xchg
mov
pusha
ss
push
mov
or
jmp
shlb
mov
dec
mov
rcrb
jecxz
sbb
xor
cmove
es
xchg
cmp
lret
pusha
mov
cmp
stc
test
scas
and
shr
rcrb
sbb
scas
mov
cltd
cmp
or
pop
scas
jp
mov
sub
pop
mov
jnp
and
jmp
stos
cmpsb
jmp
pop
ja
sbb
add
push
lea
cmpsl
lcall
cmpsb
jmp
inc
movsb
clc
fst
cli
pusha
out
test
jl
nop
fidivs
je
into
pop
out
cli
push
adc
ret
test
test
test
lds
xor
popa
int
push
cmpsl
ficompl
lea
sbb
adc
xor
and
je
aaa
es
pop
movsb
add
bound
int3
pop
jne
jns
andl
aaa
cmp
mov
mulb
dec
xor
add
dec
daa
jo
lahf
or
outsl
stos
aaa
sbb
lods
and
scas
xor
xchg
mov
cmp
mov
scas
js
fldt
xlat
pop
sar
sbb
test
mov
movsb
pop
mull
jecxz
clc
inc
outsl
jne
imul
cmpsl
jp
cltd
and
mov
mov
subl
loop
inc
sbb
pop
rol
pop
jecxz
sbb
cmp
ss
mov
inc
add
add
mov
pop
pop
iret
loop
daa
stos
fwait
inc
or
dec
mov
mov
lock
pop
subb
jecxz
push
push
ss
ficoms
les
mov
mov
ficompl
cmp
pusha
pop
ss
mov
mov
mov
adc
fnclex
mov
adcl
lcall
inc
insl
test
pusha
mov
imul
movsb
inc
jne
aam
rcl
pop
mov
and
inc
mov
lret
adc
and
and
pop
daa
je
lret
push
popa
xor
dec
pusha
jne
js
mov
dec
inc
xor
and
and
loop
ret
sti
jge
lret
pop
sub
xchg
pop
cmpl
mov
hlt
in
pusha
lahf
xchg
lea
gs
pop
pop
ss
push
inc
xchg
popa
sub
inc
push
mov
mov
mov
jb
or
outsb
mov
pop
stos
or
mov
in
sub
mov
dec
fmuls
subl
sbb
mov
popf
pop
sahf
into
pop
scas
in
cmc
mov
mov
ss
lea
test
xor
repz
test
and
out
inc
mov
insb
dec
inc
sub
dec
dec
mov
cmp
cltd
push
shlb
sub
cmp
sub
inc
sbb
lcall
mov
sub
mov
dec
mov
inc
neg
fstpl
sub
inc
jge
mov
inc
mov
ss
and
push
mov
ljmp
and
shrb
cmp
ficompl
cmp
gs
lcall
ficomps
adc
out
mov
in
xor
aas
lcall
pop
scas
mov
sub
loopne
sub
loop
xor
rcrl
ja
shl
dec
mov
imul
mov
inc
lods
mov
mov
stos
sbb
sub
lahf
lahf
cmp
fidivrl
push
jb
cmp
jae
sub
scas
inc
fwait
adc
mov
sbb
shll
aad
lods
and
pop
push
imul
mov
pushf
mov
cmp
xor
jns
mov
xchg
sub
xor
pop
fstp
mov
fdivrs
cld
add
mov
popa
dec
xchg
dec
std
cmp
imul
pop
testl
adc
add
mov
push
push
xor
push
and
out
pop
in
iret
imul
mov
dec
lahf
mov
cmp
mov
cli
push
xchg
and
push
sub
pop
subl
xlat
movsb
sbb
push
sub
xchg
fsubl
and
shll
clc
neg
out
sbb
mov
popf
gs
into
pop
sahf
in
int
testl
sub
out
pop
and
outsb
subb
sbb
cltd
and
adc
leave
sub
dec
dec
jbe
insl
sbbb
aaa
xor
pop
mov
subb
jecxz
pushf
cmp
mov
push
xlat
and
mov
pop
fisubrl
inc
fs
rcr
aam
mov
inc
aad
sub
pop
inc
cmp
cmp
loopne
fsubl
and
data16
and
adc
jne
pop
fildll
or
xchg
or
dec
xchg
ss
pop
sbb
mov
mov
push
insl
popl
test
mov
mov
add
mulb
push
fsubl
sarb
cltd
and
mov
scas
lcall
mov
mov
cmp
movb
rol
lods
rep
adc
cmp
movsb
jge
jbe
arpl
notl
push
and
sub
pop
sub
push
mov
sub
pop
pushf
cmp
call
jmp
pushf
dec
sbb
mov
jbe
push
adc
loope
test
dec
fbstp
inc
fidivl
adc
mov
scas
std
pop
subb
mov
ds
pusha
pop
inc
insl
or
in
push
shrl
ljmp
adc
sub
or
mov
and
fiadds
push
and
and
ret
icebp
je
mov
or
or
mov
fwait
mov
bound
jmp
push
push
rcll
pop
div
lock
insl
cli
aam
popa
outsl
and
ret
cmp
arpl
mov
jae
andl
and
shlb
push
xlat
pop
cmp
jae
gs
mov
xchg
sti
sub
aas
scas
repz
mov
cmp
sub
or
ja
insb
aas
jb
jecxz
pop
fistps
call
cmpb
movsl
lcall
aaa
int
xor
shlb
and
mov
jae
push
sbb
mov
cmp
push
hlt
mov
xchg
outsl
stos
bound
xchg
adc
jecxz,pt
add
insb
dec
pop
loopne
loop
mov
testl
dec
stos
call
daa
mov
ss
push
stos
xchg
inc
add
decl
and
and
cs
mov
loop
and
out
into
jne
adc
mull
mov
sbb
fistpll
call
inc
xchg
fs
cltd
and
aas
or
ss
repnz
nop
popf
push
push
xchg
inc
add
or
aas
test
push
jne
jo
outsl
mov
das
sbb
pop
mov
ds
inc
push
push
sbb
mov
rep
xchg
fsubrs
loope
push
pop
and
nop
jnp
pop
repz
jmp
daa
sar
mov
fwait
mov
xchg
adc
fsubrs
addb
movsb
pop
les
test
into
jg,pn
stos
les
andb
mov
cmp
aas
rorb
push
mov
xorl
mov
adc
adc
cmpsl
inc
push
mov
add
popa
adc
sahf
adc
fs
mov
xchg
cmc
fsubrs
loope
push
pop
lds
test
jmp
ret
mov
cmp
cmpsb
fnstenv
jae
adc
ljmp
dec
sbb
sti
and
adc
cmp
aam
sub
pop
or
push
push
adc
jne
outsl
cmc
jbe
lcall
mov
stos
xchg
popa
cmp
movsb
xchg
mov
dec
and
push
cmpsb
xorl
and
mov
hlt
fsubrs
rolb
movsb
gs
sub
dec
adc
adc
adc
adc
cmpsb
mov
push
xchg
jae
lods
lcall
pop
mov
in
cs
inc
adc
adc
mov
ja
pop
fwait
adc
lcall
sub
adc
add
add
pop
xor
pop
fwait
mov
push
sub
jbe
sbb
adc
iret
sbb
push
pop
sbb
sub
jmp
ss
push
ja
movl
mov
fnstsw
add
pop
cmpsb
xchg
jbe
jae
mov
cltd
popf
add
adc
cmpsl
add
mov
sbb
push
aas
mov
and
dec
mov
jae
fldl
popf
mov
mov
sbb
adc
push
mov
add
sub
stos
sbb
aaa
xchg
ljmp
pop
jp
lcall
or
adc
enter
mov
mov
fwait
out
arpl
inc
push
cmpsb
mov
sub
cmp
mov
mov
mov
pop
movsl
jns
loop
lock
out
sub
jg
movsb
insb
stc
jns
dec
test
fwait
out
sbb
leave
xchg
frstor
cmp
push
test
addl
fsubrs
sbb
movsb
dec
add
es
jae
jle
sub
mov
cmp
pusha
fldl
mov
sarl
ret
cmp
xchg
push
jbe
jns
lcall
pop
mov
icebp
xlat
jb
sbb
and
pushf
bound
inc
pop
sub
sub
popa
fcom
loop
push
int3
pop
arpl
adc
sub
loopne
loope
out
mov
js
xchg
add
lds
mov
sbb
popa
or
faddl
stos
xor
ret
mov
mov
and
lahf
aas
sbb
xchg
xor
repnz
ja
call
ror
lret
push
or
movsw
es
dec
imul
inc
scas
inc
arpl
push
sbb
mov
push
lods
add
lods
cmp
pop
pop
mov
inc
pop
pop
xchg
mov
dec
aad
xlat
inc
jp
je
push
pop
jp
push
leave
sub
negl
cmp
daa
nop
push
stc
mov
data16
cld
loop
arpl
dec
add
jp
mov
xor
rorl
daa
inc
jl
jnp
gs
ljmp
lahf
sar
cltd
lret
psllw
cmpsl
cmpsb
in
aaa
pop
xlat
push
in
dec
jb
add
cld
and
pop
outsl
or
fwait
aaa
cmpsl
inc
divl
addb
push
mov
push
dec
xchg
xlat
ss
stos
mov
aas
lret
mov
xor
mov
mov
gs
sub
and
mov
dec
lock
mov
and
pop
cmp
xchg
and
and
into
repnz
push
mov
shll
adc
aam
ds
mov
into
popa
push
scas
cmc
mov
cs
ja
and
mov
add
mov
sub
cmp
loop
cmpsl
push
das
xchg
xlat
or
fnstsw
push
repz
xlat
cwtl
mov
pop
ret
pushf
scas
ds
ja
xchg
pop
sub
pop
pop
xchg
xor
adc
ret
fcomi
outsl
push
loope
fdivs
arpl
xchg
jge
pop
call
int3
aas
inc
enter
daa
mov
out
xor
pop
push
popa
jns
ja
fcoml
sub
mov
push
scas
popa
dec
xor
inc
sti
scas
inc
and
scas
out
or
es
mov
cmpl
inc
incl
dec
out
lahf
stos
aas
pusha
xchg
pop
faddl
movb
inc
scas
cmp
repz
mov
pop
adc
std
std
cmp
push
and
or
lods
pop
sbb
scas
cltd
mov
pop
sub
fdivrs
mov
cs
stc
mov
scas
dec
adc
mov
adc
jne
xchg
stos
in
icebp
xor
xchg
movsl
mov
fs
imul
aas
mov
les
lock
es
adc
shlb
adc
lea
lods
add
sbb
cli
stc
inc
jns
test
xor
or
addr16
mov
int
pop
mov
inc
sbb
and
insb
fistpll
xor
ja
push
mov
push
imul
arpl
sbb
xchg
mull
fldcw
sub
push
insb
mov
push
jns
xchg
dec
pop
mov
jne
push
push
adc
into
cmp
int3
and
ror
daa
jb
push
push
rolb
and
in
mov
rcrl
outsb
cmp
dec
mov
test
stos
push
and
mov
aad
js
push
mov
and
jl
arpl
imul
fmull
sub
add
add
jbe
loop
imul
mov
fidivs
in
in
shl
push
sti
orl
jno
popf
fiadds
mov
outsl
loopne
in
outsl
pop
jnp
aas
das
jp
inc
test
popf
xchg
mov
pop
int
stc
push
inc
lods
mov
rcrl
dec
sub
push
mov
jecxz
ss
dec
inc
aas
shlb
push
pop
lea
jb
loopne
xor
jg
jmp
dec
icebp
mov
mov
test
out
imul
pop
pop
add
daa
push
sbbb
add
lcall
loope
inc
ss
jg
daa
or
jecxz
aaa
mov
pop
jne
push
inc
adc
mov
int3
cmp
xchg
push
jae
cmpsl
or
dec
cld
mov
pop
add
fstl
ljmp
arpl
inc
mov
insb
iret
pop
and
dec
mov
xor
fidivs
je
xchg
mov
scas
xor
and
jp
pop
jb
shll
insl
mov
dec
enter
insb
mov
clc
push
sub
mov
fnstcw
xlat
adc
rclb
or
addr16
push
cmp
or
sub
cmp
add
adc
xchg
jecxz
fistps
or
ljmp
repz
sahf
jne
cltd
clc
dec
scas
and
dec
test
insb
jle
cmp
cmc
xchg
push
mov
mov
sub
roll
mov
popa
jae
cli
cli
push
movsb
cmp
and
mov
dec
lcall
push
jae
je
push
cli
cli
loop
adc
push
jp
and
push
test
andb
xchg
dec
jle
lcall
sub
mov
lods
mov
into
out
sub
jg
xchg
into
out
mov
cld
xor
xchg
stc
jge
or
cli
bound
rorb
inc
and
dec
push
sahf
clc
jl
lea
aaa
shrb
dec
test
mov
cmpsb
jno
dec
push
lcall
clc
add
cmp
aas
shll
add
cli
or
fisubs
dec
cmpl
cmpsb
and
mov
jbe
xor
and
scas
enter
cmp
pop
inc
leave
mov
push
ss
mov
popf
ficomps
cmpsb
cmc
mov
in
xor
fmulp
fnstcw
push
push
ss
loope
repnz
mov
rorl
stos
in
pusha
dec
push
aas
pop
pop
shrb
pop
sbb
rcr
shlb
xor
shlb
and
mov
mov
mov
pop
stos
pop
inc
mov
xchg
lahf
jl
xchg
fsubl
inc
mov
cltd
lret
mov
in
js
mov
jmp
pop
mov
imul
aaa
xchg
mov
jecxz
dec
cmp
and
sbb
mov
inc
faddl
cmp
cmpsl
dec
outsl
sbb
clc
aaa
pop
testl
outsb
pop
inc
mov
outsb
out
adc
mov
fisubrs
imul
xchg
iret
inc
rcll
lds
mov
into
lcall
les
leave
or
mov
and
xor
cwtl
testl
add
insl
inc
inc
add
fs
mov
jle
cmp
inc
das
lods
movsl
outsl
sahf
jb
and
pusha
lahf
scas
xchg
mov
xchg
std
add
sub
xor
jns
ja
shld
sysenter
cmpsb
pcmpeqw
insb
fldl
xchg
rol
loopne
lods
and
jecxz
mov
hlt
push
int3
xor
popf
push
or
cli
mov
popfw
inc
lcall
fisttps
cld
loope
popa
pusha
dec
or
jp
ja
loope
add
sub
pop
dec
mov
sub
clc
push
cmp
cmp
idiv
or
ret
shld
or
sbb
xor
and
fwait
and
sub
sbb
idiv
fldl
stos
roll
lret
xchg
pop
mov
mov
mov
aaa
out
test
fwait
repnz
xchg
or
or
or
jne
push
or
and
adc
inc
and
sbb
pusha
adc
lods
cltd
push
fbld
pop
les
test
xlat
loopne
mov
mov
jne
lret
or
or
js
jne
lds
andl
inc
mov
jno
sbb
jne
jb
in
out
pop
ss
mov
mov
scas
shlb
xchg
repnz
rol
mov
imul
movsb
ret
clc
stos
mov
aas
xor
std
xchg
rcll
or
fwait
imul
aad
cmp
pusha
imul
or
hlt
inc
cs
repz
frstor
pop
popf
aas
mov
or
cmpsb
int
stos
push
das
xchg
out
and
or
mov
stos
xlat
adc
push
push
mov
iret
lock
sbb
rcll
inc
pop
popa
repnz
fnsave
push
cltd
popa
dec
ss
mov
cltd
js
inc
insl
orb
daa
jmp
icebp
fdivs
repz
andb
fcomip
out
in
inc
add
out
aaa
lock
push
mov
sbb
je
or
inc
iret
out
mov
inc
fwait
pushf
inc
scas
push
xlat
into
jg
mov
mull
inc
add
cmp
and
adc
aas
push
adc
adc
addr16
pusha
xor
out
and
pop
repnz
inc
fstl
mov
jno
dec
sbb
outsb
bound
adc
mov
and
das
mov
inc
push
mov
lock
int
cmpsb
into
push
jne
sti
push
ja
fstpl
jmp
mov
fwait
addb
fists
lock
fucom
ret
pop
ficoms
out
dec
mov
sub
repz
push
inc
cmpsl
push
fadds
test
out
and
in
mov
pusha
std
je
push
pushl
adc
add
adc
es
jne
sbb
addr16
es
rol
inc
mov
lods
dec
inc
xchg
pop
insl
dec
cmp
loop
sub
sbb
or
loop
lcall
and
xchg
sub
adc
in
flds
and
adc
inc
daa
enter
loop
imul
addb
or
mov
mov
fldt
push
leave
mov
xor
scas
fwait
adc
jmp
out
pusha
adc
cmp
adc
pusha
mov
jl
insl
test
jb
pop
sub
push
lcall
popa
rclb
push
scas
mov
xor
imul
xor
ljmp
sbb
and
mov
lcall
push
xchg
sub
pop
jno
sahf
xchg
outsb
pop
bound
xor
into
mov
in
jne
add
bound
xchg
mov
sub
aam
sbb
imul
and
lcall
dec
mov
xlat
mov
sahf
in
mov
pushf
pusha
das
nop
aad
jnp
call
add
push
std
cwtl
into
cs
faddl
aaa
test
mov
pop
ljmp
imul
jo
sbb
xlat
scas
out
ret
add
pusha
outsl
pop
xchg
out
sbb
aam
xlat
mov
adcl
fisubs
inc
fnstenv
push
mov
and
pop
jmp
jne
mov
cmpsb
add
jp
xchg
push
call
test
add
mov
data16
mov
cli
cmpsl
sarl
inc
sbb
lock
in
cltd
or
fidivrl
dec
aas
int
sub
push
clc
pusha
mov
clc
cwtl
sub
ds
and
cmp
orl
sub
fbstp
cwtd
cmp
lea
xchg
pop
movsb
pusha
push
sbb
inc
dec
data16
mov
lods
xchg
dec
and
mov
pop
pushf
xor
jno
and
fs
popf
sbb
je
push
sub
cltd
mov
clc
iret
fwait
mov
gs
repnz
inc
leave
dec
push
mov
mov
imul
lods
and
pop
je
pop
stos
nop
and
je
imul
iret
stc
and
lahf
sbbl
testl
je
dec
out
mov
pop
xor
cltd
sbb
mov
pop
fldl
xchg
aaa
pop
daa
dec
cmp
bound
push
mov
and
mov
pushf
imul
add
cmpsb
shll
dec
inc
xor
je,pn
in
sbb
cli
pop
pop
jecxz
pop
mov
andb
lahf
in
and
int
xor
inc
mov
cmpsb
insb
push
jle
pop
add
inc
lcall
inc
dec
dec
xlat
mov
mov
jmp
jns
into
jg
fiadds
call
and
ds
gs
cmc
inc
inc
xchg
mov
call
sub
xor
mov
jne
test
andb
and
mov
sbb
jecxz
pop
mov
inc
pusha
pop
xor
out
and
in
out
popa
in
jge
test
push
in
and
mov
cmp
mov
and
xchg
pop
pop
jecxz
pop
mov
pop
pop
into
imul
mov
or
pop
dec
clc
cmpsb
xchg
sub
inc
fstps
mov
fucomip
icebp
loope
notl
loope
popf
ljmp
dec
and
inc
pop
jne
mov
xchg
mov
push
xorb
dec
pushl
enter
and
out
cmp
xchg
pop
mov
pop
mov
fistps
inc
cmp
out
sub
and
sbb
je
and
andb
mov
pop
fldl
mov
sub
or
lock
scas
sub
jecxz
adc
sub
lods
lods
and
ljmp
inc
out
cmp
cmpsl
dec
cmp
insb
dec
adc
and
les
add
mov
insb
cmp
addl
sbb
inc
inc
push
loopne
and
push
mov
in
adcb
loop
out
push
movsb
loop
add
adc
and
pop
addr16
popf
inc
xchg
das
mov
sub
sub
pop
sub
mov
dec
mov
mov
lea
mov
and
xchg
mov
sub
xchg
das
mov
sub
cmp
mov
and
mov
cmp
mov
sub
out
push
and
and
pop
mov
inc
sbb
fsubl
ds
fsubrl
stos
and
jecxz
stos
dec
subl
dec
mov
xor
cmp
outsb
jecxz
push
scas
testl
insl
sbbb
push
and
aaa
daa
mov
pmulhuw
fiadds
inc
xlat
movsb
outsl
repz
ret
fmuls
lcall
fisubs
fs
mov
push
xor
lods
ljmp
orl
or
mov
jno
punpcklwd
imul
es
jmp
sub
repz
loope
fisubl
xchg
fsubl
aaa
pop
in
loopne
add
ss
in
loopne
loop
insb
xor
mov
inc
aam
pop
mov
fs
add
pop
and
jns
adc
xchg
push
outsl
mov
fcompl
ret
mov
push
lods
movl
xchg
xchg
xchg
push
mov
fcomps
dec
xchg
leave
stc
jp
xor
and
and
pop
mov
mov
aaa
jns
imul
mov
mov
cmp
out
jle
cmp
rcr
fisubs
sub
cwtl
sbb
shr
cmp
xor
sub
movsl
mov
fcompl
lahf
mov
xlat
push
add
outsl
inc
mov
cs
sbb
mov
mov
fildl
inc
jle
stos
push
add
and
mov
pop
push
add
ror
ss
movsl
cmp
mov
es
or
in
hlt
cmp
fisubs
or
sub
imul
stos
inc
mov
xchg
in
mov
xor
shll
in
testl
add
jmp
push
pop
mov
idiv
mov
mov
and
mov
aad
adc
rcll
imul
mov
jne
jae
cmpsl
or
mov
cmp
fdivp
pop
bound
inc
scas
mov
push
jno
sahf
jle
xchg
mov
fsts
and
cwtl
xor
mov
int
popa
inc
sub
lret
xchg
mov
daa
push
mov
stos
in
jae
mov
es
or
push
dec
push
movaps
xchg
mov
test
xchg
pop
dec
cmp
nop
dec
xchg
cmp
mov
fcoml
xchg
pushf
inc
sti
aam
mov
inc
add
and
dec
inc
cmpsb
int
cmp
mov
movsl
lods
inc
dec
xchg
jmp
cmp
sub
jae
shrb
mov
cmpsb
jb
testb
fcoms
jbe
add
push
out
add
out
les
jnp
aas
and
popf
add
xchg
push
pusha
mov
vmovss
mov
scas
rcr
sbb
adc
cmp
inc
and
iret
repz
xchg
add
mov
mov
and
inc
stos
fbstp
xlat
out
cmp
mov
dec
popf
adc
scas
and
aam
lock
pop
lds
sub
inc
nop
aaa
popa
mov
dec
dec
sahf
repz
inc
daa
cli
dec
and
push
cwtl
cmp
push
mov
inc
popa
pop
fimuls
arpl
es
mov
add
sbb
dec
xor
xchg
dec
popa
test
dec
jno
pusha
roll
sub
into
sbb
mov
stc
loop
shlb
lcall
inc
mov
and
pop
ss
or
ffree
mov
mov
popa
roll
xor
cmp
xor
sub
or
mov
iret
call
mov
xor
push
inc
dec
xor
inc
int
or
arpl
fsubs
shr
mov
dec
cmp
movsl
and
popa
into
pop
adc
mov
int3
xchg
inc
mov
inc
push
jp
adc
mov
inc
mov
pusha
cmp
push
cmpsl
rcrl
loop
cmp
andl
cs
scas
ss
mov
loop
movsl
sub
push
pushf
push
stos
call
cmp
and
lock
mov
lea
stos
scas
rol
aam
sub
inc
movsl
and
clc
js
dec
mov
mov
test
int3
js
dec
inc
or
mov
jg
movsb
loop
std
and
scas
es
cmp
sbb
scas
push
push
mov
ret
pusha
popf
jne
mov
jnp
lcall
xor
shll
cmp
fdivrs
push
mov
out
xchg
xor
jb
add
lods
ss
daa
and
in
inc
aam
xor
sub
lods
and
lcall
sbb
or
cmpsb
cli
mov
fistps
mov
aaa
sub
mov
stos
cmpsb
inc
mov
cmp
mov
imul
mov
dec
adc
xor
pop
push
addr16
int
nop
push
and
dec
popa
ds
xor
sub
sub
and
ds
pop
mov
add
sbb
dec
pop
mov
bound
pop
popa
xor
mov
sub
pop
and
lea
outsb
sub
push
fstpl
test
jl
inc
mov
and
push
inc
jmp
dec
sub
cmp
in
add
hlt
sub
mov
mov
xchg
shrl
pop
push
bound
nop
mov
cwtl
fists
jno
xorl
test
inc
lcall
push
and
loop
sbb
sbb
lahf
xchg
cs
push
jae
pop
push
jbe
pop
pop
adc
xlat
xchg
lods
inc
gs
ret
test
pop
jne
outsl
mov
dec
lcall
mov
or
test
xor
mov
into
clc
and
lahf
js
mov
cmp
bound
pop
inc
fcompl
cmp
addr16
jno
and
les
cmpsl
cs
sub
mov
fs
fsubp
jno
lcall
ljmp
pop
rorl
rol
fcoms
loop
int
fstp
mov
inc
int
mov
xchg
inc
movsl
inc
fidivrs
add
frstor
out
scas
in
mov
pop
mov
adc
sbb
cs
sub
mov
or
insl
movl
sub
mov
scas
fwait
fwait
int
inc
daa
nop
pop
xlat
cmp
xor
movsl
pop
sub
imul
gs
jbe
inc
add
aaa
aad
leave
and
aaa
fisttps
sbb
adc
inc
push
aas
sub
or
enter
xor
enter
lret
fstps
pushf
fstpl
out
shlb
test
dec
enter
sbb
cmp
mov
or
push
fdivrs
mov
mov
inc
fstpl
int3
and
mov
inc
pop
les
iret
iret
not
xchg
mov
call
out
jg
inc
fldl
movsl
inc
mov
mov
push
fwait
sbb
cltd
call
mov
cs
das
add
cmp
repz
shll
mov
mov
pop
xor
mov
and
push
pop
movl
jnp
pop
or
mov
pop
mov
inc
repnz
mov
dec
cmpsl
cmpb
lods
loope
pop
and
mov
sub
movsl
xor
cmpsl
and
sub
pop
enter
out
fld
xor
mov
dec
cmpsl
dec
mov
andb
pop
xor
xchg
repz
pop
xlat
sbb
fdivrs
and
imul
jae
push
xor
and
xorl
nop
mov
push
je
mov
jbe
movsb
add
aas
xor
aaa
aas
ja
mov
xchg
subb
mov
dec
push
sbb
adc
cmp
cld
fldenv
popf
fst
leave
xor
movsb
insb
adc
adc
mov
pop
jbe
mov
and
imul
mov
or
call
je
jne
mov
cmp
add
scas
into
cmp
and
mov
mov
mov
andl
dec
idivl
mov
dec
inc
and
xchg
push
std
test
pop
test
pusha
lret
gs
sub
lret
cmp
fistps
push
xabort
int3
pusha
adc
jecxz
jb
push
ret
rcl
cmp
cmp
pusha
mov
adc
mov
movsb
std
pop
ds
sub
loop
aas
cmp
xlat
cs
nop
mov
dec
push
mov
scas
jmp
or
inc
sub
push
mov
sub
insb
sarl
dec
es
mov
movsb
jge
lea
insl
xchg
movsl
sub
or
popa
push
faddp
sub
out
or
nop
mov
ds
ds
outsl
ljmp
leave
andb
out
leave
mov
or
imul
and
rcr
fadd
sarb
mov
pop
bound
popa
jge
push
ds
stc
fidivrl
daa
pop
fstpt
cmp
mov
cltd
jl
fsubl
cmp
shlb
movsb
dec
movsl
xor
lahf
sbb
lret
jg
pop
dec
shll
xor
mov
jb
mov
sub
dec
mov
in
mov
adc
adc
sub
dec
and
mov
pop
sti
or
cmp
sbb
shl
lock
loop
daa
cmp
in
ja
jno
pushl
fisubrs
push
andb
mov
lcall
mov
adc
sbb
decb
or
xchg
nop
and
clc
insl
jecxz
and
stos
jo
mov
mov
nop
push
popf
cli
arpl
aaa
divl
adc
addb
clc
fisubrs
scas
in
mov
es
mov
cs
dec
mov
mov
cmp
push
jmp
xchg
daa
aas
daa
mov
movsl
loope
insb
push
jmp
bound
jecxz
dec
fdivs
ds
das
in
mov
pop
jmp
and
add
dec
jle
repz
cmpsb
test
jo
push
inc
jg
sbb
popf
pop
xchg
xor
cwtl
mov
pusha
jb
fsubp
push
scas
andb
push
sub
xchg
fldenv
cwtl
sub
orb
pop
sbb
push
push
int
xchg
push
fs
push
cmp
ret
dec
xor
sbb
mov
push
lea
mov
sbb
cli
popf
addr16
xor
lock
push
xchg
push
mov
or
out
inc
sbb
cwtl
jno
adc
jns
xor
data16
ljmp
aad
sti
ss
bound
cmpsb
popa
add
cmpsb
sti
xchg
cs
scas
xor
jb
mov
and
push
inc
inc
push
leave
and
arpl
push
mov
scas
int
cmp
mov
push
fstp
add
inc
mov
clc
rolb
push
sti
inc
sub
lds
cmpsl
pop
shll
xchg
and
ljmp
cmp
divb
mov
aas
xchg
cmpsl
psubusw
xor
iret
ds
int3
popa
in
cmpsl
jle
pop
mov
dec
ljmp
pop
mov
fwait
cmp
fidivrl
fs
fidivl
cld
push
aas
es
and
mov
mov
rcr
dec
andb
xor
scas
shl
push
out
cmpsl
pop
fsin
mov
imul
icebp
mov
int
data16
xor
stc
jnp
cmpsb
pop
stc
and
es
in
es
divl
pop
xor
into
arpl
aaa
cmove
std
mov
pop
xchg
fimull
push
outsl
aaa
xor
icebp
jg
shlb
fsts
je
push
add
xchg
inc
ret
dec
fiadds
data16
inc
test
and
lea
loopne
rcrb
mov
push
xor
ljmp
lahf
inc
pop
sbb
mov
es
inc
sub
dec
mov
jns
dec
mov
push
xchg
outsl
addb
rcrl
mov
enter
in
fcomip
daa
push
dec
loopne
jle
inc
clc
inc
sarl
addr16
jle
or
xlat
jecxz
xor
lds
sub
enter
cmp
xchg
loop
push
sbb
or
lahf
pop
jl
rclb
xchg
movsl
adc
inc
xchg
scas
dec
mov
or
sbb
test
sti
mov
inc
lcall
push
arpl
adcl
test
or
inc
lret
fucomp
push
and
pop
jns
add
std
inc
mov
adc
mov
faddp
mov
es
loop
dec
sbb
xor
xor
dec
inc
mov
sub
mov
mov
push
data16
inc
insl
inc
cmp
jns
xlat
mov
movsb
mov
and
push
jb
pop
inc
pusha
dec
push
xchg
test
lods
pop
jo
mov
push
lret
and
mov
pop
fadds
pop
inc
adcb
xchg
pusha
jp
add
scas
sbb
aam
jp
data16
adc
loopne
repz
cmp
pop
icebp
mov
push
jno
rcll
inc
fldcw
and
sarb
scas
popf
andb
pop
push
aaa
test
xchg
mov
mov
xor
push
and
mov
cmp
mov
or
popa
adc
fldcw
sbb
fisubrl
popa
int3
into
aas
and
mov
push
cltd
jle
push
mov
in
call
test
mov
scas
push
inc
popa
scas
cltd
sub
lret
scas
pop
mull
int
arpl
popf
inc
fstpt
cltd
cmp
push
lret
stc
mov
jne
js
es
mov
dec
cmp
pop
rorb
xchg
jo
cmpsb
mov
inc
fnstenv
xor
and
inc
mov
fld
repnz
adc
stos
cmpsl
out
mov
pusha
cmp
mov
inc
xor
fnstcw
xchg
mov
cltd
lahf
mov
cmp
out
mov
lcall
mov
fucomi
lret
jge
pop
movsl
sub
ret
cli
mov
jno
mov
fwait
cmp
cmp
in
or
subb
cmpsl
xor
call
xchg
adcb
andb
cli
cli
add
jecxz
outsl
fnstenv
mov
jmp
push
pop
jno
fadd
test
dec
lcall
lods
sti
jle
add
sub
leave
xor
sti
inc
lret
sub
imul
and
xchg
out
cli
cli
lahf
push
test
xchg
adc
orl
jg
adc
sub
inc
in
stos
mov
ss
xchg
mov
lods
jae
ss
lahf
push
sub
and
ss
adc
rcrl
hlt
or
pop
stos
clc
push
inc
shr
xor
xchg
inc
mov
hlt
test
push
cmp
cld
andb
and
and
movb
in
imul
iret
cmp
out
xlat
mov
pop
xchg
mov
les
mov
rorb
fistps
ljmp
aad
fisubl
shlb
add
add
les
jge
push
pop
pop
aaa
mov
sub
pop
xchg
fldcw
and
movsb
loopne
lcall
jge
stos
adc
and
cmp
cltd
test
inc
push
pop
sub
xchg
lcall
push
pop
push
sbb
cmp
jmp
testl
rorb
ss
push
hlt
xchg
stos
pop
pop
pop
add
cmpsl
sbb
adc
fisttpll
adc
fsubs
lcall
inc
cli
test
cmp
mov
and
sub
mov
pop
xor
xchg
out
test
cmp
dec
and
ror
push
les
mov
xchg
scas
fsubrs
cmp
scas
add
sti
jnp
inc
ds
mov
ret
adc
notb
shr
in
dec
push
outsl
aas
mov
frstor
dec
and
orb
pop
cmp
stc
pop
push
jge
imul
mov
stos
mov
pop
adc
jmp
arpl
adc
incb
stos
bound
or
add
push
xor
xor
push
leave
out
jg
imulb
sahf
sub
cmp
and
xchg
dec
xchg
pop
pop
fcoms
xchg
or
inc
jb
or
sbb
push
fadds
or
ud1
and
addr16
jmp
ficompl
cwtl
and
inc
or
mov
and
mov
es
jno
ljmp
mov
repz
add
mov
and
or
adc
mov
inc
aas
push
mov
and
push
pop
mov
cld
mov
pop
ljmp
addr16
and
jecxz
pop
cmp
jmp
sbbl
pusha
bnd
divb
cwtl
dec
push
mov
enter
daa
pushf
leave
push
and
adc
pusha
mov
sbb
jns
pop
cmp
pop
imul
sbb
insl
hlt
cli
enter
mov
pop
rol
cmp
sti
dec
sbb
je
adc
xchg
sbb
jno
sub
mov
jbe
and
ret
mov
push
aas
jbe
inc
and
frstor
inc
scas
dec
inc
das
pop
addl
sti
inc
and
jns
out
andb
arpl
in
lea
in
inc
sbb
add
pop
xor
scas
pushf
fstp
adc
aam
mov
mov
add
xchg
inc
out
xchg
inc
out
adc
pop
xchg
sbb
inc
and
mov
data16
pop
cmpsb
out
aas
movsb
add
sbb
pop
aam
pop
xchg
inc
lahf
xchg
mov
out
adc
dec
mov
push
fs
mov
pop
jbe
inc
cmc
pop
adc
xor
push
aas
movsl
or
pop
outsb
cmpsb
in
sub
pop
sub
mov
inc
aas
cmpsb
cmp
aaa
push
testl
sbb
out
paddd
bound
lahf
insl
or
jmp
xor
add
mov
out
sub
jno
xor
or
inc
add
and
repnz
dec
add
lods
pop
cmp
mov
ficompl
fs
out
xor
rdmsr
cwtl
aaa
out
pop
outsl
stos
insb
sahf
mov
aaa
ds
xlat
test
push
mov
mov
out
dec
cmp
inc
lcall
std
outsb
cmp
mov
inc
lahf
sbb
dec
stc
out
stos
aaa
fucom
cmp
daa
xlat
inc
ss
mov
cmp
arpl
push
mov
inc
mull
roll
inc
add
pusha
daa
inc
and
inc
inc
lds
mov
aaa
arpl
fstps
popfw
sarl
add
fbld
sbbb
stc
inc
cmp
jge
aaa
out
xor
shlb
fs
inc
lret
es
loope
lcall
inc
push
push
mov
gs
in
inc
ficoms
push
pop
fisubs
xor
mov
stc
jp
sub
cmp
push
lret
stos
es
xor
cmpsb
mov
push
mov
xor
jmp
cmpsb
fiaddl
fnstenv
out
daa
gs
cmovae
pop
arpl
jmp
pop
mov
xchg
mov
daa
push
sbb
jae
in
shrl
mov
cmpsb
push
push
cmp
testb
sbbl
aad
and
call
stc
xchg
test
adc
pop
pop
lcall
repnz
cmpsb
cmp
inc
scas
sub
push
test
loope
dec
scas
test
cli
push
mov
je
push
je
shlb
loop
cmpb
out
inc
aas
xchg
daa
or
xchg
outsb
cmp
pusha
jbe
aam
mov
cltd
es
ds
pop
test
push
and
cmc
inc
cmp
popa
mov
ficoms
fidivrl
push
arpl
sub
pop
mov
inc
sub
inc
xor
push
dec
mov
fstpl
arpl
test
sarl
inc
push
mov
xor
cmp
ss
bound
outsb
fldl
add
pop
sbb
ja
ja,pn
cmpsl
stc
mov
xor
popa
push
and
jne
and
inc
and
pop
or
stos
cmpsb
imul
loop
incl
sahf
add
xchg
imulb
xchg
fnstenv
mov
inc
pop
popfw
shll
mov
add
ljmp
cmpsl
cmp
fisubl
sti
daa
jno
or
sub
mov
aas
mov
movsl
jae
sbb
and
pop
pop
jae
sub
sbb
dec
or
cmp
rclb
lods
scas
xchg
cmp
enter
cwtl
orl
bound
add
cmp
push
hlt
xchg
stos
addr16
stos
push
lea
cmp
and
stos
adc
mov
mov
negb
adc
dec
push
jecxz
scas
xchg
mov
sti
dec
push
into
inc
stc
daa
lds
leave
pop
inc
xchg
jb
push
scas
or
daa
jle
push
and
daa
mov
xchg
push
ret
sahf
sub
test
mov
mov
repz
es
mov
pop
jae
and
aam
sbb
ss
daa
ja
aaa
cltd
push
adc
cmpsb
pop
mov
and
push
into
cs
ret
pop
sbb
cmpsb
jecxz
adc
sub
ret
shrl
imul
lcall
inc
sbb
popf
mov
cmp
data16
dec
cmp
imul
cmp
pop
divb
fmuls
add
or
scas
jno
imul
push
les
sub
into
push
push
adc
test
mov
dec
push
pop
xor
clc
movsb
xor
sub
ss
push
iret
jo
mov
cmc
xchg
adc
subb
push
jmp
pop
loopne
mov
xchg
cmp
clc
rcr
mov
inc
mov
lret
adc
out
aaa
adc
mov
negb
pop
sub
loopne
mov
inc
xor
pop
xchg
and
clc
mov
iret
add
movsb
scas
scas
adc
pop
sbb
xchg
shrb
mov
xor
out
pop
outsb
stos
inc
roll
fdivrl
imulb
push
in
aad
sti
iret
cmp
xchg
pop
pop
divb
pop
repnz
scas
rol
and
mov
push
mov
sbb
cmp
or
jo
aas
mov
es
sbb
scas
cmp
idiv
cs
xor
movsl
push
xorl
inc
iret
shll
popa
cmp
pop
push
jp
je
cmpxchg
adc
les
xor
push
pop
inc
jo
jae
mov
cmpsb
adc
cmpsb
cwtl
pushl
pop
pop
mov
add
daa
add
push
scas
hlt
les
popa
add
out
pop
xor
daa
cli
leave
push
out
xor
mov
lea
cmpsb
cmpsb
orl
dec
pop
push
enter
mov
ljmp
out
lcall
and
push
xor
rolb
xchg
jmp
scas
test
push
pop
loope
push
jb
dec
xor
sbb
push
sbb
mov
mov
jo,pt
scas
insl
lock
jle
cs
xor
jmp
pop
add
dec
mov
and
adc
lods
addb
imul
scas
loop
stc
mov
fstp
xor
xchg
fcoml
daa
stc
adc
mov
push
jmp
inc
cld
scas
pusha
gs
es
aas
fstl
movzwl
push
pop
insl
js
fildll
mov
fsubs
dec
xchg
xor
std
ljmp
out
es
movsl
scas
inc
aaa
cmpsl
xor
ret
push
jle
cmpsl
fisubl
lahf
pop
push
cmpxchg
inc
sub
push
inc
push
fstps
mov
push
cmpsl
xor
addr16
incb
fldz
scas
daa
in
adc
adc
pop
in
sub
cmp
adc
cmp
or
test
bound
jae
cs
sahf
cmpsb
push
scas
jno
add
push
lahf
pop
les
and
inc
sarl
or
mov
lds
xchg
test
insb
cmpsb
addr16
pop
pusha
sub
or
js
pop
jne
mov
es
and
lods
cmpsb
mov
stos
das
sub
das
and
push
daa
push
inc
push
sahf
jnp
or
repnz
xchg
fmulp
mov
cmp
arpl
imul
inc
adc
sbb
inc
leave
sahf
sbb
fldl
arpl
js
or
out
jp
adc
and
sbb
pop
or
imul
mov
mov
and
xor
mov
xor
ficompl
fs
pusha
cmp
push
aas
sbb
fidivl
dec
add
push
jl
mov
xor
cmp
addr16
inc
loop
push
add
or
dec
inc
dec
fnsave
arpl
fnstcw
push
in
gs
and
mov
xchg
into
subb
dec
in
scas
lcall
jb
addr16
int
lret
jecxz
shll
sbb
mov
in
imul
ret
fwait
out
xchg
pop
fdivs
sub
fbld
cmpsl
imul
gs
out
mov
mov
mov
mov
mov
mov
mov
or
shrb
push
scas
sub
and
mov
inc
mull
shl
inc
jne
subl
es
add
outsl
test
inc
xor
adc
cli
in
pop
dec
out
xor
faddl
dec
push
std
pop
push
out
jg
mov
int
xchg
pushf
push
and
outsl
adc
mov
mov
jae
imul
push
and
cmp
sub
inc
xor
pop
enter
daa
nop
inc
add
repz
aaa
shlb
fisubs
lahf
test
arpl
mov
sbb
mov
sbb
pop
sbb
cmp
add
xor
xchg
cmpsb
and
sub
push
and
lahf
and
bound
mov
pop
filds
loopw
sahf
and
push
inc
ret
and
cmp
push
into
addr16
jne
cmpsb
sub
xchg
xor
jae
cmp
push
jo
inc
enter
daa
dec
cltd
xchg
cmp
repz
out
pop
add
dec
mov
xchg
mov
outsl
out
add
sub
inc
pusha
pop
cmpsb
out
out
jns
outsl
cmpsb
push
out
jns
xchg
into
mov
int3
push
sbb
inc
pop
int
lahf
and
shll
push
ljmp
adc
sarl
cli
add
mov
dec
arpl
mov
pop
cmp
jp
dec
dec
add
push
stos
adc
imull
ss
adc
test
loope
dec
xchg
inc
out
mov
xchg
push
cmp
sub
mov
loop
pop
out
jns
xchg
ret
dec
and
sub
inc
out
rorl
stos
add
imul
mov
pop
xor
test
xor
sbb
das
sub
arpl
in
push
gs
test
cmp
fildl
fisttpl
sub
faddl
cmpsb
and
jns
xchg
cli
iret
dec
dec
or
lahf
pop
inc
push
sarl
adc
ja
das
out
xor
push
loopne
sahf
pop
icebp
add
and
testb
mov
and
ja
inc
ja
dec
out
push
jmp
icebp
out
add
inc
stos
or
sahf
test
mov
pop
dec
mov
es
and
pop
xlat
mov
pop
mov
push
gs
mov
fsub
inc
pop
cmpsb
or
or
mov
fsubs
jl
adc
push
sub
adc
mov
gs
push
addb
xchg
jnp
adc
dec
dec
xor
shrl
sbb
sub
add
insb
insl
gs
inc
ss
lea
sub
adc
add
iret
pop
dec
and
add
mov
xor
int
cmp
mov
pop
add
push
xor
das
movsb
push
jle
adc
das
xchg
push
xlat
add
xchg
inc
add
adc
rclb
xchg
inc
fcoms
adc
mov
adc
inc
out
adc
mov
imul
xchg
arpl
lret
adc
sbb
mov
mov
adc
out
adc
ret
cmpsl
mov
adc
mov
xchg
adc
cli
nop
inc
cmpsl
mov
adc
mov
imul
cmpsl
mov
adc
subb
dec
out
addr16
adc
mov
cmp
push
arpl
movsb
xor
in
mov
fiadds
ja
jo
pop
ljmp
jecxz
out
in
pop
aas
mov
xlat
mov
fsts
int
in
mov
jecxz
pop
aas
jle
popf
and
xchg
loope
mov
inc
aaa
scas
sbb
and
pop
arpl
mov
mov
stos
fstps
fbstp
dec
pop
subl
aas
ja
pushf
imul
cwtl
add
into
push
push
dec
rcrb
movsl
loop
xchg
or
mov
jnp
adc
cwtl
xchg
out
popf
pop
div
lods
vfrczpd
cmp
stc
mov
adc
movsl
add
inc
repz
lret
fwait
pop
rolb
inc
les
gs
mov
mov
dec
popa
and
dec
std
xchg
mov
add
ds
xlat
data16
out
push
pop
mov
int3
iret
rcrb
push
idivb
cmp
dec
cmp
popa
and
insl
lahf
ret
imul
insl
jmp
iret
push
std
notl
inc
adc
pushf
and
pushf
cmp
or
negl
jo
xor
push
hlt
mov
add
daa
mov
jnp
fisubrs
dec
addb
inc
push
xchg
sub
mov
jge
adc
and
adc
jne
je
jae
mov
callw
fwait
push
push
mov
bound
mov
and
xor
push
mov
adc
mov
push
dec
mov
test
mov
pop
cmpsb
sbb
ljmp
in
insb
repz
add
inc
and
jg
lahf
adc
mov
loope
mov
loope
mov
loope
mov
loope
mov
loope
mov
loope
mov
loope
mov
loope
xchg
pop
fistpl
pop
sahf
xor
xchg
and
cmp
daa
xchg
fwait
sbbb
adc
xor
cmpsl
addr16
xlat
jge
fwait
sbb
or
xchg
aam
roll
popa
packsswb
pushf
xchg
je
dec
pop
xchg
push
in
setp
into
std
insb
jns
shl
sub
shrl
ds
mov
mov
fistpll
loope
mov
cmpsl
adcl
icebp
adc
jo
sub
sbb
iret
pop
jmp
movsb
repnz
mov
jl
sti
inc
xchg
addr16
sub
popf
xor
aas
bound
mov
jb
cmp
pop
outsl
sahf
pop
mov
mov
mov
push
movsb
insl
sub
sbb
outsb
lahf
movsb
inc
outsb
mov
les
inc
test
fsubs
lcall
shlb
push
xor
test
stos
test
aam
mov
xchg
mov
jg
mov
mov
aad
sbb
pop
cmpsl
scas
ds
add
fstps
lods
fwait
push
mov
decb
cmpsl
and
push
push
mov
mov
pusha
mov
adc
cltd
insb
mov
push
loope
mov
sub
xchg
lret
mov
bound
es
cmp
fcomps
xor
shll
sahf
orb
mov
fadds
adc
mov
hlt
xchg
inc
pop
into
fstpt
movsl
into
lcall
test
add
push
cltd
cs
push
call
pop
mov
movsl
popa
mov
out
and
adc
fbld
imul
sbb
or
cli
push
push
ret
in
orl
outsl
sbb
aaa
push
out
or
lods
js
jp
outsl
xchg
mov
mov
pushf
test
xor
push
cmp
lea
push
xor
jnp
jno
pop
test
js
xor
mov
pop
loop
pushf
jl
xchg
pop
jl
dec
add
mov
mov
add
fdivl
pushf
pop
dec
pop
jp
pop
pop
cs
xor
rorl
inc
cmp
insl
jg
clc
mov
pushf
lock
fcomi
pop
adc
pop
repnz
lcall
add
fs
jg
sahf
xor
mov
adc
test
test
adc
sub
dec
xor
jae
loop
sahf
add
pop
push
insb
testb
inc
mov
push
jae
or
lcall
imulb
lds
dec
loope
pop
xlat
and
add
push
dec
arpl
fldcw
loope
ja
stc
rcrl
xor
das
loopw
push
inc
cli
mov
fsts
sahf
lahf
xchg
add
js
loop
jbe
mov
xchg
mov
add
daa
cmpsl
inc
jbe
repnz
aaa
iret
arpl
dec
mov
inc
sbb
int
mov
iret
inc
inc
sahf
sti
das
jno
pop
mov
xor
push
mov
inc
mov
mov
ljmp
mov
pop
pop
push
in
addl
mov
fisubl
push
pop
scas
mov
inc
or
out
cs
aas
arpl
data16
mov
inc
and
sbb
dec
cmpsb
sahf
inc
jp
repnz
inc
gs
wrmsr
adc
cmp
mov
xchg
mov
roll
mov
lret
pop
and
sahf
jg
stc
inc
xchg
bound
cmovae
and
xor
cmp
cmpsb
ds
fcmovu
push
sbb
xchg
les
mov
aaa
andl
fld
mov
inc
sti
data16
pop
mov
hlt
inc
sub
sahf
cmp
loop
packuswb
sub
xchg
mov
es
add
pop
mov
inc
daa
aas
mov
arpl
fldenv
pop
sar
inc
jge
rcrl
push
push
inc
aad
jae
std
inc
mov
sub
inc
sbb
cmpsl
stos
mov
mov
xor
cmp
addr16
cmpsl
and
fidivl
or
cmpsb
xor
andl
rolb
ficompl
add
or
inc
inc
fldl
arpl
mov
inc
xor
sbb
inc
and
shll
imul
lock
daa
jmp
sahf
mov
mov
jle
xchg
daa
arpl
rorb
inc
inc
int
jnp
stc
inc
xchg
bound
sub
lcall
xor
xchg
cmpsb
fiaddl
fnstenv
jmp
gs
add
pushf
aas
enter
push
cmpsb
cmpsb
inc
jb
cli
scas
daa
mov
jmp
gs
add
or
outsl
leave
xor
push
mov
inc
test
mov
cli
lahf
jbe
cmpsb
inc
xor
in
roll
rcrb
outsl
arpl
int
jnp
cmc
repnz
fisubs
mov
cmp
int
push
xor
cmpsl
addr16
addb
into
fbld
pop
push
or
mov
mov
aaa
fwait
arpl
fnstcw
push
shl
inc
add
into
fimull
daa
fsts
inc
test
add
mov
in
addl
mov
lahf
es
cmp
mov
fildll
cmp
mov
adc
jecxz
cmpsb
cmp
fimull
pop
daa
sbb
scas
xor
jmp
cmpsb
rolb
fisubl
mull
add
rcrb
push
inc
inc
arpl
mov
inc
out
insw
roll
inc
adc
rcr
mov
mov
sahf
mov
bound
mov
mov
rcl
inc
in
mov
xor
cmp
loopw
adc
fidivl
pop
dec
push
mov
data16
arpl
push
fsincos
mov
inc
pop
sbb
cwtl
out
inc
mov
aaa
lahf
arpl
fldcw
dec
shl
inc
insl
mov
dec
daa
rcll
jmp
inc
mov
ljmp
jmp
push
daa
fwait
inc
jle
divb
lret
sti
mov
inc
pop
arpl
mov
fsts
mov
das
pop
inc
or
push
mov
loope
mov
inc
addr16
inc
xchg
mov
xor
cmp
addr16
sahf
pop
in
scas
xor
int
mov
push
fst
mov
cmp
arpl
push
add
jg
cmp
mov
pop
jmp
inc
scas
test
inc
dec
mov
xor
and
inc
jnp
in
cli
mov
fnsave
mov
cmp
arpl
push
sarl
mov
in
xorl
ror
inc
dec
mov
xor
cmp
inc
andl
mov
push
mov
cmp
mov
fcmovnbe
cmp
arpl
fnstcw
pop
rorl
inc
add
push
inc
inc
rcrl
mov
ljmp
jecxz
rcl
inc
icebp
mov
xor
lds
neg
jp
jecxz
cmpl
outsb
cmpsb
addb
fcmove
daa
dec
push
sti
inc
jns
pop
daa
and
arpl
movsw
ror
inc
dec
mov
xor
leave
sahf
jg
stc
inc
xchg
bound
sbb
fisubrs
stos
pop
push
dec
inc
lds
xor
cmp
fisubl
mov
or
pop
mov
add
xor
xlat
daa
imul
call
aaa
xchg
arpl
fxch
mov
inc
out
data16
pop
scas
sbb
inc
mov
mov
popl
sahf
scas
das
test
sbb
xor
pop
inc
int
mov
sub
mov
cmp
arpl
jle
adc
cmp
inc
push
fldl2e
mov
inc
add
mov
aaa
repz
inc
mov
inc
adc
adc
dec
cmpsb
xchg
inc
or
fcmovb
daa
pop
push
add
pop
and
aaa
flds
mov
push
and
lahf
addr16
cmpsb
ljmp
add
inc
inc
pop
fstl
arpl
mov
inc
packuswb
aad
icebp
mov
xchg
arpl
xchg
fnstenv
data16
xor
pop
inc
mov
inc
arpl
rcll
fisubl
hlt
scas
xor
bound
daa
inc
ljmp
arpl
pop
inc
mov
fstl
arpl
fstpl
ret
dec
and
sahf
out
imul
mov
xor
leavew
shrl
loope
ja
sahf
divb
sbb
push
pop
cmc
pop
add
and
mov
callw
mov
lods
cli
outsb
iret
dec
mov
aas
add
pop
aaa
and
mov
add
pop
jg
fcmovbe
push
outsb
mov
xchg
out
xor
push
lds
daa
sub
js
jp
andb
add
dec
pop
daa
mov
sti
mov
outsl
jge
test
ss
mov
jo
mov
imul
adc
cmp
inc
out
movsb
cmpsl
sub
js
aaa
xlat
pop
movsb
jmp
sub
add
mov
push
push
outsl
inc
push
enter
xchg
mov
mov
cmp
bound
jno
ja
aas
mov
inc
inc
lea
jnp
cld
push
push
sub
std
scas
mov
fwait
out
cmp
push
outsl
cmpsb
in
cmp
test
xor
into
bound
inc
insl
add
loope
adc
jg
push
test
test
cs
insl
pop
shr
iret
push
dec
inc
jno
repz
push
jmp
inc
dec
push
inc
cmpsl
sbb
pop
leave
iret
ja
nop
pop
negl
mov
dec
add
dec
push
mov
xorl
mov
cmpsb
test
xor
out
push
sub
add
xchg
inc
push
aaa
push
shll
xor
mov
rorl
xor
xchg
fcmovb
enter
lahf
add
bound
pop
rclb
imul
dec
xchg
pop
cmpsl
aaa
out
inc
push
in
cs
dec
add
mov
jp
jb
pusha
test
xor
fistpl
sub
sti
pop
jge
pop
out
mov
cmpsb
and
pop
mov
mov
lret
cmc
xorl
mov
stos
adcb
add
xchg
cmp
jmp
mov
cmp
ret
pop
dec
pop
inc
in
push
jnp
rorb
in
scas
cmp
stos
fistpl
fldt
aas
inc
test
daa
rcrb
push
sbb
enter
inc
mov
js
sub
out
push
cmp
nop
dec
mov
lret
nop
lret
loopne
mov
mov
sbb
add
out
out
out
mov
leave
mov
divb
ja
inc
sti
inc
aad
aas
shl
orb
adc
aaa
push
adc
outsb
xor
xorb
push
lret
cwtl
pushf
das
test
dec
mov
mov
fisubrs
jmp
mov
adc
test
std
jnp
std
mov
mov
out
jmp
mov
leave
sub
nop
into
mov
lret
push
push
jmp
inc
rcr
and
adc
out
and
inc
xor
decb
push
cmc
pop
lret
roll
sarb
dec
sti
flds
xor
js
pop
mov
mov
push
mov
mov
dec
sahf
cld
pop
adc
mov
jle
scas
sub
popa
inc
mov
mov
das
ficoms
loop
shlb
enter
fs
sahf
daa
cmpsl
cltd
cmp
mov
mov
enter
mov
jno
pop
lcall
xchg
or
fcmove
push
stos
int
loopne
scas
sti
pop
and
inc
inc
push
cltd
jmp
int3
ficoms
lret
pop
xchg
sbb
into
js
lahf
jp
mov
scas
add
dec
daa
and
sbb
ds
dec
mov
leave
test
out
mov
stos
inc
pop
sbb
mov
inc
es
push
push
pop
sub
push
push
dec
cwtl
push
inc
stc
dec
jns
enter
leave
mov
movsl
es
pop
mov
push
pop
int
cmpb
sbb
lds
shlb
out
scas
mov
jb
pop
iret
jg
leave
shrb
mov
stc
inc
xchg
mov
leave
cmp
xchg
dec
jb
fiadds
dec
cli
fadd
loop
and
insl
adc
loop
popl
sbb
xlat
adc
mov
inc
stc
cmpsl
sbb
enter
enter
jmp
inc
stos
fmuls
mov
sub
stc
scas
dec
jnp,pt
mov
imul
xchg
inc
and
scas
pop
gs
sbb
and
sub
xchg
dec
sbb
jno
loop
and
push
fiaddl
sbb
arpl
mov
arpl
arpl
mov
out
lods
movsb
push
mov
scas
push
xchg
push
sbb
sub
loope
ret
push
and
roll
add
inc
mov
xor
sbb
jg
imul
out
push
and
mov
mov
sub
pop
les
sbb
push
xor
mov
popf
stos
fcmovnb
mov
fs
push
pushf
pop
mov
fisubs
jle
push
and
adc
imul
stos
xchg
jb
stos
sbb
sub
mov
lods
lcall
xchg
mov
fwait
jno
xchg
mov
fists
outsb
imul
cwtl
jle
sbb
push
aam
push
aaa
xchg
pop
aaa
pop
test
adc
mov
add
clc
sub
push
call
sub
push
enter
cmp
rorl
sub
loope
sbb
icebp
invd
sub
punpckhbw
mov
daa
in
dec
push
aaa
jmp
sub
cwtl
sub
in
and
or
repnz
jns
sub
cmp
movsb
adc
sbb
in
sbb
in
mov
cs
inc
cmp
inc
mov
cmp
dec
test
jne
xchg
xchg
cs
xchg
iret
nop
sbb
notl
int3
pusha
xor
into
and
into
repz
into
xchg
popf
movsb
imul
data16
jecxz
sub
push
in
jge
add
das
or
shl
nop
adc
out
or
das
outsl
mov
xor
pop
dec
iret
test
cmp
mov
and
lret
imul
and
push
pavgw
mov
in
adc
cwtl
pop
arpl
test
ret
jecxz
scas
int
add
jle
sbb
stos
sbb
imul
pop
loop
push
pop
rorl
fdivp
movsl
popl
mov
xchg
mov
push
lcall
push
push
shrl
imul
insl
adc
aad
pop
std
mov
dec
shl
sahf
mov
jle
lds
push
outsb
ljmp
add
jne
add
push
mov
push
sub
dec
inc
test
jmp
pop
popa
push
push
jge
xchg
push
pop
cltd
arpl
outsl
push
add
iret
lock
adc
call
sub
ja
pusha
popa
das
xor
leave
and
bound
popf
xchg
jb
xchg
or
push
dec
imul
insl
aad
inc
cmpl
aaa
aas
inc
mov
pop
jns
pop
or
or
pop
out
adc
push
jmp
out
and
cmpsb
xor
and
out
sbb
mov
jbe
xchg
mov
aad
arpl
push
int
imul
aam
outsb
push
aam
outsb
ss
outsb
out
aad
outsb
pushf
and
push
pop
fs
jno,pt
hlt
mov
xor
cmpsl
sbb
ds
out
sbb
ljmp
pop
stos
rorb
dec
movsl
push
adc
pop
and
pop
xchg
pop
movsb
sub
inc
push
test
sub
push
xchg
push
sub
dec
hlt
push
or
xor
mov
push
push
sarb
andb
lods
cmp
xor
add
out
jbe
push
sbb
push
mov
test
add
or
cmpl
cmp
cs
pop
les
inc
jne
xchg
mov
cmp
or
and
mov
aas
les
mov
fbstp
push
pop
sub
gs
mov
loop
adc
xchg
fs
cwtl
add
adc
pop
xchg
mov
mov
push
adc
gs
in
jne
hlt
imul
xchg
movsb
mov
cmp
cmp
int
sub
fstl
sbb
in
adc
std
adc
adc
idivl
sbb
fadd
push
int3
mov
mov
dec
pop
mov
into
insb
mov
mov
enter
xchg
jae
xchg
movsb
jae
xchg
mov
lds
jg
sub
sub
sub
push
pop
push
pslld
pushf
aam
outsb
pop
aam
outsb
insb
aam
outsb
jl
cld
outsb
or
in
outsb
sbb
fsubrl
aam
outsb
cmp
cmp
int3
aad
outsb
sbb
in
aad
outsb
cld
aad
outsb
mov
insb
outsb
pushf
and
push
lods
jecxz
mov
dec
fisubrs
insb
fs
jl
lahf
decb
in
sbb
fdivr
sub
int3
cmp
cmp
int3
gs
fsubl
in
gs
cld
gs
mov
clc
pushf
mov
pushf
dec
add
int3
pop
insl
test
jg
test
jg
cmp
lahf
adc
nop
into
cmp
cmp
int3
mov
into
fdivl
or
cld
mov
into
mov
pop
push
lods
cmp
mov
cmpsb
dec
mov
pushf
add
les
xchg
mov
xchg
pushf
jae
xchg
lods
jae
xchg
mov
jae
xchg
pop
jae
xchg
insb
jae
xchg
jl
sbb
sbb
cmp
mov
pop
mov
push
lcall
popf
lcall
mov
lcall
in
cmp
in
sbb
in
sbb
or
addr16
into
push
pop
mov
lds
ret
xor
pop
lcall
cld
imul
xor
roll
xor
aam
and
in
adc
hlt
xchg
add
test
jns
and
sub
adc
lods
ret
xchg
pop
jecxz
jne
repz
test
cmpsl
xchg
pop
xchg
cmpsl
movsl
inc
mov
cmp
int
xchg
in
nop
pop
add
insb
jae
xchg
jl
sbb
xchg
cltd
cmpb
cmp
pop
icebp
int3
add
fdivl
xchg
in
jae
xchg
cld
jae
xchg
mov
xchg
pushf
jae
xchg
lods
jae
xchg
mov
jae
xchg
pop
jae
xchg
insb
jae
xchg
jl
sbb
mov
call
ret
dec
xchg
pop
xchg
lds
mov
push
out
gs
idivl
add
test
xor
xchg
mov
dec
movsb
scas
pop
fs
outsb
fs
jle
xlat
lahf
orl
adc
or
adc
or
adc
or
adc
or
adc
or
adc
pop
cwtl
daa
out
push
aaa
divl
push
inc
xchg
jno
xchg
imul
imulb
xchg
xchg
xchg
xchg
imul
into
mov
into
fidivs
push
into
mov
into
mov
pop
int3
scas
xor
mov
xor
into
pop
mov
into
outsb
cmpsl
mov
xchg
mov
xchg
sahf
jae
xchg
scas
jae
nop
mov
push
sub
pop
push
lock
testb
loope
cmpsb
push
arpl
imul
jl
push
das
jl
push
cmp
ret
jge
push
lret
jge
push
sarl
push
jecxz
add
mov
add
push
cmpsl
and
inc
cmp
inc
jnp
in
jae
in
mov
std
stos
cmp
mov
rcl
and
adc
or
adc
or
fwait
or
iret
and
bound
cmpsl
dec
fcompl
scas
add
dec
sub
lcall
mov
mov
cwtl
and
xchg
mov
mov
push
or
pop
por
jnp
mov
jae
xchg
cmp
lcall
cmpl
xchg
cmp
xchg
mov
fisttpl
es
or
adc
xchg
cmp
mov
xor
xor
loopne
dec
js
adc
scas
adc
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
loopne
cmp
in
ret
insl
leave
fsts
and
sub
push
ljmp
push
fisubrl
das
push
shrb
aaa
push
ds
ret
repnz
outsb
cli
aad
outsb
adc
outsb
mov
jbe
mov
mov
jns
imul
mulb
xchg
sahf
imul
xchg
mov
ret
xchg
mov
imul
cwtl
push
imul
lcall
imul
add
dec
cmpsl
jg
jmp
xchg
add
xor
aas
jl
add
jbe
fistps
push
push
lcall
out
push
sbb
daa
xchg
jnp
mov
jae
xchg
imul
push
lcall
sbbl
push
lcall
rcrl
push
push
xor
inc
sti
ss
push
stos
jns
pop
mov
dec
pop
mov
mov
dec
dec
mov
into
jle
dec
or
into
sbb
mov
xchg
pop
jo
push
xchg
in
sbb
in
sbb
or
pusha
nop
ss
inc
idivl
push
pop
xchg
lahf
push
mov
inc
adc
std
sub
adc
sub
adc
sub
rcll
adc
clc
adc
sub
adc
push
push
test
inc
pop
sar
pop
jl
push
jl
std
push
pop
jl
push
or
xor
xlat
jge
push
fistpll
push
out
inc
imul
mov
push
jle
adc
mov
jg
ljmp
std
stos
outsb
xor
into
outsb
cmp
outsb
ret
cmp
push
cmp
andb
rol
sbb
jecxz
cmpsb
movsl
pop
or
icebp
lock
adc
dec
and
and
xchg
int
rcrl
inc
dec
sbb
jns
idiv
pushf
and
js
pop
push
sbb
imul
jns
pop
sub
inc
lods
es
and
shrl
or
lcall
scas
jnp
sub
scas
inc
int3
mov
cmp
dec
iret
lods
sub
loopne
pop
jae
xchg
arpl
xchg
imul
int
xorl
mov
or
sbb
push
test
cmpsb
pop
fidivrs
test
scas
bound
push
mov
dec
mov
in
lret
loope
sti
ret
clc
adc
add
stos
jne
rcr
stc
pop
add
data16
mov
push
or
push
repz
xchg
lahf
xchg
push
nop
cs
push
in
push
dec
test
test
popf
shlb
dec
pop
loopne
in
lahf
lock
lahf
xchg
cmp
pop
insl
scas
cwtl
cmp
shr
and
xchg
sti
jae
nop
orl
sbb
in
sbb
jmp
pop
mov
inc
out
bound
fdivl
stc
cmp
add
in
xchg
dec
dec
push
lock
std
fsts
inc
test
shrl
xor
mov
les
iret
pop
cmc
push
adc
adc
dec
xchg
push
test
les
imul
shl
jno
xchg
sbb
adc
in
jno
sbb
xor
sub
stos
xsha1
cmpsb
cmpsl
mov
lods
mov
adc
push
cmpsl
and
stos
ret
enter
jns
push
int
insl
aad
cmp
imul
xor
jne
repz
or
loopne
loope
pop
data16
sti
push
clc
shrl
ds
mov
outsb
pop
push
imul
mov
add
jle
movsb
sar
lret
icebp
gs
cli
mov
lea
mov
xchg
test
add
mov
xchg
int
imul
xor
int
sub
scas
hlt
sbb
bound
fsubp
out
js
adc
in
lods
sbb
loopne
ljmp
xchg
pop
aam
outsb
aam
and
in
adc
aad
outsb
mov
insb
and
sbb
dec
inc
jno
outsl
inc
xchg
ror
sub
shlb
in
push
and
cmp
daa
bound
fildll
iret
sahf
push
shl
insb
adc
cmp
pop
cmp
ds
ss
xor
test
ret
mov
int
inc
cs
in
jg
test
shl
dec
mov
mov
aas
jecxz
ds
sbb
int3
mov
mov
negb
add
pop
and
push
in
jle
push
mov
xchg
repz
mov
popf
pop
insl
pop
cmp
pop
sbb
insl
loop
aam
mov
mov
mov
push
popa
imul
mov
inc
das
fdivr
or
popf
pop
ret
mov
pop
inc
scas
test
inc
adc
mov
mov
fistpl
std
pop
fwait
out
mov
stos
cli
aad
outsb
es
inc
sbb
out
xchg
pop
jo
out
push
sub
femms
sub
clts
pop
cmpsl
pop
jp
jb
nop
call
mov
lret
pop
push
mov
inc
js
xchg
ja
fs
sbb
jg
xchg
fisubrl
ds
and
pop
xchg
lcall
pop
fwait
add
fwait
push
gs
cmp
inc
cltd
and
adc
hlt
lods
xchg
lcall
stc
sti
mov
push
xchg
lret
xor
into
lret
loope
push
xchg
scas
sbb
in
imul
mov
dec
cmpsb
cmpsl
aam
js
and
sub
dec
bound
stos
lret
mov
nop
pop
outsb
lods
jnp
outsb
mov
jbe
cwtl
pop
arpl
repnz
test
jo
xchg
mov
dec
aas
pop
xor
gs
fcos
test
jle
xchg
xor
jb
xorl
icebp
adc
push
pop
loope
mov
adc
adc
lds
or
cld
jbe
insl
inc
scas
mov
lea
jle
ljmp
push
nop
jae
xchg
mov
in
jnp
shrb
and
outsb
icebp
aad
outsb
add
jg
sbbl
das
mov
dec
rolb
mov
adc
dec
lods
outsl
in
ds
cld
pop
pushf
cmc
and
pop
cmpsl
in
test
ds
shl
outsb
fst
sbb
outsb
stc
aad
outsb
mov
jno
mov
mov
inc
cmp
pop
and
jne
mov
lcall
or
pop
pop
lock
outsb
push
add
fs
clc
jb
mov
pop
xor
mov
push
jge
add
push
mov
dec
mov
mov
daa
adc
out
aas
insl
sub
outsb
mov
jg
test
add
dec
xor
mov
in
out
out
add
rolb
xchg
push
dec
push
mov
outsl
inc
outsb
jp
ljmp
test
pop
ret
cwtl
ficomps
sbb
cmpsb
sbb
xor
push
and
push
mov
fsubrl
sbb
into
cmp
roll
push
or
mov
cmp
rol
cmpxchg
ss
cld
xchg
insl
jl
subl
into
sbbl
add
mov
imul
loop
fisubrl
mov
mov
add
xchg
push
pop
push
sub
and
jbe
pop
xchg
inc
int
insl
inc
and
rorb
rorb
lods
subl
cs
pop
push
inc
jns
pop
sbb
int
sub
loope
subb
xchg
sbb
mov
and
and
mov
and
enter
shlb
aaa
jmp
xchg
pop
dec
movd
sbb
mov
and
dec
pop
push
aaa
and
imul
adc
gs
mov
mov
dec
cmp
lds
mov
stos
lds
cmpsb
fucomp
and
adc
mov
dec
test
push
lcall
clc
test
lock
jle
adc
or
cmpsb
shr
insl
jmp
mov
imul
enter
shrl
pop
mov
popa
loopne
sub
xchg
push
xchg
jp
push
push
push
loop
or
insb
mov
ret
add
sti
mov
leave
mov
sti
rorb
js
push
sub
inc
jecxz
jo
in
push
mov
push
jecxz
clc
mov
test
ret
out
loop
addr16
sub
imul
cwtl
jp
and
mov
xchg
push
adcb
imul
repnz
xchg
sbb
in
sbb
in
sbb
in
sbb
cltd
ret
lods
aam
outsb
fidivrl
push
movsl
subb
lods
lea
cmpsb
pop
pusha
xor
sbb
mov
and
clc
push
inc
push
ds
pop
cmp
into
fbstp
or
xor
cmp
cmpsl
dec
and
xor
js
xor
sahf
shll
mov
int
push
fwait
into
push
mov
jae
mov
xor
xchg
aaa
aam
xchg
lods
pop
xchg
xchg
lods
push
fucomip
cmp
shll
push
fisubrl
push
sar
fcoml
repz
outsb
sbb
pusha
fildl
insl
cmpsl
and
push
ds
jmp
sbb
adc
sub
adc
mov
repz
das
inc
subb
lret
mov
push
sub
adc
xchg
adc
fwait
mov
xor
and
and
fiaddl
addr16
loop
cmc
sbb
in
sbb
mov
fcoms
adc
shl
and
sub
cmp
add
rcl
jbe
popl
mov
loopne
out
inc
push
xor
xlat
cmp
jmp
shll
pop
cmpsl
cmpsl
dec
ja
filds
xor
mov
bound
subb
stos
loop
adc
inc
sbb
sub
pop
mov
jmp
pop
xorl
dec
sbb
stos
cmp
scas
mov
pop
cmpsl
mov
ja
fbstp
sarl
roll
rorb
sub
adc
or
adc
ficompl
or
ja
xchg
xor
lcall
fstps
cmpsl
sbbl
mov
shlb
clc
fsubrp
enter
sbb
push
jno
emms
mov
pop
and
push
cld
test
mov
adc
ja
xchg
out
and
mov
scas
mov
shr
adc
mov
xor
mov
arpl
and
inc
push
mov
leave
lcall
lea
cmpsl
xor
mov
incl
sub
in
out
pop
xchg
mov
lods
outsb
xchg
xchg
jns
push
sub
es
fidivrl
push
and
mov
cs
dec
cmpsl
sbb
pop
and
setae
ljmp
mov
pop
rolb
jp
pop
sbb
mov
dec
mov
or
imul
jo
arpl
mov
jns
fisttpl
imul
mov
add
imul
add
add
adc
sub
stos
or
test
loope
pop
sbb
repnz
loopne
jne
xchg
mov
mov
push
lock
mov
add
mov
aad
popa
inc
cmc
sbb
sbb
mov
rorl
out
andb
icebp
shlb
loopne
loop
out
jo
sbb
lret
test
cmp
xor
sub
xchg
push
xor
pop
imul
jmp
inc
insl
in
jle
addb
subl
je
out
jbe
iret
and
popa
pop
jmp
popa
test
mov
mov
xchg
adc
mov
add
fwait
xchg
xchg
nop
mov
mov
push
xor
ficompl
jecxz
cli
sbb
adc
fildl
sbb
pop
dec
stos
push
rcr
insb
daa
rcl
outsb
das
aam
inc
jecxz
in
jns
and
xorb
in
xchg
outsb
or
pop
jmp
mov
imul
lret
mov
mov
push
add
sub
mov
mov
fwait
test
incb
add
mov
add
sub
js
dec
and
lret
in
dec
pop
jecxz
popw
repz
mov
pop
lcall
sti
stos
loope
lcall
xchg
scas
repnz
ss
shrl
clc
xchg
push
lods
ljmp
jg
push
jb
mov
inc
in
and
jmp
inc
adc
fs
push
mov
lods
xchg
es
cmc
sbb
push
xor
inc
test
sbb
sbb
mov
mov
mov
test
jns
and
jmp
mov
int
dec
jns
sub
test
inc
fsubl
add
test
mov
addr16
xchg
xchg
popf
mov
std
pop
add
rorl
jbe
push
xor
mov
inc
push
xor
sub
push
xchg
imul
imul
test
es
data16
or
lea
xchg
in
jbe
push
dec
imul
iret
pop
addr16
mov
xchg
add
ret
xchg
loop
ljmp
das
shl
pop
dec
repz
aad
xor
out
loope
sbb
xorb
imul
ljmp
and
inc
out
fisubrs
pop
shl
mov
out
lahf
mov
mov
out
arpl
test
add
jbe
push
lret
loope
mov
stos
in
jns
pop
jbe
test
arpl
imul
ljmp
sub
icebp
pop
mov
adc
mov
dec
xchg
inc
and
sub
add
mov
loope
stos
fs
clc
add
xchg
push
jecxz
out
xchg
lret
ficompl
pop
xlat
mov
out
mov
inc
push
and
lea
push
mov
push
mov
dec
addr16
cmc
fistpll
lcall
mov
pusha
dec
pop
ss
cltd
pop
xchg
je
repnz
outsb
jno
and
lret
pop
xor
jns
and
cmp
sub
shlb
lods
xchg
lret
adc
aam
lods
stc
call
and
adc
push
hlt
push
test
cmp
xchg
inc
mov
scas
cs
xchg
sub
inc
fmull
rcrl
inc
push
shl
cmp
and
rcll
cmp
outsb
movsl
inc
stos
add
cmp
xchg
jg
mov
rcrl
es
jmp
mov
push
imul
dec
fs
jge
push
mov
sbb
imul
or
dec
movsb
mov
lret
lcall
jbe
imul
rclb
jl
orb
fbld
pusha
mov
fstpl
fldenv
fisubrs
push
in
cmp
loopne
clts
dec
pop
xchg
mov
scas
mov
ret
jge
pop
rcl
fstps
push
stc
add
push
popf
mov
loope
cmp
pop
jbe
cwtl
sahf
and
sub
hlt
scas
xchg
cmpsb
xchg
mov
scas
cwtl
and
lea
cmp
push
imulb
push
sbb
mov
pop
push
push
hlt
push
and
in
frstor
add
mov
test
rcrb
pusha
inc
orb
inc
xlat
repnz
test
ja
ret
pop
push
stos
adc
addb
push
fistpll
push
frstor
inc
movl
sbb
lea
pop
movsb
sub
cmpsl
outsb
popa
aam
outsb
imul
cmpsb
mov
std
imul
loopne
mov
inc
adc
into
movsl
add
mov
cmp
xchg
adc
mov
cmp
push
filds
jge
call
push
mov
lods
bound
adc
test
add
outsb
pop
sbb
test
lods
jnp
clc
addl
pop
imul
jp
mov
jge
mov
insl
adc
mov
out
pop
jns
sarb
sub
jae
lahf
stos
mov
loop
lret
mov
cmp
push
pop
aad
jl
add
cmp
push
xchg
sub
leave
sub
cmp
lock
leave
push
fcoms
imul
lock
decb
mov
out
jl
add
shrb
sbb
cmp
jb
test
xlat
cs
bound
and
fmull
mov
add
std
xchg
fdivp
inc
push
lcall
push
jmp
cmp
add
sub
adc
and
mov
pushl
ds
xchg
test
je
pop
and
xor
push
inc
scas
mov
push
add
xchg
int3
adc
inc
out
xor
adc
push
int
push
mov
pop
insl
jb
decb
cmc
push
lret
sub
add
ja
test
cmp
inc
scas
xchg
call
add
test
mov
js
loopne
sbb
pop
pop
and
fs
cmp
jae
xor
into
mov
sub
in
call
and
fwait
ja
add
push
lods
ss
cmp
dec
inc
aad
inc
add
lcall
mull
push
push
inc
xchg
adc
push
cli
sub
dec
pop
sub
lock
adc
test
xlat
ss
xchg
sub
mov
dec
lret
popf
loopne
sbb
mov
sbb
jge
gs
mov
mov
loopne
mov
insb
out
adc
fdivp
xchg
adc
cltd
and
cmp
mov
int
fcomip
mov
cwtl
stos
jae
jae
fprem
xlat
loop
or
pop
sbb
xor
das
xor
insl
popf
xchg
xchg
xor
adc
in
shll
pop
int
imul
and
pop
push
push
stos
xorb
in
cmpsl
mov
cli
inc
nop
xor
jns
adc
mov
mov
fists
clc
xchg
addr16
lcall
pushl
out
ja
mov
inc
out
xor
cmpsl
push
cmp
sub
gs
sarb
sarl
jecxz
push
adc
or
inc
inc
push
ds
and
inc
dec
enter
mov
dec
sub
movsb
arpl
fnsave
lcall
popf
out
stos
jp
sub
mov
out
dec
frstor
inc
bound
imul
push
add
insl
fisubrs
cmpsb
aam
dec
mov
adc
push
push
xor
pop
push
inc
push
jns
jle
pop
push
fistpll
push
or
jbe
in
fs
add
iret
outsb
and
sahf
fcomip
lds
mov
loop
testb
jmp
mov
aaa
jbe
mov
push
pushf
pusha
push
cmp
arpl
fisubrs
call
hlt
loop
scas
add
jb
mov
inc
fwait
mov
adc
fisubrs
mov
sbb
dec
dec
xchg
and
addl
mov
into
cmpsl
test
fsub
sub
pop
cltd
mov
mov
out
nop
jo
ss
mov
mov
push
sahf
cmp
push
mov
mov
fxch
scas
dec
or
mov
xchg
sbb
out
mov
xchg
movups
xchg
sbb
in
jge
pop
in
call
jns
lds
loop
dec
pop
sarl
mov
es
inc
scas
add
mov
xchg
les
xchg
in
faddl
lds
mov
xchg
mov
lret
pop
dec
cmpsl
icebp
pop
or
mov
adc
insl
xchg
ret
imul
call
cli
jns,pn
jmp
jmp
sti
jmp
repz
jbe
push
out
xorb
mov
xchg
inc
mov
xchg
push
or
or
push
pop
mov
es
imul
adc
out
push
popf
push
xchg
sub
dec
fildll
xor
jnp
inc
lds
or
sbbb
loop
daa
mov
xor
inc
shlb
cmpb
dec
cli
xchg
scas
imul
in
jb
mov
mov
insb
adc
pop
outsl
or
mov
or
pop
mov
stos
rol
cmp
inc
sbb
adc
outsl
in
mov
xor
push
xor
fildll
jno
jmp
dec
jbe
iret
mov
and
flds
adc
mov
xor
out
shlb
lods
push
lcall
pop
xlat
pop
ds
rcrb
sbb
xchg
add
xchg
ss
and
cmpsb
mov
dec
jl
pop
push
out
sub
push
lret
mov
mov
loop
loopne
mov
jnp
lods
imul
mov
cltd
ja
xchg
call
pop
adcl
int3
push
cltd
pop
inc
sbb
arpl
iret
aam
or
mov
push
jge
lods
sbb
dec
outsb
arpl
rorl
imul
jbe
int3
push
and
in
lods
lds
mov
jmp
xlat
cmpsb
mov
and
push
rclb
loopne
lea
fildll
inc
mov
and
js
out
test
dec
mov
mov
push
pop
jae
inc
incb
out
outsl
or
push
out
inc
push
addr16
xor
xor
lret
inc
or
cmp
xlat
add
fcoml
push
xor
jle
dec
xchg
mov
inc
xchg
adc
dec
jp
add
test
inc
insl
sahf
dec
push
push
test
dec
fs
test
ss
add
cld
dec
int
pop
movswl
test
pop
jo
in
mov
xchg
stos
sbb
stos
mov
cmpsb
sbb
cmp
out
icebp
sbb
aad
daa
pop
cld
pusha
arpl
or
sarl
sbb
scas
push
push
cli
dec
mov
cli
fisubrl
jbe
lods
jns
pop
dec
add
dec
je
xorl
data16
xchg
iret
jecxz
cmpsb
lods
xor
mov
out
or
shll
mov
scas
dec
cmp
cmp
movsl
jb
push
jg
jbe
repnz
in
loope
pusha
push
or
into
cmpsb
out
popf
jae
inc
ds
inc
rorl
movsb
sub
pop
lret
lret
mov
addr16
loope
testl
push
lea
xchg
popf
sub
scas
jp
dec
iret
sbb
scas
pop
shrl
imull
pop
es
and
dec
enter
jle
outsb
cmpsl
daa
emms
fsub
mov
sub
or
lock
push
movsl
call
jns
sub
mov
mov
enter
inc
push
fmull
sub
dec
mov
fistps
cmp
jmp
cmp
mov
cmc
pop
adc
xor
adc
rorl
jns
push
dec
xchg
mov
xchg
cmp
adcl
cmp
fst
and
cmp
pop
lock
pop
push
movsl
push
xor
rolb
loope
daa
into
xchg
xchg
push
nop
enter
mov
cmp
pop
or
jns
into
jle
mov
js
push
test
xchg
mov
xchg
adc
leave
fistpl
lock
mull
pop
jge
mov
pusha
xchg
rorl
and
xchg
hlt
pop
imul
cltd
add
mov
stos
inc
xchg
testl
jnp
xor
sbb
popf
mov
iret
fistps
cs
inc
add
push
loopne,pt
push
shll
push
pop
ss
imul
push
sub
sub
push
cmpsl
pop
dec
loopne
cmp
and
sbb
fiaddl
jbe
ret
adc
scas
in
jle
mov
roll
mov
xchg
fstpl
inc
movsb
mov
les
push
jo
sbb
mov
ret
andb
nop
xor
cmp
or
flds
mov
mov
sbb
inc
mov
mov
xchg
and
xadd
lret
inc
loopne
fistl
mov
push
nop
push
ds
lcall
cmp
pop
fbstp
pusha
jb
cmpsl
cmp
push
push
insb
mov
mov
cmp
sub
push
in
dec
mov
pop
sub
dec
ja
lock
jns
in
lods
jg
pop
or
cmp
movsb
xor
lods
inc
sub
fcomi
ret
sub
fsubs
or
mov
js
push
xlat
mov
inc
clc
inc
push
lret
push
adc
dec
in
imul
outsb
sbb
pusha
inc
test
xlat
ret
stos
add
into
or
stos
in
loop
adc
cmp
les
push
loop
gs
mov
pusha
dec
lcall
aam
call
mov
add
push
fists
sub
add
xor
inc
inc
mov
and
outsb
hlt
aam
data16
lahf
imul
in
idivb
xchg
mov
inc
adc
push
adc
mov
clc
pop
push
dec
mov
pop
cmpb
pop
std
cmp
and
cwtl
cwtl
jp
imul
test
movsb
fildl
mov
xchg
test
sbb
inc
mov
dec
jno
xor
aad
loope
xchg
xchg
cmp
sbb
mov
xchg
adc
pop
dec
push
pop
ss
push
pop
aam
bound
mov
add
inc
cwtl
pop
xor
dec
inc
insb
xor
ljmp
nop
mov
das
mov
in
jns
push
pop
pop
test
sti
jp
pushf
push
in
push
in
jge
inc
push
clc
insb
es
xchg
popf
push
push
mov
ss
mov
sub
mov
ds
inc
mov
jp
stos
pop
mov
icebp
scas
xor
inc
int
test
sub
nop
mov
dec
add
xchg
push
lock
jno
pop
sub
in
mov
in
and
test
cmp
imul
jmp
pop
adc
xchg
scas
arpl
sub
cmpl
sub
xchg
ljmp
insb
adc
sbb
jae
push
pop
repz
sbb
cltd
dec
lods
cmc
mov
pop
in
push
jns
mov
xchg
lcall
jnp
dec
mov
push
pushf
ja
imul
and
dec
lods
loopne
in
in
sarl
push
lods
shrb
dec
and
fadds
fnstsw
pop
mov
or
dec
xchg
ss
rcrb
mov
clc
js
fs
sbb
outsb
aas
in
outsb
daa
ja
jns
mov
push
hlt
add
mov
xchg
sbb
pause
cwtl
add
into
add
mov
test
xchg
test
or
lock
push
mov
xchg
insb
push
rcrl
aad
sbb
mov
pop
mov
shl
nop
mov
dec
or
fwait
js
hlt
jb
mov
daa
xchg
mov
push
jmp
dec
xor
and
xchg
mov
imul
mov
mov
test
fisubrl
cmp
out
or
sarb
movsb
xor
pop
in
sti
lea
cmp
pop
mov
and
in
cmpsb
jns
cwtl
push
rcll
imul
cmp
pop
int
fldenv
push
movb
shll
loopne
mov
xchg
push
mov
jle
rcr
sbb
divb
sbb
push
icebp
ds
sub
jne
iret
adcl
movsl
xchg
dec
push
shlb
filds
test
loopne
and
aam
std
mov
dec
and
loop
jnp
icebp
lods
jnp
arpl
cmp
mov
call
push
lcall
fwait
dec
pop
fdivs
stos
add
sub
and
mov
dec
jb
pop
xchg
cwtl
xor
lds
sti
nop
cmovg
pushf
mov
mov
mov
mov
add
es
jge
and
mov
push
jns
pop
lret
xchg
jl
andb
push
mov
xchg
dec
lret
mov
pop
dec
icebp
shrb
stos
sbb
xchg
mov
ljmp
repnz
fmulp
shll
mov
push
push
insl
addr16
ds
xchg
xchg
jb
mov
mov
in
mov
les
gs
std
and
jae
in
pop
and
jge
cwtl
in
rol
repz
push
xchg
lods
mov
jno
push
jns
xchg
rsm
nop
sar
mov
out
lods
shrb
mov
lret
pop
es
push
sahf
jl
push
shlb
in
add
jg
ds
dec
fistl
nop
cwtl
jo
jmp
adc
js
rorb
test
cmp
push
add
loope
jne
icebp
repnz
cmpsl
cmpsb
lea
xchg
inc
mov
sahf
xor
dec
out
adc
fdivrs
fwait
mov
sbb
lods
scas
jle
inc
dec
and
push
daa
aam
movsl
insb
loop
adc
or
repnz
sahf
add
fisubs
xor
push
xor
sahf
loope
jmp
js
or
sub
cltd
pusha
push
movsb
mov
sbb
xchg
mov
ficoml
xchg
xor
sub
enter
ljmp
in
inc
pop
cltd
mov
and
pop
inc
in
lahf
add
pop
push
jnp
enter
in
push
es
je
dec
push
sbb
iret
loop
sub
mov
or
jle
push
daa
push
stos
jp
call
mov
frstor
negl
ja
loopne
mov
inc
push
push
cld
mov
pop
imul
jo
adc
lods
adc
xor
ja
lods
fwait
jle
inc
dec
jbe
or
adc
or
adc
insb
pop
dec
call
filds
or
leave
js
cmp
inc
adc
stos
jo
ds
inc
lea
ret
in
xor
sub
and
mov
mov
nop
imul
sub
xchg
popa
daa
fistpll
jecxz
mov
cli
sub
daa
inc
xchg
pop
xor
cwtl
lcall
pop
es
movl
shrb
lds
dec
loop
icebp
adc
xor
dec
cmp
or
pop
mov
mov
pop
push
push
and
inc
out
mov
adc
jnp
xchg
sub
into
pop
imul
dec
dec
mov
xor
in
or
vpaddq
push
xlat
pop
and
dec
sbb
test
and
sbb
dec
ss
imul
push
sbb
lock
mov
mov
scas
lods
and
pop
jmp
pop
push
mov
and
stos
cs
pop
out
sbb
push
ficompl
mov
inc
xchg
divl
xchg
adc
scas
ss
push
mov
add
jb
xchg
subl
push
lock
decl
daa
rorl
fists
add
es
psubsw
jb
inc
push
imul
outsb
mov
dec
xchg
pop
sbb
xchg
push
in
shrb
test
rcrl
loop
cmc
sbb
pop
dec
jbe
mov
cmp
push
scas
push
xchg
inc
ds
ror
out
lods
cs
nop
repnz
movsl
xchg
sbb
dec
adc
mov
mov
cltd
aas
lea
adc
mov
sbb
adc
hlt
stos
adc
gs
and
jb
lea
insl
sbb
cmp
sbb
scas
jae
sub
jbe
aad
stos
jns
insl
in
loope
adc
dec
fisubrs
mov
mov
rcll
xchg
mov
xchg
lret
mov
jns
push
into
cmc
mov
xchg
jecxz
fistl
mov
and
in
in
repnz
dec
imull
lock
leave
xor
cmpsb
mov
or
out
push
push
loopne
xor
xor
mov
add
xchg
test
mov
test
lods
mov
adc
popa
fcmovu
push
lcall
pop
sbb
idivl
inc
ficompl
or
call
cmp
andb
pop
fbstp
repnz
lods
ret
mov
enter
jbe
jle
fimuls
push
pop
cmp
cmpxchg
sahf
imul
js
testl
mov
int
loopne
cmpsl
lods
pop
push
cmp
out
mov
arpl
sbb
cmpb
dec
rcrl
adc
xchg
xor
jecxz
into
or
jne
jae
jo
xchg
xchg
and
add
mov
inc
sbb
cmp
mov
popa
push
mov
lahf
dec
in
adc
aad
pop
repnz
arpl
imul
and
lock
test
rorb
mov
mov
adc
xor
push
inc
sti
adc
push
jb
pop
or
mov
imul
mov
jp
shll
push
lods
lods
sar
xor
ret
mov
mov
pop
pop
fwait
and
aaa
ret
nop
xor
call
jne
mov
outsb
add
sub
jmp
xor
fwait
xchg
ret
or
stc
cld
pusha
inc
mov
dec
lods
and
push
nop
and
fsubrp
fistpll
jp
shl
leave
pop
mov
into
pop
sub
pop
jno
insl
es
leave
out
cvtps2pi
add
xchg
sbb
mov
cmpl
daa
or
xchg
mov
jmp
sbb
xchg
sbb
lahf
sbb
jle
push
pop
pop
test
pop
mov
xor
shrb
pop
adc
pusha
pop
pushf
pusha
push
jecxz
mov
std
sbb
cltd
jp
and
dec
fwait
and
sub
shrb
xor
inc
jbe
push
ljmp
lock
lret
cmp
jnp
stc
mov
lods
xchg
dec
fs
push
push
outsb
dec
out
inc
sub
pop
pop
dec
add
xchg
mov
jae
sarb
mov
add
xchg
pop
and
push
subl
leave
sub
das
push
cmp
or
ljmp
jle
pop
pop
sarl
xor
mov
outsb
adc
out
lahf
push
xchg
out
and
adc
hlt
sub
xchg
sbb
dec
jp
in
stc
jns
and
or
int3
jns
in
jge
aad
jmp
imul
sbb
mov
lock
or
mov
inc
sahf
sub
cwtl
lahf
loopne
shlb
and
cli
adc
cmp
mov
xor
adc
cmp
lock
or
mov
push
fwait
jl
add
xor
push
sbb
cmp
sub
dec
mov
cmp
dec
adc
dec
pop
mov
mov
add
sub
lcall
in
adc
icebp
lea
clc
jnp
jmp
aam
outsb
mov
je
nop
aad
outsb
cwtl
aad
cmp
test
push
mov
dec
js
jae
dec
inc
mov
mov
cwtl
jb
xchg
int3
insb
and
mov
xchg
cli
pop
cmp
mov
xchg
adc
popf
inc
leave
push
add
or
ret
jo
xchg
adc
sub
rol
mov
xchg
xchg
jns
adc
ret
js
cmp
les
cwtl
add
mov
or
fnstenv
jp
loopne
repnz
xor
lret
sub
into
adc
push
and
xor
enter
push
mov
xchg
sub
iret
dec
dec
push
fistpl
test
mov
sbb
cmp
scas
jle
pop
mov
pop
icebp
sub
pop
push
out
add
sbb
cmp
je
inc
or
mov
ss
vcomisd
mov
push
push
in
pushf
iret
push
push
mov
imul
or
stos
iret
repz
push
mov
adc
push
insl
adc
stos
jne
jo
inc
push
mov
js
shr
xchg
fbld
test
mov
int3
mov
mov
pop
ret
lods
pusha
fwait
into
mov
mov
pusha
sahf
mov
arpl
xchg
adc
loop
cmp
sub
xchg
fs
xchg
lret
iret
mov
inc
loope
enter
jmp
int
xchg
fwait
sub
xchg
push
jns
or
inc
scas
negb
sbb
jo
cld
and
xchg
gs
add
push
jo
inc
cmp
sti
add
sbb
fcoms
and
repnz
adc
in
loop
mov
jae
nop
pop
insl
movsb
sub
push
imul
popf
jle
jmp
jle
push
out
push
mov
cli
loop
cmp
cmp
vmread
negl
xchg
rorb
xlat
aad
outsb
add
mov
ds
mov
mul
fwait
xor
loopne
dec
imul
xchg
add
cmpsb
pop
adc
xor
and
inc
sub
inc
jno
inc
sbb
dec
fpatan
int3
pop
xchg
sub
aas
add
inc
mov
cmc
testb
ss
sbb
and
cs
fildll
fnstcw
inc
xchg
dec
out
xchg
out
pop
push
sti
sbb
jb
dec
test
push
insb
jbe
sbb
nopl
mov
dec
push
pop
xchg
push
ret
test
mov
ja
cmp
xchg
inc
xor
mov
lods
xor
loopne
popf
and
fcomps
and
push
rolb
je
loope
pop
adc
cmp
pop
loope
iret
adc
push
and
push
cltd
fsubs
inc
gs
js
fwait
mov
idiv
fwait
aam
cmp
pop
aam
push
rorb
out
rcll
lock
mov
aam
mov
push
je
clc
adc
sbb
xchg
shr
jb
popa
pop
test
leave
sbb
xorb
push
inc
mov
and
sar
out
lods
push
icebp
adc
jp
jno
ss
test
hlt
mov
jo
mov
out
push
imul
or
and
movsb
and
mov
mov
mov
cmpsb
adc
imul
movups
lods
mov
pop
fmul
ret
mov
loope,pn
mov
fistpl
xor
mov
pop
imull
and
movsb
enter
aaa
add
mov
and
mov
xchg
sbb
sbb
cmp
sarl
mov
jb
bound
jecxz
jne
xchg
inc
jae
adc
cmpl
into
into
loopne
outsl
outsb
cltd
aad
inc
mov
fbstp
or
pusha
push
fs
arpl
push
icebp
fwait
pop
js
xchg
testl
loopne
incl
cmp
push
sub
adc
jge
iret
test
mov
xchg
sbb
dec
push
jle
outsb
mov
xchg
push
dec
arpl
dec
jnp
sub
inc
fdivrp
dec
push
dec
test
fcomip
enter
jecxz
loope
mov
int
mov
js
pusha
inc
push
jecxz
adc
ss
shlb
pop
iret
pop
xor
sbb
add
xchg
jp
and
pusha
divb
mov
lret
movsl
in
cltd
idivl
stos
in
and
sbb
test
cltd
mov
repnz
and
xchg
mov
jo
cmp
pop
pop
xchg
cmp
mov
mov
xchg
sbb
lcall
pop
cmp
aad
sub
adc
in
push
push
sbb
pop
cs
and
pop
outsl
int3
loop
push
xchg
pop
loop
out
notb
xor
inc
xor
orb
lock
aad
lcall
into
xchg
sub
pop
fs
inc
ds
movsb
rolb
shl
and
iret
mov
adc
and
lret
ljmp
push
inc
push
rcrb
sub
iret
sbb
sbb
mov
pop
das
loope
incb
pop
dec
scas
jbe
int3
and
idivb
pop
out
ds
cmp
mov
or
in
dec
mov
mov
loope
dec
lret
fsts
inc
clc
push
bound
cmp
push
pop
jecxz
push
dec
repz
inc
mov
mov
push
push
rolb
pop
cmp
jbe
cmp
mov
fdivrs
add
les
mov
jge
push
or
inc
sarl
fidivl
fidivrs
fldl
push
iret
cmpsb
popa
repnz
mull
push
push
inc
jbe
jg
xchg
adc
push
ss
pusha
adc
lahf
pop
jg
dec
push
or
adc
inc
jp
inc
frstor
xchg
daa
mov
and
cmp
movl
aam
negb
jl
or
into
cmpsl
std
pop
movsl
movsl
pop
into
cmpsb
sarl
lcall
or
sahf
add
xor
and
test
aad
jp
call
jne
or
js
out
insb
test
cmp
pop
stos
call
iret
inc
pusha
icebp
cld
mov
pop
lods
and
fdivr
adcl
inc
fnstenv
aad
js
jno
loop
pshufw
mov
mov
adc
adc
jl
add
push
out
sbb
popa
push
sub
sub
orb
in
jns
and
xor
xor
jbe
call
mov
mov
adc
aad
mov
xor
or
pop
xor
jp
out
xor
nopl
incb
sahf
or
ss
loope
aaa
insb
es
lret
add
adc
insl
loopne
icebp
sub
add
das
es
sbb
es
and
add
push
xor
dec
and
ret
popa
mov
imul
sub
cmp
cmp
push
jns
sub
movsb
pushf
clc
push
jo
mov
lret
push
aas
mov
clc
mov
jae
jb
inc
dec
sub
in
push
jne
mov
sbb
fs
xchg
cmpsb
cmp
lea
or
push
xchg
push
adc
loopne
mov
lds
pop
insl
xchg
or
jbe
sbb
adcl
sub
rcr
dec
push
lds
add
sub
ljmp
mov
pop
ret
mov
xor
sub
pop
mov
popa
adc
cwtl
int3
lods
pop
cmpl
adc
shr
sbb
push
mov
addb
jae
sbb
push
pop
cwtl
jno
push
jmp
outsl
lret
mov
xor
rcr
insl
lahf
adc
cld
out
sbb
int3
dec
mov
out
fadd
rclb
rolb
lret
aam
xchg
inc
xor
xor
xchg
cmp
fimull
in
jns
mov
dec
lds
out
or
xor
iret
dec
mov
adc
pop
push
fwait
dec
sub
divb
movsl
imul
pop
icebp
xchg
mov
ds
cmpsb
in
jo
cltd
or
aad
test
std
test
test
sub
ret
pop
out
or
scas
add
shll
or
dec
leave
fcmovne
and
lods
xchg
lret
xor
les
pop
push
cld
push
lods
xchg
sbbb
cld
jg
fs
jmp
sahf
icebp
mov
cmpl
push
lahf
iret
addl
jb
lcall
dec
dec
mov
repz
pop
loope
cmp
cmpb
push
sbb
loop
mov
mov
push
leave
ret
cld
loopne
test
xchg
mov
lds
rorl
jb
pop
and
xor
add
movsb
pop
push
repnz
cmc
xor
cwtl
sub
adc
and
inc
loopne
loop
scas
and
lock
xor
mov
mov
xlat
sbb
cwtl
adc
sub
ljmp
cmpsb
scas
xor
in
jp
fbld
mov
shll
lret
cmp
sbb
mov
shlb
add
clc
inc
jge
out
jne
cld
test
pop
xchg
cld
jl
in
xchg
pop
mov
mov
inc
mov
fnstcw
dec
and
in
sbb
cmpsl
cmc
inc
outsl
push
mov
sbb
nop
pop
mov
push
push
inc
inc
mov
fbstp
xchg
adc
das
lret
cmp
ret
adc
or
mov
pop
xchg
test
mov
lcall
stos
or
rol
adc
push
mov
lret
xor
out
jg
mov
sbb
repnz
adcl
int
sub
jb
adc
dec
cltd
pop
jne
jo
jg
cmp
xor
jns
pop
pusha
lods
fildll
mov
xor
es
sub
push
insl
mov
dec
ljmp
and
outsb
sbb
cmp
sbbb
pandn
jle
rcrb
lods
lods
mov
cli
ret
jb
xor
xchg
add
nop
adc
xchg
xchg
xlat
iret
dec
inc
mov
lock
add
pushl
mov
jg
loop
or
xchg
mov
pop
pop
or
mov
xor
and
nop
data16
inc
mov
sahf
icebp
fwait
add
push
and
inc
insl
or
or
inc
dec
sbb
aaa
mov
sub
mov
loop
push
fwait
xchg
push
stos
cmpsl
inc
jae
xor
iret
in
push
lds
jge
cmp
add
movsl
xor
push
add
mov
repz
ds
xchg
dec
push
sub
je
addr16
ret
cmpsl
les
arpl
stc
mov
inc
mov
test
add
dec
pop
or
clc
and
push
pop
cltd
outsb
pop
push
mov
xchg
mov
jne
repnz
cltd
mov
push
stos
cmp
mov
insb
cmpsl
fiaddl
inc
and
rcll
mov
cmp
cmp
mov
sbb
into
sub
shlb
outsb
popa
cwtl
or
popa
push
sub
adc
mov
ja
mov
mov
inc
cld
adc
outsb
lahf
mov
sahf
cld
and
aaa
cmp
sarb
xchg
aad
inc
test
in
mov
push
mov
and
push
clc
sbb
or
sub
decl
mov
cmp
lods
mov
fisubl
xlat
ds
dec
out
pop
sbb
test
dec
outsb
into
icebp
inc
jl
imul
pop
xor
jno
lock
pop
xchg
shlb
icebp
icebp
cmp
outsl
cld
scas
test
adc
cmp
inc
xor
rclb
lret
test
xchg
in
sub
and
loope
cmova
movsb
sub
xchg
test
scas
aad
mov
sub
sub
mov
push
fwait
aad
add
test
jno
adc
je
inc
rcll
jo
sub
mov
mov
and
loopne
notl
leave
sbb
push
pusha
mov
mov
xchg
push
jl
push
and
imul
mov
scas
dec
rcr
ja
xchg
fisubl
fidivs
adc
jno
addr16
mov
or
lahf
sbb
jbe
and
pop
rclb
sbb
insl
dec
mov
test
mov
test
test
movsl
stc
jnp
mov
jle
rclb
enter
jg
shll
aam
cmp
mov
cmp
cmpsb
and
clc
lock
cmpsb
xor
jp
pop
cmp
fists
jle
xor
dec
sub
jg
sbb
lods
adcl
adc
mov
jae
add
xchg
pop
mov
nop
mov
and
xchg
insl
adcl
and
jle
mov
cmp
mov
fistpl
xchg
add
mov
mov
mov
ss
lock
lds
inc
je
imul
pop
xchg
xchg
and
lret
push
jb
dec
cwtl
pop
adc
adc
adc
xchg
pop
jle
cmp
cmp
repz
out
stc
into
push
and
lods
push
pop
dec
scas
push
rorb
int
std
cmp
cmp
shlb
cwtl
addr16
popa
push
xchg
bound
xchg
shl
fmuls
xor
cmp
mov
mov
xor
or
cltd
jne
movsl
out
lods
sahf
test
in
repnz
mov
dec
dec
push
xor
mov
in
cmc
sub
pop
push
add
rclb
sbb
cmp
xorb
sub
jl
cmpsl
and
std
mov
jbe
xchg
pop
and
and
repnz
and
cmp
in
pop
xor
movsl
pop
dec
fsub
xchg
add
call
xor
cmp
out
mov
mov
mov
lret
pop
imul
outsl
pop
inc
or
lret
mov
int
filds
adcl
div
shll
sub
subl
arpl
cmpl
aad
dec
pop
repnz
jns
xchg
sahf
lahf
pop
fwait
jecxz
pop
insb
push
add
cmp
adc
notl
loope
insb
insl
and
jp
fistl
mov
xor
sub
mov
mov
popa
les
hlt
in
aad
js
int3
cmp
fisubs
add
or
xchg
mov
fidivl
xchg
and
add
adc
mov
repnz
fildll
hlt
xor
je
dec
int
aam
cmp
insb
ds
xchg
cmpsl
pushf
dec
out
aaa
in
scas
iret
ljmp
or
and
cmp
jne
hlt
mov
stos
aam
push
jg
jp
add
inc
xchg
and
sub
call
imul
xchg
xchg
push
xor
cmp
cmpsl
out
out
js
push
daa
shlb
sbb
pop
jae
test
fldz
cwtl
imul
xor
adc
xchg
adc
pop
push
insb
inc
movsl
mov
and
mov
inc
adc
adc
je
add
sub
jnp
xchg
or
cmpsl
mov
jle
fiadds
aas
pop
leave
shrl
enter
push
sbb
les
or
ja
inc
push
outsb
cmp
cld
addb
enterw
das
pop
cmpsl
loopne
popa
pop
pushf
xchg
hlt
adc
inc
out
jle
fisubrl
lahf
mov
mov
pop
mov
fcomi
adc
xchg
sbb
ljmp
pop
fbstp
cli
mov
sbb
lock
popf
sub
test
roll
jge
stos
sbbl
cmp
fs
cvtpi2ps
test
and
ljmp
fucomi
mov
lret
dec
aam
pop
cmc
jbe
into
xor
push
inc
js
aam
push
dec
and
lods
xchg
mov
dec
jae
or
negb
push
das
ffreep
call
nop
stos
loop
xchg
repnz
fiadds
sbb
fadds
jmp
imul
mov
fnstsw
add
or
out
and
jno
popa
and
mov
jne
ja
mov
dec
jns
dec
push
xor
push
stos
mov
dec
bound
xchg
push
pop
iret
push
lea
aam
jbe
fwait
sub
jne
jmp
pop
xor
mov
xor
push
mov
sub
outsb
loop
addr16
stos
ffreep
hlt
pop
insb
push
mov
pusha
jne
sbb
or
cmp
pop
sub
loopne
push
imul
cmp
test
movsb
lret
jecxz
mov
pop
xchg
pushf
in
cmp
mov
mov
stos
mov
stos
push
jp
lahf
fcomps
mov
shlb
dec
add
adc
cmc
jp
lods
test
cmp
loop
pop
mov
pop
int3
mov
dec
cltd
pop
inc
sub
fists
in
inc
push
pop
loope
not
and
repz
or
outsb
rcl
outsb
int
and
sub
sub
and
adc
jp
or
dec
clc
sub
iret
mov
popf
insl
std
pop
gs
and
dec
enter
test
add
pop
xlat
fwait
push
rolb
and
xor
sbb
sbb
mov
fs
pop
neg
mov
ss
shrl
cli
es
pop
arpl
pusha
pop
inc
mov
mov
neg
or
sbb
out
pop
xor
cmp
and
cli
push
jle
sub
pop
push
shlb
pusha
mov
xchg
lods
pop
fisubs
fs
fsubp
mov
inc
mov
jg
xlat
inc
push
scas
les
cmp
inc
xchg
and
xor
mov
pusha
mov
cmp
test
int
daa
repz
inc
repnz
fsts
shr
lret
nop
push
lea
ficomps
popa
push
test
insb
shl
jb
mov
xchg
in
pop
fistpl
pushf
hlt
roll
popa
jl
daa
int
cmp
push
xchg
push
jbe
pop
cmpsl
aad
jmp
movsb
xchg
and
test
out
addr16
xor
call
sahf
adcb
jecxz
cmp
mov
and
and
aas
inc
scas
push
sete
dec
pop
push
faddp
cwtl
mov
fwait
rol
inc
ss
call
insl
jnp
enter
cmp
jecxz
sbb
mov
adc
les
inc
iret
sub
imul
in
in
cli
aas
out
add
adc
ret
pop
mov
jle
out
mov
and
or
xchg
add
dec
cmp
ja
cmp
dec
rcr
inc
push
inc
mov
xor
lea
andl
mov
sub
bnd
stos
push
jmp
xchg
sbb
xchg
pop
pop
pop
daa
pop
cmp
imul
adc
lahf
popf
xorb
imul
xchg
sbb
pop
xlat
imul
push
push
adc
icebp
cmpsb
push
xchg
movsb
outsl
popf
sub
into
shrb
push
mov
or
cs
sbb
add
cs
jge
push
arpl
jg
xlat
ret
xor
mov
xchg
cs
sub
adc
aad
fnstsw
sub
outsl
ss
and
ja
sbb
jns
sbb
int3
lods
push
ljmp
and
adc
data16
and
popa
cmp
pusha
hlt
jge
pop
mov
inc
fcoms
test
xchg
popf
int3
addr16
in
adc
xor
int
or
adc
jb
lea
push
loopne
rcll
mov
mov
sub
lea
jp
pop
sub
int3
jns
inc
mov
add
ror
mov
mov
inc
in
pop
in
dec
jo
cmp
in
mov
cmp
pop
mov
ljmp
insb
xchg
jp
push
sarb
inc
jg
lcall
xorb
ret
addr16
into
shr
push
in
loop
lock
and
inc
cmpsb
divb
out
add
and
idivb
inc
ja
mov
nop
cmp
jns
sbb
fs
xchg
mov
lods
pop
call
jno
aaa
mov
rclb
mov
push
mov
and
sbb
orb
pop
loopne
mov
loope
movsl
stc
inc
iret
aad
dec
xchg
xor
pushf
cwtl
lahf
and
divb
aas
addl
sbb
and
call
jne
mov
es
pop
hlt
inc
xchg
cmpb
fwait
stos
loope
adc
xchg
fistps
add
jl
aaa
mov
jg
fcomip
sub
hlt
dec
jg
mov
pop
mov
das
add
xchg
pop
xor
repnz
es
and
mov
jge
pop
aas
ss
sbb
in
and
push
mov
lds
test
push
push
fstl
movsl
mov
out
and
push
dec
int
xchg
loope
add
inc
cmpsl
xchg
mov
pop
mov
cmpsb
test
adc
or
mov
cltd
dec
mov
push
leave
push
stos
outsb
mov
jno
pop
rcrl
imul
xchg
pop
rclb
mov
cmp
jge
xor
cli
movl
call
fnstenv
ror
mov
loopne
scas
imul
mov
nop
imul
xchg
idivb
cli
sbb
dec
xor
addr16
mov
gs
push
inc
xchg
popa
push
subb
arpl
notb
jmp
clc
cmpsb
push
iret
outsb
ffree
movsb
pop
icebp
rol
sub
and
xchg
arpl
jge
stc
in
sbb
sub
pop
mov
and
fidivrs
xchg
push
js
mov
push
jne
addr16
sub
loope
jb
add
fimuls
jl
push
movsb
mov
xor
jo
xchg
push
js
or
dec
ret
loopne
mov
addr16
inc
or
call
lods
ljmp
stos
mov
push
test
cmp
add
cmpl
jl
push
icebp
mov
mov
pop
fcomi
jbe
xchg
mov
mov
jb
imul
hlt
in
jg
addl
mov
xlat
mov
inc
in
int3
mov
in
cmp
loopne
cmpsl
aaa
leave
scas
adc
inc
lock
cmp
dec
cmp
xor
jo
cmp
aaa
cmp
sub
inc
in
into
mov
in
cmp
and
push
into
mov
in
cmp
lcall
mov
in
cmp
repz
imul
insb
adc
inc
xchg
adc
pop
and
xchg
sub
push
mov
dec
add
sub
cmpsl
pop
lahf
push
xor
lahf
int
mov
in
arpl
pop
inc
pop
sarl
fwait
push
movsb
je
nop
cli
mov
mov
xchg
shlb
bound
ss
gs
and
sub
ret
mov
fistpll
pop
pop
popa
stos
sbb
repz
ljmp
mov
dec
in
inc
dec
int3
xor
inc
fidivl
inc
and
je
dec
out
mov
mov
push
inc
pop
xchg
aas
add
imul
xor
xchg
clc
bound
call
jb
inc
scas
dec
pop
fldt
bound
sbb
jmp
jae
std
jge
cmp
xchg
loop
ja
addb
cmp
jbe
sub
fcoms
mov
icebp
dec
mov
xchg
std
jb
cmpl
adc
ljmp
cli
mov
scas
xchg
fistps
iret
xchg
push
arpl
insb
jle
idiv
mov
shrl
inc
dec
jbe
cmc
cwtl
mov
adc
mov
out
pop
xchg
cmpsl
mov
mov
adc
pop
loopne
pop
or
sub
lock
xchg
icebp
mov
fidivrl
mov
and
out
insl
lea
jmp
aam
scas
or
mov
adc
mov
shrl
das
adc
jecxz
jae
insb
xchg
mov
add
cltd
inc
loopne
rclb
mov
out
incb
int3
movsl
fwait
adc
push
ss
jg
insb
adc
xchg
inc
mov
push
jnp
jns
mov
daa
push
jp
cmc
ret
push
push
insl
sarl
jbe
dec
add
stos
mov
hlt
pop
cltd
jno
inc
clc
js
mov
lahf
shl
push
jno
arpl
push
fdiv
pop
repnz
mov
icebp
stos
inc
fisubrs
sar
pop
push
jbe
ss
insb
jg,pn
dec
hlt
pop
insl
loope
insl
push
stos
xchg
xchg
xchg
cmc
lret
mov
scas
inc
pop
int3
movups
lcall
std
sbb
push
ja
andb
or
mov
stos
jp
into
inc
hlt
int3
dec
and
ja
xchg
sbb
pusha
pop
dec
push
int
rcrb
shlb
nop
xchg
mov
push
fists
xchg
cltd
test
sub
rcll
sub
adc
mov
pop
jmp
in
out
dec
sarb
sbb
pop
mov
gs
sub
call
shlb
into
mov
pop
inc
push
pop
xchg
or
inc
int
sub
int
imul
ret
fldenv
mov
add
into
pop
mov
add
jp
sahf
loopne
and
push
orb
adc
and
pop
mov
pop
xchg
adc
push
iret
mov
xchg
je
pop
lea
cmpsl
sub
popa
push
lock
push
mov
lea
jp
and
rorb
mov
xchg
rcrb
lret
ss
mov
aad
mov
pop
loopne
add
mov
push
aad
jno
adc
fcomi
cmp
push
pop
aas
push
out
dec
add
jnp
rcll
jo
hlt
inc
sub
scas
mov
iret
data16
pushf
mov
inc
sbb
xchg
dec
sub
mov
jp
retw
int3
nop
add
sub
les
sub
mov
jo
cwtl
mov
jp
push
insl
inc
fidivs
sbb
push
fsubrs
cmp
and
jnp
and
pop
sbb
lcall
or
pop
mov
lock
int3
popa
and
dec
mov
jns
stos
fs
jbe
mov
popf
and
fildll
icebp
test
sub
xlat
sub
scas
and
rcl
pop
add
inc
fstps
dec
adc
popa
lret
cmp
xlat
rcl
sub
jb
pop
into
int
fmuls
mov
add
test
call
mov
je
inc
push
xor
jae
inc
outsb
arpl
inc
mov
stos
push
sbb
push
mov
mov
mov
test
jp
jo
mov
dec
mov
ja
sbbb
sbb
push
sbb
bound
dec
dec
fimuls
das
xor
add
mov
out
in
pop
dec
mov
jg
bound
cmpsl
ss
pop
xor
mov
out
or
test
faddp
stos
inc
test
xchg
mov
outsb
and
movsb
xchg
test
rolb
dec
movsb
jp
and
push
cltd
in
je
shlb
sbb
or
aad
das
cmpsb
push
jbe
stos
add
call
stc
popf
lods
pop
lret
mov
inc
and
and
ret
lock
and
test
cmp
and
jb
ss
in
push
mov
xchg
insl
imul
xchg
outsb
jle
lcall
les
adc
xchg
sbb
mov
nop
jle
dec
xchg
mov
sub
lods
pop
push
arpl
loop
fnop
dec
outsb
add
jecxz
pop
mov
xchg
and
pop
and
nop
inc
jle
iret
fisubrl
cmp
int3
adc
ja
por
jae
mov
ret
cs
lea
mov
dec
mov
and
int3
sbb
ror
outsb
mov
pop
int3
in
xor
ss
addr16
pop
jns
jae
shrb
xlat
jl
subb
test
inc
or
sub
rcll
xor
sbb
or
ss
mov
lret
mov
popa
imul
scas
dec
shrb
inc
mov
fldenv
popf
dec
test
popf
fists
lods
inc
sbb
lea
jne
sub
pop
pop
jecxz
jmp
sahf
cld
xchg
xchg
nop
out
stos
div
jg
sbbb
adc
dec
inc
fisubrl
stos
rorb
lcall
cmp
add
push
ss
data16
jnp
pop
movsl
aas
sub
mov
negb
pusha
lods
and
ret
pop
movsb
aam
adc
leave
aam
dec
dec
imul
jp
pop
ss
pushf
inc
bound
push
out
xor
jnp
mov
pop
jae
push
int
and
rol
hlt
pusha
xor
pop
sub
ljmp
pop
fsubrl
ud2
and
mov
cmpsl
xor
je
jbe
or
inc
pop
pop
repnz
rcll
push
fcmove
xchg
fstpl
xchg
fwait
jo
repz
push
popf
sarb
mov
mov
and
hlt
and
push
sbb
std
mov
sub
mov
aaa
mov
les
mov
xorb
sbb
cmp
data16
loopne
cwtl
add
pushf
jmp
pop
cmp
mov
pushl
insb
cmc
pop
sub
andl
sub
aad
outsb
popf
ret
dec
sub
adc
mov
shl
scas
sbb
iret
pop
mul
xchg
outsl
or
sub
loope
lret
cs
add
fistpl
in
ds
mov
inc
cld
jns
mov
adc
xchg
test
stos
push
or
loope
and
rcrl
pop
bound
lock
clc
ljmp
or
ficoml
lcall
jae
repz
scas
dec
sbb
push
jo
sarb
leave
loope
jne
lcall
out
fsubrp
scas
mov
rcr
xchg
shll
pop
jne,pt
cmp
push
add
fimull
aad
sub
xlat
dec
cmp
cmpsb
repnz
ljmp
sti
xor
das
das
inc
push
in
mov
sahf
sarl
loope
mov
or
jge
subb
nop
mov
xchg
lcall
jbe
jo
add
cwtl
pop
adc
pop
shll
pusha
xor
dec
out
scas
aas
pop
dec
test
into
add
in
push
xor
mov
lcall
ds
fisubrs
mov
xor
hlt
pop
and
loop
aad
icebp
iret
sbb
jle
xor
add
xchg
push
xor
in
adc
sbb
adc
repz
mov
jnp
xchg
into
and
pop
daa
aaa
xchg
rorb
sub
les
push
lods
mov
mov
dec
or
in
dec
sbb
pop
sbb
push
fwait
sti
rcrb
cmp
adc
aas
fdiv
and
cmp
mov
sbb
out
jo
jmp
lods
adc
pop
pop
push
cmpsl
test
sub
in
push
mov
dec
fcompl
jle
sub
push
pusha
dec
ss
jge
or
xchg
shrb
cmpsl
cmp
negl
jp
dec
ds
mov
dec
jo
iret
mov
js
xchg
ret
adc
insb
add
xchg
adc
sar
std
and
adc
sbb
jge
fstpl
pop
hlt
inc
push
jo
stos
repnz
and
icebp
or
xchg
cmp
in
inc
pop
in
out
ss
mov
push
mov
jb
mov
fnstenv
pop
push
test
lods
pop
xchg
popf
mov
jp
push
pushf
jo
outsb
aaa
in
sbb
mov
pop
add
pop
daa
pusha
jge
pop
add
cmpsl
dec
jecxz
loop
add
pushf
lcall
push
repnz
xchg
jb
inc
lock
dec
lahf
mov
jp
pop
cmpsb
mov
fists
add
sub
mov
sub
and
xchg
iret
test
popf
sbb
sahf
and
mov
mov
dec
pop
mov
mov
fnstsw
inc
movsb
ja
hlt
xchg
add
out
mov
fwait
sub
adc
clc
add
mulb
mov
in
push
mov
sub
dec
imul
and
sub
aam
in
adc
pop
jge
ja
test
je
out
scas
mov
ret
sbb
aas
xchg
sahf
sub
adc
dec
mov
push
int
fidivs
ficoml
in
pushl
jns
dec
pop
adcb
outsl
fimuls
rcr
push
xor
pop
sahf
loopne
incl
push
aas
mov
movsl
mov
inc
mov
or
jns
outsb
push
les
xor
loop
sahf
ficompl
imul
pop
or
jo
test
mov
pop
add
ret
mov
xorl
sbb
push
jge
fistps
sub
sbb
fildll
cmp
jne
sbb
popf
mov
into
mov
cmp
cmp
les
divl
inc
push
xchg
mov
adc
test
into
xchg
rcrl
sbb
sub
push
xorl
loopne
stc
mov
xchg
jmp
xchg
mov
das
loopne
rcrl
pop
push
sti
std
movsb
ds
cmp
enter
or
cmc
ds
cmc
lods
push
jp
cltd
and
fisttpl
mov
testb
mov
sbb
sub
out
filds
out
mov
mov
mov
push
ret
fidivrl
test
xor
sbb
popa
push
dec
pop
pop
loope
pop
xor
pop
xchg
nop
out
mov
shll
in
push
int
inc
sbb
outsb
clc
xor
push
test
mov
mov
fistl
test
inc
movsb
cmp
sti
int3
stos
and
mov
sbbl
imul
xor
jge
and
and
insb
adc
mov
popa
out
call
mov
arpl
cmp
fcompl
pop
clc
or
push
nop
push
out
adc
idivl
dec
push
inc
lcall
popf
daa
and
xor
loopne
and
mov
or
daa
jne
mov
inc
jo
sub
jns
sub
xchg
movsl
nop
jno
adc
inc
push
mov
jns
pop
test
push
jo
fwait
cld
jg,pt
push
out
lahf
and
ljmp
fsin
sbb
sub
fsubrs
push
scas
icebp
xchg
popf
daa
xchg
cmpl
sahf
in
fwait
leave
dec
loop
inc
add
jp
mov
sub
div
jge
mov
insb
inc
jne
shl
xchg
movsb
cwtl
push
stc
mov
js
es
shlb
xchg
cmp
in
sahf
dec
mov
mov
les
shlb
fdivs
loop
add
xchg
xchg
ja
int
cwtl
fs
loope
adc
push
cmp
lock
clc
cmp
adc
out
push
ja
pop
jbe
mov
pop
addr16
xchg
js
jne
sti
mov
pop
stc
call
mov
push
imull
movsb
mov
js
dec
int3
add
add
outsl
cli
or
mov
jo
cli
cmpsl
mov
not
pop
jl
sbb
outsb
sahf
jge
and
stos
mov
adc
push
jecxz
xor
jl
inc
jmp
pop
aas
loope
jmp
cli
xchg
insb
mov
subb
cmp
clc
xchg
dec
adc
mov
rcrl
mov
push
add
add
sbb
out
push
mov
add
sbb
out
jge
jo
push
lcall
std
dec
mov
adc
jmp
cmp
test
jno
mov
inc
pusha
popf
sarb
movd
mov
sahf
cmpsl
pop
pop
lea
out
xor
nop
xor
push
pavgw
mov
sti
clc
mov
pop
scas
in
fwait
sub
cmp
adc
jnp
and
push
outsb
and
jae
stc
mov
add
xchg
cmp
cltd
std
lods
push
xor
ficompl
scas
pop
addb
cmp
sahf
inc
out
lret
daa
jmp
and
jmp
ja
sbb
mov
dec
pop
out
xchg
in
add
pop
and
mov
lods
add
sbb
loope
cwtl
ljmp
cmp
xor
push
cmp
stos
ss
subb
ret
lcall
rclb
call
jge
addr16
loop
stos
mov
out
inc
pop
jmp
insl
ret
push
pop
iret
outsb
xchg
cwtl
inc
lods
sbb
clc
cld
or
arpl
add
daa
sbb
outsl
and
loope,pn
pushf
xchg
xchg
sub
loop
adc
ds
adc
bound
jmp
xchg
pusha
jbe
adc
add
inc
insb
push
mov
and
roll
cmp
sub
add
xchg
xchg
pop
jecxz
pop
divl
push
dec
mov
mov
mov
sbb
mov
insb
out
ret
dec
loopne
and
cmc
out
in
dec
jge
xchg
mov
cmp
xor
ret
clc
adc
jg
test
jg
xorl
or
movsb
jbe
pop
insb
dec
push
inc
cltd
popa
dec
lahf
jle
cmp
pop
loopne
iret
lods
or
jg
mov
mov
xchg
xlat
xor
jecxz
test
xlat
mov
mov
add
sub
sarb
mov
push
mov
xor
or
loop
add
cs
and
addb
cltd
cmpb
xchg
or
mov
mov
or
mov
mov
jmp
cmpsl
add
lcall
aaa
imul
cmpsb
inc
mov
jbe
loop
popa
dec
inc
lret
fwait
scas
sbbb
pop
push
mov
inc
out
sahf
int3
rol
push
mov
inc
push
add
imul
test
pop
test
out
subb
setno
ds
xor
cwtl
mov
nop
lock
jno
ljmp
inc
mov
sbb
cmc
mov
addb
sbb
mov
mov
push
dec
jecxz
es
dec
pop
call
in
add
cmp
cwtl
mov
imul
jb
dec
out
sub
sub
cmp
xor
loope
rcrb
cmp
xor
pop
lds
daa
xor
cmp
xchg
jne
lock
jecxz
int
and
in
or
inc
fsubp
inc
cmp
popf
or
rcll
push
add
loop
out
rcll
lret
push
daa
push
pop
into
out
sbb
addb
lret
jle
mov
add
jg
mov
dec
pop
mov
js
loopne
mov
or
xchg
push
xor
arpl
hlt
and
fmull
iret
bound
mov
jbe
dec
dec
ffreep
add
in
xlat
push
shll
jmp
pop
out
or
lcall
in
lods
push
imul
jle
pop
loop
dec
mov
cmp
repnz
imul
mov
pop
out
test
cltd
mov
mov
cmp
push
cmp
adc
and
ljmp
xchg
lcall
jns
pop
cs
xor
rcrl
mov
inc
rcrb
jecxz
in
sarb
fs
cmp
push
cmp
arpl
clc
push
cmp
mov
xchg
xor
test
in
push
sbb
inc
push
pop
test
inc
scas
mov
push
pop
int3
je
fdivs
stos
mov
xor
stos
mov
dec
mov
rorb
pop
push
fistpll
pop
pop
test
ds
fldcw
sub
andl
negb
hlt
mov
sub
cmp
aad
test
cmc
aam
pop
outsb
mulb
dec
push
imul
sahf
nop
ret
mov
mov
loope
sahf
mov
jg
sbb
scas
loope
test
cmc
dec
jo
scas
ficoms
bound
loop
pop
push
jbe
cmc
sbb
lret
pop
push
movsb
imul
cwtl
push
aam
add
push
inc
insb
in
mov
out
andl
jmp
sub
pop
mov
mov
sbb
pop
pop
inc
cmpsl
icebp
iret
addb
mov
add
fldenv
sti
data16
test
fsubrp
and
add
inc
test
aaa
mov
and
mov
cmpsb
dec
pop
sub
add
hlt
xorb
mov
sbb
ficompl
jmp
das
xor
inc
sbb
in
and
xchg
test
loopne,pt
pop
and
scas
repnz
mov
or
mov
les
gs
and
sbb
cmpsb
dec
add
daa
mov
and
mov
xchg
mov
fisubs
mov
jecxz
lds
lahf
sbb
and
dec
dec
sbb
mov
aas
xor
add
inc
jne
xchg
dec
ret
cmpsl
sub
lock
jl
dec
push
daa
adcb
add
ds
outsb
ja
lret
jbe
adc
sbb
and
mov
xor
or
xchg
pop
repnz
rorl
xchg
int
mov
clc
loope
out
rorl
stos
and
enter
es
add
xlat
aam
inc
leave
mov
adc
push
les
daa
rep
jns
and
and
loop
loope
push
mov
jp
sub
inc
cmp
daa
mov
and
ljmp
stos
pop
adc
push
jbe
push
xlat
inc
inc
and
and
loope
xchg
rorb
lods
bound
lock
xor
push
out
out
dec
movsl
xchg
xor
mov
std
ds
inc
dec
rolb
popf
hlt
es
add
out
out
mov
subl
cs
lock
test
cli
insl
cmp
mov
sbbb
shrl
test
fidivs
in
and
mov
insl
pushf
and
nop
fs
cli
inc
adc
mulb
cmp
popa
scas
movsl
leave
cwtl
loope
inc
mov
lock
xchg
push
sub
jl
jp
test
cmp
adc
mov
outsb
outsb
cmp
xchg
push
int
and
ret
scas
mov
fcoms
shl
lock
mov
mov
pusha
imul
mov
fbld
test
arpl
sbb
ljmp
into
fnstenv
cs
and
pop
dec
lahf
and
shl
out
jg
adc
or
jbe
mov
je
addr16
test
out
movsl
rorl
inc
mov
lods
cmpb
xor
stc
dec
aas
cmpsl
es
cmp
movsb
sti
ds
bound
sub
jmp
mov
push
lcall
xchg
mov
xchg
popf
lods
addr16
call
adc
sbb
push
ret
pop
inc
push
je
mov
fmuls
hlt
lcall
pop
sbb
jecxz
sub
outsb
mov
int3
jbe
mov
int3
repnz
mov
mov
mov
fstpt
mov
into
dec
insb
jns
pop
ja
pop
arpl
jbe
jge
mov
sub
paddusw
mov
inc
inc
lds
repnz
mov
pop
aam
mov
dec
pop
pop
xor
jmp
js
std
lret
or
pop
aaa
xor
xor
fidivrl
mov
jecxz
sub
jecxz
shr
movsl
ja
sub
push
leave
pop
mov
fdivl
cwtl
les
adc
pushl
iret
or
cltd
lahf
insb
fcomi
pushf
push
cmc
and
gs
daa
out
imull
loope
pop
repz
xor
pusha
inc
mov
dec
push
in
push
lret
push
inc
jbe
or
xchg
cmp
push
and
daa
mov
mov
shr
mov
xor
js
pop
sub
mov
push
mov
orl
test
xchg
sbb
dec
lahf
out
stos
push
imul
fstps
scas
mov
sub
inc
sbb
cltd
add
roll
dec
sahf
int3
pop
and
sarb
test
cmp
pop
mov
mov
or
push
test
xchg
mov
jne
xchg
xor
cltd
movsl
pop
aam
inc
ret
into
nop
mov
or
jle
xor
das
and
jge
decb
jmp
shlb
fsubs
cltd
cmpsl
push
xor
iret
or
mov
adc
cmp
lea
lea
xchg
sub
add
shl
adc
sub
dec
mov
imul
pop
icebp
negl
loopne
mov
movb
sub
lds
loope
lods
add
sbb
in
sbb
in
outsb
add
mov
inc
pop
cmpsl
cmp
clc
iret
int3
xchg
mov
mov
cwtl
in
rcll
xchg
xchg
cmc
decb
inc
clc
inc
data16
loopne
mov
sub
rolb
test
jle
push
nop
lret
inc
sarb
cmp
xchg
jmp
mov
fs
xor
cltd
cmp
out
into
in
imul
sbb
mov
movsl
pop
mov
jmp
movsl
test
roll
fnstcw
add
sub
je
inc
aad
andl
fcmovu
cmp
outsl
mov
add
adc
dec
mov
test
mov
imul
jecxz
jb
sti
adc
lahf
inc
jno
inc
inc
stc
jno
inc
fisttps
jns
dec
cli
inc
push
sbb
xchg
dec
adc
lahf
cli
xchg
pop
jp
stos
and
lds
int3
test
sti
jnp
movsb
or
test
xchg
cmpsb
loopne
das
mov
mov
mov
xor
lock
xor
push
and
mov
imul
scas
pop
cmp
pop
fcmovne
jnp
cltd
imul
mov
xchg
scas
inc
xor
cmp
jg
xchg
lcall
pop
sahf
jge
mov
inc
xor
pop
jae
jmp
pop
sub
daa
jno
dec
cs
inc
subl
dec
mov
dec
inc
pop
aaa
test
jae
repnz
adc
test
sbbb
rol
mov
leave
sub
aad
pop
repnz
std
sbb
js
mov
or
inc
dec
hlt
inc
outsl
bound
or
mov
shl
lahf
lret
in
bound
andb
add
scas
mov
xor
imul
jae
and
mov
pop
shl
xor
inc
jge
jmp
and
push
jae
push
and
dec
imul
clc
repnz
and
adc
lods
jnp
push
sbb
imul
mov
sbb
mov
xchg
pop
jmp
mov
les
faddl
pushf
lods
aam
jnp
mov
jbe
icebp
shrb
into
ljmp
fiadds
xchg
testb
dec
xchg
je
lcall
int3
jns
mov
sbb
fsubrl
or
int
mov
sbb
rorb
xor
movsb
ljmp
scas
dec
mov
scas
mov
lret
cltd
pop
jecxz
pop
add
mov
xchg
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
mov
dec
inc
jmp
add
ja
and
jb
jo
fs
je
xchg
fisttpl
jmp
jl
xchg
push
pop
ja
mov
inc
push
inc
fs
aaa
cwtl
add
not
adcb
imul
xchg
jo
jne
jno
or
pop
xchg
aad
ljmp
test
out
xlat
sub
and
jne
inc
xor
and
clc
dec
std
cmp
scas
and
test
cmp
psraw
jo
mov
add
pop
ss
or
or
test
inc
cmpl
push
mov
xchg
loop
jns
cmp
and
ds
sbb
mov
je
pop
dec
fisttps
xor
or
aad
adc
sbb
push
add
fsubs
pop
sub
mov
movl
inc
mov
cmpl
and
xchg
xorl
call
inc
xor
loope
fsubl
es
ret
add
add
push
add
or
test
add
rol
mov
inc
push
mov
adcl
jecxz
daa
adc
mov
orb
mov
js
shl
invd
sbb
scas
ret
inc
inc
xchg
dec
xor
push
inc
shll
mov
push
cmp
jb
call
sub
lahf
popa
jmp
adc
and
add
jb
inc
jle
mov
rclb
jecxz
movb
cmpsb
dec
sbb
push
push
rdpmc
testb
fnstenv
and
xor
mov
sbb
mov
test
rorb
cmpsb
addr16
mov
orb
push
fimull
add
aaa
add
jne
cmp
or
push
ret
sub
cmp
loopne
or
mov
jmp
lock
push
add
push
or
mov
testl
and
adc
adcl
add
lds
jmp
mov
pop
orl
and
insl
or
fimuls
jg
test
je
jge
xor
out
lea
mov
dec
mov
pop
outsl
or
add
xor
ror
clc
cmp
je
cmp
fmul
rolb
push
sti
jne
and
jl
cmp
add
cmp
mov
jg
call
fadds
pop
test
je
mov
ret
sub
mov
push
pop
pop
pop
push
mov
pop
out
outsb
jae
push
nop
add
cld
mov
cs
cmpb
je
or
xor
or
jbe
adc
or
inc
cmp
or
arpl
clc
int
test
inc
xor
or
ss
add
inc
rep
jmp
sub
fs
adc
es
push
hlt
adc
shll
or
shl
cmp
ret
xor
mov
xor
or
ja
jmp
leave
and
or
or
scas
cmpsl
ret
or
sbb
inc
sbb
aam
add
xchg
ss
or
outsb
jbe
int3
stos
es
sbbl
push
cld
jb
mov
stos
cmp
xchg
jo
sarl
lsl
jne
mov
mov
icebp
sub
add
cmp
or
pop
ss
loop
jmp
orb
arpl
bound
add
add
imul
xor
add
and
in
push
push
and
pusha
sbb
and
out
nop
sarl
out
pop
lock
push
mov
cmp
lret
scas
icebp
cmpsb
jnp
daa
add
cli
xchg
mov
repnz
inc
adc
push
jne
rolb
cli
push
adc
rcrb
fs
addb
dec
pop
jbe
adc
rcrl
jne
jne
pusha
adc
dec
in
in
sub
lds
cmp
mov
add
movsl
sub
jne
mov
mov
ja
adc
aaa
jo
in
or
mov
int
out
pop
mov
ja
mov
mov
adc
adc
jae
or
js
or
sbb
seto
dec
or
jle
xor
test
adc
jne
mov
aas
out
or
out
into
xor
addr16
in
adc
inc
xor
dec
jmp
les
dec
and
adc
rolb
pop
subb
sbb
mov
ljmp
inc
mov
xor
ficompl
imul
push
daa
adc
ud2
cmp
popa
add
lcall
loop
or
adc
ss
scas
add
sbb
adc
sub
and
ja
mov
xchg
push
add
or
jb
adc
jmp
stos
ret
add
loop
aad
xchg
stos
jmp
mov
cmp
push
push
pop
dec
cmp
pusha
jmp
movsl
popa
sahf
decl
adc
mov
in
or
jg
rol
in
jo
push
aad
inc
jne
mov
pop
pop
or
movsb
or
testl
xchg
rcr
orb
sbb
push
or
and
cmpsl
pop
sub
xchg
xlat
adc
sbbb
call
xchg
scas
pop
sbb
lods
mov
ret
int
push
testl
pop
into
and
jle
pop
dec
mov
adc
adc
jo
lret
bound
xor
fdivp
add
xchg
hlt
xchg
ja
mov
xchg
add
dec
jmp
mov
jbe
imul
adc
pop
cltd
adc
xchg
xchg
jmp
inc
lahf
fsubs
cmpsb
dec
xchg
testl
adc
dec
and
test
push
push
mov
xchg
jnp
dec
jmp
add
test
cltd
xchg
lret
push
stc
into
sti
push
inc
clc
jge
lods
cli
cwtl
in
out
adc
or
test
xor
mov
mov
add
inc
dec
movsb
xor
sbb
and
push
sub
add
xchg
cmc
sbb
rcrl
mov
mov
scas
ret
inc
inc
pop
inc
rclb
or
data16
and
add
sbb
outsb
sarb
sub
sub
cli
xor
and
fcmovne
add
mov
cwtl
lock
add
add
imul
les
add
rcll
sub
shrl
mov
js
int3
movb
cs
sbb
jb
cmp
loope
pusha
clc
mov
add
jno
hlt
push
ret
andb
popf
jle
add
add
imul
dec
jge
movb
push
inc
add
mov
pusha
decb
js
mov
iret
aam
and
ss
sub
test
and
popa
add
adc
dec
pop
fstpt
movsb
test
pop
gs
xchg
xor
and
add
jle
fs
dec
and
sub
dec
mov
dec
nop
insb
add
push
xor
xor
mov
mov
push
push
jo
into
push
sbb
inc
aam
dec
pop
push
mov
lret
jmp
push
lock
test
rolb
pusha
push
pop
hlt
mov
cmpsl
pusha
sub
push
pop
mov
sbb
jno
aam
dec
in
pop
adc
pop
add
sub
xchg
mov
mov
addb
cmc
int
rolb
mov
icebp
shrb
movsb
shlb
sbb
test
imul
pop
push
mov
enter
push
loopnew
test
js
incb
shll
xchg
push
cmp
and
sub
roll
enter
cmp
xchg
loopne
push
jbe
fwait
add
inc
mov
loope
lods
jb
inc
pushf
test
stos
or
sarl
lods
mov
add
sub
xor
or
mov
sub
hlt
xchg
and
xor
pushf
aad
sti
dec
or
nop
jle
adc
mov
cmpsl
leave
rcrb
jne
pop
in
hlt
sbb
cld
mov
pop
mov
pop
add
sbb
insl
cs
push
sbb
test
sbb
popa
dec
testl
or
jle
pusha
in
mov
push
rcrb
cmpsl
xchg
enter
sbb
popf
lret
mov
mov
push
je
add
sbbb
out
mov
cld
idivb
or
add
cltd
sarb
lret
insl
sbb
out
inc
shl
loopne
shlb
add
push
pop
fwait
xchg
jl
dec
fdivr
add
cmp
sbb
jle
xchg
out
inc
adc
add
mov
icebp
xchg
pop
jno
push
jg
add
inc
push
mov
cmp
jno
fdivs
in
add
lret
shlb
add
lcall
mov
sbb
lds
sub
add
mov
or
pop
xchg
add
push
fwait
xchg
jnp
add
sub
fstps
sub
pop
adc
int3
jne
or
data16
push
push
test
and
orb
sbb
adc
push
xchg
and
es
mov
pop
repz
mov
dec
pop
fcomps
sti
add
mov
cmpsl
push
add
mov
inc
ret
popa
jge
sbb
add
jle
icebp
lds
sub
adcb
movb
fistpll
test
cmpb
enter
push
inc
pop
flds
leave
insl
xor
mov
cmc
lret
or
cmp
imul
test
inc
or
scas
push
cmp
hlt
push
mov
add
daa
adc
add
ljmp
movsl
or
aam
sbb
and
and
sub
or
gs
daa
mov
adc
out
pop
xchg
xorb
sub
xor
or
dec
fmull
inc
push
enter
xchg
mov
adc
jnp
and
push
adc
jge
adc
les
jp
inc
adc
sub
xor
xorb
mul
pusha
adc
xor
cwtl
dec
and
push
or
inc
pusha
push
jbe
push
add
test
push
jb
jo
outsl
xor
inc
and
or
add
xor
fisubs
inc
xchg
stos
iret
fdivrs
lahf
xchg
fstl
mov
jecxz
fisttps
mov
dec
orl
scas
xor
push
jg
xchg
xor
cwtl
clc
push
fadd
push
xor
add
jg
icebp
and
pop
xchg
pop
cmp
xor
ja
test
cltd
dec
mov
push
stos
in
adc
mov
addr16
fdivrl
add
mov
inc
arpl
xchg
mov
xchg
or
mov
sbb
add
push
sub
loop
lock
add
lahf
lret
test
adc
mov
jl
pop
mov
and
push
push
sbb
lret
jge
mov
cs
test
in
nop
lock
add
mov
aad
sbb
push
int
dec
sbb
push
div
mov
and
push
lcall
std
add
cmpsb
mov
sub
xlat
cmp
add
mov
addr16
inc
jp
inc
enter
jmp
sbb
fwait
cli
xor
icebp
test
das
xchg
sbb
mov
movsl
mov
pop
fnstcw
cwtl
stos
inc
fildl
dec
mov
enter
add
jae
adc
dec
popf
add
push
sub
adc
int
or
mov
arpl
sbb
fsts
sub
jmp
loop
and
pusha
sbb
hlt
sbb
data16
add
or
pop
jb
pop
rcrl
xadd
lret
xlat
lock
push
fsubp
xchg
in
adc
mov
pop
int3
or
shrl
cld
push
sbb
push
add
bound
addl
subl
add
fsts
loop
cmp
rolb
sbb
jns
lods
stos
out
xor
jge
call
imul
or
cmpsb
xor
add
gs
push
aas
orb
pop
push
xorb
mov
jne
popa
leave
in
pusha
or
inc
adc
and
pop
sbbb
sub
nop
add
push
test
mov
mov
dec
pushf
mov
in
and
pusha
addr16
adc
pop
sbb
stc
les
mov
leave
aam
pop
mov
or
cmpsl
inc
sub
scas
outsl
roll
adc
adc
and
xchg
cmp
sbb
lods
rolb
pop
test
or
and
mov
jmp
cwtl
pop
or
cmp
data16
add
shrl
sbb
jecxz
adc
nop
addr16
sbb
xchg
lcall
cmp
mov
sbbb
mov
out
push
lock
es
add
jbe
jl
and
data16
cmp
std
adc
iret
mov
pushf
cmp
add
test
push
fsts
add
dec
push
repz
push
in
adcb
scas
xor
leave
stc
push
mov
test
mov
mov
inc
test
jb
cmp
iret
call
inc
ret
daa
aam
test
mov
jns
jo
test
and
add
pop
notl
cmpsl
in
mov
orl
test
cwtl
jge
clc
loopne
sub
or
push
scas
js
jnp
fldcw
stc
xor
xchg
or
adc
xor
cwtl
and
pop
loope
pusha
das
icebp
jns
mov
in
cmc
and
jl
stc
sbb
adc
mov
loope
add
gs
adcb
cmp
hlt
rorb
mov
fld
adc
jecxz
enter
sub
xor
add
or
jge
lret
add
jl
arpl
sub
mov
out
test
inc
faddl
xor
push
pop
add
or
inc
add
mov
push
sbb
rcrb
mov
clc
push
cmp
orl
pop
test
cld
inc
movsb
dec
mov
call
xor
or
and
push
mov
pop
shll
es
push
dec
or
push
mov
mov
adc
adc
adc
mov
fisubl
pop
sbb
jg
dec
or
aam
inc
xchg
mov
lock
mov
lods
testl
cwtl
int3
addr16
and
and
xor
pushf
orl
rorl
mov
inc
addb
pushf
cmp
add
pop
loop
fistpl
jmp
cld
loopne
sub
scas
fcomps
add
cmp
xor
push
ud0
jg
negl
or
jmp
add
mov
faddl
das
data16
je
xor
add
cltd
sub
add
fldcw
cmp
mov
push
push
dec
cwtl
sbb
xor
popa
test
add
in
fsubrs
call
loopne
stos
in
clc
jmp
fdivs
cld
add
outsb
js
negl
adc
stc
in
imul
pusha
pop
test
mov
sub
or
std
sbb
xor
mov
push
syscall
pop
in
popf
pop
adc
out
notl
cltd
sub
rcrb
xor
sti
sbb
add
mov
addr16
add
in
fstps
outsb
push
fs
out
sbb
repnz
xor
icebp
add
mov
xor
dec
xchg
scas
shl
fidivl
fisttps
sti
jmp
mov
dec
sbb
cmp
sbb
mov
add
xor
aas
aad
sub
add
test
or
jp
add
out
push
pop
sbb
fnstenv
sbb
or
mov
adc
out
and
inc
jbe
sar
pop
lcall
fcomps
testb
in
and
or
mov
jle
and
lcall
jmp
lcall
icebp
push
ja
inc
pop
push
jmp
sub
jle
add
pop
fidivs
test
fnsave
lock
mov
stc
subb
inc
jge
pop
out
cmp
sahf
add
fcomps
lcall
loopne
push
add
inc
mov
add
std
push
imul
iret
shll
idivl
fidivs
stos
and
inc
faddl
push
ficompl
pusha
inc
lods
sbb
popa
pop
mov
dec
mov
add
mov
pop
inc
add
ds
int3
lea
sub
sarb
jno
jae
xchg
xor
and
jne
push
xchg
inc
add
das
push
test
rcl
mov
shrb
iret
das
sub
push
xchg
fisubs
push
test
test
sub
in
jbe
sbb
add
int3
add
sbb
cs
and
cli
cld
mulps
jbe
xchg
mov
or
inc
movsb
cmp
xchg
dec
add
fwait
mov
add
or
pusha
ja
enter
outsl
mov
movsb
xor
add
xchg
cmp
push
dec
add
scas
cmp
jl
jp
mov
loopne
dec
sbb
jb
jmp
mov
mov
xchg
xchg
mov
jbe
nop
or
ret
mov
lock
xorl
stos
xchg
inc
jecxz
ja
cld
xor
inc
and
test
cmp
lods
cmp
js
inc
cmp
movsl
mov
std
add
pop
xchg
clc
cli
add
cmp
add
sub
clc
mov
jb
outsb
sbb
and
add
fs
add
cwtl
or
je
add
mov
xor
icebp
push
mov
xchg
stos
mov
push
dec
lds
mov
les
lahf
jle
sbb
or
incl
jno
adc
cli
jb
add
orb
ret
cmp
cmc
fxch
cwtl
add
daa
mov
sbb
adc
xchg
cmc
js
shl
jl
push
jbe
lock
sbb
jge
mov
dec
push
je
xchg
and
mov
push
sbb
jge
add
stos
push
lret
push
add
sbb
andb
shll
adcb
xor
jl
jo
adcl
andl
pop
sbb
adc
aam
popf
push
pop
fcoms
add
push
pop
mov
testb
clc
orl
in
xchg
call
subl
jno
push
lods
addr16
pop
bound
fimull
xor
pop
jl
jb
cld
add
sub
push
dec
loope
testb
sub
aam
call
mov
mov
or
add
mov
les
push
test
mov
in
imul
test
mov
push
std
test
fs
push
nop
popf
sub
push
pop
dec
loope
dec
and
add
dec
lods
enter
mov
add
lods
int3
push
add
test
rcll
scas
ret
jmp
popa
clc
outsb
into
add
sub
xor
cmp
jecxz
mov
inc
fiaddl
int3
leave
mov
and
add
push
and
mov
fwait
xchg
adc
jns
clc
call
bound
lahf
add
int3
scas
sub
and
aaa
nop
push
mov
add
jns
outsb
sbb
loope
push
gs
pop
shr
xchg
rorl
or
mov
cmp
or
mov
popf
cmp
push
dec
clc
daa
push
xchg
cmp
out
aas
dec
cld
or
jge
dec
lcall
popa
out
mov
cmp
pop
cmpsl
push
cmpsb
push
lock
xchg
or
jns
and
test
xlat
stc
sbb
mov
outsb
mov
xchg
adc
out
push
push
dec
mov
inc
jo
push
loope
fwait
push
xor
adc
add
jecxz
add
popf
roll
mov
nop
sahf
mov
fildl
lock
popf
movsb
mov
mov
es
mov
movl
hlt
leave
lock
das
mov
pop
pop
xchg
push
add
sbb
xorl
loop
or
jle
sub
mov
push
add
in
ja
xchg
xorl
int3
pushf
cmpsl
popa
mov
cmp
cwtl
int3
and
je
orl
pop
outsl
xor
in
imul
xor
or
fiaddl
and
lahf
nop
adcb
or
imul
inc
add
cld
and
loopne
iret
scas
cld
loop
adc
cld
jge
push
pushf
xor
mov
dec
jge
pop
jnp
xor
dec
incb
sub
stc
fists
push
sub
mov
insl
xor
dec
sub
dec
dec
pop
pop
orb
call
pusha
fiadds
xchg
add
imul
lret
fldt
and
and
push
cmpsl
pop
pop
adc
pushf
adc
pusha
jmp
sbb
popa
subl
loopne
orl
push
mov
pop
sbb
add
in
mov
dec
subb
push
cmpsl
aas
mov
add
aad
push
lods
aaa
out
inc
cmp
les
or
ljmp
pop
nop
push
push
loope
das
imul
and
rolb
mov
add
lods
outsb
sbb
add
sub
push
rolb
xchg
pop
repnz
test
xor
es
aam
or
cmpsl
sbb
xchg
pop
shr
cwtl
or
push
in
scas
jp
add
das
mov
pop
add
mov
mov
ret
adc
es
mov
jl
fldt
mov
mov
xchg
fs
es
push
cmpsl
daa
mov
pusha
push
aad
fsubrp
adc
or
loop
cmp
hlt
arpl
sub
aad
shl
sub
cmp
xor
push
arpl
sbb
pusha
and
jp
adc
loope
lret
push
inc
inc
movsl
cmp
fs
shl
dec
cmp
and
sub
add
pusha
pop
add
dec
stc
and
mov
xor
adc
push
adc
xor
xchg
xchg
lods
sbb
dec
jl
rolb
mov
sbb
and
mov
aam
xor
or
mov
xchg
insb
mov
adc
push
add
shlb
inc
lods
sti
jle
test
daa
test
hlt
pop
outsb
sub
xchg
fsubrl
adc
push
or
pop
icebp
sub
out
mov
push
lock
popf
or
out
push
xor
pusha
lds
sbb
mov
jo
push
sbb
andb
pop
dec
mov
fs
sarb
pop
cmp
or
inc
and
mov
mov
add
sbbb
dec
jle
cld
bound
cmp
pop
mov
mov
psllw
cmp
cmp
or
add
sbb
loope
pop
push
mov
dec
loope
inc
rcrb
sbb
scas
pop
dec
pusha
add
fidivrs
and
lods
sbb
test
dec
inc
cld
add
or
add
lret
dec
enter
pop
fists
push
push
leave
dec
pop
pop
mov
mov
test
outsb
push
dec
sahf
fmul
adc
push
dec
arpl
daa
orb
in
insb
pop
sub
xchg
loopne
cwtl
fs
add
cld
jns
mov
lahf
adc
push
xchg
add
jp
add
pop
jl
je
mov
cmp
pop
adcl
in
add
arpl
dec
roll
sbb
xchg
xor
xor
jle
pop
lahf
lock
cmpsl
pusha
mov
lods
push
dec
mov
rclb
sti
bound
adcb
push
xchg
and
sub
scas
fadds
xor
jne
insb
dec
jle
or
aam
add
test
jl
subl
mov
add
fcompl
dec
add
fstp
cmp
fistl
jecxz
lahf
add
mov
or
xor
mov
inc
add
sub
lods
sbb
sbb
add
mov
in
jns
jno
sbb
add
xor
scas
fcomi
mov
add
divl
dec
dec
insb
subb
push
xchg
jae
jb,pn
xor
xchg
data16
cmc
mov
dec
pop
lods
int3
add
inc
and
adc
mov
mov
hlt
into
inc
push
mov
roll
sbbb
mov
out
jo
push
pusha
cs
ret
aas
shlb
insb
and
dec
iret
sahf
xor
adc
pop
add
loopne
das
push
mov
pusha
cmp
aas
push
xchg
sar
nop
add
dec
xchg
cmc
pop
jo
loope
test
test
mov
movsb
and
cmp
or
and
scas
mov
aaa
dec
nop
push
addr16
ja
arpl
cmp
mov
dec
cli
inc
sub
push
mov
sub
fwait
sarl
cs
rcl
add
mov
fistps
shlb
loope
and
push
dec
loope
or
sub
fdivr
push
adc
mov
or
sub
xlat
das
mov
and
mov
jns
aaa
or
fadds
and
pop
inc
add
outsl
push
je
shll
xchg
sbb
push
sub
xchg
enter
jge
jno
lcall
add
add
pop
sbb
in
pop
mov
int3
push
adc
lahf
dec
ljmp
loop
adc
sbb
adc
add
dec
adc
and
cs
pop
sahf
sub
cmpb
ds
pop
inc
push
sbb
imul
mov
inc
mov
add
ss
add
adcl
mov
nop
sub
mov
pop
add
test
sub
xchg
fsubr
sub
andb
or
pop
test
pop
mov
add
jp
repnz
xchg
icebp
rolb
movsb
inc
push
pop
sub
je
das
jno
shr
mov
inc
adc
jl
mov
insb
notl
sarl
xchg
mov
adc
data16
orb
add
hlt
shlb
notl
fadds
leave
pop
jle
add
xlat
and
inc
jo
dec
add
ja
pop
xor
adc
mov
scas
das
aam
nop
sti
out
subl
sub
and
and
jnp
outsl
orl
jae
imul
ret
push
test
sbb
bound
jns
int
test
imul
xorl
pop
fimuls
sub
jbe
or
enter
dec
xchg
and
adc
mov
sbb
add
pop
adc
or
pop
pop
fcoms
add
shrb
lahf
add
dec
jle
and
add
adc
or
jbe
bound
add
or
daa
jo
push
stos
or
test
out
inc
sahf
dec
inc
int3
fadds
mov
rorl
mov
adc
test
into
inc
adc
aad
mov
xchg
mov
cmp
inc
movsl
add
js
cli
cmp
bound
dec
jno
icebp
sub
xchg
mov
cmpsb
mov
pop
sbb
out
inc
or
push
and
adc
pop
in
jbe
mov
sub
imul
sbbb
addb
cmpsl
fwait
inc
add
fdivrs
adc
sbb
sub
loop
xor
inc
mov
sub
nop
int
cmp
scas
subl
repz
test
add
es
cmpb
pop
xlat
icebp
fcoms
pop
dec
das
and
adc
mov
cmpsl
cs
mov
push
popa
cmp
loop
push
dec
add
roll
dec
adc
nop
add
push
in
push
sbbb
push
stos
sub
xor
xchg
daa
rcl
insb
push
jle
rcrb
and
pusha
and
xchg
test
cli
or
nop
dec
out
pcmpeqw
or
js
inc
and
inc
xor
scas
push
cmpsl
pop
pusha
outsl
stc
pushf
shrb
xor
push
pop
and
cmp
add
pop
testb
adc
pop
xchg
loopne
cmp
rcr
pop
jns
adc
arpl
add
insl
cmpl
mov
in
int
rorl
fstpl
in
lock
sahf
mov
sbb
hlt
push
pushf
call
popf
rcrb
mov
stc
sbb
mov
out
or
std
fstl
pop
out
cmpsl
orb
add
or
inc
cmpsl
or
cs
dec
and
push
xorl
mov
fs
inc
jg
cmp
sub
xor
mov
addb
and
pop
lods
nop
and
xlat
xchg
test
add
add
xchg
mov
clc
test
add
lea
dec
clc
aaa
or
int3
jle
push
lods
inc
popa
dec
les
add
xchg
into
std
gs
add
cwtl
jae
cltd
mov
cwtl
enter
dec
enter
adc
in
inc
lret
sbb
out
inc
loopne
sub
and
jecxz
xor
mov
cmp
and
frstpm(287
dec
dec
fildll
mov
add
popf
iret
test
movsb
push
or
inc
sub
ds
inc
inc
add
into
cmpsb
push
xchg
add
mov
and
sub
call
mov
test
ljmp
mov
xchg
stc
lock
add
push
data16
outsb
ficompl
dec
in
cmp
xorl
sbb
mov
daa
and
xor
push
jbe
push
adc
imul
daa
add
jp
sub
test
add
add
lahf
add
sub
and
rolb
mov
and
aas
sbb
mov
sbb
add
pusha
jae
or
mov
gs
xchg
mov
es
fidivl
repz
pop
mov
sbb
xor
fs
lahf
and
or
fdiv
pop
or
mov
or
sti
push
addl
push
rcrb
mov
jae
adc
popf
sbb
ljmp
sahf
xchg
test
jl
ja
jle
les
pop
inc
insb
sbb
adc
adc
add
mov
iret
dec
or
gs
cmp
inc
sub
and
mov
hlt
adc
add
inc
enter
out
enter
mov
jg
add
cmpb
and
sub
or
loope
push
mov
call
push
jns
in
lcall
popf
xchg
das
dec
out
test
adc
mov
push
cltd
nop
rcr
sbb
lahf
or
pop
mov
push
cmp
inc
dec
lret
in
mov
pop
test
sbb
mov
leave
pusha
enter
cmpsb
testb
jo
nop
pop
enter
aad
cmpsl
inc
aaa
ja
bound
add
pop
jg
roll
dec
sti
pushf
or
mov
incb
xchg
cmp
lods
mov
not
pusha
jecxz
inc
xchg
daa
or
ss
sub
or
leave
add
fisubrl
scas
in
dec
adc
es
jns
sbb
sub
dec
cmp
xchg
push
mov
arpl
filds
in
mov
sbb
and
xor
pop
adc
ret
xchg
js
das
pop
push
aam
pushf
dec
repnz
sub
pusha
jno
test
or
aam
add
adc
mov
adc
jns
fdivrs
pop
cmp
inc
push
addr16
hlt
dec
and
sbb
and
ret
and
cli
ret
test
lods
jecxz
pop
cmp
shll
scas
pop
push
and
xor
cwtl
ror
add
sarb
test
jo
or
jg
adc
aam
inc
add
dec
cmc
test
cmpsb
out
sub
loopne
fsubr
out
pop
pop
and
insl
mov
xor
cmp
mov
test
mov
add
cmp
cmp
movsb
cmp
adcb
push
pop
inc
js
cmpsl
sbb
and
adc
cmp
in
add
mov
push
inc
lea
orb
adc
mov
in
movsb
je
test
mov
repz
in
push
les
and
pushf
adc
sub
test
or
outsb
rclb
fwait
inc
inc
adcb
ffree
add
pop
pop
lock
scas
mov
jecxz
jp
popa
pop
loope
xor
mov
pop
push
mov
adc
xor
sbb
cmp
pop
aam
test
dec
imul
lea
pop
test
adc
inc
add
mov
enter
push
das
inc
rorl
or
adc
push
xor
or
je
add
fdivl
repnz
xchg
mov
push
pusha
imul
lock
mov
sub
adc
ffreep
pop
movsl
int
add
out
sahf
dec
dec
mov
add
cmpsl
xlat
xor
cmp
fnstenv
jno
add
ss
adc
push
inc
aam
fistpl
and
pusha
cmp
add
testl
fmull
push
jmp
mov
hlt
mov
or
jp
outsl
mov
pop
and
pop
loopne
dec
add
pushf
dec
jae
stos
iret
sub
mov
add
mov
nop
popa
insl
aad
adc
add
mov
push
xchg
dec
outsb
adc
mov
insb
push
add
ret
dec
adc
push
adc
cmpsl
or
daa
pop
sbb
aas
pop
cmpb
aam
into
add
push
push
add
and
inc
push
mov
int3
push
mov
in
ret
rcl
adc
or
inc
stos
mov
sahf
or
fcmove
int3
inc
mov
jl
push
loopne
pop
dec
loope
mov
les
arpl
int
or
sub
shl
cli
xchg
cmp
inc
sub
in
mov
in
add
cltd
push
push
sbb
xor
mov
push
mov
daa
jo
nop
add
cwtl
call
pop
adc
push
ret
test
subb
lcall
movsw
or
xor
adc
push
lret
mov
outsl
and
jg
adc
and
fidivs
sub
pop
jg
xchg
iret
leave
sub
in
sub
push
xor
hlt
jbe
sub
push
inc
push
shl
jp
aam
jb
adc
out
xor
lock
xor
adc
push
sub
out
dec
jle
cld
xor
insb
mov
sub
inc
pusha
rclb
popa
jns
inc
add
pushf
xchg
dec
cld
leave
cmp
xor
inc
into
rol
push
sbb
mov
add
cld
dec
and
fcoms
js
adc
movsb
and
sbb
mov
insb
enter
aam
cmp
test
add
cli
sub
test
xor
lods
int
fwait
jle
xchg
orb
test
push
js
pop
mov
jge
xchg
in
cmp
mov
loop
test
das
lods
and
add
outsl
mov
xchg
or
cmpsl
push
xchg
jl
pusha
pop
inc
daa
sbb
cmp
aam
dec
enter
test
test
shrl
add
test
push
jmp
je
cld
mov
xchg
rolb
xchg
sbbb
popf
jl
adc
nop
popf
rcl
add
push
push
lods
cmp
enter
cmp
xlat
mov
fstpt
inc
sbb
add
fs
inc
ja
icebp
dec
cld
add
xor
shlb
jns
mov
sahf
shr
out
and
sbb
adc
jp
call
sub
cwtl
icebp
adc
cs
rorl
sub
adcl
cmp
stos
add
imul
push
xor
js,pt
dec
push
mov
adc
pop
xor
inc
mov
push
int3
sahf
xchg
movd
pop
jecxz
lods
test
popf
xchg
push
popa
insb
and
push
push
xchg
adcb
inc
rclb
mov
ja
imul
imul
mov
shlb
int3
std
or
dec
or
adc
lods
dec
mov
pop
add
cmp
push
xchg
icebp
js
and
enter
or
das
lods
dec
les
and
dec
std
pop
dec
pusha
fwait
mov
sbb
pusha
add
stc
adcb
or
sbb
xchg
fcoml
add
inc
jle
pop
ja
xor
sahf
push
mov
jp
pop
sub
adc
je
add
xor
push
mov
sub
and
adc
and
call
pop
shl
sbb
push
hlt
adc
in
fadds
dec
cltd
fs
es
les
cmp
cmpsl
addr16
mov
mov
xchg
daa
sbbb
sub
adc
cmp
add
push
add
xchg
sub
clc
mov
je
rorb
sub
and
and
mov
insl
movsb
shlb
mov
in
out
xchg
cmp
or
push
ds
cwtl
mov
mov
test
and
cld
sbbl
sub
adcb
pop
mov
or
call
mov
xorl
stos
mov
cmpsl
aad
cmp
ror
push
and
jno
mov
imul
lods
movsl
xor
shrb
es
lcall
dec
ret
dec
in
syscall
lret
adc
sub
jp
add
jge
mov
inc
fwait
bound
sub
adc
insb
jle
ds
lahf
add
mov
popa
mov
sbb
data16
push
mov
icebp
adc
xchg
in
repz
pop
inc
sub
pusha
jnp
xlat
jns
add
add
jb
sub
add
add
or
scas
jl
iret
in
lock
jle
inc
jecxz
dec
mov
mov
test
jnp
add
enter
mov
iret
xor
ret
pop
push
cmp
push
adc
int
in
insl
jno
les
les
add
mov
dec
mov
mov
fs
mov
add
movsl
lea
hlt
pop
out
test
fcmovbe
push
leave
in
and
les
cltd
or
dec
xlat
adc
cmpsl
mov
mov
fdivs
pop
aaa
fs
addl
push
scas
dec
cmp
mov
or
adc
ds
or
mov
cs
cmp
fcoms
orl
cli
and
nop
shlb
sub
in
popa
jmp
and
lods
push
mov
aam
xchg
adc
je
sbb
inc
mov
jo
jo
mov
inc
les
negb
add
mov
pusha
mov
dec
sbb
xchg
mov
ljmp
shlb
pop
lahf
xor
xor
fldcw
mov
fiaddl
rcl
xor
push
je
xchg
lahf
xchg
add
jle
mov
pop
outsb
je
imul
inc
loopne
into
adc
mov
shl
roll
adc
icebp
stos
addb
pop
inc
ror
lcall
lret
push
aam
pop
rolb
and
pushf
scas
mov
int3
stos
adc
mov
adc
aas
imul
scas
inc
or
push
jle
xlat
mov
pop
push
add
stos
lock
fwait
bound
sbb
or
sub
sub
and
add
sbb
jmp
sbb
rcr
push
push
imul
test
jl
lods
pop
shlb
jns
or
adc
or
cmpsl
push
push
stos
insb
lret
jo
add
popa
hlt
jl
jo
mov
int
adc
and
add
push
dec
and
xor
lar
sub
je
stos
add
dec
and
orl
movlps
adc
sub
fdivr
add
jnp
cmp
dec
xor
add
roll
lahf
xchg
popa
cmpsl
push
cmp
adc
pop
cmp
aas
add
push
subl
test
pusha
pop
and
xor
cli
or
mov
xchg
clc
pop
into
jmp
and
and
xlat
repz
js
or
nop
jo
mov
or
and
nop
and
jl
jno
push
fldt
loopne
sub
adcb
cld
test
movsl
cmc
add
xlat
add
push
mov
jb
jge
and
sbb
loope
mov
and
sub
jno
jns
cltd
popa
mov
cld
aas
and
sbb
arpl
es
cmp
push
add
dec
pop
mov
addb
inc
pop
fisubl
push
and
je
sub
sbb
and
cpuid
xor
adc
insb
loopne
lcall
inc
or
clc
xor
pushf
xchg
mov
xchg
sub
mov
pop
lahf
mov
jne
movsb
repz
arpl
add
out
je
xchg
xchg
sub
dec
jl
clc
push
loope
and
lods
ja
loopne
add
jno
add
sti
adc
lret
test
into
pop
or
or
aad
inc
fdivr
fwait
movsb
sarb
jae
cmp
int3
out
cmpsb
mov
push
dec
cmp
and
dec
icebp
mov
inc
and
stos
aam
jnp
das
xchg
nop
xchg
sub
jae
bound
mov
popa
pusha
adc
outsl
imul
xchg
adc
adc
cmp
cmp
jne
add
sbbb
in
lock
js
add
mov
frstor
aad
or
add
dec
hlt
xlat
int3
inc
into
push
enter
cmp
fs
jbe
xor
jo
call
popa
stos
fwait
mov
cli
sub
adc
add
int3
xor
sub
add
dec
cld
sahf
adc
inc
push
imulb
lock
xor
sti
sub
dec
jp
mov
or
push
int3
test
add
fninit
bound
je
mov
push
sbb
or
iret
movsl
push
push
js
call
clc
inc
mov
les
test
sub
inc
and
mov
stc
mov
hlt
cmp
push
stc
fwait
out
jne
cs
fcompl
test
das
stos
sbb
pop
daa
sti
and
add
pop
or
test
sub
ret
mov
xor
jge
imul
xor
push
ffree
and
outsl
repnz
mov
mov
ficoml
pop
lea
sbb
dec
aam
mov
test
shufps
pop
adc
push
loopne
add
testb
movsb
dec
in
les
pop
jg
mov
dec
push
xor
lahf
fisttps
adc
stos
pop
int3
adc
xchg
clc
je
jg
int3
adc
or
sbb
daa
pusha
inc
xchg
lods
adc
jg
js
pop
test
call
adc
mov
in
je
aam
inc
loop
movsl
xchg
push
add
mov
mov
ja
popf
ljmp
ret
outsb
lods
push
adc
add
ficoml
lock
xor
push
mov
add
or
mov
shl
sbb
push
fdivs
lock
and
sbb
jecxz
je
orb
push
fwait
in
out
xor
into
js
and
ret
pusha
in
fwait
xchg
int3
mov
stos
cmc
push
testb
mov
or
subb
lock
adc
fstp
jl
and
pop
loopne
adc
andl
outsl
and
iret
and
push
scas
inc
fs
fists
cmpsb
loop
add
xchg
les
cltd
add
cmp
shlb
or
cmp
cmpsl
jp
or
lods
cwtl
fdivrl
sarb
pop
dec
cld
push
cmp
fstpt
inc
sub
pushf
xchg
setb
sbb
add
movsl
sbb
enter
imul
cli
mov
push
pop
cmp
lock
sbb
add
mov
push
fnstenv
shrl
bound
xchg
add
test
jmp
repnz
je
pop
push
pop
loop
mov
add
xchg
mov
popa
jge
jno
sbb
add
stos
or
pusha
mov
xchg
sbb
aam
les
loop
add
dec
frstor
cmp
outsl
push
xchg
and
xor
stos
pushf
pushf
dec
add
xor
cmpsb
add
test
sub
xorl
push
sub
ficomps
adc
push
sub
ljmp
nop
jne
xor
dec
jns
and
inc
in
add
sti
xor
jbe
sbb
test
adc
dec
inc
test
hlt
sahf
out
dec
add
repz
loopne
mov
std
filds
lret
jge
xor
frstor
fsts
sbb
sbb
lods
lds
and
dec
dec
aam
jecxz
xchg
or
repz
scas
dec
insb
lahf
mov
mov
jl
das
mov
sbb
cli
gs
pop
add
fisubrl
sar
pop
lods
pusha
es
push
popa
adcb
mov
insb
fimuls
lods
test
add
sub
add
lea
add
outsb
and
rol
inc
jp
subb
in
cli
sbb
out
pop
push
insl
push
sub
lock
and
ror
pop
in
rcl
sbb
push
neg
aas
xchg
adcl
and
pop
in
sbb
cld
mov
stc
xchg
aam
xor
sub
jo
mov
dec
out
pusha
movsb
jp
sub
adc
fcompl
sub
pop
xor
lahf
or
or
xchg
mov
int
popf
jns
add
adc
subb
adc
push
add
shrb
mov
sub
movsb
adc
rcrl
addl
adc
lret
pusha
add
xchg
insb
push
mov
mov
loopne
ficompl
mov
mov
push
xchg
cmpsb
ret
push
pop
mov
mov
jo
test
and
popf
jbe
shl
and
add
pop
lret
xchg
push
xchg
shlb
xor
sub
sti
pushf
jmp
mov
cld
les
cmp
mov
jns
fsts
adc
sbb
mov
sub
lea
add
inc
and
lock
cs
faddl
fbstp
insb
hlt
aaa
aam
shlb
fisubl
adc
cmp
push
xchg
addr16
ss
jne
arpl
sbbb
push
cs
sbb
stc
sbb
xchg
inc
dec
adc
xchg
inc
sbb
sbb
cmpb
add
add
outsb
nop
jno
sub
shll
xchg
or
nop
jle
and
outsl
les
jge
add
adc
lret
add
push
push
in
or
icebp
inc
and
sub
rol
sub
mov
bound
es
imul
inc
bound
fimuls
inc
xor
repz
mov
sub
test
or
in
jecxz
adc
les
cmp
sbb
xchg
jbe
in
pop
fmull
adc
adcl
xchg
xor
addb
les
call
add
mov
inc
jge
jnp
xor
adc
adc
xchg
adc
dec
fisubrl
repnz
and
xor
mov
mov
pop
sbb
dec
push
adc
cltd
fists
es
adc
adc
sbb
dec
jno
mov
test
or
fldenv
and
sbb
cmp
pushf
and
jno
xor
or
mov
or
add
mov
or
fstpl
fistl
mov
lret
mov
leave
fcoms
and
test
mov
lods
push
adc
into
adc
sbb
int3
or
popa
cmpsb
adc
push
nop
push
bound
adc
pushf
mov
sbb
and
andb
mov
add
sub
popa
fs
push
jo
outsl
xchg
clc
push
shll
xor
add
xchg
cmp
add
sbb
and
ss
int
cwtl
or
push
sahf
subb
ret
insb
inc
js
inc
sub
inc
xchg
jno
xchg
sbb
or
mov
nop
xchg
adc
push
pop
and
int
or
or
ds
mov
cmp
adc
pop
add
inc
or
add
add
add
sbb
adc
pusha
and
mov
adc
jns
dec
test
loope
imul
add
in
dec
xlat
and
adc
mov
pop
pop
das
push
stc
sbb
or
lock
cs
push
jl
loope
lcall
xlat
notb
sub
inc
add
push
mov
adc
loopne
stc
pusha
hlt
xor
jle
clc
rolb
pushf
cmp
and
pop
mov
dec
dec
adcl
xchg
mov
adc
adc
mov
push
dec
add
fs
xor
adc
or
add
loope
pop
int3
cli
pop
dec
lds
sub
sub
lods
in
xor
mov
hlt
aam
loope
or
add
sub
loopne
xor
pop
mov
dec
int3
stc
es
sub
mov
nop
aaa
hlt
jmp
rorb
sbb
dec
ret
cwtl
test
dec
dec
cmp
in
inc
movsb
xor
add
xor
lods
push
add
jecxz
call
loop
lahf
mov
ja
lret
sbb
inc
adc
fnstcw
int3
xlat
jp
xchg
push
mov
lahf
popl
pop
cwtl
sub
outsl
push
orb
out
cmp
sub
pusha
mov
nop
add
test
and
lods
or
mov
jb
add
or
mov
pushf
js
daa
mov
push
fsubrl
add
inc
cmpl
outsl
shl
inc
inc
enter
repnz
fsubl
and
or
std
or
add
xchg
test
ss
add
lods
pop
js
add
jmp
sahf
or
ljmp
imul
and
and
hlt
jge
dec
mov
mov
xor
push
sahf
insb
jns
test
push
mov
fadd
sub
mov
inc
enter
out
movsb
js
stos
add
pop
and
nop
lock
push
pop
add
xor
mov
add
adc
add
js
or
loope
clc
mov
lahf
ret
sub
add
mov
mov
jle
jb
cld
pop
xchg
pusha
lret
adcl
jl
or
xor
jecxz
cmp
add
lahf
mov
xchg
ds
sub
mov
pop
add
out
xchg
lods
clc
nop
nop
and
iret
adc
and
jns
pop
fs
movsb
mov
mov
popa
adc
mov
push
cli
andl
sti
rcr
add
sbb
fcmove
das
loop
rcl
xor
shrb
jns
sahf
add
xchg
out
push
sti
and
or
lret
std
push
xchg
adcb
fcompl
lds
adc
bound
and
out
and
jnp
iret
cwtl
std
or
sti
loopne
enter
push
sbb
and
cmp
xor
push
dec
mov
mov
leave
orb
xor
jecxz
aas
and
push
ret
or
add
jae
and
in
xchg
mov
and
lahf
mov
insb
test
and
add
push
cli
jae
jo
je
loopne
sti
push
mov
dec
sub
mov
xor
inc
add
int3
lea
fstps
loope
popa
sub
lcall
add
aam
jnp
mov
and
xchg
dec
adc
cmpsl
hlt
xchg
stc
adc
lcall
xor
pusha
pusha
xchg
push
mov
loopne
push
gs
add
jbe
adc
mov
mov
jl
sti
xor
out
dec
gs
fs
mov
mov
and
cmpsl
dec
add
lea
jne
hlt
cltd
add
push
pop
push
divl
and
clc
sbb
enter
add
sarb
hlt
xchg
addl
and
mov
adc
mov
cmpsl
stos
xchg
lods
cwtl
cwtl
hlt
pop
mov
rclb
push
mov
shl
push
cwtl
add
inc
add
xchg
add
mov
or
fsubl
dec
aad
jo
lret
fmuls
add
xor
loope
pop
mov
jo
test
push
cmp
in
popa
loope
repnz
pop
ljmp
or
repz
mov
test
into
dec
imul
adc
cmp
sbb
sbb
xchg
or
fisttps
cmp
cmp
or
dec
push
cmp
pusha
std
sahf
xchg
js
add
in
cli
dec
testb
data16
ds
xchg
loop
lock
jp
js
pop
and
or
cmp
movsb
adc
sub
sbb
bound
mov
mov
xor
sub
dec
mov
push
sbb
ret
adc
mov
inc
add
mov
nop
test
fwait
enter
lock
cld
dec
add
pop
dec
xchg
push
loope
repnz
clc
mov
mov
sub
mov
mov
add
xchg
loop
or
adc
dec
flds
add
sbb
add
mov
std
loopne
ja
mov
popf
inc
inc
fsub
and
mov
icebp
dec
jmp
clc
dec
std
stos
mov
add
insl
mov
mov
ffreep
push
addr16
icebp
and
int3
push
popf
repz
add
cltd
addl
fsts
pusha
and
mov
rclb
push
repz
jo
in
add
xchg
jecxz
mov
adc
inc
mov
or
outsl
add
imul
stos
adc
adc
dec
add
sub
cli
test
xorb
pop
xchg
inc
rcr
add
xor
daa
sti
and
add
xchg
out
pop
ja
and
mov
sbb
mov
movsb
js
push
xchg
push
in
aam
enter
sub
add
addr16
sbb
loope
pusha
callw
xchg
mov
jo
add
jl
cmp
out
std
add
outsl
dec
movsb
mov
jecxz
mov
sti
push
sub
pop
mov
and
es
add
inc
lea
xor
addl
dec
sbb
dec
sub
pop
dec
inc
lea
inc
mov
add
push
pop
xor
add
mov
sub
ficomps
xchg
out
cwtl
push
out
sbb
sbb
xlat
or
loope
in
out
xchg
pop
das
and
push
inc
cmpsb
inc
pusha
subl
inc
ret
sbb
nop
pop
and
pushf
add
cltd
cmp
xchg
and
push
xchg
push
xchg
shll
sbb
test
sti
daa
inc
pusha
sub
xor
call
sbb
test
mov
mov
xchg
mov
pop
add
xorb
jp
movsb
rcrb
mov
xor
xchg
pusha
fcoml
inc
push
or
cwtl
xchg
push
int3
mov
addl
arpl
in
sbb
mov
sub
pushf
or
add
pop
je
mov
lahf
lea
xor
in
shll
sub
push
jb
add
adc
jge
cld
push
sbb
adc
shl
or
jns
int3
and
subb
shrl
dec
xlat
and
sub
adc
jecxz
or
sti
pop
jno
add
mov
adc
mov
stc
int3
push
jne
pop
adc
and
jmp
inc
popa
andb
ja
shll
movsb
test
push
cmpsl
out
sbb
sbb
addps
es
adc
mov
inc
orb
test
fs
push
in
xchg
mov
cli
inc
xchg
imul
test
mov
je
sub
mov
jmp
xchg
nop
or
out
add
sbb
fadds
sti
cwtl
pusha
aad
mov
loope
out
add
cld
jmp
sub
cs
xor
jns
leave
les
fcompl
loopne
loop
xor
mov
or
mov
enter
add
xchg
js
add
loopne
movsb
add
pop
jo
push
or
pop
mov
adc
out
add
dec
add
add
cmpb
fadds
sub
jmp
sbb
jb
jo
adc
dec
adc
push
test
add
add
ljmp
test
cs
outsb
push
cmpl
insb
cmp
outsl
jmp
es
pushf
mov
sbb
jnp
ljmp
cmpsl
lods
xchg
cltd
js
xor
cwtl
sub
daa
sti
in
or
push
dec
es
push
in
mov
xchg
push
or
cmp
jbe
adc
out
test
movsb
jo
push
push
or
sub
pop
ret
test
mov
adc
add
arpl
fiaddl
adc
test
jns
xor
pop
dec
icebp
imul
outsb
push
inc
xchg
loop
stc
mov
cli
outsl
lods
add
rclb
xor
shll
js
js
or
iret
stc
cmp
add
out
add
mov
jg
pop
sub
pushf
ret
fiadds
adc
adc
adc
adc
pop
dec
sbb
xor
cmpsb
pushf
sub
int3
or
add
lahf
add
adc
jns
dec
inc
adc
clc
cs
lret
or
ror
daa
cmp
add
and
sbb
rcr
leave
dec
xchg
xorl
int3
or
pop
add
adc
imul
sub
mov
xor
aas
adc
push
ds
mov
jno
or
hlt
xorb
mov
jns
inc
jge
add
add
jnp
push
orl
or
pop
jno
inc
jns
in
add
ret
adc
stc
pop
lcall
outsl
inc
pusha
add
add
pop
adc
add
add
push
in
or
dec
add
aam
xchg
out
or
loopne
sahf
shrl
adc
xchg
stc
aaa
repz
push
add
cmp
push
cmp
lods
add
test
add
dec
pop
sbb
orb
icebp
jp
or
mov
shlb
data16
dec
jne
loope
ret
ss
repnz
sti
add
pop
jns
wbinvd
xor
pop
jb
sbb
add
jecxz
xchg
out
or
and
add
jl
mov
cld
cli
push
in
cmc
adc
jo
popa
mov
aam
in
inc
dec
pop
loope
insl
rorb
lahf
sti
inc
pop
inc
cld
cli
push
clc
push
pop
and
or
leave
fsub
mov
sarb
add
adc
add
ss
and
je
or
lods
adcl
es
clc
adc
add
mov
xlat
push
test
cmp
xor
pop
ss
stc
andl
stos
adc
repz
add
ret
loopne
push
daa
mov
scas
cld
dec
add
ljmp
cmp
push
ret
aam
push
xor
pop
mov
push
pop
out
sub
call
push
loop
lock
cli
pusha
push
leave
sti
in
fsts
mov
gs
subb
cmp
adc
lods
add
and
mov
add
lret
flds
and
jo
sub
test
or
cmp
scas
jo
push
inc
addb
pusha
add
sub
cmpsl
pop
loope
das
push
and
xor
adc
test
dec
or
sarb
add
pop
lret
inc
add
loopne
cmp
sub
cwtl
fcoms
push
jne
xor
xor
xor
or
sti
orl
cld
in
insb
test
jmp
fistps
sti
std
sub
int3
sbb
jmp
mov
repz
arpl
cwtl
push
mull
add
mov
sub
sub
push
or
add
sbb
rcr
and
test
push
cwtl
and
push
add
hlt
lahf
cwtl
sahf
add
adc
and
and
xlat
out
ds
jno
stc
repnz
inc
pop
mov
cmp
sahf
mov
cli
jl
pop
sub
cmpsl
lods
sti
mov
adc
xor
jge
add
clc
pop
pushf
mov
pop
xchg
mov
xchg
add
iret
xor
pusha
jnp
bnd
add
jp
inc
sbb
jns
push
clc
cli
sub
pop
or
andb
or
pop
shrl
add
lock
test
test
push
test
rcrb
fsubrp
lods
out
out
pop
sti
mov
cld
insl
ret
test
aas
sbb
cmp
jo
cmp
inc
mov
mov
pusha
pushf
dec
xor
test
dec
cmpsl
mov
arpl
ds
add
jge
add
ss
sub
adc
imul
test
adc
inc
pop
jns
pop
mov
fists
pop
mov
push
adc
mov
and
dec
popf
jb
jg
rolb
filds
sub
ret
lods
shlb
les
repz
push
dec
sti
cs
and
dec
add
addl
sub
shrl
loop
jo
loope
js
int3
insl
add
mov
push
sar
lahf
je
insb
inc
arpl
testb
xor
add
pop
es
loope
rcrb
ja
or
test
test
or
pop
jo
in
sub
cwtl
jg
cli
repz
in
pop
iret
jns
imul
in
mov
dec
mov
adc
jp
add
push
mov
mov
dec
pop
aad
pop
inc
and
call
cmp
xchg
add
pop
mov
sarb
mov
adc
jp
divb
inc
add
sbb
mov
mov
dec
loope
sbb
mov
push
test
add
dec
popf
jo
add
jb
jge
repnz
xor
xchg
es
sbb
dec
pop
mov
std
inc
out
loopne
stos
mov
add
or
add
test
ja
aaa
fwait
mov
mov
mov
or
pop
dec
and
es
pusha
ret
jmp
cmc
add
xchg
stos
jle
jg
mov
pop
and
mov
lahf
dec
adcb
insb
lea
out
xor
test
mov
lahf
mov
pop
ffree
outsb
xchg
lea
in
cmp
push
popf
xchg
addr16
xor
mov
outsl
xchg
dec
rcll
lret
cli
cmp
rorb
and
popf
or
test
cmp
cmpl
outsb
mov
idivb
add
pusha
adc
pop
adc
sbb
adc
dec
addb
xlat
outsb
mov
add
inc
xchg
add
es
pop
cmp
and
imul
add
popa
add
ss
rcrl
adc
sbb
xor
enter
arpl
xor
push
sub
pop
mov
cmpsb
sub
xor
sahf
add
pop
sub
andb
adc
mov
pushf
add
xchg
pop
xor
mov
xchg
jae
test
push
mov
add
adc
test
repnz
jge
ja
jbe
stos
pop
jl
arpl
movsl
jg
or
and
or
adc
hlt
ret
roll
and
and
push
lahf
mov
xchg
sbb
add
out
xchg
test
outsb
popf
jecxz
push
and
jle
push
pusha
dec
xchg
movsl
adc
push
js
and
adc
xchg
sbb
push
push
xchg
daa
lock
stc
ja
or
insb
aaa
xchg
mov
adc
dec
dec
add
imul
and
mov
mov
push
cmp
and
pushf
add
inc
xchg
xchg
mov
mov
sbb
lahf
pop
dec
stos
shlb
int
cmp
dec
push
add
mov
mov
shll
xchg
dec
movsl
cmp
inc
aam
scas
shl
sbb
adc
add
cmp
sti
add
and
and
ja
and
call
xchg
xor
pop
fs
call
js
push
pop
add
aaa
sbb
and
data16
sarb
adc
push
mov
lock
sbb
pop
and
sarl
pop
or
in
add
or
mov
and
mov
insl
lock
add
fstpl
jne
mov
dec
enter
les
mov
test
and
pop
es
adc
cmp
iret
pop
mov
dec
add
ret
shll
test
push
cmc
cltd
les
or
in
xor
inc
aas
loopne
and
push
and
lds
lret
pavgb
repz
push
hlt
mov
mov
outsl
cmp
out
add
stos
dec
xor
aam
repnz
pop
cmpsl
aas
leave
and
mov
xchg
and
add
mov
jmp
add
imulb
push
mov
outsl
nop
sub
add
ret
mov
rorb
or
adcb
mov
popa
nop
pop
cmp
push
clc
jo
push
fildl
push
sti
js
enter
adc
ret
mov
add
sub
adc
and
mov
add
dec
push
mov
stos
inc
or
jbe
add
stc
fmull
or
ja
sbb
stos
add
popf
mov
loop
loop
add
popa
xor
dec
nop
inc
or
pop
xchg
mov
add
lahf
mov
ljmp
test
or
inc
cmp
shl
jb
sub
pop
orb
cmp
xchg
or
dec
das
div
fs
xor
xor
mov
and
pushf
add
mov
and
inc
and
cwtl
rorb
xchg
sbb
repz
sbb
jge
es
popf
adc
shll
cwtl
xlat
sbb
int
ss
pop
cmpsl
push
jmp
test
imul
cmp
fldl
sahf
xchg
mov
xor
xchg
mov
mov
mov
mov
nop
cli
inc
or
cmpsl
rorb
mov
jo
test
pusha
ficompl
sbb
scas
sbb
xchg
pop
jbe
add
pop
test
inc
pushf
cmp
test
pop
adc
popa
jo
int3
add
movsl
or
cli
sti
push
fldenv
and
xor
and
mov
stos
int3
loop
cmp
inc
add
daa
xchg
add
dec
mov
inc
xchg
mov
lcall
sbb
add
mov
pusha
xor
or
sbbl
xchg
fldl
jno
xor
mov
test
nop
sub
sub
out
xchg
out
nop
cmp
call
add
in
popf
xchg
es
or
sub
add
fisubs
mov
push
add
xor
or
ds
add
mov
or
inc
add
add
pusha
xchg
hlt
pop
xor
in
push
fdivl
sbb
mov
push
mov
mov
sbb
pop
scas
adc
into
and
push
clc
repz
sub
and
ror
cmpsl
push
lock
movsl
mul
add
adc
mov
mov
and
and
and
fdiv
push
test
cmp
push
inc
inc
push
or
cmpsb
out
mov
fcoml
mov
dec
and
lock
or
xchg
cmp
mov
sbb
jno
pusha
rcrb
and
lcall
repnz
ret
xor
and
adc
sub
cli
int
or
push
or
mov
ret
xchg
mov
mov
sbb
and
cmp
aad
in
add
cmpb
push
xchg
xor
add
add
ljmp
jp
pusha
jo
repz
adcb
hlt
lret
cmp
or
xchg
test
cmp
xchg
add
mov
movsb
xchg
pusha
shl
pop
je
es
xchg
add
xorl
add
xchg
lock
pusha
mov
and
fsub
inc
out
fistpll
cmpps
mov
mov
sub
jle
mov
xchg
xor
ss
mov
jp
jnp
add
insb
js
rep
sbb
nop
lods
push
dec
mov
call
cwtl
sbb
xor
xchg
mov
rcrl
inc
xchg
rorb
cld
sbb
cmp
pop
and
pop
mov
lret
stc
sahf
inc
jge
xchg
add
cltd
jb
cwtl
addb
adc
dec
cwtl
lret
cwtl
lea
jg
rclb
ja
aam
xor
lods
inc
test
add
lahf
ss
out
pushf
inc
xchg
daa
mov
lods
add
add
add
add
inc
mov
jbe
in
or
mov
jge
sbb
in
pop
fstps
test
push
out
aam
dec
and
je
lds
xor
and
sahf
icebp
inc
mov
mov
mov
stc
testb
aam
aad
addr16
data16
inc
pop
test
call
stos
pop
push
mov
std
insb
push
or
cmp
test
add
outsb
mov
adcb
dec
sbbl
pushf
add
in
dec
bound
orl
xchg
xorl
dec
ret
ret
or
pop
hlt
xchg
cwtl
or
ret
mov
adc
insl
push
invd
outsl
cmpl
push
xchg
pusha
fcoml
out
lret
cmp
push
popl
cmp
mov
lods
js
mov
sahf
or
add
or
mov
add
lcall
ret
xchg
push
or
and
mov
imul
push
inc
cmp
add
xor
pop
push
ljmp
and
add
rorl
push
mov
inc
verr
push
mov
sbb
sti
mov
pusha
addl
xchg
ljmp
fmulp
xor
add
or
sub
cwtl
jg
cmp
and
pop
or
push
out
dec
in
test
les
pusha
mov
cmp
out
jg
notb
in
mov
mov
push
pop
lret
push
test
lds
cmp
enter
mov
test
mov
add
aaa
je
mov
dec
ljmp
lock
addr16
xchg
xor
out
mov
out
mov
lock
ret
movb
cli
push
ljmp
push
fwait
adc
sbb
jnp
repnz
lea
fsubrs
ljmp
pop
mov
leave
pop
shl
xorl
xchg
adc
rclb
mov
inc
mov
movsb
xor
ret
outsl
int3
mov
js
pusha
or
pop
mov
sbb
ror
pop
addr16
or
inc
pop
jbe
add
sub
lods
add
ret
xchg
sbb
add
push
nop
or
int
aaa
movsb
sbb
out
cmpsl
xchg
out
sbb
ljmp
sub
fisubrl
imul
fsubrl
adc
or
add
clc
fiaddl
pop
push
jmp
xorb
pop
shll
sbb
dec
clc
dec
and
fisttpll
sbbb
cli
pop
mov
pop
pop
inc
add
inc
xor
inc
rcll
mov
adc
imul
adc
push
mov
add
push
mov
mov
inc
sbbb
and
xchg
adc
jnp
sbb
aad
push
imul
add
and
iret
ljmp
shl
imul
add
lcall
xor
or
pop
or
std
and
or
lret
xchg
jns
imul
out
xor
addr16
ret
push
ljmp
adc
and
inc
pop
pop
sarb
aam
push
inc
jo
sbb
jmp
add
xor
xchg
or
iret
push
test
jmp
faddl
orb
adc
inc
repz
aad
adc
sbb
or
or
ds
pop
sub
shlb
push
repz
mov
dec
xor
xorl
jmp
fwait
add
dec
adc
push
mov
adcl
popa
pusha
inc
push
mov
loopne
mov
xor
cmp
jg
hlt
mov
test
adc
or
cld
shll
ljmp
jno
push
nop
mov
ja
xor
mov
ljmp
idivl
jae
out
loope
inc
cmp
adc
mov
mov
loopne
add
addb
cmp
out
xchg
or
dec
inc
or
nop
pushw
push
mov
mov
ljmp
or
sbb
push
insl
clc
add
push
cmpsl
xchg
and
int3
ret
add
push
adcl
ss
xchg
sub
icebp
sbbb
mov
add
mov
push
mov
jp
into
roll
lea
add
xchg
sbb
lret
xchg
rcll
std
scas
mov
xor
in
add
mov
cmp
jnp
inc
in
push
xor
pusha
cwtl
loop
nop
push
bound
push
xchg
dec
inc
pop
mov
out
pop
in
or
push
mov
fcompl
ror
lds
xor
add
dec
mov
inc
push
in
loop
pop
and
mov
out
rcrb
cld
pusha
push
ljmp
insb
sbb
cs
in
aaa
es
pop
movsb
mov
filds
ljmp
mov
bound
ljmp
inc
xor
fiaddl
or
std
xchg
mov
sub
test
and
or
adc
cmp
mov
add
lods
and
add
add
jae
lahf
xchg
jne
repz
adc
ljmp
pop
pop
lock
jb
loop
mov
add
dec
push
push
insb
mulb
xor
insl
xor
or
cwtl
ds
mov
ljmp
mov
mov
sub
push
imul
pop
mov
ret
push
inc
clc
jo
xchg
in
ljmp
ret
push
dec
jbe
inc
or
sub
pop
jnp
js
jo
xor
xchg
inc
xchg
addb
test
or
pop
xor
loope
xchg
pop
scas
jp
pop
pop
movsb
add
int3
add
cmp
pop
cs
and
sub
insb
pop
je
cld
sahf
adc
pusha
fcomps
pop
push
pop
sub
pop
cmc
xor
xchg
inc
cmc
pop
pop
xor
pop
mov
mov
clc
stos
shll
cltd
sub
and
subb
adc
cs
mov
xchg
call
mov
repz
or
lahf
and
fidivrs
mov
push
cld
cs
sti
lgs
sbb
sub
pop
add
or
outsl
cmp
out
pop
xchg
push
ret
add
hlt
pop
pop
imul
inc
add
cmpsl
jno
out
ret
jae
mov
loope
imul
outsl
add
inc
push
inc
mov
fisubs
or
pop
xor
outsb
push
je
ljmp
and
lahf
je
das
loope
pusha
xchg
ret
and
les
repz
mov
push
imul
nop
mov
xchg
pop
xor
test
add
ljmp
lock
add
push
push
mov
mov
cwtl
xor
and
push
dec
sahf
push
subb
test
iret
ljmp
sub
test
dec
in
fisttpl
adc
mov
pop
sbbl
ret
adc
pop
mov
mov
sub
push
push
pop
lcall
lcall
jle
sbb
add
xchg
push
mov
add
mov
jmp
sub
adc
push
inc
addl
dec
jnp
fidivrs
sbb
scas
xor
ss
xor
pop
cwtl
fistps
add
sbb
into
xor
notl
mov
add
and
pop
mov
pop
jecxz
cmp
jne
into
mov
jnp
shl
xor
jmp
mov
pop
mov
and
in
lds
and
sbb
call
jmp
add
jecxz
lds
icebp
jmp
push
add
push
mov
adc
add
xor
lret
mov
mov
jp
int
pop
adc
mov
jmp
add
pop
xor
inc
xor
rclb
or
jo
sub
or
loopne
and
push
dec
dec
jno
add
out
mov
outsl
and
shr
add
into
pop
scas
cmp
jecxz
testl
out
push
pusha
jmp
push
pop
or
ficomps
push
ret
outsb
ljmp
and
cmp
rcll
inc
scas
xor
sbb
inc
out
push
mov
adc
add
sbb
adc
xor
sbb
push
add
loop
push
mov
push
mov
pop
xchg
pop
adc
inc
jae
xor
pop
push
fisttps
mov
jp
xor
or
decb
mov
add
add
xchg
xor
movsb
xor
btc
fiaddl
aad
rclb
xchg
and
inc
popa
sti
dec
pop
subl
jnp
pop
shll
lcall
add
add
sbb
add
and
xchg
push
dec
out
jl
or
push
lea
enter
sbb
add
mov
shr
arpl
rolb
mov
jmp
jae
lods
xor
lods
jno
xor
nop
addl
mov
pop
add
aaa
cmp
pop
mov
xchg
les
inc
add
popf
push
inc
mov
fsubl
pop
push
dec
inc
ret
or
adc
push
push
and
lds
jb
or
push
pop
or
pop
xchg
xor
xchg
popf
add
inc
add
inc
ret
add
mov
cs
enter
das
stc
inc
fsubrs
and
repz
ds
add
inc
fldt
or
jp
ror
cmp
sbb
jae
jmp
push
dec
xor
rclb
sbb
push
mov
aaa
pushf
loop
out
dec
add
adc
jbe
or
iret
adc
xchg
pop
jno
jmp
dec
sbb
sub
cs
ds
lock
push
xchg
gs
lds
add
dec
insl
imull
jg
add
add
push
add
xor
imul
out
add
jmp
out
nop
cmp
xchg
cld
sbb
push
in
roll
aam
rorl
fstp
mov
ljmp
fwait
mov
loopne
popf
mov
sub
add
cmp
or
imul
ret
fisttps
cmp
add
cmp
push
sub
pop
out
les
pushf
fs
and
and
xor
adc
or
jmp
out
out
shlb
mov
xor
ja
and
pop
jo
lods
pusha
popf
push
popa
xor
rclb
lcall
mov
imul
xor
pop
adc
outsl
inc
dec
add
outsl
sub
dec
xor
ljmp
mov
jo
mov
xchg
sub
push
in
or
out
cmpsb
push
mov
dec
pop
jae
mov
adc
pop
push
push
test
cmpsb
sub
pop
int3
shrl
arpl
test
inc
shlb
ficompl
and
inc
test
rclb
mov
lock
cmpsl
insb
aad
sub
mov
pop
push
push
xchg
cmovns
add
cli
xor
in
lods
testb
push
mov
imul
pop
adc
jmp
shll
test
sti
mov
cwtl
rorl
dec
iret
test
pop
jb
xor
or
xchg
aas
scas
psubsw
arpl
push
jmp
mov
pop
aad
ficomps
xor
pop
negl
repz
xor
fistl
shr
or
xchg
inc
stos
fst
or
int
ljmp
add
dec
mov
adc
xchg
or
testl
outsb
add
lret
rolb
jecxz
xchg
jns
add
in
and
push
or
sub
xor
push
lret
jbe
repnz
add
scas
repnz
push
pop
pop
shl
pop
dec
add
cmp
popa
int
add
jne
hlt
xor
clc
jmp
mov
pop
and
adc
js
cmp
out
dec
mov
nop
sbb
push
shl
mov
pop
add
rclb
push
push
popa
mov
or
jge
xor
test
mull
sub
mov
shlb
xchg
or
int
adc
into
sbb
sbb
lahf
xchg
fcmovne
and
add
xor
pop
push
mov
xor
or
ret
jmp
push
pusha
xor
fcoms
not
pop
gs
adc
cmpb
inc
out
push
xor
inc
push
sub
and
jmp
sub
dec
push
call
cmp
cli
or
pusha
push
mov
or
jmp
or
mov
in
rorb
fisubrl
mull
movsl
xlat
pop
xchg
xchg
mov
cld
and
loop
data16
xchg
adc
dec
fs
bound
cwtl
add
jne
jmp
shll
loope
cmpsb
fdivp
push
adc
sub
mov
sub
pop
adc
je
inc
or
and
loope
jns
sbb
icebp
inc
add
gs
mov
andb
and
sub
roll
push
and
xchg
cs
ss
arpl
pop
fwait
mov
cmc
sbb
jno
dec
pusha
nop
sub
or
push
cwtl
fwait
out
push
mov
or
out
lock
xlat
imul
loopne
testl
push
jno
push
sti
mov
fdivl
inc
push
dec
stc
push
jmp
pop
jb
pcmpeqb
mov
or
push
xchg
inc
sub
mov
xchg
adcb
fildl
push
neg
jmp
insl
cmc
in
dec
pop
lcall
rcrb
roll
cvtps2pd
pop
imul
ret
sarb
adc
dec
fs
fstps
xchg
push
mov
pop
push
push
repnz
loopne
mov
adc
sahf
out
sub
or
jmp
xor
pop
arpl
aam
pop
jecxz
or
mov
pop
sub
loop
xor
pop
rclb
push
mov
dec
pusha
adc
jg
loop
jmp
cmc
add
push
fisubs
loopne
mov
adc
lret
push
repz
mov
and
adc
lea
add
popl
or
fs
sbb
mov
popa
lods
outsl
push
pop
push
stos
push
xchg
jmp
push
adc
aas
sar
push
jbe
in
adc
call
outsb
xor
ljmp
mov
xchg
add
pop
sbb
inc
pop
sub
fsubl
pop
sub
sbb
sti
pop
es
push
sub
pop
push
jp
sub
push
jmp
adc
and
shrb
jnp
cwtl
stos
movlps
ljmp
pop
jns
or
push
pop
in
into
jbe
mov
imul
add
imul
jo
cmp
and
shlb
hlt
fcompl
mov
leave
test
loope
in
jmp
testl
pop
add
in
inc
and
xchg
call
lcall
add
dec
sbbb
fxch
inc
pop
test
mov
cmp
movsb
movsl
sub
adc
adc
push
pop
pop
sub
adcb
add
xchg
cmp
mov
jae
push
fsts
and
mov
ret
xor
mov
pop
stos
test
push
sub
nop
out
mov
jmp
pop
cmpsl
inc
dec
sub
ret
or
roll
jae
add
outsb
pop
push
pop
not
or
jnp
fcompl
push
jbe
sub
sbb
dec
cmc
inc
cmp
jb
or
pop
outsl
add
jno
xlat
insl
pop
xor
dec
or
pop
and
ror
add
and
sbb
xor
pop
pop
lea
cwtl
out
dec
pusha
in
pop
lods
pushf
add
pop
xchg
in
clc
loopne
ds
gs
fsts
lret
mov
lock
add
add
in
or
nop
divb
popa
pusha
adc
sub
pop
add
xchg
mov
addr16
lret
mov
clc
dec
dec
es
aaa
or
or
cmp
testl
adc
xorl
or
andb
add
and
dec
push
out
inc
sub
pop
sbb
cmp
inc
jmp
adc
add
inc
xor
pop
fsubr
and
call
or
jmp
sbb
push
mov
sub
andl
addr16
sub
shr
push
lret
out
adc
iret
pop
mov
and
jmp
test
adc
cmovo
jns
inc
sub
push
push
add
sub
dec
shlb
dec
push
imul
add
adc
ret
and
fs
pop
push
nop
in
jnp
xchg
out
jecxz
jg
pusha
out
lods
or
cmpl
inc
pusha
and
insl
hlt
es
popa
jecxz
or
bound
add
add
push
pushf
cmc
sub
jl
add
and
int
sbb
pop
xchg
add
out
mov
ja
popf
or
sbb
mov
and
or
sub
out
pushf
out
xor
adc
fidivl
sbb
jp
test
sahf
mov
ljmp
aad
xor
and
pop
add
pop
shl
cmp
shlb
pop
add
jp
sbb
imul
mov
imulb
jp
jge
xor
cmp
pop
add
inc
or
int
fiadds
push
add
mov
dec
add
inc
adc
sub
lea
push
bound
fsubrl
loopne
push
push
mov
sub
into
pop
fcoms
shl
out
sbb
neg
adc
addl
push
enter
adc
and
inc
sub
xor
aad
mov
mov
pop
add
ljmp
push
push
jmp
stc
pop
push
out
push
or
add
push
mov
mov
inc
ds
or
adc
jnp
xchg
pop
subl
or
dec
mov
inc
add
push
dec
pop
lea
dec
and
xlat
jmp
in
sub
mov
lcall
xlat
sub
or
xlat
rorb
mov
mov
adc
add
aaa
push
push
mov
mov
add
mov
into
sysexit
cmp
xchg
sbb
add
adc
xor
jmp
jmp
insl
jp
cmc
repz
xchg
jae
adc
xchg
es
mov
test
outsl
jmp
addl
or
js
lahf
and
int
insb
push
cmc
cmpb
sbb
and
mov
or
lock
and
in
xor
dec
call
in
aaa
mov
je
dec
add
inc
or
rcrl
enter
push
insb
add
inc
pop
imul
je
mov
ds
shrl
imul
add
cmp
dec
lret
sbb
es
pusha
push
sub
fiadds
push
outsl
repnz
push
int3
imul
nop
jmp
je
push
sub
leave
xor
cmpsb
jnp
jmp
clc
mov
not
pushw
push
cmp
fdivl
pop
int3
ficomps
dec
es
or
push
mov
loop
sahf
data16
and
das
or
jp
pop
arpl
mov
jg
ljmp
pop
data16
das
jno
push
dec
adc
pop
xor
movb
or
push
rorl
mov
sub
sub
xchg
pushf
sbb
jnp
sub
xor
add
or
out
push
scas
add
jp
cmpl
into
test
push
or
int
xor
stc
push
dec
mov
and
ja
sub
push
pop
aas
roll
xor
add
repnz
mov
xlat
xchg
or
cmpsb
fs
pop
cs
sub
push
hlt
sbb
cwtl
fidivrl
imul
lds
and
cmpsb
imul
enter
add
loopne
push
sub
hlt
or
xchg
mov
sbb
sub
cmpsb
sub
lret
test
pop
popa
xchg
pop
and
or
arpl
pop
sbb
cmp
push
push
pop
fimuls
lods
xchg
mov
xor
sti
mov
push
in
mov
add
jp
jmp
sbb
adc
jmp
insb
jmp
sub
sub
xchg
sub
clc
sbb
addb
pop
inc
push
dec
fildll
adc
sbbl
and
jne
push
andl
adc
or
push
mov
push
mov
in
jp
cwtl
or
stos
adc
rol
xchg
mov
push
out
mov
cwtl
popa
das
ja
bound
bound
pop
mov
push
cmp
jb
mov
mov
stos
push
pop
les
cmp
rolb
sub
adc
pop
insb
test
pop
out
add
xor
pop
das
add
add
push
std
arpl
andl
push
imul
lods
clc
xlat
xor
fsub
jmp
ret
and
or
mov
iret
mov
push
cmpsb
jb
lret
jmp
roll
push
xchg
add
push
push
in
and
pop
test
loope
and
jo
pop
dec
inc
or
jnp
outsb
cmp
adcb
push
push
sub
mov
mov
add
cmp
sub
test
xlat
pop
vmwrite
push
add
mov
push
loope
pop
dec
lcall
enter
pop
push
mov
xchg
pop
pushf
or
popa
test
xor
sbb
pop
push
lods
arpl
or
and
rclb
das
nop
sbb
or
pop
inc
or
xchg
xor
sub
mov
and
shr
pop
in
xchg
add
fucom
cmc
adc
out
nop
loope
enter
in
push
push
xor
bound
sub
add
loope
lea
subl
andb
add
and
or
push
xchg
add
mov
incl
outsb
or
test
or
mov
jbe
push
xchg
sahf
push
pop
fbstp
int3
jge
outsb
ljmp
xchg
imul
subb
push
pusha
cli
push
mov
or
gs
add
sbb
xor
sub
or
pop
mov
adc
loopne
adc
sub
ds
dec
cltd
and
adc
movsb
xor
and
ljmp
push
mov
or
jmp
push
ret
dec
jge
aam
inc
mov
js
jbe
sub
loopne
pop
mov
mov
fnstsw
mov
pop
cli
jmp
test
scas
ja
enter
mov
jno
inc
hlt
xchg
inc
mov
pop
pop
cmp
dec
xor
add
icebp
test
mov
rcll
in
pop
jmp
call
popf
sbbb
mov
orb
bound
push
mov
add
jne
sbb
dec
fisttps
add
std
add
sub
ret
hlt
andb
cmp
cmc
xchg
jns
xor
jmp
add
aam
xor
pop
jmp
ret
or
fnsave
xchg
mov
cmp
rorb
loopne
adcl
addb
cld
stos
pusha
jp
dec
pop
pop
mov
sbbb
sbb
add
inc
xchg
sub
bswap
movsb
leave
js
sub
sbb
sub
xlat
aas
inc
pop
xchg
mov
test
std
adc
add
daa
not
and
jns
mov
call
test
mov
loopne
ret
and
inc
daa
jb
adc
call
rcl
neg
jmp
lds
mov
xchg
ret
out
imul
dec
cmp
mov
jle
push
leave
jmp
loope
or
adc
add
pop
pop
cwtl
xchg
jmp
pop
movzbl
adc
add
sbb
sbb
xchg
flds
mov
inc
push
mov
loopne
pusha
in
test
jmp
jge
mov
lret
jae
stos
mov
mov
pop
inc
jecxz
push
or
adc
aam
add
ret
inc
xchg
sbb
outsb
test
push
sbb
adc
das
pop
in
inc
inc
shrl
ficoml
bound
hlt
push
orb
xchg
mov
pusha
pop
jp
inc
hlt
rorb
in
and
pusha
and
pop
repnz
cld
jmp
sbb
inc
scas
fcmovnbe
dec
inc
cwtl
dec
cltd
ja
aas
in
jp
lods
cmp
jge
lock
adc
sub
ja
sbb
out
daa
pop
jnp
or
or
sbbl
dec
xor
or
fadds
cmp
inc
jmp
adc
sub
pushf
int3
lahf
xor
jbe
out
or
and
das
lahf
js
push
xchg
neg
dec
shl
add
add
push
loopne
nop
push
add
push
mov
shll
push
pop
push
jmp
push
outsl
add
dec
imul
jbe
bound
lret
mov
jmp
sbb
pop
pop
add
sub
pop
dec
push
add
not
or
into
arpl
inc
adc
or
or
add
xor
inc
mov
mov
jle
push
jbe
sub
icebp
or
insb
and
cld
adc
jle
add
icebp
std
inc
in
add
test
dec
jecxz
mov
dec
movsl
xchg
push
and
pop
adc
and
pop
clc
xchg
pusha
shr
adc
ret
cmp
js
loopne
mov
push
pop
ret
adc
icebp
fisubrl
sub
ret
jle
add
inc
sbb
sbb
loope
push
in
pop
jae
popa
dec
pop
jo
push
mov
shll
inc
jmp
in
test
xchg
dec
imul
push
push
or
jmp
push
mov
shl
lock
add
jo
push
pop
mov
add
xor
daa
shl
pusha
mov
std
leave
nop
sahf
pop
fldt
mov
xchg
push
mov
xchg
adc
es
fxch
int
dec
jbe
push
jl
push
sbb
packssdw
rcrb
dec
jmp
pop
es
xor
push
pop
push
popa
insb
cmp
dec
sub
faddl
mov
sub
in
lods
shrl
loope
shl
jo
mov
shll
jns
push
sahf
ret
andb
pop
xchg
clc
push
pop
mov
pop
sub
add
pop
test
mov
mov
loopne
xchg
lea
push
and
add
shrl
pop
shr
lret
cmp
push
and
ss
outsb
xor
stos
imul
cltd
push
cmp
cmp
in
sub
dec
cwtl
addr16
sbb
in
das
rcll
cli
inc
int3
jg
add
or
in
in
xchg
pop
scas
jns
cmpb
dec
in
xchg
mov
imul
add
sub
divl
adc
test
xchg
xchg
or
shl
mov
shlb
pop
movl
call
sbb
ja
push
enter
adc
push
dec
mov
jb
adc
aad
sub
inc
sub
mov
mov
scas
xchg
pusha
out
test
popf
ss
sub
fldl2t
mov
mov
test
btr
mov
and
add
mov
inc
add
pop
dec
adc
push
scas
add
mov
or
jno,pn
lds
or
or
xchg
sub
add
add
jl
and
cs
or
push
shlb
add
xor
push
pusha
mov
xchg
xchg
ja
test
and
pushf
and
or
jmp
jbe
add
adc
fildl
addr16
add
push
mov
lea
loope
inc
shr
pop
insl
fbstp
hlt
lcall
dec
and
inc
insb
add
jno
imul
pop
adc
xor
loop
inc
loope
inc
mov
ret
shl
mov
int3
jmp
fisttpll
and
jmp
sub
loopne
inc
cmp
dec
push
mov
inc
pop
mov
popa
push
xchg
jle
pop
or
cmpsl
jmp
addr16
and
leave
rclb
popa
push
push
push
mov
int
xchg
mov
imul
push
jl
jg
fisttps
xchg
inc
mov
pushf
add
mulb
not
push
mov
or
insb
or
jmp
inc
sbbl
outsl
add
pusha
jns
test
loope
mov
fiadds
xor
dec
mov
sub
jmp
push
pop
and
and
inc
shrb
mov
clc
sbb
mov
out
push
or
nop
pusha
lods
fwait
pop
sub
add
cli
loope
sbb
rcrb
or
outsl
std
mov
sub
inc
dec
cmc
or
movsb
and
add
sbb
jno
ljmp
mov
or
mov
add
neg
shrl
push
pop
sbb
scas
sbb
adc
jno
adc
mov
mov
or
push
adc
mov
and
arpl
add
out
xor
sub
lds
jo
add
mov
orl
call
jo
pop
push
jl
in
jg
mov
xor
mov
lret
jbe
and
xlat
mov
pusha
mov
movb
dec
roll
xchg
and
push
inc
lock
data16
js
daa
lods
mov
push
inc
push
add
mov
hlt
imul
cmp
daa
dec
xor
xchg
imul
cmp
fdivl
cmpsl
loopne
push
in
mov
popa
dec
add
pop
push
jmp
sub
dec
xlat
test
daa
test
jp
outsl
dec
sahf
je
fiadds
jbe
rorl
in
and
scas
shrb
jge
push
cmp
push
xchg
mov
add
add
xchg
sar
add
jmp
ja
adc
xor
jge
or
xor
xchg
pop
push
push
cmp
out
not
inc
add
mov
pop
mov
sbb
outsb
sbb
call
sbb
mov
lods
lret
sub
imul
xchg
add
sarb
pop
cmpb
push
inc
inc
loop
in
xchg
lahf
shll
xor
push
and
imul
dec
push
cmpsb
add
pop
push
sub
jmp
mov
inc
add
jle
add
add
jmp
ret
or
dec
popa
aaa
lret
add
testb
rorb
adc
push
out
xor
sub
xor
mov
adc
or
pop
inc
mov
mov
jnp
pop
sub
pop
lcall
push
sbb
loope
sarl
hlt
jbe
outsb
sbb
add
pusha
inc
aas
push
imul
dec
add
scas
mov
stos
add
inc
add
les
or
mov
adc
and
jl
pop
pop
out
inc
adc
and
pop
adc
dec
fmull
pushf
sahf
or
pop
pop
jmp
jbe
dec
pushw
mov
lret
aas
data16
dec
sub
outsb
or
jmp
mov
aas
inc
sbbl
cmpsl
cmpb
pop
repnz
lret
mov
es
add
neg
jmp
ja
or
dec
lds
daa
enter
mov
or
and
cltd
dec
pop
insl
mov
pop
iret
aam
fdiv
cmp
ljmp
push
xor
cmp
lods
push
xchg
xchg
inc
add
xor
mov
dec
nop
loop
out
insb
jo
add
mov
pop
mov
mov
add
sbb
pusha
xchg
inc
insb
packssdw
into
or
or
lahf
fs
mov
pop
pop
into
cmpsb
lahf
sbb
sbb
nop
sub
out
add
mov
mov
xchg
outsl
mov
pop
jmp
mov
ret
sub
mov
push
push
jmp
call
mov
jbe
xorb
or
inc
xchg
dec
mov
ss
adc
shlb
addl
dec
jo
sbb
sub
lods
test
inc
mov
shlb
bound
loopne
dec
add
add
sbb
push
out
insb
nop
dec
xchg
jb
bsr
ret
mov
cmp
nop
out
or
mov
inc
or
push
pop
in
lock
adc
fldl
ljmp
xchg
je
shrl
add
lea
add
sbb
dec
dec
cli
cmc
add
sub
pop
sub
xchg
cmp
inc
fst
imul
dec
push
cli
fcoms
pop
adcl
xorb
push
push
or
insb
hlt
and
and
repnz
orb
je
add
push
jo
or
adcb
fcompl
es
push
jo
cmp
scas
cmp
rcrl
pop
cwtl
out
add
test
xchg
jmp
das
imul
mov
pop
lds
imul
or
out
push
mov
sub
bound
lods
sahf
push
push
inc
adc
cmc
push
int3
xor
xchg
test
add
xchg
jae
aaa
lock
movlps
inc
shl
outsb
scas
jns
mov
cmp
push
or
inc
xchg
je
int3
or
inc
ss
mov
ret
push
push
sub
xchg
adc
hlt
movsl
gs
out
xchg
push
or
out
sub
fisttpl
rorb
addb
inc
rolb
jne
mov
and
dec
hlt
xchg
and
or
xor
xchg
ficoms
push
sub
jo
and
sub
mov
scas
bound
cmp
sbbb
sti
jl
dec
sub
repnz
rcrl
arpl
loopne
ss
sub
pop
add
sbb
int
sub
jne
or
and
or
add
push
dec
mov
pop
or
ja
and
aas
xor
xchg
jb
push
lock
adc
dec
push
rcr
lret
in
and
mov
add
pop
outsl
dec
and
jns
outsb
mov
sub
xorb
mov
jmp
insl
imul
sbb
outsl
jne
jmp
jns
add
sbb
push
imul
shl
jle
dec
fldcw
add
xchg
sub
add
mov
adc
mov
movsb
ds
and
iret
arpl
nop
or
out
add
add
sub
sub
sahf
pop
adc
pop
not
dec
jle
cmp
add
jmp
pushf
filds
aam
ljmp
add
jp
sarb
pop
sbb
orl
add
addl
insb
and
js
xor
insl
out
ljmp
dec
stos
xchg
cli
push
imul
and
cmc
mov
pop
sbb
jns
stc
push
pop
xor
xchg
jns
pop
psubw
mov
scas
sbb
sub
xchg
xchg
adc
dec
sub
stc
dec
shrl
ds
add
int3
jmp
jmp
imul
stc
sub
or
and
shll
and
add
mov
ja
jmp
xor
fst
aas
pop
fimull
stos
add
fcomps
les
ret
lret
dec
adc
cmp
adc
sub
xor
or
repnz
dec
and
jb
or
das
push
jmp
mov
aam
add
sub
out
add
aaa
mov
inc
xchg
push
stc
lods
stc
cmpsl
pop
adc
xor
mov
or
inc
cli
lock
pusha
aas
jno
mov
scas
repnz
jnp
jp
mov
shlb
in
adc
es
or
add
pop
adc
rolb
lcall
repnz
in
push
jl
and
push
jle
pop
add
cmp
incl
mov
or
add
cwtl
pop
pop
dec
sub
testl
and
jmp
pushf
mov
cmp
fwait
xlat
cmpsb
mov
mov
add
popa
pop
les
push
mov
das
stos
dec
push
leave
add
loopne
pop
mov
test
adc
jb
dec
or
cmp
add
push
add
adc
shrb
or
test
xchg
mov
inc
sub
popa
lret
pop
cmp
xor
jle
shrl
cltd
mov
lret
xchg
testb
hlt
test
mov
jmp
adc
outsl
movsb
call
mov
loop
les
push
popa
jp
out
or
cli
xchg
add
movsb
dec
loope
ja
push
mov
not
dec
hlt
xchg
inc
sahf
repnz
push
xor
sub
into
adc
imul
xchg
pop
pop
aam
xchg
push
imul
push
adc
aaa
dec
jo
or
adc
in
sbb
xchg
cmp
loop
dec
dec
pusha
jp
pop
push
or
and
testl
push
arpl
add
inc
inc
orb
push
sub
aad
add
mov
xor
pop
pop
push
xor
ds
outsb
push
test
mov
xor
popa
jb
cmp
mov
add
push
mov
neg
push
sbb
mov
sub
add
mov
cmp
dec
inc
push
and
and
xor
or
add
dec
stos
add
pop
hlt
mov
mov
mov
aaa
add
pop
jecxz
inc
mov
pop
mov
subb
ret
movsb
jmp
mov
pop
enter
mov
jg
in
cmpsl
add
je
cmpsb
negl
out
daa
jno
dec
lds
dec
lret
push
movsl
imul
push
xor
and
out
mov
xchg
push
jg
mov
dec
ret
push
sbb
movsl
or
pop
rorl
in
inc
cltd
dec
leave
bound
popf
sub
add
jnp
cmp
fucompp
aaa
push
xchg
mov
and
jae
aam
push
or
mov
jo
jmp
add
lahf
rclb
add
stc
jo
add
pop
and
sbb
jne
cmp
fsubrs
pop
lea
push
jmp
sub
push
fwait
test
ss
mov
add
pop
rorl
cmc
xor
loope
mov
add
push
push
rclb
jns
sub
cwtl
pop
add
pusha
cmpsb
ljmp
jae
or
dec
mov
test
shll
push
xchg
cmpsl
mov
sub
hlt
pop
iret
push
in
inc
mov
call
dec
leave
xor
ss
push
neg
add
and
mov
pop
mov
roll
xchg
sbb
mov
hlt
lods
daa
pop
lcall
loopne
cld
shrl
mov
mov
out
mov
pop
es
ret
daa
pusha
mov
push
jle
popf
mov
push
push
jns
aaa
sahf
inc
push
loop
adc
and
xor
and
icebp
lods
adc
pop
add
adc
or
lea
roll
xor
push
notb
dec
and
mov
fimull
and
popf
add
push
inc
inc
fs
jle
pop
loopne
addb
popf
push
nop
inc
and
xchg
sbb
or
shl
daa
push
and
xor
shr
or
adc
xchg
sarb
push
adc
adc
add
push
xchg
mov
outsl
sub
or
add
and
and
push
aad
inc
and
outsl
cld
out
or
lods
mov
mov
jmp
add
jge
aaa
sub
pusha
negb
mov
jbe
outsb
sub
cmp
les
jno
or
sbb
push
dec
pop
ficoml
ljmp
jmp
repz
cmpl
push
mov
mov
sub
fldl2t
es
icebp
popa
cmp
jns
or
mov
xor
xor
cmp
fnstsw
xor
pusha
add
mov
sbbb
aad
popf
mov
lret
pop
dec
push
xchg
xchg
hlt
adc
lahf
pop
int3
lods
inc
add
push
push
testl
xor
sub
cmp
xor
clc
inc
fidivrs
inc
push
mov
inc
or
pop
push
jmp
divl
pushw
or
add
das
mov
js
dec
cmp
std
sub
or
sbb
cmp
sbbl
pop
sub
jg
addr16
sub
xor
test
test
push
mov
movsb
and
lea
in
dec
clc
pop
push
out
or
push
rolb
xor
stc
sbb
sub
imul
add
pop
orb
popf
inc
into
push
ds
ljmp
leave
hlt
add
repnz
or
pop
or
cmp
jg
pop
or
adc
inc
xchg
or
push
and
popf
or
sbb
sub
add
jno
fucomip
jo
xchg
xchg
movb
mov
adc
push
mov
add
inc
jbe
idivb
test
or
push
bnd
pop
pusha
and
in
pop
xor
push
pop
loopne
sub
sub
cmp
mov
adc
jmp
xchg
les
push
roll
inc
sub
in
add
push
adc
add
cwtl
and
sub
cs
xchg
or
xchg
int3
adc
movsl
add
push
popa
rclb
test
add
xor
mov
sahf
rol
mov
jmp
adc
pop
in
stc
movsl
test
xor
sbb
std
jns
mov
dec
add
paddsb
add
pop
ss
or
outsl
inc
fsts
jmp
pusha
outsb
jb
inc
aas
cld
pop
dec
pusha
lods
mov
pop
hlt
neg
mov
orl
add
pop
les
int
pop
mov
je
xchg
dec
sub
dec
movsb
ja
sub
sbb
lods
dec
lcall
mov
pop
or
mov
push
imul
xor
xor
mov
pop
mov
clc
push
movzwl
lret
pop
idiv
nop
mov
xor
inc
push
lahf
xor
adc
lcall
and
popf
std
inc
out
jmp
ret
jg
push
aaa
ficoms
jmp
adc
les
test
jnp
ja
dec
dec
subb
sub
add
mov
adc
pop
xor
jge
cmc
add
push
push
test
sub
jb
repnz
add
mov
incb
and
jmp
pop
mov
shr
shrb
pop
and
add
push
in
pop
sbb
jns
pop
psadbw
adc
mov
sub
fadd
outsl
pop
add
sbb
pop
mov
popa
pop
daa
cmp
jae
add
lds
dec
pop
sub
shrl
xchg
outsb
addl
push
adc
cs
pop
pop
loopne
push
sub
adc
lods
insb
or
std
cmp
lret
add
add
push
mov
jmp
push
sarb
daa
mov
jmp
aaa
jmp
testb
shl
or
xchg
pop
mov
add
rcl
cmpb
out
pop
add
lock
shr
xor
mov
iret
dec
and
jle
in
inc
mov
add
adc
insl
xchg
int3
cmpb
push
pop
pop
pop
iret
inc
pop
jmp
leave
jb
add
fidivrl
sub
jp
aam
or
ds
push
xchg
mov
es
test
fcompl
loop
stos
nop
mov
xor
test
sub
sub
js
lcall
or
xorl
ds
inc
jne
inc
aas
repnz
and
shl
inc
neg
sub
out
add
jmp
mov
pop
xor
xor
push
daa
push
pusha
insb
jmp
shll
jl
test
pusha
ljmp
lcall
add
mov
jmp
xor
pop
xchg
push
lds
adc
out
sub
popa
jae
psllw
jecxz
cmpb
movsl
mov
out
add
iret
cmp
xchg
call
jns
dec
mov
mov
adcl
sbb
sti
push
xor
in
add
hlt
cmp
xor
push
in
icebp
or
das
push
pop
js
in
inc
jno
call
mov
cwtl
fiadds
inc
pop
sub
xchg
push
adc
lcall
movsb
fldl
cmp
jnp
cmp
add
or
pop
cmp
sbb
and
sub
mov
es
xchg
js
mov
lret
shlb
ficomps
cmpsb
cli
ds
cli
outsl
fadd
stos
pushf
sahf
mov
mov
cmc
js
gs
outsl
xor
popa
dec
jmp
push
adc
or
mov
cmp
push
shr
push
sti
jmp
or
jo
movups
cmp
scas
repnz
mov
or
cmp
inc
ret
add
mov
and
cli
ljmp
xor
sub
fwait
xchg
adc
sbb
add
clc
pop
ds
icebp
les
popa
aad
adc
popf
mov
pop
pushf
repz
imul
pop
push
mov
aam
jecxz
hlt
dec
dec
adc
icebp
pop
push
sub
cmp
mov
add
or
dec
add
lds
xchg
sub
push
in
cmpsl
push
test
and
xchg
sarl
test
dec
incb
or
jmp
decl
push
pop
jmp
xchg
fadds
xor
push
mov
in
mov
int3
test
and
mov
adc
cltd
sub
repz
pop
inc
push
cmp
inc
sbb
pop
mov
pop
push
daa
inc
ret
or
push
sub
add
call
lods
lock
cmp
xor
jno
xchg
pusha
pop
dec
mov
adc
sbb
xchg
clc
or
jo
js
lds
push
inc
repnz
jnp
leave
js
out
sub
jp
mov
push
sub
repnz
ss
push
inc
adc
popa
jns
pop
loope
push
jns
xor
fs
jecxz
jnp
push
sbb
mov
sbb
addl
and
lret
shrb
int
insb
cmp
dec
jmp
pop
loope
pop
push
xor
jmp
fs
ret
cmp
outsl
imul
inc
movsb
or
je
add
or
add
int3
cmp
mov
or
mov
and
mov
jmp
popa
sub
fstpl
mov
add
sbbb
sbb
add
pop
xchg
sbb
rcrl
lods
es
add
pop
lahf
outsb
ficoml
jmp
ja
jp
add
fimull
and
lods
or
sbb
cmp
cmp
dec
inc
or
pop
nop
or
cli
push
adc
cmp
cmp
xorb
fstpl
add
xchg
sti
sub
pusha
sub
shlb
cmc
pop
sbb
out
stc
jecxz
cmp
mov
orb
in
in
hlt
stos
in
or
aad
dec
cmp
outsb
dec
sti
leave
les
mov
mov
jp
mov
jg
sbb
cwtl
adc
jmp
call
lods
stos
ficompl
repnz
fisttps
aam
je
jl
in
in
push
pushl
or
and
cmp
xor
addr16
subb
mov
sub
xchg
pop
rcr
push
aam
stos
cmp
cmpsl
aad
aam
loope
imul
add
loope
cli
push
push
shlb
decb
popa
xor
xchg
jg
xor
and
adc
dec
mov
imul
sbb
jle
jae
cmpb
shl
addr16
cmp
pop
xor
lahf
into
add
lods
cli
sbb
dec
in
or
lea
stc
pop
add
orb
pop
pop
xor
adc
jg
cmc
popa
scas
sub
repz
test
pop
xor
and
xorl
cmp
in
lret
xchg
fs
mov
lret
and
inc
dec
sub
pop
lcall
and
xchg
push
mov
insb
les
clc
jb
lahf
and
mov
popa
xor
jns
pop
cmp
mov
or
into
and
and
loop
scas
testb
mov
pop
pusha
mov
es
inc
mov
adc
lahf
nop
xchg
or
or
sub
or
outsb
out
pop
dec
je
cmpsl
ret
pushf
adc
rcrb
pop
mov
sub
sub
push
rcrb
repz
jmp
loop
push
shlb
jne
or
adc
or
or
xor
mov
adc
jb
jbe
sub
push
dec
push
and
loope
xor
or
es
mov
jmp
xor
lcall
xlat
clc
fdivrs
pop
cs
lret
popa
push
or
mov
clc
and
jmp
xchg
test
fcom
mov
pop
pop
mov
or
mov
pop
cmpb
and
frstor
inc
xor
add
aaa
jmp
dec
lock
xor
pop
pop
xchg
mov
or
lods
sub
test
xlat
mov
inc
lret
dec
negb
jle
idivl
outsb
nop
popa
lret
xor
mov
lock
inc
das
inc
cmp
pop
sub
pop
mov
or
add
add
fldenv
jg
sub
mov
inc
or
not
shl
inc
fimuls
xorb
leave
dec
sbb
or
imul
inc
add
jb
lods
sub
orb
es
daa
call
inc
xor
pop
pop
popf
rcrb
adc
and
lret
shlb
inc
fwait
sti
cmp
dec
xor
cmp
neg
shl
das
add
xchg
mov
inc
push
jmp
mov
pop
sub
rcrl
test
pop
mov
and
daa
add
or
add
leave
or
ljmp
pop
adc
pop
xor
roll
jle
sub
outsl
xchg
in
lock
dec
int3
popf
dec
test
test
cmp
dec
shl
jno
jl
add
push
adc
insb
popa
pop
and
mov
push
pop
iret
xor
pop
and
call
push
pop
xor
cmp
lods
test
mov
ret
push
add
movsl
adc
mov
push
mov
pop
jnp
adc
mov
mov
jno
imul
add
jnp
sbbl
imul
mov
leave
push
shll
jb
aam
lds
sub
cmp
xlat
sbb
test
add
or
pop
mul
and
jmp
add
xor
sub
add
clc
inc
add
es
push
and
cmc
out
and
jmp
add
punpckhdq
std
pop
and
sbb
inc
mov
pop
sahf
cmp
and
xchg
cs
xchg
sbb
out
fwait
dec
das
clc
xchg
mov
and
cmp
lods
sub
cmpsb
push
cmpsl
iret
ret
outsb
jp
daa
cmp
xor
es
pop
cwtl
pop
xchg
jns
loopne
push
push
dec
mov
dec
adc
sti
lods
pop
jmp
sub
sub
lret
ret
xchg
mov
cli
add
dec
jmp
subb
jns
cmp
inc
inc
push
add
and
push
mov
testb
orb
ret
jle
pop
sub
loopne
icebp
rcrl
enter
cmc
push
push
mov
jmp
repz
popa
rorb
movb
lods
sub
cmpsb
mov
mov
test
jmp
fincstp
das
sub
hlt
add
sub
push
mov
push
mov
dec
jle
lods
dec
mov
movsl
fcoms
gs
test
dec
in
push
xchg
xchg
or
js
fcomps
mov
lea
rcrb
iret
insb
into
sbb
sbb
ljmp
jne
das
jmp
xchg
xchg
xlat
push
push
pop
jne
inc
iret
pop
xor
dec
xchg
pop
outsb
insl
lcall
sbb
fldenv
scas
mov
add
push
ljmp
sbb
test
sbb
mov
push
inc
sub
inc
xchg
arpl
mov
divb
dec
sbb
in
xchg
into
cmc
inc
ret
lds
out
roll
add
mov
cs
dec
pusha
repz
call
add
or
mov
add
cmp
jecxz
add
fwait
out
and
xor
xor
dec
push
and
movsl
clc
rclb
ret
pop
inc
loop
sub
sar
adc
mov
pop
push
cmc
sub
jbe
add
xlat
push
es
pavgb
ss
sbb
out
or
test
sbb
push
sbb
adc
popa
inc
and
or
loop
mov
jo
jmp
test
addr16
mov
pop
loop
popa
rcl
jmp
inc
adc
mov
btc
repnz
dec
in
sbb
pop
or
pop
es
sbb
or
adc
rorb
xchg
cmp
cwtl
inc
cmp
or
pop
adc
sub
ja
daa
jp
and
sbb
and
xor
push
fistpl
add
sahf
xchg
inc
repz
push
scas
push
jb
or
test
dec
mov
add
sbb
inc
and
ss
sub
pop
adc
or
jp
rcll
int
cmpb
add
inc
addr16
pop
mov
lcall
cmp
push
pop
and
or
xchg
faddl
aas
cmp
add
jmp
sbb
sub
ret
dec
mov
push
push
ret
mov
popa
xlat
xchg
xor
push
in
cld
out
push
rclb
movsl
out
jo
push
dec
sbb
mov
add
movsl
add
push
adcb
pop
add
js
cmp
pusha
es
out
push
iret
cld
xchg
mov
push
pop
jmp
mov
fsubrs
adc
sub
xchg
add
mov
mov
push
pop
push
add
loopne
test
and
mov
imul
in
mov
insl
shlb
movsb
in
xchg
loop
shr
rolb
cmp
mov
lcall
adc
or
push
mov
add
dec
out
mov
sbb
adc
test
arpl
popa
mov
jnp
mov
sub
inc
or
or
aam
pop
sbb
sub
inc
pop
add
pop
jmp
les
xor
les
dec
mov
jmp
xchg
push
cmpsl
in
mov
repnz
clc
push
add
imul
jmp
xor
fidivrs
pop
into
mov
mov
mov
cmp
fimuls
lock
call
lret
bnd
push
adc
mov
dec
pop
nop
nop
pop
cmpsl
xor
xor
les
add
lret
test
mov
cld
xchg
jp
jbe
sar
xor
push
mov
pusha
mov
inc
or
cmp
sub
jge
pop
push
jne
push
sub
add
cmp
cli
mov
inc
out
lea
imul
push
jb
pop
ret
add
outsb
outsb
sbb
add
in
scas
dec
ljmp
jmp
pop
fmuls
pop
orl
mov
xorb
sub
mov
pusha
dec
mov
and
add
adc
adc
stc
xor
or
daa
push
shll
nop
adc
jns
inc
bound
push
xchg
movb
leave
stos
sub
fsts
cmp
dec
push
roll
or
cmp
push
jmp
add
pusha
jne
sub
sub
fsubs
add
mov
jmp
push
pusha
push
sbb
aaa
mov
and
adc
mov
and
pop
add
push
push
decb
pop
mov
xor
pop
pop
shl
xchg
stc
aaa
mov
push
push
push
mov
sub
ret
out
xor
cli
enter
fsubs
push
sbb
or
and
daa
pop
dec
pop
add
enter
into
jl
push
or
push
outsb
lock
out
adc
mov
mov
mov
sbb
adc
adc
fadds
adc
sub
aam
or
push
or
es
pop
mov
push
cli
cmp
das
fadds
mov
mov
mov
addl
clc
push
mov
cli
leave
sti
nop
sub
xor
gs
cmpsl
mov
xor
out
pusha
inc
push
push
ljmp
addl
push
lds
jmp
cmp
repz
je
in
rorl
add
fs
pop
sub
jle
mov
mov
xchg
aad
rcrl
and
pop
dec
add
cld
jg
jmp
clc
repz
repnz
cmp
or
sub
rorl
in
push
subb
dec
pop
test
mov
lret
cli
jne
loop
push
fstpl
xchg
imul
movsl
clc
ret
push
aaa
jg
icebp
lock
push
and
cwtl
icebp
shrl
stos
jmp
sarl
add
push
pop
xchg
xchg
nop
and
xor
jne
mov
test
pop
mov
pop
rorb
cmc
pop
xor
mov
dec
daa
or
inc
and
stos
lret
jnp
adc
shrb
or
movsl
js
and
mov
jne
jne
sub
adc
push
test
loopne
orb
or
decb
inc
out
icebp
and
xor
jno
das
out
and
or
add
cmp
dec
lcall
or
call
and
and
mov
sbb
clc
pop
mov
sarl
sub
adc
fisubrl
lods
test
neg
ficoms
xchg
sub
jo
adc
mov
mov
pop
adc
push
sbb
adc
cmpsb
jmp
mov
push
test
dec
push
mov
mov
xor
lret
push
and
js
mov
imul
xor
cltd
addl
sub
add
scas
orb
cs
outsl
mov
dec
push
sbb
pusha
dec
pop
jmp
rol
dec
or
mov
addr16
popf
pop
add
xor
push
ret
mov
mov
push
mov
jae
cli
and
dec
in
cmc
int
adc
add
adc
cmc
jne
lahf
pop
pop
xchg
adc
inc
jl
in
and
aas
or
adc
in
in
inc
mov
xchg
clc
shlb
or
shr
adc
sbb
icebp
pop
fabs
into
xchg
pushf
mov
xchg
cmpl
push
jb
ret
dec
add
cmp
vmovapd
jno
inc
push
lods
sahf
test
inc
xchg
ret
iret
inc
clc
add
repnz
data16
and
call
mov
add
pop
mov
stos
adc
or
dec
nop
or
rcrb
test
add
inc
dec
jg
rorb
pop
inc
sbb
test
rol
pop
das
test
das
pop
add
push
sub
roll
enter
out
repz
push
sub
push
adc
dec
xor
and
xlat
lcall
pop
ret
nop
push
daa
das
dec
cwtl
and
mov
push
fstpl
mov
imul
sbbl
pop
pop
push
xlat
sub
icebp
inc
ss
int3
jmp
adc
pop
push
fwait
mov
call
xchg
lahf
and
mov
test
xchg
cmp
jne
sub
jmp
jno
sub
loope
inc
bound
fstpl
inc
mov
rclb
lds
add
movsb
push
push
jle
cmp
stc
xor
sar
sbb
or
clc
lods
dec
std
xchg
add
cli
add
call
test
fs
sub
jo
lods
call
repz
and
dec
xchg
mov
xor
add
or
test
adc
sub
mov
add
inc
rorl
add
shr
adcl
adc
push
stos
push
push
rcrl
or
pop
or
popa
incb
mov
push
or
add
daa
jmp
xor
into
loopne
push
mov
xor
pop
push
fimuls
jmp
xor
add
aaa
pop
and
ror
jnp
pop
orl
mov
pop
cld
add
inc
sub
sti
lret
or
xor
push
push
sub
add
push
imul
cmc
pusha
fistps
pop
pop
xchg
daa
repz
je
or
pop
sbb
xchg
shll
aas
popa
jl
push
add
and
xchg
fsubr
dec
add
cmp
stos
cmp
or
cmp
pop
pop
push
mov
inc
inc
pop
outsb
mov
inc
or
in
adc
inc
rorl
sbb
pushf
cld
mov
aas
mov
insb
sub
pop
jmp
jl
push
loop
lods
pop
sbb
popf
fsubs
lahf
sbbl
pop
inc
shl
adc
movl
fistps
push
jmp
mov
lods
mov
jmp
inc
orl
sub
inc
cli
daa
dec
dec
cmc
xchg
pop
dec
icebp
add
ja
pop
sub
adc
mov
jmp
subb
adc
pop
add
shl
jmp
sub
rolb
and
inc
push
xor
jmp
dec
outsb
outsl
cmpl
subb
xlat
push
call
fsubs
pushf
lret
pop
mov
xor
int3
test
mov
mov
mov
movsb
in
in
push
loope
addb
and
sub
push
xor
push
neg
cs
cmp
loope
inc
inc
push
or
ret
mov
push
and
push
jmp
outsb
lret
rcrl
jae
and
xorl
mov
lods
push
cmp
pop
lods
pop
fiaddl
mov
adc
jl
sbb
pop
out
addr16
bnd
xor
inc
pop
add
sub
dec
cmp
and
not
xor
cli
pop
ljmp
pop
xor
fisubl
out
ret
lods
sbb
addr16
mov
sbb
sub
pop
loopne
nop
aas
inc
subb
add
sub
sti
push
cwtl
or
push
or
cmp
mov
dec
mov
ss
push
mov
incb
roll
sub
push
fisubs
stos
cmpsb
cmp
fisttpl
leave
cmp
adc
mov
and
ds
jbe
sub
scas
dec
pop
pop
imul
data16
jecxz
pop
inc
inc
push
mov
lahf
xor
add
mov
mov
fiadds
push
in
push
lea
mov
aam
pop
pop
add
pop
push
idivb
shll
fidivl
aad
mov
shrb
push
cmp
push
arpl
incb
sbb
add
arpl
or
add
icebp
jo
pop
adc
cmp
andnps
cmpsl
xchg
pop
addl
mov
and
xchg
pop
push
xor
cmpsb
test
sbb
mov
cmp
in
or
dec
bound
mov
lcall
push
and
jle
or
or
and
dec
ljmp
rcrb
add
dec
int3
mov
cmp
das
push
movsl
testb
xchg
imul
cwtl
dec
dec
push
xchg
dec
in
adc
jae
xorb
nop
inc
dec
popf
aas
mov
xchg
mov
int
scas
mov
adc
push
push
fdivrs
imul
jge
xchg
mov
sub
lds
in
and
and
je
dec
sub
or
psubsw
rcll
xor
add
cmpsb
mov
outsl
loope
inc
add
mov
push
xchg
adc
bound
dec
mov
sahf
mov
mov
pop
adc
adc
sbb
adc
pop
sub
xchg
add
push
push
add
and
jmp
and
push
shlb
and
outsl
out
or
fiaddl
inc
fwait
and
or
fiadds
les
push
jp
pop
mov
aam
sbbb
std
pop
xor
adc
jne
xchg
or
inc
loop
push
lods
clc
or
and
mov
test
add
rcrb
adc
xor
je
pop
int
jne
data16
or
fwait
out
dec
in
insl
sbb
push
or
push
pop
jns
add
sbb
or
adc
and
mov
and
das
push
imul
sbb
jb
ret
adc
ret
in
mov
mov
jle
jns
dec
bound
add
scas
inc
stc
daa
cmp
mov
and
xchg
fnstcw
hlt
sarl
testb
push
mov
lods
arpl
mov
inc
mov
xor
add
mov
xchg
push
push
push
adc
add
ss
jg
or
jmp
and
imul
pop
rcl
push
cmpsl
das
je
pop
movsb
mov
lods
inc
pusha
dec
not
xchg
mov
inc
imul
dec
ss
iret
push
lret
stos
rcrb
sub
into
lea
out
sub
or
and
mov
pop
mov
push
cmp
inc
pop
push
or
ja
adc
xorb
sbb
jbe
push
mov
and
xchg
sahf
fadds
es
and
push
jecxz
add
bnd
outsl
sbb
pop
stc
repz
xchg
inc
int
push
sbb
in
xor
or
push
push
enter
out
and
lret
pop
imul
mov
xchg
or
pusha
das
jmp
ret
inc
ret
and
orb
and
push
mov
fwait
and
jmp
sub
jb
imul
loop
outsl
xchg
pop
inc
fs
add
aad
daa
jmp
push
jg
xchg
pop
sub
add
inc
ss
pop
sub
loop
push
in
movsb
cmp
pop
arpl
inc
lock
dec
es
popa
push
add
pusha
out
dec
dec
push
dec
mov
neg
xchg
add
jmp
mov
jmp
pop
test
mov
adc
punpckhwd
cmpsl
push
icebp
test
push
pop
lods
or
lcall
loope
clc
xchg
jge
pop
cld
ret
jne
adc
pop
incl
mov
sub
adc
mov
daa
ror
fcomi
mov
or
push
sbb
cmpsb
push
ret
inc
push
adc
adc
or
loopne
shl
add
push
neg
decb
leave
push
mov
xor
data16
sbb
jp
and
std
add
icebp
pop
mov
lcall
and
dec
push
mov
repnz
testl
inc
scas
xor
je
shlb
lods
cmp
les
add
add
dec
not
or
sbb
mov
jecxz,pt
shr
add
xor
rol
or
into
mov
lret
inc
out
dec
imull
orl
inc
push
pusha
sarb
repz
lret
cmp
adc
clc
mov
out
adc
sub
xchg
lahf
jns
bound
inc
push
into
divb
inc
movb
sbb
xor
daa
mulb
data16
pop
sbb
enter
das
inc
lahf
rcrb
cmc
sub
stos
ja
fdivs
sbb
lea
push
shll
xor
mov
rcrb
sbb
lea
mov
ret
pop
arpl
mov
add
pop
out
add
rorl
push
in
adc
push
dec
cmp
dec
mov
inc
in
popa
pushl
cwtl
xor
inc
fsubr
push
arpl
lock
or
popf
pop
std
mov
jb
xor
cmpsb
dec
and
loopne
rolb
mov
push
jmp
pop
xor
cmp
push
add
mov
cmpsl
adc
add
and
adc
dec
cmc
dec
xor
adc
push
rolb
dec
or
lahf
sbb
mov
push
scas
sub
inc
data16
cmp
adc
jl
sub
add
clc
imul
add
in
or
cmp
mov
pop
pusha
stos
xchg
xor
push
add
add
sar
aaa
bound
call
cld
and
push
mov
and
or
sbb
or
mov
lock
pop
mov
negb
xchg
movsb
and
shl
in
sub
sbb
xor
nop
lds
stos
push
cmp
mov
sti
jg
xor
mov
jmp
pop
test
cmp
jecxz
dec
clc
in
in
mov
addb
push
inc
sahf
int
incl
ss
cmc
sbb
cli
sbb
cwtl
jo
mov
pop
mov
jns
push
push
push
cmpsl
pop
ljmp
mov
xor
psubb
pop
adc
xchg
mull
or
lea
jp
xchg
sahf
xorb
repnz
add
and
mov
cmpsb
pop
xor
push
sbb
mov
mov
subl
dec
inc
push
test
dec
jecxz
mov
add
push
add
jo
aad
pop
dec
jp
movsl
dec
andl
aas
pop
or
divl
pushf
add
inc
jmp
ret
push
in
test
mov
bound
out
inc
mov
or
xor
inc
xchg
arpl
cmp
mov
push
pop
loope
ds
pop
vpsubsw
mov
mov
add
or
jg
ja
rcrl
adc
jecxz
sti
sbb
lret
neg
pusha
sti
rcll
inc
mov
outsb
sub
cmp
sub
push
sbb
fistpll
pop
into
pusha
mov
push
jne
jmp
pop
adc
das
in
mov
loope
sub
lcall
and
xchg
dec
fucomip
xor
cmp
mov
sahf
movsb
xchg
adc
rorb
dec
loop
ja
jmp
ja
test
es
subl
loopne
xor
movsl
cmp
loopne
pop
add
jg
lret
cmp
or
xor
add
jbe
jmpw
dec
cmp
jb
dec
cmp
push
add
adc
ret
fiadds
or
push
cmpsb
push
jmp
lods
xor
fmull
mov
mov
outsb
into
jae
ss
adc
sti
pop
imul
and
sub
inc
arpl
and
and
shlb
add
orb
adc
cli
rcrl
mov
pop
pop
pop
pop
jl
push
mov
jp
jp
aam
push
or
adc
cs
gs
shlb
or
push
or
jmp
iret
sub
xor
or
jecxz
scas
testl
or
sub
adc
fwait
mov
pop
leave
mov
adc
int
ret
lret
xrelease
scas
and
loopne
movzwl
mov
adc
add
mov
fstpt
pop
out
add
push
adc
mov
inc
lret
pop
push
mov
push
add
outsl
add
sbb
ss
sbb
lahf
out
mov
mov
xchg
and
daa
cmp
mov
sbb
repz
sub
stos
xchg
xchg
or
pop
cmp
mov
sub
in
mov
add
adc
sub
clc
sbb
sub
out
or
lds
sub
xchg
dec
xchg
and
nop
adc
jb
call
adc
adc
inc
or
and
aas
pop
inc
jl
mov
push
adc
out
jp
xor
add
xchg
push
mov
adc
pop
stos
cwtl
add
cltd
and
daa
cmp
add
mov
movsl
popf
fimull
jbe
jmp
ja
inc
mov
xor
and
sbb
add
xchg
sub
call
sahf
sub
push
mov
cld
mov
out
push
stc
inc
test
into
mov
cmp
inc
inc
test
or
push
cmpb
mov
xor
add
mov
sbb
mov
ds
insb
enter
pop
mov
or
rcll
push
push
jmp
pop
push
mov
xor
movhps
jae
sahf
mov
sbb
js
jns
adc
push
and
adc
push
loopne
push
cltd
add
jp
sbb
push
lret
repz
scas
xor
add
mov
mov
imul
data16
add
cli
movsb
jl
jle
lahf
clc
xor
sbb
mov
ljmp
adc
xor
rcrl
sti
and
sti
push
cli
xor
mov
lods
fstl
lds
jmp
push
inc
or
xor
sbb
push
and
dec
jb
adc
pop
fs
jbe
add
or
pop
pop
call
mov
xor
or
ljmp
inc
cwtl
mov
fnstcw
hlt
and
mov
lret
jle
hlt
dec
pop
mov
inc
test
and
dec
pop
test
add
sbb
ljmp
pop
pusha
xorl
xor
mov
or
inc
shr
cmp
mov
nop
push
cmp
xorb
or
push
cmpsl
das
mov
sbb
or
aaa
xchg
cmp
loop
and
xor
mov
add
test
sti
fisubs
fwait
mov
mov
fwait
bound
ljmp
loope
jb
daa
mov
inc
shrl
add
jnp
dec
push
dec
loopne
push
mov
pop
nop
int
cmp
adc
jmp
dec
sarl
dec
test
sbbl
mov
sti
roll
shll
in
push
hlt
shrb
jbe
inc
out
fdivs
pop
mov
push
pop
repz
or
push
jmp
sbb
fnstcw
xchg
sarb
sbb
or
mov
xchg
adc
mov
mov
cs
cmc
jle
ret
and
lds
stos
andl
mov
push
pushf
jne
pop
cwtl
ret
add
nop
add
jmp
or
insl
push
mov
cld
iret
jle
inc
add
daa
popa
adcb
repnz
lock
mov
rorb
mov
stos
sub
aas
mov
fs
shlb
je
pop
xor
aam
sbb
and
jp
adc
dec
movsb
pop
xor
cwtl
jge
pusha
mov
jb
sbb
or
jmp
and
popf
gs
jp
leave
fsubs
aaa
ja
and
cmp
inc
or
dec
mov
push
lret
add
mov
jecxz
test
mov
insb
jmp
mov
push
mov
sub
xor
and
outsb
pop
cmp
push
shl
pop
mov
add
repnz
or
sbb
adc
mov
sub
stc
add
add
jmp
push
or
orb
cmp
jo
mov
inc
jmp
call
dec
subb
leave
sub
in
or
pop
add
cmpsl
xor
cmp
adcb
mov
mov
jmp
fdivrl
pop
das
mov
fdivrs
js
add
daa
push
jmp
dec
mov
sub
jmp
mov
and
jmp
push
ljmp
rcll
mov
das
mov
mov
cmpsl
out
and
pop
pop
mov
or
add
je
push
mov
sbb
push
outsb
dec
xchg
lds
push
pop
cmp
and
loop
sub
inc
pop
adc
es
cmp
roll
bnd
popa
jl
mov
push
pop
rclb
add
mov
inc
mov
shl
adc
loope
lods
jns
dec
out
data16
cmp
jo
mov
pop
cltd
jle
jb
sub
cmp
or
sti
mov
xor
shll
cmp
push
mov
and
mov
aam
outsl
fs
mov
adc
add
popl
inc
repnz
dec
push
lods
xor
cli
pop
or
stos
icebp
mov
add
repnz
xchg
dec
sbb
sub
adc
push
mov
mov
mov
cmp
clc
sahf
ja
or
dec
pop
mov
pop
xchg
pop
adc
mov
shlb
les
or
mov
or
daa
insb
jle
inc
push
sub
addr16
dec
inc
cld
and
sub
push
repz
imulb
add
cmp
push
js
std
das
push
insl
mov
pop
popa
mov
ljmp
stc
xchg
ja
fstpt
jg
imul
test
cmovne
out
add
sbb
ret
enter
es
pop
pop
popf
mov
push
push
mov
dec
push
fdivl
in
cmp
sbb
push
xor
xor
pop
clc
push
add
jnp
dec
rcl
push
mov
pop
push
mov
orb
dec
xor
fnstsw
jno
loop
addr16
cmp
lret
xorb
sbbb
mov
mov
mov
xor
out
and
pop
add
pop
push
xchg
add
mov
mov
pop
push
and
pop
and
xchg
add
mov
flds
pusha
adc
inc
and
and
push
sbb
sub
sbb
in
stc
jp
inc
add
pop
push
mov
mov
add
cs
shll
cmp
ret
jb
sub
mov
push
cmp
sub
pop
mov
std
sbb
or
jmp
push
push
test
jmp
xor
call
pop
jmp
xor
sahf
imul
jns
dec
push
mov
outsb
and
or
cs
or
jnp
or
call
jno
pop
xor
and
fs
push
pop
test
push
and
fldl2t
shll
insb
xchg
inc
iret
mov
test
clc
rcrb
push
insl
pop
insb
sub
int3
in
mov
jge
lret
inc
hlt
add
test
imul
or
pop
inc
imul
push
aam
adc
dec
pop
sahf
fprem
repnz
or
and
inc
push
jmp
mov
loopne
cwtl
adc
fs
sub
dec
mov
dec
dec
mov
sub
add
mov
mov
cwtl
add
test
ret
aad
cmc
popf
fsubl
fucompp
movsb
add
aaa
adc
mov
cld
push
push
dec
andb
inc
pop
bt
or
xlat
cs
push
push
call
and
lds
xor
aas
ret
and
icebp
outsb
lret
imul
shll
add
inc
cmp
xchg
and
inc
stos
mov
das
neg
fadd
loopne,pn
jl
inc
inc
mov
les
rorb
test
mov
pop
xor
fbstp
flds
out
or
inc
sub
and
rorb
rorb
pop
jg
testb
in
push
iret
stc
aad
xor
loope
pop
cmc
or
sbb
int
std
clc
cmpsb
mov
lock
clc
pop
or
mov
lret
push
mov
fwait
or
arpl
cmp
push
ljmp
in
repz
cltd
cmp
popa
mov
orb
fimuls
dec
sub
insb
or
shl
push
data16
neg
mov
or
dec
repnz
ret
lahf
fldenv
outsl
movsb
scas
dec
xchg
xchg
push
mov
sub
mov
or
xor
rolb
pop
jnp
pop
jno
add
and
dec
add
jmp
fs
jle
mulps
dec
ljmp
addl
out
shlb
jmp
sbb
lods
lock
in
mov
enter
pop
pop
lcall
push
mov
cmp
or
jmp
or
xchg
lea
add
daa
les
sar
push
movntps
inc
pop
cmp
mov
inc
jmp
xor
out
xor
mov
jmp
and
mov
jle
and
inc
pop
popl
inc
addl
pusha
push
je
push
scas
aas
pop
sbbb
js
dec
push
leave
pop
add
push
dec
insl
add
cmpsl
fst
xor
pop
es
sub
pop
movsl
addr16
mov
pop
add
add
mov
shrb
jmp
in
call
ret
inc
orb
jmp
fdivrl
adc
mov
jmp
push
int
call
add
sub
das
jmp
sub
add
jo
lea
and
xor
jae
xlat
and
add
xchg
push
sub
add
xchg
xor
xor
pop
movb
dec
inc
daa
push
dec
push
or
aad
test
xor
adc
push
mov
mov
adc
mov
mov
mov
jno
and
mov
and
sub
test
in
xor
mov
es
in
xchg
adc
adc
ja
pop
sbb
shlb
ljmp
jns
mov
js
mov
dec
cmpsb
xchg
add
mov
out
nop
add
mov
divl
loopne
sub
aas
push
add
or
mov
aas
push
cld
mov
sub
pop
add
adc
dec
int3
fbstp
imul
les
lods
and
ret
andb
xor
in
lahf
or
jne
and
xorb
dec
jno
loope
outsb
addr16
xchg
jp
dec
aam
lods
lods
xor
mov
mov
xchg
rol
and
sbb
repnz
mov
ret
bound
imul
icebp
push
jp
fbstp
mov
sub
add
mov
sbb
sbb
mov
xor
adc
or
jp
mov
pop
ficoml
adc
adc
xchg
sub
shr
xor
adc
lea
pop
pop
pop
add
shlb
xchg
sub
shlb
or
and
outsl
pop
push
and
repz
rclb
dec
cmpsb
xor
inc
into
mov
add
mov
in
pop
xor
sub
and
pop
jmp
dec
mov
rcll
or
call
loop
add
inc
pushf
push
and
xlat
addb
pop
push
or
pop
jne
sbb
pop
or
jl
mov
lea
sbb
adc
das
xchg
jmp
movsb
add
shl
cmpsl
sub
int3
aas
pop
add
decb
jp
jno
inc
inc
jmp
rclb
push
rclb
sbb
inc
mov
mov
lahf
psubusb
add
loopne
divb
adc
out
push
dec
jmp
negl
dec
rol
cmpb
sub
or
mov
mov
fdivrl
inc
jge
dec
sub
xlat
sbb
dec
lock
or
ret
inc
repnz
sbb
mov
loopne
mov
and
cmc
arpl
mov
push
ds
add
and
mov
add
cmp
leave
ja
push
xor
imul
xchg
or
jl
pop
loopne
jne
or
or
dec
cli
inc
add
add
and
push
or
pop
idivb
cmpsb
push
mov
and
or
scas
mov
aas
add
pusha
shrb
sub
in
add
adc
xor
mov
push
push
nop
xchg
cmp
cmpb
pop
xchg
add
push
jns
sub
xor
daa
xor
mov
xchg
or
push
idivl
inc
or
je
add
cmp
and
mov
and
movsl
add
push
mov
xor
mov
pop
mull
mov
and
add
push
inc
incl
mov
push
pusha
xchg
hlt
pop
dec
push
insl
add
in
xor
in
mov
and
push
mov
lcall
ret
dec
ja
pop
aam
lea
sub
push
push
pop
adc
in
addr16
push
mov
and
inc
jo
add
xchg
push
jmp
xchg
push
dec
adcb
insl
sarl
and
into
scas
es
sub
iret
jge
add
sbb
and
inc
push
adc
andb
sub
test
pop
mov
adc
outsl
pop
add
jmp
sub
outsb
out
adc
jg
push
add
lods
bound
xchg
pop
sub
cmp
comiss
mov
imul
std
cs
add
xor
sub
push
dec
ja
cmp
add
pop
add
sub
sub
jmp
cmp
inc
and
push
pop
xor
lcall
lds
mov
and
jp
cmpsl
dec
dec
push
pop
outsl
leave
jmp
ja
and
pop
add
je
scas
xor
shr
and
sarb
pop
push
cwtl
xchg
mov
in
add
nop
das
or
mov
sub
mov
pop
pop
pop
sub
xorb
push
jecxz
push
andl
inc
mov
shr
mov
dec
add
sub
adc
cwtl
or
ljmp
das
push
jb
pop
mov
push
sub
in
mov
imul
add
cmp
call
xchg
fnstcw
das
mov
daa
xchg
loop
jno
loope
push
data16
je
aas
sub
mov
xor
out
sahf
xchg
nop
shrb
lahf
dec
fdivs
mov
ret
mov
shr
mov
sbb
decb
clc
adc
pop
iret
or
add
and
lcall
rcrb
sub
and
pop
loop
leave
mov
jl
adc
cld
fnsave
out
push
sbb
outsl
push
ret
jns
and
adc
sbb
loope
or
jge
aaa
ds
jnp
js
mov
jo
push
or
inc
js
mov
movsb
das
and
mov
sbb
dec
lods
pushf
loope
into
cmp
cmp
jne
pop
cmp
ret
push
in
in
or
mov
icebp
loop
cmp
cmp
inc
movb
pop
add
sub
sub
inc
jmp
sub
and
pop
lret
push
xchg
inc
jecxz
dec
pusha
and
or
je
sub
xor
lds
sub
jo
mov
mov
adc
insb
add
test
adc
mov
inc
movsl
sti
sub
jmp
mov
and
sub
lret
add
jmp
fcoms
and
shrb
out
sub
mov
push
lock
push
push
adc
add
in
and
or
iret
adc
jmp
les
mov
mov
and
inc
add
in
pop
aaa
add
call
jecxz
or
sbb
or
adc
push
and
cmp
into
fisttpl
xor
shl
push
bound
jle
add
lcall
jmp
mov
rcll
pop
shl
rcr
test
loop
fucom
add
cs
and
test
int
mov
mov
insl
loop
xchg
push
or
in
mov
repnz
adcl
or
loope
xor
dec
call
xchg
pusha
push
sti
subb
dec
in
cmc
jg
popf
fwait
imul
sar
inc
add
fs
or
mov
not
xchg
pusha
sub
imul
ljmp
or
or
repz
jl
rolb
add
or
jmp
or
sub
push
or
test
pop
cli
cmc
mov
sub
subl
mov
mov
adc
out
mov
cmpsl
andnps
fwait
push
fimuls
mov
out
into
ficompl
notb
jmp
push
mov
leave
sub
sub
aad
cwtl
sub
or
sub
jge
sub
call
lret
ret
mov
dec
cmpsb
insl
push
push
aas
pop
jecxz
je
shrb
mov
dec
mov
jmp
pop
xchg
in
daa
pop
daa
pop
sti
lock
cmc
sub
or
pop
neg
adc
jns
pop
and
rcrb
testb
sbbb
andb
test
jmp
push
jb
popf
adc
add
cmp
and
jbe
add
cmp
jecxz
jmp
dec
mov
jnp
loop
aam
adc
pop
arpl
notb
loopne
add
movsb
clc
popf
dec
or
repnz
adc
xchg
ret
shll
push
bound
inc
jbe
cwtl
inc
orb
mov
jmp
push
push
icebp
add
dec
mov
push
jmp
pop
push
push
das
jmp
or
and
loopne
xor
pusha
adc
fisubl
dec
push
lret
mov
sti
imul
outsl
test
rcll
test
or
sbb
jge
insb
adc
mov
icebp
adc
pop
and
clc
mov
pop
cmc
outsl
pop
test
pop
movsb
or
sbb
cmpl
mov
imull
popa
adc
mov
cwtl
stc
cs
cli
add
iret
mov
or
jle
cld
pop
addr16
mov
nop
add
xor
ret
or
jecxz
add
pop
aas
insb
xor
dec
pop
fimull
push
mov
rcll
fnstcw
push
fstpl
add
xor
fdivrs
stos
out
or
push
arpl
daa
jmp
rorl
pop
pop
bound
adc
lock
mov
push
add
outsb
test
push
psubq
mov
dec
in
xor
and
sub
test
jle
sub
sbb
sub
xchg
dec
or
sub
gs
or
sub
repz
xor
mov
or
adc
hlt
pop
leave
into
cmp
adc
in
sbb
adc
jbe
out
or
ds
sbb
lret
mov
rcr
xlat
pop
push
push
mov
shr
push
adc
neg
hlt
jmp
dec
or
nop
popl
cwtl
mov
notl
les
push
or
and
xchg
icebp
or
je
int
aad
add
lcall
or
pusha
inc
adc
mov
lret
dec
test
jns
sub
repnz
xchg
add
pop
pop
mov
ficoms
repnz
sub
call
inc
add
lods
inc
lea
sbb
and
cs
sbb
movb
pop
push
idivb
add
adc
fimull
push
inc
pusha
test
mov
xchg
and
movsl
and
jmp
mov
lds
mov
mov
pop
add
mov
stos
ljmp
je
cmp
psubusw
dec
xor
mov
jmp
ret
and
imul
cmpl
fistpll
je
arpl
into
jmp
xor
pop
lret
or
outsl
push
xor
inc
xchg
mov
jl
lret
xchg
and
lret
mov
xor
inc
cld
push
in
loopne
pop
dec
inc
orb
outsb
push
je
add
mov
sub
sub
mov
or
or
cmp
xor
and
pop
fnstenv
or
fmuls
push
sbb
daa
dec
xor
add
pop
fdivrs
mov
arpl
cwtl
leave
jmp
push
xchg
mov
cmp
leave
popa
fcmovne
add
test
sbb
or
add
mov
xchg
inc
push
les
sub
leave
int3
push
ret
ljmp
inc
repnz
or
dec
push
jbe
cmp
xor
ljmp
mov
jnp
adc
ja
mov
dec
rol
xor
cltd
push
pop
in
xlat
idivl
dec
stos
xor
add
mov
adc
orb
lea
add
mov
adc
lea
clc
imul
lods
nop
das
jle
daa
lcall
inc
repnz
lods
orb
mov
rclb
shll
pop
sub
xchg
mov
out
add
or
adc
nop
lcall
and
lcall
dec
push
jb
in
out
xchg
lods
jae
insl
sbb
cmp
and
dec
pop
imulb
jmp
cmp
or
jne
dec
push
insb
imul
icebp
add
dec
push
mov
xor
es
or
mov
pop
pop
ja
pusha
dec
or
or
sbb
push
mov
lods
movlps
sbb
divb
pop
mov
popa
flds
pop
xchg
test
sub
out
aaa
mov
pop
push
push
int3
sti
push
aaa
or
and
add
sahf
adc
inc
add
daa
cwtl
jno
std
mov
inc
jl
inc
jnp
inc
jne
fs
jp
iret
add
pop
pop
xchg
or
jg
jp
add
sub
cs
addb
cmp
sbb
cmp
jmp
mov
mov
xor
add
test
push
fistps
in
sarl
ja
shlb
stos
ficoms
ret
frndint
and
ja
out
xchg
cmp
clc
inc
leave
pop
fstpl
adc
test
scas
mov
xchg
cwtl
adc
sub
push
xchg
mov
pop
xchg
mov
cs
mov
jecxz
xor
inc
cli
lret
dec
cwtl
icebp
sub
sti
fs
mov
in
or
push
sub
xchg
aaa
cld
pushf
pop
xor
add
jge
pop
clc
inc
mov
clc
outsl
xor
shr
or
enter
push
lods
dec
cmp
mov
testb
push
mov
ss
jns
push
fisttpll
lret
push
mov
sub
dec
int3
adc
loopne
in
sub
mov
sahf
cmp
cmc
imul
fwait
add
enter
dec
pop
push
dec
adc
pop
subb
pop
jmp
addr16
daa
jle
sub
push
mov
sub
cld
pop
and
sbb
call
xchg
cs
repz
jmp
xlat
push
jae
rcll
cmp
insl
sub
ljmp
clc
add
push
sub
in
fldenv
sti
lods
dec
mov
xchg
pop
sub
aam
subb
sub
hlt
pusha
mov
clc
cmp
cmpsl
ficomps
or
sahf
dec
sub
push
dec
inc
mov
jns
mov
lds
lret
mov
ds
xchg
mov
add
orb
jmp
enter
cmpb
push
jmp
fs
rolb
or
imul
dec
add
arpl
add
add
mov
add
add
fs
inc
sub
ret
dec
sbb
jmp
into
xor
add
adc
sbb
ds
popf
inc
rcll
pop
fwait
stc
push
aad
dec
inc
rol
ljmp
and
pop
loop
clc
push
pop
mov
or
mov
or
cmp
and
test
mov
pop
je
or
pusha
push
ret
cli
xchg
and
lods
adc
adc
xor
xor
scas
jnp
and
adc
enter
pop
push
xor
adc
test
add
rcll
icebp
int3
int
pop
lret
ret
cmpl
les
inc
dec
movl
scas
xor
push
call
daa
sub
mov
loopne
and
pop
xor
sbb
dec
test
test
lret
inc
add
iret
mov
push
cli
psubb
push
testb
xchg
cli
enter
jmp
and
sub
insb
and
leave
jnp
leave
xchg
mov
ror
sbb
pop
push
mov
mov
cs
jmp
ret
cmc
jge
dec
sbb
pop
in
lea
mov
imul
sbb
cli
push
push
loopne
bound
pop
jb
mov
cmp
mov
lcall
add
rclb
mov
mov
pop
pop
or
mov
xchg
stos
mov
repnz
outsl
outsw
test
lods
jne
push
push
or
mov
aam
add
xlat
pop
std
push
test
pop
addr16
xchg
ljmp
xor
push
pop
pop
nop
int
addl
push
pop
arpl
sbb
add
jmp
sub
xchg
push
addl
push
jl
pop
pop
push
mov
xchg
inc
sub
ja
mov
and
clc
mov
inc
pop
add
neg
push
out
inc
sub
sbb
pop
add
mov
dec
cmp
add
push
mov
jne
je
fildl
push
pop
and
xchg
and
jne
sarb
sub
xchg
ljmp
jno
cmp
mov
push
inc
or
xlat
or
inc
and
lret
or
test
pop
mov
imul
jl
inc
pop
jmp
cmpsb
cli
jg
aas
add
jmp
adc
jbe
sub
call
outsl
rorl
jecxz
cmp
jno
or
push
jns
mov
test
aad
push
and
or
cmp
pop
add
adc
or
jmp
gs
mov
pop
in
xchg
cwtl
divps
inc
xchg
jmp
or
pusha
pushl
dec
pushf
jbe
pop
shll
xor
push
pop
xor
mov
and
inc
or
add
xlat
aam
mov
pop
push
into
negb
popa
jg
jb
adc
fisubrs
push
orb
fldenv
mov
dec
pop
mov
daa
dec
pop
cli
xchg
jnp
out
imul
add
cmp
push
mov
push
scas
shrl
cmp
pop
pop
dec
popf
cli
xor
adcb
fisttps
in
stos
jmp
push
sub
adc
add
mov
xor
jnp
arpl
sub
aam
iret
add
adc
movsl
daa
push
repz
mov
mov
dec
add
es
jbe
jno
in
js
cmp
lret
add
dec
cwtl
repz
pop
xchg
mov
mull
in
or
imul
mov
add
scas
roll
add
rol
jns
out
pop
sti
test
xor
and
outsl
call
pop
jnp
icebp
push
mov
pop
cld
add
outsl
sbb
push
pop
nop
mov
sub
sbbl
das
fidivrs
mov
push
jmp
lret
stos
add
mov
out
pop
xchg
iret
stos
adc
data16
or
jl
add
fsubs
push
adc
ss
mov
fiaddl
repnz
sbb
cmp
daa
jmp
add
pop
mov
mov
inc
add
cmp
mov
add
aas
cwtl
pusha
sar
daa
cmp
push
dec
push
add
jne
sti
add
mov
mov
add
outsl
and
adc
outsb
xchg
xor
push
xchg
inc
gs
lea
sbbb
fisubrs
stos
pop
lret
or
fldt
push
frstor
movsb
adc
mov
pop
push
mov
test
jmp
xchg
insb
inc
adc
aaa
repz
rorb
mov
pop
xor
cmp
sub
mov
aas
enter
add
loopne
or
sti
add
jmp
pop
test
cmp
jecxz
cmpsl
mov
xor
loopne
and
inc
das
cmp
xor
xor
cwtl
lock
pop
dec
test
xor
add
jnp
in
jns
add
mov
push
push
cmc
or
or
jae
or
mov
pop
mov
jl
push
push
loope
cs
iret
pop
add
xor
mov
in
or
push
test
ror
lds
pop
dec
push
sbb
call
rcrl
mov
stos
or
out
xor
hlt
xchg
aas
inc
pop
push
push
xor
or
mov
je
mov
out
loopne
and
das
sub
pop
imul
rolb
test
pop
sub
dec
sub
lret
out
or
loopne
add
inc
imull
sub
push
mov
push
push
out
or
sbb
pop
cmp
sbb
pop
and
pop
push
mov
xor
insb
or
js
nop
inc
dec
std
cwtl
inc
or
mov
inc
mov
dec
dec
jp
jo
inc
and
sub
mov
xor
push
cmp
add
call
inc
push
sub
xchg
cs
ljmp
or
dec
mov
movsb
stos
ret
bound
jbe
pusha
pop
inc
pop
and
dec
push
push
pop
inc
xor
dec
mov
fisttps
dec
jl
in
and
add
out
sti
fs
daa
fcomps
pop
ss
pop
sahf
xchg
xchg
rolb
lret
add
adc
push
adc
in
xor
sbb
inc
enter
inc
or
ljmp
ficoml
mov
sub
jmp
adc
sub
outsl
lock
mov
imul
int
add
shl
add
scas
jmp
call
test
scas
adc
pop
in
add
iret
aas
jmp
mov
ljmp
cmpsb
fimuls
ficoms
push
push
imul
pop
cmp
or
add
push
lahf
repnz
or
sub
dec
pop
or
sti
pop
inc
dec
pusha
fldenv
shlb
xor
pop
pop
insb
push
cwtl
add
push
adc
push
and
lds
mov
test
pop
mov
icebp
jge
dec
sarb
sub
ficompl
add
push
xlat
add
movsb
xor
shr
pushf
out
or
int3
clc
xchg
ljmp
ds
es
xlat
xor
shll
syscall
mov
lahf
ljmp
in
mov
js
lock
movl
push
add
xchg
imull
or
add
inc
in
jp
decb
ljmp
add
pop
lods
add
aaa
and
pop
sbb
roll
std
sahf
jmp
out
scas
mov
mov
outsb
lods
and
mov
int
mov
xchg
pop
repz
sahf
push
dec
mov
repz
push
xorb
jg
popa
scas
insl
js
mov
ljmp
cmp
adc
and
xchg
push
push
push
mov
fmuls
lods
and
pusha
and
movb
lock
insl
hlt
inc
aas
fiadds
push
aam
jmp
lcall
add
push
pop
xor
fsubr
add
cmp
pop
dec
push
and
shlb
add
jp
cmp
cmp
push
mov
push
std
jae
pop
out
dec
jmp
mov
sub
pop
push
mov
add
loop
xor
fwait
ljmp
stc
sub
push
xchg
inc
adc
dec
pusha
js
lret
xor
int
or
lock
dec
stc
adc
les
test
push
mov
mov
add
push
sub
pop
push
dec
mul
jo
add
mov
xor
ds
jne
cli
rcr
sbb
mov
cmc
lods
cmp
add
dec
jne
sub
lods
into
jae
bound
mov
add
add
adc
lahf
and
push
mov
push
aas
push
pop
xchg
rorl
mov
push
push
push
mov
push
inc
and
call
xchg
push
rcl
pop
popa
dec
test
push
and
pusha
pop
add
push
mov
sub
jl
sub
cmp
fcmovb
add
jmp
repz
repnz
pushf
insl
sahf
cmp
loop
pop
aaa
and
jge
push
push
jmp
int
pop
mov
add
dec
test
movb
or
inc
jno
loopne
mov
fisubrs
mov
inc
mov
and
outsb
fs
and
cli
dec
add
out
pop
cmpl
call
sub
fwait
neg
lcall
icebp
mov
add
mov
imul
mov
aam
or
mov
mov
popa
inc
push
mov
add
jmp
nop
lods
fs
cmpb
loopne
addl
sbb
enter
movsl
add
repz
push
mov
sbb
gs
sub
sub
dec
mov
push
mov
movl
xchg
std
pop
or
in
xchg
mov
or
sub
add
sahf
adc
add
xor
sbb
ds
cmp
idivl
inc
xor
add
sub
sub
mov
dec
test
dec
stos
bound
fiadds
inc
add
sbb
push
es
aam
mov
lods
sub
cmpsl
push
or
mov
add
rorl
or
mov
or
out
movsl
imul
push
push
aad
ss
sbb
xchg
fsubl
push
push
adc
loop
sbb
out
test
jmp
mov
ret
cmp
inc
inc
loope
mov
push
pop
cmp
pop
lahf
pop
mov
cs
gs
nop
or
xchg
mov
push
lret
inc
shr
jae
push
or
sub
repz
mov
xchg
push
shr
and
push
add
adc
shr
push
and
pusha
dec
in
imul
sub
sub
and
in
mov
ret
test
jmp
jne
push
outsl
out
mov
inc
and
shl
mov
int3
cmp
or
lds
jno
pop
sub
and
adc
add
sub
adc
addr16
out
mov
aad
sbb
cmp
sub
adc
push
es
push
push
dec
add
test
filds
or
mov
push
sbb
jae
ljmp
cmp
stos
and
mov
sti
dec
cmpsl
int
and
jmp
or
inc
jmp
adc
pop
push
lahf
mov
inc
sarb
pop
pop
ja
mov
mov
mov
pop
cmc
aaa
adc
mov
or
pop
or
push
fs
xchg
in
dec
lret
lods
and
and
es
add
loope
sub
inc
jge
test
stc
pop
sub
add
pop
mov
loope
ret
in
insl
test
stc
pop
inc
or
add
push
ljmp
cmpl
dec
aam
test
pop
push
jb
push
les
xchg
shl
sub
idivl
push
pop
cmpsl
enter
pop
push
bound
ja
cmp
nop
int
aas
or
or
std
fsubrs
mov
or
mov
mov
outsb
jmp
aas
cmp
repz
dec
mov
rorb
fwait
cs
or
mov
adc
and
pop
cmp
orb
jmp
push
push
pushf
jae
sahf
cmpsb
stc
pushf
sub
adc
dec
iret
loop
or
mov
xchg
bound
dec
mov
mov
negl
inc
hlt
pop
inc
das
ret
jg
loop
popa
loop
jae
testb
ss
dec
ret
push
xor
mov
mov
mov
push
test
jmp
aad
mov
or
xor
cmp
or
jmp
xor
dec
push
orb
or
pop
outsb
cmpsl
push
add
jle
lods
or
dec
mov
cmpsl
subb
adc
loopne
out
mov
xor
mov
imul
jmp
pop
cwtl
daa
or
mov
popf
push
fucomp
pusha
in
hlt
mov
xor
mov
add
mov
sbb
mov
sbb
bound
lcall
lahf
cmp
push
adc
sbbb
mov
xchg
or
out
imul
pop
loope
stos
xor
push
inc
pop
inc
mov
push
jmp
ret
push
test
lock
jge
test
sbbl
stc
sub
mov
scas
loop
es
fcmovnb
inc
and
add
push
mov
push
arpl
adc
not
inc
jmp
mov
xchg
clc
inc
cmc
cli
cwtl
jns
or
adc
cld
push
mov
scas
add
or
jns
or
mov
call
pop
mov
sub
and
or
sti
test
push
test
push
adc
cli
inc
mov
mov
xchg
or
mov
xchg
imul
icebp
das
jmp
xlat
xchg
lds
cmpsb
dec
mov
cmp
adc
or
js
daa
mov
jbe
cmp
out
sub
in
rcll
leave
add
and
fbld
popa
or
pusha
je
push
mov
pop
sub
inc
add
pushw
adc
inc
frstor
pop
xor
sbb
test
dec
cmp
jmp
or
jge
call
mov
in
inc
in
jmp
dec
lods
roll
repnz
pop
cmp
outsl
sbb
mov
je
sub
pop
xchg
xor
adc
mov
and
mov
cmp
mov
out
lods
pop
mov
nop
fnsave
cmp
jmp
xchg
push
mov
fadds
mov
push
ljmp
out
call
bnd
jne
sub
mov
push
or
inc
lcall
jno
push
pop
sub
roll
inc
bound
or
sarb
mov
xchg
xchg
and
enter
cmp
lret
pop
in
add
jge
pusha
xor
icebp
xchg
add
dec
sub
loop
rclb
shl
jnp
or
push
push
push
pop
xchg
sti
test
jmp
negb
test
repz
not
add
pop
pushw
rorl
xchg
pusha
lret
sub
pusha
mov
les
xor
mov
add
jbe
shl
dec
lcall
mov
bound
test
scas
add
jp
movsb
jae
and
xor
inc
jmp
xchg
jo
adc
xchg
jecxz
inc
pusha
xor
das
insl
adc
adc
or
sbb
adc
in
rcrl
fstpt
sub
cld
and
jp
cmp
and
lds
or
xor
mov
int3
mov
sub
xor
fisttpl
scas
repnz
pop
ret
aas
jl
jmp
mov
mov
dec
clc
add
or
jge
in
push
jo
mov
adc
mov
arpl
daa
stos
push
out
js
jmp
pop
out
jl
jne
lods
mov
push
sarl
mov
nop
dec
imul
mov
pusha
cmc
mov
cmp
je
dec
dec
xchg
insb
pop
cmp
fstl
pop
sub
sub
push
gs
in
mov
xchg
push
adc
call
jge
dec
leave
fiadds
xlat
xchg
mov
or
pop
cli
dec
push
call
leave
inc
movsb
aam
cmpsb
mov
pop
int3
test
add
call
jmp
jmp
push
adc
mov
movsb
imul
cmp
neg
rolb
in
pop
sub
insb
dec
sub
pmullw
test
pop
jnp
pop
xchg
mov
jl
sub
popf
roll
push
sub
das
mov
idivl
mov
testl
dec
rclb
mov
pop
je
push
outsb
andb
ret
dec
cwtl
or
push
mov
out
out
pop
dec
lods
cmc
inc
or
adc
gs
xchg
enter
stos
les
xchg
mov
or
rcr
movsb
jge
mov
dec
push
add
inc
dec
cmc
pop
mov
mov
ja
gs
fimuls
pusha
mov
jl
push
sub
or
shlb
out
pushf
cmp
jmp
jg
sub
or
xchg
ja
and
jb
adc
movsb
xor
out
xchg
das
dec
push
adc
xor
mov
and
add
fadd
aaa
and
or
push
btc
divl
adc
fdivrl
mov
add
pop
pop
xor
bound
push
push
jmp
aam
mov
mov
sbb
adc
mov
insl
adc
incb
jmp
and
inc
and
dec
push
enter
push
add
clc
adc
or
sub
imul
cltd
insb
mov
in
adc
jmp
sti
lcall
xorl
push
add
xor
push
inc
push
jnp
add
add
jmp
adc
jp
cmp
ljmp
jae
ret
js,pn
es
push
xor
adc
cli
push
jge
pop
dec
ror
or
das
lds
popf
loope
mov
add
jo
xchg
and
pop
mov
adc
xor
push
scas
fsubrs
cmp
mov
pop
jl
gs
fisubrs
pop
push
sub
dec
or
xor
mov
pop
cmp
sub
pop
outsb
mov
add
arpl
dec
lods
push
pop
cld
add
push
pop
push
popa
mov
fsubrs
in
push
mov
addr16
sbb
leave
test
add
cmp
stos
fs
jle
pop
mov
dec
lods
push
cwtl
push
scas
mov
pop
sub
push
ds
lods
cld
or
rorb
sub
fisubrs
mov
mov
rclb
out
stos
jae
push
xor
pop
dec
cmp
push
dec
mov
neg
xchg
jmp
pop
mov
sub
sbb
packuswb
shl
push
test
cmp
pushf
out
jae
das
ret
repz
aaa
pop
int3
stc
xchg
xor
inc
incb
mov
out
pop
aam
movsb
hlt
adc
lock
js
fstpl
jge
loopne
cmpsl
inc
xor
add
fisttpl
test
push
bound
cmp
and
ja
add
cltd
sahf
sub
stos
mov
mov
add
add
das
pop
mov
stos
icebp
push
and
xchg
loopne
fwait
mov
or
xor
sbb
dec
sub
aaa
dec
out
sub
stos
mov
stc
push
mov
mov
loope
xor
roll
cltd
ret
pxor
push
xlat
mov
dec
cmp
and
or
pop
xchg
add
mov
mov
inc
or
xor
pop
push
xor
ja
jmp
push
js
imul
loop
cwtl
push
dec
adc
add
lea
mov
pop
or
inc
aam
mov
and
addl
lcall
pop
adc
roll
push
add
dec
in
aaa
cld
jp
out
repz
and
mulb
sarb
das
in
push
ss
xchg
or
add
push
ret
leave
rdtsc
jp
push
loopne
int3
adc
and
fildll
mov
outsb
mov
imul
incb
push
mov
adc
adc
pushf
sbb
aaa
repnz
test
adc
lahf
adc
push
mov
in
in
fs
les
rcll
std
xor
aas
adc
enter
mov
ret
in
stc
lds
sub
aad
xor
shll
pop
loopne
xchg
aad
and
inc
mov
adc
adc
pushf
hlt
les
pop
fcmovu
sbb
idiv
in
push
cmp
sbb
jbe
roll
inc
add
pop
mov
cmp
mov
jb
dec
pop
mov
loopne
push
add
or
cmpsb
cmpsb
test
dec
inc
mov
push
or
add
pusha
repnz
jmp
movsl
pop
out
pop
sbb
imul
xor
xchg
sbb
mov
push
sbb
repnz
pop
push
sbb
mov
subb
lcall
jnp
js
xchg
aaa
inc
sub
push
out
fstps
fisttpll
jl
ret
and
mov
and
mov
lds
sub
inc
adcb
and
mov
push
popa
jmp
mov
inc
push
jbe
cmc
and
repz
mov
mov
sbb
push
je
and
jne
cmp
inc
inc
imul
rorb
popa
ljmp
push
jmp
pop
test
pop
push
push
nop
and
ljmp
arpl
in
rcrb
add
dec
cmpb
inc
add
or
dec
inc
roll
cltd
inc
dec
stc
cltd
or
stc
inc
push
add
and
repz
mov
inc
ficomps
jecxz
cmp
push
outsb
sar
inc
sub
inc
cli
add
cltd
sbb
movzwl
sbb
dec
pop
pusha
dec
sbb
add
mov
lds
scas
test
xchg
adc
stc
out
add
stos
jnp
int3
push
das
mov
adc
jg
mov
adc
adc
push
mov
cmp
mov
outsb
loope
loope
sub
cs
sbb
repz
jg
xor
push
adc
jmp
scas
dec
rcll
stos
in
mov
mov
xchg
dec
jge
push
sbb
dec
adc
or
dec
pop
stos
add
xor
cmp
mov
pop
sbb
iret
inc
add
ljmp
jmp
or
inc
and
adc
mov
pop
inc
push
into
dec
and
and
add
or
outsb
sbb
add
mov
inc
jmp
out
pop
jmp
fistl
bnd
sub
loopne
jns
jmp
push
mov
push
mov
add
xor
pop
cmp
or
cmp
divl
and
sub
jo
lods
cmpl
je
push
mov
in
mov
loopne
push
mov
dec
add
popa
and
stos
pop
into
mov
pop
fcom
je
pop
cwtl
xchg
loope
loop
sbb
dec
add
dec
adc
xchg
inc
cmpl
push
mov
ljmp
inc
lret
arpl
jno
xchg
lock
lods
inc
iret
push
inc
dec
jb
inc
loop
sub
pop
gs
sbb
pop
clc
or
int3
push
push
icebp
repz
mov
mov
stc
mov
inc
jns
pop
sub
leave
xchg
inc
imul
mov
subb
xchg
add
icebp
mov
bound
cmp
jecxz
pop
out
inc
in
or
or
mov
jmp
sti
xchg
xor
and
popf
sbb
popa
inc
xchg
adc
data16
out
xchg
xchg
sbb
push
pushf
and
lret
fwait
popa
fxch
xor
xchg
push
lock
and
add
and
push
movsl
and
adc
es
pusha
xor
jmp
repz
imul
out
jns
or
mov
aaa
cli
imul
mov
mov
adc
pusha
dec
or
cmp
ja
dec
loope
imul
mov
jbe
or
ret
push
mov
in
mov
jno
pusha
push
push
mov
cmp
cmpsb
lahf
out
in
mov
xor
jmp
push
adc
cwtl
mov
xor
in
jo
sti
jge
pop
rclb
adc
pop
pushl
leave
dec
pop
dec
cltd
bound
call
sahf
lret
add
imul
add
leave
xor
outsb
xchg
arpl
mov
jle
cmp
shrl
clc
int
xchg
xchg
mov
imul
daa
lods
inc
add
and
or
addr16
xchg
xchg
pop
pusha
std
test
or
and
ds
adc
fcomps
dec
adc
dec
ljmp
xchg
xchg
hlt
in
mov
ja
xor
lret
test
sbbb
cmp
xor
mov
fsubr
mov
mov
and
ficompl
add
push
xor
dec
mov
je
xchg
lock
lahf
push
adc
sub
jnp
das
sub
adc
dec
aaa
imul
sub
xchg
mov
lods
xor
xchg
pop
pop
mov
out
dec
mov
das
xchg
xchg
lret
push
dec
pop
adc
mov
insb
mov
or
add
jmp
mov
or
push
push
addb
insb
and
dec
inc
cmp
mov
mov
add
adc
mov
mov
cwtl
lcall
mov
mov
cmpsb
icebp
sbb
dec
sbb
mov
inc
loop
mov
enter
adc
imul
xchg
sti
orb
adc
mov
out
push
bound
cmp
or
push
test
cmp
leave
stos
xorl
es
and
fsubs
xchg
stos
sbb
in
icebp
popf
push
dec
jl
lds
push
pop
sbb
imul
shll
inc
inc
jecxz
aaa
ja
mov
movsb
das
imul
adc
shrl
push
out
and
mov
add
xchg
pop
sbb
adc
cmpsb
cmp
push
pop
or
adc
xor
outsl
scas
icebp
or
daa
nop
push
pop
rolb
daa
not
clc
adcl
test
pop
push
sub
add
pop
aad
mov
jo
add
xbegin
push
std
mov
das
inc
aas
mov
inc
cmp
xor
add
and
xor
sub
mov
fadds
stos
in
rcrl
shrl
sub
sbb
icebp
mov
xor
call
dec
sbb
shl
rcll
adc
pop
push
mov
sub
adc
adc
xchg
fcmovnu
or
imul
sub
and
or
cmp
ljmp
aam
xor
xlat
int3
add
ret
divb
leave
jl
add
xchg
aas
inc
mov
push
ret
sub
shrb
jl
or
cmp
enter
adcl
imul
pop
out
cmp
mov
mov
push
pop
add
leave
je
rcrl
xchg
fists
push
cmp
push
and
iret
add
out
cs
adc
inc
push
adc
sub
xor
inc
add
adc
xchg
fcomip
push
mov
and
test
and
push
pop
sbb
push
add
sub
sub
fistl
dec
add
dec
jns
dec
sbbb
sbb
sub
add
sub
pop
pop
or
jns
jmp
xchg
mov
out
xor
xor
or
sub
mov
jno
loop
add
clc
adc
cli
sub
jge
push
ret
jmp
pop
daa
push
mov
mov
cwtl
pop
push
bound
or
push
jne
jmp
cmp
mov
das
pop
jns
jmp
add
jg
inc
leave
mov
adc
xor
pop
lcall
xchg
shr
sahf
bound
mov
inc
push
pusha
sub
sub
jne
add
sbb
jp
sbb
fwait
xchg
nop
dec
add
xchg
icebp
jne
out
fs
scas
cli
stos
sbb
pop
xchg
dec
pop
mov
sbb
adc
sbb
lods
cmp
add
es
mov
xchg
xlat
adc
adc
and
cmp
inc
adc
or
adc
sub
or
aad
or
mov
pop
or
dec
xor
incb
xchg
icebp
jmp
xchg
stos
xchg
mov
jmp
notl
xchg
cmp
loope
push
lret
insb
ljmp
inc
cwtl
fisubs
bound
int
jmp
aas
push
inc
divps
mov
sub
inc
dec
shll
pop
scas
xchg
test
stc
mov
mov
xor
lods
mov
shrl
rolb
sbb
loop
sub
clc
dec
mov
sub
dec
gs
push
cmpsb
lahf
adc
xchg
sub
sbb
cli
loop
shrb
stos
inc
fwait
cmc
aad
jmp
inc
push
daa
out
sub
cmpsb
and
xor
mov
inc
out
jbe
mulb
pop
mov
cmp
pop
xchg
jecxz
push
mov
fdivl
daa
jmp
enter
xchg
shl
stc
ljmp
adc
in
popa
shlw
sbb
add
pop
lock
popf
in
es
shll
mov
inc
cmp
lahf
jno
mov
and
dec
fiaddl
setb
add
pop
push
dec
sarl
push
repz
aas
xchg
jecxz
sub
or
jmp
insl
mov
pop
jbe
std
test
insb
cmp
dec
les
mov
sbb
mov
inc
f2xm1
add
pop
mov
xor
das
out
std
lret
pop
adcb
sub
add
orl
pop
mov
ret
jmp
cmc
fbstp
ljmp
aad
mov
inc
sbb
cmpb
out
add
outsw
xor
sbb
into
jmp
hlt
mov
neg
dec
jmp
mov
jnp
testb
lods
add
pop
pop
neg
push
mov
push
jle
lds
out
out
lret
mov
add
shl
outsl
popf
lds
nop
add
jle
jge
add
test
mov
sub
cmp
sysexit
test
mov
push
mov
xlat
out
or
jmp
push
jns
imul
pusha
pop
jmp
call
and
sbb
adc
add
adc
pusha
sbb
and
mov
pop
pop
hlt
or
sbbb
decl
or
js
fldenv
pop
in
and
and
sub
dec
out
dec
outsl
xchg
jmp
dec
push
cwtl
fistl
jb
lods
insb
out
push
jmp
stos
pop
inc
pop
das
xchg
and
xchg
lahf
ffreep
fs
in
add
mov
sub
adc
fucomip
dec
push
lds
and
add
lods
push
add
es
nop
das
iret
in
add
arpl
cld
xor
jg
ds
dec
lahf
scas
pop
iret
fistpll
pushl
cld
adc
dec
cld
xor
push
out
jmp
add
or
sbb
andb
out
pop
subl
pop
add
ljmp
add
mov
shlb
andl
aam
push
aam
das
lock
fcomi
cmp
jl
push
enter
pop
jo
daa
add
sub
shr
push
movb
ret
jge
mov
fcoml
and
stos
xorl
fiadds
dec
jne
shl
adc
sub
mov
adc
cmp
jle
es
jo
fdivp
stos
pop
lds
ljmp
cmc
pusha
sbb
jmp
daa
loope
pop
dec
outsb
dec
and
fmul
and
cmp
mov
lods
xchg
xchg
xchg
sub
or
add
sbb
jb
cmp
cmpsb
add
sarb
int3
mov
fistl
dec
add
mov
mov
aas
imul
into
xchg
jne
arpl
loopne
insl
enter
or
outsb
lcall
scas
push
pop
xchg
inc
mov
push
push
mov
pop
ds
jns
arpl
inc
pop
jmp
out
popa
jb
sarb
js
test
addb
and
jecxz
mov
into
mov
inc
xchg
pop
sub
dec
fs
or
cmpsl
or
push
jne
jle
test
movsl
int
pop
nop
cld
imul
push
add
pop
cld
cld
mov
mov
or
push
and
adc
lods
dec
fldt
xor
xchg
outsl
pop
sub
jb
popa
xor
scas
add
add
je
pop
sub
pushf
xchg
or
in
xor
or
sub
push
and
inc
sub
mov
jmp
out
xchg
ljmp
out
mov
and
add
push
out
lahf
or
push
lret
int3
fbld
test
jns
and
sub
push
or
enter
cmp
fcomi
dec
rcr
adcb
leave
outsl
and
cmp
add
push
mov
sub
andb
adc
add
add
test
ret
dec
dec
mov
xchg
loopne
push
lods
add
dec
push
push
lods
xchg
sbb
dec
dec
and
clc
cltd
xor
or
pop
clc
and
add
xchg
shrb
pop
negb
dec
inc
je
adc
repnz
iret
add
and
or
xor
mov
das
pop
mov
iret
add
pushf
inc
xchg
jecxz
cs
lods
sub
or
mov
mov
aaa
cld
js
add
pop
mov
sub
test
mov
adc
mov
or
and
sbb
out
lea
cmp
imul
mov
pop
cmp
or
iret
sbb
or
adc
jle
add
xchg
add
inc
stc
add
jmp
inc
cmp
mov
ljmp
clc
cmp
xchg
lods
sub
inc
scas
aaa
cld
mov
inc
testl
rorb
jg
pop
lahf
mov
sub
cltd
mov
scas
push
test
mov
xor
and
or
in
shlb
sbb
or
adcb
adc
int
sbb
arpl
push
popf
insb
aas
push
inc
aas
add
mov
inc
pop
xor
fwait
lea
pop
popf
andl
pop
or
pop
xorb
lahf
mov
cltd
add
sub
clc
loop
mov
outsl
adc
cs
pop
das
or
mov
adc
ja
fdivs
pop
je
pusha
mov
dec
sbb
jo
adc
and
pop
add
jl
pushf
add
scas
or
std
push
mov
pop
sub
mov
lcall
xchg
push
lret
lock
repnz
inc
xor
cmp
addb
lahf
lcall
pusha
mov
test
fcompl
push
jl
add
icebp
cmp
lock
fistpl
inc
add
cmp
mov
sub
mov
lahf
add
inc
cld
iret
adc
inc
dec
cld
cmp
jo
add
xchg
lock
xchg
loop
test
cmp
call
xchg
outsl
insb
push
sub
push
pop
pop
in
sub
pop
int3
jp
insb
repz
jp
lods
dec
testb
ret
ret
or
jne
or
mov
sub
lret
push
xor
pop
lcall
jg
xor
iret
sub
cli
mov
fsubl
insl
and
and
xchg
notl
xchg
xchg
lret
push
jp
cwtl
push
xchg
sub
jge
mov
add
push
sub
pushf
or
or
push
add
adc
cs
sub
jecxz
jnp
xor
add
lret
scas
mov
inc
push
inc
iret
incl
push
inc
jl
nop
ja
inc
incb
sub
push
lods
dec
push
mov
daa
rclb
sub
pop
sbb
dec
xchg
leave
pushf
xchg
mov
bound
pop
cs
jmp
xorl
aaa
sub
add
movsb
dec
idivb
adc
hlt
cmp
bound
out
pusha
mov
jae
push
or
jmp
pop
push
mov
mov
shlb
sub
pop
push
push
int3
or
das
dec
push
icebp
enter
cmpsl
fstps
cmc
mov
ljmp
jp
and
cld
push
add
ss
out
add
mov
gs
bound
inc
mov
mov
xor
mov
jns
out
pop
mov
lock
popa
movsl
xor
cwtl
jg
mov
test
dec
cld
sub
pop
mov
mov
and
call
mov
sbb
je
leave
clc
sbb
dec
ds
push
sub
jmp
cmp
jb
imul
in
add
fs
pusha
dec
jmp
arpl
mov
pushf
pop
jl
inc
pop
or
add
call
mov
subl
xchg
cmpb
or
inc
cmpsl
pop
add
pusha
les
and
cli
sti
ds
xchg
mov
push
push
or
xorps
xchg
cmpsb
out
jg
daa
adc
lret
sbb
addr16
push
enter
xor
pop
pop
movswl
andb
adc
popf
fildl
mov
xchg
or
lea
loopne
fstl
mov
jbe
and
jae
cmpsl
shr
loop
rcl
push
or
mov
cmp
std
cli
xlat
inc
adc
or
je
ja
mov
lcall
aad
fisubs
jecxz
mov
cs
pop
cmovs
dec
test
aas
scas
jbe
test
xchg
lahf
add
neg
push
mov
xchg
popf
xlat
add
in
push
push
subb
adc
add
mov
mov
and
cli
xor
test
ljmp
xor
repnz
das
sbb
push
out
push
aas
movsl
cmp
xchg
xor
add
dec
fstl
ljmp
cmpsb
cmp
push
cmp
jns
push
fcoms
mov
pop
add
pusha
test
outsb
in
jmp
sub
mov
adc
add
or
cltd
mov
mov
icebp
lret
push
pusha
mov
xchg
push
pop
mov
jbe
ljmp
mov
cmpl
inc
xor
push
jmp
popa
jns
decb
sub
insl
push
sub
cmp
cmpsl
mov
lcall
jmp
jb
mov
cmpsb
xchg
adc
jmp
or
push
cmp
add
mov
mov
shr
xor
orb
outsb
sbb
daa
pop
pop
lahf
ret
testb
add
fdivp
mov
loop
xor
jmp
fidivrs
jmp
out
mov
sub
bound
repz
push
jmp
add
mov
shl
shr
cmp
hlt
push
push
xor
or
aam
jecxz
jno
push
pop
cmp
in
adc
add
sub
xor
js
imul
jmp
ret
stos
adc
inc
or
ss
or
dec
mov
mov
push
mov
test
mov
mov
jmp
sub
pusha
repnz
cld
aas
dec
xor
push
movsl
push
mov
xchg
xchg
testb
daa
adc
stos
lock
dec
nop
jmp
clc
cmp
lahf
sti
jno
dec
stos
sub
jmp
fwait
jl
dec
enter
insl
in
mov
ja
insl
sbb
subb
out
mov
punpcklbw
pop
inc
sub
gs
xor
push
lds
inc
and
xor
jae
loope
pop
xchg
fadd
jne
dec
fs
sti
cmp
or
add
pop
pusha
inc
push
dec
push
adc
add
sub
jno
pop
xor
inc
sbb
pop
mov
lds
pop
not
scas
aaa
xlat
pusha
cmc
mov
lock
loope
es
js
ret
sub
push
test
repnz
daa
jae
repz
and
or
push
lea
test
pop
push
iret
pop
cli
push
shlb
push
push
ja
nop
clc
dec
mov
or
mov
jb
repnz
xor
pushf
pop
mov
add
xchg
push
mov
or
lret
jmp
cmp
out
fstpl
and
fbstp
cltd
push
mov
mov
pop
cwtl
ret
cmp
mov
incl
imul
inc
jmp
pop
pop
ret
outsl
test
mov
subl
or
pop
push
sub
mov
cmpsl
pop
stos
xor
arpl
pop
pop
cmp
pop
mov
fcompl
jmp
push
adc
xchg
sub
hlt
dec
push
in
rorl
sbbb
nop
push
ret
adc
jmp
add
mov
not
add
lcall
cmc
cmp
rorb
cmc
nop
jno
mov
sti
ficompl
popl
aas
jb
test
ret
jmp
push
dec
movswl
out
push
adc
addr16
pop
insl
leave
sbb
inc
dec
adc
cmp
js
sbb
popa
outsb
adc
iret
push
neg
add
or
push
je
roll
sbb
xor
repz
hlt
dec
and
adc
push
push
lods
pop
loopne
ljmp
cmp
or
xchg
aaa
inc
mov
or
nop
ret
enter
pop
shr
xor
jns
adc
orl
jle
arpl
out
dec
fdivrs
mov
mov
sub
les
jmp
jmp
negb
loope
and
rorl
push
ja
test
or
pop
cld
ret
test
or
sub
xor
mov
in
inc
or
jmp
pop
sub
loop
add
fstpl
ret
add
idivb
mov
lds
fidivs
leave
outsl
or
ret
adc
nop
sub
in
mov
or
in
pop
mov
sub
ja
mov
xchg
or
lret
ss
fmuls
inc
pop
in
lock
jle
and
xchg
test
mov
cmp
mov
mov
or
sub
cwtl
dec
jno
subl
adc
loope
mov
xor
cmp
sbb
sti
or
push
clc
jmp
push
dec
xchg
push
aaa
inc
lret
das
push
xchg
lods
andl
pushf
add
mov
sub
adc
jmp
jmp
into
rcr
mov
mov
adc
mov
or
dec
test
lret
sub
jmp
int3
rorb
mov
aad
popa
dec
push
or
jecxz
mov
cmpsb
mov
ret
pop
sub
mov
aas
repnz
and
test
roll
incl
in
adc
mov
inc
and
push
push
out
mov
or
push
outsl
pusha
out
push
mov
scas
jmp
cmpsb
pop
lods
pop
dec
mov
outsb
test
repnz
push
rolb
dec
cmp
dec
stos
mov
inc
loopne
pop
xor
mov
fidivrl
xor
push
idivb
or
mov
add
inc
sub
mov
xchg
push
jae
cmp
mov
sbb
pop
add
sub
sub
fwait
jb
xlat
fbld
aam
jmp
pushf
and
jge
inc
test
dec
cmp
repz
jmp
cmp
in
data16
lock
xchg
xchg
pop
ds
aas
subb
out
xor
test
in
push
and
shr
fcomps
add
inc
mov
add
and
sahf
ds
jl
lods
popf
negb
adc
roll
or
push
pop
pushf
sub
inc
dec
test
inc
xor
repz
mov
jbe
gs
repnz
loopne
dec
pop
hlt
cmp
sub
sub
lret
jmp
pusha
mov
push
inc
and
ljmp
mov
lahf
dec
jp
cmp
imul
adc
test
negl
jmp
mov
insb
scas
push
xchg
mov
test
or
push
inc
data16
push
rorb
dec
cs
add
adc
stos
xchg
pusha
cmc
cs
pusha
add
xchg
jbe
pop
roll
add
in
jo
pusha
pop
fs
and
dec
mov
xor
pusha
pop
push
push
sbb
insl
dec
dec
and
push
or
dec
clc
fucomip
jmp
dec
shl
sahf
sbb
adc
xor
xor
shrb
pusha
rcl
test
dec
jmp
aaa
mov
in
lods
mov
subb
or
pop
xchg
adc
adc
lock
pushf
mov
les
andl
dec
adc
loop
add
icebp
cmp
pop
jmp
inc
xor
ja
movsb
jmp
xchg
jnp
adc
ja
cs
outsl
addr16
pop
sahf
cmp
mov
and
cld
cmc
rolb
mov
xor
les
dec
repz
mov
fnsave
sti
shl
push
sub
push
push
daa
pop
add
popf
rcl
lahf
lock
push
xchg
or
lcall
ljmp
push
pop
xor
or
jmp
shl
add
loope
xor
add
push
loopne
cwtl
mov
or
sub
ret
icebp
pop
pusha
test
mov
js
mov
aas
xchg
or
jmp
and
push
addl
xchg
jge
push
mov
jbe
sub
mov
and
shl
mov
jecxz
movl
mov
lcall
add
mov
pop
mov
imul
scas
sahf
jl
cmpsb
rclb
aam
push
adc
add
sub
jne
mov
iret
rorl
shl
inc
cmpsb
sub
mov
jge
leave
mov
mov
loope
xor
loope
insb
decb
ret
mov
or
xor
cld
cmp
fwait
mov
mov
push
pop
and
push
add
dec
add
shl
jae
jmp
loopne
push
mov
and
jmp
add
pop
out
add
out
ljmp
jae
add
fs
adc
xor
mov
xchg
repnz
rorl
jg
jne
push
push
pop
or
jmp
add
sbb
pushl
push
mov
dec
jbe
sbb
and
mov
or
push
outsl
daa
subl
shrb
or
pop
or
pop
add
or
imulb
and
inc
and
mov
mov
adc
es
pop
add
jb
popf
je
orb
mov
neg
cli
rcrb
mov
test
mov
outsb
rcrl
pop
push
ret
or
push
icebp
push
fadd
or
fdivrp
adc
mov
out
dec
mov
inc
or
push
pop
lods
mov
imul
cmc
adc
nop
out
je
sahf
aas
pusha
cmp
dec
sbb
or
xchg
in
jge
adc
sub
adc
rorl
icebp
roll
icebp
mov
in
nop
ss
repnz
rorb
mov
add
cmp
dec
push
call
inc
mov
ds
into
aad
inc
xchg
mov
xor
inc
push
jmp
imul
mov
cmp
sub
stc
or
or
mov
jbe
jb
mov
mov
movsl
push
xchg
testb
pusha
dec
jmp
jmp
pop
push
inc
repnz
xchg
add
jge
push
repz
pushf
popf
adc
sub
out
cmp
jo
test
repz
add
pop
pusha
sbbb
insb
inc
mov
or
movsl
or
call
hlt
dec
pop
out
pusha
add
push
cwtl
sbb
jno
mov
inc
ss
mov
pop
inc
inc
cwtl
scas
or
bound
dec
inc
jg
test
mov
cmp
sub
add
pop
dec
imul
adc
pop
mov
mov
ljmp
cmpsl
add
add
xchg
push
add
addb
mov
shl
add
mov
xor
and
xor
ja
add
cmp
neg
push
call
pop
dec
mov
or
pop
inc
push
sbb
les
mov
jle
adc
fwait
add
pop
aas
addb
or
pop
mov
cld
push
inc
pop
jmp
push
push
push
and
scas
jno
add
cwtl
jno
mov
push
xchg
daa
lcall
cmpsb
mov
movsb
js
or
dec
bound
loop
cmpsb
cmp
movsl
lods
inc
xor
and
mov
push
and
jg
in
dec
mov
mov
adc
or
xchg
adc
mov
or
add
sub
mov
add
popl
cld
add
aad
rolb
sub
or
push
jge
and
and
add
outsl
nop
adc
stos
push
jno
leave
aad
or
rcll
call
mov
loopne
cwtl
mov
pop
aaa
add
mov
adc
ljmp
punpckhwd
js
inc
les
lahf
or
js
popf
int
add
fsubrs
sbb
imul
gs
test
dec
mov
jns
adc
std
push
adc
pop
add
stos
icebp
dec
cmp
pop
cmp
je
dec
popa
movsl
adc
out
push
cmc
or
jno
pusha
add
cs
mov
lahf
pusha
sbb
add
addr16
jp
jge
cmpb
push
andb
adc
and
rcll
sub
or
das
mov
mov
daa
sub
lcall
lahf
jns
das
shll
and
es
lret
call
lock
cmp
mov
add
shrb
sbb
flds
or
adc
mov
sub
shrb
das
out
inc
dec
and
roll
pop
mov
fisttps
clc
jmp
cltd
jg
aad
in
repnz
test
mov
aas
not
xchg
scas
cmp
in
sbb
roll
jmp
lock
xchg
int3
sub
popa
dec
mov
mov
cmp
repnz
pusha
sub
inc
loop
or
pop
dec
je
and
or
sbbl
nop
testl
or
sub
jbe
sbb
dec
jge
movsl
scas
fisttpll
cmp
lret
movsl
fyl2x
and
cmpsb
and
ret
gs
pop
lahf
jae
and
pop
popa
popf
ret
jmp
push
sbbb
pop
dec
mov
inc
xchg
push
fdivl
fidivrl
push
xor
aaa
push
out
mov
mov
jecxz
add
mov
add
xchg
es
dec
ds
cmpb
and
daa
andl
xor
movsbl
enter
inc
sarb
adcl
cs
push
add
popa
jmp
rorb
insl
add
jmp
push
in
push
test
shlb
loope
in
dec
icebp
add
clc
add
testl
loope
pop
scas
fisttps
faddl
adc
or
jg
mov
or
adcb
push
mov
xor
nop
dec
sub
or
jmp
ret
and
and
lret
negb
jmp
dec
or
aam
and
mov
cs
push
aad
jecxz
es
xor
mov
test
inc
cmpsb
ja
push
add
jmp
frstor
jne
dec
adc
sbb
adc
aas
loop
ret
rorb
mov
test
shr
adc
dec
out
push
xchg
popa
xor
lret
mov
dec
adc
and
mov
adc
out
adc
sub
cvtdq2ps
sub
testl
cmp
push
ds
dec
shl
test
out
ret
lock
xor
ficoml
ret
or
and
fidivrl
pop
mov
nop
lods
jae
outsl
mov
in
mov
loope
fcompl
roll
test
stos
popa
adc
adc
sub
cmpsl
fcmove
sbb
test
inc
leave
stos
andb
cmp
dec
dec
cld
dec
jnp
addr16
fiaddl
enter
mov
jg
jmp
cld
lds
inc
sti
mov
xor
lock
push
sub
jno
dec
sbb
nop
jns
int3
pop
mov
inc
outsb
leave
sub
or
pop
jnp
clc
stos
jg
and
sub
and
scas
je
mov
out
adc
lea
test
push
jmp
dec
adc
cmp
push
cmp
ljmp
ljmp
sbbb
int
je
sub
add
inc
inc
es
inc
sbb
in
push
aam
clc
movb
adc
ret
jg
das
popl
jmp
sub
ret
inc
push
or
sbb
bound
adc
cmp
pop
imul
stos
std
jg
bound
add
ret
imull
je
out
push
xor
cmc
inc
jmp
pop
jl
add
mov
cli
les
inc
or
sar
notl
loopne
xlat
add
and
std
cwtl
addr16
das
dec
in
adc
jo
lods
jbe
add
sub
sub
das
jmp
loopne
push
add
shr
sub
andl
daa
lret
mov
sub
cmp
aad
sbb
cmp
push
lret
mov
aaa
adc
sbb
arpl
xor
adc
sub
push
or
inc
mov
push
int
jae
inc
or
outsl
jl
push
add
ret
insl
dec
mov
popf
pop
xor
pop
cmp
shrb
adc
sub
mov
ljmp
out
arpl
shl
cmp
add
pop
dec
pop
aam
mov
jmp
mov
or
mov
sahf
push
enter
push
pop
fbld
in
std
jmp
inc
xchg
shl
rorb
push
add
ds
lock
jmp
pop
ret
les
shr
icebp
vpsubd
mov
fdivrl
in
push
sbb
pop
imul
sub
xor
rol
and
add
sub
push
arpl
mov
adc
sbb
add
xchg
pop
das
sub
or
repz
shll
or
ja
sbbb
in
dec
outsl
test
loopne
icebp
imul
data16
pop
jl
sbb
sub
xor
pop
push
cld
sbb
mov
outsb
cwtl
or
push
pop
lock
shl
ljmp
lcall
jo
xchg
sbb
gs
xor
fbstp
inc
xchg
mov
les
ljmp
pop
mov
add
shrb
xor
sub
cmp
ret
xchg
les
xchg
inc
add
les
pop
push
mov
sub
ljmp
gs
mov
add
ja
pop
pop
inc
mov
jmp
adc
push
bswap
xchg
or
push
mov
adc
push
or
imull
shl
test
neg
shr
sub
ucomiss
pop
adcb
xor
cld
or
out
subl
add
push
xor
testl
mov
jecxz
push
add
mov
shl
xor
inc
dec
mov
push
push
pop
shr
or
enter
cmp
pop
into
out
ljmp
jecxz
lret
movsl
jns
insb
sub
in
jmp
test
test
aaa
lahf
inc
sub
mov
sub
inc
sarl
and
add
dec
repz
ja
das
addb
or
xchg
clc
ret
call
mov
inc
dec
mov
imul
pusha
jmp
push
inc
shl
push
push
and
filds
std
stos
rcrb
add
icebp
inc
push
pop
das
fistl
test
xchg
out
fsubs
fcoms
jmp
test
shrb
fstps
test
movsb
push
xchg
jl
jge
or
inc
mov
push
inc
loop
sar
orb
lea
adc
pop
add
mov
jae
stos
stos
mov
pop
xlat
call
leave
outsl
sbb
imul
inc
insb
xchg
je
pusha
das
or
pop
and
jl
shrb
or
adc
inc
cmpsl
fistpll
add
dec
cmc
sahf
or
out
pop
xlat
sbb
icebp
add
lods
mov
dec
hlt
jb
int
outsl
ds
lock
cmpl
gs
sahf
jae
add
xchg
data16
movsl
cmc
sahf
adc
jmp
and
mov
pop
sbb
int
lds
stc
inc
idiv
rol
and
ljmp
test
sub
dec
pop
shl
shrl
les
dec
mov
mov
mov
adcb
mov
stos
dec
pop
adc
cld
inc
add
mov
cmpb
aaa
cli
inc
add
stos
enter
fstl
sbb
mov
sbb
out
push
shrb
mul
icebp
insl
mov
jp
gs
add
dec
mov
xor
mov
in
test
addr16
sarb
mov
mov
adc
incl
inc
sub
jmp
add
mov
lock
push
sbbl
xchg
push
or
pop
repz
inc
iret
popa
cmc
fisubrs
jns
pop
addr16
gs
fs
cmp
repz
jmp
pop
and
jg
sub
mov
mov
jmp
inc
ror
adc
sub
add
mov
out
dec
dec
aaa
xchg
jmp
cmc
movsb
movsb
and
or
ja
add
add
lret
xchg
xchg
jmp
pop
std
sbb
rcrb
cmp
jmp
xchg
push
clc
push
adc
idiv
and
push
cltd
pushf
jle
lods
lret
mov
icebp
cmc
aas
test
pop
mov
test
aam
add
and
push
mov
xor
xchg
fdivrl
jno
mov
stc
int
dec
icebp
mov
and
andl
and
out
out
jbe
and
pop
lahf
dec
cmpsb
leave
xor
dec
jle
push
add
jmp
xor
pop
push
inc
arpl
and
adc
lea
jns
or
pop
adc
mov
or
dec
adc
insb
inc
fisttps
jg
rol
lea
pusha
xor
in
add
adc
in
push
mov
jno
and
sbb
icebp
or
cmp
js
rorl
mov
xor
push
and
shl
push
add
sub
in
inc
imul
cmpsl
sub
push
jmp
scas
inc
cmp
pop
add
pop
subb
or
test
add
push
add
lahf
movsb
jecxz
push
cmp
add
icebp
add
rclw
inc
dec
add
cmp
stc
cmp
mov
xchg
mov
mov
push
and
add
push
mov
cwtl
add
inc
sub
mov
push
hlt
dec
jl
pop
or
xchg
xor
jmp
shl
jns
cmp
dec
mov
add
movsl
or
add
or
orl
sbb
pop
popf
mov
shll
sahf
and
pop
movsl
mov
adc
je
mov
arpl
sub
lock
xchg
mov
fldt
push
js
lret
push
fwait
pop
mov
aam
scas
or
popf
imul
imull
outsb
push
add
call
push
dec
mov
xor
ljmp
pop
sub
mov
xchg
pop
mov
dec
adc
pushl
cmpsl
xor
test
aaa
int3
adc
mov
shl
inc
sub
sub
jle
shll
inc
or
inc
pop
ret
sarl
push
pop
xchg
dec
mov
xlat
lret
insb
adc
mov
lea
cld
sub
loop
popf
push
mov
roll
out
jge
sbbb
pop
and
add
js
dec
xor
sbb
movsb
and
adc
shll
push
jo
in
jmp
mov
sti
push
push
aad
imul
addr16
push
imul
push
das
push
aas
lods
fildll
inc
clc
mov
push
pop
andb
jp
inc
rol
scas
fwait
pop
or
cmp
test
jl
jmp
scas
mov
aad
aam
and
enter
movsl
cli
add
outsb
xchg
adc
lret
xor
dec
xchg
cld
inc
in
out
testb
inc
mov
pop
lcall
int
cmp
cmp
int
repnz
shlb
pop
fidivrs
flds
push
mov
js
push
pop
fnsave
repnz
cmp
xchg
mov
mov
mov
pusha
je
add
repnz
and
inc
xchg
ret
cld
ficoml
arpl
add
pop
pop
dec
jmp
pop
in
jmp
jmp
aad
pop
push
push
fldt
insb
stos
add
and
xchg
dec
scas
sbbl
mov
lret
jmp
inc
pop
lret
or
leave
in
insb
sbb
push
fsts
aaa
cltd
fs
nop
adc
dec
sub
in
mov
cld
cmp
sub
sbb
jbe
es
dec
jns
sbb
add
mov
or
lea
mov
or
aad
inc
lds
jmp
push
outsl
inc
test
jmp
pop
push
fldl
sbb
mov
cmp
lahf
imul
and
push
aam
adc
clc
push
int3
and
push
scas
jne
scas
les
pop
scas
jge
loope
sub
and
cwtl
sbb
mov
out
adc
push
scas
pusha
pusha
sbb
inc
and
cs
add
sbb
mov
mov
pushf
mov
mov
js
subb
data16
imul
test
decb
adc
mov
std
xchg
add
sub
cld
sarl
loope
cs
mov
negb
add
pop
pop
inc
dec
add
rcl
push
push
pop
pop
mov
in
cmp
pop
loopne
cmp
push
add
insb
xor
es
incb
fsubrl
mov
testl
pop
add
fnstenv
xchg
lods
xor
fdivrs
jnp
out
shll
mov
lcall
and
dec
pop
out
mov
sub
adc
pop
shll
cs
mov
mov
stos
sbb
push
xor
adc
call
mov
add
scas
sbb
loope
or
or
dec
xor
inc
xchg
jecxz
ja
add
add
shrb
inc
pushf
sub
lock
push
notb
popf
or
mov
push
pushf
add
pop
dec
jae
ss
ret
int
sub
sub
or
and
imul
in
rcll
ljmp
add
imul
or
sub
sub
loope
psubsw
pop
roll
pop
mov
or
shrb
sbb
xchg
dec
push
sub
dec
aam
inc
aam
pop
and
call
push
mov
imul
lret
xchg
mov
arpl
push
jl
xchg
dec
add
loope
pop
pop
sub
pop
mov
cmpl
mov
xchg
adc
add
icebp
mov
and
jne
push
shlb
add
pop
push
mov
ds
icebp
iret
add
sub
imul
pusha
mov
aas
sbb
scas
sub
out
add
push
push
mov
mov
pop
in
hlt
dec
movsl
mov
clc
arpl
adc
cmpsl
outsl
jp
sub
out
pop
mov
or
or
dec
cli
pop
in
pop
and
std
shl
push
and
dec
inc
or
inc
or
into
out
daa
and
and
enter
jge
fwait
xchg
add
movsb
xor
or
js
fildl
outsb
push
das
mov
mov
ss
xor
pop
rolb
pop
stos
loopne
pop
adc
insb
push
or
and
hlt
add
xor
add
loop
sub
pop
push
mov
mov
inc
or
jmp
jno
imul
fistpll
jmp
mov
mov
xor
icebp
jmp
sbb
fildll
ja
jbe
jmp
jp
add
mov
sub
inc
int3
jbe
in
iret
inc
std
enter
orb
cmp
pop
mov
mov
in
lahf
pop
aaa
call
les
mov
cmp
mov
fidivrl
rol
stos
leave
mov
pop
inc
inc
sbb
fsubl
pop
push
push
xchg
std
pop
push
test
jge
repz
push
mov
pop
add
sub
push
out
pop
iret
pop
inc
into
ficoml
out
enter
inc
jmp
sub
cltd
sub
dec
push
mov
mov
lcall
pop
push
nop
cmpsb
lahf
or
movsb
add
icebp
mov
ret
or
pop
rcll
incl
gs
and
sarb
scas
imul
cmp
mov
pusha
popf
push
push
pop
pop
adc
sub
in
hlt
push
adc
jmp
and
inc
fldcw
push
mov
scas
aam
orb
fs
xor
adc
loop
add
pop
push
push
cs
jb
test
mov
xor
and
pop
arpl
or
sahf
aaa
pusha
bound
inc
pop
imul
popa
add
pop
add
stos
int3
dec
push
sub
clc
outsb
lret
adc
sti
addl
xor
push
pushf
push
xchg
jle
push
inc
rcrb
lcall
jo
push
xchg
add
insl
sub
std
roll
lea
gs
inc
sar
aad
mov
add
dec
mov
inc
add
mov
arpl
xor
mov
pop
and
shll
je
and
pushf
mov
fdivr
cmp
dec
pop
jmp
pop
mov
repz
mov
in
jmp
call
movsl
scas
dec
inc
or
shld
xor
movsb
shrl
pushf
mov
xor
aam
mov
lods
push
pop
cmp
cmp
xchg
pop
sbb
add
jmp
pop
popf
testb
jno
arpl
pop
xchg
add
int
mov
jne
movsb
or
lods
inc
cmpsl
in
xchg
les
repz
cli
push
push
in
repnz
in
scas
adc
mov
faddl
jl
mov
sub
mov
and
jnp
push
sub
outsl
sti
popa
adc
imul
les
xchg
jns
mov
dec
repnz
add
pop
xor
ror
loopne
xchg
push
and
ret
fwait
shl
xchg
adc
aaa
stos
ret
pop
mov
pop
cli
sub
pop
push
add
mov
clc
adc
push
lret
jg
mov
add
cmp
jbe
or
pop
adc
sbb
or
add
rolb
or
orb
sub
pop
pop
cmp
cld
lahf
add
testb
and
insl
pop
sbb
aam
dec
jbe
scas
ja
popf
lret
dec
xchg
sbb
mov
fwait
test
dec
or
sbb
fstpl
fdivs
inc
sar
inc
pop
ljmp
loopne
test
add
nop
jno
adc
or
xor
pop
xor
pop
les
mov
push
jg
scas
lret
lods
movsl
pop
inc
xlat
push
lret
sahf
dec
jmp
cmpsb
cwtl
js
jecxz
rorb
lock
mov
adc
mov
pop
and
addr16
repnz
jmp
imul
and
stc
out
dec
clc
push
sub
divb
repnz
pop
push
sub
cmp
arpl
and
mov
stos
add
adc
dec
and
nop
mov
imul
sbb
and
addr16
cwtl
add
psadbw
lods
jno
sub
add
jle
push
lret
adc
jmp
xchg
xor
pusha
lret
int3
inc
sbbb
jg
ffreep
outsl
push
lcall
insb
in
pusha
shll
pop
push
ja
jmp
outsl
xchg
mov
push
sub
or
cmp
fists
mov
imul
push
cmc
cmp
test
xchg
pop
cmp
jg
ds
lret
divb
stos
lock
mov
add
popa
and
loope
pushf
mov
mov
sbb
or
out
jns
adc
pop
decb
je
push
les
jecxz
out
sub
push
jno,pn
jnp
ljmp
pop
out
pop
inc
add
cmp
add
adc
add
out
pop
push
push
ret
and
or
lods
push
in
jecxz
lcall
xor
ja
mov
or
or
shl
repnz
cmp
clc
jae
add
dec
xor
fcoml
push
shrb
jmp
test
mov
sbbb
aaa
jg
movsb
ret
testl
dec
loope
ja
xchg
xlat
inc
xchg
out
fisubl
push
cmp
mov
sub
insl
jge
dec
xchg
je
sub
in
xlat
xchg
hlt
in
in
loopne
mov
loope
sbb
or
repz
in
mov
aad
push
add
fldcw
and
jle
scas
outsl
shl
clc
test
xchg
outsb
mov
mov
cmp
shr
push
xor
pop
insl
or
call
dec
mov
orb
adc
push
pusha
and
push
or
mov
ljmp
scas
or
xor
sub
out
and
lahf
jle
outsl
rcll
je
sbb
cmc
addb
push
mov
inc
and
or
adc
inc
sub
call
inc
cmp
negl
dec
jle
xor
dec
inc
cmp
dec
std
sub
push
adc
dec
out
and
clc
inc
mov
or
div
mov
add
pop
add
pop
out
imul
pusha
jno
or
add
leave
insb
fnstcw
add
fs
adc
push
popf
push
aaa
nop
push
mov
mov
leave
mov
mov
lahf
clc
iret
jns
das
or
jae
dec
ficompl
nop
jge
rcr
mov
push
jp
arpl
dec
inc
push
ret
jns
iret
mov
add
pop
push
add
push
jge
push
jge
mul
or
mov
mov
movb
pop
pop
call
insb
sti
mov
mov
sub
in
pop
sbb
lret
fcompp
jmp
jecxz
adc
jecxz
stos
or
add
push
das
lods
jle
add
pop
push
lret
jmp
push
sub
jp
mov
push
ja
xchg
outsb
and
dec
xchg
loope
rorl
insl
xor
pop
bswap
sbb
into
fistl
mov
int3
ret
faddl
mov
jmp
cmp
daa
xchg
pop
cmp
pusha
pop
loopne
cmpb
push
jo
out
mov
ret
or
adc
push
testb
push
js
pushf
sbb
jge
adc
xchg
or
imul
mov
aas
mov
iret
xchg
jbe
shll
pop
mul
mov
outsl
mov
jbe
into
or
xor
dec
push
aaa
clc
in
lahf
push
aas
inc
mov
fsubrs
pusha
ret
pop
adc
rcrb
xchg
jae
popa
fisubs
mov
pop
loop
dec
fimull
sub
xchg
dec
dec
xor
cmp
lahf
add
mov
mov
pop
std
sub
xchg
mov
mov
push
sbb
mov
inc
inc
mov
pop
inc
cmp
iret
cld
rdmsr
inc
orb
es
or
mov
pop
psllq
ljmp
inc
dec
inc
test
xchg
bound
dec
add
int3
or
icebp
shll
pop
mov
jge
out
pop
push
in
popa
je
dec
mul
cmp
pop
ds
add
jg
push
adcb
dec
xchg
jmp
pusha
daa
int3
mov
or
test
daa
out
sub
pop
sub
out
dec
hlt
mov
std
mov
push
lock
pop
adc
xor
jmp
lahf
inc
mov
sub
adc
loope
add
ret
xchg
lods
add
jmp
es
ret
ret
add
shrl
jb
mov
loop
fs
xchg
fnstcw
pop
mov
ljmp
adc
sub
jnp
jmp
mov
das
loope
xchg
popf
shrb
mov
mov
jge
mov
mov
inc
add
xchg
or
adc
rcrl
sbb
iret
gs
xor
sub
jno
dec
add
or
jmp
clc
mov
xor
pop
out
popf
or
add
neg
cmp
mov
inc
add
cmp
in
jmp
xchg
dec
shrl
dec
roll
outsl
jmp
inc
sub
neg
xchg
jo
hlt
outsb
or
xor
xor
ret
cwtl
mov
mov
or
inc
cmp
cmp
mov
sub
out
lock
adc
imul
xor
dec
push
sbb
fwait
mov
popf
cmc
inc
mov
lds
lret
dec
dec
inc
and
push
push
xor
loopne
pop
lock
cltd
xor
or
add
inc
or
jno
jg
mov
in
xor
add
push
hlt
mov
push
pop
push
shll
cmp
pusha
jne
jbe
jmp
mov
inc
or
pop
cltd
mov
mov
sahf
push
inc
push
jb
add
adc
ficompl
mov
sub
or
push
shrl
and
push
xchg
pop
or
icebp
push
jnp
and
mov
imul
lret
xchg
fs
xor
popf
daa
jbe
into
add
dec
mov
ret
scas
mov
push
cmp
addr16
add
add
adc
pop
pop
dec
jo
loopne
pushf
inc
movlps
sub
and
outsb
lahf
and
aas
orl
shlb
inc
inc
or
sub
add
xchg
js
das
push
and
lret
pop
aaa
aas
push
nop
daa
cld
ss
test
ffreep
adc
pop
test
incl
iret
sub
mov
mov
out
pop
jmp
push
out
jb
subl
mov
dec
mov
and
jp
scas
shll
push
testl
sbb
movsl
jg
pop
nop
lret
jo
lods
sub
jl
repz
pop
jb
mov
sub
imul
clc
pop
pop
push
test
ljmp
test
jp
lock
sub
mov
aad
in
movsb
push
push
fldl2t
xchg
loopne
mov
fwait
mov
js
mov
cmp
sub
stos
movsb
push
cmpsb
fstl
adc
xor
mov
jne
push
mov
push
xchg
stc
decl
call
ret
mov
dec
movswl
pusha
call
adc
addr16
enter
fnstsw
shl
jmp
and
loopne
adc
dec
sbb
push
gs
movsb
xchg
sub
arpl
push
inc
cli
cmp
out
sub
adc
cld
inc
imul
pop
or
pop
pusha
mov
les
test
add
mov
add
and
xor
data16
xor
lds
mov
les
push
rorl
pop
mov
popf
mov
jo
cmpb
push
fsub
and
stc
aad
in
shrl
or
sub
or
pop
pushf
inc
inc
repnz
pop
pop
inc
jge
in
cwtl
cmp
shlb
inc
aaa
inc
inc
mov
inc
sti
fldl
fs
add
bound
or
and
addr16
sub
rcll
or
or
or
or
lret
into
or
add
inc
add
jg
loopne
add
dec
and
xor
or
adc
inc
rclb
push
mov
int3
fsubs
aaa
shlb
sub
and
mov
push
add
xchg
or
or
clc
les
insb
mov
and
call
xchg
jns
or
mov
mov
incb
jle
cmpsb
mov
or
cltd
negb
inc
cmp
aam
nop
rcr
xchg
addr16
cltd
or
xchg
je
mov
test
xor
jns
mov
add
in
pop
add
add
add
stc
jecxz
and
dec
sub
jbe
and
lcall
test
mov
or
or
cmp
sbb
adc
xchg
imul
call
cmp
arpl
cmp
data16
cmp
out
out
lods
sub
shll
call
xor
or
add
test
int3
or
push
out
jno
and
fcoml
cmp
jno
cwtl
adc
fidivrl
filds
fistpl
sarb
jle
sbb
adc
xor
cld
movsb
fmulp
adc
mov
or
or
lea
pusha
pushf
cld
call
sub
push
inc
mov
cmp
jbe
adc
inc
add
sbb
mov
add
dec
dec
or
jne
mov
add
scas
inc
hlt
xor
orb
dec
xor
sub
push
cmpsb
mov
fcomps
pop
xor
ffree
pop
jp
orb
xor
jmp
push
pop
ja
lcall
pop
or
ja
jp
pop
in
jle
mov
pop
dec
or
xlat
cmc
cmp
cmp
inc
negb
ljmp
dec
jnp
in
pop
stos
insb
lahf
jmp
pop
pop
jmp
nop
fistps
push
xor
mov
or
jmp
xor
inc
push
pop
mov
testb
pop
das
xchg
dec
outsl
jl
mull
lret
or
clc
dec
loope
pop
cmp
movsb
mov
das
mov
xchg
clc
and
mov
xor
outsb
into
lret
bound
dec
ja
enter
mov
dec
call
add
pop
mov
mov
or
std
pushw
xor
les
jb
sub
stos
daa
inc
in
insl
ss
push
pusha
pop
daa
xchg
clc
xor
jmp
add
shrl
add
lock
cmp
and
xchg
into
repz
sbb
cmp
std
dec
mov
mov
iret
mov
cmp
and
jmp
fmul
call
in
cmp
jnp
andb
ljmp
mov
or
frstor
mov
jp
sahf
xor
jg
pop
jle
add
xchg
ja
fnstenv
std
dec
pop
xor
mov
sbb
adc
lods
dec
ja
and
pop
mov
dec
inc
dec
inc
ss
notb
popa
push
or
das
dec
or
in
movb
xlat
sub
and
or
std
push
cltd
lods
adc
add
mov
popf
xchg
stc
sti
or
pop
outsl
cmc
pop
jbe,pt
inc
push
loope
add
das
dec
lods
cmp
fiaddl
jmp
cli
inc
clc
outsb
fstl
mov
mov
mov
mov
cmp
sub
mov
mov
push
and
inc
cmpsl
ret
jle
push
cld
leave
popa
jmp
iret
dec
jo
mov
jb
inc
sub
add
jmp
das
sbb
sub
sbb
dec
add
add
shlb
dec
push
pop
mov
lock
jno
jns
sub
ret
insb
sbb
and
jnp
scas
aam
test
into
jne
in
fwait
xor
mov
push
pop
pop
mov
in
xorb
push
stc
dec
push
sbb
adc
sub
or
sahf
sub
add
and
jae
fsubrl
push
jg
push
sbb
inc
mov
jecxz
push
imul
sub
inc
dec
bnd
jnp
xchg
and
pop
xlat
sbb
movsl
or
arpl
das
sbb
cmp
pop
jbe
xor
mov
insl
shll
das
inc
or
xor
mov
and
stos
inc
push
push
sub
pop
push
in
out
pop
in
jb
xchg
add
idivl
dec
repz
repnz
push
sahf
dec
or
fisubl
push
adc
rorl
pop
fnstcw
stos
add
inc
clc
pop
push
aad
mov
lods
fcomi
gs
ljmp
pushf
fmuls
mov
push
mov
xor
ret
lcall
cwtl
je
clc
loope
mov
sbb
dec
pop
loopne
cmc
pop
mov
add
imul
jmp
xchg
or
in
cwtl
shl
ljmp
cld
imul
jnp
cmc
mov
inc
les
mov
cwtl
dec
daa
push
add
repnz
dec
or
add
stos
add
fucompp
dec
mov
pop
lock
shll
fnstenv
inc
xchg
and
fs
icebp
setge
xchg
outsb
ss
sbb
lret
ds
imul
mov
subb
out
cs
push
cmp
or
or
xchg
mov
iret
mov
xchg
addr16
ljmp
rol
scas
std
inc
lods
and
cmp
fistps
push
cmp
lea
cmp
pop
lahf
fs
pop
je
pop
ret
mov
icebp
fiadds
incb
push
pop
enter
mov
mov
fildll
mov
xchg
or
xor
clc
adc
and
in
pop
das
stc
mov
out
in
cmp
sub
les
mov
sub
ffreep
pushf
xor
sub
jecxz
xchg
cld
mov
sti
jbe
jb
add
lcall
inc
sbb
fsubrs
add
push
sub
or
ret
rorb
leave
icebp
repnz
lea
mov
adc
incl
adc
stos
add
mov
jmp
icebp
rolb
stos
add
inc
mov
jb
pop
inc
out
xchg
mov
mov
stos
pusha
pop
adc
and
sub
add
inc
dec
mov
dec
xchg
push
jge
repnz
push
pop
or
shl
jmp
out
popf
hlt
xor
add
jbe
movsl
pop
int
or
push
pop
call
jae
jo
add
inc
pusha
leave
fmuls
das
pop
and
jle
dec
xor
pop
roll
mov
dec
shrb
pop
mov
loop
mov
add
mov
jecxz
adc
inc
cmp
jb
fs
sarb
sbb
sub
jne
faddl
add
and
enter
push
jecxz
ja
pop
jmp
loop
shrb
mov
notl
mov
lods
sbb
pusha
sub
dec
subb
mov
out
sub
lret
addl
rcll
or
in
dec
sub
imul
cmp
sbb
push
sub
adcl
enter
call
sahf
jns
jmp
cs
loope
dec
aas
lret
lock
fldcw
test
mov
and
mov
icebp
or
mov
pop
pop
sub
rcrl
jo
add
mov
dec
repnz
mov
fcmovbe
pop
leave
adc
dec
inc
dec
ds
add
jb
xorb
dec
push
and
sbb
idivl
ja
xchg
testb
out
xchg
push
inc
inc
in
popf
ja
adc
push
dec
sub
repnz
push
movsl
daa
jo
mov
movsl
inc
pushf
xchg
cmp
mov
lds
outsl
scas
jno
mov
jg
orl
pop
sub
sub
pop
pop
es
pop
hlt
pop
test
outsw
pusha
imul
sub
into
xor
fwait
mov
cltd
cwtl
jp
dec
pop
and
sub
aaa
rorl
ds
jmp
movl
std
les
fbstp
add
out
add
aam
add
cmp
and
pop
jmp
xchg
outsb
jg
mov
mov
pop
cmp
sub
inc
jae
add
sub
loopne
inc
inc
dec
pusha
outsl
or
xchg
jge
mov
jb
xor
lret
orl
or
xor
in
or
out
add
jbe
push
and
push
jo
inc
mov
or
and
push
mov
lock
cld
add
out
iret
sbbl
push
mov
jmp
xchg
into
or
or
pop
out
or
sbb
iret
ss
dec
push
mov
pop
loopne
jmp
adc
add
lret
in
test
sti
enter
jmp
pop
testl
dec
push
cli
sub
and
or
adcl
test
add
mov
inc
repz
xchg
ja
lret
loopne
les
xor
pop
push
mov
leave
icebp
adc
movb
stc
stc
je
cmp
imul
ret
inc
pop
dec
addr16
add
xor
mov
dec
sbb
lods
add
sub
mov
xlat
mov
ss
mov
push
pop
push
push
ret
cmp
repnz
add
idivl
loopew
cmp
sbb
add
inc
sub
push
outsb
cld
jmp
inc
jg
add
scas
add
int
sub
stc
pop
dec
test
sbb
pop
fwait
leave
incl
nop
add
pushf
jmp
popa
jno
sub
jmp
cmp
ficompl
aad
das
subb
outsl
xor
pop
pop
jne
dec
add
imul
iret
jne
scas
pop
cwtl
pop
add
add
daa
or
push
mov
jecxz
insb
ret
mov
pop
bound
xchg
sub
add
jg
pop
jnp
push
dec
jno
add
das
cld
arpl
adcb
push
pop
clc
dec
adcb
neg
or
repnz
xor
rcrl
js
sti
iret
push
jae
sub
xor
lahf
push
popf
or
and
lret
ja
icebp
dec
or
sbb
mov
lret
add
adc
or
mov
adcb
insb
es
aas
mov
push
sahf
es
add
mov
shr
pop
adc
je
push
inc
cltd
iret
enter
push
jae
xchg
cmp
push
les
popa
or
addr16
sbb
hlt
daa
call
sbbb
fidivrl
imul
ficoms
add
jge
sub
sbb
jle
lods
fwait
or
push
pop
push
dec
imul
imulb
push
lods
adc
mov
sub
jmp
push
push
fstpl
adc
jmp
lock
loopne
push
dec
pop
add
sub
jns
jmp
shl
pushf
jb
and
dec
outsb
scas
enter
mov
mov
sub
not
jmp
stos
pop
pusha
sub
gs
jmp
push
cld
imul
adcb
inc
mov
sub
sbb
add
je
mov
dec
clc
jge
pop
mov
adc
xor
bound
mov
sub
clc
maxps
mov
outsb
mov
jl
in
fisttps
lret
repnz
and
add
pop
mov
mov
jnp
jp
aas
mov
rclb
mov
or
dec
dec
hlt
or
pop
dec
or
lcall
cmp
fadds
or
iret
pusha
dec
jne
aaa
pop
cmp
push
mov
or
xor
cmp
adc
ficomps
or
dec
xor
add
xchg
add
mov
dec
mov
push
ret
jmp
not
pushl
xlat
adc
ljmp
movsl
inc
push
adc
faddl
xor
pushf
icebp
sub
xor
aad
add
sar
inc
push
or
and
or
sbb
or
in
xchg
aad
loop
lret
sbb
pop
aam
or
xor
jbe
fisttpll
add
or
aas
add
rcrl
cld
mov
push
push
sub
add
add
cmpsb
int3
dec
mov
ja
or
dec
aas
push
inc
add
sub
adc
xor
stc
jmp
jb
mov
repz
mov
insb
push
mov
nop
fsts
mov
jmp
out
push
mov
inc
sub
and
push
sub
pop
ds
ljmp
fsubrl
pop
xchg
push
lods
push
daa
test
mov
pop
jmp
add
inc
inc
jmp
mov
scas
in
cmc
jecxz
mov
jmp
and
mov
mov
or
pop
adc
shrb
fldenv
xlat
or
fisttps
bts
cmpsl
push
les
test
pop
std
sbb
jmp
data16
adc
in
mov
mul
push
daa
clc
xchg
cwtl
fwait
add
push
aaa
pop
mov
cs
dec
pop
les
jl
xor
xchg
add
or
sub
push
push
push
sub
out
and
loop
int3
fidivrl
xchg
xchg
xchg
pop
cmpsl
mov
adc
xchg
mov
sub
in
insl
pop
fiadds
lret
jge
pop
jmp
dec
inc
adc
mov
push
push
cltd
jp
sbbl
daa
fistpll
pushf
shlb
pop
pop
int
imul
add
orl
shrb
dec
loop
mov
inc
test
mov
dec
add
pop
add
dec
imulb
or
in
pushf
icebp
ljmp
sub
inc
je
pop
mov
bound
push
das
add
test
xchg
push
add
popa
ss
mov
xchg
add
xchg
or
adc
sbb
arpl
cli
xchg
in
jle
or
pop
jg
inc
or
negl
pop
lods
jo
mov
aas
js
jmp
jne
daa
jg
and
std
or
stc
clc
and
pop
sub
neg
fldenv
cmpsl
push
rcrb
and
imul
jae
sub
pop
xchg
push
jle
in
popa
icebp
imulb
dec
add
push
inc
sbb
shlb
les
lods
out
inc
or
or
pop
push
jle
aas
xchg
sbb
or
push
mov
cmp
andb
bnd
add
add
mov
sbb
mov
sbb
push
sbb
mov
out
adc
jns
je
add
arpl
pop
not
nop
or
aas
pop
xor
lods
mov
sbb
test
dec
shll
pop
pop
cmp
push
shlb
xor
push
fdivs
pop
and
xchg
lahf
mov
lahf
shll
js
pop
pop
popf
nop
adc
cmp
add
pop
loop
outsb
or
push
pop
shrb
pop
jge
sbbl
daa
mov
and
hlt
jnp
lret
pushf
les
sti
dec
call
cwtl
out
es
push
inc
xchg
push
push
pop
and
adc
pop
scas
ret
mov
les
scas
arpl
jg
adc
dec
mov
cmp
jge
loopne
loopne
mov
femms
clc
xor
fs
xor
rolb
clc
testl
pop
or
push
aas
pusha
mov
pop
enter
add
mov
addps
jno
mov
cs
xor
daa
cmp
or
mov
das
adc
jne
ficomps
mov
pop
sbb
lahf
test
dec
shrb
or
mov
xchg
xchg
inc
insl
neg
pop
jmp
dec
fs
push
or
pop
cld
mov
frstor
fdivs
add
mov
xchg
sub
imul
pushf
loopne
or
pop
jns
insb
sub
jmp
inc
sub
pushf
inc
std
repz
movsl
push
add
add
xor
sbb
xchg
mov
repnz
sub
or
jp
push
sub
call
pop
les
xor
jmp
mov
mull
sahf
adc
in
sti
popa
fildl
aad
cmpsl
push
mull
stc
pop
pop
xor
add
sub
mov
xchg
or
jne
scas
aaa
sub
inc
inc
add
add
sub
cmp
inc
jmp
stc
nop
popa
mov
pop
push
in
loopne
and
push
push
push
jge
pop
push
push
pop
cli
rcrb
or
cltd
jmp
ljmp
ficoml
flds
test
or
cmp
in
aas
popa
mov
sti
adc
ja
das
xor
sbb
stos
mov
adcb
enter
mov
xor
push
and
icebp
lahf
jnp
insb
in
out
dec
inc
sbb
es
jge
cmp
movsl
or
in
mov
jno
pop
push
lahf
aad
sbb
imul
or
das
push
sbbl
roll
push
outsb
imul
mov
dec
bound
gs
mov
mov
pop
out
adc
sub
mov
test
xlat
adc
loopne
add
mov
test
xchg
ljmp
xor
hlt
cmc
lahf
adcb
cmp
or
or
push
imul
lcall
mov
out
fwait
push
xchg
lock
mov
and
loop
sub
pusha
xchg
lret
shlb
outsb
jb
push
pop
and
add
pop
pusha
or
add
pusha
add
push
xchg
rorb
lcall
js
or
sub
push
fistps
or
je
or
xchg
jno
mov
testb
adcb
jmp
mov
cmp
orb
mov
mov
or
jl
inc
xchg
sbb
aas
xchg
mov
add
stos
lret
int
pop
push
lret
cltd
sub
push
xchg
rol
xchg
inc
popl
push
lcall
enter
pop
enter
bound
xchg
push
or
mov
pop
or
sub
or
daa
lret
push
mov
cmp
mov
xor
inc
add
enter
nopl
shl
movsl
dec
cwtl
mov
scas
inc
notl
notl
bound
ret
sub
jmp
rcrb
push
and
stos
aad
lods
es
push
xchg
scas
dec
dec
inc
push
mov
rol
mov
push
pop
sub
sub
sub
and
cmp
mov
dec
mov
push
out
test
cld
add
popf
orb
cmc
jmp
outsl
flds
pusha
pop
testb
cmpsb
imul
push
addb
adc
push
ret
dec
insb
mov
xor
sbb
jmp
dec
sbb
inc
or
jns
loope
and
daa
or
xor
sar
outsl
add
clc
addb
sahf
fbld
sub
ja
mov
mov
shl
leave
xor
push
sub
pop
mov
daa
push
fwait
leave
xchg
cmp
mov
lahf
cmp
rorl
fcoms
mov
daa
jmp
dec
dec
dec
push
xor
lods
fsts
icebp
sub
sub
cwtl
mov
mov
add
or
out
mov
or
and
add
sub
push
sub
xchg
and
push
outsb
mov
and
ror
idivl
adc
enter
push
push
jmp
jp
add
mul
cmp
ret
dec
out
push
push
loope
enter
js
pop
dec
in
rorb
pop
ja
decl
push
aaa
xor
jb
cmp
mov
lods
push
or
dec
popa
sbb
sub
cmp
jp
out
mov
nop
adc
push
sub
adc
add
mov
out
mov
jb
push
ds
cmp
aam
daa
jecxz
add
mov
addr16
add
xorb
inc
pop
push
mov
xchg
cmp
sub
movsb
mov
sub
or
add
lret
mov
dec
push
mov
dec
lea
lret
mov
and
sub
jnp,pn
cmpsl
pop
cmp
in
add
sub
adcl
pushf
lcall
xchg
movsl
lock
dec
cmpsb
adc
popf
out
pop
sub
push
sub
add
adc
stc
ljmp
stos
pop
loop
pop
mov
shrl
arpl
iret
xor
or
mov
push
or
xchg
not
lock
mov
sbb
push
daa
pushl
mov
add
pop
xor
stos
lock
xchg
testb
sarb
mov
push
jb
imul
or
in
fisttpll
aad
xor
xor
subl
nop
push
mov
sub
out
loop
rolb
lahf
pop
xor
jne
f2xm1
shll
aaa
iret
gs
sbbb
add
add
cld
mov
or
iret
ds
pop
lret
inc
js
mov
sub
out
push
adc
inc
inc
jae
or
jmp
push
out
ror
sti
out
shrl
jge
push
mov
add
cmp
pushf
jle
test
outsl
add
push
cmp
lea
mov
pop
push
xchg
scas
pop
xchg
xor
rolb
and
adc
pop
sbb
sub
push
sarl
mov
push
push
add
nop
add
movsb
adc
jmp
adc
ds
dec
mov
mov
pushf
jecxz
rolb
push
pop
jb
and
shrl
add
test
lcall
xor
cli
cwtl
or
and
imul
sbb
xor
out
sub
pop
jmp
lock
mov
push
shlb
loopne
jo
cmp
cmpb
cmp
push
mov
add
push
and
pop
stc
mov
dec
incl
jmp
dec
mov
push
sub
adc
pop
cmp
inc
mov
dec
scas
dec
pop
pop
shl
js
add
adc
out
sub
cmp
sub
xor
pop
in
std
sahf
add
mov
pop
or
dec
sub
or
push
mov
frstor
ss
add
push
mov
xor
jmp
pop
cltd
fisttps
pop
les
into
push
mov
outsl
pop
jbe
add
neg
push
mov
mov
lock
jns
or
push
mov
adc
dec
xorb
hlt
jg
xchg
and
lahf
mov
sbb
dec
std
mov
mov
jmp
mov
lret
jmp
xor
popf
insl
jp
insb
daa
lcall
cmp
in
cltd
mov
lods
in
loopne
push
adc
xchg
lock
or
imul
pop
push
pop
dec
fildll
movsb
inc
dec
lds
repnz
icebp
push
add
push
outsl
pop
cmp
pop
sub
or
or
lods
clc
aam
ret
add
clc
dec
enter
sub
lret
movsl
xor
mov
fisubl
push
push
lahf
adc
pusha
pop
jg
ljmp
xchg
mov
cmp
icebp
or
dec
imulb
add
push
ja
dec
std
xor
int3
cmp
xor
sub
jno
pop
pop
xor
or
pusha
jp
cmc
icebp
cmp
mov
mov
push
mov
popa
inc
mov
adc
sbb
out
ret
adc
add
pop
dec
pop
insb
mov
pop
jmp
loop
daa
sub
lea
xlat
jnp
xor
jl
repz
sub
sbb
fdivrp
xchg
divl
inc
sar
xorb
mov
pop
gs
stos
sub
add
outsb
push
cmp
push
sbb
mov
imul
and
inc
test
lds
push
add
xor
sub
push
in
xchg
mov
clc
outsb
sub
cwtl
mov
lcall
xchg
add
push
push
js
mov
call
mov
ret
data16
and
addr16
or
into
add
dec
xchg
push
mov
add
jle
xchg
aad
int
jmp
stc
in
add
sbb
cmp
popa
jmp
inc
add
popa
ret
ss
or
inc
jno
popf
repnz
pop
mov
add
mov
test
jle
add
sub
add
fucomp
pop
dec
or
jno
or
inc
push
cld
mov
push
push
xlat
pop
xchg
out
add
clc
leave
sub
inc
mov
push
xchg
lods
ret
shlb
sub
out
movl
sbb
notl
je
je
mov
in
sti
pop
cmpsl
jecxz
repz
aaa
jo
loope
adc
adc
pop
int
jg
loopne
mov
or
ja
dec
push
inc
inc
cmp
jmp
jge
or
mov
mov
xor
leave
xchg
out
jnp
insb
bound
mov
es
lods
sub
lret
ja
pop
push
out
adc
and
hlt
inc
or
push
int3
pop
push
pusha
adc
and
or
jo
imul
push
pop
xlat
cli
bound
jmp
test
hlt
sub
dec
out
push
sub
sub
ljmp
jae
push
mov
adc
push
jae
dec
xor
inc
pop
add
pusha
or
cwtl
stos
jb
mov
jmp
sub
repz
aam
push
rcrl
xchg
inc
pop
adc
gs
mov
mov
jns
pop
xor
jmp
out
dec
lret
xchg
fsts
adc
rcll
lret
mov
lods
adc
mov
or
add
and
cltd
jnp
push
xchg
or
push
and
daa
outsb
cmp
jo
mul
xor
add
lods
or
mov
push
jbe
icebp
jl
daa
aas
ret
push
test
lret
sub
dec
lods
popa
push
xchg
into
mov
and
loope
add
int3
addr16
pop
inc
adc
pusha
xor
inc
or
push
leave
sub
lods
cmpsb
mov
dec
rcll
lret
xlat
movsl
cli
xchg
repz
ja
daa
loope
out
scas
xlat
fmull
and
movsb
add
jb
testb
add
adc
outsl
push
pop
call
ret
scas
cs
push
or
add
sub
sbb
rcll
pop
pop
repnz
push
pop
rorl
fcoml
dec
push
push
mov
rorb
push
push
shr
mov
adc
mov
in
lret
aas
xor
sub
pusha
push
cld
hlt
hlt
dec
rcrl
pop
lcall
outsb
sub
shlb
sub
pop
shl
jp
dec
jbe
dec
push
jle
shl
aad
fimuls
pusha
andb
push
inc
cld
push
imul
in
inc
out
ss
dec
push
call
repnz
push
psubb
adc
inc
int3
xchg
mov
fnsave
aas
es
icebp
addr16
xchg
adc
cli
and
xchg
jmp
push
loopne
inc
adc
cld
or
fbstp
add
xor
mov
iret
xor
xor
cmp
outsb
jns
mov
sub
in
pop
xor
jbe
jmp
enter
adc
xchg
stos
mov
xchg
aad
stos
cmpb
decl
or
fnstcw
daa
movsb
aas
add
mov
sbb
fistpl
int3
cmp
gs
pop
addr16
xlat
orb
mov
xor
ret
xor
add
loopne
shlb
sar
mov
std
popf
sub
jo
pushf
fbstp
pop
mov
and
inc
sub
mov
das
jmp
or
test
add
jmp
pop
mov
push
fdivp
add
mov
sub
mov
or
mov
popa
mov
xor
cmp
nop
sbb
pop
pop
enter
pop
dec
cmpl
and
adc
pushf
scas
push
sti
shlb
push
sbb
sub
int3
movd
and
rol
jae
push
pop
and
mov
mov
jo
loopne
mov
test
sbb
test
std
add
jb
loope
aaa
sarl
std
mov
jle
fdivl
push
mov
push
enter
or
jmp
lds
inc
loop
xor
lock
jnp
mov
add
mov
hlt
inc
lods
push
jne
xchg
fnstsw
mov
lret
dec
lods
and
add
cld
cmp
xor
fwait
push
repnz
push
add
neg
rcrb
sbb
dec
jo
je
mov
jmp
call
adc
mov
loopne
push
jge
mov
sbb
pusha
cld
mov
or
push
pop
dec
sbb
insl
lods
pushw
xlat
push
mov
push
add
pusha
orb
xor
pushf
sbb
lret
mov
xor
add
adc
out
xor
roll
iret
dec
jnp
jmp
dec
mov
xor
cs
mov
roll
mov
pop
clc
xchg
add
dec
test
push
ja
adc
push
fadd
shrb
out
jbe
movsb
outsb
cmpsb
loopne
dec
popa
or
jnp
loop
jne
shrb
fisubrl
sbb
jecxz
pop
push
pop
aas
daa
pop
loopne
jmp
shlb
xchg
push
pop
xor
jae
add
jmp
out
push
xchg
lret
and
in
dec
pop
push
push
repnz
outsb
enter
pop
pop
add
lock
jecxz
lcall
pop
lods
psubsb
xor
mov
mov
xor
mov
push
fistl
scas
xlat
and
push
stos
fbstp
pop
fcomps
mov
fcoml
or
push
into
inc
adc
jae
push
fwait
inc
and
rcll
enter
pop
aas
pop
pop
loope
xorb
pop
dec
and
push
jge
repz
dec
sti
inc
mov
scas
mov
jmp
cmp
push
push
in
adc
sub
loop
fsubr
repnz
ja
fdivr
icebp
bound
jbe
daa
jg
jmp
das
fidivl
sub
fadds
les
nop
scas
jmp
push
sar
int3
sub
xor
inc
or
or
sbbb
pusha
cwtl
sti
lds
fldt
int
loopne
pop
push
rclb
in
mov
fiadds
dec
loopne
xchg
add
pusha
xchg
cmp
sub
aas
loopne
mov
mov
movsl
adc
ret
cmp
addr16
incl
fildll
imul
and
mov
outsl
out
inc
mov
and
jmp
mov
add
fisubrl
xchg
mov
sub
add
pop
mov
xor
jmp
mov
not
or
fildll
shlb
add
jmp
push
push
cmc
fisubl
lahf
and
in
fildl
pop
stc
into
mov
repz
in
jmp
adc
pop
loopne
add
pop
sub
aam
jo
or
sbb
pop
jmp
cmp
lret
mov
ret
sub
or
adc
dec
ficoms
dec
addl
or
push
cmpsl
divb
jg
pop
jl
sti
cmp
push
push
ret
push
push
loope
jo
ret
stos
daa
add
mov
test
pop
mov
and
mov
or
xor
fnstenv
or
scas
and
jmp
neg
xchg
xor
aad
push
jge
inc
call
dec
in
shlb
pop
push
lret
mov
mov
sti
shll
mov
pop
push
push
enter
testb
jb
popa
mov
cwtl
idivb
leave
into
jns
lock
shl
push
jmp
cs
bound
inc
adc
or
dec
scas
dec
mov
pop
or
insl
push
rorb
loopne
xor
sub
gs
cmpsb
pop
push
jo
std
repz
das
xchg
ja
jbe
addr16
icebp
push
mov
pop
mov
in
dec
shl
add
xor
inc
inc
adc
dec
xorl
scas
cmp
lock
jne
loope
cmpsl
addr16
ja
mov
pop
xchg
lock
je
cmp
mov
rcrb
pop
and
push
cmp
int
mov
rclb
lahf
jno
dec
pop
addr16
fmuls
pop
and
sbb
jecxz
mov
jbe
sub
push
push
pop
jae
jmp
pop
stos
in
dec
xlat
mov
out
xchg
jg
add
pop
mov
je
subb
orl
fcomps
dec
les
ss
mov
pop
adc
aam
out
mov
dec
and
or
xor
icebp
pop
jmp
lock
out
repnz
orb
push
jg
int3
sbb
orb
inc
and
pop
sbb
push
push
and
mov
jecxz,pt
call
repnz
loopne
gs
and
and
jecxz
add
cld
xchg
add
xchg
not
test
lret
cmc
sub
fcmovne
sub
rorl
rorl
addl
xor
out
mov
out
dec
xchg
jns
and
hlt
push
pop
int3
jmp
jae
mov
enter
cmp
sahf
in
sbb
and
bound
adc
imul
mov
push
mov
imulb
repz
and
dec
jb
sahf
ljmp
jecxz
movsl
hlt
pop
and
sub
push
pop
imul
movsl
notl
adc
lock
das
add
jmp
push
fstl
pop
stos
xor
or
jne
test
shlb
pop
movups
test
cmp
pop
and
add
pusha
jle
fucomip
fstps
jp
fidivl
ficompl
and
repz
scas
adc
in
adc
in
inc
lret
ljmp
jge
mov
and
in
xchg
sti
cmp
cmp
and
and
sbb
adc
dec
adc
cmpb
xor
fmuls
xchg
ljmp
sub
in
and
adc
inc
push
in
scas
aam
scas
stc
lds
add
and
xor
popa
dec
xor
push
std
push
fwait
pop
mov
sub
arpl
rclb
mov
imul
leave
xchg
loope
imul
xchg
not
outsl
sbb
popf
loop
int3
fmuls
std
jne
leave
pop
push
mov
push
enter
xchg
in
std
push
nop
mov
dec
inc
mov
and
lret
cmp
mov
sub
inc
gs
cmc
mov
jge
fildll
pop
mov
jns
cwtl
lds
sbb
sub
xor
ret
adc
pop
or
jnp
xchg
cmp
sub
dec
jmp
push
add
hlt
ja
jmp
mov
push
ss
and
dec
jl
add
das
test
lods
lcall
mov
icebp
mov
xchg
xchg
or
cmp
js
mov
jl
adc
call
hlt
xchg
fldcw
jo
dec
pop
cwtl
jae
cmpl
pop
mov
add
inc
add
cmp
adc
push
fcomi
outsb
inc
sbb
not
dec
push
ret
inc
push
push
xchg
icebp
jge
cmp
cmc
cli
add
pop
push
pop
fabs
jmp
dec
sub
dec
jle
xorb
inc
push
jb
add
adc
frstor
mov
or
mov
push
jmp
imul
mov
loop
push
and
add
andb
dec
dec
mov
out
call
out
add
ss
mov
cmpb
adc
fcompl
and
push
hlt
add
cmc
mov
or
add
jg
and
adc
xor
mov
imulb
movsl
and
sbb
fmul
outsl
gs
leave
cmp
mov
sbb
mov
and
push
mov
pushf
push
xchg
or
popf
fs
out
out
or
dec
adc
dec
cmc
stos
mov
push
jg
mov
and
jb
sub
es
adc
jg
xor
jg
sarb
pop
lret
test
call
inc
or
loopne
enter
jo
in
cmp
stos
mov
xchg
fstpt
push
inc
loop
pop
mov
push
inc
mov
pop
xor
mov
and
xchg
sub
mov
jg
mov
test
aad
or
imul
push
das
adc
popaw
sbb
push
ljmp
arpl
int3
mov
xchg
fimuls
cmp
rclb
lods
daa
lea
pop
pop
shl
sti
jmp
mov
lods
add
lahf
or
movb
dec
aas
xor
lret
xchg
inc
add
push
mov
push
imul
outsl
aad
pop
mov
or
mov
dec
nop
or
test
in
dec
push
mov
jmp
sbb
inc
sub
jmp
mov
fwait
push
sub
push
and
adc
cmovnp
add
push
bound
lock
or
pop
out
sub
fwait
push
mov
ret
push
inc
lock
xor
jp
pop
aad
cs
or
adc
xor
lds
lahf
lods
jo
in
jbe
cmp
dec
cmp
sahf
push
cmpsl
jbe
rol
pop
gs
addr16
and
pop
mov
mov
sbb
mov
xchg
bound
dec
mov
lds
hlt
xchg
and
fisubrl
pop
mov
adc
sub
sub
add
popa
mov
xor
adc
loopne
cmp
loopne
or
lds
jge
and
xchg
scas
test
add
jp
scas
xor
push
arpl
ret
push
push
mov
cwtl
mov
addb
ds
jmp
inc
jge
xchg
sub
neg
inc
sti
pushf
pop
jg,pt
xchg
imul
loop
mov
lcall
push
mov
and
mov
or
bound
leave
push
roll
jmp
lods
and
adc
ret
mov
les
leave
mov
sbb
fistpl
add
jb
and
sub
lock
cld
mov
mov
addr16
mov
jmp
rcrl
jb
pop
inc
test
mov
add
call
cmp
dec
sub
mov
shlb
or
ret
je
fcmovne
mov
mov
cwtl
imul
xchg
inc
and
sub
cmpl
testb
jmp
sbb
repz
add
inc
push
out
int3
out
pop
lahf
sti
push
sbb
lahf
xor
jmp
fiaddl
cs
and
mov
pop
ret
pusha
mov
insb
xchg
lods
rorl
or
cmp
add
rolb
lock
xchg
adc
mov
pop
sub
jge
cmpsl
mov
cmc
int3
stos
xor
idivb
jo
pop
nop
clc
jmp
out
or
or
pop
push
push
jecxz
sbb
fs
clc
xchg
pop
test
test
inc
pop
mov
mov
xor
adc
fcmovnbe
flds
add
dec
movsb
xlat
in
xor
idiv
xchg
push
xor
mov
and
or
insb
dec
mov
sbb
xor
sub
adc
in
stos
mov
cmp
push
add
or
cltd
lret
sbb
arpl
xchg
sub
cmp
sarl
notl
popa
fimull
push
jp
push
xor
dec
inc
inc
dec
call
mov
mov
inc
cmp
stos
sub
jmp
sub
or
pusha
mov
mov
xchg
call
daa
rol
xlat
aam
add
rcrl
out
mov
and
push
pop
in
adc
ret
stos
dec
xor
ret
rcll
shl
cmpsb
insb
mul
cltd
ljmp
jmp
popf
mov
shr
lds
pop
push
loop
add
and
or
sbb
lcall
dec
adc
mov
pop
adc
sub
rorl
loopne
std
sbb
rcrl
pop
fwait
push
inc
push
sbb
or
popf
jg
pop
pop
sahf
sub
ljmp
dec
push
mov
mov
or
incl
add
jmp
stos
repnz
dec
jnp
pusha
xchg
inc
inc
fwait
sub
or
and
inc
jnp
pop
and
pop
sub
leave
shlb
jle
mov
push
adc
fists
dec
bound
gs
mov
arpl
push
cli
outsl
dec
stos
int
mov
mov
mov
punpckhbw
xchg
mov
xchg
insb
lock
xor
xor
outsb
adc
sub
adc
pop
push
jmp
mov
sub
hlt
push
inc
xchg
jns
mov
cmp
shrb
push
test
or
pop
js
jmp
dec
dec
rorl
idivb
imul
or
cs
inc
dec
pop
or
mov
or
pop
dec
lret
ds
mov
push
inc
jmp
out
push
mov
sub
or
ficoms
ror
popa
leave
pop
out
subb
xlat
pop
gs
and
or
jno
popa
stos
fptan
cmp
test
inc
dec
mov
push
xor
sub
mov
lods
shl
and
push
out
into
or
rclb
cmp
jl
jb
enter
insl
adc
pop
sbb
movl
orl
mov
adc
pop
bound
mov
mov
iret
or
inc
jge
aam
sbb
or
adc
lods
pop
sbbl
xchg
sbb
jp
daa
jmp
pop
sahf
push
xchg
fs
int
or
aad
cmpsl
or
inc
ret
sbb
orb
sbb
cmp
in
mov
push
clc
dec
add
sub
ja
inc
in
and
mov
leave
jmp
sub
adc
out
pop
idivl
filds
jbe
inc
pop
mov
inc
dec
out
pop
sbb
xor
lock
cld
dec
in
mov
test
fistps
or
push
xor
add
push
and
icebp
sub
pop
inc
pop
add
lods
pusha
adc
int
lods
and
pop
pop
add
gs
dec
add
sbb
mov
or
pop
scas
test
in
aas
mov
sbb
fs
pop
inc
shlb
jne
xchg
lret
push
popa
jae
pop
js
jge
lock
add
ss
push
push
jnp
add
mov
mov
imul
or
jle
test
or
push
xchg
flds
in
les
jmp
scas
add
fsubrs
dec
xor
push
mov
jmp
adc
addb
mov
dec
mov
fwait
jp
dec
mov
dec
jnp
push
sub
out
xor
adc
sub
lret
js
jo
repnz
push
xchg
pop
popf
pop
sub
add
sbb
sarb
xor
stos
and
push
push
mov
adc
cmpsb
adc
or
jns
cmp
cmp
divb
pop
xchg
ja
xchg
lds
mov
stos
adcl
adc
pop
pop
shll
fnstsw
and
push
or
int3
fwait
push
repz
aam
push
mov
out
leave
fs
cmc
inc
mov
and
mov
icebp
je
in
or
jle
sbb
add
int
xchg
or
adc
pop
fs
in
jmp
movsb
sbb
add
xchg
adc
paddsb
jb
pop
push
cmpsl
sub
cmp
aad
mov
push
iret
jmp
shlb
mov
or
sub
adc
shlb
add
push
pop
popf
mov
pushf
push
mov
in
pop
pusha
loop
push
xchg
xor
pop
fildl
inc
pop
gs
and
xor
jmp
repz
pop
pop
and
or
out
sub
pop
xchg
dec
lcall
testb
neg
push
cmp
aas
pop
cmp
mov
cmp
xor
fs
add
jo
inc
push
in
pop
and
out
add
sub
and
jmp
jnp
pop
push
ja
dec
imul
outsl
pop
sbb
repz
cs
dec
pcmpeqb
add
xchg
cli
sarb
cwtl
or
imulb
mov
or
jle
movsb
clc
or
inc
inc
iret
mov
adc
dec
scas
sbb
pop
lock
out
push
cmpsb
push
push
cwtl
and
shll
jg
cmpsb
shl
sub
adc
add
out
sti
push
mov
inc
test
sub
lret
mov
jg
ss
pop
cmpsl
jne
ret
cwtl
movl
mov
add
int
outsl
add
push
movsl
cmp
imull
add
and
mov
sub
mov
dec
sub
or
nop
jg
arpl
sbb
push
inc
and
jecxz
mov
xchg
and
inc
hlt
scas
sub
mov
mov
and
pop
andl
push
sbb
or
pop
push
push
sub
pop
loope
pop
aas
loop
sahf
push
xchg
call
adc
repnz
cmp
loope
rorb
pop
andl
xchg
mov
or
pop
pop
aas
test
mov
movsb
movswl
push
cmp
cli
add
adc
insl
add
and
pop
jbe
pop
or
add
mov
mov
pop
mov
xor
loop
fsubrl
and
push
inc
adc
lds
xchg
mov
cs
or
fs
popa
dec
stos
and
mov
into
js
aad
push
sbb
sbb
pop
ja
cmpsl
je
fcomi
adc
loop
ret
push
cmpsb
pop
mov
out
cmpsb
add
out
int
loopne
shll
ljmp
iret
gs
sub
out
daa
sbb
call
jecxz
xor
imull
add
sub
cli
out
adc
in
cmp
or
or
clc
dec
sub
jle
add
or
add
fbld
or
dec
pop
popf
repz
xchg
sbb
push
mov
cltd
ficoms
sub
mov
test
adc
call
or
fdivr
and
sbb
mov
jl
test
xchg
test
push
insb
jge
aas
pop
mov
rcrb
jmp
shr
dec
cmp
adc
pop
scas
int3
mov
sub
stc
xor
mov
xchg
divl
rclb
jmp
dec
hlt
xchg
cmp
pop
enter
jbe
dec
sbb
or
add
sub
test
dec
cmovg
filds
pop
pop
adc
outsl
sub
sub
push
push
adc
das
adc
lret
mov
mov
aad
sahf
sbb
jmp
test
pusha
int3
lret
xchg
adc
push
jnp
jl
ja
mov
jecxz
xchg
loope
xor
icebp
std
adc
leave
daa
xor
pop
daa
jne
cltd
push
xor
cmp
loop
lds
add
inc
add
mov
or
fsubrl
or
jmp
notl
and
out
in
aam
imul
outsb
push
dec
add
adc
sub
sub
addl
or
mov
mov
inc
push
ljmp
sbb
xchg
inc
leave
mov
fnstcw
push
and
jbe
ljmp
mov
icebp
inc
pushf
jnp
and
loop
sbb
sub
add
push
and
xchg
and
or
pop
in
loop
adc
scas
int
sub
cmc
cmp
loop
pop
mov
jecxz
push
mov
or
xchg
push
adc
ja
dec
jmp
repz
jmp
mov
cmp
pop
add
add
cli
je
mov
sbb
dec
xor
xchg
lahf
sub
lret
add
sbb
rclb
mov
add
push
jecxz
mov
push
add
xchg
negl
mov
enter
outsl
or
sub
loop
test
and
inc
jmp
andb
mov
mov
pop
lods
shll
adc
push
outsl
loopne
loop
not
sub
out
jge
test
test
mov
and
lock
dec
in
mov
pop
jmp
inc
sub
dec
mov
xor
popf
iret
push
inc
add
pop
jle
std
aad
ret
add
sub
dec
mov
jns
popf
cmp
dec
push
out
rorl
pop
mov
arpl
mov
xchg
push
sub
lods
push
lods
push
shl
push
popa
orl
sbbb
push
scas
inc
jmp
jbe
dec
ja
std
xlat
ss
jp
popf
jae
les
mov
jne
and
dec
jo
xchg
pop
xor
push
push
jmp
and
pop
push
and
adc
dec
stos
imul
xor
and
jge
cmp
xlat
push
dec
test
in
sub
jmp
push
add
inc
mov
sub
or
fstpt
test
jno
mov
jo
push
sub
lock
dec
push
mov
sub
cwtl
cmp
enter
mov
xchg
out
xor
and
mov
pop
cs
jb
enter
in
push
push
add
or
mov
not
xchg
and
jo
and
ret
add
std
jae
cmp
in
adc
ss
shrb
out
pop
es
xor
xor
sub
mov
pop
in
cld
ss
sub
sbb
enter
aad
sbb
and
or
fadds
rcll
and
sbb
aas
dec
stc
aas
push
xor
mov
jo
mov
sub
pop
imul
or
dec
sub
add
push
adc
or
or
jmp
lods
into
add
pop
and
jg
push
sti
inc
push
jmp
xor
sub
or
enter
dec
cs
or
cli
push
lock
aam
sti
mov
sar
push
nop
ljmp
jmp
cmpsl
adc
xor
adc
push
jmp
mov
dec
and
lret
lock
out
lods
dec
rcrb
mov
mov
push
or
sub
enter
dec
pop
bound
sub
fcomps
add
or
pop
add
pop
stos
test
in
mov
repnz
push
cmp
lds
not
add
imul
add
and
cmp
inc
mov
out
lock
lods
xorb
stos
fidivrl
push
adc
sbb
lods
jg
out
cmp
jl
cli
jl
mov
xor
mov
sub
jmp
neg
cmpb
xchg
xchg
aas
add
repz
gs
cmp
les
mov
fiaddl
mov
dec
daa
mov
ja
imul
hlt
fs
das
jmp
call
mov
push
cltd
in
add
xor
cmp
daa
mov
jnp
nop
cmp
or
das
push
addl
pusha
das
lret
sub
mov
loope
je
push
js
cwtl
pop
jp
sbb
roll
movsb
xor
dec
or
mov
orb
pop
jns
mov
push
ret
dec
mov
mov
mov
ret
pop
scas
popf
inc
pusha
rcrb
dec
rep
xor
jecxz
shrl
cmp
jmp
pop
add
pop
fisubs
adc
pop
pop
push
dec
test
xor
and
mov
add
push
es
pop
cwtl
fisttpll
add
scas
cmpsb
pusha
push
es
leave
dec
cmpsb
in
jbe
adc
jnp
and
sarl
xor
or
and
mov
fnstenv
sar
lds
adc
sub
nop
add
ljmp
xchg
dec
inc
or
dec
mov
cli
loopne
jmp
jmp
jne
ljmp
cmpb
addb
ret
xor
dec
add
stos
and
cltd
sbb
fs
js
add
add
sbb
pop
sbb
rcrl
icebp
or
push
je
mov
mov
cmpsl
mov
insb
inc
push
jg
push
lods
push
xor
or
sub
dec
adc
adc
or
adc
jmp
sub
mov
or
mov
jg
mov
jnp
push
jmp
jne
jle
mov
jg
add
dec
in
inc
pop
retw
adc
inc
jle
and
lock
loopne
outsb
mov
jae
sbb
stos
ds
not
and
cs
test
inc
sbb
pop
mov
imul
jge
sub
jle
jae
sahf
xchg
xchg
nop
fs
jmp
ficompl
rolb
or
sub
lahf
inc
daa
jg
jnp
push
fs
and
int3
sub
lret
push
bnd
cmp
sarb
sub
dec
and
push
mov
gs
push
fcompl
loopne
cmpsb
add
test
daa
push
push
xor
testb
mov
add
mov
adc
leave
lods
xlat
mov
shr
pop
jno
lods
xchg
fwait
inc
stos
push
inc
dec
lret
pop
fdivrl
lock
lahf
ficomps
pop
aad
and
icebp
dec
push
clc
mov
xor
cli
sub
cli
or
pop
int
jo
and
cmp
or
js
mov
xchg
sub
decl
ljmp
or
push
or
rolb
adc
sbb
push
pusha
in
jnp
daa
fbstp
fmul
cmpsb
orl
lds
jmp
cld
add
add
popa
sub
mov
lock
cmpsl
rcl
inc
or
jb
push
jmp
sub
nop
xor
iret
rcr
push
ds
sbb
mov
icebp
mov
jmp
xor
jmp
sarb
addb
mov
rolb
add
icebp
daa
ds
jmp
lock
stc
xchg
rcrb
mov
pop
aaa
insb
push
inc
inc
inc
add
xor
sbb
dec
inc
not
inc
mov
shr
cwtl
adc
ja
mov
add
and
repnz
or
or
imul
scas
push
lods
dec
dec
mov
pop
dec
inc
or
jp
mov
and
mov
nop
ficompl
pop
xchg
cld
add
adc
xlat
shlb
ret
sub
inc
jmp
lock
mov
sbb
repz
leave
jge
cmp
mov
jecxz
dec
cld
and
inc
push
jno
push
adc
jae
inc
xchg
lret
sbb
icebp
jae
leave
sbb
pop
sub
cmp
pushf
pop
mov
sub
test
or
add
notl
push
ret
push
add
sti
lret
adc
fiadds
mov
jno
jl
add
and
aas
pop
and
addb
dec
pop
cmp
mov
popa
cmc
lea
mov
pop
mov
or
cs
rclb
sbb
out
addb
es
cli
jnp
pop
jnp
pop
inc
clc
in
shll
cmp
jnp
shlb
call
mov
add
jmp
pop
pop
mov
stc
daa
out
lret
pop
stos
and
lods
push
push
loope
cmpsl
aaa
xorb
jmp
xchg
ficomps
in
test
arpl
movsb
pop
dec
fwait
mov
jo
xchg
jb
push
aas
mov
dec
out
cmp
pushf
testb
icebp
dec
push
sahf
out
add
push
loop
push
mov
shlb
mov
cmpl
cmc
inc
cmp
mov
inc
dec
call
mov
jnp
adc
adc
out
xchg
inc
sbbl
jbe
cmpl
loop
xchg
add
adcb
int3
jnp
outsl
pop
xor
xchg
jmp
rclb
push
loop
add
cmp
sub
jns
xor
fsub
pop
jb
lahf
push
scas
xchg
std
ss
cmp
jo
sbb
adc
push
push
lret
ret
mov
push
fwait
in
dec
in
push
xor
sarl
lods
push
push
xchg
bound
mov
push
lcall
ljmp
push
push
fucom
cmp
jmp
adc
scas
sub
sbb
mov
imul
cmp
popa
sub
dec
cmpsl
aas
mov
dec
loop
inc
fisttpll
aas
iret
das
push
les
andl
adcb
add
and
add
pusha
jl
dec
add
sti
xchg
sbb
sbb
adc
stos
cmpsl
imul
and
sub
pop
pop
out
les
inc
xchg
push
lahf
cmp
pop
loopne
mov
push
or
imul
and
repz
in
and
into
adc
jmp
sub
pop
mov
sub
clc
push
mov
es
add
jmp
fcomps
or
jno
xchg
cltd
push
test
lods
pmulhuw
jo
jmp
icebp
aas
test
das
daa
sub
add
pop
fdivrs
add
cmp
cmp
cwtl
and
add
sbb
adc
test
ja
pusha
and
fimull
jmp
icebp
sbb
push
cld
mov
jmp
or
xlat
rcll
outsb
es
push
mov
or
sub
sub
jno
pop
adc
jmp
cli
mov
mov
into
jmp
out
imul
xchg
adc
call
push
jmp
push
outsb
loop
lock
in
arpl
subb
sub
sub
jmp
mov
cmp
outsb
or
call
std
jbe
lock
jmp
cli
inc
sub
xlat
sbb
cltd
mov
or
pop
push
icebp
push
pop
test
int3
inc
rclb
pop
pop
sub
push
mov
sbb
mov
lahf
dec
sti
shll
add
jecxz
js
cmp
ret
jb
and
stos
adc
nop
inc
xlat
adc
or
push
add
and
sub
hlt
jge
sbb
or
pop
call
and
scas
push
cmp
add
dec
dec
pop
jne
cltd
pop
push
mov
adc
int3
and
stos
bound
add
int3
push
dec
lds
test
cmp
pop
dec
aas
mov
lret
xchg
or
fsubl
or
pop
lock
nop
and
pop
sbb
and
add
pop
in
jbe
pop
xchg
movsl
nop
mov
xor
testl
inc
push
jle
fwait
dec
add
mov
fs
push
adc
ret
and
movsb
or
adc
lds
or
jne
aad
es
mov
xchg
enter
add
inc
push
in
xlat
push
add
or
xorb
xor
mov
nop
and
sub
fadds
sub
jge
push
dec
dec
cwtl
add
or
add
sbb
and
popf
notl
daa
ffree
jnp
jmp
fldl
push
imul
in
adc
sti
into
dec
push
xlat
cs
pop
stos
xor
clc
lret
xlat
push
inc
in
pop
or
int3
xor
cwtl
les
sub
xchg
sarl
imul
loop
sbb
das
dec
or
clc
in
push
cs
push
cmc
xchg
jmp
addb
dec
jle
jb
outsb
in
xor
or
pop
pushf
ret
aaa
and
or
xor
inc
dec
mov
xchg
loope
sub
pop
sub
pop
xor
cmp
sub
and
sub
sbb
adc
and
popf
pushf
adc
and
adcb
or
mov
dec
pop
int3
nop
mov
push
cmpsl
mov
popf
stos
mov
xor
sbb
repnz
fsubrs
daa
dec
in
mov
xchg
shr
ss
push
test
inc
fistps
les
movb
stc
push
add
dec
add
mov
lods
xchg
cwtl
push
pop
cmp
adc
inc
jp
or
rcrl
add
cmp
shrb
jle
rorl
mov
test
xchg
push
push
push
and
daa
push
dec
add
test
sub
and
add
inc
shr
dec
outsb
mov
ds
aas
mov
sub
dec
movsl
or
loopne
sbb
xchg
or
push
or
mov
repz
cmp
incb
add
stc
aad
push
and
or
jae
ret
jg
add
dec
push
mov
shl
out
fs
imul
les
xor
jle
mov
pop
sub
xor
clc
push
mov
dec
inc
enter
pop
pusha
dec
dec
adc
into
add
or
sbb
pop
outsb
cmp
nop
mov
adc
ficoml
or
adc
fwait
mov
mov
mov
mov
pop
into
dec
jb
cmpb
das
inc
sarb
jmp
inc
pop
dec
sbb
add
push
dec
sbbl
popa
fsubl
iret
dec
repnz
mov
loope
icebp
push
lock
dec
mov
test
mov
imul
dec
ljmp
sbb
dec
ret
fnstenv
dec
addl
sbbb
iret
sbb
fistpl
shl
cmp
ljmp
fs
mov
push
push
pusha
cli
add
mov
sub
mov
pusha
mov
and
fs
lcall
adc
xlat
dec
cs
aas
in
repz
mov
mov
in
into
mov
mov
or
add
adc
loope
xchg
push
mov
in
stc
and
or
aas
xchg
sub
divb
ret
dec
inc
sub
push
xor
jmp
sarb
jge
cmp
mov
mov
push
outsl
mov
cld
sub
sub
in
loope
cmp
pusha
shlb
add
lock
or
push
pop
jmp
add
sbb
inc
imul
arpl
jmp
mov
dec
or
leave
pop
lods
call
mov
jp
pop
fists
mov
icebp
cmp
jno
sub
addr16
cmp
mov
fwait
stos
add
js
addps
jecxz
mov
mov
adc
xchg
daa
lods
cmp
add
or
and
ficoml
sub
gs
aam
push
push
or
nop
sub
pop
inc
or
call
mov
notb
fwait
andl
mov
or
mov
xor
xchg
ja
push
shlb
mov
test
pop
jmp
int3
mov
data16
push
ret
pop
inc
mov
xchg
aam
jno
pop
pop
sub
inc
jo
xor
dec
or
xor
cs
scas
pop
in
imul
repnz
test
xchg
jecxz
inc
mov
and
jae
cmp
push
push
out
push
mov
lock
daa
movsb
sub
in
dec
cld
cmp
hlt
add
out
pop
rorl
ljmp
xor
jp
lahf
sti
cmpb
push
and
lret
push
lea
or
xor
add
aas
ds
push
cmpl
adc
push
int
mov
xor
xlat
stc
std
mov
shll
ret
inc
hlt
call
in
rcrb
add
push
mov
jo
enter
push
sub
pop
xchg
jnp
or
dec
xchg
aaa
nop
or
mov
lea
sbb
mov
push
push
jl
jb
icebp
subl
adc
push
pop
cli
je
addb
iret
rolb
lcall
xchg
xor
in
mov
fnstenv
cwtl
leave
fiaddl
cmpb
daa
xlat
sub
dec
push
and
aad
sbb
shll
push
lock
xchg
fstps
js
fisttpll
mov
sbb
and
cmpsl
fwait
daa
rolb
push
and
add
aas
mov
sub
dec
mov
sub
adc
pop
adc
jl
sub
pop
cmc
pop
pop
decb
or
xchg
dec
cli
push
push
nop
inc
cmp
xor
pop
mov
jnp
xor
adc
jmp
dec
cmp
addr16
std
stos
lods
push
sub
add
dec
or
loop
pop
call
and
pop
mov
mov
mov
inc
or
adc
pusha
add
lods
cmp
push
fildll
adc
rol
ret
ds
add
jmp
mov
lahf
bound
jmp
push
push
out
xchg
lahf
enter
call
cmp
movb
loope
add
or
lret
loopne
insl
push
add
mov
xor
cmp
jmp
jne
jmp
add
jb
push
xor
push
adc
push
or
pop
xchg
jp
jne
pop
sahf
test
sarb
jo
out
lcall
aad
pop
lea
leave
into
sub
sub
mov
je
sub
and
pop
stos
jmp
loopne
fs
adc
addr16
mov
or
movsb
ret
movsl
jns
punpckhbw
and
push
jmp
mov
outsl
movb
add
imul
xadd
ret
mov
inc
mov
ret
cmp
ljmp
ret
mov
pop
adc
cs
lock
outsl
mov
push
inc
or
lods
jp
jmp
leave
mov
push
aam
jo
daa
je
dec
push
mov
add
push
aas
lock
pop
subb
xchg
incl
inc
xchg
out
bound
sbb
push
or
xchg
in
sub
jp
sbb
push
jge
push
mov
and
pop
mov
and
mov
xchg
cli
ljmp
sub
sub
adc
push
cmp
rcrb
pop
jle
ss
scas
lret
cmp
dec
ljmp
mov
or
jmp
lock
mov
movsb
jno
scas
imul
adc
inc
mov
fistl
ljmp
jmp
and
sbbb
xor
clc
or
test
ret
in
outsb
mov
xchg
push
cmp
jb
in
sub
ja
push
cld
or
daa
push
xor
pop
addr16
or
pop
das
ret
add
stos
pop
repnz
mov
push
mov
sub
add
out
mov
add
adc
rorb
and
push
adc
repz
or
sbb
xchg
loope
es
repnz
adc
push
add
pop
mov
roll
dec
jmp
cmp
adc
or
fnstcw
jmp
movsb
sarb
inc
outsl
inc
add
loope
sbb
out
pop
inc
int3
jae
jg
pop
or
popa
jmp
not
andb
rolb
and
push
sahf
int3
in
pop
cld
filds
jae
or
xorl
lods
call
stos
imul
or
repnz
and
pop
pop
sbb
lds
into
aas
dec
xchg
push
add
mov
dec
sti
sti
jnp
out
pushf
xchg
jns
aam
or
pop
test
sahf
or
push
into
popl
dec
lods
or
push
ret
ret
lret
sbb
and
rcl
out
add
inc
or
jmp
or
jmp
dec
dec
stos
cwtl
pushf
pop
pop
push
push
leave
jno
icebp
adc
jbe
out
jnp
bound
and
aas
in
aaa
mov
jmp
mov
negb
call
xchg
xchg
int
or
pop
pusha
dec
sub
inc
mov
mov
or
andl
js
push
xlat
addb
xchg
dec
pushf
lcall
inc
push
jmp
add
sub
and
mov
jne
ja
cmp
sub
dec
jb
ss
jno
jmp
in
shlb
jnp
or
push
pop
je
nop
mov
jmp
adc
loope
adc
fbld
sub
pop
outsb
hlt
xor
mov
pusha
pusha
fldcw
in
and
pop
adc
mov
ljmp
in
lcall
std
lods
mov
cmp
jno
fdivrs
add
push
aas
pop
add
add
shlw
pop
push
sbb
jecxz
mov
icebp
mov
ds
testl
mov
xchg
pusha
aam
sub
test
das
and
fistps
or
ret
sub
inc
sbb
cwtl
dec
adc
pop
bound
pushf
jnp
add
in
not
cwtl
cmp
add
mov
jnp
faddl
pop
xor
sub
loop
neg
ja
bound
lds
es
pusha
jnp
in
test
jmp
adc
mov
aas
xchg
mov
dec
push
mov
add
lret
fnsave
or
mov
jae
test
add
push
push
cs
loope
adc
or
incl
dec
and
ret
orl
sub
jmp
xchg
push
int
cld
fbld
fs
add
out
add
pop
pop
pop
xchg
lret
pop
sub
pop
insl
mov
fs
mov
clc
jmp
jge
jae
push
push
adc
mov
out
and
inc
test
flds
int
xchg
pop
aas
gs
test
cwtl
dec
push
addr16
nop
jo
hlt
pop
push
jmp
pop
cli
sub
pop
inc
mov
or
repz
repz
xor
popa
add
dec
popf
sub
out
pop
or
mov
lds
and
into
xchg
and
ds
test
inc
and
add
or
sbb
dec
dec
shrb
lahf
aas
stc
add
sarb
adc
stos
add
jge
pop
mov
jae
cmpb
mov
js
adc
xchg
stos
inc
or
aas
repz
adc
mov
mov
jno
addr16
mov
mov
cld
out
xchg
mov
loopne
jmp
add
sub
mov
add
repz
jg
ja
std
or
cmc
popa
dec
push
push
xchg
jb
mov
out
sub
and
and
mov
scas
xchg
push
cmp
push
jo
adc
stos
mov
mov
push
adc
shll
and
decb
cmp
inc
lret
and
lret
mov
adc
dec
out
subl
xchg
test
add
jnp
push
out
sbb
es
cmp
sub
pop
jmp
adc
jmp
pop
lldt
or
inc
mov
imul
out
add
outsb
mov
testb
push
test
pop
xchg
cmp
pop
nop
pop
ret
mov
cmp
and
mov
cmc
dec
xor
or
in
movsl
add
stos
aam
cli
mov
jae
push
les
repnz
mov
add
shr
and
jo
push
data16
jno
sbb
mov
loop
dec
sti
push
jecxz
adc
movsb
dec
and
fsincos
mov
mov
orl
hlt
test
adc
pop
and
nop
jecxz
fwait
jne
loopne
sbb
push
sub
inc
cmp
pop
mov
ror
imul
mov
inc
lods
jl
xchg
push
cs
test
cmp
inc
xchg
out
popf
movsb
jp
int3
les
sub
push
insb
sub
push
in
mov
xor
xlat
pop
cmpb
dec
push
sub
mov
push
mov
shlb
icebp
or
fucompp
mov
pop
lea
filds
addb
sbb
aaa
adc
add
push
adc
xor
inc
pop
addr16
or
mov
and
adc
ja
lret
cli
adc
stos
mov
xchg
dec
adc
shlb
pushf
xchg
mov
fnsave
rclb
imul
or
sub
jg
fnsave
jp
or
outsl
push
rorb
cmp
jg
inc
xlat
push
push
xchg
pop
push
xchg
test
pop
add
loop
xlat
jmp
clc
scas
mov
or
xor
sub
push
repz
scas
shlb
xor
shl
jo
push
add
jno
outsb
adc
xchg
or
jmp
add
imul
arpl
add
or
cs
jecxz
jno
adc
imul
out
rcll
jl
and
adc
fwait
cwtl
sub
dec
pop
xor
push
add
or
outsb
add
or
nop
jge
movsl
or
dec
neg
cmp
dec
pop
or
add
fldl
and
sub
dec
sub
fmuls
jg
in
aad
es
adc
inc
pop
loop
push
pop
add
es
xor
andb
hlt
pop
cmp
xchg
mov
cmp
test
clc
add
xchg
xchg
pop
fisubs
dec
pop
mov
sbb
jmp
add
lret
push
sub
int
push
or
adc
push
leave
mov
xchg
addb
in
mov
and
repz
ds
mov
xchg
sbbl
in
aam
das
ret
adc
jg
daa
fidivs
sbb
mov
test
imul
push
push
je
filds
cltd
pop
add
insl
pop
hlt
jle
add
sub
add
pop
out
lret
and
jns
clc
das
inc
dec
addl
sti
xor
adc
test
idivl
adc
out
fldenv
in
push
pop
sbbb
leave
push
ss
jmp
or
iret
mov
push
je
faddl
adc
sub
js
lahf
dec
xchg
and
sahf
mov
rorb
jne
xchg
push
js
loopne
xor
cs
fdivrs
cld
fidivs
pop
in
fldl
cmpsl
test
push
test
pop
xchg
testb
mov
xor
stos
add
push
cltd
jnp
into
xchg
sahf
cli
xchg
jae
mov
cwtl
cs
mov
mov
adc
shlb
enter
stos
loop
shll
sub
cmpsb
cmp
dec
adc
sbb
mov
fcoms
in
call
pop
jle
adc
lret
add
push
add
ljmp
and
mov
push
jmp
xchg
fistps
xchg
push
pop
sub
sahf
data16
jnp
sub
cmc
and
scas
gs
push
loopne
mov
xor
sub
subl
or
jae
lret
or
pop
xor
idivb
sub
or
sub
push
mov
roll
xchg
xlat
or
nop
or
inc
sub
bound
xchg
aam
xchg
jl
inc
pop
loop
sub
lods
ja
lahf
mov
mov
and
and
jp
outsl
pop
hlt
pop
or
push
adc
sti
dec
pop
push
pop
push
cmp
das
das
or
mov
xor
mov
divl
ret
movsl
push
and
icebp
sub
jmp
jl
outsl
test
push
mov
adc
or
push
gs
out
push
xlat
mov
push
loope,pt
dec
cmp
push
pusha
mov
inc
daa
fldl
aad
nop
popa
and
loop
jp
daa
push
rcll
inc
mov
cmp
popf
stc
lahf
in
xchg
pop
dec
shll
xchg
sbb
xchg
xchg
jno
cmp
lahf
mov
jne
push
jp
popl
das
dec
or
xchg
je
leave
xor
insl
lcall
mov
into
repnz
jle
cmp
test
dec
dec
enter
sbb
cmpsb
ja
into
sti
pop
sub
inc
jb
pop
dec
xor
lods
jb
lods
insb
xchg
pop
push
lods
inc
inc
sbb
pop
jmp
mov
jmp
shr
push
and
jmp
ljmp
sbb
leave
orb
sbb
inc
xchg
or
push
pop
das
sbb
cmpsl
sub
add
sub
sbb
sbb
scas
xchg
dec
or
jmp
rcll
cwtl
pop
outsb
inc
push
pop
mov
jbe
jg
mov
sub
in
and
push
ret
movsb
pop
cmc
ljmp
add
add
pusha
sub
push
push
push
or
xchg
mov
mov
dec
or
fmul
popf
push
mov
mov
movsl
mov
sbb
js
leave
push
pop
mov
outsb
cmpsb
xor
pop
xchg
sub
push
cmp
out
inc
mov
mov
adc
mov
mov
test
xchg
jae
loope
ret
pop
push
daa
xchg
ret
dec
pop
mov
adc
mov
or
dec
scas
sub
sub
xchg
out
cmp
sub
fimull
add
jmp
js
popf
je
xor
movsl
lcall
or
or
and
lock
and
dec
sub
mov
jns
loop
in
push
js
push
push
add
in
sub
add
xor
negb
jmp
test
inc
shlb
nop
int
xchg
jmp
push
push
fidivrs
into
mov
sub
sti
jmp
jmp
pop
push
mov
call
push
loopne
not
mov
adcb
pop
pop
mov
cmpb
das
vpunpckhdq
std
ret
fldl
lods
inc
cmp
rorb
dec
sbb
inc
sub
xchg
push
push
jmp
fisttpll
adcl
std
loop
jp
and
ret
jbe
cmpb
das
mov
mov
xchg
or
icebp
sub
xor
push
popf
das
jl
iret
jmp
stos
dec
test
mov
loope
stc
icebp
icebp
jmp
mov
sub
scas
lds
push
pushf
mov
dec
fisttpll
popf
jge
imul
jge
xor
mov
fnstsw
sbb
inc
xchg
fiaddl
jle
mov
frstor
add
inc
and
xchg
mov
faddl
fistpl
sub
add
push
xor
daa
insl
out
aam
neg
hlt
sbb
cmp
out
pop
dec
out
and
pop
xor
enter
orps
jae
pop
sbb
cmp
inc
stos
inc
test
outsb
inc
sahf
xor
shrb
jmp
dec
lret
and
add
call
sbb
sub
and
rorb
xor
mov
push
xor
pop
mov
adcb
data16
cmp
mov
call
ljmp
adc
or
cmc
insl
data16
mov
add
pop
cs
and
test
jne
pop
lret
mov
shrb
dec
mov
fldenv
adc
mov
rclb
rcrb
push
pusha
aam
lds
and
out
jmp
andb
or
jmp
cmp
insl
sub
and
cwtl
mov
mov
sub
orb
lea
push
push
sbb
and
or
ret
xlat
ret
pop
ret
icebp
jg
pop
mov
shlb
adc
dec
mov
rcrl
sbb
idiv
scas
push
cmp
es
mov
and
pop
push
push
dec
pop
lods
inc
popa
jl
cmp
imul
jge
aaa
mov
mov
xor
add
nop
xchg
jbe
es
and
cmp
push
push
test
mov
xchg
sbb
xchg
lahf
rol
decl
push
mov
pop
sub
insl
add
push
push
mov
lds
gs
test
add
frstor
xchg
ja
jae
icebp
lcall
stc
iret
in
decb
jo
sub
outsl
mov
or
pop
add
pop
push
test
or
outsb
push
fcomps
stos
jbe
fucomip
fisubs
dec
add
xor
icebp
mov
cmc
add
das
daa
jbe
or
into
add
icebp
stos
adc
stos
push
xchg
add
and
xor
mov
jb
add
dec
sub
loopne
hlt
lcall
jge
sub
lock
or
push
jmp
lods
jbe
repnz
sub
add
insb
add
sete
clc
or
xchg
int
inc
bound
xor
hlt
mov
mov
sti
sub
or
test
popf
lret
lcall
pop
xchg
jmp
or
lahf
push
nop
inc
loopne
sarl
call
test
pop
stc
mov
jmp
ja
dec
loop
fdiv
pop
mov
cmp
lock
mov
hlt
and
push
ret
out
cli
push
jo
dec
add
leave
jne
and
xchg
ret
data16
xor
hlt
mov
xchg
jb
insb
insl
adc
inc
ficomps
pop
add
movsl
pop
sub
add
add
pop
mov
test
xchg
addb
pop
add
push
les
cld
and
inc
shrb
xor
and
das
mov
xor
or
mov
jo
mov
jo
cmp
pop
or
outsl
daa
pop
jmp
test
mov
add
push
mov
scas
in
cmc
lock
roll
pop
cmp
and
pop
jmp
xchg
int
jb
lods
or
ss
xchg
std
das
add
cld
push
mov
mov
push
ret
sub
xlat
ljmp
push
jp
add
sub
bound
xchg
lods
push
and
or
jmp
addl
not
test
xor
ret
xor
pop
jge
cmp
mov
pop
adc
pop
add
ret
push
mov
test
dec
cli
aaa
sti
movsl
dec
mov
ret
and
pop
andb
ljmp
fcmovne
add
and
les
dec
ret
mov
dec
jp
and
mov
lods
loop
push
jg
inc
or
push
jp
and
add
xor
pushf
sub
push
psraw
movsl
pop
scas
out
pop
stos
sahf
mov
and
mov
or
push
insl
movsl
xor
gs
cwtl
xor
in
popf
pop
jns
inc
mov
add
pop
lcall
adc
add
cwtl
mov
cmp
xchg
daa
std
add
mov
bound
les
inc
jmp
pop
push
dec
mov
shrb
dec
adc
mov
adc
aad
test
push
pop
xlat
lret
cmpsl
cli
stc
push
test
daa
out
imul
bnd
push
adc
push
jo
bound
push
xor
pop
pop
cltd
cmp
out
and
rclb
xchg
test
shrb
pop
je
push
cld
mov
mov
mov
pop
add
fsubp
inc
call
or
cld
cmp
loop
les
mov
xchg
test
test
sub
testl
inc
and
push
jecxz
jle
filds
jmp
and
int
mov
xor
fcoml
jmp
push
pop
push
push
loopne
stos
add
jmp
call
repz
xor
pop
nop
jno
pop
mov
cli
pop
repz
xchg
movsb
pop
xor
inc
loop
popa
push
ja
add
xchg
mov
mov
out
pop
or
mov
jmp
mov
addl
mov
jmp
test
pop
pusha
jmp
inc
jno
xor
out
push
sbb
sbb
cmp
pop
push
daa
shl
add
testb
mov
jbe
and
inc
cmpsl
push
xor
nop
xchg
xchg
lcall
ljmp
jg
sbb
data16
inc
cli
jb
inc
push
cmpsl
loopne
mov
pop
jle
mov
jo
mov
xor
jmp
cmp
out
idiv
lret
xlat
pop
cmp
jle
mov
jns
xor
mov
nop
push
dec
xchg
push
and
and
push
and
pop
xchg
mov
repz
sub
xchg
and
mov
das
lahf
sub
mov
negb
gs
mov
out
leave
in
nop
mov
shlb
push
inc
adc
push
xchg
test
add
mov
dec
pop
mov
das
call
adc
add
aad
pop
lret
mov
cld
and
push
and
and
bound
pop
add
adcl
call
rclb
xor
pop
pop
addl
cmc
add
pop
adc
xor
mov
fwait
popa
push
add
mov
pusha
dec
fsts
repz
outsb
movsl
mov
mov
sahf
ror
xor
mov
and
lcall
ja
mov
je
mov
add
sub
pushw
shlb
add
rclb
movsl
jno
xchg
inc
fs
and
xchg
dec
or
pmuludq
xor
jns
imul
push
push
daa
or
ficoms
das
xchg
sub
mov
push
sub
iret
xlat
sti
aam
test
mov
aam
daa
std
push
mov
xor
fimuls
jg
pop
lar
scas
orl
popa
les
add
cmp
sub
dec
movsb
push
mov
aam
call
push
jno
or
add
lds
sub
xor
pop
or
jmp
push
fwait
jb
xor
in
jp
and
cmpsb
testb
fnstenv
pop
mov
loopne
push
inc
mulb
adc
clc
sub
sub
push
mov
mov
insl
pop
cmp
push
inc
mov
pop
sub
aam
stos
and
jl
or
push
pusha
test
pop
push
jmp
cmpsl
mov
call
pop
mov
es
or
push
sub
sbb
add
into
jb
xor
js
pushf
mov
pop
add
jmp
sbb
add
popa
inc
andb
cmc
out
jno
mov
mov
add
sbb
mov
lahf
mov
imul
push
or
dec
outsl
push
fiadds
and
loopne
inc
loope
clc
sub
mov
or
out
mov
sub
push
mov
push
sti
adc
or
adc
or
cld
add
jne
xlat
and
sub
ret
nop
pop
stos
inc
xchg
xlat
pop
sbb
inc
jae
sub
pop
pop
push
add
dec
sub
mov
fiadds
pop
pop
add
lods
scas
lret
jmp
add
je
jp
mov
cmp
adc
pop
add
sub
or
add
lret
adc
inc
hlt
mov
popf
movq
xor
add
cs
jg
dec
xchg
gs
pusha
mov
shl
push
push
mov
test
out
loopne
cmpb
das
popf
std
sub
stc
fsubs
ds
sbb
add
jmp
mov
int
shll
aas
divb
fisttpl
xor
pop
inc
sub
es
and
push
dec
or
je
loop
pusha
repnz
pusha
mov
mov
stos
mov
mov
sarb
movl
out
hlt
fs
xchg
fistps
lock
aaa
inc
cmp
or
mov
jle
jns
pusha
pop
mov
fcoms
pop
sub
push
jne
inc
andb
fisttpl
add
push
popf
cli
cmp
movsb
mov
testb
ret
mov
xchg
pop
mov
fiadds
imul
xchg
ficoms
arpl
sbb
adc
sbb
repz
and
adcb
rcll
fwait
add
inc
ds
fildll
movsb
or
jbe
rclb
idivl
sbb
cmp
movsb
sub
jge
rorl
ja
nop
push
xchg
stos
xchg
mov
std
and
dec
sub
sub
flds
outsl
sub
push
imul
push
into
jmp
push
push
xchg
in
dec
ds
pop
cmp
dec
add
cmp
push
add
inc
or
ds
mov
xor
rclb
mov
push
xchg
jl
cli
xchg
les
sahf
pop
add
push
testb
sbb
cmp
cwtl
ja
sub
lret
or
lods
test
xchg
sub
and
pop
addl
ret
mov
push
or
pop
jmp
push
mov
outsl
push
ret
jo
daa
mov
ret
out
divl
test
in
repnz
or
in
lea
push
or
mov
pop
jnp
arpl
stos
int3
add
in
rdtsc
daa
movsb
les
lods
imul
lds
scas
inc
dec
or
pop
int
or
pop
push
sub
xchg
jle
adc
mov
lock
pop
push
ucomiss
repz
out
mov
pop
fsubrs
jle
test
sub
push
mov
sbb
mov
dec
or
scas
idivb
dec
das
or
mov
lcall
pop
push
mov
icebp
mov
xor
push
jno
jecxz
mov
cmp
inc
pusha
inc
adc
sarl
adc
add
dec
or
push
jp
lahf
jmp
sub
mov
adc
jb
add
and
pop
mov
cmp
inc
jne
out
arpl
nop
ret
cltd
mov
xor
mov
imul
jnp
jnp
aad
jb
orb
xchg
stos
into
xor
push
mov
test
js
push
xchg
stos
mov
fs
or
jge
dec
lahf
idiv
out
movsb
inc
pop
std
clc
shll
pop
insb
xchg
test
jbe
push
mov
dec
enter
xchg
adc
or
es
adc
cmpl
ffreep
mov
xchg
cmpsb
mov
ret
jne
in
out
jb
pop
cli
subl
cmpsb
jle
pop
jp
xchg
scas
test
loopne
inc
cmp
mov
mov
imul
aas
push
repz
dec
jl
insb
xorl
cli
lahf
pop
out
xlat
inc
jp
imul
dec
xor
or
jmp
sbb
sub
das
in
pusha
mov
mov
jne
cli
dec
clc
push
rcrl
out
pop
inc
add
jne
add
stc
sub
xchg
ljmp
cmpsb
or
inc
adcb
inc
cmpl
push
fnstenv
imul
fs
in
xor
ja
int
js
jle
adc
or
inc
push
jne
jp
jl
dec
sbb
out
push
add
xor
bound
pop
add
aam
jae
fcomps
arpl
jg
gs
stc
sub
stos
inc
sub
shrl
das
sbb
and
sbb
adc
jl
add
loop
in
ja
push
cwtl
cmp
repz
aam
out
ficoms
pop
and
pop
mov
mov
and
aas
add
lret
xchg
not
orb
call
dec
fists
shr
ja
xor
push
jle
jmp
inc
mov
pop
pop
xchg
roll
jmp
xchg
movsl
jbe
ja
xchg
cmp
pop
push
pop
push
mov
add
jb
pop
push
inc
xor
iret
xchg
sbb
jle
or
ret
rol
xor
popf
aas
std
sub
fstps
xchg
add
mov
rcl
hlt
daa
jne
push
das
xor
and
cmp
test
cwtl
aaa
or
cmp
je
push
push
or
mov
sbb
mov
lods
mov
cmpl
dec
xor
jbe
iret
scas
mul
jg
and
aam
cwtl
hlt
in
data16
pop
push
push
fcompl
cmpsl
into
push
and
insb
sbb
ljmp
mov
dec
cmpsb
sub
xor
outsb
push
sahf
icebp
xchg
imul
xor
xor
jmp
fs
add
fwait
push
push
jo
jl
mov
sarb
neg
popf
call
fisttps
sbb
testb
pop
add
and
jne
out
notb
adc
out
add
insl
jb
loop
rorb
xchg
addr16
xchg
mov
mov
adc
pop
add
aas
call
inc
cmpb
mov
xor
call
xchg
lods
in
jne
add
lret
xor
jmp
dec
mov
pop
rcr
es
cwtl
mov
mov
cmp
loop
lahf
js
mov
cmp
push
jle
jae
stos
popa
lret
fstpl
lea
mov
in
add
ss
ja
jmp
das
dec
scas
int3
iret
sbb
jmp
ficoms
cltd
jmp
inc
xchg
mov
add
ljmp
aas
pop
cmpsb
dec
mov
and
add
js
sub
pushl
sbb
adc
lods
inc
add
nop
iret
out
outsb
and
js
add
loope
scas
cli
push
add
or
cmp
lds
popa
clc
cmpsb
push
shrl
pop
mov
cld
insb
inc
or
lret
jns
add
dec
push
jno
sub
maskmovq
notl
rorb
push
mov
sub
mov
sub
mov
daa
adc
mov
sbb
mov
outsb
sbb
frstor
orb
ljmp
pop
inc
inc
dec
or
imul
mov
jmp
xor
pop
imul
inc
outsl
out
and
cmp
dec
dec
stos
sub
push
sub
adc
std
mov
mov
pop
jmp
inc
or
and
cmpb
pop
and
lock
test
inc
push
mov
pop
and
and
scas
cmp
outsb
and
subb
and
xchg
push
test
push
xchg
cmc
inc
xor
fadd
fstl
add
es
jnp
cmpsl
cmc
push
out
push
xor
mov
enter
or
mov
add
add
imul
sbbb
cli
push
mov
lods
cwtl
sbb
cwtl
pop
ljmp
nop
pusha
mov
mov
in
push
push
call
pop
sub
or
xchg
adc
cmp
movl
pop
cwtl
pusha
lds
xchg
dec
mov
adcl
mov
ss
and
inc
ret
push
push
push
mov
mov
sub
xchg
push
jle
pop
push
outsl
test
dec
xor
xor
pop
mov
or
shr
out
cmp
xchg
jmp
rcl
push
sub
es
imul
aaa
jne
in
ss
shr
mov
fs
nop
cmp
and
cld
mov
adc
ss
out
pop
mov
fadds
adc
imul
mov
or
popa
dec
push
subl
iret
jo
popf
js
pop
add
je
outsl
lahf
pop
cmpsl
or
inc
dec
push
push
mov
jbe
add
sbb
inc
insl
gs
fdivrs
cmp
or
shrl
mov
push
inc
ds
inc
cs
shlb
aaa
loop
xchg
jo
jmp
std
pop
jne
cmp
repnz
jge
call
aad
mov
ret
jmp
push
arpl
loope
dec
push
in
xchg
mov
mov
jmp
sbb
loop
inc
sub
jg
pop
jns
into
dec
mov
push
or
cmc
shrb
ljmp
icebp
mov
mov
xchg
repz
je
lret
sbb
js
xor
popa
stos
cmpps
test
dec
pop
push
sub
icebp
xchg
jnp
and
jmp
pop
lret
mov
push
cmp
lock
mov
mov
incb
sub
sar
iret
in
fs
xor
mov
out
js
ds
inc
and
jge
jno
shll
lock
scas
mov
std
popf
push
mov
sbb
loop
push
aad
insb
pusha
add
int
mov
lret
call
aas
iret
dec
pop
push
in
mov
arpl
push
cmpsl
jle
lds
imul
aas
sarb
push
pop
es
xchg
or
andb
push
or
jnp
call
cmp
xchg
fnsave
adc
jg
push
add
std
sub
decb
xchg
and
push
shl
cmp
stos
or
dec
inc
cltd
es
push
mov
push
push
jmp
ds
mov
inc
pop
xchg
mov
xor
pop
push
pop
pop
test
roll
iret
shrl
cs
ret
ds
pop
mov
xchg
out
sbb
sbb
adc
cmp
dec
fidivrl
pop
or
sub
sbb
mov
sub
dec
lock
add
sbb
mov
dec
in
push
sub
testb
pop
push
push
jnp
jecxz
jo
leave
xchg
call
pop
push
mov
xor
bound
rol
or
fcomps
jmp
out
pop
push
inc
int3
jmp
mov
mov
jmp
mov
shr
jmp
xchg
in
pop
not
jmp
xor
add
xor
add
shl
jmp
sbb
imul
into
adc
ret
pop
rcrl
fsubrl
stos
xor
add
sub
cmc
adc
icebp
cltd
inc
loopne
mov
mov
xor
cwtl
hlt
and
sbbl
and
inc
adc
dec
sti
bound
sarl
in
test
mov
adc
test
or
sub
push
popa
mov
cmpsl
mov
in
fs
sbb
les
xor
out
xor
sbb
dec
or
addr16
dec
push
out
or
ret
fucomi
hlt
out
sub
push
push
inc
adc
mov
push
xor
xchg
push
stos
xchg
inc
sbb
sbb
outsl
or
xchg
or
movsb
mov
mov
or
sbb
sahf
dec
inc
repnz
push
mov
inc
add
xor
sbb
xlat
imul
das
js
js
dec
mov
shl
push
pushw
sbbl
xor
jle
test
cli
mov
dec
movl
cmp
push
pop
lahf
cmp
loop
les
mov
andb
or
loop
clc
repnz
mov
addr16
or
in
imul
push
hlt
fs
and
add
jp
repnz
mov
add
jnp
daa
cmp
pop
sti
test
movnti
shl
cmpsb
pop
sahf
stc
add
xor
pop
or
pop
add
les
dec
jmp
dec
push
xchg
mov
stos
daa
pop
cmp
loope
add
dec
and
out
pop
push
mov
xor
pop
jns
sbb
add
cmp
add
push
mov
xchg
cmpsw
jnp
loopne
jle
nop
sbb
push
loope
mov
pop
stc
pusha
mov
and
jmp
fdivrp
mov
gs
movsb
xchg
or
test
dec
cmpsb
sbb
lods
fwait
sub
insl
xor
cmp
sub
insl
ljmp
sub
adcb
outsl
jmp
push
cwtl
ljmp
adc
scas
add
inc
mov
insl
mov
popf
and
and
jecxz
sub
rcll
cli
pop
mov
in
testl
push
adc
mov
je
pop
pop
outsb
shlb
mov
hlt
pop
pop
enter
pop
pop
in
fcompl
ret
out
mov
push
pop
jmp
bound
or
and
push
jecxz
flds
cwtl
jmp
or
mov
inc
pusha
xorl
mull
cmp
repz
dec
mov
xchg
mov
add
mov
and
sub
or
xor
clc
sub
add
movl
mov
cli
push
rclb
insb
push
pop
pop
jmp
out
xchg
mov
adc
int
int3
xchg
outsb
adc
insl
pop
adc
xchg
je,pn
or
xchg
xchg
fcomi
or
push
aas
sub
inc
mov
je,pt
mov
shl
neg
icebp
arpl
push
push
push
dec
mov
add
pop
xor
inc
sbb
jmp
outsb
mov
incl
or
sbb
shrb
jmp
and
daa
and
inc
jmp
pop
test
xchg
into
movsl
mov
sbb
notb
fstpt
mov
and
lock
mov
into
cmp
mov
mov
push
mov
push
push
push
and
inc
xor
dec
out
add
jl
cwtl
mov
out
dec
clc
pop
sub
inc
mov
rorb
xorb
sbb
fdivrs
cmpb
jle
popa
dec
add
adc
fldenv
jno
loope
cmp
jecxz
push
push
sbb
lods
jnp
daa
ja
push
test
xor
rcrl
imul
movups
lahf
mov
cmp
das
sub
pop
pop
jo
jmp
push
and
pop
dec
mov
clc
sbbl
out
imul
push
mov
xchg
jmp
mov
mov
jmp
lea
clc
mov
cmpsl
jecxz
sub
mov
mov
add
movsb
dec
jmp
mov
inc
cwtl
outsl
or
mov
hlt
dec
mov
es
pop
jmp
dec
push
dec
and
ret
mov
pop
ljmp
add
dec
std
mov
pop
mul
in
sub
ja
push
repz
cltd
insb
repz
cmp
subb
inc
cwtl
or
mov
clc
insl
adc
push
cltd
shl
lret
ret
shrl
push
ret
adc
mov
orb
and
push
jmp
pop
iret
sub
pushl
push
insl
out
mov
lods
movb
cmpsl
aas
and
pop
or
inc
and
ss
add
xchg
dec
sub
mov
insb
rolb
fmuls
daa
add
inc
push
fidivrs
test
jmp
mov
loopne
cmpsb
xchg
imull
push
in
nop
orl
mov
sub
jne
shll
out
mov
andb
pop
scas
push
jge
xchg
std
out
cmc
lret
and
fisubrs
mov
inc
sbb
jl
add
jns
mov
and
das
push
adc
adcl
xor
addr16
faddp
push
cmp
xchg
jnp
ficomps
sbb
int3
adc
hlt
ffreep
in
lret
loop
sbb
es
test
inc
add
cwtl
ljmp
jle
insl
in
out
and
adc
arpl
leave
js
sub
imul
add
enter
or
cli
das
xchg
leave
jno
cmp
and
notb
sub
add
std
push
add
in
jae
dec
insl
mov
push
cltd
scas
loopne
das
dec
mov
push
mov
and
pop
fs
jae
iret
sub
sbb
popa
mov
arpl
sub
out
in
jo
mov
dec
xor
dec
xchg
pop
movsb
mov
xor
inc
out
pop
das
push
push
ja
pop
out
cmp
aam
sbb
or
lahf
dec
test
orb
jl
pop
mov
push
mov
andb
int3
adcb
xor
push
inc
cli
fcoml
rolb
sub
hlt
inc
pop
pop
ss
mov
sub
jl
or
lock
push
xor
and
add
add
adc
sbb
inc
mov
jno
outsb
les
xchg
inc
mov
sbb
or
xchg
gs
std
adc
pop
fistps
dec
jno
push
or
cmp
sub
in
mov
cmpsb
inc
pop
mov
outsl
movl
xor
lods
mov
sub
xchg
pop
xor
or
fstps
in
outsb
add
movsl
sarl
pop
mov
mov
add
mov
stos
add
adc
fistl
les
movsl
test
or
mov
lock
push
orb
pop
pop
cli
in
add
pusha
andl
xor
test
repnz
js
add
cmp
cmpsl
loope
cs
ja
sub
adc
outsl
loopne
out
mov
push
mov
ja
sbb
sahf
pop
jmp
or
sbb
sbb
push
adcl
adc
andl
ja
sbb
cmc
scas
push
popf
in
adc
xchg
push
ljmp
test
dec
adc
test
mov
in
dec
pop
mov
insl
ret
movsb
pop
pop
xchg
data16
xchg
ret
clc
pop
repz
into
xchg
inc
pop
lret
mov
pop
push
xchg
pusha
inc
sbb
sbb
out
outsb
in
xor
dec
lds
push
jl
pushl
call
jle
mov
pusha
push
or
inc
stos
inc
cmp
sbb
jmp
popl
add
in
out
jmp
mov
pusha
jmp
mov
push
push
rol
dec
sub
lods
lea
push
fldt
mov
nop
or
idivb
pop
clc
int3
fnstenv
jmp
sub
aas
jo
dec
xchg
ja
adc
push
stos
lret
or
xor
mov
in
lahf
mov
add
xor
adc
loop
ficompl
pop
dec
and
mov
xor
push
xchg
push
cs
dec
sahf
pop
add
cwtl
adc
js
dec
test
test
sub
ret
jecxz
mov
ljmp
mov
sbb
data16
test
xor
and
jmp
loope
add
xlat
ret
pop
addl
data16
pop
pop
push
and
lock
lahf
jns
in
imul
lds
or
sbb
add
stos
dec
jbe
mov
push
mov
pop
mov
shr
lods
jo
add
xchg
xor
inc
add
xchg
fs
mov
jmp
jmp
jo,pt
push
inc
loop
roll
and
or
and
and
sbb
add
in
pop
cmpb
movsl
fucom
insb
sub
adc
pop
mov
or
push
mov
adc
xchg
xor
andb
adc
ljmp
inc
int
pop
xadd
ja
cs
lock
mov
or
or
cmp
sbb
sbb
adc
lock
ljmp
daa
push
ret
bound
scas
cwtl
add
imulb
jnp
xchg
fs
push
jmp
cmpsb
and
xor
pop
cmp
cwtl
aam
cmp
sbb
outsb
cwtl
cmp
push
cwtl
sub
sbb
gs
fnstcw
and
cmp
adc
xchg
incl
int3
js
cmp
loope
pop
decb
xchg
mov
sbb
xor
out
outsl
in
pop
bound
and
push
push
mov
inc
les
lods
cld
jns
std
loope
cmp
sbb
sahf
push
xorl
popa
cmp
sbb
dec
nop
or
jbe
mov
cmp
das
sub
xlat
arpl
push
in
xchg
xchg
lods
loopne
faddl
hlt
adc
push
dec
push
jmp
xchg
or
in
sbb
popa
mov
pushf
lock
fs
or
and
inc
or
or
imul
roll
mov
xor
add
push
dec
and
adc
bound
pop
pop
mov
dec
dec
into
jl
ret
fnstsw
aad
aas
dec
cltd
mov
inc
loop
cmp
das
push
and
mov
jno
into
sub
push
repz
mov
jo
lods
sub
dec
pop
pop
popa
movsb
lcall
mov
add
add
add
and
insb
adc
icebp
mov
jecxz
adc
dec
add
cmp
add
dec
insb
xchg
pop
test
inc
add
mov
mov
dec
xor
jb
or
push
mov
fs
popf
cmp
scas
stc
pop
mov
mov
adc
lahf
cmpl
cli
mov
outsl
fsubrl
movsb
inc
mov
sbb
add
pop
fwait
shlb
xor
cltd
int
out
testl
outsb
sub
or
adc
into
dec
mov
popa
adc
scas
test
cmc
jmp
dec
mov
xor
sti
cmpsb
in
dec
ret
fsubrs
jmp
inc
or
addr16
inc
mov
negl
inc
xor
stos
shr
mov
pop
shr
add
icebp
mov
popf
or
jl
scas
add
push
push
daa
sub
das
push
roll
or
inc
jmp
fadd
inc
rorl
or
incb
insl
cmp
sub
sbb
mov
mov
test
or
pop
pop
mov
sub
and
test
int
icebp
lock
das
push
bound
daa
fnsave
sti
jge
in
mov
adc
ss
push
sub
jecxz
sub
sub
and
cmp
mov
rcrb
or
pop
shll
add
cwtl
sbbb
mov
not
xor
andb
imul
or
or
sub
sub
inc
pop
jl
and
ret
sbb
jbe
popa
icebp
add
jns
jno
adc
pop
and
push
sub
out
add
popa
pushw
pop
ret
call
mov
mov
dec
jecxz
push
ljmp
shrl
push
and
pop
and
xchg
int3
ficomps
mov
in
pop
pop
push
pop
out
dec
jmp
jae
shl
sti
loopne
and
movsl
push
mov
xor
inc
dec
sub
jns
dec
adc
cmp
adc
add
sahf
fidivrl
clc
jmp
fwait
dec
aad
or
pop
jmp
pop
jmp
cmp
lret
fwait
lret
inc
loop
dec
fs
xor
push
cmpsl
mov
cmp
jmp
movsl
fisttps
mov
pop
mov
dec
inc
mov
pop
rcrl
jmp
cmpb
mov
aad
mov
dec
nop
jp
mov
scas
xchg
aad
iret
das
push
add
or
and
push
inc
dec
cmp
inc
in
js
jbe
mov
andl
hlt
js
dec
and
mov
add
xchg
pop
push
out
cwtl
lret
movsb
sub
les
push
std
hlt
imul
sbb
and
pop
mov
andb
stc
aaa
mov
push
je
jb
ja
xchg
bound
adc
stos
fidivl
ficoml
dec
mov
fists
jl
pop
test
sahf
mov
lock
and
and
pop
ja
mov
cld
jmp
mov
daa
js
pop
push
lds
out
xchg
or
leave
add
mov
repz
push
test
sbb
sub
jle
jb
and
push
mov
test
in
push
repz
push
das
stos
inc
xor
aaa
ret
loope
xchg
movsl
xchg
cli
addl
jecxz
bound
enter
sub
icebp
dec
scas
cmp
add
add
orb
adc
fists
jge
sub
pushf
ds
jmp
pop
jne
jl
rcll
repz
in
cwtl
push
pop
mov
cmp
xchg
add
gs
push
xor
sti
sbb
push
sub
and
xchg
and
pop
loopne
xchg
and
push
push
cmp
push
xor
or
scas
sub
pop
xchg
or
inc
fstl
add
pop
xor
push
loop
xlat
jae
add
fdivr
and
sti
dec
add
cmc
sbb
daa
div
pop
test
popf
or
sub
push
stc
jo
insb
push
inc
inc
push
dec
rcl
sbb
jbe
add
xor
pop
dec
pop
adc
bound
pop
iret
je
mov
jmp
add
enter
push
das
and
aas
or
test
push
adc
sub
xor
jbe
imull
inc
mov
pop
dec
cmp
ss
add
imul
out
js
pop
sub
push
or
fsubrs
scas
aaa
inc
ret
pop
inc
stc
mov
fcoms
aam
out
mov
je
lods
xor
and
adc
mov
shlb
jns
insl
lods
sbb
nop
xchg
pop
leave
push
inc
cld
adc
jle
adc
cmp
out
cmp
or
cltd
push
mov
sub
add
mov
insb
adc
xchg
pusha
xchg
int
adc
push
sbb
mov
push
int3
es
and
loopne
inc
mov
leave
push
or
mov
loop
pop
jnp
shlb
daa
sub
jne
hlt
mov
jmp
ljmp
jo
repnz
push
lahf
pop
ljmp
std
push
sti
cmpsl
adc
xor
and
imul
xchg
add
pop
sbb
dec
xchg
add
xor
jg
cmc
shlb
sbb
pop
xor
shl
data16
cmc
sub
ja
pop
xchg
push
push
push
cmp
jb,pt
pop
cmc
jae
mov
stc
cmc
shrd
xlat
adc
leave
or
lea
dec
mov
loope
or
jle
jae
lock
mov
add
jmp
mov
std
and
sub
je
cmp
push
or
pop
push
mov
mov
popf
sub
pop
push
mov
testb
shl
popa
in
add
mov
rcrb
dec
xchg
popf
xor
add
pop
fldln2
dec
orb
xchg
jns
inc
jmp
xor
inc
lret
xchg
xlat
add
aam
es
sbb
sbb
pop
test
fldt
stc
pop
pop
in
push
dec
or
add
mov
jne
rcrl
jmp
push
dec
fwait
xchg
enter
xchg
inc
pusha
ja
hlt
jge
xchg
jge
push
je
sar
jle
cwtl
pop
sbb
jbe
sub
out
addr16
addl
imul
cmp
mov
pop
push
add
sub
push
jmp
or
gs
add
fimuls
rorl
fisttpll
push
mov
imul
dec
add
divl
sahf
pop
or
push
jae
shll
stos
out
dec
scas
lret
enter
sub
fs
test
adc
pop
mov
and
xor
iret
sbb
jmp
lds
jl
es
push
add
cmpsl
shrb
cli
sub
mov
pusha
push
add
pop
clc
addb
int
insb
add
ds
out
aas
out
dec
test
inc
fwait
mov
std
mov
sti
in
xchg
dec
xor
pop
cmpl
mov
loop
lret
outsb
fisttps
nop
cmc
gs
mov
cmp
mov
fiadds
or
stos
xor
sbb
add
xchg
jp
mov
push
sbb
mov
dec
loopne
push
outsb
and
loop
aad
inc
dec
cld
or
jmp
sub
mov
fcomi
rcrl
mov
xor
or
mov
cwtl
lock
add
jnp
push
repz
int
mov
nop
xchg
sub
push
mov
inc
jl
inc
mov
sbbb
xor
test
in
jmp
aas
shr
jmp
xchg
fneni(8087
jge
sub
pusha
or
jno
mov
push
lds
jecxz
jge
pop
mov
jmp
ret
xchg
hlt
dec
cmpb
add
mov
jl
call
push
jle
out
icebp
cli
push
add
inc
shr
iret
inc
jp
push
and
push
hlt
ret
das
jb
xchg
dec
jl
push
xor
add
repz
or
stos
push
aam
xor
stos
imul
sbb
xlat
jns
sub
std
test
pop
lock
dec
repnz
in
insb
pop
daa
push
lret
xchg
repz
mov
aas
ljmp
xor
push
mov
adc
fisubl
pop
lret
pop
jmp
add
jl
or
pop
out
jmp
mov
pop
or
and
push
js
pop
insl
adc
add
es
fcomps
pop
mov
ja
ljmp
imul
push
add
jge
push
or
adc
pop
or
sub
sbb
mov
pop
dec
add
lret
or
out
mov
dec
shrb
mov
mov
repnz
movsb
addr16
psubusw
sub
add
push
jmp
adc
push
push
add
sti
adc
enter
adc
dec
das
icebp
outsl
xor
push
xor
dec
cmp
icebp
cmp
insb
adc
cs
pop
ret
jg
push
adc
popl
jbe
cs
jb
push
sub
jo
fwait
jno
dec
gs
stos
movsb
cvtdq2ps
pop
push
jmp
cmp
lds
sub
aam
loope
in
inc
or
dec
cmp
in
stos
movsb
sub
sub
stos
add
dec
sub
pusha
jmp
int
je
aaa
sub
test
dec
mov
or
and
add
jp
xor
shlb
roll
mov
bnd
sub
inc
lods
ss
ljmp
and
push
or
rdtsc
xor
and
jmp
popa
mov
sbbb
jae
mov
adc
mov
mov
push
shl
dec
sbb
lahf
inc
sbb
bound
pop
jbe
push
sti
inc
mov
mov
daa
dec
push
sahf
mov
mov
mov
jne
xor
lret
push
out
mov
adc
stos
add
out
push
test
shrb
pop
outsl
adc
pop
and
pop
cwtl
leave
sarb
add
or
jbe
daa
lock
adc
mov
dec
fstps
cmp
pop
xchg
sbb
or
movsb
pop
or
cwtl
cmp
push
imul
js
or
dec
sbb
or
dec
mov
mov
dec
or
sub
inc
rorl
fsubs
pop
xchg
push
in
sub
int3
cltd
mov
insb
sub
push
adc
and
test
fsubrs
fstl
out
ret
jnp
cs
lret
or
jno
dec
insb
add
pop
arpl
or
hlt
xchg
dec
insb
sbb
cmp
inc
testl
fldcw
cmp
neg
add
sbb
mov
popa
pop
clc
ja
sbb
mov
dec
mov
outsb
xchg
js
xchg
popf
mov
mov
or
xor
or
pop
repnz
outsl
pop
jge
xchg
std
adc
and
push
add
fnstsw
div
int
das
fsub
mov
cmpsl
daa
cli
pop
out
iret
add
roll
jno
sub
push
pop
push
clc
sub
scas
and
and
into
and
sbb
sub
sub
inc
stos
and
dec
pusha
out
add
mov
inc
adc
xor
or
aad
int
cwtl
pop
jb
ljmp
xlat
stc
ja
jmp
aad
mov
cmc
sub
dec
push
je
leave
cld
mov
pop
in
adc
cmp
push
fiadds
pop
ja
mov
xlat
mov
cld
lret
jno
testb
adc
xor
mov
push
orb
lock
sub
inc
repnz
cmp
xchg
insl
push
jle
scas
add
mov
adc
repz
loop
insb
pop
jbe
loopne
sbb
or
add
lock
dec
mulb
dec
sub
fadd
mov
rcrl
stc
pop
add
lret
pop
or
dec
pusha
std
fsubrl
in
xlat
and
jnp
or
popl
jnp
pop
sub
setge
mov
lret
mov
inc
in
pop
in
sbb
scas
cmpsl
sub
mov
iret
pop
iret
cmc
pop
in
lock
inc
jno
push
pop
push
call
aas
cli
dec
cmp
call
imul
add
mov
lods
xchg
xor
in
push
icebp
cmp
scas
pop
ds
jmp
cld
mov
mov
inc
sub
mov
jmp
mov
inc
push
lods
cld
push
mov
lds
push
mov
adc
push
dec
inc
fisubrs
sub
add
mov
jle
inc
or
push
lcall
pop
push
mov
inc
mov
jno
jg
push
mov
lret
lds
aas
lods
enter
push
mov
xchg
push
or
inc
pop
cmc
xor
adc
xchg
push
mov
pop
aas
jle
cmp
push
bound
jp
sahf
push
jmp
les
or
pop
orb
push
rcrl
stos
rcl
and
test
push
push
fidivrl
cwtl
call
pop
jmp
push
sti
add
fidivs
test
sub
mov
dec
test
popa
out
mov
add
push
arpl
popa
inc
imul
cmpsb
or
and
addr16
pop
cmp
add
push
inc
orb
dec
into
cmp
xchg
pop
xor
or
pop
dec
add
imul
addl
loopne
loop
dec
add
jbe
in
pop
dec
mov
mov
mov
pop
daa
sub
test
or
fimull
add
fbld
filds
and
push
jg
add
xor
pop
nop
imul
add
xor
jmp
das
fwait
lahf
imul
mov
shl
or
imul
dec
push
jne
or
cmc
sub
add
test
inc
xchg
idivl
repnz
xchg
inc
cmp
sbb
jecxz
adc
jmp
or
push
sahf
jbe
jns
lods
pusha
mov
jne
addb
mov
jecxz
add
push
cmpl
sbb
add
lret
add
cli
fildl
push
sub
sub
sbb
pop
test
cwtl
pop
or
in
xchg
mov
idivl
and
data16
pop
cmpsl
pop
sub
or
cmp
aaa
add
mov
mov
sti
iret
adc
sbbl
xor
and
and
andl
pop
adc
das
push
sarb
cmp
punpckldq
mov
int3
sbb
popf
cmp
mov
scas
shll
inc
jbe
push
xchg
xchg
inc
pop
or
lcall
test
not
sub
into
movsb
xchg
iret
add
bound
dec
rol
cmp
cs
leave
pop
mov
pushf
push
aaa
or
push
mov
repnz
sbb
cld
xor
aas
mov
mov
dec
neg
stc
cwtl
cli
xor
pop
and
fst
mov
push
adc
and
popf
rcrb
adc
push
notb
ljmp
adc
dec
mov
out
fwait
inc
adc
nop
inc
out
fstpt
add
xor
sub
scas
cmp
jge,pn
jne
in
pop
push
sahf
push
stos
stc
xchg
cld
mov
scas
shlb
sbb
hlt
add
pop
int3
cld
and
cmp
xor
pop
and
pop
mov
inc
or
or
and
scas
xor
sub
pusha
cld
or
mov
cwtl
sub
lods
mov
jge
push
cmp
push
mov
ljmp
push
repnz
jnp
lret
loopne
imul
cwtl
imul
pusha
mov
adc
sbb
cs
jns
cmp
push
insb
repnz
clc
cmp
mov
jmp
imul
add
pop
jb
jbe
jmp
mov
in
int
in
and
mov
xchg
nop
pop
in
cmpsb
decb
jmp
pop
jns
mov
mov
add
mov
fcoms
or
dec
lret
jae
jge
sub
daa
aas
cwtd
sahf
mov
vmaxpd
lret
imul
jnp
pop
aam
ljmp
outsb
inc
or
jmp
je
push
jge
and
pop
daa
jae
xchg
sti
cltd
test
or
or
and
out
xorl
pop
pop
or
or
jmp
inc
sbb
add
jmp
fidivrl
mov
mov
fisubrl
mov
xchg
add
mov
jmp
je
mov
xchg
ficoms
push
pop
rorl
cmp
cs
jne
mov
cmp
inc
xorb
and
sub
add
sbb
lcall
popf
mov
das
es
push
xchg
leave
rorl
fsubrp
cmpsb
mov
dec
jge
cmc
clc
stc
mov
adc
sti
hlt
mov
add
add
clc
addr16
cmpsb
movl
xor
cmp
loopne
outsl
repz
push
xor
movsb
cmp
sub
pop
in
loopne
call
mov
popa
in
xor
mov
mov
lret
mov
int
lock
jg
mov
adc
test
enter
test
push
in
int3
add
lods
loop
xor
shrb
push
mov
mov
jae
dec
or
dec
sub
push
add
cmp
mov
sub
test
out
shl
dec
dec
add
sbb
jmp
insl
dec
in
jns
imull
inc
lret
jmp
xor
inc
cmp
insl
ret
xchg
ss
call
sar
roll
xchg
stos
or
dec
test
mov
hlt
xchg
fstpl
and
test
sbb
pop
je
nop
repnz
and
mov
pop
enter
jp
jne
loope
outsl
cltd
mov
or
and
out
insb
push
in
int
test
in
mov
mov
cmp
xor
mov
mov
jnp
popa
shrb
popf
push
adc
cli
orb
fmuls
add
xor
adc
adc
sar
lds
sub
rcrl
js
and
leave
push
and
and
mov
fucomip
add
jmp
dec
mov
and
sub
psubsw
mov
out
shl
mov
clc
aas
dec
jmp
push
cmp
ljmp
stos
ffree
add
ja
repnz
inc
out
push
shrl
cmpsl
sub
movsl
add
mov
inc
sub
loopne
out
addr16
add
dec
pop
dec
pop
call
jg
fnstcw
ja
das
mov
rcrl
lods
jnp
mov
filds
or
push
pop
jmp
call
dec
mov
add
in
into
filds
jne
mov
into
sub
xchg
mov
add
jmp
shl
push
fldl
arpl
fdivs
or
sbb
shll
pop
push
outsl
ret
cmp
in
sub
popa
ss
xor
add
or
inc
fdivrs
inc
add
pop
jmp
jmp
or
xchg
push
loope
mov
pop
push
test
fmuls
pop
sbbb
inc
seto
add
and
mov
push
push
push
sub
in
push
mov
hlt
pop
dec
or
out
movsl
pop
std
test
and
fdivs
ret
mov
mov
fildl
jnp
loope
shrb
and
cmpsl
pop
dec
fbld
push
adc
pop
push
stos
mov
add
stos
mov
jp
outsb
aas
in
dec
rclb
and
mov
jnp
pop
dec
xor
jmp
sub
cltd
adc
mov
add
push
pop
enter
rolb
pop
lea
jmp
xchg
jl
push
pusha
and
dec
insl
shll
add
jae
jb
sbbl
cwtl
cvttps2pi
dec
xchg
dec
pusha
pushf
cmp
lahf
shrl
dec
popf
je
adc
pop
sub
push
add
ficoml
popa
push
test
and
lret
add
xor
adc
outsl
xchg
and
xor
add
dec
inc
xchg
fwait
pushf
stc
pop
int3
xor
push
push
orl
pop
xlat
jmp
adcb
mov
hlt
movsb
pusha
nop
xor
adc
in
pop
in
fsubl
jmp
repnz
jo
cli
sarb
clc
mov
push
jg
inc
push
dec
sub
xor
jnp
jmp
pop
or
push
loop
xlat
clc
add
jmp
mov
inc
dec
pop
sbb
pushf
daa
ret
xlat
cwtl
xor
andb
rcl
and
add
cmc
lret
xor
sub
push
inc
mov
pusha
mov
sbb
jo
inc
stos
pop
enter
dec
mov
xor
ljmp
aad
xchg
stos
fdiv
jno
add
push
pop
pop
push
push
push
rcrb
gs
shl
add
and
cmp
je
mov
nop
sbb
sbb
pop
mov
xlat
push
aad
push
orb
daa
stc
jne
bnd
mov
jmp
in
inc
es
sbb
test
cmpsl
lret
rorb
jge
loop
mov
stos
jb
shlb
das
mov
div
out
call
adc
fucomi
add
jmp
aam
pop
pop
xor
je
pop
js
outsb
adc
scas
insl
outsb
sub
sbb
xchg
add
movsb
stc
mov
rcrl
inc
aaa
dec
test
repz
adc
jmp
loope
in
sub
jns
push
inc
jl
xchg
and
push
pop
jnp
sahf
mov
ljmp
mov
mov
sub
lods
sub
insb
fstps
sbb
xchg
mov
cmpb
push
mov
xor
cmpsb
add
or
add
daa
push
mov
or
rorb
add
and
sub
sub
xchg
lds
fcomps
mov
mov
sub
int3
into
dec
and
ljmp
arpl
scas
push
jne
mov
fsubr
jno
das
mov
add
js
lods
mov
adc
cs
rcrb
dec
push
dec
or
out
jmp
out
stc
mov
cmp
shlb
add
push
xchg
add
jecxz
adc
mov
icebp
fcompl
sub
lods
mov
xor
scas
sub
pusha
ret
and
add
imul
adc
or
rcrb
inc
and
ss
sub
test
cmp
mov
movsb
cmpsl
and
pop
cmp
add
scas
dec
dec
lods
call
cmpsl
mov
push
ljmp
cli
fstl
js
xlat
sub
inc
mov
aaa
loopne
std
loope
jmp
out
notb
add
nop
xchg
pop
sub
xor
testb
out
cld
sub
and
dec
pop
xor
push
sbb
sbb
mov
out
fnstcw
sub
jmp
xor
dec
stc
movsl
lret
cmp
ja
push
loop
shrl
jp
mov
lods
jmp
arpl
xchg
lret
pop
ljmp
and
adc
pop
mov
in
psubsw
ret
lahf
data16
or
dec
add
dec
push
adc
mov
mov
stc
push
ljmp
xchg
jl
xorb
adc
push
mov
fstps
loope
jle
lock
push
push
pop
xor
shlb
pop
mov
pusha
sahf
lahf
jecxz
nop
and
xor
test
or
or
add
pop
ret
jmp
cltd
cmc
xchg
lahf
daa
push
push
in
cwtl
pop
mov
inc
inc
cmp
fnstcw
jmp
xchg
sti
xlat
add
mov
lret
jp
or
fisubrl
add
cmpps
sbb
lods
sbb
pusha
jecxz
inc
dec
pop
push
add
mov
mov
incb
std
sar
lcall
push
and
call
add
push
and
xor
sub
rorl
pop
in
pop
pop
repnz
test
add
sub
pushf
xor
lret
xor
pop
cmp
push
xor
das
inc
mov
shlb
jl
js
adc
scas
sub
movsl
push
into
daa
pop
inc
push
rcrb
fisubs
in
idivl
push
jl
mov
push
outsb
arpl
sub
in
or
cli
sbb
jo
dec
xchg
jl
mov
push
adcb
or
aaa
dec
mov
sbb
mov
sub
sub
inc
lock
ljmp
rcll
out
adcb
imul
mov
addl
and
pusha
push
dec
ljmp
rorb
pop
sti
sub
xor
fisubl
add
mov
jle
xor
jmp
into
mov
jne
nop
mov
fbstp
aas
out
push
jae
mov
out
scas
mov
leave
jae
xor
add
xor
xchg
sbb
sbb
or
cmp
adc
mov
scas
repnz
fisttps
xchg
call
mov
cmp
repnz
sahf
mov
mov
mov
push
stos
es
adc
add
sti
inc
dec
mov
mov
inc
add
mov
mov
bound
sarl
mov
fcoml
call
imul
mov
das
dec
shlb
not
in
addb
sub
pop
mov
xchg
xchg
or
mov
stos
pop
data16
inc
addr16
mov
ds
jmp
add
push
pop
roll
dec
pop
notl
in
mov
push
cmp
incl
push
jmp
pop
jne
and
cmp
sbb
push
add
and
mov
sahf
and
or
pop
dec
std
cwtl
call
xor
inc
sub
mov
xor
mov
push
imul
or
mov
jo
mov
or
cli
push
cs
jmp
xchg
mov
inc
sbb
cltd
push
test
sub
and
mov
adc
jge
inc
pop
jg
xchg
add
sub
xchg
jb
outsb
mov
hlt
iret
ficomps
or
push
and
and
pop
in
stos
ret
or
sti
repnz
jb
clc
stos
dec
xchg
in
pusha
mov
mov
insb
xor
out
jmp
sbbb
and
add
fstpl
add
cmpsb
pop
mov
mov
cmp
pop
jle
jo
and
pop
test
icebp
ja
push
sub
cli
mov
mov
pop
fiaddl
fldl
jge
lret
jbe
imul
adc
cwtl
inc
mov
ret
or
mov
or
push
jmp
cmp
sbb
adc
cltd
push
mov
add
dec
clc
fwait
pop
movsl
test
add
in
xchg
push
lods
xor
sarl
cmp
sbb
daa
jg
cli
adc
ret
pusha
jg
add
xchg
sbb
adc
pop
dec
sub
add
xchg
out
mov
dec
inc
lea
arpl
pop
pop
jb
lahf
jbe
xor
iret
push
ja
movsb
and
pop
test
pop
xchg
pop
adc
ljmp
mov
pushf
leave
or
add
or
aad
cmp
leave
fidivrs
in
xor
sub
jge
pop
je
or
icebp
leave
push
or
add
or
leave
in
cmp
ljmp
adc
xor
movsb
dec
pop
push
xchg
xchg
xor
sahf
add
pop
xorb
pop
pop
imul
and
aad
xor
push
cmp
jmp
pop
ljmp
out
mov
aas
and
push
aam
mov
or
loop
stos
and
pop
lret
xlat
pusha
lock
outsl
das
inc
push
insb
and
or
sub
mov
cmpsl
add
jbe
mov
cmpsl
leave
inc
cwtl
cmp
push
pop
jmp
ss
loopne
cmc
sbb
fcoml
dec
jns
mov
out
mov
inc
mov
fadds
pop
jo
add
cmpsb
jne
adc
jmp
es
or
and
into
aaa
push
pop
dec
dec
clc
nop
mov
xchg
mov
call
mov
mov
xchg
dec
cmc
cwtl
cmp
fs
and
add
mov
pop
adc
jle
cwtl
dec
addb
dec
mov
mov
xor
pop
pop
push
cmc
mov
sub
add
sahf
mov
std
mov
ret
jmp
data16
cmp
loop
jle
push
clc
lret
or
shr
mov
adc
filds
in
je
mov
pop
push
das
ficoms
jno
mov
mov
cld
jp
mov
or
push
jnp
jg
add
fs
pop
in
push
add
sbb
enter
xchg
mov
ds
mov
not
into
aaa
add
mov
adc
cmp
cli
daa
jnp
push
mov
push
sub
shrl
jmp
xor
daa
int3
aas
inc
into
or
js
and
shrb
push
loope,pt
clc
push
in
push
mov
pop
cmpsl
sub
in
xchg
js
xor
mov
jl
inc
adc
or
inc
cwtl
cli
cmp
mov
add
pushf
push
jnp
dec
into
mov
aad
js
movsb
mov
rcr
jmp
mov
sbb
xchg
mov
in
sub
ficomps
xchg
jb
mulb
mov
addr16
cmp
pop
fisttps
repnz
lods
push
jle
jl
push
add
and
add
or
in
enter
gs
mov
pop
pop
dec
push
shll
icebp
mov
push
add
and
dec
scas
loopne
test
aam
sarl
add
mov
mov
fisubrs
push
push
xlat
out
repnz
les
call
int
sub
add
push
xor
out
jge
dec
test
add
or
jmp
pusha
sbb
pusha
and
jo
mov
in
mov
xchg
cltd
pop
fcmovnb
adc
dec
not
test
lret
mov
jmp
mov
adc
imul
add
xchg
pop
push
xchg
dec
xorb
push
pusha
addr16
dec
fdivl
popf
lret
or
insl
add
sub
cwtl
sub
je
dec
dec
xchg
sub
or
jmp
orl
movl
rcl
xor
mov
cmp
cmp
pop
flds
mov
out
test
mov
or
push
push
jmp
stos
insw
fldenv
je
or
dec
pop
decl
cltd
cs
xor
push
shlb
mov
sub
mov
loop
hlt
xor
jg
lcall
push
push
es
cmp
push
stos
pop
movsb
pop
mov
decl
pusha
dec
dec
add
push
xor
lahf
icebp
mov
xchg
jecxz
mov
lret
jmp
ret
pushf
insb
lahf
fsubrl
jecxz
pop
ret
cltd
in
pusha
jo
push
or
imul
or
add
repnz
xor
daa
push
into
sbb
mov
rol
or
xchg
inc
push
adc
jl
movsl
stos
pop
std
enter
popf
xor
push
gs
ds
shrb
popa
repz
xor
add
push
cmp
mov
xor
adc
adc
mov
mov
stos
cmp
jmp
push
add
or
je
xor
mov
xchg
mov
add
jmp
pop
bound
in
and
sbbb
pop
adc
mov
push
repnz
shl
jmp
dec
jns
sub
push
xchg
gs
ret
cmp
pop
mov
jbe
inc
jmp
adc
inc
mov
mov
pop
push
daa
and
adc
dec
dec
out
pop
cmp
sti
xchg
scas
popa
gs
cld
mov
loop
fwait
mov
jno
ret
test
pop
and
xor
inc
inc
lods
jl
dec
jmp
stc
fcoms
jne
sbb
and
cmp
pop
inc
pop
add
mov
push
out
pop
mov
cmp
jb
mov
or
or
test
test
inc
push
pop
dec
stos
into
popf
or
loopne
cld
xchg
lret
pop
bound
jne
aad
xor
ja
adc
push
pop
add
icebp
movsl
add
pop
mov
sub
sub
stos
orb
inc
scas
inc
push
out
std
adc
cld
mov
cmpsl
js
push
jmp
and
dec
inc
mov
xor
imul
cwtl
xchg
push
mov
je
adc
adc
xchg
adc
mov
je
cmp
push
bound
or
aas
mov
gs
insb
cmpsb
ja
jmp
xor
sbb
inc
inc
and
jns
pop
pop
xor
pop
mov
loop
aam
pop
jne
xchg
xlat
sbb
lcall
sub
jmp
idivl
adc
popf
push
mov
or
frstor
shll
inc
push
lock
or
test
into
fstp
push
nop
cs
std
rcrb
push
jle
add
mov
dec
xchg
mov
jbe
sub
mov
jno
and
sub
jmp
add
jg
inc
and
xchg
mov
add
or
dec
out
aas
enter
fwait
lret
jns
push
mov
xchg
jnp
mov
ss
icebp
mov
mov
or
add
call
sub
ror
cs
add
dec
cli
add
xchg
hlt
popf
push
inc
inc
cltd
cld
add
enter
sbb
inc
add
add
sbb
loope,pn
int
mov
push
cld
in
inc
mov
testl
push
cs
fst
xor
adc
pop
pop
in
fists
mov
or
pop
mov
std
cld
gs
scas
inc
lea
aam
mov
mov
in
mov
mov
add
cmp
jmp
pop
push
mov
xchg
cmp
pop
imul
jp
xchg
sarb
mov
in
lea
push
mov
sub
dec
pusha
loop
xchg
push
cmp
pop
mov
sub
aad
sbb
sub
add
push
mov
lahf
push
jmp
add
jmp
popf
lret
cmp
xlat
or
pushf
adc
gs
inc
xor
jecxz
mov
in
call
push
jmp
into
idivb
test
xchg
add
dec
mov
les
pop
mov
mov
cmp
pop
adc
cmp
mov
in
cld
mov
sbb
popf
pop
int
daa
lods
and
inc
sarl
lcall
jae
cmp
mov
add
jne
cmpsl
pop
lds
test
divps
mov
jae
shrl
pop
jecxz
xor
sub
push
ret
addr16
daa
and
data16
xor
or
cs
xor
and
ds
dec
test
adc
daa
jle
sbb
xor
or
movsb
inc
xchg
adc
xor
or
sbb
sbb
push
fsubl
jl
add
test
xchg
mov
pop
mov
or
dec
dec
sub
mov
loop
dec
xchg
incl
push
loop
mov
jmp
mov
ja
push
stos
sbb
xor
pop
add
and
ret
and
or
std
inc
jge
movsl
sti
mov
and
iret
aad
in
and
adc
or
push
pop
dec
repnz
sbb
mov
pop
out
cmpsl
sbb
loop
fiadds
out
movsl
stc
inc
orl
mov
in
mov
push
mov
and
leave
cmpb
bnd
adc
add
imul
jmp
stos
cmp
outsb
shlb
int3
call
stc
orl
sbb
int
pop
push
jmp
in
pop
xor
loope
lods
xchg
popa
dec
fisttpll
icebp
or
jo
dec
push
mov
inc
xor
int
fiadds
pop
push
sti
or
cmp
inc
fmul
lcall
xchg
les
scas
gs
and
jecxz
insb
dec
sub
lock
pop
scas
popa
sbb
add
mov
outsb
orb
mov
es
push
mov
addb
adc
jmp
or
xchg
into
and
dec
pop
adcb
pop
push
jge
incb
insb
push
mov
ror
js
int
inc
arpl
or
inc
fistl
cltd
xor
and
push
lods
fstpt
lods
pop
jg
xchg
loope
lahf
xor
mov
loope
daa
jmp
push
mov
mov
fistpll
nop
test
addr16
lock
cmp
decl
mov
inc
pop
jae
push
mov
mov
insl
ret
add
ret
mov
lret
sbb
sti
add
mov
inc
inc
and
add
pop
and
iret
imul
jne
sti
pop
push
pop
test
push
pop
jo
ljmp
xor
imul
xchg
mov
mov
push
int3
fwait
sbb
and
mov
push
les
sbb
addr16
xchg
into
mov
cmp
or
or
add
jg
ret
dec
mov
insl
outsl
fldt
or
sub
dec
mov
push
jmp
fcom
dec
clc
inc
push
cmp
rolb
test
add
int3
adc
bound
push
jmp
push
add
xchg
jne
add
jp
and
inc
jg
inc
js
dec
xchg
iret
and
test
jg
mov
xchg
jo
mov
fcoms
mov
add
xor
mov
sar
push
jae
sbb
pusha
sub
cli
jg
or
fiaddl
pushf
cmpsb
outsb
or
mov
fnstsw
add
xor
pop
pop
sbb
pusha
es
out
into
add
ret
repnz
pop
or
loopne
push
dec
ljmp
icebp
inc
sub
mov
push
testl
outsb
sbb
jge
add
fstpl
jle
in
inc
sub
add
adc
push
shr
or
fcoml
xor
sub
xchg
jne
dec
daa
fistps
ljmp
and
push
sbb
popf
cli
mov
dec
mov
mov
inc
sbb
int
inc
movsb
bound
cmp
or
and
sub
and
rcrb
loop
add
mov
adc
inc
data16
mov
in
rclb
cmp
pop
shll
test
insb
mov
dec
push
cmpb
lock
insl
push
clc
jmp
sub
mov
in
jo
loope
jl
sbb
push
imul
data16
jge
pop
stc
popf
and
xor
sahf
xchg
cmp
xchg
sub
outsb
and
fcomip
adc
push
xchg
push
jmp
lock
push
jns
mov
pop
sub
push
mov
movsb
testb
enter
adc
push
mov
inc
push
andl
fldl2t
paddsw
lcall
xor
cmp
push
cmp
pop
jmp
gs
xor
add
lahf
leave
cmp
cwtl
cltd
dec
pop
aad
stos
aam
aam
clc
sbb
push
cmp
movl
dec
inc
repz
pop
out
and
sub
popf
js
and
adc
and
fsubr
ds
and
inc
add
mov
cmp
lret
pop
fldcw
incb
rclb
mov
dec
dec
inc
imul
xchg
jbe
jmp
nop
mov
mov
dec
add
adc
mull
pop
mov
xor
ja
sbb
adc
sub
imul
ja
or
inc
pop
jl
push
orb
and
sub
dec
rorb
sbb
pop
dec
pop
aam
add
adc
mov
fistpll
dec
incb
mov
or
cmp
dec
jo
adc
and
sbb
push
xchg
mov
jp
gs
jmp
dec
mov
dec
xor
push
test
push
cmp
ja
cmp
in
pop
or
jbe
cli
ja
sbb
cmp
or
cmp
mov
push
int
xor
rclb
mov
dec
cmp
sub
or
es
loope
iret
sub
fcompl
bound
jns
or
popa
js
das
lods
orl
xlat
pop
pop
out
adc
mov
add
add
cli
cwtl
scas
pop
cwtl
inc
pusha
inc
dec
add
or
stos
sub
ja
pop
jo
pop
test
pop
mov
jne
stos
mov
pusha
push
sub
mov
mov
fwait
push
sbbl
cmp
add
sahf
cvttps2pi
test
test
or
lods
mov
stc
bound
movsb
mov
or
lea
je
push
cmp
mov
pusha
push
jl
push
cmp
jnp
add
adc
fcoms
sub
sbb
pop
fisubrs
add
pop
jae
neg
rolb
jle
daa
call
adc
mov
mov
adc
pop
ret
icebp
fidivrl
pop
mov
jmp
pusha
pop
push
out
dec
dec
sub
adc
jg
scas
jne
xchg
rcrl
test
dec
push
adc
not
dec
std
cmp
stos
pop
jl
or
fwait
add
in
add
and
xchg
add
push
pop
les
mov
xlat
adc
shrl
dec
aaa
or
push
pop
loopne
mov
jg
fwait
jge
aaa
cmova
mov
add
mov
aam
loopne
mov
dec
sbb
dec
add
sahf
fbld
sub
mov
stos
je
and
xor
shll
mov
push
cmp
cmp
or
and
or
mov
adc
subb
fs
dec
or
popa
sbbl
repz
push
xchg
sub
int
xchg
and
or
xchg
sub
add
stos
or
pop
mov
mov
jle
pop
jge
cmp
lret
ja
stos
dec
cmc
add
js
adc
inc
lret
nop
aam
pop
outsl
push
out
xor
arpl
inc
mov
and
inc
sbb
sub
inc
add
inc
out
inc
mov
adc
pop
fwait
scas
ss
mov
add
sub
imul
loope
sbb
pop
adc
add
aam
test
je
or
shl
mov
sub
rcr
or
jmp
or
cmc
pop
insl
leave
shrl
push
repz
or
pusha
es
jne
test
jl
or
inc
out
jmp
mov
add
nop
jb
add
std
adc
xor
imul
mov
dec
sbbb
dec
shll
mov
daa
daa
loopne
int
addl
sbb
std
dec
test
dec
adc
movsb
mov
or
fwait
outsl
ret
aas
shrb
pop
pop
dec
adc
or
sub
sti
push
fists
mov
add
inc
out
lods
repz
mov
adc
add
sbb
outsb
test
fwait
pop
notb
cli
inc
cmp
jae
mov
mov
pop
mov
sbb
push
push
dec
push
add
das
neg
sub
ljmp
or
jne
adc
jmp
pop
sub
xchg
js
in
notb
aad
dec
xchg
sub
loop
stos
ss
js
aam
and
movsb
mov
inc
or
or
cltd
inc
fidivs
or
cmp
int
gs
add
dec
pop
ss
or
cs
jmp
jnp
in
cmp
adc
dec
mov
ficompl
mov
add
loop
pop
cmp
xor
test
pop
cmc
popa
mov
add
add
cs
fwait
pop
push
jmp
test
popa
mov
mov
jmp
adc
add
lock
push
mov
add
push
push
cmpsl
shl
mov
jmp
push
push
shll
push
mov
or
lods
lret
fisttpll
push
data16
divb
popa
and
and
ss
mov
mov
pop
sbbb
popa
aaa
jmp
out
fildl
push
mov
xor
das
xor
cld
nop
mov
rorb
sahf
insl
mov
popa
lods
dec
pop
cli
xchg
mov
push
add
cmc
push
mov
cmpsb
pop
icebp
inc
xor
and
lret
ja
push
test
sbb
mov
cmp
movsl
ljmp
dec
push
out
pop
shrb
pop
adc
out
or
out
sbb
cmp
mov
addr16
arpl
jmp
mov
movsb
add
jnp
data16
jg
filds
sub
push
xchg
cmp
adc
pop
pop
sub
jmp
pop
mov
sbb
adc
popa
pop
xlat
push
inc
test
incl
adc
push
pop
cwtl
in
inc
into
inc
sbb
jl
stc
pop
or
test
aam
ss
inc
add
add
xor
xchg
aad
out
inc
imul
addl
fst
scas
jno
int3
daa
push
lahf
clc
cmp
and
femms
xor
push
push
jno
mov
add
sbb
add
es
dec
ds
push
or
or
sti
push
or
sub
xor
inc
outsb
out
testl
jmp
dec
add
mov
xchg
lods
imul
js
dec
sarb
arpl
push
xchg
add
mov
into
pop
sub
pop
xchg
iret
dec
and
inc
pop
push
mull
lcall
repnz
cmp
mov
sbb
sub
adc
pop
clc
jmp
push
cli
sbbl
pop
lret
pop
push
push
add
lock
cmp
cwtl
add
sub
adc
jl
and
jle
or
fildl
pop
cld
stos
pop
pop
mov
mov
jb
out
outsl
xor
jne
cmpsb
popa
mov
je
pop
aam
dec
add
push
daa
fs
xchg
mov
ror
jle
sbb
ljmp
popa
pop
es
inc
pop
les
std
cwtl
jae
or
lret
mov
in
adc
std
xor
or
call
cmp
sbb
xchg
adc
mov
popa
ret
pop
sahf
or
ss
lds
mov
or
lahf
or
ja
stos
dec
push
mov
add
push
insl
pop
push
push
loopne
out
cmc
mov
stos
jge
dec
or
xlat
push
mov
stos
add
cmp
repz
mov
subb
cld
cld
lret
rcrl
out
cmpb
or
mov
addl
adc
cmpb
mov
dec
pop
lahf
loopne
inc
test
mov
adc
xor
sub
cld
jecxz
adc
sbb
out
pusha
out
push
xor
mov
mov
das
xor
dec
push
in
jb
cmp
push
push
loop
ret
insb
pop
cwtl
std
jmp
dec
xchg
gs
mov
mov
roll
xor
lcall
btc
inc
jmp
mulb
dec
sti
cmp
jmp
mov
or
or
and
pop
mov
lahf
sbb
dec
addr16
pop
jmp
push
sub
sti
daa
jno
testl
jnp
dec
ljmp
jp
pusha
or
and
cmp
jmp
jp
lock
adc
cld
rcrb
sub
dec
sub
test
out
pop
shl
clc
jmp
mov
cltd
cltd
div
and
or
xor
pop
pop
add
cli
ss
push
add
lret
ja
add
jmp
push
aad
rcrl
icebp
sbb
pop
mov
or
jmp
and
inc
mov
cld
sahf
mov
fstps
dec
es
cmpsl
jmp
jnp
add
jmp
ret
add
lcall
dec
push
ljmp
jns
mov
jge
fistpl
or
mov
dec
sub
into
or
pop
push
aam
cmp
jmp
es
hlt
sbb
mov
fmull
int3
ficoms
sti
mov
add
fiaddl
jmp
add
jo
je
nop
mov
jmp
aas
shll
out
add
sub
dec
add
pop
out
repnz
lret
push
sub
push
push
mov
mov
mov
inc
add
in
push
pop
stos
fsts
shl
inc
std
push
xorb
inc
mov
jge
mov
into
mov
testb
jbe
hlt
add
add
pop
rep
mov
loop,pn
adc
jl
xchg
repnz
repnz
pop
ja
mov
cs
nop
cli
test
mov
divb
or
pop
aas
dec
xlat
xchg
xorb
dec
popa
testl
ljmp
adc
test
mov
ret
ror
jno
push
test
or
xrelease
add
clc
cmpsb
xor
not
jmp
mov
adc
loop
push
mov
and
xchg
mov
inc
dec
pop
dec
xor
mov
dec
xor
xchg
cmpb
movsb
pushf
mov
jns
xchg
mov
xchg
pop
movl
jb
es
push
roll
aam
xorb
dec
jp
pop
xchg
ret
inc
adc
ss
cltd
lret
pop
jae
in
negl
mov
test
push
scas
xor
mov
xchg
jmp
push
mov
insl
stos
add
loope
pop
xor
inc
xchg
jg
lret
adc
sub
mov
xchg
int3
inc
add
push
test
inc
out
adc
push
sub
pop
out
and
add
mov
xor
xor
sub
mov
or
clc
dec
jg
rolb
inc
sub
jnp
mov
loope
dec
mov
inc
hlt
out
out
mov
add
ljmp
sbb
xchg
push
push
adc
pop
dec
xor
pop
shr
les
adc
sub
mov
insb
xchg
jnp
jae
add
mov
lret
ja
mov
inc
xchg
lods
add
push
pop
dec
pop
in
add
jmp
cwtl
add
pop
xor
add
test
mov
mov
test
dec
imul
jle
aas
jmp
stos
gs
mov
roll
mov
add
loope
roll
fs
testb
int
aad
outsl
bound
inc
jl
lods
adcb
gs
add
xor
inc
insl
mov
enter
lahf
popf
pop
and
jno
add
pop
xchg
gs
inc
std
xchg
mov
add
jmp
out
add
pop
popa
sti
mov
fdivs
dec
ret
sbb
dec
es
mov
stos
xor
jnp
daa
and
or
jg
jmp
shll
pop
imul
or
ret
lahf
repnz
sub
or
or
stc
test
add
mov
or
cs
cmpsb
out
into
or
dec
and
jmp
mov
adc
pushf
lret
jmp
movb
xor
pop
xor
pop
sub
andb
ds
lahf
pop
popa
sbb
out
cmp
into
rcl
pushf
sub
add
pop
xor
jo
mov
or
pop
sub
inc
sbb
mov
repnz
divb
or
pusha
add
loope
pop
mov
and
lahf
or
xchg
xor
mov
push
cmovo
aas
lahf
popa
cmp
push
cmpl
call
jne
subb
mov
push
outsl
ss
or
or
inc
ja
sarl
fcmovu
pop
adc
pop
push
push
and
hlt
inc
mov
sarb
xor
sarb
imul
daa
and
in
mov
daa
lock
les
push
fistps
mov
or
or
xchg
ret
stos
mov
add
xchg
mov
pop
lcall
add
or
bnd
mov
pop
lret
dec
push
mov
pusha
repz
cmp
xor
and
adc
cmp
sub
cli
adc
pop
jne
adc
popa
lret
cs
mov
movb
xchg
xchg
dec
sub
xchg
or
add
or
call
pop
jbe
ret
pop
xchg
sub
ljmp
mov
cli
lods
cmp
push
mov
shlb
mov
xor
cmp
mov
jg
into
or
into
mov
mov
pop
xchg
popf
xlat
xor
ret
jmp
xlat
mov
cld
inc
mov
es
pop
je
outsb
mov
int
addl
fsubl
jae
cmpsl
aad
cwtl
mov
ret
dec
sbb
add
adcl
pop
pop
shl
adc
jmp
jmp
pop
dec
sub
inc
shlb
fiadds
sbb
sub
jmp
dec
add
ficompl
cltd
sbb
inc
inc
pop
or
add
testl
iret
sub
pop
push
mov
test
orb
pop
xchg
mov
push
stc
in
push
add
add
mov
lret
fbstp
js
punpckhwd
jnp
dec
pop
inc
test
jp
ljmp
inc
add
jmp
scas
movaps
imul
ret
jb
in
icebp
add
pop
sbb
fistl
jne
xorl
sahf
cwtl
or
hlt
pop
je
sar
mov
push
jmp
and
jmp
dec
outsb
and
sub
dec
stos
jecxz
xlat
loop
and
les
dec
repnz
xor
into
les
or
xchg
dec
sub
stc
les
mov
or
mov
in
cmp
in
lea
push
jge
mov
push
adc
adc
shr
cmp
xchg
test
loopne
sub
add
movsl
addb
cwtl
sub
shrb
add
xor
mov
int
wbinvd
scas
hlt
shr
jmp
and
inc
dec
push
pop
pop
push
addb
fistl
adc
divl
out
cs
test
aad
ret
sub
enter
sbb
xchg
in
sub
pop
mov
test
jp
push
add
push
enter
xchg
fs
ds
pop
add
push
pop
popa
sub
shlb
call
dec
mov
stos
push
ja
push
adc
es
clc
sub
pop
out
jmp
adc
lock
ret
cmp
mov
ds
inc
pop
adc
jp
addr16
xchg
cs
dec
call
aas
or
lods
mov
sahf
cli
jae
push
jmp
ficompl
xor
or
push
fiaddl
xor
pop
inc
in
add
and
cs
and
xchg
cmpl
xor
sbb
mov
push
inc
mov
rolb
sub
ljmp
or
loop
add
pop
pop
push
push
test
loope
repz
cwtl
iret
testl
js
push
ret
cld
sbb
xchg
fadd
xlat
ljmp
icebp
inc
sub
cmpl
in
imul
rcrb
out
jecxz
cwtl
rorb
or
adc
orb
int
jno
pusha
adc
cmp
loopne
clc
testb
push
dec
xor
mov
inc
sbb
cmpsl
ficomps
add
mov
pop
xchg
pop
adc
mov
sub
pusha
adc
nop
xor
xchg
push
push
std
int
fiaddl
push
cwtl
das
pop
and
pop
push
clc
dec
or
xchg
and
mov
arpl
cli
inc
mov
cmc
iret
mov
add
dec
cmp
scas
enter
add
and
cmc
jo
and
xchg
es
cmpsl
push
sahf
cmc
dec
mov
push
mov
mov
xor
andb
push
jno
divl
shll
inc
mov
or
mov
inc
out
dec
mov
addl
pushf
aad
lods
push
and
pop
in
pop
adc
mov
sub
adc
jno
aas
pop
cli
in
pop
push
sub
or
jmp
xor
jmp
notl
sub
pop
push
enter
popf
and
adc
insl
xor
cmpl
sbb
dec
sub
push
std
xchg
mov
push
mov
add
cwtl
jo
mov
notl
push
or
push
dec
and
add
sub
cmp
inc
pop
pop
sbb
outsl
jg
xlat
inc
sub
in
out
imul
icebp
jbe
push
cwtl
jne
xlat
push
cwtl
xchg
add
and
sbb
popa
rclb
xchg
orb
push
fsubs
in
in
repnz
and
loop
imul
scas
and
mov
add
xor
jmp
inc
cli
lret
pushf
dec
clc
push
lock
lea
mov
mov
add
arpl
dec
gs
jmp
xor
push
xor
notl
mov
test
xlat
popa
mov
shll
jmp
pusha
cmp
cmpsl
loop
es
cmp
iret
mov
lea
in
pop
notb
leave
jb
pop
cmp
out
repz
imul
das
xchg
dec
and
fildl
dec
push
iret
push
pop
fucomip
lret
outsb
jle
mov
pop
adc
out
jbe
xlat
pop
filds
outsb
push
xor
scas
in
or
mov
jg
mov
fcomps
fldl
inc
sbb
lahf
sahf
jmp
movsl
jmp
cmp
mov
ljmp
in
xchg
mov
xor
jb
enter
dec
jae
setb
or
xor
pop
inc
outsb
and
adc
xchg
imull
out
mov
les
cmp
js
xor
cmp
xchg
and
push
or
mov
sbb
dec
insb
ljmp
xor
xor
dec
pusha
in
stc
loope
mov
das
cmp
hlt
add
xchg
pop
pop
dec
jmp
out
mov
xchg
xor
jmp
mov
addr16
push
and
mov
cmp
outsb
stc
cmpsl
adc
adc
mov
rorb
lcall
mov
mov
aaa
mov
xlat
bound
add
fldl
repz
pop
add
in
push
push
mov
out
pop
add
lock
testb
push
adc
xchg
and
loop
test
lods
and
mov
fdivp
inc
dec
or
pop
test
inc
enter
addr16
loopne
mov
in
icebp
sbb
push
aaa
xchg
pop
xor
bound
out
test
inc
adc
pushf
add
jmp
in
cmp
rcl
xor
adc
das
andb
lcall
jmp
clc
popf
fstl
inc
xor
cmc
iret
add
scas
cmp
push
or
dec
push
aam
stos
hlt
ljmp
push
xchg
adc
icebp
iret
cs
aas
pop
jecxz
push
xchg
imulb
es
lea
dec
fistpll
adc
push
xlat
adc
or
mov
mov
xor
inc
push
inc
mov
insl
and
pop
jl
idivl
adcb
rorb
insl
pop
hlt
icebp
iret
mov
pop
or
xchg
divb
mov
push
test
push
fdivs
int3
dec
mov
scas
adc
xchg
pop
dec
pop
es
xchg
fists
clc
shll
imul
mov
dec
adc
js
adc
movsb
pushf
pop
fisttps
adc
aaa
adc
inc
or
cmpsl
lock
mov
cmp
pop
cli
xor
sbb
shl
sahf
and
mov
jno
or
icebp
test
out
dec
add
xchg
dec
cs
mov
pop
xor
fmull
lea
sub
inc
out
mov
ss
and
push
cmpsl
inc
adc
push
push
inc
mov
xor
ljmp
sbb
or
js
mov
movsl
sbb
ret
sub
mov
mov
push
add
inc
jmp
jmp
jb
out
icebp
pushf
aas
pcmpeqd
into
add
mov
in
iret
mov
lret
dec
jmp
push
or
mov
div
xchg
or
shrb
popa
stos
andl
and
pop
cwtl
addr16
daa
out
pop
mov
inc
jmp
repnz
mov
sub
into
add
sub
xlat
les
adc
sbbb
pop
adcb
inc
jmp
dec
stc
out
sub
jo
pop
add
push
inc
lock
sub
sbb
fsubrs
std
loope
xor
int
sub
push
mov
out
adc
aad
jmp
es
jle
daa
xor
pop
fwait
and
cwtl
leave
mov
push
cs
insl
cmp
sub
icebp
mov
push
sub
das
inc
mov
sbb
mov
inc
sub
push
lock
xchg
bound
inc
jns
xchg
subb
push
jmp
jbe
pop
inc
insl
pop
or
pop
sbb
mov
mov
push
inc
orb
push
pop
out
pop
pop
loop
pop
hlt
add
test
je
add
sub
test
dec
adc
or
jnp
insl
cmpl
lret
fs
scas
and
sbb
or
lods
push
inc
int
orb
popa
add
fsubl
subl
jmp
inc
sub
add
jae
jle
repz
and
ret
lret
call
mov
xchg
cmp
xchg
stc
lods
shrb
adc
pop
call
cmpsb
and
add
out
add
push
mov
cmp
sub
pop
daa
mov
movsb
jns
mov
xchg
insl
mov
in
loop
push
mov
mov
dec
add
shl
iret
pusha
shrl
and
or
sti
mov
sub
clc
mov
pop
mov
pop
hlt
loope
cmp
cs
mov
mov
insb
push
push
sbb
xor
sub
sub
sub
cmp
sbb
notl
push
and
test
test
sbb
iret
sub
rcll
ficompl
into
add
pop
push
addr16
stos
sbbl
pushw
dec
pop
pop
mov
clc
add
lock
pop
clc
int3
mov
bound
mov
dec
mov
arpl
jmp
loop
dec
scas
pop
sbb
cmp
jns
test
xor
icebp
push
push
sbb
inc
xor
lret
dec
in
mov
mov
jle
pop
rorl
sub
cmp
add
shlb
push
addr16
fcom
mov
outsb
add
ficomps
and
inc
into
nop
xor
mov
out
les
xor
add
stc
xlat
dec
in
inc
loop
pusha
in
cs
push
fs
adc
bound
fadd
std
das
push
pop
jbe
test
jmp
mov
sub
mov
lret
push
call
pop
dec
xor
lret
adcb
lds
adc
mov
push
and
call
cld
sub
pushf
dec
xchg
jae
nop
pop
shlb
push
inc
bound
pop
subl
enter
fnsave
test
cs
cmpsb
push
sarl
mov
daa
pop
xchg
pop
mov
add
mov
push
add
insl
je
mov
sar
shl
mov
jmp
mov
rolb
mov
or
cmp
push
xor
pop
outsb
sti
lods
fisttps
pusha
test
sahf
jl
cmpb
pop
mov
adc
int
sub
jmp
clc
add
mov
das
sbb
cs
ds
imul
leave
je
sub
jae
adc
stc
ror
push
es
mov
mov
aaa
mov
or
xor
test
or
or
in
lock
dec
out
push
jp
lds
repnz
and
subl
dec
int3
icebp
pop
mov
pusha
push
push
jmp
sub
jmp
jno
xorb
or
in
xor
dec
std
and
aas
add
mov
add
xor
std
mov
and
gs
pop
jmp
mov
adc
mov
jns
jbe
adc
cmc
mov
mov
fyl2xp1
pop
sub
push
cmp
jmp
jle
fs
ret
or
add
sti
std
fcmovu
mov
jnp
imul
mov
dec
dec
sub
push
cltd
add
xor
jmp
xchg
add
pop
xchg
rcrb
pop
push
mov
nop
jmp
cmp
stos
mov
lcall
lds
out
cmp
repnz
or
push
sbb
mov
loope
sbbl
push
aaa
cs
cs
push
jmp
xor
xlat
mov
jmp
repnz
ud2
ljmp
jmp
gs
dec
pop
sub
in
dec
rcr
leave
push
sub
leave
sub
fistps
movsl
adc
subb
aas
mov
into
orl
jl
xchg
ljmp
jp
or
push
mov
cmovns
cli
mov
mov
sub
pop
sbb
push
hlt
sbb
dec
test
jo
push
stos
loop
xchg
or
pop
cwtl
repz
jecxz
mov
repnz
icebp
daa
int3
sbb
das
inc
ds
sbb
loope
popf
inc
mov
xchg
add
jg
sub
push
adc
inc
add
mov
stos
dec
mov
cmp
incb
scas
jns
xor
cmpsl
xor
enter
hlt
in
add
mov
inc
xor
fcompl
movsb
mov
xchg
mov
movsb
imul
sub
gs
inc
loope
push
pop
mov
mulb
pop
pop
pop
jne
cmp
or
xor
mov
jo
mov
sub
and
sbb
xchg
and
dec
flds
pop
not
faddp
push
scas
xor
in
cwtl
cli
ret
or
and
adc
mov
add
add
add
adc
imul
mov
or
push
add
call
mov
push
or
sub
jmp
jle
sub
push
xchg
es
mov
mov
cmc
pop
ret
and
aad
loopne
push
and
pop
pop
mov
leave
xchg
call
in
sti
jmp
add
and
ds
aad
aam
lret
daa
arpl
inc
xor
push
nop
aaa
test
ret
std
pop
push
mov
sub
cltd
test
bound
add
push
mov
inc
jmp
fst
popl
pop
je
dec
and
adc
popa
jo
mov
pop
add
add
dec
sub
xor
les
fmull
add
sbbl
sub
pop
stc
mov
sub
or
or
pop
adc
call
ret
inc
js
and
mov
div
push
sbb
mov
shll
pusha
sub
mov
or
fnstcw
mov
stos
jecxz
mov
push
lds
and
not
push
cli
ss
xor
dec
add
pop
xchg
fsts
loopne
dec
pop
mov
out
fildl
add
mov
nop
out
add
cmp
movsl
or
xor
sub
cmc
shll
test
sub
push
cld
or
jmp
pop
popa
popf
jnp
cli
and
pop
xor
mov
jg
stos
out
rorb
cld
xlat
lods
push
add
lret
add
dec
add
xchg
cmp
xor
sbb
cwtl
xor
gs
push
pop
mov
push
pop
mov
jmp
cmp
stos
mov
inc
mov
pop
xor
imul
adc
in
outsb
nop
cld
jnp
pop
inc
jmp
pop
das
loopne
mov
rcr
test
ret
pusha
das
adc
sbb
out
add
inc
into
jno
adc
hlt
repz
jecxz
xlat
incb
addr16
mov
adc
movsl
clc
adc
push
xor
fimull
lods
insl
fs
jne
pushf
pusha
push
mov
or
and
adc
push
jecxz
adc
push
jnp
add
loopne
in
js
and
pop
shr
xorl
or
neg
add
mov
das
inc
loop
push
cmpsl
inc
enter
sub
fisubrl
shrb
icebp
push
sbb
ret
push
xor
and
insb
insl
subb
add
pop
jl
dec
js
dec
and
sub
adc
cld
outsb
movsb
stc
add
cmp
mov
jmp
lahf
sub
add
and
sbb
or
jno
outsb
add
mov
pop
pop
add
rcll
xor
idiv
dec
and
jmp
out
in
xorb
pop
cld
imul
jmp
sub
inc
push
mov
fisttpll
cmp
mov
push
xchg
bound
or
shl
mov
ja
lods
lret
lret
and
imul
out
or
pop
jmp
or
out
xor
xchg
mov
pop
push
push
fildl
jmp
pushf
add
pop
aad
enter
dec
mov
addr16
pop
cmp
aaa
sub
repz
dec
dec
jb
sub
jmp
jnp
pop
in
fs
sub
mov
es
call
cmc
pushf
int
add
leave
xchg
lret
mov
jns
outsb
push
inc
lret
dec
enter
sbb
cmp
xchg
and
pop
int3
in
jbe
dec
mov
mov
ja
lret
jns
add
pop
sub
cmp
jl
ljmp
inc
shrl
in
sub
js
or
arpl
movsb
and
mov
ss
mov
push
loopne
movsb
sub
cmp
jle
rcll
loope
jmp
scas
int
jmp
mov
popf
fsub
push
inc
mov
inc
jp
icebp
lea
cmpsb
adc
push
mov
add
sub
cmp
mov
xor
daa
push
js
leave
sub
into
add
mov
pop
adc
into
cli
pop
es
mov
and
mov
pop
jmp
or
mov
mov
sti
cmc
cmp
mov
jns
mov
ret
or
clc
or
repz
repz
push
jmp
push
dec
mov
add
add
xchg
mov
xorl
sbb
adc
bound
pop
xor
jae
push
xchg
inc
sub
push
pop
pop
push
mov
sub
cs
pusha
dec
or
jae
outsl
nop
xchg
icebp
cmp
pop
mov
fs
fwait
ret
loope
inc
dec
ljmp
or
insb
adc
jg
mov
inc
jmp
mov
cmpsl
std
adc
inc
or
in
movsb
or
jg
adc
pusha
pop
pusha
adc
jge
ds
lock
shll
xchg
scas
cmp
jmp
pop
je
nop
push
fnstcw
inc
push
jle
cmovle
loope
pop
repnz
xor
push
jo
out
or
xor
jns
call
inc
add
xor
jle
stos
add
push
pop
push
mov
sub
jle
mov
outsb
push
les
push
push
andb
imul
repnz
lcall
xchg
mov
sub
cmp
pop
add
or
adc
shl
jo
mov
dec
in
rolb
ret
adc
ja
cmp
jno
mov
inc
jnp
rorb
iret
xchg
cli
push
mov
xchg
or
push
cmpb
mov
sub
mov
popf
subb
push
and
add
fmull
sbb
sbbb
mov
dec
out
jnp
sub
jmp
xorl
cs
negl
or
jle
aad
mov
mov
les
ficoml
or
sbb
or
add
jns
mov
fs
sub
inc
es
lock
scas
out
js
adc
inc
sarb
push
pop
adc
mov
repnz
adc
xor
je
negl
add
or
push
std
push
andl
push
push
jb
insb
push
add
ss
popf
push
or
movsb
add
mov
test
push
ljmp
mov
add
push
push
push
jae
je
sarl
outsb
es
push
lds
push
shl
sarl
leave
ds
pop
mov
pop
xor
cmpsl
clc
pop
cmp
mov
and
adc
cmp
stos
in
int
or
jg
repnz
jnp
or
daa
adc
push
je
mov
jbe
bound
in
cmc
test
test
push
adc
repnz
cmp
fnsave
ds
out
add
lret
xchg
push
pop
cmp
cmp
or
shll
push
push
mov
imul
push
mov
and
sbb
sub
sub
orb
pusha
push
xchg
dec
and
mov
xchg
sub
push
jb
or
push
or
jg
inc
jge
lret
and
lock
xor
mov
ds
mov
and
roll
pop
bound
jnp
mov
in
jp
adc
cmpb
out
data16
or
mov
pop
or
test
arpl
aad
hlt
mov
push
hlt
std
out
scas
push
ljmp
call
ja
mov
je,pt
daa
and
lahf
or
out
or
mov
add
push
loope
cmp
or
jnp
orb
test
and
and
addl
add
mov
dec
lods
pop
mov
ja
sub
or
add
test
inc
mov
in
leave
push
mov
push
mov
dec
clc
xchg
cmp
inc
addr16
ja
pop
push
add
imul
mov
jne
cmp
xlat
sbbb
mov
mov
mov
cmpb
test
and
push
test
jo
pop
mov
lock
mov
xor
pop
cmp
jecxz
jbe
out
cmp
jg
xchg
popf
popa
ljmp
divb
popf
out
push
or
jmp
daa
repnz
popf
stc
and
jmp
xor
fsts
xchg
sub
mov
das
cmp
repnz
popf
jle
jb
push
stos
ret
cmpsl
dec
lcall
pop
sub
xor
jne
sbb
push
ret
xchg
loope
daa
adc
xchg
sub
or
dec
xor
add
dec
ficompl
jecxz
in
or
sahf
adc
pop
in
shrl
push
les
hlt
pusha
jnp
stc
pop
and
je
add
xor
push
cmpsb
jo
add
pop
dec
inc
xchg
xor
sub
pop
rcll
or
incl
movsl
push
mov
dec
js
mov
pop
out
sbb
sbb
mov
push
or
daa
neg
incl
push
mov
adc
xchg
cmpsl
fbld
mov
jmp
fs
rol
test
jne
cmp
in
iret
fs
dec
pop
int3
mov
adc
imul
aam
sub
xchg
daa
cli
jne
and
xor
adc
pop
push
cmp
inc
push
cld
add
inc
mov
xor
orl
cmpsb
mov
repnz
imulb
fdivrs
sub
add
fimull
dec
adc
ficomps
pop
lods
int
push
add
fisttpl
dec
ljmp
iret
pop
fldl
xchg
je
adc
arpl
outsl
xor
or
and
and
ss
add
ja
add
pop
sti
lret
rcll
jnp
pop
aaa
pop
adc
pop
inc
xchg
fsubrl
sbbl
or
imul
xchg
mov
push
sub
fldl2t
aas
mov
xor
push
xchg
sbb
sub
mov
or
or
sub
jmp
ret
sbb
loop
adc
outsl
adc
lds
add
xor
mov
pop
ret
cmp
shl
jg
pop
adc
lret
outsl
push
outsb
inc
jg
into
push
addr16
mov
jmp
mov
xor
jmp
add
cwtl
outsb
pop
das
mov
add
sbb
sub
movsb
and
dec
pop
xchg
jb
and
xchg
xlat
cmp
pop
xor
xor
pop
lcall
cmpsb
inc
sub
in
in
cli
mov
js
lock
xor
iret
mov
push
adc
pop
repnz
mov
rcr
adc
fbstp
repz
sbb
mov
dec
repnz
jg
aas
mov
xchg
add
scas
jp
xor
out
xor
sahf
outsl
add
dec
pusha
ss
adc
cmp
push
dec
and
insb
imul
jns
or
out
pusha
pop
jbe
cmp
jmp
xor
loopne
movsl
loope
xchg
repnz
push
mov
dec
fcomp
push
movsb
mull
mov
repnz
push
xchg
fdivrs
dec
sub
loope
cmp
jmp
pop
adc
xchg
test
cli
rorl
outsb
and
mov
frstor
inc
push
std
or
pop
and
into
out
xchg
or
add
and
in
mov
jge
dec
mov
in
push
enter
xchg
add
sub
mov
and
imul
jne
jne
je
or
adc
pop
ja
pop
jmp
or
mov
mov
stc
movsb
nop
out
mov
or
inc
cwtl
and
push
ljmp
xlat
sub
jmp
or
cmp
sahf
sub
repnz
movsb
jae
roll
jl
adc
setne
icebp
jno
test
adc
rorb
sub
sbb
jmp
dec
and
mov
pop
stos
jmp
inc
jmp
xor
shl
push
icebp
ljmp
scas
sub
rorl
hlt
add
lock
jnp
push
lock
aas
lds
jbe
dec
add
cmpsb
push
js
and
repnz
orb
adc
mov
xchg
adc
jmp
les
adc
mov
lods
fwait
sub
add
ret
add
pop
shl
push
add
int3
pusha
push
aas
testw
pop
pop
std
rol
pop
rcl
pop
pop
push
xchg
add
enter
cltd
jle
loope
lods
add
adc
jle
sarb
cmp
int3
dec
sbb
divps
pop
xor
xor
jle
cli
jnp
pop
call
fdivrs
pop
mov
xchg
inc
bnd
in
adc
mov
or
sbb
testl
dec
roll
cltd
mov
std
adc
push
mov
popl
popf
lds
dec
jo
adc
inc
add
or
pop
jg
xor
and
addr16
xchg
jb
xor
loop
cmc
jns
imul
xor
jmp
mov
or
cwtl
mov
xchg
stos
sbb
repz
std
inc
inc
mov
data16
or
out
mov
jg
in
xor
mov
xor
stc
push
rorl
sti
cmp
or
push
inc
aas
lock
jge
orb
sbb
pop
push
dec
nop
sarl
jp
sub
or
inc
inc
cmc
pop
adc
dec
sub
inc
xchg
jmp
push
xchg
inc
pop
mov
xor
rolb
shlb
add
sbb
push
lock
call
sub
mov
pop
sub
sub
add
xchg
jle
iret
test
int
mov
dec
and
fisttpll
jl
inc
add
add
adcb
pop
ss
ljmp
out
sub
popf
jne
aam
iret
inc
mov
pop
sub
mov
addr16
stos
daa
push
fcmovnu
or
jns
fmulp
xor
insb
icebp
and
xchg
dec
adc
pop
or
clc
shll
daa
inc
jne
or
fs
sbb
es
pop
and
out
mov
pop
push
loop
add
aam
pop
stc
ljmp
and
and
inc
sti
sub
ficoml
stc
push
mov
fdivs
lods
pop
in
lods
sub
les
stos
pop
ljmp
add
pop
mov
dec
inc
repnz
jmp
filds
popf
arpl
xor
adc
inc
xchg
daa
inc
inc
lods
xor
sub
jp
cmp
xchg
sub
dec
add
sub
fwait
je
add
out
cmc
icebp
dec
ss
add
sub
xchg
insl
mov
or
xor
or
mov
pop
lcall
loopne
sub
mov
es
or
adc
add
xor
jno
dec
jmp
push
xchg
fldenv
push
pushf
add
mov
sbb
mov
jecxz
faddp
in
scas
in
insl
mov
lea
not
adc
clc
mov
mov
or
add
insb
cmp
jmp
mov
jle
pop
pushf
js
pop
or
cmp
pop
pop
mov
inc
cli
pop
gs
addl
add
pop
cwtl
aaa
mov
cmp
ljmp
neg
ret
mov
cmp
inc
jmp
add
sub
pop
xchg
jecxz
ljmp
fucomp
or
or
push
imul
adc
inc
sub
xlat
hlt
mov
or
mov
mov
jno
sbb
pop
push
clc
lret
push
push
loope
add
mov
dec
push
int3
add
aas
out
push
clc
cmp
jns
add
test
push
jmp
repnz
out
add
xor
pop
ret
cmp
dec
xor
movzwl
jmp
adc
clc
mov
sub
and
mov
not
jnp
push
fnstenv
pop
pop
dec
out
or
mov
int
jo
iret
fbstp
jecxz
mov
movsl
xor
jb
adc
pushf
lea
out
xchg
loope
cmp
pop
push
and
and
imul
pop
sub
or
push
sub
xor
mov
xor
fists
inc
fwait
mov
or
insl
inc
inc
push
pop
das
mov
push
push
xchg
xlat
add
out
adc
pop
ljmp
push
adc
pop
lret
add
fstpt
xchg
cmp
or
inc
push
mov
aad
pop
callw
test
out
and
fistl
pop
fchs
aaa
xor
loope
or
lret
add
mov
mov
jl
push
pop
loop
push
push
hlt
pop
ja
or
jmp
je
shlb
jmp
xor
push
dec
adc
out
sarl
mov
lea
insl
push
lock
stc
negb
rcrl
jae
outsb
xor
pop
xor
jmp
stos
rcrb
xor
sbb
icebp
jmp
mov
popa
add
daa
in
leave
pop
adc
xchg
ret
and
or
mov
mov
popa
sub
sbb
dec
adcb
jb
imul
push
into
test
sbbb
rorb
rcrb
pop
dec
gs
cmpsb
mov
pop
mov
dec
jno
test
test
icebp
mov
hlt
ret
cmp
out
shrb
jne
jbe
cltd
dec
stc
ds
cmp
adc
lret
dec
std
addr16
pop
push
fildll
enter
jb,pn
cwtl
sub
sbb
sbb
mov
jmp
in
jg
and
jmp
scas
mov
dec
jno
shrl
mov
movsl
push
add
push
mov
add
dec
sub
mov
pop
lods
sbb
loopne
stos
xchg
add
sbb
jnp
insb
lods
mov
cmp
negb
push
aaa
dec
add
and
aas
mov
add
jmp
mov
mov
mov
xlat
push
mov
mov
or
push
subb
iret
out
and
ret
out
call
pop
push
mov
push
mov
lds
js
gs
or
pop
or
aam
int3
loope
test
dec
adc
ljmp
shll
mov
cmp
pop
cmc
fstps
dec
lret
mov
push
push
pop
aas
addl
insb
pop
aam
shll
pop
lcall
jp
sbb
mov
test
xchg
clc
pop
cmc
rcrl
fdivrl
scas
and
mov
or
cltd
repnz
xlat
loop
loope
daa
mov
pop
add
mov
push
clc
xchg
adc
jae
out
pop
rorb
adc
inc
xor
pop
das
cltd
addr16
ror
or
stos
mov
sub
stos
jb
ret
call
and
sbb
dec
imulb
cmp
jae
push
int
rclb
cmp
or
ja
test
fmuls
push
xorl
or
pop
pop
add
push
mov
inc
or
xchg
push
sub
js
or
pop
repz
das
xor
sub
add
shlb
xchg
hlt
mov
sub
pop
decb
aas
lods
and
gs
dec
mov
push
sbb
mov
push
mov
adc
xchg
add
test
sub
pop
lods
xchg
xchg
lock
pop
dec
scas
out
js
mov
pop
lahf
inc
bound
pop
lea
not
xchg
fistps
cwtl
mov
xchg
lahf
or
imul
fstpl
sub
shl
jmp
push
idivb
cmc
xchg
out
and
loope
and
and
jle
adc
jae
jmp
subb
pop
push
pushf
int
aad
aas
sarl
or
in
xchg
jmp
pop
mov
mov
jne
inc
adc
jmp
push
pop
mov
add
ret
mov
cmc
movsl
push
cmpsl
lcall
add
aas
xor
je
fdivrl
pop
mov
lods
loop
xchg
scas
lea
movsb
jb
and
pop
xchg
or
lahf
fimull
sti
orl
dec
pop
jmp
push
out
lea
push
ss
dec
int
mov
les
and
add
stos
das
test
push
jmp
mov
outsl
rcll
jecxz
mov
adc
mov
jmp
sbb
leave
stos
in
and
and
jp
iret
or
gs
int3
movb
cltd
sbb
dec
cmp
daa
lcall
shlb
cld
jnp
popf
loopne
jmp
xchg
pop
add
push
mov
notl
stos
sbb
cwtl
ret
les
ret
mov
inc
sbb
jbe
aas
jecxz
sub
rcrb
inc
out
into
aad
mov
arpl
shll
in
pop
cmpsb
or
in
lods
jmp
pop
mov
aas
jne,pt
das
mov
jne
cmp
mov
or
call
not
cld
cmp
dec
fdivrl
xchg
jge
push
out
jae
xchg
mov
jmp
popl
lock
pusha
lds
das
and
jge
push
mov
xor
outsb
sti
xor
adc
dec
in
cltd
adc
les
std
pop
mov
push
mov
fwait
cs
jmp
cmp
jo
cli
dec
cld
sbb
pusha
jecxz
dec
push
adc
scas
mov
add
mov
xor
mov
and
dec
fmulp
add
in
mov
push
push
popw
sub
sbb
shrl
cmp
push
adc
push
mov
push
jecxz
add
loopne
sbb
sti
movsb
push
jmp
ret
sub
xchg
fstps
push
repnz
push
imul
jb
adc
mov
mov
adc
pop
sub
xor
test
int3
xchg
or
or
cmpsb
push
and
sub
jmp
jmp
test
lar
jmp
outsl
testb
cli
add
xor
sub
outsb
sub
pop
orl
pop
add
enter
inc
push
or
clc
push
xchg
mov
sbb
add
push
dec
clc
data16
fstl
andl
sarb
pop
mov
ret
scas
call
cltd
sahf
leave
xchg
add
ljmp
popa
shlb
sbb
mov
rorl
xlat
loopne
mov
dec
push
sbb
loopne
sbb
clc
pop
out
cmp
fisttpl
shr
and
add
dec
lret
sbbb
lods
and
and
pop
pop
popf
inc
and
loopne
aam
jmp
mov
lea
into
adc
es
repz
push
xor
jmp
mov
movsb
dec
or
push
or
pop
xchg
call
xor
or
xchg
adc
bound
add
dec
lock
adc
pop
or
mov
and
and
and
ss
clc
inc
inc
and
test
add
add
sub
ret
sbb
push
xchg
add
or
movsb
fwait
orb
inc
sbb
pushf
je
mov
jne
lock
adc
xor
xchg
xchg
and
and
and
and
xor
sbb
and
popf
ss
add
sbb
and
in
bound
mov
outsb
add
add
xor
pop
shll
inc
xor
js
loope
add
add
add
cmp
adc
fdivs
jle
and
push
pushf
mov
ficoms
ljmp
dec
ja
and
push
xchg
add
and
push
and
test
add
dec
fwait
cmp
sub
xor
and
or
mov
and
stos
and
mov
add
push
lret
ja
xor
dec
xor
dec
add
push
push
mov
imul
jno
dec
popa
xor
or
add
shll
pop
adc
test
adc
adc
sbb
jo
cwtl
imul
push
cld
push
adc
inc
push
adc
cwtl
adc
dec
adc
pop
adc
add
and
xor
sti
pop
roll
add
add
fsubs
xchg
push
add
xchg
mov
popa
add
cmc
mov
fdivrl
adc
inc
xor
or
add
push
adc
mov
xor
push
adc
testl
rcl
dec
or
cmc
loop
lret
testl
lret
es
dec
jns
sti
sbb
cmp
xor
add
add
imul
sub
sbb
js
sbb
lret
dec
push
movsb
outsb
cmp
or
pop
add
add
add
push
sub
and
xlat
popf
fists
and
mov
push
not
jbe
cmp
sti
das
mov
pop
mov
cmp
ja
sahf
dec
xchg
lods
inc
xlat
mov
fcomps
push
leave
cmp
mov
movsb
push
lods
xchg
mov
icebp
push
test
sub
js
or
in
jle
pop
ja
add
das
rolb
xor
adc
jb
lcall
out
icebp
inc
or
sub
in
repz
jmp
into
inc
int3
adc
push
sbb
sub
pop
imul
pop
mov
jmp
out
mov
les
pop
inc
loopne
sahf
mov
aam
ljmp
inc
fstpl
mov
std
mov
cld
lcall
mov
add
call
mov
int3
stc
sub
pusha
lret
std
cltd
push
add
pop
jmp
ss
notl
daa
xchg
cmc
ret
fs
mov
inc
fstpl
mov
dec
mov
sub
sub
mov
mov
and
repnz
xor
lods
pusha
movsl
sbb
pop
add
mov
fistl
jne
lcall
loope
push
dec
jne
jmp
pop
ja
repz
loop
add
lock
cmp
sti
orb
pop
mov
shlb
or
not
nop
in
cmc
pop
clc
xorb
adcb
pop
imul
jmp
cwtl
nop
repz
or
dec
inc
xrelease
cmp
jg
jmp
or
ss
sub
dec
aam
sub
lea
movsl
pop
out
jne
loop
or
fcmovu
dec
mov
lret
sbb
mov
das
pop
adc
sub
cmp
dec
pop
stos
insl
sbb
pop
les
push
int
adc
push
dec
sbb
cmovb
cmp
inc
pop
add
push
mov
sub
hlt
inc
xchg
nop
push
inc
je
push
mov
xor
leave
dec
lock
add
sub
movl
add
adc
stos
xor
mov
adc
mov
ja
add
movsb
ja
xor
aam
inc
movb
push
loope
sub
daa
std
in
or
scas
push
mov
and
add
push
jecxz
push
sbb
xor
add
jmp
mov
push
pop
subb
stos
jmp
hlt
lcall
mov
pop
popa
mov
add
imul
add
xchg
mov
jle
das
push
xor
mov
or
add
sbb
pop
mov
rclb
cmp
jmp
pop
rcrl
cmp
sbb
add
fnstcw
and
test
mov
rclb
cwtl
and
pop
in
push
xor
or
shll
sub
shlb
in
outsl
shl
mov
ds
xchg
cmp
cmpsb
pop
testl
rorb
pop
jle
push
iret
aas
sbb
inc
and
add
lock
jns
outsl
xchg
dec
add
ffreep
jecxz
into
aad
hlt
add
xor
xchg
xchg
xchg
and
daa
lods
push
mov
dec
testl
ds
inc
sub
pop
add
lret
and
inc
mov
aaa
in
xor
or
lret
in
int
cltd
pusha
xchg
movsb
in
jecxz
push
dec
jmp
sbb
pop
xchg
inc
pop
in
test
test
add
or
xor
sbb
or
cs
adc
call
dec
pop
cmp
test
iret
andb
int3
dec
lock
add
mov
pop
pop
addb
add
and
das
icebp
pop
mov
sub
xorb
idivb
add
pop
jp
cmp
push
xor
cli
rolb
pop
xchg
and
pop
cmp
push
pop
sarl
sbb
and
adc
sbb
pop
xor
jo
jnp
and
and
les
jg
inc
sahf
aas
mov
adc
mov
jle
xor
push
sbb
push
push
out
and
pop
xchg
or
neg
add
sub
cli
ret
inc
push
jnp
mov
adc
out
add
jmp
leave
xchg
or
mov
bound
fstpl
mov
pop
jns
inc
stos
daa
pop
ja
inc
cli
outsl
mov
aad
bound
das
pop
pop
lods
ja
in
add
iret
ret
or
or
sbb
push
xchg
fiaddl
std
insb
out
test
jg
xchg
mov
fcmovb
pop
shll
lock
pop
xor
dec
cmp
pop
sub
dec
or
jno
mov
add
push
lods
jecxz
adc
cld
add
jecxz
push
rorl
push
gs
fsts
add
imul
or
adc
shr
repnz
ljmp
popa
jno
int
cmpsl
dec
imul
not
cmpl
cld
in
xchg
ret
sbb
jecxz
stos
pop
and
jmp
shrl
not
mov
js
shl
or
rcll
push
mov
xor
fsubp
xchg
dec
mov
pop
mov
sub
jp
icebp
cmp
jns
data16
push
rcrl
lods
jno
ljmp
pop
jmp
shr
add
scas
adc
dec
jo
mov
push
cmc
mov
jge
push
fbld
pop
push
nop
jnp
push
pop
jbe
inc
push
jmp
cmp
sahf
testb
leave
clc
mov
leave
jecxz
neg
add
fwait
add
fisttpll
movsl
jbe
add
add
jbe
popa
cmp
pop
xchg
ja
flds
or
push
xchg
mov
mov
adcb
cmp
xchg
and
inc
leave
bound
rol
dec
add
or
sbb
adc
pop
lock
push
mov
stos
test
pop
push
fwait
cmp
fwait
and
sub
cmp
stc
inc
cmc
sub
inc
sub
cmp
push
mov
mov
and
pop
pop
icebp
das
sub
xor
mov
push
pop
xorl
dec
int
sbb
subl
pop
add
adc
cs
rcrb
adc
sub
cld
xchg
add
repnz
add
pop
daa
ret
addl
xchg
inc
sbb
adc
addb
jb
scas
clc
lock
dec
cld
in
dec
test
dec
mov
inc
jl
inc
and
daa
add
sub
jg
xor
je
push
clts
add
pop
into
sub
xor
bound
pop
inc
sbb
push
test
xor
in
in
or
insb
mov
shll
jmp
xchg
loopne
rcll
inc
jmp
push
xchg
fsubl
mov
sub
mov
xlat
std
and
dec
inc
lds
mov
add
addr16
bound
loop
jl
pop
std
repnz
dec
or
ret
dec
or
adc
sub
jmp
jae
push
mov
sbb
sub
stc
and
or
cmp
imul
and
sub
mov
adc
fcomps
or
iret
test
cmp
adc
lret
repz
xchg
add
add
jmp
jecxz
jle
xor
test
pop
inc
mov
fsub
and
inc
lock
notl
xchg
arpl
addb
arpl
test
bound
ljmp
into
adc
dec
or
adc
jae
fbld
jb
ja
mov
xlat
repz
loopne
in
dec
stc
mov
push
and
gs
fsts
inc
cmc
pop
cmp
add
shl
pop
dec
add
add
xor
inc
add
xor
icebp
pop
pop
test
pop
jl
and
sbb
xchg
pop
faddl
les
push
jg
dec
push
pop
lds
push
call
stc
pop
push
shll
add
aas
imul
and
jecxz
enter
mov
sub
jl
and
xchg
clc
repz
dec
push
and
out
push
dec
mov
mov
push
gs
mov
ds
push
pop
lcall
nop
repnz
adc
push
add
mov
push
out
in
icebp
hlt
xor
int3
and
adc
pop
int3
sbb
inc
pop
inc
xchg
mov
fsubl
add
jmp
mov
addl
lret
pop
jbe
testb
push
inc
inc
movaps
inc
pop
add
mov
sub
cmp
aas
dec
pop
mov
cmp
jnp
inc
or
inc
cltd
xor
mov
repnz
xchg
fdivrs
fistpl
pop
adc
or
and
ficomps
jmp
shl
xchg
jne
aam
push
add
add
mov
or
cmp
subb
add
aam
sbb
in
pop
sub
imul
jl
add
add
cld
dec
mov
lret
xorb
nop
xor
sti
ret
pop
pop
fiaddl
loope
cld
pushl
mov
pusha
sbb
adc
dec
push
loop
sub
orb
outsb
lds
aad
push
test
jp
and
push
inc
lods
sbb
push
in
pop
xor
addr16
and
push
mov
dec
or
shr
aam
test
sbb
loope
cmp
push
insb
add
push
push
cld
js
pop
or
lret
sti
sar
xchg
pop
sbbb
push
add
stos
pop
sub
pop
push
fcompl
shlb
xor
and
push
inc
loopne
xor
pop
das
shl
pop
fisttps
scas
dec
mov
mov
loopne
mov
lods
add
pop
sbb
dec
and
roll
sub
pop
pusha
mov
cs
cmpl
lea
lcall
mov
icebp
sub
mov
inc
subl
test
jge
add
jo
jg
clc
cwtl
pop
cmp
push
mov
test
lods
jns
jmp
test
mov
bound
or
insb
or
iret
push
inc
js
into
repz
das
ja
fmull
xorb
jecxz
call
pusha
mov
xlat
nop
in
imull
pop
out
xor
xchg
mov
iret
lds
and
lds
lock
nop
and
mov
stc
push
push
push
push
pop
fisubs
or
sub
and
jmp
imul
xchg
or
incb
jne
mov
ret
push
adc
push
add
push
lock
cli
mov
fisubl
cli
mov
adcl
mov
xor
cltd
addr16
mov
out
popa
push
push
cmc
jp
xor
sub
aad
rcll
loope
repnz
dec
pop
add
jge
add
mov
jle
outsb
add
lahf
push
fadds
push
add
dec
xchg
fsubp
sysexit
pop
daa
jns
push
mov
loopne
lahf
bound
mov
jmp
add
addr16
scas
lret
sbb
shl
inc
sub
iret
add
insl
adc
dec
push
in
es
jmp
test
ljmp
xor
jno
lock
and
and
les
xchg
lods
sub
cli
jne
faddl
jle
icebp
cli
dec
mov
fsub
daa
idivb
daa
push
mov
adc
cmpsb
test
movsl
mov
xchg
fsubr
stos
pushf
in
mov
mov
pop
push
enter
and
sub
int3
into
rorl
je
and
mov
jmp
xor
lret
pop
jmp
sub
fldl2e
jae
lcall
repz
sub
outsb
add
and
dec
pop
sub
fs
jp
pop
cmp
and
pop
shlb
inc
lahf
dec
jmp
sub
add
adc
xchg
mov
pop
pop
sahf
add
pusha
ffreep
sbbl
add
sbbb
xchg
loopne
rorb
add
testb
sub
sub
in
icebp
enter
and
pop
sub
and
dec
pop
fs
stc
and
jo
or
inc
mov
clc
out
add
dec
idiv
ss
test
pop
scas
mov
roll
pop
cwtl
mov
mov
shll
xor
push
loopne
mov
and
mov
inc
sub
sub
aas
out
sbb
cmp
sbb
adc
or
pop
je
ret
lods
push
add
jecxz
sub
add
add
addb
pop
dec
into
mov
push
rcrl
xlat
xlat
or
cmp
clc
addl
pop
cs
ror
mov
and
jmp
clc
cs
lcall
fildl
enter
ljmp
popf
jne
out
ja
pushf
or
push
bound
inc
jns
add
insl
xor
sahf
inc
or
pop
jmp
out
or
or
pop
outsb
mov
outsl
adc
sbb
add
out
jmp
push
mov
cwtl
dec
jge
roll
mov
jl
push
dec
or
or
pop
add
pmullw
int3
stc
push
xchg
xchg
mov
add
cwtl
or
out
icebp
push
jmp
pop
mov
xor
or
call
or
nop
ljmp
lret
dec
movsl
repz
pusha
mov
dec
adc
cli
imul
inc
nop
outsl
cld
push
xchg
or
pop
andb
mov
les
repnz
adc
push
rclb
sub
add
sbb
es
and
scas
jl
pop
mov
neg
pop
dec
sbb
aaa
mov
sahf
bound
leave
call
mov
cmp
stos
mov
jmp
imul
push
xchg
wbinvd
fucompp
in
bound
push
sbbl
sub
cmp
or
add
jl
add
pop
sahf
jns
pop
jmp
mov
jmp
inc
mov
dec
not
add
push
ljmp
inc
and
xchg
sub
add
sub
das
ljmp
std
pushf
flds
pop
xor
or
xor
or
bound
xor
dec
mov
dec
dec
call
out
lahf
push
rorl
cmp
outsl
rcll
das
mov
mov
jge
in
inc
jnp
or
cmp
stos
or
xor
bnd
adc
out
sub
filds
jnp
shr
out
pop
push
mov
sub
add
xor
dec
loope
das
lcall
out
loop
test
jecxz
add
shr
imul
adc
mov
call
iret
cmc
js
cwtl
dec
pop
loop
aas
push
into
mov
lret
stc
xor
jo
lahf
jbe
jno
and
or
call
add
cwtl
imul
or
pop
aas
xor
fcomi
cs
cld
mov
pop
popf
add
dec
cltd
fs
adc
sub
xchg
stos
sub
out
add
dec
sbb
aaa
cmp
shl
les
sub
sub
xchg
dec
iret
mov
lods
cmc
orl
cmpsb
test
test
cld
jp
mov
mov
data16
or
addr16
jbe
call
insb
nop
add
inc
or
mov
pop
in
xlat
fiaddl
jge
imulb
add
push
push
mov
add
xor
cmp
pop
int
sub
jns
add
inc
pop
pop
jge
pop
call
xor
xchg
xlat
mov
dec
mul
sbb
xlat
push
fsubl
clc
andb
or
out
sub
jb
ljmp
push
leave
sbb
call
mov
ror
insb
jmp
cmp
push
aas
iret
xor
lods
add
mov
fsts
dec
dec
imulb
sbb
movups
pusha
xchg
sarl
mov
xchg
push
pop
js
js,pt
add
mov
inc
call
adc
cmp
fwait
nop
or
xor
inc
imul
inc
adcb
js
dec
and
pop
out
lret
fcmovbe
push
jne
jp
inc
out
cmp
daa
adcb
xchg
xchg
icebp
sub
imul
push
movsl
xor
add
jns
cmp
sub
inc
push
mov
ret
testb
jno
rorl
out
das
sti
sub
les
xor
neg
lods
or
push
cmp
mov
daa
daa
inc
push
push
mov
or
les
push
shr
xchg
leave
and
dec
out
mov
js
dec
test
nop
pop
testb
add
inc
xor
into
pop
jp
push
mov
leave
mov
ret
add
sub
inc
stos
and
mov
jnp
jmp
ljmp
movsb
std
or
jnp
or
aas
push
insl
or
push
ja
add
das
or
jp
adc
mov
cs
das
sbb
shrl
push
and
sub
xor
jle
sar
subb
je
sahf
into
push
add
mov
incl
jne
sub
mov
addb
out
jl
repz
push
and
dec
jl
cld
adc
das
sub
push
push
or
clc
xor
dec
sbb
push
lods
cmpsl
jl
mov
out
or
arpl
inc
jnp
out
inc
dec
jmp
jae
cmp
cmpsl
add
jecxz
push
pop
xor
push
mov
cli
or
cmp
mov
iret
mov
inc
add
mov
and
mov
sbbb
ljmp
frstor
push
rcrb
lcall
add
jl
xor
jmp
call
ret
pop
daa
mov
push
sub
jg
add
xor
add
in
or
repz
int3
out
sub
or
and
mov
xor
or
pop
mov
xchg
and
leave
mov
fs
add
add
jecxz
mov
test
sbb
in
sub
pop
mov
pusha
std
mov
ss
xchg
insl
sbb
sub
jae
jmp
in
add
loope
adc
and
mov
and
dec
loop
fisubrs
rol
lret
popa
sub
repz
xchg
addr16
and
ds
jp
push
insl
push
pusha
dec
into
push
adc
add
data16
neg
loop,pt
or
jg
jne
std
mov
and
inc
fwait
or
pusha
outsb
shll
or
xorl
jmp
mov
adc
add
adc
sbb
jb
pop
push
sbb
mov
jle
jl
push
pop
cld
iret
enter
push
je
lea
in
pusha
call
xchg
sbb
add
mov
stc
inc
std
cmpsl
or
adc
cld
dec
bound
ficomps
decl
xor
or
cld
sub
scas
jp
mov
sahf
loop
aad
and
into
pop
inc
pop
out
xchg
cli
cwtl
adc
loopne
add
xor
jge
mov
insl
aad
jle
fistl
psubsw
mov
sbbb
xchg
shll
or
test
ja
sarl
add
not
push
mov
xchg
add
push
icebp
xor
lret
pop
push
imull
cmp
mov
pop
mov
inc
cmc
push
and
mov
xchg
movsb
push
push
in
mov
cmp
addb
mov
jl
aaa
enter
and
loop
repz
ja
scas
addb
push
imul
jg
loopne
dec
repz
pusha
jno
inc
addr16
xor
das
pop
or
push
jmp
mov
dec
jg
mov
in
sub
into
orl
cmp
jb
sub
sub
sub
or
fsub
jecxz
jno
jmp
pop
adc
pop
ret
dec
test
dec
push
stos
adc
mov
movsb
pop
mov
pop
shrl
fbstp
xchg
jae
movsl
and
bound
cmp
subb
sub
inc
sbb
fisttpl
sbb
push
add
jp
mov
test
clc
inc
add
or
inc
mov
push
pop
push
pusha
lods
leave
sbb
mov
inc
mov
sub
push
js
adc
inc
pop
cmp
shll
inc
jp
xchg
mull
push
xlat
sbb
rolb
incl
fistpll
int3
mov
arpl
arpl
inc
fldcw
cmp
inc
std
in
jmp
movsl
fs
aas
jno
or
imul
push
xor
das
jge
insb
dec
or
xchg
cwtl
jo
adc
pop
add
lea
in
les
aaa
leave
mov
mov
xor
push
xchg
push
test
cmpb
cwtl
repz
stc
pop
jne
xor
inc
pop
cld
addr16
lods
and
cmc
into
inc
lock
rorl
add
rcr
jmp
add
add
push
add
add
stc
repz
movb
out
add
jae
popf
test
add
in
add
lahf
pop
out
push
ljmp
push
ja
in
and
and
addb
mov
fsts
out
ja
xchg
adc
ja
jmp
inc
out
iret
add
fcompl
rcrl
push
pushf
rclb
jp
les
in
neg
in
or
jle
jg
pop
sub
pop
dec
enter
sub
mov
sahf
mov
movsl
push
push
test
imulb
bnd
pop
push
push
jecxz
sub
xlat
jl
rcrl
ljmp
dec
pop
push
lock
adc
jle
xor
jmp
dec
cli
stos
mov
cmpsb
lcall
sub
push
cmp
sbb
icebp
daa
lods
inc
movsl
aad
inc
cwtl
adc
mov
or
rcrl
mov
push
cmp
repz
and
xlat
pushf
enter
out
or
int3
fstpt
leave
test
jns
cli
dec
xchg
cmp
or
inc
push
rclb
and
cmpsb
das
or
adc
or
jbe
or
lahf
jge
pop
dec
gs
daa
icebp
fldl
sub
in
fisubl
pusha
jg
push
adc
and
test
or
xchg
call
adc
stc
fiaddl
pop
scas
sub
add
fucomp
cmpsb
xor
push
mov
pop
fstl
call
and
movaps
sub
popf
ljmp
adc
pop
popa
lods
cltd
push
sbbb
jmp
push
jmp
pop
decl
pop
mov
inc
cli
movsl
jno
imul
pusha
pop
cmpsl
mov
push
repnz
testl
loope
mov
divl
or
pusha
and
pusha
xor
xor
and
pop
mov
outsl
or
jmp
dec
pop
sub
daa
mov
insl
cltd
add
jbe
stos
xor
mov
rcrb
pop
mov
fldenv
pop
jmp
xchg
pop
sbb
mov
xchg
add
xchg
bound
jg
push
push
push
cwtl
incb
xor
pop
inc
mov
sub
add
xor
jmp
sub
sub
sbb
dec
repnz
imul
call
push
neg
sbbb
cmc
cmp
dec
sub
test
jge
push
pop
mov
aaa
mov
jnp
add
sahf
adc
cwtl
loope
sub
cmc
loope
cmp
rcl
inc
cmpsl
cmp
push
add
and
out
inc
pop
not
jmp
add
jle
hlt
rorl
sbb
sbb
mov
mov
jb
xlat
pop
in
cltd
and
cltd
push
cld
je
daa
pop
push
out
pop
movsl
inc
ljmp
je
outsl
and
or
jns
sub
xchg
scas
cmpsb
rcll
mov
mov
xchg
push
jnp,pt
out
dec
mov
sbb
mov
jne
adc
lods
lock
jp
or
mov
lds
or
and
cmp
inc
xchg
into
shl
jmp
push
rclb
xor
ja
jb
push
test
cmpsl
pop
adc
xchg
push
push
sub
adc
cli
add
in
add
xchg
pop
xchg
cmp
cmc
mov
mov
aad
inc
inc
lods
xlat
pop
fidivrs
dec
hlt
or
xor
push
add
or
xor
and
je
mov
or
or
sub
icebp
pop
sub
lcall
bound
aam
jl
ficoml
push
dec
cli
das
ds
xchg
pop
sti
mov
rcrb
xor
and
add
nop
sbb
js
pushf
mov
xor
scas
test
stos
rorb
gs
jecxz
addr16
cmp
fs
dec
mov
add
jmp
cmp
popf
mov
dec
adc
mov
insl
les
push
add
negl
int3
cwtl
jecxz
ljmp
ljmp
push
adc
popl
add
cltd
std
dec
or
mull
filds
mov
inc
inc
xchg
test
push
add
imul
add
jg
dec
ret
cmp
js
in
clc
jmp
lods
jno
int
outsb
add
push
inc
jmp
jecxz
int3
imulb
add
lret
adc
rcr
mov
cmp
sub
mov
xchg
jb
imul
in
and
cmc
scas
push
lret
daa
std
fwait
or
adcl
cmpsl
ja
pop
cmp
add
add
mov
xor
sub
dec
xchg
sbb
add
push
dec
jb
add
out
in
sbb
cmp
xor
add
cwtl
add
cld
mulb
pop
movsb
mov
or
add
sub
mov
lret
filds
mov
icebp
cmp
mov
dec
cli
sub
pop
adc
xchg
mov
pop
fsubs
push
clc
or
push
ja
jecxz
sbb
addr16
add
inc
xchg
in
addb
mov
jmp
mov
push
ss
sbb
add
imul
or
xor
sub
and
push
xor
add
jo
sbb
push
sarl
add
shlb
jmp
mov
cmpsb
dec
and
jmp
shll
test
cmp
andb
add
add
mov
inc
jmp
ret
and
add
mov
add
and
sub
push
ret
or
push
fcmovnb
cmpsl
test
pop
xor
add
sti
jo
push
jmp
faddl
ljmp
jmp
push
or
xor
test
in
shl
aam
add
cli
xor
js
add
daa
notl
xor
dec
mov
iret
pop
xor
pop
sub
stos
mov
cmpsb
sbb
xchg
cmpb
adc
push
xorl
or
aaa
jne
sbb
adc
cmp
lods
ja
add
repz
cmpb
add
jns
inc
dec
aam
ljmp
jmp
xorb
add
iret
adc
mov
mov
sub
ficoms
pop
test
mov
lods
and
cwtl
xchg
add
push
aas
sub
js
add
loopne
sub
pop
sub
jne
xchg
or
in
push
pop
jmp
pop
jmp
xor
mov
push
imul
loopne
xor
mov
inc
add
rcrb
adc
xorb
addb
int
mov
sub
and
or
jmp
add
push
mov
or
and
jmp
scas
lds
addr16
xor
ljmp
add
aaa
adc
inc
addb
xor
mov
fs
or
xor
fsubl
les
divb
fiadds
jle
daa
mov
mov
aam
das
jo
mov
inc
dec
add
sbb
cmp
add
pushf
adcl
dec
f2xm1
push
xor
movsb
push
jae
cmp
or
sbb
mov
push
jg
imul
jge
jbe
jns
xchg
jbe
mov
daa
js
popf
ja
ret
mov
lods
cld
adcb
inc
and
mov
arpl
pop
dec
scas
loope
sub
mov
dec
and
gs
mov
ret
es
into
pop
shl
or
dec
test
cmp
das
and
jne
cli
divl
fisttpll
or
push
das
test
pop
or
push
add
mov
inc
sahf
pop
ds
jl
shl
insl
xor
mov
sbb
add
add
dec
jmp
stos
imul
dec
xor
dec
pusha
or
repz
inc
inc
test
inc
pop
and
out
or
movsl
jae
jg
adc
add
inc
popf
jns
jb
push
mov
dec
pop
jge
pusha
daa
daa
shr
insl
and
push
and
fsubrl
push
out
shlb
jmp
test
adc
in
ret
cli
sub
lock
shlb
mov
popf
ret
stos
sub
lcall
pop
jmp
pop
inc
addl
or
pop
mov
jecxz
or
pop
pop
push
pop
mov
imul
frstor
pop
cmc
dec
jnp
push
pushf
in
push
dec
inc
adc
daa
jae
cmp
pop
mov
push
test
sbb
xor
mov
push
xchg
arpl
jnp
cmp
and
adc
repnz
and
dec
xchg
dec
call
outsl
pop
leave
mov
fldl
xchg
mov
test
popa
add
push
pop
stos
sub
in
stos
popf
ds
imulb
aam
adc
mov
cmp
xchg
inc
and
cs
in
roll
pop
les
sbb
cmp
ljmp
pop
bound
cmpsb
jns
bound
loop
test
sub
das
daa
pop
rcr
or
cmp
push
movsl
jg
and
bound
into
inc
jle
stos
and
rorl
fistpl
outsl
rolb
mov
pop
and
dec
jp
xor
push
add
cmp
pop
lea
pop
and
adc
cmpsb
or
jp
xchg
loopne
push
fmuls
and
pop
mov
jg
mov
dec
addb
inc
sti
xchg
nop
daa
sub
cltd
jo
and
mov
add
sub
stc
xchg
rolb
leave
jnp
push
and
and
add
sahf
inc
pop
aad
incl
cmp
sub
iret
xor
rorl
sar
inc
dec
or
jl
sub
pop
or
pop
xorl
dec
ljmp
xor
mov
or
dec
lock
ret
sub
hlt
add
add
popa
ficompl
push
mov
or
add
gs
jo
jns
dec
adc
sub
ljmp
jmp
push
mov
push
push
xlat
pop
mov
sti
out
jno
mov
add
and
ja
bnd
lock
mov
push
or
push
or
rclb
adc
les
mov
dec
sarl
xchg
stos
pushf
mov
shll
pop
sarb
adc
jae
or
sub
adc
dec
pop
push
push
movsb
add
sbb
mov
jne
adcl
jmp
ljmp
negl
stos
adc
sbb
mov
pop
mov
and
out
dec
shll
inc
in
hlt
add
xchg
adc
notb
in
dec
mov
mov
in
push
push
xchg
and
icebp
pop
sbb
pop
mov
fwait
xchg
repz
test
sub
in
xchg
pop
xor
pop
js
add
mov
call
cld
jmp
pushf
mov
add
neg
cli
adc
addr16
xchg
jns
and
mov
cli
cmp
movsl
sub
dec
jnp
add
pop
mov
in
negl
in
mov
jecxz
add
mov
bound
jae
add
stos
fsubr
mov
outsb
add
inc
sub
and
xchg
inc
mov
fmul
scas
imul
push
mov
sub
add
out
or
mov
pop
jmp
cmp
test
sub
jmp
add
js
pop
xchg
loope
lret
push
push
xchg
mov
ret
aam
jmp
out
lret
sahf
push
sub
scas
xor
inc
out
pop
xchg
outsb
add
out
ud2
andb
xor
loopne
int3
dec
add
adc
lds
push
mov
xor
insb
scas
sub
inc
jae
or
ret
leave
pop
popf
int3
sub
mov
inc
push
cmp
push
test
loope
pop
ret
mov
pop
cmp
sbb
sbb
jmp
ror
testb
or
push
mov
fsub
leave
push
jmp
fdivp
cmp
mov
add
shll
cs
mov
lds
or
pop
gs
icebp
push
jo
xlat
dec
adc
dec
fs
sub
inc
mov
add
or
aad
icebp
dec
mov
cmp
sbb
xor
leave
dec
add
xor
adc
push
mov
jmp
mov
loopne
inc
dec
or
inc
jbe
out
mov
lret
add
testb
add
mov
lret
inc
jg
sub
call
and
testb
pop
dec
push
mov
mov
lods
aad
outsl
mov
sbb
popa
aaa
jmp
add
call
and
cmp
pop
lods
inc
inc
jae
shll
mov
inc
and
push
mov
push
iret
push
add
jns
cmp
push
adc
push
enter
pop
xor
ret
or
ja
add
xor
jmp
mov
imul
mov
imul
mov
imul
sub
mov
jl
inc
shll
and
adcl
dec
imul
add
jnp
pop
adc
cmpsl
inc
inc
add
ds
jecxz
pop
addl
mov
jmp
mov
xchg
push
shrl
add
std
outsl
cld
and
pushl
ret
pop
pop
jmp
mov
test
lods
mov
mov
xchg
or
ds
js
jmp
loope
insb
xchg
mov
call
pusha
imul
mov
xor
sbb
das
les
out
into
mov
jmp
or
inc
lahf
push
mov
fxch
dec
dec
push
or
stos
test
mov
xchg
mov
leave
ret
sub
jge
sub
sbb
jmp
lea
negl
stos
or
xchg
push
aam
js
pushw
sub
push
push
mov
cs
shr
stc
sbb
sub
sub
sbb
loope
jmp
mov
xchg
push
or
loop
cmp
cmp
rorb
push
pop
sub
pushl
xchg
out
push
inc
fistpll
adc
pop
pop
mov
rcrl
dec
mov
std
movsl
loope
arpl
sub
adc
mov
jne
pusha
adc
jmp
dec
add
fisttpl
and
cmpb
sbb
adc
inc
or
loope
push
rcrl
subl
stos
push
or
fs
push
and
enter
inc
clc
jmp
cli
push
push
call
movl
out
dec
imul
lcall
cmp
jbe
inc
in
pop
inc
fwait
push
es
inc
add
jp
je
mov
cmpsb
ficoms
xor
mov
jmp
cs
xor
or
xchg
shll
mov
cld
xchg
sbbb
lcall
aaa
outsb
sub
sbbb
imul
sub
andl
clc
stos
adc
in
mov
cld
dec
rclb
mov
daa
sbb
jmp
clc
cmpsl
scas
adc
sbb
sbbb
sbb
mov
jl
in
jmp
and
mulb
loopne
in
nop
rorl
movb
ror
push
outsl
and
stc
add
popf
ficomps
mov
jmp
cmc
inc
bound
scas
pop
push
int
shll
inc
fstpl
jp
push
cmp
das
roll
sub
dec
or
mov
adc
movsb
fnstsw
andb
inc
mov
push
and
pop
dec
clc
adc
jg
into
loopne
jnp
jae
outsb
sub
xchg
mov
int3
and
ret
jo
mov
das
cmc
push
adc
push
into
clc
je
neg
push
mov
in
and
push
mov
add
xchg
add
imul
mov
negb
sub
adc
pop
jmp
mov
add
or
adc
pcmpgtb
adc
or
fadds
inc
inc
adc
in
ds
pop
inc
rorb
add
aas
cmp
repz
lea
js
add
dec
add
loopne
fucomip
es
mov
push
into
adc
std
and
add
cmp
test
insb
shlb
pop
add
mov
rcrl
mov
cmovle
jmp
jns
adc
adc
shr
fbld
mov
xor
das
jmp
loope
pop
orl
and
cmpsl
lcall
pop
jae
sub
dec
add
ljmp
cwtl
push
fdivrp
addr16
xlat
jmp
push
push
ja
mov
shr
sbb
mov
push
add
mov
fadds
xorb
lret
ret
negb
cli
in
and
add
sbb
std
xchg
mov
jmp
lret
or
shrb
pop
out
xor
out
xchg
aaa
cmp
mov
xchg
pusha
and
or
cmp
stos
leave
in
and
mov
imul
adc
pop
push
and
push
in
outsb
or
pop
sbb
icebp
loopne
and
inc
int3
push
push
loop
or
jp
xchg
sbb
div
popa
mov
subl
jo
mov
mov
imul
std
jmp
mov
jb
and
ret
test
pop
sub
es
pushf
sub
pop
pusha
jmp
sub
adc
push
fincstp
xor
or
cmp
es
cmp
adc
mov
sbb
pop
pop
mov
rcr
push
xchg
rolb
push
aam
jge
incb
push
mov
sub
rcrb
outsb
nop
loop
fmuls
js
mov
or
add
mov
fidivrl
out
adc
add
aam
pop
ret
mov
dec
lods
popf
jle
inc
outsl
shrb
fs
cmpsb
or
or
jl
adc
test
rcrl
add
idivl
icebp
outsl
mov
jecxz
sbb
dec
add
mov
xchg
and
daa
jmp
sub
xor
xchg
rcll
not
test
shlb
dec
mov
shlb
and
cmpsb
and
push
or
ss
out
or
xor
push
ljmp
push
or
mov
cwtl
mov
sub
push
jb
pop
jmp
mov
roll
popa
and
pop
mov
ja
push
sub
and
dec
mov
inc
mov
push
dec
pop
stos
add
insb
mov
clc
push
push
aaa
sbb
jmp
popf
movsb
out
in
and
and
dec
jp
lds
inc
inc
or
lods
jnp
mov
sbb
dec
push
in
or
jb
or
imul
xor
jbe
pop
aaa
je
add
arpl
popa
mov
add
fsqrt
nop
popf
pop
dec
push
insl
sbb
imul
xchg
cmpb
rclb
dec
xchg
push
lret
jg
xchg
xor
and
adc
sub
push
gs
pop
out
lret
push
fnstsw
ret
jecxz
pop
pusha
mov
jns
sub
loop
push
cld
inc
add
pop
pusha
pop
jp
mov
mov
std
shll
cmp
and
mov
jnp
pop
push
push
jns
shll
ror
pop
mov
jecxz
sub
stos
fs
ficoms
mov
xchg
add
imul
mov
xor
jmp
add
mov
fsubp
cmp
jmp
andl
popa
cmp
adc
subb
jae
es
xor
or
push
ret
aam
loopne
loopne
push
mov
xor
add
fs
mov
pop
add
roll
jnp
and
test
jnp
cmpsl
adc
ret
jmp
test
sbb
pop
dec
dec
stc
xchg
dec
or
pop
add
xor
clc
rcrb
nop
pop
jge
add
xchg
and
or
or
pop
sub
xor
ljmp
test
or
push
pmuludq
and
fsubrs
or
jmp
and
ja
or
sub
or
push
test
pop
jo
punpcklbw
fs
jmp
mov
idivb
rorb
icebp
cmp
sub
pop
movsb
iret
pusha
and
mov
mov
ret
push
pop
sub
jne
xchg
into
das
push
sahf
cs
bound
mov
xchg
jmp
movsbl
push
push
add
ss
js
add
test
cmp
repnz
mov
es
stos
pop
bound
and
sub
lds
mov
push
dec
mov
imul
add
and
sbb
add
jmp
pop
mov
imul
pop
clc
adc
addr16
jle
or
inc
or
stos
sub
ret
pop
adc
sub
es
jg
push
mov
push
sahf
add
inc
mov
xor
arpl
push
xor
add
out
jo
jle
pop
popw
jle
hlt
sbb
or
inc
xchg
sbb
pop
inc
fs
push
ja
add
jp
push
cli
ljmp
and
mov
imul
push
inc
and
cmp
and
inc
aam
syscall
dec
test
mov
shll
icebp
inc
or
xor
mov
andb
mull
jmp
mov
inc
out
mov
xchg
push
or
cmp
push
push
shr
add
mov
sub
adc
adc
add
adc
jmp
pop
fcoms
xor
lahf
adc
jmp
fstpl
addb
ja
and
jmp
xchg
pop
mov
pop
pop
mov
dec
adc
vaddsd
cs
dec
push
and
aam
mov
push
jno
cmp
mov
fcmovnbe
cmp
loop
xchg
and
mov
notb
outsl
push
or
adc
xor
ficoml
or
dec
fisubs
add
loope
lods
test
sbb
push
adc
and
xor
cmpsl
orb
insl
fadds
push
pop
cmpsl
outsb
aam
or
daa
inc
test
mov
add
xor
xor
add
inc
and
push
aad
jmp
pop
xchg
daa
pop
ja
loop
dec
mov
sbbl
jbe
push
push
rcrl
push
inc
mov
test
int
sbb
insl
adc
or
jmp
mov
stos
lods
cwtl
sub
pop
jge
cmp
inc
shl
cmp
mov
push
mov
jp
push
in
scas
xor
push
testl
add
and
jmp
not
xor
sub
add
mov
loopne
dec
add
pop
pop
fldl
repnz
ljmp
jne
sub
in
ja
sub
pop
aas
mov
fbstp
dec
bound
push
lods
lea
cli
dec
push
push
roll
push
mov
xchg
dec
add
mov
sub
loopne
pop
mov
jle
sub
pop
push
add
xor
cmp
add
push
iret
imul
push
into
pop
pusha
and
adc
lds
scas
pop
or
test
or
fildll
add
cmp
mov
out
mov
or
cld
movsl
mov
mov
add
in
sti
cli
mov
cmc
add
sub
jmp
jmp
sub
jne
jmp
lahf
rclb
test
sbb
dec
push
inc
aas
out
jl
cmp
aad
cltd
pushf
cs
cmp
cli
cld
fldenv
fists
xor
push
cmp
inc
xorb
and
inc
dec
lds
bound
lcall
addr16
adc
adc
mov
in
cmp
mov
or
pop
sbb
pop
mov
adc
addr16
and
addb
pop
push
adc
aam
scas
int3
iret
test
mov
add
cli
push
add
pop
adc
jle
aaa
sti
das
pop
rclb
jecxz
scas
repnz
jp
cs
stc
add
roll
jle
ljmp
sub
fs
stos
lods
rolb
or
push
shl
add
mov
dec
push
lret
sub
scas
test
test
out
cmpsb
mov
add
ja
gs
add
ljmp
in
aaa
mov
loop
pusha
and
lahf
pop
leave
mov
js
and
lret
dec
and
idiv
imul
push
and
jne
or
arpl
or
fsubr
pop
and
sbb
or
aas
hlt
adc
push
mov
add
lret
mov
pusha
leave
jle
adc
mov
mov
shll
sbb
dec
mov
fnstsw
jmp
pop
push
mov
shl
add
shl
rcll
cld
ds
lods
or
rcrb
or
pop
pop
lock
jl
sub
clc
push
divl
sub
incl
inc
in
mov
mov
and
pop
xchg
ss
dec
movsb
mov
icebp
xchg
mov
sti
add
movsl
sub
push
mov
xchg
shll
dec
frstor
mov
dec
daa
xlat
mov
pop
negl
ja
fstl
sub
out
sub
imul
mov
and
and
jle
pop
test
mov
lds
add
push
fldl
xchg
adcb
and
mov
in
mov
dec
scas
jno
sbb
mov
lret
push
xor
cmp
inc
xor
mov
xor
popf
aam
test
jns
das
mov
pop
lock
push
mov
pop
enter
pop
and
dec
cmpsb
cmp
scas
xchg
push
adc
sub
fcompl
bnd
or
cli
mov
repnz
adc
stc
jmp
rcll
fimuls
rolb
xor
sbb
xor
push
cmp
add
adc
ret
jo
scas
inc
addr16
and
pop
in
xor
xor
jae
aas
adc
inc
jg
out
sub
add
pop
rolb
test
fs
lock
push
loop
mov
cmpl
or
and
push
add
jbe
mov
into
push
in
mov
mov
push
movsl
and
fmull
pushl
pop
pop
shl
inc
adcl
dec
lret
mov
sbb
xor
rcrl
lock
cmp
and
fcomps
nop
outsl
pop
or
stos
sar
bound
cmp
jmp
mov
sub
inc
sub
push
lcall
lods
int3
in
notb
mov
push
add
xor
sub
or
mov
mov
das
lock
aas
loopne
push
and
sti
or
fsubrl
imul
cltd
clc
sub
sbb
test
loopne
stos
mov
xchg
testl
dec
mov
jl
inc
in
xor
adc
pop
sti
scas
fldl
in
or
cmp
lea
jo
imulb
xchg
push
arpl
sti
sub
loopne
outsb
lahf
inc
sbb
xorl
sarl
cmp
or
inc
cmc
mov
lock
xor
push
or
and
ret
pop
call
dec
xchg
sbb
add
int
jnp
jg
pop
xlat
cmp
sub
xor
imull
cli
aas
add
lods
dec
mov
scas
fucomi
push
pop
popa
pop
mov
ret
scas
pop
cmc
in
roll
daa
negl
xchg
push
pop
test
adc
add
sbb
popf
add
cmp
jns
nop
or
repz
ret
lcall
sub
pusha
movswl
push
flds
inc
mov
mov
daa
insb
cli
ret
xorb
cmp
or
scas
push
inc
xor
bound
jg
mov
orb
dec
cltd
adc
xor
loopne
sbbb
jb
pop
jns
fwait
xchg
add
mov
test
cld
aas
cmc
jae
xchg
lock
jmp
xor
dec
js
or
pop
roll
sbb
pop
and
pop
sbb
fs
rol
xor
xchg
jne
sti
gs
cmc
pop
xchg
xlat
cltd
lret
mov
pop
divb
xchg
imull
bound
xor
std
stc
dec
lahf
push
push
fildl
pop
loopne
pop
lods
pop
mov
mov
mov
in
repz
xchg
pop
or
jmp
xchg
fs
adc
jp
or
dec
jno
dec
jle
or
add
sbb
jmp
sub
add
scas
add
and
push
jnp
es
fs
xor
sbb
add
push
fmuls
mov
jns
push
pop
insb
or
dec
sub
leave
pop
jmp
imul
icebp
sbb
mov
sub
mov
and
int
in
mov
add
sbbb
or
ror
or
xchg
fwait
sub
dec
icebp
adc
push
orb
in
inc
cltd
add
test
dec
sub
aas
sbb
sub
xor
add
pop
std
adc
jmp
mov
call
pop
or
and
mov
and
stc
mov
pop
pushf
pusha
mov
lahf
pop
push
jns
add
js
cmc
popa
sub
and
xlat
scas
sub
mov
repnz
lds
rclb
push
out
xor
sub
mov
or
rorl
mov
dec
sub
mov
jo
pop
fld
push
loope
mulb
add
icebp
and
mov
mov
ret
mov
push
pop
mov
add
mov
das
mov
and
and
add
push
jbe
inc
in
imul
pop
mov
lods
add
mov
push
push
mov
cmp
jg
sbb
or
pop
jo
adc
xchg
jbe
adc
fldcw
xchg
inc
lcall
sub
or
mov
inc
xchg
dec
cmp
adc
dec
mov
mov
fistpl
mov
call
fstl
jb
jnp
add
push
jmp
mov
mov
or
stos
push
movb
dec
lahf
pusha
push
push
jmp
push
bnd
jmp
push
cmp
or
mov
jnp
cs
iret
mov
fwait
push
dec
push
add
inc
sbb
dec
popa
jbe
sbb
pop
das
cltd
jne
pop
xor
popf
xchg
clc
repz
mov
es
push
or
and
dec
cmp
sbb
and
sti
aad
popa
or
or
inc
cs
add
dec
jmp
nop
push
shll
movsb
mov
dec
lds
cli
cmpsb
jno
mov
xlat
sbb
outsl
in
out
dec
lahf
adc
inc
dec
mov
or
or
push
ja
adc
pusha
dec
sbb
and
icebp
popf
shrb
call
fisubrl
cmp
add
pop
je
pusha
arpl
inc
lock
shrb
cmpl
xlat
and
or
jp
incl
push
pop
pop
cmpsb
data16
dec
mov
icebp
inc
jmp
mov
pop
pop
add
push
pop
mov
add
add
xchg
cmp
cmp
and
and
sub
pop
pusha
push
test
dec
adcl
sbb
cltd
and
adc
mov
and
pop
add
dec
cmp
adc
and
jmp
div
add
and
mov
mov
sub
fldt
inc
sbb
push
sub
and
adc
loop
fsubrs
ds
add
sub
mov
jmp
push
scas
cmp
jmp
sub
cs
push
outsl
xor
adc
mov
hlt
adc
jne
lock
sbb
shlb
mov
cmp
rol
and
mov
test
subl
jecxz
out
rcrl
cmp
adc
dec
xlat
inc
mov
add
pop
pop
out
neg
mov
jmp
mov
rcr
loop
xchg
movsb
jmp
add
pop
scas
add
jbe
cmp
cli
into
dec
and
into
push
add
sbb
cld
idivb
jmp
sti
popa
sub
pop
daa
popf
pop
stc
jge
pop
cmp
loope
dec
test
cmpsb
orl
popa
push
mov
in
hlt
xor
adc
inc
inc
sub
mov
xor
sub
xor
xor
pop
adc
in
cmp
xor
jmp
xchg
movsl
jmp
pop
ja
test
cmp
add
xor
jmp
fisubs
xor
jb
mov
fistps
xor
ss
dec
push
inc
lds
xor
std
cmp
stos
push
out
mov
and
push
jmp
iret
leave
stc
jp
or
adc
xchg
iret
cwtl
out
and
add
int3
fwait
adc
and
out
and
daa
shll
cli
sbb
ret
add
push
push
mov
shr
adc
inc
pop
das
lds
inc
or
adc
loopne
cmp
icebp
mov
jmp
repnz
xchg
inc
js
sti
cmp
or
sub
outsb
nop
pop
mov
rorl
sti
mov
lret
cmp
insb
daa
xlat
jge
cwtl
push
jne
xor
imul
das
pop
or
imul
cmp
enter
lret
or
roll
jmp
lahf
add
lock
sbbl
pop
scas
jne
adc
das
add
mov
sbb
and
push
pop
hlt
fldl
xor
popa
cmp
push
pop
or
mov
inc
adc
push
fadds
stos
adc
and
push
mull
dec
pop
lret
outsl
movsl
aad
push
test
or
hlt
ret
push
add
jne
xlat
xor
pushf
add
push
in
sub
xchg
cld
lahf
cwtl
jecxz
dec
adc
ljmp
loope
jnp
lcall
push
pop
dec
clc
lcall
push
iret
dec
push
sub
ss
or
inc
jnp
xor
pop
cld
fstp
push
cmc
rorl
shlb
xor
jl
pop
je
add
movsl
enter
mov
add
jnp
mov
fsts
and
and
loop
pop
cld
adc
inc
mov
xchg
je
adc
jmp
mov
aaa
dec
imul
and
sbb
je
jge
dec
push
adcb
sub
aad
mov
mov
jmp
pusha
push
and
movb
cmp
and
cmp
sub
add
scas
inc
jmp
mulb
inc
pop
cmpsl
add
sub
imul
dec
mov
jae
jmp
jne
and
cmp
add
xor
shl
add
push
pop
sbb
les
movsb
or
cld
daa
xchg
push
iret
xor
sbb
pusha
or
push
and
jns
sub
adc
jno
fdiv
xor
or
jge
fmuls
cmp
and
test
in
mov
xchg
cmc
or
inc
cld
in
mov
cmp
aam
xchg
dec
jbe
jb
sbb
jp
push
lahf
cltd
stos
push
inc
sub
jle
or
adc
mov
loop
popf
sbb
inc
bound
mov
repz
or
and
sti
cs
dec
lds
adc
mov
cwtl
icebp
xchg
sbb
rcr
lock
xor
and
mov
dec
aaa
adc
mov
aad
push
mov
lock
insb
jecxz
out
fisttps
out
mov
and
gs
mov
mov
adc
shlb
fs
daa
pop
and
movsb
xor
daa
dec
mov
xchg
mov
xor
movl
pop
iret
and
push
in
xchg
mov
mov
icebp
jg
outsb
mov
xor
fistpll
cli
xchg
push
sahf
pop
pop
popa
mov
ret
lahf
aam
push
pop
outsb
vpaddsb
hlt
loope
sub
add
in
scas
pop
mov
cmp
or
test
mov
pop
incl
in
dec
pop
popa
aam
stos
xor
pop
and
or
cmp
orb
jmp
inc
jmp
mov
push
jl
adc
cmp
shl
mov
or
dec
lahf
pop
xchg
loop
mov
imul
mov
fst
lea
sub
mov
add
ret
rolb
test
or
adc
aam
aaa
stc
cmpsl
xor
add
sbb
pop
pop
mov
in
cmp
stc
ds
and
mov
out
movsb
fld
test
push
pop
pop
add
cmc
lahf
pop
jb
js
lahf
je
pop
jmp
xor
popf
test
cmc
push
jp
fcmovne
pop
scas
sub
sbb
leave
insl
js
add
push
xor
adc
mov
jmp
fwait
outsb
mov
fsubr
rorb
xchg
popw
int3
or
sbb
sub
cmpsl
out
pop
xchg
nop
adc
pusha
jle
push
add
lock
in
or
inc
rcrb
mov
push
pop
out
outsb
roll
xchg
and
icebp
test
mov
rcll
jno
daa
mov
push
bound
pop
lods
dec
xchg
push
out
jmp
add
xor
decl
jb
jmp
and
mov
and
pop
add
adc
xchg
pop
push
add
lock
adc
or
fistps
gs
sub
cmp
daa
cmp
ljmp
icebp
jb
push
daa
rorb
dec
dec
rcl
clc
movsb
in
xchg
das
in
aam
in
sahf
cmpsb
lods
pop
pop
scas
or
jne
push
and
inc
dec
aas
and
cmp
rorb
mov
xor
add
clc
pop
push
mov
lods
jmp
mov
lcall
inc
push
negl
lcall
lret
push
add
rolb
or
fwait
add
xchg
mov
xor
mov
aad
sub
insl
xor
adc
addr16
adc
inc
pop
jns
sbb
jmp
lock
pop
add
xor
mov
pop
mov
loope
add
mov
cwtl
neg
ret
add
adc
ja
stc
repnz
andb
shlb
cli
sub
fxch
pop
aad
mov
pop
add
sub
mov
add
and
mov
or
cmp
jmp
push
dec
pop
mov
adc
ja
push
popa
mov
in
sahf
push
xchg
sbb
fbld
sub
and
or
sub
mov
push
cmc
in
sub
jp
add
loop
ss
cmp
cmp
jnp
add
ss
inc
add
in
lahf
dec
add
not
jmp
loop
pop
push
add
ljmp
and
cmp
xor
sub
loope
rcrl
arpl
mov
daa
mov
push
test
pop
jnp
mov
dec
sti
mov
and
inc
lods
push
mov
jmp
xor
int3
out
sbb
jae
push
cmc
movsb
adc
and
cmpb
push
ja
mov
or
adc
imul
jle
and
mov
aam
mov
push
xorl
inc
loop
inc
gs
in
aam
fiaddl
mov
sbb
jmp
in
je
xor
fisttpll
mov
mov
jns
add
jmp
filds
and
repz
fiadds
loop
push
push
adc
fisttpll
subl
sub
adc
dec
lret
stos
adc
ss
and
push
roll
cwtl
out
lahf
cld
jecxz
xchg
xchg
std
push
in
mov
shlb
fildll
push
cmp
fisttpll
or
cmpl
sub
mov
pusha
and
pop
pop
sub
add
stos
cs
cmp
sub
and
and
pop
sbb
mov
and
insb
jnp
sub
insb
mov
sbb
arpl
paddsw
pop
and
xor
movb
stos
jle
push
inc
push
cs
cmp
cmp
adc
push
into
jno
or
bound
mov
clc
loope
mov
adc
stc
out
inc
xor
shl
pop
xchg
xor
add
dec
pop
mov
xlat
sub
neg
enter
dec
xor
sbb
sub
adcl
pop
sub
lock
push
push
mov
aad
pop
inc
xor
movsb
xor
mov
pop
mov
add
mov
fcoms
push
lret
pop
cmc
pushf
inc
rol
add
loope
pop
mov
fisubrl
out
cld
jg
in
loope
sbb
adc
frstor
add
test
scas
jecxz
ret
push
mov
gs
scas
sbb
sub
cmp
testl
imul
push
add
xchg
xchg
dec
jmp
sbb
shlb
or
in
cltd
nop
push
or
push
jns
test
push
stos
mov
rcrb
jecxz
lret
shr
jg
pushf
jo
inc
cld
aad
outsb
iret
dec
idivb
dec
adc
add
out
into
fcomps
fdivrs
enter
dec
es
pusha
mov
mov
pop
ds
or
dec
inc
cmp
jg
dec
test
cmp
jp
pop
add
adc
push
cmp
lds
inc
pop
push
push
cld
push
mov
pop
push
pop
into
in
dec
out
and
pop
adc
inc
add
imul
add
sbb
jmp
adcl
sub
xor
loop
test
cwtl
stos
cmp
call
dec
sti
les
jmp
enter
jb
jl
sub
or
jmp
rorl
push
and
lret
xor
ljmp
in
adcb
fisubrs
mov
or
push
xor
dec
xchg
imul
es
sub
stos
jne
mov
push
jmp
pop
mov
pop
xlat
jp
push
dec
movsl
outsb
mov
dec
in
xchg
loopne
inc
sbb
jl
icebp
adc
xor
out
loopne
mov
hlt
addr16
aaa
popa
les
cld
stos
xchg
fnstsw
xchg
or
rorl
lds
sub
and
pop
dec
scas
adc
mov
shrb
xchg
dec
mov
add
cltd
xlat
lret
out
xchg
es
adc
aaa
aas
cld
enter
push
xorl
dec
clc
add
clc
mov
jge
shr
add
aam
mov
jecxz
mov
pop
int3
out
mov
test
pop
jl
xor
ret
or
loop
lret
test
xor
mov
in
sub
imul
out
lret
sub
xchg
addb
neg
mov
mov
push
and
xorl
mov
add
jno
enter
pop
icebp
mov
sbb
push
add
jnp
sbb
or
push
push
orl
inc
rolb
sub
frstor
and
pop
in
xchg
cmp
fwait
outsl
adc
push
stos
and
and
pusha
or
lods
out
or
adc
dec
not
cmpsb
adc
scas
dec
add
pop
sub
shl
or
push
inc
lret
xchg
xchg
pop
psllw
mov
dec
pop
not
push
mov
test
add
lds
fsubr
std
dec
mov
cs
add
je
bound
stos
xor
pop
push
add
test
add
gs
mov
xor
add
cli
loopne
int3
iret
bnd
js
xor
sub
sub
pop
jmp
or
mov
and
fnstcw
jb
inc
pop
add
shl
mov
aad
fiadds
and
iret
imul
jbe
roll
iret
mov
in
orl
push
mov
dec
adc
cmc
pop
and
adc
sbb
stc
scas
leave
ja
insb
jl
les
scas
cmp
mov
scas
jb
xchg
test
das
decl
mov
mov
or
lcall
jecxz
or
jecxz
dec
in
subb
jno
aas
push
push
cwtl
orb
ja
es
add
mov
sarb
pop
mov
mov
add
aas
loope
pop
mov
dec
cmp
mov
xchg
add
fadds
outsl
pop
mov
clc
pop
add
mov
sub
cmpb
dec
adc
lods
aas
jecxz
mov
mov
pop
das
in
pushf
mov
adc
out
das
push
jmp
rorl
mov
sub
es
data16
mov
pop
daa
xchg
dec
or
in
push
les
or
xchg
fs
ret
mov
daa
insl
adc
sub
lahf
jmp
stos
jge
inc
pop
jns
inc
mov
dec
jl
cwtl
adc
jl
push
nop
or
xchg
cmp
mov
sub
cmp
mov
daa
mov
pop
les
mov
jp
jmp
pop
mov
or
cmp
hlt
pop
jns
mov
add
mov
or
push
cmpsb
pop
sub
add
addr16
mov
dec
or
fadds
pop
adc
pop
add
pop
shr
xchg
ja
jl
mov
cld
xchg
pop
xchg
pushfw
add
push
mov
jmp
jno
xor
pop
pop
imul
push
push
divb
dec
ret
mov
jb
and
pop
mov
inc
mov
jmp
fwait
xchg
add
push
push
out
xchg
xorl
or
sub
fiadds
mov
cmp
loop
int
jmp
or
mov
sbb
jae
inc
mov
adc
xlat
setge
js
push
or
lds
sti
cmp
mov
jl
das
and
push
mov
xor
or
jmp
out
daa
add
sbb
or
inc
insl
ja
sub
stos
cmp
sbb
popa
xchg
ljmp
addb
hlt
daa
add
fistps
inc
or
imulb
push
jle
or
adc
ja
lret
pop
ret
sub
sbb
outsl
push
xchg
mov
adc
orl
xchg
or
scas
add
jecxz
sub
nop
jns
ss
push
setb
dec
and
in
mov
sub
pusha
jne
sub
add
mov
cmp
sub
jne
call
mov
or
push
add
mov
mov
aas
out
repnz
fdivrl
push
jns
ret
int3
adc
and
test
push
ficoms
jo
inc
xor
aad
add
adcb
rcrb
jecxz
pop
int3
lds
loopne
lock
jmp
mov
sub
mov
jnp
pop
int
aam
pop
not
cmp
xchg
or
pop
out
push
xor
pop
jmp
jle
adc
jle
sbb
push
repnz
test
push
mov
jle
popa
mov
gs
mov
and
shlb
xor
bound
into
or
push
xor
push
mov
fiadds
sarb
push
pop
nop
stos
sahf
gs
xlat
sub
in
ljmp
push
daa
dec
and
dec
add
adc
rcrl
mov
sub
stos
mov
xlat
movsb
mov
xchg
or
int3
inc
jp
pop
push
test
nop
cmpsb
add
jg
jl
add
mov
imul
pop
push
adc
push
insb
inc
shrb
sahf
jmp
xchg
and
shll
jmp
adc
and
fnstcw
cmp
push
ds
dec
adc
inc
test
call
push
cmp
jp
pop
dec
and
xchg
pop
sub
cmp
lods
fsubl
jecxz
and
cmpsl
adc
test
adc
mov
add
and
ds
adc
mov
adc
popa
pop
or
test
add
in
mov
aad
loop
xchg
inc
ret
or
cwtl
jg
mov
dec
sub
sub
daa
add
adc
mov
jb
pusha
jmp
lods
add
jo
cld
lret
popf
jmp
mul
out
cmp
sbb
popl
dec
iret
mov
stos
pop
psrld
push
popa
rolb
mov
push
mov
push
stos
sub
es
es
mov
mov
cmp
adc
stos
mov
pop
mov
or
bound
and
cld
pop
dec
scas
fwait
mov
fimuls
fs
add
xchg
and
repnz
aas
daa
pop
jae
fadds
repnz
or
cmp
aam
inc
xor
add
push
fcompl
pop
pop
mov
pop
push
adc
and
popf
lods
push
daa
stc
add
add
lret
in
paddsw
xchg
xchg
cli
mov
movsb
sub
cld
add
jb
push
shrl
and
jnp
insb
or
add
pop
push
or
jle
mov
adc
pop
loopne
sub
mov
xchg
cmp
daa
pop
in
xchg
sub
or
psllq
scas
pop
pop
push
add
mov
add
push
sub
shrb
add
jmp
sti
les
lods
push
out
mov
loope
nop
je
xchg
dec
mov
adc
imul
pop
daa
movsl
lock
in
mov
out
mov
jb
or
or
push
inc
add
iret
pop
ss
push
inc
jl
stos
adc
xor
adc
xlat
stos
mov
push
jnp
fistpl
sbb
pop
inc
lds
orb
jmp
loopne
icebp
rclb
lcall
notl
pop
xchg
enter
mov
push
mov
stos
rcll
ss
adc
fdiv
push
cltd
int3
out
ss
cmp
mov
inc
je
out
shl
or
sub
sahf
xor
pop
pop
fisttps
cmc
or
jne
mov
outsb
and
lock
lcall
shll
sbb
scas
pop
repnz
adc
dec
adc
and
xor
lods
movups
add
sbb
pop
pminsw
lods
xor
les
push
xor
jne
jge
dec
add
hlt
mov
or
icebp
jge
ret
adc
js
movsl
inc
jle
call
popa
dec
aad
test
jg
pop
adc
clc
jb
push
stos
or
mov
mov
mov
xchg
cld
outsl
mov
jno
sarb
add
clc
into
pop
inc
mov
shl
or
jmp
pop
push
mov
sub
shlb
lock
xchg
inc
fistl
cmpsl
mov
jbe
inc
dec
lea
in
mov
das
les
test
sbb
xor
xorb
sbb
imul
pop
not
jmp
cwtl
or
repz
push
mov
mov
das
mov
or
addb
jb
dec
lock
imul
sbb
or
int
sbb
repz
jmp
js
xchg
cmc
or
imul
cld
inc
cmpsl
rorb
imull
push
pop
mov
xor
mov
jmp
addr16
push
inc
lahf
mov
and
outsb
mov
aas
cmp
or
cmc
pop
and
shll
push
push
inc
push
mov
jge
xchg
sbb
push
shrl
jmp
mov
cwtl
cld
fs
sbb
and
pop
inc
sub
call
adc
xorb
dec
pop
cli
sarb
cmp
sarb
cmp
mov
add
jp
xor
lock
adc
pop
incb
pusha
jmp
aam
sub
sub
shl
mov
andb
fimuls
jmp
xor
jecxz,pt
xchg
mov
mov
mov
or
push
fs
add
cld
add
mov
testl
sub
add
insb
sub
push
or
cmp
movsl
add
ret
imul
sub
pop
cld
enter
imul
dec
or
dec
dec
bound
pop
dec
lret
adc
loopne
mov
jle
lods
add
sub
sbb
push
sti
xor
pop
mov
xchg
sub
cmc
jge
loop
test
clc
mov
sub
pop
popl
sbb
mov
mov
jmp
dec
shl
in
sahf
or
pop
add
xor
addr16
sub
loop
faddl
mov
or
pop
shr
mov
les
pushf
push
je
xchg
jmp
imul
pop
sub
stos
or
and
jne
push
jl
push
push
pushf
mov
or
and
lods
push
pop
jae
jp
push
pop
insb
adc
fsubl
mov
fsubr
and
jmp
lods
lock
pop
fsubrl
fidivl
jg
scas
pop
push
push
jge
jl
mov
push
addb
popa
jne
xor
idivl
add
pop
std
push
push
adc
js
push
add
mov
es
pop
js
xor
stc
and
shl
pop
js
ret
or
aas
jmp
or
mov
sbb
mov
popa
and
jbe,pn
push
add
sbb
adc
dec
inc
stos
and
inc
xor
int
sub
add
and
push
jmp
jo
pusha
dec
xor
arpl
pop
mov
jne
and
add
adc
rcrb
push
andb
mov
xor
jp
out
hlt
jle
scas
adc
cwtl
stos
add
xor
or
mov
loopne
push
dec
pop
aas
andb
pop
and
or
and
rolb
mov
leave
ret
sub
mov
sbbl
int
jle
sti
popf
jbe
add
out
xor
or
dec
push
insb
adc
sbb
lods
inc
cld
lods
jmp
dec
jmp
scas
cmp
jmp
cmpsb
pop
enter
leave
mov
fs
loopne
or
lds
movsl
jne
mov
push
pop
pop
pop
mov
xchg
bound
jmp
clc
inc
xor
mull
icebp
pop
test
pushf
mov
jecxz
nop
sub
push
mov
test
push
imul
fdivl
push
out
sub
movsb
xor
fmuls
add
shr
push
testb
lds
ljmp
add
outsl
orl
jae
pop
jne
push
sbb
jmp
add
hlt
mov
cli
add
dec
daa
or
add
pop
cmpsl
jnp
addb
fnstcw
and
dec
pop
cld
out
sub
adc
sti
sbb
popf
nop
mov
push
das
dec
cli
dec
push
sti
adc
pop
sub
imul
bound
or
adc
inc
or
incl
imul
push
lahf
mov
cmp
jno
dec
dec
add
push
mov
cmpsb
pop
xchg
mov
insl
out
pop
js
cwtl
lds
xor
das
cld
stos
mov
or
mov
inc
lahf
ljmp
ja
stos
test
sbb
js
cmp
loope
inc
cs
pop
xor
and
add
dec
mov
xor
hlt
add
jmp
xlat
mov
cmp
out
mov
sub
pusha
dec
das
fisttps
mov
xor
xchg
stos
mov
mov
push
mov
mov
test
stos
mov
cmpsb
das
repnz
sub
in
inc
test
clc
outsb
dec
sub
add
adc
or
jns
mov
icebp
fcomps
fsubl
sbb
push
insb
in
shll
test
xchg
leave
add
std
pop
jnp
in
or
out
test
mov
pusha
lods
push
andl
adc
outsl
addb
enter
push
shlb
jp
and
sub
lods
call
sti
aaa
add
lret
in
fsts
ret
and
lret
repz
jmp
imul
push
pop
fisttps
push
int3
je
adc
andl
xchg
cmpsb
mov
loope
push
pusha
outsl
aam
sbb
jno
jmp
test
and
int
pop
add
push
mov
jmp
test
pop
adc
xchg
pop
mov
jmp
push
fsubp
pop
sub
inc
cmc
outsb
daa
test
mov
and
test
jmp
mov
push
test
add
mov
addl
jp
aad
add
cmc
sbb
jmp
loope
jbe
paddusb
push
mov
jnp
addb
mov
fidivrs
addl
dec
or
jp
jo
pop
xor
test
ret
jmp
pop
addr16
xchg
in
cmp
add
rolb
push
scas
call
ficoml
push
sub
nop
inc
fsubrl
pop
xchg
sbb
push
adc
std
daa
pop
jne
inc
xor
call
lret
das
add
sub
scas
sbb
xchg
mov
out
cmpsl
xchg
call
dec
arpl
push
add
jmp
jo
lods
mov
neg
push
mov
jmp
aas
sub
inc
outsl
add
rcr
pop
mul
xchg
mov
divl
push
mov
lahf
cld
fldt
movsl
adc
add
cltd
in
test
xchg
sbb
or
xchg
or
mov
scas
pop
pop
push
dec
in
sub
xor
enter
test
pop
neg
xchg
hlt
cmpsb
mov
daa
pop
xor
sbbl
push
and
rclb
ljmp
push
testl
add
mov
popa
push
push
mov
sbb
add
outsb
add
nop
pop
fwait
lret
clc
inc
mov
les
mov
insl
idivl
xor
dec
dec
fbstp
adc
cld
push
mov
je
jp
js
cmp
in
mov
push
pop
adc
adcb
dec
adc
xor
rclb
out
pop
sbb
aas
loope
adc
jg
mov
mov
insb
mov
mov
or
je
pop
jge
adc
cmc
push
inc
xchg
sbb
loope
ja
enter
adc
dec
cmp
js
add
or
sbb
xor
or
outsl
jl
inc
jg
fnstenv
add
pop
xchg
push
inc
mov
movsl
ja
lods
cmp
sbb
inc
xor
cld
mov
or
pop
clc
and
push
mov
aad
mov
xchg
push
stos
push
in
out
push
outsb
sub
jecxz
mov
jmp
mov
cmpb
out
jno
push
pop
ret
ja
dec
into
adc
inc
pop
pop
inc
icebp
adc
test
inc
repz
ror
push
inc
cmp
mov
add
iret
jmp
leave
pop
loopne
xor
in
or
and
loopne
pinsrw
mov
mov
mov
mov
aam
orb
mov
dec
sbb
sbb
jno
sub
jmp
mov
decl
adc
and
adc
jo
add
stos
call
das
scas
sub
scas
inc
mov
out
or
mov
cmpsl
push
add
mov
jne
stc
test
fs
rolb
xchg
push
push
push
pop
ljmp
sub
not
or
clc
pop
and
sbb
mov
and
mov
lcall
mov
ds
addb
mov
mov
pop
cld
pop
xchg
sub
push
xchg
and
sbb
pop
adc
mov
dec
and
insb
add
and
and
inc
clc
inc
int
popf
icebp
push
popa
div
push
xor
lret
xchg
xchg
fisttpll
sti
fs
sbbl
sub
adc
das
in
mov
pop
mov
addl
in
pusha
dec
leave
pop
or
xor
dec
outsl
jmp
xchg
dec
js
push
xor
ret
jno
adc
inc
dec
push
lods
add
pop
push
movb
pusha
out
push
jmp
sub
jg
and
push
sub
into
jns
add
dec
repnz
jmp
mov
insl
push
push
mov
loop
fsubrs
mov
xchg
test
mov
testl
xchg
ljmp
mov
stos
js
dec
cs
mov
stc
inc
js
mov
jnp
sub
mov
mov
rol
aam
push
jbe
add
lcall
repz
in
or
inc
leave
out
cmp
push
mov
or
add
add
pop
dec
mov
imul
jbe
adc
push
xchg
pop
add
add
pop
aas
sub
pop
jmp
lods
xor
mov
xchg
pop
jnp
dec
testl
inc
js
add
cmpsb
add
sbb
inc
mov
add
inc
bound
xchg
sub
push
je
fs
cmp
cmp
and
xor
lods
mov
out
test
les
cld
pop
add
adcb
cwtl
pop
mov
scas
add
inc
add
add
push
ljmp
add
sub
add
not
cmpsb
push
inc
in
out
cltd
clc
xor
sub
pop
cwtl
xchg
int
jg
mov
push
in
hlt
movsl
divb
jns
mov
add
sub
loopne
sbb
ss
add
or
aaa
jne
ret
xchg
dec
push
in
adc
pop
mov
inc
and
push
inc
jmp
push
pop
add
das
and
fildll
adcb
icebp
add
xchg
push
lahf
imul
loop
inc
fsub
stc
sub
inc
pop
pop
out
and
pop
sub
jo
popf
push
mov
cmp
inc
jmp
inc
push
mov
xchg
sub
dec
decb
ret
out
pop
mov
loope
jg
insb
jg
ja
jmp
or
cmp
andl
or
pop
das
xchg
or
popf
sub
and
pop
and
std
shll
ret
add
fadd
cld
pop
dec
mov
sbbl
add
rorb
inc
xchg
cld
mov
fiadds
lahf
push
dec
lea
pop
push
mov
mov
mov
and
xchg
cld
sbb
arpl
out
mov
or
xor
ret
into
clc
push
sub
jae
enter
add
push
or
add
loopne
loop
and
mull
inc
rcrb
lret
adc
lret
pop
jns
daa
pop
mov
mov
inc
xor
mov
pop
popf
add
and
push
push
and
push
out
sbb
jg
pop
out
or
push
mov
or
pop
cld
sbb
dec
clc
inc
dec
jge
mov
sti
or
loop
movsb
add
xor
int3
xchg
out
or
das
pusha
xchg
xchg
fstl
or
push
sub
cmp
jmp
leave
and
std
mov
jmp
adc
dec
add
nop
jnp
cmc
rcrl
int3
popa
xchg
cmp
cmc
sarb
xchg
pop
push
pop
xor
scas
fdiv
sub
and
jmp
in
stc
jbe
out
push
dec
mov
mov
pop
lret
jnp
fisubl
add
repz
ficomps
and
pop
sbb
pop
into
jp
loopne
clc
jb
adc
adc
xorl
xchg
pop
stos
sub
idivl
cwtl
sbb
xchg
cmp
adc
inc
xor
into
sbb
repz
cli
dec
xchg
popl
stos
mov
jl
and
pop
sbb
out
ret
mov
or
sbbb
cmp
ljmp
lahf
dec
pop
dec
sbbl
sub
dec
or
shll
imul
mov
loopne
push
nop
jmp
nop
push
ret
and
xchg
fsubl
adc
cmp
cmc
mov
int3
mov
pop
push
loope
rclb
dec
fbld
lret
dec
repz
jnp
jne
enter
sub
jle
add
push
jmp
icebp
adc
lret
aam
aam
test
jecxz
dec
adc
cmp
pop
or
xchg
rclb
out
mov
popf
std
roll
jle
push
cmp
not
andl
das
mov
jnp
jbe
jo
push
or
les
xlat
or
hlt
ljmp
fistps
lahf
sti
jne
sahf
dec
and
or
cmp
mov
mov
xlat
dec
inc
mov
es
jmp
int
xor
pop
mov
imulb
push
xor
jmp
dec
push
out
jmp
popa
incl
jno
loopne,pt
xchg
in
cmp
sub
shlb
cmp
aad
out
fldt
pusha
aad
scas
lock
cmp
lock
or
inc
push
adc
push
jmp
int3
or
das
jns
aas
data16
jp
dec
inc
push
stos
cwtl
cs
mov
loopne
negl
push
cmp
call
mov
push
jne
inc
xor
and
fbld
xchg
pop
jmp
inc
shl
mov
ret
std
push
or
adc
cltd
fstl
ret
pop
jmp
sbb
add
push
xor
icebp
mov
addb
xchg
adc
movsl
and
popa
mov
pop
push
lods
inc
mov
std
add
das
repz
insl
mov
jl
or
jbe
faddp
mov
add
cmp
test
xor
and
rolb
adc
loope
cmp
pop
pop
lods
das
push
jmp
adc
pop
das
out
repnz
movsb
orl
push
mov
inc
or
dec
fs
sbb
xchg
inc
mov
mov
mov
jg
cltd
mov
mov
rcll
mov
shlb
sbbb
push
mov
sub
aas
roll
test
cmp
inc
arpl
jmp
fsubr
sti
gs
and
imul
cmp
ljmp
push
ret
inc
xchg
leave
repz
push
scas
pusha
push
es
jle
mov
lar
pop
jno
repnz
xlat
add
sub
inc
add
dec
je
or
fdiv
pop
adc
add
aad
or
les
jp
adc
or
push
daa
xor
or
sub
test
inc
aad
call
add
mov
jmp
std
jmp
xchg
jno
cmp
mov
adc
push
in
pop
pop
cmp
mov
inc
std
cli
in
and
sub
insl
loope
pop
notl
cltd
fists
push
push
or
lock
dec
mov
adcb
cmp
mov
arpl
shl
adcl
mov
and
sub
mov
and
adc
push
sbb
push
pop
lahf
inc
stc
insb
mov
cmpl
or
add
jne
or
add
pop
repnz
shll
stos
repz
and
pop
aam
xchg
movb
dec
mov
imul
lock
mov
out
es
sub
jl
push
ret
add
and
pop
cmp
jo
add
push
jmp
adc
dec
incw
nop
jmp
add
fidivs
clc
test
push
dec
xor
sub
nop
leave
fs
xchg
stos
adc
clc
cmp
or
dec
mov
or
orl
imul
push
push
in
cs
sbb
cmpsb
popa
jns
sub
int3
jmp
dec
inc
sbb
adc
dec
adcb
idivl
das
push
rorb
push
push
or
adc
add
mov
mov
xchg
scas
jecxz
pop
outsb
pop
pop
js
add
inc
push
xchg
sub
sub
inc
sbb
jg
ror
cmp
leave
cli
in
in
add
shr
js
jnp
push
cli
pop
sub
dec
test
or
rcll
and
mov
jae
shlb
mov
mov
nop
gs
in
mov
js
add
shr
roll
jmp
mov
in
and
shl
fcmovne
jle
sub
jmp
sub
lret
jl
sub
sbb
iret
or
sub
or
movsb
popa
xchg
imul
dec
push
adc
add
pusha
cmp
mov
pop
jmp
pop
add
or
mov
push
int3
imul
pop
mov
mov
xor
add
sti
push
sub
pop
lds
or
repz
into
stos
pop
sub
cmp
inc
mov
and
sub
mov
add
inc
pushf
sub
pop
out
jnp
pop
jge
fsubrl
push
add
pop
pop
pmulhw
je
fmuls
sbb
or
stos
pop
jmp
call
xor
sti
insb
adc
add
lret
das
jmp
stos
gs
xor
or
xchg
fistpl
push
push
mov
push
js
jle
mov
mov
ffreep
out
jmp
in
xor
pop
push
mov
icebp
pop
test
ret
addb
push
icebp
pop
shl
repnz
pop
movsb
add
push
mov
jl
filds
push
jmp
jne
pop
pop
call
lea
dec
mov
xchg
or
add
fistl
pop
or
sbb
pop
xchg
jno
push
in
cmp
sub
adc
xor
inc
push
in
and
gs
push
mov
jmp
insb
xor
fucomp
add
xor
fisttps
jmp
xchg
add
sbb
jb
mov
inc
out
and
add
cmp
jmp
hlt
sub
pop
lea
xor
fistl
stos
dec
pushl
jmp
in
ss
sub
or
jmp
pop
in
mov
das
and
dec
mov
mov
test
push
mov
mov
sub
outsb
test
cwtl
adc
jmp
push
adc
les
orl
dec
push
rcrl
and
mov
lock
lods
dec
sub
cmc
jno
jno
imul
scas
cwtl
leave
lahf
jl
mov
inc
push
push
push
sahf
jle
insb
jmp
add
push
mov
cli
add
neg
les
cld
pop
push
and
jl
inc
add
sub
je
jl
or
cmc
pop
cmp
dec
addr16
icebp
andb
mov
cltd
xor
clc
pop
push
out
shr
test
and
sarb
mov
adc
push
bound
imull
repz
pop
mov
je
mov
ds
les
add
mov
notb
aad
loop
mov
lds
mov
imul
add
add
in
loopne
jle
and
and
mov
or
xor
push
or
adc
aam
sub
das
sbb
cmp
int3
xchg
dec
pop
lahf
mov
ds
push
push
jmp
lret
ud2
or
mov
mov
in
pop
adc
pop
aam
adc
mov
jnp
scas
iret
jns
sbbl
jne
add
inc
mov
ds
or
jmp
das
fmull
inc
jg
jns
dec
xchg
out
sub
addr16
imul
int
cld
mov
mov
or
xor
jecxz
fwait
cmp
push
push
in
jp
or
call
and
pop
dec
jecxz
mov
push
mov
sbb
mov
lock
cmp
aaa
das
subl
or
pop
push
mov
cmp
nop
adc
sbb
fdivr
pop
outsl
mov
jmp
push
push
add
add
add
and
aam
jmp
repz
pusha
mov
jbe
pop
mov
cwtl
daa
mov
push
pop
mov
xor
fimuls
test
cli
xchg
sub
dec
dec
ljmp
xchg
sbb
sbb
mov
ja
cmp
inc
lods
mov
dec
adc
out
jle
ret
nop
lods
cmp
popa
dec
mov
push
or
adc
fcmovnb
iret
pop
sub
sub
push
add
xor
jge
fs
imul
mov
out
or
add
ds
aad
rol
push
jmp
add
bound
sub
mov
pop
jmp
sub
mov
addl
xor
sbb
dec
jmp
test
imul
pop
int
xor
xchg
inc
xchg
mov
jle
imull
test
and
push
ljmp
xor
lahf
je
fcoms
clc
lcall
cld
pop
addr16
sbb
loope
test
xor
outsl
or
dec
faddl
js
ja
pop
test
in
loop
repz
jl
cmp
aad
or
pop
in
dec
ljmp
adc
push
pop
stos
out
cmp
enter
cmp
or
ja
and
mov
mov
shr
out
mov
sbb
je
push
push
loope
inc
aam
push
lahf
rorl
loop
cli
or
mov
es
adc
mov
jbe
dec
in
idivl
ret
adc
and
cmp
rclb
jl
out
mov
xor
and
bound
test
test
mov
jmp
shr
jb
and
push
xchg
pop
add
pop
add
cltd
lahf
seto
fucom
jmp
xchg
into
adc
insb
xchg
add
divb
and
decb
push
xchg
je
push
xlat
jmp
jg
jmp
das
jne
lret
and
xchg
lods
push
and
sbbl
or
jecxz
dec
inc
push
xorb
jo
mov
lahf
popf
out
push
push
jmp
daa
xor
mov
sub
inc
in
repnz
xchg
stc
lret
orl
aas
loopne
iret
adc
inc
call
int
xor
push
xor
push
add
dec
inc
loopne
mov
scas
lock
xchg
lock
pop
or
ret
sbb
shlb
nop
test
and
push
psubb
push
outsb
mov
mov
mov
enter
aad
dec
sub
push
stos
dec
loop
js
cmp
cmp
test
mov
inc
shl
daa
cmpsl
lock
out
mov
into
fldl
cmp
xchg
cld
and
adc
scas
inc
xor
jne
fldcw
mov
outsl
pop
cli
lret
popf
enter
adcb
push
mov
push
dec
jmp
sub
int
sti
pop
xchg
das
ficompl
push
mov
push
sub
adc
call
inc
int
stc
adc
pop
test
dec
ljmp
or
jmp
push
iret
add
cmpsb
jno
push
addr16
jmp
mov
or
add
pop
pop
jns
dec
fnstcw
xchg
mov
jno
scas
mov
imul
loopne
stos
pop
pop
sub
sub
popf
mov
inc
fbstp
jl
or
push
cmp
adc
pop
loope
repnz
jbe
add
imul
daa
lock
jns
pop
or
cltd
jl
and
subb
pop
and
jb
add
sub
adc
nop
add
cltd
outsb
inc
push
push
add
or
pop
jg
sub
xchg
loopne
ljmp
push
leave
jecxz
fldcw
pusha
aaa
and
lcall
repnz
dec
iret
jo
repnz
les
sahf
mov
jge
sub
adc
in
das
sti
negl
sbb
cwtl
pop
mov
sbb
add
iret
int3
in
mov
and
mov
mov
xlat
jle
dec
pop
mov
mov
movsb
mov
fildl
jnp
sarl
scas
adc
jb
pop
mov
unpcklps
test
jp
ret
orl
mov
xchg
stc
inc
mov
in
cmp
repnz
test
xlat
sub
daa
push
addr16
jmp
xlat
push
jne
sbb
call
pushf
xchg
dec
mov
dec
rclb
movsl
cwtl
test
or
xor
sub
mov
sbb
outsl
xor
cmp
daa
pusha
fnstsw
daa
movsb
lods
sbb
jb
std
neg
aam
fmuls
inc
mov
outsl
cmp
mov
sbb
push
in
jmp
lea
movsb
test
lods
and
mov
xchg
jmp
jne
push
lock
mov
push
push
mov
sub
jmp
pushf
iret
add
mov
adc
js
orb
push
mov
xchg
push
pop
out
or
and
das
pop
scas
sbbb
or
mov
sub
push
jmp
ret
and
outsl
mov
cmc
in
dec
int
adc
loop
sbb
stos
repnz
outsb
test
mov
mov
mov
cmp
jge
out
dec
add
push
cli
jecxz
mov
fsubr
push
pop
ret
sub
add
jmp
mov
jecxz
aas
adc
and
dec
add
nop
shrb
mov
sub
hlt
imul
or
adc
into
push
shlb
call
dec
loopne
stos
or
dec
sub
andb
pop
daa
cmpsl
fisubs
xchg
or
in
cwtl
pop
mov
mov
mov
out
rolb
lret
mov
sarb
fimuls
mov
aas
push
ja
inc
imul
xor
add
stos
and
sub
lock
jmp
rcll
push
scas
sub
pusha
cmp
daa
jmp
out
adc
insl
das
std
add
add
ja
pop
and
movsb
sahf
mov
in
mov
cld
add
ret
add
push
int
mov
push
cmp
insl
xor
or
mov
or
cli
adc
add
fldcw
popa
inc
icebp
add
sub
add
mov
sub
fiadds
mov
aam
pop
bswap
in
sbb
lock
push
cmp
pop
ffreep
lret
cmp
cmp
sti
add
mov
push
add
xor
push
mov
dec
add
push
jo
push
aam
test
dec
mov
push
leave
cwtl
cs
push
pop
dec
mov
push
pop
push
loopne
pop
mov
loope
test
daa
sub
dec
jne
jg
imul
inc
xchg
dec
pop
nop
rclb
mov
and
sub
xor
pop
add
pop
xor
out
mul
ja
mov
add
popa
sub
out
push
jmp
sbb
mov
shlb
dec
gs
dec
scas
mov
push
enter
incl
inc
push
or
push
shl
inc
inc
ret
adc
push
imul
imul
pop
mov
sub
lcall
add
adc
je
or
inc
add
loop,pt
aad
add
in
imul
lock
jl
push
repnz
clc
sbb
sub
mov
mov
inc
or
orb
cli
pop
adc
jmp
add
out
cmp
mov
xchg
aas
shr
or
outsl
lods
pop
xchg
faddl
pop
mov
stos
out
sbb
fstpt
dec
jecxz
mov
nop
ss
imul
mov
adc
movsl
addr16
ja
test
scas
das
fxch
xchg
adc
mov
pop
push
add
mov
addb
add
sbb
sub
pop
pop
mov
outsl
mov
in
inc
es
cli
xor
notl
mov
push
sub
dec
cmp
xchg
adc
pop
dec
xchg
add
pop
scas
dec
shll
pop
push
mov
cld
sub
leave
sbb
mov
out
adc
test
cld
push
sti
addb
push
inc
aaa
sub
divps
cmp
mov
push
pusha
lods
xchg
daa
pop
jno
mov
and
inc
sbb
inc
jg
push
sbb
shr
adc
add
jmp
mov
sub
adc
sti
push
daa
mov
das
and
and
das
shr
pop
adc
sub
pop
not
xchg
fisubrs
and
cwtl
push
dec
std
scas
jo
push
std
cmc
sbbb
js
punpckhdq
push
popa
popf
cs
mov
clc
mov
rorb
xlat
pop
aad
xchg
jl
shrd
xor
mov
sub
pop
mov
int3
leave
and
cmp
into
negb
scas
bound
jnp
dec
sti
aas
cld
xor
jnp
jle
jp
jecxz
push
popf
cmp
jno
xchg
popa
push
outsl
jno
sub
fistps
push
cmp
jne
and
pop
imul
or
insl
add
mov
xlat
cs
ret
fcoms
adc
adc
sub
aas
cmpsl
arpl
ror
cld
mov
out
fs
xchg
int
cmp
mov
idivb
inc
or
hlt
or
sub
and
mov
and
es
add
in
daa
mov
das
jo
mov
add
popa
mov
fnstcw
and
popf
dec
jno
jo
push
mov
lahf
jmp
push
ljmp
outsl
daa
stos
leave
add
mov
mov
xchg
push
add
push
test
dec
inc
add
push
sbb
imul
and
xor
push
shl
pop
push
mov
and
pop
rcll
fcomi
jno
shll
inc
dec
add
pusha
fldcw
bound
mov
hlt
dec
xchg
arpl
fwait
adc
scas
lcall
daa
ja
jbe
aam
in
mov
adc
int
xor
lcall
sub
adc
out
adc
or
add
dec
xor
mov
push
cli
jmp
negb
mov
push
mov
and
xacquire
mov
les
mov
add
and
outsb
loopne
push
ss
jns
sbb
enter
adc
leave
pop
mov
mov
and
adc
stos
sub
adc
pop
andl
aas
cs
add
loop
mov
mov
adc
push
mov
mov
aas
or
rorl
add
inc
xchg
rclb
adc
push
call
sub
jno
iret
dec
pushf
leave
inc
cmp
fwait
xchg
mov
mov
shll
add
rorl
std
pop
mov
pop
mov
push
and
xchg
xchg
xor
outsb
cmc
popf
jg
insb
sbb
dec
xor
dec
data16
ss
imul
icebp
test
jns
adc
pop
gs
sub
repnz
push
push
fsubr
xchg
fdivrl
push
dec
loope
rolb
mov
dec
clc
push
inc
adc
pop
mov
mov
jb
in
sbbb
push
cmp
enter
mov
ret
rorb
jne
gs
je
adc
push
add
xor
stos
es
xor
out
xchg
fmull
int3
or
mov
out
sub
jmp
add
or
jnp
or
fdiv
mov
bnd
add
movsl
aaa
lock
out
movsb
inc
pop
cmp
and
or
push
or
adc
andl
cmp
add
leave
out
aas
and
jbe
dec
lds
subl
sub
jge
add
mov
in
movaps
adc
das
push
pop
push
xchg
pop
pop
lods
xor
stos
lock
rclb
out
mov
nop
or
cmp
mov
mov
cmp
sub
add
fwait
or
jge
orl
jge
xor
inc
daa
es
pop
xchg
sub
gs
sbbb
adc
fbstp
or
push
sub
scas
pop
call
push
movsl
je
pop
fst
jle
jo
fwait
bound
push
and
dec
cmpsl
stc
xlat
push
pop
or
enter
and
jl
mov
inc
jns
cmpsb
and
push
push
data16
mov
xor
lods
pcmpgtw
push
mov
cmp
sub
imul
xor
push
xor
and
mov
pop
mov
ss
and
or
mov
dec
or
bswap
dec
dec
jmp
out
and
bnd
or
mov
inc
push
ret
les
not
push
push
scas
pop
inc
mov
mov
sbb
loope
rcll
push
xor
and
adc
xchg
sahf
xor
inc
xchg
daa
ja
jnp
jns
push
cmp
or
les
jg,pt
jp
xchg
nop
add
ds
xchg
sbb
mov
fsubs
jg
gs
dec
inc
fimuls
cmp
aad
add
cmp
pop
add
clc
push
repnz
xor
pop
inc
insb
pop
ret
sbb
ljmp
cmp
js
sahf
rorb
sbb
je
push
jmp
out
xchg
fwait
jle
xchg
dec
inc
std
add
mov
pop
cmp
fldenv
push
jl
adc
lods
pop
jb
jmp
push
pop
jg
sbb
addl
push
push
out
inc
sub
pop
xlat
mov
out
xor
sbb
or
or
das
mov
push
ficomps
test
adc
fs
imul
into
sub
dec
push
jmp
cli
shll
xlat
test
pop
stos
test
out
repnz
inc
mov
in
pop
xorb
push
arpl
cmp
push
pop
mov
ret
icebp
call
dec
pop
fsub
fisttpl
pop
mov
jg
xchg
xor
cmp
pop
fiaddl
aas
rorb
jmp
mov
add
or
neg
mov
sub
pop
orb
push
pop
pop
cmp
adc
test
test
jb
push
adc
inc
mov
mov
sarb
fistpll
xor
out
add
pop
xorb
mov
sti
sbb
xchg
aad
ficoms
scas
add
pop
sub
add
rorb
add
outsl
subb
sbb
xor
gs
add
jmp
movsl
sub
or
lods
ret
push
cmp
daa
mov
addb
or
xlat
sub
cmp
or
into
int
cs
sbbl
jmp
outsb
in
dec
push
and
dec
jno
inc
dec
sub
pop
ljmp
add
push
ss
mov
mov
mov
rolb
rolb
mov
pop
in
mov
jno
inc
rorb
inc
or
mov
sub
sub
cmp
push
jge
mov
mov
in
add
sub
adc
sbbb
mul
jl
mov
fs
imul
mov
aad
cmc
pop
mov
add
fsincos
dec
cwtl
pop
loopne
pop
push
push
insb
add
add
movaps
adc
test
int3
add
jg
sub
and
ret
and
movsb
je
out
mov
jo
push
mov
jl
jge
fwait
mov
aas
or
pop
sbb
loope
arpl
adc
cli
fs
and
push
mov
jle
lahf
mov
call
sub
mov
mov
pusha
dec
mov
jns
repz
out
or
negb
stos
push
nop
repz
mov
test
sbb
inc
roll
stos
pop
xchg
scas
or
lcall
jmp
loopne
ss
es
ja
add
or
test
pop
mov
push
push
mov
orb
rorb
scas
inc
xchg
mov
xchg
jg
fucomi
cli
loope
outsl
lock
dec
nop
mov
xchg
jne
add
push
sbb
imul
push
and
mov
jne
add
push
push
mov
mov
xchg
das
call
cmp
add
pop
mov
xor
sub
mov
push
jo
cmpsl
dec
mov
icebp
lret
or
sub
jmp
sub
push
mov
adc
jecxz
xchg
mov
or
jmp
jo
fsubrs
push
inc
in
leave
adc
adc
into
add
scas
mov
inc
or
and
or
pop
xchg
or
jno
inc
mov
mov
out
and
daa
fstl
movsl
pop
shrb
fisttps
push
sub
sub
mov
aad
xor
jmp
pop
and
inc
jg
aad
and
inc
sti
aas
leave
ljmp
lret
cmp
push
popf
es
sbb
xlat
and
adc
int
sub
sub
mov
sub
pop
fildl
or
dec
cmp
adc
js
cli
sub
std
imulb
aaa
jp
or
lahf
dec
repnz
dec
ljmp
xlat
sub
sub
mov
add
jl
sub
sbb
repnz
fcmovu
testb
cmp
cs
pop
pusha
stos
or
push
and
sub
sub
in
jl
and
add
addl
or
sub
ret
push
jbe
xcrypt-ecb
cmpsl
lret
add
enter
mov
lahf
das
das
sub
mov
xchg
dec
sub
nop
adc
mov
ret
lods
notl
push
pop
push
out
or
mov
insl
ret
nop
or
cmp
es
dec
mov
dec
outsl
jecxz
ret
push
nop
xchg
es
adc
cmp
xchg
std
jmp
xchg
ljmp
cmp
loopne
jbe
add
sub
jmp
pop
push
push
pop
aad
push
dec
scas
cmp
nop
dec
pop
mov
pop
push
xchg
jmp
jmp
pop
xchg
or
jl
or
push
andb
adc
push
out
lea
inc
adc
mov
sbb
jge
shll
cmp
bts
aas
xor
dec
testb
fwait
out
imul
call
push
pop
add
jg
das
pop
ds
adc
or
pop
dec
pop
and
sub
sarb
aad
fldl
in
out
push
daa
mov
sti
add
cli
sub
jnp
jmp
xor
sbb
imul
adc
or
sti
cmc
inc
movsb
test
cltd
outsb
icebp
leave
push
or
fists
mov
inc
test
in
add
and
inc
clc
jmp
lds
jmp
lds
repz
and
pop
add
adc
mov
xor
mov
mov
shlb
and
mov
sbb
pop
push
sbb
xor
cs
xor
push
inc
pop
lock
push
jnp
xor
daa
mov
add
in
mov
push
cld
stos
push
cs
add
inc
sbb
inc
sub
ret
jne
xchg
and
jmp
dec
pop
pop
pop
pop
sub
jne
xor
lcall
in
cltd
push
adc
inc
or
push
nop
jns
jmp
inc
push
or
jp
adc
add
repnz
dec
mov
mov
in
pop
sub
and
cmc
repz
add
je
inc
aaa
clc
and
cmp
or
lods
cmc
je
jbe
mov
mov
push
ret
pop
sbb
adc
pop
shl
adc
mov
cmp
sub
mov
mov
cmp
rcr
jle
aam
sti
mov
mov
fmull
out
inc
add
cwtl
adc
hlt
xor
lock
inc
aaa
add
mov
mov
push
cli
cmpb
jae
push
insb
dec
push
add
mov
out
add
repnz
push
ds
lds
inc
in
das
loop
pop
xchg
fisubl
ja
ljmp
jmp
xchg
stos
mov
inc
inc
inc
xor
push
sub
mov
rorl
fildll
imul
lods
in
popf
ja
or
and
pop
andl
in
stos
cwtl
xchg
jge
aas
aaa
and
out
out
es
or
fldcw
in
jno
or
out
push
pop
lcall
push
mov
push
cmp
pop
dec
mov
add
loop
or
les
push
in
mov
lds
or
cmp
push
in
xor
repnz
jno
std
stos
xchg
adc
sbb
add
scas
mov
fnstsw
adc
dec
jns
dec
mov
pop
mov
or
mov
adc
fnstcw
pusha
add
inc
fsubrs
out
mov
adc
ret
sub
mov
out
aas
mov
mov
jne
pop
cwtl
cld
incb
mov
push
pop
push
adc
jmp
loop
test
inc
push
movsl
dec
lea
push
rclb
pop
push
lret
push
cmp
ror
sub
dec
push
sub
mov
lock
testl
loope
sub
das
loope
clc
mov
mov
and
or
jne
icebp
jmp
inc
cmp
fsubp
xor
mov
not
rep
lea
aas
int3
jl
dec
jg
test
lods
leave
pop
das
movsl
lock
mov
and
pushf
add
shl
inc
subb
pop
pop
repnz
or
ds
or
push
xchg
movsl
lods
push
pop
stos
cmp
cmp
stos
xchg
sub
or
sub
pop
push
add
push
jmp
inc
inc
ljmp
lods
cs
dec
mov
stos
dec
out
inc
dec
lods
lds
adc
add
icebp
iret
pop
test
shl
push
push
mov
jne
movsb
pop
rcll
cmp
mov
xchg
add
add
ja
fidivrl
lods
das
cwtl
xor
push
or
inc
out
cmp
bound
adc
loopne
in
add
jo
shlb
xor
cmp
leave
in
sub
mov
jo
cld
mov
out
sti
pop
or
or
cmp
nop
pop
mov
and
sbb
adc
es
lods
in
add
or
out
cmpsl
inc
jmp
push
jge
cltd
es
xor
dec
push
or
add
call
clc
lock
xchg
jmp
or
ja
data16
pop
pop
cmpsb
mov
dec
sbb
lea
inc
rcrl
and
cwtl
test
and
jmp
sbb
jnp
jne
aaa
pop
int3
or
cwtl
sbb
sarl
cli
ds
sahf
adc
push
pop
imul
add
aam
pop
add
xchg
sbb
jne
add
add
addl
push
jae
stc
push
push
mov
lea
sbb
hlt
cmp
stos
push
aas
xchg
add
or
aad
adc
scas
add
ss
lock
or
mov
inc
xchg
adc
ret
addb
inc
mov
mov
xchg
inc
cs
add
int3
mov
fisttpl
dec
and
mov
pop
fs
push
sub
pusha
cmp
andb
mov
push
dec
cmp
xchg
add
in
xchg
test
mov
fiaddl
mov
lds
sbb
movsb
loopne
xchg
int
pop
sbb
test
xor
inc
mov
pop
dec
das
in
lea
jne
dec
lock
stos
push
add
jnp
popa
and
std
add
mov
mov
not
jno
add
jecxz
popa
or
xorb
rcll
testb
add
cmp
sbb
mov
add
mov
ficompl
mov
daa
test
lods
out
add
add
cmc
sti
inc
popa
add
cmp
out
add
mov
dec
push
sar
and
and
nop
out
cltd
cmpsl
in
mov
jge
mov
call
loopne
les
mov
inc
sbbb
add
daa
scas
mov
mov
nop
adc
popf
add
repz
lock
mov
int
fnstsw
loop
adc
xor
add
sbb
in
add
cmpsl
pop
inc
mov
xor
xlat
imul
dec
xor
outsb
bound
sub
mov
xorb
push
add
aam
mov
mov
cs
xchg
aas
and
data16
push
xchg
dec
ss
mov
cmp
in
imull
arpl
iret
ljmp
fcoml
mov
xorb
add
lret
cmp
cmp
jecxz
jne
shll
lea
ret
jge
add
push
and
xor
fiadds
or
adc
out
rolb
xor
dec
cmp
sub
cwtl
test
and
out
add
loope
sub
sahf
in
add
rcrb
inc
mov
cmp
pop
inc
add
imul
test
push
push
add
jle
and
add
or
fildl
test
push
lahf
orb
sbb
sti
out
and
into
add
pop
arpl
mov
sub
fmuls
inc
rclb
jb
mov
lahf
and
in
pushf
mov
add
xor
adc
mov
bound
or
stc
push
cmp
inc
jmp
mov
jae
push
sub
adc
add
es
sub
sub
fdivrs
popf
push
out
test
sub
ret
outsb
add
jnp
push
and
add
push
jne
add
xchg
out
mov
popa
je
in
in
icebp
lret
pop
pop
inc
das
xchg
push
mov
stos
xchg
inc
rclb
rclb
call
rclb
das
out
std
xchg
pop
mov
je
pop
add
fdivrl
add
gs
popa
adc
hlt
clc
mov
sbb
jbe
cmp
add
pop
mov
and
adc
ja
jo
fstl
add
inc
pop
cmpsl
cmp
pop
push
add
testl
addl
test
mov
adc
das
inc
mov
call
popa
cmp
out
inc
sub
sbbl
out
inc
mov
push
jmp
adc
inc
xor
out
stos
push
push
rcrl
adc
push
pop
xor
mov
xchg
mov
cmp
xchg
push
jmp
int
rolb
xor
idiv
repz
cmp
andb
push
adc
dec
add
outsb
les
sarb
ljmp
inc
pop
add
mov
mov
or
xor
orb
in
lock
add
daa
push
push
jmp
hlt
push
lret
push
add
push
adc
pop
enter
cld
addb
sbb
cmpsb
pop
adc
push
xchg
add
in
outsb
sbb
cmp
mov
or
out
enter
jge
push
xor
repnz
or
mov
jle
jne
pop
xchg
mov
cs
lds
jle
rorl
dec
adc
cwtl
test
cwtl
add
jp
xchg
sbb
add
shrb
loopne
xchg
loop
dec
std
sub
ret
xchg
dec
ret
test
into
aaa
out
addr16
not
add
adc
inc
add
lret
int
add
add
jle
enter
xor
ret
cwtl
dec
mov
out
lret
mov
pop
mov
inc
jne
hlt
add
push
mov
adc
loop
rcll
out
add
ds
sbb
inc
jl
xchg
lods
insb
push
or
push
mov
dec
movsb
sub
aaa
mov
inc
cltd
scas
shl
iret
mov
mov
add
aas
sbb
subb
sbb
das
mov
dec
inc
xor
nop
add
aam
stos
scas
adc
add
shlb
pop
dec
sub
fs
imul
inc
lahf
out
mov
add
movl
mov
and
push
into
stos
popf
aaa
jno
add
mov
pop
add
sub
call
cmp
enter
xchg
lods
push
es
adc
pop
add
dec
setle
push
popf
xchg
pop
pop
inc
ja
jle
pop
repz
xchg
imul
cltd
in
rorb
sub
inc
inc
dec
push
add
sbb
adc
sub
addr16
movsb
adc
daa
mov
mov
popf
js
div
push
add
fstps
xchg
sbb
je
sub
lock
out
push
pop
mov
sub
add
js
in
into
adc
sub
fcos
test
sbb
fcoms
fwait
out
add
mov
sub
ljmp
enter
push
inc
add
sbb
in
or
sbb
enter
add
and
in
stos
cmp
or
and
mov
mov
js
mov
dec
sbb
sub
push
cmp
cmpsb
inc
flds
mov
sbb
loopne
movsl
fs
push
movaps
loope
dec
mov
fs
daa
mov
pop
inc
push
outsb
dec
pusha
jb
mov
clc
mov
jnp
jbe
insl
sbb
rclb
cld
movsl
mov
mov
adc
ss
lret
or
xchg
andb
sbb
repnz
inc
cmp
orl
lahf
jnp
dec
insb
jmp
mov
xchg
add
mov
jge
jbe
sub
into
cmpb
cmp
sbb
add
pop
jge
inc
in
mov
add
and
lea
or
add
cmp
mov
test
mov
or
std
hlt
dec
movl
sahf
add
cwtl
jno
or
fcmovu
add
or
or
mov
daa
xchg
cmp
pop
call
add
enter
pop
cmp
or
fs
cld
and
in
mov
pop
jb
jg
add
sbb
mov
add
and
add
fnstcw
shlb
mov
cmpps
adc
or
mov
xchg
cmpb
push
adc
jle
add
data16
aam
roll
icebp
jge
and
testb
es
adc
jle
std
dec
inc
dec
mov
add
pop
hlt
mov
sub
add
cmp
and
dec
adcb
adc
in
add
jle
out
sbb
xchg
stos
pushf
add
adc
pop
and
add
insl
jge
xchg
and
cld
mov
add
js
enter
sbb
adc
lods
add
push
sub
bound
sbb
inc
icebp
insl
sti
addr16
sub
les
or
sbb
xchg
jae
arpl
aas
mov
stos
push
mov
in
or
push
xor
cmp
fs
xor
sbb
nop
or
add
cmp
stos
lahf
xor
xor
push
leave
lds
int
add
es
cmp
dec
mov
inc
popf
inc
aas
movsl
gs
addr16
hlt
es
cmp
lret
dec
pop
add
out
mov
imul
lods
add
ds
pop
pushf
jp
addl
pop
rep
in
add
sti
xchg
pop
fidivrl
and
add
mov
pop
pop
jns
cli
add
and
in
mov
fmulp
pop
add
push
xchg
int3
repnz
add
adc
fimuls
cmpsl
rorl
or
or
pop
and
add
jae
out
out
dec
add
add
mov
cmpl
test
mov
ret
pop
cld
add
push
cmp
dec
add
imul
bound
mov
cld
inc
add
inc
aam
add
add
movsb
into
fs
int
packuswb
je
iret
lret
fadd
mov
jno
inc
nop
loopne
dec
cmp
cs
jne
add
shl
pop
add
insl
sbb
add
mov
into
push
adc
adc
imul
aas
cwtl
sbb
add
adc
xor
push
add
xchg
dec
adc
xor
push
dec
inc
jnp
mov
add
add
es
push
mov
dec
add
and
cmp
jns
pop
aaa
pop
or
rcl
jl
inc
pop
hlt
jecxz
aas
mov
arpl
cld
mov
je
ja
jno
es
xor
sbb
and
mov
out
es
push
push
scas
dec
dec
cmp
pop
xchg
push
jnp
je
add
dec
sbb
je
xchg
pop
in
addr16
cmp
aam
xchg
sbb
js
pop
mov
into
cmp
loop
ret
add
sbb
pop
inc
lret
popa
ds
ss
cwtl
fstl
and
xor
add
xchg
push
jbe
add
lcall
add
xor
scas
jle
sub
out
data16
add
aad
stos
aaa
sahf
add
xchg
popa
push
lahf
mov
mov
decb
add
sbb
inc
inc
ja
movsl
xchg
das
adc
nop
add
mov
xchg
lods
lods
icebp
pusha
mov
add
aas
out
push
fst
cmp
aad
cmp
or
add
jbe
lret
fdivl
nop
call
sbb
loopne
or
in
xchg
rolb
dec
hlt
pushf
outsb
push
adc
add
imul
jmp
jnp
add
jg
cli
movups
ljmp
and
pop
jg
xchg
mov
jns
ror
repz
or
ret
jne
jl
test
add
xor
push
add
popf
js
add
mov
mov
popf
mov
lea
loopne
lods
test
cli
ret
ds
mov
adc
es
scas
and
std
mov
mov
imul
sbb
sub
or
enter
add
pop
or
pop
push
cmc
add
inc
add
sti
inc
cmp
push
ss
add
in
mov
add
xor
insb
add
cmp
bound
mov
stc
mov
mov
xchg
test
sti
xchg
lret
inc
das
pop
lock
es
insl
clc
add
add
xchg
outsl
mov
add
mov
pop
jns
add
and
or
sbb
inc
cmp
test
cmp
insl
add
inc
sub
repz
lods
pusha
adc
jg
sub
leave
mov
xchg
test
loopne
add
mov
xor
mov
fsubrs
add
add
pop
pop
inc
pop
inc
movsb
fs
sbbb
and
xchg
ret
popf
mov
mov
roll
xchg
dec
cwtl
inc
inc
xchg
movsb
cwtl
add
dec
xor
addb
jbe
mov
xor
in
lock
cmp
lret
daa
cmp
add
jnp
add
cld
test
add
ljmp
and
fisubs
rolb
cmp
stc
je
pop
xor
popa
cmp
xor
xrelease
out
sbb
dec
sub
in
add
popa
and
push
adc
add
mov
and
lods
cmp
adc
and
pop
cmp
and
add
push
xor
rcl
mov
and
xor
push
std
jge
mov
sbb
adc
sar
lret
inc
add
pop
mov
aam
ja
add
mov
lret
dec
testb
cli
add
cld
out
ljmp
adc
test
aas
in
lods
pop
add
mov
pop
add
add
sbb
pop
shll
ret
test
mov
push
dec
mov
add
call
imul
pushf
daa
int3
push
add
std
mov
pusha
cmp
add
push
xorb
adc
add
clc
stos
movsb
out
xchg
or
sub
push
cmpsl
loope
fsubl
push
inc
add
adc
sub
outsb
add
add
mov
dec
mov
pop
jg
cltd
rol
lods
adc
add
mov
lock
lods
add
popf
std
mov
add
xor
pop
sub
fstl
bsf
pushf
rcrb
push
js
out
enter
jle
movsl
add
repz
cwtl
repnz
or
jge
nop
and
test
jmp
pop
adc
cli
dec
enter
mov
jmp
add
pop
dec
xchg
lahf
les
clc
add
fwait
mov
fiadds
sub
js
dec
dec
sub
int3
in
cmp
xchg
cmp
into
add
mov
out
push
loop
clc
xchg
cwtl
cmp
leave
and
insb
mov
mov
arpl
cmp
adc
inc
cmp
add
mov
cld
inc
movsb
add
shl
mov
or
es
mov
add
sbb
inc
dec
pusha
daa
xchg
sbb
in
sar
add
xchg
orb
and
std
lcall
push
pop
pop
add
xchg
xchg
add
jo
clc
jg
je
adc
rorb
ret
aam
pop
add
sub
ret
jg
add
rcl
call
sub
add
out
shrb
xchg
pusha
outsb
dec
add
pop
or
jbe
sbb
inc
shl
ljmp
adc
and
cld
xchg
mov
into
ljmp
bound
cmp
inc
lods
xlat
sub
mov
push
push
mov
fstps
scas
hlt
add
jecxz
adc
or
repnz
add
xor
lret
cs
pushf
test
or
pop
sub
inc
and
pop
adc
cs
shrb
and
adc
cmp
or
popa
outsl
cmp
mov
pop
adc
test
sbb
sbb
adc
into
jno
xor
nop
or
dec
dec
fisttpll
scas
xlat
or
dec
cmc
add
inc
inc
push
and
and
add
and
out
ljmp
dec
or
jl
push
daa
mov
adc
or
movsb
pop
mov
fists
sbb
dec
pop
push
push
arpl
add
mov
and
clc
movsl
js
jl
adc
sub
lock
xchg
lods
hlt
das
mov
sbb
js
sub
jecxz
inc
add
movsl
andl
mov
push
enter
add
push
jmp
cmp
xor
dec
repnz
sbbb
in
scas
sbb
add
and
popl
add
and
mov
xor
mov
in
add
or
shrb
add
vmovmskps
mov
lret
push
or
mov
mov
jb
jg
mov
pop
mov
nop
js
xchg
loop
add
xchg
cli
or
out
ljmp
mov
call
adc
fadds
and
stc
es
int
push
xchg
push
lock
sbbb
sti
cld
add
jnp
xor
sbbl
xchg
cmp
test
andl
sbb
repz
push
sbbb
and
pop
lea
jb
adc
cmpsb
xchg
cmc
cld
inc
je
shlb
jae
push
sub
xlat
and
add
xchg
xchg
test
adc
leave
adc
mov
out
shlb
test
das
aad
popa
xor
and
sbb
pop
xor
pusha
sbb
repnz
sbb
out
pop
pop
add
adc
das
xlat
push
fsubrl
push
ljmp
sub
push
xor
xchg
sbb
pop
adcl
loope
inc
cmpsb
mov
mov
pop
mov
pusha
mov
xor
and
jb
add
outsb
xchg
pop
out
cltd
dec
int3
sbb
xor
fsub
jecxz
out
or
xor
fs
in
mov
lea
pop
cmpsl
and
insl
es
sbb
jmp
cld
imul
pushf
jb
popa
shlb
mov
bound
adc
scas
add
fsubl
jns
pop
dec
fs
pushf
and
insl
movsb
xchg
mov
pop
test
sbb
xchg
orb
or
lods
clc
xchg
das
loopne
negl
pop
xor
dec
loop
and
fbstp
xor
test
les
inc
mov
and
in
push
sbb
pop
imul
xlat
or
xchg
dec
inc
fists
loopne
cmp
arpl
lea
push
xchg
mov
repnz
dec
mov
loopne
and
hlt
cmovg
sub
mov
mov
add
sbb
mov
mov
mov
enter
inc
pop
push
mov
add
icebp
mov
pop
outsl
xor
test
or
pop
ds
test
jo
adc
cmpsb
fdivrs
mov
loop
lahf
test
xchg
inc
pop
fisubl
sub
lret
fsubrs
mov
in
push
in
inc
and
sbb
or
or
dec
xchg
adc
cmp
fcmovnb
movsb
inc
mov
or
push
sub
push
push
inc
enter
aaa
pop
push
lea
add
je
popf
adc
int3
cld
lret
sub
inc
jae
sbb
int3
xchg
sbb
add
mov
out
nop
pushf
dec
inc
mov
stos
repnz
fdivrs
call
jns
and
mov
loope
cmp
loope
adc
fwait
adcl
jmp
leave
xor
jge
push
mov
push
push
sub
scas
lret
and
adc
sub
data16
add
cli
in
cmpsb
fsubr
push
pop
sub
xchg
dec
add
and
sub
es
loopne
push
ljmp
andb
dec
jbe
aas
jno
shll
test
pusha
out
lcall
push
nop
jne
test
cmpsl
ret
add
and
xchg
push
call
bound
fsubrs
jle
loopne
cmp
sahf
sarb
loope
icebp
add
push
cmp
in
nop
sbb
stc
sbb
mov
xchg
add
jle
xchg
mov
cmp
xor
mov
add
rcrl
xchg
xor
data16
add
je
jo
or
adc
outsb
clc
aad
ret
add
jl
aam
movsl
or
shll
les
add
aaa
cmpsb
ja
call
push
jns
out
adc
dec
and
jne
jp
clc
int
xor
dec
and
or
sbb
pop
push
sub
js
or
xchg
out
mov
out
ljmp
insb
mov
mov
push
cmp
incl
mov
into
es
jns
add
les
add
je
test
mov
sbb
stc
sarb
mov
sub
js
out
inc
xor
push
in
icebp
cmp
mov
push
sub
xchg
fnstsw
sbb
insl
mov
pop
out
shlb
jp
lds
add
sub
inc
pushf
jl
rorb
loop
mov
push
add
out
sbb
xor
mov
adc
ja
shlb
add
mov
aaa
pop
orl
jl
adc
movsl
out
hlt
mov
dec
lods
add
shll
decl
add
sti
adc
add
lahf
mov
sarb
nop
dec
das
sub
xorb
or
cmpsl
and
test
and
xchg
test
mov
and
insl
xchg
sbbb
adc
jne
or
pop
or
pop
test
and
and
sbb
mov
mov
pop
lret
lods
sub
jo
mov
add
dec
loope
shll
cld
dec
xchg
out
nop
mov
cmp
or
fmull
dec
enter
jno
xchg
add
xchg
sub
in
sti
adc
inc
xorb
insb
jge
xor
and
jge
in
out
outsl
add
pop
add
push
fs
sub
pop
shlb
xchg
cmp
add
mov
add
or
cmpsb
add
int
and
mov
mov
dec
test
push
cmp
xor
sub
sbb
jns
cltd
inc
in
js
dec
in
nop
and
das
mov
add
stc
push
push
cli
js
lods
daa
dec
mov
addr16
imul
dec
into
xor
dec
nop
pop
add
xor
mov
pusha
orl
dec
jmp
arpl
enter
xchg
mov
cwtl
inc
jb
in
nop
aam
jnp
mov
mov
adcb
or
nop
mov
jns
out
sub
jne
and
jno
clc
mov
dec
adc
cmc
inc
notl
add
sub
xor
in
xor
mov
jae
or
sub
fiadds
test
xchg
xor
outsb
in
jg
adc
andb
cmpsb
outsb
or
or
les
call
leave
and
add
sbb
jno
in
xchg
adc
loop
push
shlb
add
or
push
ja
cmp
jle
push
sbb
add
inc
mov
xchg
push
inc
mov
sub
clc
adc
lret
sarl
add
jle
push
testb
or
pop
test
add
inc
mov
je
out
fsubp
inc
push
pop
and
push
pop
subb
setne
pop
cmpsl
mov
xor
cmp
inc
or
adc
cltd
pushf
adc
jno
fs
into
dec
rolb
sbb
xchg
jge
repz
pop
adc
sbb
pop
xchg
daa
dec
or
jae
mov
mov
xor
and
xor
sbb
push
pop
inc
test
and
insb
cltd
clc
xchg
sub
add
add
lea
seto
mov
imul
or
jmp
add
testl
adc
out
aam
push
das
or
cwtl
loopne
jb
dec
nop
int3
enter
out
push
mov
mulb
pusha
mov
test
push
pop
imul
jo
and
adc
arpl
in
adc
int3
cmp
mov
and
or
adc
in
cmp
pushf
js
lock
and
inc
add
push
cmp
test
scas
movb
in
enter
sti
pop
sbbb
enter
jl
xor
addb
push
test
int3
add
fsubrl
sbb
mov
mov
inc
call
lds
sti
push
orl
subb
and
in
adc
insb
pusha
xchg
cmc
pusha
enter
jle
cld
jnp
sbb
out
xchg
pop
mov
sub
jae
cmpsb
and
add
test
mov
lahf
add
push
mov
cmpl
mov
push
dec
add
mov
xchg
inc
test
fstpl
and
mov
sbb
cwtl
mov
push
pop
mov
int3
xchg
mov
cmpsb
clc
mov
cs
mov
xor
movsl
cltd
cmp
cmpsb
xor
push
sbb
add
or
jmp
and
cmpsb
enter
jne
sahf
loopne
int
out
add
xor
sub
mov
enter
nop
dec
out
push
dec
or
xchg
fsubrs
xlat
in
pop
fisubl
sbb
rcrb
add
test
leave
and
and
outsl
add
dec
sub
jecxz
cmp
pushf
nop
mov
xchg
pop
jb
adc
fimull
mov
lods
test
loope
aam
lea
rolb
loope
ja
call
std
cld
jge
roll
mov
cmc
mov
pop
or
or
lea
xchg
add
cli
push
xchg
repnz
dec
adc
push
add
in
push
xchg
cmp
dec
mov
cwtl
orl
roll
lods
sbb
mov
jg
push
xchg
icebp
or
rclb
dec
clc
rcll
out
or
add
jmp
pop
or
mov
dec
jb
add
adcb
int3
inc
cld
aad
ljmp
and
int3
adc
dec
or
adc
mov
jl
test
shrb
push
les
scas
nop
lods
cwtl
push
bound
jo
inc
mov
dec
adc
lea
fists
test
mov
movsl
xor
jno
cltd
sbb
push
push
pop
js
xchg
fnstcw
pop
dec
mov
shlb
jcxz
xchg
lds
aas
or
or
and
sub
xchg
js
and
pop
adc
ja
inc
in
adc
inc
enter
shll
shrb
adc
test
int3
add
sbb
mov
sarb
aam
mov
jge
or
sbb
cld
mov
lods
fadd
pop
ficoml
and
fldt
sbb
jecxz
dec
push
loop
sub
icebp
popa
jo
add
lret
bound
pushf
sub
and
push
fcompl
gs
cmp
adc
xor
aaa
in
movsb
and
dec
mov
fwait
mov
inc
imul
lret
jbe
pop
jae
stc
jae
adc
mov
dec
pop
inc
push
and
push
cmp
test
pop
sti
jo
xor
lahf
mov
and
pop
inc
addr16
fcom
and
xorl
or
pinsrw
bound
js
sub
mov
dec
nop
mov
xor
xchg
cltd
mov
inc
daa
mov
or
scas
pop
mov
mov
jb
xor
js
in
sub
fs
adc
bound
mov
and
fmul
pusha
or
cmpsb
inc
xchg
and
adc
js
lcall
mov
and
movsb
fisubs
adc
pop
data16
pusha
es
mov
icebp
rolb
addr16
adc
xor
add
in
mov
inc
int
push
lretw
scas
mov
jecxz
fisubs
sarb
mov
sub
xor
or
xchg
push
xor
gs
and
jbe
adc
insl
cmp
cmc
xor
adc
pop
enter
inc
sbb
sub
xor
int3
cmpsl
jb
movsb
rolb
add
loope
loopne
data16
fs
hlt
cld
or
fidivrl
sub
or
fildl
jl
cmp
cmp
loop
adcb
jb
imul
jne
add
pop
xor
stos
pop
cmpsl
roll
jmp
xchg
mov
and
sub
loopne
xor
pop
dec
sub
testl
mov
add
or
test
xchg
xlat
add
jl
sbb
xor
mov
pop
dec
xor
mov
mov
mov
pusha
imul
mov
orl
filds
push
adc
dec
add
mov
fisubrs
inc
movsl
mov
imul
sahf
into
push
jl
loopne
aam
paddsw
mov
subb
loopne
or
xor
add
repnz
stc
imul
mov
mov
push
ja
sarb
cmc
jns
mov
mov
or
push
xchg
sarb
leave
mov
pop
inc
outsl
xchg
jnp
add
ffreep
insb
mov
jnp
leave
cmp
mov
loopne
fldl
lret
and
aam
xor
push
je
icebp
js
add
ja
pop
dec
mov
mov
mov
call
add
mov
push
sarb
fadds
push
fisubs
iret
add
xchg
push
das
add
pop
je
data16
push
cmc
mov
add
std
cmpsb
aad
ljmp
movb
test
mov
std
andb
pop
sbb
clc
pop
push
mov
add
sub
flds
test
and
xlat
sbb
add
jae
fcomps
aas
idiv
loop
iret
add
test
mov
add
lahf
fs
int
hlt
addb
pop
xor
jl
xor
sbb
add
cmp
cmpsl
adc
xchg
stos
icebp
add
xchg
fadds
enter
inc
add
ret
add
jmp
les
lret
enter
add
xchg
and
mov
push
mov
add
inc
cmp
add
enter
shll
push
add
dec
insb
scas
push
fsubl
or
movsl
xchg
cmp
add
iret
jnp
push
ss
lea
scas
jg
ds
cmp
jp
push
rclb
add
fidivl
xchg
pop
fcomip
xchg
sbbl
hlt
sbb
push
add
push
repz
adc
hlt
adc
popf
repnz
les
int
test
sub
call
lcall
aas
adc
add
rclb
push
add
dec
loopne
dec
jno
loope
add
out
cmc
fiaddl
fdivrs
push
mov
jl
add
leave
das
inc
adc
pop
dec
push
or
movsb
adcb
jle
push
jge
push
xchg
sub
inc
in
push
lret
ljmp
pop
int
imul
jno
add
enter
sbb
add
rolb
push
dec
fisubs
orb
incl
or
in
cmp
pop
add
or
and
dec
add
xor
loopne
add
mov
stc
xchg
pusha
rcrb
or
out
mov
add
mov
mov
mov
shrb
fildl
and
sbb
cmp
xchg
add
adc
add
pop
jbe
in
lcall
pop
sbb
inc
lea
stos
shrb
enter
pop
sub
push
das
aad
push
orl
push
push
jb
lods
lock
cwtl
cmp
jp
mov
mov
xor
cmp
add
mov
push
sbb
or
ljmp
subb
jp
cs
and
test
mov
out
xchg
int3
dec
insb
xlat
out
add
xchg
jg
arpl
adc
push
cmp
add
repz
xchg
jne
push
add
xor
jecxz
clc
xor
add
pop
pop
gs
movsb
scas
in
mov
clc
daa
pop
sti
mov
add
sarb
add
shrl
lds
add
loope
dec
jp
clc
pop
stc
cmpsl
cli
rclb
test
cmp
jne
shrl
fildl
out
sbb
dec
daa
or
dec
xchg
nop
aas
dec
int
add
jmp
mov
add
push
dec
mov
cmp
inc
xchg
cmp
jp
mov
enter
jge
pop
add
ljmp
rcll
jne
inc
mov
shrb
pop
imul
xchg
loope
push
xchg
mov
pop
mov
cmp
xor
inc
adc
inc
adc
push
dec
mov
dec
pop
add
ja
add
push
scas
out
mov
add
cmp
xor
call
mov
clc
or
enter
xlat
in
jb
jbe
add
push
scas
jmp
or
or
in
pop
and
adc
inc
rcl
out
mov
mov
je
sbb
pop
lock
pop
imul
leave
lock
out
call
loopne
jnp
xchg
punpckhbw
dec
popl
faddl
and
call
dec
add
enter
in
inc
push
and
mov
mov
xchg
setge
push
mov
std
cld
push
cmp
push
mov
sti
movsl
sbb
add
dec
push
inc
cmp
flds
das
xor
imul
add
pushf
movsb
stos
push
arpl
aam
add
xchg
roll
mov
test
xor
inc
fldl
inc
cmp
jo
fsubl
add
je
and
add
xchg
cmpsb
or
adc
and
movsb
inc
mov
nop
inc
cmp
cmp
cs
push
mov
jp
xchg
adc
imul
inc
inc
movsb
jo
lock
dec
sbb
dec
call
mov
add
jl
stos
dec
mov
aas
insb
sbb
adc
bound
cmp
push
popa
xorl
pop
xchg
add
lcall
outsb
cmp
mov
jb
dec
push
sbb
push
or
or
xchg
adc
pusha
push
clc
or
xchg
xorl
push
jae
xchg
dec
cmp
ss
add
cmpl
pop
jb
or
mov
imul
das
xchg
cmp
pop
sub
popa
xchg
sub
adc
cmpsl
jne
mov
add
nop
out
xchg
in
sub
shrl
lock
dec
mov
jmp
jns
test
pop
mov
add
cmp
add
sub
fiaddl
pop
inc
fs
icebp
xchg
shlb
lahf
lods
shrl
mov
cmp
adc
movsb
inc
or
pop
or
fsts
cmp
mov
or
sbb
fldt
xchg
aaa
jl
blcmsk
int3
cmp
repz
call
push
jge
add
outsb
aas
cmpsb
push
dec
mov
fadds
inc
inc
pushf
mov
js
bound
sbb
push
xor
andb
stc
push
sbb
xor
outsb
or
imul
outsl
in
repz
dec
dec
cwtl
out
dec
cli
imul
pop
mov
xchg
push
andb
nop
add
aaa
je
pop
dec
insb
add
mov
pop
ret
js
lea
pop
push
jbe
push
cmpb
std
rolb
pusha
sbb
push
pop
dec
xor
dec
out
push
or
aad
add
mov
push
lea
dec
je
sub
daa
or
pop
cmpsl
lods
inc
insl
or
xchg
mov
data16
pop
inc
das
xchg
push
imul
jmp
fdivrs
pushf
mov
jo
daa
add
fistpl
or
dec
lods
mov
popa
cwtl
mov
sub
sub
daa
inc
sub
and
xchg
and
pop
inc
push
and
cli
dec
std
xchg
cld
testl
in
cmp
test
hlt
sbb
dec
test
sub
pop
push
jl
ja
cmp
das
cmp
sub
les
xor
jns
ja
popa
dec
pop
pop
ljmp
mov
inc
imul
ret
pop
dec
pop
xor
dec
pop
cli
pop
add
push
dec
ja
mov
add
xchg
sbb
fcoml
add
xchg
dec
mov
push
aas
push
or
inc
xchg
testl
cmc
aad
jb
and
ja
add
roll
cmp
fs
shl
xchg
sbb
fsts
and
scas
in
sbb
lock
mov
jl
xchg
sub
movsl
add
gs
scas
leave
xchg
jne
ret
inc
dec
push
daa
ds
add
mov
adc
cmpsb
movsb
mov
lcall
loopne
iret
jns
cmp
in
push
andb
push
jns
ljmp
fnsave
push
scas
movsb
je
add
mov
cmovo
xchg
addb
movsb
inc
clc
cld
jl
pop
pusha
lret
jecxz
jne
cwtl
mov
int3
cmpsb
xor
cwtl
stos
push
ror
movsb
sbb
in
mov
into
add
mov
lods
inc
std
call
push
in
test
xor
iret
jo
push
dec
or
ret
sbb
xchg
mov
pop
rclb
inc
ret
stos
sub
les
push
add
sbb
pop
imul
cmp
enter
pop
cwtl
stos
pop
cli
push
adc
inc
into
movsb
out
pop
add
xchg
dec
mov
rcl
cltd
push
mov
lcall
pushf
jne
jo
mov
jbe
movzbl
ret
xchg
jge
dec
stos
cwtl
xor
enter
add
ret
push
repz
add
inc
add
push
clc
sbb
pop
sub
or
pop
xchg
and
into
xchg
lods
dec
je
leave
push
lds
je
packssdw
xchg
pop
sbb
mov
add
lcall
pop
nop
sbb
push
cld
sub
test
es
pop
orb
mov
sbb
lahf
add
adc
test
sti
lcall
les
mov
ret
add
xchg
xchg
out
and
adc
int3
mov
lret
shrd
adcb
ja
lock
sbb
cltd
je
outsl
ror
bswap
add
push
adc
xorl
xchg
sarl
ret
sub
xlat
lret
cltd
xchg
loope
jbe
add
mov
pusha
jno
add
xchg
xchg
mov
sti
shlb
lock
push
lds
lods
sbb
jl
shlb
adcb
lock
js
mov
adc
xchg
insb
fimull
push
addr16
nop
les
mov
test
mov
xchg
dec
add
iret
mov
fsubs
mov
les
or
mov
xchg
les
jl
push
xchg
daa
shrb
lds
lret
imul
mov
push
shrl
cmp
orb
sbbb
xor
int3
clc
sbb
cltd
test
dec
add
and
pop
cmp
scas
ror
adc
mov
add
pushf
mov
jno
push
sbb
jbe
clc
iret
lods
inc
push
jo
lahf
sbbb
pop
lods
imul
push
push
repnz
push
enter
mov
loopne
testb
adc
jecxz
jb
out
jns
je
dec
jno
pop
stos
dec
adc
jg
pop
mov
sahf
push
dec
testb
mov
jns
sarb
add
ret
enter
dec
movsb
push
xchg
imul
scas
and
mov
or
lods
jmp
cmpl
xchg
or
in
test
ret
or
addb
sti
mov
stos
push
fsubl
add
jp
jmp
jbe
add
scas
push
andb
cli
mov
lods
mov
je
mov
hlt
repz
cmp
adc
jns
mov
lds
mov
je
or
adcl
mov
int3
pushf
jb
push
popa
lcall
movsb
les
xor
pop
scas
push
into
sbb
adc
push
ret
sub
in
incb
xchg
inc
push
ror
mov
loope
inc
or
mov
or
mov
push
or
pop
sub
test
jbe
dec
or
mov
mov
xorb
jge
adc
call
cwtl
inc
inc
iret
dec
hlt
sub
nop
add
lods
push
sahf
inc
push
pop
add
scas
dec
jmp
mov
call
lret
lods
xor
sub
lods
jo
dec
loopne
pop
fstpl
nop
mov
dec
int3
icebp
mov
stos
leave
and
insb
pusha
aam
idivb
dec
in
inc
mov
loop
jbe
or
lret
mov
daa
cmp
in
dec
pop
mov
jmp
ret
les
adc
add
cmpsl
jb
jo
je
pusha
sbb
scas
rcrl
cmp
mov
xchg
ja
mov
cld
stos
xlat
jle
jecxz
aaa
add
sbb
xorb
cmp
stos
scas
leave
sahf
imul
pusha
popa
jno
inc
sbb
and
push
mov
push
andl
enter
imul
rorb
push
mov
pop
in
paddw
mov
and
push
push
mov
data16
and
add
stc
imul
andb
or
adc
dec
shlb
xor
pop
test
nop
inc
les
mov
sub
lock
in
add
push
dec
and
test
sub
and
or
mov
and
rcl
loopne
inc
cmp
jns
add
cld
dec
or
cmp
mov
and
xchg
imul
out
add
sbb
call
movsb
mov
repnz
sbb
add
ret
nop
push
mov
and
push
gs
cmovs
add
fnstsw
testb
xchg
fs
inc
daa
sub
mov
fs
outsl
testb
fmuls
sbb
adc
gs
lret
mov
andb
add
xchg
add
lret
push
add
fisubs
adcb
lea
jnp
xor
mov
push
dec
sub
mov
mov
aam
lods
xor
xchg
bound
dec
imul
or
add
jbe
mov
fadd
cmp
and
xor
or
fisubrl
pushf
or
cmp
sbbb
out
adc
in
dec
sbb
faddl
int
cmp
or
push
push
aaa
test
in
stc
enter
pop
shr
or
add
scas
cmp
fisubrl
jns
or
rcrb
or
inc
and
ficompl
ret
pushf
shl
inc
in
push
call
cwtl
xor
push
add
sbb
dec
mov
and
cmp
xor
and
jae
nop
sbb
mov
xor
mov
mov
insb
push
mov
lret
shll
sahf
jbe
mov
mov
popf
adc
mov
add
lods
add
std
outsl
xor
fsubl
add
add
fwait
and
mov
and
dec
enter
jns
pop
call
or
popa
cmp
movsb
stos
add
inc
jno
sbb
or
and
mov
push
les
add
jb
push
sbb
nop
aam
pop
inc
sarb
jecxz
stos
sbb
jno
mov
clc
sbb
int3
xor
add
pop
ljmp
aas
fdivs
loopne
mov
sbb
in
ds
or
sbb
jbe
iret
mov
and
jge
push
inc
test
cmp
in
mov
out
rol
pusha
pushf
inc
push
cld
and
insb
adc
xchg
decb
sub
fwait
mov
mov
and
lds
stc
cmp
xor
or
ret
and
add
mov
cmpsb
insb
aas
pop
or
pop
adcb
stos
clc
std
int3
outsl
add
adc
sbb
enter
pusha
enter
in
enter
aas
cmp
mov
sub
or
sub
cs
ficompl
push
push
xchg
popa
mov
pop
test
lret
xchg
nop
sbb
testl
mov
xchg
jns
in
adc
rorb
add
iret
cmpsb
and
add
push
xor
lea
std
add
adc
cld
mov
aaa
fs
inc
cmp
jno
jo
testl
sub
fisttps
dec
movsb
inc
sti
adc
aam
imul
insb
mov
jbe
dec
int
add
mov
test
popa
add
cmc
dec
mov
pop
mov
add
xchg
repnz
nop
je
adc
int3
repz
xorl
sub
hlt
repnz
push
fadds
push
imul
cmp
hlt
sbb
sahf
mov
or
adc
and
add
push
pusha
loopne
shll
ds
lcall
mov
mov
push
xchg
mov
bound
and
push
jle
repz
sahf
mov
test
sub
jecxz
clc
cmp
popf
dec
pusha
cmpb
push
adc
sbb
dec
xchg
xchg
lahf
hlt
pusha
add
fldcw
cmc
mov
dec
sbb
xchg
sub
ljmp
dec
push
loopne
push
mov
fldl
mov
xor
jp
xchg
adc
std
or
mov
add
lock
inc
or
mov
dec
push
sti
adc
iret
shll
pushf
sbb
sbb
add
mov
push
nop
loope
popf
in
mov
rclb
adc
movb
pop
mov
mov
push
fdivs
cmp
and
les
dec
aas
lock
mulb
gs
cmp
sti
flds
popf
inc
mov
cltd
mov
outsl
pusha
xchg
decb
rcrl
add
outsb
jecxz
and
jno
inc
mov
sbb
dec
test
xchg
cld
cmp
pop
cmpsb
dec
sbb
jbe
inc
test
scas
fisubrs
mov
clc
or
mov
jg
clc
pop
loop
inc
and
iret
jb
in
dec
mov
jle
mov
enter
faddl
not
adc
outsb
sub
insb
add
mov
les
test
pushf
sbbl
lds
sub
mov
mov
mov
xchg
and
sub
loopne
pop
cltd
pushf
clc
xor
adc
dec
push
pop
xchg
mov
inc
xorb
mov
xor
popa
and
add
and
std
clc
js
lret
xor
sbb
popa
inc
movsl
pop
jns
popf
sub
fsubrl
out
or
fs
cmp
xor
jle
push
xlat
add
scas
and
iret
xor
and
popf
adc
fistpll
call
mov
add
notb
shl
aam
sarb
in
and
add
leave
aad
or
mov
aaa
mov
add
shlb
test
mov
lahf
dec
out
push
mov
or
xor
xchg
push
shlb
rorb
dec
pop
push
in
cmp
cltd
lret
lods
in
std
lock
movsl
sbb
popa
add
ja
sub
es
mov
mov
ja
rclb
mov
test
fldenv
xchg
push
xchg
mov
cmpsb
and
jnp
push
xor
addl
nop
outsl
mov
inc
mov
push
inc
lods
inc
push
sbb
inc
cmp
mov
insl
shrb
scas
rorb
jns
shrl
aas
add
pop
test
xor
mov
adc
daa
xchg
cmp
cwtl
lock
push
jg
push
clc
out
cmc
adc
mov
addb
adc
adc
mov
mov
cld
lods
std
mov
cld
pop
xorl
hlt
in
inc
jns
inc
rorl
mov
mov
imul
pop
scas
incl
jae
sbb
jp
js
or
dec
xlat
mov
addl
je
lahf
or
add
pop
dec
out
push
addl
fdivrl
adc
push
clc
ror
xor
push
out
fmull
jbe
fwait
pusha
mov
jns
call
hlt
jmp
imul
rolb
mov
and
les
lea
fldenv
and
pusha
cmp
mov
xorl
and
in
loop
pop
cli
push
sub
insl
leave
test
mov
push
mov
clc
xor
pop
mov
mov
call
sub
incl
imul
add
inc
push
mov
mov
pusha
and
add
push
mov
mov
test
inc
inc
pushf
xor
adc
scas
and
sbb
dec
add
lahf
scas
dec
push
xor
sub
and
inc
in
das
inc
out
add
mov
popf
or
xor
lret
sub
pusha
loop
aas
nop
add
cmp
std
pop
sbb
movsb
mov
lds
add
cld
daa
pop
pop
mov
lahf
test
pusha
dec
hlt
adc
orl
adc
adcb
out
insb
test
in
adc
mov
sub
inc
in
je
add
ss
les
and
popa
fcompl
loopne
xchg
iret
mov
pop
lret
and
adc
or
inc
push
mov
arpl
hlt
out
inc
dec
into
rcll
lea
lods
adc
stc
pop
adc
mov
add
add
push
nop
jo
adc
ds
pusha
add
pop
xchg
mov
adc
add
mov
scas
adcb
add
jbe
cmp
cmp
out
insb
mov
shl
sub
dec
xchg
inc
enter
mov
sbb
mov
mov
dec
inc
mov
jae
dec
sub
and
in
or
pop
push
call
xor
mov
push
insb
sub
outsl
sub
rcl
rorl
faddl
adc
adc
xor
xchg
mov
call
jb
mov
loope
inc
call
mov
inc
jl
jp
push
paddd
xor
xor
iret
push
mov
and
add
and
dec
cmp
es
sub
add
leave
cwtl
mov
and
orb
fcomps
or
mov
adc
lods
jo
pusha
pushf
andb
push
clc
lcall
adc
data16
in
inc
negb
mov
jle
dec
outsl
ljmp
mov
in
lds
mov
xchg
jne
add
pushl
mov
cmp
pop
cltd
add
in
add
mov
fwait
lahf
add
push
out
add
mov
xchg
mov
nop
int
mov
sbb
fcomp
js
jo
xor
add
mov
cld
mov
loopne
into
cltd
add
push
mov
call
lock
pop
arpl
mov
adc
or
cltd
fsubl
test
add
bound
cmp
push
mov
test
popf
test
adc
and
inc
es
cmp
mov
pop
pusha
nop
sbb
pop
inc
test
in
cmp
sbb
lea
stc
xor
loop
xor
dec
sbb
add
push
mov
or
jle
outsb
pop
pushf
mov
out
or
scas
sbb
adc
or
dec
mov
aad
aam
frstor
ret
push
in
mov
ror
repnz
xor
sbb
movl
rcr
mov
adc
shll
lock
mov
add
imul
stc
mov
test
add
or
push
jp
or
sbb
sbb
fwait
xor
mov
mov
fs
jecxz
cs
in
pop
test
adc
dec
pop
add
pushf
inc
ret
sbbb
pop
hlt
les
jbe
and
xchg
mov
mov
psrad
clc
xor
jo
cmp
push
dec
movsb
sbb
arpl
dec
enter
add
in
test
inc
xchg
mov
not
add
dec
arpl
cmc
pushf
loopne
mov
pushf
call
xor
dec
lret
push
popf
je
xlat
sub
add
mov
lods
xor
xchg
in
inc
xchg
pop
mov
and
push
dec
pop
aas
loop
xor
test
xor
add
inc
out
push
in
xchg
popf
add
loopne
fs
loopne
dec
idivl
ret
mov
xor
aam
adc
dec
cltd
aam
jmp
addr16
mov
add
or
cs
pop
movsb
add
bnd
push
add
add
inc
pop
push
popf
sbb
decl
xor
movsb
data16
pushf
ret
fdivrl
jecxz
xchg
xchg
cs
cmp
jo
dec
cmp
mov
pop
call
xor
roll
adc
gs
sub
mov
or
jo
add
or
add
and
call
pop
ret
and
xor
and
ret
pop
add
jne
add
sub
adcl
mov
sbb
and
mov
mov
adc
dec
inc
and
enter
inc
inc
sbb
add
dec
or
incb
into
add
ss
push
mov
pop
xor
adc
fcmovne
cmpsl
add
xchg
addb
cmp
roll
xor
xchg
xchg
cs
popf
or
mov
cmp
fadds
push
sbb
ret
and
inc
push
ret
out
sbb
jp
jmp
pop
sarb
jns
mov
jnp
mov
or
frstor
mov
cmp
mov
mov
notl
xchg
mov
vmaxss
bound
mov
mov
sbb
fwait
cmp
adc
inc
push
ret
lods
movsb
inc
ret
add
lret
dec
add
jge
sbb
fsubs
leave
xor
push
pusha
aaa
shll
enter
or
sub
inc
xchg
pop
and
push
xor
sub
push
xchg
pop
sbb
add
in
pop
jl
sbb
mov
dec
jns
shlb
or
inc
rcr
out
push
faddl
push
mov
and
add
or
nop
lret
mov
pop
push
in
sub
cmp
mov
ret
pop
ja
add
ffree
xor
mov
orl
and
pop
jb
mov
inc
push
or
int3
roll
or
adc
sub
cmc
icebp
test
cmpl
bound
adc
daa
and
push
ret
rolb
dec
dec
test
adc
rcrl
pop
and
sbbb
and
inc
adc
jmp
mov
adc
shrb
mov
fsubrl
cmp
push
loope
mov
add
test
lcall
xor
js
cwtl
xlat
gs
xchg
sbb
rclb
sub
mov
and
xchg
cltd
push
jns
mov
adc
aam
add
add
sub
jae
inc
mov
cmp
int3
dec
add
push
xchg
lds
push
push
je
mov
in
daa
add
and
cmpw
or
inc
xor
pop
and
add
xor
mov
mov
je
add
test
adc
jge
loope
lsl
xchg
xchg
aaa
sub
pop
adc
xor
push
testb
fs
test
test
xor
push
cmpsl
xor
pop
add
rcll
dec
pop
sqrtps
imul
or
lret
jne
bound
movsl
cltd
das
add
xor
mov
cmc
and
pusha
roll
cli
sub
xor
adcl
xchg
and
or
mov
popf
insl
and
push
dec
jmp
in
add
jl
insb
sbbl
push
sbb
andl
es
or
fldenv
sub
inc
jno
sbb
sub
push
push
rcrl
mov
sbbl
mov
fisttpll
or
fimull
inc
rorb
hlt
and
lahf
cmpxchg
jns
jle
out
xchg
push
sub
clc
ret
pop
ret
xchg
mov
addb
insb
sbb
cmp
mov
xchg
lcall
inc
pop
jno
add
or
je
adc
sarl
xor
mov
dec
mov
xchg
push
pusha
jle
dec
fldl2t
add
popf
aad
xchg
jnp
jne
es
push
push
add
add
pop
sbb
jecxz
inc
lds
dec
pop
inc
sbb
xor
sub
push
push
popf
sub
xchg
xor
cmp
add
adc
lcall
mov
inc
arpl
mov
mov
lahf
adc
rclb
and
scas
call
test
les
loop
push
mov
pop
dec
cmpsl
sub
lret
nop
pop
inc
clc
adc
ficoms
lods
in
pop
mov
ja
aaa
push
shrb
incb
mov
or
pushf
pop
xchg
xor
jns
dec
pop
cltd
adc
push
pushf
dec
shlb
cmp
test
popa
and
mov
popf
xchg
pushf
jmp
and
push
inc
hlt
in
stos
sbbb
add
lret
jmp
shll
fisubrl
popf
mov
cmp
adc
dec
andl
add
push
sarb
sbb
js
in
roll
fbld
pop
movsl
adc
adc
xchg
inc
push
inc
sbb
dec
mov
xor
loop
and
adc
mov
or
and
in
call
sub
add
popf
popa
fisttps
dec
or
push
in
mov
mov
xor
in
jnp
pop
and
push
sub
adc
mov
clc
adc
mov
mov
imul
pop
mov
loop
xchg
jmp
inc
out
pop
xchg
sysret
jmp
popa
int
inc
jo
inc
jae
cmp
adc
cwtl
mov
ret
shrb
xlat
jno
dec
push
cmp
adc
dec
fsubrs
mov
test
insl
movsb
hlt
cmp
test
push
or
call
std
adc
adc
sbb
or
sub
sbb
inc
pop
push
pop
popa
xor
pop
data16
dec
addr16
lods
add
into
rorl
sbb
inc
inc
in
adc
scas
dec
add
mov
pop
addl
adc
xchg
lods
dec
inc
dec
adc
and
sti
cld
das
add
mov
sarb
enter
aaa
outsl
jb
gs
fiaddl
mov
and
xchg
ret
scas
mov
mov
popf
or
test
loopne
push
xchg
out
outsb
sbb
mov
sub
add
push
dec
inc
les
cmp
dec
push
sub
cli
pop
push
xchg
push
daa
cld
ds
jns
add
idivl
loop
dec
or
cmp
arpl
add
pop
adc
popf
add
test
in
filds
push
lcall
mov
add
pop
cld
mov
cmpsl
sbb
mov
jmp
mov
xchg
mov
inc
ror
push
add
or
xorb
add
dec
pmaddwd
gs
in
pusha
mov
cmp
test
or
into
roll
add
cmp
pop
mov
and
mov
push
in
lret
sbb
xor
sbb
xchg
push
pop
xor
sbb
leave
shr
add
lea
add
js
cs
ds
adc
aas
nop
aam
test
mov
dec
fcomp
rolb
bound
sub
test
adc
push
cmp
pop
push
rclb
cmpsl
or
dec
jns
and
mov
mov
orb
or
mov
loopne
sbbl
and
aaa
roll
shr
or
ret
test
imul
dec
out
xor
and
inc
adc
xchg
dec
mov
sbb
mov
fwait
fwait
adc
cmc
jnp
pop
push
mov
fildll
cmp
stc
movsb
push
andb
inc
out
repnz
add
popa
dec
lret
add
jno
xchg
cltd
fimull
sahf
ret
inc
pop
adc
push
push
and
gs
push
mov
orb
mov
mov
adc
fiaddl
sub
jb
nop
inc
cmp
pop
jecxz
dec
mov
test
adc
inc
mov
data16
leave
push
sahf
jno
sbb
into
std
and
adc
subb
out
pop
dec
xor
cmc
ljmp
dec
lds
mov
mov
push
and
int
imul
fildl
arpl
jnp
mov
or
jns
jmp
push
adc
testl
mov
int
aas
mov
lret
and
flds
cwtl
push
adc
mov
mov
test
cltd
adc
mov
daa
dec
mov
or
int
sub
cmc
push
insl
sahf
ret
out
jae
dec
insb
int
pop
adc
xchg
arpl
fbld
push
arpl
adc
popa
loop
add
adc
pop
inc
pop
or
js
orl
jno
and
sub
adc
lea
pop
cmp
arpl
add
mov
movsl
dec
repnz
fucomi
insb
ret
add
sbb
cld
add
pop
or
orb
jle
sbb
xchg
push
mov
add
add
inc
xor
push
sbb
sbb
adcb
jp
punpcklbw
sahf
mov
adc
mov
xlat
xor
test
arpl
mov
subl
dec
stos
or
mov
xchg
out
mov
ret
in
add
lret
mov
sbb
in
stos
mov
inc
dec
push
push
xor
push
movl
inc
fsubr
mov
jns
adc
jne
pop
call
pushf
mov
push
and
dec
add
adc
add
fcmovbe
add
insl
sbb
movsb
and
push
sbb
repz
dec
sub
stc
pop
dec
push
adc
imul
int
cmp
popf
cmp
xor
add
mov
adc
bnd
add
ds
cs
in
sbb
mov
fmuls
and
fs
pusha
lods
push
sbb
mov
sub
popf
cmc
addb
adc
cmp
das
outsb
jge
dec
adc
rcrl
mov
outsb
dec
bound
mov
push
aaa
icebp
and
adc
clc
loopne
test
and
mov
adc
enter
int3
jnp
lods
mov
mov
iret
pusha
aam
inc
and
outsb
cmp
pusha
into
dec
and
sub
sub
ret
mov
or
jmp
mov
mov
push
xchg
stc
lret
pop
and
or
orl
xchg
subb
loopne
sbb
sub
push
sbb
dec
or
push
subb
sub
mov
jmp
arpl
pusha
xchg
mov
notl
and
clc
inc
mov
lock
pop
push
sub
add
mov
sbb
int
dec
add
loop
cs
xchg
pop
jbe
mov
dec
or
lods
popf
push
in
js
and
adc
cli
ss
push
or
add
sbb
xchg
movsb
inc
cs
add
cli
push
in
dec
sbb
mov
faddl
push
and
xor
xor
lea
xchg
sbb
sub
sbb
repz
daa
mov
jae
add
test
mov
or
test
es
xchg
in
mov
es
xor
sarl
mov
loopne
xchg
cmpsb
aaa
mov
int3
dec
jb
or
xor
jg
push
cmp
in
mov
rcrb
int3
cmpsb
adc
pop
xchg
arpl
pop
sbb
adc
test
dec
cltd
jno
in
jb
loopne
adc
insl
mov
leave
xchg
icebp
mov
jmp
add
add
lret
mov
outsl
shll
pushf
test
lea
push
mov
fwait
cmp
mov
xor
sub
pushf
sub
xchg
int
or
addr16
insb
ljmp
stc
push
pop
pop
out
mov
adc
sahf
jg
loop
adc
sub
lods
inc
sbb
adc
inc
add
aad
add
out
jne
xor
adc
add
movzwl
pop
pop
and
mov
push
mov
mov
dec
adc
cmpsl
out
pop
adc
push
in
imul
add
nop
subl
adc
push
and
push
pop
repz
push
adc
cmp
test
xchg
sti
xchg
or
dec
xor
pop
mov
flds
dec
mov
inc
jl
mov
sub
pusha
cmp
add
dec
stc
push
in
jle
add
add
push
mov
sbb
dec
movsl
adc
popa
inc
mov
fnstcw
fnstcw
mov
or
roll
fs
test
adc
dec
jbe
popf
pop
adc
orb
int3
sbb
cmc
push
pushf
xchg
or
jno
mov
movl
inc
add
adc
scas
shlb
adc
push
rcrl
and
mov
stos
fs
add
mov
andb
mov
jo
mov
jbe
arpl
push
add
popa
and
pusha
call
push
and
in
int3
inc
mov
add
dec
adc
push
in
sbb
sbb
jo
adc
xrelease
inc
sub
push
int3
pop
popf
sbbl
inc
int
inc
dec
bound
adc
pop
icebp
dec
xor
fadd
addl
dec
inc
sarb
jmp
test
and
push
fistps
aam
sbb
cmp
jge
loopne
or
add
sbb
inc
mov
cwtl
dec
sbb
lods
mov
sti
adc
mov
push
mov
sub
mov
cmp
imulb
dec
fwait
rolb
mov
sbbb
xor
sub
add
scas
fwait
xlat
subb
mov
dec
fisttpll
pop
xchg
push
mov
sub
jns
and
popf
add
or
or
cmp
jae
add
dec
std
fdiv
enter
addb
and
sub
flds
sbb
andl
xor
adc
jb
xor
and
push
sarb
push
icebp
xchg
sbb
mov
fldl
clc
fldl
in
lcall
icebp
lcall
mov
repz
fdivr
jmp
mov
sbb
jno
lods
and
adc
test
daa
data16
jne
mov
dec
xor
addl
cmp
add
pop
pop
sahf
cwtl
adcb
sub
xchg
movsb
inc
or
bound
mov
and
adc
xor
rcll
lds
mov
xchg
push
and
outsb
rclb
test
mov
cltd
add
push
mov
push
push
cmpl
adc
mov
push
or
xchg
das
mov
sbb
push
sbb
inc
push
jp
sub
scas
push
out
andb
mov
add
int
lds
adc
movsl
lds
mov
cmpsb
push
inc
pop
or
loope
add
xor
mov
sub
test
inc
push
sbbb
push
or
adc
cmp
rolb
cli
xor
insb
shlb
dec
and
xchg
ret
loop
add
sub
or
insb
pop
mov
add
cld
adcb
pop
je
inc
sbbl
lds
outsb
pushf
sbb
add
pushl
sbb
jb
rcrl
or
mov
jbe
subl
and
scas
add
jmp
pushf
movsl
es
jnp
xlat
cmp
cmp
inc
xor
mov
adc
in
daa
xor
add
pusha
dec
daa
push
dec
jp
jae
add
push
xor
mov
stc
add
fstpt
add
lcall
leave
xor
adc
and
in
ljmp
fcmovne
and
sahf
out
jb
jae
dec
rcrl
push
sti
movsl
daa
shlb
pusha
lret
adc
aas
pop
push
or
mov
mov
int
stc
mov
push
je
sub
sbb
roll
inc
adc
movl
cltd
shll
dec
cmp
and
andl
xchg
call
push
push
push
add
sbb
jge
dec
xor
daa
mov
andl
mov
pop
xor
test
sub
adc
sbb
xor
sbb
mov
inc
add
mov
cld
pop
push
pusha
cmp
in
lods
popa
mov
mov
movsb
aad
rorl
shrd
test
or
sbb
mov
add
bound
mov
add
or
xchg
mov
or
pop
or
out
sti
add
dec
push
jne
inc
sub
test
pop
inc
sbb
test
sub
xchg
popa
xchg
adc
sub
adc
arpl
bound
jae
pop
push
mov
add
stc
push
pop
or
adc
cmp
adc
cmc
mov
add
cmp
xchg
pop
rcll
movups
xor
or
test
mov
cmp
sub
lea
cltd
mov
pop
xchg
push
xchg
or
xchg
mov
shlb
add
mov
inc
lahf
jbe
faddl
sub
or
or
pop
pop
mov
and
mov
mov
or
addl
popa
scas
inc
mov
add
lea
and
pop
mov
xor
xchg
decb
stos
add
movsl
dec
add
ljmp
incb
icebp
xchg
outsb
scas
outsl
inc
push
xchg
sbb
push
cwtl
adcb
dec
mov
add
jmp
cmp
sub
pop
dec
icebp
sub
xchg
add
add
pop
dec
rclb
call
sub
pop
lods
rorl
mov
movsl
scas
push
mov
dec
and
add
outsl
sub
jle
xor
fsubrs
popf
inc
es
cmp
jo
orb
fldcw
fnstcw
jecxz
add
fimuls
mov
pop
in
push
cmp
and
insl
mov
mov
adc
inc
rorl
jbe
mov
nop
int
icebp
or
pop
dec
sbb
js,pt
inc
sub
and
add
mov
outsb
xchg
cwtl
add
mov
cmp
loope
mov
pop
mov
mov
stc
and
and
ja
lock
push
sbb
push
mov
mov
cmpsb
jne
int
pop
push
loopne
fdivs
push
test
pop
xor
jmp
lock
add
jmp
add
sbb
xor
arpl
in
xlat
rcrb
in
add
add
pop
cmp
lods
into
pop
or
jmp
test
fadds
testb
fdivr
int3
test
loope
fsubrs
ret
add
mov
mulb
inc
jmp
push
xor
xor
mov
punpcklwd
addb
mov
push
jge
xchg
je
mov
gs
imul
mov
insl
popa
mov
gs
jae
sub
arpl
sbb
clc
ljmp
mov
fs
rep
jmp
iret
mov
mov
imul
sbb
addr16
push
push
jns
jne
or
xor
jo
jae
outsb
inc
push
push
dec
sub
imul
rcll
push
insb
imul
inc
ss
cmpsb
std
cmp
push
inc
call
dec
pcmpgtb
ret
push
jb
std
adc
jb
push
cmovb
ficoms
push
push
dec
dec
punpckldq
je
mov
js
movsl
add
subl
roll
push
xor
push
mov
sbb
pop
pop
inc
mov
pop
fwait
push
push
xor
cmp
xor
add
jno
sbb
lcall
lods
sbb
cmpsb
jno
sbb
sahf
jno
sbb
xchg
jno
sbb
xchg
jno
or
pop
jmp
pop
sbb
pop
lcall
inc
mov
ret
add
mov
mov
push
xor
inc
push
ret
aam
add
xor
or
inc
push
mov
ret
dec
dec
lds
mov
push
adc
lcall
pop
adc
or
push
int
inc
enter
scas
xor
xchg
and
mov
mov
sub
test
rclb
dec
mov
ret
cmp
sub
sbb
push
lock
cmp
jae
in
add
cmp
add
test
mov
ret
or
pop
push
adc
cmp
dec
sub
clc
push
xchg
add
xchg
dec
fdivrl
add
pop
gs
pop
aaa
cld
pop
sbb
nop
addl
in
push
pop
repz
outsb
push
add
cs
scas
cmp
rclb
push
sbb
pop
and
xor
aaa
jae
jmp
gs
call
clc
icebp
xchg
jne
sbb
movl
cli
inc
sub
jmp
in
sbb
ja
ljmp
push
pop
add
xchg
das
mov
mov
pusha
fisttpll
popa
xor
lret
xor
add
xchg
pop
repnz
inc
inc
add
mov
inc
dec
pop
pop
in
mov
add
jl
test
add
iret
jge,pn
cmpsl
add
mov
xchg
subb
mov
pop
mov
and
pop
and
int
jmp
aaa
cmp
lahf
mov
sub
and
nopl
cltd
push
lock
add
jno
add
hlt
dec
pop
jo
pop
or
cmp
fs
in
nop
jl
adc
xchg
gs
jmp
ja
andnps
sti
ljmp
xor
rorb
mov
movsb
mov
aaa
mov
in
popa
outsb
outsb
add
lahf
cwtl
test
cmp
xor
test
orl
mov
sub
dec
mul
loope
clc
call
cmp
lea
sbb
insl
dec
xchg
pop
cmp
push
xor
adc
xor
jmp
data16
je
cmc
push
inc
add
daa
add
dec
mov
mov
sbb
ljmp
dec
dec
icebp
or
popf
daa
or
mov
jb
pop
mov
jl
stc
out
dec
adc
fimuls
mov
lods
xor
cmp
lods
sbb
daa
jns
ds
nop
jp
add
loopne
repnz
mov
add
movsb
popl
or
lds
pop
mov
adc
sub
jl
sbb
sub
adc
lea
movsb
pop
inc
or
dec
xor
inc
ret
jns
clc
jmp
pusha
jns
xchg
mov
popa
ret
jmp
pusha
adc
add
adc
ret
xor
clc
and
sbb
sbb
sbb
in
call
shlb
mov
ret
cmp
xchg
jbe
cmp
fdivrs
push
data16
and
or
ljmp
and
xchg
fisttpl
jecxz
add
enter
push
in
push
pop
or
imull
and
sbb
pop
dec
mov
add
push
sub
dec
mov
and
mov
lret
and
ret
test
dec
jbe
jbe
daa
loope
pop
aaa
mov
cwtl
and
mov
cmpsb
bound
outsb
cltd
mov
mov
dec
ds
xor
mov
mov
mov
jae
add
enter
stos
or
inc
add
dec
or
enter
and
inc
stos
aam
adc
or
sub
and
cmpb
lea
pop
pop
mov
xor
fldt
jmp
add
roll
aaa
fidivs
xchg
call
pop
xor
pusha
cmpsb
jnp
adc
xchg
ljmp
jb
sbb
xchg
cmp
aam
pusha
sub
popl
push
pop
push
mov
jmp
inc
pop
inc
addb
movsb
and
inc
sub
jns
stc
and
fbld
jp
mov
test
jb
add
enter
jb
ljmp
dec
sub
adc
sub
or
sub
sub
add
rol
nop
sbb
addr16
pop
push
pop
aaa
add
pop
push
inc
push
adc
add
leave
adc
cmp
and
inc
outsl
rcrb
lods
pop
or
or
sub
andb
add
movsl
mov
sbb
lods
pop
xchg
dec
and
mov
mov
mov
aaa
xor
mov
jge
outsl
loopne
insl
xchg
test
add
sub
sbb
iret
sarb
jl
cmp
adcl
dec
das
xchg
jo
fs
aas
add
pop
adc
sub
int3
add
pop
sub
add
dec
vpaddd
mov
loop
xor
and
clc
jae
add
lcall
mov
push
pop
jmp
add
add
idiv
push
sub
rclb
mov
cld
cs
mov
pusha
adc
inc
popa
sub
xor
in
testl
add
inc
push
daa
sbb
ret
sub
and
inc
sahf
cld
jge
inc
cmp
out
clc
sbb
dec
add
call
add
loopne
ljmp
leave
mov
clc
jbe
mov
loop
adc
cmpsb
test
cmp
pop
sub
or
loop
cmp
mov
xchg
fistl
das
outsl
jmp
in
inc
clc
popf
sbb
push
sbb
xor
push
rcrb
or
lock
daa
jecxz
cmpsl
insl
rclb
fdivl
push
dec
fbstp
or
in
xchg
inc
sahf
in
cwtl
in
data16
or
add
pop
notb
stos
push
rcl
jo
in
sbb
movaps
or
inc
insb
pusha
test
mov
in
ds
pusha
jg
cwtl
and
add
add
mov
add
test
push
sbb
and
in
add
imulb
dec
xor
ljmp
nop
jns
pusha
shlb
cwtl
outsl
sarl
fwait
jl
gs
mov
scas
sub
fsubp
mov
mov
add
addl
cmp
push
stos
add
mov
add
f2xm1
add
sbb
add
and
push
fistpl
inc
push
adc
cmpsb
popa
inc
inc
pop
pop
add
shrb
or
in
add
xor
lahf
and
pop
arpl
xchg
mov
xchg
scas
sbb
sbb
add
jl
adc
push
les
adc
and
sub
sub
imull
mov
dec
aaa
and
add
repz
inc
div
xlat
add
enter
fists
mov
or
ja
push
js
loop
adc
dec
filds
jl
aaa
xor
or
jecxz
add
and
add
clc
subb
inc
hlt
mov
cwtl
adc
cmc
cwtl
and
flds
inc
pop
push
add
and
cli
adcl
rorb
xchg
adc
testb
pushf
add
movsl
stc
adcb
adc
add
inc
ret
mov
jb
xchg
out
mov
jns
adc
and
int3
pop
push
std
dec
push
adc
bound
ret
and
dec
dec
clc
or
or
mov
mov
sub
ljmp
ret
jb
mov
push
repnz
mov
push
add
push
add
mov
ficoms
push
fs
pusha
xchg
pusha
and
icebp
nop
push
add
imul
add
dec
dec
andb
scas
lahf
mov
add
mov
orb
inc
ret
call
mov
sbb
call
sarl
adc
push
shll
cmp
out
jnp
mov
and
or
ror
or
sbb
aam
push
js
mov
test
scas
jp
pop
mov
mov
mov
inc
shlb
push
outsl
jp
add
inc
stc
ds
nop
clc
cltd
mov
add
aam
lods
ret
outsb
pcmpeqb
shlb
push
nop
sbb
ret
je
shufps
in
adc
mov
mov
adc
jmp
dec
push
or
xor
aas
andl
add
add
bound
ss
cmc
fisttps
xor
add
shl
insl
mov
xchg
stos
loop
loop
push
call
out
pop
lret
ret
mov
add
or
sub
adc
bound
test
out
mov
xchg
insb
ss
mov
inc
es
mov
jno
cs
add
jge
jae
jp
js
pop
mov
xchg
push
clc
add
add
xor
inc
inc
movsb
sbb
xchg
cwtl
cmpsl
cmp
sti
add
add
mov
rclb
fstps
jmp
lret
mov
xchg
faddl
adc
mov
and
lret
fisttpl
pop
jb
pop
add
dec
xchg
add
push
mov
or
verw
xchg
adc
add
cli
shll
ljmp
and
mov
gs
jo
es
xchg
add
cmpsl
fiadds
add
js
repnz
inc
add
mov
cmp
ss
out
cltd
call
fxtract
mov
pop
add
cmc
inc
and
adc
rcrl
cld
aam
pop
ss
in
rol
and
pop
or
cmc
cmp
jno
cmp
test
push
and
in
cmp
jmp
add
call
bound
sub
mov
dec
ficoms
cmp
lret
xor
into
xchg
loop
add
in
daa
in
jle
ret
pop
aam
int3
xchg
add
insl
mov
dec
pop
bound
cmpsl
cmp
lods
add
aam
ret
js
ds
mov
add
jne
cmp
test
mov
fs
sbb
cmc
xchg
pop
cmp
adc
popa
jnp
fldenv
jns
cli
roll
and
sti
int
xor
inc
dec
aam
mov
cwtl
mov
icebp
or
cli
xchg
mov
mov
xchg
inc
addb
pop
inc
hlt
flds
stc
xor
push
outsb
inc
nop
movsl
cmp
mov
and
push
xchg
push
push
adcb
mov
mov
imul
mov
aam
enter
cld
or
and
out
pop
jns
loop
and
imul
or
xor
add
mov
push
inc
jge
dec
add
add
js
addb
loopne
decb
pop
dec
xor
adc
arpl
mov
mov
and
rcll
xchg
pop
call
dec
es
cmp
testb
clc
add
cs
jle
pop
pop
mov
sub
inc
dec
pusha
sbb
mov
jns
mov
btl
movlps
mov
es
jl
add
and
dec
rorb
xor
out
xor
pop
adc
rcll
jle
pusha
dec
inc
cli
dec
jbe
clc
push
mov
sahf
ds
sbb
push
and
adc
lods
fimull
fwait
push
daa
and
shlb
and
or
push
jns
add
lock
lods
cld
out
pop
mov
xor
pop
or
cs
sbb
xor
fistpl
mov
rcrl
decb
pusha
inc
mov
add
lods
rcll
mov
rorl
adc
std
mov
cmp
pop
push
cmp
cli
mov
dec
orb
add
shl
clc
roll
mov
push
adc
add
lock
andb
xor
or
mov
pop
push
jbe
rorl
mov
xlat
xchg
pop
je
add
repz
in
and
fisubl
pop
xor
decl
out
add
xor
xchg
add
rol
stc
lret
pop
cmp
andl
add
push
dec
pop
push
movl
pop
adc
dec
sub
cld
test
movsb
jl
dec
sub
fs
shr
mov
into
mov
subb
in
dec
out
fwait
xchg
mov
or
and
xor
xlat
lcall
jl
rorb
inc
jno
lds
or
fldl
mov
les
adc
jo
add
adc
dec
sbb
mov
mov
clc
dec
lock
xor
cltd
jp
cmp
enter
repz
pop
push
add
sub
add
insb
dec
pop
adc
jb
or
mov
mov
inc
or
sub
cs
negb
xor
pop
into
insl
das
xor
loope
adcb
mov
lock
mov
lods
sbb
ja
jno
pop
push
aad
notl
xorb
lea
rolb
aaa
popf
sahf
mov
sbb
fdecstp
aad
icebp
incl
dec
push
jmp
add
das
shlb
add
mov
add
add
imul
xchg
mov
and
fwait
jae
sub
cmp
scas
cwtl
add
sub
faddl
sbb
fwait
enter
xor
xchg
xchg
mov
call
mov
ret
roll
rcrl
sbb
das
pop
mov
inc
cmp
idiv
xchg
add
movl
or
xchg
movsl
shufps
pusha
jne
movsb
test
jl
roll
adc
push
add
cmc
int
jo
pop
add
xor
adc
insb
out
leave
add
push
inc
loope
adc
nop
mov
shl
test
xchg
mov
push
cltd
jge
loop
inc
sub
xor
aam
shl
sbb
and
test
or
sub
fs
mov
cmp
pcmpeqw
ja
dec
add
call
mov
out
push
das
mov
jnp
cmp
aas
push
movsb
mov
sub
cmc
imul
xchg
add
add
out
stos
sub
inc
add
cmp
push
cmpsb
cwtl
fisttpll
inc
daa
addr16
sbb
mov
push
jne
lret
cmpsl
nop
xchg
test
jle
roll
mov
cmp
sbbl
or
les
sbb
addr16
cwtl
jp
xchg
test
sbb
test
gs
xacquire
in
xchg
add
xor
sbb
xchg
sbb
add
popa
push
roll
add
jp
std
xor
mov
or
lret
jle
fs
lds
pop
mov
add
push
out
inc
mov
push
fmulp
push
mov
push
cmp
xchg
xchg
mov
pop
movsb
aad
sub
jecxz
loopne
insb
popf
cmp
mov
cmpsb
push
and
jp
loop
add
push
sahf
jbe
jnp
mov
repnz
pop
and
daa
and
and
sbb
inc
insl
in
in
fadds
adc
outsb
enter
or
sbb
add
pop
out
jno
sbbb
add
das
fistl
push
or
data16
shl
pusha
popf
test
pop
mov
mov
and
inc
leave
mov
scas
mov
andb
add
cli
cmp
dec
add
ret
int3
fidivrl
jbe
xor
pusha
out
sub
movsl
movsb
cld
mov
and
cs
and
add
je
lods
jl
jne
addr16
dec
cmp
sub
push
addb
sbb
loopne
adc
mov
fstps
mov
jecxz
or
inc
sti
popa
test
push
cmpsl
icebp
insb
nop
and
mov
add
loop
cmpsb
adc
pop
out
pop
push
jg
fmuls
mov
cmc
sub
push
adc
cmp
cmp
add
xchg
stc
andl
adc
mov
addb
int
mov
xlat
push
add
adc
nop
test
pop
add
iret
push
jecxz
pop
stos
pop
pop
mov
dec
and
lea
mov
cld
arpl
jmp
lcall
adc
add
jg
add
push
movsl
or
scas
movsb
fdivrl
sti
mov
rolb
push
or
addl
jecxz
pop
sub
dec
cmp
xor
sub
mov
hlt
divl
mov
mov
int
and
cmp
xchg
cmp
jmp
mov
sbb
jnp
pop
push
mov
sub
sbbb
jo
xchg
leave
out
add
hlt
cmpb
ljmp
call
add
mov
add
pop
mov
and
ja
sub
call
add
gs
stc
pop
jge
mov
das
in
inc
test
ja
pop
sbb
lods
pop
pop
repnz
mov
jle
add
in
and
sub
rcrb
call
add
in
xchg
mov
call
sbb
sbb
sbb
in
cmpl
inc
jno
shlb
aam
push
repnz
rclb
jge
xchg
pop
add
es
jo
shlb
sbb
inc
push
cmp
mov
scas
add
push
shl
dec
add
jp
cmp
ljmp
sub
decb
cld
repz
mov
push
adcl
add
add
bound
mov
in
test
add
push
imul
stc
pop
jno
xor
adc
hlt
mov
add
or
pop
fwait
jecxz
mov
add
push
cmp
xorl
mov
shrb
pop
mov
adc
cmc
js
pop
fwait
add
ja
insl
mov
sahf
mov
fsubrp
mov
dec
fadds
sbb
jb
mov
mov
jae
inc
les
bound
ret
or
js
xchg
sbb
jno
add
daa
jp
sub
aad
fcompl
call
adc
or
in
mov
push
shr
mov
cmp
movsb
shlb
andb
or
mov
add
pop
aaa
add
outsb
mov
popa
add
ja
aam
cmc
fdivr
addb
pushf
and
xor
add
test
cmpsl
mov
data16
mov
push
sub
aaa
pop
nop
jae
test
dec
add
movsb
in
leave
movsb
or
add
hlt
pop
js
xchg
mov
gs
sub
aas
call
mov
inc
xor
adc
add
mov
bound
add
push
ret
lret
mov
mov
popa
adc
je
add
aaa
pop
data16
push
jecxz
sbb
sbb
adc
cltd
clc
and
ljmp
push
mov
outsb
addr16
add
pop
push
dec
out
add
pop
aad
fcmovb
arpl
shrl
mov
cmp
add
mov
push
adc
cmp
and
lret
aad
push
sub
divb
jbe
and
cmp
jns
pop
mov
lret
or
mov
dec
pop
pop
jno
aas
jns
orb
add
xor
movsl
int
cmp
nop
enter
push
mov
add
or
insb
xchg
push
inc
shlb
sti
xor
cmpsl
into
add
addr16
cli
pop
add
and
in
inc
pushf
je
gs
mov
add
inc
mov
sbb
pop
repnz
scas
leave
jns
bound
out
and
in
insl
arpl
fucomp
add
mov
cmp
add
lock
pusha
mov
scas
cltd
jno
cwtl
nop
mov
jb
and
add
cli
xlat
add
mov
mov
adc
sbb
add
sub
loop
jbe
xchg
lahf
xchg
out
popf
mov
inc
jne
push
test
flds
mov
sbb
fimuls
inc
cmp
inc
mov
cmpsl
xchg
sarl
lret
test
rcrb
mov
rolb
out
inc
repz
rolb
dec
mov
sarb
jle
cmp
pop
add
inc
mov
popf
add
fmuls
mov
push
mov
cmc
out
mov
dec
dec
or
jnp
mov
cmp
mov
mov
es
icebp
add
cmp
add
mov
and
add
and
ss
add
add
js
add
test
add
sbb
push
or
add
arpl
sarb
aas
and
mov
adc
xor
jo
aad
imul
and
call
in
pop
flds
cmp
in
push
gs
sbb
mov
xor
cmp
hlt
and
repz
neg
sbb
add
stc
or
jle
je
lcall
ret
sub
add
jns
and
jo
jge
cbtw
popa
int3
add
jecxz
mov
pop
push
inc
jp
jae
pop
bound
jle
sub
add
aaa
add
jmp
push
xchg
cltd
adc
mov
mov
int3
test
loop
fwait
incb
out
shll
jmp
add
mov
aam
out
adc
call
je
mov
jns
or
pop
movsl
addl
cmp
mov
push
xor
fadd
adc
lds
cmp
out
jg
push
push
jne
push
add
and
inc
add
daa
add
insb
ret
nop
ja
orb
imul
inc
nop
mov
vpsubusb
loop
repz
push
push
mov
lds
and
ss
outsl
rdtsc
test
ret
ret
mov
lock
popa
nop
dec
ficompl
sbb
popa
test
das
and
je
mov
jno
push
sub
insb
push
pop
or
aas
jl
loopne
jno
mov
lahf
dec
or
icebp
in
dec
and
add
inc
pop
add
push
jl
subb
cli
faddl
pand
sub
cld
jne
add
dec
jae
xor
mov
add
das
cwtl
and
cmp
or
bound
add
and
sub
aad
aaa
nop
outsl
jne
lds
loopne
lock
add
and
sbb
scas
mov
sbb
mov
addl
pop
mov
and
es
add
testl
xchg
fldln2
sti
dec
cmp
adc
popa
cwtl
addb
mov
rcl
inc
or
cli
add
cmp
xchg
loope
jne
push
mov
jg
frstor
sarb
mov
jae
nop
jae
add
jns
popf
xchg
or
add
push
sarl
test
jne
mull
scas
cmp
sub
sbb
or
sub
jno
mov
and
insb
inc
xchg
mov
repnz
adc
add
shl
andb
xlat
dec
mov
je
jnp
jbe
es
dec
cmp
clc
jp
loopne
fsubs
inc
jmp
scas
push
cmp
cmp
jbe
ss
mov
mov
add
push
adc
xor
pop
push
and
cmp
mov
js
jnp
mov
mov
add
add
adc
andl
clc
test
std
arpl
hlt
cmc
push
ljmp
mov
add
in
add
sbb
mov
fwait
pusha
lahf
pusha
xorl
add
and
push
pop
pushf
cmp
cli
daa
add
fsts
push
jae
mov
and
lret
xchg
bound
cmpsl
fisttpll
jno
lcall
lret
inc
in
jo
lock
enter
out
ret
test
orb
inc
lea
int
pop
inc
cli
mov
hlt
mov
push
sub
mov
enter
pusha
and
pop
push
xor
sahf
fsubrs
push
pop
or
jne
roll
mov
aam
mov
cmp
pop
or
adc
add
mov
das
cmp
jg
mov
pushf
add
clc
mov
inc
adcb
roll
andl
stos
sub
mov
invd
mov
and
and
sub
mov
out
sbb
nop
addl
and
xchg
mov
jae
lcall
inc
adc
popf
and
xor
adc
and
and
mov
outsl
adc
pop
mov
or
mov
test
mov
pop
mov
mov
inc
pop
loope
and
or
push
lea
rolb
in
imul
in
push
jo
stos
jnp
adc
repnz
cmp
ret
mov
shlb
dec
mov
mov
ret
repnz
add
xchg
imul
repz
cmpxchg
addr16
pop
outsb
jp
pusha
add
push
and
arpl
ss
sbb
add
cwtl
xor
sub
cmp
loopne
cmp
sub
clc
adc
movsb
and
pop
dec
add
dec
sbb
add
jo
add
inc
sub
add
int3
dec
push
aas
push
mov
sbb
dec
aaa
into
inc
smsw
inc
outsl
rorl
add
bound
scas
scas
shlb
imul
roll
mov
dec
push
lret
notl
data16
je
add
ds
sbb
inc
mov
inc
pop
add
in
xor
push
aad
inc
add
nop
lods
jb
int
and
pushf
outsl
cmp
push
je
push
add
xor
pop
push
pop
loopne
es
push
add
loop
mov
out
or
leave
add
push
xlat
imull
jp
sub
xchg
jg
add
sbbl
pop
jae
pushf
mov
xor
add
xchg
lea
and
jmp
add
rolb
mov
mov
mov
cmp
ja
mov
sub
ds
testl
cmp
xlat
ficomps
mov
aam
lret
loop
clc
movsb
ret
pusha
xor
jle
pop
mov
pop
inc
inc
pop
leave
rolb
push
xor
lcall
arpl
pop
stos
orb
xor
mov
pop
xchg
xchg
add
sub
adc
jb
pop
test
mov
and
sahf
push
lods
add
jne
shll
lcall
inc
push
jp
add
inc
and
rclb
jmp
lock
pop
decl
adc
dec
push
add
lret
cmp
shll
lea
dec
adc
inc
inc
imul
aaa
mov
mov
rcrb
push
sub
pop
iret
xchg
movl
orb
loope
cmp
add
xchg
out
xchg
scas
or
shll
pop
int3
mov
add
movsl
add
add
dec
je
int
ljmp
pop
mov
shlb
scas
jb
mov
or
int3
cmpsl
cld
je
in
out
lea
pushf
and
arpl
inc
push
mulb
je
repz
sbb
dec
sub
ficomps
sahf
rorb
mov
add
push
insb
mov
mov
mov
add
pop
inc
mov
add
add
push
add
mov
loop
mov
push
icebp
jnp
add
lock
or
dec
push
add
in
call
sub
add
pop
xor
add
dec
sbb
mov
daa
add
lds
call
in
pop
movsl
scas
mov
cmp
ret
addl
imul
rorb
jl
sbb
ret
and
pop
lock
ds
pusha
clc
lcall
movups
loop
out
and
sub
pmullw
xchg
jl
mov
fcmovnu
mov
push
outsb
push
mov
push
fadd
out
fbld
xchg
sti
enter
pop
lcall
mov
out
das
add
mov
pop
jecxz
add
movsb
inc
mov
xor
dec
adc
dec
repnz
add
outsl
int
add
sar
loop
dec
adc
xor
hlt
sbb
mov
out
in
js
lock
pop
and
sbb
cmp
int
mov
sbb
add
and
sahf
cmp
xchg
cmpb
jne
and
xchg
xor
loopne
push
addr16
loope
mov
fiaddl
jb
mov
fbld
cmp
dec
ficoms
fmuls
ds
mov
pop
push
sbb
daa
mov
push
xchg
lea
aaa
clc
rolb
cld
cmp
shll
in
sub
add
and
dec
mov
pop
add
dec
imul
inc
sub
add
pop
leave
xor
mov
add
jb
adc
rorb
ja
pop
insb
mov
dec
pop
and
sub
faddl
xchg
into
test
pusha
stc
xchg
mov
jnp
loop
test
push
sbb
cmpsl
cwtl
sbb
pop
fdiv
aas
add
pop
fstpt
and
pop
fdivrl
lock
add
cwtl
test
enter
xchg
mov
out
es
sbb
lock
daa
jbe
push
ret
and
add
scas
cmpsb
sub
mov
or
sbb
je
adc
cmp
jnp
sbb
pop
push
jno
lea
lcall
daa
mov
jle
sbb
shll
xlat
loopne
lret
add
inc
mov
pop
jne
add
pop
out
and
insl
push
add
sub
push
lock
sub
push
inc
pop
inc
add
xlat
fisubl
test
cmp
in
fdiv
int3
addr16
cmpxchg
cld
stos
movsb
clc
add
fdivl
jnp
jne
xchg
cmpsl
pop
in
les
jle
add
mov
test
pusha
clc
imul
arpl
mov
jo
push
add
jno
cmp
adc
ret
or
in
stc
add
hlt
cmp
sub
dec
jl
cmc
cmp
daa
sub
in
xchg
enter
xchg
mov
ds
and
lds
jmp
lea
add
call
das
cmp
pushf
xchg
lock
std
add
cmpb
dec
je
pop
enter
pop
out
jg
add
adc
push
lock
andl
insl
ljmp
sbb
test
imul
loope
lock
pop
add
les
push
in
scas
add
jg
test
fwait
lods
rclb
mov
push
jl
dec
xchg
rol
push
adc
pop
cvtpi2ps
mov
sarl
in
add
xchg
pop
fbld
aaa
ds
pop
cwtl
dec
enter
divb
pusha
mov
dec
lret
jae
jmp
add
or
test
jno
out
dec
and
dec
subb
cmpb
add
xchg
orl
jle
add
or
out
subb
pop
or
in
decl
mov
scas
add
xor
add
pop
mov
scas
add
mov
fwait
xor
push
add
mov
out
test
add
outsl
cmpsl
fadd
mov
push
aas
add
jbe
out
enter
cmp
add
and
xchg
mov
sub
push
lret
fmulp
add
push
arpl
clc
int3
add
leave
jecxz
xchg
sub
add
sub
pop
lods
cmp
popa
mov
nop
and
sub
je
sbb
xchg
fld
add
mov
test
clc
xor
icebp
pop
cwtl
add
pop
arpl
adc
movb
dec
cmp
add
jne
sbb
add
fdivrp
dec
in
ljmp
pop
inc
popf
push
and
add
dec
cmpsl
nop
cwtl
add
jns
lcall
adc
outsb
inc
in
jae
mov
sbb
dec
jle
add
cmpsl
cs
clc
push
add
je
jns
mov
and
inc
arpl
iret
push
or
add
inc
in
cmp
dec
ja
or
pop
and
clc
in
dec
dec
pop
sub
jo
out
jge
adc
lods
sub
shrb
nop
pushf
add
and
scas
cltd
cli
test
inc
aam
dec
add
outsb
bound
push
es
dec
add
cmp
fcom
insb
addl
jo
out
lock
mov
icebp
cmp
mov
inc
and
daa
sub
js
sbb
push
popa
sarl
fwait
push
dec
mov
mov
int
fisubl
popa
push
and
insb
mov
clc
push
add
mov
jge
mov
add
clc
push
into
fsts
roll
pop
jl
mov
adc
les
sub
nop
outsb
pop
pop
jp
cwtl
jo
arpl
mov
add
sti
cmpsl
lods
pop
add
push
sbb
inc
ud0
mov
sbb
filds
push
dec
rcll
mov
cmp
jl
lods
add
mov
outsb
dec
jbe
add
cli
mov
ljmp
clc
shlb
add
mov
mov
adc
popf
lock
mov
popa
add
inc
mov
mov
sub
sub
lods
mov
sub
and
nop
pushf
pop
push
sub
and
jo
testl
stos
out
or
enter
push
add
jo
inc
add
je
rcrl
das
cmc
mov
addl
rcl
jl
pop
pop
xchg
or
sub
or
add
jo
sub
lods
cmpb
cmp
pop
dec
xor
cmp
add
test
jno
add
hlt
ret
xchg
mov
and
lea
pop
std
cmp
pop
and
xchg
test
call
fbstp
or
dec
repnz
sbb
push
and
sub
gs
jns
sub
int3
add
rclb
sub
leave
add
pop
cmp
mov
or
shrb
call
addb
js
repz
imul
mov
outsl
add
jae
and
mov
add
aas
push
dec
out
or
push
cmpsb
sbb
or
xor
or
cmp
sbb
dec
adc
std
inc
sub
pop
sub
push
adc
and
dec
aaa
std
add
js
mov
add
movsl
dec
call
add
pop
fwait
rclb
in
pop
iret
jmp
leave
mov
xchg
mov
xchg
inc
dec
addr16
mov
out
xor
jle
int
push
gs
xchg
push
add
sbb
adc
jbe
loopne
std
mov
or
mov
mov
imul
pop
add
adcb
lock
fildl
test
pop
ret
jnp
xor
add
inc
cli
ljmp
andl
cwtl
inc
ret
aad
sarb
sbb
addb
jb
mov
cs
or
mov
pushf
or
movb
mov
lea
xor
xor
pop
mov
add
sbb
mov
mov
add
and
daa
sbb
cmp
popa
sub
inc
add
test
or
in
or
sub
add
or
add
rclb
pop
pusha
add
frstor
inc
and
dec
sub
inc
dec
ror
lret
mov
mov
adc
into
sbb
and
ficoms
add
mov
mov
add
pop
loopne
add
into
xchg
xor
mov
xchg
cltd
test
in
add
push
or
int
sahf
adc
in
pop
mov
fbld
cmp
adc
sbb
in
lock
add
movsb
jecxz
pop
mov
add
pushf
mov
loope
push
fwait
dec
mov
adc
fs
pop
cmp
add
popa
and
and
popl
xlat
cmp
dec
push
push
sti
fcompp
arpl
push
in
sbb
std
add
data16
mov
push
cltd
add
sub
cli
push
sbb
fisttpll
fsubr
jae
arpl
nop
mov
nop
add
cld
push
add
xchg
mov
inc
add
cs
loop
and
mov
pop
lcall
icebp
clc
push
repnz
cltd
dec
imul
stos
out
dec
out
fwait
cmp
or
add
leave
dec
add
jmp
add
orl
mov
push
cmc
sub
icebp
dec
or
sbb
shlb
sbb
scas
jle
sub
pop
mov
or
add
jp
incl
cmovle
jnp
add
addr16
rcll
adc
push
daa
add
scas
mov
sub
mov
xchg
mov
add
movsl
mov
jecxz
fadds
mov
repnz
or
test
dec
scas
xchg
pusha
pusha
repnz
xchg
mov
add
xchg
inc
test
ret
add
adc
repnz
mov
je
cmp
sub
dec
fildl
adc
cmp
movsl
cmpb
js
rorb
call
add
xor
jmp
add
orb
adcl
pusha
jo
add
xor
cwtl
loop
fildll
xchg
popf
push
cld
out
mov
mov
push
ds
cmp
pusha
pop
dec
out
or
sbb
xchg
mov
pop
les
and
insl
sbb
add
mov
mov
outsl
or
add
pop
sahf
xchg
adcb
inc
add
mov
prefetch
inc
lret
loopnew
je
cmp
adc
sub
xchg
imul
cmpsl
cmp
pop
dec
jecxz
or
fwait
mov
add
outsb
out
add
dec
and
repz
aad
xchg
and
push
add
or
or
sbb
inc
sbb
mov
dec
add
jbe
push
pop
inc
test
or
xchg
and
int
inc
mov
sub
mov
mov
or
inc
dec
in
add
dec
fistl
dec
dec
xchg
xor
mov
cmpsl
and
add
push
int3
cwtl
push
adc
mov
sub
jecxz
test
inc
test
mov
data16
mov
popf
cmpsl
mov
add
fnstsw
iret
jge
test
add
pop
shlb
inc
inc
pop
add
in
and
cli
loop
fcmove
lcall
jnp
push
add
dec
cld
push
push
add
mov
mov
cmc
pop
lock
sarl
add
fsubrs
imul
cmc
lds
outsb
push
lods
inc
nop
mov
jge
add
mov
jbe
shrl
adc
icebp
mov
jl
ja
and
popf
ficoml
xor
add
loop
mov
shrb
push
sbb
js
xchg
add
es
and
ja
push
adcb
sarb
nop
xlat
insb
cmpb
mov
sbb
dec
mov
push
or
push
outsb
jecxz
call
mov
xchg
add
xchg
jge
push
ds
jbe
fistpl
push
mov
iret
xchg
mov
push
dec
aam
sbbl
dec
inc
mov
jbe
inc
dec
pop
insb
sbb
out
pop
cld
sbb
lods
jo
pop
inc
or
jbe
mov
add
hlt
lea
push
push
hlt
rorb
stos
push
sub
add
popa
lcall
push
pushf
sbb
add
repnz
nop
jb
add
pop
add
or
sub
js
orb
enter
jmp
or
xchg
lds
adcl
ret
and
fistpll
js
jmp
ret
movsl
je
rcll
mov
push
das
inc
mov
and
and
or
orl
fstpl
add
fisubs
mov
inc
lods
add
in
ret
ficompl
dec
mov
clc
cmp
test
das
sbbb
mov
mov
inc
mov
cmpsb
int3
aad
pop
add
icebp
and
iret
add
inc
popa
daa
cmp
in
xor
jle
lret
ljmp
add
sbb
cmp
dec
outsb
out
gs
pop
add
mov
mov
les
jb
cli
mov
inc
cwtl
sbb
aaa
pop
pusha
cmp
cmp
sahf
inc
ja
add
insb
jmp
out
xchg
scas
or
mov
pop
hlt
pushf
cwtl
dec
push
add
lods
ss
nop
rorb
out
mov
add
mov
out
pop
aaa
mov
add
or
push
add
insb
pop
dec
pusha
add
faddp
pop
mov
or
pop
lret
mov
push
jle
mov
jge
mov
mov
in
add
cs
cmc
stc
sub
pop
data16
scas
and
jle
stos
jbe
js
add
rcl
xor
dec
push
arpl
rolb
inc
push
add
push
cli
cmc
loope
add
inc
add
popa
add
data16
daa
sub
push
inc
aam
add
scas
sbb
add
mov
pop
ret
mov
mov
dec
pop
rcrb
rcrb
orb
sbb
dec
push
jne
jecxz
bound
and
jno
insl
inc
ds
addl
fldl
push
dec
sub
int
fdivrl
daa
mov
pop
add
adc
fiadds
mov
add
mov
fisubl
add
jne
cmp
ja
mov
add
repz
loope
mov
imul
or
movsl
lea
nop
xchg
add
add
mov
lret
mov
into
inc
jne
pop
inc
inc
add
scas
add
jle
call
test
js
lock
sub
or
stc
int3
sbb
xlat
pusha
in
and
mov
pop
inc
mov
add
imul
pop
lock
lock
lret
xchg
enter
add
lods
sbb
pop
jnp
add
add
iret
lds
jge
push
insb
add
out
sbb
sub
adc
std
xchg
or
add
mov
shll
loope
lret
pusha
fs
add
mul
mov
orb
dec
es
fisubl
cwtl
mov
test
add
pushf
push
sub
movb
fs
adc
cmpsb
jbe
lods
mov
fidivs
sbb
sbb
add
jge
test
xchg
jne
pop
dec
popa
cmpsb
add
inc
je
stos
lret
mov
sub
inc
rclb
fsubl
pusha
pop
mov
std
stc
xor
adc
gs
cmovns
f2xm1
loopne
testl
adc
xchg
shlb
sub
jnp
sahf
insb
out
and
cmp
push
lcall
es
hlt
mov
mov
xor
push
lcall
add
mov
or
mov
sub
movsb
and
add
add
fisttpl
test
inc
outsb
outsl
push
fistpll
aam
jo
mov
cmp
push
sahf
fidivl
je
cmc
testb
jp
outsl
aad
adcb
in
pop
ret
aas
fwait
leave
push
in
mov
sbb
ret
or
or
cwtl
jns
nop
cwtl
dec
pop
or
insl
call
dec
mov
call
popf
insb
clc
ljmp
imul
inc
xor
jbe
shrl
outsb
out
pop
xor
sahf
js
enter
jno
lock
jg
popf
jge
leave
in
or
add
fwait
mov
mov
push
push
push
jo
pop
lea
insl
inc
mov
lock
arpl
xor
and
std
cmp
mov
jmp
add
xor
adc
das
add
pop
jl
loop
addl
rol
mov
ja
inc
add
call
bound
or
push
call
ja
jns
out
ss
add
dec
inc
sbb
pop
lcall
les
push
jns
jb
stos
add
adc
jp
add
enter
add
popf
adc
push
repnz
mov
add
push
or
lret
inc
push
mov
xor
pusha
pop
pop
adc
sub
inc
sbb
sub
aaa
dec
dec
daa
push
int3
enter
out
pop
das
pop
cli
int3
sub
addl
cmpsb
sbb
mov
popa
add
mov
jle
add
jb
ljmp
rcr
cmpsl
push
jecxz
clc
push
sub
jns
dec
dec
addr16
xlat
xor
std
mov
add
push
test
push
test
pop
mov
rcrb
sub
rcrb
dec
pop
idiv
jge
add
jecxz
dec
add
aaa
int3
mov
jp
sub
mov
fs
xchg
xchg
rolb
pop
jae
jo
and
bound
adc
ficoml
mov
add
inc
and
int
push
or
sbb
jno
add
test
mov
cwtl
scas
add
or
jbe,pt
add
adc
aaa
daa
mov
add
ficoml
mov
pusha
arpl
out
or
pop
and
pop
nop
das
nop/reserved
add
pop
push
xor
add
gs
sbb
daa
mull
out
inc
push
xor
nop
adc
aad
aaa
add
cltd
jl
push
mov
xchg
pusha
in
xlat
push
jo
add
cltd
jno
pop
cmpb
add
ret
call
adc
mov
add
mov
jmp
loope
in
loop
imul
std
adc
sbb
pop
dec
xchg
push
rep
outsl
pop
mov
mov
les
hlt
add
xchg
sahf
jecxz
bound
mov
ljmp
jg
pop
add
lods
mov
mov
sti
push
jno
dec
push
sbb
ss
push
add
fwait
dec
xor
jns
or
movsb
add
jle
and
dec
pop
dec
pusha
and
pop
xchg
shll
add
xchg
fimull
xlat
sbb
cmp
add
mov
lds
adc
sbb
mov
movsb
inc
enter
add
adc
push
imul
pop
enter
pushf
fmul
shrl
xor
add
cmp
xor
pop
outsb
inc
xchg
test
ret
add
mov
add
xor
lods
fildll
lock
rol
out
xor
add
sbb
xor
adc
ret
pop
out
or
imulb
fadds
js
aas
mov
mov
add
jp
cs
out
mov
cwtl
cmc
jg
pusha
pop
xchg
xor
into
mov
insb
add
call
in
mov
negb
lcall
mov
imul
mov
cmp
xchg
mov
pop
sub
sbb
push
int3
lods
push
mov
add
sub
lret
cmp
mov
arpl
and
sub
inc
test
sti
add
mov
sub
cmp
pop
adc
cld
lret
lock
in
mov
mov
addb
cmpsb
jmp
fwait
push
sbb
mov
mov
push
movsl
les
xor
out
lret
pusha
xchg
popf
add
dec
jecxz
sub
push
pop
push
in
add
jnp
inc
add
cmp
add
in
sbbb
mov
inc
push
push
cwtl
addr16
pop
cmp
adc
aam
mov
add
add
xchg
lahf
es
xlat
ret
mov
lcall
sti
mov
xlat
cmpsl
cpuid
int
sbb
jnp
mov
inc
jo
sub
fstl
addr16
add
mov
ret
shrb
dec
sbb
cmp
andl
mov
je
jno
add
xlat
pop
loop
sar
pop
fcmovnbe
xor
inc
push
pop
insl
pushf
bound
push
sbb
mov
repnz
add
xchg
in
mov
stos
and
add
sbb
inc
and
pop
inc
or
push
jmp
test
std
call
add
outsb
adcl
push
inc
out
add
xlat
add
mov
cmc
movsl
inc
fistpll
inc
aaa
cmpb
test
xchg
stos
and
inc
sub
les
adc
lahf
sbb
xor
aas
movsl
pop
scas
push
stc
pop
outsl
mov
mov
jb
cmpb
movsb
insb
and
pop
sahf
scas
cmp
lds
add
mov
jle
mov
aam
add
imul
cmp
aad
mov
call
cmpsl
popa
ret
cltd
pop
stc
es
mov
popa
leave
add
cmp
add
pusha
push
xchg
in
into
pop
jge
mov
mov
cmp
clc
mov
mov
into
cmp
sbb
scas
mov
cmp
add
fsubr
sub
repnz
add
rorl
push
pop
int
and
call
cmp
ja
scas
sbb
cmc
add
add
rolb
push
inc
inc
and
imul
in
xor
jecxz
testl
jp
jl
addr16
inc
adc
xor
sbb
add
sbbb
pop
insb
decb
push
imul
xchg
in
daa
push
mov
push
mov
add
hlt
lods
test
push
subb
cmp
mov
enter
mov
sub
test
nop
pop
add
cmp
out
add
jmp
add
aas
rolb
fnstcw
sbbb
stc
outsb
xchg
add
shll
pop
mov
std
inc
push
xor
stos
orl
enter
rcrl
add
addr16
into
dec
sub
add
loop
inc
jl
cmp
mov
xchg
mov
and
cld
in
loopne
mov
cmpsl
popf
or
cmpsb
add
dec
xchg
push
dec
fmull
sbb
inc
mov
adc
mov
aaa
sub
call
add
add
pop
popa
sbb
data16
jne
cmp
testb
mov
xchg
outsl
mov
loopne
loop
sbb
mov
es
mov
or
negb
add
add
add
mov
sub
leave
lret
cmpsl
pushf
add
ja
jecxz
mov
test
sbb
cmp
jl
add
mov
shrl
dec
or
sbb
fadds
push
jl
sub
mov
lock
aas
cmpsb
pusha
imul
inc
mov
push
jmp
nop
and
xchg
add
icebp
push
and
pop
nop
mov
cmp
add
xchg
xorb
xchg
call
xchg
in
fsubrs
inc
jo
lcall
or
aas
push
cmpsb
andb
imul
or
add
fdivrl
jne
add
and
out
add
fidivrs
cs
insb
fdivs
or
pop
ds
out
sub
leave
outsb
mulb
inc
fcoml
add
cmpsb
mov
inc
sbb
mov
lahf
bound
xor
insb
imul
repnz
sub
inc
sub
jecxz
add
add
notl
add
jae
add
sbb
fbstp
enter
outsl
lds
add
aas
add
dec
cmp
and
cmp
add
popl
adc
inc
jmp
lcall
into
enter
pop
dec
cmp
mov
and
aam
xorb
add
ret
cwtl
push
ljmp
inc
adc
cld
mov
ds
mov
lahf
out
adc
in
lahf
sbbb
loop
shll
jb
xor
add
pop
push
pop
sub
aam
loopne
cltd
mov
sbb
mov
enter
cwtl
ds
add
out
and
push
adc
sar
and
mov
mov
add
in
inc
inc
push
lods
add
sbb
div
testb
js
cmc
dec
scas
dec
addb
pop
xchg
adc
cs
add
stos
das
xchg
pop
mov
test
pusha
loope
add
fnsave
lret
mov
jno
or
adc
iret
pop
jns
mov
ffreep
addb
jl,pn
nop
subb
push
jbe
mov
adcb
orl
cmpsb
pop
scas
je
nop
sub
mov
jns
jbe
add
mov
push
and
out
mov
dec
aad
stc
xor
and
js
jno
jo
or
fs
roll
data16
aad
adc
adc
mov
fcmovbe
popf
outsl
cltd
scas
add
mov
push
lds
or
add
inc
adc
js
into
cld
add
xchg
cld
jne
mov
adc
xchg
std
mov
sub
sahf
and
notb
add
inc
stc
mov
sbb
dec
pushf
leave
xlat
mov
push
and
mov
je
imul
mov
and
inc
sub
cmpb
xchg
int3
subl
push
sub
xchg
insl
adc
inc
mov
or
inc
inc
mov
add
add
jb
cmpsb
loop
jbe
xchg
push
loopne
call
sahf
popl
dec
fwait
mov
cmc
loop
add
mov
loopne
and
add
mov
cmp
pop
shl
add
lea
mov
sbb
add
mov
xchg
subb
addl
stc
xor
mov
loope
imul
aas
xchg
cmpsb
mov
popf
dec
ja
add
mov
sub
sub
mov
lock
cmp
ss
add
test
out
es
subb
enter
rcr
cltd
cmpsb
push
pusha
cmpsl
mov
fcmovnu
cli
push
cmp
out
add
fstl
aaa
or
fnstcw
xor
mov
push
movsb
shrb
xor
xchg
add
cltd
stos
fnstcw
add
add
shll
enter
scas
lret
mov
jmp
jp
push
mov
setl
cltd
or
dec
inc
add
popa
pop
stos
iret
mov
out
test
xlat
out
popf
imul
and
je
add
sub
add
sbb
aad
lock
mov
rorl
and
movsl
push
cld
cwtl
adcl
mov
fscale
dec
cmp
xor
testb
mov
call
ret
xor
rorb
jb
andl
scas
inc
movb
and
and
adc
cmpsb
out
add
decb
cmpb
nop
or
and
das
jno
push
test
rcrb
push
add
sub
jp
lods
add
div
mov
in
mov
test
mov
add
adc
or
fisubl
aam
dec
add
jns
sub
loop
add
mov
add
xor
call
pop
je
pop
xchg
xor
and
push
dec
jle
sbb
out
hlt
testb
jle
add
arpl
mov
pop
sbb
stc
mov
mov
xor
cld
xchg
mov
pushl
in
mov
adcb
pusha
mov
add
jge
and
scas
xor
sbb
mov
test
push
jmp
pop
xorb
jo
xchg
inc
and
test
xchg
pop
xor
jno
sbb
add
pop
leave
push
in
inc
jne
std
cwtl
adc
pop
dec
sbb
adc
jo
add
or
pusha
sub
adc
lea
ret
pop
and
adc
sbb
loope
jg
rolb
or
push
xchg
lds
mov
sub
cmp
pop
ja
xchg
mov
add
inc
in
add
popa
add
out
xor
add
sbb
xchg
add
or
data16
sbb
push
sub
xchg
iret
shrb
aad
clc
jnp
sub
sub
and
add
sbb
jbe
sbb
sar
js
aaa
add
dec
inc
jnp
lea
pop
clc
add
lock
pop
xchg
repnz
xor
or
jno
sub
push
sub
cmp
aaa
leave
sbb
dec
sub
ret
mov
insb
ret
sbbl
jns
pop
mov
jae
add
je
testb
cld
gs
push
cmpb
xchg
bound
cwtl
add
call
pop
leave
or
sub
sbb
push
or
mov
sub
in
mov
and
jle
xchg
lock
das
insl
pop
pop
cmp
int3
mov
enter
sub
mul
and
cmp
insb
testb
mov
adc
jo
je
mov
in
js
add
out
dec
outsl
imul
add
cmpsb
cmpsl
popf
nop
ljmp
sbbb
add
test
sub
sbb
rcrb
or
pop
and
lock
add
sbbb
jo
xchg
nop
push
inc
cmpsl
mov
xchg
adc
cmc
and
test
xor
jle
xor
add
outsl
insl
clc
sub
dec
add
and
add
jo
fbstp
and
imul
enter
jns
jnp
sub
add
std
arpl
cmp
cmpl
test
mov
int3
sub
xchg
shrb
push
sub
nop
inc
add
iret
fstpt
inc
pusha
inc
push
pop
movsl
sub
cs
cmc
or
fildll
into
std
stc
push
mov
push
inc
pop
mov
add
out
mov
add
movsl
cwtl
sbb
repnz
orb
xlat
lcall
popa
add
pop
addr16
lock
mov
or
aas
daa
add
mov
fsts
loop
incb
imul
popf
jl
adc
mov
or
push
add
jge
lods
inc
outsl
shrl
jecxz
inc
insl
cwtl
aam
scas
dec
std
fwait
dec
addr16
shlb
fdivr
adc
in
mulb
das
andb
pop
rcll
ret
push
lret
sbb
cmp
mov
aam
icebp
ret
push
xor
test
add
lods
test
hlt
decb
leave
clc
ljmp
or
psllw
sahf
mov
and
add
push
shl
lods
aam
fcmovnb
push
add
hlt
sbb
and
sub
add
xor
fwait
test
addb
in
addb
roll
xchg
and
sbb
shr
stc
cld
loope
dec
inc
and
mov
ds
xor
jecxz
cmp
push
push
hlt
pop
mov
mov
jo
arpl
mov
dec
mov
inc
bound
and
and
lock
ss
jmp
mov
mov
adc
xchg
sub
add
and
dec
add
sub
mov
mov
and
aas
jge
pop
jg
add
stos
pusha
pop
xchg
bound
lock
pop
xor
push
je
sarb
imul
popf
add
loopne
mov
add
cmpsl
mov
xchg
inc
imul
xchg
test
test
movsb
pop
mov
xor
mov
add
sbb
cli
add
icebp
nop
jno
adc
xor
add
lahf
vaddss
roll
xchg
pop
mov
jg
sub
mov
fdivr
or
inc
out
xchg
negb
aam
mov
xor
nop
push
add
cmp
shlb
jnp
jp
add
sub
test
repz
mov
fisttps
inc
and
add
pop
imull
loopne
clc
dec
in
add
add
jae
dec
xor
adc
mov
out
add
xchg
add
test
cmp
sbb
stos
mov
sbb
arpl
or
xor
in
and
fwait
dec
out
adc
push
add
cmc
inc
add
leave
ret
push
jg
add
scas
std
xchg
mov
mov
mov
adc
adc
icebp
clc
in
out
rdtsc
mov
inc
add
jne
cld
sbb
add
aad
jmp
mov
pop
pop
push
and
sbb
lret
inc
or
pop
pop
les
cli
jns
shlb
cli
add
jno
cmpsl
xchg
popa
cmp
imul
jbe
ljmp
mov
movsb
movsl
mov
lock
push
lahf
and
lea
fcmovne
cmp
mov
or
and
inc
test
jae
pop
ss
cmp
aam
jmp
add
mov
test
pop
jo
or
sti
push
adc
add
movsl
sbb
loopne
loop
xor
sub
or
push
jo
out
xchg
mov
dec
je
pop
dec
push
sbb
mov
daa
pop
lret
add
adc
pop
add
shl
sbb
test
add
cmp
das
or
sbbl
push
cmp
add
out
lahf
pusha
xchg
jecxz
add
shl
je
cmp
bnd
push
mov
bound
mov
or
dec
addb
sbb
mov
sub
call
push
lods
add
orl
mov
jge
xchg
lea
add
mov
xlat
andb
lcall
aas
fcoml
jmp
clc
or
xor
add
pop
mov
rol
pop
xor
cmp
in
or
and
mov
mov
push
add
sbb
fwait
ret
pop
rcrb
jg
leave
or
add
xor
loopne,pt
sub
or
xchg
xchg
push
inc
jle
pusha
outsb
aam
aas
ja
dec
xor
rcll
mov
add
mov
xor
arpl
inc
inc
bound
pop
lods
lds
rolb
push
mov
lea
inc
add
pop
popf
add
dec
pop
jb
lcall
cmp
dec
mov
int3
xchg
loop
push
or
pop
jp
add
aaa
pusha
cli
out
ret
add
andb
push
or
movsl
add
test
pop
inc
insb
add
push
shl
pop
pop
orl
mov
dec
mov
cmpsb
movsl
and
add
imul
test
enter
lock
and
test
movsl
cs
sbb
adcl
cld
into
popf
mov
fst
inc
call
xchg
push
or
imul
push
sbb
out
not
sbbl
push
inc
adc
add
dec
ds
scas
lds
add
inc
and
aad
pop
sub
fildl
movl
sub
nop
and
inc
dec
adc
push
push
add
fiadds
insl
add
or
dec
pop
movb
imul
push
jbe
mov
in
enter
sahf
cli
xor
enter
add
lods
sbb
hlt
add
cltd
dec
sarb
dec
in
sti
int
pop
jl
or
aaa
add
mov
dec
incb
sbb
in
sub
out
add
ss
jle
cmpsb
dec
jne
adc
ds
pop
ja
dec
addr16
loopne
movsl
mov
adc
mov
inc
cmp
cmp
dec
add
cld
out
pop
inc
pop
nop
dec
xor
add
dec
aas
push
int3
cmp
andb
stc
and
mov
orb
push
xchg
adcb
and
sarb
pusha
xor
aaa
xchg
and
aas
insb
lea
add
stc
test
cwtl
mov
and
loop
add
cmc
jmp
mov
jo
xchg
ret
aad
cs
xor
aaa
imul
arpl
or
ficoml
xchg
xchg
and
inc
add
add
lea
pop
lock
cli
shlb
lcall
lock
out
and
push
inc
push
in
cmp
mov
sub
outsl
pop
dec
loope
push
and
lea
mov
add
jnp
mov
adc
add
pop
testl
jnp
or
sub
push
rcrb
cltd
pop
mov
add
inc
pop
out
iret
add
xor
aas
pop
cmp
adc
scas
mov
push
or
dec
push
mov
jns
cwtl
cltd
mulb
sub
lods
mov
add
and
cmpb
jns
add
insb
xchg
pushf
mov
lods
cmp
out
mov
adc
jle
shlb
jae
icebp
dec
adc
inc
mov
jbe
jo
dec
xor
idiv
movsl
mov
cld
pop
and
xor
add
or
rol
dec
dec
and
pop
out
add
lahf
cli
and
sub
lret
cmp
dec
lock
insl
leave
aam
pop
sub
int
out
cmpsl
sbb
sub
leave
test
sbb
ja
cmpb
jp
fadds
sub
mov
subb
pop
push
fiadds
sbbl
and
cmp
fstpl
movsb
in
and
fistps
or
int3
hlt
nop
pmulhw
mov
in
daa
inc
xchg
lcall
inc
mov
pop
loope
loopne
or
mov
cli
mov
sub
push
add
cwtl
out
push
sbb
ret
repz
add
mov
imul
and
mov
push
es
ret
adc
mov
and
add
push
inc
pop
das
adc
insb
stos
and
adc
adc
and
fwait
jo
and
inc
mov
add
data16
adc
cmp
mov
sbb
andb
lods
mov
sub
xchg
sahf
push
push
sbbb
jg
jp
jnp
mov
movl
jecxz
and
das
dec
xor
je,pt
and
stos
dec
loop
imul
jecxz
mov
addl
jae
adc
jmp
lret
jp
add
out
out
or
mov
cmpb
add
loopne
push
jne
push
inc
mov
adc
icebp
push
jo
lret
mov
lods
popf
into
pop
clc
push
arpl
ret
push
add
loope
jns
add
inc
cld
shr
add
daa
lods
lret
sub
xlat
sbb
adc
ja
call
pusha
out
jge
and
sbb
lcall
dec
adc
push
cmpsl
loope
incb
xor
push
pop
insb
fmuls
or
add
aas
outsl
iret
jns
mov
push
xchg
movzwl
dec
bound
add
lods
ss
push
dec
add
lret
xor
cld
ret
add
and
mov
cmp
inc
scas
and
adc
pusha
and
jb
int3
xchg
add
inc
insb
in
cs
sti
pop
lret
popa
mov
pop
dec
push
outsb
pusha
and
mov
test
push
sbbb
jae
loop
jl
std
add
gs
jb
rolb
scas
je
sahf
pop
and
add
mov
in
cmp
pusha
adc
pop
or
in
aad
clc
int3
mull
insl
or
test
popa
rorl
cld
dec
jne
xchg
add
inc
adcl
mov
addb
js
add
je
out
sub
pop
psrad
sub
ljmp
xor
or
jp
or
in
add
adc
jnp
sub
rcl
out
aas
rol
in
rcrl
pop
scas
rcrb
fdiv
std
cmp
les
rclb
add
rcrl
imul
adc
out
popf
int
pushf
idivb
pushw
hlt
and
das
dec
pop
pop
popa
loope
adcb
push
add
or
loop
idivb
add
inc
jecxz
insb
hlt
femms
pop
lahf
cmp
jmp
xlat
or
push
add
and
jecxz
xchg
movb
ds
sbb
js
mov
mov
dec
add
sbb
xor
in
iret
out
lods
pop
movsl
mov
rcll
cmp
pushw
cltd
xchg
and
xchg
adc
jp
pop
push
mull
std
push
mov
add
mov
daa
add
inc
push
xchg
jmp
inc
xchg
sar
nop
xchg
lods
jge
cmp
sub
outsl
test
mov
enter
shrl
pop
push
sub
add
and
fwait
scas
add
ja
fprem
stos
lret
enter
jns
add
xor
jp
cmp
mov
mov
outsl
add
dec
pop
jp
nop
out
test
mov
test
sarl
sahf
add
push
sbb
in
add
fldcw
or
sar
add
mov
mov
mov
mov
push
outsb
sbb
flds
arpl
movsl
mov
dec
mov
adc
xor
iret
loope
pop
push
xchg
or
push
or
adc
call
pop
pop
add
sti
cmp
add
into
mov
jl
sub
addb
jnp,pn
adc
out
push
add
out
inc
cmpsl
addl
xorl
in
pop
shlb
add
popa
cld
insl
sarb
ret
push
lock
xchg
jp
scas
aam
mov
lcall
cmovae
push
rolb
mov
hlt
call
leave
out
sbb
mov
and
orb
pop
and
enter
cmp
gs
xchg
inc
hlt
push
in
fcomps
jbe
add
je
push
jae
lock
loopne
push
or
ret
ja
lea
or
hlt
repz
adc
jne
repnz
jae
add
dec
test
add
lret
xchg
push
xor
das
xchg
stos
add
xor
cwtl
add
std
fmul
imulb
add
movsl
popf
dec
add
sub
adc
xor
in
adc
popf
add
repz
jne
and
jo
rclb
lods
cltd
add
mov
out
mov
sbb
dec
push
pop
dec
clc
or
arpl
cmp
idivb
aam
mov
popa
pop
push
mov
add
mov
lods
test
jg
loope
outsb
push
lods
add
cwtl
push
pop
movsb
test
mov
inc
test
add
fwait
add
nop
int3
pop
movsl
scas
mov
inc
add
sti
adc
sub
push
ror
xor
mov
stos
cs
sub
data16
add
nop
mov
addb
fs
add
pop
and
inc
sbb
adc
xchg
int3
jmp
cltd
mov
mov
int3
cli
shrb
inc
rcl
test
popf
mov
int3
nop
push
ret
jmp
popa
movsb
xlat
sbb
sbb
pop
call
mov
je
cmc
imul
push
arpl
cs
pop
xor
iret
sbb
lret
jnp
sbbl
mov
push
sub
in
shlb
icebp
mov
enter
fnstenv
xchg
mov
pop
jg
jle
or
lcall
es
add
dec
jp
add
pop
pop
cmc
sti
scas
popf
mov
mov
movsbl
xchg
sbbb
push
add
mov
push
adc
add
sbb
push
pop
sub
cmp
lock
test
add
add
cmp
outsl
add
adc
out
xchg
std
add
lods
push
cmp
mov
fdivrl
adc
hlt
pop
in
mov
mov
adc
sbb
push
push
cld
pop
add
fnstcw
pop
pop
test
fsubrs
ds
sub
or
mulb
jo
jbe
in
out
sahf
push
mov
hlt
cmp
adc
enter
mov
add
pop
cmp
fsubl
jp
and
and
cld
pop
and
jl
inc
clc
add
movsl
orb
xchg
push
mov
sub
test
dec
jns
xor
cwtl
push
mov
xor
dec
movsb
mov
scas
scas
cld
mov
sbbb
pop
fadd
test
mov
add
mov
aam
sbb
pop
push
fbstp
in
mov
add
cmp
imul
and
adc
into
mov
fcomps
xchg
mov
sbb
push
push
inc
hlt
cwtl
or
mov
pop
cmp
add
dec
out
mov
cmc
add
fldenv
sbb
xchg
mov
mov
loop
add
sbb
pop
das
stos
push
or
pushf
and
fnstcw
les
inc
or
add
sub
call
jle
mov
lods
jae
mov
push
pop
xchg
pop
leave
nop
insl
mov
pop
aaa
hlt
mov
popa
clc
incl
in
rorl
add
mov
hlt
subl
sub
xchg
insl
add
push
jecxz
mov
and
lock
pusha
xchg
xor
mov
inc
xchg
and
mov
add
fisttps
jne
sahf
ja
popa
push
add
out
push
dec
pusha
daa
push
xchg
pop
push
or
cmpsb
mov
lar
cmp
nop
xor
and
jge
add
mov
add
daa
mov
shr
xor
and
push
cmp
rclb
mov
and
inc
jo
mov
call
xchg
or
in
inc
cmpsb
aam
add
dec
clc
adc
cmc
adc
add
and
fwait
lret
bound
sahf
popf
sub
clc
sub
and
sti
push
sbb
add
xor
dec
mov
and
add
jecxz
addl
pop
dec
or
fnstenv
inc
jp
repz
inc
dec
pop
mov
mov
cmc
or
add
clc
sbbl
jo
adc
loop
rorb
jne
xor
sub
sub
add
mov
pop
push
inc
lods
dec
xor
inc
stos
add
dec
jo
or
sub
sbb
data16
pop
mov
xchg
popa
daa
adc
xchg
pop
and
dec
in
sbb
andl
lret
jns
jno
adcb
add
and
ss
add
fwait
jg
and
inc
adc
add
aad
push
mov
rolb
mov
repz
fcoms
inc
jmp
in
cmp
nop
js
push
mov
popf
add
sbbl
cs
scas
jl
icebp
js
mov
popf
and
imul
xor
push
xor
push
sub
cwtl
rdmsr
push
adcb
jbe
flds
xor
pop
mov
add
clc
es
fbstp
add
into
gs
movsl
imul
xchg
and
loopne
imul
add
mov
cwtl
mov
mov
loope
xor
aam
sbb
out
dec
pushl
add
daa
xor
mov
add
mov
pop
sbb
push
nop
movsb
add
xchg
fmulp
mov
aad
xchg
bound
loope
in
je
nop
lods
cs
jno
push
loop
dec
add
test
push
add
fs
and
inc
pop
scas
add
cld
es
add
loop
test
mov
jg
mov
ljmp
addr16
push
push
push
xchg
xchg
jmp
jne
sbb
xor
and
fs
ja
cwtl
cmp
sbb
inc
add
xchg
adc
dec
in
pop
pop
aas
or
pop
sbb
pusha
or
pushf
jl
or
xor
pop
je
ficoml
notb
cmp
cmp
or
incb
jl
pop
add
xchg
pusha
out
push
jno
mov
fs
push
popa
add
add
popf
adc
rclb
push
leave
es
add
push
pop
mov
fucomip
fscale
inc
xor
adc
jno
mov
cmp
pop
push
add
xchg
mov
nop
stos
xchg
add
lods
test
push
scas
adc
mov
xchg
mov
add
or
fs
ljmp
enter
or
sbb
movsl
loope
push
push
mov
mov
hlt
add
inc
dec
shlb
or
add
xchg
rolb
imul
pop
add
jo
aam
cld
dec
mov
dec
mov
inc
xor
invd
hlt
or
mov
addr16
je
fidivl
xchg
push
dec
and
pop
mov
add
adc
out
jb
arpl
or
push
xchg
xor
sub
popf
push
stos
clc
adc
add
iret
hlt
inc
push
sub
sub
cld
jmp
and
mov
cli
out
out
add
sti
or
add
stos
mov
or
push
pop
out
push
add
clc
popa
add
test
iret
call
mov
sbb
mov
into
ret
inc
cvtdq2ps
hlt
loopne
imul
or
push
or
mov
sbb
pop
sbb
adc
push
push
push
rorl
fistpll
cltd
sbbl
mov
pop
pop
stc
add
imul
dec
aam
add
push
jae
ds
testb
movsb
push
outsl
xor
inc
xchg
push
sub
xchg
mov
mov
mov
or
lock
clc
add
std
push
shlb
push
cli
lods
or
lret
rclb
adc
mov
push
mov
push
sbb
in
sbb
add
and
cmpl
loopne
mov
in
sbb
notb
out
lock
jnp
mov
rol
fisubl
or
mov
scas
pop
aam
sbb
adc
jl
pop
and
cmp
dec
inc
xchg
jle
out
jnp
add
push
jmp
add
ret
sbb
sarb
in
add
jp
pop
pop
add
in
push
aam
or
fldt
jp
jmp
push
add
mov
cmpsl
enter
sarb
xchg
push
add
lods
inc
and
stc
push
cmp
mov
and
xchg
add
jge
jns
adc
andl
and
sbb
pop
loope
ds
pop
push
pushf
add
push
pop
lahf
jns
sbb
mov
add
push
pop
cld
movsb
test
xchg
scas
lcall
and
mov
out
pop
std
jle
loopne
xor
lods
jb
jnp
jl
and
repnz
jle
push
pusha
pusha
mov
int
mov
repnz
push
clc
scas
nop
xchg
and
dec
jmp
cmp
subl
ds
add
imul
sub
or
lock
dec
add
dec
and
add
cmc
add
xchg
pop
rolb
add
inc
jb
out
outsb
sbb
shr
les
push
cltd
stos
ds
sbb
cmpsl
int
or
nop
lcall
mov
insb
loopne
or
push
add
idiv
lea
add
xor
cmp
add
and
das
push
daa
movsb
std
mov
insb
addr16
pushf
sbbb
sub
fidivrs
aaa
pop
icebp
ret
and
test
jbe
mov
add
xchg
inc
or
aam
xchg
adc
and
xchg
or
mov
iret
mov
in
inc
add
pushf
ret
jp
adc
test
pop
iret
jecxz
cld
int
lock
mov
incl
adc
xor
adc
pop
dec
xchg
nop
cmp
and
push
pop
add
and
rcr
xor
jnp
dec
or
sbb
mov
pop
lods
adc
popa
mov
fcomps
adc
inc
andb
movsb
add
xor
push
and
pop
aaa
into
sbb
aam
out
add
out
mov
cmp
pop
imul
xlat
mov
fwait
aas
lea
mov
push
jo
pop
inc
inc
lods
mov
inc
repnz
sub
add
push
mov
jne
pop
fwait
popa
dec
add
fisubrs
sub
inc
ror
push
popf
add
sbb
lods
dec
iretw
push
repz
add
je
mov
and
pop
xor
lahf
outsl
jbe
daa
sub
pusha
mov
push
ret
pop
les
mov
clc
fs
movl
imul
call
xchg
xchg
sub
mov
mov
pushf
add
rcrl
sbb
sbb
aas
shll
add
int3
shll
sbb
lods
movsl
addb
jle
in
mov
add
sbb
sbb
push
lock
movsl
push
add
adc
shll
mov
jbe
pop
jmp
test
push
mov
add
int3
or
xchg
push
ret
mov
mov
movsb
divb
jae
mov
mov
repz
dec
loop
enter
push
jle
push
cmp
pop
xor
jecxz
das
or
push
sub
mov
faddl
dec
cmp
lahf
pusha
popa
pop
mov
lret
jecxz
ljmp
push
push
or
add
and
push
rorl
sbb
or
fimuls
rcrb
sbb
adc
push
cwtl
lret
push
xor
dec
cmp
call
mov
add
push
subb
cmp
xchg
les
out
pop
jg
gs
pop
sub
daa
mov
loopne
fs
fdivr
mov
out
cmc
push
add
pop
sbbl
addr16
fwait
das
jmp
rolb
insl
jno
mov
xor
jb
pop
sbb
dec
adc
push
out
aad
mov
pop
mov
or
mov
insb
xchg
add
inc
in
test
decb
sub
cmpsb
pop
mov
cwtl
scas
sub
lods
inc
xchg
sub
dec
xchg
add
cmc
lds
mov
popa
mov
bound
sub
js
test
add
fisubl
mov
jns
or
pop
iret
add
outsb
sub
inc
stc
loopne
subps
bound
nop
dec
add
pushf
lret
sub
ja
inc
rcl
scas
fmull
mov
mov
dec
out
aam
inc
and
jo
sarb
es
pop
push
pusha
add
mov
addr16
lock
sbb
aas
jns
pusha
sub
cmp
add
adc
jg
clc
je
or
dec
pop
and
add
mov
add
hlt
rolb
aas
aad
mov
test
add
sub
sbb
cli
sbb
lcall
pop
rclb
xchg
adc
dec
aad
mov
into
inc
cmp
lods
xor
fadds
adc
imul
mov
ficoms
mov
dec
cmpsl
std
add
ret
mov
xor
jae
filds
imul
add
test
data16
adc
fstps
add
ror
mov
add
or
cmp
enter
ficompl
mov
cmp
inc
pop
or
imul
sahf
out
fistpll
add
sbb
mov
test
mov
mov
mov
scas
fisubl
popf
sub
jo
add
add
outsl
mov
aam
and
pusha
imul
push
outsb
negb
or
stc
leave
add
and
dec
mov
ds
add
add
xlat
ss
and
mov
dec
divl
push
pop
or
rolb
inc
data16
cmp
add
inc
stos
adc
adc
or
fs
cmp
rcrb
jmp
notb
arpl
xor
add
pop
xor
mov
and
loopne,pt
pop
and
jl
push
mov
sbb
xchg
aad
pop
add
xlat
inc
in
aaa
enter
add
daa
adc
cld
mov
xorb
sub
cwtl
and
setae
add
xor
mov
int
fwait
lret
inc
inc
xchg
rcrb
subb
adc
xchg
adc
add
leave
inc
xchg
jo
jb
orb
xchg
xchg
out
add
or
cmp
movl
fidivrl
xchg
scas
fiadds
push
imul
mov
cmp
loopne
inc
jmp
insb
mov
into
in
add
cmc
mov
test
mov
repz
jnp
mov
dec
pushf
sbb
cmp
nop
cmp
add
imul
adc
add
push
adc
push
pop
mov
cmp
xchg
add
aaa
lret
inc
stos
jmp
arpl
sbb
into
popa
rclb
add
es
push
add
mov
or
cmp
mov
dec
jge
cmp
xchg
scas
mov
jb
add
fcomi
jne
add
cmp
sub
xchg
adcl
xchg
pop
test
mov
and
imul
adc
mov
mov
ds
fucom
dec
adc
xchg
add
add
inc
clc
pusha
cmp
ljmp
pusha
add
push
xor
adc
add
and
or
sti
mov
test
add
test
lahf
lock
sub
add
sbb
pushf
popl
aas
add
pop
mov
jbe
add
mov
nopl
sbb
ret
adc
ss
leave
cmp
push
sbb
jmp
or
test
cld
dec
cltd
loopne
cmp
adc
xor
int
ret
push
icebp
sub
pop
xor
mov
push
das
inc
push
ja
in
add
jmp
nop
inc
push
add
das
inc
out
mov
pop
gs
add
test
decb
rorb
cmp
add
outsl
adc
mov
ljmp
sub
fadds
in
lret
xor
fidivs
rcrl
lahf
add
add
jp
pop
add
movsb
mov
leave
mov
adcl
int
loope
xor
fistl
lcall
loop
dec
add
ret
shlb
mov
cmp
jae
jmp
scas
inc
les
std
mov
add
cs
sbb
or
cwtl
dec
shlb
inc
and
lret
xchg
fidivl
pop
mov
in
call
cld
fistl
push
dec
hlt
push
push
inc
pop
cli
adc
jnp
jns
cmp
fcmovu
inc
adc
shlb
and
imul
sbb
sbb
shr
lods
pusha
push
pop
and
stc
add
push
loop
lds
lock
sarl
sarl
jbe
call
push
cmp
aam
loopne
or
mov
repnz
pusha
or
bound
dec
or
jae
add
les
add
fs
inc
xchg
in
xchg
add
mov
ja
imul
rorb
and
push
cmp
push
fisubs
xor
jnp
test
sbbb
std
dec
pop
add
cwtl
arpl
in
add
call
add
cmpsl
xor
popf
cld
adc
sub
inc
push
sti
pop
or
xchg
or
push
cld
cwtl
xchg
popl
or
or
and
stos
xor
push
jmp
inc
mov
fsts
aam
int
jb
add
push
add
add
fistps
cmp
mov
add
add
jmp
dec
adc
imul
ljmp
rorb
ja
not
add
mov
ret
jl
lods
js
ljmp
or
mov
pusha
mov
or
push
push
or
popf
rcrb
and
xchg
push
jb
in
sbb
fadd
clc
popf
and
mov
mov
out
xlat
mov
jne
add
add
pop
xchg
add
push
test
inc
xchg
ret
sub
pop
jo
mov
adc
mov
jp
cltd
andb
ret
mulb
xchg
xlat
test
jne
cmp
sbbb
bound
inc
rcl
ds
mov
mov
popa
and
inc
xchg
mov
push
xor
shrb
pusha
push
dec
add
xorb
jnp
add
out
push
enter
cld
pusha
dec
adc
cwtl
clc
rolb
fadds
jmp
add
shlb
push
adc
mov
dec
int
dec
add
mov
mov
daa
stos
insb
xchg
rcll
mov
add
insl
add
mov
int3
add
jge,pt
mov
push
jp
and
add
or
in
int3
xchg
pop
into
mov
fstps
mov
fidivl
or
cmpsb
bnd
jmp
rorb
dec
call
add
dec
pop
jecxz
mov
fnsave
inc
sbb
jg
mov
insb
js
fdivrl
stos
xor
sbb
and
sub
add
lret
jge
popa
inc
cli
adc
stc
test
clc
push
dec
pop
sub
rcl
pop
aas
jp
cld
repnz
push
add
movsb
lock
aam
cmp
insl
lock
dec
aaa
es
decl
arpl
enter
or
out
mov
adc
inc
and
out
jge
push
push
mov
mov
dec
adc
lock
push
cmp
push
xchg
and
es
add
dec
push
cld
nop
aam
mov
arpl
sub
add
mov
lds
xor
xchg
fiaddl
in
cmpsl
and
sub
add
std
add
dec
xchg
cs
insl
int
push
mov
cltd
add
xchg
iret
je
add
aad
mov
pop
dec
sbb
mov
cmp
jb
and
dec
push
sbb
and
ja
cmpsl
push
or
inc
repz
loopne
add
jl
xchg
out
add
mov
push
or
lcall
jmp
inc
xchg
dec
inc
das
mov
mov
test
lds
push
out
dec
jle
push
sahf
push
ljmp
mov
jne
jb
xchg
cwtl
add
loopne
mov
add
and
cltd
jmp
vmread
or
ret
inc
add
add
sbb
lret
add
loope
clc
mov
inc
outsl
xor
sub
test
or
xchg
aaa
clc
scas
nop
les
add
cmpb
mov
mov
jns
mov
dec
fadds
cmpsb
mov
jb
repz
test
mov
pop
ret
sbb
shl
cs
or
add
pop
push
mov
outsl
aas
bswap
adc
in
mov
inc
jb
jo
sub
cmp
sbb
stc
add
lds
roll
add
pop
dec
dec
cltd
lret
pop
add
data16
mov
cwtl
add
stos
daa
in
pop
push
mov
push
ss
inc
pusha
lea
sub
stos
xchg
push
in
decl
rorl
cltd
mov
nop
inc
sbb
in
add
nop
sbb
dec
test
subl
cmp
xor
sub
in
cmp
rolb
jo
iret
add
cmpsb
lds
movl
adc
pop
test
sub
in
cmpsb
mov
xor
lds
jmp
xchg
test
adc
pop
xlat
or
sbb
mov
imul
orl
mov
and
rcrb
jmp
movb
lahf
bound
dec
movsb
sahf
add
add
jecxz
lret
add
ljmp
cmp
cmp
jnp
jp
add
int
pop
xor
movsl
call
jmp
push
adc
push
in
jbe
push
sbb
out
mov
addb
cmp
add
fiaddl
jno
dec
fistps
rcll
sti
push
leave
mov
in
or
add
aam
pop
pop
adc
adc
mov
in
cmp
mov
mov
out
xor
push
add
inc
dec
fists
nop
jmp
adc
scas
loop
add
scas
rcrl
cmc
sarl
mov
xchg
int3
push
test
cmp
add
inc
or
stos
repnz
ljmp
fbstp
cmp
lods
add
and
addr16
pop
loope
add
and
outsl
call
push
and
pop
ret
or
repnz
add
xor
add
cmovbe
in
add
sbb
add
add
pop
jg
cld
fisttpll
jge
insl
and
out
add
cwtl
inc
notb
movsb
fs
sub
and
dec
cmpsb
lods
add
inc
les
insl
aam
adc
push
jns
or
sbb
sub
sahf
adc
scas
inc
xor
fdivrl
clc
sbb
add
mov
xor
and
pop
shll
mov
stos
and
mov
and
pushf
inc
jo
addb
cmc
mov
add
mov
pop
mov
xor
cmp
adcb
cltd
loopne
mov
lock
add
mov
push
push
mov
pop
popa
push
std
rorw
popl
pusha
jne
sbb
add
mov
sbb
sub
sub
add
shll
icebp
xchg
pop
js
mov
lret
rcrl
ret
sub
pop
cmp
pop
sbb
mov
jmp
add
or
push
dec
jg
cmp
and
mov
repnz
dec
mov
negb
and
cmp
jmp
lods
or
andb
faddl
sub
test
xor
mov
iret
add
and
sbb
add
addr16
and
add
cli
jmp
jmp
movsl
jge
lahf
pop
and
pushf
dec
sbb
add
stos
lods
push
inc
jbe
outsl
push
push
mov
stc
mov
push
add
cs
jbe
add
pop
add
leave
push
int3
dec
popf
mov
outsl
mov
rcl
jbe
adc
xchg
sub
js
mov
xchg
add
cld
lret
hlt
add
mov
cltd
orb
addr16
xor
test
mov
xchg
adc
mov
dec
sti
push
int3
dec
ljmp
dec
xchg
shlb
lahf
or
or
out
inc
sbb
or
or
xchg
add
movsl
lds
cmp
popf
xchg
sbb
popa
jnp
or
jns
aaa
xor
adc
add
push
filds
std
pop
pop
add
xlat
mov
or
xchg
add
push
jae
stos
push
call
xchg
inc
adc
pop
jle
sbb
andl
repz
inc
fcomip
xchg
add
mov
and
addr16
mov
cltd
pop
sbb
call
stos
into
and
push
lock
mov
ret
clc
inc
dec
add
push
mov
add
add
movsbw
cs
mov
cmpb
mov
push
pop
push
add
cmp
push
jl
mov
dec
inc
fistpl
shll
ds
je
mov
nop
mov
add
cltd
add
leave
mov
adc
xchg
push
stos
xchg
ret
mov
mov
jb
je
jae
fistl
jl
movsl
pause
ds
dec
jae
or
insb
lods
and
and
xor
cmp
out
add
shl
and
add
xchg
repz
aas
lret
jno
add
lcall
aam
enter
in
push
add
nop
inc
popa
sub
fsubr
pop
jl
std
inc
sbb
aaa
inc
inc
dec
mov
dec
and
inc
cs
pop
pusha
shll
fisttpll
movsb
xchg
fbstp
sahf
or
sbb
sbb
mov
jmp
jle
xchg
mov
cmp
mov
push
fsubrs
add
pop
shll
rorb
insl
dec
imul
mov
cs
inc
fmulp
scas
and
testl
jae
aam
mov
mov
test
fadd
dec
iret
push
mov
aaa
cli
jg
lods
dec
mov
aam
enter
nop
popf
sbb
aas
adc
loope
test
cld
pop
mov
sbb
push
cmp
push
sub
fmull
daa
cmpsb
jp
mov
jb
pushf
and
add
adc
setb
flds
dec
and
andl
push
push
pop
test
or
xchg
rcr
aam
add
test
jmp
stc
bound
mov
ret
add
ret
mov
inc
mov
out
push
mov
lds
pop
add
das
cs
out
addb
and
cmp
xchg
cmpsl
mov
adc
cmc
inc
add
push
xor
jle
cmpsl
push
nop
xchg
aaa
adc
out
xor
rclb
cmp
aaa
cmp
mov
or
xchg
js
add
mov
sbb
xchg
pop
in
pop
add
adc
lahf
jmp
dec
sbbl
add
mov
fadd
addl
adc
add
outsb
lea
xor
mov
nop
pop
xor
and
addr16
add
jb
orb
arpl
mov
ja
ds
add
jb
inc
push
mov
mov
mov
push
jo
adc
shr
cwtl
push
pop
pop
sahf
mov
enter
bound
xor
xchg
add
pop
add
add
mov
in
cwtl
lock
dec
xchg
or
sbb
pusha
ja
add
lds
mov
xchg
pop
cmp
sbb
or
in
pop
dec
dec
nop
scas
sti
and
les
int3
es
sub
shrl
add
mov
mov
test
or
aas
adc
push
adc
in
add
in
cmp
add
shl
lds
inc
mov
sbb
cmpb
adc
inc
jp
or
or
shrl
push
mov
test
cs
jmp
add
in
cmp
out
ret
pusha
cld
adc
add
adc
cmp
push
xlat
pop
add
cmp
nop
push
xor
daa
cmp
push
or
sbb
dec
std
mov
lcall
adc
adc
and
jb
pop
add
fisttpll
push
fidivl
push
insl
lea
add
mov
filds
sub
imul
mov
fwait
or
add
mov
inc
subb
add
add
mov
push
sti
in
jl
int3
cmp
int3
lock
cmc
cmc
push
sarb
add
call
scas
in
mov
and
pop
in
hlt
add
shl
inc
outsb
imul
nop
push
inc
jo
cltd
adc
xor
adc
cmp
add
pop
add
fwait
leave
push
int3
add
scas
negb
add
cmp
push
cld
inc
adc
movsl
cmpsb
add
mov
xor
lahf
sahf
cmp
ret
mov
sub
pop
xor
mov
int3
ds
push
ret
xchg
rcll
add
out
dec
ja
imul
jg
loopne
xchg
sti
jbe
add
cld
in
pop
out
pusha
inc
add
rcll
push
mov
mov
mov
add
cmp
ret
ret
dec
into
out
in
mov
xchg
add
fwait
sbb
fsubrp
xor
add
xchg
inc
add
adc
sbb
adc
cli
cltd
pop
cmpsl
loopne
out
loopne
cwtl
imul
mov
cmc
lcall
add
add
lea
jmp
add
dec
xchg
lcall
push
mov
nop
imul
je
nop
adc
inc
add
push
add
pop
std
dec
xor
adc
movsb
adcb
addr16
jae
cvtpi2ps
gs
out
jle
pop
mov
pop
mov
xor
ljmp
test
sub
mov
xchg
sbb
sbb
repz
clc
stc
out
add
sar
dec
sbb
in
mov
popf
lock
add
pusha
arpl
push
inc
add
cmpsl
fwait
push
pop
xor
inc
mov
add
mov
rclb
add
jmp
gs
push
mov
psubsw
sub
pop
cltd
sbb
add
mov
clc
add
pop
dec
jbe
nop
roll
scas
xor
popa
xor
dec
outsl
daa
fsubp
test
fdiv
xchg
mov
or
sarl
mov
xorb
mov
jge
stc
ficoml
sbbb
faddl
mov
div
popa
xlat
enter
xchg
repz
lret
dec
add
lea
call
out
movsb
cmp
mov
xor
fildl
jge
mov
inc
mov
cs
mov
nop
in
aam
mov
sbb
pop
fnstcw
push
sub
add
test
cli
add
push
cmp
sbb
daa
add
cmpsb
xchg
mov
jo
add
add
dec
aad
ljmp
mov
xor
in
lods
inc
cmp
sub
or
and
fcomps
mov
fs
adc
sarl
cwtl
outsb
pop
cmp
add
scas
aas
and
add
jg
fisttpl
sbb
add
stc
mov
cmp
test
scas
lds
jbe
outsl
sbb
loop
jle
fnstenv
pop
in
cmp
stos
das
mov
call
jg
pop
outsl
cmp
add
movsb
bound
push
mov
xchg
loopne
mov
inc
mov
arpl
mov
adc
stos
in
add
call
xchg
add
cld
jne
in
adc
add
xchg
mov
add
inc
xchg
mov
es
lods
xchg
push
cltd
movsb
add
popf
sub
fs
adcb
and
xor
popf
mov
sub
into
add
popa
dec
jb
mov
popf
add
pop
test
push
andl
add
push
sti
cmpsl
lret
je
mov
fisubl
jae
test
ret
lret
lock
sbb
arpl
dec
les
and
lea
sbb
cli
add
mov
lcall
loop
add
dec
jne
es
stos
jp
add
mov
imul
test
jae
in
sub
nop
imul
dec
add
mov
inc
clc
mov
push
or
fisttpll
pop
pop
cmp
mov
inc
adc
les
sbb
add
stos
lds
int3
or
add
xchg
mov
fcomps
or
lock
loopne
cmp
cld
rclb
minps
jbe
subb
mov
inc
mov
add
mov
fwait
nop
xorb
in
addr16
cmpb
inc
popa
addb
mov
xor
inc
push
popf
dec
sbb
test
add
or
sub
mov
addb
fstps
mov
ja
cmp
aaa
add
push
mov
insb
in
jne
cmp
mov
dec
push
add
inc
rclb
add
idiv
pusha
dec
jo
mov
xor
jl
jmp
mov
add
sbb
or
out
mov
lahf
or
mov
and
fucomp
pop
adc
orl
xchg
inc
cltd
inc
pop
cld
es
adc
jae
sbb
push
mov
negb
jg
cmp
sub
pusha
mov
into
rclb
fiadds
ret
jns
rclb
push
loope
mov
sbb
ret
mov
sarb
push
aas
sbb
gs
fwait
or
jle
movl
sbb
cmp
add
mov
out
repz
mov
or
mov
cwtl
add
hlt
mov
shr
add
or
push
push
pop
pop
gs
aaa
jb
push
inc
push
add
ds
add
mov
pop
js
arpl
insb
mov
ret
mov
mov
mov
add
call
dec
in
mov
jae
inc
push
mov
decl
cmpsl
inc
and
add
or
add
and
fidivrl
cmpb
and
je
inc
sarb
jo
adc
stos
lds
popa
mov
jg,pt
add
add
leave
in
mov
cmp
inc
dec
cmp
adc
in
pop
loopne
inc
lahf
inc
call
stos
mov
and
test
mov
mov
sarb
push
jge
bswap
add
sbbl
mov
xchg
fadds
lds
sbb
adc
mov
and
jl
inc
in
mov
jns
xor
or
stos
enter
shrb
dec
mov
pop
test
adc
push
mov
add
dec
xor
push
subl
testl
mov
test
or
xor
adc
es
cmp
xor
xchg
and
or
add
mull
rclb
mov
and
add
add
push
dec
add
add
add
sbb
dec
in
test
mov
cld
incl
je
push
mov
aad
or
and
or
inc
cwtl
add
xchg
push
test
xchg
loopne
std
add
add
mov
addr16
clc
add
mov
pop
test
xchg
insb
xor
shrl
xor
jnp
daa
xchg
mov
out
test
fisubl
arpl
adc
orb
test
mov
xor
movsb
mov
dec
mov
pop
push
or
bound
sub
xchg
daa
arpl
inc
mov
addr16
mov
mov
pop
mov
leave
dec
xchg
adc
test
sub
fwait
add
es
add
xchg
adc
push
es
scas
outsl
inc
or
fs
cwtl
inc
cltd
jo
add
xor
je
push
add
in
mov
inc
subb
xchg
ret
xchg
or
mov
shlb
cltd
ret
add
xlat
enter
fs
jle
jo
mov
icebp
and
sbb
outsl
imul
inc
dec
imul
and
xor
jae
dec
add
push
int3
mov
es
data16
fwait
mov
jp,pt
repz
inc
cmp
pushf
inc
mov
mov
aam
cld
xor
add
push
cwtl
movsb
and
mov
or
in
jp
test
push
jl
push
add
jecxz
dec
jne
scas
mov
push
sub
popa
pop
je
jae
dec
push
cmp
mov
jmp
rcrb
jnp
rcrb
or
jae
add
sub
dec
add
sbb
jb
mov
and
add
fs
add
data16
xchg
add
pop
dec
loope
nopl
mov
add
or
push
sub
mov
mov
mov
and
jb
js
mov
mov
add
mov
xor
pop
cmp
sub
xchg
pop
or
js
jle
nop
dec
and
adc
mov
ret
insl
push
and
or
add
add
aam
pushf
les
mov
adc
or
jp
pushf
or
dec
loop
jno
sub
jle
add
inc
cwtl
jb
mov
filds
shlb
add
movsb
cmpsl
jae
icebp
shlb
pop
les
cltd
push
adc
mov
ret
sub
pop
jp
push
mov
mov
sub
mov
xor
movsb
stos
add
fs
adc
pop
fldenv
or
jmp
xor
xchg
xchg
dec
cmpb
add
mov
mov
add
int
popa
lods
fwait
and
popa
jo
adc
or
sub
mov
add
pop
dec
shrl
xchg
xchg
je
jbe
out
pop
push
or
sub
loopne
add
pusha
pop
jne
lret
scas
add
out
hlt
std
adc
arpl
inc
dec
fisubrl
cmp
pop
mov
xchg
cli
add
loopne
xchg
mov
outsl
and
mov
shl
adc
mov
dec
subps
lods
mov
rclb
mov
jl
int3
xor
and
out
imul
sbb
mov
out
inc
cltd
adc
xor
dec
xchg
mov
pushf
add
mov
stc
fnsave
pushf
and
or
push
push
add
sbbl
push
push
shld
popf
out
imul
push
or
andl
add
push
and
add
or
test
lahf
and
xchg
andb
cld
into
mov
jae
and
out
or
xlat
dec
mov
add
jp
push
add
ja
test
hlt
inc
cltd
rolb
adc
dec
cmpsb
stos
pop
pop
cltd
or
pop
xchg
sbb
jmp
sbb
mov
xchg
and
adc
hlt
add
mov
mov
add
outsl
mov
insb
out
push
or
or
xchg
push
aas
test
movsl
aaa
cmc
fwait
sub
push
mov
push
jo
mov
pop
aas
mov
or
mov
push
movb
pop
loop
les
fs
nop
lcall
sub
sub
stos
dec
mov
sbb
cwtl
xchg
push
arpl
mov
and
push
or
dec
call
jg
add
cmp
or
loopne
sub
xchg
repnz
clc
or
out
xor
pop
pop
in
pop
push
mov
outsl
fdivrs
sub
mov
outsb
ljmp
and
loopne
pop
mov
jg
fadd
in
je
into
xchg
hlt
pop
inc
xchg
add
inc
lret
outsl
stos
aam
pop
cmpl
add
push
cmpb
mov
add
mov
incl
rcrb
sbbb
test
outsl
stos
lods
out
sub
aaa
imul
das
add
xchg
fwait
adc
out
in
mov
mov
pop
shlb
lahf
orb
xchg
sbb
inc
add
cmp
sbb
insl
sub
adc
dec
popa
jl
int3
add
xchg
mov
popf
adc
and
add
add
sti
movsl
int3
ss
bound
push
nop
loopne
adc
sub
cwtl
pusha
imul
mov
lock
add
lret
xchg
fdivs
xor
add
jp
mov
call
dec
lods
out
mov
aad
shlb
dec
xlat
call
loop
fstpt
xchg
enter
fcmovu
hlt
mov
mov
lcall
iret
int
add
fidivs
fidivl
stos
inc
adc
add
mov
out
rcr
pushf
test
or
inc
xor
fildll
mov
push
add
adc
push
out
jle
icebp
cmp
mov
add
adc
scas
loope
inc
inc
xor
mov
jmp
inc
or
xor
rolb
jge
xor
and
rcrb
jl,pn
add
test
mov
out
sbbl
add
jmp
push
inc
add
push
dec
adc
rcrb
push
pop
cld
fimull
xor
push
cmp
and
loop
sbb
sti
or
cmp
lods
add
stos
fdivrs
sbb
lfs
jp
dec
mov
or
mov
mov
insl
jecxz
add
add
insb
outsb
cld
inc
std
mov
xor
stos
push
sbb
jnp
inc
pusha
mov
lock
add
add
mov
iret
ror
sub
rcrb
lret
repnz
xor
xchg
inc
adc
dec
dec
and
shll
cmpsl
mov
out
jle
jg
add
sbb
jne
ja
add
test
cmp
lret
adc
push
loopne
add
js
mov
xchg
add
mov
mov
adc
mov
mulb
stos
pop
or
push
xor
fmuls
push
repnz
movsl
ljmp
fwait
and
add
cli
and
rolb
lock
sub
push
pop
cmpsb
testb
dec
lock
mov
add
inc
adc
push
xor
jno
lods
jecxz
push
push
mov
je
jne
add
inc
xlat
fwait
pop
pop
mov
imul
adc
shlb
leave
mov
or
push
in
rolb
cld
push
pop
in
pop
push
jp
add
mov
push
es
push
pusha
cmp
in
add
adc
cmpsl
ficompl
stc
add
cmpsl
das
cmp
and
inc
xchg
pusha
pusha
addr16
aad
fiaddl
pop
fstpt
jnp
rclb
mov
mov
adc
push
cwtl
js
add
repz
pusha
lds
inc
rcll
insl
aad
fcomip
arpl
sti
jge
jb
aas
cwtl
add
fidivrl
test
xchg
insb
cld
enter
jb
stc
bound
xchg
and
adc
je
mov
jbe
insb
mov
add
test
ja
in
jno
push
sub
mov
add
outsl
and
push
sbb
shlb
push
add
movsl
ret
push
xchg
and
xor
push
xlat
rolb
pop
stos
and
push
mov
push
out
jbe
pop
jge
push
popf
in
or
call
dec
jo
bnd
pushf
leave
movlps
addr16
inc
cmp
push
xor
cmp
in
loop
scas
mov
jne
loope
jae
adc
add
sbb
xchg
add
cwtl
add
push
mov
sti
push
lods
inc
fcoml
add
sbb
sbb
or
dec
insl
pusha
inc
add
leave
lods
mov
test
mov
push
sbb
gs
fiadds
mov
push
mov
add
fildll
push
jo
and
bound
or
xor
xor
and
das
add
lea
add
shlb
rcrb
pusha
int
icebp
ds
leave
pop
aad
add
loopne
loop
stos
negb
ja
add
push
daa
xchg
xor
jae
icebp
mov
lock
mov
sete
cmp
and
je
pop
adc
int
ret
pop
cmc
cld
mov
inc
ss
mov
test
popa
mov
lret
or
int3
sbb
mov
clc
cmp
dec
mov
mov
test
icebp
jnp
jae
call
and
clc
sbb
int
js
pop
adc
mov
fiaddl
loopne
fwait
pop
shll
and
mov
cmp
jge
add
outsb
gs
cmp
fcmove
dec
adcb
leave
pop
dec
push
dec
movsl
jno
xor
xchg
xchg
push
jl
mov
xchg
cmp
popa
jo
in
dec
dec
cltd
push
jbe
shl
sti
sub
icebp
cmpsb
xor
jge
faddl
ds
or
rclb
mov
xchg
test
xchg
mov
das
addr16
cmp
cld
push
or
adc
add
ret
cwtl
daa
add
cmpsl
aaa
or
test
pop
adc
nop
icebp
push
add
out
out
mov
cmp
push
dec
add
sbb
out
mov
call
cs
arpl
cmp
int3
add
xchg
push
in
add
loop
fstps
and
add
mov
push
popf
andb
mov
cmovnp
movsb
cmp
mov
mov
pusha
decb
int3
movb
daa
dec
sub
push
dec
ljmp
adcb
mov
sti
fcoms
adc
ret
or
aad
mov
dec
ret
add
ljmp
pop
pop
dec
inc
add
sarb
xchg
xchg
popa
mov
nop
push
repz
add
sbb
call
mov
inc
dec
add
pusha
clc
fcmovu
add
fadd
dec
into
push
mov
adc
xlat
sbb
movb
mov
dec
mov
int3
addl
jmp
or
mov
enter
xlat
mov
or
bnd
dec
jmp
inc
cmp
push
sbb
in
xchg
cs
movb
add
imul
add
call
aam
or
inc
outsb
push
lods
adc
xor
and
testl
jmp
mov
dec
mov
add
push
sbb
sbb
adcb
nop
pop
adc
in
and
insb
and
imul
clc
or
pushf
adc
cmp
pop
ret
mov
fdivrs
subb
aad
jno
ja
add
mov
add
mov
ret
xor
imul
and
cmp
sbb
scas
or
sub
add
sub
push
add
mov
jg
es
mov
mov
mov
call
cmp
xor
dec
xor
add
sbbl
in
cmp
rorl
sbbb
cmp
cli
movsl
xlat
adc
stc
shl
nop
popa
flds
jns
stos
daa
je
in
jle
add
fs
lock
add
nop
add
pop
cmp
add
movsl
mov
dec
cs
mov
icebp
mov
or
out
fwait
and
xchg
ffreep
shrl
add
cmp
sbb
jmp
movsb
push
add
xchg
fcmovnb
add
push
cmc
mov
add
clc
inc
lds
pop
cmp
nop
add
in
or
shl
jmp
pop
pop
mov
xchg
fistps
pop
add
add
sbb
je
sub
jne
xor
xor
lcall
adc
push
outsl
popf
rolb
fstpt
pop
pop
sarb
js
mov
shlb
push
es
in
add
push
pop
idivl
sub
add
fldcw
shr
push
mov
inc
xor
xchg
xor
mov
add
add
fildl
mov
stos
inc
loopne
loope
je
inc
leave
sahf
test
out
std
cmc
xor
scas
dec
sbb
rcll
mov
and
or
xchg
data16
das
push
mov
hlt
and
push
data16
stc
idivb
idivb
or
gs
or
or
push
arpl
adcb
mov
lods
add
mov
add
lods
test
add
sbb
xchg
sbbl
daa
outsb
pop
xor
icebp
incb
mov
lcall
les
cmp
push
and
cmc
sbb
call
imul
add
shlb
sub
mov
inc
jae
add
cltd
imull
call
aaa
mov
mov
cmp
or
jb
add
ljmp
loopne
add
adc
into
push
mov
pop
arpl
call
fadds
cwtl
ffree
or
push
shl
daa
mov
adcb
shlb
fs
in
pushf
loopne
ljmp
mov
or
cmpsl
add
jnp
call
cmp
push
add
sub
loop
inc
leave
jne
icebp
add
and
lods
lods
xchg
stos
repz
cmp
xor
enter
mov
sub
or
cli
xchg
add
jmp
lahf
adc
sub
xchg
mov
jg
adc
popa
mov
and
ret
shrl
pavgb
std
sbb
insl
xchg
push
sub
add
mov
add
pusha
adc
or
and
popf
mov
shlb
sub
xlat
outsl
push
push
add
stos
jge
mov
outsb
popl
inc
into
daa
fimull
pop
pop
add
mov
and
inc
add
pop
aam
mov
dec
xchg
pop
mov
dec
push
push
add
inc
addl
jmp
leave
pop
mov
inc
inc
sbb
inc
mov
stos
mov
jmp
arpl
leave
lret
add
test
in
stos
jmp
lock
orb
jbe
push
add
jno
jnp
add
test
xchg
push
xchg
cmp
call
mov
test
leave
sar
or
jl
pop
faddl
loopne
xor
add
cmpl
lea
mov
push
jb
call
jle
stos
movb
test
or
out
add
sbb
cmp
in
xor
mov
inc
or
add
into
dec
and
imul
sbb
mov
add
xor
rorb
js
push
fwait
scas
jbe
mov
ret
jb
cmp
inc
xchg
mov
movsl
jbe
ja
mov
add
jno
imulb
add
std
sbb
enter
push
shll
xchg
cmp
lret
std
insb
add
loop
xlat
adc
xor
je
push
push
sbbl
add
mov
pop
inc
inc
or
imul
push
rcl
pop
jbe
add
loop
cmp
add
iret
dec
and
stc
js
pop
mov
xor
add
sbb
pop
js
add
cmp
jne
add
sub
cmp
popf
mov
inc
dec
jmp
in
add
call
aaa
push
cmp
loopne
icebp
add
mov
adc
xchg
jp
jl
sbb
mov
stc
add
adc
addl
fnstcw
add
clc
mov
psrlw
rcrb
pop
test
or
or
cld
bound
mov
mov
inc
std
add
pusha
test
xchg
fs
inc
roll
arpl
iret
jne
cmp
call
and
aad
aaa
addr16
ljmp
inc
adc
inc
not
dec
push
fsubl
pop
cmp
mov
sub
or
pusha
xchg
dec
inc
xor
sub
clc
push
push
std
dec
push
in
in
add
pop
nop
push
int3
addl
mov
cli
add
or
add
je
push
insl
and
imul
test
add
clc
mov
sarb
inc
push
leave
js
add
cli
and
push
xor
sub
add
xor
jl
or
fistpl
ret
sahf
jmp
popf
fisttpll
push
mov
test
adc
out
sbb
push
or
and
sub
shlb
dec
sbb
cltd
into
sub
push
inc
pop
lds
ds
lods
mov
int3
and
testb
adc
lds
nop
insl
xchg
inc
nop
in
loope
aad
mov
fmull
and
outsb
push
and
cli
xchg
fadds
mov
mov
push
insb
imul
pop
pop
test
lret
jne
lods
incl
popf
leave
outsl
push
inc
jae
xor
cmp
movsl
mov
hlt
pusha
call
ss
js
sbb
sbb
cld
pop
jp
shll
ror
mov
push
icebp
mov
or
out
add
inc
add
insb
pusha
popa
inc
sub
mov
sbb
dec
scas
dec
shll
pop
popa
aad
sarb
cmc
fldcw
rorb
and
pushf
mov
call
mov
add
testb
or
mov
fadds
cmp
test
mov
xor
ret
fwait
jno
addb
or
lods
inc
jo
cmpsb
test
repz
pop
int3
add
repnz
lcall
cmp
les
xor
push
icebp
mov
cmpsb
test
fdiv
loope
dec
popf
ret
add
push
aam
lahf
and
adc
inc
add
jbe
and
adc
sahf
ficomps
pop
lret
adc
popf
lret
pop
jne
fstpl
sti
or
hlt
adc
aad
pop
inc
adc
loopne
and
fsts
add
and
inc
pop
out
push
xchg
inc
sarb
fnstcw
and
add
and
pop
jno
cmp
and
jmp
scas
leave
in
aad
movsb
movsb
in
inc
pusha
xor
inc
lock
mov
sbb
xchg
sbbb
sbbl
inc
xchg
mov
push
cmp
fnstenv
outsb
fsts
add
xor
jmp
ss
pop
and
sub
scas
pop
subb
inc
pop
adc
les
cmp
add
pop
cwtl
shlb
stc
cli
jmp
pop
insb
add
int
add
push
dec
call
shll
mov
gs
adcb
xor
sbb
mov
pop
es
mov
dec
add
mov
lock
mov
push
int3
xchg
push
add
inc
push
jg
adc
jbe
cmpsb
or
aam
addb
test
xor
fwait
xchg
sub
sub
and
ljmp
sub
jl
xchg
nop
jnp
shrb
rorb
push
sbb
lds
aam
fsubr
ss
jnp
add
in
insb
jp
rcrl
and
mov
adc
dec
std
fldenv
sbb
adc
pop
mov
cmp
xchg
mov
movsb
sub
shrb
lcall
gs
or
jmp
inc
cmc
out
ds
push
enter
hlt
xchg
out
xchg
push
inc
faddl
inc
dec
xchg
xor
mov
push
and
out
mov
mov
int3
icebp
inc
push
add
outsl
mov
xchg
movsl
faddl
aam
inc
xor
lea
psrlq
adc
cmpsl
iret
dec
and
fs
xor
xchg
pop
aam
fs
pop
add
bound
insl
shlb
pop
cltd
xchg
scas
pop
clc
popl
xchg
out
cmp
cmp
js
add
into
rorl
sti
mov
call
pop
scas
cltd
jge
and
icebp
xor
pop
inc
or
popa
sbb
or
mov
mov
into
fdivrl
or
mov
ja
rcr
and
mov
add
pushf
add
jne
hlt
aas
inc
outsl
sub
aad
lcall
xchg
pop
push
int3
arpl
adc
dec
push
cli
stos
add
jge
fcmove
jb
test
rcll
xchg
aam
inc
xor
adc
or
andl
mov
or
mov
es
outsl
pushf
inc
sti
sbb
mov
pop
and
pusha
jl
mov
cmp
adc
call
shlb
sbb
popf
mov
cmpsl
call
inc
int
xchg
add
mov
mov
subb
outsb
loop
add
test
fnstcw
jg,pt
movsl
inc
mov
mov
lock
add
aam
jecxz
aad
mov
mov
into
add
fbstp
pusha
sbb
pop
pop
and
and
push
sub
mov
pushf
repnz
bound
cmp
iret
cmpsb
push
push
dec
cmp
xchg
cmpsb
ds
rcl
mov
jge
mov
jbe
cmc
aas
cmpb
push
push
ds
sbb
mov
add
or
arpl
sarb
and
add
test
jae
adcb
and
lock
and
push
pushf
dec
mov
and
and
scas
mov
aas
dec
xor
xor
ljmp
pusha
adc
int3
mov
mov
sub
test
in
rclb
pusha
stos
sbb
push
push
jl
pop
xlat
fnstenv
add
call
mov
adc
push
dec
movsb
push
adc
push
lret
movsb
in
lahf
or
in
shlb
pop
mov
and
add
clc
xchg
add
repz
inc
mov
lea
add
lret
dec
ds
xchg
imul
push
xor
inc
out
fnstcw
loopne
outsb
push
fcmovnb
mov
ficompl
outsl
shll
and
add
sahf
or
sbb
cld
inc
adc
jo
cmpb
pop
add
sbb
sahf
pusha
lahf
loope
add
stos
add
add
fsubrs
or
and
les
fs
cwtl
shlb
scas
sarb
pusha
call
dec
iret
jl
and
nop
adc
orl
rorb
pusha
mov
test
sub
and
lds
pop
push
xor
xor
test
shl
mov
ficompl
addr16
add
stos
ret
push
shlb
push
popa
shlb
adc
inc
add
pop
ljmp
add
scas
dec
fcomps
shrb
dec
inc
xlat
sub
adc
push
add
xchg
dec
mov
mov
add
mov
js
ffree
mov
repz
dec
mov
test
xchg
adc
int
mov
dec
int3
ds
dec
jmp
pop
or
in
or
movsb
mov
xadd
and
hlt
stos
ret
mov
insb
arpl
xchg
inc
jle
shlb
xorb
aam
xchg
mov
xchg
mov
cmp
add
test
sbb
dec
int3
xchg
inc
push
or
mov
sbb
sub
sub
sbb
jge
sbb
push
inc
mov
fidivrs
mov
pop
sub
out
cmc
mov
sbbb
add
sti
mov
fsubrs
scas
out
insb
lods
add
jnp
bound
adc
adc
xchg
test
das
loope
xor
stos
add
lods
rorb
xchg
sbb
shl
enter
mov
addl
mov
sbb
jbe
sub
add
push
jbe
test
push
ljmp
repz
repz
nop
cmp
adc
test
mov
push
movsb
mov
fwait
repz
test
addb
jbe
and
and
call
push
pop
hlt
jo
adc
rcll
inc
lret
cmp
sbb
sbb
pop
mov
jne
leave
push
push
adc
xor
dec
mov
and
and
xor
cmp
adc
fiaddl
lcall
and
repnz
leave
and
xchg
xchg
add
js
fnstsw
add
pop
stc
cmc
xchg
cwtl
pop
sub
mov
adc
xchg
pop
jl
sahf
cld
lret
add
aam
add
movsb
clc
jle
mov
pop
pusha
mov
test
in
aad
cmp
mov
bound
add
mov
call
add
cmc
rol
pop
add
repnz
xlat
aam
push
add
jg
ret
jecxz,pn
push
add
stos
pop
lcall
inc
arpl
jnp
shlb
sub
ret
push
loopne
inc
dec
es
clc
dec
test
dec
loopne
in
shrl
cmpsb
mov
xlat
sub
adc
ja
xchg
inc
jl
inc
jno
mov
and
scas
loop
add
test
pop
add
xchg
leave
cld
aaa
lcall
inc
in
add
xor
add
add
xor
or
adc
mov
adc
insb
and
jge
ljmp
sub
in
pusha
ljmp
fs
xchg
ja
mov
repnz
xor
or
int
push
pop
mov
adc
sarl
cmp
mov
push
subb
lea
adc
faddl
push
mov
and
xor
and
mov
push
and
incb
loopne
inc
pop
xchg
sub
and
sahf
mov
subl
mov
adc
sbb
mov
push
mov
ret
loopne
mov
jle
dec
mov
mov
or
pop
lcall
xor
in
fimuls
pop
push
ret
and
pop
mov
and
push
xchg
and
bound
mov
cmp
mov
add
mov
rorl
and
shl
add
enter
out
cs
fs
aam
lea
mov
adc
xor
mov
mov
xchg
add
insl
repnz
inc
cmc
fcmove
jmp
xchg
inc
dec
add
jecxz
in
xor
adc
dec
adc
push
imul
aas
mov
cmpsl
fbld
jo
mov
cmp
daa
test
lock
imul
dec
ljmp
test
mov
cmp
and
and
push
mov
mov
mov
ljmp
push
sbb
pop
adc
pop
jge
add
jp
mov
ss
call
jge
pop
and
aad
ja
scas
ss
xor
and
mov
push
sti
in
cmp
test
push
or
je
shr
pop
inc
mov
stos
mov
dec
es
test
sub
loopne
or
in
pop
mov
sbb
in
loopne
mov
loopne
dec
mov
sub
nop
xchg
mov
adcb
and
in
lods
add
sub
andl
and
add
test
les
movsl
mov
decl
inc
jae
mov
and
addr16
into
mov
mov
cmpsl
xor
stos
pop
xorl
pusha
daa
add
add
sbb
xchg
out
jb
pop
fwait
inc
jae
loopne
jl
mov
stos
test
mov
push
das
fsubs
test
jge
les
inc
mov
jns
hlt
pop
add
pop
inc
push
add
mov
mov
inc
test
xor
or
jle
sbb
push
inc
pop
sbb
inc
cmpsb
add
adc
jmp
xor
xor
jae
push
push
lcall
sub
decl
shl
dec
ficoml
lods
sti
dec
pop
xchg
cld
das
subb
add
sbb
xchg
in
jne
add
lret
shlb
jge
push
fildll
pusha
cmpsl
ror
sahf
mov
inc
js
xor
jmp
sub
xchg
push
pusha
cmp
dec
test
cmp
add
xchg
adc
je
jbe
addb
aam
xor
insl
add
cld
inc
jbe
fs
cmc
xlat
movsl
adc
mov
push
dec
loope
mov
and
pop
outsb
inc
mov
mov
sti
aas
push
xchg
jns
jl
popa
add
pusha
jo
inc
sub
push
jno
icebp
xor
jo
dec
mov
push
nop
add
adc
das
jno
xchg
and
ja
push
sti
test
inc
push
mov
inc
jl
cmp
sbb
cwtl
cli
mulb
sti
bound
mov
push
out
adc
sub
call
pop
and
sub
das
das
jo
dec
add
xchg
mov
repz
mov
imul
add
push
mull
jge
shll
daa
xor
enter
jmp
adc
test
cmc
mov
add
dec
sbbb
jno
add
mov
in
xchg
es
mov
sbb
jge
xor
xor
pop
js
enter
sub
pusha
sub
jo
add
stos
or
sbb
mov
mov
mov
or
aad
cltd
xor
adc
pop
ss
sarb
cmp
out
jge
mov
nop
add
mov
mov
mov
mov
push
xchg
sbb
mov
shrb
iret
cmp
add
push
add
dec
mov
fs
sub
sub
jle
dec
mov
hlt
enter
aad
cwtl
add
fisttps
iret
loope
and
and
jge
scas
rorb
dec
bound
leave
test
pusha
mov
lods
pusha
jp
insl
xchg
dec
test
leave
xlat
jl
dec
add
shrl
mov
arpl
int3
mov
enter
fdivrl
je
xor
mov
pop
clc
out
loop
mov
dec
hlt
shll
loope
jecxz
call
inc
sub
pop
mov
outsb
in
test
fdivrl
aam
out
scas
mov
mov
add
std
mov
adc
inc
arpl
or
rcll
sarb
jle
popf
out
mov
xchg
sub
mov
add
iret
arpl
in
xor
cmp
push
popa
jne
dec
mov
adc
jl
mov
sbbb
imul
inc
out
cld
jb
add
repnz
or
cmpsb
dec
add
leave
pop
adc
addb
dec
mov
mov
mull
sahf
rol
mov
sub
insb
loop
xor
or
inc
ficoml
mov
clc
pop
inc
cltd
add
push
mov
shlb
clc
and
add
outsl
push
or
out
std
mov
fildl
cwtl
loop
rcpps
loopne
dec
mov
push
add
cmpl
mov
jmp
dec
add
pop
push
pushf
test
insb
stos
das
cmp
pop
xchg
jb
mov
sub
add
sbb
lods
or
xchg
cmp
popf
cmp
shlb
mov
orl
sarb
out
es
rclb
pop
pop
movl
xchg
or
adc
dec
ss
dec
mov
mov
jge
adc
xor
mov
push
sbb
sbb
pop
sbb
sub
xchg
push
nop
popa
rorl
inc
aam
cmp
cs
xchg
adc
or
mov
and
aad
ret
and
sub
sub
imul
or
or
adc
andl
sub
int3
adc
pop
add
cmc
pop
inc
les
rol
mov
mov
repnz
fiadds
fbstp
xor
call
fstps
sbb
add
mov
loopne
xor
pop
mov
cmp
and
add
sub
outsb
xchg
fs
out
pop
push
sarb
pop
add
incl
xchg
adc
push
or
adc
dec
mov
dec
rcl
lock
adc
je
addr16
dec
int3
ljmp
incb
xor
pushw
mov
aam
enter
add
push
mov
lock
sub
jo
bnd
pop
in
orb
pop
sbb
add
outsl
pop
add
xor
and
aam
mov
xchg
cwtl
imul
imul
mov
inc
dec
xchg
pop
enter
and
mov
xor
add
movsl
mov
lock
test
xchg
inc
std
cmp
fsubrl
adc
cltd
pusha
add
jnp
inc
test
sbb
cwtl
cmp
add
push
cmpsb
sub
lea
dec
lock
mov
push
xchg
gs
adc
lea
dec
inc
call
std
push
add
fsub
cmp
sbb
das
pushf
and
add
cmp
jle
add
pusha
fwait
dec
xchg
mov
aad
es
lds
pop
inc
xchg
lock
loopne
sbb
cmpb
mov
pop
jg
out
sbb
or
pop
outsl
cmp
mov
ljmp
jecxz
dec
adc
inc
xor
mov
ds
push
sti
dec
mov
and
mov
mov
sbb
inc
sbb
ffreep
pusha
rcl
adc
xor
fmull
and
sahf
add
add
lds
sbb
sub
ret
imul
nop
inc
inc
sub
in
loop
xchg
js
xchg
jmp
lret
xchg
add
push
and
loope
nop
mov
jl
xchg
sub
lds
lods
pusha
ljmp
push
fdivrs
add
lods
push
or
jp
mov
pop
stos
roll
lods
insb
add
testl
std
in
nop
arpl
pop
fs
inc
popf
inc
in
push
cltd
xchg
mov
adc
sbb
movsb
adc
sbb
mov
addr16
fwait
js
pushf
adc
hlt
clc
adc
pop
push
pop
jmp
into
rol
add
je
orb
jb
and
mov
jp
adc
movl
pop
xchg
insb
inc
pusha
bound
int3
das
fdivrs
rol
cmp
into
or
cwtl
psadbw
outsb
fcomps
mov
fcmove
xchg
adc
or
mov
lret
imul
je
xchg
jge
rcl
pusha
ror
stc
inc
jbe
pop
js
jl
inc
push
out
add
cmpsl
sti
mov
aam
pop
mov
popa
xchg
dec
scas
rcll
clc
sbb
sub
dec
xor
pop
sbb
sub
std
adc
fcmovu
xorb
inc
cmp
jge
sarb
neg
ljmp
mov
push
sbb
lds
push
mov
push
icebp
cwtl
add
sbb
fs
and
addb
xchg
dec
and
push
out
adc
lea
and
fisubl
call
scas
mov
fdivs
push
rolb
and
add
iret
dec
jecxz
add
add
push
inc
inc
adc
dec
in
xlat
inc
and
add
mov
and
mov
pusha
lods
in
jle
add
push
adc
pusha
mov
add
push
lock
shlb
hlt
or
test
mov
pop
pushf
insb
dec
xchg
nop
or
dec
adc
jge
mov
add
shr
and
push
sub
jge
call
add
sahf
lock
repnz
addl
aas
push
mov
xlat
adc
add
call
cwtl
adc
inc
xchg
jo
xlat
add
mov
jo
and
outsl
or
adc
cmp
adc
clc
pop
int
add
jns
arpl
dec
fcoml
add
sbb
or
jle
fs
mov
movsb
in
dec
insb
es
sbb
mov
dec
mov
adc
les
cmp
adc
xor
mov
mov
cwtl
in
push
hlt
mov
add
xor
mov
dec
and
enter
inc
xorl
rcrb
adc
add
adc
add
jl
inc
jle
push
xor
push
mov
js
pop
mov
xchg
mov
adc
stos
adc
add
cmpl
mov
jo
in
jge
ja
outsb
cmc
dec
ds
dec
movsb
and
and
mov
mov
inc
inc
jmp
dec
fisubs
sub
inc
mov
bndldx
adc
jns
pop
add
setb
xchg
stc
mov
mov
adc
sahf
ret
dec
add
mov
cmp
or
xchg
sbb
cmp
out
ja
inc
inc
cmp
push
or
mov
xchg
fldenv
sub
nop
mov
fsubrl
add
es
sbb
sub
add
cmovl
add
jge
loope
lods
push
sub
pop
sbb
test
pop
nop
add
stos
mov
call
cwtl
or
mov
push
xor
test
add
sub
pop
dec
insb
mov
es
rcll
aam
sbb
sbb
sub
lret
out
test
leave
push
sbb
stos
push
negb
adc
cmpl
movsl
imul
fisubs
xchg
pop
xchg
add
push
nop
or
dec
jg
add
in
and
add
xchg
add
push
jns
add
jl
int
xor
pop
add
fldl
pop
push
mov
stc
into
jo
pop
xor
popa
clc
sub
sbb
add
decb
pop
dec
pop
mov
sarb
es
lods
xchg
and
fsubrs
mov
cmp
arpl
mov
push
movsb
adc
outsl
mov
cmp
mov
cmpb
imull
adc
jl
mov
js
sub
jbe
xor
add
xlat
jmp
daa
icebp
out
shrb
js
test
inc
lods
add
mov
add
xchg
or
pop
jp
push
aam
daa
push
add
jnp
lcall
hlt
jb
pop
sub
add
mov
sbb
sbb
stos
push
xor
fdiv
xchg
xchg
nop
out
int
push
pusha
into
mul
rolb
xchg
cmp
mov
mov
jl
imul
add
mov
repz
fidivs
outsb
shlb
aam
ds
mov
adc
int
popa
fwait
cmp
mov
jmp
push
loopne,pn
pop
adc
xor
add
testl
in
stos
ja
mov
pop
mov
add
shrb
pop
xchg
in
rcr
add
dec
aaa
into
out
dec
faddl
outsl
xchg
popa
cmpl
mov
fcmovnb
shr
push
mov
mov
mov
sub
scas
imul
es
rolb
add
add
pop
mov
add
cld
nop
hlt
into
fs
jle
add
sub
or
cwtl
adc
sbb
rolb
ja
hlt
rcll
jno
pmaxsw
push
add
inc
push
mov
cld
imul
adc
jecxz
and
add
cmpsl
lea
repz
cmp
add
pop
and
inc
sbb
mov
sub
fistps
add
inc
loop
add
inc
int3
and
inc
adc
ds
xchg
cmp
add
pop
call
adc
add
sbbb
dec
data16
pusha
mov
xor
fidivrs
movsb
pop
add
aas
or
add
dec
sti
imul
push
adc
or
and
dec
xchg
push
ljmp
cmp
adc
into
inc
cwtl
adc
adc
lock
push
fildl
pop
in
mull
roll
das
cmpb
les
shlb
push
and
push
mov
push
mov
add
mov
and
mov
jb
je
in
inc
test
testb
aam
sti
and
call
add
loopne
mov
dec
mov
adc
mov
add
push
push
pop
inc
cs
js
add
add
xor
rcrl
and
add
cmc
aam
pop
dec
cmp
add
jo
push
mov
push
enter
test
scas
inc
rcrb
movsl
test
add
mov
cmp
fcompl
imul
add
or
incb
sub
jns
out
push
mov
xor
lcall
push
adc
mov
or
adc
stos
pop
add
add
rolb
fmuls
loope
lcall
addr16
leave
pop
rcl
or
outsl
imul
insb
fmuls
xor
add
out
or
jno
call
push
mov
push
adc
das
mov
adc
mov
in
sub
xor
inc
and
cmpsb
cmp
xchg
or
bound
xchg
mov
push
lret
sub
dec
mov
add
in
test
pop
call
mov
pop
inc
mov
cwtl
lret
neg
ror
les
add
dec
out
mov
inc
push
jbe
jp
mov
outsb
bound
add
cmp
xor
pop
fsqrt
stos
adc
lret
and
add
inc
mov
or
fadds
aam
xchg
andl
sbb
mov
or
cmp
testl
fs
add
or
lods
shlb
push
or
ss
scas
out
push
pushf
mov
enter
dec
shrb
jge
in
pop
adc
add
lahf
outsb
dec
negl
add
xor
popf
fstl
mov
fs
cmp
jns
or
sbbb
mulb
push
dec
int
pusha
js
or
add
mov
adc
sub
pop
daa
pop
aaa
mov
shlb
ds
das
neg
add
mov
cmp
pop
pop
add
mov
les
movsb
xorb
jae
setnp
aaa
enter
lahf
push
inc
add
insl
dec
and
xor
push
jo
pushl
lcall
push
add
dec
push
out
mov
pop
cmp
dec
add
mov
and
mov
call
jecxz
out
push
roll
push
cli
add
dec
mov
es
add
dec
shll
ds
jecxz
subb
subb
push
in
mov
xchg
lods
loope
push
fmull
sub
adc
mov
push
pusha
aas
das
dec
add
pushf
or
out
add
mov
js,pn
add
divl
call
and
sub
mov
es
adc
sub
mov
fwait
xchg
sar
testl
lods
cmp
add
pop
hlt
outsl
es
pusha
lea
andb
xchg
lret
inc
cmpsb
pop
aaa
xlat
add
loop,pt
and
dec
in
push
and
jge
and
add
test
popa
into
mov
add
push
jnp
xchg
mov
rolb
pop
jge
sbb
jbe
es
add
mov
or
ror
xor
cmpsl
pop
outsb
cwtl
jge
adc
pop
lods
sub
dec
les
jle
xchg
add
shlb
addl
mov
push
xor
sbb
roll
jl
add
mov
subb
test
add
fistpl
fcoms
imul
dec
vmread
inc
or
dec
incl
lahf
lods
cmp
sub
add
mov
daa
mov
cmp
inc
mov
xor
ret
or
add
lcall
into
add
add
or
cld
ja
imul
in
add
mov
shlb
cs
adc
mov
sbb
test
nop
sub
push
xlat
lahf
ss
inc
subb
mov
or
pop
sbb
push
divl
jp
push
call
sbb
repz
jp
add
xchg
cld
pop
fdivrl
cli
sbb
mov
imul
lods
shlb
or
jnp
dec
lcall
or
jb
add
movsl
mov
mov
add
int3
push
mov
push
or
sarl
or
push
adc
inc
jle
mov
xchg
andl
lahf
sbbb
popa
repnz
sahf
cmpsb
in
inc
mov
add
mov
movl
inc
pop
xor
cs
cmp
scas
pop
add
push
cmpb
aam
test
mov
jmp
fbstp
sub
in
mov
dec
push
mov
sub
adc
dec
adc
jae
mov
mov
popf
inc
iret
push
pop
push
mov
jecxz
dec
add
pop
dec
in
add
mov
data16
out
ret
add
jnp
adc
lods
cmp
mov
rcll
pop
stos
add
mov
sub
jmp
iret
lret
jg
cmc
ja
jne
decb
pop
jns
mov
push
cs
add
add
or
jl
cmp
push
orl
mov
or
add
jp
mov
and
imul
dec
add
and
add
mov
push
cs
mov
mov
loopne
imul
repnz
or
dec
je
cmpsl
jae
xchg
sub
or
icebp
in
lcall
mov
leave
push
sub
mov
roll
cmp
inc
insb
fildl
lea
push
arpl
jge
and
pop
push
pop
add
adc
mull
cmc
jmp
lock
xlat
pop
cmc
incl
mov
out
pushf
rorb
rcrb
sbb
add
gs
das
add
int3
inc
mov
testb
sbb
imul
xchg
add
or
cmpsb
stos
xor
xor
mov
push
cwtl
adc
push
js
repnz
or
jl
sbb
pop
xchg
add
cmp
push
into
inc
clc
in
adc
mov
add
add
mov
add
cmpsl
sub
pusha
jle
jno
cmpb
rcll
inc
mov
sbb
fmul
and
pop
push
jmp
push
sar
repz
adc
jp
in
dec
or
and
imul
jne
mov
cmpsl
and
jnp
cmp
push
add
stos
imul
lea
jae
mov
inc
stc
sub
loopne
push
data16
add
cmovo
aad
test
leave
push
cmc
shlb
inc
sbb
lods
add
lret
jns
adc
dec
push
pop
xor
loope
jo
mov
add
mov
outsl
pusha
cwtl
adc
pop
insb
sub
ljmp
aas
or
xor
aam
mov
xchg
inc
ret
lods
jnp
cmpsb
lods
ss
lock
adc
or
add
mov
insl
clc
add
cmpl
into
fadd
dec
push
add
jo
cmpsb
add
add
jg
mov
mov
ljmp
ret
les
add
insb
test
sbb
out
push
jnp
dec
adc
dec
cltd
movsl
in
clc
sbb
aam
inc
mov
add
push
icebp
add
pusha
cltd
or
mov
adc
push
hlt
pop
inc
pop
mov
popa
inc
xor
mov
int3
fcmovbe
add
add
push
push
mov
push
subb
adc
add
lea
fnstenv
mov
xchg
adc
lret
pop
add
bound
cwtl
pop
add
pop
xor
sarb
sbb
popa
xor
and
cs
add
insb
add
inc
pop
ss
push
pop
add
jecxz
cmp
jecxz
mov
fidivl
orl
push
adc
dec
lds
lret
cmpsl
push
in
mov
mov
mov
pop
inc
shll
test
add
inc
sbb
loop,pn
divb
je
sahf
aam
cwtl
sub
add
data16
xor
xor
mov
and
cs
and
dec
and
jo
mov
out
add
insl
sbb
push
add
js
xchg
mov
mov
ror
sub
add
push
cmp
xchg
dec
mov
pop
movsl
and
pop
inc
add
mov
add
imul
mov
add
cs
sbb
push
roll
in
outsl
sbb
and
insb
lret
or
push
call
add
push
pop
cmp
pop
leave
mov
pop
pushf
dec
movsl
in
dec
into
pop
add
ss
dec
int3
or
mov
jae
adc
mov
int
cmp
pop
push
rcll
fwait
and
xor
out
jmp
imul
arpl
int
cwtl
jle
xchg
lret
xor
sbb
mov
mov
out
cmpb
rcl
xlat
sub
call
jmp
or
imul
pop
jo
fsubl
enter
inc
mov
add
fnstenv
sbb
insl
lock
outsb
pop
mov
push
adc
jle
imul
dec
and
stos
fwait
mov
add
jae
pushf
lahf
idiv
cmp
mov
lods
dec
fs
roll
pop
clc
lea
loop
inc
xchg
popf
push
repz
cmp
std
iret
imul
xlat
fucom
jge
jb
sbb
es
out
push
sti
push
stos
movsl
sbb
nop
cwtl
add
lea
leave
repnz
out
xlat
imul
paddusb
push
sbb
lock
sbb
mov
and
icebp
scas
add
cmp
sarl
or
out
cld
clc
push
leave
push
jo
jbe
push
rorb
xchg
lock
jle
inc
push
jo
sub
xchg
test
ljmp
xchg
mov
aas
pop
sar
add
lcall
scas
subb
stos
or
add
push
sti
shrl
rcrb
mov
mov
inc
loopne
pusha
pop
hlt
add
inc
clc
in
push
pusha
xchg
mov
enter
sbb
inc
pop
orb
pop
addb
and
popf
mov
cmp
call
inc
cmp
add
mov
jecxz
int
lock
or
sbb
mov
add
sub
xchg
loop
xor
xor
mov
popa
movsb
pop
xor
mov
mov
clc
insb
add
rcl
mov
push
ret
lods
icebp
testl
add
sub
shrb
xor
loope
add
mov
inc
and
stos
push
adc
movb
cwtl
hlt
and
push
add
fnstenv
roll
cmpsb
sbb
inc
mov
out
mov
push
in
call
add
sub
sbb
lahf
into
data16
mov
loopne
xor
jge
mov
inc
xchg
fstps
and
xor
addb
add
mov
adc
cmp
xor
orb
movsl
dec
in
es
scas
dec
add
jl
loop
sub
lahf
dec
pop
mov
inc
or
in
stos
xor
out
lods
jge
jge
push
inc
mov
fnstenv
push
incb
ret
cmp
lret
scas
cmp
sub
adc
xchg
cmp
sbb
and
or
xchg
rorl
sbb
faddl
lock
sbb
push
inc
loop
add
push
rcl
add
add
jae
xor
dec
add
ja
xor
pop
test
add
lea
sbb
sub
or
bound
stos
push
pop
in
cmp
out
sbbb
fnstsw
mov
mov
mov
dec
jecxz
test
xor
lock
xor
push
mov
outsl
ficomps
ds
das
add
and
mov
add
in
rclb
sbb
mov
popf
cmp
aad
aam
jae
jae
or
dec
push
cmp
mov
dec
out
aaa
cmp
lock
adc
jbe
pop
roll
outsl
daa
add
fs
sub
rclb
dec
add
sti
dec
movsb
movsl
aaa
scas
cltd
cmp
jnp
es
cmp
or
shlb
xchg
aad
pop
adc
bnd
arpl
adc
add
pop
mulb
or
imulb
jmp
aaa
fbstp
das
xchg
or
in
add
paddsb
ret
mov
adc
lock
add
and
gs
lock
add
jae
push
sbb
lods
scas
repz
jbe
cs
and
fdivs
inc
pushf
movsl
into
add
andb
mov
bound
flds
jb
add
xor
cmp
clc
add
mov
inc
adc
sbb
test
fisttpll
loopne
push
dec
cld
add
pusha
je
xchg
dec
mov
dec
inc
cmpsb
sbb
scas
xor
jle
js
add
jnp
adc
mov
fists
and
roll
pop
mov
lods
movsl
cmpsb
jo
out
jge
cmp
cmpl
gs
subb
out
lods
xor
aad
enter
into
ret
sbb
inc
add
insl
sahf
mov
jmp
push
add
pop
cs
push
add
lock
mov
pop
jne
cmp
fsubl
scas
jecxz
jle
cmc
add
test
mov
jns
icebp
movsb
cwtl
mov
pop
cli
xor
fucomi
mov
sahf
cld
sbb
rolb
mov
push
mov
xchg
scas
sbb
sbb
subb
aas
adcl
ret
xor
add
test
inc
add
imull
or
mov
lock
mov
dec
jg
push
pop
add
lock
pop
push
jle
mov
and
pop
repnz
inc
add
or
rolb
cmpsb
bound
push
inc
sbb
lret
imul
es
xchg
mov
inc
int
jp
lret
and
mov
xchg
xorb
nop
jge
sbb
push
jge
add
and
inc
repz
icebp
leave
push
aas
push
ja
popa
mov
sub
adc
stos
adc
push
jo
xchg
xchg
mov
sub
mov
loopne
cmp
adc
pop
pop
test
clc
out
add
mov
test
push
add
jb
ficoml
test
inc
push
outsb
movsb
in
push
into
add
add
pop
in
ret
sub
mov
sub
push
hlt
or
loop
mov
xchg
pop
scas
ror
mov
out
in
ret
popf
push
lahf
xor
push
daa
push
push
jmp
or
add
xor
jp
inc
pusha
push
mov
jnp
push
add
mov
sbb
loopne
jbe
add
xchg
mov
cmp
xlat
mov
addl
sti
mov
out
scas
push
out
loopne
in
xor
repz
clc
dec
sahf
xchg
sti
inc
xor
mov
gs
inc
shll
dec
addl
fsubl
inc
cmp
int
mov
add
cltd
mov
shr
mov
add
add
add
jo
xchg
fcomp
pusha
mov
add
ror
out
mov
inc
dec
scas
or
xor
dec
cs
cmp
shll
sbb
ja
test
jns
mov
lea
out
imul
cmp
and
icebp
stos
dec
mov
subl
pop
add
mov
sub
into
in
pop
outsb
cwtl
lret
xor
mov
ret
test
pop
mov
pushf
add
lahf
cmp
add
adc
insl
pop
pop
mov
add
adc
sub
jl
pop
dec
mov
xor
pop
lock
pusha
dec
adc
inc
sub
jno
addr16
xchg
ja
cmpsl
cli
imul
xorl
lahf
clc
lret
add
aam
jmp
sub
out
sbb
mov
je
sub
cld
sbb
sbb
lds
js
xchg
sbb
in
inc
pop
jne
inc
jl
inc
push
pop
outsb
add
sub
lock
xor
mov
inc
popa
adc
and
jl
mov
scas
out
fnsave
sub
leave
fstps
data16
push
movsb
jne
jmp
jno
push
or
sti
popl
loope
cld
insl
pop
xor
adc
outsb
adc
hlt
inc
sbb
mov
jmp
pop
repnz
add
fistps
add
in
cmp
popl
lock
and
add
mov
lods
add
mov
push
out
scas
insl
push
test
repz
sahf
fisttpll
inc
lret
add
and
addl
out
inc
pusha
aad
testl
clc
test
add
repnz
push
add
add
mov
adc
add
es
add
movsb
jns
add
adc
cmp
stos
rolb
ret
loopne
out
fwait
daa
xchg
inc
fnstenv
aad
or
in
xchg
and
jae
or
lcall
add
mov
dec
fsubl
cmp
addb
inc
jg
lods
sbb
adc
cmp
pop
cmovno
iret
xchg
mov
xor
xor
out
or
lods
loope
cmpl
jbe
add
jmp
push
rorb
mov
subb
mov
push
pop
lods
daa
test
xchg
xchg
mov
gs
inc
or
repnz
fldl
inc
push
jmp
mov
sti
stc
pusha
add
jne
enter
hlt
icebp
test
sti
add
jecxz
test
jo
loop
outsl
inc
in
dec
ficomps
fldl
or
out
gs
dec
test
movsl
add
mov
xchg
add
lods
sub
pop
lock
lds
sbb
pcmpgtd
mov
and
lods
or
popf
cmp
xor
inc
mov
pop
loope
xor
pop
add
iret
sarb
xlat
repz
incl
mov
sub
ret
mov
add
js
lret
inc
les
scas
subb
js,pt
in
decb
popf
sub
adc
mov
push
sbb
inc
jp
adcb
in
into
add
ficomps
adc
jno
sub
adc
and
xchg
add
bound
cmc
les
lods
dec
cmp
lret
xchg
fiadds
popf
and
fucom
das
and
cmp
lds
subl
inc
cmpsb
repz
cwtl
pop
add
inc
inc
enter
loopne
mov
repz
jge
daa
inc
fcomp
or
stos
add
inc
adc
sahf
mov
add
mov
nop
aad
sbb
dec
inc
push
push
cli
sub
sub
lcall
cwtl
pop
push
cmp
push
push
fdivrl
xchg
ss
jo
pushf
jb
je
out
mov
xchg
sub
notl
xchg
add
insb
add
aas
outsl
test
mov
scas
sbb
clc
sbb
cmpsl
ret
mov
ja
lahf
inc
test
pop
lds
and
cmc
insb
add
arpl
es
push
enter
sbbb
adc
add
inc
or
and
adc
push
xor
push
enter
jne
add
xchg
pop
cmp
xchg
push
add
inc
stos
jb
sub
jge
jle
jmp
shll
lods
cmp
ret
or
mov
jae
mov
sub
in
inc
jp
inc
dec
inc
lcall
mov
ret
int
ret
pcmpgtb
pusha
ret
push
mov
out
or
repz
pop
sbb
sahf
jne
push
or
daa
repnz
enter
test
movb
fcoms
orl
fisttpl
lret
pop
int
cld
pop
sbb
in
add
fxch
sub
cmpsl
out
insb
jg
leave
bound
enter
pop
pop
adc
xorb
mov
out
sub
andb
add
jns
xor
pop
iret
and
inc
sbb
ret
xchg
imul
add
inc
pusha
cltd
cmp
loop
es
fildl
and
sbb
jg
jo,pt
add
or
aam
aaa
lds
dec
rorb
xor
add
les
pop
jge
inc
push
lahf
dec
inc
js
add
ret
test
inc
xor
imul
add
push
and
dec
nop
pop
cmp
cmp
jb
add
push
test
add
test
lock
mov
jmp
jns
pop
inc
loopne
mov
inc
test
cld
mov
cs
and
push
mov
inc
mov
sub
lods
iret
loop
push
jmp
andl
mov
sub
mov
jp
aas
mov
and
cmp
add
sub
sahf
mov
cmp
mov
movsl
xchg
lock
pop
mov
out
into
ffree
add
pop
dec
cwtl
adcl
pop
push
lods
mov
mov
add
jnp
mov
mov
add
lret
pop
dec
pop
mov
add
add
xor
cwtl
mov
add
adc
add
cltd
out
lcall
enter
frstor
outsb
add
add
lock
sbbb
xchg
stos
ret
cs
adc
lds
adc
inc
movd
xor
adc
mov
sub
adc
push
int
test
and
adc
xor
dec
lds
pop
add
jge
jle
sub
and
sub
jecxz
pushf
popf
dec
pop
cmp
jb
push
mov
mov
adc
or
in
push
mov
adc
mov
and
mov
loopne
ss
xchg
or
xchg
dec
pop
xor
adc
cmp
push
add
ds
or
or
insb
adc
nop
mov
stos
pop
push
fcoms
cmp
pushf
add
or
outsl
ljmp
movl
mov
and
add
inc
adc
jo
inc
popa
shr
imul
lahf
push
bound
sbb
add
cmp
and
push
mov
cwtl
hlt
dec
add
stc
movsl
sub
int
sbb
push
imul
out
out
fwait
cs
mov
xor
cmp
jo
test
scas
imul
xchg
orl
testb
cmpl
mov
push
xchg
mov
mov
rorl
ja
test
xor
add
dec
jae
push
jl
idiv
fcoms
mov
sbb
orl
mov
xlat
cs
jp
dec
out
pop
pusha
sub
cmp
xchg
add
cmp
and
add
jb
add
jnp
adc
or
int3
add
push
adc
pusha
dec
or
jg
rorl
sub
jbe
jnp
fwait
call
jne
in
jle
or
jno
outsl
lock
push
xor
stc
ret
data16
add
adc
mov
jge
pop
add
fstl
inc
into
aaa
cwtl
cmp
les
and
and
inc
sub
push
add
adcl
lcall
loope
push
fwait
in
adc
scas
std
bound
sahf
and
subb
sub
mov
push
lds
ret
pop
add
jo
dec
pop
add
add
popa
sub
push
sti
stos
adc
adc
shll
les
push
test
push
add
mov
mov
arpl
cs
js
mov
fs
or
sbb
fdivl
pop
out
arpl
pop
lock
push
mov
and
or
pop
cmp
push
sbb
pop
leave
or
loop
rol
outsb
add
outsl
arpl
ror
les
es
add
lods
cli
cmp
jns
pop
and
sbb
bound
sub
dec
nop
pusha
lods
mov
and
xorl
hlt
pop
ljmp
inc
adcl
shlb
cmp
add
inc
dec
int3
dec
jle
rorb
sbb
ret
inc
push
test
pushf
cmp
loope
inc
inc
loopne
pusha
adc
mov
mov
push
push
shr
add
ss
cltd
push
jns
dec
add
sti
jno
cmp
jne
mulb
add
hlt
out
lds
adcb
fs
push
or
cld
add
mov
push
pop
pop
dec
pop
push
lods
cmpb
push
or
dec
pusha
inc
sbbb
lret
and
vphaddubq
mov
pop
fimuls
add
fwait
aaa
jns
es
add
inc
inc
add
in
pop
stos
loop
or
out
loopne
inc
or
inc
mov
sbb
add
dec
iret
push
test
lret
icebp
dec
adc
and
adc
sbb
aas
inc
mov
dec
and
lea
test
and
lret
and
or
push
or
dec
xchg
aam
insb
mov
pop
adc
xorl
and
sbb
sub
subb
in
roll
mov
add
imul
notb
xchg
sbb
pop
jecxz
arpl
lods
or
pop
jno
or
mov
or
jp
mov
sub
adc
or
movsl
iret
push
pop
mov
xor
add
dec
sbb
mov
test
xor
add
sbbb
stc
es
xchg
mov
stos
mov
lahf
subb
outsb
mov
es
ja
sti
inc
jo
lahf
xor
push
je
jo
sahf
jo
mov
adc
add
testl
enter
xchg
or
inc
jl
lock
aam
lret
cs
inc
fsubrl
lea
xchg
rol
sub
push
dec
and
lods
dec
sub
xorb
dec
and
pop
inc
push
mov
int
cmp
mov
ss
add
fwait
in
inc
sbb
dec
rclb
shlb
je
shl
add
dec
mov
xor
sbb
push
in
test
cmp
jns
sbb
insb
mov
or
add
call
sar
inc
add
jp
bound
cmp
or
adc
jecxz
sbb
and
sub
or
jl
les
mov
pop
test
idivl
xor
int
pusha
inc
cmp
icebp
nop
add
lcall
inc
xorb
scas
mov
xlat
adc
mov
add
xor
lock
fldl
or
imul
ret
mov
mov
adc
adc
add
sub
sbb
pop
fisubrs
fwait
stc
adc
je
jmp
shll
loopne
xchg
inc
ds
adc
xchg
add
pop
add
xor
mov
jnp
hlt
inc
add
popa
inc
rcrb
pop
popf
pop
pavgw
pop
xor
call
jle
add
xor
or
dec
arpl
shlb
sbb
in
and
pop
mov
imul
shlb
push
xor
jns
addr16
out
popf
sbb
rcrl
stos
sbb
mov
add
cmp
fs
sbb
add
jns
jo
push
adc
out
inc
movsb
leave
push
add
mov
xchg
push
xor
and
ljmp
fstpl
xchg
cmp
call
fmuls
and
pop
dec
add
mov
popf
or
sbb
stc
pusha
xchg
fadds
mov
jp
or
add
jnp
or
std
cld
sub
dec
sub
ror
aam
inc
cmpl
and
jb
xor
ret
cmp
sbb
test
adcb
pusha
pop
inc
sbb
addl
and
xor
lret
push
dec
adc
mov
mov
pop
jl
and
mov
cmpsb
inc
dec
lock
int
add
and
sbb
xlat
sub
cmp
push
mov
sub
pop
test
adc
xchg
pop
adc
subb
adc
ret
pop
adc
inc
sub
add
pop
ja
xlat
inc
test
push
add
movsb
mov
inc
pop
inc
xchg
mov
adc
test
addl
push
leave
pop
sub
int3
ret
lahf
push
call
xor
mov
inc
jb
push
rep
ficompl
orb
inc
or
add
ret
and
shll
sahf
cmc
xor
sub
add
pop
mov
lods
push
sub
cltd
inc
lock
sti
xchg
icebp
jp
movsl
adcb
or
xchg
ret
dec
imul
mov
adcb
cs
orb
dec
je
repz
or
push
cmp
adc
mov
xchg
aam
sub
ja
add
adc
or
into
outsl
push
outsb
and
dec
pop
push
dec
and
push
jle
add
mov
jo
test
lret
xchg
outsb
loop
or
push
push
dec
sub
nop
adc
cmpsb
and
add
or
shl
out
jmp
cmp
inc
jo
cmpsl
je
into
leave
xor
dec
lods
sbb
and
sarb
add
fbld
sahf
adc
mov
int3
push
sbb
or
fimull
sbb
adc
dec
lock
in
mov
add
fstpt
cmp
cwtl
xlat
push
pop
sarb
les
pop
push
sub
push
rorl
shrl
jmp
pop
mov
std
sub
lret
push
rclb
push
sbb
inc
xor
add
jnp
frstor
jb
dec
lret
mov
les
mov
push
sub
push
or
pusha
xchg
mov
dec
cmp
xchg
pop
adc
rcl
cmp
add
mov
push
imul
das
xor
mov
fs
fsubs
add
push
iret
int
call
in
sti
add
cmp
test
popf
sbb
sahf
inc
jp
sbb
popa
sub
mov
frstor
adc
roll
add
sub
adc
xchg
inc
stos
ret
dec
jecxz
add
sub
in
mov
pop
add
and
popl
cmp
mov
xor
jecxz
ret
adc
je
xor
pop
sbb
incb
mov
push
mov
andb
xchg
mov
aas
xchg
cmp
popa
leave
xlat
cmp
test
pop
xchg
in
mov
loopne
lcall
add
pop
jecxz
push
hlt
adc
mov
jg
sahf
fstpl
xlat
sbb
push
dec
lock
aad
xor
cmp
adc
cld
or
add
pusha
or
inc
ja
dec
and
inc
fs
jmp
ljmp
jl
pusha
cmp
inc
push
icebp
nop
sbb
out
paddsb
andl
cs
push
in
jl
sub
rorl
jp
andb
mov
out
call
popa
lock
push
loopne
push
aad
or
sbb
xlat
icebp
lock
xchg
outsl
pop
add
jo
jge
sbb
jb
add
push
shll
add
je
inc
jnp
push
in
adc
pop
mov
xchg
je
xchg
push
js
add
cmpl
xor
jne
inc
or
push
add
in
in
int3
ret
arpl
and
and
in
loope
jo
and
dec
or
addr16
push
in
inc
xor
pop
add
shl
jmp
or
bnd
flds
lahf
les
fisttpl
popa
and
sub
outsb
jl
jo
sub
in
es
popa
stos
add
hlt
adc
pop
cmp
xor
add
xchg
int3
jbe
jp
in
out
add
out
rcrb
lea
adc
cwtl
clc
jp
adc
jb
pop
mov
push
inc
imul
mov
add
sub
notl
sub
xor
mov
stos
addr16
inc
lret
jns
push
jo
and
ds
in
les
pop
mov
es
inc
in
mov
les
xor
mov
xchg
imul
add
adc
push
imul
add
jbe
sbb
xchg
jb
hlt
jmp
push
cs
push
push
addr16
jne
add
pop
das
mov
adc
push
fsubrp
xchg
iret
insb
mov
push
repz
subps
sbb
insl
adc
sub
pop
in
in
pop
adc
fsub
fmuls
add
jb
mov
mov
and
lret
and
aam
adc
mov
insb
jg
ss
mov
inc
insl
dec
adc
sbb
jl
imul
mull
dec
in
add
add
push
jne
lahf
ret
lods
or
push
pusha
adc
add
add
xchg
or
clc
sbb
xchg
xchg
stc
inc
pop
clc
add
inc
cwtl
clc
adc
jecxz
xor
sbb
adc
ja
push
mov
insb
pop
ds
subb
hlt
jg
mov
mov
cmpsl
jecxz
xor
je
outsb
andb
popa
in
mov
or
in
jp
loop
mov
dec
shr
and
and
shll
mov
push
sub
xor
repnz
push
test
enter
fildll
and
ficomps
pop
and
out
lahf
add
push
insb
pushf
adcb
add
push
adc
xor
sub
es
outsb
stos
mov
pusha
push
stos
push
nop
push
inc
insb
add
in
in
sub
pop
adc
push
js
popf
popa
inc
out
gs
dec
mov
or
push
cmpsb
push
jne
mov
mov
add
mov
adc
sub
cld
mul
add
push
mov
enter
lods
adc
out
mov
mov
lahf
adcb
movsb
xchg
add
or
hlt
xchg
jb
pop
inc
adcb
mov
adc
xchg
int3
pusha
and
daa
sti
pop
test
pop
xor
xchg
push
jo
pop
lods
mov
pusha
and
icebp
and
pusha
xchg
jmp
push
push
sahf
sarl
sti
pusha
lods
rcr
sarb
dec
cmp
push
mov
pop
add
push
or
adc
jb
or
push
xor
push
int
imul
mov
jo
jb
sub
lret
pop
and
push
jle
adc
add
rcll
stc
lock
cmp
fidivs
push
or
adc
testl
sbb
cwtl
or
push
add
cld
pusha
addr16
pop
mov
aaa
inc
inc
xchg
daa
adc
insb
out
add
clc
addr16
fs
xchg
cltd
out
into
cmpsl
and
shll
roll
shlb
scas
mov
xchg
cltd
lods
decb
dec
add
jne
ret
in
std
or
xchg
push
push
push
out
mov
add
xchg
xor
sub
shrb
icebp
xchg
in
mov
scas
test
fsubs
lods
mov
aas
pop
mov
fcoml
mov
lea
lods
xchg
movsl
call
add
pop
in
repz
add
pop
dec
push
jecxz
aam
adc
popa
and
push
dec
or
sbb
iret
push
lock
mov
test
jl
std
pop
mov
adc
xor
or
push
sub
adc
outsl
popa
xor
cltd
push
or
ja
sbb
sarb
jmp
sbb
pop
pop
push
sub
insb
sbbb
out
jle
fiadds
fnstsw
inc
push
adc
test
sbb
pushl
add
lods
repz
ja
js
bound
mov
cld
jecxz
rorl
cmp
pop
mov
into
mov
mov
outsb
cmpsb
and
stc
mov
adc
js
aas
aaa
fs
add
lret
push
jg
fists
pop
pusha
push
inc
cld
mov
out
movsl
and
lock
les
shrb
clc
out
pusha
mov
out
add
pop
jnp
adc
sbb
add
push
cmp
out
add
dec
jb
adc
and
movsb
inc
shr
sti
dec
xorb
mov
mov
cmp
adc
in
lea
push
cwtl
insb
in
mov
mov
addr16
add
pop
pop
jno
sbb
jbe,pn
xor
js
jl
dec
in
and
push
jne
push
dec
xchg
cmpb
ja
dec
cs
and
xchg
jl
and
mov
aad
daa
loope
rorl
xchg
mov
xlat
pusha
in
add
xor
mov
or
or
shlb
jb
add
in
in
cmp
cld
shlb
in
in
pop
out
push
lods
adc
scas
or
cmp
out
fimuls
pusha
push
call
cwtl
dec
loop
pop
inc
sbb
mov
and
xchg
cmp
or
add
push
add
sub
in
subl
icebp
dec
cmp
sub
orb
mov
pop
jecxz
or
clc
subb
push
sbb
jbe
adc
inc
and
mov
stos
xchg
in
cltd
push
loopne
dec
add
lds
dec
pop
in
orb
push
jp
adc
ja
sti
je
dec
mov
popa
push
pop
or
mov
push
lret
mov
add
mov
adc
xchg
sub
fs
addb
pop
pop
adc
je
mov
idivl
xor
orl
or
cmpsb
popa
inc
xor
mov
push
hlt
push
xchg
or
popa
jge
pusha
push
jmp
pop
inc
inc
dec
jno
add
lods
test
mov
subb
std
jmp
pop
inc
test
ja
out
mov
test
inc
lds
push
lods
jbe
cld
adc
orl
pop
rorb
jge
add
or
inc
push
pushf
jo
inc
cmp
cmp
add
and
add
mov
jecxz
rolb
mov
lahf
jp
adc
rcr
flds
sbb
out
das
and
ret
mov
push
mov
lret
push
push
inc
jge
or
call
mov
je
call
push
and
in
adc
adc
add
push
mov
jb
sub
sbb
jp
sbb
xchg
push
mov
dec
lock
imul
add
xor
mov
adc
xlat
jle
aad
sti
mov
in
inc
add
jbe
jmp
push
psrlq
or
xor
imul
jg
jl
or
mov
icebp
pusha
adc
mov
ret
pop
sbb
jp
xor
outsb
and
insl
daa
pop
or
insb
inc
int3
les
xchg
mov
add
outsb
cli
pop
orb
xchg
ret
or
adcl
mov
jbe
and
scas
xchg
inc
sbbb
add
lea
adc
sbb
mov
adc
mov
sbb
data16
add
add
mov
add
push
mov
mov
aaa
out
push
loopne
pop
mov
mov
inc
xchg
add
enter
mov
nop
ljmp
sti
arpl
adc
imul
std
testb
xor
or
and
pop
push
add
sub
frstor
fidivs
jge
push
jae
jp
pushf
jbe
or
call
add
mov
into
add
jp
pop
add
mov
fldl
mov
cli
mov
cmpsl
movsl
testb
or
cli
lods
add
mov
mov
int3
add
mov
in
addb
movsl
dec
inc
add
pop
bound
sub
jnp
mov
pop
movsb
jno
ret
push
inc
mov
lock
dec
xchg
pop
mov
lds
pusha
and
insb
clc
sbb
stos
hlt
or
pop
push
lret
pop
loopne
loopne
sbb
popa
push
push
pop
xchg
sahf
xchg
lds
cmpb
or
inc
clc
jmp
push
mov
mov
into
outsb
push
pushf
mov
js
push
xchg
int
pop
adc
enter
cli
scas
incb
and
add
inc
pop
sbb
orl
mov
xlat
les
push
cwtl
cli
in
add
xor
or
clc
jnp
es
mov
mov
sub
add
push
xor
dec
add
sbb
ja
pop
adcl
cli
mov
inc
lahf
and
pop
popf
cli
lret
pop
jo
cmc
dec
andb
inc
sub
outsl
sub
test
mov
mov
mov
adc
ja
sarb
in
xor
inc
mov
movsl
in
mov
mov
incl
xchg
mov
fsubs
jne
add
pop
orb
pop
jne
xchg
roll
xor
and
add
cmp
in
push
pop
or
nop
inc
xchg
fiadds
enter
lods
and
loopne
push
lock
xchg
add
bound
fbld
pushf
lods
addb
enter
dec
sbb
or
shlb
sbb
aam
dec
ljmp
clc
sbbb
insb
ret
faddl
inc
dec
pop
mov
adc
pop
adc
scas
scas
push
repz
mov
sub
push
add
jno
js
cmpsb
xchg
pop
sbb
cmpb
hlt
and
fisubrl
push
xchg
test
adc
pop
add
rclb
xchg
jne
mov
dec
push
push
pop
cltd
jno
mov
adc
push
lods
jmp
js
aad
mov
or
dec
nop
dec
in
shrl
pusha
push
insl
add
xor
pop
dec
mov
and
lods
cmp
dec
add
mov
xchg
mov
pop
pop
push
fcompl
push
dec
dec
inc
pop
xchg
call
xchg
dec
incb
rclb
js
shlb
test
inc
nop
xchg
jo
mov
push
jg
fwait
test
xor
xchg
sub
sub
in
or
xchg
mov
inc
in
fimull
inc
mov
adc
rorl
push
sarb
nop
xchg
xor
dec
xchg
test
cltd
and
fdivrp
jb
sbb
lcall
mov
rcll
mov
adc
mov
std
sbb
sbb
or
and
or
xor
add
dec
and
call
sarb
cmp
push
xchg
xchg
cld
sub
mov
out
lods
push
xchg
pop
push
jbe
ficompl
loop
push
adc
push
enter
and
adc
xchg
std
add
push
std
cmpsl
pop
cmp
cli
jge
or
nop
stc
imul
mov
pop
sbb
mov
data16
pop
js
push
or
testl
mov
insb
cltd
rcl
sbb
jbe
shlb
adc
xor
sbb
shll
mov
add
push
js
in
cmc
pop
mov
lock
repnz
or
and
sub
dec
inc
inc
add
jmp
into
int3
or
sub
mov
push
repnz
lea
cmp
and
movsb
and
sbb
mov
adc
int
enter
mov
cmp
push
jo
cli
adc
rorl
and
mov
mov
add
rorb
clc
add
mov
add
lcall
mov
pusha
sbb
sub
push
fadd
jp
push
les
add
xchg
ret
and
cltd
inc
andl
ffree
sbb
insb
push
adc
push
dec
push
xor
imul
movsl
icebp
sub
push
mov
pop
mov
or
pop
inc
and
sbb
add
mov
sub
int
add
cmp
stos
fwait
lock
sti
dec
jl
sub
jbe
inc
mov
adc
sti
rcrb
lods
loopne
mov
sbb
inc
pop
push
aam
push
cwtl
adc
dec
pop
mov
mov
subb
pop
mov
xor
lea
inc
arpl
push
lahf
xchg
sub
mov
xor
push
add
leave
adc
adc
mov
mov
add
lock
loop
dec
decb
xor
or
repz
or
sbb
sbb
adc
mov
and
les
inc
mov
dec
adc
add
leave
pop
loope
rorl
inc
hlt
inc
push
jnp
out
add
or
int3
and
inc
pop
pusha
pop
and
mov
out
icebp
add
movsb
pop
xchg
pusha
leave
fwait
and
push
add
rcrl
pop
adc
adc
lods
or
or
xor
sbb
inc
or
rorb
std
cwtl
sub
cmp
in
jecxz
adc
push
sub
jbe
mov
or
mov
leave
les
inc
or
ss
sbb
add
or
icebp
fiadds
sbb
nop
imul
sbb
or
sbb
inc
subb
add
std
sub
add
or
in
mov
cmp
inc
cmp
push
aam
leave
or
nop
lret
inc
js
or
adc
sbb
sbb
sbb
mov
push
add
dec
pop
inc
sub
add
mov
or
or
in
push
lret
inc
push
out
mov
les
and
cmp
sub
xchg
call
dec
enter
in
pmaxsw
jnp
xor
rcrl
sbb
sbbb
pop
aas
mov
mov
inc
add
outsb
adc
in
inc
mov
rorl
out
or
mov
push
push
xor
push
jmp
add
inc
inc
and
icebp
add
lds
dec
jmp
movsb
inc
pop
int3
cmp
and
push
add
xor
push
adc
mov
adc
inc
dec
ret
xchg
movsb
fdivrs
orl
fisubrl
sbb
sbb
xor
cwtl
push
and
and
iret
or
mov
andb
add
loop
call
push
shlb
mov
xchg
inc
adc
add
dec
sub
push
add
pop
pop
sub
mov
stos
ds
xchg
test
pop
rorl
les
push
and
xchg
add
xor
and
fwait
push
xchg
jmp
xor
mov
xor
mov
and
fwait
and
xchg
std
dec
pop
out
and
insl
jecxz
push
pop
dec
subb
test
insl
mov
arpl
sub
xchg
jl
add
dec
xchg
repnz
ret
sbb
xor
push
lock
add
xor
adc
pop
dec
cmpb
ja
cmp
or
add
cmp
mov
push
sub
iret
and
imul
ret
cli
fcoml
lods
int3
adc
shl
out
xor
jg
push
daa
pop
or
push
cmp
loope
inc
and
inc
pushf
shr
imul
mov
mulb
sahf
fidivl
movsb
popf
jo
adc
push
dec
sub
inc
add
jo
push
jecxz
cmp
mov
lods
cmp
adc
outsb
xchg
cmp
pushf
es
out
sub
pop
add
pop
or
sahf
jp
dec
push
xor
fiadds
or
lret
and
mov
ret
aas
scas
dec
psllw
mov
cmp
add
inc
add
cltd
mov
loop
push
sbb
test
ret
sub
mov
es
adc
cmp
mov
aas
cs
lock
andb
divb
addr16
ficoms
jne
and
mov
push
xchg
fisubl
aaa
push
aam
add
loopne
vfrczpd
sbb
inc
inc
push
cmp
rorb
cwtl
add
dec
inc
inc
loop
daa
mov
add
ror
cmp
mov
test
mov
pusha
dec
mov
arpl
cwtl
mov
sbb
xlat
jb
push
xor
std
adc
cltd
push
pushf
xor
int
std
pmulhw
rcl
xor
lret
call
pop
xchg
adcb
mov
mov
imul
xor
lahf
dec
mov
imul
mov
hlt
aaa
sub
inc
add
xchg
xchg
add
test
push
add
mov
lcall
cmp
daa
adc
adc
pextrw
mov
aas
lahf
dec
call
cmp
and
cmpsl
fadd
gs
cmp
cmp
sbb
ja
cltd
mov
aad
xor
outsb
and
xor
sub
arpl
mov
add
shlb
cwtl
push
add
sar
movsb
adc
dec
push
jmp
popf
inc
mov
and
rolb
cmp
xor
fnstcw
test
mov
inc
sub
add
xchg
mov
cmp
lods
add
or
aam
sbb
imul
stos
push
pop
add
sbb
add
rorb
push
adc
gs
mov
push
into
sbbl
lds
and
mov
lods
fsubrl
repnz
xor
rolb
jmp
int3
cmp
mov
add
mov
aas
cmp
sub
xchg
test
jg
mov
add
test
and
pusha
cltd
cld
jns
sbb
jne
add
enter
ljmp
bound
sub
popa
add
repnz
or
mov
mov
xor
out
and
addb
rclb
testb
les
pop
outsb
and
mov
dec
leave
mov
inc
adc
jl
shll
mov
inc
inc
sbb
rcrb
add
int3
jae
lods
push
pop
sti
sub
test
insb
sub
inc
xchg
adc
mov
sbb
in
ret
mov
addb
imul
adc
imul
in
in
add
jg
mov
loop
add
lret
sub
xor
mov
xlat
or
pop
dec
push
movsl
mov
add
aad
mov
testl
pop
mov
jmp
mov
inc
pop
ror
xor
pop
dec
lret
out
inc
pop
pusha
jl
fiaddl
movsl
mov
xchg
mov
xchg
rorl
pop
sub
scas
dec
add
push
add
daa
sarb
xor
and
inc
loope
mov
int3
add
inc
xchg
jecxz
add
sbb
shlb
jns
je
adc
movsl
loopne
push
mov
sahf
adc
inc
or
sub
ret
push
cmp
loop
xchg
and
movsl
les
cmc
adc
inc
in
xchg
or
xor
into
xchg
or
adc
insb
pop
icebp
rolb
pop
sarb
mov
testl
xor
arpl
dec
dec
in
and
lds
ror
ss
add
imul
pop
idivb
inc
mov
pusha
outsb
mov
xor
add
shlb
push
fsubl
imul
mov
jmp
and
shl
xchg
cmp
add
jne
cmpsl
lock
cmp
lock
popa
adc
shrl
lock
nop
sub
adc
mov
cwtl
xor
add
mov
jnp
mov
cmc
or
test
lcall
inc
mov
bound
push
call
push
mov
xchg
cwtl
js
add
jmp
movsb
inc
sti
inc
sub
sbb
or
pop
inc
daa
mov
mov
inc
inc
loope
pop
push
sub
adc
pop
sbb
inc
mov
inc
insb
cld
shl
sbb
inc
mov
dec
xor
xorb
inc
aam
mov
xor
mov
mov
inc
movsb
aas
cmp
ficoms
or
sbb
inc
insl
mov
mov
and
add
sbb
add
jbe
iret
cld
das
in
or
push
pop
inc
rcl
xor
imul
shlb
jge
fisubl
inc
ljmp
and
cltd
test
and
mov
mov
adcb
mov
sbb
or
cmpsl
rolb
xchg
repz
inc
or
add
pop
pusha
and
mov
add
jno
inc
fwait
add
push
movsb
mov
sub
xchg
and
cmp
enter
mov
sub
sub
lods
xchg
ficompl
dec
arpl
adc
lods
mov
mov
mov
pop
rorb
dec
and
mov
pop
test
pop
mov
or
xchg
dec
or
inc
fs
pusha
test
fstps
out
add
add
pushf
test
addr16
sub
xchg
pop
mov
inc
insl
notl
lds
aas
mov
push
lods
cmp
int3
push
add
xor
mov
xor
inc
fiadds
mov
loope
add
jge
mov
rcr
cmp
mov
adc
test
fstpl
xlat
inc
dec
jo
sbb
idivb
mov
inc
test
icebp
andb
xchg
cltd
push
add
mov
jno
add
imul
adc
jb
fmuls
pop
pop
das
enter
adc
inc
shlb
sub
lock
dec
pop
stos
xchg
adc
repz
add
fmuls
pop
inc
loop
dec
nop
mov
inc
jae
add
xchg
fwait
push
add
cmpsl
fbld
in
adc
pop
xor
hlt
mov
nopl
jg
xchg
sbb
xor
pushf
cmp
pop
jge
push
xchg
aam
test
mov
mov
mov
add
ficomps
sbb
mov
push
mov
adc
mov
mov
out
roll
sub
aas
das
loope
enter
mov
jecxz
pusha
fcoml
push
adc
cmp
je
pop
add
andb
leave
fisubs
aam
outsl
push
arpl
mov
mov
pop
dec
sbb
xor
sub
inc
inc
mov
std
xor
imul
cmpb
aam
andb
lea
pusha
mov
hlt
sahf
add
ss
xchg
xchg
or
xor
inc
sbb
lcall
add
in
pop
push
push
add
cmpsb
jo
test
pop
push
hlt
popl
test
xchg
mov
imul
mov
pusha
or
sarb
add
pop
mov
add
xchg
mov
adc
push
scas
cmpsl
lcall
mov
and
xchg
adc
jb
jmp
and
mov
pusha
pop
add
data16
add
les
ljmp
push
jmp
and
xor
pop
pop
loop
mov
les
push
add
shrb
xor
lea
lods
lahf
mov
add
pop
adc
sub
cmc
inc
mov
mov
ret
in
cmp
gs
int
add
shlb
mov
call
mov
jecxz
clc
xor
aad
xchg
mov
sbb
cwtl
test
call
les
repnz
xor
add
cwtl
stos
dec
sbb
cmp
mov
pushf
pop
pop
push
add
adc
test
add
or
daa
mov
std
test
xchg
mov
sbb
mov
add
mov
ja
inc
lds
cmp
pop
nop
cmp
mov
in
mov
and
pop
mov
into
adcb
mov
add
sbb
arpl
pop
xor
add
cmp
mov
sub
addr16
adc
adc
mov
popa
addr16
cwtl
cmp
test
xor
and
repnz
and
push
out
and
cmp
mov
jp
adc
roll
adc
icebp
sbb
jle
pusha
jb
loop
or
nop
mov
dec
adc
xor
pop
pop
adc
add
or
pop
jne
shlb
es
push
pop
add
cmp
popf
or
jl
arpl
clc
pop
inc
adc
cmpsb
mov
mov
jns
push
mov
mov
and
xchg
js
mov
pop
add
repz
or
mov
jmp
add
in
in
add
push
sbb
cmp
ds
xchg
pop
mov
jnp
push
xor
mov
mov
add
and
nop
mov
xor
jg
enter
mov
push
pop
mov
dec
or
mov
mov
int
jl
in
nop
and
rcrl
fldz
add
mov
sbb
pop
xlat
lea
or
or
pusha
or
out
sub
daa
push
sbb
xor
lods
pop
mov
fsubr
fmul
or
gs
mov
pop
into
mov
loopne
push
add
cltd
cwtl
js
mov
add
pop
pop
jecxz
in
les
sbb
pop
adc
sbb
sarb
sbb
jmp
lret
ja
inc
mov
icebp
push
stos
cmp
jno
xchg
add
movsl
sarl
mov
jns
sbb
cmp
jg
push
xor
lahf
ss
mov
or
mov
std
outsb
xchg
and
push
lods
or
call
mov
xor
and
or
ret
ret
inc
adc
add
push
mov
xor
mov
push
pop
dec
adcb
aad
xchg
pop
in
pop
rol
sbb
sahf
outsb
add
xchg
sub
jecxz
xlat
xor
sbb
xchg
or
mov
test
fs
add
es
fcmovnbe
mov
sbb
arpl
xchg
and
add
sbb
mov
loop
popa
mov
sbb
mov
aam
or
rolb
sbb
mov
std
sub
mov
ds
dec
and
rcrl
pop
popa
inc
push
cmp
pop
imul
sub
xchg
jne
push
aam
jb
inc
out
inc
repz
mov
add
xor
test
xchg
cmpsb
mov
mov
int3
add
push
rorl
push
into
hlt
or
into
pop
cmp
push
jmp
inc
out
loopne
pusha
adc
push
popf
bound
pop
pusha
cs
add
push
rclb
pop
pop
mov
lahf
add
or
aam
icebp
testl
jmp
jno
jns
sbb
or
sub
les
inc
repnz
roll
or
nop
and
das
aam
dec
dec
and
loopne
pop
adc
rcrb
insb
pop
mov
lret
shrl
push
add
jb
out
pop
dec
or
cmp
push
push
cmp
mov
cmpsl
lea
inc
pop
fldl
mov
add
loop
inc
or
les
xor
loope
out
iret
pop
and
mov
push
xorb
popf
mov
rcl
test
add
sbb
add
jmp
mov
dec
mov
aad
add
add
gs
pop
jmp
stc
inc
pop
add
or
push
out
and
push
xchg
fistpll
icebp
iret
lods
sub
movsb
dec
mov
and
test
andb
sub
add
gs
xchg
data16
inc
push
xor
dec
cwtl
popa
out
inc
pop
pusha
pop
cmp
cmp
or
lods
mov
sub
ret
fcom
addr16
add
movnti
icebp
sub
mov
jbe
xchg
fistpll
movsb
sub
xchg
dec
xorb
mov
and
xchg
xor
pop
adc
xchg
jmp
sub
inc
out
jns
nop
inc
pop
mov
loop
pop
lea
push
add
jnp
xchg
aad
cmp
lahf
dec
xor
push
js
rclb
dec
or
add
ljmp
xor
fidivl
push
sbb
sbbl
loopne
add
test
cs
inc
jo
and
or
lret
add
test
pop
shrl
jo
and
fcompl
push
pop
mov
push
push
enter
lahf
xchg
cld
jmp
xorb
dec
rcr
xchg
pusha
add
and
jge
movups
dec
subb
dec
sub
mov
push
mov
or
nop
add
lahf
push
jge
nop
xchg
sub
sub
test
or
xor
aad
xchg
sub
sarb
arpl
sub
mov
rorl
pop
xor
cmp
mov
jnp
add
mov
daa
add
sbb
jo
or
add
dec
jne
and
mov
in
sarl
bnd
push
sarb
clc
es
add
icebp
je
dec
sbb
clc
xchg
ror
xor
pxor
sti
adc
jns
push
jo
jnp
mov
out
mov
addr16
pop
pop
adc
mov
rcrb
add
mov
ror
je
mov
negl
mov
xor
fs
sub
add
fwait
xor
sub
inc
popa
ds
xchg
or
movsb
sub
in
mov
lock
pop
mov
mov
das
int3
and
cmpsl
push
lock
inc
pushf
push
arpl
add
push
dec
and
jp
adc
mov
push
pusha
and
mov
cwtl
add
addr16
cmpsl
fiadds
es
dec
inc
mov
sbb
mov
fwait
or
cmpsl
lea
cwtl
add
aaa
hlt
mov
add
or
or
xchg
xchg
andl
mov
stc
pusha
scas
lds
in
popa
and
aas
push
mov
dec
jo
pop
mov
ljmp
inc
sbb
cltd
hlt
push
pop
jle
gs
push
fdiv
mov
add
sub
fildll
and
dec
ret
adc
fcoms
test
xor
cmp
pop
cs
loope
movsl
rcrl
adc
lods
int3
lods
fildl
cmp
and
and
push
stos
pushf
rcrb
sarl
roll
or
xchg
lea
mov
jo
mov
mov
or
mov
cli
inc
push
sbb
or
fimull
movsb
add
xor
or
jmp
dec
sub
pushf
push
mov
fwait
loop
add
in
out
out
add
rorb
xor
push
out
xlat
and
or
popa
xor
subb
ja
dec
adc
or
sbb
jnp
dec
fstpt
mov
sub
shlb
int3
push
jno
test
adc
rcll
push
sub
ss
and
dec
js
inc
pusha
pop
jnp
or
mov
cwtl
je
call
test
mov
pusha
push
adc
lret
sbb
and
add
mov
loop
sbb
push
dec
add
jbe
push
nop
test
inc
mov
faddl
sahf
lock
inc
dec
add
in
ljmp
add
in
movsb
xor
mov
sbb
sbb
mov
lock
into
pusha
dec
popa
les
add
enter
cmpsb
jecxz
inc
dec
adc
popa
and
cmp
data16
and
andb
fidivl
add
mov
nop
test
aas
fsubrs
cmp
sbb
lock
xlat
sbb
ret
inc
call
sbb
mov
xchg
dec
loope
dec
js
insl
sub
mov
mov
or
out
hlt
add
into
lahf
xchg
orb
mov
add
cmp
and
sbb
outsl
cmpsl
xor
daa
sub
imul
flds
aam
or
cmpb
lods
inc
sar
cltd
inc
hlt
call
xchg
adc
jp
and
insb
inc
pop
arpl
push
inc
ja
or
push
je
movsb
adcl
hlt
insb
add
dec
out
test
std
xchg
call
dec
pusha
or
mov
or
cmp
rorb
pop
les
dec
fdivl
sbb
cmpsb
dec
adc
xorb
cwtl
dec
addr16
in
adc
push
data16
xchg
int
iret
subb
leave
mov
out
cmpsl
nop
fs
pusha
movsl
enter
cmpb
xor
dec
add
rorl
or
popa
cmpsb
or
push
add
mov
enter
cmp
or
and
popa
call
lods
in
ret
pusha
int3
faddl
aad
push
push
loope
lock
adc
test
jae
mov
cmp
call
jns
lds
dec
jle
push
pop
cld
in
add
lcall
sbb
xchg
push
mov
enter
fstpl
arpl
pop
outsb
add
out
mov
or
xlat
sbb
inc
dec
loopne
pop
out
dec
outsl
add
push
popa
dec
adc
add
or
cwtl
fadds
or
xchg
lds
aad
xchg
aam
dec
sbb
test
loopne
das
mov
test
xchg
adc
dec
ficoms
xchg
add
mov
sbb
leave
xor
in
mov
rolb
or
movsl
mov
lret
add
lods
inc
jae
add
sbb
repnz
lock
out
jle
xor
sub
movsb
and
in
push
or
frstor
inc
fistpl
mov
mov
mov
pop
mov
data16
bound
enter
and
cmpsb
test
inc
push
jp
dec
pop
push
leave
les
mov
inc
mov
es
enter
add
pop
sub
adc
inc
shl
mov
sbb
ljmp
scas
je
adc
imul
jno
orl
jg
aad
pop
es
gs
fisubs
jne
and
add
ret
inc
test
cmp
pop
sbbb
pop
pop
mov
adc
jnp
adc
in
xchg
arpl
cwtl
int
cli
scas
jns
add
or
lret
cmp
add
mov
mov
int3
inc
mov
leave
jle
cmp
fmull
mov
mov
push
data16
cmove
aam
jmp
sbb
jb
test
imul
mov
ret
popf
push
in
cmp
sbb
sbb
and
push
or
add
sub
out
das
mov
sub
mov
orl
or
loope
jo
push
add
mov
xor
sbb
pop
xchg
push
aad
and
rcrb
hlt
add
repnz
xor
adc
xchg
sbb
int3
in
mov
pop
sbb
mov
jl
push
mov
mov
add
data16
aas
pop
int3
lret
dec
sbb
add
dec
gs
jp
mov
jge
add
pushf
lods
and
and
xor
fdivs
add
push
xchg
test
cmp
push
adc
stc
xchg
loopne
mov
std
inc
rorb
clc
cmc
call
mov
sub
push
mov
mov
scas
adc
pop
pushf
dec
outsb
cmp
jmp
lds
or
outsl
jle
rclb
dec
or
add
adc
push
ret
std
dec
xchg
lods
test
sbb
and
adc
repnz
call
sti
dec
loopne
shlb
icebp
repnz
xor
aad
and
adc
rcll
xchg
add
out
sub
pop
inc
sbb
xchg
dec
lods
fadds
jnp
call
adc
lcall
push
add
pop
lds
sbb
push
call
popa
les
mov
ret
cmp
bound
pop
scas
stc
mov
outsl
das
cwtl
and
je
xor
xor
dec
dec
mov
movsb
fadds
lea
xchg
shr
stc
loopne
xchg
xor
mov
cltd
cmp
fwait
inc
das
call
or
std
popf
mov
add
aas
cwtl
jno
jecxz
cltd
inc
dec
mov
testl
ja
cmp
add
xchg
mov
add
sub
push
ficoml
xor
pop
mov
add
movsb
jo
add
mov
in
xor
lret
jmp
or
add
or
test
pop
xor
push
and
ret
sbb
mov
add
push
inc
and
scas
add
pop
je
pop
inc
in
add
dec
push
arpl
sub
rolb
das
and
cmp
or
sub
addr16
mov
inc
jbe
or
mov
xchg
pop
push
pop
adc
and
loopne
loop
add
inc
mov
shlb
cltd
sbb
pop
sbb
imul
push
mov
fisubrs
add
adc
cwtl
fwait
dec
xor
fistpl
or
imul
lods
mov
dec
stc
mov
in
divl
outsl
lock
add
xchg
cmpsb
filds
in
dec
jmp
sarb
lods
aam
add
push
push
mov
inc
mov
add
lahf
dec
mov
push
push
xchg
mov
mov
cmp
outsl
lret
xchg
mov
mov
das
rcll
inc
jl
test
xchg
neg
mov
adc
int
fs
or
lods
inc
mov
or
pop
addl
loope
data16
fidivrs
test
push
xor
dec
sbb
xlat
sbb
icebp
enter
adc
jnp
lods
sub
add
add
dec
lret
mov
out
pusha
pushf
aad
pop
xor
and
cmp
cmp
aad
add
jecxz
jmp
subps
adc
xchg
cmpb
stos
movsb
pop
lods
jo
sub
sub
mov
aam
sub
jge
add
cmp
cmp
fsubrl
loope
aam
push
adc
lea
lret
xchg
js
mov
add
mov
repz
nop
sbb
inc
mov
mov
pop
nop
cmp
ret
stc
sbb
sub
jge
mov
adc
aaa
jo
sbb
in
add
leave
and
jle
cmp
add
sarl
call
add
popa
add
add
ljmp
or
mov
rcl
cmp
into
mov
dec
mov
aad
pusha
in
out
out
js
dec
outsb
pop
add
cmp
adc
test
in
push
cld
and
adc
sarl
push
add
dec
mov
add
push
sub
pop
cmp
rcll
mov
neg
fcmovb
xchg
out
cs
push
bts
and
cmp
test
push
lock
pop
sbb
and
out
faddl
les
sbb
adc
mov
pop
cwtl
pusha
jmp
mov
nop
fwait
rolb
cmp
add
rcl
dec
cmc
mov
push
cmp
cwtl
jle
add
push
mov
jg
and
cld
sub
in
cmc
ljmp
je
mov
fs
outsl
dec
add
outsb
fcompl
hlt
add
mov
rorl
add
sbb
dec
int
or
cmp
mov
xor
enter
or
xchg
adc
add
add
pop
sbb
jno
add
rclb
nop
scas
inc
rorb
call
sub
lods
inc
ljmp
or
sarb
cmp
cmpsl
mov
or
sbbb
sbb
xchg
inc
repz
dec
mov
insl
faddp
pusha
jmp
and
jge
add
out
les
imull
cwtl
js
add
insl
in
or
hlt
mov
je
stos
jns
out
adc
aam
and
insl
popf
sbb
mov
fildll
pop
push
lret
or
test
pop
iret
dec
adc
enter
push
clc
test
add
gs
jl
dec
adc
inc
jp
daa
dec
mov
inc
out
add
sbb
mov
add
cmpsl
dec
mov
pop
aas
movsl
adc
and
mov
mov
cmpsl
inc
push
push
les
jno
push
adc
add
push
jmp
xor
mov
add
rcl
or
add
jmp
add
pop
push
push
sub
fsts
shll
inc
in
cmp
rorb
and
inc
push
dec
adc
out
mov
sbbl
mov
shr
dec
leave
xchg
sub
mov
sub
jae
das
aad
xor
and
aaa
rcl
addb
rcr
pop
xchg
rcrl
xor
xor
mov
lods
mov
inc
repz
inc
dec
outsl
pushf
add
push
shr
cmp
gs
and
inc
or
or
in
xor
cmc
cld
fdivrl
and
inc
js
gs
add
inc
out
test
mov
out
or
sub
fcom
add
or
test
es
add
imul
or
pop
adcl
loope
inc
push
xor
and
mov
add
dec
xchg
push
mov
dec
test
lret
nop
rol
leave
les
mov
cli
xchg
fwait
xor
jg
adc
or
aad
repnz
and
test
xchg
cmp
fisttpl
xor
int
bound
clc
or
hlt
cmp
add
in
sub
enter
mov
mov
mov
test
mov
dec
pop
lahf
sbb
and
and
aam
lcall
lret
rcll
movsb
loopne
xchg
inc
in
mov
mov
or
adc
xor
popa
mov
xor
cmp
xchg
add
inc
pusha
divb
xlat
add
imul
mov
mov
mov
rolb
call
fiaddl
testl
mov
jmp
dec
mov
or
sbb
outsl
or
js
fs
out
aam
and
push
dec
inc
adc
imul
data16
adc
pusha
xchg
dec
sbb
shlb
call
jge
mov
nop
mov
xor
jl
sub
popf
xchg
adc
popl
push
insb
add
ss
mov
cmc
mov
push
mov
jmp
rcrl
add
gs
add
clc
fisttps
in
repnz
add
push
xor
jecxz
xor
ds
dec
movsl
inc
rep
andl
add
xor
pusha
ret
pop
pop
sti
mov
test
shlb
mov
into
add
mov
ss
les
add
aam
mov
shll
mov
testb
mov
inc
shlb
fcoml
mov
mov
or
and
js
pop
and
movq
mov
or
jne
rolb
inc
jl
adc
push
call
cmp
cmp
inc
rcr
lds
pop
sub
jo
jns
add
aam
xchg
pop
mov
loopne
aaa
fwait
add
test
pop
outsb
xchg
add
pop
adc
in
inc
and
fbld
pop
test
or
add
xchg
movsl
xchg
fmull
movsb
ds
pop
decl
push
js
add
dec
ja
cmpsl
adcb
mov
aam
or
fmull
icebp
arpl
xchg
mov
movsb
stc
dec
xor
push
push
pop
loope
jne
mov
jmp
inc
jns
and
in
clc
leave
sub
jns
out
and
xchg
cmp
leave
fnstsw
xor
stos
xor
adc
arpl
add
inc
and
and
je
in
lret
pop
aaa
shll
data16
pop
sarb
xchg
in
andb
mov
fwait
add
loop
sbb
adc
arpl
cmp
jne
push
sbb
or
and
cld
xchg
fsub
rorb
dec
ret
jno
jns
sbb
out
cmp
or
xchg
sub
lods
push
cmpsb
dec
push
xchg
adc
pop
in
pop
mov
or
mov
clc
pop
xchg
or
les
cmp
fnstenv
pop
xlat
leave
add
mov
mov
jp
add
cld
stc
fnstsw
cmpb
fldcw
mov
enter
push
dec
or
adc
push
cmp
push
mov
and
add
repnz
adc
fmull
adc
loope
pop
sub
sub
ret
je
ljmp
loope
adc
imul
pop
push
lahf
dec
mov
orb
push
stc
stos
dec
sbb
jne
incb
aam
mov
mov
xor
add
fildll
leave
and
mov
cmp
mov
inc
xchg
inc
mov
lret
add
xor
add
enter
sub
dec
xchg
test
rcl
inc
add
inc
insb
scas
push
test
inc
mov
cmp
lcall
aam
imul
dec
jo
inc
or
mov
mov
movsb
popa
pop
pop
es
dec
inc
xchg
and
mov
xchg
sbb
fcompl
scas
aam
inc
cwtl
mov
and
aaa
jno
add
scas
or
mov
pop
enter
jl
mov
inc
les
jl
inc
sbb
adc
movsl
pop
cmpsb
mov
mov
xor
mov
inc
jns
add
stc
pop
int
sub
or
lcall
pusha
fcmovnu
outsb
jbe
inc
xor
lahf
ret
mov
dec
mov
data16
and
shrl
shlb
test
jne
cmp
call
rclb
out
dec
sbb
pop
fwait
or
test
sbb
arpl
push
xchg
test
loope
shlb
mov
loopne
movsl
push
pushf
das
pushf
and
mov
xor
mov
add
jnp
add
aad
xchg
bound
adc
jmp
lcall
shl
loope
mov
test
jne
jb
add
nop
loop
cmpsl
jne
movsb
movsl
testl
inc
add
dec
sbb
mov
pop
dec
push
inc
ljmp
inc
fimuls
mov
sbb
inc
insb
inc
sbb
rorl
jno
pop
andl
push
mov
inc
in
pop
mov
cs
inc
or
insl
popf
aad
adc
push
mov
fs
xor
lods
inc
sub
test
add
mov
pusha
ljmp
data16
pop
push
popa
rdtsc
jmp
cmp
insb
jge
es
adc
daa
add
ja
and
jl
mov
xor
fidivrs
out
mov
in
jno
lds
movaps
sbb
clc
sub
std
gs
mov
add
ret
mov
daa
add
call
push
lds
mul
les
add
adcb
movsl
push
stos
hlt
jae
dec
test
fsubr
jns
scas
jns
icebp
cmp
mov
clc
hlt
or
mov
mov
sub
or
xchg
adc
ljmp
push
inc
jl
jb
pop
pop
mov
jo
fcomps
mov
xchg
xlat
adc
aad
push
pop
lods
pop
or
dec
xchg
dec
pusha
loop
mov
mov
outsb
add
push
dec
pusha
popf
pop
mov
adc
dec
xchg
lock
push
xchg
pop
pusha
loope
out
dec
scas
push
dec
xlat
movsl
leave
sub
sbb
xchg
lds
mov
mov
jl
sbb
call
add
test
insb
pusha
adc
cmc
jp
add
mov
pop
pop
mov
lea
ja
iret
fiadds
orl
mov
out
lcall
jo
loop
mov
rcll
cmpsb
push
mov
inc
in
shrl
in
pop
or
cmp
movhps
add
sbb
ret
adc
sbbb
pop
jbe
es
into
push
test
data16
and
daa
push
pusha
push
add
or
and
ret
call
movsb
inc
pop
mov
aad
inc
pop
leave
dec
add
mov
outsb
pop
cmp
mov
rolb
adc
pop
insl
sbb
sub
mov
xor
loope
cmp
imul
cmp
lahf
pusha
xorl
das
out
imul
fisttpll
adc
loopne
dec
adc
pop
mov
mov
insl
jo
orb
xor
add
mov
rcrb
fisttpl
movsb
test
testl
aad
dec
and
nop
and
enter
test
adc
jo
mov
sub
xchg
aam
sub
add
inc
pusha
mov
sbb
mov
or
popa
add
ss
ret
push
and
mov
sub
js
inc
mov
jge
sbb
pop
testl
jnp
mov
dec
je
cltd
push
or
out
cmp
or
xchg
insl
add
lock
clc
adc
mov
mov
xchg
and
mov
jmp
mov
mov
fstpl
add
dec
add
cmp
clc
pop
lea
aam
fmull
loopne
daa
testl
or
pop
pop
fiadds
mov
adc
add
clc
mov
jmp
fwait
test
les
dec
lcall
push
add
mov
mov
dec
inc
pusha
popa
add
addb
mov
mov
mov
cmp
fs
es
add
testb
jmp
pop
xchg
test
inc
dec
or
fs
mov
sbb
mov
adc
pop
fidivs
push
out
add
cmp
pop
je
push
clc
xor
mov
inc
add
jns
push
lds
add
scas
mov
dec
fimuls
negl
pop
mov
lods
movsl
jmp
or
popf
pop
mov
xorb
cs
pop
sub
adc
and
lea
ljmp
sbb
add
aam
mov
dec
out
lock
adc
int
lret
add
sub
test
or
mov
adc
cmc
dec
sub
pop
jg
mov
xchg
loop
mov
push
sbb
test
pop
test
jecxz
test
dec
test
cmovns
out
fcmovnb
and
push
inc
and
mov
adc
leave
inc
adc
push
mov
cmp
xchg
push
orb
leave
fsubl
pop
inc
jmp
shrb
mov
push
or
popa
dec
dec
adc
or
or
aam
jge
push
iret
or
jae
xchg
lods
adc
jno
pop
mov
loope
in
mov
mov
pop
fdivr
leave
jge
aaa
clc
insb
add
shrl
pop
cmpsb
test
negb
dec
and
sbb
fs
dec
mov
push
pushf
cmp
push
push
mov
pop
add
rclb
jmp
negb
cltd
or
mov
push
ret
mov
sbb
sub
mov
fcmovb
shlb
out
les
insb
and
inc
xchg
das
sub
loope
and
in
cmp
sub
and
mov
js
push
sahf
mov
pusha
mov
xchg
push
repnz
or
outsl
cmp
and
dec
pop
push
and
in
ficoms
cmpsl
or
leave
add
and
mov
jae
jo
and
pusha
xchg
pop
jp
add
xchg
inc
or
ds
fisubrl
xchg
int3
in
jno
aas
cwtl
mov
add
retw
mov
xchg
inc
adc
inc
pop
fdivs
les
xchg
aaa
adc
mov
dec
pop
mov
xor
ds
mov
and
xor
xchg
adc
push
add
inc
mov
xor
push
pop
orl
test
pop
cmp
sub
lock
mov
mov
dec
mov
cmpsl
cmp
fnstcw
jb
dec
mov
or
nop
xchg
mov
sbb
je
xor
jmp
popf
inc
adc
repz
in
add
sub
dec
inc
dec
add
cmp
or
mov
xchg
push
jns
and
rcrl
dec
mov
push
add
mov
mov
mov
push
stc
fsubrs
push
push
xor
in
lods
sub
pop
mov
jb
xor
mov
mov
sub
mov
mov
test
insb
fwait
int3
pop
mov
add
adc
aam
inc
les
sbb
lret
ret
arpl
mov
adc
ljmp
sub
pop
outsb
or
leave
sub
insb
negl
pop
mov
std
outsl
mov
aad
enter
add
cmc
adc
dec
cmp
pusha
cmpsl
sub
popl
ret
sbb
cmove
iret
into
cmp
mov
in
jge
add
sbb
and
push
push
xchg
ss
add
popa
sub
in
xor
push
adc
movl
out
loope
ja
pop
int3
fs
push
pusha
loop
xchg
mov
add
cs
mov
mov
xchg
and
sar
lock
cmp
insb
dec
sub
loope
mov
add
aas
aad
js
bnd
lock
sbb
xchg
add
sub
aam
xchg
loope
sub
out
les
and
stos
imul
out
jmp
sub
push
push
pusha
popa
pop
sub
xor
mov
add
push
ljmp
dec
mov
mov
loopne
mov
add
jle
mov
addl
sbb
jmp
or
and
or
or
add
mov
cmc
nopl
or
rol
fldl
or
lods
and
pop
sub
andb
lods
mov
add
cltd
sbb
sets
adc
push
mov
xor
inc
popa
inc
lock
mov
sahf
and
and
inc
mov
add
out
shrl
push
push
adc
fwait
adc
rcl
bound
int
mov
cld
and
test
in
push
cs
pop
push
testl
pop
test
jl
or
fsubr
pop
mov
insb
xchg
outsl
mov
pop
add
mov
sbb
sub
ss
arpl
and
in
movsl
shrb
insl
jge
push
push
scas
xchg
inc
add
mov
enter
ss
subb
jg
jg
add
jmp
push
aam
jg
add
sbb
push
es
out
add
sarl
pop
insl
or
xchg
dec
scas
cmp
add
mov
flds
pop
add
cwtl
adc
ljmp
jae
cli
dec
add
fimull
jnp
aad
test
out
add
rorb
lea
xor
mov
push
mov
mov
dec
jge
or
xchg
inc
arpl
cmc
movsb
push
pusha
out
mov
fs
push
xchg
dec
jle
inc
cmp
rclb
stos
cld
lods
mov
loopne
add
inc
pop
ss
clc
cmp
dec
incb
test
add
jnp
sub
mov
xlat
xchg
add
sub
arpl
and
in
jge
push
xchg
aad
roll
lret
andl
out
ret
push
and
pop
mov
pop
sti
mov
sub
testb
add
lock
adc
pop
movsl
in
xchg
sub
jno
mov
xor
dec
movsb
js
cmp
aas
repz
add
pushf
fldl
mov
jo
cmc
sub
fisubs
adcb
pop
mov
nop
xchg
addr16
aas
insl
push
push
jo
xchg
cmp
ja
adc
in
test
pop
fmul
cmp
dec
xor
lods
jno
mov
ror
jnp
push
lea
and
pop
pop
inc
pusha
sahf
adc
dec
or
xlat
dec
xchg
and
aaa
test
add
adc
ret
jbe
xor
cmp
add
jns
pushf
add
and
aas
add
dec
and
add
scas
push
insl
inc
movsl
into
push
sbb
sbb
push
sub
add
nop
std
rorl
inc
dec
add
or
add
mov
cmp
pop
out
mov
test
cmp
inc
add
leave
jp
adc
clc
adc
jb
dec
push
lods
or
sbb
xor
fildll
pop
add
xchg
cmp
mov
push
clc
add
jmp
dec
in
ret
clc
mov
mov
add
lahf
cmpsl
jae
and
std
and
sti
add
add
dec
push
mov
fisubrl
pop
ds
leave
shll
out
test
sarb
aad
xchg
inc
sbb
fmull
cmc
fwait
xor
mov
mov
in
xor
fadd
sbb
rcrb
inc
popf
dec
and
sti
in
push
sub
cmpb
adc
add
aas
out
push
cwtl
hlt
addb
push
cmp
int
pop
add
lds
jmp
ss
mov
push
mov
push
ret
adcb
idivl
ds
push
cmpsl
pop
pusha
add
xchg
lods
add
pop
inc
loop
push
ja
cmp
push
ret
xchg
push
add
fcompl
roll
aam
imul
sub
and
push
jbe
mov
pusha
or
push
jne
mov
sbb
fmull
ss
or
sbb
adc
imul
xchg
and
in
mov
cli
jnp
movsl
and
popf
xor
mov
dec
inc
sub
push
add
outsl
push
lret
push
lret
cmp
pusha
xor
int3
mov
sub
jg
sarb
lahf
add
leave
fisubrs
pop
mov
and
int3
je
mov
scas
in
icebp
outsb
movsb
pop
xor
stc
lock
int3
negb
jge
sub
mov
lods
xor
add
test
inc
jecxz
jl
outsb
fstps
add
into
cmp
loopne
mov
cs
sarb
add
add
mov
push
and
add
and
jecxz
cmp
fisttps
insb
add
xchg
aas
daa
mov
sbbb
dec
xor
xchg
push
xorb
mov
in
rcll
dec
pop
add
jle
stos
xchg
push
cmpsb
repz
ds
mov
pop
xor
lock
push
add
in
call
or
cwtl
mov
mov
out
mov
inc
pusha
fwait
lahf
dec
sbb
add
mov
ja
out
mov
sahf
inc
test
rcrb
add
fidivrl
stos
add
jbe
adc
jb
das
loopne
mov
push
push
adc
loop
inc
adc
bswap
ja
jl
out
pop
jmp
mov
push
test
push
xchg
adc
fisttpll
ljmp
add
aad
xor
icebp
sbb
arpl
fwait
xchg
inc
pop
push
jp
clc
mov
xchg
ds
mov
jbe
je
add
cmpsl
scas
cmova
call
nop
sub
ljmp
lea
add
adc
es
mov
add
mov
pop
filds
into
cmc
and
sub
mov
sub
sub
insl
cltd
pop
stc
or
mov
xchg
int3
stc
sbb
test
pop
dec
add
pop
loopne
mov
loop
cmp
pop
xlat
stos
add
and
pusha
jle
nop
sub
pop
xchg
push
mov
rcll
nop
add
cltd
or
push
clc
lahf
push
sub
ds
lret
cs
pop
add
dec
in
imul
mov
popf
test
xchg
pop
add
cmc
bound
mov
jbe,pt
inc
adc
outsb
jo
push
and
jno
daa
mov
mov
fdivrl
out
in
xchg
jle
pusha
sbb
dec
jmp
add
or
movsb
sbb
xor
sub
or
and
push
jne
mov
or
iret
push
mov
fwait
ds
mov
or
lahf
or
inc
cmpb
inc
flds
ret
ret
enter
add
cli
mov
add
mov
jbe
mov
sub
lcall
notl
add
and
icebp
subb
adc
cmp
inc
orl
iret
pusha
dec
shll
sub
in
and
jns
filds
cmp
jo
movsb
pop
cmp
pop
cmpb
in
pop
jno
add
sub
cmp
insb
xor
mov
xor
mov
in
pop
lods
pop
jp
lock
jns
dec
sahf
or
orb
xchg
push
int3
mov
lock
add
xchg
nop
in
mov
push
add
imul
bound
push
add
xlat
fists
mov
fsts
mov
popa
je
push
add
cmp
hlt
mov
add
ds
xorl
inc
fs
mov
xor
lods
cwtl
fs
push
xchg
jp
andl
fwait
add
bound
add
inc
leave
and
push
into
mov
test
push
mov
xor
xchg
nop
aam
mov
loop
jecxz
push
loopne
fisubl
repnz
and
rcrl
popl
pushf
adc
aaa
out
and
jl
add
xchg
add
dec
sbb
mov
sbb
cwtl
adc
jb
add
movsl
aad
xor
mov
mov
es
dec
push
gs
add
orl
stos
mov
adcl
push
add
jb
add
sub
and
outsl
sbb
ficoms
adc
cmp
fcomps
mov
dec
nop
xor
or
mov
xchg
popa
sub
mov
adcl
sbb
cmp
pushf
mov
cli
add
cmp
loope
push
sub
cmc
adc
jo
arpl
out
stc
stos
jle
aas
lock
pop
xorb
add
jb
fidivl
dec
stc
int
lea
loope
or
pop
sub
push
or
iret
pop
xchg
in
mov
sbb
sub
sub
subl
adc
adc
push
mov
add
cld
jo
pop
push
popl
or
xor
pop
je
je
and
add
push
lcall
dec
mov
in
popa
pop
in
jg
add
adc
add
jb
mov
movswl
lahf
xchg
std
ja
dec
fmull
scas
lcall
lock
mov
xor
mov
in
test
dec
lock
pop
mov
jmp
sub
cmc
or
dec
out
jno
test
pop
test
daa
nop
dec
push
rcr
stc
add
inc
mov
inc
sub
mov
sbb
out
mov
push
cltd
cmp
xorb
sub
jmp
stos
or
cld
clc
notb
imul
mov
clc
nop
pusha
scas
mov
cmp
cmp
jns
add
nop
add
cmpl
mov
in
and
xchg
jg
add
lcall
add
aam
pop
push
mov
cli
lea
jno
pop
sbb
add
jg
test
dec
or
pushf
add
add
popa
lods
jl
roll
loope
sbb
pop
cwtl
add
mov
outsl
sbbb
aaa
add
push
xchg
lret
mov
or
cli
dec
jge
mov
insl
daa
inc
lea
aam
pop
pop
add
add
xor
push
call
clc
mov
xor
push
fmull
dec
push
cmp
mov
add
inc
shrb
jmp
fwait
add
insb
mov
dec
fnstcw
mov
jmp
adc
adc
jecxz
nop
popf
or
xchg
and
or
mov
fs
imul
mov
repnz
cmpl
sbb
xchg
or
jbe
shrl
inc
fisubrs
test
insl
xchg
sbb
das
sbb
add
pop
sub
sbbl
or
xchg
idivl
imul
lods
inc
sub
in
sbb
aam
mov
pop
sbb
in
add
cli
daa
or
test
sub
and
lock
jge
or
add
lcall
pop
dec
test
andb
fbstp
cmpsl
cmp
jo
pusha
or
ja
daa
jno
fldl
inc
test
stc
loope
push
jmp
ds
hlt
push
add
sub
and
roll
dec
dec
iret
fnstcw
jmp
adc
mov
add
add
add
cmp
xor
repnz
icebp
jg
adc
vmovaps
xchg
jo
and
pop
and
scas
mov
bound
stos
arpl
jno
outsb
cs
std
pop
fnsave
test
js
sub
lahf
or
fwait
inc
cmc
add
adc
add
rol
stc
mov
ret
jmp
mov
xchg
ficompl
xchg
push
adc
add
add
int3
pop
pop
add
sahf
xchg
sub
adc
add
sub
xchg
xchg
int
rcrb
lds
cmpsl
ret
pop
lahf
jmp
dec
imul
sbb
es
popf
add
shrd
adc
push
ljmp
out
jne
and
out
std
adc
push
or
popf
aad
mov
mov
mov
xchg
mov
rorl
data16
lock
add
cmp
scas
jge
cmp
in
add
push
jnp
jl
jle
push
sbb
lret
stc
push
and
push
movsl
int
rcl
inc
pop
and
pop
insl
sub
fisubrs
or
mov
stos
jns
add
icebp
cmp
sbb
jnp
daa
mov
pop
or
mov
cli
pushf
or
add
mov
pop
lock
imul
push
adc
in
je
push
inc
and
mov
pop
mov
daa
mov
inc
sbb
inc
out
push
add
mov
mov
inc
pop
xchg
subl
jle
loopne
pop
orl
sbb
add
loope
mov
push
mov
mov
xchg
outsl
jns
and
pop
pusha
addb
sub
shlb
imul
jl
sub
pop
adc
jne
clc
sti
mov
sub
adc
andb
xor
shrb
daa
pop
dec
jle
push
push
sahf
jecxz
out
pop
clc
roll
jnp
test
in
sbb
mov
add
jo
mov
jb
inc
jbe
hlt
sbb
into
inc
add
push
bound
sahf
sar
out
sub
lcall
cmp
dec
mov
xor
pusha
enter
mov
and
jmp
std
or
test
or
test
in
and
test
jl
loopne
movsl
xor
mov
add
and
sbb
inc
pop
fistpll
cld
cmp
jle
unpckhps
lgs
call
js
jae
out
add
jp
sub
outsl
hlt
add
fstps
clc
cli
in
les
push
fidivrs
cmpsb
add
clc
stc
mov
call
push
mov
loope
xorl
cmp
sub
bound
clc
outsl
jno
not
mov
out
xchg
int3
lcall
mov
sbb
xor
or
push
add
pop
fcomp
mov
inc
fs
or
add
xor
sbb
popf
and
loopne
adc
pusha
push
pop
sti
popa
loop
inc
sbb
aad
pop
cmp
shrb
adc
push
cmovp
dec
pop
int3
outsb
cmp
mov
sbb
int3
cwtl
sub
nop
fs
or
mov
xor
pop
lahf
inc
add
and
sbb
dec
nop
cld
push
call
dec
popf
loopne
test
stos
add
out
mov
pop
xor
mov
in
das
fwait
push
std
mov
xor
jns
or
fs
stos
adc
orb
and
cs
push
pop
sbb
sub
out
pop
dec
mov
or
ja
fiadds
xchg
insb
sbb
fs
pop
push
fwait
mov
mov
inc
out
loopne
lret
cmpsb
add
stc
ret
sub
fcmovnb
pop
sbb
sub
gs
xor
aam
cmpb
leave
and
add
imul
imul
inc
sbb
push
ret
adc
pushf
jne
lods
aam
scas
jp
add
jle
cmp
mov
xchg
aam
add
mov
or
mov
shl
dec
jae
ds
sub
mov
add
loop
popa
sbb
xor
adc
push
add
stc
and
push
adc
fisttpl
and
mov
xor
pop
xchg
xor
mov
push
nop
movl
leave
mov
cmp
xchg
adc
xor
mov
ja
pop
das
mov
add
xchg
sahf
js
test
scas
adc
movl
adc
iret
enter
mov
cmp
and
imul
xor
jnp
stc
inc
pop
hlt
imul
jge
pop
popa
sbb
push
or
sub
in
inc
add
mul
fcoms
xlat
dec
and
push
pop
cwtl
in
inc
add
lahf
loope
sub
lret
inc
popa
imul
pop
mulb
loopne
rcll
xor
mov
pop
movaps
out
popf
fcoml
jmp
pop
nop
jle
mov
insb
or
mov
ljmp
test
xor
je
rcll
mov
shlb
jb
add
push
adc
add
jp
scas
sub
loopne
and
or
push
lcall
sbb
divb
jge
in
fimuls
es
sub
sub
lods
loopne
mov
leave
in
aad
test
adc
int
in
mov
jg
and
leave
add
mov
xor
lea
pusha
arpl
repz
and
outsl
xchg
inc
or
sub
repz
adc
add
push
mov
add
fadds
or
adc
stos
or
std
push
lods
rorl
ds
push
add
xor
test
mov
adc
les
arpl
iret
pop
add
jle
lcall
fimuls
xor
xchg
jne
hlt
push
sbb
adc
cmp
add
cmp
mov
sub
movsb
mov
ss
pshufw
aam
stc
in
mov
sbb
push
out
and
jp
lods
dec
adc
daa
xor
fstps
arpl
scas
and
sar
and
stos
or
bound
dec
cltd
or
mov
push
fimuls
in
rcl
pusha
push
mov
pop
fs
push
mov
fcoms
faddl
fcoml
cmpsb
push
test
jb
movsb
fs
push
push
xor
int3
loopne
add
push
sbb
sbb
js
sub
add
insb
faddl
or
xchg
movsl
jmp
mov
mov
test
sbb
dec
jo
clc
jp
test
add
insl
sub
aas
sbb
pop
add
jge
and
out
daa
dec
mov
add
repz
inc
das
sub
mov
adc
xor
cmp
mov
mov
sbb
ret
sbb
inc
xlat
sbb
mov
mulb
mov
pop
adc
neg
loopne
mov
push
repnz
int
mov
inc
shrb
popf
mov
daa
jge
leave
cmp
pop
jns
fisttpll
cmp
pushf
inc
faddl
xor
dec
push
std
and
add
orl
mov
inc
mov
or
mov
sub
add
sbb
jge
mov
pop
dec
fdivs
add
sub
push
pop
pop
mov
and
sbb
subb
shrb
adc
outsl
mov
sbb
or
shlb
or
movsl
daa
adc
pusha
jo
sti
xor
xor
adc
pop
pop
xor
mov
stos
js
pop
imul
sbb
lea
out
mov
imul
nop
sub
and
and
or
mov
mov
test
call
fwait
inc
mov
aas
pop
xor
sbb
pop
js
sbbl
rol
lcall
push
aam
icebp
outsl
movsb
add
xor
clc
push
mov
fs
addb
sub
or
lea
test
mov
stos
ret
adc
pop
add
mov
mov
pop
or
sti
test
mov
lret
out
repnz
pop
sub
pusha
or
int
sub
cmp
dec
out
cwtd
cmp
mov
lods
add
fisttpll
push
pop
pop
mov
mov
or
mov
les
outsb
hlt
and
popf
sti
sub
mov
push
mov
mov
sbbl
and
and
rolb
mov
cmpsl
les
or
and
cwtl
add
mov
das
fwait
jmp
fiaddl
add
mov
push
xor
cmp
and
scas
and
and
cmp
pop
xchg
popa
pusha
outsl
je
daa
aam
lret
or
and
mov
xor
cli
or
loop
xor
mov
outsb
stc
add
out
cs
jne
movb
or
sbb
cmp
push
mov
stc
cmpsb
mov
push
and
inc
push
cli
shrb
clc
xor
ds
and
popa
std
fcomi
or
lock
mov
leave
and
lret
fistps
or
add
sub
xchg
add
enter
fucomi
lahf
sbbl
inc
mov
xchg
gs
or
adc
dec
mov
loopne
or
stos
mov
cmpsb
dec
sbb
outsl
push
adc
pop
xchg
cmc
or
ret
push
push
imul
insl
sub
sahf
sbb
push
jns,pn
mov
popf
xorl
cmp
xor
movsl
loopne
pop
dec
pop
out
pop
xor
mov
mov
loope
cmp
pop
pop
mov
rol
rcrb
or
push
out
sub
cmp
inc
xor
jecxz
shlb
adc
xor
mov
ret
push
xchg
and
push
lret
sbb
pusha
lret
lret
out
jmp
rolb
insl
adc
stc
out
mov
ret
popa
popf
jmp
push
add
or
test
loope
dec
sahf
clc
repnz
add
jbe
mov
mov
add
stos
push
lds
xchg
lods
or
shr
pop
add
push
cmp
add
roll
mov
ret
or
ret
das
and
pop
pop
cld
inc
sarl
movswl
sub
or
mov
les
movl
call
sub
push
add
cmp
or
inc
in
cs
pop
dec
std
mov
jmp
fs
or
fnstsw
or
sub
adc
test
dec
je
add
popa
or
cmp
nop
lea
bound
popf
inc
rol
add
pop
push
lock
sbb
mov
iret
xor
jmp
in
sbb
and
xchg
pusha
add
mov
mov
add
jl
repnz
sbb
xor
inc
mov
dec
inc
in
xchg
add
jmp
fucomp
je
add
in
sti
jnp
adc
cs
mov
push
enter
inc
addr16
mov
add
sbb
ret
sbbb
jno
dec
lds
movsb
ret
imul
add
add
and
mov
jg
popa
cmp
stc
and
push
outsb
scas
inc
xor
mov
or
sub
cwtl
orw
and
push
xchg
out
repnz
mov
xchg
lock
sub
inc
movsl
stos
and
and
shr
sub
lea
mov
testb
xor
xchg
sub
xchg
jno
push
pusha
mov
pop
mov
rol
sbb
adc
lock
add
xor
scas
sti
jnp
add
cwtl
or
push
cld
lds
jae
mov
lock
xor
sub
cmp
loop
xchg
push
add
xor
and
cmp
adc
sbb
xor
dec
jns
push
shlb
arpl
cmpsb
inc
int3
or
or
inc
out
test
jo
pop
adc
sub
add
mov
lret
xor
sbb
loop
ss
stc
pusha
loope
cmp
mov
cwtl
lret
inc
addb
xchg
add
xor
dec
adc
into
and
jo
mov
inc
insl
aam
dec
nop
xchg
mov
out
cmp
pop
bound
add
push
enter
stc
add
je
adc
test
aas
dec
and
xchg
int3
ja
imul
pop
dec
cltd
and
paddsb
ffreep
dec
add
cmp
and
xor
adcb
adc
and
mov
mov
push
cmp
fadd
add
adc
lret
mov
and
insl
sarb
lea
add
or
sbb
stc
sarb
rclb
and
jle
dec
adc
in
loop
add
shlb
inc
inc
xchg
sbb
je
xlat
xor
es
in
jne
xchg
stos
pop
mov
sub
jns
nop
or
cs
dec
add
aam
sbb
cmpsb
or
adc
push
push
and
ljmp
and
das
cmpl
xchg
roll
xor
cmp
or
out
sbb
pop
pop
mov
push
test
lds
and
mov
add
cld
bound
xchg
out
loopne
push
xchg
push
push
cmpb
fs
ss
xorb
add
lock
dec
sub
mov
inc
xchg
xor
nop
sub
cmp
cmpsb
shlb
mov
xchg
cli
xorl
rclb
nop
cmp
dec
jnp
add
mov
je
add
lock
push
adc
sub
add
test
dec
adcb
subb
into
insb
mov
add
xchg
jg
test
sbb
add
mov
or
push
sub
loop
xor
pop
adc
aad
cmpsl
mov
pop
push
iret
stc
shrb
mov
sbb
add
jne
jae
ds
jns
add
aam
cmc
push
cs
cmp
add
stc
add
pop
shlb
test
push
adc
and
sbb
repnz
or
sub
sub
push
add
pop
or
fninit
and
sub
or
cs
jno
adc
les
sbb
in
lcall
in
stos
mov
mov
in
mov
test
mov
jg
loopne
or
cmp
adc
push
addr16
or
inc
xchg
inc
add
push
sub
enter
mov
jb
lds
push
jno
test
and
inc
cld
add
pop
or
inc
xchg
or
hlt
imul
or
std
jae
jg
xor
sub
inc
dec
add
and
inc
out
inc
into
inc
cmp
add
out
rep
rorl
femms
xchg
push
test
pop
stc
ret
add
sbbl
jge
jno
push
xor
mov
call
dec
cmp
and
pop
fidivl
inc
mov
cmp
and
add
xchg
add
lret
fwait
jns
shll
mov
add
out
inc
into
int3
mov
out
in
and
add
xor
sbb
jo
aam
outsl
insb
mov
xor
aam
int
mov
jo
sti
push
sub
divb
mov
mov
sbb
add
out
cwtl
fneni(8087
cwtl
push
test
or
ss
xor
cmp
ret
out
adc
or
test
adc
inc
mov
sti
fistps
inc
sub
ds
push
or
je
adc
pop
pushf
xchg
lret
dec
les
push
inc
test
mov
inc
cmp
mov
and
sahf
xchg
push
jne
ret
jo
stos
or
lods
insb
loopne
pusha
enter
loop
les
aas
mov
lea
xor
xchg
mov
cmc
mov
jl
cmp
adc
xchg
xchg
adc
add
enter
mov
jle
inc
mov
rcrb
cmpsl
outsb
adc
xor
inc
cld
aas
cwtl
xor
xor
fcompl
loopne
test
mov
xchg
stos
sbbb
sub
fildl
out
push
fwait
jmp
addb
mov
popa
xchg
push
inc
sbb
jne
sub
cltd
sub
insl
sti
or
repz
lcall
fmuls
cltd
cmp
cmp
cli
mov
and
mov
sbb
xlat
mov
mov
lds
jge
nop
sbb
addb
daa
xchg
jle
pop
fisttpll
leave
push
addb
clc
add
hlt
and
add
rcrb
pop
inc
jne
pop
or
cmp
xchg
mov
fcoms
mov
adc
shll
lods
mov
xchg
mov
xor
test
and
push
jle
add
inc
sub
mov
sbb
out
mov
or
cmp
out
add
add
fcompl
xchg
cmp
xor
or
lret
push
sub
add
pushf
dec
imul
enter
dec
adc
or
leave
lods
lds
scas
mov
and
push
mull
test
rcrb
fstpt
jbe
iret
and
fsubrs
sbb
int3
add
xbegin
inc
xchg
sub
sti
lods
sarb
pusha
pop
call
mov
mov
or
sub
int3
popl
stos
imul
xchg
cmp
cmp
test
jmp
rorl
mov
add
sub
jecxz
cli
pop
ss
imul
and
add
cmpsb
in
ljmp
and
cltd
cmp
scas
gs
xor
mov
jns
add
adc
sub
jnp
add
fsubr
cwtl
and
inc
xor
into
mov
xor
mov
sub
pop
and
push
mov
ljmp
sub
enter
lret
addr16
cmp
xchg
cmp
xchg
shrb
xchg
out
add
xchg
cmp
out
mov
adc
lcall
xor
sub
imul
ficompl
popa
pushf
or
jne,pn
pop
pop
cli
cmp
js
xchg
pop
mov
jl
inc
mov
arpl
fs
or
mov
pop
inc
addb
or
fidivrl
aaa
lock
adc
cltd
xor
je
cmp
test
mov
jg
pushf
sti
fildl
mov
push
sub
into
fidivrl
mov
out
roll
xchg
stc
pop
inc
mov
or
or
sub
faddl
inc
xor
mov
jae
idivl
sarb
jne
sbb
lock
cltd
sub
sbb
sbb
stc
mov
xchg
cmc
xor
inc
sub
push
sub
scas
inc
mov
cmpsl
bound
orb
sub
int3
xchg
pop
test
mov
xchg
and
rorb
inc
in
xchg
sbb
xchg
jle
lcall
jns
mov
mov
cmp
adc
cltd
dec
jno
jae
loopne
pop
jns
cmp
data16
nop
mov
and
pop
test
rcrb
mov
and
pcmpeqb
aad
jmp
add
je
push
inc
add
ds
lock
pop
dec
add
out
mov
jno
sub
stc
addr16
pop
movsb
pop
lcall
dec
fs
jge
mov
add
out
shrb
aam
js
sbb
scas
je
sbbb
int3
enter
mov
mov
xor
or
mov
sub
jbe
cmp
testb
jbe
call
in
in
dec
insl
mov
push
push
and
jb
std
shll
dec
mov
cmp
jnp
sbb
enter
and
out
fs
or
and
xchg
cmp
insb
jo
lds
and
pop
sbb
cld
pop
bound
adc
loopne
pop
jb
add
and
ret
add
mov
les
sbb
xchg
fsubl
mov
inc
inc
pop
or
lock
add
dec
decb
out
nop
add
mov
test
mov
ficomps
pop
or
nop
mulb
popf
repnz
inc
fs
fcompl
add
test
lcall
sahf
pop
call
mov
lods
or
popa
sbb
add
ret
inc
adc
mov
mov
shrb
iret
out
fldl
loopne
mov
and
jbe
inc
aam
jecxz
push
mov
jns
fnstcw
add
sub
movsl
ljmp
xor
jg
mov
or
adc
clc
jns
sbb
nop
xchg
int3
addl
inc
test
bound
in
sbb
add
push
sbb
mov
mov
inc
jmp
cmp
xchg
lcall
xor
xchg
scas
mov
les
sub
pop
lahf
das
add
jle
cmp
call
and
sbb
sbb
stos
or
pop
js
add
adc
sbb
add
roll
pusha
push
dec
hlt
sbb
cmpsl
lds
hlt
xor
or
or
aad
leave
pop
andb
lret
or
jo
jne
icebp
test
cmp
and
add
adc
aad
adc
and
inc
jg
jo
mov
aad
lods
mov
imulb
daa
bound
mov
sub
into
jno
pop
sahf
mov
mov
jne
sbb
lds
push
pop
dec
cmpsl
enter
sahf
xor
movsb
sarb
push
sub
movsl
xor
push
roll
addr16
lods
rolb
fs
lret
call
add
xchg
lods
adc
add
pop
cli
lock
inc
dec
jge
fimuls
rolb
mov
loop
mov
lods
add
loope
cmp
pop
repnz
add
shlb
shl
jbe
hlt
mov
arpl
or
in
ds
add
jl
aam
jne
shll
xchg
adc
insb
pop
jns
cmp
sub
or
pop
mov
imul
or
test
dec
mov
mov
inc
sub
sahf
cltd
cwtl
push
andps
jo
xchg
sub
rcrb
pop
fldl
push
ds
dec
adc
or
add
adc
cmp
in
mov
push
cmp
push
mov
xchg
inc
jl
sbb
adc
pop
outsl
sbb
mov
jmp
ret
mov
add
loope
sti
gs
fmuls
xor
outsb
insb
dec
out
xchg
and
daa
test
popa
lret
iret
or
dec
ss
or
xchg
mov
pushf
or
pop
pop
lahf
or
clc
push
xlat
pop
lods
add
icebp
or
pop
add
leave
mov
inc
lods
mov
sbb
mov
andps
orb
inc
gs
cmp
add
repnz
sahf
and
push
ret
or
lock
outsl
add
xor
xor
test
add
xchg
xchg
sub
cltd
inc
jne
push
sbb
add
xchg
sub
hlt
and
add
out
rorb
or
cmp
dec
push
loopne
lock
xchg
push
dec
cmpsb
mov
and
cmp
js
cmc
stos
ljmp
dec
inc
sub
cmp
mov
shlb
xor
and
stc
adc
sub
fsts
or
lock
push
inc
nop
pusha
xchg
clc
sub
and
aam
lahf
push
adc
hlt
insb
sub
sbb
es
sbb
add
cmp
rorl
mov
sbb
ss
in
jns
dec
push
cs
adc
sub
rcll
cmc
andb
jg
or
mov
cld
adc
add
test
mov
and
mov
pop
repz
orb
jecxz
cmp
into
sbb
dec
adc
les
imul
inc
jg
jns
or
fs
out
outsl
xchg
test
add
xor
sbb
add
sbb
mov
pusha
adc
out
ret
xor
jo
stc
test
add
lods
ja
fsubrs
sbb
test
ror
jge
arpl
sub
inc
and
xchg
arpl
or
rorl
arpl
inc
popa
push
sbb
std
or
xchg
mov
push
fsubl
push
xor
dec
mov
notb
and
cmp
pop
xor
xchg
jne
jno
fincstp
sbb
add
mov
mov
out
leave
dec
scas
and
test
push
add
fldcw
test
and
mov
into
adc
xor
add
stos
frstor
pop
negl
clc
push
mov
mov
push
and
pop
in
push
adc
add
push
mov
mov
mov
add
pop
fildl
mov
int
lret
pop
pop
cmc
xor
js
pop
out
mov
in
sbb
pop
lret
lahf
jns
movsb
add
in
inc
aas
fsubl
add
pusha
in
jns
mov
icebp
pop
shl
or
jns
fsubl
inc
idivb
mov
adc
push
out
and
add
xchg
addr16
add
sub
cmp
rclb
push
movb
and
dec
test
andb
sub
pop
and
jo
shrl
jge,pn
sahf
mov
lock
cs
aaa
pop
stc
sbb
rcll
add
mull
cmpsl
popf
mov
call
in
mov
ljmp
add
mov
mov
add
out
test
inc
adc
jnp
add
sbb
js
push
mov
dec
push
movsb
jns
sbb
mov
es
inc
cmpsb
add
daa
mov
add
fcoml
sub
scas
int3
add
movsl
mov
lods
outsl
aas
xchg
jecxz
cmpsl
js
inc
rorl
cmp
push
adc
sbb
clc
mov
xor
popf
dec
push
in
in
loopne
and
xchg
and
hlt
jl
pop
xor
sbb
movsl
inc
add
adc
aam
mov
xchg
js
xor
sbb
inc
pop
add
sbb
arpl
mov
fmull
aam
adc
hlt
adc
pop
stc
and
pop
movsb
and
add
sbb
dec
gs
je
je
fistpl
pop
int3
data16
enter
ljmp
rclb
or
mov
push
jg
mov
add
xor
mov
out
mov
mov
loop
jp
add
sbb
push
shrb
nop
insb
add
jle
dec
fs
sub
cmp
push
test
cmp
xchg
cwtl
xor
cmp
stc
mov
xchg
fwait
add
push
add
imul
mov
adc
les
stos
jge
cltd
jl
hlt
je
add
arpl
pop
adc
jl
cmpsl
sub
mov
inc
jo
shl
add
sbb
pop
and
int3
lret
inc
push
loopne
and
int
dec
pop
inc
jns
sbb
push
addb
pushl
scas
pop
movsb
jbe
jle
jb
jo
pop
and
je
dec
incl
js
xchg
call
jns
inc
sbb
in
jbe
stos
xor
test
xor
or
jg
add
inc
std
loop
xor
leave
iret
inc
xchg
pop
sub
shrb
ret
mov
rorl
rcrl
aaa
adc
sbb
rol
adc
sub
add
clc
addr16
xchg
push
test
mov
lods
adc
mov
sub
add
rol
jns
sub
pop
sub
add
inc
adc
add
fnstenv
pusha
inc
sub
lahf
sarb
and
lahf
inc
rclb
cmp
adc
mov
xchg
repnz
repnz
xor
popf
imul
and
cltd
xor
cld
push
mov
cmp
and
negb
sbb
dec
xor
outsb
enter
inc
jge
cmpsb
xor
or
sti
pop
jo
fbstp
add
dec
pushf
jl
pusha
mov
sti
xchg
adc
pusha
inc
jbe
cmp
in
int3
pop
adc
sbb
dec
inc
add
or
jb
adc
cmp
sbb
mov
adc
enter
into
shrb
inc
test
inc
and
mov
sbb
out
adc
aam
das
jmp
outsb
lods
cs
rclb
sub
xchg
fs
xor
lret
and
test
out
inc
mov
or
dec
mov
jg
jmp
das
fldl
cmp
pop
push
test
mov
push
mov
mov
push
mov
orl
jb
imul
rcrb
insb
cmp
xor
test
ret
pop
call
fldpi
orl
push
ja
cmp
outsl
sub
add
jbe
jns
jns
or
pop
sbb
popa
stc
es
dec
loopne
rolb
sub
fs
push
or
adcb
mov
inc
flds
je
and
stos
dec
inc
cmpb
daa
rcrb
ljmp
mov
sub
es
push
sub
push
mov
xor
mov
adc
popf
sub
add
push
sbb
xor
add
mov
push
test
aam
sbb
or
loopne
lea
jo
addr16
pop
rol
cltd
xchg
out
or
add
jg
and
fnstcw
sub
or
mov
pop
adcl
mov
rorl
cmpsb
icebp
cmc
sbb
jb
into
add
sarl
mov
adc
dec
and
gs
lret
loopnew
add
adc
rclb
sub
arpl
add
sub
dec
in
lock
or
shlb
lods
repz
push
sbb
adc
push
or
add
sar
nop
add
add
leave
stos
scas
push
push
mov
loope
add
scas
adc
loop
add
lret
cmc
and
popa
stc
das
inc
mov
pop
daa
and
sbb
and
das
cltd
lret
add
icebp
aam
push
xchg
in
nop
sbb
push
pop
jp
xchg
iret
adc
pusha
mov
jns
add
out
aam
hlt
pusha
jl
sarl
cs
add
adc
stos
adc
mov
mov
in
rolb
or
call
dec
mov
mov
ret
sub
addb
add
add
faddl
push
sete
in
ret
mov
dec
add
pmuludq
dec
dec
push
xorb
addb
mov
sub
add
in
jno
xor
add
jge
mov
ficoml
cmp
int
dec
add
sti
lret
testb
xchg
and
jge
cld
dec
xchg
sub
jge
cld
mov
in
xor
lret
hlt
add
adc
push
mov
push
addb
lods
add
iret
adc
and
xor
mov
or
lods
das
nop
movsb
push
cmp
sti
stos
in
mov
and
and
in
adc
inc
mov
dec
cmp
adc
sub
das
jae
pusha
clc
xchg
popl
dec
mov
and
fisttpl
dec
add
push
push
stos
or
inc
movsl
inc
mull
cmp
outsl
mov
aad
bound
add
or
sub
pusha
mov
ror
add
sbb
mov
xchg
sub
mov
jns
daa
lret
jl
out
jae
cmp
daa
adc
insb
shl
adc
sti
and
inc
nop
sbbb
adc
sbb
sbb
inc
push
int
jo
xchg
jl
test
add
insl
push
add
lret
mov
ds
sub
lock
or
add
add
adc
push
imul
push
pop
mov
mov
pusha
mov
mov
adc
in
lods
das
xorb
push
xor
push
sub
lods
inc
fcompl
orb
dec
sbb
mov
pop
inc
icebp
test
dec
stos
arpl
jae
or
dec
popa
shll
cltd
xchg
xor
inc
pusha
inc
push
out
add
jo
mov
fcomps
je
aas
add
jno
push
notb
out
repz
dec
popf
add
pop
loope
insb
das
fwait
pushf
shlb
push
lahf
aam
add
jne
inc
inc
cmp
popa
and
outsl
adc
nop
push
cmpsb
ret
rcr
xor
or
test
cmp
jl
sub
adc
mov
rcrl
movsl
xchg
adc
cmpsb
mov
mov
push
dec
aas
sub
cwtl
dec
pop
push
lock
dec
sti
jbe
and
sub
sarb
pusha
std
aas
clc
mov
pop
mov
mov
adc
or
jo
call
test
pusha
outsl
rcll
ds
scas
dec
push
mov
mov
pop
or
in
fistl
add
aas
xor
imul
adc
mov
pop
cmp
ret
pop
int3
cmpsb
mov
fiadds
pop
cmp
out
sub
sub
test
push
cmpb
adc
sub
add
push
sbb
mov
or
ja
outsl
roll
push
sub
mov
dec
inc
mov
pop
xor
mov
sub
inc
cmpsb
sub
inc
sarb
fs
icebp
movsl
aaa
negl
sub
add
add
sub
cmp
scas
cmpsb
gs
inc
jns
sbb
inc
mov
repnz
pusha
xchg
sar
add
hlt
add
lea
rclb
add
jae
jp
push
div
loope
fldcw
imul
jno
adc
push
loopne
xlat
in
dec
lret
sbb
mov
inc
lds
int3
movsb
je
cwtl
or
add
loope
cmp
insb
repz
pop
lods
pop
pop
adc
mov
sub
cwtl
movsb
inc
mov
into
add
rcrb
out
cld
jo
rol
sbb
cmpb
jecxz
and
add
inc
into
xchg
arpl
jb
mov
jl
call
sub
imul
xor
push
cmp
lret
int3
shrb
loop
call
in
js
int3
sbb
add
rcr
stos
dec
movsb
fimull
jmp
pop
into
adc
sbb
cmp
add
jb
push
adc
sbb
or
fimull
add
insb
lds
divb
cwtl
add
cltd
pmuludq
mov
xor
popa
loopne
mov
sahf
add
mov
fiaddl
sub
dec
inc
add
mov
cmp
lods
lods
fs
inc
inc
add
cmp
adc
dec
add
add
imul
in
add
test
inc
je
add
cmpb
cmp
movsb
sub
add
mov
cmp
adc
in
sbb
pop
jl
nop
add
fst
adc
cs
or
clc
hlt
add
cmp
into
sub
lret
and
xchg
mov
outsb
or
sub
cmpsb
les
cmpsl
bound
fwait
cmpsb
rclb
dec
cmp
push
xor
add
outsb
pop
lcall
std
or
add
je
push
mov
addb
sub
mov
push
scas
bound
pop
popa
inc
xchg
pop
add
adc
fwait
dec
out
popa
or
aad
jg
lret
dec
cmpsl
in
lods
dec
fsubp
mov
mov
adcl
int
dec
nop
xchg
adc
or
xchg
les
lock
dec
mov
sub
xchg
inc
loopne
enter
cmpsl
push
inc
add
sub
in
in
mov
add
ret
push
cmp
leave
and
insb
addr16
ficoml
mov
daa
pop
or
call
rolb
jno
sub
pusha
clc
push
sub
pusha
xchg
pop
add
sbb
sar
mov
cltd
add
cwtl
ljmp
aad
icebp
push
outsb
or
repnz
push
nop
mov
pop
fwait
outsb
mov
xor
jno
adc
cmp
push
add
stos
out
and
sub
add
xor
pop
dec
dec
movsb
dec
xchg
jmp
adc
test
mov
mov
jl
pop
outsb
aas
and
add
cmovl
add
sub
fadds
sbb
lock
adc
cmpsb
sbb
aas
inc
js
rorl
hlt
add
std
adc
mov
jo
cld
sub
out
aad
pop
add
inc
fimull
loopne
pusha
cmp
push
jp
dec
je
pushf
xchg
cld
inc
push
xchg
xchg
mov
insb
inc
push
fwait
inc
iret
mov
mov
pushf
ds
cmpsb
adc
jecxz
pop
fwait
xor
sub
lds
enter
pop
pushf
stc
sbb
mov
mov
xlat
loop
add
sbb
int3
push
or
out
lret
push
mov
mov
mov
cld
mov
add
ffree
sahf
sbb
inc
xor
dec
bound
jb
or
fmuls
pusha
cmp
in
clc
les
fnstcw
ljmp
cld
dec
enter
fnsave
testb
gs
lret
pusha
mov
insl
test
jmp
ja
adc
aaa
dec
and
cltd
adc
js
repz
inc
aaa
mov
ds
pop
movsb
sub
orl
rcr
jb
add
sub
test
pop
push
jns
into
nop
cmp
push
xor
pop
inc
fstl
pop
add
mov
xor
push
aas
and
cwtl
lahf
add
in
mov
mov
ret
in
add
inc
push
cmp
ret
and
inc
mov
mov
and
dec
std
dec
fsubs
jae
mov
or
and
add
call
stos
mov
add
jb
cmp
pop
lds
add
dec
syscall
out
sbb
and
cmp
xchg
and
ret
add
out
subl
sbb
add
insb
cwtl
mov
mov
ret
xor
in
fildl
adc
xor
and
into
ds
inc
clc
mov
stc
sub
repz
sbb
dec
sbb
add
pop
ret
xchg
imul
insb
and
add
aam
push
ds
mov
jo
adc
and
das
add
jg
sub
imul
cmp
mov
lods
and
jo
sub
mov
mov
pop
sbb
inc
jo
fildl
sbb
xchg
lret
pop
jmp
fcomps
cmp
stos
mov
aas
mov
fs
fsubs
push
jmp
mov
stc
sbbb
mov
je
inc
sbb
aam
add
xchg
push
mov
push
rcll
xchg
jl
cmpsl
ljmp
jb
movsb
in
add
subb
mov
push
out
mov
fsubr
or
lock
rcr
cs
xchg
mov
aas
push
popf
inc
insb
aad
dec
lods
and
push
subb
cmp
arpl
pop
imul
push
inc
cli
imul
in
jb
dec
sbb
xor
jae
and
cmpsb
in
add
shlb
mov
adc
pop
mov
mov
sub
dec
enter
enter
cld
mov
adc
push
sar
add
inc
cmpsl
ret
imul
movsb
mov
aam
xchg
loop
mov
addb
sarb
add
xchg
push
lds
dec
outsb
mov
dec
jle
xchg
mov
mov
sub
add
es
push
in
dec
in
mov
lods
add
into
sti
fldt
mov
clc
mov
clc
sbb
hlt
adc
dec
out
loopne
push
dec
adc
ja,pn
mov
dec
arpl
pop
sub
addr16
aaa
add
mov
sbb
repnz
into
dec
pushf
mov
and
lea
seto
addr16
inc
pop
pop
nop
mov
scas
cmp
hlt
push
fsubrl
push
mov
cs
jp
sub
imul
push
inc
add
idivb
jne
push
ret
ret
cmpb
sub
lods
adc
lret
and
xor
lcall
popf
in
inc
clc
mov
pop
adc
cmpsl
insb
andb
sti
pop
push
cmpsb
in
out
jg,pt
adc
daa
out
add
test
pop
ja
dec
mov
enter
sub
xchg
subb
add
pop
adc
test
jo
xor
xor
inc
mov
mov
je
rol
fldcw
cmc
rclb
andl
test
mov
pop
pusha
inc
add
ja
cmp
cltd
xor
sbb
add
mov
repz
cs
movb
in
inc
jge
nop
mov
pop
mov
int3
sbb
scas
and
lret
call
or
pop
fidivrs
add
outsb
inc
or
aad
add
cs
cli
in
insb
dec
andb
and
dec
lret
jecxz
clc
les
dec
and
jecxz
mov
sub
push
cmc
cmp
orl
nop
jbe
add
jae
push
push
pop
cmp
pop
push
imul
loop
idivl
ror
aam
cmp
popf
adc
inc
dec
mov
repz
sub
mov
jne
dec
inc
mov
adc
in
fdivs
or
insl
rorb
in
mov
dec
sub
or
cmp
add
stos
leave
sub
add
push
add
add
or
or
add
dec
ja
cmp
mov
sub
jl
fmull
fcomps
cwtl
dec
out
das
sub
mov
add
flds
testb
xchg
sub
pop
pusha
out
xor
pop
and
jl
aad
pushf
mov
add
pusha
adc
adc
mov
cmp
or
pop
add
loop
or
push
lock
cmp
mov
xor
enter
negb
or
fs
pop
xchg
sub
imul
and
dec
mov
lods
pop
mov
cmp
test
cmp
test
mov
scas
int
repz
adc
hlt
add
jp
add
xchg
xchg
mov
fcoms
ret
shrb
sbb
inc
mov
iret
dec
pop
hlt
xor
or
or
xor
dec
jg
shlb
add
shlb
leave
lods
in
push
ficoml
sub
jae
nop
mov
daa
imul
popf
in
inc
ja
out
cmp
roll
mov
push
loopne
scas
pop
sbb
sub
add
add
push
mov
push
add
adcb
xchg
inc
dec
in
add
cs
cmp
testb
pop
lods
jle
das
cmp
btc
and
js
add
lods
inc
lcall
aam
aad
xchg
xchg
loopne
mov
call
mov
andb
xlat
int3
daa
sahf
cwtl
cs
add
movsb
mov
dec
aad
mov
out
mov
in
and
andb
enter
cmpsb
and
ds
test
xchg
mov
movsb
sbb
fadds
cmp
in
mov
or
in
and
sub
or
add
push
movsl
in
cmc
dec
mov
pusha
scas
mov
sbb
sbb
sti
fistps
mov
push
jb
mov
les
or
push
aas
mov
dec
fldenv
mov
xchg
xor
cwtl
add
add
xchg
mov
adc
inc
aad
pop
pushf
and
pusha
xchg
xchg
jle
fcoml
adc
int3
lret
fcomip
std
aas
dec
dec
pusha
jnp
fdivs
add
add
xchg
addr16
mov
push
dec
dec
jmp
xor
stos
adc
repnz
add
mov
dec
mov
adcb
fistpl
dec
mov
test
cld
and
sbb
rclb
cld
xchg
mov
pop
add
fbstp
lret
add
sahf
jns
add
scas
rolb
add
and
jb
jne
mov
sbb
inc
sbb
xor
ret
sub
add
lods
jns
add
mov
xchg
adc
jo
adc
loopne
mov
loopne
jge
fwait
fnstcw
sbb
cmp
mov
and
and
push
test
loopne
dec
nop
push
mov
scas
das
cli
enter
adc
jp
mov
sbb
push
pop
add
inc
lock
or
test
add
sbb
xchg
push
sub
mov
cmp
push
das
add
mov
and
inc
mov
xor
cmp
add
xor
inc
cmpsl
mov
jns
push
push
movsl
in
es
mov
mov
pop
repnz
add
or
or
je
jns
xor
add
lcall
and
pushf
sar
and
pop
push
adc
sbb
or
push
pushf
mov
clc
orb
pusha
mov
add
adc
pop
jl
pop
cs
sbb
xor
mov
dec
mov
out
fildl
mov
lcall
or
les
cmp
mov
popf
clc
xchg
aam
pop
mov
mov
sub
and
jle
js
pop
roll
dec
dec
xor
dec
add
call
push
cmp
add
pushf
inc
in
lcall
jo
data16
mov
adc
hlt
pusha
inc
aas
cmp
or
clc
or
add
lcall
mov
ljmp
cld
mov
xchg
pop
or
jbe
push
enter
jmp
fnstcw
sbbb
pop
ret
icebp
clc
lret
dec
and
in
mov
call
loope
adc
pop
push
or
jl
mov
add
mov
ret
adc
scas
add
xlat
cmpl
mov
fldl
cmp
sbb
mov
and
stos
and
jno
js
or
inc
sbb
add
mov
sbb
push
xchg
jnp
clc
cwtl
andb
insl
sti
add
fwait
or
int3
mov
inc
fsubrs
adc
out
sub
mov
fistps
pop
bound
inc
push
xchg
int3
xchg
pop
jo
xor
add
and
lret
add
add
or
mov
pusha
aam
std
in
adc
xor
pop
imul
popa
mov
cmp
jo
mov
scas
pop
imul
or
or
mov
xor
cmp
pop
push
lret
js
or
sub
test
cvtps2pi
aam
xchg
mov
mov
mov
add
xchg
jp
call
loope
dec
ret
insb
cmp
lods
fs
cmp
add
int
fisttps
lock
orb
sbb
inc
pop
jge
or
mov
cmpsl
jo
xchg
ret
jl
fsubr
jne
hlt
rorb
shl
repz
add
sbb
push
aam
mov
push
add
xor
scas
dec
ret
inc
cmp
or
jg
adc
enter
nop
and
inc
mov
mov
sub
lahf
push
ja
add
add
aam
adc
incb
add
push
mov
inc
xchg
cmp
movsb
add
xchg
aas
scas
mov
das
repz
pushf
and
or
das
adc
movsl
mov
xchg
imul
andb
dec
or
insb
std
mov
cli
sub
aaa
jno
add
mov
adc
icebp
ljmp
or
adc
push
and
jne
dec
push
les
pop
cli
lods
add
pushf
test
sbbb
jb
je
imulb
test
mov
or
cld
aam
pop
stos
enter
iret
cmpsb
adc
add
mov
dec
jecxz
js
lahf
addr16
cmp
jne
ljmpw
adc
repnz
inc
dec
leave
pop
lcall
mov
das
jnp
jo
cmpsl
pushf
mov
cmp
and
pop
mov
push
inc
dec
mov
add
mov
repnz
xchg
aam
adc
adc
shll
popa
jns
sti
xor
addb
inc
out
add
cs
sub
cmp
imul
cmp
adc
das
push
cld
pop
mov
sub
adc
clc
nop
popf
xorb
cmp
mov
or
mov
pop
pusha
lods
dec
lock
hlt
push
arpl
lret
shrl
popf
xor
sub
pop
sbb
pusha
add
lret
or
push
or
mov
mov
popf
xchg
and
adc
icebp
scas
add
loopne
aaa
fs
jmp
ljmp
les
jns
inc
mov
jo
in
adc
push
dec
test
in
in
sub
add
bound
mov
outsb
lret
xor
or
lret
add
ret
adc
dec
sbb
rcll
test
adc
cmc
test
lret
lods
mov
int
sbb
jo
shl
mov
mov
in
sbb
xchg
or
shrl
imul
call
pusha
or
test
push
loopne
mov
add
push
ret
ja
icebp
jp
or
ljmp
xchg
inc
cld
into
and
orl
add
sub
pop
jl
sub
scas
je
add
scas
add
cmpsl
jmp
fldenv
mov
call
pop
mov
cmpsl
xchg
les
xor
inc
ds
and
jp
add
inc
out
mov
daa
push
negl
cwtl
push
mov
mov
int3
in
xor
roll
cmpsb
test
dec
mov
and
dec
add
fbstp
pop
shlb
jnp
sbb
mov
loop
fldl
lcall
ret
dec
leave
push
xchg
mov
je
mov
mov
lcall
enter
aas
pop
pop
pop
sbb
loop
clc
mov
pop
out
sub
sbb
push
inc
sub
fnstsw
add
add
aad
out
add
lret
pop
loope
jbe
pop
mov
leave
out
add
popf
mov
cmp
add
outsb
dec
lods
and
adc
out
sti
subl
push
push
sub
push
adc
mov
icebp
mov
sub
dec
xor
push
mov
mov
cmp
adc
test
and
add
xchg
add
and
aaa
pop
xchg
in
add
jo
mov
inc
dec
enter
pop
cwtl
sbb
inc
xchg
lods
insl
test
ja
xchg
imul
stos
inc
or
int
rclb
mov
add
mov
subl
xchg
xor
mov
outsb
cmpsl
add
aas
pop
cmp
adc
push
jo
mov
add
mov
mov
rolb
pop
or
stc
or
cld
pop
fdivrs
das
sub
mov
je
je
and
sbb
into
xor
fiadds
dec
ja
insb
stc
mov
or
addr16
mov
ja
dec
mov
enter
cmp
sub
addr16
rorb
dec
dec
int3
int3
sbb
aam
cmpsb
inc
cwtl
rolb
pop
cltd
pop
adc
mov
mov
daa
ret
inc
imul
pop
adc
sub
mov
xor
out
mov
xchg
sahf
and
adc
push
insb
mov
pop
push
orl
inc
rcrb
movsl
add
loopne
jb
or
jns
sbb
pop
add
or
test
jl
sarl
adc
in
lods
add
bound
jbe
repz
adc
imul
xchg
cmp
add
add
sar
pop
and
and
cltd
push
and
sub
mov
fldl
and
aad
cmp
sbb
je
ret
or
pusha
scas
sarl
dec
lock
addb
jl
pusha
sbb
dec
add
add
into
xor
xor
mov
mov
add
popa
fnstenv
jnp
outsb
jl
push
aam
push
and
imul
add
mov
iret
cs
jl
and
jge
out
mov
jne
push
adc
lods
inc
jo
add
jb
jno
add
pop
movsl
push
loopne
test
mov
fcmovne
sbb
or
or
mov
das
test
in
loopne
cld
sbb
xchg
pop
and
ds
out
or
cltd
cwtl
mov
icebp
mov
and
mov
shlb
sbb
inc
add
push
fucomi
or
mov
mov
mov
mov
je
gs
andb
repz
push
into
call
cld
hlt
dec
mov
xchg
dec
mov
outsb
popf
xchg
sub
out
push
test
dec
cmp
addb
xchg
and
add
xchg
std
iret
mov
ret
push
enter
push
clc
sbb
add
add
push
int
mov
mov
mov
inc
mov
pop
push
push
sbb
cmp
movsb
mov
fmull
xlat
pop
adc
sbbb
shrl
add
mov
ds
shlb
and
addb
rorb
clc
mov
xchg
mov
fwait
or
test
popf
insl
mov
add
pmuludq
push
test
aas
sahf
clc
shrb
enter
mov
shlb
inc
popa
sub
js
nop
cmp
rclb
sti
xor
stc
add
inc
push
xor
pop
jge
jecxz
push
push
cmp
lock
lret
es
sahf
data16
sub
loopne
cs
pop
xorl
cld
sub
mov
adc
js
pop
add
lret
xchg
pop
or
sbb
or
cmp
cmp
mov
aad
jmp
repnz
adc
pop
clts
inc
jne
jbe
cmp
adc
adc
push
pusha
jnp
pushf
mov
jnp
pop
xchg
mov
ds
lods
ss
pop
jne
into
and
pop
add
or
clc
bound
add
test
js
dec
testb
lods
loopne
js
pushf
xchg
pop
inc
inc
push
addr16
xchg
into
lock
mov
add
or
rcll
test
xchg
rclb
imul
mov
mov
aad
add
and
pop
movsl
and
or
dec
jb
push
push
and
mov
sub
sub
sub
stos
test
jo
jae
mov
stc
push
cmpsb
jns
add
jg
jl
roll
rclb
xchg
cwtl
jl
add
and
push
das
jno
int
rcrl
cmp
lods
push
xor
push
dec
adc
daa
shr
push
fcoms
sub
jge
aas
aaa
jo
imul
adc
sbb
add
or
and
stos
clc
or
add
jo
xchg
add
aaa
xchg
cmp
pop
sbbb
cmp
lods
mov
inc
mov
movsb
or
add
jge
add
mov
sub
outsl
xchg
jecxz
sahf
adc
mov
loopne
loop
add
rolb
add
adc
sbb
adc
fwait
loopne
imul
mov
push
aas
test
and
lock
inc
pop
repnz
dec
ljmp
add
sub
cmp
adc
jl
push
nop
push
into
mov
lahf
inc
and
popf
sbb
and
xor
mov
loopw
outsb
leave
pusha
mov
aam
push
xchg
add
enter
fdivl
loopne
test
mov
mov
sbb
push
mov
mov
sti
and
adc
lret
add
add
ret
or
sti
inc
jl
outsb
idiv
stos
lahf
or
popa
imul
add
ret
lock
lock
loopnew
dec
add
test
in
or
lods
inc
xor
add
push
xchg
pop
xchg
xchg
dec
jne
ljmp
filds
adc
cmc
add
inc
lods
aam
adc
mov
mov
xor
pop
and
pop
jbe
lcall
aam
xor
shll
mov
cmpl
fsubl
imul
lock
xchg
dec
pusha
jno
add
push
call
imull
cltd
in
add
sub
adc
mov
arpl
xor
lods
pop
mov
jne
jl
mov
or
adc
mov
mov
inc
addb
movsb
sbb
sub
and
pusha
xchg
popf
jnp
pop
mov
cld
mov
mov
push
lods
test
fsubl
xlat
or
js
pop
loop
mov
fs
call
addl
add
push
bound
adc
daa
lock
into
loopne
and
lea
add
loope
imul
out
outsb
xchg
add
adc
pop
cmp
in
inc
lods
shlb
adc
xor
xchg
mov
test
jbe
push
in
mov
lods
clc
and
je
aas
add
fstpl
sar
and
sbb
or
lock
call
sbb
inc
rclb
call
mov
enter
pop
ds
cltd
xor
push
jnp
popf
adc
and
stos
inc
xlat
mov
push
inc
mov
std
mov
stos
ret
add
sti
stos
fidivs
je
aad
fisubrl
xchg
inc
adc
sbb
stos
pop
cli
xor
adc
lods
test
int3
sub
jecxz
lcall
mov
mov
in
popf
mov
outsb
pushf
xorb
adc
into
mov
aaa
push
sub
pop
mov
inc
jb
movsl
mov
or
dec
sub
pmuludq
mov
js
stc
sbb
fwait
xchg
dec
iret
or
inc
fs
pusha
pop
sbb
jecxz
mov
jne
lret
hlt
sub
xor
mov
lret
pop
inc
pop
mov
cmp
xor
aad
xchg
movsl
hlt
sub
andl
sbb
xchg
fsub
mov
xchg
xchg
clc
nop
cmp
mov
test
dec
or
jno
xchg
imul
pop
xchg
pop
inc
es
and
addb
jmp
imul
arpl
out
pop
imulb
lods
cmpsb
push
inc
sbb
mov
iret
jno
add
je
lret
bnd
test
scas
lock
jo
mov
or
loopne
jo
test
mov
add
stc
and
enter
add
fiaddl
mov
stc
inc
and
xlat
iret
rclb
push
sub
mov
das
sti
mov
in
cmp
rorb
mov
nop
shlb
pop
sbb
sarl
test
aaa
mov
mov
mov
cmp
aad
pop
scas
enter
sbb
stos
test
cmp
jl
je
sbb
movsl
xchg
cld
xor
mov
sbb
sub
and
xchg
lods
jbe
add
mov
scas
in
pushf
ss
fisttpl
add
pop
in
das
adc
mov
frstor
lret
icebp
lods
scas
dec
popa
xor
jns
push
push
imul
pop
pop
es
sbb
add
add
jp
mov
fwait
addb
mov
add
xor
fstps
push
fcomi
lods
push
inc
lods
xor
or
inc
rcll
imul
cmpsb
sbb
imul
inc
aas
and
xchg
add
lods
mov
xchg
mov
hlt
cmp
or
test
cli
push
add
mov
stc
lret
jp
pmaddwd
fdivl
imul
dec
and
mov
xorl
ret
mov
or
loopne
cwtl
mov
adc
mov
push
adc
cmp
lods
cmpsl
push
xor
dec
add
cmp
test
imul
loopne
xchg
cli
add
mov
cmp
out
add
int
jae
xchg
and
sub
and
mov
pop
mov
or
mov
mov
add
popa
mov
xor
enter
stos
movlps
push
shlb
push
fmuls
cltd
dec
xor
nop
loopne
or
jno
je
jmp
aas
into
call
sub
les
jge
fwait
mov
ret
add
and
stos
leave
dec
dec
in
int3
sub
and
imul
into
aam
clc
in
scas
mov
cltd
clc
fnstcw
push
por
xchg
inc
xor
clc
shlb
mov
ds
and
mov
sub
add
decb
test
pop
ficomps
dec
hlt
add
in
and
lods
js
inc
andb
or
ror
repz
adcb
mov
pushf
mov
add
mov
add
dec
scas
pop
xchg
add
aaa
mov
ss
mov
aas
testl
jge
push
cltd
mov
add
sub
movsl
inc
adcl
aam
mov
popa
add
cmp
hlt
sub
cmp
fisttpl
es
cmpsb
fsqrt
sub
add
mov
imul
push
cmp
fs
pop
jbe
lret
add
scas
and
xchg
insb
or
mov
add
leave
cmp
imul
lods
stc
test
mov
fisubl
pop
mov
out
loope
sub
fidivl
add
add
je
push
xorl
scas
test
add
in
es
stc
lret
xchg
mov
pop
hlt
ja
hlt
dec
sub
cmp
incl
pop
sub
sub
andb
push
add
push
fisttpll
add
cli
add
daa
sub
inc
les
adc
xchg
arpl
jl
std
lock
add
add
push
inc
adc
mov
call
push
and
pop
xchg
cmp
fs
add
lock
clc
and
test
jb
cmp
xorl
add
sti
decb
outsb
pop
push
sbb
dec
add
enter
fidivrl
jno
sbb
mov
jl
adcb
pushf
into
call
jmp
orb
mov
aaa
nop
pop
addr16
jae
or
outsl
inc
pop
dec
sbb
mov
cmp
dec
jl
push
scas
push
aam
dec
in
sub
nop
loopne
or
add
insl
loopne
ret
movsl
jg
lods
test
sub
add
fnop
dec
test
je
repz
jo
rclb
inc
aad
clc
inc
jle
repz
fmul
mov
lods
sarb
adc
das
push
push
int3
js
cmp
rcll
nop
mov
ret
mov
and
pop
fcoms
cmp
push
std
and
pop
cmp
nop
xor
outsb
sub
ds
add
xor
xor
movsl
mov
lock
sbb
cltd
pop
push
into
push
insb
mov
aaa
rorb
flds
add
sbb
sti
icebp
sbb
jmp
arpl
and
test
xor
inc
adc
or
adc
hlt
or
mov
cmpsb
dec
cmpsb
cmpsb
push
loopne
test
add
xor
or
xlat
xabort
sub
cmp
cmpsb
cld
push
add
icebp
mov
mov
pop
dec
lret
in
hlt
test
nop
cmp
cmpl
bound
add
test
jo
stc
jne
and
popf
adc
or
push
cmpsb
jbe
pop
loopne,pt
inc
xor
sub
call
dec
and
push
xor
jns
dec
push
add
hlt
das
jb
jmp
inc
and
lods
andnps
cmpsb
pushf
mov
repnz
pop
inc
mov
cmp
cmp
mov
push
movsl
bound
cmp
mov
je
xor
adc
ret
in
xchg
fld
test
and
jno
jl
inc
inc
mov
adc
ds
mov
les
divb
mov
lock
xchg
cmpb
add
add
push
cmp
negl
mov
mov
fbstp
je
in
add
call
mov
sarb
xor
or
aam
jns
stos
aaa
push
add
rorb
ljmp
fcmovu
sub
mov
push
or
cmpsl
bound
pop
sub
in
dec
jns
lret
sbbb
or
ret
rorb
dec
loope
add
and
or
sbb
mov
jns
xor
iret
pop
rcrl
pop
dec
adc
aam
rolb
stos
mov
scas
cmpsb
mov
inc
lods
mov
pop
jns
mov
into
xchg
and
cmpsl
sarb
inc
cwtl
xor
mov
gs
push
adc
push
or
daa
adc
sub
call
fldl
lock
int
pusha
and
dec
xor
push
leave
ret
mov
pop
iret
aaa
adc
int
je
repnz
mov
shrb
inc
pop
shlb
out
adc
test
dec
js
and
fdivl
lds
bound
mov
sbb
add
out
stos
mov
jecxz
mov
push
add
inc
stc
call
insl
rol
sub
mov
add
inc
inc
loopne
push
ljmp
cmp
mov
adc
jo
add
dec
mov
mov
fsub
pop
xor
test
popf
push
mov
jge
dec
fldt
xchg
pop
insb
shl
sbb
mov
outsb
sub
lods
xlat
mov
push
adc
shlb
pop
gs
mov
mov
jge
in
imul
movb
or
movsb
in
add
sbb
jecxz
les
add
xor
or
dec
lock
addr16
sub
cli
xchg
test
mov
inc
sbbb
xchg
add
rcrb
push
pop
testl
gs
xchg
cmpsl
mov
xchg
cmp
insl
insb
int3
cs
add
outsb
push
test
push
sbb
aaa
mov
psubusb
inc
and
out
pushf
adc
xor
mov
sti
pop
mov
sub
xchg
js
mov
imul
and
aam
sub
jge
dec
mov
in
adcb
aad
sub
loop
loop
ja
shl
xor
out
pusha
xchg
fnstenv
cmp
sahf
adc
fs
jae
add
add
and
mov
jecxz
xchg
call
aad
test
push
and
add
je
add
shl
mov
sbb
add
push
call
pop
mulps
mov
movsl
cld
jl
inc
add
push
mov
fsubs
mov
lds
js
cmp
lock
push
fsubr
rolb
daa
pusha
cmp
jg
aas
sahf
inc
inc
push
out
loopne
add
fcomp
cmp
das
and
jle
xchg
fs
xchg
out
call
test
mov
aas
adc
pop
in
int3
xchg
or
inc
cli
in
cld
jo
mov
int
js
or
mov
into
cltd
sub
lods
dec
jg
sub
add
sbb
pop
pop
les
lods
and
andb
fs
dec
daa
cmp
cli
call
lret
mov
fwait
js
xchg
adc
push
pusha
fiadds
push
sbb
mov
inc
sub
mov
stos
add
inc
push
cmp
into
and
fldl
pop
lcall
loop
mov
scas
mov
test
inc
jecxz
push
sbb
xchg
test
xchg
mov
iret
jno
fdivrs
std
or
cmpl
fwait
inc
adc
fs
call
inc
cmp
sbb
lods
cli
sbbb
or
repz
push
cmp
stos
sbb
lods
push
inc
adc
stos
imul
adc
test
jne
data16
sti
mov
mov
add
or
pop
cmpsl
ret
cwtl
and
jge
add
pop
fistpll
jmp
cld
mov
iret
jle
movsb
dec
add
push
mov
loope
push
inc
scas
outsl
and
cmpsb
and
xor
push
sarb
mov
or
push
pusha
jmp
aad
lds
mov
and
or
xchg
or
bound
scas
xchg
inc
pop
aad
mov
addr16
cwtl
add
nop
ljmp
mov
leave
inc
jns
push
sub
xchg
pushf
mov
and
dec
xchg
mov
fldt
sub
adc
and
jne
jb
stos
aad
testb
jae
sub
mov
in
cmp
mov
mov
pop
ret
adcb
push
pop
xor
pop
in
dec
sbb
fxtract
mov
sub
xchg
and
popa
mov
nop
mov
packuswb
fisubl
and
nop
mov
repz
inc
push
fwait
divl
mov
inc
pop
or
lea
insb
testb
lret
je
popa
mov
pop
add
mov
cs
scas
js
push
call
mov
clc
aas
sahf
orb
jo
std
in
add
rcrb
imull
mov
mov
popf
and
xor
xchg
xchg
mov
lcall
adc
and
xchg
jle
xorb
xor
ja
or
test
mov
lods
movsl
or
outsl
jg,pt
xor
mov
mov
aaa
push
add
pop
mov
or
mov
xor
es
out
add
xor
mov
add
call
xlat
add
and
add
adc
push
and
add
xor
mov
or
mov
out
or
aaa
jne
aaa
sbb
popf
sbb
filds
add
inc
adc
pop
pop
mov
movb
sti
pusha
mov
xchg
popa
cmc
stc
sti
push
jns
and
ss
add
xor
push
or
mov
add
icebp
sub
cmp
mov
push
popa
mov
push
or
rorb
dec
push
scas
jp
add
js
aad
test
movsl
xor
and
dec
imul
je
movsb
add
push
xor
xchg
scas
out
rcrb
sbbb
inc
or
xchg
pop
test
addr16
sbbl
add
insb
mov
or
sbb
ja
insb
mov
sub
in
cs
icebp
cli
pop
fsubr
sub
addl
scas
outsb
mov
mov
movsb
roll
cwtl
mov
mov
fstl
test
push
push
mov
es
daa
jnp
sbb
test
lods
sub
mov
xor
divb
mov
and
jbe
arpl
xchg
mov
or
stc
subl
or
mov
test
lds
dec
aam
mov
and
jae
pop
or
add
into
ret
push
pop
loopne
in
pusha
fimuls
std
or
jb
lds
push
push
shr
aas
mov
clc
inc
xor
sahf
and
negl
sub
nop
lret
sbb
outsb
jb
or
add
fbstp
insl
add
inc
aas
nop
movaps
mov
xor
aad
sub
mov
push
std
fwait
dec
cltd
add
jnp
sub
add
and
mov
sbb
and
int
adc
adc
out
add
fwait
test
adc
mov
add
or
popf
or
fidivs
shl
das
jle
aam
mov
mov
leave
add
adc
jecxz
cld
mov
mov
cmpsb
jp
shll
xor
enter
stc
call
sub
shrd
xor
cmpsl
orl
pop
cld
sti
xor
aam
stos
cmpsb
xchg
inc
pmaxub
popf
std
adc
test
std
mov
out
les
sub
push
scas
cmpsb
pop
mov
hlt
out
mov
in
xor
pusha
push
stos
enter
ret
xchg
pop
pop
pusha
cld
orb
or
dec
and
lcall
fdivrs
inc
pusha
or
sbb
adc
xor
scas
lret
mov
popf
test
pushf
repnz
add
or
adc
fisubl
mov
xor
pushl
sbb
sub
xor
stos
push
push
aas
push
add
addr16
shlb
mov
rcl
lcall
or
sub
add
adc
rcrl
mov
sub
sbb
inc
sbb
sub
xor
pop
adc
mov
and
mov
mov
push
pop
xorb
or
pushl
cltd
out
sbb
or
jmp
mov
cld
out
sub
or
mov
andb
movsl
aad
mov
lock
add
test
clc
mov
adc
call
idivl
loop
es
inc
mov
enter
sbb
test
lret
outsb
or
add
xchg
cmp
fs
ror
ss
or
add
shlb
cli
and
push
das
fiadds
jecxz
add
pop
add
mov
test
xor
mov
add
sarl
push
inc
pushf
sub
xchg
and
or
subl
inc
add
dec
in
or
mov
xor
jmp
rep
test
mov
call
mov
out
push
test
sbb
adc
roll
dec
push
out
loopne
mov
shr
sbb
dec
cmpl
adc
add
mov
mov
ret
dec
or
mov
hlt
movsl
dec
add
mov
pop
ficoml
push
out
sub
push
add
sub
adc
xor
aad
xor
fs
sbb
ret
rolb
hlt
std
mov
add
add
mov
sub
adc
stc
mov
inc
fdivl
daa
into
and
lock
push
pavgb
mov
mov
add
icebp
sub
xchg
jecxz
imul
fimull
fsubl
ret
test
and
jne
std
or
lea
sbb
mov
sahf
sbb
rorl
dec
jmp
sbb
rcll
mov
sar
sub
popf
bound
sbb
loopne
loopne
popa
pop
dec
pop
push
rorl
sbb
std
push
rorl
mov
and
jnp
mov
or
sti
mov
inc
xor
add
shll
or
add
add
sub
xchg
aam
jmp
in
das
and
xchg
lock
leave
add
adc
faddl
cmc
dec
cmp
adc
cmp
aas
pop
xor
test
loopne
dec
test
hlt
mov
out
in
add
pop
sbb
push
out
or
and
iret
add
pop
pop
xor
pop
negl
inc
es
pop
pusha
and
pop
add
insb
add
mov
push
scas
adc
rcrb
mov
xchg
in
pushf
xchg
pusha
icebp
jle
or
cltd
xor
xlat
int
pusha
loope
mov
inc
fcmovnu
addl
xchg
xor
out
sti
jns
movsb
add
dec
pop
call
repz
ljmp
and
mov
pop
sbb
xchg
fdivl
sub
xor
sbbb
mull
add
int
pop
nop
in
lods
push
mov
subb
rcrl
cmp
and
es
or
test
pop
lcall
push
dec
outsl
in
jmp
mov
gs
aaa
adc
ja
fbstp
mov
or
sbb
mov
loope
rorb
xchg
push
inc
cmp
pop
cmc
mov
add
mov
aad
pop
mov
cmp
icebp
or
repnz
add
lock
mov
add
pop
inc
mov
add
mull
orb
pop
into
jae
dec
xchg
pusha
xchg
imul
das
jo
xor
cmp
add
cld
push
mov
add
call
mov
loope
xchg
push
popl
lds
xchg
xchg
outsb
pop
das
outsl
testl
jbe
rorb
pop
das
or
adc
and
jne,pt
fbstp
lock
cmp
add
movsl
sbb
mov
lods
sbb
mov
dec
or
fwait
adc
movsb
adc
cmp
int
or
jb
and
dec
xchg
mov
daa
pusha
nop
cmp
add
fcomip
pop
es
sbb
adc
mov
pushl
xchg
pop
pop
mov
push
or
or
push
lods
xor
mov
nop
mov
pop
mov
mov
and
orl
adc
popf
das
jge
stos
lahf
sbb
xchg
lea
cmp
ret
dec
and
ds
test
mov
mov
bound
xor
jmp
add
jnp
daa
push
xor
or
push
shr
mov
adcl
mov
out
ss
cmp
push
xor
push
sub
inc
and
pop
int
add
sbb
mov
add
je
repnz
in
mov
dec
mov
iret
xchg
sbb
pusha
pop
adc
add
stc
xor
jecxz
push
stos
add
push
pop
push
mov
subb
inc
jle
xor
jp
stc
push
push
dec
sahf
adcl
stos
inc
imul
xor
loop
in
testb
lahf
scas
xchg
xorl
mov
movzwl
lea
dec
sbb
jmp
es
pop
push
lea
daa
out
testl
insl
sbb
loopne
or
fs
pop
cmp
das
dec
ds
fiadds
inc
mov
sbb
cmp
xchg
jns
adc
das
inc
subl
mov
push
mov
inc
rcrl
in
popa
popf
cmp
sbb
std
xchg
aaa
xchg
pop
dec
push
mov
addr16
add
bswap
stc
ret
stos
fyl2x
scas
aaa
mov
xor
dec
and
jmp
imul
or
adc
jae
sbb
bound
jne
pop
movsl
cs
test
popa
pop
roll
movsl
pop
mov
insb
add
mov
fisttpll
and
aaa
pop
rcll
inc
jg
jo
insb
fistl
mov
orl
or
inc
insl
inc
ja
and
push
mov
pop
nop
repz
mov
mov
add
int3
pause
add
rol
test
mov
repz
sub
cmp
icebp
mov
mov
leave
inc
add
sahf
push
sub
dec
jmp
push
sub
add
mov
dec
scas
ficoml
enter
and
jge
js
adc
in
popf
cmp
mov
lret
push
stc
ljmp
inc
add
imul
mov
xchg
pop
xchg
incl
stos
mov
mov
fwait
jne
mov
add
mov
je
jp
jp
add
sub
arpl
or
aam
or
and
mov
das
aam
lds
shufps
sub
and
push
adc
mov
push
mov
sub
dec
pusha
stos
and
cmp
mov
aas
push
int
rcl
fisttps
add
clc
call
or
xchg
lret
sbb
jo
xor
or
add
jmp
jmp
jns
bound
lods
mov
mov
dec
xor
imull
loopne
cmp
push
and
imul
pushf
and
aam
test
ret
mov
xchg
pop
js
jbe
sbb
pop
inc
or
xchg
adc
cmc
inc
xchg
bound
out
jns
adc
add
push
cwtl
add
add
push
pop
dec
add
add
dec
mov
add
scas
negb
sbb
sbb
pusha
adc
mov
mov
mov
stos
pop
dec
pop
outsb
js
sbb
arpl
in
sbb
pusha
nop
cmp
out
iret
rep
inc
loopne
in
shlb
scas
xchg
nop
neg
push
sub
imul
xor
add
popa
lods
mov
pusha
pusha
xchg
loop
mov
ds
hlt
ds
pushf
sahf
and
dec
fwait
sub
bound
shll
adc
mov
dec
lock
cmp
cmp
mov
inc
test
pop
cmp
pushf
and
mov
or
mov
adc
adc
pop
mov
insb
xchg
mov
mov
sbb
fisubrl
mov
loopne
mov
adc
sbb
mov
into
outsl
xor
pop
mov
lods
add
cmpsb
sub
jno
outsb
imul
add
pop
stos
jmp
les
push
enter
sarl
test
push
insl
repz
int
xchg
and
imul
xor
aam
lock
mov
dec
in
jo
jb
add
sub
pop
push
jb
in
jbe
inc
cmp
push
add
insb
pop
das
or
ret
or
pop
int3
xchg
leave
clc
jmp
cvtps2pi
adc
test
mov
mulb
sbbb
xor
jl
sub
icebp
mov
mov
outsl
or
and
jmp
ss
fistpll
or
xchg
outsl
cld
loopne
leave
sub
pop
xor
sbb
mov
push
mov
cmp
mov
sbb
cmp
push
jno
sub
adc
sbb
mov
popa
andl
xchg
orb
gs
or
and
mov
mov
mov
lds
sti
fwait
add
daa
dec
cmpsb
mov
rcrl
inc
add
dec
adc
pop
or
insl
mov
std
mov
es
xchg
cmp
inc
xor
cld
sti
jmp
or
cmpsb
test
mov
addb
adc
add
ficoms
sub
lds
sub
repz
mov
rcll
or
lock
sbb
out
sub
movl
adc
xchg
sarb
fsubrl
orl
rolb
xor
rclb
lea
cs
rorl
mov
jns
insb
shrl
inc
jno
inc
inc
inc
xor
xchg
add
xchg
in
das
xor
and
loope
mov
andb
or
sub
test
inc
sub
test
mov
xlat
mov
mov
ret
dec
and
es
xchg
jns
jno
add
clc
lea
mov
loopne
inc
enter
adc
sbb
and
iret
imul
fisttps
rclb
ror
pusha
cmp
lods
arpl
mov
nop
fadd
fdivrl
add
push
jb
mov
or
xchg
jl
push
inc
popa
dec
fsubs
push
adcb
leave
push
jae
add
sbb
les
add
hlt
lods
icebp
dec
nop
stos
imul
and
enter
fcmovnu
sub
pop
mov
or
adc
add
test
mull
insl
add
pop
xchg
lahf
sar
add
or
dec
add
push
jp
jne
stc
subb
push
shlb
push
inc
cmp
mov
icebp
sbbb
popa
out
and
roll
mov
stos
adc
xor
in
add
es
idiv
mov
xchg
cmpb
imul
sub
add
mov
rcr
xchg
dec
adc
mov
dec
and
mov
dec
cmp
jmp
shl
fidivrl
popa
imul
popa
mov
sub
loopne
sub
add
jge
dec
dec
adc
insl
add
adc
pop
adc
inc
add
testb
sub
test
mov
aam
sbb
pop
movsb
push
test
mov
push
jle
cwtl
cmpsb
and
jmp
jp
mov
addb
jle
mov
adc
mov
xchg
inc
insb
add
movsb
sub
and
mov
das
insb
int3
cltd
jo
or
add
stos
sub
mov
and
dec
stc
jp
xor
pusha
testb
sbb
test
jo
pop
pop
and
sub
ja
out
in
enter
incb
addb
or
push
lea
inc
cmp
dec
add
cmp
fidivrl
inc
cmp
mov
cwtl
jmp
xor
cmp
add
repnz
sbb
sbb
dec
in
pop
and
mov
stc
xchg
leave
rorb
sahf
inc
jb
fchs
jecxz
adc
add
int
or
sub
jno
dec
outsl
push
mov
mov
push
mov
pop
das
cmp
add
sti
cmp
fs
daa
mov
cmp
jp
andb
push
and
add
mov
xchg
adc
sarl
push
cmp
xchg
loope
cs
test
adc
jle
aam
mov
in
clc
mov
cs
out
in
lods
sub
and
xchg
inc
leave
mov
xchg
gs
push
push
sbb
imulb
ja
mov
xchg
cmp
jl
sbb
int3
pop
imul
jmp
cmp
stos
adc
mov
adc
xchg
fisttpll
les
xchg
or
imul
loopne
daa
sbb
add
adc
pop
test
jg
xor
xchg
mov
pop
pusha
test
cmp
pop
add
out
pop
push
add
mov
jle
nop
pop
dec
movsb
sbb
xchg
outsb
repz
popf
or
pop
faddl
or
enter
dec
sbb
movsb
jb
loopne
inc
add
sbb
inc
out
add
aad
sub
lea
cmc
xchg
das
std
ss
arpl
pusha
sub
mov
es
lcall
or
jns
xchg
daa
inc
mov
pop
popa
xchg
iret
mov
inc
in
and
adc
mov
roll
push
adc
cmp
jbe
out
dec
sub
pushf
scas
mov
mov
mov
sbb
or
mov
cmp
adc
mov
push
mov
pop
stc
cmc
pop
xor
enter
mov
test
or
add
inc
adc
mov
xchg
cmpl
ret
stc
dec
xor
fwait
push
hlt
call
jns
cmpsb
dec
add
sbb
sbb
cmpsl
dec
shl
jnp
iret
mov
xor
mov
lods
and
cwtl
inc
adc
push
shl
loop
clc
add
loope
or
fnstcw
xchg
outsb
daa
aad
scas
adc
ficoms
nop
iret
push
adc
int
sbb
dec
mov
dec
dec
hlt
leave
mov
and
add
iret
nop
pop
xor
cli
nop
mov
sahf
in
add
mov
loope
daa
mov
bound
leave
jne
shlb
cmp
je
pop
inc
in
ret
sub
mov
dec
pop
into
or
fidivl
xchg
dec
mov
add
mov
push
shrb
xchg
faddl
and
int3
or
pop
xor
inc
jne
mov
nop
dec
cld
jge
cmp
scas
xor
inc
mov
sub
or
pusha
cmp
add
push
ljmp
pop
sti
ret
push
push
add
cld
dec
rclb
xchg
adc
cmpsb
movsl
adc
pop
pop
pop
test
insb
dec
cs
pop
pop
pusha
and
adc
nop
popa
or
inc
push
sub
jns
dec
pop
mov
imul
mov
mov
into
jecxz
mov
mov
je
stos
icebp
jl
and
mov
sbb
mov
jno
and
sub
add
hlt
pop
xor
mov
xchg
cmp
jl
addl
je
nop
xchg
dec
je
inc
out
xchg
push
sbb
dec
add
pop
mov
ja
sbb
int3
jae
add
test
insb
les
movb
xchg
test
or
xchg
negb
imul
xchg
out
std
xchg
mov
pop
sub
dec
push
test
mov
mov
popf
je
push
inc
add
sbb
in
leave
add
lods
shl
push
cmp
fiadds
pop
push
or
pop
sub
sbb
dec
popa
cltd
shlb
out
jmp
into
scas
adc
pop
dec
mov
dec
shl
ret
sbbb
je
dec
pop
mov
fimuls
test
dec
addb
mov
inc
out
pusha
data16
outsl
cmp
popa
in
andb
mov
add
push
push
jno
pusha
cld
test
leave
lret
jb
scas
test
or
jge
push
stos
sbb
ja
repnz
stc
pop
je
add
mov
inc
or
sarl
cmp
je
inc
jge
add
popf
pop
test
aad
ljmp
and
inc
fldcw
jp
shll
inc
mov
popa
and
les
cmpsb
and
xorl
or
jge
sbb
cli
lahf
icebp
add
imul
dec
loope
leave
add
inc
fsubr
je
inc
inc
and
jno
fnsave
ret
pop
mov
pop
mov
arpl
sub
movsl
ss
fiaddl
sub
test
sarl
adc
pop
inc
cmpsb
in
inc
rcrb
dec
and
push
cmp
inc
add
or
pushf
dec
fisubl
lahf
aas
and
repz
mov
lcall
push
jo
andb
inc
jne
cmpsl
push
jnp
pusha
pop
cld
test
int
dec
xor
pop
cmp
add
roll
mov
add
mov
je
dec
pop
cmc
in
cmp
fcoms
adc
jg
mov
push
cmp
adc
add
jl
fnstcw
addb
fildl
sbb
aad
mov
je
dec
pop
mov
lcall
sub
call
test
push
and
aaa
gs
jno
mov
fwait
aam
test
call
dec
outsl
flds
movsb
daa
sub
test
orb
rol
movsl
pushl
adc
iret
ss
test
or
jecxz
mov
adc
aad
adc
dec
push
mov
pop
push
dec
mov
popa
mov
out
je
popf
fidivs
add
jp
pop
inc
dec
bound
dec
mov
js
cmp
jo
inc
sahf
mov
or
cld
cmp
xchg
pusha
dec
lea
subl
shll
nop
cwtl
push
add
xor
test
popl
inc
pop
cmc
hlt
mov
sahf
xchg
loope
iret
inc
hlt
movsl
dec
aas
fldcw
mov
pusha
mov
inc
addr16
lods
jmp
fcmovnbe
pop
jo
mov
jb
dec
pusha
out
es
cmp
xchg
add
shlb
xchg
pop
out
push
mov
dec
and
sub
mov
add
sub
add
enter
fwait
aaa
inc
cmp
jmp
add
pop
add
sub
push
mov
popa
adc
push
fildl
bound
mov
mov
fdivr
pop
add
dec
xchg
mov
cs
lret
xor
jae
push
or
sub
out
dec
mov
je
push
loopne
jo,pn
jge
or
enter
es
xlat
and
fld1
in
xor
push
incb
add
xor
sbb
aaa
cmp
sbb
sbb
sbbl
fiadds
push
cmp
mov
push
mov
jmp
xchg
mov
adc
adc
movswl
cmp
pop
in
cmc
xchg
mov
rcrb
inc
xchg
les
incb
xchg
mov
cmp
sub
inc
add
cs
mov
loopne
test
pop
add
xlat
add
lds
xor
mov
or
pop
hlt
push
xor
and
push
mov
lods
add
cli
mov
fcom
inc
sbb
sub
or
out
addr16
add
add
inc
scas
loope
cli
sbb
push
jo
inc
jmp
and
mov
xor
jno
or
popf
mov
dec
faddl
enter
cs
add
fbld
push
cli
mov
rol
sub
fucomp
jge
add
das
and
les
sub
xorb
clc
pusha
and
xor
pop
sbb
jmp
and
or
xchg
sub
hlt
xor
ljmp
fmull
test
add
xor
adc
add
lods
add
dec
push
cwtl
and
xchg
xchg
dec
loope
fisttps
popf
int
int
lcall
and
movsl
lea
arpl
add
cltd
call
pop
clc
pop
jl
and
adc
in
xor
pop
jns
xchg
cmc
imul
pop
lcall
mov
sbb
xchg
pusha
gs
mov
add
mov
cld
mov
pushf
jnp
adc
add
push
out
negl
cmpl
sub
shll
cltd
add
ret
sub
cwtl
lock
add
lea
sub
call
dec
popf
jbe
ds
and
out
cmp
sub
push
dec
fxch
fistpll
or
dec
push
je
mov
xchg
mov
in
push
fwait
jne
aam
scas
pop
fldl
mov
mov
fwait
stc
orb
xchg
in
cli
dec
xchg
xchg
lods
xchg
fs
nop
mov
orl
push
xor
pop
mov
fcoml
jp
push
fwait
sub
cld
repz
scas
out
mov
imul
add
inc
popa
fisubrl
dec
jmp
mov
int
je
in
cmp
push
add
jmp
fnstenv
cs
push
xor
pop
sbb
or
pop
cwtl
add
popa
mov
add
pop
mov
add
dec
add
or
in
push
pushf
movsl
ds
jns
subb
cmc
pandn
inc
mov
cmp
jne
add
jns
dec
out
shlb
aas
add
push
push
mov
roll
int3
mov
jl
xchg
xchg
shrb
adc
and
pop
lods
aad
aam
mov
mov
pop
fwait
xor
mov
loopne
cmp
adc
das
cli
lock
mov
push
faddl
pop
les
mov
add
dec
andb
cmp
push
test
sub
sub
fldl
pop
xor
pushf
jb
pop
popa
or
stc
inc
mov
ljmp
ljmp
daa
pop
push
fcomps
xor
or
faddl
mov
add
cmpb
outsl
mov
fcompl
rclb
insb
scas
adc
and
pop
scas
jo
imul
loope
repnz
and
fdiv
popa
pop
jmp
sbb
adc
ficomps
mov
mov
pop
andb
cli
dec
rcrl
mov
xchg
js
pop
fiadds
sbb
dec
adc
mov
xchg
xchg
xchg
cmp
mov
sbb
repz
xchg
lea
jle
outsl
mov
loope
pop
pop
stos
outsb
loop
stos
icebp
sub
gs
mov
out
insb
push
lea
rolb
cwtl
push
stos
lahf
mov
pop
inc
bound
lret
enter
and
xchg
stos
inc
movsb
xor
push
xor
mov
ret
pop
xor
jo
adc
cmc
popf
mov
repz
pop
push
ljmp
adc
xor
mov
shrl
cli
ss
push
mov
dec
pop
call
popf
adc
pop
cmc
mov
fwait
and
popf
mov
or
insl
cld
loopne
pusha
mov
cmp
sub
pop
push
mov
daa
and
or
xchg
cld
xchg
or
fisttpl
inc
lahf
or
xor
aas
cmp
in
hlt
je
jno
inc
andb
pop
test
inc
lods
icebp
cld
arpl
add
out
cmp
cld
mov
js
lock
movsb
scas
and
inc
push
dec
cltd
es
sub
adc
jmp
clc
insb
or
fnstenv
daa
add
pushf
sbb
out
sti
mov
or
mov
mov
mov
das
jecxz
inc
inc
fildl
fiaddl
cmp
pusha
out
fistpll
test
cmpb
movsb
pop
dec
lcall
mov
pop
xor
xor
sub
jmp
xchg
pop
jecxz
rolb
mov
ficoms
xchg
adc
stc
loop
rolb
sub
xchg
push
or
inc
outsl
pusha
and
cmc
das
popa
cmp
xor
fiadds
sbb
test
test
clc
sbb
and
jo
inc
inc
add
jno
iret
jl
mov
loope
adc
xchg
mov
movsb
fcomps
and
push
pop
add
xchg
xchg
out
lcall
idivb
into
inc
pop
sub
aas
cmp
dec
xchg
stos
mov
roll
das
push
adc
bound
imul
ret
add
into
push
pop
xor
xchg
xor
rolb
loopne
sbb
lahf
loop
pop
cmp
inc
pop
inc
adc
mov
inc
lea
xchg
shl
pop
push
mov
test
adc
adc
or
inc
int3
inc
mov
xchg
lcall
xor
scas
test
aas
adc
out
add
std
in
inc
jbe
mov
dec
adc
loope
fbstp
dec
sbb
push
les
add
push
scas
out
test
sub
inc
dec
and
lahf
pushl
fiaddl
inc
adc
sub
mulb
fcoml
in
add
test
pop
daa
sub
jnp
arpl
leave
sub
or
cmc
dec
pop
sbb
lret
xchg
add
insb
mov
xchg
nop
ljmp
mov
sbb
int3
dec
popa
mov
mov
xor
mov
add
popf
lea
jmp
loopne
mov
add
push
and
out
outsl
mov
rorl
push
clc
and
pop
cli
je
jl
inc
add
jno
xor
push
adcb
testl
xor
gs
push
cwtl
sbb
xor
loope
imul
pushf
fsubrl
jo
out
add
sub
mov
imul
sbb
mov
es
push
pop
loope
jg
les
mov
cmp
sub
pusha
mov
inc
or
mov
add
inc
iret
jbe
addl
xchg
xchg
xchg
dec
pop
pusha
clc
inc
jmp
inc
subb
shl
popf
lahf
mov
mov
push
ss
xorl
mov
mov
cmp
jns
cmpsb
int
ljmp
add
ds
fildl
ljmp
dec
mov
cmpsb
adc
cmp
push
mov
pop
push
loop
pop
cs
and
imul
insb
push
sub
dec
sub
push
push
movsl
push
add
add
jne
stos
mov
dec
xchg
popa
cmp
das
jb
push
push
or
pop
pop
hlt
add
popa
mov
out
cmp
jmp
cmpsb
add
movsb
pop
minps
int3
mov
push
sub
xor
enter
jne
scas
jbe
aam
lock
pop
loop
xchg
mov
fidivs
hlt
or
lods
js
mov
mov
sbb
pop
fdivl
xor
cs
mov
into
push
add
clc
pusha
mov
or
xchg
sbb
ljmp
push
mov
outsb
enter
arpl
cltd
add
adc
dec
xlat
pop
out
rclb
xchg
mov
test
jge
pop
scas
rcrb
loop
mov
fisttps
inc
hlt
inc
push
sub
adc
push
mov
adc
icebp
push
ficoml
test
pop
addl
fnsave
add
inc
loope
sbb
pusha
lcall
pop
test
push
cwtl
sub
mov
mov
add
jns
pop
out
cmp
test
add
cmp
dec
dec
and
call
inc
sbb
nop
xor
pop
popa
std
aaa
outsb
add
sub
ret
movsl
pop
inc
aam
push
mov
push
pushf
jmp
pop
adc
pushf
sbb
pop
js
inc
loope
fimuls
test
ret
or
ja
xor
in
cli
lds
sahf
lret
and
in
jl
or
push
pop
push
and
jmp
xchg
dec
mov
stc
xor
fistpl
lods
sbb
pop
adc
lock
cld
xchg
mov
cmp
test
stc
test
test
or
push
test
mov
push
lcall
push
adc
test
mov
or
add
stc
pop
mov
mov
xor
test
rol
jae
mov
jle
js
test
dec
jb
sub
and
mov
mov
or
inc
push
pusha
inc
adc
or
shrl
add
pop
mov
pop
std
jmp
lahf
add
mov
mov
mov
out
js
stc
insl
sub
test
pop
and
jle
aam
icebp
out
adc
das
imul
sbb
push
loopne
pusha
pop
pop
push
repz
dec
sarl
mov
jb
xchg
in
xchg
sbb
call
push
clc
in
adc
sub
popa
ret
mov
push
jle
sub
call
test
push
mov
mov
or
mov
sub
clc
jp
sbb
pusha
stos
sub
std
jno
lds
mov
add
sub
xor
push
push
mov
cltd
sti
ret
sub
pop
lods
add
hlt
and
shrb
and
adc
add
adc
rol
enter
mov
jb
jnp
sbb
cmc
and
ds
sti
das
fsts
sbb
inc
repz
addps
popf
add
push
and
stc
pop
sub
mov
daa
sbb
dec
and
hlt
dec
push
pop
mov
sub
pop
mov
push
jo
pop
into
cwtl
mov
and
or
jl
and
sbbb
fwait
add
fisttps
mov
popf
mov
pop
jge
aad
dec
jae
adc
stc
mov
leave
imulb
xchg
mov
mov
andb
jo
loopne
mov
mov
lods
sub
sbb
xchg
lock
jns
pop
cmpsl
mov
sub
in
adc
jmp
adc
jle
xchg
mov
int3
das
mov
adc
cmp
sar
mov
xchg
jne
mov
cmp
cwtl
aam
sbb
icebp
xor
scas
ret
sub
les
inc
sbb
and
xor
test
std
out
enter
lds
cmc
iret
xchg
negl
xor
test
popa
push
pop
cs
int
cmp
add
loopne
jecxz
nop
or
mov
jno
sbb
pop
or
cmp
test
jl
sbb
dec
shl
push
jbe
cmp
addb
jae
in
jo
bound
jg
mov
fwait
out
mov
xor
add
cwtl
sub
sub
or
pop
pop
lahf
int3
enter
hlt
into
popa
out
mov
data16
and
adc
hlt
jmp
or
rcll
cmpsb
push
loope
push
jno
and
jno
sub
std
and
movl
mov
push
xor
mov
pop
les
jns
add
jo
add
or
jno
xchg
std
mov
sub
or
sbb
add
cltd
test
xchg
test
xor
insl
mov
dec
pop
cmpb
xchg
add
gs
adc
lea
clc
lods
add
shrb
pop
sub
in
cltd
push
or
xchg
adc
mov
add
inc
arpl
stos
mov
push
xor
stc
pop
sub
xor
rcll
mov
sbb
sarb
bound
and
and
mov
xchg
inc
sbb
mov
jae,pn
sub
jne
adc
adc
xchg
sbb
mov
adc
xor
imul
in
add
cmp
in
xor
add
outsl
push
enter
pop
gs
adc
hlt
add
enter
cwtl
pop
adc
lea
inc
push
pop
dec
jno
clc
adc
add
fdivrs
cmp
shrl
pop
testl
adc
dec
in
outsl
and
mov
loopne
mov
loope
xlat
mov
add
popf
dec
cld
out
loopne
lcall
and
inc
xchg
call
decl
adc
adc
sarb
jecxz
dec
sbb
repz
stc
pop
xchg
repz
fidivrl
pop
pusha
inc
push
scas
xor
cli
dec
pop
mov
mov
xor
clc
stc
jb
fdivs
test
and
add
push
in
xor
adc
jp
add
arpl
aas
ljmp
popf
xchg
pop
jge
lods
andb
adc
lods
mov
dec
dec
mov
or
add
add
andl
and
or
or
shl
xchg
add
and
jecxz
mov
jb
test
sbb
mov
mov
in
sub
inc
insb
mov
adc
arpl
cmp
out
or
jmp
sub
add
ds
pop
cmpsl
fiadds
mov
data16
in
hlt
dec
push
pop
add
mov
lret
clc
inc
stc
pusha
imul
push
mov
mov
movsl
and
mov
jbe
loope
enter
btr
mov
jbe
and
ficomps
cmp
mov
cld
pop
xor
cld
mov
xchg
pop
ds
mov
mov
push
mov
adc
dec
add
push
sarl
mov
dec
test
fs
mov
or
mov
cs
inc
dec
mov
lea
ds
pop
repz
int3
and
mov
sarb
dec
popf
fisttpll
jno
pop
ret
lods
adc
cld
inc
shlb
or
mov
jns
test
in
movsb
cmp
add
adc
adc
stc
dec
pop
sub
xor
xlat
es
mov
movsl
stos
mov
dec
and
icebp
dec
add
mov
jecxz
mov
push
mov
mov
enter
movsb
test
mov
cwtl
add
dec
enter
jb
add
pop
mov
or
cwtl
add
popf
cmp
dec
pusha
in
or
lahf
sub
lods
sub
stos
int
cmp
mov
ret
call
mov
pop
cmp
out
mov
add
nop
add
dec
xor
sub
dec
mov
sub
sub
adc
out
scas
xor
push
pop
cmp
mov
int
sub
mov
lea
nop
push
leave
pop
fcomp
or
ficoml
mov
ds
pop
mov
push
mov
dec
sub
jne
sbb
xlat
repz
lret
in
xor
mov
pusha
stc
jo
add
jecxz
popa
mov
scas
add
mov
adc
dec
outsb
sbb
inc
dec
inc
adc
cmp
inc
enter
test
inc
repz
scas
jb
sti
fwait
pop
xor
addl
xchg
mov
mov
add
in
andb
in
mov
jo
gs
jbe
in
mov
mov
mov
repnz
pop
jnp
movsl
xor
pop
inc
loope
or
adc
fiadds
inc
sbb
push
mov
sub
adc
adc
mov
dec
adc
mov
jnp
push
or
in
dec
rol
fisubrs
mov
pushf
push
inc
push
inc
clc
or
or
or
mov
addb
cwtl
jne
roll
cs
inc
clc
sbb
push
jmp
sbb
lods
loopne
sub
arpl
test
or
sti
dec
fnstenv
adc
ror
rcll
decb
xchg
scas
pusha
in
pushf
pop
xchg
push
and
push
mov
jae
push
pop
pushf
test
test
mov
sbb
mov
push
jnp
and
xacquire
mov
adc
mov
pop
pop
js
repz
mov
lods
fstpl
or
mov
int3
cs
daa
push
push
push
test
add
cmp
sbb
addl
sbb
mov
mov
adc
addr16
pop
adc
orb
inc
xchg
sub
xchg
add
leave
or
pop
xchg
orb
adc
test
add
daa
cld
add
sub
adc
adc
dec
and
xchg
lock
xor
or
xor
dec
hlt
fidivrs
pop
inc
mov
ret
ja
test
jmp
add
mov
stos
add
popf
adc
xchg
fwait
out
sub
jne
in
cmp
fwait
sbb
mov
xchg
pusha
mov
leave
outsl
cmp
inc
stos
xor
adc
add
jmp
pop
pop
jp
add
rcr
call
mov
jle
sub
adc
add
popf
popa
pop
pop
ss
xor
mov
jmp
cmc
popf
js
push
mov
mov
pop
mov
cltd
sbb
pop
jl
or
mov
sahf
cwtl
or
call
add
cltd
adc
pop
mov
lahf
push
mov
jp
inc
and
rcll
mov
sbb
push
fildl
sahf
rcrl
adc
aam
add
imul
push
push
iret
icebp
lods
cmpsl
scas
imul
xor
mov
push
in
add
test
sarb
mov
xchg
dec
sub
aad
mov
icebp
or
lret
jle
lods
cmp
add
ss
mov
or
sbb
rcll
jae
push
pop
push
loop
or
fwait
jae
lahf
or
dec
insb
mov
in
cwtl
sbb
pop
inc
das
inc
mov
mov
jb
lock
xor
mov
adc
cmp
mov
jb
imull
inc
fildl
dec
cltd
aam
pop
mov
dec
test
fistpl
nop
push
fdivrl
push
xorb
xchg
xor
or
push
xchg
fidivs
repnz
fists
add
cli
add
or
outsl
or
push
xor
push
xchg
test
jp
mov
das
subb
pop
ror
pop
ljmp
or
fwait
dec
cs
pushf
lret
sub
inc
mov
notl
out
adc
pop
cmpsb
bound
mov
mov
cmp
inc
lcall
push
pop
cmpsb
add
xchg
pop
cli
mov
add
mov
pop
aad
pop
add
fisttpl
jae
loope
in
js
daa
clc
dec
push
adc
mov
lods
inc
jle
cmp
mov
in
push
call
add
cmp
inc
pop
fidivrs
sub
or
dec
or
test
sbbb
mov
adc
cmp
sub
cltd
inc
xor
inc
ret
addb
jns
inc
pusha
int3
rcr
lret
mov
mov
jmp
mov
mov
repz
mov
sarb
lea
nop
dec
daa
and
sbb
sbb
cwtl
push
lods
in
xor
adc
sbb
and
sub
push
cltd
cmp
xor
sub
jne
adc
test
int3
adc
add
mov
pop
aad
std
bound
sbb
jbe
add
cmp
shlb
test
nop
or
dec
nop
test
sub
cmpsb
daa
lock
sbb
inc
adc
inc
xchg
loopne
mov
enter
out
aad
ret
push
test
pop
sub
pusha
lcall
rcrb
mov
jo
lea
mov
in
cmp
repnz
mov
xor
mov
or
out
adc
xchg
icebp
mov
fdivrs
popf
xor
sbb
inc
and
inc
dec
mov
add
out
aad
mov
jbe
cmp
scas
ficompl
lcall
aas
std
pop
call
idiv
adc
push
addb
lods
fwait
jb
stos
dec
dec
mov
dec
add
js
clc
je
lock
and
adc
clc
cmp
fldenv
ret
ja
xorps
and
dec
jno
xchg
pop
sub
cmp
js
push
scas
test
cmp
and
fcompp
shl
and
test
jb
lcall
insb
dec
lock
or
mov
sbb
out
fimull
shll
testb
mov
add
push
add
mov
cli
and
das
xor
push
pop
icebp
sub
lahf
rcll
sbb
pusha
bound
pop
cmpsb
mov
xlat
pop
les
sbb
ret
jp
sub
add
incb
dec
mov
fistpl
fisttpl
mov
imull
mov
movsb
scas
int3
mov
mov
xor
xchg
jne
or
popa
pop
cmc
mov
mov
in
popf
imul
push
leave
in
addb
jmp
and
stos
or
inc
cmp
std
das
sub
das
pusha
mov
dec
sub
or
cwtl
push
mov
sbb
adc
sar
pop
leave
jl
add
xor
rolb
xor
sub
inc
mov
out
mov
fbstp
jnp
dec
jbe
fisttpl
aaa
js
or
mov
movsl
sarl
mov
xchg
test
mov
pop
imul
insb
lock
fmull
xchg
sbb
xchg
dec
xchg
xor
add
loopne
xor
das
xchg
repnz
in
cmp
dec
dec
mov
dec
and
push
or
aaa
push
push
out
cmpsl
je
movsl
jbe
push
add
push
aad
dec
and
pusha
test
cmp
dec
cli
jp
andb
jne
int
loopne
cmpsl
popa
repz
test
sub
cmpsl
jp
push
inc
pop
push
push
andl
xchg
xorl
ds
subl
dec
and
stos
jmp
or
in
push
cld
add
scas
cmpsl
or
cmp
adc
pop
das
sub
loope
bound
jmp
imul
fidivrs
mov
jns
mov
data16
ljmp
jecxz
or
popf
push
push
xchg
es
xchg
cmp
aad
fildl
mov
xor
int3
lea
mov
or
ljmp
mov
sub
dec
sub
mov
push
cmpsb
inc
pop
add
adc
mov
rcll
test
xchg
cmp
pusha
sub
mov
cltd
les
das
scas
pushf
adc
jae
mov
xchg
mov
outsl
sub
pop
sbb
add
mov
cmc
lds
cli
dec
pop
xchg
xchg
clc
std
pop
adc
mov
mov
data16
dec
xchg
shrb
call
test
lea
call
push
icebp
dec
jno
add
sbb
out
cmp
in
or
std
push
rcl
mov
movsb
sarl
cmp
fwait
pop
jae
pop
sbb
or
mov
rorb
dec
test
mov
cmp
sub
inc
inc
addr16
inc
bound
xchg
dec
jne
ljmp
mov
mov
cmp
xchg
xor
mov
mov
add
lds
dec
pop
or
mov
dec
out
xor
mov
fcomi
pop
push
sbb
fdivrs
pop
sbb
and
adc
lret
scas
fidivrl
push
ret
ficompl
push
pop
adc
shll
xor
pop
ja
imul
data16
imulb
jnp
sub
xor
int
or
insl
sub
fiaddl
repz
adc
or
mov
int
rorb
nop
lcall
bound
sbb
fiadds
das
push
fists
and
nop
sbb
rorb
add
add
push
fbstp
leave
imul
les
adc
nop
mov
loopne
lds
inc
pop
inc
xchg
jnp
frstpm(287
lods
add
or
and
sbb
fistps
jnp
pop
movsl
ret
mov
int
jecxz
hlt
mov
add
jecxz
rorl
sbb
imul
idivl
adc
repnz
xchg
xchg
pop
lret
les
insb
jb
rcrb
mov
pusha
adc
mov
xlat
mov
xchg
pop
cltd
loope
mov
add
jns
outsl
inc
add
fs
add
pop
neg
pop
repnz
mov
repz
dec
push
sarb
out
inc
add
sbb
or
out
enter
sub
mov
xor
test
push
mov
ds
roll
xchg
add
sbb
bound
mov
xchg
out
xacquire
add
mov
popf
outsb
scas
dec
rcll
xor
xchg
xor
in
jl
call
outsl
push
lods
cs
int
and
iret
int3
cli
or
popf
pop
xor
mov
jae
jo
jg
ds
mov
or
mov
mov
popa
inc
jae
cmp
xor
aam
std
adc
es
jp
push
outsl
lock
orb
mov
testl
rolb
cwtl
xchg
cmp
stc
mov
jnp
subb
pusha
sahf
sub
adc
orb
add
cmpsl
loope
stc
or
mov
xchg
mov
popa
cld
mov
testw
loopne
fcompl
subb
movsl
push
cmp
push
aad
xchg
push
lret
mov
out
lock
cmp
mov
xchg
icebp
jmp
xor
add
adc
test
in
jno
dec
xor
cld
or
sub
xor
cltd
adcb
ffree
add
fisubs
insl
or
mov
js
adcb
idiv
ret
xchg
std
pushf
add
enter
rol
and
pop
test
scas
ret
stc
pop
add
pop
add
mov
mov
inc
mov
fldl
sub
dec
daa
jne
jns
iret
push
popf
adc
dec
shrl
pop
pop
das
dec
stos
pop
inc
mov
mov
add
mov
sub
sub
cld
dec
out
or
popf
jns
cld
xadd
sbb
das
and
and
jmp
sti
pop
ret
dec
adc
or
adc
mov
xlat
jp
jns
inc
xor
stc
push
sub
jge
sub
cmpsb
sbb
push
pop
or
add
test
cli
adc
and
les
dec
push
mov
adc
sub
js
xlat
or
cld
mov
xchg
adc
xor
aam
cmpb
sub
fdivrs
cmp
mov
fwait
pop
and
xchg
pop
ds
imul
cmp
mov
mov
imul
sti
jg
scas
or
push
and
pop
mov
fiaddl
pushf
shll
scas
mov
push
stos
incb
push
mov
ja
flds
push
cwtl
scas
mov
adc
test
pop
dec
cmp
loopne
push
test
add
pop
scas
lea
std
cli
adc
mov
or
jne
xor
stos
stc
fiaddl
and
loopne
je
jmp
jg
ljmp
out
lcall
fs
xchg
xchg
out
adc
ficoms
sub
sub
jno
adc
std
xorb
xchg
mov
or
push
or
sbb
rorl
dec
popf
test
insl
jns
arpl
loopne
or
scas
pop
and
mov
inc
and
mov
xor
sbb
adc
cmp
dec
jne
lcall
lock
pinsrw
dec
mov
insl
dec
xor
pop
imul
jmp
adc
jle
pop
push
push
mov
ror
loopne
bound
or
mov
mov
insl
clc
scas
fadd
fbld
test
jmp
mov
mov
add
mov
shrl
or
stos
push
pop
loope
jle
cmp
sbb
xchg
pop
repnz
inc
out
adc
lock
mov
iret
push
mov
add
jo
lret
or
cld
dec
lahf
mov
fldt
or
jb
and
loopne
testl
and
rclb
pop
dec
cld
fimull
outsb
adc
clc
out
or
push
sbb
aad
bound
cmpsb
js
dec
std
and
mov
daa
ret
inc
and
jb
adc
xchg
fsubrp
mov
adc
int
jno
cmpsl
jbe
dec
push
adc
or
xchg
add
push
ja
in
addr16
dec
pop
mov
dec
mov
cmp
cmpsl
incb
pusha
call
inc
mov
mov
mov
sarl
push
fxtract
inc
sub
pop
lahf
gs
pop
push
rorb
mov
nop
push
fadd
or
mov
pushf
mov
nop
lahf
pop
lret
sub
pop
dec
push
or
loopne
aas
jne
in
xchg
sub
fwait
jmp
mov
push
sti
and
fiadds
pop
xchg
push
mov
or
sbb
jo
xchg
popa
imul
sti
xor
jno
add
adcb
xchg
repz
push
inc
adc
cmp
mov
popa
jmp
mov
adcb
vpavgw
loopne
mov
lods
popf
sbb
cltd
ss
notl
fldl
push
mov
and
cmp
xor
mov
insb
repz
popa
addr16
loope
pop
sbb
adc
add
add
adc
pusha
rcll
cmpsb
cmp
out
pop
sbb
mov
xor
lcall
pop
add
sbb
dec
sahf
xchg
or
fisubs
inc
repnz
imul
pusha
rorl
mov
loopne
aaa
outsl
out
mov
sub
or
lea
daa
cmc
and
jg
mov
jno
scas
or
adc
push
stc
aam
mov
pop
roll
mov
mov
pop
mov
jecxz
sbb
and
xor
sbb
aaa
sbb
aas
ss
sub
call
mov
mov
xchg
repz
cmp
add
push
mov
jl
in
call
aam
bound
int3
or
dec
cmpb
cmc
push
xlat
xchg
nop
dec
stc
clc
mov
out
add
push
inc
mov
repnz
pop
lods
push
fldcw
push
xchg
dec
imul
xchg
push
mov
pop
pop
and
adc
fcoms
lea
xchg
dec
aad
pop
lahf
dec
mov
xchg
aam
jno
sub
divb
push
movb
push
sbb
call
cmp
test
or
adc
cld
push
or
xchg
sarl
dec
shll
mov
pop
pop
clc
or
add
dec
xchg
or
sub
dec
bound
cmp
lcall
push
testl
sub
jne
cmpsb
frstor
push
in
jge
addr16
stc
mov
add
mov
in
int3
sbb
add
inc
add
add
sub
lea
subb
jbe
xchg
mov
xchg
mov
cmpsl
pop
dec
mulb
or
pop
push
xor
pop
into
cmp
mov
or
inc
mov
adc
fbstp
xor
mov
fdivrl
icebp
into
nop
dec
bound
mov
push
add
cmc
sbb
push
mov
add
lcall
outsb
sub
mov
shl
and
dec
call
divl
stos
or
ljmp
stos
pop
add
xor
or
sbb
cmp
and
shll
mov
jecxz
nop
sbb
adc
xor
dec
int
mov
lahf
cmp
pop
call
outsl
jecxz
dec
mov
and
pop
jno
mov
in
orb
push
fcoml
pop
pop
pusha
into
dec
and
fstl
pushf
loopne
add
aam
je
ja
and
out
call
add
es
cmp
ss
rcrl
fnsave
jl
xchg
rol
mov
push
mov
xor
add
push
push
call
mov
mov
or
adc
xchg
test
call
mov
add
rep
pusha
xchg
add
xor
cmc
push
or
add
sti
fbstp
lock
add
cli
or
bound
sbb
add
xchg
test
pushf
or
sbb
jbe
out
and
xor
pop
mov
mov
xchg
and
push
sub
mov
adc
cmc
xor
fcomps
mov
fwait
inc
out
jnp
cmp
loop
add
push
pop
cmp
add
fisubs
sarl
cmp
sub
mov
jl
iret
das
imul
mov
sbb
shll
xor
push
xchg
xchg
in
add
fnsave
push
sub
arpl
add
pop
or
loopne
mov
add
mov
pop
int3
push
cld
repz
insb
adc
imul
xor
mov
sar
test
push
ljmp
sbb
sub
add
cmp
mov
and
and
scas
add
rcll
add
out
lcall
test
jmp
mov
xor
sub
repnz
les
or
xorb
inc
repz
test
sbb
pop
cld
cmp
iret
sbbb
xor
imul
xor
sub
lock
cltd
add
jge
scas
fistpll
pop
fidivl
push
scas
mov
adc
pushf
int
ret
sub
sub
enter
stos
add
mov
cs
mov
cs
sbb
mov
xor
cs
cld
pop
in
pop
xchg
mov
and
mov
test
ficoms
icebp
mov
stos
sbbb
jns
jmp
orb
xor
adc
add
dec
scas
daa
pop
xlat
jno
adc
aas
dec
out
mov
and
adc
data16
lret
jns
and
pop
cmc
mov
in
bound
sub
mov
and
mov
pop
jg
fs
cmpsb
fucom
sub
sub
mov
movsb
call
fistpl
mov
js
stc
add
xor
fwait
jg
add
jle
pop
jge
inc
mov
and
dec
add
loope
in
mov
inc
pop
mov
ret
repz
dec
sbb
sub
lds
xor
cmpsb
sub
vhsubpd
and
jb
mov
pop
andl
repz
js
sbb
popa
mov
lahf
pusha
std
cmp
push
pop
test
fsubrl
pusha
scas
jne
scas
cltd
pop
xor
add
loop
mov
in
movsl
ss
imul
rorl
filds
les
ud0
cmpsl
das
ss
sub
lock
icebp
fldl
push
test
mov
mov
rcll
jmp
pusha
push
out
add
xor
incb
popf
loope
das
je
negb
loopne
jge
dec
iret
lahf
dec
enter
stos
ds
std
inc
jmp
les
das
shrb
push
mov
pop
das
and
loope
mov
stos
add
mov
in
mov
sub
les
cltd
bound
shl
dec
sub
sbb
scas
arpl
popf
jmp
leave
loopne
xor
mov
orl
inc
add
mov
add
out
popa
pop
push
xchg
aad
enter
mov
imul
add
movsb
je
sub
pop
sub
dec
lea
xor
hlt
or
push
notl
mov
cmp
fwait
lret
push
push
dec
jo
sahf
mov
adc
repz
mov
sub
je
push
pop
jae
daa
fldenv
fstl
jo
add
push
xor
pop
mov
mov
add
xor
cmp
repz
push
call
sub
jecxz
sbb
mov
and
cmpsb
jb
test
adc
test
and
push
mov
jnp
adc
mov
xchg
mov
adc
or
mov
lds
fldenv
add
or
sbb
fstpl
and
outsb
mov
xlat
add
or
insb
xchg
pop
pop
sarb
lods
cmp
mov
shll
enter
add
sbb
out
dec
mov
aas
and
pop
test
outsb
pop
jb
add
push
xchg
mov
ret
js
xchg
insl
stc
fs
add
shrl
call
test
cmpsl
repz
js
ljmp
fwait
or
shl
sub
js
xchg
cli
cld
popfw
repz
pop
sbb
sub
in
int3
mov
in
mov
mov
test
stc
mov
clc
mov
je
jo
shlb
mov
adc
lcall
xor
push
mov
xchg
xor
popa
jg
ja
int3
push
mov
test
adc
jmp
inc
pop
fsubs
sub
push
ja
hlt
sub
xor
daa
popa
adc
mov
sub
sbb
mov
add
mov
lods
cmp
addr16
xor
jne
push
jg
pop
fs
in
into
call
jo
pop
lds
stc
mov
test
xchg
sbb
cwtl
icebp
add
xchg
mov
sbbb
add
pop
cmp
test
int3
enter
and
sbb
fisttpl
xchg
dec
adcb
aas
xor
stc
cwtl
mov
fcmovne
movsl
call
aam
ss
aam
bound
test
inc
mov
push
inc
imul
adc
rorl
popf
or
sub
and
sbb
sub
mov
je
incb
popa
stos
arpl
pop
sbb
or
dec
mov
inc
testb
out
arpl
or
daa
xchg
dec
movsb
pop
test
bound
xor
loop,pn
cmpb
dec
push
mov
mov
aam
mov
mov
pushf
faddl
stc
xor
outsl
pop
mov
pop
mov
roll
cwtl
insl
xor
jnp
mov
and
stc
and
ret
aas
sbb
pusha
push
dec
pop
mov
cmp
push
mov
lret
sahf
sub
dec
out
jbe
cltd
add
stos
daa
hlt
gs
cltd
push
cltd
dec
jle
lahf
outsl
movl
sub
xchg
and
sub
pop
adc
out
add
push
mov
pushf
add
repnz
aam
xor
sbb
in
psubusb
pushl
adc
loop
loop
cmp
add
xlat
cmc
dec
dec
enter
cmp
xor
push
test
insl
in
add
mov
lods
faddl
lds
jnp
inc
jne
fstp
out
add
andb
aaa
xor
aas
xchg
pop
cmp
imul
pop
int
adc
sub
push
add
mov
lds
pop
inc
in
jb
sbb
mov
icebp
pop
lods
loop
pop
add
fdivl
inc
fldt
addb
xor
mov
inc
incb
xchg
add
xor
add
jge
fucomp
in
adc
push
jge
aam
pop
add
js
add
mov
adc
pop
hlt
pop
or
jl
jae
scas
fsubrl
jecxz
leave
test
mov
sbb
jae
pusha
popa
push
rorb
adc
sarl
mov
sub
lcall
xchg
push
adc
in
js
add
fnstsw
cld
in
jmp
and
mov
out
jmp
nop
call
mov
mov
je
mov
pop
in
gs
mov
adc
inc
mov
enter
xor
mov
adc
test
xor
lret
pop
inc
fstl
scas
add
sbb
popf
xchg
mov
jg
inc
std
ret
gs
sbb
and
subb
mov
pop
lods
rcr
push
add
pop
and
fdecstp
cmp
and
test
jmp
jo
repz
popa
and
pop
mov
add
imulb
cmp
dec
pop
jl
lret
jmp
mov
dec
xchg
add
sub
jo
and
xchg
dec
fxch
cli
sub
inc
das
xor
rolb
pop
js
sub
cmp
adcb
mov
mov
inc
pop
mov
adc
popf
and
xchg
inc
js
jmp
std
mov
add
lret
dec
push
loopne
xor
push
inc
and
mov
clc
mov
mov
dec
push
jne
dec
aad
addb
push
stc
sub
cmc
subb
fisttps
mov
pop
ficompl
jle
in
rdpmc
mov
in
dec
sub
dec
and
or
jns
jp
aaa
xchg
mov
sbb
add
dec
enter
aam
addb
neg
xchg
sbb
clc
outsb
lcall
mov
xchg
daa
add
pop
into
scas
mov
add
sbbl
add
mov
dec
push
cmpsb
ja
add
popa
pop
in
adc
out
int3
out
mov
into
fwait
push
js
push
mov
mov
add
loope
adc
loop
mov
pusha
add
mov
add
sub
add
mov
jo
popf
sub
and
mov
loop
add
notb
inc
ja
aam
lock
sbbl
jp
push
in
lods
rolb
sbb
adc
xor
imul
push
xchg
add
push
cmp
mov
and
ret
dec
clc
pop
and
daa
push
push
nop
repnz
adc
pop
aad
push
cmp
xor
das
and
ret
add
and
or
sbb
shr
mov
leave
cld
push
mov
les
push
cmpsl
repnz
orb
or
repz
sbb
outsb
sub
push
movsl
in
movsl
int3
into
xchg
cmp
ss
test
dec
mov
add
dec
repnz
adc
lods
cmpsb
push
jo
pop
fnstenv
faddl
push
iret
add
cmp
imul
fs
xor
pop
fnsave
pop
out
stc
scas
subb
or
or
add
cwtl
gs
or
rorl
cld
dec
push
push
incb
fcomip
pop
sub
jno
adc
adc
and
push
add
adc
ret
push
rolb
xor
out
sub
loopne
mov
sbb
add
mov
out
js
push
in
mov
mov
add
enter
aad
jno
mov
xchg
fildll
xor
or
xor
mov
ss
pop
popf
xor
ret
adc
xchg
rorb
mov
insl
test
ret
fistpl
sbb
mov
push
out
js
mov
add
adc
aad
sub
mov
push
xchg
hlt
js
push
test
mov
addl
fldenv
jae
in
xor
xlat
add
sti
aam
add
adc
out
xor
bound
mov
nop
push
inc
push
pusha
mov
cmpsl
dec
faddl
nop
xchg
dec
sbb
cmp
incb
mov
daa
inc
jb
cli
dec
or
in
arpl
push
push
jae
fwait
stos
xor
test
lods
jne
add
jecxz
adc
fmuls
push
cmp
test
push
jmp
into
scas
xchg
mov
push
adc
mov
repz
mov
call
adc
nop
dec
mov
adc
xor
jo
mov
lret
push
xchg
jg
fsubs
push
sub
xor
adc
pop
pop
gs
push
pusha
push
sbb
mov
mov
xor
les
pop
xor
sarb
movsl
cmp
shl
insb
mov
xor
xor
sbb
mov
push
pusha
add
cmp
cmp
add
popf
cmc
fldt
jnp
fnstenv
jge
sub
out
lret
ret
hlt
aas
inc
xchg
mov
sub
fwait
lock
xchg
shlb
xchg
fidivs
rcrl
stc
adc
fidivl
sbb
add
xor
iret
hlt
add
stc
pop
insb
push
xchg
or
ficomps
ljmp
dec
aaa
dec
sbbb
add
and
mov
xor
aaa
add
cmp
inc
or
mov
cltd
and
jns
sbb
add
fs
scas
fstpt
jl
rorb
or
jne
rolb
outsb
sarl
lds
mov
cli
xlat
movsl
pusha
addr16
or
loop
push
jnp
pop
in
adc
mov
xchg
pop
roll
pusha
arpl
fiaddl
data16
mov
testl
mov
out
or
test
push
xor
xchg
dec
cwtl
cli
int
sub
outsl
in
push
pop
nop
add
adc
mov
dec
cmpsb
inc
mov
lea
push
push
dec
data16
int3
mov
idivb
mov
lcall
pop
cwtl
push
imul
sub
outsl
fisubrl
test
pusha
jmp
add
add
mov
dec
stos
jno
nop
pop
sbb
sbb
daa
cld
or
pop
adc
int3
push
or
xor
lods
test
jmp
push
mov
mov
mov
jns
lahf
cld
xchg
push
lods
xchg
shl
enter
in
cmp
arpl
and
incl
add
fwait
cs
mov
jne
jg
push
rcl
inc
mov
add
or
shrl
pop
cmpsl
adc
sub
leave
dec
aam
xor
stc
xor
inc
mov
movsl
sub
popf
push
or
loop
iret
fdivp
rclb
insl
cmp
inc
xor
and
mov
jecxz
enter
movsb
hlt
push
add
pusha
mov
aaa
mov
cmp
popa
lret
mov
pop
pop
push
dec
xor
notb
jp
adc
pusha
clc
adc
loope
lret
stos
adc
mov
insl
or
lods
mov
mov
cmp
xor
dec
data16
addb
or
or
sbb
popa
pop
pop
push
adc
icebp
popa
push
popf
pop
xor
cmpsb
pop
cmpsb
push
fld
mov
jae
lret
jge
and
loopne
test
dec
mov
ret
jbe
out
jno
fs
mov
pop
adc
jmp
mov
pusha
frstor
mov
push
lock
or
orb
xor
mov
cmpsb
mov
xchg
mov
mov
rcrb
mov
xchg
and
sbb
arpl
sub
push
mov
pop
out
add
clc
lcall
mov
mov
mov
pop
icebp
xchg
sbb
popf
daa
cltd
sbb
ror
das
add
adc
add
pusha
pop
mov
fldl
add
or
xor
mov
cs
sahf
cmpl
and
ret
pop
sbb
daa
push
pusha
push
push
sub
xlat
add
in
rcll
pop
orb
imul
or
jg
dec
out
push
sub
aad
add
jne
jmp
sbb
cwtl
fmull
stos
jb
dec
pop
and
sub
cmpsl
jo
popf
mov
ret
and
add
je
mov
mov
and
lock
adc
mov
xchg
lret
mov
adc
mov
add
jl
xchg
xchg
addr16
outsb
nop
jns
fwait
jmp
inc
lahf
add
sbb
xchg
punpckhdq
insb
inc
jo
cmpsl
push
adc
sub
inc
add
mov
add
call
inc
sub
jno
shrl
leave
add
cmp
inc
mov
cmp
addb
jge
jns
inc
add
js
add
dec
mov
xchg
subl
push
les
sbb
mov
das
dec
jo
outsb
daa
add
mov
ja
dec
arpl
movsb
pop
stos
data16
insl
jmp
jnp
push
lock
das
and
cs
mov
mov
jle
jb
xchg
mov
push
pop
pop
push
gs
mov
pop
cmc
jnp
dec
mov
or
pop
ja
outsb
xchg
and
out
rorl
mov
stc
out
shlb
mov
push
lock
rcrl
pop
sub
cmp
pop
mov
subl
andnps
jle
push
test
jg
sbb
call
pusha
in
sub
aaa
rcr
xchg
dec
mov
popf
rcll
push
cmp
xchg
adc
lret
imul
insl
dec
sub
jecxz
test
fsts
push
jns
pop
and
adc
in
push
lcall
mov
mov
push
sub
shl
push
mov
sbb
push
jmp
fcmovnbe
fiadds
bound
fiaddl
cld
pop
movsl
lds
cmp
dec
into
lret
push
popf
nop
inc
xor
add
and
add
enter
arpl
and
sbb
into
aad
stos
addl
fwait
loope
pusha
and
dec
and
sbb
or
je
dec
out
mov
sub
jns
and
xor
lods
dec
ret
sbb
xchg
mov
mov
pusha
mov
mov
popa
mov
pop
sar
fbld
test
jmp
push
mov
mov
outsl
mov
mov
and
add
push
emms
insl
leave
ljmp
dec
pop
xchg
jge
aaa
sbbl
fnsave
add
xor
adc
cmp
cmp
add
test
aas
sub
add
xor
outsb
sub
pop
xchg
xor
in
addl
cli
adc
incl
in
lret
call
push
or
xchg
or
and
fiadds
add
cmp
loopne
jnp
and
push
dec
sbb
mov
mov
mov
int
sbb
inc
test
repnz
push
or
fcom
adcb
repz
cmp
pop
mov
sbb
enter
pop
and
cmpb
loope
sbb
mov
shll
sub
cmp
inc
mov
pop
outsb
repz
xchg
aas
mov
jo
out
jbe
out
stos
outsb
xchg
sbb
and
push
xchg
nop
fs
inc
loope
std
dec
push
push
lock
sub
sbb
mov
adc
nop
test
imul
add
cmpsb
js
add
xchg
mov
jns
pop
xlat
sub
jno
cs
popa
ds
lods
mov
aas
jl
andb
or
jmp
xchg
or
push
das
or
lret
pop
inc
mov
inc
add
jmp
adc
jne
mov
jge
repz
std
sbb
jo
fmulp
std
pop
xor
add
cld
mov
xchg
adc
inc
imul
dec
notb
push
add
sbb
and
jnp
push
in
xor
test
fildl
mov
cwtl
jecxz
insl
xchg
cmpsl
imul
jl
clc
ljmp
test
outsb
popf
call
adc
pop
repz
add
mov
aas
xchg
fistpll
cmpsl
int
fs
add
addl
add
and
mov
lods
in
lods
sbb
sbb
xchg
sub
sbb
popf
cli
sub
add
or
xchg
orb
fs
imul
jbe
xor
xchg
xchg
dec
cmc
addr16
xor
cld
adc
std
xor
stos
sahf
scas
adcb
sub
popa
xor
in
imul
jl
pop
cs
dec
cwtl
test
fsubrs
adc
ficomps
mov
mov
jge
outsb
rcl
out
xchg
add
xor
and
push
jbe
inc
or
pop
rol
mov
ss
inc
add
pop
mov
out
leave
push
pop
mov
jnp
adc
fildll
insb
mov
dec
test
sbb
sub
pop
js
mov
stos
cmp
sub
ret
les
scas
lret
lahf
scas
cmp
add
out
dec
fimull
addb
fcomps
clc
add
pop
and
mov
loop
jne
rolb
cmc
pop
sbb
xor
es
and
clc
pop
filds
pop
cwtl
push
push
inc
mov
shrl
push
inc
lods
jne
mov
add
icebp
adc
mov
subl
adc
push
cmp
loope
sub
push
sub
scas
mov
sbb
ret
orl
or
push
cmp
sbb
inc
sbb
xchg
sahf
xor
add
aad
add
inc
cmp
dec
push
ret
mov
and
add
or
shll
or
mov
adc
sbb
adc
popl
ljmp
adc
test
pop
xor
inc
mov
rorl
sub
test
testb
cmpsl
and
aam
or
adc
clc
rclb
daa
add
fst
jg
jmp
add
add
or
cmpsb
add
leave
cltd
mov
sbb
push
jno
addl
jl
add
call
push
sub
sbb
mov
test
cmp
adc
inc
add
cltd
sbb
inc
inc
xor
jno
sbbb
mov
stc
fisubrl
inc
or
ss
repz
jo
push
out
inc
loopne
rorb
add
loope
push
xor
push
xchg
mov
pusha
pusha
push
xchg
ja
xchg
mov
mov
adc
sub
push
push
inc
jmp
push
pop
or
sbb
inc
decl
push
mov
mov
push
jge
cld
cmpb
sti
addr16
add
shlb
push
or
cmpl
rcrl
add
or
jae
add
or
inc
sbb
push
push
push
mov
pusha
jne
movzbl
push
inc
mov
mov
xor
sub
fnstenv
lods
jae
iret
add
cmp
xchg
push
nop
inc
inc
cmp
stc
jnp
adc
mov
or
iret
adc
gs
push
sbb
add
jmp
and
cmpl
cli
enter
jne
test
cmc
or
arpl
mov
leave
cltd
sbb
adc
ret
shr
mov
cmp
mov
ficoms
out
mov
add
and
mov
shr
or
jmp
ret
adc
cli
push
roll
cltd
or
or
xchg
pop
sbb
mov
pop
jne
lock
sbb
fsqrt
xchg
xchg
ret
jmp
push
fs
dec
je
insb
push
test
in
and
push
fwait
testl
or
sub
adc
or
jo
in
sub
mov
jmp
mov
cwtl
fisttps
push
mov
mov
leave
adc
or
add
rorb
adc
jmp
sub
or
lea
push
sub
fisttpl
dec
stc
mov
or
or
movsb
adc
mov
mov
xor
in
xor
cmp
int3
sbb
pop
cmp
xacquire
adc
cmp
dec
xchg
stc
mov
or
call
in
decl
mov
clc
loopne
into
je
or
roll
push
sbb
hlt
add
push
push
test
punpckhdq
mov
xchg
adc
nop
xchg
dec
dec
xchg
and
mov
enter
pop
jle
or
pop
leave
ret
add
inc
loopne
test
mov
pop
add
sbb
add
fiadds
mov
and
add
mov
jb
dec
push
nop
jo
jecxz
icebp
jns
fsubl
jp
dec
aad
jp
cltd
cld
jge
test
add
dec
out
stos
je
jl
adc
adc
mov
pop
pusha
mov
jmp
add
jecxz
mov
in
push
test
pop
sub
lahf
insl
push
nop
mov
stc
fmuls
xorb
push
add
mov
inc
movb
mov
and
fld
clc
leave
add
dec
lods
inc
test
push
add
mov
fbld
add
imul
sub
aaa
xor
sbb
mov
inc
ljmp
mov
mov
mov
jns
jmp
mov
sbb
out
inc
push
ja
sbb
popf
add
lds
sbb
sti
xorl
arpl
push
mov
adc
in
xchg
jae
into
push
lret
imul
pusha
add
xor
mov
add
push
repz
jbe
lods
test
sub
sbb
add
xor
icebp
cld
sahf
movsl
cmp
loopne
shlb
pusha
ljmp
inc
xor
mov
dec
inc
lock
ret
inc
movsl
ljmp
mov
inc
and
or
and
xchg
mov
lods
jge
jae
mov
inc
nop
pop
iret
jmp
jge
aad
dec
movsb
xor
or
add
jae
jbe
cmp
leave
mov
jle
das
pop
insb
push
add
loopne
mov
rcll
outsb
add
xor
xor
jp
lret
push
outsl
fldt
das
dec
movsl
fiadds
addb
or
mov
add
pop
lea
push
stos
movsl
jge
mov
addr16
adc
fsubl
fimull
test
icebp
xor
mov
std
inc
shlb
shrl
data16
mov
mov
push
mov
inc
stos
or
mov
mov
dec
push
fsts
in
dec
xor
mov
cmp
mov
loopne,pt
sbb
xchg
pusha
scas
jbe
sti
out
loop
jns
mov
ja
cmp
hlt
add
mov
cld
pop
pop
add
mov
and
and
fsubl
mov
push
es
addr16
enter
lcall
jmp
fdivp
adcl
cmpsl
add
cmp
or
pop
dec
scas
js
xor
jmp
inc
mov
jns
add
jle
pop
pop
jmp
inc
rclb
mov
in
and
xchg
int3
or
sbb
popa
imul
lods
add
inc
mov
arpl
lret
adc
xor
mov
xchg
mov
push
in
jecxz
cmp
sahf
adcb
dec
sbb
add
mov
push
add
adc
pop
add
sarb
and
cmc
adc
xor
mov
cwtl
aam
lock
adc
cmp
aam
lds
loope
push
imul
das
repz
shll
test
push
test
mov
sbb
test
rolb
sbb
nop
or
dec
pop
out
pop
cmp
sub
rolb
cld
fildl
jecxz
fucom
xor
push
fmuls
mov
aad
xor
inc
aam
mov
popa
mov
imul
jno
add
bound
pusha
fdivs
sbb
sahf
imul
xor
adc
cmp
cmp
fnstcw
mov
inc
in
jne
push
xchg
sub
les
add
jo
inc
sub
std
dec
popf
test
cmpl
mov
enter
jno
stos
mov
cmp
jp
popf
out
cmp
jo
add
movsb
dec
dec
loop
add
mov
popl
rclb
mul
push
loop
add
or
shlb
add
mov
aam
fadds
in
jbe
mov
iret
lahf
sahf
add
aam
ja
dec
loope
cld
mov
in
jge
dec
insl
push
repz
push
and
filds
aaa
int
stos
sbb
xor
mov
add
add
adc
cli
pushf
xchg
or
ss
loop
or
inc
inc
xor
fcoml
xchg
ljmp
add
sub
sbb
fnstcw
std
ret
cmpsb
or
fisttpll
add
dec
gs
or
or
daa
test
dec
or
sbb
inc
pop
mov
cmp
pcmpgtw
aas
mov
sub
testl
popf
movsb
push
xor
adc
call
sbb
xchg
sbb
add
dec
mov
aaa
pop
jb
mov
inc
ljmp
jns
test
push
push
lret
outsb
or
stc
inc
aas
test
mov
lcall
add
add
push
movsl
sbb
inc
add
lret
dec
pop
push
mov
negb
test
push
sahf
add
sbb
jbe
nopl
ret
add
add
andb
pop
pop
flds
bound
mov
sub
jecxz
gs
add
inc
add
push
rorl
add
pop
mov
adc
fdivrl
push
add
inc
jae
push
xor
je
mov
inc
fld
rclb
add
imul
mov
sbb
push
cmp
enter
add
adc
add
imul
lea
adc
inc
push
clc
sbb
xor
dec
add
add
xchg
adc
mov
inc
dec
xchg
mov
mov
and
add
mov
jmp
fcmovb
sbb
insb
pop
aad
cmp
lds
sub
jmp
adc
cmp
push
movb
dec
lea
in
or
cli
or
daa
push
movsb
aad
xchg
in
push
add
sbb
inc
lret
js
push
test
seto
fisubl
mov
push
in
mov
mov
stc
out
jb
fdivrl
movb
sbb
mov
push
push
dec
inc
sbbb
xor
in
and
aad
pop
int3
add
lds
cmpb
in
mov
xchg
and
xchg
cmp
or
out
add
stc
fwait
and
dec
ljmp
add
inc
xlat
mov
in
jns
add
or
sub
nop
adc
lods
add
lret
aad
pop
orl
lock
enter
jecxz
pushl
mov
add
push
sub
ja
mov
sbb
movl
add
push
test
adc
data16
and
dec
or
fidivs
inc
movsb
out
sub
lods
push
mov
or
cmp
subl
test
mov
call
add
adc
mov
pop
pop
movsb
push
jecxz
push
add
int3
scas
inc
jle
jae
enter
cmp
adc
lret
daa
adc
or
mov
mov
sti
lock
dec
add
das
out
xchg
cmpsl
or
int
add
mov
mov
add
les
mov
in
fwait
out
sbb
sbb
adc
js
push
jo
shl
sub
fnstenv
and
xchg
js
pop
andb
add
or
lods
mov
icebp
add
jl
in
add
rol
cmp
or
clc
mov
mov
fisttps
cmp
xchg
cmp
lock
pop
cmp
je
cld
pop
nop
mov
or
add
pop
jmp
fwait
pop
ja
xchg
mov
dec
imul
jbe
add
sub
adc
add
jmp
or
sbb
pop
aam
lods
loopne
jns
test
add
add
or
xlat
ret
adc
movsl
mov
test
inc
sbb
lahf
jmp
mov
ret
or
jle
pushf
and
mov
sub
clc
rcll
clc
add
mov
nop
fmuls
pop
sahf
dec
add
or
dec
ja
add
inc
cmp
pop
je
dec
ljmp
mov
jmp
sbb
cmpsb
adc
sub
faddl
add
push
push
cmpsl
jl
movsw
mov
sbb
sbb
sar
enter
inc
pop
push
sahf
inc
xchg
add
sub
popf
adc
out
xor
nop
pusha
pusha
inc
popf
shlb
stos
add
lea
sbb
leave
insb
xchg
wbinvd
lock
mov
enter
mov
loopne
cmp
pop
xchg
movsl
dec
cmpsb
cld
rep
push
enter
pop
pop
pushf
xor
and
pushf
cmpl
subl
nop
bound
stc
xchg
lea
add
jmp
mov
je
mov
ret
add
cmp
sti
jae
in
inc
lods
add
mov
mov
nop
nop
jb
push
frstor
ds
and
mov
es
fiadds
adc
mov
mov
cmp
addr16
ja
dec
adc
test
push
inc
gs
rclb
add
and
and
dec
add
adc
push
pusha
aaa
movsb
push
call
jle
testl
xchg
xor
addr16
aas
xchg
sahf
clc
inc
add
mov
mov
lock
sub
xchg
aas
or
dec
testl
lret
test
mov
add
cmp
sub
jmp
mov
in
mov
add
push
cmp
dec
rolb
dec
sbb
call
adc
popa
in
pop
fists
cwtl
int3
or
xchg
aam
add
jmp
inc
hlt
jge
add
sbb
xchg
mov
adc
add
mov
iret
icebp
daa
sub
xor
pop
les
ret
push
and
imul
test
hlt
pop
add
lret
cwtl
loopne
push
jns
test
xor
inc
sbb
push
add
nop
pop
scas
nopl
shlb
loopne
push
int3
movb
push
int3
adc
test
hlt
rcrl
int3
clc
mov
testb
lods
xor
pop
xor
xchg
sub
add
test
mov
adc
stos
or
pop
stos
fstpl
les
dec
mov
inc
cwtl
in
jae
fistl
sub
cltd
ds
add
test
lret
loop
cmp
push
xchg
ror
sarb
add
mov
lcall
sahf
or
mov
ja
inc
lods
pop
or
mov
pushf
in
jmp
insb
push
inc
cld
cmp
repz
fnstenv
cmc
mov
xor
insl
jbe
out
lods
xchg
jns
loopne
lods
push
dec
add
hlt
fcomps
xor
mov
iret
mov
inc
sbb
mov
xor
or
rcl
jmp
sbb
add
mov
or
lret
outsb
push
cmpsl
dec
movhps
mov
mov
lcall
jb
mov
sbb
fs
sub
cmpsl
sub
cmc
pushf
cmp
leave
jl
cmp
mov
mov
imul
pop
mov
jg
ffreep
scas
in
and
pushf
clc
cltd
aas
mov
pop
adc
add
dec
mov
add
scas
fldt
xlat
xchg
cmp
loopne
mov
mov
inc
add
out
xchg
xor
sbb
push
jmp
push
and
cmp
xorl
rorl
out
pop
push
clc
jb
mov
bound
xor
pop
jo
xchg
repz
loop
or
mov
push
aas
out
popf
push
call
imul
rolb
stos
ds
lcall
mov
into
es
mov
and
sbb
or
filds
test
stos
sub
cmc
loopne
xor
inc
inc
mov
fs
or
cmc
pop
push
add
add
dec
inc
shl
fwait
aaa
loop
adc
popf
push
jno
mov
mov
popa
ljmp
js
jge
push
mov
xchg
cwtl
mov
scas
add
loop
add
mov
gs
sub
pop
dec
aaa
dec
push
lock
add
shll
xchg
push
sbb
sbb
sbb
fwait
pop
imul
or
bound
sub
pop
pusha
pusha
jae
dec
jno
mov
adc
out
add
pushf
stc
popf
xor
push
pop
das
add
shrl
add
mov
outsb
sbb
xor
sub
dec
adc
test
cmpsb
adc
dec
cmp
xor
add
arpl
data16
mov
adc
pop
ret
add
out
test
jp
add
add
and
mov
push
mov
enter
or
nop
jbe
xchg
stos
leave
add
lea
mov
int
notb
add
push
and
f2xm1
add
movsl
jae
push
jbe
sub
pop
xchg
lea
inc
sub
xchg
sub
stos
jns
daa
push
push
xchg
nop
js
push
or
ljmp
adc
fsubrs
push
out
adc
sbb
add
inc
xchg
push
int3
or
sub
mov
repnz
enter
add
push
mov
adc
int
sarb
adcl
ret
test
adc
mov
popa
inc
outsb
sub
xor
pop
xor
cmpb
mov
out
push
cwtl
sbb
dec
inc
push
cmp
decb
sub
sbb
add
jmp
sti
push
lcall
shrl
cs
xor
fwait
inc
stos
cmpsl
adc
push
or
lret
push
cmp
imul
cli
inc
lock
push
fs
cmpsb
insl
inc
push
pop
movsb
bnd
rolb
lea
lds
xchg
mov
mov
jns
outsb
popa
xorb
add
sub
cmp
dec
fcmove
xor
dec
xchg
jo
pop
aaa
push
stc
pusha
enter
push
sbbl
cmp
jle
mov
and
sbb
xchg
dec
andb
ss
pop
scas
popa
xchg
adcl
mov
cmpsl
adc
sub
xor
cli
sbb
jae
jmp
push
mov
dec
jno
or
xchg
or
shrl
add
cltd
ja
les
push
aad
jne
cmp
mov
testb
scas
push
and
iret
xchg
sbb
sahf
add
call
ficompl
inc
sub
movsl
inc
push
inc
xor
movsl
dec
test
adc
lds
lcall
xor
push
mov
mov
add
rcr
clc
xor
inc
jae
ficoms
cmpsl
cmp
cmc
mov
sub
xorl
add
sbbb
dec
shlb
cmp
push
add
push
stos
xchg
nop
enter
movsl
pusha
les
pusha
xor
and
jo
mov
xor
out
test
inc
inc
cltd
add
ficoml
push
or
push
adcb
mov
and
adc
orl
and
and
gs
push
dec
addl
xchg
mov
cmp
inc
push
sub
jns
or
sbb
mov
mov
and
xor
push
daa
cmp
call
or
mov
jo
mov
jle
mov
into
sbb
into
test
rcrb
pop
pushf
test
mov
test
je
xchg
jmp
shll
nop
dec
mov
and
je
inc
roll
andb
or
test
adc
jae
and
cmp
jle
imul
ljmp
mov
cmp
es
cmp
or
or
mov
out
cltd
pop
push
or
pushf
add
cmp
inc
jge
xor
imul
add
push
nop
sti
sbb
dec
add
adc
es
lea
loop
clc
dec
mov
add
add
in
out
cmp
shll
adc
push
xchg
cmp
sbbb
nop
sti
add
pop
inc
push
nop
xchg
cltd
nop
roll
icebp
repnz
sub
jb
out
sbb
mov
dec
and
enter
nop
insl
xchg
inc
bound
mov
jmp
jnp
out
popa
mov
mov
cmp
mov
iret
push
loope
or
pop
inc
dec
add
movsl
xor
mov
jno
xor
cmp
or
addr16
and
ljmp
loopne
add
inc
xor
push
jge
addr16
ret
xor
mov
mov
mov
rol
mov
sbb
add
out
sub
jb
addl
popa
es
add
and
call
aam
loope
dec
inc
shrb
and
icebp
shlb
hlt
or
and
xchg
js
inc
mov
imul
cmp
roll
mov
imul
cmpsl
in
test
repz
mov
imul
lods
or
push
mov
mov
xchg
jns
shlb
and
xchg
or
or
js
test
sub
xchg
pop
pop
es
rolb
dec
roll
out
jo
or
dec
adc
sti
test
mov
bound
mov
in
int3
add
repz
pusha
dec
mov
je
xor
pop
test
sub
aam
jbe
mov
nop
insb
xchg
out
jo
inc
jbe
adc
mov
pop
push
add
insl
push
in
out
cmp
add
adc
enter
xchg
leave
push
and
enter
adc
add
adc
cltd
mov
add
cli
outsb
cmpsl
in
enter
or
out
and
mov
rcll
push
mov
test
dec
shlb
adc
pop
dec
repnz
aam
jbe
sub
out
cmp
add
xchg
jno
jl
pop
icebp
imul
sbb
out
repnz
pop
fwait
rclb
lock
cmp
mov
pop
cmc
adc
pop
dec
dec
add
or
jo
mov
mov
mov
xchg
xchg
dec
dec
sub
add
jmp
jge
jns
lock
rorb
mov
lds
subb
sub
inc
adcl
and
mov
mov
shrl
mov
loopne
add
pop
scas
stos
xor
add
stos
sbb
cmp
cmp
push
push
imul
jno
out
cmp
rolb
std
pop
rorl
sbb
pop
ljmp
popf
movsl
and
mov
cmc
frstor
mov
mov
jge
pushf
mov
popa
mov
add
cwtl
add
out
jbe
daa
aas
mov
and
and
test
lods
add
jmp
add
loopne
pop
push
cltd
jge
push
or
mov
adc
dec
rclb
inc
mov
mov
rol
xchg
jno
addb
ljmp
mov
xor
popf
int
cmpsb
jae
out
add
adc
dec
sbb
mov
nop
and
add
xchg
ljmp
mov
dec
cmp
daa
and
mov
cmp
cs
xorl
fsts
mov
sti
out
loope
pop
push
add
inc
fwait
add
dec
rorl
add
aas
dec
imul
inc
jne
xor
stos
shlb
jae
cmp
inc
and
jne
add
mov
jl
add
or
sbb
cmp
sbb
inc
insb
adc
shll
add
nop
jmp
cmp
es
mov
aam
or
jo
add
cmp
xorb
movsl
jle
testb
add
push
sub
xor
mov
adc
xor
js
cltd
mov
sbb
xor
hlt
pusha
outsb
push
nop
and
outsl
adc
cmp
push
mov
cld
jb
add
sub
pop
push
aas
mov
push
or
xchg
ret
orb
cmpsb
test
or
xchg
hlt
lahf
sbbb
aad
dec
add
in
cmc
sbb
jp
jg
notl
dec
ss
js
xchg
sbb
push
cmp
adc
mov
jno
and
push
int3
scas
in
add
and
in
mov
rclb
jne
mov
xchg
aam
out
int3
inc
pop
add
or
jae
or
add
and
loopne
mov
sbb
divl
std
and
xor
add
add
in
mov
enter
fistl
pushf
sbb
mov
pop
mov
cmp
sbb
jne
inc
test
and
je
or
mov
xchg
pop
dec
adc
add
inc
test
shlb
movsbl
sub
inc
mov
push
adc
sbb
loope
addb
add
xchg
movsl
pop
xor
xchg
mov
mov
das
xor
add
jle
push
xor
filds
dec
cmp
dec
cs
push
mov
iret
pusha
mov
daa
mov
add
idivb
dec
arpl
xor
pop
mov
daa
xchg
adc
stos
or
jl
adc
inc
lds
pushf
add
cmp
test
add
jno
ret
mov
cmp
pop
dec
je
or
das
or
mov
imul
rcrb
mov
mov
outsl
pop
jo
push
jne
inc
sbb
in
jo
add
outsb
out
jmp
mov
add
sbbl
add
popf
mov
jl
add
insl
in
lret
jbe
cmpsl
sub
adc
lock
xchg
xchg
cmp
cmp
das
push
int
xor
daa
sbb
mov
sbb
and
sub
nop
dec
add
rclb
mov
add
pushf
dec
xchg
xchg
es
icebp
adc
mov
in
and
sbb
out
inc
sbb
push
sbb
jecxz
adc
ret
adc
xor
lods
mov
stos
push
enter
pop
test
das
mov
std
add
sarb
jecxz
sub
xchg
jo
add
push
add
scas
or
inc
pushf
sub
mov
scas
out
lods
cs
add
push
mov
sbb
adc
cmpsl
dec
cmp
mov
jl
scas
push
add
shlb
or
cltd
mov
push
jno
sbb
inc
add
int3
push
arpl
and
xchg
lcall
sub
aaa
inc
cmc
cmp
mov
mov
add
std
mov
lahf
adc
mov
mov
inc
add
test
pusha
leave
jp
jo
lods
rcrb
dec
cmpl
popf
and
rorb
and
movsl
int
add
fsubrs
ds
add
cld
mov
or
mov
and
xchg
jo
shrb
add
loope
inc
and
add
incb
aam
mov
dec
out
adc
mov
xorb
xchg
pop
test
sahf
mov
dec
leave
add
sbb
lret
sbb
sub
add
mov
jb
std
pop
repnz
add
fcoms
stc
jno
add
mov
and
adc
fiaddl
addr16
int
mov
sub
inc
ljmp
or
push
movsb
loopne
mov
scas
add
shlb
mov
jns
and
xchg
mov
mov
mov
adc
enter
xor
dec
int3
and
nop
sbb
and
loope
add
pminub
movsl
add
push
pop
sbb
adc
pop
and
inc
int
jmp
subl
sub
mov
sbb
mov
rclb
mov
js
add
call
xchg
les
push
adc
or
aaa
mov
cmc
cmp
dec
orb
xchg
out
jmp
mov
stc
pop
adcb
mul
add
fnstenv
push
xor
adc
ret
push
cmp
push
sar
pop
push
hlt
mov
test
jno
adc
lret
sbb
inc
pushf
sbb
or
mov
cmp
mov
ljmp
cli
sub
jecxz
jle
aas
hlt
jae
push
pop
add
in
jbe
push
repz
mov
dec
or
rolb
ds
out
lret
rolb
xchg
jle
cmp
dec
ret
jmp
or
fwait
in
adc
enter
pusha
mov
rorl
nop
cmp
push
push
lock
add
bound
movb
add
fdivs
add
sbb
mov
add
jmp
add
test
cmp
xchg
std
and
xor
pop
dec
add
add
int
mov
andb
or
push
je
imul
pop
mov
mov
idiv
add
dec
inc
das
mov
mov
sbb
mov
lret
add
dec
jg
psubusw
loopne
push
sub
dec
jbe
rclb
xchg
push
xchg
loope
out
sbb
scas
xor
mov
mov
nop
add
lret
and
repz
hlt
dec
mov
cmp
add
lcall
xchg
xchg
push
roll
xor
sub
sbb
jl
cmpb
ljmp
sarb
les
in
rcr
jnp
mov
add
arpl
jbe
mov
cwtl
in
stos
or
gs
xor
testl
stc
lock
lcall
jno
xchg
xor
or
lret
mov
and
mov
fstl
sub
es
je
add
xchg
pop
imul
inc
int
ja
ja
add
std
pop
iret
fdivrl
stc
add
cli
jno
xor
push
cmp
add
cmpsl
pop
push
stos
lods
fwait
add
stos
fiaddl
pop
mov
aas
movsl
sub
add
movsb
fistps
add
pop
dec
push
mov
fiadds
nop
add
jp
mov
add
aaa
icebp
xchg
movsb
mov
inc
sahf
je
dec
andb
dec
add
test
testb
xchg
movsl
add
pusha
shrl
dec
in
shlb
jns
jge
add
test
in
add
pop
mov
enter
xchg
hlt
cmp
test
rclb
cld
mov
add
pop
shl
push
call
sbb
repz
dec
or
cmp
jmp
data16
inc
inc
insl
cmpb
pop
lea
add
lock
sbbl
fldl
mov
sbb
add
hlt
rcll
add
int
push
cmp
add
nop
sub
or
pop
pop
test
movsb
mov
fcoml
add
divb
scas
pop
enter
in
inc
popa
scas
out
repnz
add
gs
iret
jne
call
testb
push
or
pusha
jle
pop
dec
xchg
add
pop
pop
fiadds
jmp
loop
inc
push
xorl
mov
inc
jp
cmp
add
pop
xchg
adc
sub
xchg
add
xor
loop
cmp
xlat
das
es
cmc
add
test
in
popa
xor
add
xchg
dec
pusha
dec
roll
iret
sahf
repnz
imulb
add
and
imul
addb
xchg
pop
loopne
jp
xor
push
fwait
sub
pushf
mov
mov
fadds
loop
xchg
mov
lock
mov
or
mov
add
addl
pop
cmp
shlb
add
xor
loope
stos
lock
dec
dec
xlat
insl
pop
add
scas
jecxz
mov
mov
add
jge
pop
es
int3
sbb
fwait
shll
push
sub
in
and
inc
fdivrs
pop
push
cmp
mov
pop
mov
lock
add
cmp
lret
cltd
rcrl
add
out
push
jp
sbb
mov
pop
mov
pop
cmp
jbe
mov
mov
out
cmpsb
dec
push
mov
and
sbb
jne
pop
out
stc
push
inc
add
mov
inc
icebp
arpl
mov
push
and
add
loopne
or
je
test
dec
add
cmp
sbb
push
cld
bound
pop
jne
add
or
mov
stc
icebp
add
fstl
push
movsl
ret
add
cmc
cld
jnp
add
nop
mov
test
out
mov
lret
leave
outsl
filds
cmp
push
jbe
jnp
push
push
pushf
dec
sti
xor
jmp
and
cmpsb
dec
into
pusha
test
xchg
mov
add
push
aaa
push
xchg
mov
inc
add
mov
mov
insb
clc
and
add
movsb
jle
adc
mov
dec
outsb
add
fidivl
jno
or
push
or
add
xchg
add
popa
jnp
movsl
mov
fiaddl
adcl
stos
das
mov
pop
enter
loopne
cmpsl
or
lock
jmp
aas
pop
js
add
xchg
lret
fwait
push
cwtl
pushl
icebp
inc
mov
add
int
mov
ds
hlt
rorl
xor
data16
sbb
stc
out
ss
push
sbb
divl
cmp
or
xchg
loop
add
mov
sub
clc
add
nop
cltd
repz
push
sbb
dec
jne
mov
mov
add
cld
js
outsl
pusha
imul
iret
and
pop
out
adc
push
pop
and
add
adc
fiadds
sbb
nop
xchg
bound
loopne
pop
cwtl
jne
dec
or
add
fsubrs
popa
add
jo
ja
push
push
cmp
test
mov
daa
sub
aam
sqrtps
sbb
std
outsb
pushl
or
mov
fldl
add
sti
in
jp
addl
jle
aad
pop
pop
movl
push
popa
outsl
lods
aad
add
es
dec
add
insl
ds
cwtl
incl
in
sub
aaa
clc
dec
pop
mov
imul
inc
push
adc
sub
jmp
sbb
fmuls
loope
mov
mov
adc
or
push
aas
clc
les
insb
ret
cmp
jle
add
in
stos
cld
jo
jmp
cld
push
out
incl
ja
pop
jg
ret
mov
add
pop
test
sbb
push
pop
daa
xchg
add
inc
sub
out
or
rcl
xor
jmp
sbb
arpl
cmp
ds
add
or
mov
mov
dec
popf
inc
data16
cltd
add
push
flds
dec
lcall
adc
fwait
cmp
in
mov
fdivrl
add
pop
leave
ja
loop
dec
sub
mov
adc
sub
dec
push
repz
xchg
shll
pop
lcall
dec
iret
insl
pop
jne
imul
fiadds
lods
dec
ret
pushf
xchg
mov
enter
xchg
sar
xor
into
dec
ja
mov
dec
jp
mov
mov
push
out
xchg
cmp
fwait
mov
xchg
out
ret
add
nop
mov
roll
ss
pop
bound
lcall
pop
dec
stos
add
enter
push
subb
cmpsb
push
andb
and
dec
das
aas
sub
rcll
add
inc
aad
or
js
es
fmuls
push
nop
insb
les
add
push
inc
pushf
mov
rclb
sbb
fiadds
adc
loope
pop
add
aaa
push
jo
jae
add
lods
sahf
adc
dec
sub
cmp
int3
xchg
in
add
int3
mov
jmp
cwtl
hlt
add
dec
jg
cs
adc
loopne
inc
daa
push
lods
pusha
add
data16
in
mov
pop
popa
and
sti
lcall
cwtl
push
xchg
pop
rolb
ljmp
adc
mov
fistpll
stos
cmp
sub
pop
inc
sbb
cmp
and
add
ds
ljmp
sbb
adc
add
add
pop
pop
stos
cltd
inc
dec
movsb
push
scas
sub
int
and
inc
mov
test
addb
bound
test
push
sarl
cmpsb
pop
or
add
push
mov
jo
add
or
add
out
add
loope
jge
mov
insl
xchg
jnp
pop
loopne
add
push
inc
cli
repnz
andl
inc
xchg
out
mov
and
call
cltd
into
daa
sbb
add
push
enter
cli
add
scas
and
cmpsb
cmp
pushf
push
cmc
enter
out
cmp
mov
dec
xor
repnz
pusha
jne
push
mov
sbb
add
adc
jo
push
iret
sbb
sbb
call
jns
cld
adc
add
adc
push
dec
dec
sbb
pop
adc
pop
fiadds
aas
add
cmp
int
sbb
add
sbb
lock
cmp
lcall
loopne
out
xchg
sbb
shrd
mov
push
movsb
out
fcoms
adc
dec
insb
stc
dec
xor
or
mov
jl
xorb
mov
mov
jo
pop
jo
add
inc
dec
adc
stc
add
and
mov
adc
push
adc
xchg
mov
je
xchg
sti
add
fs
push
lock
or
jg
adc
push
cwtl
ljmp
add
cmp
pop
add
pop
xchg
mov
ss
add
jo
jg
xchg
fiaddl
stos
divb
mov
iret
pop
and
xor
leave
clc
cmp
mov
pop
sbb
test
push
add
cli
mov
mov
fwait
cmovo
pusha
lret
ret
ja
xor
outsl
xchg
mov
xchg
pop
jo
sub
or
inc
hlt
fsubl
add
lcall
scas
add
psrlw
and
push
sbb
pop
pusha
inc
popf
inc
mov
dec
in
je
add
push
jb
jp
add
add
bound
in
jns
cmp
lret
xchg
call
mov
cltd
cmp
cld
mov
or
out
and
popf
fwait
sbb
jl
xorb
xchg
ds
addr16
hlt
xor
int3
nop
sarb
addps
movsl
mov
nop
hlt
jnp
into
sub
out
add
test
in
add
dec
sbb
lahf
pop
add
das
inc
dec
xchg
lret
mov
add
es
cmp
cmpsb
mov
repz
std
push
iret
stc
lods
add
add
add
call
add
mov
add
lret
lods
movb
adc
test
jle
add
adc
add
adc
imul
jo
add
sub
rorl
je
or
or
cmp
xchg
xor
pop
push
push
ds
imul
test
andb
xchg
cmp
loop
scas
jmp
fs
xchg
and
mov
call
dec
mov
stc
insl
cltd
add
fldenv
repz
dec
aam
mov
add
cmc
lret
jmp
fiadds
add
test
in
inc
add
xor
pusha
je
test
das
xor
push
lret
iret
repnz
mov
hlt
jp
fsts
and
sahf
pop
inc
in
cmp
and
gs
out
movl
sub
ror
test
push
aas
lcall
incb
or
add
sbb
adc
push
or
mov
mov
push
mov
movsb
adc
push
cld
lfs
mov
adc
add
inc
loopne
hlt
mov
stos
lods
data16
js
je
add
jns
jle
outsl
or
xor
add
js
call
add
sbb
sub
push
in
stos
jge
jno
add
adc
pop
jle
ja
daa
dec
or
inc
gs
add
js
add
cmp
pop
testb
or
mov
cld
add
in
ret
sub
enter
scas
adc
cmp
movl
ret
or
push
scas
ret
enter
or
and
loopne
outsl
in
add
mov
push
test
fwait
push
pop
add
xor
cwtl
fildl
imul
rclb
mov
add
sarl
stos
pop
adc
jnp
pusha
xor
adc
add
cmovs
inc
push
rcll
lret
inc
jae
and
mov
sub
call
dec
in
add
xadd
lret
lea
je
sub
add
aad
aam
lods
in
add
repnz
cmp
lds
xor
jecxz
lock
cltd
push
mov
int
jno
neg
test
paddw
rcrb
push
xor
insb
rolb
jg
inc
jbe
jno
add
lahf
enter
fbld
loop
jmp
xchg
xorb
dec
fwait
pusha
add
out
cmc
cltd
int3
xor
lods
lahf
and
hlt
dec
add
out
lods
sbb
nop
mov
in
add
leave
aas
scas
pusha
sahf
pop
pop
aad
lret
add
mov
les
add
mov
add
xor
loope
xor
jbe
sbb
push
add
cld
mov
xchg
js
loope
dec
lret
sbb
outsl
lock
push
jp
jno
mov
cld
inc
data16
in
or
push
sub
clc
add
test
add
fs
fisubrl
and
inc
mov
add
sub
or
iret
add
rorb
or
mov
repnz
add
fwait
push
add
sbb
lock
xor
out
fistpll
nop
orb
dec
adc
rclb
fwait
mov
jle
mov
in
lcall
shr
out
sbb
sub
add
movsb
push
bound
pop
push
or
gs
add
jno
fisubs
push
ret
push
cmp
add
fidivrl
sbb
mov
insl
lods
jl
inc
mov
cmp
adc
and
loopne
orl
mov
cwtl
push
ret
in
inc
jne
stos
adc
es
add
out
push
add
aam
out
adc
fistps
mov
pop
adc
xlat
and
inc
shl
cli
push
push
and
mov
push
enter
ljmp
repz
int3
cmc
pop
and
dec
jns
mov
nop
test
js
pop
rolb
pushf
arpl
addr16
hlt
push
out
push
inc
adc
int
fisttpll
and
dec
mov
push
add
repz
lahf
push
fcmovu
and
out
add
pop
xor
nop
sub
xchg
mov
stos
clc
loope
icebp
pop
xor
rcrb
sbb
jg
test
inc
mov
mov
mov
add
xor
shl
jns
fwait
shr
mov
add
jne
stos
mov
in
lcall
push
mov
jno
inc
mov
hlt
test
pop
sbb
jle
cld
jp
shl
sub
into
push
jmp
dec
add
pusha
cmpsb
pop
jb
add
arpl
push
cmpsl
daa
add
popf
fimuls
shr
push
fwait
mov
idivl
jnp
into
pushf
lods
mov
mov
mov
shl
inc
add
in
mov
dec
jge
add
ficoms
data16
push
inc
repnz
sbb
test
or
in
rclb
out
divb
jp
xor
push
daa
pop
mov
adc
add
or
ja
pop
jb
dec
push
inc
sarl
outsl
dec
mov
lret
call
cwtl
incl
add
xlat
shll
push
popa
push
xchg
pop
loopne
mov
call
jae
jnp
and
lock
adc
jns
in
pop
addr16
mov
add
out
or
leave
add
cli
ljmp
sub
call
test
rcrb
fwait
and
pop
mov
aaa
in
jmp
sub
and
and
sub
aad
loopne
mov
xor
add
sbb
jbe
push
into
adc
movsl
add
mov
pusha
cmp
dec
lock
sbb
xchg
xchg
ret
popf
add
jp
push
cmp
fadds
aad
mov
cmc
add
push
jo
loopne
mov
lret
leave
adc
in
cmp
add
mov
add
sbb
repz
push
call
data16
mov
pop
stc
inc
movsb
ja
aaa
loope
cmp
std
aad
and
add
xlat
jl
dec
cmp
je
adc
push
pop
cwtl
lret
cmc
fsubl
add
pop
lret
add
shlb
mov
lahf
loop
pop
pop
sahf
or
sbb
rcrl
jmp
mov
jp
mov
rcrl
add
inc
sarb
imul
xchg
xor
jge
sar
aaa
subl
xchg
push
addr16
adc
dec
lods
jl
adc
std
xor
fstl
add
stc
cmp
imul
xor
test
fldcw
dec
add
dec
push
add
inc
xor
adc
xchg
add
sbb
nop
jle
jge
imul
pop
out
adc
or
jb
sub
add
fiadds
rolb
ss
push
push
pop
lock
mov
js
out
pop
pop
xchg
push
test
pop
jnp
jl
or
and
adc
add
insb
xor
lahf
and
fadd
es
cwtl
pusha
xchg
push
mov
into
lock
outsb
sarb
cltd
or
sbb
xlat
inc
or
and
lods
pop
sbb
mov
into
stos
mov
adc
fs
pop
pop
and
push
fsubl
int
movsb
add
inc
cs
jle
add
xor
add
rorl
subl
mov
push
setno
inc
pop
jae
shlb
sbb
mov
sub
add
repz
icebp
and
push
add
inc
fbld
or
call
iret
add
lea
in
pop
ja
xchg
enter
mov
push
cwtl
jbe
out
arpl
add
repz
jp
clc
cwtl
lcall
out
xadd
push
ret
mov
adc
add
popf
pop
mov
and
sbb
cmp
push
sbb
inc
pop
xor
data16
xor
mov
cmp
sahf
test
add
xor
js
push
add
sbb
adc
add
xchg
notl
ror
and
rclb
pop
sbb
add
in
cmp
mov
push
add
inc
mov
add
mov
sbb
add
inc
xchg
popl
adc
mov
das
add
loopne
std
pop
fwait
jle
push
jl
add
push
test
mov
pushf
inc
dec
xchg
add
mov
in
mov
jnp
adc
push
loop
jmp
aad
fisubs
dec
mov
ja
mov
jg
sub
sbb
pop
mov
pop
dec
sub
dec
add
sub
add
inc
je
push
lret
add
aad
out
lret
sbb
pop
pop
cs
and
sar
dec
in
out
adc
aam
jl
add
movsb
dec
jbe
popf
pusha
jnp
cmpb
adc
outsl
jne
mov
inc
or
sbb
and
adc
cld
mov
cmp
test
loopne
and
lods
push
shll
push
sub
add
jnp
adc
movl
push
imul
xor
sub
hlt
and
in
pop
mov
push
add
stos
xchg
mov
jl
gs
xor
mov
xor
add
and
mull
addr16
repnz
rclb
cmp
sqrtps
in
sbbb
shrb
or
jle
jae
mov
cmc
add
mov
add
adc
insb
xor
add
lcall
add
std
dec
pop
ret
pusha
fs
pusha
add
pop
test
push
xchg
add
lret
lcall
xor
xor
xor
mov
push
rorl
add
scas
movsb
mov
test
outsb
mov
push
add
cmp
push
ds
cwtl
orb
or
rolb
mov
xor
dec
mov
cmp
fistl
popa
sub
and
or
mov
push
loopne
sbb
dec
or
lea
mov
xor
loope
xchg
cmp
int3
pop
push
dec
daa
xor
je
pop
push
aam
bound
sub
add
lea
out
je
imul
jne
jecxz
xchg
inc
aam
dec
clc
pop
mov
xor
or
outsb
nop
cwtl
add
jb
cltd
mov
mov
sub
shrb
test
stos
lahf
add
xchg
and
jge
adc
imul
fcomi
ja
and
cld
add
adc
out
or
push
stc
in
adc
mov
push
add
cmp
in
and
push
sub
in
mov
sahf
test
cltd
and
cmp
cmpl
nop
pop
push
mov
rolb
mov
cmp
ss
xor
rol
rolb
add
outsb
and
ljmp
adc
add
testb
push
rolb
les
shl
add
add
pop
pop
and
add
pop
inc
das
daa
inc
sub
push
inc
cmp
jb
add
push
sbb
xchg
movsb
out
sub
jecxz
sbb
push
fmuls
aad
arpl
lods
mov
jae
imul
movsb
or
mov
mov
into
aas
pusha
cli
mov
push
add
or
adcb
push
or
cld
mov
sbb
pop
data16
cmp
xor
lret
push
sbb
xor
data16
imul
ret
fmul
push
jns
stos
sahf
dec
mov
inc
add
into
add
jae
aas
outsl
sbbl
in
or
enter
jb
mov
subb
nop
push
repnz
jbe
add
mov
icebp
jge
jp
add
pop
mov
arpl
ja
push
jne
xchg
aad
xor
add
pop
aaa
gs
arpl
mov
mov
or
dec
lcall
imul
jae
fiadds
shr
cltd
ficoml
inc
shll
movsb
enter
sub
inc
or
sub
cmc
sahf
adc
inc
dec
add
adc
push
mov
or
mov
add
shrl
add
mov
hlt
inc
add
popa
jecxz
push
cmp
in
sbb
mov
cli
inc
scas
in
aam
add
in
cs
mov
and
jg
orb
lods
add
mov
sbb
leave
shr
std
mov
mov
mov
test
xchg
add
mov
movsl
pop
jge
fs
or
mov
pop
mov
inc
xchg
mov
test
xor
iret
fxch
sti
xor
mov
ret
push
xchg
pop
pop
shlb
mov
loopne
sub
mov
xchg
call
pop
arpl
bound
mov
push
mov
fcomps
roll
dec
std
ljmp
aaa
aad
cmpsl
add
lods
xor
dec
mov
call
and
sub
outsb
mov
mov
push
xlat
mov
mov
adc
or
mov
xor
sbb
lock
std
testl
and
pop
push
ficoms
push
and
add
jp
test
inc
shll
add
add
out
clc
mov
fmuls
jae
scas
sbb
mov
cld
sysexit
and
adc
mov
cmp
scas
pop
int3
mov
mov
decb
in
jo
mov
sahf
cmpl
call
jg
fsts
push
cli
idivl
add
fdivrs
pop
and
sahf
imul
hlt
add
fwait
sub
xchg
push
pusha
push
and
sub
inc
cmp
repnz
ljmp
xchg
jno
inc
adc
sti
pop
or
out
js
pop
add
imul
movsl
nop
js
insl
xchg
idiv
cmp
cwtl
les
out
inc
cmp
daa
das
jge
mov
test
mov
mov
add
and
inc
mov
mov
aas
fnstcw
subb
sub
mov
and
loop
int
jo
data16
and
add
dec
cwtl
push
ds
in
adc
test
test
insb
xchg
add
roll
mov
add
insl
notl
xor
mov
push
mov
cmp
fnstenv
in
or
das
ds
add
sub
mov
outsl
cmp
mov
sub
jnp
movlps
data16
cmp
mov
loope
inc
dec
call
add
mov
mov
pushf
adc
pushf
test
pop
or
and
adc
push
arpl
pusha
push
aas
dec
add
cmp
loop
ljmp
aad
push
push
sbb
fcomp
add
adc
mov
or
loope
adcb
popf
lsl
mov
adc
dec
xchg
dec
fidivrs
pop
ljmp
stc
in
pop
sbb
push
cmpsb
hlt
addr16
push
sbb
add
call
pop
daa
jle
faddl
jg
sbb
in
add
adc
dec
add
ja
adc
cmp
xchg
xchg
pop
popa
sbb
into
inc
push
dec
mov
adc
pop
add
cwtl
mov
adc
or
sub
aaa
mov
pop
nop
testb
in
lock
lods
aaa
test
jns
cmp
or
add
addl
sbb
pop
xor
adc
dec
std
lds
nop
jne
fwait
loopne
mov
add
push
nop
popf
or
jbe
sub
add
mov
addr16
out
icebp
add
inc
js
jnp
push
dec
add
xor
fdivs
mov
test
adc
inc
or
dec
jae
add
and
adc
fisttps
adcb
js
push
xchg
add
lds
jge
popf
js
xchg
cmc
or
sbb
addr16
add
in
mov
ret
or
add
xchg
fwait
testb
dec
inc
sub
pusha
add
mov
dec
dec
jno
add
inc
sahf
pushf
ss
rcl
mov
jp
cmp
push
pop
mov
hlt
sti
mov
sbb
lcall
lock
lahf
cwtl
lods
pushf
add
mov
add
pop
cmpsl
dec
mov
dec
or
sbb
nop
add
mov
loopne
icebp
add
lret
push
cmp
fisubl
add
cli
xor
add
xchg
cld
stos
add
shll
aam
mov
push
push
sbb
mov
pop
add
pushf
leave
sahf
pop
pop
lea
lret
adc
pop
add
loopne
movsb
test
push
aad
ss
cmp
push
repnz
lods
iret
cltd
xchg
add
clc
je
jns
andl
mov
xchg
add
in
jno
aam
jmp
cmpl
sub
push
add
cmp
hlt
cmpsb
addb
repz
mov
add
or
and
mov
repz
out
fcomps
sbb
xchg
idivb
adc
mov
add
popf
push
jo
dec
lcall
pop
adc
rorl
push
cs
add
fcomi
add
int
mov
mov
imul
adc
add
leave
xchg
clc
test
add
pushf
or
aad
add
jmp
aam
add
sub
and
rolb
lret
xchg
jge
bound
sub
aam
pop
imul
lods
jmp
vmwrite
insb
fsts
mov
nop
add
inc
ds
xor
stos
add
clc
mov
pop
imul
stc
cmp
inc
test
xor
out
clc
aad
fldt
cmp
or
sbb
fbstp
fisubl
mov
stc
add
and
orb
mov
xor
adc
add
and
sbb
and
jne
or
rclb
cmp
or
push
and
outsb
inc
cltd
das
pop
xchg
add
pushf
cmpb
pop
inc
mov
pop
xlat
mov
cmp
movb
jae
sahf
lods
sub
aas
add
out
jg
cs
lcall
adc
sub
js
jnp
xor
add
and
jmp
insl
lcall
xchg
xor
loopne
sub
xor
cmp
clc
xorb
cwtl
dec
ffree
jmp
inc
loopne
rcl
mov
lock
inc
into
push
mov
adc
cwtl
jnp
jns
das
sub
fsubrl
xor
fnstcw
add
imul
ret
add
mov
jge
jno
clc
adc
ds
out
mov
mov
add
cmpb
call
and
mov
inc
inc
aam
adc
iret
repz
add
inc
pop
test
mov
divl
shll
xor
lret
mov
lods
add
cmp
aas
mov
es
xor
in
add
jo
loop
ljmp
ja
or
adc
pushf
rcrl
dec
mov
add
inc
loop
outsb
je
pop
mov
xchg
push
add
mov
leave
fmull
add
cmc
push
in
insb
inc
mov
pusha
or
in
rorb
sub
and
cmp
popa
popf
push
push
inc
out
ljmp
dec
in
pop
cli
jnp
pop
push
sub
push
pop
addl
ret
cmpsl
int
test
add
mov
out
incb
gs
shll
mov
out
sub
adc
cmp
js
jns
cld
shl
xor
adc
jg
cmp
add
cld
lock
in
aas
stos
imul
jp
fcoms
into
pop
out
lock
pop
fsts
addl
jl
nop
add
sub
push
xchg
or
dec
adc
xchg
add
push
fs
add
cmpsl
fildl
push
enter
arpl
jge
data16
inc
jg
add
cs
aam
adc
cld
xor
pop
test
cmp
sub
ja
in
hlt
ret
bound
add
push
mov
add
add
lock
xor
jnp
cld
sub
adc
fs
jns
sub
sub
dec
hlt
js
dec
cwtl
ret
jle
loopne
test
sbb
mov
fbld
outsl
fcompl
jbe
int
dec
repnz
daa
or
cmp
inc
pushl
add
sbb
xchg
cmc
in
add
movsb
scas
bound
les
push
out
dec
in
add
leave
adc
push
fisttpl
cmp
in
popf
jnp
or
in
cmp
mov
pop
cwtl
mov
nop
xor
addr16
xchg
pop
pop
stos
jno
push
lock
ja
es
fdivrs
dec
jge
lcall
mov
fiadds
sub
mov
es
mov
adc
jno
lock
and
cmpb
jnp
push
mov
aaa
in
in
pop
int3
jecxz
xchg
mov
add
jl
pop
jb
dec
inc
jo
testb
js
add
push
adc
loopne
je
push
add
add
rolb
jge
sub
gs
loop
add
push
dec
add
add
outsl
arpl
sub
stos
mov
mov
jne
mov
leave
or
jge
add
cld
dec
je
cld
outsl
xchg
adc
lahf
clc
add
and
sub
xor
push
add
aam
inc
adc
iret
lret
arpl
mov
mov
pop
cmp
in
mov
lret
in
mov
jl
divb
loopne
inc
jmp
push
xor
clc
insb
add
mov
mov
hlt
mov
negb
or
mov
xchg
out
add
jp
pop
sub
les
jo
xor
dec
scas
fadds
xor
add
or
je
cmp
pop
in
repz
jae
test
and
jb
add
and
xchg
shll
pop
out
push
push
test
pushf
nop
pop
mov
add
clc
mov
jmp
sub
sbb
mov
pop
call
iret
add
cs
stc
dec
insl
cwtl
sub
adc
scas
add
inc
jecxz
fsubs
xchg
mov
adc
negb
int3
add
leave
jmp
and
jp
xor
inc
adc
sahf
push
sub
je
mov
cmp
iret
add
add
mov
fwait
mov
inc
adc
sub
pop
push
stc
fldenv
add
dec
movsl
jns
xor
je
mov
add
es
data16
into
pop
fldl
push
sbb
mov
inc
dec
xchg
nop
mov
sbb
or
lock
in
das
push
cs
filds
ret
clc
mov
pop
fsubs
jno
sub
aam
pop
inc
nop
pushf
xchg
add
loop
insb
mov
and
dec
ss
adc
cs
adc
ds
insb
mov
xlat
fstl
cmp
dec
dec
ret
cmpsb
icebp
and
pusha
mov
movl
filds
shr
cld
cmpl
pusha
nop
lods
mov
and
hlt
jo
mov
dec
insl
pop
sub
loopne
mov
jae
xor
psubsw
cs
sarl
add
add
mov
hlt
xor
add
fldl
fcomip
add
out
aad
stc
adc
dec
sub
out
cs
lret
xor
or
addl
stos
call
lret
mov
or
dec
sbb
sti
add
sub
add
dec
mov
ret
icebp
ltr
pushf
int3
push
and
lock
pusha
mov
mov
cmp
aam
insb
jo
add
xlat
out
or
xor
popa
adc
sbb
dec
addr16
xchg
sbb
add
inc
add
and
pop
jae
iret
mov
xchg
adc
nop
mov
clc
or
jnp
bound
mov
movsl
scas
add
rcrl
fistl
and
aas
push
sub
rol
add
enter
js
add
push
sahf
add
cltd
addb
movlps
repz
xor
out
cmp
add
sti
xlat
repnz
push
cmp
add
mov
mov
mov
and
push
adc
push
add
mov
inc
movd
sbb
add
sbb
rolb
sub
sarl
push
inc
mov
sub
leave
sub
xchg
scas
jp
cld
dec
pop
sbb
and
sub
shrb
add
movl
jg
popf
les
loop
sbb
rol
inc
test
idiv
xchg
jecxz
lea
test
jp
add
push
xor
dec
mov
ljmp
cmp
leave
orb
fiaddl
fucom
mov
or
fmul
cmpsb
dec
lea
gs
dec
data16
jo
push
or
add
inc
mov
jbe
add
into
or
push
sbb
push
add
cmp
pop
inc
test
add
dec
lock
mov
pop
sub
arpl
sbb
rcrl
xor
mov
int3
adc
and
xchg
lock
pinsrw
or
push
jns
or
add
adc
pop
mov
ret
jmp
sbb
dec
add
loope
mov
jecxz
loopne
jnp
pusha
or
jp
ret
adc
cmp
xchg
das
mov
rolb
add
lds
clc
sbb
aam
xor
popa
mov
andb
incb
dec
scas
out
push
add
mov
sarl
stos
das
and
adc
xor
cmpb
std
sbb
popf
jne
and
and
mov
add
add
pop
jle
icebp
dec
cmp
mov
sbb
aad
and
int3
sbb
nop
xor
inc
add
mov
pusha
mov
or
jl
ja
or
jle
pop
xchg
cmpsb
xor
movsb
daa
adc
or
lea
aad
test
xchg
lea
pop
imul
dec
pop
or
mov
and
popl
clc
cmp
nop
adc
pop
cmpsb
dec
sbb
jle
jne
psubsb
mov
mov
cltd
add
loopne
mov
test
push
sbb
add
push
add
adc
incb
movsb
add
push
push
add
add
sbb
in
jg
dec
insl
add
js
test
add
push
iret
cld
jns
mov
push
outsb
jb
pop
push
jb
out
ret
dec
aas
clc
add
push
xor
faddl
add
xchg
je
xor
rorl
repnz
icebp
lret
test
inc
or
xor
aas
lea
jnp
ljmp
or
addl
movl
sub
lret
adc
push
ljmp
insb
aad
add
pushf
pop
inc
jg
sbb
jbe
push
add
pop
sbb
lret
sar
mov
dec
daa
dec
enter
int3
jl
adc
lock
xor
xchg
xor
push
shll
sbb
jl
add
adc
icebp
add
cmpsl
call
ss
dec
lret
xor
lahf
cs
shl
mov
jge
outsl
mov
inc
mov
add
dec
xchg
lds
mov
scas
push
lea
fistpl
lahf
jno
insb
mov
js
mov
in
and
lahf
add
dec
pop
cmp
push
jae
rorb
adc
iret
push
add
push
outsl
aas
popf
add
jp
add
lock
xchg
pop
add
and
and
insb
test
hlt
xchg
add
shlb
dec
adc
mov
and
sub
sbb
test
and
xchg
roll
fstps
add
ffree
dec
mov
in
int
sti
test
insl
add
les
rolb
pop
fs
mov
push
jb
sbbl
rolb
dec
push
scas
add
fnstsw
or
test
or
pop
or
popa
insl
adc
ljmp
cwtl
push
jg
fildl
clc
pop
add
jbe
sub
xor
in
push
int3
movsb
cwtl
add
fsubrs
mov
add
adc
jns
xchg
push
mov
mov
adcb
lods
adc
pop
test
popa
movl
insl
addr16
mov
jbe
add
sbb
pushf
loope
adc
and
mov
ret
jle
lock
roll
loopne
repnz
je
xorb
out
jmp
add
repz
enter
push
sti
add
add
jo
rolb
dec
add
add
push
imul
cmp
xchg
add
inc
repnz
orb
int3
jnp
push
push
lret
syscall
cmp
pop
inc
push
jno
hlt
gs
cmp
xchg
adc
cltd
xor
popf
push
jbe
test
sub
push
add
iret
out
insb
fisttps
push
mov
mov
jo
add
xor
add
ja
mov
ljmp
jne
repz
popl
xchg
or
das
imul
ror
stc
orb
rolb
sub
lahf
into
mov
pop
mov
mov
add
adc
rorl
mov
int3
and
ret
hlt
add
push
sub
add
out
xchg
mulb
dec
jle
repz
jns
add
movsb
call
add
jge
clc
das
or
std
add
mov
stos
aas
inc
or
push
subb
dec
or
call
adc
add
and
jmp
mov
hlt
cmp
mov
xchg
add
fs
add
sub
add
sub
repz
and
mov
pop
add
cmp
jb
icebp
xor
iret
ljmp
sbb
popa
inc
outsl
repnz
push
pop
add
pop
fs
push
in
jno
adc
pop
orb
mov
cmp
mov
and
dec
xor
jecxz
test
jl
adc
push
pop
fnsave
jno
dec
repnz
push
ljmp
into
add
mov
incb
hlt
cmp
pop
cwtl
movsb
popa
jecxz
test
adc
xchg
lret
add
js
cmp
popf
je
push
sbb
in
xchg
push
outsb
test
push
pusha
sti
in
jg
inc
mull
sub
out
push
mov
cld
in
enter
mov
int3
cmpsl
xchg
mov
mov
inc
int3
mov
gs
inc
inc
cmp
sahf
loop
add
nop
and
add
mov
pop
call
adc
rclb
and
jo
clc
push
sub
pop
rcrb
mov
cmp
out
clc
adc
mov
cmp
add
sub
fstps
insl
daa
fcomi
add
push
push
cmc
cmp
ret
cmp
shrb
jecxz
rclb
cmp
push
imull
rol
pop
inc
scas
mov
aad
jnp
inc
movsb
mov
push
push
mov
jg
cmp
daa
lods
add
mov
jbe
or
mov
mov
cmp
mov
adc
shlb
jne
ret
mov
mov
aad
xchg
loop
mov
xchg
je
dec
test
add
imul
adc
jmp
pop
movsb
mov
rcll
call
rolb
xchg
xor
ljmp
lcall
shll
jb
stos
cmpsl
iret
add
popa
inc
jmp
repnz
mov
push
shlb
jo
pop
pop
les
cmp
push
mov
sbb
or
sub
and
sub
inc
hlt
repz
pop
inc
lds
mov
out
lock
add
mov
push
add
pop
cmp
hlt
cmp
add
push
xor
sub
sbb
in
cmp
mov
fistpll
adc
add
fiaddl
lds
sub
inc
add
sahf
sbb
jns
pop
ficomps
mov
dec
jnp
lcall
lret
addb
jmp
pushf
or
aas
fcomps
movsl
jnp
push
addb
sbb
loopne
cmp
add
scas
ja
ds
add
dec
inc
and
and
or
and
push
pop
jno
xchg
mov
fisttpl
adc
cwtl
dec
add
mov
jecxz
cmp
std
mov
and
shlb
pop
sbb
mov
jge
push
cmovs
pop
adc
inc
pop
subb
pusha
push
sub
lahf
cwtl
jne
add
test
pop
pop
sar
jo
xchg
inc
xchg
cltd
dec
and
or
push
lahf
lea
sbb
ret
sbb
pushf
fiaddl
add
sub
add
xchg
xchg
cld
std
inc
add
ljmp
stos
xor
cmpsb
sub
mov
call
out
mov
lret
add
je
mov
sub
cmp
adc
clc
in
addl
mov
loopne
bound
add
jb
pop
cmp
sbbl
rorl
movsl
sbb
xchg
dec
nop
xchg
push
or
mov
push
cmp
xchg
push
int3
pop
cli
jb
push
sbb
push
sti
popf
mov
cmpb
in
adc
mov
cmpsb
in
jo
add
xor
and
cmp
enter
jp
aad
pop
pop
adc
push
fildl
cwtl
popf
clc
dec
test
xor
ret
jmp
add
xchg
or
nop
adc
jae
or
data16
add
or
mov
test
dec
ret
dec
les
insb
rclb
adc
adc
dec
fiadds
xor
jg
js
addb
mov
add
stos
orl
sbb
aam
popf
xchg
imul
popa
add
dec
aas
out
push
shl
lea
rcrb
xchg
mov
ljmp
scas
aaa
pop
cmp
fmul
add
inc
icebp
ficoml
add
push
cltd
and
pop
mov
mov
jne
jne
adc
repz
mov
aaa
jmp
mov
lods
mov
add
mov
mov
dec
lods
incb
in
out
es
pop
add
push
iret
test
popa
add
fs
mov
scas
enter
jg
and
nop
fistps
leave
aas
cmp
cwtl
pop
ja
xor
adc
jmp
pop
mov
pop
dec
add
nop
lods
pop
or
neg
icebp
dec
cli
loope
sbbl
mov
cmc
lds
cmp
push
sub
and
xchg
mov
mov
fadds
mov
popa
fstpl
xchg
push
add
push
lock
js
enter
adc
xchg
pushf
adc
call
das
test
add
xchg
stc
xor
inc
pop
adc
cwtl
add
dec
stos
xchg
pop
adc
mov
mov
xorb
inc
movsl
push
cmp
pusha
insb
addb
pop
out
popf
scas
jle
mov
adc
shrb
lret
mov
add
xchg
pop
in
les
rolb
data16
stos
sti
dec
loopne
xchg
cmp
nop
cmpsl
popa
sub
push
lret
mov
stc
inc
dec
ljmp
fnsave
cmp
push
adcl
clc
mov
xchg
push
adc
dec
push
pushf
add
add
mov
loopne
xor
mov
les
cmp
xorl
insb
mov
cwtl
leave
jle
lds
push
fwait
or
mov
sbb
in
add
lret
pushl
and
nop
daa
mov
mov
xchg
adc
mov
int
jp
dec
cmpsl
ficoms
mov
xor
shll
or
adc
dec
loope
xchg
push
lods
mov
add
push
mov
add
dec
inc
push
inc
cmp
aad
xchg
repnz
sub
mov
dec
add
cltd
loope
mov
cmp
adc
das
push
sub
jb
pop
inc
insl
add
out
imul
or
push
push
sub
cmp
icebp
ret
popf
xchg
jne
nopl
mov
add
mov
and
sbb
jb
add
push
mov
mov
or
mov
dec
cmp
mov
or
mov
add
jbe
cwtl
fmulp
out
ds
mov
cmp
int3
adc
pop
xchg
push
push
in
cmp
add
xor
lods
out
lods
mov
sub
and
pop
test
xchg
loop
sub
inc
or
lds
mov
stos
cmp
xchg
jne
jae
xchg
add
aad
repz
cmpb
loope
jecxz
fdivrl
jg
mov
imul
insb
lcall
mov
sbb
shlb
adc
add
dec
or
jmp
movsb
adc
and
cld
data16
inc
icebp
jecxz
xchg
aam
mov
mov
sub
mov
movsl
pop
scas
cmp
incb
pop
mov
xchg
es
pop
adc
ss
add
jmp
clc
fadd
push
xchg
push
ja
add
lds
pushf
repnz
ds
pop
sbb
ficoms
sub
xor
or
cmp
jmp
movl
rolb
jnp
push
dec
arpl
and
cld
testb
mov
pusha
add
xchg
shl
sahf
test
pop
repnz
sbbb
dec
add
rclb
jl
nop
adc
fwait
lea
popa
sub
add
dec
mov
adc
pusha
pop
sub
xchg
push
add
cmpl
roll
loopne
pop
add
lret
sub
jl
add
ror
bound
in
testl
jb
lock
fwait
push
add
das
xor
sbb
hlt
scas
jbe
pop
iret
mov
add
jl
mov
lea
aad
loopne
mov
fwait
add
sbb
mov
fs
mov
test
lret
add
rcll
xchg
icebp
jmp
xchg
mov
incb
enter
dec
cltd
nop
imul
sub
push
jo
or
stos
aas
insb
sbb
xchg
ds
lcall
pop
sub
pop
out
sbb
cli
sbb
dec
stc
je
adc
into
mov
jecxz
rorb
xor
aad
dec
leave
outsl
add
or
mov
sub
inc
inc
add
hlt
imul
and
mov
cmpsl
test
or
inc
repnz
dec
pop
aas
insb
clc
and
push
mov
cmp
inc
negb
nop
rol
jb
push
fs
into
add
clc
cli
fnsave
add
out
std
push
adc
add
in
fnstcw
sbb
or
and
dec
add
repz
cli
bnd
xlat
cwtl
mov
mov
jb
adc
out
mov
add
icebp
jae
xchg
adc
pop
sbb
mov
pop
adc
les
cli
cmp
mov
call
cmpsb
dec
popa
and
xor
leave
sti
lock
roll
add
inc
shll
test
sahf
mov
or
loope
cld
adc
mov
mov
cmp
or
dec
xchg
loop
shlb
add
sub
test
inc
mov
cs
dec
push
inc
and
sbb
js
fdivp
add
adc
ja
add
loopne
mov
shrb
push
add
loope
cmp
add
iret
lret
add
xchg
stos
fidivl
add
adc
mov
adc
or
jg
jl
sbb
sub
movb
mov
xor
add
lds
xchg
nop
pop
and
loope
lock
out
sbb
fucomp
test
inc
ljmp
pop
daa
mov
es
and
or
aam
repnz
lcall
shrb
pop
jae
cmp
or
or
fs
orb
out
add
pop
mov
aas
push
inc
popf
rclb
push
mov
push
push
sbb
stos
test
andb
add
sbb
scas
divl
push
lods
mov
repz
bound
mov
mov
dec
add
mov
pop
mov
jae
sub
pop
mov
shl
jo
les
ret
rcrb
movsb
xchg
add
hlt
lcall
aaa
xor
fisttps
lret
ret
icebp
and
or
pusha
jae
jmp
mov
and
test
pusha
lahf
or
enter
inc
sub
add
xchg
push
xchg
ss
jle
imul
adc
rolb
sub
gs
rorl
or
outsb
inc
insb
leave
inc
add
jns
sbb
pop
fs
in
rorl
int
in
das
stc
or
xor
xchg
mov
bound
decl
inc
jg
mov
mov
or
add
cld
adc
pusha
es
adc
xchg
sarl
xchg
out
and
vmovapd
dec
push
add
xchg
sbb
dec
lcall
dec
clc
or
es
test
pop
fcompl
mov
stos
clc
jmp
dec
into
int3
sbb
jo
enter
cmp
jnp
mov
imul
insl
ret
cwtl
cmp
cwtl
clc
and
mov
mov
lahf
daa
xchg
xchg
andb
loop
xchg
or
scas
mov
nop
in
mov
das
daa
mov
add
addr16
jecxz
add
cmp
orl
inc
jg
push
adc
rcl
sti
icebp
sbb
and
add
add
adc
cmp
or
pusha
je
mov
clc
out
frstor
lret
in
fs
ret
lods
jecxz
iret
mov
and
insb
and
lock
add
push
add
into
addr16
xchg
lds
push
pop
mov
push
dec
inc
add
js
mov
add
and
sbb
or
inc
arpl
add
cld
and
mov
add
and
add
jle
int
idivl
in
jno
clc
cmpb
fldpi
cld
add
adc
and
adc
cmpsl
arpl
inc
add
jge
or
add
add
les
cmpsl
out
ljmp
stc
scas
clc
jb
call
lds
push
mov
mov
imul
mov
add
and
fwait
sub
repnz
pop
nop
or
rol
xchg
cld
or
or
outsl
cwtl
inc
je
popf
js
test
movzbl
add
cmp
popa
movsb
sub
sub
xchg
and
mov
stos
pop
xor
data16
xchg
and
jne
inc
and
and
inc
popf
pop
das
mov
push
movsb
add
int
addr16
jl
sub
mov
loop
adc
mov
clc
push
movsl
or
and
stc
mov
xchg
add
cmp
das
cmpsl
call
nop
in
xor
cs
sub
cli
inc
mov
arpl
cmp
pop
es
add
dec
je
rorb
fwait
cmp
xlat
loope
into
hlt
xchg
sub
pop
sbb
add
or
push
adc
add
jp
mov
dec
int
dec
dec
aam
add
bound
cs
mov
jl
stos
cmpb
cmp
mov
dec
std
inc
outsl
loopne
add
out
bnd
or
sbb
inc
or
cmc
adc
mov
jbe
add
jno
cmpsb
ja
cs
into
sbb
sahf
or
mov
add
sbb
mov
xor
js
add
sub
cmp
test
fsts
push
cwtl
test
dec
mov
xchg
xor
sbb
je,pn
sbbl
add
in
jmp
sbb
into
addb
dec
les
mov
mov
cmp
xor
mov
add
loopne
mov
enter
add
push
je
dec
lds
push
sarl
mov
sti
add
fimull
into
sbb
jmp
dec
dec
in
xchg
fisttpll
fmul
or
cwtl
pop
fwait
xor
sbb
adc
lock
and
add
rcl
add
and
mov
cmp
scas
add
jns
pop
xchg
fldt
mov
fistpl
add
push
ds
into
cmp
addb
or
fbstp
cmc
xor
mov
or
xchg
fdivrl
pop
jo
or
and
or
sub
out
dec
push
jge
cmp
xlat
add
sub
adc
jmp
inc
ret
outsl
cli
rolb
jg
icebp
in
or
adcl
fdivl
in
inc
call
pushf
sub
add
and
and
out
dec
aas
add
shl
add
jns
int3
pop
rolb
iret
and
insl
push
sub
pop
xchg
test
lods
push
shrb
cwtl
ss
pop
pop
mov
dec
push
movsl
and
ret
fmuls
pop
cli
pop
repz
mov
xor
jne
add
dec
mov
and
loop
xor
scas
xor
add
jmp
jno
lods
call
fists
jnp
push
push
sbb
mov
push
fwait
clc
sbb
mov
or
mov
push
out
hlt
pop
push
fdivs
rcr
sub
lcall
or
data16
mov
mov
or
adc
cmp
jl
sbb
or
xchg
xlat
or
add
pushf
pop
inc
adc
daa
and
add
adc
push
fisubrs
je
loop
insl
fisttps
add
dec
sub
inc
out
or
mov
mov
icebp
repnz
negl
mov
push
cltd
outsb
sbb
add
or
xorb
sahf
jnp
xor
popf
cmpsl
psrad
mov
and
cmpsb
mov
cmp
add
sarl
ficomps
jbe
incb
loope
dec
jp
cmc
cmp
cli
mov
or
mov
mov
mov
add
xor
xor
fstl
pop
push
mov
inc
and
adc
push
inc
add
add
cwtl
iret
imul
jecxz
xorb
add
push
cmp
add
scas
pusha
nop
jmp
clc
movsl
adc
jecxz
gs
or
adc
jp
decl
dec
dec
xchg
aad
js
aam
pushf
hlt
adc
aaa
and
popa
jb
ljmp
setl
jno
lret
cs
cmp
movsl
add
mov
out
mov
fsubr
leave
xchg
aas
dec
jae
sbb
inc
push
popf
cld
mov
xchg
push
inc
push
faddl
rorb
cs
stos
mov
mov
in
cld
pop
sub
push
movsl
xchg
fwait
mov
add
inc
jae
add
dec
xchg
cltd
les
mov
shll
jo
add
jb
cmp
sbb
and
shrb
and
jge
adc
test
pusha
sub
or
or
xchg
movb
pop
push
lock
fildl
int3
push
pusha
jle
clc
orl
arpl
mov
add
insb
lret
add
inc
push
and
and
dec
xor
sbb
pop
lret
lock
pop
add
rcr
dec
adc
sarb
jg
mov
pop
xchg
mov
or
lahf
pop
hlt
push
test
mov
dec
push
daa
mov
mov
dec
cmc
insl
stc
sbb
push
adc
mov
add
add
dec
mov
mov
jo
push
cmp
xorb
mov
jl
add
push
or
or
inc
andl
push
or
xchg
sbb
data16
std
add
jb
lret
mov
or
sti
sub
cmp
add
movsl
sub
addl
pop
scas
add
shlb
in
jb
sbb
cltd
push
loopne
shl
in
and
test
push
cmp
mov
push
mov
add
adc
or
jp
pop
mov
movsl
xchg
mov
popf
jmp
mov
divl
sbb
mov
sbb
repnz
jle
ljmp
jns
xchg
lock
jge
idivl
fidivs
add
sbb
mov
test
jo
mov
jmp
or
cmpsb
mov
divl
test
cmpsb
arpl
icebp
dec
push
dec
dec
jns
add
xchg
ret
mov
and
mov
lds
inc
bound
adc
iret
or
inc
loopne
rcrl
sub
cmpl
mov
dec
jae
mov
repz
add
pop
adc
cmp
mov
shlb
mov
and
call
add
sbb
rclb
mov
bound
pop
decl
in
cs
mov
xchg
jb
mov
adc
jns
and
mov
sbb
scas
pusha
add
jl
aas
add
pusha
stc
dec
inc
icebp
mov
cmpl
mov
add
cltd
mov
es
movsl
cmp
inc
or
push
roll
lock
push
cmp
mov
adc
les
cmp
and
js
sub
sbb
xlat
out
les
cwtl
push
mov
rol
pop
add
test
sbb
inc
add
ja
push
es
sbb
rcrb
testb
rcl
punpckldq
adcl
jb
push
orl
ret
push
sub
clc
jge
mov
ret
or
push
les
sub
std
das
addr16
pusha
pop
lcall
test
mov
dec
jp
add
pusha
scas
daa
lcall
icebp
jnp
mov
repnz
hlt
sub
xchg
js
add
arpl
xor
neg
pop
cmpsb
sub
xchg
push
in
mov
nop
jecxz
sbb
add
or
sub
or
jl
add
jnp
xchg
mov
repz
pushf
repnz
pushaw
xor
and
sbb
packsswb
nop
and
outsl
xor
jb
or
sub
iretw
leave
cmp
popf
fistps
mov
mov
roll
mov
ds
iret
int3
or
xchg
int
insl
aam
lret
adc
add
into
div
fsubs
add
stos
sub
out
aam
mov
gs
cli
add
or
push
mov
mov
jnp
std
inc
cmp
inc
push
inc
push
mov
mov
add
mov
lea
add
add
xchg
dec
push
add
or
xchg
xchg
jae
test
pop
add
mov
sahf
lods
pop
xchg
pop
imul
lret
add
clc
pop
mov
scas
fiadds
imul
add
ror
js
mov
repnz
fdiv
dec
mov
mov
adc
mov
sub
sub
ds
sbb
sbb
add
and
repnz
faddl
pop
mov
jnp
and
lret
scas
into
sbb
jb
enter
and
fbstp
jg
lcall
rcll
inc
cmp
or
hlt
pop
lret
daa
sbb
sbb
dec
pop
xor
int
scas
add
sub
dec
sbb
push
data16
dec
sub
cld
adc
ds
rolb
inc
test
push
leave
inc
std
add
in
dec
sbb
pop
lahf
ret
adc
ja
rorb
mov
mov
imul
add
push
xor
out
call
popa
mov
jbe
pop
or
cmpsl
cmp
inc
jge
and
cmpb
test
adcl
adc
or
mov
lods
sbb
jne
lcall
push
add
insb
out
jno
add
ret
push
cmpsl
xchg
and
add
mov
cli
xchg
add
ja
mov
cmp
xor
js
les
das
pop
cmp
mov
add
out
xchg
jb
mov
fnstsw
insl
test
or
cmp
cs
or
sbb
scas
mov
pop
xchg
and
add
jns
add
mov
dec
xor
sahf
icebp
jmp
gs
sbbb
fwait
mov
xor
cmp
decl
cmp
fidivs
cs
addb
shll
add
int
fwait
xorb
std
repnz
add
add
out
ficoml
in
notb
xchg
pop
aas
add
cmp
sbb
add
or
fdiv
lods
or
add
xchg
adc
or
lock
into
or
js
cli
daa
add
lcall
or
cmp
push
xchg
outsl
push
pop
sbb
je
jbe
test
repnz
xor
push
stc
iret
or
icebp
adc
test
push
loopne
mov
aaa
ficomps
mov
clc
in
cmp
jle
dec
ficomps
adc
or
scas
stos
hlt
mov
sub
sub
cmp
je
pop
movsb
jecxz
add
das
mov
push
dec
out
sbb
jge
repnz
push
dec
xchg
add
mov
shlb
movsl
add
in
pop
pop
mov
mov
outsb
or
lods
jecxz
call
sbb
call
outsl
sub
lret
mov
lock
adc
lea
pop
mov
rcl
push
and
and
lods
inc
add
mov
out
add
adc
cmovno
stos
xor
cltd
clc
and
int
sbb
cmp
jbe
cmp
sbb
add
pop
mov
iret
call
pop
rorb
or
es
pop
mov
enter
add
lock
add
pop
ret
por
rorb
fisttpll
add
aad
jno
sub
xor
cmpsb
out
inc
sbb
cmp
mov
cmp
jmp
dec
inc
xor
mov
pushf
adc
sbb
and
add
cmp
call
clc
xor
xchg
mov
fisubrl
xchg
into
mov
repz
pushf
sub
xchg
lods
cmpsb
inc
repnz
sbb
outsl
or
call
or
pop
pop
jp
inc
mov
add
jl
jno
add
jne
inc
jnp
sub
or
sar
out
pop
pusha
dec
imul
sarl
sub
sub
pushf
mov
xchg
and
xchg
inc
sti
xor
jle
enter
aad
fwait
das
lcall
mov
jns
pop
nop
and
jo
test
shll
cmpsb
and
mov
stos
jo
cmp
shll
out
mov
jnp
mov
inc
fisubs
xor
mov
sub
mov
sti
sbb
inc
cmp
add
out
es
sbb
cmpsb
mov
pop
repnz
push
fsts
sti
adcb
add
add
mov
jp
insl
sub
daa
ljmp
rcr
mov
hlt
xlat
adc
cmpsb
addr16
xchg
lock
sbb
mov
and
out
andb
mov
lcall
scas
or
jl
ficompl
mov
movb
js
jp
add
je
cs
dec
insl
scas
pop
xor
adc
xchg
push
lods
rcrb
clc
aam
sti
shlb
mov
jp
bnd
jae
adc
cmpsb
pop
add
adc
hlt
or
cmpl
lret
andb
aad
int3
jae
add
enter
lock
add
mov
clc
shr
sbb
stos
int3
sub
add
jle
xor
pop
xchg
add
sbb
mov
mov
mov
jl
dec
push
push
out
movsb
sub
pop
sbb
addr16
adc
xor
mov
mov
es
push
mov
pop
or
add
dec
pop
daa
sbb
shlb
adc
pop
push
test
cmp
pop
push
ds
sub
rorl
stos
lea
sub
fnsave
int
add
ljmp
call
push
mov
shrb
pop
mov
jo
sbb
adc
dec
mov
push
jl
add
sbb
fnstenv
pop
mov
mov
add
es
fadds
adc
imul
or
add
test
pop
jno
fisubs
stc
cmpsl
rcrb
incb
mov
xchg
movsb
ret
loop
insb
sub
and
fnstsw
jae
enter
mov
add
je
cmpsb
in
stos
pop
mov
xor
fstpl
lcall
xchg
sbb
mov
jle
sub
add
test
xchg
enter
ficomps
xor
ljmp
rolb
and
pusha
jecxz
shll
insb
push
fcoml
lods
bound
imul
outsb
shll
or
or
js
add
jo
or
icebp
add
mov
enter
sub
fdivs
sub
movsb
jo,pt
sub
rcrb
inc
add
insb
lods
cmp
jae
lret
pop
inc
inc
add
add
in
das
add
mov
mov
adc
mov
popa
cld
pop
push
jl
mov
adc
pop
mov
jne
les
jle
rcrb
into
xchg
push
dec
cmpsl
addr16
jo
gs
nop
add
cmc
mov
mov
pop
jo
add
xchg
sub
add
cltd
popa
sub
push
or
stc
cmpsb
xlat
and
push
insl
maskmovq
xor
mov
lods
das
and
lock
cltd
jo
sub
xchg
insb
mov
enter
add
mov
sbb
fistps
lock
push
xchg
xchg
jmp
sbb
push
cmc
sbb
into
or
jecxz
adc
jl
ljmp
insb
pop
dec
cwtl
cmp
in
sbbb
cmp
sub
outsb
add
inc
popf
stos
and
lret
test
add
sub
int3
outsl
xor
cmp
fiaddl
push
out
sub
mov
repz
mov
inc
stos
loope
push
or
out
or
es
dec
lods
clc
daa
xchg
insb
add
xchg
jae
adc
add
adc
sub
xor
orb
ret
hlt
std
add
pop
xchg
add
clc
or
je
add
sti
sub
out
scas
xor
mov
sbb
adc
push
andl
or
lods
xchg
imul
stos
mov
add
sahf
lock
aad
push
lcall
xor
and
inc
aad
adc
jb
sahf
lea
notl
add
dec
fs
orb
inc
loopne
cld
gs
cmpsl
jmp
pop
mov
add
lret
mov
dec
pop
ret
or
outsl
xor
pop
push
or
ret
add
ror
xor
fmulp
pop
add
dec
cwtl
cmp
rolb
fsubrs
sbb
stos
repnz
out
mov
sbb
aad
cmovno
and
int3
js
leave
mov
add
clc
adc
pop
and
dec
mov
jg
lock
aaa
xchg
out
cli
call
iret
jl
test
adc
cs
cmpb
je
jae
add
flds
sub
scas
in
gs
mov
sub
jecxz
repnz
add
popf
mov
xchg
loop
fs
stos
jecxz
pop
std
or
mov
adc
shrb
pop
add
lret
sub
cli
fidivs
incl
push
pusha
sbb
es
adc
ret
sub
std
add
add
inc
ds
xor
pop
mov
addl
sbb
or
or
cs
push
sbb
adc
sub
add
gs
xor
out
jo
dec
inc
roll
in
push
xchg
lds
test
sub
xor
std
or
cmp
push
mov
and
and
les
jae
add
sub
call
dec
insl
and
adc
sbb
inc
ljmp
lods
call
and
push
cmpsb
cwtl
inc
inc
mov
push
xorb
cli
ds
add
xlat
sarb
insb
sub
enter
enter
lock
fisttpll
call
push
int
lea
loope
sub
in
inc
cwtl
aaa
lahf
xchg
popa
add
enter
mov
cli
lea
lock
scas
add
sar
xchg
jl
and
inc
stos
push
std
cld
mov
jbe
push
mov
sbb
mov
insb
mov
inc
mov
ret
fwait
cmpsl
jbe
and
loopne
inc
cltd
xchg
lret
mov
subl
xchg
sub
sbbl
mov
mov
push
fmuls
je
pop
push
cli
arpl
sti
loop
orb
xor
cmpsl
and
test
xchg
mov
sbb
popa
not
and
adc
dec
cmp
outsb
cmp
call
jns
push
xchg
sub
and
add
or
add
mov
hlt
add
inc
popa
fs
pushf
sub
sbb
add
jmp
in
sahf
xor
insb
call
mov
or
aas
mov
add
cltd
test
push
cs
mov
shrl
rcll
in
out
dec
sbb
insb
dec
inc
add
mov
dec
aam
add
add
scas
push
cwtl
mov
jno
mov
imul
dec
sbbl
add
adc
jmp
inc
loope
insb
ja
cmp
lock
lds
mov
pusha
mov
out
add
outsb
mov
add
or
lds
cmp
les
pop
or
rcrb
hlt
fdivrl
mov
xchg
ljmp
aad
mov
popf
add
sub
push
fwait
sti
in
cld
push
and
icebp
stc
hlt
loopne
loop
outsb
mov
loopne
enter
rclb
shl
pop
xchg
add
pop
ja
loope
add
mov
sbb
lds
jne
sbb
fistpl
shr
inc
push
fisubrl
cli
pusha
das
xchg
cmp
inc
shll
mov
push
adc
in
cmp
inc
add
fstps
xor
and
jae
mov
inc
sub
sub
stos
addb
or
js
lret
or
add
mov
shll
sub
inc
pushf
cwtl
xor
loopne
adc
inc
cli
adcb
xchg
aad
push
mov
test
loope
popa
and
mov
or
int3
pop
loope
mov
stc
lret
lock
mov
adc
inc
les
add
test
cwtl
and
call
out
test
xor
add
jb
aam
or
add
popa
clc
fwait
add
push
mov
adc
lock
cmp
test
shr
aam
adc
mov
fnstenv
xchg
loop
adc
cwtl
sbb
xor
fadds
and
mov
sti
rolb
xchg
sub
sub
lods
and
rolb
lea
or
push
mov
sub
addl
mov
ret
mov
sub
std
test
add
fiaddl
jno
je
ds
pop
js
mov
xlat
cmp
dec
add
mov
cwtl
subb
ror
or
xlat
or
push
movsl
push
sbb
fdivs
cwtl
add
and
pop
iret
jg
or
in
addl
aas
daa
aaa
pop
outsb
xlat
and
dec
lods
decl
nop
jl
fsubrs
das
clc
cmpsl
pop
pop
add
jb
mov
imul
sbb
mov
xchg
sahf
cltd
adc
mov
xor
ljmp
nop
test
js
test
and
shl
sysenter
mov
mov
dec
or
jae
imul
pop
xor
adc
inc
push
and
js
sub
adc
adc
cld
addr16
ljmp
dec
adc
mov
test
xor
or
repnz
add
pusha
pushf
push
mov
lea
xor
mov
fsub
and
mov
xor
xchg
xchg
push
int3
dec
or
add
or
xor
xchg
aaa
adc
add
dec
pop
mov
pop
xor
xchg
icebp
add
cmpsl
xor
imul
fsubrs
cmc
adc
das
mov
idivl
insb
jg
mov
adc
push
mov
lret
ja,pn
enter
push
add
je
add
jmp
mov
adc
pushf
push
dec
xor
inc
clc
mov
add
xchg
xlat
bound
dec
ret
std
pusha
xchg
out
add
mov
mov
aam
mov
int3
dec
fucomip
add
lods
or
mov
and
das
cmpl
orb
movsl
sub
mov
js
adc
lods
inc
or
cltd
roll
test
pop
sub
dec
outsl
mov
add
and
arpl
loopne
into
dec
inc
aas
fadds
ds
enter
addr16
sub
or
rcll
dec
dec
mov
sahf
push
mov
adc
cmp
rolb
dec
std
add
mov
sub
adc
add
inc
pushf
ss
add
fnsave
push
int
add
dec
out
add
fmul
push
push
shll
push
sbb
fcomip
xor
add
dec
lret
pop
push
mov
mov
push
xchg
add
popf
test
and
xchg
xor
cmp
or
ja
add
xor
aad
xor
inc
jno
daa
jl
enter
add
add
mov
cmp
cmp
fwait
xor
addb
mov
push
add
adc
cmp
mov
adc
movsl
out
mov
icebp
shl
xchg
scas
enter
mov
inc
pop
cmp
hlt
xor
jno
add
add
dec
dec
in
sbb
idivb
leave
hlt
cmp
push
jp
jle
add
or
jns
cli
clc
mov
xchg
and
push
lahf
shl
jo
pop
add
loop
cmp
sub
lds
roll
add
xor
in
lahf
add
fwait
mov
lods
ret
sbb
les
adc
mov
add
test
xchg
sub
scas
cmp
out
out
xlat
cwtl
lret
repnz
add
cmp
mov
jae
mov
add
add
xchg
fwait
aad
addr16
lret
cmp
into
lods
out
movsb
xchg
mov
lcall
scas
es
les
lods
add
daa
adc
mov
and
imul
add
inc
mov
add
adc
add
dec
lahf
data16
add
popa
iret
cwtl
insb
push
add
out
sub
loopne
push
mov
into
dec
add
inc
imul
inc
pop
arpl
pcmpgtd
sbb
pop
fsubs
or
scas
insl
enter
mov
dec
in
test
rcrb
mov
lea
fadds
xchg
inc
push
mov
loopne
add
pop
movsb
int
inc
cmp
repnz
lock
cmp
push
xchg
adc
push
in
mov
add
push
rclb
cmpsb
into
add
xchg
add
imul
insb
pop
inc
jge
repnz
rcll
jp
pop
sbbb
inc
inc
fs
jecxz
add
mov
inc
popf
xor
mov
xlat
outsb
cmp
sbb
xlat
int
pop
push
pop
lods
nop
orb
inc
mov
pop
jl
iret
mov
sti
les
add
cwtl
call
and
adc
cmp
in
cmpb
push
mov
ret
lret
add
nop
push
js
ret
push
insl
add
lret
jae
inc
pop
pop
jmp
faddl
add
mov
out
sbb
movaps
aad
dec
test
bswap
and
xor
add
adc
push
add
xchg
mov
jns
jns
add
ss
and
sub
add
inc
inc
xchg
and
fists
pop
movsl
pop
out
cwtl
nop
xchg
rcrb
pop
rclb
cmp
in
mov
sbb
dec
sub
out
mov
jg
mov
insb
pop
add
add
inc
mov
daa
repnz
out
mov
cmp
cmpsl
pop
push
lods
xchg
sbb
popf
add
and
add
cli
pop
adc
enter
jbe
and
shrb
pop
shl
js
add
pop
xor
leave
loopne
add
jg
rcrb
sub
add
nop
add
jae
dec
mov
call
cltd
loope
jo
add
or
xchg
int3
add
fisubrs
lock
dec
mov
subb
and
mul
jb
inc
jmp
faddl
xchg
pop
add
and
pop
fwait
add
push
fistpll
popa
js
roll
fisttpl
add
mov
in
bound
test
dec
ja
outsl
mov
sahf
lock
mov
lahf
test
cld
add
add
jmp
cmpsl
add
call
in
and
out
iret
pop
xchg
xor
xlat
je
add
pop
aas
repnz
or
push
add
jl
add
sub
lds
and
push
or
nop
push
test
dec
out
or
xor
dec
roll
jo
push
adc
call
jo
leave
shll
add
sbbb
jle
push
inc
sub
les
and
add
cmpl
cmc
insl
jecxz
lock
int3
repnz
add
adc
jl
cmpsb
hlt
repnz
pop
lcall
sbb
mov
add
pop
cmpsb
pushf
add
aas
rolb
cld
stos
sub
call
mov
out
adc
in
jmp
imul
in
add
fadds
jns
mull
enter
jge
adc
jbe
xor
xorb
cmp
mov
mov
cmp
pop
sbb
pop
sbb
inc
scas
xor
jg
ret
inc
in
imul
lahf
mov
js
push
movsb
mov
cs
add
mov
movsl
cltd
daa
test
cli
dec
add
ror
and
stos
lahf
xchg
fs
push
fwait
add
and
jl
in
add
mov
or
cld
cmc
sbb
add
push
sub
pop
cwtl
mov
xchg
dec
loop
ds
divl
mov
mov
bndldx
stos
xchg
add
jb
repz
add
push
das
inc
add
test
call
lock
fsubrp
inc
adc
data16
add
movsl
add
das
scas
fldenv
cmp
pop
inc
dec
pop
and
inc
pushf
xchg
sub
insl
out
ja
repnz
add
pop
jne
dec
mov
fsubrl
adc
xor
bound
push
sbb
enter
cmpsb
loop
sti
add
fwait
pop
push
mov
adc
enter
mov
in
push
add
int3
cmp
clc
push
lea
mov
leave
add
fidivl
add
bnd
addl
jp
xor
push
xor
add
jns
or
pop
push
daa
add
push
mov
add
sti
or
mov
int3
pusha
test
adc
les
mov
add
pop
shll
jp
insb
and
xor
jns
add
ss
sub
push
bound
fwait
mov
push
das
dec
add
js
clc
fs
aas
add
data16
sub
or
mov
pop
mov
shrl
mov
dec
jbe
add
jecxz
xor
add
xchg
subb
imull
leave
rolb
pusha
cld
js
stos
repnz
sbb
cmpb
faddl
xor
sub
add
mov
aas
sbb
mov
inc
mov
add
ffreep
mov
iret
pop
push
movsl
lea
out
nop
cwtl
je
push
cmp
mov
sarb
cmpsl
into
add
stos
or
lahf
sbb
jnp
push
sub
add
add
push
inc
rorl
xchg
orl
loop
push
jmp
pop
outsb
loopne
dec
lcall
dec
mov
mov
insb
add
xor
pop
fdivrs
xor
add
and
xorb
lret
fbstp
and
cmp
ret
int
stos
adc
or
pop
imul
cmp
sub
add
lahf
dec
int
mov
pop
add
shrb
ficoms
pusha
cld
adc
mov
jl
jbe
mov
add
icebp
es
dec
lock
cmp
stos
push
and
fcmovnbe
add
mov
jne
loope
push
xor
scas
cmp
add
es
jae
shl
pop
aaa
mov
shl
mov
adc
xor
gs
lret
sbb
mov
add
sub
ljmp
loope
cmc
jmp
leave
pop
outsl
insb
rcl
mov
rcrl
pusha
inc
push
add
popa
cmp
pop
scas
sub
pop
xchg
add
shlb
inc
jne
add
je
xchg
add
xchg
rol
inc
push
mov
push
pop
mov
pop
test
jg
aam
pop
popa
add
add
imul
sbb
enter
mov
addb
add
pop
cmp
out
cld
inc
add
cmp
cmp
pop
je
sub
xor
or
dec
and
out
jnp
cmp
mov
test
jg
in
shrb
ret
add
pop
repnz
sbb
inc
add
and
movb
mov
dec
add
cmp
pop
mov
jne
add
sub
xlat
movsb
cmp
adc
ds
mov
test
add
add
subb
cwtl
insb
cld
lock
pop
inc
aad
orl
cmc
lret
or
sahf
add
aas
mov
cwtl
adc
mov
clc
push
scas
lds
inc
add
jae
call
pop
mov
cmp
push
or
mov
je
hlt
sarl
add
pop
add
out
cmp
sub
dec
add
aaa
xor
add
outsl
fnstsw
addl
fidivrl
mov
xchg
outsb
test
adc
fdivrl
ljmp
movsb
sbb
movsl
push
sahf
adc
fadds
cmp
loopne
jge
add
test
mov
mov
test
int3
and
xchg
inc
insb
sbb
add
das
ror
dec
daa
fisttpl
sbb
or
insb
push
mov
fadds
shl
jg
andb
pop
add
mov
add
cmp
sbb
mov
mov
outsl
dec
test
cwtl
repz
inc
xchg
jns
out
test
pop
ljmp
stos
mov
in
out
pop
sub
rorb
push
xchg
or
adc
pop
add
imul
sbbb
jle
insl
adc
dec
stos
ret
mov
add
mov
mov
and
jle
xor
jecxz
sub
add
fsts
repnz
jl
icebp
loope
mov
xchg
lret
movsb
or
jle
cmp
xor
cmp
pop
and
cld
add
pop
xor
daa
adc
cmp
mov
add
xchg
sbb
bound
aas
mov
adc
je
in
fmulp
jle
pop
xor
mov
mov
dec
add
ror
jbe
cli
pusha
add
inc
inc
scas
xchg
cwtl
clc
cmpsl
jne
or
mov
lea
nop
lds
push
push
sub
je
push
rol
jne
pop
mov
add
enter
push
lahf
push
pop
add
push
sti
or
and
gs
aad
adc
ret
test
paddsb
xchg
and
inc
lock
sub
and
push
push
les
inc
push
pop
jecxz
sbb
ret
mov
fdivr
xchg
xchg
jno
rolb
inc
or
ja
mov
or
imul
fists
sahf
repz
cmp
shlb
rol
ret
xchg
add
andb
mov
sbb
rcrb
xchg
adc
cmpsl
add
out
jp
imul
xor
jbe
call
dec
scas
xor
hlt
roll
dec
in
jns
movsl
inc
cmc
add
in
inc
fstl
es
and
and
sub
sbb
decb
jo
add
push
outsl
push
pop
popa
cltd
or
fdivrp
jl
pop
rcrb
test
push
addl
push
push
shlb
lods
int3
pop
sbb
and
inc
mov
fldenv
jp
repz
gs
adc
addl
dec
lcall
fldt
xor
or
xchg
das
cmpb
mov
adc
test
cmc
push
mov
fistpll
xor
push
shlb
jp
or
sub
dec
inc
mov
jne
leave
cmp
cmp
rolb
into
xor
jb
or
cmpsb
pusha
mov
and
xchg
jbe
inc
bound
into
dec
mov
icebp
adc
repz
addl
setl
jl
dec
rolb
push
push
mov
out
cli
ret
mov
cmp
add
int3
add
popl
add
insb
jne
stos
sbb
jmp
std
cmp
sti
sarb
mov
mov
pushf
dec
sub
jo
addb
pop
add
lock
dec
add
cmp
shlb
out
pop
mov
sub
add
notb
and
inc
push
daa
adc
shl
jnp
out
in
add
pop
das
inc
es
aaa
cmp
imul
push
lock
enter
mov
wrmsr
add
dec
jo
call
loope
ljmp
in
or
cmp
xor
sub
mov
mov
cmpsb
enter
adc
add
pop
aas
int3
mov
or
add
mov
mov
add
clc
ret
cmp
mov
scas
rcl
and
add
fsubrs
in
outsl
add
pop
subb
add
popf
sarl
add
sbb
sbb
data16
add
push
push
add
xor
mov
xchg
test
sub
xchg
loop
pop
daa
or
in
ja
pusha
jno
jle
in
prefetch
or
int3
push
icebp
lods
and
out
xlat
inc
pop
ja
push
hlt
ds
and
pop
pushf
dec
inc
lds
add
aad
aam
hlt
pop
push
and
cmc
movsb
and
rclb
mov
outsb
mov
loopne
scas
add
ss
dec
imul
push
add
add
adc
cmp
pop
add
sub
mov
imul
add
sub
sbb
dec
pop
and
jmp
xchg
mov
hlt
pop
push
test
aad
add
scas
pop
xor
fdivl
add
and
jae
xorl
es
imul
iret
pop
pop
or
push
mov
cmp
lock
mov
mov
sub
call
add
jp
hlt
lock
dec
add
pop
push
and
xchg
es
add
ret
xchg
xor
shlb
leave
or
in
add
cmp
xor
cwtl
push
mov
pushf
xorl
mov
and
mov
xchg
loope
add
cmp
push
pop
pop
add
clc
aas
sub
adc
addr16
ret
cli
cmc
jle
mov
gs
ljmp
or
outsb
xor
sbb
xchg
add
sbb
add
cli
fidivrl
or
inc
mov
cld
inc
pop
push
rorb
or
lret
jmp
cmp
sub
jnp
bound
repz
jle
std
das
pop
addb
ja
mov
add
adc
sub
push
add
fmuls
call
loopne
jne
fistps
ljmp
adc
icebp
push
and
jge
fadds
shll
jbe
out
dec
jb
mov
mov
test
out
cmp
leave
mov
pop
xchg
sub
addr16
inc
shrb
lea
aaa
ret
lcall
jg
add
sbb
lret
mov
clc
jl
mov
dec
out
mov
movsb
pop
fsubl
rcr
add
xchg
push
xor
adc
push
lods
mov
sbb
mov
add
mov
cmpsl
and
pmulhuw
out
je
es
or
cwtl
jmp
mov
cld
jo
add
sbb
add
or
mov
pushf
outsb
lret
add
pop
push
or
xchg
mov
mov
cmc
arpl
into
mov
cmpsb
add
int
test
cli
jno
call
lret
into
fs
fs
and
jmp
or
add
es
in
push
pop
cld
and
add
jno
es
cmpsl
sub
addl
jbe
je
mov
mov
jne
mov
jge
xchg
jbe
int
pop
jecxz
mov
sub
out
and
and
sti
pop
scas
add
subl
leave
xorb
enter
push
add
test
shrb
and
lret
add
loope
xor
arpl
or
lcall
lahf
inc
outsb
cmp
into
stos
add
sbb
jno
out
int3
xchg
mov
sbbl
mov
subb
scas
stc
inc
outsl
xor
cmp
ljmp
or
mov
add
arpl
lret
xchg
mov
sbb
ret
insb
shl
push
xchg
add
leave
jne
cmp
dec
adcl
mov
hlt
pop
and
scas
addr16
push
sbb
jecxz
inc
in
mov
or
jb
cmp
and
pop
push
fdivrp
add
dec
lods
out
pop
in
enter
cmp
jb
sbb
sub
js
dec
into
cld
adc
mov
jge
es
out
insl
and
jg
pushf
mov
mov
pop
and
addb
pop
idiv
icebp
fimull
xchg
add
xlat
or
mov
movsb
push
sbb
push
sbb
jae
cmp
ja
neg
cmovg
jecxz
add
lods
sahf
rol
mov
add
test
jae
pop
adc
nop
pusha
push
add
enter
test
cmc
mov
ss
push
lods
pop
add
imul
sub
mov
ror
xchg
or
cld
mov
cmovle
fwait
stos
imul
cltd
psubsb
iret
pop
into
xor
nop
and
fnstsw
adc
stc
pop
inc
in
test
lods
mov
or
add
jg
xchg
jp
dec
sub
add
push
mov
jb
add
lds
data16
out
add
lahf
repnz
add
imul
sub
or
jg
flds
clc
add
sbb
push
add
in
sti
outsl
sahf
jae
pop
jl
mov
mov
movsb
out
out
fcoml
js
mov
sub
loop
add
fisttps
mov
and
add
out
mov
nop
mull
fsubrs
lods
or
inc
push
mov
mov
leave
add
rorb
into
lret
pushf
mov
jne
inc
imul
sub
or
testb
adc
adc
inc
subb
lock
mulps
cmpb
stos
push
adc
xor
adc
mov
mov
in
into
cmp
faddl
js
bswap
inc
jle
nop
dec
add
int
mov
imul
pop
cwtl
inc
je
or
adc
sub
in
mov
jns
sbb
ret
aad
cld
cld
scas
cmp
jnp
jne
jp
ja
add
enter
push
add
pop
sbb
repnz
add
pop
push
sbb
ror
cmp
stc
dec
and
or
add
inc
add
xchg
mov
add
imul
test
sbbb
lds
add
add
add
pop
mov
jmp
cmp
popa
sbb
xor
ret
les
ds
mov
leave
add
add
enter
lahf
add
mov
or
fs
repnz
push
mov
dec
mov
jecxz
mov
js
xchg
push
out
addb
fdivl
add
mov
dec
jg
add
xchg
mov
xchg
jb
add
or
enter
popa
cmp
sbb
pop
sbb
ja
jae
add
out
dec
xor
imul
xchg
cmpsb
jp
notb
sub
jne
push
aaa
adc
add
imul
or
sarb
shrb
stos
and
jge
add
add
stos
mov
and
adc
lret
jno
lods
out
lock
xchg
aad
mov
pop
mov
or
fdivs
les
add
push
cmpsb
out
dec
inc
pop
pop
cwtl
jge
jg
cmp
hlt
daa
test
push
jns
cmp
sbb
xor
ljmp
sub
inc
sti
jge
add
call
inc
adc
add
push
mov
adc
jmp
add
in
in
es
xor
aad
mov
outsl
mov
filds
cmpsl
jo
rcrl
sarb
hlt
fistl
pop
fmulp
rorb
jp
int3
arpl
xchg
sbb
and
sbb
pop
push
rolb
adc
fistpll
sti
lcall
pop
fdivl
inc
xor
sahf
pop
hlt
push
jae
dec
mov
or
push
stc
cmc
outsl
mull
aad
jbe
loop
cmp
cmpsl
add
ds
inc
decb
dec
adc
push
add
jno
shlb
jp
lcall
inc
popf
push
sbb
rcrb
call
fcoml
lock
ret
pop
gs
fldcw
mov
sub
cli
and
cmp
add
push
add
mov
fnstsw
pop
add
cmpsb
icebp
push
or
push
sub
sub
fistpl
sbb
arpl
ljmp
add
repz
rcl
mov
jbe
sbbb
xchg
gs
jo
mov
inc
lock
inc
adc
and
adc
pop
mov
mov
insb
loopne
jns
add
push
out
aas
les
fdivrs
fsubl
dec
fcoml
add
push
gs
add
push
mov
test
adc
mov
test
adc
mov
out
push
mov
popa
aam
lods
push
ds
add
repnz
jmp
clc
pusha
mov
cmp
dec
add
push
mov
hlt
xlat
ficomps
scas
ret
lods
hlt
mov
outsl
mov
add
mov
xchg
adc
pushf
mov
jl
enter
ds
lock
or
popa
outsl
les
and
lcall
out
dec
test
dec
adcb
sub
cmp
cld
out
add
push
mov
jg
test
into
cmc
andb
adc
pop
pusha
jmp
in
add
jo
sahf
mov
les
sub
and
push
daa
mov
sbb
cmc
fiaddl
hlt
jle
call
push
pop
clc
lret
add
pop
sahf
lods
bound
push
jns
mov
out
sub
push
cld
push
pop
into
and
mov
add
mov
call
mov
roll
scas
jbe
lret
adc
adc
mov
push
adc
mov
cmp
jl
adcb
adc
add
cmp
mov
outsl
add
lret
or
sub
cs
scas
loopne
push
in
loopne
xchg
cltd
or
dec
mov
hlt
cmpsl
add
dec
fidivl
pop
daa
mov
inc
push
jnp
adc
mov
jl
nop
add
ret
add
movsb
pop
leave
mov
js
add
cmp
mov
add
data16
stc
in
add
push
lret
sbb
and
sbb
or
add
xor
jl
jg
pop
fistps
xchg
cmp
mov
sbb
cld
inc
jp
nop
daa
pop
cli
and
mov
adcl
mov
sub
mov
sbb
test
rol
xchg
cmp
jp
leave
dec
sbb
xor
or
nop
jle
clc
mov
mov
out
xchg
shrb
pop
xlat
nop
es
sbb
jge
loopne
imul
cwtl
mov
pushf
shlb
jle
ja
repnz
pop
push
inc
mov
lahf
or
mov
scas
sbb
add
das
ss
sbb
jl
jecxz
dec
push
add
sti
pop
cmc
addr16
js
dec
mov
xlat
xor
adcb
xchg
xor
rcrl
add
dec
aam
mov
push
push
jnp,pt
rcrl
imul
mov
cmpsl
out
sub
add
fwait
inc
adc
push
xor
dec
lock
push
add
cmpsb
mov
faddl
mov
adc
rcll
fbld
sbb
adc
cmp
xchg
push
xor
jo
pop
stos
out
mov
add
cmpsl
sub
push
lea
imul
rcll
or
mov
sub
hlt
popf
ror
test
push
popl
cmp
fiaddl
adc
add
adc
pop
testl
mov
out
push
lock
mov
icebp
jo
sbb
scas
out
xor
mov
arpl
ds
mov
xchg
push
push
dec
or
cmp
xlat
add
add
je
pop
jmp
pusha
test
dec
add
cmpsb
fldt
orl
popf
movsb
add
xor
shlb
inc
add
pop
push
adc
pop
lds
and
inc
mov
cmp
sub
sub
in
outsb
push
out
xchg
nop
pop
cwtl
inc
add
shrb
cmpsb
sub
xor
mov
jg
out
inc
repnz
cmc
or
loope,pn
das
add
decb
or
mov
jmp
popa
pop
add
inc
cmp
roll
push
add
mov
adc
adc
push
mov
test
and
insl
in
sbb
add
jmp
gs
arpl
and
iret
push
cmpsb
mov
jno
add
adc
sbb
add
cmpsb
xor
inc
insl
pop
movsl
jmp
adc
dec
fldl
test
jno
out
mov
loope
fiadds
dec
add
mov
mov
inc
jo
jge
adc
add
dec
rcll
int3
sub
add
xor
fiadds
jae
sbb
pop
add
push
mov
nop
cmp
insl
rorb
push
jmp
repnz
push
adc
in
add
jmp
cltd
mov
push
dec
or
and
cld
xor
js
pusha
mov
xor
stc
add
mov
xor
adc
mov
pop
sub
mov
jmp
xchg
sti
dec
and
outsb
mov
les
mov
adc
adc
shrb
xchg
lcall
ja
daa
inc
jae
outsb
pusha
xor
stos
loope
pop
and
add
xchg
cmp
pop
or
test
arpl
add
imul
push
or
mov
in
cmp
mov
ljmp
stc
pop
imul
mov
rol
push
add
leave
xor
out
dec
test
negl
add
add
xchg
adc
pop
outsl
dec
push
pushf
add
xor
pusha
add
lods
pop
int
outsl
jne
in
add
mov
mov
popf
addl
rclb
pop
lahf
add
nop
test
mov
xchg
adc
outsb
push
and
movb
in
int
lock
ja
sbb
add
pop
add
dec
adc
add
hlt
addb
add
dec
inc
sbb
jns
cwtl
sbb
insb
arpl
sub
test
scas
push
in
sbb
jo
mov
sti
cmp
fcmovu
fiadds
add
popf
add
stos
popa
fldt
lret
jns
push
xchg
or
sarb
sbb
stc
xor
push
pop
sbb
add
cld
sbb
adc
stos
in
jo
std
pop
sub
jbe
nop
mov
shrl
sbb
bsf
mov
lock
loope
mov
scas
shl
js
fbstp
pop
call
dec
inc
test
shl
out
sarb
jns
pop
and
stos
gs
shrb
add
mov
jmp
add
lcall
pop
or
pop
or
mov
pusha
shll
add
fadd
xor
fmulp
pop
lret
sbb
cmp
mov
test
xor
add
cmp
out
add
js
int
sub
mov
add
pushaw
pop
lret
rol
mov
dec
xchg
sbb
sarb
sbb
adc
adc
jns
push
or
jno
insb
pop
jae
pop
mov
mov
cmp
fmuls
add
js
pop
or
in
cmp
mov
add
pop
sbb
push
mov
hlt
pop
shlb
pop
inc
push
clc
mov
ud1
add
mov
rorb
outsl
or
andb
subb
and
push
mov
jle
call
cmpb
sub
bound
aad
mov
inc
ss
rorb
nopl
dec
or
mov
add
sub
sbb
cmp
loop
jb
mov
repz
jle
ret
add
rolb
faddl
out
pop
das
jp
push
int3
jge
add
adcb
lret
xor
mov
jmp
push
insb
xchg
loopne
movsb
push
cmovge
out
cmc
xor
bswap
or
push
scas
cmp
or
loopne
add
xor
nop
mov
mov
rdtsc
addr16
dec
popa
rcrb
mov
mov
in
dec
mov
pusha
adc
inc
call
xchg
inc
rorb
adc
adc
add
sti
or
adc
push
mov
dec
nop
xchg
out
clc
cs
push
add
out
mov
idivb
mov
add
repz
sahf
add
lcall
pop
push
in
mov
fsubrs
lret
out
popa
xlat
add
or
dec
out
cmp
xchg
add
inc
adc
and
test
push
cmp
cli
lods
push
add
pop
shrb
push
jne
xchg
dec
sbb
sub
or
testl
add
andl
mov
in
mov
push
pop
bound
inc
adc
jg
add
lock
fimull
sahf
mov
and
add
shr
mov
xchg
adc
out
pop
pusha
and
add
je
push
add
add
sbbb
sbb
dec
mov
xor
mov
dec
fs
lahf
imul
mov
add
leave
or
mov
shl
fdivrs
jne
cmpsb
mov
cmp
xlat
repnz
sub
inc
mov
or
out
rolb
mov
push
adc
movsb
pop
xchg
lds
into
call
dec
add
lock
ds
in
push
in
lds
sub
loopne
adc
cwtl
shlb
mov
ret
push
ja
add
jnp
shlb
lea
cld
test
add
mov
movl
mov
add
jmp
or
insl
mov
xor
mov
movsb
int3
mov
rolb
jl
jmp
push
out
push
or
add
sbb
hlt
test
test
dec
sbb
shrb
mov
fsubrs
mov
adc
int
xor
cwtl
fisttps
inc
dec
and
xchg
push
push
mov
arpl
xchg
add
pslld
pop
jg
sti
add
addr16
lods
test
and
mov
add
xor
push
add
mov
sarb
dec
xor
pusha
cltd
add
push
fwait
cwtl
jmp
mov
pop
sbbl
cli
mov
fsubs
aam
sbb
sub
shll
add
mov
or
sub
inc
ss
jmp
sbbb
ficoml
ret
divb
cmpsl
lock
pop
mov
mul
pusha
mov
sti
add
pop
inc
add
dec
cmp
pop
mov
cmp
push
outsb
cltd
jmp
sbb
test
mov
adc
xchg
inc
xchg
call
mov
leave
sbb
jno
jo
shlb
mov
mov
dec
inc
cmp
imul
pop
sarb
or
jae
jo
flds
xchg
mov
push
cmp
add
scas
lret
add
lret
pop
cmp
cmp
push
adc
pop
sbb
sbb
or
sbb
jb
sub
inc
sbb
aaa
je
add
dec
push
lea
add
pop
mov
stos
xor
mov
orl
jecxz
and
inc
movsb
loop
mov
lea
adc
cli
mov
jecxz
cmp
iret
adc
xor
bound
inc
add
jge
add
add
add
loop
popa
ficoms
inc
adc
decl
cmp
mov
sbb
add
enter
sti
out
add
ja
mov
lret
add
and
and
adc
scas
inc
jmp
arpl
lea
movsb
add
mov
cli
in
add
clc
aam
add
and
push
xchg
mov
outsb
faddp
push
imul
sub
add
push
add
xchg
or
add
rcrb
add
lods
das
outsl
mov
inc
movsb
pop
jmp
leave
add
ret
push
sub
sub
pop
repz
fwait
jno
mov
test
sbb
sub
add
lds
dec
or
xlat
sbb
gs
jp
add
jge
adc
jbe
xchg
hlt
shl
inc
xchg
loopne
mov
cmpsb
mov
cmp
push
jg
push
cmpb
pop
and
dec
jne
push
mov
push
mov
xchg
test
loopne
dec
adc
call
mov
out
or
push
inc
pop
fadds
cld
outsl
push
nop
leave
sbb
sarl
aam
pushl
lock
sbb
push
and
stos
or
mov
mov
ja
pop
jnp,pt
push
ret
pop
jge
shlb
cltd
add
daa
jmp
mov
dec
mov
inc
lds
std
mov
je
pop
sub
push
and
add
xchg
in
pop
outsl
xor
std
mov
arpl
jl
add
addr16
dec
add
sbb
pop
jp
pop
pcmpeqd
xchg
lahf
mov
adc
scas
jae
sub
mov
sbb
jecxz
xchg
lret
add
mov
push
add
mov
movsl
adc
or
movsb
cmc
jmp
inc
add
pushf
sbb
das
cmp
flds
xchg
aaa
adc
xchg
movsl
call
addb
loope
push
add
sbb
popf
mov
sub
das
test
ja
jl
dec
push
jo
inc
orl
cmpb
cs
xor
add
lods
mov
sahf
mov
pushaw
out
in
add
dec
dec
mov
push
add
inc
pop
push
sbb
sti
or
and
add
push
in
mov
lods
push
and
xchg
cmpsl
dec
fsubl
jno
mov
shl
jge
add
jle
insb
aaa
pop
sbb
add
mov
in
xor
xor
jno
add
bound
test
inc
add
jns
fistps
pop
faddl
adc
and
hlt
fsubr
ror
or
and
add
push
mov
sti
cltd
ficoml
inc
push
sbb
in
divb
sbb
and
add
push
popf
mov
insb
into
and
adc
loope
loopne
popa
add
cs
cmp
adc
or
cmpl
xlat
adcb
insb
dec
adc
pop
sbb
and
add
call
dec
popa
jle
pop
xchg
adc
xchg
es
adc
cmp
nop
and
or
lock
pop
rolb
cwtl
aaa
mov
pusha
jl
adc
out
sub
push
enter
popf
add
cmp
je
add
push
stos
jae
movsl
out
add
stc
mov
adc
test
fdivrs
mov
dec
insb
xchg
fwait
add
repz
jecxz
fdivl
frstor
jg
or
mov
ret
push
repnz
scas
cmp
cmc
iret
shll
jg
fsubs
add
mov
and
push
cmp
out
add
or
or
stos
insl
sub
lahf
pop
adc
cmp
add
inc
leave
bound
andl
adc
jge
cwtl
add
mov
leave
mov
jno
mov
iret
test
outsb
add
adc
and
and
and
sbb
jnp
and
and
xor
jecxz
add
mov
adc
filds
inc
lret
jns
sbb
nop
cmp
pop
and
cmpsl
add
or
fsts
pop
cmovs
aad
pusha
ss
aaa
add
sub
push
mov
inc
mov
mov
add
pop
add
sub
add
insl
xchg
add
stc
jnp
add
dec
xor
cmp
xchg
add
iret
pop
dec
add
xlat
addb
pop
add
xchg
add
or
jnp
and
rorl
add
xor
stc
mov
daa
ss
mov
pop
out
push
jp
mov
ss
roll
aas
sub
xlat
roll
cmp
push
mov
sbbb
cmp
or
cwtl
xor
movsb
fisubrs
mov
mulb
jmp
add
jg
xchg
fimull
add
lock
xchg
add
sbb
sahf
push
sbb
fldcw
jl
add
arpl
out
mov
xor
fadds
fld
bound
add
and
and
and
stc
inc
add
pushf
test
aam
repnz
xchg
insb
jae
jmp
rclb
jns
add
andl
std
push
orb
in
dec
xor
push
inc
dec
mov
aaa
adc
or
adc
push
dec
add
data16
adc
nop
cld
ds
lahf
jno
sbb
shlb
jge
mov
push
les
sti
mov
ss
add
sbb
adc
into
lret
test
pusha
movsl
mov
mov
push
mov
les
push
mov
repz
jmp
and
sti
stos
sub
jp
xor
inc
push
dec
cmc
xorl
sbb
cmp
sbb
xchg
dec
push
add
pop
pop
les
add
mov
sub
adc
cs
enter
call
add
sbb
push
mov
rep
enter
cltd
test
stos
fstpl
lods
mov
adc
es
leave
add
enter
mov
mov
jp
and
loope
inc
mov
add
mov
out
mov
out
or
aaa
xchg
scas
pusha
add
gs
clc
xor
arpl
aas
lret
pop
mov
lea
dec
iret
andb
aaa
jge
add
ror
loopne
sub
mov
fbstp
jecxz
mov
test
mov
or
xor
sub
mov
addr16
cmpsb
xchg
bound
add
js
adc
popf
mov
mov
jp
add
cmpsl
aam
adc
pop
push
mov
sbb
pop
sbb
add
dec
lahf
sbb
mov
push
stc
push
add
xadd
mov
inc
add
pop
sub
and
fiaddl
push
inc
outsl
cmp
add
scas
or
jge
pusha
add
push
mov
dec
mov
stos
cmp
dec
add
push
cmp
pop
ret
dec
ret
loopne
mov
pop
in
sub
add
mov
rcrb
loopne
mov
xor
push
mov
cwtl
add
cld
mov
mov
cmpsb
add
push
mov
mov
in
jecxz
movsb
sbb
jmp
iret
inc
sahf
cmpsl
es
sbb
add
and
and
jl
or
jnp
loope
sbb
fcmovu
lods
add
mov
mov
cwtl
add
fwait
add
pop
mov
and
insl
cmp
sbb
add
mov
mov
mov
pop
sub
xchg
or
sub
mov
and
mov
xlat
es
loopne
je
hlt
add
fsubrs
add
xor
jle
mov
imul
insb
fs
or
outsl
nop
mov
mov
insb
pop
out
push
lcall
stos
loop
mov
dec
add
outsl
dec
ds
and
gs
ret
rclb
jnp
cmc
push
add
pop
fs
push
mov
repz
dec
pop
aaa
add
fnstsw
jo
mov
xchg
movsb
mov
push
pavgw
add
jmp
mov
add
addb
xchg
dec
lret
cwtl
aaa
or
jbe
jge
push
add
gs
lods
dec
cmp
out
jae
adc
sti
lret
jp
xor
rcrb
mov
jmp
jg
sbb
in
cli
lahf
pop
lret
roll
ret
call
mov
dec
fisubs
pushf
fstps
or
rdpmc
lods
jb
and
push
pop
jae
movsl
insb
cmp
mov
pop
lock
push
das
es
xor
sbbb
shll
jp
cwtl
insl
ds
sti
sbb
shr
add
sub
mov
loop
rcl
mov
jg
add
ss
sub
rclb
xchg
mov
jne
insb
inc
push
add
fstl
add
movsl
cmp
add
fs
add
cmpsl
inc
pusha
imul
fildll
jnp
fwait
mov
es
std
or
mov
lock
fisttpl
push
xchg
add
inc
xchg
mov
sbb
and
mov
add
in
out
add
scas
lock
adc
mov
faddl
pop
mov
xorps
aas
sub
dec
in
mov
xchg
add
aam
pushf
cld
pop
shr
mov
dec
lock
xor
push
pop
pop
sahf
cmp
and
add
cmp
lds
shlb
out
pop
push
insb
and
stos
or
dec
add
add
psubsw
cmp
cmp
add
jle
jnp
bound
add
je
mov
sub
jae
adc
fcomps
shlb
dec
aas
adc
shl
pop
hlt
in
and
xchg
pop
cmpsl
push
dec
mov
shlb
mov
in
fists
lock
adc
mov
dec
push
movsb
sub
push
shlb
mov
ljmp
ret
inc
subl
int
ficoms
push
xor
dec
mov
xchg
call
sub
aaa
push
adc
in
cmp
and
mov
add
shrb
inc
push
and
sub
mov
jg
mov
ds
int3
sbb
pop
add
jl
roll
insl
lods
je
pop
xchg
or
jns
xorb
xchg
push
mov
arpl
bound
push
mov
pop
es
sti
das
add
dec
pop
leave
mov
and
out
xchg
sarb
and
loop
popf
stc
pushf
in
fdivl
scas
shrl
push
add
sub
enter
pusha
add
mov
sub
lea
lods
cmp
icebp
cld
ljmp
jp
xor
gs
and
imul
or
cmp
mov
add
stc
cmp
xchg
add
and
movhps
mov
scas
dec
xor
lds
lret
addb
das
jb
mov
push
mov
mov
je
in
mov
js
add
sub
pop
push
arpl
cmp
add
inc
out
cmp
addb
addr16
jo
push
sbb
filds
add
mov
mov
xchg
cwtl
les
jg
jge
add
jae
mov
add
add
add
jae
cli
sub
and
pushf
jns
pop
jb
sub
mov
inc
lret
push
stos
fimuls
push
adc
jl
push
lret
or
xor
jge
fs
sti
out
lcall
call
push
cmp
test
insl
mov
sub
or
xchg
lea
add
ljmp
aas
sbb
and
ja
test
dec
xor
sbb
sub
mov
pandn
in
fiaddl
testb
fmuls
or
rcr
ret
push
mov
xor
dec
fstl
xlat
adc
push
flds
les
push
or
push
push
mov
pop
clc
inc
scas
inc
inc
lahf
pop
cmp
dec
jmp
jmp
in
js
idivb
pop
test
push
jb
add
repz
ret
inc
sub
sbb
adc
mov
jp
out
data16
add
rorl
cwtl
and
add
cs
shlb
and
xchg
shll
adcb
push
cmp
out
sub
movsl
and
enter
lods
cmp
mov
lods
incb
lcall
roll
out
imul
and
add
push
roll
jg
jo
out
xchg
push
pop
xor
cmpl
pop
repnz
add
adc
cmp
mov
ds
inc
bound
jno
sahf
sarb
push
ja
add
inc
sub
rolb
add
fildl
xlat
xor
pop
add
sarl
fisubrs
jo
xchg
ja
add
lods
xor
mov
mov
push
add
decl
jmp
mov
mulb
in
jle
enter
push
mov
add
add
rolb
mov
cmp
cmp
pop
and
mov
jbe
add
lods
push
test
les
add
fcmovnu
xchg
add
loop
mov
add
nop
jl,pn
sub
xchg
and
incb
lret
add
std
mov
cmp
push
pusha
insb
push
out
adc
add
loopne
mov
scas
push
rorb
pop
add
test
and
pop
ss
aad
jl
rcll
sbb
or
push
xchg
pop
rol
int
jl
sub
adcb
aad
cmc
jne
add
data16
lds
push
rol
loop
push
mov
pop
cs
jo
rcrb
addl
or
sub
mov
jb
adc
cmp
mulb
in
add
loop
test
or
and
popl
xor
jns
rolb
iret
mov
pop
mov
insb
jl
loopne
pop
les
out
nop
mov
add
cld
adc
adc
or
mov
pushfw
add
dec
mov
add
or
and
jmp
push
std
into
ret
cmc
xchg
test
shl
sbb
pop
add
addr16
fcmovnu
mov
or
fmuls
jb
add
test
ds
scas
les
add
add
jne
push
add
jl
inc
and
adc
mov
shrb
decb
clc
fwait
hlt
enter
add
sub
scas
mov
add
icebp
jae
xchg
sbb
add
popf
stos
sub
ficompl
jne
inc
xchg
mov
jbe
andb
push
subb
push
scas
rolb
add
cmc
lcall
add
movsb
pop
and
roll
mov
mov
ja
add
jecxz
js
dec
cmp
int
ss
icebp
mov
jnp
add
add
imul
fcomp
xor
sub
add
inc
out
add
pop
lahf
js
inc
dec
cmp
pop
fisttps
mov
push
inc
fs
lock
mov
imul
sbb
mov
push
adc
pop
rorb
sub
mov
shld
push
push
movsb
add
gs
jbe
jle
cmp
std
add
push
push
jp
xchg
mov
scas
jecxz
clc
lret
and
cmp
test
lahf
dec
outsb
xor
add
pop
in
pop
clzero
leave
sub
pop
imul
push
fdivrs
dec
fisubl
arpl
and
and
and
scas
shlb
push
in
scas
inc
xor
adc
dec
fldcw
ds
or
xchg
clc
lahf
or
nop
and
inc
or
push
push
mov
ret
jo
das
mov
mov
mov
xor
in
add
sub
push
or
adc
mov
cltd
mov
mov
push
sbb
test
lods
and
xor
or
pop
adc
xchg
add
rcrb
roll
fisttps
pop
add
adc
inc
ds
verr
inc
les
fwait
sub
add
push
xchg
rol
dec
jg
and
mov
mov
jb
xor
xor
rorl
xor
cmp
add
test
sub
orl
add
jns
sub
xor
mov
stc
mov
and
in
cli
lahf
add
and
xor
mov
sub
add
out
jno
shl
push
add
add
jnp
sub
imulb
ret
mov
push
add
jle
call
jge
int3
add
leave
rcr
adc
inc
inc
lahf
dec
mov
icebp
lods
or
test
fisttpl
xchg
stos
rcrb
xchg
xor
fs
adc
clc
mov
loopne
add
js
xor
sub
add
daa
pop
ror
cmp
sbb
outsl
jmp
add
fldt
add
lahf
jle
stos
inc
ja
and
jno
shl
int
inc
add
sbb
add
push
fistpll
inc
popa
pop
add
dec
cmc
jne
into
repz
jb
add
mov
dec
addb
cld
dec
sbb
cwtl
jno
out
enter
add
push
into
fldenv
out
xchg
movsl
arpl
xor
xor
mov
mov
push
pushf
cmc
cmp
fwait
xchg
mov
nop
jns
add
mov
xchg
sbb
inc
sbbb
or
test
cmp
mov
xchg
jge
pushf
ss
push
mov
pusha
and
jae
xor
pop
test
or
jb
ret
inc
add
xchg
dec
dec
out
scas
add
push
push
inc
popf
inc
andb
popa
jo
pop
add
in
add
and
out
push
js
and
sub
add
pop
cmp
sbb
push
xor
pcmpeqb
in
clc
jge
mov
out
nop
call
pop
and
push
mov
andl
jecxz
aad
imul
or
in
mov
push
rcr
or
in
mov
push
cld
and
mov
xchg
add
dec
adcb
test
mov
std
test
aas
xorb
pushf
sbb
cld
insb
lea
inc
jno
sbb
sbb
lods
add
cmp
aad
pop
add
or
sbbb
inc
int3
add
cmp
in
repz
mov
or
xor
dec
pop
mov
add
sbb
leave
mov
addr16
outsl
push
lret
psubusb
inc
add
daa
data16
adc
cmp
test
sub
pop
in
push
out
push
rclb
mov
pmaxsw
mov
enter
outsb
data16
push
add
loope
cld
std
add
xchg
into
out
out
adc
xor
sub
cmp
jb
xorb
push
nop
mov
push
lods
mov
add
push
cld
mov
sbb
xchg
mov
and
rclb
into
dec
pop
add
stc
loopne
jae
mov
hlt
xchg
sub
push
add
adc
in
mov
and
call
mov
sbb
add
fidivs
xchg
sub
inc
repnz
mov
mov
sbb
push
lcall
iret
sub
loope
mov
cli
in
ret
lea
and
das
enter
mov
lret
and
pop
or
and
push
nop
imul
push
scas
mov
mov
dec
mov
out
push
std
lret
jns
jns
add
sub
cmp
mov
fcomps
in
rclb
cmp
jge
in
add
loope
and
xor
aas
and
out
subb
add
add
push
jp
add
in
dec
push
iret
xchg
mov
pop
dec
ss
into
gs
and
ds
aad
push
pop
add
mov
repnz
iret
ds
push
xorps
daa
and
out
shlb
mov
pop
xor
out
sub
mov
mov
dec
aam
jl
push
jae
add
daa
sbb
sbb
lods
jmp
pop
popa
in
xchg
hlt
xchg
xchg
mov
and
or
mov
stos
cmp
push
xchg
jl
push
gs
mov
repnz
add
xlat
sbb
ret
mov
add
lock
mov
pop
mov
add
iret
add
inc
xor
mov
cli
mov
fbld
lret
in
std
sbb
jae
sbb
sub
sub
jno
out
lods
rol
add
stos
lods
push
inc
outsb
cli
iret
pop
jo
mov
in
mov
nop
out
push
jo
and
xlat
sub
in
mov
add
loop
out
dec
jmp
push
push
fcompp
lock
movsb
and
ret
add
inc
stc
jns
lock
or
dec
pop
xchg
sbb
lret
push
aas
nop
orb
fcomip
ljmp
pusha
sub
adc
pop
pop
je
aam
add
xchg
add
out
add
lock
add
fwait
mov
loop
js
xor
add
fwait
sbb
mov
push
jle
enter
popa
lods
stos
push
call
mov
icebp
mov
orb
xchg
push
cmpsb
push
jne
xlat
loopne
jnp
sbb
push
add
daa
fiadds
sarb
mov
stc
cmp
scas
sbb
cmpsb
std
add
enter
add
jb
sub
adc
popa
xchg
pop
insl
repz
imul
gs
fadds
loop
xor
scas
add
xor
add
pop
shrb
lahf
add
xchg
jp
dec
lock
cld
mov
fidivs
xlat
lea
add
pop
and
sub
xchg
jnp
add
push
sahf
shl
sub
dec
popl
ficoml
sub
enter
rorb
cwtl
in
add
les
xchg
gs
add
neg
jl
mov
aaa
cltd
xor
push
mov
pushf
in
sub
cmp
push
and
sbb
cmp
fwait
orb
adc
and
mov
fisttpll
aad
icebp
sbbl
jg
sbb
sbb
inc
hlt
lods
inc
nop
xor
xchg
push
cmp
sub
shlb
inc
mov
push
fsubrl
negl
out
aam
xchg
mov
out
inc
stos
pop
lret
push
or
pop
sbbl
xor
dec
jo
mov
pop
add
add
push
cmc
roll
pop
testl
xor
ja
aaa
dec
outsl
popf
rolb
in
lock
add
or
push
roll
fsubrl
dec
jmp
dec
and
cld
flds
mov
ret
jl
arpl
add
mov
cmp
xor
add
ror
fsubs
push
addb
iret
ret
ds
rcrb
ja
ret
iret
cs
lods
pop
mov
shrb
shl
add
mov
outsb
dec
adc
jne
and
inc
pop
pop
xchg
fs
sahf
stc
icebp
iret
mov
jg
add
sub
add
dec
and
or
inc
fs
movsb
xchg
fwait
nop
int3
je
or
mov
and
sub
dec
cmp
add
stos
mov
les
cltd
out
repnz
push
cmp
imul
pop
pop
xchg
sub
imul
xor
ja
and
in
inc
inc
movsb
sahf
add
out
shlb
rolb
mov
sbbb
cmp
xchg
out
dec
inc
sahf
loope
aam
and
add
fistps
insb
repnz
add
pop
sbb
bsf
mov
pop
out
pop
cwtl
mov
dec
add
je
mov
lock
add
leave
pop
xor
test
andl
insl
and
gs
and
mov
cmp
sarl
les
or
sub
imul
push
add
dec
and
push
aaa
incb
push
mov
aad
sarb
cmpsb
daa
out
sbb
xchg
add
mov
repz
cmp
push
or
mov
addr16
mov
add
in
jle
add
cli
insb
mov
mov
or
cwtl
lock
add
and
pop
nop
mov
cmp
or
gs
jnp
stos
cmp
add
push
sbb
jmp
xchg
cmp
and
add
jge
dec
xor
arpl
iret
aad
push
mov
or
loopne
lds
scas
scas
mov
adc
inc
add
cltd
out
and
push
pop
pusha
aad
add
pusha
imul
mov
xchg
sub
fcompl
add
add
adc
add
jmp
iret
pop
js
add
add
pusha
sub
add
inc
popa
addb
add
pop
jno,pn
rcrl
into
push
add
pop
in
push
add
or
test
jl
cmp
jg
inc
repnz
decl
popa
fadds
insl
das
and
test
mov
call
cmp
xor
mov
add
mov
dec
jns
pop
inc
add
inc
inc
loope
xchg
mov
je
pop
pop
xor
into
decb
jo
mov
stos
xorb
adc
sbb
push
cwtl
mov
add
push
sbb
ja
sbb
idivb
lock
mov
mull
or
xor
sbb
add
in
fs
decb
add
lods
xor
add
scas
stc
push
mov
sbb
insl
icebp
movsb
fcomp
nop
out
xchg
addl
xchg
jo
lret
lahf
pop
popf
add
push
movsl
push
jb
imulb
xsave
mov
das
push
sub
gs
adc
in
sti
xchg
das
add
adc
xlat
mov
cmp
dec
xor
insb
imul
adc
add
enter
xor
inc
dec
mov
in
dec
add
cmp
mov
test
insb
push
cmp
gs
dec
call
lahf
in
pop
cmp
shlb
imul
jnp
mov
mov
cmpsb
add
jl
stos
shrb
es
icebp
pusha
sarb
jp
add
paddsb
rcrb
clc
pop
leave
push
jae
test
aaa
movsl
call
ret
lahf
lcall
push
int
stc
add
add
test
add
xchg
and
pop
les
push
pop
test
mov
int
mov
adc
sbb
into
pop
xchg
aad
sub
pop
jg
idivl
pusha
and
and
or
xchg
push
or
jbe
xchg
sub
in
pusha
les
and
sbb
add
lcall
leave
repz
mov
scas
sbb
es
xchg
lret
jg
iret
sahf
add
push
in
xchg
sti
mov
pop
add
and
popf
inc
bswap
mov
jae
sub
fcmovnu
push
int
mov
ss
cli
bndstx
pop
cs
icebp
aaa
fs
jno
add
cli
es
test
sahf
adc
add
adc
and
lcall
add
mov
add
out
dec
and
pushf
sbb
sub
add
es
mov
inc
nop
pop
test
add
or
fisttpl
or
addr16
mov
jns
idivb
sbb
or
insb
adc
pop
cs
add
scas
or
mov
cmp
push
andb
popa
sbb
sub
sbb
frstor
add
aaa
pop
sub
dec
sbb
adc
inc
cmpsb
add
andl
add
in
push
mov
out
dec
inc
mov
cli
movsl
jns
add
adc
pop
sub
mov
cmp
pop
xor
add
fisttpl
inc
cmc
mov
scas
pop
sbb
jo
xchg
pop
shrb
cltd
nop
insb
or
sub
mov
or
fcompl
adc
enter
sbb
inc
daa
ror
jle
int
loop
je
lock
mov
jmp
xchg
inc
jecxz
in
dec
mov
add
daa
ss
cmp
cmp
mov
jns
mov
out
pop
outsl
jb
jne
daa
cmpsb
cmp
adc
sbb
mov
push
add
adc
sahf
popa
cs
insb
add
pop
enter
mov
add
flds
cmp
lds
out
and
inc
sbb
mov
rol
jecxz
push
sbb
lret
or
mov
shrb
add
cld
pop
ljmp
lcall
testl
into
mov
add
enter
xchg
dec
push
and
xchg
call
xchg
test
in
mov
add
in
cmp
adc
add
je
jns
add
xchg
hlt
movsb
dec
addl
mov
jae
ret
mov
push
add
pop
mov
mov
add
add
in
rcr
jmp
enter
rclb
mov
add
inc
in
mov
jo
inc
cmp
movl
cld
sbb
adc
cmpsl
les
rcl
jbe
dec
push
fnstenv
and
pop
int
adc
insb
sbb
je
test
popf
cmp
inc
inc
push
dec
jle
xchg
pop
idiv
push
inc
add
mov
add
and
sub
sbb
aas
push
ror
mov
mov
mov
sbb
sbb
outsl
push
and
inc
cmp
cmp
xchg
xchg
jo
fists
mov
lods
inc
xor
les
sbb
iret
cmpsb
andb
jecxz
fbld
cmp
mov
add
scas
push
repnz
mov
jge
add
jno
and
rolb
inc
mov
fcmovnb
dec
sbb
sbb
or
jl
jp
shlb
mov
jb
adc
cs
jo
xchg
scas
jg
rolb
addr16
jnp
outsl
xchg
cltd
add
xchg
sbb
gs
jp
add
call
divl
pop
jecxz
in
insb
shll
push
push
mov
pop
popf
add
cmp
mov
pop
cmp
adc
mov
shl
jb
dec
inc
mov
sub
push
add
lret
mov
jg
ret
clc
pusha
insb
add
push
sbb
or
fidivrl
ja
adc
mov
add
cltd
xchg
add
jo
mov
adc
add
mov
stos
jl
sub
pop
lret
out
adc
jb
std
fisubrl
cmp
mov
add
popf
test
jbe
int3
cmp
incl
stos
enter
insb
mov
cmpb
mov
movsl
cmp
inc
dec
mov
movl
xchg
hlt
add
adc
fs
data16
mov
xor
popf
loopne
repz
sub
mov
xor
sbb
es
inc
loopne
mov
sarl
mov
inc
or
jmp
mov
mov
inc
in
xlat
cmp
adc
rcl
add
add
inc
add
orb
iret
pop
gs
dec
push
loopne
or
aad
or
add
mov
cltd
and
mov
jne
push
dec
mov
arpl
subb
jns
add
lock
add
pop
out
adc
pusha
sub
xchg
mov
test
sbb
push
and
inc
push
test
jbe
sahf
push
lds
outsl
add
pop
xor
hlt
push
cld
clc
sbb
std
xchg
mull
rcrb
mov
inc
sub
and
ljmp
lock
add
es
cmp
adcl
add
cld
out
sbb
xor
jo
lods
jns
pop
hlt
roll
clc
je
aas
sub
inc
adc
jno
loopne
lret
xor
js
cmp
xor
sbbl
pop
pop
cmp
adc
insl
fsubr
aas
push
in
add
fiadds
fs
sbb
orb
out
sarb
pop
push
fwait
aam
add
movsb
xchg
sbb
push
jle
jae
and
add
sahf
mov
fwait
or
loop
pushf
add
insb
inc
cli
loop
jnp
add
repz
add
fdivrs
add
popf
dec
add
fcomp
pop
mov
add
lea
and
test
pushf
pop
in
dec
stos
mov
mov
into
cmpsl
add
mov
mov
mov
add
lcall
jmp
add
insb
xchg
sbb
inc
jp
push
enter
add
imul
add
fsubp
rcr
jmp
shl
adc
sub
out
shlb
add
xor
cmpsb
lods
mov
shl
or
cltd
lods
add
scas
cmp
mov
std
mov
add
cld
push
in
addr16
mul
fimull
ss
fbld
xor
pop
stc
and
adc
sub
adc
add
cld
fcmovnbe
subps
jae
cld
add
sub
mov
std
in
iret
sbb
or
xor
pop
repnz
or
scas
pop
leave
and
pop
rcrb
dec
lret
cltd
lahf
adc
and
push
movl
imul
insl
mov
ret
in
test
add
xchg
or
enter
add
sub
insl
outsl
stos
inc
add
cmp
push
rol
adc
xor
outsl
scas
dec
cmp
pop
mov
jae
test
add
addr16
cs
sarb
imul
dec
mov
jbe
add
aaa
dec
xor
sbb
add
nop
add
xor
std
push
repnz
add
lret
adc
push
nop
mov
sbbb
cmp
xor
mov
and
cmp
jle
out
enter
jo
repz
fsubl
clc
lods
add
imul
add
shl
add
rdtsc
jnp
mov
cmpsl
xor
into
pusha
cli
test
add
std
mov
xchg
push
push
ds
int3
cmpb
or
sbb
cmc
iret
adc
divl
jae
adc
in
vdivsd
push
jno
movl
pop
js
adc
cmp
mov
or
or
push
jmp
sbb
add
mov
and
mov
adcl
pop
mov
mov
jns
or
xlat
add
and
int
add
movsl
ret
jno
dec
pop
leave
xor
xchg
add
adc
sbb
and
rclb
xor
daa
jo
inc
int
rcrb
add
sub
sub
mov
pusha
shlb
loopne
movlhps
mov
jge
add
cs
out
add
cmp
dec
or
aad
fstl
js
add
repnz
push
arpl
and
inc
int3
cmc
lcall
iret
add
pop
pop
push
stos
push
add
popf
shrl
insl
and
sub
cltd
fstpl
jne
dec
outsl
fiaddl
rorb
and
or
sahf
push
push
mov
adc
dec
fs
in
rorb
in
adc
mov
fdivrl
add
rcrl
cmc
pop
dec
rorb
and
inc
scas
add
jge
filds
popf
cli
or
jg
dec
adc
mov
addl
pop
scas
fldt
add
pop
pop
mulb
fadds
push
cmp
jmp
xchg
add
lods
inc
mov
and
popa
test
movsl
scas
pop
or
mov
pop
mov
fsubrl
lahf
push
adc
sbb
rolb
mov
aaa
add
inc
xchg
iret
sub
and
lock
int
push
les
add
jb
adc
call
pop
mov
jl
pop
rorl
popa
push
cli
jecxz
mov
jae
xchg
int
xchg
xor
cmp
outsl
test
inc
movsl
add
sti
aam
xchg
pop
clc
in
mov
mov
push
in
and
xlat
in
jmp
enter
or
shll
iret
push
jl
in
jecxz
add
loopne
xor
xor
add
add
into
js
sbb
xchg
scas
shll
push
dec
pop
inc
sbb
inc
mov
mov
ret
sbb
dec
mov
lret
fdiv
imul
and
fcom
jl
add
rolb
jecxz
add
aam
cmp
and
and
push
adc
gs
cmp
push
outsb
push
xor
cli
sbb
arpl
xor
jnp
fiadds
xchg
mov
add
cmp
add
cmpsb
cmp
rolb
ret
push
sbb
mov
cmpsb
and
clc
xor
pop
push
int3
jne
xor
add
pop
out
in
insb
adc
frstor
popf
shlb
fwait
scas
sbb
ret
loopne
arpl
xor
xor
test
add
push
dec
xchg
rolb
or
add
dec
cmpsb
movsb
jecxz
mov
push
xorb
loop
add
cld
add
add
push
outsb
in
and
or
clc
loopne
add
sbb
xchg
pop
lahf
jle
cmp
pop
pop
dec
add
dec
or
mov
pop
aaa
icebp
lods
add
pushf
push
mov
rorb
add
rolb
ja
and
add
das
xlat
cmp
mov
push
fs
inc
inc
call
imul
scas
cmp
pop
adcl
and
je
lar
imul
ljmp
add
cli
scas
clc
rcll
inc
andl
add
addl
mov
xchg
jo
adc
jnp
arpl
das
repnz
jecxz
add
out
call
aas
pop
cmpsb
orb
cmp
sub
add
cmp
divb
jge
add
nop
pop
repnz
fwait
add
push
or
sub
adcb
add
leave
fs
add
movsb
arpl
add
shll
scas
xchg
xor
inc
cwtl
cmp
or
aad
add
sti
sub
push
push
or
add
es
sbb
sbb
ror
popa
mov
sbb
jl
cmp
adc
jmp
jmp
popf
add
loop
inc
pusha
add
outsb
je
jno
mov
jle
cwtl
push
mov
dec
pushf
mov
xor
lods
gs
movsb
jb
lret
in
inc
pop
dec
jl
out
cmpsb
faddp
stc
imul
lret
mov
sbb
movsb
into
mov
add
rolb
dec
mov
jne,pn
cmp
push
sbbb
pop
xchg
pop
pop
stc
push
sarb
pusha
repz
out
inc
ret
mov
add
and
shl
pop
loopne
js
imul
out
leave
daa
xor
jp
movsl
mov
push
mov
sbb
insb
add
pusha
ror
fs
icebp
pop
cmp
lret
stc
sub
outsl
shlb
add
cwtl
mov
dec
stos
cld
out
scas
xor
sbb
movsl
inc
es
xorb
xor
xlat
push
xor
imul
in
out
arpl
aad
jecxz
xchg
fsts
push
dec
cmp
cmc
cmp
sbb
xor
ljmp
cli
xchg
mov
pop
dec
fsubr
jno
add
jne
pop
mov
adc
orb
add
pusha
in
popf
xchg
add
pop
dec
popa
add
pop
mov
int
xchg
inc
sarl
sarb
nop
inc
fwait
sub
add
dec
push
mov
mov
and
call
sar
nop
push
mov
add
out
mov
pop
cmc
dec
add
enter
xor
adc
add
aam
das
lret
mov
ss
je
cltd
sbb
bound
or
stos
push
adcb
addl
int
fdivrp
add
cmp
jae
xor
inc
push
pop
shll
adc
mov
addb
and
add
ljmp
pusha
or
lahf
and
jo
or
sbb
pop
cmp
in
sub
sti
pop
jnp
jle
lahf
xchg
mov
cmp
cmp
clc
ss
repnz
xchg
push
test
aad
addb
and
push
and
xchg
pop
enter
mov
mov
mov
add
outsl
push
mov
out
sarb
xlat
add
cs
xchg
sbb
push
mov
jg
nop
add
test
outsb
xor
add
test
push
jecxz
cli
inc
int
inc
ss
add
leave
pop
inc
add
pop
inc
lods
call
dec
cli
movsb
add
pop
out
mov
add
and
push
cmp
lret
enter
mov
cli
in
xor
lret
adc
xchg
dec
cmp
add
ss
fldl
jg
mov
lds
push
sub
loop
or
adc
rorl
add
decl
mov
mov
add
xlat
or
fiadds
sbb
and
add
into
test
xchg
push
fildl
push
loope
or
dec
pop
xchg
add
aam
rep
or
jle
add
idivl
add
jp
or
jae
inc
mov
scas
add
ja
mov
push
xchg
push
clc
test
cmp
add
and
stos
cs
jp
sub
cmp
test
dec
dec
sbb
aad
mov
insl
adc
xor
in
std
or
addb
push
mov
stc
cmp
mov
push
es
sub
sbb
test
stos
pop
stc
bound
fsubs
loope
mov
ret
mov
xor
jo
out
push
push
push
xchg
add
hlt
in
or
sub
rolb
add
in
inc
pusha
add
adc
into
shl
insb
ret
popl
add
in
add
adc
mov
xor
jno
dec
sarb
adcb
aad
cmpsl
dec
xchg
enter
add
ffree
mov
xchg
pop
cld
clc
mov
xor
mov
adc
out
mov
je
xor
add
in
test
fldcw
daa
pop
aam
jno
xorl
inc
pop
mov
jns
add
into
scas
add
je
mov
and
add
sbb
into
mov
dec
lds
cmp
pcmpeqw
add
cmp
clc
add
mov
xor
cmp
enter
dec
mov
add
and
in
in
imul
lahf
and
pop
fldt
into
dec
or
adcb
mov
sub
cmp
lcall
rclb
sub
cmc
dec
and
outsl
test
stc
push
add
test
shrl
add
insl
jae
adcl
dec
scas
mov
mov
daa
rorl
jno
adc
addr16
shrb
mov
movhps
loopne
pop
push
lcall
mov
and
movsb
jo
push
fscale
bound
imul
inc
jno
add
sbb
push
jae
int
inc
dec
test
mov
sub
jbe
xor
mov
sub
xchg
fldl
mov
mov
mov
add
cli
in
sub
add
jno
inc
data16
dec
adcb
cmp
adc
sbb
inc
popa
enter
stc
in
fidivrl
sub
mov
inc
jbe
outsl
sbb
mov
xor
add
add
sub
push
daa
fsubs
inc
cmpsl
and
cmp
inc
rorb
fsubs
test
cmp
push
pop
test
add
rorb
aaa
sub
xor
mov
inc
mov
xchg
xchg
adc
and
loop
and
add
adc
and
or
out
inc
test
loop
ljmp
push
fld
dec
es
addr16
and
mov
lock
or
aam
test
into
cmp
sbb
mov
add
pop
loop
lods
imul
mov
add
lock
popf
mov
push
xchg
sbb
cmp
js
les
clc
ret
pop
adc
andb
and
fmulp
sbb
mov
add
add
jae
cltd
hlt
sti
sbb
xor
jge
pop
add
insb
adc
xchg
outsl
pop
dec
out
ds
in
clc
add
addl
imul
push
sbb
mov
sub
add
dec
lea
addr16
inc
pop
mov
pop
cmp
repz
add
out
stos
cmp
fdiv
xlat
add
in
sub
ljmp
xchg
scas
push
mov
fmul
xor
orb
cmp
outsb
cltd
push
adc
mov
std
add
jp
or
int
sbb
ret
aaa
rol
cwtl
add
pop
jo
cli
out
in
mov
fwait
cli
xor
in
shl
lcall
xchg
cwtl
popf
bound
pusha
xchg
enter
out
fsubs
in
js
imul
test
xchg
push
int
rolb
pop
ret
dec
push
add
std
repnz
and
adc
xor
test
iret
or
movl
nop
inc
mov
add
cld
imul
addr16
aam
aad
cs
pop
leave
icebp
stos
add
inc
dec
loope
das
js
or
pop
adc
xchg
add
mov
cmp
or
xor
mov
inc
cli
add
mov
jmp
xchg
jo
pusha
inc
or
push
sbb
mov
in
fiadds
inc
movsb
loopne
hlt
xchg
test
inc
pop
sbb
mov
imul
add
shrl
add
or
mov
push
sub
mov
call
inc
and
arpl
xchg
lds
inc
out
lret
mov
in
mov
mov
loope
test
pop
push
cmp
pop
sub
imul
jns
mov
xor
ja
fsts
mov
add
add
dec
jecxz
scas
mov
dec
add
adc
mov
aaa
shrb
add
mov
adc
in
and
jge
mov
add
cld
jg
push
jp
stos
add
jle
cwtl
pop
rolb
div
aas
adc
add
fwait
lods
les
sahf
scas
pop
insw
jo
jnp
jns
inc
mov
adc
addb
or
fdivs
in
stc
add
jmp
aam
loopne
repnz
add
cmp
lods
xor
pop
clc
add
pop
mov
divl
jecxz
add
sti
sub
inc
or
rcrl
inc
imul
add
sub
pushf
xchg
stc
sub
add
mov
and
mov
add
addr16
add
leave
shlb
sti
in
std
orl
sbb
add
popf
enter
in
push
imulb
lcall
push
lods
adc
call
std
adcb
xor
mov
dec
mov
lea
sbb
adc
fsts
add
mov
jl
nop
es
add
inc
sbb
add
cmp
xlat
aas
movsb
mov
loopne
cmp
stos
scas
add
mov
sbb
or
imul
fwait
mov
dec
jge
jb
hlt
lock
enter
pop
mov
jbe
inc
add
cld
nop
jp
add
jb
jl
test
dec
sbb
pop
notl
imul
sub
dec
or
mov
dec
int3
sub
test
pop
dec
cmp
add
jb
jp
adc
add
lds
rcrb
pusha
out
dec
sbb
imul
adc
mov
sti
rclb
jno
and
add
out
cwtl
mov
cmp
mov
pop
add
jo
add
dec
lret
or
lds
in
imul
sub
jb
mov
add
pusha
add
add
adc
lret
add
cld
addb
iret
mov
add
add
lods
sbb
add
xchg
sub
mov
stos
inc
ret
jl
fucomi
in
cmpsb
or
lock
fs
mov
sbb
ljmp
jecxz
arpl
cmp
push
and
cmp
add
cmp
pushf
adc
test
push
add
scas
sarl
inc
add
dec
and
pop
sbb
js
scas
cld
and
dec
lcall
xchg
push
shl
out
xchg
addr16
movsb
or
inc
mov
shlb
add
lods
xorb
call
fcmovb
xchg
jae
add
stc
jp
lock
dec
sahf
enter
mov
lret
pop
std
pop
in
adc
pop
pop
sbb
add
pushf
adc
repnz
add
loop
xor
es
or
cmpsb
nop
adc
shll
cmc
int3
push
mov
dec
jnp
bound
sahf
push
pop
mov
fs
inc
add
or
push
mov
mov
jbe
repnz
mov
inc
aad
cmp
pushf
enter
imul
pop
gs
sbbl
hlt
mov
inc
mov
pop
add
sbb
sub
add
mov
add
xchg
adc
jbe
add
call
pop
add
pop
lret
mov
xor
xchg
add
jo
add
nop
sarb
sbb
add
xor
add
jbe
std
sbb
jmp
vmwrite
aad
add
lret
in
push
dec
imul
mov
in
push
push
cltd
cmp
dec
cmp
lock
imul
add
xchg
add
push
inc
mov
lcall
and
mov
adc
and
cli
xchg
mov
fwait
and
jge
add
dec
dec
jle
mov
in
clc
jp
bound
int
repnz
add
xor
jns
lret
inc
pop
mov
pop
xchg
mov
outsb
and
bnd
sbb
pop
sub
clc
ja
inc
add
in
ljmp
xor
pop
add
push
shl
jmp
jo
push
mov
add
outsl
or
mov
mov
jp
pop
cli
xor
mov
inc
xor
or
in
lds
add
mov
push
aaa
fxch
add
pop
cmp
sub
sahf
pop
add
push
in
hlt
ja
add
popf
imul
outsw
test
into
repnz
adc
or
hlt
imul
loop
mov
add
pop
mov
mov
fmul
pop
xchg
jno,pt
inc
sahf
shlb
push
xor
jnp
mov
inc
xchg
xchg
jl
add
push
cs
dec
fnstsw
add
nop
ljmp
sub
add
lahf
std
pop
jbe
add
mov
rolb
mov
sub
out
ret
push
cwtl
mov
rolb
add
fcoml
stos
jae
je
push
xlat
rclb
cmp
xor
imul
add
aad
lret
sub
out
test
or
std
push
push
add
xchg
add
cmpsl
add
jbe
imul
lret
out
pop
into
movsb
xor
adc
pushf
xor
je
jge
sub
mov
inc
push
int3
add
imul
xor
add
stc
icebp
test
sbb
cmc
jmp
lock
mov
fwait
out
cmp
pop
xchg
mov
sub
push
mov
subb
jle
je
aad
and
pushf
or
mov
movlps
add
lret
pop
mov
cmp
xchg
and
hlt
les
mov
pop
in
test
mov
pushf
xor
cmovs
dec
add
andl
idivl
fwait
and
hlt
shl
pop
mov
pop
cmp
mov
dec
lcall
push
jae
lret
sbb
lds
push
cmp
mov
paddsw
fildl
popa
dec
ret
pop
add
outsl
cmp
cmp
aam
add
test
clc
jl
add
jmp
push
cmp
movl
inc
xchg
loopne
cmpl
lock
mov
add
sbb
add
lret
mov
aad
sub
hlt
cmp
adc
add
mov
or
xchg
cmpb
pop
add
push
stos
aaa
cmc
mov
idivl
fisubl
push
adc
jo
inc
shll
out
adcb
add
aas
mov
add
std
cmpsb
or
les
insb
or
adc
icebp
and
xchg
dec
mov
insl
add
cmp
push
loop
cld
push
add
mov
clc
mov
mov
lds
jno
sbb
mov
testb
mov
inc
fsubrs
cmpsb
add
dec
xor
mov
inc
cmp
dec
sbb
and
outsb
or
pop
dec
mov
jno
sbb
add
push
and
push
add
test
or
jg
mov
and
add
xchg
ljmp
shll
mov
and
or
loopne
dec
cld
mov
out
jp
icebp
fs
insl
or
push
pop
mov
and
hlt
push
mov
mov
stos
test
aaa
call
rorb
jno
adc
inc
out
pop
sbb
cmpl
sbb
push
test
aas
jecxz
sub
mov
add
cmpsl
int
cmc
daa
out
add
inc
popf
cmp
and
mov
jbe
notb
mov
inc
add
mov
sub
or
jmp
int3
cltd
nop
pop
add
pusha
std
or
popf
pop
loopne
add
xor
sbb
cmp
add
lcall
movsb
arpl
xchg
add
andb
inc
mov
push
mov
negb
int3
pop
jg
movsl
add
xor
in
nop
cltd
inc
mov
rclb
pop
mull
xor
lret
sbb
adc
xchg
iret
xor
cltd
push
pop
or
inc
adc
or
repnz
add
outsb
mov
jmp
bound
mov
inc
jg
add
pop
add
test
repnz
movsb
push
in
add
sub
dec
jp
add
cmp
jmp
ds
test
push
fldl
sbbl
and
sub
into
loope
ja
mov
xorl
add
push
cmp
out
xlat
jle
sub
out
outsl
push
ljmp
ja
add
xor
inc
mov
adc
cmp
pop
arpl
mov
ret
mov
insl
mov
movb
push
std
cwtl
shl
xlat
rcll
jae
dec
xchg
pusha
sub
es
pop
fisttps
dec
dec
pusha
lods
xchg
stos
imul
or
cld
enter
inc
pusha
xchg
add
add
or
inc
mov
addps
addr16
sbb
or
jp
leave
sbb
sbb
mov
pop
popf
xor
ret
negl
push
sub
andl
in
xor
je
fst
inc
pop
lret
idivl
adc
scas
in
add
mov
popl
adc
mov
fiadds
pop
addl
cmp
test
fcoms
cmp
inc
add
inc
fisubs
jo
jb
scas
adc
cmc
lahf
add
fs
sub
in
lods
cs
inc
js
sub
mov
sahf
or
or
push
push
popf
pop
shrl
inc
mov
cld
in
add
mov
add
loopne
sysret
mov
pop
jl
out
jns
add
jle
dec
cmp
xchg
pusha
mov
lock
out
stos
adc
push
nop
sub
test
mov
out
adc
push
add
js
xchg
lahf
out
stc
mov
enter
cmc
push
arpl
mov
xor
daa
or
rclb
xchg
dec
mov
push
and
shl
mov
mov
xchg
sbb
or
jo
nop
and
inc
cmp
negl
es
sbb
and
mov
xor
xor
sbb
cmp
jne
cmp
xor
mov
xor
sbb
test
jne
lea
fadds
mov
add
fwait
push
xchg
out
in
sub
loopne
sbb
addl
mov
and
ret
jl
and
rorl
or
adc
fcoms
es
push
cs
jae
fcoml
out
push
adc
dec
or
pop
test
xor
xchg
aas
sub
mov
jl
xor
fsts
mov
daa
xor
popa
mov
inc
mov
sarb
push
push
in
and
pop
jle
adc
aaa
shlb
add
push
int
test
js
push
iret
rep
je
adc
outsb
sti
dec
sbbb
rorl
mov
mov
lret
std
lahf
mov
in
add
or
inc
cltd
jge
stos
clc
test
les
mov
sub
stos
cmp
sbb
mov
gs
sbbl
jb
scas
fidivrl
add
sbb
clc
add
inc
cmp
lcall
aas
sub
push
int
xor
jne
adc
adc
jl
push
push
inc
je
add
les
stos
bound
and
mov
adc
mov
push
mov
sub
xchg
out
fsubs
add
mov
xor
and
icebp
dec
pusha
mov
stos
pop
ret
add
int3
and
xor
fwait
aad
dec
or
add
scas
xlat
ret
cli
xor
jb
add
leave
in
add
ret
push
inc
div
insl
jnp
add
push
lds
inc
or
imul
push
inc
add
sub
add
popf
push
push
roll
pop
jecxz
and
mov
jp
call
cwtl
imul
xchg
cmp
or
sub
sbb
add
adc
roll
jecxz
dec
push
sti
add
mov
xor
lahf
sub
into
cmp
or
in
test
mov
pop
fsubrl
add
rol
or
push
popf
sbb
pop
stos
out
pusha
sbb
and
mov
jns
or
push
xchg
testb
and
out
cmpsb
jmp
sbb
jno
mov
mov
xor
je
lods
fbstp
pusha
jns
add
andb
jns
dec
adc
add
sub
add
repz
pop
add
cmc
jmp
push
add
call
add
stc
push
jne
mov
xor
je
ja
push
adc
pop
jnp
add
shll
add
hlt
or
mov
subl
push
in
jbe
xor
pop
movsl
jp
add
iret
mov
out
jg
dec
push
pop
xor
pop
pop
cs
and
scas
sbb
icebp
idivb
sbb
cli
fadds
jmp
push
mov
add
sub
or
sbb
in
inc
push
pop
add
cltd
push
cmp
cmp
inc
dec
clc
add
mov
xor
or
lret
cmp
xchg
xor
faddl
adc
xor
xor
push
mov
dec
mov
ja
dec
fs
xor
inc
clc
or
pop
add
cmp
add
sub
incb
dec
fcomi
fcmovbe
jecxz
dec
add
sub
add
aad
mov
popf
xor
add
fdivrs
add
lock
add
sbb
scas
adc
adc
insl
and
mov
ror
movsb
roll
aad
mov
mov
data16
cmp
cmpsb
add
cmp
je
pop
mov
xchg
aad
lret
xor
in
and
xchg
add
cwtl
add
pushf
xchg
add
fcoms
nop
pushf
dec
mov
aad
popf
loopne
subb
lds
es
pop
mov
add
aas
jae
mov
popf
fwait
in
scas
sbb
insl
pusha
add
test
test
mov
mov
cltd
icebp
cmp
add
jno
or
or
sbb
jecxz
out
push
sahf
xchg
and
add
sbb
int
fidivl
push
nop
popf
add
test
dec
sahf
fadd
dec
add
mov
pop
add
or
fwait
stos
mov
das
mov
add
call
xor
cmp
lods
repz
jo
ds
inc
add
cmp
add
add
leave
add
fbstp
repz
jl
mov
rorb
rclb
rorl
and
push
jne
xchg
add
xor
data16
cmp
cmp
pop
sub
sub
xchg
js
std
sub
movsb
scas
add
dec
int3
add
jnp
push
add
pop
jecxz
loope
mov
iret
jb
and
pushf
lret
push
adc
mov
sbb
push
imul
lahf
pop
pusha
sbb
lret
je
lock
pushl
pop
shlb
add
push
jl
bound
cmp
pop
mov
int
pop
jno
or
sbb
jmp
inc
test
or
add
inc
mov
out
xor
out
lock
in
add
cmpl
add
shlb
jbe
loope
rclb
mov
push
jecxz
outsb
and
lret
cmp
ljmp
jmp
pop
subl
mov
mov
ja
imul
jmp
sub
rolb
outsl
and
neg
repz
add
inc
stos
jb
cmp
icebp
add
fistl
std
aam
lret
inc
jns
psrld
add
add
sbb
fiaddl
fstps
pusha
add
lea
and
xchg
call
das
xchg
add
jo
aam
popf
rcll
dec
xchg
mov
outsl
js
add
mov
jo
or
cmp
cmpb
mov
fsubrs
insl
loopne
pop
sub
aam
inc
cwtl
add
sahf
sbb
push
cmp
or
iret
mov
scas
outsb
pusha
ja
fsts
add
nop
cmpb
js
cmp
inc
sbb
cld
add
xor
cmp
js
xchg
xchg
andl
push
sub
movsb
and
iret
add
sbb
mov
or
push
add
xchg
dec
pop
mov
mov
push
mov
mov
jp
insb
loope
sbb
incl
jbe
mov
cwtl
fisubrl
call
out
pushf
arpl
jae
jns
add
popa
cmpb
inc
push
adc
adc
or
and
inc
inc
jp
add
mov
add
cmp
dec
dec
outsb
mov
sar
sub
xchg
add
inc
cmc
mov
push
testl
pop
jns
add
pop
fcoms
xchg
lds
sub
jne
rclb
sub
push
cmp
or
fmuls
add
push
bound
pop
cmc
add
xchg
xchg
ret
mov
mov
mov
xor
ret
data16
or
dec
mov
mov
cmp
add
jno
clc
shlb
add
jecxz
cwtl
pop
out
addr16
inc
xor
sub
or
lods
add
pop
sahf
stc
push
push
pop
add
dec
pop
sbb
in
add
xor
push
add
mov
test
or
xor
out
je
out
push
lods
test
sbb
add
and
fisubs
and
je
jle
nop
stos
push
sub
pop
add
shrl
cmpsl
aas
or
add
mov
idiv
push
sub
mov
inc
loope
movsb
in
jecxz
or
mov
xchg
add
call
and
mov
sbb
mov
loope
add
jnp
clc
fsubrp
add
int3
or
sbb
mov
pop
xor
jo
ljmp
lock
inc
iret
pushl
in
add
cltd
adc
scas
jo
shlb
gs
fmull
inc
fbld
cltd
add
sbb
xor
xor
or
scas
scas
mov
xor
cmpsb
ret
adc
cmc
rclb
add
stc
cmp
xor
xchg
xchg
loop
add
lahf
mov
mov
test
xlat
sahf
jae
jo
sub
fsubrl
dec
arpl
and
xor
cmpsb
movsb
fsub
pop
push
aaa
add
bnd
dec
pushl
jae
dec
mov
mov
sub
pop
mov
adc
dec
xchg
dec
cmp
rolb
xchg
dec
jb
inc
jle
outsb
add
xchg
loope
test
and
incl
push
mov
arpl
js
jnp
add
hlt
int3
shll
pop
push
or
jle
jbe
aas
loope
test
andb
jp
roll
mov
lods
sub
mov
aaa
adc
orl
mulb
mov
xor
and
add
or
js
inc
daa
add
dec
jecxz
or
mov
fcomi
addb
add
movsb
in
mov
in
push
dec
cmp
xor
push
movsl
jge
mov
lock
mov
cmp
xlat
cmpb
mov
pop
jle
sahf
add
mov
mov
pop
enter
insb
lcall
or
and
adc
daa
nop
add
icebp
cmp
push
jb
popf
add
xor
js
stos
cmp
dec
ret
and
or
cmp
pop
add
sub
movzbl
jno
outsl
dec
mov
aas
insl
adc
mov
lods
pusha
in
add
test
dec
and
cs
mov
jns
add
addb
inc
andl
and
test
add
pusha
ja
pop
cli
pusha
adc
dec
pop
add
testl
je
add
rcl
out
add
outsb
cmc
add
jl
pop
das
push
cmpsl
add
or
cmp
pusha
ljmp
fildll
xchg
jp
mov
insl
loop
stos
das
lds
jno
or
leave
add
icebp
push
pop
std
call
add
push
dec
mov
push
cmp
inc
inc
mov
adc
stos
sbb
repnz
xor
push
cmp
lcall
lcall
pop
push
bound
addr16
cmp
and
popf
pop
jno
jecxz
fs
push
es
mov
pop
cmp
in
pop
mov
jp
loope
mov
add
out
and
and
cmp
dec
out
add
push
or
sbb
fbld
pop
add
inc
dec
test
stos
sbb
adc
fdivs
and
stos
pop
push
and
pop
fidivrs
cli
or
push
pop
aas
sarb
stc
rcrb
iret
pusha
dec
adc
push
add
cmp
movups
dec
test
in
hlt
push
add
movsl
sbb
in
pop
hlt
outsb
add
sahf
loope
pop
fsubr
out
add
mov
es
adc
repnz
movsb
shl
icebp
add
pop
sub
xor
stos
add
insl
fnstsw
xchg
xlat
ja
or
mov
mov
and
scas
add
cmpsl
insb
mov
xor
add
bound
add
xchg
adc
and
jbe
push
das
mov
movb
mov
xchg
sbb
dec
pop
and
xor
pop
add
aad
into
xor
cmp
test
push
scas
imul
mov
add
aaa
dec
popl
pop
rcr
mov
xor
add
adcl
add
push
dec
push
jne
add
sbb
mov
pop
xlat
rclb
add
loopne
das
xor
subb
add
adc
cli
push
add
scas
push
mov
in
cmp
add
inc
shrb
xchg
rcrb
push
mov
pop
lock
sub
pop
and
dec
cmp
and
ficompl
je
movsl
sbb
pop
mov
dec
daa
mov
fdivrs
sbb
sbb
ss
icebp
sti
js
ud2
enter
pop
faddl
les
mov
in
mov
cltd
aaa
sbb
lock
jo
daa
adc
mov
add
pop
adc
insb
pop
mov
nop
fcmovnbe
xchg
mov
jno
add
ds
stc
fmull
jge
add
mov
add
sbb
add
fildl
mov
loopne
cltd
xchg
mov
jmp
jb
test
sub
or
and
add
xor
jnp
sub
fsubp
out
test
cltd
inc
cwtl
add
adc
xorb
addr16
add
jmp
mov
xchg
call
ret
xor
add
jle
pop
lea
or
mov
ror
adc
loopne
pop
rcr
call
add
fcmove
test
pusha
mov
add
cmp
das
stos
lcall
or
add
push
ja
dec
or
mov
wrmsr
outsb
push
cmpsb
and
or
mov
out
fstps
inc
jne
mov
outsl
pop
cwtl
fsts
pusha
lcall
rol
loope
daa
cmp
fimuls
icebp
jns
sbb
inc
add
dec
pop
roll
jmp
push
std
push
stc
sub
imul
add
inc
push
sub
or
add
mov
stos
mov
stc
js
inc
or
sbb
push
mov
imul
add
dec
jnp
loop
cmp
aaa
enter
cld
add
pusha
pop
mov
pusha
lods
lock
jle
pop
movd
inc
dec
outsl
pop
dec
pop
hlt
jb
stos
loopne
mov
add
jnp
negb
dec
push
adc
std
add
or
xchg
hlt
and
push
push
add
cmc
mov
in
int3
add
cmp
test
push
xor
xchg
jo
adc
icebp
movsl
fldcw
cmp
dec
add
xchg
inc
das
repz
xor
and
js
fcompl
in
push
nop
adc
aaa
mov
add
push
idivb
aam
mov
stc
in
lods
dec
aaa
xor
add
mov
sub
test
lock
mov
adc
sbb
mov
mov
add
pop
add
or
cltd
jb
nop
pop
adc
xor
add
lds
jno
push
outsl
dec
pushf
xchg
jl
jnp
add
or
inc
test
daa
cld
pop
aad
mov
sbb
lea
adc
push
loopne
repnz
lods
push
fcompl
push
push
pinsrw
jle
or
pop
pop
mov
add
sub
sbb
xchg
cmp
mov
mov
idivb
or
mov
loopne
ljmp
out
xor
in
loop
lock
sbb
shll
pop
mov
movsl
mov
aam
jno
mov
bound
and
pop
jno
leave
loop
rclb
in
push
sub
nop
neg
adc
sbb
fwait
aaa
mov
dec
inc
icebp
aad
mov
adc
jno
mov
mul
pop
xor
cltd
sbb
inc
mov
push
mov
in
mov
dec
xchg
sahf
push
adc
out
add
iret
testb
scas
repz
arpl
sub
out
inc
lret
test
sbb
sti
add
dec
test
adc
dec
sbb
negb
and
roll
cmp
push
add
test
cmp
adc
pop
add
xor
mov
sahf
aad
cwtl
pushf
add
lret
nop
test
test
push
inc
and
fidivs
adc
push
adc
jae
aam
roll
test
lock
es
pop
in
lds
cmc
popa
and
mov
pop
push
lods
xor
adc
push
scas
ss
sti
rorb
pushf
out
loopne
bound
rclb
inc
pop
add
or
dec
adc
adc
stc
add
addb
inc
es
ss
adc
or
cmp
push
gs
dec
stos
outsl
dec
insl
add
loope
jp
ficompl
and
xchg
add
jg
arpl
cmpsb
jno
add
je
rcrb
clc
enter
add
nop
inc
ja
push
mov
lock
andb
mov
sub
lds
loope
inc
insl
loop
jno
nop
test
inc
dec
clc
add
mov
mov
sub
or
addr16
jmp
push
add
mov
das
aad
xor
fucomp
cli
jnp
loope
cmpsb
mov
pop
lret
add
sub
das
xchg
out
add
lods
adc
sub
add
dec
xlat
xor
add
in
sub
cmp
cwtl
fdivrs
test
adcb
inc
add
sti
iret
add
out
fadds
test
das
in
add
dec
stc
mov
ja
out
outsb
add
fnop
jno
data16
pop
adc
push
les
jnp
fnstcw
aam
rcrb
pop
movsb
dec
jle
xchg
mov
mov
inc
dec
cmp
negl
lret
add
xlat
inc
push
icebp
aam
movsb
add
lahf
fists
jmp
and
enter
dec
test
outsl
mov
or
mov
pusha
sub
mov
ljmp
stos
push
sbb
push
xadd
es
sbb
add
bnd
pop
sub
ljmp
into
push
lret
movb
insb
xor
pop
push
push
lcall
cmpsb
inc
rorb
nop
pop
adc
lret
inc
xor
pop
scas
fldl
cwtl
mov
mov
or
or
or
inc
sahf
incb
hlt
mov
arpl
loope
pop
jnp
add
js
into
add
mov
add
adc
imul
rolb
add
daa
jmp
jb
push
rolb
pop
lahf
mov
lcall
nop
in
dec
inc
mov
cld
adc
jp
lock
lret
sti
insl
sub
lds
jnp
mov
inc
std
add
mov
in
add
arpl
rcrb
sti
addr16
pop
or
inc
flds
push
sub
pop
inc
hlt
inc
add
mov
mov
popf
sbb
lahf
popa
cmp
enter
jo
std
incl
rcrb
xchg
es
pop
pop
cwtl
add
aas
loope
fsub
xchg
cwtl
je
cmc
lahf
jo
add
out
aaa
and
inc
mov
adc
push
pop
negb
out
mov
aas
sbb
cmp
sub
add
push
clc
xor
mov
ds
push
mov
icebp
mov
fdivs
cld
stc
test
out
inc
sub
cmpxchg8b
int
xorb
and
cmpsb
pop
pop
inc
jno
cltd
mov
xchg
aam
jmp
dec
add
adc
or
add
mov
add
push
lods
xor
mov
enter
sub
out
out
sahf
cmp
cs
xchg
rorb
cmpsb
inc
int3
jecxz
add
cmpsl
jae
inc
sahf
call
inc
adc
push
stos
gs
pop
in
sbb
xor
fiaddl
inc
add
dec
cmp
orl
xor
dec
mov
sbb
cs
pusha
frstor
sub
subl
loopne
sub
shlb
add
fnstenv
cmp
pusha
pop
push
add
jmp
sub
and
sub
xor
dec
gs
repnz
test
test
sub
je
adc
adc
dec
sbb
or
ror
lods
js
sbb
adc
lock
jecxz
lock
pop
add
bound
shlb
mov
pop
dec
insb
jmp
sub
mov
pop
aas
mov
inc
xor
call
jnp
repz
sub
sbb
cmp
cltd
jl
clc
or
mov
adc
mov
add
verr
push
mov
adc
mov
add
jmp
test
push
sbb
fdivs
ror
popf
mov
cld
xchg
popa
addr16
call
sub
and
push
scas
add
pop
fadd
and
xchg
jb
mov
subl
leave
jle
add
stos
imul
ss
add
mov
js
push
das
out
mov
mov
pop
add
add
ficomps
loopne
pop
sbb
sub
add
push
xchg
arpl
and
paddsb
push
aas
pusha
jle
and
loope
stc
push
mov
add
mov
mov
adc
inc
fcoms
or
add
insb
sbb
je
out
movsb
pop
mov
inc
jecxz
out
cmp
add
ret
inc
sub
inc
jo
add
pop
in
adc
inc
adcl
jecxz
sbbl
push
cs
mov
bound
add
ret
sbb
mov
mov
push
in
lcall
addl
ror
stc
mov
ds
dec
aas
add
mov
sub
mov
mov
loope
dec
cwtl
or
stos
xchg
dec
xor
push
testb
jg
iret
pushf
add
push
call
outsl
movsb
in
clc
add
pop
pop
adc
cwtl
push
hlt
jmp
lock
and
out
mov
nop
adc
mov
sbb
or
xor
fimuls
mov
outsl
xchg
pop
and
shlb
cmpsb
push
inc
xchg
movsb
enter
and
ja
add
ljmp
int3
in
outsl
imul
cld
pop
ljmp
add
ss
pusha
mov
cmp
jo
in
xchg
xchg
or
cs
jne
rol
lods
aam
ja,pt
daa
fs
add
xchg
stos
add
mov
cmp
fidivs
mov
inc
aaa
and
push
inc
lea
loop
outsl
cmc
loopne
or
add
cmp
push
push
and
or
fstps
add
xchg
test
cmp
test
dec
das
xorl
scas
rcr
xchg
add
cmp
inc
fildll
push
xor
adc
out
fdivs
add
add
lea
inc
pop
fwait
add
popl
sub
and
inc
add
pop
mov
add
fbstp
jne
aam
xor
cmp
ja
push
gs
std
add
sub
adc
dec
cmc
jo
jg
add
adc
push
xor
pushf
add
repz
jno
and
add
cwtl
pushl
xchg
cld
jno
push
lea
cmp
mov
imul
test
push
fisubl
ja
sub
mov
adc
pop
out
adc
xchg
sub
xchg
cwtl
mov
aaa
cmp
movb
add
fbld
testl
adc
push
out
in
fldl
pushf
sbb
scas
rcl
sbb
mov
arpl
or
cmp
bound
in
sbb
push
mov
push
pop
rorl
inc
cmpl
sbb
pop
in
mov
xor
lods
addr16
lret
add
je
dec
pop
dec
sbb
cltd
and
xchg
sub
xchg
push
and
dec
sarb
shrb
pop
popf
adcl
pop
enter
aad
mov
clc
sbb
in
imul
inc
ret
dec
popf
loopne
sbb
push
and
filds
push
sbb
mov
pop
add
mov
nop
cmpsb
test
add
mov
dec
jb
jnp
add
jl
outsl
hlt
add
pop
shl
sub
mov
add
jg
lds
fwait
add
inc
mov
nop
sbb
add
push
dec
mov
adc
sarb
or
push
bound
jnp
popf
les
fcomps
sbb
loopne
dec
enter
dec
add
cmpsb
pop
adc
add
xchg
xchg
dec
push
ds
clc
add
lret
sub
out
or
in
shrb
push
mov
push
loopne
lock
in
xchg
test
andb
rolb
sahf
test
popf
mov
lock
xor
adc
add
add
mov
insb
movsl
push
mov
jmp
push
aam
xchg
add
pop
xor
cmp
into
xor
mov
or
pop
push
rcll
inc
or
jmp
jg
iret
xor
jns
inc
insl
mov
lods
mov
in
imul
lock
xor
in
push
leave
testl
mov
je
sbb
ljmp
scas
fists
mov
add
int3
mov
cmp
push
push
mov
fsts
fidivrs
add
add
daa
cmpsl
test
scas
pop
cmpsb
cwtl
push
add
loop
mov
mov
mov
data16
insl
and
sub
mov
or
iret
adcb
sub
jnp
xchg
jo
js
lcall
mov
negl
dec
sti
ror
or
add
out
in
mov
stc
inc
addr16
jl
clc
dec
mov
bsf
xor
or
adc
mov
lds
sbb
iret
push
ja
xor
out
sbb
scas
movsb
adc
xor
out
adc
les
movsl
xchg
jo
mov
loopne
adc
aas
xor
mov
mov
outsb
sbb
mov
mov
pop
push
sahf
arpl
mov
add
push
sub
insb
push
ljmp
add
fwait
hlt
push
jg
add
dec
outsb
mov
sbb
and
mov
out
add
inc
out
sub
out
add
ja
xor
filds
jge
jmp
cmpsb
sub
sarb
shr
nop
ficomps
ds
xchg
xlat
cmpb
repnz
sbb
iret
mov
jae
cwtl
in
mov
sarb
divb
sti
add
pop
push
lret
jb
paddd
mov
push
add
sub
aas
in
pushf
in
xlat
mov
mov
sbb
push
xor
cmp
and
cmp
xor
jmp
mov
pop
stos
add
mov
scas
inc
fcoml
push
loopne
or
js
out
stos
negl
ja
push
or
mov
dec
mov
adc
repz
nop
sub
fisttps
dec
pop
repz
test
mov
cmp
cmc
ret
out
jae
add
cld
popf
rcrl
rcl
subl
fnstsw
rorb
loopne
orl
subb
push
cmp
nop
add
xchg
lods
loopne
cmpl
sub
add
dec
sarb
sub
pusha
add
add
cld
mov
add
and
cmp
cltd
sub
repnz
pusha
lea
add
sub
jmp
xchg
or
sub
push
js
xor
dec
add
jno
aas
pop
shll
pop
xlat
test
sub
dec
cmpl
add
adc
mov
dec
rclb
adc
push
sbb
inc
pop
xchg
xchg
shl
add
fcmovnu
and
push
outsb
add
push
push
or
ljmp
mov
aaa
add
push
push
sub
add
sub
call
add
test
fadds
fisubs
pop
sub
enter
roll
or
ret
rcrb
jo
jae
rorb
xchg
scas
sbb
jmp
shrb
and
cmp
pop
ftst
adc
push
mov
sti
lods
repz
in
add
mov
jb
rcrl
adc
dec
lea
incb
pop
inc
test
mov
insl
add
shl
sbb
gs
iret
pushf
sub
movsl
push
rolb
nop
jne
call
xchg
mov
add
out
adc
and
mov
sub
je
sbb
into
adc
rorb
jmp
add
inc
add
xor
mov
adc
cli
add
xchg
xor
jne
add
push
test
cmp
pop
add
cmp
jg
aam
cmpsb
push
jo
cmp
out
sub
stc
movsl
adc
jmp
idivb
test
xor
mov
inc
aad
mov
test
pusha
xor
xlat
int3
pop
xchg
pop
jo
add
jmp
push
mov
popa
sbb
ljmp
cmp
rorb
cmc
pop
lock
add
sahf
cld
stos
jge
xchg
les
jmp
dec
jbe
adc
xor
test
scas
push
aad
outsl
jge
lret
xchg
arpl
mov
push
pusha
xchg
shl
mov
xor
dec
and
pop
sub
pop
pop
xor
jle
xor
clc
leave
cmp
and
rorb
sbb
std
dec
or
loopne
cmp
xor
xor
iret
or
inc
or
and
in
xchg
cmpl
movsl
sbb
sbb
sub
or
test
stc
inc
repnz
mov
mov
jle
mov
mov
aam
or
adc
pusha
cmpsb
and
or
add
stos
push
cs
mov
add
pop
into
xor
psrld
cld
pop
inc
sbb
stos
lds
lahf
imul
add
push
dec
jae
loope
bnd
lret
xchg
push
inc
xchg
pusha
cltd
mov
jle
or
push
inc
mov
test
push
mov
jb
and
loopne
pop
cmp
je
cltd
inc
push
add
fsubrl
mov
inc
std
call
dec
and
jp
add
rcrl
add
ret
xchg
flds
cmp
and
mov
jp
add
mov
add
ret
js
fcoms
std
cmp
rcr
and
push
and
in
sub
cmp
mov
mov
add
aad
sub
push
cld
mov
stos
dec
sub
mov
pusha
into
call
push
jo
fwait
xchg
cmp
sbb
jno
push
ljmp
es
lcall
mov
jl
xchg
ss
adc
inc
fdivrs
sbb
pop
test
mov
fs
sti
lods
mov
addb
add
add
mov
repnz
movsl
xchg
test
lock
cmpsb
or
pop
inc
movsb
mov
movsl
jnp
add
and
add
pop
adc
sbbl
roll
dec
loopne
stc
notb
dec
mov
push
mov
mov
lcall
out
js
sub
cld
and
psubusb
and
test
adc
mov
enter
cwtl
cmpsl
jo
cmp
xchg
add
jp
jae
jo
add
jb
add
jnp
add
aas
inc
pusha
ret
pusha
xchg
int3
jo
pop
inc
idivb
add
pop
cmp
xor
das
or
cli
mov
or
xor
stos
inc
mov
imul
popa
fwait
add
std
push
insl
xor
mov
push
loop
rorb
out
jecxz
cltd
fstpt
add
pop
pop
pop
sbb
jae
add
outsl
xor
shl
add
jno
out
or
pop
test
mov
sbb
push
sbb
add
jmp
xchg
mov
aaa
insb
sbbb
xor
pop
in
rorl
rcr
loopne
mov
jle
push
push
xor
sbb
jb
mov
jp
xchg
mov
inc
xchg
jo
or
sub
sub
loopne
pop
xchg
pop
add
push
inc
imul
sub
or
xor
adc
mov
cmp
push
cs
jnp
or
add
mov
xor
pop
or
aam
push
push
jmp
add
xor
rol
jne
jbe
add
cmpsb
sahf
add
mov
cltd
add
xor
lods
aas
add
inc
pop
arpl
push
jecxz
fisubs
xor
pop
out
pusha
loopne
push
repz
leave
mov
xor
lret
xor
mov
ss
cmp
sbb
mov
add
add
mov
mov
andl
mov
es
dec
movsb
add
pop
add
and
shl
shlb
test
mov
cmp
mov
enter
lods
or
jp
sbb
add
push
xchg
xchg
mov
daa
push
cld
loop
pop
jae
repz
in
scas
cmp
call
adc
mov
inc
pop
mov
add
fdivrl
pop
out
sub
das
mov
mov
inc
sti
add
in
jb
add
and
enter
add
and
repz
adc
aaa
cmc
push
add
pop
mov
mov
cltd
hlt
mov
mov
addb
push
or
popf
sahf
test
add
divl
enter
shrl
subb
pop
popf
mov
inc
xor
add
sub
aam
add
ja
xor
out
pusha
stos
pop
mov
scas
andl
cmpsb
adc
shlb
jae
mov
data16
clc
sub
add
or
arpl
imul
in
mov
or
inc
adc
pusha
pushf
mov
roll
push
das
lods
shll
add
fcomip
aaa
addr16
push
out
scas
and
jecxz
mov
xchg
pop
popa
pop
insb
dec
push
das
adc
add
into
movsb
jp
icebp
push
addr16
sbb
cmp
xchg
hlt
filds
mov
lock
out
add
inc
bound
jg
or
add
loopne
sbb
mov
cmpsb
insl
xchg
dec
add
addr16
sbb
adc
hlt
adc
add
xchg
clc
and
fsubs
add
or
add
int3
enter
or
sub
add
mov
movsl
fistps
sahf
push
xchg
int3
into
mov
jmp
mov
mov
rcrb
or
rcr
sbb
xor
mov
in
aam
dec
add
aas
xchg
or
pusha
cwtl
mov
push
enter
adc
hlt
stos
lods
int3
ljmp
sub
sub
pop
lret
insb
bound
inc
xor
jb
fiadds
xchg
aam
ret
push
out
into
add
add
lods
int3
test
inc
add
stos
or
cli
or
lods
add
rclb
loope
mov
add
add
sbb
cmpsb
cmp
rclb
cmp
iret
or
dec
lods
and
call
inc
dec
aam
roll
rep
aad
cmc
jp
sbb
mov
int3
and
sub
jmp
fwait
cwtl
xor
pop
jle
clc
adc
cmp
fldl
jb
insl
add
packuswb
jp
pop
cs
loope
and
in
leave
inc
mov
inc
lds
or
xor
add
adc
xchg
movsb
loop
subb
lret
addb
cmp
ret
or
push
stos
mov
xchg
test
add
xchg
adc
pop
push
xlat
lock
sbb
loopne
fldt
push
ljmp
outsl
lock
insb
sub
orb
adc
and
push
pushf
cld
mov
sub
dec
cli
push
pop
sbb
stos
xor
xor
imul
rol
jns
add
mov
add
add
xor
jno
mov
jp
test
or
cs
adc
and
and
adcb
loope
fs
popf
arpl
add
test
push
xor
add
pop
out
sub
scas
std
dec
mov
adc
add
out
and
cltd
adc
icebp
cmp
test
adc
mov
cmpsb
add
pusha
and
out
pusha
jns
lds
imul
incb
pop
mov
bound
ds
sbb
dec
add
mov
push
push
lcall
cltd
rolb
pop
sbb
pop
fnsave
out
xor
dec
out
adc
add
mov
jp
add
sbb
loopne
xlat
addl
cwtl
fiaddl
sbb
int3
popf
or
scas
andl
jp
cld
mov
out
sbb
push
xor
aad
jo
and
adc
rcl
cwtl
loop
cmovl
mov
repz
push
xchg
push
xchg
dec
mov
dec
add
mov
jns
or
leave
fs
inc
xor
add
mov
out
mov
sub
lods
jmp
mov
decb
divl
push
std
push
in
fiadds
lret
ds
and
test
and
xchg
inc
jl
mov
add
add
cld
scas
scas
add
test
mov
sbb
ss
pop
mov
or
lahf
sbb
inc
in
jne
in
cwtl
or
sub
lds
stos
jmp
mov
in
sarl
cmp
sbb
inc
add
dec
mov
cs
repnz
rclb
sbb
add
pop
inc
xchg
cmp
fsubl
pusha
popa
and
jp
push
add
loopne
add
std
or
add
out
add
cld
dec
fidivrl
cmp
mov
jne
or
sbb
rol
or
pop
in
mov
lock
les
mov
or
movsb
add
or
dec
add
in
xchg
lahf
mov
or
and
in
xchg
push
loopne
out
jbe
addl
mov
into
mov
popf
dec
sbb
and
sub
aas
adc
xor
and
cli
out
lcall
push
jo
lods
shlb
push
jae
popa
mov
leave
lcall
dec
push
pop
sbb
pusha
jns
push
pop
adc
mov
lods
mov
or
lahf
iret
jo
in
add
loope
mov
fcom
out
sbb
pop
sub
roll
test
fildl
inc
mov
xor
dec
pop
push
arpl
sub
aas
push
mov
rol
repnz
int
stc
cmp
add
incl
push
xchg
test
mov
add
rcrl
pushf
mov
mov
iret
push
out
outsl
xor
sbb
dec
enter
imul
shrl
or
mov
rclb
pop
push
cmpsl
cmp
stos
and
sahf
fld
push
int
pushf
push
push
fwait
rcr
popf
inc
ret
jno
mov
pop
lahf
jbe
or
ja
mov
xchg
icebp
shl
fwait
aas
jmpw
inc
sti
outsl
aas
ja
add
push
push
push
mov
sbb
inc
inc
loopne
sub
dec
xchg
xchg
js
or
pop
inc
mov
jno
xor
leave
sbbb
mov
loopne
nop
lahf
out
inc
sub
call
shr
fimull
std
scas
xor
les
divl
xor
incb
sub
add
fidivrl
add
je
or
repz
aad
add
call
push
sbb
add
mov
sbbb
add
sbb
pop
mov
addr16
xor
and
pushf
xchg
lret
dec
pop
inc
in
cmpb
dec
insb
aam
test
int3
sub
jmp
inc
insl
cli
add
cmp
adc
cltd
add
or
rolb
or
fisubs
and
jge
add
pop
jnp
sbb
jo
add
sub
or
bound
aaa
jmp
and
pop
int
mov
lcall
jecxz
mov
mov
xor
pop
xor
repz
xor
xchg
fprem
pop
decl
add
lcall
cmc
hlt
mov
push
mov
lock
fadd
je
add
dec
fisttpll
fadd
loopne
mov
popa
dec
cltd
sbb
or
jo
loop
lods
inc
stc
loopne
lock
into
and
jns
lsl
cmpsl
in
pop
push
inc
clc
push
dec
pusha
adc
loop
mov
push
call
add
jno
jmp
xor
or
add
mov
arpl
mulb
push
mov
jl
adc
clc
jmp
pusha
in
xorb
inc
xchg
mov
add
xor
jmp
mov
roll
cmp
push
push
rorb
sbb
add
lods
or
ss
fisubrs
scas
push
ja
dec
shrl
shr
mov
clc
dec
add
adc
jbe
addb
loope
xchg
lahf
out
xor
adc
push
add
arpl
loop
std
ret
aas
add
xchg
js
cli
add
push
sub
sbb
and
add
push
xchg
lahf
xlat
push
adc
out
xchg
add
sbbb
xchg
xchg
add
jno
adc
pop
nop
fs
cwtl
add
or
ljmp
add
cmpsb
outsb
cmp
lahf
mov
rolb
dec
jge
cld
xor
lock
iret
xchg
sti
clc
push
mov
add
test
add
ds
jno
stos
int3
idivb
pop
ret
sti
inc
cmpb
add
mov
xor
dec
inc
push
in
jno
add
pushf
ja
mov
sub
dec
sbb
and
push
mov
inc
mov
int
cwtl
xchg
xor
add
imul
push
add
gs
push
sub
add
jno
mov
xlat
push
mov
inc
add
mov
in
push
in
nop
add
cmp
push
imul
out
enter
adcl
adc
aas
mov
push
insb
add
jle
rcl
sub
in
jb
into
out
test
repnz
xor
jo
cmp
shlb
sahf
fs
push
pop
add
loopne
into
adc
cs
inc
sub
push
repnz
fyl2x
movsl
lock
pusha
add
repnz
and
mov
add
inc
andb
outsb
cwtl
mov
lahf
je
adc
inc
sbb
xor
adc
lret
lods
pusha
ljmp
sbb
mov
and
fscale
jae
dec
mov
or
rclb
int3
repnz
dec
pop
xor
push
shlb
rorb
mov
jp
push
loopne
jb
push
test
add
fwait
sbb
sbbl
das
sub
mov
scas
fsubs
cmpb
or
dec
sub
ret
mov
dec
out
cltd
mov
xor
rorl
xor
ret
icebp
xchg
cmc
je
cmp
sub
cmp
popf
push
pop
inc
cs
lds
jo
frstor
mov
inc
shl
push
roll
inc
add
xchg
mull
nop
pusha
adc
js
add
pop
xchg
insl
pop
pop
jp
adc
inc
mov
lods
mov
mov
sbb
sbb
movd
mov
jmp
xchg
mov
pop
or
das
mov
add
lret
cmp
push
daa
lock
sub
adc
add
fwait
imul
mov
fnstcw
popa
mov
push
pop
jl
rcll
push
mov
mov
mov
shrl
sbb
adc
arpl
fdivp
cld
pop
rclb
fdivrs
mov
test
int
ficomps
jecxz
push
xchg
lahf
jmp
fs
xor
shlb
mov
add
xchg
jl
sti
iret
add
inc
cmp
in
dec
fnsave
cld
jp
add
push
data16
hlt
in
cltd
xchg
hlt
lret
mov
imul
sbb
add
test
xor
cmp
rcrb
sbbl
jg
lea
jo
mov
jle
xchg
lock
pop
adc
pushl
stos
orl
popa
aam
or
push
xchg
cli
inc
bnd
add
cmc
popf
dec
add
mov
push
movsb
pop
andl
stos
push
add
dec
sarl
or
adc
punpcklbw
adc
testb
lods
and
loope
add
jmp
jnp
push
rclb
lds
cltd
rolb
test
cli
adc
adc
mov
cmp
addr16
cld
dec
sbb
add
mov
sbb
push
call
adc
orb
xchg
sub
in
pop
fistpll
stos
cmp
push
jg
ret
jns
sbb
mov
daa
jg
mov
loope
insl
clc
dec
shrb
mov
pop
std
in
mov
addr16
mov
divb
add
xlat
xchg
pop
shll
dec
out
popa
mov
cmp
push
movsb
sahf
jbe
add
mov
outsb
add
xchg
xchg
pop
lahf
inc
sbb
xchg
adc
loopne
rcrb
inc
mov
add
jp
data16
and
jmp
jo
shrb
add
push
in
xlat
sbb
or
sbb
pop
mov
sbb
arpl
insl
out
sbb
jo
add
or
loopne
adc
rclb
repnz
jns
inc
push
mov
stos
in
add
pop
ret
in
adc
sbb
sbb
xor
and
adc
ss
lcall
xor
out
aas
push
push
mov
xchg
mov
cmp
data16
mov
nop
push
add
pop
scas
clc
jno
mov
mov
mov
lahf
stc
push
jmp
imul
push
sti
cmp
and
enter
pop
test
testb
stos
lock
outsb
jle
sar
mov
add
stc
mul
in
mov
jo
and
push
ljmp
ds
lahf
cli
testb
dec
sarl
icebp
enter
ret
sub
jbe
add
mov
outsb
push
shl
add
or
stos
and
neg
add
nop
sbb
xchg
sub
cwtl
add
clc
out
lea
xor
fidivl
shrb
add
or
push
add
add
xchg
inc
add
sbb
inc
push
sbb
push
jo
add
jae
jmp
mov
jge
cmp
and
cmp
sub
les
cmp
clc
cmp
push
jb
xorb
mov
push
or
jle
or
inc
mov
xor
pop
cmp
fs
in
xor
out
gs
xchg
adc
xchg
aam
pop
push
push
push
fiadds
sbb
or
sub
inc
mov
sbb
iret
inc
std
add
cmp
add
lcall
sbb
lea
shr
stos
shlb
sbb
out
cmp
fistpll
or
pop
test
mulps
cmc
jbe
pusha
xchg
inc
xchg
or
ds
fiaddl
sbbb
out
add
jno
push
call
outsl
jle
add
jl
adc
mov
sub
iret
ficoml
js
cmpsb
fcomps
stc
addl
div
and
mov
or
inc
jle
pop
les
push
loope
repnz
subb
outsl
jmp
jecxz
jno
dec
sbb
stos
push
jb
sub
inc
int3
mov
add
lods
aad
jmp
fildl
scas
ja
mov
je
sbb
fstpl
push
inc
add
pushf
and
cmp
mov
jge
jo
dec
mov
add
jmp
mov
jbe
inc
mov
aaa
cs
push
sbb
jmp
push
and
cwtl
sub
xchg
dec
clc
dec
add
lea
xor
adc
mov
cmp
add
sti
mov
addb
lret
cld
xchg
incb
adc
outsb
mov
call
mov
or
mov
add
sbb
mov
lds
push
pop
add
sub
js
pusha
pop
test
out
jg
notb
mov
add
pusha
outsl
hlt
sarl
push
sbb
cltd
add
aad
cwtl
push
loope,pt
sahf
cmp
jae
fwait
inc
call
or
arpl
and
pop
add
out
mov
mov
cli
addr16
pop
xchg
jnp
cld
mov
or
fists
mov
loopne
orl
arpl
cltd
xchg
jbe
sub
mov
int3
cli
add
je
fistl
cld
push
cmp
adc
jl
pushf
sub
sub
es
jb
mov
dec
and
in
cmpsb
stos
mov
jmp
xchg
in
push
orb
test
add
daa
and
or
test
ret
sub
xchg
add
sbb
sbb
mov
aam
cs
mov
fwait
mov
iret
cmpsl
fcomp
cmc
pop
mov
jne
lea
jg
cli
and
lahf
mov
test
or
inc
pop
inc
orb
add
xchg
xor
sarb
pop
pop
sub
les
jmp
add
xor
xchg
adc
add
fisubs
inc
add
jne
mov
cmp
dec
and
repnz
mov
sbb
mov
popa
in
out
mov
hlt
pop
arpl
repnz
aas
loop
add
popf
pop
sahf
je
cli
adc
loopne
add
int3
int
jl,pn
push
pop
ret
repnz
and
jae
and
aas
addr16
sbb
addb
scas
inc
daa
loop
divps
xor
ds
in
xor
mov
arpl
lret
ja
lcall
add
sbb
and
pop
adc
dec
jo
mov
add
fcoml
jb
test
addb
lds
add
mov
xor
jle
leave
mov
into
sbb
addr16
pop
loop
adc
movb
xchg
stos
inc
adc
dec
add
lcall
lret
mov
cmp
xchg
xor
cli
jns
movsb
pop
ds
xchg
fmull
mov
push
dec
mov
add
or
mov
dec
dec
aaa
push
imul
js
inc
mov
jmp
add
data16
and
ficompl
jb
jle
or
push
push
int3
cltd
inc
fs
addl
mov
dec
push
jl
pop
cmp
pop
clc
sbb
jo
pop
jmp
add
data16
stos
loopne
cltd
pop
fildl
add
xchg
add
cmp
pop
and
dec
mov
stos
add
inc
add
and
pop
icebp
xor
mov
ss
jo
enter
rcrb
fbstp
cwtl
or
dec
pop
stc
loopne
stos
mov
inc
popa
orl
mov
test
inc
rorl
add
ljmp
pop
add
mov
jo
scas
add
xor
test
push
sub
add
icebp
stos
xchg
mov
popa
xor
add
xchg
cmp
cltd
mov
pop
and
cli
xchg
sbb
repnz
rorb
push
dec
cmp
mov
and
aas
cs
add
jmp
add
mov
addr16
add
mov
bound
mov
add
iret
insb
and
cmp
sbb
cli
inc
cmc
mov
shll
sti
aam
mov
outsl
inc
mov
cmp
insl
fs
in
cmp
add
out
mov
add
push
sbb
mov
sub
divl
sub
push
mov
jl
icebp
and
clc
ja
shlb
das
lods
mov
fcomip
in
in
call
mov
je
cmp
incb
add
dec
xchg
sub
add
jl
bound
jb
das
mov
inc
add
xor
sti
add
mov
add
scas
and
adc
movsl
pop
and
xchg
jbe
xor
inc
mov
add
cmc
int3
pushf
xchg
pop
mov
test
aas
call
adc
add
out
push
push
add
rorl
adc
inc
scas
mov
stos
jns
cmp
xor
add
fcmovu
xchg
daa
sbb
jne
inc
out
xchg
add
fs
addb
cmp
add
dec
aaa
mov
and
fwait
stos
mov
mov
subb
dec
adc
and
mov
sbb
add
icebp
xlat
js
jl
xchg
inc
sbb
daa
dec
cmp
dec
mov
test
imul
lock
scas
das
cld
insb
add
add
push
xchg
arpl
out
jb
adc
movsb
rcl
pop
fxch
lods
add
pop
dec
jmp
jecxz
push
ja
icebp
add
out
add
mov
faddl
mov
push
dec
mov
cmp
jmp
or
xchg
out
daa
je
adcl
pop
lods
js
add
enter
xor
add
out
xor
or
xor
loopne
lret
xor
add
insl
es
mov
inc
out
dec
lock
jle
and
call
adc
mov
fbld
dec
sub
push
inc
sbb
lcall
mov
xchg
dec
add
lock
jb
dec
or
enter
push
jne
push
jle
push
imul
push
test
sti
inc
xchg
lea
cld
shrb
scas
sub
sldt
inc
addr16
test
add
ret
imul
mov
fsub
bound
cmpsb
inc
xorl
xchg
test
pushf
inc
add
jne
mov
loop
mov
orb
sarb
hlt
out
lahf
aad
push
cltd
repz
clc
xor
and
xorb
pop
enter
add
in
leave
mov
loopne
push
push
pop
mov
sar
imul
std
lcall
push
pusha
mov
int3
add
imul
movsb
nop
test
ret
mov
lock
int
push
add
aaa
pop
and
xorb
je
fiadds
dec
lds
jno
xor
out
xor
mov
shrl
adc
add
idivb
repz
adc
icebp
int3
jg
in
xor
xchg
inc
xor
add
sbb
add
jg
mov
cs
and
fcomps
pop
inc
mov
xchg
add
es
push
cli
and
xchg
jbe
test
jo
xor
and
add
stos
sbb
and
push
adcb
and
sub
xorb
push
xorb
cmpsb
psubsb
test
dec
mulb
pop
xor
add
add
add
push
ficompl
cmp
add
sbb
mov
popa
fdivl
dec
adc
lcall
pop
pop
inc
xchg
pop
ljmp
sub
xlat
add
add
add
jecxz
add
testl
subps
lds
shrb
add
mov
jecxz
pand
pop
fdivl
xor
aas
pusha
cmpsl
aad
cld
aas
fsts
fisubrs
inc
icebp
mov
in
sub
mov
jle
cmp
or
pop
inc
cmpsl
test
fwait
mov
sub
ss
and
adc
adc
mov
xchg
mov
cmp
and
orb
or
lods
nop
out
loope
dec
push
inc
mov
and
and
jmp
mov
pop
mov
cmc
mov
add
popa
or
dec
mov
jl
cmp
add
fstl
jge
xchg
mov
adc
push
cltd
orb
or
sub
js
xchg
add
lock
cmp
mov
call
jae
cmpb
arpl
mov
int3
xor
xor
add
popf
out
jne
sub
outsl
push
fdivr
test
adc
add
in
xor
cmp
orl
sbbb
xchg
rcrl
out
jbe
and
enter
sub
popa
gs
and
add
ror
rorb
test
and
orl
pusha
lret
and
push
mov
pop
add
pop
incb
or
mov
fcomi
pop
and
aam
jns
cmpsl
test
in
xchg
add
xor
xchg
in
or
push
add
imul
filds
sbb
std
roll
imul
adc
push
jb
mov
out
fidivrl
imul
sbb
xchg
sti
fcompl
sbb
mov
jle
ss
push
or
popf
dec
test
movsb
dec
add
jns
push
cmpsb
mov
add
andb
cmp
xchg
mov
and
mov
ja
and
loopne
add
xchg
insl
arpl
cli
imul
test
rolb
add
insl
pusha
in
and
and
fcompl
incl
imul
sbb
add
in
inc
pop
add
insl
mov
mov
cmp
enter
jb
add
xor
int3
adc
les
xchg
lahf
jae
xlat
cmp
sbb
inc
mov
add
add
scas
test
adc
test
mov
or
mov
add
xchg
stc
mov
popl
fbld
push
insl
outsb
push
loopne
xabort
fildl
rorb
add
cld
hlt
lcall
push
stos
dec
mov
push
js
cld
add
insb
lret
xor
push
push
sub
inc
shlb
inc
jnp
pusha
popf
mov
fldt
and
sti
dec
faddl
test
clc
mov
bound
xlat
paddsb
int
and
add
in
inc
add
lret
cmc
scas
cld
xchg
nop
cmp
lock
cwtl
das
and
sbb
xchg
nop
ficomps
mov
mov
pop
sar
add
cmpsb
xlat
jnp
mov
add
pop
inc
ja
cmp
adc
je
xor
pcmpgtd
popf
adc
rcll
scas
popa
loopne
cmp
and
push
cmp
or
add
jbe
inc
std
nop
lea
adc
adc
add
in
mov
jge
or
fldl
cwtl
sbb
dec
addb
sub
dec
add
xor
or
je
sbb
cmp
movsb
fmuls
and
add
dec
dec
inc
push
mov
daa
push
imul
xchg
xor
or
and
in
jp
add
push
mov
mov
stc
jmp
call
or
mov
dec
add
push
ret
jp
xchg
lahf
lock
out
shl
xor
push
jecxz
xchg
sub
in
enter
hlt
shlb
imul
jno
add
movb
lds
dec
push
data16
xor
add
sahf
out
fidivs
mov
sbb
push
cmp
or
sbb
dec
mov
add
ss
inc
arpl
lods
pop
mov
push
add
std
mov
push
jl
xchg
add
dec
adcl
mov
xchg
fidivl
add
popa
adcb
xchg
and
clc
push
inc
add
ljmp
jp
mov
out
mov
aam
dec
pop
rcrb
cltd
push
push
aad
clc
in
add
lods
jne
sub
ljmp
dec
xchg
xor
pop
mov
imul
test
stos
data16
dec
leave
sti
aas
sbb
add
fwait
movsl
and
push
or
icebp
adcb
add
push
lcall
cmp
xchg
xchg
mov
add
mov
sub
dec
sarb
mov
pop
mov
test
stc
cmp
cmp
fadd
jle
mov
or
test
push
lods
dec
sub
add
mov
aaa
push
push
push
pop
stc
inc
xor
adc
jbe
or
les
js
mov
fmull
or
adc
push
pop
or
or
sbb
inc
or
ficoml
movsb
pop
add
mov
sub
push
pop
inc
or
adc
add
out
add
movsb
or
add
jnp
mov
inc
pop
adc
push
sarl
in
jbe
push
aam
fs
subb
shrb
jg
mov
add
xchg
pop
inc
pop
enter
cmp
rolb
popa
mov
or
or
in
and
mov
pop
aas
sbb
add
stos
and
rcrb
lock
sub
push
push
pop
je
add
xchg
and
sar
fisubrl
add
adcl
clc
push
cmp
add
push
add
cmp
dec
dec
repz
mov
xor
popf
lods
xor
add
push
pusha
addb
pop
adc
in
test
add
lods
addb
cmpsl
add
inc
mov
xchg
xor
jo
mov
cmp
icebp
fmuls
add
jb
or
mov
lock
ds
push
adc
popf
mov
ret
mov
jb
insl
cmp
xor
rorl
shlb
adc
xor
incb
dec
or
xlat
cmc
fwait
loop
add
adc
push
shrl
or
jmp
ds
incb
sbb
adc
ds
mov
jmp
mov
pop
push
icebp
add
jae
shll
and
mov
jge
pop
inc
cmp
scas
jae
nop
add
fidivrl
push
add
jp
lds
scas
addb
gs
mov
and
cmp
mov
jmp
repz
add
fwait
daa
icebp
lret
sahf
cwtl
repnz
add
push
mov
sbb
sub
aad
sahf
xor
in
lods
add
fadd
dec
lock
add
pop
call
aas
add
pushf
hlt
incl
shlb
push
mov
cmp
jecxz
mov
dec
scas
and
es
mov
mov
add
pop
push
mov
add
mov
movsl
dec
mov
aam
faddl
shll
cmpsl
mov
std
push
xchg
fwait
sbb
jae
mov
inc
iret
lock
data16
pop
icebp
rcrb
aaa
or
sub
lcall
xor
inc
sub
xchg
cmp
xchg
dec
sub
push
jae
xchg
mov
add
adc
pushf
jg
mov
faddl
iret
push
cmp
push
and
inc
dec
cmp
xchg
cmpsl
leave
sbb
add
push
push
add
push
xchg
pusha
mov
dec
out
add
jno
sbb
incb
add
mov
arpl
aam
rolb
fisubs
shl
pop
cwtl
int3
loop
sbb
xchg
and
clc
into
les
dec
or
mov
inc
cmp
mov
add
mov
sti
sbb
insl
add
cltd
xchg
cwtl
cmp
inc
sarl
or
cmp
les
test
je
lds
dec
loope
jb
lcall
dec
pop
imul
adc
jo
sub
test
decb
int
test
and
add
mov
mov
mov
shrb
in
add
pop
hlt
pop
and
sub
lea
clc
sti
xor
nop
inc
and
aad
fnsave
pop
add
sbb
pusha
js
sbb
jbe
pushf
inc
fdivr
dec
inc
xchg
outsb
add
stos
dec
enter
mov
shlb
sbb
mov
shr
mov
pop
sbbb
cmp
add
push
xchg
ja
pushf
sub
orb
add
mov
push
sbb
mov
add
cli
stos
fcomip
or
cld
add
sahf
lds
ds
pushf
popa
push
subb
into
cwtl
lret
xor
adc
das
sarb
xchg
add
bound
movsl
scas
jo
out
jae
popf
daa
sbb
dec
sbbb
leave
and
in
xor
inc
imul
int3
xor
into
jge
pop
cmp
in
add
mov
adc
iret
in
and
jecxz
bound
dec
mov
loopne
cltd
mov
insl
out
call
adc
jbe
dec
arpl
adc
and
insb
cli
add
lods
cmp
add
xchg
ds
add
cld
jbe
dec
dec
inc
mov
mull
jo
imul
pop
popa
fcoms
jo
xor
sbb
fs
shll
xchg
jmp
cmp
movsl
aaa
push
or
mov
add
into
cs
test
int3
add
and
cmp
shl
pop
dec
add
adc
pushl
popf
inc
cmp
push
xchg
push
cmpsb
nop
mov
roll
mov
and
sbb
adc
lods
push
or
xchg
mov
cwtl
nop
daa
pusha
adc
push
pusha
jecxz
out
das
fwait
mov
cmp
inc
sub
inc
jge
push
or
pop
or
xchg
nop
movsb
rclb
testb
repnz
ljmp
lret
in
loopne
mov
mov
mov
inc
jl
inc
jae
add
stos
hlt
insl
push
mov
mov
or
dec
push
pop
dec
mov
add
push
pop
add
stc
lock
or
decl
xor
pop
js
sar
dec
adc
insb
sbbb
push
adc
cwtl
shl
xor
mov
adc
fdivs
cmp
sbbl
cmp
lea
adc
mov
xor
daa
add
insl
fnstsw
cs
xchg
mov
pop
pop
mov
add
xchg
lret
mov
arpl
incl
add
jle
jo
push
cmp
or
out
mov
test
push
orb
xchg
mov
adc
js
fsubs
push
aas
add
or
mov
add
shrb
cmpsl
pop
push
push
add
ds
sbb
popf
cmp
cmp
loop
out
cmp
cmpb
jp
adc
pusha
clc
xor
jge
rclb
shlb
pop
mov
pop
pop
add
lock
push
add
sbb
mov
cmp
push
cmc
std
cmpsl
pop
mov
pop
pop
sbbl
xchg
loop
add
jg
aam
dec
cmpsl
sbbb
int
sub
add
push
push
mov
nop
pop
cs
add
and
sub
data16
add
add
adc
in
in
je
pop
and
add
inc
xchg
xlat
dec
movb
mov
push
cmpsb
fdivrl
es
add
shl
ljmp
bound
inc
pop
xor
push
add
dec
jo
cmpsl
xor
pop
addb
roll
sbb
pop
push
dec
or
es
sbb
mov
inc
jle
add
fldenv
in
movsl
add
cmp
fcomps
push
adcb
faddl
lea
test
insl
es
add
mov
mov
in
lret
lods
cltd
adc
mov
mov
int3
das
push
add
and
ret
add
data16
and
rolb
jno
ja
push
jb
pop
ss
dec
adc
loopne
js
ret
xor
push
dec
mov
popf
call
xchg
add
test
cmp
inc
pop
push
and
push
dec
hlt
scas
call
mov
ds
xchg
pop
xor
hlt
flds
les
sbb
cmpsl
and
adc
mov
xchg
add
jno
fwait
push
iret
inc
in
test
fbld
je
hlt
add
lcall
add
aam
xchg
and
add
ljmp
cmp
jg
enter
add
ret
add
data16
lods
inc
cmp
addb
adc
shlb
sarb
sete
test
jo
add
or
je
mov
fisubrl
sub
mov
cmpb
sbb
jbe
add
sbb
fadds
fdivrs
and
std
fnstsw
add
sahf
scas
mov
pop
imul
outsb
adc
and
cwtl
call
sbb
push
pop
dec
xchg
dec
test
xchg
shlb
shl
add
les
rorl
cmp
add
ss
cmp
cmp
add
pop
ret
push
push
and
movsb
das
add
mov
pop
jp
andb
lret
test
out
fxch
je
aad
mov
lret
cmpsb
add
addb
push
mov
cmc
add
jb
adc
jp
in
rcl
dec
mov
fistps
add
push
mov
and
test
subl
add
cwtl
mov
cld
outsb
add
adc
mov
push
pop
sub
lea
mov
fsts
lods
mov
or
xlat
add
scas
jecxz
mov
sbb
jl
and
push
xor
call
jp
or
imul
setns
mov
push
loop
add
add
sbb
or
cmp
push
es
add
mov
call
js
mov
flds
cli
mov
loopne
lock
xchg
push
jnp
sub
push
xchg
cmp
or
xor
pop
dec
fs
pushf
mov
sti
roll
scas
mov
jg
add
lock
es
xlat
push
pop
jle
ljmp
test
add
or
cmp
pop
add
mov
rorl
add
mov
loope
pop
subb
jge
adcb
scas
sub
add
add
and
sbb
or
jbe
add
mov
ja
arpl
pusha
push
and
jns
loope
sub
cwtl
insl
cmp
ds
mov
push
pop
adc
mov
enter
add
xchg
sbb
aas
and
dec
loop
add
inc
outsl
push
add
ljmp
add
jl
popf
in
daa
pop
mov
rolb
jmp
test
aaa
xchg
pop
push
adc
dec
add
cltd
push
sub
adc
rclb
sbb
cmp
pop
lods
rcrb
cwtl
mov
leave
mov
adc
xchg
mov
mov
mov
rcrb
push
inc
andb
leave
inc
lods
mov
jle
scas
test
jp
lcall
pop
in
inc
add
int
adc
jo
add
leave
scas
enter
sub
stos
pmuludq
iret
xchg
pop
jbe
jmp
movsl
sbb
push
dec
lahf
test
movsl
xor
add
loop
jo
add
shll
add
movsl
loopne
jno
mov
cmp
fsubrp
mov
enter
push
and
adc
inc
dec
cmpsb
xor
out
inc
or
test
or
gs
or
add
dec
mov
mov
sbb
jmp
popa
push
les
mov
sub
addb
fmul
test
movd
or
xchg
lcall
enter
adc
loopne
xchg
push
push
push
jmp
sar
jle
sbb
jl
jo
imul
jg
add
cmp
and
leave
mov
mov
mov
in
imul
pop
jb
std
jo
dec
inc
or
popa
xor
call
mov
pop
fstl
lea
add
leave
sti
in
or
fidivrl
add
add
inc
pop
in
add
or
test
rolb
loope
inc
pop
jge
mov
jo
cmp
lock
xchg
dec
jae
ud1
xchg
and
orb
cmp
sub
jmp
orb
mov
dec
jo
cwtl
daa
popf
orb
ljmp
sarb
rcr
cmp
adc
or
lds
jmp
pop
sbb
sbb
inc
cmpsl
add
mov
repz
mov
sbb
test
shlb
xchg
jnp
enter
iret
cmp
mov
xchg
adc
sub
call
xor
shlb
outsl
gs
add
push
sub
xlat
orb
es
ficompl
sarb
mov
stc
call
mov
flds
shlb
xor
lret
les
sbb
inc
mov
push
jb
or
jno
cmp
sbb
add
fidivs
addr16
lds
inc
pop
cmpsb
sarb
insb
out
jne
add
dec
pop
sbb
push
cmpb
inc
mov
add
xor
sbb
mov
ja
int
add
xor
mov
adcb
inc
jle
lods
ret
mov
das
loopne
pop
mov
add
mov
cmp
shrb
dec
or
incl
sbbb
pop
shl
clc
add
or
pop
in
fsubrs
pop
push
mov
sbb
mov
pop
pop
sub
adc
insb
or
push
aad
jae
pusha
call
jge
fisubs
dec
imul
das
pop
jmp
sbb
mov
dec
push
mov
sbb
adcb
push
mov
inc
out
gs
mov
ret
mov
cltd
outsl
push
loopne
sahf
add
or
mov
mov
xchg
icebp
mov
jns
mov
inc
adc
daa
push
js
addl
lea
jns
fmuls
rcrb
or
adc
jg
xor
je
xor
pop
call
setp
mov
dec
add
mov
mov
inc
xor
xchg
add
sahf
shlb
add
stos
jl
or
pusha
add
es
mov
inc
std
subb
fchs
add
data16
xchg
jae
cli
xor
mov
add
and
jno
pushf
sub
sub
add
fdivr
mov
xor
push
push
add
das
sar
add
or
movsb
shll
jo
pushf
andb
icebp
xor
sub
pusha
or
cli
mov
les
repnz
cmp
xor
add
dec
insl
lret
sbb
pop
gs
pop
and
pusha
shll
mov
lods
mov
xor
jne
cmp
movsb
add
xlat
es
dec
mov
sbb
mov
or
or
dec
inc
mov
orl
sbb
mov
and
xor
add
or
sub
cmp
out
pop
jmp
cmpsl
and
mov
add
sbb
add
push
mov
jge
cmp
or
loop
push
repnz
jl
jp
and
cld
inc
add
ja
inc
cmc
movsw
pop
sbb
insl
cmp
adc
lds
jle
sahf
loope
cmc
call
sub
push
imul
jno
stos
je
mov
add
inc
out
pop
add
repnz
adc
mov
loop
cs
fcompl
cld
xor
das
push
mov
gs
push
xchg
hlt
sbb
cmp
inc
fimuls
or
mov
mov
add
push
xor
sbb
mov
xchg
jb
jl
inc
add
push
pop
adc
scas
ljmp
sub
mov
pcmpgtw
and
lahf
bound
pop
ja
and
add
movsb
data16
call
or
or
push
lret
into
or
pusha
or
inc
jne
add
xchg
insb
nop
add
flds
mov
sbb
or
add
sahf
aaa
js
jmp
cld
pusha
adc
and
roll
and
call
sub
xor
push
lret
imul
jg
pop
in
dec
inc
push
enter
loopne
push
add
mov
and
add
push
ret
dec
add
es
clc
push
add
mov
insl
aas
or
push
jnp
test
div
insl
add
adc
test
je
int3
xorb
and
test
inc
add
xchg
or
jecxz
add
mov
mov
adc
xor
rcl
inc
mov
pop
add
add
jge
fucomip
leave
ds
es
out
mov
sub
aas
dec
dec
add
mov
jbe
pusha
or
add
sbb
std
xchg
pusha
lret
pop
in
adc
xlat
pop
mov
jnp
jecxz
sbbb
and
or
or
add
es
aam
add
das
or
mov
loop
jp
inc
push
jle
dec
mov
jb
scas
xor
cmp
cwtl
sbb
mov
insb
es
sub
adc
dec
ret
fs
adcb
adc
int
pop
loope
xchg
xchg
cwtl
daa
xchg
out
sar
fsubrl
inc
jbe
sub
or
cld
je
mov
jns
fwait
mov
aas
repnz
dec
push
dec
and
cwtl
pushf
pop
data16
add
and
inc
sub
cmp
jbe
sub
add
lds
rcl
add
add
faddl
push
xchg
repnz
sbb
add
out
addb
mov
ja
test
sub
or
outsb
in
add
sbb
mov
add
or
xchg
fwait
pop
xor
mov
pop
add
xchg
and
popa
rclb
test
sbb
ja
nop
dec
bnd
lahf
test
cmc
and
sti
sbb
add
pop
pushf
pop
inc
dec
jg
arpl
inc
jp
push
icebp
test
inc
mov
sahf
add
jmp
sub
add
adc
into
in
bound
pop
fsts
outsl
lret
fbld
js
or
xor
or
sti
nop
aas
add
test
mov
shr
xlat
dec
sub
loope
add
aas
leave
xchg
sbb
pop
mov
mov
xlat
das
mov
add
mov
adc
loopne
lret
incl
mov
inc
loopne
and
add
and
push
roll
fcmovnbe
sub
push
push
test
pop
add
mov
pop
negb
xchg
pop
rolb
xchg
stos
rorb
pushf
cwtl
mov
mov
mov
pusha
jne
imul
xchg
in
sub
add
jno
push
inc
loopne
mov
rclb
sub
add
jb
pop
cmpb
out
call
sbb
outsl
add
adc
or
outsb
fadds
scas
out
mov
or
or
pop
hlt
cld
pop
mov
or
or
adc
out
add
out
mov
int
sbb
adc
jne
add
push
imul
lds
add
and
addb
and
js
add
cmpsb
imul
xor
jmp
mov
mov
sub
lods
xchg
add
xchg
pop
push
sbb
push
dec
in
and
ret
jle
loopne
mov
ja
pop
call
jae
add
sub
jle
sbb
add
mov
xorb
out
sub
and
data16
sbb
into
sarb
pop
mov
cmovns
add
dec
and
rorl
or
pandn
and
loopne
cld
add
out
ret
add
es
pop
dec
lods
mov
das
xor
adc
sbb
sbb
movsb
pop
adc
and
add
mov
iret
add
add
ret
or
lret
sbb
cs
add
add
scas
and
jle
jmp
mov
xchg
inc
lods
inc
into
jl
mov
incl
mov
adc
sbb
bound
and
add
mov
pop
pop
loopne
jnp
and
push
add
sub
mov
add
add
pop
shrb
popf
push
addr16
ljmp
xchg
add
shl
popf
rcrb
inc
movb
les
and
and
adc
add
xchg
cwtl
and
jl
add
rcll
popl
addb
test
movsb
pop
lock
addl
dec
mov
sbbl
sub
test
cmp
jne
clc
dec
add
js
arpl
dec
into
mov
mov
mov
push
push
inc
das
dec
sub
adc
xchg
and
and
cltd
xchg
dec
or
mov
inc
rorl
mov
mov
pop
mov
jno
jns
pop
mov
lcall
mov
cmpsl
add
cltd
jp
mov
jns
add
jge
mov
rcr
loopne
sub
xchg
daa
cmc
cmp
push
in
or
stos
ljmp
fwait
sub
jecxz
add
xor
or
push
mov
push
sub
xor
insb
mov
add
adcl
aaa
xor
mov
add
xchg
jnp
adc
mov
sti
jb
add
sub
mov
add
call
movl
jge
icebp
adc
push
adcl
or
sub
nop
or
insb
popa
add
or
mov
adc
mov
js
add
leave
pop
pop
mov
cmp
or
inc
xchg
dec
pop
inc
sub
mov
mov
add
inc
sbb
and
pop
mov
int
pop
cld
jl
add
out
cmpsb
inc
sbb
enter
pusha
dec
pusha
or
std
jecxz
or
std
mov
aaa
add
ds
push
jmp
cmpsl
clc
add
lods
push
mov
push
movaps
movsl
push
aam
xor
mov
mov
adc
jnp
add
jmp
add
mov
cmp
or
das
mov
jne
xchg
dec
es
sbb
cmp
lock
jne
in
addr16
mov
push
or
mov
je
aas
mov
cli
std
or
add
and
push
mov
add
push
sbb
lahf
adc
in
add
push
fwait
insl
lret
add
les
sbb
sti
popf
mov
mov
and
adc
fistl
add
scas
div
ss
push
xchg
fs
js
lahf
addb
cwtl
faddl
pop
jbe
mov
adc
dec
cmp
int3
mov
dec
add
fisubs
scas
jns
add
sub
mov
mov
lret
add
movsb
or
xor
cmp
adc
or
dec
pop
mov
movsb
fiaddl
and
adc
push
adc
add
into
jnp
jbe
pop
mov
pop
std
jg
push
sahf
xchg
and
sti
add
cmpsb
adc
test
pop
sub
mul
test
xorb
jo,pt
push
cmc
loop
cmp
jb
cmp
pop
cli
inc
add
add
out
shlb
popf
paddd
pop
adc
and
std
mov
cmp
rorl
add
add
dec
out
jl
cmp
cltd
jo
in
add
cmp
lods
mov
out
inc
leave
mov
add
fwait
pop
pop
mov
ljmp
pop
das
jmp
and
mov
push
inc
sbb
sub
clc
std
inc
sbb
fs
sbb
stc
xor
add
ds
push
pop
adc
jns
stos
cld
test
dec
inc
es
movsl
and
fdivl
out
mov
pop
stos
add
clc
adc
jae
or
or
add
add
jp
push
xor
xchg
add
pop
add
add
pusha
cmp
arpl
lret
sub
and
repz
mov
or
jnp
adc
cmpsl
out
fildl
or
dec
pop
mov
sub
aas
jl
push
mov
rol
sub
push
sub
ja
inc
iret
repz
in
add
inc
xorl
dec
and
loop
add
xchg
andl
mov
inc
dec
dec
add
xlat
and
enter
js
das
mov
jnp
mulps
inc
ret
call
mov
add
cmp
or
test
jne
add
jmp
das
outsl
add
stc
mov
sbb
lds
mov
sahf
push
or
jl
fiadds
test
xor
pop
mov
cmp
out
push
lahf
xlat
mov
xchg
cmp
ja
sbbb
syscall
cmp
sar
clc
add
das
push
movsb
cmpl
callw
mov
jnp
add
pop
mov
push
cmp
hlt
mov
aas
add
int
mov
adc
xchg
dec
add
mov
add
push
sbb
mov
push
add
gs
mov
icebp
add
pop
notb
add
fisttpl
ret
mov
push
push
bound
add
jo
lahf
sbb
in
fwait
mov
testb
push
add
sbb
andb
xor
dec
sub
rorb
nop
in
loopne
jl
add
les
in
sti
jne
xor
pop
scas
adc
pop
add
icebp
cmp
xor
cld
add
das
aad
xchg
add
lds
decb
fiadds
arpl
cltd
mov
or
add
sub
icebp
cmp
xor
sub
push
pusha
pop
adc
pop
andb
inc
cmp
fcoms
add
dec
rorb
pop
ljmp
and
insl
xchg
pop
pop
pmaxub
add
dec
xlat
or
sar
in
and
rclw
lret
dec
add
bound
add
lcall
pop
ret
add
cltd
inc
pop
push
aam
jg
loopne
mov
dec
mov
call
sete
jae
pop
rclb
mov
cmc
sahf
jmpw
fwait
cwtl
inc
xor
mov
jg
xor
lock
stos
inc
xchg
push
add
mov
negl
lods
test
xor
xchg
in
decl
push
sbb
mov
jnp
add
hlt
xchg
ds
inc
in
lods
imull
mov
ret
mov
dec
add
mov
dec
repnz
int3
cmp
sbb
sub
mov
mov
sbb
xor
cmp
mov
jl
js
ljmp
hlt
cmp
lds
fildll
pop
and
and
dec
jnp
jle
lret
inc
hlt
rolb
out
pop
mov
jnp
mov
add
stos
cmc
fmul
push
sbb
xor
xchg
adc
sub
out
mov
and
int
jo
add
loope
lcall
mov
adc
inc
lds
addl
cmp
lods
daa
dec
cltd
add
mov
add
add
cwtl
jnp
adc
mov
inc
mov
push
mov
push
stos
add
ss
sub
je
xchg
adc
cmp
aam
repnz
adc
jne
add
mov
and
lret
aaa
jecxz
mov
mov
ficomps
ficoml
sbb
jp
add
fdivrs
prefetch
repz
add
cmp
sub
gs
mov
pusha
sbb
and
add
aas
lea
ja
insb
sarl
dec
rclb
adc
jno
pusha
adc
pop
jge
xchg
das
lock
xchg
loope
leave
sub
hlt
add
push
fadds
adc
pop
or
fistps
sbb
jno
adc
push
jo
add
and
roll
mov
add
enter
inc
add
or
aas
mov
cld
mov
add
sbb
scas
add
bound
outsb
incb
xchg
add
popf
imul
loopne
add
inc
cmova
je
cltd
clc
or
pop
movsb
nop
inc
jns
out
pop
orb
pushf
test
addl
pop
push
aad
pop
add
js
mov
dec
pop
xchg
shl
jno
xor
les
ds
add
push
mov
shrb
add
pop
inc
mov
sbb
push
adc
add
out
ja
pushf
popa
add
adc
sbb
and
sub
push
push
adc
xchg
or
sbb
ret
test
dec
xchg
ljmp
icebp
cmp
add
loope
sahf
jle
dec
sub
and
dec
mov
hlt
jnp
inc
testl
mov
jp
add
mov
jge
cwtl
push
jp
fmuls
fcomi
inc
jle
or
add
push
push
pop
add
test
imul
pop
frstor
inc
push
pop
pop
hlt
xchg
decl
jo
dec
icebp
cmpsb
or
add
or
jns
aas
xchg
add
mov
adc
dec
ds
jno
mov
sbb
mov
outsb
add
dec
sbb
cmp
adc
push
lds
repz
cmp
lods
push
js
das
sbb
and
jo
add
or
xlat
insl
xor
nop
add
adc
movb
ret
loope
sbb
stos
popa
pop
gs
les
popf
add
push
cli
fwait
dec
jae
add
incl
mov
pop
sarl
add
ss
insl
popf
mov
add
jno
jle
xor
jl
add
fdiv
mov
rclb
cmp
pop
imul
out
aaa
inc
pop
dec
jno
add
pop
mov
xor
add
xchg
adc
nop
xchg
xchg
mov
cmp
and
lock
jno
add
xor
fistpll
sbbb
xchg
mov
pop
jp
data16
mov
mov
test
std
mov
inc
ficomps
mov
add
pop
rol
pop
dec
pop
add
incb
roll
adc
push
xor
mov
ret
xchg
ds
aam
cmp
orb
xor
mov
pushf
add
aam
ret
push
jg
mov
mov
xchg
ljmp
push
mov
inc
add
xor
icebp
pop
or
sbb
add
inc
cli
jns
mov
loopne
jae
arpl
xor
sub
loopne
add
mov
rcrl
cmp
jno
leave
add
out
sbb
fdivp
insl
jns
mov
jno
add
mov
mov
dec
into
cmc
fidivrs
add
lcall
sbb
mov
dec
les
popa
repnz
xor
add
out
fwait
lret
dec
add
sbb
loop
fadds
mov
into
nop
push
adc
loopne
add
and
sti
lock
or
in
int
mov
lahf
bound
pusha
addr16
imul
add
or
mov
add
jp
inc
iret
dec
movsl
mov
inc
leave
xorl
lds
inc
popf
ljmp
xor
int3
out
iret
jae
add
mov
mov
call
in
in
inc
sbb
fistpll
andb
xchg
jb
add
push
inc
lock
push
ja
add
divl
add
lcall
out
icebp
cmp
add
jmp
addl
sub
js
cld
shrb
or
ret
enter
hlt
cmp
mov
repz
and
lahf
xor
push
pop
xchg
sub
xchg
ret
js
dec
leave
pop
jne
xchg
push
push
adc
add
cmp
aas
jb
outsl
push
jg
mov
movsl
std
into
fdiv
or
lock
loopne
mov
push
mov
pop
push
dec
and
dec
mov
mov
clc
push
repz
lds
aaa
jns
les
fmulp
rorb
ljmp
pop
subb
jae
outsl
add
dec
add
lods
push
xor
mov
add
ret
mov
jmp
int
pushf
mov
outsb
add
xchg
sub
lods
mov
add
pop
add
add
test
cld
and
or
movsb
lods
mov
std
pop
xlat
orb
das
dec
mov
cmp
cli
pop
xor
fwait
jo
stos
loope
sub
mov
jb
push
add
xlat
pop
push
pop
dec
aam
into
shll
icebp
xchg
shlb
add
rol
jmp
sbb
fldl
lea
xchg
cmp
popf
mov
aam
sbb
add
ljmp
add
lods
daa
sbb
lret
rolb
xchg
cmpsl
les
xchg
pop
addr16
or
pop
test
mov
cmp
insl
xchg
add
sahf
cmpsl
test
xor
dec
cwtl
scas
add
jg
add
aad
mov
dec
incl
inc
pop
adc
cs
dec
sahf
outsl
add
int
fildll
insl
jns
add
inc
pop
into
sbb
add
mov
popf
xchg
add
jecxz
jge
jnp
add
xchg
into
movsb
adc
sbbb
add
push
jle
aam
adc
jnp
test
ret
jnp
add
fwait
sub
out
aas
add
es
and
sub
push
addb
or
mov
js
add
and
add
and
xchg
jle
push
mov
xor
inc
lcall
mov
add
gs
adc
aad
rol
in
rol
adc
add
pop
cmp
dec
loop
xchg
mov
pop
gs
pop
add
jecxz
js
push
lds
notb
inc
jge
sbb
pop
mov
out
test
pusha
add
inc
ljmp
arpl
test
xchg
mov
stos
inc
mov
out
dec
gs
xor
in
adc
push
je
bound
es
or
inc
ret
mov
loope
mov
test
add
out
jb
add
mov
je
lret
pop
js
sbbb
cmp
jge
lea
sub
fdiv
shr
popf
add
jnp
stos
out
out
xchg
dec
mov
orl
dec
faddl
mov
lea
and
je
jecxz
xlat
in
mov
jg
add
faddl
pop
jae,pn
jecxz
les
sub
aad
mov
dec
mov
fsubrl
add
ret
js
mov
js
add
mov
xor
fadds
cltd
and
push
xchg
mov
xor
add
mov
flds
cmp
iret
add
mov
out
out
std
or
sub
add
inc
and
movsb
test
pop
stc
in
push
mov
push
xchg
rclb
dec
ret
sub
and
fadds
lods
xor
ljmp
lcall
cwtl
lret
loopne
inc
add
mov
adcl
aaa
cmp
sahf
sbb
mov
dec
ret
mov
pop
xor
pop
push
jp
stos
adc
test
add
add
mov
lret
fmulp
push
add
add
mov
push
mov
imul
push
adc
xchg
jp
inc
push
xchg
adc
popa
ljmp
enter
mov
lods
cwtl
int3
sbb
cmp
fmull
andb
ds
bound
add
test
orb
mov
jge
clc
in
lahf
add
scas
add
add
sti
and
xlat
add
sbb
data16
inc
and
push
hlt
jmp
pop
movsb
test
push
add
and
ja
cmp
and
cltd
data16
pop
mov
pop
pop
pop
cmp
pop
imul
push
add
push
out
add
cmp
repnz
pop
push
push
ds
push
rclb
leave
dec
push
sbb
in
or
popl
add
cs
out
lret
cmpb
cwtl
sub
inc
adc
pop
inc
add
cltd
inc
testb
fisubs
mov
test
push
add
sbb
push
lods
in
arpl
add
xchg
add
icebp
pop
or
adc
fs
mov
cmp
xor
cmp
or
faddl
jecxz
popa
jb
mov
push
cmp
xor
mov
inc
popf
stc
ltr
xor
mov
fdiv
mov
les
dec
ds
pop
jo
loope
cmc
out
cli
daa
jno
loopne
pop
lar
testb
cmp
gs
mov
sub
mov
repz
aas
movsb
addl
add
mov
mov
fcomi
test
xor
inc
mov
and
sbbl
adc
lea
and
xor
aas
sarb
rolb
pop
aad
nop
mov
cmp
in
xchg
nop
add
or
sbb
and
js
dec
cmovns
xlat
pop
jns
xchg
pop
pusha
jg
fsubs
cs
adc
aas
push
adc
push
add
pop
push
mov
xchg
sbb
adc
test
sub
xorl
xor
out
inc
pop
inc
sub
xchg
push
insl
pop
sahf
lods
cmp
add
add
int
shlb
ljmp
or
push
xor
xchg
dec
xchg
or
test
xchg
add
pop
mov
outsl
daa
lcall
mov
popa
add
insb
mov
rcrb
cmp
cmp
lods
das
into
push
sbb
jmp
or
popf
sub
sub
ret
jl
mov
and
mov
cmp
popa
je
add
pop
sbb
aad
cwtl
adc
pop
outsl
mov
clc
out
xchg
cmpsl
mov
jmp
jb
sbb
add
fldl
aas
mov
fldl
dec
aaa
inc
aam
scas
mov
mov
xchg
in
cs
mov
aam
xchg
lock
jg
les
add
imul
jb
or
jle
xchg
cld
xchg
aas
add
inc
addr16
clc
fstl
or
pinsrw
ja
jmp
imul
xchg
inc
xchg
test
mov
inc
aam
outsb
lret
outsl
loopne
mov
xor
std
xchg
push
add
sbb
pop
je
bound
fsubrs
and
jp
mov
int
lret
dec
loop
int3
add
shl
mov
or
push
push
lock
imul
fcmovbe
ret
cmpsb
add
mov
dec
mov
sub
push
ss
add
mov
into
pushf
push
dec
push
sbb
push
sbb
dec
push
test
sub
push
cmp
xor
push
les
div
add
jp
pop
loopne
rclb
xor
sbb
je
outsl
sub
jl
call
stos
rclb
int3
add
mov
sbb
les
jecxz
out
cmp
add
mov
js
cwtl
add
gs
jmp
test
add
mov
add
xor
es
js
or
sub
xor
mov
adc
add
pop
push
adc
rcrb
jl
dec
shrl
je
add
sub
pushaw
lret
jp
add
add
out
add
nop
loop
or
sahf
xchg
out
xor
and
loop
inc
jmp
or
es
dec
add
xchg
cmp
sbb
add
int
sbb
loop
add
add
adc
push
add
test
pusha
int3
pop
iret
add
pop
inc
sbb
or
lods
inc
pop
jno
pop
negb
xchg
xchg
jno
pop
mov
sub
les
stos
adc
push
cmp
jo
mov
daa
and
mov
sahf
adcb
js
inc
add
cmp
ss
and
cld
mov
dec
jbe
out
loopne
sbb
or
push
sbb
pop
call
icebp
and
fcoml
stc
pop
add
or
mov
xor
subl
rorb
push
iret
inc
test
shrb
xchg
dec
fs
iret
stc
je
fdivrs
jle
add
call
sub
fmul
mov
in
pop
jge
push
add
or
imul
fadds
outsb
add
out
sbb
stc
repz
cmp
push
das
jge
lods
and
push
and
addb
pop
cmpsl
iret
jl
mov
jle
cmpsb
test
add
sbb
mov
dec
les
ss
jl
mov
sub
test
push
jae
dec
adc
or
jmp
add
cmp
mov
enter
cmp
push
xor
push
arpl
add
cmpsl
in
mov
cltd
stos
add
out
cwtl
movl
repnz
popa
scas
add
sub
mov
jo
pop
push
sbb
cmp
and
orb
das
mov
in
sar
repnz
mov
jl
jne
std
add
pop
in
ljmp
hlt
or
xor
mov
icebp
out
add
mov
pop
add
es
jne
out
push
outsl
insl
pop
mov
sub
add
call
popa
pop
mov
adc
and
push
pop
add
fmul
pop
xchg
in
or
mov
imul
stos
lret
repz
xchg
or
ss
outsb
enter
mov
or
jb
fcompl
mov
or
call
and
loop
push
inc
testl
imul
enter
lods
popf
cmpl
jg
cs
enter
inc
mov
add
repnz
int3
repnz
add
sarb
mov
cmpsb
stos
ja
into
xlat
loope
adc
stos
mov
negl
outsl
in
mov
pop
jnp
inc
popf
pop
sbb
pop
addb
cmp
daa
xor
mov
and
or
sbb
xor
mov
orb
push
pop
xchg
daa
fadds
outsl
jge
bound
add
pop
add
mov
push
loopne
cmpb
cmp
sub
pop
repnz
ja
mov
stc
arpl
dec
sub
push
into
sbb
sub
push
dec
push
mov
jle
mov
lea
hlt
pusha
cmp
xchg
rclb
ja
jb
fcompl
mov
pop
mov
pusha
imul
and
jno
aas
cld
cmp
pop
mov
loopne
in
jb
add
or
xchg
add
sti
cmpsl
ja
xorps
loope
sub
pop
mov
jae
mov
mov
mov
sarl
hlt
pop
loopne
mov
add
dec
jno
add
mov
pop
add
incl
add
cli
popa
pop
add
xchg
add
sub
idivl
add
sbb
mov
xlat
xchg
dec
hlt
add
cmp
pop
mov
cmp
sbb
or
and
mov
sub
xchg
mov
sub
xor
fcomp
mov
das
add
push
mov
push
mov
add
push
cltd
or
and
pop
xchg
mov
cli
xlat
cmp
add
addb
inc
adc
adc
push
cli
fiadds
data16
and
cmp
ja
nop
ficoml
dec
cs
adc
add
jg
test
cwtl
movsb
rcrb
out
nop
ret
cmp
xchg
mov
push
cltd
repnz
pusha
fs
bound
jne
orb
lret
imul
adc
add
pop
mov
xor
push
addr16
xchg
subb
cwtl
or
mov
inc
mov
cwtl
mov
mov
add
cwtl
pop
loope
and
divps
and
mov
sub
addb
movnti
mov
movsb
scas
adc
sar
or
add
and
ret
or
or
add
pop
out
jo
xchg
aaa
mov
dec
or
scas
out
hlt
adc
out
jno
and
push
lahf
cld
sti
add
test
jp
inc
or
out
nop
or
adc
add
lock
push
addr16
xor
cmp
scas
add
mov
sub
std
out
cmp
jmp
out
lods
add
das
mov
add
push
mov
add
jmp
mov
or
xchg
mov
fiaddl
pushf
outsl
push
mov
add
in
lcall
mov
repz
fsubrs
or
lds
cltd
sub
cmpsb
pusha
add
dec
bound
add
mov
xchg
xchg
aas
popa
imul
cmpsl
iret
adc
inc
pop
dec
loop
mov
push
or
shl
sub
or
add
cmc
jno
adc
bound
mov
jl
scas
sbbl
cmp
aas
nop
pop
sbb
in
sub
adc
repnz
clc
jmp
push
call
aas
xor
in
icebp
mov
add
sub
and
mov
ret
inc
clc
scas
xor
mov
enter
rcl
add
test
popa
jnp
and
add
int3
int
shlb
add
divb
jge
std
xchg
add
jmp
pop
adc
dec
aas
pushl
testl
add
dec
inc
popa
mov
in
adc
nop
enter
mov
xchg
fcmove
mov
add
out
xchg
test
mov
xor
pop
xchg
lock
inc
adc
repz
movsb
out
cmpsl
and
add
cmc
or
push
and
popa
cmc
push
fmul
adc
inc
lret
mov
xorb
pop
hlt
cmpsl
js
add
fidivrs
lock
add
xchg
fcom
dec
scas
dec
add
daa
push
in
int
test
add
mov
int3
rorb
out
out
sub
jbe
data16
je
dec
add
add
pop
bnd
ss
mov
or
sbb
pop
icebp
sbbb
xor
sbbb
aam
mov
add
rorl
cmp
mov
stos
add
popa
data16
clc
add
inc
push
push
aas
cmp
int
inc
fdiv
and
out
and
mov
rclb
jge
lods
add
mov
sub
mov
cwtl
dec
mov
bound
add
adc
shlb
dec
mov
mov
sub
jge
movsl
lret
xchg
sbb
shlb
lods
bound
pop
pop
stc
push
adc
popf
in
cmp
add
cmp
jbe
add
adc
cwtl
out
in
push
xor
inc
add
out
stc
sarb
stos
aad
sub
sub
scas
cmp
inc
test
jae
cmovns
mov
jne
orb
repnz
fwait
adc
add
jno
or
adc
dec
or
xorl
push
in
mov
inc
adcb
pushf
sysret
jecxz
mov
mov
mov
sti
ljmp
sbb
popf
mov
xchg
data16
sbb
xchg
mov
adc
push
jo
push
test
fs
pusha
inc
cmpsb
sarb
sbb
fidivs
ret
mov
sarb
xor
jnp
dec
fwait
mov
push
add
cmp
mov
push
fwait
add
sub
inc
dec
jo
push
es
push
xor
and
mov
and
jp
and
or
popa
stc
push
insl
push
jb
mov
cli
dec
clc
or
jge
pop
mull
addb
jno
add
daa
xchg
inc
xchg
lock
pop
insb
orl
mov
add
jb
pop
movsb
sti
ficoml
sub
dec
add
pop
xchg
notl
lahf
xchg
repnz
pop
cmpsl
pop
add
mov
in
xor
ljmp
add
mov
imul
fidivs
fcompl
adc
mov
sarb
inc
imul
adc
cmpsb
mov
fldenv
sbb
xor
add
xchg
push
cli
aas
xor
or
cwtl
jmp
pop
aam
inc
or
test
in
ds
out
pop
xor
pusha
dec
inc
jno
xor
cmpsb
leave
dec
das
shll
andl
sub
dec
dec
sub
imulb
jl
fmulp
lea
and
fstpl
stos
add
outsb
push
addb
mov
leave
aam
jmp
add
scas
and
sbb
xor
pop
inc
push
lret
test
sbb
mov
dec
divl
pop
ja
cmp
mov
repz
sub
sbb
int
stos
dec
mov
ss
test
pusha
sub
push
add
out
ret
add
sub
insb
icebp
bnd
jnp
das
loopne
pushf
push
nopl
fiadds
int3
push
xchg
notl
pop
enter
pop
shld
xor
test
clc
dec
out
add
aas
cltd
sahf
or
popa
add
shrb
pop
cwtl
dec
cmpsl
test
push
dec
add
sahf
mov
popl
aad
loop
mov
stos
sbb
std
mov
jno
push
mov
and
movsl
or
add
or
pusha
dec
fcomip
add
ret
js
sub
std
xchg
dec
lret
mov
push
pop
add
mov
push
dec
sub
xlat
inc
mov
dec
testl
jb
push
rclb
stos
cltd
out
push
cmp
cmp
mov
lods
mov
int3
xchg
lds
ret
ds
sbbl
mov
std
dec
imul
int
xlat
push
lea
sbb
sub
jle
addr16
dec
imul
or
inc
sbb
outsl
jle
add
lock
pop
jo
push
leave
sub
and
jno
add
pop
repz
add
cmp
and
loope
in
inc
stc
mov
add
mov
push
add
add
xchg
dec
jbe
addb
outsl
mov
adc
rcrb
push
adc
inc
hlt
xchg
jle
movsl
xchg
add
data16
mov
adc
sub
pop
adc
aas
in
lods
sbb
pop
ds
in
xor
sub
cmpsb
push
jne
push
aad
add
mov
lods
add
mov
in
jne
repnz
jns
xchg
mov
lock
add
push
in
add
sbb
sub
fadds
inc
clc
dec
dec
dec
xor
negb
ja
das
pop
hlt
jle
add
or
rolb
pop
ss
ret
mov
sbb
loopne
mov
mov
outsl
jbe
push
arpl
push
jp
lret
pop
sbb
mov
je
add
sbb
dec
xor
xchg
sbb
jb
inc
insb
mov
js
in
les
or
lcall
sbb
sub
enter
les
into
js
loopne
adc
clc
pop
add
in
movsl
mov
dec
mov
lods
mov
and
adc
fs
add
dec
sub
js
lea
inc
in
cs
imul
add
mov
loop
xchg
hlt
pop
stc
mov
mov
sub
nop
jg
add
or
add
nopl
call
out
or
push
pop
mov
jmp
stc
lods
add
jbe
add
push
call
pop
add
imul
pop
sub
out
jp
call
insb
sub
imul
mov
jle
sub
add
shrb
add
mov
xchg
test
cmc
loope
add
jns
xor
les
mov
imul
loop
add
pushf
jns
or
shl
roll
xlat
mov
adc
add
jp
add
inc
test
nop
inc
mov
mov
sub
lcall
adc
out
arpl
je
nop
adc
filds
fisttpll
test
sub
negl
fisubl
aaa
insb
lock
lods
mov
xor
add
jno
adc
aaa
out
jne
sahf
out
outsb
add
jmp
jbe
in
push
cmp
xchg
andb
out
push
or
sbb
pop
push
je
dec
in
add
adc
test
and
mov
cmp
xchg
lds
sbb
scas
test
inc
xchg
sbb
arpl
clc
call
and
xchg
xlat
xor
sbb
pxor
sahf
and
push
jo
add
jns
add
scas
xchg
mov
xor
jecxz
mov
add
insl
mov
xchg
ds
ret
sub
jp
jbe
xor
in
ds
push
daa
adc
mov
jp
pop
and
fdivrs
pop
mov
add
lahf
sbb
add
or
popl
xchg
dec
sbb
jmp
fiaddl
repz
xchg
ds
insb
stc
jb
roll
add
add
jge
xor
xchg
loopne
push
or
push
add
pop
dec
in
and
mov
jno
dec
jns
sarl
nop
mov
fwait
adc
jp
in
cmp
lds
sbb
mov
rep
adc
xchg
clc
or
sbb
adc
mov
push
imul
jo
mov
fwait
pop
cmpsb
push
rol
mov
or
pusha
dec
push
or
arpl
pop
or
sub
xchg
adc
movsl
mov
or
cwtl
subb
adc
bound
adc
mov
add
test
mov
or
mov
scas
xor
dec
push
movsl
jg
sbb
repnz
nop
lea
sbb
cmp
xor
and
or
push
xchg
add
cmp
call
aad
or
sbb
dec
add
mov
out
sbb
pop
repnz
rorb
jl
add
adc
dec
mov
cwtl
mov
xchg
loop
fs
mov
sbb
into
jle
cmpsl
call
nop
or
cmp
stc
unpcklps
rcrb
xor
es
mov
push
int3
adc
push
jmp
mov
add
fwait
cmp
pop
xchg
arpl
jae
add
inc
pusha
mov
repnz
pop
mov
pusha
inc
xchg
lock
movsl
popf
cmp
add
movsb
cmpsl
ss
bnd
int3
sbb
cmc
dec
das
mov
decb
push
xor
dec
dec
jmp
cmpsb
and
pop
or
xor
mov
jg
mov
xor
push
sub
pop
xor
mov
cld
add
mov
clc
fcom
or
sbb
jecxz
push
out
lods
cmp
mov
mov
add
popf
inc
sahf
fsubr
jnp
mov
jae
movsl
outsl
int3
xchg
add
mov
sub
shrb
repz
pop
and
jae
fs
lea
xchg
dec
aaa
ja
pushf
sub
mov
adc
je
xor
xchg
and
out
fwait
in
add
cmpsb
pop
pop
pusha
addb
out
pusha
enter
roll
insb
pop
mov
dec
fidivl
and
xor
add
fsubr
mov
pop
pop
fildll
popa
call
scas
shrb
and
sbb
orl
push
sti
mov
into
shrb
add
shll
cld
arpl
add
int
add
push
cmp
add
add
pop
clc
xchg
cld
rorb
mov
inc
adc
pop
adc
adc
adc
scas
adc
adc
das
mov
sub
cli
sti
adcl
pop
aad
add
adc
add
ja
sti
add
add
iret
and
andb
add
jbe
dec
push
sahf
pop
add
ss
mov
adcl
popf
fldl
icebp
sbb
dec
jns
fs
data16
adc
dec
icebp
push
add
jg
aam
movsl
jmp
add
aad
dec
add
mov
mov
add
mov
nop
add
mov
movsb
add
dec
stos
rcll
add
shl
xchg
xchg
fs
xchg
jl
jp
cmp
add
pop
sub
fistpl
cld
add
xchg
hlt
stos
fsubs
int3
sbb
push
jae
add
divb
pusha
bound
and
jb
xchg
add
jmp
fwait
es
stos
pop
cwtl
push
jecxz
fdiv
ret
mov
mov
push
xor
jg
fiadds
dec
scas
jae
fs
ds
add
mov
lahf
inc
jp
cmp
pop
xor
lcall
mov
popa
sarb
add
mov
sbb
psrad
add
in
or
aas
mov
jl
sbb
sbb
add
xchg
lea
inc
ljmp
push
lret
imul
mov
mov
jle
add
outsb
in
add
push
and
insb
jno
xor
hlt
xchg
mov
xchg
in
lret
sti
sbb
das
pusha
push
add
aaa
push
out
sub
adc
clc
mov
mov
popf
add
out
xchg
pusha
lcallw
lea
mov
sbb
sbb
test
push
icebp
inc
add
or
jb
jecxz
bound
sbb
scas
lods
jge
add
in
mov
push
rol
in
fldcw
add
adc
mov
fnstcw
inc
stc
push
jle
add
insl
popa
nop
pop
add
leave
subl
mov
dec
dec
dec
aaa
rcr
rolb
cwtl
xchg
add
enter
lcall
inc
and
and
inc
inc
push
mov
mov
push
dec
mov
add
fistl
cmc
cmp
cli
int3
sbb
pop
xor
shlb
clc
je
ror
sub
jmp
subl
in
add
jbe
pop
mov
or
sbb
into
sbb
jbe
pop
shlb
mov
add
dec
bound
sahf
jg
add
fsubp
in
dec
and
loope
jae
jecxz
inc
dec
arpl
fwait
cld
adc
pop
rcrb
rorb
add
mov
or
shlb
mov
push
daa
sub
cmpb
iret
sbb
fiaddl
in
cmp
mov
sbb
test
ficoml
in
aas
xor
xchg
cmp
movsl
lret
add
sahf
int3
mov
lea
and
fs
dec
xor
mov
andb
sbb
xor
add
in
and
icebp
scas
outsl
ret
cmp
pop
sbb
push
jo
pop
test
add
lds
fwait
in
cmc
shlb
mov
sbb
faddl
sarl
aam
subb
add
jecxz
ds
jo
mov
inc
add
mov
cmp
pop
or
pop
inc
hlt
sar
xchg
jno
add
dec
inc
popf
mov
cltd
dec
xchg
push
aas
pusha
xchg
push
mov
outsl
adc
lahf
mov
push
jle
sub
mov
add
imul
fiaddl
cmpsb
xor
lods
mov
in
hlt
out
cmp
pop
outsl
sahf
jge
add
movsb
inc
and
negl
insl
rcr
arpl
ljmp
cmp
dec
jl
jbe
or
add
inc
in
bound
adc
in
cmpsb
jl
cmp
out
add
sub
and
xchg
cmp
add
je
dec
adc
adc
xchg
movsl
xchg
cmp
or
mov
sti
loop
xchg
fwait
add
jl
push
cmovo
mov
dec
mov
jae
add
adc
cmp
adc
call
push
popa
inc
sahf
aaa
cmpsl
or
sub
sbbb
fwait
test
add
leave
add
add
dec
loope
fmul
fsubrl
jle
frstor
add
jl
jg
jo
mov
dec
imul
and
mov
cmpb
cli
js
test
mov
aaa
add
jnp
dec
xlat
movsb
adc
xor
dec
cwtl
out
add
ja
mov
add
mov
add
imul
cmp
mov
dec
loopne
push
push
add
bound
sub
adc
push
jo
mov
push
pop
xor
cld
add
imul
mov
mov
push
daa
push
fucom
inc
into
outsl
fwait
loopne
bound
add
pop
scas
cmp
mov
cmp
les
aam
out
ret
loopne
mov
add
mov
stos
fiaddl
fistpl
add
loopne
push
into
fdivrl
shl
add
jo
xor
jnp
add
loopne
popa
adc
cmpsl
pop
add
pop
mov
stos
aad
int3
add
cmp
popf
add
add
pop
cmpsl
fnstsw
add
aas
in
loope,pn
jp
push
rol
jbe
inc
sub
cwtl
jmp
cmp
inc
cli
add
repz
dec
sti
ss
sub
and
test
or
jnp
pusha
addb
jo
dec
sub
mov
ds
adc
stos
fucomp
add
xor
or
jbe
ds
add
mov
sbb
inc
dec
adc
mov
lahf
shr
adc
push
cwtl
dec
pop
loopne
loopne
inc
add
cli
push
push
add
inc
ds
shld
ret
push
xchg
fistps
mov
aad
add
mov
xlat
mov
ja
fadds
sbb
mov
jge
add
pop
mov
rolb
dec
stos
or
adc
ret
jns
data16
jns
rclb
add
dec
out
push
scas
jp
add
cmp
ds
nop
hlt
add
ja
xor
xor
sbb
pusha
and
pop
cmpsb
sub
inc
jmp
test
add
fs
lea
adc
jle
daa
or
cld
icebp
cmc
push
cmp
pop
pop
dec
sbb
xor
pop
add
adc
adc
pop
inc
mov
fnsave
xor
sarb
add
sbb
sub
jb
jne
loope
in
movsb
pop
cld
lock
lock
add
cmpsb
mov
sbbb
pushf
pop
adc
pop
lahf
sbb
push
add
mov
dec
sub
xchg
stos
cltd
js
dec
cwtl
add
mov
inc
sbb
jne
push
jle
add
dec
daa
pop
add
push
cmp
mov
push
mov
sbb
push
or
add
fs
and
mov
push
ret
call
pushf
sbb
jmp
add
jge
test
test
push
fwait
rolb
cmpsl
mov
adc
leave
push
sbb
sbb
clc
jecxz
ljmp
sbb
mov
cmpsl
xchg
outsb
xchg
faddl
adc
dec
jg
jo
add
push
aad
out
add
popa
and
lds
pop
adc
dec
inc
add
sbb
stc
jb
test
aaa
add
pop
ret
in
inc
add
xor
popa
sbb
and
adc
stos
push
shl
inc
inc
aas
daa
push
push
out
mov
or
xlat
sub
lcall
ljmp
nop
int
cmpsb
shll
sbbb
pop
dec
add
add
cmc
jmp
cmp
mulb
push
jge
pop
mov
lret
or
fmuls
add
adc
add
out
add
inc
xchg
jno
add
into
rorb
push
push
jle
data16
sub
mov
icebp
sub
add
fadd
sbb
dec
pop
add
push
mov
jne
movsl
and
pusha
add
inc
into
adc
jbe
pop
xor
push
add
jae
dec
cld
xor
mov
and
inc
or
std
jne
int3
pop
add
xorl
dec
add
sbb
mov
mov
push
add
dec
or
lea
in
aas
add
or
popf
aas
add
je
enter
add
cmp
adc
loope
ret
sbb
insl
xsave
dec
add
adc
addl
cmp
in
sbbl
fs
roll
sub
push
shlb
pop
mov
pusha
dec
sbb
mov
sbb
adc
pop
das
insl
add
ljmp
cld
fsubr
add
out
mov
sbb
ljmp
loop
dec
mov
push
push
in
rcl
xor
dec
pop
insl
scas
out
jmp
adcb
add
and
xor
sahf
out
pop
test
jb
or
dec
cmp
add
xchg
mov
cld
sahf
pop
push
cmp
push
jnp
pusha
cmp
adc
test
sbb
add
mov
aad
lock
add
push
cmpsb
xchg
sub
int3
sub
xchg
mov
iret
les
jmp
fidivs
sub
mov
sbb
adc
sub
adc
pop
sbb
std
fadds
add
pop
inc
roll
or
add
stc
mov
add
scas
and
fadds
addr16
add
jp
push
aas
cmc
add
shl
fucomip
mov
pop
mulb
xor
push
mov
jnp
add
xchg
in
ss
add
mov
rolb
dec
sub
xor
mov
adc
repnz
ja
adc
add
jmp
and
scas
pop
cmpsl
aam
test
adc
popa
pop
xorb
xchg
and
sbb
xchg
xorb
jbe
or
jecxz
in
xchg
mov
mov
repz
add
xchg
clc
cmpsl
xlat
es
lea
insb
dec
pop
or
push
ja
jno
not
add
andl
sub
test
sahf
jl
sbb
rolb
jg
fstpt
ja
loope
sbb
shll
das
mov
pause
int
out
repz
mov
add
jg
pop
cmp
ret
movsb
add
xchg
dec
dec
int
push
clc
adc
dec
jae
add
popa
vphaddubd
push
adc
cmc
loopne
adc
add
and
adc
int3
and
cmp
add
nop
clc
sbb
cmovns
mov
add
and
or
jno
add
mov
sbb
ss
scas
das
adc
add
fstl
add
dec
and
cld
repz
xchg
scas
add
sbb
sbb
adc
dec
or
xchg
pop
repnz
sub
mov
mov
pusha
xor
push
clc
mov
nop
inc
jbe
pop
cmp
jb
or
mov
nop
adcb
ret
xor
push
or
or
sbb
xchg
imul
or
jno
add
mov
popl
and
jge
dec
cmp
fmuls
xchg
fsub
imul
xor
mov
jo
pop
adc
incl
dec
sarb
xchg
es
mov
add
pusha
jne
mov
jge
push
adc
mov
lock
add
imul
nop
stos
add
mov
pop
stc
out
jl
inc
mov
or
mov
add
jne
imul
add
push
imul
les
jae
and
dec
mov
xchg
std
jg
add
add
loop
mov
nop
sbbb
xor
adc
jbe
inc
cltd
test
sbb
inc
into
inc
fisubrs
adc
clc
outsl
pop
cmpsl
cmp
push
inc
jp
mov
cld
add
mov
out
add
fwait
inc
ja
iret
xchg
out
dec
xchg
push
lock
sbb
test
lret
xchg
mov
xchg
insb
add
and
mov
or
cmp
cli
lahf
xchg
pop
xchg
pop
icebp
mov
aas
push
mov
sti
in
and
pop
cwtl
push
loopne
adc
cmp
ftst
push
test
fisubs
xchg
punpckldq
pusha
outsl
adc
hlt
adc
movl
outsb
add
sbb
sub
cmc
out
add
mov
test
jnp
fiadds
shll
add
or
adc
stc
xlat
push
mov
jmp
adc
adc
or
lret
sarl
add
lock
jge
sub
mov
jno
negb
or
ljmp
cmp
and
lea
xlat
mov
imul
inc
nop
add
fcomip
sbb
nop
mov
pop
add
xor
hlt
test
xchg
sbb
bound
clc
mov
out
and
cmp
push
jge
dec
ret
int
sub
mov
popl
sbb
sbb
pushf
loopne
xchg
add
xor
data16
add
mov
pushf
cld
push
rolb
sahf
jae
xor
hlt
mov
adc
es
inc
bound
cmp
mov
mov
pop
xchg
add
mov
ret
jmp
icebp
cmp
lds
mov
adc
popl
pop
add
adc
cmp
inc
test
xor
and
mov
scas
xor
cwtl
inc
add
adc
aam
idivw
xchg
cmpsb
stc
or
gs
stc
sarb
neg
fsubp
and
pop
enter
mov
xorw
cmp
push
xor
pop
hlt
lock
pop
jecxz
add
notl
out
ljmp
lahf
mov
cltd
inc
push
and
add
push
jae
pop
xchg
pop
mov
cld
arpl
and
in
inc
or
pop
clc
inc
icebp
inc
cmp
or
add
jnp
xchg
fs
gs
add
jle,pn
icebp
mov
sti
add
pop
ds
jno
test
mov
daa
stos
lock
add
enter
cmpsb
pop
mov
jne
push
jo
shlb
sub
ret
pmaxub
mov
iret
add
mov
jno
movsl
pop
push
add
lcall
jg
fs
inc
xchg
pop
adc
fiaddl
mov
cli
add
addb
mov
add
dec
ret
adc
add
add
dec
push
sbb
push
cltd
add
es
sub
add
push
inc
rcrl
enter
pop
and
movb
inc
add
and
xor
xorb
mov
sarl
clc
jle
add
adc
and
mov
std
pop
dec
mov
nop
in
dec
out
lcall
xor
add
icebp
inc
or
call
cmpsl
add
or
fucomi
nop
jbe
mov
add
addl
out
cmp
dec
imul
adc
clc
shlb
jl
ss
enter
and
inc
adc
push
mov
and
dec
cmp
dec
cmpsl
mov
mov
add
mov
clc
pop
jnp
add
dec
xchg
fsts
adc
loope
inc
push
shll
jge
push
inc
mov
in
dec
cmp
adc
in
jecxz
push
add
je
lea
adc
add
sub
dec
pop
pop
and
mov
add
pop
cltd
xor
push
loope
leave
jle
mov
push
pusha
inc
adc
sbb
add
dec
gs
jbe
cmp
push
lods
and
add
mov
pop
negl
cmp
in
bound
add
xorb
imul
pop
cmp
jle
repz
add
or
inc
push
mov
xchg
insl
adc
stos
jecxz
ds
pop
lret
sub
pop
sbbb
int3
leave
pop
es
loop
sbb
repz
loopne
sub
aam
inc
xchg
xor
or
dec
ror
gs
mov
in
inc
cltd
xor
push
subb
jb
jne
emms
ds
cmpsb
cmpsl
jae
sbb
jmp
push
or
pop
repnz
jo
ljmp
icebp
mov
sub
sahf
sbb
sti
ficomps
add
dec
dec
dec
fstpt
mov
stos
cmpsl
mov
dec
fxtract
adc
lock
and
sti
push
loopne
mov
test
dec
loope
outsl
loop
dec
in
jge
idivb
sarb
and
mov
push
jno
sub
xor
cmp
into
bswap
push
mov
lret
mov
inc
mov
iret
popa
mov
aad
inc
sbb
mov
inc
inc
orl
fisttpl
mov
mov
pop
xor
ss
mov
dec
cs
movsb
jne
mov
jp
add
aaa
popa
dec
in
addb
xor
fs
and
or
cmpl
aam
push
push
int
mov
ret
mov
jmp
andb
add
add
sub
je
xchg
ljmp
mov
bound
pusha
ficoml
mov
scas
jb
xchg
jnp
adcl
clc
les
or
inc
jno
xchg
dec
jecxz
add
mov
out
addr16
or
rcrb
jle
add
ficoms
xchg
fsubs
push
cli
xchg
inc
pop
pop
jl
shr
cmc
das
cwtl
mov
adc
pop
xor
imul
das
add
adc
test
xchg
adc
fs
jbe
mov
fldt
or
add
sbb
jmp
fimull
clc
push
adc
mov
or
addb
lock
add
xchg
ds
shl
popl
xor
add
leave
mov
movsl
cmp
int3
adc
pop
in
mov
pushf
add
ret
pop
into
jle
stos
add
mov
aam
rcll
aas
cmp
xchg
je
imul
jle
movsl
scas
ret
les
and
movlps
int
fcmovbe
daa
mov
jo
mov
movsb
test
adc
scas
mov
add
cli
lahf
cwtl
roll
stos
int3
inc
push
outsb
clc
xor
pop
xchg
popw
mov
stos
daa
fldenv
push
fmulp
popa
mull
cwtl
faddl
push
push
mov
add
int
lcall
mov
rclb
mov
aas
shlb
mov
sub
cwtl
and
divb
and
mov
jo
xchg
fildll
adc
dec
mov
add
xor
cmp
scas
xchg
ljmp
test
fsubrs
mov
adc
sarl
sub
cmpsl
mov
pop
int3
dec
in
icebp
adcb
cli
add
adc
jo
shlb
or
out
add
sbb
xchg
les
in
lahf
clc
jnp
sbb
adc
cli
fistps
add
cld
add
int
popl
in
sub
leave
test
int3
jle
shrl
adc
sbb
pusha
sbbb
adc
add
mov
mov
adc
and
mov
or
mov
jle
push
mov
pusha
addb
lods
or
jno
mov
xor
lcall
cli
sbb
cmp
bound
ljmp
test
mov
faddp
int3
ffree
push
cmpsb
data16
dec
add
daa
adc
outsl
cmp
cmpsb
sti
xor
mov
push
rclb
js
rorl
je
add
sarb
push
add
sub
in
fisttps
or
push
loopne
stc
sub
mov
dec
add
test
shlb
inc
push
pop
or
pop
lods
ljmp
push
arpl
jae
test
or
data16
jmp
mov
sbb
insb
and
xor
arpl
sub
mov
std
bound
or
shlb
out
andb
add
lahf
jno
dec
mov
les
add
lods
sti
dec
cmp
enter
in
test
push
xchg
pop
divb
lods
jmp
sarb
mov
pandn
push
adc
sbb
xor
add
dec
adc
and
push
adc
add
push
and
sbb
shll
movl
and
cmp
fistps
sub
dec
sarb
testb
mov
movsb
cmp
out
test
repnz
add
insl
adc
add
nop
aam
dec
push
inc
add
or
sbb
jle
popa
ror
js
arpl
cwtl
cmc
push
cld
test
add
xchg
push
sarb
aas
xchg
enter
push
sub
mov
sbbl
pop
jns
add
inc
inc
pushf
cli
subl
pop
clc
or
xchg
fs
notb
push
push
bound
lret
std
jo
int3
xorb
mov
stos
insb
sub
mov
outsb
cmp
pusha
arpl
lea
and
enter
push
aad
adc
pusha
leave
or
jmp
adc
fistps
mov
stos
ds
js
or
insl
stos
aaa
movsl
jecxz
lock
lret
add
and
xchg
push
out
or
testb
pop
pop
fdivs
lods
add
mov
sbb
xorl
mov
daa
xchg
lds
xchg
jp
mov
jecxz
sbb
int
pop
mov
inc
add
push
cs
dec
repz
jg
movsb
add
jae
mov
scas
jge
pop
popf
sbb
popa
test
dec
test
imul
sub
js
inc
sbb
add
je
mov
push
enter
add
pushf
inc
test
add
adc
cmp
ret
add
jb
lcall
sub
jae
inc
pop
xor
rcr
jo
insb
popl
popf
dec
and
lret
inc
jno
add
rorb
xchg
call
in
into
cmp
or
popa
call
or
insb
or
xchg
inc
add
cmpb
mov
daa
add
mov
addb
ret
sbb
enter
aas
adc
and
adc
or
adc
test
mov
or
inc
sti
and
or
arpl
out
push
and
insl
adc
dec
or
nop
sub
add
and
mov
call
sahf
adc
arpl
outsl
lock
xchg
add
out
repz
test
cmp
sbb
lcall
adc
pusha
pop
or
mov
sub
xor
sub
scas
or
notl
xchg
fcmovnb
xchg
adcl
add
aas
add
mov
roll
shlb
xchg
add
cmp
xor
push
loopne
mov
push
lcall
enter
jg
jno
cmp
pop
xorb
add
sub
popf
cmp
sub
in
push
ljmp
pop
pop
inc
scas
dec
sbb
add
sarl
addr16
nop
incl
cltd
push
daa
stos
scas
mov
push
mov
je
jno
cmpsl
lods
lods
cmp
mov
adcb
lret
add
into
sbb
jns
add
cmp
xor
cmc
cmp
and
lfs
cltd
sub
punpcklbw
mov
test
xor
inc
shr
fstpl
dec
js
adc
sub
inc
push
insb
fisttps
push
sbb
mov
js,pt
or
cmp
shlb
cmp
aad
mov
add
mov
xchg
scas
ja
fists
popa
dec
or
enter
dec
and
cmp
pop
sbb
xor
add
and
jge
pusha
test
cmp
add
adc
loop
add
aad
mov
mov
dec
in
or
inc
sub
add
mov
shrb
shl
aad
mov
add
mov
mov
dec
jp
sub
mov
add
jp
jl
push
in
mov
xchg
lea
icebp
push
sub
aas
ljmp
add
mov
cmp
pop
sub
stos
imul
fldenv
add
shl
hlt
xchg
arpl
xchg
in
mov
pop
pop
outsb
ret
push
cs
cmp
into
and
dec
shll
sub
cmp
loopne
popa
mov
mov
mov
loope
cld
in
jno
sbb
mov
sbb
insl
sbb
fcmovb
jo
jmp
inc
leave
orl
jae
jge
lret
lock
imul
pop
leave
and
sbb
test
inc
add
rcll
dec
xchg
sub
repz
aad
call
test
push
sbbb
in
pop
pop
add
inc
jnp
pusha
or
inc
jg
sar
mov
loope
add
cmc
push
cwtl
add
jae
jns
xchg
bound
cltd
aam
add
pop
mov
pop
aad
incl
push
fsubrl
enter
nop
in
shlb
pop
add
xchg
js
add
gs
shlb
sbb
xchg
vpaddsb
ret
pop
cmp
add
push
add
clc
push
adc
mov
movsl
inc
cld
dec
arpl
test
xchg
mov
push
add
or
lahf
inc
sub
jle
mov
and
jne
add
or
add
mov
push
or
push
jae
pop
aaa
mov
movsb
nop
pop
gs
les
ljmp
xor
aam
sar
sub
and
int
or
inc
add
lds
xchg
call
jmp
add
mov
cmp
jo
mov
in
lods
jne
and
pop
add
in
adc
lahf
dec
orb
in
xchg
filds
cmp
push
lahf
out
cmpb
aad
mov
shlb
shll
xchg
add
enter
push
pop
inc
jge
js
adc
es
xor
std
xchg
mov
dec
mov
add
xor
out
adc
hlt
sbb
lods
dec
ret
mov
add
je
and
xor
call
insl
scas
movsb
mov
jp
add
mov
les
lods
sti
jne
loope
and
ss
jl
aad
out
shr
xchg
or
pop
das
out
cmpl
pop
add
mov
arpl
push
addl
and
add
mov
lret
adc
mov
push
loop
fadd
pop
dec
cli
sbb
xor
jmp
and
xchg
das
sbb
mov
add
outsl
call
inc
cs
dec
lock
lds
ficompl
test
frstor
jge
cmp
fdiv
outsb
adc
pop
call
je
test
lods
repz
and
jb
pop
aad
enter
mov
push
push
inc
jae
fs
jl
xchg
popa
lahf
call
adc
jno
lea
mov
mov
fldl
fiaddl
jae
or
sahf
out
out
jmp
cmc
mov
cmp
xchg
add
and
out
fs
lods
dec
xchg
pop
fcomip
push
daa
bound
dec
ja
add
sbb
pushf
add
add
dec
addr16
xchg
les
insb
pop
test
cwtl
ret
and
mov
in
testb
push
or
mov
test
cld
jl
add
outsl
roll
stos
xchg
adc
add
iret
lret
and
jae
bound
mov
jns
int
ds
cld
xchg
push
xor
xchg
sbb
loope
sbb
add
cmp
mov
mov
adc
mov
loop
dec
xor
sbb
push
arpl
aam
jnp
out
lret
sub
pop
fwait
stc
stos
fisttpll
lahf
mov
lret
add
pop
pop
int
mov
add
or
or
ja
lock
dec
push
mov
sarl
jae
add
stos
add
push
add
push
pop
pushf
fs
xchg
aam
adc
push
cmp
add
in
xlat
jb
pop
or
and
mov
iret
sub
xor
stos
popf
inc
xchg
push
cmp
fisubl
cli
dec
push
add
not
adc
std
lea
pop
cltd
jp
in
sbb
sahf
loope
scas
cmp
xchg
lds
and
and
imul
add
rcrb
lea
inc
push
mov
pusha
mov
mov
jae
add
lahf
scas
test
or
inc
mov
out
sub
insl
mov
sbb
in
push
jp
add
or
and
rcrb
xchg
nop
les
lods
data16
out
movsb
js
lock
out
pop
push
xor
mov
jne
mov
mov
mov
insl
sub
or
cmp
pusha
add
jno
jmp
adc
rcrb
outsl
add
or
ud0
jo
addb
sarb
sbb
fucomip
or
add
cmpsl
jno
push
fdivrs
subl
add
mov
add
gs
pop
xchg
dec
ds
clc
cmp
sbb
data16
sub
push
mov
mov
xor
cmp
and
add
mov
rolb
mov
iret
sub
mov
sbb
cmp
cmp
or
mulb
shrb
lret
lock
adc
inc
aad
add
push
mov
dec
and
push
call
cmpb
or
push
cmpsb
sti
rcr
xchg
cli
in
es
fcmovu
pop
cmp
pop
mov
mov
jp
sbb
xor
push
test
call
out
add
js
and
pusha
and
or
jg
mov
push
pop
in
lret
and
enter
inc
aaa
dec
aas
xchg
inc
pop
insl
jb
mov
sbbl
out
js
loope
inc
lods
outsb
sub
xor
or
or
add
and
cmp
popa
inc
or
push
aas
mov
pushf
push
sub
adc
test
xchg
outsl
jp
inc
push
lods
cltd
pop
leave
cmp
mov
xchg
imul
popl
dec
mov
pop
or
cmp
movsb
mov
rorb
jl
shrb
xor
and
adc
or
mov
clc
vmovshdup
orl
hlt
or
shlb
aaa
aas
adc
push
pop
adc
adc
clc
into
out
sub
fldt
imul
cmp
clc
fldl
sbb
jo
sbb
gs
data16
scas
repz
ret
pop
sbbb
push
and
lock
push
mov
and
xchg
lcall
shlb
add
sub
mov
addr16
int3
sub
movsb
dec
xor
jg
mov
popa
stos
inc
mov
pusha
jmp
adc
add
or
in
int
jnp
sub
jecxz
adc
and
in
push
add
nop
mov
add
imul
inc
cmp
pushl
jae
add
jge
mov
push
neg
or
cwtl
fstpt
push
adc
fiadds
call
adc
ret
dec
daa
pop
add
mov
add
pop
mov
aam
inc
pusha
mov
inc
mov
int
xchg
sbb
inc
loopne
jp
out
and
gs
add
fs
cmp
imul
aas
insl
mov
or
int3
mov
ficoms
mov
into
add
sarb
or
mov
hlt
push
iret
or
xor
inc
test
arpl
xlat
pop
jno
add
popf
jno
cld
sar
and
pop
lds
and
sbb
add
sub
adc
dec
xor
cmp
mov
bound
xor
mov
or
dec
add
das
xor
add
inc
jb
imul
mov
popf
jno
adc
jno
and
sub
or
clc
adc
mov
insb
js
add
fmull
xchg
cs
lret
and
rolb
hlt
pop
mov
and
cmpsb
int
xchg
xchg
mov
les
into
jl
adc
movsb
repnz
ja
ret
jmp
loop
rcrl
fdivrl
mov
add
cmpl
shlb
push
inc
rclb
mov
push
adc
dec
loope
dec
in
aad
lock
dec
jnp
cmp
mov
data16
pusha
dec
sbb
mov
add
shlb
push
push
mov
adc
sub
shl
pop
add
fnstsw
fcoml
mov
add
sbb
cmpsl
add
xchg
lods
pop
ss
add
and
ret
add
mov
test
aaa
in
mov
test
push
push
cmp
add
sbb
inc
mov
add
rcll
sbb
push
into
cli
mov
in
test
and
add
xchg
pop
mov
outsb
pop
add
xchg
push
cld
stos
pop
add
in
daa
loopne
mov
add
xor
sub
into
adc
pop
xor
ret
add
ljmp
mov
lods
cmp
dec
stos
sub
xor
add
cli
repz
rcl
and
xor
push
mov
adcb
int3
add
sbb
cwtl
mov
dec
mov
jg
mov
add
test
pop
mov
sub
jmp
outsb
mov
mov
add
mov
call
bound
mov
scas
mov
scas
push
fs
ror
cwtl
jmp
pop
scas
xchg
jge
push
rclb
mov
fisttps
add
pop
add
push
dec
mov
jae
xchg
xchg
cmp
rol
sub
outsl
inc
popa
add
mov
push
jge
add
sub
inc
inc
rcrb
xchg
inc
jl
adc
stos
jbe
sub
out
lods
es
outsb
add
icebp
inc
test
lock
mov
int3
in
add
mov
cmp
lock
cmpsb
je
aaa
pusha
je
cmp
push
mov
adc
pop
xchg
add
jle
aaa
sub
push
adc
xchg
add
shlb
or
and
and
inc
stos
addb
push
dec
xor
and
cmc
aam
pop
rclb
and
inc
aaa
cmp
shll
add
xorb
out
mov
adc
add
lock
pop
xor
mov
data16
repz
jnp
pop
push
push
push
mov
and
addb
mov
stos
fsubs
sbb
jb
adc
add
push
cltd
dec
pop
inc
insl
dec
leave
dec
add
sarb
xor
cmp
mov
add
insl
adc
cmpsb
add
mov
push
cmp
sub
inc
lock
loopne
addb
push
add
and
or
push
add
test
or
xchg
ret
mov
comiss
iret
addb
neg
hlt
jo
adc
pop
add
insb
sahf
mov
andb
add
popa
adc
add
mov
push
pop
shrb
aam
sbb
add
xchg
push
push
jg
ret
adc
lds
xor
mov
stos
add
in
mov
jmp
rcll
jo
inc
add
cmp
add
jne
es
jg
or
push
lahf
push
adc
jbe
sbb
add
inc
data16
aam
ds
daa
add
jecxz
pushf
cmp
sub
leavew
add
dec
push
insl
les
scas
add
sbb
add
adc
push
add
daa
fwait
inc
add
mov
cmpl
fimuls
bound
mov
sbb
sti
and
add
or
push
mov
cltd
push
mov
js
out
sub
or
add
popa
int
or
mov
ret
pusha
cmp
dec
xor
push
add
test
je
mov
sarl
subb
hlt
add
ret
cmp
insl
sbb
pop
add
dec
adc
add
insb
cld
fwait
jne
cmp
shl
divb
andb
push
out
rolb
pop
lret
imul
call
aad
cmp
add
in
push
lret
dec
add
pop
sbb
mov
fimull
repnz
in
sbb
dec
add
mov
cld
add
mov
data16
js
adc
dec
lcall
out
push
bound
dec
and
mov
add
fsub
dec
mov
pop
movsl
adcb
mov
push
add
dec
inc
push
cmp
shr
scas
pop
dec
pop
adcb
mov
add
mov
je
add
call
test
aam
andb
add
inc
test
jns
lahf
add
int
add
js
arpl
enter
sbb
ds
iret
lret
jmp
enter
push
enter
cmp
sub
pop
hlt
sbb
inc
add
push
inc
add
lock
insl
jmp
das
mov
rorb
push
pop
and
inc
mov
adcb
adc
mov
mov
orl
and
mov
add
push
push
add
jnp
mov
push
push
mov
mov
or
xchg
mov
addr16
shlb
adc
enter
mov
subb
xchg
pop
ds
jmp
jo
add
jg
or
ret
push
divl
xlat
nop
call
sahf
or
mov
push
push
pop
add
test
popf
lock
add
jecxz
sbb
or
jp
ljmp
fmull
pusha
sbb
push
add
push
push
cwtl
jl
jb
test
xchg
sub
loop
loope,pt
sbbb
adc
mov
dec
inc
mov
xchg
clc
mov
iret
movsb
and
adc
jnp
add
mov
cmpsl
iret
add
mov
sbb
push
dec
test
dec
xor
insb
push
xchg
leave
sbb
repz
push
mov
ljmp
into
hlt
fisubrl
sub
lret
loop
leave
and
xor
sub
pop
scas
adc
sbb
add
push
dec
jmp
punpcklwd
repz
xor
pop
mov
add
fwait
or
aas
fldl
push
pusha
out
nop
mov
add
mov
mov
cli
cs
lcall
jo
adc
push
jne
pop
dec
lret
imul
outsl
push
xor
lcall
xchg
dec
lock
jb
pushf
add
fimull
xor
add
sbb
xchg
add
and
mov
push
jo
cmp
push
cmp
mov
jmp
pusha
xchg
lods
and
mov
fdivrs
pop
add
in
mov
mov
add
ds
inc
js
pushf
cwtl
inc
add
dec
enter
sub
adc
cmpl
mov
xchg
push
xchg
pop
sbb
rcrl
push
arpl
mov
mov
mov
daa
out
jle
add
and
pop
xchg
sysret
inc
jmp
jg
es
movsb
add
dec
inc
xchg
stos
jecxz
sbb
icebp
xchg
mov
fwait
pop
nop
rolb
ja
mov
mov
add
popf
and
mov
les
jecxz
outsb
jne
adcb
inc
movsb
mov
das
or
cmp
lock
jns
add
icebp
jo
addr16
adc
sti
inc
aam
and
jne
or
pop
out
add
xchg
cmp
std
add
add
insb
test
add
and
pop
arpl
pop
jae
mov
or
or
adc
hlt
rcrl
ljmp
sub
mov
jecxz
sbbb
js
add
aaa
call
inc
and
dec
stos
dec
add
push
sub
add
adc
int
mov
cmp
dec
pop
add
adc
xor
inc
in
pop
arpl
push
push
mov
jmp
in
xlat
add
jno
aam
jp
int
pop
jb
test
sbbb
xchg
imul
or
movsl
adcb
adc
pop
add
sbbb
or
imulb
les
cmp
and
and
and
stos
adc
jne
push
push
mov
xlat
loope
inc
mov
fwait
jbe
gs
add
ljmp
pop
push
scas
mov
ret
mov
std
shl
xchg
pop
add
inc
enter
add
mov
ljmp
enter
in
shrb
lret
sub
sbb
jne
push
inc
pop
xchg
mov
jmp
loopne
mov
cmp
adc
pop
push
inc
add
rcr
lock
mov
lretw
lods
ret
mov
int3
adc
jo
xor
mov
add
mov
xor
out
xchg
fs
jae
dec
aad
sbb
pusha
fbld
aam
xchg
add
xor
les
loop
add
adc
add
mov
icebp
add
push
addr16
mov
add
pop
cmp
rorl
mov
cmp
add
pop
mov
roll
jge
pop
je
outsb
and
leave
pop
adc
hlt
inc
movsb
cmp
clc
sbb
add
aas
pop
cmp
mov
pop
add
out
add
sbb
shlb
and
aas
add
not
pusha
cmp
es
push
adc
adc
sub
mov
mov
pop
ret
dec
push
or
ljmp
enter
pop
sub
in
cwtl
push
nop
movsl
rcrl
into
jns
pop
and
mov
fistl
jae
sbb
cltd
pop
cmp
pushf
insb
fwait
sbb
pop
popa
mov
jge
cmp
shl
cmpsb
add
adc
add
adc
pushf
mov
out
adc
hlt
imul
add
stos
aas
add
add
shl
add
insb
sti
pop
insl
lahf
int
js
mov
stos
sub
es
negb
repnz
addb
mov
push
addr16
pop
leave
add
cmp
cmpb
sahf
lock
aam
inc
jae
mov
push
adc
in
cmp
scas
sub
mov
adc
jbe
add
call
mov
inc
add
push
roll
lock
push
add
cld
push
mov
jno
push
mov
add
scas
pushf
and
xchg
pusha
insb
filds
pop
ljmp
add
push
sbb
mov
movsl
lods
cmp
pop
adc
lahf
mov
add
adc
addl
ret
filds
adc
pop
and
pop
jg
pop
add
mov
jbe
sub
lock
add
aas
jl
add
mov
push
int3
ret
imul
in
jb
cmpsl
jno
or
leave
and
cmp
out
into
add
dec
cmp
dec
fstl
add
aas
icebp
mov
add
mov
fnstcw
add
pop
mov
enter
cmp
or
xor
and
stc
xchg
xchg
or
loopne
rcr
sbb
mov
xchg
dec
add
and
pusha
mov
sbb
pop
sbb
push
rcrb
add
js
or
mov
dec
xchg
add
fadds
and
xchg
fucomip
bound
pop
or
sub
pusha
xchg
lock
pop
loope
push
int
in
sbb
push
add
pop
sub
lahf
add
gs
xor
and
test
cwtl
insl
or
adc
popa
add
sahf
or
int
mov
negl
jo
insl
cmp
sbb
xchg
sbb
add
jae
mov
loopne
mov
scas
add
sub
jne
add
push
mov
adc
shr
sbb
sete
pop
aas
mov
stc
push
jbe
inc
push
mov
mov
movsb
shlb
fiaddl
sbbl
push
test
or
imul
cmp
loopne
icebp
push
cmpsb
add
inc
xchg
pushf
add
mov
add
aam
mov
pop
sub
movsb
mov
add
out
push
into
inc
adc
adcb
xchg
add
mov
inc
popa
mov
mov
dec
fnstsw
and
xchg
jmp
inc
cmp
adc
int
call
mov
and
jb
cli
xchg
scas
add
aad
ret
inc
pop
sbb
ret
mov
cld
cmp
push
add
sub
rclb
std
js
pusha
xchg
dec
aas
add
dec
pop
cmp
add
add
mov
dec
pushf
add
sbb
inc
add
mov
adc
ret
xchg
sub
out
pop
xor
add
mov
sbbl
xchg
in
jge
add
or
nop
gs
imul
adc
add
add
mov
lcall
in
and
add
outsl
clc
adc
jo
aad
xchg
xchg
cmp
or
push
cmp
fmull
cs
or
adc
bound
cmc
jbe
arpl
cltd
int
outsb
add
lret
rcrl
movsb
pop
sbb
sbbb
jp
aas
sbb
add
bound
cmpsl
dec
push
xchg
add
mov
fcomp
add
push
add
ret
loopne
fs
jp
xchg
nop
cmp
lods
frstor
leave
push
nop
add
shrl
add
push
sub
lods
lea
sti
or
sbb
add
repnz
iret
insl
add
add
inc
add
add
mov
sbb
sub
shll
inc
cmp
cmpb
icebp
lcall
mov
rcr
jb
out
add
ds
add
add
and
dec
iret
int3
rcll
clc
jle
push
dec
pop
mov
push
fsubrl
or
cwtl
jbe
inc
cmp
loope
data16
lea
in
ljmp
mov
xchg
jb
sub
add
mov
inc
dec
inc
insb
mov
and
dec
cld
push
add
lods
and
cmp
test
enter
add
stos
repz
bound
jo
jns
or
sahf
mov
cli
lds
pusha
fs
scas
or
js
and
add
mov
or
sbb
addb
lds
push
jo
mov
mov
mov
jge
shr
cmp
jmp
arpl
movsb
cmc
inc
xchg
es
pop
mov
add
dec
gs
loopne
sub
add
sub
incl
cmp
sub
call
jae
mov
xor
pop
addr16
xchg
and
cmp
mov
mov
mov
fst
and
sbb
jle
in
add
adc
lahf
adc
sub
mov
sbb
insb
lret
sub
cwtl
sbb
cmpsb
sbb
or
jl
add
mov
hlt
add
pop
ds
add
scas
mov
cltd
repz
sub
push
mov
test
mov
sub
call
incb
xchg
dec
negb
add
xor
jge
adc
pushf
vunpcklpd
jmp
bound
out
xor
pop
jne
js
fld
mov
mov
cwtl
jl
cs
lods
add
pusha
add
jno
or
pop
mov
int3
add
mov
mov
jbe
leave
add
es
adc
add
adc
sbb
push
mov
addb
mov
add
sub
cmp
pop
xor
cld
add
adc
push
cmpsb
add
jl
push
stos
mull
gs
or
ret
cmp
jne
mov
mov
sahf
into
inc
pop
add
sub
repz
nop
jl
mov
add
adc
leave
cmp
sbb
sub
lock
stos
xorb
shll
adcb
adc
push
dec
add
pop
and
in
out
xchg
sbb
sar
enter
fiadds
test
sbb
addb
add
and
dec
jmp
repz
rclb
adc
jne
mov
push
pop
ljmp
shrb
add
dec
out
jne
pop
dec
add
int
hlt
push
sarl
cld
out
mov
loope
fcoms
mov
or
cs
add
push
inc
add
nop
mov
mov
les
enter
sub
jns
popa
and
xchg
ud0
pop
movsl
js
add
jo
pop
in
adc
push
call
mov
sub
add
sub
jle
add
and
add
xchg
jle
movq
mov
jg
push
push
imul
mov
lret
mov
pop
adc
push
sar
stc
arpl
sub
in
inc
mov
mov
or
loope
int
mov
add
stc
lret
ss
pop
mov
movsl
xor
lock
dec
ret
dec
cmpsb
add
mov
js
add
into
cld
test
inc
or
and
or
mov
lret
xor
les
aad
inc
sbb
mov
xchg
roll
add
mov
enter
pop
imul
lock
lds
loopne
popa
add
mov
pop
add
jb
enter
mov
add
inc
dec
pop
add
inc
in
mov
mov
inc
js
pop
sub
cmpsl
push
add
jnp
aas
daa
jo
repz
xchg
hlt
jo
mov
xor
adc
sbb
inc
mov
clc
push
cmp
stos
xor
adc
jae
inc
aaa
cmp
cmp
mov
sub
xor
jne
add
out
push
shlb
mov
sub
lock
pop
pop
dec
adc
int3
mov
aas
push
ljmp
outsb
or
adc
mov
add
cmc
and
pushf
loopne
cmp
mov
inc
jg
pop
punpckldq
addl
js
sub
in
in
flds
sarb
and
xor
test
call
add
out
xchg
pop
add
imul
sbb
clc
cmpsb
mov
pop
pop
xlat
clc
adc
dec
add
xor
nop
push
jb
pop
aas
sbbl
mov
ret
repz
add
and
add
aas
insl
inc
xor
ret
add
test
pushl
pop
add
add
ret
xor
mov
push
adc
mov
sbb
xlat
and
mov
mov
pop
movsb
inc
popa
xchg
mov
mov
add
pop
add
dec
jp
hlt
cmpsb
and
pop
or
pop
outsl
adc
add
ror
pop
movsl
sub
fcompl
pusha
add
sub
jecxz
xor
pusha
repz
jp
lldt
inc
sarl
dec
and
ret
jl
int
pop
jmp
mov
repnz
xlat
lock
mov
push
cmp
jecxz
sub
adc
enter
int3
stos
cmpb
test
in
shl
lcall
hlt
into
jno
dec
cmp
pop
bsf
cwtl
add
bound
insl
ss
add
stos
cmc
push
flds
add
and
inc
cld
dec
cmp
incl
nop
sahf
cld
ss
fcoms
bound
mov
clc
add
add
popa
jcxz
ds
stos
cmovns
ficoms
cltd
mov
push
das
xlat
sub
in
rol
xor
add
push
outsl
mov
in
and
push
repz
add
mov
and
xchg
dec
jo
and
dec
in
fprem1
dec
outsl
enter
shll
aaa
xchg
aad
adc
push
punpcklwd
loopne
mov
jb
pop
repz
adc
nop
movsl
mov
scas
add
jae
cwtl
mov
jl
push
cmp
add
scas
adc
add
mov
pop
addb
test
test
pusha
sub
loopne
mov
pop
mov
sbb
xchg
out
add
jno
cmpsb
mov
jne
pop
add
shlb
loop
pop
es
xor
insb
cmpsl
pop
add
push
adc
int
ffreep
nop
ror
hlt
add
add
sti
in
mov
sahf
dec
add
cli
mov
mov
add
pop
leave
rcl
xlat
nop
jnp
enter
fisttpl
addl
add
push
fs
pop
sub
lahf
test
add
aam
shll
cmc
pop
subl
mull
test
mov
shrb
push
adc
mov
push
aad
or
add
loop
les
sti
pop
andb
sbb
out
cmp
int3
or
iret
dec
add
xor
rolb
mov
and
add
andb
sub
xor
pusha
xlat
add
sahf
rcrl
xchg
inc
sbb
sub
sub
or
push
xchg
lds
imul
add
jg
mov
testl
sub
mov
cwtl
adc
jns
repz
ss
cmpb
inc
add
push
test
das
pop
repz
xchg
dec
pusha
pusha
sti
mov
popf
pusha
insl
adc
movsb
ret
fs
movsb
add
sbb
mov
adc
jnp
add
push
addl
sbb
sub
adc
lods
push
add
dec
mov
cli
movsb
loop
jne
push
add
into
loope
pop
je
out
arpl
add
or
sti
and
jno
xchg
mov
cmp
add
jae
push
mov
add
push
add
and
out
loope
jno
sub
enter
sbb
push
inc
sbb
enter
lret
push
loopne
cld
movsb
test
aas
mov
jmp
xchg
pusha
sarb
fidivl
push
repz
loopne
divl
dec
andb
cmp
aaa
fsubs
mov
pop
pop
cld
adc
adcb
sahf
js
sub
jne
decl
push
es
inc
pop
pusha
add
out
mov
jp
mov
sbb
xchg
cmp
mov
inc
add
dec
cld
inc
jns
sub
outsb
mov
loope
shl
mov
or
sbb
sub
xchg
jns
stos
test
cmpsb
pop
in
mov
sub
cwtl
and
add
leave
mov
pop
xchg
cmc
xor
pop
push
rorl
push
xchg
jge
jo
or
jle
push
cmp
out
enter
leave
pop
mov
ja
aad
loop
xor
das
or
adcb
add
mov
pop
inc
cmp
subb
ss
ret
and
cmp
jo
test
cmp
cmp
daa
and
pop
clc
push
jle
pop
mov
cmpps
inc
push
lret
add
in
daa
or
fisttpll
lods
pop
jno
pop
pusha
pop
aam
and
jg
ja
sbbl
add
out
push
shll
push
and
mov
daa
cmp
add
testb
mov
adc
jle
add
nop
lds
pop
mov
jb
outsb
mov
or
icebp
dec
pop
and
nop
rcll
fidivrl
inc
cmpb
jg
lret
pop
test
mov
inc
sbb
adc
ds
push
inc
inc
repnz
add
add
sbb
add
sbb
inc
jecxz
adc
add
push
rcr
stos
and
add
xor
mov
jae
add
jp
pop
shll
sub
dec
mov
and
in
out
cmp
sub
mov
push
inc
push
ret
test
fstl
sbb
aam
mov
xlat
stos
push
inc
insb
out
in
push
leave
or
and
xor
aam
mov
push
dec
cwtl
inc
add
inc
xor
dec
mov
jmp
xor
ja
pushf
insl
cmp
lcall
mov
dec
pop
sbb
mov
lret
pop
dec
mov
dec
inc
and
mov
add
xor
jnp
ret
in
jbe
pop
addr16
inc
sub
mov
jno
aam
sub
jmp
hlt
adc
clc
sub
mov
rol
xor
es
push
or
lods
cli
dec
add
or
add
ja
pop
adc
inc
push
xchg
addb
lret
clc
cmp
add
dec
lods
test
or
loop
mov
inc
lods
dec
inc
push
and
cmp
rcrl
add
pop
or
pushf
jl
pop
mov
sbb
add
rclb
xchg
sbb
push
lahf
and
jmp
lea
das
or
pop
dec
add
add
movsb
dec
jg
movsl
xchg
push
mov
jecxz
out
inc
lock
mov
sub
in
push
js
insb
test
sbb
sub
or
movl
loopne
imulb
dec
out
shlb
xchg
shlb
lret
adc
sub
fs
xchg
dec
adc
lods
loopne
stc
add
and
out
pop
jmp
or
shl
inc
pop
sahf
clc
cmp
xchg
js
fistl
sti
xor
aam
aas
pop
mov
test
in
loopne
clc
jbe
add
mov
data16
and
add
out
out
inc
xor
hlt
cli
int
mov
mov
add
xlat
jae
movsl
clc
add
or
adc
fadds
pop
ss
test
lods
pop
cmp
sub
mov
push
jno
dec
or
jmp
jl
add
ret
xchg
add
bnd
pop
lret
xor
pop
idivl
std
aam
add
pusha
fistpl
xor
lods
sub
adc
add
jnp
xchg
dec
push
js
cli
add
push
push
add
pop
and
flds
cmc
add
mov
pushw
sub
shlb
mov
lock
jg
xchg
sbb
cmp
inc
push
push
call
adc
push
dec
fdivs
js
mov
sbb
xchg
jg
dec
lods
cmp
pop
mov
unpcklps
sub
sub
mov
sbb
or
and
or
and
jbe
dec
add
mov
mov
push
movhps
mov
rorb
xor
pusha
add
hlt
sbb
icebp
pop
sub
inc
test
inc
flds
sahf
and
sbb
mov
adc
enter
int
push
cmp
ret
and
add
cltd
adc
add
add
mov
xor
cmp
in
push
inc
loopne
push
add
jg
bound
ljmp
cmp
sub
test
ss
mov
add
fwait
add
fdivr
das
into
lds
jne
push
pop
pxor
xor
pop
fisubrs
pusha
outsb
sub
cmp
dec
sbb
enter
sub
inc
lock
sbb
fisubs
pop
push
andb
and
mov
insl
icebp
loope
das
pop
cmpl
inc
push
call
cmp
and
imul
mov
cs
hlt
roll
adc
rcrl
pop
adc
push
fcoml
fadds
or
jg
adc
push
sbb
add
add
add
adc
push
and
aas
and
jae
dec
adc
and
or
fmuls
inc
clc
andb
popf
xlat
adc
adc
and
js
sahf
rcll
dec
pop
inc
mov
adcb
push
nop
sub
iret
testl
rcrb
rolb
inc
imul
in
mov
cmp
cmp
jecxz
rolb
fildll
mov
shl
mov
jge
adc
jns
imul
and
add
sub
add
push
lahf
inc
sub
hlt
xor
rorl
dec
pop
rclb
add
mov
or
fs
push
test
fimuls
adc
add
mov
xor
or
pusha
in
pop
push
add
pop
xchg
add
or
in
pop
sbb
sub
sar
fistps
cmpsl
add
shr
sbb
adc
add
mov
cs
lock
adcl
movsl
and
add
outsb
leave
mov
xchg
add
insl
ljmp
add
into
and
lock
popf
mov
movsl
gs
test
push
imul
imul
in
cmp
add
stos
out
aam
add
mov
or
lcall
xorb
andl
cmp
jg
xchg
repnz
jns
movups
insl
test
into
push
cmpsl
rorb
dec
repnz
clc
add
adc
hlt
push
jmp
push
movsl
test
aad
scas
arpl
cmp
mov
sbb
xchg
xchg
pop
addb
dec
add
iret
mov
dec
add
aas
insl
inc
out
fcoml
add
scas
push
pop
sub
mov
dec
in
cmpsb
fcmovnb
push
cmpb
scas
dec
mov
add
add
int
add
lret
mov
mov
xchg
add
movsb
push
jnp
add
add
fdivrl
jbe
sbb
aad
inc
and
orl
mov
dec
ficoms
sbb
out
add
leave
mov
cld
lea
xchg
loope
pop
rorb
divb
add
add
cmpsl
js
adc
sub
aad
add
xchg
add
cmp
shrb
push
andb
mov
pop
mov
pop
cmp
add
inc
add
call
mov
lret
mov
push
mov
cmp
xor
mov
jno
aas
pop
ret
test
push
jne
add
pop
in
dec
inc
in
jle
add
jno
sub
jmp
jae
cltd
add
int3
xchg
xlat
loop
fdivrs
pop
xchg
pop
pop
les
xchg
test
push
das
enter
pop
out
lock
fistl
push
xchg
nopl
add
sti
push
sbb
insb
pop
or
mov
jno
cltd
add
sbb
rol
es
jge
dec
add
cwtl
stos
pop
cmpsl
flds
inc
pop
outsl
mov
add
stos
xchg
lds
movsb
into
int3
roll
xor
jl
mov
je
ficoml
push
adc
cmp
adc
cli
cmpsl
add
adc
aas
cmp
lcall
add
lods
in
pop
scas
jo
jbe
fsubl
dec
sbb
add
adc
aam
xor
xchg
sub
ja
add
jmp
xchg
or
add
xchg
rorb
xor
in
pop
sbb
or
mov
insl
add
ret
xchg
add
adc
stos
and
xlat
pusha
mov
xor
movsl
subb
cld
dec
or
adc
lret
es
roll
push
sub
in
nop
xchg
repnz
add
push
mov
stc
jb
cli
cwtl
jo
pop
add
nop
fwait
add
cmpsb
loopne
push
and
jb
pop
popl
ss
adc
mov
bnd
add
dec
cli
or
sub
jne
int3
into
adc
out
jecxz
ret
andb
mov
push
or
pop
cmp
adc
cld
pop
add
xorb
xchg
sar
orb
push
ret
test
mov
loop
icebp
xadd
js
aas
jp
add
xor
call
jle
inc
add
fnstcw
and
pop
lods
adc
stc
push
loope
inc
jno
inc
push
mov
les
pop
test
add
lds
iret
int3
cmp
cli
or
popf
mov
orb
mov
pop
jecxz
icebp
das
jnp
xor
pop
push
dec
add
adc
mov
sbb
cmp
shl
jl
test
add
push
inc
icebp
pop
fidivl
inc
cltd
mov
lods
es
jg
sub
aaa
pushf
xorb
mov
jnp
add
dec
pop
lcall
cmpsl
enter
lcall
rcrl
jae
xor
fisttpl
dec
xchg
clc
aas
add
add
inc
nop
loopne
insb
out
imull
iret
and
sub
add
aaa
mov
add
jno
out
ds
xchg
and
or
mov
rcrb
pop
add
jg
lahf
pop
mov
ror
dec
pop
sbb
mull
push
rolb
ret
and
adc
mov
mov
fstpl
push
incb
jbe
mov
cmp
popf
notb
pop
add
dec
or
and
dec
cmp
jb
pusha
mov
popa
repnz
push
add
daa
int
shrb
jns
push
mov
adc
test
lds
jecxz
add
out
push
xor
push
sbb
sbb
or
xchg
pop
aam
xor
addr16
lret
sbbb
or
ja
add
push
sbb
xor
int3
in
leave
pushw
xor
pusha
dec
test
loope
adcb
xchg
xchg
cmp
in
sub
push
add
push
imul
data16
shll
jo
push
inc
dec
inc
loopne
daa
and
sub
out
jp
iret
push
inc
lret
icebp
les
sbb
lods
shlb
sbb
repnz
push
mov
sbb
and
add
sub
rol
hlt
mov
inc
shr
mov
stos
daa
pop
test
sub
add
cmp
mov
add
mov
sub
add
add
pop
notb
in
pop
nop
pushf
dec
ret
inc
mov
js
cmp
mov
in
mov
fwait
mov
push
mov
std
xorl
jecxz
add
pushf
xor
icebp
push
je
xchg
movaps
mov
popf
les
or
sbb
int3
ficoms
and
dec
add
fdivl
mov
ret
pusha
push
add
testl
mov
stc
xchg
sub
mov
lahf
aad
push
lods
add
std
mov
mov
mov
mov
adc
push
push
popf
or
dec
lahf
xorb
jge
mov
or
hlt
fisubl
or
xor
pop
pusha
mov
sub
shlb
in
mov
xor
ficoms
dec
push
stc
mov
sub
mov
pusha
or
push
pop
cltd
ffreep
xlat
sub
adc
and
sbb
or
lock
fwait
test
cmpsl
sbb
iret
movsl
inc
jb
outsb
sub
mov
pop
xchg
out
mull
cmp
pop
das
xor
out
or
cmpsb
movsl
out
in
add
mov
scas
push
jl,pn
cli
xchg
lods
add
out
orb
push
cmp
leave
shl
pop
add
inc
xchg
std
in
mov
mov
inc
xor
vcvttsd2si
int3
add
icebp
repz
les
jns
jnp
dec
mov
dec
loopne
push
test
mov
out
ret
loopne
pop
das
add
fadds
hlt
push
sub
cmp
xor
cmp
enter
cmp
sub
jo
cmp
add
push
xchg
cmpsb
or
in
jb
adc
pop
ljmp
add
push
and
mov
sub
cltd
push
sub
fwait
mov
add
push
int3
mov
jno
jo
inc
lods
movb
cmp
add
jl
cld
xor
sahf
icebp
int3
lcall
pop
mov
orl
dec
xchg
pop
xchg
adc
addb
inc
sbb
cmp
or
sub
cltd
adc
in
push
jge
mul
mov
adc
insl
rolb
in
adc
ret
cmpsb
lock
sub
enter
inc
xor
mov
push
scas
mov
push
enter
or
es
mov
cwtl
mov
cmc
ret
xor
push
call
cmp
ss
pusha
adc
jecxz
jne
jo
push
pop
add
ret
rolb
add
aaa
test
adc
aas
or
fwait
sbb
pop
cmp
sub
es
push
push
add
fwait
scas
scas
cmc
pop
nop
xor
mov
lahf
jmp
mov
sub
addl
sub
cs
cmp
icebp
cmpb
cli
int3
pop
mov
dec
or
jbe
sahf
ror
out
sub
push
ds
mov
add
and
xchg
add
out
pop
je
add
sarb
incb
into
xchg
mov
push
sbb
iret
pop
adc
int3
cltd
mov
sub
dec
data16
movsb
sahf
int
add
dec
cmp
orl
xchg
xor
xor
stos
xchg
ja
pop
mov
mov
sbb
xchg
repnz
fimuls
adc
lahf
xchg
add
stc
scas
lods
xchg
cmpb
or
imul
adc
push
xchg
push
call
mov
mov
add
mov
cwtl
push
sub
pop
cli
adc
insb
lock
push
call
cmp
push
xchg
les
add
xor
push
xchg
cs
clc
addr16
jo
jbe
inc
lock
add
xor
xor
mov
jl
push
mov
sbb
leave
add
fwait
ljmp
dec
lcall
jb
add
imul
add
add
pop
inc
bound
add
lods
sarl
mov
inc
mov
call
jae
inc
adc
xchg
cs
sub
scas
xor
in
cs
insb
sbbb
xchg
in
xchg
jne
add
xor
add
out
icebp
shlb
xor
sti
mov
add
xor
pop
int3
add
inc
and
dec
push
dec
push
mov
add
pop
in
divl
add
fdivrs
hlt
push
jnp
pop
cwtl
testb
or
daa
shrb
and
aad
add
ljmp
scas
cmpl
xchg
shlb
inc
mov
jb
orb
pop
in
sub
or
and
fcomp
add
mov
mov
aaa
xchg
adc
inc
les
sti
add
xor
adc
inc
add
int
pop
cltd
neg
rcr
add
cmpsb
mov
pushf
mov
in
clc
pop
enter
xlat
or
hlt
arpl
lods
mov
iret
movsb
repnz
add
and
jnp
or
add
stos
cwtl
in
xor
add
fadds
add
insl
out
test
bnd
seto
mov
adcb
arpl
or
pop
or
jp
divb
lret
mov
addb
pop
stc
shll
add
sub
cwtl
push
fmuls
xchg
add
sub
repnz
cmpsl
test
adc
mov
jbe
andl
call
jge
repnz
mov
adc
int3
nop
inc
ret
dec
sub
add
fwait
rcl
cmp
mov
sarb
adc
push
dec
aas
roll
scas
inc
cmpsb
xchg
aam
dec
mov
xor
jbe
and
jle
and
stos
adc
in
cmp
gs
mov
ss
adc
ffree
add
xchg
jmp
xor
push
lret
push
cmp
lret
fs
sbb
add
push
bound
mov
aam
test
ss
or
dec
mov
add
mov
add
fs
push
cmp
orb
mov
cmpl
int3
mov
pop
adc
lock
cltd
clc
movsb
outsb
and
sub
imul
dec
faddl
jo
dec
adc
dec
addb
cwtl
fs
outsb
jmp
js
mov
je
loopne
add
adc
out
jne
popa
cmpps
push
jecxz
loop
mov
ja
xlat
add
cs
cmovl
jle
movsb
add
mov
and
mov
aaa
cmp
sub
dec
pushf
imul
push
iret
and
mov
add
scas
jle
sub
cmp
mov
in
push
in
adc
cli
popf
test
add
push
out
shl
dec
add
dec
in
add
iret
fisubl
dec
loope
sbb
nopl
xor
sub
mov
mov
add
xchg
dec
stos
cmp
pop
add
mulb
xchg
rolb
sub
out
cmp
add
lret
test
fdivrp
js
shlb
fnsave
out
stc
jp
das
push
add
fmuls
dec
mov
jne
hlt
pop
pop
jns
add
sti
dec
mov
add
jp
out
or
mov
sub
push
add
ja
pushf
movsb
dec
inc
mov
and
in
push
mov
adc
cmpsb
cmp
adc
shll
xchg
push
sete
adc
fs
pop
add
push
add
cld
lcall
inc
in
pop
mov
add
adc
fidivrs
pop
xchg
add
or
add
add
sahf
mov
clc
xchg
xorl
out
cld
pop
adc
push
pusha
mov
mov
rcrb
sbb
jo
shlb
fdivr
test
xchg
sbb
ss
mov
push
mov
dec
daa
adc
inc
lea
imul
bound
popa
push
fisubrs
jb
int3
or
pushf
mov
cmc
jp
popa
aam
mov
cmp
add
mov
mov
shl
mov
dec
inc
add
cwtl
fimuls
mov
mov
add
xchg
add
cmp
and
mov
add
popl
inc
ficoml
xor
out
add
mov
inc
push
dec
rcll
setnp
mov
pop
adc
xor
js
sbb
arpl
add
mov
fbstp
add
addl
jge
push
pusha
mov
clc
mov
lods
mull
aad
incb
rol
pushf
outsl
inc
jo
mov
jnp
es
in
aam
add
xchg
inc
mov
push
pop
push
add
push
fistps
loopne
outsb
cmp
and
inc
and
mov
sub
jmp
lods
push
sbb
or
sub
sbb
adc
in
adc
and
xor
lock
add
std
mov
iret
add
call
adc
xor
push
xchg
cmp
orl
jmp
sbb
add
fs
mov
and
add
loopne
sahf
out
lret
push
pop
faddl
xchg
add
xchg
icebp
cs
xor
inc
fnstcw
popa
jmp
loopne
push
mov
adc
add
outsb
inc
xor
xchg
sbb
dec
adc
or
hlt
pop
xchg
xchg
dec
add
xchg
adc
dec
and
je
pop
popa
imul
mov
dec
add
mov
sub
sbb
push
repnz
add
call
mov
adc
ror
push
add
xchg
add
mov
and
mov
pushf
daa
xor
dec
push
test
sbb
repnz
sub
adc
or
out
xchg
pop
mov
ret
pop
dec
es
inc
shr
enter
cmp
inc
loop
shl
aad
jne
mov
add
xchg
pop
shl
adc
bound
add
adc
adc
out
add
jmp
dec
add
or
ds
fcmovb
pusha
loopne
add
rcrl
fidivrs
dec
add
mov
jno
jae
add
sti
push
divb
adc
leave
mov
add
and
sub
out
adc
mov
add
mov
xchg
fnstenv
cmc
inc
les
jecxz
pop
push
and
add
xchg
mov
mov
pop
xor
sub
jle
hlt
ret
mov
cld
aaa
cmp
mov
loope
clc
push
add
popf
mov
add
or
fcomps
lss
and
aam
or
adc
addr16
lret
adc
cmp
test
psraw
out
movb
jl
and
dec
or
mov
sub
jb
push
pop
add
test
addb
rolb
in
lods
jl
addr16
xchg
ja
aam
cltd
jmp
cld
mov
cmp
movb
bound
add
out
lea
loop
pop
adc
scas
dec
pusha
mov
mov
roll
and
add
pop
push
xchg
sar
sub
and
rcll
mov
lcall
jge
push
call
mov
jae
fiaddl
cld
xchg
mov
rcrb
jnp
iret
fsubrl
sbb
sbb
and
cmpsb
in
push
push
add
jo
repz
xchg
loopne
test
dec
stos
arpl
jmp
mov
movsl
mov
mov
lods
addb
sahf
adc
jp
and
or
add
sub
sar
mov
popf
outsb
inc
stos
adc
push
adc
in
mov
sub
mov
or
lds
add
adc
sbb
push
int
cwtl
call
xor
add
and
xchg
rclb
shrb
cmp
scas
cmp
adcl
or
loopne
jmp
add
mov
and
paddq
dec
pop
cld
add
cwtl
inc
insb
dec
aas
das
add
push
into
ret
bound
andb
add
ret
lods
jecxz
xor
sub
popa
jbe
outsl
xor
jne
pop
xchg
add
push
mov
stos
rorb
add
inc
stc
add
push
sub
fsubr
add
add
imul
xchg
mov
and
pusha
fiadds
mov
ret
add
iret
daa
adcl
mov
pop
add
popf
inc
sub
or
jge
pop
subb
jns
jg
add
lods
jmp
or
add
test
add
ret
sbb
in
call
in
mov
add
add
incl
inc
xorb
nop
jle
adc
lea
dec
dec
or
test
pop
movsb
or
push
dec
inc
movsl
incb
repnz
adc
dec
daa
ja
pop
loope
clc
sbbb
insb
xchg
mov
add
into
int3
sbb
fidivl
adc
stos
push
lods
or
mov
add
repnz
in
mov
in
inc
sbbb
lock
es
mov
pushf
cwtl
notb
push
rol
mov
add
leave
lcall
iret
sub
aam
scas
lds
and
mov
jo
popa
hlt
loopne
sarb
dec
cli
add
push
mov
add
mov
xor
rol
test
pop
xor
out
jb
imul
lfs
dec
stc
add
xchg
inc
mov
xor
and
pop
cmp
adc
ret
lea
ja
ret
cld
add
xlat
ljmp
clc
mov
add
pushf
fbstp
cmp
cwtl
das
adc
add
inc
mov
mov
aam
jbe
add
cmc
cs
sub
pop
js
lock
inc
wbinvd
mov
aaa
loope
fadd
push
cmp
jl
das
xchg
mov
gs
pop
shlb
add
into
sahf
hlt
add
xor
or
add
mov
lahf
pop
mov
jmp
xor
adc
sub
jns
hlt
push
add
ret
lret
stos
fdivp
add
daa
pop
in
call
loopne
or
or
dec
push
or
int3
ret
adc
cmp
les
sar
inc
add
push
jbe
dec
push
in
cltd
inc
out
xchg
sbb
sub
lods
jl
jmp
pop
push
outsl
in
rclb
loopne
repz
jge
out
jbe
add
fstpt
sar
push
push
dec
dec
xor
mov
je
pop
inc
cmp
nop
ljmp
fnstsw
jp
inc
xchg
stc
dec
pop
or
or
add
mov
movsl
insl
mov
add
popa
repnz
jae
cmpsb
fstl
jo
add
das
in
cmp
mov
add
mov
add
adc
mov
negl
or
test
mov
cmp
pop
xchg
lret
test
les
sbb
sub
sub
es
sbb
or
je
jo
jle
adc
cmp
add
mov
add
mov
mov
les
hlt
pop
or
test
js
lret
call
mov
out
add
sar
dec
pop
aam
inc
out
pop
or
shr
sub
mov
rcrb
mov
out
xchg
pop
sbb
les
and
imul
faddp
and
inc
add
or
shrb
pop
mov
push
xchg
add
testb
add
lods
xchg
popf
aad
inc
mov
push
pop
mov
sbb
xor
andb
push
lock
sbb
jns
mov
mov
jne
call
push
pusha
or
add
decb
clc
mov
add
xor
es
jge
nop
lods
or
cmpsl
mov
add
mov
scas
jne
xor
shlb
pop
add
add
cwtl
sbb
mov
sub
xor
and
pop
cmovs
or
xor
push
add
nop
jge
cwtl
add
mov
mov
and
adc
push
roll
mov
fcmovu
inc
adc
add
clc
push
or
sarl
push
out
cmp
cmp
mov
xchg
psubusw
sbb
inc
dec
cmp
push
push
inc
xchg
mov
jo
test
xor
scas
fwait
dec
xchg
add
sbb
inc
jg
or
call
add
in
add
sub
or
fucom
cs
cltd
mov
adc
xor
lock
add
inc
jge
divb
loopne
xor
shr
and
xchg
outsl
or
and
cld
je
add
loop
fsubs
mov
js
popf
mov
add
fidivrl
testb
arpl
pop
xor
sbb
sbb
add
cmp
call
sbb
imul
add
push
jg
push
sub
add
cwtl
pop
add
fdivs
xchg
xchg
jg
cmp
out
loop
cmp
push
fwait
subb
filds
cltd
mov
dec
and
ret
shrb
add
adc
dec
add
cmp
es
add
addr16
and
es
lea
fdivr
mov
mov
sahf
sbbb
mov
inc
jbe
add
gs
jb
sbb
mov
lahf
das
fsubl
xchg
daa
loopne
xorb
pop
pop
testl
test
push
stos
mov
aad
ss
fsubrs
daa
lods
push
mov
fidivrl
xchg
mov
lahf
pop
add
xor
pop
idiv
pop
sbb
rclb
jns
in
cmp
xor
test
in
mov
adc
test
fdivr
and
add
pop
xchg
cmp
clc
insl
add
aas
or
add
pop
xor
and
push
pop
xchg
loop
inc
mov
movsb
push
popa
loope
ret
or
adc
imul
gs
sbb
mov
sti
push
and
fsubs
in
jae
add
or
sti
inc
mov
xchg
lock
xor
jecxz
test
fstl
aas
inc
outsb
or
dec
pushf
js
xchg
sub
pop
add
fptan
xchg
cmp
loop
jns
or
imul
cmp
mov
dec
and
in
jmp
push
push
mov
xchg
flds
adc
orb
cmpsb
jg
add
and
loopne
in
out
in
pushf
sbb
mov
sahf
sub
sbb
jne
push
and
mov
fmul
call
jo
jns
add
mov
imul
shlb
xor
fwait
add
mov
das
sub
enter
pop
mov
sbb
pop
and
add
lahf
test
sbb
pop
js
xor
mov
push
loopne
mov
mov
test
loop
fmull
enter
in
dec
fimuls
into
out
dec
mov
aas
dec
mov
xchg
xchg
xor
inc
shlb
jl
add
test
add
adc
or
inc
lahf
ljmp
sbb
test
add
push
push
les
loopne
sbb
out
pushf
add
jmp
or
push
addr16
enter
or
cwtl
jmp
push
pop
push
add
dec
xor
cmc
mov
hlt
sbb
push
inc
jle
mov
sub
loope
adc
push
mov
cmp
dec
dec
mov
xchg
jo
pusha
push
sbb
xlat
sbb
addb
ret
je
jbe
jmp
jne
add
xor
jno
pop
inc
je
add
pop
push
imul
adc
inc
fdivrl
jle
lret
pusha
in
movsl
jl
add
jge
shlb
fwait
lods
scas
ret
pop
xchg
pusha
test
and
in
sub
mov
das
sbb
pop
dec
push
add
push
and
push
mov
and
ds
cmp
pop
loopne
dec
add
clc
repnz
enter
or
insb
loop
xor
mov
outsl
or
dec
cwtl
clc
adc
mov
or
aad
cmp
dec
mov
icebp
dec
jecxz
mov
mov
xor
sti
in
ja
sbb
cmc
nop
incl
add
pop
in
xor
cmp
or
movsl
and
ss
xlat
add
stc
and
mov
pusha
mov
sbb
xor
jo
jo
push
add
lock
daa
add
lea
inc
push
lcall
jl
add
sbb
sub
xor
jge
pop
shll
shrb
push
jg
dec
add
movsb
adc
or
jge
cmpb
sarl
adc
xchg
rcrb
pop
imul
popf
scas
jge
push
mov
ret
jne
push
and
xor
push
fsts
pop
add
cli
outsl
push
jbe
add
xor
rcrb
shlb
setbe
mov
cmp
cmp
xchg
test
sub
stc
cwtl
inc
mov
aam
les
sbb
mov
ljmp
and
adcb
cmp
inc
mov
push
xor
mov
cmc
push
imul
xor
pusha
cmp
mov
mov
sub
lret
pop
and
add
rcrl
add
mov
js
xor
push
xchg
int3
mov
sbb
mov
repz
adc
nop
fiadds
je
inc
xor
or
dec
add
out
scas
and
ja
repz
xor
mov
pop
inc
inc
push
or
jle
mov
movsb
leave
mov
jmp
mov
call
jb
shr
test
mov
mov
loopne
icebp
push
adc
rcrb
out
fmuls
test
dec
or
inc
adcb
jg
xor
dec
loope
cmp
int3
mov
mov
adc
sub
aam
call
les
or
rolb
jmp
mov
push
dec
sub
fidivrl
call
fldcw
lods
sub
mov
cmp
pop
mov
and
inc
fs
mov
adc
nop
add
js
push
push
xchg
dec
inc
neg
mov
mov
orb
sbb
cmp
movsl
in
rolb
xchg
or
pusha
mov
int
cmpsb
mov
cmp
je
shrb
add
cmc
ret
jns
insb
add
fistpl
outsb
inc
dec
in
cmpsb
movsb
lret
mov
repnz
sub
test
push
inc
imul
outsb
test
rol
lret
in
lds
popf
push
scas
shlb
jmp
add
xor
mov
cmpsb
in
mov
inc
add
lahf
jnp
pushl
push
push
ret
xor
push
xor
mov
jo
or
mov
xchg
push
out
sbb
add
les
xchg
add
xchg
sub
cmp
sbb
sub
test
or
lea
loop
add
or
aad
jg
add
jle
or
lds
inc
dec
inc
repnz
icebp
adc
or
into
xor
cltd
test
dec
dec
sub
mov
and
ljmp
into
popa
outsl
in
lcall
cmpb
shrl
push
fisubrl
inc
dec
xor
jo
pop
ret
lcall
inc
and
stc
test
adc
mov
into
mov
mov
adc
xchg
add
fucomi
ret
pop
in
inc
mov
mov
loope
mov
inc
cmp
lret
fcompl
aaa
sbb
push
adc
cmpsl
ret
add
push
andb
lock
bound
shrl
fnstcw
movl
out
sti
xor
pop
add
xchg
nop
outsb
and
mov
inc
imul
insl
push
mov
clc
pop
ljmp
loopne
jno
mov
in
lock
xor
lret
mov
repnz
mov
and
aam
add
mov
pop
add
aas
xchg
adc
add
pop
pop
movb
cmp
js
movsl
cmp
mov
ret
push
add
inc
jge
loope
xor
repnz
shl
cli
outsl
and
ss
xchg
fsubrp
fwait
stos
add
cltd
scas
fcomi
movsl
xlat
mov
cmc
jl
xorb
add
out
es
inc
sub
add
cmp
je
nop
pop
mov
push
aam
mov
push
int
stos
fldt
push
add
dec
push
cld
rolb
aad
out
pop
xor
rolb
push
inc
push
inc
stos
mov
rcrl
lea
push
and
popa
fisttpl
adc
mov
xor
dec
inc
push
imul
add
into
clc
or
jns
cltd
pop
lret
xor
popf
xor
push
lock
lds
ljmp
xlat
adc
loop
loope
push
pop
add
xchg
ljmp
sbb
and
subb
lods
rcl
push
xchg
notl
ljmp
add
out
fs
mov
aas
xor
add
jb
sbb
add
je
add
xchg
jge
add
addr16
lret
add
add
addb
fisubl
push
sbb
jbe
cli
out
add
cmpsb
jecxz
addr16
mov
andl
add
imul
lcall
clc
add
jb
rolb
or
ficoml
addb
mov
loopne
or
dec
or
cs
js
inc
add
loop
xlat
add
mov
out
cmp
test
out
dec
mov
jne
fs
push
in
out
xor
mov
in
sbb
mov
ss
adc
jnp
add
test
pop
inc
data16
sbb
fstps
inc
xorl
test
in
inc
leave
testb
inc
add
add
jmp
and
add
push
cmp
aam
or
cmp
shl
jb
jo
out
add
lds
push
ret
push
push
mov
sub
mov
dec
cmp
pusha
rclb
adc
into
add
std
mov
pushf
adc
lea
add
sbb
mulb
mov
lret
aam
inc
lahf
addr16
je
lock
std
xchg
mov
cs
add
mov
ljmp
mov
jae
loopne
fwait
loope
inc
lret
mov
test
clc
stos
xor
sub
jae
jmp
sub
vpunpcklbw
pusha
and
into
pop
lock
xchg
test
movsl
add
and
or
inc
xchg
add
dec
sub
rcll
mov
or
mov
sbb
setbe
mov
xorb
push
cltd
cld
lret
cmpsb
add
and
mov
add
cmp
and
rcr
mov
retw
dec
test
pop
sbb
fs
add
pop
stos
add
push
xor
fstpt
cld
rcl
sbb
lret
scas
rclb
add
std
inc
das
fs
push
sbb
jecxz
addb
xor
sub
mov
mov
in
lods
jp
pop
add
loope
mov
add
pop
ljmp
and
test
scas
test
push
add
outsb
loopne
test
xchg
pop
dec
mov
jnp
push
je,pn
test
pop
stc
push
inc
outsl
xor
xsave
rolb
xor
mov
dec
les
inc
lret
xor
jb
int3
mov
xor
pop
out
push
mov
fwait
cmp
movsl
movsb
nop
pushf
andb
cmp
sbb
fbld
lret
or
stos
dec
fimull
outsb
pusha
sti
ds
ret
iret
lahf
lea
inc
jo
add
arpl
es
jge
add
cmp
push
pop
rorb
add
mov
push
stos
aad
and
or
sub
sub
test
add
roll
jnp
mov
fcomps
in
sub
clc
stos
jnp
ja
push
loopne
add
hlt
and
pop
dec
cmp
mov
stc
in
jle
cwtl
pop
push
cmpsl
dec
lods
add
adc
xchg
notb
sub
jge
sbb
inc
push
add
int3
outsl
insl
adc
push
jo
mov
ja
loop
and
xor
xorl
inc
adc
mov
insl
adc
movsb
jno
testl
out
scas
jae
js
fs
adc
push
pop
push
cs
sbb
sbb
add
rcr
pop
jno
jbe
push
fildl
mov
in
sub
mov
pusha
repz
xchg
mov
xor
dec
int3
ljmp
popa
sbb
xor
sub
dec
inc
rol
leave
add
inc
cmpsl
mov
xor
lds
mov
mov
leave
dec
pop
lret
mov
jg
addr16
or
add
mov
cwtl
lret
mov
add
cmp
mov
shll
add
or
int3
cmp
mov
lods
add
out
sbb
cmc
add
jo
add
cmp
xor
out
ficoml
inc
lret
ljmp
pop
dec
xchg
add
dec
push
out
mov
call
add
lods
jl
in
mov
xchg
insl
aam
add
sub
pusha
shll
adc
paddusb
scas
mov
or
mov
test
aam
inc
adc
neg
pop
pop
jl
xlat
cmpsl
add
adc
jl
jmp
add
pop
hlt
mov
mov
fbstp
sub
out
test
cmp
rorb
and
cmpsl
sub
loop
add
cltd
mov
loopne
or
xchg
leave
mov
mov
jb
add
repnz
test
pusha
psubsw
xor
shrb
add
and
add
xchg
inc
cld
add
mov
loop
jns
lds
or
mov
push
pop
ficomps
mov
cmpb
dec
sbb
push
pop
insb
or
push
mov
cmp
xor
jno
sbb
mov
add
xchg
dec
pop
adc
call
add
and
insb
fistpll
and
fdiv
dec
adc
sbb
add
push
test
push
xchg
push
popa
int3
cmpb
aam
xor
jne
add
scas
and
clc
dec
flds
xlat
cltd
sbb
pop
mov
ja
jbe
add
dec
jmp
xor
les
or
test
or
jge
shll
xor
ss
lock
pop
sbb
repz
xchg
mov
sub
sbb
scas
movsb
ret
add
xor
inc
push
add
pushf
xchg
add
icebp
sarl
jbe
pop
notl
xchg
cmpsl
in
mov
inc
cld
mov
jb
inc
mov
xor
stos
xchg
cmp
orb
pop
jb
add
int
add
or
xor
pop
mov
xchg
push
loope
push
xlat
sub
das
outsl
pusha
movsb
call
test
add
xchg
aad
clc
mov
add
cmp
jno
add
dec
insl
mov
mov
cmpsl
mov
add
fidivs
inc
mov
ljmp
roll
sub
dec
mov
push
xor
inc
insl
fsubr
mov
push
add
cmp
jnp
mov
add
repnz
in
mov
int
lds
call
mov
push
pop
test
jno
push
jmp
jbe
testb
movsb
pop
mov
add
daa
loop
mov
pop
mov
and
pop
push
pusha
in
stos
les
and
test
mov
cli
nop
popa
sub
fadds
push
or
xchg
lret
xor
pop
add
ss
and
mov
sbb
mov
add
sti
push
sub
cmc
and
mov
xor
neg
lods
aas
mov
add
push
cld
movsb
xor
in
fwait
out
dec
or
hlt
sti
cmpsb
and
dec
adc
sbb
adc
cmc
dec
sub
push
sbbl
fistpl
xchg
add
sub
cmp
hlt
and
in
inc
add
clc
lods
ja
mov
into
push
mov
pop
inc
outsl
out
add
inc
push
add
ja
mov
xor
jecxz
loop
test
cmpsl
outsb
or
rolb
jl
add
jnp
ss
mov
add
test
push
loopne
pop
add
bound
mov
push
add
out
inc
sbb
out
push
pushf
lds
orb
jae
insl
sti
fisttpll
dec
add
mov
stos
iret
shrl
out
jl
xchg
push
dec
test
int3
fldenv
stc
dec
jge
mov
add
inc
and
cmc
jp
pop
nop
xor
sbb
insl
mov
jae
lods
je
add
dec
ds
jns
add
adc
lcall
mov
add
insl
cmp
lret
faddp
sub
jno
inc
mov
adc
pusha
and
pop
and
xchg
ja
les
ljmp
mov
adc
add
jg
insl
cmp
test
mov
push
mov
cmpsl
and
add
dec
mov
enter
stos
bound
je
add
les
mov
lds
mov
add
lock
cs
push
lcall
rcll
scas
movsl
fdivrp
xor
dec
mov
inc
mov
jp
sarb
imul
addb
push
add
xchg
xor
mov
mov
dec
mov
add
test
in
js
sahf
add
jo
shlb
idivb
loope
add
mov
dec
nop
lret
add
and
xchg
adcl
pop
out
jae
out
adc
ja
sbb
sbb
lahf
jbe
orb
mov
imul
and
add
xchg
stos
data16
shll
stc
in
nop
add
pop
stc
jnp
test
xchg
add
filds
add
mov
str
js
cmc
or
add
fwait
cmp
mov
iret
int
jae
pop
daa
xorb
sbb
cs
adc
xchg
je
outsl
movb
mov
lahf
es
xchg
add
mov
adc
js
jp
xchg
push
je
sbbb
mov
mov
inc
jo
pop
fucom
jae
fadd
mov
or
xchg
add
adc
mov
inc
and
cmp
ret
test
rol
sbb
jno
lea
and
lret
cmc
inc
jns
jbe
pop
sbb
add
or
jo
add
fs
popa
add
mov
lock
xor
jo
ret
add
adc
orl
mov
sbb
add
ficompl
adc
ficoms
outsl
pop
mov
test
push
mov
std
subb
enter
adc
push
push
inc
jb
inc
jne
mov
outsl
roll
lahf
mov
ret
int3
mov
popf
adc
test
add
and
mov
pop
or
mov
mov
sub
mov
idivb
xlat
sbb
mov
pop
add
cmp
push
add
adc
add
lret
xor
add
icebp
ds
xchg
inc
jg
stc
xchg
sarl
enter
jge
movsl
xchg
pusha
sbb
push
hlt
sub
dec
fwait
ret
inc
mov
jle
push
shll
fcoms
popf
or
add
mov
mov
mov
leave
movsl
and
mov
dec
mov
repnz
jge
fcoml
stos
inc
mov
push
jl
and
into
sub
popl
jns
jge
xchg
rol
jg
add
into
stc
jae
push
daa
lock
js
add
push
push
mov
add
cmc
das
pusha
xchg
mov
dec
add
outsl
sub
lcall
hlt
ljmp
loopne
nop
push
push
popf
add
insl
jl
dec
outsl
addl
fstps
push
pop
push
jbe
int3
add
mov
cmp
psllw
push
cmp
arpl
jb
mov
inc
sub
movnti
push
dec
xchg
loop
pop
add
ljmp
add
dec
sub
jne
pop
or
mov
sub
es
jbe
or
add
pop
dec
sub
adc
fcmove
push
loopne
jge
pop
add
lds
std
ss
add
iret
add
sbb
add
arpl
add
repnz
outsl
je
shrl
add
and
add
sub
repnz
mov
jb
lds
ja
add
xor
or
iret
fiadds
loopne
add
mov
ljmp
js
dec
sub
popa
movsl
push
loop
inc
lcall
mov
std
mov
scas
pop
xchg
ss
test
ljmp
pop
mov
add
inc
je
push
cmp
xlat
subl
mov
xor
mov
add
dec
push
ds
adc
xor
add
loope
push
add
aam
jae
sar
add
cli
mov
mov
std
ret
mov
incb
cmp
xor
jle
repz
inc
jae
add
jecxz
scas
mov
add
data16
aaa
cmp
lret
cwtl
push
outsl
fdivrl
mov
inc
sbb
or
nop
cmp
push
jle
shl
add
xor
dec
mov
or
in
jnp
mov
add
shll
je
inc
mov
scas
push
pop
out
movb
or
aas
lock
sbb
lods
jl
dec
fs
enter
mov
mov
jb
jg
xchg
xor
adc
pop
or
pop
adc
std
mov
popa
stos
mov
incl
rclb
xchg
inc
add
jbe
mov
xchg
aam
adc
icebp
xchg
out
insl
add
imul
shl
push
and
sbb
test
add
pop
rcrl
or
sub
mov
test
fistpl
sbb
xor
pushf
add
pop
sub
aam
faddl
lods
pop
clc
jbe
push
push
and
out
push
sub
inc
mov
inc
mov
push
push
imul
jg
and
fwait
mov
push
fisubs
shr
in
push
jle,pt
inc
pop
cltd
jecxz
loopne
jnp
lds
sub
push
sbbb
jg
jno
sbb
shlb
adcb
loope
pop
inc
les
pop
and
lds
pushf
or
scas
jmp
cmp
and
sahf
cmp
cmp
xor
fs
mov
add
jg
and
pop
add
dec
outsb
sarb
sub
enter
inc
cwtl
movsb
inc
pop
pusha
js
push
pop
or
xor
pop
inc
lret
xor
mov
mov
or
inc
fbstp
adc
cmp
cld
jl
add
pop
sub
mov
in
icebp
xor
mov
out
and
es
lret
adc
sbb
and
test
inc
sbb
adc
sbb
dec
xor
pop
incb
ja
lods
bound
negl
lds
fldcw
test
fisubs
out
mov
add
push
lcall
inc
sub
mov
and
pushf
rorl
popf
aad
jnp
std
enter
cmp
add
xor
pushf
pop
imul
movntq
inc
enter
clc
add
xor
adc
insl
stc
push
xlat
sub
cmp
inc
xor
sub
inc
sbb
imul
mov
inc
fs
loopne
xor
adc
repnz
add
ficoml
jl
pusha
or
sub
scas
add
lods
push
mov
nop
test
inc
movsb
and
add
mov
lods
pop
gs
test
jae
push
sub
ljmp
popa
add
pop
js
sub
or
mov
cmp
adc
adc
sbb
jno
pusha
mov
les
xchg
pop
cltd
and
jne
add
loope
call
mov
roll
push
lods
jge
or
mov
pusha
add
and
in
and
mov
shl
dec
mov
jbe
movsb
push
das
out
adc
sti
stos
xor
pop
pusha
add
mov
cs
sbb
and
test
push
mov
push
mov
sub
pop
xor
pop
add
cmp
pop
dec
outsw
add
mov
in
jl
add
mov
sub
push
inc
mov
sbb
out
lcall
jle
aad
out
adc
pop
daa
sahf
xchg
nop
inc
cli
add
cmp
dec
pop
out
ret
aad
scas
int
cmpsb
insb
add
adc
incl
pop
dec
xchg
sbb
enter
mov
jbe
xor
cmp
rcrl
cld
and
jg
jns
loopne
mov
sbb
add
xchg
push
push
mov
dec
popa
add
ja
xchg
sub
add
ljmp
rorb
add
sbb
movsb
xchg
add
cmp
mov
call
mov
xchg
mov
push
stos
add
xchg
add
cmp
and
es
loopne
out
or
cltd
dec
test
adc
push
outsb
notl
dec
mov
lret
mov
lahf
cmc
xchg
pusha
js
out
xchg
or
fidivrl
inc
ja
mov
dec
jno
push
repz
repnz
push
shll
mov
pop
mov
int3
jl
add
fdivrs
adc
fidivrl
add
cmp
or
int
add
imul
xchg
add
mov
bound
adc
sbb
pushl
sbb
xchg
ss
dec
jle
add
mov
push
jns
adc
cmpsb
mov
test
in
cmp
mov
call
addl
arpl
mov
xchg
add
fsubp
std
push
test
movsb
lret
push
popa
pop
in
add
aaa
dec
push
add
cmp
movsb
mov
jbe
lret
fcmovnbe
dec
dec
and
cwtl
pop
mov
jbe
add
sbb
dec
push
jb
les
adc
push
out
mov
or
adc
aad
into
in
fmull
jne
jle
add
lret
loop
sbb
lds
sbb
cmc
dec
inc
sub
aam
cmpsb
pop
outsl
stos
nop
lock
testb
mov
adc
mov
add
lahf
shl
add
mov
sarl
inc
and
xchg
or
fidivrl
push
out
rcr
imul
jmp
rorb
clc
dec
mov
mov
jp
sub
xchg
hlt
jl
aaa
daa
mov
pop
rorb
fimuls
xor
jge
insl
inc
xchg
ja
mov
shrb
insb
push
push
inc
sub
fistl
or
mov
repz
sbb
add
sbb
stc
or
andb
std
xor
scas
cmp
pop
add
mov
pop
jp
cmp
roll
stos
insb
jnp
mov
push
add
or
pop
xchg
add
subl
subb
jne
in
jg
and
test
add
scas
lods
pop
or
aaa
packuswb
shlb
add
mov
in
xchg
addl
inc
xor
mov
imul
push
mull
jbe
cli
les
mov
jbe
sbb
mov
jae
mov
dec
cmp
test
fistl
das
add
or
je
push
outsl
push
into
inc
xchg
jae
out
add
cmp
cmp
cli
loop
out
loopne
insl
push
jp
push
dec
lahf
cwtl
add
xor
aam
xchg
mov
ss
filds
pusha
cld
or
nop
loopne
fmul
push
je
mov
adcb
jmp
imul
add
sbb
add
fwait
mov
mov
or
push
add
mov
add
inc
cmp
push
pop
repnz
arpl
out
dec
std
cmp
or
mov
sahf
add
popf
mov
icebp
dec
add
mov
jo
test
nop
push
sbb
push
xor
cmovnp
cwtl
mov
mov
sbb
inc
jb
xchg
fisubrs
mov
outsb
jle
xor
mov
xchg
jnp
clc
mov
test
jae
aas
neg
fcmovnb
mov
enter
jo
loop
add
push
xor
add
sbb
mov
lock
push
insb
add
pushf
cmp
in
adc
push
shrb
jp
pop
popa
sbb
jmp
int
cmp
and
loopne
add
push
imul
add
fdivs
mov
lea
out
sahf
imulb
add
push
aaa
pushf
xor
add
lret
sarl
cs
sbb
inc
stc
add
mov
and
mov
aaa
leave
adcb
add
out
cmp
clc
fs
adc
shrb
inc
dec
mov
push
sbb
leave
fwait
loope
mov
adcl
aad
jle
xchg
mov
add
mov
fdivl
push
fwait
int3
push
int
pop
dec
loop
fcoms
sti
cltd
leave
pop
adc
mov
adc
jo
hlt
out
push
stos
das
xchg
shrb
test
or
add
in
lock
call
and
xchg
xlat
inc
cli
dec
cmp
or
mov
add
call
ja
jg
sahf
push
or
xchg
adc
mov
jmp
movsb
add
enter
or
add
push
stos
jb
pop
mov
push
addr16
lret
imul
stos
je
add
mov
add
sbb
sbb
or
mov
add
adc
add
ret
dec
add
xchg
sti
insl
out
mov
cmp
pop
add
jae
jp
mov
data16
dec
fs
xor
sub
fcomps
movsb
add
mov
lahf
fstpt
add
add
cmp
mov
mov
je
fs
xchg
outsl
or
inc
rclb
and
mov
push
xchg
add
xor
stos
ret
xor
xor
lret
adc
push
push
jecxz
xlat
add
lcall
dec
fbstp
add
outsb
dec
dec
and
jb
pop
adc
test
xchg
cmp
lret
rcl
xor
xchg
and
loop
dec
nop
xlat
sub
stos
push
inc
cli
add
mov
fmull
sub
imul
add
inc
mov
jmp
add
mov
loope
push
call
stos
dec
cmpsl
pop
insb
das
rol
outsb
lods
mov
fwait
int
js
adcb
outsl
inc
aaa
dec
push
cmc
mov
ror
nop
inc
shlb
dec
push
negb
add
loope
push
push
sahf
loop
add
sbb
jmp
add
dec
popf
xor
adc
add
cs
stos
testl
ss
idiv
mov
sub
push
pop
icebp
shll
mov
stos
jbe
cld
movb
lea
jns
aam
in
add
inc
pop
adc
add
sub
out
add
push
fldl
inc
inc
sti
addr16
out
int3
push
lods
sbb
sub
addb
cmc
add
ret
and
loop
pop
popa
mov
movl
mov
add
or
insl
out
scas
in
stos
cli
pop
add
sub
mov
pop
lds
dec
mov
sbb
add
leave
outsb
pop
jecxz
rclb
enter
ja
loop
push
mov
stc
incb
mov
push
out
sbb
cli
loopne
inc
outsb
jle
cli
fs
xchg
mov
out
rolb
mov
iret
sub
add
add
xor
insl
jp
dec
and
add
fistps
inc
imul
fs
pop
pop
shll
lods
shr
cwtl
add
sbb
dec
mov
adc
mov
div
in
call
or
clc
dec
add
adc
pop
insb
add
sarl
dec
add
adc
add
subl
nop
adc
or
in
into
xchg
add
sbb
adc
rclb
or
out
xor
mov
or
add
mov
mov
push
mov
xlat
shl
or
hlt
cmp
xor
test
dec
js
sbb
cmp
int
insb
cltd
out
ds
rorl
xchg
sub
jl
sbb
shl
push
out
aas
popa
pusha
sbb
mov
out
or
pop
xor
lret
xor
xchg
xor
lcall
sbb
mov
jmp
das
loopne
in
outsl
nop
lahf
ret
cli
nop
xor
jge
add
cmc
cli
fcompl
inc
and
es
jnp
jae
cmp
lret
adc
pop
sbb
jge
mov
scas
add
inc
mov
push
and
add
and
outsb
or
js
test
stc
sub
pusha
xchg
mov
sbb
jo
test
lret
icebp
cmp
sbb
xchg
inc
clc
pop
push
andb
xor
jmp
cmp
ret
jno
orb
cmc
pop
fsubr
in
sbb
mov
and
add
jp
shlb
mov
or
adc
dec
inc
mov
sub
mov
add
pushf
out
in
repz
fsubrl
xchg
mov
filds
movb
mov
hlt
outsl
sbb
lahf
fsts
movl
dec
cmp
or
and
insb
sbb
dec
mov
mov
fneni(8087
and
inc
add
xor
lods
mov
or
and
insb
xor
mov
inc
inc
mov
rcrb
lret
adc
popa
das
adc
mov
ljmp
push
rcl
in
sbb
xor
add
jge
or
fdivrl
add
adc
jl
add
shll
inc
sub
adc
mov
push
ljmp
add
js
mov
sahf
repz
popa
jmp
mov
adc
enter
pop
mov
inc
jmp
js
sbb
popa
fisubs
shrb
in
out
movsl
mov
and
sbb
add
daa
aaa
in
enter
cld
in
jmp
divl
je
rcrb
pop
lret
rcrb
add
sbb
push
and
aam
inc
sbb
xchg
aaa
into
repnz
sbb
add
push
add
or
andb
ret
and
push
cmpb
scas
inc
sub
jns
enter
push
inc
and
and
outsb
adc
movsb
sub
flds
jnp
fwait
and
cmp
movsl
jns
sbb
dec
lahf
inc
pop
or
sub
sub
xchg
test
sub
jge
mov
mov
repnz
xchg
inc
xor
test
test
sub
xor
dec
push
mov
js
cmp
hlt
mov
iret
idivb
push
dec
lret
inc
mov
int
sti
adc
xchg
add
push
popf
rolb
adc
and
fidivrs
inc
jae
test
test
daa
aad
pop
into
add
cld
repz
xchg
inc
lcall
mov
inc
jb
out
inc
rcr
mov
mov
outsl
jns
push
cmp
nop
in
dec
adc
aas
jl
idiv
ror
and
add
inc
mov
sbb
sub
imul
fcmovnbe
adc
sbb
and
mov
mov
sub
add
ja
sub
movsl
mov
icebp
cmp
es
xchg
mov
mov
add
jmp
scas
das
jo
mov
dec
mov
xchg
push
clc
test
and
pop
enter
mov
sbb
aaa
int3
shlb
add
jg
flds
mov
lods
inc
adc
bound
xchg
or
inc
sub
add
xlat
push
mov
xor
xchg
sub
enter
lods
sbb
and
add
scas
dec
cmp
mov
jmp
pusha
sub
addb
sarb
add
xchg
inc
inc
pop
incb
std
nop
mov
add
push
rcrl
push
sbb
subl
mov
sbb
fwait
sbb
jbe
movups
popf
add
push
add
into
int
icebp
mov
jb
dec
popl
xor
pop
mov
inc
out
and
add
roll
pop
rol
sbb
movsl
enter
leave
loop
pop
sub
jge
dec
rclb
nop
cmp
mov
jno
pusha
mov
aaa
imul
das
lods
testl
nop
and
or
pop
in
call
mov
add
outsb
or
orb
add
daa
add
lock
sbb
pusha
inc
and
sahf
xchg
pop
fnstenv
popf
jl
jns
cli
enter
mov
xchg
mov
fimull
or
aaa
add
loopne
lock
iret
adc
bound
cltd
je
add
pop
cmp
fiadds
ljmp
das
or
jns
stos
add
jo
sub
push
or
loop
add
fwait
sbb
ficoms
cltd
mov
jb
add
popa
in
mov
mov
arpl
pusha
outsb
testb
out
and
fnstenv
imul
clc
repz
jnp
add
inc
pop
out
cwtl
imulb
push
or
push
xchg
pop
push
aam
add
sbb
pop
testb
mov
in
add
inc
orl
sub
add
sub
fadds
pop
xor
mov
and
sub
adc
jmp
sub
cli
pushf
int
leave
or
sbb
xchg
mov
push
add
add
add
mov
inc
test
cmpsl
mov
sbb
push
test
js
fwait
xor
sbb
adcl
movsb
loopne
pop
add
mov
mov
scas
sub
in
dec
addl
ljmp
add
pop
mov
lahf
enter
add
push
xor
arpl
ja
cmp
movsl
push
rcll
out
loope
pusha
xchg
and
or
or
lods
add
popf
push
shrl
mov
sti
xor
faddl
sets
test
sbb
addr16
inc
jg
scas
sbb
jbe
add
add
stos
loope
pavgw
jo
xchg
add
jp
cli
xchg
push
jle
add
mov
mov
nop
icebp
fbld
psrlw
jmp
rcrl
and
cwtl
shlb
daa
movsl
imull
cmp
dec
ja
add
mov
jo
loopne
jmp
out
add
rcll
call
lods
pop
sub
loope
lods
mov
clc
stos
add
movsl
fiaddl
add
test
pop
adc
add
out
inc
notl
inc
popf
mov
lea
add
popa
pop
bound
lahf
and
or
add
rorl
bound
sahf
pusha
stc
cmovb
and
mov
fldcw
subb
je
sbb
sbb
sub
fcmovu
shll
add
lahf
outsb
and
fstpt
mov
mov
xchg
in
jo
insb
sar
clc
add
add
cmp
xor
hlt
push
insb
repnz
imul
add
mov
jnp
das
sub
out
or
ja
popa
sti
xchg
lock
add
sbb
sub
or
sbb
inc
test
inc
test
jmp
hlt
adc
ss
xchg
mov
pop
daa
add
pop
xchg
pushf
mov
add
cmp
test
cld
add
lret
sbb
aam
subb
cmpsl
pop
adc
out
mov
push
jg
add
sbb
bound
xchg
add
xchg
xor
push
aam
or
shlb
add
mov
or
or
push
je
repnz
push
pop
cvttps2pi
jle
loopne
or
addl
lret
cli
and
add
stos
or
add
jns
jmp
cmpsl
adc
and
pop
add
pushf
add
xor
imul
es
bound
fwait
adc
arpl
and
lock
pushf
add
lods
neg
addl
ss
subb
mov
add
or
bound
fnstsw
mov
daa
ret
push
xor
outsl
popf
pushf
andb
fcmovnb
mov
jge
stos
jne
mov
loopne
hlt
mov
pop
pop
jnp
add
lret
add
subb
or
fiaddl
push
inc
mov
sbb
inc
push
push
sub
or
push
mov
lret
sbb
dec
jno
add
sbb
ret
xchg
add
cli
movsb
ljmp
xchg
mov
popa
or
iret
adc
lret
sbb
push
rcrb
mov
mov
dec
hlt
je
rcll
or
loopne
popf
addr16
roll
and
sti
loop
cmp
or
xor
add
pop
in
xchg
jnp
movsb
mov
js
add
push
cmp
sub
cmp
cmp
push
add
pushf
push
adc
jns
pushf
cmp
sub
and
adc
adc
inc
mov
sbb
outsb
add
mov
ret
push
xchg
lret
pop
enter
xchg
stos
and
mov
add
rol
adcb
xor
ljmp
cwtl
push
scas
leave
in
pop
or
sub
xor
inc
push
pop
sbb
mov
jb
es
mov
add
push
lock
add
inc
push
movl
loop
cltd
xchg
add
sbb
mov
loopne
test
push
fidivs
add
fs
push
cmp
pmaxsw
jno
and
sub
fisubrs
push
in
jns
xchg
cmp
mov
icebp
dec
jmp
stos
maskmovq
imull
jb
xor
push
leave
mov
shrl
nop
sbb
push
mov
and
in
stc
imul
fiadds
adc
mov
lea
lret
jbe
push
push
sbb
notl
bound
add
pushf
nop
loopne
repnz
adc
inc
iret
cltd
or
mov
adc
lea
out
xchg
dec
xor
int3
mov
sbb
stos
stos
test
insb
xor
add
loopne
sbb
mov
push
das
adc
cld
mov
add
int3
xor
mov
ret
xchg
fildl
inc
pop
add
inc
ds
add
add
jb
push
add
mov
arpl
cmp
mov
or
cld
test
bound
popf
xchg
sub
fstpl
dec
add
inc
pop
shlb
js
dec
sbb
sub
and
push
cmpl
lods
subb
scas
out
out
add
jge
mov
imul
enter
pop
cmp
and
add
cwtl
or
mov
mov
sub
test
shlb
ret
rcrb
in
or
sub
or
inc
inc
fs
add
pusha
mov
jae
add
cmp
xchg
lret
dec
add
ror
cmp
adc
add
mov
xor
add
test
add
clc
mov
pop
add
mov
xchg
add
mov
inc
add
mov
lret
addr16
cmc
mov
imull
cmp
cs
icebp
jl
mov
inc
inc
cli
push
nop
cmp
test
shll
loopne
repz
icebp
and
lds
inc
add
or
test
push
pop
push
sub
cli
loope
xchg
call
sbb
sub
out
or
or
adc
adc
data16
pop
sub
cmpsb
popa
ret
mov
add
repz
es
ret
sub
and
invd
pop
jmp
jne
aad
lret
in
cmp
or
mov
dec
add
fcoms
jo
add
popa
cmp
jb
inc
cmpsb
and
xchg
cmpl
mov
mov
sub
test
add
adc
pop
subb
xchg
pop
or
inc
push
jbe
and
cmp
ja
lods
xchg
dec
xorb
adc
inc
add
push
mov
or
or
or
push
mov
in
dec
cmpsl
adc
je
hlt
xlat
xor
sub
pop
add
imul
sub
sbb
inc
pusha
xchg
lret
pusha
sbb
int
inc
add
stos
add
cltd
sbb
loopne
imul
mov
push
or
jg
cmc
scas
add
mov
insl
stos
add
jbe
sbb
mov
imul
mov
xchg
or
popf
jmp
dec
or
mov
insb
add
xor
mov
pop
mov
dec
and
cwtl
cmpl
adc
add
adc
mov
sub
and
pusha
jmp
dec
movsb
or
add
sarl
std
inc
outsb
cmp
mov
cwtl
xorb
rolb
push
pop
xor
js
mov
cmpsl
cmp
cmp
dec
pusha
int3
jl
or
or
insb
imul
push
jg
push
push
add
test
pop
adc
int3
pop
xor
cli
in
push
mov
movsl
call
into
rcrb
add
fidivs
sbb
clc
arpl
dec
sub
pusha
jmp
xchg
cmpsb
adc
enter
lret
xchg
add
mov
sub
js
cmp
lcall
and
sbb
inc
aaa
pusha
test
ret
dec
xchg
add
or
mov
shrb
inc
mov
aam
mov
sti
sub
dec
add
cmpsl
cmp
add
in
insl
mov
or
popa
add
dec
xor
ficoms
add
imul
add
lods
pop
add
inc
outsl
jns
stos
and
popl
stc
sbb
lahf
in
xchg
dec
rcrb
test
mov
sub
pop
add
lea
xchg
leave
add
daa
sbb
jno
outsb
xchg
outsl
inc
addb
or
fcoml
aaa
loopne
enter
mov
mov
leave
fiaddl
pop
js
sub
in
xchg
add
orb
push
lds
aad
or
jmp
rcr
in
push
scas
add
call
sbb
push
xchg
sbb
sysret
mov
lcall
popa
and
lds
sub
mov
cmc
sub
popf
cmp
imul
data16
call
and
jl
ret
mov
add
or
rcrb
push
cwtl
rolb
into
ja
pushf
xchg
mov
icebp
xchg
andb
pop
xchg
daa
mov
adcb
pop
add
jae
lcall
pop
rclb
out
push
jno
sbb
mov
mov
xchg
add
mov
mov
das
sub
mov
xor
data16
mov
push
add
mov
dec
jb
push
cltd
dec
shrb
dec
add
jb
dec
cmpsb
and
xor
mov
mov
xchg
add
mov
jecxz
das
lret
xor
push
in
loopne
pop
sbb
adc
adc
movsb
sub
out
addr16
jb
jle,pt
clc
push
add
test
pushf
add
lret
push
in
push
adc
cmc
and
add
mov
popf
dec
cltd
hlt
dec
sti
es
loop
add
shlb
test
add
cld
add
mov
sub
in
pop
dec
dec
sahf
pusha
push
add
ja
fwait
push
bsr
push
fadds
cmp
dec
mov
jg,pn
push
add
pop
mov
movl
mov
xchg
lcall
mov
push
testb
add
bound
iret
clc
and
sbb
mov
sbbb
int
movsl
jns
add
fcom
cmc
add
cwtl
adc
repnz
popa
jmp
jge
cmp
add
hlt
mov
daa
cwtl
ret
add
das
loopne
mov
add
std
push
push
add
aas
jl
add
xchg
gs
call
pop
add
pop
ja
and
mov
pmaddwd
cmp
add
pop
sarl
sub
add
scas
test
mov
stos
inc
xchg
jecxz
cmp
in
sub
or
dec
add
xchg
inc
or
mov
mov
sub
pusha
cmp
test
jno
adc
imul
or
xor
jge
addr16
in
pop
mov
lcall
pusha
add
lock
add
jne,pt
orb
pop
cmp
cmc
add
jp
nop
add
testb
shrl
leave
jae
dec
rolb
lock
sbb
pop
jmp
add
clc
cmp
or
dec
adc
push
test
inc
pop
xorl
jne
fwait
icebp
jae
loopne
mov
lret
xor
push
pop
push
adc
fisubl
add
cs
cli
jmp
mov
pop
test
lods
loope
mov
outsb
adc
cmp
mov
xchg
push
ret
sbb
or
mov
mov
sarb
movsb
or
vpshuflw
add
jb
rolb
mov
icebp
xor
mov
fimuls
sbb
or
mov
aas
jmp
inc
mov
cwtl
cwtl
add
test
les
jnp
mov
pop
pop
pop
cmp
ds
repz
xchg
sbb
sbb
call
lret
popf
jp
push
les
stc
and
or
jne
ret
push
mov
inc
mov
incl
mov
int3
sub
lods
and
insl
loope
inc
adcb
ret
adc
push
inc
sbb
pop
add
shrb
adc
icebp
dec
add
mov
mov
outsl
loope
push
fsubrs
mov
shlb
mov
jge
dec
popa
nop
addr16
mov
sarl
and
push
les
neg
pop
xchg
mov
jo
pop
jns
pop
in
and
add
inc
imul
and
push
push
fwait
sub
repz
ds
xchg
sarb
inc
int3
pop
aaa
mov
or
fidivl
movsb
call
js
loopne
push
popw
pop
adc
mov
lock
sbb
dec
sub
bswap
stos
into
fdivl
add
cmp
add
cmp
shrb
add
lea
notb
movups
push
add
ss
out
fists
cld
in
ja
lods
loop
sbb
xchg
addl
es
xchg
ret
rorl
mov
jno
add
mov
add
add
movsb
or
test
enter
sub
ds
jae
xchg
add
icebp
ret
or
lods
fucom
jno
push
loopne
mov
loopne
jae
cmpsb
push
add
and
cmp
mov
push
imul
inc
mov
insl
pusha
dec
mov
rcrb
xorb
js
out
pusha
xor
and
add
imul
adc
lea
push
loopne
data16
mov
inc
add
hlt
rclb
lds
mov
dec
inc
sar
jnp
daa
sub
jl
in
mov
adc
lahf
sbb
out
sti
adc
pop
sahf
mov
jecxz
cmp
sarl
jae
ds
nop
in
rclb
gs
add
ja
cmpsb
push
sarl
test
ror
add
repnz
cmp
adc
adc
xchg
stc
xor
add
pop
dec
sbb
leave
pop
mov
push
inc
or
in
add
shrb
js
add
ficoml
add
insl
cwtl
jg
inc
adc
rcll
int
rcr
out
mov
add
lret
movsb
mov
add
push
dec
mov
add
push
pop
and
fstps
pop
add
jg,pn
cmp
mov
filds
sub
mov
stos
jns
add
push
inc
inc
jge
pop
sbb
out
mov
pop
mov
xor
adcb
int
dec
pop
lock
loop
cs
mov
sub
lea
or
int
insb
xchg
lods
enter
lds
imul
ja
aam
add
sbb
add
jne
push
sti
adc
cmpsb
jp
ja
lcall
into
cmp
mov
push
add
decb
or
dec
inc
repnz
mov
dec
adc
aas
mov
mov
in
mov
fwait
jp
cs
dec
lock
out
mov
mov
add
icebp
sbb
fsubrp
jge,pn
mov
add
pop
insl
mov
mov
or
clc
mov
loopne
out
add
xor
arpl
fmull
add
sub
andb
sub
xchg
cmp
push
dec
mov
xor
and
or
or
jnp
jno
mov
lahf
cmp
pop
add
cmp
adc
ret
imul
push
bound
add
push
sbb
sub
mov
test
lods
add
or
nop
lahf
add
test
or
lods
or
adc
aas
or
add
popa
mov
pop
out
add
ficompl
js
xorl
push
push
sub
and
or
inc
dec
sub
call
test
inc
shrb
out
js
adc
fstl
pop
jge
sub
gs
add
dec
mov
fistpl
add
pop
adc
jp
mov
ror
shll
arpl
lods
scas
and
or
test
stos
aam
sbb
mov
or
adc
mov
shrb
jo
add
lret
add
push
mov
repnz
cmpsl
lods
repz
inc
orl
pop
repnz
leave
jae
sbb
aas
outsl
mov
clc
lds
mov
aam
test
loopne
ret
loopne
cmc
cltd
incb
pop
jno
fisubs
sarb
add
add
xchg
add
xor
xchg
and
mov
push
loopne
and
add
daa
imul
popa
xchg
mov
pop
cs
xchg
aad
xorb
call
shlb
sub
add
add
or
inc
not
add
test
add
lret
mov
addb
hlt
fistl
movsb
jle
scas
pop
pop
pusha
jge
and
dec
outsb
fs
xchg
in
mov
mov
mov
lret
pop
and
ss
arpl
out
mov
in
imull
cmp
mov
mov
push
aad
jbe
add
into
test
mov
cmpsl
int
pop
and
stos
jl
add
out
rcrb
fwait
and
mov
jno
inc
lcall
je
pop
jle
add
mov
jg
inc
lahf
loope
test
add
test
out
jo
cmpsl
test
xor
imul
mov
clc
adc
aas
xor
leave
dec
pop
popa
xchg
dec
aad
cmp
pop
dec
mov
mov
mov
add
adc
in
imul
mov
test
xchg
mov
mov
popa
xchg
add
xchg
mov
pop
jg
pop
popa
sub
rol
insb
fcmovb
push
or
ds
jg
into
scas
jno
pop
add
add
mov
inc
int
imull
jns
ret
fists
aas
rorl
fs
add
into
pop
fimuls
pcmpgtw
cmpsl
ror
lock
mov
aam
loopne
jae
and
sbb
es
sbb
lcall
outsl
xchg
push
enter
push
pop
mov
fistl
fs
sbb
ja
pop
pop
sbb
xchg
and
add
inc
ds
jnp
add
ret
jbe
mov
pop
and
mov
push
cld
mul
fbld
mov
push
fiadds
les
dec
and
cmpsb
out
mov
lock
pop
xchg
pop
loop
add
inc
jae
lcall
adc
ljmp
mov
mov
jo
jno
fsubl
mov
sbb
mov
sbb
lock
icebp
cmpb
imul
sub
adc
ljmp
das
add
mov
sub
push
add
cmc
inc
test
and
pop
outsb
es
jle
movlps
xor
in
add
repnz
cmp
cld
inc
test
sub
aam
repz
js
adc
in
xchg
xlat
cmp
lods
mov
push
lahf
mov
bound
xlat
and
mov
ficomps
push
xchg
push
hlt
pop
test
pop
cmp
out
shll
add
xor
in
push
dec
dec
fadds
mov
or
cmp
jecxz
shll
cmp
movl
mov
adc
sbb
add
jnp
xchg
cmp
imul
jl
rorb
xchg
hlt
dec
out
push
addb
imul
call
xor
ds
sub
hlt
add
inc
pushf
fimull
subl
scas
push
addr16
mov
or
and
jecxz
xchg
add
jno
insl
mov
out
xchg
repz
aam
cld
mov
adc
lea
mov
inc
sti
call
popa
call
inc
mov
sub
dec
cld
mov
jg
int3
arpl
scas
pop
test
in
insb
add
pop
xchg
cmp
lret
out
dec
add
add
push
out
add
dec
stos
data16
sub
das
leave
in
scas
push
bound
testb
fsubr
aam
enter
mov
in
cmpsl
fptan
push
add
jae
repz
ret
std
das
mov
les
repnz
inc
sahf
cmp
add
cmp
push
mov
xor
sub
push
jno
add
mov
adc
jo
or
orb
ret
xor
or
xchg
aas
push
mov
pop
mov
scas
inc
cli
xor
popa
mov
mov
ds
dec
pushf
es
sysenter
lods
xor
pusha
clc
int
lea
aad
dec
out
cmpb
mov
or
xlat
cmp
js
ljmp
cmp
add
scas
dec
inc
stos
push
add
xchg
in
add
cmp
xor
cmp
xchg
mov
out
arpl
shl
addb
add
xchg
jnp
out
rcrl
jge
push
xor
jge
add
stos
je
xchg
pop
dec
arpl
xchg
dec
insb
xor
aas
mov
mov
test
cli
les
and
das
add
test
lcall
xlat
scas
dec
xor
fdivrs
inc
or
dec
sbb
pop
add
cwtl
aam
cld
hlt
enter
or
int3
sahf
cmp
cmp
movsb
cmp
mov
sbb
or
mov
lcall
mov
ljmp
push
in
fwait
mov
inc
or
push
xchg
bound
xor
pusha
aad
push
cld
sub
mov
fld
dec
add
mov
pop
dec
and
addr16
pop
or
shrl
mov
fwait
lret
jmp
sbb
cwtl
push
mov
out
push
int3
sub
xor
nop
push
je
and
mov
cmp
dec
popf
mov
inc
lods
jp
fdivrs
movsl
mov
or
adc
cltd
pop
cmpsl
and
out
push
sarb
sarb
cmp
loopne
push
and
jl
xchg
cmp
insl
outsl
and
fadd
aad
inc
jecxz
call
loopne
ror
xor
and
hlt
inc
pop
in
shlb
push
pop
add
arpl
or
ja
nop
inc
dec
adc
std
add
pusha
cmp
adc
jl
mov
into
adc
jbe
out
mov
and
jne
lahf
add
or
addb
enter
roll
inc
sbb
mov
push
xchg
xchg
push
test
sub
pop
jl
add
mov
mov
adcb
imul
xchg
cmp
sti
repz
mov
xchg
xor
sub
and
adcb
test
inc
icebp
fildl
mov
cmp
or
test
inc
inc
dec
add
jns
clc
popa
push
fsubrs
add
pusha
fbstp
sbb
adc
cmp
cmpsl
mov
loopne
data16
add
fcomps
mov
xor
inc
xchg
lahf
xor
inc
insb
pop
or
dec
add
mov
xchg
mov
in
jno
jo
push
pop
jecxz
or
test
scas
jae
add
pop
sbb
ret
arpl
dec
cli
shrl
cmpsb
pop
cmpsl
enter
push
push
into
push
cmp
lret
jb
test
add
xchg
enter
popa
es
add
movsb
adc
mov
push
aad
mov
add
filds
jge
mov
or
sbb
hlt
fdiv
mov
add
push
cmp
push
sub
insb
push
pop
pop
or
pop
rclb
test
and
nop
mov
sub
add
sbb
xchg
xchg
add
mov
int
xchg
cwtl
mov
jl
add
ljmp
cmp
add
mov
xor
sub
dec
hlt
arpl
sub
adc
add
add
scas
in
in
add
loope
shrl
add
ucomiss
mov
and
imul
pop
pop
sbb
adc
add
mov
nop
testb
push
nop
pop
add
add
lock
push
add
cmp
mov
mov
inc
test
mov
int3
call
mov
or
popf
and
rcrb
fildl
push
rolb
es
es
dec
add
iret
lret
out
add
mov
test
xor
sub
pop
fadd
push
xor
outsl
fisubrl
inc
iret
les
mov
js
dec
mov
add
pushf
clc
push
jle
xchg
into
or
mov
jmp
add
iret
cwtl
stos
add
add
out
pop
mov
popfw
add
mov
add
and
lea
pop
add
push
or
shlb
mov
sbb
or
sbb
or
jne
inc
sub
pop
mov
push
sbb
bound
add
fmulp
aam
leave
xchg
add
push
stc
xor
cld
pop
xlat
fs
rcrb
push
pop
and
add
lret
stos
leave
jo
mov
cmc
pushf
dec
sub
add
movsb
das
ret
insl
xchg
jae
gs
mov
fsts
pop
cli
insb
push
push
mov
out
sbb
sub
insb
or
cld
push
pop
adc
aad
test
dec
insb
sbb
add
data16
lret
add
xlat
mov
stos
and
add
xchg
pusha
in
cltd
movsl
add
add
shld
or
push
xor
add
cmc
or
cmp
aad
cmpsl
mov
aam
in
dec
aaa
jne
inc
outsb
insl
mov
adc
sbb
dec
cmpsl
cltd
in
subb
pop
xchg
cmp
and
sbbb
idivl
jae
mov
es
add
pop
cmp
add
clts
les
dec
mov
sub
adc
in
mov
xchg
sbb
cmp
jns
inc
mov
mov
jae
xchg
xor
int
add
mov
sahf
inc
push
test
dec
sbb
push
dec
cmp
xchg
mov
add
les
dec
push
cmpsl
cwtl
sahf
and
inc
xchg
pusha
mov
sub
adc
cld
mov
sub
inc
add
lea
movsb
in
pop
cmp
cmp
sbb
scas
or
and
mov
adc
pushf
push
ljmp
mov
push
lret
or
jnp
pop
cmp
adc
subl
sbb
aaa
mov
mov
mov
cwtl
xchg
xchg
and
add
push
lahf
cmp
ret
and
pop
flds
cli
xor
xchg
je
shrb
dec
stc
mov
add
jnp
jle
repz
adc
fwait
inc
roll
sarb
and
xor
movsb
mov
adc
jne
mov
and
sub
insl
imulb
or
add
ss
xor
je
imul
mov
xor
xor
mov
mov
cmp
mov
repz
shlb
idiv
adc
xchg
or
or
repz
add
adc
pop
add
pushl
dec
mov
subl
add
or
inc
push
fwait
and
push
push
and
fiaddl
sbb
cmpsl
xchg
dec
jbe
or
inc
call
mov
dec
fldenv
jg
mov
add
pop
mov
mov
rol
sub
iret
and
gs
or
and
mov
jp
xor
lcall
jbe
add
add
xor
sub
cmp
hlt
aas
jo
out
fs
xor
dec
mov
cmp
xchg
das
push
jnp
fbld
ja
pusha
orb
fsubl
pop
xchg
sbb
iret
push
sahf
loop
roll
dec
popf
loopne
xor
mov
jmp
test
or
jo
dec
add
fisubrs
inc
cmp
pop
xor
xchg
add
mov
pop
xchg
nop
call
pop
sti
rclb
xchg
aaa
jl
je
sub
inc
and
cmp
mov
pop
shll
andb
mov
xorb
sub
push
in
sbb
mov
mov
shlb
js
push
and
out
loopne
push
clc
outsb
add
mov
mov
add
fldenv
push
adc
pop
pop
movsl
or
add
cltd
or
out
rolb
popf
dec
movsb
mov
call
sti
dec
cmp
sbb
push
adc
out
js
sbb
add
mov
lds
mov
sub
push
xor
movsl
or
cs
mov
out
test
push
cltd
xorb
lock
in
mov
fsubp
in
mov
jl
inc
or
or
fs
xor
in
das
push
inc
aas
mov
jo
lahf
xchg
test
or
test
mov
andb
push
and
pusha
das
call
into
daa
movb
fnstsw
and
int
add
jmp
xchg
imulb
push
sub
push
inc
push
cmp
pop
add
mov
add
dec
sahf
jl
jmp
mov
inc
pop
mov
aaa
shrl
jae
jo
stc
xchg
and
in
cmp
insw
add
mov
loopne
cmp
sub
add
jae
push
test
jp
mov
add
std
out
sbb
push
into
inc
cmp
cmp
jbe
sub
xor
test
adc
add
sub
push
or
mov
in
jg
in
sub
shll
pop
mov
and
sar
ss
cmp
xchg
cli
jne
add
dec
adc
or
or
inc
imull
pop
xlat
xorb
push
add
ficompl
push
fdivrs
add
mov
movsb
sub
inc
add
push
jg
jnp
add
insl
fsubrl
gs
fsts
jmp
xorb
fcom
mov
int
jns
xor
adc
adc
push
rol
outsb
inc
cmp
jo
push
scas
add
lret
nop
loop
sub
insl
add
mov
sbb
jns
jl
dec
stos
cld
mov
dec
mov
add
push
mov
pop
dec
sarl
sub
lock
and
outsl
push
sarb
sub
mov
mov
push
fcmovu
scas
and
dec
sub
addr16
xchg
out
call
cmpsb
add
mov
iret
add
and
push
aam
pop
add
pop
jne
cwtl
cmpsb
lock
push
add
dec
and
or
sub
jo
stos
rcrb
inc
mov
cmp
sbb
jbe
jnp
sbb
cmovg
push
je
xchg
and
xchg
pusha
sub
mov
dec
mov
aaa
in
jmp
add
fstpt
cmpsl
xor
mov
hlt
cs
sbb
loopne
faddl
jb
and
movsb
shlb
loope
fsubr
cwtl
fisubs
add
loopne
inc
push
lahf
lock
add
sbb
add
dec
jge
jmp
jb
add
aam
mov
jp
gs
mov
add
out
sub
and
pop
pop
adc
dec
push
add
inc
xor
test
daa
shll
sahf
bound
mov
mov
xorl
loope
jb
cld
and
std
jmp
mov
sbb
enter
push
or
mov
add
push
xchg
adc
sub
inc
ror
cli
push
cmp
inc
cmp
jo
leave
aas
xor
popl
out
fstp
adc
add
xchg
dec
add
sti
aad
leave
mov
lock
data16
cmp
mov
push
test
imul
pop
cli
sub
enter
and
sub
xor
mov
push
push
add
pop
sbb
or
add
pop
adc
icebp
aaa
cmp
adc
pop
pop
dec
cwtl
pop
and
push
add
jno
add
add
xor
sub
psubb
cmp
scas
mov
cwtl
jae
into
push
sahf
push
test
or
lcall
shlb
pusha
lods
pop
xchg
cs
xor
dec
mov
push
add
sub
cld
nop
add
xchg
pop
and
mov
add
push
repz
shlb
div
add
adc
cld
mov
std
rolb
adc
add
and
add
flds
outsb
cmp
aaa
push
mov
in
mov
inc
add
shlb
push
aam
outsl
dec
scas
xor
jbe
adc
mov
movsl
xchg
cmp
add
mov
xchg
pop
push
xchg
fcoms
cmpsb
pop
and
pop
ljmp
and
mov
enter
xor
negb
jl
add
adc
push
ss
pop
les
jg
pushf
enter
orb
ret
fbstp
add
sti
push
mov
add
dec
xchg
out
lcall
lret
ror
mov
ljmp
add
push
adc
add
add
mov
xlat
int
pop
ss
sub
cmp
mov
push
add
xchg
mov
cld
ljmp
mov
addb
inc
sbb
add
clc
imul
add
ficoms
mov
imul
es
and
xor
out
jo
add
push
fstpl
add
jno
dec
sbb
sarl
add
fists
dec
cmp
mov
leave
into
push
cli
push
sbb
add
cld
enter
add
movsb
jmp
cmpsb
cmp
mov
and
daa
jo
add
jecxz
cli
mov
enter
add
jno
dec
and
sbb
imul
add
lcall
push
out
jmp
add
in
ret
lods
daa
add
sahf
insb
test
sarb
xor
xor
add
or
cmp
add
fadd
je
call
shrb
incb
leave
add
and
popl
das
xor
aas
jo
cmp
lahf
adc
lret
add
loop
add
jg
inc
or
and
or
popf
mov
das
sahf
pop
lret
and
pushf
fisubl
cmp
lock
mov
xor
add
clc
imul
xor
nop
shrl
xchg
call
jl
movsb
add
rolb
push
adc
ret
insb
cwtl
pusha
es
add
jge
insl
scas
out
in
hlt
add
dec
loop
dec
js
mov
addb
cld
sbb
aaa
add
hlt
and
push
add
nop
xlat
sbb
sbbb
xchg
cmp
add
sbb
fadds
fsubrs
in
dec
jo
xchg
add
sub
sahf
mov
inc
push
push
std
shrl
xchg
data16
mov
aad
inc
mov
insl
push
hlt
pop
cmove
loop
ja
scas
push
or
inc
imul
call
inc
mov
jl
mov
jns
dec
sub
pusha
adc
inc
mov
cmp
aas
lahf
ret
mov
popa
pop
xor
cmp
jge
xor
movsl
inc
add
imul
stos
cmpsl
add
iret
subb
ja
test
sub
xchg
push
add
xor
push
outsb
add
orl
shrb
sbb
lahf
icebp
add
test
rep
lock
mov
adc
jle
add
sbb
sbb
pop
pop
or
and
scas
pusha
xchg
mov
sbb
enter
add
stos
loopne
das
mov
and
popf
dec
add
hlt
add
or
pop
mov
fdivl
add
xor
js
stos
or
fmuls
sub
dec
dec
lahf
add
pop
and
sbb
mov
lret
jae
mov
or
ss
popf
inc
pop
sbb
ja
add
pop
nop
cwtl
push
sub
jl
jge
mov
cwtl
dec
jl
jl
lds
aad
insb
mov
xchg
fiaddl
push
add
xchg
xchg
andl
mov
add
jbe
jns
insb
dec
add
jb
call
add
dec
clc
out
in
add
cltd
sub
inc
mov
out
jns
xorl
push
fcomps
cmp
iret
mov
push
sub
fnstcw
test
cmp
pop
sbb
shlb
push
or
das
xchg
mov
mov
insb
mov
add
fcoml
add
nop
add
dec
pop
call
add
sub
popa
or
cmp
sbbb
push
xchg
imul
lock
push
add
adc
inc
pusha
lods
rolb
xchg
pop
fidivrl
loopne
lods
add
insl
out
mov
add
ret
xor
inc
bound
xorb
push
sbb
sbb
addr16
mov
adc
fnop
fisubs
jns
add
sub
js
test
mov
push
into
and
imul
fwait
rcll
or
mov
fs
data16
loopne
dec
mov
push
ffreep
sub
ss
push
test
or
call
add
jle
lock
out
jl
clc
push
add
jecxz
pop
and
clc
add
dec
andl
add
lods
stos
xorl
dec
repz
ljmp
pushf
push
add
lahf
mov
push
add
call
pop
push
push
cmpb
out
and
add
mov
shl
jmp
jmp
cmpb
sub
sbb
ja
push
scas
dec
add
jae
cmp
bound
lods
add
mov
inc
cmp
cli
sbbb
scas
loopne
xchg
mov
add
andl
xchg
xor
stc
or
cmc
pop
in
mov
lods
push
call
mov
sbb
sbb
xchg
jl
add
cltd
push
push
sub
xchg
and
mov
mov
adc
push
push
popa
repnz
or
dec
cmpsb
or
fs
incl
xchg
xor
out
je
or
mov
pop
pushf
pop
ljmp
std
incb
iret
mov
inc
lcall
je
mov
mov
push
rol
out
imul
sbb
inc
or
push
xor
sbb
movsl
cmp
iret
fisttpll
xchg
adc
sbb
call
repnz
xchg
popa
sbb
mov
pop
inc
mov
inc
ja
mov
sarl
add
mov
mov
add
sahf
add
inc
adc
pop
add
movsb
outsb
and
ret
filds
jo
add
xchg
mov
cmp
mov
mov
dec
stc
clc
add
dec
push
push
mov
cmp
lea
mov
add
mov
push
sbb
repnz
jmp
test
fdivp
ljmp
mov
adcb
xchg
push
mov
dec
js
sti
jo
add
or
xor
xchg
cmpsb
sbb
push
cmp
add
pusha
out
enter
ja
and
jg
das
dec
in
test
or
pusha
push
adc
out
or
inc
aas
cmp
inc
inc
lods
test
xor
jae
cltd
dec
stos
loop
xor
push
dec
mov
sbb
inc
movsb
mov
add
test
cwtl
mov
add
sarb
inc
adc
mov
shl
push
lea
sbb
add
loope
cmp
or
push
imul
inc
sbb
jno
leave
dec
jo
mov
add
sub
adc
lock
mov
test
push
cmp
or
xor
push
mov
mov
push
add
ret
and
loopne
add
loopne
addl
movsb
repnz
xor
sbb
dec
xchg
stc
add
insl
mov
fs
cs
outsb
or
sbb
aam
aas
jg
jge
add
mov
push
sbb
inc
fsubs
jne
outsl
pop
adc
fiaddl
outsb
lock
jg
xchg
andl
roll
xchg
sub
push
jo
cld
andb
jge
push
shll
add
lea
dec
push
pushf
push
add
inc
or
jge
enter
push
add
stos
jmp
in
add
mov
pop
add
ret
lea
lahf
xor
cmp
loope
dec
cwtl
add
push
sbb
scas
mov
rcrl
call
inc
imul
mov
jns
xchg
into
push
pop
mov
aas
pop
inc
sahf
test
dec
add
in
sbb
aam
shlb
mov
or
shl
push
add
mov
mov
sbb
adc
lock
add
dec
cmp
inc
cmp
push
pop
sbb
shlb
dec
pusha
or
cmpsb
cmp
and
loope
or
sub
sub
pop
xorb
insb
cmp
or
dec
pop
and
aam
mov
cmp
add
add
es
ss
ds
lahf
push
jecxz
pusha
xchg
ds
movsb
mov
rorb
or
pop
test
sbb
xchg
dec
ret
mov
jbe
addb
xor
inc
clc
das
push
xor
loopne
xchg
sub
shl
int3
xor
mov
sbbb
xchg
pop
sub
in
stos
inc
and
pop
push
pop
fldl
sbbb
dec
jbe
dec
mov
test
push
mov
sbb
push
pop
pusha
xor
cltd
inc
push
cmp
or
and
in
ds
lock
fcoms
sbb
sbb
lret
leave
mov
push
out
mov
add
add
dec
jbe
xchg
add
gs
dec
dec
add
scas
cmp
je
outsb
icebp
xorb
daa
mov
jmp
orb
cmp
cmpb
cmp
popa
sub
sub
or
andl
pop
jg
sub
rolb
jne
cmpsb
int
add
lods
sbb
jge
mov
in
add
mov
sub
inc
inc
sub
and
pop
js
leave
xadd
or
shlb
pop
inc
cmp
mov
movsb
sub
add
xor
dec
pop
push
and
aad
in
xor
popf
cmp
pop
mov
daa
jbe
dec
lcall
inc
mov
cmp
push
pop
mov
sub
mov
jp
add
repz
jg
mov
dec
sbb
cli
adcb
repz
sub
xchg
jl
aas
out
cmp
movsb
cltd
test
add
lds
mov
push
dec
clc
inc
sbb
or
nop
imull
jg
repnz
or
clc
inc
sahf
sbbb
cmp
ss
stc
cs
jbe
mov
mov
add
mov
popa
jmp
mov
int
xchg
dec
and
adc
shlb
je
cmp
adc
lds
ret
add
mov
lcall
loopne
test
shr
clc
xor
cmpsb
mov
add
jmp
int3
iret
and
repnz
addl
pop
push
cmp
rorb
pusha
adc
cmp
mov
jle
mov
ret
enter
xor
popa
and
cmc
fldt
mov
mov
sub
insb
aam
adc
mov
adc
xchg
sub
loopne
sbb
xchg
sbb
lods
aas
mov
popf
inc
mov
insb
in
mov
mov
xchg
xor
shll
arpl
xchg
ret
pop
xlat
test
and
or
add
adc
cmp
dec
mov
or
lret
mov
rcrb
mov
add
inc
pop
and
mov
xlat
sub
nop
clc
jmp
jno
mov
pop
mov
jns
jnp
cld
xor
add
pop
call
xchg
add
xchg
pop
leave
mov
add
fsubs
rorl
hlt
add
pop
and
arpl
sbb
in
dec
add
leave
jmp
pop
adc
sbb
xor
jl
mov
add
pcmpeqw
and
sub
cmp
push
push
mov
add
jnp
fstpt
je
or
pushf
pop
pop
inc
ret
iret
add
push
test
sub
add
mov
pop
or
add
cmp
add
sbb
dec
testl
pop
or
xorl
movsl
push
dec
mov
jae
add
sub
ud1
sub
int3
sahf
mov
mov
jl,pn
xchg
sbb
aam
xchg
fdivrl
pusha
mov
repnz
call
xchg
sarb
dec
sub
cwtl
clc
add
adc
loopne
mov
call
test
icebp
add
or
inc
aas
adc
push
in
add
push
loopne
mov
sub
add
adc
ds
cmp
aam
or
cmp
xor
push
adc
fcoml
dec
loopne
and
dec
scas
add
arpl
push
dec
add
jne
aas
movsl
mov
pop
rolb
jmp
xchg
int3
mov
insl
jl
dec
imul
cmp
shl
mov
mov
inc
push
je
sbb
pushf
jb
push
repnz
cmp
andl
mov
out
adc
movsb
adc
sub
mov
add
add
lds
daa
rol
mov
or
bound
pop
and
xor
inc
in
mov
add
sub
test
loopne
or
add
or
lea
adc
movsb
xchg
stos
iret
mov
icebp
repz
fmul
lods
jae
and
insb
pop
push
stc
call
jmp
data16
sbb
pmulhuw
out
mov
add
jecxz
loope
mov
ret
fdivrs
and
lds
fsubrs
pop
pop
aam
dec
insb
cltd
jp
cmp
enter
sub
jb
imul
and
std
mov
add
mov
push
cmp
ret
inc
or
js
sub
fmull
push
in
cmp
jp
jle
inc
leave
dec
pop
push
mov
adc
dec
add
test
ljmp
jo
sub
adc
mov
out
xor
pop
in
cmp
out
arpl
push
das
sbb
and
in
xor
test
test
fs
adc
lods
push
sbb
sahf
jl
jp
pop
xor
xchg
mov
xchg
xor
and
adcb
dec
sbb
inc
sub
test
nop
add
pop
pop
stos
insb
push
push
and
sbb
and
jae
add
out
popa
mov
fimull
add
test
adc
negl
out
push
inc
out
jne
hlt
enter
dec
pop
push
xor
sbb
mov
cmp
cmp
xor
es
dec
sub
mov
inc
add
mov
call
icebp
add
pcmpeqd
inc
add
out
cmp
fisubs
call
loop
lret
clc
es
int3
push
dec
ss
sub
repnz
mov
and
push
out
jle
ja
xchg
inc
cmp
mov
cmp
push
test
lods
lods
adc
sub
pop
nop
sub
cmp
pop
mov
mov
adc
stc
out
stos
fs
mov
dec
sub
xchg
les
push
add
pop
rolb
loop
dec
mov
popa
lods
sbb
mov
out
jmp
or
or
repnz
out
testb
xchg
mov
les
mov
addr16
scas
pop
xchg
pop
dec
movsl
fs
ds
mov
and
jo
movsb
push
or
loopne
sub
ljmp
lea
sti
sbb
pop
adc
cmp
setp
pusha
bound
sbb
enter
insb
shll
adc
adc
pushf
pop
mov
ljmp
jo
push
cltd
mov
dec
push
bound
cli
clc
xor
gs
sbb
out
cltd
add
cmp
decl
mov
inc
mov
loop
push
in
cld
cs
and
ret
pop
and
mov
popf
scas
cwtl
out
fistps
push
shlb
sbb
stos
add
shrl
sub
notb
and
or
jg
mov
xlat
push
sbb
fs
mov
test
cmp
hlt
shlb
or
add
popl
xchg
sbb
mov
mov
cwtl
inc
jmp
add
xor
int3
pop
pop
jmp
sbb
cmpsl
add
ja
fxch
add
inc
xor
jno
je
repz
xchg
cmp
pop
call
faddl
ds
adc
repnz
push
or
sbb
inc
sbbb
and
fnsave
jg
adc
in
ss
loope
jmp
lcall
inc
mov
cmp
out
rolb
mov
pop
push
sbb
mov
roll
adc
pop
rorb
lods
xchg
sbb
jo
sbb
add
adc
pop
xchg
outsl
adc
dec
repz
add
inc
push
call
xchg
add
mov
aas
nop
je
and
sbb
sbb
mov
loope
sti
push
loopne
sbb
cmp
xchg
add
mov
sub
mulps
add
fbld
adc
add
inc
pop
or
lock
jnp
cmp
xchg
mov
push
mov
icebp
add
fstp
adc
push
out
jns
mov
xor
cmpsb
push
idiv
out
add
fwait
push
mov
and
add
mov
add
mov
inc
pop
or
add
cmpl
jo
adc
and
add
std
shlb
push
cs
add
je
mov
inc
sbb
out
popf
imul
jno
cwtl
dec
xchg
imull
ljmp
and
cmp
outsb
lds
js
repnz
add
shrb
mov
sbb
push
inc
add
stos
fdivr
ret
add
in
pushf
or
mov
add
mov
lret
dec
add
lea
xchg
sbb
imul
in
jae
add
ret
pop
loopne,pt
xor
leave
ljmp
ret
dec
fs
add
add
sub
add
sbb
xor
sub
sbb
add
adc
pop
pop
scas
xorl
sbb
mov
inc
das
add
xor
mov
aas
xchg
add
enter
or
mov
mov
ret
jbe
adc
ss
movb
pop
inc
pop
pop
cld
jmp
andb
addb
jecxz
andl
out
add
jp
arpl
shl
mov
les
xor
add
movsb
or
mov
or
push
xchg
inc
mov
rcpps
inc
and
add
psubd
xchg
xor
xchg
fadds
cmpsl
mov
jno
push
pop
loope
xchg
xor
lods
movl
adc
shll
in
clc
mov
sbb
stc
testl
xor
sub
inc
xorb
loopne
out
je
add
pop
fs
aam
or
ja
inc
test
daa
add
inc
pop
mov
fldenv
add
jo
cwtl
movsb
or
sub
lock
inc
jno
mov
fisttpl
jns
xchg
aas
mov
sub
pop
sub
add
push
pop
or
mov
pusha
imul
mov
add
insb
jmp
xor
aas
add
jp
jecxz
push
movl
and
add
mov
add
xchg
pop
pusha
xchg
out
mov
push
js
adcb
adc
pop
adc
xchg
add
mov
push
pop
add
push
pop
pop
xchg
mov
out
jnp
ljmp
cmpsl
jb
push
mov
lds
sti
add
scas
or
test
mov
push
xlat
addl
add
rcpps
add
and
test
mov
add
mov
out
mov
cmpsl
xchg
add
fnstenv
add
add
adc
lock
dec
sbb
pop
and
dec
nop
fs
popf
addr16
adc
add
leave
add
test
mov
jecxz
mov
inc
sbb
sub
push
cmp
add
or
jecxz
inc
or
mov
sbb
jns
cmp
popa
mov
pop
pushf
push
cmpsl
inc
popf
xor
movb
adcb
mov
adc
dec
pop
int
repz
popf
or
cmpb
stos
push
out
xchg
shlb
add
stc
bswap
test
lock
cmpsl
jbe
lock
add
aas
mov
add
and
jle
pop
dec
xchg
leave
inc
insb
cs
in
push
cmp
sbb
shl
addl
pop
lret
xor
jge
cmp
lahf
xchg
imul
jb
and
mov
int3
cld
push
add
cmpb
outsb
mov
nop
enter
sub
lret
rcrb
sbb
xchg
xor
mov
cld
push
lret
lea
lret
push
sar
lcall
add
xchg
mov
mov
jbe
ja
mov
insb
lret
cltd
ret
add
aas
add
cmp
inc
andb
in
int
and
ja
into
mov
cwtl
pop
pop
nop
pusha
xor
sar
cmp
outsl
mov
add
cmc
cltd
adc
sub
pushf
loopne
xor
unpcklps
xor
mov
pop
mov
adc
lret
dec
addr16
add
jbe
sbb
or
inc
and
push
sti
movsl
aam
sbb
and
and
add
inc
in
lret
and
jo
or
push
and
push
cwtl
jle
push
or
mov
inc
mov
sbb
lcall
add
fsts
mov
or
and
shlb
adc
jo
inc
xor
fs
xchg
mov
wrmsr
or
loopne
add
pop
dec
sbb
out
cmpsl
xlat
sahf
jo
fsubrl
cmp
bound
in
mov
add
sbb
adc
xchg
push
cltd
int
adc
add
bound
popf
jecxz
add
cmpsl
or
mov
movsb
dec
sub
add
in
mov
dec
and
std
loope
int3
adc
cmp
add
aam
xchg
adc
aad
jg
push
add
aas
and
sbb
xor
ret
insb
imul
jmp
shrl
adc
mov
add
out
xchg
add
cmp
add
cmp
cld
cmp
add
mov
pop
pop
add
out
add
push
adc
xor
add
inc
insl
test
pusha
imul
jle
mov
cltd
mov
cmp
pop
repnz
loopne
enter
xor
mov
js
add
iret
aaa
cmp
adc
push
pop
jmp
mov
rolb
int3
mov
add
fiaddl
xchg
jbe
je
jmp
mov
repz
xchg
jecxz
orps
xlat
jno
cmp
sbb
loop
or
dec
adc
pop
shrb
push
xor
push
jp
add
sahf
addr16
inc
jbe
and
jne
push
std
or
mov
jmp
js
or
sbb
jge
fs
dec
sti
sahf
add
mov
out
jns
xor
push
add
jle
push
mov
subl
sbb
push
push
movsb
cmc
add
push
sub
jo
hlt
jle
mov
cltd
pop
jno
push
jge
mov
loopne
scas
or
fs
test
push
xchg
insl
mov
add
fbld
cwtl
mov
test
stc
mov
adc
cmp
push
loopne
push
jge
cld
inc
push
rcl
insb
outsb
add
jae
cmp
push
adc
push
cwtl
es
call
inc
leave
dec
push
add
lahf
sub
mov
sub
add
fld
mov
mov
daa
shr
clc
test
hlt
mov
icebp
sub
jb
adc
mov
aas
mov
jno
orb
inc
inc
push
mov
cwtl
mov
out
xor
xchg
or
cli
sbb
push
imul
pop
test
std
or
sbb
jno
add
pop
dec
cs
mov
jecxz
insl
push
jae
inc
icebp
mov
sub
dec
repz
enter
push
test
in
lods
pop
push
add
shrl
push
leave
jne
test
mov
nop
sbbl
sub
repnz
sbbb
and
xchg
inc
and
mov
push
xor
push
xor
fsubrs
or
inc
mov
jne
add
mov
cld
inc
outsl
mov
jmp
adc
add
sahf
xchg
out
in
add
popfw
or
mov
lret
add
sub
mov
mov
push
lret
pop
pop
sahf
add
not
jecxz
add
test
xor
add
push
cmc
push
adc
int3
ja
add
icebp
adc
pop
add
add
and
inc
in
ss
or
push
enter
fs
pop
in
movsl
add
push
mov
sbb
icebp
add
jmp
leave
mov
sti
lock
push
aas
out
add
sub
mov
das
jns
pop
mov
sar
cld
arpl
mov
inc
negb
sub
ret
cmp
fcomps
jnp
adc
sub
cmc
jp
pop
mov
xorl
mov
cmp
mov
push
addl
sub
pop
popa
xor
ljmp
add
inc
pop
test
sahf
pop
jae
jbe
xchg
fcos
push
sbb
jnp
jo
xchg
rcl
mov
mov
nop
and
sbb
push
add
mov
sbb
mov
jbe
subb
mov
clc
mov
lea
mov
or
mov
enter
mov
mov
mov
add
les
cmp
in
bound
inc
loopne
cwtl
mov
jns
inc
cmp
jo
xchg
leavew
dec
mov
or
add
shlb
mov
mov
jg
jmp
int3
and
pop
ret
aam
push
fwait
addb
cmpl
je
adc
sub
shll
out
cmp
and
pusha
inc
sub
sbb
jmp
cmc
sahf
mov
push
mov
dec
or
mov
and
ja
and
lds
int
clc
fwait
mov
dec
mov
add
lods
lahf
leave
or
aaa
rcll
pop
cmp
stos
orb
xchg
cmp
sbb
scas
push
mov
sbbb
testl
out
mov
adc
jge
outsl
rol
jo
js
fstpl
add
xchg
ret
push
es
call
add
sti
sbb
inc
add
adc
loop
cmpsl
outsb
add
lea
in
dec
mov
add
test
dec
mov
out
aaa
outsb
lds
add
pop
out
xor
jnp
push
mov
fwait
sub
pusha
mov
push
and
sbb
in
fcmove
addb
sub
in
xor
mov
lea
imul
add
xchg
xchg
inc
mov
and
inc
cltd
add
stos
cld
mov
push
mov
sub
popa
jns
and
shrl
test
hlt
pop
pop
clc
sub
or
sbb
dec
sbbb
adc
cmpsl
jae
in
xor
jecxz
xacquire
mov
add
inc
mov
and
push
jo
mov
jnp
mov
and
hlt
out
or
xchg
in
and
pusha
mov
stos
or
lock
ja
push
loopne
dec
fbld
adc
mov
test
jo
ja
cmp
add
mov
movsl
pop
in
ds
psubusb
mov
adc
add
pop
hlt
das
jne
xchg
roll
lcall
push
jl
add
mov
push
fmuls
add
mov
push
push
movl
cmp
cmp
icebp
xor
mov
xor
shr
push
jo
mov
mov
bound
test
lret
daa
add
xchg
js
pop
push
jns
sbb
jno
cmp
pusha
mov
fs
add
add
and
add
aas
mov
sub
out
push
cmp
add
xchg
fbstp
add
arpl
mov
mov
add
dec
adc
mov
adcb
sbb
mov
mov
jp
push
xor
push
push
jo
and
int
iret
cli
push
add
push
shrl
inc
out
enter
pop
xchg
adcl
add
fwait
scas
popa
add
add
fsubs
fcomps
jbe
sub
jno
push
mov
inc
addb
enter
mov
dec
test
jp
subb
je
dec
cmp
adc
js
mov
test
ss
faddl
dec
outsl
dec
dec
add
inc
fldenv
push
inc
repz
les
cmc
add
sbb
mov
add
jecxz
dec
mov
fiadds
add
cmp
mov
je
add
popa
ror
adc
adc
cmc
aaa
mov
xchg
add
xlat
loopne
sbb
pop
pushl
aas
mov
sub
gs
push
out
inc
imul
mov
jnp
lret
jo
push
lds
add
sub
xchg
into
lret
rolb
es
add
inc
xor
push
dec
mov
add
adc
mov
inc
fcom
stos
push
jne
add
mov
cmpsl
sbb
sti
add
stos
ds
mov
mov
or
out
nop
mov
add
adc
xchg
inc
inc
jmp
add
push
scas
or
xchg
add
mov
add
jns
xor
sub
sbb
outsb
add
pusha
test
add
lret
jns
into
xor
add
cltd
xchg
push
sti
mov
cli
imul
insl
hlt
inc
add
insb
mov
mov
mov
xlat
enter
push
add
push
cmpsb
mov
inc
hlt
jns
cmp
adc
push
rorl
add
aaa
out
loope
lock
pushl
imull
aam
imul
mov
add
scas
or
call
shll
mov
add
inc
sbb
mov
mov
add
in
or
xor
das
pop
lods
and
cmp
loopne
pushf
add
int3
pusha
xchg
roll
pop
dec
mov
int
mov
mov
or
sbb
out
aad
lods
pop
in
rorl
add
sub
pop
push
aas
pop
mov
in
dec
jo
add
movsl
call
adc
sbb
cmp
or
dec
jmp
sbb
add
into
jmp
add
sbb
dec
cmp
push
ds
add
aaa
xchg
iret
ret
adc
push
sti
test
mov
sbbb
call
sub
shlb
test
xor
add
jmp
push
add
xchg
ss
push
sub
sarl
mov
add
push
inc
jl
jne
call
and
addb
add
mov
push
sbb
ficoms
into
notb
jne
add
pop
outsl
loopne
addl
xlat
sahf
xchg
mul
cmc
lods
add
cmp
adc
icebp
cmp
incb
inc
stos
add
mov
push
test
test
clc
or
jge
insl
add
das
push
mov
xchg
jno
inc
cs
add
outsb
int
or
xchg
xor
fsubrs
testl
xchg
inc
aas
int3
mov
fnstenv
xchg
add
sti
and
sub
fcompl
xchg
addr16
popa
adc
lock
testb
std
mov
ds
fiaddl
out
dec
enter
or
gs
push
xchg
pop
dec
inc
mov
inc
inc
call
cmpb
loopne
mov
mov
scas
fnstcw
in
cmpsb
mov
xchg
mov
outsl
pop
inc
shl
xchg
std
adcb
sub
leave
and
or
pop
jae
xor
mov
push
movsl
cli
add
mov
dec
icebp
add
mov
mov
bound
and
notb
add
cltd
ljmp
jl
adcl
adc
cmp
iret
test
cmpsl
shrl
stos
mov
and
rolb
add
xchg
cmpsl
in
adc
dec
add
pop
mov
les
pop
push
cmp
std
add
cltd
lahf
pop
lea
loopne
psrlw
mov
fstpt
sti
cmpsb
dec
mov
jnp
push
rol
int3
pop
addb
nop
push
fsubr
add
stos
mov
pop
cmp
test
jl
xor
jne
add
inc
jnp
adc
lret
add
sub
inc
lods
jmp
mov
inc
add
pushf
add
das
cmp
scas
rcl
scas
cmp
jmp
xchg
xor
lret
scas
add
std
movsb
popa
ffree
les
pop
xchg
and
popf
adc
and
insb
dec
lods
or
add
fildl
iret
and
scas
nop
orb
stos
jp
gs
jle
add
les
xchg
xor
fisttpl
inc
imul
aas
leave
mov
add
jle
pop
xchg
and
add
cwtl
xor
mov
or
mov
inc
push
mov
add
add
push
sbb
sbbb
cmp
push
push
loop
scas
addr16
jecxz
inc
mov
lock
stc
pop
sbb
push
mov
add
iret
or
adc
push
add
lock
stc
and
cmp
int
rol
in
mov
push
or
aam
and
lods
sub
adc
lret
xchg
pop
jbe
ret
add
loopne
jae
adc
pushf
mov
lret
lcall
jo
push
out
push
adc
add
fxch
and
or
sub
sbb
add
stos
adc
and
add
rorl
popf
sbb
sbb
add
dec
insl
cmp
push
add
or
popf
pop
add
mov
sub
mov
das
add
dec
or
sbb
pop
lock
pop
xor
xor
add
insb
adc
or
into
clc
xchg
push
push
mov
inc
sbb
out
or
jo
fwait
clc
push
sarb
xor
mov
rorl
lods
xchg
test
lret
leave
mov
sahf
cwtl
jb
mov
leave
scas
or
dec
mov
sub
outsb
add
sbb
mov
add
mov
add
dec
stos
orb
sbb
sahf
sbb
push
in
jbe
xorb
xor
enter
add
ljmp
xchg
add
push
sbb
ss
sahf
test
add
subl
sbb
js
pop
cmc
enter
cmp
add
addb
inc
mov
loopne
aas
sbbb
adc
dec
add
hlt
add
xchg
dec
push
sub
mov
sub
add
jb
int
subl
addr16
sarb
js
xchg
or
cwtl
inc
jno
cltd
or
add
pop
in
lcall
out
jb
cmp
xlat
testl
mov
cmpsb
arpl
punpckhwd
repz
nop
sbbb
adc
push
cwtl
cltd
add
jne
lcall
add
jmp
jno
jp
gs
add
xchg
dec
hlt
mov
sub
or
jns
add
fisubs
xor
clc
push
add
lds
jl
leave
jle
jbe
xchg
add
xor
sub
imul
add
adc
out
loopne
arpl
in
pusha
dec
ljmp
lods
fmull
add
fsubs
in
mov
xchg
aas
add
mov
mov
sbb
add
add
add
xor
push
out
jmp
rcr
jo
data16
pop
add
hlt
rorb
jne
sbb
push
movsbl
add
xlat
dec
push
loop
out
dec
mov
adc
pop
jg
inc
cmp
nop
aam
inc
roll
mov
pop
std
ds
xchg
pop
push
mov
addr16
sbb
xlat
jo
push
add
loope
mov
and
loopne
add
xchg
leave
push
mov
ljmp
aas
xor
loopne
add
ret
leave
out
in
add
mov
cmp
in
xchg
mov
out
adc
jno
cmp
rcrb
call
xor
and
fiaddl
xchg
cmp
movsl
pop
inc
gs
inc
xor
add
mov
pop
andb
push
ljmp
out
addl
in
subl
add
fcmovb
push
mov
je
or
subb
cs
mov
cmpsl
cmp
testl
popf
std
jg
inc
inc
jb
add
adc
sub
push
sbb
repnz
add
jno
sbb
shll
add
ret
ret
dec
loop
add
cmpsb
cmc
pop
xchg
popa
inc
add
aaa
jbe
sahf
or
shll
enter
jne
add
cwtl
pop
add
push
jmp
jns
addb
xor
sub
aaa
cmp
cmp
cmc
xorb
cmp
mov
jp
ds
cmp
ja
and
add
dec
repnz
inc
add
mov
ficompl
movsb
and
ror
add
fwait
mov
mov
ret
inc
dec
add
add
inc
sub
mov
inc
mov
dec
and
scas
cli
outsb
jg
cmpb
adc
push
mov
mov
fiadds
mov
mov
pop
in
add
jl
jle
jnp
add
dec
addr16
je
push
mov
mul
pusha
sarb
mov
fstpt
dec
mov
test
add
push
cmp
dec
insb
xlat
sbb
add
gs
in
cltd
xchg
jae
add
inc
loopne
daa
mov
pop
add
enter
mov
push
icebp
lahf
cmpsb
mov
mov
add
add
push
cli
addb
or
fs
adc
je
loope
out
push
pop
add
das
scas
in
test
adc
adc
xor
mov
pusha
xor
xor
incl
insb
xchg
fldl
sbb
aam
mov
inc
notb
enter
pop
add
in
adc
jb
add
push
fisubrl
loop
cmp
in
xchg
leave
xor
mov
inc
nop
inc
xchg
ljmp
inc
bnd
mov
int
mov
and
add
sbb
or
inc
outsl
out
filds
mov
mov
pop
nop
es
aad
je
inc
or
lock
push
xchg
jmp
inc
mov
fimull
mov
out
push
pop
xor
mov
cmp
cmp
imul
inc
add
mov
cmpl
lock
add
aas
andb
cmpsb
pop
and
cmc
sti
sub
pop
xchg
push
sbb
fwait
sahf
cmp
dec
adc
mov
mov
movsl
add
mov
aas
push
das
pop
sub
call
iret
mov
pop
into
push
test
sbb
test
add
push
mov
cs
add
and
mul
push
push
sbb
sub
adc
mov
add
pop
adc
mov
mov
push
cltd
dec
lret
stos
test
add
mov
fwait
pop
jmp
and
sub
sbb
sbb
clc
sbb
add
jb
or
mov
add
cmp
hlt
dec
mov
fsubs
mov
push
push
fucom
add
xor
fiaddl
mov
mov
call
or
je
cld
daa
add
fldenv
inc
add
xchg
int3
xor
sbb
mov
outsb
inc
lds
jmp
sbb
shl
add
mov
daa
push
les
add
dec
icebp
fdivrl
clc
int3
xchg
imul
pop
pop
lods
mov
dec
imull
sub
scas
sahf
adc
sbb
rcr
and
ret
push
lahf
dec
mov
ljmp
add
imul
add
in
int3
mov
mov
cmpsl
clc
fadds
loop
cmp
add
mov
mov
and
jecxz
bound
inc
lea
lcall
mov
lahf
cmc
pop
add
add
and
dec
in
add
sti
in
pusha
mov
pop
inc
mov
pop
push
cld
jb
fimull
add
mov
rolb
cmp
lock
jmp
cmp
inc
add
aad
add
clc
call
xor
xlat
cmpsb
jns,pn
fucomip
push
stc
in
scas
cld
jmp
movsb
sub
mov
cmp
andb
sarl
popl
lock
pop
sub
inc
jg
popa
add
push
and
test
nop
add
cwtl
add
enter
stos
inc
add
push
stos
jo
cmp
jns
add
out
mov
jae
cmp
leavew
cld
push
icebp
add
adc
popa
jecxz
loope
push
inc
jae
add
add
test
sub
jo
pop
fsubl
sbb
push
add
out
dec
ljmp
add
pop
sbb
sbb
or
sub
out
adc
cmp
adc
cltd
shrb
pop
scas
jnp
add
in
pop
or
daa
push
imul
jl
and
mov
jmp
mov
add
scas
cmp
stos
ret
jo
call
cmp
and
data16
test
jge
rolb
nop
mov
out
in
add
fwait
cmp
in
xlat
jns
inc
dec
mov
mov
add
subb
inc
idivl
lock
xor
jecxz
and
cltd
jns
adc
repnz
mov
or
addr16
hlt
mov
xchg
popf
bound
ficoms
pop
std
cmp
clc
or
xchg
add
push
xor
sbb
lods
add
loopne
add
ss
pop
pop
xor
fwait
jno
aaa
lea
ret
push
rorb
lret
stos
in
push
sub
test
inc
std
mov
mov
mov
mov
adc
sub
sub
fstps
in
outsb
pop
inc
ret
mov
jnp
mov
ja
xor
mov
cli
data16
orl
mov
out
sub
ret
rep
cmc
add
cli
shlb
decl
sbb
push
pop
jp
stos
mov
xchg
arpl
push
mov
add
xor
sub
pop
dec
xor
int3
fwait
mov
test
cmp
dec
cltd
inc
add
bnd
sub
jo
sub
imul
inc
cwtl
imul
repnz
pushf
aam
add
aad
fdivr
xchg
add
rorb
lods
mov
jge
add
sub
and
loopne
add
cmp
mov
lcall
je
mov
or
cmp
xchg
jno
add
xchg
ret
pop
add
jo
jmp
push
inc
xchg
mov
lcall
dec
fcompl
add
aam
les
xchg
adc
cmpsb
fstpl
push
movsb
ret
pop
mov
or
mov
add
clc
mov
dec
icebp
int3
add
sub
and
int
dec
stos
into
js
jnp
enter
je
mov
lcall
and
repz
sbb
sbb
divb
xchg
and
mov
int3
add
bound
inc
movb
sbb
mov
insb
sarl
mov
addr16
cmp
and
xor
shrb
fsubl
rclb
add
cltd
jecxz
push
test
sbb
lret
stc
arpl
sub
int3
gs
js
mov
push
adc
push
pop
add
test
inc
add
call
lret
into
adc
lret
add
jge
mov
pshufw
je
push
scas
pop
sub
add
xor
mov
sbb
push
jecxz
inc
xor
sub
int
in
push
push
das
mov
shrb
or
aam
lds
js
insb
sti
out
or
fldt
dec
mov
pextrw
jl
scas
xchg
push
insb
xchg
outsl
loop
cmp
push
xchg
inc
aas
cmpsl
or
data16
fstpl
cs
pop
iret
imul
and
mov
inc
shll
jnp
add
xchg
ret
popa
inc
jns
shlb
gs
repnz
add
mov
jno
rclb
icebp
push
xor
addr16
jnp
jl
jae
adc
xchg
pop
add
mov
enter
cmp
mov
or
test
stc
sbb
mov
add
test
adc
pusha
add
aas
outsb
jp
xchg
test
ret
add
out
sarl
test
inc
mov
enter
into
mov
xchg
jl
test
or
push
sbb
push
test
add
add
add
xchg
dec
mov
hlt
mov
mov
and
jne
cwtl
push
mov
test
mov
into
sbb
cmp
nop
sbb
jns
xchg
xor
clc
icebp
sbb
sbb
fsts
roll
or
icebp
xor
cmc
push
dec
sbb
sub
or
mov
or
popf
orl
xchg
jecxz
lock
cmpb
movsl
mov
jae
scas
pop
xor
mov
and
dec
pop
int3
fidivl
je
nop
fdivrs
and
sbb
xchg
mov
push
xchg
call
sbb
mov
and
or
mov
inc
imul
sub
sbb
push
jne
in
or
mov
xchg
sub
push
xchg
rclb
xchg
fisttpll
add
movsb
sar
pop
and
xor
xchg
inc
mov
sbb
jnp
cmp
xor
or
push
call
cmp
pop
les
sbb
add
mov
and
addl
stc
sbb
and
lret
sub
xor
orb
test
pop
mov
daa
adc
pop
popa
lock
sqrtps
sub
mov
out
add
xor
test
xchg
jo
dec
adc
jae
call
pop
nop
sbb
fisubs
ss
xor
add
cmp
repz
js
inc
xor
ja
adc
push
add
inc
mov
imul
stos
adc
xchg
dec
sbb
xor
cmp
test
jl
jae
sbb
adc
lock
push
fdivrs
fsubl
cmp
dec
das
mov
lret
mov
add
add
aas
mov
lock
les
pushf
add
mov
movsl
dec
xor
pop
lea
in
test
roll
test
jb
adc
movsb
adc
lcall
mov
sbb
dec
adc
add
movsl
push
int3
aas
xor
insl
mov
sub
push
pop
push
sahf
leave
mov
fstl
shll
jae
add
and
push
std
dec
add
sub
mov
lock
cltd
mov
cld
jge
push
mov
cmp
data16
adc
ss
sbb
inc
je
add
xchg
js
bound
icebp
push
mov
xchg
inc
mov
and
mov
out
les
iret
jmp
mov
lods
bound
add
ds
hlt
inc
inc
and
add
pop
fmul
cs
mov
sbb
sarl
dec
jbe
sub
push
into
or
cmp
fimuls
inc
test
in
push
push
imul
cmc
mov
xchg
add
insb
pop
add
dec
in
faddl
ss
in
cmp
movsl
fsubs
mov
jp
push
lahf
add
stc
fsubl
lods
inc
fs
adc
dec
xor
outsb
inc
popa
add
pop
sub
cs
add
pop
filds
mov
lock
iret
dec
mov
stos
cmp
movsl
and
inc
aad
inc
stos
stc
lea
hlt
repnz
mov
mov
mov
sub
add
pop
sub
and
mov
mov
orb
pop
shr
add
cmp
dec
xchg
pop
sub
scas
xchg
js
adcb
sbb
push
inc
sub
lods
test
adc
add
mov
mov
xor
add
leave
int3
dec
enter
cmpl
cmp
add
pop
popf
js
pop
lods
cmp
fimuls
inc
xchg
cs
or
jo
stos
inc
mov
pop
in
push
imull
loopne
jns
push
or
in
jecxz
xor
xlat
pop
push
sub
add
js
add
add
xor
and
xchg
add
sbb
mov
push
test
leave
or
dec
add
das
in
xchg
in
xchg
adc
stos
inc
movsb
adc
stos
stc
mov
mov
leave
add
mov
in
inc
stos
les
imul
or
jl
das
fsubrl
cli
or
mov
ret
or
popa
push
arpl
push
fwait
adc
add
clc
call
inc
mov
sbb
inc
insb
loop
adc
sub
cmp
pop
testl
ja
push
jmp
pop
cltd
hlt
xchg
int3
xor
jae
mov
stos
xchg
les
inc
cmp
rolb
hlt
outsb
push
mov
sbb
mov
pop
adc
inc
cmp
sbb
add
repz
adc
fcmovnu
mov
outsl
movsb
xor
jle
in
pushf
rcll
and
jmp
fldl
or
mov
add
into
hlt
or
pop
out
call
push
idivl
pop
jo
rclb
adc
idivb
aaa
pop
jnp
pop
mov
or
xchg
inc
mov
add
je
cs
out
jle
sti
dec
daa
in
insl
xor
add
push
cmc
jecxz
jbe
in
inc
jne
in
xchg
movsb
and
xchg
adc
xchg
jl
sub
popa
push
xor
mov
test
and
subb
and
cmp
addl
ret
loopne
adc
hlt
aaa
push
js
dec
lods
adcb
cmp
mov
daa
push
or
dec
loopne
jle
jge
add
rcl
pop
xor
inc
jae
inc
iret
and
sub
sub
ret
pop
adc
stos
orb
add
adc
enter
test
xchg
cmp
mov
pop
rcrb
mov
sub
cmp
mov
adc
pusha
and
or
inc
xorb
nop
js
sbb
cmp
mov
test
xor
jnp
clc
leave
cmp
push
addb
sbb
call
orb
movsb
lock
lahf
xor
jnp
push
push
and
cs
push
adc
push
lods
adc
sbb
pop
dec
ret
push
adc
enter
repnz
dec
sub
add
sbb
or
xor
and
xchg
lods
adc
nop
cwtl
push
mov
or
cmpsb
mov
out
enter
fs
sub
inc
add
push
movsb
jg
add
cmpsb
mov
xor
push
ret
xchg
insb
jb
xor
mov
add
inc
jge
and
add
jle
push
lock
and
xor
rcrl
ss
jbe
clc
xor
cmp
pushf
mov
xlat
add
jb,pn
sub
test
mov
sbb
cld
enter
cmp
push
iret
add
cld
xchg
je
xchg
inc
aam
and
jns
popf
mov
addr16
imul
cmp
add
adc
stos
cmp
repz
mov
rcll
mov
imul
jbe
adc
inc
and
test
lcall
push
and
addl
sbb
and
cmpxchg
adc
dec
imul
shlb
sar
add
mov
cld
out
push
sub
call
data16
mov
insl
inc
cmc
daa
stos
jnp
pushf
imul
add
dec
inc
sahf
mov
and
mov
outsb
and
and
pop
in
xchg
int3
test
push
and
out
jno
add
adc
les
pushf
loopne
push
fsub
jb
popf
push
xchg
popa
jecxz
mov
push
mov
push
test
push
addr16
repnz
push
int
cmp
mov
bound
cmp
sub
jno
adc
pop
cld
or
push
js
cmp
sahf
aas
popf
outsl
in
or
sbb
incl
jmp
cmp
xchg
jns
inc
sbb
int
mov
jnp
mov
push
mov
imul
jl
mov
push
loop
add
add
mov
ret
jle
sahf
add
les
lods
int3
lods
push
xchg
loopne
add
add
dec
and
es
loopne
xchg
sbb
les
insb
movsb
mov
enter
pop
add
dec
icebp
xor
cmp
ss
pop
adcb
out
add
out
sahf
lock
add
ret
decl
arpl
test
mov
add
nop
pop
jmp
je
cltd
mov
clc
test
mov
popa
test
xor
inc
add
nop
sti
or
ljmp
aam
inc
in
adc
out
and
lret
push
xor
pop
imul
ja
sbb
or
xor
mov
addl
add
or
shl
xlat
movsb
lcall
cli
cmp
les
test
pop
pop
and
push
fcom
cmp
xor
xchg
dec
add
mov
adc
or
lods
add
leave
arpl
add
jle
jnp
push
out
add
cmp
ficoms
ja
ret
fbld
dec
add
adc
jl
outsb
push
jns
inc
scas
stos
pop
adc
jmp
mov
repz
leave
mov
loopne
testl
push
xor
fisubs
sub
loopne
xchg
dec
or
push
add
jae
adc
dec
inc
aad
and
int3
sub
xor
pop
clc
or
movb
mov
xor
outsb
mov
mov
adc
cli
add
popf
sti
fdivrl
roll
sbb
repnz
mov
mov
cmp
dec
repz
mov
fmull
test
dec
les
inc
fmul
xchg
mov
addr16
push
ret
sahf
cmp
inc
or
aaa
rcl
enter
rcrl
in
or
adc
rcrb
and
jnp
add
outsl
adc
add
sub
inc
mov
idivb
dec
or
faddl
add
sahf
inc
xlat
cmp
and
loopne
pop
mov
dec
xor
xchg
mov
jge
out
push
pop
stos
push
mov
add
faddl
js
add
xor
fcmove
xor
and
inc
mov
cmp
pop
pop
jl
dec
shrb
and
test
lahf
dec
mov
cmp
in
imul
sbb
push
loope
rclb
add
and
insl
xor
jecxz
rorb
push
int3
call
push
inc
cmp
and
test
insb
add
imul
cmp
lea
sahf
xor
ljmp
sbb
and
in
test
adc
mov
dec
scas
mov
sti
dec
jg
xor
jg
adc
xchg
lods
rolb
cmc
dec
jmp
jo
je
popa
and
das
add
loop
sbb
aad
sbb
mov
mov
int
sub
and
lods
je
pop
jb
mov
inc
outsb
mov
jne
call
js
mov
mov
rcrl
test
jmp
rolb
and
sub
sbb
out
xor
sbb
jmp
enter
add
jae
jo
in
push
into
push
xchg
pop
aaa
xor
inc
inc
aam
addb
xchg
push
adc
dec
xchg
fmull
pusha
jb
xor
mov
arpl
cmpb
loopne
mov
xchg
push
int3
add
pop
inc
and
test
pusha
std
inc
adc
inc
add
rcrl
movsb
adc
enter
dec
mov
mov
movsl
and
push
les
sahf
mov
push
les
jo
repnz
sti
add
rorl
aas
and
pusha
shrb
pop
sbb
cltd
outsl
fcmovnb
xchg
test
dec
inc
fs
inc
mov
add
inc
xchg
lahf
loopne
clc
dec
jnp
mov
addb
add
push
pop
dec
jns
hlt
dec
dec
lds
or
sbb
xchg
test
lods
test
xchg
pusha
fiadds
mov
rcl
jg
pop
insl
inc
jbe
rclb
nop
xor
andl
cld
bnd
das
cwtl
nop
lods
jl
ror
inc
outsl
in
addr16
test
and
or
in
jne
inc
js
scas
mov
jecxz
or
sbb
xor
add
jg
in
sub
dec
fs
scas
inc
fldcw
into
push
mov
add
xchg
div
jns
into
cmpsb
mov
addr16
das
std
ret
sub
xchg
insb
lahf
ror
rolb
add
insb
push
mov
mov
fmul
loop
jle
stos
adc
jnp
and
stc
add
into
and
xor
in
aas
int3
je
subb
das
call
loopne
in
cmp
dec
sbb
ret
filds
mov
jbe
mov
imul
nop
mov
mov
das
mov
dec
and
imul
sub
mov
ret
orl
jne
cmc
cmp
aam
xor
inc
and
cltd
rclb
add
movsl
ja
pop
push
jns
jb
sbb
inc
push
mov
in
mov
pop
mov
add
ds
sbb
xor
or
add
mov
cli
sub
xor
mov
pop
xchg
mov
pop
push
gs
loopne
jns
js
mov
adc
loop
andb
lret
jecxz
add
dec
imul
insl
add
sbbl
hlt
sub
popf
xorb
int3
scas
mov
ljmp
adc
dec
add
inc
xchg
adc
ja
mov
sbb
pusha
push
mov
or
add
insl
ds
push
mov
das
lods
insb
in
fldl
js
jecxz
or
sbb
shl
adc
mov
clc
sbb
jb
inc
outsl
les
pop
push
cmp
push
sarb
pop
test
pusha
sub
std
sti
mov
xchg
les
xlat
ljmp
jp
or
pop
sub
jo
adc
mov
sbb
cmp
fnstenv
rcrl
add
mov
add
mov
inc
in
inc
add
out
nop
fisubrs
test
inc
test
cmp
mov
cld
clc
and
jp
cmp
inc
mov
mov
js
mov
into
jns
fcoml
dec
sbb
cmp
xchg
mov
pop
mov
orb
jge
testb
notl
or
in
das
out
cwtl
add
fstl
mov
repz
pusha
sbb
ja
rol
hlt
lret
add
paddsb
push
orl
jo
cmpsb
call
mov
test
and
cmp
inc
pusha
scas
stc
sbb
jl
in
xor
inc
mov
fwait
adcb
cmp
and
scas
mov
shlb
sub
and
in
push
jl
dec
mov
mov
loopne
adc
bndldx
add
sub
xchg
inc
js
dec
adc
xchg
cmp
inc
and
nop
jg
out
int3
enter
dec
jo
icebp
int3
or
loopne
in
mov
dec
inc
inc
jg
bound
test
and
shlb
shrb
xor
cmp
test
and
js
dec
jae
xor
test
cmp
pop
shlb
add
inc
pop
in
xchg
jbe
push
pop
outsb
or
and
ret
add
jns
js
pop
add
mov
adc
pop
add
sbb
adc
sbb
in
stc
or
mov
adc
dec
rcl
daa
dec
cs
cwtl
and
xchg
cmp
movl
add
sbb
add
jne
mov
js
cs
push
lret
inc
add
push
popa
pop
add
aaa
mov
push
loopne
lea
sti
and
imul
andb
int
mov
add
sbb
jle
addr16
pusha
and
xor
cmp
add
mov
je
adc
addl
xchg
pop
imul
inc
add
std
repnz
and
or
fdivp
mov
cmp
add
mov
rclb
add
mov
lods
xchg
popf
dec
in
or
mov
into
gs
mov
dec
push
mov
push
mov
jo
mov
jne
add
sub
ficomps
loopne
sti
inc
push
cld
push
in
xchg
dec
js
inc
mov
cs
xchg
push
and
pop
add
add
sti
mov
pusha
movlps
loop
cmp
pushf
flds
daa
fs
lret
nop
rorb
test
in
stos
add
adc
sbb
mov
fistps
jle
jmp
add
mov
out
cs
lods
pop
fistl
push
js
fsubl
addl
dec
mov
xor
push
mov
push
dec
mov
inc
jo
dec
rcrb
push
xor
movsl
hlt
xchg
andl
jecxz
movsl
and
mov
adcb
add
dec
shl
dec
xchg
and
aad
push
das
sub
dec
movsb
adcb
outsl
dec
andl
leave
imul
sahf
pop
xor
mov
add
pop
add
imul
outsl
xchg
add
mov
adc
push
adc
pop
and
sub
loope
sbb
pop
lret
stos
lock
jl
cli
inc
lea
test
and
lahf
pusha
das
jb
pop
mov
rolb
xor
fdecstp
iret
imul
scas
add
inc
inc
sbb
je
pop
add
pop
add
adc
add
dec
sbb
jmp
insl
jmp
adc
fisttpl
sbb
repnz
maxps
cmp
stos
sbb
dec
scas
push
pushf
lds
push
in
mov
lret
jle
add
xchg
pushf
add
fstp
mov
int3
jle,pn
mov
add
fwait
jno
add
xor
enter
sbb
adc
sub
add
push
push
out
inc
clc
cmpsl
xchg
inc
pushf
pop
add
adc
arpl
inc
mov
pop
xchg
sbb
mov
out
sbb
pop
adc
aas
sbb
lcall
jg
fs
cmpsb
shrl
adc
dec
rorb
loope,pn
add
into
cli
jmp
call
push
adcb
mov
dec
xorl
lea
imul
mov
bound
in
push
push
out
lahf
xchg
lret
sbb
xor
or
nop
es
mov
fiaddl
add
pusha
fs
jl
push
in
rep
clc
add
and
add
mov
push
jnp
xchg
out
lret
add
stos
push
lea
sti
pushf
xchg
pop
jmp
sub
gs
add
pop
int3
pop
xchg
xor
and
xchg
dec
int
inc
fs
add
add
and
xor
push
adcb
ret
xorl
lods
sahf
xor
and
int3
cmp
push
xor
and
or
sbb
jnp
mov
or
iret
push
lods
lock
inc
pop
adcb
enter
sbb
and
jle
add
das
jns
adc
mov
jno
imul
add
adcb
cmp
cmp
fiaddl
xchg
stos
inc
test
imul
add
insl
and
add
fsts
jg
xchg
aas
and
adc
dec
or
scas
stc
inc
pusha
add
push
loopne
nop
aaa
rclb
push
inc
push
iret
jns
adc
add
or
adc
xchg
or
cmp
arpl
mov
lret
cmp
lea
loopne
hlt
scas
sbbb
std
je
xchg
sub
adc
pop
inc
add
jmp
or
mov
aaa
nop
mov
jne
sbb
inc
leave
repnz
out
xor
pop
pusha
cltd
sub
push
leave
push
sub
xor
jns
mov
fsubl
mov
push
add
cmp
xchg
mov
add
xchg
mov
fadds
add
movsb
lcall
in
inc
cltd
or
and
call
leave
sub
or
push
pop
lret
sbb
jl
testl
mov
dec
xchg
push
jb
xchg
enter
fcoml
push
mov
int3
cltd
mov
pusha
xchg
loop
fsts
and
xor
xor
xor
jge
add
subb
mov
aam
and
mov
cwtl
and
push
sbb
in
hlt
adc
imul
xchg
dec
dec
inc
sbb
mov
mov
jp
hlt
sahf
dec
sbb
cmp
insl
push
addl
pop
out
pop
sbb
pusha
divl
cs
push
lea
inc
pop
addr16
cli
lahf
les
adc
adc
pop
bound
and
ss
push
add
sbb
mov
push
add
cmp
movsb
cwtl
fs
das
xchg
jg
xor
pop
cwtl
add
std
iret
or
push
and
lods
xor
pop
dec
repnz
push
push
rcrl
pop
or
andb
test
mov
mov
sub
das
add
ss
inc
sub
mov
and
inc
cmp
lret
sub
cmc
mov
xor
mov
xchg
das
cltd
or
outsb
call
push
sub
mov
test
in
xchg
lods
add
test
mov
fnsave
shl
add
call
xchg
sub
push
hlt
and
jb
add
iret
xor
pop
andl
mov
mov
loopne
xchg
adc
scas
xlat
cwtl
ret
addr16
or
das
sbb
push
sbb
pop
sub
and
and
pop
fsts
adc
int3
xchg
insl
nop
gs
pushf
pop
dec
dec
test
ljmp
pop
or
add
push
sub
xchg
fsubrl
cwtl
fcoms
aas
popf
test
pop
mov
and
sbb
push
fldenv
int3
add
jb
rdmsr
fdivrl
sub
dec
or
mov
loope
rcr
test
rorb
test
xor
cmp
pop
dec
cmp
lcall
jecxz
dec
addl
and
or
sbb
jmp
xchg
add
mov
mov
mov
xor
dec
in
push
sub
mov
add
xchg
push
add
cmp
add
imul
mov
dec
mov
add
xchg
pop
aas
arpl
outsl
dec
test
sub
inc
shll
add
mov
jno
jg
sbb
sbb
cmp
sbb
addl
fdiv
jno
cmpsb
pushf
sarl
inc
or
mov
nop
mov
push
dec
sbb
sub
dec
and
fcmovnu
aam
and
repz
imulb
xor
pushf
mov
xor
jno
in
add
sbb
adc
mov
mov
xchg
and
sbb
std
aas
daa
in
and
cmpsl
sti
add
test
pop
mov
lock
sbb
inc
mov
mov
daa
repz
pushf
cmc
movsb
cmp
mov
fmul
mov
les
jo
dec
mov
dec
pop
leave
mov
xor
jns
popa
and
sbbb
imul
adc
fildl
push
dec
lods
xchg
jecxz
mov
pop
push
jo
add
ficoml
xor
jl
add
mov
add
sub
adc
inc
xchg
lock
add
and
mov
xor
aad
or
pop
add
push
sbb
xor
outsb
push
cld
stos
aad
icebp
push
lock
pusha
movsl
mov
pop
xchg
cmpl
in
inc
lret
and
adc
dec
pusha
xor
cwtl
pop
adc
out
loopne
jl
sbb
test
das
insb
into
fmull
loopne
cmpb
ljmp
mov
repnz
jge
cmp
pop
sarb
xor
xchg
mov
es
scas
rolb
call
rclb
sahf
dec
and
pop
addb
and
in
fdivl
mov
xchg
popf
cli
shll
or
xchg
fistps
lock
add
mulb
cli
pusha
enter
sbb
pop
outsb
cmp
sbb
cwtl
xchg
repz
cmc
adc
outsb
and
add
mov
fsubrl
lea
mov
push
outsb
mov
and
enter
mov
fcoml
fldt
add
inc
dec
and
pusha
insl
adcb
sbb
mov
mov
imull
jmp
hlt
push
xchg
push
rolb
add
fsubrs
cli
lods
pop
hlt
cmp
jae
sub
stc
or
ljmp
add
imul
ret
loope
add
adc
cld
pop
push
popa
adc
test
jno
jne
and
out
pusha
cmp
adc
jae
test
adc
out
pusha
pop
outsb
cmp
xchg
add
rcrl
xchg
in
sarb
or
push
dec
add
mov
addl
add
adc
add
shll
int
and
push
loopne
stos
lret
popa
das
jnp
inc
iret
mov
int3
pop
arpl
dec
pop
test
pop
push
push
mov
cmp
pop
sbbl
ljmp
fs
or
lods
add
popf
addl
cltd
add
xchg
pop
jmp
int
hlt
add
xchg
pushf
xor
stc
mov
push
jle
loope
nop
movsb
shll
repnz
xchg
pop
shll
sbb
jne
xchg
je
mov
add
adc
out
pop
arpl
loopne
add
mov
gs
pop
aad
push
inc
add
mov
adc
adc
jnp,pn
mov
incl
out
int3
imul
pop
add
mov
sbb
mov
fs
and
sbb
jne
addl
push
add
sub
int3
inc
lret
add
xorl
cmp
dec
ljmp
ror
pusha
and
mov
arpl
sbb
and
rolb
mov
sub
xor
repnz
xchg
adc
mov
cwtl
or
add
sub
sahf
bound
add
add
sub
add
imul
xor
jg
xor
push
mov
mov
in
push
sub
test
scas
add
add
mov
and
mov
mov
sbbl
outsl
es
pop
sub
sbb
sbb
fldenv
fs
sbb
push
jge
test
shlb
cs
dec
and
aad
mov
xchg
je
and
inc
insb
or
ds
es
in
popa
pop
add
push
and
or
mov
inc
add
add
popf
mov
or
xchg
dec
mov
adc
mov
jnp
insb
mov
cs
inc
inc
or
in
ds
cmp
ja
pusha
test
mov
inc
push
rcrb
fwait
sbb
mov
insl
inc
js
push
xchg
ds
cwtl
or
int
mov
adc
pop
xor
and
fldcw
and
dec
fadds
cmp
mov
fdivrs
jmp
icebp
pop
scas
push
inc
jecxz
mov
mull
add
aaa
cmp
sti
sub
xchg
leave
add
out
rcrb
int3
add
addl
sub
push
loope
pop
cmp
or
mov
jbe
sub
aaa
clc
pusha
dec
cmc
sti
xor
push
call
fsubr
and
into
testb
mov
mov
cwtl
shrb
add
in
imul
push
cmpsl
xchg
pop
jecxz
xor
jmp
add
push
lret
xorb
in
lock
out
add
and
sbb
adc
inc
aad
xchg
sti
pusha
mov
jo
mov
mov
add
sarb
cmc
rcr
in
mov
xchg
fmuls
add
xchg
enter
lods
or
or
jb
roll
movsb
add
sbb
sbb
loope
imul
aad
push
add
pop
adc
std
dec
push
mov
int
pop
ss
dec
cmp
pusha
fcomps
lock
fdiv
in
inc
mov
movl
cwtl
jae
pop
popf
dec
xchg
dec
inc
scas
and
inc
bnd
add
sub
pusha
pop
shl
xor
scas
cmp
and
frstor
add
sbb
dec
xchg
sbb
rcrb
add
add
push
repnz
mov
out
bound
popf
pop
data16
inc
lods
add
cmc
ret
int
xchg
mov
test
xchg
jge
cmp
mov
and
aam
mov
dec
aam
lock
or
push
les
add
inc
sub
lock
call
clc
add
adc
aam
or
loopne
push
pop
mov
movsb
iret
xor
pushf
fnstcw
add
in
add
mov
out
jl
or
adc
repnz
jne
cmpb
mov
inc
pop
push
cld
dec
and
or
lahf
or
add
mov
and
mov
inc
pusha
je
iret
shr
or
loopne
movsb
push
popf
dec
rolb
and
sti
xor
sahf
sbb
movsl
pop
jo
add
cmp
test
pop
add
or
test
add
dec
sbb
push
jno
mov
add
int3
imul
xchg
popa
lods
add
mov
dec
repz
cld
jo
test
js
xor
sbb
cmp
cmp
es
nop
pop
nop
loopne
lret
stos
dec
inc
jo
xchg
xchg
imul
test
jns
rorb
pushf
test
add
shrb
fsub
cmpsl
push
pop
pushf
mov
loope
les
lahf
lock
test
leave
xchg
rolb
std
push
dec
jb
pusha
subb
and
push
mov
dec
add
fldenv
and
or
lret
add
cmc
adc
pcmpeqd
jb
hlt
xchg
leave
ret
add
pusha
cli
pop
sub
in
pop
and
mov
cltd
and
or
pop
movsb
lcall
or
push
aam
pop
pop
xor
imul
insb
add
popa
xlat
ret
cmpsb
dec
add
int
adc
insb
and
repnz
enter
ss
int
fdivl
js
mov
xor
add
push
xchg
xor
mov
outsb
xor
inc
push
pusha
popf
and
pop
notl
repnz
popf
lret
xor
mov
dec
ljmp
xchg
call
fcmovnu
pushf
xorb
xchg
mov
in
and
jle
add
ret
loopne
ret
adc
add
clc
mov
stc
cld
xchg
ud1
inc
pop
shlb
or
pop
mov
sbb
add
fimull
pusha
pop
lea
add
xor
or
add
or
add
movsl
push
jmp
inc
xchg
test
xchg
sub
push
sti
icebp
lds
ja
push
pop
mov
lods
pop
jne
dec
scas
xchg
jp
xor
and
sub
pop
push
mull
xor
add
xacquire
stos
add
cmpsb
sbb
xor
add
dec
es
dec
test
jle
bound
adc
enter
add
adc
clc
adc
sti
mov
and
mov
adcb
pop
add
cmpsl
das
insb
inc
fsubs
add
not
stos
pushf
into
add
outsl
pop
xor
enter
in
fwait
andb
test
pop
push
in
or
mov
jbe
push
das
popf
ret
mov
pop
add
cmp
mov
fwait
jo
or
loope
fcomp
pop
cwtl
and
inc
mov
outsb
add
into
mov
clc
filds
inc
mov
mov
dec
test
mov
push
loop
add
out
push
add
js
xor
movsb
mov
mov
enter
add
movsb
scas
insl
add
dec
enter
pop
add
xchg
or
adc
xchg
aas
mov
push
xor
ja
inc
mov
add
dec
inc
adc
and
push
pop
cmp
andl
aas
sbb
lods
jg
fnstenv
or
mov
lret
xorl
cwtl
add
lea
rorl
out
lods
lcall
icebp
push
outsl
jl
jle
cltd
push
lds
leave
addl
pop
aaa
or
xchg
test
jae
mov
cmp
vrcp28pd
jns
mov
and
xor
cmp
add
jo
dec
div
or
xor
insb
loopne
jnp
rolb
cmpsb
xor
mov
movsl
dec
dec
les
incl
ret
mov
popf
subl
popa
dec
push
jmp
frstor
and
push
ret
and
enter
lea
subb
in
movsb
push
sub
adcl
xor
pop
add
mov
jp
mov
int
xor
xorl
std
add
xor
add
adcb
cmc
push
and
shlb
out
push
shlb
sub
dec
sarl
clc
xor
jp
lock
inc
or
adcl
lds
add
sub
adcb
sub
inc
bound
cmp
mov
notb
nop
popf
shrl
fldt
xchg
mov
cld
adc
in
mov
popf
xor
pop
sbb
add
fbld
clc
add
test
dec
and
inc
in
pushf
ja
xchg
dec
rcrb
jecxz
add
push
jge
fisubrs
andb
or
dec
pusha
subl
lret
stos
add
push
mov
and
ss
jp
pusha
das
pop
add
clc
push
lea
sbb
mov
or
and
pusha
pop
adc
xor
nop
jne
or
sub
and
jo
xor
out
test
mov
cltd
xchg
sub
daa
fwait
dec
add
sbb
cmp
dec
adc
dec
dec
in
repnz
scas
inc
cmp
adc
and
mulps
xchg
pusha
imul
adc
and
fs
out
push
and
sbb
inc
xchg
popa
push
cld
es
add
sbb
pushf
adc
cmp
stos
sub
cmp
es
adc
imul
repz
xor
lods
movsl
dec
cmp
aaa
add
rcrb
pop
clc
xchg
dec
movsb
adc
mov
adcb
push
mov
cmp
dec
jmp
cmp
mov
mov
test
inc
push
mov
enter
xor
push
hlt
sbb
xlat
enter
orb
mov
pop
cmp
je
inc
cmp
test
test
add
xor
dec
add
jp
dec
imul
fadds
sub
add
popa
andb
ret
add
filds
pop
mov
rcrb
repz
or
ds
idiv
daa
sbb
pop
enter
popa
int3
push
pop
push
out
insl
mov
cmpb
ret
jbe
or
mov
sub
xor
jne
adc
das
testb
sbb
pop
pusha
lds
imull
test
rcl
dec
mov
data16
loopne
imul
popa
lea
push
dec
mov
fisttpl
cltd
mov
dec
jae
xor
push
mov
pushf
adc
inc
in
into
rolb
hlt
fmul
add
add
dec
xchg
and
std
rcr
mov
hlt
pusha
add
lret
in
popl
loop
bound
add
mov
add
push
mov
sub
mov
jo
adc
subl
pop
dec
movsb
and
cwtl
nop
pop
mov
or
and
data16
shlb
fucomi
test
rolb
shld
nop
cli
push
cmp
jl
add
sub
mov
loop
pop
je
and
xchg
cmpsl
lcall
dec
rcrl
cli
adc
and
adc
jle
adc
gs
rcl
cld
push
inc
ja
and
call
add
add
mov
mov
mov
test
xor
mov
fldl
cli
shl
sub
shrl
adc
cltd
in
sahf
mov
and
testl
sbb
and
xchg
or
and
icebp
repz
add
dec
stc
cltd
add
clc
lcall
sbb
andb
push
lds
or
pop
hlt
mov
xchg
push
push
and
jb
xchg
pusha
sbb
leave
add
pop
in
data16
daa
orb
sub
xchg
mov
dec
movsb
cs
ds
ror
mov
loop
dec
rorb
adc
fst
mov
add
pop
adc
fxch
frstor
dec
pop
dec
xor
cmp
sbb
shrb
scas
rcrb
xor
mov
lds
cmp
and
mov
jmp
mov
xchg
add
sub
mov
orb
in
and
and
lds
mov
dec
add
cwtl
insb
lods
jo
adc
popf
sbbl
int3
mov
jo
mul
add
push
roll
in
aas
das
push
mov
jge
or
out
out
push
xchg
inc
sub
fwait
inc
and
mov
inc
shlb
icebp
sub
add
pop
adc
and
loopne
inc
xorl
fucomip
jl
jnp
mov
sub
in
mov
cwtl
inc
cmp
add
sahf
xchg
stos
pop
call
pushf
inc
rorl
mov
mov
adc
adc
xor
out
fcomps
add
das
xchg
adc
and
push
cltd
push
mov
add
sbb
add
in
or
xor
je
and
fwait
xor
shr
sbb
icebp
sub
add
xor
mov
dec
test
mov
xchg
and
and
add
lcall
loope
mov
gs
xchg
push
loopne
in
inc
adcb
daa
dec
jno
add
sti
movsb
push
pop
inc
out
mov
inc
or
cs
outsl
cli
or
and
mov
xor
pop
ja
pop
xor
mov
mov
andb
mov
call
cmpsb
daa
test
cld
inc
call
ja
mov
pop
test
sub
clc
fsub
mov
stos
hlt
dec
jl
add
or
add
push
lret
mov
cmp
nop
js
pop
pop
inc
add
insl
or
cli
stos
ds
inc
ret
pushf
and
mov
daa
jle
mov
add
mov
xchg
cmpsl
mov
adc
dec
or
add
stos
and
dec
pop
int3
fists
fdivl
fs
orl
sub
fstps
aas
in
push
add
cmp
subb
rclb
mov
mov
cmp
pop
cltd
xlat
sub
cld
push
stos
lds
jae
jne
cmp
popf
dec
jnp
in
add
adc
cmpsl
out
xchg
xor
adc
pop
fistpl
cwtl
mov
outsb
or
sbb
cwtl
xor
insb
push
enter
fs
movsb
and
add
and
in
or
imul
enter
cltd
cmp
jg
stos
inc
xor
lock
les
or
and
inc
push
ret
cmp
push
imul
dec
xchg
mov
fmuls
rol
loop
add
jge
or
lret
xchg
mov
jbe
test
push
mov
lea
outsb
inc
sub
leave
adc
jge
jne
adc
add
jns
mov
rcrb
loopne
mov
adc
jge
in
vpshab
fwait
jae
popa
sbb
push
add
test
mov
inc
inc
jl,pt
xchg
pushf
dec
add
sub
add
push
push
xchg
daa
cmpsb
and
xor
sub
adc
adc
test
aaa
mov
repnz
cmp
push
fistpl
cmpsl
add
bound
cmp
adc
add
and
jecxz
movlhps
in
ja
and
test
jnp
add
or
loop
add
adc
xorl
pop
ljmp
rclb
add
or
add
or
pop
mov
xor
sbb
xor
loopne
cld
inc
adc
das
daa
push
pop
test
add
insb
std
mov
pop
add
or
cmp
sbb
jp
nop
mov
aad
mov
lret
adc
push
xor
add
adc
mulb
and
xchg
xchg
fcmovb
hlt
mov
gs
jbe
in
and
imul
aam
dec
mov
xor
bound
and
sti
jbe
fs
cmp
imul
lods
outsb
and
enter
add
out
xor
mov
inc
in
enter
addl
inc
scas
scas
pop
and
inc
movsb
les
add
pushf
fs
lods
push
mov
outsl
dec
rolb
popf
aam
jmp
sahf
add
mov
adc
xorb
add
push
add
hlt
lods
adc
test
add
push
fimuls
cmpb
jle
popa
dec
andb
or
movsb
add
mov
add
test
mov
mov
dec
data16
mov
add
cwtl
add
fwait
loope
leave
rolb
in
jae
pop
mov
adc
stos
dec
xchg
in
adc
out
jl
cmp
test
orb
jne
call
testb
movsl
mulb
xchg
push
adc
add
popf
jns
std
sbb
pop
and
in
add
and
dec
lods
arpl
sbb
insb
mov
sbb
push
inc
dec
dec
sbb
mov
xor
mov
push
xchg
or
dec
xchg
dec
jns
and
jbe
outsb
je
in
and
aas
ret
loop
xlat
or
mov
js
lods
add
pusha
or
mov
add
mov
rolb
cmc
das
test
nop
nop
cmpsb
push
add
pop
int
jb
push
filds
mov
push
or
and
mov
shrb
jge
es
and
xor
pushf
and
rcrb
mov
add
fimull
sti
bound
mov
add
call
mov
add
adc
notl
cmp
xorl
dec
and
les
pop
adc
add
pop
sar
repnz
add
sub
cld
repz
xor
es
les
test
or
add
push
mov
sub
lods
add
jnp
in
bound
sub
inc
leave
movsl
cmp
int3
add
in
and
lods
sub
loop
sar
jae
adcl
sub
and
enter
sub
js
loop
mov
xchg
je
inc
pusha
je
mov
and
call
loop
dec
mov
hlt
movsl
dec
or
inc
adc
mov
in
inc
int3
add
mov
add
aas
icebp
xor
pusha
mov
sbb
cmp
outsl
sub
scas
pop
pop
add
sub
or
lret
loopne
jle
sub
adc
test
add
mov
cltd
cmp
fs
orb
mov
add
rcrb
rcrb
add
stc
sbb
dec
add
xor
movsl
cmp
adc
pushf
and
sub
das
mov
inc
pop
cltd
test
add
gs
cs
mov
jecxz
add
aas
mov
loop
mov
adc
pop
das
faddl
dec
inc
sub
add
aam
xor
or
sub
or
sbb
int3
icebp
orb
push
jle
push
inc
or
pop
sbb
xor
rol
enter
adc
lock
sub
mov
add
pop
stos
repz
mov
push
pop
rcl
or
add
xchg
bound
ss
cmp
adc
xlat
cs
jnp
cld
stos
test
and
movsb
inc
and
xor
sub
xor
add
lcall
insb
cli
fimull
mov
dec
mov
mov
aam
repnz
add
sub
add
sti
shr
bound
sbb
sub
es
mov
test
mov
push
inc
fistpll
loope
xchg
jge
mov
ss
addl
dec
in
clc
lods
call
sbb
and
inc
pop
dec
hlt
sub
add
xor
movsb
loopne
pusha
sub
clc
sbb
adc
rcrl
inc
fidivrl
jecxz
out
push
or
insb
faddl
stos
int
cmc
in
cmpsb
imul
fmul
mov
outsl
add
std
or
sub
cmp
jg
pop
cwtl
cld
xor
cli
lods
rorl
mov
call
test
jne
dec
or
lock
sbb
pop
add
dec
les
adc
push
sub
sbb
jno
int3
fcmovnb
xchg
add
fistpll
shlb
mov
dec
ljmp
xor
add
dec
faddl
popa
out
lock
adc
lods
mov
sahf
xorb
pop
movsl
jo
loopne
inc
loopne
mov
mov
pop
cmp
dec
pop
sarb
inc
adcb
add
xchg
popf
fimull
ficoms
jns
add
popa
mov
mov
mov
sub
add
xor
add
push
add
repz
sarl
lret
mov
and
xchg
mov
rol
xor
lcall
push
rcrb
int
arpl
cwtl
mov
mov
inc
ds
es
or
adc
sub
adc
add
movsl
add
jle
std
fsubl
mov
jbe
fstpl
popa
das
sbb
add
push
push
sub
lahf
push
xor
adc
xor
sbb
or
pop
stc
ret
mov
leave
cmp
cwtl
jo
test
in
cltd
sbb
cmp
push
ja,pt
mov
jnp
adc
push
mov
adc
sbb
aam
in
push
es
mov
int3
push
outsb
mov
mov
sub
seta
xchg
or
jne
incl
jmp
pop
cli
add
adcl
iret
jns
cltd
pop
scas
inc
in
add
jmp
out
jae
popf
addl
repnz
cmp
flds
mov
das
cwtl
lock
cmp
mov
sbb
cld
repnz
lds
jecxz
aad
mov
arpl
shl
cli
test
iret
pop
and
jmp
test
lock
add
aam
sub
ret
cli
push
int3
xor
push
push
rorl
mov
dec
insl
xor
shl
lock
add
insb
add
pop
push
sbbb
pop
loop
sub
scas
mov
fsubrs
lret
ret
xor
leave
sub
das
insb
in
mov
and
cs
cmp
pop
jmp
fcomps
mov
enter
inc
pop
xorb
push
sbb
insb
inc
shlb
lods
push
add
mov
add
jnp
dec
xor
enter
pop
mov
pusha
int3
pop
lahf
lcall
or
dec
cli
and
pop
fld
add
int3
mov
das
enter
cmp
sahf
test
imul
and
or
pushf
xchg
mov
push
and
lds
dec
jecxz
cmp
add
mov
inc
mov
pop
mov
mov
add
lds
ds
sbb
push
sbb
sub
dec
add
xchg
add
iret
lock
add
pop
ljmp
js
and
add
jbe
pop
cmp
inc
jl
sbb
hlt
add
push
cld
pusha
sbb
js
sbbb
sub
sarl
push
subb
adc
addb
das
andb
aaa
or
or
adc
subb
or
jbe
pop
and
pop
imul
stos
aad
jo
cmp
inc
pop
push
pop
jo
mov
sub
jmp
adc
dec
outsb
cmp
sbb
fcmovu
add
adc
jne
mov
in
mov
cwtl
and
addb
adc
arpl
hlt
push
add
nop
xchg
icebp
loop
mov
nop
pushf
sahf
stc
inc
adcb
leave
int
adc
jbe
add
and
hlt
loop
popa
and
movsb
enter
mov
fs
xor
mov
loope
in
mov
jo
pop
data16
pusha
loopne
inc
pop
and
ja
xor
imul
ffreep
inc
rcrl
sbb
xchg
mov
mov
sarl
imul
pop
add
rolb
orb
push
daa
lahf
repnz
leave
je
pushf
aam
insb
push
daa
dec
push
sti
add
inc
dec
stos
fmuls
mov
push
sbb
xor
push
cmp
or
sbb
jecxz
loopne
mov
insb
rolb
jnp
ss
add
js
faddl
xchg
aad
nop
shlb
cmp
add
or
jp
movl
add
mov
and
sahf
stos
and
mov
add
lods
sbb
in
es
scas
sbb
shlb
mov
and
add
mov
jl
shrl
push
or
mov
push
cmp
fbstp
jb
sub
pop
xor
add
clc
add
push
xor
push
movsb
mov
push
or
jle
mov
ljmp
adc
mov
push
push
cs
xor
or
mov
in
sbb
addr16
div
xchg
and
movsb
push
or
dec
mov
sub
or
lret
xor
inc
and
cwtl
add
and
fwait
inc
test
adc
je
sbb
xor
mov
cld
ss
addr16
sbb
mov
stc
enter
jb
stc
hlt
std
ficoml
test
jno
push
enter
cld
jo
in
outsb
scas
jge
insl
mov
jg
mov
in
mov
lahf
pop
ret
subb
lds
push
inc
and
sbb
pop
sbbl
mov
mov
aas
mov
jmp
mov
popa
movsb
test
lock
ret
mov
add
movsb
and
movsl
xchg
adc
sbbb
mov
mov
mov
add
addl
xchg
in
das
rclb
lcall
cli
and
pushf
mov
jl
jns
inc
sbb
filds
js
add
dec
inc
ss
test
or
fs
inc
sub
dec
filds
xchg
add
popf
and
jle
inc
mov
test
adc
in
js
adc
cmp
xlat
mov
mov
mov
and
and
xchg
xchg
test
sbb
nop
lods
shrb
adc
nop
repz
icebp
and
xchg
xor
clc
cltd
jb
out
lock
mov
xchg
add
jnp
enter
or
xchg
das
or
sbbl
and
or
and
ja
push
lahf
rcrl
add
add
inc
jmp
leave
out
cs
xchg
mov
add
ja
aas
loope
add
push
insl
pushf
lret
xchg
cmp
cwtl
cmp
sub
sbb
pushf
das
add
pop
add
pop
ret
hlt
adc
ljmp
outsb
add
add
jbe
sbb
jg
add
xchg
push
cmpsb
loopne
fs
ss
push
pop
or
insl
sbb
pop
faddl
push
and
mov
das
add
sti
jmp
js
rolb
fidivrl
imul
in
push
add
sbb
pop
or
xor
add
adc
xor
cld
add
jae
mov
outsl
push
jp
adc
ss
xchg
gs
pop
cwtl
arpl
xor
rolb
sub
shlb
or
popf
push
jno
pop
stos
fwait
sub
andb
push
jg
mov
xor
sub
sub
add
adc
push
inc
js
add
push
mov
inc
sub
roll
outsb
data16
push
dec
cmp
rclb
mov
add
push
ja
push
or
lahf
out
add
shll
xor
movsb
es
inc
fs
mov
mov
and
sub
fadds
aas
insl
shll
adc
sti
fstpl
adc
rolb
test
pop
sub
enter
sub
lret
add
orl
dec
xchg
cld
add
fnstcw
or
mov
dec
sbb
pop
xlat
add
lods
sbb
movsl
test
and
add
add
je
pop
add
insb
or
inc
ljmp
xor
jmp
cmp
add
mov
mov
add
flds
pop
cld
es
sbb
mov
mov
adc
add
add
mov
dec
rclb
leave
fcompl
je
fdivs
aas
out
xchg
inc
std
add
cmp
ljmp
ss
jno
mov
cmpb
cmp
leave
cmpsl
inc
or
mov
xor
test
add
fs
and
rorb
aaa
dec
jo
je
mov
sbb
scas
xor
movsb
dec
add
lock
jecxz
fnsave
and
push
stos
cmp
jne
jle
insl
es
xchg
sub
mov
out
inc
xor
pop
mov
xor
jae
sbb
clc
ficomps
or
stos
sub
pop
inc
jne
lcall
push
fiaddl
loop
cmp
dec
sbbb
pop
and
and
and
push
add
mov
jp
sbb
js
xchg
daa
add
cld
cmpsl
mov
pop
inc
jg
add
sbb
mov
mov
out
xor
outsb
or
fcmovb
push
sbbb
fs
mov
in
call
mov
insb
push
orl
cwtl
or
xchg
and
insl
jg
add
jne
jnp
sub
pusha
push
and
repnz
jae
cmpsb
jge
push
push
mov
pushf
test
inc
add
fisttps
mov
mov
rcr
jle
popa
mov
aad
fdivs
mov
iret
cs
cmp
jne
fisubrl
add
cmpsb
push
inc
aam
and
inc
and
adc
sbb
inc
add
inc
ljmp
mov
sbb
xor
and
int
mov
mov
std
cmp
shll
pushf
frstor
or
ja
mov
sbb
cli
data16
shlb
pushf
jns
mov
ret
or
pop
cmp
add
jg
xchg
mov
inc
mov
dec
std
out
test
jno
nop
rolb
arpl
dec
and
jae
in
push
ljmp
mov
cmp
or
and
dec
add
std
aaa
inc
hlt
adc
jge
pop
and
dec
and
icebp
fiaddl
inc
cmp
in
xchg
addb
jnp
clc
adc
test
mov
jp
mov
mov
pusha
xchg
addr16
pop
jne
add
inc
cmc
and
push
mov
inc
sub
ja
xor
inc
add
fisubrl
xorl
pop
data16
mov
test
and
cmpsl
xor
sbb
or
leave
xchg
mov
xchg
sub
add
cmpb
roll
cltd
xchg
test
sub
adc
jbe
add
inc
clc
push
scas
js
push
cs
lods
loopne
cli
sub
dec
add
adcb
out
push
xor
jb
xchg
or
or
and
sbb
adcb
xor
lods
sbb
push
fwait
sbb
jne
mov
sbb
iret
adc
sbb
movsb
sub
in
loop
sub
loopne
sbb
jp
or
popf
adc
std
xor
mov
pop
push
and
lds
sbb
test
sub
rcr
scas
insl
sub
in
das
add
sub
pop
adc
lds
push
and
outsb
imul
lock
pop
ljmp
aam
fsubl
inc
shlb
pop
cmp
cvtps2pd
cmp
pushf
sbb
adc
cmp
in
push
imul
mov
jnp
and
add
out
sub
jae
add
mov
ret
insb
fs
and
les
adc
inc
pushf
add
repnz
js
and
hlt
sar
je
sbb
gs
xor
mov
cmp
lret
orb
insb
pop
mov
out
add
add
xchg
jecxz
inc
popf
inc
dec
lods
jle
xor
cmp
faddl
mov
jle
stos
loop
push
inc
push
or
movsb
inc
sbb
lods
cmp
ret
add
dec
arpl
sub
sti
loope
pop
cmp
or
flds
add
xchg
add
test
ficoml
lret
nop
and
aas
aam
sub
insb
imulb
and
sub
dec
mov
fcompl
add
das
fadds
jo
scas
mov
sub
dec
pop
add
inc
arpl
test
jo
clc
shrl
lahf
lds
mov
sbb
add
rclb
jno
cmp
pop
add
inc
cmp
pop
mov
subb
inc
adc
mov
es
daa
and
cmp
or
mov
push
jae
and
xor
mov
dec
mov
int
cli
loope
xor
hlt
aam
add
cvtps2pi
imul
insl
adc
sbb
sub
es
lods
sub
flds
mov
xor
pop
sub
ja
add
pop
inc
fwait
mov
call
fmuls
rol
inc
movsl
inc
or
in
clc
and
sbb
cld
fisubl
js
mov
inc
repnz
and
in
lods
dec
fidivrs
add
fdivrs
xor
or
mov
inc
inc
jne
pop
or
fnsave
es
mov
loop
dec
mov
and
pushl
popa
and
fcoms
jne
cmp
push
out
mov
push
mov
inc
mov
xor
sub
or
xor
scas
or
xchg
and
jne
and
cmp
lods
xchg
insb
aas
cltd
daa
aam
sbb
sub
cmp
pop
xchg
jl
add
jbe
inc
pushl
fildl
aaa
jp
pusha
xchg
shr
call
out
shrb
push
add
push
add
xchg
xlat
sub
dec
jne
xor
mov
cld
inc
aas
add
imul
lahf
hlt
jne
xchg
xchg
out
adc
inc
ljmp
push
and
jae
sub
lret
shlb
inc
adc
cmp
notb
cmc
hlt
mov
ret
push
mov
xchg
and
mov
pusha
out
sub
adc
negl
pusha
mov
cld
sbb
jecxz
fsts
xor
shlb
push
xor
fmuls
xchg
sub
xlat
cmp
sbb
sub
mov
std
inc
xchg
mov
loopne
xor
jo
sti
leave
iret
xlat
add
xchg
or
adc
mov
jno
adc
shrl
daa
mov
aas
add
mov
pop
push
pusha
xor
mov
jb
mov
and
insl
aas
pop
clc
dec
add
shrb
mov
aaa
outsb
rcr
mov
and
add
adc
sub
js
scas
out
pusha
or
push
mov
push
push
pop
mov
jne
add
xchg
rolb
mov
pop
add
rcrb
mov
or
test
sbb
mov
ret
pushf
mov
adc
adc
test
adc
daa
inc
pop
and
repz
pop
jno
sbbb
inc
cwtl
lods
adc
xor
lret
cmpb
sub
js
pop
push
push
jae
test
sub
stos
push
mov
pop
mov
push
out
in
push
or
outsb
je
lds
pop
and
pop
push
fnstenv
cmp
cmp
jno
fs
sbb
xchg
adc
lret
push
insb
mov
lods
movsl
push
cli
sub
into
sar
jg
es
pop
sbb
sub
jl
add
mov
mov
inc
emms
lea
jo
jg
call
add
gs
test
lret
fmull
mov
out
xchg
push
fbld
mov
int3
imul
test
pop
andl
mov
adc
sbb
ds
subb
xor
add
push
jo
add
cli
ljmp
jbe
inc
push
repz
cmovp
rolb
xchg
pop
ret
scas
repz
cmp
rclb
mov
fucom
pmaxsw
ljmp
push
add
pop
cmp
aas
sti
add
je
add
and
shlb
mov
out
ret
inc
and
mov
popa
sahf
icebp
xchg
mov
lods
rol
lock
int3
lds
orl
mov
subl
decb
add
inc
sbb
add
enter
xchg
mov
out
sbb
loop
add
lods
mov
push
lahf
xor
js
int3
cmovns
pop
mov
jle
adc
pop
inc
push
pop
movsb
and
sub
daa
cmpsl
bound
adc
pop
orb
push
add
mov
xchg
insl
cmp
pop
test
dec
lock
test
idivb
add
inc
sbb
xchg
andb
mov
fimuls
lock
xor
sbb
paddsw
out
test
test
adc
scas
icebp
test
mov
mov
cmp
cli
lds
int3
arpl
pop
push
roll
mov
imul
cwtl
sahf
adc
ja
mov
mov
or
mull
pop
cmpsl
dec
in
pop
or
scas
inc
dec
xlat
pop
add
cld
cs
and
fnsave
mov
pop
fwait
push
jno
mov
test
pushf
and
jb
adc
xor
mov
test
cmpsb
cltd
in
or
jmp
and
shl
jecxz
lahf
out
or
fnstenv
add
mov
sbb
cmp
jge
and
bound
add
iret
push
loopne
fsincos
mov
xchg
pop
test
fidivs
add
dec
test
inc
cmp
sub
cmp
out
xchg
sbb
mov
sbbb
dec
test
jp
fxrstor
into
or
js
xchg
add
imull
loopne
adc
lret
and
in
or
mov
mov
inc
fdiv
adc
sbb
sbb
cmp
sub
pop
jecxz
xchg
adc
insl
in
into
dec
pop
fcom
xchg
cmp
push
or
nop
mov
mov
add
and
fld
push
sub
fdivs
pop
ffreep
dec
and
dec
add
arpl
ja
mov
scas
mov
out
or
cs
mov
std
inc
sbb
xor
sbb
sbb
push
popa
movsb
fisttpl
pusha
xchg
mov
mov
inc
lret
out
push
inc
je
jno
adc
rol
scas
xchg
mov
add
js
pop
not
mov
jmp
xor
add
scas
add
in
mov
xchg
mov
in
push
sbb
repnz
orb
fiadds
pop
int
test
and
sub
dec
xchg
les
dec
xor
add
pop
test
inc
xchg
add
dec
add
dec
shlb
sbb
pop
xor
dec
clc
jbe
add
mov
push
or
sub
fmuls
movsl
es
adc
jnp
xor
jp
pop
test
push
jl
lds
fs
fdivs
stos
clc
push
inc
in
jle
ret
inc
mov
aad
xor
or
in
adcl
or
fldt
sti
mov
repnz
sbb
dec
mov
inc
xchg
mov
sbb
in
add
loopne
xor
rcr
or
inc
adcb
sbb
and
fs
cmp
dec
fdivrs
mov
sbbb
call
mov
pushf
wrmsr
scas
and
jle
pop
stc
cmp
add
pop
jmp
lock
repz
add
xchg
and
add
add
or
add
fisttpl
cmp
add
mov
bswap
dec
and
jl
dec
fdivs
pop
add
aad
imul
popa
hlt
add
dec
mov
lds
ret
andb
mov
jbe
mov
arpl
out
jmp
outsl
daa
test
rcl
lds
fisttpll
push
repz
lahf
push
cltd
sbb
dec
xchg
fadd
cmp
stos
sbb
or
iret
mov
ret
adc
add
mov
jbe
jbe
xor
scas
jl
add
mov
and
mov
mov
popf
add
inc
push
cld
add
lret
adc
xchg
add
mov
add
fwait
xchg
add
jecxz
ja
cmp
xor
out
adc
mov
jl
das
lds
add
test
mov
mov
pcmpeqb
sub
inc
enter
lds
dec
cmp
add
rclb
popa
or
lock
add
mov
inc
insb
icebp
add
loopne
add
lock
unpckhps
shll
movl
adc
cwtl
mov
inc
cmp
sbb
sub
roll
sub
mov
adc
cmp
mov
mov
aas
add
hlt
add
fwait
shrb
sbb
jge
adc
add
cltd
bound
add
out
aam
in
outsl
cmp
jo
or
cmc
sbb
test
ret
xchg
sub
int3
leave
sbb
mov
or
adc
fwait
mov
jns
mov
sbb
mov
cmp
adc
inc
push
movsl
rorb
add
jne
aaa
xor
std
scas
jecxz
xor
nop
xchg
add
pop
mov
call
sahf
xor
and
add
xchg
lock
or
lock
jno
add
fcmovu
mov
and
out
add
pop
mov
nop
ja
dec
add
push
idivl
push
add
sbb
repnz
js
cmp
loope
rcr
es
cmp
add
clc
or
std
jge
add
movsb
sbb
inc
jp
add
push
dec
div
mov
pop
sub
loop
push
ret
fldl
flds
inc
adc
lods
pop
add
mov
incl
jmp
push
sub
adc
fadds
mov
cmp
in
add
mov
stos
outsb
and
jmp
out
dec
jge
loop
in
jno
adc
flds
adc
jno
add
faddl
inc
and
data16
push
xor
jns
fs
add
loope
ljmp
mov
call
push
es
pop
daa
mov
dec
repnz
add
mov
mov
mov
out
mov
out
sbb
jns
and
insb
stc
add
jo
sub
xchg
fildll
addr16
mov
adc
mov
jge
push
dec
orb
pop
cwtl
pop
and
data16
test
aaa
daa
incb
xor
in
add
dec
sbb
jmp
add
dec
push
pcmpgtb
js
jecxz
xchg
out
add
or
mov
xchg
cmp
mov
aas
stos
add
sbb
test
and
or
add
iret
lods
jge
leave
ret
pushf
push
push
addb
aas
adc
ljmp
jge
gs
push
fimuls
xor
aaa
addr16
xchg
cmp
and
xor
add
mov
adc
lcall
add
cmpl
inc
and
jl
inc
add
inc
ljmp
pushf
iret
fdivrs
add
jns
insl
jne
dec
sahf
and
test
add
mov
out
rolb
sub
pop
inc
imul
jno
mov
popa
aad
and
sub
cmp
loop
inc
hlt
mov
fmul
add
into
in
xchg
push
add
inc
cmpsl
mov
test
or
imul
pop
jle
pusha
fisubl
aam
push
add
add
cmp
and
fs
or
add
cli
jae
cmp
cld
mov
pusha
es
lahf
sub
test
or
test
mov
mov
cmp
mov
xor
das
flds
push
out
add
or
lock
sbb
add
fld
ljmp
movsl
mov
jge
repz
dec
jle
cmp
push
je
sbb
jno
shrl
shl
subl
pop
sub
rolb
ja
in
int
outsb
push
rcrb
inc
arpl
xor
sub
nop
adc
jge
push
insl
out
cwtl
push
sti
in
xor
pusha
fsubp
push
pop
sub
add
mulb
mov
sar
sub
and
shlb
push
sahf
jle
cmpsb
in
lret
ds
orb
movsb
jg
rcr
mov
sub
shlb
test
rsm
lahf
out
or
dec
inc
mov
jl
sub
xchg
out
scas
adc
pop
sbb
arpl
nop
inc
cld
add
outsb
es
mov
repnz
addr16
ret
add
inc
jge
sbb
call
push
mov
shll
mov
cld
pop
imul
fldl
xchg
jmp
mov
fwait
add
shl
and
and
adc
xchg
lea
test
les
cmpsl
scas
clts
ror
push
add
call
add
mov
scas
add
mov
je
lock
fbld
lcall
xor
std
ficompl
pushf
cmp
fidivs
and
aad
add
adc
dec
add
mov
pop
adc
movsl
push
ljmp
xchg
inc
imul
pop
orl
sub
jb
push
mov
cmp
orb
aaa
loop
mov
xor
mov
in
ljmp
sti
cmc
pop
jmp
into
scas
enter
stc
in
mov
pushf
cwtl
cmp
verw
sti
mov
movb
cmp
aam
dec
in
in
add
sbb
pushf
nop
leave
and
popa
shlb
adc
push
cmp
arpl
cmc
repz
or
or
je
pop
out
push
cmp
or
cmp
fidivrl
add
ss
add
and
outsb
jmp
jb
sub
addb
shlb
push
fldcw
adc
dec
push
push
add
dec
mov
add
cld
pop
lods
add
mov
mov
stos
dec
xchg
stc
inc
hlt
and
int
push
loop
add
fmuls
dec
scas
mov
and
ljmp
mov
test
outsb
maskmovq
divl
mov
inc
pop
mov
rolb
jp
push
int3
add
insl
xlat
loop
insb
sub
add
add
sti
ljmp
adc
fcoms
mov
sbb
inc
jg
ja
loope
stos
add
sub
dec
out
mov
jmp
sub
jo
xchg
add
lods
in
xor
call
stos
aam
add
mov
jo
sbb
mov
mov
aas
adc
insb
push
aam
xor
incb
mov
xor
jmp
sub
inc
call
in
xor
cmpb
test
std
andb
loopne
mov
inc
or
push
movsl
add
add
mov
out
push
rcl
pop
in
add
xchg
jno
nop
test
into
les
inc
push
sub
xorl
fnstsw
and
ficoms
in
xchg
mov
dec
mov
sarb
dec
pop
mov
add
popa
mov
sub
jle
je
add
add
insb
inc
ljmp
loope
cli
in
dec
cld
xor
add
adc
mov
negb
pop
movb
jno
jb
mov
sbb
ret
out
frstor
fcmovne
gs
push
jle
cwtl
loop
sbb
inc
xchg
in
pushf
add
addr16
fstl
xchg
dec
add
std
imul
add
mov
mov
adc
inc
add
lods
add
mov
ljmp
int
test
jg
in
test
add
xor
ja
dec
movsl
sub
add
mov
add
cmp
dec
stos
dec
sbb
mov
add
jo
dec
inc
cmpsb
lock
sub
enter
push
pop
xchg
xchg
jae
repz
imul
xor
out
push
bound
push
test
fbstp
push
jnp
add
mov
jge
lcall
enter
add
std
arpl
pusha
jb
add
enter
mov
sub
xchg
cwtl
insl
stgi
push
int3
sbbl
cli
add
fnstsw
fildl
stos
cmp
lret
sbb
push
push
decb
add
rclb
mov
jns
jae
sub
pop
ficoms
popf
decl
sbb
xlat
test
xor
mov
add
adc
dec
fidivl
push
fdivs
repz
fwait
std
and
inc
pop
xchg
out
inc
loopne
and
fistps
scas
and
mov
inc
loopne
loope
push
xchg
jo
sub
fs
inc
mov
pop
lods
add
or
add
inc
subb
loope
mov
rol
xchg
push
sti
int3
repz
js
xchg
cmp
push
es
xchg
lret
mov
inc
cmp
or
add
popf
adc
add
push
cltd
xchg
cmp
sbbb
adc
ret
out
je
add
ret
jns
add
aad
pop
ret
in
add
aam
xchg
mov
push
mov
ja
scas
xor
inc
jnp
outsb
push
pop
push
faddl
movsl
or
in
fadds
add
mov
pusha
test
xor
add
dec
ret
fwait
es
call
scas
loopne
jbe
mov
sub
cmp
lret
jp
mov
nop
add
fwait
mov
imul
mov
lret
add
inc
loopne
jge
mov
sub
dec
lcall
mov
add
xchg
cmp
mov
shrl
nop
adc
jge
xorb
sub
sub
and
sub
jnp
mov
shl
cld
clc
out
mov
mov
cmp
jnp
inc
xorb
mov
lods
pusha
js
mov
leave
push
pop
pop
push
mov
nop
outsl
jecxz
ljmp
ret
in
dec
jae
popf
and
sbb
xchg
dec
sub
add
mov
add
xor
idivb
jl
mov
add
lret
scas
inc
mov
add
inc
mov
push
int
push
xchg
in
mov
sbb
mov
mov
adc
hlt
outsb
add
and
idivb
jl
jne
cmp
cmp
mov
add
daa
xor
or
mov
add
nop
sbb
or
movnti
push
and
into
fmuls
xchg
subl
hlt
and
inc
inc
cmpsb
sub
aas
mov
xchg
ss
sbb
pop
movl
jp
lret
xchg
pop
scas
imul
call
push
fidivrs
push
gs
cmpb
dec
mov
mov
scas
dec
rcrb
cld
add
stos
jmp
sub
sbb
push
lea
ret
cmp
xor
loopne
xchg
pop
sahf
mov
cmp
sbb
ficompl
push
add
stc
jo
add
inc
insl
fmull
lcall
sbb
arpl
or
xor
out
aas
add
fwait
shrb
pusha
push
sub
push
loope
inc
ss
add
mov
cltd
dec
inc
adc
adc
push
sahf
adc
iret
mov
cmc
mov
xchg
add
jecxz
jmp
mov
ljmp
mov
cmp
dec
pop
paddw
rolb
dec
mov
mov
pmullw
or
lcall
add
dec
push
pop
and
push
cmp
or
mov
push
or
add
repnz
push
add
jns
inc
adc
filds
xchg
add
pop
test
pop
out
adc
das
jg
lods
lods
sub
push
sub
add
in
push
imul
lods
sub
les
test
add
dec
dec
imul
jl
xchg
xor
cmp
and
cmp
cli
cmpsl
aam
add
jg
addb
call
inc
cwtl
andl
adc
xor
lock
nop
cmpsl
pop
jns
add
xchg
sbb
mov
je
or
addr16
dec
mov
or
push
jnp
add
lock
movsl
adc
ss
popf
pop
sar
in
call
mov
test
scas
sbb
pop
dec
sbb
add
arpl
leave
adc
or
cmpb
add
dec
sti
scas
int3
add
pusha
pop
out
pop
jne
cwtl
stc
clc
mov
inc
push
jp
psrld
and
pop
lcall
cmp
mov
add
stos
imul
xchg
ljmp
sub
js
scas
out
shl
add
lods
inc
push
das
loopne
add
cld
xchg
into
add
xchg
push
or
mov
pop
cs
xchg
outsb
inc
dec
aam
add
sub
adc
adc
xchg
cmp
mov
sub
mov
imul
jle
in
adc
or
mov
shrb
jecxz
xor
call
push
add
sarb
addr16
or
repnz
jle
mov
es
xchg
add
shll
sbb
pop
xor
sub
aas
aaa
andb
mov
hlt
bound
das
aam
ljmp
mov
in
mov
pop
jno
dec
cmp
xchg
mov
mov
iret
shlb
repnz
and
push
add
out
dec
mov
push
add
popf
loop
fisubl
rcrb
xchg
jl
ljmp
push
add
or
inc
cli
add
jle
fadds
pop
fistps
lcall
xor
lock
iret
inc
jno
cmp
adc
arpl
add
shlb
add
nop
push
pop
push
cltd
out
inc
lret
outsl
lret
add
pop
push
sub
jno
js
fwait
sbb
push
insb
enter
aas
add
orl
add
stos
ret
inc
pushf
cld
cmp
int
lcall
cmp
stos
sahf
push
loope
aaa
sub
pop
rol
xor
icebp
pop
add
stos
leave
xchg
push
sbb
add
addb
popf
cmp
popa
fwait
push
jae
shlb
add
das
xor
push
icebp
aam
leave
xchg
jo
out
testb
xor
xchg
call
push
mov
mov
cmp
add
stc
cmp
pop
xchg
test
jnp
and
cld
add
leave
jmp
fsubr
ljmp
mov
enter
enter
cmp
jg
mov
sbb
mov
fimuls
add
dec
stc
jnp
pop
jo
roll
femms
out
shlb
xor
adc
jbe
add
ss
in
xchg
add
lret
add
xchg
xchg
ss
sub
add
dec
jbe
add
mov
clc
push
mov
mov
sbb
hlt
dec
add
push
test
adc
adc
fldcw
scas
fcomps
add
inc
sti
ja
sub
cwtl
pop
mov
lods
xchg
int3
add
pop
cmp
mov
add
stos
xchg
jno
ret
push
pop
jae
shlb
mov
pop
popf
mov
push
aam
sub
out
out
mull
inc
jecxz
add
cmpsl
mov
add
fwait
movsl
mov
pushf
sub
daa
dec
sarl
loopne
dec
lcall
inc
in
lock
outsb
loop
xor
outsl
mov
cmpsb
add
jns
es
hlt
push
add
cmp
xor
mov
push
push
sahf
repz
pop
adc
add
adc
jmp
dec
stc
xchg
add
add
or
fmul
lret
add
jecxz
cmp
aaa
add
jge
sbb
sahf
in
pop
ltr
mov
xor
inc
xchg
roll
xchg
mov
pop
imul
cmpsb
jmp
add
daa
inc
xchg
cltd
fs
cwtl
add
push
lods
or
jns
push
jno
and
jl
hlt
adc
cmp
sub
mov
rol
pusha
dec
dec
mov
xchg
add
gs
lahf
mov
add
movl
lock
mov
and
into
dec
orl
cmp
cmpsl
mov
sti
xor
daa
cmp
jo
es
sub
pop
pop
lock
pop
add
arpl
push
or
add
mov
repnz
pusha
clc
lcall
pop
or
adc
pop
scas
dec
and
pop
test
popa
mov
cltd
mov
xchg
push
rorb
add
clc
xor
xlat
push
sbb
sbb
push
or
ret
dec
fldl
test
std
nop
out
cmc
pusha
roll
add
std
push
insb
inc
sub
mov
adc
mov
test
out
jmp
mov
in
add
mov
aam
adc
fidivs
mov
jmp
outsl
or
lret
inc
pushf
pop
lcall
insl
gs
fists
xchg
lret
add
mov
xlat
push
ds
scas
push
dec
imul
xchg
mov
sbb
testl
xor
push
add
cld
jge
xchg
dec
dec
add
rcl
test
or
mov
repz
adc
popa
xacquire
mov
fwait
add
jo
fnsave
xor
lds
lahf
sub
add
cltd
push
xchg
sbb
or
cli
mov
dec
push
inc
mov
es
dec
in
add
xchg
jnp
xchg
jp
fstps
sbb
mov
dec
xor
push
and
add
repnz
and
sub
adc
jmp
fdiv
pusha
fsubrs
adc
and
fists
lahf
lods
cmp
xchg
xchg
dec
sub
and
add
shll
mov
inc
pop
into
cmpsl
pusha
call
loope
xchg
daa
out
add
test
add
into
fidivrl
mov
push
in
mov
outsb
pusha
pop
movsl
test
iret
arpl
sub
pusha
adc
pop
add
mov
jl
xchg
je
or
add
insb
pop
add
push
outsl
iret
or
clc
sub
xor
pusha
and
in
lcall
daa
sbb
or
and
adc
inc
add
cmp
cld
mov
add
push
sbb
add
pop
aad
and
jle
leave
add
cmpsb
jl
push
lods
aam
sbb
mov
lahf
or
and
shlb
pop
push
mov
pop
daa
sbb
lods
pop
inc
test
cmp
adcl
jb
mov
sub
and
add
mov
jae
mov
xchg
repnz
fwait
inc
xor
mov
inc
add
dec
sub
inc
push
add
insl
pop
shll
dec
pusha
sub
add
jns
push
enter
ds
cld
jmp
add
add
inc
fbld
xor
incl
shlb
repnz
mov
cli
rcrb
cmp
inc
push
jp
add
repz
iret
mov
inc
sub
nop
arpl
mov
ret
lock
push
jmp
sub
stc
add
jnp
movsl
das
or
lret
add
xor
out
push
outsl
inc
xor
add
jne
push
mov
mov
push
mov
cmp
ja
sbb
mov
insb
insb
xlat
add
hlt
xchg
mov
aad
incb
jns
shll
add
pop
fadds
or
mov
sbb
addr16
push
sbb
add
mov
jae
sbb
inc
push
add
imul
in
push
rorb
cmp
es
stc
add
dec
xor
pusha
mov
add
stos
les
push
add
dec
add
cmpsb
jnp
push
add
imul
push
sub
inc
jle
adc
ljmp
add
es
xchg
xchg
push
add
xor
hlt
cmpl
push
sti
movsl
fcmovu
jg
add
cli
arpl
mov
orb
in
mov
imul
add
cmp
inc
fldl
mov
arpl
pop
xor
sar
into
jle
enter
or
adc
dec
add
lock
dec
imul
and
add
arpl
into
std
jl
or
xchg
add
lcall
adc
xor
pop
jno
add
add
cmp
flds
push
xor
pop
fwait
jle
xor
in
add
clc
insb
out
mov
es
stc
and
lret
add
out
aad
cmpsl
scas
mov
pop
and
jge
add
lds
in
aam
or
pop
jle
add
ret
inc
push
aas
cmpsl
mov
in
andb
push
pop
rcrl
cmp
flds
xchg
mov
test
ja
dec
lods
or
push
cmp
rcll
mov
lret
enter
add
and
adc
daa
and
jae
test
adc
and
xchg
push
imul
enter
hlt
cltd
aas
pop
xorl
into
pop
shlb
dec
insb
clc
xor
pop
rorl
cmp
cmp
ss
orl
pop
inc
add
es
rolb
push
orl
pop
aam
fcmovne
test
cmpsl
or
shrb
outsl
pop
mov
not
mov
rclb
outsl
dec
push
mov
shlb
mov
sbb
add
sbb
jle
sbb
mov
inc
mov
mov
stc
jle
dec
data16
shll
sub
jb
mov
repnz
pop
jge
push
or
nop
lods
xchg
adc
fldenv
adc
js
add
fimuls
adcb
mov
add
mov
jb
add
pop
jp
pop
mov
out
sub
add
cwtl
hlt
add
loop
inc
add
adc
bound
in
adc
add
pop
lret
pop
lea
inc
xchg
test
cmpl
mov
divb
out
jg
push
or
loopne
push
stos
inc
and
or
jg
outsl
cmpsl
mov
sub
inc
imul
mov
sub
adc
and
jae
adc
nop
icebp
add
loopne
inc
rolb
ds
insl
add
mov
enter
mov
cmp
push
and
mov
stos
dec
mov
xorb
pop
add
xor
decl
jle
aam
sub
dec
add
adc
xchg
cmp
inc
dec
mov
icebp
scas
cmpsb
movsb
scas
mov
gs
sahf
jns
pushf
mov
jg
inc
sub
out
cmp
adc
fs
rolb
xor
mov
mov
vmptrst
jae
or
js
pop
sub
adc
dec
sub
fwait
xor
pop
add
dec
mov
jb
add
sbb
sub
dec
mov
cmp
ja
sub
pushf
lea
pop
mov
jl
out
flds
pop
xor
out
mov
jae
add
pop
sub
or
test
sub
and
scas
fmull
add
jno
sub
mov
lahf
adc
nop
xor
test
mov
les
add
lds
mov
push
inc
lret
or
push
dec
add
xchg
cwtl
or
shrb
test
pop
mov
add
adc
jb
add
lea
fdivp
sub
addl
pop
mov
or
add
in
subb
ret
cs
clc
xchg
ret
ds
add
sahf
fs
lock
std
scas
addl
mov
push
dec
pop
mov
dec
push
jbe
fsubl
movsl
add
loopne
sbb
xchg
sbb
popf
shl
stc
dec
cmp
jmp
vcvtsi2ssl
xor
dec
mov
cmp
stos
sub
aam
push
subb
imul
cmp
mov
add
js
sbb
add
int
sti
aad
mov
icebp
xorb
setb
lahf
sbb
or
dec
add
data16
cs
and
pusha
push
dec
add
arpl
shrb
add
mov
and
mov
cmc
pop
dec
mov
push
push
inc
cwtl
ss
mov
scas
das
lock
std
cmp
arpl
test
adc
out
std
jb
mov
push
inc
push
mov
add
fcmovne
out
lret
sbb
cmp
subl
nop
hlt
pop
cs
clc
cmp
xchg
pop
lock
cwtl
push
dec
add
xchg
and
pop
add
inc
mov
jecxz
sbb
repz
sahf
popa
sbb
adc
jnp
dec
in
add
xchg
add
loop
mov
and
mov
add
dec
add
lods
xchg
data16
add
pusha
and
into
testl
stc
sub
inc
cs
sbb
cmp
sbb
mov
nop
add
orl
xor
add
arpl
push
xchg
fisttpl
inc
sub
nop
add
fdivrl
lea
test
popf
mov
cmp
pop
out
add
stc
fidivl
xchg
call
aam
or
adc
adc
add
stos
cwtl
add
notb
sbb
movsl
jl
mov
adc
inc
jge
sbb
mov
sbb
loopne
inc
cmp
js
push
dec
arpl
and
dec
leave
mov
mov
popa
int
push
pop
lods
adc
sbbl
adc
cmp
popf
mov
mov
mov
pop
sub
clc
mov
mov
fwait
add
xchg
adc
cmp
rorl
insb
rcrb
sub
rolb
lock
aas
xchg
or
add
xor
out
imul
add
or
mov
sub
mov
add
push
loop
xor
jg
add
cwtl
imul
iret
lcall
sbb
add
jl
fisubl
test
and
jne
insl
sbb
in
push
mov
jae
mov
add
xorb
add
jo
and
add
flds
out
lock
add
xor
aad
mov
sub
push
and
jbe
test
xor
bnd
cmpb
add
inc
push
sbb
std
adc
pushf
mov
lahf
pop
popa
inc
or
xchg
add
cmp
add
fcomp
dec
pop
add
andb
test
xchg
or
xchg
add
sbb
and
sub
and
cmp
cmp
call
jae
mov
stc
adc
in
inc
inc
mov
pop
add
add
xchg
mov
xchg
testb
add
out
in
jno
out
in
imul
push
sub
push
test
add
scas
jle
mov
ss
aad
movsb
sbb
inc
and
loop
rcrb
add
inc
push
movsl
jo
dec
cmp
add
sub
mov
lea
add
out
inc
test
jae
incl
cli
mov
cmp
xchg
faddp
cmp
roll
cmpsb
mov
pop
sub
xor
lods
adc
push
jbe
loop
xchg
incl
fimull
fcoml
das
add
cmp
shr
pushf
adc
and
dec
pop
fisubl
aaa
mov
cmp
movsb
add
outsl
je
sub
add
pop
test
add
out
push
pop
mov
addb
js
pop
loope
and
sbb
lahf
fldl
inc
orb
addl
lcall
cmp
add
inc
jo
out
mov
add
inc
js
sub
insl
jne
sub
push
mov
jmp
cmc
sub
out
aad
ss
jne
shlb
mov
ljmp
add
mov
nop
in
dec
add
idivl
pop
pop
sub
add
adc
inc
push
mov
in
ss
aaa
aas
sbb
mov
imul
adc
cmp
cmp
clc
aam
mov
mov
rclb
lret
mov
sub
pop
xor
add
dec
inc
dec
mov
imul
dec
dec
add
lods
xor
xor
pusha
sbb
dec
pop
mov
pop
in
mov
imul
fwait
lahf
xor
clc
test
outsl
mov
in
jl
pop
test
add
insb
jno
andb
add
dec
loopne
adc
mov
add
or
sub
ret
lret
sbb
hlt
roll
scas
inc
rclb
jmp
lock
and
mov
pop
sbb
sub
xor
test
or
jns
data16
daa
add
insl
nop
scas
pop
rcl
mov
adc
fldt
and
add
mul
in
pop
sbb
mov
sarb
xchg
dec
mov
stos
sbb
or
addr16
pusha
and
sbb
cmpsl
adc
sub
jne
jmp
mov
jo
mov
pop
inc
fisubs
cs
ret
xor
dec
das
mov
inc
add
dec
add
pop
cwtl
daa
or
inc
mov
add
xor
push
jecxz
mov
mov
mov
xchg
testl
dec
in
or
add
push
ret
je
add
xchg
push
push
roll
inc
mov
lret
cwtl
adcl
jg
in
rcrb
aas
and
mov
fwait
pop
pop
mov
or
ret
dec
stos
inc
add
in
add
xchg
inc
jae
cmp
xchg
in
sbb
inc
aas
and
fisttpl
fdivl
add
adc
push
and
or
and
adc
sbb
lret
sbb
and
leave
adc
dec
sbb
push
and
adc
pop
inc
leave
pop
lods
ss
sub
add
pop
fmull
push
sbb
dec
mov
push
add
into
or
or
les
and
add
adc
xor
out
cmp
add
and
data16
pop
cld
sub
rcll
loopne
inc
or
pushf
pop
loop
add
inc
data16
or
cmp
pusha
jg
xchg
test
mov
mov
push
insb
jnp
pushf
sahf
add
inc
jbe
push
mov
pop
push
test
les
adc
inc
inc
add
in
stos
push
add
fdiv
adc
xorb
ficomps
sbb
push
arpl
or
add
pop
fcoms
rclb
popf
or
xchg
negb
mov
repz
cmpsb
ds
les
jge
adc
mov
xor
pop
popa
sbb
inc
lret
aad
inc
lahf
sub
and
fstpt
lret
inc
lds
cwtl
outsl
sbb
jno
xor
mov
jb
mov
subb
sbb
sahf
sub
mov
mov
sub
stos
pop
inc
add
fnstsw
or
dec
mov
add
mov
cmp
add
or
add
lock
call
xchg
adc
or
push
cltd
jg
add
push
stc
pop
inc
nop
inc
cmp
cmpsl
xchg
xchg
xor
jne
pushf
movntq
out
outsl
les
rolb
shrl
add
scas
ds
das
xchg
xchg
add
pop
outsb
mov
ret
dec
hlt
mov
ja
sbb
or
lock
push
lea
stos
cmp
xchg
jmp
jbe
pop
jnp
mov
shlb
add
mov
loop
add
mov
imul
fistl
pushf
mov
jecxz
inc
mov
sub
mov
test
and
sub
outsl
xor
add
xlat
incb
add
js
subb
mov
ficompl
adc
xor
inc
or
or
push
sub
sbbb
push
push
jne
or
sarb
or
or
adc
or
fisttpl
in
in
mov
and
adc
mov
adc
orl
add
mov
and
lods
popf
mov
punpckhdq
push
loopne
cwtl
jp
cmp
faddl
sub
adc
cmp
push
adc
je
hlt
lods
mov
ljmp
scas
bound
jne
add
lcall
add
arpl
or
cmp
insb
mov
jecxz
cmp
arpl
hlt
inc
into
xor
pop
xchg
leave
sbb
adc
jnp
push
add
jg
mov
add
sbb
push
lods
mov
mov
fst
daa
popf
test
xor
loopne
inc
lods
mov
cmpsl
dec
aam
das
cli
sarl
in
push
loopne
add
xor
ds
dec
enter
dec
aas
mov
cwtl
mov
mov
sub
add
xchg
out
pop
cmp
lods
test
cmpb
sub
add
mov
mov
ret
push
imul
clc
mov
adc
mov
hlt
jb
xor
add
dec
adc
jg
jg
and
gs
and
shll
out
push
inc
xor
mov
add
dec
xchg
sub
sbb
notb
test
popa
add
inc
xchg
mov
push
loope
cmp
xor
pop
shlb
les
jmp
inc
fstps
and
push
mov
xlat
in
inc
int
cmpsl
push
dec
add
bound
add
rcr
add
addr16
js
jle
mov
popa
sbb
add
lock
negl
push
or
sbb
and
jns
mov
test
jecxz
inc
scas
or
and
rolb
inc
adc
adc
vmptrst
faddp
inc
mov
lods
rcrl
pusha
or
push
test
fists
lds
jne
lret
call
fsubrs
out
push
inc
rcll
add
test
aam
iret
out
add
or
cs
sub
and
xor
stos
add
popf
add
jmp
lds
sbb
js
aad
inc
test
dec
pop
in
aaa
sbb
push
rcrb
inc
jno
ja
les
inc
jb
push
cmpsl
inc
insl
sbb
inc
out
inc
mov
cmpsl
sub
and
and
in
sub
rcrb
nop
jns
test
pop
loope
jl
mov
xchg
adc
push
mov
out
jns
hlt
push
mov
das
cwtl
mov
xchg
push
pop
cmpsl
sbb
dec
int3
rcrl
gs
add
jns
aaa
out
leave
call
push
pusha
cld
xor
inc
lcall
add
shlb
add
repnz
sbb
je
loopne
sub
fcompl
and
mov
push
mov
repz
iret
das
rcrb
add
dec
mov
test
mov
ret
jnp
filds
mov
push
jl
out
sbb
or
cmp
aaa
pop
addr16
bound
pop
or
fwait
idivl
mov
test
ds
sbbb
repnz
stos
xor
out
mov
xchg
insl
aaa
call
push
cmp
out
push
cmpsl
jae
add
jae
xchg
ficompl
pop
cmp
push
add
ret
int
add
ss
sti
rorl
outsl
mov
sub
mov
add
insl
pand
and
mov
test
loop
jl
or
inc
mov
sbb
lret
aaa
add
xor
xor
add
or
shrb
add
jge
cld
stc
inc
repnz
add
enter
lret
add
ljmp
insl
add
in
xor
sub
cmp
test
jb
push
ja
mov
nop
mov
dec
je
mov
popf
add
xchg
mov
push
push
mov
add
jl
jg
and
out
repz
sub
mov
xchg
add
fsubp
add
jbe
sbb
mov
repz
jp
incl
popf
dec
in
mov
push
repnz
push
jge
ss
shll
into
mov
cld
sbb
mov
testl
add
xor
mov
jle
loope
pusha
lds
inc
inc
pop
aad
cmp
jnp
shl
lods
sub
cmp
inc
dec
clc
shll
add
push
mov
cmp
adc
test
add
movsb
cld
add
cltd
in
das
aam
cwtl
rolb
bound
cmp
cmpsb
add
les
mov
jnp
aam
xchg
or
pop
adc
pop
push
int
adc
dec
mov
mov
sbb
fwait
xor
adc
mov
xor
mov
jbe
and
fmuls
add
xchg
arpl
test
cmp
and
fdivr
add
xchg
or
mov
test
mov
ja
and
insb
sub
mov
push
add
jnp
insb
mov
add
aas
es
cmp
dec
push
fsub
mov
cmc
aad
fcomip
lret
add
sub
push
push
int
add
push
mov
scas
rclb
pop
scas
jno
and
repz
dec
shrb
jg
add
push
rolb
ret
jbe
push
add
push
jmp
or
insl
outsb
lret
cmc
add
in
adc
pop
aad
mov
addb
insb
repz
loop
jmp
and
mov
fidivs
add
inc
mov
mov
and
jbe
cmpsb
int
cmp
cs
dec
lcall
jb
add
aam
rclb
sti
stos
repz
pop
jp
cmp
sub
cmp
inc
pop
call
aad
loopne
jae
pop
push
push
add
pusha
test
add
scas
sbb
and
hlt
add
mov
push
inc
fstpt
loopne
mov
add
mov
xchg
mov
mov
jno
sbb
shl
divb
es
jbe
aaa
loopne
jno
add
call
mov
add
dec
mov
and
mov
adc
fsubrs
subb
rcrl
std
xchg
dec
cmp
rorl
cld
add
in
sti
dec
dec
add
or
xchg
pop
pop
pop
or
rolb
adc
stc
hlt
insb
mov
add
pusha
movsb
pop
dec
fwait
aaa
adc
push
in
inc
cmp
or
insb
call
fldl
decb
loopne
push
add
sbb
fdivrp
in
adc
hlt
clc
cs
aaa
lcall
in
push
or
inc
pop
xchg
outsb
jge
add
mov
mov
sub
add
cmp
das
add
jl
mov
sub
jae
add
sar
inc
ljmp
or
fmull
xor
sbb
xchg
and
add
out
mov
add
xchg
int3
cwtl
push
fiadds
jns
ret
stos
shll
fcomps
mov
adc
dec
rolb
aas
loop
jp
mov
adc
inc
das
add
fsubrl
or
jmp
mov
repz
and
dec
mov
leave
add
shlb
adc
ret
jno
js
xchg
cmp
push
xchg
lret
push
push
lahf
or
sub
mov
outsl
push
enter
xor
sub
xchg
add
adc
xchg
movsl
in
add
sub
dec
int3
xor
loopne
add
add
scas
cwtl
jge
push
push
add
push
sbb
and
add
ja
jmp
imul
es
adcb
add
je
lds
add
sbb
jo
loope
sub
test
add
fldcw
sub
rolb
fildl
xchg
scas
addb
add
xor
push
sarb
inc
clc
xchg
test
or
and
mov
cmovbe
flds
ss
repnz
out
pop
in
cmp
add
mul
jb
xor
fnstcw
bound
or
xor
push
pop
jl
jnp
add
ret
jge
out
add
or
ja
add
jp
adc
sbb
lahf
pop
add
test
push
jnp
ret
add
outsb
lds
icebp
popa
clc
add
xchg
repnz
movsl
je
ret
adc
cwtl
rolb
sub
iret
ss
push
xor
imulb
add
popa
adc
xchg
push
mov
dec
leave
das
mov
pusha
stos
jmp
jecxz
dec
sub
sahf
pminsw
cmp
lret
scas
outsl
int3
mov
add
mov
dec
mov
xchg
push
roll
xchg
xchg
insl
icebp
add
gs
imul
lods
jae
scas
add
rol
xchg
mov
cltd
adc
fdivrl
lds
cwtl
dec
mov
add
in
push
add
lods
dec
jmp
adc
pop
add
dec
mov
adc
push
add
push
mov
das
push
dec
push
cwtl
add
pusha
add
jae
jg
incl
push
or
les
lods
add
and
push
jg
repz
ds
xchg
push
sbb
adc
add
fwait
xor
in
mov
pop
pop
pop
sbb
fcomi
or
fs
jle
mov
outsl
or
mov
add
push
mov
test
aad
inc
mov
ljmp
xchg
pop
insb
dec
push
jge
rolb
loopne
insl
pop
add
mov
mov
cmp
cs
fwait
pop
or
or
push
loope
cmpsb
push
shrb
cmp
sub
cwtl
push
incb
lods
sti
mov
cmp
xchg
mull
inc
ja
mov
bound
std
aam
out
aaa
adc
sbb
in
jg
aas
sbb
cmp
pushf
enter
dec
push
aas
incl
push
mov
add
adc
inc
add
das
in
sbb
aaa
pop
lret
outsl
mov
mov
test
sahf
clc
stc
testl
leave
push
inc
inc
mov
pop
mov
add
pop
dec
pop
dec
xchg
cmp
imul
mov
insb
add
pusha
into
addl
test
rcll
lcall
adc
inc
add
cltd
mov
push
mov
or
enter
cmc
test
push
push
ljmp
icebp
loopne
lods
or
add
sarb
pushf
in
rcll
aad
dec
jo
test
shlb
ss
ljmp
add
jne
adc
shrb
cmpsl
or
pop
imul
push
cmp
add
mov
inc
sbb
or
mov
add
cmpsl
rclb
pop
adc
imul
pop
shll
imul
enter
pop
and
shlb
xor
sub
and
jne
add
je
and
or
in
dec
addb
xor
mov
sub
pusha
jg
add
gs
out
jg
hlt
add
xor
lock
add
push
push
popf
and
shlb
outsl
aas
xor
pusha
cli
pop
add
adc
loopne
pop
jno
add
repnz
repnz
mov
mov
jmp
and
adcb
push
gs
adc
iret
and
call
out
stos
daa
gs
add
punpckhwd
int3
fcoms
lods
add
xchg
xchg
enter
add
sub
dec
xor
jb
subl
push
inc
adc
test
add
cmp
ss
mov
mov
inc
inc
pop
loopne
lcall
inc
repnz
clc
outsl
jp
add
das
xchg
scas
orl
ror
jge
add
scas
push
repz
daa
mov
add
sub
mov
mov
sti
and
enter
test
add
inc
mov
push
lcall
loopne
or
cmp
stc
add
inc
and
add
jge
push
add
out
ror
aam
add
hlt
pusha
mov
sub
sbb
cld
sahf
lock
xchg
fimull
fsubs
repnz
add
std
mov
and
pop
pusha
or
or
xor
pop
adc
aam
cltd
pop
incl
arpl
pusha
cwtl
xchg
popf
in
dec
fsts
pop
adc
outsl
pop
inc
xor
lds
bound
mov
lahf
stc
es
add
sbb
aam
popf
aad
pop
pusha
pusha
cmp
fs
mov
add
aam
call
pop
jno
add
mov
addl
stc
je
loop
loope
xchg
js
pop
nopl
or
mov
sub
cwtl
call
dec
test
rorb
stos
mov
shr
add
int
sbb
jl
jns
imul
incl
loopne
shl
inc
adc
test
insb
outsl
xchg
pop
data16
xorb
movsl
and
sub
cmp
add
aad
jg
aam
sbb
dec
out
add
sbb
and
sbb
cmp
fs
dec
lods
dec
popa
sub
repz
add
jnp
ret
mov
jo
sarb
inc
pop
add
lods
mov
push
push
or
add
mov
add
push
imul
add
sbb
call
faddl
pop
jae
xchg
fcomp
xlat
add
mov
negl
loopne
stc
jecxz
into
or
mov
mov
push
mov
push
fmuls
loop
aaa
leave
xorb
and
jne
pop
hlt
and
mov
xchg
cmp
fistl
movsb
ds
add
pusha
cmp
out
xchg
insl
adc
add
dec
nop
xchg
sbbb
lock
mov
adc
rorb
add
cli
mov
into
scas
cmp
add
arpl
fdivs
mov
add
out
out
or
arpl
in
inc
sub
cmp
add
mov
add
sbb
push
cmp
sbb
leave
add
hlt
mov
adc
jae
lds
repnz
inc
movsb
out
push
mov
inc
ljmp
jae
xchg
out
add
fucomip
add
nop
cmpsl
sbb
dec
jae
or
pop
rcrl
fsubp
fpatan
aam
add
movsb
add
jne
lcall
xor
stc
inc
adc
sub
xchg
xchg
push
mov
mov
add
cli
fs
aad
lcall
push
jle
jae
add
iret
sahf
insb
adc
cmp
orb
cltd
or
fisubs
push
mov
aam
push
jno
xor
test
es
xchg
or
inc
or
test
mov
cmpsl
shlb
mov
inc
cmpb
add
addl
mov
shll
inc
mov
in
pop
add
mov
ds
mov
xchg
xchg
leave
adc
pushf
push
jne
add
push
lahf
std
xorb
ret
and
lret
xchg
sub
leave
add
mov
pusha
into
pushf
sbbb
sti
xchg
mov
insl
add
pusha
icebp
mov
pop
stos
jp
add
daa
cwtl
sub
aad
cmp
sbb
leave
fdivs
mov
and
mov
mov
dec
dec
lods
dec
iret
add
sbb
push
xchg
and
rclb
out
jg
adc
pusha
dec
pop
add
inc
and
cmpsl
add
adc
push
mov
aam
push
pop
cltd
and
add
and
mov
mov
lcall
mov
inc
add
adc
int3
dec
dec
sub
add
lods
mov
dec
cmpsb
xchg
sbb
lret
je
add
jbe
jae
adc
mov
cmp
lods
inc
das
dec
xor
push
sbb
test
add
sub
test
add
mov
aas
cmp
xor
lret
loopne
hlt
mov
add
inc
add
test
add
inc
fsub
sub
je
cld
cmp
xor
push
ss
hlt
mov
nop
add
inc
xor
and
inc
les
aad
push
mov
sbb
inc
or
lock
leave
xchg
sbb
gs
fildll
cmp
fs
mov
cmp
inc
add
ja
sbb
mov
add
sub
lret
jb
push
sahf
int3
push
mov
push
aam
adc
sbb
scas
lock
pop
pop
pop
inc
test
into
jnp
mov
clc
xchg
rcll
xchg
js
pop
testb
aam
int
test
add
sub
inc
jo
int
out
cmp
add
rorb
pop
fdivrs
inc
pusha
iret
aad
addl
cmp
inc
lock
test
pop
pusha
fcomp
repz
jns
inc
out
icebp
jae
add
aas
enter
cwtl
std
les
lods
add
fcoms
movsb
rcrb
add
daa
adc
jp
call
enter
gs
cltd
popf
sub
cmp
pop
push
push
pop
add
jge
fcoml
push
and
dec
std
mov
outsb
repz
leave
push
jo
stc
cld
icebp
dec
sub
inc
js
les
add
sti
incl
out
mov
loopne
je
mov
jmp
adc
push
push
mov
mov
popf
or
add
roll
xchg
mov
push
adc
in
lods
or
add
fwait
ret
jl
add
or
cmc
add
pusha
xor
outsl
jl
add
mov
pop
loopne
mov
fdivrs
sub
xor
mov
orps
cmp
or
pushf
sbb
jmp
dec
and
mov
mov
push
and
or
mov
cwtl
das
outsb
cld
inc
fcoml
int3
repz
dec
and
fisttpl
mov
push
incb
add
cld
inc
jne
add
dec
dec
shll
push
cmp
int3
mov
cmc
mov
pop
incb
in
jl
lcall
pop
push
xchg
enter
cmp
xchg
add
mov
cmp
mov
sub
or
out
xor
add
scas
add
lcall
roll
dec
pop
in
rcl
outsb
sub
jecxz
pushf
adc
test
iret
or
fnstcw
rcrl
test
repnz
hlt
pop
add
push
fistpl
sbb
mov
into
jg
mov
fistps
sbb
xor
push
cmpsb
cltd
call
ret
dec
inc
xor
jb
push
in
add
scas
mov
test
and
mov
roll
test
pop
push
xor
xchg
add
sbb
mov
addb
mov
mov
test
lock
jae
cld
orb
cmp
and
test
and
leave
add
cltd
fbstp
cld
fdivr
insl
or
es
push
sub
pop
rcrb
cmc
inc
add
inc
into
and
jb
cmpeqps
adc
jne
add
pop
pop
adc
fmuls
add
lock
pop
popl
gs
jne
sbb
lock
dec
xor
outsl
inc
inc
mov
pop
adcl
push
add
cwtl
push
jp
jno
jne
or
pop
incb
lods
andb
xchg
out
int
lds
lahf
pop
push
sahf
aam
adc
or
scas
push
pop
pusha
or
repnz
aad
clc
mov
sbb
mov
cmp
jae
movsb
cmp
push
add
js
jns
rorb
shll
pop
dec
cltd
push
pop
add
sub
aam
push
movsl
fwait
pop
shrb
in
push
clc
scas
add
lahf
cld
mov
cmp
fisttpl
lds
add
testb
mov
jae
add
lods
cmpsb
jno
scas
js
push
flds
pop
add
sbb
decl
push
movsb
sub
add
xor
pop
jmp
scas
and
sbb
or
adc
sub
push
addr16
daa
add
rcl
repz
fiaddl
icebp
subb
fldl
sub
cli
jbe
jb
add
cmp
fcoms
leave
dec
add
sub
push
iret
dec
sub
sbb
add
loope
inc
add
movsl
cmp
mov
inc
stc
icebp
lock
sahf
cld
push
jo
pop
leave
add
mov
jp
pop
je
jae
leave
add
insb
call
imul
cltd
ficomps
rclb
call
xlat
daa
je
add
mov
add
roll
inc
fcoml
fisubs
cmp
andb
popl
cmp
popa
mov
add
addr16
in
fstps
enter
sahf
iret
push
push
cmpsl
in
push
add
sbb
js
decl
repnz
sub
add
leave
dec
popa
pop
call
nop
jo
inc
mov
sub
mov
mov
cmp
int3
lea
pop
out
stos
add
xchg
add
rclb
call
jnp
dec
mov
push
cmp
mov
pop
cwtl
or
push
xchg
add
addr16
jbe
push
mov
or
adc
std
add
adc
loop
mov
test
push
dec
push
div
xlat
add
out
push
call
outsb
dec
push
mov
jae
push
mov
imul
dec
add
repz
divb
cmp
and
mov
jno
mov
sbb
ljmp
xchg
xchg
jge
je
add
mov
or
es
jo
shll
imul
mov
pop
cmp
test
xor
hlt
es
mov
xchg
push
dec
inc
popa
adc
add
push
je
add
call
insb
pushf
pop
adc
push
sub
lahf
movsl
mov
fdiv
add
or
dec
outsb
popa
pop
adc
push
dec
dec
inc
scas
imul
sbb
cld
outsb
pop
add
aaa
xlat
cld
xchg
cmc
push
mov
dec
mov
mov
aad
loopne
xor
push
add
or
fldcw
adc
pop
ret
pop
test
sbb
mov
xchg
popf
sbb
and
aam
or
pusha
and
cmp
test
cmpsl
pop
and
inc
sbb
mov
sete
inc
xor
inc
adc
sub
adc
dec
cli
das
mov
mov
mov
je
push
popa
and
dec
call
jnp
pop
fistps
clc
icebp
mov
mov
adc
loop
add
inc
imul
movsl
sbb
add
in
je
jecxz
rorb
hlt
adc
push
repz
rorb
adc
sub
mov
mov
mov
or
out
aam
ror
es
mov
lcall
sbb
mov
xorb
int
xor
loope
pop
jo
add
popl
add
cwtl
shrb
adc
in
out
dec
jb
inc
pop
scas
outsl
and
mov
inc
adc
iret
jle
mov
fwait
push
inc
mov
and
jg
mov
shlb
xchg
sbb
jo
cmp
xor
addr16
mov
dec
movsb
adc
and
xor
add
jo
mov
lret
ss
dec
insb
loopne
or
xchg
rorb
pop
mov
add
push
jo
loopne
lcall
addl
add
adc
fcoms
xchg
test
adc
mov
add
jae
jge
gs
aad
xchg
add
adc
outsb
js
mov
or
xchg
je
call
lock
scas
mov
sub
adc
shr
xchg
jbe
mov
fisubrl
xor
jo
sbb
add
shrl
lock
push
ret
fdivs
comiss
mov
sbb
out
test
fnsave
adc
fmulp
cmpb
add
sbb
sub
sub
fadd
hlt
je
add
push
lahf
loopne
push
cltd
movsb
int3
cmp
push
jne
dec
rcrb
xchg
mov
pushf
enter
dec
adc
scas
jbe
incb
push
adc
out
sbb
add
aad
jl
repz
cmp
inc
addb
scas
and
adc
jnp
add
loopne
stc
mov
faddl
mov
int
mov
sbb
test
jne
add
inc
xor
sub
mov
xchg
test
cmc
cld
cmp
pop
add
mov
cs
loope
seta
stos
or
jmp
mul
lahf
adc
cmc
jb
or
out
testl
rcll
or
pusha
add
mov
jecxz
xlat
adcb
and
add
arpl
imulb
popa
pop
sub
sub
jecxz
mov
aaa
and
sbb
or
pop
inc
in
les
ljmp
filds
push
imul
popf
test
test
cmp
add
jmp
das
jno
std
sbbb
les
dec
and
add
mov
fstpl
add
jno
fldt
lods
mov
lea
xor
enter
pop
add
mov
push
mov
xor
push
xlat
push
cmp
jle
fsubrl
sbb
cmp
mov
adc
addl
mov
bound
xchg
xchg
rorb
add
jae
add
mov
sbb
cwtl
clc
dec
add
jmp
mov
pop
push
out
sub
mov
fidivs
repnz
add
pushf
xor
fistps
test
and
cmp
subb
pop
inc
stos
or
inc
pusha
shll
xchg
les
lods
add
dec
inc
or
xchg
fcoms
inc
mov
les
mov
cli
fbld
dec
enter
clc
and
aad
rclb
add
xchg
push
cmpb
arpl
xor
jns
dec
pop
shll
lea
adc
cmpsb
fsubl
sbb
pop
add
sar
jae
rcrb
fs
int
jno
das
inc
mov
mov
rorb
jno
es
push
test
add
jmp
mov
add
mov
jmp
aaa
add
bound
sbb
push
xor
repnz
fwait
and
int3
sub
or
repnz
fwait
sbb
add
hlt
cmp
outsl
shl
jnp
sti
add
xor
leave
jmp
xchg
punpckldq
sbb
inc
pop
ds
lock
xlat
or
jo
mov
mov
fiaddl
cmpl
push
out
nop
into
outsl
push
pop
jle
ja
loope
add
sbb
icebp
loopne
stc
add
xor
add
mov
out
mov
cmpsb
hlt
sbbb
sub
add
cli
push
mov
add
mov
stos
rolb
loopne
dec
shlb
pop
pop
mov
jge
int
cmpsl
cmp
xor
xor
ljmp
pop
mov
push
lret
adc
mov
stc
hlt
iret
sub
aad
nop
push
inc
sti
and
adc
add
dec
cltd
loope
sbb
hlt
or
and
xor
inc
incl
adc
frstor
xor
inc
or
xor
int
fs
daa
loop
add
xchg
sbb
push
aam
add
cli
inc
pushl
mov
xor
ret
dec
jno
insl
add
push
or
add
cmp
pop
cmp
push
or
and
hlt
mul
addr16
jae
push
cwtl
dec
dec
push
add
lods
inc
rolb
jne
fsubl
addb
dec
sub
pop
add
repz
bound
push
sbbb
pusha
push
pusha
sbb
dec
fisubs
sahf
imul
popa
push
pop
cmpb
mov
pop
and
cmp
jns
mov
pop
ficompl
aaa
jp
ror
jmp
adc
arpl
mov
icebp
push
and
adc
mov
int3
sahf
inc
add
pop
mov
test
repnz
negb
stos
sbbw
add
outsl
mov
lahf
addr16
es
xchg
sbb
pop
movb
testl
xchg
mov
pop
bound
and
add
fst
and
lahf
pop
xchg
pop
ja
sbbl
es
fidivrs
leave
or
and
aas
add
faddl
add
imul
aaa
fwait
xchg
mov
scas
mov
or
fbld
push
add
push
mov
nop
xchg
fs
pop
aam
and
icebp
or
pop
loopne
push
adc
lahf
inc
loopne
decl
out
jmp
sub
or
xchg
xchg
roll
add
mov
test
sub
and
fsubrs
inc
stos
cmc
add
and
sbb
movl
in
ss
jb
rcrb
sbbb
or
je
lods
aam
lret
test
push
xlat
mov
addr16
insb
xchg
movb
adc
xchg
scas
stos
mov
add
shrb
mov
stos
es
orb
filds
out
loope
xchg
incb
jo
int
ss
cmp
push
mov
mov
xchg
inc
movsb
das
xchg
mov
mov
dec
add
and
ljmp
mov
dec
cmp
imul
lock
push
push
pushf
rcl
jns
add
ret
dec
push
sub
and
lahf
inc
mov
lock
movsb
ret
sbb
or
dec
jmp
pop
ss
mov
sub
cmpsb
test
pusha
mov
out
popw
shlb
inc
scas
add
dec
mov
cmp
testb
andl
add
fisttpl
mov
movsb
pop
cltd
add
xchg
lret
repnz
push
data16
xor
add
outsb
sbb
mov
pusha
inc
in
shrb
or
push
inc
mov
ja
pop
cwtl
icebp
mov
dec
mov
add
imul
mov
adc
push
and
aas
aad
add
ja
inc
add
mov
pop
push
mov
xchg
loopne
cmp
mov
cmp
pop
xchg
mov
jo
or
mov
and
pusha
repnz
sbb
jb
lock
cltd
sbb
sahf
or
xchg
movups
cmp
sub
jle
mov
iret
inc
mov
mov
inc
adc
lahf
mov
mov
add
inc
jo
or
outsb
xor
jp
jmp
pop
test
aam
movb
adc
fucomip
test
jnp
fimuls
lock
out
ficomps
push
ja
std
cld
jbe
add
popa
xor
sbb
mov
arpl
aas
xchg
xor
lret
ds
int
lcall
push
or
movl
mulb
jp
cltd
jno
mov
adcb
inc
mov
shl
or
push
sub
mov
scas
mov
jnp
testl
sub
sbb
push
add
ret
adc
mov
mov
int
orb
lea
daa
jns
fistl
loopne
cmp
jge
or
inc
mov
mov
jg
stos
pop
push
hlt
das
mov
add
test
xchg
scas
dec
repnz
fadd
sbb
xor
inc
insl
aam
mov
jmp
add
jno
add
pop
dec
push
test
push
pop
dec
pop
rorb
insb
int3
xor
sub
iret
inc
cltd
sub
imul
add
and
mov
mov
sarb
cmpsb
adc
add
clc
lret
ror
cmp
pusha
cmp
repz
pop
movsl
mov
push
shll
and
xchg
mov
stos
or
inc
push
shlb
mov
sub
ret
pusha
ja
gs
lods
insb
push
and
enter
push
pop
dec
sub
or
jno
pop
fcomps
add
sarb
sub
sub
addb
pop
frstor
mov
ja
bswap
mov
xor
in
sbb
add
fstpl
stc
dec
shr
mov
nop
bound
adc
sbbb
sub
arpl
jmp
jo
pop
inc
cli
ficompl
push
nop
nop
add
mov
ja
ret
add
add
divl
cmp
pushf
xor
hlt
or
sti
addl
sbb
sahf
fidivs
xor
aas
into
pop
cli
push
pop
ret
jmp
xor
loopne
es
jp
add
sub
cmp
push
js
shlb
mov
push
mov
pop
clc
jb
scas
adc
add
pop
jl
jnp
inc
hlt
jp
add
cwtl
mov
not
daa
push
dec
cmp
sbb
andl
mov
repnz
sbb
mov
xchg
out
psubb
jecxz
xchg
sbb
popa
in
clc
out
and
ds
rorb
ja
and
jb
iret
cld
mov
sbb
outsb
push
sbb
xlat
jp
xchg
xchg
out
mov
movsl
mov
lret
adc
out
lea
inc
rcl
dec
sub
inc
and
fwait
lods
xor
mov
aaa
mov
aam
cmp
mov
cmp
notb
lods
insl
lcall
out
add
out
inc
and
ror
inc
pusha
pop
add
std
andl
push
movsb
sbb
jae
jg
pop
pop
adc
out
add
cwtl
jb
cmpsb
repz
add
lock
push
adc
jo
add
or
mov
outsb
stos
jae
mov
add
mov
add
xor
dec
jno
roll
ljmp
jns
jne
insb
stos
mov
sar
and
in
les
dec
nop
mov
or
fistps
xor
mov
push
cwtl
mov
xchg
shlb
xor
in
sbb
repnz
sbb
push
mov
mov
pop
and
cmp
addb
add
sbb
push
pop
iret
imul
lea
xchg
xor
sub
test
add
fdivrl
lods
mov
or
push
or
hlt
push
movups
pop
sub
mov
outsb
aam
xor
or
add
xchg
inc
xor
sbb
ss
add
mov
test
mov
push
dec
pusha
adcb
jo
cmc
sbb
xor
mov
sbbb
add
dec
sub
pop
loopne
int
out
add
mov
ja
test
icebp
decb
xchg
mov
call
add
mov
push
and
xor
arpl
imul
push
clc
and
adcb
lahf
movsb
icebp
stos
fiadds
popf
iret
lret
stos
lret
movsl
and
rclb
mov
and
fisubs
cld
ja
add
inc
dec
cmp
add
mov
mov
mov
gs
sub
leave
cmc
fcmovnu
pusha
ret
ja
stc
pop
sbb
iret
push
or
or
xchg
xor
add
mov
ret
cmp
popl
das
xchg
cmpl
jns
add
xchg
idivl
dec
push
sbbl
add
jge,pt
cmpsl
out
sbb
pop
sbb
sub
sub
hlt
dec
test
or
outsl
mov
push
or
shll
lock
stos
daa
shlb
inc
outsb
punpckhdq
or
or
xor
cmp
mov
arpl
cmpl
jp
rclb
and
sbb
mov
mov
movsl
dec
mov
mov
fs
cli
loop
fbld
xchg
rcrb
pusha
mov
sbb
jle
mov
pushf
in
test
sbbl
cmp
adc
mov
dec
push
cmp
cld
add
aas
out
sti
loopne
mov
push
subl
insl
fisttpl
jg
fisubs
lds
adc
adc
repnz
mov
add
scas
fmul
push
lods
cmp
xor
fadds
call
push
sub
negl
xchg
lods
or
loop
cmp
ljmp
and
fdivrl
lock
add
pop
orb
arpl
lahf
cmc
es
test
roll
mov
aad
add
xchg
or
push
in
xor
pop
dec
xchg
xor
xor
push
and
fs
pusha
xlat
and
repnz
lret
in
inc
add
gs
and
bound
rorb
lds
mov
and
lds
aam
lret
ja
xchg
fadds
inc
nop
jmp
xorl
xor
fistpll
sahf
into
and
pushf
std
orl
lcall
sub
dec
pop
add
orl
imul
adc
add
jecxz
cmp
adc
ss
mov
negb
out
inc
sarl
xor
and
in
fnstcw
data16
paddb
or
addb
cmp
add
out
test
js
imul
shlb
push
fcoms
xor
mov
cmp
sbb
hlt
repnz
or
sbb
sbb
cmp
lods
cmp
jle
lahf
lods
xor
add
jae
push
add
out
add
outsb
cmp
dec
jae
add
loope
sub
pushf
rorb
mov
push
loop
or
lahf
out
dec
sbb
fisubs
pop
leave
loope
insl
mov
push
cli
test
call
sbb
aas
pop
loopne
adc
loop
je
jl
mov
xor
pop
jl
add
das
int
add
push
add
xor
mov
adc
add
stc
and
xchg
cltd
lcall
push
mov
mov
xchg
mov
int
imulb
imul
sbb
add
or
xor
or
and
bswap
xchg
call
fadds
cmp
sqrtps
sbb
add
mov
popf
add
rol
inc
mov
jge
jno
xor
je
or
data16
rolb
ret
shlb
mov
je
fisttpl
mov
or
hlt
sub
sub
mov
popa
mov
orl
and
push
and
xchg
fiaddl
lock
pusha
push
loope
insb
and
sarb
mov
hlt
add
fsubl
mov
jne
insb
add
repz
enter
and
int3
loopne
dec
mov
cmp
dec
or
push
add
mov
negb
add
dec
cmpsb
mov
cmp
mov
adc
mov
mov
leave
ja
add
lods
push
inc
ja
pop
mov
inc
cmc
jmp
outsb
add
fists
add
cltd
jge
add
push
jns
ret
loop
add
mov
std
cmp
aam
xor
cmp
inc
adcb
enter
or
inc
push
lods
in
add
and
ja
jecxz
imul
shlb
push
pop
test
sub
cmp
stos
jmp
add
lahf
mov
jl
call
pop
mov
jno
cmp
aas
adc
push
or
mov
add
repz
lock
fisubl
imul
aas
xor
mov
enter
add
xor
and
jns
pop
lret
movsl
jnp
cmc
add
or
push
mov
mov
inc
out
add
ror
dec
call
push
addb
add
int3
inc
loopne
adc
adc
aam
in
mov
add
dec
movsl
fiaddl
push
icebp
in
mov
imul
dec
mov
fst
and
mov
aas
sahf
fldl
xchg
into
pushf
rclb
idivl
sub
mov
or
out
add
sbb
jmp
add
popa
cltd
ret
cwtl
xlat
add
push
inc
push
pop
adc
mov
mov
fbstp
add
arpl
cmp
or
rclb
inc
add
popf
int3
cs
mov
addr16
stos
lret
fisttpl
dec
push
sahf
pop
and
xor
jl
call
xchg
mov
and
mov
cli
nop
addb
or
call
inc
mov
mov
arpl
push
std
fnstsw
movsb
push
rolb
mov
adc
mov
cmp
xchg
div
xor
sub
xor
jecxz
add
mov
rcl
jle
pop
mov
lock
test
stos
add
cltd
push
mov
pop
ret
add
push
aas
add
sarl
add
jecxz
nop
add
pop
adc
sub
cmp
cld
aas
inc
sarb
mov
dec
adc
addr16
loopne
je
mov
out
add
mov
lcall
mov
jne
lods
fdivrs
adc
and
pop
mov
lods
clc
cmp
mov
cld
push
add
ljmp
mov
ficoml
dec
call
xchg
pop
push
insb
daa
add
scas
mov
add
inc
int
cli
add
aam
sub
sbb
outsb
add
cmp
cmp
mov
lods
call
lret
xchg
out
xor
ljmp
cmp
fwait
add
dec
pop
addr16
jbe
add
sbb
aas
mov
add
in
ljmp
lcall
mov
xchg
fucomip
add
mov
push
out
sub
in
pop
jge
cld
subl
icebp
sub
enter
jo
dec
loopne
push
nop
sub
popa
jg
cli
xlat
jbe
rcr
aam
sub
in
stc
adc
fxch
add
movsl
push
ja
iret
add
data16
cmc
pop
jmp
lret
test
cmpb
and
mov
xor
lods
fdivs
dec
mov
mov
and
mov
popl
aam
subb
hlt
xchg
cmp
pop
fsubrl
mov
jno
lea
mov
cli
or
dec
mov
jecxz
rcrb
pop
push
imul
mov
arpl
pushf
adc
add
dec
lock
jns
add
mov
hlt
add
add
xchg
or
add
scas
add
lods
or
adc
pop
call
stos
repz
out
nop
cmp
inc
xchg
fidivs
push
sub
pop
clc
add
pop
inc
daa
or
inc
cmc
mov
addb
test
fiadds
cmpsl
clc
xchg
in
in
push
in
stos
add
jb
sti
sahf
mov
dec
pop
adc
pop
add
int3
xchg
in
enter
out
mov
imul
or
test
sbb
aaa
cs
mov
pop
add
dec
mov
and
popf
pop
aaa
rolb
and
cld
mov
shll
js
push
out
mov
ud1
divl
adc
ret
pop
xchg
ret
mov
fidivrs
outsl
scas
sbb
addl
cmp
fadds
sbb
aas
push
add
lock
push
jb
push
xchg
add
sub
outsl
inc
sub
pusha
jae
test
mov
add
into
out
stos
lods
push
push
dec
dec
loopne
inc
iret
ret
sub
pop
cld
scas
xor
add
shl
jecxz
addr16
insb
lcall
mov
orb
test
push
rolb
mov
xor
test
add
ss
sbb
add
adc
out
outsb
clc
push
push
push
and
pop
gs
or
push
aam
iret
test
ds
sbb
shlb
rcrb
lret
lret
aad
jbe
add
outsl
push
call
add
cli
sahf
mull
push
jp
inc
add
hlt
mov
or
xorl
sahf
shl
jl
movsb
repnz
add
mov
int3
sbb
aaa
shrl
rolb
je
fisttpll
jg
int3
rcl
push
cmp
rclb
add
mov
in
add
enter
daa
mov
imul
jb
add
rcrl
cmp
jmp
adcb
add
mov
xchg
enter
insl
lds
nop
add
imull
inc
add
mov
xchg
enter
mov
ja
push
pop
sbb
xorl
js
adcb
fimull
cmp
mov
sbb
popa
add
lods
add
js
lds
cmpsb
adc
cmc
pusha
dec
int3
jg
out
cs
dec
in
add
and
sti
rorb
add
or
pop
jmp
sbb
add
and
cmp
shr
pushf
pop
sub
dec
in
pop
jbe
faddp
cmp
sbb
leave
cmp
or
or
xor
in
mov
data16
cmpsl
or
mov
inc
dec
imul
adc
adc
add
icebp
in
das
sub
xchg
add
sbb
add
jb
pop
mov
mov
bound
cmpl
or
jno
add
sbb
push
xor
lock
inc
mov
xor
inc
stc
adc
out
hlt
ds
push
fmull
mov
add
add
or
test
clc
pmaddwd
loopne
mov
enter
out
out
enter
cmp
and
jae
fisttpll
adc
push
push
fimuls
mov
fldl
mov
and
dec
add
and
xor
adc
add
je
pop
test
sub
pop
aas
cltd
lahf
jl
add
je
dec
popa
xchg
pusha
push
in
pop
jg
movsb
or
lock
test
leave
out
imul
jp
cmpsl
orb
push
lods
adcb
cmc
in
add
aam
fnstcw
mov
shrl
add
pop
cltd
inc
fsts
divb
dec
mov
push
sub
or
cli
xchg
ja
mov
inc
xor
rolb
imul
hlt
add
sub
and
add
mov
jmp
jl
inc
add
lods
les
jae
mov
loopne
shll
pop
add
aas
push
sarl
add
bound
out
les
add
jecxz
nop
mov
lret
mov
lock
lods
leave
add
mov
add
cmp
jle
pop
sub
xor
lock
and
pop
add
push
popa
add
jg
cmp
out
mov
nop
pusha
out
lret
addb
mov
inc
pop
or
add
jge
test
aad
sbb
repnz
cmp
xchg
add
popa
inc
lret
xchg
adc
pop
mov
rorb
stos
mov
push
sarl
add
adc
cli
rclb
add
xor
in
inc
sub
cwtl
add
testl
mov
iret
jmp
xchg
outsl
pop
sbb
hlt
sub
ret
test
and
add
fdivs
add
mov
xchg
gs
mov
xor
dec
add
xchg
pusha
pushf
lods
test
jae
cwtl
hlt
inc
add
mov
mov
out
in
loopne
xchg
sahf
mov
test
imul
incb
insl
es
and
cmc
xor
lea
xchg
call
sti
mov
mov
movsl
or
and
fwait
ror
popa
aam
sub
xchg
add
sbb
lods
mov
stos
stos
imul
xorl
and
jbe
lock
fdivrp
dec
scas
add
cmpsb
imul
xchg
push
pusha
addb
roll
je
lock
test
dec
dec
test
push
mov
mov
pusha
or
or
inc
test
push
add
xor
mov
jg
add
arpl
adc
out
and
dec
jecxz
inc
mov
push
add
dec
imul
or
pusha
sarb
pop
es
ljmp
sahf
mov
sbb
add
fisubl
call
or
imul
pushf
pop
aaa
addr16
sbb
loop
cs
mov
int
push
shr
push
jnp
adcl
mov
outsl
add
mov
shrl
xchg
add
fs
loop
push
dec
sahf
jno
cmp
cmp
pop
inc
jb
add
rol
push
add
cltd
mov
adc
push
aam
in
add
and
jne
cwtl
pushf
add
outsb
clc
add
and
add
mov
xor
xor
xorb
js
lock
cmpb
lds
rolb
push
sbb
aas
in
pop
add
incl
addr16
pop
sub
add
and
enter
mov
cmc
xchg
cmp
icebp
loope
add
shll
push
inc
push
sub
inc
mov
arpl
mov
lret
adc
loopne
cmpsb
add
adc
xor
xadd
dec
push
cmp
jo
xor
lret
mov
add
icebp
ss
jl
fistpl
int
inc
adc
add
insb
test
sub
mov
mov
inc
icebp
add
cli
rolb
and
add
loope
es
xor
shll
pop
inc
mov
jecxz
loopne
imul
les
xchg
xor
out
cli
adc
out
adc
rol
movsl
pop
pusha
daa
xor
or
add
sub
add
movsl
insl
sub
nop
andl
int3
setge
jae
mov
cmpb
xchg
add
mov
aam
mov
inc
mov
push
pop
das
addr16
adc
nop
loope
pop
xchg
mov
iret
rclb
mov
jecxz
mov
in
jnp
sub
push
lods
jno
mov
fcomps
cmp
cmpsl
in
cltd
mov
movsb
aad
cmp
inc
mov
mov
int
mov
add
repz
adc
and
cwtl
xchg
mov
xor
mov
push
mov
push
xchg
mov
sbbb
mov
jo
dec
or
xchg
mov
test
cmp
add
mov
mov
into
xor
sbb
imul
sub
adc
jecxz
clc
cmp
dec
ret
inc
push
repz
call
lds
negl
or
xchg
mov
clc
cld
add
mov
dec
add
dec
or
flds
sbb
mov
mov
dec
cmp
dec
testl
mov
sbb
roll
xor
mov
mov
sub
add
pop
sub
xor
mov
and
cmp
sbb
imul
xor
mov
adc
orb
loopne
ja
sub
mov
cltd
dec
xor
out
cmpsl
xchg
mov
shrl
cmpsb
mov
je
inc
sub
lahf
cs
shrb
rolb
negb
push
adc
movsl
xor
add
mov
push
xchg
rcrb
add
cld
mov
rep
dec
insl
adc
push
ret
sub
push
cmc
jmp
or
leave
add
jl
mov
xor
xchg
or
add
adcl
pusha
stos
pop
imul
loope
test
leave
adc
mov
and
jmp
in
add
xchg
push
repnz
jg
push
rorb
mov
fdivrs
loope
dec
add
add
repz
jmp
inc
std
add
test
dec
loopne
adc
call
sub
inc
sahf
hlt
xchg
scas
dec
add
incb
xchg
stos
mov
pop
test
in
fwait
pop
call
daa
jo
add
ja
xchg
lret
hlt
rorl
inc
repnz
and
pushf
push
repnz
sub
add
sub
xorb
xchg
movsb
dec
or
mov
xchg
cs
mov
mov
jmp
mov
outsb
and
mov
das
loope
ds
movsb
daa
imul
adc
les
in
dec
adc
cmp
cmc
enter
dec
clc
mov
mov
aad
dec
icebp
inc
pusha
fs
push
dec
jo
or
push
pmuludq
mov
mov
rolb
shll
add
push
adc
sub
cmp
shlb
mov
mov
pop
jnp
xor
shlb
imul
imul
arpl
inc
loopne
add
inc
jg
adc
fldl
cmp
loop
shlb
add
mov
sti
out
cmc
fistps
sbb
addr16
cmp
add
aaa
mov
dec
clc
lods
sar
add
xor
dec
xchg
sbb
xchg
shrb
sub
add
mov
cmpsl
or
jmp
fwait
add
ret
shlb
jne
flds
sub
add
std
sub
jmp
aas
add
lret
fwait
dec
hlt
es
pop
aad
sti
das
lea
icebp
xchg
int
dec
lahf
cld
dec
pop
mov
add
inc
ret
jmp
ss
sub
in
add
ds
add
lods
cmp
repnz
adcl
mov
ljmp
push
mov
movsl
imul
lock
push
pop
add
xor
lds
pop
int
sbb
add
call
std
add
cmp
mov
movsb
mov
add
xor
pop
sub
sub
ret
dec
xchg
sbbl
call
pop
lahf
xchg
lods
add
xchg
add
inc
jge
cmp
cld
in
add
lahf
and
add
repz
jo
add
pop
push
fnstenv
mov
lahf
pushf
xchg
mov
lds
aad
mov
insb
mov
dec
cmpsl
or
dec
pop
jnp
add
fs
mov
ret
inc
subl
test
shl
jbe
jg
sarl
pusha
std
cli
loope
cmpsb
dec
push
adc
aad
lds
push
add
ret
inc
inc
loope
popf
push
mov
test
push
ja
jge
cmpsb
shl
inc
add
jno
pop
int3
mov
pop
jge
stos
jge
jo
cmp
mov
add
aam
sbb
test
repz
add
push
and
imul
xor
repnz
add
mov
dec
add
lcall
add
inc
push
dec
lahf
shlb
xchg
pop
xchg
adc
push
or
inc
loopne
pop
fnstenv
repz
lods
xlat
pop
mov
mov
jns
ljmp
dec
sti
leave
xchg
je
add
dec
dec
sbb
testb
loopne
xchg
pusha
aas
out
mov
adc
movsb
filds
in
mov
adc
faddp
sub
cwtl
xor
movsl
rcrb
inc
add
andps
in
or
xor
pop
add
sarl
inc
mov
shlb
add
shl
lcall
mov
xor
sbb
adc
push
cmp
int
rolb
in
cmpsb
aam
stos
add
adc
popa
xchg
lods
inc
mov
mov
add
inc
nop
testb
or
xchg
add
and
adc
jle
int3
add
mov
mov
hlt
add
cmp
sub
outsl
lret
add
clc
or
in
mov
pushf
out
sahf
xchg
nop
add
push
xchg
pop
xchg
add
mov
mov
mov
popf
notb
inc
movsb
inc
ss
leave
push
into
in
and
xchg
shlb
cmp
fwait
mov
mov
inc
bound
mov
mov
add
fsubrl
mov
xchg
out
jo
push
sbb
cmp
fnstsw
mov
int
fcoml
pop
cmp
sub
jno
mov
push
cwtl
cmpsl
pop
es
sub
adc
inc
jg
dec
pop
popa
pop
mov
clc
ror
mov
icebp
push
cwtl
pop
add
xor
push
jl
hlt
enter
sub
mov
xchg
div
add
or
loopne
jl
add
mov
pusha
mov
xor
out
daa
cmp
rcl
and
xor
sbb
dec
dec
jge
sub
mov
xchg
add
fs
fisttpl
push
mov
sbb
add
icebp
xchg
mov
add
dec
inc
add
mov
fisttpl
lock
inc
icebp
mov
daa
add
mov
addl
xchg
or
int3
cmpsl
xchg
add
das
add
xchg
mov
stc
xor
push
push
mov
clc
mov
mov
clc
jg
pop
mov
push
add
xchg
xor
sbb
add
mov
int3
testb
sti
pop
sub
add
jne
pop
sahf
out
push
xor
outsb
mov
mov
pop
test
gs
rclb
jbe
loopne
enter
into
fsub
iret
stos
fnstsw
unpckhps
jne
dec
push
dec
mov
pop
insb
ret
shlb
test
add
push
push
push
jecxz
push
leave
shrb
or
stos
rcr
sbb
loopne
pop
sbb
aas
sub
inc
inc
lret
jb
mov
mov
add
cmp
incb
xor
arpl
add
and
and
sbbl
cli
push
and
adc
xor
add
adc
es
inc
std
add
das
push
stos
xchg
cmp
scas
jb
jo
mov
addl
call
pop
xor
sbb
push
jmp
add
mov
cmpsb
call
add
bswap
enter
pop
push
and
dec
jnp
in
cmpl
imulb
sbb
es
pop
add
mov
pop
lea
cli
inc
fcomps
addr16
es
repz
pop
add
push
out
adc
and
xor
mov
fildll
int
dec
jmp
enter
sub
and
lret
das
sarb
in
stos
adc
xchg
std
cmc
shl
cmp
xor
out
jg
addl
inc
cmp
xchg
add
je
push
fsubl
fdivrp
push
jo
mov
in
pop
xchg
xor
mov
lods
jne
mov
sbb
jno
push
das
jp
jle
stos
bound
adc
jbe
xor
dec
add
into
mov
mov
pop
fisttpl
inc
mov
insl
push
aaa
mov
push
sbb
sti
dec
add
push
cmp
negb
cmp
mov
movsb
adc
xchg
sahf
mov
add
mov
push
sbb
mov
xor
hlt
je
inc
pop
insb
ja
andl
xor
enter
and
xor
fmulp
mov
add
nop
mov
in
add
dec
add
sub
clc
pushf
add
xchg
pop
mov
sar
addr16
fidivs
lods
adc
test
lcall
cltd
pusha
movsb
pop
les
cmp
ljmp
sbb
add
add
inc
push
sub
dec
sub
mov
fildll
lods
dec
in
inc
pop
cmp
add
and
push
loope
les
push
and
add
fnstsw
je
xchg
add
out
iret
sti
hlt
and
aaa
xor
ret
mov
nop
push
sub
int
ret
xor
jne,pn
test
subb
add
jae
sub
inc
add
addb
lret
loope
cmp
add
das
xor
loop
ja
daa
ljmp
loopne
sahf
add
rorb
dec
push
jo
call
mov
aam
test
lods
cmc
rclb
ret
sti
sarl
andb
xchg
mov
dec
bound
and
iret
lods
jns
or
add
push
rol
sub
push
and
cwtl
cmp
mov
sbb
sub
addr16
les
and
sub
mov
push
call
clc
add
xchg
lock
sbb
sarb
aad
sub
es
in
out
stc
add
loope
cmp
push
aaa
add
lret
hlt
dec
popl
inc
popf
add
jle
cmp
add
or
enter
jmp
mov
cmp
cli
je
inc
add
sbb
adcl
loope
cmp
sub
out
lea
mov
mov
push
mov
lahf
popl
xor
ljmp
add
mov
call
push
fsubrs
out
inc
push
mov
pop
movsb
push
rcr
rorb
or
mov
push
enter
xchg
sbb
mov
add
js
push
jle
or
sahf
mov
dec
pushf
push
insl
pop
ror
push
push
lret
les
sub
dec
cmp
test
and
jg
jp
pop
loop
lock
jbe
add
sbb
push
clc
nop
xor
je
dec
sub
lods
loop
pop
mov
in
je
sbb
scas
popa
lea
add
mov
cmp
lcall
kunpckbw
scas
fwait
pop
dec
shr
lcall
inc
add
cmp
fdivrl
fbstp
and
movsb
push
jp
sti
clc
lods
push
xchg
test
shlb
hlt
adc
pop
inc
rcrl
js
jp
inc
sub
push
inc
sarb
add
lds
dec
add
into
xchg
jo
fldcw
push
pop
cmpb
ret
add
jno
in
int
sbb
out
or
repnz
in
adc
out
outsb
mov
lahf
dec
mov
xor
and
mov
add
es
push
test
sub
sub
fs
xchg
sbb
lods
xchg
and
dec
sub
mov
notl
jg
xchg
scas
ljmp
pop
jl
dec
mov
mov
add
pushf
and
sub
fistpll
add
xor
pop
stos
lahf
push
dec
leave
inc
adc
and
in
or
sub
mov
xchg
mov
add
and
fsubr
inc
mov
add
aam
sub
testb
jno
pop
out
dec
arpl
mov
xchg
sbb
jmp
and
sbb
and
in
sbb
sbb
add
cmpsb
and
cmp
add
pop
lods
mov
inc
andb
add
das
in
sub
jg
and
loop
and
xlat
cmpsl
xchg
lahf
push
imul
loopne
or
arpl
pop
sbb
cwtl
xchg
jge
idivl
xchg
inc
push
or
sti
inc
add
fxch
sub
jne
lds
subb
ljmp
ret
mov
sbb
mov
cmp
add
add
sbb
xchg
pop
movsl
stos
inc
add
insl
mov
inc
outsl
xor
fwait
les
add
fisttpll
cwtl
call
push
aad
pop
jbe
pop
dec
push
inc
pop
out
push
neg
xlat
and
sbb
mov
ret
inc
ja
cmp
add
cmp
insb
loopne
adc
mov
icebp
and
and
addr16
adcb
push
add
cwtl
loopne
imul
out
xchg
fsubp
add
cwtl
insl
adc
mov
xor
outsl
push
fildl
rcl
cmove
and
cmpb
or
and
lahf
inc
adc
imul
inc
pop
aad
cld
negl
push
add
pop
lcall
add
int3
sahf
pop
add
lds
loopne
shl
cmp
inc
sbb
xor
add
dec
jecxz
scas
cwtl
sbb
rcll
push
subl
stos
scas
sbb
adcl
sahf
cmc
cmp
sub
js
incb
add
shl
and
cmp
add
mov
lods
push
ret
push
loopne
roll
shr
out
and
loope
xlat
cmp
add
sub
fsubs
mov
icebp
sarb
add
jge
lods
dec
fwait
add
lock
mov
push
mov
jnp
pop
mov
mov
and
andb
jl
xor
xorl
add
jp
dec
inc
and
xor
sbb
jns
fnstsw
add
aam
push
or
pop
lock
mov
sbb
adc
pusha
sub
adc
mov
ror
fadds
test
xor
or
jne
push
or
ret
andb
dec
insl
lods
scas
mov
or
mov
leave
pusha
and
fstl
mov
sub
cmp
dec
add
inc
mov
add
enter
cli
add
sub
nop
mov
or
data16
mov
sbb
ljmp
sbb
push
push
add
adc
ss
and
imul
lahf
xchg
js
mov
xchg
in
ljmp
push
test
add
test
ret
or
mov
stc
mov
jge
add
pop
call
inc
add
dec
test
sub
add
jo
mov
sub
add
sbbl
add
cmp
pop
inc
stos
add
sbb
pop
imul
shl
or
jno
jbe
or
mov
add
add
stos
xchg
leave
cli
xor
or
xorl
push
xor
int3
pop
mov
pop
adc
psllw
sbb
fidivl
stc
add
daa
aam
push
push
push
inc
mov
sub
loop
stos
or
fwait
push
jl
xor
in
fnstcw
leave
out
cmp
sbb
addr16
cmpsl
loop
adcb
dec
cwtl
cmp
xor
pop
call
add
sbb
adc
add
xor
add
adc
xchg
push
sub
jae
inc
jne
popa
jb
fwait
add
xor
dec
repnz
mov
lods
outsl
push
xchg
push
sbb
ljmp
sub
jae
fistps
jnp
pop
jle
mov
test
jno
dec
add
mov
or
fsubrl
add
shll
jnp
or
add
inc
push
add
loop
lods
adc
sbb
int3
mov
dec
inc
xor
mov
das
pop
pusha
rcll
sbbb
ds
pop
sbbl
int3
add
jb
rcl
push
xor
xor
sbbb
mov
cwtl
push
xor
add
mov
mov
mov
cs
xor
mov
mov
in
adc
bound
mov
xchg
outsb
movaps
rorb
xchg
jl
xorb
push
cmp
xchg
repz
test
cmp
add
jne
test
xlat
add
fistpll
xchg
flds
nop
xchg
out
push
xor
mov
fwait
outsl
rorb
das
mov
pop
daa
lock
add
cmp
add
pop
lock
add
add
sub
out
jae
movsb
sub
cmpl
xor
insl
jg
fidivrl
cmp
lds
xor
cld
mov
int
ret
adc
dec
add
ljmp
pop
and
or
mov
rclb
arpl
jbe
jge
rol
add
bound
orb
fildl
xor
leave
arpl
add
mov
inc
cmp
add
sub
mov
jno
push
cmp
dec
adc
mov
out
push
inc
push
pop
sub
daa
call
add
dec
mov
add
jmp
push
add
rcrl
add
sarl
sub
imul
add
out
add
sbb
add
sbb
xor
adc
lock
jne
add
sub
and
pop
insb
and
sub
enter
adc
loope
outsl
das
adc
into
push
push
xor
inc
lret
lock
and
and
sub
cmpsl
sub
sbb
push
test
loopne
call
adc
lret
cmp
mov
inc
jmp
arpl
push
rclb
sbb
adc
cmp
jo
sub
aaa
push
test
pop
popf
repz
movsb
les
jno
add
sub
js
inc
sub
arpl
ret
mov
mov
add
lahf
stc
call
xlat
sub
aas
mov
sbb
mov
and
inc
insb
mov
int3
out
pop
add
daa
ljmp
mov
mov
arpl
sahf
nop
jno
jo
jg
add
call
das
test
sbb
dec
icebp
stos
and
jb
fadds
xchg
xor
xchg
add
jmp
inc
leave
pop
scas
cld
jecxz
fimuls
and
mov
sbb
add
fdivrl
add
in
mov
add
int3
leave
sahf
xchg
mov
sti
pusha
hlt
adc
dec
mov
out
sar
and
mov
cs
jmp
lock
push
jl
xchg
imull
pop
fadds
xor
add
inc
loopne
mov
test
je
xchg
fcoms
xlat
jno
fiadds
cmp
rclb
fnstenv
iret
push
pop
fcmovbe
repz
inc
aad
cmp
mov
add
xchg
xchg
jmp
mov
jecxz
lock
sbb
pop
aas
pushf
xchg
rcr
mov
push
cld
inc
jns
jnp
nop
call
out
aas
test
enter
int
jp
and
loope
das
rcl
push
pop
mov
inc
mov
pop
stos
add
push
loopne
pusha
dec
and
pcmpgtd
loopne
js
nop
and
adc
and
jne
jp
out
jmp
add
add
push
mov
mov
sbb
or
cmp
roll
add
inc
roll
cld
xor
pop
int3
test
add
daa
push
jbe
mov
rolb
pop
or
adc
cmp
add
data16
add
test
cmp
and
mov
mov
in
pop
add
jge
dec
push
xor
push
aaa
mov
adc
sbb
lods
cmp
cwtl
incb
sbb
fs
loopne
pop
dec
test
xchg
inc
mov
jno
or
fimuls
fstl
test
stc
or
jmp
add
mov
mov
or
cmp
pop
add
cmc
ss
insb
dec
xor
sub
fbstp
add
cmp
test
lret
mov
les
add
test
packuswb
inc
xchg
xchg
outsl
js
mov
pop
ljmp
inc
insl
mov
ja
mov
add
insl
icebp
pusha
mov
outsb
out
pop
sahf
adc
sub
mov
dec
add
push
in
dec
add
xor
jmp
push
cli
add
push
test
add
cwtl
addl
cmpsb
ja
cmc
xchg
xchg
jg
jno
hlt
loop
adc
add
xchg
shll
and
pop
ja
add
mov
jg
add
push
scas
jne
addr16
xor
pop
adc
jb
inc
leave
lcall
rolb
adc
mov
push
fdivrl
imull
pusha
inc
and
daa
data16
shlb
push
add
mov
fsubs
add
outsl
jle
arpl
add
mov
les
aas
stos
cmp
and
sbb
test
dec
lock
pop
cmp
rcrl
cwtl
sarb
sbb
call
andl
cmp
fdivp
mov
add
mov
xchg
outsb
xor
push
in
xor
fmulp
cmpsl
mov
jo
mov
add
call
loop
add
mov
mov
sub
push
and
xchg
sbb
add
sub
pusha
adc
pop
inc
daa
push
jnp
xorb
fcoms
cli
mov
xchg
mov
push
push
mov
std
in
pop
mov
aad
jl
leave
add
data16
shrb
xor
cmc
loopne
jne
ljmp
mov
lea
pop
add
ja
mov
dec
add
test
stos
testl
xchg
push
or
leave
and
mov
add
push
inc
cltd
shll
add
div
pusha
icebp
add
hlt
inc
pop
lret
add
cmpb
in
in
rorb
add
int
addr16
cmp
or
mov
adc
push
add
roll
int3
cmp
inc
das
daa
arpl
dec
test
out
push
cld
jp
push
adc
dec
xchg
add
icebp
jb
jge
into
aam
sar
inc
add
xchg
or
jae
jl
dec
pop
pop
cmpsb
movsl
shrb
add
mov
sbb
push
lods
and
jo
xor
pop
stc
adc
sub
jg
xlat
test
pop
jbe
dec
or
sub
lods
mov
ficoms
sbb
add
subb
icebp
jl
add
inc
loope
sub
incl
jo
sub
dec
pop
add
pop
insl
mov
arpl
shlb
mov
rorb
fcomi
add
cmp
leave
mov
adc
ja
xorb
call
jmp
pop
ret
or
lea
es
fisubs
pop
or
add
sbb
add
xchg
push
pop
add
lret
sahf
cmpsb
xchg
dec
enter
xchg
push
mov
add
clc
dec
add
lock
leave
int3
loopne
mov
adc
add
movsb
mov
mov
inc
mov
push
ja
cmc
add
add
aad
lahf
adc
dec
sbb
push
add
outsl
repnz
pop
test
sub
fucomi
hlt
ss
xor
add
mov
aam
mov
leave
aad
push
sti
lret
xchg
and
dec
arpl
push
xor
adc
sub
and
cmp
pop
imul
cmpsl
jbe
xchg
add
pop
pop
fcoml
mulb
sub
fldl
push
out
xor
je
sbbl
sti
xor
lcall
jnp
mov
outsl
imul
sbbb
out
sahf
imul
fcomip
int3
addl
es
inc
cli
xchg
xlat
xor
cmp
movsb
add
repnz
data16
mov
std
dec
sub
add
ja
or
pop
loopne
add
hlt
jae
out
inc
cmpsb
add
aaa
xor
add
cmp
adc
xor
dec
sbb
cli
push
mov
stos
test
and
call
dec
lds
adc
adc
add
outsl
sub
add
sbb
sub
loop
add
pop
imul
add
lods
adc
test
mov
mov
pusha
jo
mov
lods
aam
mov
add
sbb
sti
pushf
dec
movsb
pop
jl
iret
xchg
push
and
imul
dec
jge
lret
cmp
jb
inc
push
repnz
movsl
out
inc
adc
out
jb
sub
sub
cs
orb
lock
push
jo
add
jbe
xchg
mov
repnz
aas
int
in
mov
sbb
cmp
das
enter
mov
test
outsl
mov
popl
nop
scas
int3
pop
mov
push
or
and
lcall
lret
cmp
inc
add
pop
push
sub
js
sub
cmpsl
movl
aaa
mov
je
push
lret
or
xor
loopne
fidivrs
pop
out
push
rcrb
not
sbb
loopne
ss
js
push
mov
test
lahf
mov
ljmp
rcrl
sbb
lret
or
cli
add
rcrb
jp
adc
data16
sub
pusha
mov
in
cwtl
add
sub
adc
mov
jns
lods
jbe
pusha
daa
js
std
ud1
imul
int
shlb
cltd
add
loopne
mov
xlat
cmpb
and
add
std
daa
jbe
add
imul
das
add
insb
test
cmp
inc
sub
mov
lock
sbb
inc
out
sahf
push
cvtdq2ps
jg
and
adc
ljmp
adc
add
jns
js
dec
out
add
mov
cmpsl
jnp
add
test
adc
inc
adc
add
out
inc
fnsave
add
and
or
dec
add
stos
inc
jo
jb
scas
jmp
or
jl
mov
sub
fimuls
sarb
jg
and
xor
add
jbe
cmpsb
inc
mov
mov
lock
mov
add
cmc
ror
xor
fildl
add
ljmp
xor
andl
arpl
popf
push
xchg
cmc
pusha
sbb
js
aaa
insl
push
mov
mov
mov
add
or
add
std
add
fildll
add
adc
mov
mov
test
imul
fcomi
out
call
bound
dec
jno
xor
mov
rclb
loopne
stc
std
sbbb
mov
enter
shlb
xchg
and
test
pop
sbb
pop
sub
js
add
cmp
and
jge
add
and
add
in
xchg
add
jge
loopne
lret
cltd
xchg
pop
out
jle
lods
jae
repnz
push
add
shll
bound
ja
dec
std
daa
ret
pop
inc
loopne
mov
mov
jp
add
mov
add
jmp
icebp
testl
outsl
addr16
arpl
xor
pop
negl
mov
mov
push
hlt
jle
push
mov
mov
movsb
das
shrl
sarb
ljmp
jl
sbb
sbb
cltd
cld
and
outsb
daa
lret
and
dec
pop
mov
xor
or
and
out
sbbl
cmp
data16
nop
fadds
mov
es
aam
push
add
cmp
lods
inc
sahf
dec
push
sbb
js
aam
mov
std
add
and
mov
dec
fiadds
test
pop
mov
gs
sub
in
mov
out
push
outsl
add
ret
loopne
out
es
adc
add
sub
mov
push
cmp
add
les
pop
call
lea
adc
es
fiadds
inc
std
fdiv
cmp
add
lcall
add
sarb
mov
jg
push
add
inc
scas
xor
push
shll
pop
or
or
fsubs
jle
lcall
mov
call
add
jae
sbb
out
adc
or
addb
xchg
iret
in
push
orb
nop
inc
pop
in
jle
inc
mov
andb
loop
push
add
push
inc
ret
dec
ret
add
test
imul
adc
xchg
movl
sub
jge
add
jmp
cs
dec
je
out
ja
aam
jecxz
push
aad
sub
mov
jne
dec
test
pop
stos
les
int3
mov
lods
stc
dec
jns
mov
arpl
aad
mov
mov
inc
sarb
and
pop
daa
jecxz
pop
int
add
add
gs
leave
sbb
ss
cwtl
mov
aaa
shr
test
jp
mov
mov
and
or
enter
add
push
in
jo
push
xor
xchg
add
inc
clc
add
jo
rorb
mov
rol
in
in
xchg
jnp
and
stos
mov
mov
pop
or
hlt
dec
pop
add
std
into
cs
inc
lret
dec
add
shll
pop
aaa
mov
sbb
addr16
imul
add
mov
inc
stos
ret
add
cld
mov
scas
add
fwait
inc
push
xchg
xchg
dec
add
xchg
push
mov
std
sbb
out
add
adc
repnz
add
jnp
into
movsb
sub
insl
add
cmp
cmp
adc
and
fcomip
add
out
jg
ds
push
arpl
out
test
icebp
and
and
outsl
movsb
sub
neg
push
cs
add
arpl
sbb
adc
fcmovu
add
xlat
sbb
xchg
aam
out
mov
or
lcall
adc
jge
je
clc
mov
pop
push
add
cltd
xchg
or
jno
loop
inc
sub
jmp
negb
cmp
lret
xor
inc
cmp
xchg
sahf
mov
fdiv
movb
jmp
inc
lea
or
and
add
pop
out
sbb
cli
rorb
cmpb
jb
icebp
add
xor
inc
push
mov
es
add
and
pop
in
shrb
and
clc
push
in
cwtl
adc
cmpsl
adc
inc
lcall
mov
add
ret
je
add
ja
lods
push
daa
or
mov
les
dec
adc
jnp
sbb
fcoms
sub
xchg
add
pop
fbld
sub
negb
pusha
add
in
enter
jb
add
mov
adc
xlat
sub
mov
fsubs
mov
out
mov
push
jne
xor
xor
stc
rcrb
pushf
add
rclb
shlb
psubq
sbb
cmp
test
clc
xorb
add
sub
or
xlat
pop
push
sub
push
out
and
test
push
mov
pop
stc
adc
inc
add
jno
icebp
cmp
call
mov
aam
add
loop
mov
ret
arpl
push
push
ds
inc
dec
imul
test
stos
jmp
add
cmpsl
movsl
mov
imul
and
add
test
jno
rorb
jecxz
add
jmp
in
push
jle
cwtl
jae
add
pop
xchg
sbb
jecxz
loope
idivb
lds
mov
inc
lods
aas
shrl
mov
add
xchg
xchg
js
xlat
cmp
outsl
cltd
sahf
into
inc
and
and
add
pop
ficompl
xchg
mov
cltd
inc
cmc
cli
add
jnp
pushf
or
jl
pop
mov
add
aaa
or
push
or
outsb
cs
clc
sarl
rol
je
mov
adc
push
insb
mov
add
sbb
mov
sbb
mov
xchg
cwtl
movsl
sbb
sbbb
adc
rclb
push
out
xor
loopne
iret
bound
rcr
insl
insb
add
imul
aas
aam
add
mov
cmp
jge
and
xchg
add
iret
and
push
movsb
shrl
add
inc
int
add
cli
xor
xlat
lock
sbb
shrl
imul
loop
lds
out
incb
and
sarb
pop
mov
fistl
mov
cmp
jo
je
repnz
insb
test
cmp
rolb
adc
adc
inc
pop
xchg
mov
daa
fistps
or
sbb
addr16
add
out
push
add
sub
inc
xor
daa
push
add
rcr
in
shrl
inc
int
out
jmp
add
dec
aaa
dec
imul
jl
or
xchg
adc
incb
dec
xchg
aas
jecxz
sbb
add
add
mov
or
adc
jae
xchg
clc
int3
or
push
fdivr
add
insb
mov
outsb
inc
repnz
js
push
lods
dec
add
push
sub
pop
bound
sbb
inc
scas
out
stos
rcrl
jae
and
incl
sbb
jecxz
call
jae
out
divl
add
out
adc
outsb
sub
sbb
cwtl
sub
pop
mov
sbb
cmp
push
pop
mov
mov
mov
sbb
cmp
pop
and
lds
sbb
add
test
add
push
fcmovnb
out
sbb
cwtl
add
and
jg
sbb
add
fwait
lea
lock
test
jge
push
mov
mov
push
mov
inc
dec
xchg
sub
fcompl
sub
stos
inc
sbb
add
lock
loopne
es
or
mov
lret
and
loope
push
sbb
mov
pop
fs
and
movsl
mov
mov
dec
js
in
add
xor
fildl
ret
xchg
mov
enter
lds
adc
pop
test
add
js
in
jmp
sbbl
shrb
loop
adc
sub
add
flds
cmp
cld
jns
ds
movsl
mov
mov
pop
int
jbe
imul
inc
ficomps
add
and
xchg
push
mov
rol
push
add
xchg
pusha
testb
pusha
push
das
movswl
sbb
cmp
push
and
lcall
mov
add
xor
add
mov
mov
cmpb
daa
inc
roll
cmp
xor
rcrb
rol
ljmp
insl
jo
cmp
fs
fcomi
pop
adc
repz
das
jae
loop
xchg
add
jmp
enter
cld
stos
pusha
ljmp
mov
stc
pop
out
xchg
mov
adc
clc
jle
mov
inc
pop
pop
mov
sbb
mov
cs
pop
cmpsb
cmp
xchg
mov
fadd
hlt
cli
add
xorb
sub
add
int3
ucomiss
add
rcll
xchg
addl
pop
iret
test
add
enter
rcl
daa
ds
test
test
movsb
inc
push
sahf
jl
pop
cmp
push
mov
loope
sub
stos
and
inc
xchg
arpl
add
push
sbb
xchg
or
mov
pop
scas
xor
inc
pop
pusha
dec
inc
xor
fwait
xor
pop
nop
testl
data16
adc
inc
add
outsl
or
add
out
test
inc
test
push
sub
add
jl
mov
add
cld
xor
mov
xchg
sub
sub
push
ljmp
in
pop
add
leave
sbbb
adc
adc
das
add
push
lds
test
rcrl
xchg
or
pop
sub
adc
fsubp
ljmp
add
xchg
shl
mov
ret
inc
andb
pop
push
add
leave
push
push
ss
xor
mov
ret
inc
pop
push
jnp
dec
jne
cmp
xor
in
or
sbb
jne
sub
loope
jne
add
mov
lods
sbb
pushf
cmc
add
jb
add
xor
jge
aam
push
add
jnp
ljmp
jge
add
rorb
push
jecxz
les
or
sbb
add
pop
cmp
pop
xor
add
das
fwait
ja
cld
es
mov
inc
mov
sub
clc
inc
js
jbe
mov
jb
mov
cmpb
popf
arpl
fcomi
jns
clc
push
movsb
pop
sub
scas
pushf
add
cwtl
inc
xor
ret
shrb
or
cmp
out
add
fadds
js
xor
aas
daa
xchg
ds
add
mov
add
jl
pop
dec
cmp
addl
pop
fwait
dec
rcl
and
add
adc
xor
mov
add
or
idiv
xorl
out
jg
jo
hlt
aaa
add
mov
push
call
cwtl
jp
push
mov
lahf
out
push
and
xor
hlt
and
rorb
add
lcall
sbb
not
dec
jno
cmpb
inc
add
lret
xor
mov
jo
std
add
es
add
iret
insl
out
fdiv
sti
mov
dec
xchg
js
cmp
dec
vpmadcsswd
int3
pop
rorl
xor
mov
pop
mov
cli
repnz
push
xorps
sbb
jecxz
push
jl
out
mov
adc
inc
test
cmp
dec
repz
xor
daa
pop
pusha
cld
movb
push
stc
shrl
out
jno
add
out
cmp
hlt
add
and
jp
add
pop
pop
fwait
jmp
sti
dec
js
add
xchg
xchg
jmp
inc
add
add
outsb
fistps
test
in
data16
roll
pop
xchg
hlt
dec
shl
lods
add
add
ljmp
pusha
jbe
mov
rclb
dec
add
js
out
ret
addb
or
cli
sub
add
push
inc
fdivl
pop
push
in
adc
cli
add
pop
popa
jns
and
and
or
inc
shlb
add
lcall
outsl
jl
push
loopne
cmp
cltd
ljmp
js
cmpsb
std
pop
mull
xchg
fs
repnz
and
insl
dec
add
xlat
pop
dec
outsb
inc
jg
movsl
add
cmp
inc
or
add
add
aaa
jle
jle
add
xor
dec
add
loop
cmc
or
rolb
cmpsb
add
enter
jae
xchg
loop
sbb
rcrl
add
xor
aad
xchg
dec
dec
add
jno
sbb
daa
mov
jl
push
mov
addl
cmp
adc
cmp
add
xchg
dec
fwait
add
mov
add
jbe
in
popf
push
add
je
fdivs
rcrb
ds
sbb
loop
aam
cwtl
or
add
or
cmp
test
xchg
pop
clc
adcb
lds
adc
sub
mov
imul
and
mov
lea
pop
les
scas
add
inc
fbstp
jl
jmp
mov
cmp
cmpb
rorl
add
fisttpl
add
ds
add
cwtl
mov
or
dec
xchg
mov
xchg
popa
jo
call
stos
jno
icebp
cmp
jecxz
sbb
fistl
cmpsl
inc
pop
lods
flds
mov
adc
in
mov
mov
jecxz
cwtl
mov
pop
dec
cld
mulps
jg
pop
sub
loope
scas
or
xor
xchg
push
dec
or
insl
pop
jle
add
shlb
iret
loopne
sub
sub
clc
insl
jl
ret
push
rcrb
add
xor
popl
jp
mov
lcall
and
in
add
or
cmpsl
outsl
and
mov
das
int
nop
pusha
cli
stos
shlb
mov
imul
pop
orl
mov
sbb
mov
mov
push
pop
add
or
loope
mov
out
shrb
outsb
mov
test
nop
cld
hlt
sbbb
cmp
lret
sahf
pop
xchg
add
sub
dec
je
inc
jg
ret
mov
push
pop
fsubrl
scas
pop
sbbb
sahf
loop
les
popa
pop
pop
mov
sub
pusha
sti
ds
pop
add
pop
jbe
add
add
cmp
pop
push
and
pop
sbb
pop
cmovne
les
pop
and
mov
imul
popf
xchg
add
lock
aaa
push
rcl
in
add
dec
mov
add
hlt
pop
or
dec
mov
add
pop
loop
lahf
cmp
xchg
cltd
aas
lcall
pop
push
add
imul
ds
fcoml
jecxz
mov
rorb
sbb
stos
add
jne
mov
push
outsb
or
imul
or
cmp
add
rcrl
push
xchg
xor
loop
or
movsb
xor
fucomi
out
and
hlt
loopne
or
add
dec
cmp
add
sub
push
hlt
dec
add
jae
and
sbb
add
lock
out
adc
andb
fdivs
lods
add
cltd
add
pop
movl
mov
xchg
mov
outsb
pop
jae
lods
mov
inc
or
sub
mov
mov
sub
insl
add
fwait
out
add
lret
mov
add
cmpl
in
in
pop
add
fildl
and
and
dec
loopne
inc
pop
add
mov
jo
cmp
pop
mov
cmp
cwtl
dec
nop
adc
add
cmp
dec
popa
cmp
mov
or
cli
add
and
jne
and
imul
pop
jnp
add
popa
mov
sbb
ds
out
xor
add
sbb
add
and
and
insb
add
dec
cmpsb
out
xchg
or
imul
test
pop
pop
cwtl
add
arpl
std
cmp
ds
add
pop
repnz
pop
filds
sarl
add
sti
mov
add
and
jle
mov
add
or
sub
out
rolb
lret
test
or
cs
and
mov
les
sbb
popa
and
inc
call
dec
inc
aad
xor
stos
cmpsl
and
in
jmp
jl
ror
push
and
xchg
cld
cli
add
rolb
inc
lcall
add
popa
mov
mov
xchg
sub
and
addr16
add
cld
out
jmp
dec
test
dec
and
mov
add
and
in
out
xor
sbb
and
imul
stc
push
mov
repz
dec
daa
xchg
add
inc
sti
xor
loopne
fistl
push
imul
cmc
xchg
jg
adc
inc
les
imul
pop
and
pop
inc
imul
movb
and
das
fisttpl
cld
roll
inc
mov
sub
dec
in
adc
xor
xor
addb
jns
add
inc
xchg
jno
aad
mov
rcl
add
data16
pop
xchg
inc
mov
cwtl
pusha
js
and
add
fld
xchg
fcoms
sbb
loopne
mov
mov
inc
mov
push
in
aad
jle
js
mov
aaa
add
xchg
push
fstps
rclb
mov
pop
pop
cmp
xlat
push
pop
inc
or
dec
nop
jmp
fistpll
add
mov
add
adcl
mov
mov
ret
mov
fadd
clc
jo
mov
add
xor
repz
add
inc
jp
movsb
cmpsl
lock
test
add
ror
mov
mov
mov
xorb
std
aam
int3
inc
pop
inc
sub
in
cmpsl
pop
add
xchg
adc
inc
add
mov
mov
sbb
jno
mov
push
add
sbb
ljmp
and
inc
in
mov
pusha
pop
ja
aaa
dec
lret
sbb
popf
dec
jo
add
inc
add
mov
aad
push
mov
loop
mov
lret
rorb
xor
scas
dec
pop
xchg
outsl
shrb
or
int3
mov
cld
loope
and
jle
pop
add
inc
jl
add
lret
insb
sti
sahf
aam
lock
sbb
mov
test
clc
test
or
pop
or
push
jmp
fwait
mov
add
or
jno
aaa
gs
leave
es
std
adc
xor
shrb
adc
andl
setge
ret
add
shll
cmp
inc
les
shll
add
cld
movsb
inc
add
mov
pop
add
jbe
cltd
test
test
popf
out
mov
inc
cmp
stos
psubb
jae
das
push
addb
sar
sbb
fwait
mov
stc
xchg
pop
sti
mov
lods
add
sbb
pop
pop
stos
sub
xchg
cmp
xor
ret
and
cmp
dec
pop
xor
push
pop
bound
inc
mov
ss
mov
add
das
adc
sub
incb
pop
sub
push
add
sbb
dec
push
mov
ds
adc
jns
out
aaa
add
out
into
jnp
add
add
dec
or
ds
push
add
or
jg
cltd
call
jns
mov
rcr
jo
push
xchg
aaa
sbb
add
add
jecxz
sbb
je
add
pop
cmp
daa
aas
stos
inc
lgs
loopne
outsl
pusha
add
mov
add
inc
push
iret
cltd
pop
xor
add
jecxz
sub
repnz
push
xchg
and
not
imull
sub
sub
jne
inc
push
cs
add
fs
fdivp
and
lret
daa
pushf
pop
jmp
add
inc
sbb
fiaddl
push
push
cmp
and
jo
pop
cld
xor
fisubs
xchg
mov
push
popf
mov
leave
jbe
mov
xor
pusha
add
push
enter
sti
add
leave
loop
push
mov
add
repnz
enter
test
out
data16
cld
xchg
cmp
insb
add
cmp
js
or
jae
cmp
clc
inc
outsb
int
pusha
es
mov
out
stc
cltd
xor
dec
pop
loope
add
loop
out
pop
pop
push
cwtl
add
rolb
enter
adc
inc
loope
add
jg
faddl
ficoml
aaa
in
iret
add
sbb
fisttps
out
xchg
in
outsb
inc
adc
aaa
pushf
xlat
mov
int
push
sbb
push
push
add
mov
insl
cmp
ss
pop
jns
mov
loope
sbbl
and
mov
sbb
dec
xlat
pop
xchg
mov
and
add
pop
pop
inc
hlt
push
in
sti
lret
inc
pop
sub
imulb
loop
in
pusha
mov
leave
mov
popa
add
add
and
add
adc
sub
dec
sub
pop
cmp
das
mov
dec
addl
dec
jno
dec
pop
out
sbb
arpl
add
mov
lds
enter
pop
adc
call
push
jo
inc
push
inc
pop
out
add
bound
lds
outsl
jbe
add
scas
iret
dec
mov
faddp
clc
jb
mov
dec
sub
cld
inc
cmp
sbb
clc
imul
cmpsl
dec
outsb
dec
mov
fidivrl
add
pop
push
and
jne
inc
add
and
sub
mov
orb
mov
add
out
adc
into
clc
jle
sbb
mov
sub
mov
add
adc
push
mov
ja
mov
sub
mov
pushf
fsubrl
add
xchg
iret
pop
arpl
add
jns
adc
jmp
and
xor
add
xchg
cwtl
inc
sbb
push
lock
pop
and
repnz
pop
sar
scas
push
repz
data16
add
insl
sbb
xor
adcb
jo
rcrl
add
and
test
dec
adc
sbb
int3
add
xor
add
in
mov
add
xchg
stos
jns
adc
jmp
mov
inc
mov
push
cmpsl
or
movsl
mov
mov
stos
inc
std
jne
repnz
or
add
lret
pop
stos
cld
ljmp
les
jb
int
pop
xor
mov
push
and
add
or
idivl
out
xor
xor
and
sub
lcall
inc
or
inc
call
popa
and
inc
gs
loopne
add
xchg
clc
scas
repz
dec
andb
fcoms
in
fisubs
xor
pop
clc
outsb
add
hlt
inc
sub
loopne
out
pop
mov
mov
lret
add
push
jb
push
ret
pop
call
pop
push
gs
add
sub
mov
pop
pushf
sbb
cli
add
js
out
add
int
shlb
mov
stc
push
cmpsb
repnz
xchg
in
mov
mov
mov
outsb
inc
and
jno
inc
dec
vmwrite
sbb
adc
in
push
add
lea
cmc
add
rcrb
arpl
in
jo
dec
adc
inc
or
test
push
or
pop
imul
pop
mov
cmp
shr
inc
mov
dec
push
negl
in
add
mov
add
xorl
add
xchg
sbbb
cs
add
lcall
jns
add
insb
pop
nop
in
les
add
out
sbb
push
and
inc
add
add
jp
add
mov
jo
push
push
subl
cwtl
add
jb
int
sahf
in
push
cltd
sbb
scas
or
or
push
ljmp
add
inc
out
hlt
add
hlt
xor
notb
or
or
jp
jae
push
inc
pop
mov
add
lea
loope
test
ret
dec
gs
shlb
jb
fwait
add
adc
mov
mov
mov
inc
hlt
push
fcomp
inc
scas
or
xchg
inc
data16
fstl
pop
loopne
sbb
lods
add
test
jns
add
lahf
pop
insl
dec
jle
cli
fimuls
add
repnz
sti
xchg
push
fs
cmp
pusha
addr16
pop
sbb
iret
mov
ja
add
movsb
dec
add
pop
lcall
mov
sbb
jg
rolb
es
and
adcl
lock
or
pop
add
inc
addr16
push
push
mov
and
call
xor
adc
int
inc
daa
add
enter
cmpsb
cmp
sub
in
push
add
repz
or
cwtl
inc
adcb
jp
iret
or
dec
add
faddl
and
mov
in
xchg
je
pop
add
fs
xor
mov
jecxz
jg
xchg
mov
xchg
out
mov
and
int3
pusha
adc
stc
add
mov
xor
adc
push
or
jmp
outsb
daa
test
sbb
jne
in
fiaddl
into
mov
rorb
mov
xor
jg
jns
mov
cltd
loopne
sbb
add
rcr
add
shl
ja
jne
and
dec
add
arpl
xor
nop
lcall
push
adc
sahf
daa
cwtl
cli
iret
add
in
bound
dec
xor
pop
mov
icebp
or
mov
mov
sbb
cmpsl
test
loop
call
mov
mov
out
addl
andl
add
xchg
das
pusha
mov
int
repz
adc
xorb
out
pusha
inc
adc
mov
push
cmc
inc
mov
push
int
inc
pop
rcrl
adcb
ret
sahf
js
mov
pop
int
bnd
test
test
mov
jne
xor
push
ret
in
sbb
xchg
or
ljmp
js
lret
mov
cmp
add
add
fistps
push
mov
push
jb
cmp
lret
repz
mov
es
popa
jo
movsb
mov
add
sbb
add
push
mov
jb
push
add
inc
jp
cmp
inc
in
loopne
scas
leave
ja
add
or
add
pop
mov
mov
fs
and
pop
or
icebp
fildl
nop
lea
mov
pop
out
xor
mov
push
cmp
pusha
and
and
or
jae
and
insl
mov
and
jb
mov
out
inc
mov
jne
sub
add
adc
fnstsw
addr16
add
dec
test
add
sub
mov
mov
or
add
fldenv
push
jo
loopne
cmpsl
add
mov
in
test
daa
fsubr
je
add
mov
int3
std
mov
popa
add
cs
jle
jbe
arpl
out
fmull
jecxz
in
out
cmp
add
mov
fs
xchg
push
jle
call
lds
mov
and
xchg
mov
cmpsl
popa
sbb
ret
xor
stos
sbb
and
or
mov
int3
mov
cli
out
rolb
and
in
xchg
lcall
pop
shrb
test
mov
inc
fwait
mov
or
pusha
mov
cwtl
cmp
pop
push
sub
mov
out
add
pop
fldl
mov
adc
inc
cmpsb
add
rolb
bound
add
gs
rcr
mov
ffree
add
mov
incb
cmpsb
cmpl
ret
pop
add
inc
sbb
inc
pop
dec
stc
inc
repz
and
jbe
push
mov
mov
adcb
add
push
dec
add
sub
jno
pusha
arpl
cmp
clc
add
in
push
cwtl
mov
push
sub
cld
nop
adc
addr16
xchg
sub
mov
jl
loopne
iret
lret
addr16
adc
ja
jne
push
add
and
les
xchg
adc
movsb
add
mov
ret
adc
addr16
enter
lahf
test
test
aas
sbb
mov
or
movsb
fwait
mov
sbb
rorb
add
push
je
sbbl
push
imul
pop
cmp
cmp
cld
add
ljmp
push
repz
sbb
sub
dec
mov
push
sbb
ret
xor
jno
sbb
cmp
in
add
push
fdivs
loopne
pusha
ljmp
fistpll
pop
sub
rolb
pop
das
jns
push
add
std
cltd
in
or
and
inc
scas
push
inc
add
fs
leave
xor
mov
cmp
mov
add
inc
sbb
add
aaa
cmp
xor
and
call
int
cmpsb
sbb
repnz
push
mov
adc
cmpsb
sbb
sub
rcrb
xor
mov
and
xchg
mov
pop
lcall
add
fidivrs
pop
sbb
dec
sbb
mov
push
push
push
shr
or
call
fstps
push
sub
xor
jbe
mov
gs
movsb
cmp
cmpsb
cmp
sbb
mov
jbe
add
dec
mov
add
mov
add
fmuls
out
cli
call
mov
xchg
pop
push
ret
xlat
rol
push
mov
icebp
stos
mov
out
test
cmp
or
out
paddq
push
pop
push
xlat
dec
jo
mov
stos
adc
add
or
jmp
push
das
sub
pop
rorl
andb
pusha
in
pop
pop
ds
lcall
add
es
jmp
push
xor
adc
xchg
push
push
jmp
mov
sub
js
push
inc
pushf
pop
cmp
and
loop
sub
das
add
fcomi
imul
add
push
dec
dec
xchg
sbb
mov
cwtl
and
push
add
repz
rolb
cli
pop
ret
cmc
jl
inc
mov
mov
adc
mov
cmp
add
gs
lret
je
xor
mov
fcoml
and
xor
pop
mov
or
sub
scas
cmp
aas
mov
test
add
cmc
inc
sbb
std
out
and
scas
inc
jecxz
and
mov
mov
in
call
imul
cmp
dec
inc
mov
clc
jge
bts
outsl
jle
dec
push
push
and
add
in
flds
addb
add
jg
int3
cli
lea
sbb
adc
out
dec
out
xor
repnz
mov
jmp
rorl
or
jmp
add
out
pushf
out
jae
and
sbb
xchg
ljmp
je
cmpsl
into
mov
in
push
popf
loope
mov
imul
add
jp
xor
jb
add
jmp
pop
gs
lock
lcall
int3
inc
out
in
jne
aam
inc
cmp
sub
cmp
outsb
add
out
sbb
shrb
ljmp
and
mov
push
mov
stos
add
out
mov
cli
imulb
xlat
pop
jl
aaa
and
repnz
or
inc
add
or
add
pop
lret
repz
sbb
mov
icebp
cltd
lret
xor
pop
stos
mul
sbb
jnp
adc
inc
ficomps
add
push
push
sub
inc
mov
loope
sub
int3
push
stc
out
int
imul
add
gs
xlat
jmp
dec
inc
aas
movsl
mov
mov
and
push
insl
adc
mov
inc
mov
dec
xchg
rorl
out
add
outsb
ljmp
add
jp
stc
sarb
neg
and
inc
add
jnp
add
cmp
sub
popa
popf
arpl
ret
hlt
xorb
lds
push
insl
loope
loop
or
inc
add
cmp
popf
leave
mov
push
xor
jmp
add
popa
das
leavew
lock
add
mov
push
pop
in
cmp
rorb
xchg
or
daa
add
imul
add
mov
add
iret
mov
mov
mov
jnp
xchg
cmp
sub
add
bnd
add
roll
shl
push
add
gs
mov
or
dec
in
jecxz
jae
ljmp
mov
pop
push
pop
dec
shll
mov
push
ds
push
add
in
call
add
cmp
aad
lea
outsb
popa
push
inc
jae
add
shl
insl
loope
mov
mov
scas
sub
iret
leave
out
add
mov
jns
adc
push
orb
xchg
mov
out
rorl
add
in
sbb
jnp
repnz
hlt
into
js
add
js
push
xor
sbb
addr16
pmuludq
add
adc
shlb
or
out
icebp
pop
push
and
ret
lods
inc
ret
call
pop
clc
stos
test
add
ds
dec
mov
adcl
mov
fwait
inc
fnstenv
cmp
push
loopne
pop
loop
shlb
jae
addl
out
aad
push
cwtl
daa
push
add
scas
pop
out
inc
stos
ja
add
push
decl
jle
jno
jnp
shrb
inc
iret
repz
add
icebp
xorb
add
dec
cmp
inc
into
daa
xchg
or
add
fiadds
jle
add
add
mov
or
mov
push
divl
mov
pop
mov
add
sub
rolb
push
xor
and
mov
outsb
lret
cmp
lock
and
fdivp
sbb
mov
adcl
shrb
testl
dec
nop
pusha
add
mov
lods
mov
ret
mov
add
hlt
ss
adc
xor
xchg
shl
out
scas
add
ficoms
test
add
cld
imul
in
add
in
jnp
rorl
mov
push
cmp
cmp
push
and
int
sub
pop
addb
sub
jae
add
stc
test
fisubrl
add
xchg
push
push
ficomps
push
in
push
add
neg
pop
or
add
xor
cli
add
mov
jle
dec
inc
fisubrl
ja
pop
mov
dec
in
and
push
cli
jns
add
jmp
mov
iret
or
add
inc
jne
sbb
mov
dec
int
push
cmp
aam
fidivrl
punpcklbw
mov
cmc
lods
xor
scas
jnp
adc
loopne
mov
adc
add
nop
in
in
or
stos
jle
mov
sbb
leave
sbb
jb
ja
outsb
fadds
inc
cmp
outsl
mov
pop
add
in
scas
fiadds
mov
xchg
movaps
dec
fisubl
sbb
add
in
sbb
and
mov
pop
cltd
ja
out
orb
insb
shlb
mov
daa
out
jns
imul
xor
je
ficoms
inc
pop
jecxz
xor
xchg
lret
sbb
iret
and
inc
bound
xchg
push
ret
aad
mov
sub
mov
ljmp
adc
dec
cmp
js
xchg
dec
jno
lods
sub
mov
subb
scas
jg
xor
notl
sbb
and
push
push
inc
adc
add
sub
sbb
iret
mov
mov
outsl
lret
sbb
add
mov
cs
pop
and
lock
xchg
ja
add
loopne
pop
adcl
mov
pop
sbb
xchg
repz
aaa
loopne
fstps
outsl
push
je
add
xor
pushf
or
sbb
dec
jbe
in
movl
jge
lods
addl
xlat
js
arpl
aaa
clc
add
in
cmp
loope
push
sub
push
pop
dec
fadds
xchg
leave
dec
hlt
push
mov
ret
mov
into
clc
int
mov
mov
pop
aad
fcompl
jbe
out
cmp
incl
cmpb
mov
pop
ljmp
daa
jnp
add
arpl
adc
pop
flds
and
push
loopne
bound
jl
ja
or
scas
dec
or
insl
mov
and
lock
xor
loope
sahf
cmpsb
cltd
cmp
shrb
add
stc
std
les
pusha
ds
add
xor
hlt
sbb
mov
lods
add
and
insb
jns
fbld
push
imul
and
fistps
adc
aas
pop
add
je
adc
adc
push
push
sbb
dec
outsl
add
push
cltd
mov
dec
mov
jmp
add
mov
add
pusha
aaa
add
insl
mov
ja
sub
test
into
sbb
divl
pop
das
adc
add
push
cmpsl
popa
insl
dec
xchg
ja
add
mov
jecxz
jl
add
pop
cmp
push
pop
adc
outsl
out
nop
addl
lock
xchg
cmp
testl
sarl
push
nop
adc
mov
add
iret
bnd
mov
js
mov
add
sub
xchg
lods
arpl
fdivrs
mov
icebp
xor
mov
sub
ret
add
movsb
pop
in
loopne
xlat
lds
sbb
push
ja
fistpl
adc
sub
mov
in
lds
xchg
shl
xor
mov
shlb
cld
addr16
dec
lds
adc
lea
mov
xchg
cmc
inc
mov
sbb
shrb
lods
addr16
out
dec
lods
xor
xchg
pop
out
sti
pop
cli
pop
xchg
jns
add
cmp
xchg
sbb
hlt
stos
shlb
lcall
mov
adc
repnz
inc
dec
jno
fiaddl
sbb
out
or
adc
dec
fnsave
adc
sbb
inc
adc
sbb
push
cmpl
jne
add
push
fcomip
imul
testl
adc
inc
cmp
pusha
fsubl
push
adc
pop
scas
nop
jp
popa
or
sub
mov
mov
enter
lahf
jns
bswap
fdivrp
push
inc
addr16
int
inc
js
inc
stc
inc
push
inc
jecxz
sbb
mov
sbbl
sahf
adc
test
sub
lahf
adc
scas
and
dec
idivl
jl
jge
pop
adc
and
movb
adc
adcl
movups
addb
mov
and
rcl
jno
call
inc
lahf
sbb
adcb
lds
inc
into
jge
dec
and
jmp
and
shlb
stc
dec
pop
mov
leave
cltd
subl
push
mov
popa
dec
adc
inc
mov
subb
aas
test
or
and
inc
fld
int3
adc
cltd
xchg
mov
ret
adc
push
rol
sbb
adc
xchg
and
maskmovq
flds
adcb
mov
mov
imull
int3
adc
cmp
adc
dec
pop
arpl
das
mov
lods
inc
ret
lds
arpl
inc
inc
jns
adc
inc
xchg
nop
ret
mov
rcll
and
les
dec
cmpsb
sub
add
xor
sbb
jge
xor
sbb
jnp
adc
xor
addl
mov
adc
test
jge
lds
aad
adc
dec
sbb
test
and
adc
clc
xor
popf
xor
gs
dec
jecxz
movsl
cmp
adc
std
loop
xchg
sbb
shll
push
clc
push
mov
or
sbb
out
mov
pop
inc
mov
jg
mov
scas
jecxz
add
lahf
in
sbb
or
cmp
aas
dec
fsubrs
cmpsl
xor
je
push
lds
ljmp
das
cmpsl
dec
gs
cmp
adc
sub
clc
mov
cmp
sub
test
pextrw
jg
cmp
scas
cs
lahf
cmpsl
xor
cmp
aas
inc
clc
outsl
cmpsl
lock
pop
popf
sbb
pusha
in
jmp
sbbb
das
dec
inc
sbb
jo
dec
andl
adc
dec
in
fbld
imul
cmovb
xchg
inc
xor
shl
or
out
sahf
adc
stos
sahf
add
sub
lcall
mov
dec
add
sbb
push
push
lret
adc
and
mov
shl
lock
test
add
pusha
arpl
adc
cmp
and
jle
sub
les
adc
cmp
and
xorb
ret
lock
adc
inc
shll
sarb
mov
sbb
mov
inc
mov
xchg
adc
aam
pop
dec
jnp
nop
cmp
movsl
adc
ja
add
mov
ror
sbb
mov
idivb
sbb
loopne
dec
xchg
push
pop
rorb
bound
loopne
pusha
pop
or
rclb
mov
iretw
nop
mov
stc
xchg
pusha
xor
mov
adc
outsb
mov
rclb
leave
rorb
cli
scas
and
cmp
inc
jp
js
push
or
mov
ret
xchg
and
mov
sbb
push
add
dec
adc
inc
scas
inc
lock
mov
pop
sahf
rol
or
lret
and
std
sarl
rcll
xchg
push
inc
pop
push
fistps
add
add
or
scas
adc
push
mov
js
cmp
push
mov
lock
lea
lods
push
mov
out
sub
aam
dec
add
insl
add
fsubp
imul
push
cmp
clc
aas
clc
push
data16
push
and
cmp
clc
test
test
sbb
xor
aas
mov
mov
xor
sub
cmc
inc
insl
fcomps
cmpsl
andl
shr
mov
inc
jg
testl
outsl
inc
adc
fwait
inc
jns
mov
adc
cltd
js
xor
shlb
cmpsb
fwait
test
dec
dec
add
cmp
pop
sub
jg
jmp
xchg
adc
imull
mov
sub
icebp
dec
mov
xchg
sbb
and
pop
rcrb
lcall
sub
or
popl
mov
cmp
ror
dec
imul
push
es
sbb
imul
adc
push
xor
subl
cli
sub
loope
cmp
cwtl
xbegin
push
inc
fs
loope
sub
dec
xchg
bsf
addl
enter
sbb
mov
add
mov
xchg
idivb
cld
out
jae
sub
xchg
fadd
push
and
xlat
push
rorb
adc
dec
pop
dec
push
add
leave
adc
fisttps
jno
cmp
into
push
xor
pop
xor
add
imul
mov
sbb
sbb
or
mov
mov
les
into
ljmp
dec
jbe
jae
add
jno
xchg
pusha
push
add
mov
push
add
adc
add
dec
sbb
add
push
addl
mov
test
jmp
add
or
fadds
mov
xor
cmc
xchg
imul
dec
stos
js
aas
xchg
rorb
jle
sub
pop
sti
scas
scas
stos
cmpsl
push
and
and
dec
jae
fisubrl
xchg
std
mov
fadds
sbb
push
test
or
ret
mov
enter
add
cmp
sbb
and
add
or
jp
add
int3
movsb
mov
adc
aam
aas
cwtl
leave
test
dec
sub
loope
add
roll
int
je
ljmp
les
popa
stos
dec
push
ja
int3
push
sbb
test
mov
ror
loopne
fmuls
getsec
pop
xchg
push
les
push
mov
fs
dec
imul
add
sbb
lock
leave
sbb
mov
loopne
int
rolb
or
cmp
or
xor
test
mov
pop
dec
mov
dec
insl
cmp
inc
jl
xlat
push
fucomp
add
emms
mov
cld
cmp
test
cmp
or
cmp
xchg
rorb
push
sbb
insb
test
sbb
pop
adc
xchg
mov
push
shr
push
cmp
and
sahf
cmc
out
jb
mov
mov
cld
std
cmp
cli
push
add
rclb
xor
xor
out
xchg
repnz
add
fiaddl
add
and
lahf
cmp
pop
lret
andps
inc
mov
add
dec
into
sti
adc
out
lret
mov
sbb
sbb
cltd
sbbb
add
cld
loope
jecxz
ror
pop
push
enter
testb
add
les
rcrb
lret
cltd
adc
mov
cmp
scas
cmpsb
pushf
adc
xchg
popa
lcall
ret
mov
aam
bound
add
jge
add
sub
in
add
bound
mov
inc
cmpsl
in
hlt
lea
sbb
cmp
dec
pop
push
iret
clc
adc
cmp
cmp
lret
dec
or
fistl
adc
sti
jo
inc
push
xor
fdivs
mov
fs
xchg
enter
pop
jno
add
call
in
aam
push
pop
lcall
fdivrs
add
iret
mov
mov
push
shll
sbbb
add
notl
lds
xor
ror
cmove
and
sbb
adcb
mov
adc
lahf
and
cmpsb
inc
mov
ljmp
xor
adc
jle
add
mov
and
adc
push
fildl
adcb
fdivr
sub
int3
pop
lret
sbb
jo
cltd
and
mov
pop
fsubrs
fstps
test
sbb
adc
fldl
je
ret
std
mov
mov
xor
mov
pop
das
test
jecxz
insb
jle
repz
lret
sbb
loopne
xchg
adc
or
cwtl
mov
add
sub
lds
jb
testb
out
mov
ret
sbb
fidivs
sub
adc
int3
add
mov
inc
sbb
or
xchg
ret
jecxz
push
addr16
test
imul
lock
mov
mov
add
push
jnp
lods
add
cmp
stc
hlt
add
mov
mov
push
jno
xchg
mov
pop
or
pop
jl
push
mov
ja
cmpsb
stos
repnz
pop
mov
enter
nopl
mov
loope
mov
adc
cmp
lock
xor
xchg
mov
jg
add
cmp
data16
add
les
sub
ds
adc
dec
insb
push
jne
hlt
pop
adc
or
cwtl
sbb
push
xor
or
push
fmuls
jo
shll
mov
adc
jb
xor
mov
pusha
xor
call
mov
xchg
test
xor
cmp
push
in
push
loopne
les
rolb
shll
bound
xchg
repz
jno
jnp
cmc
mov
mov
bound
iret
cld
dec
jmp
xor
cwtl
push
mov
enter
add
andb
jl
test
popf
xor
cmp
add
mov
adc
inc
add
stc
cmp
les
mov
adc
push
jbe
add
cmc
inc
mov
push
sub
not
testb
xchg
mov
jb
mov
and
mov
in
lea
add
js
clc
into
inc
adc
xor
jns
sub
cmpl
add
scas
cmp
popa
push
movsl
pop
or
mov
jle
shll
push
push
sub
daa
ja
add
mov
in
push
sets
rol
call
arpl
bound
outsl
ljmp
adc
dec
pusha
cwtl
mov
outsl
sbb
jo
testl
outsl
lds
lock
xchg
jp
add
xchg
into
jbe
add
movsb
repnz
pop
dec
add
pop
sub
daa
push
cld
jle
pop
mov
push
stc
and
sub
repz
xchg
mov
sub
cmp
and
loope
xchg
in
add
les
add
add
rolb
scas
mov
sahf
data16
fimull
mov
shlb
jnp
add
xchg
incl
leave
sbb
lret
push
mov
in
fsubr
sbb
add
jo
mov
push
popf
jle
and
call
sbb
testl
es
jmp
adc
fists
loop
or
movsb
iret
mov
pop
cmpl
sti
stos
cmp
cmpsl
lret
fs
stos
add
out
sbb
dec
cmp
pop
mov
nop
xor
stos
enter
icebp
add
sub
add
movl
cmpsl
mov
xchg
add
xchg
sbb
test
and
add
xchg
jp
xor
push
cs
add
add
push
mov
mov
mov
add
test
mov
inc
mov
sbb
jl
aad
inc
adc
sbb
rorb
int3
nop
pop
in
fadds
daa
mov
loop
shl
push
shlb
add
int
pusha
add
test
out
mov
cld
xor
test
daa
ficoml
faddl
cmovg
jle
out
nop
lds
mov
outsb
add
sub
xchg
test
cmp
mov
add
mov
pop
inc
cld
dec
aad
jbe
add
pop
pop
shlb
mov
push
loopne
or
dec
mov
loopne
pop
sub
add
jmp
jl
xor
pop
lahf
cmp
mov
or
add
cmp
imul
dec
lds
or
roll
dec
or
sbb
ds
dec
push
cmp
inc
decb
jno
mov
jge
cltd
add
xchg
inc
shlb
lods
sbb
add
sub
ret
loop
movsl
into
fs
stos
dec
or
cmp
jae
adc
cld
add
mov
inc
popa
les
aad
icebp
dec
add
hlt
pop
push
add
add
mov
push
jle
pop
test
jns
pop
xchg
pop
add
sub
fcompl
mov
pop
dec
pusha
add
jmp
lock
dec
icebp
call
addb
arpl
filds
dec
jg
add
sbb
stos
cmp
mov
jge
aaa
xchg
in
ljmp
push
add
inc
add
iret
mov
pop
cmp
dec
repnz
cmp
pushf
sbb
add
pop
mov
pop
lock
add
sub
aas
add
dec
fwait
sbb
jge
cmp
adc
and
adc
jo
sbb
jle
sbb
hlt
mov
dec
movsb
push
std
add
mov
fidivs
add
lret
nop
add
rorl
or
sub
insb
inc
adcb
lds
shrb
jbe
out
daa
ror
mov
sbb
add
fcmovnbe
lock
je
es
add
sbb
xchg
fidivs
out
sub
or
mov
sbb
mov
clc
fcomip
sbb
fimull
sub
cmp
dec
fidivrs
or
cmp
add
inc
imul
pop
mov
sbb
push
sub
insb
xor
add
icebp
pusha
movsl
jnp
push
add
out
in
push
cld
mov
dec
lret
cmpl
add
xchg
loop
mov
dec
jp
add
jle
insl
adc
dec
adcl
or
xor
in
movsl
xor
arpl
stos
enter
add
push
test
mov
std
repnz
pop
es
clc
add
cmp
pop
sbb
mov
stc
je
and
push
call
inc
xor
mov
add
das
in
add
add
or
sbb
xor
lods
add
sbb
jge
roll
movsb
cmc
dec
sub
aas
lock
mov
les
push
dec
mov
push
icebp
sub
add
pop
in
lods
sahf
add
cmc
sub
sti
addr16
roll
inc
cmp
aam
ret
pusha
lret
lahf
add
dec
push
mov
clc
mov
add
shll
int
cmpsl
cmc
out
sbb
leave
fisttpl
fdiv
pushf
pop
aad
xchg
xor
inc
insb
test
in
add
mov
jb
pop
or
mov
fwait
push
sbb
add
xor
add
ror
repz
or
jns
add
pop
xlat
inc
shlb
mov
inc
popa
sbb
iret
inc
enter
in
or
outsl
nop
push
pop
roll
daa
shl
sub
add
and
add
push
mov
jno
jo
jae
add
or
lock
es
aas
movsb
xor
mov
pop
xlat
or
shl
daa
leave
push
pusha
cmp
imul
ja
mov
sbb
inc
and
or
iret
sub
in
inc
cs
inc
testl
repz
or
sbb
push
pop
lods
add
add
sbb
sub
add
adc
dec
jecxz
dec
or
add
xor
bound
push
add
sahf
add
mov
xchg
rorb
mov
stos
and
js
jmp
adc
loopne
mov
outsb
cld
cmpsl
leave
or
add
fcompl
add
xor
and
mov
jae
fdivl
push
dec
inc
rcll
mov
add
pusha
xchg
pop
mov
data16
cmp
sbb
add
mov
pusha
dec
adc
call
cltd
popa
movl
jp
mov
xchg
roll
idivl
add
xchg
sbb
jge
rorb
jns
push
push
lahf
mov
ret
fimull
pusha
repnz
inc
insl
ret
lahf
sub
pop
sbb
scas
gs
cmp
push
js
shr
ljmp
jae
cmp
mov
scas
dec
pop
mov
jae
mov
add
adc
add
jnp
add
jmp
xor
pop
mov
xor
add
xor
rorb
test
pop
push
mov
xchg
data16
pusha
add
rcrb
iret
xor
repz
mov
lmsw
push
ljmp
mov
mov
test
nop
xchg
mov
sbb
outsb
rclb
mov
sar
into
cmpsb
xchg
repz
js
sbb
sbb
pop
add
outsb
jecxz
call
movb
xchg
push
in
adc
push
xor
xchg
movsl
jmp
ret
push
add
popf
fiadds
divl
je
add
arpl
jns
nop
and
leave
add
popa
je
mov
mov
dec
add
call
out
dec
shl
cmc
scas
nop
test
hlt
xor
outsb
push
jae
mov
fistps
mov
xchg
xor
rolb
push
rorb
jecxz
pop
and
xor
adc
sub
loop
sahf
sub
cmp
jo
shlb
int3
add
push
xchg
push
mov
add
xor
add
movsb
insl
ret
add
inc
outsb
mov
mov
mov
dec
jle
fwait
cmp
test
jg
sbb
rcr
push
mov
mov
loop
push
outsl
add
dec
and
jno
sub
xor
push
inc
imul
lret
into
ja
add
push
js
clc
jns
pop
add
xor
movsl
jle
sub
add
fidivrs
mov
jl
sbb
rcll
push
pop
mov
xchg
inc
sbb
out
add
mov
cmpl
rolb
test
daa
add
faddl
jle
test
repz
or
loope
aas
into
mov
daa
mov
fcoml
adc
inc
mov
lea
mov
add
js
and
fs
mov
fwait
mov
je
iret
out
and
xchg
cmp
jmp
xchg
sbbl
xlat
jae
in
jo
mov
pavgb
cmc
xchg
xor
jle
add
aas
sahf
jbe
movsl
sbb
mov
jg
dec
in
add
decb
push
hlt
add
outsl
cmp
loope
sbb
add
loop
repz
out
push
mov
pop
lahf
sti
add
leave
insb
orb
push
dec
stc
imul
jns
icebp
mov
lea
xchg
push
pop
pop
rcl
mov
addl
dec
mov
int3
add
cwtl
sbb
pop
jmp
mov
sarl
sarb
and
jno
testl
test
mov
cmp
ret
cmp
cmpsb
stos
mov
sbb
lret
sbb
sbb
scas
inc
stc
mov
add
xchg
sti
cwtl
pop
mov
pop
jno
xchg
rolb
add
or
arpl
add
lret
dec
lods
cmp
xor
adc
or
in
loop
xchg
mov
ljmp
ror
xorl
test
in
mov
cmp
addb
cmp
inc
cmp
sbb
mov
mov
out
mov
push
sub
xchg
pop
in
or
mov
das
dec
rcrl
adc
and
in
adc
lds
popa
iret
sbb
jecxz
les
daa
lahf
in
in
fsubrl
add
jmp
jg
add
adc
lds
add
push
sbbb
push
xor
adc
lds
lea
addb
mov
sub
pop
add
mov
in
sbb
or
xorb
add
jmp
call
sub
stc
add
sub
add
in
cwtl
sbb
leave
clc
dec
xchg
sbb
mov
push
dec
insl
ret
out
mov
jne
into
sbb
movsb
addl
cmp
xchg
mov
add
or
adc
push
bound
out
inc
sub
loope
dec
jo
test
clc
pop
add
shr
pop
xchg
fiaddl
scas
stc
mov
mov
in
mov
fcompl
js
jae
ret
js
fsubs
add
data16
ds
pop
mov
fcmovnbe
xor
cmp
loop
inc
add
pop
cmp
dec
jb
add
stos
mov
clc
jbe
add
dec
push
subb
push
add
dec
and
sti
add
xchg
lock
mov
cmpsb
test
jecxz
push
pop
loopne
add
add
cmp
out
xchg
dec
jo
jno
fcoml
add
fldt
les
leave
in
adc
sbb
fcmovnb
in
sub
lret
lods
adc
ror
push
bound
adc
testl
sub
adc
dec
sti
add
or
ret
add
pop
shll
xchg
adc
push
cld
mov
std
inc
push
rcr
test
add
fldenv
leave
jbe
aaa
add
or
add
jno
inc
xchg
fnstcw
add
lods
mov
inc
cmpsb
jle
push
pop
rolb
jae
shl
sbb
mov
jne
scas
pop
jns
sub
out
add
adc
into
jg
add
cmp
mov
je
jae
rol
test
fstpl
dec
cmp
jno
jl
cmp
into
subb
jo
rcll
cmc
popf
movsl
scas
cmc
or
sbb
lea
pop
jmp
pop
push
test
movsl
or
scas
inc
pusha
mov
insl
add
sti
dec
mov
add
xchg
push
rcrb
or
mov
fbstp
cmpb
test
add
cmp
cmp
sub
hlt
mov
and
roll
inc
popf
dec
popa
push
xor
and
jp
add
inc
lods
icebp
add
nop
out
cwtl
sti
pop
xor
ja
jle
jmp
add
sbb
jns
negb
mov
lret
cmpsl
jnp
mov
jno
shrl
lock
mov
repz
faddp
inc
pushf
add
or
push
adc
fldl
sub
loope
pop
loop
pop
mov
mov
repz
add
push
icebp
mov
dec
xor
lods
jmp
xchg
into
mov
cmpsl
lahf
or
cli
scas
stos
add
daa
xchg
mov
cmp
pop
das
popa
jb
rolb
add
inc
push
out
enter
mov
aad
jb
sbb
paddsw
jne
pop
add
fs
pop
fisttpll
aaa
add
les
outsb
in
add
mov
jecxz
sti
add
dec
cmc
fmull
sbb
mov
xor
jae
add
and
arpl
mov
int3
jmp
and
add
push
add
lods
pushf
bound
orl
fwait
scas
mov
ja
scas
adc
out
add
test
in
add
into
add
fldt
pop
enter
out
xor
shr
loopne
mov
stc
mov
jp
add
mov
sbb
jmp
int3
aas
adc
lods
jecxz
mov
popa
mov
jne
mov
add
in
sbb
and
add
or
sbb
cld
or
leave
popf
cmp
div
pop
push
add
or
fcmovbe
int
add
inc
push
mov
cs
adc
insl
adc
jp
add
lea
fwait
jl
outsb
psubd
sbb
insb
mov
into
and
and
mov
mov
push
add
xor
or
add
cmp
and
jns
add
bsr
jnp
orb
xchg
test
dec
les
inc
dec
push
jae
subb
daa
add
mov
push
hlt
cmpb
call
stos
cmpl
pusha
js
call
pop
wbinvd
cltd
add
pusha
test
add
jl
xor
pop
lock
adc
scas
pop
add
das
mov
jmp
mov
loope
and
mov
cmpsl
pop
ret
add
out
xor
addb
mov
ret
cmp
adc
hlt
and
push
xor
add
xchg
cmp
subb
pop
mov
push
mov
rclb
aaa
add
mov
jne
add
pop
push
hlt
std
cmc
xchg
fistpl
cmp
out
sarb
add
mov
xchg
lods
ret
loopne
leave
into
add
jecxz
outsl
in
and
mov
shlb
xchg
xor
clc
and
and
cmovns
pop
mov
imul
enter
dec
sbb
shl
add
cwtl
pop
sbb
jae
cmp
add
xchg
and
or
mov
cltd
add
mov
gs
dec
imul
lods
mov
cmp
jbe
cmc
fsubs
pushl
pop
xor
or
out
lock
sub
dec
add
es
sub
xchg
cli
popa
xor
pusha
add
jb,pn
jl
add
ret
jp
jle
std
fldl
xor
aad
out
sub
add
mov
mov
mov
adc
lret
rcr
fadds
fwait
sbb
inc
inc
loope
vorps
push
add
addr16
out
add
adc
push
in
adc
mov
jb
add
cmp
sub
xlat
xchg
add
xchg
push
fdivrs
add
dec
ja
add
movsb
imul
ficomps
or
xchg
xlat
loopne
cli
cs
lock
jg
jmp
ror
pop
inc
add
rcll
add
mov
add
stos
pop
iret
faddl
add
push
mov
inc
aas
aad
movsbl
subb
es
int3
cltd
and
cmp
inc
test
nop
add
jge
pop
mov
adc
rcrl
repnz
pop
into
orl
add
xchg
roll
lahf
cwtl
popa
popf
sbbb
rclb
movsb
fldl
pop
aaa
mov
sbb
cmp
fmull
push
in
dec
jle
roll
fsubrp
test
inc
int3
data16
cmp
mov
sbb
push
pop
shlb
movsb
add
mov
hlt
push
loopne
or
add
mov
addr16
xor
mov
cmp
mov
addb
cmc
jle
dec
add
cmp
nop
sub
arpl
xchg
aas
flds
pop
aad
or
mov
rolb
mov
out
shlb
cmpsl
or
leave
mov
pop
adc
punpckhbw
adc
push
add
leave
sbb
loop
mov
in
inc
dec
add
in
addb
jp
mov
fildl
aaa
sbbb
call
inc
pop
gs
push
dec
add
xchg
popa
and
push
aam
add
jp
stos
push
in
adc
xor
pop
dec
cmc
stos
mov
or
add
iret
aaa
bound
xchg
movsl
jno
sti
dec
mov
add
ds
push
xor
loope
adc
inc
outsl
push
out
xchg
stos
cmp
mov
push
jo
dec
xor
sbb
mov
dec
cltd
movsb
and
pop
jle
xchg
loopne
call
pusha
sbb
aas
inc
and
lret
pusha
loope
add
jnp
cmp
xchg
fdivr
dec
mov
adc
and
inc
and
cs
mov
hlt
mull
mov
ficoml
cmpsl
mov
or
cmp
movsb
gs
add
adc
lcall
stc
loopne
int
ljmp
incl
imull
rolb
out
test
cmpsb
push
inc
cmp
add
shr
adc
add
sbb
mov
aas
fscale
cmpb
push
out
inc
fcompl
stc
dec
inc
pusha
in
dec
or
orb
add
addr16
clc
and
adc
clc
rcrb
push
add
mov
aam
fisttps
or
fwait
lods
wrmsr
cmpb
repnz
sbb
call
or
stc
lahf
add
cmp
xchg
addb
add
xorb
push
pop
rcll
lock
aaa
xchg
add
in
cmp
and
jmp
nop
cmp
sbb
mov
xchg
jo
add
or
push
outsb
out
cli
mov
outsl
dec
testb
clc
icebp
pop
mov
test
add
mov
mov
xor
int
test
fs
loop
cld
imul
fcom
movl
inc
mov
roll
aam
testl
xchg
test
sti
fmull
mov
shr
dec
add
jge
push
cltd
inc
in
repnz
insb
jae
lahf
loopne
icebp
xor
fimuls
pop
aas
jge
push
pop
mov
popf
jp
cmp
mov
add
add
ljmp
rorb
and
jnp
sbb
stc
sbb
pop
add
or
add
rcr
lock
ss
xchg
mov
xchg
push
add
xor
or
inc
mov
loop
cmp
loopne
add
xchg
sub
or
fiadds
lods
add
cli
add
scas
mov
inc
add
adc
push
cld
sub
xor
sub
iret
add
ja
and
sbb
cmp
mov
add
jge
or
add
xchg
fisttps
add
stos
lods
mov
add
push
test
add
int
jmp
bound
fwait
lea
out
xchg
adc
jg
add
outsb
ss
test
add
cwtl
add
scas
fcoms
sbb
push
aaa
lock
ss
pusha
or
jge
add
pop
mov
push
push
add
inc
pop
mov
mov
xor
cmpsb
mov
insb
jmp
inc
mov
lcall
add
xor
mov
push
aam
mov
jno
out
push
xor
icebp
ss
add
mov
add
add
sub
jbe
jnp
sub
stc
ret
or
and
pop
test
xor
in
pusha
add
and
daa
aad
out
add
jecxz
push
inc
ljmp
aaa
mov
and
rol
or
fsubp
sbb
adc
mov
add
in
out
add
aam
inc
xor
sbb
xchg
or
dec
mov
push
jo
cmp
add
je
cs
das
out
cmp
and
cmp
push
xor
lret
or
insl
test
add
mov
push
lret
loopne
xchg
jg,pn
cmp
je
xor
mov
das
hlt
mov
ds
adc
xchg
dec
mov
sbb
aam
sti
add
outsb
jle
sub
popf
or
add
cmpsl
pop
mov
roll
add
ficoms
lret
adc
test
je
pop
and
dec
adc
sbbl
sbb
insb
lods
stos
inc
xor
jg
leave
rcrb
add
cmp
mov
jo
xor
xchg
addr16
lret
enter
pop
fld
scas
bound
lock
adc
push
repnz
sub
jge
add
adc
mov
xchg
cmp
push
sbbb
sbb
repz
sub
xorl
adc
sub
push
stos
dec
cmp
das
aaa
dec
cwtl
leave
sbb
xor
xchg
rorb
pop
ljmp
and
rclb
sub
or
pushf
or
insl
xor
ror
adc
stos
roll
dec
rclb
fs
inc
dec
ffree
dec
mov
push
push
xor
and
mov
mov
fwait
mov
jle
cmpsb
adc
push
hlt
jo
add
aaa
sbb
cmp
jb
popf
loopne
push
mov
out
add
lret
fs
add
nop
sbb
mov
lock
mov
and
movb
jb
rorl
mov
push
add
mov
ss
inc
mov
xor
les
xchg
xchg
roll
lds
inc
scas
add
out
loope
add
imul
sbb
push
xor
add
sub
stc
jo
pop
ret
jne
add
adc
add
inc
lods
mov
sbb
xor
stos
mov
sbb
cwtl
orb
sbb
popa
fadds
fildl
lret
xor
roll
jb
cmp
pop
mov
into
lcall
aas
mov
test
and
add
jns
pop
mov
and
mov
add
inc
adcb
ljmp
popa
out
sbb
insl
add
sbb
pushf
push
xchg
xchg
lcall
fwait
rcrb
and
fadds
rclb
add
lods
dec
pop
aad
mov
test
push
xor
ds
push
cwtl
mov
pop
loop
xor
addr16
or
add
je
nop
inc
std
ja
lahf
out
sarl
test
pop
dec
popa
fwait
out
add
mov
repnz
mov
scas
pusha
dec
sub
js
sti
add
push
fisubs
ss
or
xlat
repnz
lret
call
arpl
and
outsl
sahf
xlat
add
enter
outsb
andb
scas
add
adc
add
sahf
fldenv
cld
jb
dec
push
jae
mov
add
jge
adc
mov
cs
ret
pop
xor
jp
add
xor
pop
dec
fnstenv
adc
jb
mov
push
cmp
insl
inc
pop
add
pusha
dec
adc
nop
xcrypt-ofb
cmpsl
sub
clc
jno
pusha
iret
mov
fistpl
outsb
cmc
mov
xchg
dec
xchg
mull
fistps
sbb
xor
mov
add
psubsw
rcrb
fsubl
cmp
add
mov
sbb
or
mov
push
and
or
mov
jne
add
orl
add
movsb
jl
cli
jg
ljmp
xchg
loope
xchg
xor
testl
mov
mov
adc
add
jne
sbb
lahf
sahf
frstor
add
jns
jmp
push
jge
icebp
and
clc
scas
add
repz
xchg
daa
inc
bnd
add
loope
es
flds
push
xor
or
cmp
jp
mov
shlb
xorb
test
out
push
sbb
std
cmovo
sub
mov
add
sbb
pop
adc
insb
xor
sbb
jg
mov
xor
jnp
int
add
xchg
xchg
outsl
nop
dec
cmp
cltd
lods
adc
in
fdivs
fistpl
pop
xchg
inc
mov
push
icebp
out
mov
fadds
add
push
push
mov
in
xchg
lea
add
jg
and
scas
lock
dec
xor
and
add
add
push
popf
inc
push
mov
push
das
lods
mov
xchg
adc
xor
andb
or
cmpb
icebp
pop
bound
mov
jo
setl
xor
add
add
fs
jmp
mov
jl
add
xor
and
mov
add
lods
or
add
aas
jb
push
jno
into
inc
jg
lea
imul
das
add
adc
call
in
cli
imulb
cwtl
inc
aam
add
fistpll
add
pop
push
add
rorl
lahf
ficoms
jg
dec
inc
addr16
fadd
lods
popa
jp
jmp
add
js
mov
or
cwtl
fsubp
inc
mov
add
mov
aam
add
in
xor
int
call
stos
or
add
add
push
push
xchg
sub
out
mov
push
sbb
cmp
add
pushf
xor
mov
sub
add
das
inc
and
xchg
sbb
cmp
ja
cmp
mov
lret
inc
xchg
sub
mov
push
mov
insb
jo
add
push
pop
pop
jns
adc
push
loop
loopne
dec
add
jmp
and
jnp
mov
push
iret
verr
cmp
add
mov
es
xor
jno
lret
movsb
push
or
inc
shrb
sub
xor
dec
add
push
sub
pop
jg
paddsw
inc
shlb
cmp
int3
in
cltd
arpl
jb
rcll
lock
xlat
leave
lret
jo
pop
and
daa
arpl
cmp
insb
adc
testb
out
in
loopne
jmp
les
push
mov
outsl
int3
cltd
in
or
jg
cmp
xor
push
push
mov
filds
dec
mov
ja
jl
fisubrl
ljmp
inc
hlt
xor
jbe
sbb
pop
pop
push
sub
fsubrl
inc
add
imul
mov
aas
or
daa
repnz
push
mov
cwtl
in
mov
xlat
add
andl
inc
js
add
push
add
into
inc
or
lods
fsubrs
cld
pop
jmp
nop
clc
negl
ficoml
mov
fdivrl
int
inc
add
ret
push
lret
in
adc
dec
imul
sti
mov
add
cmc
adc
add
test
dec
sbbb
mov
push
fstpl
push
out
adc
jmp
or
sub
cld
mov
add
stos
loope
sub
sbb
lahf
push
adc
loope
add
xchg
dec
or
int3
jl
adc
addl
inc
hlt
inc
push
cmpsb
imulb
das
js
andb
xchg
jno
add
lods
hlt
adc
dec
movsl
add
jae
pop
jle
add
mov
orb
cmp
add
adc
mov
xlat
pop
or
add
sub
es
add
add
xchg
mov
ja
lahf
add
stos
adc
sbb
and
add
lcall
scas
xchg
je,pt
jl
add
out
sbb
loop
add
pop
outsl
roll
push
nop
dec
push
add
addr16
add
add
jb
xor
push
dec
std
call
pop
sub
aam
insb
inc
or
xchg
push
cmp
into
loopne
or
pushf
mov
cmp
in
mov
mov
lret
add
xchg
xchg
fldenv
mov
inc
outsb
jae
xor
shl
add
or
adc
mov
adc
outsl
jbe
aad
push
jecxz
pop
mov
mov
sub
sbb
popa
mov
popf
or
rorl
add
fcmovnu
sub
add
xor
stos
outsb
add
fdivrs
dec
sub
addb
mov
xor
mov
jl
add
jb
add
mov
sti
add
mov
popl
call
mov
cld
imul
add
and
clc
mov
ss
imul
push
iret
pop
cmpsb
repz
idivb
imul
add
in
cwtl
jg
push
icebp
andb
jle
lret
into
sub
shll
mov
add
cwtl
dec
subb
lods
mov
mov
das
enter
outsb
sub
cld
inc
popa
or
iret
sbbb
xchg
arpl
pavgb
imul
cmpsb
mov
inc
and
ds
push
hlt
and
cld
jp
testb
sub
mov
in
cmp
jmp
lods
add
clc
inc
arpl
sahf
lods
orl
mov
movb
icebp
push
add
add
mov
lret
nop
and
out
pop
mov
jecxz
fnstenv
sub
aaa
sti
nop
fcoms
sbb
xor
add
push
mov
popa
sbb
mov
jo
call
adc
mov
fwait
add
xor
mov
mov
movsl
addl
imul
adcl
push
mov
imul
repnz
cmpsl
adc
add
mov
repz
test
sbb
cwtl
leave
in
xor
mov
ficompl
xor
add
mov
adc
scas
rorl
sub
mov
push
add
hlt
ljmp
mov
jl
sub
mov
aam
inc
add
int3
mov
add
hlt
popa
mov
nop
lds
mov
pop
test
add
mov
lock
add
adc
push
xchg
nop
sub
xlat
jns
rcrb
pop
stc
hlt
pop
daa
cld
jmp
jnp
ja
cmpsl
push
dec
add
jns
movsb
add
inc
aas
mov
inc
test
scas
and
mov
or
pop
out
ror
sbb
inc
xorb
adc
cli
dec
xor
cmp
lret
fsubl
sbb
xchg
rclb
and
add
inc
pop
sbb
negb
cwtl
push
loopne
xchg
cmpl
scas
sti
jae
test
cmp
or
push
add
push
je
add
pushf
inc
push
jle
cmp
aas
lahf
sbb
jb
push
stc
cld
out
add
mov
mov
add
xchg
je
adc
stos
add
add
cld
sub
ltr
inc
fcmovnu
sub
fwait
add
pop
fnsave
mov
lret
nop
ss
jg
mov
push
mov
aas
add
ror
xor
cmpb
lea
out
or
cmp
adc
lock
cltd
xchg
mov
faddl
or
sbb
add
mov
add
mov
decb
call
sbb
mov
mov
push
jnp
les
loopne
cmc
and
insl
subb
std
mov
ffreep
xchg
push
sbb
jo
inc
mov
cmp
push
cltd
and
or
lock
mov
add
lods
push
jmp
and
push
sbbl
ficomps
mov
jmp
fnstcw
loope
cmp
and
movsl
adc
cltd
pushf
stc
add
xor
loop
cmp
subb
pop
cltd
in
add
ss
xchg
push
sub
pop
js
cmp
fs
outsb
stos
insb
inc
hlt
mov
mov
mov
and
cwtl
adc
adc
out
sbb
add
mov
arpl
xchg
add
mov
and
add
mov
jo
xor
iret
bound
loopne
or
add
pop
push
mov
das
add
ret
ljmp
adc
pop
cltd
cmp
jmp
xor
jle
popf
lods
xchg
push
mov
loope
xor
cmp
aas
je
or
das
mov
dec
movsl
lods
xor
xor
shll
and
push
inc
or
or
add
lret
seto
add
add
pop
jl
int
xor
jmp
test
aam
sbb
scas
or
xchg
add
push
adc
outsb
stc
cld
add
lea
pop
dec
dec
pop
mov
mov
add
insb
add
popw
jae
mov
mov
mov
jge
add
xchg
cmp
push
in
andl
int3
dec
addb
test
lcall
sahf
add
mov
fldt
rcrl
iret
scas
jns
stos
cld
loopne
or
add
in
pop
ss
mov
mov
add
and
and
push
cs
cmpsl
add
sbb
adc
mov
push
movsb
test
inc
and
mov
nop
clc
daa
jle
push
rorl
sbb
sbb
cmp
gs
xor
push
mov
ss
ret
rcl
in
rol
pop
shlb
mov
pop
jecxz
mov
xchg
jae
and
daa
cmp
mov
mov
cmp
inc
xorl
scas
jo
dec
mov
mov
jbe
in
pusha
loope
bound
repz
ret
shrb
mov
xchg
iret
mov
mov
rcll
jo
lods
orb
cld
dec
pusha
fnstcw
xchg
mov
mov
push
pop
fadds
push
nop
adc
cmp
mov
xchg
jno
cmp
sub
dec
push
or
daa
sub
sub
pushf
add
jge
cli
cmp
shrl
mov
fildl
sub
add
loop
loope
mov
add
inc
add
mov
nop
movsb
add
jno,pt
in
stos
add
scas
mul
adc
stc
push
mov
cmp
inc
jb
add
lods
icebp
movsb
adcb
add
pop
sub
and
fs
ja
jnp
cmpsb
addl
sub
mov
jg
pop
add
pop
xor
push
insl
ret
dec
add
dec
pop
add
inc
je
filds
fcoms
mov
add
in
insb
and
cmp
dec
cmp
pop
add
adc
push
xchg
iret
jnp
sbb
aas
mov
mov
xchg
pop
add
sbb
mov
push
and
mov
xchg
sarb
into
dec
nop
and
add
or
clc
inc
pop
lods
add
nop
inc
lock
leave
sarl
add
dec
add
xorl
cmp
pop
pop
add
cmc
orl
mov
mov
ret
orl
testb
dec
jmp
push
rorb
addb
addb
sub
push
popa
cwtl
mov
xchg
dec
gs
shll
mov
sbb
xor
push
mov
mov
mov
mov
jns
xchg
fcoml
xchg
push
xchg
jno
jmp
mov
sti
mov
or
aaa
in
xor
in
push
adc
addb
adc
xchg
jae
addl
or
les
movsl
dec
inc
test
pop
orl
inc
and
sbb
add
enter
lret
shlb
cwtl
xchg
add
loop
enter
call
mov
mov
sbb
cmp
mov
mov
in
lcall
inc
xlat
jl
push
xor
inc
sbb
mov
adc
lahf
mov
aas
insb
jg
mov
xor
out
ljmp
jle
dec
stos
test
mov
add
dec
test
mov
test
pop
enter
add
dec
data16
xor
in
mov
cmpsl
in
pop
fcmovb
xchg
inc
push
add
loop
ret
push
imul
popa
aas
movsb
add
std
jmp
adc
sbb
mov
ss
pop
cli
inc
adc
les
out
pop
out
dec
scas
add
mov
xor
sbb
pusha
or
sub
jg
or
pop
inc
faddl
jno
adc
add
int3
rolb
loop
fiaddl
ja
mov
mov
adc
push
add
sub
jg
or
popf
sbb
sbbb
inc
outsb
mov
push
cs
frstor
ror
mov
test
movsl
add
fs
mov
cmpsl
push
adcb
mov
cmp
lahf
daa
scas
sub
jmp
leave
test
pop
add
add
jo
dec
and
sbbl
test
inc
hlt
dec
pop
xor
jo
pop
mov
adc
enter
divb
sub
add
jae
inc
dec
sub
mov
test
push
add
js
aaa
xchg
mov
fistl
mov
mov
mov
movsb
mov
add
xlat
inc
cs
mov
xchg
pop
mov
cmpl
rclb
addb
pop
xlat
es
dec
and
or
and
pushf
adc
into
aaa
add
in
iret
outsl
mov
dec
mov
sbb
cmovns
cmp
cld
je
inc
in
sahf
xchg
jg
inc
mov
faddl
pop
andl
or
pop
ja
and
pop
popa
loope
jae
cmp
int
leave
mov
xor
ja
add
out
dec
daa
jmp
clc
push
call
mov
jecxz
jae
jno
in
add
push
cmp
mov
cwtl
jns
cwtl
insb
inc
popa
add
push
adc
sub
cmpb
inc
add
mov
test
sub
mov
or
mov
les
dec
adc
lret
test
sub
or
bound
push
adc
mov
push
pop
or
xchg
mov
out
sbb
or
test
leave
xlat
inc
sbb
sub
int3
or
sbb
inc
rclb
inc
scas
mov
pop
and
shll
ret
mov
mov
add
popa
or
les
xor
mov
push
int3
out
cmc
lss
add
lahf
jno
je
enter
push
sub
test
test
add
adc
add
mov
push
pusha
mov
xor
iret
add
jns
cwtl
add
aaa
aaa
dec
repnz
cs
add
cmpsb
jecxz
mov
jl
mov
add
inc
lds
mov
hlt
and
add
push
push
jle
scas
pop
push
jns
ds
rclb
jecxz
add
adc
insb
adc
xchg
popa
shrb
mov
insl
inc
adc
pushf
inc
add
sbb
or
mov
scas
xor
aad
dec
pop
rclb
jbe
divl
inc
add
add
or
insb
fsts
mov
mov
cs
mov
mov
push
mov
jae
pop
mov
xchg
sub
jno
mov
dec
add
dec
test
sbb
add
adc
add
nop
mov
push
in
and
mov
es
dec
add
test
repnz
mov
test
sbb
aas
mull
adc
into
sbb
ss
das
cmp
jbe
add
lret
sarl
jns
add
imul
jl
lret
sbbb
ja
lods
fcomps
dec
add
inc
xchg
or
adc
adc
xor
inc
stos
jb
push
int3
xchg
cwtl
mov
jo
cmp
xor
pop
or
push
push
mov
fs
jb
sbb
fsub
add
adc
inc
xchg
int
jg
pop
pusha
adc
cmc
popf
nop
and
mov
add
mov
push
hlt
or
xor
test
mov
in
xorl
cld
ret
add
cmpsb
dec
mov
decb
shr
stc
and
fwait
or
cmpsl
inc
cvtps2pi
pushf
xorb
fwait
stos
arpl
cmp
in
push
ja
rcr
and
xor
hlt
jg
pop
iret
sub
cld
push
add
pop
loop
lods
cmpb
add
sub
inc
arpl
add
arpl
xchg
nop
push
jmp
jge
ds
pop
js
adc
loopne
pop
mov
sbb
cmp
loopne
mov
ja
lret
jns
and
xchg
sbb
test
add
and
inc
mov
dec
bound
cmp
sbb
adc
fcoml
mov
or
mov
and
int3
jae
aaa
roll
neg
je
movhps
rcrb
mov
insb
sub
xchg
es
test
cmpsb
lock
pop
push
xchg
jecxz
in
nop
enter
and
nop
loope
mov
xor
xchg
or
inc
test
add
shr
ds
xchg
add
rcll
lock
add
out
arpl
add
mov
push
int3
add
stc
mov
addb
int3
rclb
int3
xchg
fsts
sbb
xor
repnz
jl
pop
cmpsl
xor
imul
inc
xor
xchg
mov
aam
lea
orb
xchg
ljmp
pop
inc
sahf
push
push
ja
rclb
dec
fcmovu
les
arpl
add
jbe
jno
scas
mov
fsts
ret
and
ljmp
adcl
push
das
xlat
sub
mov
jo
lock
sub
push
pusha
mov
xchg
mov
or
cmp
mov
adc
jns
pop
or
pop
mov
mov
mov
mov
and
js
cwtl
and
inc
mov
jl
or
dec
xor
dec
sub
clc
sub
adc
inc
cwtl
loopne
scas
sub
icebp
add
pusha
xor
adc
adc
arpl
pusha
cld
adc
and
rorb
xor
pop
add
ss
mov
js
addr16
test
mov
xor
pop
nop
add
outsb
rorb
jge
clc
ja
xor
pop
push
jnp
leave
fdivl
sub
dec
pusha
xchg
ret
sub
or
mov
adc
sub
push
jge
jmp
xor
subl
pusha
cmc
insb
jae
lret
pusha
icebp
cli
les
pop
inc
mov
sbb
mov
icebp
outsl
clc
sarb
xor
mov
and
xchg
jne
mov
xchg
jl
loopne
add
imull
dec
andl
adcl
rcll
dec
scas
xchg
xor
dec
loopne
sub
cmc
xor
mov
repz
jae
xor
add
mov
add
ds
nop
add
es
push
adc
adc
lret
scas
sub
mov
jecxz
cmp
mov
es
call
cmp
or
out
xchg
inc
xorb
shrb
add
sti
push
inc
push
pop
pop
inc
lods
mov
ficoms
xor
cmp
mov
cmpsl
insb
xor
into
repz
jecxz
insb
cwtl
dec
sbb
fdiv
xor
xorb
notb
xor
pop
xor
fsubl
push
addb
jb
fadds
or
clc
je
and
leave
and
ss
mov
and
ret
leave
stos
push
out
xor
cmpl
outsb
shll
xor
jecxz
add
arpl
sub
mov
icebp
mov
push
nop
mov
lock
rolb
or
mov
xor
and
jge
test
xchg
subl
shlb
mov
push
jecxz
cmp
xor
pusha
fdivr
mov
sub
jb
mov
cmc
and
jbe
add
fisubrl
and
out
mov
add
mov
les
or
mov
push
nop
sub
inc
shll
jecxz
add
movsl
adc
mov
outsl
push
sti
adc
shl
mov
adc
test
mov
push
in
rol
xor
adc
in
add
jle
mov
ret
popl
ret
mov
push
add
aam
and
dec
das
loop
push
push
jno
push
xor
mov
mov
les
js
mov
outsb
jg
xor
pusha
mov
pop
fsubp
ja
mov
dec
rcr
mov
ds
xorl
sbb
pop
pusha
push
lods
adc
ret
stos
jne
cli
mov
inc
shll
mov
in
jo
push
xor
and
loopne
push
or
popl
mov
mov
xor
mov
scas
test
js
xlat
sbb
lods
pusha
lahf
sarb
call
pusha
outsb
sbb
sbb
xchg
mov
popl
and
mov
in
mov
mov
push
xor
cmp
nop
push
xor
pusha
andl
fsubs
adc
cmp
mov
inc
mov
outsl
jge
rolb
dec
into
sbb
pop
add
cmp
mov
and
jl
or
xchg
push
and
sahf
std
clc
adc
mov
inc
arpl
jmp
sbb
inc
add
bswap
xchg
arpl
mov
ret
mov
cmp
or
xchg
leave
in
out
mov
mov
sub
pusha
adcl
mov
movntps
jl
sbb
mov
mov
and
jo,pt
loopne
inc
mov
push
jae
js
push
lea
and
mov
xorl
add
sub
add
js
inc
lods
inc
push
je
shl
mov
jb
fsubr
cwtl
xor
pusha
add
jne
out
add
and
notl
push
dec
dec
lock
adc
mov
mov
add
mov
shlb
add
push
fidivl
fsubs
mov
cmp
add
std
adc
cmp
add
lahf
movsl
mov
shrb
mov
hlt
adc
lock
dec
out
and
and
mov
loope
sub
inc
xor
jg
xor
clc
mov
push
jecxz
addb
shrb
inc
je,pt
xor
cwtl
xor
pop
or
inc
add
jl
out
or
jnp
sub
and
sub
rol
mov
pop
inc
shlb
mov
dec
and
cs
test
ss
icebp
sub
add
sti
popf
fsubrl
dec
sar
mov
sub
shl
loop
jle
inc
sub
popl
adc
mov
add
push
rol
sub
pusha
pusha
mov
mov
inc
xor
inc
rol
mov
ds
popl
sub
jecxz
ret
dec
add
int3
pusha
popa
leave
pop
mov
mov
movsb
xchg
ror
add
in
sub
dec
int
add
adc
movsb
xor
int
push
jae
jnp
sub
popl
sub
int3
ds
ljmp
mov
shll
inc
into
pusha
fmuls
sub
pop
scas
and
fndisi(8087
xor
add
add
xor
arpl
in
adc
shrl
adc
push
icebp
push
xor
jle
push
pushf
ror
sbbb
adcl
push
popa
jecxz
pusha
push
jb
mov
pop
pusha
pusha
cmp
push
outsl
inc
and
inc
push
shll
cmp
mov
pop
pusha
fadds
sub
sub
arpl
out
test
xchg
test
ret
pop
lods
pusha
addb
xchg
rclb
movsl
aaa
aam
and
jl
cmp
leave
loopne
mov
lret
jl
push
or
outsl
inc
les
inc
sbb
xchg
ret
lock
pop
jb
sbbb
pop
add
ja
cmp
add
ds
xor
ret
dec
xchg
adc
movsb
inc
pusha
or
popa
inc
les
dec
mov
push
lds
mov
adc
push
lock
jno
bound
pusha
or
lods
aaa
loopne
ret
push
add
push
inc
mov
and
xchg
inc
pop
test
xchg
add
inc
jae
and
das
pusha
add
fwait
test
push
pop
push
lahf
sub
mov
fsubrl
xchg
loopne
adc
xor
stc
addr16
ret
lcall
lods
and
and
lock
insl
and
and
adc
push
mov
xor
into
pusha
mov
and
and
sub
sbb
push
fadds
mov
xor
shl
insl
add
and
bound
popa
ret
mov
add
stos
loope
and
xor
mov
and
cmp
sub
stos
mov
shl
mov
add
push
mov
sbb
xor
in
loop
int3
inc
and
fistpll
or
mov
inc
mov
sahf
jmp
add
or
mov
sahf
or
daa
ljmp
xor
pop
add
or
ss
or
sub
out
lods
clc
xchg
xchg
sub
adc
and
inc
stos
shrb
sbb
jo
mov
inc
arpl
push
inc
loope,pt
add
pop
cmp
or
rcll
cmp
cmpsb
sahf
pop
push
and
scas
or
adc
adc
loopne
int
bound
out
ds
sbb
cmp
push
jl
or
es
push
cmp
mov
enter
js
insb
enter
popa
cbtw
insb
sbb
icebp
xchg
xchg
lahf
push
and
data16
loope
movsb
rclb
or
ljmp
or
js
ficoms
rcll
add
sbb
cld
sub
mov
add
mov
push
dec
aam
xchg
xchg
cmp
lea
cmpsb
push
insb
sbb
sbb
lds
movb
xor
adc
mov
lods
je,pt
addb
mov
xchg
or
push
or
lret
popa
inc
inc
or
popa
movb
clc
adc
xchg
sbb
xor
fs
or
mov
adc
pop
out
pop
sbb
sub
push
or
notl
rorb
out
lret
in
imul
dec
aam
pop
xchg
pusha
loope
ret
xor
cmc
imul
call
pop
popa
push
add
push
adc
mov
adc
lock
mov
inc
or
and
push
loopne
jne
inc
mov
pusha
in
dec
cmc
icebp
lock
into
push
outsl
shlb
addb
jb
mov
ds
lods
mov
and
sbb
adc
xor
clc
pop
pop
adc
jno
andl
adc
out
pop
adc
sub
cmp
xor
popl
adc
pop
lock
lds
leave
shll
cmp
clc
sbb
ljmp
decl
cmp
inc
dec
cmpsl
xorb
xor
xor
int3
sbb
cmc
or
add
ror
push
bound
or
popf
add
lea
mov
lds
sarl
inc
pop
or
test
sub
xor
inc
push
mov
fadds
adc
and
ds
ret
adc
cmpl
in
add
mov
inc
repnz
pusha
lock
push
pop
lock
inc
cmpsb
and
mov
sub
or
pop
aaa
sarb
and
jl
out
and
mov
inc
popf
fucomp
stc
add
pusha
and
lock
xor
mov
jo
xchg
xor
loopne
repz
push
mov
jge
jns
inc
jmp
inc
push
movl
jnp
inc
xchg
fadds
shrl
push
pop
add
pop
dec
test
push
add
ja
movsl
enter
push
lock
popa
push
pop
pusha
addb
rclb
adc
call
adc
cltd
jmp
add
push
jp
and
adc
ds
pop
stos
mov
dec
add
nop
xor
out
jo
inc
pusha
dec
int
das
add
cwtl
pop
stc
xchg
mov
xchg
push
xor
mov
pusha
or
mov
pushf
cwtl
adc
out
jl
enter
pusha
loopne
mov
enter
shlb
out
inc
out
shr
cmp
adc
xchg
pusha
loopne
pop
lret
mov
rol
cmc
jg
sbbl
out
popa
inc
clc
punpcklbw
bound
inc
cwtl
jl,pt
adc
stos
lea
cmp
lock
cmp
fcoms
lock
adc
and
out
push
repnz
xor
mov
int
js
and
xchg
test
punpcklbw
pushf
dec
mov
clc
lea
loopne
mov
mov
and
hlt
and
mov
jbe
sub
inc
mov
fwait
inc
imul
mov
push
mov
dec
movsb
pop
loop
sbbl
les
pusha
pusha
add
add
rorb
adc
shl
loope
out
sbbb
mov
adc
fucompp
popl
jle
movsl
ret
xor
fcomp
jmp
icebp
jae
icebp
js
jge
pusha
mov
js
xchg
inc
and
aad
rclb
mov
or
xlat
xor
pop
scas
pusha
push
adc
icebp
xor
fstps
push
xchg
jbe
mov
sub
adc
mov
fmuls
and
mov
inc
fnsetpm(287
adc
lock
or
xorl
mov
mov
cli
cmpsl
lret
pusha
lock
sbb
lds
clc
xlat
insb
pusha
push
adc
adc
cwtl
lock
das
fs
cmp
loopne
push
adc
xor
mov
out
mov
popl
int3
loopne
out
inc
push
je
test
rorb
test
pusha
lock
pushl
aam
xor
movsl
pop
pusha
add
sbb
movsb
jl
aas
or
dec
es
test
out
lret
shl
sub
rcrl
push
loop
mov
pusha
pusha
mov
pop
pusha
bnd
subb
mov
out
daa
aaa
and
jg
rcll
fcom
call
xrelease
popl
call
pusha
ljmp
mov
sub
mov
rorb
aaa
adc
cmp
pop
fidivl
cmc
pushl
jne
pop
inc
cmp
ja
imul
loopne
or
imul
add
fs
xor
movsb
or
xlat
mov
pushf
shll
adc
xchg
loopne
sub
mov
inc
jno
movsl
dec
out
dec
push
adc
sbb
xor
jp
out
and
subb
mov
bound
sbb
int
mov
mov
rcl
adc
addr16
hlt
and
ds
or
fs
add
jecxz
add
pushf
popf
out
int3
add
out
jl
adc
in
and
xchg
mov
addb
test
sbb
mov
pop
add
arpl
jl
lret
sbb
mov
jne
popl
and
ds
sbb
xor
ss
js
adc
imul
adc
js
cmp
sub
ror
jae
push
mov
push
jnp
sub
sti
add
test
sbb
jb
adc
les
stos
in
lock
adc
xor
adc
lock
cmc
popa
push
ds
stc
inc
invd
add
stos
pop
sbb
lcall
or
and
add
mov
mov
push
addb
iret
mov
cmpsb
call
sbb
cmp
push
ds
ds
adc
sbb
dec
push
enter
add
imul
or
add
movsb
xor
or
add
mov
xchg
loop
and
xor
or
or
gs
inc
sbb
or
add
or
adc
push
sbb
mov
adc
fsubrl
or
pusha
push
pushf
nop
sub
test
adc
and
xchg
or
adc
push
add
sbbb
mov
sub
xchg
xchg
push
adc
mov
add
inc
pop
mov
pusha
mov
pop
int
mov
arpl
out
sti
sbb
leave
inc
mov
hlt
outsl
mov
aam
rcll
mov
mov
add
faddp
ret
adc
sub
sbb
mov
test
sbb
mov
adc
test
sbb
sbb
fiaddl
jbe
outsb
push
repz
and
add
fstps
sub
mov
daa
lcall
jns
je
cmp
enter
cld
jnp
push
inc
fdivl
push
adc
adc
pop
push
pushf
mov
and
pop
adc
add
rolb
sti
in
mov
fldt
sub
xchg
jno
add
cmpl
inc
xor
out
mov
add
inc
xor
leave
enter
loope
adc
popa
jl
xor
dec
inc
inc
push
xor
mov
loope
sub
inc
lret
inc
add
cmpl
cwtl
xchg
adc
xchg
adc
mov
sub
hlt
and
popf
leave
jo
mov
testl
add
pop
and
sbb
push
pop
invd
test
sub
pop
test
mov
outsb
cs
pop
add
dec
xor
fs
int
pop
and
mov
mov
mov
aaa
rorl
dec
lcall
pop
and
in
adc
adcb
inc
xchg
lods
and
xor
and
mov
loop
or
ja
or
push
sbb
add
addb
repz
cld
lds
jae
mov
cmpsl
fwait
pushf
leave
pop
and
adc
in
inc
repz
dec
sub
pop
or
mov
pusha
sbb
lret
sti
and
pop
enter
xor
call
mov
stos
or
xor
pusha
fmull
sub
es
negl
mov
dec
mov
xor
dec
jp,pn
or
adc
xchg
sti
adc
pop
dec
faddl
and
rol
push
push
lock
cmc
add
push
popf
pusha
pop
mov
lahf
sbb
pop
fldcw
shll
aam
popf
adc
sti
leave
sub
fistpl
mov
xor
dec
into
mov
mov
mov
push
test
mov
into
pop
xchg
jae
sahf
sti
jne
fmuls
adc
xchg
les
negl
in
dec
sbb
or
dec
imul
scas
or
inc
xchg
iret
pushf
xchg
lods
test
inc
adc
mov
mov
jecxz
nop
inc
mov
add
jnp
sbb
mov
fsubrp
ss
ret
pop
arpl
andb
jp
add
in
enter
push
jg
adc
cli
ds
stc
out
push
dec
dec
mov
dec
add
pop
test
inc
shl
xor
xchg
pushf
sbb
xor
add
fwait
xor
or
cs
xor
jecxz
and
and
ret
test
test
mov
sub
and
sub
mov
add
mov
mov
aam
push
ljmp
cltd
xchg
pop
or
cmp
pop
lret
sbb
cmp
or
jns
mov
inc
in
pusha
cmp
addl
cmpl
enter
loopne
cmp
mov
ret
adc
sub
leave
jae
add
js
sub
ret
pop
push
mov
adcl
lss
orb
movsl
cmp
and
push
and
mov
dec
add
loopne
xor
adc
or
cmp
xchg
inc
add
fwait
mov
add
xor
mov
xchg
add
sbb
cmp
dec
and
arpl
js
in
add
fbld
cmp
dec
das
rorl
es
jnp
xchg
add
mov
jge
or
int
negb
sti
das
insl
leave
cmc
rorl
add
push
hlt
call
iret
daa
icebp
rcrb
repz
ret
mov
scas
inc
mov
add
clc
dec
rorb
stos
cmp
pop
je
sbb
arpl
add
mov
sbb
aaa
pop
add
in
mov
imul
inc
add
dec
mov
push
dec
cmpsl
data16
sbb
rolb
in
sbb
repnz
rcl
leave
add
std
mov
and
cmpsb
hlt
sbb
pop
jns
pusha
es
insl
popa
mov
add
xchg
lods
add
addr16
ret
and
mov
pusha
mov
add
test
notb
lds
insl
xchg
adc
mov
aam
add
xor
jns
mov
add
lods
cmp
sub
mov
cmp
iret
inc
icebp
out
lea
js
jns
pop
out
dec
add
xor
pusha
clc
out
add
add
fiadds
lret
out
test
adc
rclb
add
and
outsb
and
or
shll
mov
jns
inc
adc
sbb
mov
repnz
bound
das
data16
loop
pop
subb
nop
push
shll
sbb
sahf
push
lcall
adc
jae
mov
sub
test
aas
mov
fistl
push
sbb
push
pop
std
es
mov
push
pop
iret
jg
pop
pop
inc
push
cmpsb
int
hlt
add
and
rorb
add
pop
leave
rorb
push
in
out
dec
popf
mov
inc
iret
shlb
pop
mov
and
sbb
rcl
dec
and
add
inc
or
add
in
rolb
aam
add
movsb
mov
mov
test
adc
pop
dec
jb
cmp
int
addr16
pop
fldl
insl
out
mov
sbb
mov
mov
cmpsb
iret
aas
jbe
popl
mov
ds
clc
sub
stos
add
aaa
in
xor
xchg
sub
sbb
aaa
push
gs
add
mov
sbb
lock
add
cwtl
xchg
mov
add
mov
js
bound
or
popf
lcall
pop
cmpsb
mov
enter
loopne
jo
add
push
jge
inc
mov
rcr
lcall
cmp
loopne
or
xor
jns
add
jecxz
pop
les
pusha
jmp
cs
add
mov
dec
ja
pop
pop
sub
call
in
lret
loopne
push
add
mov
inc
sbb
inc
dec
add
sarl
clc
cmp
add
dec
mov
out
cmp
insb
push
add
and
fmuls
xchg
jge
or
push
pusha
ja
sbbb
ds
inc
cmp
xor
xor
call
pop
xchg
and
and
jo
pop
cmp
jp
adc
imul
xchg
popf
ljmp
repnz
pushf
lahf
aam
jmp
adc
inc
inc
mov
add
cli
inc
sbb
push
push
and
popf
dec
adc
jmp
push
add
dec
add
ds
mov
push
push
jle
mov
shl
cmp
xchg
jne
stc
cmc
adc
dec
jno
adc
setp
fistpll
dec
xor
testb
hlt
shufps
mov
xor
ljmp
lea
adc
gs
jae
add
cmp
push
jecxz
rorb
test
lock
lock
popf
std
and
pop
sub
push
cmp
nop
mov
cs
add
jbe
cmp
dec
adc
or
cmp
dec
aam
faddl
dec
xchg
cltd
pop
xchg
inc
inc
addps
add
sub
rcrl
push
jb
sbb
mov
imulb
lock
xor
add
pop
add
popa
repz
ss
pop
inc
xor
add
add
add
insb
test
cmpsl
fwait
add
clc
xor
sub
push
mov
jo
sub
ss
mov
or
ja
or
and
cmc
fsubp
mov
add
push
adc
lahf
popa
pushf
stc
and
out
xor
dec
adc
es
out
sbb
cmp
dec
scas
and
je
out
sub
cmp
in
dec
repnz
sbb
jecxz
lock
add
xlat
inc
dec
bound
or
xor
cmpsb
out
add
push
jecxz
enter
add
mov
push
popw
push
sbb
test
cmc
add
mov
inc
add
inc
add
shlb
addb
pop
insb
movsl
mov
xchg
pop
adc
add
push
icebp
push
sub
dec
fbld
add
mulb
test
cmp
add
adc
data16
sub
jno
imul
daa
mov
dec
repz
dec
dec
xor
roll
ljmp
subb
add
pop
pushf
adc
sub
add
call
sarb
xchg
test
jno
sub
and
addb
scas
add
and
pop
dec
sti
push
lods
arpl
mov
xor
cmp
jle
sbb
mov
jo
sbb
pop
or
push
adc
popf
mov
mov
dec
lret
inc
sub
fst
cmp
jecxz
add
dec
fwait
push
lcall
pop
mov
mov
push
add
rorb
mov
mov
add
push
inc
aas
xor
mov
rcl
inc
pop
inc
add
jbe
aam
lret
xchg
rdmsr
xchg
cld
ret
sbb
mov
dec
ret
scas
rorl
mov
popa
test
adc
imul
jne
pop
add
cmp
add
popa
popf
int3
add
jno
pop
loopne
fcomip
popl
push
mov
dec
xchg
cmp
stos
sti
hlt
xchg
add
pop
adc
add
cltd
stos
mov
add
cmp
psadbw
or
lret
jg
cmc
add
stos
daa
dec
mov
xchg
lcall
xchg
vmread
and
loopne
je
sub
or
mov
rcrl
dec
rolb
inc
inc
mov
dec
jmp
ret
push
add
sahf
std
lret
and
dec
sub
roll
xchg
repz
add
add
loope
inc
xorl
cli
cmpsb
lea
insb
add
out
stc
pop
sub
or
fnsave
fadds
aad
adc
lea
call
les
inc
mov
inc
sbb
dec
in
cmpsb
aas
mov
adc
push
xchg
jns
adc
mov
lret
mov
add
mov
xor
pop
ljmp
pop
add
add
stos
adc
out
repz
add
shrb
push
push
add
cmc
cs
lock
sub
sub
lods
fmuls
xchg
sub
bound
sub
add
add
mov
pop
sub
sub
mov
cwtl
jo
or
push
push
mov
add
add
mov
or
inc
stos
nop
xchg
jo
jl
aas
pop
insl
sahf
xchg
rol
sub
icebp
into
sbb
filds
pop
add
int3
and
mov
aas
pushf
dec
mov
lret
sub
add
jmp
fiadds
das
popa
push
faddl
loopne
cli
dec
add
loope
and
xor
push
imul
add
and
repz
or
mov
fldenv
jl
sub
dec
cld
or
xchg
mov
or
test
pop
lods
sub
imul
inc
lahf
fldt
or
add
lock
jno
fs
add
js
addr16
add
cmp
shlb
add
jbe
push
call
xor
cli
cmp
mov
cld
push
cmp
add
sbb
lcall
int3
inc
pop
call
pop
sbb
inc
fwait
add
rorl
cmovo
adc
push
pusha
adc
pusha
and
test
cmp
mov
std
xchg
ja
add
lods
mov
mov
in
adc
verr
cli
aad
int
test
or
xor
int3
add
loopne
inc
add
pop
sub
mov
int
cs
cmovns
pop
pop
mov
fadds
pop
aad
fildl
lret
insb
mov
xchg
repnz
xchg
jbe
xchg
jge
push
mov
inc
push
add
push
adc
pop
inc
mov
pushf
xchg
movsb
cmpsl
into
pop
movsl
imul
pop
sub
inc
cltd
mov
sub
out
add
mov
dec
mov
out
cmp
add
les
xchg
dec
push
cltd
sbb
pop
in
daa
fidivs
add
cmpsb
dec
scas
adc
jle
or
in
xchg
aam
lds
inc
imul
shll
lcall
ror
sub
iret
push
gs
xor
jnp
dec
or
or
and
and
cmp
add
cmp
mov
xchg
add
inc
stos
pop
mov
addb
cli
clc
dec
dec
mov
jbe
jmp
les
fstpt
jecxz
xchg
mov
mov
mov
int3
sbb
mov
xchg
aas
fiadds
xor
loop
push
add
sub
test
push
incb
ret
cmpsb
shlb
xchg
adc
jmp
add
mov
ds
push
xor
data16
mov
js
fcomps
push
cmp
mov
jae
neg
add
add
sbb
cwtl
add
shr
arpl
mov
std
add
ret
jo
ljmp
icebp
xor
adc
pop
aaa
mov
sbb
outsb
test
mov
xchg
loopne
ret
and
out
sbb
fcmove
inc
es
sub
pop
outsb
pop
sti
lea
loope
fdivl
push
sbb
mov
xchg
dec
xor
mov
jno
outsl
dec
xchg
and
push
sarl
lret
push
stos
orl
fcoms
roll
fmul
inc
sbb
imul
cmp
js
outsb
dec
jg
shl
fwait
adc
cs
out
adc
lret
subb
nop
sbb
inc
sbb
lock
mov
cld
push
fs
mov
push
push
es
je
push
fiaddl
mov
sub
pusha
in
mov
clc
loop
add
push
adc
xchg
push
int3
cmpb
adc
rcl
push
jl
xchg
mov
xchg
mov
and
shlb
add
lea
loop
insb
faddl
into
add
imul
je
add
fprem1
mov
xchg
xor
pop
sbb
shl
pop
inc
test
aam
jg
fldenv
add
rcll
cmpl
cmpsl
xchg
or
cmp
in
inc
pop
in
es
pop
dec
xor
test
cmp
or
add
les
js
leave
mov
xchg
nop
xchg
add
and
add
ljmp
int3
lock
add
ret
sar
imul
sub
dec
pop
add
dec
rorb
dec
adc
add
mov
mov
pop
add
or
dec
fs
or
popa
inc
push
outsl
add
outsb
add
sub
mov
add
mov
pop
push
xchg
jno
notl
sahf
sub
mov
insl
push
ss
sti
inc
mov
adc
punpcklbw
jno
mov
pop
push
imul
pop
push
cwtl
pop
and
dec
pusha
aad
xchg
or
fdivr
sbb
test
add
dec
jno
sbb
mov
push
js
aas
or
testb
ja
mov
sub
sbb
scas
jbe
daa
fildl
xor
scas
or
sahf
cmp
mov
outsl
sub
add
mov
mov
stc
xlat
jne
pop
push
sub
dec
pop
push
sbb
mov
sbb
jmpw
sbb
daa
or
or
rclb
push
mov
push
sti
and
nop
mov
out
popa
fisttpll
mov
idivb
push
sti
cld
test
jg
add
sarb
jge
push
das
test
inc
push
xchg
add
adcb
insb
std
adc
mov
xchg
fbstp
data16
dec
mov
je
push
repnz
pop
and
xor
inc
sub
stc
add
je
mov
repnz
add
arpl
jnp
sbb
int3
fsubs
jge
mov
adc
and
mov
fisubrl
loop
or
and
clc
jnp
pop
xchg
dec
jbe
mov
mov
xlat
fdiv
icebp
cld
mov
add
sub
aam
lock
pop
jmp
in
aam
scas
add
outsl
or
adc
add
add
stos
mulb
mov
pop
repz
shl
mov
xchg
scas
adc
xor
xchg
mov
or
les
inc
dec
add
mov
test
insb
lret
mov
mov
cmp
ret
sbb
aam
or
aas
popf
add
cmc
imul
jno
andb
or
lea
loopne
jmp
mov
xchg
ret
or
add
sub
pop
xchg
inc
subb
push
push
ret
pop
sbb
cltd
mov
int
and
ror
stos
cmp
test
adc
mov
movsb
xor
add
xor
push
cmc
str
push
push
ljmp
leave
insb
rolb
inc
add
loope
jns
dec
or
rorb
or
add
mov
dec
inc
mov
fcomp
test
add
xchg
out
adc
in
ret
xor
ficoms
add
push
movsb
sub
inc
add
mov
add
sahf
lcall
sub
loope
xchg
clc
add
pushf
or
out
mov
incb
xchg
mov
adc
mov
jl
mov
inc
ja
add
aaa
and
xchg
out
fmuls
in
jmp
inc
sub
xlat
shrb
enter
or
lea
aad
and
sub
fadds
rol
test
ds
pusha
cmp
add
leave
cmp
mov
xor
ja
push
xchg
arpl
mov
jae
add
push
addb
insl
mov
sbb
push
and
xor
push
add
xlat
jp
mov
movsl
clc
xor
sub
mov
mov
insb
pop
adc
sbb
shlb
insl
clc
and
push
mov
xchg
call
mov
xor
fs
mov
push
cmp
test
pushf
outsl
push
ds
sbb
add
sub
dec
aad
push
ret
pop
movsl
push
jb
fmuls
fidivrl
pop
inc
sbb
insl
imulb
and
aas
std
or
and
iret
inc
adc
ss
ja
xor
push
or
sub
or
test
test
xorl
jle
add
lret
xchg
sarl
icebp
cld
arpl
lahf
mov
add
lcall
add
insl
stos
inc
data16
imul
cltd
test
lret
cmp
mov
add
bts
mov
sub
ds
sbb
sarl
xchg
xlat
mov
subb
sbb
pop
xchg
ror
pop
jge
out
add
data16
arpl
adc
aam
aad
in
xchg
in
ss
outsb
xlat
in
add
idivl
and
cmp
mov
dec
pop
decb
mov
add
test
add
pop
test
aad
sarb
jle
out
jg
test
add
sub
and
mov
addb
mov
xchg
jb
add
add
mov
ja
push
test
jmp
add
sub
push
add
cmpsb
mov
pop
subl
or
dec
inc
add
mov
lods
data16
je
pop
cld
push
fidivrl
int
dec
sbb
outsl
cli
jg
lea
or
into
dec
add
inc
cmp
mov
lahf
sbb
jno
add
push
fnstsw
dec
xchg
int3
sbb
add
ds
cmpsb
int3
cli
cwtl
add
dec
mov
lcall
push
cmp
sbb
cwtl
in
adc
or
int3
add
in
add
mov
jb
and
push
xchg
and
add
movb
jecxz
int3
dec
fistpl
add
adc
jbe
icebp
sahf
add
mov
outsb
incb
imul
stc
add
fstps
xor
sbb
xor
loopne
outsb
into
add
stos
icebp
xchg
adc
push
jne
sub
mov
sbb
ds
jle
jle
add
mov
gs
and
insl
sbb
lock
stc
in
lods
jo
mov
xor
shrl
dec
pop
movsl
adc
orb
cwtl
call
mov
pop
pop
call
or
shrb
addl
sarl
insl
add
lahf
or
dec
ss
shlb
stc
jge
pop
sahf
pop
fstps
cwtl
xchg
call
dec
push
and
cmp
mov
lods
jmp
insb
inc
sbb
push
xor
push
xchg
popa
mov
pop
add
inc
mov
lock
mov
cld
jg
dec
pop
inc
and
rolb
add
scas
fisubrl
inc
mov
inc
aad
mov
mov
nop
inc
cmp
imul
dec
push
pop
jge
cmp
xor
cwtl
or
add
mov
shlb
es
xchg
iret
dec
cltd
add
std
push
xlat
mov
mov
out
popa
cmpsb
sbb
pop
jle
scas
incl
pop
fwait
sti
jne
cli
icebp
mov
xchg
pusha
int
sbb
lret
push
inc
xchg
out
cmp
js
cmp
xchg
jp
and
fcomps
shlb
cmp
in
mov
add
enter
pop
lds
pushf
int
test
in
and
jecxz
bound
hlt
int
out
icebp
jle
test
xor
jle
shr
lret
sbb
pop
jb
adc
orl
jge
leave
mov
jo
sbb
add
sbb
push
adcl
cmp
xchg
jl
add
lods
sbb
mov
std
pop
clc
xlat
mov
lea
rolb
push
adc
call
add
pop
jne
lock
cld
mov
sti
mov
push
or
mov
inc
in
adc
add
mov
mov
add
fxtract
xchg
xor
jle
add
ljmp
add
test
push
cmc
add
mov
icebp
inc
mov
addb
inc
cmp
pop
cwtl
js
test
mov
push
pop
loope
sbb
add
dec
pop
mov
fnsave
test
adc
add
xchg
aas
loop
sbb
add
imul
pop
cld
mov
and
in
xlat
aad
sub
dec
and
add
roll
cmc
movsl
add
sub
bound
daa
or
in
dec
les
xchg
pop
cmpsb
ds
or
jg
call
adc
cltd
pop
or
and
popa
jbe
push
into
inc
pop
pop
and
imull
test
cmp
sarl
into
sbb
xor
add
vminsd
fmulp
leave
add
and
inc
hlt
int3
jbe
add
inc
ficompl
fldl
sbb
test
shll
inc
dec
mov
orb
test
mov
enter
mov
jne
add
sbb
in
and
pusha
xlat
adc
pop
ret
movsl
cmpsl
ret
add
mov
jmp
sub
loopne
test
add
pop
xchg
addl
lret
rolb
mov
ljmp
orb
and
jo
imul
push
sbb
popa
movsb
adc
cmp
push
jecxz
enter
jb
add
cmp
or
cwtl
andb
ljmp
pop
add
repnz
push
xchg
clc
mov
add
jns
lds
lcall
add
insb
cmp
cli
loope
andb
loop
in
push
popa
pop
dec
shlb
inc
jns
sbb
test
rolb
fisubs
adc
sub
clc
popa
add
mov
or
mov
add
and
roll
jecxz
pushf
or
lret
jnp
nop
sub
push
jl
pop
push
adc
add
sub
add
les
xchg
sbb
xor
add
mov
paddusw
imul
in
testb
cmp
test
inc
into
adc
or
shrb
jmp
out
dec
cmpl
xchg
push
pavgw
sub
inc
cld
or
daa
mov
add
cmc
mov
adc
add
xor
insl
pop
lock
mov
inc
add
cmc
add
pop
stos
lret
add
push
cmp
pushf
shrl
mov
inc
in
sub
sub
stc
loopne
insl
sbb
sbb
or
jbe
pop
nop
mov
mov
sub
xchg
pop
inc
add
fscale
lcall
imul
pop
or
jbe
pop
push
popa
fstps
mov
pop
cmp
lcall
pop
adc
mov
add
inc
shlb
push
out
test
add
adc
lods
mov
in
mov
xor
push
dec
into
and
xchg
test
cmove
pop
mov
adc
in
popa
outsl
or
push
inc
xchg
xchg
incb
pop
sbb
arpl
jnp
sbb
sbb
jno
sub
les
rorb
adcb
add
push
ja
adc
and
test
add
es
roll
cmp
add
cmp
test
dec
push
mov
test
gs
les
jecxz
add
add
subb
sub
stc
mov
test
mov
sahf
daa
clc
in
or
mov
pushf
jmp
jl
addl
inc
loopne
aas
pop
dec
dec
stos
add
add
sbb
into
sub
mov
pop
push
pop
dec
inc
add
pusha
mov
cmp
add
mov
mov
xchg
subb
mov
add
shlb
ds
dec
pop
xor
push
pusha
xchg
flds
add
jge
lock
xor
ds
verr
addr16
add
or
roll
clc
mov
sub
jb
addb
jnp
ds
sub
mov
xor
push
push
cltd
aam
xchg
add
fwait
and
add
ja
jl
rcll
nop
inc
pop
sbb
sbb
adc
dec
adc
icebp
cmpsb
push
dec
add
push
adc
lock
cld
subl
mov
in
ja
test
sbb
std
sub
add
insl
fildl
js
hlt
fwait
in
mov
add
ds
pop
jg
adc
stc
add
shr
sbb
xor
scas
sahf
lods
in
in
mov
rclb
and
xchg
andb
add
ret
sbb
sub
mov
fldl
and
ja
rol
dec
add
loop
cmp
in
mov
cli
fbstp
sub
incl
out
sub
sar
add
cmp
sbb
inc
and
push
loopne
imul
push
je
xchg
push
pop
pop
add
xor
mov
pop
push
xor
scas
aad
xchg
inc
sub
pop
aam
mov
loope
mov
fld
add
outsb
mov
in
push
pop
jbe
stc
rolb
jecxz
sub
or
test
adc
rclb
je
add
dec
mov
fildl
adc
xchg
fs
pop
loopne
iret
push
add
add
push
int
inc
ds
mov
xor
and
or
into
out
mov
addr16
js
or
shrb
mov
dec
jnp
bound
sbb
sbb
fidivl
mov
xor
std
mov
les
push
push
inc
cmp
lock
pusha
loop
or
add
jge
imul
lret
jp
push
rcrl
outsl
add
jmp
cli
jae
add
icebp
scas
dec
jo
adc
mov
scas
add
xchg
movsl
add
push
mov
ljmp
mov
ret
adc
or
jb
xchg
lods
hlt
mulb
sbb
lahf
stos
jle
mov
inc
cmp
push
test
mov
dec
mov
dec
mov
pusha
rcrb
add
imul
jno
mov
mov
mov
jmp
and
lret
adcb
dec
push
fldl
sub
and
inc
sahf
add
and
fdivrl
test
add
adc
clc
nop
scas
add
sub
ja
test
inc
arpl
sbb
xor
shll
ljmp
and
pusha
scas
movsl
sub
out
add
dec
jle
pusha
jnp
cmp
sbb
lret
lds
pop
mov
das
adc
mov
lock
stos
dec
loope
loopne
lods
mov
sbb
es
roll
push
jo
stos
popa
cmpsl
mov
sub
pop
add
and
adc
andl
fsubrs
add
stc
dec
test
push
add
fstpt
jg
cmp
repnz
imul
rorb
add
jno
mov
mov
sub
inc
je
sbb
scas
adc
pop
add
lock
not
dec
add
scas
sbb
loop
push
push
mov
in
mov
inc
add
jns
das
ds
jnp
mov
popf
mov
add
mov
insl
jecxz
out
and
adc
pop
scas
es
jno
popf
adc
aad
icebp
mov
jb
andl
cmp
ljmp
push
popf
mov
pop
inc
add
insb
repnz
test
andb
lods
mov
inc
lods
add
pop
lret
fdivs
xchg
ja
lahf
sub
add
fwait
repz
pop
push
rorb
pop
sar
arpl
es
imul
imul
sbb
ret
bswap
insl
enter
xorl
pop
adc
jbe
sbb
mov
outsb
adc
pop
add
inc
push
xorl
mov
pop
dec
hlt
add
out
test
mov
shlb
xor
std
jno
mov
movsl
loope
mov
test
add
fidivl
in
inc
lods
jg
mov
enter
xchg
repnz
jno
xchg
leave
shl
mov
test
lret
adc
jbe
add
mov
fmulp
test
cs
adc
fimull
xor
je
in
add
stos
addr16
jb
add
cmp
dec
int
pusha
dec
icebp
in
pop
cmp
xchg
adcb
push
cmpsb
push
inc
add
mov
add
add
jg
fstl
test
push
insb
out
add
push
pop
into
xor
aam
push
add
movsb
jp
add
mov
push
sbb
inc
jo
or
mov
sbb
insl
mov
std
ljmp
out
mov
jno
repz
rclb
aam
dec
sbb
add
mov
add
dec
add
gs
or
loopne
and
mov
add
out
rorl
add
inc
xchg
loopne
cmpsb
insb
add
add
pusha
mov
jp
aam
icebp
test
loopne
push
add
pop
inc
imul
jno
xchg
test
jmp
mov
xor
inc
repnz
ret
mov
dec
pushf
push
sbb
and
add
mov
adc
jae
lcall
sbbb
sub
pop
aas
pop
scas
sbbb
xor
pop
or
arpl
test
sub
inc
inc
popf
add
repnz
sbbb
movsb
into
cmp
add
or
xchg
add
aad
in
fadds
sub
mov
hlt
lret
adc
bound
ds
int3
adc
jb
add
xorl
mov
movsb
xchg
aas
repnz
and
nop
pop
cli
adc
test
dec
adc
mov
lds
sbb
sbb
cmp
jle
add
xor
popf
adc
add
std
inc
mov
rorb
sub
mov
sbb
cmpb
out
add
add
scas
inc
sbbb
and
lret
dec
imul
push
inc
xor
orb
rorb
les
lret
jnp
push
call
and
cmp
push
repnz
add
add
stos
filds
cmc
sub
or
xor
sub
es
add
xor
dec
bound
aad
inc
sar
pop
mov
mov
or
mov
bsf
gs
xorb
mov
cmp
sub
mov
out
in
inc
int3
xor
pop
jecxz
cmc
fsubrl
mov
std
push
inc
jno
sub
jmp
xor
add
mov
cmp
add
fildl
jno
push
insb
pop
push
mov
orl
lea
in
add
pop
ds
rorl
and
mov
or
iret
and
dec
icebp
push
repz
jbe
add
insb
lahf
fs
add
test
lret
inc
jb
daa
lcall
and
and
stos
leave
setb
pop
cmp
push
mov
push
sub
add
ss
sub
xor
sbb
in
sub
andl
xchg
inc
call
mov
mov
aam
add
push
ret
sub
lock
xchg
add
ret
add
cmp
faddl
stos
jbe
fimuls
cmp
test
cmpsb
sti
xor
and
scas
push
add
mov
add
mov
mov
pcmpgtw
jecxz
rcll
dec
sarb
cmpb
out
jbe
clc
add
out
pop
xchg
sub
mov
pop
jb
or
mull
mov
cmp
lret
adcb
add
inc
test
xchg
and
das
add
push
and
jns
add
aaa
push
loope
pop
xchg
add
sahf
in
shrl
add
add
rep
ss
paddq
push
and
xchg
add
push
jae
xchg
adc
test
je
std
loop
dec
pop
imul
add
cld
scas
test
dec
icebp
add
inc
ret
cwtl
insb
sbbl
ret
dec
hlt
dec
popa
inc
jp
pop
mov
pop
or
ret
add
fisttps
out
sbb
or
jecxz
xchg
xor
or
push
out
or
insl
add
subl
mov
dec
push
rclb
and
push
ljmp
xchg
loopne
add
jae
in
popa
addb
mov
fldt
add
push
filds
fsubrs
jae
stc
cmp
mov
add
jns
add
fdivrs
add
or
add
iret
aaa
xorl
mov
add
faddl
add
sub
ret
add
jg
fnstenv
lret
call
cmp
adc
aas
arpl
jmp
div
bts
sbb
fdivs
add
pusha
test
jno
or
mov
lds
xlat
jo
repnz
in
push
xchg
jo
dec
push
push
fiaddl
add
mov
add
repz
adc
xchg
in
push
sbb
cmp
mov
jns
adc
xchg
je
inc
out
das
iret
add
inc
xor
js
xor
push
clc
or
push
out
pop
outsl
adc
loope
mov
sbb
xchg
or
mov
mov
fstp
ss
cmp
jns
mov
lcall
push
and
mov
pop
out
dec
out
add
call
add
imul
out
sbb
movsb
adc
test
fcmove
sub
fbld
push
jne
cmp
push
test
add
dec
add
sub
es
js
xchg
out
cli
add
and
fisttps
in
xchg
addr16
lods
adc
or
in
cmp
cld
jnp
sbb
mov
movmskps
jl
lods
enter
or
and
call
cmp
jl
test
add
leave
hlt
inc
inc
add
pushf
sub
mov
xchg
add
stos
testb
shl
in
cmp
lds
inc
test
mov
xor
push
fdivs
ret
leave
lahf
std
in
mov
xor
pop
subb
pop
sbb
adc
and
add
mov
sub
and
pop
or
push
add
inc
dec
mov
je
mov
js
jo
scas
fwait
sbb
or
das
jbe
lret
mov
mov
hlt
or
cwtl
test
pop
add
fs
mov
in
icebp
mov
fiadds
stc
adc
and
cmp
add
jae
inc
lret
imul
sub
adc
add
xchg
aas
add
cli
int
add
xchg
lcall
addl
xchg
push
add
and
frstor
les
jecxz
fimull
rcrb
cltd
je
mov
and
or
jns
fldl
sub
ja
push
and
iret
push
stc
shll
mov
add
sbb
pushf
xchg
add
sbb
imul
shll
add
dec
lock
popf
add
pop
xor
repz
jo
xchg
sbb
andl
sbb
out
xchg
or
jle
std
insb
sub
iret
dec
cmp
pop
rcll
sbb
inc
fs
enter
push
sahf
in
cmpsb
mov
cltd
add
cmp
cmp
and
inc
xchg
test
jnp
lock
cmp
and
push
cmp
icebp
add
js
je
shrb
and
and
add
bnd
mov
mov
in
cmp
and
call
mov
cmp
push
sub
andl
jo
push
call
in
add
insl
rolb
dec
jmp
sub
add
icebp
push
and
mov
pop
in
xor
push
xor
ja
lock
xchg
pop
jb,pt
add
fcoms
mov
dec
les
add
add
or
mov
add
sub
mov
incb
aam
cmp
add
adc
cli
inc
sbb
daa
or
xor
dec
out
mov
mov
lock
mov
int3
loopne
xor
loop
jo
xchg
and
orl
scas
pop
inc
popf
mov
aaa
add
sub
dec
repz
add
aas
orb
sub
cs
scas
mov
sub
sahf
sti
repnz
add
lret
daa
cwtl
push
inc
jb
add
inc
leave
mov
cmp
or
adc
fcomps
push
push
pop
rcr
fwait
pop
sbb
adc
cwtl
adc
in
push
sub
add
dec
xor
sub
pop
stc
iret
inc
rcll
loope
or
jo
out
mov
je
jnp
add
jmp
jecxz
xchg
xor
lahf
in
mov
add
sbbl
dec
icebp
cmp
adc
out
jno
into
cmp
dec
add
or
mov
add
testl
ficomps
je
aas
test
sub
cmp
add
es
lods
adc
jns
inc
insl
push
ljmp
sub
jb
pop
add
popa
pop
loop
adc
movsb
add
aas
je
jp
add
cli
sbb
add
adc
repnz
aaa
outsl
pop
inc
mov
mov
xor
sub
adc
scas
add
mov
push
les
mov
jbe
adc
mov
add
es
cld
dec
testl
xchg
lcall
xor
mov
pusha
dec
int3
stc
add
fsubs
push
and
push
sbb
inc
and
xor
mov
scas
pop
jno
rolb
hlt
cmp
in
mov
add
adc
sbb
sub
push
outsl
cld
mov
cmp
rcl
sub
call
popl
rcrb
xor
lds
add
fbld
into
cli
pushf
jmp
and
mov
add
outsb
add
icebp
mov
cmp
pop
push
and
cmpl
leave
dec
jle
xor
cmp
shlb
sbb
sub
test
mov
ret
orb
dec
js
das
out
pop
nop
dec
or
jno
test
cmp
jg
push
or
and
jo
add
mov
mov
xor
xor
dec
add
js
add
push
or
jle
loopne
inc
mov
add
jge
jbe
jle
test
in
int3
dec
push
loopne
dec
bnd
add
adc
add
sbb
ja
fldl
inc
lret
xorb
mov
fwait
inc
push
rol
add
push
rcrl
push
addl
loope
repnz
inc
and
mov
es
adc
out
fisubl
inc
add
in
cmpw
add
js
fucomip
aas
add
fmull
dec
mov
rclb
popa
adcl
clc
jecxz
inc
add
adc
jne
pop
out
aam
inc
insl
lock
sbb
fadds
add
subl
add
fistps
repnz
shrb
add
enter
lods
in
fcmovu
lds
inc
pop
xchg
mov
or
push
jne
add
or
test
cmc
jns
das
sub
adc
test
sbb
xor
jg
cli
gs
pop
adc
seto
movsb
orb
push
sahf
add
xchg
add
mov
pop
jg
pop
shl
mov
xchg
add
scas
jecxz
loope
xchg
in
and
incb
add
xchg
shlb
lahf
mov
movsb
adc
add
add
test
push
sub
aad
inc
and
xchg
dec
imul
icebp
jne
add
sub
xor
xchg
xor
mov
xor
loop
mov
call
dec
push
pop
call
stos
sbb
push
movsb
adc
sti
out
jnp
xor
inc
push
inc
psubd
fsub
ljmp
pop
arpl
xlat
lock
add
dec
fildl
cmpl
mov
jg
xchg
cmp
add
xchg
sti
push
and
and
dec
pop
jge
ror
dec
pop
lahf
inc
outsl
mov
pusha
pop
mov
add
inc
jnp
mov
jge
icebp
mov
aaa
stos
pop
ret
shlb
xchg
pop
inc
divl
push
popa
in
andb
jge
dec
xlat
add
pop
add
push
inc
cmpsb
and
sub
add
push
sbb
fs
sub
push
inc
rcl
ss
sub
xchg
xchg
out
mov
pusha
sbb
sub
add
or
pop
in
push
mov
pop
mov
pop
mov
pushf
sub
add
imul
movsb
data16
add
sub
pusha
bound
pusha
frstor
or
fimuls
xlat
mov
add
out
pop
movsb
dec
cmovo
je
add
adc
int
in
dec
jl
inc
push
push
and
xchg
ss
or
dec
nopl
add
sub
cmp
int3
add
movsl
ficomps
xchg
add
mov
cmc
jo
add
cmp
dec
add
orl
adc
les
xchg
adc
shrb
popa
lock
or
pop
mov
orb
push
int
pop
pop
xor
ret
lahf
cltd
adc
rcrb
fadds
out
push
setbe
add
popf
aam
mov
push
or
pop
sub
jno
add
addl
xor
push
and
aad
and
jl
add
mov
add
sti
add
shr
lea
fcomip
lods
cmp
pop
mov
inc
bound
loop
push
push
or
lret
sub
dec
lock
shrb
insl
xchg
or
rclb
fnstenv
inc
push
mov
lods
cmpb
daa
mov
mov
ss
add
aad
pop
out
push
gs
xor
push
mov
cmp
loopne
mov
inc
test
loope
dec
insl
adc
arpl
add
fistpl
push
xchg
or
dec
inc
pop
xor
or
fisttpl
xchg
std
inc
inc
notb
sbb
add
out
push
cmp
and
mov
ljmp
adc
lods
cmp
or
xlat
mov
or
xchg
add
ficoml
add
mov
cmp
scas
add
cmp
jl
xchg
test
sarb
jle,pt
add
sub
ljmp
call
sti
jo
setl
lods
pusha
daa
fsubs
and
cltd
mov
call
sub
or
xchg
xor
mov
je
sub
fisttps
dec
mov
xor
call
or
pop
fmull
and
andb
cmp
add
testb
or
adc
mov
and
or
xchg
movsb
imull
inc
sub
call
and
stc
adc
in
add
rol
pop
cmp
and
dec
sbb
pushf
jg
ljmp
stos
fstpt
push
mov
inc
add
jne
mov
add
addb
stos
sbb
push
fs
fisttps
pop
scas
sbb
xlat
lock
xchg
xchg
sbb
adc
jmp
jg
mov
mov
dec
fcoml
fildl
or
pusha
jb
add
jno
add
adc
inc
test
popa
sub
nop
add
cmpsb
rolb
xor
jp
xor
sbb
insl
dec
je
pop
xchg
cmp
stos
mov
sbb
fidivrl
jmp
cwtl
popa
xchg
push
xchg
les
orb
inc
fisubl
xor
lret
add
add
movsb
add
sarb
jbe
sub
push
std
add
mov
pop
hlt
and
popf
leave
add
sbb
and
pop
xorl
je
add
pushf
sbb
jmp
jl
lcall
mov
dec
fdivs
add
add
loope
add
inc
hlt
dec
jp
or
cmp
pushf
xchg
mov
add
or
fldt
add
mov
xor
add
mov
fnsave
lods
movsb
jle
push
flds
pushf
cmp
xchg
pop
popa
sti
insl
ss
cld
xor
fisubs
mov
popa
arpl
add
adcl
add
xor
frstor
jmp
adc
xchg
mov
mov
mov
mov
sub
adc
inc
arpl
ficoms
dec
pop
pop
cwtl
inc
es
pushf
adc
add
sub
test
and
adc
mov
sub
aas
cmp
dec
sub
adc
mov
dec
cmp
incl
mov
bound
add
fs
push
lret
arpl
mov
test
andb
sbb
nop
push
ret
jo
mov
add
gs
movl
roll
inc
or
cmc
mov
push
adc
adc
and
rol
aad
push
pop
jns
jge
inc
and
pop
lods
mov
aas
or
or
icebp
int3
add
mov
inc
stc
outsb
inc
cmpsl
fldenv
pop
pop
push
cld
fistpll
movsl
in
jnp
mov
nop
cwtl
sbb
add
les
xor
loopne
add
push
add
push
push
mov
shl
scas
fistl
cmp
add
pop
mov
fildl
cmpsb
mov
pop
sbb
or
call
or
subb
sahf
addr16
and
mov
gs
add
nop
addb
dec
add
std
mov
cmp
imul
aad
cld
nop
fsubs
or
xchg
push
sub
daa
or
mov
add
fisttps
aas
pop
fsubrl
test
mov
rcrb
mov
pop
fcomi
add
adc
pop
fbld
xor
inc
mov
clc
lods
sbb
ss
inc
add
push
xor
jae
fs
lea
enter
cmp
mov
jae
mov
cltd
and
add
int3
cwtl
inc
inc
and
out
cmp
pop
jb
mov
or
icebp
add
push
cs
inc
adc
pusha
pop
add
push
cli
pop
sbb
cld
cwtl
addr16
nop
fcmovnbe
pop
addb
mov
mov
jb
xchg
push
jmp
add
pop
movsb
dec
mov
inc
add
jne
mov
sub
pushf
cmp
add
nop
jno
add
arpl
push
sub
push
movsb
cs
add
push
out
aad
push
mov
adc
mov
pushf
jb
jo
or
popf
out
rolb
push
or
call
test
sbb
xchg
xor
sub
test
call
in
loopne
mov
inc
inc
sbb
dec
jbe
cmpsl
fsubs
push
nop
sub
xchg
pop
cmp
xorl
push
lods
inc
xchg
popf
xor
and
das
mov
jne
pusha
lahf
dec
adc
xor
xchg
pop
add
cmp
std
add
pop
out
add
jecxz
stos
add
xchg
les
push
ds
xchg
fdivs
and
mov
in
mov
sub
ss
scas
bound
push
xor
frstor
sbb
mov
out
jmp
jl
add
mov
and
fmul
cwtl
mov
sbb
jnp
add
dec
cmc
adc
lods
mov
xchg
push
mov
xor
test
pushf
mov
mov
jmp
add
jge
adc
mov
xchg
ds
mov
mov
xchg
out
add
xchg
mov
and
cmp
dec
sahf
jo
dec
in
dec
pop
rcrb
flds
fistl
lahf
sub
mov
mov
ret
and
cwtl
in
pushf
jno
stos
in
mov
movsl
pop
inc
sbb
xor
je
add
fs
cmp
add
lds
call
repnz
cmp
jb
movsb
stc
idivb
jl
sbb
fcomp
icebp
decb
cld
pushf
cs
lock
dec
cmpsl
push
xor
mov
mov
aad
add
std
cmp
dec
add
test
xchg
mov
xor
cmp
in
lea
fisttpll
sahf
sbb
mov
movsb
adc
mov
xchg
nop
ds
or
xchg
push
pop
add
imul
sub
xchg
mov
mov
clc
adc
adc
add
setns
adc
lret
jmp
dec
loopne
mov
mov
pop
fdivl
sub
inc
cld
mov
test
movsb
pop
mov
jo
xorl
or
loop
inc
push
push
lock
push
and
les
or
out
xor
fsubrl
hlt
cltd
adc
adc
cli
dec
sti
or
pop
or
push
addl
adc
leave
xchg
fistpl
fs
popf
shrb
push
inc
add
xor
cmp
adc
dec
ret
lods
pop
fdivl
test
inc
adc
pop
in
out
cli
pop
dec
adc
add
cmp
incb
stc
out
nop
pop
loopne
test
and
ds
stos
add
and
or
inc
jecxz
lahf
test
dec
xor
mov
xor
dec
das
nop
xchg
sub
push
imulb
cmp
adc
nop
xor
addb
push
pop
add
sbb
pop
cwtl
add
int3
enter
jae
stc
les
dec
mull
pop
js
roll
mov
mov
and
mov
sub
adc
loopne
out
or
sbb
ja
mov
sbb
lret
stos
int3
xchg
or
mov
add
xchg
xor
enter
popf
cmp
inc
mov
sub
mov
mov
add
add
mov
addr16
or
jl
mov
mov
jmp
gs
sub
and
mov
jp
add
cmp
jne
jge
sbb
gs
loop
dec
xor
mov
mov
fwait
les
add
rorb
dec
dec
inc
cmc
jns
cmp
stc
xchg
movsl
jb
mov
adc
and
cmp
xchg
jne
pop
dec
shl
cmp
add
shrl
sub
push
mov
nop
fnsave
pop
add
mov
add
clc
pop
outsb
pop
imul
sahf
into
or
adc
js
test
cmp
sbb
sbb
arpl
adc
mov
xor
jo
push
xor
sub
adc
orl
adc
popa
dec
dec
scas
in
sub
clc
jl
lds
or
xchg
or
in
test
inc
test
sbb
ficompl
xor
adc
js
call
aad
push
xchg
jb
rcrl
clc
insl
push
pop
fwait
inc
xchg
inc
adc
addr16
or
xor
cmp
xchg
ror
les
xchg
imul
iret
cmc
je
pusha
hlt
sbb
sbb
cmp
push
jge
jne
cmp
mov
adc
movsl
hlt
gs
add
aas
cmp
add
int3
rclb
add
cmpsl
adc
or
xchg
cmp
je
dec
into
xchg
adc
sub
rcl
rorl
out
cwtl
mov
pop
idivb
mov
mov
imul
sbb
in
loop
xchg
add
mov
loopne
push
jmp
lods
das
jo
js
dec
iret
add
cmp
and
lods
int
adc
add
jo
sbb
add
daa
rolb
inc
fists
adc
push
outsb
dec
push
mov
mov
cmp
popa
stos
pop
mov
fsubl
outsl
add
ss
mov
lock
or
out
mov
mov
out
cmp
dec
jp
add
and
mov
fwait
add
or
pop
xor
fldcw
hlt
or
ljmp
and
hlt
pop
sub
popa
aas
mov
sahf
sbbb
ret
cmp
gs
stos
or
xor
mov
andb
aad
jns
cmc
add
repnz
fcomps
push
add
add
mov
enter
bound
xchg
mov
or
jp
or
xor
xchg
lea
xor
out
xor
test
push
mov
dec
dec
andb
mov
and
lods
into
jne
jae
mov
or
pop
push
test
and
inc
nop
test
mov
fcoml
dec
sbb
and
mov
add
sti
jb
adc
mov
pop
lods
jb
add
mov
orl
jbe
and
mov
jecxz
loope
inc
insl
push
xchg
fisttps
dec
test
adc
dec
ret
pushf
adcb
loopne
adc
add
add
and
fsub
loop
add
pusha
cwtl
mov
dec
or
dec
cmp
incl
nop
and
mov
or
cmpsb
int3
fimuls
jo
pop
bswap
ret
xor
inc
jl
out
inc
lock
nop
and
add
int
or
mov
add
sar
xchg
or
adc
stc
push
pop
mov
in
or
mov
test
rcrl
adc
push
cmp
mov
add
enter
aam
pop
mov
lock
jp
jns
push
dec
out
lock
sbb
jl
add
out
inc
fistl
sbbl
sub
or
push
jnp
es
in
inc
ss
pop
xor
insl
add
stos
fwait
rep
add
dec
ror
mov
int3
std
inc
and
sbb
jg
inc
cmp
xor
and
out
add
inc
cwtl
mov
sbb
adc
ds
or
ret
pop
nop
cmpb
pop
pop
bound
pop
outsb
add
mov
cld
les
loop
shlb
sbb
mov
sbbb
int3
repnz
sub
xor
mov
repz
sar
jb
sahf
cmp
fidivs
mov
hlt
inc
pop
aas
add
imul
mov
inc
xor
stos
je
push
add
mov
rcr
pop
ret
xor
jp
push
sub
cmp
pushf
push
sub
sub
or
loopne
out
mov
sbb
adc
or
add
lods
cmp
ficoml
in
dec
lock
add
ret
nop
in
orb
orl
fadds
les
scas
cmpsb
hlt
add
repz
mov
clc
mov
inc
orl
loope
xor
xchg
adc
sbb
add
scas
int3
sbb
xor
sbb
adc
mov
pop
jb
mov
add
xor
push
xchg
adc
mov
adc
test
icebp
imul
mov
test
in
adc
add
push
dec
sub
in
pop
bound
mov
repnz
int3
fisttps
cmp
inc
mov
repz
mov
cmp
lock
and
mov
rcrb
lock
mov
rorb
fldcw
sub
push
fiaddl
movsl
adc
xor
push
cmpsb
push
loopne
fistps
add
test
xchg
push
cmp
pop
or
fcoms
ja
sbb
and
cmpl
inc
mov
inc
je
add
xchg
xor
jl
xchg
push
add
dec
add
orl
cld
push
pop
sbb
mov
nop
or
lods
roll
out
xor
ljmp
stc
pop
adcl
inc
xor
cmp
or
movsl
or
add
lds
mov
clc
and
sbb
sahf
fisttpl
mov
mov
imul
add
add
leave
pop
inc
jge
cmp
ss
adcl
xchg
inc
or
das
pop
jo
les
cvtps2pi
xchg
sbb
repz
mov
add
outsb
inc
add
inc
adc
setge
daa
cmpsb
inc
cmc
call
roll
subb
std
ljmp
subl
les
xchg
lods
enter
leave
lret
shrb
dec
popf
xchg
std
xchg
or
int3
insb
ds
xchg
aam
xor
cltd
inc
add
outsb
ja
push
dec
or
mov
rcll
xor
fadd
or
jo
dec
or
sub
enter
sbb
mov
mov
aam
jnp
in
or
add
arpl
addr16
add
sbb
call
xor
mov
add
push
pop
jbe
into
or
xorb
inc
enter
inc
and
and
mov
add
mov
mov
sbb
hlt
pop
add
mov
mov
cld
test
imul
or
xlat
cmp
mov
pop
scas
popa
pop
out
sub
xor
sahf
out
jnp
std
fcomps
dec
xchg
sub
les
or
divb
cmpsl
push
mov
mov
rolb
dec
jns
or
adc
inc
add
cli
fnstenv
push
sub
mov
je
in
add
imul
icebp
add
jge
fdivrs
mov
pop
pop
adc
jl
daa
inc
mov
pusha
mov
adc
repnz
xchg
mov
cmp
dec
add
push
cmpsb
je
cmp
in
cmp
jl
inc
pusha
mov
push
clc
test
pusha
sbb
jbe
or
xchg
mov
pop
je
sub
nop
xlat
cli
inc
cmc
jbe
adc
mov
stos
imul
xchg
sbb
mov
xor
xor
and
and
dec
sahf
int
jnp
test
inc
lods
mov
scas
jecxz
rorb
cltd
xor
mov
cmp
addb
int3
sub
cli
pusha
call
mov
test
xchg
pop
mov
imull
faddl
inc
push
cltd
jo
or
and
in
add
pop
out
pop
xchg
mov
mov
xchg
mov
mov
lock
jmp
cmp
lods
add
jb
std
push
sbb
sbb
out
shrb
ja
out
ret
mov
xchg
lcall
sbb
mov
mov
jp
out
mov
add
or
rolb
mov
jae
mov
pop
xor
xchg
pop
add
repnz
loopne
add
pop
fadd
xor
clc
icebp
adc
mov
adc
shlb
pop
aas
les
mov
mov
subb
test
dec
mov
xor
mov
xor
inc
xchg
or
test
add
cli
xor
addr16
jb
fmull
shl
mov
cmc
mov
push
add
cmp
rol
mov
bound
mov
cmp
mov
outsb
mov
stc
xlat
pop
xor
and
add
mov
push
sahf
stos
stc
mov
rcrb
flds
cltd
adc
cmp
ja
loopne
cmp
sahf
sub
jne
inc
outsb
filds
fidivrl
daa
nop
and
and
out
stos
jle
outsb
shrb
scas
cmp
add
cltd
sub
jge
jo
test
daa
inc
mov
leave
add
or
cmp
popa
pusha
mov
mov
fisttpll
xchg
lods
sti
sbb
popa
add
cmp
loopne
mov
rcrl
cwtl
test
or
mov
pushf
fcomp
stos
and
dec
add
pop
sub
xor
push
sbb
xor
or
mov
lret
xchg
inc
lods
mov
lock
test
inc
lret
inc
stc
sbb
mov
sarl
repnz
xlat
add
or
outsb
sarb
pop
ss
jno
or
outsb
and
out
add
sbb
cwtl
int3
mov
jp
sbb
sbb
dec
mov
test
mov
pop
in
push
jle
js
add
std
dec
add
mov
divl
sbb
es
fsubs
sub
xor
inc
pop
cwtl
std
or
mov
inc
iret
add
add
into
xchg
pop
addb
inc
icebp
repnz
xchg
fsubrl
daa
cld
xchg
addb
hlt
fiaddl
mov
andb
cwtl
rcrb
add
xchg
stc
push
lock
add
cs
dec
btc
or
cwtl
clc
pop
rolb
sub
out
lods
mov
and
enter
add
stos
fmull
clc
mov
cmpsl
loope
jo
xchg
les
lock
mov
or
add
add
fldl
mov
call
mov
nop
scas
sahf
cmp
mov
ret
arpl
add
stc
pushf
loop
and
test
cltd
mov
and
test
lods
push
pop
inc
inc
add
lret
sarb
add
outsb
into
les
cmp
mov
jbe
pop
and
cld
int
push
movl
lods
push
fs
pop
sbb
push
xchg
insb
sub
add
fisubrl
adc
lret
fs
push
mov
push
lock
cltd
pushf
and
add
inc
stos
pop
cwtl
loope
mov
mov
addl
xchg
pop
test
fwait
stos
inc
jne
cmpsb
mov
dec
sbb
aaa
pop
out
fcomp
nop
inc
decl
movsb
fildl
pop
out
jg
bound
add
sti
aas
outsb
xchg
cmc
mov
jnp
mov
add
xchg
out
inc
mov
mov
das
cltd
in
add
jb
xrelease
mov
add
sti
and
test
fisttpll
mov
cmp
lret
cmp
and
aad
xchg
add
jb
enter
jns
sub
test
jno
sub
das
push
inc
sbb
mov
daa
into
leave
xor
fldl
sub
scas
add
mov
push
add
cmp
adc
sub
dec
pop
xchg
cmpsb
pop
pop
pop
stos
ds
shll
fldenv
add
stc
adc
add
shrl
xchg
sbb
daa
or
mov
sbb
enter
pushf
cmp
cltd
jg
xlat
outsl
xchg
push
or
pop
xchg
pop
and
loopne
add
cmp
add
outsb
sahf
loope
mov
mov
rorb
mov
clc
mov
sub
mov
sbb
dec
cmp
xchg
xchg
sub
or
or
add
loope
dec
rolb
inc
imul
dec
xor
mov
or
ret
cli
jno
lahf
dec
mov
rolb
sahf
xchg
mov
cmp
imul
or
mov
or
add
fs
add
add
mov
pop
mov
or
cltd
loopne
ret
fadd
lret
sub
inc
pop
cmp
aad
insb
cmp
sub
cmp
or
xchg
push
cmp
xor
stos
jg
int3
hlt
fwait
xchg
test
stc
inc
cmp
movsl
adc
pop
adc
cltd
adc
mov
pop
add
mov
sahf
cmp
das
push
sub
cwtl
pop
xchg
and
leave
xchg
pop
xor
and
mov
cmp
call
cmc
lcall
aas
andl
lea
movsb
jbe
fisubs
inc
or
push
rorl
add
pop
js
or
mov
or
ror
das
add
sub
mov
adc
mov
xchg
loop
stos
fs
scas
mov
jae
and
mov
mov
cmp
jge
push
hlt
cmp
std
cltd
ret
adc
mov
sub
and
imul
mov
inc
mov
inc
xor
movsb
push
inc
adc
in
sarb
fstl
pushf
hlt
xor
nop
pop
mul
mov
or
das
cli
daa
sub
pusha
cltd
shll
repnz
test
and
enter
cmp
push
mov
add
push
xlat
add
mov
jne
rep
add
aad
clc
cmp
pusha
dec
and
xchg
mov
jbe
stos
das
pop
inc
jo
stc
outsl
daa
or
jmp
les
adc
sahf
sub
cmp
cmp
cmp
push
pop
add
mov
data16
sti
js
mov
add
les
mov
sub
xchg
mov
add
pusha
pop
fisubs
push
popf
movsl
cmp
push
cmp
outsl
jg
pop
scas
lea
adc
cmpsb
fidivl
xor
fadds
pushf
sub
jl
or
mov
loop
and
sub
jecxz
mov
cmp
cwtl
add
testb
push
stos
daa
mov
outsb
dec
pusha
adc
in
addr16
push
fs
je
movsb
int3
xor
pop
xchg
std
xchg
or
ja
jo
sbb
or
add
insb
jp
mov
push
fsub
inc
test
sbb
xchg
and
mov
pop
adc
pop
ficoml
aam
add
ss
push
mov
and
int3
les
shll
filds
or
add
inc
add
arpl
sti
cmp
inc
jg
dec
ds
and
das
mov
pop
jecxz
cltd
and
loopne
xor
sbb
outsl
mov
xor
lods
ljmp
add
sub
das
adc
cld
add
std
push
and
iret
or
and
imul
xor
and
and
or
dec
xchg
adc
sub
add
or
sbb
push
or
ds
and
mov
and
loopne
cmp
popa
gs
pop
rcr
test
popl
push
xor
rcr
or
pop
stc
hlt
mov
add
xor
cwtl
jno
popa
mov
sub
xchg
xchg
cmp
pop
push
mov
xchg
rolb
push
enter
dec
movsb
mov
adc
pop
nop
fs
js
jp
dec
sahf
mov
fnsave
out
lea
dec
mov
push
add
mov
outsb
cmp
popf
ljmp
test
sbb
xchg
sbb
inc
js
add
pop
aaa
xchg
cmp
jmp
adc
rclb
mov
sahf
cmp
jno
mov
sbb
out
sbb
sub
stos
call
bound
and
incb
das
rclb
adc
mov
and
cmp
pop
lock
sahf
xchg
inc
mov
adc
pushf
add
xor
dec
cmp
mov
jns
movsl
lods
mov
aam
adc
negl
adc
pop
push
xor
and
cli
out
xor
jne
jnp
xchg
out
add
fwait
and
sti
xor
outsl
inc
xchg
les
mov
and
add
and
fs
scas
pop
jb
fwait
cmp
jo
sub
mov
and
and
or
test
jns
movsb
fildll
add
imul
lret
push
or
fdivr
in
add
push
xchg
out
jae
arpl
push
adc
and
pop
test
fnstenv
ss
lock
call
adc
add
fistl
enter
cmp
outsb
in
xchg
xor
call
xorb
or
insl
cmp
jns
or
mov
clc
xor
lods
mov
add
adc
sub
add
lock
mov
jl
pusha
and
and
ja
mov
sub
cld
dec
push
adc
or
mov
sub
mov
and
mov
sbb
xchg
add
add
add
cmp
dec
pop
inc
pusha
sbb
iret
and
cmp
add
jg
cmc
cltd
pop
add
jp
shrl
js
add
xchg
xchg
jo
inc
push
sub
sar
adc
add
ja
xchg
js
aad
faddl
sbb
add
xchg
inc
push
andps
add
test
adc
push
mov
xlat
in
rorb
les
mov
adc
add
es
cld
sbb
call
cmp
and
or
pop
xor
int
nop
and
into
add
xorl
mov
cmp
sbb
mov
mov
mov
nop
idivb
dec
xor
pop
inc
dec
xor
add
adc
ficoms
xchg
inc
mov
mov
pop
imulb
and
cli
shlb
xor
dec
push
std
mov
pop
mov
jns
pop
mov
bound
pop
lahf
inc
lods
mov
roll
outsl
push
xchg
je
aaa
cmp
or
pusha
aam
add
aas
lods
pop
xchg
jl
cli
add
add
ret
incl
loopne
test
xor
pop
rol
mov
stc
sbb
pusha
adc
std
xchg
dec
or
or
add
xor
lock
int3
sti
je
sbb
lods
aam
dec
push
clc
fstl
add
xchg
fistpl
inc
push
sub
adcb
iret
pop
lret
sub
sbb
add
sub
pop
rcl
sub
cwtl
inc
add
add
fcomps
test
fisttpl
add
xor
cmp
rolb
gs
in
aam
fstl
add
xchg
dec
sbb
je
mov
mov
jmp
sbb
popa
imul
add
pop
adc
push
fucomp
arpl
in
aaa
mov
nop
add
jmp
dec
inc
in
add
aas
mov
mov
jae
mov
add
push
cmc
shll
mov
and
add
mov
mov
add
daa
mov
pop
jo
in
mov
dec
loopne
or
fimull
das
inc
rolb
mov
cmp
flds
push
clc
arpl
ja
xlat
rorb
enter
cmp
shll
pop
clc
jp
mov
dec
adc
jle
lods
scas
add
fs
xchg
add
push
sbb
popa
fdivrs
adc
rclb
jle
inc
mov
cmp
mov
add
push
push
test
xchg
pop
stos
movsb
into
push
movaps
icebp
addb
jge
popf
sbb
dec
pop
mov
add
cld
hlt
out
mov
adc
cmpb
hlt
es
mov
mov
stos
mov
add
or
or
repz
cmp
in
or
add
xor
shrl
negb
push
mov
pop
and
stos
fiadds
cmp
pshufw
hlt
sbb
mov
inc
inc
cld
mov
mov
jbe
inc
mov
dec
stc
dec
cwtl
cmp
stos
pop
add
add
daa
fisubl
cld
or
mov
jmp
movsb
cs
xor
jl
mov
push
sbbb
ds
lods
repnz
cmp
sub
fbstp
or
add
add
das
push
inc
adc
mov
push
neg
add
addr16
adc
jge
notb
mov
sub
adc
test
or
cmp
mov
xchg
mov
std
mov
inc
shlb
xchg
jb
sahf
je
repz
loopne
mov
mov
jecxz
push
cmp
rclb
out
hlt
or
pop
fbld
movmskps
addr16
push
pusha
shrd
pop
repz
cmp
or
rolb
sub
and
mov
and
pop
out
nop
xorb
in
int3
add
jle
xchg
mov
cmp
jecxz
testl
add
pushf
push
int3
rcrb
inc
cmp
loopne
int3
xor
cmpsl
inc
add
push
ljmp
sbb
sub
mov
push
popa
push
outsl
daa
daa
mov
push
rcll
out
in
mov
pop
xchg
dec
fs
jg
add
mov
adc
iret
in
inc
add
popf
cmp
sbb
std
mov
lret
adc
mov
bound
sbb
insb
inc
pop
lcall
add
enter
in
or
nop
push
cmp
add
pop
mov
arpl
or
mov
sbb
mov
adc
inc
dec
mov
cmc
mov
mov
cmp
add
bound
lahf
xor
jp
mov
push
mov
or
jns
add
mov
rcll
scas
cmp
cmp
cld
cmp
in
or
clc
fisttpl
mov
sub
subl
mov
outsl
cmp
scas
inc
sub
cli
cmp
mov
cmpsl
sbb
cmp
add
add
int
das
inc
cs
pusha
imull
cld
adc
cmpsl
repz
or
mov
dec
aad
cmp
pop
mov
xor
add
jmp
inc
pushf
pop
addr16
mov
jae,pt
add
notl
leave
andl
fwait
mov
adc
add
xchg
stos
movsb
rorb
mov
mov
call
mov
sub
movsl
push
scas
jecxz
in
xchg
sarl
enter
fcmovbe
mov
fidivl
push
sub
dec
add
call
cmp
out
add
jge
cmp
out
ljmp
in
xor
mov
and
xchg
pop
xlat
out
or
add
inc
push
mov
dec
fimuls
push
adcb
adc
mov
leave
push
lods
popf
lods
add
inc
or
gs
push
and
popa
xor
outsl
mov
add
mov
mov
or
mov
int3
xor
dec
addr16
adc
mov
mov
pusha
pop
aad
repnz
lret
mov
scas
insl
fwait
pop
sub
or
and
cmp
or
jg
mov
add
pop
stos
mov
cmp
mull
insb
add
push
imull
dec
sbb
xor
adc
sbb
pop
mov
fsubr
mov
lods
roll
pop
xchg
rcll
xor
mov
xor
fistpl
cmp
push
mov
mov
mov
add
xor
and
pop
lock
mov
push
loope
lret
leave
xor
fwait
cli
out
adc
and
mov
test
pop
enter
fisubrl
hlt
cld
adc
dec
inc
jle
xchg
mov
mov
mov
mov
jno
jmp
mov
jl
dec
xchg
je
popf
nop
clc
inc
adc
cld
rol
push
dec
pushf
out
sbb
xchg
or
aam
and
ret
add
popf
insb
pusha
sbb
movsl
pop
js
lods
enter
repz
push
xlat
sub
cli
sbb
dec
add
int3
xor
push
add
sub
repnz
or
jo
push
loope
lods
push
in
add
mov
pop
or
sbb
idivl
cmpsb
sub
and
mov
sub
iret
sbb
ret
clc
fistl
inc
icebp
lcall
add
sub
dec
adc
stos
cmp
shlb
stos
call
fcomps
pusha
stc
add
shrb
mov
push
ficoml
rolb
sub
js
pusha
or
ljmp
fdivs
pop
mov
add
popf
mov
cld
dec
jge
add
inc
pop
out
lds
sarb
dec
mov
adc
notb
or
inc
insl
mov
inc
stos
scas
lock
adc
imul
sbb
pushf
mov
push
pop
rolb
testl
test
push
add
ds
stc
push
xor
ret
orl
jp
sti
clc
push
sarb
add
sbb
jle
es
cld
push
js
mov
mov
cmp
insb
inc
popf
in
add
push
push
xor
cmp
mov
push
xchg
lcall
repz
pop
sub
add
popf
bound
and
pop
push
add
imul
cmp
dec
jns
pmaxub
dec
loope
daa
jmp
cld
adc
imull
sbb
sub
mov
or
mov
add
fists
mov
jecxz
pushf
ds
decb
leave
scas
nop
dec
xor
movsb
aam
xchg
iret
xor
addb
mov
aam
inc
je
aad
movsl
repnz
jo
pop
and
loop
jae
scas
fldcw
inc
aad
add
pop
fistpl
mov
fucomip
inc
cmpsl
hlt
add
aaa
out
jmp
mov
movsb
mov
sub
and
fidivl
adc
mov
push
push
xchg
inc
and
adc
mov
pusha
cmp
push
sbb
cmp
cmp
addb
inc
sbb
mov
scas
sbb
sub
ret
mov
sub
dec
push
mov
dec
xchg
xchg
inc
leave
mov
aam
xchg
xor
test
cld
lock
jmp
push
sbb
add
aad
push
or
popa
lods
dec
and
stos
pop
rcr
sbb
test
in
add
add
shr
mov
add
movsb
lret
inc
add
cs
fdivrl
cli
pusha
mov
sti
or
adc
inc
adc
int3
mov
popf
dec
stos
insl
test
cmp
call
add
and
es
imul
mov
sub
idivl
cmp
mov
and
fs
dec
nop
and
movsb
mulb
jo
or
pusha
aas
and
pop
or
and
pop
sub
frstor
jns
ret
and
insb
inc
sub
enter
cld
and
rcr
aad
add
in
mov
pusha
lret
xchg
lock
xlat
push
mov
sbb
mov
add
mov
test
sub
int3
aam
cmpsl
mov
or
les
adc
or
fcoml
adc
mov
or
xor
imull
incl
cmpsb
nop
sub
xchg
jo
sub
pop
inc
xchg
call
jl
enter
jnp
test
cld
add
fcmovb
fs
dec
mov
xchg
mov
jo
add
movsb
fmuls
add
jle
mov
popa
xorb
testl
inc
adc
out
mov
pushf
add
push
sbbl
dec
and
jnp
shll
pop
fcomps
mov
orl
xchg
lret
sub
cmp
inc
push
add
mov
cmp
pop
add
mov
pop
dec
add
inc
xor
jae
sbb
add
xor
pushf
dec
lea
cmp
ja
add
xchg
in
popl
jnp
shrl
fabs
mov
int3
inc
xlat
sbb
mov
test
mov
xchg
xchg
mov
fmull
mov
enter
pop
lock
data16
or
add
les
and
pop
or
pop
xchg
test
lds
daa
lahf
idiv
sbb
mov
dec
add
mov
lahf
mov
popf
adc
das
fldt
fmuls
sub
and
into
arpl
test
dec
cmpsb
call
dec
aas
xchg
add
add
sub
das
xchg
pop
mov
and
lret
xor
push
nop
inc
mov
adc
jbe
xchg
adc
sub
dec
sub
cmp
xor
stc
cmp
incl
jp
rcrb
adc
jle
outsb
mov
ja
icebp
popf
add
hlt
cmp
lahf
and
mov
push
sub
mov
mov
mov
or
addl
mov
leave
dec
mov
imul
cmp
or
or
inc
mov
mov
pushf
std
cmpsl
adc
sbb
cmpsb
add
adcl
leave
stc
cld
add
or
mul
xchg
cwtl
pop
cmp
xchg
test
movsl
std
xor
mov
add
mov
cwtl
push
push
push
test
pop
mov
xchg
dec
or
scas
inc
cltd
mov
sbb
mov
bndldx
je
sbb
fnstenv
add
adc
addr16
loop
add
and
mov
xchg
adc
inc
xchg
push
adc
stos
repnz
mov
stos
jl
xchg
add
sahf
out
inc
inc
jae
and
insl
arpl
rorb
inc
pop
add
bound
jl
cltd
inc
out
movsb
xchg
call
mov
shlb
xchg
repnz
dec
adc
add
add
mov
test
cmpb
movsb
add
mov
jb
ja
add
xchg
xchg
adc
sub
in
add
ret
add
dec
incb
pop
dec
dec
loopne
xchg
inc
push
push
dec
mov
out
push
mov
rolb
imul
fldt
test
mov
mov
fwait
adcb
sub
gs
js
or
cltd
insb
or
adc
sub
adc
cmp
dec
sbbl
femms
lret
ficompl
jle
add
cld
adc
mov
jmp
dec
inc
fnsave
pop
pop
and
jp
test
mov
adc
push
popf
mov
xor
pop
lods
push
cmp
sbb
les
cmpsb
mov
and
xchg
enter
jge
in
adc
or
and
or
xchg
add
std
xor
add
cmpsb
xor
mov
dec
jbe
add
jecxz
pop
cld
xchg
in
lret
je
or
xor
mov
cltd
fs
imul
scas
sbb
nop
sahf
dec
dec
lret
add
aaa
xor
movsb
mov
loopne
push
loop
pop
mov
mov
loopne
xchg
xor
cmp
add
add
fwait
xchg
pop
sub
xchg
mov
xorb
clc
mov
in
adc
pop
sbb
mov
xchg
add
pop
dec
loop
mov
shlb
cmp
or
cld
pushf
xor
mov
xchg
and
sbb
or
mov
sub
pop
into
and
or
fldenv
cmp
mov
pop
pop
loope
add
add
xor
jg
aad
movsb
ror
mov
and
out
xchg
icebp
xor
loopne
pop
nop
enter
imulb
inc
mov
icebp
xchg
addl
adc
xchg
inc
adc
and
and
cmp
mov
pop
sahf
imul
or
sbb
je
insb
push
mov
sbb
push
mov
lods
push
cmc
add
mov
sub
cld
mov
rcrb
out
add
loope
adc
pop
xchg
mov
add
sbb
ss
repz
sbb
into
stos
or
mov
cmp
lods
cmp
jl
and
incb
jmp
scas
cmpsb
pop
cld
fwait
sub
bound
inc
push
jge
popa
jle
add
mov
and
dec
inc
out
jnp
ret
xorb
popa
and
push
mov
cltd
ret
orb
mov
and
push
lods
call
cmp
add
mov
xor
fs
shrl
mov
push
test
jb
push
negl
pop
push
xchg
cwtl
mov
push
mov
jmp
sti
cmp
and
call
xchg
push
add
fs
lret
std
fldenv
push
cmp
add
xor
lods
divb
dec
std
mov
mov
jmp
cwtl
cmp
cmpsl
mov
or
arpl
jp
push
mul
cmpl
push
dec
mov
shr
push
mov
cmp
into
and
inc
push
daa
mov
xchg
or
in
fisttpl
dec
faddl
push
pop
aam
mov
call
xchg
loop
pusha
fmuls
mov
inc
scas
ret
test
add
and
jl
mov
push
pushf
sub
sbbl
stos
push
ret
rolb
jae
push
pop
sub
movb
push
jne
jne
or
xchg
add
mov
pop
push
pop
shl
scas
cld
dec
cmp
jp
and
lret
les
sbb
add
or
xor
adc
data16
xchg
dec
enter
ja
out
cmpl
xchg
clc
add
sti
xchg
sbb
cli
incb
pop
pushf
or
mov
lods
jl
call
outsl
rclb
sub
lret
ret
shll
cmp
je
add
inc
inc
loopne
push
push
mov
insb
add
inc
adc
add
in
pop
xchg
xchg
gs
lret
enter
push
push
adc
leave
add
dec
and
add
ret
out
fimuls
in
into
test
loop
add
and
xor
add
in
mov
adc
adc
je
testl
in
popa
and
dec
outsb
add
decl
mov
ror
and
rorb
sub
cmpsb
xor
mov
adc
inc
xchg
push
inc
clc
and
mov
push
xor
test
mov
jo
stc
test
fsubrl
in
and
adc
pop
dec
es
add
sub
xor
adc
ja
mov
rorl
adc
std
and
adc
arpl
add
or
punpcklbw
or
xchg
cwtl
or
inc
adc
inc
shlb
mov
enter
or
inc
dec
mov
clc
jg
xchg
nop
test
loopne
subl
iret
push
xlat
imul
rol
push
pop
ljmp
cmp
inc
scas
lcall
ret
push
and
mov
mov
divl
push
les
mov
xchg
ss
jb
in
and
es
inc
cld
push
adc
sbb
xor
and
adc
test
fs
add
xchg
sahf
iret
add
jl
dec
sarb
and
sub
and
inc
lods
cmp
push
test
loopne
fsub
in
and
and
dec
or
mov
je
push
sub
int
dec
sbb
jge
cmp
mov
clc
lds
or
or
popa
mov
pop
pop
or
push
xorb
and
mov
xor
arpl
add
fcompl
sub
into
les
leave
lds
dec
inc
mov
rolb
dec
adc
das
scas
ds
stc
insl
mov
push
icebp
cmpl
in
out
test
add
out
jge
addl
add
xchg
pop
mov
add
iret
sbb
adc
push
out
xchg
push
xor
loopne
add
mov
xchg
or
loopne
daa
jns
pop
push
xchg
add
or
fadd
jg
lods
add
es
add
pop
ss
sub
popf
adc
add
or
push
add
jl
enter
xchg
pop
xor
je
inc
inc
lret
jmp
lods
ret
cmp
or
outsb
xor
test
cmp
cld
jne
mov
fimuls
xor
enter
mov
clc
cltd
movsl
jo
adc
data16
icebp
and
cmp
nop
aaa
or
add
mov
testb
xor
dec
and
mov
add
and
adc
insl
add
fildll
add
andl
or
fcmovne
add
mov
cmpsl
and
add
add
xchg
sub
add
call
cmp
lods
leave
jb
fwait
aas
push
and
xchg
pop
adc
sbb
cmp
xor
nop
pop
sbb
push
adc
lea
inc
dec
cld
jle
xchg
push
ret
out
sar
imul
push
in
addl
cld
inc
xchg
xchg
mov
mov
cltd
and
das
push
pop
add
xor
mov
sarl
add
dec
jecxz
adcl
iret
inc
dec
mov
imul
aaa
lcall
scas
dec
jp
mov
or
mov
decl
dec
xchg
jb
js
and
sub
insl
ret
mov
adc
mov
inc
and
jmp
lahf
pop
pop
push
mov
adc
leave
jp
adc
mov
pop
or
and
mov
imul
xor
aas
pushf
mov
mov
js
mov
movsb
subl
pushl
ss
mov
xor
push
mov
cltd
les
cltd
insb
xlat
mov
add
scas
scas
cmpl
ljmp
adc
mov
xchg
mov
push
jnp
dec
test
negb
test
add
cmpsb
popa
lret
add
jle
add
inc
shrl
sbb
call
les
into
hlt
sbb
add
movsb
jg
adc
cwtl
dec
inc
inc
nop
inc
jp
xor
movsb
adc
dec
jp
pop
xor
inc
addl
adc
pusha
rclb
test
insl
xchg
nop
test
cld
adc
aam
adc
aam
orb
xor
xchg
sbbl
mov
dec
and
and
cmc
call
add
cmp
push
fdiv
adc
leave
punpckhdq
test
mov
dec
or
jno
inc
std
mov
fnstenv
cs
push
or
aad
xchg
clc
lds
push
nop
mov
xor
xor
xchg
or
test
add
push
lcall
repnz
mov
hlt
and
add
stos
js
sub
cmpsl
setg
push
mov
dec
xor
sahf
call
xor
cmp
and
mov
inc
dec
lods
lea
jae
and
pushf
test
lret
cmp
xchg
sub
inc
mov
out
sub
pusha
sub
xor
out
les
cli
xchg
xor
imul
pop
daa
and
adc
jo
and
fsubrl
fstpt
loopne
out
ret
ret
adc
nop
pop
nop
or
and
lahf
jae
mov
xchg
daa
and
sarb
pop
xor
dec
jnp
jbe
jne
mov
ret
jo
push
test
test
add
icebp
mov
or
sahf
add
push
pop
and
outsb
or
enter
inc
lods
push
sbb
enter
mov
lods
jl
adc
cmpsb
push
and
dec
sub
inc
clc
and
js
lock
cmp
dec
imul
dec
sub
mov
inc
add
cmp
adc
gs
xchg
into
in
es
std
dec
pusha
inc
pop
pop
aaa
jmp
mov
pop
push
fadds
cmp
sti
adc
dec
mov
rolb
inc
lods
imul
sub
cli
or
adc
sub
pop
sub
jo
call
mov
sahf
add
add
je
sbb
push
lods
pop
xchg
stc
add
shrl
movsb
les
push
mov
test
fmul
add
push
js
nop
add
les
clc
adc
mov
push
push
pushf
data16
insb
push
faddl
popf
fnsave
lods
fs
mov
xorl
jl
and
daa
jp
mov
clc
mov
insl
lcall
adc
ret
cmp
pop
movsb
jg
add
jmp
or
or
test
xchg
mov
or
test
sub
lock
inc
xor
cmc
mov
mov
arpl
add
test
rcrb
cmpl
faddl
and
pop
add
sbb
dec
fs
js
or
mov
mov
inc
out
sar
mov
fadd
pop
xor
add
mov
hlt
add
and
push
and
and
jecxz
pop
and
loopne
sarl
jne
inc
cmp
pop
or
mov
pop
mov
imul
lods
nop
xlat
mov
fldl
xorb
and
inc
fldt
lea
pop
lret
hlt
orb
add
adc
imulb
sbb
jle
popf
mov
popa
hlt
jmp
ret
sbb
sahf
sub
stc
sub
xor
sub
mov
push
popa
or
test
add
stc
and
or
push
mov
jo
es
jge
fmull
movsb
or
or
int3
mov
mov
inc
mov
cld
add
add
mov
xchg
les
adc
mov
and
sbb
daa
mov
xor
adc
cmp
xor
or
loopne
imul
or
sbbl
out
dec
cs
pop
mov
ret
shll
mov
adcl
and
mov
call
cs
push
or
pop
xor
inc
cld
and
mov
pusha
sbb
mov
inc
fsubl
inc
sbb
test
insb
adc
add
sbb
cmp
push
xchg
jg
xor
xchg
xor
test
adc
decl
push
jmp
sbb
inc
int3
leave
sbb
fcomps
xchg
xor
sahf
out
or
add
or
std
movsb
xchg
in
pop
mov
enter
cmp
rcrl
mov
dec
dec
sub
mov
les
fisubrs
stc
push
adc
mov
jg
inc
notb
xor
lahf
or
inc
lcall
cmp
gs
aas
mov
testl
push
test
das
pop
pop
arpl
mov
aad
cmc
ret
in
add
subl
aas
sub
test
jg
push
lea
push
and
lahf
add
xor
or
push
jg
xchg
pop
js
adc
mov
sahf
xor
enter
sbbb
add
sub
adc
add
mov
loop
pop
adc
push
dec
push
and
dec
adc
rclb
mov
dec
out
jmp
add
std
inc
or
fwait
mov
mov
adc
or
pop
daa
inc
in
push
imul
loopne
das
shr
pop
lods
add
call
xchg
dec
std
push
and
daa
add
dec
test
mov
or
imul
lahf
and
sub
mov
and
adcb
add
xchg
mov
pop
sbb
jns
lcall
les
add
jb
mov
enter
push
add
in
outsl
fistpll
ret
or
xchg
add
cltd
int3
test
push
adc
jl
inc
shrb
fwait
dec
xor
nop
fldt
loop
sbb
xor
inc
cmp
push
mov
cmp
or
sbb
sbbl
jl
dec
insb
mov
ret
imul
fsts
mov
test
ret
ret
sbb
mov
adc
testl
iret
sub
or
add
mov
loopne
test
lods
mov
gs
xchg
lcall
mov
fs
popf
lods
or
jle
aad
scas
fcomps
dec
inc
add
or
into
mov
jo
add
faddl
dec
sbb
bound
mov
cmp
xchg
clc
adc
add
testb
fadd
dec
test
in
int3
inc
push
out
inc
out
inc
fcomip
and
xchg
sub
lods
addl
outsl
inc
fs
cmpsb
scas
push
out
test
sub
xor
cmp
mov
xchg
inc
mov
add
decl
or
push
pushf
cmp
gs
inc
add
xchg
hlt
xchg
fsubl
roll
out
or
add
or
and
adc
push
movsb
mov
or
push
out
and
scas
and
xor
les
lds
add
jo
adc
sti
add
adc
xor
dec
cwtl
insb
mov
fs
add
cmp
add
jmp
mov
and
or
movsb
int3
daa
xchg
fs
cwtl
pop
mov
xchg
enter
dec
jno
loope
test
xchg
out
pushf
mov
add
add
jmp
insb
pop
xchg
push
hlt
rorl
cli
push
imul
movsb
mov
pop
fcomi
or
mov
add
adc
outsb
mov
pop
and
and
cld
cmpsb
and
cmp
pop
sub
and
xor
dec
inc
les
add
jmp
outsl
push
inc
fnstcw
push
nop
mov
ret
push
xchg
insl
push
cltd
lcall
inc
dec
push
jb
add
das
add
push
or
cld
jno
aaa
mov
push
js
fdivs
pushf
fisubrl
call
inc
xorb
shll
or
movsb
in
dec
xor
sarb
inc
daa
jl
nop
or
stos
pop
loop
adc
add
out
in
mov
sub
xor
pop
dec
xor
add
push
fidivs
out
icebp
cli
push
popf
add
fsubrl
enter
add
xor
nop
dec
mov
test
dec
loope
mov
jle
cwtl
xor
sbb
jmp
sub
xor
rcl
mov
adc
or
daa
inc
push
and
repnz
sbb
adc
ds
adc
lcall
leave
pushf
filds
lock
sar
jg
cmc
sahf
test
sti
in
xchg
test
add
test
jp
mov
mov
ret
fldcw
mov
int3
fmull
add
and
mov
jge
adc
cmp
inc
inc
push
in
fadds
pusha
mov
jmp
sub
inc
test
imul
and
pop
mov
pop
cmp
incb
adc
loopne
ffree
sti
mov
add
lock
sbb
jb
imul
xchg
cld
arpl
js
add
or
or
addl
je
and
lea
ret
mov
out
jle
add
jecxz
push
incl
into
in
pop
shl
push
je
dec
and
cmp
jne
xchg
adc
pusha
add
test
adc
jg
stos
loop
aam
add
add
inc
dec
lods
cmp
inc
je
add
iret
lret
imul
gs
pusha
add
imul
cmp
and
test
pop
ror
dec
inc
pusha
jne
leave
pop
div
sysret
cs
dec
sbb
jae
scas
xlat
rolb
repnz
adc
filds
add
sahf
jle
push
leave
xorb
push
dec
int3
mov
imull
outsl
xlat
sub
push
mov
js
jb
inc
jae
xor
push
inc
lahf
subl
jnp
mov
clc
icebp
imul
dec
inc
popa
mov
push
and
in
movsl
and
sub
nop
inc
in
adc
jo
dec
push
inc
mov
and
gs
hlt
sub
push
mov
adc
fsubrl
and
movl
enter
cmp
pop
test
mov
xchg
dec
cmp
mov
mov
aad
aam
bts
iret
mov
xchg
add
aad
dec
cmpsl
in
ja
ja
jne
scas
xchg
cmpb
rorb
jbe
add
add
xor
inc
jmp
mov
pop
stos
or
lahf
xor
xchg
mov
sbb
lock
ficomps
sbb
popf
test
sbb
pushf
and
popf
xchg
popf
cmpsb
or
sbbl
jo
or
dec
jne
andl
adc
dec
rclb
ret
and
cmp
cli
add
and
add
dec
mov
js
je
jnp
mov
outsl
push
add
mov
mov
fsub
sar
aaa
dec
fidivrs
jnp
push
and
loopne
insl
push
pop
test
push
imul
sbb
out
in
mov
test
pop
mov
pop
test
dec
in
dec
xor
pusha
jmp
js
pop
pop
repnz
mov
sbbb
ja
sti
sub
cmc
inc
cld
xor
repnz
test
sbbl
movsb
xchg
aas
inc
in
mov
adc
testb
lret
add
pushf
arpl
jnp
mov
dec
adc
sbb
loop
testl
sub
jmp
pop
subl
jne
add
and
jo
add
jno
adc
es
ljmp
push
add
and
pusha
pop
mov
xchg
fwait
xchg
test
shll
loopne
mov
adc
pop
adc
pop
lods
add
test
xchg
popf
xchg
add
pusha
jle
dec
dec
adc
jmp
fildl
add
fmull
test
sub
xor
je
mov
fisubs
lcall
ret
in
mov
cmp
push
push
std
ror
push
add
mov
dec
lret
cli
jg
push
dec
imul
icebp
nop
cmp
push
repz
rcll
sbb
mov
and
sbb
cli
inc
adc
pop
xchg
and
mov
mov
or
arpl
mov
inc
roll
sub
clc
jle
cmp
mov
fstps
jns
or
testl
or
mov
or
fiaddl
inc
mov
adc
clc
xor
fs
stc
scas
xlat
rolb
enter
add
inc
push
xchg
ja
jno
or
push
add
subl
nop
xor
jns
pop
push
mov
mov
push
notl
jmp
push
popf
pop
and
push
push
es
enter
dec
aam
jle
div
or
jns
mov
pusha
cwtl
mov
lds
mov
fisubl
nop
test
and
sbb
add
in
inc
addr16
mov
inc
data16
xlat
dec
orl
inc
dec
pop
pop
enter
sti
ret
and
gs
pop
dec
mov
or
pop
and
roll
mov
push
nop
dec
in
cmp
inc
sbb
cmp
dec
mull
mov
xchg
and
cwtl
and
mov
jne
rclb
roll
add
mov
in
or
dec
jb
adc
add
xorb
fs
cld
push
ljmp
mov
mov
pop
int3
pop
sub
mov
and
shlb
pop
jne
mov
push
outsl
je
add
adc
and
ljmp
nop
mov
mov
add
mov
sarl
cmp
adc
dec
data16
rclb
jne
and
addb
and
add
adc
mov
out
incl
xor
jecxz
xchg
repz
mov
mov
popa
inc
add
sub
cmpsb
lret
push
je
fs
shrb
jbe
dec
and
cmp
dec
outsl
test
out
or
sti
movsb
es
mov
sar
fs
xchg
jo
pusha
inc
mov
push
fldl
loope
pusha
std
xor
mov
movsl
sbb
mov
rorl
mov
push
jg
nop
mov
in
adc
jns
divb
xorl
jb
pushf
mov
in
or
sub
sbb
pop
jecxz
loopne
pusha
pop
ljmp
movsb
inc
jo
pop
and
lcall
movsb
dec
push
cmp
les
mov
mov
adc
andl
enter
mov
sub
clc
sub
std
gs
insl
sub
and
push
push
arpl
or
add
mov
cmp
jecxz
shll
mov
mov
add
cmp
addr16
xlat
add
frstor
into
dec
insl
jl
mov
cli
je
cmp
aaa
int3
add
xor
pop
mov
cwtl
push
mov
or
imulb
insl
loopne
and
adcb
mov
mov
xor
pop
and
jg
push
ljmp
add
mov
add
shll
cmp
adc
adc
adc
les
lock
mov
dec
arpl
leave
in
add
ljmp
jo
in
out
mov
sub
nop
in
adc
mov
pop
cmpb
cltd
es
add
mov
adc
inc
insb
add
in
mov
mov
movsb
in
mov
in
adc
stc
pop
orb
ret
lds
mov
cltd
cwtl
add
call
pop
in
jl
jne
push
mov
cmpsb
lea
sets
test
add
adc
adc
and
data16
jp,pn
cld
adc
or
cli
mov
clc
xor
mov
add
inc
xchg
add
adc
out
js
dec
sbb
rcrb
push
hlt
cltd
mov
pop
stos
out
jmp
movsl
cmp
push
cmpsl
mov
cmp
jo
pop
lds
adcb
cmp
js
push
add
xchg
sbb
mov
jg
mov
add
cmpsl
push
mov
rclb
cltd
in
push
test
mov
mov
hlt
xor
dec
xchg
inc
xorl
xchg
adc
and
adc
inc
adc
loopne
mov
add
aas
hlt
into
clc
push
cmp
faddl
adc
jno
adc
add
inc
aad
fsubl
dec
add
mov
dec
pop
in
jmp
sub
cmp
add
and
jo
aad
shlb
outsl
nop
mov
test
xor
mov
loope
cwtl
out
sub
push
push
and
pop
mov
cmp
mov
mov
lahf
cli
out
add
sahf
xchg
jge
adc
pop
fwait
xor
outsb
push
push
mov
insb
mov
addb
adc
nop
aas
loop
cmp
cmovo
repz
test
pushf
test
push
rolb
rcrb
mov
mov
mov
in
sarl
pop
push
pop
mov
cwtl
ljmp
mov
ja
outsb
leave
inc
add
nop
push
movb
setl
xorb
pop
pop
cwtd
inc
add
out
incl
leave
jp
mov
add
cmp
cmc
arpl
add
outsl
jnp
xchg
pop
sbb
das
dec
js,pt
addb
inc
imulb
incl
pop
jb
cltd
leave
or
stos
or
sub
lods
les
dec
cmp
cmp
add
lods
pop
dec
dec
cmp
add
orb
sbb
mov
dec
add
fs
fstps
push
jg
sub
mov
xor
sbb
pop
imul
ret
cwtl
and
dec
cltd
ja
gs
sbb
push
fwait
pop
add
lret
add
pusha
jecxz
or
xchg
stc
repnz
add
mov
xchg
rcr
data16
and
pushf
add
and
dec
in
and
push
gs
fidivs
aam
stos
fdivrs
rcrl
adc
mov
lcall
popf
xor
ret
mov
out
fcoms
jae
test
add
mov
mov
add
cmp
dec
cmp
inc
mov
dec
add
add
inc
rclb
subb
jmp
sbb
adc
add
add
stc
or
insl
and
fmuls
mov
aad
push
repnz
cwtl
pop
fiadds
sbb
test
in
rcrb
adc
shrl
lds
lret
jp
xchg
mov
orb
or
sahf
sub
fadds
dec
mov
lea
aam
int3
pop
lret
inc
sub
sbb
mov
cmp
add
ja
fwait
and
adc
es
mov
add
nop
je
in
fiaddl
flds
out
push
js
adc
in
push
push
cwtl
cld
inc
dec
cmp
push
mov
add
ss
dec
push
mov
and
cmc
xor
mov
xor
pop
cmp
and
adc
push
adc
es
not
add
movsl
cmpsl
mov
lods
fiadds
xor
rcl
adc
test
sub
xchg
mov
sbb
mov
loopne
mov
ret
add
aam
daa
cltd
test
sbb
push
push
ret
xchg
pop
stc
adc
push
sub
ffreep
add
and
sbb
jno
or
or
rolb
sti
enter
pop
int
adc
jo
cmp
dec
xchg
add
adc
push
loop
movsb
add
sbb
xchg
sub
jb
add
jecxz
mov
sbb
lahf
sub
loopne
jl
bound
shlb
arpl
add
sbb
sarl
xorb
shrb
mov
mov
pushf
das
dec
push
hlt
and
popa
push
xor
cmpb
xchg
add
xchg
inc
sub
add
mov
lock
movsb
les
stc
lahf
jne
pop
loop
nop
mov
leave
and
ret
sbb
sbbl
sub
ret
loope
xchg
push
ret
out
sti
add
mov
test
dec
mov
jge
dec
mov
mov
cmp
push
and
xchg
and
cli
mov
sbb
popa
push
mov
mov
lcall
pop
ljmp
mov
dec
scas
ds
inc
or
inc
inc
mov
test
mov
inc
adc
add
idivb
lret
mov
loopew
dec
fcompl
clc
dec
sarl
popf
ret
scas
lock
add
in
jnp
add
fidivrs
aas
jmp
dec
in
mov
and
inc
cmpsl
fistpll
and
push
dec
push
inc
jmp
outsb
loopne
js
data16
test
jbe
adc
or
jo
rcrb
sbb
negb
rorl
test
cmp
jno
movsl
clc
add
popf
mov
and
and
sbb
cmp
aas
add
add
out
test
mov
push
pop
aad
add
sbb
fistps
movsb
cmp
mov
pushw
push
loopne
jecxz
mov
jmp
dec
push
push
add
cltd
xchg
push
or
lcall
mov
xor
mov
mov
fsubr
xchg
pop
inc
or
dec
jnp
inc
hlt
scas
sbb
or
cmp
mov
imul
xchg
lods
cmp
add
xchg
adc
inc
add
add
mov
fucomip
inc
es
xchg
sub
stos
mov
cs
scas
rcrb
les
inc
jmp
push
adc
mov
push
andb
sbb
add
mov
rol
out
jl
add
mov
cmp
sbb
jno
or
inc
pushf
dec
push
fadds
shl
aas
inc
jo
lea
xor
add
xchg
je
push
cmp
or
or
xchg
shll
testl
sbb
and
pop
pop
nop
dec
add
jno
mov
add
xchg
adc
in
fbstp
shrl
mov
adc
cmpl
insl
sub
sahf
xor
outsb
cli
lock
push
lret
out
fiaddl
cmp
push
imul
in
je
stos
jecxz
add
cmp
into
add
imul
sbb
mov
add
cmp
pop
enter
push
clc
cmc
sahf
push
jno
aam
fstps
cld
push
ror
mov
sbb
mov
scas
sbb
sti
push
testl
jp
js
sub
and
fdivrl
cwtl
mov
lcall
lret
std
sub
xor
imul
mov
sbb
or
sbb
nop
cwtl
cmp
push
and
testb
addb
shrl
in
sbb
xchg
ds
pop
pushf
int
mov
orl
ret
push
mov
jbe
bound
mov
add
dec
in
dec
push
push
adc
push
lea
inc
pop
aad
mov
add
fnstsw
xchg
out
mov
jno
mov
into
add
in
lds
inc
fld
loop
adc
and
bound
jnp
mov
add
adc
xlat
outsb
push
cli
into
sub
push
jnp
int3
mov
dec
ret
test
adc
insb
scas
call
dec
and
ret
add
lret
jae
loopne
jl
pop
pop
int3
add
adc
adcb
push
out
nop
mov
push
push
and
stos
add
xchg
fwait
inc
xchg
push
test
or
push
mov
lret
add
mov
out
jbe
mov
enter
insl
lahf
add
rorb
push
inc
and
add
pushl
sbb
or
fisttps
cmp
push
fsincos
mov
adc
cmc
adc
clc
fs
fimull
lods
rol
and
add
mov
in
sti
pop
add
mov
rolb
les
xor
je
jbe
add
fistpll
push
loop
jno
test
jp
add
and
nop
adc
sbb
pop
in
mov
add
repnz
es
jno
dec
stc
subb
pop
jecxz
xor
jmp
arpl
and
addps
xor
repz
sub
dec
dec
push
daa
cwtl
dec
out
movsl
sahf
inc
add
jno
nop
jo
stc
mov
mov
loop
js
lret
add
pop
mov
nop
push
repnz
andb
in
dec
call
jae
xor
or
xor
inc
scas
js
jl
sub
in
or
sbb
pop
mov
mulb
imul
sahf
lcall
lock
arpl
pop
jno,pn
adc
xchg
rclb
fldl
push
inc
fidivrs
psubsw
pop
test
sub
cmc
add
jno
push
inc
xchg
mov
leave
setae
xchg
scas
xchg
movsb
cmp
cmp
lret
mov
jmp
shrl
test
aaa
mov
xor
roll
xchg
fldt
jne
and
sbb
jbe
out
pop
lcall
or
cmp
cmpsb
add
pop
or
inc
incb
sub
lds
mov
fsubs
adc
lods
sub
fsubrl
inc
pop
stos
adc
xor
pop
xor
mov
int3
cmpsl
cmc
push
addb
xor
mov
out
cmpsb
fwait
mov
cli
or
outsl
pop
lods
mov
gs
push
rolb
jbe
adc
push
inc
movsl
mov
add
popl
out
mov
xor
or
in
stos
fmuls
xor
push
test
mov
aas
push
mov
push
aaa
push
mov
jl
addl
enter
sbb
fisttpl
mov
xor
inc
and
mov
loop
lds
pop
icebp
es
rcrb
sbb
push
hlt
jbe
add
push
ret
icebp
cltd
sbb
imul
add
popa
ret
add
inc
roll
outsl
jle
adc
inc
ljmp
mov
outsl
cli
sbb
movsb
sub
mov
adc
outsb
lahf
loop
jbe
imul
mov
sbb
clc
movsl
shrb
cmp
fisttpl
fcomip
into
pop
in
mov
jmp
lcall
add
popa
nop
push
inc
imul
mov
inc
icebp
dec
add
lret
cmp
jl
movsl
mov
fadd
leave
loop
sbb
mov
test
test
xchg
insb
loop
out
add
push
mov
xor
pcmpeqb
in
add
loop
or
fdivrs
pop
push
incb
or
call
out
in
mov
inc
fstps
ljmp
xchg
filds
or
xor
lahf
add
out
jp
popl
loopne
mov
push
push
inc
aaa
les
rol
roll
xlat
inc
mov
add
xorl
shlb
es
repz
scas
fdivs
mov
js
xchg
sbb
loope
jp
sbb
shrb
ss
xchg
or
xlat
push
inc
cmp
mov
pop
notb
insb
test
cld
pushf
xchg
pusha
pop
pusha
adcb
popa
mov
xchg
mov
fdivrp
pop
movsb
mov
jns
dec
adc
xchg
or
add
daa
aad
mov
pop
xor
mov
loopne
nop
pop
mov
add
pop
pusha
sub
jne
mov
pusha
or
jmp
mov
sbb
mov
push
mov
js
mov
mov
pop
pop
mov
push
das
adc
in
js
add
jge
dec
mov
mov
repnz
adcb
pop
mov
jo
fldenv
pop
test
xchg
lret
add
sbb
adc
movsb
int
push
mov
out
pop
shlb
xlat
push
add
mov
les
popf
mov
sbb
scas
aam
leave
data16
call
pop
loop
jno
fldt
pop
jo
mov
add
aam
pop
adc
rcll
jae
cld
std
sub
xor
add
pushf
rolb
sub
push
repnz
js
call
out
cld
and
dec
fdivs
cmp
or
pop
aaa
movsl
pusha
inc
test
movsb
or
push
jge
mov
push
sbbl
mov
clc
das
cli
or
prefetch
lods
xlat
test
bnd
dec
pop
pop
and
std
movsl
add
xchg
add
movsb
lods
mull
lahf
mov
add
movsl
std
sub
aam
push
out
sti
cwtl
inc
adc
scas
nop
ror
xor
mov
inc
into
xor
or
mov
xor
inc
sahf
lock
cmp
xchg
add
dec
push
loope
pusha
and
orb
leave
lret
loop
lcall
push
mov
add
adc
cmp
jo
cmp
inc
sbb
jl
hlt
xchg
out
mov
or
shlb
dec
jmp
les
loopne
xor
add
mov
arpl
add
cmp
ja
shl
add
fisttpl
add
stos
arpl
pop
ss
adc
flds
cwtl
in
and
out
ljmp
jmp
in
mov
mov
enter
enter
int3
cmp
daa
cmp
pusha
fildll
xchg
mov
sahf
fwait
xor
je
sbb
sub
sbb
incb
add
dec
cmp
push
mov
aaa
sub
push
iret
sbb
mov
outsb
mov
mov
ja
inc
sahf
add
insl
scas
out
and
mov
lock
leave
mov
xchg
push
incl
mov
ficoms
lahf
adc
ja
dec
xorb
imulw
aas
ret
scas
mov
or
jge
push
inc
dec
push
lahf
or
jb
dec
sahf
je
add
mov
scas
mov
jne
add
lods
ja
jno
cld
outsl
add
dec
into
sub
subb
add
mov
adc
add
into
add
mov
mov
sbb
loop
pop
jbe
stos
and
push
ret
pop
inc
add
movsl
inc
jle
and
clc
cmc
mov
and
lret
out
fucom
add
push
fmull
aad
bound
pop
test
adc
jge
pop
add
adc
mov
add
jne
jp
add
mov
push
andb
mov
push
adc
adc
cwtl
inc
icebp
nop
mov
mov
scas
popf
sbb
ss
fs
sub
cmp
jae
add
add
pop
outsb
xchg
push
jg
mov
xor
imul
add
outsb
pop
mov
fmuls
and
int3
andl
mov
or
or
je
mov
lret
add
stc
pop
aas
aad
xchg
fs
hlt
lahf
jo
pusha
xchg
leave
xlat
pop
adc
pop
adc
add
xchg
dec
outsb
sub
lahf
or
dec
jmp
push
sub
sub
in
je
ss
xchg
loopne
lods
and
pop
mov
mov
sbb
or
sub
lret
add
inc
mov
add
jne
fdivrs
fwait
add
cmp
sbb
cli
adc
mov
push
test
js
test
arpl
adc
inc
fiaddl
movsl
xor
dec
add
fs
inc
cmp
mov
jmp
aaa
shll
inc
mov
push
sub
xor
aam
repnz
add
sahf
js
mov
loopne
push
add
and
push
and
mov
adc
ds
cld
or
mov
test
pop
testl
dec
push
mov
or
aam
adc
or
and
push
fadds
adcb
gs
dec
lods
add
cmpsl
push
mov
or
fimull
cltd
mov
mov
xor
add
imul
aas
and
cmc
mov
and
cltd
mov
add
xor
lahf
or
nop
xor
lods
sub
adc
sub
mov
aam
dec
adc
and
inc
jae
loop
ja
add
adc
inc
add
mov
lods
cmp
or
cmp
mov
sahf
cmp
push
sbb
jbe
xchg
xchg
int
cmc
sub
xor
stos
out
nop
ljmp
or
mov
pop
into
xor
add
fsubrs
std
stos
and
out
push
std
outsl
xchg
xor
sarb
mov
and
inc
mov
jo
scas
iret
pop
lahf
lret
popa
add
decl
push
sbb
mov
jb
leave
fdivrs
movsb
cmc
or
repz
test
mov
fcoms
add
sub
rclb
dec
inc
push
mov
pop
cwtl
cmp
cmpsb
lock
hlt
mov
ds
je
lock
or
dec
insb
shlb
or
rorl
xchg
xchg
call
cmp
ret
mov
jmp
mov
ds
mov
cwtl
enter
out
or
push
lea
cmp
hlt
out
loop
scas
ds
and
jp
sbb
lods
fildl
sbb
pop
or
and
add
jb
mov
push
les
cmp
sub
popf
jecxz
mov
lds
or
insl
mov
push
inc
and
subl
or
inc
mov
dec
inc
cmp
imul
leave
mov
shlb
mov
mov
sbb
es
mov
add
bound
sahf
mov
mov
add
int3
enter
je
pop
mov
jno
ljmp
xchg
jo
add
sahf
in
imul
sub
sarb
inc
cmp
push
inc
ret
fiaddl
or
pushf
iret
dec
xchg
or
inc
jl
add
hlt
in
adc
rcrb
out
lret
adc
or
add
lock
sub
xchg
pop
or
int
inc
aam
cmp
movsb
enter
std
roll
inc
xor
lcall
inc
or
test
loop
inc
push
pushf
add
popf
nop
cmp
sbbb
js
pop
rolb
adc
lock
popf
fmul
les
xchg
pushf
adc
sarl
and
in
test
push
adc
lret
pop
decl
dec
mov
inc
add
js
cmp
pop
repnz
xorl
add
push
rorb
ljmp
pop
sub
sbb
mov
inc
add
outsb
and
mov
sub
jb
xor
sbb
xchg
adc
movsb
int
inc
es
pop
adcb
adc
pop
mov
mov
inc
or
les
push
enter
mov
dec
push
jno
repnz
ja
faddl
or
pop
jbe
nop
shlb
jne
and
cmp
pop
cmp
ja
sbb
into
dec
or
hlt
or
cwtl
add
cmp
push
push
pop
add
lret
clc
mov
enter
pusha
pusha
aam
outsb
mov
imul
setp
or
es
add
inc
movsb
movsl
cs
aas
jp
push
loopne
add
cld
addr16
lret
fadds
fmuls
lock
cmp
imul
cltd
push
enter
add
movsb
aaa
cmp
call
sti
aas
inc
cltd
xorb
stos
add
ret
xchg
clc
add
leave
add
jae
rcrl
mov
cmp
add
fstps
addb
xor
dec
movsb
add
push
loop
xor
int3
insl
push
out
outsb
mov
cwtl
inc
movsb
pop
sub
rcrb
cmpb
divps
pop
aaa
je
adcl
sub
or
inc
sbb
pusha
jnp
outsb
popa
push
imul
mov
mov
sub
sub
xor
rorb
imul
out
mov
in
arpl
push
xor
ss
loop
push
pushf
lods
lock
out
mov
sbb
imul
xlat
into
jecxz
or
ret
inc
mov
or
or
xchg
pop
pushf
jno
dec
pop
inc
aas
and
xor
lret
lahf
inc
sub
lock
outsb
test
mov
lds
fxtract
and
push
push
lods
add
add
adc
scas
sarl
add
inc
dec
dec
movswl
mov
mov
cmp
xor
std
pop
pop
out
add
or
outsb
sub
incl
adc
imul
in
lods
imul
aad
rolb
mov
mov
jmp
call
cwtl
xor
push
inc
loop
lret
scas
int3
jnp,pn
fildl
inc
mov
pop
nop
xchg
enter
sbb
push
cmp
clc
cwtl
test
xor
xor
jmp
hlt
jge
outsl
cmp
jnp
mov
cmp
pop
divb
sbb
jae
adc
mov
add
or
movsl
push
add
jae
add
sahf
mov
or
jp
std
sti
mov
out
lahf
hlt
filds
nop
pop
adc
jp
daa
add
pop
and
in
mov
cmp
and
jl
fwait
xor
test
arpl
jnp
aas
add
push
xor
push
mov
push
xchg
out
out
add
mov
ja
loopne
dec
mov
repnz
into
dec
loopne
mov
push
repz
out
sub
mov
cmc
mov
js
ret
inc
outsb
js
sbb
hlt
sbb
and
adc
or
or
andb
nop
inc
pop
je
jns
xchg
lods
or
lea
pop
sbb
sub
or
inc
ret
push
rclb
fptan
inc
mov
mov
mov
jecxz
mov
movsb
rcrb
xor
scas
mov
cmp
mov
repz
inc
add
dec
movsb
jg
and
push
sub
dec
push
dec
sub
jecxz
adc
jmp
dec
jb
mov
add
aad
sub
jnp
push
xor
mov
fyl2x
mov
mov
jl
iret
sbb
xchg
add
lods
fists
adc
ret
xor
or
adc
adc
cmp
adcl
xor
mov
ss
test
stos
pop
push
add
inc
mov
out
add
es
cli
dec
mov
rorb
pop
sbb
in
sbbl
rolb
pop
test
pop
test
dec
sub
aas
in
stos
or
mov
add
inc
movb
inc
out
mov
loopne
add
adc
xchg
mov
decb
inc
xchg
add
aad
stc
pop
inc
add
out
fisttpll
loopne
fsub
or
mov
xchg
mov
jle
idiv
ljmp
pushl
call
and
mov
out
rcrl
adc
xor
push
in
cmp
or
pushl
adc
fsin
loope
ret
or
push
fmull
add
adc
in
enter
add
cwtl
rcr
jmp
mov
in
arpl
adc
sbb
lahf
pop
loope
jl
inc
repz
stos
test
mov
push
cld
cmpl
loope
or
add
push
cs
mov
pop
or
push
dec
adc
jl
int
nop
jo
icebp
mov
xchg
cld
stos
push
sbb
out
test
div
data16
push
mov
add
orb
iret
lds
and
xor
xchg
xor
popa
mov
push
dec
int
lar
and
sbb
pop
add
xchg
push
scas
ret
add
cmp
push
in
mov
out
ljmp
ret
inc
cmpsb
xchg
clc
nop
mov
push
xchg
xor
ljmp
aam
fs
std
xchg
xchg
pop
xor
repz
xchg
or
insb
sti
inc
add
sbb
xor
les
push
jp
xchg
loopne
rcrb
out
inc
in
icebp
add
dec
fldcw
mov
lea
andb
inc
sbb
ss
rolb
dec
xchg
or
addl
xchg
pushf
in
push
sbb
adc
orl
add
xchg
inc
lods
arpl
bound
int3
sbb
sbb
int3
mov
rclb
add
lds
dec
test
popf
dec
fsubrs
xor
cmp
mov
cwtl
pushf
add
testb
lods
sbb
fldl
jae
push
into
ret
incb
inc
sub
push
nop
ret
cwtl
in
cmp
mov
nop
pop
imul
cs
ljmp
or
fxch
lods
test
dec
add
or
scas
and
in
insb
lret
dec
cli
pop
jns
mov
add
lock
fsts
mov
divb
aaa
and
jecxz
je
adc
xchg
or
shr
incb
adc
fwait
push
xchg
ds
add
in
xchg
dec
popl
or
xchg
stos
cld
push
jmp
popa
cs
lock
xchg
mov
es
pop
loopne
or
cmpsl
sub
jne
or
jne
test
dec
jnp
ja
push
outsb
js
clc
out
scas
fcmovnu
cmp
enter
sbb
sub
dec
outsb
sbb
xor
push
movsb
or
pop
inc
nop
mov
add
repz
push
fs
sub
loop
mov
and
fiaddl
xchg
aas
test
sbb
lock
incb
cmp
movsl
fcoml
sub
pusha
pushf
or
sahf
jg
adc
jno
xor
xor
loop
into
stos
inc
or
cmp
add
cmp
mov
sbb
ljmp
jge
mull
and
add
testb
jmp
movsb
pop
push
pop
aas
lea
aam
jecxz
cmp
inc
and
movsb
pop
or
pop
dec
push
push
stc
push
add
imul
add
aad
mov
cld
dec
add
or
lock
pop
push
popf
lret
push
mov
add
and
insl
and
mov
dec
dec
lahf
mov
xor
lock
out
add
mov
movsl
nop
aad
mov
or
test
jo
dec
incb
inc
imul
mov
jb
shll
jbe
gs
push
inc
add
mov
popa
add
out
xchg
xchg
shll
cmp
or
fidivs
cltd
mov
and
jno
aam
mov
add
xor
test
ljmp
xchg
insl
mov
fsubr
xor
mov
pop
incl
cmp
mov
add
lea
inc
outsb
stos
test
outsl
movsl
sarb
movsb
es
pop
push
or
xchg
pop
mov
inc
xor
add
xchg
jmp
adc
pop
repnz
aas
or
mov
add
nop
or
cmpsl
add
xchg
add
insb
and
and
pop
jmp
xor
bound
popf
scas
rclb
addr16
adc
mov
test
fildl
iret
out
push
dec
or
pop
sbb
pop
loope
stc
cs
add
ret
inc
addl
and
adc
aam
xor
ret
cs
outsl
call
jne
add
fbstp
pop
cmpsb
leave
mov
dec
or
dec
loopne
cmp
loope
cwtl
sbb
add
popl
add
or
insl
icebp
ja
dec
gs
popa
addr16
mul
and
test
sbb
cmp
jno
pop
stc
mov
pushf
dec
mov
nop
jecxz
add
cmpsl
sub
pop
dec
andb
imul
in
mov
test
mov
iret
icebp
data16
mov
pop
mov
out
mov
or
pop
popa
dec
lock
xchg
jno
add
jle
jb
xchg
xlat
pop
pusha
rorl
leave
repnz
lea
sbb
rcll
sub
push
sub
rcrb
adc
adc
mov
lret
cltd
insb
add
cmp
pop
add
push
push
jle
push
lret
adc
sahf
mov
mov
xor
cld
pop
dec
aaa
pop
sbb
sub
mov
pop
push
fnsave
and
mov
sarl
fs
bound
jno
mov
adc
and
push
cli
cmp
or
std
push
sbb
jmp
test
pop
subl
rolb
subb
sti
inc
nop
mov
xchg
shlb
add
fucomi
and
fiaddl
jecxz
loopne
cmpsb
hlt
push
int3
push
mov
and
aam
lock
mov
int
es
ret
into
jg
mov
pop
test
push
out
lock
orl
cmp
lods
add
pop
add
stos
movsl
xchg
jmp
or
cwtl
cmp
adc
mov
dec
outsl
push
lds
fbld
add
je
push
lea
mov
aaa
outsl
xor
cmpl
loopne
mov
sub
adc
mov
mov
push
incl
addr16
rolb
add
mov
lret
cltd
mov
pop
mov
rcll
push
push
xor
inc
shll
xor
xchg
add
cmp
or
jmp
inc
stos
mov
in
add
stc
fbstp
dec
pusha
sub
aas
ljmp
mov
mov
and
dec
add
inc
push
bound
jo
fsubl
clc
cs
xchg
clc
inc
lods
mov
jno
out
sbb
jmp
mov
pop
sub
mov
es
fs
and
and
sbb
arpl
add
mov
aas
inc
sub
scas
or
loopne
pusha
sbb
push
add
jbe
call
add
pop
ror
lcall
xor
outsb
scas
pop
xchg
and
or
shlb
in
mov
mov
sub
cmp
fnstenv
add
mov
jb
mov
mov
mov
mov
or
rol
pop
xor
loope
movb
movsb
sub
and
hlt
cmp
popa
pushf
cmp
jecxz
movsb
in
and
push
insl
pusha
int3
cmp
add
gs
mov
push
out
aad
ljmp
push
andl
aam
lds
pusha
test
cld
add
rcll
push
pop
add
mov
dec
test
push
add
and
inc
pop
mov
push
add
cltd
cwtl
fsubs
jno
pushf
loopne
add
inc
jbe
icebp
mov
fistpl
push
jo
sub
cmp
sbb
and
rcrb
pop
adc
add
cmc
cmp
pop
add
mov
orl
setbe
out
outsl
mov
jp
call
cltd
cld
add
test
push
stc
cmpsl
or
inc
cmp
push
andl
mov
pusha
iret
int3
aaa
sbb
cmp
pusha
sub
sarb
xor
aas
adc
pop
add
dec
mov
jno
xchg
test
inc
inc
ljmp
imul
rorb
daa
test
or
fcomps
adc
or
add
jns
add
and
jo
sub
fdivr
sub
orl
rcr
xor
in
add
jbe
aad
out
xchg
sub
xchg
pusha
add
decl
push
jmp
inc
xor
cltd
adc
repz
add
add
and
aas
mov
cld
out
add
sbb
hlt
lock
cli
in
mov
or
repz
jne
add
les
dec
icebp
out
in
or
fisttps
inc
push
ret
js
cmp
or
push
pushl
fdivrl
sub
fisttps
shrl
addl
push
pop
cltd
out
xor
xchg
hlt
jae
sub
daa
popa
out
sbb
in
stos
pop
out
or
sbb
jecxz
sbb
mov
add
mov
jae
xor
add
or
rcr
mov
pop
lahf
std
xchg
imul
jp
mov
push
in
mov
lret
adc
shrb
mov
mov
sub
dec
lcall
add
mov
addl
mov
add
dec
mov
mov
or
push
jo
xchg
add
pop
sarl
stc
int3
movhps
loop
aas
jl
pop
fisubrs
dec
xrelease
pop
cmp
cmp
mov
cld
xor
pop
int3
xor
jo
enter
loope
fwait
mov
push
js
push
mov
adc
call
xchg
loope
stc
pop
or
mov
mov
lahf
inc
pop
push
add
push
or
add
pop
mov
clc
shr
out
test
nop
mov
lods
test
sbb
test
enter
xor
add
loop
insl
add
test
jb
loope
loop
inc
xchg
add
pop
push
cmp
mov
fsubrl
cmp
loop
add
test
inc
cwtl
jno
inc
in
jns
xor
add
mov
pop
pause
add
jo
xchg
dec
xor
sub
test
cwtl
xchg
pop
jl
call
mov
mov
orb
je
and
xor
jecxz
rorb
mov
mov
inc
inc
inc
test
movsb
andb
loope
push
cmpsl
cmp
imul
adc
les
call
push
subb
xor
ffreep
sahf
call
mov
pop
cmp
push
add
loop
sbb
xchg
cs
cwtl
add
dec
sbb
repz
fildl
hlt
je
add
lods
mov
pop
sti
or
adc
in
shl
or
sbb
pushl
xchg
rorb
enter
jb
out
or
outsl
sbb
cs
jne
es
movsb
jmp
add
jbe
jns
pop
and
mov
add
nop
mov
iret
test
xor
fs
xlat
out
aaa
dec
mov
xor
js
add
inc
ret
pop
mov
sub
fcomps
arpl
inc
or
jmp
pop
pop
cmp
xlat
lds
jl
mov
xchg
add
sbb
lea
fimuls
mov
fcmovnbe
dec
cmp
test
jns
push
mov
sbb
xchg
or
dec
add
pop
shl
add
nop
cmc
rcrb
iret
in
add
inc
xchg
sbb
mov
test
es
xor
wbinvd
test
out
inc
aam
stc
adc
sahf
push
insl
mov
adc
ret
shl
mov
in
in
adc
mov
dec
les
inc
cmp
pop
push
test
rolb
push
and
dec
xor
inc
cmp
cmp
dec
jle
xor
das
pop
adc
lahf
add
mov
sti
pop
fisubrl
fbld
mov
or
pop
push
push
movsb
stos
loopne
std
jle
xchg
pop
xchg
insl
sub
iret
enter
lret
mov
mov
movb
addr16
out
movsl
hlt
sub
adc
fcmovb
jbe
dec
sub
leave
pusha
or
jno
add
insl
rol
test
pop
push
enter
xor
lods
mov
pusha
inc
mov
pop
xor
inc
push
mul
adc
xchg
adc
add
push
mov
roll
fs
popa
pop
mov
push
add
mov
adc
rclb
sbb
dec
add
int3
inc
gs
sub
xor
add
inc
cmp
and
push
push
rorb
into
pushf
fmuls
xchg
sub
aaa
dec
lea
sbbb
and
cmp
repnz
mov
test
arpl
leave
mov
sti
cmp
movsl
xchg
adc
xchg
xlat
push
inc
mov
xorb
addr16
dec
enter
jmp
pop
in
shlb
ds
les
cmp
loop
aas
jno
xorl
or
lds
stos
add
fistpl
dec
mov
or
inc
inc
and
add
mov
loope
and
mov
je
adc
dec
mov
pop
push
shl
mov
and
add
dec
mov
sub
mov
xchg
sub
jnp
cwtl
imul
mov
fs
xor
test
testl
pop
jbe
fdiv
hlt
add
mov
int3
add
jns
in
push
gs
clc
filds
adc
sub
popf
pushf
lods
add
mov
mov
push
hlt
enter
pop
xchg
lods
mov
and
add
pop
xor
ss
push
jl
andl
in
dec
mov
sub
les
sub
andl
jo
punpcklbw
imul
sub
lock
stc
arpl
mov
sub
jbe
add
add
mov
ror
lods
xor
dec
stos
push
sub
test
add
ficoml
add
sub
imul
roll
add
mov
ror
mov
sbb
or
push
fsubs
imul
je
mov
sub
add
xchg
shlb
ss
adc
ret
add
inc
test
std
adc
push
push
push
nop
shrb
cmp
add
lods
and
cmpl
aam
mov
stc
jae
add
jnp
in
stos
inc
pusha
nop
adc
into
scas
sub
mov
and
nop
jmp
mov
add
and
push
js
add
mov
in
clc
xor
into
mov
jmp
rol
jno
outsl
jb
or
pusha
call
in
or
inc
push
out
sub
mov
movsl
loope
jg
daa
mov
les
mov
out
clc
sub
fs
add
sti
stc
fildll
jo
test
stos
mov
inc
push
ss
aas
test
sbb
into
mov
add
xlat
enter
inc
jg
or
psadbw
std
gs
adc
push
lahf
cwtl
pop
cmp
or
xchg
mov
lds
loopne
mov
insb
push
mov
mov
les
cmc
fstps
or
lock
js
sbbb
fimull
mov
xorb
add
sub
adc
ret
imul
push
flds
cmp
enter
mov
shrl
gs
mov
in
int
xor
mov
gs
test
clc
pop
add
cmp
jecxz
shlb
nop
cld
cltd
jl
adc
adc
add
and
inc
mov
test
mov
inc
push
mov
push
add
xchg
inc
enterw
and
cmp
pop
dec
and
test
push
repz
sti
sub
orb
jmp
xor
mov
jmp
in
xlat
rol
and
inc
daa
aaa
jno
dec
ljmp
div
popa
dec
std
repnz
dec
pop
jp
xor
aas
roll
sbb
mov
or
add
out
cmp
pop
test
into
ret
inc
cmp
loopne
es
cwtl
push
xor
mov
daa
out
push
add
loope
scas
pop
jecxz
test
pop
add
int3
xor
sbb
addr16
cs
and
xlat
nop
inc
sarl
cmp
arpl
fimuls
add
int
inc
or
jo
test
je
add
lcall
std
push
dec
bound
and
loopne
adc
or
scas
mov
inc
hlt
xor
popf
cld
std
adc
mov
ret
xchg
jb
into
jmp
jne
mov
push
sbb
mov
leave
outsb
and
sarb
in
sbbb
dec
into
dec
push
enter
enter
cwtl
xor
cmp
add
lahf
adc
sbb
lds
subb
jle
push
xlat
scas
or
sbbb
push
mov
add
popa
das
mov
hlt
rolb
out
and
lock
cmp
cwtl
mov
ljmp
jno
scas
sub
test
test
or
add
pop
push
sub
dec
xchg
int
push
popa
mov
test
pop
sub
push
movsb
mov
or
jmp
inc
or
mov
add
and
dec
ljmp
gs
and
push
push
jno
and
or
mov
scas
sbb
hlt
mov
pop
add
test
inc
outsb
add
xchg
fs
cld
sti
push
mov
das
sbb
mov
dec
repnz
mov
out
scas
arpl
lahf
nop
rorb
shrb
xor
add
xchg
mov
stos
mov
push
mov
xchg
mov
xchg
and
or
int3
pop
aad
pushf
jno
dec
xchg
cwtl
add
mov
out
cmpsl
cmp
aas
mov
xchg
add
imul
ss
mov
dec
sbb
rorb
mov
add
or
push
xor
js
push
outsb
or
xor
pop
xchg
inc
add
inc
mov
sub
cwtl
and
or
jecxz
pop
jno
mov
push
jl
enter
push
xor
push
mov
add
das
and
mov
fwait
jmp
fdivrs
outsl
cmp
jno
ds
cmpsl
cmpsb
rolb
iret
out
lea
cmpsl
cmc
or
jl
mov
mov
add
dec
negl
outsl
mov
rorb
fcomps
pop
push
mov
test
fsubrs
outsb
idivl
aaa
mov
xchg
adc
cmp
inc
or
aad
add
pop
dec
and
movsb
hlt
dec
aaa
add
sti
mov
shlb
xchg
rorb
inc
mov
bnd
push
lds
add
mov
xchg
jns
or
loopne
fdivp
movb
inc
js
add
pusha
or
dec
repz
add
dec
sbb
mov
mov
add
data16
mov
idiv
frstor
je
push
or
repz
je
add
iret
test
adc
sti
push
pop
jo
and
mov
sbb
inc
jbe
pop
jnp
dec
in
pop
adc
pop
addl
jne
jb
adc
and
fs
mov
fcom
out
aas
adc
aaa
mov
xor
movsb
pop
cmp
fstl
or
in
test
je
push
sub
sbbl
mov
jo
push
push
push
xlat
leave
mov
dec
mov
rolb
jmp
push
das
cmpsb
js
inc
or
nop
cmp
pop
sbb
adc
scas
mov
lock
lret
mov
daa
push
xor
mov
adc
add
pop
addr16
mov
jae
xor
or
jge
mov
mov
mov
or
xchg
sub
mov
cmpb
adcl
push
and
pop
lock
push
rcrb
and
int3
add
into
xchg
test
hlt
mov
sub
icebp
insb
ficoml
adc
cmc
and
imul
cmp
jo
rcrl
std
icebp
js
xor
movsb
pop
lret
push
in
push
shlb
pop
add
into
cmpsl
xchg
enter
test
arpl
mov
cs
lock
psrad
mov
shlb
add
pushf
push
sub
and
dec
mov
fdiv
pop
stos
cmc
ret
inc
out
push
loope
aaa
adc
orb
xchg
inc
aad
xchg
sbb
jmp
sahf
clc
or
mov
or
test
add
ret
in
xchg
or
loope
xchg
cld
std
call
ficompl
js
addr16
sti
or
cmp
xchg
clc
ret
ss
mov
notb
sbbb
fsubl
sub
cwtl
enter
and
out
or
roll
xor
movsb
pop
sti
adc
adc
aad
or
stc
pop
fnstcw
shll
loopne
inc
test
inc
xlat
fists
jmp
mov
hlt
cli
das
sub
es
sub
xor
xchg
rcr
sbb
push
lret
xor
ja
enter
add
adcb
jecxz
repnz
jo
bound
cmpsb
test
in
addr16
push
cwtl
lea
inc
or
lds
push
or
fcmovnbe
add
xchg
inc
dec
pop
add
rol
cmpsb
out
test
and
mov
lcall
add
dec
sub
clc
push
lea
adc
xor
inc
lock
push
outsl
dec
cmp
add
jns
rcrb
or
push
aaa
add
into
shrb
sbb
mov
add
test
daa
cmc
fcoms
mov
add
cmpsl
xor
pop
out
pop
rolb
jmp
test
mov
loop
daa
add
push
movsb
fwait
mov
sbb
jno
add
sahf
nop
inc
aad
pop
jns
add
ret
sub
and
dec
inc
dec
add
scas
int3
xchg
dec
xor
mov
push
mov
int
popf
mov
push
cli
lods
loop
mov
mov
popa
add
pop
inc
xchg
test
rolb
xor
xchg
cltd
in
stos
jge
pop
out
push
add
fcoms
je
cmp
mov
jmp
cld
or
loop
enter
or
cld
mov
mov
cmp
dec
mov
cmpsb
fs
mov
adc
jbe
cmp
add
leave
test
push
cs
add
mov
inc
aam
jp
pop
inc
push
shlb
mov
lahf
or
lock
int3
cmp
aaa
mov
or
stc
pop
xchg
add
add
cwtl
cmp
add
repz
fs
cmp
inc
sub
pop
pop
loopne
std
into
sbb
xchg
fisubl
sub
dec
sarl
jge
xchg
add
scas
dec
add
mov
fiaddl
ret
inc
enter
inc
dec
dec
inc
sub
jbe
mov
dec
movsl
jmp
xchg
push
sub
ret
push
loope
add
fnsave
cmp
insl
mov
add
xchg
bound
pop
and
outsb
xor
mov
add
mov
sbb
xchg
pop
or
dec
add
div
and
das
outsb
add
mov
mov
push
and
loope
mov
inc
aam
clc
rcrl
out
and
pop
in
stos
cmp
arpl
mov
jno
fs
inc
lret
loopne
cli
jg
xor
lahf
or
mov
add
mov
inc
add
sbbl
xchg
js
xor
or
icebp
dec
cwtl
cmp
js
dec
inc
shlb
mov
lock
mov
xchg
lcall
dec
movsl
add
jb
mov
mov
rorb
xlat
repnz
int3
lret
sti
rclb
stos
loope
aaa
insb
pop
popf
sti
add
out
push
adc
push
sub
sub
ficompl
lods
xor
rorb
jecxz
mov
shlb
pop
nop
pop
sbb
fistl
push
fadd
rolb
aaa
jae
xchg
lock
pushf
aad
nop
and
in
repnz
hlt
inc
sbb
add
mov
jo
mov
icebp
sarb
mov
add
inc
jecxz
and
lods
daa
lods
push
push
rcl
add
push
ret
jecxz
les
sbb
adc
pop
cmc
cmp
and
adc
push
clc
das
xchg
add
lret
mov
inc
adc
xchg
outsb
loop,pn
movsb
add
mov
sbb
add
gs
mov
dec
sti
clc
sub
fcmove
je
rorb
stos
mov
mov
lret
cmpb
inc
cld
mov
and
pop
inc
outsb
add
sub
lock
mov
add
shlb
dec
stc
daa
movsb
nop
pop
arpl
sbb
mov
mov
out
pop
lret
iret
out
xchg
mov
mov
and
add
pop
push
xor
adc
lods
int3
xchg
shlb
popf
dec
mov
xchg
sbb
pop
cltd
dec
or
fnstenv
loop
lea
out
roll
movsb
out
xor
mov
and
sbb
shll
ja
out
push
sbb
movsl
and
iret
push
jecxz
jl
pop
test
out
and
and
bound
mov
pop
mov
xor
xchg
adc
inc
add
in
lea
lock
out
insb
sub
pop
cmpsl
jns
pusha
lahf
fists
test
inc
rclb
mov
nop
or
jae
test
push
mov
push
insb
add
jo
cmp
aas
jmp
inc
mov
push
jl
stos
dec
sub
jl
push
sbb
add
loop
scas
mov
push
jne
jo
or
cmp
mov
and
add
nop
imul
mov
jne
add
jp
adc
mov
add
test
fsqrt
insb
add
dec
adcb
mov
sbbb
jns
lods
popf
add
rclb
xor
subb
mov
outsl
shl
movsb
loop
add
lcall
pop
push
inc
arpl
mov
sbb
jmp
stos
popa
and
add
sahf
mov
sbb
int3
cltd
les
ret
mov
mov
bound
mov
push
mov
popf
adc
repnz
in
mov
rol
inc
stos
gs
cmpsb
daa
sbb
fsubs
sbb
aad
rcll
in
ds
jg
push
lods
pop
cwtl
fcoms
sbb
mov
jnp
repnz
xorb
outsb
adc
add
popa
std
adc
into
mov
testl
arpl
sub
mov
dec
mov
lret
lock
lock
inc
les
xor
inc
xor
fsubrp
les
sub
movsl
jno
idivb
push
jo
jb
mov
pushf
add
jmp
bound
mov
sub
andb
nop
adc
and
in
ret
pop
add
es
movsl
sbb
pushf
cmp
jo
adc
cmp
out
es
add
adc
mov
inc
es
mov
mov
cwtl
popf
inc
push
cwtl
pop
lret
imul
flds
inc
sub
sbb
insl
jns
sub
or
lds
ret
mov
push
mov
dec
hlt
cld
cmp
sub
inc
add
jb
add
into
fwait
rolb
roll
and
popf
add
mov
test
cmpsb
add
cmp
addr16
in
das
dec
add
ds
popa
inc
inc
add
jnp
jns
add
lods
lret
and
lcall
cwtl
and
mov
repz
loope
stc
jbe
sbb
dec
xchg
enter
hlt
cmp
adcb
fidivl
stos
add
or
jno
sub
mov
hlt
sub
jecxz
scas
and
inc
pop
sbb
mov
xchg
stc
cmpsb
in
clc
push
sub
push
and
ret
push
mov
movsb
cmp
pop
daa
loop
add
inc
fwait
adc
ret
int3
pop
add
cmp
lcall
loopne
sbb
jmp
xchg
hlt
js
fmuls
es
mov
mov
and
jmp
je
div
mov
add
mov
mov
cld
sbb
jne
rcll
xor
in
push
lods
mov
pushf
insb
mov
push
lock
or
xchg
loopne
add
mov
movsb
lea
dec
stc
mov
add
mov
repz
fs
sbb
ja
lret
mov
stos
and
add
inc
pop
cltd
out
xor
xor
aaa
mov
cmp
inc
stos
fs
test
sub
inc
jno
int3
subl
divb
mov
add
fwait
jg
jmp
jbe
jns
pop
arpl
push
rcrl
fimull
jae
push
sbb
jge
aam
inc
ret
outsb
mov
test
pop
dec
sub
ljmp
adc
outsl
pop
adcl
mov
cmp
call
enter
push
add
inc
rcr
mov
jnp
cmp
mov
xorb
sub
lret
bound
lock
rsm
pop
je
bound
mov
cs
hlt
add
ds
jmp
enter
call
scas
add
test
push
inc
add
jns
inc
loop
cmp
add
popa
das
lret
fs
call
adc
enter
out
push
or
scas
dec
adc
sub
sbb
sbb
adc
push
add
cmp
pop
stos
mov
ficoms
mov
and
add
lock
lods
sub
cmp
lods
test
sub
pop
pop
sarb
adc
dec
in
insb
pushf
fadd
xlat
leave
add
mov
adc
xorl
sbb
jmp
xor
push
shll
arpl
xchg
jle
jmp
ret
andb
lahf
adcb
add
insl
nop
shlb
sti
jno
movsl
pop
dec
fdivrs
es
les
inc
mov
add
add
mov
imul
sub
xor
and
inc
std
lock
ret
sbb
imull
mov
xchg
clc
pop
dec
ds
popa
test
fsubs
add
fcmovnbe
divl
outsb
sahf
adc
bnd
shlb
mov
and
lea
mov
adc
inc
sub
les
mul
clc
sub
push
negl
pop
xchg
inc
jo
sbb
in
out
and
inc
cmp
lea
loopne
cltd
ss
neg
dec
mov
or
sarl
or
test
cmp
popf
add
xor
rclb
jbe
push
inc
insl
mov
les
lahf
add
fidivrs
jmp
test
adc
sbbl
pop
sub
xor
shlb
pand
adc
or
addl
pop
sarb
cmp
ds
xor
or
adc
jmp
mov
inc
jmp
sbb
pop
nop
mov
or
pop
jo
enter
push
test
mov
adc
mov
xor
push
shlb
imul
add
lds
ror
mov
test
shrb
mov
ss
inc
and
test
das
cmc
mov
cmp
push
lods
test
xchg
mov
insb
movsb
mov
iret
mov
pusha
cmpsb
cs
and
into
ret
push
roll
pushf
dec
rolb
jge
jae
lea
mov
shlb
pushf
push
ficomps
call
dec
adc
aas
push
xchg
inc
xchg
push
inc
jmp
or
enter
lcall
stc
xor
sbb
inc
insb
pop
mov
cld
test
add
vpsubsw
fs
pop
ds
mov
add
cld
popw
push
adc
sub
cmp
sbb
mov
add
push
ljmp
rorl
xor
jo
sar
pop
mov
loopne
test
sub
jno
cmc
into
cmpsb
mov
pop
adcb
xlat
js
push
push
xchg
std
pop
les
push
ret
cmp
xchg
nop
imul
movsb
ficomps
sub
enter
push
call
fwait
xchg
add
subl
push
sarl
fwait
bound
cmp
outsl
popa
mov
pop
mov
aam
or
jbe
addb
add
push
fisubrs
add
rsm
inc
or
into
addr16
pop
jmp
in
leave
pop
add
lcall
jae
add
outsb
inc
mov
adc
mov
sub
scas
add
add
push
int
push
xchg
adc
push
and
cmp
orl
ss
mov
outsl
inc
lock
iret
std
add
jmp
pusha
fstpt
push
sti
nop
pop
out
pop
adc
ret
or
std
pop
imul
fisttpl
out
cmp
cwtl
sbb
sahf
push
xor
leave
out
ficoml
add
cmp
nop
dec
add
ja
repz
xchg
jge
lods
pop
add
scas
dec
sbb
add
push
mov
or
mov
scas
add
pop
shlb
pop
testl
mov
les
add
pop
ja
mov
push
sub
mov
adc
popa
pop
aas
negb
sbbb
pop
mov
loope
sbb
xor
mov
insb
add
addl
xor
mov
loop
ss
xor
int
adc
enter
hlt
sub
loop
pop
enter
dec
push
xchg
pop
adc
fmul
add
mov
mov
fiadds
add
lret
xchg
jle
dec
lea
cmp
sbb
in
ja
inc
cmpsb
out
pop
mov
xor
cmp
dec
add
add
aas
ror
mov
cld
rolb
fmuls
fldenv
roll
stc
mov
out
dec
mov
add
popf
add
test
and
repnz
test
add
cmc
iret
stc
shlb
scas
xchg
add
and
into
cmovae
inc
adc
jecxz
fbld
and
pop
orl
xor
outsl
nop
cmp
stos
out
mov
pop
int3
add
rclb
cmp
lods
or
fs
mov
je
add
mov
sbbb
testl
inc
sub
and
cmp
dec
cmpb
dec
add
test
pusha
push
imul
addr16
mov
add
mov
xchg
int
sti
sub
dec
test
cmp
sbb
fwait
mov
or
mov
add
jecxz
xor
cmpsl
push
imul
loop
aam
inc
add
mov
pushf
mov
sar
test
push
sub
out
add
subb
xchg
add
int3
push
mov
aas
add
xor
add
ds
out
add
fdivs
lahf
nop
pusha
add
fwait
sbb
es
fcmovnb
dec
lods
sub
adcl
ds
jae
ret
fsts
mov
repz
add
sub
fwait
inc
xchg
push
add
pop
cmpsl
lods
sbb
cmp
into
idivl
fs
pop
fisubs
pop
sbbl
push
push
pop
push
cmp
add
loope
aam
test
add
call
sbb
pop
movaps
dec
pusha
sbbb
or
shlb
je
sbb
into
sub
call
xlat
mov
fs
clc
mov
cmp
xor
mov
enter
sbb
xlat
frstor
dec
adc
jo
sub
cmp
jp
enter
mov
loope
leave
sub
sarb
push
xor
repnz
add
sub
aad
and
xor
push
rorb
test
icebp
mov
jl
add
push
cmp
les
push
mov
push
subb
jmp
loopne
cmp
mov
and
pop
sub
mov
pop
cmp
xchg
pop
jb
mov
test
inc
or
lods
jns
mov
enter
dec
cld
sub
shrl
push
xor
je
cmp
add
loope
xchg
add
mov
push
in
add
in
aaa
sbb
mov
dec
xor
add
pop
mov
rcrb
push
add
sbb
fiaddl
lods
stos
mov
mov
add
jb
popa
jnp
cmp
jmp
out
mov
int3
and
shl
and
clc
pop
fiaddl
aaa
cmc
inc
cmpl
xchg
jp
nop
mov
data16
jne
mov
jecxz
mov
and
aas
test
pop
rcrb
loopne
push
das
loop
adc
jmp
and
les
adc
lock
add
ret
nop
lcall
sarb
gs
call
cmpsb
mov
test
ss
jg
push
sub
test
pop
sar
jbe
filds
and
jle
xor
test
push
sub
mov
out
push
call
test
stos
xor
xchg
inc
push
mov
push
pop
js
push
adc
xor
add
cmp
push
jnp
add
mov
sub
pop
push
xor
push
and
xchg
or
xchg
lock
add
aaa
and
inc
dec
pop
andb
std
jne
push
add
loope
adc
dec
and
movsb
clc
add
in
mov
cmp
and
pop
cmp
fsubrs
es
add
sbb
inc
rcrl
jg
in
jne
push
pop
call
fs
in
shrb
fwait
int3
add
add
and
sbb
das
jo
xchg
insb
mov
daa
xor
out
mov
adc
arpl
xchg
mov
sbb
leave
fisttpl
add
jnp
movsl
pop
scas
pusha
ljmp
pop
push
mov
dec
and
lods
lea
lret
das
push
add
mov
sbb
int
arpl
dec
add
jae
sbbl
fs
iret
mov
in
enter
xlat
fbld
rolb
dec
or
xchg
and
mov
scas
push
out
icebp
filds
cmp
push
pop
mov
cmp
insl
pop
std
pop
jg
addb
movsl
push
sbb
into
fbld
add
pop
int
xchg
dec
pop
mov
inc
lret
in
adc
adc
sbb
repz
inc
or
jo
int
pop
test
xchg
xor
imul
nop
fwait
push
int3
xchg
pop
add
lret
add
ret
mov
mov
xor
add
sbb
inc
hlt
mov
pop
test
cmc
call
inc
mov
and
mov
cld
xor
mov
add
popf
push
rcl
pop
add
aaa
sbb
popa
mov
in
repnz
add
and
xchg
adc
xor
add
pushf
subb
dec
add
ds
imul
hlt
add
lea
xchg
mov
loope
and
dec
sub
mov
popf
mov
sbb
inc
pop
lods
scas
jl
add
pop
outsb
addr16
pop
push
mov
add
jb
xor
xchg
fimuls
aaa
leave
add
push
cmpb
lret
bound
andl
add
fildl
test
mov
inc
and
repnz
xor
inc
inc
mov
or
mov
fwait
xor
add
push
incb
mov
popf
jg
ja
stc
add
or
pop
add
scas
xchg
ror
loopne
add
xor
pop
ss
jg
xor
pop
xor
add
xor
out
xchg
or
xchg
sbb
mov
aam
or
cs
and
inc
jb
xchg
dec
pop
cmp
addb
test
imul
ret
lods
sbb
outsl
pop
daa
cmp
dec
pop
add
push
nop
aam
outsb
mov
out
addr16
movsb
cmp
bound
cmp
andb
jne
or
cmpsb
js
add
add
cmp
push
mov
or
mov
pop
and
inc
icebp
add
inc
mov
cmp
xchg
mov
addr16
roll
nop
clc
xor
push
xchg
add
dec
xchg
jmp
sbb
pop
ret
jmp
loopne
sub
add
outsb
and
cmp
je
hlt
push
add
xor
push
mov
out
mov
roll
inc
pop
jge
adc
xor
mov
mov
xchg
jbe
add
shll
adc
fcom
stos
and
rorb
or
add
aam
lock
jb
in
cmp
pop
psrlq
xor
incb
sbb
adc
add
in
pushf
add
jno
mov
add
xor
insb
add
adc
sbb
out
shrb
mov
cmp
add
mov
jmp
xchg
popa
sbb
cmp
popw
pusha
jecxz
movsb
sbb
push
pop
imul
sbb
xlat
cld
add
and
cmpsl
dec
add
popa
push
aas
adc
adc
sub
push
xchg
add
ja
call
imul
in
jbe
ficomps
sub
mov
ss
clc
pop
gs
inc
mov
fyl2x
xor
andb
not
xor
sub
xor
mov
xchg
fidivl
sub
xchg
adc
mov
mov
lock
bound
arpl
pop
push
aad
push
add
xor
sub
jl
mov
pop
cld
sbb
inc
loop
insb
repnz
pushf
testb
nop
xchg
std
sbb
rcrb
or
xor
add
xchg
sbb
jl
push
lcall
mov
jns
add
pushf
push
xor
sub
add
add
mov
add
inc
pop
and
test
adc
and
pop
test
movsl
dec
jge
test
xchg
pop
add
add
icebp
notb
push
inc
scas
out
mov
xor
iret
add
xor
inc
push
scas
inc
pop
aad
call
sub
add
cmp
roll
adc
scas
lret
pop
out
add
popf
add
fmull
iret
xor
outsb
add
enter
mov
mov
movsb
cmp
imul
call
addb
sub
subb
test
pusha
in
nop
int3
out
add
bound
jle
add
pushl
stc
lock
xchg
ret
xchg
sub
popf
mov
add
and
cmp
addl
push
mov
add
orl
push
add
fs
add
hlt
dec
insb
or
cmpsl
pop
cmp
rcl
jno
xchg
ja
add
imul
mov
arpl
add
and
leave
jecxz
loopne
lahf
add
popf
stc
outsl
add
es
imul
jbe
push
rcrb
xchg
push
xor
cwtl
mov
rep
jg,pt
mov
mov
pop
rcrl
pop
scas
pusha
jnp
xor
flds
popl
repz
adc
sbb
rcl
jg
inc
fdivl
repz
pop
mov
sahf
add
out
aaa
popa
sbbb
jbe
add
add
jp
jnp
cmpsl
xor
std
adc
mov
sbb
data16
out
lea
test
call
lock
std
rcrb
push
mov
mov
push
mov
andb
add
repz
xchg
fldenv
mov
ret
sbb
push
mov
sub
out
xor
and
clc
xchg
iret
pop
jnp
fsubr
dec
jle
jl
jb
cmpsl
fstpl
lods
out
add
or
jbe
add
loopne
sarl
xchg
mov
inc
jge
daa
les
jp
outsb
cmp
add
je
pop
fimuls
sbb
xchg
xor
add
movsb
loopne
rcr
mov
lds
pop
mov
mov
cli
cmpb
dec
bound
cld
mov
add
push
scas
jnp
outsb
jecxz
cld
add
dec
into
out
add
loope
popa
shrl
cmpsb
gs
jns
data16
aaa
dec
jg
push
movsl
rolb
into
adc
xor
popa
mov
jle
fwait
or
xchg
pop
xchg
add
push
in
ret
inc
add
fidivs
dec
mov
movl
cld
jbe
mov
pop
jge
add
add
data16
inc
xchg
test
test
or
lea
jnp
sub
xchg
jp
pop
push
mov
add
push
sahf
xor
outsl
dec
and
cmp
adcl
dec
mov
add
mov
outsl
scas
add
loope
in
movsl
int
pop
push
lea
test
add
jae
sub
add
dec
icebp
mov
ret
das
rclb
in
xchg
push
lldt
leave
cmp
cmp
push
lea
push
xor
out
popa
mov
cmp
and
mov
lret
adc
addr16
das
rclb
sbb
jb
loopne
scas
mov
stos
cwtl
shrb
sbb
sbb
loop
pop
clc
or
rorb
add
cmpb
push
cmp
pop
dec
xchg
in
cwtl
loopne
dec
push
das
add
push
inc
adc
rol
jo
mov
add
add
xor
lar
scas
ja
sbb
adc
xchg
ja
add
jmp
outsb
sbb
sub
jle
cmp
leave
or
test
outsl
adc
sub
sub
jae
add
jmp
rcl
jnp
jle
add
push
in
adc
or
jne
jg
test
add
xchg
push
pop
sbb
rclb
pop
stc
sahf
inc
hlt
or
shlb
add
push
mov
inc
mov
addr16
sub
add
fcmovb
add
jno
mov
jge
sub
push
mov
mov
push
push
xchg
lock
arpl
sbb
add
push
or
cmp
cli
add
mov
dec
inc
mov
sbb
adcb
jb
pop
mov
repz
jle
jns
pushf
pop
outsl
daa
cmp
in
cmp
mov
sar
dec
jnp
add
push
inc
rep
jge
add
repnz
inc
pop
jne
jae
ss
mov
icebp
stos
add
sbb
add
and
rorl
dec
jbe
mov
nop
je
lret
push
push
fildll
pop
rolb
cwtl
or
imul
int3
repnz
add
adc
pop
sub
aam
aaa
cmp
mov
in
es
sub
call
xor
cmc
lock
insb
fisttps
xor
adc
add
and
jne,pt
sbb
mov
sub
sbb
mov
add
cmp
xchg
adc
inc
int
sub
inc
push
add
incl
stc
xor
pop
pusha
dec
call
cmp
mov
js
enter
testl
adc
pop
fbld
cmpsl
inc
enter
add
movsb
add
sub
push
mov
cmp
push
loop
add
stos
movsl
stc
pop
test
mov
arpl
popa
jp
xchg
cs
add
scas
adc
add
negb
mov
lret
and
add
pop
out
das
ret
jle
xor
test
add
cmp
and
jge
and
add
js
daa
lcall
add
jp
nop
repnz
add
dec
mov
mull
lock
ficomps
fdivrl
leave
xor
hlt
pop
add
pop
mov
imul
add
sub
mov
cmp
incb
sarl
outsb
out
lret
rorb
jl
shl
push
or
lods
pop
dec
add
adc
push
mov
out
hlt
pop
gs
popa
add
jp
dec
cld
add
xchg
jl
xor
add
add
push
push
add
mov
jge
cld
mov
add
jg
das
in
add
dec
fs
cmp
enter
inc
or
jns
shrb
addb
adc
mov
pop
sbb
add
mov
lret
or
inc
mov
add
adc
pushw
lret
add
mov
mov
rorl
dec
jb
dec
xor
sbb
push
jbe
int
sbb
adc
orb
icebp
jmp
mov
or
leave
push
fidivl
inc
adc
mov
sub
test
or
xchg
notl
stc
mov
mov
mov
insl
sub
or
stc
into
orb
fimull
sbb
sub
xchg
add
dec
push
add
dec
jbe
fadds
pop
and
cmp
fxch
in
hlt
jae
cmp
mov
mov
in
push
test
add
jno
xchg
rolb
xor
adc
sub
jns
lcall
fldl
xor
out
sahf
add
aaa
dec
mov
mov
adc
and
add
inc
mov
scas
or
jno
add
pop
sub
add
lahf
jp
mov
push
add
mov
mov
es
or
adc
or
add
pop
mov
daa
add
cmp
fcomps
and
sbb
in
push
add
rcll
subl
test
decl
and
inc
mov
sbb
jge
fiaddl
movsl
dec
pop
pop
jle
les
push
sbb
mov
mov
dec
mov
cld
inc
ret
das
xor
lock
or
hlt
int
cmp
and
or
push
leave
test
xchg
ret
cmp
movups
pop
add
rolb
inc
add
xchg
leave
aam
xlat
inc
loopne
add
add
fs
add
xchg
ret
push
out
add
sub
jmp
add
xchg
inc
adc
pop
jmp
add
out
push
js
and
insb
add
mov
add
movsb
pusha
fwait
mov
adc
add
loop
push
loopne
movsl
and
cld
or
push
enter
jo
inc
add
lea
sub
push
adcb
aas
sbb
cmp
sub
and
add
test
gs
pop
push
sbb
mov
cltd
pop
insl
add
daa
icebp
inc
cmp
dec
jp
push
mov
mov
lods
xlat
jle
adc
cmpsb
cltd
sbb
inc
mov
ljmp
or
and
jge
mov
in
dec
or
and
dec
dec
movsl
add
xlat
add
outsb
and
add
mov
jg
jle
add
shlb
packsswb
les
xchg
shlb
adc
and
in
jbe
aad
ljmp
xor
xor
xchg
pop
jg
daa
mov
rorb
sub
jecxz
loopne
sub
stos
or
cwtl
in
sbb
mov
repnz
add
stc
test
mov
add
pop
sub
or
out
out
cmp
add
js
mov
imul
inc
into
popa
popa
addr16
mov
cmp
and
ljmp
bound
outsb
in
add
sub
ljmp
dec
cmp
mov
pop
pop
add
jae
and
pop
rclb
fisttpll
mov
sub
sahf
sbb
mov
cmc
out
mov
add
mov
push
scas
fsub
add
mov
sti
lret
aaa
push
jl
add
add
jle
outsl
mov
cmpsl
pop
ljmp
cwtl
adc
push
popf
stos
add
mov
hlt
in
addb
add
push
pop
jno
cmpl
loop
cld
scas
add
dec
mov
popf
cmc
aas
stc
add
mov
in
fstps
hlt
inc
add
jmp
xchg
out
icebp
push
xor
pop
push
mov
rolb
jp
push
dec
mov
pusha
lock
push
loopne
jne
divb
stc
out
add
in
in
rcr
lret
aam
dec
push
jns
dec
ja
subb
adc
jg
jle
clc
xchg
js
in
mov
xchg
add
add
mov
imul
xor
sahf
scas
enter
add
mov
cmp
mov
xchg
sbb
not
ja
push
xchg
sbb
dec
add
xchg
enter
movd
iret
adc
stc
and
xor
lcall
xchg
add
mov
aaa
mov
ret
fwait
xchg
mov
xlat
pusha
mov
shlb
adc
in
repnz
sti
adc
push
xchg
pop
call
int3
adc
add
pushf
push
aaa
xchg
test
or
popf
sub
cmc
pop
dec
xor
loope
add
dec
jle
popa
xlat
sbb
mov
das
xor
push
add
adc
xchg
adc
pusha
shl
pop
sbbb
sbb
or
je
sbb
cmpsl
jnp
inc
adc
gs
pusha
pop
mov
sbb
mov
add
es
jo
test
dec
add
lods
push
loope
xor
pop
fs
mov
xchg
mov
sti
cmpl
add
mov
and
std
ret
fiaddl
mov
pushf
xchg
mov
outsl
add
jns
mov
or
add
sbb
sub
loopne
fidivrl
sbb
or
add
mov
mov
fsubp
pop
dec
rolb
sbb
icebp
mov
mov
add
xor
jb
lock
push
outsl
mov
in
cmp
je
and
pop
jle
dec
add
lods
push
mov
dec
insl
leave
dec
mov
jecxz
jne
ljmp
cld
leave
push
or
add
insl
out
and
ljmp
pop
cmp
das
mov
mov
fwait
and
cld
out
cwtl
lahf
inc
add
adc
xchg
cmc
pusha
test
call
dec
dec
adc
lret
pop
push
add
ljmp
or
test
test
scas
fbld
sub
fs
inc
rolb
sbb
push
das
add
imul
push
pop
lods
repnz
mov
jo
xor
mov
mov
loope
fstps
add
cwtl
test
rorl
aad
sbbl
les
add
imul
add
and
insl
test
mov
jo
mov
mov
mov
push
push
stos
add
mov
xchg
inc
fdivs
cmpsl
add
pop
sti
push
mov
cwtl
mov
sbb
mov
fucom
xchg
adc
jge
inc
mov
push
cmpsb
popf
ss
add
cmpsl
push
mov
cwtl
xor
pop
dec
jl
ret
and
js
test
fisubs
rorl
cmp
push
nop
rol
sub
enter
cmp
mov
bound
add
int3
jnp
scas
xchg
pop
add
insb
xor
out
aam
sbb
fildll
std
cwtl
add
dec
xchg
add
adc
inc
lods
adc
xchg
pop
imul
leave
inc
mov
xlat
add
sbb
lock
and
push
roll
pop
dec
hlt
xchg
mov
pop
popa
fldcw
sbb
pop
mov
out
std
add
mov
or
add
testb
arpl
push
push
fstpt
add
xor
jmp
jns
add
mov
pop
mov
inc
add
cltd
movsb
sbb
jbe
and
sbb
mov
xor
mov
xlat
rcl
nop
ret
sbb
sub
jge
roll
hlt
jno
sbb
std
jne
mov
jnp
add
mov
add
pop
lock
scas
pop
add
test
mov
iret
dec
add
xchg
or
insb
mov
pusha
test
and
pop
jne
pop
cltd
fwait
subb
mov
fcoml
ret
cmpb
adc
cltd
or
mov
test
mov
leave
add
jbe
nop
sub
add
add
mov
gs
pop
outsl
inc
inc
inc
or
stos
or
add
xchg
add
fcomps
lcall
lea
adc
mov
outsb
or
into
dec
jno
mov
repz
push
cli
cmp
shrb
push
push
add
lcall
cmpb
pop
sbb
insb
sub
data16
push
cmp
jge
mov
push
add
not
lea
mov
add
lret
add
enter
and
scas
cld
jg
xchg
mov
sbb
sbbb
add
xrelease
bnd
add
or
mov
push
in
les
aad
add
into
or
jo
push
lret
add
dec
dec
jb
test
pop
cmp
push
out
andb
cmpsb
xor
fcmovne
lock
jg
out
adc
popl
jo
inc
jp
dec
cmp
cld
mov
pop
jbe
pop
mov
xchg
xchg
js
jnp
push
repnz
xcrypt-cfb
dec
sarl
mov
test
pop
imul
sub
add
jp
imul
or
roll
hlt
call
xor
js
out
cltd
or
in
mov
and
je
pushf
jl
cli
cld
push
iret
xchg
or
mov
je
out
or
insl
sbb
lcall
jns
adc
mov
orl
cmp
pop
push
movsb
fwait
push
popa
enter
bound
popf
jo
add
subl
xchg
roll
int3
ret
jnp
jnp
push
jae
popa
lods
out
lret
mov
xchg
add
test
cli
ret
xor
sahf
adc
cmp
add
std
add
mov
mov
add
jbe
mov
sbb
xchg
inc
lods
test
mov
add
lds
mov
out
das
rcrb
rcll
xor
cwtl
lock
cmp
jns
add
jge
in
and
ror
fdivrl
add
sbb
dec
adc
bound
add
sti
leave
movsl
fmuls
push
push
outsl
adc
arpl
inc
int3
sub
repnz
fs
xchg
pop
pusha
bound
cmp
sub
sub
xchg
lock
sbb
test
arpl
pop
hlt
add
data16
or
scas
lahf
call
sub
mov
jg
sbb
push
test
cmp
jns
adc
dec
or
add
imul
sbb
jmp
dec
xor
outsb
aaa
jo
arpl
lea
inc
inc
xor
xchg
data16
push
dec
aam
jb
or
and
les
xor
notb
mov
add
dec
dec
mov
out
pusha
subb
or
add
dec
mov
dec
movsl
cmp
sub
nop
xor
and
aas
push
iret
movb
fbld
lret
or
and
enter
pop
mov
aad
daa
or
cmpsl
add
dec
xor
jo
movsl
add
in
in
or
or
ss
cmp
add
mov
jae
pusha
or
jmp
rep
add
xor
sub
jmp
movsl
fisttpl
test
aaa
lods
pusha
xchg
lret
or
xor
mov
xlat
adc
nop
pop
pusha
mov
fmuls
pop
lret
mov
and
cli
mov
dec
lea
cwtl
sbb
or
push
fildll
cltd
xchg
gs
push
and
add
test
sarl
mov
sbb
push
xor
movsl
add
lahf
mov
inc
dec
nop
pop
push
imul
lret
ljmp
js
mov
pop
in
cwtl
jmp
mov
fucom
pop
pusha
lea
pop
cmpsl
pop
sub
shlb
dec
add
rcr
mov
ds
add
jmp
stos
shlb
fwait
sbb
mov
scas
pop
mov
sti
mov
jae
orps
mov
pop
cmp
push
xor
sahf
or
cmp
xor
cmp
or
es
mov
testl
test
jno
shlb
nop
orb
cmp
dec
and
mov
shlb
dec
leave
or
stc
std
jne
rclb
mov
pop
pop
lods
cmp
add
pusha
or
es
pop
add
je
or
leave
daa
push
fisttps
faddl
rorb
loope
repnz
aad
mov
and
enter
jb
clc
dec
shlb
add
xchg
loop
mov
dec
call
adc
cmpl
out
add
divb
add
sbb
inc
jns
nop
pushf
cmc
cli
lods
call
imul
lock
cmpsb
divl
or
or
push
sbb
inc
sub
lcall
add
in
mov
aad
add
and
pop
call
xor
pop
and
ret
call
hlt
sub
mov
dec
pop
jne
add
inc
orb
cmp
cs
popa
fwait
add
sbb
pusha
ror
sbb
xor
lock
mov
add
into
jno
mov
xor
pavgw
movsb
enter
call
add
nop
pop
sub
scas
or
aad
jp
sub
lahf
mov
out
and
loope
in
sti
js
add
pop
out
push
movsb
je
cwtl
loop
enter
inc
leave
dec
bound
fistl
daa
flds
jge
dec
aad
pop
fs
loopne
outsl
movsl
insl
pop
or
adc
push
mulb
and
data16
notb
in
xorb
icebp
sub
adc
sbb
add
lock
subb
shl
mov
mov
sbb
fiadds
xchg
jl
push
out
cmpl
and
dec
jg
adc
int
nopl
mov
pop
addl
xchg
mov
jno
cmp
push
mov
mov
jecxz
add
lods
or
sbb
adcl
dec
sbb
cmp
sbb
add
pop
insb
es
mov
into
push
aam
sub
xchg
shrl
pop
imul
jl
and
stos
test
mov
dec
addb
jecxz
std
pop
mov
cmpsl
add
sub
add
jp
inc
shlb
faddl
add
sub
sbb
dec
icebp
imul
inc
mov
inc
cmc
lret
lahf
add
pop
std
clc
add
loop
dec
pop
cs
sub
inc
mov
imulb
les
int3
pop
aas
or
bound
mov
and
adc
call
mov
aas
push
xchg
push
test
sub
adc
decl
push
sub
test
popa
ss
jns
pop
jnp
in
mov
inc
add
fnstcw
dec
add
je
inc
mov
insl
rclb
in
mov
es
cli
sub
adc
cmp
lods
shlb
xchg
sub
lret
test
std
add
clc
jg
adc
aas
adc
outsb
std
dec
jge
cmpsl
test
add
cmp
push
pop
clc
adc
add
adc
inc
pushf
js
add
sar
movsl
pop
mov
lahf
les
jmp
push
inc
sbb
and
adc
cli
add
cld
or
sbb
cmp
xchg
test
mov
ljmp
test
stos
add
lret
outsb
sbb
in
lods
andb
cld
sbb
push
xchg
inc
test
and
jecxz
insb
es
sti
sub
into
and
sub
out
filds
cmp
movsb
pcmpgtw
loopne
inc
and
daa
add
pop
dec
xchg
cmp
ja
aam
mov
sbbb
push
data16
loope
pop
jl
dec
ljmp
dec
add
and
xor
faddl
xchg
add
pop
add
jns
add
icebp
fldenv
dec
daa
mov
push
sbb
clc
pop
fidivrs
add
dec
call
das
add
cmpsl
loopne
fsts
xchg
push
jle
call
ds
add
scas
adc
xor
fsubrl
inc
dec
jmp
add
sbb
jge
or
mov
xlat
loope
mov
inc
cmpb
roll
clc
add
decb
nop
ret
pop
mov
fisttpll
mov
scas
cld
xor
jl
jmp
adc
cmp
repnz
and
dec
lods
fisttpll
add
fdiv
into
push
not
push
cmpsl
xchg
push
popf
inc
rcll
dec
sub
jmp
mov
mov
jmp
add
das
pop
dec
sub
or
add
add
lret
loope
sbb
adc
les
out
cwtl
daa
dec
cmpsb
pop
in
sbbl
pop
lock
ljmp
xor
xor
ds
ja
mov
shr
jl
inc
out
add
mov
dec
push
xchg
shll
orl
lret
and
rclb
add
jbe
mov
jle
jg
mov
clc
xchg
nop
rcll
add
addr16
mov
push
jecxz
add
aad
je
add
add
jo
out
in
pop
gs
push
test
add
mov
xchg
pop
ja
fnstenv
add
pop
and
add
adc
or
pop
push
js
mov
xchg
sub
cld
sub
in
out
jnp
add
ffreep
gs
jle
test
inc
push
push
aam
mov
pop
jae
imul
jnp
enter
je
outsb
and
out
orb
or
aam
xchg
mov
mov
adcb
push
push
or
insl
rol
add
sub
std
pushf
add
addr16
in
cmpsb
adc
imul
xchg
or
cmp
flds
ror
and
xchg
sbb
sub
scas
cmpsl
mov
xor
pop
aam
loop
ljmp
in
add
and
mov
push
hlt
stos
add
std
pop
cmp
add
andl
add
xchg
addr16
sub
xor
fwait
aas
or
push
xor
mov
cwtl
sub
push
daa
icebp
lock
push
jae
dec
mov
sbb
mov
inc
sbbb
adc
sahf
cmp
cwtl
out
add
sbb
mov
push
ja
stc
nop
inc
pop
sbb
or
mov
repnz
push
enter
mov
or
repz
pusha
add
mov
test
add
ss
xchg
jo
dec
pop
add
subl
shll
movsb
add
je
xchg
add
aad
ret
clc
vmulpd
dec
iret
sub
stos
push
call
inc
jns
repz
ja
adc
add
xchg
push
push
push
mov
call
data16
sub
addb
lds
xor
ror
pop
mov
shrb
mov
out
add
lea
or
inc
std
inc
lahf
add
mov
xchg
hlt
rolb
jno
sbb
dec
and
or
test
adcb
dec
add
mov
and
jns
push
lods
push
and
sar
mov
mov
jae
cwtl
rorb
sub
fbstp
outsl
add
mov
jo
mov
shrl
imul
xchg
repz
int3
add
inc
xchg
add
loopne
pop
out
push
pop
adc
sbb
dec
and
jno
in
mov
inc
icebp
leave
add
jb
add
outsl
loope
sub
test
jae
xchg
mov
pop
inc
cmp
lods
test
push
out
arpl
dec
loope
fildl
push
les
mov
push
jb
add
arpl
test
mov
push
into
int
and
jp
add
aas
xchg
cmp
add
movsb
out
sbb
stos
add
push
pop
jo
sub
movsb
insb
add
add
mov
loop
cld
test
xchg
adc
paddq
jnp
loopne
or
sahf
add
xchg
ret
cmp
es
add
add
mov
fidivl
add
repnz
add
or
push
push
add
push
xchg
imul
test
add
jp
jg
and
sbb
loop
dec
test
add
pop
xorb
subl
push
or
xor
dec
adc
or
rorl
out
inc
jl
add
dec
shl
xchg
push
sbb
rorl
and
xchg
add
cmp
cli
aas
icebp
pushf
fsubrs
add
inc
fistps
call
int
add
lods
pop
scas
imul
jo,pt
add
add
jl
inc
cmp
push
and
or
repz
jl
stos
adc
add
pop
xchg
sub
movsb
bound
outsb
mov
xchg
shrb
rclb
jno
test
test
dec
mov
and
fcomps
add
inc
fistpll
sub
stos
jns
pop
dec
adcl
popa
add
xchg
ljmp
sbb
enter
scas
add
fcomp
fcomi
fsubrl
add
and
mov
sub
add
loop
out
outsl
adcb
in
mov
mov
add
or
cmp
scas
pop
push
add
xchg
movsl
ja
push
pushf
addr16
or
leave
add
inc
xor
cmp
add
pop
out
pusha
mov
adc
fbld
inc
loopne
push
xchg
add
leave
cmc
inc
not
xchg
dec
pop
es
mov
dec
push
ljmp
sub
fwait
hlt
aad
push
pop
cmc
add
add
xchg
jle
hlt
loop
cmpsl
jl
jg,pn
pop
jo
lods
ret
ljmp
inc
fcompl
push
mov
aam
and
sti
pop
mov
add
lods
xchg
call
push
cmpsl
adc
cld
mov
jno
ja
mov
push
int
and
xor
inc
stc
push
add
xor
add
das
dec
and
rolb
fnstenv
add
aam
push
or
loope
adc
add
pop
and
jmp
addr16
dec
in
xor
cs
xor
dec
out
sub
mov
fs
add
subb
in
mov
sbb
jl
pop
incl
hlt
xorl
sub
jl
inc
arpl
les
xchg
push
adc
stos
popf
outsb
and
push
int
xchg
rcrb
shl
or
ja
dec
pusha
mov
fsubl
scas
sbb
nop
add
stos
mov
or
test
test
jbe
jnp
data16
dec
imull
xor
dec
adc
jns
add
or
jge
pop
sbb
mov
repz
scas
pop
sbb
outsl
insl
in
dec
cs
or
inc
popa
inc
hlt
loopne
mov
lret
cltd
aam
add
stos
jp
jl
lock
add
hlt
into
mov
xor
add
xchg
loop
jg
add
xor
mov
jb
mov
inc
das
xor
dec
add
mov
push
jmp
mov
call
and
pusha
test
add
cwtd
xor
cmp
mov
cmp
mov
fadds
jge
add
scas
insl
cmpsl
mov
shll
mov
leave
out
add
inc
jae
add
push
psubsb
mov
or
add
inc
shrl
or
call
fnstcw
imul
ficomps
pusha
movsl
push
out
fisttpll
nop
into
sub
cmp
loopne
jp
out
pop
lret
dec
jno
or
mov
jo
add
sbb
mov
in
or
push
pop
inc
xlat
add
push
aas
inc
ror
add
enter
mov
dec
insl
in
std
add
push
jbe
vmovlpd
test
add
sub
loop
dec
daa
sarb
out
xchg
pop
xor
pop
pop
fdivs
adc
or
lret
or
pop
fdivl
xchg
xchg
mov
js
push
jns
push
sub
and
add
xchg
xlat
aam
jge
fsubs
pop
add
mov
inc
shr
aam
cmp
xchg
pop
cmp
lret
sub
out
push
insb
add
xchg
and
add
cmp
js
push
jne
lahf
addr16
inc
rcll
js
jo
ror
ja
arpl
decb
pop
xlat
xor
out
into
adc
sub
fwait
test
in
pop
xchg
and
push
sbb
mov
loope
sbb
xchg
ficoms
xor
fdiv
push
loope
in
aad
mov
xchg
cmp
jmp
shr
pop
pusha
popf
and
xchg
sbb
int3
subb
stos
dec
inc
rcrl
outsl
adc
cmp
pop
in
cwtl
cmp
adc
leave
cmpsl
mov
int3
mov
dec
loopne
and
addb
mov
push
cwtl
mov
adc
mov
add
add
rolb
xchg
sub
mov
rcr
or
add
xchg
jg
shlb
cmpl
and
mov
add
add
or
jb
sbb
xchg
dec
adc
rorl
pop
pop
dec
add
inc
mov
pop
movsl
fildl
std
loop
sbb
aad
pop
add
pop
mov
js
and
mov
xor
sbb
sub
fs
add
data16
adc
add
movsb
push
pop
xor
jl
adc
sub
sub
bound
cs
ljmp
ficoms
mov
xchg
cmp
das
gs
mov
dec
dec
stc
pop
call
pop
mov
cld
fstpl
out
add
in
cwtl
sbb
add
adc
out
or
jno
sahf
jbe
add
push
sub
or
sarl
int
mov
push
xor
dec
hlt
das
sub
add
nop
test
fdivs
sub
call
lret
je
mov
or
adc
js
orb
fsubr
inc
test
daa
cmp
and
loop
xchg
xor
ret
test
cmp
add
stc
add
jae
mov
add
fwait
shlb
or
mov
mov
call
cmp
je
pusha
les
add
jecxz
sbb
imul
nop
or
cmp
add
push
dec
faddl
in
pop
pop
push
mov
dec
pop
add
add
mov
add
pop
jl
pop
shll
lods
movl
pop
xchg
mov
aas
rcrl
lahf
sub
add
add
daa
test
pop
movsl
jle
and
cmp
pop
xchg
dec
loop
jns
add
lret
add
inc
jno
cs
jp
sub
js
dec
lds
adc
mov
xlat
in
test
xchg
pop
mov
out
push
inc
cmpl
jb
mov
adcb
pop
sarb
aam
xchg
jae
add
ds
js
add
mov
rolb
or
std
lock
adc
add
popa
add
shlb
aam
movsb
inc
fsubl
add
adc
add
imul
loope
cld
push
stc
jl
add
outsl
out
les
and
les
into
xchg
jb
ljmp
and
xchg
loopne
xchg
sub
add
aam
push
cmp
push
add
sub
jo
sbb
loopne
aaa
rorl
iret
jecxz
lea
cmpsb
rclb
add
jnp
loope
sub
adc
push
or
push
jns
xor
addr16
cmp
sbb
ljmp
movsb
mov
adcl
xchg
mov
out
and
mov
addl
out
xchg
lret
dec
add
add
mov
fwait
mov
add
cmp
mov
xchg
push
add
mov
je
pop
aas
outsb
add
adc
in
fs
neg
aas
lods
dec
sbb
jns
or
inc
aad
mov
and
mov
aaa
add
arpl
push
mov
je
int
scas
shrb
divl
sub
mov
adc
ret
dec
fwait
jb
cmp
lcall
lds
cs
lods
sub
lcall
out
sbb
mov
sti
add
adc
faddl
cmp
repnz
add
lock
lods
jb
rcll
or
movb
call
sub
fs
fwait
stc
fidivrl
dec
mov
push
xor
fucomip
sbb
add
pop
cmp
je
lods
ret
lahf
mov
add
adc
loopne
pop
adc
popa
iret
push
add
sbb
inc
dec
ret
roll
mov
loope
xchg
add
jbe
push
lret
add
enter
add
xor
popf
repz
ds
xchg
dec
imul
add
xor
mov
jle
mov
jg
or
adc
out
push
jo
lahf
add
stos
sbb
or
push
int
jne
rcrl
pop
xor
stos
push
popa
jo
sub
outsl
notl
dec
jb
add
mov
and
or
jg
mov
ja
pushf
dec
add
inc
dec
cli
push
daa
frstor
popa
rolb
mov
xor
movsb
mov
jecxz
dec
stos
jo
inc
andb
inc
xchg
and
int3
cmpsb
or
outsb
adcb
dec
shl
pop
xchg
es
lods
fists
adc
cmpsl
andb
mov
push
pushf
jns
pop
jl
das
jp
popa
jb
mov
mov
pop
sub
xor
push
xchg
pop
cmp
fwait
stos
cli
pop
insb
lods
add
xor
ljmp
inc
call
xlat
es
dec
shrb
push
mov
cmp
xor
mov
push
dec
out
cmp
in
sbb
stos
hlt
sub
cltd
cwtl
xorb
add
lahf
subb
push
cmp
add
rcr
out
xchg
dec
add
inc
or
mov
mov
lret
aam
cwtl
aad
sbb
add
mov
xchg
xchg
sahf
in
or
and
xor
std
mov
add
sbb
scas
mov
or
lret
hlt
sbb
inc
pop
inc
jmp
ret
dec
sar
push
mov
inc
xchg
mov
mov
or
push
add
inc
and
jne
add
movsl
cmp
xchg
mov
xchg
pop
xor
sbbb
adc
loopne
mov
rcrb
mov
mov
outsl
jb
adc
sbb
mov
push
data16
or
dec
xchg
int
inc
push
xchg
pinsrw
or
pop
je
sub
shll
pop
loop
adcb
inc
add
pop
add
mov
mov
enter
sub
andl
in
or
jl
xorb
sti
dec
test
inc
ficomps
inc
scas
dec
fwait
xor
out
in
mov
push
jns
addr16
cwtl
loop
sub
and
xchg
aaa
sbb
cmp
mov
popa
cmp
ja
inc
sub
test
mov
mov
in
add
pop
sub
js
in
or
mov
ljmp
add
cwtl
sbb
popa
xchg
lods
das
mov
sbb
mov
in
dec
add
mov
push
dec
add
add
flds
adc
call
add
stos
add
sbb
addb
sub
fimull
fiadds
sub
in
imul
xchg
adc
mov
push
in
xrelease
dec
loope
dec
pop
cmp
popf
add
push
nop
lahf
andps
ret
fbstp
sbb
inc
add
dec
fs
xor
adc
push
xchg
loop
jg
aas
ljmp
or
push
xor
iret
dec
xor
jnp
sbb
scas
shl
data16
mov
nop
mov
adc
xchg
and
cmp
jns
xchg
mov
rcll
icebp
add
mov
inc
mov
jg
add
mov
add
adcl
xlat
in
std
or
add
cmpsl
xchg
inc
add
insl
mov
dec
sub
cli
loope
cmp
es
mov
pop
cwtl
add
inc
in
cld
lahf
mov
lea
sub
mov
xchg
call
push
add
mov
std
cld
cmc
adc
inc
xor
and
mov
or
lock
cwtl
jl
lea
jge
sub
sahf
aam
sub
cmp
xor
icebp
mulb
je
jb
mov
adc
hlt
add
cmpsb
jns
jp
aas
add
pop
lea
xchg
sbb
xor
cmp
shl
adc
add
xor
dec
cmpsb
xor
xorl
loope
pop
out
adc
dec
add
lds
adc
jle
mov
aaa
cmp
arpl
mov
faddl
mov
add
stos
test
test
cmp
add
outsl
nop
hlt
call
mov
mov
and
lods
sar
scas
fstl
adc
jle
fildl
dec
pop
jg
mov
and
loopne
jb
movsl
mov
pushf
xor
lds
fisttpll
add
packuswb
dec
sub
cmpsb
popf
sti
das
fdiv
add
adc
out
subb
add
mov
or
or
shlb
pop
ds
add
pop
andb
push
pop
mov
add
lds
lock
add
scas
sarl
sbb
push
add
stc
sub
lret
out
out
gs
shll
lcall
out
add
clc
lret
addl
add
mov
inc
sbb
mov
or
gs
sbb
aad
popa
add
jne
mov
or
or
mov
imul
test
rorb
add
jmp
shlb
cmp
pushf
lret
pop
cmp
add
rcl
cmp
aas
aam
sub
jge
lock
and
fdivl
and
jge
popa
aam
divb
hlt
js
or
rolb
fwait
xor
add
test
lret
in
leave
mov
movsl
adc
rcrb
fisttpll
enter
xor
mov
insb
sarb
into
push
iret
cltd
mov
test
enter
sbb
pop
push
add
xchg
shlb
add
pop
lret
and
ret
xchg
xor
sbb
jecxz
mov
or
sbb
mov
pop
dec
add
sub
stos
jb
lds
rolb
mov
test
mov
add
hlt
out
sarl
inc
and
dec
xor
test
pop
dec
jns
mov
push
or
mov
ret
out
inc
cmpsb
xchg
add
out
jle
sub
jmp
push
lahf
les
fsubrs
lds
adcb
movsb
xor
pushf
xor
sub
sbb
push
pop
jg
dec
in
sub
inc
xchg
jnp
add
aam
dec
xor
push
add
mov
fnstenv
std
add
jecxz
inc
enter
and
and
test
jns
pop
or
lcall
ja
arpl
cmp
push
fcomps
flds
inc
sbb
mov
dec
adc
add
push
cwtl
adcb
sbb
push
cwtl
pop
call
iret
out
sbbb
fs
insl
call
aas
cmp
push
cmp
mov
push
jae
lock
push
popa
add
ret
or
outsl
push
xchg
push
jbe
and
mov
add
and
jae
mov
add
js
add
fdivr
loop
dec
inc
mov
lds
les
leave
pop
rorl
pop
and
cmp
sbb
push
xchg
sbb
dec
into
int
and
sbb
sub
repnz
pop
fsubl
push
xchg
cmp
xor
push
and
add
leave
and
adc
cmc
inc
out
and
add
pusha
jg
and
mov
mov
roll
push
popl
sbb
dec
in
xor
pop
add
fwait
or
and
js
sbb
pop
jae
lock
rorb
jns
lods
repnz
and
cmpsl
sbb
add
mov
imul
add
dec
das
sub
out
in
cmp
jno
add
aas
loopne
and
xor
add
push
into
or
add
rcll
mov
jb
js
nopl
rolb
pop
add
sub
push
mov
jle
lods
adc
lret
adcb
sarl
mov
xor
es
aaa
add
in
faddl
bound
xchg
push
add
pop
fwait
or
rcrb
daa
lret
add
pop
inc
sbb
rcll
push
cmp
lods
xlat
fs
das
cmpsl
inc
add
scas
xchg
rolb
inc
jmp
cmc
adc
pop
clc
ret
inc
ret
adc
jbe
add
push
ljmp
pop
je
sbb
sub
add
adc
jp
push
out
repnz
jecxz
lea
pop
cwtl
dec
clc
inc
lock
xchg
mov
add
pop
mov
add
stos
xchg
xchg
mov
sub
mov
aad
into
iret
enter
and
mov
cmp
ljmp
in
mov
xchg
dec
out
sbb
imul
mov
inc
loope
test
pop
cmp
jle
inc
mov
add
mov
fwait
sub
adc
fisubl
in
dec
mov
xchg
push
mov
insb
mov
mov
imul
jne
loop
add
sub
add
popf
outsb
ficoms
cwtl
stc
cld
push
sub
shrl
lds
loopne
out
or
push
xchg
pop
and
xor
clc
xchg
les
inc
rcrl
pop
push
jns
or
sbb
arpl
or
xchg
pop
sbb
cmc
movl
test
dec
call
dec
cmp
add
pop
out
add
in
lock
sbb
pop
daa
inc
or
stos
add
nop
cld
sub
scas
je
mov
in
adc
cmp
adc
push
stc
add
fwait
mov
xor
rolb
aad
je
mov
push
pop
ja
inc
push
mov
and
pop
add
orb
cmp
ja
and
push
hlt
cmpb
xor
add
cmc
aad
addr16
clc
stos
ss
xor
sub
add
sbb
aad
xor
mov
je
push
jne
jnp
loop
pop
sub
lock
testl
dec
insl
mov
sbb
mov
cs
add
js
mov
sbb
push
andb
lock
jmp
push
mov
lcall
sbb
push
popa
mov
add
sub
inc
and
adc
call
into
add
add
sbb
jecxz
add
outsl
xchg
cmp
test
xchg
imul
xor
pop
push
fldenv
cmp
dec
sub
loop
incl
jle
int
pop
testl
sub
dec
out
lahf
sbb
stos
pop
sbb
pop
nop
lods
mov
lret
notb
jecxz
cmp
add
add
mov
rcrb
repz
lea
and
add
shlb
hlt
aam
test
and
dec
jne
subb
add
aam
vmovaps
mov
hlt
mov
xchg
xchg
mov
or
add
addr16
push
movsl
or
and
icebp
xor
add
sbbb
add
ja
les
popf
mov
push
leave
out
pop
lock
add
inc
cmp
mov
mov
pushf
andl
mov
add
jle
dec
scas
mov
lret
jge
cs
adc
push
loopne
ljmp
cltd
jne
stos
and
pop
test
xchg
or
mov
dec
xchg
outsb
je
xchg
loope
adc
sbb
add
mov
shlb
pop
mov
sbbb
aam
out
enter
add
cmp
lods
add
dec
in
sbb
test
inc
xlat
sbb
add
dec
fstpt
and
xor
xchg
and
ljmp
rorb
mov
aam
mov
out
repz
jecxz
add
lds
lcall
sbb
icebp
mov
arpl
scas
mov
insl
call
hlt
jmp
jns
xor
repz
loopne,pt
push
adc
sub
or
lods
and
sti
andl
jae
imul
shll
sbb
jg
addl
xor
out
sub
sub
add
sbb
sbb
jle
mov
cmp
add
aas
jnp
in
clc
mov
add
xor
data16
hlt
movsb
add
inc
and
mov
shlb
and
aad
mov
push
adcl
or
popa
dec
mov
xchg
inc
les
sahf
in
add
xor
ret
enter
mov
add
fwait
outsb
xchg
orl
mov
sarb
push
push
add
rolb
aam
in
and
das
cmp
dec
inc
mov
insb
push
bound
mov
dec
into
ss
aad
add
jb
loopne
loope
pop
add
sbb
mov
dec
sub
cli
add
xchg
jg
add
inc
clc
jle,pn
pop
adc
leave
add
mov
outsl
scas
movsl
jne
loop
inc
add
jl
cli
add
mov
sbb
js
inc
in
add
mov
mov
popa
shlb
pop
and
xor
sbb
test
and
pushf
mov
sbb
sahf
mov
into
add
lret
mov
mov
cwtl
push
xor
roll
xor
jae
sbb
iret
push
icebp
adc
jl
fbld
pop
inc
mov
mov
mov
pop
loopne
add
or
mov
xor
ds
or
hlt
pop
add
cwtl
into
push
nop
xchg
xor
ret
and
aas
lret
add
and
or
icebp
aas
add
jo
push
cmp
xchg
add
clc
sbb
push
sbb
mov
add
sahf
mov
bound
inc
cmp
in
arpl
add
inc
rcrb
add
mov
push
pusha
mov
add
xlat
stos
dec
inc
jmp
aas
add
in
stc
or
mov
jo
pop
out
pop
add
rcll
jp
clc
inc
mov
and
cmp
sub
inc
mov
sub
in
rolb
andb
pop
cmp
add
aad
fs
ljmp
adcl
dec
add
push
mov
cmp
dec
push
and
hlt
aas
jp
add
cmp
test
dec
rolb
cmp
mov
mov
add
adc
inc
lods
lcall
in
std
icebp
in
pop
ljmp
mov
add
cmpsl
and
lods
xchg
adc
sbb
fdivrs
cmp
cli
add
insl
jo
adc
imulb
shrl
lods
pusha
sbb
mov
add
adc
push
xor
xorb
mov
aam
clc
jb
push
xchg
mov
inc
add
sub
push
cmp
mov
loopne
stc
aam
outsl
add
jae
mov
shlb
add
in
fbld
in
add
sub
mov
gs
add
and
mov
nop
mov
push
addb
dec
add
jle
jo
cwtl
mov
mov
loopne
les
test
clc
add
repz
gs
mov
fldenv
cmp
jb
rcrb
les
pop
pop
cmp
add
jb
scas
and
xor
sbb
cmp
sub
jle
hlt
outsb
xor
and
sbb
sub
in
adc
add
mov
jl
sub
gs
loop
aas
add
leave
jnp
pop
es
aaa
mov
test
push
inc
mov
scas
in
ret
mov
add
push
add
rclb
shlb
movsb
int3
cmp
sub
ja
add
stos
bound
add
push
add
lods
mov
or
push
push
add
mov
push
sub
mov
imul
sub
add
js
jne
sbb
or
sbb
add
xchg
mov
inc
sub
push
lods
cmp
daa
pop
dec
cmp
jae
add
lret
outsl
xor
clc
popl
mov
jp
or
xchg
dec
icebp
dec
jecxz
push
add
mov
aam
cmp
repnz
frstor
sub
and
mov
sbbb
ja
pop
outsb
std
movsl
rcrb
push
call
sbb
jmp
xor
sbb
xchg
inc
loop
aad
push
mov
addl
shlb
jne
les
cmp
cmp
ds
pop
jno
fisubrs
sbb
std
push
dec
cmp
push
int3
add
adc
pop
mov
fildll
xchg
sti
add
jl
dec
clc
adc
cmc
fiadds
dec
jge
pop
fldcw
js
lock
add
add
sub
repz
popf
or
mov
fsubrl
mov
test
xor
adc
adc
dec
rcll
fildl
dec
adc
pusha
push
into
jo
mov
paddq
push
add
and
add
cmpsl
enter
nop
scas
pop
mov
dec
dec
lahf
inc
addb
pop
or
shl
inc
outsl
test
add
push
shl
sub
dec
sbb
add
lret
aas
xor
fbstp
les
xchg
xor
inc
dec
and
cmpsl
pop
es
sub
dec
cwtl
andb
add
inc
cwtl
sub
es
mov
out
push
lea
repnz
mov
push
adcl
lret
into
xor
icebp
daa
push
pop
lret
stos
jmp
adc
cmpsl
inc
insl
stc
testb
push
dec
mov
add
rorl
cmc
rcr
sbb
sub
shll
and
dec
mov
inc
cmpsl
mov
repnz
cbtw
or
addr16
add
or
clc
and
ds
out
clc
inc
jecxz
scas
mov
cld
mov
add
mov
test
lea
xchg
add
jge
enter
into
jns
shl
add
pusha
cmpsb
mov
stos
jnp
daa
push
adc
sahf
sub
push
push
pop
int3
sub
clc
add
jbe
je
test
add
das
repz
sbb
dec
mov
icebp
sub
loopne
xor
mov
ja
shr
sbb
push
js
jo
xchg
sub
stos
call
dec
xor
and
add
das
push
leave
inc
rol
stos
add
ljmp
adc
inc
pop
jnp
pop
pop
lods
adc
cmp
fs
xchg
fldenv
movsl
stos
pop
adc
aad
in
jb
ljmp
lock
popa
jmp
ret
or
pop
pop
test
xchg
mov
xor
add
addr16
hlt
cmovge
in
adc
inc
mov
add
pop
mov
movsl
xor
sbb
or
movsl
nop
lods
add
lock
mov
inc
nop
and
hlt
mov
jnp
cmp
faddl
fadds
test
rclb
ja
les
sub
or
and
rclb
mov
push
inc
mov
sti
add
xlat
aas
xor
add
shl
sbb
mov
cwtl
mov
mov
push
pop
enter
adc
sarb
test
sbb
ficoml
cli
aam
xor
divb
pop
aaa
sahf
pusha
int
test
test
imul
dec
ret
in
bound
notb
sahf
fimuls
or
mov
lret
cmp
push
int3
or
sahf
test
mov
adc
fldt
sbb
adc
mov
dec
lret
pusha
movsb
push
insl
or
add
jne
xchg
adc
outsl
out
es
add
mov
sub
rcl
lahf
push
push
jge
es
jle
mov
icebp
mov
push
add
scas
add
andb
cmc
sub
fsubl
sarb
and
out
call
aam
pushf
dec
pop
add
sbb
inc
add
mov
dec
add
xchg
js
add
sbb
mov
das
mov
lret
or
js
lods
mov
outsb
sbb
andb
cmp
mov
sbb
test
and
or
js
push
xor
out
or
cmpsb
clc
xchg
lret
pusha
inc
lahf
fiadds
ds
lods
enter
out
xor
in
jecxz
adc
push
je
mov
sub
dec
cmc
pop
or
cmp
inc
lods
addr16
stos
jo
insb
int3
or
lods
dec
mov
sbb
insl
pop
push
icebp
popf
xchg
int
sub
cmp
and
insl
mov
xor
and
or
out
sbb
repz
mov
lock
sarb
inc
lods
imul
add
pop
lods
sbb
dec
fsubr
hlt
add
nop
xchg
jns
or
and
lret
push
fsubs
inc
repz
aad
int3
push
int3
or
xor
sbb
enter
jecxz
add
std
mov
jne
mov
cmpb
pop
dec
xor
add
inc
push
imul
pop
lock
add
dec
cmc
mov
test
inc
addb
pop
repz
mov
aaa
sbb
popf
shrl
rcll
and
mov
push
add
adc
stos
jne
jo
nop
test
push
add
push
stos
insl
push
sahf
mov
frstor
or
pop
leave
arpl
in
push
mov
test
ficoml
add
ret
adc
adc
stos
add
xchg
cmc
inc
lock
jne
jb
hlt
xchg
popa
iret
inc
mov
sub
mov
cmc
fs
push
insb
aaa
pop
push
add
inc
scas
in
dec
repnz
add
mov
xchg
in
jbe
mov
sub
push
neg
push
in
push
or
enter
and
rclb
fcoms
nop
push
shlb
push
cmp
addl
test
cmp
sbb
rolb
lcall
mov
movsl
xchg
js
lods
fdivl
and
nop
int3
stc
sbb
or
sub
les
inc
or
sbb
push
ss
incl
pop
dec
fwait
jno
stc
stos
dec
lock
arpl
jmp
push
xchg
cmp
add
inc
out
dec
jle
xor
aam
out
mov
je
xor
shl
inc
push
adc
inc
mov
xor
or
ds
scas
dec
add
mov
or
or
test
aam
xor
lea
dec
aam
imul
mov
cmp
sub
in
es
inc
xchg
cmp
inc
lods
or
xchg
mov
clc
adc
popf
lods
add
adc
push
jo
rcll
gs
mov
fsubrs
xchg
fs
sbb
and
pushf
inc
outsl
sbb
and
mov
aaa
fcompl
cli
jg
adc
push
xlat
adc
mov
rcll
sub
adcb
jb
loopne
xor
push
addb
jne
mov
pop
pusha
cmp
and
jae
adc
add
inc
out
lds
push
cmpsb
add
inc
inc
in
jb
or
inc
lods
gs
mull
cs
lods
dec
add
mov
imul
lea
test
mull
mov
mov
push
add
test
mov
loopne
and
and
fsubs
push
sbb
shlb
add
testl
sahf
scas
cld
mov
daa
add
jmp
aas
in
and
les
cwtl
hlt
hlt
adc
sbbb
pop
lret
fsubrs
xchg
add
test
in
outsb
sub
test
mov
push
fsubrl
pusha
inc
inc
mov
scas
inc
repz
arpl
orl
xor
sub
add
enter
mov
cmpsb
jo
inc
dec
mov
lods
push
or
push
test
xor
out
push
add
jae
mov
into
lock
xor
ret
cmp
xorb
add
lret
clc
shlb
sti
push
jecxz
add
or
pusha
inc
sub
lret
dec
and
jg
pop
push
test
dec
and
cmc
wrmsr
mov
sub
jl
movsb
xchg
fistl
cmp
fwait
mov
rcrb
std
lahf
jae
jo
push
xchg
pop
mov
lds
rcrb
adc
int3
mov
outsb
loope
pop
jo
stos
outsl
fidivl
imul
dec
mov
shrb
mov
call
stos
mov
repnz
and
xchg
cwtl
adcb
fisubrl
pop
push
jmp
into
pop
cmp
test
sub
ret
sarb
popf
test
or
sarl
pop
js
sub
sbb
pop
call
pop
fdivrl
dec
sbb
scas
pop
inc
repz
cmp
jl
testl
jae
test
xor
push
add
fisttps
cwtl
cmp
cltd
adc
fs
js
out
imul
add
shl
sub
or
loopne
clc
add
push
jne
in
xor
andb
push
fwait
push
push
je
int3
push
add
repz
inc
fisubrl
mov
xchg
leave
add
mov
add
nop
loope
push
sbb
xchg
and
add
fistpll
rorb
push
cmp
sti
and
sub
test
push
push
sbb
jecxz
sub
cld
sbb
inc
rorb
mov
fidivl
jmp
ja
gs
add
cmc
pop
xchg
in
add
enter
dec
or
push
ljmp
lea
in
ror
mov
dec
pop
shlb
inc
punpckhwd
pusha
rorb
scas
imul
cmp
iret
mov
lock
jb
mov
ret
xchg
dec
mov
sbbl
inc
pop
orb
aam
dec
add
test
and
imul
add
aad
cli
inc
dec
cmp
mov
popf
leave
int
xor
xchg
xchg
adc
shrb
sub
cwtl
or
mov
cmp
cmp
mov
sub
jae
pushf
jb
mov
or
mov
lods
and
rol
lcall
push
inc
push
fucomip
sub
imul
add
xor
test
jecxz
mov
mov
dec
or
xchg
sub
xchg
lods
es
dec
xchg
pop
aaa
roll
jecxz
loopne
cmpsb
or
mov
pusha
adc
add
mov
test
xchg
pusha
lock
push
cmp
scas
xchg
adc
in
inc
outsl
pusha
sub
cmpsb
jecxz
aaa
sub
cmp
jmp
xchg
mov
or
lock
rol
and
push
scas
enter
mov
mov
mov
push
add
or
mov
lret
dec
dec
adc
out
fwait
inc
push
fcoms
add
repnz
dec
mov
imul
loopne
incl
adc
and
mov
mov
adc
push
ret
test
cmp
sbb
arpl
pop
shlb
js
call
xchg
pop
mov
in
xchg
mov
inc
cld
dec
mov
daa
clc
mov
hlt
and
lahf
lret
call
sbb
and
xor
inc
mov
popf
ret
pop
js
add
mov
daa
or
pop
add
call
xor
fnstenv
inc
scas
in
xchg
movsl
jg
add
stos
loopne
push
arpl
es
rclb
repz
dec
std
aas
sub
add
fimull
cmp
stos
data16
and
in
xlat
insb
pop
push
push
loopnew
mov
loope
ret
mov
les
shlb
xor
adc
cmpsl
xchg
add
jmp
or
and
cld
test
scas
sbb
lret
add
sub
stos
add
sub
in
jns
rcr
dec
cmpsb
ds
push
inc
fmull
fsubp
add
insb
add
inc
push
adc
daa
lods
aas
subb
jl
fdivrl
sarb
dec
push
cmp
push
addl
pusha
insl
and
jmp
scas
dec
xchg
cwtl
adc
add
ret
xchg
mov
mov
fucomp
inc
out
push
add
insl
popa
call
sbb
fimuls
add
mov
push
push
jl
aaa
push
push
and
sub
mov
mov
add
arpl
cmp
pop
xor
test
add
mov
add
and
xor
fisttpll
add
int3
xor
mov
dec
out
jl
mov
xchg
sub
es
aad
mov
or
mov
pop
dec
out
arpl
pusha
cmp
inc
fcomps
insb
add
insl
mov
repz
dec
mov
loope
adc
pop
loop
iret
cld
int3
add
sbbb
scas
push
imul
mov
shll
mov
add
add
scas
in
or
mov
and
adc
arpl
xchg
popa
inc
mov
and
inc
mov
arpl
fidivl
inc
mov
add
xchg
sbb
mov
or
pop
dec
repz
fcomi
lods
clc
add
or
scas
add
shlb
iret
pop
adc
inc
dec
xorb
enter
add
and
mov
iret
sbb
fldcw
lret
mov
pop
dec
inc
jge
pop
pop
xor
lods
movups
in
cmpsl
outsl
mov
shll
jnp
aad
in
and
sbb
xchg
lock
in
sarb
adc
mov
add
std
daa
or
xchg
mov
pop
jne
push
shlb
imul
add
hlt
xchg
in
sbb
leave
iret
mov
or
and
shrb
lock
and
pop
arpl
lods
jp
test
push
adc
xchg
mov
xchg
adc
outsl
std
add
incb
repnz
xchg
test
cmp
xchg
mov
push
push
add
mov
iret
sti
mov
lds
inc
orb
and
or
popa
push
mov
sahf
dec
jle
negb
pop
pop
out
or
cmc
rol
cwtl
sahf
sbb
adc
inc
sbb
movsl
xorl
fstpt
addb
ja
dec
pop
and
jmp
push
ljmp
cmp
shlb
add
jb
sbb
add
adc
pusha
in
mov
jg
xor
sub
es
in
pop
and
in
add
pop
adc
bound
data16
add
outsl
adc
idivl
in
mov
sbb
mov
cld
jae
pop
into
sbb
pop
and
jp
dec
fcoml
sbb
xchg
add
test
mov
add
push
fadd
xor
xchg
ret
pop
mov
sub
or
idiv
addr16
mov
mov
lods
loop
insb
xlat
cld
and
aaa
repnz
lock
add
fcomps
loop
mov
fdivrp
adc
jns
add
popf
mov
pop
dec
nop
cmpsb
push
jo
stos
pop
cmp
ficompl
jl
cmp
in
push
add
adc
mov
rorb
nop
mov
jmp
out
and
adc
sbb
and
js
inc
clc
pop
cld
and
out
push
jp
cli
hlt
xchg
cmp
imul
xorl
iret
out
dec
fsubp
loopne
sahf
out
ja
jo
fmuls
in
mov
and
neg
dec
test
jae
aam
cmp
push
xchg
jecxz
pushl
add
aam
rcll
imul
pop
add
cmpsb
xchg
das
out
andb
je
inc
add
jno
jo
push
add
hlt
inc
push
add
mov
inc
mov
pusha
sbb
jp
out
stos
jmp
dec
push
icebp
mov
mov
cmp
push
adc
lea
mov
movsb
or
mov
faddl
sbb
add
popf
in
xchg
jl
mov
clc
adc
imul
dec
add
push
and
js
pop
add
data16
lods
cli
and
mov
push
out
pop
jno
dec
insl
flds
pop
out
add
push
lcall
mov
adc
lock
ss
inc
cwtl
lret
test
iret
xchg
pusha
imul
cwtl
xor
rorl
mov
test
mov
xchg
and
push
add
dec
gs
mov
ds
or
push
jmp
lock
dec
jo
mov
std
sbb
xchg
orb
add
and
testb
aad
fstpl
jno
xor
shlb
stos
pop
push
add
fsubl
sbb
pop
aas
rolb
xchg
jns
fildl
stos
cmpl
mov
add
mov
sub
loopne
in
call
and
mov
pop
sbb
pusha
pushf
and
jb
sahf
add
dec
cmp
mov
outsb
fbld
dec
loopne
fs
mov
cld
sahf
xchg
fidivrl
sbb
sub
shlb
call
xchg
test
les
loope
addr16
arpl
dec
shlb
jg
negl
sub
and
add
loopne,pt
jbe
add
std
leave
jmp
notl
sahf
cwtl
and
arpl
sub
add
movsl
dec
cld
test
pop
add
js
shr
orl
xlat
sbb
repnz
push
inc
je
sbb
mov
mov
or
inc
testb
add
shld
push
mov
xchg
add
mov
outsl
in
add
out
mov
dec
or
icebp
mov
pop
xchg
cld
jo
lea
cmp
mov
jmp
in
fcompl
and
lds
xchg
push
xchg
add
nop
not
add
and
push
add
xchg
sub
and
add
mov
cwtl
imul
int3
nop
mov
inc
mov
in
or
out
rcrl
cmp
add
cmp
fwait
out
ss
pop
dec
cli
inc
add
cmpsl
add
add
mov
push
mov
xchg
inc
sti
sbb
je
xchg
pop
or
movsl
or
add
and
jns
inc
add
sub
cld
mov
addb
add
lahf
jb
mov
push
cli
add
aam
aaa
xor
jp
call
pushf
scas
aad
lock
mov
sbbb
insl
and
push
sbb
loope
adc
mov
ret
and
call
mov
add
loope
mov
dec
shll
or
data16
sbb
adc
mov
out
out
fsubs
mov
jbe
add
adc
inc
cld
mov
and
nop
xlat
je
cmpsb
int3
int
add
mov
mov
push
faddl
cld
mov
cltd
xchg
out
sub
jae
iret
sbb
cmp
xchg
jp
or
add
add
xor
setge
jecxz
jne
mov
jnp
lods
mov
xor
ror
or
add
sub
adc
jp
mov
jo
add
mov
loopne
aad
xor
fcoml
leave
ret
cli
xchg
add
jnp
fsubr
add
es
fiadds
jo
sar
aam
addb
lret
fs
shll
pop
out
mov
adc
lods
or
inc
fiadds
mov
es
cmp
or
in
mov
shlb
int3
jo
adc
inc
mov
and
mov
add
dec
jae
stos
push
lret
out
sbbb
pop
cmp
add
loope
movsb
pop
test
mov
or
in
enter
adc
jp
cwtl
mov
outsl
jno
fsubl
shlb
les
pop
pop
push
or
pusha
popa
sbb
push
pop
adc
subl
adc
lock
sbb
jno
add
sbb
xchg
fwait
and
push
loopne
paddd
outsl
add
cmp
xchg
xchg
jp
sbb
mov
adc
clc
adc
lods
dec
call
cwtl
js
bound
xchg
mov
adc
adc
cmp
and
add
out
or
test
sbb
dec
sahf
mov
and
or
jmp
mov
movsl
jg
subb
sti
lock
lock
call
sub
das
xchg
mov
cmp
cld
push
out
push
notl
dec
je
xadd
loope
aas
pop
ja
int3
add
add
mov
push
rorb
fwait
mov
leave
add
lea
lods
jecxz
cld
jg
add
cmpsl
ret
sbb
adc
addb
push
clc
sbbb
ret
dec
pop
add
loope
inc
cld
les
dec
rcrl
das
jle
adc
sub
lods
push
or
adc
add
mulps
jno
leave
pusha
mov
ret
ror
in
shl
add
fmul
lods
pushf
mov
or
pushf
sahf
addb
ja
loop
rcl
mov
sbb
mov
shlb
mov
mov
jo
xor
xchg
add
in
mov
dec
xchg
addb
cli
pop
mov
rclb
inc
arpl
xchg
pop
mov
les
xchg
or
xor
xchg
add
test
or
test
aad
jno
nop
cld
stos
sbb
mov
pop
pop
call
scas
insl
dec
lock
test
add
xor
pop
fcmovne
ljmp
sbb
or
rolb
xchg
orb
shl
xchg
testb
repz
bound
call
adc
or
add
adc
mov
nop
lock
popf
js
loope
popa
add
jno
je
mov
ret
jecxz
mov
push
stos
dec
dec
sub
lahf
add
mov
andb
push
fs
call
mov
repz
push
dec
js
or
push
test
daa
add
lahf
ss
push
lret
and
daa
dec
insb
loopne
decl
cmp
dec
out
mov
lcall
faddl
clc
mov
jp
mov
pop
add
sbb
insl
dec
add
in
mov
xchg
jecxz
push
or
lods
add
cmc
rcl
daa
test
iret
jae
add
dec
add
ret
add
int
and
inc
fdivrl
add
pushf
notb
add
fdivr
out
add
add
lods
sbb
xchg
lret
jb
jg
loop
pop
xor
test
pop
movsl
ljmp
add
pop
mov
jge
out
mov
in
jns
or
push
outsl
add
push
repz
add
jae
mov
jg
add
sub
les
mov
add
scas
jp
enter
nop
sub
loopne
je
jbe
add
sbb
popf
adcb
jbe
xor
cwtl
pusha
add
dec
repnz
and
imulb
dec
xorb
cmp
fimull
sarb
mov
lock
inc
rclb
jnp
xchg
mov
lahf
idivl
dec
mov
xor
dec
sub
jmp
add
rol
rol
push
jg
out
and
add
decl
addb
mov
inc
sbb
add
mov
andb
gs
cmp
scas
xchg
sbb
mov
addr16
add
adc
clc
insl
js
sbb
loope
cld
popf
mov
xlat
ret
sbb
jle
sub
in
out
pop
sub
jmp
aas
stc
mov
imull
and
andl
or
scas
pop
pop
aam
adc
mov
adc
daa
add
mov
test
mov
push
addr16
insb
cld
mov
mov
push
fisttpll
jle
cmp
sbb
rclb
xlat
cwtl
aam
add
out
clc
fcmove
dec
sbb
incl
push
inc
enter
adc
push
add
inc
and
xchg
aaa
pushf
pop
jl
add
inc
xchg
scas
loopne
enter
cmp
cs
shrl
into
adc
pusha
jno
sbb
jl
faddl
adc
dec
push
and
push
aad
xchg
pop
sbb
inc
mov
or
sub
xchg
rolb
pop
adc
jcxz
lds
iret
dec
fcmovnu
pusha
div
stc
sbb
mov
orb
push
sub
add
scas
mov
add
and
mov
fxch
add
roll
cmp
add
pop
xchg
xor
xor
dec
test
insl
push
adc
test
sub
jnp
in
add
aas
pop
loopne
fcom
iret
call
sbb
xchg
or
jg
sbb
add
fwait
ss
and
push
jno
push
add
adc
in
xchg
mov
add
aad
push
adcl
jle
xor
jg
cwtl
add
ja
test
pop
mov
sub
add
mov
dec
insb
sbbb
jecxz
add
push
decl
sub
fisubrs
or
aad
sbb
packssdw
or
inc
test
clc
push
mov
push
dec
imull
inc
add
repz
add
cli
aaa
mov
ficoml
leave
xchg
xor
sbb
push
test
pop
inc
add
into
sub
jge
add
pop
cwtl
test
loope
add
ret
push
add
add
dec
outsl
push
inc
mov
int3
das
clc
add
fisttps
add
out
and
jl
push
mov
add
pop
fmul
incb
push
clc
ficoms
adc
outsb
shlb
dec
enter
cmp
mov
movsl
test
add
ficomps
arpl
jne
add
inc
std
xor
jmp
push
xchg
fildl
ja
cmpsb
fidivl
in
js
add
inc
dec
push
enter
add
loopne
lds
fiaddl
test
mov
push
daa
test
lea
int
ljmp
push
loop
mov
xchg
push
pushf
hlt
jmp
xor
jne
sbb
lods
nop
add
pop
sub
movsl
rolb
ds
inc
mov
cli
mov
aaa
in
dec
sbbb
jge
bt
cmp
andl
cmp
add
dec
fiadds
jns
or
add
mov
sahf
cmp
lret
xor
push
movsb
inc
gs
out
testl
jle
or
xchg
filds
xorl
add
out
sahf
movsb
cmc
cld
add
mov
orl
push
pop
jno
rcrl
add
sbb
cltd
jo
mov
cld
dec
push
hlt
xchg
mov
jp
inc
incb
iret
inc
lods
test
add
jle
ss
fldl
test
xor
add
andb
inc
enter
xchg
loop
xchg
mov
sbb
mov
cltd
ja
push
ret
aaa
out
sbb
add
push
cli
xor
rorl
xor
std
mov
lods
pop
test
jle
xchg
mov
in
mov
divl
add
outsb
sahf
fldl
push
popl
inc
pushl
loope
popa
lcall
jmp
pop
pop
cwtl
lock
iret
inc
les
mov
or
xor
call
or
sub
test
mov
bnd
scas
inc
pop
add
xchg
push
sbb
mov
add
dec
in
mov
jmp
inc
push
cmp
add
mov
iret
lds
rorb
hlt
dec
xor
mov
in
pop
incl
mov
in
add
cld
add
outsb
rorb
pop
cmp
pop
sbb
add
sti
stos
inc
jge
add
aas
outsb
std
lea
inc
das
xlat
and
int
add
in
push
insl
or
jmp
cmpsl
mov
pushf
add
sbb
push
xor
mov
insl
out
lret
xor
add
arpl
js
add
mov
lods
roll
dec
or
movsb
popf
data16
test
cwtl
sub
mov
cmp
fisubs
jb
xlat
xchg
mov
shl
aas
mov
call
ds
push
and
push
test
decb
in
lods
add
inc
out
xchg
mov
adc
push
sar
ret
jp
pop
jecxz
je
add
aas
in
mov
mov
inc
test
lock
inc
and
or
pop
cmc
test
add
mov
sbb
xchg
ja
inc
cmp
and
add
roll
push
test
mov
loopne
nop
mov
mov
lret
sub
add
pop
xor
test
push
or
add
jae
cmpxchg
aas
js
mov
clc
or
jno
jb
cmp
es
pop
mov
sub
sub
jo
pop
sarb
test
inc
push
xor
faddl
fdivrs
cmp
jno
adc
add
sahf
lods
mov
in
mov
stos
jle
jno
les
dec
add
out
pop
dec
jno
xor
add
aad
jb
add
sbb
inc
lock
inc
test
pop
mov
repnz
or
cmp
jns
add
test
ss
mov
fwait
add
sbb
push
add
in
imul
adc
test
push
mov
inc
out
imul
enter
mov
gs
xor
clc
mov
cmp
lds
shlb
mov
cwtl
rol
orl
sub
pop
pop
add
test
and
push
mov
mov
pop
pushf
xor
sub
scas
or
and
xchg
add
sbb
jle
push
je
pop
inc
mov
push
mov
jo
lods
and
sbb
xor
mov
pop
add
test
mov
add
insl
jb
add
aam
addb
sub
sub
or
mov
add
inc
mov
aad
subl
fisubl
pop
sbb
jo
add
mov
jg
add
jp
lods
mov
lahf
push
pop
mov
xchg
jo
loopne
push
movb
adcl
test
sbb
xor
in
xor
inc
adc
lods
jo
add
push
inc
enter
mov
cmpsb
add
js
push
mov
xchg
xor
add
adcb
sub
sbbl
add
add
aaa
cmc
and
inc
in
sti
shl
pop
mov
pop
pop
inc
inc
lods
mov
mov
call
out
dec
or
sub
dec
das
adc
iret
syscall
cli
or
cmp
pop
mov
jbe
sub
imulb
aam
enter
cmp
loope
add
sarb
and
and
inc
sub
imul
daa
dec
fimuls
xrelease
lcall
add
cmp
inc
push
lret
xchg
jp
add
out
dec
add
sbbb
pop
loop
leave
jo
cs
enter
cmc
les
rolb
jne
sbb
add
push
iret
xor
mov
addb
int3
ficomps
add
subb
add
sbb
push
push
roll
out
xchg
ret
adc
cmp
pop
das
push
roll
add
in
ljmp
mov
shll
pop
mov
je
adc
shll
inc
sbb
imul
and
cmp
lahf
dec
insb
jecxz
in
outsb
add
jg
sbb
jne
stos
cmp
push
inc
inc
imul
xor
ljmp
or
and
cmpsl
jle
add
insb
bound
xor
add
xor
out
out
cmp
xchg
negl
pop
add
and
inc
xchg
je
push
pop
or
lcall
pop
pop
push
mov
push
jge
movsl
xchg
cmpb
xchg
cmc
push
mov
incb
inc
sbb
inc
push
xlat
push
mov
sub
out
fcomps
int
add
fnstcw
xor
cli
stos
shlb
add
in
out
notl
pusha
ss
xchg
jl
cs
mov
lods
inc
arpl
lcall
cmpsb
sbb
addl
or
mov
add
imul
push
sbb
stos
cmp
addr16
xchg
cmp
pop
popa
sbb
inc
pop
inc
xchg
je
pop
das
jb
inc
aam
mov
and
scas
cmp
test
and
sub
dec
sub
or
in
mov
adc
inc
add
sbb
jo
in
mov
add
rorl
xchg
push
scas
add
pop
lcall
xor
or
mov
mov
adc
idivl
icebp
jbe
dec
enter
aad
outsl
or
adc
pushf
cmp
push
ja
negb
testl
add
dec
aas
loop
mov
rcll
rcr
inc
add
xchg
sub
andb
scas
ds
dec
and
lret
dec
popf
repz
jne
aad
dec
das
xchg
rolb
mov
sti
add
cmp
sbb
pop
stos
mov
mov
fcmovnb
inc
add
shll
and
jae
jns
lock
mov
cmpsb
je
call
clc
sub
cwtl
lock
pop
stc
inc
push
and
pusha
jmp
push
mov
jo
mov
orb
sbb
in
ret
push
cmpb
shlb
aad
jne
add
sarl
adc
mov
xchg
popf
push
inc
adc
aas
sub
outsb
out
cmpxchg
aad
pop
jne
pop
in
add
pushf
xor
add
mov
lret
sub
pop
lock
dec
mov
int
aam
jmp
or
add
cs
sysexit
out
dec
mov
sbb
leave
mov
push
xor
xchg
xor
mov
testb
adc
add
pop
fimull
sbb
add
cltd
adc
push
out
dec
pushf
dec
sbbl
stos
or
enter
dec
and
jl
add
mov
bound
xchg
lds
xchg
jbe
imul
leave
mov
or
shl
fs
add
je
popf
push
inc
and
push
sub
outsb
sahf
and
mov
lret
cmp
add
notl
aas
sbb
xchg
cmc
jae
sub
rorl
ret
call
push
push
sbb
jg
add
dec
dec
cmc
in
test
cmpsl
jno
je
add
aaa
push
enter
dec
or
sub
roll
les
xchg
xorb
xor
push
cwtl
outsl
or
push
add
or
call
or
xor
fstl
jmp
add
mov
jb
je
and
xor
mov
loop
add
pop
cli
rclb
in
adc
es
inc
int
push
mov
push
je
pop
and
push
aas
mov
lods
add
jbe
and
push
add
mov
push
jae
pushf
lds
add
inc
dec
push
xchg
pop
fdivl
xlat
mov
add
ja
popf
mov
cltd
popa
sbb
push
add
out
and
in
call
mov
pop
xchg
and
xor
in
notl
sbb
mov
ds
lea
dec
roll
mov
push
pop
xor
and
aas
sbb
xor
movsb
loop
loopne
inc
sub
stc
rorl
cmp
dec
add
cmp
xor
mov
mov
mov
mov
adc
and
sbb
es
popa
mov
int3
add
mov
pop
subb
or
or
pop
mov
sti
add
jbe
mov
adc
mov
std
mov
repnz
cmpsb
sbb
mov
out
das
pusha
addb
xchg
or
cmpsb
shl
cwtl
or
pop
bound
sub
aas
add
cmpb
xor
rorb
add
xchg
daa
mov
das
adcl
adc
sbb
fidivrs
loope
and
ljmp
sbb
lahf
add
test
cmpsb
mov
loope
and
sbb
rcrb
icebp
and
add
pop
mov
add
adc
and
dec
ja
jmp
or
std
test
add
call
popf
out
jge
inc
test
add
shlb
loop
pop
and
nop
mov
push
ds
aaa
repz
lods
add
gs
add
dec
xor
xchg
or
or
jae
add
add
ljmp
add
rorl
jl
xor
lock
add
test
out
sbb
daa
sarb
mov
incb
dec
into
stc
push
and
jl
dec
push
inc
or
mov
test
imul
scas
or
and
ret
and
insl
mov
aam
add
and
hlt
push
adc
add
ss
jl
or
xchg
lahf
sub
xchg
fmuls
mov
jp
lock
leave
enter
adc
imul
cltd
push
xor
mov
add
ds
xor
sti
adc
dec
fwait
mov
jae
add
jg
filds
xor
cmp
add
pop
jo
xor
or
and
lret
sbb
pop
inc
negb
mov
or
pop
xchg
xor
add
pop
add
sti
das
sbb
adc
icebp
add
sub
sbb
add
pushf
add
sub
sbb
inc
dec
je
or
ljmp
add
icebp
rclb
nop
test
movb
xor
mov
mov
cwtl
lods
js
add
test
dec
dec
add
push
lcall
cmp
insb
adc
rcrb
mov
or
adc
dec
loop
mov
nop
add
jmp
rcl
jl
add
imul
cmc
addr16
xchg
and
hlt
cmp
add
cmpsb
inc
js
mov
test
add
dec
int
dec
and
jle
imul
add
xchg
add
or
mov
popf
sahf
je
pop
jle
cltd
mov
int3
shlb
popf
cmp
mov
stc
decl
sbb
int3
and
or
shll
sub
push
cltd
add
xchg
and
shrb
js
push
mov
xchg
add
add
dec
and
adc
jns
stos
push
jb
sub
cmp
fdivl
cwtl
jnp
in
add
leave
xlat
inc
cld
imul
stc
jno
rolb
push
mov
outsl
les
popa
lods
sahf
inc
dec
mov
cld
jbe,pn
fmuls
loop
nop
dec
xchg
xor
lret
mov
mov
mov
jg
sar
loop
jmp
adc
inc
sub
cmpsb
imulb
pushf
jo
add
jle
sarl
adcb
sbb
push
xlat
pusha
repz
push
lret
dec
repnz
mov
mov
push
or
pop
scas
jg
xor
xchg
adc
xor
popa
dec
lock
sub
fld
icebp
dec
rorb
add
push
and
xchg
sub
pop
aaa
or
les
test
mov
rorb
fidivrs
add
push
push
loopne
loop
xchg
dec
cmp
mov
sub
inc
fsubs
vpsadbw
shl
cmp
fldl
adc
or
aam
and
xor
add
or
dec
jo
mov
and
repnz
and
movsb
or
in
xor
cmpsl
hlt
test
add
cmp
scas
xor
add
imul
insb
jp
add
dec
mov
repz
jg
or
adc
or
mov
out
cmpsb
mov
mov
dec
mov
xor
repnz
js
fdivrl
pusha
push
outsl
sub
call
mov
out
add
and
jmp
add
rclb
daa
lcall
jbe
xchg
out
xor
shlb
adcb
and
push
scas
pop
aaa
xor
sti
xchg
or
pushf
or
fs
in
mov
ss
out
rclb
icebp
fs
sbb
lods
push
jl
mull
dec
clc
inc
hlt
cmp
xor
xchg
shrl
pop
mov
mov
enter
push
sub
push
jl
cmp
adc
sbb
sbb
aaa
nop
or
rclb
mov
pop
in
sarb
cwtl
hlt
add
cmpsl
mov
or
iret
insb
or
mov
add
cld
pop
ret
add
pop
pop
in
push
mov
mov
or
arpl
pop
rolb
xchg
adc
pushf
and
pusha
aas
mov
cltd
test
aaa
rcr
rorb
add
pop
scas
sahf
movsl
push
fwait
xor
inc
mov
adc
mov
pusha
dec
and
insb
or
add
int
testl
cmp
out
nop
sub
xchg
add
dec
and
cmp
cmp
mov
jg
dec
xor
lret
add
pusha
popa
add
push
clc
cmpsb
jo
fmull
inc
movsb
xchg
sub
movsl
and
mov
cld
sti
push
push
mov
dec
inc
lret
xchg
and
pop
outsl
emms
push
mov
outsb
loope
enter
fbstp
sbb
jae
es
sbbl
jl
mov
dec
sbbb
mov
sbb
adc
notb
out
stos
das
roll
sbb
daa
push
testl
dec
test
call
insb
mov
jbe
loopne
shll
mov
dec
push
lahf
movsb
repz
mov
push
aam
add
jno
clc
jmp
sub
dec
loop
add
mov
inc
scas
lcall
xchg
call
mov
cwtl
icebp
jns
jb
shl
and
cmp
mov
add
pop
sahf
sbb
movsl
push
nop
xor
pop
and
cmpsb
ds
add
in
xchg
daa
push
push
add
mov
cmp
push
dec
jge
repnz
mov
scas
jmp
jae
jg
rorb
pop
addb
int3
lds
out
sub
add
sbbb
enter
sbb
movsb
adc
cmp
sbb
arpl
ja
shrl
lock
adc
adc
sbb
add
dec
lods
dec
test
inc
cs
and
add
jne
mov
mov
mov
addb
in
fcomip
pop
lea
jecxz
jns
add
add
fwait
add
add
pushf
adc
mov
xor
and
gs
cli
lret
add
and
mov
and
inc
and
push
push
fcompl
lret
leave
clc
fxch
push
pop
outsl
mov
loop
pop
and
or
mov
xorb
fldcw
xor
mov
or
inc
or
cmc
pushf
sbb
add
pop
mov
aas
push
add
add
aam
push
add
sbb
in
jp
cmp
roll
movsb
push
dec
add
shll
notl
cmp
inc
aas
mov
mov
ljmp
sub
xor
ds
test
inc
in
mov
shlb
jb
dec
pop
shll
cmpb
in
rorb
xchg
loop
loopne
jg
cmp
pop
add
jne
mov
aam
fdivl
adc
adc
int3
push
inc
xor
cld
loopne
push
out
add
inc
or
outsl
pop
mov
jnp
sub
lds
addl
cmp
mov
ret
js
xchg
xchg
add
xchg
pusha
and
pushf
jl
xchg
inc
jbe
add
in
sub
sub
shlb
cmp
cmc
xlat
pop
xchg
jp
add
ret
fistl
jb
cmp
insl
cwtl
es
adc
stos
or
out
pop
cmp
loopne
popf
dec
call
push
rcl
icebp
cmpsb
jnp
xchg
mov
and
loop
xorl
and
push
aaa
out
out
jb
add
into
icebp
scas
dec
mov
jb
repz
sahf
jp
mov
sti
add
mov
cli
hlt
imul
dec
and
test
sbb
lret
inc
add
pop
cmp
insb
push
add
cmp
xchg
adc
pop
rol
mov
add
data16
mov
xchg
sub
addb
out
pop
jns
jbe
add
mov
and
pusha
nop
test
insb
and
pop
cmp
mov
xor
pop
and
cmp
add
test
push
add
jo
dec
daa
mov
jmp
mov
cmp
mov
repz
xorl
shrl
addl
push
add
add
pop
test
jne
cmc
jno
add
leave
push
scas
ret
mov
outsb
jae
adc
add
popf
adc
jb
inc
aas
lret
imul
and
aam
in
stos
or
inc
push
mov
ds
inc
test
inc
in
in
dec
adc
push
lds
ja
out
ret
rcll
in
in
cwtl
and
and
cwtl
mov
je
push
pop
imul
xchg
pushf
xchg
push
mov
push
lea
jle
gs
jb
test
icebp
and
pop
insb
or
test
sub
aam
rolb
push
dec
xchg
jmp
pusha
pop
ljmp
cli
cmp
dec
movsl
lock
push
add
je
push
or
xchg
mov
out
cmpsb
mov
aas
fadds
nop
popa
cmp
mov
adc
xchg
out
add
imul
dec
shrb
loopne
add
and
dec
cmp
pop
xor
or
imul
aas
jmp
pop
ret
lcall
movsb
jge
sub
xor
scas
sti
add
inc
inc
xchg
push
mov
jno
jg
xorb
pop
add
call
pusha
pop
mov
xlat
mov
test
rorb
jmp
push
in
add
or
pop
call
dec
loope
jo
dec
adc
fs
cmp
test
sub
bound
sahf
inc
add
pop
and
out
in
in
test
int
stos
dec
jne
pop
add
movl
insl
test
dec
arpl
pop
bound
push
sub
add
in
aas
aaa
test
addl
sbb
jnp
loop
xchg
std
in
push
dec
lds
inc
call
xchg
mov
or
out
imulb
nop
ret
pop
mov
daa
pop
sbb
or
inc
sbb
mov
mov
jne
add
bound
jnp
lods
push
incl
push
enter
outsb
out
pusha
sbb
sbb
negl
xor
nop
and
or
add
in
mov
inc
ret
jo
dec
or
adcb
mov
cmp
dec
xor
inc
int3
aas
imul
add
jns
push
sbb
push
shl
lock
and
loopne
adcl
jg
or
jle
daa
insl
nop
pushf
lcall
nop
pop
xor
push
testl
mov
movsb
out
add
out
pop
lcall
lock
xchg
pusha
andb
inc
cmp
mov
and
add
cwtl
rcrb
andl
rclb
cmp
ljmp
xor
shrb
pop
ljmp
and
mov
dec
mov
jg
and
out
pop
enter
sub
xchg
sbb
adc
cmp
mov
push
push
mul
mov
add
mov
push
leave
mov
addr16
pop
xchg
adc
lds
or
adc
or
dec
sbb
adc
loop
add
loop
fwait
cmpsl
jbe
orb
mov
sbb
push
mov
xchg
adc
and
push
mov
mov
repz
jbe
mov
sar
cmp
xor
dec
cmp
pop
xchg
pop
mov
imul
sub
aaa
cmp
dec
cmc
inc
scas
and
popf
adc
loopne
add
sbb
movsb
stc
dec
xor
add
lods
adc
jb
fsub
sbb
orb
pop
jo
arpl
adc
add
loop
inc
push
xchg
mov
add
pop
js
xor
pop
cwtl
loopne
dec
adc
cmp
lea
adcl
dec
mov
cwtl
and
fistl
shlb
adc
mov
xor
and
je
sbb
sbb
pushf
sub
add
cmpsb
scas
xchg
dec
inc
shlb
aam
add
mov
ret
rcrl
pop
push
mov
jnp
shl
popa
bnd
shlb
mov
xchg
out
mov
insl
push
xchg
cmp
and
nop
mov
out
js
adc
in
enter
xchg
dec
dec
cltd
scas
mulb
into
lock
xchg
nop
leave
fwait
xchg
fists
add
out
push
mov
fstp
jl
dec
fiadds
cmp
sub
add
jb
movhps
inc
fcomps
lock
jl
sbbb
inc
mov
pop
inc
and
adc
push
ret
lock
repnz
ss
add
jmp
dec
add
mov
scas
push
cmp
pop
mov
enter
inc
out
mov
xor
adc
jle
scas
sbb
inc
and
out
xorl
mov
dec
add
cmp
sbb
dec
or
mov
jmp
cmp
mov
or
mov
call
sub
lret
out
movsb
push
cmpsl
inc
roll
jp
jns
rolb
call
sub
stos
dec
push
push
jo
add
push
clc
adc
sbb
pop
inc
mov
aas
mov
or
xchg
icebp
add
scas
add
and
loope
data16
jl
dec
xlat
inc
ja
mov
fsin
and
stc
pusha
sbb
push
fsubl
add
xchg
add
cmp
xchg
adc
add
cmp
adc
and
and
inc
hlt
lret
push
mov
sub
sbb
xor
ljmp
pop
jecxz
loop
enter
jmp
or
mov
and
movsb
ret
push
mov
outsb
or
in
lods
add
jle
inc
call
out
shlb
mov
cmp
nop
pop
faddl
add
cwtl
jmp
adc
cmp
pop
xor
cmpsl
js
xchg
cmp
dec
ds
xchg
push
int3
xor
sbb
arpl
add
sbb
push
and
sub
dec
add
orl
out
in
ret
sub
fiadds
or
jp
xchg
add
or
lock
dec
adcb
add
call
loop
gs
add
push
cmovae
inc
add
xor
sahf
dec
add
addb
mov
sub
lret
mov
shlb
hlt
adc
outsb
rcrl
xor
dec
icebp
adc
and
ljmp
mov
or
push
add
popf
push
mov
loop
testb
add
sub
fs
jecxz
sbb
je
pop
cmc
sbb
movsl
dec
adc
inc
dec
mov
xchg
add
sbb
xchg
notb
loope
out
outsl
and
sbb
sbb
and
sbb
not
jecxz
fistl
adc
loopne
ror
mov
mov
rorb
add
xchg
xchg
daa
jg
and
xor
shr
sbb
add
sbb
enter
xchg
adc
xchg
jo
test
imul
fidivs
add
adc
xor
xchg
imul
mov
neg
lea
mov
loopne
sub
add
jae
ljmp
in
js,pt
arpl
nop
fiaddl
int3
idivb
pusha
test
test
inc
mov
push
jns
popf
dec
inc
aad
out
sub
mov
int3
aaa
rcrb
mov
call
movsl
pushf
xorl
jnp
lock
push
pop
test
pop
inc
in
jecxz
mov
or
pop
fs
lods
inc
test
xchg
mov
add
or
and
inc
ds
js
cld
int3
pop
xchg
or
fwait
mov
inc
clc
add
bound
negb
mov
cltd
and
adc
test
push
arpl
cwtl
adcb
jae
add
mov
enter
mov
push
in
and
imul
mov
mov
or
rorl
rorb
pushf
les
add
mov
pushf
loope
mov
lds
or
adc
inc
sub
push
shlb
add
sbb
iret
daa
xchg
mov
fcompl
mov
arpl
push
out
cltd
subb
sbb
push
call
push
fadds
dec
fmuls
lcall
adc
test
pop
add
movsl
xor
pop
pop
inc
add
fdivr
jle
dec
in
imul
cmp
cmpsb
ret
out
mov
mov
int3
jl
cli
lock
jnp
cmpsb
jne
push
insb
sbb
out
jmp
cmc
lds
cmp
and
sub
fstl
or
mov
hlt
out
add
mov
scas
out
fldl
add
add
push
mov
mov
or
sbb
mov
mov
movd
cltd
roll
fs
jecxz
or
mov
dec
and
mov
pop
dec
fisubrs
jp
adc
cmp
xor
xchg
jmp
movsb
inc
push
sbb
outsb
aam
xchg
pusha
ret
roll
or
pop
mov
cmp
inc
sub
and
out
icebp
push
mov
jl
sub
push
mov
cmpsl
add
cmp
hlt
or
jp
out
ret
push
lcall
arpl
dec
xor
cld
pusha
or
jbe
cmp
in
adcl
mov
sbb
pusha
in
inc
imul
das
shll
add
push
and
dec
mov
imul
lret
adc
js
sub
sub
out
xor
lock
or
dec
cmp
xor
adc
fs
jle
rolb
mov
out
or
icebp
cmpsb
push
xor
and
test
jl
add
cld
mov
jp
lret
in
idiv
flds
lock
movsb
cmp
mov
sti
adc
sbb
adcb
mov
pop
jl
sbb
pushf
xchg
std
faddl
test
ret
out
dec
pop
js
repnz
mov
add
out
popf
test
scas
mov
aaa
pop
push
je
mov
repz
adc
or
and
int
mov
push
add
sub
xchg
mov
jno
or
fnsave
popa
jp
insl
fs
ja
sub
add
jmp
in
mov
jge
xchg
nop
pop
arpl
add
js
fs
and
nop
pop
dec
inc
xor
daa
call
jl
aas
adc
in
scas
add
stc
orl
insl
sbb
add
adc
in
mov
rcll
xor
dec
fsubrp
push
jbe
mov
sbbb
popf
jg
or
push
je
hlt
push
test
sbb
lock
je
into
push
pop
mov
popa
mov
adc
leave
in
in
loop
repnz
mov
lret
jno
push
enter
inc
pop
les
jge
inc
mov
xor
xor
aam
xchg
jge
iret
push
leave
mov
enter
mov
xchg
mov
clc
xchg
loop
fwait
insl
sbb
out
pushf
xchg
xchg
insb
jbe
shll
mov
cmpsl
mov
push
jg
pop
pop
add
aad
mov
add
push
and
pop
cltd
rcrb
scas
nopl
mov
xor
ror
xor
xor
push
mov
add
mov
repnz
aad
adc
add
push
jle
es
sbbb
add
push
es
push
inc
xchg
mov
lret
decl
pop
mov
inc
sub
dec
fldcw
and
lcall
dec
cmp
push
mov
or
push
lock
loopne
pusha
sub
sbb
jmp
sar
mov
in
out
cmpsb
jb
lods
add
push
add
cld
push
dec
pop
add
and
enter
push
mov
dec
adc
push
mov
aas
or
lock
add
mov
jb
fcoml
ret
or
int3
and
or
and
out
add
sbb
push
hlt
and
sub
ret
popf
cld
mov
das
rolb
sbb
aam
add
mov
fldenv
mov
filds
cld
mov
ret
out
mov
dec
mov
movb
mov
andb
xor
xor
add
cltd
push
inc
sub
or
mov
mov
mov
xor
into
sub
cmpsl
rcr
jg
roll
pop
pusha
lcall
mov
and
mov
inc
out
icebp
sub
xor
jge,pn
push
push
and
sbb
filds
xor
pop
mov
xchg
push
xchg
mov
loopne
mov
inc
out
and
push
mov
ds
test
loope
push
out
pop
stos
lods
sahf
push
push
pop
xchg
ret
shll
or
and
in
push
inc
lods
pop
lahf
nop
fs
mov
lcall
cmp
mov
sti
jnp
dec
int
pop
rep
icebp
ja
aad
rcrb
and
and
shl
fs
dec
mov
shlb
popf
mov
xor
mov
dec
pop
sub
cmp
and
cmp
ljmp
mov
es
jae
mov
mov
xor
jmp
sub
icebp
stos
xor
scas
mov
mov
dec
adc
and
sub
add
test
push
pop
and
inc
jnp
aas
popf
sbb
out
subl
or
add
sbb
cmpsb
movl
adc
insl
out
mov
push
jo
sub
sub
cltd
fwait
xchg
or
cwtl
test
mov
xor
or
pop
repz
xor
pop
mov
xchg
lcall
je
adc
push
clc
adc
cmp
fldt
sbbb
fsubrs
cld
ret
and
fbstp
out
jl
add
sbb
push
cmpb
lock
or
push
add
pop
xchg
and
out
cld
sub
add
lret
sbb
outsb
add
adc
cwtl
push
lahf
add
cmp
xor
sub
test
cwtl
inc
or
push
cwtl
and
xchg
push
push
cmp
mov
pop
and
sub
add
pushf
ja
pop
jge
sub
int3
add
in
jne
cmpb
add
inc
scas
out
popf
mov
cmp
push
outsb
pushf
in
add
movsb
add
add
test
das
pop
clc
mov
sbb
add
popl
lea
in
lret
test
jae
xchg
mov
daa
lds
jno
adc
cmpsb
fwait
pop
pshufw
cmpsl
and
push
and
das
xor
push
daa
or
mov
icebp
xor
xor
mov
mov
mov
jg
aaa
dec
jae
dec
jo
mov
out
repz
lock
in
fcoms
movswl
pusha
mov
out
sbb
dec
pop
rcrb
add
cld
ljmp
pop
sub
mov
andb
pushf
add
arpl
pop
xchg
fs
jmp
xchg
adcb
push
add
xor
addb
push
je
and
pusha
xor
rorb
andb
mov
insl
xchg
pop
xor
movsb
mov
add
adc
inc
or
mov
popa
loope
adcl
push
and
rcl
push
enter
cmp
xor
mov
je
add
xor
sub
cmp
loopne
mov
int3
xchg
push
and
or
shlb
js
add
add
std
gs
dec
pop
ret
add
inc
sbb
pop
mov
jp
out
add
and
or
sub
dec
add
cmc
outsl
or
and
sbb
pushf
sub
inc
mov
add
inc
aam
sub
pop
hlt
add
sub
insl
or
push
sar
pushf
cmp
xor
subl
dec
mov
lea
add
arpl
mov
cmpb
pop
leave
add
xor
loope
and
push
test
daa
push
ret
int
lods
enter
xor
inc
inc
mov
push
xor
ss
popf
out
dec
inc
sub
bnd
add
mov
pop
mov
sbb
dec
add
add
pop
addb
fnstenv
adc
fists
and
jo
test
inc
adc
xchg
add
mov
add
or
push
fstpl
add
popf
dec
ret
adc
push
add
sub
mov
movsl
or
sti
push
nop
cwtl
jb
nop
sub
add
dec
sbb
pusha
mov
enter
push
and
test
movsb
shlb
imul
add
jnp
xchg
or
sbb
cmp
hlt
popf
test
dec
adc
push
pop
aaa
cltd
inc
fcmovbe
pusha
sti
mov
xor
or
dec
sar
jmp
mov
cmp
in
xchg
int3
jno
add
dec
fistl
aam
push
into
add
cmc
andb
jge
adc
inc
rcl
cmpsb
push
add
dec
clc
and
pop
or
add
jbe
mov
leave
enter
outsl
pushf
arpl
add
mov
hlt
xor
pop
pop
incl
xchg
ja
mov
pop
aad
call
xor
test
jns
loopne
jbe
add
dec
xlat
data16
jo
mov
sub
and
xor
jnp
push
je
lds
rorb
mov
out
jnp
stos
push
inc
add
sti
mov
dec
int
mov
cmovl
cmp
pusha
cmc
or
test
xor
cwtl
mov
sub
inc
mov
pop
mov
mov
lahf
addl
addb
xchg
subps
faddl
sub
mov
lods
jp
mov
movsl
or
sbb
test
and
ja
ds
es
aaa
sub
mov
cmp
imul
je
les
or
sbb
loopne
jl
std
jae
inc
ret
addr16
les
fsubs
adc
and
dec
or
add
fsubs
repnz
cmpsb
shlb
sub
mov
cmp
leave
outsl
icebp
jbe
arpl
test
stos
lds
enter
xchg
and
fst
inc
inc
inc
add
xchg
psubd
fstpt
push
inc
aam
add
movsb
pop
fistpll
adc
cld
xor
add
cmp
lds
dec
cmp
or
mov
mov
xor
or
sub
add
add
and
dec
out
cltd
leave
rclb
cmp
lret
sub
inc
rorb
popf
add
inc
mov
xor
mov
aam
call
add
cmovnp
and
mov
in
sub
jge
dec
push
or
or
add
into
xlat
call
xchg
in
jbe
xor
adc
out
inc
dec
mov
cmp
insl
pusha
dec
into
rcll
push
mov
pop
stc
sbb
rorb
rcl
xchg
dec
adc
xchg
mov
jo
pop
cmp
add
sbb
hlt
sti
mov
inc
pop
sub
xor
push
push
pop
add
and
lret
ret
add
inc
cmp
dec
enter
pushf
lds
aam
cmp
inc
jo
movsl
push
pop
aam
xchg
mov
mov
dec
loopne
mov
stos
fmull
rcrb
pop
inc
jge
sub
pop
js
test
sbb
int
jg
popf
shlb
fdivs
addb
cmpsb
std
xor
jno
loopne
loope
dec
adc
jmp
fsubrs
fs
cli
adc
in
jmp
and
mov
cmp
push
pushf
sbb
popf
sub
mov
rcrb
adc
int3
add
xrelease
dec
and
jge
ret
cmp
stc
pop
in
out
dec
int
and
test
dec
outsl
sbb
sbb
cmp
daa
push
pop
add
and
push
js
jne
dec
and
stc
inc
sbb
inc
pushf
inc
sub
lods
add
jg
js
mov
lock
std
fdivp
inc
dec
add
repnz
jno
add
leave
inc
sbb
rclb
testb
jl
test
jno
pop
xchg
cmpsb
rorl
jle
nop
or
cld
test
les
mov
movsb
sub
push
mov
cmp
test
pop
out
ret
shlb
cmp
xor
mov
mov
sbb
pop
leave
jl
mov
or
dec
and
inc
int3
cmp
dec
shlb
stos
mov
cmpl
scas
sbb
sar
repnz
in
cwtl
mov
rcll
arpl
xchg
insb
call
adc
cmp
add
out
int3
dec
sahf
inc
add
inc
mov
mov
int3
xchg
pop
inc
hlt
pop
push
dec
jbe
add
xchg
xchg
mov
add
decb
mov
test
sub
cmp
push
call
xor
addb
andb
stos
dec
or
gs
out
xchg
mov
jne
inc
xor
movsl
sub
push
sub
js
add
or
add
movsb
cmp
sti
or
xor
xchg
fs
rclb
add
bound
push
dec
cwtl
sbb
sahf
push
add
adc
jnp
lock
mov
int
xor
mov
xchg
cmpsb
mov
add
lcall
nop
add
lret
or
nop
xchg
inc
loope
add
dec
test
mov
pop
fs
jb
sbb
jge
cmp
mov
jb
js
add
gs
out
add
push
std
mov
inc
test
out
mov
fimuls
add
mov
or
add
sbbb
cwtl
dec
es
adc
out
nop
xor
adc
insb
sbb
push
ds
insb
jecxz
inc
sub
idivl
mov
loope
sti
arpl
test
rolb
inc
or
mov
aas
rolb
adc
insl
mov
jno
mov
add
icebp
xchg
jg
pop
xchg
xor
mov
adc
push
mov
dec
jno
sahf
pusha
inc
mov
sbb
mov
nop
add
and
dec
inc
adc
je
lock
dec
pop
cmp
sbb
out
ror
mov
add
xchg
adc
cmp
orb
std
scas
repnz
xlat
xchg
clc
ret
add
fldcw
jno
add
cld
in
rcrb
outsb
cmc
or
aas
xor
pushf
xor
and
leave
dec
xor
inc
or
sub
xchg
pop
jno
sbb
adc
xchg
dec
hlt
and
mov
or
sahf
movsl
ret
les
and
push
fdivl
inc
pusha
into
inc
sub
or
nop
int3
push
jb
jecxz
xchg
pop
mov
adc
mov
and
or
add
inc
shlb
sbb
jp
add
sub
add
daa
jmp
and
add
adc
movsl
sub
adc
rcrl
and
shl
pop
out
push
aad
in
xor
mov
test
adc
add
sub
ja
js
dec
enter
add
sub
dec
je
or
dec
mov
pop
sub
add
add
fcmovu
push
jmp
loope
ds
gs
mov
and
jg
add
xor
pop
jne
dec
popf
add
sarb
mov
push
xchg
call
push
mov
xor
sahf
xchg
hlt
sub
inc
addb
cmpsl
sarl
dec
jno
mov
popf
dec
dec
push
test
mov
gs
sub
push
out
xchg
fadds
shrb
and
mov
aas
pop
and
lock
stc
xchg
adc
add
jl
movsl
mov
mov
in
or
rorb
inc
push
loop
and
sub
sbb
popf
jns
sarb
fsubl
sub
or
dec
push
leave
mov
dec
xchg
jp
in
sbb
mov
jg,pn
out
add
mov
xchg
inc
mov
inc
cs
sbb
jp
add
lret
pop
sub
cmpb
dec
incl
xor
push
mov
jp
out
in
jg
add
or
push
jnp
jnp
mov
addb
pushf
test
test
inc
adc
sbbb
pop
pop
loopne
or
or
icebp
cmpsb
mov
and
cwtl
into
inc
add
loopne
test
mov
add
imul
dec
repnz
fists
rcl
xchg
jo
gs
sbb
inc
mov
mov
add
adc
popa
jne
mov
les
ss
sbb
les
test
push
ret
pop
fisubrs
xchg
into
js
sbb
jb
popf
aaa
shr
mov
mov
inc
inc
shlb
stc
and
inc
jbe
sbb
xchg
or
ljmp
enter
jo
je
loopne
sbb
dec
jmp
cmpb
mov
sub
add
loop
adc
ja
add
dec
mov
mov
sarl
outsb
les
xor
adc
mov
lods
mov
imul
jmp
cmp
popf
mov
jp
adc
fimuls
dec
push
add
loop
add
jno
nop
adc
out
cmp
xor
nop
je
mov
insb
popf
nop
pop
cmp
loopne
dec
add
popf
orb
out
lds
mov
fldl
or
sti
jo
aas
adc
fsubp
and
movsb
pop
cwtl
stos
mov
test
mov
and
fbld
sbb
imul
sbb
int3
adc
add
call
rolb
cmp
lcall
rcr
and
pushf
xchg
lcall
outsl
or
and
xchg
fs
xchg
adc
add
stc
imul
orl
insb
jo
sbb
xchg
das
push
sbb
xor
popa
loope
imul
xor
movsb
sub
push
cli
pop
aam
neg
sbb
mov
xor
rcrb
push
push
push
fbld
push
fsubr
repz
pushf
sbb
adc
mov
adc
loop
xor
nop
adc
sub
mov
dec
add
shl
push
push
dec
cld
cmpl
add
adc
nop
inc
or
nop
test
shrl
mov
sbbl
and
mov
adc
bound
scas
ljmp
sub
adc
nop
jo
dec
rorl
stc
xchg
add
dec
cmp
add
clc
and
mov
jmp
add
loop
aaa
sub
add
fcompl
pop
inc
cs
add
rorb
jne
or
or
dec
add
pop
add
aad
div
lret
or
jmp
rorl
pop
icebp
and
jnp
sub
cmp
pop
xchg
jmp
rclb
lret
jecxz
sub
aaa
or
jl
inc
mov
jmp
and
lods
insb
or
inc
fimuls
cmp
xchg
cmp
je
mov
sub
jns
sub
jno
pushf
xchg
aam
inc
mov
mov
inc
mov
pop
xchg
and
dec
sbb
in
jp
pop
inc
or
xchg
and
pop
mov
lock
xor
add
xor
mov
lea
insl
pushf
jle
ret
pop
or
cmp
out
xchg
test
andb
popl
and
mov
ss
push
pop
insb
and
sti
mov
add
mov
add
inc
jg
jmp
xorb
and
repnz
rclb
push
test
nop
mov
leave
adc
inc
rolb
mov
lds
loop
loopne
add
push
cmp
mov
out
jg
add
inc
and
int3
aaa
and
ljmp
pop
mov
dec
mov
pop
je
test
add
mov
add
in
mov
leave
je
inc
into
out
andb
add
dec
sub
jmp
lds
dec
xchg
mov
sti
xor
adc
sahf
mov
rcll
fucom
mov
in
mov
jge
fwait
inc
lret
jp
cld
dec
int3
das
add
pushl
add
push
dec
add
dec
