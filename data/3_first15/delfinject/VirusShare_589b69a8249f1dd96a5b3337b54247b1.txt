xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
push
xor
pop
ret
add
ret
add
popl
push
pop
push
xchg
mov
push
xchg
add
push
xchg
add
xor
push
xor
pop
xchg
popl
push
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
xchg
add
ret
pop
push
xchg
ret
xchg
popl
push
ret
push
pop
push
pop
mov
mul
push
pop
push
pop
push
pop
push
addl
pop
ret
push
pop
ret
push
pop
ret
push
addl
pop
ret
push
pop
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
call
push
push
push
call
push
call
push
push
push
call
push
push
push
push
call
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
call
pushl
pop
call
push
push
push
call
push
call
push
push
push
push
call
push
push
push
push
call
push
cmp
jae
ret
pop
call
bound
test
iret
inc
mov
inc
frstor
lock
adc
imul
cs
les
cmovne
sbbb
pop
sub
inc
scas
inc
pop
imul
lret
cltd
clc
pop
je
mov
sbb
insb
push
out
fldcw
lea
cmp
mov
into
jne
push
loop
jg
jg
cmpsl
push
cs
sbb
leave
sub
mov
mov
cmpb
inc
mov
adc
cwtl
jnp
bound
cmp
jecxz
mov
inc
mov
sub
cmp
movsb
fiaddl
call
call
xor
cwtl
lret
imul
xlat
adc
and
mov
leave
mov
call
nop
cli
mov
cld
jmp
cmp
dec
xor
popa
lods
jmp
mov
scas
jl
mov
out
arpl
std
add
jecxz
cmp
ret
mov
lods
cmc
push
xchg
rorb
lds
push
mov
adc
xchg
ret
iret
inc
in
and
adc
loopne
aaa
rcll
ret
js
xchg
xor
shlb
xchg
scas
mov
sub
les
xchg
xchg
push
stc
jb
les
jne
nop
and
mov
jno
dec
std
decb
inc
xor
idiv
pop
pop
cs
nop
mov
rorb
xchg
fisubrs
dec
push
andb
fmul
cmpsl
dec
ja
or
pop
scas
out
insb
pop
sbb
aas
fs
jbe
dec
stos
leave
and
ret
adc
sub
sbb
icebp
mov
or
cld
ret
es
test
rcr
jmp
fwait
adc
call
cmp
cmp
icebp
cmpb
push
jb
xchg
xchg
sub
popf
into
aad
das
std
sub
cmp
xor
out
xchg
inc
or
scas
cwtl
cmp
arpl
cmp
fbstp
xchg
inc
inc
cmp
push
loopne
pop
pop
imull
mov
sbb
cmp
xor
inc
mov
das
lret
sbb
adc
testl
cmp
ja
mov
imul
or
add
pop
frstor
push
push
adc
cmpsl
push
sti
test
dec
shl
cli
daa
sbb
add
or
push
xchg
pop
xchg
xor
int
hlt
adc
ljmp
imul
sarl
pop
inc
push
inc
add
loop
mov
cmp
or
dec
ss
xchg
mov
sbb
pop
push
cmp
dec
icebp
shl
sbb
adc
and
subl
mov
push
cli
push
inc
mov
cmp
inc
jo
gs
test
add
xchg
pop
jge
cmp
jge
xchg
cmpsb
repnz
add
lock
lods
cmp
int
out
xchg
xchg
inc
jno
inc
sbb
jb
xchg
sbb
rclb
ljmp
icebp
js
push
addr16
ret
dec
inc
jo
hlt
mov
out
jne
xor
lcall
outsl
xchg
rcr
pop
out
inc
mov
pop
inc
adc
dec
dec
jae
xor
divb
test
or
aaa
idivb
cs
fwait
repnz
nop
lods
fisubrs
or
and
jle
cmpsl
and
pop
push
lahf
test
sub
mov
sub
movsb
mov
or
lock
xor
fcompl
fwait
dec
add
scas
mov
scas
daa
adc
ss
pop
daa
sbb
adc
jecxz
out
cwtl
jmp
je
sti
push
dec
rol
push
cmp
loope
jns
fbld
xor
adc
lret
pop
jbe
pusha
jg
imul
adc
pop
inc
clc
hlt
sahf
inc
into
lahf
scas
or
push
jo
idivb
stc
loope
fists
push
pop
repnz
jle
lods
pop
push
lods
pop
enter
inc
mov
push
outsb
ss
mov
xchg
insb
push
ret
adc
pop
inc
stos
mov
cltd
lock
cmp
dec
xchg
jne
iret
addr16
sbb
fnsave
shl
ds
jmp
cmp
mov
mov
insl
scas
fwait
mov
xorl
sub
ds
lret
jle
mov
pop
mov
adc
cwtl
cmp
scas
aad
jmp
loopne
adc
inc
push
outsb
xchg
sub
insb
mov
xor
aad
and
dec
cmc
js
dec
pop
imull
jecxz
xor
jns
xchg
push
rcrl
jmp
clc
pop
push
fdivrp
idiv
icebp
jo
and
ja
add
pushf
xchg
xlat
fwait
lods
mov
cmp
inc
lcall
icebp
pop
enter
std
sub
insb
and
sbb
mov
inc
adc
sbbl
mov
js
gs
in
inc
jmp
outsl
xchg
pop
or
jmp
mov
cwtl
mov
movsb
sub
sbbl
jg
repz
dec
xchg
xchg
xlat
bound
pusha
sub
std
mov
outsl
in
lcall
in
xor
int3
or
loop
ss
sahf
scas
xchg
setp
test
or
mov
into
mov
mov
cmp
lahf
xchg
and
jg
add
in
or
push
xorb
mov
xor
dec
popf
push
add
gs
iret
inc
je
cwtl
jg
lock
jne
repz
xchg
adc
repnz
test
es
mov
push
aad
jo
pop
lock
lock
ret
cmp
loope
sti
push
and
mov
jg
jae
and
push
dec
pop
call
dec
mov
ficomps
addl
imul
xchg
dec
lcall
scas
push
scas
and
mov
out
fstp
dec
xchg
xlat
and
xlat
pop
adc
aaa
or
cmp
sbb
ds
bound
pop
adc
xor
mov
dec
dec
stos
sarl
xchg
cld
push
dec
mov
mov
lock
scas
int3
test
je
fiaddl
adc
sub
push
and
cli
je
stos
jno
movsl
xchg
es
mov
mov
test
jbe
mov
inc
jg
out
decb
inc
jmp
dec
ljmp
add
cmp
rsm
push
xchg
cmc
fdivrl
pop
mov
data16
daa
xor
adc
cmp
mov
cli
cmp
in
imul
aaa
push
loope
js
repz
or
lret
xchg
or
dec
xor
mov
jnp
fucomip
add
movsl
adc
scas
fdivp
mov
sbbb
movsb
iret
inc
movsl
mov
xor
pop
imul
test
adc
mov
add
dec
mov
dec
dec
xor
enter
lahf
call
dec
pop
xor
mov
jge
into
rclb
ds
out
mov
xchg
push
push
inc
pop
in
mov
int3
movsl
jo
xchg
add
aad
adc
mov
loop
jne
xchg
or
jne
movsb
gs
mov
sbb
jns
jg
test
dec
mov
pop
sub
movsl
ret
xlat
pop
push
in
mov
jae
xchg
pop
icebp
xor
xchg
jmp
das
je
sbb
xchg
mov
mov
xchg
imul
mov
or
mov
ljmp
addr16
inc
in
jecxz
arpl
into
rorl
and
jle
scas
int3
xor
push
nop
lret
sub
pusha
mov
loope
fmul
in
icebp
into
mov
js
jge
aaa
dec
popf
jbe
sub
repnz
sbb
imul
cmpsb
out
sbb
imull
cmp
adc
push
mov
xchg
mov
lcall
popf
push
adc
scas
inc
test
fstpl
inc
stos
out
fnstcw
jae
and
cli
inc
pause
lret
cltd
mov
fimuls
and
add
jl
stos
sub
add
jg
in
jne
xor
jo
jge
cli
push
into
pop
adc
mov
aas
loope
lods
loopne
repnz
dec
int3
cmpsl
fimuls
les
imul
and
int
dec
std
into
sbb
stc
cmp
sub
mov
icebp
push
into
and
dec
mov
mov
inc
push
sub
or
ljmp
pop
xor
aam
es
cmp
aaa
push
cmp
aaa
pop
insb
cmp
sub
sbb
sarl
insb
fists
sbb
xlat
jns
jge
lds
aad
mov
or
pop
pop
dec
inc
xchg
mov
out
xor
clc
aam
popa
jns
iret
mov
lret
or
rorb
pusha
aas
icebp
out
xor
mov
cmp
or
inc
jge
pushf
lret
jl
xchg
cmpxchg
lods
sub
mov
inc
cmpsl
pop
jo
mov
fnclex
dec
mov
loopne
add
outsb
stos
jno
pop
or
nop
std
xchg
mov
mov
push
sub
adc
add
jo
adc
ds
idivl
pop
dec
pushf
push
pop
sub
in
dec
sbb
xchg
cld
push
test
imul
inc
les
sbb
mov
pop
sub
jnp
mov
dec
cli
addr16
outsb
into
cltd
js
hlt
or
dec
mov
xorl
roll
fdiv
cmpsb
mov
test
data16
sub
out
mov
shlb
jo
fistl
iret
stos
inc
leavew
or
cmp
or
and
mov
cmp
arpl
cmp
push
inc
dec
mov
dec
adc
push
xchg
std
pop
xor
cmp
jo
cmp
sub
push
mov
je
pop
pop
pushf
add
insb
adc
dec
xchg
das
cwtl
popl
mov
pop
loope
fisttpl
loop
push
sub
hlt
sahf
inc
out
fdivs
bound
ret
setge
push
xchg
xor
xor
or
data16
icebp
ret
clc
jecxz
sub
mov
ret
lahf
nop
out
adc
dec
push
push
inc
xor
adc
jge
mov
stos
mov
and
push
jbe
les
mov
push
jl
jg
stos
test
stos
notb
das
loop
xor
loopne
cld
cwtl
pop
shrl
adc
dec
test
jl
out
pop
push
out
fmuls
xchg
push
in
adc
pop
sarb
adc
ds
inc
xor
push
xchg
mov
add
or
jp
mov
inc
xchg
sub
dec
mov
je
sbb
lahf
push
ljmp
push
and
push
lods
xor
pop
dec
xlat
out
or
xchg
mov
adc
mov
inc
mov
dec
pop
jl
sti
or
repnz
rol
jns
orb
rcr
dec
xor
add
leave
mov
imul
dec
cld
push
sbb
push
dec
xchg
hlt
xlat
cmp
mov
out
inc
sub
cmpsb
or
bound
loopne
int3
dec
sbb
cs
add
adc
push
dec
xchg
stos
scas
or
sub
movsb
testl
dec
insl
fs
mov
mov
arpl
add
mov
in
jecxz
sbb
movsb
gs
jb
outsb
lods
xor
xor
mov
sub
ja
mov
repnz
mov
ds
cli
inc
cmp
clc
and
cmp
xchg
inc
pusha
jp
xchg
inc
fldenv
lahf
fbstp
and
jae
data16
jnp
dec
add
sbb
jl
pop
mov
pushf
out
xchg
shll
arpl
enter
adc
mov
arpl
ja
dec
pop
aas
cmpsb
mov
or
mov
int
sbb
cld
loope
aam
push
sbb
or
pop
cmp
inc
je
pop
aam
test
lret
sti
cmovs
test
adcl
cmpsl
movsb
sub
lock
pop
loope
xchg
xchg
pop
dec
adc
in
xor
loop
mov
push
adc
push
cltd
lcall
popa
je
enter
fwait
shll
pop
mov
mov
dec
xchg
je
xor
cmpb
pop
stc
nop
xor
push
je
mov
imul
cmovg
jno
roll
push
je
jnp
aas
in
int
mov
cli
pop
arpl
iret
je
stos
nop
add
mov
loope
pop
pop
js
fstps
bswap
pop
ljmp
insb
dec
hlt
mov
jle
mov
test
divl
pushf
cmc
rolb
cmp
sahf
inc
lods
sbb
js
lods
xor
dec
mov
fsub
cmc
adc
bound
cmp
out
xor
push
push
jnp
xor
aam
punpcklwd
mov
outsl
shlb
push
mov
jg
iret
mov
or
out
dec
adc
divb
fsubl
adc
inc
inc
rcr
jno
mov
inc
cmp
movzbl
mov
dec
mov
es
mov
xchg
cmp
mov
jge
pusha
push
popf
fwait
cld
cmc
fsubl
cmp
push
push
aad
pop
shll
pop
cmp
pop
add
sub
cmpsl
dec
pushf
inc
stos
xor
jae
cmp
adc
gs
xchg
lcall
mov
sti
dec
lock
sbb
stos
pop
fadds
fs
push
fs
cmp
sbb
push
iret
jp
dec
adc
lods
addb
ds
test
outsb
mov
jns
push
sub
mov
dec
mov
cmc
xchg
lcall
inc
fwait
mov
into
aas
jg
cmpsl
rorb
fmul
shll
push
sti
scas
roll
jns
pop
mov
jl
sbb
jbe
test
inc
push
sbb
sub
mov
jns
jle
xor
mov
push
push
adc
fistpll
mov
lret
lods
shrb
pop
push
das
shrb
push
inc
nop
pop
pop
dec
outsl
out
jb
push
cltd
add
insb
cld
sbb
and
jnp
fs
mov
xor
enter
or
add
push
sub
in
pop
jl
iret
sub
into
cmpsl
jae
imul
enter
in
sub
aam
stc
ljmp
pushl
jns
dec
and
jmp
pop
and
cltd
jnp
pusha
xorl
sub
add
out
lret
mov
xchg
dec
cld
mov
popl
cmpl
dec
xor
adc
add
out
and
lret
jl
push
iret
inc
les
jp
mov
std
int
jne
mov
inc
sub
fnstcw
jecxz
pop
add
xor
mov
lret
into
mov
pop
test
mov
imul
cmp
cmp
rcr
jbe
adc
and
ljmp
cmp
out
mov
cmc
mov
stos
insl
push
jnp
or
lea
movsb
repnz
inc
popf
xor
scas
mov
shll
jns
stc
cmpsb
sub
inc
dec
xor
fnstsw
test
nop
fwait
mov
cmpsb
iret
mov
subb
out
rcrb
fsubs
jecxz
dec
pop
hlt
adc
add
add
int3
jae
push
dec
ds
incb
inc
xor
enter
adc
pop
fiaddl
and
adc
or
test
pop
ljmp
movsb
inc
divl
push
push
mov
test
in
xor
fidivrl
divl
outsl
repz
push
push
push
mov
imul
xchg
xchg
scas
xor
lret
or
push
mov
fdivp
jmp
ljmp
shl
sahf
sub
mov
das
hlt
call
sub
cmpsl
adcb
xchg
add
cmp
jns
test
push
jmp
mov
xchg
test
js
jle
mov
pusha
mov
out
push
ret
pop
lea
xchg
jo
ret
dec
pop
sub
cmc
jae
sub
cmpsb
jg
xchg
pop
add
movsb
fsubrl
and
mov
mov
mov
daa
push
jle
push
add
rcr
push
das
cmp
inc
loopne
iret
cmpsl
lds
cmc
cmp
pop
pop
mov
repz
imul
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
out
and
icebp
jle
cs
xchg
inc
or
push
xorb
popa
mov
dec
push
add
push
xor
cmpl
pop
aaa
add
in
mov
pop
rolb
int
iret
mov
adc
scas
add
mov
pop
mov
mov
xor
xchg
cmc
fmuls
fistps
sbb
pop
stc
loop
pop
push
and
mov
lods
and
mov
cmp
mov
inc
jb
sbb
out
fdiv
push
xchg
xchg
jb
adc
call
add
insb
dec
iret
mov
cmpsb
rol
xlat
xchg
mov
sbb
mov
fmull
mov
repz
mov
xchg
or
push
test
jno
repz
jle
xchg
mov
jbe
jl
pushf
pusha
rorb
js
inc
pop
lods
mov
push
loopne
lods
xor
xchg
call
pop
orl
aas
or
push
xchg
add
cmp
and
scas
je
test
push
push
mov
ja
push
sub
js
cmp
jae,pn
xor
addl
pop
in
les
dec
xor
cld
sbb
jae
cmp
sti
outsl
aam
inc
faddl
das
test
inc
pop
mov
and
mov
mov
and
loope
notl
inc
out
int
cmp
mov
js
std
ret
add
cld
sbb
or
mov
sbb
movzbl
insl
push
daa
or
push
movsl
push
bound
lods
in
scas
les
call
sbb
or
adc
stos
adc
loopne
call
pop
ret
xchg
mov
dec
mov
aam
adc
movb
xlat
dec
stos
pop
pop
or
adc
adc
push
pop
xor
jb
or
add
and
mov
out
iret
push
popf
jo
scas
xor
insb
fnstsw
and
inc
push
jle
ret
in
jp
cltd
xor
in
pushf
aad
jmp
xor
mov
pop
push
es
sub
sub
xchg
or
daa
lock
jne
or
cmp
jge
jmp
movsb
push
rcll
in
mov
mov
lea
pusha
loope
stc
call
les
mov
inc
jmp
insl
insl
loopne
or
dec
sbb
xchg
ret
mov
inc
out
popa
push
inc
push
notb
sahf
ja
add
test
xlat
shl
cld
xchg
ljmp
or
loopne
pop
mov
jbe
inc
sbbb
jo
lods
mov
cwtl
xlat
push
popa
lahf
fs
push
out
sarl
jae
adc
adc
pop
fcmovnb
push
mov
cmpl
shr
pop
je
loop
ss
sbb
lret
adc
iret
mov
cmp
inc
cmpsb
ret
mov
jp
in
gs
test
ret
repz
repnz
push
adc
pushl
fs
in
lret
pop
pop
xchg
shrb
sub
xor
inc
or
and
repz
push
bound
sub
rcrb
and
clc
outsl
scas
pop
leave
sub
push
adc
jge
push
add
mov
imul
int
or
cld
add
mov
adc
add
mov
jo
ret
add
inc
pop
and
inc
je
mov
mov
lods
sbbl
push
pop
fwait
adc
dec
enter
outsl
mov
add
je
inc
jno
sbb
and
aaa
jae
push
sbb
add
mov
mov
cmp
xchg
push
adc
mov
lea
mov
sbb
notl
mov
push
insl
lods
aaa
repnz
ret
cmpsl
fisttps
adc
cs
clc
jnp
loopne
jge
inc
test
and
cmp
movntq
or
jo,pt
test
adc
scas
rorl
fnstcw
pushf
fisubrs
mov
push
aas
cli
fs
aas
pop
lea
push
paddw
mov
fbstp
mov
cmpb
jnp
popa
jge
mov
push
sbb
movsl
fldt
out
jmp
xchg
jp
es
mov
lret
incl
sbb
mov
rcr
adc
push
mov
outsb
fmull
mov
or
inc
out
aam
push
repz
frstor
or
in
lret
cmpsl
xchg
mov
dec
add
test
lds
mov
mov
and
mov
jg
mov
je
adc
loop
pushf
inc
in
fisttps
stos
imul
fwait
cmpb
cmp
inc
cmp
lds
mov
clc
gs
lcall
mov
popl
les
mov
or
pop
xchg
mov
inc
movsb
out
xchg
fistps
cmp
cmp
js
popf
testb
in
stc
roll
iret
xor
je
dec
scas
std
out
fwait
adc
mov
mov
je
sub
out
xchg
sbb
jle
inc
pop
cwtl
subl
call
mov
cmp
stc
sbb
hlt
cmp
mov
cli
dec
pop
adcb
and
and
xor
out
clc
nop
xlat
sbb
outsb
stc
dec
inc
movnti
cmpsb
inc
mov
add
mov
loop
xchg
pop
or
jnp
stos
cli
or
fcomip
mov
scas
aas
je
sbb
xlat
fsubrl
adc
pop
mov
xchg
and
push
sub
mov
push
or
orb
lds
adc
mov
cmp
stos
sbb
dec
pop
pushf
ds
add
add
cli
mov
push
pop
sarl
jnp
bound
ret
xchg
daa
adc
js
adc
sbb
jl
lods
xchg
dec
subb
cmp
sbb
pop
jnp
pushf
out
or
adc
jge
or
mov
pop
cwtl
inc
fildl
add
insb
adc
pop
cmp
pushf
xor
xchg
adc
ret
cli
add
cwtl
mov
add
cld
dec
mov
les
call
aad
mov
aaa
xchg
test
fisttps
addl
out
iret
insb
ljmp
pop
push
push
xor
sti
loopne
sbb
push
mov
stos
xchg
push
add
leave
lods
gs
mov
xor
popf
out
int
push
out
dec
or
inc
aas
mov
sbb
mov
dec
call
add
out
push
xchg
jg
scas
aas
es
mov
xchg
or
jo
rcrl
dec
cmp
mov
popa
adc
loope
mov
cmp
sbb
addr16
mov
js
lahf
daa
lods
jae
icebp
jl
mov
roll
es
jns
sbb
pop
mov
mov
mov
insb
nop
aam
rorb
fcompl
jp
pop
test
cmp
jno
add
or
sbb
mov
cs
jbe
jg
inc
js
xor
or
inc
outsb
fs
mov
mov
sbb
xchg
pushf
push
scas
popf
lods
fmuls
outsb
pop
pop
and
and
mov
cmpsb
mov
inc
jmp
lods
mov
jne
cli
mov
sahf
in
ror
xchg
jp
iret
hlt
xchg
fcoms
and
fmull
xchg
sbb
xchg
xchg
fmul
ss
xor
and
adc
and
pop
xchg
jp
clc
or
sub
inc
adcl
or
movsb
in
dec
inc
mov
xlat
arpl
sub
or
sarl
dec
mov
dec
mov
pusha
or
js
jbe
mov
mov
ffree
js
xchg
mov
lods
sub
mov
mov
push
lret
jb
imul
imul
add
mov
sahf
shlb
nop
jge
sbb
repnz
push
cmp
adc
mul
xor
xor
movsb
rolb
cmp
repnz
xchg
movsl
aam
ret
arpl
cmp
mov
add
dec
bound
dec
shlb
mov
cs
sbb
xchg
sbb
add
repnz
push
cmp
adc
add
aas
mov
lds
jbe
sahf
and
out
sub
ljmp
inc
mov
add
pushw
push
fildl
scas
add
mov
xchg
cmp
xchg
mov
out
lcall
or
cltd
add
sub
lods
push
cmp
icebp
sub
adc
mov
js
mov
jl
imul
sti
fxch
add
and
inc
mov
aad
push
mov
insl
jg
fimull
lds
div
notl
in
repnz
push
dec
inc
mov
repz
imul
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
ret
popf
fs
inc
xor
pop
movsb
or
inc
adc
inc
xchg
xlat
pop
add
adc
adc
aaa
push
jb
xchg
push
cltd
or
arpl
inc
fadds
push
xchg
pop
aam
fwait
loopne
in
jo
insl
pop
imul
out
pop
je
add
std
popf
add
inc
and
inc
push
sysexit
rcll
dec
das
mov
gs
cmp
lahf
mov
sub
push
psllw
sahf
pop
ret
scas
pop
push
cli
or
jo
js
or
scas
jo
scas
push
cltd
push
out
sbb
cmpsb
outsl
inc
jb
int3
insl
xchg
xchg
jle
aad
pop
ljmp
aam
mov
adc
icebp
sbb
stos
movsl
enter
sti
xchg
int3
and
dec
ds
jp
sbb
mov
adc
adc
shlb
inc
mov
jle
lds
cmc
cmp
mov
adc
cwtl
push
jne
sub
sub
add
mov
mov
xchg
sub
jl
leave
mov
in
mov
out
cltd
je
mov
mov
mov
adc
xchg
jae
xchg
in
sub
push
ja
xlat
xchg
pop
or
orb
stos
rcr
movsl
push
mov
outsb
in
xor
es
push
xor
dec
fcomip
testl
mov
mov
repnz
mov
int
add
sbb
jbe
inc
lock
icebp
or
lock
lret
adc
dec
test
fbstp
push
add
sti
out
sbb
add
xchg
xor
mov
push
ja
jno
ret
lret
jle
pop
push
adc
sub
inc
movsl
mov
int3
and
outsb
xor
push
loope
loop
out
and
ficoml
and
loop
pop
dec
shlb
push
in
sbb
pop
push
cmpsl
mov
cmp
sub
aam
mov
ljmp
aaa
mov
sbb
push
jge
sub
and
scas
movsl
lea
xor
cmpb
js
fidivrl
cmpsl
pop
fdiv
testb
push
out
sti
pop
dec
mov
jmp
inc
xor
xchg
test
mov
pusha
ss
enter
cmp
scas
lret
mov
test
sbbl
cmp
ja
and
test
inc
adc
mov
adc
xchg
insb
pop
hlt
ja
xchg
icebp
mov
mov
adc
push
aad
adc
mov
cwtl
mov
add
xor
test
adc
add
lcall
push
push
or
cmp
push
pop
shll
popa
mov
cmpsb
or
and
rol
inc
pop
movsl
mov
jo
xchg
movsl
std
testb
pop
and
ljmp
xor
inc
cmc
xor
add
ret
clc
movsl
mov
data16
jmp
jge
sub
cmp
decl
pop
mov
dec
push
inc
dec
mov
fmuls
adc
loope
fiadds
xor
test
add
push
addr16
scas
adc
cwtl
add
xchg
enter
addr16
or
jle
aad
dec
pop
stc
or
mov
jno
and
dec
addr16
stos
enter
mov
es
lods
fucomi
fsts
cltd
cli
stos
jno
mov
and
push
mov
fsubrl
call
xchg
sub
mov
out
js
lods
dec
pop
and
loope
fistpl
dec
mov
and
pushf
clc
cmp
and
vmwrite
adc
lret
sub
dec
out
dec
sbb
add
jmp
std
bound
daa
lea
shll
dec
mov
shll
dec
cmp
das
ds
cwtl
cwtl
sub
pop
sbb
adc
cwtl
lret
cmp
sbb
or
sub
jo
ja
sbb
repnz
jns
dec
loope
or
hlt
mov
and
cmp
and
mov
adc
in
lret
or
inc
cld
mov
movsl
mov
mov
iret
stos
jnp
xchg
call
imul
mov
out
xor
inc
and
mov
fists
cmp
xchg
and
into
xchg
and
add
aam
and
mov
sbb
inc
push
sahf
in
mov
push
sub
hlt
xchg
sub
cmp
xchg
ja
or
cmpsb
mov
xchg
stos
and
mov
test
movsb
xchg
loopne
insl
andl
ret
in
sbb
pop
mov
mov
shr
in
js
or
or
lret
jae
pop
test
push
xor
sbb
or
mov
push
adc
pop
lock
push
mov
push
icebp
leave
xchg
and
inc
enter
outsl
add
fs
out
lahf
inc
or
xchg
or
imul
jecxz
pushf
inc
insl
faddl
adc
fmull
into
inc
pop
bound
inc
mov
flds
push
fldt
cli
xchg
cmp
push
lock
pushf
pop
das
xchg
cmc
call
push
ds
dec
or
daa
std
mov
les
xchg
pop
sub
lods
pop
sbb
or
addr16
mov
fdivrl
in
or
or
sbb
mov
mov
inc
add
add
cmp
mov
gs
mov
movsl
shll
outsb
js
jne
lret
jg
call
add
por
test
arpl
popf
inc
lock
shlb
and
xlat
addr16
xchg
mov
xlat
mov
and
mov
test
adc
or
out
sbb
mov
push
jae
pop
ss
pop
push
in
jp
rcll
jno
jb
fdivl
lods
test
mov
sub
add
sbb
inc
fcmovu
xchg
pusha
adc
cmp
fndisi(8087
test
push
rorl
mov
mov
aad
aam
nop
push
jge
xor
jae
xchg
decl
sti
pop
pop
and
dec
nop
ror
xchg
pop
rcll
int
xchg
mov
nop
call
xchg
and
lods
test
sub
or
dec
xor
dec
pop
or
addr16
lahf
xchg
into
ror
mov
out
push
adc
dec
pop
push
push
iret
test
lea
push
hlt
call
rolb
stos
mov
ret
sub
xor
xlat
test
xor
or
or
repnz
outsl
dec
inc
mov
sbb
and
in
and
mov
pop
aam
mov
jge
sub
cmp
aad
cmp
fs
fnstsw
sub
or
push
xchg
push
fisubrl
pop
pop
inc
je
dec
ud1
mov
stos
les
xor
test
or
loope
stos
adc
inc
jle
dec
mov
popa
lret
cmp
cmp
pop
xchg
das
jmp
jno
lcallw
mov
lock
std
lcall
fdivs
int3
mov
nop
mov
dec
jbe
mov
lods
xor
sbb
mov
mov
cmp
pop
shl
hlt
mov
lahf
jp
orl
xchg
insl
mov
jns
int3
mov
xlat
cmpb
dec
sbb
push
shll
fs
dec
push
xchg
mov
adc
stos
dec
xchg
jp
rcl
mov
ljmp
addr16
xchg
bound
mov
jo
jb
call
push
lods
mov
fstl
add
cltd
iret
clc
inc
cmp
test
out
sbb
loope
push
sub
inc
incl
fistps
iret
and
loopne
xchg
mov
xchg
das
jmp
jno
retw
cmp
xchg
test
sti
cmpsb
ljmp
dec
cltd
popf
movsb
inc
dec
js
or
jp
daa
sbb
test
add
sbb
movsb
jo
jnp
aas
push
push
sbb
mov
cmp
mov
or
stos
cmpsl
test
and
mov
pushf
and
sbb
xchg
lods
repz
js
jmp
xchg
loopne
jmp
adc
adc
mov
ret
dec
rolb
out
loope
mov
add
stos
sbb
inc
rcrl
subb
add
ficoml
jecxz
cs
xor
mov
add
pop
dec
sbb
xchg
loopne
movsb
lods
pop
shl
dec
popl
jp
xchg
push
mov
ja
cmp
push
out
jo
mov
je
push
inc
lcall
push
jae
jg
sbb
popf
das
adc
cmp
jle
loope
inc
and
arpl
xchg
xor
test
or
aas
mov
jle
cmp
cmpsl
and
je
pop
testb
loop
das
mov
add
sbb
mov
lcall
cwtl
or
flds
hlt
sbb
mul
and
xchg
movsl
test
out
fcoms
inc
fstcw
adc
mov
loope
repz
xchg
add
fnstenv
or
icebp
fimuls
es
mov
loope
leave
dec
cmp
push
xor
push
insl
fwait
fwait
shrl
push
fnstsw
pushf
icebp
outsb
mov
inc
jmp
je
xchg
arpl
dec
lahf
jae
jge
xor
mov
mov
addr16
movsb
aam
xchg
stos
push
hlt
pop
ret
dec
lods
ficoml
mov
adcl
gs
sbb
push
jne
imulb
fsubrs
mov
jmp
or
sub
and
mov
flds
in
adc
nop
xorl
test
test
pop
cmpl
jb
adc
jbe
nop
cmp
jle
jmp
cmc
mov
outsb
scas
aaa
int
adc
and
xchg
pushl
sbb
stc
sub
mov
jns
xor
and
mov
inc
les
es
jbe
or
stos
jmp
sub
push
and
cmp
xchg
dec
xor
mov
call
sbb
stos
pop
fwait
or
rclb
adc
in
popf
add
pop
pop
or
lds
cmp
mov
xorb
mov
rorb
lret
mov
inc
sub
inc
sub
mov
fistpl
dec
xchg
out
xchg
int3
ret
mov
adcb
lcall
inc
pop
ja
mov
mov
sbbb
xlat
in
and
mov
jmp
outsb
int
jb
mov
int
faddl
inc
xlat
ret
adc
idiv
sbb
dec
sub
outsb
sbb
popf
ss
mov
mov
add
cmpsl
adc
lea
dec
or
addl
mov
push
fnsave
test
fisubrs
sbb
jnp
testl
pop
cmp
mov
or
or
push
pop
enter
dec
or
xor
movsb
pop
and
jae
rorb
or
mov
loope
icebp
push
out
dec
popf
in
ljmp
jae
out
inc
mov
or
sbb
cmp
mov
subb
mov
scas
or
adc
mov
call
jno
add
outsb
xchg
add
push
add
jle
cmc
jle
lds
or
flds
xchg
push
test
jge
dec
outsb
mov
pop
pusha
sbb
cwtl
inc
xacquire
push
aas
mov
xlat
out
push
imul
scas
jns
jno
mov
mov
fnstcw
xor
icebp
inc
fs
adc
push
cmpsb
jmp
popf
in
cmpsb
les
insb
sbbb
testb
mov
sahf
jmp
jle
shrl
in
movsb
cli
je
into
les
das
lret
scas
imul
mov
push
mov
mov
mov
cli
jbe
inc
inc
sbb
cmp
or
testl
outsb
jb
fcoml
je
adc
lods
cld
pusha
add
adc
mov
mov
adc
int
mov
in
sbb
in
mov
jno
jg
or
pop
cmp
mov
fcmovnb
xchg
mov
pushf
pushf
daa
xchg
cltd
into
addr16
inc
cmpsl
cs
ret
fsubrl
shll
pop
mov
lods
jl
out
dec
pusha
test
xchg
js
scas
fnstcw
mov
lds
pop
sub
les
out
inc
lods
jno
rcl
movsb
lea
shrl
pushf
insl
pop
pop
and
jp
add
hlt
mov
fisubrs
inc
xor
aad
push
jecxz
fnsave
push
aad
mov
es
ja
mov
push
xor
mov
pop
adc
mov
and
out
pop
inc
in
sub
loope
dec
aad
inc
cwtl
fsubrs
pop
test
cmp
mov
xchg
dec
pusha
js
dec
cmp
lret
ret
jl
les
dec
sub
sub
mov
popa
lea
rcrb
xor
adc
jb
or
cmp
ficompl
and
test
inc
dec
sub
lahf
jns
ret
mov
xor
xchg
jmp
rolb
sub
mov
pop
inc
or
cmp
mov
sbb
cmp
js
dec
fs
jle
ficomps
pushf
cmpsb
xor
sbb
jle
daa
or
das
loop
incb
das
and
ss
loopne
and
clc
dec
mov
cmp
testb
xor
and
mov
pop
popf
test
data16
xchg
lods
mov
xchg
sub
jmp
sarb
pop
xchg
iret
or
cwtl
orl
out
cmp
sub
outsl
mov
and
test
ret
repz
sahf
pop
jge
adc
insb
jo
shl
fwait
mov
xchg
ret
cmp
clc
movsb
jbe
pop
fisubl
xchg
dec
jnp
or
subl
addr16
dec
jo
mov
sbb
loope
repnz
fnsave
pop
or
idivb
jnp
lock
add
push
dec
cmp
xchg
out
ljmp
push
inc
inc
shlb
sub
fimull
jb
pop
xorl
pop
nop
dec
and
push
das
lods
inc
adcl
fs
mov
loope
lret
lret
xlat
fdivp
adc
loop
fwait
inc
mov
pop
cmp
mov
stos
xor
xor
clc
out
inc
adc
out
push
lahf
or
pop
xor
in
sub
push
daa
dec
push
fdivrs
cli
insl
test
dec
out
cmp
cmp
dec
jae
xor
sub
inc
cmp
adc
xchg
pop
push
les
lds
lods
xchg
dec
cs
incb
push
push
fwait
lds
in
adcb
pop
insl
jne
mov
cmp
gs
adc
mov
push
push
rorb
iret
sbb
lret
sub
lock
adc
mov
jae
push
fnsave
sbb
adc
mov
imul
add
add
imul
sub
mov
xchg
pop
xchg
push
adc
adc
adc
jnp
cmpsb
push
mov
mov
or
aad
sbbl
std
cmp
ja
bound
jp
sbbl
fsts
test
ljmp
xor
leave
pusha
and
shl
and
shl
sti
sub
xchg
imul
dec
popf
cmc
mov
addr16
mov
jg
inc
rcl
or
mov
pusha
pop
cmp
stos
dec
sbb
mov
sub
mov
sbb
dec
mov
and
dec
fidivl
inc
insb
mov
cmc
or
and
cmp
mov
xor
or
iret
hlt
push
enter
js
stos
jg
ja
cmp
out
lea
add
lcall
ret
xchg
xchg
sahf
ror
bound
loope
xor
adc
ror
and
out
push
mov
jl
jge
lea
xchg
shrb
xchg
sbb
stos
ret
mov
pushf
adc
jae
mov
daa
test
sbb
push
cwtl
or
ja
cmp
dec
pop
mov
test
mov
adc
mov
pop
clc
sub
pushf
pop
aam
mov
gs
push
jo
xchg
roll
int3
inc
push
dec
jle
aaa
pop
jnp
outsl
push
mov
jb
jge
and
nop
inc
or
in
mov
shlb
dec
dec
test
mov
jp
mov
aaa
mov
inc
popf
mov
cmp
sbb
gs
and
push
rcl
fst
out
jne
sub
roll
dec
pop
lock
jbe
repnz
dec
lods
ja
fcoml
test
xorb
sub
xchg
or
and
cmc
stos
and
lods
imul
pop
and
and
ret
pop
sbb
ficompl
dec
sub
daa
ljmp
pop
arpl
sbb
mov
sbb
js
jae
or
cmp
jge
in
fisubrl
mov
sbb
jmp
xchg
cmp
inc
fsubrp
adc
adc
fdivrs
mov
ficomps
shrb
lahf
inc
xor
out
movsb
inc
sub
testb
pop
dec
xchg
sarl
lea
mov
xchg
int
mov
out
mov
les
fiadds
xchg
scas
mov
fists
xchg
mov
adc
imul
or
rol
mov
outsl
add
mov
dec
ljmp
and
xchg
test
and
mov
das
jae
aad
add
andl
mov
adc
and
dec
daa
xchg
loope
xchg
adc
push
aas
mov
push
xchg
shl
ficoms
jmp
ret
mov
mov
shl
iret
and
stos
pop
mov
push
shll
push
leave
add
adc
loop
mov
popa
or
repnz
xchg
dec
test
fstpl
mov
pusha
or
out
sub
pushf
rcrl
jbe
mov
jae
and
pop
xchg
lcall
dec
lods
aaa
js
push
nop
pop
out
mov
add
mov
mov
pop
imull
mov
test
cmpsb
or
inc
and
lods
inc
mov
xor
mov
rclb
pusha
out
pop
rcl
data16
pusha
daa
outsb
mov
cmp
rolb
lret
aaa
xchg
daa
mov
add
push
xchg
inc
int
in
adc
or
inc
gs
and
add
mov
jl
cmp
std
mov
divl
stc
cmpsb
outsl
ss
or
movsb
lahf
xchg
stc
sbb
pop
sahf
sbb
push
xor
int
lds
or
dec
leave
or
sub
dec
fwait
sub
mov
js
movsl
push
xlat
movsl
cmp
popa
jbe
arpl
mov
xor
push
bound
pushf
sbb
lret
test
iret
fidivs
sub
call
ljmp
aam
ret
push
jne
js
lods
testl
dec
in
or
or
mov
insl
loope
clc
lods
xchg
push
push
push
js
push
jnp
testb
sbb
jbe
je
sub
mov
push
lds
popa
xor
pop
mov
mov
inc
in
xor
and
push
add
imul
aas
push
cmp
shr
stc
add
or
pop
ficoms
hlt
inc
jb
ficoms
jns
pop
cmp
inc
jle
jl
cmp
sub
scas
xor
push
and
iret
mov
push
ja
out
shrb
or
dec
jbe
jo
xor
es
or
xlat
in
pusha
ret
es
mov
or
push
sbb
pop
and
xchg
stos
fcomps
dec
decl
push
push
cwtl
stos
mov
adc
or
hlt
aaa
dec
aas
sbb
fcmovu
inc
mov
psadbw
dec
stc
sub
mov
jae
and
call
adc
int
jne
xchg
mov
sbb
mov
mov
xor
shll
lea
xor
and
lret
pop
dec
xor
stos
data16
jp
dec
or
punpckldq
xor
sbb
cmp
loope
gs
call
xor
mov
mov
dec
loop
xchg
xor
cmp
test
cmovg
mov
mov
sub
fcompl
pop
out
stc
mov
lods
imul
cli
add
mov
jecxz
rclb
xchg
inc
out
xchg
push
aad
mov
jmp
mov
cli
test
xchg
and
and
adc
fs
push
mov
out
jl
mov
mov
and
je
movsb
daa
adc
push
test
pop
cmp
cli
ss
lret
mov
imul
sahf
inc
xchg
dec
or
push
div
movsb
stc
int3
and
loope
jns
pushl
sti
add
out
jb
pushl
sub
dec
jmp
cmp
cld
add
cmp
outsb
cmp
insl
cmp
ret
adc
xchg
lock
sti
flds
das
cmpb
adc
enter
or
cltd
mov
and
loop
xchg
in
test
fwait
cmpsl
sar
cs
adc
frstor
jne
xchg
mov
js
std
xor
call
cs
inc
push
das
xchg
fiadds
popf
repnz
mov
pop
in
cli
push
mov
xchg
scas
movsb
mulb
or
or
inc
pop
jg
mov
mov
cs
leave
imul
insl
daa
rolb
popf
pop
call
or
shll
test
jae
mov
xorb
pushf
xchg
pop
shlb
ja
pop
mov
ret
xor
loop
or
out
sub
sub
xor
sti
fcomi
dec
pop
cmp
pusha
push
inc
repz
add
gs
pop
jns
imul
cmpsb
xlat
mov
dec
fdiv
mov
pop
inc
js
push
ret
movsl
push
pop
bound
lods
xchg
jmp
xor
fidivrs
sar
nop
add
rorl
pop
pop
push
mov
xchg
movsb
in
push
or
jg
pop
das
out
cmc
outsl
das
enter
lods
loop,pn
es
lods
dec
arpl
dec
shlb
sbb
jmp
sub
ret
dec
add
aas
loope
ficoml
sbb
pop
or
push
or
jmp
lds
lea
mov
dec
cmpsl
in
mov
iret
les
dec
mov
mov
add
inc
jo
cmp
push
add
test
mov
pop
call
out
xorb
out
xchg
pop
jo
out
sub
push
mov
or
loop
mov
fistps
insb
mov
imul
pop
fbstp
mov
cmpsb
or
cs
sbb
ljmp
fcomps
adc
jmp
jo
test
or
movsb
or
int
fnstsw
mov
enter
pop
aam
sub
xchg
lcall
mov
sub
in
repnz
shl
cli
cmp
cmp
inc
insb
dec
mov
je
cmp
stos
mov
mov
cli
or
in
jge
push
iret
xor
iret
mov
in
jle
scas
sub
arpl
das
sbb
jle
pop
jns
iret
sub
dec
inc
test
cmp
decb
insb
es
loopne
cmc
aad
shll
pushf
xor
pop
orb
aas
mov
rcr
repnz
outsl
pop
mov
nop
jae
mov
aas
aad
data16
push
push
inc
dec
cmp
jmp
jbe
push
mov
addr16
cmpsb
jns
push
jo
or
pusha
movsl
lods
scas
nop
xchg
mov
mov
ljmp
inc
or
cli
lahf
cmp
fsubrs
clc
or
push
je
inc
lods
inc
dec
addr16
or
mov
xor
int3
or
lret
adc
sahf
inc
ja
pop
inc
jno
rol
imul
jo
xchg
dec
fwait
mov
mov
mov
dec
sbb
sub
dec
add
dec
xor
pusha
sub
scas
pop
imull
xlat
xorl
aam
or
lcall
pop
jg
pop
jl
shl
xor
subb
and
test
mov
test
bound
or
daa
jg
cmpb
jb
and
or
idivl
pop
inc
jb
addr16
fs
ljmp
jle
icebp
into
js
shr
pop
adc
sbb
inc
sarl
mov
sub
pop
or
or
push
adc
xchg
das
xchg
or
fidivl
add
cli
pusha
lahf
and
add
xor
mov
aaa
cmp
fsub
out
pop
cmc
push
push
push
imul
das
sub
jae
mov
stc
mov
xchg
jp
xchg
mov
imul
add
lods
and
fs
cs
sbb
das
add
pop
xchg
ficompl
jmp
rcll
xlat
addr16
int3
xchg
aas
fistps
push
pop
cmc
das
clc
imul
sbb
xchg
flds
xchg
and
xor
dec
or
push
outsb
in
or
inc
in
xchg
cmp
jl
in
mov
lret
test
xchg
fs
and
xchg
push
out
cmp
fwait
mov
ljmp
dec
cld
add
not
push
sub
fsubr
fisttps
aad
rcll
lods
stos
pusha
inc
mov
daa
daa
rcrb
fcoml
adc
ffree
lds
stc
sbb
jle
cmp
push
sub
mov
fs
inc
popf
fcoms
sbb
ret
mov
sbb
pmulhuw
xchg
xchg
pop
inc
or
adc
push
orl
jmp
sbb
or
xchg
jns
push
sahf
arpl
sbb
ja
mov
pop
icebp
xchg
movsl
pop
out
fisttpl
xchg
in
out
push
push
and
mov
pop
cli
lret
cmp
sti
mov
inc
popa
sbb
test
mov
incl
push
ret
xlat
pusha
xor
jne
mov
cmp
fcompl
and
push
or
daa
inc
adc
out
cmpsl
add
xor
inc
cmp
and
push
mov
fiadds
jp
stos
popa
scas
cs
sbb
outsl
imul
std
cwtl
stc
jne
pop
lret
cltd
sbb
adc
sub
shlb
push
dec
test
imulb
pop
je
xchg
mov
fsts
outsl
jle
or
lea
push
push
mov
jg
pushf
xchg
pop
and
inc
stc
push
ljmp
jnp
cmp
pop
adc
imul
into
loop
ficomps
xchg
sarl
xchg
stc
movsb
inc
jnp
or
lcall
push
add
xor
lods
aas
push
xor
sbb
pusha
pop
xchg
and
mov
pop
sub
mov
and
in
xchg
lahf
dec
adc
pop
inc
add
jnp
or
xchg
subb
jg
roll
arpl
xchg
fsubrs
jae
xchg
pop
sbb
cs
subl
mov
cli
dec
adc
popa
push
sub
test
xchg
outsb
pop
or
add
stos
mov
mov
and
sti
xlat
mov
dec
sbb
pop
ds
inc
mov
mov
mov
cmp
xor
jbe
ret
cmc
and
les
mov
lods
je
cmp
cltd
enter
mov
ror
fmul
hlt
je
pop
stc
lods
ss
lahf
dec
jmp
scas
sub
hlt
movsb
testb
jbe
jae
aaa
movsl
pop
in
dec
daa
popa
data16
ja
jno
mov
stos
add
add
jmp
xchg
ret
ja
out
pop
xchg
sti
inc
mov
jnp
cmc
sbb
lods
call
sbb
pop
repz
insl
inc
mov
in
and
mov
fiadds
std
test
pop
aaa
or
and
mov
in
fadds
jmp
lret
rorl
imul
xor
jl
push
jl
ds
lock
data16
fisubrl
scas
lods
sub
sti
cmp
mov
push
mov
mov
test
in
adc
cmp
dec
icebp
hlt
stos
add
cltd
lods
cmp
and
mov
nop
pop
or
jle
xlat
xor
and
loop
ror
pop
scas
outsb
jge
add
ss
mov
add
jge
mov
or
rcrl
pusha
test
or
inc
pop
popf
xor
jle
jb
mov
std
jns
xchg
test
lods
jmp
xchg
in
cwtl
fisubrl
mov
or
loopne
mov
test
js
mov
mov
loopne
xor
push
loopne
cmpsb
decl
into
push
jmp
xchg
dec
add
jae
addr16
es
clc
adc
inc
sbb
lret
ljmp
add
rclb
shll
or
inc
cmc
jo
gs
shll
mov
pop
cmp
leave
mov
stos
inc
inc
sti
aam
jnp
jp
xchg
jbe
bnd
cmp
fidivs
jb
and
hlt
aad
sahf
sbb
and
iret
mov
shrb
aam
das
pop
movsl
fwait
sbb
insb
lods
gs
mov
push
push
jl
xchg
mov
fidivrl
mov
rorb
out
lret
iret
mov
je
insb
repnz
pop
dec
jae
push
mov
cmp
push
xchg
xchg
lret
inc
or
test
outsb
fs
fstpt
sub
xchg
in
fldl
repnz
addr16
mulb
push
ss
pop
aaa
jnp
sbb
mov
test
sbb
fcoms
adc
fdivl
sub
aaa
fstps
mov
pop
pop
and
adc
sub
cmp
mov
lret
icebp
mov
mov
lret
push
sub
sarl
push
cmp
sbb
test
fnstsw
fwait
je
add
inc
bound
push
jp
fstpl
sbb
pop
movsb
dec
cmp
jl
sbb
cmp
sbb
jmp
push
stos
cmp
ret
xchg
movsl
or
mov
aas
sub
inc
daa
fsubrs
pop
popf
outsl
xor
xchg
mov
cmp
inc
fsubrs
mov
fisttpll
cmp
rorl
push
outsl
jg
or
sbb
xchg
insb
cmpb
not
mov
inc
jmp
sbb
mov
es
adc
and
and
mov
jo
mov
sbb
and
sbb
cltd
and
out
in
insl
and
fidivrl
mov
inc
dec
stc
aam
mov
int
or
out
push
adc
mov
jno
sbb
xor
jmp
jmp
xor
adc
jle
xchg
fadds
cmp
daa
jge
fyl2x
and
mov
or
pop
sbbb
add
xchg
sbb
dec
cmp
pop
daa
push
mov
fs
callw
popf
in
cmp
inc
mov
loopne
mov
xor
lahf
lock
adc
add
cmp
sub
or
lret
shld
mov
xor
sbb
ss
call
cmp
mov
mov
test
sub
xor
mov
into
adc
data16
out
test
dec
daa
push
mov
jmp
jae
int
push
push
mov
mov
in
mov
inc
adc
add
mov
and
pop
mov
or
stc
xor
mov
sub
cmp
jno
testb
mov
fsubl
dec
hlt
rcll
xchg
cmp
pop
enter
repz
push
lcall
mov
aam
jecxz
dec
add
jmp
movsb
inc
out
js
imul
fidivl
test
sbb
dec
fstp
and
adcb
dec
xor
sub
repnz
mov
lcall
mov
dec
xor
jge
pop
fsubrs
pop
incb
jmp
xchg
mov
xchg
repz
in
popl
xchg
pushf
arpl
les
decb
je
mov
sub
mov
scas
leave
dec
scas
jge
dec
cs
sbb
or
push
xorb
cmp
mov
add
xlat
clc
out
mov
cmp
stc
mov
scas
sar
ss
cmp
inc
xchg
hlt
rcrb
mov
mov
xor
testb
stos
adc
aaa
cli
dec
mov
je
xchg
mov
scas
leave
cltd
and
test
dec
ror
lods
scas
inc
mov
xchg
xlat
mov
daa
shll
mov
jge
aam
lret
cmp
movsb
push
sub
push
or
mov
scas
sbb
das
scas
std
scas
adc
xchg
nop
adc
lret
lds
or
and
hlt
sarb
xchg
lahf
pushl
repz
adc
notb
mov
enter
or
sbb
and
in
add
lret
mov
pop
movsb
popa
lahf
into
int3
mov
inc
leave
dec
jae
jle
push
pop
out
pop
fildll
into
stos
icebp
addr16
loop
in
cmp
repnz
xchg
out
out
stos
push
xchg
testb
fs
xchg
mov
out
out
je
mov
inc
call
insl
cmc
mov
push
insl
push
xchg
enterw
jno
inc
xor
adc
jmp
cli
lds
inc
loopne
pop
push
adc
lds
loop
loopne
fldl2t
jnp
push
mov
scas
cmp
jo
and
push
mov
and
inc
loopne
sbb
mov
jmp
addr16
repnz
jp
fbld
hlt
dec
or
dec
mov
mov
int3
out
mov
add
dec
fidivrl
cwtl
outsl
xor
orl
dec
xchg
ja
addb
jne
mov
outsb
sub
jnp
cmc
mov
jge
in
inc
ljmp
adc
fimuls
aaa
outsl
push
inc
lods
or
fwait
xchg
cmpsl
rcrb
lcall
sbb
js
pop
test
bound
fisubrl
pop
inc
push
pushl
btc
sub
mov
popf
enter
xchg
test
jb
add
sub
push
inc
mov
pop
test
pop
mov
push
mov
mov
push
das
lahf
lret
mov
movsb
cmp
xchg
jnp
pop
mov
xor
ja
mov
rolb
data16
or
lods
popl
mov
inc
and
scas
mov
mov
mov
push
cmp
push
iret
loop
pop
and
or
cmp
subl
pop
mov
nop
lock
push
xchg
dec
int3
cmp
mov
sbb
andl
fidivl
adc
sub
out
addr16
ret
dec
rcll
jo
mov
dec
shlb
outsl
andl
sbb
mov
mov
mov
inc
pop
add
loop
push
dec
rorb
fsubrl
pop
or
adc
addr16
mov
aam
cmp
mov
iret
aaa
cwtl
sub
jns
sbb
bound
cmp
cltd
push
jge
mov
test
lock
stc
pop
ficomps
and
jmp
mov
dec
int
orl
stc
js
out
scas
jbe
dec
add
pop
cmpsl
jge
outsl
mov
xchg
cmp
test
push
push
out
cmp
sbb
cmp
ja
push
xor
lea
fs
daa
adc
push
mov
push
mov
ja
loopne
fimuls
incb
push
sub
xchg
lods
sbb
shrl
cmpsb
adc
dec
push
adc
mov
xchg
icebp
clc
je
xchg
jle
xchg
lods
mov
idivl
or
sbb
aam
xchg
lret
in
mov
in
stos
test
push
daa
xor
in
icebp
jno
subb
loopne
push
mov
test
pop
inc
imull
sahf
imul
data16
loopne
xchg
jb
aaa
jmp
inc
dec
cltd
pop
int3
adc
out
rorb
bound
mov
mov
or
xor
outsb
jl
nop
ljmp
sahf
stc
cmpsl
add
sahf
into
sti
leave
xchg
mov
xchg
aad
mulb
pushf
int3
dec
testl
mov
and
inc
mov
jmp
pop
xchg
cmpsb
bound
test
js
xchg
jb
jge
push
je
push
push
cmpl
pop
fldenv
out
ljmp
ja
daa
inc
loope
adc
setge
arpl
pop
pop
ret
sti
or
lock
dec
cli
cmp
out
inc
mov
pop
mov
enter
dec
mov
mov
outsb
popf
xor
push
mov
dec
or
xchg
js
dec
test
mov
fsubrl
jmp
mov
stos
lahf
das
mov
sbb
pusha
dec
dec
fdivr
lock
iret
mov
mov
ljmp
or
insl
mov
ret
mov
xchg
cmpsl
push
das
addr16
xchg
in
sub
js
mov
cs
js
mov
jmp
pop
orb
adc
jae
lea
pusha
fsubs
cli
jb
test
mov
cmp
repz
inc
cmp
mov
inc
les
test
lea
popf
notl
sarl
lds
test
and
push
ficoms
dec
or
mov
cld
es
dec
push
and
data16
mov
loope
div
xchg
and
mov
arpl
mov
cmp
mov
hlt
pop
pop
and
jecxz
cmp
jns
test
pop
rcr
inc
jmp
test
cwtl
mov
add
sti
bnd
dec
cmpsl
inc
xor
jmp
sti
repz
pop
jne
inc
cmp
add
sbb
adc
nop
xor
pop
fistpl
insb
cmpsl
loope
in
jmp
adc
inc
mov
movsl
jle
insb
and
cmpsl
add
or
fsubrs
cmp
adc
inc
push
mov
xor
cltd
mov
in
lahf
inc
and
inc
xor
call
mov
out
mov
and
pop
xchg
subl
dec
fnstsw
popa
fstps
adc
adc
push
loop
repz
sbb
mov
in
subl
sbb
lret
mov
test
stc
xchg
outsl
dec
jbe
and
ss
jno
jp
push
ror
xor
cmc
dec
not
int
fistpl
mov
pop
sbb
xchg
frstor
mov
add
mov
pop
cltd
push
sahf
pop
mov
outsb
ljmp
cltd
sahf
xchg
or
mov
in
pop
cmc
ds
adc
or
ds
jle
loop
dec
loope
pop
lret
imul
les
and
jo
add
inc
cmc
mov
jl
mov
xchg
int
gs
dec
into
frstor
xor
into
imulb
push
bound
push
es
xlat
and
sub
and
lret
or
and
mov
push
jbe
and
pop
call
mov
jbe
xchg
and
push
sbb
enter
imul
or
pop
xlat
mov
sbb
or
fdiv
les
daa
loope
mov
popa
ljmp
dec
inc
adc
addr16
cmc
aaa
mov
jmp
and
or
out
jmp
inc
dec
mov
movzbl
pop
adc
scas
hlt
lahf
fwait
cmp
xor
cmp
inc
inc
or
add
mov
jle
sbb
cmp
out
outsb
inc
ljmp
gs
sbb
push
repnz
outsl
shlb
xchg
fwait
xchg
stos
or
mov
lret
mov
jge
mov
xchg
aaa
lcall
fcoms
xor
mov
jns
rol
nop
dec
shll
xor
int3
cmp
sbb
sub
xlat
rol
mov
imul
and
movsb
addr16
in
pushl
scas
test
push
dec
add
mov
in
push
fistpll
mov
xor
sbb
test
sbb
loop
mov
sub
cs
mov
lea
cmc
insb
push
sbb
out
je
lds
les
cmc
fs
ds
sbb
out
leave
mov
mov
cmp
sbb
out
jmp
add
arpl
inc
jge
xor
mov
inc
imul
or
decl
cmp
mov
lret
repz
ja
movsb
imul
stc
std
or
add
or
cli
adc
ret
jne
xchg
stc
ja
mov
mov
or
aas
lcall
mov
fidivrl
and
int3
mov
addb
mov
and
xor
or
adc
push
cwtl
adc
xchg
imul
stos
mov
outsb
sahf
test
cmpsl
mov
or
adc
cmp
xor
jp
adc
mov
push
repnz
popf
mov
jae,pt
mov
cmp
pop
jno
pop
shl
pop
and
mov
lret
ret
arpl
shlb
repz
add
fstpl
lods
dec
gs
inc
divl
push
test
cwtl
adc
shr
test
sub
orb
and
stc
call
mov
push
out
add
pushl
int
mov
jp
push
push
adc
out
or
test
lcall
mov
icebp
dec
adc
jb
repz
mov
aas
ret
dec
loopne
sub
cwtl
jp
lods
push
jo
dec
cmp
outsl
leave
jns
mov
into
mov
jmp
pop
inc
movsl
out
mov
sbb
ds
outsl
jns
jp
mov
pop
mov
int
je
in
lods
push
pop
nop
fmull
imul
pop
cmp
ds
xor
sbb
xchg
and
mov
stc
sbb
sub
mov
test
repz
lret
fnstenv
mov
loopne
out
cmc
sbbb
mov
inc
scas
mov
sahf
test
lcall
scas
sahf
sbb
out
xor
movsb
lds
popa
test
xchg
xchg
inc
sbb
std
xor
add
fistpll
lock
loopne
popa
std
jno
jg
sbb
jb
in
cmp
imul
test
or
outsb
lea
jmp
in
insb
bound
lret
stos
sbb
or
out
lock
out
jbe
sbb
cld
jmp
inc
lret
sbb
sub
dec
xchg
xor
pusha
lcall
mov
mov
jmp
clc
ret
pop
pop
sbb
mov
fldl
mov
std
mov
sub
idivl
fsubrl
dec
sbb
pop
addr16
xchg
aam
das
imul
push
add
sbb
fwait
xchg
test
lret
xlat
mov
pusha
orl
imul
cli
test
loop
push
sub
loope
mov
clc
jae
les
in
sbbl
pop
sbb
outsb
in
and
push
inc
movsb
in
jg
push
and
es
popf
aad
mov
hlt
jnp
xchg
xchg
add
test
cmp
or
xlat
dec
dec
in
mov
iret
jae
jge,pt
imul
arpl
sub
subl
adc
push
imulb
fadds
jb
shlb
pmaxsw
int
xchg
xchg
adc
in
xlat
pushf
mov
cli
andl
insb
add
je
jne
ss
cmp
sub
xchg
sbb
lods
mov
sti
and
xchg
popf
cmc
sbb
rcll
imul
outsb
repz
sar
stos
mov
cmp
xor
mov
and
jp
aam
je
shl
push
sti
adc
int3
out
popf
mov
daa
xor
add
xchg
lret
les
mov
mov
out
js
outsl
push
outsl
sub
mov
inc
pop
inc
outsl
mov
sub
push
jo
cmp
pop
add
dec
xchg
push
pop
lahf
jecxz
stos
xor
dec
xchg
stos
enter
addr16
incl
xchg
stos
jnp
shll
ljmp
mov
mov
inc
push
std
shll
sub
sub
inc
pop
sub
mov
in
add
loope
outsl
push
pop
dec
jle
lock
inc
mov
jp
pushf
dec
imul
dec
loope
add
jle
jp
insl
xchg
les
inc
mov
fisttpl
mov
jle
pop
js
push
add
mov
sbb
iret
xor
dec
dec
lock
inc
cmp
adc
fcmovu
and
divb
fistpll
mov
xor
mov
outsl
in
mov
fs
mov
cmp
push
bound
mov
in
add
jge
mov
xor
gs
inc
or
hlt
loopne
mov
adc
adc
shll
movsl
xchg
es
mov
bsf
outsb
iret
xlat
add
pop
repnz
cmpsl
and
in
mov
adc
ret
dec
loop
adc
out
ljmp
push
insb
bound
gs
pusha
dec
movsl
jg
ss
inc
jnp
std
fisubrs
xchg
pushf
movsl
adc
pushf
cmp
sti
fwait
xchg
dec
je
in
into
leave
dec
ret
mov
cmp
aam
sub
subb
leave
add
cmp
mov
pop
mov
jp
fwait
xchg
dec
insl
dec
push
int3
inc
sub
rcr
push
jle
ss
call
daa
inc
lahf
idiv
out
roll
mov
sub
repz
in
push
out
inc
scas
or
and
adc
inc
push
cmp
jp
movsb
arpl
or
sti
aam
sbb
xor
in
sbb
add
pop
adc
orl
fptan
mov
out
loop
and
sub
jl
cmpsl
xchg
pop
cmp
subb
in
cs
addl
inc
mov
pop
lods
cmp
and
inc
test
adc
dec
lods
or
mov
test
aas
mov
in
lods
mov
dec
mov
push
fcmovnb
cmc
sub
push
jp
pop
mov
dec
mov
lret
clc
xor
and
inc
in
addr16
test
sbb
cmpb
outsl
cmpsl
and
add
enter
push
arpl
repz
inc
insb
push
dec
pop
pushf
test
outsl
mov
scas
cld
add
stos
loope
ds
push
pop
shll
imull
add
stos
add
adc
push
insb
test
mov
xor
enter
js
sbb
iret
or
das
mov
repz
inc
mov
scas
call
jbe
out
insb
scas
sub
daa
pop
flds
jg
nop
mov
movsl
xchg
xor
cld
dec
mov
add
fwait
sahf
outsb
jo
fiadds
xchg
pop
sbb
lea
sbb
pop
mov
mov
xchg
or
xchg
call
leave
pop
lods
clc
insb
fwait
addr16
leave
call
and
add
ret
es
mov
add
popf
pop
fldenv
xor
push
roll
mov
shl
sbb
shlb
lcall
add
dec
inc
js
pushf
jl
xchg
clc
cmp
adc
pop
scas
mov
mov
call
mov
push
ret
mov
das
rcl
stos
push
addr16
shrl
jno
bnd
gs
mov
pop
fstpl
xchg
stos
cmp
mov
cmc
mov
or
jp
pop
jno
clc
or
mov
popa
or
xlat
or
dec
push
ret
mov
sbb
pop
rorb
add
dec
cmp
xchg
enter
out
pop
jns
into
fidivrs
adc
repz
daa
mov
ret
dec
sub
xchg
mov
xchg
out
xchg
je
cli
add
lret
sbb
pusha
inc
push
xchg
adc
and
push
xor
es
sub
xor
xlat
xlat
loope
popa
and
stc
or
inc
loopne
lds
or
push
mov
lock
bound
lods
push
call
int3
inc
jnp
iret
sbb
nop
js
inc
adc
cmc
add
iret
push
pop
test
stos
loope
dec
mov
pop
mov
loopne
mov
mov
dec
iret
fwait
dec
cmp
mov
lahf
mov
mov
lock
mov
test
and
adc
ret
xchg
mov
sbb
jo
stos
aaa
setne
mov
out
mov
push
sahf
test
mov
xorb
test
dec
pop
xchg
ss
pop
cli
mov
xchg
push
mov
xchg
dec
mov
sub
inc
movb
sbb
jns
xchg
fldt
shrb
mov
xchg
jb
push
pop
xor
xchg
les
lcall
test
mov
mov
insl
shl
lea
loop
and
scas
inc
rolb
daa
test
movsb
sub
inc
dec
pop
pop
and
into
addr16
push
cmp
repz
filds
mov
push
mov
xchg
push
push
jg
or
insl
or
or
cltd
scas
sub
jp
xor
fs
repnz
adc
shrl
das
movsb
cmpsl
int
inc
and
jne
fsubs
xor
gs
repnz
sub
ljmp
stos
push
int3
add
mov
cs
pop
cmpsl
xchg
xchg
sti
roll
jmp
shrl
shlb
pop
fstpl
adc
or
fwait
sbb
dec
xor
lea
jb
sbb
mov
dec
pop
mov
mov
push
insl
ret
ljmp
cmp
lcall
or
inc
rcrb
xchg
jmpw
out
and
dec
mov
sub
mull
xorb
jmp
scas
lcall
mov
or
jnp
pop
mov
sahf
pop
lds
imul
cmp
cmpsl
lock
jle
repz
cld
jnp
in
mov
not
and
enter
mov
stc
mov
and
xor
sub
adc
unpckhps
cmpsl
add
xchg
dec
mov
fstpl
fiaddl
add
jnp
push
js
roll
les
rcrb
pop
in
lret
loopne
cmp
out
pop
mov
ds
test
push
sbb
test
push
pusha
dec
sbb
js
insb
cli
cmp
gs
pop
mov
repnz
cld
pop
bound
scas
pusha
dec
arpl
fistps
sti
jecxz
dec
pop
arpl
mov
arpl
lds
sar
push
stos
jb
daa
cmp
jae
in
popf
push
fstpl
repnz
cmp
jge
pop
mov
mov
cmpsb
pop
push
cmp
pusha
pop
cld
enter
icebp
lock
pop
mov
pop
seta
push
pop
je
xor
dec
outsb
and
mov
inc
repz
push
out
dec
aas
std
sub
jno
or
jbe
adc
adc
sbb
aam
push
ret
or
pop
fldenv
aas
mov
adc
jo
ror
adc
int
add
inc
fidivs
imul
mov
xor
int
popa
test
dec
dec
pop
push
leave
insl
and
insl
pop
sarb
les
out
or
pop
insb
or
fdiv
pop
rcll
ficompl
stc
in
and
xchg
jle
push
mov
adc
pusha
adc
sbb
leave
out
jo
push
dec
xor
inc
cmp
push
xchg
push
pop
daa
mov
inc
lock
mov
jl
add
jg
loopne
sub
sbb
lcall
push
dec
ja
mov
bound
pop
cmpsl
orb
popf
cmp
jns
iret
mov
mov
sbb
jmp
aam
dec
je
push
inc
xchg
cmc
mov
sar
or
insl
adc
lahf
fidivrs
sub
movsl
hlt
test
push
push
dec
xor
dec
lahf
dec
inc
out
mov
in
xlat
mov
das
mov
jl
das
push
dec
rcrb
scas
pop
sti
ljmp
insl
sub
cmp
fldl
sti
popa
shlb
mov
inc
addr16
rcll
outsl
imul
popf
stc
add
in
pop
imul
lret
imull
sub
pop
popa
pusha
jl
pop
ret
or
imul
ret
fcomps
cmc
jne
mov
lret
or
subb
sbb
pop
sbb
and
and
or
cmc
mov
insb
cli
out
and
push
mul
sub
es
jmp
cli
lret
sti
xlat
jno
arpl
and
dec
je
enter
dec
xchg
frstor
pop
xor
popa
mov
fs
sbb
xchg
fsubs
movsb
pop
imul
dec
xchg
jle
adc
or
xchg
callw
lahf
dec
rclb
call
xor
push
push
js
adc
add
push
inc
mov
and
mov
xchg
pusha
push
in
or
mov
cltd
fisubrl
inc
test
jle
js
ljmp
mov
cmp
sbbl
mov
xchg
cwtl
idivl
js
shll
mov
xchg
loope
cli
mov
imul
inc
sbb
xchg
imul
int
jecxz
popf
lret
push
repnz
les
xor
jbe
enter
sbbl
cmp
push
and
lods
ja
in
cli
mov
repnz
push
inc
xor
outsl
and
nop
fdivrl
test
cli
xchg
cmpsl
mov
jne
lock
mov
adc
mov
outsl
push
add
mov
fcmovnu
or
ljmp
mov
mov
mov
xchg
sahf
daa
inc
negl
sub
cld
add
aas
mov
sub
pop
jecxz
cwtl
xchg
sub
and
dec
sbb
nop
call
add
icebp
jns
mov
sbb
int3
jb
pop
test
cmpsl
sbb
inc
ficoml
cmp
sub
add
test
cmp
or
in
cmp
gs
and
inc
js
outsl
mov
fwait
push
rorl
pop
inc
sbb
mov
rcl
push
push
xchg
in
cs
pushl
sbb
or
pop
rcll
sahf
iret
test
addb
push
mov
xrelease
mov
mov
repnz
mov
lret
cmc
pop
xor
out
data16
daa
cmpsl
lock
imul
adc
out
loope
leave
or
arpl
fcmovne
icebp
cmp
jbe
mov
adc
sub
ljmp
cwtl
dec
push
insb
adc
inc
movsl
aad
and
iret
xorb
pop
cli
rcll
jbe
push
or
add
movsb
xlat
and
pop
iret
inc
iret
call
mov
imul
enter
std
add
and
call
ja
adc
loope
xchg
lahf
dec
rclb
inc
out
out
pop
adc
xchg
mov
pop
xchg
lods
push
jnp
mov
mov
lret
les
imul
ret
aad
adc
inc
sub
xchg
mov
daa
aaa
cmp
aam
mov
add
sbb
jecxz
pop
out
mov
adc
lock
sbb
xor
repz
inc
ret
ret
aas
and
mov
insb
push
pop
mov
cs
sbb
add
in
cld
faddl
sbb
jge
daa
divl
clc
iret
lea
sar
popf
shrb
out
sub
push
pop
test
inc
pop
xor
pop
jae
test
leave
mov
aas
test
mov
icebp
or
mov
lods
rclb
test
inc
xchg
add
and
cwtl
bound
jl
int
mov
sbb
jb
fcompl
fcoms
dec
xor
sbb
fldt
jo
cmp
sbb
adc
mov
jno
or
dec
push
lock
hlt
lock
mov
les
scas
adc
lock
mov
push
dec
mov
mov
add
out
inc
insb
jns
cmc
inc
jbe
popa
stos
sbb
xor
inc
adc
or
out
repz
in
fcomip
xorb
testl
mov
xchg
rolb
push
and
popa
in
mov
push
pop
inc
add
push
imul
pop
loope
jmp
cmpsl
sbb
dec
pop
pop
pop
fdivp
pop
addr16
push
data16
or
insl
cmp
inc
test
addr16
xchg
jecxz
andb
or
pop
jns
jg
jmp
xor
pop
or
adc
hlt
jns
mov
or
pop
jnp,pn
in
push
xchg
sbb
inc
pop
loopne
lods
adc
mov
ret
pop
fsub
pop
out
nop
or
ficomps
repz
jmp
xchg
inc
cmp
cmpb
fwait
xor
mov
xor
sub
ljmp
lds
adc
lods
sub
inc
xor
fistl
enter
int
mov
fwait
mov
dec
xchg
mov
sti
sbb
xchg
sbbb
push
loopne
call
scas
sbb
push
push
daa
rcr
sbb
add
add
xchg
nop
aas
push
scas
add
cmp
test
xorl
ja
pop
out
sbb
sbb
lock
pop
and
or
in
lock
aas
push
mov
scas
pop
test
adc
pop
out
adc
jo
les
addr16
rcl
pop
cltd
aad
sahf
ds
mov
pop
push
in
out
add
sti
or
sti
xchg
lret
shl
cltd
jecxz
mov
xchg
xchg
cmp
or
push
aam
mov
sub
jle
inc
push
cltd
pop
jl
andl
sbb
mov
push
inc
insl
aaa
mov
xchg
dec
mov
xchg
sbb
insb
arpl
jnp
jbe
pushf
in
cmp
test
push
mov
cmpsb
xor
imul
insl
mov
dec
lret
leave
fwait
xchg
popf
pop
mov
and
repz
or
mov
jp
adc
insl
lcall
mov
insl
ss
inc
xchg
addb
hlt
les
fdivs
jb
sbb
sbbl
pushf
and
dec
in
mov
mov
mov
mov
mov
sbb
dec
stos
loop
lock
ror
mov
inc
push
daa
jg
fildll
test
in
scas
nop
in
mov
jns
movl
push
mov
enter
rclb
ljmp
int3
call
cmp
xchg
mov
and
negl
add
pusha
xor
ds
fs
mov
pusha
cmpsb
inc
in
idivl
add
mov
sbb
sti
shlb
push
aas
movsb
sti
sub
jecxz
mov
ljmp
push
lahf
xchg
xor
stos
int
fcmovu
sets
out
cltd
dec
fbld
adc
fwait
out
fs
mov
mov
mov
out
and
dec
popf
push
es
test
rclb
cmp
sbb
mov
dec
pop
mov
adc
ret
push
ds
mov
jle
arpl
dec
rep
rcll
loope
jl
jl
xor
enter
or
sbb
pushf
add
dec
xchg
call
test
xor
mov
clc
icebp
jp
push
fidivrl
jg
jp
mov
out
sbb
icebp
ficoml
push
jne
hlt
sti
dec
arpl
sbb
ja
in
pop
inc
shll
mov
std
fwait
cmp
sbb
stos
lock
adc
sti
pmaxsw
and
sub
cmp
mov
cmp
adc
sbb
andl
out
bound
cmp
mov
xadd
or
cmc
jecxz
inc
push
lahf
in
in
lock
inc
inc
insl
test
dec
aam
sub
dec
lret
dec
in
test
es
ljmp
insl
in
xchg
fistpl
movsl
mov
fwait
pop
stc
clc
daa
mov
jl
aas
inc
mov
lds
ja
adc
mov
jo
test
and
jmp
add
std
fdivrs
mov
iret
int
pop
dec
hlt
cli
sbb
sub
cmp
jl
push
push
xor
jbe
fwait
jne
repz
in
xor
xchg
insb
out
sub
pop
mov
add
fcompl
jb
fcomps
push
cmp
add
xchg
pushf
pusha
cmp
je
mov
movsb
aas
jns
dec
push
dec
mov
cmp
push
aaa
cmp
lock
jnp
clc
call
aam
das
sarl
xlat
inc
lret
arpl
jmp
fisttpll
mov
inc
adc
sbb
pop
std
ljmp
insl
xchg
mov
mov
xchg
lea
jecxz
decl
orb
adc
adc
outsb
jmp
inc
stos
out
xchg
mov
and
out
arpl
adc
inc
pop
inc
xchg
rclb
sti
stos
popa
mov
dec
mov
sub
xchg
pop
popa
push
sbb
cmp
cmpsl
icebp
sbb
pop
and
sbb
lcall
mov
hlt
out
ljmp
cmpb
add
dec
sub
cwtl
xchg
sahf
hlt
push
mov
dec
pusha
inc
jno
pop
inc
pop
cmp
cs
repnz
fwait
sbb
ret
sbb
neg
shlb
push
push
daa
jne
shl
xchg
sub
fstpt
pop
add
in
and
repz
mov
ss
hlt
cmp
insb
icebp
adc
add
sub
sub
pusha
push
inc
adc
lock
add
test
js
or
inc
cmp
jbe
cli
enter
loopne
inc
dec
jne
sbb
inc
add
lds
sahf
mov
inc
in
aad
inc
mov
cmpsb
data16
xor
sbb
pop
hlt
jge
out
dec
xchg
xor
mov
push
mov
push
repnz
js
scas
movsl
push
and
fwait
xor
xlat
sub
je
test
add
bound
jmp
jmp
push
movsb
aas
sub
je
mov
aaa
lret
jl
and
lds
mov
inc
sbb
repnz
and
inc
push
jne
push
xchg
push
dec
test
aad
sbb
push
pop
push
xchg
xor
mov
loope
addb
xchg
fsubs
imul
jecxz
in
out
in
shl
es
cmpsl
fdivrl
mov
pop
mov
fbld
jo
leave
fistpll
mov
addr16
shr
adc
push
jge
mov
push
mov
loop
das
push
sub
adc
cmp
stos
mov
jne
xor
sbbl
cli
jne
adc
lahf
int
pop
inc
cmp
push
in
inc
shrl
adc
cmp
loopne
and
out
xor
or
mov
hlt
dec
fmull
pop
add
loope
test
and
jb
xchg
js
mov
shll
enter
mov
mov
fidivl
inc
dec
pop
in
std
add
or
es
stos
mov
mov
bts
clc
push
cltd
and
jmp
pop
adc
jo
jns
push
xchg
lods
test
add
mov
lea
adc
jns
ss
int
nop
xor
push
cmpsl
leave
cmp
aad
shrl
sub
mov
mov
add
rorl
jne
push
daa
popf
imul
ret
mov
adc
adc
sbb
mov
and
or
push
push
rcll
out
imul
dec
xor
imul
push
jmp
pop
adc
outsb
mov
cmp
arpl
jae
testb
ljmp
lock
mov
fldt
or
inc
jecxz
loopne
dec
cld
stos
les
xor
push
sub
call
mov
out
jg
inc
rol
inc
cmp
into
loop
fdiv
dec
leave
dec
inc
inc
sub
in
sti
jmp
rcl
ss
xchg
decb
dec
jno
mov
roll
sbb
dec
aas
dec
addb
or
cmp
ljmp
pop
imul
mov
add
lock
cli
mov
add
jmp
push
mov
jle
mov
lret
xorb
divb
push
xor
gs
mov
shlb
or
aam
push
xlat
pop
mov
xor
lcall
nop
add
das
xchg
jne
mov
sahf
push
cmpsb
js
movsl
dec
pop
xor
fwait
pop
punpckhdq
xchg
sbb
mov
and
push
in
or
jp
mov
mov
rorb
lea
cs
dec
cmp
xchg
out
mov
loope
push
icebp
pop
adc
popf
push
enter
jnp
mov
jg
sbb
scas
sbb
cmc
daa
mov
mov
jmp
lods
movsl
loopne
pushf
jno
sti
mov
cmc
sub
mov
fdiv
mov
pushf
dec
stos
fnstcw
xchg
pop
and
sbb
xor
jmp
lret
leave
sub
and
jnp
fildl
xchg
ljmp
inc
sub
mov
iret
pop
add
jb
andnps
sbb
adc
sub
imull
and
mov
xor
jb
popa
sbb
stos
test
add
dec
ret
xor
stos
sub
test
pop
lret
outsl
jmp
dec
and
rorl
stos
push
dec
stos
test
out
les
js
xchg
adc
test
iret
pop
adc
jl
js
xor
lods
gs
dec
out
mov
xchg
jge
mov
popa
aas
cmp
gs
clc
mov
mov
andb
jg
mov
mov
cmp
push
mov
subl
push
xchg
mov
adcb
out
movsl
push
iret
xchg
dec
lock
icebp
xor
stc
pop
in
and
mov
mov
ja
mov
fnstenv
lcall
mov
adc
mov
sub
sub
pop
sub
mov
lret
imul
inc
pop
push
push
push
mov
cmp
xchg
cmp
std
push
iret
mov
push
lahf
pop
ljmp
loop
lock
lcall
xchg
fs
push
loop
js
pop
aad
jae
leave
jae
sbbb
fwait
jb
mov
popa
jno
dec
lret
sbb
push
pushf
pusha
mov
leave
lret
and
push
out
inc
add
xchg
data16
idivb
push
rorb
push
pop
int
jne
or
xchg
lods
inc
or
loopne
sbb
jge
gs
sub
ds
aaa
mov
push
jae
js
clc
popa
cmc
cld
into
jecxz
pop
ret
pop
push
mov
call
jbe
mov
aaa
xchg
sbbl
pop
mov
scas
shll
mov
cmpsb
push
icebp
adc
add
jge
iret
clc
jg
mov
lea
mov
push
out
sbb
cmp
pop
loop
inc
subb
cmp
fs
xor
sbb
stos
lods
ja
adc
jbe
lahf
xchg
or
cmpsl
jbe
mov
adc
addr16
cmpsl
dec
mov
cmp
xchg
and
subl
cltd
xchg
aas
test
pop
ljmp
repz
negl
stc
inc
movb
and
mov
sbb
xlat
mov
ljmp
les
sub
rorl
sub
js
xchg
movsb
mov
xchg
fisubs
add
leave
imul
or
jbe
mull
and
sbb
movsl
add
out
pushf
cmp
sub
imul
adc
push
insb
pusha
jae
xor
xchg
scas
jg
int
sbb
fdivrs
out
in
in
sub
in
mov
inc
inc
or
dec
icebp
mul
mov
cmp
fisubrs
outsl
cmpsl
sbb
pop
cs
jb
pop
rcrb
int3
and
push
es
xor
test
cmpb
lea
mov
adc
js
push
std
scas
mov
aam
mov
pop
push
push
pusha
dec
sbb
pop
adc
jg
xor
xor
mov
jg
pop
inc
dec
xor
arpl
lock
ja
insb
pop
das
stos
lea
fs
ja
add
loopne
cmc
push
jo
adcb
jmp
cwtl
es
addr16
pop
jecxz
pop
pop
cmp
cmp
aad
jbe
pop
sahf
mov
insl
mov
call
dec
mov
lcall
sub
xor
movsl
mov
jp
jo
or
das
inc
or
or
pop
xchg
popa
gs
aam
xorb
add
ja
ror
imul
test
in
daa
dec
or
cmpsl
test
mov
mov
or
inc
or
movsl
out
cwtl
jmp
repz
dec
cltd
cmp
push
mov
lcall
push
ljmp
into
inc
loope
int
sub
rcrl
jns
xor
dec
repz
mov
add
das
pmulhw
push
in
and
sub
mov
xchg
push
xchg
and
xchg
xchg
jp
mov
push
and
push
das
mov
clc
loop
push
addl
push
sub
out
push
out
push
xchg
sbb
lods
and
fnsave
pop
std
mov
sti
inc
sub
xchg
lcall
sub
decl
orb
popa
lahf
lods
jno
pop
dec
mov
inc
mov
cmp
jp
dec
inc
stc
cmp
sbb
or
gs
repnz
xchg
arpl
popa
mov
xor
fsubs
and
mov
insb
xchg
lods
pop
sbb
jg
xor
movsb
mov
xchg
cltd
push
add
subl
test
out
loopne
dec
or
sti
xlat
popf
mov
mov
dec
xlat
mov
ret
rcrb
pushf
mov
dec
push
or
out
jecxz
wbinvd
and
cmp
rep
adc
pusha
js
and
cmp
clc
clc
mov
shrb
incl
adc
pop
dec
xor
data16
xor
fmuls
mov
inc
and
mov
pop
loop
mov
inc
pop
lods
jge
hlt
mov
test
xchg
cltd
adc
sub
xchg
inc
std
xchg
pop
sub
pop
fisubrl
sub
xor
jbe
sub
xchg
sub
inc
sub
add
aaa
in
dec
cmp
xlat
aam
lret
push
mov
inc
je
ror
xchg
pop
cmp
dec
sbb
xchg
cmovno
xchg
js
push
popa
les
ja
xchg
cmp
pop
sub
out
call
adc
cmp
mov
outsl
test
push
mov
les
push
dec
inc
add
push
adc
iret
insl
jecxz
pushf
push
cmpsb
iret
lret
mov
xchg
pop
lea
xor
sbb
lods
mov
dec
repz
call
enter
jmp
nop
shrl
dec
or
aam
pop
xchg
pop
add
mov
sub
xor
pop
stc
dec
pop
xor
dec
push
sub
nop
dec
call
insl
leave
fcmovb
jo
mov
add
lods
mov
loop
mov
es
xor
aam
adc
pop
xor
sbb
lea
adc
and
addb
cmpsl
or
or
xchg
jg
cmp
mul
nop
lret
dec
in
push
mov
xor
cmpsb
inc
mov
cmovle
mov
xor
gs
mov
jge
stos
addb
mov
pop
xchg
xor
jecxz
sbb
mov
arpl
mov
xor
inc
int
repnz
add
mov
and
movl
fildll
lods
fisubs
push
gs
mul
testl
jns
inc
filds
inc
lret
sahf
mov
pushf
sub
out
jno
xchg
adcb
imulb
pop
pop
mov
sub
mov
aam
fstpt
into
cmp
pop
pushl
xchg
iret
xchg
pop
jbe
stos
adc
xor
push
mov
mov
dec
mov
lods
lea
mov
xchg
xchg
sub
call
shl
dec
fsubs
cmpsl
or
pop
mov
fstl
sti
pop
setl
hlt
cmp
mov
jns
inc
add
dec
add
into
out
je
leave
std
push
dec
lods
push
pushl
xlat
push
lods
jno
pop
pop
repnz
in
nop
rolb
jp
dec
clc
dec
push
jle
jmp
and
faddl
dec
and
pminub
inc
stos
jnp
push
mov
dec
inc
test
pop
jl
sbb
mov
sub
sbb
cmp
std
scas
scas
sub
decl
xchg
roll
jnp
hlt
or
mov
cs
push
shll
jb,pn
popa
iret
jnp
loope
mov
movb
push
lahf
int3
lret
mov
cmp
test
leave
arpl
push
icebp
mov
cmp
pop
outsl
and
not
loope
fmuls
or
mov
neg
scas
hlt
test
jmp
cmp
or
out
or
lcall
dec
xor
mov
adc
xchg
inc
lods
jnp
test
push
ret
scas
js
jnp
xor
cld
popl
out
sti
mov
and
push
add
packuswb
sbb
dec
mov
rolb
sub
iret
cmp
inc
subb
xor
fildl
out
scas
inc
test
xchg
mov
adc
jae
psubsb
ja
std
mov
jnp
cmp
mov
lret
and
jge
push
and
adc
mov
imul
stos
scas
lahf
xchg
jp
aas
loop
mov
enter
fwait
enter
xchg
and
pop
xchg
pop
scas
in
xchg
idivl
mov
xchg
loopne
and
cmp
mov
ja
imul
push
out
inc
testb
les
push
adc
pop
mov
bound
push
pop
push
les
sub
nop
and
fdivs
mov
int
leave
adc
push
lds
int
xorl
push
cmpl
inc
xlat
push
std
shlb
in
push
add
lock
sub
dec
ret
mov
dec
out
xchg
and
dec
xchg
testl
popf
sbb
in
insb
and
push
dec
pop
xchg
orl
ss
cmp
push
xchg
mov
mov
je
inc
lods
std
arpl
scas
rcrl
adc
rorb
insb
or
shlb
or
jmp
pop
test
mov
ficompl
xor
negb
decl
imul
test
cmp
test
cmp
cmp
sub
ss
mov
lahf
addr16
pop
push
lcall
in
out
sbb
push
add
xchg
xchg
shll
cld
add
cld
add
in
lods
push
mov
jecxz
jg
shl
mov
aas
outsb
jno
jmp
mov
sub
mov
sub
loope
dec
imull
outsb
int3
cmp
mov
clc
cltd
mov
insl
xor
sub
inc
xchg
loop
inc
testb
dec
lock
mov
mov
jmp
xor
repnz
push
or
xchg
shlb
jae
cwtl
xchg
mov
push
sub
mov
pop
jbe
adc
inc
andl
dec
repnz
sub
jle
pop
daa
sbb
out
jb
mov
mov
push
ss
insb
not
push
dec
jbe
xchg
xchg
test
daa
pop
movsb
jns
movsb
adc
pop
mov
imull
sbb
push
movsb
cld
fbstp
mov
shlb
ljmp
cmpsl
sub
sahf
jge
es
push
and
repnz
dec
ja
stc
inc
pop
mov
incl
std
dec
sub
iret
arpl
and
mov
mov
xor
inc
add
addb
cmp
jo
jb
cld
sbbl
adc
push
xor
lret
subl
inc
fs
add
inc
aaa
and
dec
mov
add
inc
dec
mov
jg
mov
jne
pusha
add
sbb
mov
negl
rcr
jmp
ljmp
xchg
call
icebp
push
lret
or
rcll
or
mov
mov
adcl
sarb
pusha
push
imul
ljmp
add
pop
ret
adc
xor
and
pushf
jae
pusha
xchg
jno
xor
or
mov
jmp
jbe
xchg
test
loopne
repnz
push
repz
movsb
fisubs
xor
shll
into
jne,pn
adc
push
inc
push
sub
push
js
popf
hlt
pop
mov
cmp
inc
stos
inc
aas
cmp
stos
push
jge
fdivrp
aaa
fcompl
ret
fstps
loopne
repnz
xor
test
inc
and
out
not
jo
sbb
mov
mov
pusha
out
xchg
jge
shlb
or
mov
das
push
and
cmp
insl
inc
cltd
push
js
push
lret
xchg
sbb
cltd
out
notb
mov
or
pop
cltd
lret
ss
lea
popa
cmc
pop
sbb
sbb
in
jl
inc
ds
icebp
jne
insb
dec
test
push
imul
sub
nop
xchg
sbb
xlat
and
out
lret
inc
cwtl
mov
or
push
and
sbb
dec
mov
add
jne
cwtl
imul
and
inc
push
push
pusha
icebp
pop
jg
adc
cs
daa
cs
lret
jno
mov
mov
sub
jmp
and
ror
hlt
xor
or
mov
sub
pop
iret
xchg
add
xchg
push
pop
adc
and
popf
lds
mov
scas
jp
fsub
stos
ljmp
sbbl
enter
addl
les
notb
jmp
dec
mov
outsb
aas
sbb
inc
ljmp
sbbb
mov
mov
repz
cwtl
insl
and
pop
push
pop
mov
push
inc
mov
pop
jp
in
adc
inc
test
cwtl
addr16
dec
xlat
outsl
fstpt
jle
push
pop
sbb
jmp
mov
xor
adc
xchg
mov
bound
sub
and
lds
xor
xchg
sbb
test
leave
movsb
xchg
sti
and
xor
imul
mov
add
push
pop
adcl
cmc
xor
inc
cmc
fisubrs
popa
sub
jns
xor
jge
repnz
insb
adc
xorb
hlt
xchg
sbb
aad
mov
sub
in
rcrb
repnz
mov
dec
pop
fsubrl
jmp
mov
push
icebp
loopne
call
xor
pop
shrb
mov
fidivs
xor
and
rcll
test
cwtl
push
push
jge
cltd
orb
rclb
fdivs
xor
adc
aas
push
add
mov
test
inc
cmp
fcomip
aad
clc
enter
movsl
mov
fcom
rcl
jg
es
loop
adc
sbb
mov
dec
iret
xchg
pushf
inc
les
imul
enter
pop
lret
xor
aas
lret
pop
xchg
push
outsb
mov
inc
outsb
mov
mov
mov
push
ffree
cmp
enter
je
cs
dec
push
sub
mov
sub
xor
or
xor
mov
aad
cli
sti
cwtl
sbb
mov
lea
das
into
jo
cmp
into
push
add
mov
adc
addb
xchg
push
jg
jmp
movsb
pop
test
test
jle
movsl
mov
sub
add
dec
cmp
pop
std
mov
mov
insb
xchg
jo
sbb
and
mov
pop
stc
adc
call
xorl
jbe
inc
gs
push
cmpsl
add
sub
adc
pop
push
push
scas
scas
push
es
push
fadds
insl
sahf
pop
pop
js
cwtl
jb
outsl
xchg
daa
push
jne
xchg
mov
pop
cmp
out
aaa
xchg
out
adcb
int
loopne
dec
stc
sub
push
mov
mov
lods
ret
push
pop
xor
adc
adc
cwtl
mov
arpl
xchg
fadd
cmc
mov
cwtl
cwtl
insl
out
cmp
mov
xchg
lret
lds
push
adc
xchg
xchg
fimull
jne
sbb
repz
inc
mov
mov
sbb
movsl
jg
pop
test
vucomisd
out
jne
pop
jl
in
inc
pop
in
in
or
hlt
lock
pop
sbb
pushf
dec
sti
fmuls
aad
xor
sub
nop
mov
test
pusha
and
flds
mov
enter
sub
mov
ss
test
xchg
add
es
jne
lret
stc
fdivr
push
dec
filds
fistl
test
adc
xchg
insl
jno
mov
test
push
out
add
push
xor
pop
cld
repz
icebp
mov
rcll
popf
cld
shl
fistpl
pop
insl
fnstsw
insb
push
int3
xlat
ret
push
and
adc
cmp
jmp
push
mov
jno
mov
xor
pop
lods
add
insb
or
pop
xor
in
push
lock
xchg
movsb
aad
pop
sub
sbb
les
pusha
cmp
mov
loope
mov
push
pop
add
push
and
push
das
outsb
adc
cmpsl
fsub
fs
inc
inc
dec
push
ljmp
sub
jmp
lods
ja
inc
stc
dec
cmpsb
pop
sbb
dec
lret
mov
loopne
jno
xchg
inc
add
dec
cmp
outsb
out
scas
adc
inc
xor
inc
mov
inc
sbb
push
push
stos
shlb
pop
jl
mov
rcrl
cmp
ja
sbb
xchg
or
out
shrl
push
push
fmuls
sub
ja
push
cmp
insl
fistpll
sub
in
fsubs
xor
mov
cli
add
adc
cmp
jae
mov
fmul
push
mov
cmpsl
cmpsb
stc
sbb
je
or
dec
inc
jns
pop
fnstcw
mov
adc
pop
fs
mov
hlt
ret
or
and
cmp
xchg
repnz
call
ja
and
mov
cwtl
ljmp
xchg
out
sub
mov
jno
sti
lock
loop
ljmp
or
iretw
movsl
xchg
addb
sbb
add
sbb
faddl
push
daa
jns
xor
lock
lods
mov
jae
ljmp
stos
les
mov
adc
xchg
sti
loopne
or
ret
sbb
ret
sub
popa
sbb
xor
xor
or
dec
nop
pop
repnz
out
in
inc
enter
in
in
aad
enter
inc
pop
outsb
sbb
dec
pushf
and
push
cltd
mov
fucomip
pop
mov
mov
sbb
cmpsl
or
sub
mov
dec
movb
cmc
mov
dec
ds
sub
xor
add
sbb
sbb
rcrl
cmpb
jae
jnp
icebp
loope
pop
sti
les
ljmp
mov
or
fwait
mov
scas
xor
movsb
adc
dec
je
cmp
repz
cmpsb
dec
push
pop
ret
fs
mov
fnstenv
inc
out
imul
mov
sub
les
lock
jae
inc
lcall
jne
jg
repnz
sarb
dec
add
cltd
lods
pusha
pop
mov
dec
mov
pop
loope
cmp
add
fwait
loop
sub
mov
fiadds
adc
sub
xchg
pop
xchg
adc
mov
in
jae
sub
lods
inc
mov
stc
aad
pop
push
inc
test
pop
mov
scas
xchg
out
lea
popa
daa
push
adc
adc
call
pop
mov
sub
pop
fmuls
stos
shrb
pop
pop
jbe
adc
mov
pop
fidivrs
or
stos
mov
ja
inc
jecxz
push
jns
xchg
inc
scas
leave
cmp
cwtl
jo
add
popa
push
and
ss
xlat
mov
and
fistps
or
push
stos
pop
cmc
lock
sbb
fidivrs
adc
in
stos
adc
icebp
adc
or
sbb
push
pop
pusha
pusha
push
imul
push
in
add
out
adc
mov
rcrl
test
xor
sahf
push
dec
jne
sub
mov
dec
mov
in
fimull
push
adc
aad
addr16
int
das
dec
jle
dec
add
mov
and
lahf
or
icebp
repnz
mov
dec
fists
cli
cmc
dec
jbe
xor
pop
das
fwait
xor
add
lahf
jl
inc
divb
lret
push
ret
adc
mov
mov
sbb
add
or
aas
mov
mov
jecxz
inc
leave
adc
cwtl
outsb
dec
sub
jle
adc
jge
fcoml
inc
pop
adc
sub
shll
stos
loope
push
aad
sub
and
iret
sub
push
out
leave
sbb
cld
add
in
pushf
cmp
loope
dec
push
lock
jbe
sub
sbbl
aaa
jae
jns
lods
push
mov
adc
lds
loopne
jg
mov
xor
int3
push
test
inc
leave
shrb
jb
lds
push
pop
inc
loope
jo
inc
add
sub
adc
cmc
lods
xlat
jmp
cmpsl
shr
mov
jae
and
mov
int
cmp
repz
nop
add
or
mov
pop
lods
push
mov
aaa
xor
orb
sarb
xchg
sub
orl
cli
inc
shl
movsb
dec
arpl
push
fistps
mov
push
pushf
or
scas
mov
outsb
testb
mov
ret
dec
xchg
inc
repnz
fdivs
ljmp
sub
icebp
aas
loopne
in
dec
dec
inc
mov
cwtl
xchg
inc
cld
bound
adc
jg
cmpsl
dec
mov
push
shll
cwtl
scas
cmp
sbb
mov
sbb
js
ljmp
mov
mov
jmp
in
ret
cs
sahf
xchg
or
inc
xor
lret
mov
js
cli
xor
iret
inc
adc
ret
or
sarl
test
jmp
or
push
mov
jo
mov
movsb
mov
mov
cmp
cmpsb
iret
sbb
xor
fs
xor
cmpsl
lahf
mov
ljmp
pop
push
and
fs
outsb
adc
lahf
pop
push
inc
ret
lret
mov
xor
lds
ja
out
dec
sbb
repnz
dec
daa
xchg
inc
mov
push
inc
push
nop
clc
push
xor
xchg
clc
icebp
lcall
jge
mov
mov
add
aad
mov
jl
aam
sar
cli
xlat
mov
orb
test
fnstcw
push
pop
subb
sbb
aam
jnp
aad
rorl
les
jmp
push
icebp
lahf
mulb
fwait
add
push
lods
and
sbb
dec
lret
xor
xchg
into
push
pop
push
lods
orl
imul
lahf
movsl
ja
mov
shll
call
mov
popa
ljmp
out
shr
jb
fstps
dec
sbb
movl
jnp
movsb
xchg
and
sbb
or
cmpb
push
fcoml
lock
cld
imul
loopne
sbb
sub
and
hlt
shrb
mov
inc
cmp
rorl
or
xchg
xchg
movsb
pop
test
jg
mov
cmc
adcl
push
adc
aad
int3
dec
or
test
sti
xor
and
adc
sub
in
xchg
push
inc
lret
lods
nop
or
adc
imul
cmc
mov
ret
shl
inc
push
push
jecxz
mov
mov
pop
arpl
sbb
pop
mov
outsl
or
inc
cltd
out
lods
jns
pop
js
jecxz
sbb
mul
add
push
adc
popf
int3
mov
lea
aas
ret
sbb
pop
cltd
popa
cmp
test
cmpsb
xor
in
mov
push
jg
add
cmp
push
jne
xor
xchg
mov
dec
stc
rorl
push
popa
cli
popf
pop
call
inc
rclb
bound
mov
or
sub
movsl
and
mov
dec
mov
inc
mov
dec
test
pop
je
lds
pop
and
movsl
add
cwtl
push
repz
jb
cli
jecxz
ret
into
aad
sub
xor
mov
popf
sub
pop
js
sub
xor
or
fstps
out
mov
lods
int3
cmp
inc
sub
idivl
es
jae
fstl
lods
add
xor
sub
and
xchg
mov
enter
mov
mov
call
sbb
cmp
insb
push
or
adc
mov
add
and
insl
xor
repz
ss
int3
rcr
mov
sahf
movsl
push
jecxz
mov
fbstp
xor
int3
loopne
or
inc
inc
fcomps
mov
shrl
pextrw
pop
mov
data16
cmp
imul
sub
ds
out
mov
mov
cmp
test
push
cmp
adc
pop
fs
adc
dec
cmp
mull
fsubrs
sub
jmp
pop
leave
fisubrl
xor
fsts
push
adcb
cmp
int
lret
paddd
pop
or
add
sbb
mov
clc
or
nop
pop
movsb
jbe
inc
sbb
insb
mov
push
sub
ds
pop
mov
and
addr16
out
inc
mov
mov
aam
popa
mov
adc
out
xor
icebp
lds
mov
lahf
xor
add
or
inc
xchg
ss
cmpsb
mov
cmc
in
test
adc
in
mov
mov
xchg
pop
enter
or
push
pop
js
inc
mov
mov
sub
dec
add
xchg
add
xchg
xlat
jmp
int
mov
push
cmp
dec
mov
dec
mov
xchg
sub
cmpsb
xlat
cmpsl
in
pop
mov
rcll
sub
xor
scas
push
cmp
popa
sahf
cld
das
lea
mov
in
add
or
scas
in
stos
mov
pop
int
and
lcall
xchg
imul
push
mov
add
push
cmp
repz
test
sbb
cmp
push
loopne
and
add
mov
mov
add
enter
sub
call
pop
adc
pop
pop
fs
jmp
push
test
sbb
pop
out
loopne
mov
in
or
jge
call
lahf
mov
fcoml
sbb
xchg
push
jno
lods
push
mov
aaa
ret
popf
jo
dec
sub
lea
inc
js
repnz
mov
push
and
faddl
adc
mov
outsl
dec
in
test
pushf
loop
and
lock
sarb
pop
movsb
imul
sahf
lret
xor
icebp
adc
ds
divl
or
and
sub
scas
lea
js
lret
push
push
pop
stos
mov
adc
stos
fucomp
xlat
push
pushf
mov
test
push
loop
sub
jge
or
push
sub
ds
jle
test
jbe
lods
jmp
pusha
jbe
push
outsb
rclb
addr16
add
scas
dec
aas
jge
sahf
sti
enter
dec
push
push
adc
fldenv
aad
mov
pop
ret
gs
jle
shlb
cmp
ret
rorl
push
std
sbb
enter
sub
inc
or
cmp
clc
push
xchg
pop
mov
adc
adc
pop
or
add
push
mov
scas
pop
or
mov
inc
sbb
mov
int3
and
xlat
out
andl
scas
inc
xchg
or
bound
pop
xlat
mov
in
into
dec
adc
rcrb
mov
or
std
dec
mov
and
adc
dec
filds
sub
addr16
inc
adc
int3
dec
sbb
mov
sahf
mov
inc
and
mov
jne
jnp
and
pop
divb
enter
xchg
push
adc
mov
cmc
imul
xchg
mov
insl
cmp
push
out
dec
mov
inc
cmp
fisttps
leave
dec
sbb
leave
bnd
lds
subl
xor
cs
cltd
les
out
inc
jo
dec
movsl
iret
movsl
push
mov
inc
sbb
mov
stos
sbb
xor
mov
hlt
inc
sbb
scas
xor
or
cmc
test
movl
rcr
int
cld
jno
stos
in
push
sahf
lock
push
repnz
addr16
fwait
and
xchg
data16
fbstp
testl
and
push
sbb
fscale
loopne
das
xor
int
xor
or
pop
mov
inc
xchg
xor
dec
js
inc
dec
mov
test
jae
aas
jecxz
fildl
jb
push
cmc
icebp
fs
jns
xchg
pop
aad
pop
jle
fwait
mov
scas
or
lret
push
sbb
sub
lret
ret
push
xchg
mov
jo
or
mov
jge
jnp
mov
mov
push
int
or
and
cltd
js
mov
dec
mov
or
xchg
aaa
rcl
fiaddl
pop
inc
sbb
mov
les
cmpsb
cmpsl
repnz
test
push
and
icebp
aaa
push
loopne
or
mov
inc
sub
sahf
movsb
cmp
in
das
and
mov
aad
scas
in
testb
jmp
cmc
js
xchg
mov
ljmp
and
add
les
cmc
dec
add
aad
ret
test
fisttps
jg
aaa
mov
cmc
xor
jb
cmp
es
dec
movsb
push
pop
mov
popa
daa
dec
pop
and
fmul
les
cmp
out
popf
and
lock
fldenv
add
les
movb
pop
mov
repnz
lea
pop
cmp
adc
dec
idivb
int3
in
in
cmp
jbe
fwait
inc
out
push
cltd
inc
xchg
imul
or
rol
inc
pop
or
sbb
nop
and
repz
cmp
pop
jbe
repz
jecxz
inc
fs
dec
lods
repz
dec
fisttpll
add
adc
test
dec
mov
pop
lea
arpl
enter
mov
lcall
nop
xchg
int3
and
scas
inc
xchg
add
jle
adc
mov
fstps
popa
mov
jmp
cmp
insb
xlat
movsb
sti
jne
jecxz
push
mov
push
icebp
testb
pop
ret
shlb
dec
ja,pn
jle
inc
pop
jno
stos
addr16
xor
xchg
xor
xchg
movsl
cmpsl
mov
add
out
or
pop
cmpb
lods
sahf
mov
xchg
pusha
push
lret
sub
or
inc
test
jae
xor
ret
shufps
popf
les
or
mov
dec
sbb
je
lods
xor
fyl2xp1
push
mov
inc
adc
outsb
jl
mov
jbe
inc
loope
adc
daa
scas
sub
imull
inc
and
fstl
push
and
adc
pop
ss
or
sub
jbe
or
gs
xchg
jmp
mov
cmc
outsl
push
daa
adc
data16
lahf
push
mov
movsl
inc
sbb
push
js
jmp
les
bnd
sub
inc
inc
add
lea
sub
loop
ror
cwtl
sub
mov
xor
gs
cmp
ficoms
popa
popf
or
mov
and
cmp
dec
stos
inc
test
fdivr
xor
lods
stc
ret
mov
dec
mov
cmpb
fwait
addr16
jmp
out
subl
loopne
fstps
or
in
mov
xlat
pop
lahf
outsl
daa
mov
dec
test
jne
sub
repz
lods
mov
mov
mov
orl
mov
push
mov
push
adc
in
pusha
xlat
arpl
sar
pusha
xor
in
les
cmp
test
cmp
in
xchg
xor
dec
repnz
and
scas
test
or
dec
pusha
add
in
xor
jb
cmp
loop
xor
js
scas
fmulp
das
pop
mov
pop
out
pop
test
sub
inc
dec
mov
and
loope
lods
jno
mov
sub
mov
push
sub
inc
push
xor
xlat
xor
scas
mov
repz
mov
sub
dec
push
insb
xor
xor
cli
mov
out
dec
jno
inc
xchg
clc
hlt
pop
pusha
js
add
dec
ror
sub
inc
bts
les
insb
fdivs
nop
push
add
cmp
inc
into
pusha
scas
sub
push
push
xor
fwait
sbb
xor
pop
rclb
add
adc
xchg
dec
lcall
jmp
xchg
addr16
dec
outsb
hlt
gs
or
jp
popa
xchg
jmp
outsb
jb
push
ret
xchg
int3
mov
sbb
sub
xchg
sbb
or
sub
mov
inc
sub
mov
sbb
ror
jb
bound
jnp
xchg
loope
sub
mov
jae
inc
jl
insb
add
ja
or
xlat
pop
add
ret
aam
pop
sbb
inc
mov
gs
xor
mov
ret
mov
pop
stos
sub
daa
lods
repz
add
push
jnp
cmpsl
cmp
dec
gs
fwait
stc
inc
shll
jae
add
icebp
sub
fists
xor
mov
les
rol
and
mov
inc
push
mov
dec
dec
jl
inc
int3
sahf
pop
scas
push
call
fisttps
jg
cmp
popa
xor
out
xchg
jmp
notl
imul
out
mov
jle
imul
mov
int3
sub
js
sar
popa
xor
xor
imul
out
mov
out
daa
divl
mov
sbb
xor
addr16
mov
clc
sar
fs
daa
loope
sbb
push
addl
lock
inc
das
in
jecxz
add
das
mov
pop
pop
lock
mov
push
outsl
mov
mov
mov
mov
sub
out
push
cwtl
push
in
test
cmp
jle
jmp
dec
ljmp
and
mov
mull
xlat
adc
das
aad
aam
pop
pop
loopne
push
hlt
push
sbb
sbb
mov
sub
cli
clc
aad
icebp
push
sub
loopne
ss
imul
xchg
mov
mov
lcall
and
mov
gs
pop
xchg
aas
jecxz
inc
daa
faddl
out
adc
dec
dec
pop
icebp
fnstsw
imul
cwtl
cmpl
cmp
mov
scas
sbb
arpl
rorb
pop
jbe
shll
test
dec
push
mov
lods
mov
cmpsl
mov
orb
pop
pop
jae
sub
lds
loope
add
scas
cltd
frstor
dec
add
rcrl
xacquire
mov
dec
rcll
in
cwtl
mov
mov
rol
jno
je
inc
mov
test
ljmp
movsl
xlat
jnp
and
mov
lret
les
fisubl
scas
xchg
xchg
mov
sbb
mov
aam
stc
aad
and
addl
notb
jns
out
shll
pop
into
sub
andl
push
sbb
iret
loope
aad
cwtl
push
pop
and
lods
jecxz
push
notb
push
data16
sbb
push
xchg
adc
xchg
add
enter
mov
sub
rcr
sub
mov
push
dec
movsl
frstor
popa
mov
enter
jg
mov
fcoml
stc
aaa
js
in
jg
out
adc
mov
xchg
dec
js
rorb
pop
push
mov
mov
push
push
mov
cmpsb
rolb
sahf
xchg
cmpsl
divl
shll
sbb
negb
xor
jecxz
cmp
movaps
xchg
adc
mov
and
cltd
in
mov
mov
sub
into
adc
das
or
sub
dec
repnz
dec
test
add
inc
dec
mov
push
jl
sub
ficoms
fsubp
mov
jecxz
ss
sti
adc
not
lods
pop
pop
movsb
jecxz
addl
jecxz
pop
push
dec
push
es
mov
rcrl
lcall
pop
mov
jo
push
int3
repnz
loopne
out
stos
les
push
and
mov
mov
lea
cld
shlb
cmp
inc
jmp
fnstenv
out
inc
xor
sub
jmp
mov
adcb
mov
clc
ss
mov
add
sub
test
inc
jmp
imul
fstpt
sahf
jo
xchg
pusha
scas
ret
add
and
jmp
mov
movsb
push
and
out
push
lea
stos
push
mov
add
lock
sti
lock
sub
cmp
out
shlb
aam
lcall
dec
lcall
mov
sub
std
cwtl
pop
popf
insb
das
jge
fldt
mov
rolb
xchg
adc
cmp
loope
adc
pop
push
out
mov
jecxz
dec
fwait
mov
movsb
push
das
pop
ss
mov
test
in
pop
pop
nop
jg
jp
arpl
mov
in
cli
pusha
xor
lock
mov
aas
std
xchg
mov
and
stos
push
repnz
and
dec
movl
sarb
mov
mov
lock
inc
pop
jno
adc
jae
pop
and
bound
repnz
push
or
dec
out
lahf
scas
imul
mov
adc
sbb
out
and
mov
add
popf
in
xchg
int3
daa
mov
pop
out
ja
lcall
cld
mov
frstor
aad
outsl
adc
jg
sahf
xchg
rorl
xchg
pop
in
sbb
mov
inc
push
push
sub
mov
jo
xor
fisubl
fisttps
sbb
inc
popa
push
cmc
lea
dec
ret
add
stos
pop
add
test
jno
jae
subb
cmpsb
cli
stc
add
fdivs
fwait
repnz
cs
mov
daa
into
out
call
into
inc
or
mov
push
leave
pop
int3
ficoml
out
jb
xchg
or
ret
pop
pop
jnp
gs
ret
bound
xchg
add
adc
les
enter
lods
or
mov
mov
in
push
dec
outsl
pop
enter
sti
inc
dec
push
xor
inc
repnz
cmp
push
push
or
add
push
mov
lret
test
or
lods
add
mov
bound
cmpsl
aas
jb
or
jo
fidivs
mov
lret
pop
nop
mov
arpl
ror
and
sbb
cmp
stos
call
cmp
and
mov
mov
cs
push
mov
clc
pop
jge
inc
xor
mov
add
sub
loopne
lahf
adc
popa
enter
sbb
sbb
ljmp
add
push
mov
out
cmp
hlt
inc
push
pop
sub
push
shlb
aaa
mov
psubq
jp
jg
cmp
sub
ret
icebp
fdivrs
or
push
sbb
mov
lahf
push
sbb
pusha
xlat
scas
sbb
jae
in
inc
cltd
add
or
pop
stos
movsb
dec
sbb
sbb
inc
ljmp
pushl
mov
enter
sub
outsb
jmp
and
push
mov
jbe
fmulp
mov
inc
sub
lret
mov
aas
xchg
out
div
mov
lret
clc
cmpsb
dec
lods
je
mov
xchg
inc
out
in
xor
mov
mov
popf
sub
adc
fs
mov
movsb
xchg
adc
jo
mov
sub
jns
ss
aad
repnz
orb
test
testb
or
and
xlat
mov
addr16
xchg
lods
lods
lret
in
xor
in
popa
mov
shll
push
mov
pop
cltd
imull
outsl
cltd
mov
test
jmp
dec
int3
sahf
bound
inc
loop
in
mov
push
int
sbb
jbe
int3
cmp
sbb
jo
lret
andl
or
inc
daa
push
sub
daa
clc
sbb
mov
std
jg
lds
adc
dec
mov
int3
mov
mov
arpl
cmp
mov
ja
cltd
es
xchg
xor
jmp
sub
lret
in
inc
push
lret
sarb
and
pop
test
loope
in
jg
sub
in
xchg
out
sar
je
jl
push
aaa
sarl
mov
fwait
sub
data16
jp
push
hlt
mov
leave
stos
sbb
dec
mov
or
rcrl
aaa
fldenv
repz
adc
sti
sti
adc
jno
mov
mov
and
xorb
adc
jbe
add
repnz
adc
inc
mov
int3
mov
cmp
repnz
mov
dec
imull
mov
aas
mov
shlb
leave
cmp
mov
cmp
pushf
or
in
rclb
add
jae
addr16
imull
dec
dec
mov
hlt
push
jmp
inc
xlat
in
outsl
mov
in
xor
cmp
push
or
out
xor
icebp
xlat
pop
aaa
aam
xor
xchg
pop
jg
imul
push
sbb
in
wbinvd
movsl
sub
in
and
test
mov
xchg
fsubl
jmp
dec
fsubl
adc
movsb
mov
sub
ret
lahf
rcrb
sbb
subb
mov
imull
daa
xchg
push
scas
push
mov
leave
jle
mov
fsubrs
enter
adc
xchg
jne
add
movsl
jg
negl
jno
dec
js
addr16
repz
add
pop
pop
add
xchg
cld
rorl
push
aas
jno
orb
jb
cli
or
xchg
imulb
orb
arpl
in
xchg
ret
gs
in
or
cli
push
scas
inc
loop
int3
adc
fsubs
sub
inc
mov
pop
mov
cmp
pop
out
mov
nop
and
sub
outsl
cmpsl
sub
jl
cmp
cmp
in
test
int3
imul
sub
mulb
inc
testl
adc
outsl
dec
push
lahf
cmp
adc
xchg
mov
bound
mov
iret
dec
sub
cmp
lods
mov
xchg
mov
pop
call
xor
mov
fsubrs
add
test
dec
inc
pop
mov
mov
mov
subps
jp
int3
ds
push
lds
mov
call
mov
or
xchg
adcb
mov
ret
add
mov
std
mov
pop
push
out
jmp
adcb
enter
cmpsl
cmp
inc
lcall
dec
cmpsl
and
sub
mov
icebp
mov
imul
adc
gs
pushfw
in
imul
push
popf
daa
add
xor
movsl
in
outsl
testl
cltd
or
stc
xor
sub
cld
mov
in
xor
inc
cmp
jbe
leave
gs
jle
pop
push
roll
rcrl
pop
add
mov
aas
movsb
sbb
add
sub
xchg
fcmovne
xor
aad
in
sbb
lods
sub
jb
fildl
cmp
imul
xchg
sbb
dec
sbb
jle
mov
hlt
lret
icebp
dec
mov
inc
push
loop
xchg
mov
push
mov
daa
sbb
mov
aad
cmpsb
insb
mov
adc
sbb
add
xchg
stos
mov
lahf
cmp
push
cli
mov
mov
sbb
jp
frstor
push
xor
pop
or
push
adc
xor
imul
lret
insb
into
imulb
cs
test
popf
fcmovu
loop
leave
ret
dec
pop
and
and
adc
lret
jle
and
dec
inc
divl
add
fdivrp
in
jno
push
jns
xchg
xchg
push
sbb
cmp
cwtl
call
enter
jecxz
jns
adc
fdivr
mov
fcoms
and
movsb
ret
cltd
or
or
test
cmp
adc
inc
inc
subl
loope
push
lods
cmpsb
mov
test
xor
test
orb
sub
adc
mov
in
out
pop
fs
insl
jo
or
sbb
push
push
mov
sbb
push
inc
lods
in
push
mov
adc
add
pop
and
push
mov
adc
dec
mov
lcall
xlat
out
mov
cwtl
iret
fs
jbe
adc
cli
daa
xor
and
test
add
dec
mov
inc
cmc
mov
cvtdq2ps
pop
lock
stc
mov
lods
xchg
jne
sbb
push
out
out
aas
in
cld
pop
andl
xchg
add
jne
xchg
mov
js
into
dec
imul
pop
into
xchg
fbld
cmp
inc
jp
lock
les
fildll
aas
mov
adc
xchg
mov
sbb
pop
push
jmp
cmp
adc
ficoms
imull
xchg
adc
xor
mov
daa
inc
ss
imul
in
add
js
xor
repnz
xor
cli
cmc
iret
xor
mov
dec
mov
dec
and
enter
push
push
dec
out
in
jnp
and
fdivrp
mov
inc
imul
iret
aam
mov
cmp
ret
push
mov
notl
cmp
cwtl
scas
icebp
add
mov
ja
add
jle
in
inc
sbb
and
fldcw
std
adc
sbb
ds
mov
sub
xchg
push
jl
mov
push
jns
fldt
add
mov
cltd
std
dec
jno
ret
ficompl
push
ror
mov
dec
push
pop
fs
iret
lahf
lret
push
negl
ljmp
pusha
pop
aaa
adc
cs
lds
push
push
dec
xor
mov
stos
mov
adc
les
mov
pusha
xchg
pushf
push
sbb
mov
pop
in
pop
sub
jbe
cmp
orb
movsb
rcrb
loope
cmp
xchg
push
orb
idivb
sbb
xor
repnz
pop
mov
call
stos
lcall
ficoml
loope
cmp
out
fildll
sub
sbb
jne
fisttpll
aad
xor
loope
add
outsl
inc
test
adc
push
int
pusha
add
test
out
xchg
xchg
mov
into
outsb
hlt
push
add
outsl
inc
pop
bound
fs
fdivrs
pop
test
lock
aaa
adc
cs
add
iret
adc
xchg
sub
loopne
imul
dec
mov
outsb
scas
mov
out
stc
stos
fnsave
mov
stos
imul
sbb
outsb
movsl
lods
pop
sub
mov
pop
dec
pop
xor
leave
dec
sub
mov
lock
and
sahf
shlb
jns
incl
loope
mov
dec
pop
fildl
push
jno
jae
shlb
enter
fsubs
int3
xchg
mov
popf
or
jns
mov
xchg
popf
es
push
jl
adc
jnp
sti
decb
mov
cmp
test
dec
loopne
lock
inc
sub
sbb
mov
repz
mov
cli
xchg
cltd
adc
or
sub
pop
out
pusha
sub
pop
filds
mov
or
add
mov
fsubrl
add
ret
cmp
push
fnstenv
lods
pop
in
mov
sub
test
cmp
sbb
fs
es
fidivs
mov
pop
mov
cmp
and
inc
fadd
jno
mov
jne
dec
fcoms
loopne
dec
loop
ljmp
ss
sbb
aam
mov
in
sbb
movsl
clc
or
or
and
cvttps2pi
mov
pushf
lock
fwait
push
mov
xor
movq
mov
outsl
adc
arpl
daa
mov
std
push
rcrb
jp
out
stc
outsl
cmp
stos
les
cmp
divb
adc
insl
push
push
push
stos
out
adc
xor
pop
mov
adc
int3
adc
push
sub
inc
xor
lods
and
cltd
fs
jl
aaa
inc
cwtl
arpl
icebp
scas
sub
jno
stos
in
test
mov
fldenv
aas
imul
sbb
mov
and
nop
mov
dec
cmpsb
dec
xchg
xlat
sahf
sbb
jl
pop
loop
pop
cmpsb
add
subl
lods
push
xor
data16
in
lcall
sbb
lahf
into
fistl
fs
rorl
out
imul
aas
pushl
fmul
jb
mov
outsb
scas
loop
cmpxchg
outsb
dec
dec
data16
iret
mov
or
mov
and
mov
nop
stc
xchg
sbb
pop
test
stc
add
imul
add
bound
jle
jno
aad
jnp
pop
or
int
push
xchg
enter
loopne
adc
mov
cmpsb
cltd
outsb
test
shlb
jl
sarl
mov
xor
xchg
cmp
jo
cwtl
das
mov
icebp
and
mov
jp
add
je
mov
jno
int3
mov
ret
mov
xchg
out
repnz
add
out
daa
sub
ja
mov
jmp
push
push
dec
sbb
xor
mov
mov
pop
ss
hlt
mov
and
mov
icebp
or
push
mov
jmp
dec
mov
pop
mov
sbb
hlt
out
push
mov
xchg
or
push
aad
and
orl
mov
pusha
mov
rolb
jl
daa
ret
adc
sub
into
stos
imul
jb
sarb
fs
cwtl
or
orl
mov
mov
shrl
popf
popa
mov
adc
dec
fcmovnbe
push
cmc
pop
data16
aas
out
fisttpll
and
xor
add
mov
in
in
and
inc
hlt
mov
fldt
xor
mov
jo
adc
xchg
outsb
ja
lret
mov
cmp
adc
das
pop
in
mov
jb
jne
repnz
hlt
cmc
aad
hlt
mov
or
add
adc
adc
sahf
inc
rcr
daa
out
pop
rcl
nop
inc
addr16
scas
fstpt
mov
std
int3
addl
hlt
outsl
movsb
sbb
mov
xchg
lahf
xorl
ucomiss
out
bound
shrl
xchg
mov
cld
ss
cmp
xlat
dec
insb
jnp
or
inc
inc
mov
jns
mov
test
outsl
lahf
sub
adc
and
dec
aas
mov
jge
ja
iret
adc
cmp
scas
mov
xchg
jbe
push
fcoml
das
test
jo
shrl
lret
sub
dec
addr16
lret
rcr
cli
sub
dec
pop
mov
xchg
fmuls
shlb
lret
cwtl
cmc
jecxz
fsub
iret
sbbl
mov
jp
jle
xchg
sub
gs
or
movnti
cmpsb
outsb
jno
mov
adc
fbstp
lret
iret
pop
sub
jge
or
fstpt
rol
dec
cmp
iret
ret
mov
inc
and
movsl
mov
add
stc
sub
popa
adc
mov
add
orb
inc
ffreep
in
or
add
mov
sub
fisttpl
std
and
popa
sub
jnp
fidivrs
addr16
xchg
add
xchg
aas
call
lods
inc
dec
test
shrb
adc
sbb
repnz
mov
movsb
jnp
bswap
xchg
or
decb
shr
ds
and
sahf
mov
ljmp
vmovdqa
sbb
mov
or
xchg
pop
pop
lods
cmpsl
inc
adc
inc
inc
adc
hlt
pop
clc
and
out
and
jo
fildll
imul
rorb
fisttpl
outsl
popa
out
mov
in
fnsave
push
lret
mov
ffree
shll
adc
mov
inc
pop
dec
lcall
stos
rcrb
loop
arpl
mov
adc
iret
cmp
push
xchg
and
inc
jge
repnz
mov
pop
pusha
jecxz
inc
sti
push
jmp
mov
dec
jp
sbb
push
and
incl
arpl
rorb
loopne
inc
mov
dec
cmp
test
xor
pop
mov
jnp
int3
and
cwtl
jp
sub
out
push
add
cmp
cmc
in
xchg
imul
orb
sahf
imul
lods
aaa
pop
rsm
repz
imul
sbb
mov
jns
pop
push
pop
fiaddl
inc
adc
lret
lods
cltd
pop
stos
mov
xchg
mov
sahf
movsb
mov
lcall
flds
stos
test
push
fadd
loopne
pop
sbb
jp
push
jl
loope
dec
les
push
pushf
mov
push
out
xor
xchg
pop
loopne
dec
or
aas
je
or
ret
fdivrl
xchg
mov
scas
pushf
lret
inc
sub
aam
cmpsb
mov
mov
fucomi
mov
bound
hlt
insb
lea
mov
out
imul
inc
cmp
fildl
add
inc
mov
out
fidivrl
enter
lahf
loopne
mov
insb
xor
pusha
hlt
sbb
sbb
fwait
loopne
fnstsw
xor
add
jb
jbe
stc
in
jmp
jno
adc
push
jbe
xor
mov
mov
mov
cmp
or
dec
pop
scas
dec
xchg
js
stc
insl
mov
cwtl
mov
cmp
fs
rolb
insb
test
shl
sbb
and
mov
and
jmp
adc
cld
inc
hlt
notl
pop
cmp
cmp
mov
jno
mov
ss
jno
stos
ret
mov
cmp
testl
inc
mov
in
lahf
cmp
into
sahf
je
aaa
scas
mov
inc
mov
lret
adc
sarl
mov
scas
adc
lret
mov
adcb
pop
push
scas
and
mov
aas
dec
pop
or
pop
xchg
insl
ret
or
cmpsb
adc
xchg
pusha
repnz
jns
pminub
inc
mov
in
xchg
adc
xchg
rcl
loope
push
ret
fnstcw
mov
xor
jne
mov
cmp
stos
mov
stos
test
out
nop
inc
xchg
adc
in
jp
xchg
cmpl
jmp
cmc
jns
mov
les
repnz
clc
or
nop
je
inc
das
push
jmp
popa
sub
inc
ds
popa
mov
push
mov
push
fdivr
xchg
add
xchg
xchg
sbb
xchg
dec
call
jmp
jno
pop
and
cmp
or
cmpsl
in
cmp
cli
sahf
loop
loop
fsubrl
xchg
or
and
pop
adc
jno
imulb
cld
sub
mov
push
cli
cmovp
cmp
mov
mov
and
mov
sbb
scas
pop
sbb
mov
std
jl
cs
push
or
adc
and
xor
lods
sub
xchg
xor
outsl
ljmp
jne
or
in
das
cli
and
pushf
sub
cmc
xor
or
xor
sbb
scas
mov
std
or
rolb
or
aaa
inc
sbb
ficoms
xor
cmp
pop
into
or
cmpb
les
mov
nop
outsb
jl
jno
gs
and
mov
mov
adc
cmp
cmovno
in
push
std
imul
adc
sbb
arpl
or
mov
scas
or
cmp
ss
test
fnstenv
andb
das
sbb
sub
imul
adc
pop
into
bound
cmpsb
add
and
pop
add
dec
ja
and
mov
repnz
dec
sub
ficoms
fwait
loop
repnz
sub
cmpl
mov
cwtl
cmc
cmpb
adc
inc
pushf
sub
mov
nop
mov
andl
imul
mov
sbb
xchg
les
push
mov
inc
jmp
nop
adc
push
ljmp
outsb
add
jo
dec
cmpsb
out
out
cltd
add
lea
pop
int3
insb
aam
sub
outsb
pop
dec
lcall
mov
adc
jae
clc
iret
cmp
sub
inc
aam
push
scas
cld
outsb
aad
push
js
bound
repz
push
dec
inc
sub
insl
test
mov
fidivrl
jo
jle
out
cmp
cmp
sub
cmp
xchg
pop
adc
lea
imul
cmpsl
out
out
add
mov
xchg
xor
cmc
lret
scas
stos
push
push
xlat
adc
aad
xchg
dec
push
xor
pusha
nop
inc
push
jg
cmp
call
sbb
cli
xor
fdivrs
xchg
scas
inc
scas
lods
sub
es
pushf
mov
sub
std
pop
jg
pop
jle
cmp
mov
jo
cmp
sti
pop
insl
pop
sbb
adc
orl
cmp
sub
push
xchg
pop
push
lcall
addb
mov
in
cmc
and
loope,pt
leave
rcl
cmc
pop
xchg
pop
mov
mov
pop
shll
imul
mov
inc
inc
adc
mov
testb
lret
push
jae
pusha
or
aaa
aaa
mov
xchg
jmp
in
sti
push
xorb
mov
lods
mov
call
xchg
mov
movsb
dec
sti
mov
fcmovb
dec
test
sub
jno
lods
dec
or
mov
mov
push
fcomi
pop
pop
out
adc
adc
dec
sbb
xchg
leave
frstor
lcall
inc
enter
pushf
or
call
push
pushl
je
jns
fmuls
jge
add
pop
sub
cmp
das
aas
inc
pop
iret
pusha
out
mov
pop
fwait
dec
cld
inc
in
sbb
sub
or
enter
lods
jo
mov
mov
jne
cmp
mov
aaa
push
or
cmp
fldz
cli
shll
jno
int
adc
xorb
xchg
sbb
imul
push
push
shr
loopne
mov
ret
or
out
push
push
addr16
jb
out
sub
mov
das
mov
fisubrs
mov
testb
lock
cmp
mov
push
jg
inc
mov
pop
or
mov
fildl
sahf
ss
jno
push
fldcw
test
mov
int
and
dec
jle
cmp
mov
test
mov
je
pop
test
cmpl
or
xchg
mov
jg
jge
and
stc
fwait
mov
stos
mov
icebp
and
rcrl
jnp
inc
int
stos
divl
push
ret
push
mov
pop
mov
and
ljmp
dec
popa
test
pop
push
jecxz
pop
cmp
mov
push
pop
xchg
fadds
scas
enter
jnp
iret
mov
out
cmpsl
fcompl
and
ret
dec
popa
pop
sti
fisttpll
and
stos
in
lcall
cli
bnd
aad
stos
cltd
fldl
dec
mov
rclb
mov
mov
pop
adcl
mov
mov
int3
loop
out
jo
dec
push
inc
ljmp
cmp
insl
inc
cmp
jns
xor
adc
int
ja
and
xchg
imul
jae
mov
xor
jl
pop
pop
inc
pop
mov
fdiv
cli
stos
inc
pop
in
jl
jg
ret
push
test
xchg
in
sub
add
stos
into
scas
lock
sub
imul
repz
push
sub
sub
jmp
mov
sub
loope
addb
daa
sbb
in
mov
jmp
xor
fdivp
inc
fs
and
jno
nop
mov
pop
and
jmp
add
push
mov
sub
daa
xchg
jle
lea
lret
cmp
pusha
add
lahf
sub
mov
ss
notl
sbb
fsubr
leave
and
sub
jecxz
push
push
dec
clc
in
mov
pop
and
int3
push
xchg
xchg
aad
mov
push
cmp
mov
mov
mov
call
push
jne
push
cmp
sbb
imul
mov
cmc
or
push
xchg
push
or
sub
cs
cld
stc
push
dec
or
pop
mov
xor
jb
enter
loope
stos
imul
iret
test
in
adc
cmp
lret
mov
pop
and
and
lret
xor
xorb
adc
inc
adc
scas
jmp
push
fmull
divl
or
mov
fucomp
jle
pushf
shr
and
jnp
mov
mov
mov
lcall
or
inc
add
cmpsl
pop
daa
or
or
and
or
nop
jg
cmp
aam
dec
cmc
jb
pop
sub
inc
repz
test
and
xchg
test
loop
das
push
pop
jo
add
and
arpl
jne
daa
movsb
stos
mov
sti
push
test
sbb
xchg
cmpb
push
jnp,pt
mov
nop
stos
out
into
or
xchg
or
inc
adc
andl
fisubrl
xchg
dec
mov
mov
xor
inc
adcl
out
jg
inc
mov
sahf
jne
mov
xchg
sbb
je
arpl
push
clc
xchg
mov
dec
popa
add
sbb
arpl
sbb
xor
ret
call
dec
dec
data16
jbe
shll
fs
stos
lds
aad
clc
in
fistpll
sbb
mov
mov
fsubr
mov
mov
cmp
das
pusha
call
loop
mov
add
subl
or
xor
xlat
js
xchg
adc
leave
cmp
inc
pop
sbbb
adc
xchg
add
jb
adc
sbb
or
jg
rorl
jmp
xchg
mov
adc
imull
test
cmp
mov
mov
sbb
xchg
loop
sti
lcall
call
mov
in
pop
lds
or
pxor
loopne
xor
shlb
out
divl
push
ret
imul
jbe
test
decl
shll
or
aaa
arpl
xor
scas
sub
aas
into
ljmp
repz
xchg
mov
push
jge
int
pop
dec
xchg
dec
in
inc
hlt
inc
fs
gs
lock
rcrl
mov
mov
jbe
jle
ja
repnz
jb
outsl
sub
and
lcall
cmp
mov
pop
push
test
jecxz
adc
sub
stc
add
cmp
push
push
pushf
pop
aad
sbb
mov
push
push
rolb
mov
adc
lret
sbb
mov
lock
jmp
negb
enter
or
add
jb
xchg
loope
push
xor
add
mov
stos
dec
lret
push
repnz
sbb
xchg
rcl
add
movsb
inc
daa
rcrb
xchg
cmpsb
in
mov
stc
stos
push
loope
addr16
bound
call
mov
mov
jmp
pop
popf
push
enter
es
ret
dec
nop
shrl
aam
inc
outsb
xchg
xor
ss
mov
sahf
mov
xchg
insb
ret
daa
or
pusha
pop
push
out
insb
test
add
pop
out
or
push
cmp
enter
je
adc
enter
popa
sub
mov
cmc
loope
xor
dec
add
test
pop
ljmp
mov
mov
fcomi
adc
clc
sub
sub
dec
fcmovne
sbb
mov
push
imul
sbb
add
xchg
mov
repnz
xor
out
mov
lea
rorl
xchg
leave
orb
mov
or
dec
jnp
add
pop
fnstenv
and
les
dec
mov
divl
dec
hlt
jnp
or
xor
push
adc
dec
jnp
pushf
mov
outsb
in
mov
dec
xchg
sbb
test
mov
lcall
add
pusha
inc
inc
mov
shrb
lock
xor
pop
jne
push
jae
add
movsb
sahf
iret
and
out
mov
imul
adc
or
push
mov
push
stos
xchg
mov
and
stc
mov
push
pop
in
or
dec
jl
test
mov
jns
mov
fcoml
fbld
cmp
imul
or
sarl
loop
push
jbe
push
shll
test
loope
mov
mov
xchg
and
mov
jae
cmp
xchg
xor
jae
in
stos
jne
jg
mov
jae
mov
and
mov
lret
adc
sub
lret
stos
xor
stos
jg
movsl
in
xchg
add
pop
test
shrb
test
jnp
outsb
mov
dec
xor
dec
pop
addb
xchg
and
push
cld
hlt
push
ljmp
pop
jb
hlt
xchg
mov
mov
mov
sub
inc
jne
sbb
icebp
jmp
inc
inc
mov
jg
inc
adc
pop
or
mov
es
call
jne
gs
sahf
ja
mov
mov
insl
fists
movsb
imul
xchg
pop
aaa
pop
dec
xor
sti
xor
adc
addr16
insl
aas
call
in
cmpsb
jl
and
push
cmc
sbb
sarl
and
dec
pop
negl
mov
shrl
pop
inc
leave
out
imul
mov
mov
out
xchg
add
out
stos
int3
mov
push
repz
cmp
decb
lds
push
daa
xchg
jbe
lret
pop
push
dec
xor
daa
iret
add
mov
mov
xor
add
int3
and
cmp
xchg
mov
imul
mov
sub
repz
in
mov
nop
inc
pop
out
fcom
pushf
lcall
hlt
in
jg
push
movsb
pushf
push
push
dec
and
es
sbb
push
lret
cmp
cltd
add
outsl
iret
divb
jo
pop
in
mov
cwtl
jl
popa
pop
sbb
dec
jno
adc
cwtl
cmp
mov
ffree
push
adc
sbb
cmp
cmpsl
stc
cmp
sbb
mov
mov
adc
push
xor
xchg
mov
jmp
and
mov
sbb
stos
test
mov
ljmp
pop
adc
in
jno
mov
cmpsl
fisttpll
dec
aaa
mov
xor
mov
shrb
or
pop
cmpl
fisubl
xchg
and
out
fcmovb
inc
jp
rcrl
lret
cmp
xchg
clc
pushf
or
add
xchg
mov
lret
xchg
jmp
lahf
push
push
js
fs
jbe
mov
cmp
and
stc
test
xchg
adc
push
and
mov
mov
xorl
enter
mov
dec
insb
cmp
in
xchg
fs
iret
push
addr16
ficoml
xor
pop
push
stc
cmp
dec
je
xchg
lret
or
cmp
popf
and
loope
icebp
push
notb
pop
mov
sub
xchg
iret
inc
je
sub
mov
pop
into
xor
mov
arpl
fldt
test
mov
jecxz
mov
add
pop
daa
and
fimuls
sbb
out
fsub
test
pop
inc
lret
repnz
mov
lods
sti
jmp
pop
cmpsl
sbbb
pop
into
lret
cmp
popa
pop
pop
les
push
push
dec
xor
xchg
push
sahf
xor
adc
mov
das
movsb
push
push
jp
pop
xor
cs
in
pop
sbb
fsub
out
push
mov
rcrl
jnp
sbb
sahf
ret
xchg
fs
in
xchg
pop
icebp
cs
pushf
icebp
and
test
xchg
outsb
aam
xchg
mov
ret
gs
jb
popf
xor
jmp
xchg
push
popa
inc
loop
xchg
fsts
xor
push
pop
dec
fdivp
in
fdivl
jmp
lods
fildll
repnz
into
add
cmp
arpl
pop
xchg
pop
clc
cmp
std
jp
add
or
ds
dec
fldenv
movsb
cmp
cli
lock
call
int3
dec
lar
adc
jecxz
mov
enter
mov
daa
mov
sahf
xorb
xchg
or
dec
xlat
xchg
mov
mov
mov
adc
aas
fcompl
jecxz
icebp
mov
mov
lds
lahf
mov
js
fnstenv
ret
enter
pop
mov
xor
cmpsl
bndstx
in
fisubl
aad
arpl
lret
add
push
iret
orl
popa
leave
cmp
orl
ret
or
cmp
xor
adc
push
mov
scas
sub
xor
adc
xor
stos
dec
mov
sbb
repnz
cmp
pmulhuw
jg
mov
frstor
push
ror
and
push
mov
xor
popa
pop
mov
cmp
mov
int3
insl
les
scas
mov
popa
xchg
jp
push
jl
das
lock
int3
add
std
add
out
cmp
xchg
jb
cmp
out
inc
pop
fs
adc
sub
aad
mov
xchg
in
mov
repnz
jle
mov
mov
mov
pusha
or
xchg
arpl
lret
sarl
inc
jmp
dec
popa
scas
js
dec
pop
pop
scas
cmp
lcall
in
cmp
add
or
dec
push
mov
outsl
jmp
mov
jl
pop
inc
mov
bound
cmp
cmp
adc
lock
jnp
sbb
xchg
mov
xor
out
cld
sub
xchg
push
imull
push
repnz
fst
push
jge
and
fdivrp
mov
mov
xchg
sbb
and
mov
insb
aad
bound
rcrb
aad
sub
and
fstpl
push
outsb
add
decl
mov
lret
scas
imull
dec
andl
xchg
fisubs
cld
mov
fdivr
sub
mov
das
jg
adc
add
mov
sub
mov
dec
pop
fsubrp
lock
xor
fiadds
fsubrp
xlat
pop
mov
xlat
bound
mov
ljmp
mov
sub
jb
addl
negl
adc
lea
adc
mov
nop
dec
enter
in
inc
or
inc
fnstenv
jns
mov
sbb
push
jne
rclb
loopne
stos
and
je
es
pop
jne
mov
lahf
in
mov
jnp
mov
sbb
lock
xchg
sbb
loop
xchg
push
dec
mov
or
lcall
cmp
insb
dec
dec
mov
outsl
xorb
cltd
dec
adc
jg
sti
jg
adc
mov
lds
jle
mov
mov
or
xchg
and
jmp
push
std
stos
lods
cmc
std
nop
cld
int3
inc
mov
inc
aad
adc
sub
shrb
inc
out
orl
xor
lock
xor
mov
push
mov
loop
xchg
or
out
stos
push
fsubrs
xchg
fwait
seto
daa
dec
movsb
push
icebp
xchg
push
movsl
cmpsl
call
mov
mov
cmc
lods
lahf
push
mov
lods
ret
bound
loop
dec
or
cmc
and
outsb
add
dec
ss
pop
lock
xor
in
dec
or
xor
dec
aam
jne
outsb
ss
repnz
out
sub
cmp
addr16
dec
adc
or
ja
daa
cmp
mov
inc
mov
dec
xchg
int
addb
jecxz
ret
test
loop
mov
mov
mov
inc
outsb
mov
cwtl
cmp
int3
loopne
dec
adc
add
dec
adc
xlat
jbe
repnz
lahf
and
xchg
cmpsl
lret
nop
jp
xorb
sub
popl
or
jb
in
mov
or
movd
repz
dec
fcmovne
fbld
lods
jg
fmuls
addr16
aas
sub
hlt
mov
loop
inc
popa
aas
popa
daa
inc
adc
xchg
das
dec
add
sub
sbb
mov
das
lcall
sbb
pushf
dec
push
push
rclb
xchg
sub
nop
xor
fsubl
mov
iret
xlat
or
pop
pop
jmp
push
inc
pushf
push
cmp
pop
leave
pop
faddl
subb
jne
xor
jge
fnsave
pop
inc
mov
sub
jg
out
mov
mov
orb
fbld
add
xor
ret
in
jmp
mov
or
fistl
in
mov
scas
jb
addl
cmp
xor
add
or
mov
xor
test
adc
clc
sbb
jecxz
mov
mov
cli
dec
aaa
dec
sbbb
bound
ja
nop
xchg
lcall
mov
push
mov
mov
aam
enter
jmp
push
dec
arpl
out
push
sub
push
arpl
xchg
push
and
cmpsb
in
cmp
fs
dec
daa
inc
fnstenv
and
add
scas
addl
insl
test
shlb
sbb
jl
adc
mov
loope
mov
and
inc
dec
jae
lahf
push
jns
and
fs
mov
adc
pop
pop
cmpsl
lea
decb
aad
pop
jno
xor
mov
mov
orl
xor
add
mov
dec
sbb
cmc
pushl
cmp
mov
sub
es
in
dec
aaa
adc
movl
fwait
les
sahf
xchg
addr16
test
push
sti
xchg
push
shlb
adc
in
jne
stos
mov
adc
scas
movsb
addr16
clc
jge
loopne
movsl
and
addr16
push
xor
or
imul
lcall
enter
pop
xchg
lds
stc
push
mov
ljmp
incl
cld
popa
inc
rcrl
inc
xlat
fstl
xchg
fsubrs
call
add
sbb
cmp
inc
jecxz
sbb
pop
jp
es
pop
fstpt
enter
xor
daa
das
sti
cs
xor
dec
mov
popf
lahf
push
mov
rolb
popf
gs
test
dec
mov
cs
faddl
lods
scas
pop
mov
out
dec
mov
add
movsl
cs
stos
mov
sbb
lock
loope
dec
les
jno
gs
inc
mov
test
xchg
cmp
and
int
cwtl
or
loop
les
stos
mov
or
ror
cmc
mov
sbb
mov
add
sub
xor
ret
sbb
ja
push
add
jo
cld
shrl
mov
arpl
movsl
xchg
insl
ret
sub
clc
mov
mov
jle
shlb
sbb
imulb
pusha
or
aam
scas
sbb
push
mov
popf
mov
sahf
inc
add
cmp
dec
lea
ljmp
daa
cmpsl
fidivrl
and
jmp
adc
jg
ret
jmp
daa
and
jmp
xchg
ljmp
and
push
sti
sbb
jle
pop
cmp
outsb
sbb
rcrl
mov
jno
cs
loope
neg
bound
jge
lahf
jo
xchg
jns
jle
xchg
in
mov
mov
add
cmp
sbb
and
insl
aaa
mov
xor
sbb
inc
lock
clc
orl
subl
stos
bound
sub
push
scas
aad
mov
push
scas
shlb
cmpsb
inc
sub
ret
sub
push
repnz
inc
xor
add
mov
mov
jmp
mov
jns
xchg
adc
xor
mov
pop
je
stos
or
mov
cmp
push
pop
mov
ds
push
inc
adc
xor
fbstp
sbb
mov
sbb
ds
pop
outsl
cmp
negb
pop
out
fcoml
es
int
dec
pop
cmpsb
push
scas
xchg
mov
imul
movsl
xchg
mov
mulb
ds
xchg
stc
jmp
fcom
inc
scas
xchg
decb
cld
or
and
xor
nop
les
test
std
xor
push
sub
pop
inc
jo
lods
lods
or
xor
out
int
call
mov
add
sbb
in
push
jle
loopne
aad
popa
xchg
xor
mov
daa
mov
icebp
test
in
fldenv
fwait
push
mov
jnp
pop
sub
ljmp
mov
fwait
dec
sbb
inc
mov
or
aam
int
inc
push
and
enter
xlat
insb
sbb
fiaddl
and
pop
out
jge
lahf
ret
dec
dec
in
stc
mov
lock
fistl
mov
push
jnp
arpl
orb
xchg
jg
dec
or
and
push
and
xchg
rolb
sub
mov
pop
or
into
adc
xor
ljmp
xchg
push
repz
pop
xor
stos
dec
std
cmp
lcall
mov
arpl
pop
xor
pop
jo
xor
cmp
gs
xchg
stos
imulb
add
imul
sarb
sbb
sub
mov
xchg
add
inc
fcmovnbe
lods
dec
stc
movsb
outsl
pop
lea
cwtl
cld
sbb
jp
cltd
cwtl
shll
jl
ja
mov
rcll
inc
xor
inc
adc
sbb
xchg
pop
btc
fcoms
mov
fisubl
int
dec
push
stos
xchg
mov
popa
push
aaa
dec
xor
xor
sbb
or
xchg
and
push
adc
xor
ret
and
adc
shll
fdivrl
push
jecxz
test
adc
adc
jnp
or
ret
xchg
idivl
mov
mov
inc
repnz
sbb
jns
repz
sbb
cmpsb
std
add
int
daa
testb
mov
fisttpl
jae
ljmp
lea
enter
dec
cmp
adc
sbb
adc
sbb
fwait
adc
rorl
sub
out
push
xor
insb
mov
xor
in
push
xlat
aas
push
cmc
cs
aam
jmp
mov
jae
sti
add
add
jnp
shl
addr16
push
xchg
sahf
xchg
pop
adc
mov
sub
aad
sub
mov
pop
jmp
cld
je
outsb
sub
xor
ljmp
push
mov
adc
mov
and
mov
fs
int
ja
ss
or
or
pop
mov
das
xor
leave
sbb
decl
or
xchg
xchg
mov
push
lahf
push
push
xchg
lcall
aaa
cmp
ret
sbbb
mov
mov
out
mov
jmp
out
cld
std
or
lods
sahf
sub
mov
fcmovnbe
xchg
rcl
mov
sahf
inc
sahf
aad
ss
inc
aad
xchg
das
or
repz
dec
xchg
xor
mov
add
xchg
sbb
push
lea
sub
lret
ljmp
cmp
pop
push
push
mov
outsl
xchg
mov
icebp
adc
sub
jo
outsl
addr16
aas
call
sbb
hlt
pop
cmpsb
mov
sti
inc
testb
in
xchg
dec
sub
inc
ret
cltd
jb
jge
mov
js
nop
cmp
mov
sub
cltd
dec
testl
jnp
aad
cmp
data16
sahf
lods
push
add
out
dec
das
data16
ds
pushf
mov
fbstp
xor
sbb
insl
mov
pop
mov
and
add
and
jecxz
or
movsb
pop
add
adcb
pusha
dec
fs
into
sub
in
lods
stc
sub
xor
sbb
movsb
sti
or
xchg
xchg
jo
xchg
cmc
out
push
jge
push
leave
add
stos
nop
gs
outsb
fstps
and
arpl
fistl
mov
insl
pusha
popf
xchg
dec
inc
push
push
out
fiaddl
mov
in
jg
jnp
jb
sbb
out
call
out
sub
lret
dec
and
arpl
mov
pop
mov
es
pop
add
loope
xchg
add
loopne
daa
into
or
fstp
lods
sub
sti
jle
add
fwait
pop
mov
push
xchg
pop
cld
loopne
xor
xchg
pop
into
push
mov
fwait
jp
inc
dec
mov
dec
imul
loop
sub
imull
jl
mov
sub
sbb
or
cmpsb
std
pop
jge
add
pop
pop
loope
cmpsb
mov
stc
adc
dec
and
sub
dec
ja
outsb
shlb
fsubl
add
sbb
adc
enter
jmp
push
ss
dec
rcll
jg
das
cli
sub
std
aas
mov
cmp
std
or
insb
jnp
aaa
arpl
mov
xlat
enter
cwtl
xchg
sbb
and
sbb
sbb
jnp
inc
daa
movsl
frstor
push
mov
gs
xchg
mov
vshufps
mov
lods
int3
mov
xchg
sahf
std
mov
leave
push
js
adc
pop
sbb
pop
daa
or
xorb
test
dec
xor
mov
fsubr
loopne
test
out
mov
pop
jnp
pusha
test
and
sahf
and
imul
inc
ret
fwait
adc
dec
inc
cs
test
scas
and
movsb
pop
ljmp
add
pushf
sarb
mov
imul
mov
pop
add
ror
and
and
push
adc
lods
cltd
mov
lret
cs
push
mov
sahf
inc
sbb
mov
and
mov
inc
pop
movsb
mov
mov
fwait
test
pop
pop
pusha
inc
or
mov
and
ja
scas
jb
and
lods
clc
ss
loope
sub
cmpsb
lret
dec
pop
and
test
shl
mov
jb
xor
dec
jle
jmp
dec
inc
iret
pop
cs
push
popa
and
psrlw
scas
inc
repnz
ret
sub
xchg
jle
or
sbbl
daa
sub
fsubl
mov
cmp
or
pop
pop
inc
add
xlat
cmp
sbb
dec
stos
mov
push
daa
testl
dec
pop
mov
repz
jl
mov
and
xchg
mov
clc
in
ret
adc
mov
leave
sub
aas
dec
dec
mov
xchg
in
loop
ds
movsb
ret
test
outsl
dec
push
add
pusha
loop
pushf
mov
xchg
push
mov
xchg
sbb
and
cwtl
cmp
mov
mov
lret
test
pop
xor
andps
and
ret
push
les
subb
stos
cmp
loopne
aad
je
stos
and
cli
inc
lods
lahf
test
or
mov
add
out
jnp
fwait
aad
sub
cmp
adcl
sub
fidivl
jmp
dec
outsb
rolb
es
jno
cmp
mov
out
idivb
call
xor
and
stos
pop
imul
gs
int3
xlat
fldenv
mov
xchg
cmp
sub
pop
cwtl
in
xchg
cmp
xorb
fiadds
mov
or
cmpb
or
mov
dec
jbe
int3
inc
dec
sbb
xor
lahf
aad
sbb
sti
dec
pop
jnp
dec
lock
enter
setle
jmp
ljmp
dec
mov
mov
or
sahf
rcrb
je
cmp
sbb
adc
cmp
aaa
cs
in
sarb
loope
inc
roll
cmp
cld
xlat
add
add
xor
cmp
es
imul
dec
sub
clc
xor
cmc
cltd
lea
outsb
mov
pop
outsb
loop
cmp
xchg
in
xor
out
fiadds
addb
adc
cmpxchg
push
clc
out
inc
bound
push
lcall
adc
scas
daa
and
incw
adc
std
fs
jae
dec
sub
mov
sub
ficoms
jl
lcall
adcb
and
stc
mov
or
mov
xlat
frndint
mov
cwtl
dec
fistps
sar
dec
sub
xchg
inc
mov
sbb
jo
mov
repz
test
lret
pop
jno
push
jp
leave
out
or
insb
mov
bound
mov
popa
push
mov
cmp
xor
test
mov
adc
jne
mov
lock
int3
adcl
dec
insl
negl
mov
push
xlat
push
xor
sbb
insb
nop
fsubrl
roll
std
sbb
inc
pop
mov
inc
adc
push
scas
push
xor
clc
and
cmp
repz
lods
cmp
scas
test
add
sarb
ljmp
cmp
into
mov
jae
pop
and
fcoml
sub
mov
in
add
adc
movsl
fistl
scas
jge
xchg
popa
xchg
movsb
mov
outsl
inc
out
andb
xor
fisubrl
pop
mov
add
dec
mov
bound
mov
sub
jge
mov
pop
cli
insb
mov
inc
in
jge
sbb
sub
xor
loopne
js
pop
or
mov
sbb
sbb
daa
cwtl
mov
lock
push
mov
xchg
sbbl
mov
mov
ljmp
mov
cmpsb
sarl
xchg
pop
loopne
movsb
mov
loop
mov
leave
push
sub
mov
dec
mull
test
sub
cmp
jmp
or
cmpsl
leave
loop
loop
fnstenv
imul
mov
xchg
pop
lods
or
mov
cmp
add
xchg
cmp
movsl
cmp
in
pusha
adcb
lock
xor
outsl
rcrl
ds
or
add
test
dec
popa
sahf
int3
mov
orl
out
bound
repnz
push
enter
lods
in
mov
pop
or
mov
sbbb
lds
xchg
call
xchg
xchg
mov
sbb
icebp
ljmp
mov
sub
decl
jle
push
cltd
add
inc
sub
sbb
cmp
dec
jne
and
fbld
out
inc
pushf
loop
dec
push
xchg
roll
sbb
pop
dec
cmp
mov
jo
sbb
mov
aam
jnp
and
jmp
pop
sub
inc
dec
add
lret
mov
pop
cmp
out
adc
and
cmp
sti
push
in
aad
aas
enter
in
xchg
adc
jecxz
jbe
jbe
cmp
int3
stos
xor
mov
xchg
and
test
sbb
ret
out
test
cmp
rclb
stos
adc
adc
xchg
adc
cli
cwtl
iret
call
gs
lds
pop
setg
push
jae
push
sbb
std
pop
cmp
sub
mov
sbb
popf
test
sub
mov
xlat
in
xor
jbe
in
outsb
push
fstpl
push
xchg
stos
dec
fs
enter
jl
mov
mov
enter
dec
and
aam
pop
fimuls
insb
sbbl
loopne
scas
mov
in
mov
adc
adc
inc
sub
pop
pop
mov
add
cmp
inc
in
loope
test
cmpsl
stc
rolb
cld
push
push
xchg
ljmp
or
hlt
sub
imul
add
repnz
adc
xchg
test
pop
or
call
out
push
ljmp
popa
push
xchg
push
jae
dec
cmp
add
xor
fcmovnb
in
cmp
pop
xorb
int
mov
mov
leave
fs
mov
dec
sar
inc
clc
lret
loop
addr16
popl
shr
addb
and
mov
xor
je
lds
sbb
inc
add
orl
out
jb
iret
xchg
addb
jmp
xchg
inc
mov
mov
push
mov
cltd
enter
arpl
adcl
adc
push
mov
ret
push
adc
fmull
mov
and
outsl
dec
adc
adc
ja
std
mov
mov
mov
xchg
xchg
sbb
lods
out
daa
cmc
mov
cltd
mov
das
outsb
loope
lret
cli
shll
dec
into
fcomps
xchg
test
cmc
stc
and
daa
arpl
xchg
in
dec
xchg
xor
mov
divl
sbbl
shrl
or
mov
leave
imul
push
repz
iret
sbb
adc
pop
fsubp
adc
mov
pop
ljmp
fidivl
test
adc
or
or
notl
cmp
sbb
pop
pop
mov
shrl
rorb
adc
sbb
subb
push
jmp
inc
out
fadd
call
cs
lea
inc
add
pop
test
lret
mov
sbb
adc
mov
orl
and
cmpsb
sbb
jle
inc
jb
sub
out
fiaddl
icebp
push
pop
lds
inc
rorb
push
sti
data16
ficoml
test
test
mov
or
mov
out
mov
jp
jg
push
inc
ret
fdivs
fsubrs
iret
mov
test
shlb
imul
jmp
and
adc
jno
push
fs
mov
nop
push
aas
push
xor
xchg
fwait
push
pop
mov
fisubrl
sub
pop
stc
dec
mov
sahf
mov
and
mov
pusha
sub
mov
push
xchg
shrl
int
mov
push
adc
mov
pop
jmp
xchg
sbb
sbb
fidivrs
iret
gs
adc
stos
outsb
adc
push
jmp
lahf
or
pop
inc
push
jl
mov
pop
jg
jge
js
mov
ljmp
xor
mov
push
daa
mov
decl
dec
dec
lea
int
icebp
or
les
push
ja
or
data16
out
call
xchg
loop
inc
mov
jnp
adc
pop
cmp
push
inc
pop
mov
xchg
pop
mov
and
mov
ljmp
push
xchg
scas
frstor
aam
sti
or
test
mov
mov
addr16
mov
test
pop
xchg
mov
pushf
adc
addr16
scas
jmp
mov
cmc
mov
mov
fildll
mov
xchg
test
in
push
ds
push
sub
mov
xor
pop
aas
push
cmc
fiaddl
adc
rolb
repnz
pandn
mov
int3
in
aad
inc
jg
cmp
mov
xor
fnsave
sub
popa
xchg
shlb
or
enter
pop
xor
jg
inc
or
cwtl
aam
jl
sbb
push
inc
adc
inc
inc
insl
into
adc
lods
mov
mov
into
xchg
cmpsb
lret
test
sarb
enter
push
stos
aam
mov
sub
aas
mov
jb
insb
jno
cmp
mulb
and
xchg
push
addb
ja
xor
sahf
cs
xchg
jae
push
insl
adc
das
sub
jle
or
gs
outsb
cmpsb
pop
push
mov
mov
out
pop
or
andl
sbbl
mov
xchg
xchg
push
sbb
aas
repnz
xor
mov
mov
inc
pop
dec
dec
insb
or
sub
imul
mov
pop
das
js
in
add
leave
cmp
add
and
adc
adc
pop
adc
add
mov
out
loope
mov
test
jecxz
xor
nop
jmp
xchg
fildll
mov
sbbl
and
mov
adcb
in
divb
nop
clc
jmp
adc
adc
cmpsb
mul
dec
mov
shll
mov
cmpsb
jle
sub
aad
and
mov
cmp
pop
jp
pop
popa
xor
sub
push
imul
sahf
imul
in
adc
jge
or
cmp
xor
lahf
sbb
test
mov
push
inc
insl
sub
mov
fbstp
ja
mov
adc
movsb
shrl
jbe
sub
jns
lret
inc
test
mov
out
pmuludq
add
pop
stc
inc
daa
stc
nop
icebp
jp
jbe
js
push
lods
int3
out
mov
test
xor
sub
xor
iret
pop
sbb
test
dec
loope
pop
nop
scas
outsb
push
addl
mov
cs
add
xchg
sbb
add
inc
jno
sub
inc
cltd
pusha
cmp
inc
sbb
add
and
sub
dec
pushf
sbb
adc
xor
out
sahf
fcoml
or
clc
pop
out
int3
xchg
test
adc
xchg
sbb
and
pushf
pop
enter
les
and
mov
inc
cmp
daa
mov
aas
ja
iret
and
jmp
fs
mov
sti
lock
test
daa
das
xchg
idivb
cmpl
cmp
lret
out
mov
stc
cmp
out
xchg
dec
sbb
loopne
test
push
in
jmp
jmp
push
mov
push
movsl
std
inc
pushf
lock
js
jns
outsb
push
mov
push
or
adc
jmp
mov
sub
out
jne
pop
nop
or
inc
roll
cmc
movsl
pop
inc
mull
mov
jno
fisubl
iret
mov
dec
ret
aad
mov
pop
lods
es
dec
lea
jg
leave
mov
cmp
lea
je
adc
mov
inc
jb
xchg
pop
push
ret
pop
or
sahf
or
idivl
sub
xchg
push
push
inc
loop
sub
in
jecxz
mov
inc
xchg
sbb
mov
mov
jmp
jne
xor
aaa
stc
fnstsw
mov
cmp
movsl
inc
stos
lods
mov
nop
sub
xchg
cmpsb
into
add
inc
aas
xor
add
sahf
es
mov
cmpsb
popa
fldt
mov
add
fistpll
shll
outsl
and
adc
mov
mov
cs
or
bound
div
inc
es
mov
lock
sub
rclb
arpl
jle
push
stos
std
das
mov
popf
hlt
mov
leave
cmp
lods
aam
mov
jmp
and
cld
xchg
mov
jg
jbe
mov
dec
out
imul
loop
push
xlat
push
leave
cmp
rcl
sbb
mov
lds
sbb
iret
dec
ficoml
push
jnp
into
mov
aaa
pop
loop
adc
ret
loop
push
and
push
enter
inc
iret
xchg
mov
xor
dec
push
subb
js
sub
int3
loop
mov
insb
nop
push
inc
ss
imul
push
pusha
mov
shlb
mov
test
adc
mov
or
inc
imulb
xorl
lret
and
mov
xchg
add
ss
repz
sub
mov
imul
dec
and
sub
adc
in
xchg
xchg
es
hlt
ficoms
lods
ja
lods
xlat
pop
cmp
shlb
mov
sbb
push
and
mov
arpl
and
sarl
cmc
or
pushf
dec
cmpsl
jno
outsb
daa
jne
test
cli
testl
xor
aaa
pusha
test
mov
lret
xor
dec
mov
or
int3
push
rcl
or
jmp
test
mov
push
cmpsl
test
inc
dec
add
outsl
mov
adc
inc
nop
loopne
and
push
ret
ret
int3
pop
adc
mov
loopne
mov
imul
cltd
mov
movsb
negl
cmc
fwait
clc
ss
and
sbb
mov
ret
add
dec
cmp
cmp
and
mov
push
loop
pushf
sub
je
mov
or
xchg
or
xor
dec
inc
test
jnp
mov
mov
in
in
xchg
insb
fsubrs
fbld
jo
cmp
imul
cli
aas
and
sub
cli
data16
jecxz
sub
adc
scas
out
sub
les
cmc
fmul
pop
push
subb
jmp
sub
pop
mov
push
fstl
mov
or
std
ss
and
scas
dec
xor
xor
pushf
mov
sbb
sahf
cmp
out
fdivrl
add
outsb
dec
push
xchg
call
nop
shl
testb
pop
mov
inc
ja
clc
cltd
sbb
or
push
sahf
bound
push
loop
adc
ss
add
jo
rorb
int
push
daa
adc
and
cmp
shlb
or
test
lcall
and
mov
int
stc
aas
mov
add
rcrb
push
dec
jecxz
mov
mov
mov
add
inc
into
fcom
mov
lods
pusha
fchs
xchg
dec
addb
and
pop
add
lret
outsb
push
cmp
int3
inc
xor
xchg
mov
adc
pushf
add
xchg
lods
push
pop
leave
int
enter
cmpsl
pop
jmp
jae
xor
or
std
mov
adc
cmpsl
sbb
jmp
sbb
rcrb
xchg
xlat
xor
dec
inc
push
sahf
mov
pop
jo
mov
or
les
pop
mov
pmulhw
test
jo
adc
dec
jp
pop
addr16
and
mov
adc
sub
mov
mov
int
in
loop
add
xchg
bound
outsb
or
push
popf
in
icebp
call
sahf
dec
mov
push
sbb
inc
inc
out
stc
push
jns
je
stc
xchg
pop
mov
sbb
jl
and
std
xchg
and
cld
test
in
es
jmp
add
enter
bound
insl
test
pop
mov
cmpsb
sbbl
fwait
cmpsb
inc
bts
sbb
xor
std
mov
dec
ds
int
xchg
cmc
imul
inc
arpl
scas
bound
pop
aaa
fwait
fwait
int
jecxz
xchg
sub
adc
sahf
xchg
push
dec
insl
xor
xor
call
mov
in
clc
shrl
inc
repnz
lret
jnp
lods
icebp
dec
push
mov
sub
pop
and
imul
test
and
push
in
imul
negb
shlb
cltd
mov
jns
sbb
or
std
cs
adc
push
jae
daa
pop
jge
ret
stos
xchg
out
xor
ret
jge
sub
cmp
mov
or
pop
pop
iret
nop
push
pop
aad
mov
outsl
xchg
outsb
mov
aaa
jp
and
cli
jl
jecxz
xchg
loop
out
popa
mov
mov
cmp
xor
dec
data16
testl
inc
iret
shl
daa
sbb
mov
stc
pop
fcom
mov
and
cltd
data16
call
lcall
addl
jp
out
pop
xchg
push
sbb
xor
jno
das
adc
mov
sub
ja
inc
call
xor
mov
push
adc
rolb
and
push
lret
adc
jbe
add
es
outsb
in
xchg
loope
mov
sbb
fcmovnb
addr16
out
xchg
pop
mov
mov
iret
inc
in
subb
sub
fisubl
out
dec
fs
jae
repz
movsb
js
stos
push
cmp
adc
xor
mov
cmpsl
lret
cmpb
aad
cltd
cmpl
sbb
or
popf
icebp
icebp
pop
dec
xor
test
xlat
jmp
idivb
and
push
mov
jne
in
lahf
mov
lahf
les
cwtl
push
xor
std
cmpsb
std
in
push
inc
shll
push
jmp
dec
inc
imul
inc
xor
sarb
sahf
dec
inc
adc
jg
jge
dec
fnstenv
mov
fisttpll
push
icebp
es
inc
fidivrl
pusha
push
loope
and
jb
and
adc
int3
push
push
in
out
les
add
mov
xchg
into
and
and
insb
sub
mov
push
push
pusha
xor
adc
data16
jmp
mov
and
xchg
add
aaa
add
pop
pop
sarb
mov
or
sbb
pushf
push
jno
mov
std
push
mov
lret
fcmovu
or
call
dec
pop
mov
imul
lea
ret
insl
stc
imul
hlt
int
push
ljmp
pop
std
fs
sti
dec
ss
cli
add
es
es
pop
lock
in
aad
out
imul
int3
adc
flds
lds
xchg
data16
mov
imul
fmull
in
ds
ja
sub
jle
add
jb
cmp
pushf
jl
repnz
xchg
jmp
inc
adc
and
xchg
aam
int
or
mov
out
sub
mov
lret
loopne
push
cmovne
fs
fwait
or
addl
add
cld
addr16
mov
movsl
add
addl
or
fwait
xor
dec
mov
pop
inc
shll
pop
out
xchg
jb
adc
jecxz
add
testb
add
dec
push
notl
test
ljmp
cmpsl
arpl
add
add
cwtl
mov
iret
scas
adc
lret
pop
std
and
shlb
mov
imul
xor
daa
xor
mull
fwait
outsl
cmpsb
repz
push
int
sbb
jbe
test
mov
in
not
hlt
scas
xor
add
repz
xor
jo
xchg
idivl
mov
movsl
fnstcw
xorb
pop
dec
adc
or
je
in
dec
sbb
lahf
or
out
mov
cmp
scas
mov
and
jle
dec
test
push
adc
popf
pop
mov
mov
xchg
fbld
cmp
mov
clc
xchg
ss
out
ja
cmpl
fldt
mov
dec
test
and
mov
test
test
pop
push
inc
jae
push
test
fbstp
outsl
mov
shlb
stos
xchg
cld
test
jb
lahf
xor
jbe
inc
cmp
mov
mov
xchg
add
loopne
xor
es
fdiv
ja
scas
subb
gs
std
jg
inc
or
dec
jmp
sbb
mov
mov
scas
jmp
iret
jl
adc
leave
addr16
push
fistps
nop
cmpsb
fucomp
mov
sub
mov
mov
add
fs
add
insl
movl
mov
jmp
insl
mov
andl
int3
mov
sbb
sarl
idivb
fsubrl
lock
je
test
sub
in
fwait
and
inc
xchg
popa
and
nop
mov
popf
push
call
pop
movsb
mov
divl
lea
cmc
fs
lds
and
je
adc
sub
jp
pop
ds
push
xchg
mov
in
mov
dec
push
pop
mov
inc
mov
ret
into
sbb
test
or
dec
add
mov
pop
sti
jb
mov
mov
inc
push
inc
gs
mov
fndisi(8087
pusha
fisubrl
imul
cmpsl
pop
movsb
icebp
pop
adc
andl
push
popa
stos
push
pop
or
out
cmpsb
fldenv
lea
xor
out
in
xchg
mov
icebp
cwtl
daa
xchg
jg
sti
push
jns
sbb
lret
push
pop
jge
frstor
cmpsb
sbb
and
mov
cli
mov
cs
sbb
adc
add
fcompl
xor
jp
call
adc
imul
jno
dec
jne
imul
push
cmc
and
xchg
aam
cli
cltd
dec
insb
cs
stos
add
lods
pop
xchg
push
mov
adc
popf
xor
pop
imul
inc
and
dec
mov
pushf
mov
loopne
pushf
mov
lahf
sti
out
push
sbb
jno
and
and
loopne
cmp
xchg
inc
cmp
xchg
shrl
dec
push
hlt
sti
cmpsl
xor
test
movsb
mov
push
in
in
sbb
mov
sub
test
jno
adc
add
push
pop
icebp
sbb
xchg
shll
xor
sbb
cmp
mov
pusha
or
cmp
push
add
pop
je
insl
and
rcrl
shlb
push
and
lcall
iret
mov
mov
int3
call
mov
jb
cmpsl
xor
cmpsb
test
mov
lret
cmp
leave
pop
outsb
fs
xor
mov
lea
in
invlpg
inc
adc
and
fwait
lea
sub
loopne
ds
xor
fistps
lahf
xchg
lods
std
push
scas
stos
and
insb
imul
push
and
loopne
mov
fsubl
out
jle
cmp
cmp
inc
jmp
aaa
inc
sbb
sub
jae
or
roll
negb
data16
inc
out
jmp
pop
add
push
stos
jge
test
jg
stos
fstpl
inc
clc
or
sub
jle
sub
out
fwait
sti
or
or
mov
popf
sbb
add
std
shrl
pop
ss
jbe
xchg
hlt
mov
pop
mov
outsl
push
lret
add
dec
jge
pop
inc
hlt
into
scas
cmc
lods
mov
sub
pop
mov
dec
arpl
popa
int
scas
add
push
test
call
push
mov
fwait
inc
in
mov
add
cmp
int3
outsb
xor
xor
pop
lea
fcoms
outsb
xchg
inc
ret
cmpsb
cmp
bound
pusha
dec
cmp
mov
jns
lret
sbb
jbe
jno
imul
add
ljmp
rolb
vpmovzxwd
jae
cmp
cld
call
pusha
ret
loop
cwtl
push
in
push
cli
dec
stos
test
lcall
pop
mov
mov
pop
xlat
xor
in
jecxz
xor
scas
xor
push
repnz
push
jno
dec
test
dec
jnp
fdiv
jno
out
lret
mov
les
fisttps
mov
mov
loope
aas
push
add
les
inc
ret
mov
andl
xchg
pusha
iret
das
call
xchg
push
mov
adc
fnstsw
cmp
xchg
sub
iret
dec
mov
mov
aad
mov
test
ret
and
push
xchg
nop
es
jmp
test
test
jle
cmp
xchg
cmp
mov
sahf
out
adc
idivb
mov
pop
adcl
pop
sub
rorb
push
sbb
cmpl
cwtl
jno
sub
xchg
popl
xor
xchg
inc
jo
push
or
pop
mov
insb
jge
aas
insl
sbb
rcrl
pop
sub
int3
cld
jbe
pop
fldenv
shlb
mov
jge
jnp
dec
push
insb
sahf
sub
movsl
fistps
pop
arpl
pop
xchg
insb
push
rolb
sub
mov
stos
loop
mov
cmp
xchg
movsl
jp
dec
or
nop
pop
adc
jg
mov
sub
data16
sbb
ret
sbb
fcomps
es
lock
iret
fisttps
and
dec
pop
int3
push
pop
lods
pushf
pushf
enter
inc
sub
push
ss
in
loopne
test
outsb
push
lret
aad
iret
into
stos
dec
pop
sbb
frstor
sub
push
sbb
out
lahf
in
xchg
adc
shl
enter
cmc
jbe
test
fstps
push
mov
xchg
jae
nop
jl
adc
xchg
daa
scas
sub
hlt
xor
jns
ret
movsl
ret
mov
cs
add
es
out
mov
or
xor
mov
adc
inc
std
clc
lahf
lcall
push
out
jmp
xor
push
fwait
jnp
stos
lcall
imul
pushl
repnz
jno
cltd
sbb
pop
in
pop
and
cmp
js
dec
push
xchg
cwtl
or
cmp
cmpsb
jmp
rsm
repz
je
sub
add
jle
call
jle
sbb
xor
hlt
mov
lods
sbb
shll
je
scas
ljmp
dec
lds
rorl
iret
add
jb
and
push
adc
pop
pop
or
pushf
sub
loope
std
test
sub
int
push
pop
jae
fwait
lahf
dec
mov
mov
loopne
sub
mov
jle
jge
in
sahf
fdivrp
mov
mov
pop
stos
into
pop
shrb
jo
cs
inc
ljmp
jbe
adc
inc
mov
push
js
pop
jge
cmc
inc
dec
pop
mov
sub
or
and
repz
daa
lret
loope,pn
in
stc
mov
pop
loop
test
insl
ljmp
mov
jno
fnstenv
xlat
out
fidivs
mov
pandn
pushf
mov
test
bound
mov
jmp
jl
adc
xchg
cmp
lcall
jecxz
xor
inc
mov
and
xchg
das
mov
add
mov
push
push
out
cmp
jmp
and
aaa
adc
clc
filds
arpl
iret
and
adc
add
sub
pop
fnstcw
jecxz
push
push
call
out
adc
lock
mov
mov
and
arpl
lret
mov
push
jno
jb
cli
aaa
test
iret
cmp
cmpsb
negb
adc
xchg
in
and
add
pop
sahf
fs
scas
in
dec
icebp
popf
scas
movsl
cmpsl
icebp
dec
cwtl
push
scas
jmp
cli
push
into
xchg
roll
in
nop
xor
cltd
xchg
sbb
lcall
in
repz
lods
or
mov
xor
mov
test
push
lcall
out
shll
test
int3
in
add
jns
in
mov
mov
jnp
dec
mov
call
pushf
movsb
dec
fisubrs
test
pushl
popa
aam
jns
sub
fs
testb
shrl
xchg
mov
std
jno
jae
mov
test
int3
mov
or
jle
push
xor
lret
incb
pop
xchg
cmp
fs
mov
or
pop
xor
fdivs
call
clc
mov
out
jo
cmp
mov
rorb
or
sarb
xor
ficoml
push
dec
lods
call
dec
arpl
adc
les
daa
push
dec
xor
cltd
adc
add
sub
jno
inc
dec
call
push
pop
adc
sub
adc
adc
into
cmpsl
ret
jns
adc
cld
ffreep
cltd
aas
mov
jp
andb
push
mov
lea
mov
or
fcmovnbe
fwait
jge
or
mov
pop
hlt
in
pop
leave
cmc
stos
pop
test
ss
orl
lea
arpl
mov
xor
pop
fsub
testl
jg
jge
ja
and
sarb
dec
jno
das
xor
sub
dec
popf
movsl
test
mov
pop
inc
jae
sbb
movsl
js
sub
sub
repnz
sub
mov
aas
test
push
ja
dec
add
fs
cwtl
out
pop
jb
cwtl
out
xor
sbb
mov
and
pop
in
jnp
sbb
mov
lcall
jmp
mov
std
sbb
sub
jge
xchg
ret
fcomps
sti
sbb
outsb
cwtl
push
dec
clc
mov
lea
pop
cli
mov
jg
fisubl
pop
jg
adc
mov
dec
addr16
cmp
test
test
fiaddl
cmp
and
daa
add
push
jns
inc
dec
mov
ret
mov
xor
xchg
enter
xchg
test
jmp
push
in
aam
js
mov
pop
pop
mov
lahf
pop
adc
xor
fsubrl
mov
fcoms
cmp
rcr
sbbb
loop
rcll
outsl
jb
dec
or
or
pusha
mov
cltd
call
pushl
in
mov
repnz
es
cmp
xor
adc
jmp
mov
pop
push
les
pop
mov
stos
dec
push
scas
sbb
sbb
cmp
inc
int
mov
nop
les
cmpsl
subl
sar
or
lahf
jo
or
push
repnz
xlat
mov
imul
or
inc
sbb
push
out
push
prefetch
inc
mov
cwtl
fisttpll
cwtl
dec
test
mov
outsl
fldt
outsb
movsb
andl
fsubs
push
iret
les
or
mov
rcrl
bound
jp
xchg
add
fildl
bsr
shlb
sub
cs
jmp
adc
lods
mov
addl
pop
test
mov
pushf
stos
dec
rorb
sahf
data16
ror
add
sbb
ljmp
xor
aaa
push
sub
pop
insb
jno
push
out
xor
mov
lods
jge
add
dec
adc
mov
push
cltd
in
mov
outsb
sub
adc
popf
mov
rol
rcll
inc
push
fwait
dec
loop
dec
mov
iret
add
mov
xor
decl
mov
adc
out
mov
cmp
pop
cltd
mov
hlt
inc
iret
pop
push
out
xchg
adc
lret
cld
push
sbb
cpuid
subl
test
aaa
sbb
pop
leave
aas
loop
mov
inc
mov
test
pop
jb
test
test
shll
popa
mov
cmpsb
leave
push
cmp
adc
insl
push
mov
mulb
mov
lea
sub
call
dec
dec
aad
sahf
sbbl
pop
ret
cltd
jo
mov
mov
repz
sub
add
int3
mov
daa
out
xchg
xchg
xor
mov
call
pop
pop
and
pushf
lea
sbb
repz
or
imul
lret
fdiv
lcall
fwait
pop
and
cmp
lods
out
add
or
mov
daa
jb
movsl
cmp
mov
jnp
loopne
sub
lea
popf
add
loop
adc
dec
mov
inc
inc
jnp
pop
ret
arpl
imul
test
ja
fcomi
push
ss
cli
push
mov
subl
jo
orb
iret
add
fcomp
loope
and
dec
and
pop
int3
out
mov
xchg
xchg
mov
adc
mov
mov
jle
jl
inc
inc
add
or
loopne
fisubs
mov
ret
pop
loope
push
je
xor
sbb
icebp
mov
mov
rol
push
inc
sahf
jns
repz
mov
sbb
sub
jl
stc
aad
mov
leave
mov
xor
push
leave
pop
mov
ds
xor
out
and
pop
jg
cli
mov
xlat
jns
sbb
out
jmp
push
popf
xchg
and
call
vsqrtps
sbb
lret
out
push
shll
or
ss
scas
pop
sub
or
shll
sbb
xchg
xlat
pop
in
jno
out
stos
cmp
sbb
xchg
loop
cmp
shrb
repnz
ljmp
stos
les
xlat
fsubrl
loop
int3
addl
rorl
repnz
mov
cli
or
and
xchg
and
inc
inc
and
je
repnz
xchg
cmpsb
xchg
sub
ljmp
sbb
ss
ret
pop
in
push
xor
xor
imull
hlt
test
aaa
fcmovbe
lds
inc
or
out
jg
mov
out
push
daa
cmpb
fisubrs
add
sbb
and
jmp
mov
ret
lea
in
xor
lods
test
push
mov
ljmp
dec
xchg
mov
pop
mov
pop
push
or
mov
cmp
bnd
iret
mov
mov
cli
xchg
sbb
mov
out
jae
pop
sbb
adc
nop
int3
inc
jmp
aam
lcall
out
jl
pop
push
popa
fs
testl
jmp
lock
push
and
sbb
lea
sub
adc
xor
aam
lcall
popf
movsb
push
arpl
adc
cli
push
xchg
push
fldenv
jmp
jbe
add
ja
add
mov
inc
or
lds
jns
in
js,pn
sbb
mov
adc
call
les
jl
gs
cmp
xor
fcmovnbe
inc
and
mov
mov
xchg
xchg
lods
arpl
mov
cmp
inc
cmpsl
iret
sbb
xorl
xor
adc
jbe
stos
arpl
adc
out
aas
pop
clc
jno
xor
popa
popf
in
or
xchg
or
xchg
mov
cmp
insl
cltd
fistpl
jbe
push
jecxz
scas
data16
rcll
add
outsl
mov
mov
pop
sti
xchg
ljmp
cmpsl
scas
test
push
mov
mov
and
mov
loope
xchg
adc
mov
push
enter
cmp
cmpsb
dec
lock
imul
jecxz
add
xor
mov
mov
pop
stc
into
enter
xlat
lea
das
loope
sub
or
dec
and
mov
gs
lock
ja
jecxz
pop
jge
xor
xlat
nop
mov
ljmp
or
add
push
jmp
out
sub
test
data16
add
or
inc
sub
mov
sub
and
push
test
sub
fstpl
sahf
lds
jmp
pop
dec
xchg
ljmp
into
out
adc
repnz
loope
push
pop
xchg
jb
mov
inc
stos
and
mov
jecxz
test
ljmp
jmp
shl
or
lea
std
je
xchg
lcall
bound
jle
pop
aaa
clc
jb
js
jae
addb
je
subb
out
or
test
out
in
cmp
icebp
out
lds
sarb
fndisi(8087
cli
adc
or
cmp
jp
dec
jmp
test
xor
xchg
fmul
inc
and
sub
pop
fwait
repz
and
fsub
sub
cld
enter
aaa
js
nop
jno
inc
cltd
add
xor
cltd
loop
enter
mov
bound
or
out
jle
outsl
jmp
xor
inc
je
es
jne
fisubs
xor
cli
pop
cli
stc
pop
bound
imul
les
and
lret
pop
mov
mov
xchg
mov
icebp
pop
sbb
lret
lahf
dec
mov
jp
inc
push
out
sub
out
lock
jp
add
push
jg
xchg
lock
pop
jecxz
or
cmp
mov
sbb
xchg
sbb
fwait
jo
xchg
add
dec
mov
lcall
fimull
dec
cmc
mov
or
sti
dec
mov
outsl
addr16
or
push
or
les
cld
sub
jle
nop
add
lock
xchg
jmp
shlb
sub
insl
lds
insb
jecxz
cmp
mov
lcall
js
cmpsb
mov
mov
test
xchg
or
bound
in
dec
pusha
xchg
xchg
lea
mov
sahf
insb
add
clc
sahf
xchg
cltd
xchg
xchg
mov
jl
rorl
push
or
jno
ja
adc
inc
int
push
nop
cmp
clc
js
scas
divb
dec
jnp
test
inc
repz
push
mov
fimuls
in
inc
imul
fnstcw
or
adc
js
cmp
add
mov
inc
sub
loopne
xor
jne
cmp
stos
mov
dec
cld
mov
mov
mov
leave
pop
icebp
ret
mov
adc
jne
xor
push
inc
xchg
or
jns
movsb
dec
cmp
mov
lods
pop
jno
dec
iret
jmp
jg
mov
sarl
jge
mov
sub
js
into
sbb
mov
lcall
cltd
cmp
aas
repnz
pop
push
push
mov
sar
jbe
cld
xor
das
cmp
and
or
inc
pusha
dec
out
xchg
cmp
mov
jecxz
shlb
das
push
xchg
jp
andb
test
cmpsb
in
data16
jnp
frstor
mov
sbb
incl
sbbl
mov
xchg
jb
sahf
xor
in
sbb
mov
dec
cld
jns
sbb
xor
out
rolb
idivb
sub
mov
lcall
mov
add
push
sbb
dec
jge
inc
repz
jl
inc
mov
inc
push
mov
cmp
and
out
flds
mull
into
sub
daa
mov
insl
inc
and
iret
sub
shll
rep
out
jnp
xchg
lahf
mov
xchg
mov
mov
jno
cli
xor
lods
pusha
test
dec
adc
shl
es
mov
fwait
cwtl
ret
mov
dec
lret
std
setle
adc
stc
push
fs
push
or
gs
fisubrl
cli
mov
shll
lahf
dec
sbb
mov
add
jb
shlb
loopne
jle
sub
stos
ret
inc
call
imul
loopne
jg
cld
dec
inc
lret
pop
cmp
push
xchg
add
push
cwtl
das
jge
aad
xorl
dec
or
mov
sub
mov
cmp
into
mov
add
xchg
sub
mov
ret
inc
movsl
jae
sbb
or
repz
sub
outsb
adc
sub
cwtl
adc
push
pop
rorb
push
sub
gs
mov
jo
xchg
sbbb
aaa
data16
add
dec
mov
dec
xchg
repnz
scas
or
int
mov
std
jmp
cmpsl
pop
adc
dec
movsl
push
pop
outsb
movb
loopne
inc
pusha
jle
sbb
mov
rorb
xor
rorb
sub
and
sub
add
jge
aas
mov
and
jle
movsl
outsl
js
mov
mov
dec
hlt
sbb
mov
imul
fdivrl
lahf
add
pop
or
mov
mov
jmp
lret
lcall
sub
push
js
les
xor
xchg
addr16
cmp
int3
jne
test
outsb
lcall
dec
mov
andl
jae
pop
mov
iret
icebp
pushf
xor
pop
push
inc
inc
mov
sub
scas
into
lahf
sub
sub
jo
mov
stc
mov
sub
sbb
cmpl
adc
cltd
dec
or
xchg
inc
fwait
mov
in
bound
call
adc
shrb
dec
ljmp
cmpsl
cmp
or
sbb
sub
and
bound
loopne
mov
push
mov
jnp
mov
push
scas
lcall
std
gs
jnp
push
xor
inc
xor
int
gs
cmpsb
outsb
inc
xchg
pop
sbb
jl
mov
jo
pusha
icebp
sub
push
out
adc
jge
call
sub
and
sarb
test
inc
loope
out
insb
dec
xor
push
sub
pushf
pop
mov
fwait
sarb
push
pusha
outsl
push
push
clc
or
mov
stos
mov
xor
sti
xchg
popa
movb
mov
stos
movsb
pop
push
std
jns
ja
out
and
ds
sti
ficompl
lds
jo
push
pop
cmp
xchg
xor
xchg
adc
sub
add
pop
mov
pop
nop
xchg
std
andb
inc
xchg
sarl
inc
mov
xor
insl
imul
ficoml
pusha
jne
loope
pop
jmp
popf
fisttpl
out
jb
loop
mull
mov
adc
and
stos
out
ja
insb
pop
push
xchg
mov
out
lcall
sahf
fbstp
lret
or
cmp
bnd
call
je
and
cmpsb
rclb
adc
bound
pushf
pop
fwait
mov
dec
pop
jp
push
mov
outsl
cmp
fcmovnbe
xchg
push
ljmp
scas
cmp
push
in
movsl
out
test
sbb
inc
stos
imul
add
jp
xchg
xor
enter
sub
in
xchg
or
sub
loope
mov
cmc
iret
imul
and
add
leave
movsl
adc
repnz
out
or
sub
bound
mov
mov
fcmovnbe
cs
push
movsl
ret
mov
lret
pop
adcb
cmp
into
adc
dec
adc
repnz
jne
adc
lods
mov
push
and
imul
mov
and
icebp
cmp
mov
jge
push
add
add
fnsave
fisubl
pop
movsb
lds
std
mov
loopne
sarl
xchg
cmp
sub
xchg
frstor
or
push
pop
pushf
scas
cmpsb
add
repz
shlb
ss
xor
and
sub
add
jmp
or
shl
push
aaa
mov
or
xor
fs
mov
pcmpgtw
mov
lock
mov
xchg
loope
ret
nop
jg
rcll
sahf
outsl
test
push
mov
ret
leave
pop
mov
xor
fwait
sbb
cmc
add
mov
fsubs
std
ss
sub
stos
aad
fwait
aam
mov
rorb
mov
or
push
mov
dec
mov
test
filds
push
pop
dec
mov
test
adcb
pop
push
arpl
pushf
aam
ret
mov
aas
xor
mov
pop
adc
ljmp
jl
sbb
push
mov
inc
sub
and
leave
and
lods
pushl
or
idivb
aad
push
fisubrs
iret
pusha
hlt
out
negb
sub
ss
pop
inc
sbb
or
sbb
adc
mov
bnd
xchg
push
popf
popf
ret
gs
in
out
out
les
xchg
xchg
sahf
lcall
insl
lods
ds
pop
pusha
xchg
out
dec
icebp
mov
stos
jge
xchg
in
jl
mov
or
in
xor
movsb
shll
lret
js
int
and
xchg
sbbb
adc
mov
inc
mov
bound
jl
jns
addr16
clc
push
push
jnp
gs
push
aas
cmp
jo
sti
addr16
leave
jl
push
movsl
insl
cmp
repnz
insl
sti
stos
cmp
repnz
imul
gs
pop
cld
xchg
add
out
cmc
loop
jg
test
test
xchg
adc
or
push
jae
push
mov
push
mov
push
push
ljmp
ds
inc
test
int3
shlb
lods
sti
ljmp
cmpsl
inc
int3
jne
dec
lret
xchg
andb
cli
movsb
add
fisttpll
add
sub
cmp
jns
dec
add
mulb
dec
inc
aad
xchg
pop
sub
lods
sahf
int3
pop
andl
adc
jmp
call
mov
shrb
cmp
inc
sub
mov
bound
cmc
push
fs
or
dec
in
enter
test
cmp
pushf
ret
scas
jg
fbstp
cmpl
jg
pusha
xor
fldt
fidivs
mov
movsb
sub
fldenv
cmp
repnz
loop
ret
sub
scas
or
andl
mov
push
insb
lods
test
lcall
aas
lds
sbb
pop
repz
sbb
addl
popf
dec
in
cmovne
xorb
cmp
add
cmpsl
loope
sbbl
pop
lock
out
das
mov
leave
arpl
cmp
addr16
shll
jbe
cmc
ficoml
pop
mov
or
mov
adc
test
nop
insb
xlat
loopne
arpl
sub
scas
cmc
loop
dec
and
sub
nop
lods
pop
xchg
lret
lea
lret
push
roll
push
scas
dec
sbb
inc
cld
ret
dec
sub
into
ja
cmp
int
fs
sbb
xchg
in
jb
inc
sbb
call
mul
iret
cld
dec
dec
out
sub
pop
cwtl
int
imul
ds
int
aam
popa
loop
sub
sbb
jecxz
lret
sbb
mov
test
sbb
fwait
call
shr
pop
out
ja
ficomps
arpl
push
loop
jae
or
negl
sbb
popf
ja
stos
lods
imul
gs
cli
mov
sti
std
mov
xor
outsl
lret
push
ljmp
add
inc
pushf
jbe
mov
add
out
enter
jl
inc
pusha
sub
pop
lahf
in
mov
dec
repnz
mov
xor
mov
dec
xchg
insb
mov
cwtl
adc
jle
and
xor
jae
adc
es
lret
ja
int3
cmpsb
fisttpll
sarb
arpl
fsubrs
jg
cmp
xor
dec
sarb
int
es
test
ds
push
rorl
xor
adc
xor
ret
pushl
mov
xchg
popf
add
jecxz
mov
call
xorb
push
outsb
push
popa
dec
push
jg
or
fs
cmpsl
leave
dec
fldl
cld
aas
iret
lods
jg
and
xchg
sarb
dec
lods
les
xchg
icebp
mov
out
xor
dec
xor
pop
popa
jl
mov
loop
popf
out
fs
push
pop
mov
clc
inc
fs
push
xchg
adc
ret
icebp
cmc
data16
cmpsl
pop
mov
pop
lods
testl
ltr
add
inc
lods
and
mov
dec
addl
sub
push
rol
mov
cmpsl
mov
mov
push
and
clc
cmpsb
jb
scas
mov
imul
bound
sub
push
jbe
mov
imul
sbb
out
jmp
inc
addb
pop
mov
aam
xorb
mov
out
cltd
xchg
xchg
push
jne
fwait
mov
adcb
ja
adc
adc
mov
icebp
adc
cmc
imul
pop
fstl
loope
adc
mov
movzwl
inc
jg
scas
fldenv
pop
fucomip
xchg
push
ret
popf
cltd
inc
subl
pop
mov
fldenv
mov
call
mov
inc
hlt
push
out
push
xchg
sub
inc
add
pop
jb
sahf
pop
mov
icebp
outsl
add
imul
lret
ret
cmp
and
repz
movsb
arpl
jge
mov
xor
jmp
test
xor
dec
pop
xchg
in
xor
lret
mov
int
cwtl
out
in
ja
lea
adc
repz
inc
popa
cli
mov
imul
and
lret
cmp
scas
lret
and
repz
leave
out
dec
cli
mov
cltd
mov
bound
out
loopne
jecxz
shl
movsl
adcb
xor
inc
sahf
pop
mov
lcall
or
adc
xchg
push
sub
add
mov
xchg
ucomiss
jmp
adc
or
push
shlb
clc
adc
mov
shll
cmp
and
jno
dec
pop
incl
ret
clc
mov
iret
pop
in
fldcw
inc
push
ret
mov
fisubs
mov
outsb
xor
cwtl
mov
push
push
stc
and
xchg
adc
mov
add
jae
outsl
fwait
cwtl
jbe
dec
out
cmpl
sub
pop
push
and
sahf
es
mov
cmp
or
xchg
call
push
push
ds
xchg
pop
in
stc
and
data16
inc
mov
into
pop
or
popf
jecxz
je
adc
fldenv
icebp
nop
fnsave
sti
jge
es
fwait
hlt
push
add
jnp
push
inc
mov
add
cmpb
in
mov
lcall
xchg
xchg
fdivr
add
das
xor
jge
out
and
pop
adc
pop
subl
dec
mov
addb
and
sahf
hlt
pop
daa
sub
addr16
in
pop
neg
test
and
test
sbb
add
addr16
movsl
popa
mov
jp
push
repz
cmp
dec
cwtl
mov
call
hlt
mov
dec
fcomp
scas
cs
lods
dec
pop
xchg
pop
mov
dec
mov
push
nop
jmp
outsb
ret
jl
xor
movsl
and
adc
push
in
fisttpll
js
movsl
js
ja
insb
xor
insl
gs
adc
sbb
and
mov
iret
std
in
lahf
mov
cmp
mov
dec
jb
dec
shlb
push
cltd
lods
xchg
lods
call
or
xchg
inc
sbb
mov
sub
fdivl
add
jo
adc
cmp
bound
pop
adc
es
int3
fstps
push
popf
call
popl
out
movsl
sub
scas
push
sub
pop
push
jnp
xchg
add
xor
orb
arpl
iret
call
or
jge
loope
mov
sub
adc
test
lock
add
movsb
push
clc
xlat
mov
scas
xchg
push
nop
mov
daa
xchg
pop
movsb
add
es
dec
ds
inc
sbb
hlt
ret
cli
repnz
inc
jnp,pn
inc
pop
or
rcrl
pop
or
cld
es
sub
jns
int3
cwtl
or
cmpsl
mov
cmp
cmp
mov
nop
divl
sub
in
stos
enter
ja
rcl
xor
iret
pop
sbb
inc
ret
or
dec
push
rcrb
mov
lds
cli
adc
adc
enter
pop
jecxz
nop
lds
aam
jbe
mov
idivb
adc
cltd
shr
out
sbb
mov
jnp
cld
push
dec
sbb
mov
in
sbb
and
in
out
mov
clc
and
and
jnp
cwtl
fldcw
dec
fidivl
mov
fidivs
loope
mov
shll
popf
mov
jns
call
cmp
aas
adc
les
pop
and
sahf
outsb
stc
push
add
pusha
mov
mov
lea
mov
mov
insb
mov
cmp
inc
lret
mov
sub
cmp
call
call
sti
test
xchg
pushf
in
dec
jmp
cmpsl
lock
fdivl
loopne
mull
cltd
xor
mov
cwtl
ret
add
lret
in
leave
into
lret
loope
inc
mov
dec
xchg
sbb
imul
sbb
data16
xchg
in
or
xchg
and
inc
je
out
jns
mov
cld
jle
fstpt
mov
shl
ds
push
rcrl
in
xchg
jle
pop
rclb
insb
xchg
pop
jo
loope
cmp
cwtl
scas
sbb
ss
cmc
mov
lods
and
movsl
addr16
aaa
cmpsl
jno
xorl
add
mov
and
push
xchg
aam
add
dec
lahf
jnp
jb
xor
adc
sub
sbb
ja
jae
into
fwait
or
inc
inc
mov
rorl
sub
lret
outsb
shlb
pop
pushf
insl
pusha
mov
pop
pusha
ret
addl
dec
sbb
dec
out
and
mov
mov
outsb
inc
sbb
mov
fcomps
lods
pop
fisubrs
pop
mov
sti
add
js
loope
rolb
test
jmp
xor
add
inc
xchg
jg
dec
cwtl
mov
test
insl
faddl
xchg
and
jno
ret
notb
and
push
push
inc
hlt
rolb
dec
push
jp
push
and
inc
loopne
jle
xor
push
push
test
jae
int3
or
lods
pop
mov
jmp
jge
pop
into
adc
jg
lods
and
scas
adc
je
and
xor
inc
adc
leave
outsl
jle
frstor
sbb
add
es
push
outsb
pop
movsb
ret
adc
test
movsl
insb
cmp
or
leave
testb
lods
xor
jb
xchg
push
lret
inc
call
int
jle
adc
jo
gs
cld
inc
sahf
dec
movsl
pop
cmp
cmp
cmp
jl
cmpsb
sub
ret
xchg
popa
push
movsb
iret
movl
add
cmp
pop
jge
push
mov
add
xor
clc
movsl
push
dec
jne
popa
add
mov
jo
xchg
loope
imul
xor
mov
pushf
adc
rcrl
mov
jno
in
icebp
inc
xchg
xor
cld
popf
cmp
cs
push
sub
add
mov
cs
jns
pop
push
out
mov
cmp
aam
inc
aam
jns
clc
lods
out
jp
mov
leave
sbb
adc
loop
jbe
les
mov
mov
jl
lahf
jmp
and
jnp
push
sub
dec
jae
mov
sbb
seto
jge
mov
mov
fcomps
ljmp
xchg
cli
xchg
loopne
leave
adc
insb
sarl
xor
or
cltd
lock
test
scas
movsl
out
mov
dec
iret
sub
sarb
mov
xor
jae
mov
sub
cmp
cli
cmp
dec
dec
pop
repnz
lods
aad
mov
add
cmp
roll
lods
stos
jo
mov
pop
inc
das
or
bnd
orl
je
push
dec
aam
pop
mov
scas
pushf
jl
push
adc
mov
xchg
es
push
sbb
cmp
imul
mov
dec
int
insb
xor
lods
xchg
data16
xor
inc
dec
ds
lcall
mov
jl
jmp
jb
scas
add
inc
pop
popf
nop
push
mov
or
je
nop
lahf
xchg
stos
push
xchg
inc
repz
xlat
cwtl
ljmp
rcr
ret
fwait
mov
neg
cltd
data16
pusha
imul
or
insb
clc
int
mov
sar
mov
inc
std
push
sbb
cltd
push
sbb
inc
jmp
mov
std
mov
lods
out
clc
mov
rorl
insb
cltd
push
rorl
inc
or
insb
sbb
movsb
lcall
or
xor
inc
enter
sahf
xchg
fisubrl
push
out
add
lods
lret
xchg
sub
xchg
xchg
dec
movsl
push
clc
mov
xchg
cld
addr16
sub
enter
and
repnz
bound
mov
cmp
mov
rorb
dec
sbbl
stos
std
dec
test
mov
loopne
push
jb
repnz
imul
in
lods
add
mov
aas
push
push
ja
cmp
inc
sub
lret
adc
sub
fs
ret
sub
daa
repz
mov
pop
xor
stc
inc
scas
movsl
addr16
es
roll
pop
jle
cwtl
pop
or
iret
push
pop
std
cmpsb
pop
jmp
xor
rorb
jae
lods
and
scas
stc
aaa
movsb
or
in
jp
mov
inc
lock
mov
push
dec
push
cmp
insb
in
int3
ljmp
push
ljmp
mov
dec
inc
add
add
pop
repnz
addr16
xchg
stos
bound
push
or
jne
jmp
inc
aas
cmc
ss
mov
arpl
sub
jb
jns
outsb
pop
lret
shrl
and
movsb
mov
loopne
jecxz
jo
cmpb
int3
fbstp
in
sbbl
sti
adc
mov
or
lret
mov
dec
cmp
mov
xorl
jp
loop
inc
or
movsl
xlat
add
fldt
mov
push
in
fimull
shlb
pop
mov
cwtl
int
cmp
or
adc
es
dec
add
xchg
lret
out
das
xor
test
or
cmpsb
xor
and
shll
imul
sti
scas
call
mov
add
sbb
inc
inc
mov
repnz
stc
xlat
and
in
pop
aam
pop
dec
dec
rorb
sti
add
push
sbb
pop
shll
jnp
pusha
loopne
and
aaa
xlat
daa
cmp
dec
mov
inc
xchg
xor
mov
lock
nop
mov
jg
movsb
call
popf
inc
test
and
in
add
popf
mov
jne
xchg
jp
dec
jno
stos
pop
or
mov
cli
mov
and
loop
test
push
inc
pop
shl
or
lds
lea
mov
or
push
repz
lret
stos
mov
stc
out
enter
dec
das
push
cmpsl
mov
pop
sbb
jl
scas
dec
mov
cmp
pop
das
jbe
push
sub
and
add
xor
mov
mov
mov
out
cmp
cmp
mov
push
and
or
push
mov
xor
out
and
in
dec
outsl
sub
sbb
cmp
push
jnp
or
pop
xor
jge
cld
pop
sti
sbb
cmc
addr16
aad
fwait
add
stos
shrl
pop
lds
test
pop
xchg
ret
push
shl
sub
jbe
test
or
psubd
add
inc
test
stc
test
mov
das
clc
rclb
and
jp
lret
dec
dec
dec
fldt
pop
lods
pop
jo
inc
inc
add
jecxz
pop
out
push
enter
and
xorl
stos
jge
mov
hlt
pushf
aad
test
icebp
push
arpl
es
arpl
cmp
dec
mov
pusha
jle
out
add
int
fiaddl
pop
stos
std
test
lret
and
inc
xchg
and
mov
icebp
sbb
cmp
icebp
fmull
adc
or
imul
rclb
mov
xor
jge
or
call
movsl
or
jns
inc
cld
xor
outsl
mov
and
push
add
adcl
pop
rcl
imul
mov
pop
jle
arpl
mov
lds
xchg
lahf
dec
mov
pop
lock
das
cmpsb
xor
adcl
scas
adc
scas
cmc
jle
jp
mov
mov
cmc
les
pop
mov
jge
mov
daa
mov
inc
mov
aam
dec
cmp
xchg
jl
pop
lea
pop
push
movsl
fisttpl
stos
cmpb
test
pusha
lcall
push
cmc
mov
ljmp
repnz
lods
subb
xchg
icebp
out
mov
stos
push
ljmp
sub
mov
inc
xchg
xor
iret
pop
hlt
cmp
inc
or
jecxz
lcall
data16
mov
jns
dec
fnsave
std
cmpsb
jae
fisubs
or
cs
aad
fiadds
adc
rolb
or
shlb
xchg
add
ret
adc
addb
cmpsb
daa
pop
mov
pop
or
xor
and
mov
dec
into
daa
aaa
sub
adc
fadds
inc
jne
push
gs
mov
inc
or
rcrl
idivb
mov
add
push
movsl
xchg
stos
cmpsl
inc
dec
test
negb
je
inc
cmp
cmp
push
jecxz,pt
out
and
mov
cmp
xchg
sahf
jl
inc
lds
mov
xchg
add
hlt
xor
aas
lock
sbb
xchg
rorl
jne
gs
pop
xchg
fnsave
mov
mov
leave
arpl
inc
push
ss
push
outsb
rcr
cwtl
popf
jl
jbe
mov
pusha
pop
subl
sbbl
adc
stos
lcall
movsl
int3
dec
sbb
sub
negb
push
jmp
negl
imul
adc
mov
mov
pop
repnz
inc
xor
andl
mov
std
js
or
and
push
push
pop
add
pop
xor
ja
adc
or
insl
insb
dec
mov
in
mov
adc
cmp
insl
js
test
xchg
scas
movsl
inc
mov
push
out
fisttpll
sti
out
andb
popf
pop
mov
push
std
jns
inc
push
js
adc
pop
sbb
movsb
mov
stc
sub
push
mov
push
dec
cwtl
mov
stc
xor
aam
mov
sub
mov
sbb
adc
xlat
cmp
jge
pop
cmp
xchg
sarb
bound
mov
sti
xor
gs
cmp
shl
int
mov
in
jmp
and
pop
add
mov
pop
fisubrs
pop
push
adc
mov
mov
and
in
pop
push
leave
dec
ret
pop
pop
cwtl
inc
cmpsl
in
jg
xchg
adc
xor
lds
fisttps
in
inc
pusha
loopne
push
popa
mov
aad
mov
repnz
push
les
in
test
mov
aam
dec
jns
dec
aaa
sbb
sbb
arpl
and
adc
ja
push
jns
push
mov
push
rcll
xlat
sti
lret
jne
mov
xor
jae
ds
dec
andl
stc
xchg
hlt
addr16
insb
jae
push
mov
test
cwtl
jno
add
orl
xchg
mov
out
jl
sbb
shlb
jmp
dec
and
into
mov
pop
outsl
sbb
inc
jmp
dec
sbb
push
pop
fucomip
imul
fidivrl
push
mov
pop
sub
pop
test
add
and
mov
fdivl
mov
jbe
dec
idivl
pop
inc
pop
sahf
outsb
shl
xchg
lods
sbb
inc
repnz
mov
dec
add
jo
mul
sbb
or
cltd
or
push
adc
ret
push
add
jo
in
test
xchg
cmp
sub
adc
jo
fidivl
popa
insl
insb
ss
ja
push
test
rclb
xchg
insb
imul
icebp
add
lcall
jb
xchg
adc
mov
jp
add
dec
jl
mov
pop
ror
rorl
xchg
mov
jmp
push
push
xor
into
int
scas
pop
aad
jb
adc
scas
sti
adc
fistl
movsl
addr16
mov
xchg
sub
mov
rclb
test
jecxz
daa
jp
daa
leave
xchg
xchg
dec
push
aas
lock
mov
push
out
cltd
and
ret
aaa
loopne
push
mov
dec
add
pop
mov
in
js
jmp
mov
decl
clc
outsl
xor
cmp
add
mov
push
and
jb
pusha
mull
arpl
cmp
jg
sub
mov
add
mov
imul
frstor
mov
out
fnstenv
dec
mov
and
scas
cmpsl
nop
aad
dec
popa
lods
cmp
dec
cwtl
jl
stos
and
les
cmp
insl
jnp
sti
jmp
fcoms
or
imul
movsl
notl
pop
in
stos
popa
sbb
jle
add
pop
inc
xchg
insb
cmp
nop
dec
nop
or
or
mov
iret
pop
dec
int
push
mov
sti
adc
imul
cmp
jno
sarb
nop
faddl
cmpsb
dec
mov
cmpsb
popa
xchg
mov
test
aaa
cwtl
dec
pop
dec
es
dec
sbb
or
xor
adc
pushl
into
mov
or
push
xor
and
loopne
flds
lret
loop
inc
stos
or
lods
pop
add
jle
inc
lcall
adc
jg
loope
insl
rolb
outsb
push
movsb
clc
fdivr
daa
jle
mov
flds
mov
rcrl
mov
mov
push
out
mov
xchg
pop
add
movsb
add
xchg
pop
loop
mov
jle
roll
in
mov
adc
cmpsb
xchg
mov
push
in
lret
js
cmp
leave
clc
push
jb
testl
call
mov
sti
push
pop
mov
cmp
scas
inc
shl
stos
cli
xchg
popa
mov
sbb
add
out
mov
lea
fldl
mov
jl
cmp
dec
rclb
js
push
lcall
jl
pop
mov
jg
cmp
push
scas
scas
fldln2
js
xor
add
lods
inc
in
or
mov
imul
pop
push
dec
inc
mov
jp
inc
imul
adc
mov
mov
add
cli
int3
cmp
sbb
jg
std
and
mov
lcall
mov
xor
into
jge
or
hlt
and
dec
call
lret
cmp
adc
push
out
xor
loopne
xchg
ja
gs
push
in
insb
add
push
aad
loopne
inc
cmp
add
cld
nop
inc
shl
je
mov
lods
rcrb
xor
inc
push
cmp
jae
fcmove
rcrl
neg
inc
test
orl
subb
jge
xchg
cmc
push
sbb
sti
out
hlt
pop
out
repz
xchg
imul
xchg
clc
aaa
sbb
fildll
xor
dec
xchg
clc
mov
inc
lahf
xor
das
add
push
push
xchg
mov
leave
jmp
adc
mov
mov
and
add
in
cmp
sub
cmc
incb
lods
jno
add
sbb
aad
add
popa
jo
ficompl
rcll
es
inc
fisubs
cmpsl
jns
pushf
mov
add
popa
je
popf
pushf
adc
add
sbb
sahf
popf
jne
xchg
aad
in
mov
sub
push
jg
mov
cmp
push
sub
push
jo
jno
add
mov
das
mov
mov
adc
jmp
loope
movsl
dec
mov
into
lock
push
jmp
push
jmp
mov
xchg
mov
jp,pn
loop
mov
inc
mov
add
jbe
loop
fs
xor
lods
and
test
or
ljmp
rolb
daa
inc
jg
sbb
stos
rol
dec
out
mov
lret
in
mov
mov
shlb
dec
andb
push
cmp
xor
or
and
imull
inc
xchg
push
pop
push
jge
dec
xchg
cld
push
inc
cmp
adc
stos
addb
cmp
fcmovbe
mov
lret
mov
out
push
push
dec
ljmp
mov
mov
orl
jb
mov
int
stc
cmp
aad
lods
mov
mov
ja
bound
fbld
ljmp
lret
sub
or
jle
xor
scas
sbb
cmp
xchg
cmp
sub
mov
push
nop
cmp
daa
lods
push
and
cmp
in
dec
xor
repz
dec
pop
or
xor
dec
and
mov
add
jmp
movsb
jecxz
movsl
les
in
sbb
aaa
push
daa
loope
xor
scas
jp
jbe
mov
hlt
xchg
or
aam
mov
xchg
sbb
adc
push
enter
test
pushf
xor
nop
out
je
mov
mov
test
mov
test
cltd
sub
sbb
cmpsl
bound
loopne
inc
sahf
insb
das
dec
cmp
jne
push
push
subl
repnz
or
repnz
lock
lock
push
xor
data16
dec
push
inc
jno
mov
filds
scas
lds
cmpsb
out
cmp
loope
roll
das
arpl
xor
mov
sti
arpl
jnp
lcall
ret
je
pop
lods
movsb
cmpsb
or
pushf
or
daa
repnz
enter
aas
jae
sub
pop
in
rcll
ret
push
lock
ret
push
mov
andl
test
cltd
cld
jl
and
xchg
sub
dec
cmp
lock
xchg
inc
mov
mov
push
lahf
or
or
xchg
testl
dec
pop
pop
adc
jge
inc
cwtl
xchg
in
sbb
aas
es
repnz
push
mov
mov
loope
out
jge
out
jb
loope
gs
xlat
lock
int
and
pusha
js
jbe
xchg
mov
or
in
pop
repz
inc
movsb
ret
out
cmc
gs
push
jne
sub
orl
xchg
loopne
test
mov
cmp
inc
out
dec
add
sbbl
xchg
in
dec
xchg
jo
dec
or
xor
adcb
lock
shrb
or
es
mov
iret
fmull
sti
mov
pop
jmp
lods
ficomps
dec
ljmp
daa
divl
lret
ljmp
imulb
subl
add
icebp
cmp
fisubrl
sub
not
jae
divl
mov
or
sub
pop
insb
sub
cwtl
lahf
ret
jmp
xlat
inc
mov
mov
xchg
in
pop
push
stos
aam
xchg
push
sbb
pop
cmp
ret
sub
sbb
mov
add
and
movsl
push
mov
shl
cld
mov
inc
add
sbb
xlat
sbb
pop
daa
mull
inc
dec
mov
cmp
xchg
add
lods
cmp
jecxz
nop
pop
stc
lret
decl
lcall
mov
jns
gs
xor
lods
int3
stos
push
or
xor
outsl
jns
jmp
mov
sbb
jp
andb
dec
push
cmp
scas
xchg
or
dec
fs
sub
adc
jecxz
scas
sub
adc
jge
fists
push
jmp
mov
mov
test
hlt
movsl
add
or
shll
stc
adc
push
or
f2xm1
sbb
in
sbb
cld
xor
xor
mov
sbb
add
bound
test
shrl
cli
cld
popa
dec
dec
fcom
lret
je
xchg
mov
ja
js
pop
hlt
ja
dec
and
and
xor
mov
cmp
jne
loopne
and
fcmovne
sub
and
mov
sahf
arpl
push
into
sti
cmpsb
sahf
adc
add
outsl
pop
adc
mov
xchg
push
sar
daa
add
sbb
mov
loop
lea
inc
in
inc
push
int3
in
cmp
adc
outsb
mov
inc
lret
mov
push
shrl
pusha
test
in
sub
stos
aam
repnz
rcrb
aam
xchg
fstl
push
adc
aaa
mov
fnstsw
addl
mov
dec
sub
mov
bt
nop
xor
mov
rcl
push
ret
lcall
xor
mov
leave
push
sbb
xor
add
adc
pop
add
dec
cltd
push
and
or
addr16
aas
cmp
test
hlt
aam
dec
mov
loopne
loope
adc
andl
lods
fsubr
out
rol
push
push
ss
xor
js
pop
sti
je
jmp
jecxz
and
jle
mov
jle
fmull
cmpsl
nop
xchg
jg
mov
cmp
setl
les
jns
xchg
jo
imul
mov
iret
sub
inc
icebp
rcr
and
inc
ret
insl
out
add
pop
jecxz
mov
jb
cmc
test
test
ret
loop
mov
out
enter
lock
in
mov
mov
mov
fmull
outsl
lods
mov
inc
jbe
test
cmp
cs
sar
or
push
mov
fsubrl
sbb
jno
adc
push
xchg
xchg
jecxz
jnp
push
xor
and
sub
push
cmp
cwtl
jmp
mov
lret
and
sub
int
fists
enter
scas
or
pop
sbb
iret
pop
mov
jbe
fldcw
xchg
dec
int
repz
xchg
repnz
adc
jmp
cmpsb
dec
mov
xadd
and
rol
or
jno
jno
out
bound
mov
je
lock
xor
shll
sbb
scas
ficomps
lea
xor
pushf
dec
pcmpgtd
mov
jl
adcl
push
xchg
ds
and
jbe
push
mov
imul
lahf
xchg
xchg
mov
mov
cmp
popa
cmp
out
loopne
pop
bound
icebp
mov
dec
mov
sbb
popf
pop
jecxz
push
adc
mov
cld
adc
aaa
or
dec
insl
and
jb
scas
push
ret
orb
adc
xor
sub
and
add
push
popa
jo
pop
cmp
dec
pusha
out
xor
aam
stos
pop
inc
movsb
xchg
ficompl
arpl
pop
mov
mov
pop
sub
bound
or
jno
das
mov
pop
mov
xor
lahf
pop
cmp
mov
iret
mov
nop
stc
and
out
fsubrl
push
fs
jno
test
adc
sbb
mov
pop
or
dec
idivl
sbb
dec
and
stc
xor
into
and
mov
jle
in
mov
cltd
xchg
popa
fs
fdivrs
dec
sbb
lcall
push
stc
mov
fisubrs
add
jae
addr16
mov
dec
into
cmp
mov
sbb
mov
xchg
sbb
test
je
inc
daa
xchg
xchg
push
jb
push
sub
aas
gs
add
lods
fadds
sub
in
lods
jl
mov
push
leave
movl
test
and
nop
push
dec
mov
mov
das
mov
fadds
and
mov
insl
mov
rcr
mov
cmc
enter
add
cmpsb
fnstcw
mov
mov
xchg
in
cmpsl
out
ss
mov
std
xchg
hlt
inc
mov
daa
mov
push
pop
or
jg
ljmp
inc
adc
daa
mov
push
aam
in
ja
loope
pop
pop
mov
cli
xchg
lods
mov
shrl
movsl
cmp
ljmp
jno
xor
mov
mov
mov
aad
repz
enter
movsb
dec
out
xor
inc
lret
repnz
fwait
mov
inc
inc
mov
inc
mov
lods
rcll
mov
and
das
sub
cmp
sbb
stc
mov
sbb
pop
std
ds
push
mov
or
addr16
gs
add
aas
rcr
mov
add
out
ret
mov
jl
call
fldenv
data16
lea
cmp
into
scas
xchg
push
pusha
lret
inc
sbb
and
movsl
ds
sbb
clc
inc
leave
daa
lret
adc
jnp
lahf
sbb
fbstp
scas
lods
cmc
pusha
mov
push
inc
sub
nop
jle
sbb
or
xchg
data16
fisubl
icebp
or
sub
pop
dec
mov
das
loop
out
push
popa
sahf
adc
mov
cmp
or
and
psubq
pop
push
dec
add
aaa
stos
sbb
movsl
dec
push
jns
push
mov
shlb
dec
xchg
jecxz
xor
pop
mov
xor
negl
pop
mov
jge
ja
out
cmp
fwait
mov
dec
stos
add
nop
test
mov
loope
dec
dec
inc
int
cwtl
dec
inc
fdivs
xchg
adc
insb
sub
lahf
mov
inc
dec
inc
in
es
mov
movsl
or
pushf
cmp
stos
xchg
sbb
jnp
sub
lods
fwait
stos
lret
sub
cwtl
mov
or
pop
dec
sub
and
pop
push
aas
push
dec
sub
push
fwait
pop
test
push
ds
icebp
js
aam
ds
idivb
inc
sub
jns
mov
cmp
mov
sub
cmp
cmp
das
out
jmp
inc
divl
xor
xchg
and
ja
data16
sbb
into
insl
mov
ds
adc
pop
out
jne
fdivrs
daa
fcomp
addl
fwait
sub
mov
das
mov
out
ja
movsb
fadds
inc
dec
test
push
cmp
not
dec
out
popf
sbb
or
fstl
les
mov
pop
pop
adc
pop
cmpsl
fnstenv
mov
daa
fwait
cmpsb
jb
xor
push
loop
sub
dec
adc
jne
cmpsl
xor
scas
push
loope
add
test
pop
adc
sbb
adc
xor
or
xor
in
and
imul
in
and
adc
addr16
or
xor
jb
pop
or
outsb
je
jae
jl
dec
sbb
cmpsl
push
ja
xlat
gs
aad
insb
push
adc
push
sub
mov
sub
and
out
jmp
xor
addr16
jne
adcb
lock
mov
aam
stos
or
xlat
cmp
add
lea
in
cmp
fisubs
repnz
mov
test
test
mov
jge
cs
dec
jnp
xlat
lret
test
mov
in
daa
fs
sub
sbb
fiadds
loopne
inc
fbld
stos
xchg
push
xchg
mov
outsb
add
or
jg
popw
lock
and
jmp
es
dec
dec
outsl
mov
lahf
cmp
push
add
incl
and
rcll
cmc
mov
push
imull
jo
inc
test
jo
divb
sti
add
lret
sub
cmp
inc
push
cmpsl
mov
aad
xchg
xor
xlat
inc
xor
pop
mov
or
jb
out
loop
std
pop
adc
mov
fists
fdivl
add
dec
jns
js
pop
mov
adc
or
arpl
aas
add
xchg
xor
add
xchg
fidivs
roll
dec
movsb
test
fnstcw
and
in
cmp
mov
cmp
mov
lds
push
fs
and
mov
xchg
rcll
pop
js
or
fwait
xchg
sbb
lret
jl
mov
and
add
jle
push
push
cmp
mov
mov
sbb
lret
pusha
mov
adc
cltd
dec
cmpsb
inc
adc
and
cmp
mov
add
adc
int
pop
dec
stos
arpl
mov
cmp
into
or
push
icebp
pop
js
mov
test
insb
js
int
xchg
lods
or
xor
mov
nop
jne
push
dec
or
lds
mov
ds
jp
ds
adc
mov
jbe
mov
xor
mov
xchg
xchg
lock
and
loop
jecxz
inc
pop
ja
das
dec
xchg
pop
xchg
push
adc
mov
mov
jle
jp
push
inc
sbb
sbbl
mov
lods
jns
js
insb
jecxz
in
testb
cmp
jno
jge,pt
add
sahf
scas
in
les
xchg
mov
adc
push
mov
mov
nop
xchg
lods
hlt
fs
jo
iret
fidivrs
fwait
push
mov
push
jl
aam
into
add
xor
xchg
jl
shlb
sub
mov
adc
xor
adc
cld
loopne
or
push
addl
jns
sbb
push
testl
sbb
loopne
dec
cmp
arpl
data16
arpl
pop
or
mov
pop
mov
inc
sarl
fwait
sub
clc
in
outsb
fs
mov
cmpsb
cld
arpl
mov
lods
imul
push
add
lods
and
sub
js
repz
xchg
push
jbe
pop
sahf
inc
or
jae
lcall
sahf
not
std
aas
inc
jmp
adc
mov
dec
push
inc
mov
rcrl
sub
cwtl
dec
or
aam
lret
mov
cmpsl
insl
lret
or
movsl
and
jae
shlb
xchg
and
jge
inc
rorl
je
fiadds
mov
push
aam
jns
mov
mov
clc
test
icebp
add
sub
xchg
xchg
cmp
jmp
out
nop
jno
insb
rclb
lods
sbb
fmull
sbb
push
sahf
mov
and
mov
fildll
stc
push
leave
rcrb
inc
cmp
inc
xchg
ret
sbb
ss
sbb
mov
es
out
sub
aas
push
cwtl
aad
push
push
push
into
repnz
dec
loopne
lahf
xor
rcll
outsb
insb
fidivs
xchg
cmp
xlat
test
movsb
cmpsw
mov
push
repnz
xchg
pusha
inc
test
cltd
xor
ja
mov
mov
inc
adc
jl
pop
ss
rorb
fdivl
adc
mov
ficoml
mov
adc
inc
std
mov
push
ss
stc
movsl
and
and
mov
or
dec
adc
push
dec
int3
test
ret
pop
pop
sub
ficoms
mov
inc
sub
mov
adc
mov
sub
shrl
das
push
stc
movsl
push
pop
movsb
rol
mov
js
insl
mov
fisttpl
xchg
mov
rcrb
leave
cmpsl
lahf
fxch
test
pop
add
sbb
mov
cmp
cwtl
fcmovne
xor
in
push
lcall
in
ds
hlt
inc
in
mov
sbb
in
repnz
movsb
sub
inc
add
or
xorl
add
ficompl
jae
jecxz
loopne
push
test
sub
sub
mov
jmp
jp
sahf
jae
add
add
test
fstpl
or
clc
outsb
stos
pop
fisubl
and
dec
xchg
mov
or
pushf
enter
loopne
cmp
fiadds
pop
icebp
les
std
in
cltd
imul
cmp
loope
lahf
fwait
fwait
xchg
jns
pop
stc
or
xchg
xchg
ds
decb
movsb
add
outsl
jle
sbb
dec
enter
clc
dec
pop
mov
push
jne
in
xchg
and
test
es
jmp
sub
jo
or
dec
mov
fs
in
cmp
aaa
mov
mov
jbe
fs
cmp
popl
cwtl
fs
call
and
xchg
cli
or
ss
adcb
cmc
pop
add
imul
pop
daa
sub
xchg
adc
dec
fcmovnbe
mov
mov
loope
pop
roll
mov
xor
in
dec
xchg
add
mov
cld
and
dec
ret
jns
pop
repnz
inc
adc
cmp
cmp
loop
jae
scas
push
andl
mov
sub
xor
push
mov
mov
test
pusha
xchg
adc
inc
add
int3
xorb
pop
andl
push
test
mov
sbb
mov
mov
cmpsb
or
mov
mov
into
lea
movsb
pop
jle
mov
pushf
sub
in
adc
gs
stos
xor
inc
adcb
movsl
add
into
fadd
std
jecxz
sub
cmpb
dec
adc
test
in
daa
mov
or
lea
lahf
in
sarl
or
bound
test
mov
sub
xchg
ja
xchg
lods
negl
idivl
dec
iret
jg
ret
iret
or
insl
sub
lcall
loopne
add
and
cmp
inc
inc
add
pop
pop
inc
pusha
adc
adc
repnz
enter
xchg
daa
hlt
pop
repnz
pop
push
and
pop
add
jmp
fwait
loope
insb
jecxz
icebp
fistps
sarb
dec
lret
loopne
rclb
rcrb
pop
or
push
clc
dec
jle
movsb
lret
mov
divb
loop
leave
lock
xchg
xchg
xchg
inc
in
xor
lock
cld
mov
aas
xchg
cwtl
es
sbbb
cmc
add
xor
mov
sub
inc
orb
jbe
insb
and
insl
sbb
dec
aad
pop
cmc
mov
mov
mov
pop
ja
out
pop
xor
out
je
ret
imul
lcall
insl
imul
mov
dec
pop
cmpsb
jb
and
std
mov
fwait
stos
iret
lods
pusha
sub
xchg
pop
xor
std
xor
jno
pop
jg
aam
fdivrs
dec
dec
imul
lcall
dec
add
mov
mov
call
mov
mov
lret
fcmovnb
stc
jg
pop
inc
mov
adc
hlt
insl
mov
push
pop
out
push
cmp
pop
mov
jg
jbe
inc
xchg
jecxz
mov
scas
stos
and
and
mov
push
add
loopne
cmpsl
test
addb
fimuls
sbb
add
jle
fstpl
lods
pop
and
enter
fisubs
in
aam
dec
mov
data16
push
sub
and
js
inc
xor
das
cmpsb
sbb
repz
addr16
xor
sbb
mov
sub
add
mov
adc
push
in
push
loop
in
daa
pop
inc
jne
mov
push
adc
cmp
xor
mov
sbb
jle
mov
sub
pop
mov
sub
pushf
add
cmp
mov
int3
stos
ja
dec
push
mov
cltd
fidivrs
in
cmp
int3
inc
adc
push
push
dec
ds
sub
pop
in
cmp
or
repz
out
xor
mov
adcl
dec
push
and
loopne
push
stos
addr16
insb
mov
nop
xchg
inc
lret
in
xor
dec
sub
dec
outsb
out
push
mov
lea
rcrl
adc
pop
sub
inc
outsl
ja
sbb
mov
sub
xchg
fisttpll
enter
inc
test
movl
cltd
mov
mov
mov
mov
scas
xchg
mov
push
and
ds
or
std
push
dec
aaa
dec
clc
jmp
stos
dec
ja
out
xchg
sbb
lahf
leave
jmp
mov
push
cmp
pop
jne
xchg
ss
loope
and
sbb
sub
sbb
jl
movsb
jnp
aad
je
shrb
jns
pop
es
aam
vunpcklpd
mov
scas
movsl
aam
js
js
adc
xchg
aam
pop
push
push
lahf
add
hlt
addr16
int
sbb
pop
int3
movsl
hlt
lds
imul
and
mov
mov
pop
pop
enter
out
sarb
cmp
hlt
cmp
mov
mov
lea
lea
ja
xchg
rolb
in
shlb
adc
lcall
js
vpmacsww
cmp
std
mov
pushf
mov
mov
push
in
andb
inc
xchg
cmp
scas
cli
outsb
hlt
js
pop
xchg
dec
sub
cmp
icebp
leave
adc
fisubl
push
add
jg
push
inc
mov
inc
ror
test
push
cmp
sbb
notb
test
mov
mov
jbe
idivb
imul
inc
lea
loope
jmp
xchg
fsubl
test
mov
stos
inc
shll
mov
push
inc
jcxz
cltd
sahf
js
adc
mov
stc
stos
mov
loope
pop
xchg
mov
js
mov
out
addl
pop
roll
push
mov
dec
jge
jmp
jg
lods
push
in
insl
cs
sbb
pop
jp
fbstp
xlat
dec
rcll
adc
push
pop
cmc
aaa
mov
fisttpll
lods
xchg
xor
loopne
cmp
icebp
dec
lret
into
nop
shr
insl
jnp
push
mov
cmp
push
mov
test
sbb
popa
nop
dec
jns
std
pop
jbe
push
cwtl
insl
lock
inc
adc
and
mov
scas
push
sbb
dec
imul
jo
test
fistpll
mov
aam
fcoms
mov
jo
push
dec
fmul
push
xor
sbb
cmp
aad
in
insb
arpl
inc
push
out
inc
sbb
jae
scas
cmc
xchg
ljmp
das
dec
sub
xor
das
icebp
lods
in
inc
pop
lret
dec
mov
loope
mov
push
scas
or
push
pop
pop
test
out
push
sbb
pop
mov
xor
jo
sbb
or
or
clc
jmp
pop
xchg
shll
cmp
dec
into
ja
xchg
and
push
mov
hlt
pop
paddw
sub
ficoml
fstp
decl
lods
stos
into
mov
lahf
inc
mov
cs
xchg
inc
xlat
sbb
aaa
push
lret
mov
aaa
testl
inc
test
jmp
pop
mov
imul
jnp
movsb
mov
fistpl
and
push
mov
repz
and
sbb
mov
adc
xchg
sbb
out
repnz
mov
sarb
jns
or
cltd
mov
int
repnz
and
mov
outsl
add
stos
mov
jo
icebp
lret
xor
je
jle
dec
and
aad
ret
jne
mov
or
jb
fcos
lret
lcall
adc
adcb
mov
das
pop
loopne
adc
xor
test
pop
mov
cltd
mov
xlat
jne
sbb
xor
and
call
jmp
xor
ja
cmp
test
icebp
pop
inc
out
mov
mov
int
popf
jo
cli
test
ret
jnp
sbb
movsb
pop
xchg
mov
jp
xchg
stos
imulb
mov
fs
xchg
fnstsw
test
pop
or
pop
xchg
test
ror
dec
pop
mov
les
scas
xchg
movsb
pop
loope
sub
push
inc
adc
call
jb
ret
cli
cltd
push
mov
cmp
insb
mov
xchg
enter
je
hlt
xor
cmp
mov
mov
cmp
icebp
lea
jns
movsb
repz
xor
inc
popa
ss
insl
inc
dec
int
add
clc
imul
ds
call
movsl
or
mov
pop
mov
scas
mov
push
sbb
inc
stos
xlat
sbb
or
inc
les
inc
repz
or
ds
xlat
loop
pusha
pusha
jnp
mov
dec
lock
adc
loop
xor
pop
dec
test
movsb
mov
mov
in
popa
aas
add
int3
outsb
add
or
pop
fcoms
xlat
xor
sbb
add
inc
jbe
xchg
int3
cmc
shrl
jnp
jo
nop
sbb
and
mov
dec
loop
std
cli
mov
mov
clc
mov
je
mov
push
pushf
out
sbb
jecxz
xchg
fdivrp
dec
pop
shrl
orl
daa
pop
addb
clc
aaa
jle
cli
pop
cmp
ja
jbe
fcompl
ds
dec
pop
and
pop
push
jmp
sbb
cwtl
push
push
int
and
out
pop
pop
jne
xchg
or
test
stos
js
xlat
pusha
and
mov
push
rorl
std
stos
fidivs
adc
mov
sbb
test
leave
fiadds
in
scas
aam
adc
shrw
fldenv
ja
push
jb
lods
pop
iret
cwtl
sbb
scas
jae
outsl
mov
inc
decb
mov
jbe
mov
pop
cmp
filds
int
out
lahf
xchg
es
cmp
pop
dec
jg
outsb
andl
or
lret
jg
popa
mov
stc
aad
fildll
mov
mov
inc
inc
stc
incl
add
mov
cmp
pop
dec
jecxz
mov
cmp
cmpsb
inc
xor
es
bound
pop
test
add
gs
add
push
call
aas
mov
movsl
xchg
insl
mov
iret
jno
sbb
scas
pop
vcvtss2si
dec
push
sbb
clc
add
addb
arpl
inc
sub
les
faddp
inc
add
push
xchg
fsub
test
idivl
mov
shlb
adcb
pop
pop
dec
mov
mov
je
mov
jl
jecxz
cmpb
out
push
sbb
mov
call
inc
sub
fsts
xor
roll
call
sub
adc
aad
xchg
cltd
adc
std
lea
test
adc
nop
pop
xchg
xchg
idivb
and
sub
repz
jbe
std
cmp
lret
notb
mov
aam
or
push
xchg
mov
cwtl
movsl
mov
in
sub
sbb
cmpsl
stos
adc
repnz
fnstcw
or
daa
fldenv
push
add
sbbb
xor
pusha
scas
das
int
clc
sbb
dec
lret
out
icebp
ja
dec
sbb
jg
cmpsl
lds
jmp
fs
faddl
popa
sti
mull
and
aaa
mov
sub
sub
cmc
ja
push
fbld
push
xchg
sbb
rol
lahf
jmp
sub
in
enter
xor
dec
jbe
ljmp
xchg
cmp
int3
jmp
pop
mov
imul
xor
xchg
jp
mov
lahf
sbb
fdivs
and
aas
stos
adc
repz
andb
fldenv
jl
inc
lods
fld
and
cmp
xor
pop
std
icebp
pop
adc
loopne
into
xchg
adc
xchg
mov
icebp
sahf
push
push
stos
in
fldl
clc
int
rcll
mov
inc
outsb
xor
nop
push
xor
inc
xchg
sbb
mov
clc
mov
icebp
push
cmp
fimull
pop
inc
mov
mov
push
mov
rorb
inc
push
shl
jno
fsubs
lods
xor
jno
pop
loop
push
shll
iret
fistpl
mov
push
mov
sbb
sub
sbb
lds
pop
ljmp
ljmp
in
jmp
addr16
inc
iret
call
mov
pop
xor
cltd
or
vpmaxsw
lcall
cld
sub
hlt
adc
mov
cwtl
jecxz
out
sub
das
ret
stos
adc
js
out
pop
dec
mov
mov
mov
cmp
sbb
pop
into
lahf
push
scas
std
idivl
and
clc
fsubl
test
sarb
mov
sahf
out
repz
xlat
setp
sbb
cmpsb
mov
loop
mov
xchg
xchg
jb
jecxz
mov
enter
push
xchg
daa
filds
ret
fadds
js
mov
jge
mov
sqrtps
movb
pop
cltd
push
mov
xchg
mov
shrl
lock
pop
nop
gs
repnz
push
mov
out
sti
lret
push
shll
test
push
lods
sbb
push
cli
mov
out
test
jp
mov
lahf
out
cmp
mov
xor
push
fcoml
adc
cmp
hlt
mov
divl
jmp
xchg
xor
inc
xchg
into
cmp
lods
pop
lcall
nop
dec
cmp
cmpsl
cmpsb
add
add
push
add
push
dec
insl
ds
ficompl
fcoml
imul
leave
imull
mov
aam
outsb
add
je
popf
enter
sub
xor
aam
cmc
ja
stos
pop
repnz
sbb
mov
cmpsl
fcompl
push
test
and
sbb
cs
mov
push
and
addr16
bound
ds
jnp
pop
addr16
out
push
aaa
xchg
jo
sahf
aad
sbb
jecxz
push
scas
repz
mov
lods
mov
mov
loop
dec
cmp
clc
ret
jle
pop
fnsave
push
aas
pop
xchg
mov
hlt
adc
mov
pop
cmp
push
cwtl
jmp
dec
xor
mov
add
inc
pushf
xor
jb
leave
pop
pop
cmpb
flds
scas
mov
leave
sbb
lods
dec
aad
mov
xchg
pushf
mov
sub
jb
and
pop
leave
pop
out
xchg
insb
xlat
jmp
enter
add
loopne
cs
cld
adc
sti
adc
dec
imul
or
pop
aaa
ja
rcll
cmpsl
mov
jo
bound
outsb
pop
rolb
jne
in
repz
ds
push
and
stos
fisttpl
mov
lds
lea
xor
pop
cmc
xchg
sbb
xor
jne
mov
jno
ret
pop
push
cli
jge
popf
xor
data16
add
xor
inc
push
mov
int
in
xor
mov
cmp
pop
adc
cmp
loop
pushf
stos
push
loopne
adc
push
sub
stos
jge
push
and
push
dec
lret
test
outsb
stos
or
pop
movsb
std
mov
dec
clc
sbb
lret
stos
mov
rorl
lret
fwait
xchg
iret
inc
fdivl
cmp
and
inc
lods
inc
nop
loop
rcll
in
divl
xchg
fdivrs
insl
scas
ljmp
cmc
push
xchg
aam
adc
jl
maxps
push
repz
and
pop
xchg
fs
test
int3
xchg
mov
into
loope
xchg
out
mov
jge
mov
sub
inc
mov
or
pop
aad
or
fiadds
ja
xlat
mov
sub
movzbl
fwait
mov
push
xlat
add
lods
cmc
loop
jne
push
orb
aam
insl
add
fsubrs
adc
or
xor
loopne
ss
or
sbb
xchg
sub
mov
fisttpll
test
jecxz
jo
cmp
xchg
and
and
ss
mov
adc
push
xchg
js
loopne
jg
addl
out
xorb
cmpb
dec
out
jne
les
mov
mov
mov
xchg
xlat
enter
incb
sti
xchg
or
imulb
pop
test
lret
add
fisubrl
hlt
enter
cmp
mov
mov
push
cmpsl
imul
fists
pop
mov
cltd
mov
scas
jmp
clc
pushf
gs
mov
and
cmpsl
adc
sub
pop
sbb
jnp
sbb
cs
mov
xchg
nop
iret
mov
mov
mov
xchg
xchg
xchg
outsl
pop
lret
aaa
adc
aad
in
jbe
inc
pop
jns
and
inc
add
lds
inc
dec
push
fbstp
push
iret
stc
mov
push
sub
std
cwtl
dec
jae
leave
cmp
leave
cmp
xchg
cmpb
sbb
fxch
lret
push
mov
out
lods
test
pusha
mov
es
add
mov
out
jge
mov
jne
out
xchg
add
shrb
jmp
ror
xor
sub
cmp
sub
inc
cmpsl
bound
pop
and
cmp
inc
loopne
incb
or
out
adc
popf
mov
mov
sub
lret
xchg
or
sbb
push
insb
sub
xchg
into
in
aaa
repnz
mov
jl
repnz
inc
test
adc
lock
sub
xchg
and
aam
sub
pop
in
int3
inc
mov
imul
pusha
add
mov
repz
cmpsb
jge
shlb
jae
jge
sub
xchg
jmp
das
scas
xchg
repz
dec
subb
aas
outsb
and
sub
cmp
cmpsl
out
daa
popf
int3
ds
fidivs
mov
lcall
cmp
push
xor
mov
clc
testl
mov
mov
into
sbb
int3
lods
pop
sbb
lods
adc
mov
addl
fdivl
push
sbb
ja
sahf
jbe
cli
mov
push
and
fsubs
pop
clc
outsb
cmp
sbb
ret
and
pop
mov
lea
jae
outsb
xor
mov
scas
sub
daa
fcmove
and
pop
int3
or
add
xchg
stos
sub
or
cli
cs
fdiv
xchg
cmp
and
in
insl
popa
add
lods
scas
push
inc
ljmp
cmp
mov
insl
adc
sub
or
or
xchg
lcall
mov
dec
scas
add
inc
push
sbb
and
pop
cmpsb
stc
lret
loope
outsl
mov
xchg
mov
shll
lahf
cmc
xchg
sarl
cs
test
ret
jae
aam
mov
cmpsb
jne,pt
jmp
sahf
enter
cmp
pusha
and
dec
lds
fbld
push
je
ret
sub
icebp
int
jmp
add
jecxz
and
or
lretw
add
push
xor
or
sbb
sbb
insl
mov
push
and
push
fwait
pushf
loop
add
mov
movsb
jg
cli
lahf
test
pop
fisttps
das
loope
js
dec
adc
cmp
jg
push
pop
cs
mov
push
clc
push
push
adc
and
and
mov
sbbl
cld
adc
ljmp
mov
dec
test
xlat
mov
xchg
pusha
lcall
dec
push
mov
cwtl
xchg
sbb
mov
rclb
push
sub
stos
jecxz
cmpsb
loopne
popf
clc
push
push
insl
or
outsb
and
jl
dec
xchg
fiadds
sbb
dec
cmpsb
rcrb
sbb
push
fldenv
sbb
nop
mov
in
out
inc
roll
mov
jae
imulb
xorl
sub
test
aam
sub
cmpsl
ljmp
pop
sbb
scas
lcall
push
dec
mov
adc
cmp
sbb
fldl
mov
jg
loop
stos
jmp
mov
ljmp
popa
leave
sbb
rol
push
leave
sub
adc
and
push
scas
out
xchg
mov
adcl
iret
dec
and
add
adc
cli
in
or
dec
sarb
mov
pop
aas
rcl
daa
fwait
cmp
insb
call
shlb
icebp
mov
sbb
sub
in
add
ss
mov
pop
adc
pop
push
int
mov
mov
movsb
rclb
push
std
jecxz
and
and
xorb
subl
jmp
adc
test
arpl
adc
mov
pop
loopne
cmp
push
inc
lcall
mov
arpl
leave
ret
in
push
jmp
out
lea
lcall
xor
scas
mov
cmp
mov
dec
or
xchg
fsubl
add
shlb
fists
push
pop
lds
lcall
inc
sbb
xlat
push
sbb
xlat
push
mov
movsl
into
pop
lahf
mov
xchg
test
jg
gs
and
add
jmp
sub
cmpsl
inc
sbb
subl
xchg
lods
mov
cmpsb
inc
mov
mov
and
cmp
jle
pop
adc
in
scas
inc
xor
dec
push
push
cmpsl
imul
push
fcompl
shrb
add
je
mov
push
xchg
outsl
xchg
aaa
gs
rcrl
sti
pop
inc
inc
subb
sub
xacquire
push
jne
pop
out
cmpsl
xchg
lahf
bound
sub
ficoms
movsl
jne
mov
clc
out
sbb
ss
dec
adc
xor
pusha
icebp
insl
push
insl
outsb
push
mov
pop
jecxz
xorb
adc
jg
mov
sbb
xor
ss
pop
adc
jnp
jl
xor
imul
push
xor
sti
pushf
test
adc
jle
adc
adc
dec
sbb
mov
insb
lods
inc
call
xchg
shlb
cmp
push
sbb
jno
push
imul
pop
imul
xor
jb
mov
lds
sti
les
inc
shl
mov
movsl
cltd
jg
lret
gs
pop
pop
mov
mov
sbb
push
std
mov
push
fnstcw
hlt
popf
and
and
jge
and
in
pop
or
imul
push
ror
je
jle
das
xor
xchg
push
dec
int
mov
cld
clc
loop
jmp
out
cli
jbe
popf
mov
inc
jl
or
dec
push
cmp
out
arpl
pushw
xor
jns
ljmp
lds
mov
mov
lods
pushf
scas
pop
cld
adc
add
pop
hlt
mov
sbb
int3
pop
mov
and
cmpsl
inc
popa
push
lcall
out
dec
mov
popa
repz
cmp
icebp
jl
xchg
imul
mov
mov
lret
dec
cwtl
int
mov
mov
adcl
push
scas
js
mov
mov
nop
push
mov
push
cmp
inc
cs
pop
mov
rcll
out
and
push
lret
gs
xchg
jne
push
add
lahf
or
add
clc
add
adc
push
xorb
jno
movsb
xor
add
hlt
mov
xor
lods
xlat
insb
fcoms
fwait
loopne
cli
or
jle
inc
mov
fldt
lods
stos
loopne
cltd
das
jmp
int
rolb
xchg
inc
xchg
data16
jns
sub
mov
mov
inc
jl
sahf
imul
sub
jbe
into
popa
cmp
mov
mov
aas
jo
in
seta
imul
sub
test
mov
push
repz
and
push
imul
or
ret
cmp
fbstp
enter
or
lods
cmp
push
add
adc
cmp
dec
enter
xchg
shl
test
rorb
mov
pmaxub
inc
mov
fstl
mov
adc
push
push
lock
arpl
fstpt
cmp
push
fiadds
rcrl
mov
idivl
out
nop
fbld
sub
enter
stos
mov
xchg
js
add
mov
lods
jp,pt
in
aad
cli
xor
in
xor
hlt
jecxz
das
lods
mul
shlb
cmp
out
adc
adc
insl
and
sub
daa
stos
and
jmp
or
call
into
stos
xchg
jns
jmp
adc
into
inc
fildl
or
insl
jl
adc
push
pop
mov
inc
insb
mov
mov
and
mov
idivl
ss
sub
push
cs
scas
push
out
and
pop
xorw
and
dec
es
or
fucomip
gs
add
adc
sub
sub
vpinsrw
xlat
mov
sarl
mov
sub
gs
in
sub
shll
xor
mov
jge
shll
in
jno
mov
or
mov
mov
ret
dec
je
xlat
int
enter
cltd
jecxz
xchg
aas
adc
lahf
lahf
sub
jle
insl
fwait
cmp
sub
data16
les
mov
stos
outsl
and
cmp
vcvtpd2dq
jge
jmp
loop
xor
sbb
sbb
sbb
shr
and
imul
dec
into
ljmp
mov
sahf
xchg
rorb
loopne
es
xor
xor
push
mov
leave
pop
jne
in
insb
outsb
or
into
and
push
xchg
add
xchg
cs
xor
or
mov
mov
imul
mov
inc
shrb
in
enter
mov
shrb
imul
out
push
sub
mov
jns
pop
cltd
add
inc
enter
dec
test
mov
movsl
and
mov
lods
add
sub
sar
inc
std
add
jg
mov
aad
mov
mov
push
pop
push
cmc
fnstsw
mov
add
ret
in
stos
test
pop
fisubs
xor
xchg
iret
sbb
ljmp
leave
and
and
adc
xor
mov
mov
mov
loop
mov
sti
pop
sbb
mov
or
test
inc
cmp
out
jno
mov
add
notb
dec
movsl
adc
lret
and
cld
xor
jno
test
mov
notb
cmp
aas
sub
popa
in
loopne
mov
lcall
xchg
test
mov
out
add
mov
repnz
dec
cli
cli
mov
or
js
enter
out
add
mov
push
push
fnstsw
adc
cmp
adc
stos
jle
mov
and
jns
js
sbb
jno
pop
jp
and
pop
int3
jb
jo
or
scas
xchg
pop
sub
aas
insb
sbb
jecxz
shlb
adc
movsb
repnz
data16
or
dec
and
jne
adc
push
xor
test
lods
jo
push
xor
mov
jbe
pop
lret
clc
or
push
in
adc
adc
les
push
orb
in
push
bound
mov
scas
mull
mov
ljmp
sbb
or
push
in
in
jne
lock
cmp
mov
inc
pop
fadds
ja
push
sbb
aad
pushf
sub
jmp
rclb
or
popw
jp
enter
lods
lods
fwait
popf
leave
repnz
into
cwtl
movsl
cmp
outsb
xor
add
sub
ss
ret
jp
in
cltd
scas
cmp
pop
add
ds
adcb
inc
cmp
push
in
mov
adc
popa
ds
jl
fisttpl
adc
push
xor
ljmp
gs
test
jl
mov
ret
and
cmp
insb
jne
aas
out
dec
mov
push
add
rclb
icebp
das
adc
sbb
stc
adc
mov
movl
aaa
loop
loope
or
dec
ja
mov
fsubrp
sub
sub
fmul
jbe
pop
loopne
pop
dec
mov
in
dec
inc
lea
aam
icebp
pushf
fiadds
mov
rorl
outsl
cmp
hlt
and
dec
adc
movsl
jl
inc
mov
push
xchg
je
std
xchg
aaa
in
cld
stos
cmc
into
sub
sbb
loope
jnp
jge
test
shll
cmp
movsb
gs
pop
xchg
mov
cmp
lahf
sbb
andb
int3
xor
sub
add
bound
nop
or
push
sti
js
sbb
mov
sub
lcall
cli
rcrl
mov
jb
imul
add
arpl
std
push
in
sub
fisubs
out
mov
sbb
lret
xor
jp
in
add
dec
jno
stc
fwait
sub
aad
pop
mov
xor
div
push
arpl
neg
in
xor
daa
cmpsb
les
mov
loop
dec
loope
fwait
and
cli
sbb
mov
mov
xor
inc
movsb
jae
add
push
sbb
lcall
loop
imul
dec
add
xchg
cmp
mov
or
mov
xchg
mov
movsb
iret
rcr
inc
cmp
lret
outsl
mov
iret
push
fdivrs
jno
imul
sub
pop
add
sbb
jb
push
ljmp
imul
sub
js
lret
std
sbb
push
fisubrl
mov
loop
test
lcall
fists
add
xchg
add
imul
adc
lods
cmpsl
jb
dec
lods
insb
scas
fadds
and
lcall
pop
shrl
sbb
pop
or
inc
push
sub
loopne
lret
inc
ficompl
push
std
xchg
mov
and
or
add
jns
push
out
mov
les
fimull
push
or
insl
cmpsb
xlat
aas
pop
and
out
dec
mov
xchg
int3
or
adc
icebp
icebp
cmpsl
loopne
insb
hlt
add
dec
data16
andl
inc
mov
mov
sub
out
lds
dec
std
dec
push
fwait
xlat
lret
or
movsb
mov
xchg
xor
inc
mov
sbb
shr
inc
pop
or
push
je
xchg
hlt
jecxz
stos
or
mov
pop
xor
push
fucomp
xchg
mov
sbb
inc
pop
mov
lret
outsl
in
lret
loope
repz
jmp
jb
dec
mov
cltd
dec
cli
lcall
leavew
xchg
ret
dec
mov
add
dec
mov
enter
sti
js
inc
mov
mov
jae
nop
ljmp
xchg
scas
stos
inc
inc
push
mov
cmp
dec
pop
xchg
test
mov
jmp
and
repnz
or
bound
or
rcl
into
inc
int3
std
icebp
adc
sub
pop
mov
mov
pop
xchg
dec
mov
addr16
fwait
es
cmpsb
sub
jnp
cmp
and
mov
fstpt
or
xchg
xchg
push
scas
mov
inc
xchg
sub
mov
xchg
and
lds
mov
leave
ret
loop
int
push
mov
sbb
pop
neg
push
iret
mov
mov
cmp
mov
pop
movsb
popf
dec
enter
das
jb
lret
sarb
xlat
jae
iret
cmp
data16
incl
aam
aad
dec
les
ss
sbb
adc
into
movsl
mov
pop
pop
push
jmp
mov
xchg
mov
xchg
jae
add
aad
add
arpl
and
dec
cmp
test
jp
adc
mov
stos
out
adc
jne
jmp
push
pop
or
repz
fldt
or
rorl
cwtl
xchg
repz
cmp
inc
pop
dec
add
pop
jle
dec
or
push
fcoml
mov
outsb
jmp
bound
mov
mov
xor
inc
nop
jb
shrl
ja
jmp
mov
jg
pusha
imul
sub
jo
fxch
sub
into
jns
xchg
mov
insl
bound
mov
mov
out
mov
test
adc
mov
push
pop
movsb
sbb
mov
in
repz
sbb
pop
push
shl
jmp
xor
daa
roll
les
xor
shr
and
or
call
adc
loop
cmp
jl
mov
mov
sbb
sub
pusha
sbb
add
sar
mov
inc
dec
out
push
lods
push
mov
inc
shrb
std
sub
dec
cmp
les
mov
outsl
dec
jae
out
movups
dec
add
mov
adc
cmp
cmpsl
cmc
pop
mov
mov
or
jp
dec
dec
and
xor
inc
je
push
xorl
lock
sbb
mov
popf
cmp
push
js
movsl
mov
out
fcomps
inc
pop
imul
mov
xor
in
aad
pop
inc
aad
xchg
dec
sti
sub
ljmp
hlt
dec
dec
test
mov
rcrb
out
popa
jmp
lahf
fistpll
fsubrs
mov
lea
repz
mov
jl
jecxz
and
pop
mov
mov
les
jae
or
mov
data16
pop
fisubs
adc
imulb
pushf
cmp
push
xor
scas
xor
xlat
pusha
dec
pop
xchg
int3
je
mov
jle
imul
adc
mov
and
add
inc
push
aas
sbb
dec
lds
sub
hlt
lahf
jp
cmpsb
popa
dec
stos
sbbb
pop
cwtl
mov
hlt
outsl
fdivrs
push
arpl
das
cli
mov
xorb
mov
sti
and
cs
mov
loope
jp
pop
cmp
pop
inc
jae
push
cld
mov
iret
cs
hlt
sbb
shll
or
inc
push
in
push
lret
jge
jmp
ljmp
mov
pop
cltd
sbb
aas
aam
sti
mov
daa
and
add
test
leave
mov
movsb
and
ja
cmp
sti
mov
sub
jae
mov
jmp
mov
mov
negb
loopne
pop
loope
jbe
mov
imul
add
fisubl
mov
scas
jnp
jecxz
pop
hlt
pop
add
pop
push
lea
push
push
mov
pop
fcoml
mov
and
push
sub
dec
cmp
test
cmc
pop
pop
fiaddl
inc
jge
or
cmc
add
adc
testl
xchg
mov
mov
xchg
xor
insb
and
loop
pop
cmp
inc
inc
dec
popf
cld
mov
xchg
dec
popa
sti
incl
arpl
jnp
adc
mov
pop
mov
ss
iret
loop
cltd
cmpsl
ja
jmp
mov
mov
ret
mov
call
mov
js
cmp
xor
dec
jne
inc
stc
mov
and
jg
cmp
subb
fs
movsl
sbb
lds
nop
sar
in
js
mov
push
mov
shl
outsl
adc
push
fadd
xchg
pop
mov
jecxz
lahf
push
andb
loop
xor
cmc
pop
jo
sbb
dec
dec
ja
clc
in
adc
or
pushf
ret
cwtl
and
ss
scas
daa
in
cld
lds
loopne
lods
mov
fwait
out
repnz
mov
cld
mov
xchg
mov
adc
popa
jo
lret
out
and
lock
clc
adc
flds
jo
pop
mov
sbb
sub
push
pop
pop
or
xor
inc
push
mov
dec
jmp
push
mov
outsl
pop
jecxz
aas
insl
and
adc
pop
shll
popa
mov
nop
sbb
in
jns
movsl
scas
sub
pop
daa
xchg
subb
cmp
lds
das
cmp
js
mov
das
sarl
pusha
in
int
cmc
lret
lret
mov
ror
mov
xchg
cmpb
mov
push
jb
xchg
sub
enter
pop
jbe
xchg
rclb
mov
leave
notb
mov
fistps
xchg
sub
jo
testb
bound
pop
mov
sbb
mov
sub
out
sub
lods
mov
or
mov
lret
lahf
add
iret
into
rorl
lods
out
fistl
shll
adc
mov
inc
in
lea
push
mov
add
scas
adc
mov
cwtl
sahf
sbb
add
popf
out
mov
adc
pop
jno
shll
btc
out
cmp
adc
xchg
jne
cli
ds
cmp
mov
mov
jo
jmp
sbb
xchg
sub
addr16
mov
cli
mov
les
ds
mov
sub
jns
ret
sub
pop
pop
xor
push
mov
les
scas
mov
fwait
push
pop
xchg
sbb
sbb
repz
sbb
inc
std
dec
movsb
lods
sbb
push
andl
test
leave
push
shr
jg
xchg
push
scas
add
or
repnz
cmpsl
jo
mov
cmc
repz
out
dec
fwait
lahf
jp
dec
cmp
adc
adc
std
jae
inc
dec
dec
sbb
je
xchg
or
inc
arpl
mov
ret
sbb
or
adc
sub
sbb
enter
data16
dec
mov
xchg
push
sub
push
and
pop
xor
out
faddl
cs
dec
and
pushf
clc
add
loopne
outsb
pusha
inc
and
pop
push
add
int3
ret
out
std
dec
aad
or
dec
mov
addr16
scas
jle
ds
pop
shll
push
cs
mov
test
pop
out
push
faddl
xchg
mov
seto
jb
sbb
popf
adc
and
idiv
cmp
cmp
test
adc
cmc
add
push
push
mov
and
lods
inc
pop
push
sub
int
dec
mov
inc
rorb
stos
adc
rclb
into
iret
cwtl
adc
adc
into
jle
xchg
jl
dec
adc
jo
jecxz
mov
xor
fldenv
or
lret
jne
push
mov
mov
sub
ffree
add
dec
push
in
push
push
mov
mov
sbb
mov
repz
add
or
pop
jmp
pop
sub
int3
mov
arpl
jle
cmp
out
pushf
sub
into
cmp
popl
jne
cmp
ljmp
ljmp
fwait
clc
adc
mov
jae
pop
inc
cld
xchg
mov
in
into
dec
repz
cmp
mov
push
add
xchg
mov
insb
add
xchg
nop
mov
pop
add
mov
pusha
subl
pop
std
call
jmp
andl
jo
inc
mov
enter
les
push
shl
sbb
and
push
out
xor
in
mov
mov
push
xchg
incl
sti
dec
popf
mov
ret
ljmp
ret
fucomip
rorl
xchg
xor
and
pop
or
mov
jecxz
mov
pop
out
popf
addr16
out
mov
dec
jae
sub
mov
fwait
inc
insl
lahf
mov
inc
or
arpl
sub
pop
add
push
fbstp
movsb
and
les
stos
sub
push
jbe
cmp
mov
lea
jle
inc
mov
mov
jle
jge
mov
jne
sti
es
in
xor
xor
pop
sti
or
push
push
mov
xchg
aad
out
loope
push
out
and
jne
rorl
call
lock
popf
aas
clc
aas
int3
sub
adc
enter
hlt
cli
hlt
cli
pop
lea
movsl
ficomps
jb
test
mov
out
lahf
aam
adc
lcall
and
fistpll
out
fisubl
inc
adc
sbb
cs
lret
imulb
jbe
clc
or
lret
out
xchg
cltd
popf
cmpb
mov
or
push
dec
push
in
rorl
enter
or
push
cmpsl
cwtl
or
pop
in
cs
loopne
and
sub
cld
int
xchg
mov
sarl
add
aam
and
ljmp
popf
jp
mov
and
into
popa
cmp
dec
xchg
add
das
pop
loop
jae
mov
cmp
ds
inc
push
dec
or
cmpsl
mov
mov
test
aam
shlb
fs
ret
insb
icebp
mov
fs
ret
insb
icebp
mov
xchg
das
or
mov
inc
push
or
and
pop
mov
inc
pop
stos
leave
and
inc
inc
std
outsl
sub
fwait
cmpsb
sub
cs
inc
xlat
mov
pop
out
scas
loopne
xchg
xor
mov
and
mov
xor
repnz
xor
aad
push
shl
shr
and
add
jecxz
and
add
dec
adc
dec
popf
adc
imul
mov
jmp
ret
add
mov
daa
jmp
pop
mov
cmp
mov
test
mov
adc
fiaddl
cmp
hlt
lods
dec
out
test
ljmp
inc
add
sbb
push
leave
mov
or
mov
fildl
out
jo
inc
sbb
stos
adc
mov
pop
push
jecxz
jle
sbb
cmp
pop
push
imul
mov
sub
jnp
lods
inc
ret
dec
data16
lds
rep
testl
pop
adc
sbb
mov
iret
mov
and
or
sub
jb
lret
push
scas
sub
imul
lods
dec
leave
pop
lock
subl
fcompl
sbb
adc
fmul
icebp
fsubs
sub
mov
scas
roll
ss
sbb
xor
mov
idivl
les
dec
cmpsb
sarb
fdivs
xor
cmc
loope
xchg
mov
dec
pop
aam
sbbb
mov
add
inc
and
mov
mov
cmpsb
push
xchg
inc
dec
push
pop
xchg
cmpl
mov
xor
sub
cmp
les
shrb
sbb
or
out
inc
cmpsb
lret
push
insl
lcall
pop
dec
dec
insb
loopne
inc
sbb
xor
push
subb
inc
inc
jmp
dec
lds
sbb
lods
and
lcall
xchg
into
jo
xor
inc
outsl
out
popf
mov
scas
mov
jae
in
aas
xchg
jb
out
clc
add
or
dec
sub
and
cmp
cmpsl
inc
push
leave
dec
outsb
loop
mov
dec
pop
add
faddp
add
pop
mov
cmp
ja
sbb
sub
mov
or
bound
add
das
sub
mov
in
xchg
popa
repz
jbe
dec
xorl
xor
iret
cmp
fs
mov
pop
or
dec
mov
jle
addps
inc
push
mov
lods
pop
push
in
paddsb
mov
and
mov
dec
popf
cld
rcrb
jmp
test
jb
cwtl
fs
loopne
pop
movsb
xchg
clc
push
pusha
cs
sbb
shlb
outsl
cwtl
call
cmp
add
push
enter
loope
mov
scas
cmc
je
test
scas
lods
mov
loope
test
scas
lods
mov
loope
test
scas
lods
mov
loope
test
scas
lods
mov
loope
test
scas
lods
mov
loope
test
scas
lods
mov
loope
test
scas
lods
mov
loope
test
scas
lods
mov
loope
test
scas
lods
mov
inc
add
xchg
int3
jbe
call
jl
xchg
sub
pop
mov
pusha
stc
mov
mov
jl
inc
xchg
xchg
jb
sti
imul
je
cld
pop
pop
mov
inc
int3
add
std
ret
xchg
sbb
outsb
dec
imul
in
jmp
cli
cli
dec
xchg
jbe
lcall
int
arpl
xchg
popf
mov
scas
mov
aas
mov
mov
mov
add
sub
out
dec
ljmp
xchg
mov
or
fisttpl
inc
pushf
outsb
mov
xchg
sbb
dec
adc
nop
mov
cmp
outsb
out
pop
sbb
shll
mov
lods
jp
jae
lahf
adc
inc
test
or
mov
xorl
clc
idivb
leave
adc
in
push
inc
sarb
dec
lock
cmp
sahf
or
mov
xchg
add
movsl
xchg
into
mov
push
cmpsl
sub
or
sbb
jae
popl
imul
fbld
ret
and
incb
xchg
dec
xor
pusha
in
jae
dec
test
add
lret
xor
pop
negb
sub
cld
lcall
adc
outsl
aas
cwtl
sahf
inc
mov
rcrl
ret
divl
aas
daa
add
cmpsl
mov
fidivrs
fcomp
ret
out
fdivl
ss
and
cmp
fimuls
push
fisubrl
movsl
out
rcr
add
sarb
adc
movsb
mov
aam
inc
ds
dec
xchg
outsb
das
mov
push
lahf
adc
jmp
subb
clc
add
mov
arpl
out
sbb
xchg
rep
cwtl
in
push
outsb
pop
idivb
rep
sbb
enter
push
sbb
lods
jnp
sbb
adc
inc
lds
cmpsl
iret
cmp
adc
outsb
push
sti
testl
jnp
and
pop
cmp
repnz
adc
adcb
xchg
hlt
pop
or
rcrb
call
pop
cltd
jo
and
jmp
jmp
test
test
cmp
dec
stos
lds
xchg
fbstp
sbb
outsb
in
ret
call
jae
add
mov
iret
cmp
pop
fadds
popf
and
push
mov
ror
xchg
int3
rcr
mov
jno
cwtl
mov
lcall
movsl
call
cmp
jmp
repz
xchg
jnp
dec
fstl
push
jg
inc
rclb
imul
cmp
daa
sub
inc
sbb
outsb
jle
pop
sbb
orl
cmc
or
cmpsb
adc
pop
sti
or
mov
adc
ficompl
js
loope
dec
xlat
cmp
cmp
xchg
aad
pop
les
cltd
movsl
les
les
and
push
xchg
es
inc
cmp
into
dec
or
stc
ret
in
push
jb
cmp
inc
jne
mov
divb
xchg
mov
adc
stos
push
xor
adc
mov
jmp
inc
inc
sbb
sub
fistpll
cltd
pop
push
or
pop
cmpsl
mov
popf
jbe
aas
enter
push
js
or
sub
setbe
ret
jne
adc
or
sub
dec
jl
cmp
outsl
fsubr
jg
int3
insb
inc
lret
dec
call
mov
push
es
xchg
add
push
out
je
xchg
push
jecxz
jmp
mov
add
mov
mov
dec
in
popl
and
mov
lds
pusha
jecxz
mov
leave
push
push
mov
daa
clc
xchg
mov
das
sbb
std
mov
and
cmp
aam
mov
rcll
cli
loop
xchg
xchg
sub
mov
cmpsb
lret
mov
fimuls
scas
ljmp
jg
add
jl
or
ficoml
mov
std
jo
sub
cmp
out
int3
add
mov
fbld
in
inc
cmp
or
xchg
xor
out
jl
lds
clc
std
in
inc
aad
cwtl
into
mov
mov
jmp
outsl
cmp
mov
mov
dec
add
repnz
andb
sub
dec
xchg
dec
rclb
cltd
xchg
or
fs
in
cld
das
dec
sub
insl
push
int
add
repnz
test
jle
ss
leave
fstpt
movsl
jp
pop
mov
push
sahf
in
mov
pop
pop
dec
hlt
cli
inc
lods
xlat
movsl
xlat
sbb
jno
ret
into
and
adc
mov
jne
or
sub
stos
cli
cmc
add
cs
push
lds
mov
mov
inc
popa
imul
fimuls
shrb
push
mov
sbb
mov
xchg
cld
jg
cwtl
cmp
xchg
pop
pop
jle
mov
mov
cmpsl
je
aaa
cmp
dec
lock
mov
mov
cmp
lret
mov
push
dec
mov
or
shll
shlb
mov
push
es
mov
mov
pop
popa
pop
xchg
repnz
rorl
hlt
data16
jb
frstor
lcall
xchg
jne
in
cltd
incl
js
xor
movsb
js
enter
andl
leave
push
out
xchg
pushf
insb
leave
into
shlb
push
inc
sub
xor
arpl
cmp
mov
das
fisubs
adc
lock
mov
pop
sub
push
in
xchg
movb
mov
or
rolb
bnd
aas
movsb
sbb
das
ds
add
shlb
mov
jg
sti
xor
and
fdivrs
popf
jno
iret
xchg
lock
aas
pusha
push
test
in
daa
shlb
lds
jno
data16
mov
xor
repz
dec
stos
jl
movsl
or
movsl
sbbl
lahf
add
out
xor
cmp
cmc
xor
in
jo
pop
daa
push
out
test
pop
dec
inc
push
jnp
push
repz
sarb
mov
add
shlb
xor
xor
test
cmpsl
cmp
loope
or
add
repz
aad
outsb
repz
das
add
ret
xor
mov
adc
sub
push
movsl
stos
lock
mov
jp
inc
mov
lret
iret
and
das
pop
mov
fnstenv
pop
mov
dec
jb
movsl
ficoms
subl
popa
in
in
pop
ret
cmpsl
inc
jb
clc
inc
data16
xchg
jo
mov
repz
mov
push
mov
out
into
dec
cmp
aaa
xor
inc
xor
ret
pusha
orb
xor
xchg
pushf
xchg
jmp
shlb
cmp
je
test
repz
in
sub
lea
aas
out
mov
fstpt
cs
mov
cmp
icebp
fimull
or
scas
mov
cmpsb
inc
pop
stos
pusha
mov
pop
call
xchg
ja
adc
imul
cmpsb
out
fisttps
sahf
out
sbb
mov
ret
pop
jbe
ljmp
xor
sub
stos
jmp
cmp
cmpsl
jl
jmp
push
ret
mov
pop
js
mov
cmp
popf
xor
mov
xchg
aad
popa
mov
leave
mov
aaa
out
loope
aaa
push
cltd
loop
repz
mov
adc
insl
fisubrs
fs
outsb
aaa
out
xor
inc
test
inc
roll
mov
insl
notl
jae
gs
sub
xchg
adc
sub
scas
addr16
sbb
pop
sahf
jnp
in
cmp
sbb
or
mov
sbbb
jmp
sarl
fidivs
jnp
sbb
dec
outsb
and
jmp
or
xchg
dec
in
push
cwtl
cmp
lods
outsl
into
fsubl
mov
push
bound
and
sbb
pop
sbb
mov
push
std
sbb
in
add
cltd
push
mov
pop
push
push
out
jno
das
mov
add
test
fs
jecxz
aas
pop
mov
xchg
ss
cwtl
fs
mov
ljmp
addr16
sub
inc
pop
xchg
arpl
fwait
mov
xorb
push
sub
je
xor
repz
add
leave
pusha
pop
jno
or
mov
ficoms
push
xchg
push
psubq
addr16
xor
js
jae
lcall
fbstp
dec
mov
pop
les
pop
mov
mov
in
testl
push
jne
xor
aaa
bound
xor
je
movsl
adc
mov
xchg
daa
mov
pop
or
fmull
jno,pn
fdivs
testl
adc
les
enter
loop
inc
fs
xchg
add
addr16
mov
popf
mov
adc
divl
sbb
mov
xchg
lret
mov
dec
xor
iret
mov
es
imul
mov
lret
push
adc
enter
sbb
and
jno
in
jno
cmpsb
call
xchg
pop
loopne
jbe
or
cli
xchg
push
arpl
mov
cmp
and
out
push
push
or
mov
xchg
cmp
or
repnz
push
incb
test
mov
mov
mov
push
inc
icebp
push
xor
xchg
inc
dec
xchg
push
inc
xchg
sub
cs
cmp
jecxz
pop
pop
xchg
mov
sti
ljmp
lods
jae
add
jae
push
jmp
mov
lret
pop
jo
loopne
adc
mov
push
sub
and
sub
adc
arpl
pop
sub
mov
sarb
xor
pop
cmc
mov
je
mov
ja
pusha
ja
sti
dec
mov
xor
xchg
in
test
inc
dec
push
add
push
mov
mov
fs
or
mov
test
jae
ljmp
icebp
pop
iret
pop
adc
jp
dec
mov
add
jnp
sub
cwtl
adc
jbe
mov
rcrb
aas
inc
nop
icebp
lcall
scas
mov
pushf
popl
shll
mov
jg
mov
ljmp
mov
stos
xchg
pushf
sub
inc
movsl
stos
jo
dec
cltd
sahf
add
push
sub
test
sbb
clc
push
adcb
in
test
test
push
int
insl
sub
fdivs
dec
sbb
data16
jmp
les
sub
stos
sub
add
jmp
outsl
adc
add
fdivrs
and
jp
inc
xchg
jo
scas
xor
xor
testl
shll
cmp
dec
jge
in
mov
test
in
or
das
iret
insb
xchg
in
orl
xchg
cwtl
leave
inc
xor
mov
mov
loop
xor
ds
fisubrl
add
in
in
mov
cltd
pop
cwtl
fistpll
std
mov
ja
mov
dec
mov
ret
xor
inc
int3
clc
xchg
aaa
pop
outsb
mov
mov
jl
stc
mov
adc
dec
cld
ret
dec
jns
pushf
scas
outsl
pop
lds
sar
arpl
jmp
sbb
and
or
push
xlat
ss
fmull
pmaddwd
cmp
cmpsl
outsb
and
cmpsb
test
or
loope
gs
mov
push
pop
mov
mov
popf
mov
jne
mov
gs
xchg
vcvtps2pd
mov
cmp
std
loopne
add
xor
in
mov
xchg
xchg
test
push
add
cld
dec
aaa
jmp
mov
jp
insb
dec
or
or
int3
mov
xor
inc
sub
jmp
lds
aaa
sbb
scas
pushf
xchg
cmp
pop
cmc
fwait
js
leave
add
stos
push
addl
orl
lret
cli
jae
lock
aad
cli
cmp
es
mov
ret
xor
sub
sub
inc
xor
pop
fstp
dec
pusha
jb
mov
push
add
push
sbb
or
push
jg
add
cli
not
mov
arpl
mov
jge
pop
sbb
idivb
add
incb
movsl
mov
shlb
dec
xchg
xchg
add
dec
push
and
sub
rsm
push
in
and
inc
mov
scas
adc
push
repnz
cmp
std
or
imul
lcall
and
jb
test
jno
jmp
sbb
ss
xor
or
into
xchg
dec
inc
pop
rcrl
xchg
sbb
jmp
add
sub
cmp
xchg
push
rorb
cmp
cmp
mov
xchg
jae
std
les
lcall
out
mov
pop
pop
movsb
sub
push
aaa
mov
clc
jl
lret
mov
aas
lcall
pop
addr16
xor
das
sbb
and
push
sarl
adc
nop
cmp
and
push
call
mov
xchg
inc
enter
insl
rcr
push
or
sti
lret
addr16
mull
imul
icebp
mov
mov
pop
testb
out
pop
loop
dec
xor
add
pop
mov
sbb
xor
pop
push
pop
jb
ja
jb
repnz
xorl
out
push
in
shrl
rcl
popa
stos
test
fisubs
daa
cmpsl
inc
call
lret
ds
pop
sub
jbe
adc
push
fldenv
fprem1
movsl
pop
idivl
mov
mov
sub
or
pop
not
jns
jle
outsb
jnp
or
jmp
imul
div
adcb
and
inc
mov
mov
notl
aam
bound
dec
outsl
leave
ficoms
ds
sub
xchg
mov
shr
push
dec
lea
jbe
mov
cmpsl
iret
lock
mov
js
roll
mov
out
cmp
adc
ja
mov
loope
or
mov
fiadds
loopne
cmc
xchg
sub
add
mov
ret
lea
fucom
mov
das
push
sbb
push
push
and
lahf
push
xor
pop
push
sbb
fdivrp
out
mov
das
and
pop
adc
das
pop
fcomi
dec
or
jb
mov
leave
imul
fstp
std
add
adc
shll
mov
mov
push
sub
popa
stos
cmp
cli
dec
xchg
cs
and
xchg
scas
jg
xor
mov
mov
loope
into
out
fdivrl
or
push
loopne
xchg
add
add
stc
mov
xor
adc
mov
push
negb
adc
adc
cmpsb
jbe
sub
push
je
fisubrs
aas
jmp
lgs
lods
jmp
fdiv
int
fdivrp
andb
xchg
imul
pop
subl
stos
das
test
fcomip
repnz
shl
or
push
scas
mov
and
push
xor
mov
andl
addb
je
or
xchg
add
lret
iret
addr16
xlat
sbb
jecxz
push
and
cmpb
lahf
cmp
add
cltd
js
repnz
push
mov
rcrl
orl
enter
sbb
fcomi
stc
sub
inc
sub
bound
shlb
out
sarb
xchg
imul
bound
mov
jbe
mov
mov
or
in
mov
enter
jl
sub
sahf
sub
cmp
xchg
dec
push
adc
idivl
sbb
imul
iret
shrb
in
leave
inc
ds
xchg
push
stc
jno
rcrl
xchg
add
cmp
pusha
mov
jg
jne
add
jge
add
repnz
ja
sub
jecxz
cmc
mov
dec
xlat
or
pop
pop
mov
gs
repnz
sub
mov
xchg
lds
dec
adcl
adc
push
faddl
into
dec
push
mov
xorb
es
or
cld
in
sub
push
aam
or
fistl
popf
or
xor
rcl
fisttpl
ja
adc
xor
insb
sbb
sbb
test
out
mov
pop
dec
outsl
jecxz
les
enter
sti
lock
sti
fdivl
xchg
sbb
cli
add
lcall
push
sub
aam
mov
addr16
push
data16
dec
lds
iret
push
loopne
fidivrl
stos
shrb
xor
test
fwait
pop
jge
mov
xorb
popf
xchg
xor
jmp
arpl
stos
popa
fdivrl
adc
mov
cmp
imul
lock
pop
inc
dec
in
cmp
fbstp
and
xchg
and
jnp
mov
dec
movsb
or
leave
nop
sbb
xchg
leave
xchg
fists
xchg
jle
cwtl
daa
push
pop
and
mov
pusha
or
inc
incb
pop
test
push
dec
push
pop
movsl
push
dec
push
inc
xchg
int
lcall
into
decl
fdivrs
cmp
std
lods
lcall
std
sub
loop
jg
pop
xchg
push
inc
xor
lret
xchg
push
mull
lds
lret
cli
dec
jge
lcall
jl
dec
out
adc
cmp
lock
enter
jne
popa
jp
out
outsl
or
mov
xlat
sahf
sub
ljmp
mov
fstp
cld
mov
xchg
sbb
fildl
mov
jb
mov
push
lods
shrb
mov
stos
in
xchg
rcll
sub
inc
push
and
andl
mov
xlat
int3
arpl
clc
dec
inc
xor
adc
pop
stos
adc
das
mov
ds
imulb
pusha
je
and
or
jns
aam
int3
xor
ja
popf
jae
imul
stos
cmc
jne
mov
jb
xchg
mov
and
lods
in
enter
push
adc
leave
jl
call
adc
pop
mov
pop
jno
rolb
sbb
xchg
icebp
lret
and
inc
enter
lods
or
inc
incb
push
adc
insb
push
lahf
lret
mov
es
jae
xchg
mov
jp
pop
xchg
imul
add
pop
dec
out
xlat
ljmp
inc
pop
lods
xor
int
mov
mov
xchg
das
imul
sub
inc
fs
xchg
mov
add
in
test
test
push
cli
fs
sahf
mov
inc
or
addr16
jb
add
es
stc
xor
and
fs
or
cmp
add
xorb
rclb
jno
stc
movsl
push
jo
pushf
cmpsl
inc
je
sti
cmp
cmc
cwtl
inc
and
sub
xor
sub
cli
clc
mov
repz
mov
mov
dec
out
xchg
les
imul
idivl
int3
xchg
push
pop
sbb
mov
add
dec
clc
push
mov
push
or
ds
loopne
inc
js
jns
adc
pop
ret
cmp
nop
inc
pop
dec
xor
repnz
xlat
or
sbb
or
push
pushf
mov
or
xor
or
sub
movsb
dec
sahf
ds
out
sahf
mov
sub
jnp
loop
pushf
enter
lret
int3
mov
push
mov
pushf
and
pop
dec
mov
xor
sbb
xchg
in
and
or
and
sbb
mov
push
pop
lock
xchg
ljmp
pop
and
sbb
ss
xor
stos
mov
lea
flds
movsb
aad
mov
jne
cmp
xchg
xchg
pushf
push
xchg
push
mov
mov
and
pop
enter
scas
jg
sub
in
subb
popa
xchg
push
or
aas
notl
aas
jo
lds
cmpsb
adc
call
leave
pop
mov
pop
push
stos
xchg
clc
xor
push
jno
lahf
jno
jmp
ds
out
dec
into
test
or
daa
xlat
daa
push
clc
arpl
int3
cmpsl
and
repnz
pop
xchg
in
mov
fbstp
sbb
sub
outsb
xchg
movsb
dec
mov
fildll
mov
andnps
mov
and
push
mov
push
push
outsb
adc
les
mov
fs
push
jecxz
jmp
add
gs
out
scas
mov
push
pop
pop
adc
out
scas
jge
in
scas
mov
add
sbb
das
lcall
mov
cmp
iret
sti
negb
inc
jle
test
mov
call
popf
jg
in
rcrl
incl
out
sahf
inc
mov
insb
hlt
cmpl
out
sarb
insb
and
inc
xor
wbinvd
movsl
pop
repnz
sbbb
out
xor
out
pop
adc
rcl
mov
push
add
in
and
in
cmp
sbb
mull
add
jb
ret
ret
insb
sbb
add
cld
mov
push
xchg
insb
or
aaa
push
mov
push
cmp
addb
gs
xchg
iret
mov
gs
mov
push
rol
lds
xlat
outsb
pop
test
dec
lcall
cmc
movsl
in
or
ja
push
jle
ljmp
loopne
mov
lcall
push
mov
sarb
push
fucomip
jge
fmull
xchg
cmp
loop
leave
mov
aas
insl
cwtl
xchg
xchg
dec
int3
or
insb
repz
outsl
mov
ret
mov
add
and
jnp
dec
xchg
sbb
add
sti
cmpsl
jns
mov
lds
jmp
sub
sbbl
adc
aas
stos
sbb
insl
imull
sbb
sti
ret
sbb
sbb
fidivrs
jnp
dec
dec
mov
out
jbe
mov
sbb
out
js
jnp
and
mov
push
sbb
xchg
sbb
lds
or
cmpl
pop
pushf
rclb
mov
je
add
stos
pushf
xchg
sbb
jnp
aam
cwtl
xor
or
fwait
outsl
clc
mov
es
ss
xchg
xchg
movsl
sub
jbe
pop
jmp
jmp
push
dec
stos
stos
out
sub
jp
xor
data16
adc
xlat
test
lods
pop
imul
cmpsb
call
cmp
in
jmp
leave
iret
jl
jno
jnp
dec
push
sbb
mov
xchg
stos
test
imul
fimuls
xchg
test
repnz
leave
mov
xor
es
stos
jne
cmp
ja
cmp
pop
mov
mov
enter
cmpsl
inc
clc
cmpl
jo
leave
and
pop
cltd
aad
ficoml
ret
add
loopne
dec
xchg
or
shl
test
push
inc
xlat
flds
rcll
test
jp
adc
decb
dec
in
dec
iret
sbb
adcl
pop
lea
inc
repz
or
mov
test
xchg
push
and
outsl
movsl
loopne
mov
xor
aam
mov
dec
mov
movsb
in
xor
mov
cld
mulb
jbe
xchg
pop
xchg
fnsave
add
cmp
cmp
jb
jns
cld
adc
sbb
mov
cld
mov
scas
scas
mov
cmp
daa
jo
sbb
pushf
cmpsb
scas
and
aas
int3
subb
stos
push
fisttps
les
add
inc
adc
ds
pop
mov
sahf
xor
repz
xchg
jmp
cld
sub
push
or
cmp
mov
in
nop
jno
ret
lods
adc
jnp
fisubrl
push
xchg
cltd
xor
mov
out
mov
sub
dec
xchg
and
stos
jae
imul
sbb
push
mov
fwait
std
adc
sbb
xlat
sbb
adc
add
xor
int
pop
sahf
sbb
stos
inc
in
int3
add
repnz
je
jp
fs
xor
repnz
mov
fdivs
bound
int
push
aam
aad
and
xchg
dec
cmpsl
mov
arpl
or
push
jle
popa
jmp
adc
lea
sbb
and
call
daa
inc
inc
int3
aaa
sbb
mov
rolb
jnp
xchg
out
pop
sbb
add
jnp
sbb
xchg
fisttps
cmpsl
cmp
negl
pop
popf
fdivs
stc
pusha
in
cltd
sbb
sbb
and
fwait
test
in
bound
sarb
dec
jbe
jle
mov
dec
repnz
jns
nop
jae
mov
pop
hlt
inc
lods
movsb
out
ret
lds
push
mov
jns
jns
out
push
jge
mov
mov
js
cmp
xchg
das
mov
stos
cmp
out
test
in
push
push
add
push
ret
mov
and
pop
dec
mov
mov
gs
stos
in
jne
loop
into
xor
inc
rcrb
adc
inc
push
ja
push
xor
cmpsb
shll
fdivrl
mov
sbb
iret
inc
sbb
sbb
mov
fdivs
dec
test
daa
cwtl
scas
fwait
pop
push
out
add
sbb
gs
cwtl
insl
dec
outsb
mov
insl
xlat
jo
outsb
mov
stos
mov
add
jb
into
cltd
push
jne
jns
cmpsb
into
add
fwait
stos
cwtl
add
paddusb
out
mov
cwtl
push
insl
fdivl
adc
xchg
inc
jge
cwtl
pop
xor
inc
sbb
scas
jmp
cwtl
les
xor
shr
inc
mov
cmpsl
popf
sub
push
test
cmc
sub
lcall
lds
ror
out
rcrl
fld
jae
mov
adc
xchg
movsl
mov
push
and
jge
add
jno
leave
cmpsb
leave
repz
imul
test
bound
inc
pop
mov
or
in
test
inc
add
cmpsl
mov
cmpsl
mov
jo
out
in
repnz
pop
cmp
push
cmp
fcoms
mov
pop
movl
cmp
mov
mov
push
leave
mov
jmp
and
push
mov
push
shrl
add
ror
or
mov
loop
mov
xor
xor
mov
mov
ja
mov
jo
mov
outsl
orb
or
inc
insl
xchg
inc
das
xchg
mov
sub
fidivrs
ror
jle
push
sub
sbb
jnp
mov
loopne
dec
stos
xchg
repnz
pop
mov
adcl
cmp
dec
aad
cmp
hlt
sub
movsbl
sbb
std
mov
outsb
mov
inc
in
push
mov
es
xchg
pusha
jp
fs
or
orl
inc
mov
loope
xor
stos
out
inc
iret
repz
cltd
pop
xor
mov
mov
bound
and
imul
jge
xchg
adc
iret
cmp
mov
ret
repnz
push
jno
inc
lea
dec
cwtl
cmpsb
xchg
loope
std
add
lods
fildl
mov
insl
dec
and
dec
jbe
sahf
popf
lcall
ret
aam
sahf
fwait
mov
push
xchg
xchg
or
mov
dec
pop
inc
andb
pop
sti
fs
and
jle
cltd
adcb
pusha
jae
hlt
cmc
mov
mov
add
std
cmp
cmp
xor
mov
mov
pop
cmp
ret
dec
jl
xchg
xchg
arpl
cmpsl
arpl
cld
jp
dec
or
dec
inc
push
out
ja
mov
cs
pop
fsubrs
cmp
fst
clc
ljmp
mov
jo
inc
fsubl
test
jb
popa
sbb
ret
cmc
pop
add
inc
mov
lods
test
mov
shrl
pop
iret
inc
pop
jae
ret
and
cmp
lea
adc
in
mov
test
sub
call
js
imul
arpl
adc
xchg
jb
test
addr16
inc
lret
and
ja
jl
ja
push
and
cli
test
adc
add
int3
pop
test
lret
pop
cwtl
insl
mov
out
sbb
sub
ds
lds
dec
fldenv
push
add
push
es
aaa
call
jp
movsb
adc
lcall
or
dec
movsl
sbb
or
add
adc
xlat
sar
pop
inc
add
pop
hlt
stos
out
hlt
lock
iret
sti
mov
mov
xor
shrb
mov
add
ljmp
imulb
xchg
jne
loope
stos
mov
push
mov
cmp
gs
repz
shlb
push
add
cmp
idiv
mov
rcrb
xchg
cmpsl
cmpsl
mov
sahf
sub
test
add
mov
dec
jg
or
xor
adc
lock
push
inc
lock
sub
and
jge
dec
mov
out
adc
sti
lods
and
cmpsb
test
fbstp
pop
jo
loope
xchg
pop
lahf
or
insl
push
push
and
ds
lret
int
pop
test
pop
aaa
jae
mov
out
push
sbbl
pop
mov
outsl
nop
std
dec
nop
xchg
inc
mov
pop
lock
out
ret
xorl
push
aam
cmpsb
or
ret
rcll
aad
inc
movlps
hlt
arpl
cmc
sub
sub
xchg
jae
fldt
fwait
in
icebp
ror
add
jnp
sub
jb
andl
andl
sub
mov
mov
adc
jae
xorl
jnp
pop
ds
adc
scas
ret
popa
mov
mov
pop
adc
jno
push
jl
adc
int3
mov
js
cmp
mov
pop
or
out
adc
pop
mov
mov
int
or
mov
mov
enter
jmp
mov
xchg
movsl
xor
xchg
sub
pop
das
ljmp
push
adc
xlat
aad
rorl
inc
and
stos
fs
xor
mov
xor
inc
outsb
outsl
pop
mov
push
mov
daa
push
out
roll
rcl
ret
shll
xchg
push
xchg
negb
in
dec
mov
in
jb
xor
sbb
icebp
pop
out
sbb
repnz
push
ja
fists
fwait
push
sbb
inc
pop
mov
sbb
or
mov
or
adc
sbb
or
pop
and
lcall
stos
aaa
xor
push
roll
rcl
aas
mov
rcr
xor
mov
imul
lods
nop
movsb
hlt
sbb
loope
out
fcoml
stos
adc
movsb
inc
sub
testb
fmull
xchg
hlt
and
jns
adc
cwtl
ds
stc
idivl
jnp
daa
xchg
ja
push
imul
cmpsb
xchg
loope
js
inc
or
xor
fs
fwait
mov
popa
loopne
mov
mov
negl
adc
push
cmp
je
aam
cmp
inc
cltd
mov
pusha
sub
sarl
dec
mov
sub
jp
rcl
jge
jmp
inc
and
loopne
std
push
pop
inc
sub
inc
mov
xlat
cmp
aaa
mov
dec
mov
sub
ja
aas
dec
jno
out
xlat
mov
ret
inc
jno
pop
push
push
cmpsl
std
cs
pop
in
test
adc
mov
aaa
push
pop
cld
mulb
push
cld
lock
repnz
ljmp
and
movsb
stc
adc
rcr
xchg
insb
add
mov
adc
add
jns
xchg
mov
and
outsb
mov
cmc
fcmovnu
out
or
lock
push
mov
insb
and
call
loope
imul
out
jae
inc
cwtl
outsl
mov
es
fsubrl
enter
loopne
imul
xchg
fldenv
sbb
cmp
lds
insb
outsl
jge
in
ds
arpl
lahf
and
mov
insb
pop
and
add
xchg
hlt
aas
push
ljmp
popa
or
inc
and
mov
push
push
cld
daa
push
jo
pushf
inc
or
incl
add
add
lock
insl
in
mov
or
fdivrl
mov
aaa
xchg
out
movsb
push
cld
add
mov
popf
dec
xchg
test
in
mov
cld
in
mov
cmc
daa
int3
ds
nop
int
adc
jmp
xlat
inc
mov
aam
mov
test
cmc
lahf
mov
cmp
rorb
push
js
sbb
scas
xchg
repnz
in
les
cli
cmc
cmp
and
sahf
fstpl
xchg
sub
sbb
add
sahf
xchg
in
xor
sub
jnp
lcall
add
pop
mov
push
push
imul
loopne
mov
add
shl
xchg
jno
pop
fadds
dec
aaa
sbb
fwait
xchg
pop
adc
aam
adc
or
icebp
imul
lods
xchg
push
sbb
outsb
xor
dec
cmp
pop
int3
fwait
xchg
fisttpl
aas
cmc
mov
int
xor
cwtl
repnz
xchg
je
xchg
sti
negl
gs
stos
xchg
push
adc
jno,pt
xor
cs
pusha
fcoms
or
rcl
mov
mov
in
in
push
mov
fnstcw
ss
push
dec
out
hlt
mov
stos
lods
lods
loopne
icebp
repnz
aas
hlt
push
inc
lret
push
sub
adc
add
lcall
aas
mov
jecxz
xchg
pusha
pusha
or
mov
push
jnp
jl
stos
hlt
dec
nop
sbb
jp
std
and
xchg
in
in
lret
movsb
mov
popa
scas
imul
pop
or
xor
addr16
lret
and
mov
mov
mov
or
sahf
cmp
cmp
jmp
sub
cld
xchg
xlat
sub
ret
dec
ja
movsb
jns
sub
push
pushf
popa
push
add
aam
mov
dec
in
loope
and
addb
or
int3
clc
lods
push
repz
sub
push
pop
cmc
lods
mov
inc
pushf
pushf
pop
test
test
mov
push
stos
stc
pop
inc
push
adc
arpl
pop
inc
sub
push
sub
mov
pop
fst
jo
mov
add
cmc
dec
dec
scas
popf
xchg
test
inc
sbb
xchg
iret
xchg
and
jp
lock
incl
push
mov
out
movsl
sahf
xchg
inc
nop
pop
pop
into
pop
nop
loopne
insb
inc
sahf
into
xchg
int3
clc
aas
stos
cmp
stc
pushf
sub
pop
inc
cmp
dec
push
pop
cmpsl
ja
dec
mov
imul
movsb
mov
mov
pop
fidivl
sbb
addb
int3
xchg
mov
mov
jmp
mov
or
xchg
lahf
ret
add
pop
add
out
dec
cld
dec
xor
inc
pop
dec
push
mov
pop
lds
loop
jno
leave
add
cwtl
push
int
sbbb
mov
fistl
lea
jne
xchg
loopne
jl
cmp
and
jecxz
icebp
in
leave
or
pop
add
das
repz
outsb
andl
sub
add
xor
arpl
sub
scas
push
gs
in
hlt
nop
mov
int
jle
std
mov
lahf
jge
add
and
jp
push
mov
xlat
shlb
sub
jo
mov
je
sbb
mov
push
or
push
mov
int3
scas
jle
mov
repnz
ror
dec
jecxz
sub
stos
dec
dec
mov
movsb
dec
jl
dec
jne
loop
or
cmp
cli
jb
xorb
push
rcll
xchg
adc
ljmp
cld
add
adc
loopne
inc
sbb
sbb
ror
push
arpl
enter
xchg
jle
jbe
scas
stc
sub
add
dec
fwait
aas
mov
xchg
in
xor
mov
clc
daa
leave
nop
mov
jae
imul
addb
cli
roll
or
add
test
adc
lock
rcl
sub
mov
fwait
aad
jle
lret
jnp
repz
sbb
xchg
cmp
in
push
sub
jge
sub
xchg
add
mov
lods
ficomps
jmp
and
push
loopne
ret
lcall
xorb
out
xchg
jne
pop
push
xor
pop
xor
fincstp
sti
sub
adc
sahf
sbb
mov
fldcw
cmpsb
daa
jb
and
adc
dec
jp
pusha
dec
add
sub
lcall
gs
fcoms
test
mov
mov
iret
sub
mov
ja
fucomi
insl
add
dec
fistpll
xchg
fdivr
mov
xchg
imul
sub
jle
pop
mov
and
cs
mov
popl
iret
lods
pusha
sbb
dec
outsl
insl
push
and
test
ljmp
push
mov
aad
mov
ss
cmp
pop
outsb
push
mov
push
jns
push
shr
out
repz
dec
add
fmull
mov
pop
sub
xlat
data16
js
out
cmp
das
dec
imul
cli
mov
lods
pop
idiv
adc
sub
nop
sarl
mov
pop
pop
adc
popa
mov
and
sarb
in
out
inc
or
aam
add
add
cmp
xchg
sub
jo
or
adc
ljmp
lods
adc
xor
mov
and
shrl
out
mov
in
popa
dec
bound
pushf
inc
pop
lock
or
enter
sbb
push
cwtl
sbb
insl
mov
mov
aaa
clc
jge
adc
int3
ret
dec
imul
and
and
lods
std
mov
fdivl
lods
push
dec
and
cmp
into
jae
inc
mov
jb
jae
push
dec
imul
push
or
ja
repnz
jnp,pn
add
popf
cld
fisttpll
call
leave
jae
push
xor
das
sub
add
idivl
fs
sti
add
xlat
push
xchg
jnp
push
adc
mov
and
mov
lock
jne
orb
sub
loope
dec
loopne
mov
sub
arpl
adc
jo
and
dec
imul
cltd
xlat
add
in
cwtl
dec
xchg
push
and
or
enter
int3
jge
push
fbstp
xchg
mov
xchg
popf
push
xor
mov
cltd
movsl
pop
mov
sbb
jl
lea
nop
js
xchg
mov
jne
cld
xchg
arpl
adc
or
je
mov
movsl
test
setnp
push
shlb
enter
rolb
mov
add
lret
inc
dec
test
and
ja
lret
cli
divl
cmp
cmpb
xor
pop
adc
lahf
pop
cmp
ja
inc
orl
xchg
xorb
add
fcoms
testl
outsb
sbb
pop
sub
mov
in
jae
jbe
cmp
adc
xchg
repnz
jmp
push
loop
data16
sub
add
xchg
pop
pop
sbb
out
out
mov
jae
loop
repz
adc
lods
fcoms
fidivs
aam
aas
dec
push
notl
adc
or
dec
mov
mov
push
mov
and
xchg
inc
or
adc
in
sub
out
std
mov
das
mov
sub
repz
push
out
jnp
out
adc
orb
aam
movsl
idivl
pop
adc
adc
dec
fmull
imull
cmpsb
mov
dec
out
sbb
sbb
mov
lret
add
mov
mov
loopne
dec
cmp
push
daa
pop
add
fwait
rolb
cmp
outsl
popa
mov
sarl
lods
or
js
or
adc
add
rcrb
rcll
push
mov
js
dec
into
insl
int
pop
dec
daa
cltd
dec
repz
cmp
cmp
loop
xchg
mov
stc
jp
push
sbb
jecxz
test
xchg
pop
in
inc
jp
jns
fimuls
pop
xchg
popf
jnp
cmp
sti
imul
xchg
jecxz
leavew
lcall
in
push
jo
pop
mov
xchg
imul
pushf
cmp
ret
adcb
iret
lahf
imul
lods
orb
fwait
sahf
popa
sbb
imul
cmp
insl
sbb
popa
inc
rcrb
mov
cmp
js
push
mov
lret
iret
add
dec
jl
jne
das
dec
add
test
outsl
ljmp
mov
std
mov
testb
lock
jo
repz
mov
push
fstl
ret
jge
incl
testl
jge
out
or
lods
cmc
mov
mov
xlat
cmpsb
add
daa
scas
inc
xchg
cs
or
outsl
mov
mov
popf
and
and
jns
mov
sbb
mov
lahf
aas
xor
push
ljmp
mov
outsl
enter
xchg
cmpsb
mov
mov
movsb
mov
or
arpl
push
sbb
mov
aad
pop
pop
lret
adc
dec
in
push
pushl
sbb
push
cmpsl
adc
fs
pushf
shl
xchg
iret
inc
call
pop
xchg
jae
jns
or
inc
addr16
jb
lock
les
int3
sti
mov
xchg
scas
inc
lods
in
mov
and
jo
fisttpll
movsl
lret
cmc
inc
ret
sbb
in
pop
pop
fnstsw
incb
xchg
fildl
jle
mov
sbb
insb
pop
lods
inc
pushf
ljmp
dec
aam
jp
cmpsb
arpl
cmp
xchg
in
push
dec
mov
mov
lret
fisubs
jne
mov
push
hlt
jle
aad
and
adc
and
xor
movsb
fnsave
mov
inc
and
int
mov
in
movsb
fstpt
aaa
fmull
sub
addr16
sbb
push
out
hlt
jp
inc
mov
sub
push
pop
and
xchg
sahf
push
jno
in
adc
xor
jb
sub
inc
mov
push
xchg
cltd
rorl
mov
sub
sub
dec
cli
xlat
in
mov
loop
xor
push
scas
sbb
negb
pop
xchg
mov
in
notl
mov
loopne
into
fldt
push
cmc
fucomip
add
js
ret
cmp
daa
popf
jnp
stc
push
stc
sub
jg
js
shll
fwait
and
mov
and
adc
int
sbb
jnp
jmp
lret
in
stos
push
fwait
push
inc
xor
jg
pop
dec
out
xchg
dec
xchg
out
es
ljmp
roll
gs
mov
push
and
jbe
xchg
repnz
call
push
jae
mov
and
stos
and
pop
inc
mov
push
mov
aam
bound
test
xlat
and
inc
out
fwait
mov
jg
xchg
fisubrs
daa
and
xchg
sbb
sbb
pop
pop
mov
add
std
jp
lahf
sahf
mov
inc
jmp
xor
jno
mov
pop
jmp
rcrl
in
pusha
rcr
notb
pop
cmp
bndstx
fs
fcompl
dec
pop
enter
into
aad
sahf
sbb
mov
lahf
mov
imul
leave
gs
cli
loopne
xor
push
popa
mov
std
cmpsb
data16
adc
ficoms
mov
test
ds
cmc
add
jns
sarl
and
lds
mov
rcr
inc
push
lea
imul
push
lods
dec
and
mov
mov
call
lret
adc
jecxz
push
test
sub
push
mov
test
mov
pop
mov
jg
movsb
inc
stos
sub
aaa
mov
pusha
sarl
ret
dec
xor
lret
jmp
inc
sarl
lahf
cmp
jo
clc
push
flds
jne
fimull
xchg
test
mov
sub
jns
or
sub
inc
scas
outsb
jbe
push
leave
aam
inc
or
dec
cwtl
or
inc
addr16
arpl
or
lods
scas
pop
js
push
jmp
push
loopne
loopne,pt
popf
pop
push
clc
fisubrl
fs
mov
jmp
bound
flds
and
ja
jb
lahf
mov
mov
jecxz
call
inc
hlt
fwait
pop
jo
jnp
push
cmp
xchg
ret
arpl
stc
push
mov
ror
jp
movb
into
inc
sbb
jl
pop
cwtl
jnp
push
imul
mov
and
clc
sbb
mov
pop
decl
sub
xor
xor
cltd
mov
mov
push
cmp
pusha
xchg
adc
push
cmc
fwait
adc
sub
sbb
test
and
mov
xor
pop
push
pop
fisttpll
xchg
fcmovne
lds
mov
cmp
imulb
push
mov
fdivl
popa
dec
test
rorb
fwait
nop
fcmovnb
and
mov
mov
cmp
xchg
rcrb
scas
push
jo
std
xchg
sbb
loopne
out
iret
popa
fcompl
scas
cld
inc
in
sub
mov
das
les
mov
or
jbe
out
dec
cwtl
and
pop
pop
inc
int3
jmp
cmp
xor
xchg
xor
sbb
sub
aas
shlb
dec
and
pop
xchg
outsb
add
nop
jns
xchg
push
cmp
inc
mov
jne
lret
jne
mov
add
inc
in
push
mul
mov
push
outsb
es
out
sub
pop
mov
sub
cmp
nop
idiv
idiv
arpl
movsl
mov
incb
jecxz
inc
mov
aam
fimuls
xchg
inc
xlat
movsl
mov
or
fsubl
push
xor
sub
stc
mov
or
hlt
push
mov
mov
dec
jne
push
sbb
addl
push
mov
push
jne
lcall
int
cmpsl
mov
fdivrl
cmpsl
pop
sub
test
sub
pop
test
call
jg
add
in
test
lods
popf
dec
mov
mov
bound
xchg
jbe
sbb
add
or
out
das
repnz
dec
loopne
push
jnp
cs
cmp
mov
sub
aaa
aam
test
add
xlat
xchg
js
outsb
shll
jbe
jae
add
scas
mov
outsb
xchg
adc
int3
loopne
xchg
and
movsl
in
adc
repz
xchg
cwtl
mov
loop
repz
dec
mov
mov
popcnt
mov
push
mov
fisubs
aam
cli
leave
in
inc
mov
leave
lods
add
lods
pop
divb
sub
shl
imulb
mov
pop
cmpsl
dec
std
into
enter
cmpsb
add
dec
aaa
sub
sbb
flds
mov
mov
add
in
jne
repz
int3
mov
xchg
data16
jle
jg
test
mov
cmp
insl
inc
xor
lds
mov
je
add
js
ja
mov
xor
xchg
mov
add
fs
stc
push
ljmp
xchg
adc
adc
rcrb
adc
push
js
mov
addr16
in
movd
ret
xor
mov
outsb
mov
shrl
pop
lahf
movsb
cwtl
test
ficoml
mov
enter
out
cli
lods
insb
inc
pop
outsb
call
iret
insb
aaa
mov
and
cmp
mov
xchg
pop
js
inc
inc
mov
xchg
lock
cmc
insl
outsb
inc
and
scas
jo
ret
imul
ret
mov
mov
pop
mov
fists
movsb
jnp
pop
imul
inc
cwtl
mov
cltd
loope
cli
add
sbb
jb
jne
enter
das
mov
sti
ja
dec
pop
repnz
and
mov
mov
fildll
in
and
outsl
popf
or
rcll
js
call
jg
adc
dec
pop
push
mov
insl
inc
adc
xor
cmc
sbb
inc
cltd
sub
jb
adc
movsb
jecxz
fsub
push
pop
dec
push
scas
enter
xchg
std
jg
or
into
add
sbb
adc
leave
jg
xor
jmp
push
xchg
fs
cwtl
push
mov
pusha
sbb
xchg
enter
inc
imul
and
dec
xor
adc
push
and
sub
push
gs
clc
dec
add
and
inc
inc
or
add
out
lock
xchg
xor
lds
cwtl
adc
add
jo
jle
mov
mov
shl
pop
cld
push
sub
xchg
es
dec
mov
cmp
test
mov
mov
inc
inc
inc
push
imul
sub
jbe
lock
sti
shll
popf
push
dec
fwait
mov
and
fisubs
and
cmc
test
push
dec
sub
lcall
inc
int3
scas
add
mov
sub
mov
movsb
pop
out
jne
inc
dec
xor
std
dec
mov
mov
xchg
popa
insb
stos
lret
jmp
mov
lods
jno
push
fnstenv
xchg
and
xchg
mov
mov
aam
lcall
mov
bound
je
cmp
inc
pop
xchg
fwait
pop
jmp
dec
les
jecxz
or
insb
xor
scas
mov
mov
or
cmp
cld
mov
outsb
cmp
jbe
out
xchg
sti
xchg
cmp
fs
cmp
push
push
pop
out
adc
pop
push
jmp
stos
xchg
dec
mov
add
mov
sub
aam
pop
push
lret
cmp
lcall
dec
dec
les
cmp
sub
enter
fld
push
roll
arpl
adc
dec
dec
dec
popf
mov
aaa
and
cld
push
jle
leave
xchg
jne
lock
inc
jecxz
push
mov
jbe
mov
add
sub
jl
out
push
test
popa
scas
ret
cli
rcr
out
dec
xlat
sub
and
lods
mov
xor
jle
call
data16
lret
adc
aaa
aam
xchg
mov
loop
lahf
shlb
jle
adc
sarb
loopne
in
xchg
add
inc
out
and
das
in
shll
sbb
sahf
fadds
push
cmc
mov
adc
cmpsl
jns
jp
movsl
rclb
mov
ja
pop
lds
outsl
xchg
pop
mov
add
out
je
xchg
int
cmc
add
xchg
es
inc
iret
and
sbb
sti
push
loope
ret
adc
jne
ficomps
xchg
mov
xchg
push
aam
aam
jmp
loop
mov
dec
test
movsb
add
bound
sbb
sub
data16
mov
into
mov
mov
xor
popf
ficoms
xor
dec
push
movsb
mov
push
jle
ds
repz
jge
iret
xchg
mov
std
rorb
mov
sbb
sbb
or
cmp
repz
and
addr16
movsb
jnp
cmpsl
in
dec
jl
mov
or
les
add
jno
into
xor
xchg
jbe
ror
push
cmpxchg
inc
mov
jle
nop
mov
notb
sbb
into
gs
lcall
dec
inc
pusha
outsl
out
scas
adc
in
rcrl
pop
mov
insb
cwtl
stc
ljmp
sbb
icebp
push
dec
adc
addb
enter
out
scas
xchg
fs
imul
out
add
cmp
pusha
sti
sbb
aam
cmp
movsl
and
lahf
mov
push
and
and
cmp
pop
add
test
in
cmpsb
paddsb
test
into
add
push
sbb
xor
xor
cmp
pusha
mov
jge
clc
movsb
addr16
fldcw
rcll
aad
mov
mov
out
add
dec
fisttps
js
xor
mul
std
add
sahf
imulb
jecxz
dec
cmp
call
jb
push
das
shl
sub
imulb
push
jb
insl
andl
scas
xchg
jmp
cmp
pop
sahf
nop
ret
aad
insl
movsl
inc
cli
ss
rcrb
mov
push
out
mov
fisubrs
popf
leave
mov
sbb
xchg
hlt
dec
lock
jmp
xchg
xlat
roll
sub
add
ficoms
cld
sbb
pop
data16
adc
mov
mov
jbe
rcll
mov
mov
mov
push
fwait
jg
movsb
pop
dec
jle
aam
int3
mov
jecxz
in
sarl
cld
inc
out
mov
push
in
clc
test
in
dec
inc
cmc
out
std
movsb
insl
insb
movsl
lret
fstps
scas
mov
cwtl
hlt
js
or
mov
pop
sbb
pop
push
push
shl
mov
movsb
bts
and
pop
loopne,pn
shrl
pop
pop
push
pop
or
sbb
jl
lcall
dec
adc
fimull
mov
lock
cmc
adc
dec
dec
xlat
ret
rcrb
pop
lods
stos
fnsave
jp
jmp
in
outsl
imul
dec
scas
jo
sti
icebp
out
ljmp
imul
mov
and
and
stos
cmp
data16
sbb
inc
jbe
jl
leave
xor
and
sbb
mov
cs
mov
mov
ret
push
jge
dec
rorl
cmc
mov
aad
mov
mov
jecxz
or
push
push
add
ss
jno
pop
mov
push
in
mov
jns
inc
cwtl
add
clc
scas
insl
faddl
xor
mov
std
sahf
mov
sub
push
mov
inc
test
xor
mov
std
stc
jp
idiv
outsl
das
pop
jnp
rorl
es
std
in
add
xchg
ja
cmp
fnsave
sar
or
or
hlt
dec
repz
out
mov
or
fdivrl
push
dec
pop
xor
fldt
shl
in
jo
shlb
test
and
mov
or
pop
fucom
cmc
out
cld
xchg
xchg
fisttpl
in
pusha
divb
and
adc
fcoml
cwtl
pop
mov
cmp
add
pop
enter
data16
inc
lret
adc
mov
addr16
popf
mov
ret
add
movsl
cltd
in
inc
out
inc
mov
nop
insl
dec
andl
mov
stos
daa
xchg
inc
sbb
hlt
test
jle
or
sub
cmc
xchg
loopne
lret
das
mov
aas
fcomps
add
ss
into
filds
imul
into
data16
adc
rcl
xlat
aam
leave
int
inc
or
rcrb
filds
jo
scas
shlb
gs
mov
mov
rcrl
mov
das
shr
dec
std
inc
imul
sbb
adc
jo
into
xchg
lods
addr16
leave
call
mov
jmp
daa
fmuls
dec
jb
sbb
repz
stos
int3
lret
movsb
mov
jb
loop
pop
fmulp
popf
sub
xchg
enter
pop
cli
fwait
repz
in
insb
cmpsl
shrl
mov
lret
movsl
clc
xlat
xor
push
mov
sbb
aas
mov
aam
lea
or
je
mov
notb
cld
sbb
sub
mov
scas
push
jns
xor
mov
loopne
fstpt
divl
adcb
call
sahf
pop
xor
inc
mov
jns
in
and
mov
lds
cmp
or
imul
dec
shlb
out
xchg
ss
roll
clc
sbb
test
in
ds
and
daa
in
xor
icebp
adc
and
mov
repz
jg
sub
cmp
stc
push
arpl
push
cli
out
shrb
ret
ds
ficoml
fucomi
addr16
push
xchg
loopne
loopne
stos
jmp
rorb
inc
jnp
sarl
aaa
fimuls
push
cmpb
test
repnz
dec
mov
jmp
cmpsb
orl
cmp
fsubs
cmp
cmc
andl
shll
call
dec
lcall
sbb
stc
test
imul
mov
jo
fmull
scas
out
push
ja
mov
enter
bsr
fiaddl
and
xchg
int
scas
pop
adc
mov
lock
or
sub
mov
jno
loop
jmp
pushf
pop
push
adc
cpuid
add
xchg
jl
mov
cmc
mov
sub
adc
and
out
sub
repnz
sub
inc
aas
mov
cmpl
add
cmp
sbb
pushf
nop
in
pushf
dec
ret
fistl
pop
pusha
lock
cmp
hlt
fbstp
daa
mov
lea
test
fcomp
fisttpll
leave
in
inc
jnp
jp
loop
xor
mov
push
jne
pop
jnp
push
out
mov
cmpsb
scas
inc
cmpsl
jmp
clc
test
sub
fcompl
loop
xchg
lret
push
jmp
dec
mov
dec
sub
in
inc
xorl
mov
in
lret
popf
mov
int
rep
adc
sti
or
push
xchg
call
adc
ljmp
add
xor
or
negl
cmp
repnz
aam
or
pusha
int3
pusha
lret
inc
sbb
arpl
dec
ror
xor
xor
pop
adcl
sbb
and
push
mov
das
lret
movsb
mov
add
or
fucomip
add
in
push
fiaddl
js
push
lret
xchg
gs
icebp
push
nop
sti
jne
jbe
hlt
xchg
mov
push
dec
outsb
inc
sarb
pop
test
outsl
sbb
cmp
mov
icebp
imul
or
sbb
xchg
test
mov
mov
dec
cwtl
fidivrs
dec
jl
insb
mov
cltd
mov
dec
dec
xor
es
mov
fdivrp
or
pop
jne
lods
imulb
jbe
fimull
push
dec
add
mov
cmpl
inc
pop
int
xlat
sbb
adc
cmpsl
push
add
stos
adc
pop
push
adc
subw
mov
push
cs
or
xchg
sub
ret
jno
and
cwtl
sbb
inc
mov
popf
inc
mov
mov
mov
pop
xchg
mov
adc
push
pop
or
in
and
jp
mov
out
sbb
repnz
add
sub
out
jae
pop
fistps
lods
aam
loopne
dec
jb
imul
lea
push
push
inc
jbe
fs
mov
dec
sbb
mov
adc
xlat
lea
pop
mov
aaa
push
je
mov
cmpsb
ljmp
sub
lock
sub
pop
cli
fwait
xchg
pop
stos
loop
mov
jmp
enter
cli
rclb
xchg
dec
pop
cltd
adc
push
stos
iret
scas
ja
shl
dec
pop
popf
stos
xor
mov
je
jmp
push
and
aad
pause
stos
call
jle
dec
or
incl
test
xchg
mov
arpl
mov
adc
inc
iret
aaa
jae
or
lcall
mov
jmp
cwtl
jl
rcl
aam
outsl
mov
or
and
jno
into
mov
mov
mov
fsubl
mov
sub
std
push
incb
mov
mov
out
or
lods
mov
cs
insb
sar
cmc
dec
xor
mov
fists
rcrl
sub
xchg
add
sti
fimuls
cmpsb
fisubrl
sub
cmpsb
push
xchg
movl
insl
insl
cmp
dec
sub
scas
orb
pusha
sub
enter
xchg
dec
xor
pushf
push
into
or
or
aas
push
jno
or
add
mov
or
div
cmpsb
lods
push
adc
les
pushl
lock
out
iret
sbb
inc
repnz
mov
imul
jg
das
jbe
loope
lahf
mov
arpl
mov
cmp
inc
cld
jns
js
cld
adc
push
cld
pop
imul
lret
shl
mov
xor
sar
xlat
addr16
mov
loope
mov
mov
stos
sub
jbe
fwait
lods
mov
push
popa
pop
pop
pop
mov
xchg
daa
sbb
and
add
insb
ret
pushf
and
stos
xchg
dec
pmulhuw
or
scas
sti
stc
shrb
inc
shlb
mov
stos
jb
stc
mov
test
inc
ret
pop
and
adc
fldt
jle
loop
inc
ds
push
pop
jne
mov
sbb
cmp
out
imul
sti
lcall
pusha
test
xor
test
test
cs
jo
pop
int3
ret
lods
std
push
rclb
mov
push
add
and
push
sub
mov
xor
int
dec
lods
and
test
adc
xchg
sbb
shr
pop
bnd
enter
jbe
sbb
jnp
mov
fwait
jmp
pop
adc
loopne
pusha
leave
fcomps
mov
dec
jle
inc
subb
cmovno
dec
xlat
call
add
jmp
adc
jae
sti
lcall
cli
lret
mov
xor
pop
mov
int3
xlat
test
jp
inc
sbb
jns
inc
leave
les
mov
sub
xchg
jae
inc
push
inc
mov
das
jle
iret
inc
jle
adc
cmpsb
stos
out
inc
jp
push
arpl
mov
jno
ljmp
call
pop
dec
pop
cmp
jb
adcb
pusha
aaa
hlt
imul
call
outsb
scas
movsl
pop
adc
fs
dec
push
adc
jp
dec
dec
cmp
daa
jnp
outsl
repnz
push
jp
shl
mov
xchg
lea
inc
mov
pop
lret
cmp
sbb
and
push
popa
imul
xchg
xor
idivb
mov
ljmp
add
ret
mov
and
mov
cmp
inc
lods
icebp
fists
rcl
or
call
and
mov
insl
sub
push
cmc
jne
int
shll
mov
mov
lret
inc
mov
enter
rorb
xor
sbbb
xor
and
jae
and
loop
or
mov
mov
ljmp
or
leave
mov
stos
pop
lea
lcall
call
stos
rcll
cld
mov
add
mov
loope
and
and
nop
dec
lea
leave
out
pusha
out
mov
out
push
mov
aad
shl
push
loopne
cs
add
fcom
js
xor
mov
scas
fs
adc
inc
xchg
xchg
test
push
jmp
into
out
scas
lea
cli
mov
cmpsl
clc
call
cmpsb
jns
dec
int
pop
clc
sub
adc
xchg
dec
mov
fcompl
mov
loopne
xor
xor
dec
cmp
mov
add
arpl
xor
aaa
inc
nop
dec
pushf
int
subps
leave
insb
jne
or
mov
out
sub
ja
inc
test
push
adc
ss
popa
stos
jmp
icebp
fsubrp
or
imul
push
js
jp
outsl
mov
movsl
adc
jge
add
into
pop
leave
fwait
xchg
mov
das
das
test
sti
cmp
mov
cwtl
mov
sahf
sub
movsl
arpl
or
jno
and
pop
xor
andl
pop
jge
adc
sub
je
out
mov
jecxz
mov
jl
outsl
fwait
xchg
xor
mov
dec
cld
push
aad
ret
sbb
adc
mov
sahf
js
sti
cmpsb
add
sub
xchg
cltd
movsl
scas
mov
xlat
sub
pop
loop
push
dec
popa
in
sub
xor
push
sbb
sbb
mov
int
sbb
inc
scas
sbb
in
fwait
cltd
cltd
mov
shr
std
mov
pop
punpckhbw
bound
mov
and
jae
cmpsb
in
mov
mov
mov
push
dec
jmp
insb
sbb
jmp
cmpsl
push
or
mov
int3
pop
jecxz
xor
mov
jb
xchg
sbb
sbb
push
sti
dec
xchg
pop
insb
push
repz
sbb
lcall
cmp
dec
xor
sbb
xor
fisubrl
push
mov
sub
lods
movsb
pushf
pushf
icebp
push
xchg
add
fcomps
dec
inc
mov
sub
mov
push
test
adc
push
and
adc
repnz
push
lods
enter
in
dec
push
out
inc
or
or
mov
xchg
push
mov
mov
cmp
fsts
pop
or
dec
imul
dec
js
fsubrp
rcr
add
arpl
mov
popf
xor
mov
outsl
xchg
hlt
imul
out
pop
scas
sub
xchg
sub
cmpsw
test
push
and
or
cmp
test
sbb
mov
scas
daa
or
fs
orl
ljmp
pop
sub
lret
lds
sti
hlt
insl
jnp
xchg
outsb
dec
movsl
add
mov
pop
jmp
shrl
mov
ds
lea
pop
and
in
fwait
xchg
xlat
das
inc
mov
imul
xor
inc
mov
and
lahf
cmp
lret
out
insb
sub
mov
ret
pop
mov
or
inc
sub
dec
orl
pop
js
inc
test
pop
mov
push
adc
sti
jecxz
ret
clc
inc
sbb
jl
push
adc
dec
adcb
xchg
adc
pop
push
aaa
fwait
call
jnp
sbb
repz
shlb
stos
sahf
xchg
pop
pop
in
cs
enter
js
pop
push
push
mov
aas
ret
inc
movsl
xor
pop
popa
call
push
das
stc
ret
mov
je
sub
push
bound
les
inc
int
fs
jmp
ficoml
cmp
das
mov
jecxz
into
lock
mov
call
cmpsb
dec
inc
push
adc
adc
fstpt
adc
jne
xchg
js
jmp
adc
mov
cmc
push
sti
stos
adc
add
jb
inc
xchg
lods
aam
xchg
out
orl
cs
int3
in
adcl
inc
push
xchg
xor
bound
movb
scas
cmp
push
inc
stc
test
stos
and
mov
daa
add
and
loop
icebp
adc
mov
scas
push
inc
popa
jae
jne
dec
push
jno
cmp
inc
sti
in
push
push
cli
sbb
subb
adc
add
and
rcrl
lods
aad
mov
and
fimull
and
xor
mov
cmp
mov
in
jns
push
movsb
cmp
dec
scas
sub
jp
sbb
icebp
les
jge
in
and
pop
in
sbb
out
ret
sub
inc
imulb
pop
test
loope
cmpsb
dec
mov
xor
cli
sub
add
hlt
adc
bnd
mov
incb
das
gs
cmp
xor
aas
cltd
adc
pop
imulb
jno
mov
hlt
dec
inc
pop
bound
cmpsb
out
and
xchg
xor
out
pop
lahf
clc
pushf
and
jnp
jo
xchg
jno
ljmp
jo
ss
mul
or
movsb
dec
sbbl
xchg
sti
aaa
xchg
jmp
aad
insl
cmpsb
cmp
xchg
xor
or
mov
dec
or
lea
pop
mov
aaa
and
and
lods
push
ds
sti
out
aaa
fisubs
iret
cs
insb
cwtl
inc
lods
mov
mov
pop
add
mov
pop
add
xchg
je
dec
mov
inc
inc
pushf
adc
hlt
ljmp
out
scas
insb
sbbl
cmp
aaa
xchg
subb
std
adc
out
hlt
aas
stos
push
gs
sub
dec
icebp
or
push
rolb
aam
mov
addr16
lods
jno
jp
push
popa
cs
out
rorb
push
push
outsl
addb
out
xchg
xor
subl
mov
xchg
fdivrl
or
test
cmpb
stos
adc
add
fcmovu
das
mov
lret
xor
mov
or
mov
fwait
lods
aas
sbb
sbb
test
and
shlb
call
and
cmpsb
scas
mov
inc
sbb
ds
mov
push
sbb
pop
mov
ljmp
in
daa
push
mov
push
pop
add
mov
lahf
xor
sub
sub
push
enter
aas
stos
mov
cmp
ss
xor
movb
fcompl
adc
stc
sub
jecxz
sbb
dec
add
push
dec
loopne
jns
xchg
scas
and
adc
inc
mov
xchg
cmp
mov
loope
fwait
or
cmp
sub
jmp
daa
daa
pop
out
int
add
mov
aas
sbb
and
int3
or
mov
enter
pop
dec
push
inc
jmp
sbb
jbe
push
xchg
ret
add
popa
movsl
clc
punpcklwd
test
push
int3
sub
push
or
sub
pop
rcrl
or
stos
push
sub
jns
fistpl
lods
mov
js
mov
mov
movl
fwait
test
xchg
dec
leave
mulb
cmp
cmpsl
or
push
in
fcompl
lret
int
in
cmp
cwtl
sub
sub
incl
cmp
sub
test
adc
mov
xlat
popf
inc
mov
and
xchg
roll
dec
int3
mov
outsb
inc
ret
jmp
xchg
pop
daa
lds
call
fwait
scas
shlb
std
shrb
push
inc
rolb
imul
mov
loope
mov
insl
and
sbb
mov
imul
lcall
outsb
pop
hlt
dec
inc
cwtl
pop
sbb
xor
loopne
sub
lahf
sub
sti
cmpsb
repz
sbb
sti
out
icebp
mov
sub
dec
pop
xchg
xor
out
dec
pushf
or
sahf
dec
mull
push
mov
gs
std
jno
in
adc
cmp
xchg
pop
add
adc
push
popf
push
cmc
test
in
int3
mov
jns
hlt
jno
lock
xor
orl
clc
dec
or
mov
push
test
out
jbe
jae
int3
and
jg
inc
movsb
push
data16
push
jp
sbb
js
mov
mov
imul
xchg
and
loopne
fs
jl
jae
in
nop
pop
adc
push
push
js
lret
cmpsl
adc
mov
in
psubusb
out
sbb
out
mov
xchg
clc
js
pop
nop
mov
jle
dec
out
sbb
std
lcall
adc
sub
ds
push
or
inc
or
mov
push
out
pop
out
call
pop
add
jne
push
cmp
inc
pop
sbb
cmc
mov
test
push
lahf
stc
inc
and
adc
movsl
out
hlt
iret
push
inc
aaa
mov
sbb
clc
xor
jb
in
mov
cli
ss
or
xchg
xchg
jp
mov
into
insl
cmp
aad
adc
andl
push
inc
sbb
das
popa
and
out
imul
inc
pop
pop
in
mov
xor
cmp
xchg
xor
sub
xor
out
in
adc
cmpsb
pusha
sub
imul
mov
inc
inc
lret
dec
ja
xchg
arpl
inc
out
mov
inc
mov
mov
jae
ror
inc
in
mov
cmpsb
ja
push
aaa
shrb
testl
in
mov
inc
lret
add
leave
popa
add
imul
sub
mov
in
scas
in
dec
mov
adc
add
orl
and
jo
stos
insl
mov
stc
mov
push
mov
xor
les
mov
pop
int
js
sbb
xchg
dec
and
rcl
mov
adcl
fwait
scas
inc
push
xlat
push
sbb
test
dec
inc
mov
inc
xor
lods
adc
push
aam
sub
je
jns
pop
jmp
push
ds
mov
mov
pop
mov
outsl
pop
in
popa
add
mov
imul
fnstenv
and
inc
mov
jb
inc
cmp
scas
pop
xchg
pop
nop
add
pop
enter
sub
jns
leave
jbe
jle
cli
jg
sub
stos
pop
jo
orl
mov
xadd
cli
xor
or
cmp
push
xchg
imul
push
adc
sti
and
jp
shlb
xchg
adc
and
inc
out
lods
inc
decb
dec
lock
push
inc
aas
xor
aas
stos
ret
inc
dec
je
pop
and
xchg
imul
clc
shrb
cwtl
inc
scas
sarl
ficoms
pop
pop
mov
dec
adc
std
or
mov
add
jne
or
shlb
shrl
dec
jb
hlt
adc
push
jle
dec
dec
out
insb
sub
cld
idiv
pop
adc
inc
pop
mov
add
lock
mov
jo
test
and
pop
fcmovu
or
pop
add
dec
fwait
inc
data16
imul
cmp
mov
sub
sahf
add
xor
lods
inc
sbb
push
imul
and
icebp
adc
jnp
pop
cmc
call
sbb
mov
push
jns
jle
inc
jns
cmp
imul
imul
cmp
push
sub
adc
hlt
ljmp
jne
sbbl
mov
push
imull
jbe
pop
fildll
repz
adc
call
daa
sub
inc
mov
sub
subl
xor
movsl
nop
int
sbb
inc
inc
lea
dec
mov
sahf
xchg
add
mov
add
pop
negl
jnp
fs
inc
js
inc
add
mov
fiadds
pusha
pop
test
lret
xchg
pop
mov
les
out
mov
xor
lcall
or
scas
mov
inc
outsl
jae
arpl
in
mov
cmp
inc
scas
call
in
or
cltd
jae
mov
push
xor
test
ret
ss
jge
loope
pop
fimuls
dec
push
lods
jp
hlt
or
xor
add
push
xor
or
movsb
add
inc
iret
in
adc
add
push
fldl
fidivl
add
push
jp
in
dec
or
or
arpl
aam
add
xlat
mov
add
or
je
js
stos
inc
push
pop
fs
dec
mov
sub
mov
call
mov
mov
jne
sbb
add
shlb
popl
jl
pop
jmp
push
push
dec
mov
sub
xor
jb
xlat
mov
push
sbb
sar
clc
mov
ret
dec
shrl
lret
cmp
or
mov
inc
push
mov
push
cwtl
scas
xchg
mov
jle
adc
add
leave
push
fstl
hlt
push
and
xor
aad
lods
gs
mov
or
pop
inc
cld
push
cmp
das
jne
outsb
cmp
sub
inc
in
rcll
cmpb
jne
mov
dec
mov
inc
lock
daa
loope
xchg
roll
mulb
jno
out
mov
movsl
adcb
pop
add
push
mov
dec
aas
lret
imul
cmp
out
addl
in
fdivrs
je
fstl
mov
outsb
xor
mov
xor
fsts
sub
into
ljmp
mov
push
lea
mov
in
sub
scas
pop
sbb
xchg
scas
inc
ret
lods
lods
into
add
insb
outsl
add
jae
or
into
ret
cmpsb
incb
lds
pop
pusha
and
or
push
push
arpl
sub
cmp
fdivr
push
ljmp
xchg
cmp
adc
sbb
repz
add
cmp
xchg
mov
mov
pop
or
cld
testl
pop
rcrb
loop
ljmp
fsubr
push
jle,pn
jp
sarb
out
insl
cmpsb
aas
xchg
adc
repnz
inc
inc
decl
cmp
cwtl
ret
imul
xchg
out
jns
test
xor
test
pop
pop
dec
pop
dec
mov
mov
popa
ljmp
xlat
mov
loopne
outsl
add
push
stos
lods
outsb
pushf
loopne
stc
mov
mov
clc
mov
cmpsl
mov
shrb
in
sbb
sbb
hlt
shll
rcrb
inc
stos
sbb
mov
push
push
je
call
pop
mov
or
cli
sub
cmp
push
push
cld
addr16
ret
sub
push
and
cmpsb
out
ljmp
mov
sbb
adc
xchg
mov
dec
pop
stc
les
pop
cmpsl
outsl
xorl
cmp
push
lea
lds
scas
jnp
stos
mov
mov
aaa
dec
mov
mov
out
pop
dec
sbb
out
sub
mov
imul
cmpl
xor
and
test
jno
fistpll
cli
mov
leave
in
loop
loopne
push
mov
push
mov
pop
scas
mov
aad
jne
jg
cmp
fiaddl
xor
mov
test
mov
sub
movq
push
add
jle
cmp
and
sarl
or
call
add
mov
gs
daa
loopne
sub
out
leave
and
cld
push
fwait
pop
inc
push
mov
int3
jg
pop
cmpsl
orl
adc
test
mov
negl
mov
sub
bound
mov
sbb
test
mov
inc
das
rcrl
lods
stos
add
ret
pop
pop
inc
mov
or
push
push
out
cmpsb
xchg
imul
fiaddl
jecxz
xchg
insb
dec
subb
lea
and
loopne
mov
shll
cmp
stc
mov
cmp
or
bound
mov
xchg
sbb
icebp
leave
add
out
sbb
ds
push
cmp
dec
rolb
out
push
repnz
loopne
adc
cwtl
paddq
pop
aam
add
fwait
bound
sub
mov
cs
clc
arpl
out
jmp
mov
xor
push
ss
sub
mov
arpl
mov
jge
mov
dec
mov
push
cmc
xor
mov
daa
push
imul
cmp
xchg
daa
pop
aad
je
call
xchg
dec
jb
jp
test
loop
ljmp
jecxz
out
addl
mov
fistpll
adc
testb
cmp
push
xlat
mov
push
rclb
addr16
imul
insl
movsb
out
jge
cmc
out
sbb
jns
mov
adcb
mov
sub
test
mov
add
xchg
and
stos
jmp
cwtl
and
lock
mov
mov
in
outsb
cmpsb
iret
pop
stos
push
adc
adcl
xlat
popf
icebp
add
loopne
stos
mov
popa
pop
sub
insb
or
cltd
scas
scas
sub
add
mov
mov
pop
aam
cmp
cmc
push
in
push
rcrl
inc
dec
out
incb
imul
xchg
fidivs
dec
jl
mov
test
in
dec
outsb
xor
lahf
negb
adc
negb
or
in
cmc
xorl
jne
ljmp
push
jnp
frstor
jge
iret
xor
jbe
or
test
test
aad
jge
xor
dec
pop
and
mov
sbb
push
flds
mov
inc
jg
cmp
cmp
bound
add
cltd
cmp
mov
xchg
inc
fsubp
fmuls
mov
dec
rorl
jge
and
xchg
pop
rep
cltd
rolb
repz
xchg
cld
fwait
imul
sbb
push
inc
or
repz
shrl
fistps
ret
aad
cmpsb
pop
adc
loop
into
fisttpll
mov
aam
jae
loopne
pop
mov
cmp
push
xchg
out
xchg
lret
stos
push
pop
xchg
cs
ret
xlat
data16
mov
add
out
jne
mov
push
xlat
cvttps2pi
xchg
mov
sbb
addr16
cltd
xchg
test
jne
jno
icebp
lods
mov
cli
rclb
inc
mov
ja
int3
arpl
cwtl
dec
shr
fisubrs
xchg
and
sub
fnstenv
jne
dec
and
into
insl
jmp
pop
mov
and
mov
loop
pop
es
in
test
xchg
jg
sub
mov
pop
cmp
sbb
or
pop
rclb
daa
sub
add
js
cmp
add
pop
and
clc
aaa
inc
lds
ljmp
call
jbe
lods
lds
xorl
push
enter
push
pop
adc
mov
pushf
lcall
gs
cwtl
loopne
push
adc
movsl
out
ror
daa
adc
cltd
add
into
inc
inc
xor
mov
das
idivb
dec
pop
xchg
jb
sub
outsl
rcrb
mov
shrb
lret
sahf
sbb
ja
sti
cld
pop
add
pushf
and
jno
pop
and
mov
popf
ljmp
or
movsl
and
add
mov
imul
cmpsb
xchg
lods
mov
inc
loop
in
jne
sti
into
ret
lds
cmpsb
jge
rorb
bswap
mov
inc
mov
daa
jg
mov
icebp
adc
push
sbbb
sub
and
push
add
xlat
mov
out
push
add
push
sub
sub
popf
mov
mov
xlat
adc
iret
or
and
jno
mov
push
loopne
dec
mov
pop
je
inc
xchg
cmc
lock
int3
movsl
lea
mov
pop
lahf
mov
lock
adc
popa
lods
mov
movsb
popf
sahf
into
and
insl
mov
pop
push
fsts
popf
addr16
pop
popf
loope
xchg
xor
rep
xor
mov
lods
or
sub
stos
testl
xchg
cmp
push
jo
test
mov
cmpsb
sbb
in
inc
idivb
jle
mov
pop
mov
inc
push
xchg
je
mov
fadd
aad
mov
add
and
push
mov
push
std
in
xor
arpl
xor
xchg
mov
data16
es
fisubrs
out
adc
pop
and
add
ss
sub
arpl
sub
enter
jae
jmp
insb
push
bound
roll
sub
adc
sbb
js
push
shll
es
mov
aam
adc
ljmp
lret
jle
adc
rcl
hlt
scas
mov
and
xor
in
dec
inc
or
ret
cmp
loope
jne
xor
jns
aad
divl
ja
pop
ljmp
cmp
cltd
into
subl
pop
mov
ds
sub
sub
jle
fisttpll
lds
aad
push
orb
rcrb
repnz
aad
adc
out
sub
xchg
pop
push
scas
cltd
inc
push
out
add
mov
stos
push
xlat
dec
adc
out
je
cmp
xor
mov
out
sbbb
xor
dec
mov
mov
mov
loopne
cmp
lods
inc
inc
pop
add
fnsave
clc
ss
imul
jmp
or
js
and
ret
out
js
notb
mov
push
fisttpll
add
push
inc
andl
lods
sbb
xchg
ja
inc
cmp
push
in
lahf
mov
push
repz
loope
aam
in
in
lahf
sti
adc
dec
mov
loopne
pop
mov
rorl
bound
adc
mov
lods
mov
jmp
jo
imul
or
pop
sbb
jno
jb
mov
clc
jle
inc
xchg
dec
pop
fwait
dec
fs
jmp
inc
inc
xchg
mov
outsl
clc
dec
mov
imul
cs
fs
cmp
arpl
inc
enter
add
cld
xchg
push
xchg
add
xlat
sahf
leave
stos
mov
push
sarl
imul
mov
lea
push
sbb
mov
and
cmp
or
fidivl
es
fs
pop
div
pop
test
rcrl
fcmovu
add
and
sub
xlat
bound
jae
je
cmpsb
stos
aam
lods
pop
neg
xor
test
test
fcoml
into
incl
xor
push
lds
jbe
aas
pop
cmpsb
pop
cmp
shlb
sub
aas
incb
test
push
test
adc
xor
push
aad
adc
lea
push
repnz
pop
sbb
xchg
dec
push
and
or
sub
test
cwtl
repz
mov
mov
mov
out
fisttpl
fstl
pop
lock
push
dec
inc
and
loopne
int
std
sbb
iret
out
mov
data16
ja
lea
pop
stos
int3
ret
stos
das
roll
sub
mov
sub
inc
push
icebp
dec
scas
jl
inc
js
dec
adc
lcall
sub
leave
cmp
adc
clc
gs
jnp
out
jmp
loop
and
xchg
ds
push
adc
popf
cmp
mov
cmp
cmp
add
ficoms
outsl
mov
cmc
enter
shr
int3
or
mov
push
mov
mov
and
je
dec
outsl
xchg
faddl
sub
dec
sub
inc
data16
mov
and
xchg
adc
pop
in
jnp
pop
jbe
and
lods
push
fisttpll
call
xchg
mov
push
ss
outsl
int
leave
lret
mov
outsl
in
fcomp
mov
xchg
fwait
cmpsl
pop
scas
test
ljmp
pop
xchg
xchg
iret
mov
popf
sti
ja
mov
inc
aas
cwtl
inc
push
push
jmp
sbb
ret
ret
int3
dec
out
fscale
mov
std
xorb
loop
lcall
dec
iret
push
mov
test
ret
push
inc
lret
mov
test
scas
pusha
push
aas
loop
cmp
jl
fadds
ja
shrl
inc
outsb
xchg
adc
adc
add
mov
inc
mov
int
es
jns
repnz
jb
popf
and
jmp
fnstenv
add
or
arpl
es
lods
cmp
daa
pop
sub
jb
add
inc
mov
and
mov
inc
jne
jge
test
cmp
mov
sub
mov
jo
out
loopne
or
hlt
mov
test
add
icebp
mov
lahf
mov
add
mov
stc
fucom
xchg
icebp
test
decb
jo
xor
imul
cltd
pop
notl
jecxz
mov
sbb
push
cmpsl
repz
test
pop
outsl
pushf
jbe
aam
adc
sbb
pop
cmp
fnstsw
jmp
mov
cmp
jno
test
pop
dec
pusha
mov
ret
in
pop
inc
jmp
adc
fmuls
shlb
mov
rep
mov
and
arpl
inc
or
xchg
dec
into
aad
xorl
sub
inc
xchg
dec
mov
xchg
movsl
stos
andb
pusha
dec
dec
mov
push
sub
shrb
fnstenv
add
jmp
leave
pop
daa
dec
repnz
add
insb
mov
aaa
jno
jg
add
add
mov
xor
jne
push
jge
mov
ja
mov
pop
rorb
sub
push
sub
dec
sahf
push
dec
or
jle
imul
add
dec
jb
add
out
sbb
adc
aas
jno
lret
xchg
or
add
sub
xor
mov
add
push
xor
jne
push
mov
pop
gs
pop
dec
fidivl
or
insl
xor
jp
mov
sbb
push
jl
js
out
inc
into
mov
inc
adc
xor
jg
mov
repnz
mov
icebp
lcall
add
movsl
cmp
in
out
dec
fcompl
inc
xor
scas
dec
or
add
imul
jmp
xor
fsubrs
mov
add
pop
jge
and
mov
popl
ret
in
test
cmp
xorl
mov
sahf
xchg
std
icebp
mov
and
pushf
inc
aad
rcrl
xchg
mov
adc
sub
out
mov
jbe
xchg
out
mov
adc
xor
das
add
stos
jbe
pop
test
xchg
mov
jle
sarb
imul
jbe
xlat
mov
mov
mov
sahf
iret
and
mov
outsl
iret
ljmp
nop
jae
push
aas
aad
pop
inc
icebp
enter
mov
cmpb
mov
pop
inc
test
lds
add
dec
xchg
cwtl
and
orl
repnz
mov
dec
iret
lea
cmp
pop
jge
jns
cs
mov
sbb
cmp
ret
pop
fnstenv
ds
imul
cmc
inc
mov
int3
jge
pop
out
and
shl
jmp
mov
aam
jp
loope
dec
pop
sub
push
popa
dec
lea
inc
nop
lock
notb
cli
lock
add
push
fwait
sarl
jecxz
es
aad
jbe
inc
lret
lea
mov
jmp
sahf
into
shll
xchg
mov
sub
inc
std
arpl
and
scas
cmp
fwait
jle
rcrb
inc
cmpsb
pop
push
jno
or
fdivl
dec
pop
push
cwtl
ret
pop
jmp
and
shrl
mov
jl
cmp
push
rorb
imul
insb
loopne
ds
sub
cmp
in
iret
popf
enter
pop
mov
inc
in
mov
add
movsb
je
xchg
shrb
push
push
icebp
lods
mov
mov
rolb
popf
int3
jne
call
pop
cmpsb
lds
in
inc
xorb
clc
push
pop
xchg
sbb
insl
mov
ljmp
pushl
lahf
cmp
mov
jo
jnp
jns
imul
inc
push
jmp
divl
mov
xchg
xchg
ja
cli
adc
lret
jno
leave
dec
movsb
fwait
xor
pop
mov
adc
lahf
pop
inc
outsl
jae
outsb
jle
mov
in
sbb
out
stos
gs
fimuls
sub
mov
call
shr
jno
mov
cmp
cmpsl
js
js
gs
insb
mov
inc
fstpl
dec
movsb
movsb
sbb
dec
fwait
adc
or
xor
pop
or
out
sbb
stc
jp
fs
sub
lcall
popf
scas
fcmovb
pop
fmul
jb
cmc
lcall
push
pop
xor
ret
jmp
xchg
push
rcrb
push
lock
frstor
lock
mov
int3
xor
cli
stc
sub
sti
pop
ja
add
sub
sub
dec
dec
enter
dec
call
in
cmp
inc
jl
pop
and
adc
addb
cwtl
cli
dec
xchg
pop
out
xor
popf
repnz
pop
rclb
xchg
or
fidivrs
xchg
jp
jg
and
adc
adc
or
fsub
call
pop
add
xor
adc
sub
enter
pop
movsl
es
mov
subl
insb
mov
fldcw
and
sbb
pop
out
jmp
mov
icebp
icebp
push
sub
fistl
cmpsl
lahf
sub
rcl
cmp
fwait
mov
leave
jp
outsb
scas
fisttps
and
int3
or
mov
nop
inc
sub
pusha
xchg
xor
hlt
push
pop
daa
sub
fcmovb
mov
shl
pop
and
push
or
add
leave
jmp
add
push
push
clc
cmp
inc
pop
or
mov
add
aad
incb
out
push
inc
out
cmp
les
mov
mov
inc
and
rorl
mov
jb
fistps
clc
xor
lret
orb
in
fcmovnb
xor
cmp
cmc
in
add
add
add
add
add
add
cmpsl
lds
cmc
cmp
loop
dec
ret
dec
popa
sbb
push
xor
cmpsl
lds
cmc
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
es
sub
or
lds
cmc
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
mov
lcall
add
add
add
in
add
and
push
xchg
add
add
sub
ret
push
push
jbe
and
add
add
add
add
add
mov
add
cmc
inc
sbb
add
add
out
xchg
repnz
lcall
in
xchg
push
sbb
mov
pop
and
notb
jns
daa
shlb
scas
jae
mov
sub
jg
mov
rorl
lret
cltd
scas
mov
sub
cmpsl
mov
out
add
or
and
loopne
sahf
xlat
push
int3
lds
inc
push
lods
ds
lret
scas
out
ret
pop
fsubr
in
jae
iret
mov
imul
mov
add
mov
dec
lahf
hlt
and
das
xor
sub
imul
push
cmpsb
ss
pusha
push
xor
and
fsubrl
xor
rcll
inc
jmp
jnp
lret
push
mov
sbb
mov
or
fisttps
lea
xchg
lods
pop
popa
lea
fnstsw
mov
xchg
mov
loopne
mov
xlat
fisttpll
loopne
pop
out
ror
sub
int3
cmc
mov
inc
outsb
enter
stc
orb
mov
jno
icebp
sbb
cmpsl
mov
stos
cmp
sub
cltd
sbb
outsb
fisttps
add
addr16
loope
popf
lahf
std
das
jmp
aad
push
mov
in
out
xchg
xorb
xchg
adc
lret
dec
scas
addr16
pop
mov
jle
rolb
mov
imul
mov
ret
fisubs
or
loop
test
sub
or
adcb
pop
in
sbb
jecxz
add
cmc
ret
push
sti
ljmp
push
add
sub
push
sbb
cmp
dec
mov
addr16
or
mov
or
push
xor
lock
xor
lds
adc
xor
std
mov
jno
xchg
push
mov
or
rolb
outsb
pop
das
push
daa
mov
push
xor
sbb
mov
jecxz
and
icebp
mov
and
push
mov
push
pop
int
mov
mov
scas
cmpsl
imul
inc
add
jbe
jle
dec
jge
sub
mov
and
mov
fcomps
push
sbb
or
fldt
orb
dec
sbb
xor
jge
mov
stos
lcall
pusha
out
or
shrl
ret
mov
sbb
flds
mov
test
das
sub
ds
inc
imul
cmp
sti
sbb
jle
inc
mov
and
add
push
push
pop
sti
rorb
push
movsl
adc
into
loopne
popa
repz
adc
arpl
mov
aaa
and
add
jp
std
mov
aas
push
jecxz
movsb
cli
insb
test
xor
mov
sbb
test
xor
pop
sbb
xchg
cmp
push
add
xchg
in
adc
lret
xor
cltd
scas
sub
jns
subl
or
repnz
cmovnp
shlb
add
pop
push
inc
pushf
dec
jb
scas
pushf
and
clc
mul
xchg
jp
shrl
int
daa
jmp
xchg
jge
dec
sbb
cmp
movsl
aad
jecxz
push
icebp
lea
lcall
in
lcall
lock
je
and
inc
sbb
fisubrs
mov
mov
int
dec
pushf
xchg
ret
rorl
pop
mov
insl
jne
aas
inc
mov
pop
pusha
arpl
das
mov
test
xor
dec
mov
inc
mov
leave
jle
scas
es
xchg
sub
aas
cmp
cmovle
push
ljmp
xchg
add
arpl
aam
push
test
mov
pop
out
js
pop
xchg
xchg
sbb
inc
cmp
push
inc
fldl
aas
or
sbb
mov
mov
repz
inc
inc
mov
xor
xchg
sub
rorl
xor
aad
je
cmp
fnsave
adc
stos
xchg
pop
in
les
mov
cmp
loop
sbb
pushl
adc
dec
mov
push
mov
mov
jbe
mov
mov
dec
pop
sbb
mov
ret
fsts
cmc
lcall
adc
outsl
add
in
jbe
sub
inc
ftst
sbb
clc
jno
lods
je
inc
sub
stos
fs
fadds
int
sbb
jle
mov
mov
mov
rolb
arpl
rcll
and
outsb
dec
xor
daa
xchg
movsl
adc
loopne
scas
icebp
cmpsl
pushf
push
les
fwait
pop
mov
cltd
stos
in
pop
imul
mov
mov
push
xchg
dec
loope
mov
nop
adc
or
iret
mulb
fs
pusha
sbb
cwtl
xor
mov
aas
repnz
loope
lcall
dec
sub
ds
push
mov
pusha
aad
inc
nop
mov
dec
mov
negb
iret
mov
cld
pop
arpl
jno
xchg
mov
in
mov
add
cli
sbb
or
aad
fdivrp
sub
icebp
insb
cmp
dec
cmp
mov
sub
enter
xchg
sub
mov
jb
sti
js
xor
adc
adc
pop
or
adc
push
daa
in
iret
pushf
jle
data16
xor
mov
lock
mov
fdivrp
das
rcrb
rol
jg
xchg
out
fwait
mov
cmp
sub
ret
sarl
repnz
aaa
dec
pop
pop
fistps
sti
imul
sub
shll
xor
je
adc
imul
or
xor
into
jbe
xlat
mov
cmp
shll
mov
jno
test
xlat
pop
pop
xlat
andl
mov
mov
cmp
test
xor
dec
ret
xor
adc
dec
jecxz
adc
adc
sub
inc
and
mov
cmp
xor
fdivrl
lock
xlat
xchg
iret
cmpsl
push
jnp
jno
clc
shrl
in
pop
cmpsb
pop
insl
fwait
popa
adc
icebp
popa
loop
and
fists
addr16
inc
xchg
fistpl
add
in
jge
cmp
pop
mov
addr16
sub
jns
pop
xchg
rcll
aaa
aaa
push
daa
or
fistpl
das
outsb
push
sbbl
test
mov
es
or
shrl
mov
xor
sub
lret
or
stos
cmp
in
xchg
inc
push
or
int
out
aad
filds
and
call
addr16
dec
les
cmp
fbld
fnstenv
pop
push
xor
mov
das
int3
cmpsb
adc
sahf
dec
ss
cs
push
inc
test
psllw
pusha
lret
das
ja
iret
push
push
insb
leave
push
push
fadds
add
std
and
int
pop
mov
ljmp
jbe
out
sbbl
sbb
lcall
add
imul
repz
loope
push
data16
xchg
xchg
mov
xchg
sub
xchg
push
dec
arpl
aas
inc
cmp
pop
adc
ret
test
mov
outsb
je
mov
std
popf
lock
jae
leave
pop
test
pop
fcmovu
inc
rcrl
xchg
jle
lahf
arpl
mov
mov
pop
sbb
in
fucomi
sbb
sub
dec
aam
test
mov
add
jp
cmpsb
enter
neg
push
stac
rolb
push
in
mov
ret
lods
push
cmp
stos
ret
test
clc
leave
sub
add
inc
shlb
sub
sub
out
std
inc
je
xchg
loopne
mov
call
pusha
rorl
push
std
cli
cmp
arpl
xor
dec
add
and
je
sub
add
jle
or
jecxz
adc
adc
je
add
jnp
imul
or
loopne
sub
fidivs
jp
add
pop
mov
and
jo
cwtl
add
pop
stos
mov
into
stos
and
dec
dec
addr16
jae
and
dec
in
xchg
lea
adc
idivl
popa
sbb
out
pop
push
into
push
test
lahf
movsb
jne
xchg
out
adc
insl
lods
insl
fldl
and
js
sbb
mov
das
xchg
xor
and
push
je
loopne
and
mov
mov
sti
or
fs
or
or
or
push
out
iret
out
popa
pop
lea
int
mov
jp
sarb
popf
testl
xchg
sahf
sub
imul
fwait
stos
adc
lcall
jo
jl
pop
out
lea
pop
adc
inc
mov
inc
add
add
add
pop
scas
out
inc
rol
jns
xor
mov
enter
fidivs
fisubrs
pop
mov
add
idivl
cmp
jno
in
push
add
aaa
cmc
insl
or
sub
arpl
jnp
mov
pop
ret
setl
and
loope
sbb
shlb
aad
xchg
mov
pop
jg
or
or
dec
mull
cltd
jg
inc
fdivrl
pop
and
sbb
sbb
push
mov
lods
daa
mov
adc
loop
pop
std
or
jle
jle
jmp
xchg
gs
push
jno
xor
mov
jno
repz
in
shl
or
xor
xchg
lcall
pop
mov
push
shlb
scas
lods
test
push
lahf
sbb
fadd
sub
mov
mov
negb
xorl
xchg
jae
add
iret
test
ds
clc
add
in
dec
mov
jle
xor
repnz
pop
or
mov
decb
sub
xchg
insl
jb
decb
out
xchg
jp
sub
in
push
aas
lahf
cmp
pop
cld
dec
std
mov
jg
pop
pushf
std
aad
mov
cmp
std
gs
mov
cmp
sub
sbb
pop
lcall
roll
pop
fists
or
clc
jle
add
punpckhbw
into
or
sbb
sub
outsl
repz
mov
arpl
enter
movsl
popf
add
inc
or
cltd
popf
inc
into
and
mov
dec
cmpsl
cmp
add
hlt
jle
pop
pop
jge
adc
imul
stos
hlt
fisttpll
les
neg
fwait
popa
leave
xlat
push
sahf
jae
jg
or
xor
in
jl
add
pop
xchg
cli
sbb
daa
dec
fdiv
jl
cmp
xchg
dec
mov
cmp
push
flds
data16
sahf
js
jae
or
or
cmp
cmc
mov
mov
lahf
xlat
repz
test
jecxz
ficoml
jne
mov
sub
int
lret
das
xchg
push
cmpl
or
aam
xchg
dec
sub
adc
jecxz
loope
sbb
xor
jnp
inc
mov
inc
cmc
push
movsl
push
jne
lea
xchg
dec
ljmp
pop
jle
adc
cmpsl
jle
out
repz
orb
out
mov
xor
xchg
into
rclb
jo
mov
jp
pop
push
mov
in
fists
xor
jno
pushf
mov
iret
adc
jl
scas
mov
cmpsb
mov
add
mov
mov
jl
sbb
cmpsb
pusha
loope
in
out
andb
int
pop
add
int
pushf
mov
mov
das
sbb
mov
jb
sbb
jg
lahf
pop
ret
data16
aad
jnp
mov
inc
sahf
imul
mov
ret
cmpsb
and
add
outsl
cmpsb
aaa
fdivrl
sbb
mov
mov
or
jne
inc
push
addl
xchg
sub
xchg
sub
sub
pushl
dec
mov
arpl
filds
lods
inc
add
out
scas
or
jae
xchg
mov
shrl
xchg
lret
imul
inc
jmp
and
jmp
and
inc
test
pop
pop
push
mov
leave
push
sub
cmp
push
mov
and
mov
dec
sbbb
lods
sub
fstl
repz
jo
popf
adc
cmp
inc
aas
add
xor
xchg
sbb
repnz
or
bound
mov
mov
dec
xchg
shrb
stos
and
test
dec
sub
repz
pop
push
lret
or
jnp
xor
lea
outsl
lahf
sub
jge,pn
sub
sub
inc
fisubs
pop
and
out
push
out
or
loope
ficoms
aam
dec
jnp
mov
in
xor
sub
push
xchg
mov
cmpsl
faddl
sbb
inc
cld
les
mov
mov
adc
pop
dec
push
pop
lock
mov
leave
loope
fs
roll
in
jno
loopne
push
jae
incb
adc
addr16
mov
rclb
clc
xlat
pusha
leave
fdivrl
xchg
fsubrs
xchg
cld
lea
cltd
xchg
icebp
movsb
sub
inc
push
fbld
loop
pop
sti
sahf
push
or
lret
lret
jns
mov
ret
xor
icebp
cmp
adc
xor
xchg
out
xchg
mov
divl
adc
mov
dec
stos
cwtl
xor
js
test
sbb
xor
pusha
dec
pop
xchg
add
dec
mov
repz
or
or
lock
adc
loope
cs
cltd
pop
mov
cmp
or
insb
add
rcrb
pushl
mov
push
pusha
push
jl
imul
mov
mov
push
out
jns
inc
add
shrl
mov
mov
popf
mov
cltd
popa
imul
lds
add
inc
imul
pusha
pop
ljmp
or
sbb
dec
dec
lret
cli
lea
test
sub
pop
jo
pop
jne
fnop
subb
push
dec
xchg
inc
push
add
cltd
addr16
push
ja
fldz
cmpsb
pusha
and
mov
dec
inc
repz
dec
lahf
inc
imul
add
loopne
pop
dec
aad
xchg
test
add
cmpsl
dec
enter
cmp
mov
neg
cmp
dec
push
adc
and
cmp
or
divb
mov
mov
mov
sub
mov
xchg
cs
ret
aam
xchg
cmp
or
test
adc
xchg
mov
popf
dec
lret
or
test
push
imul
jb
sti
call
imul
stos
mov
cli
push
lret
pop
shrb
mov
jns
xlat
inc
sub
cmp
dec
jno
sub
jg
icebp
ss
xchg
push
ss
sti
and
out
inc
sbb
aam
lds
jb
ljmp
inc
bound
push
sbb
xor
or
push
push
mov
jb
dec
mov
repnz
mov
mov
mov
and
xor
jmp
stc
xchg
sbb
aas
push
xor
jl
cmpb
and
inc
icebp
movsb
pop
xor
adc
lahf
mov
pop
adc
sbb
pop
and
jne
push
aaa
fcoms
lea
enter
addl
rcl
fwait
push
dec
mov
andl
push
pop
xchg
and
scas
int
jb
mov
mov
pop
shr
lcall
shlb
negb
xchg
add
xchg
sbb
mull
jl
sar
sbb
lcall
jnp
notl
and
mov
xchg
jecxz
addr16
jmp
push
ljmp
dec
int
mov
xor
xchg
dec
je
xor
scas
xchg
test
cmpsl
mov
nop
ret
arpl
push
adc
jmp
xor
inc
cld
insl
cmpsl
xchg
addl
mov
movsl
idivb
ret
popa
fdivp
push
repz
xchg
or
add
lods
and
add
das
add
xor
inc
push
mov
push
or
cmc
aas
mov
test
mov
xchg
loop
out
lret
aaa
sbb
jecxz
xchg
jg
imul
mov
rcr
xchg
jle
cmpsl
mov
jns
push
cmpsb
push
xor
sub
mov
decl
pop
movsl
test
or
cld
xchg
sub
jmp
fcomps
cltd
and
mov
push
push
dec
sub
int3
fwait
movsb
and
lret
pop
push
mov
mov
cmpsb
out
rorb
xchg
mov
jmp
dec
dec
clc
out
dec
xor
cmpsl
repz
pushf
ljmp
and
insb
mov
and
push
nop
repz
and
xchg
dec
xor
fistps
out
push
leave
aad
cmp
lods
aam
leave
mov
ljmp
jl
jecxz
lods
ss
and
push
pop
mov
call
mov
je
clc
jae
add
mov
jg
movsb
ja
add
mov
sbb
xor
mov
jns
adc
es
sbb
outsb
jo
bound
imul
dec
out
xchg
adc
xchg
xchg
fbstp
arpl
and
sbb
rcll
lret
and
ss
outsl
cmpsb
bound
je
or
movsb
sti
pop
cli
cltd
jmp
cld
pop
les
xor
movsl
test
je
or
sub
mov
repz
mov
cmp
sub
test
xchg
jno
ds
mov
xor
leave
mov
dec
or
mov
insl
sbb
in
imul
cs
aas
xor
int
pop
and
xor
mov
sub
xor
ret
mov
mov
push
lret
sub
push
pushf
mov
jns
icebp
xchg
cltd
mov
nop
fidivs
test
jb,pt
xchg
call
pop
xchg
iret
jne
icebp
loope
popl
cmp
aas
push
xchg
in
cmp
fists
xor
push
lret
dec
pop
mov
xor
and
jmp
mov
ret
jae
incb
sub
mov
lods
push
cwtl
in
gs
mov
stos
test
cmp
xchg
nop
dec
adc
cmp
mov
fs
int3
mov
std
sub
dec
fcmovbe
add
lretw
ja
aaa
loope
movsb
inc
fiaddl
mov
xorb
mov
cli
jp
je
xchg
mov
out
sti
adc
jne
not
sahf
mov
push
mov
and
fdivrs
push
repnz
cwtl
lods
mov
push
lods
pop
loopne
lods
enter
stc
pusha
inc
call
cmp
cwtl
jno
es
mov
cmc
in
or
mov
mov
lret
cmp
fstpt
adc
inc
dec
mov
and
inc
jp
jo
xchg
pushl
and
sbbl
cmp
and
xchg
inc
push
adc
jns
lds
repz
sub
mov
sbb
push
push
jle
int3
repz
je
push
out
iret
dec
xlat
aaa
mov
or
nop
dec
js
jb
je
je
xchg
mov
mov
adc
lea
cmc
inc
aaa
mov
cmp
mov
int3
ja
clc
pusha
sbb
jmp
ret
aas
jne
arpl
or
inc
adc
xchg
mov
or
dec
outsl
inc
ss
enter
dec
adc
aas
mov
push
les
and
shlb
xchg
dec
mov
pop
dec
out
popa
or
outsb
jno
repz
loop
push
add
addps
fs
push
jns
clc
mov
loop
pop
sub
add
cld
push
xor
outsl
xor
or
test
push
pop
mov
bound
xchg
sbb
mov
sbb
pop
in
jns
rcll
shlb
or
push
nop
jo
ss
push
dec
in
test
sub
inc
adc
mov
pusha
push
testl
popa
iret
push
mov
or
mov
fstps
je
arpl
fcomps
lock
fstpl
fcompl
xchg
jae
sub
or
add
scas
fildll
add
rorl
fcomps
lds
in
add
test
dec
xchg
addr16
pop
test
scas
fnsave
dec
and
jns
imul
jnp
aaa
mov
cmp
pop
add
pop
pushl
stos
sbb
inc
mov
lea
jmp
mov
mov
sbb
mov
je
icebp
mov
xor
jp
sub
xchg
out
fdivrp
daa
sub
pushf
cld
cwtl
push
lds
adc
idiv
mov
xor
mov
or
out
push
inc
cs
inc
fucomip
add
mov
sub
enter
popa
lods
mov
mov
in
mov
test
sbb
adc
mov
jnp
je
rep
or
mov
jmp
jl
push
push
adc
sub
sub
aas
inc
in
jle
fbld
sbb
cmpsb
cmpsl
cmpsb
mov
sub
addr16
add
lret
in
mov
or
jp
mov
ss
test
pop
pop
in
test
inc
sti
leave
je
sbb
subb
cwtl
dec
adc
mov
or
ss
gs
fscale
or
dec
insb
push
mov
inc
outsl
je
aad
cs
jbe
imul
jb
jmp
std
pop
scas
adc
mov
je
inc
mov
pop
inc
andb
loop
cmp
dec
icebp
call
mov
jmp
fidivrs
sbb
inc
mov
std
adc
mov
adcl
fcmovu
imul
push
fs
stos
pop
andl
push
ficomps
and
mov
push
adc
and
jns
xchg
and
pusha
jecxz
mov
pop
and
outsb
jmp
push
fcomip
pop
mov
and
sbb
icebp
jbe
sub
lret
adc
cmp
into
inc
jl
testb
outsl
jns
fstpl
nop
pop
cmp
test
inc
imul
jb
jmp
inc
add
pop
test
sti
sub
roll
fstl
insl
mov
pop
xor
sbb
stos
mov
cwtl
out
addr16
add
mov
lcall
inc
or
add
insb
cltd
jbe
fimuls
jmp
daa
mov
cmp
ficomps
adc
dec
dec
bound
xchg
xchg
and
jo
mov
sub
gs
pop
ss
lods
sub
mov
mov
xchg
scas
les
dec
ljmp
test
sahf
cmp
aad
std
mov
mov
xchg
movsb
fnstsw
push
dec
fstps
fisubrl
icebp
cmp
jnp
stc
mov
rclb
gs
hlt
les
mov
cmpsb
aas
dec
adc
mov
add
push
xchg
mov
rcll
cmp
dec
jge
push
ret
jg
push
dec
dec
fldenv
dec
in
mov
jle
fidivrl
test
pop
int
enter
nop
mov
xor
into
xchg
lcall
clc
jecxz
shrb
jns
push
cli
cli
enter
xchg
cld
mov
lods
fsubrl
gs
push
sub
jle
fcomps
les
pushl
and
sub
call
adc
dec
mov
xor
pushf
loop
into
inc
or
or
stos
stc
ljmp
lods
cld
jmp
mov
rorb
or
pop
sub
sbb
dec
es
aas
xchg
cmp
xchg
cltd
mov
mov
shrb
hlt
rcl
push
dec
xchg
rol
enter
mov
push
jb
mov
jg
lret
adcb
lahf
loop
jg
sub
jb
imul
pop
iret
pop
test
fadds
push
cmp
xchg
mov
adc
cmp
adc
jae
adc
mov
sub
sub
mov
and
sub
repnz
sbb
aaa
shll
xchg
lret
leave
repz
fisttpl
dec
sar
sbb
xor
ja
decl
dec
xor
push
ret
int
iret
xchg
loop
mov
shrb
mov
in
scas
andb
fsubrp
clc
imul
adc
data16
jb
pop
lock
mov
mov
lods
sbb
loope
pop
imul
push
mov
dec
sub
sbb
fsubs
or
mov
pop
mov
mov
jnp
dec
scas
add
push
fs
pop
inc
loop
mov
je
pop
adc
and
add
pushf
add
jmp
xchg
sub
inc
mov
pushf
aam
bound
jo
or
push
jge
fwait
jmp
lahf
mov
int
pop
sbb
rcr
lret
push
rcrl
fwait
mov
std
cltd
fadds
pusha
sbb
fsubrl
xor
popa
sbb
insb
repnz
insl
mov
test
aaa
dec
jp
ret
cltd
clc
jae
jo
loopne
xor
rcr
lock
lock
icebp
adc
ss
mov
dec
enter
cmp
fwait
xchg
ficompl
lret
push
data16
mov
sub
pushf
nop
sub
out
mov
jmp
mov
add
mov
aas
push
adc
shr
adc
mov
mov
cmp
imul
adc
xchg
clc
lds
pop
sub
lcall
sbb
mov
mov
push
lods
xchg
inc
hlt
inc
call
pop
mov
in
pop
sbb
xchg
in
jecxz
je
imul
mov
mov
cmpsl
pop
out
or
mov
add
test
scas
pop
unpckhps
push
outsb
es
xor
inc
xor
sbb
pop
xchg
lret
xlat
sti
add
lods
je
jle
icebp
inc
dec
xchg
push
push
stos
iret
repz
mov
bound
push
test
fst
fcomps
sahf
cli
mov
jl
and
mov
and
mov
fiadds
mov
push
insb
mov
fists
and
jge
push
movsl
dec
pop
push
popa
adc
cmp
add
jge
ret
sub
push
add
scas
push
or
cmp
das
outsl
enter
cmc
mov
movsb
xchg
clc
sub
add
adc
shl
inc
outsl
sub
mov
add
repnz
fldenv
outsl
xchg
push
mov
xorl
jnp
push
jle
lcall
sbb
jle
pushl
and
int3
inc
mov
in
adc
ss
cld
push
cwtl
inc
jecxz
ficoml
loopne
sti
pop
sub
push
clc
movsb
das
arpl
out
lock
pop
or
test
enter
jns
out
sbb
jecxz
push
push
ds
mov
add
fs
mov
sbb
mov
push
leave
int3
insl
rorb
sbb
push
les
js
iret
lods
mov
or
xor
push
jno
pop
sbb
rclb
adc
pop
andl
mov
loope
pop
outsb
in
adc
dec
lods
adc
inc
cmp
or
lret
or
mov
es
push
mov
xor
idivl
push
xchg
dec
jo
ret
call
and
jne
sbb
sti
add
add
adc
pop
mov
rorl
mov
ror
xchg
popa
in
jl
daa
fwait
push
jne
or
mov
movsl
xor
adc
das
movsl
push
fmull
sbb
adc
lea
or
jmp
lods
jmp
in
cltd
push
movb
and
stc
sbb
out
out
xchg
data16
lret
fimuls
mov
pop
sti
insl
in
xor
mov
or
call
enter
cld
fstp
addr16
cmc
into
sahf
mov
jno
call
insb
mov
jmp
xor
cmp
sub
xor
fs
popf
xor
adc
gs
out
cmpsb
or
mov
xlat
fistl
nop
mov
jmp
mov
cld
pop
or
repnz
sahf
lods
aam
push
xor
mov
andl
loope
jp
jp
insl
mov
add
xchg
mov
push
push
out
mov
arpl
loope
js
lcall
and
jo
mov
ficoml
aas
xchg
push
sbb
push
mov
or
lret
cmc
xor
addr16
xchg
pop
fcmove
sbbl
push
insl
dec
sub
loope
adc
pop
mov
and
sbb
dec
fdivs
pop
xor
fwait
pop
push
sarb
call
stc
sub
shrb
mov
bound
rolb
fdivrs
push
pop
fimull
jmp
adc
xchg
out
out
push
aad
bound
xchg
repnz
es
jno
dec
mov
push
int3
jo
ret
push
cwtl
enter
fwait
imull
cmp
loopne
push
mov
test
jmp
sub
xor
and
sbbb
pop
xchg
imul
icebp
and
shlb
jp
cmp
test
pop
mov
out
imul
loope
jl
clc
push
rorl
push
jl
out
cmp
icebp
repz
ficomps
inc
ja
outsl
lock
mov
fstl
dec
pop
stos
sbb
xlat
and
dec
jbe
push
jmp
push
sbb
xchg
inc
add
cmpsl
mov
jae
jle
hlt
stos
outsl
mov
add
add
imul
push
xchg
xor
bound
popf
repz
stos
lahf
aas
shlb
xchg
fadds
sub
jge
repz
and
sub
xchg
sub
push
lds
push
jle
loop
sbb
inc
inc
fiaddl
jae
sub
pushf
daa
lret
test
cld
xor
cmp
out
lock
dec
mov
jmp
enter
hlt
add
adc
jp
pushw
cmpsb
push
lret
push
jae
sarb
or
mov
adc
into
mov
aam
shll
jbe
in
push
push
mov
stc
mov
out
pop
lahf
and
out
xor
mov
std
sbb
loope
incl
add
in
clc
sbb
lret
pop
es
dec
mov
icebp
loope
add
mov
mov
or
sbb
and
cwtl
xchg
ror
sub
sbb
push
daa
mov
icebp
nop
dec
jnp
daa
loop
mov
fidivrs
jne
mov
cmp
ljmp
pop
xor
jle
jl
cmp
shl
jbe
stos
fwait
hlt
mov
jp
repnz
adc
dec
mov
out
pop
sbb
pop
call
push
nop
pop
cmp
dec
repnz
inc
jnp
rorb
bound
xchg
pop
out
dec
push
aaa
adc
bound
loop
cmpsb
js
aam
sbb
outsb
in
cmp
adc
sbb
test
or
imul
or
les
pop
pusha
lds
mov
vfrczps
cmp
cmp
jecxz
clc
mov
leave
sbb
xchg
shll
push
push
or
rcl
pop
pusha
pop
iret
mov
inc
stos
cmp
jno
stos
repnz
jnp
adc
push
clc
cld
mov
fbstp
dec
xchg
mov
cmpb
test
mov
loop
rcl
mov
push
pop
jg
or
ret
es
mov
shll
jno
sub
rol
push
inc
ljmp
add
scas
addl
rclb
int
rolb
sub
cmp
stos
es
cmp
mov
out
adc
fs
cli
rorl
push
mov
mov
ds
xchg
adcl
repnz
pop
out
sub
iret
cmp
push
jb
xchg
jo
add
dec
push
stc
cmc
stc
fsubs
sbb
clc
loope
outsl
mov
imul
push
mov
adc
mov
decb
mov
pop
daa
icebp
cmc
movb
push
mov
xchg
mov
push
ret
loop
lods
mov
rolb
je
dec
push
jl
stos
mov
push
sub
leave
xlat
jne
adc
dec
out
ljmp
int3
xchg
out
or
push
or
cmp
out
jp
dec
fsubr
in
inc
xchg
ljmp
mov
hlt
ljmp
mov
mov
cmp
xor
pusha
mov
test
ljmp
ljmp
arpl
in
push
stos
in
lret
test
mov
xchg
mov
and
fisubrl
call
cwtl
mov
dec
or
sbb
or
and
cmp
cmp
subb
mov
es
sbb
cmpsb
add
xchg
outsl
ret
mov
out
std
ljmp
adc
addr16
push
cld
xchg
fwait
in
xchg
in
and
mov
into
cmc
outsb
out
lret
dec
add
fdivl
sub
add
xor
jmp
fdivrs
cmp
movsb
clc
nop
movsb
mov
and
push
clc
cmp
push
jbe
sub
add
mov
pusha
fadds
or
jae
cmp
mov
popa
mov
mov
lods
dec
sahf
mov
sbb
lods
mov
out
cmpl
dec
jmp
inc
mov
sarl
test
test
xchg
push
in
push
into
xchg
fmull
pop
aam
push
gs
jecxz
sarb
adc
mov
add
xchg
sub
jl
inc
mov
cltd
adc
push
enter
mov
add
lahf
in
pop
sub
or
out
nop
inc
xchg
mov
push
movq
mov
ss
cmpsl
jbe
sbb
das
sbb
nop
jno
fcmovne
icebp
es
xchg
loop
sbb
int3
fistpl
jne
inc
or
sub
mov
pop
outsl
scas
cmp
xchg
and
inc
outsl
insl
jae
jno
xlat
stc
push
inc
mov
cwtl
scas
add
int3
adc
sub
push
xchg
sub
add
dec
jmp
enter
jge
cmpsb
or
fwait
cld
xorb
pop
mulb
and
shll
ret
add
inc
dec
sti
sti
int3
sahf
in
ficoml
cmp
loopne
dec
sahf
xchg
cmp
mov
in
enter
mov
push
incb
xchg
jno
lds
outsl
ja
mov
fiaddl
fidivrl
ficompl
es
and
jmp
inc
test
imul
fldl
mov
push
gs
ret
push
dec
inc
xchg
mov
out
inc
cmp
mov
push
lods
xchg
sarb
call
adc
pop
adc
cltd
sub
dec
or
inc
dec
xchg
mov
outsl
addr16
jle
adcb
xor
gs
xor
mov
imul
call
pop
mov
hlt
or
test
cwtl
imul
sub
push
pop
cmp
jecxz
mov
ds
arpl
lret
aas
mov
popl
sahf
insb
cmp
insl
repz
mov
mov
adc
repz
jmp
jecxz
mov
in
scas
cmp
mov
daa
mov
pop
lock
cmp
popf
add
loope
push
ljmp
shll
je
dec
xchg
jmp
repnz
rcrl
mov
add
lods
cld
push
inc
fidivs
clc
jae
push
je
and
out
jo
jne
jnp
in
or
stos
fsubp
cmc
dec
push
adc
jp
test
cmp
adc
out
pop
andl
pop
jl
xchg
pop
pop
decl
lcall
movsb
sbb
in
sub
dec
pop
adc
jle
mov
add
scas
cld
pop
aas
cmp
inc
sub
push
mull
jl
lock
mov
mov
dec
jmp
mov
push
scas
xor
mov
jmp
push
ds
daa
fstl
ss
sbb
xchg
push
sbb
into
inc
lods
mov
add
mov
cmp
inc
adc
std
xlat
rcr
jmp
sti
hlt
psllq
sbb
subb
fst
ljmp
leave
adc
jbe
cmc
lcall
int
nop
shlb
imul
call
push
cs
mov
push
jne
mov
orb
cmpsb
stos
roll
lret
inc
adc
inc
sahf
xorb
sbb
push
and
sbb
fmull
xchg
inc
loope
lret
add
push
pop
out
mov
and
and
lret
mov
out
outsb
mov
fs
push
pop
lods
fsubrp
add
jbe
dec
sub
lret
adc
mov
mov
dec
xor
cmp
test
inc
xchg
js
sub
rcrb
dec
or
fdivp
sahf
stos
xchg
pop
aam
in
ja
in
jns
mov
addr16
mov
aaa
or
jecxz
decl
jne
mov
mov
inc
mov
add
sahf
inc
and
push
ljmp
mov
ss
in
xchg
fdivr
push
lret
mov
pop
cwtl
push
enter
or
sarl
pushf
leave
and
or
rcrl
outsb
fs
sarl
mov
bswap
stos
push
outsb
mov
push
insb
negl
sub
popf
xor
fs
cld
jne
push
xorb
xor
loop
or
jnp
sti
and
xchg
or
pop
jo
notl
jno
add
jno
mov
xor
push
bnd
cmc
into
mov
clc
or
int3
or
in
je
dec
dec
xchg
xchg
cli
push
iret
mov
adc
les
dec
dec
pop
or
test
inc
dec
into
daa
xchg
movsl
imul
cltd
rcrb
fcoml
outsb
clc
faddl
mov
xchg
push
lahf
int3
and
add
jae
pop
cli
outsl
arpl
in
stos
mov
add
decl
sbbb
sbb
push
loop
push
shrb
idivl
out
pushf
lret
addr16
mov
ficoml
cwtl
adc
insb
pop
mov
adc
mov
mov
aam
push
in
mov
pop
mov
pop
add
inc
stc
adcl
jno
hlt
into
add
jp
subb
xchg
hlt
ja
and
sbb
ja
repz
xchg
mov
lods
loop
sub
ja
xchg
cmp
movsb
inc
inc
inc
xor
stc
sub
gs
dec
repz
mov
mov
insl
daa
fdivrs
jl
ud0
cmp
in
mov
lds
jl
pop
dec
rolb
sub
pop
push
add
mov
or
idiv
outsl
aad
mov
mov
and
adc
fisttpll
das
mov
scas
add
mov
push
adc
sarl
lods
sbb
xchg
not
xchg
dec
repnz
orb
inc
mov
and
sbb
push
jp
les
pop
aas
cmp
jno
lds
xor
mov
pushf
jbe
push
fwait
push
mov
fwait
sahf
sbb
out
pop
add
icebp
aam
sub
sub
jmp
or
dec
shlb
mov
jle
mov
movsb
mov
add
mov
cmpsl
xchg
mov
mov
xchg
mov
mov
insb
lods
out
outsl
push
cmpsl
add
arpl
sub
inc
xor
jg
cmp
sahf
mov
in
insl
into
nop
sub
sbb
pop
imul
xchg
mov
inc
out
sti
mov
adc
jge
pop
rorb
fs
fimull
xchg
xor
cmpsb
shrl
arpl
addr16
ficoml
cwtl
sbb
mov
fsubrs
xchg
jmp
cmp
and
ljmp
arpl
and
in
lret
aam
mov
clc
xchg
mov
cs
mov
inc
mov
and
fisttps
and
call
push
je
and
in
das
push
mov
inc
or
add
mov
or
mov
sbb
shl
pop
and
out
push
sbb
and
mov
cld
pushf
in
cltd
push
cld
lods
icebp
xchg
inc
gs
pop
dec
sub
xchg
aas
insb
test
pop
push
int3
fstps
mov
adc
adc
cwtl
stos
idiv
mov
roll
fcoms
inc
lods
adc
enter
out
inc
decl
cmp
jmp
stos
xchg
das
pop
sub
mov
pop
add
imul
fnstsw
sbb
sbb
fwait
or
flds
fists
addr16
xchg
fs
bnd
imul
and
je
inc
pop
dec
pop
out
xor
decl
icebp
sub
ss
shlb
enter
pop
int
xor
and
cld
or
inc
sbb
ds
lcall
lock
bound
faddp
iret
dec
in
pop
lret
cmp
xor
sbb
je
out
loopne
jno
cmp
iret
pop
mov
jp
ficoms
xchg
mov
cmp
ret
loopne
dec
mov
es
test
test
lods
jle
test
cmpsl
inc
movsb
dec
jno
jno
mov
sbbl
mov
pop
jge
inc
movaps
movsl
fsubrl
movsl
stc
fs
addb
push
notb
and
nop
push
lock
fnstsw
cmpb
test
jmp
mov
les
cmp
sbb
inc
sahf
insb
adc
andb
mov
outsb
rcll
cmpsl
cs
aam
mov
les
enter
shl
loop
divb
scas
fldt
jnp
inc
pusha
fwait
xchg
insl
mov
addb
cld
mov
jns
mov
insb
fstpl
test
cld
fmulp
repnz
ss
add
xor
pop
jle
scas
push
inc
cmpsb
ret
pop
push
jno
pop
adc
mov
push
or
test
fs
sahf
leave
mov
call
fdivrp
xchg
pop
and
xchg
inc
movsb
xor
pop
cmp
adc
bound
lods
mov
lahf
sub
or
outsl
out
sbb
mov
in
push
sbbl
sub
dec
stc
aad
dec
lcall
xor
cmp
fmull
rorb
add
adc
inc
ficoms
mov
clc
leave
sbb
ds
xchg
cmpsb
adc
sbb
in
stc
adc
xchg
xchg
mov
jnp
mov
sbb
stos
rol
dec
sub
mov
aad
lret
das
iret
mov
xor
arpl
jno
xchg
ja
cs
sub
ljmp
aam
xchg
ret
dec
sbb
js
pop
ss
push
sti
add
test
cmp
fdivl
inc
mov
jnp
xlat
dec
jecxz
inc
es
ja
cmpsl
repnz
pop
out
jnp
and
mov
js
sbb
xchg
inc
mov
bound
out
xchg
adc
gs
adc
nop
cli
jg,pt
stos
popf
cmpsb
sbb
mov
sub
cmpsb
fisttpll
out
inc
and
outsl
xor
clc
mov
lods
loopne
cmp
jnp
inc
stc
lods
mov
jl
fcmovb
and
test
outsb
stos
adc
inc
icebp
sahf
or
aad
cs
negb
and
insb
mov
int
pop
pop
xor
mov
push
test
inc
xchg
mov
jecxz
enter
pop
sbb
dec
aas
adc
pushf
mov
lret
pop
jle
dec
fdivrs
test
mov
jns
lahf
and
inc
mov
test
jno
icebp
test
and
pop
add
push
popf
cmp
adc
adc
xchg
fiaddl
push
add
aas
negb
jmp
mov
push
sbb
pop
jae
sbb
add
xchg
popf
in
incl
clc
push
imul
int
sbb
mov
lock
xchg
cmpsl
jecxz
push
hlt
pop
jnp
mov
in
daa
ret
sbb
cld
ficomps
jb
in
sti
mov
cmp
adc
mov
add
or
in
fmuls
pop
inc
xchg
jbe
mov
cltd
xor
jo
cmpsl
xor
loopne
negb
push
fcmovne
or
and
adc
add
mov
xorb
xor
push
and
cltd
mov
xor
sbb
call
sbb
adc
add
in
or
push
mov
cmpb
addr16
inc
sbb
dec
pop
mov
movsb
cmpsb
pop
xchg
mov
and
dec
pop
sub
jnp
call
inc
cltd
or
aaa
and
or
mov
sbb
mov
xchg
loopne
leave
cld
enter
cmc
mov
shr
pusha
out
or
mov
sub
pop
and
and
js
push
aas
pop
push
mov
int3
mov
jmp
ds
xor
push
adc
add
cmp
inc
in
push
call
ja
ds
outsb
cs
sub
or
lea
and
and
adc
xchg
in
fidivrl
aad
neg
cmc
and
dec
or
cmpsl
xchg
repnz
mov
jae
jle
std
int
daa
loop
cmp
mov
mov
add
fldt
ja
push
hlt
cmp
cmp
je
mov
lahf
adcb
sbb
ljmp
cli
push
xor
cmp
mov
xchg
pop
mul
sbb
push
xor
pop
xchg
sar
icebp
addr16
das
or
repz
in
sub
cmp
scas
inc
ss
mov
loop
sbb
ljmp
mov
mov
xchg
adc
pushf
sub
push
fwait
in
arpl
pop
repz
cmpsl
ds
hlt
mov
movsb
pop
out
stc
mov
mov
jbe
jle
clc
arpl
stos
aad
and
cmp
mov
rcrb
js
xchg
or
arpl
nop
ss
mov
adc
jbe
ret
jle
aaa
push
jge
xor
push
movsl
addr16
or
fwait
dec
adc
loopne
adc
std
sbb
in
daa
lret
mov
jge
xchg
pop
push
push
je
out
pop
jg
mov
lahf
add
jmp
cmp
cli
mov
aas
lods
unpckhps
inc
mov
xchg
and
cwtl
mov
fsubs
mov
sbb
addl
inc
jns
insl
imul
stos
or
das
xchg
push
push
dec
dec
mov
push
xchg
lods
xchg
adc
loopne
xchg
sub
rcr
jmp
or
lods
pop
subb
jmp
inc
mov
addr16
fistl
lret
adc
jge
lock
cwtl
xor
push
jp
int3
shlb
pop
movsb
fsubl
push
jge
imul
inc
out
or
jecxz
pop
fdivrp
sub
jo
sub
mov
sahf
push
ret
roll
sub
cmc
mov
mov
or
in
inc
and
aas
mov
lock
xor
fs
jge
pop
jl
push
cwtl
in
subb
cmp
dec
mov
inc
imul
in
pop
dec
stc
stos
in
test
stc
es
jl
jle
sahf
jno
stc
mov
mov
jnp
in
mov
scas
jns
daa
outsl
out
pushf
dec
jmp
lods
movb
push
out
sbb
clc
fcoml
mov
cmp
inc
loop
pop
xchg
insb
inc
mov
js
in
popf
xor
sub
sbb
mov
jns
cmpsb
in
stos
cltd
cmp
popf
cld
mov
or
lret
enter
loopne
dec
pop
and
or
cmovl
dec
test
jbe
inc
imul
out
out
adc
dec
frstpm(287
dec
cmc
push
hlt
popl
xchg
pop
push
or
push
hlt
push
adcb
mov
stos
push
push
or
pause
xor
jge
je
je
pop
rorl
and
xor
aad
pop
pop
xchg
bound
insb
jp
cmp
mov
dec
insb
test
addr16
out
in
addr16
push
dec
mov
inc
test
jle
inc
insb
aaa
arpl
jecxz
loope
push
fcmovb
and
mov
xorl
je
jl
scas
mul
pop
not
scas
push
scas
xlat
adc
inc
xor
mov
outsb
frstor
aaa
pop
xchg
repnz
xor
cli
movsl
jnp
pop
jl
popf
incl
insb
sbb
pop
je
loopne
cmp
in
mov
repnz
add
rcrl
sbb
bound
sarl
repz
out
subl
xchg
jbe
dec
call
mov
scas
movsl
mov
xchg
push
and
cmpsl
sar
lods
mov
xor
add
adc
mov
mov
imul
fisubrl
fst
lds
pop
sbb
fists
clc
pop
jl
fs
inc
mov
cmp
test
adc
and
in
lret
push
and
dec
aaa
xor
loope
test
lcall
add
das
fcmovbe
idivl
sar
pop
push
cmc
nop
push
jnp
lods
adc
pop
in
fimuls
push
cmp
dec
sbb
setno
pop
imul
out
adc
pop
sbb
mov
movsb
ja
cmpsl
push
xchg
push
pop
cld
jl
push
fiadds
int
mov
jbe
sub
or
sub
into
fsubs
push
rolb
in
cwtl
mov
fsts
pop
aaa
jp
xchg
fistl
mov
test
jle
push
int
test
cli
scas
stc
mov
inc
mov
inc
movsb
ret
cld
js,pn
pcmpgtd
cwtl
cmpsb
sub
mov
shll
mov
dec
cmp
mov
jp
js
lret
pop
fsubl
shl
test
xor
sub
sub
pop
lahf
or
leave
ret
addl
cmpsb
jbe
ds
icebp
vcvtdq2ps
sub
repz
xlat
sub
pop
stc
lods
and
insb
push
lea
push
pop
int3
and
int
movb
out
lahf
push
push
test
mov
loope
xor
sub
mov
pop
in
repz
mov
pop
mov
cmp
aas
dec
vsubss
ss
roll
in
jp
adc
test
movl
stos
out
xor
insl
pop
inc
inc
into
pop
mov
mov
roll
movsb
ljmp
gs
loope
add
mov
enter
enter
popa
xchg
mov
add
cmc
push
test
movsb
ja
pop
loop
ss
mov
pop
cs
test
push
mov
les
fsubrl
bound
jmp
adc
std
pop
incl
jns
mov
mul
rorl
aam
gs
iret
mov
leave
mov
mov
nop
pop
hlt
xchg
lods
mov
or
inc
jmp
pusha
adc
or
cmp
and
cmovg
push
xchg
xor
in
push
fwait
jno
pop
or
filds
fwait
push
loopne
xchg
cltd
inc
pop
insl
loope
cmp
mov
push
popf
loop
sub
cmp
loop
pop
xchg
gs
rcrl
push
push
in
xchg
dec
dec
inc
xlat
lods
inc
das
xor
xlat
push
mov
mov
out
popf
ss
ljmp
les
adc
jns
cli
lods
mov
rclb
loope
and
jae
pushf
in
mov
imul
add
and
cmpsb
xor
pop
jne
lds
bswap
movsb
cmpsl
sahf
loop
fsubrl
pop
push
sbb
and
cmp
and
aad
es
push
sbb
adc
mov
ljmp
cltd
notl
mov
push
cld
xlat
adc
cwtl
ss
add
jmp
sub
jecxz
mov
fsts
add
pop
ror
fsubrs
and
in
imul
jne
iret
jle
inc
clc
cmp
lea
cltd
lahf
movsl
sub
jp
scas
xchg
mov
cmp
out
rcr
outsl
pop
mov
push
add
cmp
push
xor
ljmp
xchg
repnz
mov
lcall
push
mov
or
test
jmp
icebp
and
leave
and
es
nop
sbb
jnp
jo
ljmp
vpcmov
std
inc
push
inc
add
dec
cmp
xor
loopne
cmp
loop
hlt
jae
cmp
xchg
jecxz
outsl
test
xchg
or
push
sbb
aas
mov
xchg
adc
mov
or
push
aad
push
and
insl
push
and
std
push
mov
out
xchg
gs
jae
roll
xchg
xchg
mov
stc
pop
inc
inc
push
lods
xchg
imul
outsb
iret
push
or
sti
out
fucom
and
pop
popa
mov
ret
adc
or
leave
jnp
push
cwtl
mov
stos
push
sbb
sub
xor
aad
and
mov
cli
xchg
pop
pushaw
pop
jne
push
sbb
fwait
stos
data16
rcll
dec
hlt
lcall
das
jl
enter
mov
faddp
cwtl
pop
and
into
xor
fdivp
fidivrl
sti
and
ret
dec
out
mov
subb
jmp
adc
rep
jne
lahf
int3
dec
fisttpl
mov
pop
mov
xor
js
ja
mov
sbb
les
add
add
mov
push
pushf
jae
xor
mov
push
out
es
push
adc
mov
roll
scas
push
and
add
mov
test
adc
pop
lock
xchg
or
test
jnp
mov
jns
pop
scas
pop
dec
imul
les
push
xor
jns
jno
stc
jbe
fistl
popf
into
mov
adc
sub
dec
and
jg
push
xchg
inc
ljmp
pop
jae
jbe
inc
or
pop
in
inc
outsl
xor
and
push
cld
dec
xorb
push
in
ror
repz
lea
enter
pop
dec
and
sbbl
xchg
jno
imul
roll
cmpsb
cmp
dec
jle
filds
mov
cmp
aam
mov
mov
test
ds
jae
gs
xchg
and
test
mov
movsl
or
mov
scas
xchg
mov
mov
push
mov
imul
nop
cmpsl
into
in
mov
lock
mov
leave
rcrb
fwait
xchg
adc
popl
mov
gs
faddl
or
mov
and
pop
xchg
jge
add
jp
xchg
test
ss
leave
jg
test
mov
fisttpl
hlt
sub
add
mov
dec
inc
lret
pop
shr
iret
data16
hlt
test
push
shll
pop
jae
mov
es
fsubrl
je
and
rcrb
jmp
push
repz
pop
test
movsb
mov
out
shrb
in
repnz
cli
adc
pop
cli
filds
aad
adc
mov
fidivl
clc
push
ja
jmp
cmp
sti
sbb
dec
js
stos
cmp
jmp
mov
imul
icebp
out
into
iret
sahf
loope
adc
push
ja
scas
testl
ljmp
pop
xor
adc
bound
ret
sbb
imul
mov
sbb
cmpsl
cld
dec
mov
jmp
test
mov
stc
xor
lods
orl
jg
insl
dec
pop
movsb
and
dec
scas
sub
sbb
or
popl
out
pop
insl
jge
pop
pop
xchg
fst
rcll
outsb
or
shlb
jg
pop
mov
mov
mov
inc
pop
xchg
mov
and
lods
test
and
stos
imul
repnz
xor
push
repz
rcrb
js
mov
mov
mov
sub
mov
aad
sub
cmp
addb
and
fwait
mov
add
in
test
xor
add
mov
adc
mov
je
push
movsl
icebp
add
add
vpcmpgtd
cmc
xchg
mov
and
lods
test
test
mov
imul
push
sbb
jp
nop
rorl
pop
cwtl
or
jb
shll
mov
std
daa
jecxz
cli
cwtl
or
sub
inc
call
and
mov
add
pop
push
stos
aad
jl
mul
jbe
xlat
xor
loop
ficoml
test
stc
jae
out
imul
and
jnp
mov
cmc
mov
test
mov
pop
js
add
push
push
pop
jo
xchg
lds
push
push
out
pop
stos
adc
cwtl
xchg
rcrb
imul
jge
adc
stos
inc
lahf
daa
sbb
icebp
inc
imul
test
sbb
jmp
xchg
jp
xchg
or
in
out
mov
xor
ljmp
push
cmpsl
loope
sbb
fnstsw
test
in
popl
xorl
fs
or
xchg
adc
imul
jg
adc
movsb
jecxz
faddl
std
push
shll
inc
mov
jne
cwtl
inc
adc
hlt
xor
add
add
cli
mov
jmp
cmc
inc
xchg
xlat
pop
scas
loop
js
sub
data16
cli
xchg
xchg
andps
and
inc
mov
sub
push
dec
jb
mov
pop
or
inc
dec
push
lcall
cld
mov
fadds
sub
mov
inc
lds
mov
dec
mov
sbb
fs
push
ret
push
stos
adc
xor
into
nop
jno
pusha
mov
or
rcrl
mov
sub
inc
aam
inc
ja
mov
mov
jne
shlb
push
fmul
cld
pop
scas
mov
add
inc
outsl
je
dec
inc
jecxz
add
dec
ss
cmpsl
and
test
inc
decb
xchg
ja
adc
pushf
aad
or
adc
ret
sbb
lods
es
out
loope
xor
mov
lods
imul
push
negl
or
mov
push
insl
addr16
mov
std
daa
inc
cmp
lods
sbb
xchg
xchg
jge
iret
mov
push
ljmp
cwtl
ficoms
fcomi
inc
jp
shlb
test
pushf
pop
push
adc
cmp
inc
mov
adc
in
xchg
pop
in
sti
cmp
arpl
movsl
call
mov
ret
incb
mov
pop
xchg
iret
leave
hlt
test
xchg
movd
xchg
and
ds
addr16
movsb
aas
gs
hlt
mov
inc
mov
nopl
or
pop
push
mov
push
inc
sub
pop
adc
xor
push
push
cmp
lock
cmp
and
nop
iret
pop
and
rcrl
dec
pop
lods
lahf
dec
push
aam
test
outsl
xlat
sbb
in
mov
lahf
push
xorb
xchg
sbb
test
inc
mov
test
hlt
jo
mov
enter
and
jbe
adcb
mov
push
leave
jl
inc
pop
jno
adc
jl
or
hlt
lods
lods
mov
aaa
xor
insl
inc
sbb
or
mov
ret
mov
orb
jbe
inc
adc
xchg
fisubl
in
fistpl
mov
mov
out
xor
mov
pop
addb
setge
inc
pop
and
enter
pop
shlb
mov
sbb
inc
std
adc
js
xor
add
enter
inc
cmpsb
sbb
test
dec
jmp
and
sti
mov
clc
hlt
sub
xchg
lcall
mov
cmp
pop
loope
cmp
loopne
sbb
jp
dec
mov
sbb
lods
mov
and
add
pop
fcomi
or
lahf
insl
sbb
lods
loopne
push
movsb
pop
dec
jp
vhaddpd
push
in
add
mov
out
inc
sub
enter
fdiv
test
add
icebp
mov
pop
cmpsb
es
push
push
out
into
xchg
rep
test
ljmp
push
imul
pusha
in
adc
cmpl
push
xchg
lods
shlb
ret
in
cmc
gs
test
jg
in
mov
adc
les
inc
mov
lods
dec
xor
cltd
imul
xorl
leave
cmp
cwtl
adc
adc
and
insb
pop
std
add
loop
scas
fisubs
les
xchg
xchg
xor
test
js
movsb
hlt
cmp
fdivrs
push
mov
jecxz
int
pushl
call
push
dec
dec
xor
test
mov
inc
xchg
cmp
push
or
out
jle
pop
jecxz
fsubs
daa
mov
out
gs
loop
movups
push
jle
loopne
mov
jns
ds
xchg
mov
lea
xchg
cli
and
ret
and
mov
adc
fistpl
xchg
jmp
inc
int3
push
je
clc
xorb
sbb
jo
push
fdivs
sbb
std
ds
sahf
es
mov
test
mov
nop
test
or
mov
imul
iret
dec
jae
stos
inc
scas
faddl
jg
icebp
pop
xchg
gs
sbb
sti
and
stc
cmp
push
testl
aad
hlt
fadd
mov
dec
or
or
pop
ljmp
movsb
movsl
je
test
jne
push
stos
mov
cs
stos
out
xor
ds
fdivrl
inc
push
push
jb
cmovb
or
dec
pop
mov
sti
out
sbb
xor
or
jge
rcrl
aam
fistps
imul
imul
sub
das
jl
scas
popa
cmpb
movsl
stc
lahf
pop
popf
int3
cli
in
cmp
mov
pop
leave
orb
mov
fsubp
sub
inc
mov
lock
add
scas
mov
inc
cmpsl
fstpl
sub
or
enter
arpl
sbb
mov
cmpsb
inc
es
repz
sub
sarb
or
jb
inc
inc
mov
mov
ficoms
and
cld
cmp
shl
test
rorl
mov
das
xchg
bnd
in
jns
add
fdivrs
pop
jbe
inc
leave
popf
mov
inc
daa
push
mov
es
je
cmpsl
cmpsb
or
cmpsl
hlt
std
adc
push
mov
int3
insb
sbb
arpl
ret
fdivrl
mov
sub
lods
mov
cwtl
push
add
ds
shr
and
xchg
mov
scas
loop
adc
popf
cmpsb
sbb
test
pushf
cwtl
add
xor
mov
push
push
or
daa
inc
xchg
lock
ljmp
hlt
outsb
test
pop
das
push
sahf
arpl
cs
pop
outsb
push
stos
fildll
pop
adc
out
int3
out
and
inc
xor
pusha
andl
into
aas
add
aaa
ja
sub
sub
aas
bound
sub
xor
cmp
add
xor
jae
or
mov
gs
repz
dec
mov
lret
arpl
cli
loopne
mov
pop
xchg
push
cwtl
nop
int3
push
mov
push
push
lahf
fidivrl
iret
stos
rclb
dec
lock
inc
mov
inc
out
rolb
jge
mov
popf
inc
ret
iret
jle
cmp
or
dec
inc
push
jae
add
pop
inc
push
mov
mov
jb
inc
xchg
sbb
mov
addb
dec
sub
jle
add
jecxz
xor
aad
xchg
sti
dec
das
push
lret
adc
jo
cmpsl
rcrb
xor
mov
mov
push
jmp
dec
jb
repz
sbb
movsb
mov
add
stos
fsub
es
repz
and
inc
fsubr
jmp
push
cld
repz
push
adc
inc
gs
ss
addr16
xor
jnp
dec
pop
adc
je
sbb
sti
gs
out
xchg
jb
adc
or
in
mov
sbb
cmp
pop
jns
push
pop
lret
pusha
pop
fldt
leave
iret
jl
stos
stos
cmp
add
sbb
mov
pop
repnz
ss
insb
sub
popa
cmc
mov
mov
dec
mov
mov
xor
mov
mov
push
inc
ja
ret
mov
push
adc
movsl
jle
incb
movsl
aas
subl
pop
mov
inc
jmp
subl
repnz
inc
cmp
push
sub
rorl
imul
xchg
lret
in
xchg
add
testl
popf
fwait
pop
mov
dec
dec
loope
xchg
movsl
fs
test
xor
adc
test
cmp
repnz
aas
jno
cld
add
push
out
xchg
mov
leave
mov
imul
xchg
aas
xchg
and
lods
pusha
call
pop
pop
rorb
push
into
dec
fwait
inc
sarl
jmp
or
arpl
xor
adc
jl
pop
mov
pop
pop
in
rclb
pop
and
or
push
je
testl
cmp
inc
arpl
test
shll
ficompl
cli
cmc
cmc
ret
sub
lcall
xchg
pop
mov
int3
sbb
inc
das
push
outsl
insl
pop
jae
rcl
jecxz
cmp
xlat
pop
test
mov
mov
cld
jbe
and
mov
sbb
lods
test
xchg
clc
mov
mov
out
xchg
mov
sbb
xchg
mov
pop
arpl
cltd
add
push
cli
xchg
push
cli
jp
iret
pop
jb
mov
mov
jge
addr16
aad
and
mov
cmpsb
and
xchg
xor
lods
adc
movb
push
scas
push
enter
mov
sbb
jmp
dec
lea
rorl
insb
mov
pop
shrl
dec
dec
shl
push
dec
in
lods
push
out
inc
jle
and
loope
addr16
pop
mov
fs
mov
sub
pop
xchg
in
jns
jmp
mov
adc
dec
jl
xor
xor
cwtl
mov
or
jl
aad
pop
jmp
call
ficoms
xchg
adc
pop
cwtl
arpl
fsubr
cmp
push
mov
test
mov
out
daa
mov
add
mov
stos
jns
mov
ljmp
pushf
js
repz
lods
adcb
and
dec
sbb
mov
mov
xor
dec
pop
push
jge
sti
movl
aam
mov
pop
mov
shrb
jl
sbb
cmp
push
mov
ja
add
aas
pop
xlat
lods
inc
mov
sub
int3
inc
adc
popf
jns
popf
repz
push
cwtl
mov
je
repnz
or
xchg
lds
inc
pop
fmuls
xor
in
pushl
out
int
into
jo
and
sub
pop
scas
nop
mov
movsl
sti
xchg
idivl
or
lcall
sub
xor
fisubs
jge
mov
jge
inc
dec
jne
inc
aaa
lcall
mov
and
nop
cmp
dec
cmp
jge
mov
add
out
ss
add
data16
es
sub
cli
and
add
daa
sti
cld
add
jne
mov
sub
out
or
stc
insb
jg
xchg
sub
jecxz
out
scas
insl
fistpl
mov
stos
add
mov
xor
nop
leave
and
aas
adc
lea
push
jmp
sub
lret
pop
std
les
cmp
test
push
push
loop
jmp
jb
adc
ljmp
xchg
xchg
sti
lods
inc
lods
into
sbb
mov
and
push
xchg
mov
cs
mov
push
sbb
xlat
rcrl
sbb
or
dec
imul
mov
ret
mov
cwtl
mov
jae
addl
jmp
push
dec
scas
sbb
add
pop
stc
xor
mov
mov
imul
out
ds
add
dec
jb
inc
sbb
iret
mov
ret
ret
jmp
mov
in
dec
add
mov
xchg
and
xchg
jmp
hlt
xchg
add
inc
sub
divb
mov
outsb
xchg
or
out
or
push
call
mov
xchg
xchg
pop
inc
mov
and
je
sub
outsb
add
xlat
sub
pushf
repnz
hlt
rol
cmpsb
adc
stos
push
and
stos
jge
add
imul
cmp
jecxz
or
sub
cmp
xorb
inc
clc
stos
mov
adc
mov
mov
std
xchg
mov
stos
xorb
aas
lret
pop
lahf
inc
arpl
adc
testb
cmp
and
jp
pop
out
stos
popa
push
cltd
sbbb
in
mov
jle
loopne
clc
call
xor
dec
inc
pushf
fisttpl
adc
call
and
add
adc
repnz
cmpsb
and
push
mov
cli
mov
inc
mov
jl
sbb
cwtl
je
ja
daa
arpl
push
stos
lds
movsl
xlat
and
cmp
sbb
jno
mov
lret
in
xchg
pop
xchg
test
cmp
movsl
jecxz
movsb
jl
xor
cmp
inc
inc
fistpll
outsl
push
push
pop
inc
test
adc
dec
pop
and
add
inc
lret
lods
movsl
int3
pushf
in
cltd
ror
pushl
cli
or
push
and
popf
mov
or
imul
sub
repz
cwtl
sti
out
mov
mov
inc
pop
out
enter
mov
adcl
cmc
bnd
mov
lds
daa
setbe
andb
insl
outsb
and
cld
and
and
inc
xchg
clc
rcr
jp
out
out
pusha
insl
rcrl
sarl
in
fld
xor
add
dec
mov
lods
out
scas
out
push
loop
psrld
mov
and
out
and
sahf
pushl
jecxz
lods
stc
incl
and
dec
enter
iret
mov
imul
mov
pop
dec
std
rcll
sbb
sbb
xchg
int3
xchg
notb
sub
leave
ja
sbb
mov
push
scas
push
push
mov
test
pop
daa
push
xor
cmpsl
adc
jp
je
adc
pop
mov
mov
pushf
mov
add
ror
pop
dec
enter
je
mov
add
xlat
int
aam
stos
jb
or
or
xabort
das
push
xchg
cmpsb
pop
hlt
dec
push
mov
repnz
lds
int
mov
in
cltd
pop
adc
int
fimuls
ficoms
sub
ljmp
loope
rcll
cli
sub
and
xor
movsb
testb
adc
call
fwait
insl
in
popf
and
shlb
test
jecxz
pop
inc
or
lea
and
mov
mov
cwtl
xchg
sbb
cmp
cmp
call
inc
stos
sbb
pop
jmp
mov
adc
mov
cmc
xchg
pcmpgtb
stc
test
aaa
les
push
je
inc
push
pop
pusha
ret
adc
xchg
repnz
repnz
dec
loopne
loopne
loopne
loopne
push
cltd
dec
dec
push
inc
insb
ds
xlat
test
stos
popf
int3
lcall
or
mov
fnsave
fbld
dec
push
mov
sub
dec
shlb
push
loop
add
ja
add
lahf
movsl
inc
aad
xchg
dec
pop
mov
ljmp
adcb
cld
mov
gs
add
ds
push
test
jbe
dec
shlb
add
out
pop
das
adc
call
adc
sbb
sbb
cltd
in
loope
push
sub
lret
cmp
sub
and
jo
push
pop
int
or
lret
das
xor
movsb
dec
mov
lret
xchg
adc
stos
fadds
test
mov
pop
ficoml
mov
push
mov
xor
mov
mov
je
cmp
cltd
jbe
repnz
push
xor
jg
adc
push
lret
fwait
lea
xchg
adc
pop
arpl
insb
pop
pop
add
push
mov
mov
add
adc
inc
add
jecxz
pop
jmp
arpl
xchg
cltd
dec
ds
lea
in
jae
lods
cmpsl
cmp
movsb
and
sub
cmp
xor
or
mov
push
scas
out
inc
pop
int3
push
or
dec
mov
sbb
jmp
pop
jge
push
xlat
jno
xchg
and
insl
hlt
fs
push
lds
ret
mov
push
mov
push
insb
jbe
and
dec
xchg
jg
mov
adc
push
and
popa
xor
or
dec
pop
cmp
push
cs
jbe
in
outsl
rorl
out
dec
cmp
loopne
mov
mov
lds
ss
insl
xlat
fwait
rcrl
insb
movsb
daa
hlt
xchg
insl
cli
fildll
sbb
test
pushf
sbb
or
jae
inc
or
cwtl
aas
insb
clc
loopne
and
sbb
icebp
int
mov
mov
jle
and
cmpb
sbb
loop
aam
jl
xor
shrl
push
mov
mov
je
fcmovnbe
in
mov
adc
jp
outsb
inc
shlb
fstl
mov
jecxz
add
daa
mov
jp
xchg
jecxz
cwtl
test
adc
fbstp
mov
mov
test
mov
testb
out
pop
and
iret
in
xor
call
push
mov
cmpsl
sub
xchg
sub
shlb
cmp
aas
test
js
add
sub
dec
sub
sub
sbb
mov
jp
lds
test
outsl
push
data16
lcall
jge
jg
lcall
cwtl
data16
mov
mov
movsl
mov
add
js
shl
pusha
nop
sbb
push
loope
aaa
fistl
cltd
out
pushf
inc
adc
cmp
dec
sub
pushf
and
std
mov
xchg
mov
clc
shl
add
lret
fisttpll
cmp
cmp
and
jbe
fsubl
lcall
xor
js
or
cmp
add
adc
push
push
xlat
mov
test
gs
jae
outsb
mov
xor
dec
mul
pop
addr16
cmp
out
push
cltd
roll
stos
add
xor
scas
fidivrl
pushf
fisttps
push
test
xor
sbbl
jbe
pop
lds
clc
test
push
std
adc
add
mov
es
roll
bound
dec
pop
add
lds
cs
imul
mov
scas
sub
xor
decb
mov
mov
sbb
lret
xchg
inc
jecxz
test
icebp
clc
std
ja
pop
xor
fists
ds
fisttpl
pop
popf
push
pushf
mov
jl
clc
xor
mov
sub
arpl
inc
and
cmpsb
addr16
cmp
in
jmp
rolb
sbbb
mov
cs
clc
pusha
dec
add
xlat
out
xor
xchg
pushf
movsl
and
mov
ds
out
xchg
pop
sub
pop
divb
mov
mov
push
and
andb
enter
inc
jb
mov
mov
sub
ljmp
jle
clc
adc
push
xchg
push
lret
orl
leave
sub
aam
jae
in
rorl
int3
in
outsb
inc
mov
call
clc
sbb
out
mov
scas
pop
or
icebp
add
xor
aaa
ljmp
outsw
icebp
jmp
and
jl
insb
mov
or
sub
cmp
push
mov
cltd
sub
and
dec
fs
out
nop
xchg
iret
and
push
add
mov
add
ja
sub
ss
cmp
stos
pusha
push
push
jo
hlt
jne
dec
lea
popa
ret
sahf
mov
jbe
dec
dec
pop
fnstsw
pushf
in
pop
int3
mov
push
dec
cs
mov
mov
adc
das
xchg
xor
enter
or
pushf
lret
add
ljmp
mov
adc
inc
comiss
pop
mov
outsb
out
les
in
test
out
jg
pop
adc
fsubl
sbb
mov
into
mov
outsb
and
in
mov
pop
or
js
pusha
je
pop
sbb
mov
mov
xor
jp
enter
cmp
inc
and
fnsave
mov
mov
pop
cmp
inc
fsubl
mov
std
push
jo
out
aaa
cmovno
jne
fbstp
mov
bound
ss
and
fs
sbb
sbb
incb
cmpsb
cmpb
repnz
mov
push
popf
fdivrs
inc
xor
pop
xchg
data16
inc
dec
icebp
mov
outsl
sahf
cmpsl
mov
mov
jne
flds
outsl
jg
xor
jno
clc
xchg
jo
jne
aad
jp
call
cs
mov
sub
sbb
adc
push
cmc
xchg
push
iret
into
jl
jg
mov
mov
adc
je
jne
sti
js
paddsw
insl
push
aas
lock
das
outsb
pmulhw
into
push
ljmp
rorl
xor
loope
lods
testb
int3
dec
lea
push
jle
out
aas
orb
cwtl
dec
pop
add
mov
adc
rclb
addr16
imul
cmp
lahf
inc
fsub
pop
mov
in
loope
idivb
xchg
mov
mov
mov
mov
rcll
cmc
push
ret
cmp
cmpsl
lods
mov
pop
pushf
aas
push
adc
out
and
sbb
jns
rorb
dec
cmp
lods
mov
pop
cs
ret
xlat
push
andl
out
das
inc
ret
jb
mov
ret
push
or
xor
fdivp
adc
jo
sub
sub
inc
fildl
loopne
or
lods
out
mov
xchg
sarb
out
popf
xor
pusha
sub
xchg
out
xor
out
sub
sbb
enter
rclb
aad
dec
mov
mov
pop
pop
es
cmp
shrb
test
repz
lods
jmp
push
fcomps
inc
jb
or
cmp
fdivs
cltd
cmp
iret
pop
mov
jmp
push
cmp
cwtl
cmp
mov
mov
mov
cli
fs
and
popf
mov
daa
repz
lret
push
jne
sub
push
and
xchg
in
fildl
int
and
jle
divb
and
jns
cli
ds
je
movsl
pop
lds
cmp
dec
test
dec
popf
cmp
pop
loopne
imul
add
popf
fistpll
outsb
stos
cmpsl
movsb
scas
clc
add
stos
je
xchg
ds
or
adc
leave
mov
in
in
push
into
mov
lea
out
lods
jbe
out
xor
int
sub
repz
xor
xor
xchg
inc
icebp
jb
xchg
mov
or
stc
call
mov
xchg
mov
push
cs
mov
xor
cwtl
fcomip
daa
mov
mov
sbb
push
push
and
xchg
imul
push
mov
dec
mov
outsb
cmc
or
push
sti
push
fildll
mov
jb
push
lret
add
filds
cmp
inc
lock
cmp
das
mov
roll
jne
xchg
out
jo
cwtl
dec
cld
jnp
int3
test
push
dec
dec
hlt
popf
mov
jo
mov
mov
cmp
dec
loope
popf
pop
mov
mov
or
mov
sub
mov
aas
mov
dec
shl
das
sub
outsb
lcall
sbb
jae
mov
push
push
cmp
sbb
inc
ror
adc
cmp
sbbl
clc
xchg
pop
xor
lret
mov
mov
sbb
xchg
pop
jne
sub
xchg
jp
push
or
jl
pop
xchg
jmp
lock
xchg
fdivrs
fbstp
and
cs
loop
nop
addr16
mov
cmc
xor
xchg
push
and
gs
ds
inc
shll
or
push
je
cmp
out
cli
mov
push
mov
addr16
test
sub
and
jns
pop
mov
or
popf
in
out
cmp
push
or
cmpl
aam
out
pusha
in
loope
mov
pop
fbstp
fidivrl
jo
adc
in
xchg
loope
sbb
pop
xchg
pushl
push
cs
cs
fs
mov
out
pushf
pusha
add
and
jbe
mov
xchg
daa
lcall
adc
leave
scas
int3
fcomps
xchg
aad
adc
pop
addr16
aas
xor
test
pop
lahf
shll
int3
cmp
and
rclb
dec
pop
and
leave
cmc
pusha
mov
adc
fmull
add
adc
enter
push
outsl
inc
fcompl
add
lret
xchg
mov
popf
in
aaa
inc
sbb
dec
xchg
mov
out
add
and
repnz
iret
push
xorb
lods
rol
out
adc
outsb
adc
xchg
fdivrs
pop
mov
pushf
fldz
lcall
xor
cld
setb
push
add
enter
dec
mov
jbe
stc
or
outsb
ja
scas
sar
sbb
pop
fimull
addb
push
mov
arpl
xlat
mov
shrl
or
jnp
shr
es
jmp
mov
aad
cmp
mov
addl
cmp
push
or
jle
adc
es
scas
fsubl
dec
push
xchg
cltd
or
mov
shrb
rolb
pop
test
push
test
mov
in
cltd
add
push
movsl
pop
jge
insb
cmp
ss
shl
sbb
mov
or
cs
insb
mov
aas
and
or
das
sarb
xchg
mov
xchg
lods
jl
cli
push
dec
xorb
popf
lds
xor
dec
adc
lods
xor
xchg
dec
lahf
lods
xor
bound
adc
push
and
adc
cmp
jmp
stos
pop
aas
sub
hlt
hlt
pop
addb
inc
xor
xchg
sbb
daa
xchg
adc
xor
push
pop
fstpt
loopne
sbb
fnstsw
out
stos
dec
mov
mov
mov
aam
mov
dec
pop
and
adc
or
mov
push
sub
mov
dec
je
mov
xchg
daa
fcoml
push
push
mov
je
sub
pop
es
hlt
shrb
es
rolb
xchg
shll
data16
fsubl
inc
push
or
stc
repz
into
in
cmp
xchg
insl
into
jl
pop
jecxz
notl
dec
mov
cmp
gs
mov
fidivl
mov
mov
rolb
cmp
pop
nop
aam
in
inc
pusha
fistpl
or
pop
popa
mov
in
push
cs
and
pusha
scas
pop
mov
inc
inc
cmp
sbb
clc
mov
outsb
push
pop
sub
jecxz
loop
dec
or
aas
push
mov
into
pusha
sub
in
adc
lds
outsl
mov
dec
hlt
aaa
dec
es
pop
ja
daa
loope
insl
scas
pop
pushf
fstpt
or
xchg
stos
je
ret
loopne
inc
xchg
fbld
repz
int
mov
sbb
push
push
mov
iret
nop
es
lea
subb
sar
enter
cmp
xor
mov
in
sbb
adc
xorb
sti
mov
pop
fsubs
push
test
xor
jle
sub
pop
scas
adc
cs
and
mov
xchg
in
out
imul
jo
negl
xor
jo
enter
movsb
add
push
jo
add
xchg
dec
push
and
pop
cld
repz
xchg
adc
mov
add
arpl
push
stc
xlat
daa
icebp
outsb
xlat
pop
aaa
inc
sti
test
push
push
push
sub
push
push
ds
pop
scas
jnp
insb
dec
pop
aad
loop
int
pop
dec
ljmp
fstp
clc
insb
pop
inc
mov
or
push
cld
lret
test
fwait
movsb
adc
fldcw
mov
in
xchg
xchg
sbb
mov
push
push
xor
jbe
or
mov
add
mov
repz
adc
loop
addl
out
imul
test
and
fwait
int
movsb
sbb
lea
mov
mov
and
js
imull
idivb
imul
mov
jmp
aas
popa
and
mov
movsb
scas
mov
mov
sahf
aam
xchg
notl
cmp
and
jp
data16
popa
mov
cmpsb
xor
or
fwait
insl
jmp
es
mov
mov
push
push
mov
movsl
cmp
popf
lret
add
jne
mov
xor
sbb
pusha
mov
test
lahf
inc
mov
cmpsb
xor
cmp
pop
mov
inc
dec
jb
sbb
or
pop
add
icebp
mov
ret
cmp
test
or
push
jns
lret
xchg
or
sub
into
adc
mov
inc
push
imul
mov
mov
jo
jp
dec
in
push
jnp
imul
scas
xor
xor
repz
lahf
mov
aad
mov
push
xchg
sbb
sub
inc
mov
dec
mov
leave
insl
cmpsl
xchg
lret
xchg
and
cmpsl
cmp
iret
mov
dec
sub
add
sub
add
cmp
inc
lcall
inc
int
lock
scas
sbb
inc
arpl
out
or
jge
popa
add
leave
inc
dec
imul
aaa
sbb
or
clc
dec
adc
cwtl
mov
push
xlat
mov
or
add
mov
ss
xchg
cmp
inc
cmp
std
mov
icebp
add
lds
push
test
cwtl
xor
fmul
push
es
sti
cmp
mulb
mov
sbb
bound
aad
inc
xchg
push
pop
int
pusha
je
push
and
mov
xchg
fs
mov
ss
stos
mov
inc
push
gs
add
into
mov
sub
in
mov
scas
fdivrl
test
add
fdivr
aam
or
sbb
xchg
jmp
cmp
jge
push
inc
fimuls
mov
xor
cli
adc
mov
push
cmc
adc
mov
bnd
inc
mov
or
mov
gs
call
push
rolb
les
pop
fistpll
xor
inc
cmc
fisttps
jmp
xor
clc
popa
and
stos
test
jg
popf
inc
mov
adcb
fst
test
gs
cmp
mov
leave
pop
sbb
inc
pushf
xchg
pop
inc
pop
loop
sbb
push
int
call
subl
leave
mov
sub
mov
insl
push
fs
inc
pop
les
or
add
sbb
jnp
cmp
movsl
cmpsl
mov
clc
jmp
les
pop
and
cmp
nop
data16
cmp
push
and
xchg
jo
addl
pop
add
jg
push
xchg
loop
mov
pop
pop
push
popf
mov
dec
mov
pop
lea
fimuls
stos
lea
shrl
ret
jecxz
test
cmp
pop
xor
mov
jp
pop
loop
jmp
aad
sbb
in
and
shrb
jo
mov
mov
movsl
jecxz
sub
in
pusha
stos
xchg
xchg
cmpsb
dec
gs
xchg
jb
popl
push
push
or
divb
xchg
dec
xchg
aaa
jmp
icebp
lds
push
lock
or
js
jo
jl
in
out
fidivl
jmp
rcll
mov
sub
push
stos
push
adc
fs
incb
mov
scas
insl
jbe
sub
mov
cmp
imul
mov
xchg
ss
dec
jns
aam
leave
lahf
mov
mov
cld
xchg
push
lods
inc
xchg
mov
cmp
outsb
mov
lods
stc
ljmp
insl
jmp
xlat
test
faddl
pop
jb
pop
daa
or
mov
jbe
in
ds
sbb
push
stc
sbb
test
jno
sbb
test
xor
lret
xchg
push
lret
nop
loopne
sbb
ficompl
sub
gs
fcoml
enter
hlt
loop
inc
pop
xchg
mov
aam
xchg
xor
mov
jb
cmp
lea
push
out
xor
and
push
pop
dec
adc
jno
push
ret
xchg
int
sahf
fidivrl
dec
mov
and
inc
loope
jns
jecxz
cs
add
sarl
outsl
and
or
pop
jl
mov
mov
cmp
xchg
test
sbb
add
xor
mov
bound
dec
scas
push
cmp
xor
loopne
cmpsl
pop
mov
in
jnp
dec
xor
add
fimuls
leave
push
push
pop
jns
pop
je
shrb
mov
neg
outsl
push
xor
pop
and
insb
pop
lcall
mov
leave
insl
cmpsb
mov
sbb
adc
gs
stc
push
push
hlt
mov
push
clc
lahf
pop
lahf
push
int3
fidivrs
push
pop
stos
call
dec
cwtl
mov
xorl
add
add
jb
push
mov
sub
out
dec
nop
pop
dec
cvtps2pd
test
jle
pop
sahf
pop
out
pop
mov
rclb
push
dec
jg
outsb
cmp
sbb
aad
fcoms
add
jo
lods
xchg
fisttpl
cmpsl
insb
xor
jb
in
xor
cmp
xchg
mov
insl
test
bound
dec
sbb
gs
jmp
jno
jmp
add
sub
stos
or
ror
mov
cmp
push
jmp
inc
decb
ret
lret
and
lret
outsl
add
aam
rcr
push
clc
repz
push
cmpsb
pop
cmp
adc
lock
pop
jl
push
push
pop
adc
aas
add
adc
pop
mov
in
sti
xchg
test
push
sbb
lret
icebp
icebp
inc
pop
mov
push
clc
mov
pop
pop
inc
hlt
pop
lret
xchg
aam
cmp
dec
xorl
shll
test
add
lret
arpl
lret
push
aaa
xchg
shrb
mov
roll
pop
inc
jne
pop
fildll
repz
adc
push
xchg
mov
jns
inc
pop
adc
adc
push
pop
xor
cli
popl
movsl
stc
xlat
lret
cmp
ljmp
cmp
mov
or
jnp
dec
xlat
gs
and
sub
aas
arpl
cmp
dec
dec
xor
adc
xor
cltd
cmc
sahf
pop
out
sub
or
xor
mov
or
js
stos
mov
xchg
mov
xor
jmp
clc
pop
mov
mov
lds
inc
stos
cmpsb
int
outsb
test
mov
push
jb
frstor
aad
xlat
or
jl
mov
and
lea
loop
dec
adc
shlb
and
mov
inc
mov
inc
shll
insb
dec
cltd
adc
push
data16
fsubrs
addr16
sarl
push
add
lahf
adc
in
sbb
faddp
cs
repz
lock
subb
pop
inc
sub
jecxz
lret
jo
int
enter
jnp
hlt
cltd
xchg
scas
fnstenv
adc
jle
lahf
loop
mov
add
inc
push
ja
movsl
flds
adc
lds
xor
inc
pop
and
lcall
je
pop
xor
pop
jmp
xor
jmp
add
cmp
leave
mov
call
inc
push
fldt
call
bound
mov
cmc
mov
je
in
in
sbb
jb
xlat
loop
mov
paddb
lahf
xchg
aaa
jle
clc
bound
sub
lret
repz
jno
rorb
mov
push
gs
sub
loope
cmp
adc
lret
sub
mov
out
and
jmp
pop
cmp
xchg
or
push
cwtl
sub
inc
fstpt
es
adc
out
lcall
add
sub
icebp
mov
arpl
mov
dec
push
fdivrl
mov
int3
mov
mov
inc
out
pusha
mov
inc
dec
lcall
ret
mov
inc
and
fiaddl
stos
mov
rorb
scas
xor
mov
stos
packssdw
mov
in
push
push
pop
sbb
or
jbe
mov
lods
mov
daa
enter
mov
and
or
push
test
dec
stc
jmp
aam
xor
adc
fsubl
shlb
scas
adc
repnz
mov
mov
bound
fmul
push
mov
push
movsl
sarl
mov
and
jle
mov
ror
std
testl
es
fstl
mov
stos
xchg
sub
mov
inc
imul
jno
loope
jmp
std
xor
pushf
pusha
movl
xlat
jmp
mov
in
hlt
sbb
rcrb
arpl
mov
mov
and
scas
adc
mov
mov
mov
inc
pop
cs
cmp
or
aas
push
out
mov
pop
push
jnp
jno
loopne
outsl
mov
xchg
sub
jb
aam
daa
sbb
dec
add
dec
and
iret
add
cmp
sbb
or
or
fcoml
mov
in
xchg
or
xor
dec
jb
dec
scas
pop
mov
cmp
aaa
jno
mov
mov
ja
shlb
ror
sbb
sub
or
jg
fsubrs
les
or
xchg
lods
stc
add
add
fidivl
xchg
pushf
stos
jns
test
cmp
out
push
sbb
push
sahf
scas
adcb
pop
loop
xor
xor
sbb
cmp
fdivr
subl
dec
mov
arpl
dec
jp
ret
out
mov
sub
into
out
aad
rcll
outsb
dec
and
lods
pop
sbb
gs
fcmovne
inc
ds
push
push
inc
inc
stos
lcall
subb
scas
popf
pop
ror
test
mov
xchg
dec
pop
lret
cmp
dec
aaa
imul
push
jmp
lods
sub
pop
jno
adc
int3
jns
mov
push
ss
test
jb
dec
int
push
mov
sub
jmp
test
xchg
inc
les
enter
add
pop
cs
mov
ret
mov
ret
mulb
and
push
mov
les
mov
ljmp
sub
and
je
mov
pop
cwtl
sub
in
inc
stos
ret
mov
sbb
inc
xchg
mov
or
adc
jge
pop
scas
mov
cmpsl
pop
dec
xlat
leave
lds
cmp
dec
je
mov
jmp
outsl
popa
cmp
ret
loopne
sbb
lcall
sbb
pop
mov
int
pop
lret
icebp
dec
cmp
aam
decb
insl
cmc
imul
mov
push
mov
inc
cmpsl
mov
test
fs
fcmovbe
xchg
fisubl
sub
movsl
movsb
mov
rcl
stos
sub
sub
pop
adc
fwait
jns
bound
xchg
ljmp
loope
outsb
repz
pop
iret
mov
push
fstpl
loope
jb
jp
addb
xor
xor
sub
push
jl
sub
adc
jno
cmpl
add
hlt
hlt
xchg
roll
mov
adc
test
sub
loopne
ds
push
or
and
add
jb
add
call
cli
pop
fsubr
mov
ret
mov
mov
test
jnp
jg
fs
sbb
movsb
rorb
js
jne
cmp
xor
loopne
fidivrl
cmc
adc
cli
pop
shrl
jecxz
sbb
sahf
cmc
js
cmp
inc
rcl
push
ss
fdivl
in
sub
and
or
dec
mov
xor
mov
lods
in
gs
lret
clc
shll
add
scas
addr16
pop
jnp
pop
mov
add
cmp
lret
mov
sub
mov
scas
push
int
inc
mov
call
cmp
add
fdivs
mov
js
in
mov
rcll
mov
jecxz
cmp
inc
adc
mov
pop
inc
and
mov
scas
addr16
in
in
xchg
outsl
sub
and
iret
bound
shll
movsl
fcmovb
fs
clc
test
lods
out
ficomps
adc
and
test
xchg
cs
mov
mov
dec
pop
mov
sbb
sbb
ss
adc
pop
inc
cmpsl
jnp
fcomps
adc
negl
enter
mov
cmpb
mov
outsb
jg
push
ret
movsb
in
mov
vmread
stos
dec
mov
outsb
loop
pushf
std
in
pushf
dec
shll
xchg
add
or
mov
rcll
fisttpl
mov
into
jmp
and
or
es
add
mov
xchg
xor
in
xor
cmp
fldenv
mov
xlat
mov
xor
inc
xchg
jle
add
aaa
fcomi
out
adc
add
fisubrs
cmpb
ljmp
fsubrl
push
dec
xchg
inc
out
adc
pop
push
xor
loop
and
mov
bound
sarb
jge
xor
std
cli
sbb
xchg
insb
call
sbb
stos
or
adc
adc
fidivs
mov
sahf
xchg
nop
jbe
test
jno
pop
jae
or
pop
pusha
cmp
mov
incb
pop
cli
or
mov
out
inc
push
bound
mov
cmp
iret
ret
push
xchg
scas
sbb
cmovae
cli
dec
pusha
sbb
add
iret
pop
lahf
shr
jecxz
nop
ret
jae
cmp
jno,pt
imul
mov
and
leave
repz
rcrb
and
push
and
arpl
cmpsb
nop
xor
dec
les
mov
dec
das
xor
mov
inc
std
ds
in
xor
inc
xor
pop
inc
rcr
les
sbb
cmp
cltd
sbb
xchg
dec
dec
cmpsb
add
push
repnz
adc
mov
je
lea
stos
mov
loop
cmp
xchg
fsubs
cmc
stos
pusha
jne
mov
popf
cli
leave
pop
adc
std
movsl
hlt
lock
dec
or
pop
mov
push
out
cs
add
out
es
sub
fisubs
cmpsl
push
into
loope
add
mov
jecxz
inc
xchg
repnz
cmp
jnp
pop
xchg
xorl
mov
insl
xlat
jae
insb
push
in
xor
scas
xchg
cmpsl
movhlps
xchg
les
add
xor
test
or
jne
dec
xlat
mov
xor
je
sub
mov
jbe
mov
test
inc
sti
and
das
movsb
xor
push
ret
lret
loop
pop
imul
aad
xchg
push
stc
jo
jmp
xchg
pop
xchg
rclb
inc
push
xchg
scas
pop
imul
add
push
pop
mov
clc
mov
pop
jbe
push
xor
test
andl
sub
fstl
test
test
push
push
pop
xor
add
shll
jns
xor
jp
insl
cltd
lcall
adc
push
or
ret
adc
jnp
push
cmp
int3
dec
std
aas
test
in
pop
test
add
mov
icebp
std
stc
aad
dec
adc
ljmp
stc
ret
xor
jp
fs
mov
aad
es
jmp
push
sub
pushl
push
sub
pop
jge
jnp
sub
sub
test
jmp
loope
sarb
outsl
mov
sub
dec
mov
and
cmp
or
cmpsb
dec
or
jb
and
sbb
mov
xchg
into
cmp
or
data16
inc
mov
cltd
fs
lret
scas
leave
xor
add
pop
fs
addb
and
and
and
adc
mov
dec
movsl
fadds
fldcw
aam
mov
add
dec
xchg
out
jmp
cmp
pop
fstps
daa
rclb
jp
fcoms
movsl
adc
inc
cmp
scas
cli
fimull
gs
movsl
mov
insb
aad
sbb
xchg
mov
mov
xor
enter
andl
and
bnd
jg
popf
push
or
mov
popf
adc
in
jmp
sub
pop
rcrl
and
fwait
nop
cmpsl
out
cmc
aam
lds
mov
fdivs
iret
jnp
adc
pop
scas
inc
nop
adc
jb
push
pop
rorb
cmp
push
mov
out
or
inc
jnp
divl
mov
push
inc
test
leave
call
push
cmpsb
or
mov
into
vaddsd
sarl
mov
iret
sbb
pop
or
and
std
inc
sbb
mov
stos
add
xor
mov
dec
fisubrs
xor
repz
popa
jmp
mov
add
jecxz
push
dec
inc
lret
jne
adc
lret
dec
in
in
rorl
jg
jg
sub
mov
outsb
push
decl
je
mov
int
out
outsl
idiv
imul
fildl
pop
lds
ret
or
xchg
in
lret
push
aam
repnz
jmp
lods
leave
xor
jge
jp
test
mov
fsubrl
insl
pop
dec
push
sub
and
es
cmp
and
sub
lock
int
add
and
faddl
out
in
test
fwait
push
add
jbe
or
and
ljmp
adc
insb
add
mov
aam
jne
or
sbb
mov
adc
mov
mov
insl
out
enter
push
push
sbb
mov
mov
movsb
inc
mov
cmp
dec
push
je
lret
dec
cwtl
repz
movsb
sbb
jecxz
shr
mov
jge
xor
add
xor
sub
int
data16
pop
mov
mov
ss
dec
add
push
push
or
add
push
popa
mov
dec
push
in
cmpsl
cmc
jnp
cltd
xchg
xorl
movsb
movsb
add
aam
xchg
fs
or
mov
divb
hlt
cmpsl
inc
es
pop
fstpl
mov
faddl
or
xchg
xchg
pop
sahf
xlat
push
loop
scas
fcmovnb
lcall
fwait
inc
mov
femms
into
inc
add
or
inc
mov
dec
adc
pop
jb
jg
sbb
aaa
int
inc
xchg
cmp
sahf
adc
data16
scas
cli
sub
or
cmp
hlt
lods
sti
cmp
lret
mov
popl
fdivs
mov
dec
dec
push
and
in
dec
movsb
dec
xchg
cs
jge
in
fwait
es
sbb
lea
lds
mov
fwait
leave
mov
push
mov
pop
mov
adc
movsl
mov
adcb
mov
sahf
stos
inc
jmp
fs
sbb
sarl
or
inc
xor
mov
sub
lea
ret
mov
iret
mov
orb
das
sbb
shl
and
fistpll
xchg
jne
cmp
mov
xor
mov
arpl
dec
sbb
mov
cmp
ljmp
add
cmp
push
mov
movsb
scas
jle
or
enter
cltd
push
jecxz
fsubr
xor
pop
mov
outsl
in
mov
out
mov
scas
jns
xchg
mov
push
cmp
enter
divl
or
push
push
sbb
adcb
xchg
xlat
add
ret
push
mov
mov
out
mov
ljmp
mov
add
cmpsl
insl
and
xor
push
and
pop
adcb
mov
xchg
jg
movsb
fimuls
and
dec
dec
daa
sbb
adc
into
jl
xchg
inc
dec
sbb
xor
aad
and
xor
and
ret
dec
repz
sbb
imul
clc
push
add
jae
sub
shrb
iret
lcall
pop
push
pop
add
push
aas
sarl
in
aas
xchg
and
sbb
xor
sub
cmp
pusha
icebp
je
mov
cmp
cltd
xor
fdivrs
adc
outsb
jbe
lods
cmp
dec
or
pop
pop
loop
pop
mov
ljmp
aas
add
sti
test
stos
mov
into
sbb
fmulp
leavew
pop
jp
jmp
pop
xchg
push
insb
jns
lret
and
xor
pop
int3
les
test
inc
mov
cmp
sbb
orl
pop
pop
cmp
push
in
int3
sbb
add
push
mov
imul
aam
movsl
outsl
loopne
sbb
in
dec
jbe
dec
and
adcl
mov
push
push
pop
adc
pop
jbe
mov
mov
mov
ret
dec
adc
data16
cmp
push
and
jle
sub
outsl
sbb
mov
xlat
xchg
insb
and
mov
fistl
add
daa
std
or
push
fisttps
scas
lret
push
ja
lret
cmp
add
frstor
mov
inc
push
mov
ds
sahf
xor
and
fldcw
sahf
in
ljmp
test
mov
sub
dec
add
std
into
movsb
mov
xchg
push
add
imul
idivb
and
int3
inc
add
jl
mov
cwtl
dec
jb
adc
xchg
int3
adc
dec
ljmp
lret
daa
out
add
jns
addr16
fstps
add
outsb
shll
sbb
mov
stc
xor
mov
loop
mov
lret
mov
icebp
ss
xor
mov
sbbb
xchg
cmp
mov
and
xor
mov
push
iret
push
mov
int3
fst
or
dec
pusha
loope
add
stos
push
push
popf
stos
jmp
lods
push
cmp
icebp
and
scas
cmpsl
iret
cld
cmc
jge,pn
fstl
xchg
push
scas
pop
lds
jmp
es
cmp
insb
mov
and
out
fadds
jg
icebp
imul
sbb
mov
int3
jnp
jbe
movsb
lea
inc
xlat
stc
jge
out
xchg
icebp
int
jp
pop
pop
sbb
ljmp
cmpb
test
je
out
push
sti
xchg
xor
mov
push
sub
test
pop
inc
fnstcw
dec
clc
mov
iret
int
xor
movsl
jmp
sub
mov
and
and
mov
lods
pop
dec
dec
mov
inc
cmpsb
xlat
pop
ret
xchg
testl
dec
arpl
adc
sbbb
dec
jne
out
mov
mov
out
hlt
sub
sub
push
in
ljmp
adc
mov
repnz
inc
lock
mov
and
jnp
dec
into
mov
adcb
jbe
or
lds
lds
mov
adc
sbb
cltd
or
cltd
leave
ja
into
push
inc
push
es
cmc
rcll
pop
imul
mov
fnsave
adc
pop
stc
fsubs
push
inc
jg
fidivs
push
je
jp
adc
jb
mov
pop
jle
sub
sub
xchg
cmp
push
cld
es
mov
mov
adc
notl
dec
mov
aad
cmp
adc
adc
jno
aam
inc
mov
jg
bound
mov
push
jp
sbb
fdivr
xor
adcl
clc
movsb
add
cmp
xchg
in
push
loop
iret
and
mov
xor
dec
push
inc
sbb
cmp
fs
and
cmp
pop
in
jnp
and
jb
jmp
jp
dec
int3
cmp
push
mov
sub
dec
int3
and
mov
sbb
or
mov
dec
cmp
add
jmp
jle
scas
mov
pusha
or
test
stc
jb
add
push
scas
fdivl
pop
outsb
sbb
pushf
jne
sbb
call
adc
lods
jp
sahf
ljmp
jo
jp
sub
outsl
push
inc
jne
push
and
or
cmp
cmp
sub
fnsave
sbb
leave
jle
in
fcmovnb
mov
dec
std
push
or
inc
fsts
lcall
jp
mov
or
and
jne
or
mov
les
je
add
xchg
xorb
cltd
out
hlt
or
sub
push
cwtl
jns
in
jbe
xchg
hlt
cmc
idiv
push
ror
mov
mov
mov
cmp
pop
push
jb
xor
fcompl
inc
inc
sub
pop
mov
dec
mov
jns
test
std
xchg
shlb
lret
in
sbb
xchg
fcoms
jmp
fbstp
sbb
mov
icebp
fisttpll
or
dec
push
push
push
in
cmp
mov
call
pop
lcall
dec
xchg
je
pop
cmp
push
push
in
adc
outsl
add
insl
push
call
movsb
ljmp
fnstcw
xor
xor
ja
pusha
add
xor
lock
scas
rcrb
pop
add
push
in
sbb
int
push
mov
xchg
or
jno
flds
das
sub
insl
in
aaa
inc
jmp
pop
dec
mov
mov
lcall
fisubl
mov
mov
ja
xor
xchg
negl
push
sub
movsl
nop
cld
cmc
fwait
mov
mov
fimull
pop
mov
mov
add
stc
xor
out
push
shll
or
dec
enter
mov
enter
adc
xchg
popf
sarb
cmp
adc
mov
int3
sub
or
inc
cmc
push
add
int3
rcl
fsts
cmp
sahf
adc
ja
jb
pop
xor
pop
mov
imul
mov
stos
mov
sub
pop
pop
xlat
and
add
sbb
push
sbb
cmp
mov
push
arpl
or
cmc
cmp
pop
pop
addl
pop
popf
sbb
js
xchg
jb
jl
daa
mov
mov
push
pcmpeqb
cli
lret
fildll
test
add
aaa
sub
jnp
inc
ret
push
inc
jmp
pop
xchg
cltd
add
mov
and
and
mov
bound
fnsave
jmp
jmp
mov
or
push
ss
in
adc
hlt
les
inc
mov
dec
add
clc
mov
mov
mov
jae
add
pusha
sbb
imul
les
cmp
test
int3
stc
add
xor
int3
jecxz
xchg
xor
lret
call
jo
ja
sub
push
inc
sbb
xchg
sub
scas
jb
out
mov
sub
pop
cmp
pop
cwtl
xchg
inc
pop
mov
sbb
mov
sub
into
pusha
stos
pop
hlt
add
xor
jmp
test
adc
call
jmp
imul
stos
mov
addr16
pop
and
mov
xor
sub
or
repz
sub
loopne
testb
popl
gs
fwait
adc
stos
out
mov
lea
xlat
jnp
pop
daa
push
jb
lea
into
sbb
faddl
push
popf
cmp
fs
mov
xor
imul
loop
imul
repz
pop
or
sub
aas
mov
sbb
pop
jne
ret
aam
inc
mov
mulb
or
mov
cmp
add
int
jl
icebp
fisubs
pop
or
sti
push
jbe
hlt
or
xchg
in
out
pop
inc
mov
add
adc
jg
int
movsb
xor
fldcw
ljmp
movsl
rclb
shll
repz
cmpsb
sarl
push
loope
lods
inc
inc
jmp
adc
xor
lock
dec
push
rcrl
scas
call
in
xchg
in
lea
lea
or
xor
repnz
lret
es
iret
aad
xchg
or
jns
pushf
jne
addr16
lea
insl
out
decl
mov
cmpsb
lcall
js
rep
push
xor
jno
nop
xor
add
out
xchg
pop
adc
popf
ljmp
test
lods
pop
mov
add
enter
mov
or
ds
cmpsb
jge
ss
dec
lods
pop
cmpsl
pusha
inc
sub
dec
jbe
jnp
jmp
ja
jl
cwtl
hlt
shrb
mov
rcrl
int3
and
add
fs
sahf
jge
xchg
sbb
mov
jle
test
cmp
sbb
ret
or
xchg
and
daa
int
jno
sub
cmp
pop
shll
cltd
dec
mov
or
pop
in
shl
sbb
jg
pop
andl
dec
rcll
test
out
in
xlat
xor
ret
mov
mov
enter
clc
mov
cmp
or
lds
movsl
cltd
mov
mov
inc
leave
addb
stos
jno
outsl
add
lret
xchg
rorb
mov
nop
jbe
stc
xchg
movsb
mov
xchg
dec
push
movsb
lret
iret
push
cmp
cmp
bound
mov
sti
in
jnp
cmp
icebp
mov
jmp
xchg
mov
push
sub
add
ds
stos
in
shlb
int3
lcall
sub
push
sub
push
outsl
dec
fnstsw
leave
into
fxch
push
cmp
ljmp
loopne
sbb
cmp
push
xchg
cltd
dec
dec
mov
mov
push
sti
fildl
mov
movsb
nop
dec
push
ss
call
lds
xchg
sahf
insb
loop
dec
fstpt
xlat
mov
push
cmp
push
stc
popf
pop
imul
or
jae
jnp
out
xchg
ret
sbb
int
xor
xor
dec
xor
adc
mov
and
icebp
dec
mov
jmp
fistps
pop
xchg
enter
cld
xchg
stos
push
cltd
push
subb
pop
in
leave
xchg
mov
jb
loope
sahf
cld
and
xchg
cmp
das
int
inc
mov
mov
les
pushl
sbb
add
add
adc
jmp
cwtl
and
lods
xchg
and
jge
sbb
sbb
ljmp
test
repz
dec
mulb
and
sub
mov
lret
lret
sub
pop
mov
inc
cmp
or
icebp
aam
add
repz
icebp
js
enter
sub
call
inc
pop
pop
jne
push
push
je
insl
fldt
adc
mov
fdivs
test
insb
and
inc
push
pop
scas
cmp
js
or
mov
xor
sbb
ljmp
jns
arpl
push
decl
cs
js
call
ss
jg
outsb
adc
mov
adc
flds
popa
insb
incl
dec
and
adc
mov
lods
repz
mov
jmp
cwtl
mov
jmp
xor
adc
pop
jno
pop
cmpps
dec
or
xchg
sahf
mov
mov
aad
xlat
into
pop
ss
lret
cmp
mov
fstpl
lcall
cmp
xchg
dec
pop
or
mov
mov
or
in
dec
rorb
or
testl
lret
xor
in
mov
and
das
nop
adc
cmp
out
xor
mov
sarl
pushl
cmc
xor
xchg
aas
sbb
fisubrs
out
faddp
xor
mov
xchg
pop
jmp
sti
lods
xchg
mov
mov
negb
add
test
icebp
lods
ret
loop
mov
mov
sub
lock
add
js
mov
icebp
lea
xchg
leave
push
jge
dec
and
sbb
mov
cs
les
sti
jnp
add
adc
ret
mov
fs
lahf
cld
enter
pop
sub
jg
xor
int
inc
fnstenv
rclb
loopne
imul
call
aaa
repnz
push
outsl
call
pop
data16
cmpsb
push
jecxz
in
jo
ret
sbb
dec
dec
bound
cli
int
sbb
mov
pop
pop
into
add
or
stos
rclb
ret
mull
inc
iret
fnstenv
das
cmp
int3
les
dec
popa
sbb
pop
xchg
inc
add
int3
out
xor
jmp
add
cmp
mov
xchg
inc
js
inc
and
push
mulb
push
ret
loope
inc
cli
mov
and
movsb
adc
ficomps
sarb
andl
adc
sbb
mov
je
lcall
or
cltd
adc
loopne
cmpsl
rol
in
push
roll
fnstenv
sbb
pop
sub
jnp
into
mov
jp
or
lret
and
dec
jns
xor
iret
loop
cmpsb
lods
mov
pop
loopne
mov
mov
pushf
test
inc
js
int
sbb
and
lret
cmp
shl
movsl
out
add
push
test
daa
inc
cld
inc
push
int
mov
test
pusha
xchg
mov
test
dec
sti
cmp
pop
pop
xor
push
js
mov
xchg
ret
xlat
mov
bound
or
jg
sub
add
add
sarl
imull
aam
in
mov
add
or
push
inc
aaa
sahf
test
and
and
xlat
and
loop
aaa
fbstp
mov
stc
mov
sub
sub
js
into
fcoms
pop
sub
iret
mov
stos
xlat
cmp
out
mov
dec
push
cmc
sti
push
lods
das
cmp
std
out
xchg
mov
xor
fs
mov
out
fs
test
xor
xor
add
sub
inc
rolb
mov
jg
push
sbb
rcrl
outsl
out
or
les
or
adc
ds
and
out
mov
lods
in
rcr
data16
aas
xchg
inc
stos
jecxz
mov
mov
in
test
pop
xor
inc
pop
push
insb
sbb
or
clc
push
cmc
add
adc
cmp
inc
pop
fimuls
or
push
add
add
loopne
sbb
rcrl
and
mov
push
int3
movsb
in
in
jge
ljmp
imul
adc
aaa
sub
aas
sahf
jmp
fcmovne
dec
sarl
push
insb
or
adc
or
lods
adc
sub
mov
inc
out
sbb
je
sub
xor
int3
dec
inc
cs
nop
pop
and
sbb
lea
push
mov
mov
cmpsl
int
pop
pop
jbe
lock
insl
insb
cs
jecxz
mov
ljmp
rcl
jnp
adc
cmp
sahf
daa
inc
inc
or
sarl
mov
dec
dec
add
xchg
jmp
sbb
pop
lret
mov
xchg
sbb
and
xor
ret
pop
adcl
test
xorl
pushf
jmp
xor
inc
adc
mov
sub
cmpsl
jbe
mov
loope
andl
jns
inc
dec
inc
icebp
fnsave
jp
jb
shr
xlat
cmp
xchg
xchg
ja
mov
shlb
pop
lds
jbe
mov
inc
lahf
int3
xor
scas
sbb
loop
cmc
addr16
cmp
mov
mov
pop
sti
fimuls
sub
dec
les
xchg
mov
or
sbb
insb
push
aas
in
dec
stc
fnsave
inc
mov
out
cmpsl
pop
jge
inc
leave
sub
in
inc
mov
push
ljmp
das
es
mov
orl
and
fnstcw
pop
flds
gs
outsl
mov
fmull
lods
xor
dec
popa
test
cmp
call
xchg
adc
or
fadd
movsl
jg
loop
jne
aas
cmp
add
pop
cmp
adc
test
in
ja
add
mov
shlb
ja
scas
jle
les
mov
mov
xlat
out
mov
movsb
popa
xor
fdecstp
repnz
fildl
push
mov
test
orb
aas
cld
subl
insb
adc
push
adc
mov
popl
dec
add
mov
mov
dec
cmp
xchg
cmp
mov
out
pop
gs
lret
push
out
popf
pop
dec
pop
sub
adc
xor
lods
enter
addr16
test
shlb
pop
adc
sub
data16
dec
pop
add
inc
arpl
mov
std
shl
sti
imul
dec
or
mov
dec
fmuls
xchg
les
rcrl
mov
jmp
dec
fldl
adc
sub
jl
lods
pop
pop
push
leave
mov
std
or
mov
sbb
fsubl
test
push
xchg
dec
xor
dec
mov
int3
mov
mov
xor
enter
mov
mov
fbstp
inc
and
clc
mov
dec
outsb
push
cmp
xlat
and
add
pusha
mov
leave
lret
rcrb
mov
rclb
int
and
push
arpl
ficoml
pop
popf
mov
push
scas
insb
adc
push
movsl
pushf
or
pop
or
adc
sarl
es
mov
popf
outsb
inc
mov
mov
mov
mov
loopne
inc
loopne
jae
je
imul
inc
rorb
mov
pop
fwait
ja
icebp
xchg
dec
push
add
pop
icebp
dec
in
cld
adc
fsub
arpl
cmp
sbbb
jns
add
mov
add
and
xor
jns
ljmp
xchg
adc
arpl
pop
ljmp
dec
mov
or
cld
pop
cmp
sahf
test
mov
mov
dec
mov
pop
mov
mov
mov
inc
pop
mov
xchg
scas
lcall
out
fnstsw
push
or
mov
sbbl
in
xor
xchg
cmp
xchg
daa
mov
push
gs
jno
push
arpl
orb
push
jbe
cmp
xor
imul
mov
mov
dec
loop
out
mov
pop
fwait
and
out
mov
iret
xchg
pop
xor
and
xchg
push
xchg
fidivrs
imul
daa
sbb
in
jge
xchg
pop
outsl
cmp
xlat
add
jle
inc
pop
adc
mov
jecxz
adc
out
jl
aam
out
push
or
mov
sub
mov
addr16
push
sub
push
mov
mov
dec
xchg
std
and
je
shrl
pop
xor
out
into
notb
mov
inc
repz
movsl
lea
xchg
sub
push
fbstp
stos
test
mov
int
mov
clc
pusha
push
loope
mov
dec
jne
inc
in
xor
mov
cmp
sub
jno
mov
pushf
jp
jno
add
inc
cs
mov
cwtl
xchg
insb
mov
pop
mov
call
sub
inc
inc
jl
mov
stc
and
sub
test
sbb
xchg
pop
pusha
add
jae
lret
imul
push
lret
in
inc
cmpsl
push
leave
sbb
sti
pop
add
push
cmp
in
jmp
xor
fs
into
push
sbb
pusha
das
xor
inc
push
mov
push
sbb
push
xchg
sbb
loopne
test
testl
pop
call
or
jns
pop
lock
xor
fsubrl
jl
cwtl
sbbb
adc
lds
loopne
mov
mov
aas
and
or
fistl
stos
stos
sbb
jbe
xor
addr16
int3
dec
mov
std
faddp
jg
dec
xchg
cmp
ljmp
sbb
idiv
dec
add
loope
scas
insb
out
mov
mov
sbb
insb
out
cwtl
mov
roll
add
nop
push
jns
mov
mov
sub
add
push
or
jge
xchg
dec
lcall
sub
inc
xchg
sbb
lret
push
jmp
push
mov
add
pop
scas
or
and
lret
mov
movswl
es
aaa
ljmp
inc
in
cmp
sbb
inc
ljmp
add
mov
mov
and
roll
call
jmp
test
pop
xor
dec
fbld
loope
inc
push
jb
mov
and
daa
or
test
scas
mov
sti
adc
stos
es
jg,pn
sbb
cmp
xchg
sbb
push
or
mov
xor
fbstp
or
or
add
test
mov
movaps
mov
xor
sbb
out
test
in
dec
inc
mov
add
mov
loopne
adc
push
test
add
push
test
cmp
sub
enter
mov
or
add
inc
mov
jnp
cwtl
das
sub
enter
lds
aam
lods
aas
cmpsb
outsb
aad
mov
gs
jns
xchg
or
sub
or
in
std
jg
idivb
cltd
or
lods
xchg
jb
sahf
mov
jne
sub
jecxz
std
movsb
ss
outsb
lods
jns
fldcw
mov
insl
lahf
daa
xorb
lcall
in
stos
mov
ja
jbe
xor
sbb
pextrw
fs
mov
and
sar
mov
es
push
mov
in
insb
inc
dec
jns
in
mov
test
mov
xchg
xor
rep
into
and
jle
addr16
lods
push
and
outsb
out
std
jbe
adc
test
push
outsl
lds
jae
xlat
jp
test
es
ja
loop
mov
arpl
and
xchg
sbb
adc
sahf
mov
or
xchg
lret
sub
rorl
mov
pop
dec
iret
mov
out
ds
daa
jno
testl
mov
popa
xchg
mov
xchg
popf
out
jo
enter
mov
jbe
ret
hlt
fisubl
cmp
pop
xchg
push
sub
gs
mov
sbb
lahf
popf
aas
add
popa
cmp
push
pop
mov
jg
inc
cmp
jbe
mov
lahf
arpl
in
imul
mov
sahf
sbb
xlat
stc
sbb
jb
insb
pusha
in
int3
push
jbe
fcomps
cmp
mov
mov
xor
xlat
jecxz
add
push
std
adc
mov
and
push
inc
rolb
ror
jge
pop
mov
adc
outsb
xor
dec
mov
cmpsb
cmp
or
xchg
dec
mov
dec
int
mov
fldenv
js
repnz
iret
es
mov
dec
rorl
and
lock
cmc
cmp
mov
adc
enter
inc
cmp
xchg
sub
mov
jns
jg
repz
in
mov
in
lcall
xchg
cltd
jns
gs
mov
insl
mov
dec
cmpsb
cltd
clc
push
andl
dec
pusha
fmuls
sbb
cmp
pop
cmpsl
cmp
sbbl
popa
inc
xchg
testl
xor
mov
jo
push
xlat
mov
lret
sahf
adc
sub
jo
andb
int
icebp
sbb
mov
gs
mov
jne
push
inc
insl
push
jo
push
mov
and
push
dec
iret
std
imul
rcl
icebp
in
mov
or
shrb
imul
sbb
fdivs
add
enter
inc
mov
inc
push
pusha
push
dec
icebp
add
icebp
or
mov
pop
loopne
xlat
aad
add
or
ss
mov
pop
cmp
in
les
xchg
jnp
jmp
mov
jmp
pop
imull
mov
lret
sbb
jp
mov
loope
ljmp
lret
out
cli
ret
xchg
scas
mov
push
orl
ss
adc
call
rclb
ljmp
xor
xchg
stos
repnz
ss
into
in
int
cmpsl
cltd
pop
sar
and
movsl
xor
jae
push
push
xor
dec
mov
cmp
or
mov
adc
fimull
xchg
std
out
sbb
or
add
jecxz
clc
leave
jbe
or
adc
xchg
mov
sub
daa
loope,pt
int
adc
mov
mov
lock
xor
mov
cmp
jg
stc
mov
cmpsl
adc
clc
push
aam
xor
adc
ljmp
mov
and
ljmp
mov
sbb
icebp
shrb
push
add
and
mov
negb
test
jle
fdivrs
lcall
ljmp
jle
pop
shrb
hlt
mov
push
pop
data16
das
loop
sbb
leave
mov
test
inc
push
dec
mov
popl
add
add
add
mov
in
orl
lret
xor
fdivrs
sub
loop
das
pop
lods
mov
cmp
mov
or
jae
pop
repnz
sahf
out
adc
jo
mov
adc
or
outsb
xchg
data16
subl
cmp
in
jae
push
sbb
test
filds
daa
xchg
movsl
ret
clc
nop
rcl
xor
arpl
repnz
ds
xchg
jns
ja
xor
int
and
das
gs
stc
pop
push
shll
fidivs
xlat
and
xchg
jp
dec
in
repnz
push
pop
jmp
pop
iret
dec
adc
popf
cli
pop
je
mov
sub
sbb
xchg
les
insl
pop
fucomip
mov
popa
add
jg
popa
mov
add
adc
or
inc
mov
into
jnp
jno
ljmp
lret
out
test
xor
loopne
lahf
dec
mov
adc
icebp
jns
repnz
les
adc
and
inc
lret
xchg
jbe
jmp
ja
cmpsl
push
mov
pop
mov
repnz
mov
jns
push
iret
sar
call
imul
inc
jmp
push
lcall
nop
dec
adc
pop
stos
lds
lea
mov
out
test
repnz
shrb
cmp
xor
sbb
lahf
lods
jne
jnp
dec
push
and
cs
push
daa
sub
mov
mov
inc
roll
xlat
xchg
mov
adc
stos
pop
jmp
xor
inc
in
pusha
loopne
pop
pop
lock
scas
xchg
xchg
mov
pusha
fstl
fwait
sahf
cld
repnz
xchg
and
mov
scas
push
jb
mov
stos
mov
nop
pop
xrelease
mov
das
repz
adc
ret
inc
cmp
aaa
cmp
inc
iret
and
xchg
cmp
dec
cmp
dec
test
mov
push
popa
int3
out
sbb
imul
jmp
push
aam
mov
sbb
popa
lods
sti
cmp
pop
pop
out
insb
mov
adc
inc
xor
push
mov
ret
fimuls
xor
push
adc
cmpsl
mov
sbb
add
pop
pushl
lcall
call
mov
jle
xchg
pop
pop
pusha
xlat
fwait
dec
or
or
xor
pop
out
bnd
inc
rcl
inc
into
jp
hlt
lret
adc
push
dec
mov
or
lahf
lahf
dec
add
scas
insl
sub
sub
roll
out
xor
js
icebp
cmpl
jmp
inc
add
or
mov
pop
test
cmp
mov
jae
dec
push
adc
outsb
add
add
imul
jmp
ret
lea
sub
test
ljmp
adc
int3
inc
popa
sub
bound
std
scas
sbb
add
xor
arpl
jge
push
or
aas
jno
inc
daa
mov
lret
sub
inc
push
jo
mov
xor
jns
out
inc
pop
sbbl
jmp
adc
clc
fwait
cld
notl
adc
outsb
out
sub
push
mov
sbb
mov
xchg
es
addr16
mov
lea
xchg
mov
stos
daa
filds
lock
daa
lea
mov
hlt
pop
xor
sub
icebp
inc
fisubs
aaa
dec
std
popa
jle
neg
gs
aaa
insl
fnsave
sbb
xchg
cli
mov
push
xchg
mov
cli
jbe
ja
inc
push
push
and
sbb
insb
and
mov
lret
or
lahf
adc
mov
push
rcrb
jae
or
add
pop
fidivl
inc
jo
pusha
mov
and
repz
rcll
das
orl
movsl
inc
out
xchg
push
cmp
mov
call
pop
test
inc
push
lds
jo
xchg
stc
jns
add
mov
pop
hlt
into
cmp
mov
cmp
pushl
mov
mov
or
lock
sbb
sbb
push
xchg
pop
pop
cmpsb
xchg
insb
hlt
data16
xor
adc
dec
out
imul
jg
cmc
cmpsl
mov
je
cs
xchg
xor
in
loop
add
int3
push
adc
pop
dec
lock
xchg
cwtl
imull
dec
jg
negb
movsb
sahf
out
and
push
dec
jae
btr
jg
jb
xchg
iret
xchg
mov
ficoms
cli
andl
xchg
mov
sti
shll
lods
mov
jg
push
out
mov
lret
shlb
push
mov
mov
xchg
pop
inc
adc
les
xor
lcall
fcompl
loop
push
adc
jg
pop
xchg
mov
pop
test
aad
jle
sub
inc
stos
and
dec
testb
add
outsl
xchg
sbb
jg
add
adc
xlat
xor
and
test
cmp
xlat
test
arpl
fwait
loop
cltd
add
push
fs
sbb
jns
mov
xor
fcomip
aas
cmpb
arpl
and
and
jge,pn
stc
pop
inc
lock
mov
xor
xor
cmp
into
mov
xchg
stos
sbb
stc
pushf
dec
lods
sub
xor
lods
pusha
out
loop
aaa
jl
ss
scas
sub
insb
push
mov
or
inc
outsl
and
cwtl
lds
xchg
mov
add
cmp
roll
mov
push
repnz
stos
or
cltd
clc
pop
push
sbb
sar
sub
mov
jae
jmp
inc
and
mov
xchg
test
xchg
cs
mov
inc
push
jo
out
stos
push
adc
jle
xor
mov
dec
mov
cmc
push
arpl
pop
ficoms
adcl
ret
xorb
out
lcall
loopne
mov
ljmp
jmp
jp
xor
jo
pop
xchg
xchg
or
fsts
pop
ret
jb
out
xor
jnp
jmp
stos
adc
inc
jp
xchg
mov
dec
jne
push
or
push
dec
test
mov
mov
adc
mov
inc
shll
std
lds
xchg
add
mov
addb
or
xchg
aas
push
pop
pop
int3
mov
cli
les
sarb
ss
push
pop
push
add
inc
inc
sub
je
lahf
jnp
dec
rcll
or
inc
es
fs
sub
push
mov
rol
jg
pop
mov
dec
stc
sbb
mov
xchg
push
aad
mov
outsb
mull
hlt
call
sbbl
scas
jmp
or
out
jg
mov
add
fnstcw
push
jbe
sbb
mov
and
xor
jbe
lcall
push
out
mov
out
cmp
fsub
iret
ret
cli
xchg
dec
push
sahf
fwait
aas
jl
insb
adc
pop
xchg
and
addr16
push
pop
xchg
cmp
aaa
jae
je
xchg
mov
mov
jp
das
shll
test
sbb
and
aad
sub
lock
test
xchg
mov
aas
jne
test
test
mov
dec
xchg
scas
mov
lcall
dec
imul
and
cmp
or
add
jne
or
push
pop
andb
jns
clc
je
scas
pop
punpckhdq
jno
out
lahf
push
dec
mov
or
xchg
in
iret
int
pop
and
pop
push
rorb
aas
std
repnz
fwait
scas
int
daa
in
imul
dec
aam
pop
and
test
xor
sub
inc
adc
imull
shlb
out
adc
call
xchg
cltd
lock
out
push
add
and
ja
pop
cli
in
mov
mov
jl
jg
mov
jb
ljmp
int3
lret
mov
mov
in
jb
lods
imul
dec
adc
shll
jl
daa
rcrl
sbb
adc
add
shrb
in
adc
outsb
mull
dec
push
sbb
in
nop
mov
or
add
adc
push
mov
mov
out
jmp
dec
push
sub
cmp
in
jg
mov
add
sbb
mov
push
aas
xchg
and
add
dec
jmp
out
jb
and
arpl
insl
mov
mov
leave
imul
leave
mov
sub
pushl
add
cmpsb
add
sahf
push
sbb
inc
ljmp
and
ss
pop
filds
sarb
cmc
mov
push
rcll
es
sub
scas
pusha
push
popa
std
add
cltd
fstl
flds
xor
aad
add
test
push
pop
xor
mov
cmpsl
dec
dec
sti
xchg
mov
jle
int
cmp
lea
dec
xor
fwait
les
and
out
add
mov
cmc
loopne
or
sub
pop
cwtl
jne
push
mov
adc
pop
xor
cvtpi2ps
xlat
xchg
cwtl
mov
cmpsl
jo
lods
push
sbb
aaa
pop
cld
mov
xor
jnp
dec
mov
imul
mov
sbb
sbb
adc
inc
mov
aas
lcall
sbbb
mov
subb
pop
inc
dec
mov
pop
movsl
mov
xor
fisubl
cmp
mov
and
pop
or
mov
adc
mov
or
lods
xchg
dec
xchg
jp
push
mov
loop
pop
xor
scas
stos
aad
in
sbb
mov
imul
add
xor
pop
notl
push
loop
sub
push
sub
sub
cwtl
mov
call
dec
std
insl
dec
aad
push
push
cmp
leave
add
movsl
mov
dec
and
test
repz
jne
cmp
and
test
cmc
addr16
or
sbb
xlat
mov
cli
ret
fisubs
sub
in
sbb
int3
and
inc
push
scas
filds
mov
pop
fadds
push
sub
clc
sub
jbe
fidivrl
xchg
jno
in
cwtl
sub
and
movl
sbb
shlb
push
jecxz
popa
lret
repnz
in
sarl
popl
cwtl
pop
mov
lods
jecxz
mov
cwtl
cwtl
add
and
enter
sub
mov
outsb
or
sub
pop
dec
sub
imul
jle
inc
lret
cmp
popl
lock
aas
mov
push
sub
sbb
sbb
sub
pop
pop
inc
dec
xlat
mov
or
mov
daa
rorb
fwait
push
xchg
nop
inc
or
add
mov
cli
inc
xor
push
rcrl
sub
cmpsb
scas
add
out
push
inc
sub
adc
lea
mov
ficomps
gs
jbe
or
mov
lret
cmc
xchg
jl
add
sub
cmp
daa
stos
lea
popf
rcl
jecxz
pop
sbb
adc
add
jno
fwait
mov
push
inc
movsb
data16
dec
imul
inc
sbb
filds
cwtl
sbb
pop
nop
cli
jns
jecxz
push
sbb
mov
adcl
jns
and
push
cmp
add
scas
or
sub
popf
adc
cmc
jno
dec
test
arpl
mov
and
les
cmp
in
mov
shr
jg
fwait
adcb
xor
jg
sbb
lret
lods
gs
sub
cli
jecxz
or
jo
mov
pushf
mov
ficoms
pop
xlat
popf
mov
movsb
cltd
push
call
xor
jbe
mov
aam
repz
pop
mov
loop
add
push
inc
cwtl
insb
cmpb
outsl
inc
jp
xor
shrb
imul
mov
jl
and
imul
ss
ss
dec
rcrl
aad
lret
xor
pop
jno
sbb
push
rcll
sarb
fsub
sub
sbb
shrb
rol
sti
jae
dec
sub
mov
clc
dec
es
int3
cld
jae
rcr
test
scas
jl
clc
gs
mov
xchg
adc
mov
scas
fldln2
sbb
out
notb
ror
movsb
sbb
cmpb
xor
dec
pop
call
jecxz
sbb
dec
loope
fisttps
pop
or
mov
xor
addr16
jmp
inc
push
cmp
mov
or
fwait
xor
mov
xor
lret
icebp
call
popa
cli
or
mov
mov
xchg
dec
into
cmp
aaa
test
lea
adc
cmp
lret
fstl
mov
in
push
jecxz
daa
jp
shll
into
in
xchg
popa
sbb
pusha
ljmp
pop
jecxz
sahf
xor
lret
sbb
pop
aam
adc
pop
scas
inc
push
jp
sub
scas
cmc
stos
scas
int3
das
dec
xor
xor
testl
sahf
mov
pop
sar
ljmp
pop
xor
divb
or
test
mov
insl
adc
push
mov
adc
or
cmp
stos
in
ret
jbe
xor
xlat
adc
xor
sub
xor
sarb
ret
xchg
and
xor
loop
dec
movsl
inc
mov
sub
sti
testb
xor
push
sbb
out
sbb
pop
sub
icebp
pop
hlt
ret
rclb
pop
mov
dec
dec
mov
jbe
jp
or
fisubrs
into
dec
das
loope
push
mov
push
rcr
unpcklps
mov
ss
mov
push
push
lea
ss
int3
rcl
adc
cli
xchg
jno
test
dec
mov
pop
test
repnz
lds
pop
jge
inc
xchg
pop
sub
stos
icebp
loop
jnp
out
notl
popa
in
jo
sbb
add
adc
mov
xchg
jns
push
adc
pop
cltd
inc
dec
js
je
push
push
addr16
leave
mov
in
push
xchg
in
push
inc
cli
dec
or
not
outsl
inc
or
or
cs
jp
div
pushf
sbb
cwtl
add
shll
test
in
xchg
cld
test
imul
rclb
xchg
negl
loopne
dec
push
out
sub
mov
fnstcw
faddp
jg
adc
iret
fmull
bound
mov
xchg
pop
addr16
cmp
jno
inc
pop
js
test
mov
dec
xchg
pop
cld
cmp
push
aad
daa
xor
mov
loop
push
jbe
sahf
push
arpl
in
daa
cmp
pop
lret
jmp
stos
aam
fisttpll
dec
mov
repz
and
lds
cld
add
das
xchg
shll
in
mov
shrl
imul
dec
mov
or
jle
sub
cltd
mov
dec
cmp
pop
dec
push
pusha
lea
dec
int3
ja,pn
das
cs
fwait
and
pop
pop
adc
add
mov
add
das
aaa
xchg
popf
fldt
xor
sbb
or
pop
sbb
hlt
movsb
dec
jne
sub
and
and
push
in
aad
sbb
sti
cltd
les
pop
adc
int
lret
mov
mov
std
xor
das
cmp
push
pcmpeqw
out
inc
fbstp
push
testb
arpl
adcb
std
mov
pop
jno
mov
test
jmp
lods
pop
test
and
push
sbb
in
xchg
fmuls
out
enter
aad
insb
jle
std
movsb
leave
ret
fdivs
call
lret
mov
mov
std
inc
adc
mov
cmp
enter
sub
inc
push
jge
pop
sub
or
and
in
icebp
arpl
adc
loop
add
popf
lds
ja
jg
idivl
inc
cmc
addb
mov
dec
jns
repnz
adc
xchg
sub
test
sub
daa
push
mov
add
ds
popa
loopne
adc
mov
test
stc
sub
cmc
out
mov
xor
out
mov
pushf
js
shlb
mov
add
or
or
out
inc
fdivs
int3
pop
sti
cmp
jg
int3
fcoms
addb
lahf
je
jmp
fwait
mov
and
pusha
scas
shlb
and
outsl
mov
sub
dec
outsl
sti
mov
push
fcomip
lret
das
adc
je
and
or
jno
loope
sbb
stc
inc
stc
fsubr
mov
pop
sahf
push
xor
int
stos
jae
movsl
mov
mov
and
xor
sbb
bndldx
movsl
loopne
movsb
scas
into
data16
xchg
lods
fsubr
cmpsl
clc
mov
cltd
cld
push
es
jle
adc
arpl
les
iret
inc
scas
push
push
jae
orb
cmp
in
push
dec
dec
call
cs
cmp
jb
mov
dec
xchg
fldcw
insl
sbb
xor
push
cmp
mov
and
pusha
lcall
cmc
dec
push
xchg
loopne
pop
push
lret
jge
or
sbb
push
into
enter
mov
jns
and
lods
iret
sbb
and
mov
push
pop
mov
daa
test
fwait
ds
call
enter
hlt
xchg
inc
out
mov
out
ljmp
add
cmc
xorl
dec
dec
hlt
cmp
rcrb
int3
inc
sub
outsb
cltd
ja
or
sub
inc
mov
xor
and
dec
cmpsb
xlat
loop
adc
or
mov
nop
or
mov
in
out
loope
push
bound
imul
adc
dec
cltd
arpl
das
jp
adc
movsl
and
rcrb
fadds
cmp
sbb
mov
xchg
ret
daa
mov
push
xchg
int
push
or
rorb
push
and
pop
push
addr16
fsubl
ret
into
pop
stos
scas
adc
mov
mov
jns
inc
nop
add
sub
jge
nop
dec
sbb
pop
pavgb
jmp
sarl
dec
fisubrs
push
cmp
or
and
rolb
mov
aaa
jns
negb
jnp
pop
insb
lret
add
pushf
into
fnstenv
gs
mov
out
out
mov
dec
loopne
mov
flds
loop
push
lock
aas
push
sub
cld
icebp
xor
pop
ret
loope
outsb
aam
sbb
mov
lds
xor
mov
or
aaa
leavew
stc
pop
add
jmp
ret
ficompl
outsl
sbb
push
mov
add
aas
in
js
pop
dec
ror
mov
cmp
adc
xor
test
test
mov
out
push
or
ficomps
sub
xor
adc
int
sbb
inc
sbb
mov
cmpsb
and
push
cmp
ret
daa
lcall
iret
mov
ficoms
out
scas
inc
movb
loopne
mov
and
ficoms
lret
cmp
push
push
insl
sarl
in
ja
cmpsb
daa
jb
jmp
or
icebp
insb
add
mov
loope
fsubl
mov
stos
mov
push
lret
out
stc
cli
fs
and
es
jge
sbb
lcall
fiadds
aaa
ss
mov
adc
jb
mov
es
in
repnz
pushf
leave
repnz
inc
xchg
movsb
stc
xchg
mov
or
rclb
xchg
add
inc
movsl
jp
mov
jecxz
jne
shrb
jne
pushf
in
mov
pop
sbb
test
in
adc
pop
cmpsb
dec
jb
mov
daa
mov
iret
mov
ljmp
mov
xchg
cltd
arpl
mov
xchg
iret
xor
xorb
mov
int3
or
leave
or
stos
std
and
int
fwait
lret
xor
outsl
stc
stos
xchg
mov
leave
cli
sbb
mov
mov
test
mov
scas
insl
jmp
rclb
cmp
and
int
lret
gs
adc
imul
push
jp
cmc
movsb
push
dec
shrl
push
rolb
lock
fcomp
hlt
rcrb
stc
iret
xchg
andl
outsl
testb
cmovl
inc
and
lods
aaa
sahf
mov
push
enter
clc
xchg
pop
sbb
cmpsl
fldl
lods
jg
enter
sub
pop
xor
es
mov
gs
cmp
ror
adc
mull
push
dec
pop
cli
cmp
fdivr
fcoml
into
shll
aaa
in
in
xlat
adc
xchg
int3
and
fadds
iret
mov
data16
sub
jl
pushw
lods
dec
add
adc
or
dec
frndint
inc
dec
cmp
nop
mov
sbbl
mov
lods
and
dec
cmpsb
dec
mov
jmp
dec
add
fwait
xchg
ret
jno
sahf
lods
fs
xchg
test
std
jp
out
push
lods
mov
fcompl
adc
loopne
in
movsb
push
mov
mov
enter
fwait
mull
or
xor
out
dec
or
pop
lret
mov
dec
inc
jmp
mov
pop
mov
mov
jle
lret
cmpsb
jbe
icebp
mov
push
xchg
xor
js
dec
repz
adc
lock
push
sbb
fidivs
mov
mov
ret
insl
rol
and
inc
cmp
nopl
stos
mov
xlat
dec
pop
icebp
das
cmp
jl
mov
rol
cld
jmp
mov
cli
test
pop
push
fs
jae
add
mov
and
dec
add
negb
in
pop
test
test
jp
sbb
jmp
mov
sbb
lahf
je
mov
popa
and
push
inc
ds
incl
mov
nop
incb
pop
ret
data16
leave
cmp
popa
add
xor
testb
rcr
mov
jbe
jne
inc
shlb
push
mov
lea
sbb
dec
mov
icebp
dec
mov
sub
mov
jae
dec
out
inc
insl
fisttpl
push
jae
jle
ficomps
inc
inc
sbb
cmpsb
lods
or
dec
push
mov
test
cli
call
jae
pop
inc
inc
jnp
inc
je
cs
aam
popa
xchg
mov
dec
jne
and
movsb
xchg
dec
iret
cld
inc
xchg
cltd
or
cltd
test
jp
inc
ret
fsubrl
rorb
add
loope
push
es
mov
jp
jp
insb
sbb
out
sbb
stos
inc
lods
mov
push
add
xchg
outsb
xchg
scas
mov
jo
adc
and
movsb
mov
sub
cmc
js
inc
sub
sti
sub
lcall
xchg
mov
cmpb
stos
mov
aas
and
jmp
and
push
sub
mov
push
clc
loopne
or
mov
fucomip
sbb
jle
dec
ljmp
adc
rclb
fs
fmuls
xchg
and
pop
dec
hlt
mov
test
aaa
pop
mov
lret
sub
call
movsl
push
pusha
push
pop
mov
pop
xlat
enter
lock
aam
outsb
jne
cmp
iret
pop
push
cmp
xor
pop
lahf
mov
jno
stos
ficomps
mov
cld
push
push
mov
inc
pop
dec
in
in
jae
cld
in
mov
and
movsl
push
jnp
xlat
jp
icebp
mov
push
ljmp
sub
mov
cmp
inc
cmpl
fs
stc
aas
and
icebp
andb
mov
lret
fdivp
dec
test
es
xor
xor
cmp
test
inc
nop
ret
in
push
adc
seto
xchg
cld
imul
jne
in
leave
mov
ja
sub
loope
ja
daa
testl
lea
or
fwait
addr16
fnsave
or
sbb
outsb
pop
addr16
push
jge
ljmp
stos
out
sub
pop
fnstenv
jae
leave
enter
movl
jp
cmc
int
jecxz
sarl
xlat
in
push
ficoml
into
sub
outsb
mov
stos
call
enter
jmp
aad
sub
mov
sarl
sub
dec
and
and
dec
cmpsb
mov
dec
aam
fsts
push
and
ljmp
jne
pop
std
popf
je
or
cmp
in
mov
push
push
and
xor
jae
stc
nop
call
ret
in
jb
jae
add
cmp
scas
sahf
dec
lea
fistpl
fstpl
adc
gs
pop
imul
mov
movsb
mov
push
aam
add
aaa
dec
stc
push
loopne
bound
es
and
into
sbbb
mov
mov
adc
sbbb
jne
inc
mov
in
andb
sbb
loopne
add
aaa
inc
inc
in
jle
sbb
mov
imul
ja
pop
test
adc
push
or
fistl
sub
cwtl
insl
movsl
or
stos
pop
xchg
sbb
jae
mov
out
lods
in
pop
push
and
aaa
std
push
sarl
sbb
xchg
andb
pop
jae
sbb
jne
xchg
or
inc
inc
out
xor
mov
xchg
add
mov
xchg
inc
popa
and
or
xchg
iret
fimuls
xor
xchg
inc
and
push
adc
dec
mov
sub
pop
jno
pop
push
xchg
fcoms
lods
dec
pop
inc
movsb
dec
and
stos
jmp
xchg
out
xchg
dec
xchg
lds
inc
mov
ss
cli
dec
fcmovbe
jno
clc
xchg
dec
popf
mov
dec
lret
jmp
sbb
lods
adc
add
mov
jno
test
movsl
or
faddp
xlat
imul
mov
sub
xor
ss
pop
loopne
iret
adc
imul
fisubrs
fisubrs
add
add
aad
push
jl
and
xchg
push
mov
call
sbb
push
mov
outsb
or
cmovl
imul
mov
inc
and
pop
mov
mov
push
dec
push
fwait
xchg
push
xchg
jo
or
mov
mov
pop
fisttpl
data16
xchg
js
mov
push
inc
je
in
dec
mov
xchg
and
dec
lods
push
cwtl
add
lahf
subl
mov
xor
pop
mov
aaa
or
in
int3
in
cs
xchg
repnz
add
shrb
cmpsl
mov
sti
mov
shr
fistl
scas
in
and
xchg
mov
xchg
pop
sti
mov
mov
call
mov
or
xor
es
lcall
daa
mov
jg
xor
out
jbe
dec
push
fidivrl
int
repz
adc
aad
fsubp
les
mov
rcrb
fldenv
outsl
movsl
popf
add
jb
jno
add
adc
sbb
inc
xchg
pop
mov
dec
bound
and
pop
or
mov
int
mov
mov
mull
or
mov
aas
das
pop
or
xchg
daa
jo
cmpsb
sbb
mov
or
push
mov
ja
sbb
repnz
cmp
addr16
data16
mov
fstps
xchg
subl
scas
jl
adcb
cmpsl
stc
push
je
sbb
adc
jo
clc
add
stc
testl
out
lahf
jecxz
mov
pusha
aas
inc
inc
mov
lods
leave
daa
js
cli
cwtl
outsb
inc
push
jmp
jbe
xchg
or
icebp
push
repnz
mov
sbb
jg
loopne
push
mov
mov
mov
or
insb
shrl
jns
xor
fstps
imul
xchg
cwtl
nop
mov
popf
add
pop
dec
push
mov
cmp
xor
sahf
sub
xchg
loop
push
sub
push
and
pop
sahf
mov
mov
mov
pop
cli
mov
push
adc
fs
push
fsubs
out
out
stos
or
jge
xchg
cmpsl
mov
dec
andl
mov
adc
lods
or
jbe
cmc
or
repnz
pop
xchg
jbe
mov
jle
mov
pop
cmc
sar
inc
rclb
jg
sub
pushf
push
lret
mov
stos
sub
mov
sbb
arpl
cwtl
push
fdivl
inc
inc
call
mov
scas
push
adc
jg
cs
sbb
mov
mov
push
pushf
iret
imulb
das
pop
cmc
mov
ror
icebp
mov
aas
leave
mov
jae
push
mov
add
mov
mov
rcrb
ja
clc
imulb
inc
xor
xchg
mov
mov
dec
sub
cs
insb
mov
ret
out
adc
sbb
cmp
insb
lcall
outsb
pop
out
jo
xchg
cmp
xchg
sbb
mov
jbe
jns
mov
mov
out
jp
push
je
jnp
pop
popf
test
js
mov
jge
popf
ss
arpl
mov
pop
leave
mov
addr16
in
rol
ret
or
loope
mov
xchg
mov
adc
cs
mov
aas
dec
and
pop
in
shrl
ja
movsb
cmp
roll
sub
cli
xchg
mov
das
xor
mov
adc
mov
daa
movsl
ljmp
jne
js
shrl
pop
xchg
xchg
xor
fwait
clc
inc
std
xor
les
jae
pop
jae
mov
xor
stos
imul
fistl
enter
movsl
int3
out
inc
sub
stos
add
jne
outsb
or
jmp
ret
pop
aas
ja
jnp
sub
int3
mov
out
lret
push
loope
push
dec
mov
scas
jge
xchg
and
out
outsb
lea
or
inc
pop
cmc
xor
jle
jecxz
aad
add
xchg
shlb
or
std
in
lcall
dec
mov
xor
ja
lods
loop
and
fcmovne
fcmovbe
sub
loopne
dec
cwtl
inc
pop
jnp
repz
jle
stos
call
test
aad
ljmp
push
subl
xor
dec
mov
in
xchg
imul
or
cmp
shll
mov
jp
push
es
inc
push
inc
pop
jg
push
fildl
dec
jg
loope
jb
or
sar
adc
inc
in
jl
in
mov
or
mov
sbb
sahf
lahf
xor
out
jecxz
lods
add
mov
pop
mov
scas
mov
test
popa
popf
xchg
mov
out
xor
push
xor
lods
popa
jno
test
mov
shr
insb
push
cltd
lret
sahf
xchg
out
or
push
cmpsb
pop
mov
dec
ret
jmp
jecxz
shrl
dec
jb
xlat
and
pop
pop
pushl
or
xchg
pop
pop
push
icebp
ret
mov
cwtl
lds
insb
ret
sub
mov
out
cmpsb
mov
push
cmp
pop
add
push
and
bound
xor
sub
ret
mov
test
dec
movsb
int
mov
sub
aad
sub
sbb
or
and
repz
xchg
xchg
nop
pusha
movsl
in
mov
fwait
pop
cmpsl
lods
hlt
cmpsl
dec
xor
cld
jbe
repnz
add
pop
xchg
ljmp
insl
daa
inc
xchg
fwait
jbe
push
sbb
cs
arpl
mov
addr16
jmp
mov
aam
sbb
mov
push
cmpsl
pop
ds
cmpsl
imul
sbb
in
flds
les
repz
inc
out
sbb
push
sar
fdivrs
push
repz
subb
inc
mov
adc
das
out
push
cmpsb
fs
lcall
lahf
je
into
cmpsb
mov
dec
pop
hlt
inc
add
dec
fistpl
sub
dec
out
sub
pop
pop
cld
lds
into
call
pop
cwtl
mov
sub
ret
cmpsl
repz
call
mov
mov
jbe
and
cmc
sarl
adc
dec
sbb
pop
xor
sub
jo
in
rclb
sub
inc
cmp
out
out
mov
pusha
mov
mov
repz
fdivrl
pop
mov
xlat
push
mov
inc
and
mov
enter
push
push
pop
push
xor
in
pop
mov
adc
pop
int
and
inc
stos
push
push
stos
js
jl
int
dec
xchg
mov
mov
mov
daa
cld
jmp
add
mov
mov
push
adc
mov
rolb
lods
popa
xchg
ds
sub
mov
mov
push
test
int3
mov
jl
mov
movsb
sub
xchg
or
jge
decl
pop
jecxz,pn
daa
stc
pop
into
mov
dec
std
pushf
add
jae
xchg
and
stos
popa
pop
add
shr
jne
cld
fdiv
mov
subl
mov
fstps
hlt
mov
or
or
fistpl
ret
scas
jmp
xchg
iret
xor
mov
xchg
mov
fsubrl
xor
or
xchg
subl
sahf
out
pop
mov
push
cmpl
in
stos
push
insb
inc
mov
outsb
pop
mov
lea
std
cwtl
insb
mov
nop
dec
add
dec
jle
mov
mov
pop
subb
or
or
pop
mov
loopne
mov
in
adc
pop
and
hlt
xchg
test
inc
imul
xor
aad
mov
fsubrl
xchg
leave
clc
mov
in
pusha
xchg
inc
dec
push
inc
fisubrs
not
int
clc
jecxz
pop
cli
push
mov
cltd
inc
les
rcll
cmpsb
popf
out
sbb
test
test
sbb
xchg
inc
sti
push
lret
sub
cmp
cmp
cmp
dec
jge
into
in
push
push
cmp
sbb
cmp
enter
or
outsl
push
adc
xor
out
jp
dec
mov
popf
pop
adc
fdivrs
mov
push
in
jmp
fwait
mov
sub
arpl
lea
imul
xlat
lods
xlat
mov
adc
cld
push
ret
pop
aad
loope
int
cmp
push
repz
clc
adc
inc
ret
scas
pusha
enter
leave
popa
mov
add
jmp
cltd
outsl
mov
je
dec
jne
jmp
push
push
mov
adc
sti
adc
mov
add
in
test
sub
mov
es
jb
sub
lea
arpl
cwtl
iret
stc
or
mov
jecxz
in
jecxz
mov
std
shrl
repz
adc
test
pop
test
mov
pop
icebp
fmul
arpl
outsb
clc
test
push
xchg
in
pop
dec
mov
fstpt
mov
cld
pop
sub
cmp
push
xor
push
cmc
cmp
rcr
push
sub
xlat
or
inc
rcr
add
xchg
xchg
fsubl
popf
test
sti
movsl
adc
gs
loopne
out
pop
or
cmp
hlt
cli
imul
test
mov
fldt
fs
cltd
sbbl
shl
add
faddl
ret
fs
ficompl
scas
ret
sbb
cmp
jg
xchg
or
push
cmp
xchg
js
int3
mov
into
jne
push
movsl
or
xchg
mov
sbb
jmp
add
std
cmp
mov
push
outsl
adc
mov
dec
fdivs
cmpl
js
jmp
shll
lret
mov
mov
add
or
cmp
add
dec
mov
push
mov
sbb
dec
mov
adc
pop
bound
in
fwait
cltd
lcall
push
xor
imul
scas
fildll
mov
push
out
pop
inc
xlat
fs
test
out
mov
arpl
and
iret
js
popf
je
cmpsb
lods
jge
js
inc
push
sub
movsl
mov
push
and
and
cmp
mov
into
xchg
jmp
rolb
cld
xor
jecxz
adc
dec
sub
out
enter
fcomip
out
aas
xchg
pop
pop
dec
test
mov
or
cmp
cmp
rol
rcr
xchg
adc
adc
sbb
shr
mov
call
insb
inc
jae
fistpll
ljmp
jbe
pop
xor
imul
cmp
clc
packuswb
cmp
pop
pop
push
lret
cld
ss
xchg
jno
les
cmp
icebp
xor
jbe
inc
test
push
pop
into
or
add
leave
push
inc
and
xchg
push
and
dec
jmp
es
cmp
add
sub
loop
dec
movl
inc
xchg
push
adc
aas
pushf
jle
adc
orb
hlt
aam
dec
popa
xchg
xchg
xor
iret
push
sub
pop
mov
jle
testl
jmp
int3
cmp
stos
lock
testb
call
push
lcall
dec
rolb
cmpsl
test
sub
push
pop
cmp
cltd
and
repz
sub
adc
pop
and
and
sub
test
rcr
mov
cmp
inc
bound
lods
fisttpl
aas
adc
addb
mov
mov
stos
add
pop
ljmp
test
test
clc
adc
push
and
adc
push
push
lcall
out
imul
scas
push
dec
in
call
mov
js
xchg
enter
cmp
dec
shr
aas
mov
rclb
sbbb
ror
add
cmp
cltd
add
sub
xchg
xor
cmp
xchg
sahf
or
addl
roll
gs
push
cmpsl
stc
ficoml
dec
fcomps
pop
mov
mov
je
pushf
xor
push
push
pop
loop
xchg
mov
mov
mov
or
gs
in
adc
addr16
lods
pop
push
mov
lret
pushf
shlb
xlat
lahf
incb
sbb
mov
fwait
xchg
dec
cmp
sub
fiaddl
std
fnclex
pusha
rorl
cmp
es
inc
out
clc
shr
inc
adc
test
scas
clc
adc
mov
lea
mov
mov
ret
iret
cltd
push
sub
idivb
xchg
imul
movsl
outsl
dec
xor
or
adc
jl
test
adc
call
mov
mov
cmp
rcrl
outsl
shlb
push
out
push
dec
loope
lret
ja
add
sbb
or
xor
cmp
pop
cmpl
call
push
push
adc
lcall
cmpl
out
inc
adc
mov
lahf
shrl
or
outsb
fisttpll
ja
in
inc
xor
ss
out
lods
cmp
imul
add
add
xchg
add
in
dec
push
loopne
ret
testl
mov
popa
repz
lret
add
xor
mov
lock
sub
jno
lret
scas
mulb
int
mov
inc
in
mov
scas
or
adc
jnp
cmp
and
mov
fistpl
xchg
test
fildl
stos
insb
mov
test
sbb
jnp
sbb
jb
vmwrite
xchg
cltd
sub
pushw
add
out
jbe
mov
loop
mov
lods
fcoms
filds
inc
lock
ss
xchg
dec
lods
dec
in
loop
pop
daa
rclb
and
xchg
mov
mov
pop
cmpsb
lea
xchg
push
lods
cmp
addr16
outsl
push
mov
loopne
dec
inc
mov
pop
sbb
jp
pop
ljmp
jbe
add
dec
sub
mull
xchg
xor
inc
mov
les
adc
pop
jge
inc
call
and
dec
or
mov
dec
dec
xchg
or
pop
test
insl
fwait
mov
sbbl
push
dec
inc
dec
dec
or
push
sti
add
in
mov
or
or
cmp
fbld
scas
mov
pop
imull
pop
fdivl
sub
insl
negl
lds
cmc
cmp
or
cmp
or
cmp
or
cmp
and
pop
scas
arpl
addr16
mov
lds
cmc
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
into
mov
.byte
.byte
