xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
xchg
xor
xchg
ret
xchg
addl
xchg
ret
add
popl
push
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
xchg
xor
xchg
push
xor
pop
mov
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
xchg
add
ret
push
pop
ret
mov
ret
push
push
pop
push
pop
pop
push
xchg
mul
push
pop
xchg
xchg
xchg
push
pop
add
add
ret
push
xchg
add
ret
push
xchg
add
ret
push
add
add
ret
mov
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
call
push
push
call
call
push
call
push
call
push
call
call
push
call
call
pop
pushl
xchg
call
call
call
push
call
push
push
push
push
call
push
cmp
jae
ret
add
call
mov
addl
cwtl
mov
cmpsl
jbe
mov
shlb
mov
pop
fdivrs
call
cmc
fsubs
bound
test
iret
inc
mov
inc
frstor
lock
adc
imul
cs
les
cmovne
sbbb
pop
sub
inc
scas
inc
pop
imul
lret
cltd
clc
pop
je
mov
sbb
insb
push
out
fldcw
lea
cmp
mov
into
jne
push
loop
jg
jg
cmpsl
push
cs
sbb
leave
sub
mov
mov
cmpb
inc
mov
adc
cwtl
jnp
bound
cmp
jecxz
mov
inc
mov
sub
cmp
movsb
fiaddl
call
call
xor
cwtl
lret
imul
xlat
adc
and
mov
leave
mov
call
nop
cli
mov
cld
jmp
cmp
dec
xor
popa
lods
jmp
mov
scas
jl
mov
out
arpl
std
add
jecxz
cmp
ret
mov
lods
cmc
push
xchg
rorb
mov
xchg
mov
cwtl
data16
sbb
fwait
inc
mov
mov
cmpb
or
xorb
mov
cs
arpl
cld
bound
mov
das
pop
jnp
fcmovbe
jo,pn
jmp
sub
sbb
repnz
int
cld
pop
out
xor
mov
or
fisubrl
aam
mov
fcmovu
jle
test
cmp
mov
in
xorl
enter
cmp
sti
add
nop
in
loopne
testb
negl
pop
push
fidivs
in
push
push
xor
dec
shl
shld
int
sub
repnz
cmp
jecxz
mov
sar
imul
mov
dec
leave
dec
movsb
pop
xchg
cmp
fsubr
roll
dec
les
adc
jmp
push
cmpsl
cwtl
ss
xchg
adc
popa
mov
repz
sub
push
mov
scas
cmp
cltd
or
arpl
push
mov
lahf
jl
inc
enter
and
pop
adc
dec
mov
inc
in
pusha
and
push
ljmp
xchg
test
jecxz
lods
mov
scas
pop
xor
sbb
test
stos
imul
rcll
and
mov
jg
in
cld
dec
lret
pusha
push
ret
jge
xor
xchg
jmp
clc
mov
ss
inc
mov
push
fnstenv
adc
or
sbb
and
adc
jl
inc
iret
sbb
and
fwait
mov
add
xchg
sarl
adc
mov
orb
test
push
dec
movsb
push
push
sub
xchg
std
xchg
jae
xchg
and
in
je
adc
add
mov
add
or
das
nop
hlt
jecxz
xchg
cmp
adc
sbb
loope
and
fwait
jge
adc
imul
insl
mov
scas
movb
and
mov
cs
das
pop
loop
xor
test
jge
loope
stos
xor
inc
aad
movsl
into
stc
dec
cmpsl
loopne
mov
lock
stos
adc
and
aas
inc
fstpl
sub
adc
addr16
into
mov
int
aaa
inc
fsubrl
sub
cmp
popa
test
daa
data16
mov
pop
in
in
push
cmp
add
es
imul
mov
dec
or
stc
dec
pop
push
into
outsl
ficompl
aas
lods
mov
sbb
adc
test
out
or
int3
js
and
negb
lret
loop
call
les
fimuls
shll
jns
sbb
dec
mov
mov
arpl
testl
jnp
inc
les
jle
mov
mov
cmp
test
cld
ret
repz
in
cmp
cli
cmp
ficoms
xor
loopne
push
mov
or
lods
lret
mov
and
mov
and
int
sbb
pop
aad
cmpsl
ret
jle
repz
pop
cmc
out
inc
jl
mov
in
jle
rorl
xchg
test
dec
ret
scas
add
mov
xchg
stos
ja
shl
xchg
stos
dec
pusha
add
pop
sub
neg
testb
xchg
int3
pop
cld
test
mov
inc
xchg
push
rcrl
in
xchg
mov
movsb
inc
lods
insb
and
add
and
xchg
shrl
fildl
popa
pop
jo
sti
dec
test
addr16
dec
jmp
adc
negl
mov
sbb
inc
sbb
test
enter
shll
sub
sub
xlat
das
ficomps
xchg
or
xchg
or
mov
jbe
dec
std
add
cmp
in
out
inc
sub
leave
cs
pop
out
or
ret
int3
movsb
leave
sub
addr16
and
test
test
jp
or
mov
into
inc
xchg
out
pop
inc
es
mov
xchg
test
jmp
mov
adc
or
sub
ljmp
mov
mov
push
add
sbb
dec
aam
out
add
in
repz
mov
imul
dec
and
dec
xchg
inc
push
push
dec
sub
hlt
movl
inc
mov
jmp
les
sbb
sbb
jg
les
jno
les
sbb
add
cmp
lahf
mov
and
fbstp
ret
out
or
pop
inc
sbb
mov
sub
jg
and
test
xchg
test
inc
imul
andb
lds
ljmp
xchg
es
pusha
inc
std
out
fildl
push
push
cmc
mov
adc
fsubrl
or
lahf
fwait
mov
xor
or
jno
inc
call
mov
lods
fnsave
imul
mov
xor
inc
loopne
in
mov
and
std
dec
mov
lret
dec
ret
ja
subl
sub
and
lds
add
xor
cli
loope
nop
sbb
rorb
xor
xchg
subl
fstpl
out
xchg
daa
stos
sbb
fldenv
or
mov
inc
cli
push
loop
testl
hlt
movsl
jbe
addb
std
inc
aas
cmp
hlt
in
sub
mov
rorl
add
dec
and
xlat
mov
adc
movsb
jmp
dec
xchg
stos
and
icebp
call
xchg
nop
dec
cld
lods
lret
lock
jae
push
pop
popa
push
lret
xor
xchg
mov
mov
xchg
inc
mov
or
repnz
mov
daa
push
push
dec
xchg
sbb
mov
hlt
call
jmp
cmp
addl
out
adc
fistpl
shrl
lahf
daa
dec
popf
aam
filds
add
std
add
inc
xchg
fstps
imul
push
fwait
add
popf
daa
out
in
pop
cmp
and
js
out
xchg
inc
mov
mov
mov
cmp
mov
pop
insb
sbb
aas
push
sub
push
cmp
mov
cmp
xor
movsb
add
mov
mov
or
ss
test
xor
pop
repz
fmulp
and
pop
dec
dec
movsb
shll
pop
fsub
rcrb
sbb
sub
xor
push
pop
and
adcl
jne
xchg
mov
cmpsl
call
out
mov
adc
mov
cmpsb
mov
je
mov
xor
arpl
xor
call
push
cmpsb
loopne
daa
jl
lods
mov
cmp
scas
loop
or
ficompl
insb
fldcw
cltd
les
xchg
shrl
testl
sub
bound
lcall
add
xchg
stos
add
fs
fstpt
fdivs
mov
sub
push
test
sbb
cmp
into
stos
cs
mov
push
sbbl
les
gs
push
inc
or
jb
push
push
mov
push
sub
inc
movl
pushf
insb
mov
rcll
sub
cmp
mov
pop
mov
or
fcmovu
stos
lret
test
lcall
sbb
repz
movsb
lea
push
cmpb
js
fwait
je
pop
jle
aaa
mov
in
lret
in
rorb
movsl
icebp
adc
mov
mov
insl
ljmpw
dec
sbb
test
and
xor
mov
mov
out
dec
les
or
xor
mov
add
jb
aaa
imul
addr16
add
add
lahf
push
and
jg
cld
lock
pop
mov
fs
pop
sbb
fisttpll
adc
jbe
stos
rorl
scas
inc
jle
and
mov
inc
cli
adc
test
mulb
incl
sub
insl
jae
mov
and
repnz
sbb
lods
das
test
leave
mov
lods
popf
jns,pn
mov
jae
and
mov
pop
mov
nop
push
insb
jno
loop
sbb
push
imul
push
pop
dec
push
ja
in
jmp
pop
out
dec
cli
dec
mov
mov
into
mov
xchg
lret
aad
mov
cmp
xor
popf
pop
mov
xchg
sbb
jne
ret
incl
outsb
ds
movsl
dec
fisubl
xchg
out
jmp
sarb
add
lock
lahf
je
cld
and
ret
and
dec
add
add
jno
pop
sti
lods
aaa
negl
inc
dec
insl
inc
loop
inc
fnstenv
push
xchg
insl
push
mov
imul
xor
jp
mov
imul
das
jae
sarl
into
or
sarl
mov
sub
sub
inc
ljmp
enter
jg
xchg
mov
lods
imul
mov
fs
out
sbb
sub
mov
out
clc
ds
jl
ss
pop
jmp
pop
or
stos
stos
hlt
and
lods
rclb
sbb
fadds
enter
jl
enter
xor
or
push
cmc
push
mov
lea
divl
loop
bound
push
xorl
adc
add
or
dec
lea
test
test
jns
cmp
mov
cmpsb
sbb
js
xchg
mov
shll
leave
mov
out
pop
call
mov
hlt
fsub
int3
popf
push
in
mov
sub
arpl
and
push
out
jae
in
add
rcrb
sbbb
jg
xlat
stos
mov
pop
mov
mov
jg
mov
fstpt
pusha
repz
push
sbb
pop
cmp
dec
stc
push
xor
in
out
cs
push
gs
cli
sbbb
ja
or
push
push
xchg
or
mov
cltd
xchg
mov
lea
inc
dec
imul
jb
inc
in
cwtl
push
pop
xor
pop
bound
scas
out
mov
add
add
cmc
jo
les
push
arpl
xchg
pushf
adc
xor
pop
stos
sub
xchg
push
cmc
cs
imul
in
mov
test
sbb
jae
testl
enter
cmp
ret
push
imul
xor
adc
mov
xor
cmp
xor
adc
dec
inc
aad
adc
test
mov
sbb
mov
into
insb
mov
xchg
mov
jne
jne
xchg
inc
popa
sub
mov
je
xor
imul
adc
jle
test
lea
pushf
push
ret
out
add
xchg
dec
mov
stc
scas
daa
imul
sub
dec
fidivl
sbb
mov
out
negb
mov
fiaddl
dec
mov
nop
inc
hlt
xchg
jbe
mov
xor
test
test
repz
and
data16
sahf
dec
xor
dec
jne
ljmp
or
jno
or
ds
dec
push
push
jmp
lahf
sbb
mov
mov
xchg
xor
jp
xchg
std
mov
setl
push
inc
or
mov
out
shlb
test
fldenv
fdivl
add
out
sbb
fwait
cmp
out
test
ljmp
es
add
add
dec
aad
std
sbb
mov
out
addr16
push
jb
xor
repz
cltd
mov
cli
xchg
notb
les
inc
adc
or
add
out
leave
jecxz
mov
stos
or
pop
push
fxch
adc
xchg
or
xchg
rcr
xor
sbb
jmp
push
dec
dec
scas
sub
dec
jg
in
roll
xchg
xchg
xlat
add
adc
out
mov
cmp
push
sbb
push
add
sahf
push
mov
mov
mov
pop
jne
icebp
push
lock
jle
imul
icebp
add
aaa
mov
mov
ja,pn
xor
lea
adc
sbb
scas
shll
xor
xor
jae
jne
fldl
mov
lret
push
add
push
in
insb
stos
sbb
out
int
sub
es
and
mov
push
fcompl
out
dec
or
or
cmp
das
xchg
lahf
pop
xchg
adc
fs
hlt
sahf
addb
sbb
pop
push
ljmp
dec
xchg
dec
pop
dec
mov
sahf
inc
jle
mov
in
sub
sub
fwait
push
adc
adc
push
jmp
adc
pop
xor
push
jns
js
pop
sub
or
sub
cmp
xor
xchg
loope
dec
push
repz
in
cmp
std
gs
jbe
sbb
jo
in
stos
push
incl
mov
jmp
rclb
jno
mov
xor
repz
push
fildl
xor
test
sub
xchg
and
push
dec
aaa
mov
mov
cwtl
stos
out
aaa
sbb
push
sbb
add
stos
scas
bound
pop
push
mov
shll
pop
jne
sub
jle
shll
je
inc
pop
push
adc
inc
out
jecxz
xchg
in
sbb
jmp
idivl
pushf
aaa
or
test
xchg
xchg
call
lret
lock
fisubs
cwtl
dec
push
inc
aam
jge
jnp
int3
jb
ds
das
cli
lds
inc
mov
je
inc
xchg
sub
aam
mov
ja
push
inc
fldt
jmp
or
out
push
push
cmpl
lahf
dec
and
cmp
mov
fldcw
push
xor
outsb
aad
add
lahf
aas
imul
push
pop
dec
das
sub
xchg
outsl
cmp
aam
jge
lods
or
test
mov
ljmp
das
mov
cmp
mov
jge
into
jb
insl
or
inc
mov
sbb
xchg
fwait
addl
mov
mov
imul
mov
gs
stos
ret
sub
inc
iret
push
cli
inc
in
add
shll
mov
sub
insb
sbb
and
adc
mov
fdiv
int
call
mov
jne
pop
sahf
aaa
sbb
mov
aaa
sahf
jle
sbbl
mov
cmpsb
test
xchg
sbb
mov
ja
dec
cli
inc
and
cmp
psadbw
dec
pop
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
js
adc
adc
rcrb
sub
sbb
fcmovnb
sbbb
inc
adc
jl
fistl
and
pop
mov
lds
aas
add
mov
xlat
sbb
icebp
lock
scas
mov
inc
lds
fbld
aad
nop
stc
je
sub
dec
pop
ret
sbb
dec
jnp
xlat
rclb
mov
fadd
fstps
sbb
or
push
cmp
repnz
jge
in
push
adc
pushw
and
lock
jo
cmpb
aaa
clc
in
mov
scas
ljmp
or
mov
adc
mov
movzwl
mov
push
lahf
dec
scas
add
push
cmp
adc
int3
xchg
mov
insb
cld
std
lods
push
ss
loope
mov
sub
push
repnz
test
rorb
in
mov
testb
ret
jo
mov
inc
vandnps
call
inc
aas
mov
push
xchg
or
test
ja
scas
jecxz,pn
pop
jb
pushf
mov
inc
pop
faddl
mov
mov
lret
xor
aaa
out
lret
add
inc
mov
stos
mov
mov
dec
mov
cs
mov
push
dec
push
add
pop
push
jns
inc
xchg
ja
aad
add
lret
rclb
mov
sarl
xchg
shll
pushf
xchg
imul
adc
test
sbbb
jle
xchg
adc
inc
pop
push
shl
jp
call
lds
arpl
mov
add
cld
scas
jge
dec
or
aaa
lret
mov
mov
add
into
mov
icebp
adc
and
and
pop
dec
dec
mov
adc
push
inc
rorb
repnz
jmp
popa
push
xor
push
xor
dec
push
faddl
sbb
push
add
adc
imul
clc
vmwrite
in
xchg
outsl
out
jp
dec
cmovle
lret
les
push
sbb
xchg
push
int3
fwait
imul
fstpt
into
jmp
push
jne
cwtl
dec
and
fbstp
lahf
xchg
movsb
cmp
insb
cmp
sbb
shll
push
mov
scas
dec
push
les
push
jg
sub
dec
adc
inc
stos
pop
or
fcomps
sub
dec
ja
sub
jl
or
les
or
mov
fbld
cmp
mov
leave
xchg
jnp
fiadds
scas
cmp
mov
dec
jge
fmull
mov
inc
and
icebp
adc
mov
cld
rcrl
ret
lret
or
cli
test
inc
lahf
jae
dec
adc
leave
jecxz
add
in
fbstp
xchg
jo
js
mov
inc
inc
jp
add
rolb
test
stc
push
lds
stc
nop
lret
adc
fwait
inc
enter
test
jl
mov
mov
xor
insb
insb
pop
mov
xchg
mov
icebp
dec
arpl
inc
inc
jge
subb
cltd
inc
aam
rcrl
push
je
nop
call
sub
xor
filds
in
jecxz
mov
jb
pop
sub
jne
xor
push
shr
ret
sbb
or
fnstcw
add
pop
inc
lret
xchg
cli
rcl
ret
dec
lcall
pop
stos
dec
cmp
xchg
sub
dec
xchg
in
icebp
push
sub
hlt
insl
xor
pop
adc
icebp
test
cwtl
subl
out
and
cmpsl
xor
push
insb
push
mov
push
idivl
fcomps
xor
setge
scas
fcoms
adc
mov
inc
cld
mov
cmpsb
das
xchg
mov
cld
inc
sbb
jne
ja
rorb
pop
imul
movb
cmc
shl
or
mov
sbb
fisubs
xor
mov
aam
sbb
xor
dec
jecxz
loop
jno
pop
jo
pop
jb
inc
ljmp
sub
jns
test
inc
mov
shrl
xor
mov
bound
addr16
imul
in
push
xchg
xor
lds
js
cmc
push
xchg
pop
addr16
jmp
inc
call
push
es
or
leave
test
fwait
popf
enter
adc
popf
std
int
in
pop
inc
je
adc
push
std
xlat
dec
andl
sub
mov
or
mov
les
and
fistl
pop
hlt
lahf
mov
adc
stos
shl
icebp
mov
mov
xchg
das
cmp
jmp
sti
rorl
lret
mov
or
outsb
enter
adc
nop
imul
ficompl
addb
and
add
mov
repz
and
paddsw
mov
in
xor
clc
sub
dec
mov
lcall
inc
jmp
jge
flds
adc
or
stos
or
push
cmp
push
rol
loope
data16
xor
js
stc
mov
sbb
xchg
iret
lock
enter
fnstcw
xorb
js
xor
clc
ja
adc
or
jbe
shlb
ja
pop
fwait
dec
in
cli
sbb
dec
sub
pop
sbb
test
les
jecxz
mov
ret
sarb
sbb
jae
mov
das
adc
adc
sbb
cmp
cmc
and
test
dec
ljmp
dec
pop
dec
push
pop
in
jbe
mov
jl
sbb
imul
jnp
lods
sbb
jmp
jo
movaps
mov
pushl
out
fistpl
push
popa
inc
cld
rol
xor
xchg
add
ret
sub
dec
movsb
ds
pop
push
fdiv
cmp
push
xor
out
in
push
sbb
rorl
shrb
cvtdq2ps
dec
mov
aad
popa
orb
out
pusha
push
sbb
aad
movsb
adc
cmpsb
rcl
mov
push
mov
pop
in
pop
push
cmpsl
push
je
inc
and
out
dec
leave
pop
aas
adc
lcall
stc
sub
push
aaa
cli
cmp
xor
lret
push
mov
cmp
ja
add
push
push
sub
test
rolb
stos
jbe
lahf
jno
ror
mov
add
mov
fdivrl
and
in
fnop
repz
jg
ficoms
fcoml
hlt
xor
outsl
sbb
jae
rclb
ljmp
sub
int3
scas
bound
aas
push
xor
test
fnstcw
mov
in
xchg
jg
ss
test
and
and
repnz
enter
test
pushf
mov
vmovlps
iret
es
mov
aad
pop
push
mov
pop
popf
cmpsb
mov
add
push
popa
xchg
mov
movsb
fucom
outsb
or
das
lea
aam
jns
add
jae
sbb
pop
outsb
in
inc
jb
xor
lods
xchg
xor
pop
xchg
les
jns
out
sub
jle
push
repnz
aas
mov
adc
mov
dec
mov
scas
pop
mov
xchg
loop
sti
leave
mov
mov
dec
shlb
jno
mov
dec
and
js
inc
pop
jno
cmp
dec
inc
inc
inc
mov
stos
dec
fistpll
cmp
fs
and
rcr
cld
pop
push
and
add
es
dec
mov
aas
dec
push
jnp
and
in
xchg
sbb
roll
loope
sti
xor
repnz
mov
mov
sub
lods
mov
lahf
insb
popa
pop
das
xor
sti
mov
adc
sti
pop
addr16
sbbl
xchg
addr16
in
cmpl
out
push
xor
pusha
popf
les
movb
cwtl
in
lods
out
push
stos
movsb
lret
hlt
dec
push
sahf
and
inc
xchg
rolb
xor
nop
pop
fucomp
mov
test
std
test
mov
out
push
inc
add
push
inc
mov
jo
cmpxchg
pop
fdivrs
pop
mov
enter
mov
mov
test
fucomip
mov
aas
mov
repnz
bound
mov
stos
rcrl
out
jg
test
ja
mov
fstp
sub
notl
mov
aam
je
or
movl
dec
shll
shll
xchg
add
jne
sahf
sbb
gs
jg
aas
mov
sbbl
push
pushf
adc
or
and
xchg
leave
fstpt
xchg
shll
pop
dec
repnz
notl
and
mov
mov
dec
pop
scas
pop
shlb
clc
pop
jle
lcall
or
xor
sub
or
mov
cmpl
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
clc
push
cmp
mov
dec
adc
add
in
mov
mov
scas
jmp
push
iret
jno
imul
shl
sbbl
sbb
movl
pusha
add
andl
jle
fsubl
add
les
xor
shlb
sub
inc
stos
pushf
bound
jns
sbb
inc
enter
jecxz
adc
push
popa
xor
mov
aam
fs
lods
repz
orb
sti
repz
outsb
mov
scas
push
stos
jns
lods
add
scas
adc
pop
jno
in
push
movsb
mov
shr
daa
cmp
fbld
loopne
das
faddl
mov
sub
xchg
mov
dec
hlt
dec
inc
and
pop
subl
aam
xchg
ljmp
flds
dec
dec
fistpll
cmp
push
or
and
mov
push
xchg
jno
sahf
mov
mov
in
je
xchg
sahf
je
addr16
ret
mov
lcall
clc
out
xor
std
test
push
or
adcl
stos
mov
rcrl
mov
out
js
or
lret
jp
faddl
jp
xor
dec
hlt
push
bound
dec
arpl
mov
push
sahf
xor
cwtl
js
pop
xor
bound
cmp
ds
test
add
xor
fmuls
aam
cltd
psubb
fstps
xchg
rcll
cmpsb
add
in
lods
xchg
add
push
mov
loopne
mov
add
mov
push
jns
imul
mov
arpl
dec
test
inc
fs
movsl
mov
aaa
or
push
inc
mov
adc
fcomi
or
push
adc
jl
bound
scas
inc
mov
sub
fwait
sbb
dec
pushf
xchg
cmp
lock
xchg
cmp
add
data16
loope
rcr
push
shr
xor
lcall
cltd
ljmp
jmp
push
lret
loope
xor
xor
cmp
js
pusha
call
adc
push
xlat
xor
mov
int3
scas
into
mov
pop
in
adc
loopne
xchg
in
mov
daa
pop
loop
sbb
sub
sbb
mov
xor
aad
rorl
push
sbb
mov
aaa
mov
test
popa
das
in
sbb
and
mov
xchg
push
push
outsb
fstl
pop
iret
pop
ret
sub
jg
test
mov
mov
pusha
ss
mov
repnz
cmp
push
bound
pop
mov
out
arpl
ljmp
mov
adc
mov
push
xchg
add
jns
mov
das
in
lock
push
cmpsl
mov
out
aad
xchg
fimull
test
mov
push
into
call
lock
fdivr
mov
inc
pop
inc
xchg
popf
jo
test
xchg
jae
scas
stos
xor
imul
jae
adc
lock
add
shl
cmp
andb
mov
pop
in
stos
lret
sbb
and
scas
xchg
or
loopne
xchg
jmp
daa
mov
xchg
push
fstl
add
iret
add
jmp
adc
mov
xor
sub
xor
or
mov
cwtl
xchg
xchg
sar
orb
decb
fisubrs
jmp
inc
pop
add
push
dec
jmp
jg
or
imul
mov
out
lock
rorb
xor
ror
dec
push
lahf
adc
adc
mov
rorl
out
lods
addl
loope
insb
clc
std
or
idivb
push
adc
push
mov
xchg
jnp
sub
movsl
nop
or
ljmp
je
cld
dec
sbb
inc
pop
outsb
push
push
pop
test
xor
imul
jne
push
sub
cmc
sahf
push
insb
dec
outsb
clc
sbb
andb
js
xchg
movsl
or
mov
dec
mov
fnstenv
dec
push
push
sbb
test
imul
imul
cmpsl
daa
push
lahf
mov
mov
xchg
jmp
mov
push
cmp
dec
out
mov
adc
xchg
aaa
lods
cltd
push
cmp
cmpb
sti
inc
adc
je
push
jno
inc
dec
fwait
mov
fucomi
sub
xor
jg
sub
dec
jo
shlb
sub
in
aad
mov
push
fisttps
xor
jg
dec
mov
repnz
jmp
shlb
cmp
imul
ret
xlat
es
lcall
outsl
sub
mov
pop
popf
mov
xor
inc
mov
mov
xchg
dec
mov
cs
adc
div
xchg
test
xchg
ds
cmp
jno
iret
mov
int
js
adc
rorl
jb
loopne
jmp
inc
sbb
sarb
cmp
sub
mov
in
arpl
push
and
dec
xchg
push
ret
mov
rcrb
out
xchg
push
pop
ss
sub
out
aam
rol
jno
add
push
lret
mov
pushf
push
or
jecxz
aam
fiadds
iret
mov
or
cltd
xchg
cld
jmp
adc
cld
xchg
ret
popf
mov
les
add
lods
decl
xchg
push
std
hlt
js
and
xchg
xchg
xchg
cltd
pop
xor
scas
jno
sub
cmp
sub
mov
mov
adc
mov
negb
fidivs
sub
pop
outsb
or
lods
shrl
inc
dec
jp
sti
inc
dec
xor
inc
or
fistl
dec
mov
pop
negb
cmp
ja
push
loopne
in
mov
or
xchg
xor
cmpsl
mov
jl
xchg
xor
and
call
scas
pop
mov
sbb
fnsave
xor
pop
pop
xchg
xchg
shrb
and
cltd
fld1
jo
jge
xor
dec
shr
push
loopne
xor
ss
adc
xchg
dec
lret
in
mov
call
mov
mov
stc
fsubs
sbb
pusha
sub
sub
aam
xchg
repnz
jmp
or
push
pop
fwait
mov
xor
dec
scas
enter
cmp
cltd
lcall
pop
cvttps2pi
mov
mull
insl
loope
pop
lcall
pop
inc
adc
xchg
xorb
sub
mov
cltd
cltd
addr16
and
jmp
enter
in
mov
and
sub
push
cli
mov
xchg
test
mov
jge
jge
popl
jns
push
mov
dec
mov
xor
push
jne
movsl
xor
adc
mov
sbb
das
cmp
inc
inc
or
mov
mov
scas
push
mov
ficompl
aas
mov
push
xor
dec
es
sbb
mov
ljmp
push
lock
jle
in
or
shr
pop
pop
add
shl
leave
xchg
inc
mov
sti
dec
add
movsl
fldcw
push
mov
mov
es
aam
dec
decb
insb
xor
lret
fyl2xp1
inc
sbb
ret
mov
xchg
out
loope
ds
jne
add
lahf
xchg
mov
aas
hlt
push
sub
stc
and
push
lea
mov
scas
sbb
or
and
xor
push
push
out
ljmp
or
dec
xchg
lcall
mov
dec
mov
sub
idivb
les
mov
mov
xchg
divb
adc
cmpsl
stc
add
xchg
mov
xchg
cmpsb
sti
fisttpll
or
repz
stos
add
movb
sub
rcrl
jnp
pop
pop
add
sarl
add
data16
mov
inc
push
mov
lret
in
outsb
in
je
lret
xchg
jb
push
flds
decl
inc
sbb
ret
dec
cltd
shll
xchg
cmp
jmp
cmpsb
pusha
imul
or
ret
test
les
inc
and
je
mov
lcall
jne
aas
leave
call
shr
or
jno
fidivrl
jecxz
push
in
push
int
lock
xor
dec
or
and
sahf
sbb
push
lds
rcrb
xor
loope
jl
add
lahf
push
iret
xchg
push
xor
ret
push
push
sbb
ja
cmp
fs
adc
pop
pop
jge
sti
push
lahf
or
and
ss
pop
int
test
cmp
dec
cmpsl
mov
sbb
cmp
arpl
nop
cmp
outsw
xchg
xor
aaa
xchg
cli
fldenv
cmp
cmp
sbb
push
cmp
jle
push
repnz
fsubs
and
ds
jns
mov
daa
dec
inc
sar
sti
pop
fldl
aam
adc
shl
sbb
ret
test
lcall
mov
arpl
faddl
sbb
insl
mov
sahf
mov
pop
dec
bound
jmp
into
in
lods
mov
mov
and
sbb
cmp
mov
jne
js
nop
push
aas
xchg
cmc
enter
lret
jge
jecxz
xchg
lret
outsb
mov
lret
push
inc
shrl
mov
push
hlt
adc
imul
mov
test
mov
sub
cmp
ds
cmpsb
mov
cmp
xchg
push
ja
lods
shlb
lahf
sbbb
subb
xor
arpl
sub
pop
sarb
adc
ficompl
icebp
xor
add
or
adc
les
lods
pop
subl
push
loopne
push
loop
mov
xor
movsb
pop
cmp
fsubs
arpl
xor
in
test
cmp
mov
je
mov
jbe
sti
mov
mov
sub
mov
lock
gs
std
push
pop
loope
add
xchg
pop
pusha
arpl
mov
jp
stc
push
sub
mov
movsl
out
dec
into
jb
mov
rclb
pop
popa
rcrb
jp
adc
test
lret
or
mov
add
shl
jg
lret
push
xor
mov
cmpb
mov
jns
out
push
mov
mov
cwtl
aad
fcom
or
add
push
cli
and
jnp
mov
adc
inc
mov
or
test
sahf
cld
mov
jg
and
sub
fdivrl
or
cmp
mov
lods
adc
push
and
pushl
cmp
sbb
and
cmp
fstpl
bound
cmc
sub
cmp
jp
faddl
xchg
out
dec
int3
push
jae
ja
data16
test
and
in
inc
add
add
push
fidivs
inc
or
je
xchg
jb
pop
test
cmp
sub
movsl
std
ffree
sbb
shr
jbe
aaa
adc
sbb
fisttps
xchg
lcall
lret
xchg
test
inc
inc
mov
jl
inc
dec
and
cltd
fadd
les
sub
mov
out
in
and
mov
cli
xchg
cli
int
xchg
sahf
mov
push
push
and
adc
pop
jle
jne
in
sti
pop
pusha
mov
jo
imull
imul
lds
movsl
in
jl
jg
insb
jl
lea
notl
jg
mov
and
xor
pop
adc
adc
cmp
push
jnp
adc
dec
pop
fsubl
insl
mov
cmpsb
mov
out
and
outsb
xchg
xor
test
inc
inc
sub
jae
fcmovb
iret
push
jne
in
enter
pop
loopne
test
add
cwtl
enter
fcomip
in
push
addb
mov
xchg
lcall
xor
fnsave
outsb
xor
push
mov
loope
popl
jmp
push
sahf
arpl
xchg
cwtl
loopne
mov
or
int
shl
pop
dec
adc
es
dec
arpl
jmp
clc
ret
mov
jns
lock
lods
sbb
xor
fcoms
add
repz
shlb
mov
outsb
iret
loope
mov
and
arpl
push
mov
push
dec
sbb
nop
cmp
addl
lods
insb
lret
push
rorb
fsts
sub
mov
xchg
push
inc
imul
jns
shrb
ffreep
shlb
mov
lret
and
fidivrl
push
in
mov
push
lea
mov
test
or
loop
mov
fsubl
push
push
out
outsb
sub
insb
push
sbb
cltd
jl
iret
mov
jo
or
iret
cmp
fnstenv
ds
cmp
icebp
in
dec
jae
mov
loopne
inc
fldcw
push
insl
pushf
dec
js
xchg
es
hlt
dec
adc
les
aaa
les
add
fwait
sti
adc
ss
push
pop
nop
and
add
test
or
ficoml
cmp
fucomip
mov
xor
fdivr
sub
push
cmp
xorl
or
dec
cs
and
mov
cmc
rorb
arpl
shll
mov
fwait
pop
dec
fs
aaa
adc
sub
out
mov
jge
fs
or
pop
or
test
int3
xor
daa
inc
inc
cmp
mov
mulb
inc
ja
or
nop
lret
and
ret
enter
lods
loop
pop
xor
inc
lahf
mov
and
xor
lahf
ja
adc
je
enter
pop
sahf
punpckldq
aam
insb
loopne
xchg
cmpsb
dec
movsb
out
push
divl
inc
push
inc
xlat
xor
call
int
cld
ret
dec
loop
xchg
jb
sub
or
dec
xchg
dec
lahf
xchg
into
jnp
xchg
hlt
lret
shll
adc
iret
sbb
push
cmc
scas
pop
mov
clc
mov
addr16
outsb
push
mov
lahf
sbb
inc
movsl
arpl
js
in
or
sti
cmc
mov
pop
bound
in
jns
jge
inc
xchg
pop
clc
gs
mov
dec
xchg
lret
push
imul
shll
dec
jne
js
cmp
dec
cwtl
cmp
jns
or
stc
adc
inc
mov
insl
mov
add
mov
mov
mov
jae
push
icebp
pop
dec
pop
imul
cs
xchg
sub
adc
lret
or
dec
popf
clc
fbld
jns
aas
ss
mov
push
cmpsl
insl
lock
or
or
jecxz
mov
int3
test
mov
movsb
mov
xor
je
test
lret
push
jl
jb
push
mov
and
sarl
dec
cmp
aad
push
sub
stc
lret
cli
xlat
cmp
mov
lock
repz
mov
fsubl
mov
loop
fistpl
dec
stos
iret
repnz
mov
outsl
xor
push
mov
lods
mov
jecxz
fisttpl
sub
inc
shrl
gs
xor
adc
sbb
jbe
mov
mov
inc
xchg
addr16
cwtl
std
adc
out
inc
mov
push
lods
sbb
dec
jl
xor
mov
clc
stc
and
clc
sahf
es
or
pop
xchg
out
sub
int3
mov
lock
jl
mov
lds
shlb
leave
ret
fistpl
icebp
mov
repnz
xchg
sahf
jmp
mov
mov
rcrl
sbb
sub
mov
fwait
jno
mov
cs
leave
inc
rcrl
mov
add
mov
shlb
mov
fbstp
cltd
fcmove
test
xlat
insl
stos
jle
push
dec
dec
clc
push
adc
jle
push
jle
mov
lret
inc
sub
mov
xchg
inc
lret
jge
movsl
in
das
lret
push
pop
daa
xchg
sahf
push
mov
xchg
outsl
mov
dec
pop
sub
push
cbtw
lcall
sbb
sbb
adc
fcmove
out
insl
mov
adc
pop
loopne
cmpsl
pop
test
mov
push
push
loop
lds
pusha
lea
cmp
xchg
push
push
stc
rolb
loop
cmpsb
int3
and
add
adc
mov
and
push
and
pop
dec
in
loope
shrl
leave
mov
xchg
inc
fidivl
aas
push
mov
xchg
or
sbb
inc
test
inc
pop
and
mov
sbb
mov
push
mov
lock
outsl
cmp
inc
rol
nop
out
inc
add
lret
stos
stc
dec
mov
pop
lds
xchg
pop
fistpl
mov
scas
fstps
pop
xchg
dec
les
adc
cmpsl
mov
sbb
in
insl
push
in
lods
orb
and
pop
lret
push
adc
add
pop
fbld
dec
xor
xchg
pop
jmp
lods
mov
cmp
ret
mov
pop
fidivrs
loopne
or
adc
sub
loop
cmpsl
or
cld
mov
push
popa
mov
cmp
jbe
push
aam
xchg
jecxz
adc
mov
xor
arpl
sbb
out
cltd
das
mov
outsl
mov
data16
inc
shll
outsl
stos
std
addl
subb
addb
xchg
and
lods
mov
movsb
fucom
sahf
push
sub
out
into
leave
lods
sub
outsb
push
addr16
in
adc
aam
or
push
shrl
gs
nop
inc
cmpl
icebp
scas
adc
dec
movsb
fistl
mov
test
or
test
mov
xor
and
js
popf
and
in
dec
stos
pushl
adc
aas
inc
mov
add
call
push
int3
jns
or
and
mov
xor
rdmsr
push
mov
in
jge
jmp
outsb
call
add
clc
bound
xor
adc
fistpl
sbb
test
fsubp
ret
lods
aam
xchg
sbb
push
cmpb
mov
movsb
sahf
mov
and
pop
call
repz
jecxz
es
pop
sub
cs
daa
or
cmp
test
sbb
lea
neg
repnz
ret
lock
cmc
xchg
adc
arpl
or
aaa
aad
adc
mov
pop
inc
mov
fdivrs
xor
addr16
push
jbe
bound
shll
int3
pop
adc
jle
mov
or
xorl
sti
inc
shl
push
popf
and
call
cmp
jb
lds
xor
or
cld
cmpsb
fmull
push
pop
fcmovnb
mov
popa
bnd
add
enter
ljmp
icebp
push
rol
pop
outsb
jae
and
int
call
jae
dec
aam
mov
sbb
or
cmp
and
push
cmp
mov
scas
sbb
push
rcll
mov
stos
fwait
in
and
lods
xor
inc
or
xor
in
scas
iret
push
and
popa
hlt
or
loop
push
rolb
mov
push
and
out
and
rcrl
cmpsl
out
sub
fs
add
test
pushf
dec
adc
mov
sbb
adc
cmp
mov
shlb
iret
mov
icebp
pop
and
ror
outsb
jae
inc
dec
inc
lods
ret
sub
or
in
pop
jle
sub
scas
out
ja
and
push
xor
mov
lods
fldl
pop
mov
sbb
addr16
mov
outsb
jge
push
icebp
or
jno
popa
pop
call
or
in
and
shlb
add
add
andl
je
nop
jg
and
ds
pop
dec
inc
jecxz
pop
lea
cmc
mov
dec
and
out
adc
mov
in
pop
js
stos
push
xor
mov
pop
fstl
sub
out
inc
out
movsl
push
es
push
es
es
dec
xlat
int
sbb
or
insl
or
icebp
mov
push
arpl
jns
jg
call
stos
jle
ljmp
shll
sbb
add
divb
cmp
fcomps
clc
lret
pushf
repz
scas
cmc
mov
imull
stos
pop
push
mov
pop
cmp
popf
sub
sub
and
push
outsb
mov
or
ljmp
xor
push
ja
pop
push
enter
hlt
daa
aad
frstor
mov
xchg
aad
addr16
add
jno
iret
in
xor
mov
cli
or
nop
mov
rolb
sbb
stos
mov
nop
aas
andl
aad
loope
hlt
jbe
repz
out
test
adc
and
and
add
lea
mov
mov
fwait
sti
popf
addr16
mov
pop
out
nop
ret
push
je
and
je
mov
rcr
or
jbe
xor
cmp
les
cmp
mov
ja
rcrb
and
nop
aam
push
or
cmp
pop
inc
pop
pushf
int3
scas
jb
adc
adc
cmp
jb
and
push
xchg
imul
fisubrs
mov
dec
jl
pusha
pusha
dec
cli
mov
pop
pop
mov
inc
test
ret
mov
mov
jo
pop
pop
int
mov
ja
lret
inc
daa
mov
pop
mov
mov
or
mov
sub
xchg
outsb
pop
mov
push
mov
int
aam
data16
push
shll
into
add
inc
test
inc
lods
adc
dec
insl
and
icebp
movsb
and
mov
mov
mov
xor
cmp
add
pop
mov
imul
inc
mov
sbb
pop
pop
and
cvtpi2ps
xor
xchg
je
push
jns
add
dec
push
mov
jle
push
mov
inc
xchg
call
mov
mov
pop
jg
insb
jp
jecxz
pushf
pop
outsb
sub
adcb
insl
xchg
jns
pop
push
cmc
dec
addr16
xor
pop
jne
or
stos
mov
das
into
dec
xchg
lcall
pop
sbb
les
add
jbe
pusha
lods
mov
and
negl
shll
test
int
sbb
icebp
decl
scas
jae,pt
outsl
or
int
mov
adc
push
mov
pop
aad
cmp
push
hlt
or
cmp
lret
lock
mov
sbb
sbb
daa
bound
adc
push
aad
fistps
outsl
mov
lock
int3
rorb
mov
cmp
or
mov
jmp
push
inc
divl
insb
pop
aaa
sahf
xchg
cli
and
add
xchg
mov
dec
sti
movsl
js
sbb
insb
outsb
mov
lea
mov
mov
movsb
cmp
scas
into
sub
fdivs
test
iret
cmp
icebp
xor
rol
jge
sahf
dec
push
lret
xchg
or
popf
fidivs
push
mov
fimull
sbb
sub
lds
shrl
lahf
addr16
movl
scas
jne
outsl
sbb
out
xor
stos
mov
shrl
mov
lods
jb
aaa
cmp
jmp
push
sbb
popf
data16
mov
dec
aad
cmp
xor
sub
add
nop
inc
fsub
sbb
fnstsw
xchg
mov
xchg
enter
mov
sar
xchg
push
call
or
outsl
push
cwtl
adc
dec
cwtl
sahf
mov
lods
sub
sarb
mov
pop
pop
mov
inc
pop
inc
push
xchg
out
or
ret
data16
fists
imul
les
rcl
jne
or
pop
sub
stos
cmp
dec
insl
js
push
ds
pop
pop
add
mov
shrl
mov
mov
jne
pop
lret
or
inc
jb
mov
mov
xchg
subl
sub
scas
fmul
jb
fiadds
mov
xchg
dec
mov
js
mov
faddl
scas
pushf
mov
cmp
test
push
mov
or
jae
inc
jnp
dec
cmp
out
sub
shrl
enter
or
push
fwait
mov
es
push
inc
aas
dec
xchg
outsl
dec
rcll
xor
cmp
xchg
idivl
icebp
test
sbb
xor
sarb
imul
push
subb
mov
sub
sub
jl
add
daa
inc
and
cmp
xor
das
pushf
mov
movsl
pop
shr
aad
xchg
popf
retw
pop
mov
stos
shl
cmpsl
jp
inc
test
daa
mov
dec
pop
shrl
mov
jmp
addr16
push
sbb
fidivrs
ljmp
int
adc
xchg
nop
addr16
lahf
or
and
iret
popf
arpl
in
in
addr16
lcall
xor
notb
mov
addr16
repnz
and
loop
mov
adc
mov
jo
stos
jge
sub
lods
mov
mov
mov
aam
xchg
test
imul
lods
cli
mov
ret
rorl
sarl
fldt
daa
xor
pushf
lret
out
pop
sub
idiv
push
push
hlt
cmp
jno
adcl
lods
in
and
or
or
insb
enter
outsb
and
out
das
jb
adcl
cmp
push
sbb
loop
jge
dec
inc
test
jge
mov
mov
xlat
pop
push
mov
fistl
sarb
inc
and
bound
mov
pop
cmp
or
mov
repnz
sahf
sar
fs
in
push
mov
shlb
push
hlt
mov
rorl
mov
or
repnz
popf
cmp
xchg
iret
cmp
pop
mov
adc
mov
cmp
inc
sub
dec
scas
daa
ljmp
pop
xchg
cmpsl
mov
adc
testb
add
mov
test
out
sub
enter
and
cmp
jg
scas
xor
mov
pop
std
rcl
xchg
mov
pop
mov
std
loope
scas
cmpsl
sub
jle
int3
jmp
popf
xchg
pop
insb
jns
shlb
mov
outsb
sti
push
int
fsubl
les
add
mov
lods
xchg
dec
clc
jp
loop
prefetcht1
add
xchg
repnz
adc
insb
mov
cmc
xor
jo
mov
stos
sahf
jns
mov
push
in
lahf
imul
pop
leave
xchg
jnp
xor
pop
adc
lock
sti
mov
jg
in
loopne
xchg
hlt
sub
push
lds
fcomps
in
std
mov
rol
ret
hlt
outsb
jg
adc
ds
add
insb
sti
adc
push
push
sti
push
jae
lret
sub
sbb
ljmp
mov
mov
xchg
aad
cmp
mov
out
push
rcr
cmp
into
push
cli
dec
adc
dec
std
sub
insb
sub
scas
fistps
or
gs
lods
daa
add
icebp
out
inc
pop
pop
pusha
bound
lock
lods
cmc
addr16
lcall
and
cmpsl
xor
jmp
pop
jmp
hlt
push
xlat
popf
mov
push
inc
mov
sub
sub
xor
push
sarl
jne
fs
xor
or
pop
fstl
pop
movsb
push
cwtl
test
mov
lret
add
push
jp
inc
stos
jle
es
lods
pop
outsl
ret
sahf
pushw
xchg
rorb
ljmp
mov
stos
xor
sarb
sbb
sbb
jns
int3
push
jmp
sbb
and
jecxz
in
sbb
movsl
in
arpl
jne
iret
jp
shlb
lahf
pop
add
dec
aas
mov
movsb
insl
fcomp
pushf
sti
mov
jge
dec
cs
mov
pusha
insb
gs
out
pop
pusha
sbb
in
or
dec
cmp
loop
pop
ret
sub
clc
sahf
scas
jmp
jle
andl
ficompl
callw
jge
cld
xchg
pop
insl
pop
xor
xor
inc
testl
push
mov
stc
dec
sbb
call
mul
pop
jg
cmp
mov
fadd
sub
lds
cltd
int
or
sub
iret
push
shrb
or
pop
cmpsb
push
jge
lods
pop
xchg
sbb
gs
ja
push
xor
and
cltd
lds
fldenv
movsl
sub
loope
jge
sbb
dec
lock
pusha
pop
xchg
nop
js
mov
lret
test
mov
mov
popf
xchg
and
stos
mov
rolb
mov
jg
cmp
mov
out
cmp
inc
movsb
inc
sub
xchg
mov
in
sub
test
sub
fwait
test
in
mov
adc
ficoml
gs
add
pop
pop
xor
outsb
xchg
inc
pop
sub
inc
lods
sub
sub
mov
lahf
out
or
sub
das
inc
or
push
adc
xchg
xor
jle
push
dec
xchg
xorl
mov
int3
in
aad
push
or
jecxz
sarl
in
rcll
scas
fisttpll
push
or
push
aas
jle
sbb
leave
mov
mov
xchg
jno
adc
pusha
mov
rorb
ljmp
sub
cwtl
adc
and
adc
pop
inc
pop
popa
jle
pop
lock
loope
jno
mov
ret
ret
dec
pop
js
outsb
mov
std
xor
mov
mov
rcl
inc
mov
adc
movsl
stos
sub
insl
scas
push
pop
idiv
sbb
xchg
lock
sbb
out
bound
and
pusha
fildll
mov
scas
sbb
jnp
inc
shrl
ret
adc
out
stos
addl
jno
pop
loopne
outsb
pop
loop
add
outsb
loop
cmp
or
lods
ret
mov
rorl
xchg
mov
ret
mov
iret
sub
cmp
mov
pop
mov
inc
or
arpl
rcrb
lods
push
mov
inc
cmc
sahf
mov
mov
xchg
das
add
mov
mov
out
pop
fsubrs
jns
ljmp
inc
test
sarl
in
sbb
or
clc
add
or
pop
dec
sub
shlb
fimull
pop
gs
xor
fisubrs
xchg
inc
scas
lods
inc
xor
xor
dec
add
mov
jp
fnsave
psubb
jecxz
scas
pop
fcom
mov
fdivrl
inc
inc
xor
mov
fldcw
pop
sbb
pushf
push
sbb
aaa
inc
rcll
add
aad
cmp
cmp
jo
pop
sbb
test
aam
inc
push
arpl
push
sub
pop
loopne
jp
or
aas
mov
jg
sbb
sub
scas
add
lods
xor
shll
and
lods
push
xchg
scas
and
icebp
addr16
roll
cmp
lods
roll
mov
mov
mov
or
jns
cmp
cli
inc
lret
or
mov
enter
ss
int3
jnp
cmp
jp
add
push
cmpsb
icebp
cs
loop
sti
jmp
or
scas
jne
sub
xchg
push
scas
jne
push
mov
mov
xor
push
dec
pop
fcoml
cmp
repnz
enter
nop
jo
loope
shll
cmc
in
sub
fucomp
inc
xchg
mov
adc
sub
cmc
xchg
inc
imul
je
lds
inc
jnp
lods
jle
pop
test
jge
mov
jle
mov
sub
and
inc
mov
or
xchg
sahf
mov
iret
sub
sbb
movl
jo
mov
lret
jg
test
xchg
lds
aas
js
mov
jp
inc
mov
mov
mov
add
cmp
cmp
lds
mov
and
data16
lcall
add
lcall
add
adc
and
jno
pop
shlb
xor
mov
mov
cwtl
insl
sub
pushf
test
jl
movsb
dec
shlb
iret
jo
sbb
les
jns
adc
jns
xchg
adc
pop
mov
mov
mov
or
xor
cld
cltd
add
add
xchg
inc
out
mov
nop
int
ds
push
cmp
mov
and
hlt
jb
mov
movsb
push
lock
mov
mov
or
testb
pop
mov
mov
sub
movsl
jp
iret
cmpsb
mov
fildl
ja
push
xor
movsb
pop
and
sub
dec
sbbb
test
pushf
push
add
and
cmpsl
rcll
jns
into
out
xor
xchg
js
negl
adc
or
xor
hlt
dec
fiaddl
push
sub
addr16
loope
jge
test
ds
add
pop
je
xchg
inc
pop
repnz
xchg
dec
outsl
lods
idivb
insb
xlat
push
jne
insb
rorl
fcomps
push
hlt
das
test
fisubrs
and
and
aas
mov
push
std
mov
jae
insb
mov
jle
lods
cmc
sbb
lcall
fdiv
jmp
mov
data16
sti
pop
push
mov
xor
mov
jmp
rclb
inc
std
jle
movsb
pop
mov
mov
or
push
bound
jno
push
es
repz
mov
hlt
adc
jg
sbb
cmp
incl
and
push
mov
loope
inc
push
leave
pop
cmp
out
mov
fisttpl
sbb
sbb
mov
inc
mov
pop
jp
and
inc
and
cmp
or
xlat
js
mov
pop
add
cli
pop
xchg
into
fwait
or
addb
sti
and
push
pop
sub
movsl
cmp
mov
pop
lods
and
push
daa
sbb
aad
sbb
inc
mov
mov
xchg
decb
adc
out
mov
push
adc
jae
lcall
cli
pop
mov
scas
ret
aam
fildl
lods
and
pop
sarl
mov
sbb
push
fdiv
sbb
xor
in
sub
int
pop
pop
cmc
dec
mov
jnp
loopne
mov
or
inc
movsb
cltd
movsl
inc
jge
sbb
addl
lods
out
gs
ja
dec
cmp
xorl
fisttpll
loope
jecxz
imul
in
xor
pop
xchg
xlat
jge
outsl
inc
out
lahf
or
push
pop
sbb
mov
shr
insb
jle
lods
xor
bound
sub
jb
orb
jmp
cli
ret
pop
lahf
adc
mov
test
mov
push
test
adc
adc
mov
push
repz
bnd
jns
mov
mov
mov
or
nop
pop
push
cmp
sbb
dec
cwtl
mov
dec
daa
aad
dec
mov
ficompl
lret
fdivs
mov
mov
dec
in
clc
cmp
iret
and
loop
xor
sub
dec
or
mov
daa
mov
pop
test
jb
xor
mov
and
pop
pop
jecxz
cmpsl
in
add
and
mov
sbb
dec
out
mov
inc
fcos
int
out
cmpsl
shll
outsb
jge
aas
cmpsb
fisttpll
sub
cmpsl
mov
mov
loopne
scas
fimuls
fdivrs
enter
fists
sub
out
les
rorb
enter
insb
movsb
popf
dec
call
dec
lret
pop
enter
jne
shrb
notl
adc
into
mov
out
dec
stos
sbb
mov
dec
inc
aad
xor
in
xchg
push
scas
mov
in
pop
jbe
icebp
fwait
dec
lock
cmp
clc
ss
mov
nop
das
jle
dec
aad
iret
std
add
lods
mov
push
sub
inc
adc
js
aam
xchg
sbb
jge
push
dec
cmove
lahf
xor
test
into
mov
and
icebp
call
jnp
shlb
xlat
out
cmp
jge
mov
cmpsl
int3
jg
adcb
mov
mov
cmpl
add
inc
and
mov
data16
lahf
ljmp
adc
pop
lcall
xchg
inc
jp
cmp
shll
mov
shrl
mov
popa
mov
mov
sub
dec
and
and
xchg
mov
sub
jge
out
dec
sbb
and
dec
lods
stos
push
fsubl
mov
jno
pop
mov
sbb
mov
stos
sub
sub
inc
or
scas
jne
rorb
leave
push
dec
js
and
jae
in
cmp
test
mov
jmp
hlt
dec
push
arpl
mov
sarl
test
ret
jo
fisubl
jp
xlat
movsb
repnz
pop
xchg
jns
mov
xor
push
jnp
dec
jge
mov
mov
je
test
pop
addr16
mov
jae
clc
iret
lods
or
mov
jbe
cli
popl
inc
mov
jb
mov
leave
fcoms
cmpsb
stc
mov
call
movsb
enter
in
mov
or
test
jmp
mov
hlt
push
decb
push
dec
lcall
mov
xor
mov
lret
mov
mov
lock
ljmp
push
enter
icebp
sub
xor
ljmp
dec
int3
dec
outsb
loop
dec
mov
sbbl
mov
cmpsb
shl
mov
xchg
cmp
data16
lods
adc
mov
mov
dec
in
cmp
daa
out
mov
test
xchg
xchg
dec
push
outsl
xchg
gs
and
push
sub
mov
or
loop
xor
iret
imul
je
lds
fiaddl
lea
sub
imul
mov
mov
mov
sbb
out
sbb
dec
mov
mov
xchg
aad
add
sahf
dec
pop
into
cmpsb
jae
push
das
jmp
jg
mov
xchg
pop
imul
rcll
out
dec
pusha
sti
inc
in
andl
pop
xlat
out
lret
dec
aad
movsb
dec
pop
leave
sub
lea
cmovle
shl
inc
xor
lods
repnz
jecxz
or
pop
insl
sbb
inc
or
arpl
pushl
push
loope
push
int
call
xchg
sub
stos
shll
fisubrl
inc
sarl
insl
sub
push
inc
mov
jl
xor
js
mov
fnstcw
leave
dec
movsb
dec
fldcw
scas
fmulp
mov
dec
adc
loop
test
les
shr
pop
fdivs
sbb
aaa
test
imul
cmp
mov
or
das
sbb
inc
push
in
add
cmpsl
pop
or
mov
inc
das
inc
aam
out
jbe
push
sahf
pop
aam
adc
sub
enter
js
popa
sbb
sahf
cmp
das
movsl
jne
inc
inc
add
sub
adc
adc
lahf
cltd
lods
repnz
mov
call
in
popa
stos
xor
dec
leave
fbstp
dec
cmpb
add
sarb
into
jecxz
mov
insb
dec
out
push
into
out
into
mov
pop
add
pop
add
push
fld1
mov
test
sub
ljmp
jae
wrmsr
insb
sbb
fcomps
or
and
daa
jmp
xchg
push
xchg
xor
push
mov
test
sahf
xchg
dec
fidivrl
clc
jge
in
xchg
or
mov
cmp
andl
cmc
push
mov
sbb
xor
hlt
sbb
mov
fcoms
push
out
js
pop
rcl
in
orl
mov
mov
xor
dec
push
add
mov
fwait
ljmp
pop
call
addl
movsl
mov
fucom
mov
fcoml
cmp
scas
js
lret
jecxz
popf
lock
and
inc
add
push
jb
ljmp
aas
fnstcw
sub
fcoml
out
inc
mov
mov
adc
cmpsl
movsl
das
sub
das
pop
incb
out
add
cmp
cwtl
lret
test
xor
sti
adc
xchg
iret
clc
rcl
out
lret
adcl
lea
jae
xor
push
cmp
adc
dec
xlat
outsl
xchg
mov
push
push
fxch
ret
mov
mov
adc
dec
sub
out
push
ja
and
imul
loopne
sub
cmp
dec
jae
pop
xchg
xor
pop
roll
fmull
lea
cmpsb
xchg
imul
data16
mov
movsl
shl
test
fsin
or
ljmp
adc
and
mov
xchg
mov
xchg
sbb
jmp
inc
lcall
stos
mov
mov
jmp
call
xchg
cmp
mov
mov
adc
mov
cmc
ror
cmp
lret
or
mov
xchg
repnz
into
xchg
sbb
sub
mov
xor
dec
outsb
xchg
xor
cld
das
movsl
cs
in
call
adc
cmc
hlt
cltd
sar
xchg
repz
loop
imul
mov
cmp
shll
mov
loope
xor
out
sbb
or
icebp
pop
mov
scas
pop
dec
enter
mov
sbb
mov
lret
push
add
dec
inc
cwtl
ja
dec
push
cmc
repz
cmp
outsb
imul
add
sbb
push
dec
mov
je
lahf
cwtl
sbb
jmp
xchg
inc
imul
loope
inc
mov
pop
sbb
lods
dec
mov
inc
xchg
dec
inc
sbb
xchg
mov
push
repnz
fwait
sti
pop
in
cmp
mov
cs
sahf
mov
nop
mov
out
mov
xchg
dec
sbb
cmp
adc
addr16
in
in
je
js
push
mov
pushf
idivb
pusha
adc
mov
out
ja
repz
xor
icebp
aas
xchg
and
cmpsb
cmp
add
mov
and
insb
xor
cmpl
dec
out
sahf
ss
jo
cwtl
jae
inc
mov
jg
dec
push
and
mov
cmpsb
lret
jo
sbb
cwtl
pop
in
cwtl
call
or
call
pop
and
sub
test
jecxz
dec
mov
les
adc
sub
fsubr
mov
mov
mov
enter
fs
popf
fidivs
push
test
scas
dec
inc
add
loop
and
xchg
enter
jae
out
adc
ds
jmp
in
in
xor
int
bound
gs
jle
je
xchg
sar
xor
mov
dec
inc
hlt
mov
cltd
push
cmp
fs
pusha
bound
arpl
repz
mov
in
dec
jg
mov
mov
dec
nop
aas
in
movb
xchg
movl
cwtl
pop
std
addr16
iret
in
stos
xchg
cmp
aam
add
dec
xorl
xor
gs
lea
pop
fidivrs
cmp
je
mov
nop
insb
out
rolb
fstpt
xchg
lret
fcoms
xchg
lock
cmpl
mov
stos
push
xchg
imul
dec
and
mov
add
xchg
pop
out
repz
xchg
nop
mov
jb
push
mov
repz
sbb
mov
fists
push
lcall
jle
jecxz
mov
mov
jle
lods
int3
jb
cmp
ret
scas
cltd
fcmovnb
fimuls
sti
xchg
mov
mov
fidivrl
adc
lret
pop
loopne
push
add
ret
mov
jb
or
xchg
xchg
xor
jbe
fdivrp
orl
mov
push
loope
cld
clc
mov
lods
fiaddl
push
and
lcallw
pop
dec
aam
jle
cmp
or
inc
sbb
nop
pushf
mov
sbb
xchg
lods
shr
scas
addr16
sar
jnp
inc
fiadds
outsb
hlt
xchg
loope
cli
andl
fimuls
out
mov
jb
xorb
and
sti
shlb
bswap
in
rcrb
mov
xchg
fdivrl
bound
cmpb
mov
clc
es
add
inc
fucomp
mov
imul
test
imul
or
test
jecxz
popa
sub
clc
pop
mov
pop
ss
mov
xor
cli
lods
jo
jecxz
mov
mov
sub
int
pop
push
add
or
pusha
sbb
push
xchg
sahf
insl
jbe
out
cs
aas
test
or
dec
std
sub
push
mov
stc
cmpb
cmpsb
push
out
dec
xchg
orl
pop
xor
jnp
es
mov
jnp
mov
mov
jle
jbe
fidivl
lds
fsubrs
push
mov
dec
push
dec
jb
xor
insl
inc
inc
or
and
ja
pop
ret
or
fistpll
pusha
jno
mov
xchg
or
adc
aam
loopne
push
jle
xchg
cmp
mov
lods
adc
pop
sbb
adc
jns
nop
or
icebp
xchg
out
and
sub
fisubrs
pcmpeqw
sub
fwait
jge
fwait
jnp
jecxz
mov
cmp
int3
dec
roll
push
test
lret
xchg
aaa
orl
push
cmp
and
cmp
or
dec
pop
jl
pop
jle
inc
clc
cltd
add
repz
mov
xchg
ficoms
ret
rcll
addr16
mov
mov
in
push
in
pop
and
in
shlb
les
push
cmp
imul
in
mov
icebp
xchg
mov
mov
pcmpgtb
adc
out
mov
mov
fidivl
pop
sti
pop
mov
mov
xchg
mull
std
mull
cs
lods
dec
mov
fcompl
aas
mov
enter
addb
pop
xchg
cmp
jle
jle
xchg
ss
mov
mov
les
jge
loope
movsb
outsl
mov
dec
in
jo
fstps
cs
aam
cli
mov
js
imulb
sub
mov
mov
outsl
ja
xchg
push
sbbb
in
push
popf
leave
rcll
popa
dec
imul
subl
cmpsb
loope
or
scas
pushf
jne
mov
sbb
jle
imul
scas
xor
or
popa
xchg
ja
xchg
xor
into
mov
cli
sub
cmp
mov
mov
test
pop
cmp
jno
bound
dec
js
vrsqrtss
test
pop
cmp
sbb
mov
lods
das
sub
shlb
ja
cli
adc
inc
sti
imul
and
mov
pop
pop
aad
xchg
enter
out
into
mov
iret
fnstenv
jecxz
adc
adc
mov
xor
mov
nop
push
fdivl
push
jbe
test
and
cmpsb
sub
or
jb
pop
mov
or
lss
push
and
sub
icebp
cld
jne
and
test
mov
adc
int3
js
leave
in
js
mov
adc
mov
out
pop
outsl
and
inc
cltd
sbb
fmul
xchg
sub
cmp
or
sub
jns
adc
cmpsb
and
ja
push
jge
sub
cmp
mov
jmp
mov
sti
sub
sbb
mov
enter
imul
aam
cmp
dec
andb
add
adc
fldenv
mov
xor
jnp
aaa
cmp
adc
or
sbb
les
and
mov
sbb
rclb
mov
add
pop
arpl
adc
inc
pop
ror
pop
or
adc
sub
dec
push
sub
scas
ss
push
jae
jno
shlb
fisubrs
and
push
inc
push
sub
enter
movsb
cs
push
shr
adc
rolb
jno
inc
or
push
call
in
mov
call
test
jl
pop
scas
inc
push
inc
mov
data16
iret
pop
mov
xchg
xchg
test
mov
xchg
gs
mov
data16
orb
sub
sti
scas
xchg
push
pcmpeqb
movl
mov
inc
or
cli
and
shrb
in
sbb
xlat
leave
int
imulb
sbb
movsb
jmp
ret
push
pop
push
pop
call
push
dec
scas
add
jb
add
out
mov
push
xor
or
inc
psrld
mov
std
stc
xchg
adc
jecxz
loope
ret
push
out
popa
xchg
insb
xchg
lret
outsb
push
movsb
cmp
sbb
xchg
lock
lret
repz
bound
adc
movsb
xor
ja
or
lea
mov
and
js
out
sti
mov
fimuls
dec
sub
sbb
push
dec
in
sahf
scas
out
scas
cmp
xor
push
outsb
pop
fisttps
stc
mov
cmc
shlb
sbb
or
pop
lcall
fnstcw
out
ret
xchg
cmpb
sti
std
das
ds
sub
movsb
cltd
in
sub
ljmp
mov
dec
mov
xor
pop
mov
les
leave
adc
dec
lret
daa
inc
pop
mov
imul
xchg
dec
or
sbb
fldl
or
jecxz
xor
jae
xchg
bound
push
repz
dec
inc
push
shrl
popa
hlt
or
loopne
cwtl
jmp
jge
xchg
and
dec
ret
cmp
or
add
xor
jge
xchg
xchg
test
dec
mov
or
insl
push
pop
gs
add
stc
and
leave
fucomi
jb
out
fistpll
cmpsb
enter
sub
pop
enter
push
lahf
push
lcall
stos
pop
outsb
imul
lods
xlat
push
mov
icebp
stos
dec
adcl
insb
pop
test
xchg
das
lock
enter
cwtl
mov
aaa
mov
sub
xor
js
lea
pop
sub
shl
cmp
sahf
inc
pusha
jne
cwtl
and
popa
or
adc
sub
ja
adc
rcr
iret
push
lods
inc
push
cwtl
fdivrl
push
sbb
fidivs
incl
out
inc
sbb
pushf
xchg
fs
lcall
jecxz
adc
add
shlb
je
cmpsb
outsb
xchg
pushf
repz
js
mov
lcall
and
pop
pushf
insb
jge
je
xor
pop
adc
clc
fsubrl
imul
dec
jns
xchg
xchg
in
fs
movsl
inc
cmp
jb
test
icebp
add
cmp
test
lea
jg
and
and
insl
lock
js
xchg
sub
add
and
ljmp
mov
sub
lret
aas
xlat
mov
stc
movsb
lcall
inc
sbb
addr16
or
add
lahf
fsubl
push
sub
and
lods
sbb
sbb
add
rcrb
mov
popl
and
movsb
xchg
dec
sub
push
loop
mov
dec
test
sbb
nop
adc
mov
sbbb
clc
jl
xchg
mov
mov
cs
mov
add
idiv
add
mov
hlt
in
hlt
in
iret
lcall
adc
xchg
jl
and
repnz
push
push
sbb
jnp
dec
pop
push
push
sbb
and
push
fisubrs
xor
or
int3
scas
xor
cltd
jle
das
lahf
clc
xor
jmp
xchg
push
insb
dec
bt
test
add
out
enter
pop
jg
in
cmp
scas
mov
inc
stc
insb
dec
push
sub
cmp
sbb
scas
xchg
push
jmp
sti
ss
cmp
fdiv
xor
xchg
adc
mov
lds
jne
jge
test
pop
mov
xchg
pop
mov
fwait
mov
mov
aad
sub
sbb
je
adc
jnp
shr
mov
xchg
dec
fwait
sub
repnz
repnz
dec
lahf
dec
inc
enter
xchg
push
dec
jno
xchg
stos
pusha
mov
inc
xchg
xchg
inc
cmc
dec
in
xor
test
cmpl
sub
fsubs
cmp
into
pop
aaa
sbb
jno
int3
or
stos
or
enter
cli
scas
in
xchg
dec
in
add
notl
cs
jle
cwtl
or
bound
jecxz,pt
stos
mov
xchg
or
adc
aad
jne
mov
push
repz
and
sub
es
jae
in
js
inc
mov
jecxz
add
repnz
pop
lcall
ds
cmc
icebp
lock
jb
push
push
inc
push
add
jmp
mov
stc
jmp
add
xlat
xchg
out
mov
push
enter
jbe
enter
es
out
xchg
fsubrs
xor
cmp
jb
push
fisttps
roll
push
fmuls
or
add
lds
aas
dec
fsubrl
adc
sahf
outsl
sub
sbb
das
lock
xorb
push
ja
shll
jl
jno
or
bound
out
mov
add
cmp
stos
test
mov
add
push
aam
inc
adc
jno
popa
mov
aad
pop
push
dec
test
sub
adcb
sub
in
fldenv
repnz
lretw
mov
add
mov
and
sub
js
xlat
mov
stos
mov
mov
hlt
mov
cmpb
jns
mov
xor
xchg
leave
cmc
cmp
mov
xchg
andb
xor
sub
jl
and
ds
mov
sbb
negl
insl
dec
mov
test
push
aas
mov
or
mov
push
and
ret
jl
scas
jbe
add
rclb
xchg
mov
ret
jl
loope
mov
movsb
sub
mov
mov
hlt
ret
adc
sbb
notb
cmp
loopne
not
int3
fnstenv
or
xor
jle
sub
mov
scas
fneni(8087
aaa
shlb
sbb
and
and
adc
repz
sub
mov
into
cmpsb
addb
cmp
ss
hlt
repnz
pop
sub
jae
pop
fmulp
test
xchg
push
and
lods
adc
icebp
nop
mov
sysenter
fistl
sbb
adc
mov
xchg
aas
sub
mov
orl
lds
shrl
repnz
dec
dec
pop
loope
cmc
mov
lods
loopne
mov
addl
loop
push
jmp
in
or
jns
test
rolb
test
jnp
cmp
mov
jno
push
add
mov
cmp
jae
repz
push
mov
lcall
inc
negb
xchg
repz
push
hlt
add
add
aas
repnz
rorl
jbe
out
mov
inc
cmp
add
dec
xchg
push
iret
icebp
sbbb
pop
adc
push
mov
lea
rcr
sarl
push
les
ret
leave
push
xchg
sbb
or
imul
ljmp
mov
mov
rcr
push
mov
or
enter
cmp
aaa
int3
sbb
xchg
fstpl
stc
and
push
mov
leave
out
das
scas
aam
add
shlb
dec
push
clc
push
call
pop
push
imul
daa
clc
rcl
inc
out
mov
pop
idivl
outsb
fmuls
push
inc
and
mov
inc
lahf
adc
out
push
sti
popa
test
imulb
mov
loope
mov
stos
fiaddl
or
mov
stos
imul
jb
and
pop
filds
mov
cmpsl
pop
ret
jo
mov
stos
push
push
fwait
in
mov
cmc
sub
shrl
mov
shrb
sub
fwait
mov
cmpsl
push
fistpl
add
rcrl
ret
jecxz
lahf
inc
push
add
fwait
loop
orl
in
jge
push
lea
scas
sub
inc
xchg
pop
adc
xchg
xor
xor
push
into
lcall
mov
xchg
xor
cmp
add
repz
lods
ret
inc
ficoms
mov
add
aas
xchg
aas
mov
sbb
cmp
hlt
cmp
aad
sbb
inc
sbb
popa
shl
jns
pop
inc
ds
int
sub
addr16
push
xchg
sti
lcall
jo
stos
sub
movsb
aas
mov
stos
mov
lock
adc
adc
xor
aaa
mov
add
ds
out
xchg
test
add
mov
or
data16
sub
into
jg
cwtl
outsl
int3
inc
pop
dec
jle
mov
or
dec
xor
shrl
lret
loopne
orl
xchg
mov
jg
push
dec
xor
jecxz
mov
pop
cmp
jne
mov
xor
fidivrl
faddl
inc
ret
mov
mov
push
mov
jg
mov
dec
lock
inc
and
daa
inc
mov
sbb
cmpsb
into
repz
xor
mov
xor
xchg
sbb
push
incl
ret
addr16
in
mov
lret
pushf
lea
test
xlat
mov
rcrl
fdivrl
dec
xchg
mov
iret
insl
push
ret
inc
cmpsb
clc
push
scas
nop
imul
ds
and
push
and
movsb
add
mov
loop
fwait
cmp
pushf
adc
fwait
cmc
pop
aaa
out
inc
push
popf
bound
or
aaa
movsl
jmp
sbb
jno
cs
fisttpll
sub
popa
inc
jle
enter
sub
std
inc
jle
bound
push
mov
out
add
mov
dec
dec
aam
fnstenv
into
push
stc
cmp
seto
push
xchg
mov
mov
inc
fsubl
test
mov
cmp
mov
xchg
ficomps
pand
mov
lahf
test
mov
pusha
jb
lret
add
xchg
or
pop
and
fdivl
inc
loope
mov
fstp
call
cmp
dec
pushf
std
inc
std
js
outsb
adc
push
push
push
sbb
and
mov
jbe
scas
fildl
fisubl
sub
adc
bound
inc
mov
xor
cld
add
mov
daa
jp
loop
push
jge
icebp
add
scas
popf
scas
imul
jle
fldcw
pop
cmp
es
mov
inc
push
loopne
outsb
mov
add
out
aad
lret
mov
ffree
cmpsb
cmp
fistpl
je
shrl
cmp
dec
mov
mov
and
lods
push
int3
cmp
call
sub
adc
test
xchg
xor
lods
pop
andl
mov
aas
add
aas
test
jns
lret
outsb
xchg
iret
add
imul
aaa
sbb
daa
jbe
xor
adc
cmp
adc
stc
push
add
rclb
cmovne
jl
fxch
mov
das
mov
lds
or
jmp
stos
cwtl
add
mov
inc
adc
inc
mov
mov
cmpl
cmpsl
xlat
mov
xor
loop
test
dec
mov
adc
add
mov
jmp
add
adc
outsb
dec
in
push
cmp
das
inc
andl
bound
pop
test
lds
adc
out
aam
es
lahf
cs
rcr
xor
xchg
and
or
pop
pop
xchg
inc
jnp
out
sbb
mov
roll
scas
stc
lea
popa
lock
insl
pop
pop
jnp
pop
sub
xor
xlat
inc
jne
sbb
mov
push
repnz
out
mov
push
sbb
jmp
int
outsb
lcall
pop
inc
push
pop
stos
mov
lcall
lds
or
xor
jg
adc
cmpsl
int
int
mov
arpl
pop
mov
push
adc
jno
insb
mov
stos
sub
push
bound
pop
js
clc
mov
sbb
fistpl
mov
jmp
movsl
jg
neg
pop
and
cmp
dec
mov
adc
jl
fidivrs
xlat
pop
and
or
cmp
lret
adc
jbe
jno
sbb
cmp
pop
adc
lcall
xor
subl
stos
dec
pop
sahf
sbb
or
sbb
sbb
adc
jl
test
pop
ds
test
jecxz
and
rorb
mov
in
fdivrp
push
pushf
cltd
inc
lret
in
xchg
out
sub
pusha
in
lret
ds
movsl
dec
sbb
js
jmp
sub
xor
movsl
repnz
jmp
push
adc
and
cmpb
add
pusha
test
subl
pop
sbb
adc
daa
inc
imul
cs
push
in
out
xchg
and
lret
jns
test
scas
lea
mov
out
mov
pop
insb
mov
push
pop
bound
pop
dec
movsb
xchg
lcall
lahf
add
pop
daa
or
sbb
and
arpl
repz
pop
pop
shll
insl
rorb
mov
fildll
mov
aaa
repz
push
in
sbb
neg
sbb
lds
and
lahf
mov
mov
sub
sub
or
xor
xchg
sahf
push
sarb
sbb
fdivs
mov
fsin
pushf
fcoms
clc
shrl
popa
leave
aam
aas
bound
xchg
sbb
jns
mov
shl
pushf
outsb
ljmp
sub
ret
mov
jno
mov
out
mov
subb
es
in
xor
out
daa
mov
mov
insl
mov
cmp
adc
sti
ss
xchg
and
fdivr
mov
and
fstp
push
clc
xchg
xor
lods
fstpl
data16
push
into
add
sarl
popf
dec
push
mov
adc
mov
movsb
adcb
or
ds
int
out
jecxz
sbb
jle
aam
fiaddl
and
sub
pop
test
movb
pop
or
sbb
cld
add
mov
mov
das
ljmp
push
add
adc
adc
adc
pop
stos
cmp
out
xor
fdivp
mov
stos
sbb
dec
xor
stc
adcb
sbb
push
mov
pusha
and
xor
xor
jge
pushf
movsl
pop
dec
outsl
fs
cmc
adc
xchg
mov
shll
sbb
pusha
adc
cmp
mov
mov
in
popa
dec
inc
push
in
dec
mov
lret
repz
jl
shl
cmp
das
aam
push
movsl
stc
push
push
cmpsb
fwait
and
inc
xchg
stos
cmp
xor
das
xchg
mov
movsl
jo
movsb
cmovno
pmaxsw
mov
mov
enter
roll
mov
pusha
jbe
cltd
xchg
and
shlb
cmp
int3
xchg
push
push
adc
sahf
xlat
jne
sbb
aad
or
addb
int
xor
cltd
fsubrl
shrb
sbb
mov
clc
jg
cltd
lcall
push
inc
stos
push
cmpb
pop
lea
mov
das
mov
out
jae
sbb
les
shlb
notb
push
stos
aad
add
cmp
aas
adc
mov
sbb
jbe
lods
xchg
lret
fisubrl
jle
outsb
cmpl
aaa
cmc
imul
roll
vpavgb
xbegin
pushf
movl
xchg
pop
push
movsb
xchg
int
add
rcll
sarb
nop
jge
inc
out
cmp
pop
adc
std
loope
jecxz
mov
pop
loop
mov
add
mov
and
adc
xchg
push
cmpsb
sub
lods
jge
and
mov
insl
ficompl
ret
mov
xchg
dec
jl
icebp
pop
stc
sbb
pmullw
int
lret
stc
cmc
push
mov
push
ret
dec
cmp
jecxz
dec
test
mov
xchg
sbb
dec
lods
dec
push
leave
fldt
xor
sbbl
das
inc
rorb
jecxz
xor
pop
or
vpshufd
mov
lcallw
loop
test
adc
movsb
out
add
dec
mov
dec
daa
out
xchg
std
lock
aam
and
lret
popa
sub
pop
cmp
out
test
das
sbb
es
aam
fldcw
insl
mov
jge
push
ss
stos
das
push
insl
or
adc
xchg
negl
lcall
pop
and
call
out
ss
push
sbb
xor
jmp
and
lods
cmp
addr16
sub
imull
push
lds
jnp
xchg
cmp
cmp
lods
cli
dec
pop
fs
subb
push
adc
pushf
sub
cmp
arpl
mov
sbb
or
jo
cmp
pop
pushf
sahf
xor
jae
ficoml
sbb
sbb
mov
dec
xchg
scas
in
and
adc
mov
lods
aam
and
and
popa
jbe
pop
idivb
xchg
lods
fstpl
rcll
notb
js
enter
and
xchg
rcrl
into
dec
inc
sbb
mov
mov
sbb
bound
cwtl
dec
mov
scas
imul
xchg
mov
lret
iret
inc
popa
add
nop
add
repz
add
push
out
add
mov
xchg
int3
or
aaa
icebp
lea
inc
adc
xchg
inc
inc
inc
bound
inc
mov
fistps
jnp
das
mov
push
ret
dec
dec
inc
dec
or
sub
orb
and
xchg
fucomip
lret
popa
cmc
xor
jmp
popa
push
int3
cwtl
mov
js
or
repz
sub
push
dec
adc
repnz
sub
cltd
cld
jp
pop
push
and
or
dec
or
fistpll
sbb
jmp
pushf
repnz
test
ret
fs
addl
mov
adc
sbb
and
fstl
cmc
pop
pop
inc
sbb
mov
mov
das
fsin
sbb
push
jp
mov
negb
and
adc
sti
leave
mov
lods
inc
insl
out
shl
push
cltd
add
sbb
out
push
push
add
div
pop
jbe
sbb
mov
ret
sub
inc
cmc
pop
notb
lcall
inc
mov
out
inc
je
xlat
dec
lods
cmp
out
outsb
cmpsb
adc
push
xchg
lds
outsb
cmp
stos
inc
jg
mov
jne
xchg
xor
dec
pusha
sbb
sbb
cmpsb
push
mov
movsl
or
nop
cld
jnp
and
aad
sub
and
ret
nop
lea
jge
popa
sub
aam
fst
push
lahf
add
setb
or
jle
ja
dec
xor
ja
fwait
xor
xchg
lods
sbb
pop
mov
ss
fsubrp
lret
gs
jo
push
pop
add
pop
mov
ret
ret
mov
psubq
mov
flds
cmp
xorb
insb
fs
lahf
add
call
cmp
sub
repnz
les
mov
dec
ja
add
stos
or
inc
cmpsl
push
mov
jns
add
dec
cld
sub
into
inc
in
cltd
xor
mov
in
jne
jmp
lahf
sub
addl
dec
jg
cld
add
and
mov
xchg
sarl
in
and
repnz
mulb
dec
push
arpl
jge
rcrl
in
mov
lret
xor
sti
sub
jmp
bound
adc
lahf
or
jae
or
jle
push
jb
or
mov
cmp
xchg
fwait
pop
push
pop
mov
repnz
jno
adc
lods
into
popa
aas
push
decl
je
jae
lods
mov
mov
dec
int
lcall
adc
mov
sti
idivl
enter
adc
mov
ja
fcoms
push
fistpl
js
icebp
out
adc
outsl
or
call
jb
mov
fdivrl
ret
insb
push
add
cmp
loop
or
jnp
stc
xlat
out
call
cmp
adc
mov
orb
test
les
enter
call
repnz
fnstsw
call
in
add
ret
adc
leave
dec
daa
icebp
sub
js
sub
lret
shrd
cmp
add
test
and
pop
push
fsubrs
nop
inc
push
xor
std
xor
sbb
sub
xchg
rcl
scas
or
cld
push
inc
aad
mov
mov
bound
clc
nop
pop
lret
xchg
cmp
and
xlat
xchg
jno
xor
fcomps
push
cmp
inc
mov
mov
repnz
mov
bnd
pop
test
je
inc
push
rolb
jae
pop
cmp
jnp
xor
and
push
pop
lahf
pop
xor
push
pop
push
mov
dec
jmp
adc
std
fcoms
stc
fnstsw
dec
pop
enter
mov
mov
mov
insl
pop
das
dec
test
test
jb
mov
mov
mov
ret
xor
cmp
cmpsb
mov
adc
pop
fwait
inc
cmp
sahf
movsb
xchg
mov
lods
cli
mov
xchg
mov
jne
jo
in
xor
sbb
mov
or
dec
add
cmp
jo
or
push
cmpsl
sub
scas
pop
mov
mov
in
testl
inc
mov
push
repnz
cmpl
and
or
push
dec
xchg
loopne
pop
sti
movsb
sub
mov
mov
outsl
test
mov
out
push
sub
jnp,pt
loope
mov
inc
sub
test
or
cmpsb
aas
bound
push
aam
jne
push
dec
or
push
out
add
adc
in
sarl
je
and
pop
adc
repz
xor
and
mov
adc
movsb
mov
pop
xor
lcall
mov
jmp
clc
mov
mov
lds
ds
pop
sub
pop
sub
and
daa
nop
dec
addr16
loope
inc
jne
pop
rcr
stos
jmp
xchg
dec
lcall
inc
push
mov
sbb
add
sbb
mov
cmpsb
mov
sub
inc
loope
ss
sahf
mov
lcall
xchg
push
int3
andb
jg
push
andl
das
mov
stos
inc
dec
jl
dec
jmp
cwtl
out
sub
add
fnsave
mov
gs
movsl
cmp
stos
sbb
jecxz
xor
sbb
std
pop
mov
loope
cmp
sbb
or
cmp
xchg
adc
xchg
xchg
sbb
push
sbb
push
jp
andl
arpl
in
je
push
and
lods
insb
and
jle
aad
pop
adc
pop
fsubr
mov
cmp
pop
enter
lahf
dec
pop
inc
movsb
sbb
push
jl
ror
shll
mov
push
cmpsl
lods
dec
mov
jle
mov
sub
sbb
rcr
inc
dec
aaa
jae
push
pop
aaa
sbb
mov
mov
dec
mov
cmp
out
fcomip
pop
subl
add
test
and
popf
xchg
xchg
and
xchg
mov
mov
adc
jmp
insl
out
sbb
push
imul
in
inc
mov
add
mov
outsb
andl
rorb
jle
jo
rclb
cmp
jo
inc
movb
lea
pop
mov
loop
push
fmuls
movsl
or
and
enter
or
mov
cs
ja
les
in
cltd
push
das
adc
hlt
push
cmp
jb
xchg
sbbl
int
stos
popa
and
mov
shlb
int3
imul
mov
sub
pmaxub
push
fnstcw
add
test
pop
fwait
or
sbb
xchg
add
xor
in
lods
insb
cmp
push
xor
sbb
inc
add
add
add
in
roll
rclb
xchg
sbb
mov
fcoml
jae
push
stos
addb
ret
mov
inc
outsb
aam
out
lods
cmp
push
psraw
adc
dec
mov
imul
repz
jg
push
fs
sbb
ret
repz
lods
out
aas
xor
flds
pop
mov
or
scas
cmp
add
sbbl
xchg
mov
ljmp
cmc
inc
cmpsb
push
xchg
and
sbb
stos
je
mov
jmp
ret
adc
mov
loope
rorb
fisubrl
cwtl
popa
mov
mov
test
ror
push
push
sub
scas
inc
sbb
pop
lock
call
push
jge
movsl
dec
inc
jp
test
or
stos
mov
insb
or
mov
mov
mov
inc
icebp
cmpsb
jecxz
add
jecxz
xchg
adc
xchg
out
push
out
sti
cs
orb
push
jmp
sub
sub
dec
std
test
mov
test
movsb
mov
cld
xchg
mov
jb
xlat
or
dec
pop
into
add
inc
stos
jmp
js
outsl
mov
push
jecxz
cmpb
xorb
xor
and
mov
or
loop
lahf
pusha
mov
fs
xchg
in
and
adc
decb
fwait
pop
adc
dec
mov
sub
cmp
mov
pop
daa
jecxz
push
push
sbb
subb
int3
or
push
jmp
lret
pop
das
pop
out
mov
enter
ljmp
pop
f2xm1
inc
xchg
jns
pxor
mov
add
repz
das
pop
and
movsb
cs
xor
dec
mov
sub
lods
adc
shrd
movsb
push
out
adc
or
stc
adc
mov
sahf
jmp
stc
loopne
das
sub
jbe
negl
pop
cmp
out
imul
cmpsb
push
mov
ds
dec
xlat
or
jb
ret
aaa
out
pushl
and
frstor
rcrb
not
pop
rcrl
in
cld
jnp
in
imull
mov
sbb
fcoms
jns
sbb
sbb
mov
jmp
jno
ret
lea
add
repz
aam
movsb
icebp
push
pop
cmpsl
out
pop
or
lret
sarl
orb
xchg
xor
add
adc
sarl
or
or
mov
repz
ja
insb
cmp
aad
sbb
aas
push
clc
lret
pop
lahf
rdpmc
xchg
add
dec
and
mov
mov
mov
jmp
aad
or
fwait
inc
push
jecxz
push
add
outsl
inc
ja
dec
pop
sbb
leave
xor
jnp
out
in
cwtl
cmp
jb
test
xchg
cmp
stc
mov
and
jmp
das
inc
test
cwtl
sbb
dec
test
fwait
lsl
out
gs
nop
fldcw
cmpsb
inc
xor
aam
push
sbb
inc
sahf
cltd
inc
jb
daa
xchg
cld
test
adcb
cmp
xchg
or
movsl
icebp
idivl
ret
call
pop
test
mov
cmpsl
xchg
or
cmp
mov
loop
aaa
or
test
dec
fxtract
ds
fwait
adc
sti
in
jne
es
dec
xchg
in
push
sub
and
cmp
adc
std
xor
lret
pop
jl
sahf
jge
aaa
jb
imul
data16
out
ja
xchg
sbb
xchg
enter
in
mov
mov
mov
push
in
sar
cli
std
and
mov
into
xor
add
dec
pop
cmp
sub
xchg
jno
bound
nop
lret
pop
jne
sbb
mov
aad
and
in
cmp
sbb
mov
jg
icebp
pop
imul
movsb
rcrl
add
xor
addl
or
mov
sbb
lahf
imul
inc
inc
sub
insl
mov
in
or
rcr
js
add
sbb
inc
add
add
inc
arpl
cmp
loop
xchg
xor
out
bound
dec
repnz
mov
outsl
push
jns
jmp
pop
sbb
mov
and
or
ret
inc
pop
xorl
sub
cmp
dec
push
sub
jp
adc
ret
ss
in
push
xchg
jecxz
sbb
dec
stos
rcll
cwtl
inc
mov
orl
cmpsl
sbb
or
sbb
mov
adc
mov
sbb
leave
repnz
jg
ret
xchg
ret
pop
mov
fucomi
jno
or
sub
push
cmp
cwtl
mov
sbb
dec
xchg
fldt
cmp
out
add
fistps
jo
push
xchg
daa
mov
sub
and
jbe
outsb
sbb
aaa
clc
add
xor
lods
mov
dec
and
jae
je
andb
jne
aas
insb
neg
mov
jns
push
repnz
pop
dec
insb
dec
mov
dec
sar
mov
dec
sub
cmp
inc
into
push
dec
sub
decb
insb
push
scas
stos
in
call
and
fsubrl
adc
je
xchg
mov
iret
inc
fistps
out
push
push
mov
push
lret
xor
mov
mov
loope
repz
push
jno
xor
mov
xchg
clc
mov
push
cmp
mov
jge
outsl
pop
out
sahf
mov
ds
mov
stos
mov
cmpsb
add
fmuls
daa
ret
popa
loop
mov
cli
js
fisttpll
inc
add
jge
jmp
in
je
lds
xchg
pop
decl
sti
mov
xchg
popa
loop
lahf
cmc
lcall
ficoms
sbb
inc
adc
mov
ret
mov
mov
xor
xchg
ljmp
popf
xor
bound
idiv
sbb
out
into
cld
push
jle
dec
or
aad
or
mov
movsl
sub
fdivrl
cli
addr16
stc
loopne
mov
xchg
and
cltd
or
insb
cmp
jge
cs
pop
push
addb
xchg
jae
outsl
pusha
lds
dec
adc
and
pop
sti
sbb
add
inc
stc
cld
xor
adc
aam
mov
cwtl
inc
cli
cli
loop
cmp
movsb
sbb
and
fnsave
fnstcw
dec
add
xchg
mov
push
push
mov
mov
inc
mov
mov
insl
mov
jae
daa
es
sub
int
lods
fdivl
mov
jp
fs
mov
mov
cltd
add
pop
out
rcl
loopne
push
out
outsl
aaa
xor
out
ss
divl
xlat
push
repz
cmp
push
test
in
pop
subl
or
roll
in
push
cmpsb
loop
push
dec
ret
es
loope
push
fwait
sti
xchg
fmull
mov
dec
jmp
sbb
mov
lcall
imul
daa
rorl
hlt
cltd
push
incb
stos
out
pop
mov
mov
inc
or
jne
xchg
out
jne
or
mov
movsb
std
fwait
sub
nop
and
das
xor
sbb
jno
mov
mov
loope
mov
mov
test
jge
jae
pop
xchg
js
inc
incb
sbb
xchg
sbb
pop
ds
jbe
add
or
std
test
lea
daa
stc
pushf
fnstenv
cmp
cmp
dec
cmpsl
fadds
push
lret
dec
hlt
jnp
xchg
cmp
into
cmpb
or
ret
mov
cmp
test
sbb
adc
fisttps
scas
jne
pop
mov
in
sti
jmp
loop
insb
sbb
pop
xchg
sbb
jbe
dec
dec
ja
movsb
fs
mov
cmp
xchg
jmp
imul
xchg
aas
rclb
jno
bound
or
div
adc
leave
ficompl
jg
sti
inc
fistl
out
gs
lock
pop
imul
cld
mov
mov
add
mov
xor
xor
or
dec
ret
fwait
inc
arpl
push
inc
mov
pop
mov
test
rcrb
rcll
hlt
xchg
push
and
iret
imul
cmp
pusha
mov
cld
shrb
push
jb
movsl
roll
fiadds
inc
cmp
insb
cs
fucom
mov
mov
cwtl
and
mov
cmp
frstor
stos
inc
inc
xchg
clc
inc
filds
lahf
test
xchg
sti
aad
int
mov
rorl
add
enter
mov
jo
outsb
jle
in
test
cmp
mov
les
lea
hlt
mov
imul
ljmp
lock
int
mov
cmp
rolb
sub
pop
movsl
pushf
jmp
daa
push
cmc
nop
jle
jnp
xchg
jl
cwtl
int3
mov
inc
add
add
iret
mov
mov
rorb
pop
aad
push
mov
add
rolb
daa
push
or
cmc
jae
test
inc
leave
mov
inc
lahf
ret
xchg
js
movsb
nop
icebp
xchg
mov
mov
ljmp
cmp
and
mov
shl
inc
das
cmp
dec
mov
adc
jb
jecxz
ds
jae
adc
xor
dec
lret
inc
dec
jb
lds
mov
lods
push
push
cs
jno
fs
mov
mov
test
pop
out
outsb
xor
pop
pop
lods
sti
mov
mov
jmp
mov
push
int
or
aad
nop
xor
aaa
in
xchg
jne
or
aaa
dec
ja
or
mov
mov
adc
leave
sub
ds
xchg
fwait
test
into
inc
das
es
repnz
mov
xor
sub
loop
dec
outsl
mov
fistpl
dec
dec
mov
xchg
mov
repnz
js
ja
sbb
sub
mov
dec
scas
imul
fwait
cmp
xor
add
ficompl
cld
push
xor
pop
jp
fnstenv
fiaddl
scas
les
gs
mov
data16
sahf
push
fiadds
ss
sub
mov
mov
das
mov
mov
push
orb
lods
out
test
subl
jae
jae
test
inc
xor
mov
adc
and
leave
sub
jo
das
mov
jbe
add
mov
add
sub
cmp
jge
jg
cmp
mov
push
icebp
pop
notb
add
insl
mov
das
xchg
ret
lods
sub
fsubrl
ja
insb
fwait
in
test
pop
stc
push
push
aam
jo
sbb
lcall
jle
mov
les
xlat
mov
jno
sbb
xchg
addl
fadds
mov
iret
xor
ds
push
push
ds
stc
jecxz
xchg
pusha
inc
sahf
test
xchg
add
cmp
neg
out
push
sbb
out
dec
adc
mov
shrb
or
insl
movsl
test
push
sbb
adc
xchg
mov
test
into
jne
xor
fs
je
jnp
jo
jge
cs
mov
lcall
repnz
sub
lds
scas
inc
push
in
lods
adc
hlt
sarl
mov
outsb
xchg
pop
mov
out
je
fbld
pop
jge
ret
cmpsl
mov
ss
inc
or
mov
inc
cmp
fwait
popa
out
je
adc
dec
pusha
adc
mov
out
dec
repnz
stc
mov
mov
in
and
mov
jp
mov
fstpl
stos
push
cmp
and
push
or
mov
inc
xor
sti
xor
rorb
out
or
or
in
adc
fists
dec
sub
les
add
sub
insl
mov
xor
ds
adc
fsubrs
addr16
xchg
dec
inc
xor
scas
push
add
shll
push
leave
push
ret
fnstcw
mov
sub
lret
sub
xchg
pushf
xchg
cs
sbb
pop
mov
push
or
jmp
push
pop
shrb
push
sbb
mov
ja
push
shrl
fwait
mov
cltd
lods
gs
dec
sbb
sub
sub
std
and
fistl
fmul
in
daa
dec
dec
pushf
inc
xor
jp
movsb
jg
insb
int3
xor
push
daa
xchg
repz
add
test
inc
aaa
stos
paddusw
js
unpcklps
mov
xorb
arpl
mov
jns
or
fistps
mov
out
fadds
mov
ja
mov
mov
cmp
mov
pop
dec
sub
sub
aad
inc
ljmp
das
mov
add
sti
and
dec
pusha
mov
adc
jo
inc
mov
bnd
movsb
inc
mov
test
add
add
test
lcall
ja
gs
adc
shrl
mov
incl
adcb
pop
stos
jns
adc
xchg
gs
pop
int3
or
out
divl
fstpt
push
jp
mov
add
xor
daa
out
mov
mov
test
add
test
data16
sub
mov
cmpsl
mov
add
pop
mov
imul
mov
cmp
xor
int
xchg
mov
xorb
ja
sbb
cmpsl
pop
ljmp
dec
shl
jg
cmp
mov
inc
adc
cld
callw
movsb
loop
lods
ret
cs
mov
in
fmull
add
push
xchg
mov
div
insl
jne
jae
xchg
adc
and
add
mov
dec
je
and
xchg
lcall
repnz
jno
out
xchg
mov
mull
inc
mov
enter
scas
and
ss
jp
xor
mov
mov
jp
jge
bound
mov
and
int
cmp
xchg
cs
add
adc
mov
scas
dec
mov
into
add
jmp
cltd
mov
aam
cmp
popf
xchg
movsl
jmp
loope
inc
arpl
xchg
adc
lods
ss
push
xchg
sbb
outsb
dec
popa
fdivr
mov
int3
inc
idiv
out
jno
adc
les
xchg
sbb
push
adc
push
out
lret
je
inc
mov
call
movsl
lcall
pop
push
mov
adcl
cmp
daa
es
push
mov
cmpl
or
leave
inc
mov
dec
push
mov
lock
jecxz
mov
sahf
jbe
cs
repz
cmc
arpl
ja
rcl
inc
loopne
popf
in
add
pusha
inc
nop
clc
sbb
pop
cmp
jmp
loope
add
inc
sahf
outsl
ret
std
adc
pop
out
cmc
pop
pop
lea
ljmp
scas
je
xchg
mov
repnz
xchg
nop
cmp
incl
movsb
dec
xchg
sub
scas
popf
jge
imulb
out
in
jmp
pop
cmpsb
sbb
add
push
cli
lcall
mov
xchg
pusha
hlt
xchg
lods
outsl
les
sahf
xor
test
push
mov
pop
push
mov
cmp
push
dec
scas
push
cltd
push
pop
xor
jmp
jb
jmp
addr16
and
add
cmp
movsb
and
and
sar
in
dec
int
test
cmp
and
xor
mov
inc
rorl
push
jb
imul
xchg
lret
aad
sbb
inc
mov
dec
pop
and
fldenv
pop
mov
dec
or
or
lods
mov
test
sbb
push
daa
mov
xor
push
dec
daa
shll
jae
fbstp
loop
push
js
negb
adc
mov
hlt
xchg
jmp
mov
mov
and
mov
pop
pop
lret
adc
andl
cmpsl
add
xlat
cwtl
and
lods
cmp
scas
and
inc
sub
dec
xor
call
ljmp
jecxz
cmp
inc
push
dec
sbb
xor
inc
sbb
rol
mov
leave
push
jnp
xor
lds
out
add
or
inc
lret
fs
pop
add
ss
and
xor
das
sbb
je
stc
xchg
mov
popf
jno
scas
mov
int3
inc
cmp
xchg
into
add
dec
cmp
je
fs
fstpl
cld
insl
mov
xor
jge
popf
test
sbb
outsb
push
and
xchg
mov
mov
push
inc
lds
repnz
cs
sub
sbb
movl
add
inc
mov
movsb
icebp
das
push
insl
cld
adc
lea
pusha
int3
sbbb
fbstp
push
rol
push
nop
sahf
mov
cmp
lods
jne
fwait
adc
inc
ljmp
clc
xor
clc
adcb
xor
add
inc
dec
sub
dec
inc
sbb
or
pop
movsl
jp
xor
mov
sti
bound
cmpsb
mov
sub
jl
dec
jbe
movb
aaa
imulb
arpl
xchg
mov
enter
adc
and
add
cmc
xlat
xchg
or
js
test
call
nop
dec
xor
adc
mov
jp
cmpsl
cmpb
sti
jge
andb
add
scas
push
sbb
push
cmp
sbb
enter
push
clc
repz
mov
stos
lahf
sbb
inc
outsb
iret
ja
shl
mov
stos
in
out
ljmp
cmp
subl
jle
jle
adc
shlb
push
popa
aam
aad
addl
push
out
aam
lods
cmp
mov
and
jge
inc
outsb
imul
jne
sub
sub
les
push
push
sbb
push
dec
mov
stos
mov
or
mov
pusha
cmp
pop
div
pushf
mov
sarl
mov
dec
add
mov
dec
sbb
ds
lods
lahf
inc
xor
subb
push
pop
stos
push
out
movsl
lds
je
dec
mov
sbb
adc
mov
loope
jae
inc
enter
vphsubdq
bound
ds
shl
cmp
push
and
leave
or
mov
or
scas
xor
add
mov
movsb
fs
out
jno
inc
mov
mov
sarb
jp
jge
movsl
xchg
rcrb
pop
jae
jge
pop
mov
aad
xlat
ret
xchg
push
push
mov
cmp
out
stos
test
jl
stos
xor
and
sub
incl
lret
jne
movsl
rcll
jne
sbb
scas
pop
lock
fisttpl
pusha
sbb
js
into
fstpt
add
add
cmp
pop
jp
mov
inc
cmpsl
push
shlb
dec
sub
jecxz
pop
and
push
rcrl
jle
dec
mov
mov
in
dec
cmp
dec
mov
inc
rol
pop
fwait
stc
hlt
outsl
aaa
bound
fwait
cmp
stc
or
insl
add
ja
mov
xchg
lret
sbb
and
cld
orl
test
dec
sbb
or
loopne
out
cmc
lods
dec
sub
sti
lea
pop
xchg
lahf
or
inc
jnp
fisubrl
pop
icebp
test
inc
inc
or
test
rolb
add
icebp
insl
dec
imul
push
push
fcmovb
xchg
jg
imul
lahf
sub
xor
mov
xchg
jle
sub
xorb
and
jecxz
and
mov
jae
out
pop
out
mov
push
dec
inc
fsts
fsubrs
test
sub
sub
inc
shl
xchg
in
frstor
adc
xchg
push
mov
push
ljmp
aam
jne
addr16
das
mov
fstl
jp
jg
pop
addr16
or
mov
mov
repnz
out
mov
sbb
aad
insb
jb
sbb
mov
cmp
mov
push
and
rclb
xor
aad
lods
pop
int
mov
shr
adc
pushf
sbb
pop
cmp
jne
fsubs
sbbb
int
ljmp
xor
cltd
push
cmp
addr16
pop
add
push
sbb
test
xchg
mov
mov
sahf
out
xchg
cmpb
xor
xorl
aam
outsl
sarl
push
mov
xchg
sub
loopne
stos
rcrb
scas
mov
jb
cwtl
nop
jno
cmp
mov
adc
out
mov
adc
lods
inc
cmpsl
ja
add
cwtl
out
mov
ds
ret
aas
jno
mov
xchg
jge
sbb
adc
jmp
fimull
cmc
out
inc
loop
pop
jge
outsl
mov
dec
out
sub
add
sahf
aam
lods
add
adc
mov
sbb
mov
movsb
jns
int3
and
adcl
fdivl
repnz
into
mov
mov
ror
ss
sub
in
push
inc
icebp
fld1
addb
fadds
mov
aad
sbb
adcl
ret
xchg
rcll
stc
iret
jp
int
push
mulb
mov
test
mov
add
cmp
fidivs
jp
push
fs
mov
stos
push
mov
aas
jg
jle
cmp
pop
lods
stos
jne
dec
add
lea
mov
push
lahf
cwtl
dec
sbb
xor
mov
sbb
lock
ret
push
lods
adc
out
mov
add
mov
add
arpl
push
inc
sarl
sub
fwait
push
dec
pop
pop
cmc
or
cmp
shl
xor
fisttps
mov
jecxz
popf
mov
cmp
push
out
dec
pop
xchg
repz
xchg
sub
dec
push
rclb
lods
jl
loopne
jg
and
mov
mov
jge
ret
or
lea
mov
or
mov
xchg
adc
and
mov
mov
ds
fwait
xor
ficompl
cld
fcmovb
push
or
mov
mov
pop
addr16
xchg
inc
cmp
lods
lret
loop,pt
xchg
imul
add
scas
stos
divb
push
call
pop
cmp
jp
xchg
push
outsb
adc
daa
cld
xor
lea
cmpb
or
push
notb
sub
or
es
mull
xchg
pop
mov
aad
cmpsb
leave
sahf
jb
xchg
aaa
fs
mov
mov
xchg
je
icebp
mov
sub
push
pop
inc
pop
cli
cmp
test
mov
clc
int3
repz
fdivs
scas
daa
ret
xlat
mov
mov
xchg
jp
mov
fs
decl
adc
aam
int
cmp
out
xor
iret
jl
cwtl
pop
es
adc
and
out
push
movsb
xchg
mov
or
or
faddl
jb
inc
js
fwait
leave
in
lds
mov
cs
jbe
add
int
cmp
dec
or
es
xor
mov
aam
inc
pop
nop
push
mov
inc
adc
and
int
subb
add
insl
inc
mov
mov
mov
out
pop
or
mov
jp,pt
push
or
int
add
mov
arpl
loop
jb
call
jbe
mov
ja
pop
push
jne
mov
adc
adc
push
outsl
stos
outsl
fsubs
jno
or
stos
cmp
aas
pop
push
sti
dec
les
xor
iret
xchg
sub
movl
fwait
and
dec
out
sbb
mov
es
insb
mov
push
int3
addr16
mov
and
shlb
mov
aaa
cmpsb
xorb
adc
xchg
test
mov
in
inc
cmp
lret
gs
cmp
sbb
and
lcall
xchg
hlt
mov
shrl
in
stc
pop
imulb
sbb
aas
insl
jnp
inc
out
dec
mov
mov
sub
repz
inc
push
xchg
das
and
lods
xchg
je
pusha
ss
inc
cmp
cmp
movsb
and
and
shrb
push
sub
movsl
mov
sub
ja
xchg
movups
dec
dec
xchg
jle
xchg
mov
xchg
js
jo
stc
rclb
in
inc
jb
shrl
shrl
cli
adc
sbb
rcr
loop
cmp
test
decb
add
push
pushf
je
mov
dec
pop
insb
ror
jbe
imulb
dec
pop
test
fisttpl
xor
call
push
divb
or
adc
movsb
pop
call
mov
add
lea
xchg
dec
xchg
gs
mov
inc
scas
mov
push
mov
imul
push
add
dec
mov
push
push
jns
mov
lock
and
or
lret
inc
ds
repnz
push
mov
pop
add
push
push
xchg
mov
xchg
jg
dec
std
pop
jecxz
sahf
mov
fs
aaa
lahf
jle
dec
jnp
call
movsl
shrl
mov
stos
int
add
pushf
lret
xchg
ljmp
das
scas
loope
clc
pop
and
movsl
adc
lds
in
xchg
sbbb
popa
cmp
fstpt
pop
int
aaa
iret
popf
lods
lcall
cs
jne
mov
adc
xchg
mov
dec
ja
insl
add
inc
pop
cmp
mov
add
test
sbb
jecxz
jg
mov
in
xchg
push
sub
and
pop
int
mov
aaa
out
js
out
outsb
outsl
mov
outsb
xchg
leave
mov
addl
adc
jle
sub
mov
inc
xchg
dec
shlb
dec
pop
or
imul
int
xchg
test
inc
dec
mov
orl
dec
popa
rcrb
data16
push
add
add
iret
cmpsb
xor
mov
rcrb
cmpsb
mov
add
bound
push
xchg
movsb
sub
xor
push
dec
and
jne
pop
hlt
repnz
or
insb
jnp
sbb
mov
movsl
jo
pop
lock
out
insl
ret
cld
jb
jp
dec
mov
sbb
sahf
dec
clc
repnz
xor
xor
mov
sub
fnstenv
repz
lret
loop
loope
push
pushf
imul
aad
mov
dec
in
imul
inc
scas
sahf
mov
dec
mov
add
dec
cmpsb
sbb
aas
mov
adc
lods
xor
mov
pop
push
mov
pop
sub
dec
mov
rcrb
lahf
xor
xchg
xor
mov
aaa
ret
jae
in
movsl
pop
dec
pop
mov
das
sarl
sti
xchg
xor
lcall
mov
enter
or
nop
inc
fdivl
push
es
neg
and
push
pop
dec
xor
daa
xor
in
aam
jge
sub
ds
lahf
and
icebp
mov
sarl
push
aad
sbb
xchg
mov
icebp
inc
mov
popf
sbb
out
into
popa
xorb
mov
call
jnp
dec
int3
insb
fisttpll
addr16
adc
xchg
push
sub
xor
or
jnp
jecxz
imul
pushf
mov
pop
cmc
mov
sub
pop
leave
mov
cwtl
adc
into
sub
popa
sbb
jmp
popa
mov
adc
pop
je
mov
dec
ds
jne
inc
in
add
test
or
xchg
cld
inc
popa
scas
dec
ljmp
popf
lock
imul
and
or
jecxz
cmp
mov
mov
jp
and
sub
mov
xchg
xchg
fyl2x
enter
loop
dec
loop
xchg
xor
xchg
pushl
lods
lret
or
cmp
imul
sarb
cwtl
cltd
in
in
xchg
pushf
mov
pop
jns
ss
dec
outsl
mov
sub
add
cld
mov
aam
inc
mov
and
adc
add
push
xor
mov
jnp
aas
icebp
mov
xchg
stos
push
scas
ja
xor
inc
fdecstp
lock
ds
fdivl
add
mov
iret
xchg
jo
mov
xchg
hlt
mov
or
dec
stos
cwtl
int3
movsl
adc
pop
dec
fidivrs
shl
lods
adc
jne
push
pop
repz
cmp
lcall
aas
cmp
cli
fistpl
sti
lcall
jbe
mov
push
sub
pop
adc
insl
cmc
in
pop
js
cs
testb
push
sbb
leave
or
mov
jbe
mov
lods
dec
jl
inc
cs
aam
call
bnd
jle
clc
fwait
popf
dec
xchg
fistpll
lods
mov
xchg
sahf
jns
sbb
and
mov
int
scas
stos
ret
pop
call
adc
push
fists
mov
dec
cmp
stos
inc
loopne
jl
pop
mov
push
and
fisubrl
lods
adc
movsb
pop
xor
add
sarl
std
sbb
ja
mov
mov
and
push
test
movsl
and
cltd
sbb
jnp
iret
fdivrl
fcompl
push
pop
lret
les
dec
cmp
aas
and
ja
iret
icebp
and
fisttpll
dec
xchg
psraw
push
or
arpl
xchg
lea
mov
lock
sahf
mov
in
aaa
xlat
or
cmp
mov
out
add
movsb
pop
lret
mov
rolb
insl
lcall
outsl
adc
ss
push
sub
mov
push
sub
mov
cmp
mov
push
insb
add
mov
add
aaa
mov
mov
outsl
jne
jb
dec
jge
cld
lods
xchg
add
push
das
stos
cli
loop
rcrb
xchg
popa
and
adc
xchg
xchg
xchg
mov
je
sub
jae
idivb
sbb
xchg
ret
dec
mov
leave
mov
xchg
xchg
lds
jne
pop
push
rcrl
in
insl
cmp
out
push
pushaw
dec
jbe
jno
mov
jo
xor
enter
xchg
clc
pushw
scas
jno
jo
in
push
in
jecxz
loop
jbe
js
shll
mov
roll
cltd
lods
imul
mov
lods
mov
add
popa
filds
fdivs
add
add
shll
stos
push
in
orl
mov
in
outsb
mov
or
jbe
mov
enter
loopne
in
icebp
test
ret
mov
mov
aam
inc
lods
stos
sti
icebp
xadd
sub
push
repz
push
cs
mov
sub
mov
aad
xor
test
jno
jmp
inc
cmp
push
lahf
movsb
pop
inc
inc
sbb
mov
insl
add
rol
cmpsl
sbb
aas
push
pop
leave
fisttpl
mov
lods
push
mov
sbb
jecxz
xchg
repz
rcll
scas
jns
mov
inc
inc
jp
pop
pusha
in
adc
insl
ror
mov
movsb
mov
sub
and
in
jp
jnp
mov
jnp
xorl
xchg
lcall
scas
ja
pop
fwait
jno
xchg
cmp
iret
lods
pop
nop
jp
addr16
mov
test
adc
fs
adc
xchg
test
fisubl
jbe
ljmp
push
jmp
push
mov
out
roll
mov
in
mov
leave
lret
insb
and
in
call
out
inc
or
and
push
shll
inc
in
inc
push
fs
mov
aas
push
mov
jge
mov
cmpsl
jg
adc
lea
jnp
adc
andl
outsl
and
add
loopne
pop
mov
addb
mov
sahf
in
cmp
int3
stos
ret
mov
shr
int
sub
mov
leave
stos
rcl
jle
int
stos
cmp
int3
mov
aaa
into
mov
sti
out
pop
xchg
js
adc
sbb
pushf
inc
loope
lea
jno
add
cwtl
cltd
les
lods
push
ret
ja
jge
dec
sbb
sbb
fnstsw
rolb
cli
es
dec
cmp
outsl
rcrl
sahf
xchg
push
and
jecxz
fstsw
fstps
push
aas
lcall
hlt
dec
jl
jns
ds
xchg
movsl
adc
jmp
scas
je
and
testl
ds
xor
aad
xor
in
dec
pop
add
jmp
push
bound
inc
mov
lods
cmp
fs
or
insb
mov
mov
leave
inc
aam
hlt
sbb
or
pop
dec
jg
or
iret
or
sar
ret
cmc
inc
repz
mov
aam
or
add
jns
pusha
xlat
xor
popf
and
sub
dec
lea
rcr
xor
leave
and
xchg
push
imul
inc
adcb
xchg
cmp
in
mov
push
inc
inc
dec
imul
ret
sub
pop
cltd
cmp
mov
jae
leave
inc
sbb
lods
or
push
xchg
lds
jne
sub
lahf
das
cmp
mov
pop
sbb
leave
enter
sub
int
les
sub
popf
mov
dec
insl
jns
or
xchg
jmp
xchg
mov
cmp
in
addl
cmc
imul
stos
adc
mov
sbb
movsb
cmp
ret
dec
adc
xchg
dec
popa
push
dec
jo
cmp
shrl
dec
stos
inc
test
sub
fistpl
rclb
inc
ret
pop
out
dec
shll
inc
sbb
lods
jo
lds
pusha
inc
add
xchg
in
mov
xor
scas
add
xor
lds
cmp
adc
addb
sbb
mov
fsubrl
out
idiv
push
xorl
mov
lcall
or
popa
dec
pmaddwd
hlt
push
jns
push
out
dec
pop
dec
cwtl
xchg
adc
push
out
mov
adc
loope
repnz
sub
xchg
adc
mov
push
adc
cmp
cmp
dec
mov
fistpl
aas
mov
adc
arpl
addr16
or
push
mov
fstps
rolb
xor
out
cmc
xchg
push
add
outsl
pop
dec
adc
pop
roll
cmpsl
int3
push
xchg
ja
pusha
mov
pusha
adc
push
sbbb
sti
push
stc
push
cmpsb
lahf
dec
mov
scas
imul
pop
xchg
enter
mov
enter
push
shrb
ljmp
test
fstpl
sbb
pop
dec
xlat
imul
and
dec
loopne
cmp
xchg
scas
int
pop
dec
ss
and
xor
dec
outsb
inc
and
js
pop
adcl
push
out
test
test
ja
movsb
daa
xchg
cmpb
cwtl
fnstsw
fadds
jge
push
outsl
xchg
fs
lea
out
sbb
and
xchg
dec
js
imul
clc
paddq
gs
mov
js
jmp
pop
repz
test
shr
dec
fs
xor
dec
jp
mov
and
add
push
add
mov
cltd
mov
add
call
paddsw
mov
fwait
xchg
and
in
ljmp
into
scas
xor
xchg
popf
icebp
adc
fldenv
adc
adc
and
bound
mov
enter
mov
lahf
cli
mov
sbb
add
lock
mov
scas
addr16
es
cld
mov
nop
repnz
cmp
push
loope
pop
sub
add
sub
sub
mov
sub
and
xchg
cwtl
out
mov
or
int
add
add
mov
or
cmp
divl
pop
push
mov
sahf
xor
sbb
sti
push
aaa
cwtl
inc
pop
divl
fcoms
out
ficomps
add
and
popf
xlat
and
sub
lret
scas
pslld
jae
mov
out
mov
loopne
pop
std
rorb
push
pop
call
lcall
cvtdq2ps
adc
cld
mov
insb
leave
mov
xor
mov
lods
xchg
les
stos
fmuls
dec
cmp
out
and
shll
ja
je
and
sbb
jg
aam
jns
sbb
jb
pop
add
fmuls
pop
mov
addl
addb
or
pop
xchg
mov
add
mov
icebp
cld
sbb
cmpsl
das
jb
fnsave
xlat
push
inc
imul
imulb
mov
mov
loope
mov
cltd
mov
fildll
push
jo
jp
inc
jb
std
push
dec
push
dec
dec
push
inc
mov
add
sub
pop
push
fcomi
pop
out
xchg
test
imull
test
sbb
and
push
aad
xor
sbb
adc
testl
lahf
pop
xchg
mov
jge
cmp
mov
mov
xchg
push
dec
daa
sub
inc
sarl
and
and
adc
arpl
les
cli
cmpsb
mov
push
shlb
scas
pop
ja
mov
cmp
lock
mov
cld
push
ss
xchg
sahf
out
es
cmpsl
adc
push
nop
xor
mov
fisttpll
popl
jecxz
jnp
jle
and
add
not
nop
pop
imul
jle
xor
and
cmpsb
and
add
sub
sbb
jns
mov
pop
sbb
xchg
out
sbb
in
loop
ljmp
out
cmp
scas
cmp
sarl
add
xchg
mov
leave
push
inc
push
imul
mov
push
mov
push
push
fcomi
nop
jmp
ss
out
int3
test
in
push
icebp
cmc
sub
jmp
mov
mov
cmp
aaa
push
mov
cmp
xor
push
push
pop
adc
lock
jl
sahf
or
fstp
mov
mov
orb
inc
loope
mov
in
adc
ss
test
adc
xorl
aas
mov
scas
aad
push
add
fnsetpm(287
xchg
mov
cmp
xor
or
dec
cmc
mov
xor
outsl
jnp
icebp
push
enter
sbb
lea
adc
icebp
loope
xor
rorb
xor
cmpsl
nop
out
ljmp
push
test
adc
cvttps2pi
mov
out
sbb
outsl
jne
dec
xchg
scas
pushf
ss
test
pop
jp
sub
addr16
fisubl
andl
adc
bound
mov
and
gs
fsts
adc
cmp
orl
xchg
subb
mov
fcoml
or
sub
lods
cli
jo
inc
jo
xchg
outsb
in
imul
inc
fwait
sbbl
or
sarb
lahf
popf
dec
pop
lcall
xchg
and
int3
int3
mov
add
shrl
ret
subl
add
test
cli
test
fildll
inc
cwtl
gs
in
push
rclb
xchg
fxch
testl
lods
ja
nop
cs
aas
pop
or
pop
aaa
repz
push
cmpsl
call
adc
aam
leave
cs
pop
lock
jmp
stos
mov
shrl
sub
lcall
inc
ftst
lock
push
sbb
lcall
lret
je
pop
lods
mov
mov
push
ret
ss
in
jge
adc
dec
sub
lahf
jge
cmp
cmp
push
adc
jae
xlat
insl
pop
int3
dec
scas
test
cmp
push
cmp
pusha
scas
cld
jo
out
stos
xchg
shrb
sarl
negl
sbb
fcomp
or
jge
adc
add
mov
int3
stos
sub
shll
into
push
mov
popa
aad
pop
out
cltd
jb
mov
es
adc
call
pop
and
mov
cmpl
and
xchg
and
inc
pusha
into
cmpsl
dec
ss
jo
cli
out
and
jp
mov
mov
mov
jne
iret
setb
lret
jge
test
mov
cs
jae
scas
aad
mov
sub
in
mov
repnz
shlb
cmp
xchg
sbb
testb
mov
dec
push
hlt
xchg
pop
pop
shrl
mov
adc
pop
jle
lret
adc
out
jecxz
mov
xchg
andb
and
dec
push
sbb
pop
ja
or
mov
aaa
daa
daa
jbe
xor
xchg
mov
out
mov
lods
mov
mov
dec
fists
fstl
mov
sti
jne
jge
xorl
mov
mov
ja
jp
mov
nop
movsb
inc
inc
or
out
test
iret
shl
sbb
in
iret
aaa
adc
out
pop
das
nop
xchg
adc
aad
iret
adc
out
mov
sub
push
bound
inc
cmp
lea
cmp
cld
cltd
xlat
jno
outsl
xorb
andb
mov
movsl
or
idiv
scas
push
push
xchg
xor
mov
jns
outsl
xchg
scas
dec
lret
mov
addb
push
dec
add
test
shlb
das
sbb
shl
mov
addl
mov
dec
int3
sti
sub
in
adc
sub
into
in
jge
out
rcrl
popa
sub
xchg
jno
mov
pop
out
jnp
sahf
mov
std
mov
sahf
sbb
in
add
lret
dec
daa
mov
int3
xchg
or
mov
in
sbb
stos
mov
les
add
pop
popf
push
scas
mov
mov
roll
insb
or
stos
outsl
sbb
xor
cmpsb
dec
xor
pop
mov
xchg
fidivrs
xchg
iret
push
mov
add
mov
cmpsb
les
sub
xor
xchg
nop
out
dec
pand
mov
adc
outsl
popa
cld
in
lods
addr16
sbb
out
jne
or
std
movsl
and
int
sbb
xor
sbb
scas
mov
das
adc
stos
xchg
fstpl
hlt
lods
ljmp
out
mov
les
test
lret
xchg
adc
fidivs
push
or
lret
jle
jp
push
cmp
xchg
outsb
fsubrs
roll
loope
mov
stc
add
cmp
cli
out
push
shll
fisttps
mov
or
mov
lods
fistl
and
inc
fldl
xchg
out
add
int
sbb
jnp
out
out
mov
adc
mov
cld
aaa
push
and
xchg
mov
jg
jle
or
add
rclb
cmp
inc
mov
jns
shr
inc
ljmp
popf
and
fsubr
das
add
xorb
test
inc
or
push
jae
xchg
pop
xlat
es
aam
pop
mov
cmc
dec
daa
addl
xchg
mov
mov
mov
xchg
pop
dec
das
or
sbb
lret
lods
or
push
into
mov
int3
scas
imul
push
mov
sub
js
push
aad
icebp
push
out
cmp
pop
sbb
cltd
lret
or
dec
sub
cmp
or
jle
idivb
mov
cld
mov
in
sub
adc
dec
xchg
es
xchg
sub
movb
or
jnp
mov
pop
pop
js
jo
jae
loope
mov
fwait
inc
mov
push
loope
pop
ja
fwait
test
xor
fmul
popa
push
iret
lcall
and
repnz
xchg
and
fistps
rcll
add
js
inc
jmp
aam
sti
xor
stos
xchg
mov
xor
mov
call
test
std
mov
adc
sbb
cmp
xor
cwtl
inc
xchg
popf
cmpsb
or
std
stos
mov
pop
hlt
in
mov
mov
pop
cmpsl
into
ret
inc
adc
jle
setne
mov
cmp
stc
ret
test
pop
jo
lahf
dec
or
add
mov
loopne
das
popf
mov
jp
xor
fdivrl
mov
mov
das
clc
sbb
icebp
sbb
dec
sti
pop
jp
or
pop
hlt
mov
pop
imulb
add
xor
mov
add
adc
fbld
jno
nop
jl
mov
and
xchg
xor
mov
imulb
push
out
ljmp
aaa
outsb
sti
sub
je
or
jge
mov
sub
ss
mov
fwait
loop
dec
rcrb
popa
stos
adc
push
pop
mov
sbb
or
insb
stc
adc
pop
jge
xchg
dec
adc
mov
jecxz
xorb
cld
jl
sbb
data16
lret
pop
leave
xchg
xchg
cld
or
or
xchg
js
iret
cld
mov
sbb
mov
fsts
aaa
jecxz
jne
mov
inc
cmp
ret
push
add
lds
sbb
testb
cmpsl
cs
stos
mov
xor
xchg
cltd
addr16
in
or
jecxz
popf
in
dec
les
aad
adc
sbb
mov
pusha
push
and
fmulp
cwtl
pushf
push
rorb
mov
outsl
jae
xchg
pop
add
loop
mov
jl
xchg
or
add
stc
in
add
sti
ficomps
mov
cld
add
setae
mov
arpl
dec
test
test
enter
jp
or
sbb
cmpsb
inc
jns
sub
sbb
and
dec
cld
fmuls
dec
outsb
mov
or
xor
xor
out
fs
push
lcall
test
or
adc
pusha
xchg
cltd
push
ret
pop
mov
repnz
sbb
cmp
push
fstpl
or
cmp
imul
adc
sahf
addb
fldenv
ds
icebp
pop
loope
dec
lret
mov
dec
dec
sub
shrl
icebp
and
inc
insl
dec
and
arpl
sub
shrb
dec
fs
pop
xlat
icebp
lcall
fwait
dec
jg
data16
dec
xor
sbb
cmpl
imul
push
xor
pop
sub
sbb
xchg
jne
dec
jle
jnp
ds
ss
xor
xchg
xchg
jo
jmp
mov
mov
movsb
repz
xchg
mov
in
push
mov
shr
cmpsl
mov
fistl
repnz
lahf
add
jle
sbb
repnz
cmp
shrl
add
loope
lods
shlb
dec
sub
popa
mov
mov
aaa
sti
pop
add
test
pop
int3
fucomp
lret
nop
out
mov
push
cmp
outsb
dec
or
and
inc
mov
or
xchg
pop
sub
inc
data16
sub
fistpl
jns
dec
xor
cmp
mov
mov
lahf
std
lcall
insb
mov
mov
shll
xor
jp
data16
leave
daa
lcall
pop
enter
mov
jne
in
int
enter
mov
lret
push
jbe
cmp
dec
cltd
into
jnp
push
out
lds
stos
iret
dec
cmp
test
jno
mov
gs
mov
icebp
pop
adc
imul
and
dec
cmp
xlat
insl
clc
pop
and
cmpsl
jecxz
ret
mov
inc
testb
mov
mov
xor
js
movsb
cmc
fimuls
add
sbb
outsl
adc
fsubrl
fdivrl
rolb
sub
clc
cltd
rclb
cmp
js
into
inc
andb
xor
push
leave
dec
jp
fsubs
inc
mov
out
negb
fsubrl
mov
mov
lret
and
insl
sub
inc
sbb
int3
inc
jge
dec
or
adc
cmp
cld
cmp
hlt
sub
stos
jl
inc
and
adc
loope
out
mov
dec
pop
xchg
mov
lods
shr
gs
xchg
fstpl
or
loop
daa
sub
enter
or
jnp
in
pop
mov
and
addr16
pop
adc
sbb
dec
lahf
and
pop
xor
addl
daa
adcl
lret
jo
mov
loopne
notl
xor
adc
cvtps2pi
sbb
jle
rcr
lcall
enter
sbb
mov
mov
into
sub
clc
mov
outsl
cmpb
mov
jecxz
pop
cmp
and
sbb
pop
xchg
jmp
fimuls
mov
pcmpeqd
movsb
xor
xorl
or
inc
dec
pop
rol
jno
or
push
mov
pop
movsb
mov
fbstp
js
cmpsb
movsb
mov
dec
xchg
sub
push
inc
daa
es
ret
nop
lcall
scas
outsb
dec
pop
mov
jnp
imul
jle
fsubrl
mov
mov
xchg
mov
cmp
aad
fmuls
cmpsb
push
and
dec
sar
and
inc
pop
test
adc
mov
je
sbbb
in
adc
icebp
adc
sub
adc
fistpll
cmp
inc
push
mov
cmp
jb
inc
adc
xor
push
movsb
int
xchg
cld
fimuls
mov
rclb
push
inc
test
xchg
lret
push
in
icebp
test
jne
insl
pop
mov
test
mov
in
inc
ror
andl
mov
cmp
sub
cwtl
pop
add
pop
mov
insl
sbb
sti
insb
je
mov
test
jg
out
add
sub
sbb
sub
daa
xor
cmpsl
testl
cmp
je
movl
xchg
mov
imul
insb
or
xor
pop
sbb
loope
psrlw
cmp
pushf
pusha
cmpsl
je
insb
dec
test
or
sub
arpl
sub
out
xlat
adc
pushf
mov
or
dec
jp
int3
xor
leave
pushf
lds
sub
mov
jmp
pop
cs
lcall
roll
subl
call
imul
in
rorb
test
adc
adc
xlat
cmp
sbb
push
add
mov
mov
decb
lods
sbb
lcall
mov
lods
jecxz
dec
dec
inc
cmp
mov
mov
adc
cmp
in
push
pop
cmpl
daa
sub
fstps
insb
outsl
imul
sbb
jbe
test
mov
sbb
pop
inc
mov
insb
jnp
push
inc
fistl
lods
loopne
xchg
dec
mov
popa
icebp
gs
xor
das
adc
sub
xchg
lret
outsb
dec
xchg
xor
xlat
sub
mov
nop
filds
lcall
cli
xchg
cwtl
push
pushf
aas
xor
shr
sbb
lds
cltd
je
testb
lea
into
pop
ficoms
xchg
push
cmpsl
jl
xchg
add
xchg
ja
xchg
pop
jle
inc
shr
mov
repnz
mov
clc
std
outsl
push
dec
add
lcall
movsl
xchg
xor
dec
jbe
cmp
cmpb
in
inc
mov
push
mov
mov
or
and
movb
out
and
jno
jne
mov
stc
dec
and
dec
popl
xchg
mov
ja
outsl
push
xchg
scas
xchg
mov
jns
arpl
and
add
and
nop
push
or
mov
lock
sti
lret
xchg
dec
cmpb
cmp
mov
les
mov
pushl
inc
fistpll
cmp
pop
pusha
movsl
fistps
xchg
arpl
cli
adc
push
jne
or
adc
mov
in
nop
dec
imul
dec
ja
mov
test
lret
cmp
insl
and
lret
jo
cwtl
xrelease
push
dec
sarb
push
cmp
movsl
test
and
jl
pop
hlt
fldt
outsl
test
inc
push
xor
sbb
jbe
mov
jb
loope
pop
lahf
das
xchg
jmp
scas
loop
dec
sub
xchg
test
add
inc
std
push
adc
test
stos
jle
iret
in
push
repz
push
lret
xlat
adc
xchg
arpl
addl
jl
adc
mov
aas
aas
xchg
and
into
adc
mov
sub
add
lret
cmpsb
scas
inc
test
sub
aaa
push
xor
mov
push
lods
cwtl
cwtl
jmp
addr16
and
push
std
fchs
jmp
and
ja
pop
push
loop
aad
or
aad
jecxz
mov
dec
in
loopne
aas
leave
mov
hlt
sub
dec
inc
mov
lock
out
hlt
in
decl
and
outsb
lcall
test
imull
xchg
movsl
jg
into
add
xor
jp
push
ret
js
shrb
xor
jmp
add
or
push
mov
ja
dec
mov
jnp
dec
mov
xor
data16
ss
in
dec
sbb
jo
repnz
mov
mov
jo
and
cmp
mov
fsubs
push
and
sahf
cmpsl
jo
sub
sbb
sarb
push
adc
roll
pop
pop
push
jb
dec
jae
lcall
lods
mov
pushw
shll
fstl
lea
pop
out
mov
cmpsl
xchg
imul
xor
cli
aaa
jnp
stos
sub
popa
lahf
push
movsl
mov
xchg
fs
outsb
jmp
stc
or
cmp
cs
int
dec
aas
adc
mov
rol
push
xchg
adc
js
mov
jl
push
fs
cmp
cli
fnstcw
inc
xchg
mov
out
mov
mulb
sahf
pop
lods
mov
dec
push
popa
fisubrs
sub
push
dec
push
fdivs
mov
test
gs
jns
mov
push
or
bound
jl
jmp
or
cmp
push
adc
jge
and
clc
adc
jns
adc
and
mov
lcall
jnp
in
movsl
dec
push
mov
mov
icebp
push
mov
int3
fdivrl
mov
lret
outsl
xor
xor
out
and
mov
and
call
adc
idivl
in
orl
push
cmp
mov
test
aad
popf
stos
xchg
sbb
js
xchg
in
mov
sbb
add
xor
xor
add
sbb
fistl
aam
pop
aam
pushf
out
sbb
clc
cltd
sub
add
cmp
inc
and
sub
adc
out
lcall
mov
out
andb
cli
fistpll
mov
imul
lret
xor
xor
push
mov
jg
mov
shrl
jge
mov
xor
stos
insl
addr16
stos
shrb
outsl
mov
cmpsb
jl
push
clc
syscall
adc
adc
xor
adc
xorb
idivb
shl
cmpsb
out
rcll
mov
imul
sbb
stos
mov
in
cmp
popf
sarl
jnp
mov
push
pop
shrl
pop
mov
sub
cmc
repnz
js
xor
xorl
gs
enter
pop
lods
jne
sbb
push
data16
cld
test
sub
xor
jmp
data16
push
add
and
es
frstor
sete
dec
sub
scas
add
pop
shll
outsl
jmp
call
sbb
dec
jo
les
mov
shll
enter
cwtl
dec
stos
sub
mov
and
repz
xchg
outsb
nop
and
dec
test
rorb
inc
cltd
sbb
mov
lods
dec
mov
push
xchg
shr
cs
insb
pop
imul
sbb
inc
ja
mov
montmul
cmpsb
inc
subb
push
inc
adc
inc
lret
xchg
cmp
sbb
mov
push
cld
ret
cld
push
and
addl
cmpsb
mov
pop
cmp
addr16
push
jmp
jl
pop
mov
inc
push
inc
inc
push
arpl
push
mov
or
dec
mov
ss
sub
int
iret
sbb
push
cmpsb
mov
ret
loopne
pop
add
mov
jmp
mov
sbb
ss
xor
inc
int
cltd
jmp
inc
mov
sub
in
in
sbb
fwait
lret
dec
cmpl
pop
outsl
mov
addr16
or
mov
repz
sub
aam
or
pop
sub
int3
mov
insl
or
push
push
les
xchg
pop
gs
jno
adc
insl
jge
dec
mov
bound
testl
mov
push
mov
dec
es
loopne
rcl
cmpsb
loope
loope
sarb
pandn
jb
mov
sahf
jg
cs
fbld
fs
jle
dec
dec
fldenv
dec
shlb
mov
mov
aad
test
sub
jle
mov
dec
mov
xchg
push
or
jno
js
dec
mov
push
cmpsl
insl
push
jle
mov
mov
jmp
out
cltd
and
sahf
xchg
sbb
pop
or
inc
lret
out
push
rcll
sti
or
mov
dec
push
notl
adc
es
repz
cmp
mov
mov
sub
dec
ss
dec
mov
jg
scas
jnp
dec
and
cmpsb
cltd
dec
push
pop
mov
xchg
mov
scas
std
pushf
test
lret
test
xchg
xor
xchg
ret
sbb
sub
inc
cmp
xchg
fsubs
pusha
imul
hlt
std
push
pop
dec
mov
add
dec
xor
cmpsl
mov
aad
test
adc
loope
inc
std
gs
scas
jp
insb
mov
sahf
icebp
nop
cmp
mov
std
insb
iret
inc
test
mov
push
flds
cmp
jae
cld
imul
mov
or
adc
scas
iret
mov
inc
pop
add
mov
daa
loopne
fildl
aaa
adc
xor
cli
xchg
pusha
add
test
dec
negl
dec
jbe
sti
rclb
xor
and
das
das
mov
ret
popa
jns
lds
sbb
insl
xlat
add
mov
out
sbb
mov
addl
pop
dec
adc
mov
add
mov
and
inc
adc
inc
mov
mov
cwtl
and
sub
dec
dec
jnp
fiadds
pop
add
push
xorb
loopne
jbe
call
mov
outsb
jnp
jb
subl
adc
sbb
popf
addl
outsb
stc
or
jbe
add
mov
sub
cmp
pop
inc
ss
sahf
jl
xor
fnsave
bound
into
rclb
dec
inc
addr16
and
xchg
sub
inc
inc
fmuls
test
pop
dec
mov
pop
cli
adc
enter
orb
mov
dec
fcompl
cmp
cmpsb
jnp
ficomps
jbe
cmpsl
pusha
data16
mov
dec
xchg
or
push
mov
mov
lods
std
mov
cltd
inc
fldcw
lret
jg
movsb
jg
sbb
adc
add
sub
inc
lods
xchg
and
cmp
sub
cwtl
push
loopne
mov
gs
sub
pusha
negl
sub
adc
stos
and
sub
call
xchg
and
xchg
stc
adc
push
lret
mov
mov
imul
movsl
push
aad
lret
jmp
xchg
sbb
out
inc
xchg
stc
inc
pop
imul
iret
aam
popa
jno
sbb
dec
adc
or
out
and
insl
js
scas
insl
and
insb
xchg
out
push
jae
cmp
scas
mov
leave
xchg
pop
lds
cmp
out
dec
dec
pop
aas
cmp
xlat
jg
push
push
jno
lret
mov
stos
sahf
shrl
stos
add
jg
fmull
ljmp
add
mov
push
or
mov
repnz
inc
add
push
out
sub
lods
addl
pop
scas
pop
jne
mov
cmp
sbb
or
sub
mov
es
mov
orl
fxch
loopne
add
xorl
lods
imul
push
fucomip
mov
add
xchg
loop
adc
xchg
je
out
cld
mov
lcall
lock
push
notl
rcrl
mov
outsl
dec
jne
adc
stos
pop
pusha
lret
mov
data16
out
mov
and
jp
rclb
outsl
cmp
mov
mov
int3
shll
xchg
pop
out
push
push
cld
push
pop
mov
pop
out
and
outsl
mov
push
das
andl
addb
test
push
xor
mov
ljmp
dec
or
and
fs
jecxz
flds
mov
pop
arpl
sbb
leave
in
and
jb
out
flds
mov
outsl
cmc
dec
xor
push
fiaddl
mov
adc
repz
mov
ljmp
int
nop
xor
cmp
pop
pop
outsl
les
cwtl
dec
xor
imul
mov
jge
xor
xchg
add
cmp
xor
cmp
adc
mov
lock
pop
xor
test
jg
cltd
xor
dec
push
fisttps
cmp
dec
imul
or
out
test
out
loopne
enter
push
push
or
jno
jo
inc
cli
pop
and
inc
cmpsl
adc
es
lret
mov
dec
adcl
and
mov
ret
ss
push
cld
sub
fs
push
push
test
mov
pop
cmc
shl
out
mov
iret
add
xchg
mov
or
in
cmp
cmp
bnd
aas
enter
nop
out
out
jl
leave
cmp
jmp
xchg
sti
jne
sbb
add
subl
mov
push
sbbb
fisttpl
pop
lret
loopne
lahf
testb
add
leavew
mov
cwtl
mov
inc
sub
xchg
xchg
into
jnp
or
je
shll
add
mov
mov
jo
jp
jp
ja
inc
imull
ljmp
or
enter
pushf
aam
pop
jecxz
add
mov
add
fimuls
outsl
push
fadds
loopne
subl
lds
pop
test
repnz
inc
sbb
clc
cmp
jp
lods
mov
jp
cmp
mov
lock
fsubp
es
lea
mov
mov
insb
and
ret
add
lea
adc
jmp
adc
into
xchg
xor
xchg
aaa
lods
aad
push
add
clc
cmp
adcl
mov
insl
je
xor
add
dec
mov
and
fsubr
rclb
pop
je
bound
std
mov
sbb
sub
xchg
sub
out
cmp
fnstenv
or
push
cwtl
mov
sbb
dec
in
fidivs
sub
mov
inc
in
cmp
pop
call
inc
xor
mov
aas
mov
ret
cli
divb
jecxz
stos
mov
ret
jb
shlb
in
shlb
mov
xlat
lret
xor
sub
inc
in
push
call
ficoms
add
fdivs
jg
push
mov
mov
mov
sub
jno
mov
mov
ja
shlb
sub
xchg
xor
xchg
mov
mov
push
cli
iret
jmp
jno
pop
popf
cmp
iret
addr16
lds
adc
ret
out
xchg
fiadds
dec
push
push
lock
add
push
jge
outsb
cmc
ljmp
in
push
in
lret
pop
xor
xor
inc
clc
mov
or
sub
xchg
aaa
js
shll
dec
push
pop
adc
ljmp
sbb
adc
jb
and
push
test
or
inc
lock
inc
test
push
push
sbb
repnz
lock
pop
cmp
pop
mov
sti
mov
mov
rorl
sub
cs
leavew
addr16
arpl
mov
push
icebp
fcoms
aad
jnp
mov
or
pop
std
test
mov
aas
repnz
sti
fdivr
call
dec
ja
and
mov
out
mov
or
andb
and
shlb
or
cli
aad
sbb
lret
mov
xchg
adc
mov
xor
push
notl
xor
loope
pop
lret
and
and
mov
test
cmpl
je
ja
ret
mov
pusha
lret
mov
inc
test
int
push
in
pop
stos
sub
jl
loopne
mov
jl
inc
leave
nop
sbb
int3
push
add
test
in
xchg
iret
hlt
je
mov
dec
out
out
add
cmp
xchg
sbb
xor
mov
lahf
pop
dec
lods
mov
mov
adc
imul
scas
hlt
push
adcb
pop
in
out
mov
sub
dec
out
ja
cmpsb
sbbl
movsl
pop
cmpsl
in
add
cmp
mov
gs
imul
adc
int3
fs
inc
mov
popf
jno
ret
arpl
xor
mov
lret
fs
push
adc
mov
cwtl
roll
inc
mov
and
in
jmp
cmpsl
push
lret
push
xchg
dec
cli
arpl
pushf
mov
jecxz
or
xchg
lahf
in
fimuls
mov
lods
lds
dec
add
push
inc
divl
xor
or
clc
lods
bound
clc
mov
cmp
dec
and
and
lods
inc
xchg
sbb
mov
inc
js
mov
mov
inc
loopne
xchg
fwait
ss
xchg
in
pop
mov
addr16
or
push
and
pop
out
loope
sbb
mov
imulb
xor
outsl
notb
lret
lret
rcrb
lods
into
sbb
and
ds
js
stc
adc
cwtl
fnstcw
mov
xchg
insl
mov
mov
stos
aam
stos
aaa
test
mov
add
pushf
xchg
hlt
lods
or
xor
xchg
scas
mov
addr16
mov
xchg
fs
mov
xchg
xchg
inc
add
sbb
daa
sarl
roll
mov
cmpsb
or
jns
mov
cmp
iret
rclb
fcmovne
push
pop
pop
pop
adc
cwtl
test
dec
movsb
jb
dec
mov
adc
mov
or
daa
adc
adc
inc
bound
call
mov
in
popf
daa
clc
ja
insb
stos
orl
mov
gs
mov
gs
cs
mov
mov
pop
js
jl
jp
and
insl
lret
jbe
mov
push
cmc
iret
fwait
mov
mov
sbb
ds
lret
popa
xchg
out
data16
outsl
pop
mov
or
ficomps
add
sub
stc
loop
xchg
mov
and
cmc
xor
mov
les
shll
loope
push
mov
xor
push
mov
sahf
dec
pusha
repnz
enter
gs
gs
dec
adc
lcall
mov
sti
movsl
fstps
sub
fidivrs
lea
imul
push
push
and
or
mov
paddq
inc
fnstcw
jg
inc
orl
das
cmp
cmpsl
loopne
jg
insl
dec
into
inc
add
xchg
addr16
sbb
cmp
filds
inc
jp
xchg
cmpsl
xor
push
fldcw
outsb
mov
call
mov
sbb
mov
movsl
lcall
scas
adc
insb
rcl
adc
fcomi
stos
ffree
aam
cmp
pop
jns
sub
mov
test
repz
ficompl
in
jae
test
shrl
xchg
in
jne
jg
and
and
sub
iret
int3
or
aaa
cmpsb
jle
xor
dec
push
cmc
push
mov
push
adc
test
mov
and
test
ret
rcrl
or
fimull
mov
adc
dec
loope
cmp
test
sbb
ud2
dec
push
mov
mov
xchg
sbb
repnz
addr16
add
mov
rolb
mov
fcoml
push
inc
sub
and
add
mov
andl
fiadds
dec
inc
je
dec
cltd
jno
scas
negl
mov
pop
scas
dec
push
fistps
pop
ret
mov
outsb
fucomip
int
mov
or
sbb
pop
shl
hlt
mov
xor
sbb
pop
add
and
loopne
imull
repz
scas
push
lret
movsl
cmp
xchg
scas
xlat
xchg
leave
scas
cli
movsb
cmc
stos
jbe
movsb
rol
mov
clc
jge
jb
pushf
rorl
jmp
adc
addb
mov
jmp
pop
mov
fdivrl
jo
dec
xchg
out
add
negb
sub
sub
mov
fcoml
int3
lods
aam
xor
lods
pop
push
mov
or
aas
lods
std
btc
inc
enter
lea
sbb
jmp
mov
cmpsb
rol
dec
xor
and
dec
push
and
jno
or
popa
outsb
dec
or
shll
sub
rcll
popa
das
pop
or
add
es
or
loopne
sbb
pop
stos
jne
cltd
lods
xor
dec
inc
pop
adc
std
loopne
add
cmpsb
or
xor
ror
lea
lahf
enter
scas
mov
aaa
xor
push
in
dec
mov
jo
add
adc
test
ret
inc
mov
cmc
adc
or
xchg
add
repnz
mov
sbb
push
loopne
cmpsb
or
cwtl
adc
inc
dec
add
out
stc
cmp
sub
pushl
cmp
jle
xchg
je
mov
js
push
gs
ror
adc
and
xor
rcrl
mov
cli
mov
or
cmp
test
scas
jecxz
pop
outsl
or
sbbl
sbb
mov
cmpsl
sub
out
or
jl
jne
out
fcompl
rorl
lcall
mov
movsb
lahf
ljmp
pop
push
xor
popa
popf
or
xor
add
xor
sub
dec
negw
pop
or
mov
js
dec
sub
xor
mov
dec
lods
cs
dec
mov
hlt
sbb
lea
das
sub
inc
sub
push
mov
and
jl
shlb
das
adc
dec
and
jae
imul
arpl
in
out
inc
xchg
roll
xchg
fisubl
mov
sub
mov
lret
inc
jge
push
sub
mov
in
jl
insb
imull
mov
push
push
jp
jno
push
sbb
jo
push
add
cmp
lret
test
push
cmp
lea
mov
sbb
fildll
out
repz
je
fdivs
inc
jns
es
dec
lret
jl
les
lock
cli
aam
test
in
inc
leave
adc
dec
insl
arpl
sbb
inc
addb
pop
mov
mov
scas
sarl
mov
push
mov
scas
sbb
cs
in
pop
data16
adc
pop
sarb
push
loopne
inc
jmp
ljmp
insl
mov
test
pop
clc
jp
stos
jb
mov
cltd
adc
pop
add
pop
filds
add
push
lods
mov
push
sbb
lods
xchg
and
mull
repz
scas
dec
mov
jl
out
movsb
xchg
mov
addb
xor
es
stos
cld
testl
subb
js
scas
jae
push
mov
mov
mov
mov
pop
pop
cmpsb
xchg
or
xor
or
sti
lods
lods
fiaddl
xor
jns
repz
lret
out
mov
mov
loopne
xor
int3
or
out
and
mov
dec
cmc
or
or
notb
mov
push
pop
add
xor
sbb
push
adc
repnz
add
cmp
sub
xchg
push
outsb
std
fwait
es
aas
cmp
sbb
ret
jmp
push
ss
mov
les
push
mov
mov
jns
or
fildl
jns
fld
loop
dec
jle
std
aaa
mov
xchg
cmp
nop
mov
xor
pop
sub
dec
ss
comiss
repz
sub
push
jp
shlb
jne
dec
mov
dec
sahf
mov
mov
psubd
sbb
or
rorl
push
pusha
stc
lods
cmp
inc
mov
rcrb
mov
repnz
dec
xchg
je
jno
inc
das
add
mov
sahf
mov
xor
leave
xchg
sti
mov
rcrb
and
sub
xchg
inc
or
pop
roll
pop
popa
jo
xor
pop
push
mov
aam
lcall
jmp
lea
adc
arpl
out
ljmp
sti
shrl
data16
and
test
cld
jg
mov
lahf
jg
rclb
repz
testb
push
add
div
mov
cmpsb
addr16
rcr
jecxz
dec
out
xchg
push
mov
mov
js
or
enter
xchg
fisubrs
xchg
push
aaa
ud2
scas
sub
or
hlt
sbb
clc
or
fmuls
aad
ret
out
loopne
daa
mov
xor
pushw
test
stos
out
or
lret
xchg
or
aad
jb
adc
loop
add
ss
add
cmpsb
ja
jp
and
jmp
repnz
jle
imul
push
bound
rcr
mov
bound
xor
xor
insl
mov
pop
jp
ja
push
jbe
cmp
xchg
decl
push
mov
fndisi(8087
xor
jne
xor
cmp
inc
sbb
cmpsl
adc
jne
xchg
enter
cmc
jo
inc
rcrb
ds
sub
enter
fsts
stos
sbb
rcrb
pusha
jnp
negl
jmp
jecxz
enter
js
sbb
into
leave
jle
jmp
mov
adc
mov
fdivs
sahf
sub
stos
cmp
dec
jecxz
sub
cli
mov
dec
mov
mov
jg
mov
mov
jg
adc
dec
jno
mov
mov
mov
mov
dec
fwait
out
scas
sub
shl
test
das
mov
fcomp
aaa
pop
in
stc
push
not
jae
sbbw
lret
out
sbb
lret
flds
loop
stos
xor
test
xchg
pop
mov
popa
jp
loop
pop
push
mov
lods
mov
testl
add
jnp
hlt
es
bnd
sti
jg
dec
cwtl
test
sub
or
push
cltd
push
mov
dec
dec
dec
cmp
clc
pop
fisubs
cmp
pop
clc
insb
loop
push
pop
sub
mov
pop
arpl
movsb
mov
nop
mov
ljmp
jbe
movsb
je
dec
outsb
scas
daa
stos
xchg
dec
mov
test
stc
test
mov
xor
mov
mov
ret
xchg
add
bound
mov
and
push
add
xor
aam
test
fsubp
sub
xor
nopl
or
inc
xor
int
push
fwait
mov
addr16
pop
scas
ljmp
mulb
push
mov
test
mov
sbb
out
adc
xchg
or
and
andb
mov
lcall
or
sub
loopne
push
mov
jmp
imull
test
push
or
inc
jnp
aas
and
ret
in
adc
mov
ljmp
cwtl
mov
jl
mov
sub
add
iret
push
pusha
int3
test
ja
adcb
divl
cmc
aas
push
daa
push
ret
negb
popa
out
adc
pop
pop
xchg
inc
xchg
rorl
add
xlat
push
mov
addl
pop
mov
dec
add
aam
test
fisttpll
hlt
cmpb
loopne
sub
xchg
pushf
fildll
int
sub
push
dec
out
hlt
inc
mov
ja
push
pop
into
test
add
mov
test
mov
xchg
repz
push
push
add
les
ret
jae
stos
mov
xor
es
inc
sti
loop
sub
movsb
dec
xchg
push
out
dec
pushf
repz
xchg
int3
cmp
pop
push
pcmpeqb
lea
push
cmp
cmpsb
xorb
mov
ret
scas
add
inc
ja
movb
add
aam
in
jmp
jnp
xchg
sub
fwait
rclb
roll
lret
scas
shll
fsts
daa
cmp
mov
or
jge
cmp
mov
xlat
jg
push
fisubl
icebp
arpl
dec
dec
fisubl
xchg
incl
aaa
adc
jae
enter
aas
pop
xchg
ja
jge
pop
adc
xchg
mov
and
cmp
sbb
fcmovbe
inc
rorl
mov
sahf
push
xlat
into
mov
or
inc
lea
int3
mov
aam
ss
mov
mov
lods
fstp
jnp
cmp
xchg
pop
les
xchg
loope
adc
cmp
dec
stc
fcmovnb
mov
ljmp
xchg
pop
mov
arpl
cmpsb
scas
ffree
scas
lahf
mov
dec
pop
testb
loope
and
mov
popa
cmp
loope
xor
adc
loope
and
inc
aad
jmp
adc
add
dec
jo
cmc
and
clc
jecxz
jg
or
popa
push
into
inc
xor
sbb
sbb
dec
mov
push
sub
adc
mov
fcmovbe
cwtl
xor
add
mov
fucomi
call
cwtl
nop
fnstenv
xchg
cmpsb
mov
sub
pop
into
test
into
mov
mov
inc
mov
mov
push
cmp
out
test
imul
arpl
mov
ret
pushl
addr16
icebp
dec
stos
test
in
scas
and
hlt
dec
outsl
pop
int3
movsb
arpl
sahf
pop
es
jb
adc
mov
cmc
lret
loope
leave
loope
pop
outsl
and
push
mov
add
pop
inc
and
ret
mov
inc
dec
adc
ficoms
and
sub
inc
or
xchg
orl
imul
push
jb
es
loope,pn
ror
ret
jae
adcb
rorb
out
mov
cmp
jecxz
fucom
lea
jle
jmp
lcall
dec
sbb
pusha
insb
push
sbb
sub
mov
sub
xor
repz
ret
lcall
mov
movsb
dec
or
mov
pop
or
in
scas
lods
pop
dec
or
sarb
loopne
dec
in
ds
push
insb
clc
and
cmp
pop
jo
sub
sbb
push
clc
mov
xchg
std
mov
int
jl
out
dec
jno
push
dec
mov
jno
stos
outsl
rorb
cmpl
arpl
jl
iret
aam
push
mov
jo
mov
scas
and
push
stc
jl
xchg
stc
sub
sahf
rorb
mov
mov
mov
and
xchg
sbb
test
push
sarb
loope
pusha
inc
out
cmpsb
sbb
out
sub
or
icebp
hlt
test
pop
adc
xchg
ljmp
push
add
jmp
cwtl
fwait
xchg
inc
repz
out
repnz
and
insb
jl
iret
mov
jne
sarb
inc
inc
into
mov
enter
mov
dec
lea
inc
test
fsubrp
push
add
sti
aam
pushf
xor
inc
pushf
icebp
ljmp
cmc
incl
stc
dec
ds
faddl
pop
mov
mov
jbe
push
loop
popa
lea
dec
fildll
jno
or
pop
mov
lret
push
loop
mov
addr16
cvtps2pi
adc
add
insb
std
xchg
mov
mov
cli
rolb
sbb
cmp
into
popf
dec
push
dec
call
clc
ds
mov
movsb
add
push
aas
push
inc
gs
jecxz
pop
fnsave
add
adc
shll
mov
jmp
vdivss
test
stc
push
push
int
dec
pop
dec
sub
aaa
xchg
insl
in
int3
cmp
or
stc
popf
daa
mov
adc
push
jno
mov
in
add
mov
subb
outsl
cmp
bound
test
lahf
pop
or
test
out
pop
lcall
movsl
mov
and
ficoml
bound
ffreep
into
mov
pop
mov
sahf
jnp
pop
mov
mov
sbb
jge
xchg
lret
add
push
push
test
test
clc
xacquire
test
les
xor
aas
fstpt
dec
pop
add
je
cmp
lcall
jns
jne
mov
int3
movsl
in
sub
adc
cmp
mov
mov
gs
or
inc
mov
fcompl
outsl
int3
aas
and
movsb
mov
subl
lcall
push
or
pop
add
loopne
fnstenv
fdivl
xlat
and
fdivrl
movsb
roll
testl
cmpl
mov
push
lea
call
fisttpll
push
xchg
les
loop
mov
pop
jmp
and
lock
push
xor
push
sahf
fnstsw
aam
push
dec
xchg
std
das
adcb
xor
pop
stc
mov
orl
sbb
xor
bnd
jbe
in
and
out
jp
xor
jl
adc
pop
mov
push
cwtl
fs
sbb
adc
sbb
repz
jne
sub
dec
sbb
dec
cmp
mov
insb
ss
jecxz
ds
imul
stc
xor
push
daa
xor
cmp
pop
not
int
push
fdiv
movsb
pop
jno
pop
xchg
sti
sub
lcall
jo
add
push
scas
in
pusha
mov
mov
les
enter
jp
in
enter
cmp
pop
loopne
sub
inc
mov
pop
pop
cmp
sbbb
and
andb
push
jmp
sbb
pop
cmp
loopne
dec
cltd
add
xor
int3
sbb
and
inc
sarl
mov
push
jne
and
xor
push
fisubs
mov
shrl
pop
inc
mov
lret
cmp
push
stc
out
jge
mull
mulb
orl
cmc
inc
loop
sub
insb
popf
fmul
cmp
lahf
in
jae
mov
stos
enter
inc
push
push
les
repz
pop
jp
cmp
fdivs
fdivrs
ret
xor
sbb
loopne
add
jb
mov
jns
mov
test
lds
notb
dec
imul
mov
jle
clc
ss
fwait
or
fildl
push
and
ja
jnp
push
pop
push
jp
and
adc
sub
ficompl
add
pop
and
push
out
mov
xchg
imul
out
mov
sub
das
push
lods
jmp
std
rorl
pop
iret
mov
mov
add
inc
jecxz
jo
sub
int
sbb
neg
fsubrl
xor
pop
mov
into
mov
ljmp
mov
push
mov
movsl
jecxz
jbe
jno
mov
cmpsb
shl
xchg
pop
xor
mov
mov
call
pop
pop
mov
cmp
sbb
hlt
pop
ja
jp
or
or
in
or
mov
repnz
jge
imul
inc
adcb
cwtl
out
addr16
jb
mov
adc
test
testb
std
mov
int3
jno
out
xor
push
test
mov
test
mov
scas
jns
stc
lods
bound
inc
lcall
inc
and
sbb
int3
xchg
adc
cli
inc
adc
mov
out
cmp
les
lcall
fidivrs
mov
imul
add
dec
test
add
scas
and
stc
mov
sbb
mov
cmpsb
jg
addps
hlt
ret
push
fstps
clc
popf
pop
push
xor
fstl
sti
xchg
fimuls
mov
push
dec
lret
sub
cmp
jmp
xchg
sub
push
js
jg
jge
jg
fnsave
ja
push
mov
push
cmp
inc
roll
sub
rorl
cmpsl
jns
jo
imul
fsubs
outsl
xlat
outsb
sahf
into
addr16
fidivs
cmp
lods
push
out
add
adc
jl
cltd
mov
mov
sbb
hlt
mov
mov
loopne
repz
mov
xlat
or
push
mov
jo
or
add
push
push
push
add
inc
push
test
lret
push
jnp
loop
pop
cmp
clc
mov
xor
mov
movsl
pop
cmp
rcll
notb
iret
add
into
jo
outsl
fstl
lahf
mov
mov
adc
cs
repz
push
loope
xchg
mov
repz
mov
inc
mov
sub
adc
mov
jns
jb
push
inc
test
adc
or
jl
xorl
push
xchg
inc
sub
mov
and
mov
fwait
shrl
cmp
jb
cwtl
mov
fistps
sar
call
scas
inc
lcall
xchg
popa
adc
xchg
mov
frstor
daa
inc
dec
in
cmc
hlt
cld
adc
push
adc
mov
aad
fs
sub
mov
into
repz
ss
xchg
repnz
loopne
test
xor
and
mov
mov
adc
call
jl
icebp
popf
or
adc
mov
fildll
inc
popf
jecxz
cmp
add
loope
push
mov
stc
xor
add
xor
lea
in
inc
scas
out
cltd
pop
or
dec
leave
rol
jl
mov
inc
enter
inc
jne
fprem1
mov
loop
dec
fldcw
insl
sub
ret
mov
inc
andl
mov
jmp
jne
rorb
xchg
or
add
fisubrs
je
icebp
icebp
sahf
incb
enter
sti
ja
pop
adc
das
ret
aas
inc
xchg
in
fstpt
cs
pop
add
jae
adc
adc
jmp
cmp
push
inc
fisubl
pop
pop
and
cmpsl
addl
icebp
push
inc
push
lds
sub
insb
or
xlat
gs
and
or
cmpsl
loope
ret
push
and
rolb
ror
lret
add
pushf
sbb
rep
push
jecxz
int3
or
shlb
ficoms
les
mov
les
rolb
int3
adc
test
lea
cwtl
ret
imul
jg
ror
mov
nop
dec
cmpsb
dec
in
xchg
xchg
enter
ds
mov
mov
js
jmp
ja
mov
or
out
rcrl
adc
dec
add
pop
cmp
pushf
lcall
leave
out
notb
insl
sbb
std
clc
sbb
push
nop
mov
lret
je
or
mov
mov
mov
test
push
divl
inc
repnz
lods
fs
jecxz
popa
test
add
popa
xlat
pop
cli
rolb
test
dec
popf
jmp
add
out
mov
sbb
push
jno
dec
rcrl
cwtl
mov
cmp
daa
add
sub
adc
out
jb
fsubr
mov
adc
sar
rcrb
dec
in
test
mov
rol
pop
add
call
push
sub
mov
lcall
in
decb
insl
sbb
sub
ret
xchg
cmpsl
mov
mov
pusha
push
add
fucomp
jae
pop
mov
insl
pop
xor
jp
cmpb
and
xor
pop
popf
inc
stos
dec
mov
pop
loopne
or
add
or
loop
xchg
mov
cmp
mov
mov
fldl
cmpsb
outsb
jp
and
xchg
push
push
mov
and
mov
rorb
mov
sarl
pop
pop
lods
out
test
shr
and
pop
imul
popa
movsl
xor
scas
xor
xor
cmp
imul
cmc
subb
xor
movsl
push
cmp
sub
push
notb
cs
jnp
cmpsl
ficompl
leave
hlt
lret
fistpl
fsubs
cmp
idivl
xor
inc
lea
pop
rcrb
adc
mov
sub
cmp
mov
clc
xlat
shlb
cmp
in
js
pop
dec
aaa
xchg
sahf
sbb
pop
and
inc
inc
sbb
xchg
jecxz
adc
lods
jle
mov
nop
test
mov
sbb
pushf
push
popa
push
inc
je
dec
dec
mov
jnp
xchg
xchg
negb
sub
xor
rol
sbb
pop
push
insb
xor
cmpsl
test
dec
cmp
mov
pop
enter
jmp
insl
shll
out
aaa
adc
stc
sbb
sub
ljmp
mov
jge
lock
pop
push
in
xchg
dec
xchg
or
and
adc
pop
pusha
sub
dec
adc
adc
sbbb
pop
repz
pop
mov
das
jmp
inc
lret
xor
call
sarl
sahf
mov
js
cmp
xor
stc
addl
mov
cmp
imul
mov
xor
inc
dec
popl
loop
inc
inc
adc
jb
sub
icebp
imulb
stos
rcr
mov
cld
xlat
sub
fcoml
mov
sbb
loope
cwtl
loop
adc
lea
pop
jbe
nop
sub
test
inc
mov
in
dec
xchg
shlb
dec
jl
dec
or
inc
test
push
or
dec
ss
gs
sub
mov
or
shll
mov
push
mov
jle
jmp
out
inc
jmp
sub
sbb
push
sahf
and
mov
cmp
xor
mov
and
test
inc
pushf
in
dec
jb
test
cmpsl
jl
add
orl
cmp
leave
movsl
sub
data16
jns
cmp
adc
in
pusha
sbb
adc
jmp
lods
add
adc
scas
pop
push
mov
incl
sub
pop
inc
pop
sbb
cld
inc
out
das
dec
popl
ret
pop
mov
mov
lock
and
and
cmp
sti
out
inc
xchg
pop
mov
xor
je
mov
pop
adc
jge
stos
lahf
jmp
jge
sub
mov
inc
xor
mov
jo
sub
shll
cmpsb
jl
mov
xchg
lret
and
jnp
or
cwtl
mov
pop
jmp
lods
loop
movsl
sbb
negb
inc
subl
and
loop
sbb
std
clc
xor
jle
push
neg
out
testb
sbb
xchg
cmpsb
sbb
out
adc
cltd
pop
test
mov
lds
sbb
aas
orb
fcomps
mov
xchg
rcrb
out
lea
std
shl
int
jmp
mov
orb
pusha
xorb
xchg
lea
sub
ficoms
incl
clc
cmpsl
push
push
scas
xchg
mov
aas
and
enter
loopne
scas
dec
jne
xchg
inc
aaa
xchg
cmp
inc
xchg
fstpt
lret
test
imul
cmp
push
and
jbe
jg
cmpsl
int3
mov
xor
cmpsl
inc
sbb
jo
pop
incb
lds
in
add
aad
pop
iret
mov
pop
xchg
dec
cmpb
jno
or
jmp
mov
lcall
push
jo
add
loope
mov
cwtl
scas
fisttpll
pusha
add
inc
fwait
int
imul
out
or
jecxz
sbb
andb
adcl
sti
push
dec
inc
jl
test
xlat
pop
out
mov
xor
adc
mov
pop
mov
out
sbb
scas
xchg
sbb
testl
mov
and
cmp
in
mov
jecxz
into
aas
in
nop
dec
mov
cmpsl
and
jg
inc
andnps
xor
test
inc
arpl
fcmovb
mov
lahf
rcrb
pop
jl
adc
mov
or
jbe
aaa
fildl
pop
ds
lret
inc
inc
cwtl
mov
stos
bound
fisttps
cmp
out
test
add
imul
fiaddl
icebp
jl
lods
jb
xlat
and
cmpsl
cmp
xchg
mov
jno
cmc
repnz
sub
sub
ss
mov
test
mov
add
mov
es
jecxz
fisubrl
mov
shll
inc
jg
fists
and
pusha
jae
and
inc
sbb
rcrb
arpl
into
and
stos
fcomps
pop
xor
int3
xchg
lea
inc
addl
sbb
add
aas
jne
push
pop
out
cmc
sbb
mov
flds
in
mov
pushf
dec
or
and
push
or
jb
push
jecxz
xchg
std
xchg
mov
push
iret
sub
add
test
or
push
sbb
lock
mov
enter
jecxz
xor
shll
sbb
push
pop
mov
mov
fmul
mov
ds
or
mov
test
shr
hlt
push
shlb
mov
ret
and
adc
cmp
mov
scas
rcr
add
lds
outsl
inc
fdivrl
andb
repnz
mov
cmpsl
sbb
add
or
pop
mov
mov
add
nop
pop
push
sbb
nop
pop
addb
iret
or
inc
loopne
rorb
int3
inc
mov
adc
xorps
xchg
and
adc
mov
mov
outsl
dec
sbb
or
aad
fs
std
ja
inc
out
imul
mov
inc
and
push
mov
test
repz
notb
jbe
stos
daa
xlat
sub
xchg
int3
fstpl
pop
rcll
cmc
jno
lcall
pop
jbe
rcrb
js
mov
cmpsl
jb
push
addb
push
or
mov
push
cmp
rorb
mov
sbb
sbb
repnz
test
shrl
jnp
rorl
pusha
loop
adc
lret
xor
adc
push
mov
imul
andb
push
mov
mov
add
lret
pushf
aam
cmp
dec
lock
mov
fs
in
mov
js
add
fildll
jne
mov
xchg
dec
jmp
pop
sbb
data16
mov
orl
sub
mov
and
jl
pop
sub
test
xchg
and
adc
clc
mov
or
xor
imul
jl
scas
insl
outsl
add
inc
adc
lret
int
inc
sti
das
mov
outsb
adc
push
les
jecxz
ljmp
mov
into
jg
lahf
jmp
xchg
cmc
mov
mov
hlt
and
jbe
mov
and
and
adcl
mov
jg
ret
inc
pop
mov
mov
push
loopne
pop
cmp
repnz
mov
cmp
in
out
movsb
and
popa
cli
popl
mov
out
push
pop
sbb
lods
rolb
in
std
and
insl
sahf
cmp
sub
clc
jmp
jo
ret
gs
or
andb
pusha
fnstenv
push
sub
dec
and
cmpsb
int
mov
call
daa
adc
mov
xchg
and
xchg
jns
enter
cmpb
jo
and
mov
mov
inc
xor
arpl
sub
mov
fstps
xchg
add
call
jne
outsb
sub
mov
push
or
shll
ljmp
push
and
cli
inc
pop
hlt
sbbb
push
divb
call
mov
mov
inc
aad
nop
repnz
and
shrb
out
in
or
lahf
inc
imul
sbb
inc
ds
inc
cmp
fidivrl
mov
pop
dec
in
jno
inc
dec
push
ret
pusha
ljmp
movsb
jle
sbb
pushf
movsb
pop
pop
test
pop
pop
lahf
cmp
add
popw
mov
jge
cwtl
std
add
jo
xlat
or
jne
push
cmp
lods
xchg
add
ret
push
pushl
jmp
and
dec
xchg
test
gs
int
dec
test
xlat
lret
fcoms
push
pop
cmp
dec
add
les
lods
xchg
cmpsb
pop
dec
lock
push
jne
dec
into
arpl
movsl
loop
sti
movsl
into
arpl
movsl
loop
sti
movsl
push
add
loope
jecxz
test
xor
andb
pop
cs
dec
fistl
lahf
dec
sub
inc
mov
push
fbstp
add
sti
sti
loopne,pt
or
dec
lock
mov
mov
out
jno
pop
in
mov
out
jno
pop
in
stos
fisttpll
scas
movsb
mov
mov
out
mov
mov
add
pop
lock
dec
mov
stos
sbb
fucomp
mov
lahf
mov
sub
sub
or
xchg
stos
xor
sub
mov
push
clc
jmp
jno
test
ret
fsubrl
and
push
sub
mov
mov
push
ja
out
ficomps
iret
lods
aaa
fnsave
inc
js
jo
stc
ret
popa
popf
in
cmpl
test
cmpsb
dec
je
cld
pop
test
imul
es
in
sahf
jp
aam
out
xchg
imul
add
dec
mov
mov
push
jmp
xchg
mov
jbe
mov
lret
mov
dec
aam
icebp
movsl
stos
mov
mov
lock
push
ret
sbb
subl
adc
orl
inc
ljmp
pop
jo
add
push
pusha
or
sub
jl
mov
imul
xchg
mov
mov
or
nop
sbb
sbb
std
lcall
test
pop
test
push
add
mov
shrl
sarb
xchg
sbb
test
stos
dec
aaa
adc
insl
and
sub
mov
aad
repnz
push
scas
enter
inc
push
nop
mov
add
pop
push
and
insb
test
add
enter
lods
add
mov
mov
dec
stos
add
rol
movsl
inc
xchg
rcrl
xchg
into
cmp
lea
in
es
ds
arpl
inc
leave
test
mov
and
cmc
movb
adc
imul
out
in
inc
icebp
popf
pop
jns
adc
mov
jnp
or
scas
lahf
jnp
xchg
push
add
mov
lods
inc
cmpsb
aad
in
stos
imul
stos
test
dec
add
iret
filds
sti
push
jae
inc
imul
lods
scas
pop
ror
sbb
shrb
jle,pn
push
sbb
jbe
pop
imul
jp
jnp
add
push
bsf
xor
into
dec
fbstp
je
xor
push
push
adc
fisttpll
push
out
call
cli
or
or
cmp
xlat
sbb
sub
pop
lock
mov
push
xchg
aas
sub
ret
lahf
push
mov
sub
push
mov
arpl
inc
int
mov
jnp
fisubrs
xor
mov
mov
sbb
rep
or
mov
test
rcll
add
inc
inc
dec
dec
push
push
fsin
mov
test
ss
divps
out
jle
add
push
mov
faddl
dec
lahf
xchg
lret
movsl
sub
lock
sub
fs
shrl
int3
lea
jg
je
les
cmpsl
push
cmp
sub
cli
out
rcr
cmp
mov
std
arpl
xlat
outsl
sahf
clc
cwtl
xchg
sub
pop
cmp
jne
sbb
mov
dec
popf
cld
stos
and
pop
aas
mov
leave
push
hlt
lods
jbe
mov
mov
cli
pop
stc
adc
les
lret
add
insb
test
and
sbb
fmuls
aam
adc
aad
jno
mov
or
test
nop
mov
ret
jno
inc
pop
aam
roll
push
test
dec
mov
push
jl
jle
adc
rcrl
cmp
shlb
or
and
int
xor
lahf
xchg
add
pop
mov
aam
sbb
jo
add
cmpsl
cltd
sbb
sahf
jp
jmp
out
repz
xor
pop
add
mov
ret
xchg
mov
mov
dec
fstpt
test
mov
stos
aas
jle
xor
xor
push
xchg
inc
xor
test
ret
dec
insb
sub
ret
cmp
pop
mov
loop
push
ret
xchg
shll
dec
out
xor
mov
mov
imul
sbb
in
stos
jle
add
pop
repz
iret
sbb
and
cmpsb
test
out
sbb
adc
jne,pt
add
pop
filds
daa
jns
dec
dec
xchg
add
cli
decl
popa
pop
subb
dec
xor
xchg
sub
push
icebp
xor
pop
test
xchg
inc
or
push
inc
and
fnstcw
xchg
mov
in
daa
dec
lahf
lock
sub
inc
push
inc
mov
fsts
adc
pop
and
into
xchg
mov
and
and
out
push
add
adc
mov
shrb
mov
frstor
jne
cmp
insb
pop
arpl
dec
orb
nop
insb
sbb
cmp
mov
xorb
or
scas
mov
pop
stos
clc
pop
loopne
cltd
fldz
jbe
ret
jbe
jns
adc
enter
arpl
sti
clc
sub
fdivr
lea
sbb
js
gs
xchg
in
adc
cltd
pop
mov
mov
inc
xchg
aaa
fildll
jnp
out
ljmp
out
negl
jne
push
dec
cwtl
cmpb
xor
dec
shrl
sti
jae
sbb
and
xchg
aas
lret
loop
lds
xchg
mov
in
and
test
cs
pushf
popa
push
loop
dec
adc
pop
lahf
fisubs
jns
or
cld
cmp
pop
fldcw
insb
cmpsb
arpl
ficoml
cmp
aas
lcall
pop
mov
push
out
push
cli
ret
xor
imul
addr16
out
xor
scas
stos
loop
jmp
push
test
and
cmp
cmp
imul
xchg
incb
xor
ss
ret
pop
sub
inc
xchg
mov
shll
dec
adc
pop
int3
test
push
cmp
cltd
jg
mov
add
js
nop
push
and
mov
jno
out
lcall
or
ror
push
inc
xchg
pushf
fcomip
dec
out
sbb
mov
xchg
jmp
repnz
sub
and
aaa
into
ja
xor
mov
cmpl
lcall
ss
sbb
bound
xlat
push
lret
inc
hlt
mov
mov
mov
das
popa
or
into
aam
lcall
pop
dec
pop
aaa
negl
mov
jecxz
ficoms
fmuls
test
insb
mov
test
sub
test
add
mov
cmpsl
jo
push
outsl
jnp
xor
dec
sbb
cmp
cs
dec
out
leave
jp
jp
in
sahf
lock
push
arpl
or
mov
faddl
in
ret
jge
mov
push
out
sbb
outsl
mov
stc
insb
test
jno
mov
cmp
inc
xor
xor
loope
shrl
addr16
xor
sbb
je
pushf
fwait
xchg
cli
arpl
cli
lods
ret
inc
loop
cmpsl
and
add
clc
das
fisubrl
sbb
popf
mov
stos
in
out
jmp
push
mov
add
je
cmp
add
xchg
sbb
sbb
inc
pop
add
ljmp
pop
lods
int
data16
add
pusha
jne
jb
imul
xchg
loopne
xor
rcl
mov
mov
das
cltd
sbb
sti
and
loop
cmp
push
out
lret
sbb
adc
mov
dec
nop
fsub
jle
mov
aaa
jle
and
in
mov
mov
pop
sbb
xor
in
aam
enter
mov
dec
into
mov
fxch
mov
jge
jo
insl
daa
sub
pop
nop
call
movsl
jo
push
sarb
adc
ja
rcrb
mov
jnp
sub
cwtl
or
icebp
enter
jp
adc
mov
into
push
jno
mov
or
cli
sbb
je
push
pop
sbb
mov
pop
enter
sbb
pusha
mov
inc
imul
sbb
movsl
adc
mov
jge
testb
and
adc
in
rcrl
lahf
mov
pop
mov
nop
push
inc
mov
scas
jae
dec
add
jg
mov
aaa
sub
pusha
add
stos
dec
cli
lcall
dec
cmpl
fdivrl
into
movsb
std
push
repnz
sub
pop
jnp
cmp
sub
push
fstps
adc
or
fcompl
gs
cli
add
insl
push
mov
aad
jno
cmp
push
bound
test
into
mov
popa
popl
insb
mov
pop
adc
sti
negl
jbe
rolb
aam
inc
add
xor
inc
cmpsb
aaa
sub
fcomi
mov
xor
add
sub
cmpsl
jns
pop
sbb
mov
iret
shrl
jmp
inc
dec
xchg
push
push
std
jb
add
and
lcall
out
adc
add
fs
cs
pop
jmp
aas
mov
pop
mov
sbb
test
mov
or
mov
imul
lret
mov
into
idiv
sbb
das
jb
outsb
orl
gs
add
cmp
jecxz
lds
push
add
std
xor
jne
pop
or
int3
push
sbb
shr
and
aam
lret
sub
xchg
dec
scas
or
sub
sub
inc
jb
inc
jecxz
outsb
adc
fsubrl
inc
sub
adc
in
and
xchg
not
adcl
lods
jae
js
mov
je
fcompl
popa
xchg
ret
inc
sbb
xchg
mov
inc
jecxz
push
scas
sahf
daa
loopne
cs
mov
outsb
bound
test
dec
inc
pop
test
aaa
adc
mov
jb
pop
das
pop
mov
mov
lock
fisttpl
mov
mov
sub
adc
lret
icebp
daa
fs
dec
lods
sbb
movl
and
gs
pop
fwait
adc
setle
data16
roll
fistpl
inc
xchg
shrl
in
push
adc
inc
xchg
xchg
sbb
push
sub
fs
adc
rcrb
std
jne
mov
cli
and
mov
sti
add
pop
out
mov
and
arpl
mov
cmpb
subl
cmpsl
dec
xor
xchg
pushf
repnz
mov
sub
add
add
or
mov
inc
lcall
jbe
push
cmpsl
xchg
sahf
push
jo
movsb
cmc
mov
sub
dec
cmp
jne
test
inc
leave
pushf
outsb
inc
adc
sub
je
in
and
adc
outsl
repz
xchg
sub
stos
jnp
push
cmp
mov
push
inc
pop
repnz
mov
les
fisttpll
sub
and
mov
lds
loope
and
pop
je
cmp
jle,pn
push
jecxz
leave
sbb
cmp
adc
jg
jecxz
imul
cltd
cmpsb
in
lock
call
int
cmp
pop
mov
sbb
jl
movsb
iret
data16
add
out
xor
fistps
mov
fistl
push
es
mov
icebp
inc
mov
dec
xor
out
xchg
lahf
insl
ds
inc
xchg
pop
lods
push
mov
cmp
out
push
ret
aas
jg
jns
ret
test
outsb
jnp
andl
cwtl
inc
in
push
add
mov
shll
and
iret
mov
mov
aam
or
lcall
xor
ret
mov
pop
nop
dec
into
cmpsl
mov
mov
aas
or
sbb
dec
dec
add
jecxz
mov
or
mov
cmp
adc
lret
out
mov
inc
mov
test
jns
insb
and
push
push
test
insl
sbb
aam
mov
ljmp
pusha
jmp
fldt
jl
andb
ret
add
xor
rclb
adc
fbstp
mov
mov
xchg
pop
inc
negl
mov
xor
insl
xor
cmpb
xchg
sbb
sarl
mov
or
xchg
push
loop
jne
add
mov
fidivrl
cmp
rolb
jne
mov
mov
cmp
mov
in
orb
add
dec
fdivp
rcll
mov
jnp
cmp
pop
sbb
jmp
das
xchg
stos
into
ljmp
mov
scas
cmp
stos
mov
inc
cmp
lea
lcall
cli
xchg
stc
pop
xor
loope
jbe
mov
inc
cmp
jne
addr16
call
jle
xchg
into
data16
test
dec
mull
push
outsb
jmp
ja
or
into
or
mov
aad
popa
inc
push
clc
test
fcomi
mov
jnp
fs
mov
testl
test
xchg
cs
add
pop
xchg
pusha
sbb
fdivrl
mov
xchg
mov
inc
xchg
sub
cwtl
sub
inc
das
mov
fildll
jge
jnp
movaps
out
adc
mov
adc
xlat
insl
jg
jo
jo
jns
xor
int3
out
ljmp
shlb
cltd
jbe
mov
mov
leave
sub
inc
pop
add
aad
loopne
push
push
push
adc
movsb
jp
dec
xor
mov
negb
aas
and
gs
push
mov
rolb
and
sti
mov
jecxz
lods
mov
sbb
shl
pop
sbb
pop
cwtl
pop
lods
mov
xor
lret
hlt
adc
or
arpl
ljmp
sahf
cmpsl
test
dec
mov
jbe
test
sar
cld
cs
insb
ficoml
enter
fnstsw
cmp
sahf
std
bound
pop
cmp
mov
or
ret
adc
je
cld
and
fcomps
lea
push
dec
rorl
mov
jmp
lcall
insl
push
or
cs
cmp
std
add
dec
mov
pusha
adc
mov
js
xor
or
sub
inc
shr
test
sub
cmp
ret
mov
cmp
aam
fidivrl
loopne
arpl
xor
mov
or
push
push
cmp
fnstsw
imul
push
fwait
pop
dec
and
push
shrb
fistpl
xor
or
mov
aaa
xchg
add
nop
dec
insl
xchg
test
insl
rorl
repz
mov
or
dec
pop
lods
repnz
hlt
mov
divb
int
sbb
sub
push
repnz
popa
test
mov
pop
mov
mov
push
xchg
mov
ss
mov
mov
enter
or
scas
inc
xchg
push
xor
xor
sub
mov
cwtl
xchg
rcr
inc
add
add
cmp
sbb
cs
call
jnp
push
inc
or
mov
sbb
cmp
je
adc
js
out
lcall
sbb
lahf
xor
ret
xchg
mov
pop
ret
lcall
jle
or
imulb
outsb
aad
stos
push
gs
mov
aaa
dec
and
je
shlb
and
call
les
pop
shl
lahf
fimuls
adc
hlt
jbe
fs
cmp
rcrb
dec
mov
xor
push
mov
cmc
push
pusha
test
or
or
mov
hlt
fucompp
xor
int
es
lock
sub
jns
xor
add
mov
or
or
addr16
insb
test
fnstsw
loop
sahf
mov
stos
xchg
mov
xchg
daa
pop
mov
jno
mov
mov
pusha
xchg
xchg
dec
js
jb
or
ret
inc
lds
or
xchg
cmpsb
sub
or
dec
lahf
jge
dec
sub
sub
shlb
push
scas
inc
clc
test
jle
xchg
mov
and
mov
push
rcrl
push
jecxz
outsl
mov
lods
pop
cmc
adc
andl
jb
pushf
mov
xchg
mov
rclb
roll
xor
in
setge
dec
pop
dec
inc
lret
int3
cmp
mov
fisttpl
hlt
rcrb
sub
cmpsb
pop
jo
repz
div
out
and
xchg
mov
dec
mov
mov
int3
and
or
adc
and
push
jecxz
shr
jb
push
loop
jne
pop
push
mov
mov
inc
dec
mov
dec
or
fs
push
mov
iret
and
jmp
clc
loop
out
add
stos
inc
cwtl
mov
push
sub
arpl
push
push
lds
sahf
xorb
in
repz
popf
sbb
dec
adc
add
into
je
push
mov
scas
xchg
int3
xor
ja
xchg
dec
push
ja
scas
arpl
xlat
pop
shlb
frstor
mov
push
loop
fistpll
xlat
insl
iret
mov
push
bound
in
mov
mov
and
jmp
jp
xchg
inc
ljmp
imul
sbb
fistpl
addr16
jae
in
mov
jecxz
das
in
into
jp
pop
xchg
mov
add
sub
and
jbe,pt
and
sbb
or
stos
aad
jmp
pop
out
rcrl
lds
fldl
into
test
repnz
push
pop
jne
jl
jno
adc
inc
sbb
int
adc
fidivl
and
stos
or
pop
xchg
pop
or
xchg
outsl
insl
inc
cmpsb
mov
cmp
mov
mov
jge
arpl
push
sub
pop
or
out
sahf
cmp
std
lock
inc
shll
mov
mov
lods
out
fwait
pop
push
xchg
xchg
mov
jae
outsb
test
xchg
mov
push
daa
dec
test
testb
ljmp
xchg
mov
rcrl
push
stos
push
shll
sbb
test
mulb
fnstcw
mov
xlat
gs
movsb
jle
xor
xor
sbb
shlb
jb
dec
and
aaa
outsl
icebp
in
dec
addl
push
gs
add
repz
call
xlat
stos
not
add
inc
ds
adc
sbb
or
dec
lea
adc
icebp
andb
cmp
movsb
lret
aas
loopne
je
je
jno
push
leave
and
and
mov
mov
and
pop
rol
sbb
pop
xchg
call
xchg
fcmovnb
push
incb
mov
test
ret
mov
idivb
in
mov
or
lods
inc
push
or
rcl
inc
sub
jns
in
mov
movsb
add
sbb
adc
aad
pop
inc
inc
sub
popa
inc
fwait
or
mov
xor
pop
cmp
pop
or
jno
cltd
sbb
call
icebp
adc
mov
fwait
mov
popa
fnstsw
aam
xor
xor
jae
lds
lods
stos
cltd
fsubl
shl
clc
xor
aaa
cmc
sbb
xchg
call
xchg
sbb
pop
xor
add
icebp
retw
xor
repnz
dec
mov
and
xchg
add
movsl
sbb
ss
cld
arpl
and
sbb
and
ljmp
leave
xchg
or
dec
xor
fwait
lret
enter
repz
adc
call
sub
out
fsub
or
test
dec
cmpsl
lock
fdivrl
pusha
mov
dec
hlt
cltd
and
cmovge
cmp
arpl
popa
dec
cmpsl
and
and
adc
jne
subb
dec
and
cwtl
jbe
js
mov
lock
mov
add
jns
pop
push
mov
divl
mov
mov
test
in
cmp
lret
mov
ficompl
add
sbb
fwait
cmp
inc
out
fisttpl
fisubs
popf
call
dec
xchg
sub
sbb
mov
icebp
insb
das
cmc
xchg
ret
negl
sub
orb
gs
inc
dec
jmp
and
lock
mov
les
lahf
push
jbe
in
sarl
and
mov
jno
stos
and
mov
test
mov
inc
and
mov
out
xchg
sub
jmp
lahf
loopne
push
adc
aas
mov
inc
dec
mov
mov
sub
rcr
cs
mov
scas
mov
scas
sbb
inc
push
inc
aaa
fstl
or
cmp
lcall
fisubrl
jl
pop
hlt
mov
loop
jecxz
lcall
addl
cwtl
cwtl
repz
arpl
leave
cmp
xchg
sub
xchg
mov
cmpsb
lret
inc
dec
mov
sub
add
pop
adc
nop
ret
scas
cmp
add
ret
fistl
imulb
adc
xor
cltd
cmp
jmp
add
inc
cs
loop
ds
cmc
clc
xor
push
sbb
sub
cwtl
inc
rcr
jbe,pn
imul
lods
ds
mov
adc
jae
scas
repnz
aam
xchg
mov
cmp
sub
iret
pop
cmp
in
loope
and
push
int3
jmp
cmp
or
pop
xchg
xchg
dec
dec
insl
leave
inc
push
in
xchg
mov
sbb
jg
imul
and
sbb
jmp
pop
inc
or
loop
in
mov
stc
mov
addr16
fsub
mov
dec
mov
aad
jb
jecxz
mov
mov
loope
mov
stos
adc
mov
sub
xchg
sti
sti
in
addb
andb
fldt
dec
mov
sbb
cmp
jmp
aas
inc
pop
pop
push
cmp
sub
jns
mov
add
mov
movsl
push
imul
add
in
mov
in
pushf
aad
cmp
insl
adc
movsl
and
je
jmp
movd
or
xor
insb
ds
pop
cmp
test
filds
mov
mov
cltd
inc
sbb
out
or
test
in
cs
push
nop
mov
mov
sub
pop
sub
push
mov
mov
mov
test
adc
jae
add
arpl
mov
mov
loop
cltd
bound
cmp
push
and
sahf
jne
jp
cmc
cmc
fbld
data16
inc
mov
dec
roll
btc
rorb
inc
cltd
andl
xor
mov
enter
mulb
jecxz
dec
movsl
adc
pop
in
into
xor
cmp
dec
ljmp
in
popf
pop
imul
push
gs
call
sub
rolb
mov
stos
cltd
das
push
outsl
push
cld
insl
pop
lahf
dec
xor
sbb
mov
mov
mov
popa
push
inc
repz
pop
push
out
stc
lret
jae
mov
shll
jnp
push
add
lods
xchg
nop
cmc
adc
jae
jbe
jns
pop
out
or
xor
inc
or
dec
inc
arpl
lea
subl
shl
or
insl
xchg
arpl
leave
jl
pop
sbb
nop
cmp
pushl
daa
fsts
dec
pushf
scas
data16
jno
insl
out
dec
jp
call
add
aad
sub
xor
daa
push
inc
mov
popa
dec
loop
into
shrl
js
call
mov
loopne
int
mov
or
push
loopne
andb
cmp
pop
cltd
add
xlat
dec
hlt
stos
or
jb
lds
arpl
pop
inc
mov
pop
xor
imul
das
shrl
adc
or
rcrl
cmp
xchg
push
mov
inc
push
ds
dec
mov
test
rorl
jg
fsubr
push
mov
push
rcll
insl
mov
data16
jmp
push
pop
or
mov
mov
adc
dec
repnz
lods
movsb
pop
cmp
or
movsb
icebp
aaa
jno
outsb
adcb
out
and
jp
xor
xchg
cmp
jmp
sub
cmp
div
jo
xchg
es
in
adc
ret
push
push
sbb
push
pop
rorl
push
jecxz
loope
outsb
lds
jle
popf
dec
cmp
out
movsl
mov
push
lods
mov
xchg
or
in
mov
out
adc
test
adc
dec
mov
adc
and
jge
or
or
pop
fdivrl
xor
mov
cmp
aas
jo
sub
jo
in
mov
adcb
sub
int
mov
pushf
cmp
mov
inc
pop
push
adc
lea
dec
enter
aad
in
adc
in
daa
mov
push
popa
hlt
inc
sbb
pop
pusha
xor
dec
cmp
cltd
icebp
lods
lods
ss
mov
inc
lret
sahf
out
jae
nop
jg
into
xchg
mov
pop
xchg
pop
cmp
add
mov
and
outsl
sbb
jmp
popf
mov
scas
ja
imul
movsb
sarb
and
loop
clc
and
push
movsl
pop
add
daa
sti
int3
inc
ret
add
or
or
xor
sbb
jbe
mov
sbb
imul
mov
stos
rorl
lret
cltd
icebp
sub
addr16
xlat
hlt
inc
mov
mov
and
inc
jle
and
push
in
push
add
pop
bound
loopne
dec
or
dec
dec
fidivs
add
loopne
fwait
rclb
imull
inc
leave
aam
pop
push
xor
in
fstpt
mov
dec
ja
sbb
jge
sub
scas
loope
mov
movsl
in
cmc
cmp
mov
iret
cmc
mov
and
lods
jecxz
bound
xchg
cs
cmpsb
les
push
aad
xchg
push
adc
mov
das
xchg
sbb
insb
out
inc
sbb
int
xlat
test
clc
aam
loopne
mov
adc
sub
push
mov
xchg
bound
testl
aas
icebp
sbb
pushf
loopne
loopne
std
inc
push
push
dec
inc
fnstenv
cli
xchg
mov
dec
jl
sbb
and
inc
mov
jge
mov
sub
sub
push
les
fldcw
popf
jmp
ret
adc
negb
sbb
popf
mov
icebp
and
fwait
call
outsb
sbb
or
sbb
mov
xchg
dec
and
sub
js
out
je
cs
enter
pop
inc
sti
mov
setbe
or
mov
sub
adc
add
fstps
cwtl
mov
cmpsb
scas
and
xchg
int3
repz
imul
sub
and
aad
fcmovnu
adc
pop
movsl
xchg
fwait
push
aam
mov
or
out
stc
into
neg
xor
gs
jle
imull
je
inc
mov
jmp
aad
loop
pop
dec
xlat
xchg
fwait
mov
add
push
imul
sbb
adc
je
daa
mov
lcall
mov
jns
adcl
stc
loop
cli
xor
jo
mov
mov
mov
xor
push
cmpl
sub
sbbl
imul
jle
adc
dec
adc
sub
imul
dec
mov
sbb
ja
adc
mov
mov
loopne
push
test
scas
dec
inc
or
push
xchg
jo
shll
ret
inc
inc
pop
lock
jo
rcrl
and
xchg
aaa
imul
aad
sub
into
adc
sub
add
lcall
rcrb
dec
loope
int
cmp
jbe
fstps
repnz
jb
clc
pushf
out
fucomi
mov
pop
ret
and
add
sti
repnz
fistl
orl
push
pusha
js
movsl
out
insl
xchg
sub
packssdw
fldcw
loop
mov
jno
inc
adc
in
jnp
insl
and
xor
repnz
mov
int3
xor
mov
mov
mov
sbb
cli
jp
test
data16
sbb
fsubrs
movsb
fnstsw
push
push
adc
adc
xchg
into
test
and
es
out
filds
test
xchg
mov
or
push
imul
and
pop
lods
fildl
mov
jne
pusha
adc
aas
jmp
repnz
cltd
into
imul
jb
mov
jns
or
arpl
stc
mov
fisubrs
inc
aas
lock
mov
vcmpps
sbb
jecxz
jmp
ret
dec
pop
jg
pop
inc
or
insb
sbb
sbb
inc
jmp
das
aaa
fwait
dec
fcmovnu
or
fwait
aas
fadds
jge
cmp
sbb
das
adc
stc
out
out
push
and
xchg
out
ret
jns
aam
movsb
mov
dec
jno
or
adc
pop
int
mov
adc
mov
mov
adc
sahf
push
jnp
ret
xor
and
popa
xchg
stc
stc
pop
pop
xor
mov
fstpt
cmpsb
fisttpll
jmp
jno
adcl
les
pop
int
das
pop
fdivrl
leave
loopne
iret
outsl
stc
popa
fildll
popf
fnstsw
sub
scas
add
insb
call
out
lret
cmp
insl
dec
aam
or
xchg
out
mov
dec
shll
cmpsl
movsl
pop
add
sub
fbld
in
push
cwtl
lock
push
push
cli
cmpsb
dec
or
test
rcrl
push
add
xchg
jl
aaa
cld
call
xchg
inc
adc
nop
inc
frstor
cltd
out
frstor
xchg
repnz
cmp
adc
jmp
xchg
cmc
int
int3
fwait
and
push
add
mov
xor
xchg
ds
shll
cmc
push
outsl
lock
dec
outsl
imull
mov
xor
jns
mov
shll
cmp
std
jo
je
sub
fistps
enter
adc
cmp
stc
sub
js
or
mov
dec
and
add
ret
dec
or
das
movsl
adc
sub
in
enter
jl
jne
sbb
aad
fstps
lea
mov
lret
push
stos
xor
push
add
and
hlt
faddl
lock
xchg
add
adc
repnz
into
cmp
inc
pushf
xchg
add
push
lret
pop
bound
jmp
jge
dec
mov
dec
inc
mov
das
stc
cmp
mov
fiaddl
orb
shrb
pop
andb
aaa
in
and
adc
jnp
andl
sub
js
xchg
mov
sbb
movsl
mov
ja
lret
rorb
pop
cmp
call
xchg
mov
in
jmp
inc
test
mov
adc
sbb
jl
mov
mov
pusha
xlat
bound
addr16
mov
dec
divb
pop
mov
popa
repz
enter
mov
nop
pushf
dec
out
mov
xchg
xchg
jecxz
cmp
xchg
rolb
cmpsb
mov
add
jecxz
adc
sbb
xor
addr16
fstps
pop
pop
xchg
cmpl
sub
inc
dec
xchg
test
icebp
or
xorb
xorb
icebp
pop
dec
push
pop
jae
in
daa
or
das
lret
outsb
out
sub
jo
mov
mov
loope
adc
pop
hlt
or
jg
clc
inc
insb
cmp
adc
ret
mov
enter
xor
mov
mov
cld
add
mov
into
cmpxchg
cmp
test
mov
sbb
fwait
inc
dec
mov
cli
bound
xchg
sbb
mov
sar
mov
pop
mov
fwait
scas
fadd
push
push
test
jl
lret
into
adc
add
cmp
popa
push
jns
scas
dec
fdiv
mov
mov
mov
push
cld
sti
lock
and
jle
sub
mov
adc
jb
push
mov
lods
xor
incb
add
jno
test
gs
mov
cli
call
stos
cs
es
push
cmp
in
dec
cs
test
jg
pop
mov
in
dec
int3
dec
inc
pop
inc
xchg
popf
jo
dec
xchg
xchg
lods
mov
mov
sbb
push
sub
inc
leave
ljmp
lds
sub
repnz
sbb
sub
int
out
adc
sbb
xor
mov
dec
jle
or
add
adc
mov
int3
and
test
mov
mov
pop
cmp
icebp
lods
aas
jg
push
adc
and
hlt
fstpl
sti
xchg
cld
out
sti
fstpt
push
mov
jp
pop
lods
shll
lods
pop
sub
push
cmp
lret
icebp
rcrl
scas
push
dec
fdivp
xchg
inc
loopne
xchg
sti
arpl
ds
test
sarb
sbb
jecxz
push
int
loopne
or
mov
mov
fildll
aas
fnsave
les
pop
mov
js
shlb
mov
dec
inc
leave
ja
dec
cmpsl
imul
orl
arpl
push
int3
ror
xchg
xchg
shll
cmp
adc
cs
int
or
ret
inc
xchg
sbb
out
jl
cmp
adc
outsb
xor
insb
ja
stos
push
add
cld
icebp
cmp
scas
or
add
roll
jae
cmpl
cmpsl
pop
or
out
lods
jmp
stos
repnz
xchg
or
out
mov
rol
sbb
cmp
test
pop
xor
ficompl
sti
iret
fwait
cltd
movsb
arpl
lret
ss
dec
add
or
jle
in
sbb
dec
pop
sub
sub
jg
xor
andl
jae
mov
cli
popf
sbb
mov
out
addr16
inc
out
movsl
repz
shll
ret
or
mov
orl
insl
pop
add
lret
mov
xchg
or
push
push
push
test
fstpt
cmpsl
add
jmp
cmovl
insl
xor
xchg
push
sub
mov
xor
or
ja
dec
call
fidivl
cli
adc
adc
cmc
xor
cmp
mov
in
pop
xchg
aaa
outsb
push
pop
testl
mov
sub
js
ret
pop
adc
repz
pop
mov
rcrl
inc
pushf
insl
mov
dec
mov
lds
imul
loop
int3
scas
inc
adc
dec
roll
inc
push
lcall
sbb
cltd
insb
icebp
ljmp
ss
pop
jmp
scas
adc
push
cld
mov
icebp
xor
gs
js
loopne
cmp
in
lods
sub
and
and
ljmp
ljmp
xchg
bound
sbb
mov
push
mov
lods
pop
loope
js
dec
in
sub
imul
push
ret
mov
lcall
xor
aas
add
adc
push
ja
jge
adc
pop
inc
pop
mov
pushf
loope
sti
xchg
mov
adc
mov
sub
push
jae
mov
popf
leave
cld
out
popw
and
leave
aam
push
notb
sbb
fwait
lea
pop
jne
imul
arpl
popa
and
cmc
adc
hlt
leavew
pop
js
pop
nop
sub
xchg
mov
sub
or
pushf
out
mov
pop
into
or
mov
imul
xchg
ss
sub
cmpb
and
or
pop
ret
xchg
sbb
mov
sbb
dec
pop
inc
repz
xchg
call
pop
cmp
out
push
sub
inc
pop
jne
sub
into
pop
out
sub
jb
adc
outsb
push
lret
daa
loop
daa
adc
popf
cmc
and
mov
xor
addl
test
lea
adcb
bound
es
push
dec
dec
push
out
xor
fisubs
rcrl
sbb
lea
dec
aad
adc
cmc
notb
xor
out
std
lahf
pop
leave
loope
je
or
loope
stos
xor
mov
inc
mov
xchg
sub
mulb
into
in
ret
add
subb
add
iret
out
adc
aas
sbb
int
les
jae
ljmp
fimuls
fisttps
fmul
mov
into
cmp
outsl
push
lods
xlat
cmp
movsb
xor
or
and
pop
adc
nop
dec
out
cmp
adc
and
ss
sub
or
jg
adc
jmp
hlt
mov
inc
nop
or
lcall
xor
arpl
add
nop
repz
push
inc
adc
into
mov
pushf
mov
idivl
push
xor
dec
sub
lods
loopne
gs
scas
and
pop
insl
cmp
js
xor
xchg
in
dec
mov
push
cmpb
pop
sbb
movsb
mov
mov
jne
gs
jo
jo
out
stos
filds
js
frstor
sub
imul
loopne
fsubrs
cmp
mov
rcll
lods
lods
xor
sbb
nop
ret
or
cmpsb
xorl
push
and
lahf
xchg
mov
inc
lret
and
mov
cltd
jge
or
imul
stos
mov
std
push
xor
daa
aam
divb
test
and
pop
lret
subl
fimuls
jp
push
jo
jno
shll
jge
pop
std
adc
push
mov
add
cs
loop
in
movsb
sub
aaa
and
or
sub
es
add
add
shll
and
arpl
jge
sti
jbe
pop
cwtl
pop
mov
xor
sar
add
lods
outsl
cmpb
adc
flds
mov
xor
cld
lahf
mov
and
push
xor
rcrb
push
insl
popf
adc
lret
push
pop
sub
shll
jb
mov
int3
cmp
pop
sbb
jg
testb
scas
push
jne
shl
popa
sbb
cmp
mov
xchg
add
xchg
jecxz
test
in
add
mov
iret
jmp
in
fildll
dec
loop
insb
lock
movl
loop,pt
push
inc
vpmulhuw
int3
cmp
out
xchg
out
in
icebp
mov
add
rcl
inc
ret
test
addr16
pop
mov
stos
dec
ret
repz
lods
sbb
imul
int3
mov
inc
push
stos
movsb
add
lret
call
mov
xchg
out
push
stos
push
pop
dec
subl
shrb
fstl
pushf
arpl
xchg
adc
jp
lods
loop
shlb
aaa
push
daa
jecxz
shl
adc
xor
aam
sbb
mov
cmovae
ret
cld
add
dec
push
jp
stos
scas
pop
das
mov
jg
cmpsl
mov
mov
out
pop
out
in
xchg
sub
pop
jecxz
out
jo
mov
gs
mov
out
mov
xor
repnz
adc
mov
das
dec
pop
bnd
cmp
pop
ficoml
xchg
dec
pusha
xchg
xchg
lds
leave
imul
loop
fcomps
jge
in
addb
or
cvtdq2ps
xor
sub
bound
pop
scas
test
in
mov
adc
call
test
cmp
mov
imul
lahf
subb
or
push
idiv
or
or
jo
pop
and
shrl
ds
push
jle
into
leave
xlat
cmp
jb
loope
mov
lret
xor
cmp
shl
or
mov
or
add
and
outsb
cmp
sbb
mov
sbb
lods
mov
ljmp
cmc
lret
or
aam
pop
mov
and
cmp
mov
movsl
cmpsl
xchg
jnp
call
decb
xchg
cmp
sub
das
imul
mov
iret
jecxz
add
mov
out
pop
xor
and
pop
pop
adc
nop
push
and
xlat
pushf
daa
push
sahf
adc
xor
jae
test
cmp
push
or
cmp
ret
jae
xchg
jne
imul
dec
loopne
inc
dec
dec
out
mov
push
mov
int
jl
fs
push
pop
repnz
mov
jle
pop
sub
sub
mov
fcmovu
stc
fwait
dec
push
jg
bound
out
test
cld
enter
std
fldl
add
jnp
inc
call
test
add
add
mov
loop
push
lcall
jae
sbb
xchg
push
and
sbb
push
pop
sbb
fstps
fcomi
in
mov
xor
xchg
out
inc
clc
or
cwtl
xor
pop
pop
pop
mov
mov
push
inc
fsub
xor
push
jb,pn
je
inc
sbb
xchg
or
rclb
jbe
xchg
add
cs
inc
lea
adc
into
push
movsl
jno
mov
and
or
inc
push
mov
adc
in
or
ja
add
mov
cmpsb
movsl
cld
and
pop
add
pop
or
sub
shll
lock
test
push
and
in
out
pop
test
shll
sbb
add
mov
mov
lret
jecxz
les
xor
add
sbb
int
mov
push
xor
insb
pop
add
cmp
lods
test
xor
cmp
lea
mov
xchg
pop
mov
xchg
jns
popf
xlat
push
jne
fisttpll
push
push
pop
inc
outsb
test
cmp
jmp
dec
or
push
lret
sub
scas
repz
test
fstps
mov
add
in
rol
cmp
jns
std
jp
inc
int3
test
jb
dec
ja
in
push
sub
mov
loope
lock
pusha
sub
lcall
sbb
or
mov
pop
ret
jbe
arpl
push
iret
mov
mov
add
push
outsb
xchg
xor
lahf
test
xchg
mov
push
dec
mov
fistl
inc
cwtl
ja
or
pop
xchg
shll
ret
insl
mov
or
nop
push
rclb
add
fdivl
out
fstpl
pop
or
cmp
cmp
hlt
into
mov
cs
sub
pop
mov
rolb
push
xchg
mov
aaa
subb
mov
dec
cmp
lret
test
or
mov
sti
sbb
pop
push
pusha
jb
pop
sbb
jno
clc
sub
jne
add
out
and
xor
xchg
addr16
and
aas
ret
cmp
dec
lock
mov
mov
iret
xchg
movsb
int3
out
mov
es
lret
cwtl
in
daa
cmp
pop
jnp
rol
addl
add
outsb
cmp
mov
mov
cmpsl
das
aas
mov
arpl
inc
scas
shl
repnz
loopne
inc
repz
pop
jmp
mov
xor
ljmp
xor
lahf
cmp
shl
jno
jge
dec
stos
aas
ret
hlt
fsubrl
lret
cli
std
cmp
data16
lcall
into
mov
dec
inc
sbb
lret
addr16
mov
inc
mov
andl
push
fwait
es
test
daa
imul
xchg
pop
mov
cmp
repz
insb
dec
xchg
dec
lds
and
mov
sbb
out
pop
pop
es
sahf
mov
xor
icebp
mov
scas
in
stos
dec
insb
sti
mov
mov
leave
addr16
das
xorb
iret
in
push
jns
push
jns
aaa
into
add
sbb
dec
arpl
sub
loopne
std
enter
sbb
inc
pop
push
or
jge
dec
mov
cld
push
dec
pushf
les
adc
jb
xchg
cmpsb
dec
mov
out
mov
cld
sub
add
imul
jb
mov
and
out
enter
xlat
pop
inc
cli
xorl
jle
pop
pop
daa
jl
int
lock
out
fbstp
lret
xchg
fs
xchg
cwtl
jnp
lret
mov
ret
mov
pop
xor
add
push
pusha
sarl
ret
lds
test
mov
adc
dec
or
push
int3
mov
mov
lret
out
rcl
xor
pop
repz
bound
repz
rcl
cltd
ja
cmpb
push
xchg
inc
iret
pop
mov
sqrtps
dec
jecxz
fiadds
leave
bound
dec
jbe
call
in
dec
adc
push
xor
mov
ret
adc
sbb
mov
adc
out
pop
push
movsl
pushf
mov
icebp
ret
iret
repz
loope
faddl
inc
xlat
loope
int3
fwait
pushf
outsb
fwait
adc
push
xchg
adc
add
sbb
fiadds
pop
scas
lret
xlat
and
mov
lret
xchg
inc
stc
jbe
mov
xchg
cmpl
mov
icebp
mov
std
je
in
mov
mov
out
loopne
xchg
outsb
sahf
js
add
incb
call
inc
pushl
mov
das
cmp
inc
jne
dec
adc
cs
adc
mov
push
leave
lds
dec
push
or
and
cmp
add
sbb
xor
adc
xchg
in
es
sbb
sub
sbb
inc
adc
push
sbb
mov
stos
repnz
nop
arpl
mov
addr16
adc
inc
or
lahf
add
jbe
fwait
xor
add
in
mov
mov
pop
inc
cmc
add
iret
jb
push
pop
adc
dec
insb
inc
aam
nop
lods
or
push
dec
jg
mov
ret
shlb
mov
movsl
mov
pop
movsl
mov
cmp
mov
sbb
push
pop
test
xchg
sbb
insl
add
pop
dec
xor
test
jns
jno
loop
nop
in
mov
shl
fimull
ficomps
aaa
inc
inc
dec
sub
andl
cmp
pop
and
mov
xchg
pop
inc
and
jge
xchg
leave
inc
test
sti
jl
push
outsb
stc
push
mov
ss
in
jno
jne
and
or
jno
jae
lock
es
jl
push
loope
pusha
pop
mov
fwait
pusha
jp
pop
js
fidivrl
sub
and
aam
or
test
mov
adc
dec
icebp
mov
jge,pt
jns
bswap
adc
inc
int3
fidivrl
or
aas
cmp
dec
sbb
jge
and
adc
push
xchg
clc
mov
and
nop
pushf
mov
add
jge
inc
mov
mov
mov
xchg
dec
dec
fcomps
push
sub
repz
iret
xchg
loop
push
lret
add
dec
pop
lcall
xchg
lods
add
jg
adc
xchg
hlt
ljmp
xor
xor
lcall
mov
scas
fs
jg
adc
xor
xor
push
cmpl
jg
out
lds
popf
xor
dec
test
sbb
cmp
mov
lcall
push
mov
mov
aaa
std
cmp
xor
push
imul
push
ficompl
cltd
and
sbb
cmp
icebp
int3
adc
incl
inc
add
jno
js
call
xchg
and
xorb
ret
add
inc
nop
xor
inc
iret
inc
and
in
aam
in
pop
ret
es
pop
gs
pushf
inc
in
loope
mov
mov
andb
cmpsb
lret
dec
imul
fnstsw
insl
hlt
inc
cld
adc
xchg
inc
mov
andl
pop
xor
fsts
xlat
sub
push
and
aas
loopne
sub
cmp
sub
dec
loop
idiv
lahf
or
loopne
clc
ret
shlb
cmp
add
rclb
pop
ds
sbb
xor
std
jnp
dec
inc
jmp
add
xchg
cmp
ljmp
pop
int
lahf
ret
rcrl
xchg
mov
inc
dec
pop
out
aaa
fsubs
addl
jbe
jnp
shll
mov
add
cmp
into
leave
sub
test
mov
adc
lahf
popf
cmp
adc
cmp
push
xchg
in
ljmp
jo
or
pop
loop
aad
out
cmp
and
adc
iret
fmuls
jo
loope
push
push
inc
es
ljmp
jne
lock
pop
jge
ljmp
movsl
and
mov
sbb
mov
into
mov
sti
xchg
test
fstpl
test
xor
or
shrl
inc
and
outsl
cmp
je
adc
das
xor
inc
cli
and
sti
les
mov
dec
fldl2t
dec
xor
push
pop
mov
mov
dec
fs
mov
ljmp
jmp
xlat
dec
xor
mov
push
imul
mov
sub
sub
mov
jmp
xchg
mov
push
or
aam
inc
jmp
inc
cld
loope
sbbl
rcrb
out
rcrb
insb
mov
aad
insb
sbb
pop
pop
icebp
push
lret
int3
aam
xchg
aaa
push
pop
out
push
mov
sub
test
sbb
xorb
sbb
hlt
push
lock
jne
add
out
mov
mov
sbb
outsl
jge
fmulp
cmp
jecxz
cmp
sub
inc
cmpsb
out
jnp
mov
pop
sub
imul
clc
sbb
pop
cli
mov
repnz
inc
movsb
push
pop
in
imul
pop
and
push
ljmp
mov
roll
filds
mov
push
bound
int3
add
movsb
das
in
xor
stos
xchg
pop
lahf
loop
mov
and
push
mov
sbb
data16
stos
xchg
push
jle
lret
jecxz
in
rcrb
pop
mov
out
dec
mov
cmpsl
mov
loop
push
mov
imul
imul
jp
push
in
pushf
sub
and
scas
sahf
in
ds
mov
and
add
aaa
sbb
mov
and
xor
lods
js
cmp
dec
test
std
int
xchg
pop
enter
xor
xchg
in
add
mov
jmp
lock
lahf
sbb
scas
jge
shlb
mov
adc
xchg
int3
jne
aaa
mov
ss
fmull
mov
scas
pop
sbb
mov
ret
xchg
lea
leave
jmp
sbb
xor
push
sub
jns
into
and
pop
inc
pop
arpl
adc
dec
inc
cli
cmp
popa
mov
xlat
sbb
shlb
inc
pushf
mov
push
test
sti
pushf
and
push
xor
iret
in
addb
ret
je
and
jecxz
scas
mov
ljmp
hlt
jae
adc
inc
jns
cmp
loop
ja
push
pushf
dec
scas
mov
or
xchg
sti
sbb
loop
mov
and
dec
push
insb
in
sbb
xor
ja
stc
pop
pcmpgtd
xchg
jbe
cmp
pop
push
lock
lods
gs
and
fists
pop
popf
sub
test
pusha
mov
jnp
pushf
stos
dec
dec
push
pop
jmp
out
adc
ficoml
nop
jae
pop
mov
sbb
adc
lds
out
outsb
jecxz
inc
dec
and
addb
aaa
mov
data16
scas
mov
pop
adc
mov
sub
lea
cmpsl
push
pop
jbe
in
or
inc
dec
out
mov
xorl
int
movsl
fcomi
xor
jne
test
pop
shld
fwait
nop
mov
addr16
ss
int
mov
mov
mov
mov
jmp
and
inc
xchg
ljmpw
sahf
aad
movsb
mov
mov
pushf
pop
xor
insb
and
mov
test
sbb
js
cmp
or
ret
cmpsl
push
in
imul
pop
push
lret
push
into
arpl
mov
sub
dec
loop
mov
ret
dec
pop
jb
nop
cmp
cwtl
rcrb
repz
xor
stos
sbb
dec
notb
outsl
pop
fstpl
mov
pop
loopne
xor
mov
mov
les
xchg
icebp
sbb
pop
arpl
aad
pop
ret
cmp
sbb
ds
cmpsl
inc
push
ds
adc
fidivrs
fwait
std
dec
xor
outsl
cltd
sbb
xlat
ds
mov
xchg
lods
aas
mov
out
movsb
ficoms
mov
out
dec
das
push
and
popf
ret
bound
mov
add
scas
scas
ds
aas
fmul
xchg
xchg
loope
les
cmp
mov
xchg
mul
cld
push
hlt
iret
push
mov
pop
mov
es
fidivl
mov
pop
mov
mov
xchg
outsl
lea
inc
mov
pcmpeqw
mov
call
in
sub
es
out
jl
clc
ret
pop
and
sub
xchg
into
dec
subl
fstpt
cwtl
cmpsl
ret
mov
dec
pop
loope
dec
jl
and
and
lret
sub
xor
lahf
inc
cmp
in
imul
bound
xchg
sidtl
pop
lcall
int
dec
les
add
and
mov
cmp
aas
les
test
bound
cld
test
xchg
mov
dec
out
ret
jp
adc
inc
insb
lcall
mov
adc
or
cmc
and
or
rcll
loopne
insl
fwait
jg
ss
sub
test
imul
rolb
dec
xchg
in
and
daa
mov
dec
pop
push
dec
jmp
cmpsb
sbbl
mov
dec
dec
pop
xchg
xchg
out
mov
mov
daa
adc
pop
and
nop
and
dec
jns
mov
mov
xchg
mov
and
and
enter
mov
jbe
test
inc
cs
inc
int3
mov
dec
clc
add
cli
loope
loope
xchg
out
shlb
pushf
fldcw
pusha
test
and
mov
icebp
lock
push
xor
and
adc
call
inc
fdivrs
mov
pop
add
xor
enter
pop
adc
pop
es
push
mov
test
mov
push
cltd
adcl
sub
jp
rcrb
push
test
xor
in
adc
out
lods
cltd
cmc
paddsw
pop
xor
push
pop
jle
aad
stos
sbb
lret
or
mov
xor
addl
jp
jne
mov
ljmp
cltd
sbb
cmp
inc
dec
fidivrl
pop
xchg
adc
xor
aas
mov
es
ljmp
gs
jge
mov
ds
stos
repnz
lock
adc
ret
mov
dec
mov
in
lds
ja
mov
test
xchg
jle
imul
lock
sub
and
popa
fucomi
xor
addr16
pmullw
out
fisttpll
jp
movsb
inc
decb
stc
pop
shl
pop
jecxz
int
inc
jnp
and
data16
pusha
add
jnp
out
clc
xlat
andb
lods
enter
xchg
xor
sub
push
jg
or
jnp
sub
in
push
xor
cmp
xor
cwtl
sbb
mov
pushf
mov
jecxz
jns
push
xor
push
jge
mov
aaa
jp
movsl
mov
je
mov
popf
push
fists
add
sbbl
fst
loope
hlt
mov
sbb
dec
pop
mov
loopne
or
shll
jmp
cmp
rolb
les
out
je
xchg
jl
les
fdiv
dec
in
data16
sbb
push
inc
dec
add
lds
int3
adc
ss
repz
mov
fildl
pushf
hlt
repnz
out
push
and
jecxz
sub
dec
pushf
lret
pop
out
ljmp
mov
gs
enter
lret
ret
movsb
pop
xor
and
cmp
cmc
dec
scas
outsb
cmp
lods
pusha
mov
jg
out
add
int3
scas
add
adc
inc
ret
jb
pop
jl
xor
stos
cmp
jge
xor
nop
and
mov
mov
rorb
pushf
in
movsb
sti
adc
lret
sbb
dec
jle
adc
cmp
push
je
inc
nop
jl
xor
xchg
cmp
scas
out
pop
mov
jmp
mov
ss
push
fistpl
insb
aas
mov
pop
xlat
mov
sbb
or
stos
into
push
pop
loope
xchg
movsb
les
aam
dec
fcmovbe
adc
cltd
mov
pusha
jecxz
aaa
rcrb
je
jp
mov
add
cmp
pusha
movsl
lea
aad
rol
inc
jns
hlt
mov
hlt
jno
jbe
sbb
jp
mov
inc
out
fcmovnu
fdiv
in
inc
jp
jb
cmpsb
xlat
std
or
dec
xor
nop
mov
bound
mov
inc
mov
lcall
pushf
push
insb
les
sub
lcall
mov
sbb
fwait
hlt
mov
ret
cmp
mov
cmp
inc
fmuls
cltd
inc
jge
sub
mov
ljmp
scas
addr16
mov
mov
or
jmp
out
dec
add
fidivl
cmc
rcll
mov
cli
ret
xor
add
lcall
mov
xchg
in
xchg
add
subb
pop
fistl
cli
cmpsb
lock
in
or
xor
es
jne
add
outsl
xor
outsb
adcl
add
and
stos
sub
cmp
icebp
jmp
jmp
mov
mov
outsb
je
xchg
push
fiaddl
in
jb
cwtl
fmull
sub
pusha
in
mov
scas
jo
rorl
aaa
push
and
xchg
mov
icebp
andl
adc
and
mov
add
push
or
dec
sbb
xor
sarb
sbb
xor
aad
shll
dec
clc
sarl
sbb
inc
dec
imul
xlat
dec
jmp
in
lahf
add
mov
in
je
fildll
fs
sbb
sub
insl
fs
pop
mov
mov
popf
pop
and
lods
dec
jns
mov
cmpsl
leave
std
or
popa
aas
mov
int3
xchg
sbb
pop
mov
or
hlt
inc
scas
int3
mov
cmp
movsb
mov
adc
int
hlt
or
dec
mov
fcmovne
out
jno
cmpsl
cli
xchg
xchg
je
outsl
sahf
out
sti
aas
inc
sub
mov
cmp
mov
pop
ret
sub
add
out
enter
sbb
xor
jo
outsl
or
sbb
imul
mov
and
out
cs
jbe
cs
int
aad
pop
jo
xor
or
adc
out
mov
jae
sub
fisubrs
hlt
adc
mov
and
scas
push
xor
jl
and
add
xchg
in
inc
rcr
pop
push
push
and
adc
push
dec
enter
lods
or
loope
addr16
jp
mov
pop
call
std
push
dec
xchg
xor
aam
xchg
mov
orb
inc
es
divb
dec
sahf
lock
push
mov
push
insb
adc
aad
push
loopne
or
cmp
pop
xchg
pop
sahf
adc
lret
adc
push
jo
mov
jmp
adcl
testl
or
test
pop
push
cmp
inc
je
mov
jns
out
repnz
call
cmp
stos
lret
push
mov
cmc
mov
movsb
popa
shl
xchg
stos
pop
xchg
subl
add
jmp
es
cmpsl
inc
into
pop
daa
pushf
pop
push
test
and
in
nop
or
jmp
mov
ret
pop
aaa
pop
ficoms
push
and
jbe
mov
or
sahf
ljmp
sub
shlb
push
movsb
aaa
jbe
mov
test
fcomp
sbb
dec
pop
mov
outsl
fsubrl
jno
adc
xchg
push
cmp
shlb
push
add
or
mov
loop
xor
jge
popa
out
cmc
xor
dec
fst
adc
ja
push
scas
and
int3
push
adc
stos
sbb
jp
and
mov
xor
jo
mov
frstor
jno
in
mov
outsl
add
xlat
std
sub
les
fbld
mov
loopne
push
dec
inc
add
jmp
pop
push
enter
push
dec
adc
nop
push
hlt
loopne
mov
push
or
scas
add
outsl
and
int3
add
jecxz
mov
jl
lds
adc
lret
xchg
jg
push
fistpl
leave
int
in
nop
insl
es
fisubs
xchg
xor
jmp
mov
xor
sub
mov
fs
xor
add
inc
lret
imul
je
mov
sbb
pushf
daa
sub
pop
pop
loope
loopne
jb
es
xor
cltd
scas
into
push
loop
pop
in
mov
sbb
fs
jno
or
imul
call
std
dec
jecxz
fnstsw
push
mov
xchg
mov
or
bound
out
fbstp
add
sbb
dec
ja
mov
fcomp
pushf
cmp
mov
mov
mov
popf
loope
icebp
push
or
icebp
lahf
sbb
cltd
mov
shll
aas
adc
or
xchg
sarl
xchg
outsb
push
pop
add
popa
xchg
lea
and
aam
test
mov
jno
data16
cwtl
pop
mov
push
sub
adc
sarb
mov
ret
lret
or
fsubrl
and
xchg
cmp
jno
nop
movsb
and
inc
sub
sarl
lock
pop
inc
pop
jecxz
mov
mov
nop
inc
pop
mov
lret
cmp
nop
jb
mov
xor
jns
icebp
pop
out
xorb
iret
jnp
jp
test
cwtl
andl
shlb
adcb
cmp
js
bound
iret
sbb
xor
adc
in
shll
xchg
pushf
ret
lahf
sbb
adc
pop
arpl
jl
in
jg
cmp
in
cmp
and
fs
cltd
punpcklwd
pop
and
movhps
mov
ja
repnz
outsl
xchg
lret
jne
fidivrs
push
and
ljmp
mov
adc
cmp
and
mov
repnz
xchg
cld
adc
loopne
imul
inc
push
push
or
inc
mov
mov
jbe
mov
cwtl
pop
dec
xchg
or
testb
jg
mov
xorl
in
hlt
jl
jb
push
stc
jbe
dec
dec
push
mov
cmpsl
loop
add
stos
test
icebp
push
dec
or
or
iret
add
push
test
test
movsl
mov
repnz
idivl
cli
js
xor
pop
or
mov
imul
mov
ret
xchg
inc
in
movsl
orb
test
out
jns
bound
jne
inc
pop
xchg
inc
sbb
enter
xor
xchg
pop
lahf
pop
mov
xor
in
rcrl
iret
adc
xor
sub
pop
out
fs
push
sub
mov
test
jge
dec
jecxz
inc
pushf
scas
out
shrb
nop
lods
cs
and
mov
popa
jle
sti
mov
icebp
loopne
cs
dec
pop
jnp
push
sub
mov
jecxz
in
imulb
movb
mov
jo
ror
xchg
daa
jmp
push
cmp
sub
mov
fildl
cmpsb
imul
pop
xchg
jns
ret
or
cmpsl
xor
adc
daa
pop
cmpsl
jle
and
insb
arpl
sbb
fildl
loopne
push
ret
mov
cwtl
xor
ja
sub
insl
and
cmp
loop
adc
adc
add
sarl
inc
daa
arpl
lcall
pop
and
mov
jmp
out
in
aas
xor
push
push
push
push
inc
adc
std
cmp
xchg
leave
fwait
pop
inc
sub
or
icebp
cmp
add
cmpsl
orl
rcll
test
insb
dec
jo
mov
outsb
ud1
cltd
stc
idiv
out
int
inc
in
sbb
inc
test
sub
and
xchg
jno
xor
iret
add
leave
xor
push
int3
leave
inc
pop
emms
in
shll
mov
cltd
cmp
ds
xor
int
sub
lods
loope
mov
dec
dec
mov
adcl
in
mov
mov
stos
cmpb
push
mov
mov
out
cmp
shlb
repz
stos
out
mov
or
inc
cs
int3
movb
pop
rol
dec
add
bswap
bound
in
mov
cmp
arpl
or
mov
cld
insl
in
mov
fsubl
movsl
dec
fs
sbb
int3
adc
ficoms
popa
mov
fisttpll
scas
push
loopne
inc
mov
and
fmul
daa
shll
js
xchg
mov
pusha
dec
pop
hlt
and
nop
push
je
sbb
mov
es
push
xor
repz
bound
sti
jecxz
sub
mov
add
mov
cmp
daa
xlat
loop
and
clc
loope
das
adc
pop
add
jns
inc
lret
jle
xchg
mov
mov
outsb
dec
outsl
mov
sbb
jo
adc
fsubrl
jne
and
loop
enter
and
fistpll
ud1
or
adc
jge
in
push
add
mov
fld
iret
shll
push
mov
mull
push
mov
add
sub
pop
in
push
loope
fistpl
into
stc
mov
test
fnstenv
xchg
fwait
pop
push
andb
push
push
mov
and
cmp
int3
aaa
cmpl
fnsave
mov
rorl
mov
ret
mov
ss
push
daa
jbe
das
pusha
mov
cmpsl
imul
add
lds
xlat
and
or
or
push
ja
or
mov
fistps
lea
out
jno
inc
jnp
outsl
xor
adcb
jbe
push
je
inc
fcompl
add
incb
int3
mov
cmp
push
or
imul
outsl
lock
movsl
and
loopne
in
movsl
aam
filds
pop
adc
arpl
insl
and
pop
icebp
arpl
bound
sub
push
push
or
sbb
mov
ret
push
testl
adc
addr16
mov
or
pusha
scas
mov
pop
je
ficoms
pop
fstpt
ret
in
nop
mov
adc
int3
sbb
imul
test
call
stc
mov
jb
or
push
cmc
sub
xor
pop
pop
lret
add
xor
sub
ljmp
jp
jnp
ret
or
clc
sub
jle
pop
cmpb
pushf
xor
jmp
movsb
or
mov
addr16
inc
lea
icebp
jmp
add
subl
nop
ljmp
jg
add
push
loope
mov
mov
fs
test
rcrl
mov
xchg
rcr
test
mov
sbb
cld
pushf
mov
jmp
mov
pushf
push
hlt
mov
test
jp
add
out
int
mov
lahf
push
inc
jno
mov
daa
mov
ss
jmp
sub
sbb
loop
mov
aad
fstl
sti
cli
ljmp
movsb
adcb
jl
dec
stc
cmpsl
push
dec
push
pusha
lret
hlt
sbb
arpl
xchg
xchg
mov
mov
call
or
lds
xchg
fsubrs
call
mov
popa
dec
pop
jns
nop
ret
xor
xchg
and
leave
xchg
mov
dec
lods
inc
cmp
icebp
pop
imul
pop
fisubrs
out
pusha
pop
nop
inc
adc
jmp
cmp
mov
dec
out
scas
xchg
cmp
cmp
dec
jp
adc
js
popf
jmp
jl
outsb
adc
out
mov
into
data16
jl
sub
icebp
clc
mov
push
sbbl
xchg
into
mov
lods
and
pop
adc
call
int3
repnz
xlat
mov
adc
call
and
sarl
pushf
fisttps
inc
push
mov
addb
js
imul
sub
arpl
roll
sub
adc
mov
aad
sbb
cmp
dec
std
pop
mov
je
ds
int3
mov
cmp
mov
inc
push
decb
fcoml
fwait
mov
fcoms
fmull
movsb
cwtl
cmpsb
mov
in
inc
add
mov
psubw
gs
and
into
fwait
nop
mov
pop
dec
mov
sbb
push
jo
movsb
pop
out
inc
mov
mov
mov
test
ficoms
inc
and
jge
int3
push
jle
sub
sarb
cmp
cmpsb
loop
imul
xor
cld
pusha
aas
stc
clc
and
andb
pop
into
dec
jecxz
clc
mov
push
out
add
jge
jecxz
sub
mov
gs
test
pop
rcr
pop
ja
mov
cmp
jae
gs
iret
xor
arpl
mov
outsb
fiadds
or
cmp
inc
jne
cmp
cmp
cmpsl
sahf
sti
repz
jp
sbb
jne
jb
outsl
and
mov
inc
mov
and
fidivrl
or
shrb
jb
mov
into
stos
stos
scas
jp
mov
push
lahf
mov
shll
ja
mov
jmp
pushf
jp
or
fs
data16
mov
jbe
sbb
repnz
mov
sbb
imulb
sahf
xor
loopne
insb
fimull
call
mov
shrb
aaa
jg
pop
or
dec
push
scas
test
pusha
sbb
mov
add
jge
mov
ja
std
mov
and
fmul
pop
call
mov
jne
loope
mov
mov
push
scas
roll
ja
adc
movsb
sbb
push
cmp
mov
jp
mov
and
faddp
fwait
inc
jmp
pop
pop
in
enter
or
inc
xor
iret
xchg
xchg
js
push
cmp
test
jb
push
mov
sbb
mov
data16
popa
nop
pop
push
sbb
sub
inc
fcoml
jno
mov
inc
cmp
je
movsb
and
leave
je
scas
pushf
cmpsl
jnp
xchg
lock
rolb
fdivrs
aas
dec
call
and
push
and
sub
lcall
add
pop
adc
xor
fnstenv
cmp
dec
adcl
cli
push
sbbl
sbb
cmp
xchg
mov
insb
pop
xchg
fs
mov
stos
loope
pushf
xchg
adc
movsb
push
add
pop
sbb
lods
ret
sbb
mov
data16
xchg
xchg
addr16
cltd
dec
scas
insb
aaa
xchg
stos
imul
pop
dec
mov
inc
aam
jne
loope
jmp
or
ficoml
mov
inc
lret
push
cmpsl
cmpsl
mov
add
xchg
xchg
adc
imul
inc
repz
sub
push
add
or
dec
add
cmpsb
push
adc
fimull
icebp
hlt
fwait
adc
inc
mov
into
sub
mov
push
rcll
sbb
pop
loope
push
incl
int3
mov
jns
adc
imul
mov
imul
enter
popa
dec
dec
xlat
push
sbb
pop
inc
test
push
xchg
addr16
xchg
ret
mov
or
incl
xor
aaa
in
mov
test
scas
int3
leave
inc
or
in
sbb
mov
je
xchg
subb
fcmovnu
fs
iret
jmp
lock
jbe
cmc
jae
dec
and
ds
mov
mov
dec
lds
inc
cmp
or
nop
xchg
xchg
imul
add
mov
divl
aas
lods
sahf
dec
cmpsl
test
xor
aaa
push
add
push
mov
rcrl
xchg
dec
push
push
add
in
aas
jno
out
push
iret
dec
sub
xor
stc
dec
fisttpll
cmpsb
icebp
shld
aam
xchg
iret
add
arpl
jmp
imul
cmpb
add
mov
ss
lret
lods
dec
int
mov
jne
adc
jmp
mov
iret
hlt
mov
push
jmp
cmp
mov
lret
das
mov
aad
fs
dec
test
int
sbbl
inc
test
ds
or
out
clc
jmp
int
adc
in
pop
gs
popa
ss
nop
stos
ja
jg
es
test
xor
or
stos
ficomps
pop
hlt
seta
insl
call
pusha
hlt
cld
or
sbb
pusha
mov
xchg
jnp
jne
arpl
iret
xor
jb
fcoms
int3
mov
mov
popa
xchg
icebp
sti
and
pop
push
jl
mov
testl
shll
mov
lock
dec
std
les
jge
jo
push
daa
gs
iret
jnp
mov
jmp
popa
sarl
test
shrb
adc
imul
ret
ret
jge
pop
sub
add
lods
xchg
push
stos
adc
pop
outsb
sub
jecxz
mov
xchg
test
inc
fdivp
and
inc
aas
sub
dec
inc
decb
mov
aaa
scas
adc
inc
pop
pop
xlat
mov
mov
cmp
clc
inc
cmp
xchg
push
loope
dec
inc
push
imul
sbb
adc
dec
cmp
cmp
mov
addl
mov
pop
pop
jle
lock
sahf
ret
sub
xchg
mov
jo
add
mov
xor
fs
call
sbb
xlat
adc
push
sub
and
adc
dec
mov
push
icebp
imul
mov
inc
movb
xchg
mov
or
mov
repz
sbb
jge
inc
ljmp
into
sti
std
outsb
jmp
jle
mov
je
and
mov
or
jbe
push
fdivrp
test
pop
jno
or
cmp
cmp
dec
mov
aam
sbbl
sub
test
mov
inc
mov
jge
jns
sub
mov
add
cmp
xor
pop
dec
clc
lcall
push
xorl
test
lods
lds
dec
xchg
sub
dec
hlt
or
std
sbb
cmpsl
fimull
sbbb
int3
inc
push
dec
leave
clc
adc
aad
pop
leave
jno
adc
shlb
sbb
int3
lret
mov
mov
add
movsb
inc
mov
imul
adc
je
xchg
mov
adcb
xor
pop
int
ret
xor
cmp
cmp
scas
lsl
sub
add
mov
roll
xchg
in
int3
das
sbb
cmp
pushf
sti
sbb
imul
pop
nop
int3
iret
mov
sbb
push
or
inc
sub
mov
xchg
pop
xor
fisttpll
mov
bound
add
xchg
stos
pmaxub
dec
leave
mov
ds
repnz
mov
cltd
dec
xchg
adc
icebp
add
sub
arpl
jo
lret
pop
enter
pop
or
push
mov
ret
sbb
jb
loope
xchg
inc
in
and
pushf
mov
xchg
add
mov
shr
sub
xor
aam
or
mov
ja
or
rorb
mov
pop
insb
pop
int
loop
jne
jbe
scas
jb
je
stc
dec
popf
icebp
pop
mov
arpl
xchg
pop
lret
cmp
cmp
scas
fnstcw
dec
clc
mov
lahf
cmpsb
jno
lcall
sbb
cli
or
cmp
mov
test
mov
adcl
cmp
xor
aaa
xlat
in
dec
push
xchg
in
sbb
xchg
ss
out
bound
out
loopne
dec
cmp
scas
out
jno
sbb
xchg
dec
loope
icebp
adc
pop
add
aaa
bound
pushf
stc
adc
jo
sub
jb
jno
in
rclb
mov
sarb
nop
sub
fsubrl
jle
or
mov
mov
test
lods
push
lahf
jbe
mov
inc
jp
out
lds
call
lods
push
movsb
in
arpl
rcrb
cmp
xorb
pushf
sbb
inc
ss
sbb
and
stos
lea
cld
sub
sub
cli
xor
movsb
xor
dec
jmp
ret
or
sti
jg
hlt
mulb
sub
adc
push
fisttps
movb
xchg
push
pop
fstpl
mov
push
jg
lahf
sbb
mov
push
and
lret
mov
mov
jne
inc
clc
pop
lds
mov
bound
leave
mov
mov
sub
out
stc
cmpsb
int
jb
mov
inc
lods
sti
dec
pushf
cltd
iret
out
pop
in
mov
outsl
lea
mov
sbb
in
mov
rorl
loop
gs
fcoml
cmp
xchg
fisttps
cwtl
bound
mov
cwtl
mov
outsb
mov
mov
and
cli
xlat
data16
outsl
dec
add
push
andl
inc
or
movsb
lods
pop
or
loop
jecxz
or
inc
call
mov
pop
inc
cli
mov
inc
lea
data16
cs
pop
push
call
cmc
xchg
or
stos
movsb
and
dec
and
addr16
xchg
xchg
push
clc
pop
or
or
pop
ss
inc
loopne
repz
arpl
push
aaa
xchg
fidivs
addr16
aaa
xchg
ret
dec
test
subb
adc
or
outsb
bound
lock
lods
icebp
mov
adc
and
fbld
adc
cmc
pop
cwtl
push
pop
cli
sbbb
idiv
addb
rclb
sarl
sbb
scas
fidivrl
sub
jno
dec
out
pusha
loope
mov
icebp
ret
sbb
adc
mov
cmpsb
repnz
outsb
test
aas
imul
and
jbe
and
sbb
push
rclb
scas
ljmp
ficompl
and
xchg
sub
scas
aam
je
mov
or
push
das
pop
or
roll
out
dec
shl
scas
fsubp
push
jno
sub
stos
xor
bound
jns
outsb
mov
xchg
adc
std
push
ret
jno
mov
stos
fsts
das
add
xchg
leave
xchg
ret
out
fs
rolb
cmp
add
mov
xchg
aas
adc
add
stos
aas
test
mov
ret
add
shrl
xor
addl
inc
cmp
xchg
out
popf
int3
jge
aas
pushf
cmp
cmp
icebp
or
pop
pop
enter
dec
add
fmuls
daa
out
icebp
and
sbb
mov
pop
jge
push
inc
fdivrs
dec
rorl
int
pop
adc
sbb
sub
jmp
pop
lods
adc
enter
add
imul
inc
jl
or
fcmovu
and
sbb
dec
loopne
cmp
arpl
xor
aam
xchg
imul
or
fwait
movsl
sub
dec
dec
shll
pop
mov
mov
lea
mov
sbb
pop
rcll
insb
cmp
je
xor
and
add
shl
mov
pop
adc
adc
jne
fmuls
es
cmpl
adc
and
fwait
test
mov
sahf
sbb
lods
dec
inc
cmpsl
into
cld
cmp
idivb
xchg
out
rorl
mov
ja
adc
ja
or
xchg
dec
or
in
call
cmp
adc
sub
push
sub
xchg
pusha
xchg
scas
mov
fldl
sbb
loop
subb
mov
in
je
lret
aas
mov
insb
call
xchg
addr16
fs
pop
int3
add
adc
xor
inc
das
and
jne
imul
test
sarb
mov
xchg
shl
ret
push
divps
cmpsb
jecxz
jl
and
push
stos
xchg
shlb
mov
jmp
ja
outsb
mov
push
adc
xchg
push
cwtl
shl
sqrtps
jbe
xlat
xchg
mov
iret
add
add
sbb
pusha
stos
sub
or
cmp
loope
pop
sub
or
or
lods
pop
or
add
xor
xchg
sbb
xchg
inc
push
pop
xor
and
sub
and
mov
popa
mov
inc
in
jle
fld
lds
stos
cmp
pushf
fwait
cmpsb
shl
imul
enter
je
jo
push
popaw
xor
sbb
sbb
jg
shl
test
pusha
out
jg
pop
add
sbb
rclb
jge
into
lods
push
jecxz
or
xlat
cmp
pop
out
fldenv
pop
mov
push
imul
imul
push
xchg
sbbb
aaa
mov
mov
jno
mov
vmovups
addr16
cmp
cmpsb
xor
bsr
cltd
lcall
dec
fistl
sbbl
and
in
pop
jno
ljmp
pushf
and
dec
add
dec
test
xchg
xchg
xor
push
xor
ljmp
or
sbb
inc
push
std
scas
lock
lret
test
sub
loopne
mov
mov
shr
xor
push
dec
test
cmpsb
jp
sbb
mov
xchg
mov
xor
insl
test
pop
xlat
aam
es
dec
push
mov
or
sti
push
lea
fdiv
adc
mov
nop
or
hlt
test
push
dec
sub
aam
stos
inc
sub
arpl
out
insb
in
movsb
sub
hlt
aam
mov
scas
pop
roll
gs
aas
sarl
mov
mov
add
scas
mov
stc
dec
sbb
insb
arpl
push
mov
and
int
inc
inc
inc
push
or
dec
xchg
push
test
jo
mov
jne
stos
rclb
frstor
dec
dec
pop
or
jl
int3
enter
push
jp
xor
dec
adc
je
mov
in
insl
xor
xor
jmp
mov
or
xchg
add
and
dec
and
repnz
sbb
cld
sbb
popa
jns
and
inc
pop
push
lret
movsl
in
adc
push
or
dec
ds
repz
add
mov
dec
add
stc
dec
mov
cmp
mov
xchg
nop
adc
shl
adc
sarl
jle
adc
adc
je
es
inc
sbb
std
and
in
sub
in
sub
stos
xchg
push
outsl
dec
fcomi
push
mov
pushf
fadd
repz
adc
or
add
and
orb
sar
xor
adc
cld
push
sub
mov
popa
pop
push
int3
sub
sti
xchg
cmp
ficomps
pop
roll
and
imul
add
mov
or
cmp
lahf
inc
aas
or
jp
stos
push
jae
cmp
push
xchg
nop
sbb
cwtl
data16
stos
addr16
jge
dec
frstor
mov
enter
pop
lds
call
data16
out
out
xchg
pop
test
outsb
repnz
mov
lods
fsubrs
loope
gs
and
and
sbb
rorl
cmpsl
inc
push
xor
cmpsb
sbb
in
pop
ss
fimuls
inc
cltd
xorb
mov
movsl
inc
push
pop
xor
call
or
and
jbe
lods
iret
add
mov
repz
loope
mov
mov
mov
pop
add
and
test
addr16
adc
lock
and
mov
fisubrl
in
push
mov
add
iret
cmp
adc
cmp
pop
jmp
xor
fnstcw
test
dec
adc
loop
mov
cmp
cmpsl
or
sti
dec
rcrb
push
and
popf
add
dec
inc
inc
sbb
test
aaa
in
loop
repz
dec
lods
clc
ret
aad
lret
dec
adc
mov
and
mov
pop
push
sub
std
fnstcw
dec
rdmsr
mov
in
push
fdiv
imul
cld
and
fidivrl
mov
out
cmpsb
cmp
imul
mov
fstps
lods
inc
repz
aaa
cmpl
mov
pop
jmp
push
xchg
movsl
xor
dec
sub
adc
dec
adc
jle
test
or
stos
idivb
mov
sub
cmpsl
iret
icebp
xor
mov
jg
push
push
mov
mov
mov
divl
das
mov
xor
sub
push
and
mov
in
std
repnz
sti
jnp
push
lea
cmpb
addr16
push
popa
push
fildll
add
sub
bound
mov
in
in
push
mov
fadds
das
ret
movsl
scas
inc
out
fistl
dec
cmp
stc
adc
aas
mov
shlb
push
test
int3
sub
fcoml
ret
push
iret
dec
sbb
and
jecxz
cwtl
mov
loop
inc
pop
inc
loopne
scas
stos
cmp
insb
jge
lret
cld
in
ror
xchg
adc
vpsubb
dec
add
lods
adc
sub
push
mov
shld
mov
jg
jecxz
rcll
fcoml
pop
push
in
lods
icebp
out
scas
out
mov
cmp
sub
xor
ja
pop
arpl
loopne
iret
int3
xor
cmp
hlt
adc
sub
jp
fpatan
adc
xor
cmpsl
movntps
xchg
cmp
mov
push
sub
fiadds
cmp
dec
sarl
aad
jp
je
sbb
pop
scas
lock
mov
pop
and
adc
jae
push
loop
jmp
mov
mov
push
insl
mov
ret
mov
adc
mov
fcomps
cli
jg
repnz
stos
movsl
xchg
mov
ljmp
xchg
sarb
adc
imul
and
rclb
or
mov
sub
dec
std
jge
add
sub
adc
jbe
sti
and
in
lret
sub
repnz
push
mov
push
and
push
push
fnstsw
cmc
or
and
div
js
xor
jbe
adc
push
dec
fnstsw
mov
nop
arpl
inc
imul
rcr
lds
pop
daa
test
ret
out
in
jne
shrl
jns
in
sub
push
cmc
pusha
adcb
add
and
js
clc
fidivrs
loopne
push
mov
mov
jae
mov
jecxz
scas
inc
lods
xor
lds
sbb
xlat
mov
fcoml
pop
cmc
and
shll
or
dec
mov
clc
jae
adc
shrl
bound
xchg
mov
push
loop
jae
cmp
das
jp
neg
outsl
lods
cmp
or
fdivrl
push
arpl
cltd
xchg
aaa
push
testb
adc
sar
je
out
stos
ret
cmc
ss
out
in
fdivrl
xchg
bound
ret
push
les
pop
dec
dec
psubsw
jle
lock
mov
cmp
push
and
adc
dec
sub
or
cli
or
mov
das
ss
in
add
pusha
out
lahf
dec
mov
jbe
repnz
mov
out
test
loop
mov
cmp
mov
push
lods
and
dec
xchg
add
push
insb
xor
outsb
mov
add
gs
cltd
lcall
mov
xchg
push
clc
lods
inc
arpl
scas
mov
lcall
mov
rcl
aam
lds
dec
pop
jb
in
rorl
sbb
or
nop
add
add
sub
and
inc
mov
mov
int
aam
and
lahf
inc
mov
inc
jo
cli
add
push
or
lret
mov
sub
adc
jl
pop
iret
cmp
cmpsb
sub
hlt
mov
and
mov
mov
fdivrl
sbb
jns
sbb
sbb
in
and
jg
call
push
outsl
push
dec
fstpt
std
dec
xchg
sbb
or
mov
call
imul
lea
sbb
loope
popa
ret
dec
cltd
fstpl
test
push
jno
lahf
adc
pop
shlb
sahf
ja
inc
mov
neg
cli
xor
repnz
mov
mov
ss
fldt
sbb
xor
enter
mov
andl
std
xchg
pusha
mov
xchg
dec
mov
imul
pushf
imul
and
fcoms
sbb
mov
push
sbb
mov
sub
ret
adc
out
into
mov
push
pop
lcall
xchg
jle
xor
mov
cwtl
mov
pop
pop
mov
outsl
or
or
inc
pop
xchg
les
scas
add
into
test
sub
inc
xlat
pop
mov
push
ret
lock
cld
imul
add
cwtl
push
dec
fucom
sbb
jnp
addb
insb
xor
sub
ja
jnp
rorb
inc
pop
shlb
xchg
jae
js
cs
fidivrl
shlb
repz
fwait
aad
cmp
sub
imul
sub
ja
jmp
stos
push
mov
add
scas
repnz
lods
pop
xchg
sarb
mov
push
ret
out
hlt
cmpsl
bound
cmp
jno
imull
mov
xchg
ja
pop
inc
ljmp
and
ja
jle
mov
adc
aaa
shll
jo
clc
stc
in
fsts
fwait
and
jg
stc
addl
sbb
xchg
inc
fsubrl
push
hlt
add
pop
cmc
cmc
mov
mov
xchg
xchg
sub
cs
lahf
pop
sbb
mov
shll
jo
inc
fsubrs
inc
add
cmp
or
ss
loop
add
aaa
cmpsb
mov
inc
ret
cmpsl
jns
hlt
test
xchg
sbb
mov
sub
and
mov
xchg
int
repz
pushf
xchg
ret
hlt
ljmp
les
mov
ret
xor
jecxz
mov
inc
outsl
and
mov
fadds
addr16
cmc
and
bound
push
or
sbb
enter
mov
aaa
or
daa
sub
mov
push
mov
sbb
rorb
hlt
in
cmp
loop
mov
push
cmp
call
jecxz
mov
push
in
inc
jl
lea
push
sbb
cmc
decb
insb
scas
adc
dec
xchg
xchg
in
pushf
aam
cmp
cld
jle
int
aaa
push
mov
cmpsb
fimuls
jb
gs
xor
inc
adc
jecxz
pop
dec
lods
inc
into
test
fisubrl
jo
mov
jns
pop
cs
inc
stc
push
test
lea
and
in
mov
repz
mov
or
out
loopne
cmp
stos
dec
lea
push
iret
mov
cmp
xchg
pushf
push
jmp
cld
cmp
roll
popf
loope
out
sarb
pushf
xlat
or
in
jo
xchg
sbb
mov
mov
ds
add
mov
lcall
stos
ret
mov
sbb
bts
jnp
add
outsb
jecxz
ret
loope
lret
and
xchg
cmp
jmp
jmp
pop
mov
outsb
clc
lock
outsb
aaa
outsb
push
fnstenv
js
add
es
mov
or
das
pop
push
sarb
and
imul
mov
xor
minps
out
mov
pop
pushf
shlb
and
dec
cmp
mov
iret
dec
sub
inc
repnz
xchg
dec
xchg
xor
popf
sbb
lods
push
test
push
leave
out
daa
mov
push
pop
mov
adcb
mov
push
mov
outsb
jne
notb
fcmovnb
lahf
fmul
movsb
pop
pop
add
pop
je
in
push
sbb
mov
loope
mov
mov
adc
xchg
pop
shll
iret
rcll
xor
and
imulb
mov
dec
insb
and
xchg
stos
enter
push
in
stc
das
jl
cmp
sub
jecxz
mov
ret
ljmp
mov
loop
xor
clc
jmp
mov
and
mov
dec
mov
cli
dec
fidivrs
mov
pop
push
cmpsl
in
push
dec
dec
cmp
aad
jbe
outsb
push
std
xchg
or
cmpsb
lret
and
imul
aas
aad
mov
ljmp
jbe
fwait
push
xlat
filds
ret
outsb
and
pop
sub
fisubs
inc
add
out
in
fst
orl
jg
rolb
push
popa
gs
test
adc
adc
clc
stc
jmp
or
into
lret
fwait
push
out
add
lods
fcompl
int
insl
and
add
mov
jno
mov
cmp
fwait
aaa
insb
mov
sub
adc
push
fldt
andb
jl
or
add
and
ret
int3
dec
push
xchg
inc
ja
cwtl
stc
aad
mov
adc
add
or
aaa
in
adc
iret
or
repnz
jmp
or
jno
cmp
xchg
sub
dec
adc
push
xor
js
pop
mov
popa
jbe
jae
xor
and
movntps
sbb
dec
mov
mov
xlat
faddl
enter
pusha
icebp
in
jl
mov
cwtl
sahf
or
stos
in
push
mov
adc
dec
loopne
outsb
sbb
add
aam
div
pop
out
aam
mov
movsl
pop
push
stos
inc
fidivl
jge
inc
cmc
xor
imul
insl
paddq
stos
fwait
rcll
shl
sub
iret
or
out
inc
or
sbb
pop
shll
xor
xlat
fstl
cld
cmp
xchg
add
mov
sti
dec
mov
mov
outsb
gs
pop
xor
sti
nop
inc
mov
mov
dec
rclb
xchg
imul
jmp
pop
pop
dec
xor
imul
insl
stos
hlt
ss
adc
xchg
push
orl
sbb
in
add
shl
clc
and
fisttpll
arpl
dec
jo
aaa
or
xchg
adc
sbb
or
scas
mov
inc
pop
sbb
xorb
clc
in
inc
lds
adc
dec
sub
adc
ljmp
jecxz
sbb
sbb
add
pushf
aad
push
xor
mov
int
pop
shl
in
ljmp
sbb
add
scas
jecxz
ret
rcl
rcrb
pop
mov
cmpsl
push
popf
popf
pop
pop
out
test
shll
fmuls
ss
dec
jmp
dec
aas
arpl
adc
adc
push
push
enter
push
int
xlat
call
xlat
mov
adc
insl
outsb
xchg
jno
lods
mov
jbe
shrb
pop
pop
fmuls
push
imul
xlat
mov
xor
dec
jl
inc
icebp
cmp
movsl
cmp
sbb
js
test
call
fmull
lock
jg
idivl
mov
sub
cmpsl
cs
push
xor
add
sbb
pushf
cmpsb
and
adc
dec
push
add
rolb
cwtl
popa
in
xchg
xchg
lret
das
xchg
ss
out
lahf
stos
pop
push
mov
jnp
sub
xchg
lods
scas
aad
mov
mov
sub
adc
adc
push
test
and
aas
inc
inc
ss
data16
and
or
enter
cmp
or
sub
pop
dec
mov
cmpsl
ss
stc
clc
ljmp
sub
or
scas
mov
dec
or
orl
inc
mov
xchg
lods
or
xlat
fidivs
in
je
adc
rorl
std
pop
push
cmp
dec
push
imul
mov
pop
divb
mov
jg
fsubr
push
lods
xchg
and
push
jg
scas
inc
loope
stos
ja
jne
add
jge
adc
outsb
pop
or
jne
repnz
fs
push
int3
sarb
push
popa
insb
inc
xor
xor
fistpl
xor
mov
pop
dec
sub
lret
mov
jmp
stc
lods
sub
add
add
mov
fisubrl
adc
andl
aas
or
mov
dec
xchg
or
mov
movb
shll
pop
xor
mov
jbe
mov
pop
mov
out
dec
push
shlb
lret
inc
mov
jns
fcomps
cwtl
push
into
mov
push
xchg
loop
test
loope
pop
or
ret
pusha
mov
cld
sub
aas
lds
jb
out
adc
loope
xor
sarl
pusha
lahf
imul
es
insl
iret
mull
adc
pop
int3
lods
je,pn
mov
les
pop
lea
xchg
int
cld
sub
and
cmpsl
push
xchg
stc
mov
push
jl
in
cmc
lret
add
xlat
dec
mov
addr16
sbb
pushf
mov
shll
jg
jg
dec
pop
mov
ret
lods
rolb
rclb
fs
orb
and
bound
movsl
cmp
shlb
mov
adc
push
dec
add
stc
lret
lds
je
lret
int3
fisttps
xor
out
pop
ja
cltd
sbb
lods
push
jnp
push
xchg
mov
ds
sub
mov
std
loopne
mov
sub
push
inc
adc
std
je
daa
cld
mov
sbb
xchg
push
mov
cmp
jo
filds
popf
cmc
stc
scas
repz
jae
in
adc
jg
or
in
or
ja
jecxz
mov
dec
fldcw
pop
bound
inc
shlb
decl
cmp
daa
imul
jge
inc
add
inc
dec
sahf
or
adc
pop
lods
and
add
and
cmp
in
out
add
fldcw
lods
lahf
mov
shr
mov
ljmp
ja
in
outsb
arpl
lahf
sbb
add
pop
aaa
pop
nop
sub
push
leave
fs
ffreep
int3
sbbb
dec
and
and
or
nop
aaa
call
fisubl
loope
sbb
pusha
adc
push
mov
mov
inc
lods
cltd
imul
lds
outsl
punpckldq
mov
and
xlat
mov
fisttps
mov
lods
mov
xor
xor
ljmp
mov
or
jbe
fs
rorb
cmp
mov
pop
dec
daa
sub
jbe
inc
dec
mov
int
inc
cmp
es
ss
sbb
loope
fwait
divl
push
incl
divb
aas
int3
or
mov
enter
cmp
jnp
fstpl
in
aad
push
imul
movsl
test
mov
pop
and
cmp
mov
adc
mov
das
jge
lahf
sahf
pop
mov
clc
pop
mov
jmp
js
mov
push
mov
scas
xchg
out
shrl
pusha
lahf
dec
add
and
pop
fsts
negl
jle
aaa
xchg
push
inc
xor
or
loopne
jg
in
inc
fmuls
jge
es
inc
and
mov
dec
push
dec
lods
sub
in
lods
int
das
jbe
jmp
out
or
gs
fs
dec
jae
pushf
cmpb
test
sub
or
outsl
into
movsb
push
imul
mov
pusha
das
out
in
pop
dec
lea
fistl
out
imul
push
jns
ds
cld
es
xchg
psubd
outsl
pop
lret
adc
dec
cwtl
test
dec
testb
mov
jl
lock
xchg
mov
lods
push
or
lods
mov
roll
je
scas
cmpsl
je
stc
mov
push
push
push
inc
lret
sub
test
jnp
push
mov
lret
fwait
int3
ret
inc
xrelease
cmp
fstps
test
inc
fmull
rcll
push
inc
adc
in
xor
scas
dec
mov
dec
cmpsb
mov
mov
sub
addl
sub
enter
xor
dec
shl
arpl
pop
mov
arpl
les
gs
movsl
scas
and
jmp
dec
jge
and
scas
mov
fisttpll
xchg
fs
mov
mov
cmpsb
lret
dec
arpl
mov
addb
loopne
out
sub
jb
je
pop
div
in
mov
icebp
mov
inc
jb
pop
xchg
test
fcompl
jno
in
pop
lea
and
mov
push
pop
adc
pusha
fldcw
rcr
es
and
mov
js
adc
int3
add
popa
mov
sbb
je
popf
push
jae
push
mov
jnp
dec
jge
cmp
nop
jp
movsl
sarb
sbb
mov
mov
insb
pop
and
or
dec
scas
int3
sub
outsb
lods
loopne
and
mov
insl
and
xor
push
adc
lods
mov
mulb
xchg
sahf
and
inc
scas
in
cmp
fs
pop
das
div
mov
cmp
push
mov
mov
xchg
jo
mov
imul
xchg
add
xorl
push
cmp
push
dec
inc
data16
xlat
adc
loope
and
inc
gs
insb
mov
sub
inc
xor
sub
xor
jg
jbe
shlb
leave
lahf
or
cmp
cld
mov
mov
mov
mov
insl
loop
push
in
loope
mov
pop
pop
das
dec
ds
adc
mov
mov
jb
rclb
stos
pusha
sub
or
mov
push
loopne
add
mov
sti
adcl
faddl
outsb
mov
push
sub
xchg
sbbl
popf
sbb
pop
mov
pop
pop
fbld
and
and
mov
clc
shlb
addr16
imul
xchg
enter
lods
addl
and
stc
add
rcrl
sub
scas
xchg
mov
xchg
push
and
insl
jmp
pop
cmp
arpl
out
cmpsl
shlb
pop
mov
adc
int
outsb
lret
inc
loopne
xorb
mov
pushf
lods
ss
push
push
test
inc
sbb
rcr
icebp
sub
dec
in
sub
adc
fstl
in
sub
adc
fstl
bswap
pop
pop
out
or
cmp
rcrb
mov
ds
aas
rcll
repnz
out
xchg
push
cmp
sbb
jnp
xlat
cmp
push
movsb
jmp
push
sbb
mov
jmp
mov
ficoml
and
loope
mov
xor
sbb
adc
cmpsl
repz
repz
sti
std
dec
into
repnz
icebp
hlt
cs
sub
lea
or
aad
mov
shlb
fmull
add
xorl
movsb
es
xor
mov
jae
sub
mov
mov
inc
add
sbb
aaa
fst
cmp
xor
cmpsb
mov
notl
leave
inc
lock
movsb
or
dec
aam
jo
jle
cmp
xchg
lahf
sub
mov
xchg
sub
pop
hlt
jns
aam
cmpsb
mov
test
int3
jb
xchg
in
mov
enter
std
jo
imul
or
in
mov
jbe
xchg
mov
test
inc
jmp
add
or
xchg
je
cmp
inc
popa
aas
or
mov
cmpb
loop
push
mov
in
dec
out
fdivl
inc
jmp
jg
int3
data16
in
cmc
add
aad
pop
pop
ret
sub
decl
sti
js
mov
mov
pop
cmp
outsl
stc
and
dec
fidivl
jnp
and
inc
rcrl
sahf
mov
les
inc
jge
push
jne
mov
mov
icebp
adc
repz
mov
in
sbb
inc
jmp
mov
add
xor
and
pop
mov
stc
push
lret
gs
jl
aad
pop
jbe
dec
stos
sub
add
cld
xchg
aad
and
push
jne
cmp
lods
inc
sub
dec
adc
cmp
jp
mov
fmuls
mov
xor
fwait
mov
xor
xor
inc
aas
fidivl
fidivs
in
in
and
bound
or
repnz
lock
in
add
inc
fs
lahf
hlt
or
xchg
and
stos
push
jmp
test
adc
adc
outsl
frstor
and
mov
inc
add
xchg
mov
xor
cmp
call
pop
jne
xchg
mov
int
jge
sarb
push
jne
push
xor
xchg
sbb
pushl
cli
cs
pusha
adcb
xchg
outsl
mov
test
and
and
iret
popf
pusha
adc
xor
mov
pushf
inc
fucomp
push
in
xchg
mov
cltd
mov
movsb
push
inc
cmp
mov
inc
pop
jnp
jns
out
pop
mov
test
push
test
mov
push
cmc
xor
or
push
test
mov
push
cmc
xor
or
push
test
mov
push
cmc
xor
or
push
test
mov
push
cmc
xor
or
push
test
mov
push
cmc
xor
cmc
mov
sahf
stc
mov
lcall
push
mov
mov
xchg
jne
and
sti
sub
mov
push
pop
clc
xchg
xchg
mov
es
scas
push
outsl
cmp
in
mov
fsubrl
jae
clc
xchg
xchg
aaa
and
test
mov
cmc
jecxz
in
imul
fdivrl
xchg
xlat
outsw
and
sub
sub
xchg
pop
mov
psraw
xor
pop
nop
sti
pop
or
out
inc
ss
xchg
js
add
mov
mov
pop
loope
xchg
out
push
jae
cmovo
cmp
loop
jno
in
or
lods
dec
sbb
mov
ljmp
into
and
in
mov
iret
ficoml
cmpsb
bound
dec
sar
out
cmp
aaa
inc
dec
repnz
pop
push
aas
in
adcb
test
sahf
je
scas
adc
xchg
inc
mov
cld
sub
cmpsw
dec
icebp
leave
push
out
cmp
xchg
fisubs
insb
nop
inc
and
int3
mov
das
movsl
faddl
loopne
popa
jnp
lea
dec
cmp
pop
pop
pop
cmc
pop
push
push
sub
test
inc
cli
jns
stos
cmpsl
subb
lret
fldenv
jns
addr16
xchg
inc
dec
rorl
mov
xor
in
xor
jmp
push
lods
xor
lods
add
cmove
shrb
sub
or
sbb
in
jno
jmp
sahf
stos
add
mov
pusha
mov
sub
sbb
cmp
mov
xchg
jl,pn
fstpl
xchg
filds
gs
pop
cwtl
pop
xchg
xor
cwtl
mov
add
es
sahf
pop
pop
fcompl
scas
das
mov
mov
jecxz
adc
mov
jo
ret
xchg
jbe
jmp
jle
fmuls
push
popa
mov
dec
mov
or
push
out
and
inc
push
adc
xchg
and
jae
add
stc
popl
lock
mov
jb
lock
xchg
mov
fsubrp
jns
xor
dec
lcall
lock
ret
iret
stos
adc
pop
stos
sar
adc
loopne
les
repz
fs
adc
sbb
xchg
sub
inc
jp
stos
mov
lret
aam
mov
sbb
rcrb
adc
sub
rorb
mov
lods
faddl
repz
jbe
xchg
mov
mov
bound
cmpsb
lcall
movsb
shll
jl
jge
nop
fs
mull
pop
add
xchg
jns
mov
cld
movsl
arpl
or
jns
movsl
psllq
jnp
ret
std
repnz
mov
push
in
cmp
push
sub
pop
mov
xor
jo
and
xchg
call
ds
stos
adc
sarb
sti
out
fisubrl
jbe
jmp
in
jbe
jle
pop
data16
xor
insb
test
out
cmp
push
mov
adc
mov
ffreep
push
adc
ds
dec
mov
sbb
mov
xchg
loope
mov
movsl
adc
iret
or
inc
push
xchg
jmp
sub
int
xchg
imul
pop
shll
in
mov
ss
mov
inc
fbstp
jp
hlt
inc
push
bound
lret
xchg
fs
das
mov
leave
and
loope
mov
out
sub
xor
fiadds
lock
inc
enter
push
dec
lods
adc
sub
xchg
stos
popa
je
xchg
hlt
mov
outsb
sarl
push
adc
sub
dec
daa
inc
shr
nop
out
mov
push
imul
cli
testl
sbb
jge
adc
int
lret
imul
dec
pop
push
cmpsb
ret
or
enter
int3
std
mov
test
sub
sub
pop
mov
test
push
add
mov
jge
out
dec
arpl
push
repz
add
sub
adc
sub
scas
jmp
cmc
sub
cmp
shll
add
and
lock
push
scas
sub
add
rorl
lret
jne
and
ljmp
addr16
imul
hlt
pushf
popf
cltd
mov
xchg
imul
xor
mov
mov
rorl
ficomps
pop
xor
mov
in
and
cli
adc
sub
xor
push
cmp
inc
mov
add
leave
lds
insb
fsubl
stos
xchg
jne
mov
inc
divl
shrl
popf
inc
es
and
xor
xchg
sbb
pop
jg
inc
sub
xor
ds
and
cmp
lcall
sbb
in
faddl
outsb
das
aas
xchg
dec
pushf
jle
scas
add
jle
movq
sarb
xor
mov
mov
cmp
adc
sbbl
dec
cmp
xchg
sbb
jne
fs
fs
lahf
xchg
adc
cmp
sbb
lods
cmp
add
pusha
icebp
cli
cmc
popf
jb
jmp
jp
clc
enter
inc
out
shlb
int
cmpsl
xchg
cwtl
mov
sbb
xor
rorb
ds
push
add
or
add
fmul
cltd
jecxz
cltd
or
jnp
inc
mov
inc
icebp
add
loop
imul
rclb
in
pop
pop
shlb
xchg
dec
sub
sub
or
fisubs
test
pop
andl
inc
adc
dec
lret
pop
and
sub
sub
lds
push
scas
jb
cvttps2pi
cmp
mov
pop
or
or
or
ret
or
lock
cmp
arpl
push
dec
jnp
in
loope
mov
or
pop
cmpsb
push
fwait
inc
sarb
call
xchg
out
out
mov
mov
loope
mov
sbb
cwtl
pushf
inc
rorb
push
sahf
gs
ds
imul
push
add
inc
sbb
xlat
je
jle
daa
insb
or
push
testb
mov
jp
imul
pop
xorb
inc
add
movl
sbbl
mov
jno
xchg
xor
inc
dec
dec
or
fdivrs
cmc
daa
movsb
sbb
xchg
push
mov
jb
cltd
cld
and
xor
movsb
jns
lods
lock
sub
faddl
es
pop
cld
sub
pop
mov
sub
mov
test
jle
in
enter
lea
sahf
aas
daa
xchg
mov
sbbb
loope
cld
test
xchg
xchg
mov
adc
cltd
mov
out
out
rcrl
or
mov
or
sub
push
hlt
mov
pop
sahf
mov
js
sarl
les
mov
sbb
adc
sub
xor
test
cmpsl
mov
fbld
stc
mull
scas
nop
jg
add
shrl
cmpsl
push
cmp
fstpl
arpl
push
inc
dec
push
push
leave
dec
push
cwtl
adc
mov
repz
and
cmpb
loope
popa
test
out
push
xor
mov
push
adc
bound
and
lcall
pop
fisubrs
pop
push
cmp
dec
sbb
inc
sbb
dec
dec
arpl
leave
loope
inc
dec
fdivl
movsl
test
es
int3
sub
addr16
jae
stos
dec
nop
add
pusha
jmp
jae
fisttpll
mov
dec
push
out
inc
inc
push
push
mov
mov
push
in
out
clc
fildll
je
cltd
sbb
stos
dec
push
pop
push
sbb
jmp
jg
rcrb
popf
daa
out
stos
cli
imul
mov
sahf
loop
xchg
lds
jmp
subb
gs
repz
cltd
mov
daa
push
mov
jp
mov
sub
pop
dec
and
sub
mov
pop
or
jne
data16
test
xchg
push
mov
mov
xor
push
fstpl
mov
call
mov
mov
das
std
pop
mov
ret
adc
test
insl
out
jle
sub
or
adc
cmp
int
ljmp
sub
jne
inc
push
ja
dec
out
ficoms
add
out
rorl
sub
das
fwait
mov
or
xchg
jecxz
ja
jnp
in
out
aam
aam
push
jmp
or
jmp
int
out
dec
popf
dec
pop
sahf
push
mov
ss
call
mulb
push
lcall
lret
adc
xchg
inc
bound
xchg
xor
inc
adc
sbbb
jg
arpl
dec
sahf
cs
mov
je
jmp
and
lods
popf
add
adc
dec
mov
pop
sbb
push
es
inc
insl
mov
lret
sbb
pop
lock
mov
cmc
mov
pop
mov
inc
stos
adc
jg
xchg
stos
adcl
test
in
xor
xor
jmp
inc
stos
scas
into
pushf
xchg
stos
and
or
movsl
push
in
test
notl
xchg
sbb
sub
repnz
mov
rorl
xchg
or
dec
in
cmc
stos
loopne
rcll
push
test
mov
cwtl
fld1
add
fimuls
cld
or
sub
dec
adc
pop
ja
int
scas
cmpsl
or
pop
adc
out
iret
int
rol
out
stc
int
jb
rcrb
mov
addb
xchg
lret
cmp
jmp
xchg
and
imul
xor
mov
lret
mov
lea
xlat
int
lods
sbb
ret
roll
sahf
call
lock
aas
mov
and
xchg
imul
dec
adcb
xchg
dec
fidivs
mov
movsb
mov
fcmovne
xchg
ficompl
inc
push
xor
aaa
push
pusha
mov
jnp
cmp
sbb
cmp
jle
inc
mov
add
call
mov
aas
hlt
cwtl
ja
jns
mov
xchg
jno
iret
daa
orl
scas
pop
push
mov
add
inc
mov
nop
xchg
sbb
bound
rorb
das
sub
fs
test
or
jle
push
mov
adc
lahf
sub
sarb
jo
enter
mov
lods
lea
in
insl
icebp
clc
mov
insl
loope
sub
pop
mov
mov
ljmp
pop
sub
out
xchg
xor
pop
sbb
push
leave
cmp
sbb
pusha
mov
sbbb
mov
xor
fstpt
mov
fiaddl
das
mov
xor
xorb
arpl
rorl
mov
dec
out
jne
ds
pop
xchg
shl
add
cmp
fcmovne
pop
repz
push
push
fisttpl
ljmp
roll
push
lahf
popf
das
pop
cmpsl
and
inc
adc
ret
pop
stc
sub
fiadds
fnstcw
addr16
push
push
ret
inc
jp
subw
pop
mov
repnz
rclb
dec
adc
mov
fdivl
pushf
mov
cmp
sbb
mov
mov
lods
pop
lea
int3
jmp
hlt
mov
gs
stc
js
mov
int
bound
loop
in
inc
cmpl
add
jno
test
mov
sub
imul
push
xlat
jae
push
pop
repnz
mov
cwtl
call
fimuls
int3
out
xor
pop
push
ret
mov
out
jno
les
push
std
roll
stos
ficoml
dec
xor
xor
pop
jno
cs
mov
addr16
das
pop
lods
js
cmpsl
xchg
add
sbb
scas
daa
cmp
sbb
pop
clc
imul
lea
enter
xchg
ja
inc
fstl
sub
xchg
test
xchg
xchg
je
push
arpl
and
addl
mov
js
jb
pop
sahf
pusha
dec
push
or
aam
dec
jge
mov
mov
movsl
pop
and
test
sbb
nop
clc
ror
into
mov
fistpll
add
scas
mov
fcomp
pop
cmp
mov
stc
adc
dec
jg
cmp
xchg
shr
and
inc
add
test
mov
and
inc
out
outsb
pop
mov
adc
fcomi
pop
sub
out
rclb
jbe
xchg
leave
les
adc
push
jne
cld
ljmp
aad
inc
push
inc
rcll
and
adc
lcall
pop
adc
sarb
dec
pop
xchg
daa
xchg
ss
mov
push
mov
repnz
insb
xchg
jecxz
mov
add
in
add
shlb
push
xor
jno
test
push
dec
or
pop
xchg
add
subb
iret
pushf
xor
xor
and
mov
out
into
hlt
push
xchg
adcb
test
adc
fwait
xchg
cld
and
mov
outsb
dec
nop
xlat
or
lock
rcll
nop
pop
ss
pop
mov
bound
in
mov
sahf
mov
push
clc
adc
sbb
xor
and
shrb
or
mov
clc
ja
int
mov
mov
lods
adc
or
inc
mov
xor
and
mov
xor
inc
and
shrb
push
ja
lea
add
jb
out
leave
mov
xor
in
in
leave
scas
enter
mov
mov
mov
jmp
shlb
cmpl
jg
xchg
cmc
aad
cmp
ss
push
sbb
in
mov
fs
or
xchg
enter
ljmp
jp
push
dec
std
lret
test
pop
dec
lods
fs
out
pop
mov
gs
xor
jo,pn
or
xor
inc
push
xchg
popf
outsl
into
in
sub
and
adc
jae
mov
pop
jae
xor
or
mov
adc
dec
pop
mul
test
inc
popf
mov
in
jmp
lcall
fs
mov
xchg
dec
or
jmp
scas
fcmovnbe
or
jnp
mov
inc
inc
add
xchg
clc
leave
push
loop
sub
int
jge
outsb
int3
les
cmc
mov
dec
or
rcll
xor
jle
sub
ret
movsl
out
test
mov
test
inc
jae
inc
add
gs
sbb
xchg
into
aas
inc
das
das
adc
push
xor
sti
cmp
mov
pop
push
clc
lods
sbb
and
das
sbb
pushf
je
and
out
insb
and
jae
adc
dec
adc
xor
test
inc
push
push
aas
cmpsb
out
pop
sbb
adc
scas
sub
jbe
jnp
cmp
out
pop
push
jns,pt
cs
xchg
js
call
adc
andb
inc
aad
jb
daa
or
aad
adc
mov
loopne
cli
cwtl
pmaxub
cmp
sub
pop
dec
push
or
aas
jmp
adc
mov
nop
pop
inc
sub
jnp
xchg
hlt
pusha
push
or
jns
movsl
insb
mov
push
int3
inc
test
mov
add
jno
lret
add
subl
lods
jno
xor
mov
add
pop
push
test
outsb
xchg
sbb
or
mov
sbb
jge
ffreep
pop
sbb
jge
adc
cld
push
jl
jl
pop
adc
js
aas
xchg
inc
and
jmp
daa
mov
sbb
call
sbb
mov
sbb
jle
mov
push
ljmp
pop
adc
mov
jb
cli
jecxz
shll
in
pop
and
mov
lcall
daa
inc
adc
add
aad
jb
mov
cmp
jmp
jecxz
or
dec
and
mov
push
lcall
xchg
lods
adc
xlat
inc
dec
insb
mov
roll
mov
push
pop
push
jb
sub
shll
xorb
shlb
cmp
std
cltd
and
inc
push
adc
pop
fists
inc
mov
push
out
inc
mov
ljmp
dec
lods
pop
inc
fcoms
or
notb
lods
mov
add
xor
das
ljmp
ret
add
push
clc
adc
dec
into
jbe
mov
jb
test
xor
shl
dec
mov
in
arpl
sub
inc
mov
jae
les
movsl
inc
int
shll
and
add
jns
xor
iret
adc
push
ret
jg
mov
ljmp
mov
push
nop
lahf
dec
loope
ret
sub
mov
int3
dec
pop
adc
push
sub
aaa
push
mov
sbb
mov
inc
fs
lock
xchg
scas
imul
or
ss
sti
dec
sbb
xor
aas
in
mov
mov
sbb
jg
jmp
out
rcrb
test
adc
and
and
loop
pop
mov
inc
xchg
daa
pusha
sub
fwait
add
lods
jns
cmp
test
xor
dec
and
push
or
adc
mov
mov
movsb
pop
mov
gs
jo
adc
loop
out
dec
std
adc
and
sahf
movsl
xchg
jae
lds
icebp
in
arpl
out
cwtl
dec
and
push
cmp
inc
adc
rorl
inc
mov
mov
add
ret
idiv
dec
ficomps
in
jle
mov
and
mov
outsb
fistpl
cmpl
dec
xor
dec
sub
xchg
adc
xchg
cmpsl
mov
sub
outsl
das
mov
rcrl
mov
lret
in
lea
sub
and
rclb
inc
loopne
sub
in
lock
sub
in
cmp
mov
and
adc
pushf
or
sti
ret
cld
dec
xor
rolb
negl
mov
inc
xchg
push
movsb
and
adc
pop
mov
test
cmp
push
add
push
ret
bound
neg
iret
xor
adc
sbb
clc
call
jmp
xchg
cmp
mov
mov
fisttpl
in
test
jge
test
daa
popf
test
lds
frstor
aas
inc
aas
repnz
inc
js
lock
and
push
jmp
test
push
aam
pop
mov
mov
cli
add
dec
cmp
mov
push
movsb
mulb
adc
popa
push
dec
pop
shll
lcall
cmp
mov
ficompl
movsb
icebp
ja
rclb
sub
jmp
sub
jnp
lods
xchg
imul
and
imul
data16
sarb
dec
fs
pop
and
loopne
xchg
inc
jnp
push
pushf
adc
fistpl
out
jge
movsb
xchg
mov
sbb
jbe
insb
mov
in
sbb
test
and
repz
push
xchg
xchg
repz
and
mov
lret
stos
cs
scas
int
inc
arpl
push
stos
out
push
out
aas
fldl
rorl
inc
mov
mov
popf
pop
jae
mov
insl
cltd
test
dec
or
dec
popf
fdivrl
mov
jo
pop
and
push
in
jae
adc
sbb
pop
int
lods
adcb
js
push
inc
je
mov
or
inc
sub
das
mov
loop
xchg
sub
dec
decb
lea
cmp
jecxz
std
push
jle
sbb
loop
xchg
cmpsl
pop
sahf
and
push
mov
cld
cmp
psubsb
inc
push
loope
fists
push
js
je
mov
push
lods
int
lods
inc
dec
cmp
fsubrs
mov
sahf
push
imul
cld
orl
imul
repnz
mov
xor
pop
sti
test
mov
and
push
jmp
xchg
mov
sbb
cs
mov
in
stos
imul
adc
jbe
mov
iret
repnz
push
icebp
jg
and
cld
inc
jmp
pop
insb
jne
lret
iret
cwtl
and
jno
icebp
lods
call
pop
mov
dec
int
dec
sbb
rolb
sbb
sbb
pop
fwait
dec
inc
inc
mov
lock
dec
pop
outsb
jb
add
movsl
ja
mov
xchg
pop
lahf
popf
mov
out
out
xor
push
xchg
jae
insl
jg
jp
xchg
sbb
inc
inc
out
cmp
sbb
add
inc
les
aad
mov
aad
sub
lret
pop
int
fcoms
mov
sub
mov
loop
setb
cmpsl
mov
inc
lret
das
sub
or
xor
adc
or
push
fsubs
les
jge
jnp
mov
adc
and
js
adc
or
add
cwtl
sub
mov
push
fs
or
rorl
xor
inc
jl
js,pt
xchg
hlt
aad
fadds
add
xor
push
out
dec
loope
cltd
cwtl
inc
lods
xor
into
vunpckhps
mov
pop
out
lods
mov
sub
fisubrl
pop
mov
movsb
pushf
cli
and
adc
jecxz
mov
inc
mov
loope
rcrl
fs
icebp
mov
or
mov
imul
loope
dec
shl
fbld
mov
sbb
sahf
dec
dec
dec
pop
xchg
mov
call
es
inc
ret
inc
hlt
test
lcall
mov
or
push
push
dec
sub
mov
and
adc
adc
mov
adcb
mov
xlat
mov
xchg
sti
daa
fcmove
out
mov
data16
mov
xorb
mov
or
sub
mov
add
mov
jae
popa
shl
pop
push
addr16
ss
mov
inc
mov
cmp
sbbb
lret
pop
fisttps
mov
stc
insb
in
mov
dec
xchg
movsl
ret
call
aaa
pop
adc
pop
xchg
and
push
nop
psrad
pop
insb
movsb
mov
push
cmp
movsl
jne
pop
pop
xchg
mov
jl
fcmovbe
and
pop
xor
and
out
das
lret
repz
or
into
sub
and
push
pop
inc
cmp
adc
fmuls
lds
call
adc
push
mov
xchg
push
lds
data16
cmp
popf
rorb
mov
popf
lock
and
push
in
lcall
stos
out
jne
push
addl
mov
stc
mov
mov
lret
fcmovnbe
or
and
sbb
clc
push
or
mov
clc
rcll
xchg
iret
js
push
insb
cltd
push
loope
dec
stos
sub
into
cwtl
jns
mov
xor
int3
dec
inc
cld
repz
mov
jb
xchg
ror
xor
xchg
inc
repz
hlt
adc
jl
rorl
sub
in
in
jge
cmp
loop
lret
sbb
outsl
sbb
dec
mov
stos
inc
sbb
jo
loopne
scas
mov
dec
lahf
jmp
ret
xor
ljmp
adc
loopne
add
mov
lahf
cwtl
enter
mov
faddl
xchg
xchg
or
sbb
mov
icebp
adc
adc
pop
jne
hlt
mov
aas
adc
in
aad
fiaddl
stos
rol
pop
mov
pop
sbb
imul
push
xor
mov
xchg
or
cltd
les
xor
addr16
pop
in
out
push
sti
push
popf
loope
daa
jne
mov
pop
inc
imul
cmpsb
jne
roll
ja
lahf
dec
mov
cmpsl
add
lahf
dec
loopne
jne
fdiv
mov
icebp
and
aas
lock
imul
cmc
mov
lock
out
aad
push
push
and
inc
jb
dec
xor
xlat
in
mov
sbb
xchg
mov
mov
inc
cli
mov
lds
dec
mov
dec
or
dec
and
xchg
or
gs
pop
movb
dec
or
inc
lods
add
and
or
jne
ljmp
idivl
cmp
out
movsb
cmp
ror
add
push
pop
stc
scas
jno
aaa
je
fisttpll
cmp
lret
jnp
sbb
fisubs
out
and
aas
cli
hlt
sub
dec
pop
pop
ljmp
push
jo
aas
push
aaa
push
ret
mov
add
fimull
sahf
ss
scas
cmp
test
xchg
mov
sub
add
leave
mov
or
scas
xchg
aas
push
std
popa
mov
adc
jle
xor
pop
push
cmp
dec
das
sub
daa
and
mov
in
dec
push
fidivl
jae
fisubrs
fdivs
nop
stc
pop
pop
dec
hlt
rolb
xchg
outsb
cwtl
xchg
xor
dec
mov
adcl
jge
sub
or
sub
sbb
outsb
pop
gs
clc
mov
imul
outsb
ds
into
in
dec
mov
or
mov
push
mov
nop
adc
push
insb
ror
imul
mov
jmp
fcoms
insb
adc
xlat
jnp
dec
out
cmc
in
and
scas
mov
sbb
push
lcall
jne
sub
adc
sbb
pop
scas
jmp
and
mov
pop
testl
mov
xor
or
in
cmpsl
je
mov
les
cmp
ja
mov
inc
xchg
jns
mov
inc
cmp
mov
and
inc
mov
imul
iret
xor
cli
push
jnp
mov
imul
mov
repz
mov
adcl
jl
inc
pusha
xchg
xchg
pushl
cltd
xchg
jno
xor
outsl
popf
adc
lea
loope
adc
lahf
sub
dec
insb
cmp
pop
or
xor
fidivrs
testb
mov
stos
scas
pusha
pop
xor
cli
cmp
fcmovbe
rcll
out
dec
add
mov
ss
push
outsb
pop
pop
dec
push
mov
mov
push
sub
sbb
popa
jp
out
movsl
mov
clc
push
test
xchg
mov
out
fisttps
add
hlt
xor
sbb
mov
xchg
jne
inc
cmpsl
sub
pushf
int3
or
and
inc
xor
xchg
adc
cld
out
js
adc
mov
int3
push
loope
push
icebp
movsb
dec
xchg
shr
es
fdiv
jae
jle
xchg
mov
mov
jl
in
pop
aam
andl
or
mov
lock
lret
inc
xchg
mov
add
shrb
inc
pop
lret
adc
mov
push
mov
fs
or
dec
test
add
jl
jge
fs
dec
xor
int
rolb
ror
lret
xchg
mov
jo
pop
pushf
pop
in
xchg
dec
adcl
mov
sbb
xchg
xchg
add
ret
push
xor
mov
int3
mov
mov
popw
popf
dec
cmp
mov
push
leave
jae
cmc
xor
or
shlb
sbb
andb
and
daa
in
call
xchg
dec
fsub
shrl
mov
push
sbb
and
icebp
lret
stos
cmp
jnp
ret
sub
or
sti
mov
pushf
dec
jg
xchg
and
les
cs
add
inc
movsb
and
xor
mov
dec
pshufhw
cmp
cld
pop
xor
mov
inc
arpl
cltd
sti
add
mov
lock
push
push
aas
lock
jg
push
test
movsb
out
daa
sub
dec
scas
dec
xchg
push
bound
insl
rol
jnp
dec
adc
loop
sti
jb
movsb
jne
sbb
pop
inc
xchg
test
pop
mov
andl
xchg
cmp
ret
sarw
mov
mov
mov
xor
aam
mov
xchg
mov
mov
lds
test
adc
orl
bound
mov
mov
fldt
outsb
js
inc
push
js
aad
adc
xor
sti
adc
cmp
push
xor
xchg
leave
les
mov
sbb
pushf
push
sub
cli
js
bound
inc
inc
add
mov
jns
and
cmp
xor
lods
test
popf
mov
jb
cmp
mov
std
pop
or
sub
cli
and
ds
mov
daa
pushf
add
loop
in
fsincos
cmp
out
adc
xchg
mov
push
outsl
dec
shll
gs
jp
cwtl
mull
lods
xor
inc
cs
ret
dec
xlat
mov
es
ret
in
pushf
xor
and
or
repnz
je
jne
out
sbb
mov
xchg
mov
mov
movsb
ror
cli
btr
mov
enter
jo
cmp
aam
mov
jle
jb
fstps
pop
push
imul
aam
dec
fcmovnu
movsb
ss
in
and
mov
xchg
outsl
lock
push
dec
jb
in
add
xor
stc
popa
mov
ss
jb
rorl
lret
enter
pop
andb
or
in
shll
cmpsb
fildll
out
scas
test
icebp
mov
sub
movsl
mov
mov
sub
aaa
dec
and
outsb
jmp
cmp
add
add
pop
int3
pop
cmp
and
or
test
inc
loopne
add
mov
dec
pop
jp
sar
push
lret
lock
fistl
pusha
mov
in
push
sub
arpl
mov
xchg
insb
scas
lods
fiadds
inc
daa
jp
loopne
xchg
ja
jp
insb
and
push
xchg
fcomp
aaa
pop
jmp
xchg
or
test
lods
or
mov
fcmovnbe
rclb
sub
sub
inc
bound
int
dec
mov
mov
je
repnz
push
movsl
sbb
imul
imul
cmp
out
or
inc
mov
cs
ljmp
push
jae
imul
mov
mov
daa
cmpsl
ss
xor
mov
mov
or
mov
push
mov
pop
mov
cmp
or
pop
mov
enter
rcll
sub
mov
fstpl
dec
cmp
cld
in
imul
adc
cmp
shrb
xchg
cli
jae
inc
pop
jmp
fdivrl
aad
int
mov
std
int
aaa
mov
xchg
push
inc
into
daa
ljmp
ss
jp
incl
test
adc
xchg
push
in
cmp
fcompl
or
sub
cmp
lods
pop
outsl
mov
xchg
loopne
std
ss
adc
mov
cmc
mov
cld
mov
popl
ret
sti
inc
inc
and
enter
lret
rorl
in
cmp
in
lret
aam
jns
fistps
sub
sub
insb
pop
xor
dec
dec
mov
and
pop
jnp
inc
scas
sbb
mov
adc
mov
sarb
push
les
fcomps
push
add
pop
pop
sub
inc
insl
sub
aam
push
mov
fimull
je
mov
and
loope
xor
stos
int
jmp
mov
sub
pop
pop
pop
gs
repnz
mov
sbb
ja
sub
jge
fistps
div
mov
mov
jl
ret
repnz
shrb
lds
pusha
sbb
lret
sub
mov
loope
xchg
fwait
rcrb
jp
and
scas
mov
in
xor
outsl
stc
pop
or
inc
mov
lock
mov
lret
scas
pop
loop
inc
dec
gs
mov
xchg
repnz
jl
fldt
mov
test
inc
inc
jne
lods
aad
mov
lds
outsb
push
jb
inc
es
lret
cmp
push
lea
dec
data16
mov
sbb
inc
stos
dec
cmp
jmp
xor
mov
cltd
ficomps
aas
jp
mov
mov
xlat
andl
add
ror
out
mov
mov
dec
es
stos
pop
repz
addr16
push
das
cld
and
jmp
mov
dec
xchg
scas
mov
mov
cld
test
cmp
and
pop
daa
mov
loopne
xorl
sbb
imul
icebp
mov
cmp
test
or
movsb
push
adc
xor
xchg
push
or
insl
mov
out
push
cmp
ds
test
mov
inc
sub
call
mov
mov
mov
xor
cmp
or
and
xchg
xor
inc
lods
xor
lock
inc
and
out
in
jge
faddl
dec
jp
mov
adc
add
xor
iret
jbe
ja
push
mov
ja
push
shl
dec
xor
dec
push
or
dec
jl
fcoms
aam
cmp
loopne
pop
or
push
xchg
cld
jae
pop
test
add
iret
fstps
dec
std
int3
sbbb
mov
ljmp
add
fcompl
out
fisubl
mov
xchg
aad
std
pusha
insl
arpl
lret
pushf
rolb
or
icebp
jns
xchg
leave
sbb
rorl
adcl
fildl
mov
popa
or
inc
sbb
insl
nop
mov
or
dec
mov
add
ss
xor
fwait
push
dec
daa
mov
lahf
mov
sbb
adc
pop
loopne
fstl
add
out
xor
fisttps
lds
das
xchg
popf
or
add
jmp
mov
sub
fwait
mov
sti
ret
loope
xchg
mov
jl
je
fsubl
outsl
popf
scas
lock
ficompl
pop
xchg
popf
leave
xor
xchg
xchg
testl
test
mov
inc
les
inc
jb
adc
inc
movsl
add
add
pop
push
int
invd
add
add
push
movsl
lea
pop
frstor
and
add
nop
psubw
mov
adc
orl
mov
jg
add
sarl
negl
cld
subl
jns
ret
inc
mov
imul
bound
cli
hlt
popa
adc
inc
mov
or
fbld
push
mov
and
sti
pop
das
sahf
into
ljmp
push
aas
arpl
xchg
xchg
repnz
dec
mov
inc
ljmp
push
jno
inc
and
lahf
data16
js
or
push
jb
xor
ds
mov
or
jecxz
and
sub
cld
bound
icebp
gs
aaa
cli
adc
outsb
inc
test
subl
stos
pop
pusha
in
sbb
mov
enter
shll
or
sbb
dec
cmpsl
mov
sub
in
xchg
cwtl
cli
sbb
imul
fbstp
in
cli
pop
jbe
sti
pop
loope
mov
push
loope
addr16
lcall
lahf
xchg
je
arpl
test
imul
cld
push
test
loope
lods
scas
adc
pusha
mov
mov
hlt
sub
jne
pop
push
inc
inc
xlat
frstor
cmp
fcmovu
mov
test
iret
or
movb
jle
mov
push
push
sbb
popa
xor
call
dec
dec
jbe
nopl
add
sub
outsb
popa
div
jg
pusha
movb
jo
and
sbb
fcompl
adc
sbbl
and
mov
enter
mov
cmpsl
cmp
movsb
push
es
iret
pop
xor
pop
movsb
sbb
mov
aam
rcrb
cmp
arpl
sbb
push
pushf
push
sti
inc
sbb
mov
sub
shr
mov
jbe
jo
inc
xor
jg
xchg
andb
dec
xchg
push
pushf
popa
arpl
cs
pop
andl
mov
mov
loop
les
fdivp
int
jmp
pop
add
cmpsb
xlat
or
pop
sub
cmp
mov
sub
pop
push
mov
push
lcall
int
adcl
cmp
rcr
das
push
xor
stos
sbb
in
int
ror
mov
cmp
ja
xor
sahf
pushf
div
mov
and
jb
cld
inc
ds
lahf
out
jns
xchg
mov
cmp
push
js
dec
push
ljmp
std
subb
and
mov
lahf
bound
inc
mov
xchg
inc
adc
sub
fcmovb
mov
ljmp
or
rcll
cmpsb
pop
sub
push
icebp
addr16
mov
pop
xchg
push
pop
lods
out
or
int3
push
clc
fwait
imul
or
aaa
in
fwait
adc
mov
mov
sbb
add
or
xchg
aad
scas
xor
and
out
mov
jb
xor
leave
hlt
push
pop
adc
adc
scas
mov
pop
mov
icebp
cmpsb
lods
enter
bts
xchg
xchg
test
subb
push
daa
push
xchg
je
fcomps
in
imul
repnz
push
pop
mov
mov
mov
xor
insl
or
outsb
adc
xor
lahf
dec
and
mov
ffree
push
scas
jo
mov
jmp
cmc
xor
jmp
mov
jp
adc
xchg
mov
push
in
add
sbbl
fldt
add
pop
insl
xchg
mov
jne
int3
cmp
pop
mov
mov
xchg
ret
dec
das
test
out
lea
repnz
xor
cmp
cmpsl
test
mov
mov
frstor
repnz
push
call
int3
and
jb
xor
push
adcl
dec
lods
mov
in
sub
xchg
test
adc
clc
adc
and
or
scas
pause
push
push
notl
push
lods
mov
and
sbb
mov
push
sti
int
mov
jns
outsb
xor
mov
scas
pushf
sub
sub
add
push
sub
divb
add
int3
dec
add
bound
fdiv
cs
imul
xchg
in
cmp
mov
mov
data16
lods
xor
xor
ljmp
leave
in
jp
imul
jmp
out
dec
into
hlt
adc
es
call
test
sub
mov
out
mov
rcrb
inc
dec
pushl
pop
mov
imul
pop
out
mov
in
add
movsl
lahf
daa
in
int
stos
pop
out
cmpsb
sti
in
fs
cmp
jmp
lcall
adc
jne
and
sbbb
and
stos
lret
fidivrs
hlt
mov
nop
xor
add
cltd
xor
pop
sub
adc
push
dec
in
pop
xor
xor
push
test
je
jae
jp
push
jp
xor
ror
push
cli
add
jmp
pop
lret
outsb
dec
xor
jo
inc
fwait
inc
pop
jb
inc
test
jge
mov
cmp
xchg
sub
int
cmp
imull
mov
sub
push
pop
sarb
bound
and
pushf
in
pusha
sbb
cmp
mov
ret
bound
sbb
sub
fidivl
stos
and
into
das
sub
mov
repz
sub
jnp
stos
test
fdiv
aam
in
push
and
xor
inc
mov
aad
mov
jno
adc
and
fstps
and
out
scas
ja
or
mov
cmpsb
rcrb
in
lods
icebp
scas
inc
pop
dec
fs
jp
scas
ret
loope
cmp
cwtl
jmp
pop
xchg
inc
pop
cmp
or
pop
mov
adc
sbb
mov
mov
or
bound
xchg
mov
pop
add
push
nop
mov
sub
or
call
loopne
cmp
stos
or
inc
xlat
jb
or
sub
arpl
sub
and
adc
xchg
and
nop
out
sub
push
and
sub
fnsave
adc
movsl
xor
fs
sahf
jne
js
add
decl
xor
push
aad
lods
repnz
push
xchg
pop
shlb
lods
and
push
xor
cmc
mov
jo
insl
cmp
cmp
test
ret
cmp
out
outsl
jecxz
sbb
sti
cmc
pop
add
push
in
pop
mov
fistps
mov
cmp
mov
adc
ljmp
jp
int3
mov
mov
sbb
sti
add
jmp
iret
testl
scas
insb
scas
xor
cmp
jbe
rol
xchg
outsl
jnp
daa
lret
inc
push
mov
mov
mov
jno
mov
gs
jg
stc
push
and
dec
ficomps
pop
cmpsb
cli
inc
test
push
push
adc
mov
aaa
inc
xchg
movsb
inc
ss
xchg
ljmp
mov
cmp
sub
movsw
xchg
loop
mov
dec
cwtl
jge
mov
pop
je
and
negb
fwait
mov
scas
jnp
fucomi
hlt
push
xchg
je
stc
xchg
jecxz
inc
clc
or
nop
call
fstpt
cmp
test
dec
push
movsb
out
shrl
xor
add
in
jno
xor
push
cli
sub
push
xchg
pop
mov
jecxz
mov
dec
int
add
outsl
clc
lea
in
test
pop
test
adc
sbb
xchg
outsl
add
cmp
lea
mov
loope
lea
sub
cltd
decl
sub
and
test
jb
push
pop
stos
es
push
and
ficomps
lea
add
dec
jmp
out
imul
add
xchg
sbb
xor
and
cmpps
dec
mov
pop
leave
pop
sbb
push
push
stos
sbb
or
mov
daa
jle
fbld
pop
dec
loopne
daa
dec
pushf
psllq
mov
push
jae
pop
stos
jmp
imul
rclb
pop
pop
jp
das
mull
inc
cmpsl
mov
out
movsl
dec
lock
das
jecxz
rorl
idivl
sti
or
int3
lea
mov
inc
pop
pop
push
mov
xor
lock
iret
lret
mov
adc
push
insl
popl
xorb
jmp
or
inc
xchg
sub
fsubr
mov
and
jp
fsubs
std
ret
inc
adc
adc
mov
jl
cmpsb
mov
pop
mov
add
psraw
jmp
rcrl
out
lods
pushf
mov
xchg
mov
lcall
push
cmp
dec
pop
stc
shrl
xchg
shll
bound
mov
push
mov
xor
scas
fmuls
add
xchg
push
ficompl
and
stos
inc
mov
mov
jle
in
insb
test
adc
icebp
lcall
push
iret
xchg
ja
inc
inc
push
es
xchg
mov
xchg
pop
push
out
arpl
orl
test
mov
loope
mov
out
or
push
push
sub
stos
aas
add
pop
push
fadds
repz
pop
xchg
cmp
int
test
sbb
xchg
xchg
mov
pusha
mull
dec
test
xchg
aas
aas
mov
sub
ljmp
sahf
dec
pop
ret
mov
roll
push
shll
pop
out
rolb
imul
mov
adc
cmp
je
mov
xchg
lds
repz
scas
mov
push
mov
fnstcw
cmp
adc
mov
mov
dec
enter
popa
mov
in
fisttpll
jl
jl
mov
mov
mov
int
push
mov
cwtl
jbe
xchg
gs
out
outsb
adc
and
sahf
inc
movsl
dec
aaa
adc
mov
in
inc
add
pop
push
scas
xor
mov
inc
mov
std
or
ret
cs
xor
mov
test
pusha
inc
sbb
cltd
jecxz
dec
mov
sub
cmpsl
fstl
mov
faddp
test
mov
outsb
mov
pop
mov
xor
inc
bound
jb
aas
add
or
aas
rcl
or
mov
or
jbe
adc
hlt
mov
xor
dec
mov
cld
or
mov
data16
xchg
add
mov
sbb
adc
pop
and
rcrl
mov
push
leave
jge
divl
jge
movsb
int
mov
out
ss
add
adc
dec
xchg
arpl
in
cmp
leave
dec
adc
or
or
xlat
outsl
notb
ret
sub
xchg
lds
or
lahf
cmp
stos
ja
jmp
xor
mov
scas
push
insb
ja
jl
push
dec
sub
adc
xchg
aad
jl
mov
mov
xchg
jnp
into
test
adc
out
mov
test
and
lcall
pop
push
dec
jmp
xchg
divb
xchg
push
mov
jecxz
mov
stos
add
fsts
rcll
push
outsl
nop
inc
or
mov
test
andl
stc
call
mov
mov
xchg
inc
jne
fwait
lahf
insb
cmp
jbe
mov
mov
add
ja
adc
or
imul
mov
bound
push
lock
xchg
and
jbe
pusha
cmp
rcrl
fs
ret
pop
push
jnp
outsl
adc
cmpsb
call
sub
xor
and
mov
in
add
cmc
adc
xor
mov
or
push
fadds
xchg
icebp
pushf
popa
insl
fisubrl
mov
or
and
sub
adc
shrb
push
inc
rcrb
stc
sub
xor
dec
cmc
inc
pop
cmp
dec
int
lds
scas
jge
movsb
cmp
loope
pop
push
in
push
pop
mov
sub
dec
fcmovne
cmp
nop
or
jne
insl
add
inc
mov
mov
push
fists
inc
andl
mov
sub
pusha
pop
lock
fisubrl
dec
int
push
rol
lds
das
and
arpl
clc
push
icebp
xor
test
pop
xchg
imul
jb
mov
mov
jo
cmp
push
int3
pop
sbb
pop
cs
mov
sti
adc
push
out
sub
bnd
imul
xlat
cmpsb
xor
mov
push
add
aad
cmp
mov
das
lea
push
push
or
in
or
sarb
inc
or
mov
mov
shrb
ret
lods
inc
mov
mov
lods
cs
nop
in
push
dec
mov
test
jle
add
insl
jb
sub
fxch
cmp
inc
push
lds
pop
shrb
cs
cwtl
xchg
test
cmpsb
mov
andb
cmp
repnz
and
adc
adc
inc
notl
aam
fisttpll
xor
iret
sbb
xor
sbb
scas
pop
cmpsb
adc
fmuls
sub
mov
scas
fdiv
imul
pusha
movntq
sub
scas
loopne
cmp
ljmp
ss
xchg
roll
cmp
jp
mov
fwait
push
mov
mov
or
inc
iret
sub
imul
adc
sub
adcl
scas
loop
iret
std
push
mov
xchg
stc
cld
xor
xchg
sbb
push
idivl
xchg
jecxz
rcrb
jns,pt
push
sub
add
or
push
mov
and
sbb
test
adcb
loopne
pop
cmpsl
xchg
ret
mov
cld
sub
mov
jmp
push
dec
add
xor
ret
insb
pop
cmpsl
sbb
xchg
push
pop
pop
mov
mov
clc
ret
sbb
scas
enter
arpl
mov
out
ss
fidivl
cmp
movsb
subl
daa
xchg
bound
bound
push
lahf
mov
push
out
shlb
xor
mov
cmp
out
test
jmp
xchg
loop
pop
pop
pop
ds
shlb
stos
scas
ficoml
cmp
mov
in
out
or
dec
sub
push
cmpsb
roll
repz
inc
cmp
push
mov
jno
movups
mov
push
jl
fnstsw
jns
mov
jmp
pop
sahf
mov
inc
mov
jp
mov
cmpsl
pushf
inc
mov
loopne
fbld
test
data16
mov
pop
lret
lods
outsl
movl
lods
and
fimuls
aas
mov
pushf
jnp
out
pop
mov
cmp
fstps
xchg
stos
repz
mov
lock
test
and
arpl
push
lods
or
ss
cmp
xchg
into
dec
sub
xor
sti
xlat
inc
xchg
stc
daa
mov
rorb
mov
cld
add
xor
insb
bound
ljmp
adcl
aad
pop
jno
mov
sub
test
cli
movsl
imul
mov
mov
das
mov
mov
or
fisubs
arpl
mov
add
lea
jp
test
stos
jecxz
sti
lds
scas
mov
test
and
clc
vpmacssdqh
fcoms
inc
mov
xor
pop
popf
adc
out
mov
mov
mov
popa
sti
pop
ror
mov
mov
cltd
cmpsl
gs
xlat
mov
push
cmp
or
mov
jmp
and
jmp
push
or
or
in
rol
fwait
push
pop
rcrb
add
movsb
testl
divb
insb
inc
fdivrs
hlt
mov
mov
xor
out
pop
sub
dec
cmp
mov
repnz
test
enter
outsb
adc
insb
pop
and
jg
pop
xor
mov
imul
repz
jle
xor
mov
rcll
sbb
push
out
xor
lahf
insb
aam
ret
push
xor
jl
addr16
gs
movsl
sub
xor
mov
jno
out
test
imul
xor
notb
mov
pop
push
pop
fstpl
mov
jecxz
into
out
mov
cwtl
pusha
push
cltd
repnz
sbb
sbb
mov
inc
ret
sbb
repnz
ror
shrl
mov
pop
and
and
mov
xor
dec
mov
ja
jmp
pavgw
scas
mov
or
in
movsl
or
xchg
and
scas
xor
mov
psrld
xchg
push
inc
inc
loopne
repnz
fldcw
mov
movsb
add
mov
xlat
sbb
mov
xor
push
mov
cld
scas
mov
push
outsb
or
xchg
xor
sub
loope
insb
repz
sub
push
std
dec
inc
xor
adc
popf
mov
dec
je
or
shll
adc
push
adc
jne
cmp
xchg
adc
push
subb
andb
cmp
addb
lret
sub
lock
cmovl
adc
cli
aad
icebp
ds
aaa
mov
mov
mov
push
mov
add
dec
testl
mov
cmp
adc
stos
fnsave
movsl
pop
adc
push
dec
mov
adc
sub
mov
shrb
sub
movsb
pop
rclb
cwtl
sub
add
or
out
out
add
mov
dec
mov
lret
xor
push
sbb
sub
add
dec
addl
out
or
mov
cmc
pushf
mov
jb
pop
cmove
incb
icebp
cwtl
fldl
sub
movsl
pop
and
xchg
in
xlat
bound
push
repnz
loopne
pop
sbb
adc
xor
aad
push
pop
decl
outsl
jns
sbb
pop
dec
and
and
scas
hlt
push
pop
pop
and
orb
inc
push
dec
pop
std
pop
sbb
xlat
or
ret
imul
icebp
out
cltd
push
xchg
cs
lock
push
in
inc
mov
cmp
fwait
lods
out
rclb
inc
stos
ljmp
add
jecxz
iret
mov
sahf
xor
popf
jecxz
fcoml
lcall
std
add
mov
movsl
std
lahf
jns
ds
mov
iret
and
sub
sti
push
add
push
mov
imul
push
int3
inc
xchg
stc
inc
dec
mov
dec
lcall
jae
sub
adcb
shr
adc
lcall
les
pop
iret
inc
pop
inc
sahf
stos
in
dec
shll
lea
aas
jb
js
xchg
test
xor
push
push
shll
cs
out
fstpl
decb
dec
je
mov
pushf
imul
jl
and
cmc
cmpl
scas
mov
aas
imul
push
pusha
add
test
pushf
jle
pop
mov
dec
idiv
cmp
mov
cmp
daa
je
iret
xchg
stc
cltd
mov
pop
mov
sbb
and
imul
cmp
sub
or
xor
mov
stos
ret
push
adc
sub
sbb
lret
popa
rclb
in
sub
sub
int
jnp
push
xor
loop
mov
test
addb
ja
jp
mov
in
notb
xor
or
jae
mov
xchg
movsb
xor
in
arpl
push
mov
mov
icebp
cmp
jo
jecxz
decb
mov
arpl
fmull
std
cmp
mov
clc
das
push
lea
adc
ret
out
mov
sahf
xor
dec
inc
dec
fistpll
pop
and
sarl
mov
lahf
ret
xor
xchg
add
inc
cmc
add
shlb
inc
inc
xchg
xlat
lds
mov
je
aaa
mov
fstps
in
adc
cwtl
ss
mov
stc
ja
scas
aam
loope
adc
pop
out
mov
fchs
mov
add
insb
roll
std
and
leave
add
mov
add
dec
repnz
push
add
lcall
adc
orb
inc
sub
clc
dec
cmp
ffreep
mov
xchg
stos
dec
and
repz
sbb
cmp
cmp
dec
cmp
testb
int3
adc
xor
cmc
push
or
aas
fucomp
pushl
push
jno
pop
dec
leave
das
sbb
movsb
out
icebp
inc
xor
xchg
popa
mov
repz
popf
mov
xor
fsts
xchg
repz
jne
fisubrl
sub
sbb
mov
dec
inc
leave
repz
shll
stc
pop
push
xor
add
stos
inc
sub
pusha
pop
out
mov
lds
xchg
mov
inc
cmp
jnp
pop
cmpsl
xchg
push
and
mov
das
jg
inc
inc
add
fstl
dec
int
mov
repnz
or
cmp
mov
in
cmp
push
add
cmp
fistpl
push
mov
pop
inc
push
pop
popa
aad
xchg
addr16
dec
scas
mov
adc
sub
add
movsb
test
jp
jmp
xorl
test
cwtl
out
cltd
fistpl
mov
repz
xor
ret
push
adc
shlb
or
sub
mov
dec
xor
sbb
dec
push
inc
push
adc
dec
scas
cmp
adc
aad
xchg
sub
btc
xor
add
lcall
int3
push
fidivs
dec
outsl
inc
loope
add
cmp
in
mov
xor
xchg
cmp
mov
stos
movsl
adc
inc
push
inc
repz
dec
sub
hlt
clc
negl
shll
int
ret
das
bound
stos
scas
sbb
dec
add
in
mov
adc
sti
cmpsl
mov
sti
imul
sub
aad
push
push
pop
cmp
repnz
mov
sub
dec
ficoms
dec
sub
lret
adc
scas
mov
dec
ficoms
addb
push
mov
mov
sbb
mov
lock
shlb
lea
aad
lock
iret
rol
testb
inc
pop
daa
sbb
lock
in
out
das
adc
fidivl
cs
flds
or
sbb
sub
icebp
lret
adc
dec
leave
inc
and
sahf
xor
mov
pop
push
popl
push
in
jmp
std
in
and
cs
dec
out
push
pop
xor
mov
xor
xor
pop
sbb
imul
ffree
xchg
sub
mov
in
push
ds
rclb
loope
mov
scas
xchg
lahf
aam
lea
and
mov
push
mov
movsl
lods
push
arpl
repnz
into
jp
pop
movsb
push
fucomip
pop
xor
fldl
sub
lods
jbe
jns
jl
addb
sub
sub
shlb
in
sbb
dec
pop
sbb
cmp
cs
xchg
push
movsl
add
je
test
and
leave
aaa
dec
inc
dec
loopne
adc
cmp
push
pop
data16
xor
adc
andl
pop
fdivrs
sbbl
ret
ds
xorb
stos
gs
inc
inc
add
flds
iret
insb
jle
in
adc
std
push
in
inc
xor
sbb
out
insl
in
dec
adc
jae
lret
xor
sti
in
fidivl
xor
pop
xchg
lcall
jae
and
jbe
mov
mov
movsl
aaa
fwait
mov
mov
pop
jl
repnz
fs
cmp
ss
and
addr16
add
push
mov
out
inc
mov
js
rcrl
pop
xchg
pop
adc
sbb
dec
int
fs
es
loopne
lcall
leave
jecxz
aas
xchg
sbb
add
sub
imul
addr16
insl
dec
xor
mov
adc
push
push
hlt
iret
dec
test
ret
mov
cmpsl
adc
adc
rorl
xorb
jl
in
adcb
sarl
lea
and
divb
mov
jp
jbe
and
push
cmc
push
mov
dec
cli
push
ja
inc
scas
mov
mov
adc
das
or
xor
out
inc
inc
add
enter
clc
sub
mov
cld
mov
je
push
negl
mov
jne
in
mov
xor
iret
mov
jp
cli
call
and
sbb
cmp
aad
test
xchg
je
repz
stc
push
mov
cltd
popa
sar
or
jp
mov
cli
sbb
loope
adc
add
mov
lds
pop
outsl
mov
daa
jmp
movsl
fidivrs
bound
call
push
lods
inc
popf
mov
jp
cmp
cmpsl
dec
insl
mov
push
sbb
push
mov
or
inc
sbb
ret
jge
and
add
shld
cwtl
xchg
fisubrl
pop
xchg
int3
repz
lcall
or
adc
xor
mov
xchg
or
jg
add
repz
subb
pop
pop
sti
sbbl
inc
push
clc
mov
fmuls
jle
lret
icebp
xchg
jle
imul
xor
mov
mov
loopne
jb
adc
cmp
mov
arpl
int3
out
rorl
sub
inc
and
mov
lret
cmp
cmp
push
rcll
adc
xor
pop
jp
xlat
dec
cli
fcomip
adc
cmpb
aam
add
sti
fbld
mov
in
enter
jp
adc
cmpsb
lods
idiv
xor
adc
pop
aaa
enter
push
lcall
push
push
das
mov
jbe
sarl
sbb
repnz
xlat
in
in
enter
push
int3
push
jo
jnp
jp
xlat
mov
xchg
adc
hlt
push
and
mov
or
add
movsb
jae
mov
outsb
xor
in
cs
and
push
pop
push
xor
out
andnps
out
xchg
cld
aas
fwait
dec
xchg
test
push
push
loop
arpl
aad
push
jo
push
repz
imul
fistl
jle
dec
rclb
pop
or
icebp
movsl
and
gs
jmp
scas
sbb
pop
outsl
aam
je
push
test
sbb
jbe
mov
push
pop
insb
add
push
aaa
fadds
adc
incl
adc
mov
enter
push
sbb
or
and
xlat
pop
jmp
inc
dec
push
ss
jmp
mov
addr16
loop
xchg
pop
jmp
lods
insl
ds
mov
hlt
and
scas
cmpsb
jge
and
mov
daa
xchg
xchg
imul
lods
mov
jmp
cltd
cs
imul
into
lret
or
jb
into
pusha
xchg
shrb
xor
loop
inc
jle
sbb
jp
daa
inc
bound
jge
jge
jp
outsb
loopne
lahf
mov
gs
les
rorb
mov
test
test
mov
xor
pop
mov
or
jno
add
int
lret
mov
jne
dec
push
fdivs
adcl
adc
push
push
cmp
push
sbb
add
subl
sti
or
mov
xchg
pop
xchg
roll
outsb
jge
lahf
stos
cmp
dec
mov
inc
fstps
mov
jo
mov
mov
je
mov
nop
and
push
add
or
je
jne
or
cmp
rclb
push
sti
and
add
cs
adc
jecxz
push
mov
xchg
or
sti
pop
and
adc
into
fsubrp
and
out
into
aas
mov
loop
sbb
push
jle
loope
mov
lret
sub
and
js
lock
jbe
xchg
fisubl
adc
imulb
sub
out
sahf
lods
insb
cmc
sbb
stos
testl
shlb
in
mov
or
inc
xlat
sbb
ficompl
jl
fildll
jecxz
adc
jmp
pop
inc
sti
lods
fisubrl
sub
in
sahf
sub
test
mov
and
push
jb
inc
leave
es
insb
out
add
mov
cs
es
stos
jne
popa
pushf
pop
mov
cmp
pop
fisttpll
cltd
in
push
mov
jns
cld
sti
add
sub
subb
iret
push
mov
inc
xor
out
nop
int3
lahf
cmp
ja
cmc
jl
cmp
mov
mov
sub
jp
pop
cmpsb
jns
ds
pop
lahf
lods
scas
jg
xchg
mov
popf
dec
daa
pop
jb
fisubl
mov
adc
mov
ficoml
dec
outsl
daa
stos
xchg
mov
mov
ds
sub
push
mov
sbb
xchg
insb
enter
mov
mov
les
jnp
imul
or
fwait
push
jns
pop
inc
loope
das
out
bound
mov
sub
negl
mov
inc
movsb
ret
out
pmaddwd
addr16
add
cld
test
test
andl
mov
xchg
sub
xchg
imul
roll
mov
incb
popf
fiaddl
sbb
fprem
jp
pusha
adc
add
cmp
outsb
cwtl
cmc
rorb
iret
stos
out
dec
add
inc
pop
lock
std
ja
jbe
push
mov
push
fisubs
arpl
lahf
and
enter
dec
push
and
mov
jecxz
pop
pop
stos
lds
xor
dec
imul
dec
cmpsb
rol
inc
sub
sbb
ds
bndstx
push
or
sbbl
out
cmp
enterw
mov
mov
or
pop
subb
stos
sahf
data16
xchg
xchg
out
ret
mov
shlb
or
xchg
push
or
rcl
fistpll
cmp
xchg
fwait
ret
cli
setg
jns
xlat
dec
clc
mov
sti
das
xor
sub
push
popa
call
xchg
nop
inc
inc
sbb
mov
inc
cmp
out
hlt
jecxz
sbb
cmp
push
dec
sbb
mov
mov
inc
lea
out
jl
out
cmp
fisubrs
ljmp
out
jge
pop
inc
sti
jb
inc
or
mov
in
mov
xchg
mov
lds
sub
mov
mov
pop
pop
push
mov
push
out
adc
jle
mul
cmp
test
rcrl
dec
push
xchg
insb
sarl
movsb
test
push
lcall
les
mov
pop
mov
in
daa
push
or
dec
dec
sbb
xchg
in
push
dec
test
or
adc
jno
shr
mov
mov
stos
inc
arpl
or
jae
mov
or
push
inc
push
std
or
insl
lret
adc
jae
cli
jp
loope
or
pop
xor
in
scas
xchg
sub
int
es
bound
arpl
push
mov
addr16
sbb
decb
xchg
arpl
ret
dec
rcrl
add
repnz
mov
addl
jl
ret
aaa
push
in
sbb
es
push
in
roll
mov
cmp
test
mov
xor
movb
iret
or
and
jmp
adcb
xchg
mov
cwtl
xchg
imul
xlat
fcoml
cmp
push
adc
test
shrb
add
cld
es
subb
mov
jg
mov
scas
mov
lahf
mov
mov
sub
les
adcb
sbb
es
adc
xchg
jmp
mov
xor
sbb
lret
xchg
add
mov
pop
out
adc
jmp
sub
push
lcall
xchg
loopne
pop
adc
inc
cmp
xchg
ficoml
mov
lret
mov
sbb
jns
mov
add
jb
xchg
inc
mov
xor
sbb
pop
aad
ja
pop
jge
push
pop
stos
fistps
sub
mov
aaa
imul
jecxz
pop
and
push
arpl
or
pop
pop
add
xchg
mov
jmp
dec
adc
mov
movsb
sub
cwtl
add
jmp
cltd
repnz
push
xchg
je
adc
mov
shll
cwtl
mov
adc
data16
push
jle
loop
add
mov
cmp
insb
xchg
sbb
test
lret
sbb
cld
bound
pop
test
dec
mov
push
jg
bound
mov
pop
dec
push
mov
cs
test
inc
loope
and
jno
adcb
add
push
lahf
nop
mov
cmpl
test
rcll
insb
push
xlat
xchg
xor
pop
mov
pop
dec
inc
pop
arpl
ljmp
lcall
xor
dec
rcrl
and
xchg
out
incl
iret
push
aad
fnstsw
insb
popf
addb
fs
imul
subb
push
adc
jle
jbe
or
jmp
jno
adc
outsl
xchg
loop
sub
mov
xor
sarb
enter
xor
push
iret
inc
xchg
push
mov
add
iret
decb
adcl
inc
icebp
loop
mov
xchg
test
push
fidivs
pop
bound
stc
stos
out
mov
cmc
mov
bound
mov
push
stos
flds
aam
lret
adc
sbb
mov
pop
scas
and
jle
cmp
sbb
notl
out
xor
cld
test
mov
jmp
scas
icebp
dec
lahf
gs
jp
pushf
mov
jmp
or
xor
jecxz
fs
sahf
ror
mov
mov
push
xlat
pusha
or
add
inc
cld
push
push
das
mov
sbb
ja
ret
jnp
jp
mov
jp
add
or
mov
mov
xchg
inc
and
adc
xchg
ror
int3
xor
jo
arpl
rol
popf
out
push
clc
push
lods
push
ret
rcrb
add
test
push
push
pop
push
stc
xchg
xor
mov
sbb
ds
in
or
push
iret
jmp
orb
adc
xchg
out
int
cmp
fldl
pop
lcall
aas
pop
jns
andl
scas
jle
dec
call
fistps
push
add
mov
lret
test
mov
sub
data16
test
inc
sbb
mov
lret
mov
lods
inc
rorl
scas
mov
and
xchg
rclb
inc
fcompl
ret
mov
sbb
mov
adc
jge
jmp
test
ds
and
test
add
lcall
daa
aas
jne
mov
push
cmp
ffreep
cld
mov
mov
lods
dec
imul
or
iret
inc
fnstsw
js
xchg
ljmp
scas
mov
movsb
inc
sti
sub
dec
js
mov
scas
sbb
fildll
std
push
cmp
and
mov
andl
pop
cld
mov
jecxz
cwtl
subb
test
in
cs
ja
aaa
inc
add
dec
xor
into
xchg
ficompl
cwtl
ret
sub
jb
ss
mov
out
cmpsl
jle
aas
add
inc
dec
jmp
mov
hlt
pop
mov
test
xchg
int
loope
shlb
xor
stc
pusha
je
ret
dec
xchg
inc
push
dec
xchg
mov
lods
sbb
dec
inc
sti
xchg
push
add
in
aaa
std
dec
push
out
movsl
jnp
movsl
aaa
cwtl
ffree
arpl
cmp
cmp
xlat
jno,pn
jp
or
xlat
movsb
cmc
test
cmp
pop
or
jbe
inc
push
les
add
push
lock
test
insb
mov
ret
dec
pushf
repz
mov
add
jmp
psubb
imul
sub
mov
mov
dec
int3
repz
test
ret
xchg
mov
and
cmp
test
scas
enter
insl
inc
cltd
js
out
loope
in
add
test
scas
push
clc
and
repnz
push
cmp
pop
dec
mov
push
fdivrp
adc
insl
jnp
ror
sti
jg
ret
or
int3
aad
add
bound
loop
popa
adc
movsb
mov
adc
iret
div
shl
scas
pop
into
mov
xchg
sar
cli
add
mov
shrl
cmp
cmp
mov
pop
imul
loope
in
xorl
mov
scas
jl
fdiv
dec
scas
xor
jge
sub
mov
jb
jno
fbstp
xchg
clc
xchg
and
data16
daa
nop
loopne
inc
aaa
push
aam
call
shr
jbe
xor
mov
ja
enter
xor
jbe
cli
add
cmp
xchg
out
in
pop
or
push
xor
arpl
pop
sahf
es
mov
xor
jnp
pop
lcall
stos
xor
arpl
xchg
ret
push
and
popa
pop
adc
pushf
mov
dec
pop
div
sbb
push
jb
cmp
stos
pop
and
cmp
inc
in
jae
xor
div
mov
or
pusha
and
iret
and
loope
and
stc
jle
in
add
and
and
neg
push
xchg
xchg
ljmp
rorl
push
cld
jne
push
stos
test
mov
mov
test
stos
in
call
xor
mov
mov
xlat
mov
and
lcall
xchg
mov
add
xchg
xchg
add
imul
xlat
insb
push
push
jp
adc
mov
in
jmp
pop
lock
mov
cmp
mov
dec
call
adc
fisubrs
cld
shrb
inc
mov
dec
pop
xorl
insl
adc
fisttps
fidivrl
lock
fistpl
dec
sbb
jp
or
fsubrl
ret
cli
rorb
sbb
insb
jl
shrl
xchg
mov
pop
cmp
or
or
sahf
in
cmp
sub
call
repz
std
aaa
hlt
into
mov
jge
bound
inc
inc
push
arpl
stc
jg
cmp
inc
mov
cmc
and
stos
data16
bound
xchg
mov
cmp
cmp
aaa
loopne
push
hlt
into
inc
fidivrl
pop
sar
lea
in
sbb
lods
mov
mov
mov
fistps
in
and
ljmp
adc
mov
dec
jae
xchg
and
push
int
test
rclb
cwtl
dec
add
ret
mov
aas
mov
dec
jecxz
out
xchg
adc
push
cmpb
and
inc
mov
movsb
mov
jg
insl
dec
or
lret
mov
add
dec
mov
sbb
pop
xor
jnp
or
mov
mov
add
or
xor
mov
push
lahf
cli
test
push
loop
std
cmp
shrl
xchg
fwait
cltd
push
sbb
cmove
rorl
and
das
mov
enter
enter
lods
lds
or
scas
mov
rclb
sub
jno
fidivs
jg
movsl
stos
mov
push
imul
insb
iret
mov
scas
leave
and
aam
mov
jnp
push
jbe
js
sbb
push
mov
sbbl
fdiv
fs
in
xchg
dec
inc
push
in
ret
lcall
jmp
mov
shll
jns
hlt
shrl
adc
cmpsl
mov
add
dec
icebp
jo
popf
decb
sarb
add
test
xchg
push
decl
sub
int3
andb
cli
aas
div
bound
mov
jo
xor
adc
xchg
das
lahf
pop
sbb
cmp
sub
dec
test
and
jne
outsl
dec
js
mov
dec
xor
in
aad
test
popa
xorl
pop
sarl
jge
scas
and
sarb
xchg
rcr
scas
int
push
lahf
jne
out
xor
jne
or
pop
fcomi
jns
cmp
es
pop
and
sbb
add
pusha
stos
push
ljmp
push
sub
cmp
stos
dec
mov
cmp
xchg
cltd
or
jnp
lcall
fwait
fwait
dec
sbbb
xchg
adc
mov
pop
sub
fists
mov
inc
pop
xor
gs
xchg
ret
mov
sbb
xchg
enter
mov
sub
pop
in
cmpsl
jb
xchg
add
mov
mov
out
sbb
add
leave
addr16
movsl
sarl
dec
pop
dec
dec
inc
iret
neg
popf
pop
popf
arpl
mov
mov
into
jmp
insb
push
js
sbb
in
xor
jmp
sti
lret
repz
add
jmp
mov
ja
cs
push
or
shlb
push
adc
xor
sub
jne
rcrl
and
loope
fldenv
nop
adc
nop
sahf
sbb
lods
nop
jnp
xor
mov
xchg
orb
push
adc
insb
std
inc
cmp
sbb
scas
xchg
inc
jbe
sub
xor
out
idiv
dec
inc
pop
adc
cmp
divl
popa
push
and
into
roll
mov
add
adc
dec
fwait
push
adc
inc
sub
fwait
inc
inc
jns
xchg
pop
lret
repnz
nop
mov
les
inc
sbb
pushf
sbb
fldlg2
jge
dec
ljmp
mov
pop
ret
jg
movsb
cmp
fldenv
jnp
stos
stos
into
mov
aad
loope
pop
or
add
cmp
pop
mov
inc
cld
adc
popa
aas
lods
sbb
adcb
outsl
mov
jmp
or
mov
cs
add
mov
inc
bnd
out
insl
insl
mov
xor
sti
mov
mov
clc
mov
stos
insl
mov
pop
stos
add
xchg
mov
lea
sbb
push
mov
sbb
sub
test
push
pop
inc
mov
dec
fwait
mov
cmc
je
xor
cmp
gs
imul
mov
repz
sub
and
stos
or
mov
jns
add
loop
mov
push
lock
adcb
mov
insb
xlat
jb
and
push
mov
add
push
sbbl
sbb
and
rcl
adc
or
xchg
mov
xchg
sbb
shl
repnz
jb
cli
cwtl
fwait
sbb
jne
pop
pop
mov
cli
sti
jle
nop
loop
or
shl
mov
sahf
into
cld
mov
mov
mov
fmull
int
data16
movsl
vaddss
cmp
and
add
inc
imulb
out
in
jmp
dec
outsb
pop
out
xchg
std
xor
insl
sbb
orb
jne
push
popa
scas
data16
and
std
flds
jmp
leave
fst
sub
lds
and
sub
je
cmp
pop
in
les
inc
jne
ret
mov
mov
int
push
jb
xchg
call
push
xchg
shrl
shrl
push
orb
cmp
add
pop
int3
xchg
and
outsl
pop
cmpsb
outsl
fistl
dec
dec
add
stos
xor
sub
inc
into
jmp
daa
adc
int3
mov
iret
add
nop
ret
push
xchg
cld
inc
jo
xor
stos
mov
repnz
cmp
mov
aam
push
daa
popa
jne
jmp
mov
xchg
push
int3
test
inc
mov
adc
xor
xor
cwtl
sbb
mov
mov
ds
in
lods
in
shlb
pop
push
int3
dec
xor
pop
mov
inc
sti
xchg
sub
mov
mov
mov
add
imul
inc
inc
adc
rclb
les
notl
or
sarl
arpl
movl
call
iret
or
out
xchg
dec
mov
ljmp
ret
jb,pt
mov
mov
dec
cmp
xchg
imul
cmp
xchg
sbb
pop
je
xchg
shlb
dec
js
bnd
das
mov
mov
inc
lods
add
sbb
cmp
mov
cmp
add
and
stc
enter
in
mov
ljmp
and
adc
fsub
arpl
fldl
out
adc
jg
pop
sbb
mov
sbb
jns
pop
mov
fs
pop
pop
sbb
call
pusha
and
inc
mov
inc
aam
arpl
loope
rorb
mov
ret
mov
cmpsl
push
pop
push
mov
cmp
rclb
call
es
lret
jbe
push
mov
adc
jp
in
insb
in
call
xchg
faddl
das
sub
arpl
sub
dec
test
orl
push
je
inc
jecxz
cmpsb
jns
add
push
xlat
sbb
lods
sbb
je
or
roll
xchg
pop
jg
xor
pop
pusha
cs
mov
idivl
cli
push
add
aas
fistl
cltd
jle,pn
imul
aaa
cmp
sub
cmc
es
pusha
xchg
out
xchg
mov
or
addl
mov
mov
sbb
testb
xor
lahf
shll
inc
cli
xor
xchg
mov
sbb
loop
aam
mov
popl
out
xchg
adc
addr16
dec
flds
dec
sbb
repnz
sub
and
test
xchg
scas
sub
cwtl
ret
test
cli
cs
lock
movsl
push
pop
rclb
cmp
je
jle
dec
callw
out
fs
arpl
ret
pop
lds
repnz
jno
and
addb
cli
mov
insb
dec
mov
inc
jae
aaa
incl
or
push
mov
aas
pop
and
push
inc
inc
ficoml
xor
mov
pop
loop
jns
adc
adc
and
test
and
push
and
inc
mov
scas
hlt
inc
xchg
cmpsl
sub
jmp
xor
xor
mov
lock
jb
and
xor
or
out
rcl
sbb
std
pop
or
xchg
clc
sbb
cmp
in
jge
ss
adc
ret
adc
nop
sbb
push
cmp
cmc
mov
test
rolb
inc
mov
dec
or
jecxz
in
lock
mov
jg
xor
push
cmp
cmpsl
mov
or
inc
dec
mov
in
adc
std
xchg
flds
cmc
outsb
loopne
mov
pop
xchg
insl
inc
leave
sbb
mov
and
pop
icebp
mov
xchg
out
pop
mov
and
jne
sbb
xor
push
pop
jp
mov
call
or
pop
mov
idivl
enter
mov
jg
dec
mov
mov
loope
mov
arpl
daa
movsb
cmpsl
adc
lcall
repnz
inc
icebp
pop
push
lcall
cmp
push
bound
or
jmp
int
mov
lret
std
mov
pop
lods
mov
popf
push
inc
cwtl
std
or
and
mov
test
orl
in
sti
mov
pop
push
mov
and
pop
sti
or
dec
mov
aas
mov
mov
mov
jp
sti
mov
movsb
pop
xchg
out
sbb
imul
sbbl
and
movsb
push
sbb
test
or
scas
rol
mov
xchg
pop
enter
jbe
pop
mov
mov
movsl
cmp
lcall
mov
andl
sub
fwait
mov
negl
sbb
xchg
cmp
shlb
leave
xchg
mul
cli
mov
hlt
ss
mov
insl
rcll
mov
ss
xor
dec
adc
imul
addr16
jo
cmpsl
sar
mov
xchg
xchg
outsl
push
call
lret
mov
pop
shrb
ret
pop
pop
imul
pop
jp
cmp
push
cwtl
adc
lcall
lods
pop
mov
mov
divl
out
loop
out
dec
sbb
mov
es
xor
sub
aam
clc
lret
dec
xor
fsubrp
sbb
insb
cmp
aam
sub
daa
sub
jne
mov
jge
add
pop
pop
insl
mov
or
pop
dec
lea
mov
dec
clc
ss
pop
in
mov
pop
jle
and
inc
cmp
jbe
ret
out
xor
adc
jo
in
cmp
cmp
mov
xchg
sbb
sbb
sti
loopne
jmp
cmpl
mov
iret
cmpl
stc
mov
in
mov
sti
cmpb
ret
mov
fwait
push
cmp
mov
cmp
aas
inc
les
test
testb
mov
jno
enter
lods
mov
xchg
jae
into
mov
lahf
imul
pop
fidivrs
imul
xor
xor
js
pop
mov
adc
insb
sub
or
push
xlat
movsl
mov
and
mov
cwtl
xor
test
mov
loopne
adc
loope
pop
call
xor
outsb
out
mov
pop
out
fbld
lods
sub
insl
sahf
dec
cmpsl
fstpt
stc
pop
push
or
push
in
sbb
mov
enter
add
mov
iret
pop
mov
inc
fcmovnbe
mov
imul
dec
aas
adc
sub
je
popa
or
fldl
and
popa
cmp
push
stos
repz
cmpsl
shll
int3
shll
xchg
mov
adc
icebp
sbbl
sub
mov
add
test
inc
fld
fwait
push
and
or
jo
add
xor
repnz
scas
cmc
in
xor
push
lret
add
push
scas
jne
or
outsb
ret
sbbl
pop
lret
add
cltd
shlb
shlb
pop
gs
aas
mov
xchg
cld
fldcw
pop
cwtl
cmpsl
sbb
sbb
sti
cwtl
jle
push
pop
cmp
xor
mov
xchg
xor
xchg
sub
scas
mov
push
mov
jg
push
mov
sbb
sti
in
out
mov
dec
icebp
cmp
stc
and
xor
test
pop
xlat
sbb
and
cltd
mov
sbbl
rcrb
push
popf
cwtl
cmp
xor
mov
mov
ror
lcall
test
lods
pop
scas
lret
adc
test
mov
mov
jmp
fdivs
jg
sbb
and
fwait
test
mov
cli
in
cli
sub
xlat
mov
xchg
jns
into
mov
fdivs
jnp
sbb
cmp
mov
insb
ret
cltd
and
jle
sbb
xlat
aad
pop
mov
aas
mov
fdivrl
push
jno
test
stos
sub
bound
and
jno
test
mov
adc
mov
adc
ret
mov
pop
cmp
cmp
iret
mov
scas
inc
add
std
xor
dec
out
popf
hlt
fistpl
cwtl
out
inc
add
jbe
cltd
push
dec
pop
and
sahf
testl
es
sub
push
add
dec
dec
xchg
dec
sbb
sub
imul
fs
add
addr16
out
push
xchg
xor
andb
cmp
bound
notl
xor
xor
sbb
rcrb
lcall
mov
adc
gs
lcall
inc
sbb
leave
rorb
cmc
in
ficompl
sub
mov
dec
cmp
mov
sbb
je
dec
mov
lods
adc
daa
pusha
daa
xor
subl
in
fadd
ror
xchg
aaa
jno
push
cli
add
push
push
in
jnp
xor
into
mov
fnstenv
dec
jp
xchg
xchg
sbb
push
fcmovne
ret
or
mov
xchg
in
xor
lods
addb
loopne
ja
sti
dec
jmp
cmp
add
ss
dec
sti
xchg
cmpsl
mov
or
jg
loop
adc
mov
loope
or
aad
or
repnz
cmp
hlt
pop
hlt
shl
mov
inc
sub
sbb
push
push
xor
xchg
dec
add
stos
mov
inc
scas
pusha
fcoml
in
int3
cmpsb
inc
fisttpl
jne
popf
xchg
mov
mov
scas
xor
xlat
iret
adc
faddl
popa
mov
pop
lods
xchg
pop
lahf
push
data16
jmp
iret
repz
and
pop
inc
push
dec
ret
jge
cmp
scas
xlat
push
fs
cmp
mov
into
push
ret
mov
pop
pusha
bound
dec
cltd
cli
int
add
into
stc
fimuls
mov
stos
dec
sbb
test
stc
push
stos
gs
and
cli
xor
mov
add
inc
movsb
test
jbe
mov
mov
mov
xchg
adc
sub
jnp
subb
jmp
arpl
mov
pop
and
xchg
test
mov
std
mov
call
jg
loopne
enter
dec
shll
adc
icebp
jle
xlat
and
or
fcoml
dec
sbb
mov
je
ror
ja
sub
add
mov
push
add
pop
fsubs
lea
pop
fsubrs
cmc
mov
jl
push
loop
pop
xchg
imul
mov
push
pop
jnp
xchg
mov
mov
lds
xlat
jne
jecxz
mov
out
fisttpl
sbb
mov
jle
or
int
ljmp
out
jp
mov
and
mov
push
mull
test
fucomip
int
cli
jnp
popf
jnp
cmp
adc
pushf
imul
inc
ficompl
outsb
lods
jno
insl
mov
adc
bound
jno
cmpsl
jecxz
dec
mov
lret
mov
adc
dec
fs
push
cmpb
ret
lods
lock
jle
test
sahf
int3
subl
shl
leave
mov
leave
mov
out
pusha
inc
dec
jbe
fnstenv
xchg
pop
leave
mov
lahf
mov
test
xor
or
imul
test
stos
mov
aam
mov
pop
shll
jns
outsl
sbb
jne
jp
or
xchg
dec
jg
divb
in
shl
pop
subl
push
jno
leave
insb
pop
push
gs
test
cmp
pop
sarl
ss
ljmp
pusha
iret
jecxz
mov
enter
loop
xor
or
pop
adc
pop
cmpsl
pushf
dec
jle
adcl
ss
ret
imulb
pop
loopne
mov
sbb
xchg
pop
insb
dec
je
es
jae
jge
lret
imul
pop
pop
insl
lcall
xchg
mov
jg
mov
cmpsl
add
mov
nop
jbe
mov
push
popf
dec
mov
sbb
aas
pop
ficompl
das
loope
or
xchg
mov
mov
icebp
sub
mov
mov
pop
cli
out
xchg
and
push
fldl
mov
or
xchg
sub
ror
call
jae
pop
into
mov
jp
xchg
ss
lea
push
mov
test
adc
popf
mov
mov
test
xchg
pop
fadd
ljmp
ja
xor
cmp
hlt
insl
loop
mov
fdivl
push
out
sub
or
hlt
and
dec
dec
sbb
and
movb
dec
int
iret
es
jnp
stc
stos
mov
andl
adc
cmp
sbb
sub
jmp
jge
shlb
std
leave
out
sti
mov
xchg
mov
push
pop
clc
sub
ss
cmpsb
jg
ja
cmp
jo
out
mov
lcall
xchg
leave
add
testl
inc
push
loopne
fidivs
cmp
and
sub
xlat
adc
fdivl
or
imul
adc
pop
idiv
sbb
sbb
mov
lea
inc
push
fidivl
or
je
jle
loop
add
sub
les
xchg
and
inc
sub
negb
cli
hlt
dec
or
jge
out
mov
dec
pop
and
mulb
imul
mov
adc
and
test
outsb
inc
xchg
sbb
push
int3
and
xchg
cmc
sbb
loope
pusha
push
xchg
dec
mov
lock
xor
mov
in
sarl
addb
ret
out
sahf
icebp
icebp
mov
push
mov
xor
repnz
xchg
fdivs
sbb
lret
xor
stc
xchg
js
repz
inc
or
dec
mov
sbb
shlb
push
pop
cltd
dec
sbb
into
sti
in
sub
cmc
js
lret
mov
std
sbb
xor
cwtl
notb
scas
jle
cli
in
scas
loopne
nop
xor
lret
in
jp
stos
ss
cs
pop
add
test
outsl
leave
rol
cmpsl
jg
mov
inc
and
sub
pop
stos
fldcw
imul
push
repnz
inc
cli
data16
adc
sbb
adc
mov
cmp
aas
mov
mov
scas
dec
mov
mov
xlat
fwait
and
das
out
fnstsw
aam
sarb
mov
fsub
std
or
sub
iret
ret
scas
and
lahf
mov
movsl
aam
jns
or
jae
or
repnz
push
push
in
les
or
and
inc
psubw
dec
fdivrl
mov
loope
xchg
cmp
add
sub
rolb
adc
aaa
inc
push
adc
mov
sub
xor
sub
out
and
xor
push
push
mov
add
mov
sbb
jp
push
cmpsl
call
sbbb
in
js
jg
jno
rcrl
mov
je
das
lock
add
adc
push
repz
jne
test
sbb
js
jmp
push
lds
incl
jbe
xchg
rcrb
test
dec
faddp
mov
mov
cld
fs
mul
daa
mov
cmp
push
fimull
ljmp
addl
lods
stc
pop
cmp
iret
adc
mov
xchg
push
fisttpll
iret
nop
and
xchg
adc
sbb
add
add
add
add
add
add
inc
and
cmp
ljmp
scas
in
sahf
inc
int3
scas
inc
and
cmp
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
jae
jge
jns
and
cmp
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
imul
adc
add
addb
add
add
or
add
jle
hlt
cmp
dec
add
les
jns
add
loopne
nop
add
add
add
add
add
lock
add
add
jnp
and
xchg
pushf
and
data16
sbb
ja
xor
xor
xchg
dec
pushf
out
or
sub
in
sub
mov
loope
out
fwait
movsb
add
mov
test
mov
scas
or
adc
adc
pushf
jle
or
enter
out
ja
paddusb
ss
adc
sub
adc
seto
sar
jmp
mov
bound
push
lods
add
jecxz
push
sbb
xchg
push
xchg
xchg
icebp
xor
jne
movsb
push
fsubp
add
loop
mov
movsl
shll
mov
sub
lret
idivl
cli
int3
movl
sbbb
push
std
jbe
sbb
pop
add
jbe
mov
out
and
es
adc
cmp
sub
nop
fs
jns
cmp
test
js
movsb
nop
stc
add
xchg
rorb
mov
test
push
ss
and
shlb
les
push
cmp
hlt
repz
or
adc
mov
jb
insb
jl
fcmovne
inc
or
ss
loopne
xchg
sbb
dec
cmp
xchg
fsubrs
mov
or
xchg
rolb
xchg
inc
shll
or
js
mov
mov
xor
lahf
icebp
lret
cmp
leave
pop
js
dec
testl
or
pushf
fstps
ss
sti
outsb
das
pop
push
test
jmp
pop
pop
outsl
icebp
push
xor
push
fiaddl
int3
sbb
sbb
xor
enter
loopne
mov
cmp
mov
mov
fdiv
lods
inc
cmc
stos
mov
cmp
test
das
adc
pop
iret
rcll
outsb
push
ret
test
pop
icebp
rcll
repnz
push
fdivr
mov
mov
aas
and
mov
mov
xor
rorl
mul
adc
fists
les
adc
negb
dec
imul
jne
xchg
dec
adc
ja,pt
sbb
and
mov
xor
subb
nop
jno
xor
mov
xchg
into
fldenv
push
into
imul
icebp
jbe
mov
mov
inc
adc
imul
cmp
push
clc
mov
mov
add
mov
fisubs
cmpsb
fildl
pop
xchg
adc
sub
jb
pop
mov
addr16
aad
popf
pop
in
into
xlat
jg
dec
mov
xor
sbb
fwait
stc
cwtl
stos
inc
test
xchg
nop
xor
repnz
inc
jg
pop
test
inc
jns
aaa
jg
sbb
add
lock
cmpxchg
testb
shll
jmp
ljmp
or
xchg
insb
ret
mov
push
and
aam
data16
push
out
xor
cmpsl
imul
mov
sbb
pusha
inc
mov
pop
int3
dec
aas
xor
out
cmp
inc
xor
inc
pop
cmp
repnz
stos
lcall
in
xchg
dec
dec
sbb
arpl
stos
iret
jmp
jge
or
add
test
adc
loop
into
aaa
pop
sbb
das
adc
fdivr
cmpsl
jp
rcll
imul
faddl
sub
pop
subb
sahf
mov
loope
inc
enter
sub
cmp
out
rorl
sbb
mov
and
jecxz
xchg
ficompl
in
add
sbb
nop
xorl
mov
loope
jnp
push
sub
lods
lock
stos
and
cli
cmp
mov
test
mov
enter
mov
jno
aaa
cmp
jae
arpl
adc
push
add
shrl
mov
in
fsubs
mov
ret
mulb
fs
inc
insb
sti
sbb
cmp
repnz
sub
ja
pop
cli
xchg
push
int
mov
add
mov
into
mov
roll
fwait
mov
dec
mulb
xchg
lods
shll
clc
xlat
aad
xchg
lcall
jmpw
xchg
cld
out
lods
or
inc
shl
adc
pushf
repz
inc
cmp
dec
sbb
stos
xchg
xchg
jbe
mov
loopne
cmpb
mov
push
add
push
lret
loopne
inc
xchg
sbb
test
shlb
sar
int3
mov
movsl
sbbb
cmp
into
sahf
push
daa
adc
push
aam
push
xor
jp
cmp
pop
mov
mov
loopne
jecxz
and
icebp
inc
rorb
imul
lea
cmpsl
lock
push
icebp
jno
jno
ja
jo
hlt
movsl
cmpsl
scas
sti
mov
mov
pop
xor
aad
jae
xchg
jbe
dec
jmp
xchg
push
in
dec
jns
jno
fldl
and
fwait
icebp
push
push
in
mov
add
dec
cmp
push
les
inc
xor
inc
cmp
gs
imul
fldt
std
dec
enter
cmp
and
push
mov
dec
nop
pop
adc
inc
mov
subb
jl
test
or
inc
aaa
stc
sbb
repz
in
fstps
loope
in
out
xchg
mov
sbb
lret
lret
and
popa
fmuls
xor
cmovnp
ja
inc
jle
jne
call
inc
lds
jp
cld
fwait
pop
xor
icebp
or
pop
add
cmp
mov
sub
xor
inc
push
loop
dec
push
push
mov
jecxz
jecxz
cmp
addl
push
int3
popf
sti
mov
pop
or
cmp
lret
daa
mov
dec
sahf
sbb
in
add
mov
push
arpl
push
mov
cmpl
jne
mov
mov
pop
das
jnp
sbb
and
push
jg
hlt
out
inc
addb
les
psubq
push
sub
std
int
mov
daa
sub
sbb
xchg
inc
jne
aad
jae
mov
jp
jl
sub
pop
pop
call
sub
aaa
pop
mov
es
addr16
sub
arpl
push
movsl
fdivrs
sbb
das
pop
gs
add
cmpsl
icebp
out
fdivrs
sub
testb
inc
xlat
mull
xlat
popf
add
or
pop
adc
testb
fld
xchg
sti
insb
jmp
jmp
xor
inc
icebp
adc
mov
pop
mov
mov
mov
lock
cmp
mov
jae
mov
jp
stos
loop
lea
inc
stos
add
sbb
xlat
out
orb
cli
out
pop
bound
leave
hlt
inc
add
xor
sbb
adc
pop
into
mov
addl
fwait
dec
push
shrb
mov
stos
xchg
flds
sub
sti
sarl
sub
repz
mov
negl
ja
loop
and
ficompl
out
call
sbbl
pop
and
jnp
arpl
mov
negl
jl
imul
or
push
cld
dec
es
and
adc
sbb
test
sbb
pop
or
xchg
out
adc
pop
aaa
lock
aad
jl
pusha
xlat
adc
inc
dec
in
dec
cmp
adc
sbb
loop
rclb
jnp
cmp
mov
adc
jnp
popf
mov
test
xchg
jg
or
dec
jbe
mov
sbb
adc
popf
jmp
into
xchg
decb
out
cwtl
xor
push
icebp
pop
stos
push
int3
add
hlt
ret
pop
mov
sbb
scas
mov
add
inc
out
movsl
les
xchg
mov
push
mov
ds
sub
ja
cs
in
and
bnd
dec
cmp
dec
hlt
fisubl
pop
inc
pop
mov
mov
lret
jno
mov
sbb
mov
and
or
xchg
push
jbe
mov
sti
int
xor
mov
addb
pop
loopne
jle
in
cs
sti
sub
sahf
jns
push
test
mov
adc
aam
loopne
scas
pusha
cmp
je
mov
inc
loope
push
enter
fdivrl
fisubrs
xorl
insb
outsb
xchg
testb
enter
xchg
cmp
jo
xlat
add
dec
rcrl
mov
push
mov
roll
xchg
les
repnz
mov
inc
inc
imul
hlt
add
pop
out
cmc
es
lret
mov
int
sbb
ss
je
sbb
lods
push
sub
aad
jb
sbb
repnz
sbb
or
test
jne
add
pop
hlt
sbb
rcrl
lret
outsb
iret
loopne
out
aas
push
xchg
lods
cli
sbb
sub
test
push
sbb
ds
jg
sub
insl
pop
hlt
add
and
jns
and
cld
push
pop
pop
mov
jmp
jp
fcomi
mov
lods
push
in
dec
ss
mov
ret
cmpsl
into
jo
mov
mov
jp
dec
ss
push
jns
loopne
sub
lret
iret
mov
pop
sub
mov
sbbb
mov
pop
cmp
push
and
mov
ja
lods
mov
lock
loop
cwtl
adcl
push
out
stos
sbb
rolb
push
pop
cmpsl
cli
loopne
jg
jg
pop
in
pop
aaa
out
in
movsl
out
mov
mov
push
mov
lock
cwtl
mov
pop
aam
mov
cmp
sub
aas
or
int
enter
cmp
add
cmp
mov
nop
testl
mov
adc
aad
fwait
xchg
xor
cmpsl
cs
dec
and
cld
sti
or
je
mov
mov
shlb
dec
ljmp
pushf
adc
int
out
dec
inc
int3
inc
in
mov
jbe
add
rcrb
pushf
pop
decb
rcll
adc
push
sub
addl
cmp
dec
movsl
mov
sbb
dec
mov
mov
dec
fwait
sti
mov
inc
cmp
cmpsb
push
hlt
fnstenv
xchg
mov
pop
or
mov
out
cmc
aas
push
add
mov
pop
rorb
sub
sbbb
dec
mov
adc
dec
ror
mov
ss
in
dec
xchg
lcall
mov
icebp
xlat
lcall
add
test
shl
push
push
push
jns
xor
stos
bound
imul
jnp
adc
int3
pop
cmp
mov
hlt
pop
mov
lods
ljmp
jne
inc
ja
je
ss
lret
pop
pop
pop
sbb
mov
insb
je
inc
mov
decl
mov
dec
or
push
sti
or
jne
sti
jnp
stos
loop
pop
push
into
in
faddl
xchg
sub
cmp
scas
lods
movsl
jg
pushf
sub
pop
push
mov
enter
push
out
cmpsl
loope
xor
adc
fistpll
lods
push
enter
sahf
aaa
ja
cli
in
das
jnp
int
mov
jle
pop
movsb
mov
and
shl
jmp
pop
outsb
push
out
push
jmp
mov
add
aas
leave
pop
add
mov
push
cmp
xor
aas
adc
dec
outsb
sbb
popf
arpl
pop
shl
push
mov
jo
push
rcll
aas
mov
movsl
add
sub
cmp
imul
subl
ret
cmp
cmp
enter
aaa
insl
stos
dec
stos
ss
dec
push
jnp
aaa
push
test
inc
push
fcoms
mov
shlb
push
call
mov
sbbl
pop
and
fs
jg
mov
mov
add
and
and
sub
es
mov
aad
shr
les
ret
data16
sub
jp
jne
mov
jmp
ja
xchg
dec
jg
cmpb
test
xchg
shrb
jp
mov
fstpl
aad
leave
cmp
dec
push
add
les
pop
outsb
in
ret
cmp
out
repz
pop
and
fcomip
push
sbb
dec
aam
imul
js
sar
jnp,pt
xor
mov
sbb
dec
and
push
faddl
data16
addr16
lods
testl
je
inc
push
movsl
jl
shrb
outsb
push
cmp
inc
add
fucomp
xchg
outsl
stos
das
imul
add
push
inc
pushf
push
aaa
outsl
xchg
pusha
xchg
add
mov
pop
dec
and
fwait
mov
xchg
mov
out
xorl
je
xor
xor
icebp
pop
inc
sbb
xor
push
sub
push
mov
inc
sub
push
cmp
ljmp
int
mov
sub
out
push
mov
pop
inc
mov
test
iret
mov
dec
bound
sbb
daa
jl
leave
fldt
inc
fwait
xorb
pop
dec
jbe
out
xor
sub
scas
and
ja
pop
or
testb
cmp
mov
mov
adc
push
push
cwtl
aam
fidivrs
popf
jge
bound
or
imul
out
xchg
cmp
xorb
cmp
inc
or
push
arpl
ret
push
pop
jnp
jle
in
daa
insl
push
mov
jae
dec
xchg
lret
aam
jle
imul
push
pop
pop
ret
dec
into
sub
shl
nop
pop
jno
or
mov
int3
adc
dec
data16
out
sub
push
mov
nop
xchg
inc
loopne
arpl
sub
insb
mov
les
clc
inc
lcall
mov
and
xchg
int3
mov
aaa
xorb
add
in
jecxz
pop
cmpsb
aaa
dec
jns
loope
int
lahf
sti
lods
jns
adc
cmpb
mov
sub
or
push
pop
call
add
inc
xchg
outsl
adc
push
xchg
iret
jno
test
add
mov
pop
mov
xchg
sbbb
aaa
xchg
and
mov
cwtl
shrb
stos
in
sub
xchg
cmpsb
hlt
aad
enter
push
xchg
or
jns
mov
mov
cs
mov
fdivrl
mov
outsb
jecxz
mov
xor
push
pop
cmpsb
movsb
in
inc
push
lahf
movsb
xor
xor
outsl
add
dec
xchg
lds
or
adcl
mov
push
pushf
mov
js
dec
std
div
cmp
jo
push
or
jnp
outsb
enter
shlb
xchg
lahf
xor
lods
rcr
push
addr16
je
jo
scas
stc
pushf
mov
dec
inc
js
lahf
and
les
jecxz
cmp
popf
jl
mov
ja
jnp
arpl
adc
ja
es
adc
dec
mov
shlb
push
push
test
lds
add
push
add
cmp
push
lret
mov
call
sub
test
lock
sub
pusha
xchg
gs
xchg
mov
outsl
fistpll
sub
add
sbb
ss
data16
push
das
ror
and
sub
and
loope
dec
cs
frstor
mov
and
jmp
mov
push
loope
scas
in
inc
jno
jp
cwtl
mov
dec
jno
pop
lods
adc
cmp
movsb
into
xorl
sti
bound
fdivl
movsl
xchg
adc
jo
out
xchg
sarb
pop
pop
fisttpl
sub
fwait
push
pop
fwait
or
fimuls
xor
pop
sbb
adc
js
xchg
adcb
cs
popf
adc
adc
pusha
mov
outsl
fwait
jge
shll
cwtl
and
scas
sbb
or
mov
ror
pop
aad
hlt
out
test
repz
add
les
mov
mov
xchg
int
rolb
cwtl
inc
lret
in
loop
cmpsl
cmp
int
or
popf
sti
jmp
pop
mov
push
xor
fbld
sbb
scas
add
scas
add
pop
mov
jb
and
stc
out
jb
mov
sbb
mov
in
aad
ss
out
jl
rcrb
insl
jbe
std
es
stos
roll
aas
fstps
jge
xor
std
add
adc
mov
icebp
mov
cmpsb
call
out
jp
cmc
push
arpl
jb
push
push
inc
mov
rcll
and
mov
add
inc
loop
stos
mov
mov
mov
push
jecxz
jl
add
cltd
sub
aam
popa
add
out
mov
ret
fcmovnbe
enter
pop
out
ljmp
cmp
mov
mov
sub
push
inc
jo
inc
xchg
xchg
or
nop
insl
lock
push
cmp
jo
imul
dec
insb
bound
daa
and
lods
pop
clc
jmp
sbb
int
mov
fsubrl
pmullw
rorb
or
loopne
aas
cmpsb
push
ds
xorb
xchg
mov
cmp
fildll
sti
in
ljmp
movsl
insb
cli
xor
xlat
and
lds
cmp
xlat
loopne
add
jbe
push
cmp
ror
int3
pusha
adc
or
je
subl
and
int3
les
push
lea
ficomps
inc
push
fdivrl
loop
or
ret
lret
cmp
sub
repz
jo
adc
mov
xchg
insb
lret
adc
pop
pop
fldcw
stos
lods
cmc
lock
xor
sbb
xor
mov
jne
fldenv
lcall
daa
sub
xchg
mov
xchg
xchg
roll
in
add
sub
out
lahf
adc
subl
lock
sub
dec
outsb
loope
stc
daa
pushf
inc
cmp
dec
test
daa
xchg
or
ljmp
cld
jno
faddl
sbb
fidivs
je
inc
faddl
insl
push
int3
out
stos
push
fisubrs
test
or
aaa
lcall
lods
aam
test
outsl
and
rclb
fcmovb
and
inc
pop
subl
xchg
loopne
mov
inc
dec
rolb
pop
inc
daa
or
pop
or
pop
movsb
ret
jp
ret
mov
cmovbe
jno,pn
pushf
xchg
cmpl
xor
rclb
mov
xor
lods
lea
stc
jno
shl
fwait
xchg
int3
shll
std
js
mov
mov
imul
push
adc
mov
rcl
andb
xlat
call
out
cwtl
inc
call
bnd
shrb
orl
pop
stc
mov
out
mov
push
mov
xor
inc
loop
test
imulb
enter
in
lret
fidivl
sarl
xchg
iret
pop
insl
cmp
arpl
stos
or
sub
cmp
add
cmp
stos
cltd
js
fdivrl
hlt
arpl
ds
jbe
pop
shlb
out
push
push
int
or
push
mov
pop
out
push
sub
cmp
xchg
fcompl
insl
push
mov
jmp
xor
push
clc
xor
adc
mov
ja
mov
ret
mov
lahf
inc
mov
lahf
loopne
mov
std
test
dec
jmp
push
insb
sbb
imul
push
mov
mov
icebp
inc
pop
aas
out
fstps
push
daa
adc
push
dec
push
pusha
dec
jmp
nop
test
icebp
jg,pt
in
stos
adc
push
cmpsb
mov
dec
xchg
push
cmpsl
fbstp
or
dec
das
dec
jb
pop
hlt
incb
test
adcl
cmp
mov
std
loope
jae
popa
into
mov
pushl
ret
inc
mov
cmp
lea
pop
lea
xchg
or
mov
rorb
sarb
imulb
sbb
push
cmp
sarl
or
and
stc
ret
xor
cmp
adc
xchg
iret
pop
out
cmp
divb
mov
lods
dec
mov
cmpl
xchg
inc
hlt
and
add
outsl
lods
add
nop
negl
mov
jle
data16
out
aam
pusha
sub
das
clc
push
adc
inc
sbb
jbe
negb
push
xor
jle
jo
lock
lcall
rcr
sbb
aaa
cmpsl
movsl
js
movsb
sbb
mov
movsb
inc
pop
mov
in
or
aas
dec
push
repnz
sbb
mov
mov
int
mov
scas
dec
sub
inc
dec
push
adc
and
xchg
and
in
loope
pop
dec
adc
xor
les
jmp
lods
insb
js
ljmp
cwtl
dec
mov
fistps
pop
push
jp
sti
mov
or
push
fucom
sbb
sahf
xchg
pop
movsb
in
mov
sub
repnz
sahf
roll
jge
out
push
aad
cmp
jae
jmp
jb
ljmp
mov
pop
sbb
popa
das
test
jbe
popf
xchg
fmull
sbb
nop
rcrl
das
idivb
dec
xor
push
les
sti
lods
mov
xlat
xor
and
adc
in
cmc
sub
roll
mov
stos
int3
repz
sbb
ficompl
mov
pop
or
jp
sbb
jno
add
inc
lret
out
test
xchg
jne
cld
popa
push
cmp
inc
ja
push
cmp
mov
in
movsl
dec
pop
mov
fcoms
mov
loope
lds
es
jmp
jnp
and
add
push
or
inc
and
loop
pop
out
push
les
insl
cmc
sbb
icebp
sub
test
subb
mov
sbb
push
dec
scas
mov
sbb
xchg
add
mov
pushf
ja
dec
add
mov
stos
hlt
mov
dec
mov
push
jg
adcb
jnp
or
add
imull
fistpl
dec
movsl
aad
xor
mov
xchg
test
roll
js
and
dec
ret
mov
int
imul
fucom
jmp
fiaddl
aas
hlt
sbb
pushf
std
loop,pn
in
ja
lahf
int3
lcall
inc
lret
pop
lods
lret
gs
sbb
lods
mov
mov
aad
xor
pop
mov
lods
loopne
pop
xor
jns
mov
lods
cwtl
hlt
mov
ret
out
xor
xchg
cmp
mov
add
imul
jnp
or
inc
addr16
shlb
cli
mov
inc
adc
stos
mov
pop
push
xlat
jne
ret
shrb
iret
xor
jmp
xchg
push
xchg
es
jl
rol
pop
pop
sahf
inc
in
pop
cmp
ja
icebp
sbb
cmp
mov
arpl
xchg
or
dec
out
push
cmp
jl
jmp
ret
aas
in
adc
pop
loopne
sub
test
jo
ds
std
mov
mov
fildl
adc
mov
push
lret
mov
jecxz
imul
xor
push
cmc
mov
arpl
nop
mov
scas
rcrb
into
movsb
ljmp
cmp
ret
dec
mov
pop
xchg
iret
imul
adc
push
ss
pop
test
xor
aas
fwait
dec
cld
rolb
mov
cmp
hlt
pop
mov
mov
dec
dec
inc
leave
stos
inc
mov
hlt
add
push
mov
ds
cmp
or
lret
pop
inc
rolb
sbb
int3
xor
mov
lock
mov
xor
pop
test
push
push
xorb
lods
cmc
cmpsl
mov
sub
mov
jg
push
mov
jae
and
push
inc
js
and
xor
in
testl
push
pop
mov
mov
xchg
add
inc
pop
fdivp
sbb
cmp
cltd
dec
cmp
xchg
out
push
xor
xchg
inc
iret
xor
xchg
xchg
dec
sub
mov
mov
jb
in
mov
sbb
cli
xchg
add
pusha
xchg
xor
push
jle
adc
or
jno
pop
mov
cmpsl
test
aaa
mov
ret
sti
mov
popf
lea
cmpb
aam
jmp
mov
test
fcoml
xlat
push
jecxz
sbb
adc
xor
in
push
cmp
ret
decb
lcall
aas
lcall
fidivl
or
scas
in
and
stc
sbb
shll
rcrb
pop
sbb
xchg
fisttpl
into
sbb
fidivs
repz
and
and
mov
pushf
push
ja
push
shlb
in
sbb
sub
sar
sbb
pop
cmpl
mov
dec
fsubrl
mov
jno
pop
push
test
pop
add
push
mov
inc
sub
arpl
jecxz
addr16
mov
push
add
push
inc
jmp
jp
lret
jp
arpl
ja
inc
cmc
leave
dec
inc
je
ret
ret
fbstp
jle
dec
and
pop
divb
and
add
cmp
lret
sbb
fxam
subb
js
xchg
lret
adc
push
xchg
pop
pop
adc
movsb
jns
lock
shlb
std
jmp
push
cmp
xchg
mov
imul
push
and
adcb
cmp
pushf
and
cwtl
hlt
gs
stc
mov
aam
enter
popa
cwtl
sbb
sbb
push
ds
int
xor
or
adc
stos
pop
push
cwtl
push
fwait
aad
push
add
xchg
pop
inc
dec
jg
jae
rcr
cld
inc
jbe
shrb
in
nop
inc
inc
sub
mov
in
push
pop
dec
push
pop
jle
xor
jg
leave
adc
loopne
jg
aas
cmp
clc
andl
lods
xchg
and
pusha
sub
xor
push
cmp
cmp
push
test
pop
sbb
inc
imul
sbb
outsb
dec
cmp
adc
popa
aas
jo
mov
or
stos
and
mov
pop
add
or
fucomi
movsb
sub
push
shl
jge
pop
in
shll
inc
mov
lahf
in
mov
imul
mov
push
sub
subb
push
icebp
lods
pop
jmp
ds
mov
outsl
ficoms
test
leave
cmpsb
xchg
mov
pop
add
xchg
cmp
sub
rol
or
stc
pop
mov
cmp
lret
sbbb
or
jno
fsubrl
je
pop
stos
in
insb
je
es
pop
lahf
xchg
movsb
repnz
sahf
cmpsb
subl
jl
mov
adc
outsl
xor
sbb
jle
lods
jns
in
mov
and
mov
pop
sub
inc
mov
fistpl
jmp
jb
dec
mov
adc
xor
test
push
fnstsw
add
cmp
ss
xor
fstpl
adc
mov
and
es
cwtl
js
pop
mov
jne
pop
cld
out
imul
dec
dec
xchg
sub
cltd
push
or
push
loopne
sub
insl
add
add
or
mov
aaa
and
lds
shlb
aas
xchg
add
xchg
pop
push
mov
jecxz
sub
enter
stc
sbb
icebp
sbb
xchg
push
push
push
sbb
jl
daa
mov
pop
mov
xor
cmp
sub
fisubrs
xor
add
and
mov
fnsave
ss
xchg
sub
pop
lock
jecxz
and
adc
and
add
aas
inc
mov
leave
movsb
pushf
mov
outsb
jne
xchg
sub
cld
mov
cli
dec
leave
lock
dec
imul
std
divb
scas
shrl
lods
mov
shrb
and
xchg
lea
imul
outsb
popf
jmp
stc
cs
xor
insb
mov
add
add
bound
fistps
pop
loopne
mov
rcrb
dec
cs
leave
dec
mov
cmp
leave
and
mov
lods
test
fstps
cli
jo
popa
cmp
xor
inc
xchg
mov
lea
jnp
aas
push
subl
and
shrl
inc
movsb
imulb
pop
adc
cmp
xor
stc
aas
ret
add
push
sub
fbld
stos
sub
inc
mov
shrl
fwait
xor
inc
aad
dec
lret
xchg
test
adc
pop
mov
adc
scas
in
sub
mov
fsubs
insb
pop
sub
lock
cmp
out
push
stc
jb
mov
stos
stos
test
pop
xor
jo
cs
adc
push
lcall
sbb
imul
jno
adc
cwtl
cmp
es
rorl
out
addl
mov
lea
pop
fdivl
flds
pushl
jl
sbb
das
push
aas
mov
adc
push
std
jbe,pn
xor
leave
lods
out
push
push
call
mov
out
popf
push
aad
ds
xchg
out
loopne
ds
fldenv
in
sub
adc
cmp
cld
push
push
ds
insb
mov
shrl
push
int3
pushf
mov
loope
stos
mov
pop
aam
pusha
ja
adc
xor
pop
jmp
cmp
xchg
mov
shrb
mov
aam
ret
push
adc
cmpsb
gs
enter
mov
xchg
jns
imul
push
jno
imul
mov
outsb
adc
and
sbb
mov
mov
lret
repz
ret
cmp
repz
jo
mov
pop
mov
aad
sbb
pop
les
imul
mov
add
subl
cmp
adc
pop
push
decb
jp
es
sub
out
cs
imul
mov
lret
mov
push
ret
fimull
out
lea
jecxz
daa
cmp
cs
fnstsw
js
daa
mov
adc
sahf
and
jmp
xchg
xor
shlb
jle
rorl
movsl
pop
jge
inc
mov
dec
mov
pop
push
inc
out
ja
xchg
in
lock
movsl
xchg
pop
or
add
leave
in
jo
iret
sahf
lds
rcrb
fidivl
test
pop
mov
cmc
gs
pop
nop
stos
pop
pop
pop
mov
nop
mov
mov
sub
fsts
out
dec
or
mov
stos
inc
mov
push
ljmp
mov
push
insl
out
fldl
inc
adc
or
sar
in
mov
mov
dec
aas
xchg
sbb
shrl
cltd
cld
and
jae
mov
lds
or
lea
ja
xor
daa
out
inc
pop
mov
clc
xchg
xchg
add
sbb
adc
ret
mov
sbb
pop
mov
push
adc
cltd
jbe
push
fdivr
cmc
dec
and
leave
rclb
inc
loopne
fnstenv
out
iret
and
cmp
mov
push
cmp
cmp
test
jb
popa
inc
ss
xor
fscale
inc
add
push
push
lahf
stos
mov
sbb
outsb
pop
mov
sbb
aaa
add
lods
sahf
popf
test
leave
mov
cmpsb
aas
push
in
sub
mov
xchg
mov
fidivl
push
and
mov
dec
adc
push
lds
xor
xor
pop
mov
sbb
ljmp
mov
leave
test
cmp
jg
insl
pop
in
out
mov
dec
jmp
lds
mov
adcl
aad
xchg
mov
divb
ss
mov
or
pop
and
lret
cwtl
mov
xor
push
push
ret
dec
subb
jns
sbb
lods
mov
add
and
addr16
xchg
jmp
jmp
pop
fldl
push
or
and
daa
xor
push
add
leave
aaa
sub
mov
aaa
mov
sbb
jmp
fcmove
mov
mov
dec
sub
pushf
call
je
js
jg
push
fimuls
jge,pt
aaa
and
ret
iret
lahf
dec
outsb
adc
sbb
data16
push
fwait
or
add
sbb
out
insb
and
rolb
cmp
jmp
push
sbb
adc
push
xor
add
dec
inc
mov
es
loope
and
jns
sarb
jno
mov
cmp
cmp
adc
push
mov
xor
add
test
sub
ror
adc
lcall
adc
ljmp
inc
and
pop
push
divl
xchg
iret
inc
jle
popf
xchg
mov
ja
jmp
push
jns
aam
arpl
pop
xor
pop
mov
adc
or
mov
sub
pusha
mov
lcall
sbb
ja
or
sbb
popa
adc
push
pop
mov
jge
int3
les
add
push
jo
das
aas
jne
inc
and
and
dec
outsb
in
add
cmp
push
test
xlat
lcall
cmpsl
xchg
insl
mov
dec
jg
popa
test
sub
incb
push
enter
icebp
clc
lock
mov
test
cwtl
xlat
mov
and
or
test
xor
mov
into
call
fwait
ljmp
push
fsubs
in
xchg
incb
push
inc
out
mov
dec
mov
pop
gs
test
add
push
inc
lea
movsb
xor
mov
xor
call
aam
repnz
push
das
test
test
xchg
xchg
rclb
roll
adc
push
testl
adcb
xchg
lds
cmp
mov
loopne
and
sbb
loop
sarb
stos
fidivrl
mov
push
jge
or
pushf
lds
mov
mov
in
dec
push
inc
in
dec
push
add
andb
ror
ss
sub
fdivs
sbb
lahf
dec
test
insl
adc
jo
jge
mov
inc
je
les
iret
loop
aas
sbb
and
iret
ficomps
ja
pop
mov
lock
cmp
dec
in
push
ficomps
push
xchg
pop
pop
pop
adc
cmp
mov
hlt
cmpl
dec
gs
jo
lea
cmc
icebp
inc
lret
add
jle
enter
and
rolb
sti
lcall
cltd
mov
stc
jae
add
cmc
lahf
and
pop
add
or
jge
mov
out
js
divb
jg
das
jb
push
xor
xor
sbb
outsb
inc
add
movswl
adc
ds
jle
pop
test
pop
push
adc
ss
xchg
ficoml
cmp
in
cmp
cmpsl
cmc
and
mov
or
inc
adc
mov
popf
xor
or
imul
adc
ret
shll
or
mov
lock
in
pop
sub
lods
cmpb
jno
scas
cmpsl
sbb
mov
in
je
and
xchg
adc
jno
gs
jo
das
insl
sahf
pop
mov
leave
leave
cmpsb
sub
inc
pop
cli
sub
mov
mull
add
shl
mov
shrl
sbb
rcrl
mov
adc
loop
xchg
sub
std
ficoml
lea
mov
dec
leave
push
cmp
mov
subb
repnz
or
push
adc
push
adc
and
cld
mov
mov
push
shll
comiss
mov
out
cs
mull
test
rcll
jg
jno
dec
and
popa
mov
mov
lret
je
xchg
sbb
mov
jg
add
mov
stos
arpl
and
mov
mov
jle
jb
fwait
leave
sub
ljmp
inc
clc
stc
stc
in
sahf
mov
sahf
js
dec
jo
or
xor
jo
add
aad
in
or
and
inc
in
adc
push
pop
out
adcl
fcoml
popf
test
int3
imul
daa
mov
push
incl
mov
out
popf
push
hlt
mov
aaa
ss
pusha
and
and
shrb
scas
mov
fs
sub
dec
push
aaa
adc
xor
call
repnz
dec
rorb
cmp
xchg
cmp
subl
cs
cli
sub
add
je
les
iret
jmp
jmp
mov
xor
add
daa
fimuls
pop
push
int3
pushf
inc
ficoml
mov
sub
movsl
cli
insl
sub
sbb
mov
add
ds
mov
lods
pushf
lock
test
imull
fstp
leave
rcrb
push
jl
mov
mov
cmp
jnp,pn
jbe
adc
push
loop
xlat
shl
jl
fmuls
fists
add
std
push
pop
mov
fnsave
sarl
dec
clc
sbb
cmp
xor
mov
inc
dec
jle
sub
inc
mov
adc
shlb
ds
mov
sub
jle
sub
ds
outsl
lds
adc
sub
subb
pop
ljmp
pusha
push
lret
mov
push
mov
sub
mov
int3
call
jns
xchg
insb
arpl
or
clc
jnp
xchg
push
sbb
mov
xchg
mov
js
aas
test
add
inc
lds
xor
frstor
mov
or
lcall
mov
push
add
fistps
inc
pusha
fsub
xchg
dec
add
or
push
mov
sub
pop
lret
or
pop
scas
add
xor
xorl
cs
icebp
mov
in
sbb
mov
ret
addr16
ss
dec
jmp
rolb
mov
sub
jl
cld
dec
mov
jl
mov
out
push
adc
nop
repnz
rcll
inc
or
imul
fsubs
imul
fildl
dec
jecxz
inc
mov
test
packuswb
shrl
and
repnz
in
incl
movl
mov
mov
out
ds
jp
inc
jle
jns
je
mov
and
adc
adc
js
push
mov
jnp
ss
hlt
rolb
in
sti
clc
mov
push
std
sub
xchg
xchg
dec
loope
pop
sub
inc
jl
stos
sbb
imul
dec
iret
inc
add
and
dec
jbe
daa
ljmp
inc
jnp
push
push
lods
push
cmpsb
fcmovnu
jle
adc
cmpsl
sbb
or
loop
mov
mov
je
pop
push
loop
cmpsl
push
arpl
xor
sub
or
add
ds
in
jno
xchg
jl
mov
pop
pop
inc
sbb
push
gs
loope
out
push
outsb
test
pop
std
insl
adcb
pushf
xchg
test
and
scas
push
js
aas
jne
mov
push
outsl
test
repz
leave
mov
sbb
adc
sti
fsubp
inc
jbe
jg
fs
dec
sahf
sub
xchg
cwtl
outsl
add
in
pop
in
ret
sub
inc
imul
push
mov
clc
push
sub
mov
or
jo
xor
or
xchg
test
add
fcoms
mov
imul
sbb
aad
outsb
pop
pop
inc
inc
jbe
sbb
cwtl
xchg
pop
imul
in
inc
mov
fimuls
fdivrs
adc
jae
jle
and
ljmp
add
iret
movsl
inc
bound
jno
inc
inc
outsb
cltd
out
add
cmpsl
pop
jno
shrl
mov
out
fisubrl
jg
mov
int3
test
sub
cmc
pop
test
pop
aad
inc
fldt
in
cmp
mov
sub
fsubs
lock
fs
in
lahf
arpl
leave
adc
and
push
inc
test
cmpsl
mov
jbe
ficomps
gs
inc
and
mov
pop
lds
inc
push
adc
mulb
push
lret
aas
push
mov
push
rorl
push
cmp
jecxz
test
lret
fstpl
mov
sti
in
mov
and
dec
jl
xor
pop
or
sbb
test
jbe
out
lret
pop
pop
push
test
mov
or
and
or
out
mov
add
dec
fwait
mov
xchg
lds
sbbl
mov
mov
jge
repz
mov
mov
daa
mov
xor
cmp
and
fildll
and
or
ljmp
add
hlt
jle
and
outsl
dec
fldt
cwtl
jmp
xlat
stos
std
jb
dec
cmp
sbb
dec
lods
gs
mov
mov
cli
jmp
cmpsl
adc
mov
enter
jmp
sbbl
mov
sub
les
cmp
lret
inc
adc
rclb
outsl
adc
and
insl
jb
jge
dec
push
lcall
push
push
push
sub
inc
les
jecxz
fidivs
test
lods
insb
inc
daa
jl
sbb
mov
xor
mov
cmp
aam
js
pop
jne
in
mov
add
mov
addl
bndstx
cmp
adc
inc
cmp
mov
sahf
add
aad
or
pop
repz
sbb
adc
mov
test
push
push
in
mov
shl
jp
sbb
mov
or
dec
popf
add
repz
call
int
cmp
push
cmp
sub
jmp
or
dec
mov
sub
enter
or
call
jbe
cmp
incl
cmpsl
and
mov
jnp
in
dec
dec
adc
shlb
sub
sub
jl
dec
lods
scas
dec
ljmp
dec
in
movsl
shrb
mov
xor
cmpl
faddl
push
dec
xor
icebp
ljmp
mov
leave
inc
pop
sub
jmp
mov
mov
movsl
pop
enter
adc
test
imul
inc
inc
bound
or
jno
int
sti
sub
mov
adc
dec
iret
xchg
inc
push
push
push
fiadds
arpl
jmp
add
ljmp
dec
push
lahf
and
mov
xchg
mov
add
imul
int
mov
and
ljmp
dec
sub
sub
shll
sbb
aas
out
mov
nop
dec
inc
sub
inc
push
enter
dec
std
fidivrs
sbb
dec
dec
notl
gs
lods
jo
pop
ss
inc
stc
mov
subb
fldl
clc
js
sbb
jecxz
cmp
jmp
stos
pop
xor
pop
jle
adc
pusha
adc
cmp
mov
cmp
mov
dec
mov
aas
xor
cmc
pop
in
hlt
imul
xchg
cmp
jg
jo
test
push
sbb
data16
xor
xchg
and
push
pushf
pop
gs
jle
and
xlat
sub
jmp
aaa
xchg
jle
add
pop
into
jb
or
adc
xor
out
xor
orb
movsl
mov
gs
hlt
adc
jl
cmpsb
rcl
mov
and
cmpsb
lods
stos
mov
cmpsb
popf
cmp
adc
pop
xchg
mov
and
dec
adc
lods
xor
insl
mov
cmp
jnp
movsl
pop
cmpsb
inc
jle
repnz
leave
andb
sarl
xchg
inc
push
sarl
call
jmp
jl
push
push
and
cmp
imul
scas
xlat
gs
inc
sahf
in
jnp
lss
pop
nop
ret
ljmp
sub
or
cli
push
std
jg
or
fucom
jnp
sub
inc
mov
ret
xchg
popf
cmpl
jns,pt
inc
xchg
daa
inc
xchg
cltd
push
sbbl
ficoms
jp
cmp
xor
push
push
adc
push
mov
adc
icebp
cltd
dec
clc
movsb
dec
inc
outsl
jle
test
jns
add
jbe
orb
push
insb
cmc
add
mov
sbb
sbb
mov
sbb
outsl
mov
pushf
pushf
push
cmc
jbe
jle
xor
lds
mov
mov
stc
add
mov
mov
je
mov
out
mov
int
add
testb
pop
xchg
or
test
orb
jne
add
xchg
loop
adcl
add
pusha
mov
imul
stos
fbld
lret
in
fldcw
out
outsl
xchg
mov
outsb
data16
mov
jbe
mov
shll
lea
mov
push
and
cltd
jb
fcoml
dec
daa
or
cmp
cmpsl
cmp
mov
mov
sub
in
mov
push
jge
and
pop
sbb
cld
insl
adc
and
daa
jecxz
cmp
mov
icebp
inc
push
stc
sahf
pop
leave
inc
cli
lods
negb
mov
pop
mov
int
xchg
rorl
cld
mov
scas
mov
int
outsl
andl
push
mov
stc
les
and
jmp
shlb
adc
sbb
dec
fcoml
icebp
add
loopne
fisttpll
cmp
sub
les
xlat
xor
pop
call
dec
rcll
mov
mov
dec
ljmp
sbb
and
xchg
test
add
push
and
popf
sub
fsubrs
add
loopne
and
sti
icebp
dec
shrb
sti
fwait
les
mov
insb
cmp
xchg
xor
dec
dec
out
iret
jmp
cmp
bound
dec
fistl
enter
xor
mov
out
mov
pop
push
adc
cmp
jo
xchg
mov
lret
ret
pop
les
icebp
ss
add
adc
pop
loopne
out
sti
or
pop
xchg
jbe
ret
xor
dec
mov
add
into
sbb
lcall
mov
repz
cmp
inc
or
jns
lcall
shll
fistpl
sbb
jne
enter
test
push
scas
jecxz
dec
mov
insb
cmp
cmp
xacquire
add
mov
cmc
sub
pop
mov
dec
cs
imulb
mov
sub
pop
icebp
push
mov
aam
mov
pop
cmp
jge
xchg
xchg
ds
cmp
mov
add
inc
dec
fwait
test
sub
mov
loopne
jmp
sub
mov
imul
cmp
cltd
jbe
jmp
or
mov
xor
sub
xor
pop
mov
xchg
enter
push
lret
pop
ret
mov
repz
hlt
mov
sbb
insl
adc
jmp
dec
fisttps
test
sahf
adc
xchg
push
fsubs
lods
push
adc
imul
loop
mov
pop
xor
ja
xchg
add
and
jno
cmc
daa
xor
jp
or
jbe
cs
into
call
push
fnstsw
dec
adc
jmp
mov
mov
shl
loopne
inc
jns
add
mov
jno
loopne
movsb
xchg
lea
cld
jg
push
dec
pop
nop
clc
shrb
stos
mov
push
sahf
or
lret
fimuls
adc
movsl
xor
fsubl
xchg
dec
sub
sbb
out
call
ds
mov
lods
cmc
sbb
pop
sbb
or
je
loopne
xchg
fidivrs
xorb
add
add
test
sti
adc
aas
icebp
jbe
popf
jne
ljmp
fidivs
clc
jle
push
mov
mov
test
jmp
movsl
or
popa
xor
xor
sub
dec
jl
mull
cmpsl
adc
aas
dec
mov
cmp
test
jno
jg
scas
push
mov
in
divb
mov
sbbl
jmp
scas
xchg
mov
add
sub
scas
dec
aaa
in
xor
aaa
dec
dec
loopne
bswap
insb
cs
lods
outsb
test
js
cmpsl
mov
outsb
or
mov
push
cli
nop
pop
mov
or
stc
mov
pop
xor
mov
and
mov
nop
cmc
test
out
call
dec
add
xchg
sub
mov
ja
movb
nop
in
mov
rcl
scas
dec
fmuls
lock
inc
mov
sbb
pop
mov
popl
add
hlt
dec
ljmp
cmp
push
dec
test
cli
mov
mov
mov
mov
rorl
adc
pushf
push
lds
mov
movsl
jae
jge
xchg
and
mov
sub
lds
xchg
jns
mov
test
lcall
xchg
jae
sub
ljmp
xchg
js
jmp
adc
push
sub
push
push
sub
jns
enter
cmp
insb
jg
test
lret
rcr
add
mov
jo
sbb
push
cmp
add
sbb
sbb
movsb
pop
divps
ret
xor
mov
rclb
enter
lock
rcl
imul
lcall
pop
push
out
xor
fwait
test
stos
xchg
arpl
adc
into
cmp
test
cltd
test
imul
icebp
mov
fsubs
nop
xor
xor
inc
mov
jg
sbb
cmp
jae
jb
mov
dec
sub
daa
mov
ret
fs
hlt
sbb
iret
push
mov
and
or
sub
mov
das
pop
cmp
es
xchg
xor
add
jp
pushf
aaa
adc
mov
in
push
push
dec
jp
push
add
imul
les
popa
inc
mov
mov
push
push
call
rorl
inc
mov
loop
mov
enter
mov
cli
daa
andl
test
add
push
mov
sub
xor
jge
add
xor
punpcklbw
lret
stc
push
mov
je
xchg
movsb
add
and
in
hlt
faddl
push
rcll
fstl
es
loopne
jbe
adc
sbb
ljmp
mov
sahf
ret
push
ljmp
sarl
adc
ja
setp
and
insl
cmp
mov
mov
xor
xchg
mov
rcrl
and
mov
repz
les
mov
jl
sub
shll
xchg
cltd
xchg
icebp
enter
les
outsb
add
aam
sbb
fnsave
add
cs
negl
dec
lcall
add
xlat
mov
lret
inc
movsl
sbb
sbbl
cmp
or
aad
mov
push
cmpsb
xor
add
pop
loopne
push
aad
or
mov
jnp
popa
cwtl
mov
popf
dec
add
xor
movsl
rolb
xchg
sbb
lods
out
test
sbb
movsb
or
mov
aad
les
lds
push
xchg
in
sahf
iret
xchg
push
push
or
push
ds
lods
in
ja
out
jno
add
loope
xchg
js
xchg
jns
in
add
inc
pop
in
je
xor
mov
add
in
sub
loopne
lods
sbb
lahf
gs
fsubl
add
pop
mov
xor
push
cwtl
call
dec
xchg
push
mov
sbb
xchg
movl
out
add
dec
stos
rcrb
in
pusha
or
dec
hlt
clc
lcall
adc
jmp
adc
pop
in
gs
out
jp
mov
dec
cli
fmull
pop
xchg
mov
popf
faddl
loopne
and
push
stos
or
xchg
inc
add
bound
roll
xor
xor
push
inc
xchg
arpl
decl
dec
pop
outsl
aad
cmp
pop
loopne
or
mov
mov
jb
test
add
cmpsl
push
test
cmp
jmp
and
sub
imul
cmpsl
dec
mov
push
loope
jnp
xlat
fs
mov
sub
mov
enter
sub
sti
xchg
pop
jl
cld
cmc
mov
dec
mov
inc
outsb
rolb
jne
dec
sub
push
rcr
hlt
jae
jno
adc
mov
xchg
mov
push
jmp
or
loope
movsl
adcl
inc
xchg
mov
test
insb
iret
bound
lods
imul
jne
fsubr
dec
jno
mov
hlt
xor
mov
rcrb
mov
ret
nop
gs
fwait
sub
loopne
lods
jne,pn
cmp
mov
daa
pop
add
call
subl
dec
fmull
lcall
sub
xor
in
push
jecxz
cmp
gs
pop
lods
push
popa
push
movsl
xchg
add
cs
xor
xchg
add
in
xchg
adc
test
call
cwtl
popa
scas
sub
insb
mov
xor
cmp
push
xor
scas
sti
insb
mov
jmp
ret
inc
jg
inc
jno
adc
repnz
in
pop
sub
adc
pushf
cmp
lds
mov
inc
xchg
push
cmpsb
xchg
mov
dec
push
and
scas
nop
orl
aaa
jle
sbb
dec
and
jl
enter
cmp
or
scas
inc
fstps
shrb
loope
or
adc
mov
and
fs
daa
cmp
mov
dec
cmp
push
mov
push
jns
aaa
addb
ret
adc
cmp
mov
push
push
fisubrs
adc
movsb
out
and
lods
in
add
mov
ficoml
mov
sbb
fldl
and
repnz
mov
adc
pushf
xchg
and
clc
lret
push
test
ss
cbtw
arpl
xor
mov
in
loope
insl
out
xchg
in
cwtl
adc
and
lahf
xchg
mov
push
inc
push
clc
cmpsb
scas
loopne
cmpsb
imul
shll
cld
mov
cld
pop
mov
dec
pop
les
lret
iret
jmp
loop
pop
mov
xchg
cmp
mov
sbb
inc
sub
int3
fwait
and
push
sti
push
adc
aad
out
pop
jg
ja
push
rep
fidivs
enter
lods
or
push
push
pop
dec
xchg
mov
test
es
cmpb
aas
cmp
or
lock
or
and
ss
push
push
fstpl
mov
xchg
mov
mov
add
jbe
into
jge
stos
inc
jb
sbb
sbb
push
int3
push
cs
xor
xchg
test
mov
pop
jmp
aaa
testb
outsl
jp
lods
push
xchg
mov
xor
stos
imul
mov
and
jbe
fwait
xchg
andl
sbb
fdivrs
sbb
xor
xor
cmp
mov
sti
inc
and
fsubl
inc
pop
jnp
and
test
mov
push
adc
mov
nop
jo
faddl
js
pop
fwait
roll
lock
push
outsl
or
test
or
lock
mov
hlt
and
sbb
dec
lods
stos
shll
push
loopne
lahf
jp
mov
leave
lret
cmpsl
xchg
data16
push
les
lahf
movsb
rorb
mov
push
sti
cmp
test
ljmp
push
cmp
cmp
sub
xor
xchg
pop
gs
xchg
fwait
pop
sbb
fildl
mov
pusha
jecxz
js
ja
int3
sub
loopne
into
add
lods
cmc
ds
push
dec
jbe
mov
test
aad
mov
ret
fucomi
pusha
fwait
test
push
popf
mov
and
xchg
sub
mov
push
or
lea
scas
mov
lods
mov
movsl
arpl
dec
sti
in
xor
dec
stc
in
mov
inc
nop
stos
rol
es
popf
fldt
sub
test
outsl
sbb
fsubr
cld
jmp
inc
pop
loope
addr16
out
out
xor
aas
sbb
push
cltd
adc
or
in
sub
mov
push
xor
lods
fnsave
push
mov
jb
mov
es
fcmovne
inc
sti
dec
mov
popf
dec
iret
mov
fcomps
test
add
xor
sbb
cwtl
mov
orl
push
or
push
sub
jle
xchg
cmp
jge
fmull
sbb
inc
stc
mov
adc
xchg
jo
pop
cmp
shr
mov
xorl
jmp
movsl
fs
add
repz
dec
mov
repnz
stos
decb
xchg
mov
cs
cwtl
or
and
inc
and
call
ss
mov
cmp
cli
std
dec
pop
mov
lcall
fdivr
jmp
and
push
lret
outsb
stos
mov
or
mov
fmuls
popf
sub
push
dec
nop
outsb
push
shrl
mov
or
cltd
cmp
dec
leave
sahf
add
lock
mov
push
xchg
icebp
cmpsl
and
loopne
cmp
lea
sub
dec
mov
mov
das
mov
clc
xor
mov
subb
arpl
mov
dec
push
orb
xchg
nop
aad
into
bound
jbe
pusha
inc
rcl
pop
mov
inc
test
dec
or
sub
rorl
add
add
cld
pop
dec
sub
push
mov
das
pop
hlt
jecxz
inc
and
xchg
int3
and
xorl
frstor
adc
ss
mov
hlt
out
popa
aaa
inc
dec
push
mov
mov
dec
in
xor
lahf
ss
add
loop
imul
jne
xor
jmp
xor
pop
shll
mov
cmc
rcrb
adc
cmp
inc
in
scas
dec
or
or
in
push
or
mov
lods
hlt
insl
ljmp
insl
mov
loop
dec
push
lahf
add
pop
test
mov
pop
andb
fcoml
dec
adc
ds
adc
cld
loopne
imul
mov
and
push
pop
cmpsb
popf
sub
popa
daa
jo
lret
jnp
xchg
std
mov
ja
sbb
fisubl
jo
cmp
pop
adc
loopne
or
stos
ret
pop
shll
in
repnz
push
pop
cmpsl
xor
and
sub
call
or
cmp
sbb
aam
pop
lods
xor
inc
sub
rorl
mov
aam
and
jge
cltd
fs
mov
insb
fdiv
mov
out
test
cltd
insb
pop
push
mov
fadds
adcl
add
cmpxchg
ss
icebp
jns
cmp
in
pop
test
es
add
jecxz
repz
fdivr
or
cs
and
xchg
cltd
push
pop
xchg
cmp
lcall
and
inc
test
lcall
cli
sub
cmp
testb
xor
jae
xor
dec
iret
and
xor
push
xchg
mov
repz
mov
push
inc
cmp
les
lds
push
sub
xchg
hlt
out
mov
adcl
ror
push
cmp
div
data16
xorl
push
mov
mov
mov
add
or
sbb
jg
xchg
add
frstor
mov
repz
mov
arpl
int
or
sbb
cld
lock
dec
cmp
imul
cmpsl
fnsetpm(287
add
movb
pop
fidivs
scas
rcl
das
insb
adc
jmp
les
xchg
mov
mov
adc
sbb
sbb
sub
aam
sti
sbb
es
cmpsb
push
in
repnz
sbb
xchg
cwtl
icebp
dec
fwait
pop
stos
xchg
jae
inc
or
stc
lock
push
or
jno
and
repnz
pop
xorl
and
dec
enter
jb
sub
or
hlt
mov
push
jl
or
inc
push
mov
out
push
pmaxsw
or
arpl
mov
call
add
xchg
fnstcw
cmpl
dec
loop
xchg
rcrl
call
pop
mov
adc
xchg
imul
scas
rorb
cmp
inc
aam
in
fistl
test
fcoml
stc
sbb
xor
dec
mov
cltd
cmc
cmp
out
push
adc
int3
cmc
stc
cli
in
push
xchg
sub
mov
jne
mov
int
mov
adc
and
lods
mov
test
pop
outsl
sub
ficompl
movsl
ss
and
push
mov
push
jle
pop
sbb
sub
xor
fldln2
sbb
or
dec
or
sub
data16
cmp
push
push
adc
mov
pop
lea
xchg
in
inc
int3
cmp
xorl
ja
jmp
out
test
sub
and
lahf
stos
stc
inc
out
push
es
mov
call
repz
sub
xchg
orb
out
jl
dec
ret
sub
stos
js
dec
lods
jle
loope
cmp
add
pop
aas
insl
in
xor
adc
mov
fmul
aam
iret
scas
fwait
adc
test
mov
xor
sub
adc
lret
jg
outsb
out
jo
adc
jbe
in
sahf
hlt
cmp
xor
mov
xor
out
das
mov
sahf
mov
adc
call
loope
jno
push
faddl
mov
in
repz
and
jo
or
arpl
mov
cld
insl
inc
bound
daa
xor
jb
fcoms
xor
dec
inc
sbb
stos
dec
and
mov
es
in
xor
pusha
pop
or
ret
xor
fs
pop
je
pop
xchg
shrb
cld
pop
imul
imul
push
fs
jmp
mov
lahf
mov
jae
enter
mov
sub
test
dec
call
movl
mov
cmp
jns
adc
lahf
mov
pushf
in
mov
jg
shrb
jecxz
pushf
inc
push
imul
jno
stos
loope
inc
jns
icebp
fsubrs
aaa
lret
movsb
test
push
sarl
je
test
aas
or
outsb
mov
scas
aam
push
neg
cwtl
in
mov
addl
jecxz
sbb
in
pop
mov
fisubs
mov
fcomip
and
hlt
orb
addr16
cmpsb
out
sub
rcl
pop
lret
and
push
push
jb
ret
iret
xchg
xor
adc
adc
mov
push
mov
jle
add
je
push
insb
adc
icebp
inc
jae
lcall
movsl
lods
insl
lods
fwait
shlb
aaa
call
mov
xor
inc
sbb
pusha
push
jno
cmc
daa
pop
push
into
push
xchg
loope
out
cmp
and
test
pop
push
xchg
jno
jmp
iret
and
pop
dec
xchg
xor
push
dec
test
fwait
aas
push
data16
into
jmp
lahf
fiaddl
cmpsl
sbb
cld
lds
cmp
in
popa
shll
xchg
cmp
xchg
jmp
xor
or
dec
lock
mov
aam
lret
pop
mov
sahf
dec
inc
test
sbb
ret
movsl
das
movsl
popa
dec
lds
push
jge
dec
les
adc
dec
jge
pop
pushf
fnstsw
mov
xchg
cmp
jg
push
mov
and
mov
push
xlat
xchg
lahf
imul
mov
mov
shrl
fwait
add
enter
jnp
popa
jbe
and
ss
push
pop
xchg
repz
mov
shr
fisubrl
and
arpl
mov
sub
add
dec
jg
ds
mov
gs
lods
dec
std
mov
mov
fwait
sub
bound
push
insb
lods
sbb
lret
xchg
mov
shl
loopne
jbe
outsb
mov
fsubs
in
lds
test
xchg
out
jmp
out
inc
cmp
arpl
sbb
outsl
push
rep
decb
outsl
xchg
jo
cmp
xor
dec
cmp
pop
pop
or
push
leave
das
decb
xor
cmp
lahf
adc
pop
xchg
stc
push
mov
push
daa
xor
hlt
adc
stos
inc
ss
enter
push
adc
flds
out
cmpsb
pop
mov
ljmp
jb
or
xchg
pop
inc
outsb
ljmp
js
test
jnp
pusha
call
jb
mov
in
jl
sbb
mov
pop
jns
iret
pop
sbb
xchg
pop
es
pop
hlt
lods
shrl
fsubrl
cmp
jnp
cmp
xor
rcrb
testb
out
out
sub
fisubl
sub
rcll
popf
out
roll
jle
xchg
inc
pop
push
adc
xor
out
pop
jb
repnz
insl
add
sub
std
adc
mov
pop
ficompl
mov
jns
cmp
and
lods
neg
sbb
data16
mov
ret
or
in
in
or
and
lret
xchg
out
adcl
ljmpw
pushf
out
sub
inc
mov
rorb
cmp
mov
leave
call
mov
mov
or
adc
push
stc
movsbl
inc
mov
push
fsts
inc
mov
xchg
fimuls
xlat
inc
in
in
test
imul
jle
ret
lahf
lods
jl
pop
pop
pop
cmp
jo
inc
push
lods
cmpsb
adc
jno
dec
repnz
aad
and
add
dec
shl
imul
mov
mov
imul
ret
test
mov
xchg
out
ja
mov
add
or
shlb
ret
inc
loopne
cwtl
push
jecxz
xor
leave
enter
fists
ja
scas
dec
sub
orl
push
int
inc
jne
xlat
mov
loopne
outsl
call
dec
pop
inc
mulb
adc
xor
aam
or
xchg
push
dec
test
shl
jecxz
dec
xlat
jge
adc
push
scas
cmc
inc
mov
cmp
or
cmp
pop
popf
xor
jne
pushf
sbb
je
or
rdmsr
xchg
sbb
pop
shl
sbb
and
call
push
mov
mov
notl
mov
jmp
in
sub
repz
cmc
xchg
cltd
sahf
fld
stc
xchg
or
cli
mov
add
pop
lcall
fstpl
push
enter
shr
inc
addr16
pop
or
mov
jge
lods
inc
sar
lods
enter
addr16
enter
in
fbld
mov
adc
loopne
jbe
push
sub
aad
sub
dec
movsl
jp
test
stc
mov
xchg
jecxz
fwait
add
mov
inc
std
add
sbb
cwtl
xchg
mov
shlb
and
pop
aam
call
lock
pop
push
ss
mov
pop
jnp
lcall
or
mov
mov
in
pushf
sbb
push
rep
pop
mov
add
adc
notl
aam
xchg
insl
cs
pop
mov
xchg
icebp
push
fs
adc
fdivrs
out
sbb
test
pushf
lods
cmp
add
mov
sub
aam
jg
jo
xor
lcall
dec
inc
popa
rcrb
lret
jbe
pop
inc
loop
jb
mov
and
push
pop
orb
adc
and
inc
and
shll
fidivs
pop
popf
xorl
std
pop
mov
mov
movsl
in
je
pop
adc
sbbb
or
dec
imul
repz
xchg
xchg
pushf
sub
sbb
dec
stos
cltd
mov
mov
xchg
stos
dec
outsb
stos
cmp
mov
and
test
test
adc
add
and
into
and
mov
sub
sti
rolb
aaa
xchg
in
aas
sbb
and
xor
sbb
lock
clc
fwait
mov
mov
lea
into
jns
loopne
sub
and
add
jle
movswl
ljmp
enter
stc
adc
cmpsl
jbe
insl
fstpl
fcoml
inc
push
push
aad
mov
stos
shl
nop
jne
fiadds
js
sbb
pop
fcoms
pop
ds
pop
xchg
mov
sub
add
loope
mov
inc
ret
mov
rorb
mov
popa
mov
inc
and
adc
rolb
outsl
jmp
iret
and
sbb
pop
mov
push
arpl
out
mov
imulb
adc
xor
ret
sbb
sbb
add
je
daa
xor
fucom
out
bound
lods
rolb
mov
adc
xor
idivb
xchg
xchg
mov
cmp
sub
call
mov
push
push
mov
je
das
and
fcom
out
push
movsl
mov
aad
jl
stc
mov
push
push
icebp
pop
xor
xor
add
ss
jl
xor
sub
jbe
sbb
popf
jne
stos
in
sbb
dec
cmpb
dec
push
mov
out
pop
sub
mov
cs
int3
pop
dec
jg
or
mov
stos
jbe
pop
sbb
sub
lods
icebp
mov
aam
fisttps
repnz
xlat
xchg
gs
jmp
dec
mov
inc
sub
adcb
pop
inc
cmp
xlat
dec
les
mov
aad
popf
pop
push
aaa
scas
adc
int3
inc
hlt
sbb
popa
xchg
push
imul
into
enter
cmpsb
leave
inc
push
pop
mov
imul
inc
ljmp
fsubrl
push
inc
and
xlat
and
loop
cld
repz
and
add
ret
add
lods
sbbl
mov
fimuls
pop
imul
dec
xchg
mov
ret
inc
or
xor
out
ljmp
shll
and
mov
shl
test
and
rcrl
mov
add
ljmp
hlt
fisubrl
mov
leave
lods
adc
fs
aad
insl
push
xor
dec
hlt
mov
or
or
xchg
daa
cld
mov
neg
and
rol
ds
daa
stos
idiv
mov
xchg
fs
and
add
in
xor
jmp
mov
dec
jo
xchg
movsl
sahf
and
data16
data16
lock
add
arpl
inc
pusha
lods
imul
dec
fdivs
fs
or
sub
mov
or
and
clc
outsb
add
lods
clc
outsl
in
mov
and
xor
add
aam
fwait
xchg
xchg
jnp
insb
roll
loope
push
lods
cmp
in
lcall
and
jl,pn
dec
mov
mov
ret
cmpsl
out
out
dec
dec
jb
sahf
cld
stc
push
mov
pop
cmpsl
pop
clc
mov
aaa
pushf
test
jb
rcl
inc
popa
pop
and
bound
xchg
cmpxchg8b
lret
cs
shll
jb
jnp
std
cld
fisttpl
pusha
int
mov
loopne
cmp
mov
push
stc
out
clc
sub
imul
ljmp
fsts
je
ja
out
dec
fistpll
lahf
out
outsl
lock
movsb
push
mov
das
sub
inc
push
or
js
roll
cs
mov
adc
mov
fmul
sub
outsb
xlat
aam
cmpsb
scas
xchg
push
cmp
inc
push
pop
mov
push
jmp
xlat
pop
outsb
movsl
stc
rorb
push
mov
cmp
into
xchg
and
add
xchg
add
pop
jb
movsl
out
jge
ret
add
gs
adc
daa
pop
mov
jl
movsb
test
negl
fwait
push
das
mov
fistps
out
rorl
mov
push
mov
mov
xchg
mov
scas
dec
into
xchg
testb
lods
mov
repnz
mov
cmpsb
mov
outsb
adc
xchg
adc
sbb
jno
jge
and
add
jmp
pusha
push
cld
shrl
into
push
popa
addr16
jge
test
stos
daa
mov
stos
sub
mov
mov
out
inc
pop
lcall
mov
fstl
cmp
cmp
jmp
les
das
mov
or
loopne
xlat
arpl
cs
pop
cmc
add
aaa
mov
in
jns
dec
sub
sbb
sahf
sbb
xchg
or
add
sqrtps
and
ret
adc
fistpl
std
inc
ljmp
ret
cmpsb
mov
outsb
mov
adcb
jge
pushf
je
cmp
dec
jae
xchg
mov
push
push
push
pop
test
leave
sbb
test
rclb
hlt
inc
pop
jp
cmp
cwtl
pop
lods
jno
dec
mov
mov
imul
in
push
sti
fs
and
push
call
xor
xchg
fs
sub
out
and
jbe
mov
aas
fcomps
shl
lods
rclb
mov
cmc
daa
ror
sbb
jnp
pop
cmp
inc
xchg
xchg
adc
push
shlb
xchg
jl
ret
ficoms
inc
fcom
push
sub
stos
cmpsb
popa
cld
int3
mov
dec
loope
push
add
xchg
pop
mov
sbb
aas
cmpsb
fisubrl
insb
lahf
scas
das
fidivrs
or
dec
je
add
adc
cli
rclb
adc
xor
fldl
loope
hlt
data16
push
sbb
sbb
add
add
fs
das
pop
mov
mov
test
mov
mov
lds
outsb
sti
and
insl
cwtl
leave
cmp
ja
pop
test
leave
jmp
cld
push
js
fcmovne
sti
imul
aaa
int
xchg
adc
add
jbe
xchg
loope
pop
or
inc
je
mov
inc
and
sbb
stc
adc
mov
hlt
sbb
mull
loopne
jbe
pushf
push
jbe
pop
sarl
push
jnp
push
jne
into
dec
mov
push
or
push
jg
lock
cmpsl
cmp
inc
andb
lods
negl
roll
inc
lods
xor
mov
lods
into
daa
cmpsl
mov
xor
or
mov
or
inc
sub
sahf
jo
inc
lahf
sbb
mov
pop
test
or
add
inc
lods
iret
lods
aas
lods
rclb
cmp
sub
xor
dec
push
sub
dec
jle
add
adc
std
dec
jg
lock
outsb
dec
test
cwtl
daa
jmp
push
mov
dec
push
jne
dec
sbb
jp
test
mov
lret
mov
lods
sahf
xchg
add
push
idivl
jecxz
mov
pop
xchg
inc
adc
or
outsl
cwtl
xor
or
sub
sbbb
mov
lods
adc
mov
jne
jae
push
adc
lds
add
and
addr16
inc
mov
sbb
xchg
ret
iret
cmp
pusha
adc
stos
jns
mov
xchg
stos
cmpsl
pop
push
lock
dec
pop
call
dec
mov
mov
xchg
cmp
dec
addl
lret
pop
mov
sub
push
mov
leave
cmp
jg
dec
sahf
movsb
or
jns
sbb
xchg
mov
mov
dec
ret
cmp
dec
out
xor
inc
test
cmp
mov
inc
movsl
mov
mov
mov
fs
mov
fisttpl
pop
sar
mov
ljmp
ds
pop
mov
inc
fnsave
mov
push
mov
mov
sbb
mov
cmp
or
sahf
mov
mov
pop
mov
jae
lds
mov
and
mov
push
rcr
sub
xor
mov
incl
cltd
cs
mov
push
daa
movsb
roll
xchg
jno
adc
das
cmp
imul
je
int
arpl
pop
cmp
cmp
cmp
jnp
scas
mov
sub
pop
ss
dec
pushf
and
xor
mov
push
mov
or
adc
sbb
rcrl
mov
fidivl
cmp
and
pop
fisttpll
sbb
movsb
xlat
rcrl
mov
sbb
rcll
out
mov
out
ljmp
das
fldcw
and
xchg
xchg
lret
cs
aam
mov
je
xor
mov
out
cmp
xchg
adc
fstpt
pop
dec
or
fcom
mov
sub
push
iret
lods
ficomps
jp
addr16
xchg
sbb
mov
jnp
push
sarl
insl
or
out
out
and
and
aas
mov
pop
sub
jo
inc
movsb
push
sbb
lods
lret
hlt
push
dec
outsl
cmp
xor
insl
sub
mov
sbb
stos
jbe
xor
and
lods
dec
jno
cmpl
jmp
adc
je
xorl
sbb
add
out
loop
push
shr
ret
ss
pushf
pop
cltd
cmc
xchg
rcr
or
into
push
iret
xor
inc
sbb
lods
test
dec
test
sub
inc
dec
insb
jbe
arpl
repz
xchg
xlat
mov
dec
sahf
dec
faddl
mov
xchg
or
xor
cli
push
cmpsb
movsb
adc
out
imul
inc
push
sbb
gs
mov
xor
repz
sub
ret
std
aam
fisttpll
ficomps
push
mov
xchg
add
movsb
dec
mov
mov
jle
and
xlat
push
rcrl
push
int3
xchg
rcr
inc
inc
mov
insl
jecxz
lcall
outsb
jo
sub
or
and
test
rcr
mov
dec
sbb
push
cltd
push
sbb
test
mov
arpl
inc
add
mov
mov
pop
adc
inc
push
dec
sub
push
pop
aaa
clc
pushf
sarl
cmpsl
test
test
lds
jo
loope
pop
lods
xor
xor
mov
outsl
jnp
adc
adc
or
sub
cmp
dec
outsb
in
icebp
lcall
out
mov
cmp
add
popf
fucomi
scas
dec
push
aad
xchg
movsb
cmpb
push
dec
ljmp
insl
adc
cmp
mov
loope
icebp
pop
fwait
xor
dec
fistpll
sti
jl
loopne
mov
inc
faddl
fisubrl
pop
sub
sbb
mov
jmp
mov
mov
je
push
add
mov
lods
mov
jmp
dec
and
add
fdivs
jmp
fsubr
push
cmp
sub
xor
enter
mulb
pop
adc
test
fwait
sahf
lahf
lret
mov
fcoml
xchg
xchg
fisttpll
icebp
jg
xor
imul
out
not
aaa
push
jnp
hlt
dec
adc
cmpsb
enter
loope
imul
cld
pop
xor
push
dec
jne
inc
pop
ljmp
push
insl
in
clc
in
xchg
outsb
jmp
pop
jle
pop
sbbl
jl
clc
test
ret
cmpsl
out
jo
or
jmp
out
xchg
dec
lods
test
cmpsl
mov
push
lret
or
jbe
cmc
repnz
repnz
inc
add
mov
divb
adc
mov
xor
mov
test
mov
xchg
ds
sbb
cmpsb
out
mov
gs
cs
pusha
jg
sahf
mov
adc
pop
sbb
push
insl
push
adc
mov
loope
cmp
jle
mov
in
pop
cmp
sub
fisubl
xchg
arpl
pop
mov
adc
pop
and
fsubs
mov
add
push
sub
mov
mov
and
cmp
xchg
leave
insl
daa
icebp
rorb
inc
mov
mov
sub
aaa
hlt
stos
lret
jb
mov
xchg
ret
addl
enter
xchg
rcll
dec
jl
sysret
mov
push
inc
mov
xchg
jp
ds
jb
sub
lods
jmp
mov
cltd
dec
push
mov
mov
xchg
lcall
pop
hlt
adc
stc
xor
scas
dec
es
inc
add
mov
sahf
mov
jo
aas
sub
leave
push
out
das
add
cli
pop
cmp
in
lods
inc
sub
shlb
nop
or
arpl
mov
cltd
sbb
popa
das
sub
fisubrs
push
sbb
int3
call
push
ret
stos
imul
cmp
sub
test
adc
jno
pop
lods
dec
or
popf
outsl
and
adc
outsl
sbb
cmc
out
jmp
outsb
mov
call
loope
inc
test
jae
pusha
or
jne
lret
mov
dec
jmp
addr16
pop
sub
sub
sbb
fwait
imul
and
jge
cs
jo
sbbb
ficoml
icebp
dec
jns
out
jle
jmp
push
sbb
pop
movsb
fs
jp
push
cmp
cmp
pop
pop
orl
cmp
test
les
je
fs
pop
or
mov
iret
inc
cmp
cmpsl
out
int3
faddl
jno
cwtl
clc
arpl
mov
movsb
push
sub
jmp
dec
push
xchg
inc
dec
sbb
xchg
pop
mov
adc
push
pop
push
cmp
adcb
jge
ja
test
popf
push
mov
cmp
jno
sahf
cld
cmp
fists
fs
jmp
scas
xlat
mov
sti
add
stos
outsb
cltd
adc
sbb
test
jo
pop
xchg
xor
jno
jmp
pop
xor
mov
adc
cs
or
dec
and
insb
xchg
rclb
in
pusha
sub
xor
and
jp
or
mov
push
dec
xor
and
subb
loopne
pushf
add
pushf
lds
clc
jp
ret
pop
int3
arpl
in
jo
sbb
shr
mov
mov
mull
inc
lods
jns
push
inc
push
add
mov
xorl
inc
mov
pop
sub
add
cmp
pop
dec
popf
jb
pop
fxch
lcall
pop
lods
inc
mov
mov
adc
jo
rcll
xchg
fstl
and
bound
iret
inc
out
pop
ret
inc
jno
or
dec
dec
xchg
int
bswap
rcr
jb
jns
mov
dec
cmp
lds
out
cmp
mov
lcall
dec
jno
std
movsb
mov
jle
cmp
fbstp
in
pop
adc
lods
enter
push
repz
adc
loope
js
lods
fsubl
out
ret
stc
xchg
jl
inc
cli
or
mov
pop
xor
sub
jmp
js
cmp
or
ret
es
loope
mov
add
pop
test
or
xor
adc
push
fcompl
mov
dec
and
int3
jo
add
loop
xchg
inc
out
mov
andb
mov
hlt
aam
mov
test
pop
mov
into
push
into
popf
inc
sub
cmp
push
cli
rcrb
and
adc
xchg
xchg
add
inc
arpl
mov
repnz
lret
loopne
dec
movsl
xor
dec
xchg
outsl
popf
xorb
add
xor
repnz
cmp
inc
fs
jno
sti
adc
adc
enter
out
fmuls
push
and
jge
imul
xor
mov
push
cld
or
test
pop
mov
aad
push
inc
out
pop
jge
daa
pusha
cli
je
cs
dec
jb
sahf
gs
ljmp
add
push
pop
fcomps
push
cmp
imul
data16
loopne
xchg
inc
insl
enter
adc
addr16
sbb
mov
cmp
sub
in
jne
push
cld
mov
dec
stc
mov
xchg
add
ja
jle
xor
dec
nop
daa
aaa
cmpsb
pop
push
xchg
adc
cld
pop
push
ja
push
aaa
cld
fbld
and
sbb
dec
and
sbb
or
insl
hlt
jmp
push
pop
mov
cs
ja
test
aad
push
push
or
insb
or
jg
and
in
outsl
in
in
xchg
and
pop
cltd
scas
rclb
cmpsb
mov
idivb
cmp
sbb
out
jb
scas
orl
into
pusha
imul
dec
jge
repnz
add
outsl
gs
enter
fistps
cmp
js
inc
xchg
push
sbb
sbb
push
popa
jge
addr16
pop
pop
push
insl
push
ficoms
fs
dec
clc
xchg
dec
mov
xchg
cli
or
jno
stc
movsl
and
mov
lret
lret
push
out
adc
jmp
push
push
mov
adc
ljmp
call
ljmp
cmpl
or
in
ja
iret
jno
sub
aas
push
mov
xchg
cmc
loope
notl
int
mov
push
stc
aam
mov
mov
cmpsl
bound
out
test
cmp
mov
push
inc
ljmp
xor
insb
mov
shld
je
cmp
inc
dec
sahf
lods
dec
sti
cmpsl
push
xchg
xchg
and
lods
mov
decl
xlat
inc
aad
and
add
and
pushf
sar
pop
lcall
loop
mov
pop
push
sbb
fmul
dec
mov
repnz
sti
jmp
jb
jbe
ja
out
or
ss
mov
jb
loope
fisttps
mov
dec
nop
ret
add
mov
mov
sahf
pop
or
insl
push
out
mov
jecxz
fwait
out
sbb
and
gs
aam
cmp
xchg
sbb
shl
enter
movsb
popa
xor
in
test
and
or
push
daa
dec
mov
je
lods
insl
fcomps
popf
and
js
mov
mov
lods
and
or
push
xlat
jecxz
mov
pop
inc
cmp
scas
mov
loope
leave
mov
sub
push
cmp
or
sbb
test
je
push
mov
out
bnd
sub
mov
or
mov
inc
testb
cmp
and
mov
mov
jl
loop
dec
fs
fs
imul
pusha
movsb
cmp
scas
jo
mov
cmpsl
xor
je
mov
gs
cmc
movsb
fnstenv
jb
sub
cltd
jnp
sbb
aas
cmpl
cmp
jecxz
mov
jbe
push
push
dec
xor
out
add
add
jnp
pop
dec
xor
lcall
pop
inc
xlat
popf
or
lods
cld
xor
jne
imul
push
mov
scas
lods
push
sub
mov
pop
out
insb
outsb
out
dec
mov
ss
daa
orb
nop
shlb
test
rolb
daa
jbe
cmp
push
lock
jmp
xlat
jl
add
fidivl
adc
cmp
adc
pop
aas
xchg
sbb
sub
fcmovnu
sbb
push
mov
lods
and
pop
lcall
daa
dec
dec
dec
sub
daa
push
ds
leave
inc
hlt
xor
sti
pop
lahf
mov
imul
xchg
sahf
pop
or
sub
outsb
jge
in
jb
sub
lret
icebp
xor
pop
pop
out
pop
movsb
inc
mov
pop
mov
mov
sub
xchg
pop
cmp
pop
and
xchg
inc
cmp
push
xor
mov
mov
push
push
cmp
mov
inc
rcrl
jo
jb
add
cmovb
repz
push
cmp
call
out
sbbl
xlat
inc
outsb
sub
cwtl
les
push
jmp
aaa
push
andl
mov
cwtl
enter
insb
movsl
adc
pop
ret
cmp
lea
sbb
pop
sahf
jecxz
pop
jmp
in
mov
inc
negl
mov
cmp
dec
pop
push
fsubl
pop
pop
cltd
push
fs
in
sbb
test
frstor
movsb
sub
jne
push
mov
push
ss
mov
out
xchg
or
pop
call
in
mov
push
lock
inc
dec
add
xchg
cld
inc
sub
push
icebp
push
pushf
push
ds
popa
dec
inc
mov
outsl
int
jns
movsl
jo
xchg
mov
and
outsb
xor
loope
dec
hlt
mov
pop
insl
push
cmp
aad
adc
clc
cmp
push
ret
xchg
xchg
dec
mov
mov
outsb
aaa
mov
dec
push
xchg
fxch
sti
mov
jno
jmp
ljmp
int3
lock
ret
cmp
outsb
jl
dec
arpl
sbb
aad
pop
sub
mov
mov
dec
int
out
add
frstor
clc
sti
add
mov
cmp
scas
sti
test
sub
iret
out
loopne
scas
cmpsb
cltd
js
movsb
mov
fdivrl
or
mov
push
add
inc
outsl
outsl
fbstp
mov
cmpsl
or
cli
loop
adc
inc
aas
xchg
mov
xchg
pop
sbb
hlt
adc
jno
xor
inc
outsl
sbb
fwait
mov
dec
shlb
jne
sahf
lahf
cmp
iret
lret
insl
imul
mov
add
and
lods
jo
ja
movsb
adc
pop
iret
or
lret
inc
dec
xchg
in
jbe
scas
in
jnp
lds
aas
cmpsb
icebp
pop
inc
pop
adc
nop
popf
add
add
mov
addb
les
sub
pop
jp
dec
cmpsb
loope
rcl
push
fildll
push
sub
hlt
or
sti
add
jge
sbb
mov
xchg
sbb
sbb
xlat
xchg
adc
sarb
adc
xor
lahf
xorl
dec
dec
sbb
pushf
push
mull
push
dec
add
aam
cmp
lret
cmp
std
push
pop
les
and
jne
fcomi
loop
cwtl
xchg
out
mov
lret
push
mov
insl
mov
xchg
pop
out
jns
je
fsts
cmpb
imul
pop
rol
fstpl
fwait
es
mov
sub
imul
imul
popf
nop
pop
inc
xchg
xchg
enter
push
orb
or
and
sbb
jne
test
xchg
mov
loope
sbb
lahf
ljmp
and
int
data16
xor
leave
sbb
xchg
add
cmp
jb
shrb
mov
sbb
xchg
xor
xchg
add
nop
or
cs
in
push
sbb
xchg
dec
daa
out
xor
cltd
mov
cmp
sahf
jnp
pop
scas
xor
cs
les
mov
stc
sbb
fnstsw
adc
mov
cmp
jno
cli
loope
sub
stos
jmp
int
and
out
mov
push
cltd
jb
inc
push
std
imul
clc
lods
inc
fnsave
xchg
add
nop
adc
add
xchg
add
push
lret
aas
add
sahf
jae
sbb
jle
mov
ja
stos
ret
int3
pop
js
data16
push
xor
call
mov
dec
mov
mov
push
push
icebp
xchg
sti
repnz
idiv
imul
pop
dec
sub
mov
dec
or
inc
push
cmpsl
sbb
pop
aaa
push
es
push
popa
sbb
jne
dec
xor
ss
jecxz
out
in
xor
sbb
xchg
mov
jno
mov
call
and
xchg
out
jge
xor
mov
fimuls
mull
adc
imul
sub
pop
sbb
push
js
arpl
sti
and
repz
cmp
or
mov
mov
cwtl
pusha
out
enter
push
add
iret
jg
mov
out
imull
pop
stos
ret
cmpsl
cld
pop
jns
cltd
mov
mov
pop
daa
lcall
mov
jae
aam
aaa
les
pop
in
add
notb
lods
xchg
sarb
es
xchg
and
pshufw
nop
mov
and
fisttpl
data16
and
sbb
out
inc
out
cmp
sahf
jae
ljmp
fnstcw
jecxz
cmp
movsl
sbb
inc
inc
jne
sbb
jo
sahf
push
sarb
inc
xchg
inc
xor
add
cmp
xor
xchg
out
insl
and
adc
test
adc
test
lds
adc
add
scas
pop
jno
sub
mov
push
adc
lcall
pop
sbb
inc
pop
mov
movsl
pop
xchg
jnp
repz
filds
push
adc
outsb
cmpsb
push
lods
lcall
push
testl
push
add
lods
mov
sbb
sub
push
ds
dec
mov
cltd
sub
sub
lcall
sub
inc
movsl
mov
enter
mov
pop
sbb
cs
or
call
loope
jp
sbb
xor
incl
lcall
sbb
xchg
bswap
jmp
push
xchg
sbb
sbb
push
lret
pop
mov
and
adc
xchg
ljmp
cli
mov
mov
adc
test
mull
dec
jmp
scas
push
ljmp
addr16
lea
icebp
int3
jp
mov
mov
sub
lret
pop
shl
pop
inc
sub
repz
xor
std
xchg
in
sbbl
imul
pusha
dec
rcrl
mov
mov
mov
ficoml
imul
outsb
jmp
pop
jp
jne
and
push
pop
mov
dec
mov
rcll
mov
xor
inc
in
sti
pop
mov
push
outsb
incl
dec
movsb
push
ja
xor
xchg
stc
mov
clc
xchg
push
bound
cwtl
fldcw
push
lock
push
push
lret
call
out
add
inc
xor
and
stos
or
pop
cmpb
fcoml
fnstenv
test
je
jae
xor
clc
jns
fnstcw
jno
mov
xchg
cli
scas
jae
in
or
pop
push
loopne
add
stos
inc
and
mov
push
inc
push
std
fmuls
or
ds
sar
mov
mov
add
mov
dec
rcrl
mov
dec
mov
sub
filds
out
fisttps
and
dec
and
add
sub
mov
popa
pop
sub
and
lcall
outsl
outsl
outsb
ret
cmpb
mov
jbe
lea
and
gs
sub
add
mov
or
loopw
dec
jbe
inc
gs
mov
iret
adc
ficoml
lea
test
stc
pop
stc
jnp
push
stc
fwait
mov
int
jmp
pop
les
sub
ret
lds
add
add
mov
and
mov
push
add
test
dec
mov
pusha
mov
mov
or
call
and
jne
and
push
mov
mov
testb
push
jl
mov
cmp
xchg
push
dec
sbb
shlb
cmp
loopne
dec
movsl
mov
pop
outsl
inc
ja
outsb
mov
loop
lahf
scas
jbe
movsl
fstpt
pop
mov
popf
nop
add
sbb
ss
lret
lock
mov
cld
xor
test
mov
sar
mov
les
test
mov
mov
mov
push
mov
adc
mov
das
mov
sbb
in
scas
arpl
stos
in
cmp
in
mov
iret
les
mov
loopne
insl
and
gs
nop
cmp
sbb
pop
push
cmpsl
clc
pop
sub
mov
mov
or
imul
sbb
data16
push
push
int
pminub
fwait
aad
mov
pop
shl
shrl
xor
push
divps
in
jecxz
sub
into
sub
jp
aas
clc
in
repz
and
xchg
dec
add
ret
mov
loope
mov
lods
std
push
mov
dec
mov
inc
loop
inc
mov
popa
mov
lods
pop
sub
adc
mov
insb
shrb
lret
pop
pop
pop
mov
sbb
jno
test
lcall
lcall
mov
sub
push
stos
dec
in
call
dec
or
stos
in
test
imul
xchg
add
sbb
rcr
dec
insl
mov
xor
jo
in
sarl
outsb
fldenv
jbe
pop
cmp
add
into
sti
bound
outsl
out
or
pop
movl
out
in
rcr
or
or
scas
and
int3
xchg
cs
gs
lods
in
inc
sub
adc
ljmp
cltd
outsl
je
mov
jno
jnp
mov
je
std
aam
addr16
push
dec
add
lock
add
rcrb
jp
cmc
mov
repnz
push
jo
lret
inc
test
pusha
inc
sbb
pusha
or
dec
rclb
cmp
into
inc
or
ret
ss
int
into
push
in
test
popf
test
es
mov
loope
inc
xchg
cmp
cmc
xchg
push
insl
xor
mov
cmp
cmpsb
js
mov
fistl
cli
into
cs
repnz
jl
jnp
stos
orl
outsl
std
adc
stc
addr16
xlat
cmpb
sbb
fistpll
xor
pop
cwtl
int
cld
pop
into
inc
cwtl
and
test
scas
or
mov
cmpsl
cwtl
xchg
jno
dec
mov
cmp
jmp
dec
scas
cmc
mov
das
mov
mov
es
push
leave
data16
loopne
inc
orl
stc
jmp
lret
add
xor
int
mov
mov
push
cmpsl
mov
xor
ja
pop
lret
xchg
or
add
sub
gs
inc
or
xchg
add
xchg
in
std
dec
mov
mov
add
icebp
stc
or
int3
shr
mov
call
fisubs
pusha
and
mov
cmp
cltd
mov
rclb
xchg
inc
das
rclb
mov
mov
and
out
mov
in
xor
stos
cmc
sbb
mov
loope
cs
test
mov
jbe
cmp
mov
mov
pushf
out
jle
mov
fstpt
push
nop
cltd
xchg
js
jg
into
cld
shll
mov
sbb
ret
hlt
mov
cs
aaa
fsubr
rcll
lea
pushl
mov
rol
mov
pop
loopne
add
les
lea
add
test
cmpsb
out
pop
sbb
fsubrs
into
aas
lcall
mov
lock
cmp
aam
jbe
sbb
xchg
jle
fisubrl
and
in
xchg
jno
or
arpl
ja
adc
clc
sti
movsb
push
test
inc
jno
jae
jecxz
sub
jecxz
sarb
push
arpl
loop
popf
scas
adc
movsb
subb
pop
jmp
out
pop
lods
xor
pushf
xor
out
fisttpll
out
jmp
call
push
lcall
or
xchg
adc
or
call
jne
data16
movsl
mov
xorl
pop
lods
cmp
loop
pop
cs
add
xchg
addr16
lods
pop
movsb
push
xchg
int
jp
insb
out
and
sbb
sub
push
stos
orl
and
dec
mov
cmp
mov
pushf
dec
repnz
jmp
mov
cmp
inc
xor
jle
int
xlat
ret
mov
jno
sub
xor
call
adc
sub
adc
nop
jecxz
adc
mov
gs
daa
mov
xor
stos
add
out
je
loop
lahf
test
cmp
repz
mov
sahf
rcl
imul
mov
lods
mov
pop
filds
cmp
push
ret
mov
test
in
mov
push
sub
lea
call
and
push
xchg
out
mov
cmovnp
cmp
sub
repnz
lret
sti
xchg
inc
mov
push
mov
xor
lcall
mov
xchg
xchg
cmpl
lds
fucomi
inc
dec
int
cvtpi2ps
cwtl
xchg
push
dec
sbb
fimuls
push
dec
fidivrl
inc
aad
scas
shrb
jne
xchg
adc
lods
push
or
push
mov
js
push
mov
adc
jp
lods
pop
jp
sub
push
push
and
sub
shl
jbe
push
dec
pop
fimull
sbb
test
imul
inc
inc
dec
cli
xor
ds
fidivrl
scas
inc
jbe
daa
hlt
jns
mov
arpl
addr16
mov
mov
mov
addr16
cmp
jne
xchg
pop
sub
lret
adc
or
ds
jb
test
lods
xlat
iret
fwait
sub
andb
fsts
outsl
cmc
mov
add
sub
fmul
sub
cmp
xorb
cmp
dec
lcall
ljmp
fisubs
inc
repz
mov
pop
sbb
ja
jno
and
xor
outsb
push
les
mov
push
test
outsl
mov
dec
jne
push
add
and
clc
pushw
dec
lods
mov
push
shlb
in
movsl
out
pop
mov
in
rcrl
lret
xor
inc
out
and
xor
fistps
cmp
and
fstpt
pop
mov
and
sbb
add
add
aas
mov
inc
loope
in
sub
sub
addr16
and
mov
xchg
nop
sbb
in
cmpsb
xchg
loop
push
fiaddl
xchg
xchg
iret
sub
int3
mov
and
lea
fidivrs
and
data16
aas
insl
fsts
shrb
push
sbb
pop
mov
push
mov
ja
test
pusha
fimull
pop
mov
xchg
cwtl
xor
or
lods
adc
xchg
mov
push
dec
or
jecxz
push
in
inc
movsb
dec
sub
aas
mul
std
subb
inc
add
push
cmp
push
les
inc
jo
xchg
ljmp
mov
pop
aaa
mov
mov
add
mov
fistpll
testl
mov
jb
inc
push
pop
cmp
sbb
push
cwtl
sar
adc
pop
mov
sbb
xchg
xchg
mov
or
dec
xor
insl
cmp
jle
xchg
cld
cld
int
jnp
sbb
das
out
mov
or
sbb
lret
pop
jae
add
and
lahf
inc
push
pop
or
push
cs
call
add
pusha
sahf
lret
icebp
or
and
cld
int3
dec
add
dec
cmpsb
mov
add
loope
lret
lods
inc
add
es
xor
out
adc
sti
in
pop
adc
stos
push
out
shll
insb
mov
ror
repnz
push
mov
mov
jmp
pop
xchg
fists
int
xchg
loope
nop
data16
mov
sbb
xor
insl
jle
mov
adc
fwait
xchg
test
add
test
push
cli
sbb
cmp
sbb
lret
sub
lods
mov
push
in
inc
test
mov
or
shr
sub
fidivrl
out
insl
xlat
xchg
jmp
imulb
inc
ds
mov
push
lods
popf
ja
test
movsb
orl
inc
div
sub
xor
sbb
push
pop
xchg
pusha
inc
inc
in
xor
mov
mov
mov
dec
push
por
sarb
mov
pop
test
das
aaa
orl
pop
mov
push
imul
call
pop
pusha
inc
pop
pop
popa
and
fs
mov
les
mov
mov
or
fcoml
lret
mov
test
sub
rcl
lock
and
add
dec
add
sbb
push
inc
lods
repz
jge
cmp
lret
mov
and
cmp
and
sbb
lds
mov
xchg
cmp
inc
push
or
jbe
leave
xchg
push
xor
sbb
mov
cmp
das
scas
popl
mov
push
push
xchg
call
jns
sub
mov
pop
add
mov
mov
and
ja
data16
test
mov
test
push
incl
arpl
hlt
sbb
jmp
jecxz
pop
xor
aam
je
xchg
gs
std
mov
dec
mov
mov
mov
out
int
sbb
push
sub
jmp
stos
push
inc
das
jbe
xor
test
imul
es
repnz
sbb
mov
dec
xchg
pop
arpl
xor
mov
aas
push
ds
adc
adc
jmp
jecxz
push
mov
in
cmpsl
mov
cmp
pop
mov
xor
subl
pop
inc
or
xor
xorb
xor
mov
and
lods
dec
pop
sub
fsubr
test
das
xchg
pop
push
pop
repnz
fs
in
sbb
xchg
test
insl
adc
fidivrs
add
divb
sbb
sarb
iret
call
mov
pop
cli
xor
pop
addl
mov
sbbl
jb
iret
lret
aaa
ljmp
jns
fsubrl
test
sub
xchg
adc
notl
ja
rolb
insl
movb
mov
xchg
mov
adc
dec
xlat
vmovsldup
cli
ds
out
sbb
cmpsl
push
test
cwtl
pusha
cmp
lock
scas
jge
aas
stc
js
rcrl
add
in
cmp
rolb
add
mov
dec
mov
sahf
pop
mov
dec
test
mov
xchg
stc
mov
xor
dec
adc
in
or
mov
and
shll
in
jne
int3
fldl
adc
mov
rcrb
xchg
xor
cmp
aas
pop
stos
sbb
sti
rcl
in
imul
cs
imul
push
push
xchg
cmpsb
popa
sub
xchg
xchg
ret
sub
into
in
dec
loop
js
jb
adc
pop
adc
mov
add
sub
mov
out
lret
out
popa
dec
cmpsl
out
ret
xorl
std
popf
inc
mov
divb
cmp
push
xchg
decl
ffreep
sbb
arpl
jae
fsub
adc
imulb
sahf
popa
cmp
les
mov
test
lcall
movsl
or
aaa
jg
sahf
fisttpll
pop
int
call
daa
lods
movsl
dec
sahf
popa
in
cmc
add
and
push
cmp
out
add
xchg
dec
andl
jns
movsb
adc
aam
int3
or
idivb
shrl
and
lods
push
inc
fstpl
cmp
addb
in
mov
push
cld
sahf
and
in
movsl
mov
xor
mov
fs
adc
outsb
adc
in
cmp
ret
shr
sub
mov
cmp
fcompl
xchg
into
sbb
jmp
enter
fwait
adc
mov
inc
shl
pushf
out
sub
cmp
inc
fisubl
mov
cmp
pop
ret
cmpsl
xor
sbb
stos
sbb
mov
enter
dec
testb
cmp
mov
dec
mov
clc
in
and
filds
out
aaa
movsb
dec
sahf
das
fwait
addr16
sub
xor
mov
dec
mov
rcll
push
cmc
adc
bound
lods
roll
icebp
xchg
mov
scas
lea
add
iret
or
cld
push
mov
lds
in
pop
or
push
popa
push
mov
lock
inc
in
mov
cmp
pop
clc
cmp
mov
enter
movsb
xor
ljmp
mov
repz
push
adc
mov
or
test
movsb
cmpsb
rcrb
test
aam
js
std
jae,pn
fs
mov
loope
adc
outsl
jns
mov
int
fists
popf
or
and
dec
xchg
cli
fistl
mov
repnz
je
test
cltd
add
lea
push
testl
out
add
adc
jl
outsl
inc
push
std
shrb
lret
xor
pop
ret
out
mov
mov
dec
dec
jb
xlat
xchg
scas
rcll
mov
dec
mov
adc
test
aas
sub
jle
mov
pop
add
sahf
mov
xchg
test
dec
xor
lcall
push
fcomip
je
jl
ret
or
leave
sub
xchg
out
shrb
dec
insl
sbb
movsl
pop
test
push
stos
repnz
push
enter
and
sar
aad
addb
aas
pop
jae
jp
dec
dec
fnstsw
sub
mov
fs
insl
xchg
iret
jmp
mov
dec
out
add
dec
push
inc
xchg
outsb
nop
shl
ds
mov
aas
out
mov
push
lock
scas
loop
xchg
popf
fsub
daa
jbe
roll
les
and
push
js
pop
mov
xor
xchg
cmp
inc
insl
fbstp
jae
inc
popf
loopne
cld
mov
cwtl
pop
int
call
scas
movsb
scas
xchg
xchg
jb
rorb
fldenv
dec
xchg
aad
outsl
mov
dec
inc
ret
icebp
ja
and
insl
mov
adc
popa
mov
sbb
mov
cmpsl
xor
inc
inc
inc
fistpl
add
leave
cmp
cmpsb
stos
adc
jp
into
lea
mov
pushf
jge
pop
mov
imul
iret
dec
mov
mov
stos
ss
inc
shl
popf
xchg
xlat
into
fidivl
mov
out
adc
out
ja
imul
xor
in
mov
sti
arpl
mov
test
fcmovnb
xchg
std
jno
dec
pop
testb
pop
insl
call
test
push
and
mov
test
arpl
in
push
cmp
adc
rorb
cs
cwtl
sahf
out
fldenv
mov
sub
arpl
push
ficoms
and
bound
movsb
aaa
andb
add
or
mov
jle
and
rep
dec
rorl
xchg
adc
scas
pop
das
movsb
pop
dec
and
cld
jno
loop
cmpsb
cltd
pop
shll
iret
cmpsl
add
mov
icebp
dec
das
or
in
xchg
xchg
xchg
jo
mov
inc
ror
sbbl
add
mov
sbb
movb
adc
mov
xchg
sub
sub
xchg
mov
pop
jbe
das
mov
sahf
jnp
rorb
pop
mov
xor
stc
stos
lret
cmp
dec
out
jmp
xchg
orb
imul
mov
into
mov
cmp
cmp
fldl
push
sub
ds
xor
xchg
les
xchg
jae
xor
sbb
sub
xor
dec
or
cltd
jmp
aaa
lcall
stos
dec
or
mov
out
jl
cld
xchg
es
fisubrs
cmc
les
fmul
xrelease
fsubp
pop
rcll
lods
mov
daa
lcall
push
push
in
into
and
and
in
lret
movsl
je
andl
cs
jnp
xchg
xor
adc
pop
outsb
sub
xchg
inc
fldl
pop
mov
push
dec
incb
or
dec
add
sub
inc
jg
or
jnp
call
cmp
addl
test
jge
sub
mov
dec
dec
mov
sbbb
dec
or
lcall
fidivrl
and
sub
fs
add
test
or
lods
fistpll
mov
mov
sub
sbb
test
cli
or
jns
add
jl
sarl
mov
mov
mov
insl
stos
sub
mov
cmpsb
and
shrl
popa
int3
pop
shrl
into
arpl
shll
negb
lds
xchg
cmp
insl
movsl
cmp
jmp
push
mov
iret
sbb
push
mov
test
inc
rclb
and
mov
inc
ljmp
aam
ja
lds
and
mov
scas
dec
pusha
pop
push
dec
xchg
std
dec
test
or
xor
mov
loope
mov
rcl
add
jae
mov
out
pop
ds
mov
mov
push
mov
movsb
jae
ficoml
cmp
sbb
fstpt
adc
ljmp
decb
cwtl
pop
jb
push
adc
jae
addr16
inc
mov
pop
loopne
loope
cs
sbb
sub
int
cmp
js
mov
popa
gs
jne
clc
sub
mov
scas
add
in
lods
and
pop
push
inc
add
loope
push
xor
jp
adc
jl
dec
inc
inc
xor
out
cmp
and
ljmp
or
nop
loope
cli
mov
mov
fistl
and
int3
mov
lret
movb
repnz
xchg
cmp
push
add
inc
add
fldl
xchg
sub
repz
xchg
sahf
xor
or
cmp
divl
jle
repz
add
and
adc
ss
sub
and
and
xchg
xchg
dec
sub
mov
pushf
sub
xchg
loopne
repz
popf
xor
insb
dec
mov
outsl
add
cmp
popf
sbb
inc
leave
stos
sbb
inc
loop
in
mov
data16
add
jns
gs
clc
les
lds
or
popa
mov
stos
mov
xchg
fsubr
es
or
insb
push
cwtl
test
sub
lea
pop
inc
mov
push
dec
out
stos
xor
sbb
clc
xor
push
xchg
add
test
inc
cld
mov
ds
int3
test
cmpl
sbb
jbe
mov
dec
jmp
arpl
push
add
adc
hlt
rcrl
sub
lahf
adc
imul
push
aam
or
inc
shl
and
push
xchg
cwtl
pop
xchg
adc
cmpsb
inc
push
xchg
dec
mov
out
sbb
dec
cmp
fidivs
cmpsl
mov
adc
inc
fnstsw
bound
mov
pop
jle
insl
adc
or
popa
pop
cmpsb
lods
sub
push
cmpsb
rcrl
inc
jb
pusha
iret
sahf
cmp
push
push
mov
incl
loope
cmp
or
cmp
enter
mov
push
sahf
jp
loopne
movsl
lock
mov
test
add
push
out
pop
xor
push
cmp
jle
mov
leave
lcall
out
mov
cmp
pop
inc
aaa
sbb
int3
rcrb
into
cmc
jmp
push
test
int3
fsubrs
mov
mov
sub
xchg
mov
lcall
into
mov
ss
js
movsb
pop
test
jae
stos
jno
out
hlt
pop
subb
fisubs
inc
sbb
xor
adc
jb
out
loopne
enter
jnp
push
and
mov
je
and
insl
cmpsl
sub
loope
ret
mov
fsubs
inc
clc
mov
pop
mov
xchg
stos
jne
ljmp
das
pushf
mov
adc
into
pop
sbb
loopne
fcomp
push
pop
jge
ss
xchg
sbb
pop
gs
xchg
push
lock
inc
xchg
jl
mov
xor
adcb
mov
enter
mov
jp
xchg
mov
add
or
pop
adc
cmp
int
pop
sti
ss
or
loop
xchg
inc
ljmp
xchg
sahf
sti
aam
dec
mov
je
popa
dec
xlat
pop
sub
mov
cmp
adcb
mov
mov
pop
push
pop
loope
test
enter
fildll
stos
inc
xor
push
mov
loopne
fmuls
paddsw
dec
xchg
loop
fsubrl
in
dec
xor
and
enter
js
push
mov
xlat
inc
fimull
xchg
scas
jae
xor
fstl
test
mov
and
sub
pop
cltd
xor
outsb
push
push
in
dec
icebp
cmp
xchg
mov
roll
xor
in
mov
fisttps
shll
ret
add
loope
stos
nop
xor
jb
pop
ss
fdivl
xor
test
mov
mov
lea
repz
dec
pop
bnd
sbb
frstor
call
add
push
mov
dec
aaa
jl
imul
stos
cmp
in
adc
jne
inc
aad
xchg
cmpsb
inc
bound
mov
out
pop
push
jmp
dec
out
int
inc
bound
call
jbe
lret
sbb
popa
jbe
adc
add
lret
pop
outsb
mov
call
incl
add
pop
sbb
rcll
jle
call
and
fstpt
or
nop
insb
lahf
xchg
sub
std
test
xchg
mov
push
je
sbb
cli
in
loop
bound
in
mov
std
insl
cmp
scas
push
inc
jb
addr16
push
mov
jge
int
or
jbe
push
push
jns
in
insb
jnp
add
aas
mov
ret
test
jge
sahf
push
js
sbb
or
inc
inc
pop
hlt
xlat
clc
or
addb
dec
fsubl
xchg
mov
or
das
iret
and
movsb
sbb
xchg
iret
std
mov
mov
in
and
xchg
xor
xchg
sub
add
scas
add
jnp
dec
push
fsubrs
jl
dec
push
test
push
int3
aaa
fs
push
loope
flds
push
rolb
lahf
fs
mov
xchg
fcmovu
dec
cmp
popf
pop
jo
iret
lock
outsl
push
stos
xchg
inc
mov
adc
or
sbb
inc
add
xchg
outsl
fcoms
ljmp
out
jb
sbb
or
xchg
or
cmp
mov
out
mov
clc
adc
jnp
leave
jno
xor
sub
cmp
and
repz
mov
jmp
les
filds
outsb
mov
adc
aad
jae
push
cmpl
data16
or
dec
test
mov
sub
lret
push
sahf
cmp
mov
out
jno
or
mov
lret
jnp
movsb
dec
fsubrl
mov
lea
pop
repnz
jns
and
iret
inc
andb
jp
int
mov
mov
pop
pop
insb
xor
shlb
test
adc
adc
jp
sub
mov
iret
insl
lea
sbb
fs
cmpsl
js
pop
fs
xorb
out
gs
push
fs
dec
jns
loope
xchg
dec
and
push
icebp
pop
xchg
push
push
sub
mov
mov
xchg
xchg
call
imul
ret
xor
aad
sbb
push
lret
or
cli
pop
clc
mulb
pusha
adc
xor
mov
xchg
xor
lret
insl
testl
xchg
or
push
xor
cmp
push
add
das
rcrb
pop
sub
lea
sti
fcomps
decb
notb
xchg
jnp
cmpsl
test
addr16
imull
xor
andl
lcall
cs
xor
rolb
or
sbbl
mov
cmpsb
iret
mov
ss
jns
stos
out
jo
cmp
adc
je
jbe
sub
in
sub
leave
stos
inc
jae
inc
mov
jl
lahf
mov
jb
pop
mov
adc
xchg
arpl
sbbb
and
out
fdivl
cli
mov
pop
ret
lods
outsb
jecxz
fs
xchg
outsl
jp
adc
push
fcomps
xchg
cmpsl
imul
and
sbb
fdivs
pushf
mov
enter
and
push
mov
shr
and
lds
sahf
sbb
shl
xchg
andb
daa
adc
mov
jo
mov
std
int
std
dec
jb
cmp
loop
fucomip
jnp
imul
cmp
xor
mov
leave
ljmp
pop
pushf
les
js
test
xchg
ret
mov
movsb
mov
fists
push
rorb
xor
mov
pop
cmp
add
cmp
xchg
sub
pop
incl
inc
stc
fdivp
lock
cmp
mov
mov
or
mov
cmp
adcl
mov
insl
dec
cmpl
mov
iret
popl
rclb
jmp
int
sub
out
test
push
jae
sub
push
dec
in
lcall
call
leave
je
cmp
nop
movsb
add
jnp
es
inc
in
dec
hlt
repz
add
outsl
pop
addr16
or
rcrb
push
bound
jecxz
jmp
ja
cld
cmp
cmp
or
scas
andb
fs
xchg
mov
divl
std
pushf
pop
iret
outsl
or
mov
shll
mov
fidivs
push
test
sub
push
mull
insl
dec
dec
rcrl
pushl
imull
sbb
cmp
mov
negb
mov
test
fprem
mov
scas
pop
clc
pop
pop
test
pop
rcrl
loopne
das
ljmp
subb
int3
out
cli
mov
aaa
mov
sahf
pop
inc
xor
flds
pop
cmpsl
enter
lods
lret
xor
pop
push
mov
or
xor
xchg
xor
pop
lods
repnz
cmpsl
or
shlb
xor
dec
sub
jmp
jle
scas
rorl
movsb
jg
cli
sti
pop
popf
setp
test
enter
imul
stc
bound
iret
xchg
int3
mov
cmpsb
mov
xor
leave
adc
pop
jg
push
mov
adcb
cwtl
popa
pop
mov
cmp
push
sub
test
faddl
int
hlt
incb
stos
jge
aam
adc
das
pop
xor
or
and
xor
mov
mov
into
and
stos
dec
mov
sub
inc
stos
xlat
loope
insl
frstor
xchg
outsl
xor
loope
mov
into
mov
frstor
outsb
push
add
popf
call
iret
push
cmp
sbb
mov
sahf
lcall
jnp
mov
adc
rolb
pop
or
insl
movsl
inc
sbb
push
sahf
int
lds
cmpsl
pop
ds
mov
or
mov
inc
pop
loopne
sub
pop
pop
addl
mov
push
movl
fs
mov
push
xor
mov
repz
aad
sbb
push
les
sbbb
mov
sar
sbb
mov
mov
fmull
cs
ret
sbb
push
fs
cmp
xchg
and
xor
sbb
popa
dec
pop
je
push
loope
cmp
xor
sub
cmp
add
outsb
adc
pop
cmp
xlat
in
in
push
cmpsb
jns
jno
testl
sbb
mov
sti
or
ja
movsb
adcl
mov
jne
jecxz
xchg
sbb
push
sbb
jmp
mov
xchg
aam
sti
inc
and
mov
xchg
aam
pop
jmp
mov
shrl
cmp
sub
nop
and
into
adc
cmpsl
inc
lea
in
inc
xchg
and
xchg
in
aam
jg
xor
or
push
push
das
and
jle
mov
push
jbe
inc
cli
dec
addr16
fcoms
pop
mov
cmp
add
adc
inc
inc
jp
jb
mov
stos
ljmp
or
lock
mul
pop
jae,pt
in
insb
es
pop
mov
icebp
cltd
sti
mov
iret
push
in
push
mov
fwait
loope
mov
xchg
in
cmp
mov
sbbl
jmp
sbb
mov
dec
jne
pop
and
or
mov
cld
and
or
arpl
adc
ja
cmpsl
stos
mov
mov
push
add
in
mov
add
xor
adc
and
xchg
fstl
xchg
inc
mov
push
push
stos
les
pop
loopne
or
cmpb
out
fistl
js
inc
inc
arpl
jmp
shrb
mov
cmpsb
test
pop
mov
nop
lock
clc
arpl
fimull
fldenv
mov
jne
in
testl
jo
outsl
pop
sub
xor
xlat
push
leave
dec
or
and
rorb
lds
testl
push
das
cmp
push
sub
dec
sbb
pop
lcall
insb
movsl
mov
xor
push
dec
pop
into
test
xor
xchg
mov
mov
daa
loop
jmp
insl
mov
call
test
insb
rcrb
repz
adcb
int
leave
mov
out
mov
xlat
pop
jo
jns
push
and
outsl
push
mov
cmc
aas
adc
mov
and
cmpsb
adc
jg
jne
std
shlb
lods
xchg
mov
dec
out
cmp
xor
mov
iret
xor
movsb
push
mov
gs
rol
mov
xor
cld
fistpll
imulb
cmpl
stos
leave
xor
dec
sti
adc
sub
std
sbb
out
movsl
sbb
xchg
mov
pop
test
ja
leave
pop
movsb
lods
jmp
in
insb
scas
movsb
mov
cmp
shll
push
stc
mov
ds
les
mov
mov
bound
dec
pop
sub
cltd
cmp
add
jbe
xchg
sub
outsl
test
icebp
clc
push
sbb
sarl
add
stos
inc
push
mov
ds
flds
sahf
mov
cli
jecxz
jmp
leave
fimull
mov
add
and
outsl
dec
mov
mov
stos
mov
pop
lahf
jae
iret
mov
xchg
xor
mov
aaa
sub
dec
int3
add
imul
xlat
cwtl
or
lcall
lret
jnp
xor
pop
or
dec
adc
mov
std
or
aas
enter
movb
xchg
sbb
addl
ret
cltd
repnz
pop
das
cmp
add
cmpl
aad
sti
mov
xchg
xchg
sbb
mov
sbb
dec
mov
lock
jg
adc
jnp
adc
enter
pusha
movsb
xchg
push
outsb
aad
std
pop
xchg
inc
sub
in
cmp
xor
in
and
jl
in
shll
rorl
push
cmpsl
cmp
pusha
cmp
nop
dec
mov
xchg
xchg
push
lds
das
and
dec
xchg
stos
out
jnp
divb
in
cmpsb
sbbl
push
rclb
jno
dec
aad
test
mov
aad
in
inc
lcall
xor
sbb
sbb
push
scas
or
push
dec
xchg
xor
lret
repnz
sub
adc
pop
call
ljmp
xchg
cmpsl
popa
adc
adc
cmpsl
push
imul
insb
js
inc
xchg
jns
ds
insl
dec
jnp
or
mov
sub
jp
lret
mov
aaa
scas
fwait
lret
push
push
jnp
xchg
push
out
fnsave
lods
cli
add
push
sub
mov
inc
mov
mov
loop
jge
add
andl
addr16
sub
mov
hlt
and
jns
test
pushf
and
mov
sbbl
xchg
int
in
mov
movsl
mov
fildl
rcll
dec
or
cmp
rclb
xchg
pop
pop
aam
imul
shr
and
sti
lea
and
mov
mov
stos
ret
lea
cli
cmpsl
jbe
adc
imul
std
test
xor
push
pop
mov
push
imul
push
xchg
fmul
je
out
imulb
outsb
clc
mov
aas
and
lcall
inc
pushf
sti
filds
jae
sbb
lret
shll
movl
out
call
mov
repz
ffreep
ja
gs
pop
notb
in
test
mov
sbb
push
shrb
mov
jecxz
cltd
jb
roll
xor
jnp
in
xchg
or
shlb
pop
lea
imul
imul
outsb
sub
lahf
push
test
sbb
dec
inc
rclb
int3
fsubrs
std
and
jg
push
aaa
int
mov
mov
fcmovbe
cli
dec
jae
xchg
lret
in
mov
mov
inc
sub
and
stos
ja
pop
xor
je,pn
xor
out
push
inc
and
out
mov
in
pop
sbb
subl
mov
shlb
push
cmp
add
inc
mov
sub
lahf
jmp
pop
cli
ljmp
or
xlat
cmp
icebp
sti
jb
add
roll
push
popf
lea
idiv
push
lods
mov
shl
mov
int3
lret
sbb
fxtract
cmp
cmp
mov
xchg
mov
and
int
jb
mov
push
pop
and
jne
pop
mov
mov
or
arpl
mov
mov
stos
movsb
mov
in
fisubs
push
push
in
popf
lods
fcomip
xor
ret
and
into
inc
test
in
out
shrb
into
push
pop
cli
mov
sbb
inc
xchg
cmp
mov
imul
inc
push
adc
cmp
xchg
sub
adc
jb
jmp
dec
jae
imul
movsb
test
cltd
fwait
push
ss
fcmovnb
push
std
push
mov
and
jbe
stc
inc
aad
shl
and
dec
adc
sti
sbbb
pop
jnp
ficoml
test
add
add
add
sbbl
sub
jne
das
in
out
test
cmp
lock
jne
add
das
lcall
stos
mov
add
stc
xchg
mov
adc
repnz
int3
inc
cmpl
es
pop
lret
nop
dec
out
jl
jno
sub
rorl
cmc
out
fldcw
xor
call
xchg
mov
xchg
cs
test
divb
incb
mov
mov
pop
mov
jns
jnp
jl
jp
inc
push
jno
cmp
aam
in
aaa
or
xchg
in
mov
scas
mov
cmp
testb
lret
and
je
xlat
dec
shll
mov
ss
xlat
xor
jne
fcoml
xor
popa
gs
std
cmp
pop
mov
inc
and
or
mov
jp
push
nop
mov
cmpsl
sub
pop
insl
mov
push
adc
sbb
loopne
mov
out
lods
fisubs
test
pop
cld
mov
cmc
sbb
daa
and
push
fiadds
mov
and
push
arpl
lret
insb
sbb
xchg
je
jb
xchg
fisttps
cmp
lods
cmp
fdivrs
dec
push
and
pop
sub
inc
cld
xchg
dec
dec
mov
inc
inc
mov
cmp
loope
jle
or
sub
js
mov
aam
imul
or
inc
pop
mov
xchg
in
test
push
mov
mov
jp
data16
inc
add
fst
cmpl
sbb
push
add
idivb
jg
rclb
clc
pushf
lds
add
mov
dec
sub
jmp
fsubr
les
stc
mov
sub
cmp
popfw
mov
das
sub
mov
xchg
lea
adc
mov
jle
adc
inc
xor
int
lods
faddl
daa
add
add
or
lret
enter
sub
shlb
mov
pop
repnz
pop
fcomip
ficompl
ss
sbbb
fisubrs
sahf
mov
aad
movsl
lret
inc
jecxz
jp
fwait
sbb
insb
pop
out
and
pop
fcmovnu
cmpsb
sti
test
scas
jle
cmc
aam
cmpsl
cwtl
cmp
loopne
hlt
or
jno
std
dec
add
or
inc
xor
adc
xor
test
or
loop
loope
xlat
cmc
outsl
cld
dec
outsl
jecxz
or
movsl
je
push
push
mov
inc
pop
xor
paddusw
test
sbb
dec
push
sbb
fldcw
add
cmpsl
xor
jp
fiaddl
mov
add
sbb
loope
dec
loope
stc
scas
cmpsb
pop
mov
repz
loope
add
jnp
cmp
rorl
hlt
inc
or
cmc
sbb
jmp
lods
lcall
roll
mov
xadd
lds
xchg
push
lods
imul
push
cmp
push
mov
push
addr16
push
jecxz
shll
cmp
into
lods
xor
jae
testb
sbb
push
mov
dec
cmp
jmp
mov
lods
mov
test
out
mov
sub
pushw
and
das
ds
in
mov
dec
pop
push
or
repnz
mov
mov
mov
jne
and
insb
scas
sub
addb
out
subl
and
test
xor
sbb
sub
imul
jnp
movsl
leave
nop
ljmp
notb
mov
mov
loope
mov
aaa
fldenv
and
mov
mov
cld
das
push
dec
adc
or
cmp
mov
test
iret
inc
sahf
xchg
xlat
mov
movsb
popa
je
inc
mov
and
mov
fwait
icebp
dec
pop
out
mov
test
or
aaa
scas
sahf
push
pop
repnz
stc
xor
inc
cmp
int3
cmp
jnp
mov
mov
shr
xchg
or
jecxz
out
in
test
imul
pop
mov
jl
repnz
xor
push
mov
int
movsb
movsl
jno
cs
icebp
movsb
cmp
cmp
dec
jl
jmp
xor
rorl
sbb
test
mov
les
rcr
repz
xchg
sub
sbb
sbb
cmp
mov
clc
mov
pop
fdivp
ja
push
imul
popf
add
sbb
mov
mov
popf
dec
sbb
rol
jnp
dec
xchg
add
push
add
push
mov
pop
mov
adc
and
aaa
push
mov
add
loop
ret
sub
pushl
ljmp
sbb
adc
dec
mov
test
adc
aas
int3
fmull
mov
pop
pop
pop
push
inc
xchg
push
mov
out
jmp
stos
popa
cmp
xchg
mov
mov
je
enter
adc
dec
lea
test
or
pop
push
pop
xorl
fsts
lods
out
inc
adc
mov
dec
xchg
test
jns
stos
dec
and
arpl
sbbb
mov
push
xor
cltd
push
ja
mov
mov
xchg
mov
cmp
insb
lcall
push
movsl
lcall
daa
les
push
loop
ret
pop
test
sub
cli
test
add
sub
sub
jb
xor
jg
inc
inc
decb
sarb
cmp
xchg
int3
incb
adc
popa
pop
ja
lcall
pop
mov
sbb
jae
sbb
lock
jbe
add
jge
lods
push
hlt
mov
xor
mov
dec
pop
jmp
rol
sub
lock
jmp
icebp
adc
aaa
jp
jbe
stc
inc
jo
shll
das
and
or
orb
movsl
or
mov
loope
mov
xchg
lret
mov
push
adc
in
lea
mov
pusha
dec
adc
outsb
clc
push
js
jecxz
sbb
arpl
int3
std
push
lock
pusha
icebp
dec
fisubrl
push
stc
mov
sub
mov
out
ds
adc
bound
shl
popf
mov
fabs
out
fistps
leave
in
add
lock
jnp
mov
mov
and
in
pop
inc
bound
leave
push
stc
dec
or
xchg
mov
mov
call
scas
dec
inc
mov
or
sti
inc
inc
fmull
inc
ss
cli
sub
leave
lret
iret
call
movsl
pop
outsb
sub
sub
dec
out
pop
jno
js
add
xor
push
xchg
xchg
dec
movnti
mov
inc
dec
stc
mov
mov
scas
jbe
loop
loop
push
mov
popa
clc
lea
outsb
sub
out
fcoms
out
inc
aas
inc
mov
bound
in
ret
imul
dec
inc
sbb
scas
addr16
shrl
loop
movsl
or
push
jle
xor
sti
popa
mov
stos
pop
xchg
repz
test
adc
lods
jnp
sahf
adcl
pop
ret
sub
or
push
cmp
push
ret
mov
or
or
inc
fcomi
clc
pop
frstor
aad
cmpsl
and
lcall
into
jae
jle
mov
nop
push
leave
mov
jo
mov
ss
int
push
ja
jae
pop
pop
mov
cwtl
andb
pop
pop
dec
jno
dec
adc
xchg
fs
mov
xchg
imul
fstps
imul
mov
xchg
jbe
shll
jmp
sbb
or
pop
lret
fs
cwtl
hlt
dec
ret
sub
lret
shr
mov
pop
ds
sub
adc
ja
sbb
ret
mov
inc
lahf
test
or
gs
push
repnz
repnz
xchg
push
pop
cwtl
test
into
inc
jl
xlat
sub
xchg
dec
stc
dec
mov
icebp
pop
std
mov
aam
inc
sar
push
aas
sub
xchg
mov
push
int
in
xchg
adc
xor
sub
mov
int
lcall
push
sarl
jl,pn
push
inc
sub
fidivrs
pop
xor
out
jl
and
push
insl
in
xchg
js
or
int
push
mov
imul
insl
imul
lahf
cli
push
cs
popa
inc
cmp
call
outsb
popa
ret
stos
mov
popf
je
add
mov
add
fs
dec
lods
fs
xchg
sbb
add
xchg
stos
push
and
sbb
push
imul
in
dec
cwtl
clc
gs
dec
repz
xor
loope
loop
cs
dec
mov
fistpl
out
out
arpl
icebp
xor
add
ret
mov
mov
mov
sbb
push
add
loopne
cmp
cmp
shrb
and
ret
ss
ss
in
mov
mov
or
add
sbb
push
xlat
jge
cmp
mov
mov
iret
pop
lods
lret
out
insb
pushf
xchg
mov
xchg
push
je
inc
lods
aam
pop
call
cmpsl
mov
frstor
push
mov
pushl
loop
add
aad
stos
test
sarb
mov
cli
adc
stos
scas
cld
sub
jb
fisubrl
or
xchg
int
out
jns
testb
call
es
int
jne
les
xor
push
cwtl
cmp
clc
add
dec
sbb
pop
dec
dec
mov
cmp
sbb
xchg
dec
cmpsl
mov
mov
es
mov
scas
pusha
xchg
xlat
in
pop
or
ds
jae
pop
pop
cmp
pop
push
rolb
lock
loop
mov
or
mov
ja
or
pushf
lret
stos
cli
or
inc
fmull
sti
inc
js
or
scas
jnp
pop
and
jg
testl
mov
fbstp
adc
xor
and
xor
push
mov
rolb
fsubrs
aad
push
fildll
mulb
fdivs
jge
jo
cmp
jb
or
xor
ret
and
mov
ss
scas
push
js
inc
xor
lods
pushf
and
push
add
mov
imulb
test
arpl
stc
fisttps
ja
mov
cli
cli
addb
dec
adc
adc
pop
push
inc
inc
or
stc
inc
xchg
or
add
daa
stos
into
xchg
das
popf
mov
lods
mov
xchg
or
push
inc
mov
jecxz
push
xchg
data16
icebp
push
fs
xchg
sbb
lods
mov
jo
test
fmull
add
mov
sbb
xor
pop
sti
xor
fstpl
adc
in
mov
push
outsl
push
jge
stos
dec
sub
dec
jl
leave
add
arpl
mov
xchg
pusha
push
or
cmp
add
test
and
pusha
incl
pop
mov
mov
xor
fs
bound
lods
jl
pop
lret
jle
xlat
cmp
mov
xchg
jnp
mov
add
sbb
adc
xor
lret
fsubrs
dec
insb
xchg
lods
mov
push
ret
in
push
filds
inc
sub
scas
fs
out
mov
push
mov
imul
pop
mov
sbb
fidivs
pushf
andl
stos
pop
in
jno
hlt
enter
adc
ficompl
call
das
cmp
pop
lahf
pop
dec
push
stos
jge
scas
mov
inc
inc
imul
sbb
push
divb
out
dec
mov
push
lcall
and
xor
mov
roll
daa
xor
jo
or
rcl
xor
cmp
andb
dec
add
and
cltd
sbb
mov
inc
lock
and
sti
sbbl
stos
adc
add
ret
pusha
push
fnsave
negl
out
add
mov
test
cmpsb
addb
jae
xchg
shll
or
jg
push
xorb
int
arpl
bound
add
dec
inc
sbb
xchg
enter
push
pusha
jne
push
test
insl
jecxz
or
mov
mov
test
mov
jmp
sbb
push
jge
pop
cli
push
and
jp
jle
sbb
push
pop
adc
jo
cld
push
stc
mov
ret
inc
dec
cmp
outsl
out
dec
dec
sarb
jle
lods
mov
jmp
les
cmp
arpl
jg
cmp
lods
adc
iret
int3
pop
cmp
mov
in
fwait
loop
push
dec
jae
ret
popf
insb
sbb
jmp
and
dec
icebp
cs
xlat
cmp
push
push
movsl
push
dec
gs
shlb
adc
aad
arpl
mov
cmp
xchg
mov
cmc
and
inc
out
les
aas
insl
test
hlt
imul
push
and
aas
into
ret
and
sahf
sbb
andb
cmpsl
xor
add
jmp
scas
xor
loopne
fcompl
jb
pop
and
mov
push
mov
sti
cltd
mov
lahf
push
sbb
sbb
jp
add
and
fldcw
mov
xchg
ds
mov
mov
add
nop
jbe
add
imull
movsl
add
pusha
inc
adc
mov
xchg
sbb
inc
mov
jge
dec
pop
jp
rorb
cmp
shrb
icebp
inc
in
mov
test
scas
jmp
jne
jge
fs
sbb
test
js
jb
pop
sbb
shll
test
mov
sbb
adc
sbb
push
cmp
shr
jl
inc
and
jae
testl
stos
movsb
stos
bswap
andb
adcb
mov
test
faddp
out
in
mov
fsubp
mov
xlat
push
inc
inc
jno
push
xlat
sbb
dec
add
sbb
xchg
xchg
movl
jg
mov
mov
pusha
and
dec
mov
or
dec
fstpl
pusha
add
xchg
or
push
pop
push
lcall
sub
fdivrs
mov
in
and
push
xchg
add
pop
bound
jnp
ret
jae
xor
mov
fwait
push
nop
mov
roll
cmp
aaa
fcmovnb
in
aas
fimull
shr
mov
mov
andb
adc
jecxz
movsb
xchg
outsb
arpl
pop
nop
cmc
cmpsl
push
out
jge
add
divl
sahf
sub
jmp
pusha
jecxz
in
clc
ja
aaa
aam
cli
jns
jns
cmpsb
add
mov
fdiv
jg
in
or
into
movsb
test
aad
iret
push
pop
mov
pushl
push
mov
inc
jp
dec
or
push
inc
fdecstp
adc
pop
jle
fistps
push
test
stc
test
mov
sbb
stos
xor
rorb
push
rcrb
enter
rorl
sub
mov
aaa
addr16
and
cwtl
repz
inc
or
filds
mov
pop
loop
jp
xor
mov
push
cmpsl
adcl
push
cli
les
or
iret
cmp
push
sbb
fsub
js
imul
addr16
adc
adc
adc
out
into
fcoml
adc
call
cld
data16
iret
movl
pop
mov
popa
shll
fildl
outsl
sub
loope
mov
out
jp
inc
sbb
xor
dec
icebp
aad
xchg
mov
xchg
fsubl
cli
mov
sbb
cmp
push
mov
mov
fiaddl
repz
xchg
in
push
and
jge
jle
cmpb
dec
outsb
loopne
nop
fists
addr16
pusha
dec
mov
xchg
lahf
pop
sub
bound
dec
or
rorb
lcall
stc
movsb
xchg
loope,pn
pop
data16
cmp
mov
sti
push
pop
iret
push
xchg
xchg
jbe
or
out
ret
push
call
repnz
fstpl
mov
jle
sub
fcoms
sbb
sbb
dec
pushf
mov
mov
jbe
out
mov
nop
adc
mov
sarl
xchg
xor
movsl
popf
and
push
scas
aam
cltd
test
dec
out
sub
mov
pop
xor
push
push
loope
sub
jecxz
outsb
loope
incl
aas
shrl
test
sub
in
sbb
and
inc
inc
dec
sbb
testl
leave
dec
and
ljmp
and
sbb
push
int3
roll
xchg
idivb
adc
adc
dec
mov
fdivr
mov
pusha
iret
and
mov
xchg
pop
outsb
add
sbb
mov
shll
stos
push
xor
mov
cmp
sub
jb
add
mov
mov
addr16
jne
mov
pop
sub
movsl
scas
pusha
lods
mov
push
rolb
or
pop
shlb
push
test
mov
ja
notb
inc
ror
leave
stos
xchg
aaa
pop
aas
sub
push
inc
in
aad
fisubs
rol
ljmp
mov
dec
sarl
inc
popf
dec
addr16
xchg
loopne
sbb
mov
shll
xor
dec
call
jae
push
adc
inc
lods
lea
testb
out
mov
dec
push
cmpsb
or
iret
and
dec
xchg
mov
mov
xchg
xchg
push
into
mov
cmp
loope
fst
dec
fucompp
test
test
add
or
and
mov
dec
pop
pop
clc
push
dec
mov
xchg
jae
sub
cmp
mov
jmp
sbb
ljmp
pop
adc
outsl
push
pop
lret
pushl
popf
xor
pop
xchg
push
adc
cmp
pop
fimull
mov
dec
mov
aam
stc
dec
aam
iret
test
add
daa
mov
xchg
pop
sbb
add
or
xchg
lret
lods
loop
xchg
xchg
jno
fsub
repnz
lahf
mov
xchg
ljmp
pop
shr
jns
jle
fs
mov
adc
rorb
mov
pop
xchg
xor
out
sbb
dec
mov
cld
mov
or
jl
subl
popf
sbbb
int
mov
scas
imul
jp
dec
movsl
in
in
popa
jp
sub
cmp
jno
mov
aas
cmp
cli
dec
adc
xor
xor
sbb
fs
pop
mov
xchg
mov
cld
loope
pop
data16
push
xor
pop
pop
fbstp
jnp
mov
aas
xor
pushf
repnz
int3
out
fs
xor
inc
lcall
hlt
dec
int
and
xor
addl
lea
pushl
push
rclb
das
aad
fcoms
out
xlat
dec
sbb
movsl
cmp
jle
ret
out
mov
hlt
clc
outsb
test
sbb
mov
push
mov
ds
sahf
subl
mov
jmp
test
push
mov
out
pusha
cmp
push
aam
add
pop
sbb
cmp
mov
jnp
ja
mov
push
xchg
xchg
call
sub
xor
pop
out
fs
test
dec
jns
sub
lret
push
fadds
or
fwait
subb
ficompl
das
push
cmp
mov
jge
cltd
leave
int3
loop
in
dec
sbb
not
xlat
push
ret
ret
xchg
and
ljmp
inc
or
pop
adc
test
sbb
pop
jnp
ret
mov
addr16
test
push
pusha
mov
adc
pop
leave
sub
in
neg
sbb
pop
dec
push
movsb
int3
pop
mov
push
xchg
or
mov
fnstenv
jae
fisubl
jmp
cmpsl
add
leave
popa
adc
jb
inc
cmc
sub
in
xchg
fisttpl
in
jno
sbb
enter
mov
xor
mov
mov
orb
lods
imul
adc
lock
xchg
dec
push
dec
cmp
test
add
mov
mov
push
xor
dec
sbb
mov
jns
imul
mov
or
mov
dec
in
pop
pop
dec
sub
mov
stos
dec
fisttpll
sarb
rcrb
xchg
pop
and
movsl
nop
dec
push
jo
hlt
and
cli
mov
cltd
sarl
test
cmc
inc
test
cltd
push
pushl
mov
dec
mov
push
jb
and
cmp
cmc
ljmp
push
push
pop
cmp
inc
gs
sahf
aaa
and
fwait
sbb
es
rcr
loope
gs
hlt
mov
daa
lea
stc
sbb
div
xor
fstl
fstpl
sub
xor
cmp
inc
lea
or
cld
mov
es
push
clc
inc
ja
and
cmp
sbb
push
das
loop
jmp
xchg
push
gs
mov
aaa
mov
xor
dec
das
sub
pop
mov
xor
push
mov
out
out
bound
cltd
jbe
xor
aaa
pop
dec
mov
int
pop
mov
pop
push
sbb
sbb
rcll
data16
stos
pop
cmpsl
out
idivb
push
push
lcall
leave
cs
popa
sub
scas
pop
mov
sbb
lea
pusha
pop
mov
fadds
lods
fidivs
inc
mov
enterw
clc
push
push
iret
es
dec
and
js
xchg
sbb
cs
inc
inc
dec
mov
data16
test
xchg
mov
inc
out
aam
add
shufps
sbb
fwait
add
mov
sbb
int
lahf
cs
test
inc
add
inc
pop
push
inc
pop
out
sub
cmp
sbb
cmp
mov
adc
xor
add
push
sbb
jno
fnstcw
jge
sub
lds
in
lods
daa
bound
xor
mov
and
lods
mov
bswap
lret
pushf
xchg
mov
fbstp
xchg
dec
jl
addr16
rcrl
call
shl
out
sahf
lods
push
sbb
jg
mov
xchg
sbb
inc
je
cmpsb
adc
dec
repz
in
dec
mov
icebp
les
inc
decl
dec
fs
xor
ss
inc
clc
stos
xchg
imul
imul
mov
hlt
or
dec
sahf
push
add
fs
les
jecxz
xor
mov
mov
inc
scas
adc
ss
jae
mov
js
cwtl
pushf
je
cmp
fwait
ror
sbb
sbb
mov
arpl
aam
push
xchg
call
sub
call
daa
adc
data16
andl
sub
or
lret
das
stc
mov
sub
jns
xchg
mov
pop
cli
ljmp
jb
jecxz
mov
mov
repnz
mov
add
pop
clc
add
pop
add
or
outsb
jmp
pop
stos
jge
pop
cmpsl
outsl
dec
es
push
xchg
stc
mov
out
aad
or
jmp
jns
or
sub
enter
bound
scas
out
or
or
add
cs
mov
test
sub
xchg
ljmp
push
daa
dec
mov
mov
dec
lods
aaa
or
fbstp
adc
ja
test
repnz
or
int
pop
mov
mov
inc
and
loop
mov
jo
sti
lret
mov
bnd
cli
inc
mov
rorb
int
pop
std
fwait
jns
sete
mov
xor
in
shl
lds
mov
in
xchg
xlat
add
inc
dec
and
sti
jne
call
and
cmpsb
sbb
push
xchg
sub
sbb
outsl
call
push
cmp
xor
adc
int3
mov
xchg
in
mov
inc
xor
cmp
jae
jbe
lret
mov
xchg
in
xchg
fdivrp
pushf
dec
fcoms
cmp
xchg
shll
scas
or
mov
jne
xchg
fwait
sbb
stos
mov
pop
mov
push
lds
enter
dec
mov
adc
fidivs
add
shlb
and
insb
scas
adcl
or
lods
dec
subl
and
pop
addr16
sbb
push
xlat
mov
stos
fldcw
xchg
xor
and
fdivrl
pop
in
aam
or
mov
pop
xchg
dec
lock
push
or
loopne
dec
out
push
mov
sbb
sbbb
xor
in
jge
xchg
test
test
je
aaa
or
lcall
sbb
in
sub
insl
inc
shl
enter
aaa
cld
std
rclb
sbb
or
mov
loope
pop
mov
lds
call
sbb
or
or
mov
stos
mov
adc
adc
std
out
mov
test
data16
dec
rolb
popl
pop
hlt
jno
mov
mov
sbb
cld
pop
push
js
dec
or
sti
fs
cmp
mov
push
ja
leave
ret
or
push
ljmp
nop
inc
cltd
add
into
das
test
dec
mov
nop
cli
rcl
cltd
ret
and
xchg
and
cmp
lods
imul
in
xor
push
into
mov
decb
sbb
mov
jae
mov
fcompl
stos
outsl
or
sbbl
mov
mov
ss
dec
jno
mov
mov
loope
lea
jmp
out
xchg
add
xchg
sbb
or
aaa
subl
out
or
fucomp
xorl
and
adc
inc
ficoms
fldenv
shlb
ja
pop
hlt
mov
test
adc
and
jns
sbb
lea
sbb
xchg
dec
add
leave
push
xchg
mov
arpl
jbe
mov
pusha
flds
inc
sbb
aad
pop
arpl
sbb
fbstp
out
insl
ret
push
in
sar
jns
test
movsb
and
add
jne
popa
inc
pop
adc
xor
mov
sub
sar
call
inc
imul
cmp
lock
cmp
adc
lea
in
test
icebp
jno
inc
push
cld
jle
mov
push
hlt
jmp
fldt
cmpsl
pop
dec
and
outsb
pop
cltd
add
sahf
sub
jnp
cmp
xor
xchg
jl
mov
xchg
addr16
mov
pop
push
scas
adc
xor
fsubrl
dec
mov
push
lea
or
and
jae
pop
jbe
aaa
sbb
test
cltd
aam
insb
sbb
scas
jge
pop
sbb
mov
add
inc
sub
hlt
mov
mov
sub
in
popa
xchg
pop
sbb
rcrl
ljmp
inc
xor
push
sbb
mov
out
scas
jg
cmp
push
sarl
adcl
add
inc
imul
ret
jbe
xchg
jb
fistps
xor
mov
in
dec
sub
fwait
sbb
push
test
push
int
inc
push
cmp
sub
mov
lock
sbb
pop
in
shrb
inc
jnp
jecxz
jne
lock
shll
mov
fs
in
je
iret
mov
into
outsl
push
inc
in
jle
fsubrl
pop
xchg
dec
pop
dec
jne
out
cmp
sub
bound
mov
std
mov
fs
push
dec
push
fwait
xor
adc
mov
mov
fistpl
outsl
popf
hlt
push
and
jnp
sub
mov
mov
adc
push
sbb
mov
test
insb
lahf
cmp
push
jbe
sbb
and
test
mov
sub
test
sub
xchg
rcrb
add
dec
fcomps
xchg
xor
xchg
ss
xchg
outsl
nop
jecxz
stos
cmc
pushf
push
js,pt
into
mov
and
xor
sti
or
or
pop
hlt
sub
mov
out
adc
mov
nop
fldenv
ja
xor
mov
into
nop
gs
xchg
and
pop
pop
or
in
and
or
mov
add
fwait
mov
enter
xor
mov
xchg
add
imulb
inc
xorb
inc
mov
cmc
or
iret
cmp
gs
mov
cmc
or
sub
out
dec
xchg
and
sahf
ficompl
std
jne
jmp
mov
lret
adc
call
or
rorl
pusha
pop
lods
sbb
adc
push
fsts
lcall
adc
mov
int3
call
decl
ret
addr16
test
loop,pt
add
fistl
push
sbb
icebp
xchg
jae
aaa
add
fisubs
xchg
dec
push
dec
stos
subb
imul
sub
jge
ja
lret
pop
fsubp
dec
or
fmul
in
std
lds
xchg
jbe
push
cltd
test
jo
push
push
es
push
sbb
or
stos
and
popf
rorb
cmp
pop
cmp
into
fwait
pop
xor
xchg
dec
sub
cmp
in
fildl
or
or
mov
fwait
subb
adc
jo
aaa
in
pop
mov
in
and
add
sahf
jo,pt
daa
and
cmp
sbb
mov
pop
jg
cwtl
mov
mov
lea
ja
addl
adcb
mov
push
xchg
lods
int
das
rorb
fstl
mov
rcrb
sub
add
pop
fisubs
cmp
outsl
sar
or
sbb
pop
aad
lods
outsb
dec
mov
push
add
bound
addr16
cmp
pop
stc
stos
sub
push
mov
sbb
out
cwtl
mov
mov
xor
mov
xchg
cmpsb
xchg
jmp
popa
jno
adc
add
into
loope
sbb
jo
mov
adc
icebp
lret
mov
lds
xchg
push
xor
pop
mov
push
push
jp
pop
test
les
dec
icebp
ds
adc
add
inc
cmpsl
push
pop
shrl
adc
dec
bound
inc
cmp
jp
leave
mov
push
insb
inc
jl
int
adc
aad
push
push
in
push
shrl
pushf
pop
and
fwait
aaa
or
ds
inc
mov
and
loopne
mov
xchg
jae
mov
jne
loope
arpl
int3
adc
divb
jmp
aad
fists
push
and
into
rcl
fcmovu
or
xchg
and
mov
add
int3
out
cld
stos
shr
cmc
lret
test
in
hlt
mov
add
dec
repz
adc
pop
rorb
outsb
pusha
je
mov
test
mov
push
jle
ret
adc
jb
fcomps
or
daa
int
gs
and
in
mov
dec
paddw
sub
jge
jle
jo
into
inc
or
xchg
xor
pop
lock
mov
mov
mov
inc
inc
movsl
movsb
add
xchg
bound
adc
or
mov
stos
push
jo
xchg
in
out
ja
lret
lea
and
test
add
adc
add
adc
dec
ret
insb
jmp
or
loop
xor
test
pop
mov
inc
std
into
sti
fdivrs
push
lret
pop
outsl
push
cs
mov
imul
add
rolb
mov
loopne
les
sub
mov
push
loope
test
int3
leave
call
dec
cs
cwtl
jnp
adc
loope
mov
and
mov
add
or
stos
sti
adc
jo
cli
or
inc
and
int
cmp
js
icebp
into
enter
sbb
add
lods
mov
repnz
scas
xorb
mov
das
filds
pusha
mov
cs
sub
imul
dec
stos
lret
mov
adc
out
push
data16
out
aad
stos
addb
sub
mov
fwait
jns
into
push
sub
sarb
jmp
clc
adc
and
mov
or
sbb
mov
inc
or
cltd
sti
pop
dec
fwait
std
mov
mov
daa
mov
ret
add
or
or
cwtl
ror
mov
push
sbb
dec
sub
adc
or
fcmovnbe
mov
ficompl
test
sub
in
adc
mov
sbb
or
and
adc
int3
out
dec
and
pop
or
ret
jo
call
aam
lea
or
sbb
sbbb
pop
into
hlt
mov
or
shrb
in
xor
dec
sbb
sti
rcll
sbb
jne
ret
sbb
jb
dec
mov
loopne
push
and
shr
mov
mov
mov
pop
sbb
push
movsl
in
insb
mov
cmp
inc
fwait
pop
sub
stos
gs
pop
sub
mov
shrl
sbb
or
cs
add
xchg
outsb
cmp
mull
loop
icebp
mov
push
inc
addr16
adc
dec
divb
stc
sbb
xchg
ja
push
adc
test
sbb
ds
push
add
ret
and
or
adcb
push
mov
push
push
pop
stc
stos
push
push
shll
imul
rorb
or
arpl
inc
cs
inc
pop
push
imul
cmp
xchg
jecxz
out
cld
add
mov
lock
scas
scas
pop
or
scas
sbb
call
loope
push
or
jmp
inc
lods
xchg
imul
cld
dec
pop
adc
mov
mov
cmovl
iret
or
xchg
mov
jbe
mov
sahf
pop
mov
adc
jge
jns
mov
add
add
loope
dec
outsl
rorl
push
jb
imul
out
das
dec
mov
and
mov
mov
out
lea
in
in
pop
sahf
xchg
lret
fwait
imul
enter
dec
bound
or
fcomps
cmpsb
sti
add
sahf
iret
out
es
notl
arpl
push
pop
jp
push
nop
ds
sub
push
push
imul
add
cmp
insl
sbb
pop
lods
xor
rcrb
dec
jo
inc
popl
xchg
mov
cs
aam
xor
arpl
int3
jns
je
inc
out
lods
mov
and
frstpm(287
int
cmpsb
insb
das
aaa
adc
or
icebp
aaa
sti
dec
cmp
mov
lods
shll
pop
std
sub
loopne
cld
mov
dec
ret
roll
adc
inc
jle
sahf
adc
lea
add
loope
stc
jmp
push
out
cmpsb
sti
mov
mov
into
lds
cwtl
sti
outsl
push
fimuls
rcrb
stc
test
xor
mov
add
roll
rol
adc
popa
or
dec
lcall
stos
stos
in
inc
push
mov
push
leave
cmp
jp
lds
push
mov
dec
push
rcrb
push
rolb
adc
xor
adc
dec
fs
push
mov
pop
xor
mov
cmp
push
sub
pop
pusha
mov
pop
sbb
movsb
je
out
adc
repz
jecxz
jg
mov
stc
adc
les
inc
xchg
and
sbb
mov
dec
sub
lret
dec
and
fisubrs
lcall
xorb
test
cmp
aas
out
daa
jle
dec
ds
adc
push
jg
ljmp
jge
push
mov
adc
mov
pop
inc
mov
mov
stos
out
xor
ja
stc
adc
shlb
add
jecxz
add
jmp
aad
fcompl
sarb
add
pop
repz
movsb
push
fcompl
jns
int3
aas
mov
and
int
inc
ret
enter
test
and
lret
xchg
fistpll
mov
clc
and
cmp
mov
sbb
jbe
pop
in
inc
pop
cmpsl
mov
lret
fsubrp
lds
adc
or
cmp
jmp
mov
mov
inc
adc
add
add
out
addb
inc
int
fldt
aam
and
rcl
fimuls
and
lret
enter
imul
nop
jne
pop
stc
fiaddl
shrl
and
out
jecxz
xchg
aas
std
bnd
inc
lods
out
mov
fucomi
push
or
mov
mull
mov
in
mov
fldt
fwait
out
popf
outsl
jno
pop
sbb
cmpsl
or
push
insl
or
jle
int3
dec
fmul
into
adc
iret
rcrl
jmp
xchg
loop
leave
imul
xchg
sahf
and
cmpsb
jle
mov
ljmp
xchg
mov
xor
int3
add
daa
push
les
lock
push
data16
sti
jnp
adc
xor
inc
jmp
cmp
sbb
or
and
mov
or
js
aaa
adc
fcompl
movsl
cmp
xor
ja
sub
inc
in
fwait
add
jle
es
inc
les
test
repnz
push
addl
popf
pop
pop
xchg
decb
xchg
xchg
jo
add
jmp
test
xchg
inc
cmc
and
xchg
shrb
mov
gs
sub
jnp
lcall
data16
insl
or
xlat
sti
adc
jle
int
lcall
push
mov
out
or
inc
shll
mov
bound
in
enter
ss
imul
aam
jns
movsl
mov
stos
or
mov
jnp
pop
test
mov
sbb
cld
jb
mov
das
mov
mov
inc
add
jg
insl
xor
hlt
push
mov
in
cmp
les
lods
push
inc
outsl
push
mov
push
aam
imul
inc
rep
std
add
mov
insb
popf
cmc
xchg
jnp
fwait
mov
xchg
ljmp
in
sti
ss
mov
pop
fidivrs
mov
push
mov
mov
fs
daa
jnp
lods
dec
int
cmc
sub
xchg
pop
std
bound
adc
mulb
dec
mov
push
inc
or
push
leave
push
mov
fdivl
mov
enter
sub
and
fs
in
jp
push
loope
sbb
in
adc
mov
das
insl
jp
cmc
inc
out
js
add
sahf
jle
push
lods
ljmp
add
adc
sar
out
sub
movsb
ljmp
xchg
idiv
xor
mov
gs
aam
jnp
adc
jmp
dec
sub
cltd
out
or
mov
push
mov
mov
fs
das
loopne
andnps
dec
mov
push
std
mov
or
imul
lods
in
pushf
loopne
scas
push
mov
push
inc
pop
mov
lea
cmp
jbe
inc
test
arpl
in
sub
pop
jmp
arpl
cmp
fldt
or
cmc
cmp
test
repnz
mov
test
dec
push
lds
mov
test
jl
clc
movsl
mov
cli
fcoml
in
clc
popf
dec
dec
pop
lods
std
cmc
mov
push
mov
int
cmpl
dec
iret
jns
cmpsl
inc
dec
mov
in
cmovns
lret
sbb
or
sub
stos
cmp
push
xchg
jb
rorb
ja
movsl
test
mov
or
adc
mov
cld
jg
dec
pop
pop
fildll
dec
dec
mov
push
pop
or
ja
hlt
mov
mov
lock
push
ret
inc
fsts
in
cmp
icebp
inc
sub
xchg
aad
test
repz
cwtl
sbb
sbb
cmp
or
mov
test
fnsave
xchg
pop
mov
xlat
lcall
rol
les
aaa
or
roll
lods
std
mov
mov
pop
or
fldl
popa
in
cmpsl
inc
xor
fldl
xchg
mov
pop
xchg
and
shrl
fsts
lds
push
lds
stos
loop
xor
shll
popfw
jmp
push
ret
leave
push
inc
shlb
in
ret
fcmovbe
push
stos
scas
mov
ds
aad
dec
test
bound
mov
dec
mov
jp
cmpsl
clc
scas
in
in
push
and
adc
lock
jmp
std
fdivs
pop
daa
inc
mov
push
mov
pop
jp
jge
and
out
sbb
gs
sbb
pop
call
dec
dec
sub
mov
pop
xor
xor
int3
mov
inc
das
lea
jbe
pop
mov
fisttps
sarl
fmuls
cltd
add
jmp
mov
sbb
cs
sub
stos
cmp
outsl
sbbb
mov
clc
fisttpll
sbb
fwait
stc
inc
jp
adcl
sub
push
insl
sbb
mov
lcall
cli
push
jmp
or
cmp
cmp
lahf
sbb
jae
hlt
mov
stos
dec
lret
push
sbb
scas
stc
pop
sahf
leave
lcall
mov
dec
sub
insb
jmp
popf
jp
incl
inc
leave
fdivs
push
push
aas
in
sub
pop
testl
dec
call
inc
ds
cli
in
xchg
jecxz
inc
inc
jno
popf
ss
jns
sub
mov
push
movsb
jmp
add
pop
aad
cs
loope
popa
insl
mov
sbb
jp
ss
mov
jle
aam
std
xor
scas
rorl
xlat
adc
insb
push
bnd
dec
push
and
icebp
pop
push
inc
and
sbb
xor
dec
lods
call
xchg
or
push
aad
push
or
push
xor
inc
and
pop
pop
and
pop
pop
lds
out
movsb
cmp
in
sti
dec
cwtl
int
pop
adc
in
popf
lods
fiadds
hlt
mov
or
in
gs
stos
xchg
lds
push
xor
imul
mov
jb
pop
andl
pop
inc
aam
repnz
add
stos
jo
leave
sahf
scas
xor
xchg
mov
test
xchg
aas
cmp
loopne
cmp
jmp
into
into
add
ljmp
adc
or
adc
add
mov
jo
mov
push
push
push
xchg
sub
jmp
cwtl
sub
popf
sti
sbb
std
dec
cmpsb
xor
pop
pop
mov
mov
out
xchg
fdiv
and
add
mov
pop
insl
aad
loope
je
shll
pop
sbb
aad
mov
popf
rcll
add
inc
pop
dec
dec
push
dec
inc
dec
dec
mov
adc
mov
push
sub
dec
fistpll
dec
dec
fistpll
mov
jo
imul
push
jo
dec
hlt
inc
xchg
mov
out
inc
and
cmp
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
test
les
stos
pop
outsb
sbb
inc
and
cmp
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
dec
dec
fistpll
.byte
lods
jg
gs
