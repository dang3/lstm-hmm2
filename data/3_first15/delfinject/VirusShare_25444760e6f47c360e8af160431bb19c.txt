xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
push
xor
pop
ret
push
add
add
ret
add
popl
push
mov
pop
push
xchg
mov
push
pop
push
xor
pop
xchg
xor
xchg
mov
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
xchg
add
ret
push
pop
ret
mov
ret
push
push
pop
pop
push
xchg
mul
push
pop
push
pop
add
add
ret
push
xchg
add
ret
push
xchg
add
ret
push
addl
pop
ret
pop
push
xchg
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
push
call
call
call
push
push
push
push
call
call
push
push
push
push
call
push
call
push
call
push
push
call
pushl
pop
push
call
call
call
call
call
push
cmp
jae
ret
pop
call
adc
ret
pushl
add
add
add
je
mov
sub
mov
sub
cmp
je
movl
call
add
mov
pop
pop
ret
lea
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
add
add
andl
mov
pop
pop
pop
ret
push
push
push
push
add
mov
mov
movb
mov
call
mov
test
je
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
lea
mov
sub
add
mov
call
jmp
lea
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
add
mov
add
cmp
jae
lea
sub
call
lea
mov
call
movb
mov
add
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
leave
mov
jo
outsb
inc
mov
call
push
pusha
aam
mov
lds
jge
jp
repnz
cmp
push
xchg
pop
sub
aaa
jnp
xchg
mov
push
xor
enter
mov
dec
xor
loop
mov
adc
jns
jecxz
rcll
inc
dec
ss
fisubrl
cmc
nop
xchg
pop
or
cmpb
xchg
jno
mov
mov
out
dec
dec
lds
shll
movsb
out
add
out
xchg
sti
lock
or
mov
mov
call
add
or
clc
cwtl
push
jg
sbb
mov
lods
cmp
dec
insl
bound
jo
bound
mov
aam
sub
push
jne
mov
xor
pop
mov
cmovne
mov
lods
addr16
ja
xchg
push
test
ret
pop
pop
cmp
cmp
bound
or
sub
mov
mov
xchg
cs
push
mov
xor
cmp
aam
mov
imul
lcall
and
xchg
test
dec
sub
out
mov
jae
rorl
adcb
push
ficomps
push
addr16
lods
pop
and
scas
cmp
sarl
inc
fcompl
int3
mov
iret
xlat
dec
stc
pop
dec
push
imul
fwait
cltd
push
jmp
imul
jmp
int3
push
push
stc
sbb
xor
sub
add
and
aad
pop
mov
or
pop
dec
rol
jnp
rcrl
cmp
std
je
pop
imul
xor
push
sti
lods
dec
mulb
imul
cmp
pop
ljmp
jb
pusha
mov
sahf
adcl
lcall
cmp
adc
lret
loope
fisubl
js
push
aad
outsl
inc
pushl
cmp
sbb
lahf
pop
add
push
dec
bound
cmp
shrb
iret
xchg
push
mov
fcmovu
es
add
stc
jmp
out
cmp
test
sub
shl
push
stc
and
repnz
push
outsb
test
xchg
push
push
mov
lret
adc
sub
pop
and
ja
imul
outsb
cmp
movsl
mov
adc
fimuls
cmp
jge
jge
mov
fistpl
repz
out
mov
dec
rcll
pop
int3
ss
lods
pop
push
xchg
sbb
jnp
rclb
sub
imul
cmp
out
mov
mov
and
jno
repz
cmpsl
gs
pushf
cmp
sbb
mov
daa
push
dec
test
ljmp
aaa
mov
imul
mulb
cs
stos
mov
leave
fisubl
scas
dec
test
adc
pop
adc
push
subb
mov
cld
gs
cltd
sarb
cs
pusha
jg
sbb
sbb
out
int
cmc
sub
les
dec
mov
dec
pop
dec
pop
adcl
scas
adc
addr16
xchg
dec
jle
jp
or
lahf
and
call
je
inc
cmp
mov
mov
jbe
enter
mov
ljmp
arpl
leave
jp
or
int
ds
and
mov
sahf
sbb
in
dec
mov
add
xor
enter
xchg
les
lock
xor
pop
push
insb
mov
loop
push
add
lds
or
leave
rol
cwtl
and
cmp
cmp
mov
xor
pusha
stos
pop
dec
shrb
push
test
mov
add
and
ret
inc
repnz
jl
dec
xchg
dec
pushf
jbe
fmull
loope
mov
loop
dec
or
cli
jns
loope
pop
sub
stc
xchg
jae
aad
jb
mov
negb
xchg
jbe
in
jp
mov
data16
ljmp
xor
mov
sub
dec
add
jno
dec
imul
insb
test
jg
fsubl
test
xchg
into
cmp
xor
sti
sub
out
cli
sti
in
out
and
dec
sbb
in
mov
test
xor
in
adc
dec
mov
mov
mov
fbstp
aam
js
add
or
mov
andb
sbb
dec
fwait
push
mov
xchg
loopne
jno
dec
sub
fistpl
xchg
jecxz
xlat
xor
fnsave
loop
pop
sub
push
dec
aam
rcr
sub
test
loope
mov
fnstenv
in
popa
lret
inc
lahf
jp
and
push
ljmp
ret
jl
dec
in
test
cltd
inc
adc
es
jl
adc
ret
loopne
out
and
or
lods
cs
and
ss
nop
cmpsl
and
ss
xchg
xchg
push
cmpsb
mov
js
mov
and
push
movsb
mov
xlat
stc
movsl
int3
xor
mov
pop
mov
mov
aas
sti
xlat
mov
lret
pop
dec
ss
adc
pop
cmpsl
fwait
ds
and
add
add
es
adc
mov
cmp
jno
out
xchg
sbb
out
in
sbb
cli
fiadds
inc
and
mov
sub
inc
jg
test
adc
mov
rcr
mov
jns
cmp
insl
add
das
inc
shll
inc
push
inc
pop
int3
adc
xor
adc
push
jns
rcr
mov
out
cwtl
xchg
xor
cmp
dec
rorl
rorl
pop
add
xchg
jo
push
jnp
jbe
dec
add
pop
pop
xchg
loope
inc
jmp
sbb
dec
out
mov
sbb
jno
hlt
out
hlt
mov
int
push
dec
xchg
sub
and
addr16
movsl
clc
push
dec
shlb
in
ljmp
xchg
ret
arpl
es
subl
scas
fcoml
xorl
imul
xchg
ret
movsb
cli
cmpsb
in
xchg
stc
mov
xchg
ss
int3
and
sub
adc
sahf
test
push
inc
jle
fmul
pop
xor
cmp
lods
mov
mov
inc
les
lods
jle
dec
ss
int
lds
inc
cmp
idivl
out
std
xchg
data16
jl
sbb
sub
jp
push
int3
xor
pavgw
and
mov
pop
jp
push
push
cmc
jl
sub
and
adc
shl
adc
and
pop
dec
add
add
and
movsb
in
push
mov
stos
pop
pop
cmp
push
adc
out
sar
inc
icebp
ret
das
mov
xor
rolb
mov
fmull
std
clc
lcall
cmp
loopnew
push
es
loope
int
cmp
arpl
xor
stos
pop
inc
testl
inc
mov
sarb
push
testl
sub
shl
das
jns
jns
fdivrp
mov
xor
fadds
sub
add
or
dec
insb
imul
mov
test
push
lahf
add
cli
and
add
sub
xor
mov
je
push
inc
push
gs
and
mov
outsl
scas
dec
incb
jae
test
push
pop
push
repnz
sar
push
out
xor
add
jne
mov
std
loop
fcomps
jno
sbb
dec
lds
movsb
daa
adc
add
sub
loopne
lods
lds
insb
ret
pusha
sahf
insb
mov
push
pop
out
lds
loopne
addl
and
or
xchg
rolb
es
gs
xlat
cmp
in
mov
fucomp
insl
xor
aam
inc
mov
mov
std
outsl
in
sarb
jb
xchg
and
xchg
loopne
fildl
fiadds
adc
loopne
enter
cs
ret
cmp
aas
xchg
xchg
mov
out
insl
mov
pop
dec
add
cmpsb
mov
sub
ret
pop
lcall
cmp
xchg
add
mov
push
stos
jmp
sub
test
iret
mov
std
mov
xor
ficomps
idivl
mov
pop
stos
hlt
jnp
imul
lds
xor
lock
lret
jecxz
adc
xor
and
mov
jo
les
bound
mov
iret
or
scas
outsb
add
lcall
pushf
mov
cmpsl
sub
scas
push
mov
sub
jge
popa
inc
or
aad
push
inc
adc
mov
sbb
push
fisubrl
adc
scas
stos
inc
adc
sti
xorb
and
mov
xor
xchg
mov
test
lret
push
paddb
add
sub
mov
call
dec
scas
mov
popa
repz
jmp
stos
dec
sbb
fimull
insb
cmp
clc
sbbl
pop
mov
das
dec
sbb
adc
dec
sarl
icebp
mov
add
mov
js
xchg
shl
lock
lods
rcr
jle
pop
mov
into
push
js
pop
test
popf
rclb
pop
xchg
mov
icebp
imul
rolb
jge
sti
xchg
loope
pop
mov
mov
jne,pt
out
dec
das
dec
inc
sarb
sub
sete
repz
lea
sbb
daa
pop
rorb
mov
xlat
cwtl
push
sbb
divb
add
sbbl
add
in
push
int
mov
push
ja
fdivr
sbb
push
outsb
repnz
in
aam
or
inc
and
mov
or
inc
push
xor
mov
outsl
push
push
push
lea
test
loop
cld
test
pop
stos
xor
pop
dec
lods
ret
lods
or
pop
pop
movsb
fs
mov
incl
mov
rorb
aad
pop
out
pop
jne
aas
mov
push
push
je
loop
rcrl
xchg
enter
mov
mov
adc
dec
es
mov
rcrb
pop
and
popf
xor
cwtl
cmc
push
into
add
cmp
fwait
pusha
fcmovb
push
aam
xchg
bound
or
stos
mov
cs
mov
inc
mov
stos
mov
les
out
or
fsub
xchg
sti
mov
jg
pop
push
inc
ss
or
push
sti
sbbb
ret
mov
sti
jl
movsl
leave
dec
shl
sub
push
mov
xchg
mov
mov
mov
xchg
cmp
pop
sti
cld
cld
addr16
loope
cmp
cwtl
dec
mov
out
std
pop
lea
cmp
sqrtps
jle
inc
arpl
cmp
pop
stos
pusha
jl
inc
inc
pop
push
pop
js,pn
ret
out
cmp
mov
mov
jge
push
or
xchg
push
jmp
fwait
pop
int
cmp
aam
repnz
xor
sti
int
sarb
or
sarl
lcall
xor
or
dec
mov
aas
or
mov
xor
lcall
jge
fcomi
jmp
pop
xchg
mov
mov
popa
in
enter
ljmp
jne
add
add
clc
push
cmp
push
jge
stos
shl
mov
xchg
repnz
push
mov
jo
fbld
add
jge
jecxz,pt
lds
lods
and
cwtl
orb
sub
scas
arpl
push
xor
push
xor
mull
and
ja
pushf
out
xchg
shlb
gs
pop
mov
outsb
sub
das
jmp
or
jo
dec
sbb
ljmp
pop
xchg
test
leave
rolb
push
adc
inc
lock
sub
outsb
stc
xor
cmpsb
adc
cmp
jbe
xchg
movsl
lret
and
stos
ficoms
mov
inc
pop
mov
mov
loop
jmp
fnsave
fsub
dec
in
push
and
sbb
cltd
dec
lds
insb
xchg
lret
push
jp
inc
test
pop
inc
mov
pop
adc
inc
pop
pop
imul
jns
ret
jne
ja
and
jb
call
mov
js
lock
icebp
inc
pop
cld
and
push
lea
xor
jo
mov
scas
pop
movsb
sub
add
cmp
int
int
icebp
adc
data16
cmp
pop
mov
jns
gs
lahf
in
or
or
fildl
xchg
add
sub
hlt
push
sbb
int
pusha
clc
mov
push
pop
xor
pop
mov
or
popa
pop
jnp
mov
xor
xor
jg
inc
out
sub
xchg
mov
xlat
mov
lods
flds
or
cltd
fsubs
lock
push
push
test
xchg
push
mov
movsl
add
fisubl
ficoms
add
adc
jno
inc
mov
push
lahf
in
std
mov
xchg
xor
frstor
pop
adc
imul
inc
jl
dec
inc
test
adcb
pusha
into
xor
imul
inc
arpl
inc
leave
push
sbb
sub
xor
mov
outsl
xchg
lods
mov
fisubrs
inc
aam
push
add
incb
popl
cmp
and
xlat
dec
aad
mov
pop
or
xchg
sub
mov
int
jl
out
and
or
in
adc
lods
clc
pusha
xor
adc
sti
test
iret
shrl
add
mov
push
js
sbb
enter
mov
pop
xchg
imull
mov
lods
aam
les
fadds
lea
xor
rorl
mov
jmp
stc
cmp
push
mov
and
jno
imul
lock
mov
in
pop
imul
cs
idivl
pushf
outsl
fsubrl
jmp
mov
jmp
js
leave
push
lret
into
test
jmp
ljmp
int3
jp
popa
movsb
mov
cmp
cli
jnp
pop
jns
sbb
imul
jecxz
xchg
adc
xchg
dec
or
xlat
scas
out
mov
sub
shlb
add
dec
repnz
xor
cmpsb
paddb
xlat
scas
sub
pop
and
and
enter
jl
daa
jg
insb
mov
sbb
and
or
loop
outsb
and
sub
test
test
sbb
and
pop
enter
mov
sbb
test
cmp
into
jp
sub
push
mov
jbe
push
clc
mov
lcall
dec
clc
lcall
in
sub
push
pop
cmp
lods
ds
daa
in
cmp
lods
stc
fdiv
adc
cmp
mov
lret
cmpsl
cwtl
jnp
in
scas
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
loope
xchg
imul
loopne
cmp
xor
fldl
test
fwait
jp
popf
pop
mov
sub
jp
xchg
cmc
sbb
jecxz
lods
stos
idiv
adc
aas
dec
inc
call
inc
mov
push
dec
jmp
cmp
out
stos
in
call
aas
aam
cmpsb
sbb
fildll
mov
outsl
xor
fisttps
mov
cld
add
sub
jae
in
in
cmp
push
icebp
jge
test
mov
imul
or
fs
mov
sub
pop
pop
jno
mov
mov
pop
or
push
lahf
cmp
push
and
out
inc
inc
cmp
shl
mov
cmpsl
xor
pop
cltd
stos
jnp
sub
xor
dec
aad
mov
ljmp
xchg
push
pop
das
dec
cwtl
and
jge
mov
sbb
mov
add
loop
cmp
test
loope
mov
cmpl
sbb
outsl
movsb
xchg
push
dec
gs
sub
sub
mov
ss
testl
bound
sbb
es
out
adc
sub
sbb
popf
adc
cmp
dec
int
imulb
adc
mov
pop
lret
sub
inc
fs
ja
loop
ljmp
dec
sbb
loopne
cmp
scas
mov
mov
out
cmp
out
push
notb
mov
cmpsb
lcall
dec
add
add
stc
and
cli
aam
pop
add
stos
std
popf
jne
daa
sbb
add
mov
jne
stos
sub
inc
cwtl
xchg
xor
pushf
mov
mov
xchg
rorb
outsb
sar
int3
fwait
xor
ljmp
lods
and
pop
movsb
fwait
gs
adc
mov
mov
jb
repz
sbb
int3
sub
add
adc
mov
cmpsl
gs
mov
mov
cld
call
add
mov
add
dec
ljmp
inc
jae
push
adc
jmp
xchg
jp
pop
mov
or
test
xor
mov
push
testl
push
jno
sti
push
in
sbb
mov
and
mov
sbb
int
out
in
sar
push
inc
add
sbbb
push
pop
xchg
dec
imul
adc
ss
enter
mov
insb
sbb
jge
or
or
adc
test
cs
push
mov
add
roll
and
fisubs
clc
clc
xor
test
sbb
cltd
and
decb
stc
loopne
stos
lods
jno
aaa
andl
in
std
mov
add
mov
lcall
sbb
pop
or
lds
clc
push
dec
jne
push
mov
jge
xor
jmp
jmp
cld
dec
adc
sbb
jo
std
mov
or
cmpsl
loop
jnp
add
fistps
sbbb
and
shll
dec
xchg
xor
xchg
mov
adc
mov
movsb
mov
pop
leave
int
lods
cwtl
lret
or
push
aas
mov
ja
aaa
scas
adc
pop
into
das
fisubs
jg
pushf
jo
out
add
jge
stc
fs
xor
fiadds
or
inc
test
dec
jbe
call
jl
dec
or
inc
les
xchg
cmp
aas
pop
mov
cltd
mov
cwtl
les
imul
ret
lret
dec
jb
and
outsb
adc
dec
jns
xchg
sbb
mov
sarl
jb
cwtl
inc
das
jmp
mov
bound
jno
xor
adc
lret
ds
xchg
inc
notl
cli
push
subl
cmp
int3
lahf
adc
pop
ja
std
ljmp
insl
test
scas
cmp
lcall
mov
inc
add
fmuls
sub
insl
icebp
jne
mov
cmpsl
int
mulb
xor
mov
dec
and
out
adc
cld
jnp
jno
xchg
pusha
mov
sbb
jle
jl
aam
xchg
nop
fwait
imull
mov
push
mov
push
dec
fisubrl
xchg
and
fdivl
ja
xchg
popf
test
or
pusha
jb
movl
addr16
mov
aas
xchg
mov
cwtl
sub
adcb
ja
inc
lea
aaa
ljmp
lahf
adc
in
out
sub
jmp
rcrl
fisubl
add
push
cmp
push
cmc
cwtl
subl
xor
daa
xchg
pop
push
adc
add
mov
push
orl
sar
push
lret
cmp
out
mov
sub
outsb
and
repnz
add
xor
cli
sbbl
pop
sub
xor
inc
cmpsb
or
sahf
push
mov
sub
jae
int
push
push
rorl
imul
mov
cmp
rcr
adc
pushf
xchg
cld
outsb
das
push
or
mov
idivl
sub
les
mov
mov
lods
mov
fbstp
mov
xchg
loop
inc
cmpsb
and
andl
xchg
scas
shl
pop
scas
popa
ljmp
loope
clc
push
call
cwtl
jns
insb
in
sub
dec
mov
adc
lea
fistl
sub
pop
fnstsw
mov
cmc
mov
push
inc
mov
mov
mov
adc
insb
xchg
mov
sbbb
in
mov
push
cmp
pop
arpl
inc
and
dec
and
test
add
pop
lahf
mov
cmp
cmp
out
rorb
pop
jl
ja
sbb
dec
popa
jns
mov
lods
inc
sahf
repz
iret
jo
testb
xchg
adc
movsl
jle
test
xor
or
dec
push
adc
and
aaa
jmp
xor
mov
ss
add
mov
jae
sbb
cmp
jne
cmpsl
push
fwait
cmp
xchg
loopne
roll
lock
jl
xchg
rcrb
jae
mov
sbb
add
push
test
lock
std
mov
xchg
dec
jnp
inc
insb
push
mov
sbb
pusha
pop
pop
mov
push
push
xchg
xorb
sub
cmpl
popa
jo
mov
repz
mov
dec
bnd
lock
aam
inc
or
insl
add
bound
negl
push
push
push
mov
jne
mov
mov
mov
push
push
fucom
ljmp
push
push
mull
inc
and
adc
jae
push
inc
fcomps
sbb
les
popa
std
pop
pop
aad
mov
ds
dec
push
ds
cmp
push
dec
test
inc
and
stc
out
jp
jmp
aad
jg
fildll
leave
mov
and
shll
pop
cmp
push
dec
jnp
jmp
sub
popf
leave
vmwrite
xchg
bound
sub
bound
xchg
jge
cli
hlt
xchg
pop
testb
pop
cmp
dec
daa
xchg
or
dec
cmpsb
jge
or
or
adc
or
popf
jae
les
xchg
jl
ret
or
inc
cmp
cli
cmp
pop
and
in
or
andl
cmpl
out
int3
jle
shll
jns
rorl
ret
popf
pop
imul
xor
pop
mov
fs
out
test
xchg
sbb
add
repz
push
pop
jb
inc
js
adc
pop
cs
outsb
pushf
push
lcall
xchg
pop
mov
inc
lods
pop
cmp
mov
push
mov
scas
mov
mov
fdivl
push
push
lods
test
movsl
ret
je
arpl
push
dec
inc
lds
pusha
inc
and
mov
adc
insb
ss
adc
scas
js
imul
movsb
cmpb
mov
sbb
inc
and
inc
adc
cmp
out
jmp
inc
pop
pop
mov
pop
sti
popl
and
jne
xchg
shl
hlt
sahf
bound
push
cmpsb
mov
cmc
imul
ljmp
repnz
jle
or
sbb
imull
test
cmpsb
out
je
push
mov
and
jne
cli
push
inc
cmpb
push
in
and
sub
lcall
jbe
fs
jle
aam
push
popa
push
sti
sbb
shlb
in
int3
lock
in
pop
push
scas
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
aas
sbb
or
negb
add
cld
popa
loope
das
mov
cltd
inc
aas
ret
jne
jp
inc
jnp
sub
jle
push
repnz
add
in
or
ret
idivl
cmp
rcll
sbb
fiadds
and
aad
pop
sub
outsl
or
mov
dec
sbb
mov
stos
mov
cld
add
rclb
mov
ljmp
jge
scas
imul
jnp
lea
lea
inc
jecxz
pusha
jp
lcall
popf
daa
das
push
dec
cmp
cmp
jle
mov
in
dec
lea
inc
test
mov
nop
mov
cmp
push
inc
call
inc
out
adc
inc
in
aas
in
stc
pop
fsubr
pop
jnp
fdiv
adc
repz
out
xchg
mov
pop
shrd
out
lods
push
push
leave
dec
adc
lcall
mov
add
cld
and
adc
add
cmp
pop
and
mov
insb
push
cld
mov
dec
fisttpll
cmpsl
push
sbb
mov
in
xchg
jbe
jns
fistpll
in
daa
stc
filds
loopne
cmp
es
lcall
lcall
stc
push
xor
stc
test
push
scas
mov
outsl
sub
movsb
in
pushf
rclb
xor
aam
inc
push
or
ret
fisubrl
mov
test
dec
stc
xor
dec
jp
stos
fldcw
jecxz
aas
pop
scas
roll
mov
nop
outsl
xchg
mov
aad
dec
enter
mov
cmc
cmp
adc
mov
sbbb
loop
mov
sti
mov
xlat
sbb
mov
cltd
mov
lcall
ret
subl
icebp
leave
sbb
insb
adc
jle
and
lahf
fidivrl
shl
scas
je
orb
out
adc
nop
fidivrl
mov
xchg
and
mov
add
xchg
clc
mov
jo
rclb
or
xor
mov
outsb
sbb
inc
mov
mov
xor
pushf
les
cmpsb
cmp
adc
jae
mov
xchg
cld
lods
add
fldt
pop
add
dec
sbb
push
push
jmp
mov
adc
imul
push
aad
pusha
arpl
jb
jle
and
xchg
mov
js
sti
shl
jbe
loopne
jmp
lcall
push
sub
jno
aam
adc
add
push
add
fstps
adc
fld
mov
dec
jle
or
sbbb
push
out
repnz
arpl
lods
rclb
add
mov
hlt
lcall
adc
adc
xor
shll
adc
mov
or
inc
push
call
mov
jo
mov
sub
sbb
mov
lods
jecxz
repz
stos
adc
test
xchg
push
ja
lds
and
lret
mov
into
mov
arpl
sub
sbb
roll
in
leave
inc
es
xchg
xor
movsl
inc
fisubl
faddp
stos
enter
mov
repnz
aad
shll
jb
add
cmc
pop
addr16
stos
lds
pop
data16
xlat
adc
jge
nop
sub
xchg
iret
jp
mov
mov
push
xchg
or
aas
nop
les
or
js
cmp
cmc
push
dec
xor
in
push
mov
jne
dec
pop
stos
inc
call
mov
mov
into
insb
scas
pusha
jbe
lods
jne
or
jb
nop
popf
pop
lret
xor
movsb
lret
mov
pop
cmpsb
jp
stc
jge
xor
push
rcrl
pop
sub
dec
xor
out
out
xlat
test
stc
mov
popf
pop
mov
int3
inc
popa
adc
pop
mov
cmpsl
inc
push
cltd
call
leave
cltd
and
cmp
xchg
cmp
sti
popf
mov
daa
lods
mov
test
add
outsb
fidivl
push
outsl
push
push
mov
adc
cmc
cmp
mov
cmp
call
icebp
sub
jne
cmpsb
pop
mov
add
sub
push
jle
jp
or
js
push
xchg
fucomip
push
dec
jbe
xor
dec
jns
jmp
rcrb
inc
test
sbb
sbb
mov
inc
pop
xchg
inc
sahf
pop
mov
rolb
iret
movsl
jno
negl
dec
andb
add
sub
dec
das
mov
mov
xchg
cmp
and
add
int3
dec
adc
test
bound
lods
push
pop
xchg
inc
or
adc
insl
aam
lods
out
jbe
cmp
shll
cltd
movsl
jp
sbb
into
push
jo
rcll
inc
fs
xlat
rclb
sbb
cmp
or
call
push
adc
testl
pop
dec
mov
fcompl
push
lds
fcoms
dec
push
ljmp
repz
mov
hlt
loopne
call
scas
cmpsb
js
lahf
mov
ljmp
mov
test
jp
movsl
adc
add
adc
add
jp
dec
aad
cmc
push
adc
xchg
outsb
or
sub
imul
roll
jne
scas
aaa
bound
cmp
outsl
lds
mov
enter
pushf
add
cmc
jns
jb
xchg
jo
sub
pop
lock
xlat
test
mov
popf
adc
mov
clc
mov
pop
mov
sti
insl
push
fwait
mov
xbegin
sbb
fdivr
aaa
jbe
popf
in
add
pushf
cmpsb
pusha
inc
fnstcw
sub
lahf
clc
lods
push
aad
cmpl
jnp
loopne
test
cmp
mov
or
shl
sub
xor
psrad
std
jg
pop
push
negl
rol
or
pushf
xchg
jns
inc
pop
or
inc
das
std
xchg
adc
in
dec
mov
mov
aaa
pop
pushf
loope
lret
rcll
rcl
inc
add
jbe
mov
leave
xor
daa
lods
jle
xchg
xchg
inc
or
loop
mov
insb
pop
xchg
popa
mov
cli
mov
or
xchg
mov
mov
sbb
mov
and
mov
popa
inc
mov
xor
cmp
jecxz
or
test
sbb
lret
sub
std
enter
out
push
jle
lcall
pop
mov
ja
jp
movsb
push
aad
pop
enter
shrl
mov
fadds
sbbl
out
and
push
mov
ret
mov
dec
lret
push
in
insb
cmp
cwtl
repz
mov
pop
jp
adcl
inc
in
sar
mov
push
idivl
jle
xor
call
ds
out
add
jno
sysexit
into
mov
and
push
jecxz
inc
lcall
sti
jbe
mov
or
test
lret
mov
push
in
push
adc
or
jmp
add
iret
jnp
repz
cmp
cwtl
lret
popf
jnp
arpl
icebp
sbb
jnp
and
mov
inc
mov
xlat
inc
fs
in
mov
mov
sbb
mov
imul
xchg
xchg
mov
cmpsb
mov
xchg
mov
inc
mov
xchg
mov
repnz
pop
inc
dec
push
mov
ret
mov
sbb
pusha
pop
je
pop
cwtl
sub
dec
mov
jns
sub
push
jle
mov
sbb
or
imul
xchg
fisubl
jle
es
lods
sysexit
into
mov
pop
in
and
sub
mov
inc
addr16
dec
rcrb
mov
loope
lods
push
adc
cmp
arpl
ds
mov
bound
cmpb
insl
out
fildll
sbb
iret
jnp
loopne
xor
fisttps
jle
sbb
add
bound
or
pop
mov
cmp
xchg
push
and
inc
jmp
lods
dec
out
sbb
cmp
xor
dec
imul
es
pop
movsb
lock
movsl
mov
adc
cmp
iret
pop
adc
jmp
jp
adc
xor
inc
vrcpps
cltd
in
sub
dec
sti
push
xchg
dec
mov
cs
popf
push
hlt
push
int
pop
ljmp
inc
sbb
test
xchg
outsb
push
pop
xchg
cwtl
cld
cmp
xchg
arpl
mov
jmp
pop
inc
out
push
mov
call
dec
sbb
jno
mov
iret
jo
lcall
adc
xchg
mul
mov
mov
ret
jne
jl
adc
icebp
dec
xor
sub
xchg
pop
xchg
jl
sbb
icebp
jmp
fucomp
orl
jnp
xchg
js
pop
jl
mov
sbb
out
sbb
fwait
pxor
addr16
sub
flds
out
movsb
fdivp
adc
push
xchg
pop
rcrb
mov
jbe
jo
mov
mov
in
inc
dec
idivl
mov
jmp
out
inc
pop
mov
add
add
out
data16
jmp
sub
fsubs
sub
add
dec
push
xchg
pop
js
mov
out
xor
popa
jle
push
mov
mov
pop
dec
daa
push
ja
shr
push
jp
aaa
push
fcmovnbe
mov
stos
xor
cmc
int3
xchg
pop
fdivrs
aad
ja
or
repz
lret
push
data16
sub
xchg
je
jmp
out
or
movsl
mov
loope
pop
out
pusha
xchg
jmp
push
push
adc
stos
loopne
addr16
xchg
cmpsl
jb
jge
xchg
mov
or
stos
aas
push
or
add
aad
or
mov
mov
bound
popa
push
aad
aaa
hlt
lods
stc
sbb
cmc
xorl
xchg
xchg
fcmovbe
repnz
and
push
lods
dec
sub
lea
jge
orl
or
pop
pop
xor
sub
and
add
jg
ret
mov
cmp
dec
xlat
mov
mov
mov
cmp
pop
add
clc
rorl
cmp
cmp
lcall
daa
sbb
adc
fcomps
push
and
mov
or
jmp
jmp
aaa
jb
lods
jae
gs
cmc
adc
xor
cmp
pop
out
xchg
push
xorb
lods
push
test
das
pop
test
xchg
cmpsl
sahf
cmpb
ret
pop
aas
pop
push
pop
pop
rorb
xchg
sbb
mov
dec
push
repnz
lock
mov
inc
jb
inc
sbb
push
push
pop
add
loopne
dec
repz
dec
mov
mov
cmpl
pop
cmp
mov
rcrl
out
test
and
adc
jae
jge
fdivrs
push
fstpl
aam
xor
xchg
mov
pop
cmp
sti
sbb
push
or
cld
cmp
add
sub
insl
addr16
add
mov
cmp
call
mov
and
jbe
pop
cld
push
or
inc
mov
mov
lea
jl
mov
pop
and
out
and
and
das
add
dec
in
push
lahf
test
add
inc
aas
add
xchg
cmpsl
xchg
cmpsl
repnz
movsl
xchg
push
bound
icebp
xchg
inc
sub
dec
jbe
add
fnsave
insb
mov
xor
adc
adc
push
cmp
or
clc
lret
xor
int
loope
shrb
imul
jp
frstor
sbb
data16
mov
cmc
sbb
pop
cmp
test
ljmp
sbb
mov
cmp
lcall
fwait
andb
mov
add
arpl
lock
xchg
adc
das
or
in
and
cld
mov
mov
outsb
shl
cmp
push
repnz
mov
pop
rolb
mov
nop
pop
clc
sub
jle
fidivs
imul
xchg
mov
or
jp
mov
adc
push
testb
xchg
cli
adc
ficoms
paddd
insb
add
dec
add
test
dec
sbb
outsb
repnz
sub
lahf
or
insb
jno
jne
stos
mov
leave
insl
cs
mov
imul
pop
repnz
push
xchg
in
lods
xor
nop
pop
adc
mov
add
leave
cli
xchg
fidivs
stos
sub
sbb
into
movsb
inc
pop
ss
pusha
pop
movsl
mov
hlt
and
and
inc
xchg
or
fstpt
or
pop
aad
mov
and
mov
sub
in
lahf
ljmp
mov
pop
cmp
stc
xchg
pop
sbb
mov
outsb
ret
aad
add
adcl
mov
divl
jae
cmp
sub
mov
xlat
pop
cltd
mov
mov
pop
mov
add
xor
jno
jne
pop
pop
gs
jnp
sbb
in
test
sub
jb
mov
enter
dec
aas
sbb
movsb
fidivl
sub
mov
scas
out
pop
negl
add
ret
sbb
or
mov
scas
es
daa
dec
xchg
inc
xor
loope
fsubl
push
or
or
dec
test
pop
xchg
std
movsb
sub
or
or
sbb
sbb
and
push
mov
out
inc
iret
cwtl
dec
cltd
mov
lds
jns
mov
pop
lock
repz
popf
aad
and
adc
push
jbe
inc
bound
std
lock
test
sbb
aad
jmp
rcrb
fistps
and
add
sti
mov
insb
in
fadds
mov
lret
jl
push
repz
pop
out
out
fcmovb
push
mov
sbb
mov
xchg
lods
sbb
fsubp
fldcw
and
data16
cmp
xlat
dec
fldt
lret
mov
rcrl
push
jl
shlb
dec
sbb
out
xchg
inc
cmp
orb
movsb
scas
out
jp
pop
jns
mov
flds
sbb
jns
cmp
jbe
sbb
jae
rcr
adc
sysenter
cli
sbb
pop
add
ret
mov
jmp
push
sub
stos
mov
mov
pushf
loop
push
dec
push
xor
mov
int3
hlt
gs
cmp
scas
inc
fwait
or
mov
or
jo
mov
into
in
and
imul
or
and
or
fs
rol
push
jns
sbb
neg
jb
mov
pop
jb
sbb
rolb
adcb
mulb
push
in
push
inc
jle
fs
sbb
sub
ds
fstpl
jl
lret
inc
mov
jne
nop
mov
push
add
outsl
mov
imul
jg
inc
lcall
scas
dec
jb
xchg
mov
cmpsl
cmp
fistpll
mov
jno
mov
sub
lods
sbb
cltd
shrl
loopne
ljmp
mov
cmpsb
aas
xchg
leave
fidivrl
pop
xchg
sbbl
mov
sbb
aaa
pxor
mov
dec
cmp
sti
pop
nop
xor
shlb
cmc
fwait
add
sbb
add
rcrb
je
movsl
hlt
sahf
xchg
xchg
xchg
subl
dec
push
and
mov
mov
inc
add
mov
cmc
popa
out
bound
push
mov
stos
loopne
or
push
mov
dec
or
stos
push
xor
pop
adc
sahf
xchg
adc
inc
fsts
push
mov
mov
jnp
pop
push
je
push
lock
adc
daa
fwait
jg
call
loopne
out
inc
push
bound
enter
cmpsb
test
cld
out
int3
push
adc
loope
jo
xor
push
pop
mov
xor
lea
rorb
jbe
idivb
mov
imul
mov
test
les
sti
jbe
mov
mov
mov
push
cli
mov
push
adc
lcall
ficomps
cs
cmp
pop
fsts
pop
jle
popa
clc
mov
shl
adc
or
pop
aam
insl
pop
test
push
clc
cltd
pop
and
sub
xchg
js
into
mov
xor
loop
repnz
pop
and
std
rclb
dec
stc
mov
out
adc
add
sbb
push
add
cmp
cltd
xor
jbe
aas
push
cmp
movsl
add
dec
fsubrs
out
pop
inc
rcr
cmp
add
pop
mov
pushf
push
mov
icebp
sbb
cmpsb
sbb
jne
mov
cmp
or
add
jge
lcall
sub
push
jno
arpl
xchg
xchg
cmpsb
gs
cmp
adc
or
cmp
rolb
pop
xchg
push
xor
mov
insl
push
stos
add
mov
movsb
push
lcall
mov
mov
inc
inc
shll
add
push
jle
cmc
xchg
stos
dec
and
call
pop
int3
jge
imul
mov
sub
imul
cmp
nop
xchg
clc
leave
outsl
insb
movsl
lahf
lret
bound
mov
das
push
dec
ret
push
xchg
add
xchg
mov
je
sahf
mov
dec
stos
push
loope
ss
iret
ss
dec
jle
xor
notb
jb
cmp
imul
movsl
pop
shlb
mov
scas
jae
pop
dec
das
jbe
mov
dec
call
scas
dec
inc
cmp
fwait
adc
ss
loopne
mov
mov
ja
clc
inc
ror
jns
rclb
add
dec
js
pop
gs
and
sbb
mov
inc
ficompl
jb
aas
pop
test
mov
mov
rcrb
adc
adc
aaa
adc
fdiv
pop
sbb
jbe
fbstp
mov
mov
pop
popa
or
lods
hlt
sub
iret
cmp
into
imul
jg
xor
ret
cmc
mov
std
ss
jno
adc
and
mov
add
out
mov
rol
stc
xchg
push
imul
mov
jo
mov
push
xchg
jle
jnp
or
cli
bound
int3
inc
sub
loopne
inc
insb
dec
mull
call
xor
pop
sbb
mov
aas
pop
pop
js
cmp
jb
xor
adc
add
out
or
ret
cmp
imul
dec
push
fwait
movsb
inc
jne
in
stos
xor
pop
adc
bound
pop
inc
rorl
arpl
imul
pushf
adc
add
mul
xchg
mov
mov
sub
loope
pushf
test
test
repnz
dec
cmp
pop
dec
lock
xor
shlb
cmp
orl
clc
inc
adc
and
int3
sbb
jmp
pop
lahf
int3
test
repnz
jnp
sbb
jbe
add
sahf
xor
push
sub
jge
pushf
addr16
lea
aas
mov
adc
cmp
in
add
outsl
mov
movsl
test
xchg
dec
adc
rep
loopne
dec
stc
cmp
sub
or
rorl
pop
fdivrl
flds
adc
mov
mov
jb
dec
add
jecxz
loopne
in
out
lea
jmp
sub
sbb
mov
or
dec
jmp
xchg
leave
aaa
dec
dec
std
mov
mov
subl
xor
dec
mov
clc
push
les
cmp
outsb
movsb
push
clc
mov
push
mov
ss
and
rorl
xor
cwtl
or
pusha
jne
test
fwait
pop
in
inc
into
adc
add
stos
iret
jne
out
xchg
lret
leave
loop
into
or
xchg
pop
stc
pop
test
inc
icebp
push
adc
fisubrs
jp
cli
lret
xor
scas
sbb
inc
gs
call
adc
dec
and
pop
push
cli
xchg
scas
push
or
and
in
inc
shll
lcall
mov
iret
sub
fistps
jnp
push
xchg
inc
mov
mov
aam
in
lea
pop
adc
pop
xor
ljmp
mov
mov
pop
xchg
loop
sbb
mov
int
cmp
cld
rolb
and
xchg
sbb
cmp
pop
cmp
adc
jne
inc
arpl
inc
or
jge
pop
loopne
mov
into
fs
dec
fsubl
ret
adc
fildll
mov
loop
mov
mov
xchg
xor
jmp
mov
mov
shlb
dec
mov
sub
pop
daa
jnp
fwait
xchg
cmc
or
pop
out
sbb
movsl
xor
andnps
xchg
mov
sbb
dec
gs
outsb
mov
pop
sbb
test
and
jl
imul
pop
push
dec
or
enter
ds
sbb
pop
lods
daa
push
ret
mov
fadds
jbe
enter
jbe
int3
aas
and
out
fcomps
xchg
jg
mov
xor
add
fstp
jo
jp
jae
inc
bound
pop
es
ss
and
push
add
sub
mov
out
mov
jmp
dec
push
mov
clc
push
mov
push
in
push
aam
inc
and
add
aam
int
xor
inc
jecxz
pop
sti
xor
cwtl
push
cmp
xor
pop
subb
rol
mov
sbbb
jnp
jmp
and
mov
and
add
push
push
movsb
xchg
pop
rcrb
pop
mov
int3
sahf
xchg
jle
into
outsl
mov
stc
mov
ljmp
dec
pop
jnp
dec
imul
pusha
xchg
adc
lret
test
into
int3
shl
xor
faddl
and
xchg
push
mov
jbe
sarb
aam
scas
test
push
inc
push
aaa
jno
xor
jmp
cwtl
bound
mov
mov
push
ficoml
pop
ret
into
test
lret
mov
xor
int
and
sbb
cmp
jbe
pushf
jo
xchg
jp
cmp
xchg
mov
xchg
lahf
dec
cmc
pop
inc
scas
push
pop
push
dec
jb
xchg
or
js
daa
add
aad
ds
js
push
lret
and
adc
mov
xchg
ret
test
or
add
fdivrp
lods
rclb
or
jl
mov
dec
js
sub
mov
jns
xchg
adc
dec
push
lock
sub
loopne
iret
bound
xchg
dec
jo
call
clc
dec
stos
inc
mov
addb
js
call
outsl
repnz
bound
jge
inc
adc
xchg
fisubs
leave
add
cli
lcall
adc
icebp
movsb
jp
sub
loop
into
mov
ret
lret
mov
or
cmpsb
inc
fimuls
jmp
ljmp
add
fcoms
pop
out
push
cmp
sub
addr16
pop
ljmp
mov
lret
sub
xchg
aam
movsl
ds
add
stc
aas
mov
xchg
test
test
stc
test
in
pusha
mov
repnz
xor
pop
enter
in
loopne
cmp
or
fcoms
movl
cmp
out
sbb
xor
push
shl
pop
mov
push
adc
out
push
jp
jbe
mov
ret
mov
mov
inc
andl
push
push
in
iret
sub
xlat
sub
sbb
sub
test
mov
mov
sub
movsl
dec
lret
sbbl
push
popa
pop
mov
shufps
adc
out
add
mov
cli
cmp
mov
cs
mov
jecxz
leave
shll
movsb
xor
fidivrl
mov
sbb
sub
shrl
sbb
imul
in
gs
inc
ret
push
mov
mov
adc
shrb
push
pop
mov
inc
pop
mov
cmp
call
loop
lret
adc
pop
inc
mov
cmpsb
jmp
sbb
into
pop
xchg
mov
xor
push
and
aaa
cmp
inc
imul
ja
pop
mov
sbb
clc
mov
out
cs
notb
cmpsl
sub
mov
shlb
add
mov
push
push
rep
fistpl
scas
ja
adcl
clc
pop
pusha
sbb
push
xlat
scas
pop
xor
mov
das
or
in
arpl
scas
aas
xor
testl
lret
es
xchg
out
xchg
pop
ret
pop
sub
repnz
inc
es
dec
cltd
xor
add
lcall
shrl
mov
mov
sar
xor
and
stc
inc
push
shrd
lock
dec
xchg
xchg
fistps
add
cld
mov
fistpll
sahf
repz
or
mov
out
mov
sub
inc
adc
jne
mov
mov
gs
fsubs
inc
lret
in
out
xchg
cwtl
icebp
cmp
andb
cmc
test
repz
adc
ljmp
adc
cmpsl
dec
les
lret
sbb
push
pop
fldl2e
jmp
cmc
jbe
pop
push
push
cmp
mov
and
imul
dec
push
mov
scas
pop
cld
xlat
xor
std
pop
ljmp
fldenv
mov
pop
cmpsl
cmp
mov
clc
loopne
aad
or
hlt
adc
leave
or
data16
cmc
popf
pop
sbb
xor
rcl
fwait
xchg
mov
xlat
push
clc
shlb
cmp
test
std
mov
in
pop
or
sbb
lret
mov
mov
push
sbb
inc
shl
xchg
daa
adc
add
xor
pop
jns
and
mov
lea
push
add
stos
icebp
insb
pop
out
in
inc
aas
aam
push
cmp
sti
and
fcomps
dec
outsb
stos
sub
ret
movsb
js
clc
adc
hlt
in
jbe
stc
mov
bnd
jmp
outsb
mov
xchg
mov
test
pop
jo
neg
adc
aaa
add
lret
mov
push
sub
movl
in
cltd
outsb
ret
xchg
test
cmpsl
sar
sbb
setl
jmp
dec
dec
pop
into
cwtl
cltd
test
mov
mov
inc
lods
rorb
loope
clc
mov
into
jae
dec
cmc
cmpsb
fsubl
adc
js
xor
push
add
mov
sub
push
push
das
clc
mov
pop
std
xchg
push
add
or
mov
mov
out
add
xchg
orb
cmp
adc
cli
push
push
sbb
int
xchg
andl
fnstcw
xor
mov
mov
xchg
add
cmp
call
sub
fs
lret
mov
imul
movsl
cmp
jp
mov
adc
in
and
and
push
adc
jae
fiadds
lds
push
pop
cmc
popl
jbe
xchg
imul
sti
fidivs
push
test
rcrl
lock
and
jnp
mov
std
std
xchg
jge
xor
or
or
in
mov
idiv
cltd
mov
mov
sbb
in
sahf
fisttps
xor
fcomps
dec
mov
sbb
in
jnp
test
xchg
movzbl
mov
outsl
jne
iret
popf
mov
loop
cmp
dec
mov
xlat
push
sbb
cmpsl
inc
cmp
mov
push
xchg
cmp
repz
add
xchg
sbb
pop
mov
enter
int3
jo
in
out
xchg
stos
enter
xchg
sbb
dec
dec
cmp
xor
or
icebp
shll
ja
adc
push
nop
sbb
fiaddl
lods
jl
jns
mov
out
push
clc
adc
lods
or
cwtl
xchg
mov
shll
mov
loop
jb
popf
cmpsl
mov
dec
pusha
rcl
lret
les
out
cmpsb
in
fiadds
mov
jmp
bound
movsb
fsts
popw
xor
outsb
sahf
sub
aas
jle
xor
sbb
sarb
push
or
inc
mov
inc
test
flds
fdivrl
xor
sub
dec
clc
push
repnz
cmc
push
jmp
inc
ja
lahf
sub
add
xchg
ds
pop
sbb
add
movsb
add
xchg
or
lret
xchg
push
pop
bound
or
aam
lds
mov
hlt
mov
jno
inc
std
ds
fisttpl
out
fmuls
and
or
lds
push
dec
add
frstor
add
lods
lret
int3
out
cld
adc
out
rorl
mov
sbb
ljmp
mov
sti
push
arpl
shl
inc
mov
lret
je
fidivrs
push
adc
cmpsl
ret
jno
fbstp
es
andb
loop
fstl
subl
shll
movsl
mov
sysret
cmp
aam
add
scas
popf
scas
mov
lods
or
xchg
and
xchg
insl
inc
test
lahf
jg
test
aam
or
lods
sub
frstor
lcall
sbb
jg
je
mov
xchg
rcl
xchg
sbb
cmp
add
dec
dec
shrl
rclb
or
cld
sarl
adc
outsl
rorb
outsb
in
sbb
sub
inc
xor
jbe
sti
lea
lret
loope
xor
adc
sub
int
jne
and
lret
daa
and
and
push
aad
push
cs
bound
lods
enter
ljmp
pop
decl
daa
lcall
das
jo
or
push
lods
adc
cmp
pushl
xlat
or
push
xor
mov
test
add
lods
cltd
dec
arpl
fs
add
popf
sahf
jl
ret
or
ss
pop
push
jl
mov
hlt
jg
gs
outsb
cmc
mov
es
popf
xchg
stos
push
in
dec
icebp
daa
xchg
push
filds
test
push
adc
pop
arpl
xor
loope
jnp
sub
mov
mov
mov
adc
xor
test
cmp
mov
lods
lods
cs
or
cld
pop
enter
push
cmpb
shrb
dec
jmp
fldcw
adc
shll
rolb
mov
cwtl
mov
xchg
out
cwtl
fiadds
in
add
cmp
imul
push
mov
nop
mov
xor
add
inc
shlb
cwtl
aas
mov
gs
ljmp
sahf
inc
cmc
shl
mov
popa
sub
xor
xor
jl
xchg
cmpsb
inc
xchg
inc
pop
jns
leave
sub
xchg
icebp
sbb
std
cltd
divb
loop
cmp
cld
adc
cmp
ja
lea
mov
sbb
push
iret
xchg
cmp
or
and
jne
mov
sbb
xor
insb
add
push
mov
iret
sbb
add
jae
test
adc
fucom
cltd
lock
rcl
inc
xor
adc
lahf
and
lea
mov
adc
xchg
clc
enter
jno
mov
sbb
adc
inc
arpl
jl
or
in
lcall
addr16
lds
cld
inc
outsl
cwtl
or
mov
sub
or
xlat
mov
clc
mov
xchg
cmpsb
or
inc
jg
xchg
mov
out
sub
out
xchg
adc
shlb
cmp
and
test
or
out
mov
enter
fildl
xor
arpl
divl
push
test
jle
jnp
pop
sbb
loop
adc
gs
imul
cmc
pop
lds
or
imul
push
xchg
fs
cmp
mov
mov
sub
mov
adc
ret
addr16
dec
lret
pop
bound
inc
int
scas
jl
sbb
push
add
daa
mov
push
xchg
mov
xor
cwtl
lods
dec
sbb
dec
out
xor
addr16
fldcw
push
ret
pop
lea
mov
mov
fsts
sbb
lock
sbb
inc
ror
cmp
inc
aam
push
sub
adc
mov
scas
mov
andl
push
repnz
dec
inc
je
mov
mov
jge
arpl
and
int
xchg
push
jg
push
push
scas
cld
imull
add
or
mov
xchg
fwait
inc
dec
mov
fs
popf
stos
jg
lds
sbb
rcrl
inc
dec
in
push
clc
ret
sahf
cs
inc
pushf
or
mov
outsb
xchg
stc
loopne
pop
int
xlat
cmp
ja
cmc
xor
cmp
cmp
inc
std
pop
sub
out
dec
xlat
in
sti
cmp
test
imul
mov
mov
fadds
shrl
ret
cmp
stc
pusha
gs
pop
xor
jmp
cmp
out
sub
fstpt
mov
pop
sbb
push
pop
out
call
addr16
jge
cmp
adc
xchg
push
or
in
aaa
aas
in
sub
inc
popa
xchg
ljmp
mov
and
pop
insb
hlt
mov
xchg
in
pop
ss
adc
lea
fildll
clc
sbb
jmp
pusha
pop
es
add
je
pusha
lret
sbb
scas
imul
push
fidivl
or
push
sub
fsub
sub
fcmovbe
pusha
scas
aas
jns
dec
adcb
sbb
lret
cmp
jbe
xor
shll
xchg
jecxz
push
rol
aad
jo
push
daa
fcomps
lret
fisubs
and
int3
adc
int3
aaa
mov
xchg
in
jp
insb
mov
sbb
shll
cwtl
sub
movsb
mov
cmp
rcll
pushf
push
and
or
jle
mov
cmpb
mov
jge
xchg
sbb
stos
push
or
sub
adcb
and
shlb
stc
movsl
sub
scas
xchg
or
adc
aas
fnstcw
lods
nop
push
in
mov
cmp
sbb
pushf
mov
pop
sub
lds
subl
xor
pushf
xchg
inc
mov
popf
lret
ljmp
mov
mov
mov
or
mov
xor
mov
mov
lds
pop
out
lea
insl
loop
orl
inc
push
loop
mov
adc
dec
arpl
clc
dec
jecxz
out
sbb
sbb
call
jne
insl
mov
cmp
push
dec
jb
fcomps
cmp
push
push
icebp
xor
xor
repnz
push
jae
shll
fwait
cmp
pushf
aas
push
loop
mov
sbb
or
mov
mov
jmp
mov
jecxz
outsl
pop
inc
and
inc
push
mov
in
cmc
repnz
insb
sahf
pop
out
add
repz
std
sahf
inc
cmp
aad
sahf
ljmp
cmp
dec
adc
jne
imul
je
not
shll
mov
mov
psrad
pop
stos
lahf
pop
xchg
sub
add
movsb
cli
inc
into
add
xor
and
inc
pop
adc
std
mov
sub
in
fstl
push
add
movsb
test
push
mov
nop
pop
addb
pop
push
lahf
lds
popf
ljmp
mov
sub
idivb
cmp
dec
mov
es
or
scas
and
cltd
xor
mov
stos
mov
enter
sub
mov
mov
repz
mov
loopne
ret
push
add
push
or
push
out
cmp
stos
dec
xor
leave
shrb
out
xlat
bound
shlb
fisubrs
dec
mov
dec
xchg
mov
clc
das
stc
imul
ljmp
je
sbb
jmp
or
xchg
ffreep
lret
mov
fdivl
bswap
icebp
jno
push
out
jae
jmp
sbb
add
pop
aas
push
in
push
into
lahf
insl
aaa
mov
jns
jle
mov
or
jl
aas
cltd
dec
sbbl
dec
adc
ficoms
repnz
sbb
cmp
cli
mov
adc
imul
or
mov
into
pushw
pop
test
pop
sub
lods
xchg
fistl
sbb
sub
scas
sub
pop
sub
mov
or
sub
cmp
scas
mov
inc
loope
stos
ljmp
mov
mov
xor
in
call
jecxz
jl
sbb
movsb
inc
aaa
test
lea
addr16
div
ficoml
ss
ja
lret
shll
cs
rcrb
popa
outsb
pushf
mov
cmpsb
sbb
dec
sbb
and
and
sub
into
cmp
fisttpl
mov
andb
pop
mov
push
out
mov
sbb
dec
push
jo
faddl
xchg
das
cmp
mov
shrl
sub
sub
mov
movsl
xchg
loopne
dec
jno
mov
bound
or
repz
and
aas
pusha
outsl
lea
sbb
test
inc
out
fnstsw
jnp
mov
repnz
mov
int3
adc
cmp
rcll
loope
lods
scas
sub
xchg
movsl
clc
sti
cwtl
pusha
loop
pop
scas
inc
push
loop
mov
loopne
lds
fimuls
nop
lock
repz
repz
pushf
inc
ret
test
mov
arpl
mov
add
loope
jle
cli
xor
mov
pmuludq
push
add
jne
push
outsl
aad
inc
mov
lds
jle
sub
rorb
int3
jmp
xor
test
pop
xor
inc
aaa
rep
mov
xor
xor
push
je
fwait
or
ljmp
mov
pop
mov
rorl
and
mov
inc
fistpl
jo
aad
imul
cmp
dec
mov
mov
aad
adc
arpl
push
imul
icebp
mov
and
in
xchg
pop
push
add
cli
outsl
xchg
push
xchg
dec
xor
dec
out
imul
xor
aaa
jns
mov
jo
xor
inc
dec
addr16
sub
loopne
insl
lret
cmp
mov
xorb
neg
flds
es
mov
jnp
in
inc
pop
popa
pop
cwtl
mov
test
xlat
mov
stc
fcomp
xchg
in
xchg
clc
pop
push
fmul
push
imul
cwtl
roll
and
bound
ss
sub
or
fiadds
sub
xlat
cmpsl
cwtl
xchg
in
xor
adcb
cmp
mov
sbbl
inc
adc
aam
dec
xor
jbe
adcb
mov
dec
jle
inc
xchg
dec
xlat
imul
out
push
mov
or
mov
mov
mov
pop
es
add
test
mov
mov
add
jo
inc
mov
mov
movsb
pop
vunpckhpd
in
xchg
stc
lods
ja
or
sahf
rclb
adc
xchg
inc
push
icebp
add
movsb
add
sbb
pop
inc
mov
mov
cmp
sbb
lahf
push
les
mov
jecxz
clc
sbb
add
std
into
inc
cmp
xchg
ljmp
test
jmp
and
cltd
xchg
xchg
mov
adc
test
lcall
call
jns
or
test
xlat
out
ss
aaa
pop
test
data16
mov
add
idivb
insl
and
xchg
mov
fildll
adc
push
mov
dec
mov
mov
jl
inc
mov
arpl
ret
mov
xchg
xor
out
clc
lret
jb
pop
cli
adc
insl
cwtl
xchg
aad
ja
sarb
mov
fstpt
push
stos
call
cmp
leave
loope
dec
mov
push
mov
cs
sub
sbb
std
sub
pop
pop
or
test
stos
mov
adc
pop
xchg
xchg
cwtl
imul
fmull
dec
mov
ja
into
mov
fstps
jae
jno
jle
outsb
popa
in
lds
in
xor
mov
clc
push
es
test
xor
push
subb
mov
notb
xchg
mov
jae
rcrl
xchg
out
cmp
ret
jg
pop
insl
incb
or
bound
sbb
jmp
or
jecxz
xchg
mov
pop
jge
cmpsl
std
or
add
loope
jo
xlat
mov
jbe
lcall
dec
inc
sahf
sbb
xchg
cmpsb
lahf
adc
and
push
push
hlt
add
insb
aas
xlat
fnsave
adc
jb
fidivrs
jo
jp
pop
sbb
jnp
inc
test
loopne
lods
jne
lods
xor
mov
or
jne
sbb
out
sbbl
push
lcall
addb
popf
mov
nop
hlt
jnp
dec
lds
ds
scas
movsb
icebp
adc
lahf
add
push
mov
into
inc
jno
adc
and
push
xchg
jae
xchg
or
adc
pop
and
xchg
fwait
repz
cltd
fwait
and
xor
jae
pop
mov
js
xchg
or
jbe
pop
frstor
jp
mulb
shlb
stc
aaa
ja
xchg
test
inc
sbb
sub
repnz
inc
lret
push
xor
cld
scas
arpl
mov
pop
pop
out
sub
sub
and
arpl
lods
fdivrl
add
and
clc
push
pop
pop
adc
dec
xor
pusha
popf
test
stos
cmp
mov
fidivl
out
mov
into
ror
or
ffreep
lods
enter
mov
jnp
dec
adc
pop
xorl
adc
outsl
add
lahf
add
rcrb
add
jp
sbb
popf
or
cwtl
mov
fs
cmp
insl
dec
insb
lea
sti
data16
lea
hlt
mov
test
je
adc
movsb
push
mov
inc
mov
popf
stos
out
imul
mov
cmc
ret
sbb
cmp
xchg
add
pop
aam
push
insl
xchg
fisubl
and
lahf
es
mov
mov
mov
lahf
sbb
jp
cwtl
aad
pop
add
dec
push
jmp
sub
and
jecxz
imul
cmpsb
fchs
adc
mov
enter
jne
mov
daa
je
loop
xchg
loope
imul
jae
div
mov
jle
xchg
or
adc
addr16
and
inc
push
test
mov
dec
jmp
mov
out
pop
push
cmpl
ja
jae
loopne
or
out
movsb
pop
mov
hlt
int
test
mov
cmp
in
and
out
cltd
out
clc
rdmsr
js,pt
dec
xor
pusha
jno
cmpl
and
ret
mov
mov
scas
mov
mov
inc
js
fildl
mov
lahf
xchg
push
sbb
or
xchg
mulb
push
adc
add
int3
jmp
lods
xchg
sbb
cmpsl
cmpl
xchg
sub
adc
cs
lods
test
add
dec
or
push
pusha
mov
and
insb
into
add
and
das
fadd
scas
aad
int
sub
mov
hlt
cmpl
sbbb
stc
mov
pop
adc
push
mov
pop
lods
into
cmpsl
pop
jmp
cmpsb
test
andb
jge
out
shll
dec
cmp
icebp
pop
cmp
sub
clc
lret
jo
outsl
fcomp
xchg
int3
arpl
inc
in
sti
add
imul
insl
inc
loop
lahf
mov
out
insl
lcall
mov
in
push
dec
cmp
aaa
and
insl
icebp
ljmp
loop
add
jno
sar
sbb
mov
out
rcrb
adc
adc
mov
fstpt
outsb
sbb
push
jmp
stos
push
xor
mov
lods
jg
daa
push
adc
cs
ljmp
sub
xor
call
dec
loope
sbb
adc
sahf
ret
and
and
movsb
in
push
and
int
lock
in
test
cmp
adc
aad
sub
inc
and
xor
pop
jge
xchg
jns
push
xchg
inc
daa
aas
mov
insb
lock
lods
mov
js
add
scas
in
imul
js
sub
out
sub
pop
dec
pop
ds
sub
mov
push
mov
mov
xorb
and
iret
mov
xor
aam
outsl
inc
repz
cs
pop
xor
pop
mov
adc
stos
jbe
mov
sbb
fists
mov
pushf
inc
insb
push
sub
fcompl
sub
xchg
push
adc
out
inc
in
fnstsw
out
mov
sbb
jbe
clc
and
pop
shll
test
or
jns
mov
mov
mov
fsubl
sbb
rcrl
lret
push
fmul
push
mov
push
data16
fcmovu
enter
jecxz
scas
jecxz
aam
iret
test
mov
in
cmp
xor
mov
int
mov
sbb
fldt
icebp
mov
jnp
inc
lods
xor
cmpsb
sub
fimull
lret
pop
xchg
js
nop
inc
test
ja
pop
sbb
sbb
sbb
insb
cmpsb
outsl
int
imulb
cli
xchg
dec
sub
subl
cmovle
daa
adc
jp
and
mov
cld
mov
mov
push
xor
mov
dec
cld
push
sbb
scas
mov
imul
jecxz
cmp
aaa
and
js
add
fsubl
fidivrs
stc
popf
sbb
mov
repz
decl
and
je
mov
cmp
iret
aad
push
inc
sbb
in
cmp
jecxz
adc
stos
scas
fimull
pop
sti
xchg
test
cmpl
ret
pop
adc
pushf
lea
sub
scas
dec
outsb
clc
and
stos
jo
inc
adc
lds
xlat
adc
xchg
adc
xor
add
iret
xchg
sub
and
aaa
out
cwtl
icebp
jns
ret
pop
loope
andb
fstl
cwtl
imul
cmc
xchg
loop
sub
icebp
cli
stc
dec
xor
adc
sahf
sub
ljmp
mov
xchg
and
repz
jnp
inc
std
push
movsl
mov
push
dec
imul
movsl
jns
shrl
cwtl
mov
nop
pop
add
rcrb
mov
ljmp
arpl
pop
inc
sahf
repz
test
mov
sarb
inc
call
popf
add
mov
adc
xchg
and
mov
push
fidivs
mov
inc
cmp
fcoms
jno
insb
fcompl
test
cmpsl
inc
adcl
mov
adc
stos
scas
nop
mov
scas
xchg
out
call
cli
mov
mov
jno
add
adc
mov
imul
test
and
mov
mov
xchg
jne
daa
cmp
divb
lods
and
in
xor
xlat
je
inc
and
stc
add
test
inc
pop
loopne
cmp
push
xchg
outsb
xchg
jns
adc
js
imul
les
movsb
daa
bound
sbb
inc
mov
cmp
cmp
or
or
cltd
aas
out
cmp
popa
xchg
cmc
sbb
je
int
fsubs
cmp
sbb
addb
arpl
fdivl
ror
imul
cmc
and
enter
filds
cs
dec
test
test
mov
ret
ljmp
outsb
ds
fisubrs
stos
inc
cmp
push
jl
scas
and
shr
add
mov
xor
mov
push
dec
jbe
lret
or
xchg
ja
dec
inc
mulb
or
sub
outsl
or
dec
mov
call
cmp
mov
push
call
int3
testl
mov
js
or
xchg
mov
ljmp
pusha
xchg
adc
test
jl
sub
sbb
mov
leave
outsl
or
jge
ja
add
pop
addr16
xchg
push
sbb
jl
mov
jo
clc
mov
and
sub
push
arpl
out
jb
add
lret
push
ret
fcomip
and
xor
out
lret
imul
outsl
imull
sub
orb
in
jnp
push
add
dec
int3
push
dec
cmp
add
push
sub
insl
inc
sub
hlt
enter
push
push
add
mov
mov
push
pop
lock
cmpsb
inc
stos
fldenv
iret
loopne
aaa
and
test
shlb
jg
dec
pop
insb
and
jecxz
cwtl
loop
pop
and
ja
int
mov
jmp
bswap
jge
dec
add
add
aaa
nop
mov
pop
xchg
and
pop
xchg
dec
inc
xchg
cltd
daa
sbb
xor
mov
lret
call
sub
jmp
push
int
arpl
out
in
push
mov
test
test
and
adc
sub
pop
adc
cmp
enter
mov
or
cmpsl
push
push
sub
push
xchg
pop
mov
xor
and
pop
jge
mov
pop
cmp
out
stos
fldl
mov
jo
aam
sub
das
jge
ret
hlt
add
aad
test
jg
add
out
lods
imul
lcall
jns
icebp
jnp
or
gs
rcrl
orb
out
loop
movsl
jno
sub
mov
and
xchg
out
data16
lock
imul
imul
orl
gs
sbb
or
andl
mov
loop
out
xchg
aaa
pop
aas
mov
adc
push
les
jns
gs
xchg
cmp
popf
scas
dec
lods
inc
jmp
popf
xchg
jne
test
cli
aaa
inc
mov
cmc
fwait
mov
in
sub
push
inc
pop
lods
or
stc
xor
jbe
xor
push
mov
divl
push
pop
fdivs
mov
adc
in
push
push
pop
xchg
pop
or
pop
sub
mov
and
xlat
xor
iret
cltd
cs
push
hlt
xchg
divb
xchg
fdivrl
in
repnz
lahf
cmp
ret
sti
mov
push
or
dec
pusha
mov
xor
sub
lret
mov
negb
mov
push
inc
int3
outsl
mov
imull
xchg
sbb
and
outsb
outsb
push
int
imul
mov
stc
jle
out
and
aad
cmc
loopne
ds
adc
loop
xchg
push
stc
stc
jo
jmp
es
in
sbb
push
xor
xchg
in
hlt
out
cmp
mov
inc
popf
les
push
mov
cs
xchg
pop
mov
cmpsl
aam
cld
lods
jb
pusha
push
aaa
mov
lods
mov
and
fstpt
aad
and
sub
add
mov
sub
lods
push
lcall
outsl
pop
hlt
call
inc
sbb
sarb
xlat
xchg
lock
lahf
mov
or
pop
push
push
push
or
outsl
cmp
pop
add
jae
xor
lcall
outsb
or
sub
leave
fucomi
add
ret
sbb
movsb
test
add
adc
stos
jbe
testl
pop
jp
adc
add
mov
mov
and
sub
xchg
add
adc
lods
shrl
xchg
and
mov
pop
lea
jl
xlat
push
test
inc
es
or
ficoms
dec
and
xchg
or
jbe
aad
mov
jge
test
scas
aad
gs
cs
inc
lock
push
cmp
repz
mov
adc
divl
loop
arpl
repnz
jge
outsl
mov
push
or
dec
into
or
add
rcpps
mov
xor
cmpsl
and
sbb
add
in
daa
or
adc
cli
cmp
test
movsl
add
fsts
js
sarb
scas
aam
decl
ljmp
push
ror
sbb
cwtl
jo
add
sub
mov
mov
xor
mov
loopne
push
mov
aas
arpl
or
insl
adcl
arpl
xor
or
jl
push
cmp
xor
add
cmp
push
pop
imul
and
jmp
inc
addl
loop
add
and
xchg
or
loop
inc
pop
inc
push
ret
cmp
clc
fistpl
and
mov
and
jmp
xor
xor
movsl
pop
push
mov
jecxz
fcom
sub
cmp
test
sub
div
lret
add
push
std
mov
repz
mov
out
pop
clc
in
sbb
cs
mov
aad
ds
adc
mov
sahf
cmp
adc
sti
adc
stos
xor
test
ja,pn
push
or
mov
xor
adc
lods
xor
xchg
dec
je
jbe
imul
rcrb
add
js
aas
push
adc
aas
mov
pop
ljmp
cmpsl
or
int
push
outsb
jge
inc
negb
inc
push
jle
lahf
lock
inc
in
scas
ret
dec
sbb
mov
and
fisttpl
or
cld
mov
sti
push
aad
jge
jbe
sbb
cltd
arpl
inc
adc
mov
clc
out
mov
jnp
add
fsubs
xchg
mov
xchg
and
sbbl
pushf
jge
push
xor
cld
call
cmpsb
sub
push
xchg
inc
jae
or
dec
out
pop
add
inc
sahf
cmp
into
mov
les
and
xchg
xchg
mov
aad
push
push
push
and
cmc
sbb
add
sub
inc
mov
pop
sub
shr
inc
jp
and
hlt
insl
testb
cmpsb
bound
aad
xchg
mov
leave
stos
cld
lods
add
arpl
and
mov
add
mov
in
inc
dec
adc
stos
xorl
inc
test
jo
and
mov
push
mov
sahf
or
fnstsw
mov
dec
rclb
aas
sbb
rclb
rorl
inc
mov
add
shrb
shrl
decb
jne
dec
mov
scas
cld
js
pop
and
dec
mov
sub
dec
pop
lods
lret
je
xchg
mov
pop
jb
mov
push
fldenv
int
inc
int3
mov
les
xlat
sbb
mov
bound
dec
stc
cmp
test
in
call
pop
call
inc
fdiv
scas
mov
mov
test
push
pop
xor
fdiv
adc
sub
xchg
aad
jl
or
shll
lds
outsb
pop
jecxz
push
inc
cwtl
adc
mov
sbb
pushf
pop
or
lahf
sub
adc
shrl
mov
repnz
in
push
leave
dec
int
sub
ljmp
js
ja
sbb
mov
in
sarl
mov
sbb
dec
dec
push
jae
imul
inc
lcall
shll
mov
xchg
jno
inc
rcl
imul
mov
jmp
out
xor
pusha
mov
mov
sbb
cli
sub
clc
adc
in
je
mov
mov
mov
add
cli
lcall
out
mov
sub
aas
inc
into
sub
cmp
mov
jl
popa
pop
imul
mov
fxch
xchg
fstps
inc
repz
xor
push
add
or
inc
cmp
push
sti
xor
mov
xchg
mov
ds
mov
mov
out
pop
out
ds
sbb
sbb
in
xor
adc
repnz
cltd
dec
in
fnstcw
sbb
cmp
test
shl
gs
sbb
mov
add
cmp
push
in
sub
mov
lods
out
inc
jns
cmc
ljmp
push
insl
mov
fs
mov
mulb
call
xchg
rol
aaa
xchg
cmpl
mov
push
sub
add
mov
movsb
loope
test
or
repnz
push
aaa
or
in
dec
shlb
xor
mov
mov
cld
sbb
scas
cmp
push
shll
sahf
bound
popf
mov
lock
loopne
lea
adc
adc
xchg
fs
pop
outsl
add
and
call
cmp
jnp
shl
icebp
xchg
cwtl
push
int
mov
aam
sahf
jne
inc
imul
sbb
insl
fdivrs
xor
das
push
stos
adc
hlt
fistl
leave
sub
jge
mov
ja
jo
and
sbb
or
pop
jg
adc
in
insb
pop
cmpsl
and
lods
fistpll
in
pop
inc
inc
dec
xchg
fadd
and
or
sbb
ja
push
sub
jno
xchg
inc
call
push
imul
or
jnp
push
inc
into
xchg
jae
cwtl
xor
xchg
push
mov
mov
add
in
clc
lret
test
cmpl
fstps
xor
pusha
cmpl
sub
ss
jae
mov
xchg
mov
aas
add
fcompl
adc
push
mov
out
add
outsl
jo
pusha
mov
out
mov
cmp
mov
in
push
scas
inc
orb
decb
lret
mov
xchg
push
xchg
adc
cli
cmpsb
nop
push
loop
xlat
les
pop
pop
dec
xor
xchg
cmp
push
mov
mov
pop
add
inc
mov
inc
mov
rolb
daa
pusha
pop
mov
add
int
xchg
xchg
jle
outsl
inc
repz
loope
jne
in
out
lahf
inc
mov
jp
test
add
fcoml
sbb
cltd
sub
shl
add
mov
ljmp
inc
jbe
cmp
shrl
and
xchg
bound
and
aas
dec
popf
ret
call
addr16
aad
xor
push
addr16
rol
push
xor
hlt
fucomip
lods
sub
sar
loop
out
pop
pop
int
mov
popa
fbstp
push
mov
test
adc
out
fs
mov
or
fildl
enter
xchg
push
xor
repz
dec
call
sub
push
pop
cli
in
jno
sbb
loopne
in
iret
je
mov
pop
push
mov
pop
loopne
jno
insb
dec
fsts
pop
fiadds
jl
xchg
lods
dec
leave
add
dec
daa
icebp
lea
movsl
dec
adc
cmp
nop
push
clc
fmul
mov
and
and
cmp
cmp
or
fdivl
shrl
push
push
bound
xchg
sar
pop
adc
pop
mov
inc
pop
push
cmc
mov
dec
sbb
fstps
inc
and
sahf
xchg
lods
cmpsl
je
jle
sub
loope
cmp
faddl
xor
rorl
and
cmp
adc
add
imul
inc
cmp
in
andb
cli
push
out
lock
scas
fnstenv
int3
sbb
push
int
arpl
test
mov
cmp
imul
mov
pop
or
pop
add
pop
mov
push
dec
dec
add
xchg
leave
jecxz
add
icebp
int3
aad
cmp
dec
int
jg
inc
cld
jmp
rorl
mov
sub
fidivrs
inc
popf
repz
xor
out
dec
push
sahf
or
cmp
xor
popf
push
dec
outsb
outsb
pop
push
gs
pusha
push
jp
adc
mov
and
mov
out
mov
or
fistpl
loop
xchg
or
mov
or
sub
inc
loop
lret
popa
rorb
pop
sub
pop
cltd
jo
lock
mov
cmc
nop
dec
mov
addr16
push
jl
push
ja
orl
or
ljmp
xchg
cmp
jmp
or
imul
inc
das
mov
pop
cs
in
lods
xchg
dec
scas
mov
test
cmp
xor
push
mov
push
mov
push
insl
stos
xchg
pop
aas
mov
movups
or
fstp
mov
ljmp
enter
jp
xor
sbb
call
and
js
fmull
pop
mov
lcall
popf
xor
push
subl
adcb
aas
inc
push
fcoml
es
movsb
and
adcl
repz
mov
pop
notl
mov
mov
pop
icebp
movsl
fucomi
sbb
repnz
xchg
add
adc
mov
sub
push
ret
push
nop
lret
stos
inc
jmp
je
int
pushl
movsb
adc
inc
aaa
outsl
cmp
divb
stos
xchg
xchg
push
das
mov
pushf
adc
dec
popl
lock
fnsave
cmc
imul
out
insl
mov
sub
decl
ret
outsb
ljmp
movsb
inc
fiaddl
int
loopne
call
into
lretw
mov
sbb
adc
dec
xchg
out
pop
xchg
lret
movb
cs
pop
jo
xchg
xor
imul
pop
dec
aad
mov
and
and
sbb
icebp
lods
ja
jno
pushf
jl
lret
jbe
mov
hlt
cs
in
fcoml
popa
outsl
or
aaa
xchg
fcmovnb
nop
push
adc
cmpl
push
adc
addr16
sub
adc
je
outsl
push
fistpll
out
jns
pop
into
inc
xchg
shll
mov
sti
fisttps
or
mov
push
xor
cmp
jae
sub
inc
mov
xor
rcl
inc
or
les
push
cmpsl
loopne
rcll
adc
jno
jmp
loop
cmp
test
jmp
into
shr
popf
mov
mov
jb
inc
and
cmp
pop
and
outsl
mov
ret
mov
rcr
ret
ja
jo
add
push
sbbb
lds
fidivrs
enter
mov
fldl
rcr
sub
stos
mov
js
mov
pusha
iret
fstpl
inc
insl
xor
mov
sbb
inc
ret
arpl
jmp
dec
js
sarl
mov
cmp
rcll
clc
push
and
fisttps
mov
push
jg
in
rolb
xor
in
inc
cmpsw
sub
xor
jge
mov
jmp
enter
in
sub
testl
and
ds
mov
popa
add
dec
fsubp
lods
mov
fcmove
andl
sbb
push
in
clc
orl
push
push
cwtl
cld
rol
mov
subb
add
sbb
mov
dec
fdivrl
xchg
mov
fistl
jae
mov
shlb
add
sbb
mov
mov
pop
sub
adc
xor
push
push
or
adc
cld
sbb
mov
out
pop
xor
faddl
mov
adc
xchg
call
ljmp
scas
aad
sbb
lahf
push
cwtl
ret
dec
jg
cs
ds
mov
cltd
mov
xchg
jnp
mov
jmp
pop
insl
and
xchg
xor
dec
xchg
and
xor
andl
jnp
and
clc
xor
lahf
loope
and
clc
sahf
enter
xchg
or
mov
and
rorl
xor
inc
rclb
add
stos
dec
ds
mov
out
sti
xchg
jnp
incl
test
stos
cmp
fstpt
into
das
jmp
add
stc
lods
addl
ret
or
xchg
std
aam
mov
icebp
sbb
push
xchg
insb
cli
pop
incb
ja
rcrl
cmp
mov
int
add
out
adc
xchg
mov
add
repz
shlb
inc
and
stos
in
adc
xchg
jp
aad
dec
dec
cmp
test
cmp
cmp
js
push
pop
xchg
fwait
pop
mov
cmp
jecxz
test
cmpsl
enter
mov
dec
sbb
add
mov
imulb
sub
push
jbe
in
movsl
pusha
or
or
enter
movsb
lahf
inc
add
add
or
inc
add
jne
icebp
inc
aad
sub
rorl
xorb
adc
stos
clc
inc
fimuls
xor
lea
lock
and
test
ret
inc
outsb
dec
movsb
or
xchg
pop
cmp
icebp
fsubl
mov
add
and
mov
into
popl
inc
lahf
inc
dec
movsl
nop
loop
arpl
dec
pop
xchg
out
adc
pop
out
sbb
xor
mov
out
or
adc
xlat
into
pop
test
or
ljmp
jmp
push
aam
int3
sahf
xchg
push
xchg
sub
pop
out
in
mov
scas
cmp
push
popf
pushf
mov
daa
fadds
inc
xor
cmp
jb
inc
hlt
push
adcl
push
dec
pop
enter
cmp
into
push
jmp
push
xor
movsl
add
sub
popa
lds
sbb
xor
dec
xor
jne
lods
xor
push
fcomps
lahf
test
add
or
mov
sarb
jl
fwait
stc
jno
and
outsl
xor
insb
fmuls
mov
pop
and
mov
out
outsl
sahf
pushf
jle
sbb
and
test
cmp
daa
clc
out
scas
popf
mov
mov
clc
sahf
adc
cmp
mov
addr16
push
adc
lcall
mov
add
je
jmp
cmp
jmp
sub
fnstenv
mov
cltd
fimuls
push
mov
lock
inc
add
mov
pop
jle
test
js
xor
es
xor
mov
xor
ret
repz
inc
adc
cmp
pop
mov
xchg
fbstp
mov
repz
cmp
cmp
add
mov
mov
pop
in
mov
xor
cmpsb
cmpb
mov
sub
andl
ss
pop
icebp
mov
mov
mov
adc
enter
inc
xchg
jno
xor
mov
add
mov
mov
call
out
out
xor
shr
fdivrs
mov
out
jp
sahf
fidivrs
pop
push
or
mov
test
push
mov
loopne
jmp
inc
inc
or
push
dec
icebp
mov
xchg
push
iret
inc
push
in
daa
mov
jg
fisttpl
int3
xor
xchg
xchg
lock
cmp
in
cs
and
int3
dec
pop
and
adc
sub
xchg
outsl
shll
arpl
mov
loop
cmpsb
jmp
lret
xchg
push
sti
sahf
push
add
xor
shlb
add
test
sub
popa
loop
or
push
xchg
in
sub
mov
xlat
and
es
shll
sbb
icebp
fiadds
xchg
xorl
insl
arpl
jecxz
imull
push
das
and
subb
xlat
push
or
adc
sbb
dec
add
mov
mov
inc
jbe
jno
dec
test
push
push
jno
cmp
lahf
cmp
or
jb
fisttpll
orl
sbb
sbb
pop
cli
lahf
inc
or
cli
cmp
sub
xchg
mov
xchg
rcrl
ja
aaa
cld
aas
xor
rcrl
pop
fnstsw
stos
or
add
iret
mov
pop
or
add
loope
testl
mov
xlat
sti
cs
test
data16
dec
sub
sbb
mov
mov
xchg
dec
ljmp
fnstenv
dec
sahf
sub
imul
jecxz
movsl
jbe
repz
loope
test
movsl
or
xchg
aaa
mov
lds
push
scas
pop
inc
mov
cmp
inc
lcall
push
cmp
loopne
das
mov
ljmp
jl
dec
pop
ljmp
xchg
mov
daa
popf
mov
aas
xchg
cs
mov
add
seta
dec
sarb
adc
es
mov
xchg
addr16
and
push
and
repz
ds
shr
dec
push
ds
pop
popf
dec
movsb
push
inc
or
lcall
and
mov
mov
xchg
xor
mov
out
daa
aas
cmp
inc
bound
add
push
xchg
xchg
pop
mov
add
pushf
les
xchg
sbb
cs
popa
in
shlb
ja
xchg
pop
dec
rolb
pop
mov
popf
push
or
lcall
cmp
mov
pop
inc
ret
or
push
andb
mov
jl
sbb
jge
or
jns
jg
loopne
and
jg
push
std
ret
bound
add
inc
int3
inc
pop
push
and
fldenv
xchg
mov
sbb
jl
pop
out
incb
or
push
jecxz
lret
fisttps
sub
or
fs
jb
lret
clc
ss
push
push
adc
fists
pop
repz
in
cmp
scas
std
mov
and
xchg
test
lahf
and
cmp
testl
mov
enter
mov
lea
fcoml
in
shlb
mov
mov
out
out
sbb
cmp
mov
mov
out
fucomp
nop
xor
test
pusha
cmp
lds
sbbb
fwait
addr16
das
and
dec
js
mov
or
sub
xorl
aaa
sahf
testb
mov
jmp
daa
stos
cmp
push
mov
in
adc
dec
loope
mov
xor
das
mov
adc
mov
push
rolb
xchg
hlt
inc
popf
idiv
push
std
lds
and
dec
out
shlb
fwait
jbe,pt
pop
shrb
lock
scas
loope
adc
push
xlat
cmp
mov
or
and
test
insl
xchg
or
cs
sub
xor
popf
stc
add
mov
push
rol
mov
push
aad
lret
repnz
jl
mov
cmp
rorb
addr16
orl
mov
sahf
popf
adc
push
jecxz
pop
jl
sub
out
xor
bswap
jb
mov
and
fdivrl
ljmp
fistps
sub
mov
jle
iret
ss
sub
call
int3
ret
leave
xchg
stos
std
test
loopne
cmp
and
xchg
add
pusha
jmp
inc
addb
jle
das
or
imul
jne
jmp
hlt
jmp
inc
movsl
movsb
inc
jo
push
jns,pn
jo
lock
lock
loope
add
mov
jmpw
stos
scas
dec
dec
cmp
leave
pop
icebp
rorb
sahf
ret
xor
fnstcw
pusha
jnp
and
test
push
negl
scas
int
mov
lret
jmp
jg
sahf
adc
xchg
xchg
xchg
adcb
ljmp
rcrb
lcall
pop
inc
sarl
fwait
mov
dec
cmp
mov
dec
sub
sbb
pushf
rolb
jmp
dec
movsb
or
pop
sahf
test
pop
imul
loop
pop
or
outsl
dec
pop
inc
jmp
shrb
imul
arpl
loop
jo
mov
push
inc
das
lea
cmp
les
sbb
or
movsb
xchg
stos
xchg
mov
daa
or
mov
inc
or
mov
jne
lcall
les
outsb
ror
repz
jge
mov
push
subb
test
push
int3
das
imull
add
out
ljmp
mov
iret
sub
fsubrs
shl
jno
jno
pop
outsb
add
adc
pop
dec
jnp
inc
pop
cld
loopne
lds
data16
dec
adc
sub
dec
outsb
or
ja
int
xchg
call
int
cmpsl
mov
lahf
pop
xor
jae
scas
and
sbb
dec
pop
fucomip
adc
xchg
inc
fstl
rcrb
cmpl
dec
ljmp
pop
rcrl
bound
inc
faddl
mov
cmp
addr16
sbb
inc
shr
xor
jge
adc
rorl
stos
jno
bound
and
mov
cwtl
fwait
sbb
add
insb
push
pop
xchg
jle
or
imul
pusha
sbb
mov
push
lds
lock
xlat
pusha
fstpt
jns
inc
cmc
cs
sarl
mov
popa
sbb
dec
and
cld
xchg
les
or
lea
mov
dec
and
and
cltd
sub
mov
insb
push
push
aaa
stc
or
xor
nop
sub
pop
sahf
sbb
outsl
and
sub
cltd
loope
call
jl
rolb
fdivp
adc
out
ss
sti
jns
sub
inc
jns
dec
outsl
adc
lods
add
mov
sub
add
daa
or
jmp
mov
in
fldt
dec
xor
pop
insb
lods
or
sub
xchg
rcll
sbb
xor
imul
sub
push
dec
jp
jmp
movb
rcll
dec
mov
mov
das
inc
test
jle
cltd
mov
add
test
cmp
loopne
adc
movsl
sub
inc
cs
xor
mov
ljmp
cmc
shrl
sbb
out
mov
int
jb
cmp
or
mov
mov
sbb
bound
repz
push
popf
rcrb
ljmp
add
sbb
adc
and
mov
pop
add
ds
mov
jl
cltd
or
cltd
cld
loop
fdiv
mov
inc
push
push
xor
cmp
sub
scas
inc
sbb
xchg
loope
sub
loope
subb
test
xchg
adc
fwait
out
or
das
ret
jns
sbb
insb
inc
scas
stc
sub
push
jo
loopne
jo
ds
xchg
mov
ds
rcrb
jnp
inc
notl
insb
dec
and
lds
lahf
adc
loope
mov
loop
clc
pushf
call
jb
movsb
scas
jne
mov
negl
mov
sub
mov
push
pop
ljmp
push
test
pop
les
mov
int
jmp
jle
xchg
es
pop
xlat
popa
ret
fiaddl
nop
ret
stos
dec
and
loopne
lods
push
adc
inc
fildl
frstor
adc
jecxz
sub
pop
iret
and
cmp
popa
pop
int3
shrl
jmp
cmpsl
int3
clc
xlat
imul
push
mov
in
jae
push
mov
mov
es
add
sub
icebp
es
jmp
mov
enter
loope
mov
dec
cmp
and
test
loopne
ja
mov
pop
push
dec
cmpsl
loop
mov
sub
sub
or
cmp
popf
pop
fmuls
mov
pop
dec
xchg
loopne
shlb
jge
jp
jg
gs
adc
xchg
frstor
mov
xor
out
jbe
xchg
sbb
add
inc
mov
xor
xlat
sbb
sub
inc
dec
pop
pop
not
add
dec
out
push
filds
mov
or
mov
ljmp
cmc
pop
cmc
subb
sbb
dec
push
in
in
shll
test
cmp
xor
cwtl
inc
jecxz
mov
pusha
fiadds
mov
push
push
push
lods
pop
std
popa
int3
fcomps
cmpsb
xchg
pop
or
jp
xor
sub
sub
rorb
mov
test
mov
cli
enter
push
aas
andl
xchg
jb
jg
sub
js
lock
repz
sub
xchg
inc
inc
stos
xchg
out
mov
or
std
mov
lods
clc
scas
loope
and
mov
lret
rcrl
mov
push
icebp
aad
mov
mov
and
shr
lahf
cltd
stos
sub
sub
mov
cli
xchg
push
dec
and
int
sbb
scas
andl
pop
lahf
pop
addr16
in
popa
push
loope
psraw
arpl
sbb
add
inc
scas
popf
xchg
call
test
out
xor
mov
cmc
fsubr
arpl
cmpb
xor
sbb
inc
pusha
inc
adc
mov
or
sarb
iret
data16
mov
gs
shlb
data16
jb
negb
mov
iret
xchg
xchg
and
test
sbb
xchg
jge
pop
dec
mov
dec
add
cltd
rcrl
xchg
ret
clc
test
ds
mov
mov
popa
imul
cmp
dec
or
in
pop
cltd
push
mov
xchg
faddl
xchg
enter
cmp
mov
iret
cs
pop
adcb
enter
popf
dec
ljmp
fucompp
out
lcall
pop
cli
push
lret
inc
xor
mov
mov
movsl
or
daa
mov
xor
stos
lcall
xchg
outsb
pushf
int3
dec
call
xor
xchg
aaa
mov
jp
outsl
daa
pop
cwtl
mov
xor
cwtl
out
pop
pop
jbe
imul
fnop
cs
lock
jmp
fwait
aas
inc
repnz
and
xorb
aas
mov
push
pop
xor
and
xchg
xor
dec
add
pop
or
popa
mov
fsub
pop
cmpsb
movsb
xlat
push
fwait
inc
test
add
xor
push
mov
mov
jle
cmpsb
add
mov
dec
mov
insb
out
std
iret
ret
or
hlt
cld
xor
adc
and
fistpll
mov
and
hlt
int3
sarb
out
cmp
mov
lock
cli
outsb
sbb
addr16
std
sub
sti
hlt
orl
jo
push
dec
pop
sub
xchg
gs
pop
pop
into
mov
xchg
cld
negl
mov
sarb
in
jp
cld
pop
adc
out
fldt
mov
xor
movb
test
andb
jp
pop
pop
mov
jno
sarb
shrl
aad
aad
xlat
or
xchg
push
stos
faddl
aad
xor
adc
jg
test
das
adc
ljmp
daa
fldenv
add
jmp
and
mov
adc
ljmp
clc
subb
rclb
jle
movsb
loope
or
sub
jmp
aaa
xchg
push
pop
call
movsb
jne
push
push
mov
inc
push
stc
jecxz
lds
stc
mov
jl
aam
xchg
dec
out
and
add
mov
cmp
cmpsb
sub
imul
jmp
xchg
pop
insl
mov
lods
or
add
leave
negl
js
adc
addr16
mov
cwtl
out
ss
fldl
popa
clc
ret
dec
cmp
fistl
arpl
add
or
lods
mov
inc
mov
shrb
lods
aam
ret
cs
cmpsl
scas
loop
movsb
inc
in
int
cmc
aad
push
sahf
pop
iret
inc
imul
in
outsb
adc
pushf
es
insb
js
jg
pop
cwtl
xchg
in
mov
and
cli
mov
mov
adc
nop
jno
scas
insl
loopne
lea
mov
adc
stos
jo
hlt
cmp
jno
push
mov
cmp
testl
inc
push
cmp
inc
add
sub
fcompl
cmp
pop
and
test
jo
xor
fwait
jo
in
pop
in
lahf
gs
mov
nop
fndisi(8087
sub
cltd
mov
or
xchg
sbb
push
mov
fists
std
mov
imull
fidivl
ds
fucom
repnz
or
sub
mov
rep
roll
js
int
xchg
loope
cmp
scas
lret
dec
push
adc
int
enter
fstpt
or
sahf
icebp
ljmp
add
int
cmpsl
sbb
pop
jns
scas
movsb
cmp
inc
dec
aas
inc
mov
xor
in
xchg
xor
sbb
add
and
push
push
sub
add
movsl
mov
xchg
mov
or
stos
nop
xchg
je
lahf
xchg
dec
pop
dec
xchg
push
cmp
mov
lods
pop
test
sbb
or
out
jecxz
stos
jb
cmc
repz
sarl
mov
cwtl
inc
mov
adc
insb
cmp
sbb
shrl
cs
add
aaa
adc
sahf
inc
jae
xor
mov
and
ret
adc
dec
ret
fimuls
cmpsb
dec
push
inc
into
dec
jnp
xor
cmp
mov
jo
lahf
xor
mov
clc
xchg
outsb
cmp
push
mov
loopne
ret
leave
inc
jp
movsl
lds
pop
inc
getsec
jo
lea
xchg
and
inc
test
ss
pop
cmc
sbb
mov
add
add
mov
sbb
mov
dec
fsubl
add
push
sub
mov
out
adc
or
stos
and
fs
add
cmc
imul
xor
mov
cld
test
sbb
loop
and
int
push
ficomps
and
addr16
xor
pop
mov
stos
jne
movb
inc
dec
iret
cltd
loopne
fsts
loope
sahf
sbb
lret
inc
push
test
cltd
xchg
sbb
adc
add
xchg
push
jg
push
stos
or
mov
xor
xorb
or
cltd
cmpsl
mov
jle
or
sub
sbb
pushf
imulb
aam
jl
inc
push
mov
adc
leave
pop
push
stos
and
ljmp
xor
sahf
jno
mov
push
aam
ja
cmp
sub
jecxz
and
test
pop
into
push
and
push
push
bound
adc
cltd
rolb
push
repz
inc
and
in
clc
out
and
mov
cltd
mov
mov
sub
add
cltd
aam
add
loop
rorl
cmp
jo
mov
inc
push
jnp
insl
lret
fdivl
out
loop
inc
out
cmpsl
push
mov
fbld
sbb
fsubrl
bound
test
pop
mov
or
sbb
sbb
mov
cmc
inc
sbb
inc
pop
pushl
enter
adc
mov
pushw
cli
into
xor
out
jge
gs
sbb
ljmp
mov
fisubs
mov
sbb
xor
adc
jge
mov
lea
push
xchg
or
adc
call
call
mov
popa
test
ljmp
xor
jnp
iret
lea
mov
into
stos
fs
loopne
push
cltd
cltd
push
loopne
push
in
push
int3
adcb
add
and
fisttpll
inc
ret
push
cmp
fildll
sbb
adc
icebp
mov
out
lret
rcr
cmp
test
int3
data16
rorb
fstps
sub
imul
cld
sarl
jnp
push
mov
lods
push
orl
pop
repnz
je
scas
xor
and
cltd
mov
aam
icebp
xor
mov
dec
xor
push
data16
inc
inc
sub
in
hlt
xor
adc
shll
shr
xor
lds
lock
iret
out
std
test
js
add
call
or
mov
jae
add
dec
mov
xlat
jne
insl
and
inc
xor
sti
in
or
push
xor
xchg
sub
lcall
jo
aad
fmuls
mov
rcrl
sbbb
mov
inc
push
mov
inc
imul
xchg
insb
movsl
sub
adc
out
lret
dec
aam
lods
mov
or
push
jns
mov
push
nop
pop
mov
sub
and
push
ljmp
push
js
inc
lea
popf
or
xchg
xchg
movsl
pop
std
enter
rorl
stc
sub
sbb
ret
movsb
daa
push
cltd
les
cmc
sbb
jnp
mov
xchg
stos
jge
fcoms
clc
dec
addr16
je
rol
inc
jg
mov
lret
adc
cmp
dec
add
sbbl
dec
mov
push
dec
mov
aad
ret
sbb
leave
loope
test
shlb
push
outsl
jl
pushf
fcomip
sbb
adc
sbbl
xchg
int
loop
pop
sub
mov
and
or
add
mov
jl
or
std
sub
dec
xchg
cltd
push
sbb
jg
add
inc
add
inc
repz
sub
add
cmp
pop
dec
syscall
xchg
leave
movb
lods
push
ljmp
in
scas
imul
mov
sub
add
ss
or
stos
sub
jg
sahf
push
shlb
mov
aaa
dec
and
imul
stc
imul
cmc
mov
push
inc
pop
clc
ss
loopne
das
mov
idivb
mov
mov
cltd
pop
les
cmc
add
int
jne
push
in
mov
or
mov
mov
pop
fmulp
adc
loopne
dec
jnp
mov
inc
xchg
dec
xchg
sub
xor
adc
shl
pop
cmpsb
xor
movsb
inc
mov
push
fdivs
fimull
outsl
or
dec
sub
mov
cmp
sbb
clc
ret
fs
pop
mov
push
push
popa
sbb
mov
shrb
add
fninit
movsb
loope
lock
jmp
and
or
scas
push
imull
adc
mov
xor
jge
aam
cmpl
and
aam
cmpsl
in
mov
jae
inc
pop
ret
add
repz
pop
push
rolb
pusha
shlb
sbb
xor
cmpsl
dec
test
outsb
iret
push
into
in
out
ficoml
mov
pop
adcl
cmp
mov
pop
or
leave
or
outsb
sub
addr16
sub
add
xlat
inc
out
dec
sub
mov
in
in
cmp
pop
out
test
lret
das
shlb
xorb
jne
sbb
fildll
andl
push
stos
fdivs
jne
or
xchg
or
fucomp
xchg
push
outsb
xchg
cmpsb
arpl
hlt
gs
adc
mov
pop
mov
sbb
out
fcomi
mov
cmp
movsl
mov
dec
lea
xchg
cli
outsl
js
push
out
cmp
leave
aas
xor
and
mov
jns
cmp
cmpsb
ja
cmc
dec
icebp
ljmp
lcall
sti
xorl
in
sbb
shrl
inc
loope
xchg
xlat
sbb
xor
out
loopne
testl
js
jge
sti
outsb
add
dec
repnz
jnp
mov
lcall
adc
cmp
insl
xchg
add
push
daa
loopne
sahf
mov
mov
ds
jnp
jbe
popa
cmpl
pop
test
aad
mov
bound
add
add
fsts
adc
or
into
adc
ds
je
inc
push
adc
arpl
aaa
hlt
push
pop
fbld
or
jle
xchg
negb
mov
cmc
cmp
push
andl
test
fstpl
inc
adc
lock
and
int3
cld
and
jbe
push
push
dec
xor
ljmp
sbb
in
jne
mov
xchg
mov
in
adc
lret
call
adc
or
sub
call
pop
xchg
mov
push
shr
adc
dec
inc
mov
mov
fimull
or
jne
ret
call
fmul
cmpsb
cmp
rclb
pop
iret
imul
mov
push
mov
xchg
jge
inc
pop
or
stos
mov
jmp
jae
push
sbb
mov
in
nop
leave
inc
inc
pushf
and
ljmp
call
out
call
fdivrl
jecxz
fldcw
scas
push
test
popa
fidivrs
loopne
int3
das
pusha
cmp
cli
aas
jo
or
pop
jns
xchg
cltd
not
adc
push
jge
outsl
int
add
mov
sub
sbb
dec
loop
cwtl
xor
std
loope
jge
popf
sbb
stos
sahf
xchg
sub
mov
jb
add
mov
outsb
imul
pop
das
mov
das
add
or
mov
cmpsl
jle
xchg
jmp
outsb
mov
iret
xor
fildl
push
adc
rcll
dec
and
xor
outsb
push
lret
movsl
pop
push
out
xchg
jl
cmpsb
mov
add
mov
xor
retw
mov
sbb
test
and
dec
cmp
mov
jae
adc
jns
frstor
sbb
pop
jb
pop
inc
xor
jp
or
loopne
inc
mov
loopne
loop
push
xchg
popf
jmp
inc
inc
lock
jne
add
xchg
hlt
dec
cli
int3
addr16
sbb
andb
fdiv
mov
jg
pop
cmp
stc
mov
roll
fiaddl
or
pop
ret
int3
or
jg
push
orl
outsb
jo
insb
ret
adc
dec
or
aam
mov
aaa
sub
and
inc
pop
cmpsb
sbb
or
sarb
shlb
test
aaa
cwtl
arpl
sbb
cmc
jmp
cmp
ja
mov
in
push
mov
jbe
xor
rcrl
pop
sbb
aas
dec
jo
or
int3
in
mov
imul
push
frstor
jbe
out
dec
sub
mov
pushf
lods
mov
mov
cltd
or
inc
mov
rorb
cmp
enter
shrb
mov
add
inc
xor
adc
mov
mov
mov
jecxz
stos
mov
mov
push
push
lods
and
adcb
addb
pop
mov
les
mov
mov
mov
rcrl
inc
shll
jmp
add
mov
ss
nop
jmp
mov
mov
cmp
push
add
fmull
dec
loop
or
leave
pop
lea
sarb
jle
mov
push
imul
jg
jae
into
mov
jnp
or
xor
iret
inc
aaa
nop
das
dec
enter
adc
nop
movsb
dec
jmp
add
add
popf
adc
icebp
imul
inc
movsb
lcall
setnp
sti
loop
xchg
in
mov
xor
add
mov
push
arpl
sbb
out
xchg
mov
ss
lret
mov
jmp
mov
movsl
add
lock
int
or
dec
pop
dec
jb
js
push
int3
outsb
xor
popa
inc
cmp
mov
lret
push
rorl
push
shll
loop
add
stos
in
loop
stc
int3
sbb
jle
push
cmp
imul
cmpsb
adc
cmpsb
inc
sub
adc
inc
mov
cmpsl
jle
js
cli
incb
push
xchg
mov
adc
adc
inc
inc
sti
pushf
cmp
popl
dec
es
or
and
int
dec
sub
shll
stos
roll
into
lret
sub
inc
fcomps
pop
out
outsb
dec
lods
lret
pop
subl
scas
mov
fwait
nop
cltd
lock
int
cmpsb
mov
mov
popfw
pop
movsl
lea
add
mov
aad
mov
jp
loope
push
push
xchg
mov
mov
lret
lret
xor
mov
and
jmp
pop
sbb
add
jns
scas
xchg
mov
xor
stc
sbb
add
xor
push
lcall
ror
sub
sub
fwait
and
adc
iret
mov
xchg
ss
jg
sub
mov
and
lock
add
inc
xor
loope
pop
inc
mov
mov
test
call
cltd
ja
cwtl
jnp
adc
gs
push
jbe
jp
mov
mov
push
in
mov
add
fmuls
push
add
imul
loop
fstpt
mov
dec
mov
mov
faddp
scas
inc
sbb
leave
cli
test
dec
out
je
ja
mov
xor
out
stos
xchg
movntq
inc
nop
fmull
in
jle
pop
insl
loope
sub
ljmp
in
scas
push
es
out
mov
cld
adc
icebp
pop
test
sbb
inc
fldt
jmp
or
mov
adc
mov
xor
not
cmpsl
dec
xlat
mov
jae
test
pop
cmp
enter
mov
xchg
sub
mov
test
push
mov
mov
aaa
push
stos
out
test
sub
es
jns
jne
mov
jge,pn
lret
mov
jg
pop
push
je
or
xor
dec
or
test
ds
scas
cmp
mov
dec
push
std
jle
push
push
fdivrl
call
sbb
inc
in
cli
xchg
add
inc
jmp
nop
add
mov
adc
test
mov
addr16
xchg
enter
fstps
cmp
scas
popf
sub
xchg
sbbl
mov
mov
xor
and
orl
jle
bound
cwtl
and
outsl
pop
inc
or
xlat
outsl
lds
rorb
fmuls
mov
enter
add
xchg
filds
aad
sub
sahf
sub
test
and
inc
fidivl
cmp
shrb
dec
pop
and
jge
int
jb
aaa
push
lahf
push
sbb
xlat
sbb
repz
js
push
cmp
movsl
pop
adc
xor
or
xor
or
enter
cli
cmpsb
std
mov
lods
dec
jmp
ret
inc
mov
mov
fxch
out
xchg
sbb
rcrb
fcmovnbe
lret
and
jle
push
lret
aad
repz
stos
or
push
add
sub
jecxz
imul
pop
arpl
xchg
filds
leave
sbb
xchg
mov
add
fcompl
inc
ljmp
mov
das
xor
lahf
lods
sub
and
int3
sbb
mov
inc
jmp
mov
jle
movsb
or
mov
inc
or
cmp
aas
sub
fisubrs
mov
mull
lock
and
popf
call
and
or
out
mov
test
pop
cli
cwtl
lea
adc
andb
call
call
in
aam
into
sti
mov
lret
add
cmpsb
xchg
sar
icebp
jno
xor
sub
outsl
ds
insb
xor
xchg
mov
std
xor
leave
sti
stos
xchg
xchg
jp
test
adc
mov
cmp
xchg
out
lcall
jg
fdivl
xor
imul
loop
int
mov
dec
mov
inc
mov
andl
push
jmp
sub
popa
dec
movsl
fstps
aad
outsb
lods
mov
loop
push
icebp
int
xchg
dec
sbb
test
das
hlt
xor
mov
dec
jmp
es
sbb
jb
jle
arpl
arpl
dec
cmc
sbb
xchg
cmpb
adc
add
or
in
add
mov
fistps
mov
out
or
inc
jg
mov
pop
jbe
es
or
cld
jo
in
cmp
and
enter
rcrl
bound
jge
scas
fs
ret
hlt
or
in
movsl
pop
cmp
outsb
shlb
sbb
fildll
sbb
xchg
sub
loopne
inc
lods
or
pop
daa
int3
xor
sub
shr
sub
cld
pop
test
jle
mov
xlat
out
and
add
cmp
xchg
or
sbb
xchg
das
cli
dec
loope
inc
or
int
jno
sbb
clc
sub
xor
test
cltd
mov
nop
ret
jl
lret
xorb
scas
ret
nop
sub
ss
push
lock
mov
sbb
push
test
lss
mov
cmp
ret
daa
outsl
lods
mov
xor
push
mov
bound
pop
jp
mov
jl
outsl
sahf
push
fsub
mov
insl
adc
sahf
das
mov
mov
or
pop
or
xchg
sar
movsl
pop
ret
leave
xchg
dec
loop
pop
cmp
and
mov
addr16
cmpb
mov
xor
mov
loop
jno
sbb
or
mov
testb
loop
lahf
adc
adc
movsl
sarb
lods
xlat
dec
lods
aas
out
stos
enter
shrb
shlb
sub
xchg
jge
adc
fcoms
push
xor
lea
sbb
ret
push
cmc
mov
ja
aas
sub
sbb
or
pop
mov
movsl
and
sub
and
sahf
test
ja
mov
fsubs
cs
sbb
and
ret
fs
push
cmp
fwait
mov
or
pop
xchg
inc
sbb
and
pop
xchg
and
sbb
mov
aad
fisubl
mov
pushf
rorb
cwtl
loopne
ds
pusha
aad
mov
cmpsl
adc
inc
loopne
push
repnz
push
sbb
imul
xchg
xchg
out
dec
dec
aas
push
bound
push
and
xchg
sbb
call
enter
iret
cmp
and
sub
cmp
loop
inc
fimuls
mov
leave
shl
mov
sub
clc
mov
xorl
sub
sahf
pop
jne
std
fmul
mov
movsl
push
lods
fidivs
mov
mov
cmpsl
icebp
jns
or
pop
loop
rcll
clc
or
add
enter
xchg
jecxz
dec
push
frstor
nop
jmp
mov
or
push
cmpsb
stos
sbb
jne
inc
pushf
cmp
cmp
cld
mov
popw
pop
cmc
cmpsl
xor
pop
repnz
xor
dec
gs
jmp
jo
add
fwait
dec
repz
sub
jmp
push
jne
popa
cmpsb
cmp
adc
and
inc
mov
out
lret
add
outsb
decb
int
adcl
fcomps
and
jp
imul
pop
and
cmpsb
jmp
iret
mov
mov
fisttpl
xor
mull
cmc
add
pushl
pushf
mov
shr
test
aam
out
jae
jge
sub
cld
or
adc
test
cmp
adc
mov
out
ljmp
inc
outsb
jecxz
mov
shll
sti
repnz
loope
aas
and
push
testl
movsl
pop
push
push
mov
adc
cwtl
movsb
cmp
mov
cltd
sbb
cwtl
push
sbb
std
mov
jle
sahf
xor
xor
out
sub
add
and
mov
enter
adc
insl
jns
mov
inc
push
xchg
pop
or
mov
fisubrl
jnp
repz
add
movsb
in
pusha
arpl
les
imul
mov
addl
clc
cwtl
cwtl
cmpsl
addr16
inc
mov
out
aad
sbbl
cmp
adc
cmp
xor
nop
insb
pop
loopne
outsb
leave
test
inc
movsl
outsl
dec
adc
outsb
inc
mov
jecxz
aaa
cmp
lahf
add
int3
outsl
out
jno
cli
test
fstp
subb
pop
adc
imul
stos
xchg
vshufps
xor
out
dec
xor
mov
xchg
fnstcw
cld
pop
mov
arpl
nop
je
mov
push
sub
add
out
and
pop
stos
or
int
sti
pop
xor
popf
loope
mov
insb
in
out
xchg
mov
hlt
dec
inc
lret
and
or
and
jb
adc
add
cmc
roll
add
inc
jle
and
nop
or
test
mov
dec
adc
out
ljmp
mov
popa
sub
sbb
lret
xor
lcall
dec
lock
dec
add
push
lcall
lods
xor
fnsave
or
pusha
and
js
add
imul
xor
sbb
mov
loop
sahf
dec
ror
ror
xor
les
pop
mov
ret
pop
ljmp
sbb
inc
iret
cs
mov
lret
xor
rcr
mov
in
xchg
and
inc
fnsave
out
mov
and
sahf
roll
or
adc
xchg
lock
xor
sub
nop
mov
out
push
fldl
jecxz
out
add
cmp
push
or
movups
les
fdivrl
call
xor
pushf
in
jo
sbb
xlat
lret
inc
cmp
pop
dec
insb
mov
fsubs
outsl
rol
iret
add
mov
pop
sbb
loope
pop
cmpsb
fcomi
fstl
mov
sub
subl
mov
xchg
cltd
es
decl
pop
out
mov
inc
sbb
push
es
jge
and
dec
add
je
in
jecxz
cmp
mov
cwtl
pop
pop
pop
lcall
faddp
js
lahf
imul
loope
std
mov
push
fdiv
mov
cltd
mov
xor
sub
test
call
imul
mov
in
or
dec
xchg
or
cltd
push
rcr
push
lret
in
test
mov
add
leave
add
jmp
mov
adc
cld
or
lods
and
sub
fdivl
jg
xor
mov
rcrb
js
sub
dec
gs
sqrtps
dec
and
in
sub
in
cltd
add
call
dec
lahf
add
fwait
add
xor
in
and
pop
xchg
dec
add
test
jbe
add
dec
movsl
popa
loope
out
dec
cmpsl
xchg
lods
mov
pop
cwtl
sarb
orb
rcr
cwtl
xchg
andb
cmp
xchg
stos
decl
cltd
sub
mov
pushf
xchg
mov
sub
push
jecxz
add
dec
mov
jno
clc
out
mov
sbb
mov
sbb
jge
jne
int
mov
cli
imul
cmpsb
push
mov
cmpsl
mov
mov
shrb
aad
jbe
pop
dec
rorl
mov
ss
mov
sahf
fsubp
mov
xchg
leave
outsl
push
popf
or
add
push
xchg
jmp
lcall
int3
and
aas
dec
cltd
outsb
aaa
ret
les
push
or
jge
stos
ljmp
dec
adc
fwait
push
lcall
shlb
lds
stc
stc
xchg
idivb
adc
aaa
xor
mov
mov
adc
cmp
or
enter
leave
ret
add
sarl
mov
negb
ret
femms
adc
outsb
fsub
mov
dec
inc
and
out
jg
cmp
jp
repnz
xchg
dec
es
test
jge
and
jmp
mov
pop
outsb
insl
test
cld
mov
mul
fdivrs
movsl
adcb
xchg
ret
xlat
and
cmp
xchg
subb
inc
mov
xchg
dec
int3
jecxz
and
pop
dec
and
insb
shrl
jno
gs
jnp
ss
or
call
psraw
lock
pop
mov
lock
xor
sub
and
mov
pop
stos
dec
xchg
and
std
mov
sub
outsl
call
mov
out
out
cmp
inc
adc
sub
lcall
xor
add
xchg
jg
push
adc
inc
cltd
out
jo
jne
jmp
jmp
pop
or
sti
sti
cmp
fistps
add
push
and
shrl
push
dec
inc
dec
int3
or
mov
lcall
loop
lods
pop
push
cmp
movsb
std
jb
lret
push
loopne
movsb
and
clc
lock
lods
shll
ss
jg
add
std
mov
daa
mov
cwtl
hlt
sbb
fistl
xchg
push
jle
xlat
sarl
aaa
ret
cmpsl
call
iret
test
addr16
sub
clc
cmc
rcll
xor
dec
mov
lret
add
fisubs
cmp
or
aas
fdivrp
aam
add
pop
loope
insb
lcall
iret
dec
fs
pop
sbb
cltd
jmp
divl
repz
or
sub
sbbl
ss
mov
popf
mov
ja
and
mov
aas
sbb
mov
xchg
adc
mov
inc
xor
cmp
push
pop
pop
data16
xchg
mov
hlt
repnz
cmp
data16
push
ficoml
sub
pop
aad
in
cmpsl
adc
in
or
sbbl
decb
fwait
inc
add
cmp
lock
dec
xchg
cmp
jge
popf
imul
dec
cmp
stc
lods
fistpl
out
imul
dec
out
popa
or
daa
shll
ja
test
pop
sbb
pop
sbb
jb
lret
xor
adc
fucomip
mov
jns
cmp
loop
inc
loop
lea
pop
dec
or
in
dec
xchg
sbb
sbb
mov
scas
jno
fwait
es
xchg
cltd
sti
inc
lcall
cltd
mov
cmp
cmp
pop
xchg
adc
in
sbb
dec
or
jbe
push
xchg
sub
mov
out
jns
loop
popa
and
movsl
sbb
xchg
sub
ret
std
es
imul
sbb
inc
aad
mov
fsub
adc
hlt
sub
aam
cld
cmp
das
mov
fwait
push
lahf
xchg
ljmp
mov
js
mov
sub
xchg
jecxz
cmp
leave
mov
push
scas
jecxz
jl
jmp
pop
js
lahf
cmc
push
push
fs
stos
jmp
mov
push
popa
movsl
gs
stos
je
jb
jl
fiadds
mov
out
and
push
rol
sbb
fs
add
sbb
mov
lds
cltd
std
cmp
sub
div
jae
stos
or
xchg
mov
js
xchg
and
push
jne
push
aad
test
cmp
inc
fwait
cmpsl
dec
test
cmpsb
cmp
adc
push
mov
mov
sbb
inc
mov
push
push
mov
xor
mov
jg
push
in
push
out
xor
mov
push
mov
ljmp
jnp,pn
pop
xchg
mov
test
and
cmp
push
rep
clc
dec
repnz
cs
adc
daa
mov
syscall
cmc
lock
and
xor
daa
ljmp
sub
mov
mov
adc
sbb
sbb
arpl
pop
fwait
sub
imul
add
enter
mov
pop
sub
cmp
pusha
push
xchg
pop
out
out
in
pop
or
loop
insb
xor
arpl
fmull
pop
pushf
or
sbb
and
addr16
pop
cwtl
adc
pushf
mov
mov
cwtl
push
xchg
inc
shll
cmpsb
cli
fcoms
enter
inc
mov
loope
fcmovnb
xlat
ljmp
mov
test
jl
mov
jno
ror
push
popl
mov
pop
stos
push
cmpsb
es
xor
inc
inc
or
lahf
xchg
or
mov
insb
dec
adc
ds
pop
lods
xor
xchg
dec
nop
inc
lahf
add
xor
xlat
aad
std
jnp
sub
out
fdivp
sti
pop
pop
jb
sub
ss
inc
adc
imul
dec
cmpb
notb
pop
arpl
call
mov
xor
cwtl
or
ffreep
sub
hlt
addl
and
loope
int3
adc
dec
sub
or
mov
mov
fld
pop
das
scas
fdivl
sar
popf
mov
mov
imul
add
std
adc
in
mov
xor
push
xchg
je
test
iret
mov
xorl
aam
xor
vmovq
pop
dec
mov
xchg
lds
jae
dec
loope
punpckhdq
lea
test
push
push
in
jl
daa
fwait
push
int3
inc
lds
adcb
test
js
sbb
jae
and
push
jne
repz
in
cmpsl
scas
mov
js
jl
push
sub
sbb
into
adc
add
push
js
outsl
push
sbb
jg
into
mov
clc
add
in
ficompl
pop
mov
aaa
enter
dec
hlt
xor
fwait
xchg
fiadds
mov
dec
cmp
aad
cmp
lret
test
xchg
sarl
imul
pop
xchg
sbb
mov
mov
mov
dec
mov
lods
mov
pop
pop
stc
mov
adc
aaa
cltd
xorl
dec
jnp
ret
insb
or
sub
jns
lcall
cld
add
push
in
push
xlat
ljmp
inc
sub
inc
push
sbb
mov
cmpsl
fdivl
ret
add
test
inc
jmp
idiv
cli
mov
sbb
cmp
fimuls
lods
test
aas
fsubrl
sahf
outsb
fwait
sbb
imul
test
mov
in
or
rolb
andb
mov
sub
subl
out
or
jmp
push
mov
pop
sbb
aaa
jg
pop
pop
mov
call
pop
cli
divl
push
into
faddl
or
shr
out
jmp
sbb
xor
pop
fidivrl
popa
shrl
fildl
pop
and
outsl
sub
sbb
jge
call
adc
jmp
mov
or
sbb
add
cmp
xchg
dec
xchg
ss
mov
inc
lock
cmpsl
push
xchg
or
sahf
adc
cmc
mov
dec
scas
add
sbb
fs
cli
loop
mov
pop
sarl
add
lods
aam
or
mov
or
or
mov
sti
mov
lret
test
gs
fs
shrb
jne
sbb
pop
sbb
xchg
jne
gs
push
fadds
lahf
gs
sub
cmp
mov
mov
or
dec
ja
ds
subb
dec
int3
xorb
dec
stos
mov
cmc
test
push
cmp
dec
into
movsb
lahf
imul
inc
inc
dec
xchg
xchg
xorl
sete
sbb
pop
popf
sahf
clc
xorb
lahf
imul
and
mov
hlt
xchg
lods
xor
imul
push
ss
and
aas
outsl
das
pop
or
dec
dec
pop
out
in
pop
ja
pop
xlat
push
sahf
or
loop
mov
dec
add
xchg
outsb
ret
add
lods
mov
out
lds
xor
fidivl
stos
lock
andl
leave
lcall
jle
xor
cmc
jns
fdivp
xchg
fnstsw
imulb
cmp
xchg
inc
fs
mov
loop
ds
nop
sbb
enter
sahf
xlat
and
ret
into
add
imul
mov
push
push
xor
popa
mov
push
mov
ss
mov
xor
dec
jmp
lea
repz
adc
cmpsb
in
and
mov
gs
fidivl
xor
sti
sbb
out
sub
repnz
add
hlt
and
push
rol
xor
mov
or
and
inc
jbe
mov
inc
dec
jnp
lret
in
shrb
sub
mov
xchg
push
or
in
dec
pop
stos
adc
adc
lock
sub
pop
shr
inc
push
or
mov
sahf
jle
js
or
popa
xchg
dec
sub
jo
and
inc
out
add
stos
xlat
aam
mov
rcr
bound
outsl
mov
xor
das
mov
lret
daa
jae
push
pop
dec
inc
add
cmp
jecxz
fucom
sub
popf
dec
add
arpl
inc
jg,pn
lods
mov
mov
push
push
sbb
rcr
jo
cmp
add
xchg
push
sbb
push
xor
mov
adc
xlat
jne
jnp
sub
shlb
pop
out
out
cli
rorb
ret
mov
jecxz
loop
sub
fidivrl
lcall
sub
dec
adc
imul
pusha
dec
jb
enter
dec
and
scas
shlb
mov
incb
xchg
mov
or
outsl
sbbb
into
das
cwtl
xchg
xor
jnp
xchg
sbb
push
mov
jle
push
insb
mov
dec
jle
out
jecxz
jg
xor
mov
pop
sub
xor
adc
mov
xchg
mov
cmpsb
and
sub
dec
mov
inc
mov
xchg
divl
aaa
test
in
aas
mov
xchg
cmp
push
sbb
shrb
rolb
jns
cmp
data16
cli
adcl
adc
add
inc
les
jecxz
rorl
dec
cwtl
and
das
lret
stos
scas
or
in
lret
scas
pop
aad
sbb
xlat
inc
mov
int3
gs
lea
negb
push
mov
xchg
and
adc
into
lds
mov
add
pop
jmp
subb
push
mov
or
cmp
add
ljmp
mov
mov
rorb
sti
jge
ds
jg
jnp
mov
es
mov
aaa
outsb
add
mov
push
push
leave
rcrl
push
inc
and
mov
push
dec
inc
cmpxchg
add
mov
js
sbb
mov
pop
mov
inc
mov
or
push
mov
divl
inc
push
movl
jae
mov
mov
mov
and
add
sub
push
jnp
int
cmpsb
add
jae
sbb
int3
jg
push
jb
xor
add
loope
cmp
ret
repnz
fs
pop
add
mov
test
mov
lret
jns
or
adc
pop
sub
rolb
adc
jns
mov
push
daa
xor
jnp
lret
into
jno
xlat
pop
clc
loopne
push
xchg
fdiv
outsl
mov
or
enter
repnz
ljmp
xchg
xchg
sti
in
push
daa
cmp
jno
jl
adc
and
in
inc
repnz
sub
cwtl
xor
es
fdivrp
insl
mov
pop
sub
xchg
pop
sub
or
in
dec
sub
sbb
jns
pop
and
inc
or
jecxz
xchg
cmpsl
add
push
ja
movsb
pop
push
sbb
xchg
lods
xor
es
mov
popf
pop
jno
adc
enter
enter
loop
sbb
mov
popf
mov
test
cltd
xchg
xchg
in
out
dec
dec
addr16
inc
out
inc
fstl
dec
xchg
sbb
out
jp
mov
sarl
out
stos
and
data16
lcall
inc
jge
sbb
jge
mov
je
sahf
sbb
repnz
rclb
xchg
mov
xor
inc
jnp
dec
mov
lods
rorl
fstl
std
xor
push
popf
roll
cmp
cli
cmpb
pop
fsub
test
sbb
cmpsl
jge
jbe
sbbb
std
mov
adc
insl
mov
mov
stos
mov
icebp
xchg
push
mov
dec
sahf
sub
mov
stos
scas
add
xor
push
and
sbb
mov
shl
or
movsl
dec
repz
sub
push
or
out
xchg
outsb
fistl
adc
das
inc
inc
sub
ljmp
jp
jb
jl
imul
rcrl
mov
cmp
ror
adc
bound
insl
in
jle
xor
fwait
sar
loop
jns
sbb
jno
leave
lods
jbe
jg
shlb
movsl
cmp
pop
xor
add
aas
jp
pop
aas
inc
negl
sub
in
icebp
lahf
xor
xor
fistps
int
fstpt
leave
push
icebp
or
sbb
push
sbb
adc
je
ficoms
or
aaa
stos
jp
inc
pop
outsb
mov
cli
sbb
mov
xor
stc
stc
andl
aaa
inc
lret
lods
pcmpgtb
enter
pop
push
dec
lods
jmp
cs
into
movsl
std
cmpsb
mov
imul
and
mov
push
mov
xchg
or
dec
repz
sub
jne
mov
and
push
or
cld
clc
ljmp
cld
jae
mov
mov
xchg
jmp
push
bound
sbb
lds
adc
xchg
sub
and
sbb
adc
cltd
jb
xchg
push
adc
dec
out
xchg
or
stos
stc
outsl
mov
jp
inc
ftst
or
aad
push
call
mov
or
jg
movsb
inc
cmpsl
sub
xchg
add
dec
test
add
test
dec
fucom
les
aad
rclb
into
call
or
sbb
aas
rol
inc
inc
mov
mov
and
inc
fdivr
imul
enter
sub
aas
cmpsl
cmpsl
or
iret
cwtl
out
dec
movsl
xchg
mov
das
dec
jae
cmc
mov
xchg
out
in
push
dec
clc
sub
or
daa
scas
cltd
add
push
mov
out
xor
and
xchg
xchg
in
ja
mov
jbe
repz
add
pop
rorl
add
int3
inc
push
jb
cld
push
lret
gs
xor
faddl
cmp
stos
aad
mov
sub
xchg
pop
aam
pop
cmp
add
pop
aas
mov
fisubl
mov
cltd
adc
xor
fchs
add
movsb
pushf
test
rcl
repnz
enter
je
pop
cmpsb
ficomps
popf
out
xchg
inc
jae
sti
xor
call
mov
jmp
and
sbb
pop
decl
push
sahf
lods
addr16
scas
cmp
cmp
pop
dec
test
inc
mov
rcrb
dec
mov
out
es
out
pop
pop
dec
pop
push
jne
repnz
xchg
scas
push
pusha
add
pusha
ds
in
mov
xchg
pop
adc
and
ret
inc
das
lods
mov
mov
jge
das
jb
cmp
dec
sbb
jg
pop
sub
add
dec
aaa
hlt
test
or
mov
es
push
or
inc
std
dec
pop
mov
out
xchg
aad
cli
int3
pushf
lret
push
in
cmc
jbe
mov
popa
pop
out
cmpsb
cmp
jns
loop
subl
adc
int3
jne
pop
js
lods
aas
jmp
and
lret
and
cmp
jns
dec
out
lds
and
jne
mov
nop
enter
dec
js
aad
lcall
mov
sub
and
inc
shlb
iret
xchg
or
mov
inc
jecxz
cli
and
and
in
cltd
fisubrs
out
pop
jmp
jmp
jp
sub
mov
mov
sub
sub
dec
push
test
js
sub
leave
xor
inc
sarb
mov
and
xor
idivb
pop
push
jle
popa
push
cmpsl
jl
jmp
push
out
mov
std
imul
mov
pushw
and
push
dec
pop
push
ds
cmp
rcr
movsl
push
mov
pop
sub
popf
test
pop
andl
add
mov
test
cmp
cli
movsl
and
xchg
lahf
inc
rcrl
jmp
cld
jmp
xchg
je
insl
mov
dec
push
push
fwait
pop
daa
pop
cmpsl
out
jno
or
sub
jmp
ljmp
mov
outsl
gs
jno
and
rorb
add
add
adc
out
cld
emms
adc
out
in
cmpsb
push
cwtl
decl
pop
pop
daa
jae
xor
je
enter
pop
iret
mov
or
push
pusha
loop
adc
pop
aaa
jecxz
rorl
adc
aam
movsb
xchg
paddd
loop
punpcklbw
adc
inc
sti
in
push
orb
dec
pop
lcall
test
pop
popf
xchg
std
ret
inc
sahf
into
lods
imul
or
push
sbb
pop
inc
iret
js
xchg
sbb
or
push
bound
iret
dec
xor
aaa
pop
cmp
sbb
or
add
mov
je
decl
mov
int
adc
adc
inc
in
mov
cmp
imul
daa
xchg
cmc
mov
insb
loop
popa
jo
mov
cwtl
fidivs
push
cmp
and
jnp
or
mov
push
stos
pop
pop
int
sbb
sbbb
push
or
dec
pop
mov
stc
pop
and
jns
xchg
dec
xor
or
or
mov
stos
fstps
dec
jg
imul
and
movsb
aad
xor
mov
nop
dec
push
ds
std
xchg
fdivr
xor
adc
jl
js
mov
and
xchg
cmp
mov
mov
dec
loope
sub
jl
cmc
xchg
mov
pusha
cwtl
addl
mov
or
clc
int3
pop
mov
jg
jle
lcall
cli
fistps
cmp
push
cmp
lahf
fwait
sub
call
js
cmpsl
xchg
rcll
xchg
cwtl
or
mov
incb
cli
dec
jle
cmp
fcomps
aad
adc
push
ss
xlat
fnsave
or
stc
jecxz
cmp
nop
push
cmpsb
dec
cli
push
add
jl
in
faddl
imull
arpl
lods
lods
subb
popf
xor
loope
das
jl
ficoml
cmp
jbe
inc
xchg
jbe
mov
jl
dec
mov
mov
fisubrl
shlb
data16
jb
imul
ja
mov
call
ljmp
add
mov
lock
out
adc
in
jecxz
stc
xchg
scas
mov
mov
js
in
aaa
lret
sarb
sbb
sbb
rorl
sti
sub
sub
cmc
enter
test
lcall
pop
imul
arpl
and
inc
mov
bound
pusha
mov
popf
aas
es
mov
mov
or
ja
inc
mov
stos
aaa
lcall
das
mov
call
pop
inc
push
pop
adc
push
inc
mov
fs
mov
dec
lcall
rolb
fucomi
mov
std
stos
int3
xchg
scas
xchg
cwtl
jns
pop
cmpsb
fldenv
es
insl
push
aaa
xor
inc
jp
lds
push
test
mov
roll
xor
mov
aad
test
mov
push
inc
iret
pop
andl
icebp
outsb
cli
sub
pop
or
test
faddl
cwtl
pop
add
clc
bound
aam
or
and
das
fs
out
and
xor
test
imul
das
cltd
cmpsl
cmp
pop
cmp
pop
es
xchg
xor
insl
sub
arpl
mov
push
xor
jmp
outsb
sub
cs
adc
mov
aaa
sbb
dec
pusha
mov
mov
rol
mov
xor
int
pop
or
sub
adc
cli
ss
cmp
outsl
xor
pop
xchg
iret
icebp
orl
jo
pop
xor
pushf
fisubrs
cltd
mov
popf
or
pop
jmp
dec
cli
push
subl
jecxz
cmpsl
gs
push
insl
lret
pop
add
mov
out
sub
setbe
xor
xchg
pop
negb
jle
pop
sub
lock
mov
jl
imul
sub
movsl
imul
or
or
movsb
sub
push
jmp
or
jae
insl
scas
incb
negb
lahf
cmp
cwtl
scas
cmp
cltd
std
push
sarb
sbb
test
das
in
pushf
dec
sbbl
inc
xor
pop
inc
sub
sti
pop
fisttpl
test
int
out
mov
pop
sub
xchg
adc
test
arpl
popa
aas
stos
mov
mov
or
add
mov
mov
ret
stc
add
mov
xchg
mov
mov
movsl
cmp
cltd
push
inc
xchg
out
push
lods
inc
or
scas
fistpl
inc
sbb
iret
or
inc
adc
lds
jge
lahf
xchg
xor
xchg
fbld
roll
lock
inc
lea
lret
lods
jmp
loop
inc
push
out
pop
icebp
push
cmpsl
inc
add
dec
scas
xchg
cld
cmp
scas
add
inc
daa
mov
insl
mov
in
pop
jbe
iret
iret
addb
push
sbb
sahf
push
inc
pop
test
das
dec
rorb
sbb
push
adc
inc
pushf
xchg
mov
loope
aaa
imul
adc
idivl
adc
mov
ljmp
cli
or
nop
inc
repz
inc
xor
scas
inc
xor
nop
call
in
adc
mov
dec
scas
aas
sbb
sbb
ficoms
jge
ja
mov
inc
sub
data16
out
cmp
or
inc
outsb
pop
sbb
int
mov
push
loop,pt
jecxz
imul
lods
cmpsl
rcl
in
cmc
sbb
pop
sbb
scas
push
lret
adc
pushf
imul
pop
pushw
dec
iret
sub
mov
out
enter
cmp
add
popf
stos
push
or
jle
in
test
mov
out
pop
js
in
push
testb
push
adc
sbb
sbb
jl
sub
movsl
in
sbb
and
jg
xor
adcb
lret
xchg
and
leave
mov
cld
jns
inc
dec
stos
insb
lret
jae
xor
test
jge
ljmp
xchg
fisubs
fistl
call
inc
mov
leave
out
insl
mov
in
fdivr
insl
pop
lret
popf
pavgw
stos
mov
popf
jnp
xor
mov
lret
dec
sub
pop
pop
aam
mov
out
pushf
popa
stos
je
je
mov
xchg
js
in
sahf
push
cltd
pop
add
popf
ffreep
lret
iret
leave
mov
les
xchg
jns
and
jmp
ficoml
cmpsb
jbe
push
push
jge,pn
mov
loope
into
mov
add
push
andb
cwtl
inc
jg
fwait
xor
mov
roll
xor
gs
out
shl
and
out
out
and
lds
push
fstp
dec
insl
dec
mov
or
mov
pusha
idivb
ret
inc
ss
fwait
scas
and
stos
or
in
or
lret
std
jl
push
scas
mov
lretw
adc
in
cmp
lds
sub
adc
push
mov
and
or
test
mov
ja
testl
shll
or
scas
sub
and
adc
lret
mov
mov
adc
pop
sub
adc
sbb
mov
mov
push
stos
faddl
imul
lcall
out
je
mov
push
popa
dec
xchg
push
mov
push
int
test
mov
push
out
mov
pop
fists
sbb
cmp
mov
pop
cmp
addr16
or
pushf
push
xor
cmp
addr16
or
test
sbb
imul
cmp
push
mov
push
dec
sahf
xchg
test
out
mov
inc
mov
sbb
inc
icebp
pop
or
iret
xor
je
fsubs
sbb
mov
dec
movsb
insl
jns
xchg
jno
xchg
inc
sbb
jmp
xor
arpl
and
shrl
jecxz
push
adc
push
push
xchg
add
sub
mov
arpl
pushf
or
mov
mov
add
add
push
ficoms
fisubs
xor
cmp
ret
ja
mov
add
int3
aad
adc
and
adc
dec
mov
rclb
xor
ja
push
jae
xor
inc
mov
mov
adcl
cli
jnp
insl
outsl
roll
push
test
orb
into
sbb
mov
pop
adc
int
or
inc
xlat
lds
lea
mov
aaa
pop
out
stos
pop
jbe
sub
in
addl
mov
xchg
icebp
into
adc
jmp
insl
xchg
dec
jnp
subl
pop
or
sub
mov
cld
cld
xchg
jns
lret
andb
sbb
mov
rol
or
push
xchg
mov
or
sbb
icebp
fs
jp
xchg
lds
mul
ds
subl
stos
test
sub
xor
shlb
cmpsb
mov
pop
rorb
mov
dec
int3
inc
dec
mov
movsb
adc
movsl
aaa
push
in
leave
push
dec
push
loopne
sbb
lcall
or
hlt
movsl
fiadds
mov
enter
adc
imul
aas
hlt
into
les
inc
lods
dec
adc
push
mov
jbe
enter
mov
xchg
shlb
les
fs
mov
jbe
inc
test
mov
or
mov
cmp
xchg
sbbl
jno
jo
popa
loop
pop
push
push
jecxz
push
mov
rclb
adc
das
mov
add
cs
shrl
pop
mov
cli
ljmp
mov
sti
adc
aaa
das
add
xchg
cmp
jo
sbb
jge
cltd
add
xor
loope
aam
and
insb
loop
or
xchg
xchg
imul
icebp
mov
cld
bnd
pop
sarb
sub
arpl
push
lock
jl
repnz
fcompl
sub
cmp
stc
jne
rcr
imul
dec
stos
jo
push
cmp
outsb
inc
in
jo
out
sbb
pop
or
add
jg
pop
aam
sbb
rcpps
mov
xchg
movsl
cmp
xor
adc
fisttpll
mov
popa
imul
mov
aam
or
mov
divl
mov
and
faddp
leave
pop
pop
push
imul
xor
adc
loop
pop
dec
sbb
mov
adc
rcrl
xchg
pop
sbb
push
mov
push
or
in
and
aaa
es
shlb
inc
shrl
mov
xchg
mov
lcall
xor
push
jp
sub
adc
xor
jg
ss
repz
mov
push
sub
shlb
jne
sbb
repz
push
outsl
pop
mov
sub
mov
es
test
fisubrs
out
rcr
pop
leave
negl
lcall
mov
and
pop
push
negl
std
and
dec
call
pushf
pushf
movsl
into
cltd
cwtl
mov
mov
stc
repz
imul
ds
xchg
fcoml
out
mov
or
jne
mov
xchg
ret
call
sahf
sti
or
loope
test
call
shrb
jle
pop
pop
pusha
int
mov
in
pop
and
aas
fidivrs
xchg
add
cmc
xchg
mov
ficompl
or
dec
popa
sbb
adc
jmp
xchg
xchg
fwait
sbbb
mov
movl
arpl
add
sub
pop
jp
sti
faddp
inc
jb
add
mov
movsl
nop
fisubl
and
rorl
lods
inc
jo
lods
jle
cmp
fmull
subb
loopne
jg
jmp
cli
sbb
out
and
xchg
sbb
fs
imul
leave
xchg
sub
mov
push
aam
and
stc
sbb
inc
jp
fdivs
in
xor
jo
adc
popf
imul
nop
xchg
inc
stos
dec
mov
jmp
decb
dec
push
shr
dec
in
sub
out
cmp
js
push
repz
jbe
movsb
in
popa
je
test
data16
shll
outsl
sbbl
gs
dec
jl
sar
inc
imul
loope
or
popf
movsb
xlat
or
xlat
mov
or
insl
shl
mov
fwait
add
sbb
cli
mov
cltd
cwtl
jmp
movl
out
leave
jle
rcrb
sub
and
mov
jecxz
and
xlat
leave
inc
pop
les
shl
and
mov
arpl
jecxz
popa
popf
xchg
adc
or
and
push
jge
dec
popf
movsb
addl
iret
shll
out
pushf
imul
icebp
mov
lods
test
je
cmp
mov
push
test
out
and
mov
xchg
outsb
and
adc
int
mov
loopne
xor
movsb
mov
clc
mov
scas
outsb
cmp
fisttpl
ret
mov
bound
stos
cmp
xrelease
jecxz
or
cli
mov
sub
out
dec
and
and
std
jl
pusha
adc
cltd
leave
or
push
aad
xor
pop
sbb
repz
sbb
cmp
imull
cmc
movsl
jge
jnp
icebp
gs
and
aaa
das
cs
shrl
movsl
fistpll
xor
dec
jl
mov
mov
ss
add
add
pop
flds
les
ds
stc
pop
repz
xlat
jge
xchg
sti
mov
xor
into
stc
and
push
or
ljmp
mov
shll
ja
mov
filds
cmp
mov
mov
fs
into
push
or
lea
pop
fucomi
or
adc
mov
out
shlb
in
pop
pop
sub
repz
loope
mov
cmp
adc
daa
and
data16
movsb
wbinvd
shlb
imul
mov
sti
inc
mov
push
inc
fwait
es
pop
dec
and
pop
dec
sti
sbb
daa
xor
push
and
fs
mov
dec
xchg
call
adc
push
cmp
push
lret
enter
scas
fsts
sub
cmp
jle
repnz
pop
cmp
sub
outsl
push
fbstp
ja
mov
fildl
int3
loop
fcoms
aad
in
xchg
push
add
in
lcall
and
or
inc
mov
cmp
xchg
js
or
mov
mov
andl
sbb
sti
rcrb
pushl
sti
mov
repz
dec
mull
sbb
mov
dec
push
out
xchg
adc
jle
fdiv
les
test
cld
dec
outsb
mov
xorb
ljmp
mov
leave
xchg
js
in
cmp
bound
sub
inc
or
xchg
leave
test
arpl
add
lea
clc
mov
aam
repnz
jle
repz
cmp
ss
or
int
push
ja
mov
data16
and
ret
lret
adc
jle
pusha
leave
jo
jne
cmc
mov
sub
lcall
sbb
or
sbbl
lock
and
mov
pop
cmpsl
adc
fdivp
cld
jb
xor
enter
adc
stos
test
sbb
mov
jmp
cmpsb
test
mov
jl
lret
dec
ror
push
pop
mov
xchg
xchg
pop
mov
adc
jg
pop
push
inc
fidivs
xchg
fisubrs
sub
aaa
sub
inc
push
popf
dec
xor
scas
stc
mov
enter
or
cmc
sbb
push
aaa
mov
push
aad
shlb
mov
pop
orb
xchg
sbb
rcrl
or
and
jns
inc
cmpsb
and
fisubrs
push
out
ljmp
mov
pop
outsb
add
test
std
stos
cmpsl
scas
dec
fbstp
repz
lea
mov
jg
mov
pop
fiaddl
add
push
mov
xlat
pop
push
test
sbb
lret
or
mov
hlt
fdivrl
mov
mov
jl
mov
imul
sbb
in
dec
jle
repz
pushw
and
ljmp
push
mov
jmp
mov
sahf
pop
pop
daa
ja
imul
adc
jmp
or
mov
popf
inc
and
or
shrb
out
lea
test
aad
lahf
test
xor
xor
add
jge
sbb
stc
sbb
inc
aam
leave
jns
movsb
and
les
or
dec
mov
push
shl
adc
ficoms
les
jp
pop
jl
xor
aad
mov
xchg
fistps
fadd
fsubrl
loopne
mov
add
imul
aaa
testb
adc
push
incl
xor
sub
into
xchg
into
or
in
sbb
sarl
in
mov
xor
xchg
xor
pop
or
add
aaa
adc
fs
addr16
or
cmp
push
fmuls
xchg
stc
aaa
or
sub
iret
mov
pop
mov
cmp
clc
cmp
pop
jno
lcall
lods
aam
subb
dec
mov
stos
lods
pop
xor
orb
lcall
or
mov
jg
enter
xchg
das
int3
daa
jnp
xchg
xchg
dec
sti
or
dec
cmc
into
mov
cld
cld
imul
testb
dec
xlat
push
cs
mov
inc
xor
mov
mov
arpl
adc
rcll
sbb
xor
cs
pushf
cmp
jns
inc
loope
stos
cmpb
mov
xchg
mov
cmp
out
sti
mov
push
xor
sarb
push
out
pop
mov
mov
adc
dec
ds
out
inc
inc
mov
jg
clc
inc
jp
dec
and
insb
fldcw
inc
cli
lret
xchg
js
fimuls
mov
mov
rcll
fadds
rcll
notl
add
cmp
mov
mov
testb
inc
dec
adc
jb
sahf
push
addr16
insb
and
sub
sti
pop
test
mov
in
stc
repnz
lahf
popf
repnz
sub
iret
outsl
or
or
js
popa
mov
pop
jecxz
xchg
cmp
lahf
scas
sub
roll
mov
loopne
shrl
subb
out
jb
and
lods
push
into
xor
cltd
jle
pop
sahf
stos
pop
cli
ds
js
cmp
sub
adc
inc
sbb
xor
fcomps
dec
xchg
cmc
fimuls
shl
adcb
add
pop
and
movb
jb
xchg
iret
in
scas
data16
sbb
sub
fisttpl
cwtl
mov
jle
pop
cld
in
mov
test
mov
fsubl
iret
mov
mov
mov
fsubrs
leave
push
test
shrb
or
mov
std
xor
adc
sub
sbb
sbb
dec
scas
aas
cmp
std
jne
test
test
movsl
adc
pop
icebp
jecxz
xor
insl
sub
cmc
push
pop
loopne
popa
es
sub
xchg
sbb
mov
mov
call
jbe
push
pop
popf
sbb
fcompl
cmp
test
xor
out
or
inc
mov
pop
and
push
ficomps
pop
xor
or
lret
mov
mov
insb
fsubrs
outsl
insb
push
and
jp
lock
fwait
orb
dec
xchg
inc
dec
shl
lds
push
inc
sti
sub
mov
rclb
dec
outsb
push
pop
dec
and
shlb
data16
pop
mov
jb
adc
lods
imul
mov
adc
daa
sarl
pop
test
mov
push
loopne
shl
jo
mov
mov
xchg
cld
jae
mov
ds
fs
or
test
jnp
ret
push
mov
popf
stc
xchg
jecxz
and
outsl
push
outsl
adc
popf
pop
in
lret
daa
daa
ret
mov
push
fistpll
lahf
das
cmp
dec
divb
cmp
roll
pop
cmc
push
cmp
les
and
inc
sti
inc
fisubs
xchg
repz
lock
fwait
xor
insl
lods
subb
jbe
imul
pushf
rorl
mov
add
dec
out
lea
xchg
cmc
dec
fcompl
dec
addr16
inc
cmp
pop
mov
mov
jne
repnz
mov
fisubrl
sbb
fmuls
sbb
repz
movsl
push
xchg
mov
pop
leave
xchg
aad
sub
jno
minps
push
vunpcklps
sub
sub
roll
jmp
loop
cmpsl
cmp
cmpsb
pop
int
fildl
shlb
and
add
aad
lods
xlat
pop
xchg
xor
scas
mov
cli
xchg
inc
xchg
aam
mov
sbb
mov
sti
lret
mov
pop
ss
xchg
adc
test
adc
lods
cmp
mov
cld
in
out
dec
dec
out
xchg
jbe
mov
int3
dec
jmp
inc
cmpsl
push
mov
push
add
call
movsb
sub
mov
mov
jno
shl
faddl
mov
ja
xlat
cmpsl
fmuls
stos
or
sbb
xchg
stos
addr16
stos
pop
push
push
xor
movsb
jecxz
xchg
imul
cmp
adc
lock
mov
push
sarl
pop
sahf
in
jne
pushf
adc
dec
mov
aad
pusha
fwait
adc
dec
adc
fisttpll
fistpll
fwait
xor
pop
jecxz
shl
cmc
popa
mov
lds
out
jnp
enter
dec
add
xchg
push
jb
and
xor
or
adc
push
pop
push
stos
push
mov
push
xchg
ret
into
sub
dec
mov
lcall
test
pop
movsb
mov
inc
out
cs
xchg
mov
les
jp
lock
icebp
xor
or
fwait
xor
and
inc
inc
sbb
pop
mov
insl
cmpb
pop
int3
xchg
loop
fwait
and
add
gs
sahf
nop
test
jp
popf
loop
sbb
out
sbb
adc
les
dec
shrl
test
stos
xchg
pop
or
loop
jg
shrb
mov
sub
xlat
jb
adc
cmpsb
push
push
push
pushf
xor
cmpsl
hlt
loop
in
icebp
insl
dec
push
scas
ret
jp
mov
xor
sub
cmpsl
pop
or
cmp
mov
push
movsl
imulb
out
push
out
inc
jb
add
xor
mov
cmpb
aas
ja
pop
imul
adc
andl
icebp
insl
inc
bnd
inc
pop
and
fcmovne
pop
ljmp
sbb
mov
lock
mov
into
sbb
outsb
sbb
popf
pop
inc
mov
push
fmuls
imul
clc
adc
xchg
cmc
aaa
jbe
jl
ret
shr
repnz
das
jge
cs
call
mov
movsl
mov
jmp
cmpsl
adcb
and
fmuls
pushf
fildl
in
out
fstl
inc
push
arpl
add
mov
or
xor
rol
mov
push
mov
pop
or
sbb
push
xor
lahf
pop
inc
scas
loop
sbb
lods
pop
xchg
inc
inc
aas
jnp
clc
imul
cmp
shl
adc
fldln2
xchg
inc
fcmovbe
imul
inc
pop
lret
ret
in
or
pop
popa
test
mov
or
in
mov
xchg
hlt
lods
inc
fisubl
gs
adc
orb
lods
sub
cld
shlb
or
fnstenv
movsb
inc
and
xchg
push
popa
jo
sub
xchg
insl
outsl
dec
cmp
dec
into
or
bound
lods
add
mov
les
mov
in
mov
or
mov
pop
mov
mov
mov
mov
rcl
inc
sbb
xor
scas
jno
adc
int3
mov
test
daa
pop
inc
addl
and
push
mov
lods
mov
xor
insl
dec
repnz
push
movl
loope
sbb
ret
or
inc
mov
aas
icebp
fcmovnb
cmp
pop
cwtl
shl
mov
sti
fidivl
and
and
inc
sbb
sarb
andl
movsb
andb
data16
ss
stos
dec
int3
test
xchg
and
je
pop
out
mov
gs
popa
pop
and
push
loop
jbe
and
xchg
or
and
lds
cmp
inc
and
out
movsb
not
filds
inc
mov
cmp
rcrb
mov
jbe
out
bound
in
cmp
outsl
mov
ljmp
fistl
gs
outsb
mov
cmp
mov
sar
gs
dec
and
mov
cmp
jne
hlt
das
pop
call
mov
xor
cld
mov
cmp
leave
stos
jge
push
xor
sbb
fnstenv
mov
mov
xchg
fistl
jo
sbbl
cs
mov
or
dec
sub
add
dec
inc
dec
adc
mov
cld
into
cmp
ret
add
or
pop
xor
into
push
sbb
lahf
push
ret
fs
sahf
xchg
pop
inc
int3
dec
jmp
test
cltd
mov
pop
jg
and
lret
cwtl
loope
xor
adc
sahf
mov
cmpsb
sbb
mov
cmp
movsl
shrb
mov
frndint
shrb
jle
mov
cmp
push
xchg
mov
or
mov
adc
adc
jle
jne
cmpsl
scas
aam
or
lcall
pop
orb
loope
sub
gs
fidivs
jp
pop
jno
mov
mov
movsb
je
cmpsl
pop
cmp
xchg
xchg
and
adcb
and
mov
mov
jo
imul
fsubrs
lahf
xchg
mov
repnz
jae
or
mov
add
cmp
bswap
aad
js
cli
sbb
xlat
mov
rolb
stos
push
aaa
push
ret
dec
pushf
decl
fs
cmc
xor
clc
mov
jb
lock
ficompl
scas
and
mov
xchg
pop
pop
orl
stos
jge
sub
notb
sti
and
in
xchg
hlt
fidivs
idivl
sbb
mov
adc
les
loopne
pop
cwtl
mov
and
notb
and
dec
dec
pop
cmpsl
xor
mul
jecxz
jbe
lcall
mov
fdivrs
cld
sbb
cwtl
fcoms
insl
mov
adc
xchg
sbb
or
push
popa
popf
mov
sub
inc
adcl
fiadds
cwtl
adc
adc
lret
in
jge
xor
or
or
mov
addb
icebp
jle
push
xchg
mov
or
pop
rcr
jo
shll
push
inc
mov
mov
push
add
cmpsl
dec
inc
cmp
inc
dec
xlat
std
mov
xchg
js
cld
mov
or
aad
mov
pop
idiv
les
fwait
adc
jno
addl
cmp
fildll
push
jge
insl
push
aad
popf
mov
mov
dec
mov
lods
out
stos
jnp
add
mov
inc
outsb
and
sub
sti
fadds
mov
xlat
xchg
pop
push
daa
loope
and
test
mov
cld
mov
ss
adc
dec
xchg
cld
push
mov
mov
xlat
and
fwait
outsb
leave
rol
stos
jns
or
por
cmp
or
inc
scas
mov
addr16
sbb
lock
and
call
fsubrs
mov
in
addl
shr
sbb
mov
mov
pop
inc
or
fwait
jge
or
outsl
mov
ds
sub
inc
pop
pop
ret
fldt
iret
mov
push
and
out
push
std
sbb
test
adc
dec
and
data16
dec
dec
ss
scas
mov
pushf
push
xchg
pop
enter
je
ret
test
push
loope
fnstsw
pop
add
xchg
ss
dec
mov
mov
lods
sub
sub
adc
outsb
mov
popa
push
test
add
mov
leave
movsl
repnz
lahf
stc
mov
dec
jl
jne
ljmp
cmp
popf
orb
fmuls
jnp
icebp
fisttpl
push
cmc
push
adc
add
sub
scas
lret
ret
inc
outsl
in
je
jmp
sub
fcomi
decl
loope
pop
movsb
pop
cs
aaa
jl
adc
enter
pop
ss
jno
mov
inc
sbbl
pop
sbb
dec
sahf
mov
mov
inc
out
cs
pop
inc
cmp
inc
imul
push
je
mov
or
jp
xchg
add
repnz
adc
mov
or
mov
insb
js
jmp
adc
mov
mov
test
fnstcw
inc
xrelease
roll
adc
mov
cmpsl
outsb
sbb
enter
and
push
inc
movsl
jo
or
repnz
gs
mov
sub
jg
ss
add
jg
outsl
adc
mov
cli
lret
sbb
adc
arpl
out
in
shl
and
ret
jle
mov
lea
sahf
out
dec
aaa
lret
out
std
pop
add
mov
add
cmpsl
popa
pusha
jbe
fdiv
lahf
push
cmp
cmpsb
aaa
add
cli
cs
clc
out
and
jns
cmp
ss
loop
jo
mov
mov
lcall
int3
cmp
mov
and
sub
mov
lock
mov
scas
jg
ret
int
mov
sub
and
jae
stos
cmp
bound
sub
and
mov
nop
aam
ss
mov
xor
mov
push
mov
cwtl
push
inc
aad
sbb
dec
sub
shlb
pop
mov
xchg
cmpsl
push
ret
and
enter
cmp
mov
xchg
sbb
lret
jne
inc
sbb
and
mov
jns
push
mov
mov
pop
sahf
xor
mov
mov
mov
pop
pop
mov
loope
pop
xlat
xor
jb
dec
fs
mov
mov
xor
push
subl
push
repz
dec
add
fmull
push
div
sbb
fwait
dec
andb
popf
outsl
cmp
mov
rolb
xor
inc
cmp
adc
add
cmp
xchg
fwait
adc
and
sbb
lods
pop
cmp
out
les
xor
fldln2
outsl
adc
addr16
xor
dec
jae
pop
mov
div
insl
jae
notl
popf
sbb
cmp
xchg
push
loop,pt
outsl
adc
push
imul
je
pop
inc
push
xchg
mov
stc
daa
insl
shrb
fidivs
xchg
addb
scas
xor
xor
add
insb
push
push
aaa
sub
loop
mov
imul
pop
xchg
push
fcom
pushf
add
jecxz
loop
nop
cmc
mov
jns
cmp
popa
fbstp
vsqrtss
xchg
stc
cmp
popa
aaa
add
test
mov
cli
or
dec
push
xor
leave
and
cmp
std
cmp
iret
dec
pop
aaa
ljmp
aam
incb
fidivrl
push
adc
push
mov
add
push
loopne
mov
pop
sub
jmp
sub
rcrl
xor
repz
jnp
xchg
adc
push
in
arpl
and
inc
movsb
inc
xchg
jl
call
ss
pop
stc
sub
adc
or
jmp
in
cs
push
incb
fwait
mov
xor
cmp
pop
rcll
push
es
pop
imul
xchg
push
mov
pop
xchg
jns
cmp
test
pop
push
mov
js
add
inc
std
ljmp
mov
fstpt
xor
xlat
add
dec
sub
mov
sub
xor
les
pop
imul
push
pop
inc
ficomps
mov
fcoms
xor
add
jnp
or
inc
cmp
aaa
lcall
adc
push
pop
ret
push
cmp
mov
sahf
stc
jge
sub
aad
push
sbb
xor
or
jle
mov
cmp
sub
adcl
notb
imul
dec
sti
or
cmp
test
sub
lret
jns
mov
sub
add
adc
test
test
negl
sbb
or
pop
outsb
and
insl
push
cmpsb
xor
xchg
lock
loope
push
add
adc
in
gs
jg
lock
pop
dec
or
dec
outsl
test
adc
pop
repnz
outsb
out
fnsave
mov
and
push
dec
fidivl
pop
sar
push
cwtl
sbb
mov
mov
mov
xchg
out
push
in
movsb
xor
dec
inc
ljmp
ret
or
int3
push
cmp
mov
sub
cmp
jge
imul
cmpsl
inc
lcall
icebp
xchg
sbb
aam
jo
push
sub
xor
push
popa
mov
mov
sarb
pop
or
jno
shl
xchg
iret
clc
pop
enter
das
popl
dec
or
aas
mov
ret
or
mov
fmulp
outsl
or
js
das
and
and
inc
sub
mov
cmp
add
imul
cs
roll
xor
pop
xchg
pop
arpl
enter
jbe
pop
mov
add
pusha
stc
mov
xchg
jg
arpl
cltd
gs
div
bswap
adc
sub
test
ret
popa
shll
inc
sti
adc
xor
int
xchg
popa
mov
dec
dec
dec
pop
test
cmp
push
xchg
sub
xchg
jmp
cmp
or
ljmp
stc
nop
adc
gs
dec
dec
aad
mov
testl
decl
lock
enter
sub
loope
jmp
inc
aam
in
lcall
sub
mov
out
jecxz
nop
daa
vmovapd
inc
sub
mov
or
and
test
popf
pop
kmovw
adc
rcll
fistl
loop
out
out
mov
jae
mov
cmpl
hlt
cmp
pop
aas
sbb
mov
idivb
mov
cmp
push
dec
xchg
ds
test
out
call
add
icebp
shll
push
push
clc
arpl
jp
cmp
adcl
mov
mov
push
add
stos
jmp
or
sahf
or
pushf
lods
xchg
call
adc
mov
imul
pop
push
dec
insb
addr16
mov
or
insl
aad
aaa
adc
jl
int
jbe
imul
into
xchg
ss
push
cmc
jb
leave
jo
outsl
xchg
xor
int3
das
dec
push
mov
jge
mov
scas
cmpsl
jae
rol
fistpl
fildl
andb
jo
inc
imull
add
aam
addb
imul
incb
in
push
mov
sbb
out
push
xor
ds
jle
pop
lds
and
mov
in
pop
sub
and
inc
test
pushf
js
xchg
xchg
cmc
cli
bnd
xchg
int3
jle
push
test
jo
fcoms
cmpsb
out
jae
adc
jl
clc
outsb
int3
movsl
fbld
shl
cmp
xor
cmc
sub
sub
push
pop
int3
sbb
sub
daa
push
sarb
popa
push
inc
xlat
mov
pop
sbb
sahf
mov
lea
hlt
icebp
gs
mov
decl
inc
cmpsb
lea
ret
ss
sbb
je
stc
loop
or
ja
dec
pop
outsl
cltd
icebp
xor
jg
fcmovb
mov
sub
mov
or
or
repnz
jmp
cmpsb
or
sub
aas
mov
dec
orb
dec
fiaddl
dec
push
orb
push
sub
xchg
je
test
ret
xchg
mov
jg
cmp
shr
mov
jne
cld
xor
sar
mov
shlb
loop
pop
movsl
push
addr16
movsl
cs
loopne
aam
std
stos
lret
repnz
pop
jge
andl
push
sub
ret
fs
js
lahf
mov
jno
orl
stos
loopne
jnp
or
std
mov
inc
pop
cmpsb
xor
outsl
ds
mov
push
cmp
lea
ja
mov
pop
jne
ss
imul
push
push
xor
insb
inc
push
ds
lcall
movsb
lods
jns
les
ljmp
jge
loopne
fidivl
fwait
fs
push
test
pop
add
mov
into
adc
sbb
xchg
sub
popa
jo
aam
cmp
lds
mov
push
loopne
subb
lahf
cmc
inc
ds
or
stos
push
add
inc
mov
std
das
cmp
xchg
xchg
mov
push
fwait
jno
dec
adc
pusha
xchg
insb
movsb
cmp
pop
hlt
pop
add
mov
pop
xor
mov
xor
push
fldenv
imul
out
fldt
ret
loop
push
addr16
testb
jnp
jp
mov
mov
sub
mov
fcmove
sbb
repz
sarl
arpl
test
dec
mulb
pop
ja
cmpb
xorl
int
aam
pushf
mov
js
pop
ja
shll
cld
fsubl
fnop
cmp
mov
sub
int
subb
leave
adc
mov
repz
int3
jle
push
fstl
jns
jg
add
ficompl
dec
dec
jns
sub
cli
xor
ror
stos
jb
jge
loopne
enter
pop
lods
jl
ds
jnp
scas
testl
lods
inc
inc
jns
adc
inc
xchg
insl
fisttps
adc
aaa
cmp
jge
ljmp
mov
sub
mov
mov
adc
add
sbb
or
fstps
pop
dec
popa
pop
sbb
sub
aaa
lret
addr16
cmp
ss
sub
jmp
imul
xor
mov
cwtd
movsl
jp
ret
sub
out
jmp
xor
mov
pop
dec
push
inc
cmp
insl
lock
imul
mov
mov
test
xor
negl
fld
sub
mov
repz
pop
vpcomb
mov
sbb
imul
jo
ret
sbb
enter
outsb
test
icebp
andb
popa
xchg
into
pop
adc
lods
sbb
or
jecxz
xchg
in
adc
adc
int
orb
clc
inc
xchg
pop
mov
scas
sub
call
cmpsl
pop
icebp
fdivs
lcall
arpl
add
xchg
xchg
lret
cmpsl
and
sub
xchg
out
dec
or
popfw
in
inc
push
xor
xor
addr16
shr
dec
mov
xor
and
push
lock
jp
das
je
cmp
out
aaa
sbb
mov
sbb
sbb
pop
xor
pop
pop
and
movsb
pop
inc
pusha
mov
inc
sub
lret
or
xchg
movsb
xchg
pushf
cmpb
movsl
lcall
xor
stos
insl
jno
push
xchg
inc
es
inc
cmp
jmp
sub
add
xchg
cs
ret
out
and
hlt
xor
test
adcb
lds
scas
jae
pusha
out
mov
test
lock
cwtl
in
ss
add
push
xor
jbe
or
sbb
hlt
mov
push
stos
inc
add
in
jbe
add
jmp
or
pop
rolb
lahf
pop
mov
adc
je
ret
push
iret
das
shrl
in
xor
fsubl
fs
loopne
sub
jne
test
aaa
pop
push
jbe
and
das
imul
xchg
lea
mov
loop
jl
cltd
mov
jnp
pushl
xchg
and
jp
adc
push
xchg
inc
push
daa
sub
mov
and
mov
push
fcmove
sub
jbe
adcb
adc
ljmp
or
mov
es
and
stos
xlat
mov
inc
mov
adc
push
xor
mov
mov
adc
add
clc
out
xor
push
jmp
int3
sub
lea
bsr
xchg
pop
cmp
pop
lahf
je
mov
mov
pop
xor
sbb
and
push
inc
stc
sbb
in
int3
das
mov
movsl
cs
aad
sbb
jo
fs
dec
aaa
push
addl
xchg
test
add
or
pop
repnz
stos
in
aaa
loop
inc
dec
inc
je
push
ljmp
sub
mov
adc
int
jnp
ljmp
loopne
movsl
sub
pop
imul
mov
pusha
mov
mov
iret
push
adcb
or
adc
lods
inc
les
ds
pop
stos
and
lahf
imul
mov
out
iret
push
mov
cltd
daa
and
mov
cmovp
and
dec
loopne
std
push
jne
mov
jns
repnz
sub
movsb
pop
mov
leave
jb
cmpsl
sub
jno
les
in
pop
push
pop
in
inc
pop
out
and
and
mov
jl
orb
sub
add
loop
js
or
sub
xor
shl
inc
popa
orb
sbb
insl
adc
inc
add
sub
xor
iret
mov
aad
cmp
out
rorb
leave
inc
cmp
pop
aam
out
jle
add
pop
lcall
jo
sub
sub
dec
push
cmp
mov
mov
les
inc
jg
push
pop
sahf
or
les
sub
fcmovne
ja
jl
xor
cwtl
std
pop
jmp
cmp
xchg
cwtl
test
pop
adc
mov
mov
pop
xor
in
loop
mov
out
mov
dec
outsb
gs
aas
iret
daa
jo
cmc
out
xchg
mov
in
pop
lahf
and
xchg
sbbl
dec
pop
dec
lods
sbb
in
call
mov
jo
adc
adc
push
xchg
mov
xorb
adc
call
fcmovb
mov
loopne
adc
inc
fptan
sub
jmp
push
fildl
inc
cli
jp
cwtl
cwtl
mov
int
sub
and
inc
lods
ret
pop
int3
mov
cmp
into
test
out
pop
jno
xor
aaa
test
addr16
push
push
sub
hlt
inc
inc
mov
mov
mov
cs
aam
mov
int
lret
inc
movsl
fucompp
pop
push
in
cmp
mov
loope
leave
int3
stos
mov
out
adc
and
orb
mov
pop
xchg
repz
aam
lret
mov
add
out
push
add
imul
icebp
xlat
mov
mov
jmp
lods
sub
fldcw
inc
mov
pop
or
fidivl
dec
mov
popf
sbb
stos
mov
cmp
xor
inc
cld
xorb
scas
dec
add
inc
add
shlb
cmp
cmp
ror
sbb
sub
mov
imul
jbe
inc
aas
add
sub
in
mov
push
pushf
popa
out
pushf
jne
mov
push
sub
aad
cmpsb
out
and
adcb
sbb
push
mov
les
das
jb
add
jb
cmc
popa
icebp
ljmp
xchg
push
daa
hlt
cmp
ljmp
test
mov
xchg
loopne
dec
aas
loop
ljmp
sbb
inc
lods
sbb
sbb
pop
aas
or
push
ret
lods
mov
fnstsw
ljmp
outsb
xor
dec
inc
adc
push
test
mov
dec
jp
sub
sbb
iret
shlb
and
adc
cmpl
shrl
int
push
gs
and
mov
push
mov
push
icebp
xor
dec
in
dec
xor
fcoms
jae
iret
adc
mov
xor
test
outsb
mov
cwtl
jmp
shlb
ljmp
xor
idivl
mov
or
mov
or
outsl
addr16
cwtl
mov
repnz
in
add
inc
add
pop
push
ja
test
pop
outsb
dec
adc
push
mov
icebp
mov
or
sbb
jnp
ret
lcall
lahf
nop
lret
add
or
lods
imul
jnp
adc
push
adc
jno
leave
arpl
cltd
dec
ret
mov
pushf
sbb
inc
outsb
sahf
insl
or
sbb
and
test
loopne
popf
add
adc
imul
add
enter
fwait
cmp
adc
les
push
mov
call
ret
stc
push
cmp
cltd
pop
popf
inc
pop
jb
xchg
test
xchg
pop
mov
sub
fwait
daa
push
adc
pushf
and
insb
out
subb
push
mov
mov
sub
inc
cltd
or
push
jb
ficoml
push
add
punpckhbw
sub
push
cmc
sub
std
scas
daa
cli
or
dec
ja
sti
and
in
sub
std
iret
adc
hlt
add
test
lret
adcl
cmpsl
sub
xor
xchg
and
aam
or
inc
arpl
stos
mov
rcrl
js
mov
jns
lds
mov
mov
cmpsl
test
pop
mov
sub
cmpl
jae
jnp
inc
pushl
or
clc
iret
jp
mov
insb
xchg
pop
push
push
mov
mov
in
xchg
mov
andb
fsts
mov
sbbl
mov
roll
dec
popa
insb
jae
out
aad
pushf
loope
mov
sub
iret
jl
push
out
sub
ficompl
in
lcall
cmc
mov
pop
scas
outsl
jae
nop
mov
jo
ficomps
rolb
sbb
in
jns
and
dec
mov
popf
leave
jns
add
xor
aas
int3
in
xchg
lcall
sub
push
jle
daa
mov
lret
adc
sbb
xor
cmc
mov
sub
fs
test
mov
arpl
aad
jns
jne
add
jns
stos
and
mov
xor
mov
negb
xchg
nop
fistpl
les
cmc
test
push
ljmp
in
lret
jne
cld
gs
jp
nop
jns
xchg
das
jb
pop
iret
xor
add
pop
sub
stos
ret
mov
cs
sahf
test
push
std
rcrb
mov
loope
scas
int
into
bound
push
push
aad
cmp
inc
or
into
inc
popa
cmp
add
dec
fiadds
into
mov
jmp
and
or
scas
int
jp
dec
scas
ds
jno
imul
stos
pop
push
cld
loope
sub
mov
push
xor
cmp
push
or
xor
andb
push
dec
in
nop
mov
xor
dec
hlt
mov
out
cmp
jmp
and
daa
gs
xchg
pop
sbb
cmpsl
call
hlt
mov
mov
movzbl
shll
xchg
sub
out
mov
in
scas
stc
rclb
decb
sbb
outsl
das
sub
mov
cltd
xchg
cmp
mov
int3
outsl
xchg
testb
lret
inc
out
mov
aas
test
cmpsb
dec
sub
adc
sub
pushf
loopne
cltd
cli
cs
pushf
test
insb
aaa
sahf
out
fldln2
push
pusha
sahf
js
fwait
mov
loopne
imul
and
repz
dec
stc
sub
mov
pop
hlt
mov
jo
mov
test
stos
testb
aam
xchg
xchg
iret
test
stos
lods
mov
pop
or
pop
mov
inc
or
mov
fidivl
mov
xchg
mov
mov
xchg
and
jp
rolb
lcall
mov
pop
dec
lret
rorl
mov
and
bound
jge
enter
lds
jl
cmpsb
pop
add
push
ficomps
shrl
jb
add
fiaddl
push
dec
pop
jmp
lahf
inc
loop
insl
adc
pop
out
mov
push
push
push
cmp
mov
inc
aaa
mov
movsl
sbb
pop
stos
fstpt
jno
mov
das
mov
sub
jmp
push
cmpb
bound
jecxz
dec
push
mov
push
sub
test
cltd
or
hlt
fwait
lahf
pop
inc
or
clc
mov
repnz
mov
fwait
inc
add
mov
jle
sbb
add
jns
jmp
aad
addr16
rorl
cmp
push
jb
jecxz
and
and
bound
jmp
mov
push
fisubs
arpl
mov
cmp
cmp
cwtl
std
pop
mov
cs
xchg
or
out
das
enter
hlt
rolb
mov
test
xor
add
loop
lea
ret
push
jno
addr16
push
jno
inc
pop
hlt
int3
fdiv
sub
in
fprem1
dec
inc
icebp
push
and
and
push
mov
in
adc
ret
fwait
imul
cld
data16
repnz
add
sar
bnd
aad
sbb
mov
clc
sbb
add
xor
shl
test
iret
repz
mov
pop
lds
push
jg
mov
or
add
imul
xor
jbe
popa
rcll
and
les
out
pop
scas
dec
dec
scas
lock
movsl
mov
cmp
insb
cltd
mov
xchg
mov
mov
gs
pop
leave
push
dec
rorl
pop
test
sub
fcomp
cmp
add
push
loop
mov
pop
movd
mov
fdivp
pop
mov
and
adc
roll
mov
xor
test
clc
xchg
pushf
jbe
jo
push
cmp
fadd
sbb
add
lret
inc
inc
ret
jne
ss
push
mov
and
ss
enter
push
aas
push
fildl
pop
dec
fcompl
push
push
test
fsubrl
add
inc
cmp
aaa
lods
loopne
mov
out
iret
sub
in
sbb
mov
inc
sbb
hlt
sbb
mov
mov
adc
sub
lcall
das
adc
call
jge
xor
sbb
jns
outsl
aaa
outsb
sub
stos
sbb
push
mov
or
dec
jae
adc
fistl
and
int3
les
xchg
outsl
aaa
dec
mov
xor
lds
int
lods
aas
jne
ror
cmp
movsl
mov
adcb
mov
dec
lcall
xor
dec
dec
adc
aaa
loopne
negb
push
movsl
mov
pushf
cli
cmp
or
xor
stos
les
mov
shll
xlat
jmp
outsl
sbb
out
xchg
pop
int
out
push
add
sub
lods
mov
jge
inc
std
subb
repz
inc
or
orb
loope
dec
mov
or
call
add
in
fcmove
ret
cmpsl
sarb
out
in
sub
and
mov
inc
scas
lock
int3
adc
mov
and
sbb
loopne
xchg
xor
fwait
addb
shl
lret
cmpsl
fisubs
dec
fstpl
scas
sub
xchg
jb
sbb
or
into
jne
je
ds
stos
sbb
fistl
mov
outsl
dec
cwtl
movsb
sahf
dec
push
add
xlat
lahf
int3
aam
inc
fisubrl
mov
jecxz
sbb
dec
testl
pop
test
loope
push
inc
push
dec
dec
insl
mov
sub
cli
das
pop
loope
mov
out
cwtl
push
outsb
pop
adc
cmp
dec
js
into
jns
repz
cmpsl
loop
mov
and
sub
cmpb
js
sbb
pushf
sbb
fisubs
sbb
popf
sbb
mov
mov
outsb
mov
xor
repz
lret
les
mov
sbb
popa
mov
ljmp
mov
xor
pop
jne
xor
cwtl
mov
cwtl
push
ja
daa
add
cwtl
dec
sbb
inc
inc
rolb
insb
movsl
or
bound
inc
popf
jmp
or
fwait
into
int3
test
jge
rclb
aaa
dec
movsl
fistps
leave
addb
cs
mov
jae
nop
xchg
sarl
and
cmpsl
pop
mov
addl
sub
dec
xchg
inc
out
cli
sub
out
mov
sahf
mov
mov
enter
inc
loopne
cmp
add
ljmp
in
jne
loope
pop
mov
fldl
sub
test
xchg
pop
or
sbbb
add
negb
sub
lock
scas
mov
push
test
cmovb
je
pop
fmuls
es
jp
pop
lods
sub
dec
adc
dec
mov
stos
xor
and
xor
xor
das
pop
shrb
or
xchg
jge
mov
push
aam
mov
shl
stc
popa
push
mov
sub
add
and
xchg
sbb
cld
mov
int3
pusha
pop
hlt
dec
movsb
loope
xor
adcb
pop
loopne
icebp
ficomps
movsb
call
fs
xor
imul
imul
dec
sbb
pop
out
pop
rorl
imul
mov
jnp
jo
filds
xchg
lods
testl
xorb
lret
push
fidivrs
pop
xchg
add
js
jno
mov
rorl
and
jae
negl
ret
mov
pop
pop
or
mov
add
add
jecxz
pop
dec
pop
xor
sub
sbb
or
adc
mov
mov
shlb
rclb
inc
push
cmp
pop
jb
mov
mov
jmp
scas
decl
rcll
insb
js
sbb
addr16
outsb
gs
dec
ror
stc
lret
inc
sbb
mov
or
daa
pop
fnstcw
mov
loopne
sub
push
lea
pop
mov
dec
pop
pop
nop
xor
add
pop
dec
mov
idiv
test
inc
outsb
cmpsb
mov
push
shrl
xchg
es
ja
jns
pop
cwtl
xor
lock
and
xor
adc
xorb
sub
sub
test
idivl
push
jle
pop
jne
add
sub
or
out
push
cmp
cld
sarb
mov
stc
repz
aam
pop
xchg
lds
das
sbb
loope
mov
mov
xchg
mov
cmc
imul
inc
and
pop
dec
mov
inc
jp
pop
mov
add
test
loopne
nop
push
test
in
xor
jb
jns
mov
mov
fsubs
ss
mov
incb
jo
pop
shll
jg
fistps
scas
add
mov
xchg
aam
inc
pusha
adc
and
stos
mov
inc
imulb
jnp
arpl
mov
es
add
in
dec
pop
inc
fldt
gs
loopne
bnd
das
imul
fiadds
add
push
add
push
mov
scas
xor
aad
jbe
pop
push
add
repz
xchg
add
sub
imul
dec
jnp
jne
fldcw
push
add
mov
in
adc
lret
into
insb
repz
adc
cmpb
fstps
push
repz
cs
adc
into
cmp
gs
ja
movsb
nop
mov
inc
aas
mov
and
rorl
shl
jae
pop
mov
jp
cs
pop
loop
mov
pop
xchg
dec
iret
pop
jg
jg
inc
stos
push
fwait
les
jbe
mov
cmpsl
push
or
inc
daa
xchg
hlt
fmulp
or
push
stos
in
daa
dec
popl
push
js
inc
lea
ds
in
aam
lahf
lret
adc
sub
stos
xchg
xchg
push
mov
in
call
pop
sub
in
xchg
test
in
int3
test
das
out
movsl
stos
inc
fs
repz
ret
mov
ret
test
or
xchg
xchg
sbbb
incl
push
and
adc
lahf
loopne
les
stos
shrb
out
in
lods
gs
pop
pop
mov
clc
dec
add
aaa
jmp
xor
mov
or
fmul
fiadds
pushf
cmp
xor
dec
mov
xchg
inc
xchg
lods
pop
stos
pop
sub
addr16
mov
fwait
sbb
xchg
sbb
pop
outsl
jmp
sub
or
mov
shr
loopne
pusha
push
sbbb
stos
dec
mov
outsl
sbb
push
xchg
sbbl
in
faddp
push
fidivs
subl
add
mov
notl
data16
test
add
stos
test
jecxz
outsb
in
sub
add
mov
lods
jg
mov
xchg
cmp
sbb
mov
iret
xchg
dec
pop
push
sbb
jns
add
ss
jno
add
stos
gs
dec
inc
loop
xchg
xchg
inc
xor
jns
mov
test
add
add
push
rorl
pop
sbb
cli
lret
mov
repnz
pop
mov
cltd
inc
push
push
pusha
mov
pop
cs
xchg
sbb
jns
xor
popa
push
outsb
movsb
ret
mov
jl
pop
aas
idivl
fadd
inc
xchg
mov
dec
push
push
dec
aas
pusha
in
pusha
orb
xorb
mov
lds
pushl
lahf
adc
and
enter
call
and
inc
or
outsb
insb
pop
shr
jmp
or
jl
jg
sahf
cmp
jae
cmp
cmp
cmp
mov
mov
filds
push
inc
fisubrl
adc
mov
adc
jb
adc
sub
bnd
cmp
aam
stos
in
sub
mov
test
hlt
repz
mov
pop
or
dec
inc
push
mov
inc
or
in
lea
lock
mov
or
fwait
mov
cmp
bound
sbbb
fsts
and
xlat
rol
movsl
pushf
and
or
fimull
bnd
stos
enter
dec
add
xchg
repz
push
jg
mov
pushf
fisttps
pop
jge
in
lock
leave
cmc
sub
jl
cs
push
add
insl
frstor
in
arpl
sub
jp
fidivrs
xchg
insl
in
push
xor
dec
repnz
push
stos
loope
adc
mov
xor
aad
dec
gs
push
and
out
in
test
and
add
jne
dec
divl
pop
lcall
andl
fidivl
ret
cmp
stc
sbb
push
sbb
insb
add
lea
inc
rol
sub
xchg
aaa
xor
daa
mov
mov
sub
mov
cmp
iret
mov
sub
xchg
mov
nop
mov
fbstp
jno
je,pn
ja
inc
xlat
pop
cmp
mov
mov
xchg
jo
in
aad
lods
adc
push
xchg
xchg
lea
mov
jno
scas
jo
call
xchg
mov
ret
in
sar
mov
push
jmp
sbb
ljmp
pop
push
jecxz
xor
lea
dec
in
aas
pop
sub
int
sub
insl
dec
adc
pusha
popf
shll
mov
or
mov
push
lods
mov
xchg
and
sub
gs
sub
mov
add
push
add
mov
out
divb
jp
xor
mov
bound
test
xchg
aaa
sub
mov
lods
push
mov
lcall
or
and
or
call
mov
mov
cwtl
in
push
xor
dec
sahf
mov
stc
xchg
outsl
lods
pop
loop
mov
pop
mov
cmp
cmp
mov
lret
push
mov
mov
push
lcall
mov
repz
inc
test
out
xchg
add
jmp
and
xlat
fsts
popa
xchg
mov
cmp
pop
bound
pop
push
leave
cli
icebp
push
outsb
lcall
sbb
push
pop
push
xchg
xchg
mulb
out
out
pop
adc
mov
inc
es
mov
stc
stc
pop
iret
xchg
repz
add
loop
movsl
sbb
mov
add
xor
jne
or
shrl
and
jne
pop
sub
dec
fdiv
add
ret
inc
ficomps
out
pushl
push
movsl
push
push
xchg
mov
mov
or
fmul
mov
mov
and
int
push
jl
shll
and
pop
dec
xchg
mov
lcall
enter
in
testl
jecxz
cmpb
insl
lods
sub
int
jp
mov
cmp
loopne
pop
lods
inc
cmp
scas
push
jae
mov
adcb
xchg
fs
shr
mov
leave
dec
and
jnp
jle
mov
pop
jns
flds
sahf
call
or
add
loopne
mov
lcall
dec
push
comiss
pushf
lcall
popa
or
sub
fbstp
repz
clc
pop
mov
or
xchg
fldl
lods
mull
dec
scas
cmp
pop
inc
lret
pop
sahf
outsb
fwait
stc
jnp
movsl
inc
cmp
and
xor
out
pop
mov
imul
xor
or
gs
dec
arpl
and
dec
or
gs
push
sub
adc
js
push
fwait
jmp
mov
lret
inc
nop
dec
cwtl
and
sbb
sahf
les
xchg
and
notl
sti
sub
ds
jb
pop
pop
out
test
jo
push
inc
jmp
out
and
fwait
cmc
inc
jg
int3
testl
fptan
divl
mov
and
test
cmp
xchg
pop
inc
mov
sub
in
push
dec
out
inc
popa
xchg
pop
fwait
pushf
mov
iret
leave
jns
xchg
mov
cltd
mov
out
and
movsb
mov
ja
stc
sti
or
aaa
dec
aam
out
stos
cli
pop
jae
inc
dec
lock
push
stc
add
int
sarb
aad
mov
fsubs
int
adc
jne
shr
dec
pop
sbb
push
mov
cwtl
or
push
cmp
mov
xor
jno
sbb
ja
mov
jno
in
xchg
insb
pop
cmp
test
pop
repnz
push
data16
loope
lahf
sub
je
inc
ds
push
cwtl
ficoml
leave
imul
fsubl
sub
lahf
jns
push
jecxz
std
cld
sub
cmp
mov
popf
sub
into
andb
in
dec
cmc
mov
negb
mov
mov
divb
cmpsl
and
jb
stos
cmp
xchg
add
out
mov
pop
fistpl
dec
add
mov
mov
fcompl
pop
out
cwtl
jne
jbe
pop
jecxz
adc
or
repnz
cwtl
shll
mov
and
inc
pop
mov
pop
or
addl
push
lods
add
loope
stos
mov
cmpsl
add
xchg
jecxz
scas
fcomp
xor
sbb
fbld
pop
ror
mov
inc
ds
out
enter
iret
or
adc
inc
bound
cmpsl
and
gs
lahf
lea
push
es
inc
movsl
xchg
js
lods
pop
jae
fstpt
test
das
and
cmpsb
jbe
mov
adc
js
push
push
sti
lcall
stc
pop
and
imul
and
into
in
addr16
out
mov
movsb
or
sbb
pop
ja
das
xchg
and
xchg
jb
int
mov
jns
dec
mov
cld
fmul
or
popa
cmpsb
mov
popf
add
cmp
jl
insl
sbb
arpl
in
or
jb
enter
mov
in
xor
das
sub
and
xor
and
in
fistpll
mov
daa
dec
cld
out
insb
out
dec
mov
sub
ja
fmul
js
lea
js
ljmp
and
sti
stos
stc
push
lret
or
into
mov
dec
cmpsl
sbb
mov
mov
das
jbe
fstpl
xor
imul
pop
push
mov
dec
push
mov
popa
aam
fwait
test
sub
cmpsb
dec
xchg
aas
add
jle
or
daa
pop
jns
sub
add
fmull
dec
jbe
ds
or
pushf
ficomps
dec
outsl
or
aaa
insb
addb
insl
sahf
shl
dec
push
add
mov
adc
lock
push
je
lods
jg
mov
sbb
lds
std
lcall
inc
pop
dec
push
or
sub
inc
add
fistl
cld
das
and
rolb
lods
int
jle
add
sbb
mov
loope
bnd
fst
sbbl
mov
xor
mov
in
xchg
pusha
or
adc
and
jns
cmp
jg
js
out
in
cmc
xchg
pop
push
pop
hlt
pop
cli
cld
jns
shrl
or
and
lcall
adc
or
mov
ficoms
inc
sbb
insb
jp
movsl
fmuls
testl
sbb
aam
in
sbb
xor
adc
hlt
dec
stos
cli
cmp
adc
pop
std
ss
sub
mov
xchg
stc
cmpsb
test
push
add
int3
adc
movsb
mov
adc
enter
add
pop
pop
fwait
ljmp
sbb
push
into
and
ss
aas
jns
fld
rorl
test
push
cmp
add
pushf
push
pop
dec
rcrb
loope
cmc
adc
mov
sub
mov
fistpll
in
add
sbb
jge
pop
adc
jae
mov
rcr
dec
dec
jbe
mov
cmpsb
xchg
lds
aas
push
mov
repnz
sbb
outsl
dec
stos
dec
push
andl
incb
and
mov
int
testl
std
lock
xlat
movsb
imul
cmp
dec
mov
sti
mov
bound
pop
aad
cmp
pop
call
push
and
out
xor
or
les
scas
cld
adc
jo
test
outsl
out
in
mov
andl
and
das
adc
aaa
je
pop
into
cmp
push
or
shlw
cmpsb
gs
hlt
mov
icebp
mov
adc
and
lcall
pop
adc
mov
enter
test
push
pop
jl
inc
lret
loope
das
das
mov
ja
pop
insb
loopne
fsubrl
in
aam
adc
pusha
and
mov
mov
mov
or
pop
lea
push
adc
pop
adc
jnp
push
in
xlat
loopne
out
popf
xchg
xchg
xchg
add
shlb
push
xchg
pop
ret
pop
xor
inc
repnz
add
js
and
fldenv
iret
out
fisttpll
xor
push
dec
sahf
xchg
imul
adc
arpl
arpl
test
pop
je
jl
idivl
or
aad
push
loopne
sti
mov
shll
mov
ss
rcrb
mov
insl
les
cltd
aad
push
inc
les
ret
rol
xor
scas
test
mov
adc
and
and
xor
call
sbb
inc
inc
jge
fdiv
push
addb
test
fst
ret
or
aaa
ljmp
push
loope
leave
lds
in
dec
stc
sbb
insb
subl
xor
mov
stos
insb
js
pushf
xlat
std
cmp
in
fadds
jne
int
add
out
jle
and
hlt
pop
enter
roll
lds
mov
out
inc
imul
int
push
mov
ficomps
inc
adc
mov
test
fs
fucomp
pop
pop
in
rclb
dec
fildl
test
ss
mov
mov
xlat
pop
subl
adc
mull
or
adc
jecxz
aad
nop
inc
popf
cmpsb
ja
or
sti
jp
adc
xor
jno
into
cwtl
add
stos
lds
ror
cld
dec
loop
push
je
pop
into
gs
test
sub
push
xchg
mov
cltd
ljmp
lret
mov
jne
addl
mov
in
out
sbb
sub
test
ficoms
aas
ss
stc
inc
fisttpll
xor
sbb
adc
mov
push
stos
pop
jge
mov
hlt
lahf
adc
das
jecxz
aad
sbb
jnp
dec
xchg
js
fs
lods
dec
cld
cmp
fisttpll
or
ret
popa
mov
shll
mov
dec
test
ret
rorb
sbbb
and
sbb
add
mov
cmc
shll
in
dec
xor
dec
xor
frstpm(287
into
sbb
mov
and
rclb
cs
inc
mov
mov
xlat
bnd
imulb
cmc
inc
jno
leave
mov
incb
pushf
xchg
xchg
cli
and
push
push
pushl
and
inc
push
mov
fisubrl
dec
push
and
jae
cmpsl
push
es
sub
dec
cmpsl
jecxz
push
and
icebp
stc
sub
adc
xchg
or
loopne
loope
cmp
xor
neg
jge
insl
lcall
dec
mov
add
cmp
mov
xor
pause
adc
jl
ret
into
pop
das
loopne
add
inc
das
outsl
cmp
repnz
out
movsl
pop
cmp
insl
cmp
cli
mov
mov
cmp
xorps
mov
pop
jl
mov
inc
xor
and
sub
sti
movsb
jb
mov
mov
test
mov
xor
or
push
mov
mov
xor
lcall
loopne
and
or
jo
dec
icebp
sbb
inc
xchg
mov
fcmovne
mov
jg
insb
push
ret
sub
push
inc
in
ja
bound
xchg
lds
jp
in
sbb
scas
mov
addr16
lods
sub
xor
cmpsb
orb
insb
cwtl
in
cmp
mov
das
fs
lds
sub
push
outsl
inc
inc
inc
ret
mov
lahf
rorb
push
dec
sbb
enter
push
dec
mov
das
leave
adc
sarb
sbb
xchg
push
in
inc
cltd
push
shr
lods
xrstor
mov
stc
lret
pop
aaa
clc
lret
loope
sbb
jecxz
nop
sub
xor
cmp
scas
int3
fwait
and
mov
das
addr16
xchg
ljmp
mov
mov
cmp
mov
dec
adc
cs
xchg
jbe
add
or
dec
mov
jecxz
pop
stos
inc
xor
mov
or
or
mov
rcrb
inc
xlat
mov
xchg
add
scas
push
dec
mov
add
push
sub
sahf
jle
popf
lea
or
ret
jge
and
arpl
inc
jmp
inc
leave
test
cli
sti
jmp
shr
ds
int3
cwtl
jo
ret
aas
insl
cmpsl
jne
pop
frstor
into
add
out
daa
inc
gs
sahf
test
mov
adc
imul
inc
inc
es
test
add
mov
adc
jo
mov
pop
inc
dec
sbb
mov
ficoml
cmpsl
nop
outsl
in
add
jle
push
lock
mov
loopne
dec
inc
mov
shlb
fwait
cmp
push
adc
inc
mov
dec
dec
sti
pushf
pop
test
sub
scas
xor
pop
sbb
jecxz
and
lahf
cmpsb
mov
xchg
cli
and
insb
mov
push
pop
pop
outsl
in
ret
jecxz
movsb
inc
rcrl
les
cltd
inc
jns
or
fcoms
iret
xchg
outsb
out
dec
fiaddl
cmp
adc
or
xchg
je
out
jmp
aam
addb
and
in
sqrtps
pop
fucom
pop
mov
int
idivb
pop
jo
add
and
xchg
pop
push
outsb
inc
rol
in
jge
rcrl
mov
daa
or
mov
dec
xchg
xor
pop
fwait
cmp
in
insb
ljmp
iret
or
sbb
aaa
adc
test
jnp
in
cld
mov
in
mov
xchg
xchg
bound
popf
push
add
outsl
pop
jmp
add
ja
mov
subl
outsb
lahf
icebp
mov
popf
rcr
or
movsb
cmp
aas
jge
outsb
decl
jb
push
sbbl
ret
adc
rcrl
sbb
sbb
mov
lahf
test
sbb
gs
scas
sbb
rclb
scas
or
mov
in
ljmp
fwait
ja
and
mov
outsl
roll
xchg
sbb
mov
jne
or
in
or
push
insb
aam
fisubrs
adc
lds
mov
mov
adc
sarl
and
cwtl
fmuls
dec
test
test
mov
push
cmpsb
cli
pop
icebp
and
pushf
jmp
out
xchg
test
out
and
jne
pop
int3
xchg
xchg
daa
inc
shll
mov
push
mov
std
aaa
push
xchg
out
test
push
xchg
cs
jecxz
pop
pop
inc
js
std
jmp
fdiv
imul
xlat
xchg
inc
jmp
pop
adc
imull
ds
push
dec
daa
aam
ret
or
movsb
loop
in
shlb
stos
jg
or
mov
test
pop
add
vmread
dec
pushf
add
push
mov
int
pop
sbb
mov
push
pop
adc
cmp
lahf
sbb
xchg
mov
mov
inc
push
mov
xorb
test
sub
pop
add
and
fistpl
push
xor
arpl
pop
pop
xlat
nop
jecxz
xlat
out
sbbl
sbb
ss
out
inc
mov
in
lret
xor
mov
xchg
test
add
cwtl
and
jae
mov
aad
xor
sbb
sbb
ror
mov
ja
pop
in
loopne
or
xchg
movsl
jns
mov
xchg
in
ljmp
or
popa
dec
cmp
dec
outsb
and
sbb
xorl
sbb
stc
pop
inc
xchg
jle
fstps
sub
popa
mov
cmpsl
addb
popa
mov
push
arpl
push
xor
cmpsl
push
ret
stc
cmp
orl
dec
cwtl
sahf
sbb
and
lds
fwait
jl
push
loope
and
inc
add
daa
dec
dec
scas
pop
lret
sahf
stc
pop
mov
cmp
push
mov
or
fstl
insb
add
mov
jp
cwtl
mov
push
in
call
lcall
jecxz
and
push
out
jge
jecxz
in
gs
repz
push
lds
lods
cmp
push
xchg
jmp
in
mov
subps
hlt
push
inc
jo
mov
test
repnz
out
filds
jae
imul
cltd
iret
xor
dec
lds
pop
fsts
mov
lods
mov
and
loop
outsb
mov
nop
fwait
sub
ds
loope
sahf
add
test
and
test
pop
dec
jbe
push
jge
mov
insb
inc
fsub
ljmp
imul
es
mov
stos
xor
mov
mov
add
mov
outsl
jge
scas
lcall
es
ds
sti
das
mov
jbe
lods
out
dec
xor
and
data16
enter
cmp
sti
call
stos
mull
jmp
fildll
pop
push
mov
nop
ds
pop
stos
and
sbb
xchg
sub
jnp
mov
dec
call
subl
cmpsl
stos
xor
and
and
lahf
mov
test
shlb
adc
pop
in
mov
mov
jo
mov
repz
add
lods
lock
xlat
mov
push
mov
cmc
aas
stos
pushf
popa
fstpl
iret
pop
fidivrs
arpl
xchg
iret
test
lret
sti
stc
mov
cmpsl
jb
fwait
lds
sti
lret
cmp
mov
popa
mov
ret
in
sub
mov
lcall
les
mov
inc
je
adc
cmp
lock
cmpsb
or
movsl
movsl
add
mov
inc
cli
dec
test
or
lret
mov
mov
loop
imul
cmp
mov
add
push
and
mov
aas
ja
fwait
push
mov
ja
shll
lea
sub
iret
pushf
orb
f2xm1
cmp
adc
lods
movsl
xchg
mov
aaa
mov
lods
sub
mov
xor
out
lcall
xchg
enter
ds
dec
dec
mov
jb
fcomps
add
and
mull
fbld
cmp
or
jo
ss
push
adc
int
lods
mov
mov
mov
mov
xor
roll
lret
mov
out
es
aad
into
outsb
in
xchg
pop
xchg
daa
das
jp
mov
imul
fbstp
mov
movsl
sbb
inc
dec
scas
mov
hlt
outsl
jo
add
mov
lea
mov
xchg
jle
mov
sbb
push
xchg
or
lds
jmp
adc
inc
movsl
cmp
fstpl
mov
push
test
cmpb
jo
mov
divb
shlb
out
ds
mov
out
mov
sti
adc
ja
xchg
jb
cmp
cld
mov
clc
mov
mov
cmc
int
and
mov
fmul
cmpsb
popf
add
mov
jns
push
movsb
subb
cmc
jp
imul
cmp
idiv
sub
aad
sbb
dec
jbe
mov
mov
pop
push
and
stos
xor
call
cmpsb
sub
clc
sub
sub
ds
xchg
stc
push
sbb
roll
or
and
iret
push
inc
or
mov
mov
in
iret
add
es
pop
addr16
out
sahf
and
inc
xchg
or
pop
pop
in
mov
inc
test
sti
push
sub
mov
mov
je
cmp
cmp
jno
fists
xchg
cmp
xor
icebp
scas
adc
and
les
pop
xor
nop
cwtl
xor
fdivs
subl
xchg
push
fs
or
pop
cmp
xchg
imul
cmpsl
adc
inc
fwait
dec
xor
aas
mov
cltd
roll
jle
mov
cmpsb
into
xchg
imul
or
cmpsb
push
aaa
bound
xor
push
lret
out
mov
into
inc
fiadds
lcall
in
mulb
cmc
jecxz
mov
aad
dec
pop
lret
aas
dec
pop
rcll
aas
cmp
das
or
sbb
mov
jb
je
sub
lods
jcxz
out
repnz
int3
add
and
xlat
aad
and
cmp
jg
shll
dec
daa
and
aad
in
mov
pop
and
sbb
mov
loope
pop
pusha
jbe
sub
cmp
cmp
adc
je
into
les
and
push
inc
cltd
popl
push
mov
hlt
outsl
jecxz
movsb
int
and
rcll
test
jae
mov
push
sahf
xor
and
subl
mov
cmp
scas
or
aam
or
jmp
mov
fwait
xlat
je
mov
add
icebp
push
jp
push
popa
push
mov
es
aas
outsl
pop
inc
xchg
cs
adc
mov
loope
pop
test
sahf
mov
dec
or
push
jae
adc
cmp
hlt
insl
mov
inc
in
adc
repz
out
add
jmp
mov
mov
and
clc
out
pop
cmc
pop
fcomp
xchg
add
push
outsl
pushf
ja
pop
lahf
ja
in
mov
sbb
mov
inc
push
cmp
cltd
popf
mov
cld
jbe
xlat
mov
xchg
mov
xlat
popl
and
daa
fadds
mov
or
or
push
xor
add
sbb
adc
fcompl
push
adc
cmp
addb
jae
push
out
push
sahf
in
loope
bnd
dec
cld
lods
mull
xorb
stc
xchg
movsl
adcl
test
adc
add
loopne
xchg
lods
fbld
sbb
mov
fisubs
lahf
arpl
push
cmp
mov
mov
sub
and
fisttps
outsl
pop
leave
lock
in
sarb
repnz
sar
mov
and
pop
dec
inc
xlat
add
sbb
orl
mov
daa
test
arpl
jmp
mov
push
push
mov
int
mov
loope
fistpl
sbb
push
jne
out
addr16
inc
push
das
xlat
or
add
or
inc
idivl
je
mov
dec
cmpsl
outsb
mov
loopne
lea
ja
pop
sub
popa
fdivr
cmpl
neg
jae
pop
cmp
pop
sbb
ss
loopne
addr16
xchg
aad
lock
mov
pushf
stos
in
out
out
push
dec
mov
rclb
out
fiadds
and
cmp
loopne
sahf
mov
imul
add
stc
fwait
cld
and
pop
outsb
insl
mov
dec
push
pop
enter
repz
sub
cmp
test
xchg
rcl
inc
sub
cld
jns
ja
aam
lock
cmp
shr
jne
adc
int
xchg
inc
lods
mov
outsb
idivb
lods
stos
psubsb
mov
int
lcall
lds
mov
xor
xor
out
in
cmp
test
pop
ficoms
inc
push
adc
dec
mov
fisttps
es
pop
xchg
sub
fsubl
shlb
scas
push
adc
hlt
pop
dec
sahf
js
enter
cmp
fdivrl
js
lahf
mov
cmp
xor
mov
leave
jne
pop
aas
mov
adc
mov
sub
mov
cmp
inc
and
inc
xchg
push
fsubp
add
xor
data16
inc
pusha
repnz
xchg
push
push
out
sub
inc
xor
push
sub
clc
popa
imull
or
cmp
lret
push
shlb
leave
push
and
adc
cmpsb
ss
xor
imul
stc
hlt
fstps
addr16
cwtl
pop
int3
mov
roll
out
popf
std
inc
in
lahf
das
ficomps
loopne
jno
rcl
xchg
cld
push
push
lds
adc
sub
mov
out
into
rcll
bound
sub
pop
adc
out
lock
pop
mov
imul
xor
mov
lods
lahf
mov
lds
add
inc
inc
lock
lret
sub
mov
data16
aad
mov
stos
or
sbb
dec
push
dec
and
dec
mov
jno
lcall
mov
cli
int
inc
xchg
je
divb
xchg
es
gs
pop
das
js
dec
andl
repz
mov
stc
mov
into
inc
or
movsb
mov
sbb
add
push
jle
pop
dec
movsb
icebp
into
sbb
and
sbb
hlt
cmpsl
test
callw
aas
mov
add
and
out
frstor
out
or
or
jnp
pop
clc
mov
xor
cmp
dec
push
mov
sub
aam
aaa
cmp
add
nop
inc
mov
adc
test
icebp
xchg
decl
arpl
jae
and
test
fnstsw
push
cmp
pop
xorl
subl
dec
pop
and
mov
lds
iret
and
mov
push
mov
repnz
scas
inc
jno
fadds
cmp
inc
xchg
cmp
sbb
xchg
mov
or
ljmp
aas
inc
and
popa
lea
es
out
cli
dec
ret
jmp
in
pop
ret
pop
push
int
pop
fadds
mov
mov
fsubs
mov
mov
cmpsb
int
adc
out
add
xchg
mov
adc
std
inc
jle
mov
out
push
push
sahf
sub
enter
fwait
inc
enter
jae
lods
scas
xchg
and
pop
push
xor
xlat
iret
inc
mov
insb
mov
push
pop
xor
dec
jnp
outsb
movb
mov
fnsave
cmp
mov
dec
inc
js
mov
insl
mov
sbb
sti
jmp
push
add
sub
mov
outsl
mov
sub
arpl
ja
sub
mov
sub
in
rorb
xor
pop
frstor
sbb
cmc
hlt
mov
sarl
test
pop
ret
aad
mov
fildll
nop
pop
inc
cltd
or
pop
sbbl
mov
cwtl
shrl
mov
mull
fnsave
jae
xchg
mov
rolb
aad
aad
pop
sahf
cld
or
test
or
mov
xchg
or
mov
jno
pop
stos
jo
fcomps
icebp
jae
xchg
insl
mov
stos
dec
test
sbb
ja
movsb
movb
lret
jg
ret
mov
mov
lds
xchg
dec
std
sub
lret
mov
mov
ror
pop
loop
ja
outsb
jp
sbb
xchg
jns
arpl
leave
inc
push
in
sahf
or
jb
aam
xrelease
dec
cmp
and
cld
mov
test
push
int3
enter
jl
cmp
std
outsl
or
jp
xchg
pop
adcl
ret
dec
pop
out
push
dec
xor
lods
icebp
add
xor
lahf
mov
pop
fs
and
out
jnp
test
push
add
incb
adc
mov
ds
pop
mov
sbb
cmp
adc
mov
inc
leave
dec
xchg
push
stos
mov
mov
out
mov
popf
arpl
push
int3
cmp
shl
mov
inc
mov
stos
ffree
and
lds
sbb
incb
ret
cli
cmp
iret
jl
fstpl
stos
adc
xchg
es
cmpsb
test
outsb
mov
lds
clc
or
xchg
pop
imul
inc
sub
inc
out
imul
sbb
loopne
pushf
jg
and
int3
ffreep
sti
or
pop
sbb
ret
insl
or
aad
mov
cmp
push
push
cmp
repz
mov
sbb
sbb
push
daa
mov
and
xchg
pop
mov
adc
mov
xor
push
rcrl
xchg
dec
dec
in
andb
es
jmp
repnz
stos
push
fists
dec
sub
inc
lret
mov
xchg
test
pop
mov
lret
push
xor
fsubrs
xchg
rorb
mov
pop
movsb
pop
inc
mov
adc
test
in
arpl
sub
xchg
pop
ror
jo
push
pop
cwtl
in
xchg
mov
out
lret
adc
cwtl
pop
mov
shlb
fists
xor
addr16
fwait
mov
js
addr16
fisubl
jne
inc
push
adc
test
aaa
push
iret
lods
pop
and
adcl
push
mov
jae
jg
sub
push
into
adc
dec
and
mov
test
adc
xor
jb
mov
push
add
leave
cmp
arpl
aam
sbb
call
sbb
mov
mov
sbb
clc
adc
sbb
fidivrs
mov
mov
int3
cmc
xchg
ljmp
push
in
test
mov
shrb
xor
mov
cmc
jge
or
bound
out
mov
imul
or
das
ds
js
add
inc
mov
jns
stc
sti
cmp
shlb
lock
push
pushf
jp
mov
addr16
jns
inc
push
jae
cli
mov
in
jbe
mov
xor
loope
popf
sar
lock
adc
sti
in
mov
mov
jae
jbe
jae
sbb
push
and
jno
outsb
shll
mov
repnz
or
or
loopw
mov
push
add
cmp
and
mov
jg
clc
pusha
jo
test
stos
sub
push
fbstp
cmpsl
pop
cmpsl
and
push
mov
sub
les
lock
pop
out
les
jno
je
jnp
xlat
mov
ja
cmp
sub
or
xchg
test
fmull
pop
outsl
jb
repnz
scas
js
fists
sub
dec
ret
je
dec
in
scas
je
or
mov
addr16
addr16
add
xor
popl
cmp
in
dec
and
xor
mov
cli
sbbb
das
xchg
adc
and
mov
sub
fiadds
rcll
les
arpl
xor
in
pop
pop
pop
outsb
push
out
cmpsl
loop
sub
and
or
popa
jbe
pop
in
call
mov
rcll
cmpsl
push
cmp
shll
repnz
jp
sbbl
lea
push
ror
sub
andl
pop
sbb
xchg
int
sub
test
add
movsb
sbb
test
mov
jg
dec
fimull
nop
test
mov
mov
in
pop
fldt
sbb
sub
outsb
lods
arpl
jmp
sub
addr16
push
xchg
lods
push
and
and
shlb
rorl
fs
dec
mov
lahf
jns
cmpsb
sbb
ss
push
ljmp
cli
ja
add
in
out
push
add
cmp
inc
adc
iret
pop
inc
pop
inc
aaa
repz
jbe
fdivs
aas
cltd
out
jl
push
sbb
popf
inc
in
jp
mov
ficomps
outsb
jae
rcll
js
xchg
mov
mov
dec
shrb
push
ss
out
rorl
or
dec
mov
neg
mov
sub
data16
fldl
push
jl
js
flds
inc
push
lock
lcall
mov
ret
mov
pop
mov
aad
aaa
stos
jl
jnp
cmpsb
jg
jbe
lock
jae
pop
jl
ds
sub
int3
enter
pop
divl
jmp
push
xor
stos
push
aaa
shlb
cld
xchg
pop
pop
ret
xor
pop
add
mov
sahf
mov
cld
pop
inc
dec
loopne
xchg
or
fisttpll
jmp
sub
inc
xor
or
or
into
sbb
jg
fnstcw
mov
call
xchg
inc
cs
mov
cmp
fst
sbb
cmpsl
loopne
ja
sub
fstps
int3
test
rcr
das
mov
loop
and
pop
dec
popa
xchg
jnp
outsb
jo
sub
dec
lock
or
lds
mov
xchg
mov
mov
jle
insl
js
lahf
push
addl
out
icebp
js
lcall
sahf
mov
repz
xor
sub
adc
jbe
iret
test
mov
cltd
fs
imul
test
stos
mov
stos
and
fwait
stos
insl
xchg
dec
ds
fisubl
mov
stos
xorb
jecxz
dec
sti
add
sbb
push
in
rcrb
push
mov
fdivr
sbb
push
pop
inc
popa
lcall
or
lds
sar
pop
lds
jb
dec
mov
addb
mov
ja
and
movsb
adc
aaa
ret
jo
aad
xchg
add
mov
xlat
mov
ja
inc
les
jg
mov
pop
mov
push
push
xor
mov
push
push
aaa
imul
sbb
data16
ljmp
mov
icebp
cmp
in
xor
call
hlt
or
test
scas
sub
int3
xor
dec
lds
sarb
mov
bswap
aaa
repnz
sub
stc
mov
fiadds
cmp
ds
push
mov
xchg
dec
xchg
jle
or
push
mov
or
ja
into
dec
sar
ja
das
out
adc
cmp
push
daa
pop
mov
daa
mov
dec
cmc
mov
rorb
or
mov
pop
dec
inc
lahf
mov
flds
cmp
ret
test
test
ljmp
adc
jno
fiaddl
push
sti
pop
inc
fcmovbe
mov
pop
loope
cwtl
pop
mov
daa
inc
inc
pop
xchg
outsb
imul
cmpsb
xchg
int
or
es
cmp
das
sbb
insl
jmp
fldenv
mov
fwait
sti
movsl
mov
adc
in
in
jbe
movsl
inc
dec
cwtl
enter
mov
or
out
xchg
out
sahf
mov
or
or
jo
mov
loope
push
adc
or
mov
adc
jl
iretw
iret
pop
sarl
lds
inc
sbb
insb
or
js
icebp
mov
add
repnz
dec
aas
xchg
sbb
ret
jb
flds
movsl
adc
mov
mov
mov
lds
and
mov
jl
and
out
gs
cmpsb
mov
xor
das
into
dec
or
mov
lods
sub
adc
mov
stos
inc
ja
or
fisubl
sarb
adc
mov
popf
push
lock
icebp
mov
xlat
inc
mov
push
mov
outsl
cli
stos
into
inc
pop
and
pop
mov
adc
xor
pop
xor
mov
push
sbb
std
popf
inc
andl
mov
xor
ljmp
stc
in
mov
call
rclb
std
aam
mov
jbe
ret
lcall
sbb
or
add
jno
jecxz
shrl
sbb
inc
jns
mov
add
popf
stc
sub
sarl
neg
mov
ljmp
sbb
popa
stos
mov
imul
mov
sub
push
imul
xor
jp,pn
sub
xchg
jns
jle
push
push
mov
repz
xor
mov
fisttps
mov
daa
add
add
fldl
aaa
sub
jae
sub
and
add
into
sti
add
ljmp
sahf
in
mov
push
dec
jmp
mov
fcomp
lods
and
pop
adc
and
push
xor
mov
jge
les
xchg
lret
mov
into
or
jo
pop
sub
pop
pop
jne
mov
in
pop
add
js
int3
movsb
fucomip
ds
int
push
pop
adc
and
add
scas
pop
pop
mov
lea
call
call
sub
xor
dec
mov
aam
mov
push
dec
scas
cmp
sbb
add
and
das
dec
testb
in
jmp
xchg
jl
repz
js
add
xchg
push
psllq
dec
xchg
dec
je
lods
jle
popf
lahf
jg
sub
or
js
or
xchg
push
mov
jns
lods
maskmovq
dec
or
and
pop
add
mov
jae
hlt
les
enter
sahf
jecxz
shlb
lahf
cmpsb
pop
cmp
xchg
fmull
push
cmp
mov
pop
or
mov
dec
xchg
pop
or
mov
movsl
repnz
xor
jb
push
xor
jge
mov
shlb
mov
mov
ror
add
push
stos
or
es
cmp
and
xchg
stos
xor
icebp
xchg
jne
add
adc
add
dec
inc
fisubrl
icebp
xchg
mov
movsb
or
jno
mov
loop
or
and
xor
insb
test
mov
sbb
mov
pop
mov
and
imul
xchg
imul
jne
outsl
push
test
sarl
push
adc
mov
movsb
cmp
aam
ret
popa
and
cld
aas
mov
lret
sarb
out
fistpl
jbe
push
popf
sub
sbb
xchg
lock
aaa
pop
sub
std
nop
popa
mov
outsb
or
or
sub
add
fcoms
inc
mov
sti
pop
pop
xchg
cmc
mov
aas
popa
and
dec
loope
jmp
xchg
movsl
lods
mov
inc
and
mov
xor
or
mov
pusha
ret
jne
push
push
cld
nop
sub
out
xchg
jno
enter
jg
insl
jno
push
fs
loop
push
bound
out
mov
push
xor
clc
ss
movsl
repnz
jo
fs
mov
xor
fisubrs
dec
and
inc
cwtl
dec
sub
cmpsb
pop
jno
arpl
jnp
mov
xor
add
pop
fnstenv
pop
adc
lret
push
jmp
in
mov
xchg
insl
xor
mov
std
mov
xchg
sarl
push
cs
je
adc
js
sbb
pop
pop
mov
or
outsl
lcall
push
push
and
into
mov
pop
fstpl
mov
je
adc
add
dec
sti
pop
xor
cmpsb
cwtl
jl
cmpsb
xchg
pop
ljmp
imul
mov
add
mov
sub
or
addr16
mov
je
aas
iret
rclb
out
jbe
repz
sahf
in
cltd
lock
or
add
sub
pop
fidivrl
mov
dec
add
xor
sub
scas
pop
push
mov
mov
inc
jb
pop
lret
add
pop
out
iret
push
jecxz
jbe
mov
jno
adc
fs
outsb
adc
std
pop
push
loope
xchg
mov
enter
mov
sbb
inc
dec
xor
shr
les
mov
imulb
mov
sub
int
mov
inc
inc
or
or
out
jns
and
arpl
push
add
cld
or
lock
pop
imul
fnstcw
dec
js
dec
scas
push
cmc
mov
mov
inc
daa
dec
inc
xor
iret
inc
hlt
add
stc
popa
fnsave
leave
cmp
and
ret
jecxz
mov
cmp
gs
idivl
cmp
dec
inc
sti
adc
jle
adc
int
imul
rorl
cs
xchg
pop
sub
dec
jl
cmp
aad
mov
add
dec
pop
and
push
ficoml
into
mov
scas
cmp
jb
sarb
daa
lret
loop
sub
hlt
mov
push
xchg
lds
xlat
bound
out
xchg
xor
sub
call
push
in
in
jne
jns
push
cmp
xchg
inc
dec
xor
imul
sub
sub
pop
xlat
dec
xchg
cmpsb
adc
repnz
fisttpl
mov
pop
inc
mov
cmp
xlat
stos
mov
clc
std
jnp
push
imull
or
jmp
mov
and
jno
xchg
or
jbe
or
push
loop
sub
rol
mov
fucomi
push
inc
jnp
pop
clc
xchg
scas
adc
mov
dec
lret
flds
add
xchg
sub
stos
std
aas
aas
jae
fildl
insl
jns
mov
ja
ja
stos
add
pop
xor
repz
lret
mov
mov
ljmp
in
push
cmpsl
pop
mov
push
push
mov
inc
movsb
popa
cs
dec
push
adc
popf
inc
sub
or
jmp
mov
xlat
push
and
mov
mov
mov
pop
test
dec
cmp
push
and
test
fdiv
fwait
jmp
fldl
xchg
ret
jecxz
inc
xor
add
daa
aas
pop
leave
push
pop
out
popf
aas
cld
mov
js
dec
out
pop
cmp
adcb
arpl
mov
iret
lds
mov
outsl
rcr
or
or
leave
jg
enter
je
jecxz
dec
adc
jne
mov
fcoms
push
std
xor
test
pop
push
push
mov
push
or
jle
gs
xchg
mov
jg
jl
cmp
das
mov
xor
inc
addr16
add
mov
cmpsb
cmp
xchg
out
in
and
xor
xor
push
fiadds
mov
lcall
add
adc
das
sbb
repz
jo
inc
inc
xchg
cld
insl
jg
test
xor
inc
xor
imul
push
imul
aad
lock
cmp
mov
add
dec
daa
scas
sbbl
scas
lds
repz
inc
inc
xlat
cmp
je
sub
xchg
cmp
cld
aas
inc
inc
sub
pop
rcll
push
popf
xor
xor
pop
push
inc
jns
mov
mov
inc
fsin
sbb
mov
dec
dec
inc
js
clc
cs
aaa
inc
dec
repnz
dec
xor
imul
fstpt
mov
cld
addr16
out
jmp
lret
xor
cmc
out
pop
arpl
cli
out
cmc
lret
or
test
nop
lahf
adc
stos
sarb
add
mov
push
xor
test
mov
pop
inc
xchg
mov
std
repnz
test
fbld
inc
sub
xchg
icebp
or
cmp
and
fnstcw
into
insl
fsubl
mov
lods
lock
jno
pop
ds
inc
fstp
daa
in
dec
xlat
ja
gs
int
and
test
ret
test
pushf
jmp
sbbb
sbb
adc
jo
mov
xor
xor
push
into
dec
sub
mov
mov
mov
cmp
push
xchg
movsw
mov
fwait
dec
repnz
or
xlat
mov
loope
or
divb
cli
popa
and
cmp
xor
imul
mov
nop
out
sbb
leave
xchg
pop
scas
dec
mov
or
popf
in
xchg
inc
jg
test
and
gs
lret
pushl
lock
inc
fidivrl
jne
jge
icebp
cld
mov
arpl
arpl
rclb
fs
popa
test
rol
addl
out
xabort
das
push
cwtl
movsb
sbb
xor
data16
and
frstor
sbb
mov
in
fistl
xor
out
gs
sahf
cmc
lahf
jnp
imul
repz
add
xchg
sti
out
push
lcall
les
mov
jle
test
gs
mov
andnps
std
mov
sub
stos
enter
imul
dec
cmp
cli
prefetch
mov
inc
cmp
sbb
mov
cli
adc
pop
mov
pop
lahf
fnstenv
sub
sbb
sbb
in
jbe
insb
push
pop
dec
xlat
in
jnp
fldcw
scas
push
pop
mov
xor
jmp
cmc
jecxz
test
cmc
mov
lock
mov
xchg
clc
or
clc
or
pop
divb
fwait
xchg
fisubrs
sub
rol
sbb
fcoml
mov
popa
and
aad
mov
inc
out
cmpsl
cmp
mov
adc
or
mov
and
pop
scas
or
adc
cltd
insb
inc
enter
or
mov
mov
pop
loop
sti
dec
std
data16
fiaddl
dec
bswap
inc
inc
mov
and
enter
scas
or
dec
mov
mov
dec
inc
xor
lea
and
rcl
test
scas
dec
popf
sub
mov
cmp
sbb
inc
pop
add
lret
test
adc
jle
pop
les
fwait
rcr
andb
arpl
xchg
inc
add
push
andb
cmc
mov
aas
movsl
subl
je
cmc
cmp
leave
dec
sbb
icebp
stos
add
cmc
adc
or
jnp
pusha
mov
and
ror
mov
mov
add
aam
lahf
cmp
rol
mov
jmp
and
lahf
xor
pop
pop
add
and
sub
add
sbb
xor
or
sahf
add
xchg
out
popf
push
je
jmp
jo
ss
in
test
insb
out
cmp
mov
pop
adc
scas
sbb
mov
inc
sbb
inc
nop
mov
inc
das
push
gs
jno
popa
push
xchg
ljmp
pop
int3
lods
jle
sbb
push
js
lods
xor
and
cld
inc
xorl
mov
cld
loop
ficoml
in
outsl
xor
les
and
cltd
and
aas
das
push
mov
xchg
push
pop
jl
push
xchg
inc
mov
ret
push
lret
ljmp
jne
scas
pop
test
adc
xchg
mov
mov
inc
stos
xchg
jg
pushf
jmp
insb
and
fists
aam
xlat
xchg
testl
stc
lcall
arpl
xor
insb
pop
cmpsb
lcall
lea
sbb
fs
in
cmp
sbb
div
clc
movsl
xor
shrb
lds
outsl
roll
insl
and
xchg
jno
mov
xchg
cli
loope
and
adc
push
lods
or
fadd
int
into
adc
adc
inc
add
fmull
sub
jae
sbb
mov
push
push
lods
ss
call
test
pop
subl
mov
leave
lock
jbe
dec
lcall
lds
hlt
dec
mov
movsw
andb
mov
dec
xor
pushf
stos
insl
sbb
adc
dec
fnstenv
xorb
mov
xchg
bound
rclb
sub
test
dec
sub
jl
jo
pop
in
bound
fs
ss
dec
sub
mulb
aad
ror
and
pop
iret
sub
jge,pn
test
xchg
addr16
das
js
xchg
sti
in
outsb
dec
sub
fs
aaa
pusha
lahf
and
call
add
mov
xor
filds
scas
rcrl
call
fsubrp
mov
test
xor
in
mov
daa
insb
pop
inc
jnp
xchg
push
mov
dec
inc
sbb
pop
in
mov
add
jge
outsb
inc
push
aas
adc
aam
aas
dec
push
movsl
fldcw
daa
es
stos
cmp
pop
ja
inc
das
int
fbstp
jne
sbb
cmp
push
fwait
aaa
popa
pop
cwtl
mov
rolb
lret
lahf
ss
push
ja
xchg
inc
inc
stc
push
frstor
stos
pop
mov
int
adc
fisttpl
mov
sbb
push
jbe
inc
jno
insl
or
divb
and
shld
stos
adc
adc
xchg
jno
xchg
cmpsl
xchg
cli
xchg
sub
ret
cmp
imul
cmp
or
adc
add
test
bound
or
push
rcrb
mov
inc
dec
push
vmovhpd
cltd
data16
rclb
and
cmp
xlat
dec
sub
ss
leave
xchg
xchg
xor
in
bswap
sub
iret
mov
and
jbe
sbb
mov
leave
js
xor
cli
push
loop
cld
testl
pop
cmpsb
fbstp
mov
cwtl
stos
je
inc
inc
jbe
jle
pop
jne
jle
jmp
sub
gs
adc
xor
sbb
lret
adcb
call
je
scas
cmpb
fidivrs
pop
shll
sub
stos
pusha
adc
jle
cmp
sub
add
add
jg
xchg
dec
ja
mov
push
sbb
add
fadd
in
mov
out
lock
adc
cs
add
sbb
cmp
subl
inc
push
sbb
leave
xchg
jo
rorb
out
sub
das
xor
dec
aas
neg
arpl
ds
popa
mov
loope
das
push
mov
dec
mov
mov
push
mov
insl
cmc
sbb
inc
pop
out
insb
and
adc
fadds
in
add
std
xor
imul
cwtl
dec
sub
push
dec
jecxz
sub
jmp
cmpsl
call
jo
stc
push
lock
in
out
mov
scas
push
adc
adc
dec
adc
jo
ret
jns
xchg
push
ficoml
mov
xor
cmp
cmpsl
mov
adc
mov
jno
sbb
sbb
cmp
adc
and
add
ss
movsl
dec
fpatan
repz
xchg
aaa
xchg
js
xor
dec
aaa
adc
hlt
push
jno
imul
ds
lock
stos
mov
lahf
pop
add
inc
xor
inc
arpl
movsb
xor
cmp
inc
push
pop
orl
nop
add
mov
loopne
aas
lret
xchg
fdivp
hlt
pop
popf
shrl
pop
test
adc
sbb
cmp
pop
repnz
repz
inc
sub
xor
dec
push
imul
xchg
jbe
push
pop
iret
mov
fistpll
mov
fsubrl
enter
cltd
mov
roll
rolb
je
sub
out
rol
mov
cmpl
int3
ss
mov
sbb
sub
nop
loopne
dec
aam
cmp
jecxz
insl
pop
jge
lret
test
pop
pop
rep
inc
pusha
lcall
sub
pop
test
lock
jle,pn
dec
sub
mov
mov
xor
pop
pop
lcall
xchg
ljmp
mov
sub
or
out
lret
or
xlat
jae
inc
out
jb
cmp
mul
push
iret
orl
sub
aam
jp
inc
stos
loopne
sub
rclb
test
lods
mov
mov
cmp
jae
and
outsb
lods
push
pop
fs
sarl
pop
in
xchg
dec
mov
pop
cmc
pop
cmp
xor
pop
jns
push
imul
cld
shll
adcb
push
xchg
out
xchg
mov
int
aaa
xchg
xchg
mov
loope
cmp
jb
lods
outsl
lods
push
xor
mov
ljmp
das
fdivrl
ss
xor
and
mov
mov
add
into
push
sbb
int3
cmp
xchg
adc
mov
push
mov
lret
test
mov
jl
xchg
test
push
mov
mov
lcall
jno
rcr
jbe
adc
pop
cltd
pusha
mov
dec
dec
xor
xchg
repnz
in
ss
jecxz
rorb
dec
int3
fsub
rorb
add
or
and
dec
inc
mov
ds
ret
ret
stos
push
mov
iret
testl
push
sub
push
arpl
jo
test
pop
adc
xlat
iret
das
push
push
addr16
sti
mov
shll
adc
xor
jle
push
adc
cmp
andl
mov
fs
mov
xor
xchg
mov
lds
jae
fwait
mov
pop
movsb
ret
mov
ret
xchg
lods
xor
xor
sbb
scas
dec
cmpsl
in
pop
in
add
xchg
sar
loop
pop
dec
stos
add
xchg
dec
or
fcoml
ds
cwtl
add
aam
push
mov
jnp
xchg
mov
mov
enter
push
xchg
icebp
sub
repnz
mov
dec
mov
test
hlt
into
outsl
adc
sar
push
push
mov
loopne
add
movsl
stc
stc
sbb
notb
in
insb
imul
jl
aas
ror
or
imul
ljmp
pop
rcr
rolb
fsts
es
sarb
sub
inc
dec
sub
lea
add
add
adc
fbld
xchg
sbb
shrl
jg
mov
sbb
cs
idivb
in
dec
int
pushf
cmpsb
out
mov
mov
cmpsl
lea
aaa
ljmp
sbb
mov
in
fsub
test
and
loopne
es
outsb
sbb
scas
fiaddl
aas
aaa
insb
les
xor
lahf
scas
push
scas
bound
mov
mov
pushf
insl
dec
pop
push
inc
mov
pop
xor
jb
push
jbe
add
je
test
cmp
test
cwtl
fwait
int
scas
xchg
xchg
sub
xor
ficoms
mov
subl
imul
adc
inc
xchg
icebp
xchg
cltd
pop
pop
jg
mov
mov
inc
mov
push
data16
sti
sahf
sbb
xor
aad
sti
xchg
pop
xchg
les
pushf
mov
dec
out
les
mov
add
and
push
push
out
mov
iret
and
je
scas
sub
fstl
scas
jmp
aas
movl
fidivs
and
cli
testb
insb
sbb
push
sbb
jne
xor
cmc
lahf
ds
popf
nop
sub
out
sbb
add
out
jo
dec
lock
repnz
call
mov
arpl
adc
out
maxps
push
adc
movsl
insb
scas
xor
into
sbb
mov
xor
pop
xchg
and
mov
mov
outsb
adc
sbb
shrl
cwtl
jmp
lret
jnp
in
lret
adc
and
enter
popa
cmpsl
sbb
fisubs
xchg
inc
mov
or
pusha
mov
ja
aas
loop
stc
push
scas
mov
jae
mov
testl
loopne
test
xor
cmp
iret
and
pop
mov
sub
loope
aad
fs
test
jle
mov
lret
repz
and
cli
or
movsl
decb
lret
scas
inc
or
jl
adc
cmp
movsb
jnp
bswap
mov
out
mov
mov
dec
adc
fidivl
jp
idivb
cltd
xlat
stc
sub
mov
fnstsw
sar
mov
outsl
ljmp
insl
faddl
jb
fbstp
sbb
in
int3
int
lods
jl
lret
aas
or
mov
loopne
leave
xor
push
add
sti
nop
cmp
xchg
or
cmp
jnp
sbb
std
mov
in
daa
xchg
pop
sbb
rolb
xchg
addb
cli
repnz
test
in
xor
xor
cmp
adc
fsubrl
jl
test
call
dec
mov
loop
pusha
mov
push
in
mov
push
ret
fnstcw
nop
pusha
lahf
xlat
lods
mov
or
jl
mov
pop
cmp
adcl
mov
mov
or
cmc
adc
dec
cwtl
mov
add
dec
or
js
ret
ss
nop
je
or
frstor
arpl
mov
test
fsubr
int
xchg
call
aad
aas
arpl
lcall
pop
insl
push
outsb
lea
cmp
dec
add
aad
and
cmp
jecxz
sahf
pop
sbb
test
les
test
outsl
rorb
pop
dec
pop
sub
in
lcall
divl
dec
mov
scas
jo
push
adc
sbb
add
scas
iret
adc
nop
sbb
xor
rcrl
test
jmp
xchg
pop
push
ss
inc
jecxz
sub
pop
pop
addb
fucomip
sti
mov
push
lods
imul
inc
fisttpll
xchg
dec
popa
rorb
in
xor
std
sub
inc
fsubs
fptan
into
mov
sub
in
notl
mov
xor
pop
xor
mov
in
or
dec
mov
mov
scas
outsl
mov
push
ret
rcrb
inc
dec
and
in
and
jne
sbb
stos
and
les
sbb
int
dec
jp
movsb
loopne
aam
inc
mov
aad
mov
and
add
pusha
mov
or
pushf
pop
out
sbbb
jl
stos
push
mov
and
mov
or
inc
pop
xor
push
mov
inc
xchg
xchg
pop
pop
outsl
xchg
inc
adc
icebp
dec
push
cmp
inc
into
lret
inc
pop
dec
lret
pop
loope
push
js
lods
outsb
xchg
insl
in
jnp
cmp
ja
lcall
cmp
pushf
cmp
dec
mov
sub
push
in
pop
lahf
in
cmc
jl
pop
and
call
in
push
jb
mov
jnp
sbb
lret
in
sub
fwait
xor
loop
and
je
loop
ja
fmull
movaps
pop
test
in
int
cmp
clc
push
xchg
mov
add
das
cmp
mov
mov
repnz
out
jp
xor
shrb
jns
mov
movsb
or
in
rcrb
mov
xlat
clc
xchg
dec
imul
js
push
into
data16
push
shlb
lods
jb
bound
out
pop
ss
je
sbb
xlat
cmp
ds
push
mov
imul
sbb
inc
aam
leave
addr16
int3
dec
outsl
pop
ds
ficomps
mov
out
repz
push
adc
std
pop
loopne
jnp
push
adc
int
loope
push
sahf
push
cmpsb
sub
pop
int3
rclb
and
outsb
pop
out
aaa
inc
fisttpll
std
mov
adc
jbe
adc
inc
or
out
lret
push
jg
aaa
cmp
push
popa
outsb
stos
scas
push
adc
or
test
mov
adc
dec
adcb
data16
aam
sbbl
sbb
mov
ret
jne
mov
dec
inc
lahf
in
mov
push
xchg
adc
lahf
roll
lret
in
shl
dec
repz
ja
jmp
scas
mov
pop
in
cmpsl
inc
test
and
into
xorl
dec
xchg
fwait
inc
into
xlat
jns
vminsd
inc
xor
pop
sub
mov
in
mov
mov
mov
inc
adc
mov
aad
sbb
mov
jne
stos
xchg
jae
push
mov
mov
clc
pcmpeqd
jnp
sbb
test
fdivl
movsb
int
pop
or
scas
movsl
mov
add
xor
cmp
mov
or
mov
sub
or
adc
das
cli
cmc
cmc
adc
cmpsl
sbbl
test
push
xchg
in
imul
inc
in
repnz
mov
xchg
adc
sbb
sarb
std
add
adc
clc
sub
stos
fisttps
pop
mov
add
push
cmp
int
pusha
cmp
bts
xor
xchg
sbb
add
pop
ror
insb
mov
aaa
mov
pop
sahf
mov
out
xchg
addr16
in
cmp
rolb
andb
add
adc
cmp
or
adc
dec
popf
aaa
lods
dec
inc
lods
out
sub
imul
aaa
pop
dec
xor
lods
mov
mov
fiaddl
adc
dec
mov
movsl
cld
cmp
mov
fnstsw
inc
daa
mov
xor
into
sahf
mov
jecxz
inc
dec
les
pop
pop
inc
jne
adc
fnstcw
pop
movsb
dec
scas
enter
ja
into
pop
pushf
rcll
inc
xchg
jmp
out
stos
mov
or
lea
dec
push
fucomi
jne
push
insl
jg
xor
aas
adcb
fwait
mov
or
lret
mov
fs
cmp
jae
ret
push
lret
mov
mov
das
stc
lods
lcall
pop
sub
xor
sbb
sahf
push
and
in
lods
add
pop
adc
sbb
push
fisttpll
aam
lcall
bound
cltd
cmp
mov
enter
lea
pop
loope
push
popf
std
xchg
mov
jae
out
imul
fcomi
mov
xor
jne
shlb
pushf
je
mov
xor
cmpsl
sub
push
int3
sub
sbb
pop
dec
mov
jb
mov
popa
mov
in
inc
scas
sti
out
in
scas
adc
cmc
jle
and
lds
mov
push
xchg
outsl
pop
test
cli
mov
insb
adc
push
lret
mov
insl
add
jg
pop
and
std
mov
rol
add
fistl
ja
mov
mov
adc
xchg
sub
dec
or
and
fs
out
and
and
subl
inc
push
jo
inc
xchg
popa
clc
push
mov
fpatan
negb
or
jb
mov
adc
aaa
dec
sub
das
les
scas
sub
inc
jnp
and
test
cmp
push
jns
push
scas
xchg
sub
dec
cs
push
mov
jmp
and
pop
fs
adc
cmc
pop
iret
mov
outsl
loope
aad
repnz
jg
in
mov
add
jbe
and
out
daa
xlat
shl
lds
lahf
sahf
loopne
outsl
mov
stos
cmovno
dec
cmp
and
scas
addr16
fidivrs
mov
or
push
test
mov
or
add
mov
jmp
sub
sub
sbb
inc
insb
test
outsb
sbb
cs
sub
addr16
cmpsl
cmp
daa
adc
push
ret
icebp
popf
push
ret
std
jp
and
push
xabort
xchg
insl
lahf
jnp
inc
lock
iret
inc
fyl2xp1
inc
rol
pop
sub
pop
jnp
lea
ret
out
movsl
sbb
lods
and
aas
lds
and
fidivl
push
mov
or
and
movsl
or
sti
or
jmp
xor
insl
sbb
in
ret
popa
push
inc
pop
xor
out
push
orl
sub
out
inc
mov
fsts
mov
pop
add
int
jge
inc
ljmp
sahf
int3
xor
push
fdiv
push
xor
and
imul
outsb
cli
data16
inc
inc
dec
push
mov
pop
fs
sbb
dec
sbb
subl
jb
es
dec
pop
push
mov
imul
test
mov
loop
pop
mov
jno
lods
iret
popf
sub
mov
push
jmp
mov
dec
mov
dec
in
pusha
cmp
mov
jb
aas
ret
mov
lods
cld
out
xchg
jb
mov
js
mov
xor
mov
js
lcall
aam
clc
adc
and
dec
iret
xor
movsl
push
dec
cmp
xchg
mov
jns
jne
adc
int
add
cmp
cld
xor
test
dec
cmpsl
cmpsl
outsl
lock
daa
push
fstpt
xor
add
jecxz
mov
xchg
add
sti
lods
imul
inc
inc
cmp
push
ja
or
les
int
and
imulb
inc
inc
inc
mov
xchg
push
mov
in
mov
in
in
cmp
or
int
imul
test
or
mov
sbb
test
rolb
jp
fimuls
iret
cmpsl
pushf
pop
adcb
daa
pop
test
jle
dec
mov
loopne
adcb
sbb
jno
cltd
xor
lock
in
mov
negb
or
sahf
sub
or
je
sub
jge
icebp
sti
and
dec
push
push
or
push
cltd
std
jecxz
mulb
mov
mov
and
pop
roll
dec
dec
fstl
out
flds
iret
loope
sarl
sahf
sub
or
jge
xchg
pop
sub
dec
or
rcrb
jb
stos
jle
sbb
inc
mov
adc
insl
in
inc
lds
cmp
cmp
lret
mov
ret
cli
in
in
push
add
xor
dec
mov
xchg
movsl
or
ret
cmpsl
shll
xchg
addl
clc
std
out
mov
adc
mov
hlt
xchg
cs
call
inc
sub
out
jno
jmp
icebp
ret
push
inc
ja
shrb
ret
pop
outsl
rorb
xor
aaa
mov
cmpsl
repnz
push
add
sbb
test
xchg
mov
out
ja
xchg
imul
add
xchg
inc
movsb
nop
js
mov
addr16
xchg
jno
add
mov
pop
inc
sub
repz
xor
push
mov
int
test
sbb
sbbl
arpl
outsl
mov
ljmp
cmp
mov
xor
sbb
ja
into
cmp
ljmp
cmp
into
cs
shrb
jmp
adc
sub
and
dec
dec
into
orl
sbb
mov
jecxz
orb
insl
sahf
add
aas
jecxz
pop
leave
dec
add
ret
mov
push
mov
push
rcl
ror
push
outsl
xor
push
mov
jmp
xchg
or
ret
fidivrl
dec
xor
repnz
mov
stc
and
mov
sahf
rcr
popa
mov
push
jle
mov
ljmp
xorb
xor
std
nop
push
imul
mov
out
xor
jbe
mov
push
cld
fcoms
push
frstpm(287
sbb
add
mov
lea
adc
xchg
shrl
cmp
push
xchg
mulb
xor
add
lea
jp
push
xchg
stos
leave
mov
pop
mov
movsl
mov
popf
dec
cmpsb
mov
xor
jle
in
mov
jle
add
or
cld
pop
cld
daa
ficoml
cli
adc
mov
fstpt
xor
mov
leave
jmp
imul
adc
adc
ja
jne
xor
scas
shl
xchg
rcr
sub
mov
ret
pop
jnp
cwtl
daa
sbb
pop
sbb
mov
inc
fcoms
adc
lock
sbb
imul
mov
scas
dec
jl
nop
jecxz
dec
out
mov
cmc
outsb
enter
lea
ja
add
dec
cwtl
roll
or
nop
data16
jmp
dec
and
in
out
cmc
mov
add
dec
out
dec
lods
out
jl
sti
popf
lret
or
mov
shll
test
jge
sub
pushf
fcmove
fmuls
sub
lods
lahf
cmpsl
inc
push
adc
xor
jo
out
push
mov
in
or
inc
push
xchg
daa
test
scas
aad
cmp
add
pop
mov
in
loopne
out
or
adc
xchg
ret
mov
cltd
cs
icebp
cmp
sahf
xchg
adc
mov
or
rolb
xchg
test
mov
loope
dec
or
cmp
outsb
decl
stc
repz
out
stos
xor
sbb
xchg
ret
add
ret
inc
sub
and
lret
push
push
cld
cwtl
iret
cmpl
inc
sbb
push
out
mov
ljmp
jmp
lahf
inc
lret
in
cmp
ss
test
mov
xor
mov
data16
mov
dec
jb
out
aad
sti
dec
adc
xchg
sub
mov
mov
inc
imul
insb
jno
xchg
adc
or
sub
push
cmp
inc
pop
hlt
das
push
adc
xor
imul
int
lock
mov
sub
cmp
add
cs
int
push
sbb
and
aaa
nop
ficoms
adc
rolb
outsb
int
aas
in
es
testb
xor
pop
push
movsl
xchg
stc
test
test
mov
and
test
js
sbb
out
mov
or
pop
inc
aam
push
or
inc
xchg
ret
ret
mov
push
idivb
mov
dec
mov
xchg
out
arpl
aaa
andb
mov
shrl
test
or
movsl
imul
or
icebp
pop
in
pop
xor
dec
cmp
lret
mov
mov
sti
mov
popf
mov
clc
cmc
test
loopne
ret
push
xchg
dec
add
leave
adc
outsl
fidivs
ljmp
jl
leave
sarb
jbe
and
lahf
pop
xor
dec
std
loope
pop
iret
xor
cmp
add
pushf
insl
mov
repnz
mov
dec
mov
push
jb
imull
lret
filds
test
cmp
xchg
push
aaa
dec
sub
aaa
pop
jno
jl
push
cmpsb
loop
xchg
jbe
into
cmp
adc
dec
sub
add
arpl
ss
add
mov
adc
bound
dec
xor
cmp
es
adcb
xchg
mov
sbb
outsl
add
lods
cltd
adc
fwait
aaa
mov
inc
xchg
ja
dec
imul
push
filds
inc
dec
in
dec
sub
mov
and
mov
lock
xor
lods
push
pop
stos
cs
pop
jnp
pop
inc
movsl
fs
pushf
outsl
loop
stc
lret
aam
add
pop
xchg
movsl
inc
mov
fwait
cli
fidivs
rorb
push
jp
cmpsb
adc
inc
mov
sarl
rcrb
imul
in
xchg
cld
jge
sbb
xchg
push
fimull
and
les
and
xchg
sub
jno
xchg
insl
sti
push
jnp
rcll
inc
dec
mov
mov
loope
insb
jle
out
lret
fs
cmp
arpl
scas
push
out
clc
sub
icebp
in
cmp
mov
or
cmc
and
push
iret
mov
cmpsb
addr16
cmpsb
xchg
mov
lahf
loopne
fistpl
lods
insl
repnz
mov
jae
push
mov
aam
sub
out
cwtl
push
loopne
enter
push
dec
dec
mov
rclb
jnp
dec
mov
mov
sahf
imul
xchg
mov
rcll
int3
dec
push
fmuls
add
clc
in
add
sbb
mov
mov
add
fdivr
pusha
xchg
jae
push
popf
dec
mov
das
or
jne
sarl
xchg
push
imul
js
pop
add
xchg
movsb
outsl
and
out
and
aam
xchg
in
aad
mov
jbe
test
mov
dec
mov
mov
push
adc
mov
dec
testl
cli
adc
inc
jnp
jle
sbb
repnz
sbb
xor
pusha
xor
xor
pop
pop
pushf
sbb
lahf
daa
pop
fsubrs
imul
aaa
sbb
push
push
pushf
or
loope
lods
or
aam
cmc
bound
ja
pop
push
jbe
sbb
xchg
repnz
inc
cld
mov
lret
jp
adc
inc
xlat
data16
cmp
pushw
xchg
shlb
adc
rcrl
dec
iret
test
fwait
sub
sbb
dec
scas
in
cmp
adc
cmp
cmpsb
jns
mov
test
arpl
in
or
stos
push
adc
addb
mov
in
xchg
fidivrs
cld
jnp
mov
inc
in
pop
cmp
push
mov
sbb
adc
add
repz
incl
daa
cmpl
fisttpl
mov
cs
add
out
loopne
jmp
repnz
jmp
cmc
push
repnz
pop
sbb
xor
pushf
pop
dec
cmp
xor
and
flds
adc
stos
insb
push
stc
jnp
adc
imul
lret
xchg
push
int
ss
add
int3
mov
sub
jae
clc
ja
pop
sbbb
out
mov
jmp
pop
push
rclb
vpsraw
pushf
cmp
imul
sbb
jecxz
out
lods
adc
cmpsl
jns
mov
adc
repnz
fwait
xor
jecxz
sahf
push
cmp
rcrl
sahf
loop
cmpb
pop
data16
lods
dec
inc
push
and
shlb
or
imul
out
pop
inc
daa
inc
call
cltd
or
out
mov
js
or
loope
daa
aad
sub
dec
adc
fnstenv
add
ljmp
pop
ljmp
int3
adc
nop
or
pop
sub
pushf
leave
roll
sub
sbb
mov
fnstsw
test
push
xchg
cmp
mov
inc
aam
mov
xlat
nop
fbld
xchg
cmp
cld
test
mov
int
mov
inc
idivb
and
cs
jl
xorl
mov
pmuludq
es
pop
clc
sub
xlat
push
and
adc
mov
add
incl
xor
imul
inc
std
enter
lock
aam
repnz
adcb
dec
clc
jo
sbb
aas
mov
cli
idivb
das
or
xchg
push
inc
pop
int
test
adc
lods
hlt
inc
stos
nop
in
pop
clc
hlt
dec
inc
push
popf
arpl
imul
xor
xor
sahf
xchg
add
insb
inc
rol
or
inc
popf
and
rclb
and
xchg
mov
ds
inc
xor
cltd
popa
int3
in
pop
and
pop
cmp
dec
jo
sbb
xchg
inc
cmpsl
xchg
mov
xchg
out
outsl
push
iret
nop
sbb
das
movsl
xor
mov
jecxz
jp
into
loop
add
cmpsb
inc
popa
rcrl
loopne
punpckhbw
adc
xchg
into
or
jmp
pop
leave
mov
mov
push
pop
pop
jmp
jge
dec
add
dec
das
ljmp
std
orl
aam
sti
cmp
dec
adc
mov
push
xor
add
outsl
jmp
and
daa
lock
xchg
into
mov
lods
jg
cli
pop
jns
bound
adc
mov
xlat
or
pop
mov
jns
in
push
iret
dec
pop
mov
xor
xchg
mov
xchg
mov
cmp
sti
mov
fidivl
mov
mov
mov
mov
sbb
jae
pop
jno
lcall
mov
dec
inc
mov
ljmp
pop
xchg
ss
sbb
cltd
popf
lahf
mov
push
decb
mov
lahf
inc
jns
mul
xchg
adc
add
addr16
cmp
cmp
loope
addr16
lods
xchg
aad
sbb
push
out
sub
pop
fimuls
jbe
aam
dec
cmp
sub
sahf
pop
enter
hlt
leave
or
xchg
cmpsb
lcall
das
and
xchg
inc
cli
pop
imul
jb
stos
jbe
sarl
into
rcr
pop
and
es
mov
test
mov
push
mov
or
decb
jge
insl
cmp
popa
dec
add
aaa
int
mov
popa
insb
ss
pusha
enter
into
es
and
mov
mov
std
mov
in
shll
ljmp
and
adc
or
add
and
dec
add
mov
xchg
or
fisubl
sbb
cld
aaa
mov
in
fdivs
pushl
and
push
and
cmp
test
loop
fs
xchg
dec
jmp
add
pop
sbb
xchg
inc
mov
cmp
adc
insl
pop
icebp
shll
stc
nop
and
adc
outsl
les
sub
and
sbb
jl
popf
aas
out
loop
in
pop
ljmp
push
out
cmc
or
lret
or
mov
mov
push
cmp
mov
xor
cmpsl
pusha
pop
outsl
addr16
std
stos
pop
cli
fmuls
test
fmulp
icebp
mov
sti
pop
cmp
cmpsb
lods
mov
jmp
jmp
cmovl
mov
xchg
add
mov
jecxz
push
std
mov
mov
pop
jg
decl
data16
movsb
inc
jmp
pusha
jp
std
aas
stos
mov
incb
mov
lock
and
add
aas
aas
aaa
test
popf
dec
sti
cmpsl
lods
or
sub
imul
push
sbb
or
cmpsb
jo
jg
cmc
jl
es
negb
push
andb
add
add
dec
xchg
andb
dec
inc
push
xlat
fists
xchg
loopne
or
shl
mov
jnp
jbe
lret
outsl
xchg
push
imul
add
mov
mov
mov
fs
fbstp
inc
pop
cmp
repnz
in
shrb
pushf
add
mov
mov
adc
daa
loope
xor
pop
mov
cltd
lcall
and
outsl
xchg
call
push
pop
daa
adc
ljmp
mov
mov
ret
mov
adc
fldenv
ret
mov
dec
int
sarl
dec
or
push
in
pop
xor
je
aaa
into
pop
cmp
sub
adc
jns
push
inc
lods
or
mov
enter
loopne
cmp
cli
mov
or
lret
iret
pop
cli
in
sarl
lahf
mov
mov
into
ja
push
std
or
cs
mov
fidivrl
aad
push
mov
cli
push
pop
jb
adc
popa
out
adc
push
loop
jp
loopne
dec
jne
mov
repnz
sub
lds
add
je
stc
mov
enter
aam
imul
roll
or
inc
sbb
aaa
sub
add
pop
loop
push
jns
mov
pop
fsubs
test
mov
add
cs
mov
cmpsl
adc
and
repnz
scas
test
adc
adc
dec
mov
dec
mov
xchg
lods
ret
inc
inc
push
fisttpll
or
sub
test
jge
and
sbb
sti
rolb
jb
scas
insb
push
xlat
insl
iret
ds
lock
and
dec
mov
mov
ret
jmp
nop
aaa
mov
repnz
push
clc
add
and
fdivr
nop
xor
mov
push
jnp
mov
mov
adc
arpl
push
add
inc
aad
sub
add
cs
pop
insb
mov
stos
dec
mov
lahf
mov
pushf
fstp
lret
push
adc
add
sarb
sahf
lock
push
into
into
fxch
test
xor
fsubrp
cmpsl
mov
sti
xchg
xchg
adc
sbb
int
adc
addr16
mov
adc
jo
loopne,pt
popf
ret
repnz
movsb
xor
std
xchg
fistpl
les
push
dec
not
fs
mov
jnp
insb
inc
gs
hlt
mov
lds
mov
cli
pop
fldenv
add
and
and
sbb
das
into
add
in
mov
add
jae
ljmp
out
add
mov
cmpsl
add
mov
mov
push
jmp
mov
cmp
push
cmpsl
jo
cmpb
arpl
mov
pop
push
adc
push
or
add
ss
loop
call
adc
xchg
lahf
mov
sbb
jns
push
jae
ljmp
and
xchg
add
and
push
cmc
pop
xchg
inc
pop
mov
imul
ret
decl
jo
fadds
icebp
insl
out
hlt
adc
sub
cmp
sub
and
daa
dec
dec
sub
rcrl
std
xor
fldz
les
or
sbb
cmc
push
xchg
dec
cmc
xor
int
xor
outsl
pop
add
mov
dec
js
testb
mov
sub
insl
push
inc
ret
adc
xor
mov
enter
ficoml
pop
sub
popa
aas
and
jg
inc
shll
mov
sub
xchg
ret
into
cld
push
cmp
dec
in
mov
jmp
inc
xchg
pop
sbb
adc
ja
inc
std
insb
stc
cmovo
xor
addb
cmp
loope
jnp
pop
lahf
shll
rolb
xchg
shrb
lret
sti
scas
pop
jmp
xor
adc
xchg
push
xor
sub
arpl
push
lret
jns
mov
movsb
xor
mov
daa
push
mov
push
mov
movsl
lcall
xor
dec
push
and
sti
adc
and
shll
push
sbb
iret
mov
inc
push
xchg
lds
xor
xchg
sub
out
cltd
loop
sbb
fisttpll
or
popa
and
lret
inc
pop
in
mov
leave
loope
clc
dec
sub
lock
mov
lods
jmp
sbb
shll
aam
xlat
jns
es
sarl
incb
rcr
enter
dec
add
cs
mov
loop
push
inc
push
idivb
cmp
int3
inc
cmpsb
mov
jbe
mov
in
push
test
xorb
jge
fstps
jecxz
xor
jno
les
add
outsb
pop
push
pop
fmul
insl
sub
mov
pop
and
xchg
jne
push
mov
arpl
xchg
mov
xor
stc
ja
aam
mov
mov
sbb
incl
je
jb
add
xor
and
pop
lds
mov
cs
mov
stos
or
fwait
pop
dec
jae
inc
inc
ret
fsubrl
add
pop
dec
add
xchg
inc
push
dec
xchg
push
fadds
jbe
int
lahf
lods
cmp
lds
adc
push
inc
sbb
popa
sbb
aaa
add
jbe
mov
loopne
mov
jbe
mov
dec
stos
mov
jp
test
roll
add
sbb
fsubs
ds
and
fwait
mov
adcl
adc
pop
cmp
shl
adc
inc
pop
in
std
iret
hlt
lahf
pop
outsl
mov
jb
pop
in
fists
pop
adc
mov
inc
cmp
push
fcompl
mov
cltd
nop
xor
in
sbb
lock
pop
lea
mov
out
and
pop
insb
jae
movsb
icebp
or
je
or
lret
nop
call
test
add
mov
mov
adcl
insl
js
loop
mov
mov
fs
cmp
shlb
xor
push
xor
pusha
jge
fidivrl
sbb
shr
cmp
push
aas
jmp
sahf
jl
loope
xlat
add
daa
and
pop
jecxz
jecxz
or
lahf
jae
mov
test
rcrb
fists
pop
pop
or
jnp
in
jnp
push
mov
or
mov
dec
adc
fbld
cltd
sbb
mov
movups
imul
flds
ljmp
push
aas
pop
jae
cld
pop
add
icebp
ljmp
rcr
add
xchg
lcall
mov
push
sbb
dec
shrl
or
and
movsb
pusha
dec
jns
jmp
pop
xor
xchg
and
sbb
nop
push
jbe
dec
mov
lahf
fwait
neg
inc
adc
sbb
inc
jns
gs
mov
xchg
adc
mov
out
fisttps
ds
addr16
mov
mov
add
ds
xor
inc
xor
out
test
out
mov
into
add
lods
sbb
fwait
sbb
mov
xor
cmovbe
adcb
je
filds
cmpsl
sbb
cmpsb
cmp
imul
loop
outsl
adc
sbb
lods
ror
adc
js
push
shlb
enter
fcomp
pop
int
jbe
jle
adc
add
je
daa
clc
mov
aas
pusha
repnz
pop
hlt
loopne
sub
sub
call
lret
imul
clc
mov
pop
inc
loopne
jo
arpl
out
mov
mov
lahf
out
mov
fildll
shl
fcoms
jg
pop
mov
sbb
insb
inc
inc
mov
imul
mov
xchg
mov
int3
aam
enter
decb
scas
stos
ret
scas
push
ljmp
xor
jg
int
icebp
mov
rclb
or
or
sti
add
aaa
js
cmpsl
enter
test
xor
push
mov
cmpl
pop
test
das
outsb
leave
cmp
fistpll
test
nop
dec
xchg
mov
scas
mov
jmp
js
xchg
sbb
not
pop
jl
jo
xor
fadds
mov
cld
fidivl
lret
jle
lds
adc
stos
adc
push
shlb
fs
pop
imul
fimull
mov
or
fcompl
pop
add
fimuls
out
fdivrs
add
cli
les
xor
adc
fmul
jb
mov
inc
sub
stos
xor
lods
rolb
sbbl
push
imul
in
call
pop
or
leave
repz
dec
ja
es
inc
xchg
jge
lcall
out
test
pop
mov
xchg
rcl
jl
dec
idivl
fldl
lcall
aaa
out
adc
nop
push
sub
mov
push
sahf
jo
imulb
or
inc
mov
adc
push
xchg
pop
das
cwtl
popf
jnp
lock
xchg
jmp
mov
sub
mov
mov
jp
xor
fistpll
xchg
cltd
shll
int3
or
jo
push
xorb
lods
add
mov
aad
fstps
lods
mov
dec
cld
jmp
loope
data16
in
cmp
insb
mov
enter
cli
or
xchg
xor
dec
add
ja
pop
sub
stos
inc
in
in
bound
mov
iret
xchg
pop
test
call
add
jg
aas
test
bound
imul
jle
mov
cltd
pushf
leave
insl
push
pop
add
mov
mov
mov
dec
jmp
and
add
adc
mov
stc
inc
xor
popf
push
adc
icebp
movsb
add
mov
repnz
xor
std
aas
lcall
sbb
xorl
call
ljmp
fists
adc
scas
inc
jecxz
frstor
cs
mov
movsb
mov
sub
pop
push
loope
fninit
test
inc
cmp
cmp
clc
scas
push
push
mov
jae
call
sbb
jb
inc
inc
cmp
ss
lahf
dec
popa
adc
adc
add
out
xchg
sahf
mov
loopne
xlat
pop
and
adc
scas
pushf
push
pop
in
cmc
sub
sub
jnp
adc
adc
sbbb
lods
push
push
and
test
hlt
insb
jp
add
sub
jno
sub
jmp
loope
xor
mov
out
and
dec
cmp
xchg
push
cld
sahf
dec
or
in
testb
push
leave
mov
ret
mov
jnp
jnp
fimull
ret
xor
stos
popf
add
das
inc
movsb
push
mov
pop
cmp
sbb
iret
shll
adc
stos
testb
and
mov
subl
xchg
in
mov
pusha
or
les
call
sub
aas
sbb
fsubl
dec
inc
in
cmp
jle
scas
fdivr
leave
and
rcl
cli
push
shrl
pop
fisttpll
pop
xchg
mov
mov
stos
xchg
cmpsb
sbb
jae
cmc
xor
push
adc
fldl
mov
add
mov
jae
stos
and
xchg
movsl
sbb
out
repnz
jne
push
cmp
insb
push
cmpsb
loope
mov
lahf
fildl
add
cmp
pop
aad
daa
scas
pop
ret
push
sahf
das
imul
popf
fcomps
scas
fcomp
shlb
mov
in
inc
rcll
or
jecxz
lds
stos
outsb
movsb
cmp
xor
cmp
push
aad
outsb
sahf
lea
xchg
inc
pop
icebp
inc
jg
or
lods
popa
or
jno
sbb
or
pop
mov
mov
stos
popa
icebp
push
adc
xor
aad
mov
mov
inc
cmpsb
jmp
pop
addr16
cltd
and
aad
xlat
add
rorl
jecxz
gs
iret
sbb
and
into
ljmp
out
and
aas
and
and
movsl
in
cmp
xor
push
xchg
fstpt
popf
push
mov
hlt
jne
xchg
add
or
popf
bound
nop
cmpsb
dec
mov
jmp
jbe
subb
jo
roll
dec
test
xorl
jmp
call
xlat
ss
lcall
pop
or
xchg
std
cmc
mov
aam
sub
mov
rol
sahf
cli
lret
loop
stos
lahf
rorb
aaa
jns
xlat
loopne
inc
imul
pusha
mov
push
fistps
test
lahf
add
das
cwtl
jecxz
push
sbbb
xlat
dec
push
aaa
cwtl
inc
test
shl
adc
out
test
add
mov
sub
push
jecxz
lret
sti
aas
test
sub
lahf
loop
loopne
cmpsb
out
cmp
xor
mov
add
fists
inc
push
imul
enter
add
lock
cltd
inc
xchg
lahf
stos
outsl
repz
out
adc
sub
mov
jb
sub
push
call
adc
and
daa
clc
mov
ds
fisubl
xor
mov
pushf
sub
mov
outsl
inc
add
mov
faddp
cmp
push
mov
push
lods
shrb
or
daa
inc
decl
push
cmc
out
cld
push
push
rolb
scas
addb
pusha
jecxz
outsl
mov
pop
lret
dec
jnp
rcrl
out
orps
pop
mov
xchg
test
imul
add
in
pop
insl
test
lds
rcrl
fmulp
lds
leave
mov
fisttpll
in
sub
add
xor
stos
out
mov
and
jae
add
push
xor
repz
lods
je
cmp
and
icebp
popa
in
xor
xor
and
xchg
cmp
xchg
xor
xor
movsl
scas
jg
cmp
mov
aas
push
cltd
dec
imul
push
popf
mov
inc
mov
ds
inc
leave
fisttpl
or
xor
fucomip
sti
pop
addl
or
push
or
adc
pop
push
dec
xchg
mov
xlat
icebp
and
sar
repz
sahf
movb
cmc
test
jb
fwait
outsl
out
sbb
push
repz
inc
jmp
jb
and
fs
sub
in
out
mov
sbb
shlb
scas
sbb
jmp
std
inc
fsubrs
inc
adc
jl
shll
pop
ficompl
xlat
dec
dec
mov
shrl
pop
adc
aam
out
test
fdivrl
push
mov
dec
xchg
jp
jge
cwtl
and
mov
xor
jg
icebp
stc
cmp
ss
xor
daa
pop
cld
lcall
cmp
jne
scas
jmp
out
jl
sbb
ja
pop
in
outsl
out
filds
inc
cli
pop
adc
mov
push
mov
mov
arpl
sub
dec
add
xor
adc
xor
ret
adc
dec
jmp
pop
or
push
insb
xchg
scas
call
ret
sbb
and
popf
loop
out
push
mov
jecxz
sub
mov
faddp
sbb
push
adc
xchg
lea
test
out
xchg
lea
test
cltd
push
push
dec
dec
adc
cmp
push
xchg
les
or
fiadds
sub
enter
sbb
jae
pop
pop
add
sbb
xchg
sarl
fiaddl
sbb
mov
jge
cs
les
loopne
or
shll
lcall
mov
rcl
inc
aas
out
sbb
sub
cmpps
das
mov
mov
xor
das
hlt
mov
jnp
push
je
dec
ja
movsb
lahf
adc
sahf
scas
popa
or
xchg
xchg
pop
or
mov
in
rcl
pop
xor
sahf
cld
nop
imul
fnstcw
rclb
ja
stc
out
pop
movsl
pop
paddw
pop
cmp
lds
fsubrl
cmpsl
push
inc
mov
int
scas
or
mov
pop
sbb
push
mov
or
ljmp
mov
mov
cli
addr16
mov
rcrb
adc
inc
das
cli
pop
fldenv
ret
clc
insl
or
mov
mov
cld
std
jne
icebp
fs
adc
mov
fisubrl
mov
sti
push
ss
adc
pop
std
fdivr
xor
jmp
out
out
add
addl
je
loope
fbld
cmp
loopne
movsl
rcl
add
loop,pt
cmp
push
xchg
rcrb
repz
adc
push
dec
inc
pop
test
dec
gs
mov
out
cmpsb
jne
push
mov
pop
aas
mov
push
xlat
xchg
or
or
xor
push
mov
mov
jg
inc
xor
and
divps
sub
xor
pop
lods
pop
push
ret
cltd
mov
jle
mov
adc
sbb
test
mulb
ret
xor
js
ljmp
jae
aas
mov
pop
outsl
and
or
fs
add
add
gs
cmc
add
mov
xchg
cmp
testl
fsubs
inc
sub
out
pop
out
in
xchg
jne
addb
sbb
sbb
xor
fucomi
call
insb
test
inc
stc
sub
into
popf
jae
clc
scas
or
lods
loope
mov
adc
das
dec
stos
inc
xchg
out
add
mov
mov
ljmp
test
or
lret
gs
sbb
inc
push
jno
imul
setne
adc
xchg
stc
fistpll
loopne
js
or
cmp
cmp
insb
adc
fcompl
mov
push
fbstp
and
push
mov
jg
inc
enter
and
and
dec
arpl
lahf
ret
out
dec
xchg
sbb
dec
lret
je
data16
mov
mov
add
dec
scas
inc
pushf
add
mov
push
sbb
rol
scas
popf
adc
imul
jno
popf
ds
adc
popf
ds
adc
popf
ds
adc
popf
ds
adc
popf
ds
adc
popf
ds
adc
popf
ds
adc
popf
ds
adc
xor
mov
inc
jp
lea
nop
in
mov
scas
xor
or
jl
repnz
sub
dec
mov
or
cld
mov
sub
jl
loope
fdivs
rorl
idivl
ds
xchg
mov
pop
hlt
in
shlb
push
loopne
mov
dec
fcoms
jp
sub
jecxz
outsl
out
pop
imul
bnd
mov
push
test
cmovbe
xchg
jp
fistl
aad
push
pop
call
in
inc
roll
mov
and
xchg
pop
out
aaa
jne
lcall
inc
test
xchg
insb
pop
or
ja,pt
aam
out
dec
mov
inc
xor
cltd
scas
lcall
cmpsb
popa
inc
cmpsl
lods
jns
lea
adc
add
fstpl
test
test
lahf
aaa
push
daa
pop
jge
aad
sbb
dec
sbb
lock
pmulhw
mov
int3
daa
dec
call
in
xor
dec
or
fmull
and
cmp
outsl
ds
inc
or
cmp
and
in
orps
pusha
add
cmp
dec
push
jmp
lret
push
cmc
inc
xchg
inc
out
sub
popa
or
call
scas
out
inc
dec
stos
sahf
das
daa
je
xor
cmp
mov
jbe
push
mov
decl
or
add
push
insb
mov
or
push
mov
pop
pushf
jecxz
ficoml
xchg
jns
jmp
or
lcall
cmc
push
out
mov
xchg
add
or
cmp
mov
or
pop
jne
arpl
push
je
pop
das
and
xchg
fists
adc
arpl
loopne
mov
jl
jge
js
push
inc
dec
pop
sbb
sub
xchg
imul
adc
or
dec
and
ret
out
jp
xor
push
popf
jecxz
outsb
sub
xchg
fsubrs
enter
cmp
push
add
mov
in
mov
xchg
cmpsb
out
dec
or
clc
sub
out
jo
xchg
sti
push
pushf
call
cli
xor
loopne
add
add
fisubl
sub
icebp
std
lods
imul
pop
in
repnz
lods
sbb
psubusb
and
pop
lret
push
cmp
push
dec
jle
test
cmp
pop
cmp
call
mov
sub
inc
rolb
and
cld
lock
pop
xchg
ret
push
adc
je
lods
mov
pop
adcb
inc
dec
aaa
ja,pn
push
adc
in
dec
and
pop
loope
std
dec
or
mov
push
shlb
jbe
lret
xchg
mov
xchg
out
xor
xor
testb
call
aas
cmp
mov
jae
ficoml
lahf
adc
lcall
mov
aaa
mov
ret
pop
jbe
push
adc
jbe
cmp
jo
lea
test
cli
cltd
test
xchg
mov
inc
cmc
mulb
in
ret
aad
mov
push
dec
jge
loop
mov
icebp
mov
data16
xor
push
xor
pop
mov
std
adc
dec
scas
xchg
lods
lahf
adc
fs
pusha
shll
xor
cltd
lcall
pushf
outsb
jecxz
dec
mov
test
dec
ret
stc
xor
test
std
mov
push
mov
inc
mov
pop
add
xchg
arpl
stos
pop
fmull
inc
push
push
fists
adc
and
xor
bound
sbb
sbb
pushf
jmp
pop
icebp
sub
sub
sahf
inc
jle
enter
dec
push
ljmp
xchg
mov
in
dec
xchg
mov
ret
fcoms
inc
ss
pop
and
pop
pop
mov
cmp
add
clc
scas
push
and
fidivrs
mov
xorl
stos
push
mov
faddl
push
out
or
test
adc
xchg
test
loope
mov
lea
add
insb
xor
mov
scas
sub
pop
sub
testb
fucom
cltd
mov
in
stc
lcall
in
aaa
js
mov
loopne
adc
and
cltd
rorb
fcmove
xchg
sub
jmp
xor
in
pop
add
inc
outsl
pop
adcb
mulb
lret
test
xchg
inc
dec
pop
icebp
jle
fisubl
sahf
push
sub
mov
ljmp
repnz
cwtl
nop
shl
xchg
mov
inc
addr16
lret
int3
add
dec
inc
mov
loope
push
icebp
mov
xchg
jl
in
cmp
ds
call
rorb
xchg
stc
sbb
jbe
pop
and
or
xor
icebp
nop
sarb
mov
stc
dec
jae
rcl
scas
mov
push
sub
jmp
and
lds
out
fistps
inc
in
dec
push
cwtl
adc
rolb
das
and
push
lret
push
jbe
loop
sub
jns
repz
mov
jnp
and
fidivrl
sub
fdivr
je
pop
popa
jbe
jno
hlt
mov
enter
rcrb
div
add
jnp
bsr
push
sub
daa
pop
mov
xchg
hlt
fists
and
cmp
fmull
repz
sub
mov
lret
mov
dec
lods
dec
xchg
jg
mov
ret
outsl
mov
mov
mov
mov
push
shll
xor
int3
xor
mov
mov
mov
les
loope
mov
aad
sbb
insl
in
mov
popa
pop
inc
lods
push
cmp
test
ds
lods
rclb
hlt
ja
xor
sbb
mov
or
nop
push
or
loope
jge
mov
mov
fisubrs
movsb
cmc
jecxz
cmpsb
mov
call
js
xor
aas
imul
dec
xchg
in
call
lods
iret
lds
out
and
cltd
add
xchg
xor
jmp
fprem
or
bound
sbb
fmull
pop
shlb
sbb
cwtl
stos
xchg
jle
aaa
test
mov
jge
neg
shl
push
shl
pop
dec
lret
out
out
aad
cmpsl
int3
roll
adc
iret
mov
out
clc
pslld
test
pop
dec
xchg
sub
int
mov
pushl
jno
clc
pop
and
mov
cmc
sub
pushf
dec
adc
scas
push
inc
sti
adc
push
jb
add
add
imul
pop
sub
stos
jbe
xchg
mov
push
add
inc
dec
lock
adc
push
push
dec
in
jle
cmp
cmp
cmpb
jmp
pop
test
jp
mov
lods
fwait
out
mov
inc
dec
stos
mov
loop
mov
or
inc
aaa
adc
ror
push
pop
f2xm1
loope
push
add
imul
and
mov
xchg
test
adc
pop
jmp
inc
jb
cmp
xchg
jge
adc
jb
cs
mov
dec
inc
lea
xor
fldcw
subl
xor
inc
in
and
xchg
sub
xchg
or
shlb
js
pop
data16
and
inc
fnstenv
clc
fistps
les
arpl
bound
adc
cmp
push
adc
movsl
ljmp
sbb
ds
adc
jle
mov
cmp
xchg
leave
nop
gs
push
mov
ds
loopne
pop
xchg
inc
jb
or
rorb
lods
je
or
imul
test
popa
push
lcall
push
or
shll
sub
inc
mov
out
rcr
mov
test
xor
stos
outsb
repz
js
or
mov
cmp
jge
pop
cmp
or
f2xm1
fbstp
add
mov
shl
dec
or
inc
cmp
pop
inc
addr16
xchg
push
inc
clc
cmpsl
and
out
cmpsl
xchg
pop
lret
xor
pop
sbbb
mov
pop
and
pop
jns
push
pop
push
inc
push
jle
mov
je
mov
lret
enter
jecxz
ss
shlb
test
mov
mov
adc
mov
cmp
arpl
dec
push
sub
fisubs
push
rorl
add
jecxz
outsb
addr16
cltd
sbbb
xchg
xchg
jb
inc
test
and
pushf
jmp
dec
ret
fcoml
or
mov
mov
mov
mov
out
hlt
add
push
das
scas
std
bnd
cmp
jmp
scas
dec
movsl
int3
sub
adc
xlat
lcall
jnp
dec
jnp
jle
dec
mov
and
cmp
lahf
repz
cwtl
lcall
unpckhps
and
xchg
push
clc
pop
mov
and
jp
into
ds
mov
rorb
xchg
jmp
pop
mov
xchg
mov
test
push
gs
cmp
aas
xchg
stos
pop
fidivs
add
push
mov
lock
test
ret
adc
popf
mov
pop
cmp
call
mov
gs
aam
aad
xchg
jmp
adc
stc
repz
inc
xor
or
int3
addr16
inc
in
lahf
jmp
push
shll
roll
xchg
or
aad
push
lock
sbb
cmp
arpl
pushf
mov
sub
pushf
mov
sub
dec
notl
jg
push
jbe
bound
sub
adc
mov
das
arpl
add
orb
xor
push
jns
add
add
rorb
cmpsl
mov
inc
jbe
sub
pop
cmp
mov
pop
or
jno
dec
cli
jae
out
mov
daa
and
jp
inc
dec
jb
test
dec
cs
ret
sub
test
push
sbb
lahf
push
pop
and
shlb
mov
inc
xchg
fwait
rol
cs
ss
out
sahf
mov
in
stos
jne
mov
pop
fisubs
in
xchg
pop
xchg
jmp
pushf
pop
pop
push
jp
sbb
adc
imul
sub
pop
fucomip
mov
push
rcl
clc
leave
add
fdivrs
jle
jl
stos
out
jge
in
lcall
push
mov
pop
xchg
jle
or
push
xorps
push
sub
dec
lea
push
pop
and
xor
xchg
adc
mov
push
mov
xchg
cld
push
mov
ds
pushf
in
and
push
pushf
aas
aam
out
cmp
cmp
mov
or
xchg
xor
lahf
dec
les
xchg
out
pop
adc
dec
pop
ret
pop
jno
cmp
ret
xor
push
or
jno
jae
lods
dec
xor
cmpb
fdivrl
xor
cmpl
sbb
stos
sbb
and
aas
fwait
jne
push
cmp
pop
cmc
lock
inc
fwait
mov
stc
push
fimull
sbb
or
pop
push
mov
dec
leave
adc
xor
sti
or
outsb
mov
mov
mov
not
outsb
sub
sub
xchg
cmp
lea
mov
xchg
leave
jns
call
sbb
int3
roll
mov
das
push
sub
dec
or
mov
sub
inc
mov
push
addb
imul
imulb
fmuls
mov
or
lcall
add
addr16
aam
popa
xchg
mov
sbb
mov
sbb
mov
test
adc
ja
add
sub
mov
shrb
sbb
cmp
fistpll
and
xchg
or
jo
ja
ret
and
fwait
ja
mov
mov
in
fcmovnu
sbb
scas
arpl
and
leave
rol
sbb
jbe
add
push
sub
lods
mov
out
mov
xchg
sub
shlb
cmpsl
ds
jae
mov
je
fstps
mov
leave
out
ljmp
inc
sub
inc
mov
and
push
scas
adc
pop
cmp
sub
jl
mov
pushf
iret
jae
or
insl
loopne
in
icebp
jo
jp
xlat
rcrl
sub
jo
es
cmp
call
jecxz
cltd
add
mov
add
mov
insb
adc
cltd
push
lret
jae
stc
lods
inc
mov
mov
stos
aam
or
jno
call
mov
sbb
sti
roll
or
cli
in
sbb
cmpsb
outsl
mov
mov
leave
lret
xchg
or
and
aas
mov
jns
add
jmp
ds
mov
mov
sbb
adc
mov
lock
jmp
push
roll
push
lea
and
jecxz
aaa
push
dec
rorl
ret
or
lds
mov
cltd
sub
leave
xor
push
jmp
addr16
test
fs
scas
dec
cmpsl
fs
jno
mov
mov
mov
imull
andb
fcmovnbe
jg
icebp
xor
mov
pop
mov
js
ds
mov
aad
pop
out
inc
cld
sbb
sahf
mov
call
jle
xchg
cs
xor
das
rcrb
in
icebp
mov
rclb
pop
into
faddl
or
xor
loope
jle
adcl
cld
sub
cmp
mov
jmp
cmp
push
sub
adc
je
and
push
imul
das
inc
push
cmp
cwtl
inc
adc
xor
sbb
dec
mov
in
mov
std
fsubl
lahf
jno
jne
mov
or
stc
stos
lahf
lret
imulb
movsb
cli
mov
dec
int
xchg
dec
jns
mov
mov
xchg
rclb
mov
mov
dec
clc
push
jae
cld
mov
sarb
sub
mov
push
or
cli
sbb
in
cmp
mov
outsb
and
pushf
push
inc
in
add
add
in
pop
and
sub
push
cld
add
inc
in
fisubl
or
add
add
jecxz
fidivrl
or
jbe
sbb
xchg
pop
add
or
roll
ficoml
or
das
mov
and
rolb
jmp
out
pop
stos
mov
mov
sbb
movsl
pop
cmc
ja
fnstcw
add
popa
or
xorb
xorl
iret
pop
push
into
lods
push
adc
xchg
jl
popa
cmp
outsl
test
decb
ja
sub
dec
mov
xchg
les
or
shll
mov
jns
pop
dec
sbbb
and
mov
mov
or
push
scas
cld
notb
cli
loop
sub
and
or
add
mov
cmpsb
cmp
and
bswap
adc
daa
out
stos
jb
add
sub
movlps
adcb
fwait
retw
dec
in
mov
cmp
in
sbb
sbb
mul
imul
push
mov
movsb
inc
notl
dec
xchg
in
add
mov
inc
rcrb
nop
ret
xlat
cwtl
adcl
lret
nop
daa
and
lock
imul
dec
bound
mov
iret
mov
pop
mov
jmp
movsl
rcrl
mov
rcrl
daa
mov
mov
pop
inc
arpl
jns
adc
inc
into
cmp
iret
in
and
jb
mov
lods
add
push
out
push
xchg
sarb
xchg
lcall
push
mov
xor
pop
mov
add
insl
lock
mov
repz
enter
mov
pop
pusha
loop
adc
mov
xchg
jle
jne
movsl
cltd
shll
mov
pop
jge
cld
notb
and
mov
out
adc
inc
push
and
xchg
sub
lcall
aad
ds
les
jb
test
xor
adcb
or
xor
add
movsl
sub
or
es
mov
aad
call
mov
aad
mov
fidivrl
pop
xor
ljmp
loopne
jl
mov
lea
xor
xchg
iret
or
insl
cmpsb
jno
mov
mov
daa
push
xchg
movsl
cwtl
mov
outsl
dec
outsl
lods
pop
xor
outsb
cmp
mov
mov
icebp
movsb
loope
add
data16
cmp
adc
adc
pop
mov
cli
les
repnz
dec
pop
out
es
mov
xchg
mov
pop
roll
cmpsb
jne
jns
ds
in
inc
push
add
pop
mov
lahf
xchg
or
add
inc
mov
inc
fwait
dec
push
clc
adc
js
nop
movsl
rcrb
cmc
dec
push
xor
aas
repz
fs
sti
xchg
out
or
lcall
xorb
push
movsb
sub
sar
sub
movsb
pop
test
push
pop
jae
repnz
repz
aas
jge
mov
cmp
mov
data16
push
out
inc
inc
xor
stos
or
bound
faddl
fidivs
stos
movsb
add
sbb
push
push
dec
shrl
leave
sti
sbb
cmp
and
std
cltd
xor
jns
aad
mov
loop
loope
add
cmp
or
mov
mov
movsb
cmpsb
sub
push
out
das
ljmp
lds
and
dec
mov
xchg
inc
fsubp
aas
sbb
roll
mov
mov
dec
imull
jns
xor
pushf
cmp
ret
xchg
cmp
fisttpll
and
xchg
jmp
outsl
add
mov
sub
push
pop
mov
xor
push
or
sub
out
es
adc
pop
and
mov
sahf
mov
outsl
lret
adc
sbb
shlb
aas
xchg
cmp
xchg
push
and
cmp
cld
sbb
loope
pop
jne
sub
lods
scas
push
loope
arpl
sub
sub
jl
xchg
xor
les
clc
jnp
inc
movsl
add
dec
mov
add
loop
testb
pop
push
or
fisttpll
xor
jp
imul
inc
out
sbb
popf
nop
cmp
je
inc
xchg
scas
xchg
pop
mov
cmp
or
or
inc
pop
jnp
inc
orl
les
sub
outsl
ficoms
pop
sbb
and
push
push
cmp
or
out
shll
mov
inc
stos
sbb
loopne
dec
fimuls
mov
and
xchg
jnp
stc
xchg
cmp
mov
mov
sahf
pop
movsb
sti
sub
test
inc
inc
movsl
inc
sub
prefetcht0
xchg
push
test
mov
mov
call
xor
mov
jge
pop
adc
repz
jg
adc
test
adc
roll
mov
xchg
lret
or
clc
mov
cwtl
add
or
ret
rorb
iret
repnz
mov
mov
test
test
scas
inc
add
push
adc
xor
xlat
jbe
jne
adc
xor
xchg
add
loope
dec
stc
in
negl
bound
dec
jle
mov
cmpsb
jmp
sub
shlb
mov
lret
sub
movaps
jno
xchg
je
jne
jae
mov
sub
out
or
cmpsb
mov
test
inc
and
scas
push
sti
mulb
cmpl
andl
cmp
loope
jg
adc
xchg
jmp
sub
ret
cltd
fstl
inc
mov
cmp
fsubrs
das
es
cmp
inc
or
sbb
scas
push
orb
insl
adc
lahf
lock
jbe
mov
stos
and
adc
movsb
sbb
arpl
mov
xor
mov
jns
add
jmp
sub
je
push
test
inc
cmpsl
mov
and
fisttpll
lcall
les
aaa
mov
popa
andl
add
call
loopne
fisubl
in
xor
xor
inc
adc
jg
stc
das
mov
mov
fistpl
rcrb
xchg
cmp
mov
sbb
dec
push
xchg
inc
dec
mov
loope
into
push
scas
arpl
roll
pop
cmp
jnp
xlat
or
dec
fcoms
inc
dec
mov
jp
mov
jae
adc
loop
adc
push
adc
xchg
rclb
mov
pop
mov
sbb
mov
or
iret
mov
fcompl
adc
xor
movsb
cwtl
popf
pop
dec
insl
jp
adc
push
ds
pop
imul
inc
xlat
pop
sahf
bts
in
and
ss
dec
out
cwtl
lock
ss
xchg
pushf
xchg
or
pop
andl
xchg
in
push
leave
test
lock
scas
mov
pusha
lret
in
or
fcmovnb
mov
dec
vpsubw
test
out
dec
cmpl
pushf
xor
pop
inc
xchg
sti
sbb
lret
cmpsb
sub
add
push
call
loop
fld
or
pop
dec
ja
adc
pop
push
push
scas
ss
xor
xlat
push
xor
jb
repnz
jmp
aad
lcall
adc
xchg
push
or
lods
dec
sbb
jo
roll
and
outsb
xchg
cmpl
pop
je
dec
push
and
or
pusha
outsb
bound
je
sub
mov
faddl
addr16
sbb
fisubrs
push
cld
and
dec
xchg
push
add
xor
mov
push
mov
xchg
pop
data16
lret
and
cmpsl
out
cmp
push
mov
mov
pop
or
cltd
xor
ds
in
insl
mov
test
jmp
pop
bound
jno
push
stc
or
or
lret
std
cmpsb
aaa
jecxz
push
adc
jns
sbb
xor
and
xchg
jg
mov
mov
arpl
mov
iret
xchg
enter
xor
and
mov
pop
push
add
fisttpll
out
sarl
sub
mov
fs
or
mull
je
cmp
inc
xor
jl
movb
pop
dec
or
cmp
test
jl
sbbb
js
aam
daa
sbb
jl,pn
int
popf
sti
cmp
pop
cmp
fwait
leave
leave
xor
inc
push
data16
js
mov
jo
pusha
mov
push
js
xor
out
mov
rep
inc
or
insb
pop
or
push
je
pop
int
add
jne
sbbb
imul
mov
fs
aad
scas
add
cmpsb
lahf
add
ret
pop
mov
sub
sbb
pushf
flds
xor
shll
lret
dec
fisubl
ret
orb
sub
stos
mov
repz
fbstp
cmc
aas
mov
push
sub
jae
cmp
mov
sbb
out
movsl
sub
repz
pop
int
shlb
jo
ficoml
insb
pop
ror
repnz
cmpsb
dec
rcrl
mov
call
stos
jmp
pop
in
pop
lods
shll
stc
adc
lock
or
lds
adc
ljmp
int3
sbb
shlb
dec
fwait
cmp
sbb
rcll
out
lds
les
pop
sub
adc
inc
loop
fldt
adc
ljmp
push
jecxz
shll
push
adc
out
dec
sbb
xchg
mov
and
xchg
leave
aam
pushf
popa
push
xor
sbb
push
ss
pop
or
push
add
lock
dec
sub
movnti
adc
inc
push
or
mov
lods
jnp
mov
xchg
cmpsb
or
pop
ret
pop
pop
insl
dec
lret
arpl
int
mov
scas
add
pop
push
mov
sbb
jae
inc
outsl
inc
cmpsw
xchg
mov
and
jmp
pop
iret
cmpsb
bound
cmpsl
push
aas
dec
cmp
ss
outsb
adc
stos
push
mov
aas
xorb
jle
or
sub
in
insl
sub
and
pop
mov
aam
sub
xor
or
dec
test
jmp
pop
pop
sbb
dec
ret
pushf
loop,pn
iret
loope
jb
or
mov
cmp
cmp
sub
xchg
mov
pop
cmp
xchg
call
adc
push
push
push
mov
subl
mov
loope
imul
xchg
lods
jns
aas
xor
sub
ror
in
sub
pop
pop
cltd
cmpsl
push
sub
test
mov
loope
dec
pusha
fmul
fsubrl
add
clc
lods
call
push
pop
xchg
jl
insb
leave
repnz
pop
dec
cmp
mov
cmp
pop
mov
mov
mov
sahf
mov
movsl
ret
add
mov
or
stos
stos
mov
inc
sub
xchg
dec
add
outsb
cmpsl
std
pushf
mov
mov
ret
push
js
stos
lock
sbb
ds
sbb
mov
mov
jl
dec
and
xlat
test
dec
jge
fisubs
jle
mov
aaa
out
das
or
cmc
sub
sbb
dec
aam
inc
add
mov
aad
arpl
jb
fisubl
ret
cli
and
sbb
add
xor
fstl
push
and
int3
int
shrb
jmp
das
stc
or
cmp
cmpsl
and
lahf
cmp
in
ja
push
mov
ja
scas
test
or
mov
dec
mov
inc
pop
repnz
out
xor
ja
adcl
pop
push
or
out
inc
or
out
cmpsb
test
mov
xlat
dec
out
xor
cmp
fbstp
jg
int3
mov
ret
cli
mov
jecxz
aad
add
mov
jl
stc
inc
push
dec
xor
enter
ret
mov
xor
pop
pop
repnz
je
xlat
fwait
sub
jns
pop
push
dec
lds
sub
push
push
stos
add
jae
bound
lds
in
and
les
popf
loopne
in
jle
sub
cmp
sbb
dec
push
cmp
clc
rorb
xor
shrb
enter
xchg
js
mov
mov
inc
call
scas
sub
or
pop
pop
mov
lock
cmp
mov
dec
inc
dec
push
shll
add
loop
scas
notb
hlt
push
movsb
aas
or
test
jbe
hlt
mov
adc
out
pusha
scas
mov
movl
adc
lds
xchg
sbb
dec
push
inc
fcoml
loop
loope
inc
adc
inc
insb
push
lea
dec
out
sub
mov
push
in
dec
test
int
shl
sahf
seto
or
lahf
xchg
int
push
ret
and
into
or
cmc
repnz
test
xchg
lea
lods
mov
movsb
mov
bound
loop
dec
push
inc
orl
mov
sbb
pushf
or
mov
cmp
popa
xchg
push
xchg
mov
das
and
arpl
xchg
add
jb
stc
aad
shll
mov
xchg
pop
inc
lds
xor
inc
lcall
cs
mov
mov
int3
push
jb
cmp
std
test
mov
or
cmp
push
pop
gs
xchg
jo
cltd
sbb
outsl
add
out
adc
fsubs
lds
dec
jecxz
push
xor
daa
addr16
in
sub
add
xchg
or
inc
mov
and
leave
es
sbb
sahf
dec
popf
mov
cmp
sti
mov
movsl
stos
es
fsubr
xchg
imulb
dec
cmp
fisttpl
sub
stos
fstpt
xchg
push
je
and
mov
nop
repz
sub
mov
xor
data16
cmp
inc
sbb
enter
adc
cmp
daa
push
sub
push
fsubrs
push
nop
call
jbe,pt
adc
cmpsb
into
imul
or
insb
and
xchg
xchg
push
mov
pop
mov
repz
mov
lock
jg
lcall
fs
mov
fldcw
loop
fstl
mov
imul
clc
fisubs
mov
sbb
mov
push
inc
add
lods
es
pop
stos
mov
or
test
mov
ljmp
dec
push
ret
mov
or
sub
pop
xor
mov
stc
cmp
xchg
call
and
sbb
mov
cmpsl
std
mov
sbb
mov
mov
stos
icebp
fwait
inc
sub
out
sub
loopne
imul
int3
inc
into
adc
int3
icebp
imul
mov
iret
scas
sbb
loope
test
adcb
add
scas
mov
pop
sbb
in
or
daa
test
idivl
pop
sub
je
cli
jbe
mov
add
fwait
ss
mov
dec
xchg
push
gs
mov
mov
jecxz
outsl
scas
push
sti
loop
mov
mov
jbe
ss
adc
lods
mov
dec
xchg
call
aam
xchg
bound
fstpt
hlt
sahf
adc
sub
lods
pop
push
jno
jecxz
cmp
pop
pop
in
add
jbe
or
xchg
add
mov
scas
push
adc
movsl
and
xor
adc
cmp
aad
sbb
fstps
call
aam
jnp
mov
adc
pusha
rcr
push
sar
or
lods
fiaddl
jl
ret
dec
loop
mov
adc
push
sub
sub
dec
int
pop
insb
hlt
pop
add
sbb
lret
or
mov
ret
out
adc
pop
iret
push
loop
pop
repnz
imul
sbb
inc
add
pop
and
repnz
imul
ret
outsl
inc
mull
lods
cs
sbb
ljmp
test
pop
jbe
cmc
lods
mov
mov
jnp
cmp
adc
out
jns
stc
mov
mulb
jae
sub
in
dec
movsb
bound
subl
imulb
xor
xchg
jecxz
ret
sti
push
test
pop
add
scas
sub
add
mov
cmp
inc
insl
xor
xchg
sbb
mov
fimuls
shrl
sahf
in
test
mov
xchg
mov
adc
or
int
cmp
iret
push
mov
out
jb
pop
jmp
push
ljmp
int
jg
mov
insl
and
lods
push
shlb
xchg
pop
notl
loopne
ss
dec
mov
push
fsubrl
fcomp
shll
push
xchg
sbb
jp
pusha
push
cmpl
mov
or
or
sbb
jno
ljmp
or
mov
xchg
cmp
stos
mov
dec
add
pop
nop
pop
mov
repnz
lods
mov
push
popf
sbb
jnp
mov
mov
cmc
jbe
and
xchg
sub
not
hlt
jl
test
mov
add
into
scas
xchg
dec
les
or
sbb
mov
sub
lods
insl
repz
daa
mov
cmp
ror
arpl
sbb
inc
inc
dec
pop
ret
cmpsl
adc
sub
lods
incb
dec
pop
lock
dec
dec
lcall
shlb
popa
fists
cmc
cmp
ljmp
mov
test
enter
out
push
pop
jnp
mov
cmc
jo
or
dec
mov
xchg
xchg
or
fsubl
cmp
inc
add
mov
mov
fsub
xchg
mov
iret
add
xchg
inc
and
push
jbe
mov
xor
fadds
leave
mov
jg
icebp
pop
aas
pop
jmp
ficomps
int
pusha
cwtl
mov
repnz
inc
pop
cmpsl
cmpsb
insb
daa
mov
in
pusha
cmc
cmc
sbbl
add
icebp
fsubr
pusha
mov
pop
xor
cmp
pop
adc
add
or
mov
stos
inc
fwait
imul
das
ds
adc
pop
cmc
rcrb
mov
sbb
scas
pop
or
mov
popf
mov
inc
lcall
push
push
outsl
clc
loopne
push
pop
mov
int
lea
adc
movsb
in
jmp
ffreep
cmpsl
std
lods
xchg
cmp
clc
push
xor
gs
and
jae
sarb
lret
jle
cmp
nop
movsb
cmp
iret
aaa
adc
xorb
test
fsubrs
les
xor
aad
scas
pop
inc
lahf
cmpsl
jle
xchg
outsl
cmp
add
lods
mov
mov
adc
rep
add
adc
stos
add
xchg
xorl
icebp
lea
sbb
cmovne
push
push
inc
push
into
and
pop
in
or
and
testb
andl
and
or
jecxz
or
out
out
lock
out
fxch
notb
mov
lret
ss
mov
lahf
ss
cmp
in
mov
pmaddwd
cs
hlt
ffreep
xor
push
xchg
aam
adcl
addb
arpl
dec
push
into
shrl
jge
xchg
mov
loope
enter
rolb
pop
je
cs
test
xor
addr16
add
stos
mov
inc
mov
xchg
or
xchg
imul
mov
xchg
push
inc
movsl
cltd
jnp
mov
push
sbb
and
mov
push
xor
ljmp
and
pop
call
mov
sbb
sub
sbb
add
sti
xchg
enter
mov
xor
es
jmp
in
sti
shr
lds
mov
repz
mov
pop
iret
mov
sbb
repz
push
sbbl
nop
pusha
rcrb
mov
add
addr16
in
das
les
out
cmpsl
mulb
push
push
push
mov
and
js
xor
dec
gs
stos
repz
scas
rclb
jecxz
mov
mov
push
loope
xor
in
mov
mov
xchg
popa
out
and
push
addr16
xchg
stos
jge
shlb
dec
dec
inc
cmpsl
and
shlb
or
jle
ja
mov
mov
adc
ficoms
adc
popf
mov
stos
inc
fistl
add
popf
repnz
mov
ret
inc
jp
push
jb
lret
xchg
in
push
in
pop
xchg
aad
mov
xlat
mov
lods
cmp
dec
ss
dec
cli
bound
add
dec
xorb
mov
push
in
aam
xor
pop
fsts
mov
xchg
fstl
mov
lcall
push
sub
mov
push
mov
lcall
gs
dec
mov
je
fs
rcl
fs
bound
push
add
test
dec
xor
jno
xchg
sub
ljmp
inc
sbb
mov
or
imul
fisubrs
pop
je
xor
mov
lret
jmp
inc
lret
push
pop
jb
addr16
or
dec
cwtl
orb
adc
stos
add
negl
inc
jl
mov
xchg
xlat
mov
mov
ljmp
and
pop
cmp
push
fbld
lea
loopne
add
clc
rorl
in
popf
adc
sub
inc
iret
or
inc
xor
outsl
adc
lret
out
dec
or
mov
test
scas
cmp
hlt
out
sub
pushf
and
mov
dec
ret
jecxz
nop
sbb
inc
sbb
xchg
ds
mov
fsubs
sti
les
movsl
push
popf
cld
fstpt
ret
jecxz
mov
leave
pop
into
sbb
jns
add
jns
mov
jae
pop
adc
ss
dec
xchg
enter
enter
jno
xlat
mov
push
test
fwait
dec
xchg
pop
add
pop
mov
aaa
mov
lock
sub
es
pop
dec
sub
mov
xchg
nop
inc
pop
rcrb
cmp
mov
testl
adc
adc
inc
and
shll
subb
xchg
pop
mov
adc
pop
inc
outsl
imul
leave
mov
adcl
mov
mov
mov
shlb
loopne
pop
enter
cld
sub
fadds
jp
movsb
push
clc
imul
mov
ja
loopne
aas
mulb
add
pop
int
nop
adc
fcomip
out
inc
ret
cs
mov
nop
push
mov
stos
mov
insl
repnz
cltd
out
scas
sti
dec
imul
jno
mov
or
xchg
movsl
cltd
dec
mov
xchg
rcr
ljmp
mov
mov
cmp
and
pop
fidivs
xchg
inc
jle
fisttps
and
cmpsl
mov
inc
adc
jnp
and
mov
int3
mov
popf
and
push
shlb
or
xor
mov
add
mov
sbb
fwait
andl
popf
adc
pop
xchg
push
dec
xchg
movsb
test
stos
fiaddl
insb
dec
and
dec
out
adc
mov
push
mov
xchg
cmpsl
jecxz
jle
test
jle
pop
jmp
adc
push
je
rcrl
xor
push
and
fdivrl
add
adc
cmp
int
cmpsl
jg
add
aad
lsl
sbb
jae
fwait
or
dec
mov
cmp
and
int3
xor
stos
hlt
pushf
jae
out
cld
and
icebp
pop
mov
std
ja
xor
or
pop
mov
xchg
mov
dec
xor
pop
std
push
cmp
jmp
mov
mov
out
adcl
jg
cld
loopne
mov
jmp
inc
cmp
push
imul
test
lahf
clc
pop
push
dec
js
adc
pop
iret
aad
scas
daa
xchg
inc
cmp
clc
mov
and
or
adc
xchg
pop
leave
out
add
add
dec
dec
jns
jbe
mov
into
dec
mov
mov
fsubl
adc
dec
lea
in
sub
mov
jo
fistps
push
sbb
popa
jnp
inc
dec
jno
std
imul
cmp
ljmp
add
fsubl
stc
mov
or
push
les
idivl
push
pop
cmp
mov
inc
icebp
xchg
mov
mov
xor
add
or
push
repz
aas
shlb
in
push
mov
bound
push
sbb
daa
xlat
dec
xor
sti
push
dec
loop
loop
cwtl
and
push
fyl2x
xchg
movd
imul
mov
mov
jno
loope
ret
push
fidivs
outsl
cmp
mov
adc
adc
and
pop
jnp
dec
outsl
cmp
or
inc
push
mov
pop
jl
adc
xor
and
lcall
inc
insb
jo
aam
inc
aaa
or
push
adc
xor
add
mov
popl
outsl
rcr
insb
lret
out
pop
pop
adc
stos
jb
test
pop
and
adc
sti
mov
sbb
pop
outsl
and
dec
mov
fcoms
adc
cs
push
out
or
mov
inc
in
sub
scas
mov
bound
shr
mov
xor
lret
push
push
lcall
jae
and
bound
repnz
stos
mov
rorl
push
push
jnp
sbb
mov
icebp
cmp
fs
cmpsb
or
icebp
xor
test
inc
loope
jno
dec
push
out
mov
outsl
push
arpl
mov
or
stc
iret
push
or
cmc
cmp
pusha
push
push
enter
int3
lret
dec
sbb
jge
cmpsl
imul
pushl
push
out
ret
lock
adc
cmp
adc
adc
sbb
or
mov
mov
add
cmp
sar
sub
repnz
popf
lock
push
sbb
aad
iret
push
stos
inc
das
sahf
add
lahf
stc
int
or
scas
pop
jnp
dec
dec
and
jno
negl
inc
mov
cmp
inc
xchg
stos
cmc
push
mov
jge
or
cmc
sbb
mov
inc
repz
out
and
mov
stos
xchg
push
scas
jp
push
loope
bound
outsb
cmpsl
cli
fildll
mov
ljmp
mov
and
in
lret
dec
mov
scas
movsb
and
sbb
sbb
inc
insb
jg
mov
pop
push
mov
mov
mov
ss
add
pop
call
add
imul
lea
out
mov
in
pop
dec
fsubrl
jmp
sub
fs
fidivrl
dec
mov
imul
adc
stos
lea
xchg
cmpsb
iret
out
fwait
and
dec
inc
out
sar
ficompl
jmp
or
pop
xchg
fdivrs
fnstsw
fimull
into
add
or
notb
imul
std
hlt
repnz
cmp
pop
into
mov
stos
shlb
ljmp
sarl
mov
rcr
pop
or
mov
aas
xchg
inc
movsl
sti
inc
push
stos
gs
add
fstps
xor
jae
add
cli
mov
sbb
cmp
mov
push
push
inc
aaa
sbb
pushf
sbb
movsl
sbb
jnp
push
out
mov
andl
incl
mov
xor
and
xor
jg
ljmp
mov
push
xchg
fs
pop
in
clc
fadds
mov
dec
std
and
pop
xor
loope
std
aam
mov
ja
sbb
fdivrs
pop
inc
imul
lods
mov
bound
adcb
addr16
repz
lcall
call
cmpsb
mov
cwtl
fucom
cltd
sbb
clc
jb,pt
sbb
xchg
mov
adc
inc
xor
repz
xor
mulb
mov
insb
inc
fcoms
loopne
cmp
test
cwtl
jecxz
push
loope
mov
xor
sahf
xor
and
dec
loop
pop
push
xchg
cmp
xchg
mov
xchg
mov
stos
xchg
and
fdivl
bound
andl
mov
cmp
xor
cmpsl
pop
sahf
and
xchg
repnz
adc
inc
mov
xchg
aam
xchg
ret
mov
cli
inc
jae
jg
notb
add
pop
adc
fwait
imul
inc
comiss
sub
sub
xchg
xchg
mov
lcall
jae
into
outsb
xor
inc
int
or
xor
mov
sub
pop
sbb
jbe
call
es
lcall
adc
sbb
and
mov
sub
dec
sub
sbb
hlt
and
adc
in
push
dec
repnz
sub
add
xor
int
fs
ret
dec
inc
mov
jne
mov
out
aad
and
shl
iret
ljmp
jg
mov
das
adc
adc
mov
push
xor
test
in
in
insb
scas
scas
das
movl
aam
mov
dec
mov
out
in
mov
aam
dec
rol
push
xchg
xor
mov
fidivrl
addr16
movsl
lret
fmul
mov
aaa
pop
mov
inc
lahf
xor
xor
cli
push
inc
sub
imul
sub
and
jns
in
repz
test
das
insl
stc
fimull
and
or
mov
xchg
pop
cmpsb
or
inc
outsb
xchg
or
fnstcw
xchg
in
loop
sar
xor
or
and
je
sahf
pop
mov
mov
movl
aaa
and
fdivr
jge
mov
sbb
sbb
mov
sbb
sub
hlt
decl
dec
sbb
jecxz
and
inc
mov
outsl
mov
adcb
popf
xor
shlb
add
ds
inc
repz
and
jae
cmc
jp
pop
mov
and
je
fbld
sub
pop
mov
push
stos
movsb
pop
mov
sahf
ja
xchg
xor
gs
rclb
or
mov
fdivs
add
xor
lods
out
mov
mov
mov
add
and
out
adc
addl
aam
gs
cmpsl
xchg
les
push
cli
outsb
jns
dec
js
les
inc
jb
pop
xchg
enter
lods
dec
sub
ror
mov
outsl
xchg
cmpsb
je
dec
out
or
test
xchg
adc
test
pop
jo
push
ret
cmp
jl
xchg
fs
sub
cmp
pop
mov
and
or
mov
out
mov
cmp
leave
mov
lret
fst
push
jnp
adc
jecxz
and
sbb
pusha
out
fs
ret
mov
adc
xchg
negb
fldl2t
out
dec
push
fsubrp
and
fisubl
jp
adc
shll
push
daa
orl
or
data16
in
mov
push
push
fstl
adc
cmp
fcompl
jl
inc
in
ja
sbb
adc
imul
push
push
and
int3
ss
inc
das
xchg
cs
push
and
icebp
jnp
fiaddl
cli
push
popf
cld
out
adc
into
mov
repz
cld
rcr
ret
mov
inc
xlat
stos
cmp
test
stos
sub
daa
fiaddl
into
test
push
cmpsl
ss
repnz
cwtl
cmpsl
mov
mov
adc
push
lods
lock
stos
mov
out
pushf
mov
notb
mov
rcll
in
std
scas
sbb
pop
jo
ss
ret
fwait
cld
pop
xor
cmp
test
cmpsl
or
jmp
aaa
ds
repz
ss
jg
push
std
mov
fwait
jb
jmp
lahf
adc
or
stos
mov
push
cld
mov
mov
jp
xchg
dec
and
stos
or
sub
mov
sahf
xor
push
xchg
mov
shll
sbb
sbb
repz
mov
and
loop
dec
xchg
icebp
dec
jbe
sub
inc
fisubl
fstpl
cli
fdivrs
fs
cld
mov
adc
mov
or
cld
sbb
mov
push
cltd
cmp
jmp
mov
cmpsb
or
sub
test
mov
sub
or
cmp
push
icebp
rcrb
push
sub
lret
cli
inc
dec
and
mov
and
enter
push
mov
hlt
pop
aam
les
fnstenv
adc
lea
dec
rclb
fstp
sub
pop
fdivl
push
dec
fcompl
push
xor
mov
jbe
xchg
xchg
mov
std
adc
push
inc
sub
js
xor
push
arpl
aad
sub
inc
aaa
outsl
sti
iret
test
aaa
mov
mov
cltd
add
gs
pop
adc
rolw
xorb
mov
clc
mov
pop
int3
dec
roll
sbb
mov
jmp
inc
xorl
into
adc
xchg
inc
or
jge
adc
icebp
xor
enter
divb
loope
push
std
and
jmp
fnstenv
sbb
or
stc
add
fwait
jge
repnz
xorl
jle
mov
mov
adc
out
adc
movsl
cmpsl
cs
adc
jb
jp
sbb
test
mov
outsb
cltd
mov
xor
push
addb
pop
sub
adc
mov
fidivl
cmp
push
mov
insl
daa
nop
dec
sub
xor
push
shll
jo
pop
xor
shr
rclb
repz
pop
jl
or
cmp
xlat
or
test
add
mov
clc
roll
insb
push
pop
inc
lods
lods
lds
rcr
push
les
rol
daa
es
data16
je
jg
inc
adc
insb
enter
dec
lods
dec
xchg
and
daa
xlat
stc
enter
pop
ljmp
rcr
mov
sub
in
mov
imul
out
repnz
in
xchg
in
jg
xor
loope
mov
dec
mov
mov
mov
gs
pop
movsl
pop
std
dec
jle
or
mov
push
fcomps
push
adc
ret
xchg
ret
js
pop
sbb
push
test
add
cmc
in
inc
ffree
nop
jg
push
sbb
mov
enter
push
cmpsb
pop
jmp
clc
scas
das
mov
bound
mov
enter
mov
and
mov
ss
push
xchg
int3
push
rcrl
leavew
xor
xor
or
xor
popa
sbb
jle
mov
and
inc
cmpsb
xor
popf
xor
jmp
or
rcr
adc
or
mov
sahf
or
fsubrl
aam
xchg
clc
mov
std
test
js
cmp
jbe
in
push
dec
adc
data16
or
pop
sbb
and
mov
cmc
in
mov
or
pop
mov
add
stos
add
adc
push
push
enter
arpl
xchg
imul
mov
mov
cmp
mov
out
mov
xor
loop
das
xlat
xchg
hlt
aad
adc
sub
sub
daa
jge
out
push
xor
push
ja
mov
pop
sahf
jmp
or
sub
jnp
inc
mov
int
mov
mov
xor
xor
ja
push
or
jmp
pop
cmp
ja
rorb
sub
dec
xchg
test
dec
dec
lret
int
xchg
lcall
cwtl
adc
dec
iret
dec
dec
je
adc
add
sbb
xor
xor
shrb
outsb
xchg
mov
mov
mov
cmp
push
rcrb
xor
bound
mov
call
mov
dec
or
mov
mov
addb
push
adc
pop
dec
sbb
fisubrs
shlb
aad
mov
rol
faddl
add
xchg
sub
je
adc
out
lahf
jne
jmp
lea
mov
cwtl
aas
nop
push
cmc
std
movsl
pop
inc
nop
inc
push
ret
inc
cmpsb
pop
outsb
jl
adc
and
in
pushf
shl
sbb
cmp
lea
add
add
mov
xchg
aam
aad
test
xlat
outsl
or
dec
sbb
cmp
cmp
cmp
mov
jecxz
dec
jmp
in
decl
leave
cwtl
pop
sbb
icebp
mull
and
jg
jns
xor
in
cwtl
js
fwait
xchg
loop
outsl
sbb
mov
add
addb
inc
leave
jbe
js
decl
ds
pop
test
dec
xor
cmpsl
scas
aam
shll
inc
into
mov
lret
aas
sub
sub
add
and
rclb
xchg
imul
sbb
scas
fnsave
sbb
push
add
ficompl
pop
out
pop
jmp
bound
nop
dec
inc
sbb
test
xchg
mov
test
pop
add
pop
mov
push
pop
mov
mov
xchg
adc
roll
push
lods
jnp
fcmovbe
mov
enter
ljmp
mov
es
out
add
xchg
mov
dec
inc
dec
shlb
and
mov
cltd
cmp
bound
shll
sbb
dec
sbb
or
filds
push
test
mov
sahf
mov
imul
xchg
mov
data16
adc
test
test
xchg
push
pop
inc
daa
sbb
add
adc
or
sahf
sbb
add
mov
in
sub
mov
sbbb
pop
sahf
ficompl
xchg
adc
mov
insl
xchg
rcll
pop
test
repz
cmpb
cld
jle
cmp
lsl
leave
or
dec
sub
je
jnp
stos
insb
inc
std
hlt
out
sbb
mov
xchg
adc
in
notl
std
jle
dec
int
push
andb
loopne
ret
and
aam
sbb
daa
xchg
inc
add
cmp
rolb
and
mov
sbb
sub
add
pop
mov
imul
cmpsb
sbb
and
xor
out
outsl
and
jle
mov
test
pop
mov
insb
cli
rolb
sub
jmp
jo
subb
mov
mov
test
sbb
adc
dec
loope
loop
dec
roll
or
inc
xor
jmp
and
xchg
sub
ljmp
notl
sbbl
jb
mov
adc
adc
cli
xor
fnsave
pop
hlt
pusha
jmp
mov
xchg
fnstsw
adc
cld
das
or
xchg
pop
pop
fnstcw
pop
les
test
std
sbb
cmp
cli
test
rolb
xchg
bound
dec
lret
xchg
pop
push
movsl
jp
xor
pop
dec
pop
sahf
mov
jnp
negb
mov
in
cmpsl
loop
adc
or
mov
pop
adc
cs
out
out
outsb
les
fistpl
jb
xor
add
xchg
bound
jecxz
mov
mov
dec
push
mov
fistps
jp
mov
jl
inc
push
pop
insl
adc
cld
mov
cmpsb
nop
mov
pusha
xor
sahf
out
movsl
jb
scas
popa
gs
stos
das
outsl
imul
stos
sbbl
cmp
lret
push
dec
sqrtps
test
cmp
pop
in
shlb
pop
mov
and
cs
mov
sub
inc
fs
aaa
push
insl
addr16
stos
inc
jo
and
stos
scas
imul
fiaddl
jne
cmpsb
mov
push
or
xor
imul
mov
cli
insl
fdiv
xor
sbb
outsb
push
jl
in
sbb
test
fstl
cmp
or
xchg
add
cwtl
xlat
loope
push
sti
and
rclb
nop
pop
rcll
dec
fidivrs
add
inc
lret
jl
and
enter
sahf
outsb
adc
inc
and
adc
pushl
arpl
or
mov
pop
cwtl
ljmp
int
cmp
sahf
jo
outsb
sbb
dec
mov
or
mov
int
addb
sbb
jnp
out
jno
cmc
dec
or
aad
insb
jns
enter
xor
fsubr
mov
call
mov
xchg
js
stos
sub
mov
repnz
jl
cli
jl
das
mov
sub
dec
mov
adc
sarl
int3
mov
xor
daa
adc
jmp
scas
imul
mov
sub
js
or
sbb
outsl
sbb
xchg
sahf
aam
xor
jge
add
ds
cmp
push
pop
fdivr
pop
les
psubusw
sub
cli
inc
mov
mov
or
imul
lock
daa
mov
cmp
test
xchg
lea
and
mov
pop
dec
lcall
or
bound
outsb
pop
sbb
sub
pop
das
rcr
das
inc
fs
push
shr
mov
cmp
xor
stos
mov
enter
clc
push
inc
pop
stos
out
test
jge
into
out
push
dec
fldenv
data16
push
cli
xchg
push
je
loope
push
out
cwtl
sbb
in
inc
cltd
imul
es
scas
dec
mov
in
pop
dec
test
or
cmc
frstor
xchg
test
scas
mov
lahf
sub
cmp
js
inc
pop
or
jbe
into
mov
mov
push
shlb
xor
jno
sub
shlb
rolb
js
aas
in
out
jbe
sub
flds
cli
xchg
out
gs
adc
cmpsl
jbe
push
cmpsb
stos
dec
lret
xchg
in
or
inc
xchg
data16
mov
dec
jle
dec
movsb
xchg
inc
jmp
out
xor
pop
pop
push
cmc
lcall
jmp
pushf
ret
loop
jge
mov
shrb
push
test
push
jge
sbb
stc
enter
xlat
dec
imul
mov
add
pop
shrl
mov
leave
ljmp
out
pop
inc
rol
mov
jp
repz
add
pop
pop
dec
mov
xchg
xor
in
sub
xchg
adc
mov
mov
enter
pop
fcompl
push
inc
testl
and
out
int3
ret
movsb
icebp
aad
iret
aas
std
add
scas
nop
aad
mov
test
push
adc
ret
in
arpl
add
sub
add
iret
xlat
jns
mov
dec
aam
xor
cmp
lods
in
imul
les
mov
clc
test
adc
xchg
add
add
pop
inc
xchg
mov
push
sub
xchg
and
or
jl
es
adc
dec
call
push
lds
lea
fwait
and
scas
insl
into
hlt
pop
fistl
cmp
icebp
sarb
sbb
jl
xchg
push
adc
fsubs
outsl
sub
mov
cli
or
sub
testl
sub
push
xor
xor
push
outsl
or
push
inc
lods
outsl
push
dec
push
popf
popf
ret
pmulhuw
gs
lret
sbb
das
jecxz
into
jno
mov
jmp
sub
pop
neg
xor
stc
sahf
pop
push
sub
lods
or
pop
in
sbb
outsb
or
notb
xchg
test
cmp
stos
mov
push
inc
out
adc
dec
popa
sbb
dec
mov
pop
xor
sub
inc
mov
and
dec
jb
add
mov
inc
clc
repz
xor
xor
ror
psubq
mov
sub
sub
dec
adc
arpl
loop
cmp
shll
mov
in
in
arpl
cmp
or
or
roll
dec
daa
xor
ror
adc
rcrb
dec
in
call
xor
bound
dec
popa
mov
push
cmp
jo
cld
mov
jns
cmp
cmp
not
ja
mov
mov
les
dec
test
addr16
xor
mov
xor
loope
iret
sahf
les
mov
ds
int3
inc
cmp
mov
repz
push
mov
fisubs
cmp
mov
inc
insl
test
lcall
cmp
rorl
in
adc
pop
sbb
dec
test
add
sbb
rclb
loop
mov
and
jmp
add
pop
in
pop
incl
xchg
push
inc
mov
outsb
pusha
testl
mov
cmp
or
mov
mov
loop
jmp
or
fwait
lahf
or
add
pop
stos
mov
push
push
mov
add
or
pop
mov
out
popa
sbb
fdivrl
popf
cmp
jl
mov
pop
repnz
fsub
int3
mov
pop
jbe
dec
xchg
mov
xor
ret
test
or
sbb
cli
repnz
out
add
ljmp
cmp
sbb
dec
lods
jo
js
push
jno
xrelease
cmp
cmpsb
or
adc
jnp
pop
jp
mov
xor
fmuls
ror
aas
outsl
loop
ret
dec
mov
inc
cmp
adc
mov
les
and
pop
and
shl
addr16
mov
shlb
cmp
repz
fs
xchg
inc
pop
dec
add
xchg
in
leave
adc
mov
test
enter
es
testl
fimuls
mov
test
mov
mov
jge
mov
gs
bound
roll
push
pop
cmp
dec
clc
stc
loope
mov
fdivr
loop
push
inc
jge
lds
or
cltd
pop
jne
lret
push
sub
add
mov
mov
sub
dec
adc
stc
cmc
mov
sbb
out
xchg
pop
ror
xlat
fmuls
das
sub
pop
daa
pop
pop
mov
cli
fisttpll
mov
inc
outsb
xchg
leave
mov
sub
enter
add
bound
pusha
js
inc
in
adcb
jle
ja
mov
jne
sbb
cld
cs
loop
lcall
xchg
int3
ficoml
shlb
aam
std
inc
outsb
xor
cmp
shrl
dec
stos
push
or
adc
inc
jno
daa
subb
ret
test
mov
aam
inc
and
mov
sub
push
aam
inc
jae
stos
xrelease
or
lock
repnz
scas
pop
or
jns
insl
jmp
xchg
mov
out
cmc
mov
nop
test
and
pop
dec
jo
cmc
negb
pusha
xchg
inc
and
add
cmp
add
sub
insb
xchg
mov
repnz
sub
fs
or
or
lods
test
pmaxsw
mov
sar
xor
addb
mov
mov
fcoml
stos
mov
pop
test
arpl
ss
push
popa
mov
in
sbb
jecxz
roll
adc
lahf
fstpt
adc
jecxz
bound
lods
push
daa
adc
push
fsub
jns
pop
adc
sub
mov
sbb
mov
and
cmp
lret
movsb
repz
js
sahf
jns
push
pop
push
mov
jg
sub
dec
mov
push
or
jae
loop
int
adc
insl
add
sub
dec
dec
or
or
test
test
stos
xor
mov
outsl
loope
fwait
mov
rcrl
ret
faddp
stc
ljmp
in
xchg
in
ficompl
or
sbb
arpl
sub
push
pop
enter
movsl
dec
mov
xor
mov
aam
loopne
inc
push
repz
jg
push
pop
mov
jno
jle
dec
pop
scas
cmp
or
xor
scas
cltd
xor
shll
addb
std
inc
and
sub
mov
hlt
int3
pop
inc
jge
idiv
xor
adc
push
jns
les
inc
mov
shll
or
jl
adc
and
pop
mov
dec
js
lea
dec
lahf
lea
or
out
out
adc
cltd
jle
sar
mov
addl
mov
out
rcll
mov
cmp
imul
pusha
addb
pop
mov
inc
aaa
push
push
dec
mov
data16
addb
mov
xchg
cmp
sbb
lahf
mov
repz
leave
and
jbe
sbb
loopnew
rolb
jecxz
shr
pop
fdivs
jg
sahf
out
sbb
push
xchg
sti
dec
mov
sub
or
ret
sub
add
data16
sbb
shl
jbe
inc
or
xchg
mov
arpl
push
hlt
sub
dec
pop
inc
pop
movsl
xchg
push
mov
cmpl
ja
fsts
xor
fstp
push
int3
bound
mov
out
pop
popw
popa
out
inc
pop
sbb
pop
fcmovnbe
arpl
popa
jb
loop
in
sub
sub
mov
cmpsl
cmpb
add
ja
into
xchg
or
sbb
mul
in
dec
loopne
lret
add
jl
push
adc
mov
cmc
stos
and
mov
fdivl
fildll
pop
scas
insb
pop
gs
xchg
or
sahf
fldcw
mov
loope
je
shll
scas
es
xor
push
pop
lods
pop
inc
loope
out
in
mov
insb
jnp
pop
out
sarb
js
adc
cmp
sti
or
sbb
shl
jge
adc
pop
stos
insb
mov
mov
fs
iret
stc
lock
out
aad
mov
cmp
dec
mov
xchg
and
ljmp
js
sub
lock
outsl
xlat
mov
mov
sub
pop
stos
and
inc
icebp
jne
sub
enter
bound
jne
leave
inc
xchg
lea
pop
aaa
popa
popf
mov
add
stc
sarb
xchg
sahf
leave
ret
pop
dec
cmp
sbb
or
mov
dec
lcall
xchg
insl
xor
and
cld
inc
ss
inc
jp
in
mov
fiaddl
fld
adcb
adc
cwtl
push
mov
repz
add
adc
inc
cmc
xchg
cltd
inc
mov
enter
or
lcall
xlat
sub
and
fisubl
daa
mov
jle
aam
movl
cmc
jmp
gs
nop
dec
jmp
cmp
jnp
rorb
mov
inc
jbe
dec
lods
lret
ss
sbb
popf
xorl
inc
aam
pop
pop
fadd
inc
push
imul
jge
js
rcrb
mov
ret
stos
mov
jb
cmc
adcb
cmp
mov
cmp
mov
push
std
sbb
cmp
mov
or
inc
mov
pop
push
lock
mov
mov
fidivrl
gs
push
fucom
inc
icebp
repnz
mov
push
int3
sub
adc
mov
push
sarl
test
hlt
ret
or
enter
addr16
cmp
pop
pop
movsb
mov
js
push
cmp
daa
loope
fcompl
xchg
push
pop
jo
test
sbb
inc
jg
in
mov
and
loopne
inc
lock
arpl
inc
mov
daa
adc
mov
adc
dec
adc
mov
dec
out
ror
daa
aaa
hlt
sbb
repnz
mov
test
sbb
test
pusha
pop
adc
cli
bound
or
scas
fists
xchg
and
push
int3
cmp
lock
dec
push
in
js
jp
outsb
call
dec
popa
push
push
insl
insl
in
out
dec
mov
arpl
test
pop
mov
scas
adc
add
pop
es
mov
mov
dec
fadd
filds
std
push
fnstsw
loopne
test
jmp
in
pop
add
adc
int3
shrb
filds
aam
out
stos
or
push
add
and
inc
xchg
or
js
sbbb
mov
hlt
out
xchg
pop
xorl
add
sbb
je
xchg
test
dec
es
push
into
push
jl
adc
ret
push
shlb
push
jmp
test
cmp
enter
ja
jmp
popa
xacquire
fimuls
or
ja
or
xor
xor
sbb
xchg
mov
push
adc
or
jae
outsb
mov
scas
into
fwait
mov
ficomps
inc
xchg
ss
stc
jae
mov
mov
mov
lret
pop
and
lret
add
loopne
sbb
cs
mov
test
pusha
lcall
pop
jmp
mov
aad
mov
lret
fldcw
loopne
fisttpll
rorb
add
pop
lea
adc
dec
sbb
nop
add
jnp
stos
out
mov
mov
int
std
xchg
popf
in
adc
adc
dec
and
pop
cltd
cmpsl
mov
jg
or
xchg
xor
sbbb
mov
mov
mov
cmpsl
wbinvd
cmpl
dec
push
cmp
shll
test
cltd
mov
orb
test
outsl
outsb
adc
xor
pop
mov
mov
outsb
into
ja
and
jae
sub
loop
inc
sahf
push
xor
cli
sbb
push
stc
sahf
test
xor
mov
outsb
test
lods
dec
in
jne
data16
lea
sub
sub
stos
xor
cld
fimuls
jae
add
enter
mov
or
ja
repz
dec
jno
adc
sbb
cmp
pop
leave
dec
mov
fildll
rol
xor
jnp
pop
and
int
xchg
jae
and
xchg
mov
lcall
loopne
fld
xor
hlt
xchg
pop
adc
lds
mov
insl
pop
div
aas
fsts
int3
dec
or
adc
sub
shll
xor
adc
dec
out
xchg
mull
movsl
lock
adc
xor
leave
sbb
mov
mov
loope
cmp
add
rcl
repnz
test
and
addb
pop
jg
out
lods
mov
cld
fisttps
clc
loop
ss
mov
repz
addr16
rcrb
sti
add
popf
jmp
test
imul
push
push
jp
adc
sahf
mov
xacquire
push
xchg
icebp
jne
pop
test
jmp
enter
add
imul
into
fisttpll
movsl
pop
insl
mov
pop
in
mov
or
stos
out
or
stos
pop
aam
je
test
imul
dec
mov
shrb
cmp
addr16
cmp
jge
dec
mov
sub
sbb
sub
add
and
aam
in
mov
and
push
sbb
xchg
into
je
inc
sbb
xchg
enter
movsb
dec
stc
jns
and
xor
js
sbb
inc
mov
movsl
popa
stos
jb
mov
jge
sub
fstps
dec
mov
add
xor
rcl
mov
nop
outsb
pusha
inc
pusha
mov
jge
icebp
jle
dec
mov
add
pop
or
mov
adc
push
loop
pop
jbe
cmp
out
daa
shll
ficomps
jecxz
push
pop
sbb
mov
jbe
jmp
adc
add
mov
lcall
sarb
jp
and
mov
push
sahf
fsubp
inc
xor
pushf
dec
aad
ss
inc
push
jnp
stos
jae
shlb
dec
lcall
scas
mov
push
rclb
sub
adc
in
insl
arpl
fiaddl
mov
lds
or
testl
aaa
fisttpll
jle
lcall
insb
divb
es
jae
push
pushf
test
and
add
pop
add
rcl
xor
movsl
cmpsb
mov
pushf
cmp
icebp
xor
cmp
mov
lock
cmpsb
sub
fcmovnu
rclb
dec
jge
cmc
fs
mov
jnp
mov
xchg
mov
notb
inc
mov
mov
add
or
xchg
sti
test
mov
cltd
push
jecxz
xchg
addr16
std
jl
ss
jb
sar
mov
addr16
pop
xchg
jae
lds
lods
jnp
stos
and
jbe
js
out
setne
into
sbb
pop
xor
ljmp
hlt
cmc
fcom
jle
lock
mov
xchg
xchg
insl
pop
rorb
enter
mov
aam
jb
xor
rorl
repz
jle
in
or
imul
movsl
imul
mov
push
leave
jo
pop
xor
adc
sub
incl
xchg
cmp
out
sub
xchg
sub
mov
ja
pop
push
xor
mov
xlat
fcompl
leave
cmp
sub
sbb
cmp
gs
pop
xchg
divl
dec
sub
mov
aaa
pusha
jge
mov
subl
cli
sahf
faddl
fwait
add
adc
or
xchg
adc
sbb
scas
mov
add
pop
cmp
xor
dec
mov
adc
mulb
push
sub
lock
es
cmp
push
xor
dec
sbb
outsl
into
adc
popf
es
jp
push
pop
xchg
jmp
add
and
add
fcmovu
push
adc
movsb
dec
std
fisubrl
in
testb
in
sub
sub
mov
sbb
daa
and
fwait
dec
mov
icebp
sti
mov
mov
dec
push
fcom
cwtl
inc
dec
cmpsb
push
sbb
mov
jle
popa
pop
jmp
repz
ja
pop
mov
ljmp
outsb
or
out
and
push
lcall
mov
jge
jnp
aas
dec
xchg
lods
stc
jno
lods
push
outsb
les
pusha
push
rorl
stos
mov
or
dec
scas
add
cs
jmp
stos
mov
or
xchg
jmp
sarb
push
add
loopne
pop
ret
dec
mov
push
shl
dec
and
push
push
xor
aaa
pop
push
inc
push
lods
jnp
adc
xor
push
xor
inc
inc
js
adc
jb
dec
mov
lds
in
cwtl
mov
dec
mov
fs
mov
mov
lock
outsl
jb
jle
je
sub
mov
add
pop
xchg
dec
std
dec
dec
add
insl
imul
cmpsb
pushf
push
jg
gs
lods
or
mov
add
jmp
or
nop
rcrl
jl
or
in
test
data16
ja
jecxz
mov
mov
into
loopne
or
cmc
bound
sbb
push
outsb
stc
nop
shll
add
pop
or
fnstenv
ss
xlat
mov
mov
inc
lods
jne
push
out
notl
icebp
in
sbb
lcall
push
mov
es
adc
mov
aas
mov
xlat
cmc
add
add
jmp
arpl
cmpsb
or
push
loope
xorb
sbbl
subl
mov
repz
filds
arpl
jecxz
jg
lret
xor
push
jl
fsubs
sub
sbb
add
mov
aad
stos
push
mov
pusha
movsl
repz
enter
push
adc
adc
mov
loopne
add
and
lea
call
cmp
cwtl
jne
xchg
ud1
mov
and
in
jne
stos
mov
mov
xchg
dec
stos
push
add
les
pavgb
add
setne
add
iret
into
aas
lods
bound
imul
xchg
testl
rcl
mov
adc
cmp
mov
jl
out
xor
inc
mov
mov
or
and
jle
add
adc
xchg
jmp
enter
clc
sbb
out
inc
out
subl
fiaddl
mov
fcom
push
xchg
lods
xor
in
xor
daa
enter
sub
xorps
jbe
pop
lret
push
shufps
cs
mov
jb
add
jmp
add
loope
int
add
popf
add
push
push
mov
sub
xor
xor
js
xchg
mov
ss
jns
mov
jl
roll
outsb
rorl
adc
cmp
or
sub
jle
movsb
mov
push
mov
inc
xchg
lock
repnz
mov
ds
das
jb
scas
rol
inc
ja
fadds
adc
push
jo
jae
ss
xchg
sarb
and
adc
or
ljmp
jle
hlt
adc
push
hlt
movsl
cmpsl
jno
int
cmp
movsl
add
jl
mov
mov
insb
jo
pop
neg
jle
sbb
xor
adc
arpl
xchg
rcrb
push
int3
bound
cmp
aad
notl
in
jno
xor
jae
ret
xchg
dec
sbb
pop
pop
dec
mov
xor
inc
scas
icebp
mov
pop
std
pop
sbb
xor
pop
lods
push
dec
mov
adc
dec
add
pop
jno
imul
add
lods
push
pusha
test
and
test
sbb
lock
inc
int3
xchg
sbb
push
jno
insl
icebp
sub
popf
sahf
xorl
out
clc
and
mov
rorb
inc
cmp
dec
xchg
cli
out
out
mov
and
cmp
in
sub
movsb
mov
push
sub
jno
and
xlat
xor
xor
dec
sbb
cwtl
add
xchg
sbb
fsts
cwtl
mov
xor
ljmp
mov
mov
sbb
xchg
adc
dec
lret
jo
push
mov
xchg
dec
movsb
push
test
jge
stc
sub
sub
and
xchg
addb
xorl
cmpsb
lea
testl
mov
cmp
lret
pop
fstl
push
adc
jg
mov
mov
cltd
cltd
std
mov
insl
xlat
aaa
ds
push
mov
outsl
aam
das
jle
xchg
cmp
push
xlat
pop
mov
adc
lock
xor
mov
imul
cld
lret
mov
add
cmp
and
out
mov
jge
leave
stos
mov
mov
loop
mov
jmp
inc
xor
scas
push
xchg
lea
imul
xchg
jnp
popa
jnp
sub
aaa
cmp
hlt
jl
push
xchg
ror
inc
inc
push
push
rolb
lods
mov
inc
add
jnp
xor
aad
adc
cmpsl
mov
push
aam
sbb
jmp
mov
sbb
cli
outsb
pop
imul
jb
push
scas
cli
xor
scas
mov
out
push
pop
dec
repz
fimuls
xor
sti
mov
divl
xor
out
mov
fsubs
or
cmp
xlat
cmp
push
sub
lret
pusha
jp
clc
mov
mov
cmp
in
or
xchg
xchg
mov
jle
int3
insb
imul
push
nop
imul
sub
dec
outsb
mov
out
out
das
mov
shlb
pop
mov
push
imul
pop
cwtl
pusha
shll
xchg
sub
jne
daa
add
iret
xor
pop
insb
das
dec
cmc
inc
xchg
fnstsw
push
iret
out
push
lds
mov
out
rcll
es
sti
jne
nop
cmp
out
not
rorb
movsb
inc
and
mov
xchg
imul
push
jo
leave
repnz
add
test
lock
stc
xchg
push
mov
or
and
ds
loop
jp
sub
nop
outsl
xor
jnp
add
ljmp
notl
pop
sbb
add
loop
xor
mov
mov
les
pop
or
or
fcomi
call
mov
inc
dec
loopne
mov
and
cli
cmp
mov
out
sub
mov
xchg
popa
or
mov
push
mov
insb
idivl
mov
outsb
xchg
push
sbb
std
and
mov
adc
xor
dec
add
push
add
mov
jp
mov
mov
or
es
mov
in
repnz
popa
push
mov
ret
adc
out
fistl
in
xchg
pop
fldt
popa
hlt
cmp
or
jae
sub
adc
imul
push
jns
xchg
das
cmp
mov
bound
mov
push
iret
cmpb
pop
jnp
adc
into
cli
cltd
lea
in
xchg
rolb
mov
inc
test
aam
lods
subb
pop
mov
push
push
mov
in
cmp
mov
mov
sbb
out
movsl
pop
adc
ret
js
mov
push
repnz
dec
mov
fucomp
dec
mov
push
and
xchg
and
addr16
xchg
inc
aas
popa
sbb
out
jo
dec
adc
insl
cmp
cmp
jne
out
mov
mov
xor
xchg
push
nop
stc
movsb
xor
mov
pop
pop
mov
sarl
push
clc
ret
stc
inc
jmp
call
sub
sub
das
inc
in
movsl
jnp
jae
cmpsl
adc
adc
or
jecxz
roll
jo
imul
inc
test
push
cmp
das
ss
daa
iret
adc
or
adc
xor
lea
lods
aad
mov
movsb
sbb
loope
orl
cmpsl
mov
push
loop
aas
lret
out
jle
movsl
sub
cmc
sbb
cmp
ret
je
cld
shll
jp
push
cmc
movsb
testl
pop
sbbl
mov
rcrl
mov
push
repz
fiadds
adc
orb
and
aad
cli
mov
push
test
mov
stos
int
cmp
and
fdivrl
pop
mov
adc
rolb
pop
test
out
lahf
sarb
mov
dec
xor
lds
addl
ljmp
jns
test
insb
jmp
jns
xchg
stos
and
mov
xlat
mov
lds
in
test
sbb
clc
pusha
add
outsb
loope
cltd
lret
inc
jns
ja
cwtl
adc
xor
jecxz
sbb
jno
jg
lea
pop
mov
sarl
mov
dec
sti
imul
push
cmc
xlat
inc
cmpsb
dec
mov
out
fbstp
mov
dec
pop
sub
jecxz
testb
popl
lods
xchg
ljmp
test
lock
daa
mov
jge
xor
adc
fs
xchg
test
xchg
clc
sub
mov
out
shll
daa
mov
and
fdivs
adc
mov
jecxz
jle
outsb
xchg
mov
and
inc
cmc
enter
push
inc
insb
imul
push
popf
add
cmp
ret
and
out
insl
mov
mov
es
xchg
fistl
sbbb
mov
ret
cmc
outsl
popw
bound
add
addr16
sti
xor
sbb
or
gs
pop
jge
loope
out
leave
xchg
daa
fstps
push
jl
shll
sahf
cmpsb
inc
aas
sub
or
frstor
sub
push
jae
cwtl
stos
movsl
fisubrl
adcb
dec
add
imul
inc
scas
ss
push
and
aad
je
xchg
mov
aam
cld
daa
nop
inc
ljmp
push
dec
ret
in
pop
iret
and
lret
insb
hlt
xor
mov
dec
ffree
jge
mov
add
gs
enter
xchg
inc
xor
movsb
ja
push
push
call
pop
loop
popa
pop
insb
or
int
jl
add
nop
lods
loope
adcb
test
push
pop
iret
push
fs
push
scas
gs
sub
or
stos
jbe
insl
rcl
imul
lcall
gs
and
ja
push
and
lret
xchg
shlb
sub
lcall
adc
mov
xchg
out
adc
jns
sahf
pop
xlat
clc
push
adc
jl
lret
sub
push
es
in
repnz
out
loope
scas
in
push
sub
xchg
jp
push
repz
div
mov
mov
or
xlat
cwtl
arpl
lret
mov
push
jle
mov
jl
ljmp
sub
push
ret
xlat
mov
sbb
loopne
sbb
ljmp
mov
inc
adc
in
mov
jecxz
mov
call
jge
mov
imul
pop
jnp
xor
mov
out
mov
pusha
push
add
sub
aam
inc
repz
pop
push
pop
adc
mov
cmp
fsubl
and
jo
data16
stos
jno
icebp
lods
into
ds
jmp
xchg
flds
or
adc
sub
dec
mov
inc
repnz
mov
ffree
xor
jnp
mov
insb
push
ss
ds
lods
repnz
push
cld
push
rcrl
sbb
adc
aam
xor
mov
jp
jns
sahf
adc
shlb
mov
or
mov
pop
adcl
and
or
pop
add
or
or
pop
cli
xchg
cmc
pop
sub
inc
add
push
xor
pop
insb
adc
popf
lret
cmpsl
imul
clc
xchg
xlat
call
mov
xchg
mov
cli
jne
mov
mov
sub
push
cmp
jl
xchg
loopne
pop
lea
loop
add
lea
jmp
loope
scas
xchg
fnsave
mov
in
ds
outsb
add
fnstsw
jl
insb
mov
inc
and
test
sub
dec
stos
push
imul
outsl
dec
mov
or
mov
lret
bound
and
lret
xor
jmp
mov
imul
xorl
decb
das
fistl
hlt
mov
sbb
scas
or
shl
orb
das
faddl
fs
sbb
imul
aad
loopne
mov
jnp
sbb
dec
ja
loopne
or
cmp
jecxz
fisubs
mov
mov
ljmp
sti
cmp
insb
cmpsb
movnti
int3
dec
mov
icebp
mov
mov
push
stos
cs
sbb
jnp
cs
test
mull
xchg
pop
or
sbb
cltd
sub
test
push
xor
xchg
cld
fwait
rorl
loopne
jle
xor
xchg
mov
nop
sahf
out
jae
in
aam
pushl
scas
rol
insb
gs
mov
mov
ja
mov
jl
pop
cmpsl
clc
sub
and
push
pop
std
and
dec
or
sbb
daa
je
sti
into
push
test
fdivs
popa
mov
and
loop
adc
imul
inc
mov
jl
xchg
adc
lahf
push
mov
jb
push
sbb
dec
adc
fmulp
mull
in
imul
jmp
fcoml
rcll
fstl
xchg
sbb
xor
dec
loope
bound
mov
ljmp
mov
lods
ss
cmp
repnz
push
and
fadd
cld
xor
dec
hlt
ret
pop
mov
mov
ficompl
inc
adc
xlat
fwait
out
lods
loope
ret
xchg
testb
shl
inc
pop
pop
in
movsl
outsb
ds
fcomps
adc
lahf
lods
bound
lret
test
push
outsl
pop
mov
or
jl
fwait
mov
mov
dec
stos
sahf
adc
xor
push
dec
push
mov
jle
jp
push
dec
add
inc
xor
jmp
jbe
add
jle
sub
push
addr16
jno
jmp
push
xor
jne
addr16
jnp
in
pinsrw
add
imul
push
pop
orb
xchg
std
loopne
std
daa
sub
outsl
rclb
push
iret
cmp
push
pushf
cmpps
mov
push
int3
jmp
mov
xchg
mov
aam
or
into
or
push
mov
xchg
jl
sbb
dec
mov
popf
pushf
pshufw
bound
or
pop
xchg
ljmp
xor
add
jae
xchg
mov
inc
xchg
jl
xorl
xchg
fiadds
push
bt
in
movsb
pusha
movsl
xor
pop
cmp
inc
out
and
add
cmp
pop
push
cmp
or
fs
mov
fbld
mov
daa
xchg
loope
mov
mov
cmpsl
sub
push
adc
mov
mov
adc
push
fs
xchg
pop
inc
cmpb
jmp
mov
dec
inc
xlat
stos
lahf
inc
es
mov
jl
adc
mov
pusha
jne
imul
sbb
es
xchg
push
das
mov
xorl
js
sti
jge
jle
or
and
cmp
xchg
lock
fcmovnu
je
sbb
mov
pop
pop
dec
bound
movsb
dec
xor
inc
sbb
aam
pusha
int3
movsbl
ljmp
in
and
test
add
cmpsl
fs
jp
aam
xor
sub
xchg
jge
pop
sub
adc
cmp
cmpb
aam
sbb
insb
lock
or
sbb
xor
ret
sub
aaa
out
in
mov
es
pushf
idivl
push
imul
insb
push
mov
aaa
ret
pop
clc
stc
cmc
roll
int
push
inc
jmp
jmp
test
shrl
pop
std
sahf
and
cltd
mov
ret
inc
fwait
imul
and
push
inc
inc
xchg
js
push
in
jb
insb
sbb
in
dec
aam
lret
and
lods
imul
inc
xor
jmp
and
mov
jmp
xchg
xchg
fstpl
sahf
add
je
into
jns
inc
mov
jo
pusha
mov
xchg
add
lds
imul
dec
mov
sub
mov
int
or
xchg
ja
movsl
or
subl
mov
sub
dec
cld
or
roll
in
lcall
pop
arpl
inc
in
lret
sarl
lea
fildl
adc
or
and
xchg
lds
ret
and
pop
push
sub
arpl
mov
lock
jle
stos
fs
dec
sub
adc
add
or
sub
jnp
jo
jns
jmp
stos
mov
mov
jl
out
lahf
pop
iret
adc
nop
out
jbe
mov
and
incl
pop
jo
popf
add
push
push
xor
mov
add
sbb
mov
shrb
out
iret
gs
cmpsl
rcrl
xchg
lahf
jae,pt
mov
xchg
loop
xchg
add
xchg
cmp
cs
dec
xor
lcall
cltd
add
adc
call
inc
fstpt
filds
adc
cmp
rcll
mov
ficoml
divb
mov
cltd
xor
xor
mov
and
xchg
and
pop
inc
out
aad
add
mov
xor
fiadds
dec
push
jmp
push
cs
clc
dec
lret
inc
sub
push
stc
imull
xchg
xor
pop
popf
jmp
xchg
cs
pop
sbb
cmp
popa
mov
rcrb
pop
out
and
xor
rcll
popf
sub
mov
into
inc
iret
std
and
inc
addl
aaa
pop
loope
popa
lds
test
enter
daa
aas
adc
push
dec
out
lods
and
pop
insb
or
repnz
push
iret
sbb
jne
pop
xor
jnp
call
movsb
pop
xchg
das
outsb
pop
mov
xor
inc
lcall
gs
cs
scas
dec
fwait
sbb
mov
lahf
sahf
sbb
inc
jo
js
xchg
daa
leave
jns
out
pushf
xchg
outsb
rolb
dec
adc
cmp
fs
fdiv
stos
jnp
out
lods
pop
fwait
sbb
xor
pop
lods
out
fdivr
jne
aaa
repz
and
popa
inc
lods
push
mov
push
call
jecxz
dec
sub
bound
dec
mov
or
jnp
pop
mov
pop
fistpll
mov
dec
dec
cwtl
sub
rolb
popa
int3
sbb
and
fcoml
psrad
repnz
imul
pop
sbb
or
sub
add
cli
subb
add
cmpsl
jns
icebp
rcrb
mov
lods
jae
cmp
pop
imul
adc
or
in
dec
cmp
push
int3
dec
push
push
mov
imul
or
push
stc
xchg
add
imul
les
ljmp
pop
lea
int3
pop
pop
dec
jmp
xlat
stc
sub
popa
or
and
in
mov
xchg
sbb
mov
pop
push
xchg
push
sahf
lahf
ret
jo
xchg
addl
and
lea
outsb
call
shlb
sbb
push
xor
jnp
xlat
mov
sub
adc
and
enter
loopne
add
rcrl
negl
or
jno
shlb
pop
dec
dec
out
inc
mov
pop
dec
popf
and
sbbl
mov
xchg
xchg
dec
mov
mov
jecxz
cwtl
mov
sbb
adc
decb
add
aam
imul
fmuls
into
pusha
das
imul
in
ds
addr16
ret
push
push
inc
cs
pop
add
mov
dec
adc
aas
jns
push
inc
arpl
pushf
sti
mov
aam
add
in
xlat
sbb
push
dec
cmp
or
pushl
shll
pop
mov
sbb
mov
pop
push
test
icebp
xchg
cmpsl
or
cmc
cmp
jnp
int3
cmp
test
popa
jnp
xor
lea
out
or
push
out
sub
aaa
mov
inc
push
adc
enter
mov
push
mov
jge
xchg
stos
jne
pop
mov
adc
or
cld
or
inc
adc
mov
add
add
add
add
add
adc
add
notb
cmpsl
sub
xlat
popf
sub
pop
adc
pushf
leave
fdiv
adc
fdiv
adc
das
add
aas
sbb
notb
cmpsl
sub
notb
cmpsl
sub
notb
cmpsl
sub
outsb
dec
lret
mov
cmpsl
sub
notb
cmpsl
sub
notb
cmpsl
sub
notb
cmpsl
sub
notb
cmpsl
sub
notb
cmpsl
sub
lret
add
add
pusha
add
add
xor
add
pushf
pop
add
aam
add
lds
jge
add
add
cld
sbb
sub
inc
add
rolb
add
test
add
lods
xor
add
sub
add
sbb
add
add
mov
push
add
add
add
add
add
add
cmpsl
jmp
add
sub
testb
nop
call
rolb
add
mov
add
mov
add
cmpsl
jmp
add
cmpsl
or
push
add
add
push
addl
rolb
add
or
add
add
add
pop
out
add
push
dec
andb
add
loopne
add
add
add
add
pop
out
add
adc
add
cmp
inc
add
add
dec
pop
mov
mov
add
push
add
add
js
add
js
add
jno
add
mov
lahf
jae
add
add
and
data16
movsb
push
add
push
add
add
inc
addl
add
add
add
sub
sbb
add
add
movsb
jecxz
and
cs
and
pusha
insl
add
pop
xchg
ret
rorl
mov
ja
pop
mov
les
cwtl
jne
push
shr
lods
sub
mov
inc
jb
sub
insl
popa
ds
insl
notl
add
cmp
inc
xchg
in
xchg
rcrb
fdivr
xchg
cmp
jmp
neg
mov
out
xchg
pushf
jbe
repz
inc
xor
mov
dec
rep
jnp
sub
push
inc
call
add
pop
pop
lea
fmul
pop
imul
cwtl
push
jo
lods
pop
jge
rep
push
imul
cmp
stc
mov
in
cs
scas
ds
incb
xchg
xchg
pop
loop
inc
mov
xchg
pop
push
imulb
lret
add
ds
mov
lds
adc
sbb
adc
mov
fsub
dec
cmp
or
mov
pop
mov
dec
pop
cmp
xchg
inc
sbb
test
cwtl
fcompl
push
stos
aad
pop
scas
incb
xchg
xchg
xchg
adc
outsb
pop
add
pop
dec
adc
xchg
fdivrl
dec
add
and
sbb
icebp
jb
fimuls
hlt
push
rorb
lock
daa
loope
cmp
subb
pop
lcall
cli
xor
ret
repnz
mov
xchg
lret
cmp
jb
outsl
pop
repz
sub
fdivrl
popa
in
test
dec
xlat
in
ljmp
fnstenv
jo
push
arpl
std
xor
cmp
cltd
repz
jae
in
push
in
inc
xor
xchg
pop
into
jb
xor
fisubrs
adc
daa
lods
adc
mov
divl
stc
dec
mov
mov
fwait
jnp
mov
enter
mov
adc
fcmovne
mov
mov
dec
push
add
fnstcw
push
push
cmp
clc
and
dec
pop
push
dec
pop
xchg
push
jecxz
js
cmpsl
inc
mov
sbb
icebp
mov
repnz
fnstsw
ret
into
popf
test
fbld
jbe
rcrl
lods
jno
fildl
inc
mov
sbb
stos
jnp
xchg
push
sub
xchg
repz
adcl
adc
and
or
sub
ss
cltd
push
cmpb
lcall
mov
push
lods
out
sbb
std
test
sub
mov
cmp
inc
cmc
aad
shrb
pop
inc
cmc
push
push
mov
mov
ljmp
dec
jp
inc
loopne
insb
leave
mov
sti
call
cmp
pop
mov
sbb
movsl
inc
or
mov
repnz
push
imull
mov
jl
daa
aas
mull
pushf
dec
push
push
sbb
jmp
shlb
and
pushf
adc
nop
stos
add
bound
in
iret
or
mov
imul
sarl
fmul
adc
daa
hlt
push
sub
cmpl
adc
add
imul
or
es
push
adc
and
mov
adc
fs
dec
cltd
movsl
xor
lret
test
mov
xchg
int
xchg
push
divb
xchg
adc
sub
push
push
xor
pop
hlt
adc
ror
scas
pop
sbb
lahf
lcall
cmc
sub
fsubrs
add
sub
and
repnz
push
xchg
rcl
xchg
les
jmp
js
cmpl
sahf
idivb
lock
jmp
jne
jae
mov
pop
pop
xchg
mov
loop
lret
push
mov
or
loope
inc
sti
inc
ds
xchg
cmp
sbb
divl
xchg
inc
or
jbe
push
mov
mov
adc
xchg
fidivl
dec
lahf
insl
shr
sarb
cli
dec
xlat
inc
hlt
dec
push
adc
es
test
imul
mov
fcomi
push
push
adc
mov
cmpsl
fimuls
jnp
sti
jle
inc
xor
mov
addb
sbb
ret
in
icebp
xchg
out
add
and
repnz
cmc
in
xor
popa
cmp
adc
sahf
int3
hlt
pop
fs
lods
lock
adc
mov
stos
arpl
mov
imul
aad
pop
or
movzbl
xchg
in
push
ss
mov
mov
movsl
subl
adc
pop
inc
scas
rcrb
call
or
mov
cli
add
sbb
push
into
mov
jg
clc
outsl
scas
jno
dec
negb
jge
cld
push
cld
push
push
mov
mov
popl
fistpl
pop
pop
out
cli
test
shlb
lcall
sub
dec
cmp
jg
mov
cmc
push
adc
clc
mov
lds
shrl
or
pop
push
push
js
ss
lods
jecxz
test
cltd
scas
imul
pop
negl
mov
lea
and
mov
push
aaa
out
xor
sub
ror
pop
fwait
mov
jbe
pop
repz
enter
loop
adc
xchg
jl
into
push
in
cld
sbb
push
pop
mov
decb
shlb
push
jp
inc
sbb
mov
cmp
shlb
test
in
push
out
pop
xor
mov
je
in
clc
mov
cmpsb
ret
lret
ss
out
fwait
inc
mov
js
out
test
movsb
clc
mov
push
xchg
sbb
stos
xchg
mov
sbb
or
push
movsb
push
xchg
adc
jbe
sub
mov
scas
outsl
loop
mov
ja
xchg
scas
pop
add
push
pushaw
int3
mov
out
jmp
dec
lea
stc
aaa
pop
fdivl
push
cmp
xor
inc
jb
xor
mov
xor
and
pop
lods
and
sbb
mov
das
addb
je
dec
fstpl
stos
sbb
daa
push
fisubrl
test
xlat
sub
les
add
dec
rorb
adc
mov
cmp
test
sbb
inc
je
idivb
daa
mov
ret
loop
sbb
in
sbb
fs
icebp
std
inc
enter
xor
jae
call
cwtl
imul
sti
arpl
jge
iret
or
enter
fsubs
and
or
rcr
call
cmc
inc
std
aaa
fnstenv
fwait
pop
dec
or
and
adc
pop
repz
dec
fistl
insb
popf
xchg
mov
aam
pop
cmp
es
popa
inc
mov
jg
loop
in
cmpsb
subb
scas
and
das
jns
lods
dec
cld
scas
decl
mov
sbb
jecxz
sbb
popf
rolb
mov
out
sbb
rorb
dec
mov
lret
mov
push
mov
pop
inc
adc
cmp
int
paddsw
fucomi
icebp
bound
mov
xor
cwtl
inc
js
jbe
hlt
sub
push
lds
sub
adc
sahf
out
add
aad
fcomp
mov
pop
pop
and
es
sub
shlb
shlb
and
in
out
dec
dec
jne
xor
orl
add
lret
xor
mov
jno
call
xlat
paddusb
jmp
pop
cs
sbb
pop
dec
movsl
xchg
jbe
push
clc
xor
les
in
mov
insb
xor
sbb
sarl
popa
rcrb
sub
mov
bound
add
xor
popf
inc
sub
cli
movsb
dec
and
js
inc
in
xor
push
xchg
xor
aam
xchg
scas
imul
xor
push
cmp
jl
cmp
iret
pop
xor
lock
aaa
sub
mov
and
push
mov
add
push
jecxz
test
stos
rolb
out
pusha
adcb
and
inc
leave
mov
lock
lods
nop
xlat
cmpsb
lahf
mov
cmp
popf
mov
loope
mov
xlat
mov
repz
sbb
pop
dec
testb
call
mov
inc
xchg
fsubl
stos
out
cmpsb
pushf
dec
mov
pop
jge
or
mov
sbb
mov
hlt
imul
dec
push
mov
inc
pop
sbb
int3
stc
sbb
mov
incl
adc
sbb
mov
xor
repnz
out
cmpl
sub
lock
cmpsb
cld
mov
xchg
test
sbb
repz
push
sbb
cmp
outsb
dec
pop
push
scas
jne
stos
pop
push
lods
xchg
stos
lods
push
cli
mov
dec
lcall
jb
xchg
test
lods
xchg
xor
sub
in
enter
push
add
iret
cmp
rcll
psrlw
loopne
jge
inc
fst
cmp
push
orps
inc
adc
jb
jbe
les
cmpsl
ffreep
push
push
cmp
xor
idivl
jne
mov
mov
fiaddl
repz
sub
or
xchg
pop
mov
inc
std
jb
mov
movsb
xchg
or
rcr
loop
mov
mov
ret
and
mov
mov
inc
test
sbb
not
loop
or
ror
lret
inc
xchg
or
sahf
mov
and
mov
ds
and
cmp
mov
sbb
movsl
fcmovbe
in
enter
js
addr16
push
sar
pop
cmp
inc
fistpll
rsqrtps
cmc
je
jae
ret
mov
sbb
dec
push
adc
dec
jl
test
inc
add
pop
and
add
shll
mov
xor
insb
xor
pop
and
xchg
adc
sub
pop
xor
fstps
divl
mov
mov
jne
cltd
mov
das
fsubl
lcall
push
mov
inc
xor
ret
sbb
xor
out
fidivs
ja
leave
mov
aaa
lods
icebp
push
popf
cmp
sub
bound
pushf
push
mov
jnp
xor
cli
outsl
fstpl
out
mov
out
xchg
mov
and
in
mov
clc
jl
std
repz
pop
mov
sarl
out
aam
jg
mov
mov
pop
ficoml
popf
inc
out
sub
dec
xchg
rcr
dec
dec
ror
cmp
pushf
push
sbb
or
scas
inc
in
xor
push
push
push
orl
jg
jge
and
jp
fcmovb
adc
xchg
ds
pusha
dec
insl
sbb
xchg
out
sbb
xchg
xchg
mov
mov
stos
int
and
pop
push
mov
inc
mov
push
dec
clc
loop
gs
inc
mov
mov
loopne
adc
mov
xor
icebp
jns
cmp
cmp
mov
iret
aam
into
rcrb
sbb
xor
clc
adc
sbb
xor
add
sub
xor
sbb
add
mov
imulb
pop
jno
into
jo
xchg
sub
mov
mov
in
or
dec
andl
pop
inc
dec
flds
mov
ficomps
mov
xchg
sub
add
jnp
mov
cmp
fs
adc
cmp
sub
outsb
and
rcrb
mov
push
mov
xor
cmpsl
ljmp
js
out
pop
loop
and
mov
sbb
push
rcr
adc
cmp
bound
mov
push
and
adc
push
pop
ds
mov
iret
mov
push
mov
cwtl
xlat
add
xor
repz
xor
aas
sub
mov
negl
sub
lods
xchg
test
xchg
mov
pop
in
mov
pop
xchg
sub
adc
push
orl
inc
xchg
add
cmpsl
roll
sbb
lock
jp
call
popa
in
xacquire
cmp
jge
pop
push
test
xchg
add
xor
cmp
or
jge
icebp
xchg
out
cmp
xor
cmpsl
movsb
shrb
arpl
or
jg,pt
jg
leave
lret
mov
popa
lods
gs
dec
add
xor
cmp
cmc
pop
sub
xchg
jbe
add
sbb
lcall
push
imull
cltd
xchg
icebp
aaa
and
and
sbb
inc
fs
lods
rolb
xchg
into
fidivrs
arpl
xor
jp
scas
pop
out
dec
push
adc
sbb
xor
xor
and
jg
push
aad
sbb
cmc
into
inc
mov
or
mov
pop
push
and
stos
inc
fnstcw
jnp
pop
jbe
push
stos
push
jecxz
dec
repnz
xchg
fdivs
mov
bound
shll
pushf
aad
cmpsl
cmpsl
inc
jle
sbb
inc
mov
adc
sub
mov
addr16
test
add
push
int
sbb
test
imul
sar
sbb
dec
push
mov
inc
les
aaa
std
nop
mov
lods
pop
ret
sbb
cmpsl
sub
repz
out
add
pop
adc
jbe
out
mov
fsubrl
mov
repnz
adc
enter
roll
into
xor
ret
xchg
lahf
sbb
xlat
add
jmp
cwtl
jno
mov
ss
mov
sbb
adc
in
sub
int
xor
cmpsb
scas
cwtl
sub
les
scas
dec
push
mov
add
in
sbb
pusha
movsb
outsb
dec
mov
xor
jbe
mov
notb
cmp
inc
mov
ljmpw
push
pop
cmp
cmc
add
dec
lods
mov
loop
lds
mov
or
loop
into
pop
sub
dec
and
int3
pop
push
or
hlt
hlt
pop
sub
mov
xchg
int
mov
arpl
leave
pop
dec
jp
adc
fs
aas
mov
int
ret
daa
push
in
xchg
cwtl
xchg
outsb
jmp
cmc
xchg
push
pop
sub
shll
orl
adc
xor
imul
es
stos
and
or
cmpsb
push
inc
inc
and
push
inc
fwait
xor
xchg
push
outsb
sub
inc
jge
je
loop
adc
cmpsl
jle
xor
inc
aas
test
xchg
pushf
fld1
ret
sahf
fs
inc
xchg
mov
or
imull
daa
push
fisubrl
cmpsb
adc
dec
addr16
test
stos
fstpt
test
div
add
or
shrb
cltd
scas
mov
mov
and
fistpl
cld
or
inc
push
es
enter
lahf
dec
dec
fcmovnu
in
into
push
pop
pop
and
sub
pop
int
ss
je
stc
inc
jne
daa
scas
dec
pop
xchg
fs
xlat
stos
adcb
inc
repnz
dec
adc
mov
pop
xor
jnp
add
sub
jecxz
data16
mov
lea
push
inc
pop
fstl
dec
js
andb
jle
xorb
loope
adc
push
scas
repz
xor
xlat
adc
fwait
jl
and
cmp
repnz
push
pop
inc
push
inc
pop
rcrb
bound
dec
ret
cmp
outsb
mov
scas
add
and
jo
mov
int3
mov
movsb
popf
shrb
dec
dec
popf
mov
stc
mov
shlb
ljmp
dec
sbb
xchg
inc
inc
cwtl
iret
pushl
cmp
rorl
in
faddp
fdivs
loopne
cmp
sbb
inc
and
pop
out
xchg
or
mov
bound
lcall
push
sub
jg
pop
out
pop
cmpsl
loope
gs
lea
mov
jmp
lods
mov
jae
sbb
je
imul
sbb
sti
repz
clc
push
mov
dec
jns
sub
cld
sub
rcrl
aad
repnz
insb
hlt
out
pop
or
add
sahf
dec
jge
xorb
and
add
sti
pop
out
mov
push
je
sbbb
pop
pop
ja
pop
mov
jge
mov
cmp
mov
lcall
xchg
testb
mov
int3
adc
aas
xor
fadds
jp
lahf
xor
in
jmp
mov
jge
aaa
movsl
inc
cmp
dec
fsubs
iret
stc
les
test
mov
sub
dec
es
jl
daa
mov
pop
decb
outsb
je
aam
repz
jmp
imul
jne
lods
jecxz
out
mov
lcall
sbb
lock
sbb
addb
out
or
cmp
mov
sti
test
ret
vcomisd
and
aaa
imul
je
or
mov
xchg
adc
or
push
inc
mov
jne,pt
pop
stos
es
in
test
push
xchg
lahf
cmp
call
dec
dec
cmpsb
loop
aad
out
jge
cwtl
mov
fidivrs
jg
loope
xlat
stos
mov
loope
lahf
addr16
std
gs
xchg
imul
movsb
mov
imul
es
jl
in
xor
inc
mov
push
out
ss
sbb
mov
cmc
xchg
inc
in
xchg
test
and
cmp
push
inc
ljmp
mov
notb
dec
js
scas
lds
xor
test
loop
cmp
push
dec
loop
and
adc
in
sbb
daa
mov
cmp
lcall
or
test
sbb
mov
mov
mov
lahf
jp
dec
mov
es
xlat
fistpll
movsl
inc
mov
sub
push
adc
xchg
inc
mov
pop
punpcklwd
dec
cs
or
add
jmp
bndldx
leave
push
sub
sub
xor
ret
out
test
cli
scas
sub
fdivrl
iret
mov
popf
clc
outsb
test
mov
dec
jmp
fistpl
inc
or
fwait
decl
xor
cmc
xchg
sub
aaa
push
cwtl
dec
or
mov
adc
popf
or
xchg
mov
cmp
push
jp
pop
xchg
imul
or
xor
sti
dec
out
push
mov
dec
pop
cmpb
fisubrl
aaa
sub
sbb
lods
xor
dec
sub
sbb
mov
dec
cmp
xchg
jp
cwtl
cld
xchg
push
in
add
leave
shlb
cmpl
add
cmp
popf
je
lret
mov
sahf
sti
mov
lods
mov
imul
push
mov
cmpsl
scas
aam
mov
cs
loopne
pop
xor
pop
stos
lea
int
fcoms
out
jl
xor
push
push
divb
test
movsb
lahf
cmpsl
int3
inc
mov
js
cmc
lea
mov
icebp
mov
std
jecxz
clc
addr16
mov
aas
lret
dec
popa
dec
dec
xor
aad
adc
ret
or
pop
lods
popf
adc
mov
imul
into
fcomp
das
mov
rorl
movsl
call
adc
ljmp
xchg
xchg
sbbl
leave
adc
filds
jnp
adcl
mov
mov
xor
jmp
daa
push
lods
hlt
cmp
inc
out
bound
jmp
dec
pop
shr
lods
cmpsl
xchg
out
sub
decb
sbb
dec
xor
sub
rorb
cmc
mov
inc
cli
fisubl
adc
mov
push
pop
call
add
xchg
clc
clc
lods
pop
jmp
scas
push
mov
pop
xchg
xor
jge
icebp
mov
loop
sub
xor
leave
imul
sub
daa
pushf
xchg
imul
mov
push
mov
into
fisttpll
imul
loopne
cmpsl
mov
movsl
sbb
adc
int
push
sbb
jle
push
stos
cmp
sub
fcoml
mov
lret
pop
outsb
imull
xor
imul
fisubrl
dec
lret
repz
cmpsb
stos
push
in
scas
cld
xchg
js
push
or
mov
ds
fstpt
inc
mov
push
ss
jae
cmpsb
and
cltd
adc
and
jns
sub
js
cmpsb
idivl
dec
xor
pusha
cs
sbb
inc
mov
xor
adc
std
loop
aaa
or
inc
jmp
in
xlat
das
mov
in
mov
in
mov
sbb
sbb
push
call
mov
sahf
sbb
outsl
pop
les
mov
jbe
jbe
lods
mov
adc
cltd
fwait
add
ds
jns
or
test
push
adc
mov
xchg
push
sub
jno
mov
shl
xchg
push
and
fld
loope
movsl
sbb
mov
stc
ret
notb
stos
sbb
sub
cmc
data16
jp
jecxz
inc
mov
push
aam
push
push
push
sub
int
mov
dec
pusha
dec
dec
or
fs
mov
pop
ds
ss
xchg
imul
in
pop
fbstp
dec
ljmp
in
out
stc
mov
inc
fistps
imul
cwtl
fucompp
call
cmp
pop
sti
push
and
xchg
aad
inc
cmp
xor
pop
mov
repz
lock
jge
ss
cmp
pop
mov
je
clc
xchg
std
add
cli
mov
pop
cmp
ljmp
add
jg
shrb
cmp
loope
xchg
movsb
push
adc
or
stos
imul
das
loope
sbb
mov
cmpsb
sub
jnp
cld
mov
mov
add
jmp
inc
mov
bound
mov
push
mov
imull
adc
es
pop
dec
add
adc
scas
pop
jo
mov
or
mov
add
adc
frstor
cmp
mov
adc
aaa
cmp
and
insl
inc
mov
nop
inc
sahf
push
fwait
pushf
sbb
sar
jne
inc
cmc
stos
xorb
out
lea
and
push
mov
movsb
fcmovne
data16
push
push
and
imul
lock
daa
jo
mov
sub
mov
repnz
xchg
or
xchg
ret
inc
mov
xchg
jne
cmc
add
ja
mov
mov
outsl
in
lods
mov
cmpsb
shlb
outsb
cmc
add
jb
or
enter
mov
dec
insb
into
xchg
jo
jbe
cmp
enter
vcmpsd
adc
in
mov
out
mov
add
or
lret
je
mov
cltd
push
je
pop
push
xor
sub
fdivrs
dec
adc
xchg
jecxz
loop
add
shrb
pop
mov
push
push
jl
mov
push
and
push
gs
mov
aad
cmc
xor
inc
cld
stos
les
setl
or
insb
xchg
sbb
cwtl
insl
xchg
jecxz
fists
aad
inc
mov
lcall
cli
movsb
std
and
in
fidivrl
mov
test
mov
and
je
cmp
dec
jns
dec
loop
or
mov
es
andb
stc
or
ds
inc
pop
xchg
jmp
negl
jecxz
fisubrs
push
xor
lret
push
aad
pop
xchg
cltd
std
fisubl
mov
pushf
iret
lods
jmp
into
andl
into
dec
jg
in
in
repz
and
pop
add
jnp
inc
inc
rcll
jecxz
jnp
cmpsb
inc
es
jae
mov
jb
pop
out
std
std
push
test
add
adc
xchg
xchg
lea
mov
mov
stc
xor
mov
and
pop
int
sub
scas
xor
dec
cmp
add
sbb
xchg
or
adc
lret
xor
fdivrp
push
in
fidivrs
mov
in
adc
aam
push
fmul
sub
movsb
pop
hlt
pop
cmpsl
je
dec
test
jbe
rorl
sti
dec
js
in
mov
and
jmp
or
ja
call
ss
pop
stos
mov
mov
mov
dec
stos
inc
dec
push
mov
pop
mov
das
dec
dec
or
push
in
jle
jmp
mov
jge
repz
pop
loop
mov
punpckhbw
out
mov
adc
repnz
add
mov
inc
pusha
lahf
add
fdivl
cmpsb
xor
push
out
cmp
das
mov
fnstsw
pop
addb
cmc
cmpsl
dec
sub
fldenv
and
imul
dec
mov
jg
or
pop
add
dec
cmp
pushf
jnp
sbb
out
test
xchg
jno
sbb
adc
test
dec
into
jb
or
dec
dec
lahf
pop
scas
and
lcall
inc
jge
cs
and
add
dec
fidivs
test
cmp
fldenv
lods
je
dec
out
or
and
fnsave
outsb
fbld
fidivrs
jb
dec
jns
mov
nop
xchg
or
mov
shll
xor
cmp
mov
fucomip
loopne
jecxz
pop
les
jb
dec
jge
add
pop
jbe
sub
lock
jo
add
mov
fidivs
loop
inc
movsl
rcr
and
lret
imulb
xchg
mov
rcrl
and
sub
loop
pop
in
cs
jl
and
test
dec
push
jl
cmp
cmc
ds
cld
lcall
sub
dec
push
scas
cmp
mov
movsb
jne
dec
or
adc
aam
mov
popf
xchg
cs
fmul
push
pop
rcl
fidivl
sub
and
mov
pop
mov
xchg
adc
aas
das
into
or
outsb
and
push
pop
inc
mov
mov
sub
mov
jmp
xor
pop
loopne
call
xor
push
mov
inc
int3
cld
or
push
imul
pop
mov
dec
or
xchg
js
mov
pop
push
rcrl
scas
loopne
loop
int
xor
ficomps
xor
lcall
pop
xlat
push
ljmp
push
mov
rorl
cmc
mov
jmp
xchg
jnp
ds
cmp
ret
movsl
shlb
mov
and
sbb
popa
or
aas
jne
data16
mov
mov
xlat
sti
cmp
out
aam
inc
es
stc
mov
xor
ss
cmp
xor
cmpsl
inc
daa
or
jns
aaa
outsl
push
dec
jl
mov
push
out
xor
or
pusha
repz
inc
fnstenv
push
jns
or
cmp
pop
out
sub
sbb
inc
out
icebp
clc
jae
ljmp
push
pop
enter
and
xchg
lods
cmp
sub
repnz
pop
incl
adc
push
in
inc
test
rclb
cs
sbb
push
jecxz
mov
pushf
push
lods
stos
sbb
mov
aam
and
mov
lret
add
mov
test
adc
fs
hlt
cmp
sub
xchg
mov
or
sub
mov
sub
xorb
dec
lret
jl,pn
sbb
xchg
enter
dec
lock
jnp
jbe
push
call
loopne
push
jl
fpatan
ljmp
test
cmp
pop
andl
mul
add
out
out
fidivrs
inc
movsl
adc
dec
outsl
sbb
imul
pop
or
push
add
mov
popf
jb
xor
or
scas
jo
fisubrl
adc
addr16
cmpsl
pushf
lds
cmp
insl
dec
adc
or
popl
cmc
jmp
or
data16
adc
xchg
sti
xor
pusha
arpl
push
inc
and
iret
push
xor
xor
je
pop
mov
aad
dec
pop
cmp
fnstcw
ret
aam
mov
xlat
daa
scas
out
mov
jne
add
lahf
insb
cmpsl
add
add
mov
mov
orb
data16
ret
sahf
popa
cs
fisubl
testl
nop
pop
aas
sbb
mov
push
mov
add
sub
enter
decl
jmp
jecxz
and
popa
shll
sbb
icebp
inc
stc
and
push
push
mov
decl
les
and
clc
aaa
mov
fs
out
mov
jecxz
dec
repnz
fidivrl
jmp
ficompl
sbb
test
add
xchg
inc
xor
adc
nop
push
lods
scas
pop
ss
inc
fwait
std
and
dec
shlb
push
rcll
sub
mov
aaa
inc
and
js
mov
mov
pop
in
stc
test
push
insl
mov
mov
xchg
movsb
xchg
pop
lods
xchg
add
into
or
stos
jmp
bound
jbe
mov
pop
mov
ds
out
adcb
and
inc
xchg
cltd
jmp
or
int
fsub
pop
mov
inc
xchg
aam
or
push
cmp
das
addb
ret
pop
test
shll
cmpsl
mov
clc
mov
inc
jns
pop
sarb
ficoms
test
jge
test
or
sbbb
xor
stc
dec
cmp
inc
push
test
fbstp
call
roll
std
add
jno
popf
scas
sbb
clc
fistpl
cmpsl
sbb
xchg
ret
std
shrl
mov
lcall
fldt
pusha
and
cmc
sub
dec
pushf
sbb
flds
ret
sbb
xchg
mov
lock
jp
lea
int
lods
fs
mov
cmpl
popa
stc
sub
push
jae
test
pop
cmpsl
test
mov
adc
lods
jg
mov
ficompl
cmp
mov
xor
call
jo
loop
movsb
repnz
fcoml
daa
pop
mov
xchg
into
mov
xchg
or
and
push
repnz
int3
jmp
cmc
lea
popf
jae
cmpsb
shll
sbb
xchg
popf
outsl
mov
lods
std
lahf
sub
xchg
mov
pop
and
sbbb
push
scas
jge
shrl
out
aaa
adc
iret
jcxz
lahf
adc
cs
ja
mov
cli
jp
fwait
or
xor
xor
adc
psubw
lahf
gs
call
pop
gs
in
aad
jb
cmp
push
lret
int
sahf
pop
ret
outsl
jo
xor
cmp
jae
jl
and
dec
das
out
push
scas
in
div
cmpsl
mov
mov
sub
mov
dec
push
push
push
dec
push
insl
mov
fs
xor
xor
jle
mov
mov
mov
xlat
test
je
xchg
sub
jle
or
lods
mov
rcrl
fldcw
push
popa
xor
sub
insb
jbe
push
mov
call
xchg
lock
jp
outsl
inc
pop
cmp
out
xor
scas
mov
outsb
xchg
sub
pop
cwtl
ja
repnz
cmp
insb
insl
stos
cmc
cmp
and
cwtl
add
adc
inc
xor
xchg
push
cmp
inc
mov
pop
jne
pushf
jmp
inc
mov
or
dec
lret
inc
int3
xchg
iret
lret
cmp
mov
stc
push
jne
mov
mov
push
inc
xorl
cmp
cmp
enter
insl
fcoml
xor
push
fadd
mov
sub
iret
dec
pusha
lahf
sub
cmp
ja
pop
adc
les
loop
ja
inc
fs
std
pop
adc
inc
js
sbb
sarl
shlb
sarl
fists
fistps
cli
pop
out
pushf
adc
dec
hlt
jae
pop
push
pop
adc
adc
outsb
mov
push
xchg
mov
inc
sbb
and
fwait
mov
or
sub
sbb
xor
add
fldcw
sub
adc
jbe
fwait
sqrtps
fists
sub
mov
xor
xchg
inc
sub
out
loope
pusha
in
sub
adc
jecxz
push
adc
ds
and
fnstcw
push
gs
call
test
jl
add
push
fs
fldenv
pushf
inc
imul
inc
pop
pop
fwait
cmp
insl
xchg
add
adc
data16
mov
push
jne
jg
add
sub
push
mov
inc
inc
ret
iret
pop
mov
mov
inc
adc
adc
pusha
and
iret
leave
add
jmp
bound
jg
xor
sbb
scas
movsl
pop
inc
push
enter
popf
push
movsb
mov
fnsave
push
sahf
mov
mov
mov
mov
lods
mov
jp
jp
lahf
dec
repz
cmpsl
testb
lcall
les
push
and
into
add
out
aam
int
and
loope
mov
movsb
push
in
stc
sbb
xchg
dec
cli
loopne
lret
mul
pop
sub
or
dec
sahf
xchg
call
mov
lea
adc
lea
orb
mov
mov
ss
cmpl
cmpsb
cli
sub
push
or
cmp
adc
inc
adc
adcl
lcall
ret
loopne
cwtl
ss
mov
shrb
mov
popa
inc
fcoms
cmp
inc
dec
inc
pop
jecxz
repz
mov
mov
pop
and
xor
out
gs
push
out
cmpsl
sbb
dec
cmp
and
sub
cwtl
push
mov
jb
movsl
int
lock
xor
lcall
popf
shrl
aas
repnz
add
std
jae
andl
std
lcall
fimuls
mov
cmp
jle
sbb
dec
cld
in
xor
xor
or
mov
fsubs
inc
inc
std
sbb
insb
cmp
mov
test
xchg
js
pop
mov
insb
sub
jp
scas
test
and
stos
ss
adc
orl
mov
mov
insl
call
scas
in
adc
ret
imul
xchg
jg
orl
pop
fbstp
cmc
xor
cld
sahf
lret
hlt
push
jne
xorl
cmpsl
stc
xor
mov
sahf
xor
fcompl
pop
mov
xor
mov
das
xchg
int
sarl
cld
jns
in
pop
and
fstp
cmp
fsubrs
nop
dec
push
lret
rcll
out
pop
mov
sub
pop
mov
les
loop
mov
push
bound
and
dec
daa
and
aaa
lahf
sbb
xchg
sti
lods
adcl
jle
dec
lock
pop
movsl
dec
les
enter
xchg
adc
repnz
dec
lret
pop
push
ret
idivb
xorb
ret
rcl
stos
hlt
mov
jns
lret
mov
lret
sbb
inc
inc
test
aam
sub
xchg
xor
cmovae
lods
and
sub
jnp
cmp
cmp
fbld
sbb
imul
cmp
in
dec
shrl
icebp
sbb
sbb
jmp
fldcw
movsb
jle
adc
in
dec
dec
mov
subl
out
xchg
aas
push
in
push
jbe
sti
pop
lcall
lahf
insb
divb
push
imul
sahf
xchg
mov
outsb
jno
fnstcw
lret
dec
xor
sti
cli
inc
or
stos
shlb
push
popf
repnz
gs
mov
lea
nop
cld
jl
inc
out
or
cld
jmp
icebp
sub
addr16
stos
ret
rcr
stc
sub
push
jge
push
ret
mov
adc
in
lea
je
add
xchg
mov
xchg
lret
jl
xor
push
aad
out
add
pop
xchg
jnp
in
mov
int3
mov
enter
xchg
ljmp
aas
inc
or
lahf
jmp
sbb
popl
mov
jmp
mov
rorl
aad
fmul
cld
xor
rcll
in
add
mov
or
xchg
insb
xorl
call
mov
ficoml
call
or
int
sbb
jecxz
popf
cmpsl
xchg
add
mov
addr16
in
outsl
xor
cwtl
stc
aas
mov
stos
push
inc
inc
mov
add
test
test
adc
push
xchg
je
mov
fisttpll
clc
add
push
testb
mulb
mov
ljmp
daa
cmp
addr16
and
cli
sbb
test
jmp
mov
sub
mov
xchg
sub
xlat
int
xlat
mov
mov
or
daa
or
fbld
out
icebp
inc
es
aam
js
mov
xor
adc
icebp
or
sarb
sarb
pushf
xchg
xchg
xchg
xchg
add
sub
cltd
xor
fiaddl
repz
add
jmp
xor
in
mov
testb
xchg
push
inc
neg
pop
xlat
scas
out
fiadds
and
mov
sub
ret
stc
out
xlat
jne
lret
inc
insb
jecxz
repnz
loopne
loope
add
sbb
pop
psrlq
adc
mov
adc
sbb
sbb
or
cmp
jp
pop
data16
das
enter
nop
mov
scas
repnz
repnz
mov
inc
in
loop
sbb
popf
pusha
sub
and
lods
inc
mov
fimuls
rcl
cs
xchg
pusha
add
loope
push
movsl
pushf
cld
imul
mov
out
pop
jl
mov
lods
das
xor
mov
jp
fsubrl
sub
out
cwtl
andb
jae
dec
xchg
jbe
loope
xchg
imul
scas
pop
ret
cmp
repnz
out
adc
mov
dec
jne
fcoms
pop
ja
xchg
push
shrb
repz
nop
sarl
dec
inc
pop
inc
jae
in
and
ljmp
rol
lods
in
push
dec
push
push
lret
cli
sub
mov
movsl
int3
andb
dec
pop
out
movb
push
and
addl
cmp
cmp
xor
mov
stos
jo
push
push
mov
xchg
push
mov
or
dec
ljmp
clc
pop
push
negl
iret
adc
cmpsb
loope
lahf
into
movsb
jae
push
into
bound
pop
adc
stos
pop
repnz
fistps
xor
dec
rcrb
cwtl
dec
push
add
mov
fs
push
sbb
cmc
xchg
std
aam
add
xor
inc
sbb
and
imul
test
cwtl
cmp
int3
je
fwait
mov
incb
and
ror
mov
out
test
dec
rcrl
lods
push
ret
sti
mov
add
mov
add
and
movsb
aad
lea
pop
adc
xchg
pop
insb
mov
aas
sbb
cld
cld
jns
pop
cs
jp
lock
scas
add
push
xchg
fcmovne
ret
fidivrs
test
xchg
inc
lret
cld
push
add
adcl
call
mov
mov
addr16
push
popf
lahf
rcrb
sti
imul
sub
add
jmp
cli
shll
xchg
push
add
adc
pop
cmp
stos
hlt
sbb
mov
adc
jg
mov
fsubr
insl
je
jmp
xchg
pop
push
add
ljmp
push
call
push
mov
or
mov
adc
push
mov
cltd
out
daa
insl
stos
sbb
mov
sbb
lds
test
addr16
pusha
jne
mov
xchg
or
dec
sbb
or
mov
gs
mov
mov
pushf
out
cltd
stos
pop
xor
mov
je
inc
pop
scas
push
sub
sub
cmp
mov
adc
ret
xchg
outsl
jo
call
dec
es
mov
arpl
mov
loopne
call
xor
jb
cmp
iret
mov
lcall
dec
out
push
cmc
rolb
cli
enter
xor
pop
jmp
sub
xor
mov
sub
sub
sub
dec
mov
lods
mov
dec
insl
mov
ret
int
add
mov
adc
cmp
jb
rcll
loope
xchg
mov
lret
jae
xor
movsl
inc
or
push
xchg
cmp
xchg
jmp
fcompl
jbe
cmc
lods
loope
je
je
inc
inc
mov
mov
push
add
bound
adc
pop
jmp
xchg
ret
fucom
and
xor
aam
in
scas
mov
or
ret
test
push
fmull
enter
hlt
divb
push
push
xorb
repnz
mov
or
push
dec
out
and
mov
in
adc
fs
and
inc
scas
or
pop
movsb
scas
popa
cmp
push
test
aaa
pop
sbb
mov
movsl
cltd
and
mov
inc
hlt
or
add
mov
lret
movsl
fadd
enter
lret
fwait
adc
ds
push
scas
cmp
in
pushf
inc
clc
push
cmp
sbb
and
jg
and
popa
jbe
into
cwtl
mov
xor
cmp
int3
inc
cmp
data16
mov
push
and
sarl
lea
xor
sahf
xchg
or
gs
sbb
arpl
shlb
xchg
mov
mov
pop
fsub
pop
repnz
mov
cwtl
outsl
fs
rclb
mov
pop
cmpsb
or
mov
adc
mov
test
dec
aas
lcall
jl
mov
cmpsl
imul
testl
lret
fs
xchg
mov
dec
adc
lods
aam
jno
in
mov
lds
push
leave
mov
mov
cltd
loop
pusha
xchg
sub
sbb
lcall
jp
into
add
sub
shlb
subb
movd
xor
or
out
pop
fsts
mov
in
and
xor
in
repz
testb
pop
add
popa
or
pop
mov
and
jmp
out
lcall
sbb
add
add
adc
pop
push
jp
mul
aaa
popa
fisttpl
xor
gs
add
inc
cmp
add
insb
sub
sti
mov
mov
shll
addr16
cmc
cmpsb
dec
adc
or
dec
mov
notl
mov
jbe
mov
xchg
add
incl
mov
jg
dec
jge
fdivrs
leave
xchg
movl
push
jle
mov
adc
sbb
jl
sbb
add
es
push
add
scas
dec
fisubrs
xor
add
push
sbb
sub
jo
out
adc
ds
cli
aas
push
dec
jle
cmpsl
push
mov
inc
int3
push
ja
shll
aas
pop
test
push
pop
fwait
mov
mov
repnz
push
rcll
mov
and
cli
fiadds
mov
and
arpl
out
sub
je
pop
arpl
out
mov
xchg
xchg
sti
xchg
int
mov
inc
inc
inc
scas
dec
ja
mov
fstps
jl
jnp
andl
les
pop
std
mov
push
fwait
cmp
mov
or
mov
std
jp
add
xchg
mov
jg
cltd
jecxz
addb
push
adc
xchg
fwait
stc
ret
jg
jbe
cwtl
leave
sbb
cld
fstpt
and
sub
jbe
xor
orb
shrl
pop
loope
xor
xchg
inc
pop
push
enter
push
or
mov
test
or
lcall
rclb
mov
je
dec
inc
add
mov
dec
and
iret
mov
jno
cmpsl
or
dec
call
mov
push
repz
leave
std
jmp
aas
adc
mov
jecxz
push
add
mov
pushf
mov
dec
sbb
popa
stos
xor
adc
mov
push
adc
inc
aas
pop
inc
pop
icebp
jno
fisttpl
lods
cmp
int3
adc
sbb
add
andb
inc
jmp
pop
or
test
cld
xchg
outsb
ds
jno
scas
bound
push
mov
insl
jne
or
lret
jg
cld
xchg
pshufw
xchg
mov
rclb
daa
inc
sti
or
cwtl
divb
cmp
jg
or
aas
hlt
pop
add
xlat
xchg
mov
lret
popa
pop
int
xorl
loope
pop
mov
xor
and
out
xchg
das
mov
and
sub
loop
xor
dec
fdiv
inc
mov
push
jge
test
cmp
or
push
add
movsl
data16
adc
sti
push
push
mov
sti
js
dec
inc
push
mov
loop
push
in
fwait
mov
add
bound
ja
outsl
mov
in
pop
jo
mov
sbb
fwait
mov
movsl
cld
jmp
mov
fstl
cmpsb
sub
test
or
popa
cmp
icebp
jmp
sti
pop
rclb
xor
pop
sbb
popf
push
dec
popf
andl
inc
addr16
fidivrs
int3
xor
imul
daa
outsb
sub
loopne
into
adcl
push
jo
stos
inc
sbb
cmc
mov
clc
mov
scas
mov
cltd
pop
fisubrs
inc
cmp
fwait
mov
mov
pusha
mov
push
and
jp
inc
add
das
mov
inc
jecxz
xchg
mov
aam
ljmp
push
jp
jg
rcl
js
jb
fsubr
lods
fists
notl
pop
dec
sub
dec
imul
paddusb
stos
cmp
cmp
sub
sub
mov
jnp
pusha
pop
pop
neg
dec
xor
or
cmp
inc
push
shr
incl
dec
lret
sbb
icebp
add
mov
fisubs
push
or
cwtl
outsl
aam
stos
mov
jl
std
fwait
enter
jl
ss
ret
jl
repnz
arpl
push
inc
pusha
jae
daa
and
jae
sbb
fsts
js
test
mov
mov
pextrw
bound
xchg
imulb
or
jg
out
out
das
insb
lds
out
int3
xor
enter
mov
and
or
sub
push
sbb
outsl
repnz
sbb
cltd
insl
mov
loope
ja
sbb
mov
lcall
lds
add
cs
or
mov
imul
sbb
les
enter
movsl
mov
repnz
cwtl
cmp
shr
outsb
sbb
mov
sarb
arpl
mov
and
and
sub
fistps
mov
push
mov
je
dec
sub
xor
gs
pop
xchg
push
insb
pop
mov
sbb
movb
repnz
mull
push
sub
xor
jmp
xor
push
mov
in
inc
bound
pop
dec
and
stc
dec
into
out
pushf
int
mull
cmp
pop
jle
and
fs
dec
cmp
xchg
jle
pop
or
loop
sub
cmp
sbb
add
fstpt
sub
jecxz
mov
jns
sbb
xchg
mov
xor
aam
das
fsubs
push
imul
inc
push
test
ja
pop
loopne
or
fisubl
fdivs
fdivs
imul
roll
idivw
fcom
ja
pop
je
bnd
out
iret
or
repnz
sbb
jne
test
addr16
mov
aas
loopne
sub
addr16
shll
inc
sbb
testl
pop
std
dec
and
cmpsl
xor
or
clc
cmp
jg
push
scas
imul
jmp
out
mov
out
push
out
jns
cltd
mov
dec
test
adc
enter
adc
jns
aam
setns
sbb
fsubl
mov
call
mov
cmp
push
sub
sub
popf
and
push
pop
xchg
inc
inc
lret
xor
mov
inc
cmpsb
pop
aad
jb
cmp
aam
negb
repnz
popa
js
mov
mov
test
daa
or
inc
aaa
fmul
sbb
div
and
push
fwait
scas
dec
xlat
dec
push
xchg
test
pop
sti
dec
imul
adc
rolb
enter
clc
mov
hlt
cmpsl
clc
leave
push
jmp
addb
cli
cli
loopne
pop
sahf
mov
push
lds
lret
movsb
cmp
sub
pushf
inc
inc
dec
imul
daa
xlat
icebp
icebp
sbb
fadd
subl
add
mov
xor
mov
cmp
lock
pop
adc
iret
cmp
cmpsb
bound
les
repnz
xor
shll
or
jecxz
pop
mov
xchg
jne
cwtl
pop
jl
sahf
sbb
jno
push
adc
inc
xchg
subb
lahf
sahf
mov
mov
sub
push
daa
movsl
movl
pop
add
mov
jl
inc
ret
cwtl
ret
adc
shl
fs
sbb
push
pop
push
adc
insl
sub
stos
or
inc
xchg
stos
mov
add
add
mov
adc
mov
lcall
sub
jg
daa
or
ljmp
int3
add
sub
sti
jns
insl
popf
push
sbb
adc
sti
adc
gs
mov
push
je
js
leave
cmc
pop
sbb
outsb
or
in
ret
jge
jle
rcll
inc
sti
pusha
mov
popa
sbb
xchg
adc
push
mov
gs
cmp
push
leave
outsl
js
jp
imul
lret
and
mov
or
data16
sub
cmp
and
dec
dec
xchg
ss
dec
mov
push
ds
xor
fistl
jnp
mov
ss
ja
jmp
js
insb
and
pop
mov
dec
out
fistpll
insl
inc
movsl
adc
je
fdivrl
mov
xchg
insl
cltd
paddusw
pop
ss
fsubrp
mov
movsl
shll
jp
into
loope
int3
cli
stos
je
xor
mul
mov
adc
ficoms
out
insb
sub
shrl
add
jns
movsb
inc
push
mov
imul
mov
fmulp
pop
mull
ret
mov
sub
pop
stos
js
jne
dec
repnz
cmpsb
cltd
mov
pushf
incl
loope
mov
mov
js
orl
stos
mov
mov
or
push
cmp
fsubs
mov
jo
hlt
sbb
push
ror
lret
jo
sahf
out
popa
sbb
enter
nop
inc
pop
pop
mov
dec
mov
xchg
mov
mov
popa
fsubr
dec
dec
mov
lock
push
and
outsb
into
inc
mov
fsub
push
sbb
clc
fsubrl
dec
cmp
stc
in
cwtl
jle,pn
stos
mov
lods
xchg
xor
adc
cmp
scas
or
jbe
adc
movsb
jmp
mov
pop
inc
out
bound
out
adc
scas
dec
bound
jl
addl
mov
mov
leave
fdivrl
xor
jns
sbbb
mov
movsb
xchg
ret
bound
out
or
inc
repnz
jmp
dec
mov
xor
js
addr16
mov
cmp
mov
mov
mov
call
and
lahf
ss
sbb
push
push
repnz
fildll
out
add
sahf
mov
pop
lret
pop
cmc
sarl
cmc
jmp
and
int3
loopne
pop
mov
ja
inc
les
sbb
push
and
add
lcall
es
inc
dec
sahf
pop
inc
lret
jnp
jns
mov
and
and
push
xchg
push
lcall
mov
dec
xchg
jmp
repnz
sub
sti
fiadds
fbld
and
pushf
daa
sub
sbb
jo
sub
aam
imul
mov
jbe
sbb
imul
mov
int3
push
lods
push
clc
push
sub
addb
fsubs
roll
movsb
push
push
fisubs
lods
xor
cli
push
xor
mov
fidivrs
pop
xor
ss
cltd
xor
sti
mov
insb
or
ficoms
test
pop
in
test
stc
inc
and
mov
jl
scas
int3
mov
ss
inc
addr16
lcall
dec
mov
loop
lcall
sub
mov
add
out
inc
sarb
add
loopne
enter
inc
inc
stos
cmp
and
and
add
and
inc
pop
jecxz
int3
es
add
movsl
pusha
js
arpl
fcmovnbe
inc
xchg
xchg
dec
push
outsl
loopne
add
add
inc
lret
int
add
movsb
movsb
shrl
or
sub
aam
sbb
mov
mov
in
stc
cmp
dec
shll
loopne
sub
or
and
in
xchg
mov
hlt
push
mov
lock
sbb
lret
xor
adc
xchg
and
loope
add
mov
add
cmp
jecxz
cmp
adc
rolb
in
test
jne
push
cli
addr16
add
stos
cmpsb
arpl
mov
imul
pop
aas
mov
adc
mov
pop
fcomp
daa
push
adc
mov
outsb
push
cmc
insb
jne
insl
stos
dec
or
out
movsl
pop
dec
xor
imulb
in
xor
aas
xor
sahf
xor
insl
xchg
mov
inc
lods
or
sbb
ja
adc
sbb
cmpsl
scas
into
movsl
cmp
aaa
and
mov
push
cmp
lret
out
lret
std
lods
sub
in
cld
outsl
jae
jns
lahf
lock
out
test
aad
mov
outsb
nop
out
movsb
cli
int
cmp
xor
push
lods
mov
imul
int
mov
xchg
push
out
mov
push
out
lahf
adc
xchg
mov
pop
pinsrw
jo
aam
inc
lds
ret
inc
sub
add
jle
out
push
cmp
addr16
fidivs
out
xchg
pushf
dec
xchg
mov
xlat
sbb
cmp
in
iret
mov
scas
jecxz
push
mov
aad
or
push
adc
cs
xchg
es
mov
adc
stos
adc
je
mov
xchg
insb
add
sbb
clc
daa
and
add
push
mov
mov
popa
and
xchg
je
fcompl
and
add
and
mov
gs
bound
cli
call
or
mov
jo
imul
inc
test
xchg
pop
jne
jns
adc
sarb
orl
lods
jge
mov
enter
inc
pop
ds
ret
jge
adc
sub
lods
push
in
xchg
rcll
scas
cmp
lahf
adc
dec
cmp
ret
int3
lahf
cmpl
inc
and
jecxz
mov
ljmp
int
jge
dec
les
loope
test
pop
push
outsb
filds
scas
jo
loop
scas
xchg
inc
lahf
cwtl
sbb
into
dec
xor
mov
rclb
xor
push
pop
js
iret
push
outsl
fidivs
add
imul
pop
mov
cld
test
es
fdivs
std
mov
xchg
cmp
push
jp
sub
xchg
jb
or
movsb
jns
jo
adc
insb
jecxz
cld
popl
jle
mov
jmp
adc
and
fcompl
mov
push
loopne
pop
adc
out
mov
xchg
xor
jbe
jl
aaa
daa
fstl
lahf
outsb
xor
sarl
sub
dec
mov
rorb
mov
inc
push
xor
test
jecxz
jle
stos
arpl
jl
scas
sbb
pop
add
or
xorb
into
daa
push
pushf
adc
lods
sub
and
xchg
test
jge
cmp
xchg
jl
xchg
jecxz
mov
adc
fstl
outsb
ds
mov
sub
ljmp
jecxz
stos
mov
sti
cmpl
jno
out
psubd
dec
aaa
aaa
cltd
mov
out
add
lods
outsl
insb
cmp
dec
call
pop
ja
and
cmc
shll
jnp
xor
lret
push
cmp
pusha
adc
sbb
push
inc
int
sub
mov
pop
rorl
fs
or
pusha
dec
jo
test
mov
lds
push
mov
loope
adc
int
cmp
push
sbb
push
and
inc
faddl
jbe
mov
js
sub
ja
mov
stos
out
mov
movsb
push
pop
call
cs
fdivrs
lock
xor
xchg
clc
add
lds
jnp
rorb
dec
push
pop
add
cmp
movsb
mov
fwait
and
movsl
sbb
push
fwait
iret
or
mov
push
orb
lds
xor
dec
jb
jno
test
divb
push
push
stos
pop
push
mov
popf
and
jae
adc
rcr
sbb
adc
jl
jne
jb
int
mov
ret
aad
mov
push
pop
xlat
xchg
push
adc
xchg
mov
idiv
or
add
pop
outsb
xor
adc
jae
enter
fisttps
inc
or
enter
popf
add
inc
and
pop
mov
lods
les
or
test
inc
xlat
mov
aaa
cld
outsl
jge
xchg
cmpsl
fmul
call
sahf
xor
jecxz
xchg
aas
jge
pop
popf
push
imul
mov
inc
scas
lds
jl
cmc
into
repz
inc
jge
or
sbb
or
jmp
ds
sbb
mov
push
push
les
fldcw
jo
xor
loopne
mov
imul
stos
inc
cmpsl
jns
cmp
clc
cmp
cmpsl
dec
movsb
aam
call
mov
add
lods
sub
push
test
mov
adc
out
push
dec
lret
cmp
imul
addb
pop
sahf
add
xor
mov
in
shll
jbe
xacquire
xor
in
mov
add
xchg
das
xor
cmp
jns
mov
jge
xor
mov
mov
mov
dec
inc
pushl
and
test
jbe
jnp
mov
addr16
adc
andb
adcb
test
mov
sti
fs
lods
in
xchg
nop
lods
pop
popa
cmp
dec
faddl
jg
outsl
mov
aaa
and
mov
and
inc
sbb
sti
dec
sahf
xor
icebp
mov
fisubs
scas
iret
je
dec
add
inc
aaa
mov
out
xchg
iret
mov
sti
repnz
sub
loop
add
fidivl
jo
xor
adc
dec
mov
popf
test
sbb
xchg
xor
fstpl
data16
out
pop
or
or
pusha
adcl
popa
bound
sub
insl
sbb
sub
call
jo
test
lahf
jbe
cmp
imul
mov
push
push
mov
sbb
int
imul
jle
in
pushf
and
shlb
pop
mov
adc
sub
jge
mov
lcall
or
xchg
sti
dec
aaa
pop
jne
lods
stos
push
inc
dec
aaa
jno
xchg
mov
jbe
mov
xchg
push
lret
sub
pop
stos
or
sub
mov
jo
push
xchg
or
dec
pop
sub
aad
call
jnp
cwtl
imul
lds
or
mov
pushl
loope
cmp
arpl
pop
xchg
sub
and
je
mov
insl
mov
jp
cmp
btr
jno
jl
lea
sbb
js
in
mov
fucom
add
shll
pop
ds
ljmp
jno
jnp
xchg
add
mov
ja
pop
jb
imull
out
stos
xorl
jnp
mov
loope
cltd
pop
jno
mov
cwtl
sahf
ja
sarl
pop
or
sahf
xchg
mov
push
add
stc
flds
in
loopne
sti
mov
int
ss
cmc
daa
je
mov
loopne
outsl
mov
pop
pop
ret
pop
push
dec
inc
cmp
insl
cli
or
jmp
mov
insb
mov
dec
mov
in
pop
aad
fdivr
lahf
xor
nop
xor
sbb
lret
mov
jl
jne
push
pop
sub
rcll
cmp
je
push
and
add
adc
int
xorl
movsb
pop
movsb
das
repz
xor
adc
ret
rorl
lret
test
divl
hlt
push
enter
cwtl
ljmp
xlat
mov
add
inc
sub
xlat
xor
jmp
cmc
add
ret
ss
mov
mov
push
aad
mov
vmulss
and
dec
mov
inc
xlat
push
inc
lret
icebp
jns
jnp
xor
and
adc
push
and
in
dec
ret
jle
gs
inc
xchg
mov
rorb
sbb
sbb
pushf
mov
push
sbb
xor
push
mov
orb
aam
mov
add
dec
cmp
or
xchg
fwait
push
cmpsb
dec
clc
in
mov
je
jns
mov
push
imul
and
jo
dec
jae
dec
aas
xlat
pop
ret
jne
sbb
mov
cmp
shlb
test
push
add
cmpsl
mov
or
repnz
stos
mov
cld
repnz
xchg
sahf
push
cmovnp
fadd
mov
pop
mov
adc
mov
test
and
lcall
dec
pop
inc
sub
or
js
in
in
sbb
ror
inc
movsb
xor
mov
jle
insw
dec
mov
xchg
lgs
inc
jle
cmp
jmp
xchg
or
testb
fsubl
lret
faddp
dec
xor
push
jbe
add
xchg
mov
sbb
and
adc
ds
loop
shl
loop
out
out
or
mov
imul
cmp
leave
call
pop
push
sub
mov
mov
xlat
lea
push
les
mov
es
in
movsl
iret
imul
mov
and
lds
test
inc
cmp
jle
add
xor
push
movsb
aaa
das
fucomi
popf
sahf
popa
xchg
cmp
mov
push
rol
cmp
xchg
mov
push
out
push
push
ljmp
pop
ss
icebp
add
rcll
add
xchg
insl
sub
mov
into
add
mov
mov
mov
shr
notl
add
push
pushf
add
es
jne
xor
mov
push
or
jne
dec
mov
decw
stos
ret
mov
xchg
into
cs
jl
xor
inc
aam
and
pop
mov
andb
push
inc
push
rcl
xor
addr16
cwtl
push
push
sbb
xor
add
sub
xchg
sub
add
xchg
shll
dec
lahf
faddp
lods
sub
push
dec
test
test
ret
dec
sub
mov
movsl
mov
jmp
pop
lcall
add
adcl
or
mov
pmaddwd
jecxz
pop
lahf
xlat
in
jmp
sbb
inc
pop
cmpsl
mov
mov
js
jecxz
daa
sbb
and
jl
icebp
loopne
mov
gs
lcall
loop
xor
inc
cwtl
imul
adc
das
sbb
test
jge
sbb
mov
sub
mov
mov
fwait
cs
jge
xchg
or
movsb
ret
mov
push
std
pop
pop
xor
ds
jmp
mov
ret
push
mov
loop
pop
popa
mov
jnp
jne,pt
mov
jg
jge
cmp
mov
movsl
hlt
outsl
inc
clc
mov
adc
xchg
and
push
jbe
mov
jns
push
das
or
rolb
in
mov
rorb
test
lret
pop
clc
jmp
sub
xlat
lods
and
push
imul
enter
cmpsb
pop
cwtl
iret
push
push
mov
sub
mov
xchg
push
sbb
adc
dec
xchg
xchg
fistl
loopne
mov
mov
in
adc
mov
or
inc
scas
xchg
data16
and
clc
sub
fiadds
jno
stos
shll
lret
push
iret
shrl
sub
dec
enter
imul
je
mov
dec
loop
in
test
pop
call
cltd
push
outsl
inc
das
xchg
fwait
cmpl
nop
mov
sub
loop
dec
xchg
push
xor
and
mov
push
aas
data16
cmp
test
decl
das
inc
or
leave
shr
mov
mov
ds
cmpsl
cmc
nop
addb
lcall
sarl
hlt
rcll
pop
dec
adc
int3
inc
inc
dec
popf
out
dec
pop
mov
aaa
push
into
sbb
insb
mov
and
pop
or
pushf
aam
jecxz
push
aas
inc
mov
jp
fwait
imul
pop
insl
or
xor
stc
push
jbe
sub
sbb
xchg
pusha
sarb
loope
mov
ja
ret
enter
jp
in
fdivrl
cltd
jns
ljmp
dec
cmp
add
gs
mov
mov
jge
push
mov
fsubp
xchg
mov
incl
mov
cltd
fbld
jbe
fs
cmpl
flds
and
shl
mov
and
push
mov
inc
inc
ljmp
push
popf
sub
mov
jne
mov
add
jae
and
lret
or
mov
call
mov
inc
cmp
dec
dec
xchg
jge
cmp
push
cmp
adc
fstps
mov
jge
ret
mov
ss
inc
fistpll
ret
mov
sub
add
stos
and
sti
sub
mov
or
dec
xchg
or
out
dec
lods
jl
icebp
jns
fwait
and
push
mov
int3
jbe
loope
stos
int3
xchg
inc
sbb
mov
xor
mov
scas
jb
pop
dec
scas
and
jbe
mov
xchg
fdivrl
jb
sbb
mov
or
mov
add
jae
xchg
inc
dec
pushf
or
in
gs
jmp
inc
lret
add
lahf
push
xchg
dec
jo
addr16
xchg
mov
sti
pop
pop
adc
and
add
nop
dec
test
xchg
hlt
jb
cmpsb
repnz
dec
jns
sar
mov
scas
inc
add
push
movsb
jle
in
divb
adc
jmp
cmp
repnz
mov
jecxz
insb
bndstx
in
inc
int
mov
lea
push
fsubrs
outsl
out
jb
mov
xchg
mov
inc
or
dec
push
int
cmp
sbbb
sarl
pop
aam
push
add
mov
and
dec
xor
cmp
xor
pop
js
xchg
sub
out
lock
inc
mov
aas
iret
xchg
out
and
fs
pmaxsw
jne
xlat
xor
mov
pop
rclb
jb
cmp
cmp
rcrl
int3
fadds
push
mov
nop
insb
xorl
int
push
mov
lods
aas
lcall
into
rolb
or
inc
mov
repz
sub
cmp
les
dec
test
inc
ficomps
xchg
lcall
mov
pop
negl
sub
cmp
xchg
ret
xchg
xchg
sbb
xchg
les
xchg
push
leave
xchg
ljmp
stos
test
js
lods
cmpsl
fisubl
cwtl
arpl
decl
pop
aaa
add
push
sbb
fsubrl
inc
dec
sub
cmp
or
mov
inc
sub
mov
fmul
push
cltd
xor
add
mov
or
popf
iret
push
dec
pop
out
pop
es
and
sbb
movsb
fs
imul
jno
push
les
mov
push
or
fidivs
rcll
lods
sti
dec
lods
push
ja
into
std
cmp
sub
mov
and
pusha
stos
add
cli
jb
repnz
rclb
adc
fs
pop
sbb
push
dec
pop
hlt
mov
mov
cmpsb
pop
cmp
xchg
sbbb
adc
mov
pop
test
dec
repz
cltd
jl
mov
outsb
ss
out
xor
pop
push
std
jns
aad
andb
lcall
mov
sub
inc
je
addr16
fwait
int
cmp
adc
adc
faddl
stos
icebp
cli
stos
sub
mov
data16
push
push
loope
xor
sbb
mov
leave
ficomps
notb
and
scas
sub
mov
xcrypt-ofb
cmpsl
jmp
enter
sub
xorb
rcrb
push
mov
sbb
add
push
xorl
repz
sub
icebp
lret
sbbl
xlat
xor
arpl
in
and
fsubl
aas
and
into
js
or
mov
stc
xchg
mov
sti
insl
divb
icebp
pop
ljmp
mov
iret
dec
mov
daa
push
clc
adc
xor
dec
in
sbb
fbstp
add
mov
stos
mov
repnz
xchg
adc
les
mov
rcl
push
pushf
mov
sbb
mov
outsb
or
std
xchg
addr16
mov
pop
xchg
mov
jns
sbb
or
pop
icebp
sub
pop
data16
cltd
sub
inc
inc
jmp
xchg
cli
xor
nop
daa
sub
mov
mov
inc
pop
lcall
fiadds
jecxz
cld
cld
inc
notb
dec
xor
cmpsl
fldcw
imulb
cmp
and
mov
lret
xchg
out
dec
cmp
mov
das
mov
insb
mov
mov
movsb
mov
loope
inc
xchg
cltd
arpl
push
jle
or
xchg
and
push
scas
mov
and
cmpsb
xor
out
bound
mov
cmpsb
cmp
jl
adc
jne
inc
popf
addb
je
movsl
dec
icebp
mov
lret
mov
mov
fisttpl
insb
push
bound
jnp
lahf
inc
and
mov
sub
and
stc
push
push
into
cmp
mov
mov
cmp
jle
jp
inc
jge
sahf
mov
mov
test
push
loope
repz
cwtl
mov
mov
cli
mov
rclb
jae
push
in
inc
push
xor
sub
sbb
xor
jno
adc
aas
lcall
shll
and
jle
mov
test
inc
outsl
inc
loop
outsb
dec
insb
mov
jb
ljmp
aam
inc
insl
in
mov
out
and
mov
out
push
adc
mov
jge
sbb
js
or
push
inc
xor
inc
ret
jp
sub
leave
xchg
in
lahf
xchg
rcll
dec
int
aaa
iret
mov
movsl
or
pop
gs
and
scas
outsl
jae
dec
ret
mov
cmp
test
mov
inc
decb
jb
out
lret
mov
int3
lods
pop
jge
movsb
out
fsubr
lock
imul
jo
adc
es
pop
nop
xchg
mov
outsb
insb
xchg
ljmp
xchg
dec
fists
in
sub
andl
xchg
dec
dec
xor
out
cmp
sbb
push
mov
xor
in
xchg
jp
and
rol
movsl
fcompl
popa
idiv
add
int
xchg
repz
fldcw
pop
mov
lret
daa
fisubs
push
push
and
push
mulb
dec
jae,pt
mov
cmp
add
outsb
jecxz
pop
ret
stos
inc
mov
popa
push
pop
adc
seto
and
aad
and
lret
popf
xchg
jecxz
sub
int3
sub
mov
pop
xchg
xchg
pop
sub
mov
movsb
je
out
inc
stc
mov
das
adcb
stos
xchg
jnp
jne
adc
xor
ret
sahf
je
sarl
in
or
shll
inc
inc
xor
sbb
insl
add
sbb
mov
xchg
mov
mov
out
xlat
cltd
inc
imul
xor
sub
mov
push
inc
add
xor
sti
dec
stos
enter
cmc
sub
and
insb
mov
repz
mov
pop
test
or
ljmp
add
mov
popa
pop
aaa
mov
je
loope
inc
xchg
pop
cli
call
mov
jns
push
sbb
jg
iret
sbb
popa
adc
sub
popa
xor
mov
cmpsb
xchg
or
rcl
sub
xchg
ds
jecxz
data16
or
les
out
and
clc
imul
dec
mov
or
mov
mov
mov
mov
push
imul
push
loopne
sbb
fistpll
mov
or
push
lea
scas
xchg
push
iret
mov
pusha
fadds
hlt
mov
mulb
push
sbb
push
xchg
sub
push
xorl
sub
cs
and
mov
test
xchg
and
aam
mov
jp
cmp
sbb
lea
lock
xchg
into
cs
mov
sbb
sbb
jg
xchg
push
jg
and
xor
mov
ror
jno
adcb
sub
daa
loopne
jb
test
dec
das
mov
xchg
xlat
or
or
in
data16
jo
push
leave
lods
and
push
mov
rcr
mull
jae
std
insl
stos
mov
fsubr
or
test
bound
scas
std
inc
adc
mov
out
add
jns
mov
in
lods
lock
adc
pop
aam
dec
inc
dec
sbb
mov
push
mov
sti
movsb
mov
dec
inc
test
test
popf
add
mov
sub
lret
dec
mov
aas
pop
push
mov
xchg
mov
and
imul
loope
in
icebp
insl
sahf
dec
mov
cmp
loopne
xchg
std
das
push
add
ds
fwait
ret
push
mov
and
jnp
int3
faddl
mov
fstpl
push
xor
inc
and
je
dec
add
mov
fimuls
sub
lret
or
mov
xchg
sbb
in
cmpsb
inc
cmpsl
movsl
aad
popa
xor
dec
add
sti
sbb
jne
es
or
sbb
jae
push
imul
xchg
jle
nop
pop
cli
mov
ljmp
ficoms
lret
cmp
jl
or
loop
addr16
stc
mov
fldcw
stc
lock
data16
ret
mov
dec
rorb
in
pushf
cmc
mov
dec
or
jo
xor
mov
ljmp
lock
enter
pop
in
adcb
mov
sbb
push
add
popa
dec
aad
adc
hlt
addr16
test
fs
enter
fistl
imul
pusha
add
data16
fsubrs
push
jns
test
into
xchg
stos
pop
push
cmc
add
mov
nop
mov
xchg
js
sub
add
jns
mov
push
jne
loope
stc
pop
xchg
lcall
icebp
inc
loope
nop
sub
mov
dec
mov
cmp
idivb
orl
pop
pop
rep
test
xchg
addb
jp
popf
cmp
fscale
mov
pop
sub
adc
mov
pop
call
insl
sahf
call
fwait
ret
or
aad
subl
jo
jae
adc
into
mov
out
ss
add
xchg
jae
mov
shlb
aaa
mov
fwait
inc
jbe
and
jg
add
fdivrl
sbb
mov
xchg
jecxz
into
cwtl
mov
lock
stos
push
int3
push
stos
add
or
ja
loopne
push
push
add
jns
daa
das
jecxz
or
add
cmp
push
xchg
hlt
sub
cmp
pop
sarb
pop
xor
std
and
adc
mov
popa
sub
mov
cmp
xor
lds
test
adc
mov
sar
mov
data16
data16
cmc
adc
adc
jge
jge
cmp
outsb
loopne
jle
xorl
pop
leave
mov
mov
inc
fcmovnu
das
xchg
je
and
in
mov
dec
mov
xchg
fcomip
pop
mov
sub
dec
xor
in
xor
inc
je
sti
imulb
push
mov
pusha
jp
mov
adc
sahf
iret
or
xchg
xchg
test
jmp
outsb
in
outsl
std
mov
mov
cmp
cli
lds
pop
xlat
sarb
and
lahf
xor
ja
lea
and
cmp
or
mov
sbb
adc
dec
mov
stos
and
stos
sbb
mov
insb
sub
popa
dec
daa
test
cs
mov
rcll
test
adc
sbb
mov
jg
data16
insl
addl
mov
int3
imul
mov
out
lods
fstpl
pause
adc
lahf
adc
sbb
jl
push
shll
pushf
stos
cmp
jne
addl
xchg
dec
add
mov
mov
add
jbe
ds
cmp
shrb
into
pop
inc
mov
loope
stos
out
icebp
divps
xor
push
dec
sahf
xor
out
or
scas
shl
adc
insb
cli
and
push
adc
adc
cmp
push
popa
rcll
popf
jo
inc
orb
push
inc
sbb
jb
sub
lds
mov
data16
out
xchg
mov
jmp
mov
das
loopne
lret
push
test
js
movsb
jmp
lds
add
mov
clc
push
dec
and
xor
imul
cli
andb
mov
adc
int3
loope
dec
inc
or
cld
aas
stos
flds
movb
inc
xchg
pop
sti
mulb
icebp
pop
jno
lods
insb
fisubrl
xchg
fdivs
add
add
pop
pop
pusha
sub
rcrb
lods
sbb
movsb
dec
dec
add
cld
xchg
and
and
std
sbb
cmp
cmp
mov
adcl
and
pop
mov
loope
jno
adc
aaa
lahf
addl
sub
pop
jae
xlat
imul
sub
cmc
mov
jne
jo
stos
cmp
call
dec
jmp
xor
imul
push
add
mov
xor
jmp
xor
pop
xor
cmpsl
xchg
jmp
rsqrtps
or
ljmp
loop
push
push
stc
insl
leave
add
addr16
mov
cmp
in
gs
xor
dec
xor
in
hlt
add
outsl
xchg
push
int
dec
xor
inc
outsb
sbb
shlb
push
movsb
loopne
sub
pusha
jne
sbb
cmp
inc
ja,pt
xchg
adc
fidivrl
gs
fstps
out
push
mov
xor
or
xor
aad
push
xor
xchg
sbb
int
cs
add
das
scas
stos
dec
sub
ss
jg
outsb
int
mov
out
enter
scas
fimull
pusha
push
imulb
push
cmp
push
push
cmpsl
sbb
mov
cmpsl
xrelease
or
icebp
mov
in
sub
push
cmp
pushf
lahf
xor
dec
addr16
mov
loop
lds
cmpsb
jle
push
add
adc
mov
outsb
jecxz
and
stos
pop
cltd
jecxz
cmc
jbe
dec
mov
ficomps
pop
xor
xlat
sub
sbb
sub
divl
fisubrl
jbe
sarb
or
aaa
lret
insb
mov
xor
in
sub
out
pop
sub
mov
hlt
or
mov
insl
mov
mov
and
push
dec
pop
in
sub
cli
out
out
inc
jo
into
das
decl
int
dec
add
stos
mov
push
jns
mov
daa
inc
jge
sbb
xlat
jbe
sub
in
addl
fnsave
fs
xor
gs
dec
push
xor
add
lock
ret
outsl
jecxz
in
xchg
je
cwtl
lret
inc
xorl
mov
std
popf
popa
dec
dec
fisubrl
jne
add
hlt
fwait
ret
mov
popf
call
xor
fdivr
xchg
mov
pop
sub
lret
stos
int
repz
fchs
leave
sbb
sahf
xchg
fdivl
in
imul
mov
push
push
cmp
fwait
ret
mov
icebp
je
je
lahf
clc
and
push
mull
and
sub
test
mov
lret
ret
sub
add
test
push
sahf
sbb
jle
mov
mov
repnz
fsubrs
test
loop
iret
es
or
dec
xlat
stc
aas
mov
fcoml
sub
xchg
jo
loopne
pop
pop
mov
mov
in
scas
pushf
test
add
loopne
outsb
jae
mov
mov
fnsave
sub
mov
mov
into
cwtl
cmp
cltd
jo
insl
cmp
lahf
pop
mov
fadds
mov
mov
out
jns
dec
inc
pop
cmp
push
in
arpl
adc
or
add
imul
and
test
fsub
loopne
mov
pop
pop
ss
mov
sub
fwait
pop
add
fisubl
fimull
push
xchg
jb
call
xor
jmp
mov
jo
mov
repnz
jge
cld
mov
lds
mov
mov
push
cmp
out
mov
xor
ret
pop
int
ficoml
sub
adc
xor
dec
or
mov
repz
subl
xor
pop
sbb
fsubs
inc
sahf
shrl
xchg
push
dec
push
sbb
add
outsb
sbb
mov
mov
jge
sub
mov
rclb
cltd
lods
sbb
or
xor
fnstcw
cwtl
jo
sarb
testb
jmp
mov
xor
popf
jle
or
xor
fldenv
mov
adc
jmp
clc
jb
cmp
dec
sbb
in
jle
pushf
mov
cmpsl
push
int
enter
and
cmp
pop
and
lds
mov
mov
mov
enter
je
ficomps
mov
lret
stos
dec
je
jno
cmc
iret
ds
lret
aad
hlt
mov
xchg
adc
loop
mov
out
dec
mov
jle
push
ss
jns
xor
adc
js
inc
test
mov
sbb
aad
xchg
sbb
sub
in
sub
call
cli
lods
push
push
mov
pusha
div
xchg
inc
jmp
mov
ror
jp
add
xchg
and
jne
shlb
test
in
dec
mov
pop
sub
lret
mov
jg
add
clc
and
filds
outsl
jg
sahf
pop
rorb
fidivrl
jg
nop
push
cli
dec
jl
xorl
mov
ja
mov
cmc
push
pop
cmp
ret
push
jl
nop
cmpsb
mov
ret
or
pop
loope,pn
add
int
repz
dec
add
repz
add
fistl
cmpb
add
ret
inc
or
rorl
xlat
mov
push
out
push
out
xchg
lds
sbb
mov
or
lea
leave
lds
stos
mov
sbb
mov
mov
test
enter
mov
inc
mov
push
dec
flds
popf
lcall
jl
add
ret
cmp
sub
test
jno
pusha
shrb
cmpsl
mov
adc
pop
inc
mov
sahf
pushl
xchg
xchg
xchg
or
stos
sub
imul
cmp
add
fdivs
movsl
pop
out
aas
pop
xor
xor
mov
scas
cmc
repz
lea
mov
add
pop
stos
les
popf
fidivl
jecxz
int
sbb
sub
cwtl
cli
mov
stos
jno
out
dec
adc
xchg
icebp
mov
sbb
fwait
or
mov
pop
orl
int
push
add
sahf
int
cmc
inc
cmp
shlb
sti
pop
andl
out
insb
rclb
inc
and
pop
add
hlt
imulb
out
outsb
xchg
xlat
addl
inc
and
cmp
clc
lret
mov
cmp
xor
outsb
pop
mov
lret
das
rcr
test
mov
scas
mov
xchg
cmp
add
pcmpgtw
or
dec
push
dec
dec
inc
je
fdivrs
imul
mov
rorl
or
mov
mov
mov
daa
push
inc
cmp
push
leave
ret
xor
pushf
mov
arpl
bound
jb,pt
fwait
test
test
adc
mov
sub
mov
sub
cmpsl
fidivl
and
sti
sbb
data16
imul
popf
dec
pop
or
dec
push
int3
mov
dec
sti
push
insl
fisttps
stc
lahf
mov
fs
or
pushf
lods
xchg
data16
jnp
shll
add
lahf
cld
je
sbb
xor
rcrb
test
outsl
sbb
add
cvttps2pi
cmp
and
js
fsubl
xorb
mov
ljmp
sub
mov
fcoms
cmp
or
xor
or
mov
sahf
push
and
xchg
xor
aas
xor
rorl
mov
dec
outsb
nop
jo
insb
int3
add
shlb
or
cmp
fsubl
ja
jnp
faddl
and
leave
xor
lret
jno,pt
pop
sub
cmp
mov
fnsave
and
fistpl
dec
ret
test
pop
pop
pop
add
clc
push
lcall
cmpsb
cmpl
fstps
test
jmp
gs
shl
aad
pop
sub
mov
sub
push
fwait
mov
and
cmp
repz
aad
jae
xchg
daa
mov
loopne
push
jbe
and
xor
jae
inc
cmp
xor
jg
adc
cltd
xchg
movsl
mov
pop
movsb
jmp
fmuls
adc
fstpt
test
sub
add
js
outsb
and
jmp
xor
or
mov
sbb
std
pop
mov
scas
out
ss
cmp
imul
mov
sbb
xor
xorb
push
dec
mov
dec
bnd
jb
dec
mov
sbb
xchg
or
das
test
cli
cmpsb
lret
ffree
cltd
imul
pop
cmp
xorl
xchg
aam
mov
cmc
lret
pop
dec
add
jmp
adc
leave
das
xchg
popf
cmp
xchg
es
and
fstpl
xor
mov
lcall
fstp
pop
je
fldl
and
mov
int3
out
dec
dec
push
sbb
idiv
imul
enter
jl
pop
adcl
and
xchg
insb
mov
push
stc
xchg
cmc
repz
and
icebp
lret
ret
sbb
inc
cmp
and
sub
rolb
adcl
mov
sbb
pop
sbb
lcall
sbb
jno,pn
mov
pop
mov
push
mov
mov
jg
clc
sarb
icebp
inc
add
sbb
mov
fsubrs
fucomip
outsl
sbb
addr16
dec
call
dec
fwait
in
es
aaa
loope
pushf
addr16
or
loope
outsl
in
fisubrl
sbb
pop
mov
ljmp
mov
call
jecxz
xchg
cltd
push
cld
sub
imul
cmp
xor
clc
adcl
add
sbb
movsl
ficompl
jns
xor
mov
dec
ret
xchg
push
adc
sbb
scas
push
lea
push
xchg
fisubl
std
in
xchg
std
cld
xor
dec
and
jp
add
stos
imul
pop
push
adc
sub
out
mov
push
orb
ja
sbb
cmp
cmp
into
sub
leave
aad
pop
aad
bound
jae
mov
gs
push
ljmp
jo
mov
add
test
xor
negb
outsb
cwtl
mov
js
out
arpl
gs
pop
fidivl
sahf
push
out
or
loope
mov
test
pop
js
nop
rcrb
repz
mov
cmp
or
aad
sub
lods
jg
dec
shlb
xor
lcall
mov
push
dec
shl
shll
push
jb
ja
sbb
xchg
es
mov
jno
cmp
mov
lret
popa
sub
fs
push
inc
outsl
pushf
int3
inc
or
inc
pushf
mov
push
add
adc
mov
orb
push
icebp
pop
out
loope
arpl
mov
sub
inc
push
stos
dec
sbb
das
packuswb
jle
mov
nop
push
dec
ret
sbb
popf
sahf
mov
and
les
sbb
dec
lea
mov
mov
mov
repnz
fs
adc
in
pushf
test
mov
jne
inc
add
shl
push
add
aas
mulb
mov
cmc
xor
push
adc
add
cli
test
and
dec
adc
mov
pop
inc
mov
jnp
pop
mov
add
pop
jae
iret
das
xchg
dec
lods
stos
jecxz
xchg
cs
jns
dec
gs
jb
addr16
lods
push
std
mov
fcmovnu
xchg
cmovne
mov
mov
pop
es
iret
inc
mov
push
push
push
or
sbb
shll
and
das
leave
sbb
lea
out
mov
mov
pop
ss
jnp
and
aam
xchg
arpl
lahf
sbb
dec
jns
xchg
stos
mov
jae
pop
sub
dec
sbb
out
int
inc
dec
js
out
mov
sub
add
mov
xor
fsubr
inc
pop
push
xor
push
aam
or
and
push
mov
ljmp
mov
insl
pusha
lds
lret
pop
push
adc
inc
out
sbbl
stos
and
xlat
jb
or
mov
adc
or
cs
sbb
cmp
pop
aad
mov
stos
loop
cmp
push
pop
insb
mov
push
ss
mov
xchg
repnz
pop
aaa
adc
sarl
adc
or
or
je
sub
ds
push
mov
dec
and
cmp
js
shrl
and
dec
es
xchg
dec
pop
mov
je
es
sbb
scas
jo
mov
imul
and
icebp
data16
sub
dec
mov
fadds
cmpsb
or
stc
inc
sbb
addr16
jmp
and
outsb
adc
insl
dec
popw
add
mov
jno
movsl
jge
addr16
mov
mov
mov
sbb
test
addl
hlt
lcall
stos
addl
inc
into
or
lods
cwtl
out
test
das
lock
inc
scas
add
stc
out
rcll
cmp
ficoms
or
xlat
testl
inc
ret
xchg
or
in
adcl
popa
or
sarb
sti
shlb
lods
push
mov
call
cmp
fdivs
int3
das
into
test
std
aam
jbe
lods
jae
dec
adc
xor
cmp
jbe
mov
sarl
push
incl
cmp
jno
push
xchg
cwtl
inc
test
aas
fisubrl
sbb
sahf
rcrb
ja
cld
sub
and
fsubs
pusha
pop
sahf
lods
mov
push
push
ss
push
cmp
push
mov
out
lds
cmp
je
adc
push
xor
mov
xor
les
push
out
ja
lcall
ret
lcall
pop
sbb
seta
ds
insb
and
fisubrl
pusha
mov
data16
shlb
or
test
push
sbb
pop
sub
jge
jnp
fmuls
pop
rcll
jg
dec
inc
les
ja
loop
clc
mov
out
inc
pop
mov
fsub
icebp
fiadds
in
xlat
mov
lret
pop
addr16
fistl
out
movswl
test
pop
xorl
dec
shrb
icebp
imul
xchg
xor
dec
pop
cmpsl
mov
xchg
dec
xor
xor
andps
imul
and
ret
out
enter
inc
inc
or
dec
dec
aas
out
int3
mov
test
mov
popa
sahf
scas
fsts
mov
imul
ja
jae
es
les
inc
mov
mov
ret
mov
mov
sbb
dec
std
roll
rorl
imul
adc
repnz
leave
xchg
jmp
leave
jle
loop,pt
jle
jnp
imul
aam
sarb
dec
push
inc
dec
stos
in
and
add
or
xchg
dec
enter
jae
cmp
scas
mov
lea
mov
out
pop
and
push
rclb
adc
aaa
add
add
xchg
add
jo
test
pop
stos
sbb
mov
inc
jne
add
jmp
sti
inc
xchg
call
mov
add
fists
lcall
or
jl
cmp
lock
fucomp
and
pop
xchg
push
xchg
sahf
outsb
push
ja
insl
mov
or
pop
shl
je
repz
or
mov
frstor
mov
inc
movsl
adc
xchg
push
fdivs
out
loopne
push
mov
arpl
mov
xchg
inc
xor
fsubrl
dec
adc
jo
mov
out
mov
sub
cmp
jb
jl
and
shl
es
insb
jecxz
sbbl
jno
add
scas
and
xchg
popf
les
push
mov
adc
push
fwait
sbb
test
outsb
jl
rcrb
add
mov
and
mov
mov
inc
sti
sbb
mov
and
add
icebp
add
adc
mov
adc
stc
fsubrp
fadds
push
xor
cmpsl
and
out
enter
out
xor
fnstsw
push
loop
add
outsb
and
inc
sbb
sub
push
out
mov
fbstp
call
mov
adc
or
mov
or
pop
repnz
int3
cmc
xor
aas
mov
or
mov
sbb
lods
add
pop
jp
sub
fistl
mov
mov
fwait
call
mov
sub
in
cs
lock
jg
and
loopne
mov
pop
cs
out
xchg
scas
add
jmp
pusha
dec
adc
je
stc
out
and
enter
sub
jg
add
notb
inc
cmpsl
jg
xchg
stc
lods
lea
test
sub
divb
pop
mov
in
pusha
or
imul
data16
pop
fmuls
mov
push
gs
push
call
mov
mov
mov
std
mov
pop
das
fcomps
mov
sbbl
mov
inc
dec
push
xor
dec
sbb
push
jg
add
xchg
addb
add
in
test
dec
hlt
push
lods
cli
adc
divps
stc
aas
ficoms
push
push
or
xchg
fwait
add
scas
pop
adc
pop
inc
or
pop
stc
push
sub
mov
cmp
xor
mov
jns
push
gs
stos
out
test
aaa
pop
pop
or
fsubl
popa
xorb
shll
sbb
arpl
dec
pop
inc
adc
push
in
pop
in
xor
lret
and
sahf
sti
pop
jae
std
rorl
stos
dec
inc
pusha
ret
pop
or
cli
aas
cmp
rcl
push
fistpl
and
and
sub
loope
scas
aas
sbb
xchg
cmp
inc
add
aad
pop
sbb
cmc
sbb
push
push
dec
rcll
loop
and
xchg
stc
xchg
cmpsb
test
repnz
sti
std
pop
pop
lahf
mov
jl
js
mov
ret
nop
cmc
inc
add
pop
adc
jne
mov
mov
ljmp
repnz
icebp
ret
sub
dec
mov
dec
fs
outsb
in
fildl
xchg
mov
imul
add
mov
add
pop
test
and
mov
xchg
test
popa
mov
and
pop
cld
push
sbb
shl
andl
jo
ds
lock
xor
cld
scas
or
mov
daa
add
movsb
fstps
pop
imull
fistl
push
and
jb
jge
out
icebp
inc
xor
in
mov
nop
in
xchg
jg
sbb
cld
inc
insb
sbb
mov
into
mov
lret
or
sbb
fiaddl
sti
jecxz
cmp
inc
pop
test
orb
stos
mov
sub
cs
xor
int
nop
ja
and
sbb
iret
loop
mov
jno
fcompl
rcll
sub
push
cmpsl
dec
mov
dec
jae
pop
addr16
adc
adc
hlt
and
add
js
mov
sub
or
mov
and
fdivrp
jle
dec
xor
cmp
into
ljmp
cmp
pop
xchg
mov
jg
lcall
push
cmp
sbb
or
pop
frstor
pop
jnp
sbb
scas
call
lea
dec
es
je
aas
push
pushl
sti
and
mov
mov
xchg
das
dec
cltd
sub
std
test
lcall
sub
mov
sbb
or
dec
pop
cli
sti
dec
cmc
dec
or
mov
sbb
out
xchg
iret
jecxz
hlt
jo
mov
rclb
sub
movsb
inc
push
push
pushf
pop
jbe
xchg
repz
in
xchg
lods
lcall
push
test
lret
dec
mov
xchg
xlat
mov
stos
lock
mov
inc
mov
or
jle
ret
hlt
ds
mov
lret
lret
push
and
xchg
cmovg
sub
out
in
fcmovbe
ss
push
mov
mov
cltd
push
and
xor
outsb
add
aam
sahf
mov
and
adc
dec
pop
cmp
jmp
sub
int
es
cmp
sbb
sbb
fstpl
cmp
mov
hlt
xchg
cmpsl
shll
adc
add
pop
and
xchg
inc
insl
inc
les
push
stos
cmp
stc
data16
xlat
sub
gs
iret
sub
pop
inc
jb
fdivrl
xchg
fcompl
cmpsl
fbstp
inc
add
sbb
and
dec
xchg
pop
add
xchg
cmc
fdivl
pop
in
pop
dec
push
fldenv
aad
std
fildll
mov
sbb
ss
or
cli
sbb
sbb
loopne
mov
pop
mov
push
pop
push
sub
inc
pop
mov
xor
cli
or
rorb
popf
jg
fnsave
mov
mov
mov
mov
xchg
imul
mov
daa
out
test
sbb
mov
insl
inc
xlat
xorl
jle
jne
push
imul
jp
mov
clc
sbb
dec
dec
rep
imul
jmp
pop
outsb
cli
mov
xor
les
xor
jmp
xor
addb
dec
cld
inc
and
lea
outsb
jnp
sub
fisubrl
mov
insl
xor
mov
inc
and
xor
dec
jge
mov
mov
sbb
add
dec
sub
xor
sbb
adc
sbb
lods
jo
and
shll
outsl
popa
fwait
je
sub
outsl
dec
pusha
jp
mov
mov
push
fwait
xor
mov
cmp
cmpsb
push
rolb
das
out
cli
sbb
pop
lock
aas
popa
or
push
push
leave
add
sbb
loope
mov
jae
cmc
pop
ss
inc
shl
mov
arpl
jg
add
lds
sti
iret
push
movsl
mov
push
xchg
adc
in
dec
xchg
cld
adc
fldt
and
lock
pushf
jl
inc
ss
adc
push
cmp
adc
xor
enter
movsb
lea
xchg
pop
pop
cmp
sahf
xor
xrelease
int
icebp
jmp
bound
push
push
or
mov
fs
and
std
bound
iret
mov
popa
sbb
clc
fiaddl
stos
pusha
test
cld
or
pushf
lahf
cmp
call
test
test
clc
popf
sbb
push
insb
lea
mov
jl
xor
pop
xor
xchg
dec
jno
xchg
jb
cli
insl
jecxz
pop
push
xchg
cmp
jne
aam
add
sub
sbb
rolb
je
mov
jl
ret
test
or
sub
mov
mov
or
pop
arpl
sti
or
add
adc
loopne
loop
mov
mov
cwtl
lods
mov
data16
shll
cs
dec
sub
dec
xchg
cmpsl
pop
outsl
and
xor
dec
push
in
mov
shrb
sbb
rclb
stos
and
cmp
dec
jg
or
rcr
mov
lods
jg
or
or
xlat
pusha
call
mov
mov
dec
cmp
push
pop
iret
adc
dec
in
or
insb
movsb
dec
pop
and
outsb
ret
mov
and
testb
jge
push
jle
xor
stos
lcall
imul
pop
add
rcll
sub
enter
dec
jle
xor
sti
xchg
lahf
push
gs
repnz
dec
loop
mov
lahf
es
jmp
jns
rcll
pop
mov
cmp
push
sub
adc
and
dec
mov
push
adcb
push
push
jb
bound
shlb
mov
add
or
xor
sbb
data16
lret
dec
lds
pop
add
push
hlt
xor
fwait
adc
cmc
or
fildl
add
shr
lea
cwtl
out
lret
jle
jmp
je
jae
dec
sbb
inc
sub
in
outsb
dec
mov
mov
xor
add
xchg
mov
cltd
lcall
enter
pop
nop
std
nop
and
stc
sbb
loope
cwtl
cmp
and
and
andb
dec
pop
arpl
add
push
rep
mov
sbb
les
mov
inc
jle
dec
ret
out
pop
imul
pop
dec
push
mov
orps
or
out
lods
cwtl
pop
cmp
sbb
jl
insb
mov
inc
sarl
sub
lret
xor
lea
and
sbbl
stc
aaa
sbb
xor
cld
jmp
mov
and
insb
scas
orb
mov
sub
push
es
xchg
sbbb
loope
andl
aas
jmp
test
xor
stos
and
mov
aad
cmp
xor
fidivl
call
jmp
pop
orl
scas
mov
mov
popf
std
sub
add
jbe
lods
nop
adc
jno
sub
dec
jge
clc
or
add
outsl
sahf
mov
or
jl
mov
inc
out
fsubrs
mov
cmpsb
stc
or
adc
aas
das
inc
out
fwait
pop
add
inc
ds
lock
xchg
sub
jmp
lods
pop
xchg
add
and
xlat
and
int
xchg
mov
imull
sbb
mov
out
sub
sub
adc
xor
or
or
add
arpl
cmp
xor
mov
arpl
pop
jbe
movsb
xchg
cmp
dec
mov
divl
cmp
ja
not
rcll
jne
mov
pop
scas
add
mov
or
lcall
dec
in
mov
ret
mov
mov
mov
les
mov
cmp
dec
lea
xchg
dec
je
sahf
dec
cmpl
in
inc
inc
or
inc
cld
cmp
aaa
jae
shrb
cmp
mov
fxch
bound
xor
mov
push
shlb
call
scas
fdivr
ljmp
xor
outsb
iret
push
or
mov
xor
stos
add
inc
inc
out
xor
dec
or
in
mov
or
fstps
ss
jmp
dec
in
jl
jecxz
std
adc
pop
lods
push
bound
push
dec
outsl
xor
xchg
ror
push
and
pop
adc
iret
xchg
dec
mov
mov
cs
jb
rcll
push
in
mov
loope
cmp
xor
lret
pushf
sub
jnp
loope
test
push
sub
xor
lods
sbb
rorl
aas
out
in
lock
and
jae
fcomip
adc
ljmp
popf
add
lods
mov
fidivrl
mov
xor
and
mov
adc
nop
out
dec
lock
adc
incl
push
pop
lahf
xchg
je
mov
or
in
sub
sti
lret
xchg
pop
lret
aad
pop
lods
imull
in
xchg
pop
data16
ss
rorl
dec
push
int3
js
sbb
cmp
mov
xchg
cmp
cmp
jnp
cmp
cmp
inc
mov
inc
add
xor
lret
pop
pop
daa
cmpsl
ja
and
xchg
jne
jo
into
fnstcw
xor
add
pop
imul
sahf
jno
push
pop
loope
and
xor
xlat
jns
sahf
push
push
and
push
mov
mov
enter
shll
jl
test
pop
sti
cmp
add
into
js
popf
mov
int3
shl
mov
mov
icebp
mov
xchg
push
mov
lret
loopne
and
xor
rorl
test
jne
into
sarb
sbb
lahf
cmp
mov
pusha
cs
jl
mov
test
hlt
jle
mov
es
lahf
pop
or
adc
pop
jo
xchg
outsl
mov
pop
inc
in
mov
jae
mov
addr16
push
dec
out
mulb
scas
gs
cmc
popa
mov
inc
out
fsubl
jbe
mov
lock
lahf
mov
mov
addb
mov
popa
xor
xor
push
clc
call
mov
lea
mov
xchg
jecxz
lahf
sub
popa
inc
xlat
and
or
scas
call
test
das
das
jo
xor
enter
in
ja
push
adcb
xorb
cmp
inc
fcoml
xchg
and
cltd
adc
xchg
mov
xchg
out
jno
fldcw
mov
ret
pop
insl
jae
or
clc
daa
leave
sub
adc
cwtl
shll
sub
lods
popa
xchg
imul
lret
lcall
call
dec
mov
shlb
push
imul
or
int
xchg
inc
push
xchg
shr
jo
out
push
cmpsb
notb
and
mov
mov
mov
outsb
inc
je
pop
loopne
mov
loop
mov
imul
mov
mov
pop
push
lcall
inc
dec
test
xlat
mov
sbb
in
addr16
pop
lret
aad
ljmp
xchg
xchg
dec
ljmp
push
pop
or
nop
and
call
jae
ret
pop
pop
mov
adc
pop
sbbl
fistpl
xor
std
jmp
pop
cmp
inc
ljmp
aad
imul
pop
pop
testl
xor
xchg
cmp
scas
cmp
call
addr16
loopne
xlat
dec
es
pop
shrl
js
jecxz
std
pop
roll
cmc
shrb
nop
and
aas
stc
lods
push
sub
inc
sub
cmp
insb
push
push
mov
mov
pop
lret
push
cmp
cmp
cmpl
pop
cmp
aaa
jge
inc
add
xor
out
cmp
cmp
inc
iret
mov
pop
pop
inc
cmp
xchg
sub
leave
mov
imul
mov
cmp
push
loope
ljmp
lahf
push
in
pop
or
fmull
cltd
in
les
testb
adc
sahf
imul
mov
frstor
mov
lock
andb
xchg
es
jbe
push
cmp
mov
ret
lock
jno
cld
jecxz
clc
loop
sbb
or
lret
lds
and
mov
popf
sub
mov
inc
outsb
call
adc
xchg
out
popf
add
push
pop
addb
orl
and
shrb
adc
jecxz
sbb
cmp
cmp
xchg
xchg
and
in
mov
and
sbb
test
lar
std
insb
mov
jp
negb
icebp
rcrl
lods
push
push
push
imul
ret
and
xor
call
jmp
das
xor
hlt
mov
add
shrb
adc
sub
dec
add
mov
xchg
xchg
inc
shll
pushf
and
dec
mov
cmpsl
int
cmp
mov
cmp
sti
adc
dec
fisubl
lock
gs
add
sbb
je
push
stos
stos
push
loope
insl
pop
ss
jl
leave
ljmp
push
mov
outsb
in
xchg
rcl
pop
in
loopne
mov
popa
mov
push
aad
mov
or
test
and
test
cltd
insl
int
cwtl
jo
movsl
jmp
or
test
data16
and
dec
test
inc
cmc
icebp
push
mov
mov
xchg
xchg
mov
jo
xorl
mov
jb
iret
or
les
arpl
lret
cmpb
fisttpl
adc
outsb
jno
repz
les
mov
cmpl
or
lock
into
mov
arpl
mov
js
ror
shll
fwait
xchg
push
sub
fcompl
pop
xor
mov
add
pop
aam
xor
je
xchg
mov
sub
dec
stos
faddl
popf
push
pop
lea
fsts
sbb
insl
jne
mov
adc
jbe
loop
add
adc
dec
cmp
jnp
pushf
fbstp
dec
adc
push
icebp
push
in
dec
fcompl
fidivrl
push
fmuls
pop
sbb
xchg
sahf
fistps
cld
sbb
jle
and
out
push
sarb
loopne
jmp
shl
mov
and
leave
jecxz
les
jne
outsl
jl
push
sub
lcall
sbb
stos
cmpsb
andb
cltd
pop
push
dec
jbe
inc
daa
push
repnz
or
inc
nop
cwtl
sti
push
clc
cmpsl
in
imul
loope
mov
test
imul
add
cmovae
adc
loop
inc
cmp
mov
imul
out
mov
outsl
mov
jo
dec
scas
mov
popa
push
inc
icebp
loop
sub
mov
pusha
fs
movsl
cmpsb
mov
ljmp
int3
inc
sbbb
mov
jecxz
out
lods
out
test
or
inc
sub
jno
xchg
adc
xchg
adc
jge
xchg
sub
push
add
pop
imul
aas
add
xchg
sbb
insb
out
adc
lea
dec
push
jl
mov
shll
mov
inc
xlat
jno
dec
test
ds
jle
xchg
adc
mov
xor
mov
mov
jle
inc
dec
aam
adc
lret
mov
outsl
and
mov
stos
or
pop
mov
std
adcb
jle
pop
fistl
repnz
or
fcomip
das
arpl
or
arpl
cmp
loope
add
or
xchg
nop
stos
jp
push
mov
cmpsl
mov
in
xchg
jmp
out
mov
pop
sbb
scas
xchg
pop
icebp
sbb
ret
fimull
xchg
xchg
and
je
sub
cmp
sub
mov
mov
sbb
mov
std
mov
ret
or
sub
jb
push
push
push
xchg
mov
adc
and
jmp
xchg
push
imul
mov
mov
xchg
out
xor
sub
adc
lcall
jg
mov
jae
and
jmp
jns
pop
jmp
dec
push
pop
mov
pop
sbb
jae
push
data16
lock
inc
inc
xor
pop
shr
and
in
cltd
into
lahf
inc
mov
or
ja
dec
addl
pop
popf
xchg
outsl
cmp
add
cs
scas
ret
rol
mov
and
and
movsl
push
lods
je
mov
xor
insb
je
test
rcrb
stos
nop
dec
sub
in
mov
mov
pusha
add
lret
mov
and
xor
call
xchg
mov
mov
rcrl
ret
nop
pop
cmp
push
dec
mov
lahf
cmp
xor
sub
pop
ds
mov
add
shld
jae
or
sub
xor
sub
xchg
xor
test
adc
imul
popf
push
imul
dec
pop
push
pop
jae
pop
push
mov
or
out
cmpsb
scas
sub
push
loop
leave
outsl
imul
push
inc
jnp
jb
sub
or
inc
cmp
adc
push
and
in
loopne
and
ja
movsb
nop
add
push
add
xor
add
cmp
xor
lea
icebp
data16
js
xorl
das
fisubrs
cmc
in
adcl
pushf
ss
aaa
push
stos
mov
pop
xor
iret
sbb
push
das
push
lea
rcl
sub
mov
fstps
cmp
xchg
pop
mov
jne
faddp
adc
jecxz
mov
sub
or
pop
jne
ljmp
push
test
imul
adc
xchg
pushf
popf
sarb
js
cs
imul
sub
mov
sub
inc
js
clts
mov
mov
jmp
pop
fwait
test
adc
lods
jmp
sub
aas
loopne
ljmp
mov
sbb
add
or
jne
jmp
cmpsl
push
fstps
movb
mov
cmc
daa
sti
lret
xchg
leave
cmp
sti
dec
xlat
test
fdivs
push
mov
testb
cmp
jmp
aad
mov
or
adc
arpl
mov
inc
stos
or
fiaddl
repnz
jge
mov
pop
sub
shll
mov
fs
pop
and
or
jns
mov
sub
dec
lret
imul
xorl
xchg
addr16
iret
fdivr
je
xor
xchg
pop
mov
rcl
cmc
sub
scas
xchg
cmp
insb
in
xlat
adc
call
inc
jecxz
pop
loopne
daa
jno
jle
fwait
mov
int
sarl
xor
lods
test
sub
lahf
sbb
sub
lret
popa
xor
and
fstpl
mov
mov
jecxz
loope
xor
and
sbb
mov
out
xchg
or
mov
and
dec
jb
adc
gs
push
xchg
pop
sub
xor
repnz
and
push
xchg
dec
cmp
xchg
stc
pushf
test
cli
adc
inc
mov
jnp
ja
xchg
sbb
mov
dec
iret
push
outsl
arpl
sub
inc
dec
pop
jmp
sbb
and
sti
push
adc
push
cld
out
xchg
adc
fistl
xchg
ss
popf
mov
push
shlb
arpl
cmp
push
cmp
sub
or
xchg
push
std
sbb
arpl
cltd
mov
out
mov
xchg
pop
es
push
adc
testb
es
adc
xchg
cmp
push
and
push
loope
sub
test
nop
in
mov
dec
int3
add
xor
rcrb
cmpsl
mov
jno
dec
push
or
inc
xor
push
cmc
and
ljmp
sbb
mov
pushf
xchg
out
push
xor
jp
cmp
in
out
sbbl
out
xchg
gs
insb
jne
movsb
push
cmpb
leave
adc
mov
sbb
jns
sub
je
sar
xor
pop
rcl
dec
jecxz
xor
std
sbb
lock
or
lea
xchg
ret
stos
pop
mov
rcrl
lods
dec
nop
jnp
cmp
xlat
and
xor
testb
mov
imul
enter
bnd
outsb
sahf
pushl
jb
notb
or
nop
pusha
std
lret
xor
mov
jne
add
mov
and
xchg
out
lods
fs
inc
jbe
push
or
add
leave
leave
in
add
nop
leave
mov
clc
xchg
push
cs
sub
sub
rcl
loopne
jnp
or
and
aas
sbb
xchg
xchg
shrl
test
push
out
int3
sarl
push
jl
xchg
mov
sub
inc
cmp
inc
or
push
jg
xchg
dec
je
jge
iret
push
xchg
cmp
loop
testl
push
pop
xchg
les
and
and
mov
push
test
call
dec
push
push
inc
mov
mov
add
xor
cmp
dec
mov
scas
movsb
mov
mov
adc
cld
bound
and
out
fidivs
mov
add
mov
jge
in
mov
sub
inc
out
push
sub
mov
lock
mov
mov
jp
mov
push
dec
outsb
inc
sub
enter
lret
lds
imul
jge
jno
mov
negb
fs
ficompl
pop
mov
movsb
cmp
mov
je
movl
aas
xorl
push
push
xchg
mov
pop
xchg
mov
mov
in
popf
mov
mov
jnp
lea
adc
aaa
or
xchg
and
add
aam
shll
xchg
mov
lcall
sbb
imul
iret
adc
push
js
xor
inc
imul
fimuls
mov
jp
dec
in
call
dec
or
xchg
inc
sbb
or
std
dec
es
loopne,pt
loope
ja
jns
jo
and
out
mov
push
and
add
inc
xor
jae
xchg
xchg
jo
sbb
or
jge
xor
mov
jle
fildl
dec
inc
int3
push
decl
or
dec
inc
sbb
xor
aad
sahf
or
dec
push
mov
pushf
mov
imul
sbb
repz
add
dec
mov
push
mov
andb
stos
xchg
jne
pushf
or
fs
lock
lods
outsl
add
cmp
pop
nop
fadds
sub
hlt
and
lods
mov
sbb
xlat
push
xchg
aad
add
push
dec
or
jmp
shlb
adc
popa
push
adc
push
adc
add
sub
adc
repnz
insl
imul
dec
ror
or
jae
arpl
sub
pop
shr
push
jmp
mov
rdmsr
jg,pt
aam
cmpl
mov
sti
adc
jns
or
movsl
adc
inc
xor
xchg
fdivs
cmp
push
inc
fdivp
jle
push
not
push
push
les
or
adcb
add
sbb
add
dec
sub
mov
fs
lret
cmpsb
fdivrs
jecxz
push
xchg
mov
ret
pop
les
xchg
sbb
testb
cmp
jl
jle
add
cltd
sub
xlat
icebp
idivl
sahf
fbstp
adcl
lods
and
inc
or
adc
movsb
push
or
aad
lret
sub
sbb
mov
add
outsl
andl
xchg
lcall
stos
fcomip
xchg
mov
das
and
mov
pushf
and
enter
sahf
sub
testl
mov
pop
lea
add
or
cmp
adc
cmp
cltd
jbe
jo
clc
jle
ss
hlt
xchg
and
push
lret
loopne
int
add
test
inc
pop
lods
bound
lock
mov
fildl
jne
cltd
and
inc
inc
int3
mov
fidivs
cmp
sub
inc
xor
push
add
addr16
cld
xor
jae
push
inc
jge
orb
in
xor
mov
dec
push
xor
arpl
and
insl
pop
sub
push
in
push
pop
mov
int3
dec
mov
gs
or
xor
sbb
test
cmc
lods
sahf
mov
lcall
mov
bnd
xor
push
stos
mov
sub
lret
rcl
push
and
cld
mov
out
mov
push
sbb
aas
scas
fs
fisubrl
xchg
jle
adc
stos
xchg
fistpl
syscall
mov
fwait
daa
xor
lea
dec
mov
repnz
xchg
jp
mov
divl
sbb
dec
es
cmp
xorb
sub
sahf
mov
add
dec
jl
sub
jno
push
cmp
imul
or
mov
and
nop
cmp
cmpsb
orb
imul
loope
xchg
fistps
fidivrl
jg
pushf
mov
sub
xor
das
fprem1
xor
mov
cmp
shl
mov
inc
sbb
xchg
sub
fnstcw
push
pop
popf
jle
orl
je
mov
push
sub
aaa
dec
xchg
or
out
stos
adc
adc
sti
out
sub
add
cwtl
sbb
fcomps
fcmovnu
rcrl
add
int3
scas
inc
inc
sti
loopne
sti
push
scas
inc
cli
sub
jo
sub
xor
cmp
fwait
loope
stos
adc
ret
lcall
mov
add
inc
pop
dec
xchg
mov
xchg
in
jns
fldl
mov
es
cmp
xchg
in
fwait
cmp
cli
mov
iret
add
push
cmp
lods
xor
sub
pop
shlb
cmp
dec
iret
cmc
nop
or
mov
mov
out
fnsave
add
mov
push
loopne
dec
xor
les
insb
inc
inc
lea
popa
push
in
dec
dec
cmpsl
dec
sahf
loop
shll
push
inc
lods
push
dec
ljmp
imul
mov
repz
mov
lahf
addb
fistpll
jl
inc
testb
dec
arpl
js
popa
dec
mov
cmp
mov
in
in
mov
loop
shrl
mov
mov
mov
sub
stc
pop
mov
xor
and
fimuls
pop
jae
rcr
repz
or
js
sub
out
jp
xor
pusha
leave
out
rorl
stos
rcrb
mov
dec
subps
push
outsb
imul
cmp
int
pop
push
dec
movsb
fdivrp
push
hlt
lds
fidivrl
adc
mov
loope
out
out
cwtl
ds
xchg
jns
mov
test
imulb
stos
mov
nop
adcb
jae
sub
dec
ljmp
or
push
dec
fxch
add
je
in
cli
iret
rorl
mov
js
dec
push
sbb
sbb
add
mov
mov
mov
push
adc
sub
test
in
mov
pop
or
iret
gs
ss
fwait
jne
popa
sbb
dec
xchg
pushf
lods
push
jnp
jno
mov
or
pusha
je
lcall
xchg
mov
dec
adc
push
cmp
sbb
leave
dec
fistl
xlat
or
call
icebp
mov
aaa
orb
add
mov
rolb
dec
out
out
fs
inc
add
add
daa
pop
je
stc
push
xchg
push
jge
cltd
mov
push
jbe
mov
xor
sub
cmp
push
inc
clc
pop
xchg
in
rcrl
loopne
pop
jns
test
nop
shlb
data16
fisttps
mov
dec
es
addr16
je
movsb
add
jp
es
mov
iret
fidivl
nop
mov
push
push
push
sbb
and
xchg
loope
push
push
push
hlt
inc
lret
cmpb
inc
sbb
fs
imul
mov
adc
sbb
xchg
aaa
or
mov
lds
add
stos
sub
and
popf
pop
mov
push
inc
push
js
or
dec
mov
vmwrite
int
imul
pop
pop
ret
cmpsb
cli
into
rolb
push
push
pop
cmp
ret
mov
mov
es
sub
and
es
ds
mov
jae
or
dec
je
in
popa
or
imul
clc
sbbl
pop
sub
or
push
inc
cltd
add
jmp
jae
pop
jno
and
pop
dec
pop
inc
cmp
xor
push
adc
pop
ret
repz
sbb
out
cmp
or
ja
sarl
sub
jecxz
xchg
int
ss
mov
ja
sub
mov
push
pop
sti
insl
mov
dec
mov
jg
and
add
imul
push
pop
call
ret
dec
push
lret
inc
stos
out
shlb
sbb
imul
scas
lret
in
popa
dec
popf
cmp
xchg
leave
add
jbe
cmpsb
das
movsb
cwtl
mov
clc
lds
les
or
mov
and
xlat
and
and
stc
mov
mov
or
aam
pop
xor
daa
arpl
loopne
jg
cmc
dec
jmp
pushf
adc
adc
cmp
ret
repnz
repnz
jmp
int3
test
aad
pop
inc
add
test
wbinvd
out
mov
insl
aam
lahf
imul
mov
into
inc
popf
testl
in
pop
and
or
add
sub
das
and
add
std
mov
sbbl
jl
add
jae
push
push
ret
xor
lcall
push
dec
clc
scas
dec
ret
push
mov
jb
loopne
jae
or
mov
mov
add
out
in
inc
xchg
jae
add
jl
push
cmpsl
xchg
xchg
into
lods
dec
imul
and
jmp
cmp
imul
fdivrl
push
jbe
jne
xorl
cmpsb
lahf
jecxz
xchg
incb
ficompl
dec
or
cmpsb
cmc
jg
aad
aaa
adc
push
and
arpl
test
add
sbb
jmp
push
add
outsl
dec
mov
decb
add
punpcklbw
popf
cli
push
in
popf
imulb
adc
adc
jle
lret
das
je
pop
popf
fs
fwait
mov
adc
jns
add
mov
repz
pusha
loopne
mov
and
and
cld
cmp
sub
fnstcw
rorb
hlt
mov
lods
mov
cmc
iret
push
imul
sahf
imul
push
jne
test
push
or
test
mov
hlt
lret
out
sbb
dec
loopne
out
and
and
push
add
xchg
jl
push
fdivrs
loope
pop
xor
xchg
jb
leave
xchg
push
int
das
shll
xor
inc
inc
dec
cmp
jno
or
into
mov
mov
or
pop
movsl
loop
insb
push
test
ds
push
lahf
cwtl
sbbb
inc
subb
sub
mov
popa
ret
leave
inc
shll
mov
aaa
inc
dec
mov
mov
jno
ficoml
add
into
xchg
bound
das
aam
out
pop
test
push
popa
fmull
test
dec
mov
push
std
add
dec
aas
xchg
mov
or
inc
cmpsb
lods
inc
out
mov
mov
mov
push
cmp
and
mov
sub
jl
sbb
push
mov
mov
mov
cmp
and
sub
xor
enter
out
sub
scas
cmp
pop
xlat
mov
mov
xchg
push
and
sbb
dec
test
dec
or
leave
cmp
mov
xchg
mov
inc
leave
rclb
or
das
jb
jl
sub
in
leave
scas
add
jle
sbb
cltd
imul
sub
mov
test
loopne
shl
fisttpl
sub
lret
adc
lret
fucomip
test
adc
mov
mov
aas
out
call
data16
jo
inc
ret
gs
push
xlat
addr16
rcll
sbb
cmc
xchg
push
mov
dec
add
inc
fnstcw
fmuls
pop
aam
cwtl
adc
flds
loope
pop
cwtl
ljmp
xor
nop
lea
xchg
cltd
mov
mov
rcrb
in
ret
std
xor
mov
xchg
inc
cmp
nop
push
decb
inc
fs
mov
sti
adc
leave
jbe
xor
sub
fisttps
cltd
cmp
inc
call
mov
push
mov
stos
scas
fidivl
xchg
xor
add
popl
push
inc
sub
dec
inc
mov
stos
or
cmpsb
imul
pop
lret
in
ret
mov
add
lock
push
pop
sbb
mov
sub
imul
sub
insb
inc
cmp
xor
sbb
pop
fcompl
int
sbb
lcall
adc
and
stos
cli
push
aas
mov
inc
pop
cmpsl
in
gs
aaa
cli
cld
in
bound
iret
cmp
in
lods
xlat
jne
cmp
jp
jmp
sbb
pop
ss
inc
lods
mov
jecxz
sub
jp
lds
push
mov
test
cmpsb
dec
mov
lret
hlt
dec
and
add
push
push
iret
call
cmp
sub
loope
sarl
mov
or
pop
orl
mov
insb
cmp
add
ret
pop
and
or
push
outsl
mov
dec
pop
push
xchg
aaa
inc
ds
out
jecxz
mov
inc
mov
icebp
dec
hlt
xor
negb
cld
adc
cmpsb
sub
imulb
dec
ss
testb
xchg
ret
ss
dec
test
dec
or
imulb
stos
sbb
jl
xor
call
int
mov
mov
mov
lock
popf
fsts
jns
repz
push
dec
mov
adc
push
shl
shrl
lock
jle
sbb
imul
adc
dec
or
jo
jb
test
call
xor
lret
xchg
adc
and
es
aad
int3
ret
mov
in
dec
push
das
movsl
daa
mov
xchg
fnstcw
add
adc
push
test
int
je
or
jg
sub
lahf
dec
in
mov
mov
ljmp
sbb
pop
movsb
movups
xchg
in
fwait
cltd
dec
mov
pop
aaa
divl
or
push
insl
mov
inc
mov
cmp
or
mov
pushf
in
dec
add
test
pop
gs
inc
add
nop
inc
add
dec
jo
loopne
shr
and
pop
xchg
xchg
dec
inc
popf
aas
push
enter
pop
enter
mov
cmc
xchg
jp
dec
push
test
xor
pop
movsb
fbld
inc
pinsrw
lret
loopne
push
repnz
lret
mov
inc
shl
dec
ja
jmp
jp
test
out
sahf
mov
jg
dec
std
mov
jp
shlb
movsb
sub
imul
sbb
sub
adc
sbb
xchg
insb
out
into
repnz
rcll
fists
daa
pusha
inc
sub
popa
adc
sub
rcr
neg
scas
jnp
lahf
xchg
pmulhw
mov
adc
into
sub
lahf
or
push
cmpsl
xchg
ljmp
or
int
cmc
pop
lods
xor
outsb
jp
lds
fstpl
div
cs
dec
in
pop
mov
jg
dec
adcl
push
cltd
push
mov
aas
xor
ret
mov
inc
xor
mov
std
inc
lock
sub
fs
orb
dec
orb
add
dec
inc
push
cmpsl
adc
call
std
lods
and
jns
sbb
mov
cmpsl
mov
imul
mov
adc
cmp
sahf
xorb
outsb
mov
jmp
lret
les
lcall
xorl
mov
insb
lea
es
jl
rclb
ret
mov
loop
jnp
sbb
data16
dec
mov
pop
push
jle
xor
orl
cmc
mov
cltd
pop
push
jmp
ds
cmp
sub
jae
ljmp
sub
in
xchg
dec
push
scas
fisubs
aaa
and
dec
inc
xchg
gs
bound
xor
jno
and
xor
xchg
outsl
ficoml
and
xor
inc
add
lahf
sbb
ss
leave
clc
mov
test
push
in
xchg
sbb
lahf
andb
shll
mov
mov
xor
dec
or
sbb
loope
aad
jge
flds
mov
call
in
test
sbb
mov
pop
lea
mov
xchg
sub
mov
and
leave
xor
aaa
fldenv
ljmp
idivb
testb
ret
fldcw
rcrl
dec
xor
mov
push
shlb
adc
test
pop
mov
aaa
sbbl
cwtl
movsb
push
shrl
mov
dec
cmp
mov
lock
pop
and
ficomps
insl
and
dec
lret
pop
fcomip
mov
mov
mov
xchg
cmp
mov
mov
jae
cltd
dec
cmpsl
test
iret
aaa
out
adc
sbb
cmp
cmp
dec
sub
cmp
pusha
jnp
sub
shl
imul
jg
in
jne
push
sub
scas
loop
and
fstps
xlat
lar
push
sbb
shlb
cmp
push
mov
clc
iret
into
dec
xchg
xchg
fsubrs
dec
sub
popa
push
ret
add
jp
xchg
daa
je
lcall
out
test
cltd
test
mov
pop
cltd
aam
dec
jge
shr
or
imul
call
insl
les
in
orb
std
mov
and
clc
lds
dec
push
xchg
xchg
mov
sub
mov
imul
lock
out
cmpsb
and
scas
inc
push
mov
dec
sub
shlb
das
push
outsb
cwtl
fucomp
or
push
fisubrs
in
or
fs
decl
mov
push
push
xorb
pop
cmp
mov
lea
dec
xlat
je
xor
and
repnz
push
sahf
pop
push
clc
fcmovb
loop
xor
mov
ljmp
lods
adc
ja
jns
test
stc
cmp
add
mulb
push
fs
rolb
mov
inc
xor
aaa
mov
in
xchg
pop
inc
call
fldenv
dec
aad
or
mov
std
cli
xchg
cld
int
aas
pushf
jmp
popa
insb
addl
subl
push
adc
daa
daa
push
jo
data16
lahf
dec
lahf
pop
mov
mov
add
ss
mov
jb
sub
inc
add
jge
lret
jge
shlb
loopne
mov
fdivr
pop
lahf
pop
jns
fwait
sbb
rorl
sti
add
ljmp
inc
adc
sub
push
sbb
nop
and
hlt
loop
pop
lock
push
dec
sbb
loop
inc
push
ljmp
inc
daa
lds
test
jne
repnz
je
mov
divb
mov
mov
mov
ds
arpl
push
add
pop
adc
negb
fcompl
mov
jg
sbbb
mov
adc
dec
sahf
ficompl
fcmovnu
jo
pop
cmp
sub
xchg
repnz
aam
xchg
jbe
gs
inc
pop
int3
into
data16
jnp
xchg
xor
stos
ljmp
cld
es
stos
push
dec
addb
pop
mov
ljmp
in
mov
or
push
mov
enter
popf
mov
lods
es
jns
and
fnsave
lods
outsb
mov
ret
cli
jbe
or
jge
push
gs
test
sbb
aad
inc
dec
test
add
stos
shlb
add
cmp
das
mov
nop
iret
push
std
cli
ficomps
or
add
lea
xchg
aad
fldt
jl
push
push
xchg
mov
loop
insl
mov
dec
mov
add
push
test
pop
scas
mov
mov
or
call
gs
gs
jns
scas
cmc
rcl
mov
cmp
loopne
mov
or
repnz
pop
and
out
jbe
aas
add
push
add
push
sub
dec
sbb
xor
hlt
push
pushf
repz
dec
lock
lea
movsl
mov
jmp
mov
popf
pop
testl
sub
int3
mov
imul
mov
aaa
mov
ds
add
je
dec
leave
mov
fildll
mov
in
std
ljmp
sbb
inc
xchg
pop
push
cmc
js
jg
mov
js
mov
inc
xchg
fdivrl
or
mov
data16
adc
outsl
mov
mov
mov
and
adc
aaa
cmpsl
push
shl
arpl
inc
sub
fsubp
aad
mov
lret
nop
or
jb
adcb
sub
les
mov
lds
or
add
scas
imul
shrb
jmp
lds
jno
ljmp
das
int
or
add
adc
pop
or
out
mov
scas
loop
ss
das
in
in
xchg
push
cmp
or
ljmp
cmpsb
fcoms
jns
xchg
daa
int3
ja
out
pop
test
int3
ds
fcomp
mov
inc
and
push
leave
mov
xchg
jl
popf
bound
jne
inc
into
xor
data16
out
sub
xchg
dec
xor
cmp
inc
push
dec
mov
or
mov
mov
push
push
inc
and
popf
push
dec
xchg
cltd
mov
mov
fwait
jno
repz
adc
adc
inc
jnp,pt
push
or
std
ret
push
lock
das
mov
mov
imul
lahf
rcll
rcll
xchg
fisubrl
daa
and
into
xor
adc
mov
push
mov
in
pusha
sub
insb
or
or
jle
jp
cmp
inc
fimuls
inc
mov
lods
insb
frstor
out
fsubrs
rclb
rorl
aaa
loope
hlt
mov
loope
shlb
pop
xor
inc
or
sub
aas
sahf
xorl
mov
jle
add
sahf
or
sahf
arpl
mov
and
and
or
enter
stos
pop
pop
add
cmp
push
sbb
ljmpw
dec
out
mov
ret
ja
jnp
lods
add
cmp
cli
out
or
divb
cltd
lahf
in
incb
andb
pop
hlt
adc
mov
cltd
adc
mov
and
or
mov
pop
bound
pop
adc
mov
fcmovbe
call
cmpsl
lods
and
popf
mov
jg
outsl
dec
mov
sub
imul
faddl
sbb
pop
mov
mov
dec
or
mov
jo
xchg
pop
cltd
popa
adc
dec
cmp
cwtl
lods
or
negl
adc
fadds
sub
push
loop
push
lret
push
arpl
sbb
leave
sub
xor
incl
xchg
fcoms
push
xor
clc
sub
pop
push
cld
in
pop
xchg
sbb
lock
dec
mov
add
mov
jle
xor
lret
call
push
lea
data16
xor
fmul
fwait
mov
inc
and
dec
cmp
adc
gs
repnz
inc
jle
cld
inc
ds
inc
xor
aaa
cltd
mov
or
outsl
push
jo
repz
enter
daa
mov
inc
pusha
add
stc
dec
xchg
lret
movsl
fsub
jp
repz
mov
mov
mov
std
or
or
and
pop
cmp
and
cmp
test
push
mov
icebp
clc
adc
loop
push
jo
stos
std
lahf
inc
cltd
test
js
mov
or
inc
jns
insb
imul
movb
push
or
icebp
xchg
test
lods
jne
pop
add
xor
shll
int3
push
mov
pop
fcomi
cld
je
mov
inc
pushf
inc
xor
roll
mov
sbb
rdtsc
pop
sub
mov
mov
push
lahf
aas
xchg
mov
inc
pushf
rorl
dec
test
test
and
lret
sahf
inc
cmpb
insl
push
lcall
roll
hlt
mov
push
and
or
pushf
mov
add
xor
insl
inc
push
lahf
xor
mov
jo
and
mov
sbb
jp
push
outsb
add
into
sbb
xor
rep
loope
test
scas
dec
and
xor
xchg
cltd
je
mov
fs
xor
cmc
hlt
lret
cmp
inc
mov
adc
jp
in
lahf
cmp
jl
testb
xor
out
inc
fsts
push
cmp
out
cli
rcpps
jae
push
cwtl
js
arpl
sub
adc
jg
jns
stos
jbe
jnp
mov
sbb
and
js
mov
adc
addl
movsl
jl
fs
lds
xor
cwtl
or
push
rcrl
dec
inc
dec
push
add
imul
xchg
inc
jl
or
xor
aaa
mov
jle
inc
in
pop
add
lret
imul
cmpsl
sti
jmp
cmp
pop
and
xchg
pushf
icebp
xchg
adc
movl
cmp
adc
imul
push
mov
btr
and
out
mov
dec
aam
test
sbb
xchg
lahf
sbb
jg
aam
push
pop
dec
rorb
jns
xlat
sahf
add
in
mov
ret
outsl
inc
and
dec
jno
mov
dec
xchg
idivb
movsb
addr16
ss
push
cmp
mov
in
aam
and
xor
rolb
leave
add
imul
imul
hlt
dec
loopne
cmp
mov
int3
dec
stos
cmp
mov
add
add
rcll
adc
ret
insb
jae
xchg
pop
testl
and
xchg
push
pop
in
adc
lds
pop
jg
outsb
lahf
lcall
imul
pop
daa
stos
mov
push
in
jno
mov
inc
xlat
mov
xchg
sti
sub
into
test
out
xor
jge
loopne
enter
scas
xchg
fistl
mov
mov
outsb
cmp
jb
xchg
add
pop
sbb
pop
daa
mov
xlat
clc
inc
inc
add
shlb
roll
mov
jecxz
mov
xchg
lea
pop
sbb
and
mov
clc
outsb
movsb
iret
jecxz
stc
dec
stos
out
push
add
add
imull
sbb
fiadds
cltd
dec
mov
imul
stos
cmc
sbb
lret
int3
or
lds
mov
cmpsl
int3
insl
pop
add
jbe
movsb
data16
loop
fs
mov
mov
jo
out
jo
fildll
mov
fs
jno
bound
adc
jns
xchg
mov
fisttpl
lret
mov
dec
insl
pop
cmpsb
cmp
sbb
stos
cmp
jp
cmp
push
mov
and
test
outsl
fstpt
mov
push
xor
add
rclb
xchg
sbb
mov
jno
inc
or
lods
popa
sub
jne
mov
into
pop
sbb
jle
cmpsl
aas
xor
jecxz
sub
stos
and
and
cmp
fwait
pusha
and
adc
xor
pop
mov
aas
movsl
jp
xchg
aad
lret
ss
or
pop
xlat
loopne
stos
in
clc
cmp
dec
mov
inc
jecxz
pop
je
push
jae
dec
pop
mov
xchg
fistl
cmp
pop
out
xchg
push
ficoml
das
inc
lods
sub
stc
xchg
test
xchg
insl
clc
lods
sbb
sbb
test
aam
cmc
push
fwait
cmp
lcall
stos
aas
jo
mov
aad
adc
imul
imul
cmp
xor
nop
jnp
or
sub
lds
into
mov
dec
jae,pn
pop
inc
jecxz
ja
popf
adc
dec
insl
dec
cltd
fsubrp
add
and
cmp
ss
loop
xchg
dec
js
fldt
or
movsl
bound
push
aaa
sub
xchg
fidivrs
fcoml
ljmp
jmp
cli
xchg
aam
shlb
dec
test
xchg
icebp
or
leave
data16
jecxz
scas
stc
jmp
sub
mov
and
add
push
pop
fstpt
gs
ret
fld
add
fisttpll
push
cli
or
fistl
popa
outsb
std
mov
and
jns
enter
and
jae
or
jo
mov
or
or
pop
inc
jmp
mov
test
movsl
inc
push
lds
add
leave
or
dec
jmp
iret
pop
add
sbb
shl
sub
mov
cmp
adc
mov
lds
pop
fs
pop
jmp
inc
push
xor
dec
jecxz
or
pushf
mov
and
add
fucom
mov
or
fisubrs
arpl
sub
dec
mov
shrl
aas
shl
daa
dec
fcomp
stos
mov
mov
pop
push
popa
push
fstps
rclb
mov
hlt
aad
mov
ret
push
enter
jp
pop
out
insb
mov
pushf
or
hlt
mov
popf
and
sbbb
inc
cli
sub
test
scas
aas
dec
outsl
sbb
sub
insb
mov
nop
xor
add
shl
dec
mov
pop
pop
and
inc
add
loop
cmc
pop
jl
or
popf
scas
lock
add
push
mov
push
inc
out
cld
aaa
cmc
cmp
clc
mov
xor
enter
and
setb
inc
ret
incl
repz
sbb
gs
cmpsl
inc
inc
aam
fisttps
call
std
push
push
dec
jae
sarb
pusha
cltd
xor
dec
xchg
cwtl
cwtl
jo
vpunpckhqdq
sbb
jle
in
scas
xchg
cmc
xchg
or
test
sbb
or
test
pop
stc
jmp
add
or
jle
adc
enter
adc
subb
mov
leave
sahf
pop
and
repnz
or
fwait
inc
pop
pop
test
sbb
popa
pop
and
icebp
movsb
dec
iret
dec
arpl
xchg
sti
sbb
mov
and
and
jae
cmp
test
or
daa
out
inc
lds
add
mov
or
inc
inc
nop
fcmovnb
mov
cmp
dec
movsb
mulb
sbbb
mov
sti
sub
fs
and
xorb
cmp
sub
and
pop
mov
push
mov
push
jg
sub
inc
bswap
xchg
inc
mov
daa
mov
mov
and
inc
daa
movsb
scas
and
cmp
dec
xorl
lret
pop
fdivrl
push
and
jmp
cmp
push
adc
hlt
sbb
fisttpl
dec
in
jb
setp
shrl
int3
inc
xchg
bound
jecxz
shl
push
inc
sub
icebp
adc
cmp
xor
in
aam
jbe
popa
inc
mov
and
jmp
xchg
xor
jl
orl
leave
in
mov
iret
sar
outsl
mov
out
adc
add
test
jnp
inc
test
push
xor
fcmovbe
mov
push
jnp
jo
push
iret
mov
add
push
pop
xchg
ljmp
ss
ret
mov
mov
pshufw
inc
test
jg
into
lea
out
add
inc
ja
dec
xor
int3
mov
out
outsb
pushf
and
pop
pop
push
sbb
add
imul
pop
cmp
jmp
sarl
push
stos
cmp
xor
and
mov
outsl
or
fdivl
aas
sbb
jg
das
call
imul
mov
repnz
mov
adc
dec
dec
pushf
pop
enter
repnz
mov
loop
push
insb
jae
fldenv
sbb
cwtl
push
dec
add
sahf
xor
sbb
icebp
movsl
sub
pusha
sbb
stos
lds
xchg
enter
and
or
sbb
loop
in
sti
loopne
xor
movsb
push
jmp
nop
pop
frstor
fs
sbb
jnp
out
jmp
dec
fwait
dec
jp
cs
ret
dec
mov
jae
shlb
cmp
or
mov
cwtl
sub
jg
jle
insb
je
mov
inc
jnp
ret
mov
out
jp
cmp
adc
xor
jne
leave
jp
ljmp
jnp
mov
hlt
lahf
and
mov
inc
push
push
rol
jmp
adc
shlb
imul
idivb
ficompl
mov
xor
out
adcl
movsb
je
sub
in
in
aad
push
hlt
and
fdivrs
jmp
arpl
push
sub
pop
clc
mov
incl
nop
outsb
or
fistpl
add
pop
adc
adc
mov
push
repz
xor
pop
sub
cmp
mov
fwait
addl
aas
xor
push
inc
lods
imul
mov
push
mov
mov
or
insl
or
cmpl
xchg
aaa
mov
rcrb
cld
in
std
sub
sub
inc
push
loop
xchg
jno
fildll
outsb
mov
inc
mov
add
pop
xchg
rcrb
std
mov
ds
std
pop
iret
cmpsb
outsl
hlt
inc
mov
out
mov
adc
scas
loop
mov
ljmp
lahf
shrl
rolb
cs
pop
dec
dec
notb
aaa
test
or
jbe
addr16
scas
scas
cmpb
mov
das
stos
mov
std
xchg
pop
cwtl
std
dec
rolb
ret
jne
movsb
stos
push
ret
lds
xchg
and
mov
cmpsb
fsts
xlat
mov
push
popa
js
cltd
cli
pop
adcl
add
jge
add
xor
or
in
adc
aaa
pop
stc
leave
fistps
mov
xchg
and
imul
xor
sbb
adc
mov
and
inc
push
cmc
push
add
lahf
ret
sub
sbb
inc
xor
xor
jle
cmc
sub
inc
cmpsb
rorb
js
out
sub
add
cs
cmp
or
nop
or
out
sahf
into
les
lret
sub
rorb
cwtl
adc
add
pop
rorl
xchg
pop
cmp
ficoms
es
gs
inc
idivb
pushf
xchg
mov
mov
lahf
or
int3
jle
addr16
in
in
cmp
or
xor
iret
stos
jno
mov
cmp
adc
outsl
lahf
dec
lds
scas
repz
mov
and
xchg
arpl
xchg
sbb
pop
xchg
rcl
adcl
negb
fxch
xor
jno
add
mov
sbb
into
gs
cmp
xchg
int
in
pop
mov
adc
pop
dec
hlt
mov
adc
inc
shll
xchg
inc
fildl
pop
in
adc
outsl
or
in
or
sub
adc
sarb
fnsave
push
mov
jmp
fsubl
xor
imul
rol
and
scas
cmp
dec
jecxz
jno,pn
mov
pop
test
rorb
vpackssdw
mov
sub
cmp
pop
and
mov
push
out
sub
out
ds
sub
add
xchg
and
pop
xchg
bound
fcmove
in
jle
sbb
jge
ljmp
mov
dec
pop
fisttpl
fisttpll
sub
sbb
cmp
inc
fidivl
and
and
push
dec
scas
fstpl
je
jns
and
dec
pop
cmp
pop
imul
cld
lahf
sbb
pop
xchg
or
das
enter
jle
xchg
fmuls
adc
fdivl
mov
add
add
mov
cwtl
arpl
inc
dec
loop
cmp
loope
lahf
pop
push
mov
clc
das
cmpl
cmpsb
push
shll
out
jo
add
js
xchg
out
repz
fadds
inc
cmp
scas
pop
cli
addl
xchg
jg
xor
or
scas
ja
mov
or
and
into
negl
ljmp
and
xchg
cmc
dec
xor
mov
jge
mov
and
test
pop
loop
or
out
sub
mov
inc
push
popf
loope
mov
add
jmp
ficomps
notl
push
xor
out
mov
data16
and
push
push
sahf
aam
inc
loopne
aaa
mov
mov
insb
xchg
lea
icebp
inc
mov
sti
mov
loope
out
inc
cmp
xchg
mov
test
add
andl
test
jp
inc
adc
movsb
pusha
popa
jnp
fldpi
leave
pop
add
mov
mov
jae
stos
dec
pop
sub
dec
push
aaa
fsubp
fld1
jl
rol
sbb
fildll
pop
inc
push
mov
dec
cs
push
push
movsb
add
lea
lret
jle
stos
and
pop
and
jmp
xor
sbb
pop
add
push
and
ret
mov
loopne
rcl
daa
js
adc
mov
cmp
mov
in
mov
les
imul
addb
pop
xchg
andb
bound
push
repnz
xchg
stc
into
xchg
notl
adcb
adc
cld
pop
fcom
or
lods
cmpsb
std
xchg
shll
mov
push
adc
xor
sub
andb
jmp
cmp
jbe
out
add
pusha
ljmp
insb
jl
jp
icebp
xchg
sub
lock
cmpb
pop
clc
add
and
lcall
popa
dec
shll
push
inc
loope
pop
in
mov
mov
mov
ja
jmp
add
mov
adc
or
fs
les
rclb
cltd
sbb
call
pop
sti
inc
call
ja
mov
sub
sbb
sahf
push
or
sbb
sbb
fsubrs
dec
dec
out
add
imulb
pop
inc
jnp
or
test
sbb
pop
jno
push
sti
outsb
test
xor
inc
fisttps
mov
fmull
popf
xchg
adcl
dec
cmp
in
iret
pop
lock
lods
jge
pop
xchg
in
mov
int
adc
hlt
push
in
and
fwait
inc
cmpsl
in
cmp
leave
in
andb
dec
adc
and
fisttps
add
mov
jp
in
iret
or
mov
loope
add
hlt
jo
dec
movsb
xor
ds
cmp
jae
jo
loop
mov
insl
jecxz
inc
xchg
gs
pop
scas
inc
mov
xor
call
ret
or
in
insb
add
cmp
jmp
lds
das
mov
sub
scas
cwtl
dec
data16
push
js
lock
scas
add
inc
popa
push
add
pop
add
xor
mov
add
sub
cmpsl
aad
loope
addl
sbb
cmp
jecxz
jge
inc
adc
jl
and
test
mov
lret
and
xor
mov
rclb
cs
stc
inc
mov
ljmp
sub
mov
aam
ret
mov
push
xchg
add
loopne
pop
sbb
xchg
int3
lds
std
jbe
inc
push
lods
sub
mov
pop
xchg
cmove
popf
add
loopne
mov
lods
dec
add
mov
jecxz
call
sbb
in
jl
jno
xlat
inc
in
sbb
popf
mov
adcb
mov
in
in
cmpsb
xor
int
loope
out
loope
ja
shl
sub
mov
imull
mov
mov
inc
lods
in
dec
push
push
cld
roll
fcoms
inc
adc
incl
push
lods
pop
xchg
fdivs
or
outsl
sbb
mov
mov
sbb
jne
pop
mov
push
jmp
pop
pop
cmc
or
int3
jle
into
inc
ficoms
cli
test
dec
fwait
sub
imul
out
pushf
jle
stos
sbb
rcrb
jo
adc
inc
in
stc
sbb
lock
dec
push
push
fs
pop
ljmp
outsb
test
rolb
mov
mov
pushf
std
cld
pop
dec
loop
inc
jmp
mov
mov
repnz
test
jne
es
adc
hlt
cmove
lcall
sti
fcmovnu
dec
push
pusha
xchg
xor
jmp
aas
pop
ds
mov
lods
dec
aaa
mov
push
cmc
aam
adc
dec
and
mov
pusha
out
sbb
adc
push
mov
pop
cld
rclb
mov
inc
push
dec
push
pop
repz
mov
mov
pop
and
adc
lret
lea
jge
mov
fwait
or
jno
sub
pop
mov
pop
sbb
jmp
jbe
xor
sub
sti
inc
adc
loopne
jge
faddl
orl
testb
bound
xchg
stos
mov
add
daa
ficompl
push
fwait
or
xor
jo
xlat
loop
jg
dec
jl
das
loopne
je
aaa
decl
add
stos
je
pop
sub
test
and
push
sub
cmc
stos
insb
mov
add
cmpsl
dec
fisubl
movsb
mov
jg
cwtl
inc
and
pop
repz
fs
mov
test
movsl
data16
inc
movsb
shlb
ds
out
aas
pushf
mov
stc
test
push
fnstcw
std
pop
repnz
imul
or
fistl
popw
inc
sub
sbb
insl
test
sub
orl
xlat
lcall
and
dec
fwait
shrb
xor
xchg
cld
jae
pop
mov
cmp
jge
lds
xor
sbb
int
jae
cli
dec
push
and
inc
popl
mov
pusha
nop
xor
cmp
test
adc
arpl
or
hlt
lcall
xchg
js
pop
gs
dec
stc
pusha
and
and
and
xor
test
sub
ret
adc
mov
mov
pop
nop
fildl
sub
xchg
sbb
mov
frstor
xchg
adc
shlb
or
in
cmp
mov
pop
ljmp
inc
mov
js
js
jge
outsb
test
test
xabort
stos
outsb
pop
into
lods
and
sbb
imul
push
mov
jo
fistps
pop
loop
inc
in
scas
test
mov
push
call
int
leave
inc
mov
inc
sbb
popl
insb
and
add
mov
fisubl
inc
cld
icebp
addb
push
repz
add
popf
dec
jnp
sbb
dec
outsb
pop
rcrl
aaa
mov
leave
cmpb
lods
add
mov
cmp
cltd
inc
mov
sub
into
or
inc
in
add
imul
jae
mov
lcall
aaa
shlb
hlt
mov
std
imul
adc
jecxz
cmp
sbb
adc
cld
aas
cwtl
popa
xchg
js
sub
sbb
lahf
dec
bound
lds
mov
mov
mov
dec
mov
cmp
inc
jno
imul
pop
out
repnz
pop
cwtl
loope
mov
or
mov
lods
xchg
js
dec
sbb
test
mov
nop
mov
inc
adc
les
ret
mov
repnz
mov
cltd
xchg
xchg
cs
push
ret
jp
dec
je
bnd
ficomps
push
or
push
push
scas
add
test
and
inc
cltd
popf
hlt
lock
insb
mov
rcrb
out
or
sub
mov
sbb
adc
fisubrl
push
or
xchg
xchg
fldl
rorb
xchg
or
xlat
xor
repz
fsubl
jge
mov
fstl
fsub
jp
jmp
push
js
fistl
xchg
pop
aad
mov
out
adc
add
aas
iret
out
pop
out
add
push
les
aad
inc
mov
xor
cltd
into
xor
jp
mov
push
jg
jmp
sub
mov
xchg
cmp
pop
sbb
lods
mov
pop
outsl
fistps
pop
pusha
fistpll
js
xchg
clc
orb
scas
mov
movzwl
cmp
or
push
packssdw
aaa
jmp
xchg
add
jle
inc
dec
or
and
addr16
insb
jnp
cli
icebp
test
pop
ret
pop
cmp
jg
nop
repz
dec
lods
xchg
nop
fnstcw
fldz
jge
mov
xchg
xchg
fistpl
js
adc
adc
lret
xorb
cltd
mov
push
push
mov
iret
inc
adc
pop
push
cmpsb
sbb
pop
sbb
ljmp
cmp
test
inc
add
cltd
sub
mov
pop
je
test
imul
call
insb
jns
cmp
mov
sahf
dec
sbb
test
adc
cmp
sbb
dec
test
into
adc
inc
pop
repnz
mov
jl
mov
movsl
xchg
dec
or
cmc
mov
sbb
pushf
test
lret
mov
test
in
push
ss
iret
fisubs
imul
xor
ror
lods
daa
push
xchg
xor
rcr
int
in
or
fbstp
xor
sbb
arpl
ja
rcll
arpl
hlt
xor
push
je
mov
es
mov
pushf
dec
inc
movsl
cli
ficoml
aad
xlat
cs
jne
sarb
ja
push
inc
fisttpll
sub
out
push
dec
nop
pop
xchg
mov
movsl
aad
fadds
jecxz
and
rorb
das
sub
cmpsl
or
bound
repnz
cli
enter
dec
pop
push
popf
imul
xchg
cltd
xor
lock
mov
mul
lret
in
cmp
aaa
sbbl
je
cmpsb
nop
iret
adc
sti
leave
xlat
mov
pusha
jecxz
test
movb
repnz
pop
sbb
sbb
and
xchg
std
jns
out
add
sub
inc
mov
nop
cmpsl
fmull
add
pusha
bound
add
insl
repnz
subb
xor
and
push
mov
mov
sub
and
int
cmp
shlb
and
les
mov
jo
fstl
push
xchg
mov
ds
mov
sub
xor
arpl
push
push
out
rolb
shl
sub
add
int3
cld
jmp
aam
or
out
icebp
cmp
push
ss
sbb
das
std
imul
lret
jl
sub
mov
popf
divb
push
cmp
pop
addr16
dec
push
or
mov
in
pop
pop
mov
mov
sub
mov
leave
sub
stc
cwtl
movsb
imul
lahf
xchg
mov
or
xchg
icebp
and
cmc
cltd
dec
push
divb
int
jmp
xchg
add
out
nop
int
test
or
mov
and
mov
jp
mov
fsts
lcall
insb
stos
pop
push
popa
or
mov
inc
sbb
xor
icebp
data16
loopne
sbb
inc
subb
xor
call
pop
dec
inc
inc
jmp
pusha
xchg
dec
adc
mov
jb
dec
pop
pop
ret
sbb
rep
or
daa
jp
rorl
jle
jo
aaa
test
and
test
int3
push
cmp
orl
mov
fisubrl
push
ficomps
sbbb
dec
loope
sub
movsb
sub
ficompl
xchg
add
ja
cmp
fsub
xchg
dec
jle
or
sub
hlt
or
xchg
xor
dec
popf
pop
sub
jae
mov
call
inc
fdivs
pop
xchg
xchg
mov
fiaddl
repz
rcl
scas
mov
js
scas
pop
gs
xchg
dec
jne
adc
rorl
repz
xchg
add
inc
xchg
mov
pop
repnz
sub
icebp
movl
xchg
insl
jns
clc
xor
jle
in
xchg
cmc
repnz
pop
in
xor
inc
stos
scas
arpl
sbb
add
adc
mov
test
movsl
inc
push
cmp
adcb
fcmovnb
sbb
mov
les
pop
sbb
pop
inc
scas
jge
fwait
out
mov
jl
mov
pop
lret
inc
lods
pop
sub
cmp
mov
fcoms
sub
ja
loope
dec
pop
dec
loop
lcall
out
nop
hlt
mov
inc
xchg
mov
xor
sarl
and
sub
pop
mov
cld
arpl
push
fcmovu
je
lret
xor
mov
fsubrp
pop
xchg
jp
pusha
cmc
sub
inc
popa
mov
pop
push
dec
or
sbb
ret
mov
mov
ficoml
pop
mov
insb
pop
xchg
test
mov
repnz
idivl
clc
mov
push
xor
xlat
mov
jae
xorl
xor
mov
repz
loopne
mov
ljmp
mov
insb
sbb
sbb
mov
push
pop
inc
mov
add
sbb
mov
jmp
insl
repz
adc
add
fs
mov
xchg
les
jbe
adc
sub
jns
mov
in
dec
imul
notl
sbbb
pop
lea
adcl
jp
jmp
rorl
push
sahf
cmp
xor
adc
in
divb
mov
sbb
fdivr
cmp
lea
add
or
add
ja
pop
scas
sub
lods
ljmp
loop
stos
ds
imul
ret
arpl
lret
jae
pop
jecxz
xor
mov
mov
fnstenv
jne
sbb
mov
data16
jnp
jns
mov
and
cmp
subb
xchg
add
mov
mov
sarb
dec
aad
mov
int3
sbb
pop
rorl
repnz
int3
pop
lfence
es
fdivs
sbb
iret
mov
and
jnp
add
mov
push
or
popf
test
lahf
fmul
sub
call
and
push
inc
movsl
clc
pop
lcall
shll
push
jns
jo
test
std
mov
xchg
test
jle
push
and
test
pop
stos
test
sub
jae
adc
mov
xor
add
movsb
mov
loop
outsb
inc
jnp
dec
sbb
xchg
icebp
and
add
pop
push
and
jnp
dec
mov
xor
aas
or
cmc
lods
stos
sub
inc
mov
mov
push
repz
gs
ret
cmpl
mov
hlt
pushf
aas
push
dec
lods
lea
mov
lock
rol
lods
test
int3
repnz
daa
inc
sbb
mov
ja
and
clc
and
aad
imul
push
xchg
jae
jb
das
push
inc
and
arpl
or
and
pop
mov
mov
inc
outsl
cmp
mov
cmp
cmovnp
pop
cld
fistl
cmp
jns
jecxz
mov
pop
xchg
push
lret
mov
les
cmp
pop
cmpsl
dec
push
pop
inc
jno
cmpsb
imul
add
repnz
das
bswap
divl
mov
vorps
mov
sbb
and
dec
ds
dec
adc
pop
mov
jnp
cmp
mov
push
or
jo
jg
outsl
dec
loop
or
xor
inc
jb
daa
push
sbb
pushf
paddb
and
sub
xlat
add
inc
add
mov
adc
and
adc
outsl
or
push
cmpsb
cmc
sbb
sub
flds
daa
cmp
or
jge
adc
fnstsw
test
add
inc
mov
orl
mov
and
sub
int3
jne
and
aas
push
loopne
movsl
enter
in
cwtl
cltd
decb
dec
mov
mov
push
insb
push
sub
pop
jns
subl
fisubrs
in
outsl
push
test
addl
test
insb
enter
dec
sbb
mov
mov
dec
ret
mov
movsl
pop
fcomps
dec
or
fs
inc
jnp
data16
or
testl
into
jb
or
in
and
mov
out
sbb
pop
in
sbb
sub
and
stos
cmc
jns
aad
insl
aad
xchg
and
std
in
sub
mov
test
lret
outsb
mov
cld
fcmovb
addb
repz
cmp
insl
mov
xchg
inc
lcall
adc
ds
xor
test
call
scas
inc
dec
pop
outsl
imul
and
test
mov
sarb
lods
adc
cmpsl
and
test
lds
dec
repz
sub
xchg
and
xchg
adc
dec
jno
pop
or
mov
into
cwtl
outsb
les
xchg
cmc
sub
cli
icebp
push
popa
mov
test
mov
scas
ss
push
jbe
mov
xchg
ss
adc
mov
push
ror
inc
call
fwait
cmc
fsubp
mov
push
mov
mov
lock
icebp
movsl
les
inc
stc
jecxz
push
or
pop
sub
mov
jne
fisttpl
in
aam
push
adc
dec
fsts
or
test
push
add
fisubs
addr16
xchg
lret
and
lret
fcmovbe
fistps
es
push
jnp
imul
flds
and
xchg
pop
pop
ficomps
and
ret
xor
decb
push
or
mov
cltd
and
pop
adc
out
xor
aad
movsb
inc
sbb
jno
mov
dec
mov
xacquire
push
call
mov
out
push
subl
cmpsl
mov
sub
mov
loop
pusha
dec
movsl
add
pop
mov
xchg
cs
and
js
js
fistpll
or
mov
mov
into
xchg
inc
jnp,pt
adc
lea
pop
pop
add
dec
jbe
jg
mov
jecxz
mov
popa
outsb
mov
test
push
add
dec
cmp
sbb
inc
divl
xchg
or
sbb
jmp
cmp
xlat
cmp
cmp
test
or
adc
push
cmpsb
sub
jae
iret
cmp
push
mov
addr16
sbb
push
testb
in
jl
pop
jmp
push
pop
fistpl
or
push
pop
scas
pop
jne
fisubrl
mov
sub
or
fsubs
mov
mov
aaa
rorl
and
add
and
xor
in
into
mov
jecxz
dec
mov
inc
lods
sub
imul
xor
mov
outsb
es
and
scas
pushf
mov
pop
xchg
int
lcall
add
xchg
jl
mov
xchg
dec
adc
xlat
stos
cmpsb
fistps
nop
call
push
jp,pn
add
mov
pusha
or
adc
sbb
notb
cltd
fdiv
mov
adc
xor
je
out
ja
adc
insl
sbb
push
mov
cmp
rorl
je
aam
cmp
mov
outsl
inc
dec
jne
insl
sbb
cltd
mov
cli
dec
out
adc
sar
rolb
addl
into
cmp
pop
sub
lea
orl
dec
and
xchg
bound
mov
repnz
adc
adc
inc
scas
addr16
inc
into
sbb
xor
jnp
loope
add
out
inc
dec
das
pushf
sub
pop
lea
inc
cmc
mov
xor
repnz
outsl
push
pop
mov
imul
stos
scas
add
mov
repz
ds
ret
xlat
lret
xchg
repz
xor
add
lds
dec
rcl
test
repnz
jns
push
and
jg
pop
test
inc
in
cmp
repnz
mov
cmpsl
pop
push
push
sub
fisubrs
adcb
lods
fwait
jg
jb
push
lret
push
out
in
fiaddl
xchg
and
jbe
jle
shlb
gs
add
rclb
daa
pop
aaa
mov
stos
mov
rorb
addl
sahf
mov
inc
push
leave
cmp
and
or
xchg
mov
dec
rcll
or
inc
add
int
mov
or
cmpsl
imul
inc
je
adc
pop
mov
adc
pop
repnz
sub
pop
das
int3
adc
dec
inc
jnp
add
loopne
push
xchg
mov
lret
lret
ds
pop
rorl
xchg
inc
adc
xchg
popf
sub
pmullw
mov
mull
jbe
push
add
dec
push
sub
mov
ret
outsl
add
push
stc
mov
cmp
mov
push
pop
ljmp
fmull
pop
sbb
lock
mov
inc
xchg
mov
xor
pop
pop
cltd
ljmp
ja
adc
in
repnz
jg
mov
jne
lret
mov
inc
mov
movsb
pop
fiaddl
ljmp
mov
xor
lods
cmp
scas
hlt
dec
gs
insb
das
xor
sub
int3
sbb
nop
adc
imul
fdivrs
out
and
adc
scas
popf
sti
lock
mov
sbb
cmpsl
stos
shrl
ja
and
mov
sbb
adc
cld
dec
adc
pop
push
insl
mov
mov
in
add
shll
es
adc
or
ss
jg
and
dec
test
outsb
add
loopne
ss
cmp
sub
ja
jecxz
push
dec
and
mov
sbb
mov
dec
cmp
aaa
leave
pop
xor
in
dec
lods
into
jbe
lods
rol
push
sbb
arpl
dec
inc
and
pop
fcoms
enter
aam
and
push
sub
in
addl
pop
xor
outsl
xor
aas
jne
mov
in
es
adc
in
sub
insb
inc
enter
jmp
imul
test
mov
adcb
sub
pop
inc
xchg
sbb
xchg
outsb
inc
jo
pop
add
test
jmp
dec
imul
mov
enter
into
pop
bound
nop
xchg
pop
dec
dec
stos
loop
outsl
mov
das
mov
mov
sti
iret
xor
mov
mov
dec
xor
inc
mov
mov
rorb
add
loope
mov
xchg
shlb
adc
jp
loope
xchg
lret
stos
xchg
cli
xchg
push
sbb
mov
xlat
pop
cmp
mov
paddsb
push
std
iret
aad
sarl
inc
call
sub
call
dec
push
pop
bound
push
dec
jle
adc
mov
cmpsl
xchg
andb
repz
mov
pusha
adc
in
or
mov
call
shll
pusha
dec
xor
xor
cmp
outsl
stos
pop
mov
test
jb
ret
loop
mov
sub
fwait
dec
cmc
adc
push
hlt
ss
test
mov
mov
in
inc
les
mov
movntps
xor
cmp
mull
scas
adc
les
sbb
or
scas
push
sub
fldcw
imul
pop
pop
xor
outsb
lea
bnd
aad
in
das
push
xor
or
shll
adc
xor
dec
and
mov
add
pop
movl
popa
iret
dec
xchg
mov
and
xlat
inc
out
out
cmp
cmp
repz
and
test
push
daa
lock
dec
xchg
cmc
mov
pop
call
lods
ret
mov
fistl
dec
push
sbb
mov
aaa
pop
xchg
or
icebp
jbe
adc
push
add
mov
data16
cmp
vmaxsd
push
mov
loopne
out
rorb
push
or
or
and
stos
das
pop
push
mov
jp
insl
jmp
scas
arpl
mov
icebp
fwait
mov
jecxz
fidivrl
stos
xchg
mov
cmp
mov
cs
ja
ss
jns
mov
push
outsl
out
jns
jo
mov
neg
sbb
sbbb
lds
inc
aas
adc
repz
inc
fwait
jbe
ds
movsl
pop
lds
int
pop
sub
hlt
push
sarb
stos
cmp
gs
fnstenv
fcomi
xor
sti
outsb
aam
push
repnz
xchg
push
adc
lret
ret
movsl
fcmove
dec
mov
push
fiaddl
movsl
out
inc
pusha
mov
xor
mov
xor
dec
or
add
js
out
scas
cld
inc
subl
or
insb
arpl
jne
mov
xorl
fwait
insl
push
sub
nop
jnp
push
jmp
dec
int
and
push
sahf
enter
mov
bound
fstl
movsl
les
ds
adc
test
hlt
clc
push
enter
jne
out
in
xchg
orl
jo
mov
in
arpl
loopne
push
sar
jle
sbb
out
repnz
fnstcw
lea
xor
xchg
lds
dec
or
push
popf
in
lock
pop
das
fidivrl
add
in
mov
push
bound
outsl
inc
pandn
or
rcrl
fstpt
fidivs
adc
andl
dec
cmpsl
xchg
push
in
movsb
mov
sbb
mov
sti
pop
aaa
pushf
out
enter
cmc
pop
inc
sub
ret
lcall
sbb
pop
sub
roll
pushf
sbb
push
push
fcoml
jl
into
adc
ret
sub
pusha
cmp
inc
or
int
jl
ja
enter
sbb
data16
and
or
ljmp
loop
pop
jns
jl
sbb
inc
xchg
add
fisttps
daa
ds
rcrl
pop
into
fstl
loopne
jb
pop
mov
pop
lds
push
mov
mov
cmp
lds
std
jecxz
clc
and
lock
sti
sbb
push
xor
idivb
lcall
jge
stos
pop
daa
out
mov
mov
stos
out
stos
ljmp
hlt
fwait
and
adc
aaa
pop
or
cs
inc
push
shlb
push
je
add
test
or
cmp
nop
jo
cmp
jecxz
xchg
sbb
mov
lock
mov
loope
adc
cmpsb
sbb
sbb
jb
and
lds
aad
mov
push
imul
test
or
mov
pusha
call
nop
pushf
popa
arpl
arpl
je
cmp
push
das
jecxz
sbb
inc
fbld
popa
insl
cmp
cld
pop
mov
out
enter
sahf
scas
into
std
adc
adc
xor
push
xor
sbbw
cltd
dec
sub
or
out
xor
es
or
jg
hlt
adc
int3
ret
rorb
cltd
mov
mov
icebp
add
xor
xchg
ficomps
sbb
cwtl
js
jbe
sti
pop
rcrb
jge
test
add
dec
pop
pop
jns
outsb
out
or
xlat
xor
push
hlt
into
and
mov
dec
neg
cmpsl
or
movsl
clc
push
stc
testl
jp
cmp
inc
mov
pop
dec
js
inc
imul
add
and
test
gs
lods
cmp
test
insl
fsubr
adc
insb
xor
aam
mov
in
pop
cli
int
sub
pop
push
xor
dec
icebp
cmp
push
or
cmp
adc
ret
loop
fdivp
mov
pop
mov
aad
sbb
cmc
pop
out
dec
pop
xchg
pushf
push
adc
lret
icebp
inc
cmp
sub
sahf
cld
in
adc
add
add
mov
push
pushl
xor
cmc
subb
pop
dec
or
or
push
es
fadds
pop
aad
in
xchg
aas
or
popf
shl
add
pop
in
insl
lods
mov
mov
and
sub
mov
xor
add
xchg
pop
shl
mov
lea
dec
mov
iret
jmp
pavgw
sub
xchg
cmc
scas
clc
inc
lea
inc
fwait
out
popf
in
adc
or
movsb
loop
ficoml
dec
mov
in
js
cwtl
pop
shrl
sub
xor
enter
sti
shll
pusha
mov
add
jbe
cwtl
add
push
xchg
pop
lock
subl
daa
inc
dec
inc
test
fisubrl
clc
sub
pop
out
je
dec
cwtl
inc
push
mov
or
repz
inc
andl
enter
mov
sub
cmp
arpl
test
push
in
lods
insl
scas
push
pop
cld
mov
fisubrs
pop
inc
xlat
fs
mov
stos
jl
adc
hlt
in
cwtl
popa
mov
fcomip
repz
cmp
repz
insl
mov
je
xorl
sub
pushf
push
mov
xchg
xor
mov
mov
jno
mov
ja
rsqrtps
scas
fcomps
into
fcoml
sti
mov
lcall
cmp
sub
test
mov
iret
inc
dec
mov
or
loop
jbe
outsl
xchg
jp
mov
pop
jbe
imul
js
fdivrs
xlat
cmp
daa
inc
daa
sbb
scas
mov
icebp
sub
push
jge
dec
fsubl
cmp
mov
xchg
mov
mov
dec
jno
xchg
loopne
lret
inc
fs
addb
clc
sub
push
or
aad
outsl
inc
push
dec
imul
notb
mov
push
push
or
mov
out
xchg
xchg
adc
pushf
xor
xchg
into
sti
pop
jmp
fimull
cmp
in
cs
sti
outsb
inc
mov
cwtl
mov
xor
clc
test
sbb
fstps
cmc
in
outsl
imul
sbb
enter
jns
pop
lods
mov
jno
sahf
xor
les
popa
jle
jge
push
pushf
or
sub
sub
push
loop
or
popa
adc
cmp
add
loope
loopne
xor
or
insl
add
cmc
add
cmp
in
adcl
mov
sti
loop
xor
xor
jge
pop
jecxz
mov
sbb
adc
xchg
sbb
xor
and
repnz
mov
sub
mov
aas
std
les
ss
push
jns
pop
and
iret
jle
in
mov
inc
js
in
test
cmp
mov
fidivrs
dec
test
adc
shlb
pop
pop
ljmp
ficoms
ja
arpl
subl
jns
arpl
movsl
pop
test
ds
mov
addb
xchg
test
sub
dec
cmc
outsb
dec
ss
scas
xor
sbb
or
in
sub
cmpsl
dec
mov
pop
ja
insb
shr
jb
out
loope
pushf
cli
jg
and
sbb
push
idivl
hlt
xchg
xor
push
or
in
iret
and
jp
int3
rolb
push
cmp
loop
push
cld
jne
or
lea
lret
push
and
mov
clc
aas
sub
sbb
scas
and
test
jecxz
call
cmp
cmp
cmp
or
push
dec
jbe
cmp
ficompl
out
je
pop
cwtl
mov
adc
adcl
cwtl
jne
out
nop
mov
mov
jns
lret
fwait
or
jns
xchg
out
pusha
aaa
xchg
jne
ficomps
int
lds
inc
aas
rcrb
outsl
jle
jbe
jmp
scas
mov
fsubrl
int3
outsl
inc
xchg
mov
jmp
call
aaa
and
jno
shr
movsl
push
push
cltd
push
out
icebp
and
dec
inc
cmp
push
imul
push
jmp
jge
jle
jg
pushf
movsl
flds
imul
xchg
and
gs
mov
cmp
mov
daa
mov
mov
push
fsubl
jg
xchg
jno
dec
loope
andb
test
movsl
xchg
in
xchg
fdiv
mov
and
into
adc
add
xchg
out
lea
int3
mov
sar
mov
aas
aad
enter
mov
cmpsl
mov
int3
call
and
imul
outsl
imul
xor
push
xchg
inc
in
es
jmp
inc
inc
sbb
pop
push
fsts
dec
inc
aaa
cmpsl
and
in
pop
leave
xchg
or
or
push
jecxz
daa
mov
stos
ret
mov
push
pop
lods
adc
dec
mov
aad
daa
js
add
test
and
sub
jle
inc
loopne
out
inc
sbb
faddp
lods
leave
in
jb
test
xor
lds
pop
or
rcl
test
cmpl
inc
icebp
call
jge
icebp
fsubs
mov
int
daa
sub
mov
lds
enter
push
scas
fidivrl
jmp
unpcklps
cmp
nop
xchg
test
les
popf
sub
inc
xor
xor
xor
xchg
ds
lahf
lcall
mov
cs
popf
jle
std
xchg
ds
inc
int3
orb
cs
fnstenv
mov
xor
sub
xor
mov
sbb
mov
or
in
mov
and
rcrl
mov
rcrl
xchg
xchg
inc
ds
imul
cmp
cltd
rorl
lret
sti
sub
cmpsb
cli
jb
orl
add
test
sbb
fcoms
jns
push
mov
sahf
cmp
mov
xchg
sbb
xchg
inc
xchg
popf
push
insl
mov
mov
mov
aad
add
dec
jle
mov
and
cs
dec
into
mov
out
jge
pop
push
inc
or
and
xor
xor
fsts
popa
xchg
cmp
cs
icebp
mov
subl
call
and
sub
cmp
idivl
push
cltd
pushf
pushf
and
pop
adc
fiadds
aam
lret
pop
xor
push
fldenv
mov
and
sbb
je
testb
push
push
push
jae
jo
dec
in
loopne
push
cmp
sbb
add
aaa
xchg
push
ud0
fwait
or
xor
pop
mov
mov
xor
dec
lea
sahf
test
adc
movsl
lock
or
mov
jg
dec
les
cmp
inc
xchg
mov
inc
mov
loope
push
add
adc
movaps
xchg
in
xor
xchg
pop
push
inc
int
pop
pop
jle
xchg
jmp
mov
aad
popl
lds
scas
and
mov
pop
shll
ror
aam
inc
cltd
dec
call
in
xor
subb
in
in
pop
sub
jecxz
aam
sub
xor
sti
mov
cmpsl
flds
xchg
aam
cmp
inc
mov
dec
xchg
mov
xor
js
test
lcall
icebp
movsl
daa
push
cmpsb
dec
cwtl
add
xor
mov
lcall
test
or
push
mov
movsl
cmp
in
in
daa
mov
xchg
ficoms
or
cmp
test
loopne
dec
mull
jnp
sbb
in
clc
push
jl
mov
cmp
das
jge
imul
push
xchg
cmp
movsb
clc
jp
enter
mov
daa
daa
test
push
mov
iret
sbbl
mov
jle
add
fs
mov
adc
jle
je
fcomps
sbb
xchg
ss
jmp
push
inc
and
into
divb
sub
scas
out
mov
add
pop
pop
and
scas
test
xor
sub
dec
mov
mov
call
dec
outsb
push
sbb
gs
ds
xlat
fisubrl
sub
rcrl
in
bound
mov
cwtl
pop
push
in
xor
add
scas
cmpsl
inc
clc
dec
cmp
xor
sbb
stos
adc
sbb
dec
jne
sbb
and
hlt
movsl
jg
dec
add
sub
push
hlt
jecxz
out
js
loopne
std
mov
movsl
fcompl
hlt
in
jb
sbb
fimuls
or
in
xchg
adc
push
cmpsl
xchg
addb
in
xchg
push
or
mov
roll
fmull
das
dec
rorb
mov
xchg
div
jmp
cmp
movsb
push
push
jo
nop
js
dec
icebp
mov
cmp
rcr
stos
movsb
bnd
add
inc
iret
pop
xchg
jb
dec
repz
pushfw
int
in
xchg
pop
gs
pop
mov
shl
mov
lods
dec
jns
fiaddl
rcll
push
jne
out
jl
mov
inc
test
push
std
xor
add
mov
push
fstps
sub
repz
movsl
sub
jb
mov
stos
test
test
fisubs
pop
cwtl
and
xchg
shlb
push
loope
sbb
or
mov
mov
shlb
movsl
leave
cmpsl
and
mov
push
jnp
mov
test
lock
or
dec
popf
jge
or
xor
add
xchg
sub
xchg
jg
mov
xor
jmp
orb
scas
sbb
fsubrs
enter
sub
xor
or
pusha
jmp
imul
and
rorl
test
imull
shlb
insl
jmp
cmp
scas
mov
test
jno
xor
adc
test
mov
inc
xchg
cmpsb
push
bound
das
loop
dec
imul
das
hlt
into
mov
repz
inc
push
push
in
pop
lret
dec
lret
js
lock
mov
dec
pop
cmp
pop
aam
push
outsb
pop
sbb
cmp
mov
imul
clc
imul
imull
mov
or
rclb
jmp
nop
sbb
dec
arpl
cmp
test
mov
sub
test
xor
mov
jle
mov
inc
xchg
fimuls
jle
stc
dec
push
insl
xor
cmp
push
and
cmp
test
inc
xchg
dec
lcall
js
nop
adc
scas
inc
into
stc
mov
pop
cltd
pop
pop
mull
add
sub
pop
enter
xchg
xor
mov
mov
cmpsl
add
jecxz
jbe
xchg
xor
or
inc
mov
inc
xor
xchg
mov
in
es
mov
adc
lret
and
add
fwait
stos
mov
clc
aad
and
dec
fsub
jae
lods
jge
rorb
push
push
and
repz
cmp
stos
nop
dec
cltd
cmp
mov
loop
mov
inc
dec
call
or
rcrl
jb
sub
pop
lods
and
cmp
xchg
divl
ja
jns
xchg
rcl
push
test
cmp
into
lahf
xchg
leave
repz
cmp
push
inc
lock
in
mov
or
mov
or
pop
pop
inc
inc
inc
or
xchg
je
leave
out
test
mov
add
inc
push
sbb
lret
mov
xor
fldcw
cs
mov
push
imul
mov
pop
icebp
add
inc
xor
add
loope
sub
insl
xlat
sub
cmpsb
cmp
enter
mov
or
out
add
mov
orb
jle
adc
inc
gs
dec
xor
pop
and
das
mov
movsl
dec
mov
inc
mov
and
mov
adc
sbb
add
mov
pop
mov
ret
push
std
jmp
xchg
movsb
leave
popf
pop
jg
jg
daa
add
mov
add
sub
inc
xchg
leave
mov
push
bound
rclb
cltd
out
sbb
scas
lea
cmp
je
movsl
jns
mov
jo
xor
rcll
xchg
push
xchg
or
icebp
fiadds
repz
mov
andl
mov
shlb
cmp
xlat
add
xorb
xlat
ror
lcall
dec
xchg
xchg
sbb
or
or
cli
stos
xorl
pop
and
das
pop
add
cmp
sub
outsl
sub
stos
mov
adc
rcll
lds
bound
call
cltd
jle
inc
aaa
addr16
sarl
outsb
mov
jne
add
orl
mov
pop
mov
lea
ja
ret
cmc
xor
dec
lea
pop
xor
sbb
jle
xchg
outsl
out
adc
mov
xchg
sub
mov
imul
dec
aaa
jg
jg
aas
rcr
fbld
out
rol
adc
outsb
outsl
in
mov
shrl
dec
pop
xchg
pop
out
adc
push
pop
sbb
in
push
or
ret
mov
mov
cld
fidivs
mov
pop
jle
iret
dec
adc
sbb
sahf
mov
leave
xchg
sbbl
mov
dec
jns
cld
inc
sbb
cmp
xchg
insl
stos
and
out
dec
cmp
jnp
xor
adc
push
das
arpl
mov
popa
mov
or
dec
xorb
jae
pop
inc
icebp
or
inc
int
adc
nop
insb
mov
or
lcall
adcl
scas
mul
pop
ss
stc
repz
and
sub
or
cmp
inc
int3
popa
mov
pop
mov
jle
add
sub
push
mov
popa
mov
orb
jmp
xchg
dec
daa
in
and
and
sub
test
lahf
int
fbstp
arpl
rcl
sbb
jo
mov
inc
sub
or
lods
mov
daa
loope
fbld
jge
pushf
xor
lea
xor
fdivl
and
dec
lods
sub
hlt
jnp
ret
push
test
xor
dec
ss
mov
stos
ror
ficomps
aas
movsl
stos
cmp
clc
adc
or
push
stc
imul
je
push
repnz
daa
jp
test
mov
scas
rcl
stos
cltd
adc
xchg
jns
aaa
das
mov
sbb
inc
adc
insl
icebp
fwait
lcall
adc
cmc
mov
dec
xor
ja
clc
das
mov
rclb
xchg
pushf
dec
jns
mov
push
push
add
bound
je
call
dec
test
faddl
adc
mov
lods
stos
lahf
out
aad
adc
sub
inc
fs
xchg
or
jns
dec
sub
xor
fsubrs
add
scas
arpl
mov
sahf
ljmp
sbb
lds
pop
sbb
inc
jo
and
cmpsl
lret
fldenv
mov
mov
repz
mov
push
lcall
pop
push
sbb
mov
cmp
cltd
dec
mov
pop
fadds
daa
not
cmp
ljmp
sbb
mov
or
jae
lea
xchg
loope
add
mov
outsb
call
shrb
and
pop
rolb
rorb
bound
and
adc
dec
sbb
xchg
mov
mov
pop
lods
ja
fmull
int3
cmc
sbb
lods
loop
or
sub
mov
mov
mov
adc
mov
in
daa
sbb
cmp
add
ljmp
clc
xor
xchg
and
add
into
cld
cmc
adc
cmpsl
pop
add
ja
mov
fcmovb
cmp
fucomp
dec
dec
repz
jae
movsl
jne
int3
aad
and
jmp
dec
xchg
cmc
pushw
xor
push
fsubl
repz
lcall
ja
in
ret
mov
sub
fs
inc
xchg
pop
adc
and
dec
inc
mov
data16
jl
pusha
sbb
pop
xchg
sbb
or
pop
pop
mov
arpl
jg
loop
or
sbb
jbe
movsl
out
mov
fidivrl
cvtpi2ps
mov
inc
mov
adc
rcll
lock
inc
sub
xchg
add
mov
jge
in
cmp
into
fisubrl
int3
gs
je
test
lods
sbb
imul
xor
scas
fisubs
cld
or
fstps
inc
adc
pop
sub
test
sub
test
lods
and
sbb
mov
xchg
sbb
mov
jge
add
or
in
aaa
jl
aam
gs
movsb
idivl
addr16
push
das
mov
mov
xor
leave
cmpsb
sahf
out
fdivs
movsl
notl
mov
cmp
lret
repnz
nop
lods
shrl
cmc
mov
dec
inc
mov
sbb
sbb
jo
mov
push
mov
out
add
add
inc
mov
mov
cmp
jo
lret
arpl
xchg
test
insl
icebp
gs
es
jmp
aam
jb
push
mov
aad
add
test
dec
xchg
and
push
mov
mov
movsl
or
pop
into
hlt
and
decb
and
sarl
cmp
push
jmp
sahf
xor
jae
xchg
mov
mov
dec
sbb
push
shr
loop
xchg
pushf
jg
stos
dec
sahf
jns
in
call
insl
and
lret
xlat
out
loope
xchg
cmp
mov
cli
adc
jp
les
mov
adc
scas
movzbl
inc
ret
mov
mov
sub
outsb
into
sahf
xor
arpl
clc
cltd
stos
inc
stos
cs
jecxz
jo
jg
cmp
add
hlt
lcall
sahf
push
mov
jo
lcall
cmp
mov
xor
pop
dec
fistpll
push
and
xchg
mov
adc
add
mov
jb
icebp
movsl
fisubl
inc
mov
add
rorl
add
stc
mov
xor
jp
dec
inc
sbb
xchg
rcrb
adc
push
lds
movsl
das
push
add
outsb
mov
push
sub
fcmovbe
je
push
jne
jo
mov
repz
dec
imul
jae
jge
jb
lods
mov
push
js
xor
rcl
pop
mov
add
dec
loopne
or
mov
stc
out
xorl
or
mov
inc
cwtl
es
cs
or
and
sbb
add
pop
cmp
inc
mov
shrl
xchg
add
pop
daa
add
xchg
or
into
in
stos
iret
xchg
fdivs
cmp
pop
imul
popa
lock
sub
sahf
std
adc
jmp
sub
pop
inc
jp
jle
sbb
fisubrs
int3
push
in
xchg
xor
dec
lock
fbld
sti
aam
mov
add
mov
bound
mov
faddl
push
lock
pop
daa
cli
pop
sub
lcall
or
or
repnz
sbb
add
daa
mov
das
out
ret
out
into
sub
es
inc
mov
xor
arpl
movsl
leave
pop
and
scas
push
add
add
dec
jnp
dec
mov
xor
iret
cmp
sahf
push
and
or
sarb
leave
jmp
pop
or
push
mov
mov
pusha
xchg
mov
push
dec
jmp
pop
push
mov
xchg
scas
in
dec
pop
jbe
cmp
andl
popf
mov
dec
decb
sahf
sub
loopne
dec
shrl
or
lcall
inc
pop
dec
loop
insb
rcll
push
and
mov
in
dec
lods
outsb
sub
cmp
cmp
dec
lret
imul
imull
inc
aas
or
add
dec
and
gs
cmpsl
test
inc
mov
xchg
jl
ss
push
push
mov
sarb
add
lahf
add
sub
and
nop
outsb
sbb
lahf
adc
mov
je
sti
icebp
pop
lods
xchg
sub
fists
mov
xlat
adc
in
pusha
mov
fbstp
mov
ljmp
mov
inc
icebp
pop
lret
lods
jno
pusha
aam
dec
in
mov
add
pop
dec
aam
push
loop
mov
cmp
outsb
out
test
icebp
push
push
lock
ss
ds
pop
shl
aas
cmp
shl
fxch
jecxz
inc
enter
mov
addr16
shlb
insb
xor
and
pusha
es
lcall
xchg
sbb
adc
mov
movsb
ret
lds
cmp
dec
inc
sub
jmp
inc
xchg
pop
push
repnz
cmp
fwait
cmpsb
or
lods
iret
test
pop
mov
push
sub
mov
mov
gs
pushf
cmpsl
ljmp
mov
hlt
in
jbe
out
jl
out
fnstsw
out
push
imul
imul
fbstp
and
out
andb
inc
pop
fs
sub
stc
xchg
jg
addl
cmpsl
es
mov
stos
in
xchg
loope
fbld
dec
fwait
sbb
enter
fbld
mov
imul
mov
mov
sub
out
rorb
in
sbb
rep
mov
and
inc
aaa
cwtl
hlt
aam
mov
dec
mov
leave
test
jp
dec
dec
cs
or
lock
insb
sbb
xor
popf
sub
faddl
jns
cmp
outsl
jne
lahf
push
outsl
pop
inc
sarb
jae
pop
movsb
ljmp
xor
pop
lods
add
xlat
push
imul
notb
gs
movsb
jbe
ss
or
xchg
ja
sub
mov
das
add
test
mov
aaa
ja
in
mov
fld
push
xchg
loope
or
lods
sub
jg
je
xchg
bound
sub
pop
dec
ds
sub
enter
jle
xor
out
sbb
mov
rorl
mov
ret
leave
sbb
shll
xor
and
jnp
push
cmpsl
shrl
les
pop
int3
out
stos
add
sbb
and
test
out
out
movsl
les
sub
or
dec
call
add
pop
mov
lock
aaa
call
push
cmpl
mov
or
jb
jno
outsb
lcall
xor
mov
lret
mov
rclb
and
in
clc
cld
mov
push
push
repnz
cmpsb
jmp
jbe
inc
pop
aam
dec
cmpsb
fsubl
xchg
js
mov
push
inc
cwtl
rcrl
stos
rorl
inc
push
dec
lahf
inc
push
je
mov
call
out
cmp
jb
lock
cmp
dec
xor
mov
sbb
fwait
ret
dec
test
ss
mov
mov
jae
imul
insl
adc
lods
dec
xchg
sti
repz
dec
inc
mov
in
popf
fxtract
rcll
aam
sub
and
jno
pop
bound
sub
jmp
imul
test
movsl
outsb
stos
cmc
sbb
scas
in
lea
jecxz
jecxz
pop
stc
divl
fldcw
fnsave
test
adc
mov
sbb
cld
lds
popf
cmp
mov
shlb
imul
add
xor
in
sbb
movsb
or
jg
inc
es
dec
cs
and
aaa
xchg
add
cwtl
mov
mov
xor
push
jg
sarl
and
xchg
cmpsb
mov
jae
shrl
incb
movsb
cmp
jae
pushf
rorb
mov
stos
sbbb
popa
add
add
sub
jnp
mov
mov
push
mov
push
or
aam
stc
in
shrl
das
arpl
push
jno
jmp
pop
cwtl
into
or
xor
cmp
adc
jnp
fisubrl
imulb
das
sub
and
or
stos
xchg
jae
pop
icebp
jb
cmpsb
sub
shrb
outsl
aam
push
lds
shlb
cld
imul
cmp
daa
ja
mov
loopne
push
cmovl
ficomps
dec
fisubrl
aaa
mov
mov
flds
cld
test
xor
push
xchg
push
and
inc
sbb
cmp
mov
push
cs
int
xor
mov
or
imul
loope
cld
mov
insl
push
movsb
mov
data16
jp
sbb
leave
faddl
rclb
dec
imul
sub
fwait
lret
les
pop
ds
roll
inc
scas
mov
adc
mov
sbb
sbb
xchg
or
adc
mov
clc
inc
dec
sbb
aam
fstpl
pop
adc
cmp
dec
sub
xor
ret
dec
ficomps
and
call
xchg
sub
jae
out
cltd
xor
and
into
cmc
push
in
sub
scas
mov
stos
insl
or
push
sub
jl
dec
push
std
data16
pop
repnz
cmp
sub
or
adc
popa
add
jbe
fucomp
fbstp
mov
fs
jno
fnstsw
inc
push
cltd
inc
js
and
popf
mov
lds
sub
out
push
inc
sbb
or
test
sbb
daa
lods
test
pop
subl
imul
jnp
pop
sub
lcall
call
adc
out
add
testb
jno
pop
aad
dec
xor
movsl
psrlw
mov
popa
les
xor
sbb
cmc
cmp
adc
xor
cs
rorl
ret
jle
add
push
and
out
subb
hlt
mov
pop
inc
cmc
in
stos
add
sub
dec
dec
enter
es
and
notl
jo
loop
outsl
xchg
aam
xor
repnz
jge
and
xchg
hlt
sti
lahf
data16
dec
inc
das
inc
js
jnp
ja
mov
movsl
imul
dec
add
fmull
sub
std
pushf
xor
mull
loope
imull
sbb
fstpl
or
add
sub
mov
or
and
hlt
inc
lret
mov
dec
sub
push
idiv
mov
cmc
into
or
jg
mov
lret
and
and
loope
or
jnp
and
mov
push
fadd
mov
jnp
mov
pushf
lock
imul
mov
dec
jno
out
in
dec
arpl
sbb
test
cmp
xor
les
add
fistpl
out
xchg
sub
cmp
rorl
jecxz
repnz
call
divb
mov
pop
imul
cmp
test
pusha
pop
add
mov
outsl
sti
xor
into
dec
sbb
frstor
jmp
jge
shrl
mov
mov
cmp
lcall
enter
jle
mov
cld
pop
call
mov
js
int3
lret
out
and
cmp
leave
add
inc
lods
dec
add
in
fs
sbb
pop
out
inc
xchg
loope
add
lods
lock
mov
mov
add
popa
cmp
xchg
inc
sbb
mov
daa
mov
lock
daa
pusha
imul
mov
ljmp
pop
ljmp
add
sub
xchg
aam
xchg
mov
xchg
js
xchg
aas
inc
pop
sub
enter
lock
pop
shlb
repz
xchg
imul
aaa
fcmovnbe
push
push
ss
pop
xchg
clc
popf
scas
and
adc
stos
xlat
cmp
jle
xchg
pop
das
cmp
mov
mov
mov
push
mov
repnz
mov
jle
fistl
ljmp
mov
adc
cs
xchg
lds
dec
xchg
jg
and
test
add
in
add
xchg
repnz
nop
ret
jae
pop
mov
xchg
adc
clc
mov
sbb
dec
fstps
nop
mov
xchg
jne
sbb
adc
adc
popf
das
repz
and
dec
jp
movsb
push
cltd
cltd
loopne
mov
mov
lds
orb
push
mov
negl
jmp
test
loop
aad
lahf
inc
stos
push
call
xor
stos
notl
loope
pop
out
dec
xor
add
inc
pop
out
das
pop
jno
data16
or
mov
mov
xchg
cmpsb
mov
sbb
ror
mov
cmp
lds
jmp
sub
out
and
out
pop
cwtl
repz
xchg
push
cli
rorb
scas
xchg
icebp
push
xor
fcomps
adc
sub
and
jmp
hlt
test
push
out
int3
ljmp
aas
iret
or
mov
enter
loopne
pop
test
mov
inc
idivb
pop
insb
sub
movsl
aaa
sbb
and
cld
push
mov
adcb
lea
add
fmull
dec
in
or
xlat
mov
cmc
jbe
icebp
out
xchg
adc
mov
lahf
lods
adc
adc
les
pop
stc
and
adc
jne
fisttps
jecxz
fildl
mov
xor
dec
push
mov
movsb
aas
inc
iret
bound
push
adc
out
cs
jae
sbb
stos
cmp
ljmp
dec
add
stc
movb
lods
scas
jle
pop
mov
aam
iret
test
ficompl
adc
add
addl
bound
psubd
jp
push
outsb
and
sahf
popf
popa
cmp
cltd
xor
lock
or
fbld
sub
iret
jle
cmp
push
std
cmp
add
push
inc
fisubrs
lcall
add
dec
fadd
cmp
xchg
into
leave
or
out
xor
push
sub
popa
fistpl
pop
fbld
loope
imul
mov
xchg
ret
jns
lock
push
fs
dec
dec
movsl
sub
lods
movsl
mov
dec
or
add
aam
pop
stc
mov
icebp
sbbl
jmp
jl
sbb
dec
leave
sbb
clc
arpl
adc
in
xchg
subb
dec
adc
outsl
into
out
and
push
pop
fcmovne
xchg
mov
mov
add
cltd
sub
lret
rep
xchg
mov
test
iret
inc
mov
pop
ret
test
mov
icebp
sub
mov
pop
mov
scas
sbb
or
or
pop
shlb
sbbl
mov
dec
fisttpll
push
sub
popf
xrelease
mov
popa
mov
xor
dec
push
xor
inc
inc
jl
fdivrs
sbb
ljmp
mov
pop
adc
test
inc
lahf
mov
cltd
lock
stos
mov
movsb
adc
sbb
insl
in
into
testl
sub
push
repnz
aas
pusha
lock
jb
mov
scas
sbb
dec
inc
push
jp
stos
xor
xor
aaa
rcll
mov
pusha
popf
lea
jle
dec
std
jns
inc
insl
push
inc
repnz
decl
push
and
mov
sub
fldt
clc
mov
add
xchg
mov
fcmovnb
aad
jae
lret
fucomp
fcoms
pop
jb
in
mov
lret
ror
jge
xor
cmpl
push
sbb
cli
stos
repz
fs
mov
negb
imul
sbb
jmp
add
aad
or
cmp
mov
sbb
mov
dec
xlat
dec
in
xor
fbld
rcrb
cwtl
adc
cmpsl
mov
aaa
test
adcb
mov
jb
add
das
mov
data16
mov
add
movsb
sbbb
mov
std
mov
fnsetpm(287
aam
out
mov
movsb
mov
aam
pop
cmpsl
mov
mov
ja
jae
popf
call
shlb
cld
sbb
push
call
push
fs
jo
mov
or
fists
xchg
push
push
adc
cmp
mov
xchg
xchg
imul
mov
jg
stc
fs
xchg
sbb
lds
lcall
fwait
clc
jbe
push
iret
push
jb
clc
test
popf
jecxz
lds
jg
or
outsl
mov
jnp
lcall
out
cmc
sbb
push
sbb
fs
xor
sbb
pop
out
mov
push
int3
adc
fists
test
sahf
mov
add
push
and
mov
sbb
cmp
les
aam
or
cld
sub
adc
adc
outsl
adc
cs
stos
push
test
out
jnp
ja
orb
in
pusha
cmpsb
mov
mov
sub
push
sbb
inc
cmp
push
lock
mov
xchg
sbbb
inc
bound
push
pushf
mov
sti
in
cmp
pushf
xor
lods
mov
cmpsl
adc
dec
sub
xor
and
or
lcall
out
int3
loop
pushf
jl
ja
stos
sub
pop
sbb
cmp
scas
push
dec
adc
lea
sbb
push
push
mov
cmp
sub
fisubs
jl
xor
dec
mov
out
into
or
mov
popf
lret
data16
jbe
pop
inc
xlat
sbb
or
ret
and
lret
test
rol
jne
fdivs
add
fnstcw
rol
lods
ret
movsl
mov
dec
xchg
pop
iret
mov
pop
adc
xor
shlb
inc
cmp
outsl
jo
arpl
sub
mov
push
xchg
mov
data16
dec
jp
mov
test
mov
jle
mov
clc
mov
adc
dec
movsb
in
add
lret
jo
das
shr
outsl
aas
sub
gs
pop
xor
incb
push
sub
cmpsl
mov
dec
mov
aam
icebp
aas
ss
movnti
jg
out
in
ss
fadds
outsb
mov
pop
mov
es
mov
lret
mov
jns
sub
push
inc
mov
mov
cmp
pushf
cmp
cmpsl
hlt
pop
popa
leave
add
push
nop
scas
mov
lret
loope
das
adc
pusha
sti
repnz
jp
mov
push
push
movsb
push
jnp
in
mov
sbb
fisubs
scas
add
pop
fstpt
imul
push
push
push
pop
push
js
push
in
sbbb
jne
in
ret
jle
push
xor
scas
iret
push
jbe
outsb
insl
and
mov
stos
lcall
jns
punpcklwd
or
es
fs
adc
fidivrs
mov
cmpb
stos
ja
test
daa
fiaddl
dec
rcrb
ds
sub
pop
repz
mov
test
nop
adc
xor
sti
lret
jmp
fs
xor
or
or
pop
stos
push
data16
jb
pop
sbb
jnp
cmc
clc
movsl
das
inc
movsb
pop
aad
or
mov
bound
das
and
pop
push
lods
adc
imul
or
neg
sar
push
out
andl
sub
fstpt
add
push
xlat
in
lock
adc
shll
cli
and
push
and
lret
das
or
out
mov
daa
jno
xchg
out
scas
mov
addr16
sub
and
pop
dec
fstpl
jge
gs
cld
pop
jle
add
inc
pop
call
mov
inc
jbe
push
aam
add
and
inc
xchg
dec
mov
in
cmp
xchg
mov
fmulp
js
out
andl
shll
in
sub
pushf
adc
mov
lods
test
fwait
jb
or
xor
nop
add
daa
loope
xchg
aas
repnz
push
mov
pushf
and
mov
pop
mov
inc
mov
ds
pop
bound
cmp
imul
dec
sbb
xchg
fucom
pop
shll
ds
xor
and
popf
mov
sub
pop
mov
fildl
mov
push
mov
dec
mov
push
dec
dec
pop
mov
pmovmskb
ret
lcall
fs
out
xchg
repnz
cmp
xor
imul
call
das
jmp
into
pop
stc
test
sbb
test
ret
test
fdivr
jnp
pop
fidivrs
xchg
pop
or
sti
aas
jmp
cmp
mov
call
xchg
sub
shll
icebp
jge
das
sbb
popa
dec
out
mov
insl
pop
xorb
mov
movsl
sbb
cli
lods
test
xchg
add
push
aas
add
inc
sub
mov
rorw
lods
mov
jno
xor
mov
ja
lcall
jp
adc
xchg
push
nop
lcall
xor
or
nop
lret
aas
inc
js
shrl
add
jno
aas
call
cmp
push
sbb
je
xor
fs
clc
pop
pop
mov
daa
sbb
imul
repnz
cmp
loope
mov
dec
or
cmp
sub
dec
pop
cmp
cmp
loope
jp
pop
xor
arpl
sbb
mov
adc
aas
mov
test
cltd
pop
addr16
mov
icebp
cmp
mov
adc
jl
int3
into
jae
jg
or
xchg
lret
shrb
lret
dec
imul
xor
addr16
stos
movsl
dec
or
or
xchg
insb
jb
pcmpgtw
push
icebp
test
fwait
es
add
and
mull
in
cs
xchg
ret
add
movsb
sub
xchg
das
pop
repnz
lret
push
sub
lea
pushl
push
inc
shrl
sub
mov
add
push
test
dec
fistps
cmp
pop
fnstenv
enter
xchg
or
pop
addr16
mov
fiaddl
aad
xchg
push
test
jge
and
orl
lea
sbb
decl
add
pushf
mov
loope
leave
sub
out
rcr
inc
adc
mov
rorb
pop
lods
mov
sub
fimull
jmp
popf
sbb
cmc
xor
das
mov
jp
and
leave
sub
mov
sub
dec
or
inc
out
rcrl
adc
and
lahf
lea
xor
imul
or
cpuid
xchg
test
inc
add
mov
push
out
leave
int3
sub
push
mov
stc
icebp
pop
in
push
cmp
xchg
pusha
dec
push
mov
pop
sub
lds
mov
or
xor
push
add
mov
imul
cmp
lock
pushf
sub
js
push
rclb
adc
jbe
jbe
popf
insl
push
xchg
add
push
xchg
jmp
cmpsb
mov
push
xchg
negb
add
sub
push
loop
jbe
movsl
xor
cmc
sbb
call
jbe
ja
outsl
push
push
ret
xchg
inc
or
or
popa
dec
and
mov
jbe
jecxz
movsl
xor
jl
pop
cmp
inc
mov
imul
dec
sbb
std
into
xlat
loop
xchg
inc
outsb
pop
cmp
add
xchg
mov
sub
mov
or
daa
pop
xchg
les
lret
jne
pop
jg
sbb
jle
out
out
push
pop
cmp
mov
enter
dec
mov
cmpsl
sub
add
sub
nop
out
mov
pop
das
or
scas
movb
pop
fildl
cltd
xchg
sub
jns
jnp
push
aam
inc
pop
loope
stos
mov
or
pusha
fdivrs
icebp
sbb
cmp
push
pop
inc
xor
pushf
imul
addr16
sarl
sub
and
xchg
sbb
and
add
fildll
and
inc
mov
adc
ret
shrb
pop
dec
push
into
mov
add
jns
jbe
aas
imul
in
sbb
cwtl
cmpb
imul
in
pop
inc
adc
ret
push
inc
lret
mov
jnp
pop
icebp
pop
in
xchg
lods
cmp
clc
mov
lock
or
adc
jmp
fwait
pop
scas
mov
into
aam
add
ret
and
push
mov
dec
sub
in
ss
bound
in
inc
xchg
sbb
enter
or
sub
pop
iret
add
in
mov
cmpsl
popf
hlt
clc
cmp
mov
push
cmp
and
push
shrl
pop
dec
cmpsb
stos
loopne
mov
or
jb
push
add
or
mov
in
sbb
adc
adc
sar
ficomps
loop
iret
loope
mov
cmpsb
stc
jns
xor
or
fists
insl
sbb
pop
push
jge
add
dec
and
xchg
std
mov
ret
sub
fbstp
mov
or
or
or
jbe
sbbl
pop
fildll
mov
mov
mov
ret
mov
in
pop
fldcw
mov
and
mov
cmpsl
or
xchg
fldcw
dec
int3
stos
gs
movsl
outsb
movsb
mov
add
cmp
jg
sbb
lret
ficoml
int3
lret
movsl
ss
int
cs
jo
cmpsb
sbb
sbb
rclb
lock
add
mov
xchg
in
dec
mov
xchg
rorl
cmpsb
jmp
lret
fsubrs
sbb
fcomi
push
xor
int3
jbe
dec
jns
mov
cs
add
scas
pop
stos
pusha
lahf
aam
mov
orb
sbb
push
mov
ret
arpl
push
cmp
lcall
xor
mov
push
push
sarl
aas
jne
xchg
movsb
lock
sbb
arpl
sar
dec
push
xor
jne
mov
jl
xchg
xchg
clc
fbld
stos
into
sbb
addb
adc
cmp
jne
pop
cli
mov
in
imul
lock
xchg
lea
bound
push
mov
mov
xchg
ficomps
mov
rcrb
imul
or
adcb
xor
jno
pop
inc
test
sub
outsl
pop
lods
fsubl
insb
test
pushf
mov
outsb
and
push
jmp
push
and
ds
out
xorl
rcll
insb
lret
adc
insl
cltd
jae
dec
push
mov
add
sbb
push
pop
popa
mov
int
pushf
cmp
cmp
xor
add
push
jbe
enter
iret
dec
jnp
call
push
xchg
mov
lock
call
lock
or
mov
dec
push
or
mov
push
jo
fcomip
jp
in
and
cmp
adc
jns
adc
mov
pop
fsubl
inc
notb
pop
repnz
insb
sub
add
mov
jnp
and
aas
icebp
sub
js
ja
test
adc
out
je
lret
sub
rcrl
xchg
scas
test
xchg
mov
sbb
inc
rcr
daa
xchg
xchg
addr16
dec
inc
xor
sbb
adc
push
mov
xadd
mov
mov
rcrl
xlat
out
push
ret
and
mov
push
popa
movsl
jae
adc
iret
or
pop
dec
jmp
mov
outsb
lds
sub
and
daa
jb
mov
mov
cmp
jp
fnstenv
bound
insl
xchg
dec
mov
test
xchg
pop
into
ret
mov
or
aas
jp
fcmovnbe
fmull
test
pop
cwtl
mov
lahf
adc
add
lahf
dec
pop
mov
jecxz
add
sti
pop
scas
outsl
cmpb
sbb
pop
and
repnz
lcall
aam
jo
xrelease
and
lods
xchg
ficompl
cmp
clc
xchg
xchg
mov
jecxz
es
mov
stos
jecxz
add
test
enter
sub
xchg
mov
and
xor
mull
and
jl
mov
xchg
mov
cmc
sub
mov
hlt
mov
fwait
js
pop
mov
ds
push
and
sub
lods
pop
mov
es
orl
shl
in
addr16
in
fstps
jnp
rcr
adc
or
jl
loopne
popf
xor
xor
scas
xlat
push
mov
gs
pushl
mov
pusha
in
sub
dec
sbb
mov
pop
pushf
stos
mov
add
out
xlat
in
mov
test
jl
cmpsb
xor
out
mov
and
and
push
pop
pop
mov
sahf
mov
imul
das
ffreep
int
lock
lock
pusha
ss
push
add
fwait
sbb
xchg
push
jmp
loope
inc
add
jo
add
test
fbstp
popf
int
mov
jle
ss
inc
stos
dec
mov
in
jge
jo
jle
mov
add
add
mov
mulb
cmp
arpl
inc
int
sbb
cltd
sub
test
cmpsl
pop
xor
cmp
sub
sub
xchg
ret
sahf
jns
shlb
repnz
mov
xor
pop
push
int3
ds
jo
sub
adc
mov
cmp
jp
fwait
dec
outsb
fwait
std
xchg
or
in
test
scas
test
xchg
out
fisubrs
outsl
xor
pop
mov
cmp
sub
push
sbb
scas
into
sbb
repnz
jp
subb
rorl
or
gs
jns
or
jle
aad
ljmp
inc
push
sbb
fdivrs
fdivr
sbb
sub
xlat
mov
pop
dec
jle
push
mov
push
shlb
inc
jle
aad
in
cmp
jg
inc
ljmp
mov
nop
add
lock
jbe
orb
sarl
sub
mov
add
sub
jns
stc
es
ljmp
lret
xchg
and
xor
xor
xchg
stos
mov
gs
or
cmc
int
loopne
ds
arpl
push
int
inc
je
and
cwtl
lahf
and
mov
testl
in
lahf
loope
pop
sti
dec
jns,pt
mov
xor
pop
mov
mov
mov
stos
add
push
cmp
inc
jl
jg
mov
jbe
sahf
inc
xchg
in
and
fisttps
adc
mov
dec
loope
push
test
rcll
inc
sar
mov
mov
enter
sbb
cmp
adc
notl
pop
mov
or
xor
push
cmp
mov
push
scas
negl
adc
push
mov
insl
dec
rcr
in
push
mov
mov
imul
mov
inc
push
add
mov
into
lret
jg
leave
push
sub
pop
test
add
in
mov
cmp
mov
add
jne
add
stc
cs
pusha
sub
and
inc
ficoml
mov
ret
rcl
inc
leave
cwtl
movl
xchg
jl
add
dec
mov
pop
xchg
popa
pushl
sub
xchg
push
nop
mov
or
cmpsl
cmp
and
inc
cmpsl
pusha
jae
dec
nop
addr16
loopne
jo
lods
repnz
pop
push
imul
int3
sbb
scas
inc
inc
aad
out
mov
sub
sub
cmp
sbb
sub
push
imul
ja
and
cltd
push
rolb
mov
cwtl
in
xlat
ret
rcr
cli
fldenv
adc
cmc
cmp
pop
inc
cmpl
repz
std
push
idivl
scas
push
mov
cmp
rcrl
adc
cltd
in
shll
add
sub
jbe
xchg
or
mov
add
loope
push
xchg
sbb
pop
sbb
jecxz
pop
mov
xor
into
stos
shlb
mov
xchg
std
dec
fsubrl
xchg
sbb
leave
movsb
in
insl
pop
fsubs
in
out
js
fisttpll
ficompl
add
addb
lea
sub
sub
xchg
aas
andl
push
sbb
mov
sahf
les
mov
repz
sbb
pop
mov
mov
pop
jge
dec
add
add
sahf
xchg
and
inc
mov
in
jne
fbld
fldenv
and
negb
and
ret
scas
sub
enter
mov
int
fistpll
xchg
mov
aad
mov
and
or
movsl
adcl
sbb
call
push
push
lods
jae
pop
inc
stos
jo
sbb
mov
in
aam
or
xor
adc
popf
rcll
fbld
ljmp
das
aaa
push
cld
inc
pop
sub
sbb
lret
lcall
jmp
and
xor
lods
sbb
cmpsb
movsb
pop
cmc
inc
lods
in
rorb
sub
mov
gs
stc
ret
test
lret
mov
xlat
stos
inc
sbb
pop
xchg
inc
into
mov
decl
push
lds
mov
mov
inc
cltd
rcll
rcrl
cmp
xor
mov
sbbb
repz
jge
and
icebp
fists
xchg
adc
mov
addr16
aad
ds
jecxz
pop
adc
pop
fisubrs
stos
sti
mov
jae
insl
mov
xchg
push
push
test
stos
xor
icebp
dec
test
fsubs
pusha
pushf
push
fcomps
xchg
xchg
lcall
gs
insb
or
subl
push
fwait
in
sub
dec
xor
jbe
mov
loop
out
push
in
lods
cmp
testl
insb
push
aaa
pop
das
sub
mov
fistpll
call
lods
test
aaa
les
xlat
mov
dec
cmp
pop
data16
mov
movsl
adc
push
sub
adc
sbb
repz
cmpsl
adc
pop
xchg
and
stos
pop
leave
andb
jecxz
pop
rcrb
or
push
out
aas
les
xlat
arpl
and
dec
in
fnstenv
or
push
pop
push
mov
and
xor
xor
jns
cmpsl
in
pop
arpl
xchg
jns
lods
add
scas
mov
cmp
or
dec
mov
lods
repnz
decl
cmpsb
sub
ljmp
cmpsl
cltd
fldcw
sub
adc
in
sbb
mov
push
loopne
mov
je
push
pop
mov
fs
int3
xchg
movsb
xchg
ljmp
sti
lds
inc
jne
movsl
mov
and
mov
mov
cmp
rcrb
jb
lods
icebp
pop
sbb
pop
inc
adc
adc
jo
sbb
adc
or
mov
mov
add
add
xlat
jg
mov
ds
xchg
popf
jle
int
pop
xor
pop
cltd
pop
mov
jp
inc
outsl
sbb
dec
dec
xchg
dec
mull
lock
hlt
mov
aas
xchg
xor
andnps
or
ja
mov
aad
add
xorb
std
xor
xchg
clc
mov
fwait
push
popf
cmpsl
cmpl
jl
and
icebp
into
add
pop
in
dec
pop
daa
ljmp
cmp
inc
pop
mov
dec
jns
popa
and
iret
sub
je
fldt
dec
jmp
sti
addr16
sahf
test
mov
sbb
cwtl
push
push
movsb
push
add
fildll
mov
dec
push
adc
lock
sti
add
mov
and
xchg
add
xchg
add
dec
and
cwtl
sub
pop
mov
push
fs
mov
clc
sub
mov
jle
mov
je
mov
pop
xlat
dec
dec
cmc
pusha
lods
jne
or
mov
int
push
cmpsb
outsb
push
inc
dec
aas
ds
jns
dec
pop
adc
xor
mov
mov
push
sub
sahf
int
fdivrs
xor
push
add
pop
popf
orl
shll
sub
loopne
rcrb
mov
popa
out
rorb
arpl
fisubl
lret
xorb
or
push
add
fiaddl
xchg
fldcw
bound
and
mov
test
inc
jo
stos
les
mov
adc
inc
loope
xlat
and
clc
add
adc
inc
bound
cmp
aam
add
repnz
mov
popf
and
std
andps
dec
push
std
adcb
cmc
imul
xor
and
xchg
stos
inc
jnp
rcr
mov
sub
jl
lods
movsb
ret
add
leave
es
pop
sub
fcompp
jo
fiadds
cmp
pop
cmp
sub
sub
imul
fcoms
ja
xor
inc
and
push
sarl
and
roll
mov
mov
lods
rorl
es
push
inc
dec
push
inc
in
jne
data16
enter
addr16
mov
out
stos
ret
mov
add
mov
and
lods
mov
shlb
je
ss
rorb
stos
xor
dec
pop
scas
mov
pop
in
push
add
lahf
pop
and
xlat
pop
test
jmp
cmc
aad
xor
call
movsb
js
ja
or
cmpsb
std
test
fs
aam
fiaddl
pop
ljmp
jl
xchg
roll
rorb
mov
xchg
cmpsl
cmpl
jmp
insb
sub
xor
adc
sbb
mov
add
jp
jecxz
shrb
or
pushf
or
mov
lods
lret
inc
in
cmp
mov
out
dec
pop
insl
gs
mov
das
mov
and
movsl
rorl
lock
lahf
pop
fiadds
fbstp
push
and
adc
mov
sbb
cmpsl
shl
cmpl
sbb
jge
jmp
cmp
push
jno
cmpl
cmp
sbb
push
pop
pop
fadds
sbbb
sub
and
mov
add
pop
icebp
push
mov
cld
dec
xchg
mov
out
inc
jmp
pusha
outsb
or
iret
xor
dec
addr16
xchg
push
xorb
mov
jo
or
or
fiaddl
sar
imul
mov
pop
mov
xor
or
xchg
pop
inc
jns
add
pushf
fucomip
loope
mov
gs
sub
xchg
inc
ftst
mov
and
mov
sar
inc
add
adcl
scas
dec
loop
adc
cli
xchg
sbbb
xor
sbb
mov
divl
dec
add
out
iret
insb
arpl
and
adc
jle
loope
sbb
jp
adc
sub
xlat
divb
test
test
mov
jge
and
inc
je
repnz
jns
or
jmp
mov
mov
inc
pop
inc
sbb
loopne
lds
cld
dec
push
mov
or
arpl
aad
xor
mov
ljmp
jg
jmp
xchg
mov
or
ljmp
fisttpll
pop
testl
push
popf
sbb
adc
icebp
sbb
xchg
lret
lock
test
pop
lods
push
sbb
xchg
dec
cmpsl
mov
mov
push
jns
loope
fwait
cmp
pusha
loopne
mov
aad
rolb
cmpsl
bound
sbb
or
or
mov
pavgw
or
sub
in
iret
push
or
out
leave
mov
push
testl
loop
stos
dec
pop
out
adc
aas
sub
sub
je
testl
xlat
mov
sub
sub
add
jmp
repz
pop
jo
popa
sub
jmp
mov
jno
sub
cwtl
pop
cltd
outsb
cmp
or
inc
adc
shl
lods
jae
cmp
inc
ljmp
sbb
sbb
lock
jmp
mov
mov
push
sbb
loopne
jbe
cs
mov
movsb
pop
pop
cmp
scas
mov
imul
fidivs
daa
mov
outsl
shrb
iret
mov
popf
jmp
xchg
cmp
js
loopne
out
xlat
mov
call
inc
sbb
xor
inc
mov
lret
or
cmp
pop
cmp
lret
add
test
hlt
xchg
push
icebp
pop
sub
icebp
dec
stos
lcall
or
xchg
push
and
imul
xchg
push
xchg
mov
pop
inc
mov
std
xchg
fcomps
cmp
or
jl
pusha
mov
sbb
fisubrl
je
adc
into
cmpl
mov
cmp
mov
xchg
mov
and
mov
int3
leave
mov
mov
push
jp
cld
mov
jb
pop
pop
dec
testl
push
fwait
xchg
in
push
test
out
hlt
cwtl
fcomp
xchg
mov
cs
mov
mov
pusha
jo
jb
clc
jg
inc
and
inc
jo
int
mov
in
jno
sbb
pop
add
andb
push
stos
and
cs
popf
xchg
mov
scas
cwtl
sti
out
or
inc
movsb
pop
or
push
push
sub
mov
js
xchg
inc
push
or
sahf
or
add
dec
xor
popa
adc
clc
ret
mov
sbb
aas
notl
inc
in
xchg
and
xchg
push
push
xchg
mull
xor
rclb
in
or
adc
xor
test
cmp
xchg
insb
add
pop
inc
sbb
lea
addr16
sahf
mov
rclb
mov
sbb
pusha
stc
jge
ja
fmuls
xor
fisubl
or
sub
jge
sbb
push
test
xchg
repnz
xor
ss
rcr
es
push
test
sbb
sub
jo
loop
dec
cmc
or
pop
sbb
add
fistl
lds
cltd
pop
inc
mov
in
xorl
jmp
ja
dec
pop
sub
daa
sub
rcrb
movsb
popa
rcrb
mov
je
cmp
leave
xor
and
adc
mov
xbegin
dec
fdivl
jp
sbb
pop
test
or
sbb
jge
loop
fisubrl
sub
mov
xchg
sbb
jo
adc
pop
in
push
hlt
sbb
loop
loope
fld
mov
arpl
xchg
cmpsb
lods
dec
jl
out
icebp
jno
sahf
sub
daa
cmpb
xchg
inc
sub
mov
jge
mov
mov
cmp
sub
hlt
in
int
cmpb
popl
jmp
fisubs
xchg
mov
popf
sahf
imul
jo
arpl
icebp
fdivs
mov
mov
in
mov
inc
call
mov
insb
popf
test
std
dec
lahf
dec
push
xchg
imulb
int
leave
dec
clc
jnp
push
or
pop
lahf
sahf
push
cld
lods
out
xor
lods
xchg
mov
inc
out
sbb
std
inc
push
lahf
popf
push
mov
jmp
je
mov
xchg
jb
out
sub
xor
shl
dec
mov
bound
sub
and
sub
sub
setne
push
add
and
push
in
jmp
inc
push
dec
xchg
sahf
mov
pusha
push
mov
mov
mov
les
cmpsb
jle
mov
push
hlt
push
add
stos
test
test
imul
je
out
fdivr
inc
sbb
ja
lock
and
imul
pop
xchg
ljmp
pop
stos
dec
inc
cmp
pop
pusha
fidivl
mov
and
dec
mov
fisttps
xchg
xchg
jnp
jmp
adc
aaa
pushf
in
pop
push
xor
pop
fistps
jle
pop
mov
sbb
sbb
js
xchg
adc
cs
in
out
div
les
fwait
mov
pop
inc
mov
cmc
and
int
dec
insl
push
inc
es
movsl
add
inc
xchg
jp
inc
or
xchg
fdivrl
fsubrl
mov
pop
ja
je
dec
repz
outsb
bswap
jno
push
jns
lods
cld
clc
and
ret
lods
inc
cmp
or
mov
dec
add
pop
in
fnstcw
movsb
mov
sub
xchg
fdivs
out
test
fdivrs
fwait
dec
repnz
insb
rolb
push
mov
mov
daa
outsl
jno
loopne
cmpl
adc
jmp
imul
sbb
addb
push
lea
push
cmpsl
inc
fnstenv
jmp
stc
fs
mov
pop
out
cmp
pop
adc
sbb
inc
sub
jnp
mov
out
rcrb
cmp
in
outsl
mov
cmc
stc
adc
mov
mov
jge
jp
aad
das
ret
and
clc
sub
clc
sbb
negl
aam
mov
loope
adc
mov
stc
xor
nop
add
cmp
and
sbb
popf
cmp
ljmp
jmp
jmp
xchg
mov
sub
sbb
push
mov
lcall
cmp
cmp
clc
or
test
xchg
push
sahf
icebp
pop
inc
inc
mov
in
fwait
cwtl
mov
sbb
push
pop
outsb
int3
test
aaa
pop
cli
cwtl
cmpsb
aam
inc
aas
rcl
jge
arpl
push
push
pop
push
es
jge
cmc
pop
stos
xor
andl
jp
adc
stc
mov
jne
loope
hlt
scas
test
mov
sub
and
stos
inc
jecxz
lret
xchg
dec
mov
mov
aaa
mov
inc
rep
and
pop
xor
insb
fwait
lea
es
mov
dec
and
xchg
mov
xchg
xchg
jb
xor
ds
push
inc
lahf
pop
push
add
cmc
scas
dec
mov
adc
cmp
sub
loop
pop
push
pop
pop
adc
push
mov
mov
in
pop
push
and
sub
repz
call
adc
push
sub
jmp
outsb
les
adc
cmpsl
int3
jb
pushf
inc
fcomps
pop
dec
jne
repz
sti
push
icebp
inc
mov
sarl
nop
jecxz
aaa
mov
lcall
push
or
cli
inc
jo
dec
fcmovb
sub
into
adc
mov
movsb
mov
pop
insl
pop
daa
mov
jo
in
dec
inc
cmp
push
lret
sub
push
jl
fs
out
sub
fcoml
call
jno
mov
data16
sub
je
negl
pop
push
adc
test
mov
aam
inc
push
mov
test
mov
fldenv
rorb
lret
mov
push
and
lret
mov
sbb
push
aaa
pop
push
test
jb
xchg
outsl
fmul
arpl
lods
push
nop
adc
dec
and
dec
and
lret
adc
lcall
push
or
jnp
test
sub
xor
sub
lds
dec
jno
xchg
sub
out
leave
ret
xchg
xor
inc
lea
mov
in
mov
cmpb
pop
mov
inc
adc
mov
mov
sbb
push
fs
xchg
out
pop
and
xor
pop
cltd
in
fcomps
ret
jnp
in
add
js
enter
mov
adc
popaw
mov
fimull
test
in
fwait
adc
mov
sub
in
sahf
inc
dec
add
ret
outsb
aad
mov
pop
jle
cmpsl
testb
dec
dec
push
subb
cmp
sbb
pop
out
rcl
daa
mov
sahf
call
cmp
cmp
add
mov
xchg
rep
ljmp
das
xchg
in
xor
rclb
mov
filds
xor
lret
mov
xlat
loopne
xchg
jns
cmc
int3
aam
and
pushf
sub
out
xor
xchg
or
cli
mov
jl
jp
mov
lret
jmp
adc
sbb
push
xchg
pop
into
mov
xor
sbb
test
cli
fs
je
dec
out
int
xor
fnstcw
imul
and
xor
xchg
es
pop
daa
xchg
pop
adc
jge
mov
sub
and
add
sbb
jo
jle
das
pop
cmc
out
fwait
cmpsb
stos
in
clc
pop
cmp
or
mov
int
test
inc
jb
out
test
push
imul
mov
jecxz
movsb
dec
ljmp
sbb
mov
pushf
fisubrs
xchg
stos
mov
insb
dec
add
add
adc
fiadds
loope
pop
push
pop
mov
das
sbb
loop
pop
nop
cld
test
push
stc
and
cmpsl
ljmp
scas
sbb
xchg
loopne
xor
stc
andb
fsubrs
stos
lods
mov
cli
push
mov
push
jbe
ds
jle
jmp
nop
das
jne
sahf
int3
sub
cmp
sbb
mov
mov
loopne
and
xchg
push
mov
xor
imul
mov
notl
sarb
insl
jno
daa
jg
cmp
and
fcoml
cli
xor
je
lret
icebp
out
cmpsl
dec
in
lret
lods
iret
into
sbb
daa
ret
sbb
cmc
jne
clc
std
mov
push
lret
and
mov
lret
add
jo
jb
dec
ret
xor
cltd
filds
sub
pop
inc
adc
out
data16
xchg
outsb
push
jns
jle
imul
cld
inc
adc
xor
jle
adc
pushf
fnstsw
or
cwtl
mov
xchg
scas
pusha
pushf
les
inc
pop
jns
das
aam
mov
nop
jno
pop
lret
in
jecxz
inc
mov
adc
aas
fisttps
imul
xchg
mov
sub
mov
nop
sub
fsubrl
dec
outsb
scas
mull
inc
scas
mov
push
dec
jl
xchg
int
sbb
subps
jecxz
stc
push
push
daa
in
mov
and
jmp
pop
dec
jo
test
outsb
mov
cmp
roll
sti
jbe
movsbl
sbb
jmp
mov
scas
mov
cmp
push
jae
add
int
push
jbe
cmp
jne
push
shrl
push
inc
pop
jge
call
fldt
shl
in
sti
loopne
cmp
stos
mov
sbb
mov
outsb
stos
test
mov
out
mov
sub
loop
mov
test
test
adc
dec
adc
mov
loop
and
mov
out
imul
fidivl
mov
sub
or
loopne
sub
xor
adc
sbb
test
jae
rcrl
cmpsl
mov
sti
or
and
pop
fnstcw
mov
nop
je
lods
fildll
gs
push
jne
cmpl
out
sub
int
pop
pop
test
mov
cld
mov
mov
ja
in
jb
popa
setg
movsb
fchs
sar
mov
icebp
lcall
jecxz
mov
lahf
ficomps
sub
cmp
popa
push
dec
sub
push
es
cld
jns
stos
inc
mov
sub
dec
bound
jns
mov
rcrl
push
jle
or
popa
aam
push
mov
jle
incb
mov
sbb
jmp
dec
ror
push
shlb
sahf
cmc
push
jmp
sub
push
push
roll
mov
xchg
jp
sbb
adc
movsl
push
imul
rolb
popa
xchg
data16
imul
xchg
fsubp
inc
dec
sbb
insl
xor
or
push
repnz
inc
mov
pop
dec
subl
inc
dec
dec
pop
movsb
rolb
movsb
rcll
pop
rcr
push
out
or
repz
xchg
mov
lcall
add
xchg
movsl
lea
insb
jg
pushf
cmpsl
dec
rcr
mov
mov
sub
xchg
out
and
mov
ret
aam
push
mov
sbb
mov
dec
cld
cmp
add
insb
or
adc
pop
ja
daa
push
dec
xchg
mov
daa
jl
mov
push
inc
jge
mov
shl
pop
sub
pop
into
jae
mov
jne
sbb
mov
push
pushf
or
pop
cmp
fiadds
jo
fcomps
xor
adc
jns
jg
and
inc
xlat
lret
fsubl
leave
sub
aam
mov
or
mov
pushf
cmp
adc
mov
addr16
xchg
les
mov
and
sbb
jg
stc
push
ss
lods
xor
jecxz
dec
insl
jl
adc
pop
paddusb
lea
cli
xchg
movsb
mov
mov
xchg
sub
ds
lahf
jge
rcrb
mov
test
mov
mov
mov
jl,pn
ror
xchg
xchg
mov
rcr
or
imul
jne
push
outsl
mov
stos
push
sbb
push
xchg
pop
adc
push
add
imul
and
movsl
rcrb
hlt
and
push
jno
push
pop
or
jg
int
out
sbb
ret
jg
sar
xchg
pop
mov
push
fiadds
add
mov
int3
lds
dec
sbb
dec
insl
or
lods
inc
inc
cmpsb
jmp
cmp
iret
jae
mov
fcomps
dec
dec
loopne
mov
jnp
std
pop
inc
ret
add
nop
xchg
sbbl
xor
xor
les
push
repz
outsl
mov
lcall
xor
std
jge
fimuls
sarl
stos
fwait
sub
mov
fwait
outsl
adc
push
adc
mov
cmp
xchg
sbb
jg
mov
cmp
seto
jo
dec
leave
mov
dec
jno
ret
jecxz
jnp
push
adc
push
xor
mov
add
push
out
test
popa
jno
cmp
jle
pop
sub
add
rol
test
insb
scas
adc
xchg
mov
lods
in
jb
pop
out
mov
imul
fldt
push
loop
dec
arpl
pop
jl
xor
sarl
or
mov
and
scas
lods
in
xchg
cmp
das
xchg
ret
cmpsb
push
or
xchg
jne
pop
pusha
mov
or
imul
cmpb
mov
fildl
lds
inc
pop
mov
pop
movsb
fisubrs
xor
aaa
hlt
scas
xchg
shlb
dec
mov
fdivr
jns
or
in
xor
or
lods
jae
cmpb
inc
ds
mov
pop
inc
fnsave
lds
leave
sub
push
aaa
out
cltd
negl
lods
add
pop
push
pop
jnp
dec
sub
aaa
dec
aam
pop
push
xchg
jae
dec
xor
inc
mov
sbb
mov
fsubrp
xorb
xor
test
or
cmp
cmc
or
xor
inc
or
fwait
stos
push
or
data16
pop
cld
mov
gs
mov
aaa
mov
dec
popa
mov
sub
lock
stc
mov
mov
je
jmp
es
or
subb
rorl
dec
shll
jbe
loop
aas
fisubrl
popf
sahf
rcrb
push
aaa
in
insl
dec
inc
les
sub
out
jl
push
pop
lret
popf
pop
jg
in
jecxz
in
int3
xor
test
cmp
xchg
adc
and
inc
pushf
cwtl
pop
es
add
xchg
mov
push
lea
and
hlt
stos
pop
cmc
mov
jb
jmp
push
cmc
ja
jmp
fcmovnbe
fsub
leave
sti
cmp
xchg
mov
mov
in
rcr
pop
in
pop
cmovl
push
xchg
mov
imul
xor
cmp
pop
and
stos
mov
mov
ss
mov
bound
std
and
insl
push
jle
arpl
test
scas
mov
fs
sub
pop
add
ret
adc
lea
dec
je
jb
mov
pushf
sbb
mov
loopne
out
call
and
push
xchg
popa
std
fs
bound
roll
jo
les
push
sub
add
movsl
test
jne
imul
sbb
mov
jmp
jmp
rclb
int3
imul
push
out
lret
lods
dec
mov
mov
leave
outsb
dec
cmp
and
inc
imul
add
fwait
inc
mov
mov
fdivrs
fwait
push
sbb
cmp
sub
mov
inc
push
jbe
xor
movsb
popa
mov
or
and
sub
lahf
shr
movb
daa
out
sub
jge
arpl
cmc
aas
icebp
lret
jo
lock
pusha
rcrl
push
dec
pusha
inc
loope
into
mov
je
repnz
pop
push
addr16
arpl
out
inc
mov
icebp
adc
pop
outsl
shr
test
and
cwtl
ljmp
dec
fs
lret
fneni(8087
cmpsb
adc
and
mov
dec
movb
nop
fnsave
js
aad
or
repz
or
xlat
cmp
push
scas
jmp
push
test
dec
and
add
add
jns
rolb
subps
out
into
push
sub
cmc
xor
xchg
mov
call
enter
sbb
repnz
pop
stos
xchg
sahf
push
cwtl
ret
in
jp
jmp
and
jg
xor
hlt
mov
add
sbb
push
loopne
les
subb
hlt
fnstcw
movsl
add
int
lret
fs
pusha
and
nop
negb
jl
jne
aam
jge
leave
aad
clc
pop
ds
push
je
cwtl
xchg
jno
adc
sub
jl
lea
mov
pop
jge
add
or
subb
imul
leave
and
adc
or
rdmsr
mov
movsl
nop
mov
mov
cmp
or
jecxz
test
out
push
ds
and
mov
mov
jnp
adc
mov
insl
cmp
es
outsl
loope
xor
loope
sub
jl
rorl
pop
iret
inc
mov
enter
adc
inc
pop
sbb
push
iret
sbbl
movsb
sarl
add
ss
add
ret
imul
das
adc
pop
movsb
cmp
je
das
into
mov
mov
push
pop
inc
sbbl
and
mov
daa
cld
jecxz
pushf
add
sub
push
sbb
sbb
xchg
out
inc
inc
fidivs
sub
push
sbb
movsl
adc
dec
sbb
sbb
sbb
repnz
iret
std
int3
insl
rcl
push
pop
adc
inc
mov
shrl
mov
mov
jb
add
sti
aam
ftst
xchg
or
jbe
scas
jb
pusha
add
call
popf
adc
mov
test
loop
push
ret
lahf
outsl
icebp
sbb
nop
enter
cmp
add
sbb
xchg
dec
loop
rorb
mov
jo
mov
fwait
dec
adc
fnsave
idivb
add
mov
dec
insb
fiaddl
popa
mov
jle
cmp
and
and
aam
in
ss
loopne
dec
fisubrl
add
jnp
cmp
cmp
sbb
pop
cmp
in
std
lock
adc
mov
mov
dec
mov
shr
jp
cmpb
into
fistpl
in
shrb
mov
xor
add
mov
jmp
xor
sbb
nop
mull
jo
gs
inc
adc
mov
xlat
test
into
cmp
aam
subb
xor
and
sahf
jmp
or
xchg
mov
ficoml
pop
push
mov
mov
xchg
xor
jmp
je
pop
iret
push
fidivrl
mov
les
mov
xchg
adc
inc
pushf
mov
sub
mov
test
loope
push
mov
icebp
out
push
cmp
rclb
dec
mov
mov
mov
mov
jo
lea
or
ja
decl
int
scas
inc
fs
ret
scas
sub
leave
dec
inc
sbb
cmpsb
int3
aaa
sbb
movb
icebp
add
movsb
pushf
rcr
mull
xor
push
xchg
or
adc
push
cli
or
in
je
aaa
fldcw
xor
xchg
fnstsw
pop
loopne
cmp
dec
popl
xor
ds
ret
sbb
xchg
test
fisttps
inc
cmp
jne
test
sbb
inc
push
jl
mov
outsb
mov
xorl
std
sbb
sub
pusha
in
sub
imul
or
mov
and
xchg
pop
gs
cmp
mov
jecxz
add
jmp
xor
push
rolb
adc
shr
je
int3
mov
cmpsl
push
imul
scas
test
add
faddp
or
xchg
cmpsl
cmp
xor
movsb
xchg
mov
shrb
sub
testb
insb
js
sbb
pop
cmp
lods
les
mov
sub
repz
test
sti
iret
stc
clc
pop
cmpsl
mov
jmp
cmp
aad
out
mul
pop
mov
mov
and
clc
fbstp
sbb
fstpl
and
and
push
ljmpw
imul
xorb
pusha
xor
sbb
push
pop
xchg
lock
enter
pop
cmp
pop
aad
or
cmpsl
xchg
addr16
jmp
sbb
push
ret
cmp
xor
or
lea
push
out
gs
jp
xor
or
xchg
inc
inc
pop
movsl
enter
sub
imul
mov
leave
mov
jmp
mov
hlt
xor
push
pop
int
test
daa
pop
in
iret
mov
insb
enter
dec
dec
js
jno
cwtl
jnp
and
xchg
push
iret
jnp
shlb
push
adc
mov
adc
bound
popf
mov
test
push
pop
popa
jb
fxch
mov
inc
leave
ret
clc
mov
pusha
mov
xchg
jb
fldenv
das
push
jecxz
repz
jecxz
aad
in
idiv
adc
sub
xchg
cmp
idivl
mov
mov
pop
sub
negb
mull
bound
clc
fucom
mov
xchg
lahf
jno
dec
adc
push
aas
lret
ss
pusha
loope
iret
pop
fcomp
lock
pop
scas
add
jbe
push
test
sbb
dec
dec
fbstp
mov
adc
in
adc
sub
std
shll
jge
add
loope
cmpsl
dec
cmpl
lahf
sub
clc
ret
pop
aad
cmp
icebp
pop
pop
pop
or
push
dec
aad
clc
mov
aam
popf
lret
ficomps
mov
pop
xor
push
jle
andl
jl
daa
les
pavgb
lock
pushf
xchg
mov
inc
popa
add
aas
inc
lret
iret
popa
adc
enter
fnsave
sub
inc
xchg
jo
iret
adc
jb
ds
pop
addb
mov
mov
jo
adc
lods
inc
xchg
mov
add
js
push
movb
icebp
lret
in
and
push
lds
in
in
pop
and
fcmove
movsb
cmp
cmp
jmp
push
mov
cmp
or
inc
adc
daa
sub
movsb
fbstp
dec
xchg
push
ret
jno
or
nop
sbb
icebp
ret
loope
stos
nop
cs
jle
or
sub
or
mov
rcrl
out
mov
lock
inc
mov
push
mov
cmp
xor
add
inc
imul
shl
adc
sub
mov
jns
push
fidivl
pop
add
movsl
or
xor
or
aas
cli
jp
xlat
inc
mov
xchg
enter
andl
cmp
gs
push
sbb
rorb
loop
adc
je
aaa
sub
or
jne
pop
lds
cmpl
xor
xor
popa
or
pop
add
mov
xor
fcmove
mov
sub
lret
hlt
or
sbb
mov
adc
pop
or
xor
cmp
pushl
sub
call
out
sbb
mov
jmp
sbb
cmpb
mov
cmp
shlb
pop
mov
ficoms
push
adc
mov
push
jle
mov
mov
scas
lret
lahf
or
xchg
push
pop
lods
cmp
pushf
scas
push
mov
or
jnp
rcll
ret
loop
and
aad
loop
cmp
pop
push
ljmp
pusha
decb
std
ja
xchg
jmp
inc
xor
stos
in
mov
cmc
jbe
push
stc
into
leave
fldcw
pop
mov
ret
push
daa
imul
push
cmpsb
mov
into
aam
fstpl
jae
scas
nop
insl
ret
xor
cltd
cld
mulb
add
push
ds
int3
cld
fmulp
lods
mov
fwait
outsl
arpl
pop
test
xchg
add
loop
or
jl
outsb
cmc
and
loopne
xlat
or
call
pop
pop
sbb
mov
xchg
jmp
add
xchg
test
or
mov
das
shl
je
das
adc
cmp
xlat
cltd
xor
xchg
outsl
sbb
jl
rorl
sbb
fnstsw
mov
fwait
testl
or
pop
stos
add
cs
fcomip
out
mov
or
lcall
jne
adc
ds
loopne
xchg
nop
outsl
insb
mov
ss
jge
test
enter
loopne
outsb
sbb
mov
mov
call
ret
data16
subl
shrl
aas
sbb
loop
push
pop
dec
das
cmpsb
jo
pop
leave
jmp
sbb
sub
fbstp
ret
and
sarl
les
mov
movsl
aaa
push
mov
sub
xor
icebp
pop
cmp
jge
or
ret
inc
dec
ret
add
add
or
cmp
mov
shlb
mov
call
pop
das
mov
ds
fisttpll
ds
dec
gs
pushf
test
loop
decb
int3
insl
xor
push
sbb
test
push
xor
push
jecxz
push
fsubrs
shll
inc
push
push
xchg
add
cmp
xchg
mov
test
push
mov
aad
bound
cmp
lret
cmpsl
rcrb
dec
out
xchg
push
adc
sbb
fisubrs
cmp
repnz
inc
pop
xchg
dec
xor
push
and
loop
rcll
and
jecxz
int
push
lret
adc
jmp
test
out
mov
mull
aas
or
in
fnstcw
cmp
arpl
stc
xchg
pop
incl
loope
es
andb
cwtl
sbb
into
inc
adc
cmpsb
pop
jns
mov
int3
xor
imul
pop
cmp
sti
push
mov
mov
scas
sbb
add
in
js
lahf
mov
stos
je
inc
pusha
movsb
stos
sbb
adc
out
popa
adc
pop
dec
negl
pop
jecxz
jno
bound
addr16
fndisi(8087
push
and
and
and
lcall
jl
or
push
adc
shlb
push
dec
push
in
push
and
cmc
push
repnz
add
xor
mov
das
add
xchg
clc
or
push
out
leave
or
mov
aam
lea
mov
psrlq
xchg
pop
arpl
mov
lods
mov
in
jbe
pop
push
xchg
mov
or
pop
xchg
mov
xor
pop
lahf
into
ret
sbb
jg
dec
inc
sub
pushf
movsb
loopne
or
inc
jne
aas
fcmove
push
scas
out
ss
pop
xchg
push
pusha
fwait
xor
js
repz
loop
pop
fsubrs
stos
stos
jbe
inc
pop
xor
cmpsb
mov
test
xchg
push
sarl
xchg
mov
and
ss
mov
inc
in
inc
rorl
cld
push
mov
repz
mov
iret
andb
dec
add
and
fcompl
lcall
out
jno
jnp
sub
jne
add
mov
inc
add
mov
push
das
xchg
inc
imul
insb
decb
jg
dec
inc
in
sbb
mov
call
adc
jp
pop
call
push
jno
add
cmpsb
ffree
inc
fisubrl
mov
adc
hlt
add
xlat
hlt
test
mov
cli
imul
and
out
jg
mov
out
or
lcall
mov
cmp
loopne
xchg
jae
ret
jmp
insb
cmp
mov
in
adc
xchg
shlb
fs
lret
jp
sbb
loope
das
je
mov
inc
imul
out
xor
in
lea
push
cmpsl
sub
or
add
ds
dec
cli
addr16
mov
dec
pusha
sbb
fwait
test
fisubrl
ds
mov
mov
pop
inc
insl
mov
aas
mov
jno
mov
arpl
fidivs
sub
scas
shlb
sub
lea
movl
xchg
mov
into
or
in
jb
and
dec
popf
or
popa
movsl
test
mov
into
mov
mov
jns
push
ret
cmpsb
cld
test
mull
jnp
xor
popa
cmpsb
aaa
mov
mov
mov
mov
aad
lea
mov
and
test
ds
in
jl
movsb
cli
fdivrp
and
lret
dec
shlb
push
scas
stos
sbb
ret
mov
in
je
arpl
ljmp
outsl
lds
leave
cs
rcrb
stos
jo
cmpsb
mov
mov
adc
xchg
dec
adc
arpl
ror
lret
test
pop
cmc
outsb
inc
add
xlat
scas
pop
mov
loopne
fdivrs
insl
and
js
popf
jbe
dec
xor
cltd
mov
xchg
pop
cmp
mov
jecxz
push
addr16
push
daa
fistpl
pop
ret
leave
push
mov
fwait
inc
pop
lret
in
stc
add
xor
sarl
mov
mov
adc
cld
int
mov
js
cmp
bound
sub
loop
sbb
sub
sbb
popf
sbb
in
sbb
cmpsb
jb
pop
shrl
push
fistl
popa
js
icebp
nop
enter
mov
jns
popf
inc
xchg
lds
out
enter
xchg
jl
adc
adc
or
test
iret
inc
std
jo
mov
sub
jl
lcall
xor
adc
scas
mov
out
test
mov
sbb
lock
ljmp
mov
cmp
cmpsl
pop
adc
pop
fdivr
ffreep
rsqrtps
scas
xor
or
daa
int3
xchg
bnd
insb
loope
out
fcoms
mov
into
addr16
mov
mov
sub
in
stos
ret
xorb
bswap
dec
repnz
test
dec
push
fildl
cmp
and
jmp
sti
lahf
lods
mov
sbb
inc
mov
add
mov
mov
mov
jb
adc
mov
cmpsb
jecxz
jmp
or
xchg
dec
mov
mov
add
fs
sub
pop
lods
inc
out
add
lret
repz
js
das
inc
arpl
movsb
xchg
jne
inc
sbb
push
jmp
mov
jno
xor
or
xor
ljmp
aad
lahf
fs
add
out
pusha
jb
call
jbe
pop
xbegin
pop
mov
loopne
cmp
movsb
movsl
std
pop
push
cltd
dec
cmp
loope
imul
sahf
sbb
jnp
push
cmp
xor
adc
fwait
mov
test
push
mov
fdivl
and
ret
push
jp
mov
mov
int3
mov
in
mov
test
sbb
pop
cmp
cmpsb
repnz
add
das
jle
test
es
jo
nop
ss
mov
jo
dec
sub
inc
mov
sub
adc
incb
lds
adc
gs
xchg
data16
scas
ja
dec
and
ja
dec
sub
pop
or
out
xor
push
adc
mov
aad
push
pop
inc
jbe
mov
jo
jg
sbb
dec
sub
pushf
cmp
jae
aam
insl
int3
imul
lock
lods
je
lods
mov
imul
jl
loopne
test
jl
cs
xlat
outsb
ss
push
and
push
outsb
sahf
push
stc
push
push
pop
xchg
test
xor
sbb
pop
mov
cmp
ret
and
adc
popf
call
push
pop
xor
ss
and
int3
gs
repnz
jbe
dec
cmp
pop
insb
jbe
std
adc
ret
push
fcomi
mov
inc
clc
lcall
mov
push
daa
icebp
mov
stos
into
xor
rcl
imul
mov
iret
dec
xor
stc
icebp
loopne
rcrl
xchg
inc
sbb
mov
mov
out
nop
out
mov
bound
daa
xchg
or
stos
mov
stos
sub
out
adc
sub
dec
and
cmp
aaa
psadbw
mov
cmp
jb
insl
or
push
stos
xor
jmp
rcrl
pop
jnp
ds
hlt
jno
int3
in
sbbb
sub
and
ret
mov
sub
cltd
mov
adc
inc
pop
inc
imul
fdivr
jmp
xchg
js
push
dec
andl
sub
and
xchg
or
mov
outsb
adc
test
dec
loope
cmp
mov
ss
push
inc
adc
imul
dec
xchg
jbe
stos
rorl
adc
push
dec
addr16
add
jecxz
fdivrs
pop
lds
cli
add
idiv
sbb
cmc
je
xchg
xchg
inc
inc
xor
sbb
cwtl
sbbl
jp
dec
inc
mov
iret
lcall
cwtl
push
call
jl
pusha
stos
push
das
les
call
sub
daa
pop
inc
adc
inc
hlt
and
test
lcall
mov
pop
add
or
dec
lock
inc
and
in
pop
mov
test
pop
stos
lea
push
adc
xorb
orb
leave
jbe
xchg
xchg
lods
push
lahf
inc
mov
jmp
in
mov
cmpsl
mov
in
and
jl
insb
adc
sbb
push
imulb
in
mov
mov
cmp
outsb
rcrb
gs
stos
scas
xchg
sbbb
sbb
adc
xchg
inc
int
cmp
pop
faddl
int3
jnp
repz
xchg
div
mov
fsts
cmpsl
inc
mov
mov
mov
lahf
mov
push
ss
pop
mov
mov
popf
xor
xor
sub
jno
dec
and
addb
push
pop
xor
popa
push
popa
fstpl
aaa
out
mov
mov
jo
sbb
fistpl
mov
stos
ficompl
push
imul
cmpsb
xchg
mov
adc
out
lods
mov
and
or
push
imul
mov
rcrl
inc
shll
addr16
mov
sub
xor
pushf
shll
orb
mov
cld
lods
pop
sarb
mov
movsl
inc
mov
negl
inc
test
shrb
jl
cmp
idivl
ret
lahf
cwtl
or
lahf
xor
dec
sahf
das
jmp
lods
cmp
fucomip
mov
ljmp
add
inc
and
jge
xor
pop
jmp
sbb
push
out
xchg
dec
std
cmp
sahf
xor
stos
movsb
push
fdivs
idiv
mov
mov
shrb
mov
mov
rolb
mov
add
adc
pop
sbb
jge
pop
fstps
mov
cli
cmpsb
push
cltd
inc
fsubr
rcl
int3
mov
rcll
ljmp
jle
repnz
pop
or
insb
push
das
xchg
push
int3
lret
xor
fsts
and
xor
mov
and
ja
call
arpl
inc
dec
xor
inc
add
aaa
enter
mov
adc
cmp
mov
mov
jb
std
jg,pn
mov
jae
mov
mov
outsl
xor
imul
aad
dec
jbe
mov
xchg
mulb
push
inc
lea
mov
jo
popa
fmuls
movsb
and
mov
dec
outsl
add
aad
std
pop
sarb
push
std
pop
push
repnz
xlat
es
fisubl
push
jmp
lcall
cmp
addr16
aad
mov
ss
in
iret
lret
jae
mov
bound
js
push
mov
push
xchg
sbb
lods
push
loop
les
aaa
call
cs
mov
pop
or
lds
or
hlt
repnz
fcoms
mov
xor
test
repz
cld
jp
xchg
cld
sub
cwtl
aad
lahf
outsl
bound
fstps
and
push
inc
fcoms
lds
adc
jb
lcall
sbbb
or
sub
std
outsb
adc
pop
movsl
jae
cmp
aam
jo
push
repz
push
pop
dec
sub
sarl
and
mov
or
jbe,pt
or
hlt
sbb
loop
fbstp
pop
sub
lret
or
int
cli
inc
outsb
mov
or
out
mov
sbb
jb
rcrl
nop
stos
repz
movsl
sarl
jae
test
int
cmp
sbb
cltd
dec
mov
add
pop
xchg
test
shl
jmp
cli
aam
sbb
psubw
jle
pop
cmp
fcomps
mov
cmp
outsb
pushf
cli
sarl
ret
inc
fidivrl
out
mov
loop
shll
movsl
scas
pop
dec
scas
sub
adc
iret
insb
push
fwait
rolb
and
push
mov
mov
shrb
pushf
add
arpl
movsl
ret
sti
scas
dec
lret
jmp
mov
push
iret
in
and
push
ret
mov
dec
push
push
cmp
add
cmpsl
mov
aas
minps
and
imul
pop
pop
mov
sahf
xchg
lods
leave
icebp
adc
jbe
addr16
stos
sbbb
mov
xchg
pop
scas
or
lods
fists
and
mov
push
insb
repz
jge
push
pop
mov
iret
lahf
pop
sarb
add
push
add
mov
outsb
xor
and
sarb
sub
push
sub
mov
mov
sbb
out
stc
das
into
inc
aas
test
test
ficomps
lcall
cmp
fwait
mov
lds
stos
push
loope
sub
dec
dec
add
into
fimull
popa
jne
lret
inc
push
push
imul
mov
fsts
and
jne
icebp
repz
pop
inc
scas
and
outsl
shrl
outsl
mov
out
inc
jp
and
inc
push
jne
stc
and
or
int3
in
sub
repnz
add
push
mov
mov
mov
or
mov
and
lods
push
xchg
lods
mov
imul
cwtl
jb
inc
add
loope
push
add
cli
push
push
xchg
sbb
and
pop
add
sbb
mov
cltd
insl
and
mov
add
sub
pop
inc
cmc
pusha
lcall
cmpsb
call
test
and
addr16
ret
adc
sbb
dec
aaa
sbb
sti
sub
stc
mov
cmp
repnz
dec
pop
mov
sbb
orl
decb
movsl
sub
sbb
sub
in
test
mov
inc
mov
pop
repz
xor
clc
insb
ss
mov
loope
pop
cmp
jne
sub
jbe
sbb
push
out
in
pop
xchg
inc
leave
pop
lods
xor
xchg
push
dec
inc
in
in
adc
xchg
xor
lods
jg
xchg
nop
icebp
push
outsb
rorl
mov
xchg
mov
ja
testb
mov
aas
addr16
les
push
lock
push
ljmp
jno
arpl
or
mov
outsl
and
inc
or
xchg
gs
rcrl
cmpl
or
xor
mov
movsb
leave
pop
mov
inc
ficompl
int3
stos
push
bound
push
scas
addr16
mov
pop
cmp
shl
cmp
mov
xor
cltd
xchg
lahf
sub
mov
shl
jo
aas
cmpb
fnstsw
and
mov
pop
mov
push
sbb
aam
add
mov
imul
and
mov
rclb
adc
jne
pushf
ret
les
mov
or
popl
stos
or
daa
jl
mov
out
testb
popf
jmp
in
ret
dec
sarb
push
or
gs
iret
push
jl
jg
pop
pop
ljmp
mov
hlt
shrl
out
and
imul
in
jnp
sub
mov
jbe
mov
cmp
gs
fldt
sub
jg
dec
movsb
in
dec
dec
push
in
sub
orl
sub
xor
and
jbe
fsubrs
pop
mov
lods
aam
inc
inc
int
add
comiss
aas
mov
mov
shlb
test
and
repz
and
arpl
xorb
push
stos
add
sbb
jnp
roll
popf
repz
cltd
fldl
daa
adc
stc
jns
jns
fisttpl
mov
pop
les
test
les
xchg
rcll
popa
loop
icebp
lock
orb
cmpsb
add
andl
js
popa
dec
movsl
mov
mov
push
jnp
leave
pop
push
nop
mov
mov
jp
cmp
fiaddl
repz
pushf
testb
or
in
xchg
and
xor
out
push
mov
sub
shlb
lret
mov
loop
outsl
test
pop
jle
std
xor
jecxz
jp
mov
sahf
and
data16
mov
adc
sub
jne
pusha
jle
mov
jne
outsl
mov
int3
in
sub
and
aas
jno
test
insb
hlt
adc
mov
fnstcw
dec
fldcw
ret
push
fcmovnu
cwtl
jmp
or
mov
fwait
or
add
pop
mov
das
push
icebp
mov
stc
mov
ljmp
in
or
loopne
pop
pushf
pop
fistl
xor
mov
aaa
dec
pop
add
mov
sub
sub
out
dec
sub
cmp
jle
mov
fisubrs
leave
hlt
jmp
insl
mov
jbe
pop
repnz
cwtl
lods
movl
insl
xlat
scas
loop
out
loope
movsl
sub
cmp
xchg
mov
jbe
dec
insl
je
testb
pop
fcomip
pop
push
and
mov
or
pop
sti
lret
cli
cmp
lret
mov
ds
or
pushf
gs
cmp
notl
sub
repnz
scas
pop
jp
sbb
rcll
dec
adc
fwait
push
push
xchg
sub
add
push
inc
dec
dec
xor
push
inc
xlat
call
stos
popl
jns
add
inc
inc
pushf
add
xchg
jp
xor
outsb
add
mov
mov
jg
mov
cli
imul
stos
pop
lods
aam
in
inc
lds
jae
incl
mov
mov
mov
iret
push
xor
dec
call
xchg
cmp
jo
cmp
sbb
cmc
mull
test
cmp
cmp
cltd
add
mov
push
add
sub
pop
lcall
xor
push
inc
cli
lahf
pushf
and
xchg
inc
imul
or
mov
aad
sbb
pop
dec
sub
jmp
icebp
stos
int
int
jl
pmulhw
mov
fadds
pop
cltd
xchg
inc
ja
in
lea
mov
mov
test
xor
lods
xchg
xor
push
mov
jne
mov
pop
sbb
fnstenv
dec
pop
sbb
outsb
and
mov
mov
push
adcl
lods
inc
test
sti
lods
add
cltd
jg
sbbl
adc
cmp
xor
mov
pop
inc
fwait
xor
stc
xchg
push
mov
in
cmp
shll
adc
imul
sbb
aam
xchg
pop
stos
cs
adc
lcall
andl
mov
pusha
jnp
push
mov
ror
adc
push
jecxz
lret
fs
insb
nop
mov
sbb
sahf
lods
and
pop
or
mov
and
add
sbb
ja
jle
pop
es
aad
imul
lcall
andl
or
jecxz
jl
in
int
inc
add
xchg
lcall
mov
xor
dec
icebp
adc
lcall
call
add
pop
or
fdivs
dec
xor
pop
fdivr
hlt
and
mov
mov
adc
inc
int
lock
push
pop
out
mov
mov
ret
mov
outsb
cmp
xchg
dec
sub
aad
jl
mov
xchg
sbb
inc
cmp
or
xlat
aad
lahf
insb
test
or
jmp
addr16
jae
xchg
push
cmpsl
push
jbe
xor
scas
and
inc
mov
push
aaa
or
lret
clc
outsl
cmp
adc
jns
gs
fiaddl
addb
or
testb
push
adc
pop
je
jb
mov
subb
mov
loope
es
pop
pop
das
shll
xchg
sbb
mov
pop
mov
loop
or
mov
mov
iret
cmp
ja
movsb
lret
xchg
stos
movsb
push
test
xchg
lcall
enter
mov
or
mov
inc
repz
mov
sub
fwait
inc
into
mov
xchg
jo
mov
sbb
or
jge
mov
andb
pop
out
pop
add
sub
test
mov
ret
push
or
testb
call
or
and
out
adc
fadd
push
and
cmpsb
int3
xor
pop
mov
cld
in
fbstp
sahf
add
mov
inc
or
jae
lds
xor
rorb
dec
aas
add
jno
jbe
fwait
or
add
ss
inc
clc
add
or
and
mov
shl
cmpsl
or
cmpb
imulb
xchg
pop
imul
lret
ret
test
sub
sub
xor
xchg
icebp
daa
jo
cli
sub
ja
push
mov
leave
ficomps
fsubr
mov
iret
adc
sub
test
xor
gs
sub
dec
mov
imul
mov
in
or
iret
xor
xchg
incb
lcall
and
lret
pop
mov
dec
in
cli
xor
dec
mov
xchg
orl
add
addr16
lds
jno
stc
ds
mov
outsl
mov
pop
jl
dec
mov
jp
shr
pop
jae
repnz
mov
sar
xchg
jno
out
in
sub
pushf
mov
jle
mov
sbb
xchg
xor
fistpll
fwait
nop
rorb
mov
testl
mov
inc
or
push
inc
fwait
add
jnp
insb
loop
iret
in
loop
push
xor
test
pop
clc
push
jp
jmp
cmp
popf
sub
adc
sar
pop
add
call
dec
jb
adc
sub
test
lds
lock
push
imul
pop
out
add
mov
loope
out
imul
in
mov
cli
mov
xsaveopt
mov
js
inc
stos
add
mov
mov
mov
pop
adc
repnz
int3
fwait
lret
add
loope
cld
jle
lret
cmp
xchg
je
mov
in
cmp
jg
lahf
cwtl
push
in
push
dec
adc
push
out
xchg
xor
ds
test
jmp
sbb
push
sub
mov
sti
sbb
stc
pusha
loope
xor
ja
lods
push
std
mov
or
sbb
add
lret
fdivrs
cmp
cmp
or
rcrl
aam
setnp
cwtl
jae
xchg
scas
shrb
shl
or
cmp
push
fmull
jle
sbb
jcxz
lods
mov
and
jge
sub
push
repnz
loopne
mov
popa
xchg
adc
fisubl
adc
pop
pop
std
adc
adc
adc
aam
push
add
lods
fmuls
jne
dec
aad
jecxz
ljmp
mov
scas
testb
sarb
push
xor
mov
cmp
pop
push
aas
or
pop
dec
leave
fadd
cmc
fisubrl
pop
adc
sbb
leave
cmpsb
roll
mov
test
sbb
add
fsubrl
test
out
adc
in
ljmp
sbb
in
test
adc
and
cwtl
mov
aas
mov
xor
push
xchg
shl
fbstp
add
std
mov
lds
ja
or
outsb
lahf
ficoml
inc
pop
sub
call
mov
hlt
ret
ljmp
dec
lret
pop
out
sbb
dec
decl
cmp
fdivl
pusha
add
mov
push
inc
jmp
mov
mov
push
xchg
pop
ss
mov
and
jle
in
mov
out
push
push
enter
jbe,pn
sub
pop
mov
je
adc
ret
add
mov
pop
test
inc
mov
lret
fwait
out
cmc
adc
sub
mov
inc
pop
push
insl
jle
stos
sub
xchg
int3
gs
mov
cmp
mov
lods
int3
scas
push
mov
adc
adc
mov
mov
add
push
movsb
dec
fiadds
fistl
sub
pop
sub
jecxz
xor
dec
sbb
enter
mov
mov
mov
adc
pop
loopne
mov
cli
dec
push
movsl
push
and
lcall
cmp
sub
push
in
pop
mov
push
imull
fs
nop
popa
add
xchg
mov
pop
aas
adc
addr16
xchg
inc
cmp
sti
inc
jge
sbb
movsb
xchg
loop
ret
adc
insb
aad
rorb
inc
add
pop
ljmp
sbb
mov
pop
fwait
lock
fwait
cwtl
pushf
mov
fldt
fldcw
mov
pop
add
fidivs
lret
jo
fwait
lds
pop
mov
pop
mov
daa
pop
jp
dec
add
and
insb
hlt
xor
push
xchg
loope
cltd
jae
iret
sbb
xchg
loopne
repz
and
cmp
sub
mov
pop
and
mov
push
popf
call
sahf
add
nop
cmp
aad
movsl
jbe
inc
sbb
add
dec
fdivs
pop
pop
xor
add
sub
pop
test
ret
or
fisubrs
repnz
aam
sub
xchg
mull
jns
pop
sti
int3
shlb
mov
cmp
pop
pop
xor
or
mov
scas
jae
mov
hlt
gs
ljmp
ds
je
adc
imull
mov
dec
xchg
mov
push
in
lds
lea
loopne
out
je
pop
mov
out
or
out
dec
mov
icebp
cmp
or
push
push
cli
dec
mov
cmp
icebp
xchg
imul
ds
lock
and
stos
dec
push
cmc
ja
ds
lods
lea
sbb
jp
add
mov
pop
inc
int
pop
push
mov
std
mov
sub
pop
and
push
cwtl
push
mov
push
or
lock
mov
aad
adc
and
int
or
ss
jmp
inc
out
mov
das
std
stc
fcoml
mov
sarb
inc
popa
outsb
mov
repnz
dec
pop
jle
cmc
sarl
aad
xchg
or
js
adc
ret
cmpsb
adc
stos
and
mov
cltd
jge
xchg
fdivrs
sbb
and
daa
ret
and
sbb
dec
cmp
cmp
movsl
push
mov
inc
into
mov
mov
or
ds
rcl
mov
adc
lods
xchg
dec
add
aas
cmp
mov
xchg
ljmp
mov
push
pop
inc
cltd
jae
lcall
xor
push
inc
fstpt
fisttps
aad
pop
xchg
repnz
cs
inc
ret
test
movsb
out
jb
aaa
jnp
sub
mov
int3
nop
jbe
aas
pushf
dec
sub
pop
ljmp
mov
cmovae
xor
imull
ds
xor
mov
sbb
das
sbb
mov
aaa
push
inc
je
sub
jb
fwait
adc
scas
adc
push
fsubrl
sbb
pop
clc
cmp
lahf
mov
or
push
ss
popf
xchg
loop
rorb
fisubs
push
or
sbb
gs
ja
xchg
in
cmp
outsb
jp
jne
mov
aas
sbb
bound
andl
jb
xchg
and
cmpsb
cmp
sbb
mov
jns
icebp
jmp
in
cmp
mov
repnz
xor
mov
add
push
sub
adc
frstor
ficoml
int
mov
pop
cli
adc
les
inc
mov
scas
fsubs
fimull
fmul
or
in
mov
push
das
push
push
testl
mov
push
enter
fistl
pop
mov
cmp
push
adc
mov
cmp
mov
sub
fs
and
sub
out
pop
sti
xor
aad
dec
mov
and
and
jge
mov
and
dec
pop
mov
ret
ret
lock
add
mov
ja
inc
rorb
lods
mov
pop
lods
dec
cmp
sub
sar
ret
pusha
lods
pop
shlb
in
add
cmp
sti
sbbl
jecxz
push
inc
adc
icebp
push
gs
in
das
mov
jmp
adc
jbe
jmp
in
gs
push
dec
in
hlt
dec
mov
and
xchg
test
push
shlb
es
inc
ret
jns
xlat
icebp
scas
sbb
inc
pop
push
jne
adc
aad
push
popa
and
cmpsb
add
iret
iret
jmp
sbb
sahf
mov
fsts
dec
lret
mov
loopw
sbb
mov
push
xlat
xlat
pop
xor
movsb
mov
lods
test
push
daa
scas
sbb
lret
jo
cmp
shlb
out
testl
fs
movsl
mov
jp
sbb
adc
xor
sub
or
cld
and
sar
shrb
mov
pop
cmp
inc
in
insb
pop
inc
cmpsl
dec
jl
or
mov
jmp
add
xorl
push
adc
sti
pop
and
icebp
popf
pop
cmpsb
call
or
lcall
mov
pop
mov
xchg
xchg
js
push
in
mov
cs
out
sar
or
mov
arpl
mov
js
sbb
xchg
push
fcmovbe
jge
and
mov
sbb
cld
bnd
icebp
mov
mov
dec
push
dec
add
adc
jecxz
popf
pop
inc
add
lock
push
or
adc
push
inc
adc
filds
jp
daa
in
insb
mov
inc
sbb
mov
xchg
shl
dec
das
and
outsl
repnz
mov
and
inc
scas
jl
ret
pop
aam
sub
es
popl
push
push
push
mov
dec
xor
leave
clc
dec
lcall
aam
rorl
std
popa
cmpsl
add
push
nop
pop
xor
lret
add
mov
dec
stos
mov
and
es
movsl
es
sbb
pushf
push
mov
mov
mov
or
shr
mov
xchg
frstor
shll
sub
mov
std
fiadds
ret
out
adc
xor
pushf
subl
das
mov
cli
add
shl
cli
pop
leave
add
outsb
repz
mov
mov
out
mov
test
add
mull
lret
fsubrs
fwait
nop
pop
jl
mov
je
pop
mov
aam
ffreep
jo
pop
jecxz
faddl
sub
ja
pop
gs
int
rolb
pop
adc
movsl
in
inc
push
cmp
js
test
adc
xor
push
jno
inc
inc
dec
inc
mov
mov
ror
loope
and
arpl
les
lods
aad
rcrb
sbb
lahf
mov
sub
and
fwait
mov
loop
adc
adc
jge
lgs
imul
ljmp
xchg
push
mov
jecxz
fdivl
jne
sub
jnp
scas
sbb
xlat
in
push
cmp
xchg
sub
or
rol
call
jle
push
add
sbb
fwait
out
mov
mov
sti
lret
mov
imul
and
xor
xor
data16
jb
repnz
pop
cltd
pop
xlat
jb
inc
jp
decl
add
rorl
mov
mov
fistpl
push
jg
pop
out
add
mov
out
sbb
push
push
mov
add
fisubl
arpl
pop
mov
aad
inc
push
enter
out
in
out
pop
fcmovb
dec
pushw
inc
push
stos
pusha
scas
mov
mov
mov
and
mov
xor
gs
jmp
add
daa
xbegin
dec
popa
outsl
mov
lods
jne
daa
lret
fldl
shrb
outsb
push
addr16
mov
cwtl
lods
inc
xchg
jbe
dec
inc
cmp
xchg
add
cmpsl
dec
inc
sti
imul
lods
mov
lahf
cli
scas
adc
adcl
int3
jg
add
jl
int
es
push
ror
int3
popa
dec
dec
push
mull
mov
ret
push
sub
jno
mov
rcrb
fwait
mov
push
test
mov
mov
xlat
jno
sub
and
sti
sub
add
mov
fnstsw
lret
out
scas
mul
ret
jns
mov
mov
aad
push
dec
sub
inc
sub
repz
and
test
or
rcl
ss
ss
leave
pop
mov
sbb
xchg
cmp
and
jne
iret
cwtl
data16
mov
mov
nop
repz
or
les
xchg
dec
fs
push
mov
fstl
add
aas
rcll
es
dec
mov
xchg
ja
nop
pop
lret
and
ds
addl
pop
cwtl
shll
aam
adcl
mov
shlb
xchg
loop
popa
sub
xchg
fisttpl
loop
mov
lods
sub
mov
sub
ss
pop
sbb
outsb
and
pop
cmpsl
popf
xchg
rcrb
inc
dec
add
daa
xchg
scas
sahf
pop
jl
sub
fmuls
cld
ljmp
jo
adc
mov
nop
into
push
adc
stc
mov
inc
loope
test
xchg
jp
insb
pop
loope
addb
out
loop
aam
sbb
sbb
sbb
pop
scas
stos
xchg
aaa
loope
mov
rcr
enter
ds
dec
repnz
insl
mov
test
div
out
xchg
xchg
les
sbb
sbb
push
fsubp
out
sub
pop
xchg
lahf
dec
dec
int3
dec
mov
mov
lods
and
cltd
ds
mov
movb
les
add
jmp
imul
sbbb
scas
and
xor
repnz
hlt
xor
je
pushf
pop
fisttpll
or
cmp
mov
mov
bound
shll
dec
scas
pop
test
int
lea
sbb
dec
ljmp
aaa
into
fadd
inc
imul
mov
dec
lret
mov
sti
cwtl
xor
mov
mov
ja
mov
lds
shrl
daa
daa
dec
movsl
add
out
inc
sub
cmp
dec
test
xchg
add
stos
or
mov
pop
xchg
out
adc
out
mov
fs
inc
jle
loope
xchg
sarb
pop
xchg
push
or
mov
sbb
mov
pusha
push
sbb
push
bound
or
out
add
lods
inc
mov
in
imul
inc
sbbb
int
test
pop
inc
leave
mov
fs
add
xchg
sub
xchg
clc
pop
adc
icebp
sbb
xor
je
sub
pop
arpl
movsl
jns
hlt
mov
dec
xchg
cwtl
ret
add
xor
popf
pop
push
sarl
std
aas
and
addr16
aam
int
hlt
lods
fwait
out
test
jle
push
sbbl
popa
push
mov
sub
xchg
in
ret
or
inc
dec
loop
das
mov
call
dec
mov
mov
and
imul
cmpsb
insl
ret
aad
data16
mov
cmp
imul
jb
jae
cmp
or
or
push
lock
nop
je
xchg
xor
jae
gs
cs
xchg
fildl
mov
shlb
push
out
inc
stos
or
jmp
cmc
fsts
xor
mov
pop
xor
out
mov
icebp
xor
imul
outsl
xchg
mov
sbb
pop
push
jp
xor
jnp
push
out
adc
push
test
gs
inc
and
inc
mov
adc
cwtl
sub
sub
xor
std
xlat
insb
mov
out
dec
mov
test
test
or
sub
xor
fstpl
add
dec
call
jae
mov
in
out
out
push
pop
outsl
sub
stos
or
push
adc
mov
pop
arpl
cmp
push
mov
pop
xchg
lods
sub
rolb
pop
dec
mov
in
loopne
pop
in
jb
xchg
or
dec
sbb
cmp
xlat
and
movsb
arpl
mov
sub
and
sub
mov
mov
sti
add
sahf
or
mov
loopne
int3
les
test
sbb
or
sbb
push
rcrb
pop
adc
and
ret
dec
sahf
rorl
cwtl
xchg
mov
sar
ja
lds
xchg
in
cmpsb
mov
pop
arpl
js
dec
orl
and
xor
mov
sbb
sub
jno
scas
push
cltd
outsl
pushf
pushf
fiaddl
mov
push
xor
mov
jl
mov
js
sbb
xchg
sbb
push
movb
in
nop
mov
jns
sub
push
push
aam
lahf
adc
inc
in
mov
scas
shll
xchg
xor
mov
mov
shll
sub
cmp
pop
cmp
ja
cmp
push
or
loope
pop
cmp
xor
xlat
mull
xchg
push
add
sarl
into
in
xchg
sub
xabort
pusha
lcall
cmpsb
cmpsl
push
mov
mov
cmp
sbb
push
lahf
push
stos
sub
xchg
repz
aaa
jecxz
loop
push
jp
jecxz
sub
mov
cmp
outsl
int3
jo
lret
xor
fildl
dec
sahf
movsb
cmp
jmp
cli
stos
es
mov
lcall
inc
jle
shrl
loope
sub
imul
shlb
not
enter
push
mov
cltd
or
cmc
sub
xor
dec
ret
lret
fstl
jbe
int
xchg
gs
jmp
imul
mov
lods
or
sbb
jg
arpl
sbb
xchg
cmp
aad
jb
and
add
sbb
jg
inc
fs
das
scas
mov
jbe
and
pop
mov
lods
xor
fstpl
mov
push
rep
hlt
cli
leave
sbbl
data16
hlt
pop
cli
inc
dec
fldcw
fnstenv
repz
add
imul
mov
imul
das
lcall
inc
pop
out
out
xor
dec
out
test
cmc
test
push
xchg
popf
xlat
fisttpll
push
nop
sub
int
lds
movsb
xchg
scas
mov
jb
dec
out
add
fidivl
lea
add
cmpsb
add
push
push
rcrb
out
xor
dec
pop
or
das
lds
out
lahf
repz
jp
aaa
mov
clc
ljmp
iret
and
and
mov
jnp
mov
adc
pop
sbb
mov
pushf
lds
jecxz
xlat
ud0
add
or
push
int
add
adc
or
loopne
pop
xor
add
enter
ficomps
ds
and
xor
out
test
push
das
jmp
jne
inc
movb
xor
mov
scas
and
push
stos
je
test
test
in
lret
push
mov
mov
cli
mov
and
xchg
mov
mov
add
idivl
loope
insl
nop
inc
addr16
icebp
inc
adc
jmp
mov
std
movsb
xor
loope
out
aaa
jae
xor
and
inc
or
push
lcall
sbb
fmulp
push
dec
in
popl
js
xchg
arpl
lods
jns
shll
test
int
sbb
imul
adc
cmpsb
cmp
psrld
mov
cld
mov
add
cmp
out
adc
jp
adc
sarb
sbb
mov
inc
pushf
cs
ljmp
jp
inc
jno
jmp
cli
inc
shll
jp
into
jnp
inc
xchg
test
pop
mov
cmovns
shlb
loope
mov
lret
enter
sarl
pop
test
popa
jns
scas
test
mov
or
leave
out
dec
cli
icebp
push
sbb
outsl
int3
xchg
cld
loope
add
loope
jnp
test
enter
xchg
push
xchg
add
jno
mov
out
mov
ret
sbb
xchg
and
in
mov
fnsave
adc
cmp
push
or
clc
xchg
adc
inc
popf
mov
aaa
jmp
xchg
movsl
out
push
addr16
decb
es
inc
movq
ret
sub
and
pop
in
xor
and
sub
shr
or
lods
int
mov
mov
int3
lock
int3
mov
std
pop
addb
cvttps2pi
jp
xlat
lret
aaa
int
adc
jmp
sub
pushl
sti
inc
or
movsb
pop
fbld
sub
notl
sub
int3
xchg
ret
add
jo
mov
mov
cmpsl
rolb
shll
outsl
scas
push
lahf
sbb
std
and
rolb
sbb
push
or
fistps
adc
and
jle
fldenv
or
cmp
fcompl
fsubs
cmp
cs
int
cmp
mov
imul
mov
sbb
cltd
lods
or
sbb
or
out
xor
das
xchg
xchg
aam
or
fwait
testb
and
mov
jmp
lea
data16
movsb
and
enter
fs
leave
cmpl
faddl
pushf
pusha
mov
jnp
pop
andl
pop
adc
movsb
sti
push
gs
push
xor
test
std
aad
out
sub
jg
and
mov
xchg
mov
lock
xor
inc
nop
decl
dec
and
es
mov
outsb
push
jae
and
int
mov
rcll
or
lods
lea
cmpsb
or
adcb
dec
adc
test
xor
pop
addl
fldt
mov
and
push
outsb
pop
pop
scas
andb
xchg
adc
test
fnstenv
in
gs
ja
hlt
push
add
data16
fsubr
sub
xor
out
jmp
ss
pushf
mov
fsts
add
xchg
mov
xchg
bound
sbb
nop
fs
cmp
outsb
sub
arpl
and
pop
jp
mov
or
mov
dec
cli
mov
add
fistps
ds
scas
xchg
inc
and
fwait
fwait
and
push
ret
push
stos
pop
in
add
rorb
lcall
mov
lahf
lret
fwait
sub
sub
cmp
scas
mov
movl
mull
gs
cmp
flds
mov
xchg
mov
cwtl
adc
test
mov
xor
push
shll
push
pop
sub
ret
xchg
inc
mov
xor
jne
sti
dec
mov
frstor
imul
push
cmp
push
stos
clc
cs
sub
addb
sub
or
jns
xor
mov
in
pop
mov
test
inc
pop
jle
je
scas
add
mov
pushf
pushl
or
int3
sbb
mov
jl
cmc
push
test
mov
mov
or
imulb
rorb
out
movsl
jae
lcall
es
shlb
mov
popf
mov
aaa
incb
mov
fisubrl
shlb
mov
and
in
jo
push
ret
mov
clc
fisttpl
ljmp
cmpsb
xchg
push
cmp
mov
and
cmp
ret
cmp
sub
loope
mov
les
sbb
pop
mov
add
jbe
in
es
adc
xchg
xor
jnp
jmp
hlt
pushf
sbb
mov
sbbb
mov
gs
cmp
dec
xor
out
mov
sub
in
sub
push
fiaddl
add
aam
xor
dec
cmc
cltd
xor
call
mov
or
divl
fst
inc
cwtl
icebp
adc
mov
xchg
or
sbb
inc
enter
iret
arpl
out
lds
sub
lret
rcr
sub
ds
inc
popf
jmp
inc
roll
mov
xchg
out
xchg
cmp
pop
add
xor
push
movl
mov
stc
out
ffree
imul
xor
cwtl
sub
dec
and
and
jno
or
pop
daa
rorb
lret
out
ret
out
test
pop
out
ja
cmpsb
mov
pop
ja
pop
aam
dec
inc
sub
mov
mov
les
jmp
adc
subb
in
pop
repz
xor
mov
jae
out
cs
add
stos
mov
mov
mov
mov
test
sbb
fwait
mov
aas
aam
inc
dec
test
and
push
test
aas
mov
inc
lcall
push
xor
adc
push
pop
pop
cmp
mov
inc
or
xchg
mov
push
inc
sarb
pop
and
xchg
fidivl
mov
movsb
ret
xchg
add
xor
mov
enter
push
xchg
push
loop
js
xor
xor
xor
daa
pop
and
add
mov
xor
sub
and
jle
scas
pop
jg
js
pop
lds
sahf
sbb
mov
adc
pop
jns
mov
flds
jnp
xor
fnsave
adc
dec
mov
aam
mov
out
push
mov
mov
push
pop
repnz
pop
ret
iret
xor
mov
mov
hlt
fs
loope
imul
cwtl
outsl
icebp
popf
inc
pop
loop
adc
fwait
adc
or
outsb
mov
aaa
pusha
jb
inc
cmc
in
insl
scas
andb
scas
fndisi(8087
xchg
add
movsl
mov
and
cmpl
xor
inc
jno
es
add
pop
sbb
or
dec
mov
push
mov
push
and
xchg
movups
lcall
das
out
push
inc
xor
test
loop
rclb
jae
in
movsb
mov
or
bound
add
push
lcall
dec
cs
push
dec
pop
loop
lea
inc
cmp
mov
and
ror
jbe
mov
sub
push
lods
add
ljmp
sub
stos
imul
mov
out
sti
cmp
sub
pop
lea
and
fwait
pop
mov
pusha
add
adc
xchg
jnp
aad
scas
adc
fnstsw
in
xchg
inc
jno
pop
jne,pt
ret
xor
or
or
xchg
popf
sbb
lret
pop
xchg
loopne
dec
mov
testb
jmp
or
push
repnz
mov
pop
cmp
jmp
mov
je
pop
adc
popf
jecxz
stos
outsb
loopne
enter
pop
sbb
mov
gs
bound
or
inc
js
stos
fwait
sarl
aaa
cmp
std
icebp
movsb
jnp
mov
xor
insb
sbb
stc
and
pushf
test
cmp
dec
push
cmp
mulb
xor
lds
shlb
xchg
push
mov
or
jl
inc
sbb
pop
data16
aam
adc
aas
fisubl
movb
adc
scas
test
loopne
insb
mov
inc
testb
mov
and
cmp
in
enter
sbb
bound
psubq
sub
mov
lea
lds
enter
push
cmp
mov
jge
adc
pop
add
cmpsl
sub
sbb
cmp
inc
pop
mov
mov
mov
dec
inc
and
ret
stos
xchg
pop
and
xchg
mov
add
lock
sub
mov
jp
out
out
cmpsb
imul
es
xchg
leave
loop
arpl
push
rcr
fs
dec
pop
outsl
daa
push
cltd
dec
mov
xor
xchg
outsl
jge
dec
dec
jmp
push
push
rcr
xor
out
fs
pop
push
nop
stc
movsb
mov
inc
lret
call
add
cmc
outsb
and
adc
pop
leave
into
sbb
adc
int
or
es
enter
cmpl
lret
cmc
leave
movsl
fstl
lcall
cli
xchg
jp
add
sbb
and
aam
pop
fdivrl
jbe
push
mov
push
leave
cld
dec
mov
cmp
repz
int
mov
out
loope
hlt
mov
inc
dec
sbb
sub
pop
fwait
mov
pop
mov
cmp
xor
sub
jns
sar
inc
lea
sbb
push
pushf
sub
pop
xchg
jnp
mov
jb
sbb
xor
sahf
lods
xchg
nop
sbb
and
sub
jb
sub
dec
inc
jp
movsb
mov
shlb
mov
and
daa
push
in
xor
mov
int3
adc
add
test
mov
xchg
push
xchg
lods
dec
xorl
lds
adc
adc
cli
sbb
adc
dec
mov
sti
fsubp
out
pop
mov
arpl
mov
test
popf
stc
imulb
pop
pop
mov
aad
dec
xor
xchg
mov
faddl
cltd
inc
and
mull
inc
dec
insl
mov
fcmovb
xchg
xlat
dec
xor
pop
mov
inc
sbb
jns
push
movb
in
sub
mov
push
cmp
scas
add
mov
inc
orb
jnp
lock
or
in
cmp
jb
and
pop
in
xor
xor
sbb
and
out
mov
fadd
xchg
ret
stos
push
add
xor
xor
add
ljmp
mov
loope
pop
rorl
andb
cmp
hlt
adc
inc
stc
mov
incb
xor
lock
fwait
pop
filds
gs
and
scas
push
mov
or
dec
sub
lea
fsubr
fildl
pop
lahf
imul
sub
mov
fs
mov
mov
pop
cmpsl
mov
dec
enter
or
sbb
das
mov
inc
pop
jb
ja
js
pushf
push
testl
mov
xor
daa
dec
pop
sbb
mov
lds
sub
pop
xor
mov
sub
aam
push
jp
push
jo
lock
pop
cmp
fadd
xor
mov
lcall
xchg
loopne
jle
xchg
pop
add
cwtl
xchg
shrl
inc
ror
loope
adc
imul
cs
sub
imul
rclb
add
syscall
pop
push
cmp
loopne
bound
mov
int3
enter
cmc
mov
test
lds
fdivp
cld
dec
clc
xchg
nop
popf
adc
adc
movsb
addr16
ljmp
or
or
fldenv
aas
mov
les
gs
in
and
sub
push
movl
sbb
jecxz
lcall
and
das
add
inc
push
ds
test
ds
lods
mov
lods
xchg
inc
or
jb
lahf
jecxz
jl
xor
or
push
ret
xor
xor
pop
push
div
int3
clc
or
stc
into
xchg
xchg
orl
xchg
leave
test
cmp
fsubl
pop
mov
mov
or
ja
imul
int
add
out
push
dec
out
push
es
sub
lods
push
mov
add
cmp
ret
loopne
xchg
xor
mov
pop
popf
rcrb
and
ficoms
les
dec
jl
and
nop
mov
rcr
mov
push
pushf
cmp
xchg
push
sub
xor
aam
inc
int
jns
and
xchg
jb
push
cld
in
push
cltd
shlb
add
enter
and
jge
adc
fwait
xchg
roll
jmp
bound
push
lds
xchg
inc
std
stos
sbb
sub
xchg
imul
jns
and
rorl
mov
scas
mov
cmp
push
pop
sti
lods
add
cld
addr16
mov
out
push
std
inc
jae
mov
rcll
test
xchg
loopne
orl
sbb
pop
popf
nop
lock
ficomps
mulb
jp
and
js
cmc
or
sub
dec
push
jo
jnp
aas
push
push
enter
adc
cmp
pop
add
inc
lcall
cmp
inc
push
jb
push
inc
xor
ljmp
repz
mov
sarl
xor
mov
lds
lahf
rolb
popf
jbe
xlat
sub
jno
shrb
mov
cwtl
iret
stos
dec
inc
inc
sbb
sub
sbb
jl
pop
pop
mov
pop
inc
cmp
xor
inc
cmp
xor
pop
mov
scas
jg
pop
xor
cmp
and
and
jg
xchg
sub
or
mov
mov
movsb
dec
fwait
dec
jo
cs
cli
inc
dec
or
sub
lret
adc
xchg
cltd
and
repz
mov
iret
jp
pop
icebp
push
push
dec
add
and
insl
adc
xor
dec
dec
pop
jmp
add
add
sbb
movsb
punpcklwd
add
out
stc
xor
hlt
xor
xor
pushf
jle
or
aaa
je
sbb
movsb
sahf
xor
xchg
jae
inc
xchg
jge
aaa
out
loope
mov
inc
fistps
lcall
pop
inc
lods
mov
insl
ret
shr
fsubs
add
xchg
and
bound
shlb
xor
inc
vpunpcklwd
cmp
orb
aas
mov
xchg
adc
xchg
or
movsb
push
inc
ja
mov
xor
mov
outsl
in
mov
repz
xchg
aaa
jns
jns
pop
and
mov
pop
cmp
cli
mov
outsl
jne
xor
cwtl
jb
mov
mov
cmp
jmp
cmp
and
out
sti
mov
icebp
mov
xchg
xchg
jp
inc
imul
std
data16
insl
mov
movsb
jbe
add
adc
aam
push
xor
xor
or
sbb
xchg
ret
mov
ret
frstor
pushf
out
add
add
outsb
scas
stos
cld
push
mov
fwait
mov
dec
adc
cwtl
dec
int
lret
sarb
adcl
push
in
gs
jno
mov
cmp
stc
inc
push
add
jnp
jb
lret
ret
jp
cmp
mov
aas
and
mov
jle
pop
dec
cmpsb
cmpsb
adc
adc
bound
nop
sbb
mov
and
mov
adc
xchg
xchg
aas
adc
jns
andb
cmp
ret
sub
sbb
push
sbb
mov
in
adc
sbb
jnp
push
jge
movsb
inc
rorb
movsl
imul
loop
fimull
outsl
inc
cmp
lret
sub
inc
pusha
aas
push
imul
sub
lods
cmpsl
mov
jns
arpl
mov
scas
cmpsb
cli
mov
fstps
xchg
and
lods
sub
repz
mov
pop
mov
adc
insl
loop
cs
xchg
dec
and
icebp
cld
push
outsb
mov
mov
movsl
int3
call
jno
adc
int
sub
or
mov
push
cwtl
test
rclw
add
inc
and
adcl
aam
addr16
movsb
ficoml
mov
cmpsl
sub
sub
scas
call
nop
enter
fwait
sbb
and
jle
sbbl
push
stos
shll
loop
xchg
lods
inc
loopne
aas
inc
add
push
stc
loop
mov
inc
dec
dec
sbb
orb
xchg
inc
pop
dec
jns
adc
xorb
inc
jns
or
sahf
inc
movsb
testl
xchg
gs
jl
je
aam
jns
push
je
repnz
popf
ss
pop
adcl
das
leave
outsb
out
cmp
out
mov
cmp
add
mov
lock
inc
imul
xchg
test
push
lcall
mov
jmp
inc
insb
jae
call
cmpsb
faddl
das
cwtl
ds
js
movsb
adc
fimuls
pop
push
dec
js
xor
shll
jmp
fimull
rcll
push
fs
xchg
orb
or
pop
push
push
mov
inc
cmpsl
lret
lcall
int
cs
out
mov
cmpsl
dec
inc
ds
pop
scas
testb
mov
and
xchg
mov
push
aas
xor
add
mov
cld
pop
mov
push
inc
ret
mov
add
sub
fs
xchg
xor
adc
mov
pusha
enter
cmc
repnz
inc
aam
push
push
frstor
pop
pop
pop
addb
dec
push
xor
outsb
lret
inc
xchg
negl
cmp
sbb
sbb
xchg
ds
mov
lea
shrb
outsl
aas
sbb
push
imul
lahf
mov
cwtl
in
add
loope
mov
in
popf
in
fcoms
lea
xchg
add
cmc
jge
push
in
aad
or
and
cmp
test
ds
in
orl
cmp
xchg
out
jb
lods
adc
dec
pop
or
sbb
add
loop
and
jecxz
push
push
cmp
dec
movsb
icebp
add
dec
pop
pusha
ret
sub
cli
mov
loope
stc
out
lds
fistps
adc
arpl
es
dec
pop
sbb
mov
sahf
cmp
fiadds
dec
jl
out
xchg
adc
push
and
cmp
cmpsl
inc
mov
and
dec
out
adc
popa
sbb
insl
xchg
cs
xchg
cld
mov
fxch
mov
pop
cmc
xchg
or
mov
orb
sarl
xchg
loope
hlt
dec
push
or
repnz
clc
mov
ficomps
scas
mov
jle
sysret
sahf
test
xchg
dec
sub
sarl
jp
daa
inc
loope
out
or
jne
movsb
inc
pop
dec
nop
xchg
jmp
ds
je
mov
in
into
or
rcrl
xchg
lds
stos
mov
cmp
movsb
xchg
pop
push
mov
dec
inc
push
pushf
lret
daa
fstpt
jo
sahf
mov
aam
xchg
push
repnz
push
es
pop
in
les
pusha
sub
inc
dec
jno
cwtl
loop
ret
movmskps
pop
loopne
jns
dec
sub
fbld
js
dec
imul
adc
jbe
dec
sbb
popf
pop
sub
mov
lret
add
imul
jne
sub
js
sbb
lahf
mov
scas
ja
negl
inc
push
xor
mov
in
loope
xor
and
das
movsl
add
stos
cs
sbb
shrl
lcall
outsb
mov
jb
std
pop
fcomps
push
add
sub
or
jne
mov
mov
sbb
cwtl
out
stos
shlb
fdiv
out
cmp
cltd
or
movq
fistl
mov
test
sub
cmp
lret
xor
lret
int
and
mov
add
push
mov
dec
jns
or
test
ss
enter
dec
js
out
decl
mov
xchg
dec
dec
inc
mov
stos
jnp
or
sbb
clc
add
mov
dec
test
in
in
aas
cmc
add
lea
mov
dec
clc
pop
test
adc
xor
adc
test
pop
dec
dec
push
dec
inc
dec
dec
outsl
mov
sub
or
cli
fdiv
adc
fdiv
adc
mov
cpuid
cltd
cli
mov
or
fs
notb
cmpsl
sub
notb
cmpsl
sub
notb
cmpsl
sub
notb
cmpsl
sub
pop
rcrb
fstpl
mov
insb
push
ret
sbb
lea
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
fdiv
adc
jle
xlat
sbb
addr16
