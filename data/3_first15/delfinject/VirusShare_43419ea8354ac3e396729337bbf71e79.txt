mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
jns
incl
imul
add
scas
adc
sti
ja
mov
jg
mov
or
jae
jb
or
push
int
pop
push
mov
out
push
int3
rol
or
sub
fdivrp
repz
push
dec
bound
arpl
pop
sbb
push
push
jns
pushf
insl
xor
dec
fwait
insl
clc
push
jmp
arpl
rcrb
jo
inc
add
clc
jmp
mov
push
push
imul
es
out
xchg
xchg
subl
cs
cld
sbb
out
aas
int
pop
orl
out
adc
dec
jb
and
push
sti
pop
xchg
loopne
loope
adc
or
xor
pop
jno
imul
dec
add
push
pushf
leave
leave
leave
leave
cwtl
xchg
nop
adc
leave
leave
leave
mov
leave
leave
adc
leave
leave
leave
leave
jo
push
leave
pusha
pop
pop
push
leave
leave
leave
leave
or
dec
dec
in
in
in
daa
clc
hlt
inc
aas
dec
outsb
mov
inc
paddsb
call
cmp
xor
sub
lds
mov
call
xchg
out
idivb
add
mov
and
mov
ss
pop
ret
addr16
and
mov
mov
add
stos
out
call
dec
and
insb
inc
fs
inc
pop
je
outsl
outsb
and
xor
or
mov
push
nop
jb
and
imul
outsl
data16
ja
je
mov
push
push
je
popa
inc
inc
gs
insb
outsl
jo
jecxz
sub
mov
ret
cmpsb
mov
mov
mov
mov
in
add
inc
push
dec
add
inc
or
and
sub
dec
shll
adc
mov
cmp
inc
adc
sbb
sbb
sub
push
pop
imul
xor
cs
jp
add
jp
cmp
mov
lcall
dec
lcall
sub
xor
push
pop
xor
cmp
pusha
cmpsb
imul
inc
imul
xchg
into
sub
add
add
neg
jns
fistpll
out
mov
jl
push
cmp
add
js
and
mov
inc
pop
fs
add
dec
or
mov
ja
fsubs
add
nop
call
cmp
mov
mov
je
push
sub
mov
shr
movzbl
mov
jecxz
fcomip
and
pop
mov
and
ja
xchg
sub
ljmp
mov
lret
adc
push
add
lret
push
test
adc
les
divw
or
sbb
push
ret
pushl
sbb
hlt
outsl
mov
cld
add
orl
mov
xor
add
clc
cmp
sbb
andl
mov
cld
sub
jb
and
or
ret
cmp
mov
inc
push
and
add
rcr
pop
adc
push
add
js
rclb
ficomps
xor
or
push
mov
fmuls
push
lods
mov
loop
mov
sarb
out
mov
mov
mov
mov
filds
sbb
xor
mov
fwait
outsl
adc
cmpb
jmp
mov
fisttpll
out
mov
add
nopl
or
jne
jle
push
and
or
push
mov
lea
movb
mov
sub
pop
fwait
and
xchg
movb
inc
sub
mov
or
ja
pushf
pop
or
std
movl
pop
mov
sbb
add
or
adc
pop
pop
icebp
mov
out
mov
mov
sub
jae
jle
adc
mov
mov
add
or
ret
sbb
subb
in
jg
jns
add
jmp
or
cmp
in
mov
add
push
push
lea
or
push
inc
or
push
mov
push
mov
cmp
jbe
sub
add
jmp
test
jne
xorb
lods
fimull
mov
dec
mov
sub
int
dec
lock
nop
inc
loopne
repnz
sub
pusha
cmp
jp
pop
roll
cmp
add
lds
add
cmp
jbe
ljmp
mov
and
add
xchg
xor
push
mov
stc
syscall
pop
cmp
jne
andl
mov
stos
inc
push
cmp
jae
mov
xchg
out
into
add
dec
and
jae
fdiv
loope
jo
and
lods
iret
shll
sub
data16
mov
add
push
pusha
or
pop
pop
cld
mov
jmp
mov
push
std
sub
add
jbe
or
pop
ret
push
addr16
mov
fcomip
pop
mov
or
sub
shr
cmp
jb
sub
mov
addb
das
dec
and
out
mov
subl
cwtl
and
cmp
pusha
bound
dec
les
je
mov
dec
jo
push
mov
lock
mov
mov
push
add
idiv
je
sti
jg
test
add
movzwl
add
cmp
ja
dec
jbe
mov
cmp
adc
inc
loope
es
mov
lahf
jno
rorl
xorl
pause
jns
aas
jb
imul
jae
lods
cmp
ljmp
adc
je
xchg
or
jg
loopne
mov
sub
mov
add
or
mov
leave
cld
mov
cmp
push
ja
push
test
add
mov
xlat
jne
mov
push
jne
btr
cmp
add
mov
or
lock
mov
cli
dec
jnp
sub
lea
mov
inc
jmp
sbbb
das
add
mov
mov
xchg
iret
mov
divl
enter
iret
sub
sub
cmp
and
inc
sbb
mov
rclb
mov
ljmp
cld
testl
mov
mov
outsl
addl
and
loop
bound
add
sub
mov
addr16
mov
mov
pop
nop
sub
mov
movsb
adc
orb
sbb
sbb
xchg
shl
loopne
or
lock
loopne
push
je
push
sarl
or
jmp
mov
pop
mov
sarl
add
push
adc
mov
shl
push
xor
sbb
or
adc
fdivs
push
loopne
clc
sub
mov
jmp
mov
dec
mov
test
lahf
or
inc
les
roll
cmp
cmp
mov
push
rorl
pop
xorb
jb
or
push
push
xchg
or
divl
neg
mov
test
add
cli
nop
and
mov
test
rcrl
push
add
mov
dec
testb
popa
subl
je
pop
rorb
inc
inc
inc
fadds
data16
out
xor
xchg
dec
pop
mov
xchg
push
xor
stos
mov
dec
aad
inc
adc
cmp
mov
inc
and
push
cld
iret
bound
sub
xchg
xlat
hlt
cmpsb
cmpsl
scas
ljmp
outsl
jno
leave
cmp
or
aam
or
push
jb
and
clc
sub
call
loop
fmull
hlt
mov
scas
testl
jne
or
test
jae
adc
inc
cld
or
cmp
inc
push
ss
pop
xor
xchg
mov
xlat
sub
add
mov
pop
and
hlt
ret
lock
cmp
popf
fnstenv
sub
sub
subl
mov
lahf
inc
test
mov
cmp
sbb
add
fdivrs
movl
lret
or
sub
inc
inc
add
sbb
pop
push
in
or
jmp
pop
xor
cmp
jb
fsubrl
mov
sbb
sbb
lret
jb
jns
cld
pop
push
push
jb
mov
ret
adc
or
test
sbb
dec
or
push
mov
loop
roll
add
mov
push
jo
sub
xor
jbe
mov
call
xchg
xor
shll
lret
mov
cli
out
cmp
push
and
cmp
push
xchg
cvttps2pi
cmp
jb
inc
jbe
or
add
sub
adc
push
int3
push
and
mov
lea
add
sub
and
inc
jnp
sbb
add
or
addl
mov
cld
or
mov
push
popa
jae
rorl
or
pop
pop
push
std
mov
roll
xlat
sub
fsub
mov
addl
pop
lods
mov
mov
addr16
xor
inc
sbb
out
imul
add
mov
sbb
cmp
cmp
and
or
pop
insb
and
out
outsl
add
rorl
sarl
js
je
iret
ja
cmp
pushl
enter
add
xor
sub
adc
mov
add
lea
mov
or
add
push
jle
sbb
or
lea
jl
mov
add
jecxz
push
pop
add
outsb
inc
fistl
jae
pop
rorl
pop
ds
dec
iret
push
gs
rolw
ret
xchg
adc
cmp
dec
cmpsl
and
imulb
push
lea
jecxz
ja
fucomip
lea
or
jae
mul
xchg
fcmovnu
out
fstl
add
js
or
sar
mov
mov
das
ss
mov
faddl
rorl
ret
inc
incl
rolb
sbb
push
aad
adc
adc
jmp
jae
rclb
adc
aad
sub
and
jle
cmp
jne
mov
cmp
jbe
mov
mov
sub
sbb
fwait
push
add
fisubrs
mov
stos
fcmovne
sbb
dec
mov
cmpsl
push
mov
mov
inc
pop
jo
mul
fs
mov
loop
pop
rcrl
mov
add
enter
mov
fadds
stc
rcr
incl
aas
wbinvd
shrl
xchg
popa
push
cmp
dec
aaa
sbb
in
mov
inc
cs
enter
lret
cmp
jg
xchg
push
es
aas
adc
ret
xor
inc
add
icebp
mov
pop
xor
inc
and
addr16
add
loop
in
push
inc
cli
mov
push
insb
js
arpl
fdivrs
shll
pop
fistpl
or
push
lock
push
jae
ss
mov
push
jge
sbb
add
push
mov
inc
sbb
add
push
out
mov
js
jne,pn
push
testb
je
adc
addl
mov
pop
pop
sub
sahf
push
nop
test
cli
loop
fbld
fucomi
add
push
data16
mov
fdivrl
in
imul
sbb
sbb
test
daa
dec
movb
jge
adc
lea
mov
and
daa
js
xor
sbb
add
in
mov
in
sbb
mov
push
xor
mov
dec
fistpl
pop
mov
dec
scas
mov
or
mov
mov
shr
int
mov
setne
jge
jmp
movsb
sub
aas
out
sub
push
inc
sbb
adc
add
dec
mov
out
add
lock
data16
jo
fwait
mov
mov
dec
icebp
mov
pusha
jl
inc
pop
mov
cmp
jne
add
aaa
adc
outsb
push
mov
or
sbb
or
sahf
add
dec
jne
mov
jo
loopnew
cld
mov
jg
arpl
shl
lea
add
decl
inc
in
adc
add
pop
mov
call
mov
and
adc
cmp
movb
adc
cmp
mov
je
movsb
enter
sbb
mov
or
cmpl
mov
xor
int3
or
dec
or
mov
adc
test
jle
sbb
cmpb
jp
mov
cmp
jb
jo
out
pop
imul
loopne
pop
clc
adc
push
sub
cltd
loopne
fidivs
mov
sti
das
in
fldenv
cmp
in
movq
lcall
or
pop
add
adc
sbbl
and
jbe
sbb
mov
pop
add
dec
jne
data16
inc
ret
xchg
ret
lea
xor
sti
push
and
mov
jb
clc
push
hlt
loope
cmp
add
or
movsb
mov
rcrb
xor
add
inc
add
les
pop
rcrl
lods
je
push
loope
insb
pop
jmp
mov
lea
jge
and
add
mov
and
xor
and
int3
aaa
jnp
sti
loope
xchg
cmp
ret
jecxz
movsl
cli
dec
push
add
mov
jle
ds
aaa
fs
sbb
adc
or
sbb
scas
mov
xchg
sti
adc
push
sti
mov
mov
mov
fidivrl
sbb
call
std
mov
sub
push
mov
outsl
aam
fadd
test
cmp
and
fsubl
popa
hlt
dec
jb
cld
dec
loopne
shrl
push
cmp
add
in
lods
inc
ja
scas
mov
xlat
jmp
xchg
cmp
ja
add
repz
fstpl
sbb
mov
xchg
in
daa
ljmp
cmp
fwait
jne
movb
filds
or
pop
inc
dec
adc
add
sub
pop
inc
mov
stos
or
dec
or
add
and
das
xchg
je
jmp
mov
cmp
jmp
xchg
push
push
sub
mov
sbb
inc
fmuls
js
pop
mov
mov
cmp
jmp
dec
pop
incl
cmp
andl
push
sbb
orl
jo
sbb
cmp
cmp
pusha
jb
inc
js
icebp
or
dec
mov
pop
je
inc
pop
sti
aad
emms
or
imul
sarb
adc
push
mov
pcmpeqw
add
and
outsl
ss
outsb
and
gs
enter
insl
gs
outsl
sar
shlb
popa
imul
popa
jae
outsl
arpl
mov
mov
mov
pop
pusha
scas
std
pop
jae
popa
insb
insb
and
dec
imul
add
nop
cmp
jae
out
cld
jg
push
outsb
imul
outsb
add
xchg
outsl
in
jge
imul
add
mov
insl
nop
outsb
and
inc
mov
out
lahf
mov
mov
mov
xor
mov
sbb
pop
add
sbb
repnz
out
add
cmp
jbe
mov
ja
adc
cmc
mov
add
cmp
jne
es
in
hlt
add
xchg
mov
aad
maxps
adc
inc
clc
or
sbb
inc
jns
inc
lock
rolb
ja
lcall
lods
jae
mov
or
call
jbe
stos
mov
jg
enter
loop
push
in
loopne
add
mov
push
sahf
out
xor
loope
lea
add
jne
cli
lahf
shll
jae
mov
mov
mov
cmp
lcall
xor
div
imul
mov
adc
mov
in
dec
inc
xor
clc
lds
add
pop
ret
mov
xchg
test
mov
mov
or
repz
loop
imul
jb
fistpll
mov
add
adc
sub
rcll
std
cmp
jne
mov
add
dec
adc
insb
inc
or
orb
dec
and
inc
cs
pop
add
or
push
jmp
pop
mov
lds
fimuls
or
cmp
mov
mov
imul
mov
sub
mov
ret
popf
int
adcb
loopne
sbb
sbb
call
xor
dec
adc
repz
mov
add
call
in
nop
xor
xor
adc
addr16
pop
test
or
shlb
mov
inc
xor
lods
mov
inc
pop
fdiv
out
mov
xor
jne
test
fildll
frstor
ss
sbb
mov
mov
mov
lds
cmpsb
push
scas
add
inc
sbb
pop
inc
mov
or
dec
loope
js
enter
mov
cmp
cmp
jg
dec
pusha
testl
dec
sbb
jne
lahf
cwtl
push
jmp
cmp
outsb
mov
sbb
movzbl
add
inc
mov
pop
inc
pop
test
and
mov
sbb
in
push
push
push
xor
sbb
loop
pop
jne
mov
addr16
mov
idiv
aaa
mov
jl
or
or
je
pop
jle
cmp
jg
sub
inc
xchg
pushl
fdivrl
sarl
mov
inc
rep
jmp
mov
jmp
xor
jmp
mov
jmp
mov
insb
ret
sbb
or
repz
lcall
je
cmp
ja
sub
jg
jmp
loopne
or
sub
or
test
mov
outsb
push
adc
mov
scas
dec
data16
cmp
repz
push
dec
dec
pop
popa
insb
mov
test
lea
dec
or
adc
flds
adc
jl
pushf
sbb
ret
jle
or
shrl
lret
in
jg
lock
jbe
adc
add
clc
sub
pop
mov
fiadds
fmuls
mov
or
mov
mov
adc
jmp
push
and
add
add
pop
fldenv
xor
push
add
ret
mov
out
xlat
push
fucomp
or
inc
dec
pop
lock
and
cmpb
ja
add
add
xor
mov
jmp
sub
es
outsb
adc
sub
add
push
jg
out
sbb
daa
rclb
out
mov
aad
inc
nop
enter
mov
pop
jne
imul
pop
mov
loopne
or
xor
ja
or
frstor
arpl
bound
pop
lahf
add
pop
or
push
lods
cmp
test
mov
jne
push
scas
dec
xor
cmp
jmp
stc
mov
imul
nop
xchg
dec
add
dec
jmp
scas
xor
mov
rclb
or
or
jg
in
inc
ljmp
fldt
scas
fildll
jne
inc
or
inc
mov
cmp
ja
cmp
jb
cmp
ja
sub
call
fnclex
fldcw
cmpl
push
sub
jp
fwait
sub
fwait
pop
pop
out
or
fldcw
fwait
cmp
mov
or
fldcw
push
add
fldcw
pop
inc
jp
dec
aad
sub
repnz
xchg
or
nop
daa
test
loope
pop
mov
jb
mov
mov
data16
jae
sbb
jne
cmp
rcll
sbb
pop
cmp
add
cmpsb
pop
cmp
and
hlt
inc
xor
adc
mov
xor
inc
jge
and
lcall
das
or
and
jne
mov
add
adc
and
sbb
lahf
jmp
cmp
mov
rol
jmp
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
std
stos
loopne
add
xlat
xor
mov
sub
jbe
mov
adcb
inc
xchg
xchg
lods
loope
fmull
sbb
lret
jbe
mov
mov
inc
sbb
add
and
lock
lods
push
xchg
inc
inc
in
add
ffree
ret
je
mov
mov
cmp
jne
dec
je
mov
mov
mov
pop
add
aaa
add
sahf
loop
push
fstpt
cmpsb
adc
add
add
push
cmp
jne
push
adc
dec
add
dec
add
adc
add
jne
add
jmp
pop
cmp
adc
std
jne
shr
sarl
add
aad
adc
push
mov
shr
push
jo
sarb
pop
cmp
push
clc
push
mov
shlb
ss
cmpsb
jns
mov
cmp
jne
dec
dec
dec
and
shlb
sbb
pop
jecxz
loopne
add
cmp
int
cmp
dec
movsb
pusha
push
add
ljmp
add
adc
fstl
rcrl
insl
sti
xchg
xor
bound
shl
fisubrl
add
rcl
push
mov
xchg
pusha
add
push
sub
xchg
repz
fcos
loop
xchg
sbb
sbb
push
iret
repz
adc
adc
or
loop
movsb
cmp
push
or
ret
mov
sahf
mov
push
mov
mov
push
rcr
outsb
incl
sti
and
add
je
and
mov
pop
pop
je
xor
dec
and
mov
dec
and
add
sub
or
mov
cmp
ja
lea
push
add
push
mov
fcomip
in
int
or
jge
jmp
inc
mov
fdivrs
js
pop
sub
jmp
inc
gs
pushf
mov
sbb
mov
add
push
adc
sbb
mov
or
stos
aad
daa
cmp
mov
mov
mov
mov
push
push
cmp
sbb
clc
mov
mov
dec
jne
pop
testb
daa
and
cmpsb
mov
js
dec
jle
jl
or
cmp
sub
ret
in
fldt
cmp
je
sub
je
das
cmp
lock
push
add
popa
push
and
jmp
push
sbb
dec
pop
xchg
jge
mov
xor
dec
sub
sbb
jmp
fstp
fldt
mov
push
call
jl
insb
cwtl
mov
adc
mov
inc
sahf
enter
inc
pushf
or
repnz
jne
mov
and
adc
stc
enter
mov
sbb
add
cs
cld
mov
aam
push
test
xchg
sub
sub
pop
jecxz
pop
stc
xchg
xor
leave
sbb
mov
stc
lahf
stc
cmp
fidivrs
call
mov
bound
outsl
dec
mov
xlat
fadds
outsb
xor
xchg
push
or
mov
adc
ret
inc
mov
push
pop
test
enter
mov
outsl
movsl
push
inc
dec
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
or
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
pushl
test
lds
iret
decl
js
inc
mov
stos
mov
cmp
jmp
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
ljmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
clc
jmp
int3
repnz
test
nop
fcmovnb
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
cli
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
inc
xchg
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
das
sar
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
pushf
mov
and
decl
repz
mov
subb
and
and
outsb
bound
xor
cld
lret
jmp
sub
mov
loop
sbb
add
and
or
adc
fdivl
hlt
movzwl
mov
lea
push
push
inc
fwait
mov
mov
int3
jne
sahf
clc
mov
push
xor
movl
fistpl
push
data16
add
mov
gs
pop
pop
pop
pop
push
adc
cmp
in
ret
push
ljmp
out
jecxz
and
sub
dec
pop
aas
or
cmpl
cltd
mov
push
dec
inc
push
push
inc
push
inc
pop
ret
pop
inc
gs
jo
imul
dec
add
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
lahf
icebp
ljmp
mov
mov
lret
aas
xlat
mov
aam
leave
mov
inc
out
ds
lods
cmc
add
dec
cld
mov
leave
out
cmp
mov
push
lea
inc
sbb
aam
xor
imul
cltd
pop
push
das
and
and
pop
sbb
dec
add
xchg
ret
rorl
xchg
mov
and
xchg
or
mov
in
in
out
sub
or
cwtl
mov
sbb
clc
cmp
mov
rcr
test
idivl
out
push
das
xchg
push
movups
lcall
cs
xor
jle
in
pop
mov
or
cmp
call
ret
sahf
subb
inc
push
shr
dec
rep
pop
and
rep
mov
mov
sub
jl
push
mov
lods
jp
in
cmp
bound
jbe
add
jae
ss
mov
test
notb
xor
push
sbb
jne
jne
lods
cmpsl
rclb
mov
mov
jbe
pop
mov
fdivs
cmp
fidivs
paddd
shufps
mov
push
loopne
jmp
mov
add
jb
inc
xchg
add
pop
push
outsl
loop
sbb
clc
pop
out
pop
clc
mov
mov
add
subl
sub
xchg
lock
clc
mov
shlb
lcall
push
add
lea
push
sbb
sub
insb
clc
mov
inc
aaa
adc
mov
in
push
test
les
lock
outsb
mov
sub
sahf
xor
xor
jb
jo
jne
push
es
jne
or
push
inc
or
or
lds
inc
xchg
xchg
cwtl
je
or
xor
xor
sbb
rorl
mov
jle
outsl
jle
jne
mov
in
push
xchg
jmp
lret
push
pushl
flds
push
add
repnz
je
pop
in
loop
decl
add
sub
mov
pop
cs
loop
jecxz
xchg
add
cmp
pop
ljmp
fstp
fistpll
mov
xor
das
mov
or
es
ja
jmp
orb
mov
push
data16
sub
cmp
push
mov
stos
fiaddl
pop
scas
xor
jle
popa
lock
ds
mov
or
test
rcrl
adc
out
inc
add
sbb
add
dec
jne
icebp
fucomi
sbb
clc
pushl
push
xor
and
jne
dec
cmp
in
outsb
lahf
push
popf
enter
and
pop
lcall
ja
pop
sti
xor
call
add
mov
decl
push
hlt
xor
lea
mov
mov
mov
sbb
add
aas
inc
inc
or
or
pop
rcrl
inc
sub
or
hlt
hlt
or
mov
push
mov
mov
or
adc
push
clc
addr16
xchg
inc
aas
add
xor
js
inc
xor
xchg
inc
in
jae
mov
sti
or
sbb
jmp
pusha
add
loopne
mov
pop
pop
xchg
scas
rolb
cmp
jbe
dec
dec
in
push
pop
or
call
inc
fisubrs
push
cmp
ficompl
and
add
add
addb
in
xor
pop
push
push
and
sbb
jmp
je
or
jne
movsbl
inc
inc
jmp
add
mov
mov
sbb
jecxz
sbb
adc
or
pop
fdivrl
adc
mov
jecxz
pop
and
add
cmp
inc
add
jne
mov
cmpl
cld
adc
outsb
or
pushf
push
pop
adc
test
cmpsb
push
jbe
jg
xchg
cmp
lcall
into
cli
out
push
je
dec
inc
xorl
push
test
sarl
and
cmp
pop
ret
push
mov
aaa
mov
jmp
adc
popa
add
stos
cli
push
jns
clc
pop
fidivs
dec
add
jbe
addb
cmp
sub
push
sbb
dec
arpl
sub
mov
mov
lock
subb
add
lods
jo
mov
adc
xor
push
outsl
inc
and
push
outsl
sahf
or
inc
je
dec
or
add
xor
cwtl
cmp
sbb
daa
rcrl
pop
add
lds
clc
push
jmp
aas
jb
add
cmp
inc
sub
push
sub
negb
clc
or
and
fsubl
jne
inc
frstor
rcrb
icebp
mov
inc
jmp
mov
mov
mov
adc
inc
mov
or
add
or
das
push
lfs
adc
jno
and
loopne
pusha
pop
test
addl
arpl
test
pushf
sbb
xor
and
mov
mov
xor
add
push
push
shr
rorl
lods
adc
jecxz
and
ret
and
in
addr16
dec
lock
movl
jo
mov
out
mov
or
pushl
mov
push
push
push
push
push
sbb
push
mov
mov
ret
add
xor
mov
inc
sahf
jg
adc
jge
or
pusha
add
aaa
cmp
inc
inc
or
sti
or
test
adc
adc
orb
jae
mov
push
addb
adc
loop
xor
mov
or
xchg
xor
aas
or
mov
ja
add
sbb
sub
pop
cmp
push
sub
fistpl
sub
je
jmp
add
push
in
call
xor
push
cmp
sub
fistps
inc
adc
jmp
sub
cmp
mov
dec
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
xchg
shrb
cld
mov
jmp
mov
or
rolb
pop
jne
movzbl
or
pop
jmp
xchg
mov
cmp
jo
shlb
or
dec
pop
clc
cmp
push
outsb
fwait
jno
js
sbb
cli
sub
add
push
inc
pushl
xor
mov
js
fsts
pusha
and
fcmovu
ret
loopne
mov
xor
ret
jo
inc
or
enter
push
aas
mov
adc
enter
in
jg
push
repnz
cmp
jne
and
loopne
out
mov
sbb
or
add
jge
add
sahf
std
test
jle
dec
mov
je
add
cmp
and
jmp
jmp
mov
mov
xor
rclb
ds
fimuls
add
in
mov
lock
jle
jbe
fadds
iret
sub
adc
iret
adcb
push
sub
sbb
mov
jmp
aam
out
movd
inc
ss
and
mov
ret
dec
xchg
mov
mov
xlat
inc
sbb
mov
mov
add
sbb
dec
pop
js
dec
jne
pop
pop
xchg
cmpsb
std
stos
dec
add
mov
dec
or
rclb
add
fidivrs
mov
mov
cltd
idiv
add
mov
adc
and
and
dec
movsl
fnstsw
and
inc
addb
rorl
pop
push
jg
jecxz
scas
adc
sbb
inc
mov
push
mov
cmpsb
outsl
in
ja
add
mov
jge
mov
mov
leave
out
adc
inc
xchg
push
or
jo
loopne
adc
add
lock
add
add
dec
push
push
test
fistpl
cmp
xor
nop
pop
add
dec
inc
pop
ret
inc
xor
mov
mov
rclb
mov
jnp
and
push
ffreep
test
pop
gs
test
sarl
push
ss
pop
ret
out
sbb
icebp
sbb
cmp
adc
sbb
in
out
lcall
add
mul
es
pushl
aad
fwait
adc
jnp
sahf
sbb
push
roll
push
sbb
jne
cmp
je
xchg
scas
roll
or
fidivrl
addb
adc
add
and
cmp
adc
clc
mov
or
ljmp
inc
push
test
rclb
jmp
jp
jne
mov
aad
push
xor
lods
sub
push
lcall
push
sub
lea
push
pop
pop
mov
mov
jp
add
mov
xchg
in
fadds
mov
or
sbb
pop
sbb
test
js
sbb
push
cli
lods
add
push
push
or
push
mov
mov
sub
push
outsb
pushf
mov
cmp
lahf
adc
sub
shrb
shll
clc
dec
jl
lock
in
roll
jg
xchg
or
adc
movl
xchg
ret
dec
jne
add
clc
mov
jg
sbb
movsl
jne
mov
dec
and
add
inc
insb
xchg
adc
mov
or
ret
cmpsb
filds
jle
push
add
ljmp
lcall
movl
pop
popf
inc
mov
cld
push
and
iret
mov
das
js
cli
loopne
jl
or
cmp
xchg
mov
inc
ret
js
mov
and
je
add
out
shll
aaa
add
inc
jo
loop
sbb
add
jbe
adc
jg
xchg
jmp
lea
cmp
or
jge
push
adc
movsb
das
pop
mov
nop
push
jl
decl
cld
add
mov
add
or
fistpl
aaa
push
fisubl
rcrb
add
cmp
shl
cmpsl
push
mov
mov
subl
push
cmp
je
dec
int
in
cmp
add
jo
fucomip
add
call
pop
sub
jmp
pop
pop
sub
and
pop
pop
imul
or
push
or
addr16
in
add
jae
ja
mov
inc
xchg
popl
xor
testb
add
pop
pop
xor
adc
je
pop
add
fisubs
fnstcw
mov
inc
push
pop
or
idiv
adc
sub
inc
push
jns
jg
je
jns
adc
sbb
push
cld
add
jo
cmp
push
lods
rorb
xchg
cmp
sbb
repnz
sub
cld
cmpsl
sti
jmp
xor
adc
or
out
ds
lahf
cmp
jl
ds
rorl
sub
inc
cld
add
jo
popf
nop
fmuls
dec
rorl
sbb
add
xchg
inc
dec
clc
fucomi
mov
adc
pop
push
insb
mov
xchg
adc
ret
das
xor
cmp
inc
cld
dec
jmp
jbe
xchg
push
jo
cmp
nop
push
dec
jne
or
inc
divb
cld
popf
sub
and
aaa
add
dec
jmp
xor
inc
pushf
loop
sub
pop
adc
je
lock
jne
sahf
in
pop
and
sbb
xor
lea
xchg
nop
loopne
jmp
and
xor
add
or
or
movsb
pop
cld
sub
pop
xor
sar
and
sub
mov
xor
je
inc
insl
es
jl
fcmovnb
jmp
add
jns
mov
cmp
pop
and
or
push
sbb
mov
ss
inc
inc
movsl
jl
push
clc
inc
dec
xchg
loop
lock
and
jno
xlat
mov
cmp
cmpsb
insb
mov
adc
pop
adc
and
lret
ret
int3
sbb
rcpps
xor
inc
in
mov
cmp
jge
sub
jle
sarb
add
dec
cmovle
loope
xor
jmp
bnd
xlat
dec
test
and
mov
add
out
adc
loop
cmp
jl
int3
jge
mov
sbb
jle
stc
add
lea
inc
movl
pop
cli
inc
add
cltd
xlat
orl
push
fisttps
jge
cmp
adc
imul
cmpl
pop
cmp
fimuls
adc
lock
jnp
dec
int3
push
add
mov
push
mov
add
adc
dec
enter
cld
fdivrl
fidivrs
mov
fistps
cmp
add
add
mov
fadds
ret
fldt
push
in
jge
out
add
ss
dec
movsb
mov
in
sarb
adc
or
jb
xchg
dec
in
jmp
outsb
and
out
imul
scas
shrl
shrb
js
adc
cmp
xor
push
xor
movsl
inc
push
cmpsb
loopne
xor
rol
fbld
daa
and
xor
mov
xor
pop
xor
jne
mov
and
ds
sbb
jne
push
icebp
arpl
in
rcrb
addb
sarb
scas
sbb
call
adc
iret
int3
pop
cmp
clc
outsl
xchg
in
inc
in
sub
stos
adc
push
cmp
xor
mov
aad
jno
xlat
jle
loop
pop
pusha
and
bound
push
call
lods
or
cmp
cmpsl
xchg
push
jo
push
push
das
and
mov
arpl
xchg
cmp
mov
out
fcom
xor
xor
popf
push
sbb
insl
add
andl
inc
push
jmp
cld
dec
sahf
lret
pop
mov
inc
inc
jmp
mov
and
inc
pushf
mov
ret
and
adc
data16
dec
push
aaa
enter
test
pop
pushl
mov
sub
xchg
sub
cmp
sbb
mov
add
sarl
push
mov
dec
mov
push
pop
test
pop
sbb
push
inc
push
adc
xchg
fs
or
push
add
inc
out
jle
ret
sbb
or
test
or
or
sbb
lahf
das
stc
movsl
lock
rolb
mull
pop
dec
cmp
nop
pushf
lcall
or
ret
cmp
push
lods
add
add
adc
sti
sbb
inc
daa
cltd
inc
sub
js
cmp
scas
adc
add
xchg
popl
lea
sbb
inc
push
cwtl
shl
pop
inc
and
inc
cmp
mov
lea
mov
mov
bound
pop
call
out
fists
xchg
out
cli
mov
cmp
and
je
cmp
fs
je
dec
shlb
cmp
je
cmp
push
cmp
je
mov
fistl
mov
clc
jmp
lcall
or
loopne
decl
out
jmp
push
mov
mov
pop
add
mov
mov
dec
cs
adc
cmp
pop
jmp
cmp
add
popf
sub
addb
xlat
push
jmp
cmp
sbb
jp
pop
lods
icebp
out
adc
lret
aad
mov
cmp
fsub
iret
inc
sub
ds
repz
pop
jbe
test
daa
push
and
imul
xor
and
lret
push
mov
xchg
cmp
addr16
inc
fdiv
sbb
es
push
inc
add
repz
in
and
call
sub
into
jno
sbb
cmp
dec
pushf
icebp
jmp
inc
loop
or
and
pushf
jbe
scas
daa
inc
sbb
adc
jecxz
nop
adc
pop
cmpsl
inc
push
sub
cmp
outsl
jp
push
dec
jo
add
sub
sub
inc
push
repnz
nop
inc
dec
dec
xor
popa
xchg
adc
sbb
push
hlt
enter
or
sbb
popf
fdiv
add
jl
insb
outsl
cld
dec
dec
jne
or
sub
jle
ret
fsts
sbb
push
mov
adc
cmp
xor
in
cmp
adc
push
or
jo
cmp
insb
adc
mov
pop
or
xchg
test
push
adc
push
aas
cmp
jmp
and
insb
lea
mov
sub
mov
fcoms
push
or
test
inc
dec
push
pop
jmp
pop
cmp
idivl
add
sarl
xor
mov
popa
ss
cwtl
adc
and
add
jne
mov
pop
rorb
sbbb
popl
mov
and
mov
in
dec
movsl
push
cmp
popa
jg
and
nop
xchg
sahf
mov
jmp
and
out
sub
arpl
sub
imul
adc
test
les
cmp
cmp
or
imull
jo
ja
incl
pop
add
inc
call
stc
cmc
mov
cmp
add
je
cmp
lcall
iret
ret
or
dec
adc
popa
push
sub
dec
adc
push
pop
mov
loope
mov
loope
rcrb
ret
inc
mov
pop
dec
and
subb
fdivr
push
rorb
add
xchg
dec
add
call
lret
ret
inc
or
adc
lock
insb
inc
sahf
popa
push
or
xchg
repnz
les
pop
add
lcall
cld
push
outsb
sti
mov
sub
inc
jmp
cmp
jne
mov
inc
and
and
sub
inc
xlat
jle
sub
out
scas
xor
das
and
dec
in
idiv
outsl
adc
or
add
sub
jb
add
or
jmp
xor
fwait
js
sti
sub
jmp
getsec
jmp
push
cmp
cmpsl
xchg
test
or
jb
jmp
jl
cmp
mov
pushl
jmp
jg
mov
cltd
or
add
bound
movsb
loop
sub
and
fimuls
push
ret
or
xor
test
add
enter
mov
sbb
insb
hlt
xor
rolb
neg
push
sbb
or
stos
mov
movsb
pusha
pusha
adc
sbb
dec
fisubs
inc
jns
int3
jne
adc
inc
mov
das
jg
inc
or
xor
jp
push
dec
mov
dec
or
js
daa
jmp
and
xor
sub
sbb
nop
ret
out
decl
xchg
shr
setl
cmp
je
dec
int
pop
mov
or
les
pusha
mov
mov
and
mov
or
add
inc
addr16
lret
dec
dec
dec
ljmp
int
adc
push
push
mov
add
dec
or
iret
mov
test
jg
pop
pop
mov
das
loope
add
lods
sbb
xchg
mov
sahf
mov
inc
add
popa
adc
cli
mov
inc
xchg
cmp
neg
and
or
dec
into
in
idiv
cmp
ss
inc
call
or
xor
mov
cmp
jge
xchg
out
sti
fildl
xchg
add
mov
sub
push
lea
mov
mov
pop
mov
pop
decl
stos
pop
insb
dec
pusha
les
lret
in
jge
scas
cmp
sub
fwait
xor
pop
or
push
bound
out
mov
in
dec
push
dec
add
enter
or
pop
cmp
movl
or
sarl
test
add
cmpsl
sbb
clc
add
cwtl
or
xchg
mov
adc
jl
inc
jl
rcrb
cmp
clc
insl
jl
jnp
dec
inc
push
dec
jne
enter
push
insb
icebp
push
aaa
push
andl
xchg
xor
lock
scas
jge
adc
push
int3
inc
pop
and
test
rcrl
sbb
mov
jl
cmp
push
mov
incl
out
pop
pop
jo
lock
lahf
adc
les
test
in
adcb
inc
ret
in
sbb
sahf
nop
inc
inc
outsl
push
or
sub
xlat
insl
mov
insb
dec
jne
pop
mov
clc
cmp
arpl
mov
push
mov
mov
mov
je
cwtl
fs
out
cwtl
mov
pop
sbb
cmp
inc
jae
fmuls
or
or
lds
cmp
clc
jmp
sbb
cmp
pop
cmp
nop
fisttps
sub
and
jecxz
push
test
xor
lods
xor
adc
jmp
push
out
xchg
gs
inc
push
pop
cmp
imul
pop
add
lods
or
rcrl
dec
inc
mov
or
pop
mov
sbb
sbb
js
pop
dec
sti
sbb
inc
les
cmpb
std
cwtl
loope
sbbl
xor
push
mov
sub
lea
mov
iret
push
jno
sbb
mov
cmp
push
inc
push
push
addr16
sbb
inc
xchg
jl
pushl
aas
flds
fmull
mov
push
movb
ret
dec
push
push
cmpsb
xlat
mov
movl
push
imul
mov
gs
gs
xor
idiv
outsl
hlt
cs
insb
movl
addr16
popa
je
dec
popa
insl
gs
and
push
adc
jle
pop
pop
and
inc
out
and
mov
out
sahf
aam
add
inc
cmp
and
sub
pusha
ja
aaa
in
jno
push
test
xor
push
cmp
push
add
out
inc
popf
sar
cld
aas
iret
data16
mov
cmp
push
bound
adc
repnz
mov
inc
lret
jno
inc
xchg
sti
das
shr
test
push
lods
repz
mov
xchg
xor
cmpb
repz
jmp
out
push
enter
imul
sbb
add
negb
lock
cmp
jne
adc
out
sahf
popf
inc
xorl
ret
daa
js
push
or
push
les
icebp
je
das
outsl
mov
add
repz
cmc
add
test
mov
fstps
mov
mov
and
inc
cltd
push
and
nop
cmp
push
inc
idivl
es
adc
mov
jb
mov
mov
cmp
pop
loopne
fidivrs
lds
mov
push
mov
cmp
mov
daa
mov
mov
pop
adc
loopne
pop
mov
push
aad
sub
mov
fiadds
mov
aam
fxch
dec
je
jecxz
mov
dec
es
inc
push
add
jecxz
jo
or
shl
cmp
mov
dec
cmp
or
addl
inc
add
jbe
sbb
cmp
cmp
fcompl
pop
mov
hlt
jo
push
cld
jne
int
sub
fs
ljmp
lcall
add
sbb
or
sub
test
push
test
pop
mov
pop
push
rcrb
dec
mov
push
inc
shll
mov
sahf
je
sbb
push
mov
pushf
push
push
mov
and
hlt
adc
mull
fcomp
mov
pop
pop
ret
sbb
and
cld
mov
add
push
lret
pop
sub
pop
loope
push
divb
test
adc
movsl
mov
inc
sub
faddp
es
mov
shlb
push
xchg
mov
mov
mov
outsl
cmpb
fbld
mov
or
and
loope
or
ds
dec
lds
ret
mov
aam
loopne
push
cmp
add
mov
scas
cmc
out
jo
dec
inc
cmp
ja
mov
inc
jmp
cmp
decl
decb
cld
ja
fcmovb
jmp
or
mov
adc
fwait
divb
pop
xor
and
lret
add
mov
pop
movsl
pusha
add
dec
pusha
rolb
add
dec
or
cmp
jb
or
je
das
orb
xor
and
sbb
cmp
dec
jbe
pop
add
cmp
push
lock
lea
ret
sub
jb
lock
dec
pop
sahf
adc
bound
mov
test
jmp
cmp
pop
push
hlt
movzbl
inc
notb
das
clc
test
je
add
jae
and
adc
cmp
rol
sti
sbbb
cmc
out
jne
xchg
cmp
ss
rol
loope
or
mov
push
lea
in
xlat
mov
inc
dec
cld
mov
out
adc
inc
nop
ret
or
cmp
sbb
cmp
dec
inc
inc
mov
jne
roll
and
stos
sbb
int
adc
adc
jne
cmp
jo
mov
sub
int
mov
popf
push
pop
dec
pop
jnp
push
pop
cltd
bound
andb
loope
clc
pop
inc
add
je
adc
es
adc
popf
sub
mov
or
cmpxchg
sbb
push
test
mov
dec
ja
in
xor
jmp
test
popa
movsl
push
jmp
xlat
dec
fldl
jbe
pop
imul
loopne
cmp
mov
dec
add
or
or
push
push
mov
add
inc
roll
xor
pop
pop
je
add
jne
ss
adc
mov
push
aas
test
push
adc
xor
xor
pop
loopne
pop
jecxz
mov
cmp
lahf
jbe
add
notb
add
test
xor
test
rorb
roll
int3
or
push
incb
push
and
xor
pop
dec
xor
loopne
incl
mov
mov
adcb
jg
repnz
cli
sub
inc
rcrl
aaa
mov
clc
into
mov
mov
jecxz
jb
test
or
mov
inc
hlt
xchg
mov
cmpl
mov
xor
imul
pop
testb
pop
mov
push
push
mov
rorb
lock
pop
es
insb
push
insb
inc
cld
arpl
add
mov
pop
ljmp
mov
push
fdivrl
mov
mov
mov
fsubrp
or
or
mov
jge
aaa
cld
pop
daa
data16
sbb
push
decb
unpckhps
add
add
mov
stos
shll
out
jle
shr
push
test
shlb
mov
add
outsb
add
push
or
insl
inc
rcrb
dec
push
dec
inc
cs
decb
add
xor
mov
jmp
or
push
gs
push
or
jb
jns
cmpsb
std
adc
jae
bound
inc
push
xchg
call
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
adc
imul
arpl
or
adc
ret
or
jb
fs
out
mov
pop
xor
outsl
insl
bound
outsl
js
cmp
ds
push
imul
outsb
cmp
andps
outsb
je
mov
ja
je
add
dec
add
dec
cld
sub
clc
hlt
lock
in
dec
dec
dec
dec
aam
int3
enter
dec
sarb
mov
test
dec
dec
dec
movsb
mov
dec
dec
xchg
nop
mov
test
dec
dec
je
insb
push
fs
pop
pop
dec
dec
dec
dec
push
push
dec
dec
dec
dec
dec
dec
inc
inc
cmp
dec
dec
dec
dec
xor
sub
dec
dec
dec
dec
and
sbb
dec
dec
dec
dec
adc
or
and
dec
add
cld
sub
daa
daa
daa
daa
hlt
lock
call
in
daa
daa
daa
daa
aam
int3
enter
daa
sarb
mov
test
daa
daa
daa
movsb
mov
daa
daa
xchg
nop
mov
cmpb
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
xchg
xchg
xchg
daa
cld
sub
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
sarb
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
xchg
xchg
xchg
jo
fs
xchg
xchg
xchg
xchg
push
dec
inc
inc
xchg
xchg
xchg
xchg
push
dec
pop
pop
xchg
xchg
xchg
xchg
cmp
xor
xchg
xchg
xchg
xchg
sub
and
xchg
xchg
xchg
xchg
sbb
adc
xchg
xchg
xchg
xchg
or
add
leave
leave
leave
enter
hlt
lock
leave
leave
leave
in
call
leave
leave
aam
xchg
xchg
xchg
fcmovne
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
xchg
nop
xchg
xchg
xchg
xchg
mov
xchg
xchg
jl
je
xchg
xchg
xchg
xchg
insb
push
xchg
xchg
pop
pop
push
push
xchg
xchg
xchg
xchg
dec
dec
inc
inc
xchg
xchg
xchg
xchg
cmp
xor
xchg
xchg
xchg
xchg
sub
and
jb
nop
xchg
sbb
adc
adc
jb
or
add
xchg
xchg
or
sub
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
sarb
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
xchg
xchg
xchg
jo
push
xchg
pusha
pop
pop
push
mov
dec
dec
inc
cmp
cmp
inc
cmp
xor
cmp
cmp
sub
and
cmp
cmp
sbb
adc
cmp
cmp
or
add
mov
add
sub
hlt
pushf
pushf
pushf
pushf
lock
call
pushf
loopne
fcom
pushf
pushf
pushf
pushf
ror
enter
mov
rorb
inc
push
dec
cmpl
push
pop
cli
mov
pop
add
or
cmp
repz
adc
sbb
or
and
and
lahf
mov
imul
outsl
mov
sqrtps
sbbb
loop
dec
addr16
out
or
fs
test
fadds
push
push
sub
outsl
sahf
sbb
pushf
scas
push
gs
outsl
inc
and
sbb
cmpl
pop
or
jge
lods
movl
outsl
and
gs
xlat
out
mov
push
dec
inc
inc
dec
add
outsl
bound
jge
addr16
dec
push
inc
push
dec
pop
and
push
push
dec
sti
out
push
push
pop
sub
push
inc
dec
pop
dec
dec
dec
inc
push
das
cmp
inc
or
cmpsl
jp
jge
mov
call
cmp
movmskps
pop
inc
scas
jp
outsl
repnz
setl
push
lock
icebp
repnz
pushf
pushf
pushf
repz
cmc
negb
stc
cli
pushf
pushf
pushf
pushf
sti
cld
std
pushf
pushf
pushf
pushf
jmp
loope
pushf
pushf
pushf
pushf
jecxz
in
pushf
pushf
pushf
pushf
out
jmp
pushf
jmp
in
out
pushf
pushf
pushf
pushf
out
rcl
rcrb
aad
pushf
pushf
pushf
pushf
xlat
fcomp
ficompl
fstp
pushf
pushf
pushf
pushf
ffreep
rol
pushf
pushf
pushf
ret
pushf
pushf
pushf
enter
pushf
pushf
pushf
lret
int3
int
pushf
pushf
pushf
pushf
iret
mov
mov
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
cmpsl
test
stos
clc
pushf
pushf
pushf
stos
lods
lods
mov
pop
pop
push
adc
push
inc
bnd
ja
pop
adc
push
fisttps
cs
push
je
insb
jae
add
scas
fmull
or
mov
lcall
push
or
popa
jb
push
insb
add
adc
jle
pop
dec
loopne
dec
daa
or
enter
lcall
out
arpl
inc
js
gs
mov
add
mov
lahf
dec
sahf
or
or
inc
inc
bound
mov
nop
adc
aas
adc
or
push
inc
dec
inc
jo
leave
leave
inc
jnp
insb
mov
icebp
insb
std
push
or
dec
jne
dec
xchg
push
jb
jo
enter
jle
adcl
test
and
xor
jb
push
xchg
xchg
cmp
js
jg
pop
mov
sbb
fdivrs
orl
dec
push
outsb
xor
push
leave
mov
jbe
pop
gs
and
insl
nop
mov
sub
popa
outsb
gs
loopne
sbb
dec
jbe
stc
jno
lret
ja
cmp
sbb
pop
xchg
dec
mov
gs
xchg
scas
and
repnz
lock
xor
dec
jo
scas
ret
mov
fcmovnb
insl
jle
gs
subl
pop
rcll
scas
pushf
fcmovu
or
fs
hlt
scas
cmpsb
and
lahf
push
mov
imul
mov
mov
daa
test
xchg
add
lods
mov
inc
jne
jge
inc
inc
dec
shrb
xchg
test
xchg
add
inc
fdivs
push
adc
pusha
andb
push
xchg
push
push
jb
insb
push
nop
shrb
push
inc
fs
mov
add
xchg
mov
daa
or
sbb
fbstp
inc
je
fwait
adc
mov
push
popa
roll
aas
shlb
rorb
cmove
mov
adc
xor
xor
cli
shll
adcb
out
mov
mov
adc
mov
mov
in
call
loope
inc
push
stos
push
inc
mov
cmpsb
pusha
mov
pop
adc
popa
data16
sub
pop
jle
dec
daa
decb
xor
out
jo
xchg
and
xor
xchg
pop
mov
add
inc
cwtl
insl
push
push
gs
outsb
addr16
rolb
adc
cmp
mov
and
test
insb
push
test
popf
out
pushf
mov
push
xor
outsl
dec
pcmpgtb
data16
xchg
push
inc
cmp
pop
add
mov
pop
add
inc
loop
dec
xor
adc
jb
popa
fs
sub
xchg
je
mov
add
cmp
inc
insb
loop
pavgw
loope
mov
inc
mov
push
sub
loop
sbb
push
push
out
lcall
stc
mov
push
mov
jnp
sbb
push
loopne
sbb
or
push
cmp
add
and
mov
mov
js
sbb
xor
dec
push
imul
shrb
inc
push
push
roll
mov
lods
outsb
arpl
ljmp
pop
xor
inc
inc
ret
adc
repz
pushf
test
mov
add
scas
inc
jne
aas
xchg
mov
mov
in
sub
jle
xor
pop
ret
pop
cmp
aas
cmp
mov
jo
mov
pop
and
adc
mov
and
ret
mov
mov
mov
call
push
mov
outsb
mov
adc
add
sub
je
clc
pop
inc
push
push
jl
xor
or
mov
cmp
test
addb
sti
jge
mov
lret
data16
shlb
pop
dec
les
rorl
add
jmp
mov
test
or
xchg
jae
inc
xor
pop
dec
and
add
or
or
decb
push
cmp
je
add
adc
pop
or
leave
invd
sbb
and
sub
push
add
jno
mov
sbb
lock
out
sub
add
clc
add
rorl
jg
sahf
cmp
push
movsb
sahf
add
fnstcw
fsubrl
fildll
pop
mov
cmp
jne
or
sub
xchg
rolb
aaa
sub
stc
push
jg
and
sbb
pop
jg
ss
pop
cmp
jne
cwtl
cli
xor
pop
inc
pop
roll
neg
ret
pusha
pop
and
push
push
mov
cmp
fisttpll
pop
push
inc
ret
lea
fstpt
das
mov
xor
push
cmp
sub
inc
add
add
cmp
jg
outsb
xchg
into
fiaddl
sbb
and
fdivs
pop
cmp
scas
pop
inc
ret
je
hlt
or
pop
pop
scas
adc
addps
call
cmp
dec
add
or
cmp
jne
jge
push
shlb
or
mov
mov
mov
add
mov
fisubrl
rolb
push
enter
push
hlt
ljmp
mov
out
ss
xor
pop
xor
popa
mov
pop
mov
jmp
dec
push
mov
adc
dec
shrl
test
or
jl
jl
jmp
jbe
cmpsl
hlt
mov
adc
or
fcoml
dec
sub
es
cmp
lret
stos
roll
push
loope
dec
mov
ret
push
push
mov
jns
jne
xchg
imul
mov
adc
dec
int3
and
clc
dec
push
loopne
add
push
js
adc
test
outsl
inc
fdiv
pop
mov
sbb
fldpi
push
sub
adc
inc
das
lock
jne
out
or
aad
xor
out
out
xor
jle
aad
push
cli
jg
cmp
jne
mov
dec
adc
faddl
xorl
int3
icebp
add
fcomi
sub
into
mov
xor
mov
add
xor
notb
jb
sbb
push
cltd
cmp
jl
ret
mov
jl
imull
test
sub
push
inc
fsubs
mov
inc
mov
cmpb
inc
mov
adc
add
or
incb
leave
jmp
pop
ss
mov
out
test
pop
mov
add
and
mov
sarl
dec
call
or
mov
sub
dec
jne
jmp
test
rolb
add
jae
fcmovu
mov
or
sarb
ret
aam
adc
mov
ret
push
push
push
xor
sbb
cmp
jb
push
pop
decl
ljmp
jbe
add
mov
sub
jmp
cmp
jg
mov
lcall
in
adc
leave
push
outsb
cltd
rorb
pop
push
xor
dec
test
not
xor
jmp
jp
jo
dec
loopne
sbb
cmpl
pop
ja
pusha
movb
add
or
dec
inc
adc
add
or
xor
xchg
add
adc
in
movsl
mov
jne
daa
andl
push
and
fistps
ret
imul
add
push
add
mov
mov
clc
fdivr
mov
cmp
jg
pop
scas
add
push
sub
rcrl
loope
cmp
ret
ffree
ffree
ffree
pop
adc
add
aad
aam
cmp
add
aad
frstor
in
aaa
aad
ss
subb
inc
pushf
and
cmp
cltd
lods
push
jbe
inc
push
push
scas
mov
aaa
push
mov
or
lods
or
add
xor
ss
xchg
add
cmp
mov
sarl
pop
aad
xor
or
push
and
testb
out
insl
imul
and
mov
cmpsl
mov
sete
pop
outsl
icebp
adc
inc
xchg
lea
add
mov
sahf
mov
xor
and
dec
cmpsb
sbb
inc
cld
adc
xchg
mov
lahf
mov
push
rolb
pusha
sub
or
pop
mov
dec
mov
jg
nop
orb
xchg
and
les
dec
jb
push
adc
push
nop
jl
pop
push
adc
xchg
xchg
repz
xor
jle
push
mov
movb
push
subb
jl
inc
mov
and
in
add
or
popf
mov
push
xor
out
aas
mov
mov
push
cmp
adc
pop
dec
push
add
fidivrl
or
jge
dec
hlt
jne
ret
sbb
faddp
decl
pop
add
dec
xor
lock
insl
lock
setne
jmp
ret
in
sbb
xor
xchg
fmull
test
imul
adc
jno
or
sarb
or
mov
pusha
sub
mov
adc
adc
je
jmp
and
data16
or
adc
xor
daa
jg
imul
or
mov
sar
add
add
mov
and
mov
xor
je
notb
push
adc
and
mov
out
add
inc
mov
mov
mov
pop
rclb
xchg
dec
pusha
fstpt
out
mov
xchg
pop
int3
or
pop
inc
outsb
xorl
movsb
mov
lret
clc
test
pop
mov
repz
mov
lret
notl
add
sti
mov
and
and
sbb
push
sbb
mov
push
ja
add
push
out
ret
pop
ja
jae
jg
mov
or
movl
gs
call
add
out
inc
je
push
add
inc
js
mov
xor
aaa
pop
outsb
mov
not
mov
outsb
lss
fsubrs
mulb
adc
lcall
adc
and
or
sahf
sub
lock
xor
jmp
pop
lods
shll
andl
cmp
idivb
cltd
ss
lahf
or
mov
test
jp
mov
sti
add
add
je
pop
xchg
or
add
out
cld
out
lea
inc
xorb
adc
xor
push
cmp
push
add
mov
xchg
cltd
mov
cmp
int3
aaa
call
mov
jl
push
and
stos
xchg
movl
test
aam
xchg
rorb
ret
pop
inc
cmp
pop
das
or
mov
mov
xchg
mov
test
sbb
rolb
nop
jp
cwtl
cmpsl
fwait
movsb
std
jne
cmp
lock
test
int3
xorl
fistl
push
inc
and
pushf
jp
lock
inc
xor
jae
cwtl
fucomi
adcl
mov
push
addr16
or
add
and
and
inc
jmp
mov
dec
lods
adc
in
push
mov
lock
ret
movsl
pop
add
sbb
test
inc
sbb
pop
sub
lock
in
aaa
add
jne
push
inc
xor
sbb
add
push
adc
sar
add
xor
push
jp
or
divb
mov
push
or
outsl
dec
call
lea
mov
dec
mov
pop
pop
mov
ss
not
and
pop
sbb
shlb
mov
cmp
push
lea
pop
adc
hlt
jmp
push
sbb
push
fwait
xchg
mov
inc
sbb
data16
pop
inc
rcll
ret
mov
pushf
repnz
data16
call
push
inc
outsl
clc
sti
cwtl
stos
shrb
sub
mov
pushl
mov
clc
lea
fcomps
push
rol
cmpsl
jne
dec
pop
jg
loopne
nop
push
out
adc
mov
inc
dec
je
inc
imul
add
and
mov
mov
clc
in
mov
pop
mov
pushf
jb
add
cmp
pop
jae
pop
cmp
jbe
or
mov
into
frstor
add
aad
jg
sub
roll
push
mov
mov
sbb
jne
inc
cmp
cmp
jge
sbb
sbb
and
xor
or
inc
scas
outsl
jle
aam
jne
mov
mov
jo
lcall
nop
pxor
push
add
mov
int
imul
mov
loopne
add
call
jo
xchg
fs
push
hlt
lock
cld
push
jnp
fdivrp
imull
shrl
call
das
dec
and
sbb
jno
dec
or
xor
mov
add
cs
scas
loopne
fdivrs
pop
rclb
xor
pop
inc
je
mov
or
ret
cli
sahf
cld
call
test
jne
test
je
test
jne
lret
push
jp
mov
mov
imul
xor
lea
mov
ds
sbb
test
dec
sub
mov
inc
mov
adc
push
mov
adc
ja
pop
ret
mov
fs
in
adc
lret
mov
jg
sub
sub
mov
mov
ljmp
rep
or
out
adc
movsb
inc
pop
pop
pop
xchg
stos
je
hlt
fisubrs
das
xchg
lret
jg
mov
xor
ss
pop
outsl
xor
jne
rorb
jne
cli
jb
mov
add
dec
add
sbb
mov
push
push
sbb
add
xchg
fstpl
jno
pop
jno
out
out
sub
pop
sahf
ret
jmp
or
pop
cmc
add
lret
nop
adc
lods
pop
rcll
or
das
or
or
sub
and
outsl
decb
sbb
or
sub
sub
je
push
sahf
xchg
ljmp
pushl
shll
es
mov
cmpsb
push
je
inc
out
sti
outsl
pop
xchg
xchg
mov
cs
mov
pop
pop
sub
sbb
lods
or
loop
loopne
enter
pop
mov
jne
call
sub
and
add
push
adc
add
test
orl
and
scas
das
sbb
nop
inc
jbe
imul
pop
mov
mov
add
adc
mov
mov
shll
push
adc
mov
jmp
pop
adc
cmp
xor
into
test
push
sbb
les
loop
push
and
out
or
push
or
or
loope
push
sbb
pop
push
push
mov
adc
jns
movb
pop
adc
adc
or
rorb
pop
mov
cmpsl
xchg
push
push
xchg
push
or
es
ds
add
jge
adc
or
sub
lods
cmp
je
stos
test
clc
sub
xchg
stos
sub
outsl
or
decb
icebp
notl
add
xchg
es
bound
hlt
push
xor
and
lods
jmp
inc
enter
cmp
sub
sub
mov
xor
cmpsb
lret
xchg
outsb
pop
sub
outsl
scas
call
cmpb
or
lret
psubq
xchg
pop
mov
rep
sbb
mov
or
ficompl
xchg
sbb
mov
sub
xchg
data16
cmp
ja
imul
sub
sub
ret
and
add
fnsetpm(287
pop
dec
jle
cmp
jg
mov
cmpb
sbbl
sbb
je
xchg
ret
and
mov
dec
ror
add
cmp
pop
ret
pop
add
jne
lea
mov
push
add
and
cltd
mov
insl
sub
sub
cmp
push
iret
ss
hlt
in
inc
scas
xchg
xchg
sub
sub
pushf
lea
and
stos
inc
xorl
sub
push
out
xchg
xor
mov
sbb
imul
or
mov
repnz
lcall
sub
sbb
sbb
popf
mov
icebp
xchg
flds
push
push
ret
cwtl
loope
jl
bound
cmp
jbe
mov
aad
test
mov
or
jmp
xor
inc
inc
cld
lods
pop
test
cmp
add
cld
jg
cmpsl
jl
and
call
add
xlat
mov
js
mov
add
or
ja
pushf
cltd
inc
push
mov
repnz
dec
mov
dec
cmp
stos
fcomps
push
leave
sbb
loopne
or
xchg
push
and
mov
outsb
mov
aaa
fistpll
mov
or
je
mov
inc
je
mov
dec
maskmovq
mull
jl
mov
mov
and
popf
lock
mov
adcb
or
dec
mov
mov
sub
loopne
mov
inc
iret
pusha
fwait
jmp
dec
lcall
mov
and
je
lahf
jle
pop
out
xchg
pop
and
cwtl
daa
es
and
out
nop
push
cmpb
lret
or
dec
xchg
adc
mov
cmpsl
push
or
arpl
inc
push
sahf
repnz
iret
in
ljmp
pop
add
sahf
test
jmp
jmp
imul
paddb
out
out
ljmp
fdivrl
push
add
cmp
xchg
and
xor
xor
movsl
pop
push
lea
mov
push
mov
loopne
pop
mov
mov
pop
das
cltd
clc
push
jbe
push
push
nop
jg
add
insl
dec
test
add
sar
ja
int
cwtl
daa
or
cltd
rclb
add
adc
repz
cmp
ret
push
jle
outsb
jge
and
clc
add
inc
dec
cld
lea
or
sub
inc
push
rcll
dec
jmp
add
aaa
add
addl
das
mov
cmpsb
pop
movsl
cmpl
push
hlt
insl
enter
and
inc
cmp
outsl
mov
jb
xor
nop
pop
xchg
adc
test
jg
sub
xor
stos
or
jne
jg
addb
or
jge
mov
neg
jmp
or
je
dec
sub
decb
mov
into
mov
int3
or
adc
enter
mov
dec
jg
dec
mov
stos
cmp
jne
pop
pop
aam
mov
cld
mov
sti
mov
add
repnz
cs
mov
repnz
adc
add
push
sarb
dec
push
xchg
jle
fisttpl
andb
cld
or
or
xchg
mov
mov
sub
shlb
mov
mov
fsubrl
mov
dec
int
sub
pop
add
ja
add
ja
movswl
jle
mov
jne
sub
pop
sbb
xor
shll
add
xchg
idivb
popf
mov
xor
lods
push
mov
dec
dec
adc
and
inc
dec
inc
dec
lods
or
xor
xor
divb
sbb
jo,pn
ret
std
mov
jg
ret
dec
aam
cmp
sbb
sbb
outsb
mov
outsb
je
mov
stos
neg
imul
adc
sbb
stos
jmp
mov
pop
stos
loop
jbe
mov
inc
stos
pop
pop
inc
clc
dec
ja
pop
and
or
mov
ret
push
push
dec
sbb
sub
pop
jl
dec
sub
leave
mov
mov
mov
jbe
dec
fisubl
es
adc
mov
decl
subb
mov
div
mov
in
mov
inc
test
jne
sbb
mov
insl
in
stos
xor
call
add
mov
or
jne
pop
fdiv
ret
xchg
jmp
loope
repnz
or
repnz
xor
cmp
mov
add
lea
add
iret
mov
je
adc
inc
lock
push
cmp
add
sbb
inc
jmp
or
mov
inc
loop
ret
push
test
cmp
sub
mov
and
mov
sti
mov
add
and
and
adc
and
sub
inc
sub
xor
inc
es
cmp
or
sub
sub
orl
sub
xor
add
call
adc
stos
and
hlt
lods
xor
cltd
inc
mov
pop
push
adc
sahf
mov
mov
adc
sti
mov
mov
scas
push
pop
mov
scas
scas
cld
insb
adc
adc
das
ljmp
scas
or
inc
xchg
inc
insb
scas
or
mov
pop
adc
scas
cmp
or
push
bnd
mov
loopne
sbb
loopne
mov
add
out
xchg
mov
pop
adcl
scas
lret
cmp
testl
mov
dec
jne
cmpl
add
movb
mov
or
sub
rclb
enter
jmp
out
fabs
push
rolb
repz
inc
pop
frndint
rcr
scas
fs
in
out
mov
jge
fwait
mov
testb
je
fidivl
pop
fbstp
lea
mov
inc
sub
mov
shr
and
mov
xor
jmp
pop
fadds
sahf
or
fdivs
jb
mov
or
idiv
fistpl
daa
cmpb
jb
movb
js
decb
mov
cmp
jmp
data16
pusha
xor
jmp
mov
cmp
inc
xor
push
test
shr
mov
push
add
cmc
add
fs
ljmp
add
jp
rorl
jo
mov
rorb
neg
addl
or
adc
or
push
adc
jl
mov
push
inc
sub
mov
loopne
jae
dec
add
cmpsb
mov
fildll
cli
mov
push
fimull
cmp
mov
shll
mov
sbb
xor
sub
mov
and
jne
dec
sub
cmp
enter
and
pop
lock
push
ljmp
enter
cmpb
pop
xor
divl
pop
jmp
loope
rclb
sbb
inc
mov
test
mov
mov
push
mov
mov
fwait
push
je
fldz
jg
cmc
pop
cmpsb
mov
ljmp
dec
ljmp
icebp
fisttpll
xor
pusha
jne
inc
fnstsw
cmp
je
and
fistpll
sub
pop
add
jg
test
mov
sahf
xchg
push
mov
add
push
mov
add
loopne
adc
aas
jmp
fstpt
ret
frstor
or
add
insl
and
add
popa
jmp
jl
cmp
mov
add
or
fimull
jbe
fiaddl
jmp
aaa
mov
negb
jg
movsl
stc
es
push
inc
imul
push
adc
cmp
aaa
add
clc
and
rolb
fsubr
push
int3
push
out
xor
lods
rolb
xchg
mov
push
rolb
pop
pop
add
xchg
sahf
and
mov
pop
xor
fsubs
sbb
aam
adc
xchg
push
fldt
fstpl
fwait
out
push
sub
fs
out
mov
xchg
xor
ret
push
in
fldl
inc
js
adc
adc
mov
xor
push
dec
and
add
inc
test
sbb
add
clc
xchg
or
repz
cmp
jae
or
cmp
inc
stc
inc
cmc
dec
push
or
shrb
out
add
shrb
pusha
jb
ret
data16
adc
cmp
or
xor
fstpl
fwait
and
dec
js
loop
adc
lret
movsb
dec
filds
sahf
push
rolb
movsl
or
mov
in
push
cmpl
cmp
and
jg
imul
loop
add
adc
movsb
fimull
mov
ficoms
lret
push
cmp
int3
cmp
and
jbe
rcrb
pop
enter
add
sub
inc
and
fldenv
mov
sbb
push
in
nop
add
jp
mov
pop
pop
fwait
out
cwtl
sub
idiv
add
les
xchg
adc
cmpsb
adc
jg
mov
ret
aad
aam
dec
enter
addb
adc
ja
and
jb
or
inc
imul
jb
sti
insb
je
mov
ja
adc
outsl
daa
add
inc
dec
jne
sub
dec
mov
or
cmp
imul
jns
sar
cmp
add
cli
add
repnz
ds
ds
pop
mov
pusha
ret
or
add
lret
std
std
push
int3
xor
mov
pop
in
cmpsb
push
cmp
and
push
dec
call
push
dec
sub
dec
in
test
jg
or
ljmp
in
or
lods
inc
add
mov
fdivr
mov
stc
mov
add
jl
addl
pop
xor
add
jl
roll
xchg
cltd
mov
insl
mov
decw
cmpl
fs
fdiv
mov
jnp
sub
pop
mov
pop
sbb
mov
test
sarb
xchg
sub
lock
mov
xchg
cmpsl
mov
jbe
dec
cmp
fistpl
cmp
jb
adc
mov
leave
mov
xchg
sbb
clc
inc
lahf
sub
roll
hlt
mov
add
dec
loopne
mov
popa
sbb
mov
jge
adc
iret
cmp
mov
cld
mov
xlat
or
loopne
nop
adc
out
into
fcompl
sub
push
or
sub
movsl
shr
adc
sbb
push
test
mov
adc
js
adc
fstpl
lret
sub
mov
and
call
mov
stos
add
xor
scas
jle
fiaddl
push
xchg
adc
xor
xchg
push
fmull
out
jo
xchg
ret
test
loopne
pop
push
hlt
push
push
jb
pusha
in
subb
jp
jmp
or
in
mov
addr16
cmp
xchg
mov
adc
push
cmp
orb
ljmp
dec
sti
je
mov
dec
push
outsb
inc
inc
hlt
fistpll
or
push
lods
in
add
fwait
imul
jle
pushl
add
push
lea
or
xchg
repnz
fildll
in
add
jecxz
in
insl
or
push
jge
call
ljmp
daa
popf
pop
in
adc
cli
mov
mov
in
xchg
cltd
adc
sub
rcrl
dec
sub
iret
dec
test
fsubrs
sahf
lods
andb
pop
sub
push
mov
cs
int3
popf
mov
pusha
insl
je
or
popa
sti
xor
imul
enter
sti
setne
cmp
fs
mov
mov
cmp
add
add
cmp
lcall
ljmp
dec
adc
push
xor
idivl
add
ret
mov
sbb
and
xchg
inc
push
sub
fsubs
jb
inc
addr16
in
dec
ds
jmp
mov
mov
insb
icebp
sbb
mov
je
or
inc
cmpb
lds
lahf
sbb
dec
add
mov
enter
cld
stc
mov
jns
add
add
dec
loope
sbb
pop
aam
and
mov
add
push
jge
sbb
cltd
cmp
mov
inc
add
addr16
sbbb
jp
leave
push
mov
mov
ss
jge
pop
push
pop
or
xchg
scas
out
repnz
das
insb
cmc
int3
stos
pop
xchg
shlb
cmp
and
sti
push
add
sub
jae
jmp
mov
mov
stos
sbb
dec
sbb
pop
loop
jl
xchg
add
fmulp
cmp
xchg
pop
imul
mov
leave
lret
push
rorb
push
or
or
or
or
xor
push
pop
dec
xchg
rolb
or
or
out
lea
ss
sahf
cmpsl
fnstcw
dec
sarl
mov
ret
filds
outsb
and
push
mov
sbb
clc
addb
jp
add
inc
push
sbbb
mov
shll
popf
dec
push
in
adc
lea
scas
nop
out
jmp
mov
js
cmp
lods
adc
hlt
dec
or
cmp
adc
jmp
sbb
sub
lock
inc
sub
sub
xchg
xor
add
leave
mov
in
dec
je
add
jmp
out
aad
jno
pop
pop
push
mov
pusha
out
mov
cmpsl
movsb
mov
rorl
push
pop
cs
pop
inc
loopne
xor
push
push
lahf
negl
sbb
xor
dec
jg
je
in
fildl
or
push
jmp
or
fwait
call
pop
je
jmp
push
jne
mov
lods
and
ds
out
sub
mov
jmp
add
adc
shlb
inc
cmp
addl
lret
out
in
push
mov
lret
or
and
jmp
sbb
or
add
sub
loope
orb
repz
add
popa
call
out
add
xor
in
lret
in
and
push
sub
adc
loope
daa
sub
jbe
ficoms
cmp
lods
mov
lock
rorl
scas
ja
add
pop
mov
ja
adc
sbb
cmp
mov
mov
xor
aam
jnp
jbe
cmpsb
add
inc
dec
add
push
cs
scas
xor
imul
xchg
or
call
call
sub
push
scas
jno
loopne
popf
imull
enter
cmp
pop
and
pop
imul
sbb
in
mov
sbb
jmp
sub
cmp
lea
cmp
mov
shll
insl
mov
adc
pop
push
cmp
cld
adc
inc
mov
mov
inc
aam
arpl
cwtl
xor
cmc
dec
das
push
dec
bound
adc
in
add
mov
jnp
adc
clc
xchg
mov
lret
push
add
push
sub
imulb
mov
lea
pop
mov
and
and
bound
jg
cmp
je
mov
sarl
outsl
rorb
pop
repz
add
filds
mov
in
mov
sbb
lret
push
pop
inc
ljmp
add
mov
xchg
and
jno
clc
dec
push
sbb
xchg
lar
aaa
jo
sti
mov
mull
cltd
xchg
or
cwtl
cmp
xchg
pop
xchg
mov
xor
xor
repz
pop
test
and
scas
into
cmp
and
and
repz
and
lock
adc
jbe
sbb
add
and
jno
and
and
iret
les
hlt
test
jl
push
inc
push
cmp
inc
hlt
add
jne
sub
pop
inc
fldl
imul
incl
and
sub
je
dec
mov
pop
sbb
je
jmp
mov
jmp
push
push
push
sahf
movsl
notl
jbe
push
inc
out
clc
jle
out
xor
aad
add
mov
or
add
jnp
add
jl
pop
mov
pushf
inc
dec
adc
aad
adc
mov
mov
pop
and
sub
je
pop
aad
sbb
stos
sub
jmp
xchg
jno
ss
jne
mov
scas
cmp
jl
jne
cmp
jg
sbb
push
jmp
push
cltd
xor
sub
add
sub
cmpsl
stc
imul
add
stos
dec
xor
dec
cld
add
testl
popa
dec
cld
gs
xchg
pop
cmp
scas
fcomp
sub
test
cmpl
es
popa
call
mov
fs
jl
call
enter
or
mov
addr16
das
inc
pusha
cmp
mov
fmull
cltd
mov
adcb
ljmp
jbe
adc
lret
in
fidivrl
or
jg
mov
shrb
mov
test
cmp
and
popf
lret
or
and
cmp
or
nop
cmpsl
repnz
in
fnstcw
cmp
pushaw
repnz
jb
and
xchg
jge
es
in
mov
ljmp
call
lock
in
cmpl
loopne
push
mov
les
jge
fiaddl
in
ja
flds
cmp
rclb
pop
data16
mov
insb
ds
add
cmpb
jle
fwait
mov
fs
jne
mov
add
or
repz
xor
mov
xor
jmp
mov
stos
and
stc
jne
bound
mov
jl
imul
ret
cmp
xchg
xchg
gs
adc
ss
sbb
das
jle
mov
push
fsubs
fsubrs
sbb
jne
mov
dec
notb
and
out
daa
mov
dec
jns
cwtl
test
or
jecxz
inc
xchg
add
out
gs
fnstenv
xlat
fs
jl
inc
dec
pop
repnz
subl
push
decb
sub
mov
or
and
test
scas
mov
mov
and
sub
add
xchg
and
xchg
cli
test
jp
sub
addl
cli
and
lcall
xor
or
mov
dec
mov
mov
out
je
test
fs
add
add
jb
daa
add
sbb
roll
push
and
cmp
decb
xchg
bound
ja
loope
push
inc
jne
adc
subb
push
xor
add
push
or
adc
les
sub
xchg
mov
add
out
mov
test
mov
cmpsb
or
cmp
pushf
push
pusha
adc
mulb
testb
mov
jns
hlt
aas
add
adc
outsl
mov
dec
sbb
scas
add
ficompl
addr16
loop
add
or
aas
jbe
or
fldl
fcomps
fisttpll
fmul
fstpl
fwait
jmp
sbb
xor
rcrl
add
add
sti
push
lock
pop
imul
push
sbb
jmp
in
das
les
incl
or
je
push
lret
xchg
test
inc
cltd
and
inc
aaa
mov
lea
push
jns
ret
enter
jg
lods
mov
cmp
xor
and
pop
xor
test
mov
sbbl
addb
fadd
adc
mov
push
hlt
xor
lods
mov
cmp
or
subb
pop
js
nop
leave
daa
mov
push
jnp
dec
sbb
lods
out
add
cmp
in
pop
or
or
mov
loopne
dec
lea
dec
push
daa
mov
pop
pop
pop
mov
enter
mov
add
movl
decb
sti
or
test
add
push
cld
xchg
push
mov
in
add
loope
out
or
dec
call
sbb
sub
call
mov
fdivl
sub
mov
jge
add
jl
je
xchg
cmp
icebp
or
push
adc
adc
add
push
adc
js
aaa
cmp
sbb
sub
sub
inc
jnp
inc
pusha
pop
inc
addl
loope
push
xor
jmp
mov
in
xlat
test
mov
push
sarb
bswap
push
icebp
fcmovb
jbe
pop
sarb
add
out
mov
pop
push
xor
dec
aaa
lret
cmpsb
pusha
xor
hlt
push
push
enter
or
dec
pop
addl
xor
jae
or
pop
jns
nop
nop
arpl
cltd
in
clc
test
push
fwait
es
dec
add
or
repz
jmp
jb
mov
imul
sbb
je
mov
push
cmp
pop
sahf
mov
push
test
test
mov
mov
sbb
loop
enter
ss
clc
lds
stos
add
jge
adc
fmull
pop
cli
lahf
pop
adc
call
xchg
add
mov
jg
cmp
add
jmp
mov
push
repnz
xor
xchg
out
je
jne
ss
or
and
nop
in
in
jle
mov
shrl
mov
add
mov
addr16
pop
add
scas
add
test
loopne
jmp
pop
jecxz
jl
ds
pop
mov
test
fisubrl
or
push
xchg
sbb
mov
add
out
repz
test
dec
inc
pop
shlb
adc
and
xlat
xor
push
les
jmp
sub
outsb
mov
mov
adc
std
mov
mov
inc
push
repz
and
xchg
lods
aad
mov
loopne
nop
leave
inc
jae
cld
and
sub
push
fwait
mov
add
mov
insl
insb
pusha
pop
jae
cmp
clc
or
and
or
out
mov
test
mov
fs
out
push
fiadds
and
mov
jae
cmpsl
push
inc
push
mov
sarb
lret
les
sahf
stc
cmc
push
or
push
lea
push
mov
cwtl
js
imul
or
pop
dec
sub
loopne
adc
int3
pop
mov
add
loopne
hlt
test
xchg
adc
push
dec
leave
mov
mov
mov
inc
or
pop
call
xor
js
inc
xor
inc
add
jo
pop
fdivl
adc
mov
sub
les
and
pop
pop
lahf
loope
bound
lods
pop
faddl
in
test
daa
add
inc
jns
add
push
adc
dec
scas
or
push
dec
or
cwtl
mov
test
leave
sti
pop
adc
pop
popa
or
out
ja
jb
nop
jnp
adc
xchg
test
stos
xchg
in
xlat
pop
clc
xchg
mov
loope
js
subl
js
fwait
mov
xchg
add
push
or
and
faddl
cmp
jg
cmp
out
jbe
xor
sbb
jne
sbb
jns
jecxz
push
add
js
sbb
push
sub
mov
in
push
jecxz
jo
jo
pop
cwtl
decl
push
ret
push
lock
std
dec
cmc
sar
lret
adc
ljmp
vunpckhps
cld
jmp
push
sbb
mov
sub
leave
push
out
popa
adc
pop
outsb
ret
unpckhps
xor
mov
jmp
jmp
pop
cld
das
sub
mov
and
iret
cmp
adc
in
pop
inc
lods
xor
movb
mov
or
jbe
push
push
in
push
inc
ds
loopne
in
dec
loopne
test
loope
jns
scas
les
push
test
pop
dec
cmp
insl
add
cltd
push
jne
push
leave
jo
push
icebp
and
imulb
fs
loopne
xchg
insl
mov
pop
nop
jg
pushf
push
push
cmp
je
jmp
mov
jl
cmpl
xchg
xor
and
aaa
ljmp
add
imul
int3
push
ss
leave
lock
mov
lcall
or
mov
mov
aam
inc
fdivr
pop
cld
cmpl
cmp
mov
sub
mov
xchg
or
jae
pop
outsb
inc
or
adc
adc
cwtl
add
and
das
daa
in
adc
fs
decb
add
pop
adc
add
mov
gs
pop
jnp
jae
or
enter
mov
lods
aam
fadd
push
adc
inc
jle
jecxz
lea
outsb
mov
shr
sub
in
jb
movsb
test
xchg
dec
sub
add
inc
xor
dec
int3
jb
push
test
inc
sub
mov
mov
lahf
in
dec
inc
push
lock
mov
mov
add
sub
push
push
push
aad
sbb
and
cmp
lret
adc
ret
dec
push
pop
ret
hlt
add
mov
nop
mov
lcall
in
adc
push
cmp
add
jbe
sbb
lock
cltd
movsl
xor
pusha
mov
pop
dec
sub
shlb
jns
mov
test
test
pop
add
cld
mov
pop
flds
adc
mov
fldl
cli
mov
enter
cmc
loope
out
rcrb
fsubrs
jns
push
jle
int3
mov
and
mov
mov
add
rorb
add
lds
adc
sbb
out
add
cmp
sbb
xor
mov
test
or
adc
adc
mov
test
adc
jo
js
fbstp
daa
cmp
xor
int
mov
push
loop
xchg
pop
imul
pusha
and
mov
jae
adc
rorb
les
ds
out
das
add
and
mov
push
adc
insb
sarl
add
int3
mov
cmp
jne
cmp
call
das
call
or
fildll
adc
mov
inc
pop
enter
push
inc
jp
jae
or
jbe
test
stos
imul
call
adc
ja
xor
outsb
or
inc
dec
push
ss
adc
xchg
xchg
inc
mov
fistpll
jno
push
fwait
pop
push
stc
cmp
shl
bound
roll
andb
jb
inc
mov
dec
jmp
dec
test
jl
mov
xor
leave
or
sub
lods
incl
and
or
inc
pop
imul
push
mov
jmp
inc
cmp
fmuls
add
dec
iret
je
orl
popa
pop
inc
xor
cmp
daa
xchg
jne
aam
shr
sub
cmp
jle
push
sub
inc
mov
push
pop
cli
xor
test
jg
adc
ret
jmp
lds
and
mov
ret
add
xor
pop
cmp
jl
das
lods
adcl
cmp
inc
inc
inc
jge
mov
mov
or
das
jns
addb
or
pop
in
and
cmp
jge
pop
mov
push
jl
jne
sbb
js
push
dec
data16
ret
xchg
jmp
stos
or
cltd
in
stc
mov
pop
xchg
add
add
aam
add
dec
xchg
rcrl
insb
faddl
stc
push
jle
adc
sahf
jp
ret
and
add
lds
dec
mov
mov
loop
pop
pop
add
jle
repz
push
cmpps
rolb
jno
lea
ret
stc
icebp
mov
mov
jecxz
aas
xor
icebp
pop
push
mov
into
arpl
fiadds
or
sub
sub
push
daa
sbb
jb
push
out
pop
and
insb
rclb
sysexit
loopne
cmp
dec
test
sbb
imul
sbb
imul
push
imul
addl
mov
inc
aam
mov
pop
jne
sbbl
jge
adc
ss
pop
cmpsb
or
lret
adcl
push
add
or
mov
push
mov
test
jnp
adc
sarl
xchg
or
dec
test
pop
sub
cmp
add
xchg
je
scas
ret
mov
roll
sbb
loopne
push
sbb
call
test
iret
add
insb
sub
inc
sub
sbb
pop
je
sub
std
lds
ficomps
pusha
test
jo
das
dec
lea
inc
inc
jmp
jmp
cwtl
xchg
jnp
cmp
andb
inc
cmp
dec
movd
sub
cmpb
or
or
cmpb
xchg
jb
sub
push
mov
inc
lock
js
int
lods
lcall
pop
fwait
es
push
dec
clc
sub
aaa
in
mov
ret
sub
mov
sub
sbb
xchg
lock
jbe
sbb
push
stos
adc
not
mov
adc
inc
das
ficoml
lret
addr16
les
pushf
pop
and
adc
fiadds
mov
inc
inc
jne
jg
loope
add
jge
lock
fdivs
push
jmp
mov
pop
sub
jb
inc
mov
ret
lds
stos
sbb
lret
jne
add
neg
dec
cmp
jge
pop
or
pop
jne
pop
popl
xchg
addr16
ret
pop
loopne
les
or
inc
add
add
mov
rorl
sbb
dec
mov
shlb
sub
mov
out
fisttpl
mov
mov
das
cld
pop
sbb
rep
pop
cmpl
add
movlps
movb
xchg
dec
aaa
hlt
punpckhdq
data16
mov
push
in
lock
sbb
cwtl
pop
push
test
sbb
out
call
jne
push
scas
ljmp
mov
iret
adc
pop
imul
fcoml
cltd
in
cs
lock
mov
xchg
pop
inc
subb
sub
jb
push
shlb
pop
movsb
and
call
mov
cmp
mov
push
or
in
in
mov
das
mov
sbb
pusha
fisubl
cpuid
shr
mov
daa
int
push
and
fcomp
xlat
ds
cmp
in
mov
sarb
nop
dec
fwait
int3
inc
pushf
sub
mov
dec
mov
hlt
xchg
add
enter
add
cli
test
cmp
add
insl
xchg
add
aas
ret
nop
pmulhuw
shlb
push
clc
mov
in
outsb
ds
push
mov
add
add
in
sub
or
ror
iret
loope
int
ljmp
pop
out
popl
lock
and
das
fs
iret
mov
add
fs
daa
dec
cmpsb
cmp
pop
jo
add
push
loop
jmp
mov
adc
add
sub
push
ja
sbb
push
dec
mov
or
push
or
or
ucomiss
lock
adc
lods
sbb
jmp
push
cmp
cltd
sub
adc
adc
jmp
or
jnp
jns
cmp
out
test
ljmp
arpl
pop
roll
cltd
add
in
sbb
lds
popf
insb
inc
loope
pop
gs
arpl
sbb
add
xor
call
pop
orb
call
add
jge
loope
sbbb
push
sub
push
lock
fwait
mov
test
imul
pop
adc
push
push
outsb
imul
pop
xchg
test
sbb
out
mov
cmovg
decl
push
dec
outsl
fs
gs
outsb
outsw
fsts
cli
das
mov
xor
rol
mov
and
in
adc
adc
cld
lcall
add
inc
jmp
pop
pop
ret
pop
ja
or
clc
adc
or
inc
rorb
jne
movsb
mov
test
pop
ret
js
fstps
js
fmuls
sub
or
add
in
adc
mov
jge
test
test
call
jl
lea
cmpl
in
mov
clc
push
and
adc
enter
push
jmp
cmp
inc
lea
push
inc
ret
sbb
add
mov
jnp
push
sub
imul
cmp
ret
popf
sub
xlat
jbe
arpl
clc
xchg
adc
inc
in
mov
rorl
out
out
jg
clc
call
and
push
add
clc
out
sub
data16
or
movsb
fst
cmpsl
paddsb
sub
mov
cmp
ljmp
and
scas
jb
insb
add
push
jecxz
add
pushf
xchg
adc
mov
xor
sbb
loop
out
mov
ret
cli
test
fists
add
loopne
dec
call
push
cmp
add
and
call
stos
adc
inc
rolb
icebp
ljmp
cmp
mov
loopne
dec
insb
ret
inc
sbbb
inc
bnd
scas
cmp
adc
push
push
jae
sub
push
sub
pop
arpl
jne
mov
and
xor
cli
sbb
push
jo
ljmp
lock
inc
and
pop
and
call
dec
ret
xchg
ret
les
mov
cmp
mov
in
mov
push
cmp
and
repz
loopne
imul
jne
out
mov
movzbl
cld
pop
sub
cmpb
test
and
stos
daa
int
push
adcl
imul
and
inc
out
or
cmp
push
addb
xchg
add
sub
shr
bound
loopne
fnstenv
mov
mov
movl
push
mov
inc
iret
fcomip
or
push
lock
mov
or
or
cmp
testb
loop
mov
jp
and
lea
aaa
xchg
cmp
cs
push
adc
std
lret
dec
imul
push
sbb
std
sar
shlb
inc
ds
mov
jp
push
decl
mov
push
in
mov
mov
aas
mov
add
sbbb
fcmovnbe
or
xchg
out
cld
jae
popa
loope
mov
pop
jmp
cltd
loope
inc
les
xor
mov
dec
mov
pusha
enter
in
dec
cs
sbb
popa
dec
pop
rcr
sbb
mov
jl
xchg
cmp
stos
mov
aas
and
insb
and
pop
xchg
or
cmpsb
or
or
ret
les
sarb
mov
jmp
adc
fwait
jne
dec
pop
test
xor
inc
jne
mov
in
dec
mov
sub
in
jmp
inc
sbb
push
fimuls
and
sbb
jnp
xchg
ffree
fiaddl
ds
jo
stc
ret
mov
ret
push
or
insb
pop
or
in
lods
rclb
fbld
pushf
or
incl
mov
jle
or
mov
jmp
sbb
cmp
inc
jecxz
xchg
insb
fistpl
mov
xor
push
dec
clc
sub
fisttpl
and
dec
in
inc
shl
mov
cmp
sbb
sbb
adc
jo
int3
push
pop
xor
mov
push
cmp
push
push
mov
push
xor
push
sub
leave
daa
hlt
cmp
or
mov
mov
aas
add
jecxz
push
jne
cmp
jne
movsb
cmc
call
hlt
cld
mov
dec
dec
jle
xor
xor
mov
fnstcw
and
pop
jo
mov
movsl
inc
jmp
mov
test
lcall
adc
rep
je
and
test
adc
or
cld
push
adc
loope
sbb
pop
js
mov
jns
jo
jo
shrb
push
idivb
xor
fcoms
dec
mov
inc
enter
sarb
mov
or
cmp
mull
add
cmp
mov
sahf
out
or
push
fistps
and
mov
pop
push
pusha
push
jg
es
mov
jns
addb
cmp
mov
xor
cmpsl
stc
mov
jmp
cmp
out
es
adc
inc
ds
xchg
add
scas
adc
or
repnz
push
cwtl
mov
mov
iret
leave
test
adc
js
mov
inc
ds
cwtl
mov
lods
inc
fstpl
push
in
mov
call
push
js
inc
loopne
hlt
mov
ja
mov
push
popf
cmp
iret
aam
rclb
int3
xchg
xchg
out
in
dec
enter
les
out
cmpsb
fdivrl
mov
out
in
cmp
mov
pop
mov
insb
repnz
sahf
xchg
mov
lock
push
daa
iret
lods
jb
mov
mov
cmp
fcomps
daa
iret
leave
sbb
je
sub
fmulp
cmp
enter
pop
loopne
jg
add
inc
into
and
lods
jle
leave
sbbb
or
dec
add
js
mov
sarl
in
repnz
or
fidivrs
movsl
xor
cmp
pop
daa
sbb
dec
jb
and
call
mov
add
mov
sahf
sub
mov
lret
test
or
or
lahf
pushf
push
andb
js
js
mov
mov
adc
sub
push
xchg
arpl
cmpl
stc
cmp
in
cmp
push
cmp
loopne
popl
dec
dec
dec
cli
pop
sub
outsb
sbb
pop
inc
and
jmp
pop
dec
aam
jl
xchg
dec
or
aas
mov
enter
lea
dec
sbb
jo
cmp
stos
hlt
sbb
or
xor
adc
shr
add
in
enter
xchg
movsb
jl
xchg
popf
add
cmpb
dec
push
test
enter
in
ficompl
and
loope
daa
fadds
pop
cld
ds
jae
sub
jg
xchg
jl
add
jge
add
sbb
je
mov
inc
push
jns
pop
pusha
cld
clc
popa
mov
test
xchg
push
sets
int3
adc
lods
xchg
push
sbb
adc
sbb
repnz
xor
xchg
sar
inc
push
mov
pusha
nop
fistpll
std
outsb
addr16
loopne
nop
inc
push
in
call
cmp
push
adc
std
shll
movsb
or
cmp
lea
test
xchg
rcrl
push
into
enter
sub
and
pop
lods
pop
and
jns
and
insl
clc
adc
pop
cmp
jne
cmp
js
xlat
test
inc
pop
mov
mov
jl
mov
movsl
cmp
loopne
mov
sub
xchg
dec
xor
xor
mov
cmp
inc
and
dec
xor
and
and
sub
and
sub
xor
and
xor
cs
dec
jl
les
rorb
cmp
pushf
inc
test
das
xchg
push
lods
dec
adc
mov
dec
or
das
xchg
push
cs
fcoml
push
cs
cmp
pop
fdivr
inc
ds
xchg
pop
push
std
or
sub
pushf
pusha
mov
aam
je
inc
mov
push
fmul
xchg
fistpll
daa
dec
add
outsl
je
fs
test
push
jne
dec
btc
and
cmovns
iret
mov
aam
pop
outsb
dec
jb
pop
outsl
jb
std
and
inc
insl
jo
inc
jb
insl
push
je
pop
push
xchg
xor
and
and
or
jae
rcr
int
dec
add
pop
outsl
lahf
inc
pop
fcoml
outsb
lahf
fs
sub
gs
into
jnp
xchg
jno
out
add
and
cmp
jbe
sbb
dec
bound
push
es
stos
xor
outsb
or
sbb
add
cmp
mov
inc
daa
mov
dec
iret
repz
nop
sub
sbb
xor
out
imul
inc
xorb
pop
sbb
sahf
jnp
fs
es
adc
jnp,pn
in
xor
daa
sbb
inc
inc
or
jbe
sbbb
jae
mov
add
xchg
sub
aas
push
inc
mov
addr16
dec
pop
sbb
loopne
int3
adc
adc
lods
test
cs
jl
jl
outsb
sub
loopne
mov
push
mov
sti
inc
jb
lret
inc
add
ds
xlat
jge
or
adc
pop
and
test
xchg
xchg
pop
adc
push
add
add
or
sbb
outsl
aaa
dec
cmp
and
jb
or
lahf
faddl
inc
scas
inc
adc
and
mov
insb
movl
push
addr16
iret
test
add
add
inc
lds
sub
or
ljmp
pusha
adc
and
arpl
out
dec
dec
jle
outsb
pop
mov
cltd
xchg
pop
fsub
cld
int3
inc
rcrb
push
loop
jne
jae
in
xor
in
add
nop
imulb
in
pop
or
loopne
mov
pop
stos
add
mov
and
es
mov
in
test
and
test
aam
xchg
jmp
cmp
inc
jno
pop
or
pusha
lods
int3
fildll
or
pushf
gs
add
inc
pop
loopne
xor
push
in
enter
inc
in
jb
sub
or
mov
sub
scas
cmp
jg
gs
ficoml
sbb
xchg
cs
sub
loope
inc
pop
push
scas
sti
and
cltd
std
je
dec
je
sbb
cmpsb
xor
dec
fs
push
nop
es
dec
jbe
add
and
subl
clc
add
xchg
out
add
clc
mov
repnz
xor
mov
lahf
inc
hlt
pop
add
mov
sahf
inc
lock
je
mov
nop
add
arpl
push
add
repnz
adc
xchg
jnp
jae
fwait
data16
loopne
loopne
pop
push
hlt
add
push
push
sbb
add
mov
int3
or
xor
cmpsb
push
les
fcomp
enter
xor
shlb
inc
pushf
shrb
push
pop
rolb
pop
sub
mov
icebp
lea
push
inc
test
sub
jmp
push
push
push
push
push
je
jbe
mov
rcl
je
adc
sbbb
push
and
in
mov
push
cmp
inc
xchg
aam
imul
call
mov
add
clc
xchg
push
pusha
pop
mov
ret
add
jecxz
jle
cmp
push
push
repnz
add
fldenv
adc
pushf
xchg
jne
pushf
xchg
pop
imul
shr
mov
ret
push
mov
sarb
cmpsl
mov
mov
cld
test
les
adc
or
inc
add
ficoms
pop
andb
punpckldq
sub
or
test
data16
push
pop
les
addl
add
and
push
pop
movsb
mov
sbb
popf
or
rcrl
jl
inc
xor
lea
call
inc
mov
push
jno
in
enter
sbb
push
and
jnp
sub
xchg
inc
sub
inc
pop
imul
inc
xchg
dec
sbb
lea
xor
ret
in
xor
dec
repz
dec
jnp
push
jae
jbe
call
pop
in
jnp
es
cmp
daa
in
xor
jmp
mov
in
stos
test
or
jo
pop
fnstcw
push
shll
add
adc
int
and
inc
sub
or
fisubs
jmp
div
and
shlb
and
adc
add
jo
add
and
or
or
dec
add
xor
mov
imul
aas
pop
je
inc
push
adc
jmp
mov
cmp
mov
push
xchg
nop
inc
ss
lea
mov
cmp
lds
jmp
sbb
sbb
loopne
in
enter
in
loopne
popl
xor
leave
or
shlb
daa
lds
add
mov
pop
or
adc
and
rclb
in
pop
shll
ret
outsl
inc
push
mov
xchg
pop
aad
call
xchg
jmp
push
fldt
into
inc
inc
mov
mov
xor
cmpsb
push
add
xor
decl
push
adc
sub
jns
pop
add
or
clc
sarl
and
mov
xchg
cmpsl
sbb
les
xor
inc
xor
pushl
adc
sbb
jg
jl
sub
push
inc
add
mov
and
shrb
cmc
pop
clc
loopne
dec
dec
cmp
je
pop
jne
into
ret
push
mov
es
inc
add
or
sbb
pop
dec
or
int3
rcll
and
push
fs
or
add
sbb
mov
aam
jo
mov
adc
push
add
mov
outsl
inc
xor
pop
sbb
xchg
xchg
sarb
insb
adc
xchg
xchg
or
enter
add
int
push
dec
je
and
inc
out
push
adc
in
in
push
adc
out
inc
mov
imul
jnp
hlt
popa
andb
add
or
lea
filds
call
add
adc
jmp
sub
sbb
mov
ret
ret
add
push
cmp
cltd
mov
or
movsb
dec
pop
or
and
add
push
jno
push
cmpsl
lcall
shlb
filds
mov
ljmp
push
addl
sbb
mov
nop
sbb
jno
or
add
in
lds
mov
bound
ret
adc
inc
insb
add
addb
inc
push
add
and
fisttps
popf
pop
mov
sbb
adc
out
push
push
mov
pop
addb
outsl
scas
push
or
andl
add
cmp
ja
push
mov
push
into
sahf
cmpsl
stc
cmp
adc
sub
int
jns
cmpsl
test
popf
int3
cmp
jae
daa
out
sbb
push
cmp
add
xor
or
decb
adc
sbb
out
push
cs
dec
les
adc
in
xorb
nop
arpl
clc
add
add
fldt
sbb
mov
nop
xchg
dec
scas
inc
lock
jae
add
xor
add
inc
xor
andl
add
in
and
push
xchg
dec
push
loopne
imul
inc
mov
fmull
mov
es
mov
xor
aam
add
test
clc
rcl
push
mov
int3
jne
pop
and
ret
enter
insl
int
js
enter
decl
add
dec
je
jmp
fsub
in
xorl
mov
je
pop
sbb
and
cmp
mov
push
in
test
rcrw
pop
dec
sbb
jns
cmpsl
andl
in
jmp
sbb
pop
pop
popf
out
sahf
xor
sbb
push
add
mov
add
sarb
xor
flds
jno
pushf
dec
jb
mov
xchg
test
leave
dec
mov
cmp
fnstsw
into
add
popa
test
or
test
aad
rorb
and
test
pushf
lods
cmp
add
rcll
aaa
xchg
je
cmp
dec
mov
fsubrl
sub
inc
pop
and
test
adc
mov
add
mov
xchg
dec
divb
test
fs
cli
or
imul
adc
pop
jb
in
loope
jb
jns
sbb
sbb
ret
push
lods
fildl
lds
push
movl
and
in
xchg
mov
dec
and
and
pop
loopne
xor
nop
fst
inc
sbb
and
sbb
dec
shll
fists
loopne
roll
or
loopne
test
test
inc
aas
ja
xchg
cmp
mov
loope
in
adc
xor
out
mov
cmp
leave
neg
push
test
daa
stc
adc
je
imull
push
dec
push
inc
dec
cmp
pop
push
mov
mov
mov
xor
ret
cmp
mov
inc
mov
cmp
loope
aaa
pop
in
add
dec
and
gs
test
cmp
mov
fdivl
cwtl
pop
xor
xchg
aam
mov
loopne
movsb
and
lock
insb
push
addb
dec
repz
outsl
or
pop
dec
in
pop
jnp
out
pop
push
jns
xchg
mov
jnp
leave
sbb
sub
pop
pop
lock
cmpsl
inc
sbbl
les
shlb
aaa
pop
insb
in
and
or
imul
mov
mov
sbb
cwtl
popa
js
mov
xchg
orb
lods
or
mov
daa
and
andl
jbe
dec
mov
mov
adc
lcall
jo
imul
mov
and
test
xor
or
mov
jmp
adc
cwtl
mov
mov
and
shlb
jno
aas
mov
fidivl
pop
sub
mov
jo
hlt
add
inc
sub
pop
and
sbb
add
push
enter
push
mov
adc
ficomps
inc
cmpsb
gs
mov
or
or
loop
push
pxor
out
pop
xchg
xor
fstpl
fwait
scas
fimull
mov
pop
push
add
lea
cmp
lret
cmc
or
inc
jnp
dec
push
mov
and
push
out
dec
cmp
loopne
repnz
arpl
aaa
mov
dec
add
in
lods
adc
sub
jo
jns
ret
das
dec
jne
add
sbb
int3
and
add
stc
adc
and
inc
push
dec
jle
dec
ds
add
inc
outsl
jne
fs
mov
test
jmp
inc
dec
pusha
dec
addr16
test
rolb
invd
arpl
inc
fidivl
dec
pop
das
mov
loopne
aas
inc
arpl
aas
or
adc
and
inc
iret
push
inc
and
inc
rcrb
pusha
pop
pop
or
inc
pop
daa
inc
xchg
mov
shlb
and
je
clc
mov
in
and
mov
jmp
decl
ss
push
movsb
lahf
and
adc
cmp
push
dec
data16
inc
sti
inc
or
in
insb
das
add
test
xchg
adc
jmp
push
add
orb
sahf
stc
jo
imull
xor
sar
jne
aas
cmp
inc
and
push
pop
cmp
pop
adc
mov
and
movsl
mov
inc
les
addr16
mov
jb
sbb
push
dec
dec
xor
cmpb
cmp
push
inc
push
push
gs
push
mov
adc
shrd
andb
pop
mov
xor
add
lock
inc
sub
add
test
mov
pop
ds
dec
or
jg
jne
inc
push
pextrw
outsl
sub
fmuls
xor
mov
cmp
aas
lods
xchg
pushl
out
push
ret
out
jl
xchg
pusha
jae
mov
push
cmp
test
xor
xor
mov
push
xchg
add
fcomps
xchg
xlat
jo
cwtl
loop
jmp
lds
fdivp
sbb
push
js
jge
cmp
je
fidivl
ds
push
push
adc
shrb
cmp
inc
lea
fsubrl
and
dec
adc
mov
ret
ss
addb
mov
mov
clc
or
mov
call
mov
add
push
add
xchg
dec
cld
add
sti
insb
enter
std
out
daa
xor
rclb
inc
add
or
insb
jno
adc
jns
and
adc
repz
or
inc
add
mov
mov
out
icebp
das
in
dec
aaa
xor
mov
lock
add
xchg
inc
inc
shr
dec
idiv
adc
sti
mov
test
jmp
push
xlat
enter
sub
pop
mov
aas
loopne
cmp
sub
dec
jb
or
xchg
xchg
or
jbe
ljmp
cmp
andb
jb
sub
rclb
mov
cmp
mov
es
mov
add
ds
enter
fnstenv
loope
sub
leave
adc
add
das
lock
stc
dec
add
ds
sub
sub
dec
fcoml
call
nopl
dec
sbb
mov
sbb
loopne
sahf
lock
inc
lock
jge
inc
pop
mov
xor
or
mov
inc
dec
jne
cltd
cwtl
arpl
in
sub
add
mov
loopne
out
sub
adc
xor
push
xor
sbb
cmp
adc
push
push
lock
pushf
les
sub
insl
in
jbe
scas
seto
leave
leave
leave
xchg
xchg
xchg
xchg
leave
leave
leave
leave
xchg
xchg
xchg
cwtl
leave
leave
leave
leave
cltd
lcall
popf
sahf
lahf
or
leave
leave
addl
xchg
mov
leave
leave
lea
mov
out
das
add
inc
push
add
and
nop
mov
inc
adc
ljmp
xchg
push
or
dec
or
adc
or
add
inc
les
pop
adc
mov
xchg
sbb
test
jne
xchg
jmp
cs
imul
add
clc
jle
mov
and
loopne
jl
dec
adc
cmpl
xor
hlt
push
adc
cmp
sbb
sub
mov
test
xchg
hlt
push
lods
pop
xor
rorl
add
push
sub
cmpsb
fisttpl
mov
xchg
add
jo
push
or
sbb
int
jmp
pop
sbb
je
mov
and
sbb
inc
add
and
jmp
jle
in
je
mov
loop
mov
insb
sbb
test
out
ret
xchg
lock
ss
sub
mov
mov
or
stos
mov
outsl
jle
push
dec
inc
push
or
or
dec
aaa
imul
sbb
or
bndstx
and
loopne
jmp
das
rcrb
jmp
cmpsl
mov
mov
mov
mov
add
aas
pop
je
xchg
mov
fisttpl
decb
ja
arpl
rolb
jmp
add
add
sti
pop
movsb
xchg
cmp
add
mov
movsbl
and
xchg
jne
jle
ret
pop
daa
cmp
mov
jo
add
cmc
out
pushf
ds
pop
in
push
push
adc
and
mov
cmpb
ja
jb
add
xchg
das
iret
repz
call
out
mov
push
or
dec
mov
push
cs
and
inc
add
push
adc
por
enter
mov
aaa
mov
mov
xchg
jne
dec
jae
test
jns
mov
stos
insb
lahf
shrb
outsb
loop
mov
hlt
xchg
js
or
jecxz
pop
pop
int3
incl
cmp
pop
mov
xlat
or
xor
pop
rol
ljmp
sub
cmp
fimull
adc
pop
insl
out
add
sub
jmp
les
loope
nop
aad
or
inc
and
push
dec
pop
add
dec
xorb
and
popf
loopne
clc
jle
mov
jecxz
mov
inc
sub
xlat
xor
mov
push
mov
push
test
xor
fistps
push
push
sbb
incb
fsubr
adc
pop
or
add
adc
loopne
icebp
or
es
hlt
aas
add
xchg
pop
xor
rorb
loope
xchg
dec
sub
or
xor
cmp
dec
call
iret
and
out
dec
hlt
icebp
and
jmp
icebp
or
insb
movl
inc
add
jecxz
add
outsb
jl
cli
imul
cmp
dec
sti
push
lock
mov
mov
jne
xchg
cmp
mov
iret
outsb
push
xor
iret
lods
pop
ret
ja
xor
insb
popa
xchg
cmp
outsl
or
cmp
or
xor
adc
jnp
inc
sub
sbb
xchg
jnp
test
push
lods
mov
hlt
lahf
out
fcmovu
insl
or
sbb
scas
xor
adc
jb
jo
ret
inc
add
or
pushw
or
cmp
xchg
sti
fmuls
movhps
adc
mov
cmp
cmp
cmc
add
nop
inc
ljmp
or
push
addr16
into
repz
lret
pusha
test
clc
fnstenv
out
and
movsb
jnp
sub
push
mov
fistpll
inc
push
inc
outsl
xor
cmp
and
rolb
loop
adcb
pop
pusha
sbb
and
push
add
jmp
adc
dec
adc
push
or
lea
sbb
push
scas
pop
push
mov
scas
rcl
mov
jp
enter
call
dec
incl
sbb
adc
inc
roll
adc
xchg
xchg
or
or
stc
add
jae
jne
pop
fbld
bound
jbe
add
push
sub
xchg
mov
in
xchg
jge
mov
mov
mull
shlb
cwtl
jmp
cmp
sbb
mov
aam
mov
std
inc
mov
jnp
push
call
adc
mov
pop
mull
mov
inc
test
mov
aad
test
jnp
mov
int3
sbb
or
imul
mov
jmp
enter
gs
mov
pop
insb
pop
imul
push
int
inc
pusha
gs
inc
insb
popa
adc
jae
sbb
imul
repz
add
test
addr16
sbb
sbb
adc
dec
outsl
xor
sub
ficompl
scas
dec
outsb
insb
jns
fimuls
scas
cmpsb
shll
imul
ss
push
mov
ja
fimuls
inc
je
insb
or
cmpsl
or
dec
imul
loope
fdivl
mov
test
or
mov
hlt
add
dec
ljmp
js
add
sbb
loopne
jno
adc
out
aaa
fidivs
pop
xchg
or
or
dec
gs
rclb
jae
jne
cltd
aaa
dec
outsb
add
jne
cmpl
or
adc
int
jbe
dec
or
push
gs
aam
test
mov
push
aam
add
mov
mov
inc
jp
insl
psadbw
and
aaa
ds
mov
inc
sbb
fmuls
mov
in
in
shrl
shrb
pop
in
mov
jae
jb
or
or
cmp
xor
jb
and
pushf
clc
aaa
mov
inc
pop
mov
rorl
mov
lahf
xchg
jae
dec
cmp
ds
push
inc
mov
jne
and
inc
sbb
nop
test
or
cmpsl
and
xor
mov
add
fcoms
into
dec
imul
imul
inc
int3
jae
mov
adc
scas
push
cmp
cmp
adc
andl
sub
xor
out
insl
jo
fsubl
jo
aas
lea
jg
push
push
nop
mov
cwtl
nop
jb
add
outsl
int3
test
or
and
mov
jle
cmp
imul
mov
lods
popa
push
arpl
gs
bound
js
push
add
nop
scas
pop
mov
aas
and
call
mov
xchg
stos
insl
fldcw
xor
pop
addr16
pop
out
fiaddl
pop
dec
push
push
and
clc
push
mov
push
adc
sub
loop,pn
inc
sbb
mov
jae
jne
sbb
es
push
or
jo
into
rolb
mov
insl
pop
adc
xor
sbbb
fmulp
lea
push
movsl
cmp
out
mov
pop
sub
sbb
mov
cmp
push
jns
dec
ds
ret
push
dec
sbb
imul
push
inc
and
rorb
adc
pusha
pop
out
xor
cmpsl
popa
adc
repnz
pop
push
push
aas
addr16
jnp
in
mov
outsb
push
outsl
sub
dec
cmp
test
sbb
insl
push
jge
andps
insb
nop
push
sub
dec
xorb
adc
loopne
sub
loopne
cwtl
dec
sar
repnz
shr
sbb
and
xor
cmp
add
out
jns
mov
mov
cld
lcall
stos
inc
ds
push
push
mov
or
and
xor
insb
inc
pop
cmp
out
fidivl
sbb
dec
aas
push
and
dec
sbb
inc
add
adc
aaa
dec
inc
fs
push
incl
xor
adc
clc
aas
jns
pop
jle
mov
pfadd
fs
loope
inc
mov
xor
pushf
jae
push
rclb
sahf
cmpsb
mov
test
fisubrl
outsb
pusha
inc
cmp
jl
loopne
or
cli
inc
fwait
and
mov
jbe
je
data16
dec
mov
les
rol
loop
jle
jg
adcb
mov
data16
cld
push
and
sti
xor
addr16
ja
mov
adc
jae
xorl
sahf
arpl
ds
loopne
hlt
cmpb
cmp
fsubrl
dec
or
loopne
push
xor
add
inc
push
or
sub
bound
inc
inc
pop
xchg
jl
xor
outsb
adc
jns
or
addb
fldcw
je
outsl
in
mov
sbb
addr16
ficomps
pop
push
fadds
fdivl
xchg
xchg
lock
rorb
or
outsb
mov
insb
jo
fidivrs
jo
mov
nop
mov
mov
idivl
dec
cmp
add
xchg
rolb
push
scas
gs
nop
movb
rol
shr
das
xchg
mov
push
push
rolb
sbb
aaa
push
lock
push
xor
dec
repz
andl
xchg
push
call
pop
andl
push
or
enter
mov
pop
sub
cmpsl
sbb
in
das
inc
inc
jnp
adc
adc
enter
dec
addl
mov
bound
pop
and
adc
mov
ds
push
lods
pusha
lahf
movl
repnz
adc
mov
shll
repnz
ds
dec
inc
nop
daa
rol
test
divb
lahf
repz
add
sub
or
jge
in
loopne
or
dec
push
adcb
cmpsl
or
icebp
pop
adc
lods
jmp
pusha
cltd
inc
stos
jno
xor
nop
cltd
andps
dec
dec
fs
addr16
or
cmp
adc
cmp
add
nop
and
rcrb
push
add
xor
jo
in
in
jns
mull
in
out
mov
jns
dec
pop
imul
sub
icebp
jns
mov
jmp
xchg
cs
mov
pop
xor
fbstp
sbb
and
scas
fisubs
sub
lods
adc
jbe
repz
roll
and
cmp
les
sub
push
in
nop
sub
inc
xchg
call
jb
sbb
push
fisttpl
roll
add
js
mov
push
leave
jae
sub
cltd
mov
arpl
sbb
test
jp
jg
fistps
out
es
cmp
fsubs
cmp
push
jo
nop
lds
sbb
push
pusha
dec
and
xlat
adc
and
mov
shlb
cwtl
fs
pop
inc
xchg
mov
fdivrs
mov
roll
cs
rol
xor
push
xchg
mov
in
xor
ss
and
mov
inc
nop
ds
sbb
add
jecxz
pop
call
rcll
stos
mov
dec
mov
mov
or
fmuls
sti
push
shrb
loopne
fsubrs
mov
sbb
out
add
dec
or
dec
sub
push
outsl
add
xchg
sub
lcall
int
dec
addb
jns
add
aad
rcrb
and
jbe
mov
aam
add
scas
cmp
faddp
push
xor
fldl
inc
div
jb
add
dec
fldenv
fidivl
dec
sti
into
call
jbe
inc
push
cmp
cltd
push
sbb
fs
mov
mov
adc
add
stc
clc
push
push
push
push
push
out
das
sar
repnz
icebp
push
call
mov
sahf
negl
push
add
push
adc
sarl
iret
rcl
fdivrl
add
rcrb
dec
lds
sbb
or
arpl
and
lcall
xor
push
push
mov
mov
mov
mov
cmp
incl
add
test
push
popa
addr16
dec
push
aad
sub
ds
iret
repz
xor
push
fs
les
ds
push
inc
jmp
mov
inc
int
cli
imul
xlat
es
dec
fs
dec
push
push
push
leave
mov
lds
dec
and
in
popf
inc
dec
mov
push
loopne
in
jo
out
addb
test
push
and
mov
or
push
mov
pusha
or
rorb
aaa
push
and
dec
ss
lea
or
dec
or
push
mov
jne
pop
xor
push
data16
push
push
jge
sbb
add
fiaddl
jbe
cli
inc
cmpl
jne
xor
je
sbbl
mov
ds
and
or
addr16
jb
jne
pusha
xchg
sub
xchg
dec
punpckhwd
jl
scas
or
pusha
mov
cmp
in
xchg
add
sbb
push
mov
dec
cmp
cwtl
cmp
xlat
bound
ss
imul
adc
pop
add
in
out
and
pop
and
jmp
lret
mov
mov
dec
or
test
pop
or
aam
loope
adc
aas
lock
add
sti
mov
sub
sub
dec
les
fldt
ret
and
jmp
sbb
adc
xor
xlat
add
out
sbb
mov
push
call
es
and
add
loopne
pop
xchg
add
push
inc
xlat
and
mov
or
pusha
pop
pop
stc
add
xor
add
jo
or
adc
stos
cmc
pop
lods
sub
push
push
or
jl
mov
xor
shlb
xbegin
xor
sub
dec
jne
pop
or
xor
push
mulb
xlat
rorl
or
sbb
pushw
or
and
rolb
inc
jle
or
push
inc
int3
sbb
int
dec
ja
mov
in
mov
and
inc
ds
inc
inc
hlt
mov
lods
in
in
inc
pop
je
adc
push
adc
sbb
sbb
outsl
add
cwtl
push
inc
mov
cmovnp
bound
add
adc
ret
adc
xchg
popa
inc
jae
out
xor
fcoms
fs
push
int3
sbbl
jl
outsb
xchg
add
and
or
fdivrs
xor
outsl
inc
cmpl
cmpl
gs
in
mov
push
jle
or
pop
and
enter
add
cmp
outsb
loope
mov
cmp
daa
mov
dec
and
adc
jne
dec
jne
inc
sub
and
mov
adc
lods
pop
aad
add
and
sbb
stos
inc
test
inc
adc
jecxz
dec
loope
idivl
jge
leave
xchg
test
mov
push
loopne
sarb
pusha
or
aam
sbb
stos
inc
mov
adc
test
add
aaa
mov
sbb
pop
sbb
popf
or
xchg
push
sbb
cmp
in
and
pusha
arpl
xor
inc
aam
dec
popa
and
aam
call
inc
mov
and
xchg
inc
xor
cmp
xchg
mov
lods
cmpb
dec
std
push
mov
addl
scas
popf
xor
push
into
sub
xchg
push
inc
test
xchg
jmp
jbe
or
add
inc
outsl
mov
cmpsb
jno
pop
lea
out
mov
xor
push
movb
mov
pushf
rcl
cmp
inc
fsubrs
jl
add
inc
pusha
rcrl
fldenv
in
inc
mov
cmpsl
sub
push
sub
jle
push
call
mov
cmp
je
add
mov
fistl
loopne
test
mov
fcmovnu
stc
cmp
push
dec
lock
ret
pop
shrb
loop
lret
icebp
dec
call
add
jbe
mov
mov
lock
adc
sbb
xor
cmpsl
and
enter
out
outsb
and
lcall
jae
xor
pop
int
shr
adc
push
dec
jg
mov
lock
cli
add
js
add
mov
cmp
sti
dec
lahf
lret
mov
mov
jge
sub
add
lods
or
adcl
mov
popa
pop
fstpl
imul
cmp
and
sbb
push
dec
xor
mov
flds
call
rolb
inc
fdivrs
xchg
sub
pop
nop
push
xorb
mov
dec
jae
sub
dec
pop
or
cs
movsww
iret
lahf
orl
adc
lea
imul
push
sub
rclb
clc
clc
mov
nop
jmp
push
adc
scas
pop
clc
imul
cli
inc
enter
mov
hlt
insb
imul
push
jae
pop
mov
mov
sub
adc
movntps
adc
enter
ret
or
fnsave
inc
sbb
les
jns
inc
jge
or
xbegin
dec
jl
sti
pop
sbb
pop
jns
xor
in
pop
jmp
and
enter
jnp
pop
mov
in
sbb
loopne
shll
pop
add
lds
xchg
sbb
pop
inc
sbbb
xchg
mov
and
fwait
in
das
in
repz
mov
inc
lock
sbb
mov
pop
cmp
and
mov
mov
scas
push
pop
test
add
xchg
pusha
cmpl
push
cmp
roll
pushf
or
movsb
inc
push
dec
or
dec
sbb
or
loopne
pop
outsb
dec
mov
mov
xchg
xlat
xchg
call
cmp
or
sbbb
and
mov
or
add
and
loope
sbb
push
dec
insb
imul
push
dec
xor
sub
lea
mov
add
or
sar
push
push
cmp
cld
mov
mov
cli
loope
and
inc
add
ja
sarb
jne
sbb
and
imul
jo
or
sub
or
sub
pop
jp
out
cmp
sbb
mov
add
adc
inc
mov
jbe
pop
cmp
ja
xor
push
mov
xor
pop
mov
sbb
pop
dec
mov
xchg
call
rolb
and
cmpsl
sub
pushf
shll
orl
shr
insb
cld
in
mov
or
clc
add
or
mov
pop
xor
add
pop
enter
dec
pop
lds
jmp
sub
push
popl
fs
cmp
inc
cltd
lcall
jo
push
xlat
push
add
outsl
xchg
test
xchg
outsl
jl
or
pusha
push
aas
packsswb
loopne
mov
pop
mov
insl
xchg
or
inc
cltd
gs
out
pop
pop
adc
lods
loopne
xor
push
outsb
lock
loope
out
outsl
mov
push
or
test
jnp
test
jne
adc
arpl
add
mov
fwait
shlb
xor
dec
xor
cmp
lds
mov
sbb
push
cmp
push
pop
push
xor
and
call
cld
pop
leave
inc
scas
xor
dec
rorb
fldenv
or
aas
sbb
jno
sbb
sbb
xchg
popa
movsl
sbb
clc
insl
mull
add
test
cmp
mov
and
lea
push
imul
push
dec
mov
push
arpl
sbb
pop
das
fsubl
cmp
push
pop
aas
cltd
sub
sbb
jg
addl
pop
sbb
jp
xor
decl
push
push
lods
adc
mov
inc
leave
out
test
std
add
out
in
sbb
sbb
push
fsubrl
mov
jb
cwtl
or
mov
rolb
jecxz
cmp
dec
jbe
lahf
sub
sub
sbb
add
lea
or
mov
mov
sbb
add
jb
pop
cmpsl
inc
popf
jo
mov
cmc
fs
aad
popa
and
mov
insb
fstps
jae
xchg
cmp
xchg
clc
les
adc
test
xchg
cmp
sub
inc
inc
ret
loopne
lock
push
mov
loopne
add
aaa
or
pusha
ret
call
fdivrl
test
hlt
roll
stc
add
adc
orl
mov
add
mov
int
out
mov
pop
stos
add
dec
or
jnp
nop
mov
adc
jne
sbb
leave
push
jno
mov
adc
sbb
push
adc
and
xorl
sbb
cmp
je
or
mov
adc
and
mov
jmp
mov
xor
mov
hlt
push
test
pop
and
mov
push
mov
addr16
insb
test
jl
xchg
cmp
or
or
pop
imulb
push
sbbl
sub
add
add
fsubs
jg
and
mov
in
loope
lds
xor
imul
addb
call
dec
dec
mov
sub
jg
dec
cmpsb
add
sbb
dec
dec
inc
add
add
outsb
movsl
sysret
xlat
dec
gs
lea
daa
add
and
xchg
mov
movsb
adc
mov
nop
sub
mov
push
loop
lea
sub
push
cmp
js
add
movsl
daa
inc
xchg
icebp
sbbb
loopne
js
pop
sub
xorb
inc
jne
in
push
dec
add
pop
scas
in
push
or
push
adc
inc
out
jne,pn
or
fiaddl
or
aaa
inc
or
ret
inc
and
jle
adc
arpl
dec
outsb
push
cmp
sub
push
mov
lods
mov
pop
add
cmp
xchg
insb
shll
add
test
jge
push
mov
call
ds
rcrb
clc
add
add
sbb
call
out
je
movb
push
shlb
or
jb
pop
rcrl
add
loop
ror
xchg
mov
test
adc
mov
mov
call
and
push
add
psubsw
leave
je
stos
adc
btr
cmp
jl
aam
jbe
adc
fadds
jmp
pop
fmuls
ret
popf
inc
lds
hlt
cld
cmp
stos
add
adc
je
sbb
xor
loop
bt
jb
shl
mulb
ret
ret
adc
push
inc
cmp
jne
inc
decl
jne
les
mov
pop
aaa
xor
sub
sbb
adc
and
movsb
adc
dec
push
in
out
imul
leave
push
adc
push
cld
icebp
in
sub
outsb
popa
lret
lods
fistl
and
sahf
imul
rcrb
adc
cwtl
push
ret
add
and
cmc
ret
sub
outsb
es
dec
lock
cmp
xchg
or
mov
cmp
mov
mov
pop
sbb
inc
push
fists
cli
shlb
pusha
js
jne
pop
sub
push
or
add
adc
les
and
adcl
push
pusha
sbbb
mov
adc
cmc
ljmp
sub
dec
adc
out
aas
or
fdivr
or
aad
adc
cmp
mov
jne
cmp
pop
fs
lahf
inc
testb
je
or
push
push
pop
and
jmp
in
mov
pop
push
adc
cmp
sti
pop
jl
jp
bound
filds
or
xor
sub
xchg
stos
or
pop
loope
push
mov
loope
add
push
inc
pop
movsb
mov
mov
cwtl
cli
fcoms
cmpsl
nop
and
je
in
mov
jo
xchg
decb
xor
cmpl
out
pop
js
test
push
pop
popa
push
add
lret
jo
or
je
call
mov
pop
ss
jl
pusha
ja
in
sbb
loopne
in
cltd
jnp
sub
push
mov
arpl
ret
add
add
jmp
xorb
mov
insl
add
jmp
cli
in
sub
in
insl
in
pop
xor
int3
and
pop
loopne
inc
mov
dec
xchg
add
and
lock
jge
aam
add
push
fldenv
jle
mov
sti
add
push
pop
sbb
pop
jbe
mov
jne
cmp
das
push
inc
cmp
mov
mov
adc
daa
andb
lods
aaa
mov
xchg
insl
pop
enter
xor
pop
and
xchg
fdiv
popl
dec
push
sbb
or
xchg
and
cmp
xchg
dec
aas
pop
clc
fs
push
filds
outsl
pandn
in
in
stc
add
pop
xlat
and
pushf
inc
negl
pop
rorl
ficomps
mov
sbb
jno
xchg
cs
inc
and
addl
pop
hlt
jnp
das
rolb
add
jle
inc
es
cli
ss
or
cmp
or
call
xlat
loopne
testl
leave
jmp
cmp
xor
cmp
or
das
cwtl
mov
ja
mov
loopne
out
add
cmc
enter
cmp
clc
insl
pop
and
inc
daa
rorb
fsubs
aas
popa
push
pop
pop
orb
mov
push
clc
pop
and
adc
add
or
push
jbe
ficoml
addb
jecxz
sub
cmp
cmp
sbb
out
je
shl
xor
xchg
mov
mov
pop
adc
cmpsb
add
outsl
icebp
data16
push
xlat
and
cltd
xchg
adc
jb
xchg
int3
ds
pop
je
xor
fs
mov
fucomp
push
jb
cmp
jne
sbb
xchg
xchg
jne
xlat
adc
push
sbb
test
jne
cmp
bound
jmp
dec
popa
adc
scas
mov
outsl
adc
push
push
in
leave
push
sbb
imul
adc
decl
sub
sbb
call
or
mov
jmp
mov
pop
push
mov
xchg
insb
xchg
push
fnstcw
jmp
fxch
or
mov
addr16
sub
inc
fstpt
jmp
cs
jb
xor
push
mov
pop
ret
add
daa
cmc
outsb
mov
sub
or
fstps
je
data16
xchg
jo
fsubrs
cmp
in
dec
mov
scas
ret
add
xchg
repnz
pop
lock
lods
gs
imul
imul
ja
xchg
je
mov
stos
mov
rep
sub
add
js
or
sbb
sbb
mov
mov
cmp
dec
jne
or
in
mov
dec
mov
push
add
mov
imul
fucom
inc
lock
dec
imul
jo
lods
xchg
imul
adc
jae
cs
insb
adc
andb
lock
or
push
push
add
mov
aam
dec
sub
jmp
and
sahf
popl
mov
sub
mov
or
or
push
pop
jp
loopne
lds
and
mov
push
pop
cmp
dec
das
sar
push
add
cltd
lea
or
in
adc
fwait
mov
push
dec
movsb
pop
pop
inc
jbe
sub
add
jno
or
cmpl
xor
mov
push
fdivs
jbe
rcll
push
mov
xchg
adc
pop
das
jmp
push
sahf
in
push
in
icebp
mov
mov
adc
jo
xor
jbe
in
xor
seto
add
addr16
cmp
mov
enter
iret
xchg
sbb
std
mov
ja
adc
test
pop
lock
push
push
insl
lock
aaa
dec
shll
sbb
push
sub
cwtl
xchg
xor
cld
shll
xchg
xor
dec
pop
mov
and
fsubs
data16
and
stos
mov
in
sub
mov
lock
and
add
xchg
mov
std
jbe
mov
mov
adc
outsb
movsb
xor
outsb
rcl
jns
dec
or
inc
rolb
fistpll
sbb
loopne
imul
inc
mov
ret
push
pop
jo
dec
iret
dec
push
cmpsb
pop
jb
dec
mov
fistpl
mov
nop
pusha
dec
scas
lods
outsb
or
mov
dec
out
fsubrl
sbb
cmp
ljmp
jp
shll
and
push
fidivrl
mov
testb
iret
aas
inc
add
mov
lea
sbb
fisubrl
mov
sub
lsl
add
lahf
push
mov
dec
jge
pop
repz
fildll
mov
dec
orb
cld
cld
rorl
loopne
inc
and
pop
sbb
inc
clc
sub
lock
test
hlt
jp
adc
jecxz
cmp
enter
cmc
jnp
mov
cmp
nop
and
dec
lods
jne
scas
sub
sbb
adc
add
inc
test
sbb
jnp
pop
rorl
inc
cmp
jl
sub
jo
lahf
sub
clc
sbb
loop
jbe
and
dec
ret
inc
mov
xor
or
inc
add
lods
jno
push
sbb
pop
jl
mov
push
dec
das
call
mov
and
xor
cmp
xor
inc
ret
popa
push
push
pushf
sbb
in
push
arpl
inc
dec
or
and
push
mov
jmp
subb
pavgb
mov
mov
jne
les
faddp
outsl
jle
pop
or
pop
jecxz
mov
ja
add
outsb
adc
or
adc
out
rorb
or
stc
xchg
cmc
mov
pusha
jp
and
ret
sub
push
lret
inc
loop
cwtl
inc
xor
or
push
cmp
xchg
jge
fldt
push
xchg
dec
inc
addr16
ficoml
jle
sub
xchg
jge
sub
push
xor
rclb
jo
pop
pushf
inc
push
add
daa
jle
mov
fwait
inc
cmp
pop
pop
aaa
adcl
adc
sub
popa
sarb
or
push
adc
or
hlt
je
mov
scas
adc
jecxz
jo
addr16
mov
les
enter
or
scas
jg
push
loope
cmpsb
and
push
mov
pop
mov
cmp
lcall
int
xor
mov
inc
mov
cs
push
and
cmpb
add
add
adcb
sub
jg
pop
and
cmpb
mov
mov
mov
adc
sbb
inc
jno
push
inc
inc
xchg
pusha
dec
fsts
adc
add
adcl
mov
aaa
pop
jmp
nop
add
shrl
sub
mov
addr16
aad
int
hlt
jno
fldl
outsl
mov
xor
push
js
xor
push
int
mov
ljmp
xor
adc
decb
sub
stos
add
addr16
mov
lret
sub
jns
cmp
cmp
add
push
stos
and
or
xlat
mov
jmp
mov
mov
rorb
movsb
push
in
and
push
mov
adc
mov
push
lock
sub
add
cs
mov
cmp
fsubrs
in
xor
cmpb
aas
stc
je
ret
jmp
xchg
adc
ret
add
aas
mov
xor
insl
adc
movsb
rcll
sbb
fst
rclb
sbb
imul
das
lock
cmpsb
incb
mov
lds
cmp
rclb
xor
mov
jg
jecxz
sbb
and
loopne
test
divb
fdivs
pop
sub
iret
sbb
jb
in
jmp
mov
jge
push
xor
push
mov
and
adc
je
xchg
push
xchg
mov
add
bswap
dec
adc
lea
xor
pop
xor
push
inc
shrb
dec
inc
xchg
or
jecxz
sbb
mov
call
and
or
pop
dec
and
neg
scas
add
or
push
jle
mov
sbb
inc
fists
inc
imul
jg
icebp
jl
call
add
xchg
testb
dec
or
test
add
roll
push
orb
mov
or
fmull
add
push
or
mov
adcl
das
fwait
add
cmp
lods
movsl
mov
or
scas
clc
sub
wrmsr
xchg
clc
adc
mov
jle
jp
push
enter
adc
dec
mov
imull
icebp
adc
pop
test
dec
cmp
pop
imul
addb
loop
das
loopne
or
push
xchg
mov
mov
jo
cmp
sub
jmp
sub
dec
xchg
inc
add
jbe
sbb
aaa
xchg
mov
js
in
test
adc
sub
enter
push
enter
aaa
xor
push
xor
pop
out
sbb
xor
xchg
test
push
es
ret
push
xorb
les
das
inc
sbb
andl
lock
xchg
les
popf
dec
add
lock
sub
xchg
cmp
mov
test
or
iret
mov
popa
dec
iret
mov
mov
out
adc
rorl
or
mov
mov
add
mov
mov
dec
dec
push
add
out
cli
notb
sbb
mov
in
in
in
or
je
jg
mov
jmp
mov
pusha
sbbb
or
jg
ljmp
test
add
fucomp
fldpi
sbb
imul
push
mov
xchg
jle
testb
xor
jo
mov
jp
repnz
aaa
lds
ret
pusha
mov
ret
push
jbe
mov
in
add
dec
xorl
repnz
dec
mov
add
mov
add
fistpll
push
imul
lretw
xlat
pop
sbb
xchg
push
sbb
xchg
int3
pop
fs
add
je
push
sbb
jle
mov
mov
cmpsl
daa
js
mov
jg
jg
call
orb
sub
sub
nop
cmp
or
jmp
jno
in
pop
xchg
test
scas
stc
push
inc
xor
push
xchg
ret
insl
nop
pop
push
sbb
push
add
or
mov
pop
nop
nop
jne
add
shrl
dec
sub
pop
shlb
adcb
ljmp
jg
cmp
mov
mov
dec
mov
mov
cmp
mov
jae
ficomps
dec
inc
jge
sbb
jle
cwtl
pop
inc
mov
outsb
out
in
hlt
jl
cmp
xor
cmp
and
and
adc
push
xchg
adc
cwtl
cmp
adc
or
or
or
shrl
xor
xor
mov
cltd
adc
loope
inc
mov
jo
cwtl
xchg
xchg
pop
and
loopne
popf
sub
jle
push
dec
push
jp
sub
lahf
lahf
cmpb
adc
inc
inc
stos
add
aaa
sbb
nop
sbb
pop
cmp
dec
xor
loop
pop
or
dec
xchg
loope
ret
inc
scas
or
dec
fisubrs
sbb
fisttpl
add
outsb
inc
pop
subb
mov
jbe
pop
push
dec
ficomps
xchg
test
jge
or
pop
pop
pop
mov
mov
ja
mov
and
or
outsl
test
je
ret
js
jecxz
cmpsl
ja
hlt
or
xchg
mov
push
mov
jmp
das
lahf
cmp
sbb
lea
push
fsubs
sbb
push
out
mulb
xor
orb
cmp
adc
cmp
data16
sbb
jle
pop
and
cmp
cmp
int3
dec
or
clc
xorps
scas
aam
movsb
orl
lret
popf
test
push
ror
adc
test
or
mov
dec
cmc
pop
ja
fsubl
sar
cmp
cmp
dec
das
push
cmp
outsl
sub
mov
lds
pop
sbb
repz
in
sbb
mov
ficompl
jge
pop
adc
sub
ljmp
sub
dec
or
push
or
test
or
pop
ret
aam
cmp
mov
or
push
int
jbe
add
idivl
and
push
test
into
fs
or
pusha
push
mov
add
mov
sub
push
inc
mov
or
rcrb
ret
dec
loope
movsb
nop
cmpsl
cmpsl
push
cmp
in
push
cmc
xchg
inc
mov
clc
mov
inc
dec
sbb
mov
hlt
mov
sbb
jmp
inc
and
enter
pop
jo
and
or
call
jecxz
fwait
xchg
out
aad
and
scas
mov
in
xchg
test
inc
jg
movsb
rcrb
pusha
and
dec
aas
enter
push
sub
xor
popa
adcb
or
or
push
roll
in
icebp
in
and
jmp
xchg
inc
shrb
jne
fisttpll
adc
repnz
mov
jle
dec
jmp
dec
cwtl
jge
aam
call
rorb
pop
or
xor
jmp
aad
cmp
sub
jmp
mov
sbb
sarl
enter
nop
inc
loopne
fdivl
lret
or
les
insl
out
xchg
je
xor
or
dec
mov
push
cwtl
out
pop
cmp
daa
movaps
or
pop
inc
outsl
adc
or
and
shrl
sub
call
pop
cmp
in
icebp
cli
adc
cli
dec
add
into
ret
pop
jle
sbb
sti
test
or
dec
or
adc
sar
push
add
sbb
ret
jle
ss
test
jo
fwait
imull
add
jno
pop
das
xor
xchg
scas
insb
mov
cmpsl
addl
sbb
xchg
inc
inc
adc
mov
add
xor
andb
pusha
cmpsl
ljmp
loopne
jo
mov
pop
sub
xchg
cmpsl
mov
add
aam
clc
dec
or
in
adc
jecxz
or
repnz
arpl
data16
mov
stos
pusha
ret
fidivrl
mov
xchg
adc
stos
adc
out
push
loopne
into
dec
push
dec
adc
jmp
lret
jp
je
nop
psraw
sub
popa
xor
add
pop
xchg
push
jne
push
mov
arpl
aaa
jecxz
sbb
cmp
xor
lcall
jnp
or
pusha
and
lods
xlat
xchg
and
test
pop
add
or
and
movsb
fs
pusha
sbb
mov
pop
inc
dec
mov
es
push
addb
or
sbb
sub
or
js
lods
pop
inc
nop
outsl
lea
lea
inc
jno
mov
mov
add
adc
adc
add
sub
jecxz
hlt
lods
push
and
in
sbbb
jge
and
les
in
xor
das
push
inc
lock
adc
xor
inc
ret
mov
add
out
enter
add
pop
push
movsb
xchg
jne
out
add
inc
call
dec
in
jmp
mov
or
rorl
and
and
mov
lock
ret
pop
in
cwtl
fldl
jmp
inc
aaa
rolb
pop
scas
repz
push
push
and
sahf
sub
mov
iret
inc
cld
adc
mov
divb
mov
js
popa
sbb
or
xchg
mov
pop
add
dec
das
inc
cmpsl
icebp
dec
dec
pop
pusha
pop
scas
mov
ret
push
fisubrl
xchg
testb
dec
orl
lods
rolb
shlb
add
mov
in
sub
lcall
insb
daa
xchg
or
pushf
andb
fwait
pop
shrb
in
loop
push
pop
jo
imul
andb
pop
out
in
lcall
out
mov
mov
out
pusha
adc
mov
movsb
les
or
inc
pop
lcall
aaa
push
outsb
xor
and
stos
ja
fimuls
lret
mov
sub
jne
and
int
dec
inc
add
adc
inc
sbb
push
cs
inc
test
add
lret
and
push
js
push
ds
adc
xchg
jno
pushf
add
cs
fs
std
daa
out
add
push
aaa
mov
jecxz
mov
xorl
and
lret
and
dec
and
outsl
sbb
shlb
roll
push
mov
sbb
mov
jmp
and
aam
inc
push
add
sub
jae
add
add
dec
hlt
hlt
outsl
or
dec
xchg
lret
das
xchg
push
ja
mov
add
imull
jl
jae
or
mov
fs
mov
nop
fsubs
out
or
addr16
push
pop
inc
rcrl
repnz
and
push
and
jl
test
push
enter
orb
or
xchg
inc
testb
push
adc
ret
sub
jmp
and
jo
xor
mov
push
cmpl
inc
bound
rcrb
sahf
add
mov
jno
cmp
mov
inc
adcb
sbb
cmp
fidivl
sbb
movsb
push
sub
rorb
pop
cmp
aas
hlt
mov
mov
push
lock
iret
fidivs
adc
or
pop
inc
jmp
sbb
movsb
ret
cmp
or
stos
add
cmp
jl
xor
adc
fsubs
inc
or
andw
inc
jb
push
fnstcw
mov
enter
imul
ret
out
ret
dec
add
cmp
inc
inc
mov
movsl
xchg
inc
and
or
das
or
andl
cmp
adc
test
xchg
cmp
loop
or
mov
imul
push
or
and
cltd
and
xlat
push
or
inc
or
lret
xchg
lahf
push
or
out
mov
fadds
adc
mov
jp
pop
or
pop
mov
push
xchg
imul
fs
add
in
dec
rcrl
sub
js
xchg
in
lock
pop
add
mov
loope
sub
mov
mov
cmp
decb
sbb
or
ja
xchg
adc
popa
push
xor
movsl
aaa
mov
adc
shlb
jle
incl
nopl
dec
out
xchg
out
popf
push
jmp
nop
add
fidivrl
sbb
scas
xor
adc
lock
les
lret
push
scas
push
sahf
addb
inc
je
cmp
mov
in
mov
xchg
push
loopne
hlt
aaa
ljmp
adc
cmp
add
movsb
cmp
jg
dec
loopne
popf
lea
fidivs
add
movsb
push
inc
lret
xor
fs
sarb
movntps
sbb
sub
adc
inc
stos
rcrl
adcl
aas
adc
xchg
inc
testl
push
push
mov
inc
ret
jmp
cmp
jge
sahf
pop
inc
cmp
push
cmp
das
or
ljmp
or
adc
in
push
push
pop
jecxz
je
dec
je
pusha
daa
rclb
pop
mov
ljmp
subb
sbb
pop
mov
lret
hlt
mov
mov
push
add
push
push
or
jne
pop
and
and
sub
or
sti
mov
cmp
imul
cmp
xlat
and
or
sub
movsl
inc
pushf
in
popa
adc
mov
cs
int
adcl
or
push
fdivrs
sbb
ss
js
aad
packuswb
jl
clc
dec
aaa
pop
js
or
imul
icebp
cli
popf
sbb
xor
leave
xor
mov
pop
inc
jns
ret
jne
sub
nop
cmp
fs
pop
pop
xchg
cmp
mov
out
dec
cs
adc
adc
pop
dec
fdivrs
into
xor
xlat
es
js
out
push
ja
inc
add
mov
les
rcrb
cmc
mov
jmp
sub
aaa
cmc
mov
xlat
add
push
push
xchg
loop
insl
mov
push
fwait
ja
pushl
dec
jne
jp
cld
cmp
data16
jbe
inc
out
les
lret
aad
or
dec
inc
mov
clc
mov
sub
sub
xlat
out
jle
js
in
ficompl
nop
nop
jg
dec
lock
movsb
mov
ss
lock
ja
mov
xchg
sbb
fsts
fiadds
lret
sbb
rolb
int3
pushf
mov
dec
pop
test
cld
cli
rcrl
sub
lea
fdivrs
mov
mov
push
add
adc
sahf
cs
dec
jne
negl
or
mov
cmpsl
rorl
mov
movsl
es
nop
inc
popa
pop
imul
sar
leave
rclb
mov
mov
dec
push
inc
push
mov
sbbb
cmc
jo
je
bound
and
inc
jge
sub
or
mov
jae
mov
push
movsb
js
je
cmp
in
inc
xchg
mov
ja
sub
das
mov
subb
xor
popf
add
lahf
pusha
cmpsl
test
out
in
xlat
pop
add
unpcklps
scas
int3
xor
enter
lods
mov
lea
lock
pop
pop
hlt
or
lret
enter
je
mov
inc
push
xor
aam
add
cmp
cmc
add
cmp
cmpsl
sbb
shlb
add
dec
sub
inc
cmpb
jge
cmp
jbe
mov
push
pushf
fs
xor
fucomi
sub
and
aaa
int3
ret
sub
notl
andl
mov
push
add
push
push
movsl
scas
add
cmp
pushf
cltd
pop
or
cmc
adc
out
popf
cmp
in
xor
ret
pusha
int
xchg
pop
add
mov
sbbb
add
jb
and
sub
jb
cmovbe
int
xchg
push
jne
out
jo
imul
jbe
add
jno
push
hlt
mov
push
fcomp
outsb
mov
sbb
adc
push
dec
ss
stos
pop
dec
sub
push
pushl
add
das
jb
insl
int3
idivl
out
xor
fsubrs
dec
push
add
ret
pop
les
bound
hlt
mov
cmp
xor
call
adc
in
fwait
pop
or
or
jne
in
movsb
and
inc
pop
leave
subl
lods
enter
cs
xor
adc
cmpsl
mov
sbb
xor
mov
test
mov
in
sarb
mov
xor
pop
pop
sub
movsb
sbb
adc
sub
imul
sbb
fadds
cmpl
cmp
push
mulb
or
sbb
lcall
xchg
xlat
aam
lock
scas
adc
std
jno
cwtl
adc
mov
in
jno
mov
pop
lahf
jne
sub
in
dec
sbb
add
xchg
sub
fcomps
push
sbb
sbb
jb
int3
setp
pop
cmpsl
in
call
js
mov
fsubp
xchg
adc
adc
jne
mov
fldt
xor
dec
inc
lods
sbb
pop
aaa
jb
and
out
xor
and
cmc
mov
push
xchg
or
xor
push
movsb
cmp
repz
out
jae
inc
int3
daa
out
mov
leave
in
pop
pushf
pop
jmp
push
add
lahf
mov
int
sub
imul
pop
lahf
cmp
xchg
fnstsw
rorb
pop
std
ret
or
out
or
loope
mov
inc
ljmp
push
and
adc
add
outsl
enter
sub
mov
cld
sub
out
imul
out
sbb
out
out
mov
add
imul
bound
dec
and
les
jmp
movsb
pop
or
inc
hlt
rclb
outsb
lock
cs
test
lahf
mov
lods
dec
sbb
ffreep
testl
shl
or
flds
popa
sbbb
and
sbb
cmp
fildll
push
adc
data16
scas
adc
daa
jp
or
mov
xchg
jo
mov
orb
lcall
fdivr
add
mov
cmpl
sub
push
icebp
dec
push
or
pop
xchg
add
jo
mov
fcmovnbe
sub
cmp
fbld
iret
and
das
sbb
dec
icebp
mov
iret
adc
push
pop
test
xor
or
xchg
jle
sub
add
scas
mov
and
ss
adc
pop
sarl
mov
pop
push
xor
mov
dec
mov
xchg
push
dec
adc
xchg
pop
inc
cmpsb
cmp
cli
in
add
sbb
cltd
and
push
ret
addr16
adc
push
cmp
dec
loopne
add
mov
jne
add
and
testb
mov
repz
cmp
scas
dec
mov
in
mov
loopne
mov
push
push
add
xor
mov
push
arpl
lahf
aam
mov
xchg
fmull
sub
mov
add
call
xchg
in
xchg
sbb
test
inc
mov
mov
mov
push
inc
pop
aad
add
lods
dec
inc
jb
push
mov
dec
jle
loopne
mov
jmp
xor
test
cmpsl
ret
mov
add
hlt
dec
or
das
jecxz
mov
mov
cmp
cmp
sbb
mov
mov
pop
fimull
jmp
inc
sbb
mov
or
popa
jge
push
loope
sahf
arpl
and
pop
add
mov
cmpl
movsb
push
jmp
xchg
inc
mov
cmp
stos
test
pop
and
or
xchg
add
add
add
pop
pop
testl
ljmp
out
or
aaa
sub
sbb
sbb
pop
dec
add
inc
sub
enter
xchg
jl
cmpb
xor
popa
int
mov
push
pop
mov
lcall
pop
dec
testl
sbbb
inc
rcrl
pop
mov
mov
push
sbb
sbb
add
cld
bound
insb
sarb
xor
rorb
shlb
shrb
jb
xchg
and
sbb
hlt
cmp
and
and
mov
stos
addb
lods
mov
ret
mov
mov
lods
std
or
pop
or
pushf
mov
into
sti
mov
fimuls
mov
mov
mov
leave
mov
mov
popf
call
pop
mov
mov
sub
outsl
jmp
adc
add
sub
sbb
xor
dec
push
or
xor
icebp
adc
xchg
pop
mov
iret
repz
popl
mov
jns
shrl
cmp
in
pop
push
pop
dec
ss
sarl
ja
call
and
out
cmp
xor
xor
push
add
rolb
jo
mov
in
xchg
xor
repnz
dec
adc
and
pop
addr16
lret
cmp
jle
and
fdivr
pop
arpl
scas
sub
and
cs
cmpsb
inc
pop
sub
cmp
sub
push
xor
cs
inc
push
mov
fdiv
imul
addl
fwait
xchg
js
and
pop
cmp
xchg
xchg
ret
in
sub
je
les
add
pop
pop
adc
ficompl
les
mov
sahf
inc
mov
aam
and
insl
mov
adc
stc
pop
mov
lods
cmpsb
das
xchg
cmc
jmp
inc
jge,pt
cmp
call
mov
ret
dec
lods
mull
pop
aam
fs
aam
push
aam
rcr
imul
dec
dec
sar
in
mov
test
sbb
popa
out
add
mov
add
xchg
sub
dec
cmp
jae
or
test
addb
ljmp
lods
pop
loopne
mov
cmp
jge
pop
mov
fdivl
aaa
cmpsl
outsb
mov
or
sub
push
xchg
mov
lar
ror
or
stc
mov
mov
stc
fwait
js
fcompl
push
popf
add
mov
sbb
dec
inc
shlb
jo
mov
outsl
sbb
and
repz
adc
sbb
xor
bound
movsb
mov
fldcw
hlt
push
enter
lret
movsl
mov
adc
cmc
test
shlb
pop
das
add
xchg
nop
xchg
outsl
and
fisttpl
push
cmpb
pop
pushl
outsl
jo
and
insl
cmp
mov
pop
xchg
or
fdivrl
jbe
xor
fistps
cmp
add
or
jmp
or
cs
adc
jmp
xor
fidivs
adc
popl
mov
sub
idivb
ret
jmp
push
movsb
push
dec
mov
popf
je
inc
arpl
clc
pop
or
push
adc
jbe
or
inc
outsl
pop
xchg
pop
in
inc
push
mov
sub
ja
bts
jmp
push
movsl
lock
pop
add
push
jne
push
pop
push
arpl
add
cmp
add
or
ret
adc
pop
addr16
xchg
xchg
and
in
jle
ror
dec
jp
adc
jne
mov
cmp
xor
and
inc
call
je
push
adc
dec
test
movsl
jne
data16
stc
dec
mov
mov
mov
push
mov
rolb
jb
push
add
jae
shrl
cmp
push
push
push
ja
pop
sub
ja
pop
xchg
push
jae
movb
add
mov
push
clc
pop
and
mov
jp
push
sbb
mov
shl
xchg
cmpsb
pop
das
or
pop
jo
mov
enter
hlt
jnp
in
mov
pop
leave
jmp
xor
inc
and
sub
add
aaa
bound
aas
mov
ret
cld
xchg
mov
lds
out
adc
and
test
mov
and
in
jo
imul
shll
insb
xor
pop
es
repz
sbb
mov
jo
aad
les
lahf
push
inc
adc
jns
jnp
daa
ret
inc
jg
test
nop
push
mov
out
fdivrs
pop
call
cmp
adc
sbb
cmp
repz
inc
push
loope
jb
je
aam
loopne
push
stos
cmp
adc
mov
mov
sub
or
and
mov
push
or
push
xor
jmp
push
adc
mov
rcrb
pusha
adc
or
sbb
inc
push
dec
push
ffree
in
cmp
and
in
xchg
mov
or
ss
mov
push
push
sub
inc
cmc
out
sub
rclb
mov
ds
fucomi
ret
inc
jmp
cmp
jo
sbb
leave
in
lds
lock
aam
xchg
dec
xor
das
cmp
sti
jae
cli
add
mov
loope
mov
sti
cltd
or
pop
call
cmp
dec
cmp
daa
aas
popf
push
mov
inc
and
and
cmp
shlb
push
clc
lret
mov
scas
push
rclb
xor
add
loopne
push
push
clc
push
add
lret
cmp
dec
call
adc
and
mov
ret
inc
push
xchg
mov
cmp
xor
inc
and
push
test
int
xor
push
sub
insb
push
imul
and
xchg
add
dec
mov
jae
lods
js
jle,pn
adc
enter
sub
fistl
push
and
push
xor
jmp
scas
test
outsl
cmp
mov
sub
pop
add
cmp
loope
subb
shr
mov
push
jne
fmull
jb
xor
mov
ret
in
adc
cmp
lea
popf
enter
fcomps
lock
aad
mov
lret
sbb
inc
shrb
les
mov
inc
inc
add
arpl
sbb
cmp
fldt
pop
mov
or
cmp
ja
mov
xor
xchg
nop
jmp
sub
aas
sbb
xor
dec
and
cmp
xlat
pop
out
rorb
leave
dec
cmpsb
push
ds
jnp
loope
push
ret
clc
adc
outsb
mov
mov
pushf
cmp
jnp
dec
push
pusha
mov
cmp
jle
mov
inc
fdivrl
pop
cli
std
sbb
mov
or
mov
int3
mov
xor
movsb
mov
cs
or
or
jae
xor
mov
pop
adc
dec
aaa
add
sbb
or
jo
insl
in
shl
ret
adc
pushf
jmp
daa
ror
pop
or
ret
jmp
push
cli
aaa
ljmp
add
jmp
mov
cs
das
and
sub
popa
push
lds
adc
push
adc
and
pusha
loopne
data16
jnp
repz
dec
or
dec
cs
js
inc
or
inc
adc
cmp
pop
inc
dec
inc
sub
adc
shlb
subl
fnstcw
mov
and
maskmovq
testl
cmpb
js
jmp
cmp
lods
adc
sub
pop
pushf
jl
adc
jg
mov
and
mov
push
add
add
fisttpl
sub
add
testl
pinsrw
lods
bswap
aas
cwtl
je
mov
and
stos
jnp
adc
data16
fst
or
push
loope
jo
xor
push
scas
dec
fadds
push
push
arpl
mov
sbb
sbb
add
and
fnstcw
cmp
int
mov
pop
les
int3
faddl
push
xchg
mov
xor
insl
lret
sub
addr16
call
mov
pop
fiadds
in
rcrl
popa
movb
insb
sbb
insl
ljmp
xor
or
adc
sarb
add
insl
pop
daa
and
in
xor
lods
fs
andl
jns
inc
cltd
iret
push
push
into
mov
push
push
cmp
xchg
jg
jg
add
xor
mov
and
sub
sbb
dec
or
mov
push
sub
mov
mov
cli
rcrb
cmpb
pop
mov
lods
xchg
push
jo
and
pop
mov
push
add
popf
sti
jmp
sbb
mov
pop
inc
pop
es
test
dec
jl
iret
adc
add
hlt
mov
push
jno
jl
mov
jg
inc
rclb
enter
es
iret
add
adc
xlat
pop
stos
cmp
jne
adc
dec
mov
jo
popa
int3
pusha
or
sbb
push
lods
or
bnd
xchg
xchg
push
push
lds
xchg
bound
jg
mov
jmp
dec
andl
jnp
cwtl
ljmp
rol
sbb
push
push
sbb
insb
lock
ds
addb
push
shlb
and
dec
loope
lock
leave
mov
mov
in
xchg
addr16
adc
ret
or
xchg
icebp
addr16
mov
cmpb
sbb
xorb
loopne
adc
xor
and
jmp
subb
pop
xor
icebp
jo
xlat
adc
pusha
std
push
jae
add
popf
push
stc
inc
rcr
out
rolb
add
orb
shl
dec
pop
push
js
pop
rorb
push
cmp
stos
sbb
lock
in
shll
mov
lcall
and
jmp
cmp
scas
push
inc
jae
shll
cmp
punpcklwd
fstpl
je
adc
sbb
xchg
adc
test
mov
imul
cmp
sbb
dec
mov
jne
adc
jne
jno
adc
push
sub
ret
pop
cmpb
xchg
popf
icebp
sbb
lea
push
mov
shrb
xor
fwait
sbb
cmp
movsl
inc
loope
mov
test
jge
icebp
ljmp
dec
and
sub
sarb
js
push
cwtl
inc
nop
pop
orb
mov
enter
aam
pop
sbb
mov
test
or
jns
ret
jo
into
daa
inc
lds
ret
orl
loop
adc
neg
sahf
sbb
push
call
xorb
push
sbb
jo
loopne
gs
mov
sbb
aam
jbe
pushf
and
push
pop
inc
cmp
mov
shll
or
dec
ret
adc
call
inc
and
or
and
bound
push
sbb
pop
dec
pop
push
fcom
shl
jmp
ds
setge
add
inc
push
add
rolb
jl
lret
outsl
roll
mov
add
pop
test
fisubrl
add
adc
addr16
addr16
icebp
mov
fiaddl
push
out
sub
setne
xor
or
loope
mov
shlb
or
popa
xor
mov
loop
dec
rolb
mov
sub
stos
nop
mov
sub
fwait
lds
inc
and
loop
push
dec
xlat
fsubr
adc
mov
adc
jge
push
jae
hlt
push
or
or
imul
call
push
xor
clc
add
jg
fcoms
outsl
add
aam
inc
mov
hlt
adcl
and
mov
xchg
pushf
jle
in
sbb
add
or
xor
adc
push
sbb
mov
dec
sbb
mov
call
sbb
cmpxchg
sbb
xchg
mov
sub
xor
sbb
sbb
cmp
or
inc
cwtl
xchg
rclb
push
mov
pop
mov
push
inc
or
xlat
mov
sub
sbb
scas
add
xchg
loope
adc
jo
jne
sbb
int3
test
or
and
pop
pop
stos
xor
es
sub
mov
or
or
data16
push
adcl
and
insb
aas
jmp
shrl
inc
xor
rcrb
cmp
push
lock
adc
cmp
jne
ret
rolb
mov
aam
loop
movsl
lcall
cmp
jae
adc
mov
jno
add
or
mov
push
adc
sbb
or
sbb
mov
mov
movsb
cmpsl
movsl
int
adc
push
xor
pop
inc
imul
adc
and
je
pmaxub
xlat
adc
cmp
jl
push
push
jge
invd
movsb
xchg
add
jnp
sub
and
out
push
pop
adc
or
xlat
mov
lea
mov
js
xchg
sarl
ficoml
add
hlt
adc
adc
popf
enter
ret
pop
fnstsw
adc
pop
add
inc
xlat
push
outsl
jo
mov
ja
out
pop
pop
xor
nop
out
test
daa
mov
pop
arpl
incb
int
dec
dec
das
sahf
int3
xchg
push
shlb
pop
dec
das
js
inc
pop
dec
push
mov
icebp
jne
cmp
jne
inc
mov
pop
das
lret
and
jne
push
dec
rclb
orb
mov
adc
push
addb
add
mov
je
call
mov
pop
dec
mov
sbb
jg
sbb
jae
and
in
sbb
orl
aam
push
inc
dec
jne
int3
mov
decl
popf
sbb
das
jg
hlt
add
and
stos
ljmp
push
sahf
xchg
jnp
das
jmp
sbb
inc
stos
aaa
gs
mov
ret
dec
cmpsl
mov
pusha
xor
sbb
lods
and
cmpsl
push
adc
rolb
inc
mov
mov
push
out
stc
aas
int3
or
cwtl
and
xor
cmp
jp
push
mov
add
clc
cmp
jg
push
dec
cmp
xlat
or
out
dec
jmp
gs
add
addr16
movl
dec
sbb
mov
xor
or
sbb
subb
sti
jge
push
insl
xor
and
inc
add
jge
and
mov
cld
inc
dec
jne
mov
ja
cwtl
sbb
mov
cs
cmp
xchg
or
inc
jmp
or
sbb
or
leave
pop
cld
adc
testb
push
or
adc
dec
cmp
jge
add
adc
and
inc
out
adc
mov
pop
insl
lds
pop
jne
sbb
jg
movsl
mov
push
mov
pop
inc
xor
ss
mov
scas
mov
in
cmp
and
test
pop
roll
adc
and
add
adc
cmc
lds
out
fs
push
or
ljmp
cmc
mov
push
not
movsb
push
xchg
xchg
bnd
js
scas
sbb
rcrl
dec
rolb
mov
pop
mov
out
into
add
mov
adc
repz
and
sub
stos
inc
xor
xlat
dec
add
jge
push
cmpsb
lock
or
xor
clc
sub
dec
out
inc
push
xor
pop
inc
lahf
push
add
mov
adc
aaa
test
ja
push
mov
or
pusha
push
sahf
inc
xor
movsb
popf
mov
lods
inc
inc
lahf
aaa
dec
mov
dec
jg
cmp
insb
or
test
je
dec
push
pop
sbb
ret
pop
xlat
sub
xor
pop
loopne
sbbb
outsb
lret
push
cmp
xorl
or
or
testb
cmp
jne
jo
and
test
sbb
xor
pop
popa
jno
dec
pop
add
mov
imulb
dec
scas
or
pop
loopne
dec
mov
ljmp
pop
adc
sbb
outsl
xor
pop
test
sub
xor
insb
add
push
je
mov
ljmp
xchg
xlat
dec
adc
out
adc
test
outsb
adc
xor
xchg
jecxz
bswap
jns
pop
xchg
addr16
out
add
mov
inc
push
pop
add
cmp
xchg
int3
cmpsl
pop
adc
or
loop
add
addl
inc
dec
inc
lret
ss
sbb
push
or
movsb
add
add
pop
mov
xlat
pop
sti
cmc
arpl
cmc
dec
mov
mov
push
mov
add
lret
and
daa
test
aam
jmp
hlt
loopne
xchg
inc
int3
add
cld
movl
dec
dec
lahf
or
in
push
inc
jbe
fsub
lret
xor
cmp
adc
push
fidivrl
fdiv
sbb
nop
outsb
cs
add
clc
jne
add
jg
in
sub
adc
add
mov
popf
hlt
mov
popl
scas
sbb
xchg
pop
cmpsl
lock
mov
jmp
inc
add
push
inc
sub
faddl
push
loopne
popf
mov
mov
sbb
fcompl
mov
push
and
fcomps
adc
push
iret
rcll
sub
lret
sbb
loopne
pop
push
jp
push
or
xchg
push
adc
adc
sbb
add
or
int
xchg
sbb
sbb
in
ffree
jno
call
lds
int
inc
dec
lea
ror
or
or
adc
mov
sbb
jne
shlb
or
sbb
jbe
leave
dec
pop
aaa
addr16
adc
fdivrs
mul
movb
inc
das
movl
testl
xchg
inc
or
sbb
imulb
bound
cs
add
imul
or
mov
or
in
aaa
ja
jne
or
xor
jnp
sub
mov
push
jb
sub
out
push
movsb
pop
out
dec
adc
xor
mov
nop
sub
jne
xor
pushf
mov
ret
aaa
mov
loopne
insb
push
and
cmp
xor
pop
cmc
mov
mov
push
add
in
in
fs
sub
inc
add
xchg
outsb
insb
mov
pop
or
xor
cmp
fsubs
or
mov
add
cmp
fisttpl
jo
movsb
pop
mov
pop
adc
or
xchg
mov
adc
lar
nop
push
mov
push
pop
mov
jmp
push
sbbl
jp
outsl
imul
push
daa
pop
pop
pop
ds
sub
lea
je
ds
mov
push
push
dec
cwtl
and
push
sub
in
and
addr16
shrl
fmuls
adc
insl
or
push
cld
push
test
sbb
add
aad
adc
push
push
paddb
cmp
or
mov
daa
iret
das
mov
mov
jge
lret
adc
sbb
fdivrs
xchg
mov
enter
bound
lea
mov
mov
out
add
sub
mov
divb
pop
cwtl
or
xor
cld
sbb
flds
jbe
and
int3
adc
xlat
insb
push
sub
adc
or
dec
jb
sbb
into
je
es
dec
imul
ror
dec
mov
push
pop
insb
rcll
and
and
inc
push
bound
mov
mov
dec
or
es
mov
dec
adc
jb
fdivrl
sub
movsb
push
sahf
icebp
shll
pop
scas
prefetchw
adc
mov
outsl
jb
pop
xchg
cld
mov
pop
rcll
mov
mov
inc
sub
xchg
outsb
es
nop
out
adc
and
dec
sub
jb
int3
mov
fbld
or
repz
adc
xor
cmpsb
push
mov
jnp
test
data16
test
and
inc
pop
pcmpgtd
dec
rcll
adc
enter
pmuludq
or
insb
jb
fcoml
push
push
dec
ljmp
leave
xchg
xchg
and
ror
test
fsubl
stos
fcoms
push
push
pop
add
lods
repz
repnz
imul
in
adc
mov
jmp
sti
add
cmp
jnp
rorl
xor
push
inc
sub
inc
rolb
ret
dec
inc
cltd
icebp
sbb
xchg
cmp
cs
ljmp
outsb
xor
dec
loop
push
inc
mov
movsl
leave
aam
sub
mov
ljmp
out
inc
inc
mov
adc
pop
xchg
sub
jae
push
push
fs
push
and
pop
push
add
lcall
and
out
out
je
adc
mov
imul
popa
outsb
popa
xor
imul
nop
fmul
push
popa
add
fucomip
in
inc
sub
push
aas
mov
dec
iret
push
and
cltd
jo
jno
jae
or
pop
xorb
popf
push
add
call
dec
test
mov
add
adc
loopne
sub
push
les
adc
lret
xchg
push
pusha
or
dec
nop
adc
jo
test
addl
pop
push
jae
mov
inc
movsl
sbb
js
push
adc
imul
add
push
push
dec
jne
mov
cltd
bound
imull
mov
pop
xchg
test
lock
or
mov
addl
test
andl
jl
jecxz
inc
pusha
mov
icebp
sub
add
mov
dec
pop
mov
add
pop
mov
and
xchg
dec
gs
test
sbb
mov
icebp
and
push
ljmp
cwtl
cmp
lret
jno
or
lods
pop
mov
mov
inc
mov
or
insl
fisubs
sub
and
in
sbb
sbb
adc
aaa
sbb
inc
outsl
cmp
dec
jne
and
or
outsl
xor
mov
pop
xchg
into
popa
addr16
and
xchg
nop
test
fistpl
xchg
fldcw
inc
cmpsl
test
or
dec
fstpl
push
mov
add
cmp
pslld
and
add
in
adcb
push
inc
pop
push
movsb
rcrl
lea
test
cmp
push
fisttps
sbb
rorb
ret
std
adc
psubsb
jmp
cmp
pop
xchg
mov
arpl
test
dec
push
cld
jnp
scas
push
adc
cmp
clc
divl
rcl
sbb
fxam
push
xor
cmc
or
cltd
repnz
xor
dec
jle
pop
loopne
push
cmc
push
xor
hlt
pop
mov
mov
and
test
adc
fdivl
push
mov
xor
movsl
adcl
sbb
fcoms
sub
add
movsl
cs
dec
shl
cmp
loopne
iret
sbb
and
sub
divl
out
push
lods
loopne
mov
loopne
test
or
popa
xchg
pop
push
out
in
xchg
lcall
inc
sub
pop
or
ja
xchg
adc
cmp
rcr
jno
xchg
mov
rcrb
xor
test
or
jle
call
inc
fdiv
scas
call
test
cli
cld
sbb
loope
cs
jmp
pop
dec
sbb
sub
cmc
xchg
jl
enter
loopne
iret
addl
aas
outsb
nop
into
aam
aad
insb
fnstcw
mov
jl
mov
sbb
shrb
jl
adc
int3
push
cmpsb
ds
int3
jge
test
hlt
scas
cmp
int
stos
xchg
inc
fists
sbb
in
popa
and
mov
mov
inc
jmp
add
inc
pop
fneni(8087
imul
in
movsb
clc
jp
nop
mov
fadd
in
lahf
cmp
fs
add
incb
jnp
das
push
inc
jne
mov
cwtl
mov
popf
outsl
call
jl
js
sbb
add
lock
mov
les
xchg
mov
jge
adc
rclb
lahf
mov
mov
faddl
aam
lcall
or
cmpsl
pop
inc
adc
pop
lcall
jo
outsl
lock
aaa
or
es
loopne
fcom
push
iret
int3
popa
pop
jmp
sub
sbbl
push
clc
ja
fsubs
jno
in
shll
cld
movsb
call
inc
sbb
lock
lds
das
hlt
push
sub
stos
sarb
ret
sbb
cmp
int
xchg
insb
orl
push
lds
and
inc
sbb
xchg
push
rorl
gs
jns
pushf
xor
add
sti
add
or
inc
push
push
mov
xor
jne
pop
push
rcll
and
cmp
mov
lea
pop
hlt
mov
ret
pop
push
push
add
or
lahf
mov
mov
daa
add
enter
jl
imul
jmp
push
add
add
decb
xchg
jmp
sbb
jmp
mov
jmp
push
and
or
loop
mov
cmpsl
test
sub
fists
sub
les
pop
clc
aad
adc
test
sar
cmp
add
out
jns,pn
add
mov
loopne
test
cmpsl
jmp
cmp
jmp
pop
arpl
adc
pop
add
jbe
rorb
inc
add
inc
xchg
cld
xchg
add
loopne
and
xor
mov
or
jno
loopne
and
cmp
add
test
test
pop
mov
fdivr
mov
decl
or
cltd
dec
sahf
adc
and
push
pop
daa
and
inc
fs
mov
lods
sbb
loope
inc
push
lods
cmpl
push
imul
bound
outsl
pop
adc
or
jge
jae
mov
cld
lock
xlat
push
roll
mov
jg
adc
mov
std
rorl
cmpb
in
dec
mov
lahf
or
cmp
xor
sub
insb
fnstsw
mov
push
mov
pop
aas
or
xchg
mov
daa
jae
mov
add
divl
push
mov
add
movb
jl
arpl
ret
shlb
and
pop
nop
sbb
dec
stos
cld
push
push
and
mov
in
adc
pop
push
pop
push
jmp
orb
mov
jge
add
dec
sbb
mov
hlt
adc
adc
jmp
sarb
or
sbb
push
adcl
adc
adc
adc
jb
arpl
loope
test
sbb
jno
mov
test
push
sbb
ss
lods
subb
loopne
mov
or
push
xor
fistpl
adc
pop
inc
add
add
ret
cmp
jno
add
dec
sbb
cs
sub
add
cld
repnz
sbb
jne
and
repnz
cld
or
pop
dec
jmp
inc
jmp
test
test
into
fcom
jmp
sbb
imul
pop
jmp
push
lock
adc
pop
inc
inc
es
adc
rclb
dec
and
mov
js
decl
add
dec
mov
pushl
les
sub
es
lock
pop
and
lock
sub
imul
or
inc
cs
and
adc
pop
inc
inc
mov
mov
and
mov
hlt
mov
xor
inc
popa
mov
outsb
cmp
clc
adc
cld
pusha
cmpl
jb
xor
xor
lock
push
shlb
or
mov
adc
jle
lea
movsl
add
inc
and
lea
jb
push
sub
push
push
mov
dec
cmp
push
push
inc
dec
push
daa
push
inc
add
inc
sub
or
leave
or
add
inc
mov
iret
cmpsl
es
push
jns
add
push
adc
add
test
jge
push
test
cs
decb
cs
mov
and
lods
push
or
push
sbb
xchg
aaa
ret
xor
jns
in
xor
gs
mov
clc
or
push
mov
inc
divl
push
test
or
ja
gs
pop
sbb
cbtw
push
cmc
bound
sub
stos
popa
jne
divl
out
sub
ds
add
adc
jmp
mov
cwtl
ljmp
sub
lods
outsb
jne
insb
popa
jns
je
mov
mov
mov
pushf
add
mov
shl
fbld
add
decl
in
fisubrl
adc
mov
movsb
mov
mov
push
push
inc
push
loope
je
lret
dec
pop
xchg
mov
inc
sbb
sbb
out
cmp
adc
sub
and
je
push
mov
adc
add
add
add
arpl
and
rorb
inc
es
out
pusha
add
mov
int
pop
xchg
nop
jl
mov
dec
js
jo
dec
dec
dec
dec
push
dec
dec
dec
pop
push
push
dec
dec
add
dec
inc
cs
xchg
adc
cli
xor
jbe
cmpsb
mov
inc
mov
sub
push
sub
dec
xor
add
push
mov
push
push
mov
dec
add
pop
popa
insb
outsl
rorb
and
xchg
xchg
fsts
jne
pcmpeqd
xchg
xchg
xchg
js
jp
xchg
xchg
xchg
xchg
jl
jle
xchg
xchg
xchg
xchg
pusha
popa
bound
xchg
xchg
xchg
fs
xchg
xchg
xchg
push
xchg
xchg
xchg
insb
insl
outsb
outsl
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
pop
pop
pop
pop
xchg
xchg
xchg
xchg
pop
pop
pop
pop
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xor
xor
xchg
xchg
xchg
xchg
xor
ss
xchg
xchg
xchg
xchg
cmp
cmp
xchg
xchg
xchg
xchg
cmp
ds
xchg
xchg
xchg
xchg
and
and
popf
xchg
xchg
xchg
and
es
xorb
sbb
out
lods
or
dec
ficomps
or
mov
pop
mov
or
add
lea
cmp
adc
addr16
jb
mov
fs
cmp
jbe
testl
jbe
add
push
jecxz
packsswb
xlat
adc
in
adc
adc
mov
cmpb
sub
lret
dec
jnp
push
add
mov
jmp
adc
jmp
add
dec
adc
gs
add
andb
test
cwtl
inc
sub
insb
add
lcall
mov
bound
lea
xchg
and
and
out
mov
cmp
mov
popf
pop
push
fcomps
subb
inc
mov
mov
loopne
xchg
mov
dec
dec
sub
push
dec
xor
push
ds
pusha
push
dec
inc
xchg
lea
stc
test
movsb
jnp
loop
adc
icebp
pop
imul
jge
jle
and
lea
or
rol
push
xchg
dec
aam
or
cmp
std
test
ds
jle
sbb
je
pushl
mov
adcl
loope
cmp
mov
inc
outsb
sbb
cld
sbb
cmp
jmp
flds
or
mov
or
scas
xchg
dec
pop
and
and
mov
xor
dec
adc
pop
push
jmp
xchg
movsb
cmpsb
jno
nop
orb
int3
std
or
push
add
jmp
lds
mov
or
sub
vpaddb
pop
nop
push
pop
dec
ljmp
or
add
jle
mov
or
push
jge
fildl
loope
jne
test
stos
mov
clc
movsb
or
cmp
movsl
dec
add
mov
movsb
push
rcrl
xchg
add
cmp
jg
iret
movsb
shll
push
push
pusha
rol
push
mov
ror
cwtl
roll
daa
lods
scas
mov
call
xchg
push
cmp
mov
push
test
sbb
test
add
push
outsl
fidivrl
nop
test
in
mov
inc
pusha
xor
sbb
arpl
mov
or
ds
inc
cwtl
insl
sub
xchg
mov
frstor
es
enter
push
add
inc
daa
pop
xor
data16
inc
inc
mov
adc
rolb
and
jge
mov
xchg
or
pop
pop
rorb
scas
and
sbb
je
mov
xchg
rcr
push
je
insb
ret
fists
add
xor
data16
enter
xor
arpl
adc
out
mov
arpl
inc
das
xchg
ss
jae
mov
insb
or
ficompl
push
outsb
int
mov
push
divl
pop
jo
outsl
sbb
in
push
sub
add
sbb
xchg
jl
fs
mov
mov
les
sbb
jb
pusha
pop
push
lock
inc
insb
dec
or
movsb
je
daa
mov
mov
mov
inc
insb
mov
push
push
push
push
jo
int3
mov
inc
jns
sbb
out
daa
and
lret
mov
mov
or
rcrb
mov
and
cmp
aas
mov
loopne
out
adc
adc
je
add
jne
jnp
enter
jo
bound
adc
or
dec
jl
jp
data16
push
fidivl
or
cmpb
cs
inc
outsl
jb
jae
call
and
ret
fidivs
inc
push
dec
push
fisttpl
inc
insb
aas
mov
pusha
jno
test
decl
andps
lods
mov
pop
sub
or
mov
xor
sub
sub
movsl
lea
and
sbb
aas
and
mov
cmpsl
inc
xchg
insl
aaa
add
or
xchg
push
cmp
iret
mov
pop
sub
and
in
vmwrite
inc
lods
sub
push
scas
adc
xor
pop
std
faddl
cmp
iret
pop
adc
scas
pop
dec
or
loopne
icebp
mov
push
hlt
add
mov
mov
push
call
add
les
dec
or
das
nop
das
aas
cmpb
cli
mov
vpmacssww
and
cmp
xor
or
or
sbb
int3
dec
ss
out
pop
dec
mov
add
mov
mov
push
push
fiaddl
mov
leave
push
push
cs
jl
int3
or
addb
nop
out
adc
lods
adc
les
mov
sbb
mov
fldl
stos
add
lahf
pop
sbb
sbb
add
leave
call
xor
and
mov
add
negb
shr
mov
int3
xor
cmp
mov
dec
mov
ds
lsl
push
and
shrb
pop
mov
dec
repnz
push
test
lods
pop
sbb
add
add
xchg
add
call
loope
add
sbb
les
xor
jo
cmc
pop
insb
and
pop
mov
cmpl
outsb
pop
adc
clc
push
mov
nop
jae
pop
inc
icebp
jb
sbb
push
movsl
inc
shll
adc
cmp
add
or
and
pop
aas
pop
sub
pop
push
int3
push
or
lods
cmp
cs
bound
pop
jmp
mov
cmp
pusha
mov
sbb
into
pop
ret
xchg
je
xchg
dec
jp
xor
or
and
mov
cmp
outsb
outsb
adc
inc
insb
adc
orb
inc
push
add
push
mov
push
inc
arpl
not
xchg
push
gs
push
xchg
lock
outsl
ja
adc
push
or
or
inc
add
dec
jae
js
enter
leave
sub
jb
sub
xor
in
pop
les
and
sbb
push
movsb
sbb
mov
xor
daa
sbb
or
repz
adc
xor
jp
aam
sbb
mov
dec
jnp,pn
push
mov
push
add
xor
or
cmp
loopne
jecxz
add
fcoml
sahf
jle
sub
in
adc
repz
pop
jo
paddq
pop
add
sbb
negb
outsb
lock
jl
pop
fsubs
pop
test
adcl
and
imul
pop
and
enter
sbb
dec
call
fdivrs
sbb
fcomp
jge
mov
sbb
iret
xchg
insl
jne
stos
mov
push
add
sbb
xchg
xor
fs
add
push
push
dec
call
inc
pop
rcl
cmpb
mov
dec
pop
inc
out
popa
arpl
dec
mov
add
js
pushf
push
xor
je
mov
out
pop
and
add
xor
aam
mov
fs
cltd
lock
or
push
les
dec
insl
shrl
sbb
xor
inc
test
sub
add
mov
ds
lds
sbb
nop
nop
mov
or
clc
xor
sub
mov
psrlw
xchg
push
xchg
inc
mov
imul
je
jle
push
push
loopne
or
addr16
insb
push
sbb
enter
xchg
inc
fs
push
mov
rorl
push
pop
pop
and
xor
popf
dec
jne
or
sbb
js
je
adc
lcall
pop
sbb
mov
aam
push
push
ret
xor
xchg
in
jl
jl
jle
jle
ss
mov
orl
insb
mov
fmull
fucomi
cli
mov
push
fs
cmpxchg
fdivp
xor
sub
push
cld
xchg
pop
lods
shll
pop
sbb
push
ret
and
push
adc
xchg
sarl
mov
or
outsl
outsb
pop
jae
or
sbb
nop
pop
test
int3
xchg
cld
xchg
sarb
push
int3
push
mov
loopne
lahf
loopne
sahf
loopne
pop
and
jo
sbb
xchg
lock
imul
and
jo
pop
add
jg
push
pop
sbb
cmp
cs
fwait
bound
pop
xchg
aaa
adc
faddl
pushf
xor
dec
adc
inc
and
movl
mov
aaa
jl
shlb
sbb
mov
fldcw
dec
push
fadd
rorl
hlt
mov
xor
inc
dec
jne
jns
mov
sbb
pop
popa
pop
call
out
mov
inc
add
push
xor
seto
cld
or
lahf
adc
add
hlt
and
xchg
mov
out
jne
loope
and
data16
sub
jne
nop
lock
and
rorl
inc
cmp
xor
popa
loop
xor
sub
adc
add
push
dec
sahf
push
cmpsl
fs
ret
xor
out
inc
add
loopne
dec
jge
cmp
sub
jo
jge
clc
and
cmc
out
push
loop
or
and
mov
mov
insl
and
push
mov
and
add
enter
call
sub
cmp
mov
jne
stos
sbb
sbb
lock
idiv
adc
xchg
dec
fcoml
mov
loop
in
aad
xchg
jne
pop
vaddsd
xchg
pusha
outsl
in
lock
adc
xchg
xor
cmp
je
adc
rcr
std
xlat
cmp
add
and
test
icebp
stos
clc
ss
mov
sbb
inc
xchg
fs
jle
inc
iret
cmpb
in
jge
inc
sbb
ficoms
and
pop
dec
fstl
push
pop
adc
mov
jle
adc
push
stos
fsubs
call
xchg
inc
inc
mov
arpl
shr
jmp
mov
jns
sub
mov
sub
fimuls
jg
mov
mov
cmp
insl
mov
dec
sub
inc
cmp
and
in
or
sarb
aas
arpl
pop
or
pop
out
pop
aam
outsl
outsl
outsb
jo
mov
lods
outsb
pop
dec
insb
and
les
push
xchg
jbe
insl
pop
loopne
add
jo
xchg
push
gs
insb
pop
jbe
pop
xchg
cmpsb
jb
add
push
dec
push
aam
jae
addr16
gs
lret
in
rcrl
or
cld
inc
incb
arpl
imul
inc
js,pt
pop
pop
or
insb
addb
jns
add
or
gs
or
inc
dec
data16
push
push
inc
outsl
rorb
insb
das
cmovae
jnp
fisubrs
pop
imul
rolb
xchg
add
inc
push
addr16
xorb
je
cmc
fisubrs
push
xchg
dec
adc
mov
mov
sbb
or
pusha
and
add
jg
mov
lret
insl
js
jg
sub
mov
xor
pop
test
fs
lahf
mov
aas
sbb
cmp
inc
pop
or
movsb
dec
rorl
andl
and
or
adc
repz
xor
adc
and
shr
jb
pop
adc
inc
push
sub
jg
pop
outsb
jne
inc
icebp
ja
xchg
daa
shufps
and
or
pop
xchg
rcrb
arpl
xor
inc
xor
pop
lds
cmp
cmp
xor
popa
leave
or
fidivrs
or
mov
std
ret
push
mov
sub
lods
sbb
dec
mov
push
adc
fadds
or
mov
int3
or
mov
dec
pop
fdivrs
incl
inc
push
push
inc
push
add
inc
inc
inc
push
dec
push
xor
notl
dec
inc
dec
dec
arpl
dec
inc
inc
push
adc
inc
push
dec
dec
dec
jnp
mov
mov
push
xchg
ret
fisubl
dec
dec
and
out
inc
pop
adc
stc
inc
xor
xor
xchg
and
inc
dec
inc
xor
jg
push
inc
inc
dec
notl
dec
lods
fsts
sub
dec
mov
dec
lods
mov
das
sbb
mov
or
mov
push
push
push
test
mov
or
push
dec
loope
lahf
mov
push
push
push
dec
push
inc
mov
in
scas
dec
inc
dec
push
mov
leave
mov
mov
inc
push
mov
mov
or
xchg
add
or
mov
ret
test
push
fdivrs
dec
or
jmp
adc
movsl
mov
mov
faddl
fs
and
outsb
mov
sbb
inc
cmpxchg
jl
mov
dec
sbb
mov
and
jmp
or
fcomps
add
mov
jg
mov
lea
sbb
jo
jbe
add
mov
adc
add
pop
push
adc
ljmp
sbb
es
pusha
cmpsb
inc
cmp
stos
adc
inc
lods
lahf
mov
sub
inc
xor
das
dec
dec
or
sbb
inc
adc
out
xor
push
jle
loopne
je
jne
xor
mov
xorb
push
xchg
loop
mov
jns
dec
or
cld
testl
insb
fcoms
inc
adc
mov
pop
sbb
adc
addr16
jae
les
in
push
cmp
pop
cmp
je
or
pop
aas
xchg
cmp
clc
cmp
or
out
adc
or
or
mov
fimull
mov
mov
inc
adc
ficoml
dec
gs
rorl
inc
or
sbb
mov
call
je
insl
cmp
stos
and
jo
push
int3
push
je
cmp
jo
aaa
jmp
adc
das
xor
sbb
sbb
and
xor
jmp
cmp
adc
fucomp
loopne
ret
xlat
jmp
or
aas
cmp
cwtl
add
ret
dec
jmp
jnp
mov
add
pop
sub
jo
jg
mov
sbb
sbb
push
or
push
jb
inc
ficoml
sbb
addb
cmp
jo
das
dec
icebp
mov
cmp
cmp
inc
stos
clc
pop
insb
addb
or
aam
fs
sbb
push
inc
pop
cwtl
mov
flds
aad
push
adc
fiadds
push
or
or
fcmovne
mov
or
dec
fnsetpm(287
or
mov
cmp
sbb
sbb
mov
aad
out
test
xchg
push
xorl
mov
adc
jl
sbb
mov
sbb
inc
sbb
xor
pop
or
push
loop
jns
push
inc
pop
test
adc
mov
pop
jl
jne
sbb
mov
adc
mov
aas
pushf
inc
xchg
xchg
mov
sbbb
addb
ja
pushf
xor
push
push
mov
dec
inc
lea
neg
aaa
fcomi
fidivs
push
das
outsb
neg
push
mov
fdivrl
push
into
cli
push
sbb
in
add
mov
sub
add
add
lcall
add
push
shlb
inc
vorps
loopne
in
cmp
push
mov
or
outsl
push
and
xor
movsb
sbb
and
jo
and
test
cmc
dec
cmp
add
push
sub
pop
outsb
nop
and
push
sub
pusha
adc
inc
dec
enter
dec
xor
pop
movsb
test
inc
jb
jo
sbb
push
xor
enter
lock
adcl
xchg
sbb
push
pushl
nop
sbb
lock
and
and
scas
lock
in
push
lods
jne
out
fldenv
inc
inc
cmp
sbb
arpl
and
add
cs
in
loopne
pop
leave
rep
xor
mov
mov
and
shrl
lock
mov
sub
and
mov
lock
or
and
or
mov
mov
xchg
adc
je
mov
xor
sbb
adc
xor
jle
out
jns
or
sbb
xchg
mov
in
lock
mov
mov
xor
out
mov
fmull
push
adc
lods
or
ret
repz
add
add
add
dec
in
in
int
add
test
bound
inc
add
sti
inc
jo
loopne
cmp
jle
ret
cltd
rclb
insb
loop
call
or
mov
sbb
xchg
pop
inc
mov
adc
imul
sahf
or
arpl
hlt
in
and
xchg
js
dec
sub
fwait
mov
xor
xchg
cmp
xchg
jo
mov
imul
ret
jne
lea
clc
lea
leave
pop
add
jle
add
adc
push
jle
push
or
pop
aas
es
xchg
outsl
adcl
and
bnd
and
and
adc
movsb
adc
movl
cmp
cmp
mov
add
add
push
leave
mov
jbe
pop
imul
sub
pop
dec
adc
lea
and
sbb
xchg
mov
cmpsl
das
ds
and
insl
cli
cmp
cmp
sti
std
add
or
push
add
or
pop
or
or
sarl
or
cwtl
push
sub
push
push
pop
arpl
mov
xchg
andb
and
adc
fildll
cmp
cmpsb
cmp
addl
jp
psrlw
xor
fld
inc
sub
and
adc
sbb
and
iret
push
ds
shrb
adc
add
cmpsl
loopne
dec
adc
pop
add
not
jo
es
push
in
loopne
lods
cltd
rol
fmuls
mov
mov
cmpsb
jge
push
insl
enter
or
ret
mov
je
jbe
cs
mov
sahf
lods
mov
pop
dec
cmp
sbb
fsub
sub
shlb
adcb
xchg
ret
cmp
mov
rclb
xchg
mov
lret
lds
push
sub
mov
fisttpll
or
pusha
popa
sbb
bound
or
cmpsl
add
adc
fadds
mov
or
cmp
mov
pop
call
ja
push
hlt
add
add
dec
pop
ret
mov
out
dec
jb
mov
int
sub
mov
dec
sbb
mov
add
dec
lahf
sbb
adc
sub
mov
mov
popa
inc
and
mov
lea
or
pop
rcll
fs
je
sbb
jb
and
js
dec
add
iret
push
push
pop
cmp
mov
add
jecxz
xchg
outsw
pop
cli
fldz
and
dec
dec
add
or
pop
mov
je
mov
out
sahf
push
ret
sbb
push
xor
add
mov
add
xchg
or
or
pop
imull
push
aas
pop
add
andb
lea
orb
adc
rorb
inc
mov
pop
or
shll
sbb
push
das
adc
cmp
je
neg
push
pop
adc
adc
pop
in
ficoml
adc
cmp
push
imul
jl
add
cmp
imul
add
sub
mov
sub
call
and
cmpb
adc
sbb
out
adc
sbb
xchg
pop
out
and
loop
jnp
icebp
jne
or
inc
pop
push
adc
push
or
dec
add
idivb
sbb
cmp
add
mov
aas
mov
push
xchg
or
mov
xchg
hlt
push
inc
das
cmp
nop
cwtl
mov
xchg
xlat
push
adc
mov
sahf
outsb
push
aas
push
inc
inc
sbb
enter
cmp
mov
fwait
and
pop
xchg
in
pop
adc
sbb
movsl
push
pop
push
xor
push
push
cmpsb
sub
cmp
rcr
sti
sbb
lea
dec
adc
shrb
cmp
cli
les
xor
sub
inc
inc
pop
xchg
pop
dec
cld
addr16
add
dec
out
pusha
pop
hlt
repz
cmpsb
notl
hlt
cmp
enter
add
movsb
adc
in
inc
rorb
push
push
push
push
or
mov
lahf
hlt
adc
and
cmp
cmc
inc
ret
sub
aad
imul
sbbb
movsl
addr16
pop
push
je
cmp
sub
lock
push
cmpsl
es
jle
push
out
pop
push
test
push
xchg
jo
arpl
adc
mov
in
adc
lock
mov
neg
sarb
or
ljmp
push
push
dec
mov
or
dec
dec
gs
add
fiaddl
fincstp
shll
fnstcw
andb
ret
das
and
fcoml
push
xchg
jae
xchg
jne
sub
popf
xor
imul
loopne
scas
enter
xor
pushf
adc
adc
jle
sub
stos
int3
jmp
rolb
imul
pop
adc
and
shlb
mov
arpl
sbb
and
inc
xchg
or
cmpsb
fcompp
xlat
mov
and
insb
and
push
fucomi
fsubrs
sub
dec
jmp
jns
xor
jno
pop
bound
ds
xor
sbb
mov
pop
mov
add
inc
dec
push
push
and
pushw
int
jp
sub
push
lods
xchg
mov
data16
and
shrb
lea
mov
imul
or
bsr
adc
rcll
jnp
inc
insb
sbb
xchg
lea
inc
cltd
imull
add
loopne
or
and
mov
pop
sub
adc
test
cmp
dec
adc
adc
dec
pop
imul
jecxz
mov
add
mov
pop
pop
pop
pop
push
adc
clc
add
jne
and
mov
sti
mov
sub
adc
adc
mov
or
sbb
add
frstor
and
jo
jae
pop
outsb
and
dec
cmp
sub
dec
js
adcl
mov
ret
sub
jns
jbe
push
xor
and
mov
sub
shl
mov
push
out
ret
mov
jmp
hlt
inc
clc
movw
mov
cld
push
mov
push
mov
cld
aad
or
push
sub
adc
mov
fimull
sbb
mov
inc
loope
fldl
add
ds
ds
mov
inc
movzwl
lea
cmc
jg
pop
push
cmp
pop
movsb
push
cs
jmp
addr16
shlb
out
push
cs
push
inc
cld
icebp
and
push
aas
fadds
dec
or
sahf
mov
cmp
xchg
ja
clc
push
test
leave
out
inc
add
inc
bound
push
or
ljmp
test
das
or
add
clc
loopnew
and
incl
mov
push
lds
addb
pop
xorb
rcll
pop
clc
popf
adc
sarl
xlat
ror
sbb
or
xor
dec
mov
bound
lds
int
cmp
movups
pop
call
aaa
imul
adc
add
and
xchg
push
or
add
pop
adc
movsb
xchg
insl
out
movsb
pop
aas
je
push
push
or
or
hlt
or
xchg
add
jge
cs
cwtl
leave
faddl
shlb
in
mov
icebp
adc
push
negl
adc
xchg
sub
rcll
test
adc
out
push
das
je
addl
ljmp
dec
addb
loope
add
push
gs
pop
loopne
adc
mov
hlt
and
dec
add
push
jo
and
adc
add
outsb
or
inc
sub
js
xor
rorl
push
addr16
cli
mov
inc
and
adc
repnz
das
jns
sbb
test
add
mov
sub
jae
push
repnz
lods
lock
or
inc
aas
enter
push
jl
push
xchg
pop
push
or
pop
push
nop
inc
sub
sbb
mov
or
pop
pusha
jne
sbb
sbb
add
xchg
subb
in
mov
cli
jmp
jg
test
jle
cmp
jl
cmpsb
aaa
and
fldcw
lcall
add
dec
cmp
jle
dec
push
sbb
add
push
xor
mov
push
sbbb
cmp
dec
ljmp
or
pusha
popa
mov
or
fcoms
test
xchg
es
pop
sbb
cwtl
push
mov
psubusb
scas
add
fdivrs
mov
lods
xchg
sbb
sub
cmp
or
pop
orl
ja
mov
sbb
mov
jno
das
ds
xchg
ss
sub
cmp
test
mov
lahf
lret
add
inc
ret
mov
and
sub
loopne
es
cmp
adc
mov
pop
mov
jl
cli
mov
int3
dec
das
sti
inc
dec
jne
cmp
add
mov
adc
cmp
sbb
std
rcrl
sub
in
add
sub
cmp
add
adc
les
test
add
lea
mov
add
nop
nop
xchg
dec
pop
pop
mov
pop
mov
jbe
nop
pop
pusha
mov
mov
mov
push
mov
mov
ret
outsl
xor
ljmp
inc
rolb
rep
fdivrs
xchg
mov
mov
adc
mov
or
je
or
fs
pop
fdivr
push
imul
imulb
movntq
imul
pop
in
xorb
and
mov
jb
and
pop
xchg
mov
pop
xor
push
imul
jl
pop
out
lods
das
add
adc
push
jge
stos
or
mov
push
in
aas
fstpt
jl
push
mov
lea
xchg
inc
adcb
or
sub
inc
mov
sub
or
je
dec
inc
loopne
imul
jle
lock
jmp
loope
sub
pushf
push
in
jmp
setb
shrb
adc
dec
push
adc
insb
and
clc
icebp
int3
movsb
sub
or
inc
and
jae
and
scas
xor
push
push
sub
fsubrl
sub
insb
shll
lret
dec
pop
jne
dec
sbb
je
out
lds
mulb
add
add
es
je
cmpl
test
sbb
in
push
imul
aas
pop
fildll
test
hlt
and
or
xchg
xchg
das
mov
imul
push
dec
dec
push
sub
or
aaa
mov
sub
ret
mov
ja
mov
sahf
push
clc
roll
hlt
ljmp
cwtl
fcomps
push
xchg
call
xlat
mov
or
lahf
lods
pop
jl
cmc
mov
testb
leave
roll
in
mov
jg
push
xchg
push
sbb
sbbb
cmp
aas
addr16
push
in
hlt
int3
xchg
repnz
ret
loopne
and
add
pushf
mov
clc
call
sbb
sub
mov
fwait
adc
and
add
shl
enter
sarb
inc
push
add
lock
jb
nop
or
jb
iret
sub
inc
fmuls
fidivl
mov
dec
insb
in
cmpsb
add
mov
lods
or
lods
dec
or
jbe
push
stos
push
orb
jle
mov
outsb
mov
mov
jnp
jl
add
push
xchg
dec
hlt
int
dec
fldt
lock
cmp
shlb
adc
clc
call
movl
and
mov
insb
add
add
push
out
movb
out
jo
pusha
xor
aaa
pop
inc
js
popf
jno
ret
into
pop
mov
sbbb
inc
ja
lods
sbb
shll
testl
das
push
xor
xor
ljmp
addr16
push
adc
dec
jle
lcall
or
popa
xchg
pop
sbb
inc
xorl
dec
cmp
orb
cmp
rol
or
je
sub
xchg
sbb
jne
cwtl
pop
adc
add
rolb
dec
jnp
push
xchg
fstps
cmp
pop
inc
dec
nop
pop
push
cmp
mov
popl
sahf
push
dec
or
orl
xchg
and
pop
jne
cmp
xchg
lret
jl
push
or
cmpsl
mov
mov
lret
pop
push
inc
dec
ds
mov
cmpsl
push
jo
dec
inc
cmp
cld
sarb
cmp
jo
mov
insl
add
insl
add
inc
or
sahf
and
les
push
scas
cmp
movl
pop
into
and
mov
cmpsl
daa
imul
das
cmp
and
imul
daa
pop
mov
pop
push
fbstp
ds
mov
aad
add
fmull
push
add
into
add
adc
push
inc
adc
jae
add
jne
lahf
and
adc
push
mov
bound
dec
scas
pop
xor
dec
sub
in
clc
mov
les
sbb
mov
cmp
sbb
mov
jne
add
xchg
cmp
xchg
xlat
enter
ja
popw
imul
bound
je
fiaddl
inc
or
loop
pop
adc
sub
cmp
ja
xor
xor
fldenv
icebp
cmc
scas
pop
popf
add
mov
ficoms
ret
and
jle
inc
test
insl
push
rol
ljmp
pusha
or
cs
mov
cltd
mov
cmp
mov
inc
xor
cltd
or
les
jge
or
sub
ficompl
xchg
jne
pop
push
ss
lods
nop
jnp
dec
xchg
clc
push
pushf
cmp
orb
add
pop
push
mov
adc
ja
imul
dec
fcoms
pop
push
sub
or
in
inc
aaa
mov
dec
pop
and
push
nop
aaa
dec
insb
and
and
inc
mov
pusha
mov
leave
cmp
shll
cmp
js
dec
sbb
cltd
js
out
call
cmpl
sahf
jmp
cltd
add
mov
fcoms
mov
dec
lods
mov
mov
and
or
aaa
mov
or
inc
cwtl
test
loopne
movsb
push
loope
addl
xor
pop
add
lods
adc
inc
mov
mov
add
mov
test
test
cmpsb
movsl
test
push
and
call
push
jmp
iret
mov
roll
movsb
xor
mov
xor
pusha
inc
and
dec
stos
xor
mov
or
rcrl
sub
pop
mov
das
sbb
ret
nop
dec
sbb
add
pop
adc
mov
test
push
and
es
out
mov
loope
push
or
xchg
push
xchg
nop
das
xlat
adc
jne
negl
pop
xor
jmp
or
lds
orl
out
adc
and
or
arpl
das
sbb
nop
das
sub
fistps
scas
and
xchg
xchg
and
mov
push
mulps
adc
or
dec
gs
lret
or
imul
aam
popf
cmpsl
push
stos
cmp
mov
inc
xor
push
adc
movsl
in
cmpl
add
sbb
fldl
pop
jmp
les
inc
iret
jmp
jecxz
and
mov
leave
push
inc
sbb
push
ret
mov
xchg
inc
addl
xor
ret
dec
daa
fimuls
jnp
fdivrs
and
push
sbb
je
jge
stos
or
rcll
add
pop
ret
pop
pop
dec
sub
or
push
pop
enter
inc
ds
xor
pop
je
clc
inc
ja
push
imul
pusha
lods
adc
fistpll
push
das
and
mov
mov
pop
mov
scas
add
inc
adc
fst
xchg
das
mov
push
add
movb
push
and
and
or
jle
cmp
mov
sbb
inc
imul
dec
in
sub
js
xchg
dec
push
sub
mov
lods
inc
outsb
ret
test
sbb
test
jns
xor
sbb
adc
sbb
nop
push
jnp
xchg
mov
xchg
lods
addl
jg
in
or
push
enter
add
mov
xchg
call
aaa
and
fnstenv
dec
adc
adc
or
xorl
adc
arpl
mov
dec
cmp
stos
pushf
sti
aas
mov
pop
jne
push
mov
pop
sub
mov
push
dec
sbb
or
fwait
and
xor
stos
pop
imul
adc
call
push
adc
jmp
push
mov
ret
popf
rorb
sub
dec
or
je,pn
or
sarb
pusha
sbb
or
pusha
in
aad
push
enter
nop
jecxz
out
dec
insl
add
jbe
ss
xorl
mov
dec
mov
fistpll
adc
sbb
dec
or
test
add
push
clc
mov
add
sub
push
dec
jmp
call
push
jns
pop
pop
sub
aaa
push
sbb
xchg
xchg
call
add
inc
xchg
stc
cmp
sub
xor
push
mov
add
bound
and
jno
jmp
cmp
sub
fdivs
mov
xchg
lahf
cwtl
push
popf
daa
or
arpl
push
cwtl
mov
lahf
leave
xchg
jge
and
inc
je
rcrb
mov
cld
sub
cmp
and
pop
sub
or
lea
test
imul
dec
enter
add
pop
fs
jae
dec
imul
xchg
dec
cmp
add
mov
sbb
loopne
cmpb
mov
xor
fmuls
shlb
adc
inc
push
subb
cmpsl
int
fiadds
ret
or
add
insb
cld
int
lcall
js
pop
repnz
xor
movsb
loopne
clc
push
sar
hlt
mov
add
mov
pop
and
push
data16
or
xor
ljmp
sub
push
lret
mov
push
push
in
ret
jae
inc
mov
shlb
cmp
or
insb
movsl
fwait
outsl
rorb
fimull
xchg
mov
aad
loopne
lea
mov
pop
mov
xchg
or
xchg
inc
adc
cld
loope
add
push
lods
push
hlt
std
scas
add
jcxz
mov
mov
je
and
inc
addr16
inc
sti
das
and
and
push
mov
aam
sarb
popl
or
sbbl
adc
sub
xchg
iret
enter
sub
loop
mov
fldcw
dec
add
push
inc
les
fdivs
inc
xor
int3
xchg
les
out
add
inc
js
mov
rcl
jl
jo
jmp
push
stc
mov
pop
fs
popf
push
fadds
cwtl
lock
pop
aaa
mov
or
sbb
loope
incl
and
jo
je
daa
pop
inc
push
sbb
in
adc
ja
xor
int
or
cltd
nop
orl
sbb
movsl
nop
pop
push
push
pop
sub
cmp
fists
fisubl
bswap
sub
xor
xchg
mov
es
sub
rolb
pop
adc
sub
add
adc
mov
rcrb
lahf
jmp
cmpl
mov
adc
sbbl
test
pop
ficoml
adc
or
movsl
pop
fidivl
sbb
sbb
mov
int
and
mov
rdtsc
lock
push
clc
cmp
insl
mov
in
hlt
sbb
loop
cmpb
push
push
adc
dec
fadds
in
xor
sarb
popa
push
fisttpl
jo
dec
pop
adc
sub
aad
adc
addl
shrl
jno
cmp
popa
and
outsb
clc
ret
mov
test
mov
dec
adc
dec
push
stos
sahf
or
push
imul
orb
jmp
push
push
loope
pop
lods
popf
jo
cmpb
js
jmp
repnz
lea
mov
xor
sbb
out
imul
jo
je
mov
xchg
or
push
mov
imul
insb
hlt
mov
pushf
mov
in
outsb
add
or
call
mov
push
push
xor
call
mov
ror
inc
cmp
ret
rcll
fmul
gs
push
sbb
je
fisubs
jne
call
rclb
stc
lods
aaa
or
dec
or
js
jmp
add
push
dec
adc
xor
xor
mov
int3
insl
cmp
dec
pushf
push
pop
in
pop
xchg
fwait
add
outsl
mov
jo
or
and
movl
pop
or
inc
jns
mov
xchg
sbb
mov
cmpl
xor
mov
mov
mov
sub
xor
xor
jbe
insl
arpl
movsl
inc
or
dec
cld
dec
rolb
dec
rcrl
add
call
push
inc
lcall
sbb
sub
mov
adc
jo
or
cmp
and
imul
pop
sbbb
or
daa
je
ja
andl
cmp
mov
pop
pop
sub
jo
loopne
push
adc
inc
jmp
pusha
punpckhdq
enter
xor
mov
bound
xchg
mov
or
sub
mov
ja
dec
pop
cmpsl
in
pusha
test
inc
pop
shl
xchg
in
mov
sub
pop
xor
sub
adc
les
dec
dec
cmp
xchg
dec
adc
mov
orps
les
and
jmp
cmp
out
pop
dec
adc
int3
push
and
cwtl
xchg
pop
pusha
push
jae
pusha
nop
andl
dec
xor
repnz
push
adc
mov
and
decl
jge
xor
pop
pop
push
mov
or
stc
adc
cli
mov
inc
lea
pop
xor
enter
movsl
sbb
in
mov
or
xor
add
mov
imul
adc
fisubrs
out
lock
sbb
cmp
mov
xor
xchg
ficoml
imul
cmp
mov
fsubrs
sbb
mov
push
sub
xor
jb
sub
xchg
push
loopne
add
mov
cmp
lds
sbb
mov
inc
not
mov
je
fiaddl
jne
in
add
jle
es
adc
movl
ds
loopne
dec
pop
dec
sbb
and
add
or
arpl
ffreep
adcb
in
ret
add
sbb
sbb
and
add
and
inc
jne
or
add
sbb
add
jae
movsl
nop
dec
sbb
inc
pop
xor
test
fs
jge
and
mov
in
mov
mov
pcmpeqb
out
leave
pop
jns
sub
add
adc
inc
adc
pop
sbb
les
cwtl
sub
pop
ret
addr16
fbld
inc
mov
and
fs
dec
ret
add
xchg
adc
xchg
jmp
insb
lahf
stc
push
sbb
mov
mov
out
push
fmull
adc
cli
int
sbb
in
repnz
mov
mov
fistpl
int3
sub
push
or
push
lods
sbb
sbb
xor
xor
fdivrs
cmpsl
hlt
cmp
dec
je
cld
pusha
stos
aad
repnz
movsb
insb
in
nop
add
je
scas
xorl
cmp
fcoml
xchg
insl
fisubrl
inc
aaa
sbb
std
sub
dec
jmp
outsl
cmp
je
out
rcll
daa
sub
push
adc
add
inc
bound
or
sub
xchg
xchg
push
mov
inc
icebp
in
jne
iret
lock
daa
pop
inc
push
mov
test
addr16
fmull
cmp
jne
adc
jbe
mov
xor
test
movb
je
pop
movsb
jnp
enter
inc
pop
adc
sbb
adc
and
or
jbe
jns
cli
js
pop
das
ss
xor
imul
jg
mov
sbb
imul
mov
adc
cmpsb
inc
stos
and
out
adc
dec
dec
in
jb
fistpl
and
sub
sub
push
mulb
pusha
orb
pop
adc
mov
adc
add
inc
xor
lock
push
mov
loopne
repnz
nop
nop
scas
scas
js
push
test
fisttpll
sbb
lret
es
push
fcoms
sbb
loopne
outsl
arpl
xor
dec
dec
loop
and
jmp
cmp
in
stc
push
inc
les
sbb
xchg
mov
xor
mov
cmp
sub
sahf
sub
push
pusha
jp
jb
add
aam
jge
dec
loop
and
pop
mov
popa
xchg
and
add
into
je
dec
fisttpl
iret
mov
popa
inc
or
jle
in
or
mov
xchg
inc
cs
sahf
push
push
pop
mov
jo
cwtl
es
nop
dec
popf
hlt
add
nop
xor
ret
shlb
and
fwait
sub
push
arpl
jnp
pop
ret
iret
mov
jo
js
lods
loopne
call
push
dec
xchg
test
in
ds
mov
or
pop
inc
addr16
sti
jne
nop
imul
xor
xchg
fiaddl
xchg
mov
test
daa
add
or
add
or
cmp
jno
cwtl
cmp
sub
xor
push
fnstenv
mov
sbb
rclb
imul
inc
outsl
pop
adc
out
pop
inc
sub
js
into
mov
pop
in
popa
les
rorl
jmp
or
pop
pop
pusha
inc
inc
push
loopne
shlb
inc
adc
jge
enter
sbb
cmpb
push
movsl
andl
ret
inc
sub
dec
xchg
fiadds
test
adc
mov
jge
fiaddl
pop
mov
inc
jge
cmp
xchg
xor
adc
sub
cmp
and
pop
sahf
dec
xor
cmp
movsl
xor
fld
sbb
es
push
mov
ja
or
lahf
lods
and
sub
jle
add
movsb
push
and
jb
stos
push
mov
arpl
inc
jo,pt
orl
adc
xchg
sarb
xor
mov
jp
test
insb
movsb
cmp
add
sub
and
jo
fs
sub
or
mov
scas
sbb
shlb
and
aas
pop
jno
mov
push
or
push
addr16
test
loop
mov
out
fmuls
call
push
sbb
fsubl
cmp
movb
mov
adc
lea
daa
lret
scas
push
pop
xor
xor
test
imul
ljmp
xchg
push
cmp
lds
jbe
imul
cmp
inc
lods
adc
mov
dec
lods
push
sbb
nop
imul
sarb
movzwl
add
test
push
dec
in
scas
shll
cmp
out
lds
add
bound
mov
cmp
push
dec
arpl
pop
fsubrl
add
push
mov
or
pop
mov
out
stos
and
leave
sub
pop
mov
std
sbb
mov
in
ret
add
mov
adc
and
scas
call
lock
dec
inc
or
jnp
mov
inc
lret
repz
sbb
pop
adc
jp
and
push
push
jmp
xor
add
mov
scas
or
mov
pusha
in
ffree
mov
adc
das
adc
lea
ret
sub
jmp
shrb
mov
jmp
sub
xor
call
cs
cmpb
mov
adcl
mov
push
sti
insl
jl
adc
pop
and
fcom
push
test
sbb
daa
pushf
test
mov
rcll
xor
add
clc
sbb
out
subb
xchg
pop
adc
pop
sub
pop
sub
add
cmc
cli
mov
inc
xor
xor
sbb
das
rorl
adc
pop
ja
sbb
orl
aad
push
adc
pop
sbb
andl
jo
sbb
loopne
or
inc
sub
cmp
outsb
push
inc
out
mov
sbb
gs
xchg
pop
add
pop
jo
shll
sbb
iret
xor
dec
jne
jmp
fs
pop
push
test
inc
jae
dec
pop
sbb
inc
testb
or
mov
nop
ja
jb
pop
imul
adc
mov
sbb
aad
sbb
sbb
and
inc
add
dec
or
push
dec
vpshab
dec
adc
push
insb
mov
ja
loop
aaa
les
or
mov
add
lods
ret
cs
icebp
lods
dec
iret
jne
sbb
or
insb
mov
les
inc
add
or
nop
lods
lcall
sub
ss
dec
insb
adc
ja
xchg
outsl
pop
sub
test
jmp
add
mov
dec
nop
loop
data16
lds
shlb
dec
pop
jg
mov
sub
pop
fcoml
sbb
inc
adc
dec
movb
push
xor
hlt
add
mov
sbb
cmpb
push
sub
xchg
or
or
js
es
pop
adc
add
insl
fmuls
sub
into
mov
aaa
cld
mov
sub
jo
stos
push
cwtl
sbb
push
push
loope
add
lcall
imul
cmp
jl
push
and
adc
inc
popa
pop
or
adc
adc
movb
mov
mov
xor
add
add
adc
push
lods
jecxz
orb
mov
dec
into
sub
les
inc
jo
cmpb
and
xchg
push
sub
sbb
push
clc
pushf
ret
addr16
lea
inc
loope
push
mov
and
adc
inc
cmp
push
or
inc
xchg
or
sub
sbb
cs
xor
or
jo
sbb
das
mov
ja
dec
imul
push
dec
mov
daa
pop
sub
mov
inc
jbe
mov
jno
push
xchg
jmp
nop
inc
push
ret
xchg
test
xchg
pop
xor
out
lods
aas
dec
pop
inc
lods
pop
push
ficoms
rclb
push
jb
insl
clc
loopne
inc
bound
or
fcom
dec
out
rcr
jne
arpl
dec
or
add
loop
fwait
xor
mov
sbb
insl
test
mov
stos
mov
or
pop
les
cmp
or
or
sahf
test
push
or
push
sub
scas
add
xchg
test
push
call
mov
cmpsl
jmp
add
inc
call
push
dec
nop
movsl
mov
cmp
push
aam
lds
jo
inc
dec
enter
call
dec
push
cmp
xor
sub
daa
dec
add
add
test
sahf
push
pavgw
adc
inc
call
push
inc
in
jl
push
add
add
sub
outsb
push
pop
push
imul
jne
sbb
push
in
sub
dec
xorl
xchg
jmp
jge
jno
inc
or
fwait
inc
gs
test
jb
jbe
dec
inc
ret
dec
sub
sub
mov
lods
cwtl
cmp
jbe
mov
and
in
inc
xchg
cmp
or
sub
lods
enter
or
mov
mov
or
mov
mov
into
push
mov
xor
push
jmp
add
jae
jmp
jbe
mov
es
xchg
add
sbbb
std
cmpsl
jge
inc
or
add
xchg
inc
sub
mov
mov
push
movsl
push
fs
scas
mov
sub
xor
inc
sub
shlb
push
mov
fucom
and
sub
cmp
sahf
inc
in
xor
inc
cmp
push
fmuls
add
loope
mov
and
push
or
jle
and
sar
dec
aad
fcomps
dec
and
push
fs
movsl
add
ja
jno
lea
inc
jae
and
test
enter
add
mov
ret
mov
test
jne
dec
fwait
je
mov
shlb
xchg
push
das
mov
es
mov
push
adc
pop
adc
add
es
test
popa
ja
xor
clc
das
xor
mov
push
fisubrl
cmpsb
mov
scas
pop
dec
cs
pop
rcrb
add
adc
push
jmp
sbb
xchg
cmpsl
ret
xor
or
movsl
leave
xchg
ret
lea
mov
mov
nop
sbb
xor
and
lods
aas
cmp
sbb
fsub
lods
adc
lret
sarb
sbb
or
loope
mov
fcomps
into
push
addb
js
xchg
movq
jle
or
inc
add
jge
mov
mov
inc
dec
faddl
test
icebp
fldl
dec
outsl
adc
adc
push
jo
sbb
int
xchg
les
fdivl
dec
adc
ds
js
or
and
nop
xchg
lea
or
add
dec
xchg
sbb
and
xor
mov
inc
adc
add
lods
jae
and
adc
or
push
push
in
pop
dec
or
add
mov
loop
sub
lods
les
nop
sub
push
add
adc
inc
push
je
jae
add
add
and
es
adc
sub
adc
dec
adcl
xlat
adc
sti
das
inc
js
pop
cwtl
addl
repz
cmp
pushf
pusha
xor
int
jge
js
mov
sbb
jecxz
pop
hlt
and
pop
and
push
sub
iret
sub
jge
inc
lea
fcmovbe
inc
stos
test
add
and
push
loope
imul
xchg
and
filds
subb
add
addr16
inc
roll
push
mov
insb
xor
arpl
cli
cmp
push
stc
mov
mov
icebp
movsb
paddq
les
mov
stc
jmp
outsb
sub
dec
mov
push
mov
test
testb
push
push
or
cmpb
rorb
dec
xor
or
ds
mov
add
addb
cmpsb
add
sbb
lods
dec
test
sub
js
xor
test
rcrl
cmp
mov
imul
fsubs
add
jne
sbbl
aaa
inc
je
fbld
loope
sub
fmull
pop
mov
or
adc
sbb
sbb
add
dec
stos
adc
lds
out
aas
outsl
mov
out
daa
xchg
dec
lret
je
stos
and
and
or
dec
jbe
data16
mov
daa
jne
mov
ja
xchg
cmpsb
add
sub
int
ror
cs
push
push
fwait
pop
jmp
inc
sti
daa
dec
sti
push
xor
testb
je
fmuls
jle
push
mov
or
pop
sub
or
inc
mov
rclb
and
fidivrl
test
adc
and
adc
push
or
jo
inc
sarb
add
inc
sub
loope
aaa
mov
xchg
pop
add
xor
adc
jmp
lods
add
add
or
scas
adc
mov
lods
and
lock
push
add
add
inc
add
lea
loopne
in
mov
sbb
push
aad
adc
xor
cmpsl
xchg
pop
xor
push
push
add
testb
inc
and
sub
xchg
xchg
sbb
xor
nop
adcb
rol
ret
das
xor
outsb
or
inc
add
data16
popf
push
xchg
jmp
addb
aam
outsb
dec
test
cmp
test
mov
jnp
mov
or
aaa
jnp
xorb
cmp
add
test
aam
punpckhdq
adc
nop
lret
mov
push
daa
adc
add
aas
push
mov
bound
and
mov
push
in
mov
inc
xlat
add
mov
dec
xor
lock
sbb
and
inc
mov
push
int3
adc
gs
jmp
add
push
movsb
inc
sub
lock
cmp
or
xchg
pop
xchg
mov
or
cld
cld
jo
dec
aas
stc
xchg
pop
cmp
add
inc
imulb
dec
jo
or
push
and
insl
adc
test
mov
mov
or
pop
and
adc
cmp
lea
adc
xchg
pop
sbb
sbb
lret
scas
or
vpermil2ps
inc
bound
fnstsw
pusha
cltd
outsl
sbb
and
or
and
push
cmp
and
insb
adc
bound
sbb
inc
shlb
test
shll
jle
push
into
push
sub
pop
inc
popa
repnz
mov
cwtl
cli
xorb
adc
rorb
push
aam
or
cmp
subl
hlt
clc
xor
lea
mov
mov
or
ret
mov
mov
mov
mov
xor
pop
aaa
xor
imul
xchg
inc
sbb
xchg
adc
inc
pop
movb
jmp
movsl
rolb
enter
pop
leave
cltd
pop
cmp
notl
loope
jb
cltd
mov
dec
adc
ss
mov
dec
aaa
out
mov
int
subb
test
cmp
sbb
call
pusha
add
inc
imul
xchg
fwait
dec
dec
add
sbb
push
sbb
and
xlat
rcl
fs
jmp
insb
or
daa
or
xor
or
xchg
and
add
in
lcall
out
cli
test
stos
and
pushf
and
mov
daa
std
xor
in
xchg
xor
mov
nop
push
clc
pop
nop
aam
and
fcoml
inc
bound
icebp
and
and
mov
fwait
xor
lods
mov
push
popa
push
cmp
loope
mov
mov
pop
add
dec
push
pop
push
push
clc
add
popf
sub
fsubrs
cmpsb
imul
xlat
dec
push
and
mov
cli
and
and
je
ss
adc
aas
and
cmpsl
mov
or
dec
push
lret
dec
mov
outsb
or
jbe
sub
mov
mov
fadd
into
pop
add
mov
push
out
mov
and
inc
lods
adc
test
sub
ljmp
loop
jne
add
andl
xor
pop
outsb
or
xchg
imul
sub
psrlw
test
mov
rorl
pop
add
pop
sahf
fmuls
sbb
test
xor
pop
clc
and
and
inc
or
addb
sbb
fmuls
push
xchg
push
fsubs
mov
testb
sbb
or
inc
push
std
mov
int3
sbb
inc
cmp
mov
pop
stc
addr16
dec
sarb
push
cmp
ret
mov
push
adc
pusha
or
imul
jae
push
sbb
test
adcl
dec
or
or
insb
leave
mov
xchg
stc
xchg
pushf
call
jp
adc
xor
mov
push
pop
mov
mov
inc
inc
cvtps2pd
imul
pop
adc
cmp
xor
push
sbb
nop
inc
mov
or
jge
ja
push
pop
or
mov
stos
out
sarl
sbb
adc
das
rcrb
mov
sbbb
mov
push
xchg
push
push
push
mov
sti
nop
inc
or
dec
loope
mov
jg
ja
dec
or
inc
jb
test
mov
sbb
add
adc
jmp
or
ret
inc
or
out
clc
adc
aas
lods
les
or
mov
sub
and
sub
loope
fcoml
push
xchg
cmpsl
es
addr16
xor
mov
out
insl
sub
mov
movsb
push
xor
outsl
jo
sbb
jo
xchg
xor
push
cwtl
dec
inc
adcl
inc
inc
icebp
adc
pop
mov
inc
jne
data16
popa
mov
xor
or
xchg
je
or
je
popa
outsb
xor
sub
pop
xchg
or
ret
movsb
fwait
mov
repnz
divl
js
push
fistpll
jmp
mov
sub
mov
pop
xor
mov
daa
loope
sub
sbb
sub
inc
add
rolb
sbb
add
int
jle
decl
movsl
loopne
out
es
sbb
mov
or
or
lods
mov
fs
fs
fs
loopne
fs
jb
fs
cld
add
add
fs
adc
fs
and
fs
xor
fs
inc
fs
dec
push
push
bound
fsubs
sbb
sub
and
adc
xor
mov
test
jnp
sbb
ret
xor
cmp
xchg
and
jecxz
add
push
movsb
xor
and
gs
sub
inc
mov
push
mov
xchg
sarb
adcb
int3
add
nop
rcl
aam
gs
sub
fmuls
sub
push
mov
or
gs
in
call
dec
in
pop
push
push
movsb
xor
insb
hlt
sbbb
lret
nop
cld
nop
aaa
pop
push
mov
pop
push
sbb
mov
add
nop
fmuls
adc
sub
adc
stos
sub
push
mov
or
gs
and
and
insb
push
push
movsb
xor
xor
cwtl
cmp
add
cmp
test
loopne
clc
in
xchg
add
lods
dec
add
inc
fnsave
xchg
push
pusha
pop
xlat
xchg
add
test
adc
enter
loop
je
aad
adc
lods
std
test
inc
insb
outsl
jae
and
imul
inc
rorl
in
push
jnp
mov
and
jae
or
mov
mov
inc
fucomi
in
sub
aas
out
mov
or
fcomps
dec
arpl
inc
sbb
dec
jae
cld
dec
in
push
xorb
mov
jns
jp
or
push
push
outsl
pusha
int
ret
mov
pop
fistps
xor
pop
mov
fisttpll
pop
pop
ret
xchg
inc
jns
movsb
rclb
adc
or
or
mov
orb
or
fldt
cmpsl
mov
jo
adc
fidivrl
mov
iret
adc
outsb
popa
and
jns
in
mov
les
xorl
bound
fadds
push
sub
sbb
es
xorl
mov
sbb
jecxz
les
test
das
pop
fs
pop
mov
leave
push
das
les
pop
pop
inc
cmp
nop
xchg
cwtl
mov
loope
adc
pop
mov
pop
in
sbb
adc
push
push
mov
adc
adc
mov
adc
loopne
pop
jne
ficomps
sbb
jg
inc
test
daa
ficoms
and
xchg
out
pop
sub
jb
test
les
loope
pop
lods
cmpsl
mov
loop
subb
adcb
aaa
test
xchg
clc
push
dec
inc
push
dec
xlat
inc
ja
ret
cmpsl
iret
jmp
cld
outsl
sbb
mov
xor
cmp
inc
mov
mov
lcall
es
pop
and
jge
or
xorl
stos
mov
daa
jl
xsaves
mov
jl
xchg
lods
sub
adc
mov
xor
or
inc
ja
sub
or
adc
or
inc
sub
cmp
and
imul
cli
sbb
xor
adc
pop
inc
rcrl
adc
je
and
fs
jae
addl
adc
push
sbbb
mov
rolb
sub
test
or
fdivs
sbb
cmpsb
movsb
jo
sbb
sbb
shrl
mov
out
mov
and
movsb
fidivrl
cmpl
xlat
pusha
incb
mov
je
jle
add
inc
aas
enter
add
xor
push
jo
inc
mov
test
addb
stc
data16
rcr
loope
and
sbb
imull
add
adc
data16
insb
pop
cmp
sub
push
movsb
out
jmp
mov
inc
loopne
shr
dec
fdivr
fisubl
pop
aam
add
mov
mov
inc
jmp
jnp
addb
push
in
ret
lds
lea
loope
bound
mov
pop
sub
je
mov
pmulhuw
mov
bound
jbe
jp
xor
push
add
imul
sbb
out
add
xor
mov
pop
fildl
add
dec
fs
dec
dec
pushf
add
clc
leave
inc
addl
test
adcb
mov
out
in
flds
leave
pmuludq
push
movlps
push
and
sub
and
rorb
add
push
nop
out
sbb
je
add
idivl
ljmp
fdivl
jecxz
into
shl
mov
int3
adc
jnp
pop
adc
pop
aas
fidivs
mov
mov
jns
mov
stos
sub
je,pn
cwtl
adc
add
adc
or
lahf
je
enter
dec
sbb
inc
or
or
jae
fcoml
adc
xor
pop
dec
dec
mov
out
dec
push
inc
pop
fs
inc
das
orl
cpuid
mov
sbb
sbb
push
mov
xchg
push
sbb
call
push
fadds
cwtl
insb
sbbb
mov
push
lods
cmp
int3
mov
les
mov
call
xchg
fs
out
sbb
push
pop
rolb
mov
fldl
cwtl
push
in
pop
cld
call
movsb
pop
push
cwtl
dec
out
or
cmp
pop
aas
pop
in
sbb
ja
ss
sbb
popl
push
push
outsb
dec
jo
jo
cwtl
mov
or
mov
lea
inc
or
into
inc
aaa
fmuls
pop
and
pop
divl
fstl
mov
push
mov
inc
sahf
mov
inc
orb
clc
and
push
jns
push
lock
xor
jne
push
rorb
mov
lahf
test
lret
and
add
clc
shr
dec
aam
mov
psubq
push
fmuls
outsb
push
imul
mov
cmp
cmp
mov
js
cmpb
xchg
lods
imul
sbb
sbb
push
inc
push
or
add
fwait
aam
mov
insb
mov
in
push
dec
sub
in
sahf
xlat
xchg
dec
dec
loopne
sub
lcall
pop
imul
fadds
mov
dec
lods
add
xchg
or
inc
cwtl
jmp
sahf
sub
rolb
mov
sub
addr16
cmpsl
lods
and
xor
out
outsb
test
enter
repnz
in
mov
xor
xchg
cmp
ds
push
mov
jo
add
inc
inc
push
xchg
dec
xor
xor
loop
pushf
cs
test
xor
dec
pop
sub
shlb
bound
add
inc
mov
cmpb
js
mov
repnz
and
xor
inc
in
sbbb
inc
sub
inc
clc
rcrb
pop
pop
pop
mov
inc
adc
dec
repz
sbb
push
push
inc
enter
repz
pushf
mov
inc
jbe
push
pushf
nop
fdivp
mov
call
push
in
cmp
mull
cld
jle
hlt
or
fidivrs
add
or
mov
adc
adc
inc
and
outsb
sbb
inc
add
pushf
sti
fidivs
push
push
add
cmpsb
push
push
push
test
std
mov
push
cs
pusha
movhps
push
or
loop
inc
aas
hlt
sahf
int3
outsb
fiaddl
shll
and
ds
add
push
dec
inc
aas
pushf
mov
pslld
movsb
int
pushf
in
jnp
sti
outsb
pop
addr16
push
bound
pushf
mulb
nop
push
mov
into
xchg
sub
sub
dec
mov
sub
dec
loopne
test
fwait
int
add
mov
inc
js
clc
sarl
enter
mov
fwait
or
adc
fcos
sbb
orb
js
push
dec
sub
pop
xchg
popl
sub
xlat
hlt
lret
fwait
in
icebp
push
adc
ss
fisubs
push
pusha
push
inc
jle
mov
in
push
pop
cmp
pop
je
xchg
mov
xchg
add
mov
xor
ljmp
push
pusha
rorl
pop
adc
mov
dec
pop
jo
pop
adc
mov
sbb
inc
cwtl
push
aaa
and
xchg
test
jp
jo
jae
inc
cmpsb
mov
jno
mov
adc
das
dec
test
or
add
or
dec
xor
or
sub
stos
test
movl
push
sbb
cmp
pop
push
push
mov
lret
and
add
jb
push
daa
lods
inc
sbb
pop
insb
pop
sbb
or
inc
cmp
popa
pop
jae
mov
or
sbb
lods
stos
sbb
add
in
rcrb
or
icebp
lds
cmp
and
mov
sarb
test
and
addr16
inc
in
mov
je
mov
outsb
inc
mov
inc
enter
fcmovbe
and
and
or
mov
into
shll
xor
add
xchg
pop
and
xchg
sub
lock
or
inc
mov
inc
dec
clc
push
cmpsl
ja
filds
inc
js
je
push
or
lahf
mov
mov
cltd
inc
adc
and
dec
xchg
lahf
or
push
loop
mull
push
mov
pop
dec
push
jo
das
mov
add
push
xor
enter
xorl
xor
orb
xor
sbbb
inc
cmp
or
mov
add
int3
mov
movb
xor
mov
push
hlt
or
jbe
shlb
pop
nop
jnp
jp
jmp
popf
and
push
cs
push
add
add
add
int3
mov
add
pop
ja
add
icebp
inc
ljmp
cmpsl
dec
rol
mov
mov
sbb
or
add
mov
or
cli
sub
push
lret
mov
cwtl
subb
aas
mov
lea
mov
adc
push
xchg
mov
test
xorb
or
cs
or
add
sub
xlat
insb
jl
mov
sub
popa
xchg
sub
xor
adc
or
inc
jmp
nop
sbb
mov
add
in
jge
sbb
fadds
mov
sub
fdivl
mov
cmpsb
test
lods
or
clc
ja
es
in
jmp
inc
mov
cmpl
sbb
adc
clc
hlt
lret
insl
or
cld
pop
mov
cld
dec
mov
pop
pop
test
je
shl
inc
sub
push
clc
cmpb
jne
vmread
inc
mov
pop
inc
push
jne
or
inc
inc
add
sub
sbbl
mov
je
arpl
in
pop
popf
test
mov
arpl
jne
lock
xchg
sbbb
test
xchg
jbe
xchg
dec
lahf
jge
or
jl
xchg
lret
and
lock
fcomps
jge
movsl
add
mov
pop
sub
aam
inc
call
and
hlt
cmpsl
ret
or
xchg
int3
xchg
hlt
movsl
lods
insl
cltd
ret
push
dec
in
sub
js
and
xchg
pop
or
mov
dec
mov
loopne
pop
cmpb
cs
or
inc
or
rclb
push
dec
lret
pop
xchg
push
dec
or
xchg
mov
insl
add
add
sub
push
hlt
adc
gs
push
cwtl
cmpsl
cmp
cmp
inc
mov
or
movsb
adc
jle
stos
push
pusha
mov
dec
lock
std
pusha
pop
inc
clc
add
pminub
cltd
adc
ret
push
xchg
sbb
sub
adc
mov
stos
add
xlat
xchg
add
add
add
loope
movsb
add
push
cmp
pop
in
icebp
cltd
cmp
cltd
cs
fcomp
inc
popa
jb
sbb
lret
mov
jno
or
fbld
push
lret
push
and
pop
or
or
ret
unpckhps
sub
fstpt
jmp
and
xlat
cmpsl
call
mov
aam
fs
add
mov
push
dec
add
icebp
shll
xchg
js
shlb
and
or
push
jle
fisttpl
sub
mov
or
rclb
bound
aas
imul
adc
lret
mov
out
push
cmp
inc
inc
andb
inc
and
xlat
fldt
or
fildl
fldl
je
lret
push
nop
aad
nop
lret
or
inc
add
inc
sti
add
inc
dec
sub
sbb
mov
jmp
sub
clc
push
shlb
in
rolb
cmp
inc
ret
fimull
xchg
ljmp
add
pop
dec
movb
imul
cltd
movsb
push
xor
jbe
outsl
int3
push
push
insb
pushf
in
cld
inc
into
mov
sbb
clc
push
mov
inc
jns
cmp
or
dec
jae
and
inc
lea
out
pop
add
fs
inc
ds
rorb
and
mov
xchg
inc
out
add
pop
push
clc
jbe
and
inc
popf
add
shrl
adc
loop
insl
scas
je
mov
hlt
repnz
pcmpeqd
pop
dec
push
cmp
daa
je
mov
movb
stc
mov
mov
mov
sbb
fwait
push
movsl
in
arpl
mov
sub
int
push
lret
push
and
cmp
movsb
mov
sbb
push
inc
adc
mov
and
sahf
fstpt
or
xchg
lahf
inc
sbb
insb
adcl
add
rorb
lahf
add
cmp
and
xor
popa
test
cmp
das
jo
popl
pop
and
imul
mov
jmp
mov
icebp
inc
xor
inc
rclb
inc
mov
mov
cmp
fwait
insb
stc
mov
adc
loope
es
rolb
lods
sbb
ret
add
mov
ljmp
outsb
ret
pop
sbb
add
and
mov
outsb
sahf
add
cmp
lods
dec
les
cmp
iret
pop
rcrb
jecxz
js
inc
sbb
enter
add
int3
rcr
sbb
push
cli
fdivl
arpl
mov
arpl
sub
cmp
xchg
mov
or
xor
mov
shrl
xor
adc
push
fcompl
and
shlb
inc
dec
push
pop
sub
mull
or
inc
jmp
xorl
mov
adc
loop
xor
pop
jo
or
iret
and
add
pusha
jge
and
das
jne
xor
cltd
loope
sub
outsl
aaa
xor
mov
sarb
pop
out
or
cmpb
inc
or
movsl
sub
sbb
test
add
mov
loopne
add
push
pop
xlat
popf
rol
push
iret
imul
jecxz
or
inc
xchg
outsb
mov
add
inc
negl
jno
and
mov
cmovle
fcmovb
and
add
dec
repnz
inc
dec
sbb
push
pop
adc
and
pop
dec
cmp
or
loope
fistpl
aas
bnd
cmpsl
cmpsl
aas
fcmovb
cmp
fisubs
mov
sbb
ljmp
les
insl
dec
scas
mov
cmp
jbe
push
push
scas
cmp
mov
mov
test
nop
push
push
mov
mov
ljmp
add
ret
sbb
andl
inc
add
cmp
das
inc
push
push
push
dec
dec
out
sbb
push
out
inc
mov
adc
icebp
cmpw
cmpsb
jmp
push
outsl
mov
jne
pop
inc
dec
xchg
mov
aas
pushf
pop
ss
cmp
push
push
out
add
sbb
shlb
insl
adc
lods
je
shrb
dec
mov
jns
xchg
mov
xchg
rorl
nop
ret
addb
cmp
out
jle
push
xor
sbb
xor
fnstsw
gs
scas
or
xchg
or
mov
int3
imul
adcl
nop
mov
stos
mov
push
repnz
jne
mov
fs
inc
push
jle
xor
shlb
jmp
xor
mov
and
sbb
data16
ljmp
out
daa
cmpsl
fidivl
mov
ret
aas
data16
push
bound
ret
xor
daa
adc
push
adc
popa
or
ret
jo
nop
adc
mov
ds
insb
fdivs
or
jbe
cmp
arpl
lahf
dec
jbe
sbb
daa
or
or
enter
inc
cld
or
pop
gs
adc
je
jno
and
sbb
xchg
faddl
pop
push
pop
in
call
cmova
jae
dec
push
mov
mov
or
das
push
mov
test
adc
and
jno
mov
push
popa
jo
jns
enter
fcmovnb
addr16
popa
push
stc
iret
or
xchg
les
rolb
adc
popl
jb
loop
mov
mov
out
jp
pusha
bound
push
dec
pop
jno
xchg
mov
mov
pop
push
mov
je
ja
or
outsb
iret
dec
and
data16
pop
or
insb
adc
fs
testl
imul
pop
push
adc
push
cmp
dec
imul
mov
fcoms
bound
incl
imul
jg
jecxz
inc
add
mov
cs
das
sbb
pusha
lock
pop
push
push
popa
mov
sahf
rol
inc
inc
or
inc
arpl
iret
push
push
and
movsb
je
daa
loopne
mov
mov
adc
loop
in
mov
test
adc
or
popa
jmp
lock
pushl
jno
mov
push
daa
xor
imul
das
inc
imul
mov
in
ret
andb
lods
and
outsb
popa
pop
or
scas
add
mov
xlat
out
xor
push
xchg
in
lahf
adc
out
andb
xlat
sbb
jge
cmp
insl
xor
ret
cmp
lahf
or
mov
sbbb
je
cmp
mov
sbb
jno
mov
insl
shrb
pop
fists
push
fisttps
imul
add
scas
mov
push
insl
or
mov
mov
add
dec
roll
ret
push
out
das
adc
bound
mov
nop
nop
fnstcw
adc
mov
lds
xchg
test
push
aaa
iret
adc
subb
addr16
push
pusha
lods
sub
das
or
mov
jo
cmp
push
loop
push
xchg
and
inc
call
mov
stos
mov
fdiv
push
cmpsl
push
jne
xchg
jae
rclb
jns
das
xchg
fcoms
and
mov
inc
fs
inc
repnz
pop
imul
xorl
aas
adc
outsl
unpcklps
lods
sub
pusha
xor
pusha
lea
adc
lods
mov
test
mov
insb
loope
adcb
adc
loope
pcmpgtb
decl
mov
out
inc
popa
sub
adc
xchg
mov
arpl
pusha
rorl
out
lea
out
js
pop
in
and
or
adc
dec
arpl
gs
or
or
imul
cld
mov
pop
adc
pusha
sub
seto
adc
inc
sbbb
aaa
sub
call
dec
or
xchg
add
adc
xchg
mov
dec
in
loop
shll
push
dec
jae
mov
lahf
shr
or
lds
adc
je
adc
push
ljmp
cmp
daa
push
mov
popa
sub
push
sbb
sub
pop
sbb
es
pop
xchg
lock
repnz
rcpps
imul
les
mov
inc
sub
imul
stos
inc
jns
gs
pop
es
push
aaa
addr16
shrl
shlb
pop
push
test
outsl
pop
mov
scas
into
lahf
inc
dec
das
xor
cmp
sahf
xor
rolb
cld
jecxz
xchg
push
mov
and
mov
nop
pop
pop
icebp
mov
idivl
stos
sarl
and
cs
mov
outsb
inc
sub
in
out
incl
inc
mov
push
out
in
inc
inc
inc
test
cmpsb
jno
inc
aas
adc
addr16
jg
xlat
inc
lcall
adc
jmp
lods
roll
pop
iret
pop
sbb
pop
cli
das
add
sub
test
fbld
and
push
inc
xchg
push
dec
dec
xchg
xor
sqrtps
inc
gs
inc
test
ret
adc
lret
arpl
or
in
adc
mov
sbbb
stos
sahf
test
cmp
fists
dec
outsb
inc
lea
xchg
add
inc
outsl
ja
or
icebp
inc
push
pop
pusha
sbb
push
pop
xorb
inc
and
aaa
mov
sbb
sub
push
sbb
cmp
add
dec
sbb
xchg
insb
sbb
xor
sbb
mov
sbb
and
enter
xchg
or
mov
cmpsb
xchg
test
inc
xchg
and
push
sub
dec
push
inc
push
sub
pusha
cmp
jl
inc
pop
push
test
sub
add
fiaddl
out
pop
inc
adc
mov
pop
cmp
test
das
adc
pop
xorb
jb
xor
mov
das
sbb
or
daa
mov
pop
add
cmp
add
loopne
mov
test
add
mov
dec
dec
sahf
inc
lock
add
shlb
mov
sbb
inc
call
mov
dec
test
mov
test
inc
adc
leave
xor
imul
ret
pop
into
int3
push
sbb
inc
pop
mov
pop
xchg
push
repnz
insl
jge
outsb
sbb
pop
adc
mov
xor
sbb
call
in
sahf
lahf
add
mov
loopne
clc
inc
rcll
adc
test
or
cltd
cmp
jg
cmp
test
sub
mov
mov
je
idivb
xchg
jb
test
or
xchg
xor
dec
push
pop
gs
fwait
cmp
jle
lcall
cld
and
std
out
into
in
lea
mov
push
add
dec
xor
jmp
mov
mov
sub
jle
xchg
pop
and
ja
mov
add
lret
cs
jge
xor
sub
mov
dec
pusha
sub
sbb
push
pop
xchg
sbb
push
clc
adc
lahf
fdivrs
push
enter
fmull
ljmp
mov
sbb
dec
nop
pop
xchg
or
adc
loope
adc
adc
jge
dec
xchg
cwtl
inc
pusha
push
rcr
pop
movsl
adc
sub
or
adcb
nop
or
sti
pop
outsb
push
es
jns
jmp
or
adc
fscale
and
inc
faddl
and
icebp
xchg
jp
les
push
xor
fs
mov
jne
and
adc
ret
sysexit
jmp
jnp
add
rcl
scas
sarl
jo
push
mov
std
dec
push
jnp
inc
sbb
jne
pusha
jno
jle
push
imul
or
nop
and
pop
mov
mov
add
mov
lock
stos
add
fisubs
adc
jl
or
add
xor
mov
or
adc
mov
sbb
cmp
test
push
xlat
xor
push
mov
fstpt
add
mov
out
push
andl
sbb
xchg
push
xor
scas
sbb
loop
popa
sub
adc
in
stos
and
test
scas
dec
mov
iret
xchg
xchg
lret
inc
jge
test
xchg
ss
test
stos
stos
sbb
cmp
ret
or
lock
sbb
sbb
negl
cmp
push
dec
rorw
inc
mov
sub
dec
pop
or
popf
add
add
adc
pop
sbbb
rcrl
cmp
cmp
add
mov
inc
or
xchg
jg
add
jg
cmpb
lock
testl
dec
jl
mov
lds
jmp
movsl
inc
mov
cmp
sbb
add
jne
xor
shll
adc
inc
jmp
daa
testb
popa
and
es
xor
mov
aad
pop
imul
push
push
dec
lret
pop
xor
test
mov
in
push
movsl
cwtl
xlat
xor
test
mov
shrb
lods
or
sub
rolb
sub
jle
cmp
jl
fistps
jns
addr16
imul
inc
jecxz
cmp
push
and
mov
out
mov
pop
dec
xlat
push
test
call
out
test
les
icebp
push
cmp
sub
xchg
aas
fmul
ret
xchg
cli
pop
es
mov
push
dec
xor
jnp
cmp
xor
push
pop
cmp
fdivr
mov
push
jo
lret
cmp
push
inc
or
or
imul
cmp
push
mov
pop
adc
mov
and
faddp
shrb
loopne
pop
pop
push
jg
inc
lock
scas
cltd
cmp
les
adc
adcb
sbb
pusha
pop
pop
and
jns
repnz
cmp
hlt
jge
or
insb
repz
repnz
popf
sub
out
pushl
inc
lahf
out
push
movsb
je
mov
add
jno
or
sub
mov
xor
jae
push
pushf
jo
inc
pop
mov
xchg
inc
lock
sub
aas
sbb
in
mov
or
rorb
lea
xor
jmp
mov
mov
adc
mov
and
add
fadd
lods
test
xchg
pop
push
cmp
repz
je
adc
adc
push
pop
out
push
inc
mov
nop
mov
inc
jne
rcrl
adc
jo
dec
inc
cmpb
jp
xchg
xor
lock
loope,pn
jmp
or
popa
inc
cs
jmp
into
adc
adc
cmp
addl
cmp
shl
test
add
or
aad
adc
arpl
test
and
xor
scas
movsb
add
add
mov
and
fs
pop
popa
in
das
orl
and
or
fistpll
sub
out
rorb
movsl
and
cmp
or
mov
inc
lret
repz
add
adc
test
sbb
or
xchg
popa
orl
fisttpll
mov
aad
test
pop
hlt
ret
das
inc
jnp
push
xchg
pop
push
bound
test
or
sub
pop
sbb
push
cmpsb
fisttpll
push
daa
pop
les
inc
dec
aas
int3
push
incl
mov
lea
mov
inc
inc
cmp
jne
jl
jmp
lcall
mov
pusha
orb
mov
iret
cmpsl
insb
add
xchg
xor
pop
fcomps
cmp
outsb
add
pop
shlb
add
or
cmp
xor
inc
inc
sub
cwtl
fcmove
pop
shlb
pop
fs
inc
nop
cmp
add
push
xor
inc
pop
or
pop
or
aaa
inc
pop
cmp
inc
scas
cmp
inc
dec
inc
movsb
xchg
inc
sbb
jp
dec
inc
add
pop
dec
adc
add
scas
pop
push
ss
and
sbb
inc
pop
in
pushw
xor
push
mov
insb
inc
push
mov
push
in
inc
pop
in
inc
pop
sbb
inc
pushf
xchg
mov
mov
push
jo
push
and
lock
fstpt
push
adcb
shll
or
dec
test
addr16
mov
pop
xorb
or
fadds
ret
test
pop
test
sbb
fildll
pusha
movl
pop
pushf
mov
pop
lock
xlat
push
ret
enter
inc
dec
adcb
xor
stos
test
and
inc
addr16
xor
negl
pop
push
insb
loopne
cmp
pop
inc
ds
pop
enter
mov
mov
sub
imul
push
imul
test
jae
clc
shll
xchg
ret
pusha
test
loop
clc
pop
loopne
ret
lret
inc
push
push
xchg
addr16
in
mov
sarl
and
inc
popa
int
push
loope
inc
ljmp
xor
add
or
out
sub
inc
jp
pop
mov
jnp
fldl
aas
dec
mov
loopne
jp
jle
clc
cltd
mov
add
xchg
push
mov
sbbl
ja
roll
fisttps
add
sbb
faddl
hlt
out
jae
lcall
sub
orb
mov
mov
adc
outsl
push
inc
dec
icebp
mov
jne
inc
inc
imul
das
xchg
es
mov
and
test
and
shrb
xor
or
movsb
sti
pushf
nop
fdivrl
mov
cli
cmpsl
fcmovu
movsb
mov
sbb
adc
loopne
test
inc
cwtl
or
es
pushf
stc
ss
mov
movsb
test
push
lods
imul
andl
mov
mov
xchg
cmpsb
cmp
aam
js
xchg
fcomp
loopne
push
mov
mov
mov
mov
inc
sub
xchg
add
mov
iret
mov
and
outsl
add
sub
mov
xchg
and
pop
push
negl
dec
outsl
cmpsl
xchg
inc
and
mov
cmp
divl
pop
push
cltd
test
pop
dec
outsb
test
das
xchg
cmpsl
movl
pop
push
pop
enter
and
pop
inc
outsb
mov
pop
xchg
nop
mov
add
cwtl
pushf
inc
sbb
push
cmp
andb
or
xchg
fnsave
hlt
out
sub
and
jnp
jnp
inc
je
add
test
unpckhps
push
push
bnd
push
cmpl
out
cmpsl
xchg
sub
orb
or
dec
clc
push
xchg
add
cwtl
or
sbbb
scas
push
jne
push
pop
pushf
xor
in
cmp
loopne
sbb
movsb
cmp
xor
hlt
fstpt
sub
movl
emms
pop
pop
ret
inc
bt
jae
add
cli
mov
and
or
scas
jge
push
fs
mov
pushf
add
sub
popf
sbb
test
bound
push
inc
inc
adc
sarl
inc
xorl
sub
sbb
cwtl
orl
dec
mov
dec
aam
push
arpl
lahf
pop
inc
addr16
add
xchg
xchg
lods
jbe
adcb
push
and
rolb
popf
add
or
dec
call
mov
test
or
test
lods
rcrb
mov
adc
inc
mov
jge
or
or
cmpsl
mov
aaa
dec
xchg
jne
push
add
cwtl
jne
rol
mov
xor
pop
inc
dec
cld
outsl
dec
fmuls
insl
rolb
fdivrs
fidivrs
movsl
and
ret
loope
add
int3
add
add
sbb
pusha
and
shrb
roll
rcl
cli
rolb
dec
icebp
or
mov
mov
dec
lea
add
rcrb
xor
enter
test
test
jmp
and
adc
mov
xchg
hlt
adc
loopne
ja
clc
add
jle
mov
in
xchg
rclb
sti
jnp
cmp
and
mov
and
sub
movsl
xor
cmp
xchg
fildl
cmp
mov
and
pop
sbbl
rcl
push
shlb
adc
mov
cmp
push
xchg
out
rcll
xor
push
je
mov
jne
or
push
in
fcoml
adc
pop
and
inc
dec
push
push
aam
push
inc
fists
inc
testb
mov
outsb
push
int3
adc
add
ret
add
jb
mov
sbb
fmul
mov
fsub
mov
jae
mov
cltd
add
sbb
mov
insb
push
out
mov
ljmp
sbb
aam
mov
mov
jg
cmp
jne
pushf
cmp
mov
sbbb
mov
ret
and
xorb
test
fmul
aam
rcrb
fmul
enter
dec
outsl
cmp
repnz
cmp
add
push
dec
mov
nop
mov
xchg
pop
pop
lahf
cltd
pop
adc
loopne
mov
adc
test
or
and
push
sub
mov
stos
add
add
or
add
sub
mov
imul
sub
out
push
and
incb
xchg
fsts
in
mov
sub
call
inc
ret
inc
daa
mov
lret
push
mov
or
or
or
test
sbb
in
cmp
jge,pt
mov
xor
mov
cld
xor
outsl
adc
ret
dec
sub
xchg
push
dec
lcall
rorb
adc
xor
cmp
mov
xor
int
jns
or
add
dec
stc
dec
jmp
add
sbb
sub
or
icebp
aas
xlat
adc
adc
pusha
add
into
add
aam
jo
or
leave
adc
in
nop
dec
jb
adcl
xchg
mov
add
ret
popa
mov
ds
add
je
sub
sub
sub
rolb
mov
adc
and
jbe
dec
loop
cmp
add
push
addl
add
jae
les
imul
cs
pusha
adc
or
out
sbb
add
adc
cmp
movsl
jmp
das
push
lds
mov
int3
add
call
add
test
add
inc
push
xor
fdivrs
xchg
movsb
aaa
adc
or
addl
adc
sarb
or
push
add
call
and
sub
and
nop
push
hlt
cmc
stos
outsb
sti
sbb
jp
sarb
xor
pop
jbe
lea
push
ds
mov
ret
mov
and
sub
and
movsb
sub
mov
push
pusha
inc
leave
push
jae
mov
clc
int3
int3
loope
insb
aad
sub
lcall
ror
hlt
in
insl
les
add
imul
add
test
pop
aam
xchg
pop
adc
and
setle
jnp
in
cld
fisttpl
add
scas
jl
lret
cld
or
or
cld
mov
pusha
and
fisttps
xor
mov
sub
sbb
or
pusha
fs
dec
dec
pusha
adc
push
cld
cmp
or
jnp
insl
data16
mov
inc
mov
sbb
mov
lods
push
pop
cmc
jmp
mov
daa
cmp
push
jne
and
stos
into
push
or
in
inc
push
fisttps
mov
sbb
sahf
mov
or
je
sbb
bound
adcl
cmpsb
lock
xchg
faddl
push
pop
movsb
or
sbb
push
inc
mov
add
inc
gs
lods
mov
sub
xchg
sbb
pop
inc
xor
movsb
popa
inc
lret
mov
lcall
pop
test
mov
jne
test
sbb
loop
ret
test
sub
fistl
mov
je
mov
inc
imul
outsb
mov
cmp
outsb
cmp
fisubl
cmovne
adc
insb
dec
push
xchg
dec
inc
scas
or
gs
roll
popl
adc
test
lcall
lock
push
pop
mov
cli
mov
add
adc
ror
enter
lock
xchg
popa
jge
adc
inc
shl
xchg
outsb
loope
test
popf
mov
xchg
enter
fimull
dec
lea
adc
push
scas
push
enter
fucomip
imul
xchg
loope
inc
dec
push
inc
mov
add
cmp
sub
popa
not
popf
pop
xchg
adc
mov
subl
shlb
push
je
add
dec
cs
test
adc
loope
xorl
lock
mov
ja
adc
add
in
mov
or
addr16
lods
stos
sbb
jl
add
sahf
mov
movl
pop
js
sub
movsl
sti
fistl
and
and
or
sub
test
jbe
mov
dec
pop
or
fs
addr16
push
adc
inc
imul
or
push
adc
arpl
jb
cmp
lock
roll
ffreep
xchg
outsl
sub
test
jns
pushf
and
and
xchg
movsb
sbb
adc
inc
jl
xchg
addr16
adc
mov
cmp
out
mov
or
cmpsl
rolb
push
mov
clc
mov
test
pop
rclb
js
adc
es
cs
daa
ss
adc
adc
cli
cmp
mov
add
dec
mov
mov
orb
lds
xchg
cmp
pop
aam
add
or
sub
nop
into
sahf
pop
push
adc
cmpsl
pop
push
enter
lods
push
cmpsl
inc
xor
pusha
in
es
jl
adc
mov
fwait
dec
stos
mov
testl
push
loopne
sbb
push
push
sbb
aaa
pop
and
xor
outsb
jae
mov
adc
xor
push
xchg
pop
jae
in
push
inc
add
icebp
cmp
fcompl
and
loope
xor
jle
and
neg
sbb
add
fldenv
dec
sbb
jg
mov
push
push
and
adc
imul
gs
lret
adc
test
or
xor
test
lods
push
mov
movsb
inc
clc
lock
sbb
inc
push
adc
hlt
add
inc
push
movsb
repnz
sub
in
sub
hlt
jne
inc
cld
or
push
sbb
cld
push
mov
jo,pn
pop
sbb
movsl
xor
addl
dec
orb
daa
movsl
or
sbb
push
cmpsb
inc
xor
insl
xor
push
inc
daa
push
sub
rcl
insb
maxps
ret
in
push
das
scas
mov
insb
dec
test
push
mov
mov
sub
add
pop
outsl
jae
fcmovb
push
dec
daa
jg
filds
mov
or
jg
unpcklps
dec
xchg
outsb
lds
ds
or
jecxz
or
xchg
movsb
jnp
outsl
and
cmpsb
or
adc
sbb
cmp
bound
pop
or
or
mov
add
adc
pop
xchg
mov
mov
push
or
popa
add
and
jne
insb
fs
movsl
sbb
adc
adc
dec
adc
popa
mov
mov
add
inc
je
adc
stos
adc
or
xor
jae
push
sarb
adc
sbb
jbe
movsl
push
andb
test
imul
icebp
pusha
outsb
mov
or
movl
sbb
je
fs
add
lea
mov
popf
pop
pop
adc
mov
add
cmp
idivl
mov
or
or
das
or
sbb
or
push
outsb
mov
jecxz
fucomi
pop
mov
rcll
dec
and
enterw
sbb
and
in
inc
cmp
inc
ja
das
sub
sub
mov
sbb
idivl
in
and
push
pushf
iret
jnp
repz
push
lock
out
jns
jnp
sbb
pop
sahf
add
aad
mov
outsb
xchg
cmp
pop
add
jnp
cs
lods
daa
inc
fisttpl
mov
sub
push
test
inc
xchg
lock
dec
mov
mov
icebp
loopne
push
test
xor
push
outsb
insb
pop
mov
jo
pop
push
pusha
pop
inc
mull
mov
pop
aas
push
pop
roll
aaa
repnz
pusha
rcrb
jo
stos
int3
neg
push
adc
add
clc
pop
cmp
and
in
loopne
addr16
sbb
jmp
nop
mov
pop
or
add
or
or
cmc
xor
arpl
ds
imul
xchg
dec
mull
outsb
imul
dec
cmp
insb
xchg
and
or
fbstp
push
test
pop
sub
daa
adc
inc
push
pop
popa
in
imul
inc
jecxz
push
lock
add
pop
nop
popa
push
lock
or
cmp
add
orb
and
inc
rolb
fcoms
xor
add
sub
bound
inc
add
enter
sbb
mov
xlat
enter
cmp
sub
mov
push
aas
mov
dec
pop
or
inc
dec
lock
push
fs
pop
insb
gs
les
lret
and
dec
mov
les
pop
pop
add
dec
or
imul
rolb
outsl
js
fcomps
fsubrl
adc
cmp
fcmovnb
lea
inc
lock
out
fisttpll
mov
in
or
jno
pop
adc
mov
rclb
in
cvttps2pi
cwtl
orb
test
dec
in
xchg
and
mov
cs
ficompl
push
andb
pop
negl
jecxz
cmpsb
insl
push
cmp
pop
adc
push
in
inc
outsl
loopne
inc
js
dec
and
pop
ds
xchg
movsl
mov
cmp
pop
pop
dec
mov
daa
sbb
clc
dec
sub
je
fisttpll
xor
out
add
lods
jo
inc
xor
pop
or
stos
out
add
pop
rol
mov
pop
or
pop
aaa
cld
ds
mov
add
jle
adc
mov
cmpsl
mov
pop
and
push
or
imul
push
add
adc
pop
adc
dec
pop
insb
add
mov
mov
lock
mov
cld
mov
pop
fcmovnb
jl
add
add
mov
shll
dec
lea
add
adc
dec
enter
add
inc
into
aam
mov
test
push
insl
or
ret
nop
pop
sbb
andps
push
inc
or
push
cmp
jo
imul
pop
or
and
and
mov
or
lret
adc
out
aaa
xchg
xor
je
imul
aaa
fistpl
jg
ljmp
outsb
imul
fsubrs
or
sub
and
adc
out
fwait
addb
adc
jnp
xchg
int
inc
sbb
ja
es
push
add
pop
insb
pusha
add
pop
call
push
mov
adc
aaa
and
push
test
or
push
nop
pop
pop
and
daa
popl
push
fsts
or
test
pusha
mov
and
xchg
enter
pop
cltd
push
and
push
and
and
dec
and
inc
sub
cwtl
add
or
sub
cmpsl
loope
sbb
imul
jecxz
adc
stos
or
mov
pop
pop
adc
lcall
and
push
cld
jo
jo
xchg
paddb
out
push
lcall
inc
dec
push
sarl
sbb
dec
aaa
mov
jnp
dec
nop
mov
rolb
jmp
push
add
push
xor
xor
xor
les
movsb
inc
mov
dec
dec
dec
dec
dec
dec
dec
inc
clc
pop
rorl
push
push
push
push
pop
pop
pop
adc
jb
repnz
lock
mov
mov
dec
add
lret
add
addb
dec
add
and
sbb
ret
dec
xchg
inc
hlt
and
push
jnp
fs
test
mov
in
add
mov
or
sarb
and
testb
data16
adc
call
andb
addr16
jns
lock
mov
add
cmpb
fistpl
mov
push
xor
push
push
lcall
mov
das
xlat
insl
repnz
cs
pop
add
adc
es
sub
push
jo
push
push
fwait
mulb
push
jnp
sti
or
outsb
aas
movsb
mov
push
inc
jge
jbe
fsubrs
sub
dec
ds
lcall
fwait
jns
sarl
cli
push
sbb
test
xchg
scas
cmp
nop
jbe
dec
shll
add
jg
in
nop
xchg
out
jmp
sub
nop
mov
fidivl
and
pop
jmp
enter
inc
inc
aas
dec
pusha
aas
popa
in
jo
aaa
call
inc
sbb
push
insl
das
loop
outsl
jmp
xor
mov
xor
mov
and
sub
mov
or
lock
sbb
inc
hlt
cmp
jle
inc
sbb
add
inc
adc
xor
and
mov
add
lret
or
push
ret
push
add
cmpsl
mov
jns
and
aad
xor
sub
into
pop
push
jg
pop
adc
cmpsl
jne
les
mov
repz
push
test
sbb
mov
pop
xchg
and
inc
jg
rorl
mov
and
dec
xor
test
loopne
ret
test
faddl
mov
dec
cs
out
sbb
xor
int
stos
jl
xchg
mov
jmp
and
out
and
or
imul
pmulhuw
mov
and
and
mov
out
or
jecxz
aaa
cmp
sarb
jmp
inc
call
jne
add
js
popl
or
xchg
pop
push
mov
sub
cmpb
mov
and
push
pushf
test
adc
pop
add
add
dec
ret
xchg
notl
cmp
ja
sbb
pushl
fdiv
pop
les
incl
adc
arpl
dec
jle,pn
cmp
jg
mov
xchg
inc
ret
and
ds
lods
popl
popa
xor
xor
and
scas
xor
mov
pop
pop
xorb
adc
shlb
jmp
cmp
or
cmp
fiadds
das
add
jne
jle
xchg
enter
mov
jne
cmp
adc
sub
fsubrp
ja
xlat
cmp
enter
jmp
cmp
je
in
into
push
pop
sub
add
pop
sarl
xchg
pushl
cmp
fists
mov
inc
cmp
adc
icebp
jae
jbe
adc
mov
mov
inc
or
or
push
cld
std
add
lods
sbb
cwtl
mov
inc
mov
cmp
fmuls
pop
lea
jbe
mov
sbb
es
inc
xor
xchg
mov
mov
sbb
inc
imul
pop
in
sbbb
cmp
inc
push
scas
pop
sbb
cwtl
in
jl
cmp
nop
popl
push
jl
adc
cmpb
repz
sbb
mov
push
aas
cmp
filds
inc
pop
insl
cwtl
gs
or
sbb
lods
inc
xchg
fistl
push
pmulhuw
movsl
xchg
ds
add
addr16
movl
jle
mov
and
jecxz
or
mov
xlat
lds
sbb
pusha
pusha
pop
pop
jg
enter
dec
aas
jl
inc
dec
fwait
sbb
mov
out
je
mov
aaa
cmp
add
fstpt
in
push
cld
xchg
add
sbb
aas
inc
dec
sub
in
dec
jg
sbb
mov
nop
fwait
popa
call
in
push
mov
out
jl
inc
mov
add
cmp
add
push
scas
xchg
idivb
test
add
inc
inc
xor
lcall
cmp
pop
push
sbb
xchg
push
mov
push
js
cmpsb
daa
mov
add
cmpsl
sbb
sbb
mov
inc
lock
jmp
and
lock
test
dec
jg
cmpl
cmp
push
and
dec
adc
inc
xor
mov
out
mov
mov
cmp
mov
adc
je
mov
test
mov
mov
sub
xor
sub
cmpb
clc
sub
sbb
jns
lods
push
jle
imul
pop
pop
adc
dec
add
pusha
and
pop
fs
jnp
js
movsb
lcallw
insl
jecxz
fs
and
mov
loopne
pusha
sub
aad
frstor
mov
sbb
sbb
dec
cmp
test
sbbb
mov
add
test
inc
sub
sub
icebp
or
fs
add
sub
push
push
dec
or
add
or
daa
addb
aas
repnz
loopne
mov
cmpsb
xor
push
fidivl
cmpsb
inc
dec
push
jne
or
xlat
sahf
test
cmpsl
xor
in
mov
mov
or
test
mov
dec
dec
or
push
sub
ja
testl
adc
mov
cmp
xor
cmp
int3
jb
jb
mov
fsubrl
sbb
inc
sbb
adc
dec
insl
mov
xchg
sbb
jns
pusha
sbb
jae
test
adc
jl
iret
dec
or
cmp
subl
xchg
or
fistps
jno
and
push
or
push
in
and
mov
sbb
imul
das
add
pop
fildll
mov
sti
jne
push
or
pop
rcrb
fs
cld
and
cmp
loopne
fldenv
adc
popa
dec
flds
push
nop
adc
pop
or
jge
fwait
and
dec
push
cld
dec
loopne
inc
mov
add
in
popa
adc
inc
andb
inc
scas
call
adc
shlb
dec
stc
lods
pop
or
ret
roll
add
mov
inc
xchg
ret
pop
jge
cmp
je
out
aas
jae
insb
mov
sbb
mov
das
subl
fsubrp
and
mov
xchg
sub
adc
imul
je
jp
je
mov
mov
or
push
adc
inc
je
jmp
out
and
cwtl
cmp
xor
loop
test
lret
or
dec
push
inc
shrb
jne
xor
out
xchg
and
int3
push
dec
movsb
xor
insb
mov
and
sbb
lret
cmpsb
inc
jns
into
mov
inc
sbb
xchg
rolb
pop
dec
push
cmpsb
push
fstps
adc
push
hlt
out
inc
cmp
jge
aad
sbb
cmp
jae
mov
cmp
xor
out
jbe
sbb
lods
mov
cmpsl
xor
cmp
pop
sbb
pusha
or
cmp
push
and
popf
scas
or
or
loopne
int3
vpcmpgtd
fnsave
cmp
pop
pop
ds
mov
mov
add
dec
sbb
inc
sub
and
mov
pusha
xchg
inc
inc
xor
sbb
stos
or
mov
mov
repz
xor
call
ljmp
add
sbb
adc
out
add
fdivr
cld
fdiv
fsubrp
pop
fists
pushl
outsb
lahf
outsl
add
mov
in
push
and
ds
inc
insl
mov
push
shlb
ret
inc
jmp
mov
adc
scas
xor
les
rclb
push
es
cltd
xlat
adc
and
pop
lret
fldl
cmpsb
mov
pop
insl
addps
mov
mov
ds
fidivs
and
mov
ret
adc
push
and
adcb
imul
in
and
sbb
cmpsb
add
rcrb
xor
push
cmpw
sbb
push
cmp
push
pop
adcl
pop
mov
inc
xchg
cmpl
std
cs
xor
xor
mov
cmpsb
int3
adcl
jecxz
fisttpl
add
fs
add
nop
xchg
jae
ja
pop
mov
pop
cwtl
inc
add
mov
movsl
pushf
mov
jb
push
mov
jns
xor
mov
sbb
jg
and
in
dec
pop
js
lea
mov
jl,pn
movsb
rol
sbb
xor
cmp
icebp
adcb
inc
pop
and
shlb
dec
add
cs
push
jb
inc
das
and
outsl
adc
pop
mov
fsubs
xorl
adc
movsb
xorb
sahf
mov
pop
mov
in
add
jbe
mov
adc
xlat
sub
rolb
imulb
xor
or
or
or
push
sub
mov
inc
jl
inc
xor
jmp
sbb
cmp
push
cmp
xorb
inc
cmpsb
or
cmp
or
or
xorb
rolb
aam
cmp
adc
add
add
jmp
pop
or
sub
push
dec
or
or
loopne
movsb
add
push
jle
ss
lea
jge
pop
int
jle
js
jbe
aam
jno
in
cmp
add
int
in
xor
jle
mov
mov
call
or
xor
sbb
pop
xchg
out
and
mov
fs
out
pop
jo
mov
loop
xor
lock
add
adc
inc
pop
or
push
lock
or
idivb
and
sti
cmc
int3
sub
jne
test
mov
cmpxchg
fwait
movb
loopne
cmpsl
push
shlb
adc
loop
test
inc
iret
jecxz
adc
push
mov
stos
push
inc
test
pop
cmp
push
sbb
jle
aam
movl
cs
jg
xor
inc
push
pop
push
out
dec
mov
dec
imul
mov
push
push
inc
lods
sub
insl
das
mov
sbb
sbb
and
push
sbb
push
fmull
mov
adc
int
mov
popa
sub
push
push
inc
inc
cmp
outsb
cmpsb
push
stos
push
pop
dec
loopne
sub
jnp
sbb
xor
stc
sar
add
lock
add
lret
adcb
cmp
push
cmp
test
test
int
inc
mov
adc
cwtl
push
test
xor
inc
loopne
cmpl
jmp
bound
or
in
sub
jle
sub
and
mov
jb
add
aaa
bound
mov
dec
lcall
push
shll
jl
jl
or
sub
xlat
int
add
adc
push
xchg
dec
aad
sbb
pusha
sbb
jp
mov
and
and
out
add
sub
mov
xor
dec
jne
xlat
adc
mov
ds
push
lret
or
push
outsb
cmp
mov
int3
stos
loopne
inc
and
scas
or
push
inc
push
cmpsb
or
mov
iret
insb
pop
or
push
rolb
mov
or
aas
jp
orl
or
mov
lea
push
jg
sahf
sbb
cmpsl
enter
push
sub
dec
sub
fsubs
inc
clc
sbb
xadd
insb
les
adc
fldcw
jge
leave
mov
das
adc
jb
add
jae
stos
and
add
push
ficoml
xor
inc
fisttps
or
ds
and
sub
xchg
out
fsubs
xchg
and
xchg
stos
add
push
fcomps
andb
shlb
fucomi
add
inc
and
cmp
test
jmp
call
paddusb
fadd
inc
mov
mov
add
xor
mov
aam
jb
cmc
pop
cmp
sub
jge
inc
jle,pt
inc
mov
orl
and
daa
cmp
rorb
adc
jecxz
or
or
or
wbinvd
pop
and
pop
dec
mov
xchg
lock
pop
inc
mov
hlt
fsubr
add
inc
popa
das
ljmp
jne
sub
lahf
inc
daa
sbb
xchg
mov
xor
jle
stos
mov
cmp
dec
sbb
ret
call
aas
test
push
jo
or
push
and
add
enter
add
rcrb
mov
je
adc
sti
add
loope
sub
xor
push
or
sbb
dec
push
sub
mov
cltd
xchg
lods
mov
mov
adc
ret
mov
cmp
int3
dec
bound
dec
pop
xor
fcomps
in
je
imul
rol
lea
or
and
test
in
ds
and
sub
jge
pop
das
insb
ret
xor
inc
adc
push
pop
push
dec
std
fcoms
mov
sbb
xchg
mov
pop
cmp
pop
lods
dec
fisubrl
adc
jg
clc
jg
popa
ror
out
jb
stos
fwait
lock
lahf
rcll
push
or
ret
jno
sub
xor
gs
mov
push
sub
push
mov
repnz
fsubrs
rcl
inc
aad
cmpsl
and
fwait
nop
sbb
out
push
scas
dec
lret
inc
test
xor
jp
adc
fadds
push
and
insl
mov
pop
scas
sub
jge
and
iret
cmp
xchg
mov
pop
into
fmull
mov
xor
or
mov
inc
scas
xchg
cmc
imul
loopne
bound
xor
test
sbb
mov
aas
leave
fadds
dec
add
or
pop
sbb
pand
push
je
sub
lcall
dec
pop
or
dec
or
or
or
add
pop
push
mov
ja
pusha
fcoms
gs
push
bound
lock
outsl
and
pop
mov
jne
jbe
pop
dec
adc
popa
and
movnti
jne
xchg
clc
mov
lock
clc
pop
test
stos
sub
inc
xchg
dec
lock
test
or
adc
mov
loopne
jno
outsl
and
inc
ret
sbb
mov
pop
cld
xor
push
mov
arpl
xchg
stos
test
or
sbb
push
cmp
pop
adc
push
nop
or
daa
call
sti
je
loope
addr16
adc
jne
clc
push
ret
out
out
daa
sbb
jge
clc
jmp
push
sub
dec
mov
inc
push
sbb
sbb
test
out
data16
mov
daa
mov
jmp
pop
clc
dec
pushf
pushf
inc
sub
jl
xor
and
dec
mov
dec
mov
xchg
cmp
or
lods
loopne
dec
adc
nop
fmul
call
enter
fadds
add
dec
loopne
repnz
cmp
orb
xchg
push
xchg
dec
dec
shlb
inc
add
pop
loop
mov
shlb
push
movsl
sub
pop
dec
in
adc
loopne
jns
enter
dec
or
push
clc
ret
enter
incl
add
push
and
and
sbb
jns
pop
lds
add
roll
pop
in
lock
and
push
sub
and
push
push
loope
lods
jbe
xchg
sahf
add
iret
pop
ja
mov
xchg
loop
push
xor
or
fs
jg
adc
jo
adc
stos
and
jle
movsl
fcomps
stos
popa
mov
xor
mov
jge
es
jmp
push
and
add
cmpsb
push
mov
mov
jge
jae
xchg
mov
jle
je
dec
cmp
loopne
pop
sbb
lcall
cltd
inc
add
adc
push
int
les
sbb
fbstp
pusha
add
fdiv
test
pop
mov
or
pushf
out
rorl
pop
inc
and
test
lea
idiv
xchg
or
sbb
jmp
aas
pop
repz
xor
jo
adc
fdivs
shr
jg
out
pop
push
push
test
pop
incb
lds
rorb
jl
or
sbb
jnp
in
pop
dec
sbb
ljmp
inc
sbb
arpl
adc
or
and
push
adc
cmpb
dec
imul
sub
adc
sbb
and
jae
jne
rsm
xor
loopne
xor
scas
cmp
loopne
jle
sbb
imul
and
and
fistps
push
inc
mov
or
push
lock
insl
shll
or
int3
or
or
inc
fs
hlt
xchg
and
and
out
icebp
rcr
and
fucomp
jecxz
add
loopne
add
push
in
sbb
add
clc
mov
jecxz
xor
mov
add
imul
xor
push
inc
enter
mov
cltd
bound
cld
dec
pusha
or
popa
add
leave
leave
dec
cvtps2pi
xlat
fcomp
push
sbbl
pop
push
into
adc
test
jo
pop
push
hlt
or
push
adc
sbb
cmp
push
nop
divl
es
in
test
xlat
pushf
inc
push
and
mov
add
int3
add
dec
addr16
pop
int3
cs
loop
lds
lret
mov
mov
adc
mov
movsb
fwait
hlt
fdivl
movsl
pop
add
xchg
add
les
in
stc
lret
ret
fcompl
inc
mov
cld
rolb
movb
pop
inc
pop
pop
mov
out
das
adc
mov
call
rorl
imul
add
cltd
or
movsb
pop
push
ds
andb
push
lcall
cld
lret
push
jb
lea
jg
mov
scas
shll
flds
cvtps2pi
pop
sbbb
cmp
dec
ja
jo
cmpsl
sbb
push
mov
inc
sbb
jle
inc
pop
xor
push
sub
xor
pop
or
out
flds
xor
add
sub
mov
xlat
mov
sub
idivb
les
mov
sbb
mov
mov
test
lea
insb
or
int3
xor
sahf
mov
cmpsl
enter
subb
pop
nop
or
push
rorl
pop
xchg
out
add
fildl
lds
sbb
adc
rclb
js
mov
sahf
and
dec
and
dec
movsb
stos
mov
mov
cmp
inc
ret
sahf
mov
dec
jae
hlt
cmp
lock
clc
sub
fs
cmp
loope
movsb
mov
aas
pusha
imul
in
sbb
je
mov
mov
stos
pushl
add
add
call
push
out
pop
inc
push
jns
mov
stos
shlb
outsb
xchg
repnz
scas
or
cmp
xor
jmp
mov
cmpsl
inc
or
rcll
cmpl
mov
loopne
add
fisttpl
mov
xor
jge
je
adc
dec
fsubrs
add
clc
mov
je
or
push
add
inc
jmp
adc
push
int3
push
cs
xor
lcall
stc
dec
mov
mov
and
pop
cmp
sub
sub
ret
outsb
out
imul
inc
push
inc
inc
or
or
leave
cs
shrb
jne
out
ret
and
cmp
xor
fadd
lahf
and
jg
push
xor
jnp
add
push
xchg
gs
dec
xor
add
cltd
inc
dec
rorb
es
into
mov
incl
add
out
and
lret
fcoml
je
and
cmpsl
adc
cld
cmp
je
pop
cmp
sub
imul
pushf
sub
lret
aas
cmp
add
inc
inc
fimuls
test
push
push
and
daa
jle
xchg
ret
xor
sbb
orb
out
add
dec
call
push
test
inc
lods
mov
aas
jbe
and
push
dec
dec
adc
aas
pop
pop
js
test
stos
outsl
inc
pushf
mov
sahf
pop
movl
pop
and
js
or
add
roll
push
insb
mov
xchg
sbb
push
negl
inc
or
mov
jmp
nop
lock
jecxz
xchg
cmp
or
sub
dec
push
sbb
push
mov
jne
xor
cltd
mov
mov
mov
icebp
das
sub
mov
mov
sub
sbb
push
orl
jno
xor
adc
xor
scas
sbb
push
arpl
and
test
adc
rorb
pop
aaa
lret
ds
sub
stos
xor
add
push
cmpsb
jmp
adc
pushf
ss
xor
and
inc
xor
or
xor
sbb
mov
js
sar
lock
xchg
mov
imul
stos
and
or
imull
lods
jmp
int3
xor
addr16
outsb
mov
or
orb
pop
xchg
inc
dec
fs
fcoms
or
cltd
inc
xchg
btr
inc
jmp
mov
push
bound
inc
notl
cmp
test
push
mov
or
and
xchg
jl
sarl
xchg
imul
inc
xor
stos
or
adc
test
jge
mov
out
pop
cld
test
xchg
or
xor
xlat
aad
pop
lds
xchg
aaa
enter
cmp
and
sbb
icebp
rorb
sub
ret
mov
lret
push
cmp
cmp
jp
cmp
jnp
xor
adc
fistpl
mov
adc
cmpsb
lods
fsubs
mov
jae
lret
pop
xor
xor
lock
fs
daa
int3
or
mov
jl
lea
add
jnp
mov
add
pop
pop
adc
pop
mov
ror
adc
xor
or
cld
mov
jle
add
fnstenv
xor
mov
add
mov
xchg
stos
out
xchg
or
shrl
mov
dec
add
jne
cs
mov
popa
pusha
or
mov
mov
sarb
mov
popf
nop
test
stc
aas
and
dec
cs
sub
xor
inc
and
inc
add
or
insl
dec
adc
mov
fst
pop
or
out
mov
dec
adc
mov
cld
adc
pop
xor
pop
pop
sbb
adc
lds
mov
pop
add
lds
dec
lds
pushl
or
dec
sub
push
cmp
pop
push
test
shll
push
push
pop
loope
ja
jl
push
ss
mov
inc
mov
sbb
and
iret
addb
loopne
dec
push
dec
pop
cmp
add
outsl
mov
inc
rolb
cmpsb
push
push
jge
mov
lds
sbb
push
adc
mov
xor
js
insb
pushf
shrb
cld
cld
mov
adc
xchg
pop
orl
add
pusha
in
fnsave
inc
xorl
int
sbb
inc
sbb
xor
inc
or
jmp
movsb
adcl
lret
inc
jnp
call
stc
enter
inc
add
sbb
sub
sub
in
push
xor
xchg
or
aam
decl
notl
inc
dec
jne
imul
jg
adc
cmpsl
adc
sub
cs
xor
and
sub
lods
jp
mov
mov
imul
daa
dec
cmp
or
in
push
sbb
push
or
out
mov
ficoml
int
mov
pushl
dec
cs
sbb
mov
xchg
adc
dec
mov
adc
and
out
push
dec
les
sbb
adc
nop
add
imul
inc
test
out
int3
jne
push
ret
shlb
add
or
andl
push
hlt
outsl
stc
sub
pop
jnp
in
mov
add
addl
aam
cmp
clc
cmc
or
mov
into
fsubs
es
mov
lea
and
mov
imul
test
cmpsl
and
test
push
add
or
add
mov
mov
and
sbb
in
push
pop
dec
xor
fsub
fs
sbb
pop
nop
subl
bound
mov
push
out
inc
int
in
ja
mov
pop
out
xlat
mov
int3
and
orl
add
adc
xorps
arpl
cld
mov
je
fcoml
int3
filds
mov
add
push
push
add
cld
xor
mov
imul
or
inc
sbb
sbb
adc
js
rorl
ret
dec
ss
fwait
shlb
jno
add
outsb
insl
dec
lods
psrad
cmp
jmp
push
mov
aaa
jns
push
in
xor
pop
lret
add
adc
add
add
pushf
xchg
sub
or
rcll
aad
mov
pop
insl
xor
rclb
aam
and
mov
mov
test
addl
lcall
lds
jp
enter
pop
stos
add
adc
mov
add
ja
pop
test
sarb
push
push
sub
popa
mov
lock
call
leave
lods
sub
ja
les
jae
fsubrl
push
jmp
pop
mov
dec
add
in
outsb
loopne
lods
mov
push
aam
xorl
sbb
pop
xor
mov
xchg
inc
fcompl
fwait
add
ficompl
aam
add
cmp
push
daa
add
xchg
cmp
mov
popa
sub
and
lods
test
outsl
dec
push
clc
test
lret
cmp
add
sbb
add
in
outsl
movsl
ja
cmp
aas
fdivp
mov
mov
dec
cmp
adc
inc
rolb
jmp
mov
sbb
inc
sbbl
sbbb
cmpb
movb
lea
inc
mov
xchg
pop
jne
pop
mov
fadd
sub
mov
jg
dec
std
dec
mov
dec
inc
jne
aaa
sub
movsl
and
cmp
cmp
fs
cmp
test
and
sbb
dec
mov
mov
stc
into
mov
or
leave
cmp
pop
imul
or
xchg
and
adc
add
les
xchg
mov
pop
mov
jo
add
je
movb
iret
sub
inc
fcoms
cmp
mov
loopne
dec
adc
pop
adc
jmp
pop
adc
ror
xor
cmp
sub
and
push
adc
adc
inc
xor
imul
or
outsb
bnd
stc
daa
sarb
pushf
pop
push
outsb
push
mov
fcomps
push
push
and
call
lcall
es
xchg
jge
enter
hlt
inc
lret
sub
gs
lock
mov
push
push
or
jae
xchg
pop
hlt
or
stos
call
lock
or
iret
push
aam
jecxz
nop
jmp
or
fbstp
pop
add
jo
or
fstpt
loopne
in
pop
out
imul
push
mov
sub
popa
push
clc
orl
call
dec
je
jmp
add
movsl
pop
aad
pop
sub
xchg
adc
push
lock
aam
jae
or
leave
out
mov
out
addb
shlb
addb
mov
cltd
loop
rorb
sbbl
sbb
mov
mov
or
fists
jmp
pop
js
add
fimuls
dec
enter
xchg
mov
jne
es
aaa
movsb
sti
cmp
push
mov
ljmp
loopne
mov
pop
icebp
cld
or
or
ret
or
leave
or
dec
push
xchg
push
popa
or
xchg
adc
adc
jno
ljmp
aas
mov
addl
hlt
test
push
out
xor
hlt
lret
inc
dec
lea
adc
lret
dec
push
sarb
push
jmp
push
call
sbb
pop
std
xor
inc
popf
in
lret
mov
jl
push
inc
dec
sub
call
push
les
pop
xor
add
xchg
add
push
inc
test
mov
aam
mov
jno
loopne
push
dec
inc
repz
pop
dec
xlat
xor
push
pop
and
mov
dec
inc
push
nop
or
jmp
xor
sub
adc
xor
sbb
arpl
pop
ja
and
filds
dec
bound
gs
jb
loopne
mov
jo
mov
push
popf
or
and
js
push
in
and
shlb
mov
call
pop
lret
loope
in
push
mov
add
xchg
lock
add
cs
popf
add
mov
and
and
xchg
clc
outsb
out
or
je
xor
dec
sub
lea
adc
hlt
dec
cmpsb
scas
imul
inc
rcr
push
inc
mov
adc
arpl
pop
mov
xor
inc
or
sub
jbe
hlt
dec
adc
or
dec
push
outsb
out
je
cmpsb
cli
mov
dec
test
xchg
mov
setnp
imul
add
insb
add
lock
aas
sub
xor
and
popa
cmp
fldcw
je
testb
xchg
push
mov
mov
outsb
sbb
pop
sub
js
mov
jne
inc
inc
iret
xor
inc
push
add
xor
push
push
in
dec
xor
xor
leave
fisttpl
cmc
loop
mov
mov
push
mov
push
push
in
leave
push
iret
dec
jae
loope
repz
push
cli
bound
test
cld
push
adc
add
sbb
jno
fmuls
fadds
test
fbld
pop
or
fdivs
xor
adc
js
mov
aad
inc
xor
xor
fwait
js
int3
ja
jae
jnp
adc
ret
shll
adc
mov
ret
push
fistps
push
sub
jo
cmp
mov
push
dec
gs
notl
ret
push
pusha
fstpt
ss
je
xor
dec
sarb
inc
lcall
les
or
mov
add
inc
cmp
add
rol
pop
or
cmpsl
fisttpll
or
imul
roll
outsb
cmpsl
imul
imul
hlt
mov
cmp
andb
xchg
mov
adc
adc
ds
push
lahf
shrb
add
movb
inc
push
add
inc
cmpsb
pop
dec
cs
add
or
push
stos
xchg
cmp
push
cmpsb
push
movsl
movsl
int
jb
aas
xor
out
jecxz
mov
inc
mov
test
adc
sbb
test
jecxz
data16
cmp
cmp
or
jge
bound
mov
andl
mov
test
push
pop
fisttps
and
cmc
je
pop
js
mov
sub
je
in
pop
inc
mov
push
inc
mov
in
ja
or
insb
mov
mov
push
cs
adc
sahf
cs
test
loop
lock
cmc
mov
mov
mov
push
push
or
jnp
jle
jle
loop
jmp
addr16
test
and
mov
sub
xchg
pop
mov
or
xchg
xor
cpuid
sbb
lods
adcb
jo
rclb
pop
push
add
pop
fdivrp
pop
push
push
add
push
dec
mov
pop
add
pusha
nop
inc
dec
inc
leave
and
and
add
dec
lea
ja
push
rorb
and
and
aas
mov
adc
int
std
mov
xchg
test
je
push
mov
gs
or
or
test
das
jo
add
xor
cwtl
and
push
cmp
rol
inc
test
pop
push
xor
fdivl
add
or
shll
in
enter
jp
inc
clc
push
dec
or
add
jmp
and
push
ret
outsl
jge
push
mov
rclb
lods
mov
lea
clc
cmp
jle
test
divl
pop
gs
jge
hlt
jp
das
pop
hlt
and
xchg
xchg
xor
inc
pop
test
pop
nop
in
adc
pop
cmovnp
icebp
rolb
neg
mov
cwtl
imul
ss
cmovle
sub
or
or
subb
lret
movsl
xor
je
push
push
mov
int
out
orb
insl
aas
out
xchg
jecxz
fadds
sahf
and
fsubrl
inc
sbb
pop
inc
jge
movsb
jmp
sbb
or
lock
lock
mov
pop
xor
popf
or
or
jl
adc
out
test
cmp
jne
decw
mov
jmp
das
dec
in
enter
jnp,pt
rcr
popf
jmp
and
sub
or
pop
add
xchg
sbb
ds
js
adc
push
in
lods
imul
aaa
in
mov
in
add
jg
add
loope
ljmp
lret
imul
lock
clc
dec
xchg
inc
leave
inc
cwtl
cltd
jo
mov
adc
inc
sbbl
mov
sbb
call
pusha
loop
sub
cmpsb
xor
adc
roll
or
movb
gs
daa
xchg
jne
cmpsl
inc
inc
leave
pop
js
cmp
out
sbb
mov
cmpsl
pop
add
orb
out
inc
mov
pop
push
sbb
insb
lahf
hlt
pop
sub
rcll
shll
cmp
test
push
dec
xor
cmp
xchg
movsb
data16
jne
push
outsb
inc
cmp
xchg
sbb
pop
pop
or
pop
cmp
push
cwtl
call
inc
push
ss
push
xlat
add
loope
cmp
push
mov
mov
jne
arpl
cmp
jno
mov
jns
lock
and
xor
push
das
or
fsubrl
mov
bound
nop
divb
and
ss
push
or
dec
fdivrs
or
xchg
sbb
scas
js
addl
jg
mov
xor
cmpl
xchg
adcl
test
fisubrl
and
les
adc
mov
or
xchg
daa
mov
push
xlat
sub
inc
jae
sub
sub
je
pop
xorb
in
pop
pop
ret
mov
movl
stos
mov
jnp
cmp
inc
pop
mov
clc
sbb
dec
pop
loop
testb
fdivs
addb
test
cmp
sbb
rcrb
call
out
push
pop
xchg
test
sbb
push
adc
movsb
mov
stos
inc
fisubl
xlat
push
repz
jmp
lahf
jecxz
and
jne
ret
mov
pop
sub
sbb
cwtl
rcrb
cltd
lret
dec
adc
cmp
sub
sub
shlb
sbb
stos
push
loopne
inc
or
sub
shl
and
or
or
xor
bound
lret
ljmp
inc
xor
jge
pop
cmc
push
iret
pop
dec
add
loopne
xor
xor
add
sub
mov
or
mov
subb
sub
xchg
enter
repnz
xor
or
xchg
imul
pusha
imul
ret
nop
pushf
xchg
xchg
mov
and
insb
inc
sbb
or
movsb
push
cs
or
fucomp
adc
pop
sub
inc
add
cs
push
push
lea
outsb
cwtl
jo
xchg
jbe
jecxz
pushf
jbe
mov
pop
mov
out
outsb
test
add
sbb
xchg
sub
xchg
add
cli
pop
mov
push
aad
andl
inc
lahf
pop
dec
and
ret
push
imul
pushf
movsl
pop
inc
fmuls
jo
xchg
std
cmp
in
cwtl
xchg
and
loope
or
cmp
je
aaa
pushf
add
addr16
shll
push
push
dec
mov
addl
pop
add
ja
mov
movsl
sbb
mov
push
push
lds
jecxz
inc
or
in
inc
xor
adc
cltd
shlb
out
push
push
push
add
cmp
addl
adc
lcall
inc
insl
aaa
add
movl
push
inc
pop
lcall
push
cmp
inc
insb
loope
xor
rorl
inc
popa
add
cmp
cmc
push
add
neg
add
call
aaa
jle
or
je
pop
loope
or
incb
lahf
and
mov
insb
filds
fmull
cmp
xor
xchg
stos
movsb
jo
push
sub
js
jle
cltd
jns
cwtl
call
sub
or
xor
je
scas
or
pop
inc
inc
mov
dec
push
ret
add
nop
lock
aam
xchg
divl
or
int3
add
testb
adc
movlps
in
gs
aam
dec
and
xor
repnz
dec
sub
sub
enter
jbe
mov
sbb
shl
or
imul
jbe
jmp
mov
movsl
and
pop
push
xchg
mov
pop
iret
adc
cmc
ret
sbbb
pop
dec
pop
inc
cmpsb
lock
mul
ret
dec
jo
andb
call
sub
sbb
fs
into
dec
psubsb
enter
sbb
push
dec
fwait
test
ljmp
or
sub
or
xchg
icebp
or
fiadds
rcl
sub
jle
fwait
jmp
into
and
je
nop
add
add
sbb
addb
jb
sbb
jmp
imul
daa
sub
filds
add
nop
loop
cmp
push
testl
jl
es
test
fcoms
mov
insl
mov
pop
or
and
push
sub
add
aaa
ret
sub
cmp
setge
inc
mov
lods
shl
imul
xor
add
addb
push
add
orb
mov
sbb
outsl
jns
test
push
sbb
pop
inc
ret
cld
xchg
pusha
jle
clc
jle
mov
daa
lock
xor
dec
and
cmp
jl
mov
xchg
jo
les
jo
inc
aas
into
es
cwtl
dec
sbb
aam
stos
sbb
add
mov
lret
inc
lods
mov
pop
dec
and
cwtl
push
sbb
in
scas
ret
sbb
jge
jle
add
jo
sbb
jge
or
sbb
and
dec
and
add
sbbl
adc
mov
mov
hlt
push
inc
lock
out
cmp
mov
enter
jnp
in
loopne
nop
mov
mov
sahf
cmpsl
stc
xor
xorb
fdivp
cs
push
and
jle
les
outsb
rorb
loope
iret
jnp
push
fs
out
dec
or
mov
xadd
imul
adc
and
and
insb
cmp
xchg
mov
add
scas
jg
xchg
or
das
inc
mov
aaa
pop
push
gs
jge
add
lods
shl
add
ret
add
pop
das
mov
jnp
push
xchg
or
addr16
mov
cs
adc
loopne
mov
pop
mov
mov
inc
andl
mov
in
aad
pushl
mov
movsb
fidivrs
divl
mov
cmp
push
les
int3
and
jl
push
call
stos
mov
mov
mov
iret
inc
jns
add
inc
pop
ds
mov
sub
and
mov
cmp
cs
push
in
cmp
sbb
pusha
sarl
mov
push
test
lock
dec
loopne
mov
cld
mov
push
jo
cmp
push
jg
lea
and
jns
test
mov
or
es
xstore-rng
cmpsl
inc
js
or
dec
bound
lock
mov
cmp
mov
jns,pn
jnp
dec
test
add
push
cmp
add
loopne
inc
fs
pusha
testb
popa
jo
roll
dec
aam
dec
dec
jb
adc
rorb
dec
adc
fcoms
incb
mov
pop
mov
add
add
test
push
push
mov
dec
nop
movl
sub
push
and
cmpsb
inc
adc
test
jo
js
push
repnz
or
inc
sub
js
jle
imul
dec
pop
cmp
test
rol
mov
dec
nop
xchg
inc
inc
stos
inc
addr16
in
in
in
roll
repz
inc
ja
sbb
repz
lea
dec
dec
or
add
fnsave
lock
nop
test
pop
lcall
repnz
inc
or
addr16
push
jo
lock
inc
mov
add
xchg
sbb
popa
imul
inc
adc
inc
dec
or
fcmovnbe
xchg
aas
fisttps
js
push
pop
xchg
or
inc
or
fs
pop
adc
xchg
or
xchg
xchg
scas
sub
xchg
ja
ja
mov
sub
nop
xor
flds
jns
jbe
cmpsl
lea
push
or
stc
sbb
fsubrl
push
fs
push
dec
or
xchg
add
add
testl
mov
mov
fsubs
mov
add
xchg
popa
imul
mov
mov
and
leave
inc
test
jae
rolb
mov
pop
andps
dec
mov
aam
shll
add
pop
sub
and
pop
adc
loopne
popf
stos
pop
clc
push
fists
pop
fcoms
enter
loope
adc
inc
dec
movl
and
inc
inc
notl
jl
inc
pushf
adc
push
addb
or
js
xchg
je
or
dec
push
jmp
inc
jno
adc
dec
add
testb
inc
add
lea
push
faddl
push
or
jl
xchg
dec
xchg
cmpsl
pusha
js
js
push
imul
jo
push
or
insb
push
sbb
push
fisttpl
std
xchg
movl
xor
xchg
xchg
sub
popf
movl
fiadds
loopne
je
sarb
adc
add
adc
adc
pop
push
or
adc
inc
outsb
xchg
sahf
mov
pop
andb
and
adc
and
xor
push
popa
xorl
pop
and
xchg
dec
xor
add
leave
inc
xor
add
js
xor
xor
xchg
and
add
push
sub
push
dec
arpl
sub
adc
and
pop
sbb
sub
sbb
pop
das
fwait
or
mov
fdivs
push
xor
bswap
sub
dec
adc
int
cmp
cmp
mov
cwtl
adc
orl
and
inc
test
xchg
or
lods
xchg
lods
sbb
enter
mov
add
fildll
mov
add
ja
lcall
push
add
xorb
nop
ret
sbb
push
pop
or
inc
add
adc
nop
ret
dec
je
mov
pop
sbb
psubusb
je
adc
andb
cmp
rorb
xchg
dec
or
call
push
popf
xor
ficompl
orb
mov
dec
push
push
leave
mov
fcompl
pop
mov
inc
dec
leave
pop
xor
sbb
pop
inc
fwait
iret
mov
mull
not
or
mov
outsb
and
test
fwait
js
gs
push
mov
outsl
cs
sub
pushf
insl
jle
push
stos
flds
mov
mov
jbe
adc
xchg
mov
push
push
mov
mov
mov
jnp
adc
scas
inc
dec
roll
or
cli
test
call
rcr
js
mov
jbe
sbb
pusha
jo
lea
or
popa
xor
gs
rorl
dec
mov
fisttpll
fists
fbld
out
imul
out
fiaddl
jbe
out
mov
and
cs
movsb
pop
sahf
addr16
gs
mov
sub
flds
mov
out
lret
wrmsr
pop
mov
sub
mov
pop
rorb
push
push
jo
adc
repz
loope
jmp
lahf
scas
addb
adc
pop
mov
imul
sahf
dec
jl
bound
nop
add
enter
push
cmp
inc
loop
hlt
inc
inc
inc
xchg
mov
push
outsb
or
adc
lcall
mov
add
push
add
inc
add
add
add
add
mov
testb
test
pushl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
jmp
ljmp
jmp
jmp
jmp
jmp
call
mov
loope
loopne
fdivrp
fdivr
fidivrl
fdivr
xlat
call
call
call
call
call
call
call
dec
sbb
das
mov
dec
dec
dec
dec
lret
leave
call
add
add
push
in
repz
out
add
sbb
push
js
aad
ds
pop
in
push
and
mov
insb
or
movsb
mov
shrl
sub
pop
cld
push
in
or
out
insb
pop
lock
test
shlb
mov
jnp
or
and
es
data16
push
sbb
dec
loopne
in
add
lods
stc
fstps
outsb
repz
out
imul
push
sub
je
iret
sarl
lock
pushf
in
hlt
or
cld
cwtl
push
mov
add
mov
mov
cmpsb
lock
in
js
push
push
lock
mov
ss
fimull
sbb
ljmp
lcall
divl
cmp
dec
add
es
ret
sub
jg
sbb
mov
mov
in
adc
push
or
sbb
adc
or
shlb
psrld
bound
inc
push
xor
pushf
dec
lea
add
cmp
adc
jo
add
mov
in
inc
test
adc
or
in
or
push
fcompl
add
loopne
inc
les
sub
or
loopne
rcrb
incl
sbb
pusha
orl
dec
and
jae
or
mov
jp
dec
rclb
mov
inc
jnp
sbb
xor
scas
cmp
hlt
push
lcall
and
xchg
sub
push
mov
clc
adc
push
xor
pop
push
dec
and
pop
ljmp
dec
or
jge
call
loopne
inc
sbb
add
dec
loopne
rorb
sub
pop
clc
aas
sub
xchg
inc
or
dec
dec
mov
inc
push
fsubrs
movsl
pop
orl
fs
inc
mov
pop
and
and
cmpsb
xor
xor
ret
in
mov
sub
lea
dec
adc
sub
adc
mov
pop
adc
pop
or
sbb
pop
pop
ret
or
xchg
out
and
push
adc
mov
xor
add
sbb
nop
cmovae
inc
dec
push
lahf
xchg
stc
and
inc
dec
cmp
xchg
xchg
pop
mov
popl
cli
mov
sbb
jo
movsb
push
mov
add
sbb
push
push
adc
adc
add
push
mov
push
add
add
add
add
fisttps
lock
sub
mov
add
jp
adc
sbb
fildll
mov
add
add
cmp
cli
add
mov
mov
push
incl
pop
test
dec
mov
mov
mov
mov
call
ret
or
and
mov
mov
lods
lock
mov
add
push
mov
xor
cmp
pop
nop
pop
loope
sbb
dec
in
decl
cld
inc
inc
inc
mov
mov
mov
mov
mov
mov
mov
mov
push
test
mov
mov
mov
and
pop
dec
push
iret
sarl
les
xor
js
out
cmp
rclb
je
int
stc
xor
add
les
repz
sarb
dec
pop
sti
sahf
ja
hlt
adc
push
push
push
push
cmpsl
fnstcw
call
pop
mov
mov
mov
add
sbb
push
cmp
fwait
iret
push
lods
sarb
fdivs
pop
fiadds
mov
push
sbb
fcompl
or
jnp
mov
push
test
in
lahf
out
in
push
hlt
cld
cmp
popa
push
jge
ds
jo
sbb
mov
push
insb
xor
cmp
push
push
inc
push
push
shlb
jns
jp
je
je
push
out
imul
push
fs
xor
cmpsl
jge
sub
push
pushf
test
inc
outsb
jbe
out
sarl
push
push
push
or
ds
mov
xchg
xor
lods
insb
adc
lods
add
add
outsb
scas
pop
shrb
or
out
stos
negl
cmp
push
fs
xchg
add
and
mov
inc
mov
inc
or
adc
bound
sbb
and
stc
iret
pop
scas
push
xchg
sub
inc
in
stos
mulb
cmp
in
enter
jb
inc
mov
imul
repnz
add
ss
xchg
nop
or
pop
sub
popl
leave
inc
pop
scas
dec
push
pushw
pusha
adc
dec
ds
mov
cmp
cmpb
inc
adc
push
add
cmpb
es
add
jnp
add
adc
in
lret
orl
jnp
push
mov
pop
and
icebp
loopne
mull
loop
inc
inc
adc
pop
or
or
lods
dec
and
clc
add
enter
or
insb
imul
orb
and
loopne
or
cmp
les
jl
adc
orb
jo
mov
scas
sahf
out
cmpsl
std
add
daa
xor
lahf
out
inc
dec
pop
push
jecxz
mov
js
shl
add
xor
mov
js
in
and
cmpb
out
test
fiaddl
cmpsl
jge
int
mov
xchg
jo
fwait
push
call
pushf
mov
in
lahf
es
jl
pop
fidivrs
movsb
push
adc
mov
jb
dec
push
jbe
inc
adc
add
push
mov
add
add
xor
aad
adc
push
insl
or
int
ficoml
pop
orb
push
jmp
dec
xchg
mov
mov
inc
adc
loopne
mov
ds
addr16
dec
xor
mov
mov
dec
push
test
pusha
je
push
and
or
and
cltd
fs
js
push
dec
adc
es
js
push
enter
inc
mov
dec
cltd
push
push
jb
jb
mov
std
jl
movl
xchg
and
jmp
push
push
cmc
es
shlb
data16
das
fdivs
add
ret
pop
mov
pop
ja
push
test
xor
xor
xor
dec
insb
add
inc
cmp
adc
mov
jecxz
cli
sbb
flds
add
bound
add
cmp
cs
jle
iret
sbb
jns
iret
adc
mov
lock
adc
xchg
add
mov
out
inc
pop
daa
inc
fidivrs
mov
pop
ja
jns
popa
add
or
psraw
nop
cmp
push
xchg
daa
push
mov
dec
push
push
inc
push
inc
xchg
fcmovnb
or
push
jo
daa
or
add
insb
popa
clts
addl
dec
outsl
and
mov
rclb
imul
mov
inc
cmpsl
mov
je
dec
push
popa
push
movl
push
orl
pop
add
fnsave
out
dec
outsl
adcb
daa
adc
imul
loope
mov
mov
xorb
lea
inc
arpl
pushf
inc
jmp
inc
lret
dec
insl
add
xchg
mov
push
and
xchg
jl
sub
in
cmp
push
cmovo
dec
fsubs
enter
dec
jecxz
xor
dec
rorl
fadds
adc
xor
rclb
pop
add
xor
pop
add
sahf
pop
mov
mov
sub
and
mov
xchg
je
mov
mov
add
mov
mov
add
adcb
out
or
and
data16
daa
jg
test
adc
cmc
inc
subb
shll
mov
fnsave
xor
jl
outsl
nop
or
fistpll
adc
rorb
or
shlb
push
mov
orl
test
test
mov
add
ds
and
std
adc
inc
mov
jmp
lock
sbb
push
fmulp
push
pushf
roll
sub
push
enter
push
xlat
xchg
sbb
or
mov
jmp
aam
sub
xlat
ljmp
dec
dec
jne
push
sbb
jmp
iret
dec
xchg
cmp
das
or
in
cmp
xchg
jmp
nop
push
or
ret
dec
cmp
sbb
xorb
push
or
xor
or
adc
adc
xor
shll
sbb
sub
xor
shrl
sub
xor
mov
pop
dec
xor
scas
push
push
loope
and
jg
rcll
or
pop
filds
enter
jae
add
data16
bound
lea
adc
mov
gs
dec
subb
std
dec
je
cmp
imul
xchg
mov
sbb
add
xchg
jge
push
mov
loope
jmp
dec
jmp
hlt
adc
bnd
mov
jp
or
add
or
je
cmpl
jne
mov
sub
enter
add
adc
imul
push
int
and
sub
test
sub
pop
lea
push
pop
aam
jno
lods
xor
divb
inc
sbb
enter
hlt
jmp
or
xchg
shl
incl
xchg
or
nop
pop
xor
stc
mov
fsubrs
enter
jns
push
pop
les
inc
pop
test
inc
adcl
pop
mov
push
shlb
jo
adcb
inc
inc
divl
ret
adc
jle
enter
lock
fldl
pop
dec
xor
inc
fildll
jge
cmpsl
mov
mov
cmp
and
rolb
sbb
js
cs
cmpsb
mov
sbbb
cmc
imul
pop
and
addr16
popa
cmpsl
test
jl
sarb
insb
pop
add
add
jae
or
addr16
inc
mov
xchg
inc
inc
sub
in
push
sbb
leave
dec
pusha
or
cwtl
fs
pop
rorb
jg
mov
pusha
mov
sbb
push
pop
int
je
dec
lea
movsl
jns
xor
fs
dec
dec
sbb
push
cwtl
or
pop
sub
pop
xor
pop
and
enter
insl
mov
ret
adc
and
jns
mov
bnd
sbb
push
pop
mov
jle
push
dec
push
sub
shlb
or
icebp
dec
adc
dec
or
cmp
or
add
jmp
sub
or
neg
mov
imul
and
mov
push
sbb
fsubs
jbe
dec
arpl
clc
out
xchg
subl
xor
cltd
shlb
inc
pop
xchg
inc
and
stc
subl
mov
xor
sarl
jb
push
inc
adc
pop
mov
sbb
xor
inc
dec
mov
jg
les
xchg
cmp
popa
std
or
cs
mov
jp
test
pop
in
mov
pop
xchg
xor
call
shl
loop
addl
in
daa
daa
mov
inc
mov
and
inc
pop
or
dec
inc
je
pop
or
jmp
push
dec
mov
les
js
push
jae
clc
lods
dec
popa
shll
sti
aam
cli
jge
push
js
enter
shlb
clc
add
aam
lret
loop
adc
inc
pushf
les
orl
das
fisubrs
daa
rolb
xorl
aas
cmp
je
mov
fiaddl
and
inc
mov
push
out
lock
xor
ret
inc
mov
into
jno
mov
dec
inc
div
sbb
shl
rorb
cli
and
call
add
mov
push
jb
add
mov
outsl
rorb
add
adc
in
adc
scas
and
push
cmpb
rcr
sub
je
jno
pop
add
bound
adc
push
or
in
loop
xor
idiv
fadds
push
mov
and
and
inc
js
add
and
and
adc
or
add
sarb
sbb
rclb
movsl
or
fldcw
or
push
mov
xchg
mov
pusha
adc
js
mov
mov
test
inc
popa
inc
in
inc
call
inc
jne
and
loope
adc
shlb
pop
sub
andl
or
sbb
mov
cmp
xchg
dec
movsb
ret
push
rclb
push
pop
lea
rorl
int3
rcr
sbb
push
lods
cmp
mov
pop
push
inc
mov
mov
add
call
fucomip
or
les
inc
loop
cmpsb
sub
push
pop
les
sbb
loopne
aaa
mov
adc
sub
int
jmp
clc
lea
push
pusha
xor
mov
mov
add
cmpl
sub
shrb
aas
loopne
fs
sub
inc
cmp
repnz
and
imul
mov
dec
inc
and
stc
sahf
std
xorl
add
push
dec
jbe
popa
insl
les
and
adc
sbb
cmc
or
inc
std
ds
and
or
mov
xchg
cmp
mov
jne
mov
fcmovnbe
push
popa
test
sub
add
inc
jo
xchg
mov
jge
mov
sub
add
jne
push
pop
inc
xor
leave
ret
mov
lock
jmp
jnp
xchg
push
arpl
mov
mov
fldl
aad
lea
add
pop
inc
shr
xchg
push
sbb
test
mov
add
cmp
inc
mov
mov
out
cmp
cmp
and
cmpsb
mov
sarl
mov
mov
es
pop
rcll
rcr
addr16
mov
xchg
cmp
sbb
pop
out
xchg
mov
mov
mov
or
bound
mov
out
inc
push
and
inc
icebp
add
pop
je
push
mov
sbb
sub
jne
sahf
pusha
pushf
xchg
or
xor
adc
ja
jmp
pop
lods
unpckhps
std
cltd
jns
push
add
test
inc
jo
sarb
sbb
push
imul
sub
inc
xchg
cli
out
pop
movsl
lods
push
mov
js
andb
push
push
rorl
inc
hlt
inc
push
mov
sub
mov
cmp
pop
cmp
dec
mov
and
push
fs
pusha
pusha
inc
repnz
pop
mov
sbb
dec
sub
adc
adc
adc
push
popa
std
jae
push
xor
dec
sbb
or
ja
pop
add
bt
mov
out
pop
xchg
test
mov
cmp
sbb
lea
inc
out
push
jo,pn
or
stc
sbb
xorb
mov
mov
ljmp
cmp
pop
sub
inc
jl
test
sub
push
add
testb
and
and
jns
sub
imul
pop
mov
pop
xor
and
das
dec
xor
sbb
mov
jmp
sub
inc
add
mov
lcall
adc
adc
rclb
push
fnstsw
stc
popa
jns
sbb
dec
leave
sub
adc
mov
dec
aad
mov
inc
ds
fsubr
mov
dec
jo
fdivr
pop
andl
or
jo
xor
pusha
popf
add
push
jb
dec
xor
and
leave
lret
mov
mov
cmpsb
jo
mov
divb
mov
pop
mov
xor
mov
cmp
mov
pop
push
jmp
test
outsb
mov
add
fs
call
shlb
push
sub
add
popa
out
mov
dec
pop
jno
push
pop
dec
or
je
or
pop
mov
xor
add
shll
rolb
mov
or
adc
js
ljmp
js
inc
aas
mov
cmc
mov
sub
mov
movsb
lret
in
enter
or
push
mov
inc
js
addb
sbb
bound
insb
xor
cmp
sbb
lock
cmc
int3
cmp
daa
in
das
add
add
out
mov
decl
lcall
out
push
pop
lret
and
pop
push
inc
jp
incb
and
sub
ds
cmpsb
jge
dec
adc
mov
or
pushf
lret
in
repz
and
or
jecxz
push
mov
dec
jo
lods
adc
les
clc
xchg
mov
test
arpl
push
imul
pop
mov
pop
outsb
xchg
cmp
add
lea
movb
cmp
addb
or
sub
orl
fisttpll
or
push
sbb
repz
mov
mov
into
pusha
loopne
sbb
mov
xor
adc
dec
decb
repz
clc
notb
sub
jne
push
inc
push
daa
or
inc
les
xchg
ret
pop
jo
xor
jbe
sub
pop
xchg
clc
add
out
mov
insb
mull
mov
pop
sub
mov
notl
mov
dec
out
adc
in
pushl
ljmp
xor
xchg
sub
cwtl
ja
adc
or
daa
mov
push
jecxz
sub
daa
pop
stc
xorl
fnstcw
xor
cwtl
clc
add
das
inc
ds
je
call
lods
jo
pushf
jl
scas
ret
jge
sbb
jecxz
int3
enter
dec
lea
inc
add
movsl
and
mov
sub
or
scas
pop
sub
or
popa
push
xchg
sub
insl
sub
push
or
and
lock
test
into
cltd
clc
xor
add
fldcw
add
loopne
or
cld
xchg
je
std
aas
jnp
xor
rorb
add
inc
stc
pop
add
out
movsb
dec
inc
adc
mov
addb
inc
call
push
adc
ror
addr16
cmpsl
lods
subl
imul
xor
nop
or
pushf
jne
push
adc
mov
negl
xor
cmp
inc
sub
mov
mov
fiadds
dec
mov
pusha
and
dec
add
push
mov
and
xor
jb
sbbb
aad
or
cwtl
je
adc
mov
sbb
add
aas
shrl
insb
lea
lods
jbe
pop
push
push
pusha
sub
inc
jl
xchg
sbb
cmp
or
xchg
or
pop
pop
add
adc
add
pop
or
mov
arpl
pop
pop
fs
push
insb
mov
mull
outsb
mov
and
push
adc
dec
insb
or
or
addl
inc
out
pop
pop
add
call
ljmp
fwait
out
pop
jmp
cmp
je
mov
test
jbe
push
outsb
mov
inc
push
push
pushf
jge
cmp
push
dec
push
sbb
adc
pop
sub
jbe
cmp
cmp
and
je
cmp
and
xor
add
nop
stos
aas
iret
rolb
and
xchg
inc
mov
push
insb
and
cli
adc
cltd
les
pushf
adc
lods
add
hlt
inc
insb
shlb
test
adc
cmp
dec
and
cmp
sbb
push
pop
inc
loop
add
inc
adc
dec
stc
adc
fadds
adc
and
push
xor
inc
leave
or
leave
cwtl
sbb
clc
lds
leave
inc
xchg
in
lods
orl
sub
sub
pop
ror
mov
xor
adc
add
pop
sbb
inc
test
cltd
outsb
push
lcall
or
enter
dec
into
mov
fcmovnu
and
es
push
add
and
insb
or
imul
ficoml
in
ficompl
and
imul
xor
mov
mov
cmpsl
pusha
adc
es
sbb
loopne
sbb
add
lea
mov
push
shl
push
adc
cmp
shlb
outsl
or
xchg
jne
cmp
mov
dec
enter
cmp
std
push
gs
pop
cmp
mov
aas
xor
test
or
cmpsb
mov
cmp
mov
lods
add
xor
sbb
mov
fs
adc
sarb
mov
and
testl
rolb
loopne
inc
popa
xchg
sbb
imul
clc
xchg
lret
cmp
xchg
add
push
fcomps
inc
jo
inc
inc
push
add
lcall
cmp
test
pop
add
jle
jmp
in
inc
adc
push
ds
pop
dec
xchg
jb
iret
jg
dec
fwait
insl
cmpsl
popa
adc
xchg
pop
nop
rclb
inc
dec
xchg
sub
push
das
add
jmp
mov
fsubl
mov
mov
es
dec
pushf
testb
jmp
push
inc
insb
mov
inc
sbb
fs
nop
sub
pop
lcall
cmp
add
adc
pop
nop
cmc
xor
xchg
xor
and
mov
or
mov
jg
sbb
xlat
or
adc
std
dec
aad
mov
js
and
push
push
push
mov
punpckldq
xor
push
cmp
add
repnz
insb
jno
sbb
ret
cmp
shrl
xchg
sbb
and
into
add
ret
int
insb
flds
adc
fmuls
cmp
jne
adc
xchg
out
test
mov
or
pushf
sub
or
adc
mov
xchg
jg
or
adc
loopne
or
loop
jg
test
lds
adc
jmp
test
push
xchg
movsb
es
test
sbb
insb
je
inc
mov
pusha
pusha
iret
pop
push
sbb
or
mov
enter
adc
mov
sub
ror
add
inc
movsb
sbb
je
data16
or
ss
js
push
mov
mov
pusha
inc
fcoml
mov
push
pop
pop
loop
xor
in
test
adc
sub
xor
jo
jne
dec
mov
mov
leave
shlb
xchg
scas
xlat
adc
out
xchg
pop
sub
div
leave
popf
dec
sbb
xor
jp
or
xor
cmp
and
cmp
mov
add
out
es
sbb
leave
insb
jmp
push
inc
xchg
push
mov
cs
push
loopne
sbbb
push
jno
hlt
xor
or
jmp
int3
adc
pop
mov
adc
xchg
adc
mov
mov
adc
mov
push
dec
push
xchg
sarb
xchg
adc
cmp
jne
xor
add
clc
adc
jbe
dec
push
mov
mov
inc
mov
loopne
cmp
call
enter
xchg
sub
rcrb
roll
lock
inc
push
pop
aaa
mov
or
push
or
hlt
hlt
rorl
xchg
push
jl
adc
jp
inc
adc
dec
test
push
xor
or
sbbb
imul
push
mov
inc
mov
xlat
into
inc
or
pop
and
das
leave
and
mov
mov
cmp
xchg
add
push
das
ja
ljmp
jg
mov
cmp
js
je
or
add
sbb
imul
inc
add
xor
mov
outsl
sbbl
popf
divb
adc
fidivrs
push
jne
vmwrite
into
pop
fcoms
sub
mov
inc
push
jmp
jmp
dec
adc
mov
and
mov
add
push
push
imul
dec
or
fcomp
mov
pop
icebp
loop
mov
dec
cmpsl
shlb
rcrb
out
and
inc
sbb
pop
roll
pop
sub
mov
jl
dec
push
sbb
jmp
fs
fbstp
inc
imul
nop
xchg
sbb
push
lcall
iret
dec
mov
adc
or
sbb
dec
mov
add
mov
pop
push
and
or
cmp
sub
and
push
pop
js
movsl
pop
inc
and
rolb
call
stos
flds
popa
stos
dec
popa
cmpsl
and
imul
lret
adc
add
add
xlat
mov
inc
mov
push
pop
push
dec
xor
mov
fs
les
das
or
mov
and
push
add
movsl
int
mov
adc
aas
pusha
push
sti
test
xor
xlat
pop
xor
xlat
pop
sbb
in
sbb
pop
gs
cmp
xor
mov
inc
xchg
mov
js
shrb
pusha
mov
pop
push
pop
xor
shll
or
xor
mov
lock
add
add
fcomps
pop
add
or
and
sub
push
mov
adc
cmpb
push
or
xorl
lahf
jge
jbe
xor
inc
je
and
and
test
adc
aaa
icebp
mov
daa
aaa
orb
push
andb
mov
xchg
xchg
mov
loop
shll
movsb
sbb
jb
mov
mov
cmp
xor
push
add
lock
cmp
cmpsl
pusha
mov
push
imull
or
jge
fildl
xchg
inc
inc
add
es
js
pop
pop
je
imul
jbe
rol
add
inc
jnp
or
add
cmp
sahf
add
adc
scas
cmp
sub
pop
jo
dec
ficomps
sbbl
mov
add
xchg
mov
data16
fbstp
shl
cmpsl
mov
add
and
inc
adc
data16
ds
fsub
hlt
add
cmp
jecxz
cmpsl
cld
xchg
popa
popa
dec
mov
cwtl
sbb
xchg
lret
mov
or
xlat
and
add
cmp
jge
sbb
and
lock
mov
lock
repnz
sub
sbb
inc
je
or
push
or
addr16
adc
push
movsb
imul
xor
mov
mov
pop
sub
sbb
mov
sub
xchg
inc
cmp
mov
fstl
ja
ss
xchg
or
fnstsw
das
daa
mov
shrb
mov
loope
or
xor
sub
mov
lock
add
xchg
mov
push
mov
pop
cmpsl
daa
lods
jb
je
pop
push
cwtl
jns
nop
mov
pop
hlt
loopne
andb
inc
pop
push
jne
rcrb
dec
xchg
add
pop
push
add
outsl
or
pop
and
lods
and
sbb
sub
pop
idivl
pop
shr
out
dec
cld
mov
and
jne
movsl
out
pop
push
jno
adc
inc
dec
clc
int
test
jl
add
and
clc
mov
jns
mov
cmp
rol
sbb
mov
push
or
or
add
fcomp
popf
test
test
ficompl
pop
outsl
mov
data16
leave
or
cmp
adc
mov
orb
pop
fwait
adc
add
or
inc
mov
cmp
test
or
mov
mov
xchg
or
push
sbb
in
insl
adc
sahf
cmc
mov
stc
pop
push
add
or
push
or
insb
scas
sarb
cmp
es
dec
xchg
xlat
iret
mov
push
or
iret
push
sub
push
adc
rolb
subb
mov
popaw
lods
xor
int3
pop
cmp
xchg
mov
mov
or
loop
xchg
outsb
and
jae
jo
icebp
aaa
test
pop
jo
sbb
int3
ja
pop
je
mov
movb
in
pusha
add
cmpsb
mov
lods
push
inc
add
push
test
push
ret
sti
adc
mov
push
imul
pusha
notb
js
or
call
mov
adc
mov
je
mov
out
lea
mov
sarl
cmp
nop
out
sti
shufps
sbb
je
mov
fwait
and
imul
jo
mov
sub
out
and
pop
or
inc
sbb
or
xchg
enter
stos
mov
pop
pop
pop
repz
test
pusha
mov
pop
jl
nop
pop
mov
mov
outsl
movhps
in
xchg
nop
push
int3
inc
and
in
inc
clc
jae
sbb
adc
push
push
nop
mov
jae
ret
into
cmovnp
loopne
popa
jne
or
cmp
xchg
daa
jecxz
push
dec
fmuls
xor
mov
cmp
mov
stc
sbb
sbbb
add
push
rcl
or
cmp
loopne
dec
pop
add
je
mov
mov
xchg
push
or
fidivl
adc
leave
mov
mov
pop
addl
mov
lock
mov
push
jo
sbb
dec
fldt
sarb
jmp
sbb
sbbl
sub
sarl
sbb
dec
jle
dec
or
cmp
cmp
push
add
inc
pop
push
mov
pop
sbb
adc
fs
inc
jg
sbb
xor
pusha
jmp
fists
imul
rolb
pop
sub
repz
stos
cli
sarl
jmp
pop
aas
push
clc
sub
mov
dec
xchg
mov
gs
mov
adc
sub
daa
out
jg
out
loopne
sar
inc
movsb
push
xor
inc
ret
mov
adc
sub
daa
sbbl
ret
add
je
xchg
sahf
inc
jecxz
add
test
or
movsb
ret
call
dec
fstps
cmp
sub
or
xor
adc
push
dec
js
jns
or
std
xor
inc
xor
xor
inc
mov
xor
cmp
dec
add
inc
and
sbb
clc
fbstp
dec
shlb
fmull
xor
xor
cmpb
mov
je
sub
loop
lock
xor
pop
test
nop
dec
ret
fwait
and
cmpl
add
xchg
inc
int3
inc
xchg
cld
add
push
popa
inc
mov
sbb
mov
xorl
xor
or
xor
out
pop
add
iret
pop
daa
ss
or
add
and
xchg
js
jb
xchg
xor
or
adc
adc
fbstp
push
icebp
pop
scas
rcrb
push
stos
pusha
pop
push
outsb
push
or
xchg
pop
and
mov
dec
cmp
cmp
ret
adc
jne
daa
sbb
js
push
in
lock
dec
loop
aam
inc
imul
and
add
outsl
or
sbb
pushf
rcll
or
lods
add
mov
or
cmp
into
roll
out
mov
ret
fildll
add
dec
aad
inc
pop
mov
xor
loop
stc
sbb
jnp
add
cmpsb
cmpsb
jl
outsl
in
cmpsb
add
sti
loopne
jnp
jl
inc
ficoml
iret
push
or
mov
push
ljmp
shr
inc
fmuls
add
and
or
or
mov
add
xchg
adc
out
dec
repnz
jne
cld
xchg
insb
xchg
push
fstl
adc
mov
lcall
fmull
fildl
fsubp
movsl
rorl
dec
mov
adc
push
clc
pop
clc
lea
ffree
pop
sub
jl
dec
mov
ffree
adc
xchg
cmp
add
mov
movsb
mov
inc
aas
out
sub
inc
add
or
or
adc
mov
xchg
pop
push
outsb
push
mov
and
mov
stos
je
push
dec
pop
out
repnz
sub
rcl
cs
jb
cli
cld
clc
jl
jb
repnz
inc
lock
insb
mov
int3
push
add
dec
or
aad
add
orl
adc
lea
out
shl
pusha
mov
dec
aas
lea
divb
xchg
xchg
push
pushf
xor
add
popf
or
cmp
pushf
ret
inc
adc
lods
lods
or
call
cs
inc
loop
out
pop
adc
fdivs
imul
int3
loope
jmp
sub
loopne
clc
js
mov
push
inc
add
dec
inc
shlb
les
or
dec
mov
lock
or
sub
enter
pop
pushf
ret
loopne
mov
push
push
pop
add
jb
lret
push
in
insb
sub
popf
or
xor
mov
or
dec
mov
cs
andl
cld
pusha
push
dec
fcomi
inc
inc
dec
mov
push
xchg
and
hlt
int
jne
sub
sub
jge
push
imulb
ret
dec
loopne
fsubrl
pop
push
aaa
call
mov
loopne
in
or
inc
in
push
adcl
inc
add
stc
sarl
shrb
bound
mov
call
orps
xorb
mov
nop
jge
ja
pop
sbb
push
ret
shll
sahf
jl
movsb
mov
sbb
mov
push
push
mov
pop
jle
add
pop
je
mov
lock
ret
ljmp
ja
push
cmp
or
adcb
or
ret
movsb
pop
orb
inc
adc
ficoms
adc
jmp
movsb
sbb
or
inc
fisubl
lret
in
xchg
int3
js
rcrb
orl
add
cmp
add
sub
pop
mov
jl
fmuls
imul
cmp
loopne
inc
xchg
push
inc
mov
cmpsb
icebp
shll
mov
inc
mov
js
or
aas
mov
cmp
int3
push
pop
into
int3
inc
push
movsl
cs
xchg
mov
int3
cmp
out
pop
xchg
sbb
sbb
mov
xorl
push
rolb
loopne
popa
movsb
js
in
arpl
imull
fmuls
adc
sbb
adc
bound
sbb
popa
loopne
push
add
pop
or
fnstsw
xor
sub
mov
hlt
cld
dec
leave
std
mov
push
imul
aaa
pop
movsl
jp
call
mov
scas
cmc
cmp
dec
push
iret
imull
jmp
clc
mov
sub
sbbl
cmp
sbb
into
test
push
lods
cld
add
xor
rcll
rcrb
add
inc
or
add
lods
push
outsb
int3
and
mov
push
push
add
into
daa
loopne
je
add
mov
push
test
test
push
sbb
lcall
sbb
sti
inc
cmp
fisttpll
add
loopne
inc
jl
rcll
or
fstpt
jp
pop
cmpsb
inc
lahf
or
leave
cmp
sub
xchg
sbb
pushf
sbb
mov
cmovbe
add
jns
dec
mov
mov
jmp
insb
pop
xchg
adc
inc
mov
and
lret
mov
xchg
push
xchg
int3
es
scas
dec
out
mov
ror
inc
ja
test
add
xor
mov
cmp
add
sub
push
xchg
mov
sub
sbb
lock
je
xor
shlb
insb
out
sti
insb
cmp
or
adc
push
jmp
sub
in
mov
or
shrl
js
adc
adc
jle
pop
dec
or
subl
int3
add
adc
sub
faddp
xorb
mov
push
add
jmp
sub
sub
clc
rorb
add
push
or
pop
addr16
lcall
jno
nop
sbb
insb
andl
jg
lock
adc
mov
cmp
pushf
xchg
icebp
jo
aad
inc
cmpb
jb
in
pop
jae
imul
adc
loop
jo
mov
or
ja
add
je
fs
xchg
sbb
inc
ret
sub
rcrl
mov
mov
in
cmp
cmp
aad
dec
loopne
lahf
add
mov
xchg
mov
scas
sbb
fnsave
test
jo
add
push
jb
cmp
adc
fidivrs
add
add
pop
jns
xchg
out
inc
addl
iret
pushw
push
addb
or
icebp
jnp
push
xorb
add
or
add
bound
push
and
lahf
dec
mov
cld
fcmove
imulb
lock
stos
std
push
std
into
pop
faddl
out
sahf
or
fcmovne
mov
lret
sbb
pop
incb
mov
adc
xorb
pop
ret
std
push
in
and
or
sbb
jo
jge
sbb
addl
nop
push
mov
push
insb
pop
mov
adc
inc
xor
mov
push
sub
pop
out
sub
pusha
test
gs
mov
cmpsl
dec
dec
jecxz
pop
into
loopne
fs
jne
inc
cwtl
sub
lea
into
pop
les
fdiv
add
sub
sti
test
dec
push
add
jle
push
jmp
andb
popf
sbb
popa
mov
aas
xchg
and
push
lea
adc
inc
add
inc
hlt
mov
sub
xor
fwait
xor
cmp
push
out
and
adc
jo
inc
stos
insb
popa
pop
ret
push
mov
rolb
je
mov
dec
dec
add
jmp
sub
adc
test
mov
pop
xchg
cwtl
dec
loop
mov
adc
aas
ja
add
inc
fdivl
inc
xor
xor
add
xchg
loope
cmpsb
es
das
adc
movzwl
mov
insb
pop
lcall
cmpsl
imul
adc
lods
cmp
loop
inc
pop
sub
outsb
xchg
pop
jecxz
out
mov
sbb
dec
lock
push
add
or
cmp
mov
jbe
xchg
sbb
jne
fs
add
jne
ret
insb
js
push
sbbb
push
inc
es
ja
add
push
scas
test
cltd
inc
inc
dec
fiaddl
cmp
mov
cmp
inc
test
sbb
mov
push
cltd
jb
sbb
inc
dec
insl
jle
mov
pop
xor
test
adc
adc
rolb
or
xor
pop
mov
push
push
call
pusha
lahf
sub
out
add
add
lret
mov
cmp
adc
addr16
add
push
aam
cmp
sbb
mov
pop
leave
test
enter
mov
pushf
pop
enter
fistpl
adc
imul
sub
mov
popa
das
xchg
ret
inc
js
arpl
inc
rcr
or
test
or
fwait
push
push
mov
push
out
mov
push
sub
setno
into
dec
daa
adc
pop
push
enter
xchg
insb
insb
and
fisubrl
arpl
and
in
add
sbb
inc
add
adc
movsl
inc
or
les
rcrl
das
clc
das
js
sub
testb
cmpw
jle
data16
adc
sbb
jecxz
jl
pop
ret
and
jecxz
sbb
in
or
imul
scas
and
jnp
mov
or
add
and
xchg
rcll
or
adc
or
test
inc
call
sbb
inc
xchg
jo
rolb
loop
mov
push
push
xor
clc
cmp
lods
xor
es
rcl
sub
jmp
fsubr
xlat
adc
movsl
mull
enter
push
fldcw
jmp
outsl
pop
out
outsb
add
dec
inc
xor
lods
outsb
aaa
jb
mov
mov
push
mov
fucomp
sbb
cld
dec
call
arpl
fs
add
dec
fwait
jne
cmp
cmp
or
push
jb
sub
out
adc
mov
or
push
pop
enter
inc
adc
pop
and
inc
push
mov
xchg
push
lret
mov
out
test
mov
enter
add
and
jnp
sub
cmp
daa
inc
sub
mov
pop
mov
pop
inc
cmp
sub
lcall
and
aam
jecxz
and
or
cmp
push
cltd
cmp
jnp
jnp
or
adc
mov
in
xchg
push
or
adc
je
adcb
lret
arpl
add
in
in
push
lds
out
mov
inc
inc
aas
test
add
lret
jne
sbb
lock
mov
sbb
inc
mov
sbb
dec
add
jne
jne
and
insl
lmsw
loopne
xchg
movb
sbbb
andb
xabort
pop
ret
aad
outsl
les
or
shrb
pcmpgtd
mov
cwtl
pop
aas
lcall
bnd
add
es
jle
imul
or
add
dec
es
jge
je
pop
pop
data16
mov
inc
sbb
dec
or
in
pop
add
incl
add
imul
push
cld
inc
xor
pusha
adc
push
inc
inc
pushf
and
loope
inc
das
bound
push
cmp
jg
mov
inc
jo
daa
adc
and
rclb
es
ret
insl
aaa
nop
adc
dec
je
dec
or
sarb
inc
stc
rcrb
push
push
fcmovnb
mov
sbb
add
repnz
mov
jle
mov
pop
inc
or
fwait
je
loopne
or
inc
iret
jne
mov
inc
and
stos
lea
add
or
cs
xchg
or
push
xor
pop
push
mov
loope
shll
mov
dec
popa
andl
or
ud2
adcl
mov
jbe
xor
inc
adc
mov
test
jnp
mov
imul
and
inc
fadd
jmp
sbb
mov
push
sbb
fsub
pop
push
fdivrl
adc
test
dec
lret
cmpsl
inc
jb
dec
out
cli
push
dec
adc
jne
stos
sbb
lret
cmp
sbb
outsw
ja
mov
gs
xor
sub
fs
idivb
loop
mulb
mov
je
lock
dec
daa
xchg
sub
and
test
fisttps
xchg
inc
mov
shrl
sub
mov
or
loopne
mov
dec
pop
cld
inc
cli
add
cmpsb
test
or
pop
inc
xlat
inc
adc
clc
pop
xor
fdiv
sbb
inc
jle
dec
cld
test
loop,pn
loopne
mov
pop
push
sub
mov
push
hlt
or
dec
dec
les
or
add
sub
inc
or
mov
loopne
mov
pop
adc
or
ret
insl
adc
and
inc
cld
test
mov
ja
add
dec
xor
das
jge
cmp
pop
dec
and
loope
xchg
ficompl
addb
adc
inc
leave
and
lret
daa
mov
and
call
clc
fstl
inc
pusha
loop
xlat
xlat
icebp
dec
sbb
lock
push
cmp
inc
and
mov
std
dec
jge
pop
cmpl
pop
pusha
ret
fs
push
or
xor
fmull
adc
inc
cmc
xchg
bound
test
push
pusha
push
jmp
pusha
add
mov
sub
insb
mov
sub
xchg
mov
and
inc
push
rorb
or
mov
inc
outsb
and
popa
push
or
xor
es
insb
and
jno
add
xchg
mov
cmp
mov
push
test
mov
pop
aaa
sub
incb
sbb
outsb
pop
cmpsl
icebp
dec
cltd
adc
js
add
cli
jmp
fcompl
xor
fiadds
dec
lods
ja
mov
xor
jo
fstpt
js
insl
jg
mov
rolb
std
fldt
jg
mov
jns
test
push
add
insl
cmp
mov
movsb
decb
add
gs
sahf
xchg
adc
lock
and
fwait
push
ret
dec
sub
sub
push
jns
xor
push
ds
push
mov
in
add
call
testb
or
bnd
in
aam
int3
adc
les
push
pop
test
sbb
es
dec
and
sar
stos
dec
subb
call
movsb
dec
inc
mov
jo
adc
pop
jp
or
push
popa
adc
jo
sbb
add
jmp
sbb
pop
sbb
jae
rorb
daa
inc
mov
pop
mov
add
aas
je
adc
ja
pop
xor
pop
gs
jbe
jbe
les
xchg
test
mov
mov
jg
push
push
pop
aas
push
ljmp
inc
add
sub
mov
mov
lods
adc
adc
adc
xor
ds
mov
and
daa
jmp
mov
and
enter
jne
or
rcl
push
loope
imul
out
pop
rclb
cmc
push
mov
push
dec
cmpb
sub
and
aam
andb
xor
mov
std
add
or
push
ud0
inc
movl
adc
mov
and
popa
mov
andl
push
pop
das
and
das
je
pop
shrb
pop
jmp
adcb
mov
adc
mov
test
lock
sub
add
or
bound
push
shr
ds
dec
add
addl
sbb
and
jmp
or
mov
push
xor
sahf
mov
in
repz
sbb
and
shl
movlps
pop
push
dec
add
movsl
jp
jmp
sbb
jle
jae
pop
sbb
je
js
and
out
icebp
sarl
add
call
movsb
mov
push
lcall
cmp
mov
push
xor
jne
mov
rcrb
in
adc
mov
ficomps
dec
dec
lcall
pop
jo
mov
mov
jb
adcb
and
sub
inc
rorb
test
es
mov
shr
cmpsb
fldl
fldenv
and
sbb
pop
or
icebp
inc
repnz
inc
pop
push
incl
cmp
push
loopne
outsl
fwait
cld
rolb
les
mov
cmc
jo
cmp
repz
sbb
movl
mov
add
out
or
mov
inc
sbb
or
test
ss
mov
mov
pusha
and
xor
xchg
and
into
xchg
cwtl
or
pushl
cmp
mov
inc
jecxz
inc
jmp
sub
sbb
test
outsl
mov
pop
push
movb
aas
ds
int3
push
cltd
cli
sbb
test
lret
loope
outsl
mov
imul
pop
xor
faddl
sub
dec
pop
mov
in
les
push
jne
enter
pop
pop
adc
cmpsl
cwtl
gs
or
ds
xor
icebp
mov
inc
jae
rclb
cli
add
addl
inc
repnz
jno
push
or
push
aad
push
add
sub
and
nop
dec
cmp
mov
jge
enter
push
mov
outsl
sbb
xor
bound
bound
pop
mov
lods
lahf
sbb
or
pop
mov
inc
pop
add
clc
arpl
cmp
loop
addl
sub
adc
lahf
pop
dec
fnstsw
or
lret
cmp
cltd
adc
fs
and
ja
pop
mov
loop
dec
or
or
pop
adc
inc
mov
pop
inc
adc
xchg
xlat
push
adc
pop
lods
jge
sbb
fcoml
adc
sbb
aaa
vsqrtsd
mov
dec
mov
enter
ret
adc
inc
aaa
je
rcrb
lock
fwait
and
mov
sbb
jne
add
leave
sub
mov
inc
sub
jmp
pop
jne
nop
inc
mov
popf
add
roll
jnp
jecxz
push
or
add
daa
xchg
divb
add
jns
in
jmp
sub
in
mov
jne
jg
and
in
hlt
lods
stc
aad
lret
jne
mov
sbb
fsts
adc
pop
or
insl
jb
inc
or
inc
adc
xchg
push
dec
sub
pop
sub
cmp
pushf
roll
mov
jl
pop
mov
jb
sub
add
ficoml
or
repz
add
mov
pop
hlt
dec
cmp
ja
sahf
out
lods
mov
sbb
mov
mov
jae
push
push
sbb
fildl
push
rolb
cmp
lret
sub
gs
mov
dec
imul
pushf
xchg
sub
adc
or
mov
pop
jb
xchg
and
sub
add
add
out
cs
xchg
sbb
jbe
out
push
push
aas
mov
pop
and
shrb
push
movsb
outsb
sub
push
mov
outsb
add
jmp
sub
or
sub
ret
xchg
xor
popa
imul
sbb
add
jmp
imull
test
add
sbb
scas
dec
icebp
orl
pop
xchg
push
insb
push
sbb
push
ret
mov
or
je,pn
data16
repz
cmp
or
xchg
xor
ss
je
out
dec
push
ja
shl
and
scas
daa
adc
stos
mov
js
js
rcrb
mov
add
add
and
lock
fiaddl
pop
shrl
movsb
test
and
ds
lret
mov
add
add
push
xchg
or
arpl
ror
adc
enter
cltd
aas
test
cmp
test
test
xchg
add
enter
add
and
push
mov
mov
movsl
push
lock
sbb
imulb
cltd
sub
mov
add
pop
pop
jne
std
cltd
popa
test
and
xorl
movsb
shlb
bound
int
dec
cmp
xor
jg
mov
mov
jne
jb
mov
adc
or
jecxz
ud2
gs
pop
rcr
sbb
cs
cmp
xchg
je
add
jbe
push
add
push
enter
jge
adc
sbb
lea
or
jbe
sarl
iret
mov
add
sahf
add
aas
lods
insl
or
incl
dec
or
mov
jb
fisubrl
lock
std
or
into
pop
inc
dec
cmpsl
inc
pushf
cmpsl
jne
xchg
inc
add
or
pop
cmp
sub
inc
mov
sbb
ret
push
sub
push
popa
jne
mov
add
lods
add
cmp
mov
int3
loope
in
pop
fistpl
jno
jno
adc
cmp
dec
in
aas
sub
adc
shlb
popa
mov
push
out
nop
mov
dec
cwtl
sub
inc
and
loopne
enter
pop
adc
add
orl
add
jb
pop
dec
and
cs
imul
cmp
add
push
inc
insl
decb
nop
xchg
sbb
adc
mov
out
cmpsl
mov
jge
dec
daa
push
push
clc
es
rorl
testb
xor
call
loopne
movsl
jne
ret
push
mov
jne
cltd
push
lock
es
cs
enter
aaa
in
and
xor
das
fldl
repz
movb
sbb
dec
fmul
enter
andb
mov
sub
sub
loope
lods
test
push
mov
add
inc
or
shlb
ds
in
clc
and
adcb
adc
aam
push
repnz
xor
xor
imul
inc
fs
sub
es
or
and
sarl
mov
sub
pop
add
add
fdivl
add
jne
push
push
adc
jo
rorb
fiadds
cltd
or
inc
insl
xor
dec
adc
daa
xchg
test
loopne
sbb
cmc
push
mov
int3
inc
out
inc
mov
pop
add
lea
je
cltd
mov
lea
and
add
or
xchg
cmc
mov
xchg
dec
insb
pusha
shll
test
xchg
xchg
inc
fistl
inc
or
inc
push
push
adc
add
dec
and
adc
dec
sub
in
sub
cli
rolb
enter
dec
rolb
sti
lcall
adc
dec
lods
sbb
xor
adc
sbb
adc
push
sbbb
scas
dec
les
mov
cmp
mov
push
ret
jmp
pop
lods
out
cmp
xchg
push
add
jmp
cltd
adc
jmp
lods
rcll
mov
repnz
sub
jmp
add
add
aas
imul
ret
add
or
sbb
fidivs
and
push
test
je
add
sbb
adc
xchg
mov
lahf
loop
jo
cmc
push
and
daa
sbb
int
mov
jp
call
flds
xor
pop
mov
pusha
jl
mov
cli
or
xchg
sbb
xchg
adc
mov
mov
or
sub
ret
or
cmpsl
inc
outsl
sbbb
mov
shrb
or
mov
xor
and
pop
add
push
fnstcw
mov
and
pop
add
popf
and
and
pushf
int3
mov
pop
adc
shlb
adc
sub
inc
ds
scas
addl
mov
add
or
add
inc
mov
inc
mov
arpl
je
orl
test
inc
fsts
ds
add
fsubs
pop
dec
fisttpll
dec
shll
dec
sbb
xor
or
dec
mov
les
sub
dec
inc
and
mov
pop
sbb
push
push
popa
dec
cmp
inc
xor
inc
xor
push
inc
xchg
adc
mulb
and
mov
inc
call
into
loopne
xchg
adc
sub
rolb
xchg
je
jns
mov
mov
nop
call
sub
add
mov
pop
adcl
das
inc
nop
adc
test
dec
add
sbb
int3
lea
js
aam
mov
imul
mov
sahf
xor
es
or
or
cld
fidivrs
inc
je
and
mov
movsb
es
aas
push
es
scas
xor
cwtl
data16
clc
push
daa
mov
and
mov
xlat
or
xchg
pop
pusha
pop
daa
mov
push
sub
fistpl
xor
js
add
mov
add
sub
and
push
pop
dec
cmp
add
pop
adc
notl
and
xchg
stc
cs
nop
pop
xor
aas
xchg
cmp
push
mov
aas
in
or
sahf
out
adc
sbb
xchg
or
pop
inc
push
and
push
sbb
ret
stos
mov
loopne
add
mov
negb
inc
mov
inc
add
pop
cwtl
pop
arpl
dec
adc
mov
dec
sbb
ja
repnz
pop
mov
mov
mov
inc
sbb
xor
or
add
sbb
rcrb
inc
sti
jle
sbb
stos
and
adc
fwait
cmp
stc
mov
add
cmp
sahf
js
cs
cmp
or
clc
cmpb
loop
js
and
call
and
dec
xchg
or
or
das
xchg
roll
icebp
pop
outsl
rol
push
repz
adc
push
mov
jno
les
or
stc
imull
inc
int
sub
adc
sbbb
lods
int
pop
jle
lret
inc
arpl
mov
pop
push
int3
dec
add
cmp
inc
gs
or
imul
sub
push
xchg
and
xor
sub
fs
sbb
cmp
leave
inc
mov
sub
outsl
mov
adc
aad
pop
fadds
push
sub
adc
pusha
pxor
jmp
push
ljmp
pop
ret
inc
or
inc
jp
movsb
repz
test
andl
xchg
out
push
movsb
jbe
clc
and
sti
xchg
insb
pusha
sbb
inc
dec
nop
mov
bound
adc
loope
adc
inc
out
xchg
add
xchg
sub
or
xchg
ds
iret
gs
test
in
pop
lock
mov
daa
into
fdivr
jne
stos
push
dec
xchg
xchg
push
pop
pop
xchg
xor
insl
popa
daa
test
or
test
icebp
add
jne
push
fwait
cmp
xor
add
add
cmp
dec
orb
fld
negl
je
inc
loop
loop
and
sbb
sub
das
cltd
enter
lea
cmp
inc
push
and
icebp
js
push
shlb
pop
jae
mov
test
mov
mov
xchg
or
mov
push
ret
insb
js
enter
or
sbb
sti
dec
add
sub
sub
inc
inc
pop
bsr
jo
ret
pop
sbbb
imul
dec
and
xchg
and
in
test
push
and
rcrl
or
movsb
leave
dec
mov
dec
and
xchg
inc
test
mov
mov
hlt
pop
sub
sarb
aam
mov
daa
jae
decb
leave
sub
inc
xor
xchg
test
movsb
xor
inc
adc
xor
nop
movsb
and
sbb
mov
or
jl
xchg
lock
push
mov
addb
or
sbb
push
and
shr
sbb
scas
test
cmc
mov
push
orb
and
lahf
jge
leave
push
negb
gs
jnp
orb
adc
sub
mov
add
es
and
or
push
lock
jmp
dec
and
mov
mov
inc
cmp
fs
xor
push
loope
cmp
ja
pop
pop
pop
lahf
dec
cwtl
mov
scas
jp
push
mov
inc
sbb
push
cwtl
ret
add
inc
xchg
mov
daa
add
mov
pushf
xor
and
rcr
lcall
dec
xchg
movsb
xchg
daa
adcb
mov
mov
or
and
fsubrs
sbb
les
cmp
add
push
inc
xor
dec
sub
rol
sub
or
push
clc
jecxz
add
iret
xor
stos
xorl
dec
and
enter
int3
lret
shrb
and
mov
mov
jmp
data16
adc
pop
dec
fdivrp
or
xchg
data16
ror
mov
push
insb
pop
sbb
jmp
in
pop
aaa
xchg
xorb
push
xchg
adc
xchg
mov
clc
and
sbbb
add
dec
xadd
jne
dec
xor
ret
mov
dec
jo
mov
negb
push
inc
ss
mov
push
mov
jne
xor
sub
mov
int3
loop
shrb
std
rorb
dec
xchg
sbb
pop
fs
xchg
ja
or
adc
movsb
loop
or
sub
andl
loopne
icebp
jecxz
repz
mov
mov
pop
dec
lahf
sbb
dec
test
cmp
sub
mov
pop
inc
inc
cmp
and
cmp
push
stos
pop
lods
into
es
or
movsl
dec
sub
add
or
push
sbb
into
movb
fcompl
test
sub
adc
cmp
in
push
test
xor
ss
das
sbb
nop
movsb
dec
lcall
sub
outsl
out
loope
and
popf
inc
add
in
stos
jno
adc
adc
sub
insb
mov
xchg
loope
jns
sbb
pop
sbb
ds
mov
xchg
xor
enter
push
mov
mov
or
inc
add
fdivr
int3
add
pop
xchg
loope
xor
cli
pop
mov
dec
int3
cmpsl
jge
lock
orl
add
cmp
and
roll
les
jl
push
jg
fstps
pop
sarl
mov
fadds
sbb
test
mov
popa
cmpsb
xchg
jbe
ljmp
stos
ficoms
adc
sub
dec
xor
sub
imulb
ds
or
mov
pop
test
mov
xorl
insb
push
pushf
in
cmp
imul
loopne
adc
pusha
xchg
inc
cmc
jne
xor
js
add
inc
jnp
cwtl
jo
pop
lcall
inc
clc
dec
cmpsb
jnp
mov
xchg
and
ret
mov
inc
push
inc
lcall
push
enter
out
push
mov
int3
lahf
push
out
rcll
adc
inc
sbb
enter
sbb
fmuls
xor
jecxz
pop
cmp
imul
loope
mov
jmp
loopne
and
adc
pop
dec
clc
and
pop
mov
sarl
xor
enter
or
in
loopne
sbb
shlb
insl
mov
stc
xadd
loope
adc
push
pop
ret
int3
aaa
in
dec
ret
mov
jg
adc
xchg
shlb
dec
mov
lds
fcomps
sbbb
movsl
pop
push
or
in
movsbl
pusha
or
and
sub
fs
adc
pop
mov
xor
add
inc
aam
mov
push
fdivrs
and
aam
leave
fsubl
loopne
push
xsaves
addl
sub
xchg
pop
sbb
xchg
sub
or
mov
add
push
adc
jo
sub
lods
jnp
inc
mov
or
fiaddl
out
add
push
movsl
hlt
sub
sbb
and
push
mov
add
psubusb
inc
jno
fdivs
adcl
cmp
pop
inc
orb
jno
pop
and
jbe,pt
add
sbb
push
jo
cmp
jbe
and
mov
mov
dec
ljmp
jne
rcrl
mov
push
mov
mov
mov
push
sahf
std
and
mov
add
jb
add
jmp
cli
push
aad
xchg
push
scas
add
cmpl
test
fcoms
roll
shll
es
sub
fistpll
cmp
sbb
mov
push
jns
shlb
mov
aam
adc
les
xor
mov
pop
xor
test
xor
xchg
cltd
sbb
or
scas
ret
icebp
push
or
mov
cmp
fldl
or
adc
mov
test
lahf
mov
rolb
int3
adc
xchg
les
adc
jo
sub
movb
imul
fdivrl
pushw
ljmp
jp
jmp
sbb
pop
aaa
addr16
and
je
fistl
add
adc
addl
bound
into
pop
and
xor
popf
dec
je
push
adcl
push
inc
lock
jmp
arpl
or
pop
add
adc
dec
ffree
mov
sbb
cwtl
ret
inc
mov
jo
push
dec
push
fnstenv
and
pop
xchg
mov
sbb
fstl
repz
and
les
arpl
sahf
ss
xor
in
lea
in
pushf
jge
adc
dec
or
test
xor
push
ret
call
test
daa
and
mov
fs
mov
mov
mov
cmpsb
jp
jb
scas
cwtl
or
dec
add
test
shlb
xbegin
jo
inc
cmpb
loop
cld
adcb
in
jnp
mov
pop
jmp
lods
sti
pop
cmp
mov
fstpt
lock
test
push
inc
dec
inc
inc
in
rolb
cmc
add
jo
ja
les
sub
pop
fcmovnb
mov
mov
orl
push
sbb
mov
add
aam
mov
xchg
pop
pop
push
push
sub
xchg
adc
mov
push
and
and
dec
popa
pop
inc
inc
mov
add
rorl
jbe
or
sub
lret
fs
adc
jbe
pop
inc
ja
push
dec
and
dec
pop
and
das
mov
pop
dec
repnz
inc
xchg
insb
dec
push
adc
mov
sbb
movsb
adc
adc
out
adcb
or
adc
sub
mov
loopne
mov
xor
push
add
ja
sbbb
lods
dec
xchg
and
cmp
enter
cld
pop
xlat
daa
adc
push
jno
and
test
in
das
ret
mov
push
inc
lock
je
mov
dec
or
les
and
call
les
adc
push
dec
add
addr16
add
adcb
out
xor
mov
xor
and
pushf
mov
cmp
ret
jne
ficoml
mov
in
in
jp
cmpsl
or
sub
sbb
or
push
movsb
push
jecxz
push
add
push
push
adc
inc
test
xchg
mov
or
push
and
push
xor
insl
xor
inc
dec
jecxz
fisttpl
cmp
adc
into
clc
in
cmp
setno
xlat
movsl
or
inc
fs
pushf
shll
pop
lods
push
push
jno
outsl
push
aaa
pop
xor
xorb
add
sbb
js
adc
cmp
jne
das
mov
add
aas
adcl
popa
repnz
dec
mov
out
popf
aam
xchg
fsubr
push
andl
jae
das
stos
fwait
push
inc
push
mov
add
outsb
mov
sti
push
in
in
ss
or
roll
jg
dec
inc
jg
xor
or
dec
es
or
into
test
push
sub
add
dec
jnp
jmp
dec
xchg
cs
jo
mov
cmp
pop
inc
popa
mov
add
pushf
ss
push
mov
sub
cld
xor
or
enter
mov
inc
outsb
dec
push
jo
lock
xchg
lock
pop
popa
lock
pop
inc
aaa
add
adc
nop
daa
pop
nop
addr16
inc
pop
in
mov
mov
inc
jp
js
xlat
cmp
sub
and
sbb
inc
jp
push
add
shrb
and
adc
xchg
daa
pop
daa
andb
dec
lcall
pusha
sub
pop
pop
push
iret
movl
push
or
and
xchg
adc
frstor
or
mov
xor
inc
sub
cmp
inc
push
add
cmp
or
jge
cmpb
test
inc
or
sub
push
push
test
inc
xor
rclb
call
mov
inc
add
xchg
insb
lock
stos
sbb
popa
int
adc
add
or
push
xchg
call
inc
add
inc
add
xchg
pusha
adc
std
sbb
cmp
add
je
push
into
lods
call
lock
mov
push
sbb
shlb
int
pop
fistps
pusha
aaa
enter
adc
cmpsl
pusha
sub
inc
adc
push
cmp
adc
fadds
sarb
das
add
pop
or
adc
or
lret
subb
test
ja
push
add
cvtdq2ps
mov
fidivl
xor
xor
add
adc
std
cmp
inc
data16
dec
sbb
sbb
ret
inc
or
dec
lret
adc
mov
ret
mulb
jl
sub
pusha
push
push
jnp
lock
loopne
inc
jmp
cmpw
xchg
gs
mov
iret
daa
push
pop
cmpsb
mov
nop
or
jl
or
cwtl
or
aaa
or
push
adc
pop
outsl
cmc
xor
scas
aaa
movb
push
seta
add
cmp
clc
mov
fwait
dec
movb
mov
shr
mov
fstpl
mov
xchg
lea
jbe
subb
aad
sbb
push
je
xchg
sarl
js
cmpb
movsl
pop
in
and
push
adc
xor
clc
fcoms
in
jb,pt
jecxz
xchg
jb
mov
sub
push
inc
lahf
pop
lret
sbb
jnp
mov
insb
push
mov
popa
adc
int
fadds
lds
push
adc
jo
xor
inc
cmp
mov
shlb
stc
sub
dec
push
sarb
adc
cs
sarb
mov
hlt
in
lcall
push
mov
pushf
rclw
push
scas
sub
rclb
aam
cmp
mov
dec
call
in
xchg
sarb
mov
jecxz
out
cmp
or
or
push
fs
push
cmp
mov
popa
and
or
cmp
push
fwait
movsl
ret
mov
rcrb
pop
cld
rcrb
push
mov
push
iret
shll
sbbb
mov
push
enter
mov
and
aaa
inc
repz
and
arpl
jae
push
mov
outsl
or
mul
sbb
fwait
and
out
sub
sub
xlat
and
addr16
inc
sbb
test
add
xchg
mov
push
fs
sbb
and
or
pop
into
cmp
push
std
inc
and
sub
fisttps
sbb
inc
es
enter
pop
lahf
out
pop
das
xchg
call
xor
mov
adc
test
in
ljmp
dec
pop
adc
mov
cs
dec
push
jmp
xchg
jne
mov
push
ds
jo
inc
mov
daa
in
sbb
sbb
and
ja
pop
fldcw
stc
xlat
inc
push
cmp
push
je
mov
xlat
add
mov
test
insl
pusha
jne
insl
xchg
cli
in
mov
jmp
inc
bound
mov
mov
cmp
pusha
push
shrl
cwtl
xchg
and
or
shrb
fs
add
lret
push
inc
cmp
xchg
enter
insl
push
sti
and
or
iret
inc
sub
and
or
outsl
xchg
sbb
aad
and
mov
mov
pop
or
xchg
and
leave
mov
and
ficompl
jecxz
pop
dec
insb
or
pop
std
pop
mov
into
xor
addb
fistpll
jle
push
jp
push
push
xor
push
dec
nop
adcb
in
rcrl
jae
in
add
jg
call
std
adc
push
in
mov
inc
and
mov
inc
and
sbb
or
subb
clc
push
add
and
pusha
loope
adc
push
cmp
popa
push
jmp
mov
sahf
inc
mov
ss
or
add
mov
lret
rcrb
xor
syscall
add
sub
lcall
sbb
iret
dec
push
mov
add
push
sub
ja
pop
das
push
xchg
sbb
xor
sbb
jb
sbb
push
push
leave
jae
xor
sbb
dec
xchg
push
inc
inc
fstpt
fnstcw
adcl
jns
aas
sahf
out
add
adc
xchg
adc
js
inc
jo
aaa
or
push
and
add
ret
vmulps
dec
mov
orb
mov
or
and
imul
ss
je
pusha
add
movsl
pop
inc
push
push
add
and
cmp
incb
adc
lds
es
jne
push
cmp
dec
xchg
add
lcall
mov
and
aam
mov
pop
or
push
subl
fstl
sub
xor
mov
xor
add
adcb
push
in
enter
sti
pusha
sub
insl
pusha
or
or
sub
insb
repnz
lret
shlb
or
dec
xchg
or
push
insl
cmpsl
push
fsubl
ret
lock
int3
enter
es
scas
cmp
lcall
shrb
leave
insb
jnp
aas
mov
sub
lea
mull
dec
jle
xor
xchg
or
stc
js
enter
xor
jp
loope
aaa
and
cmp
inc
mov
fadds
fstps
dec
pop
movsb
add
adc
sub
push
addr16
or
inc
pusha
inc
lret
shlb
xor
mov
sarb
pop
cli
enter
rolb
mov
inc
movsb
imul
mov
push
push
mov
es
jns
add
xchg
ret
movsb
cmp
loope
addr16
and
cmp
inc
jp
mov
cmpb
ss
cmp
nop
mov
clc
pop
adc
push
cmp
sbb
daa
inc
scas
stos
jns
rcpps
jp
nop
mov
fistl
js
add
cmp
adc
xchg
xchg
jb
out
push
out
inc
xchg
jo
push
cwtl
insb
push
loope
cmp
and
nop
cmpsl
inc
fistl
pusha
fistl
sbb
jne
push
pop
push
gs
ljmp
testb
in
or
dec
mov
imul
dec
cmpl
mov
sbb
inc
movsb
sub
dec
mov
mov
cwtl
pop
cmpsl
aaa
mov
or
aaa
xor
popf
dec
cmpb
movsl
setg
and
inc
or
aad
or
aad
iret
sarb
mov
adc
or
push
addr16
pop
decl
dec
jmp
gs
call
xorl
ud0
add
mov
loope
add
fs
cmp
jg
push
push
add
mov
add
jle
inc
inc
pop
adc
mov
jne
pop
stos
inc
inc
inc
xchg
sti
push
adc
or
cmp
fsubs
loopne
mov
mov
inc
push
mov
sahf
pop
inc
mov
aad
push
or
addl
loope
andb
inc
nop
dec
add
push
pop
fmul
sbb
repz
or
xor
and
jnp
pushf
test
xor
mov
dec
add
and
xorl
test
cmp
sbb
sub
imulb
je
mov
pop
inc
rcr
jb
lea
mov
or
xor
push
enter
dec
cmp
shlb
add
test
dec
inc
fdivr
imul
xchg
inc
push
test
or
dec
push
sbb
por
add
adc
adc
inc
out
aas
jns
add
push
inc
test
push
or
xchg
div
push
insb
mov
and
orb
add
add
push
pushf
and
das
rolb
adc
and
jns
sub
mov
fdivrs
or
test
dec
sub
sbb
adc
pop
mov
add
gs
push
and
mov
xchg
cmp
cwtl
shlb
sub
mov
mov
les
test
dec
cmp
mov
aad
mov
pop
pop
lcall
int3
sarb
rclb
in
cmpsb
dec
and
sbb
icebp
movsl
aas
dec
dec
push
adc
push
sub
and
dec
cmp
incb
add
xor
les
ljmp
int
xchg
insl
sbb
fwait
dec
sbb
inc
jb
cmc
sbb
pusha
mov
mov
pop
dec
jp
add
sbbb
inc
and
rcrb
or
nop
sbb
insb
push
rolb
dec
imul
or
cwtl
in
inc
jmp
ja
push
or
jmp
lret
jne
inc
ret
add
pop
addr16
scas
inc
add
push
inc
insl
adc
int
and
inc
pop
and
ja
orl
loope
int3
sbb
sbb
and
jae
nop
int3
cmc
add
jb
insl
shrb
shl
cmp
cli
fsts
inc
or
mov
add
dec
mov
inc
xlat
popa
rorb
nop
in
add
and
jmp
dec
test
fcom
loope
mov
mov
in
test
add
in
adc
mov
jle
and
mov
xor
pop
sub
or
xchg
lds
jo
mov
pop
jo
int3
subl
add
jmp
cmp
and
mov
pushf
push
ret
out
rclb
lds
push
sti
cltd
cmc
imul
cmp
sbb
mov
call
fistps
testl
pop
fnstcw
repz
mov
dec
negl
mov
decl
data16
mov
or
xchg
daa
sub
les
add
sbb
fsubrl
cmp
push
inc
shrl
mov
sub
popl
addb
gs
add
xor
and
jmp
add
add
jne,pn
rol
js
fbld
sub
orb
ss
pop
sbb
xor
add
jmp
pop
push
ja
or
loope
daa
arpl
insl
push
cmp
popf
inc
pushl
mov
outsl
insl
loopne
pop
adc
mov
mov
cltd
cltd
sub
ret
adc
sub
sub
mov
jmp
dec
jge
scas
inc
aaa
push
jge
popa
lahf
aam
sbb
dec
or
adc
sahf
pop
negb
imul
fucomi
aaa
add
cmp
jle
aas
int3
and
fwait
push
sti
inc
into
sbbl
push
or
pusha
xchg
fiaddl
pop
mov
inc
popa
insw
add
test
dec
ret
negl
adc
push
aam
das
jae
push
pop
lods
push
idivl
fadds
nop
pushf
hlt
xchg
lock
adc
cmovg
push
ret
cmp
enter
pop
shufps
sahf
push
mov
test
adc
xchg
xchg
shlb
mov
lea
ret
and
popa
jecxz
mov
sarb
dec
ds
arpl
out
xor
cmp
jne
add
push
adc
xchg
mov
or
clc
sahf
xchg
pop
lret
stc
lods
in
and
rorb
xchg
ret
mov
je
jp
fwait
dec
mov
or
dec
sbb
xchg
shll
xchg
or
push
cmp
stc
sub
adc
push
rcr
fsubrl
fcmovnu
add
das
mov
mov
xchg
add
mov
xchg
addl
lcall
hlt
out
and
sahf
adc
jns
int3
add
mov
push
xor
in
or
loopne
es
sub
adc
enter
cmpsb
mov
mov
sub
dec
bound
sub
push
ds
xlat
mov
inc
testl
jp
lcall
ss
jg
cmpsl
enter
je
mov
and
jmp
cmovl
cwtl
sti
popf
push
pop
and
loope
in
sbb
push
adc
outsb
mov
dec
movsb
mov
sbb
pop
add
fnsave
dec
or
jno
jmp
jl
idivl
cmp
lcall
push
mov
pop
inc
or
fld
sbb
or
pop
and
or
mov
movsb
mov
mov
cmpsl
pusha
jl
add
cmp
jge
outsb
in
hlt
lock
pop
es
jp
mov
and
ror
or
lea
add
js
push
dec
jecxz
push
add
movsl
pop
pop
or
rcrl
add
popa
push
dec
iret
daa
push
nop
ret
stc
and
iret
mov
fidivl
call
orb
loopne
push
jbe
pop
je
pop
fs
int3
ret
sub
adc
out
adc
fiadds
imul
xor
dec
dec
pop
fcoml
sub
data16
ljmp
pop
js
fidivrl
add
add
xor
insb
add
cltd
pop
in
or
cmpl
mov
ret
xor
clc
mov
movsb
test
pushf
outsl
pop
add
dec
in
movsl
mov
mov
mov
mov
out
dec
shlb
insl
inc
ret
sti
mov
inc
mov
cs
xor
add
imul
push
movb
fildl
adc
clc
clc
lock
push
imul
nop
popf
dec
call
fstl
pop
rorb
fmul
cmpl
mov
enter
test
lock
rcrb
add
mov
repnz
roll
rolb
push
sbb
push
mov
sbb
or
outsl
movb
mov
jmp
cmp
cmp
push
sbb
or
or
jge
dec
inc
les
sbb
xchg
outsl
rorb
dec
lcall
daa
push
inc
xor
add
inc
inc
cld
mov
adc
add
or
or
jb
pusha
add
mov
cmp
mov
and
mov
or
roll
daa
or
mov
adc
mov
lcall
jbe
insl
outsb
pop
out
scas
add
sarb
scas
adc
loopne
pop
mov
testl
or
jae
scas
mov
push
and
jle
adc
jmp
sbb
loopne
pop
int3
add
mov
clc
mov
rol
flds
dec
stos
push
or
sbb
add
icebp
bound
mov
cld
stos
cmp
lea
add
and
mov
cmp
and
inc
lcall
or
xor
sbb
xchg
in
insl
fxch
cmp
xchg
or
xor
aam
les
sbb
bound
dec
fwait
adc
repz
jb
adc
add
xor
insb
and
mov
add
or
dec
add
xchg
and
add
dec
loopne
mov
jo
adc
pusha
lea
scas
lock
dec
sarb
inc
pop
pop
add
adc
call
adc
pop
dec
mov
orb
das
lods
insl
cmp
arpl
push
push
xchg
add
mov
mov
ljmp
push
adc
xlat
cmp
jbe
js
xor
inc
xor
in
sub
mov
push
add
nop
aam
dec
dec
pop
adc
mov
mov
cmc
fsubrl
jne
call
add
mov
sub
mov
sub
or
push
mov
mov
jne
sub
xor
push
inc
mov
add
mov
mov
jge
mov
cld
add
or
sub
sub
push
ret
add
fsubl
mov
cmp
test
int
dec
imull
jg
loopne
fcoms
push
test
hlt
dec
xor
sub
push
and
push
das
cmp
sbb
call
pop
sbb
es
mov
adc
xchg
adcb
xchg
js
js
mov
negb
rolb
push
adc
push
add
add
rclb
or
mov
sbb
adc
pushf
jmp
into
fcmove
xchg
and
jecxz
jns
test
aaa
cmp
pop
sbb
imul
xchg
fadds
dec
dec
jg
mov
jne
or
xor
inc
dec
rorl
pop
push
insl
pusha
cmp
aam
jbe
sbb
enter
and
int3
mov
les
jae
testl
and
shlb
adc
testb
pop
clc
sbb
mov
sub
int
rorb
testb
add
add
pop
xchg
fsubrs
add
sbb
or
dec
movsb
mov
mov
fwait
enter
or
inc
and
pusha
mov
sbb
sub
mov
push
enter
mov
xlat
loopne
or
insl
fs
insb
int3
xchg
add
shlb
xor
lret
clc
jecxz
inc
push
add
and
jnp
data16
or
inc
rcrb
mov
mov
enter
sbb
jne
push
inc
push
add
data16
jb
out
inc
push
icebp
lcall
sub
xorb
mov
lods
mov
iret
mov
test
and
mov
iret
shlb
stos
cmp
adc
adc
mov
lock
xor
inc
in
out
mov
fs
cmp
or
cmc
insl
dec
inc
or
in
adc
dec
rolb
fisttps
dec
mov
lods
adc
sub
cmp
enter
popl
or
inc
ja
dec
clc
lret
mov
dec
sbb
jnp
dec
mov
push
inc
popa
add
or
cmp
sti
and
push
inc
push
add
inc
adc
imul
mov
loopne
mov
and
sbb
cmp
adc
or
adc
sub
cli
dec
xor
add
mov
jne
out
add
or
in
cld
push
mov
shll
sub
daa
pop
inc
aaa
in
sarb
mov
enter
cmp
fnstenv
inc
mov
dec
orl
adc
inc
loopne
andb
movsb
jo
mov
adc
xor
call
fisttps
sub
shrl
rcll
dec
enter
call
push
int
fistps
sub
dec
sub
pusha
mov
add
mov
sub
jmp
and
add
stos
jnp
inc
or
lcall
lods
jecxz
add
mov
mov
mov
and
mov
xor
out
cmpsb
int
cmp
call
mov
cmp
loop,pt
lcall
pop
sbb
flds
cmp
mov
mov
lods
repz
xchg
dec
ljmp
loopne
push
jge
in
lock
dec
sub
add
push
repnz
cmp
pop
loope
sbb
push
add
cmp
fisubl
jg
push
scas
lret
int
out
mov
cld
push
mov
xchg
fldcw
and
mov
xchg
insb
mov
je
rorb
dec
mov
jl
or
addb
adc
mov
sub
leave
pop
loope
push
adc
push
sbb
inc
xor
pop
add
adc
xchg
or
fldl
adc
rclb
in
das
dec
cmpb
mov
mov
scas
jmp
sub
hlt
add
or
ret
xchg
lret
cld
sub
sbb
or
in
cltd
add
mov
or
and
punpcklwd
add
dec
lods
dec
lods
jl
lock
add
pop
jbe
mov
adc
jmp
inc
push
add
cmpl
add
pop
sub
inc
mov
sub
add
jbe
push
or
inc
loope
or
inc
add
fbld
sbb
jecxz
adc
imul
shll
adc
addl
clc
clc
js
sbb
or
sbb
cli
sbbl
xchg
icebp
repnz
or
and
loopne
pop
imul
adc
push
das
push
push
mov
and
mov
add
xchg
add
xchg
loopne
jbe
add
dec
jge
sbb
mov
test
lods
dec
push
int
xchg
lods
mov
push
dec
xor
clc
adc
test
clc
jge
cmp
test
loopne
insl
imul
mov
int
call
xor
sub
hlt
xor
xor
mov
mov
pop
inc
lods
test
arpl
into
adc
push
sub
mov
movsl
cli
push
jmp
setl
cmpl
les
or
lods
push
into
and
cs
sbb
enter
sub
sbb
aaa
push
es
lock
push
cs
pop
sub
jmp
add
call
mov
add
mov
push
xchg
dec
add
cmp
jb
or
mov
pop
xchg
or
pop
push
cmp
iret
fdivl
mov
dec
or
cld
push
fbstp
xchg
inc
arpl
addl
push
or
push
push
orb
fs
jle
adc
jmp
dec
mov
lock
dec
jne
push
dec
call
aas
daa
cmp
mov
mov
ficoms
inc
jbe
and
rol
sbb
test
cmp
xor
in
or
inc
pop
and
loopne
into
lock
push
hlt
rorb
jg
adc
sub
jbe
negb
loope
or
xor
in
pop
arpl
mov
sbb
dec
jnp
popa
je
std
int3
ret
cmp
push
lea
push
clc
and
fcomps
mov
jno
push
sub
push
inc
push
xchg
push
mov
sbb
sub
ret
pusha
jecxz
lcall
dec
fcmovnu
dec
cmpb
fwait
mov
inc
je
in
push
js
jne
fmuls
jbe
popa
test
pop
xchg
pop
jne
fisubs
inc
inc
faddl
sbb
inc
sbb
out
jg
not
ljmp
insb
je
loopne
ret
or
jmp
add
stos
inc
insb
shrb
psllq
inc
fildl
xchg
adc
sbb
adc
add
and
adc
xchg
push
jl
xchg
fstl
push
fldenv
sbb
add
lret
dec
xor
pop
divl
js
xor
add
cmp
rcll
adcl
lds
sbbb
jl
sub
shll
push
xor
jg
subl
filds
insb
mov
inc
cltd
aas
pop
add
aaa
and
mov
andb
dec
mov
aaa
rclb
inc
push
outsl
daa
cmp
and
shlb
cs
mov
dec
insb
dec
mov
or
add
xorl
mov
jl
jno
jns
arpl
mov
mov
cmpb
jle
adc
sbb
inc
fs
adc
adc
and
jns
mov
fistl
neg
adcb
xchg
lds
jg
adc
call
es
push
or
add
pusha
pop
ret
jmp
mov
popa
pop
inc
push
mov
jbe
pusha
les
cmc
push
aaa
add
xor
mov
fidivrs
adc
pop
mov
ret
push
add
fistps
jmp
mov
push
fwait
dec
pop
xor
and
inc
scas
xor
jl
mov
bound
inc
adc
or
pusha
xor
push
adc
adc
rcl
mov
mov
push
inc
adc
sbb
or
push
jne
ja
jmp
dec
adc
adc
push
or
fwait
rcl
jo
call
jae
jne
dec
inc
cmpsl
rorb
jnp
shlb
xor
dec
add
cmp
insb
mov
xor
or
lcall
sub
divb
push
inc
adc
jg
mov
les
sub
xor
sti
mov
add
ljmp
cmp
add
or
pop
xor
xor
test
sbb
sbb
xor
shlb
xchg
adc
and
mov
mov
and
and
pop
fcmovnbe
add
push
and
adc
aaa
int
add
cmp
insl
push
mov
jne
daa
test
jge
pop
pop
leave
pop
adc
pop
and
clc
push
push
lock
dec
push
adc
test
xor
add
outsl
leave
add
lea
jle
fcmovb
xchg
cmpsl
inc
cmp
mov
gs
add
mov
in
adc
outsb
mov
cwtl
xchg
cmp
nop
push
mov
xor
mov
js
sbb
lods
pop
mov
ljmp
mov
mov
jnp
fimull
sbb
adc
ja
jno
sbb
jp
push
test
ret
inc
sub
adc
sub
cmp
sbb
lock
loope
and
icebp
outsl
xor
pop
sbb
pop
or
pop
out
in
jo
jo
imul
jle
cmc
sbb
ljmp
push
fs
adc
push
pushf
inc
je
cmp
xor
pop
inc
aaa
push
pop
xchg
add
int
addb
push
mov
sbb
mov
lret
pop
addr16
mov
mov
or
mov
xchg
ss
or
js
je
jle
pop
xchg
mov
or
into
and
or
jge
mov
or
and
inc
sbb
lock
dec
lods
jnp
mov
push
shll
insb
xchg
out
sbb
adc
fists
sub
add
jle
push
push
mov
rorb
aam
fwait
pop
nop
mov
cmp
jns
iret
pop
sbb
orb
sub
jge
ret
add
cld
into
push
lock
or
jge
mov
mov
pop
cmp
cmp
test
jns
lret
pushf
add
or
dec
or
les
cmpb
add
insl
dec
ret
pop
loopne
lret
cmp
nop
push
jno
loope
add
mov
jo
add
fstl
jnp
cmp
mov
imul
gs
cli
xchg
out
mov
mov
add
enter
cmp
insb
sub
ljmp
lods
push
out
add
lea
sbb
push
sarl
xchg
aas
test
inc
rcrb
xchg
and
loop
roll
add
add
add
add
dec
sarl
xchg
dec
insb
sbb
xchg
adc
arpl
iret
add
push
sbb
lods
daa
insb
pop
clc
add
add
iret
adc
dec
inc
push
mov
inc
sbb
xor
adc
lock
inc
mov
mov
xor
call
aam
in
push
les
pop
xchg
pop
mov
xchg
out
lcall
xor
dec
and
add
dec
jmp
cmpl
xchg
fcom
mov
and
lock
shrl
xorl
out
push
test
mov
movsb
mov
xchg
rolb
or
roll
or
inc
fisttpl
test
subb
push
cmc
ja
sti
insl
adc
jge
add
ret
inc
lds
push
pop
in
test
je
lods
mov
pop
mov
or
pop
dec
in
inc
or
jg
lea
push
mov
adc
mov
dec
mov
mov
push
xor
or
shll
pop
xor
fsubrs
loop
sbb
dec
pop
xchg
subb
gs
rolb
adc
loopne
sub
jnp
inc
cmp
dec
testl
inc
sub
pusha
vmread
xor
insl
and
pusha
leave
adc
push
add
inc
adc
mov
jmp
mov
xorl
orl
cmp
in
cwtl
pusha
sub
xchg
in
jae
push
xor
push
cmp
mov
stos
nop
test
cmp
pop
loope
aad
adcl
inc
push
das
add
mov
jmp
ja
inc
push
sub
xor
dec
dec
sub
or
aas
and
inc
int3
or
add
or
or
sbb
sbb
and
lcall
xchg
cmp
sbb
fs
add
cwtl
lods
roll
int3
test
test
sub
sbb
push
movl
push
xchg
cmpsb
in
imul
or
sbb
das
js
adc
jne
or
pop
adc
xchg
and
jbe
dec
shll
js
jmp
mov
daa
sbb
or
clc
dec
sub
imul
cmpsb
dec
bound
inc
leave
clc
push
lea
inc
mov
and
xchg
ss
inc
xchg
pop
imul
ror
mov
and
sbb
loopne
xchg
mulb
or
adc
sub
movsl
push
adc
xchg
xchg
hlt
sub
das
pop
andb
sbb
add
cmp
inc
dec
add
jg
popa
shl
jp
cmp
sub
cmp
xchg
adc
insb
mov
cmp
sub
insb
sbb
xchg
loopne
xor
sub
cmp
jge
and
jmp
adc
sarl
dec
or
sbb
push
xchg
jg
idivl
cmp
clc
and
sub
sbb
push
inc
add
ret
inc
push
or
xlat
add
hlt
adc
leave
jne
cmp
fiadds
add
pop
rclb
push
push
and
sub
lods
repz
stos
push
mov
inc
sub
adc
xor
mov
adc
dec
cmpsl
popa
and
inc
das
add
dec
gs
das
and
adc
insl
cmpsl
sub
es
jo
icebp
das
dec
mov
lock
xchg
add
add
cmp
mov
aad
clc
fstps
sub
sbb
leave
jne
jmp
lcall
testb
sbb
dec
pop
mov
aam
push
mov
mov
sub
cmc
insl
xor
adcl
and
or
sbb
mov
fsub
sbbb
cwtl
jmp
incl
imulb
hlt
adc
push
lock
and
rorb
xor
or
jle
and
push
stos
shl
xchg
push
cmpsb
lcall
mov
jae
popf
mov
lea
mov
mov
and
ds
sub
adc
addb
push
jle
outsb
movsb
andb
fcmovu
outsb
xor
in
pop
imul
push
je
add
ficompl
jmp
xlat
or
jl
sub
jp
cmp
or
sbb
daa
mov
rolb
loopne
and
rclb
aam
sub
movsb
dec
es
js
jg
jo
pop
insb
sbb
lock
repnz
jnp
lea
test
or
cld
je
testl
int
subl
movsl
adc
loopne
xchg
imulb
cmp
hlt
push
and
hlt
xchg
fcmovnu
xor
pop
add
or
sbb
push
add
sub
imul
sbb
inc
test
sbb
mov
lahf
or
lock
or
dec
sub
mov
jbe
fisubl
sbb
sbb
in
in
adc
jmp
pop
jle
sub
push
je
ficoml
fdivl
rcrl
inc
lods
sub
jb
test
fcoml
inc
cmp
into
mov
cmp
pop
cmp
jae
inc
bound
dec
fisttpl
popa
lea
mov
ret
sti
rcll
aad
int3
mov
mov
mov
out
or
test
movl
pusha
xor
sub
add
in
push
or
adc
addl
xor
add
and
xchg
push
mov
pop
gs
fcmovbe
shrb
mov
inc
jo
add
gs
or
mulb
and
je
sub
test
adcb
fisttpl
dec
and
sub
aaa
stc
aaa
and
and
adc
idivb
mov
mov
xor
jae
ret
scas
adc
inc
jb
jo
out
mov
inc
push
push
inc
or
test
adc
or
xchg
nop
rcrb
sub
jno
pop
mull
xchg
xor
cwtl
inc
cltd
out
adc
mov
add
add
inc
or
loope
imul
push
pusha
jo
sbb
sub
xchg
or
cmp
test
lahf
mov
ror
adc
add
push
aaa
cmp
outsl
jo
jo
jo
sbb
imul
add
adc
xchg
and
mov
mov
pop
bound
and
jns
test
push
adc
and
rolb
addl
iret
and
mov
xlat
movsl
imull
hlt
loope
adc
inc
or
cmp
jne
mov
xor
pop
jecxz
xchg
xor
pop
adc
arpl
lods
lret
mull
ljmp
lret
cmpsb
adc
out
inc
push
cmp
cmp
mov
nop
cmp
dec
pusha
cmp
arpl
in
add
mov
inc
dec
rdmsr
insb
scas
or
stc
pop
add
and
sbb
add
cmc
dec
outsl
push
mov
sahf
out
call
push
or
jo
jo
cmpsb
xchg
lret
xchg
or
mov
cmp
pop
mov
xor
jnp
bound
rcrl
orb
inc
enter
cmpsl
add
orb
dec
cwtl
push
cli
ss
lods
or
or
sar
jns
orl
rcll
dec
sub
mov
add
xchg
mov
pusha
sub
or
jge
xor
pop
or
imul
inc
std
clc
mov
jne
sti
pop
daa
push
cwtl
js
sbb
push
ret
rcll
lea
lea
or
dec
sbb
push
lcall
fxam
push
or
sbb
out
cmp
mov
rcrb
insl
fs
mov
dec
daa
sbb
or
cmp
push
movb
outsb
dec
lcall
add
jge
ljmp
push
add
sbb
mov
nop
out
mov
mov
xchg
sbb
lock
xor
popf
or
cli
es
adc
stos
pop
add
js
out
dec
pop
adc
xchg
sub
pop
or
out
push
jnp
mov
pop
sbb
shlb
sub
or
mov
push
in
ret
push
inc
sub
sbbl
adc
or
rcr
divl
shl
mov
lea
jecxz
test
mov
dec
or
push
int
or
pop
adc
and
call
sub
sbbl
iret
arpl
inc
xor
lods
add
or
ds
loope
xor
sbb
inc
sbb
sub
sub
stos
rcr
outsl
cmpl
or
or
sbb
and
and
out
sar
test
xchg
mov
cmpsb
inc
fs
xor
jo
std
mov
rcl
cmc
cmp
pop
imul
adc
adc
stos
lods
mov
mov
popf
add
mov
pop
sub
rol
or
adc
lret
clc
sbb
or
ret
inc
push
push
pop
xor
mov
fidivrs
pop
and
mov
pushf
dec
fistl
lock
push
jne
mov
or
daa
push
xchg
shl
inc
cs
sub
les
mov
test
inc
dec
scas
ret
add
mov
mov
jp
pop
shlb
add
mov
fs
jle
add
pop
sub
fisubrs
xchg
sub
in
shll
add
imul
inc
js
data16
adc
push
stc
or
mov
scas
adc
mov
add
outsl
fs
mov
ret
les
sbb
inc
and
xchg
xlat
clc
lea
or
cwtl
test
incb
and
or
daa
inc
arpl
or
push
call
and
or
push
jo
scas
xor
jmp
int3
mov
shrb
adc
mov
fs
adc
inc
cmc
adc
cmp
pusha
xor
das
imulb
pop
add
dec
or
cmp
lcall
loopne
inc
pop
jge
movsb
cmp
sub
pop
lock
es
xchg
shrb
in
out
sbb
jmp
pop
xchg
loop
cmp
movsl
daa
aaa
push
mov
imul
pop
stos
hlt
mov
adc
or
cmpsb
dec
mov
addb
stos
push
bound
in
mov
dec
jae
inc
jbe
inc
ds
sub
pusha
sti
pop
jo
adc
jne
pop
pop
add
ret
adc
pop
dec
lods
fstpl
cmc
dec
and
sbb
addl
loope
and
imul
adcl
pop
mov
je
lahf
sub
sub
pop
add
cmp
addr16
loop
xchg
xchg
insb
jnp
push
and
clc
daa
push
ja
sbb
adc
mov
adc
mov
push
mov
mov
out
je
imul
pop
test
pusha
sbb
pusha
dec
cmpb
pop
fcompl
int
fiaddl
add
jmp
loopne
arpl
push
shlb
mov
pop
mull
in
or
xor
andl
adc
loopne
xlat
inc
test
sbb
or
aam
cmpb
and
jne
bound
or
add
push
inc
inc
mov
add
xorl
fisttpll
and
inc
sbb
das
add
fsubrl
xor
push
adc
sub
mov
mov
pusha
and
popa
sbb
add
lea
movsl
xor
int
dec
loopne
arpl
pop
and
je
in
xchg
sbbb
sub
inc
mov
fucomip
jle
lods
xchg
push
rorl
inc
sbb
mov
sarl
cmp
int3
mov
fsubrl
nop
pop
and
ds
add
rorl
cli
pop
adc
push
sbb
dec
sbb
test
add
in
outsl
mov
sbb
mov
pusha
nop
or
add
xchg
cmp
rcl
in
pop
add
cmpsb
mov
test
jl
xor
lock
jnp
dec
loopne
ss
ss
es
lods
xor
rcrb
sbb
xor
and
adc
sahf
mov
and
inc
and
rolb
int3
lods
sbb
cld
call
cmp
and
adc
psllw
sub
adc
sub
aad
add
shlb
fdivl
adc
jo
fst
inc
inc
add
cs
loopne
xchg
and
xchg
mov
sub
add
add
daa
push
cs
cmp
lds
pop
adc
imul
add
mov
cmp
data16
sub
cmp
add
mov
jmp
jle
adc
popa
sub
inc
shrb
add
movsl
push
nop
xchg
jnp
insl
push
jo
shlb
pop
push
pop
sub
fistps
movsb
and
push
pop
jmp
adc
lock
mov
outsl
les
addb
push
jb
ret
lods
cmp
push
pop
pusha
int3
push
mov
jne
mov
mov
add
inc
les
roll
leave
ret
int3
jg
inc
sar
xor
lock
cmpsl
jge
call
loopne
pop
scas
pop
xchg
push
insb
scas
add
adc
jno
add
xor
out
sub
add
rolb
xor
cmpl
packsswb
lock
and
adc
je
lahf
sbb
or
imul
adc
cmp
cltd
jne
adc
mov
adc
rcll
lahf
pop
nop
inc
xor
push
sbb
sbb
add
pop
adc
adc
cmp
mov
add
xor
lcall
sbb
jle
sbb
jge
or
dec
je
jne
push
adc
inc
rorb
sub
mov
and
add
clc
xchg
xor
add
dec
lods
aaa
inc
rorl
xor
insl
xor
test
sarb
xor
mov
dec
imul
das
ds
sbb
fdivs
dec
sbb
push
leave
jg
pop
xor
inc
pop
inc
nop
push
cmpsl
cwtl
jl
mov
fmuls
loop
or
outsl
cmp
jecxz
mov
movsb
jo
pop
sbb
and
add
sub
inc
add
inc
push
adc
sub
fbld
sub
and
or
sub
dec
push
in
fs
and
add
sbb
aam
xchg
add
add
push
aad
lods
orl
push
sbb
inc
push
dec
push
adc
jge
das
lret
add
add
pop
add
dec
mov
mov
test
mov
std
daa
outsb
sbb
pushf
enter
jne
ficoms
xchg
mov
or
imul
iret
pop
pop
addr16
jne
or
inc
adc
add
xchg
shlb
hlt
cmpb
js
lcall
imul
sbbb
xchg
jl
loop
testl
inc
aaa
ss
add
mov
add
add
mov
pop
xor
add
mov
jmp
push
ss
xchg
or
xor
or
loope
dec
flds
or
in
jb
movsl
test
ret
lret
cld
ret
movsl
push
push
insb
cmpsl
or
adc
mov
iret
add
outsl
jnp
pop
cmpl
dec
stc
push
cmp
sbb
or
das
inc
and
hlt
xorl
ficoml
in
mov
sbb
rcr
inc
pop
mov
lock
cld
or
inc
add
repnz
ja
add
cld
stos
test
or
pop
jb
or
jo
test
ret
loopne
int3
imul
xor
rcll
push
push
out
dec
gs
int3
das
and
sbb
in
fisttpl
pop
lret
repz
loope
adc
xchg
add
shlb
bound
sbb
sub
mov
sbb
or
inc
sub
jle
fwait
sbb
jno
pop
jge
cmpsb
cmp
cltd
fidivrs
mov
push
mov
repnz
push
mov
xor
inc
sahf
push
in
pop
test
push
and
leave
fmuls
inc
sub
push
sub
shrl
lahf
aaa
cmpb
inc
adcl
mov
sub
mov
and
lret
aas
adc
add
or
inc
push
jg
dec
cmp
inc
mov
jecxz
cmp
push
stc
fistps
sub
jmp
and
sbb
imul
or
add
xchg
mov
push
jb
adc
adc
pop
jmp
push
popf
add
fsubl
sub
mov
ja
pop
or
and
push
aaa
xchg
sbb
test
or
insb
not
jmp
adc
loopne
jmp
jmp
dec
push
cs
xor
add
adcl
add
fisttpll
push
mov
add
or
inc
es
xchg
push
enter
dec
add
sahf
xor
push
push
sub
data16
cmp
mov
and
xchg
fs
movsb
jb
jl
xchg
mov
test
inc
sub
push
shrb
lods
hlt
mov
mov
mov
dec
pop
or
cld
adc
out
adc
in
adc
push
dec
dec
dec
dec
push
adc
icebp
daa
lahf
dec
dec
inc
xchg
insl
insl
sub
and
push
inc
gs
addr16
and
push
gs
push
cwtl
or
jbe
mov
dec
out
jne
das
add
movsb
nop
push
jp
test
dec
mov
mov
aaa
inc
in
inc
out
sbb
dec
jae
pop
fmuls
call
into
cmp
sbb
push
rcrb
je
mov
mov
inc
add
mov
in
cmc
mov
or
or
mov
mov
pushf
mov
xchg
sub
adc
psubq
push
sub
push
outsb
insb
add
or
fwait
cmp
subb
das
inc
mov
fidivl
loopne
xor
int
shr
loope
ret
rorb
push
push
pop
lret
pop
mov
sbb
mov
icebp
lods
xchg
jmp
pop
cmp
pop
mov
sub
sub
popa
mov
mov
ss
mov
dec
notb
dec
lcall
inc
imul
push
mov
ret
imul
aaa
or
push
mov
jmp
pop
xchg
ud2
pop
stos
inc
dec
das
inc
jns
jecxz
push
out
fwait
js
cmpsb
pop
mov
mov
or
addb
cmp
js
arpl
push
nop
mov
push
jbe
scas
mov
pop
mov
mov
xchg
sub
mull
xlat
mov
sub
adc
aas
mov
enter
mov
mov
or
dec
call
add
jmp
add
lcall
addb
sbb
mov
push
ljmp
and
adc
xlat
jae
aaa
outsl
xor
aad
inc
gs
push
or
test
aas
push
push
adc
movb
add
push
xchg
dec
push
sbb
add
push
lods
push
cli
ljmp
inc
inc
fcmove
loopne
adc
adc
push
mov
or
cmp
test
or
sub
mov
inc
adc
je
adc
and
les
roll
pop
dec
pop
jg
lods
mov
pop
sbb
mov
movb
stc
inc
mov
add
jnp
add
adc
adc
imul
pop
xor
push
sti
ret
adc
sarb
and
dec
test
adc
mov
inc
loope
push
inc
test
lock
xor
fstl
dec
adc
es
jno
add
les
pop
ja
fistps
push
test
pop
add
mov
sti
inc
mov
xchg
iret
sarl
push
fisttpll
les
cmp
add
xor
add
rcrl
rorb
sub
loop
sub
dec
mov
sbb
fcoms
adc
add
popa
dec
leave
and
jae
or
dec
add
subl
data16
insb
inc
popa
into
sbb
pusha
ret
adc
shlb
and
rcr
push
lret
mov
lds
sarb
es
lods
testl
out
cmp
test
test
push
sahf
movsb
sbb
in
in
sbb
hlt
jbe,pt
add
jo
mov
dec
mov
push
push
push
push
or
pushf
cltd
into
xchg
cmp
cmp
insl
or
mov
dec
imul
mov
push
jle
jne
add
outsb
pop
arpl
insb
push
jnp
imul
inc
outsl
pop
js
bound
add
es
jb
jb
fidivs
out
dec
popa
or
add
negl
bound
jbe
es
gs
cmp
jnp
jne
jo
addr16
jb
mov
pop
mov
fidivrl
arpl
insb
daa
push
in
stc
mov
je
outsb
insb
das
mov
jnp
je
cmpsl
sbb
and
movsl
insl
in
xchg
pop
fs
daa
mov
fucom
pop
je
jo
jb
jge
fcoms
outsl
dec
data16
outsb
fcoms
das
add
or
jecxz
sti
imull
scas
dec
sub
xor
decl
push
out
or
and
fs
fiaddl
sbb
icebp
sbb
shl
inc
inc
push
push
outsb
je
push
or
or
nop
mov
adc
add
push
mov
jne
mov
pop
or
inc
add
push
sti
inc
in
cmp
sub
xor
insl
rcrb
in
pop
push
mov
lea
ficoms
dec
addb
sbb
shlb
xchg
pop
and
pop
mov
mov
mov
fdivrs
pop
leave
jl
mov
dec
mov
cmc
addb
or
dec
add
push
push
xor
std
jne
sbb
xlat
mov
mov
push
adc
cld
mov
outsb
mov
xchg
jne
mov
jo
or
sbb
inc
adc
rolb
repnz
cmpsb
sbb
xor
add
jno
insb
add
rol
dec
bound
insb
xchg
pop
jo
push
cmp
aaa
andb
adc
int3
adc
mov
cmp
mov
test
cltd
pusha
xchg
cmpb
fucomip
push
lods
xor
or
fwait
inc
add
adc
mov
cmpsb
test
faddl
rcll
outsl
sbb
push
or
sub
inc
mov
es
subb
ja
mov
mov
cmpsl
jns
repz
add
push
lret
sub
push
sbb
sub
inc
fistpll
push
jns
inc
add
xor
add
dec
in
and
add
add
push
scas
pop
aaa
xorl
shrb
mov
sbb
test
out
lret
add
add
ljmp
aas
push
add
pop
or
or
or
or
or
or
jns
adc
adc
out
sahf
out
adc
out
sahf
sbb
sbb
and
and
repz
and
int3
push
xchg
test
lret
repz
in
std
push
int
jns
out
xor
arpl
sahf
out
xchg
cmpsl
mov
sahf
cld
or
out
sahf
out
push
bound
lahf
out
sahf
mov
into
xchg
or
ljmp
sbb
imul
and
adc
adc
jb
in
push
or
test
sbb
sbb
xchg
push
cs
or
dec
push
and
jb
in
sub
sub
pop
push
mov
adc
adc
adc
inc
push
inc
dec
in
lret
sbb
movsb
jb
push
sbb
test
pop
jns
dec
xchg
sbb
push
sub
pop
bound
stos
push
jns
arpl
and
movsb
xor
and
push
test
addr16
push
ljmp
dec
mov
push
cltd
ret
cmpsb
add
cmp
es
dec
imul
inc
dec
rorb
fs
fdivs
test
dec
fnstsw
or
pop
mov
dec
les
leave
clc
push
adc
pop
push
arpl
shr
sbb
orb
xchg
xchg
adc
out
sub
push
cmp
mov
int3
mov
push
pop
sbb
test
mov
fwait
in
mov
lcall
aaa
jle
fdivr
cmpsb
and
pop
dec
int3
mov
or
mov
shrl
xchg
cmc
or
loopne
push
rolb
mov
scas
nop
mov
jnp
pop
push
pushf
loopne
mov
insb
mov
out
addr16
sbbl
mov
dec
je
ret
shlb
xor
xchg
cltd
inc
mov
in
xor
pop
or
dec
rclb
xor
or
xchg
adc
lahf
fs
test
push
add
insb
push
and
rolb
out
fwait
rcl
fnstsw
push
or
dec
pop
aaa
dec
jl
add
cmpsb
or
xor
lds
inc
rcrb
daa
or
aaa
and
sub
push
push
clc
dec
push
fldl
fsub
repnz
inc
jg
ss
int
pop
jl
push
rcll
fimuls
fimuls
push
adc
imul
aaa
pop
xor
es
ficoml
lahf
xor
push
aas
int3
pop
je
dec
or
mov
fmulp
xor
mov
sahf
aas
jbe
js
push
outsl
movl
rorb
mov
sbb
xor
outsl
ret
js
add
ja
setae
xor
mov
dec
repz
push
sarb
mov
xlat
adc
inc
inc
mov
inc
inc
dec
stos
push
cmpsb
pusha
pusha
jecxz
or
adc
mov
add
cmp
cmp
nop
add
cmp
sub
mov
cs
jne
dec
add
add
loopne
ds
les
sbb
add
sbb
orb
add
and
ret
aas
sbb
rorl
pop
or
or
sbb
test
and
mov
lret
sbb
pop
cwtl
and
ret
test
test
xlat
sub
pushf
and
and
fadd
add
and
mov
or
or
clc
fs
adc
push
sub
scas
push
lret
or
xor
or
rclb
aam
and
adc
out
cmp
sub
popf
mov
sarb
dec
inc
or
into
add
test
out
addr16
mov
js
inc
xchg
xor
lods
jno
xchg
dec
sub
or
cmpb
cmpsl
push
roll
pop
pushf
add
xchg
jno
cmp
clc
jae
push
or
mov
jnp
popa
jno
mov
lahf
mov
je
cmp
mov
lea
popl
push
enter
insb
and
jg
and
inc
jnp
imul
xlat
mov
lock
xlat
add
dec
xor
jp
popf
je
push
cmp
test
xlat
add
xchg
sub
mov
lock
add
xlat
iret
sub
mov
bound
mov
pop
add
add
and
push
scas
lock
push
lret
lds
dec
push
scas
sar
pop
enter
or
nop
add
sub
das
xor
mov
ret
push
or
or
mov
faddl
adc
out
xor
jg
dec
xor
bound
je
jecxz
and
cmc
jle
outsl
add
fimuls
mov
leave
inc
enter
sbb
fwait
xor
xor
inc
cmpl
cs
and
clc
push
and
jle
push
xor
insb
xchg
xchg
movsl
adc
and
inc
and
dec
add
cmpb
mov
mov
push
pop
aaa
test
sub
add
sarb
pop
adc
add
aam
add
pop
shlb
pusha
xor
daa
adc
push
in
push
data16
cmp
jg
push
sub
pop
loop
push
adc
pop
inc
adcl
jae
xchg
xlat
mov
xchg
pop
inc
or
mov
add
pushf
or
push
dec
cmp
add
push
int
adc
push
or
adc
sarb
push
ss
adc
push
clc
pop
push
test
dec
pop
in
outsb
add
jmp
test
adc
rclb
ret
sub
sbb
sti
cmp
scas
and
xchg
faddl
in
into
sbb
pop
or
cmp
jne
int3
decl
in
mov
sbb
fs
pop
call
push
push
mov
in
add
mov
stc
sub
inc
cmp
mov
lret
add
leave
mov
ss
pop
xlat
xor
out
xchg
add
sti
lret
outsl
loope
loope
or
es
pop
mov
or
inc
inc
les
push
inc
add
mov
and
lret
dec
shrl
aaa
jmp
cmp
fldt
jno
adc
lods
gs
jno
je
dec
mov
push
stos
outsl
and
sbbl
aaa
sub
mov
add
sbb
imul
and
pushl
sbb
xor
cmp
adc
jl
pop
sub
xor
fnstenv
popa
enter
cwtl
or
sbb
or
xor
js
push
test
in
mov
fmuls
jg
ds
imul
inc
xor
xor
push
add
adc
imul
adc
cs
pop
and
fisttpl
xchg
mov
pop
inc
dec
daa
mov
mov
inc
dec
dec
icebp
dec
leave
roll
mov
push
and
filds
out
pop
xor
add
inc
add
mov
or
out
insb
or
or
push
es
in
cmp
outsl
cmp
sub
ret
add
insb
loopne
pushf
insb
lahf
sub
je
cs
adc
adc
add
mov
sbb
mov
lods
sub
test
lods
or
cltd
ret
adc
add
lahf
sarb
lods
bound
fcomps
cmp
dec
push
adc
xchg
sarb
repnz
cld
cmpsb
addl
ljmp
incb
or
fisttpl
mov
aam
mov
jp
js
fstpt
mov
push
movsb
push
pop
data16
popa
jns
jge
lock
adcl
fcoml
xor
movsb
loopne
sbb
jle
daa
and
sub
dec
push
xor
xor
rcl
call
flds
dec
notl
xor
imul
add
movsl
add
addb
xlat
adc
inc
or
fcmovb
inc
fisttps
subl
xchg
nop
inc
bound
es
dec
in
test
roll
push
dec
inc
and
jmp
cmp
mov
nop
ret
test
out
mov
push
cli
cmp
cmpsl
in
cmp
aam
adc
push
rcl
aaa
xchg
in
gs
clc
mov
call
cmp
and
leave
das
in
xchg
stc
sub
inc
jns
pop
in
push
bound
loop
ds
and
pop
sub
out
sbb
dec
adc
pop
cltd
in
dec
add
out
and
scas
or
mov
or
xchg
pop
inc
cmp
insb
dec
stos
dec
xchg
loopne
or
lock
dec
in
xchg
mov
cmp
insl
xchg
cld
and
and
cmp
test
movl
cmp
add
les
and
and
jne
subb
call
test
mov
cmp
jne
mov
push
pop
dec
test
les
add
adc
and
push
sbb
stc
pop
or
cmp
mov
and
cld
jb
push
int
pop
mov
pop
je
push
cmc
dec
cwtl
dec
adc
inc
into
inc
or
or
dec
dec
sbb
dec
data16
push
addl
cmp
dec
rorb
fisubrl
outsl
mov
test
and
inc
out
dec
sbb
pop
or
dec
pop
pop
xchg
or
dec
push
mov
ret
push
xchg
decl
cmpb
and
add
inc
or
sub
fistpl
push
mov
lock
xor
add
jo
add
ja
hlt
sahf
xchg
dec
pop
pop
dec
sahf
mov
popf
and
fiadds
adc
push
fiadds
adcl
mov
mov
ds
push
inc
scas
push
imul
movl
rorl
popw
xor
inc
pop
xchg
mov
and
add
inc
sbb
cmp
dec
test
push
aam
mov
insb
bound
mov
bound
add
movsb
jmp
or
out
inc
pushf
lock
aaa
inc
imul
add
inc
insb
repnz
pop
orl
and
push
enter
add
repz
push
adc
jbe
sbb
shll
or
movsb
xchg
and
push
ljmp
pop
loopne
test
xor
enter
jo
sub
imul
sub
xchg
sbb
add
push
cld
pop
add
repz
mov
sahf
clc
out
xchg
cltd
push
push
add
push
add
daa
jl
out
jbe
iret
sub
int3
stc
sub
or
sbb
lahf
pop
sub
outsb
mov
in
pop
fcoml
cmc
push
insb
mov
sub
and
dec
xor
addb
aaa
ss
cmp
sahf
out
sahf
mov
sahf
out
loopne
call
pushf
out
clc
cmpsl
mov
or
inc
push
push
xchg
xchg
nop
xchg
popl
iret
sbb
adc
fsubs
sub
add
mov
outsl
sub
mov
ret
test
sbb
mov
shrb
push
out
inc
movsb
pop
push
fiadds
sub
frstor
add
xor
int3
cmp
cmp
or
loopne
inc
dec
push
pop
push
lea
je
push
fimull
loop
sub
xchg
add
sub
test
loopne
loopne
and
add
movsb
jnp
and
sarb
arpl
sub
sbb
iret
xor
fstpl
or
sbb
lock
out
iret
mov
adc
inc
push
aas
inc
mov
cs
mov
leave
in
int3
aas
addl
or
test
xor
xor
ds
push
insl
stos
push
add
decl
and
adc
popf
sub
push
pop
add
ja
pop
jmp
xor
and
jl
loope
sbb
adc
sbb
sbb
or
cmpsl
xchg
mov
pop
xor
add
daa
adc
aad
lea
inc
xor
insb
pop
and
rorl
sbbl
cmp
mov
inc
cs
test
hlt
mov
jne
jle
cli
add
das
sub
jle
sub
cmp
jo
dec
or
mov
lea
pop
pop
js
xor
mov
loopne
pop
cmp
mov
dec
cmpsl
mov
add
ja
dec
sub
arpl
mov
lret
sub
sub
gs
add
jmp
sub
or
nop
adc
mov
or
call
or
arpl
or
nop
jle
daa
xchg
add
dec
or
push
cmp
test
data16
xor
xchg
push
sbb
push
mov
push
sbb
xchg
sbb
inc
cltd
lods
frstor
loopne
test
sbb
push
xor
or
push
xor
xor
leave
scas
push
fld
sub
ja
pop
xchg
dec
loopne
subl
xchg
dec
rcrb
push
push
push
xchg
pop
jne
xchg
mov
sub
cmpsb
mov
ja
pop
pop
fdivrs
inc
sub
mov
and
aas
lcall
add
pop
sub
call
arpl
ss
jnp
lret
adc
push
xchg
dec
mov
push
and
pop
lds
pop
daa
or
fldl
xor
adc
add
aad
and
pop
xchg
ret
aam
sbb
mov
shlb
adc
sbb
xchg
loope
ud2
lea
mov
inc
mov
movsl
aas
mov
and
movsl
add
mov
orl
xchg
lods
insl
dec
imul
push
inc
out
lea
jb
scas
dec
and
mov
inc
aas
xor
sti
add
dec
dec
cmp
dec
sarl
cmp
dec
sbb
push
test
jne
sub
pop
inc
jb
imul
inc
push
jl
and
mov
stos
adcl
fmull
push
push
insl
aas
xor
jecxz
or
push
push
dec
dec
push
push
sub
cmp
mov
in
mov
aas
lock
xor
neg
test
test
jle
out
in
test
inc
test
movsl
inc
xchg
fcoms
sbbl
and
dec
loopne
je
and
insb
insb
jecxz
loopne
mov
mov
rol
or
or
rcll
mov
dec
adc
sub
fadds
push
dec
cmp
sbb
and
xlat
mov
jmp
sub
mov
dec
jno
sub
push
add
mov
adcb
stc
add
insb
dec
mov
sub
mov
pusha
lock
js
mov
ret
pop
iret
xchg
xchg
cmpl
cmp
je
lea
add
jb
jge
xchg
add
jne
or
jl
addl
hlt
push
jnp
jne
mov
mov
mov
jmp
mov
jo
jne
sub
ret
sbbl
jns
add
fmuls
sub
inc
je
into
js
jecxz
or
bound
mov
sub
and
inc
pop
rcl
out
and
add
add
or
push
sbb
into
movsb
add
xor
rorb
iret
sub
xchg
sub
add
aam
or
stc
fildll
jae
sub
pop
or
xchg
hlt
sbb
pop
test
pop
jbe
pop
lret
jne
pop
or
int
cld
jmp
and
push
movsl
rcll
or
pusha
mov
inc
inc
push
jmp
dec
ffreep
test
pop
fcmovb
sbb
add
inc
cmp
jmp
push
xchg
sti
js
shlb
int3
aaa
sub
cs
push
add
fmuls
pop
xor
add
test
push
dec
cmp
or
fisubrl
push
ss
adc
add
or
sub
lds
jbe
push
jae
dec
add
pop
inc
inc
add
in
scas
cli
outsb
add
inc
and
and
xchg
push
jmp
xchg
mov
xor
sbb
lock
orb
fdivrs
and
pop
sbb
dec
je
test
push
push
xchg
je
out
fisubrs
or
pop
cmp
aas
or
or
lock
out
mov
movsl
add
mov
in
nop
or
enter
pop
or
add
pop
add
fldl
clc
sub
sub
mov
dec
std
adc
out
sahf
pop
pop
pop
lahf
scas
ret
fs
popl
test
or
je
imul
enter
in
or
push
pop
sbb
inc
or
arpl
bnd
sbb
or
ret
pop
in
add
movsb
inc
cs
pop
mov
xor
ja
dec
into
insl
dec
dec
add
dec
inc
imul
fs
popa
js
pop
outsl
fimull
cwtl
lcall
pop
push
jle
or
push
fs
add
les
inc
dec
pop
and
xor
in
outsb
push
xor
push
push
gs
fisttps
outsl
push
xor
add
in
out
scas
or
pop
and
insb
push
adc
pusha
mov
mov
adc
lcall
mov
xor
or
insb
shrl
movsl
sbb
jo
add
pop
fldt
push
orb
dec
outsb
inc
repnz
pushf
pop
xor
push
add
cli
mov
push
dec
or
scas
cmc
and
sysenter
dec
nop
jp
jae
dec
aaa
dec
push
sbb
or
pop
push
in
dec
insb
add
add
push
imul
sbb
cmovno
xchg
rolb
outsb
out
andl
or
or
adc
sub
add
es
testb
adc
popf
or
inc
and
aam
prefetch
or
mov
ss
inc
in
lcall
movsl
sbb
out
mov
das
mov
pop
or
jle
orb
add
dec
dec
into
sub
shl
int
lock
cmpsb
cmp
push
dec
add
mov
imul
arpl
cmp
or
pusha
xor
data16
mov
adc
clc
sbb
adc
pop
adc
sub
and
in
pop
divb
out
or
mov
pop
sub
or
xchg
pop
in
movsl
adc
push
rol
aas
add
sahf
push
or
jecxz
das
jae
xchg
nop
sbb
shlb
jbe
sbb
dec
sbb
or
mov
adc
adc
xor
inc
mov
dec
addr16
and
push
gs
out
adc
imul
loope
pop
cmp
or
sbb
inc
and
push
es
fmuls
jne
sti
sbb
or
adc
mov
movsl
jb
jb
or
mov
test
sbb
or
scas
push
outsb
push
cmpsb
ja
xor
adc
or
sbb
pop
ds
add
movsl
and
aas
addr16
sub
xchg
mov
or
imul
or
add
fists
pushf
mov
or
push
rcr
sbb
xchg
adc
sub
push
jne
jns
add
mov
or
and
mov
adcl
mov
push
dec
push
inc
add
fwait
cmp
out
mov
neg
rcll
rcrb
sbbb
inc
popa
dec
adc
pop
push
or
add
add
adc
add
pop
ds
mov
add
jo
lods
cmpsl
add
or
xchg
add
fnstenv
lret
adc
inc
add
mov
fsubl
pop
cmp
rorb
cwtl
push
add
lods
inc
push
xchg
xor
mov
rolb
shlb
dec
lret
adcl
add
test
and
pop
lcall
and
adc
add
adc
push
in
sbb
addl
mov
mov
mov
loopne
lret
mov
enter
add
mov
sbb
add
cmp
inc
or
mov
scas
insb
cld
filds
ljmp
test
cwtl
test
cmpsl
jmp
inc
add
shrl
jnp
shlb
ds
mov
es
pusha
in
cmpb
out
mov
add
lods
sub
xor
int
repz
xchg
cmp
and
nop
cwtl
cltd
push
dec
cmpsl
stc
sahf
mulb
push
push
xchg
mov
jns
jmp
pushf
mov
push
in
iret
repz
cmp
cmpsb
push
push
inc
lods
mov
jge
jnp
ja
pop
jne
push
mov
mov
in
rcr
pop
dec
out
inc
loopne
jp
je
pop
xorl
jl
lcall
mov
pop
pop
and
pop
xchg
and
clc
mov
sub
fcompl
push
aam
popf
inc
lcall
ret
fldl
int3
or
shlb
ss
hlt
add
sbb
outsl
popl
sbb
adc
push
adc
ds
test
xor
icebp
ficomps
loope
insb
and
sahf
push
cmp
adc
xor
push
or
inc
insb
lock
dec
sub
and
cmp
adc
or
inc
push
in
xor
sbb
int3
xor
test
jl
xorl
add
or
xor
sub
pop
lods
es
mov
test
inc
loopne
pop
sbb
jnp
jno
repnz
repnz
fcoml
sbb
in
inc
fnstenv
push
movsb
adc
and
mov
pop
xor
inc
ret
imul
jo
inc
xchg
sahf
or
push
add
pop
bnd
cmc
dec
push
xor
adc
pop
data16
mov
in
cmpsl
add
pop
and
push
jo
xor
push
dec
and
push
push
pop
adc
push
pop
pop
mov
rcl
and
repz
push
je
jb,pn
sub
and
pop
dec
enter
js
rorb
bound
jns
mov
add
and
fcompl
daa
sub
cs
dec
popa
fsubrl
dec
sub
negb
mov
add
cs
cwtl
sub
mov
xchg
push
fistps
ja
cld
pop
sbbl
inc
mov
orb
add
push
push
shlb
push
xchg
test
js
outsb
sbb
jns
scas
loopne
mov
pop
mov
inc
aam
out
adc
cltd
add
jne
lea
pop
hlt
or
jp,pn
aas
jbe
ja
xchg
je
add
jl
jb
mov
inc
xchg
or
inc
nop
sbb
pop
mov
lret
jl
popa
or
mov
push
ret
ret
lahf
mov
sub
dec
daa
cmp
test
pop
rcrl
and
or
sarl
pop
mov
lcall
popa
adc
js
jae
stos
rcrb
fmuls
dec
xor
add
out
xor
and
inc
fisttps
fiadds
sub
je
cs
loopne
cmp
les
es
test
cmp
es
jge
push
lea
sbb
or
dec
cmp
dec
pop
js
aas
movsl
dec
adc
jne
std
nop
dec
cmp
jo
pop
subl
add
push
dec
xor
adc
test
cmpsb
adc
push
mov
cwtl
push
and
or
int3
lcall
xlat
inc
jl
push
call
fsubs
sub
or
fwait
mov
mov
cmpl
adc
xchg
pop
les
mov
bound
mov
clc
cmp
pusha
jmp
mov
cwtl
and
cwtl
pop
fcoms
inc
pop
repnz
loopne
inc
adc
pusha
or
mov
into
roll
add
dec
jnp
and
test
add
dec
add
ljmp
fsubrs
popl
and
and
and
inc
or
dec
add
and
push
mov
call
js
popa
movsl
fcomps
add
test
mov
inc
fwait
dec
call
adc
and
rcl
das
loope
add
cltd
sbb
jb
or
push
jo
and
pushf
pop
mov
sarb
xchg
or
in
push
loope
mov
push
lock
pop
lcall
pop
push
inc
int3
mov
push
mov
inc
push
pusha
or
xorb
pop
xor
push
pop
jge
push
sbb
pop
jge
mov
pop
or
sbb
out
or
les
dec
pop
xlat
dec
xchg
sub
sahf
inc
inc
loopne
xor
jns
push
or
pusha
xchg
dec
add
mov
and
push
popa
push
inc
jno
aad
add
imul
fnstsw
dec
arpl
sbb
xor
fldl
mov
pop
xor
roll
push
dec
cli
cmpsl
push
pop
addr16
test
jge
push
inc
mov
sbb
lods
push
in
mov
rcrb
xlat
pop
popf
or
sahf
cmp
arpl
inc
ljmp
les
sub
lahf
movsb
push
add
pop
sarl
cmp
inc
mov
sahf
ss
pop
and
setge
into
leave
and
sub
stos
cmp
nop
nop
sbb
pusha
push
test
nop
sbb
pop
outsl
divl
dec
mov
sbb
mov
or
push
mov
cmp
mov
adc
les
cmp
lods
sub
sbb
arpl
cmpsl
sub
pop
jle,pt
mov
xor
inc
xchg
js,pt
mov
loopnew
rclb
orl
scas
out
sbb
push
add
cmp
lock
push
test
pop
outsb
add
ljmp
pushf
fmull
push
mov
subb
jo
shll
repnz
push
rol
sbb
out
pop
cld
pop
in
sub
mov
jmp
mov
rclb
add
xchg
loopne
repnz
fs
and
add
dec
ret
daa
xlat
jo
inc
fidivl
insl
adc
fcomp
adc
or
cmp
add
in
jnp
xor
pop
inc
sbb
sub
add
es
cmp
or
test
push
out
sti
je
or
adc
adc
nop
xchg
ret
out
push
jbe
cmpb
mov
maxps
add
rcrl
or
jno
inc
call
push
inc
push
xchg
das
and
mov
loopne
mov
pushf
or
xchg
push
xlat
mov
add
xchg
shll
pop
cmp
inc
sub
cltd
cwtl
jl
call
cld
outsb
jbe
cwtl
in
mov
or
and
jmp
pop
sti
jmp
or
jb
andb
fnstenv
push
xchg
lcall
mov
cmp
mov
cmp
enter
movsb
mov
sbb
mov
scas
je
popa
cmpsb
push
shl
je
adc
xchg
es
adc
sbb
mov
bound
cwtl
daa
hlt
pop
filds
adc
hlt
mov
and
sarb
pop
inc
xor
mov
add
pop
adc
inc
dec
inc
mov
inc
cld
or
sub
adc
fs
mov
and
push
mov
and
and
sub
adc
data16
push
sbb
xor
sub
imul
dec
lret
inc
mov
cli
je
stos
ss
or
sub
pop
dec
test
inc
lcall
jne
mov
popa
or
mov
jg
or
lret
in
mov
mov
movsb
mov
jp
testl
lods
xchg
mov
mov
es
push
pop
adc
in
mov
arpl
icebp
std
xchg
adc
dec
lahf
inc
iret
insb
xchg
adc
arpl
jo
push
stos
cmp
js
adc
incl
mov
sbb
fs
jae
mov
mov
cmpsb
and
xor
shr
jmp
sbb
inc
dec
and
xchg
mov
sarl
xchg
sub
arpl
fcomps
sub
ljmp
faddp
inc
pushf
fsubs
mov
mov
jae
call
out
aam
push
loopne
mov
pop
mov
mov
sbb
add
popa
scas
add
in
cmp
or
or
or
adc
lods
or
fistpll
and
mov
dec
ret
cwtl
aas
pop
int3
inc
mov
adc
sub
jae
cs
add
add
mov
and
xchg
lret
stos
xor
pusha
and
dec
rcr
clc
pop
addr16
add
int
je
inc
adc
or
cwtl
or
mov
xor
or
xchg
orl
sub
dec
adc
fimull
add
adc
push
mov
lock
xor
popf
and
adc
sub
mov
add
movsb
mov
int
inc
insb
sub
mov
sbb
push
xchg
mov
xchg
andl
ret
and
inc
or
push
xchg
xchg
int
in
or
add
or
insb
insb
fisttpl
sbb
sub
push
inc
add
inc
pop
xor
inc
pusha
sbb
daa
mov
mov
fimull
add
adc
add
sbb
xchg
mov
das
jle
adc
pop
subb
mov
add
dec
insb
imul
jg
push
insb
sbb
ss
pop
or
or
mov
inc
jmp
cs
add
fldcw
add
inc
popa
adc
pushf
sub
mov
shrb
or
push
inc
dec
dec
imul
fisubrl
aaa
inc
inc
add
dec
mov
add
ss
roll
int
jb
pushf
mov
jb
dec
push
or
out
nop
pop
les
popa
pop
add
sub
test
aas
loope
mov
fsubrs
add
orl
push
pusha
and
xor
push
push
cmp
popa
mov
pop
jmp
sub
push
test
pop
cmp
leave
ss
add
xor
rclb
fdivrl
sub
push
pop
fdivrs
mov
jo,pn
and
sub
cmp
jne
in
test
repz
inc
ret
mov
xorb
bound
adc
fmuls
xchg
mov
test
sti
sbb
jecxz
pusha
adc
mov
inc
daa
lods
mov
sbb
jg
add
xchg
sub
neg
jmp
fsubs
and
jne
mov
sub
add
add
add
popa
dec
jecxz
jle
test
gs
and
push
mov
and
into
mov
sti
aam
sbb
xchg
lret
adc
push
push
and
mov
pop
fistps
pop
xor
inc
adc
test
into
cltd
push
sbb
aas
repnz
jecxz
adc
add
or
and
addb
or
lret
jne
mov
in
js
adc
cmpsb
aas
out
call
or
xchg
and
or
xor
cmp
and
sub
jne
sub
ret
cli
pop
or
pshufw
xor
or
lcall
fldt
sti
adc
sti
jmp
and
sub
lret
std
subps
lock
loope
or
sub
cmpb
and
test
jo
mov
sub
xor
loopne
pop
popa
mov
mov
sub
push
add
mov
shll
and
lds
adc
ret
in
ss
or
mov
or
je
ss
jmp
fsubs
vmovntps
rcll
xor
mov
inc
and
sub
out
inc
sub
inc
bound
out
or
lods
xchg
cmp
sar
aaa
add
add
jle
mov
xor
sub
das
jbe
xor
js
data16
lahf
lret
push
dec
int3
pop
dec
out
shll
and
leave
inc
xor
sbb
or
or
push
adc
pop
xor
mov
repnz
sbb
pop
cmpsb
push
mov
jne
ss
pop
sahf
and
and
adc
cmp
je
mov
cld
iret
mov
iret
push
dec
inc
push
push
shlb
sbb
or
cld
jo
pop
lret
das
sahf
or
jl
sarb
sbb
push
dec
adc
or
dec
adc
push
ja
mov
add
frstor
je
pop
das
add
sub
push
jbe
jl
or
sub
sbb
les
mov
rcl
lock
mov
and
push
xchg
je
adc
xchg
mov
cmp
nop
xchg
pcmpeqd
les
sar
dec
aas
xor
js
jae
outsb
mov
das
test
mov
leave
mov
adc
ret
dec
faddp
orl
ret
cmp
sub
pop
cmp
mov
int3
sbb
imul
fistl
sahf
sub
or
test
sbb
inc
fiadds
push
and
pop
aam
adc
xor
sbb
jo
xor
cmp
sbbl
enter
xchg
leave
shrb
sub
pop
sub
add
sub
lahf
repz
call
push
mov
pop
sbb
ret
clc
les
sbb
fs
add
push
adc
push
mov
push
ret
push
fsts
mov
test
bound
ja
mov
pop
loop
add
fwait
add
or
add
imul
or
add
aas
icebp
pusha
notb
inc
in
and
push
out
xor
xchg
push
mov
bound
xchg
ret
mov
loopne
mov
xchg
sbb
lods
or
imul
or
and
push
aam
adc
je
xchg
cmpsl
lcall
sbb
scas
sub
xor
add
jmp
into
test
iret
shlb
aaa
push
sub
adc
xchg
xor
lea
les
push
cmc
andl
add
and
cmpsl
adc
and
add
fcompl
sbb
inc
add
add
pop
xchg
pusha
pop
xor
mov
shlb
dec
shrb
aas
push
rol
lock
xor
or
and
add
sbb
cmp
xchg
xor
inc
or
lea
pusha
mov
inc
xchg
inc
or
add
adc
call
xchg
pop
andb
xchg
aam
and
mov
or
cs
cmp
add
and
lock
addb
pop
pop
jg
fiadds
push
jns
mov
mov
pop
je
mov
or
mov
mov
inc
fstpt
push
cmp
xchg
xchg
lea
push
inc
mov
pusha
sub
int3
test
fcmovne
inc
adc
inc
notl
add
loope
ret
rol
mov
or
pop
fistps
sub
or
in
jmp
dec
outsl
push
push
and
dec
lea
or
sbb
or
push
out
popl
or
inc
adc
inc
outsb
inc
sub
mov
loopne
addl
test
mov
inc
lret
lock
rcrl
pop
add
xlat
sbb
inc
add
or
sbb
inc
mov
and
mov
xchg
mov
ja
lea
push
mov
ljmp
pop
psllw
popl
cmp
or
lds
sbb
out
sbb
pop
xchg
push
jno
push
jle
mov
enter
ja
mov
inc
jge
rorl
or
sbb
xchg
mov
pop
fdivl
xor
jns
subl
jge
adc
notl
mov
es
inc
mov
xchg
sbb
cmp
das
pop
push
lock
movsb
sbb
in
push
les
adc
jge
and
cmp
and
push
pop
xor
jecxz
daa
mov
xorb
xor
dec
mov
rclb
adc
loopne
xchg
lods
aad
add
add
and
sub
mov
and
jl
and
cmc
and
scas
pop
stc
xor
sub
data16
cltd
leave
testl
nopl
xchg
mov
inc
fbstp
inc
cmc
mov
jns
or
sbb
sbb
sub
cmp
ret
inc
push
push
lret
inc
xor
ds
xchg
xor
add
inc
lcall
sub
jl
jle
cli
push
loope
icebp
mov
fisubl
negl
mov
xchg
push
arpl
or
or
scas
roll
test
cmpsb
out
loopne
jmp
push
loope
xchg
lret
inc
scas
adc
sbb
js
xchg
or
push
inc
add
xor
fmull
pop
mov
insb
push
jnp
ret
pop
bound
adc
ss
add
mov
rolb
in
push
fistps
xor
testl
std
and
stos
sbb
jg
aam
lods
xchg
mov
add
hlt
popa
dec
invd
dec
rcll
xchg
lds
nop
ror
or
mov
mov
mov
add
xor
jl
and
lods
loope
jmp
add
push
in
or
pop
cmp
jle
sub
and
or
adc
push
sbb
cmpl
xchg
icebp
mov
mov
movsb
mov
popa
push
inc
and
inc
push
pop
dec
subb
or
cmp
pop
dec
mov
mov
and
inc
add
jae
es
ret
lock
xor
push
mov
ds
mov
xor
lds
daa
enter
orl
dec
sub
mov
adc
imul
js
add
addl
leave
or
dec
lcall
pusha
jno
jae
int
sbb
or
add
mov
or
inc
inc
or
stos
add
xchg
cmp
cmpsb
test
dec
and
movsb
jmp
mov
adc
add
int3
mov
pushf
ljmp
adc
faddl
fdivr
fidivrl
sti
push
add
orl
push
xchg
pop
lcall
pop
or
iret
mov
pop
movsl
push
jl
mov
xchg
or
cmp
dec
pop
cmp
dec
sbb
pushf
or
push
cmpb
ds
pop
call
add
cld
fstl
inc
jmp
aad
xorb
cmp
add
xchg
mov
data16
sbb
or
inc
mov
inc
outsl
aaa
push
loopne
xor
lds
shrb
xchg
mov
inc
xor
sub
popf
inc
push
mov
test
sbb
cwtl
in
mov
incb
inc
push
xchg
xor
cmc
pop
gs
fcompl
or
xchg
sbb
test
pop
pop
cmpsl
sbb
adc
xor
add
jg
sub
xchg
xchg
lret
shl
and
cmp
and
pop
lds
sub
mov
xchg
mov
xor
rcr
roll
mov
jecxz
pop
ss
nopl
sbb
cs
ss
es
pop
or
jnp
add
fldenv
cmp
popf
cli
inc
sub
dec
lods
das
push
jne
cmp
mov
cmp
add
fldl
mov
mov
add
mov
out
fidivl
or
fstps
test
call
or
out
xchg
xchg
adc
mov
sub
and
cmp
ss
cmp
inc
cs
adc
les
adc
ret
arpl
xchg
mov
inc
inc
lods
lods
sbb
jno
bnd
xchg
fwait
and
lods
inc
inc
xchg
fmul
imul
adc
test
jne
inc
cld
sub
or
mov
or
imul
movsb
arpl
mov
aaa
sarb
imul
mov
push
mov
negb
xor
add
cltd
add
xchg
or
push
sub
push
negl
sbb
inc
adcl
mov
lock
iret
dec
popa
loope
add
jns
mov
adc
or
jg
je
mov
and
nop
or
inc
push
dec
push
and
push
push
and
pop
xor
fwait
dec
sbb
sub
xchg
nop
mov
sbb
pop
sbb
jne
and
imul
push
or
in
ret
mov
mov
push
add
iret
repz
sub
dec
popa
call
pop
cmp
adc
sbb
xchg
lods
ljmp
pop
lods
dec
xor
mov
pop
rol
add
and
dec
call
pop
fimuls
pop
mov
ret
jle
xchg
inc
cmp
inc
inc
dec
lock
ja
fs
in
mov
pop
mov
inc
xor
jge
inc
push
out
ljmp
mov
sbb
dec
enter
add
xor
dec
mov
push
cs
adc
add
in
xor
insb
in
lret
cmp
mov
les
jmp
or
cmp
add
xchg
rol
adc
nop
js
cmp
aaa
adc
cs
shlb
adc
outsl
aaa
adc
sub
dec
enter
das
adc
or
inc
inc
mov
dec
adc
pop
jbe
lods
les
pop
pop
pusha
xchg
lcall
push
daa
cmpsl
ficoml
addr16
je
push
jb
pop
xor
or
dec
and
jae
icebp
insl
inc
xor
ret
stos
ret
nop
aas
adc
adc
call
lcall
test
push
xor
push
test
xlat
sub
jo
mov
jne
scas
shlb
add
js
pop
andl
mov
push
and
imul
sub
pop
sbb
mov
xchg
cmp
xchg
mov
roll
cmpb
inc
movsl
addr16
es
adc
sub
adc
fldt
sbb
or
mov
insl
inc
call
mov
repz
sub
xor
sbbl
lea
sbb
enter
add
xlat
sub
add
adcl
fimull
push
push
aas
movsb
fists
clc
add
adc
adc
push
xchg
adc
dec
add
loop
or
test
cmp
daa
push
sub
xorb
mov
jnp
lock
xchg
mov
cld
adc
rclb
or
cli
mov
sub
rol
iret
repnz
pop
inc
pusha
inc
or
mov
das
dec
jae
ss
xor
or
in
test
movsl
xor
inc
aad
pop
imul
rolb
test
add
cld
mov
or
push
mov
mov
cmpsl
call
and
add
pop
es
les
sub
rorl
push
jno
test
es
or
aaa
fwait
pop
sbb
pop
or
into
das
je
mov
add
mov
ja
jbe
mov
add
jecxz
outsl
in
jne
es
mov
pop
jbe
cmp
sbb
loop
jo
push
or
dec
scas
xchg
lret
mov
add
flds
sub
jmp
lods
or
test
and
cmpl
jmp
andb
std
outsb
cmp
test
mov
addr16
cmpsb
leave
fsubp
cmp
cmp
stc
jne
dec
daa
xchg
xchg
rorl
faddl
jb
addb
push
and
sbbb
in
and
add
cmp
sub
imul
xchg
fiadds
jnp
and
mov
jne
mov
out
insl
inc
push
push
sub
mov
inc
and
or
or
jmp
cmpsb
mov
and
das
andl
mov
addb
sti
add
mov
and
cli
pushf
inc
cmp
and
mov
jl
or
add
sbb
push
lcall
add
add
dec
test
jb
ljmp
cmc
push
xor
push
dec
imul
inc
aas
mulb
test
sbb
add
ficompl
xchg
fistpll
nop
or
hlt
test
ja
mov
cwtl
sub
int
mov
cmp
cmpl
subb
imul
dec
add
add
dec
fistpll
mov
dec
sbb
jno
add
sub
ja
cmp
sarb
add
iret
and
mov
adc
xor
gs
adc
sub
iret
push
mov
mov
or
js
inc
popw
ljmp
in
cmc
add
and
mov
pop
pop
movsl
push
insl
or
mov
xchg
clc
jmp
push
daa
js
nop
mov
inc
xor
and
frstor
cmp
lods
or
or
lahf
add
jl
and
clc
xor
scas
jae
pusha
bound
mov
xlat
mov
inc
sub
or
lret
add
insl
dec
or
sub
gs
inc
aaa
pusha
imul
pop
loop,pn
nop
cltd
pop
cmp
or
or
and
add
hlt
out
inc
in
clc
pusha
add
jmp
xorl
std
sub
and
mov
in
in
hlt
scas
rolb
mov
cwtl
ljmp
lock
in
xchg
cmpsb
jge
outsb
inc
push
xor
ds
pushf
add
push
out
outsl
pop
dec
cwtl
mov
push
xor
sub
pop
xor
and
nopl
adc
fmuls
jns
enter
loope
dec
and
or
inc
lock
push
movsb
daa
or
push
outsb
cmp
repnz
and
and
xor
or
adc
les
cmp
out
popa
inc
sub
popf
mov
add
mov
mov
pop
nop
xor
inc
movsb
arpl
arpl
aaa
dec
jno
sub
in
or
push
inc
sub
xor
sahf
and
in
call
in
or
scas
add
loop
push
inc
in
push
push
and
inc
lods
pop
and
add
mov
rolb
rcll
outsb
dec
xchg
flds
pushl
loopne
ret
jge
adc
ds
pop
daa
mov
add
fisubrl
dec
adc
adc
dec
jae
dec
jl
adc
clc
mov
jmp
mov
loope
or
sub
mov
aam
aam
mov
add
or
sub
sbbb
pushaw
lea
mov
sbb
movsb
dec
neg
xor
mov
neg
xchg
rolb
in
dec
adc
sbb
in
lret
loopne
pusha
mov
sti
jmp
ja
shll
arpl
lret
add
cli
ss
push
cmp
das
add
xor
or
sub
sub
mov
or
insb
dec
daa
add
cmpsl
lds
sbb
out
jg
stos
and
and
and
and
popa
insl
shll
punpckhbw
push
sbb
sub
mov
sub
out
mov
mov
mov
pop
add
mov
and
sub
adc
mov
sbb
movsl
lock
jno
jo
mov
push
cmpsl
push
mov
mov
xchg
inc
cwtl
loope
adc
or
sub
inc
lods
movsl
iret
and
sar
xchg
sarb
mov
xor
push
xchg
add
adc
adc
adc
sbb
clc
inc
sbb
jno
cli
xchg
scas
andl
gs
or
mov
enter
adc
ret
jecxz
addr16
lods
add
sahf
adc
popa
bound
pop
or
adc
mov
daa
cmc
push
sbb
adc
mov
or
fsubl
jae
mov
add
add
insl
inc
mov
add
mov
add
out
cmc
push
mov
pop
cmp
or
shlb
movsb
cmpl
scas
add
fdivl
add
pop
out
or
mov
fs
and
push
jne
dec
inc
jp
and
and
dec
mov
lcall
lret
and
stos
inc
push
mov
pop
push
test
mov
inc
lods
xor
inc
mov
pop
imul
cmp
xchg
andl
sbb
mov
mov
data16
push
inc
add
cmp
cmp
scas
lea
dec
fdivp
stos
jb
push
dec
push
push
pop
inc
dec
jg
push
test
and
jge
or
jmp
push
rcll
xadd
in
rcrl
fisttpl
je
aaa
adc
and
into
pop
or
decb
sbbl
add
xchg
mov
mov
mov
or
mov
adc
or
orb
pop
dec
adc
inc
shrd
push
xchg
and
paddw
inc
addl
mov
andb
sub
xchg
jmp
negl
xchg
and
or
pop
inc
out
or
cmp
loop
out
adc
xor
mov
cmp
sbb
loope
xchg
sub
pop
sbb
and
imul
cmp
int3
insb
inc
push
mov
push
jl
lcall
or
movsw
cmp
pop
push
cmp
and
das
mov
pushl
and
sbbl
pusha
imul
aaa
addb
or
rorb
mov
test
pop
test
dec
cmp
je
add
in
adc
add
mov
xor
and
daa
sbb
outsb
sbbl
jmp
jns
aaa
test
popa
pop
and
addr16
ret
and
and
and
inc
jl
xchg
jmp
aaa
mov
cs
and
test
das
aam
add
jl
sbb
add
and
loop
pop
in
loop
jg
movsb
inc
sbb
or
cmpsl
stos
push
push
xor
cmc
sub
jb
jo
and
xor
xchg
cld
and
push
jle
sub
call
add
and
stos
and
pop
movsb
dec
xor
or
scas
js
je
and
xor
push
scas
xchg
bound
adc
adc
cwtl
ja
push
add
or
push
adc
push
dec
xchg
out
mov
mov
sbb
insl
or
xor
popa
xor
add
mov
dec
pop
mov
js
sbb
xchg
mov
add
fsubl
push
cmpsl
es
inc
push
push
sbbb
fmuls
push
pop
or
push
cmp
cmp
xchg
mov
in
sub
iret
imul
inc
mov
cmpb
cmpl
xor
and
lods
orl
pop
add
test
lds
add
push
push
adc
mov
rcrl
jecxz
mov
fcmove
sub
dec
rolb
xchg
ljmp
mov
push
xchg
cs
xchg
cmp
xor
lock
inc
jo
icebp
add
xorl
mov
hlt
pusha
mov
je
popa
test
mov
inc
inc
stc
lock
cld
jne
shrb
and
pop
addr16
shlb
adc
insb
fadds
adc
mov
test
xor
mov
mov
gs
push
cmp
pop
mov
jmp
xchg
mov
mov
inc
pop
push
mov
sbb
ret
xlat
pusha
jmp
cmp
jecxz
ss
sub
push
jmp
aaa
jbe
push
inc
cli
lahf
insl
gs
inc
jge
mov
lea
and
cmp
sbb
fldl
push
insl
jne
call
sbb
aaa
sub
adc
je
subl
or
pop
pop
inc
fimuls
sub
add
outsl
jle
pop
sti
and
mov
mov
and
outsb
inc
rorb
xchg
fs
sbb
pop
mov
mov
lret
in
xadd
cmp
loop
js
das
xchg
xor
jae
push
pusha
dec
imul
adcb
jne
rcrl
or
jmp
enter
addl
dec
sub
push
jb
adc
sub
roll
mov
push
shrb
inc
pop
pop
stc
push
js
imul
lods
in
dec
je
xor
shrb
jo
mov
aam
ret
filds
push
adc
ljmp
sbb
jne
xchg
inc
std
cmc
or
xchg
cmpl
xor
push
xor
sbb
cmp
sbb
mov
mov
fisubs
jae
cmovns
mov
adc
or
pop
sbb
or
mov
cmp
pop
in
insb
sub
mov
nop
out
inc
mov
ret
cmpl
xor
add
adc
mov
and
inc
xchg
outsw
jns
add
jo
push
and
pushf
ja
or
mov
mov
mov
adc
test
test
mov
mov
in
nop
mov
or
imul
add
dec
adc
mov
imul
outsb
adc
lods
push
and
dec
popa
pop
mov
or
loopne
mov
add
push
jp
call
popa
xchg
pop
and
pop
cmp
sti
and
xor
xchg
jae
sub
sbb
xchg
popa
inc
loopne
mov
add
mov
cmpb
sub
icebp
test
lcall
imul
pop
push
pop
sbbb
cmpsl
test
and
adc
push
dec
mov
dec
add
je
inc
jno
or
mov
inc
cmpsl
adc
outsl
subb
add
ss
add
subl
andl
loopne
cmp
pop
inc
inc
and
xchg
adc
out
push
pop
sub
pop
bound
dec
ljmp
mov
fwait
or
test
negb
pop
sbb
jle
lret
or
mov
inc
push
cmp
cmp
sub
jmp
mov
add
aam
scas
inc
pop
sbb
adc
add
cwtl
ds
inc
or
mov
push
adc
mov
push
and
iret
mov
or
sarb
test
pop
dec
rcrl
mov
loopne
outsl
cmp
mov
fdivrl
push
push
xor
sbb
cmp
call
pop
addr16
jo
in
mov
adc
push
enter
into
daa
push
inc
imul
xor
pop
pop
xchg
and
and
cmp
loope
je
push
jne
push
add
or
mov
push
add
cmpsb
pop
push
push
aaa
jo
divb
mov
dec
adc
pop
mov
push
xchg
insb
cld
addb
or
push
and
push
and
test
jmp
mov
test
inc
outsb
sbb
imul
mov
loope
and
scas
je
pop
pop
lahf
loop
jle
or
cmp
iret
adc
lret
jmp
fildl
jb
adc
sub
and
or
sbb
decb
xchg
andl
mov
push
and
outsb
inc
or
dec
ljmp
jne
das
push
sbb
jg
ficompl
push
insb
or
or
aam
inc
mov
or
daa
mov
cmp
gs
outsl
cmp
sbb
add
sub
pop
xchg
mov
jne
adc
out
inc
add
push
mov
cli
mov
sub
pop
add
dec
mov
pop
ds
es
mov
sbb
xor
pop
mov
sbb
aas
pushl
das
gs
inc
sub
xlat
shll
xchg
inc
mov
and
test
pop
adc
or
pop
sub
add
xorb
dec
adc
or
sub
pop
push
push
dec
in
pop
leave
das
add
pusha
jle
sarl
inc
jmp
cmpsl
sbb
push
dec
cmp
aaa
push
sub
push
adc
push
mov
mov
mov
or
push
mov
lods
adc
mov
aaa
mov
inc
and
xchg
cld
jns
mov
enter
imul
xor
pop
or
xor
pop
pop
dec
dec
sbb
insl
pop
pop
and
daa
push
or
xchg
addb
add
xor
xchg
enter
outsb
inc
xchg
pushf
or
mov
sbb
xchg
add
jle
cmp
dec
inc
dec
lret
add
dec
call
add
outsl
orb
xchg
push
clc
mov
cmpsl
test
dec
int3
in
add
pusha
or
adc
addb
loopne
imul
in
adc
imul
mov
stos
adcl
loope
addr16
xchg
pop
mov
and
push
cli
mov
out
inc
andl
lock
xchg
sbb
mov
xorl
cld
stos
movsb
movsl
outsl
pop
mov
inc
and
nop
lahf
add
adc
push
pop
subl
pop
jb
sbb
es
add
andb
shlb
adc
insl
bound
sbb
clc
push
add
aas
xchg
jo
pop
mov
test
push
in
cs
movsl
popf
mov
fnstcw
xlat
jmp
adc
and
ret
enter
mov
xchg
mov
push
das
adc
jmp
adc
and
xchg
movsb
cmp
inc
movsl
stos
mov
outsl
cmova
imull
test
stc
jmp
into
rcrl
mov
or
mov
inc
into
je
out
fwait
cmp
or
je
in
cmpsl
add
add
je
push
adc
stos
push
xchg
adc
or
pop
mov
mov
jge
or
adc
inc
shlb
gs
and
es
scas
inc
and
lea
xor
adc
mov
xchg
mov
inc
mov
xor
pop
inc
jmp
loope
mov
sahf
jbe
inc
shrb
sbb
jge
fucomp
add
movhlps
add
fdivrs
sbb
jge
add
pop
add
out
call
adc
sub
ja
sahf
fs
push
push
lds
jnp
fs
push
inc
les
dec
js
lea
jno
es
insb
dec
dec
pop
mov
mov
mov
and
push
or
fwait
cmp
mov
jne
mov
jle
shl
pop
dec
cmpsl
mov
mov
adc
cmp
in
cs
std
mov
lods
mov
add
pop
or
mov
sbb
jmp
and
dec
jnp
fs
adc
sbb
mov
insb
adc
jge
mov
ret
mov
ss
lldt
xchg
xchg
cmp
dec
call
sbbb
jne
fisttpll
or
and
sub
fisubs
xchg
cltd
mov
cmpl
add
addr16
add
int
loop
subb
sub
cmp
lds
dec
adc
and
inc
pop
imul
movl
push
xchg
sub
frstor
push
nop
and
mov
or
push
and
sub
and
sbb
loop
rclb
pop
cmpl
imul
sbb
dec
dec
dec
ret
sub
mov
pop
rorb
sub
cmp
sti
push
dec
aaa
cmpl
mov
in
or
rolb
test
cmp
insl
sbb
into
rorl
adc
add
mov
xchg
iret
add
adc
mov
cmp
xor
imul
mov
mov
cmpl
aam
add
out
je
dec
jp
hlt
jnp
mov
arpl
pop
mov
loopne
jbe
stos
jns
shlb
jo
nop
jge
push
push
icebp
cmp
insl
adc
outsb
adc
imul
mov
adc
fisubrs
inc
lock
push
cmp
sub
add
jl
push
ret
cmp
daa
fmul
xchg
push
mov
ficoml
add
xchg
orl
aam
aam
rcrb
add
in
xchg
inc
arpl
xchg
add
rorb
out
jne
or
push
leave
shl
cmpsl
in
sbb
out
pop
pop
jp
xor
dec
and
jmp
add
cmpsl
xor
andb
xor
popa
out
bnd
xchg
jnp
in
imul
inc
test
arpl
inc
adc
call
xor
or
adc
dec
int3
dec
fisttpl
imul
outsl
mov
mov
lcall
inc
jo
jecxz
adc
sub
pop
sub
pop
or
mov
cmpsb
mov
and
jnp
xchg
arpl
cltd
sub
cmpsl
scas
ds
mov
ss
push
inc
popa
sbb
sub
sub
jmp
cmpsb
pop
mov
xchg
leave
cltd
push
jp
pop
adc
pushf
movsb
in
pop
fcmovnbe
nop
push
mov
cwtl
outsl
or
cmp
inc
mov
adc
mov
out
add
test
adc
adc
dec
mov
out
sti
pop
imul
shll
arpl
dec
pop
sbb
jne
fdivrs
pop
xchg
sbb
push
das
fcom
imul
mov
jmp
push
ja
sbb
adc
mov
inc
fs
adcl
mov
int
adc
mov
pop
scas
push
push
movsl
gs
adc
mov
add
xor
lods
xor
ja
dec
pop
or
dec
push
pop
movl
mov
inc
mov
je
push
addr16
push
adc
xorb
sbb
movsb
int3
xchg
xor
fisttpl
pop
push
dec
mov
pop
mov
pop
and
icebp
mulb
aad
outsb
xchg
xor
enter
dec
lock
rcrb
and
xor
jmp
dec
call
out
outsl
mov
ss
mov
dec
pop
mov
cmp
rorl
or
daa
push
insb
adc
ret
push
scas
repnz
imul
in
mov
or
pop
lds
imul
xchg
mov
popa
aam
xchg
push
push
or
mull
jecxz
mov
add
rol
hlt
jl
inc
mov
imul
push
mov
dec
or
sbb
das
push
mov
mov
cmp
push
inc
adc
fwait
jmp
lcall
clc
inc
jle
rolb
insl
add
jne
add
pop
push
pop
add
inc
push
xchg
nop
cmp
jne
sti
xchg
adc
cwtl
imul
pop
adc
adc
dec
lret
mov
push
and
pop
icebp
or
andb
sbb
adc
add
out
clc
xchg
and
movl
aas
sbb
popf
adc
sub
pop
enter
lea
leave
and
test
xchg
or
sbb
gs
and
adc
pop
aaa
iret
cmp
inc
xor
fnsave
cmpl
pop
inc
dec
movaps
inc
add
or
out
add
inc
add
jp
or
ret
cli
xchg
test
mov
cmpsl
pop
out
lret
dec
jmp
and
cmpsb
add
and
mov
aam
xchg
cmp
adc
pcmpgtd
ret
scas
daa
outsb
cmpsl
add
or
mov
push
aam
sbb
sub
push
push
and
pushf
inc
aad
ss
xchg
xchg
hlt
lret
loopne
arpl
cs
scas
adc
push
daa
adc
repz
cmpb
cwtl
fdivs
sub
push
rep
jo
push
xchg
jle
mov
inc
jecxz
ss
les
dec
push
inc
xlat
lock
aaa
lret
lods
ret
mov
es
mov
in
sbb
adc
cltd
dec
inc
cmpsl
imul
adc
or
jb
sub
shrb
add
and
lods
inc
jb
lea
movb
jmp
dec
lock
lcall
dec
cmpb
ss
xchg
loopne
xor
sbb
sub
mov
add
and
cmp
movsl
loop
pop
shlb
push
cmp
inc
pop
into
dec
lahf
inc
xor
add
mov
and
push
adc
arpl
cs
clc
dec
call
repnz
dec
inc
jecxz
enter
leave
add
sbb
pop
adc
lds
lds
push
xor
aam
and
in
sub
fstl
pop
push
cmp
aas
mov
lods
pop
add
mov
jae
adc
out
into
rolb
xchg
dec
dec
shrb
movb
jne
outsb
adc
addr16
push
mov
push
cmp
cmp
test
mov
sub
push
fisubs
fyl2xp1
in
mov
add
xor
sub
aam
dec
dec
repz
sbb
cmpsl
mov
mov
loope
jp
out
out
fcomp
add
mov
push
jmp
pop
mov
or
jmp
cmpsb
dec
jecxz
sub
loope
jo
fnsave
pop
sub
push
mov
xlat
test
cmp
testb
sub
sub
pusha
xchg
pop
dec
out
scas
pmulhuw
rol
clc
and
mov
dec
add
divps
jo
adc
imul
enter
fstl
or
outsl
lock
cmpsl
mov
jb
dec
lods
stos
or
inc
jg
je
push
frstor
mov
adc
add
jge
mov
adc
add
or
enter
and
add
push
imul
icebp
stos
lds
add
sub
addr16
inc
roll
std
jge
sub
mov
test
fbld
in
or
add
subb
cmpb
xor
mov
xor
jbe
popa
movsb
rol
xchg
divb
dec
jne
adc
mov
jne
jae
dec
das
push
cli
pop
dec
push
xchg
sub
lea
test
or
or
inc
push
dec
dec
inc
and
dec
sub
outsb
dec
dec
and
or
mov
jo
push
dec
xor
add
push
pusha
imul
cmp
or
sbb
add
shl
jp
sbb
xchg
sbb
lods
jg
push
shlb
xor
addr16
or
test
mov
push
jg
insb
jle
mov
jae
pop
aad
and
outsl
push
inc
add
in
or
pop
call
jne
cmp
xchg
sub
lods
lret
out
jle
sub
bound
insl
lods
mov
or
jge
fsubrl
push
inc
or
fsubl
popl
loop
in
pushf
mov
adc
gs
inc
xor
nop
out
push
adc
subb
xchg
movsl
cmovne
xchg
pop
mov
xor
and
xchg
stos
inc
scas
test
daa
stc
dec
rorb
jl
cmp
xchg
stos
xchg
or
rclb
test
add
xor
addr16
inc
pop
shlb
setge
mov
test
lahf
mov
xor
movsb
push
cli
daa
cwtl
mov
fidivs
sub
add
jne
ljmp
jmp
mov
cmc
imul
iret
add
and
cmp
sub
push
clc
pop
xchg
and
int3
je
jl
push
and
add
mov
shll
lods
cltd
popf
add
or
mov
dec
adc
adc
push
and
int
jecxz
es
cmp
mov
dec
sar
ret
aaa
mov
out
xor
loopne
jo
sar
jns
adc
jmp
test
lret
xchg
lods
insl
xor
addr16
les
or
jle
mov
xchg
lock
push
jne
into
dec
push
sub
inc
cli
or
cmp
rolb
ret
add
popa
or
add
jne
mov
xor
sub
cmp
adc
fnstenv
jmp
dec
addr16
xor
mov
pusha
adc
and
js
das
push
push
and
push
and
pop
sbb
adc
and
les
inc
push
ret
push
movsb
arpl
rorb
inc
mov
pop
dec
lock
hlt
sbb
cmp
lea
ss
adc
sub
push
dec
mov
js
into
add
or
adc
test
adc
ret
roll
psubusb
ljmp
aam
sub
jg
in
sbbb
mov
cwtl
sbb
insb
mov
jmp
or
xchg
adc
adcb
add
ds
push
je
push
mov
cmp
fldt
movsb
cmp
cmp
add
stc
push
cmc
shrb
adc
cmpsl
and
rclb
jmp
das
inc
inc
andb
lea
push
iret
sbb
mov
and
incb
pop
xlat
sbb
fildl
lods
sbb
andb
mov
sub
jbe
aam
dec
pop
xor
mov
mov
in
loope
and
popa
add
sbb
aaa
adc
lods
adc
iret
adcb
inc
out
mov
imul
push
or
popa
loope
mov
and
or
aaa
enter
imul
push
movsl
xchg
or
push
cmpsl
xchg
test
movsb
outsl
dec
out
cli
adcl
loope
test
adc
jns
into
dec
adc
dec
jmp
or
aam
lods
fwait
xor
cmp
rorb
cwtl
jmp
les
xor
sbb
cld
xchg
lock
sbb
adcl
mov
mov
insb
jl
add
xchg
pop
lcall
add
adc
stos
pop
add
in
sbb
add
or
and
mov
dec
ja
scas
adc
sbb
and
lcall
adc
and
adc
call
nop
test
jns
loopne
bound
sbb
and
sbb
adc
jne
jno
mov
stc
or
xor
sbb
sub
std
shll
and
adc
imul
imul
fildl
mov
cs
add
icebp
pop
test
add
inc
inc
stos
es
and
or
scas
popf
sbb
push
add
loopne
mov
inc
xor
sbb
fiadds
pop
or
ljmp
daa
xchg
test
fucomi
push
pop
or
mov
dec
ret
jb
test
mov
adc
inc
sub
or
bound
scas
cmpb
sbb
stos
andl
or
or
int
sub
add
add
pop
sub
cvttps2pi
sbb
inc
fwait
movsb
or
orb
xchg
faddl
addl
push
sahf
mov
add
pop
sbb
movsb
lea
lret
aam
subl
pop
jge
and
or
das
xor
std
add
adc
add
out
xor
inc
adc
push
mov
into
popa
pop
jl
dec
popa
mov
add
cmp
pop
pop
add
or
js
push
popa
cmp
or
pop
xchg
iret
lock
or
push
jae
xchg
sbb
popa
insl
cmp
inc
mov
sub
mov
imul
inc
sub
pusha
xorb
add
push
jl
dec
push
xchg
aad
pop
inc
rcr
fdivrl
and
add
push
cmovno
sub
hlt
xor
and
add
mov
adc
jmp
cwtl
dec
add
push
push
lret
xchg
sub
movsl
jae
pop
push
push
bound
dec
insb
adc
mov
add
js
sbb
pextrw
in
lods
ret
mov
pop
dec
add
cmp
sub
ljmp
push
or
sub
clc
push
adc
xrelease
mov
pop
jecxz
ret
xchg
sbb
adc
xchg
pop
and
add
cmp
ljmp
sub
mov
and
push
ds
pop
xor
push
test
or
insl
testl
adc
push
xor
enter
pop
mov
loop
das
xchg
push
xor
jbe
imul
loope
mov
sbb
or
jne
les
cs
aaa
push
mov
pusha
or
adc
jns
sbb
or
push
mov
sbb
dec
inc
fadds
icebp
push
icebp
xchg
adc
fs
fs
and
push
add
cmp
push
les
cmpb
pusha
repz
push
mov
decl
popa
add
and
adc
fstl
cmc
mov
filds
pusha
lods
add
dec
mov
or
lds
jle
mov
and
inc
xchg
xchg
mov
adc
cmp
sub
inc
sbb
into
orps
cmp
nop
push
sub
xor
fiadds
jo
inc
cmp
xorl
call
js
sub
out
mov
sub
cmp
gs
mov
cmp
syscall
ret
sub
cmp
cmpsl
xor
andps
arpl
rcrl
jp
rclb
push
inc
add
push
add
xor
fcoms
jo
enter
dec
or
sbb
push
addr16
xchg
scas
sub
ds
mov
daa
add
sti
movsl
push
add
push
insb
xchg
lret
jnp
test
test
push
add
cmpl
push
fs
insl
push
negl
pop
xlat
mov
aas
xor
add
cwtl
mov
adc
pop
idiv
inc
push
sbbb
push
test
xchg
sub
mov
adc
sti
ja
out
loop
and
enter
pusha
leave
cmp
inc
jge
pop
push
ss
loopne
ret
mov
sub
dec
iret
inc
push
dec
sbb
xor
ret
shlb
loopne
add
or
aaa
clc
or
lret
pop
cmp
mov
imul
out
push
das
inc
cwtl
or
mov
sbb
fimull
es
fstl
or
insl
rcrl
pop
xor
fwait
pop
fisttpll
mov
cmp
dec
add
fsubr
or
mov
ficoml
pop
add
pusha
xchg
pusha
repnz
dec
cmpsl
jo
das
neg
pop
test
jl
jae
inc
cmpsl
lock
jle
xor
pop
leave
nop
cmp
sbb
inc
sbb
xor
je
cmovg
rorb
and
aaa
pop
sbb
cmp
sbb
adc
xchg
je
adc
lahf
ficoml
inc
dec
and
rorb
lods
add
test
mov
fcoml
inc
testl
fisubl
push
and
rorl
add
cmpl
pop
mov
inc
inc
mov
enter
orps
ficomps
aam
daa
popf
add
xchg
lods
sbb
pop
add
sbb
ret
jp
mov
lea
test
or
mov
cltd
cmp
and
sub
mov
gs
sub
cmp
inc
sbb
inc
xchg
mov
fldl
adc
mov
insl
mov
mov
sub
loop
ret
ja
lock
mov
push
sub
cmpsb
out
mov
xor
dec
loope
cmpsl
xchg
cmp
sbb
sbb
lods
cltd
nop
mov
cwtl
nop
or
xchg
inc
pop
push
jge
xchg
xor
es
daa
fimull
mov
mov
add
xchg
lahf
and
notl
imul
mov
addl
inc
xchg
imulb
adc
cmp
push
dec
cmp
cmp
xor
pop
dec
xchg
pop
dec
pop
jmp
lds
xchg
mov
lock
pop
pusha
stc
push
sbb
sub
push
ret
ret
pop
dec
xchg
pop
jb
dec
dec
dec
cmp
rolb
testl
xchg
pop
sbb
rcrl
pushf
push
push
mov
push
pop
add
dec
mov
mov
jg
aaa
push
sub
inc
push
test
fcomps
lea
jo
arpl
mov
je
cmp
jecxz
xchg
cs
fiaddl
cmpsb
outsl
fmull
ret
adc
rep
insl
loopne
movsl
dec
icebp
sbb
mov
xor
add
pop
out
cmp
das
pop
xchg
inc
shlb
pop
lahf
scas
insl
cmp
daa
inc
pusha
mov
fnstcw
out
jl
or
jle
inc
lods
mov
mov
repnz
loop
xchg
or
inc
scas
insl
lods
inc
push
dec
lret
addr16
mov
pop
pop
xor
scas
ss
cltd
decb
or
test
adc
fs
cmp
and
dec
insb
jne
sub
push
push
and
in
inc
out
pop
mov
xchg
test
sbb
imul
push
sub
call
push
pop
push
mov
add
mov
cmpsl
pop
mov
ja
adc
pop
cwtl
dec
cwtl
outsb
add
mov
push
push
popa
ja
sbb
sarb
xchg
adc
inc
loopne
inc
or
lods
mov
lock
add
jge
mov
test
add
std
fdivs
cmp
sbb
ss
mov
lods
pop
roll
orl
mov
mov
imulb
cmp
mov
jne
cmp
lea
add
pop
shl
mov
xchg
sub
cmp
jne
out
jno
sbb
rcll
out
addl
negb
mov
inc
and
ret
or
mov
add
jno
and
pop
aaa
lods
test
shll
js
insb
das
or
iret
mov
push
add
lahf
data16
xchg
ds
aas
lret
mov
das
cmpl
pop
pop
xor
or
pop
lahf
aas
push
add
lret
and
cli
push
mov
dec
mov
mov
cmp
cmc
adc
jne
es
bound
sarl
add
cmp
je
add
mov
divb
pop
movb
aas
or
mov
push
incb
stos
jo
cmp
jne
movl
lds
loopne
rclb
mov
push
and
inc
sub
inc
dec
pop
inc
data16
insb
add
sub
inc
jge
orb
push
incl
dec
or
adc
sbb
test
cmp
pop
fwait
les
and
and
sub
or
mov
or
cmp
movl
es
rolb
xorb
and
and
lods
pop
adc
roll
cmpb
and
rcr
xor
mov
inc
cmp
inc
or
pop
loope
inc
shlb
mov
and
faddl
xor
mov
in
adc
add
jle
pushf
xor
js
cmp
pushf
addb
arpl
jmp
jae
add
imul
fldt
sbb
sub
pop
dec
inc
nop
cmp
addr16
mov
sbb
inc
xchg
mov
dec
dec
scas
pop
or
cmp
mov
aas
adc
sub
jmp
jecxz
xchg
out
pop
fs
mov
mov
mov
ds
andb
cmpsl
in
push
rolb
sub
jne
push
adcb
xchg
std
mov
test
xchg
movsb
out
cmp
sub
pop
mov
inc
int
xor
scas
jl
push
sbb
xor
inc
imul
cmp
sub
dec
cmp
inc
inc
jbe
pop
sbb
xor
jecxz
or
sub
jo
pushf
shlb
xchg
mov
leave
ret
push
orb
jne
push
lahf
xchg
jb
cs
or
pop
mov
mov
je
adc
add
bound
hlt
or
iret
repz
inc
push
pop
sub
rolb
xchg
dec
push
sub
rorb
or
xor
lock
fiaddl
pop
add
sbb
mov
imul
loope
clc
hlt
mov
or
popf
xor
inc
or
cmp
mov
fisttpl
cmp
dec
inc
popa
sarb
and
pop
lock
inc
call
subb
rcrb
arpl
cmova
dec
sbb
and
int3
pop
hlt
je
clc
nop
xchg
push
negb
adc
and
jno
push
jo
adc
cmp
shlb
jne
sub
sbbb
mov
jnp
rcrb
push
jo
add
mov
jo
dec
mov
popa
jge
jo
mov
clts
cwtl
add
or
lcall
add
daa
lahf
mov
add
lahf
int3
xlat
or
stos
test
maxps
add
add
sbb
cmp
movsl
decl
inc
je
sbb
dec
inc
cmp
rolb
sbb
in
jae
xchg
imul
xchg
mov
out
xchg
push
in
out
lds
add
jecxz
dec
xor
nop
sbb
xchg
fs
mov
bound
lret
es
and
test
add
daa
add
xchg
jno
ljmp
cwtl
ret
jmp
xchg
subl
cmp
int
adc
dec
xor
dec
aam
out
imul
jg
lock
jmp
cmpl
daa
movsb
inc
ss
sbb
jo
pop
nop
ret
adc
ret
or
iret
adc
or
or
xchg
movsb
pop
xor
add
test
clc
stc
loopne
pop
pop
mov
in
push
arpl
test
add
add
dec
push
pop
sti
xor
out
push
lods
bound
adcb
push
jbe
dec
mov
mov
sbbl
roll
and
pop
lcall
sbb
mov
fwait
mov
loopne
cmp
leave
int
sbb
je
pop
push
add
xorl
mov
sbbb
add
lea
pop
sub
ljmp
pop
mov
push
aaa
push
push
add
xor
pop
or
or
pop
cmp
sbbb
movb
dec
dec
idivl
cwtl
jp
mov
add
into
sbbb
push
adc
movsl
pop
lret
sahf
mull
xlat
jg
pop
sub
jmp
pushl
mov
mov
pop
xchg
clc
movsl
mov
dec
das
pop
sar
mov
negl
xchg
jo
dec
in
mov
pop
outsl
js
push
fcoms
lods
scas
push
in
jecxz
and
pop
call
and
insl
sbb
movsb
dec
jne
jb
jb
lds
shlb
shl
cmpsb
mov
cmp
or
data16
jne
pop
movsl
insl
ss
and
and
xor
int
pop
xor
aam
inc
xor
xor
push
and
test
movl
sbb
js
fsubrl
jns
mov
and
or
fcoml
xchg
out
mov
pop
mov
inc
cmp
imul
push
testl
jmp
sahf
fdivl
shlb
or
ficoml
inc
pushf
jl
push
mov
push
add
cmp
push
lea
mov
or
jp
rorb
test
adc
movsb
inc
cmpsl
cs
cwtl
insb
or
push
rcll
or
inc
push
data16
push
jo
push
xchg
iret
inc
pop
add
dec
test
int3
cld
cmpsl
sub
rcrb
jp
dec
inc
dec
dec
dec
inc
dec
dec
icebp
pop
sub
lods
ret
fldl
push
dec
stc
or
mov
cs
in
or
mov
inc
or
or
fldl
dec
sbb
xchg
adc
cmp
push
cmp
faddl
dec
pop
push
jecxz
dec
push
and
sti
add
in
pop
das
in
push
mov
das
or
add
call
cmp
push
or
mov
sub
push
sahf
inc
dec
sub
mov
int
addb
shlb
ficoml
cwtl
popa
push
rcrl
and
and
aam
icebp
mov
inc
sti
cmpsb
mov
xorb
add
add
inc
inc
xor
movsb
xchg
les
or
sbb
or
subl
mov
xchg
cmp
pop
fldt
lret
inc
test
and
sbb
shlb
dec
lods
pusha
insl
inc
xor
dec
adc
inc
adc
in
and
popf
dec
jbe
xchg
sbb
es
repnz
mov
jg
xor
sbb
sub
popa
adc
xor
lods
movsb
adc
sbb
adc
sub
stos
sbb
inc
adc
add
fs
fwait
jge
jne
push
insb
inc
ss
sbb
add
xchg
scas
add
aaa
add
pushl
pop
fnsave
mov
cmpb
push
je
add
mov
mov
or
data16
scas
nop
xchg
mov
mov
subb
loopne
pop
dec
mov
or
jbe
jnp
inc
lods
add
bound
imul
adc
push
xchg
inc
pusha
mov
and
sbb
addl
xor
test
add
cmp
jmp
push
inc
pop
or
icebp
dec
movsl
aad
std
inc
orb
orl
or
or
leave
dec
xor
xor
mov
aam
in
mov
or
jno
add
sbbl
ja
inc
lea
mov
add
xchg
inc
jbe
loope
insb
dec
mov
pop
fiadds
incb
nop
pop
xchg
shlb
lock
sub
cmpsl
jle
and
inc
cmp
loope
pushl
fsubrs
pop
jg
cwtl
xchg
mov
sub
fbstp
add
pushf
insl
inc
sbb
dec
adc
and
inc
test
dec
punpckhwd
loope
xor
js
or
xchg
sub
mov
sbb
pop
aad
pop
xor
mov
jne
cs
or
inc
push
cmpl
jne
pop
shlb
mov
xchg
fstps
popf
cs
cltd
or
nop
dec
das
adc
addl
das
dec
nop
sarl
mov
faddl
insl
mov
int
fistpl
mov
inc
shrb
and
sar
push
rolb
inc
or
in
and
ja
dec
mov
pushf
push
dec
das
clc
mov
xor
mov
dec
sbb
sbb
push
xor
add
xchg
sti
mov
inc
shll
xor
jg
lock
int
cld
or
js
dec
sbb
cmpb
add
mov
popa
cmpsb
or
add
or
mov
jne
mov
lods
popa
daa
mov
or
sbb
movsb
push
ficomps
mov
or
xlat
in
imul
add
and
push
push
roll
jbe
add
add
mov
dec
mov
lock
inc
ja
fimull
bound
dec
inc
ret
mov
pop
sub
adc
shlb
dec
repnz
xchg
ss
mov
or
les
jns
inc
xor
or
mov
mov
lock
pop
jb
inc
scas
je
aam
cmp
dec
push
add
adc
xor
push
shrb
out
adc
jnp
hlt
add
in
test
daa
pop
ret
in
sahf
test
enter
sbb
das
add
jg
mov
adc
pop
pop
push
fstps
add
sbb
sub
dec
add
movsb
xchg
add
add
or
sbb
xchg
sub
cmp
shl
pop
jb
insl
pusha
or
cmpsb
sbb
inc
ss
add
pop
cltd
lret
imull
sbb
add
pusha
jge
addr16
lret
xorl
pop
shlb
addb
mov
inc
insb
dec
sub
mov
shl
or
inc
add
testb
mov
or
shlb
sub
xor
mov
xchg
inc
pop
scas
movl
sub
push
xor
rcrb
lcall
sub
jne
pop
addb
pop
ret
pop
jae
and
mov
rclb
je
pop
sub
mov
stos
shl
pop
add
inc
add
cmp
sub
js
mov
sub
in
daa
xorl
cmp
fsts
in
mov
sahf
mov
sub
or
add
ret
mov
call
xchg
sbb
push
mov
adc
pushf
cmp
or
sbb
jmpw
xlat
sbb
xchg
popf
cmpsb
jp
arpl
ja
mov
inc
loop
sbb
and
mov
or
sub
xchg
jb
leave
adc
sub
add
adcl
jae
xor
ret
adc
sub
inc
xchg
sbb
xchg
push
outsl
lods
jnp
and
cmp
jae
jp
and
icebp
adcb
or
sub
push
fsubrl
xor
sub
xor
movsl
sbb
mov
dec
fs
lds
ds
xchg
xlat
andl
jno
imul
into
scas
inc
ljmp
pop
push
pop
das
les
xchg
xchg
ret
xor
jmp
arpl
jmp
push
dec
sahf
adc
in
mov
addl
shlb
and
push
testl
pop
cmp
add
push
rclb
or
or
mov
push
loopne
test
dec
adc
and
lods
mov
loope
push
jle
jne
imul
and
icebp
and
je
add
pop
xchg
cmp
fcoml
inc
sbb
fmul
shrl
xor
mov
nop
lds
sub
cmpsl
ret
jmp
sbb
dec
loopne
jno
mov
push
cmp
andl
pop
test
xor
roll
shll
adc
xlat
or
mov
jl
movsb
rcll
je
dec
scas
or
add
lods
mov
cmpsl
and
mov
mov
rclb
addb
and
ficoml
mov
int
fs
nop
in
aad
pusha
dec
popa
pusha
sbb
sub
inc
cmp
or
xlat
or
shlb
aad
add
cmp
jnp
pop
loope
ret
rcrb
jmp
push
js
dec
test
por
popf
int
mov
sti
sbb
jne
mov
cmpb
or
test
jo
mov
pusha
xchg
and
or
call
sub
push
ljmp
into
fs
sub
mov
xor
inc
add
adc
imul
pop
cltd
dec
add
and
ds
sbb
xorb
and
inc
incl
jbe
hlt
jb
xchg
xbegin
add
mov
loope
testl
lock
sbb
aaa
xor
test
nop
or
lea
mov
fstps
mov
or
jnp
inc
pop
add
sahf
or
pop
pop
cmp
icebp
jge
push
xchg
js
inc
dec
mov
adc
pop
push
scas
test
rclb
scas
cmpsl
cli
dec
mov
adc
je
mov
mov
fcmovu
mov
das
mov
test
fdivrs
test
test
inc
jnp
and
cmp
push
mov
push
or
movsl
jecxz
add
loope
push
mov
sub
sub
push
jge
or
adc
jl
cmp
mov
sub
decb
cmpl
mov
fstps
jl
or
adc
xchg
or
pop
xchg
inc
jp
jmp
daa
dec
and
pusha
sbb
lods
jo
mov
and
sbb
mov
jns
jmp
push
push
or
loopne
lods
ret
or
ret
xor
inc
xlat
ds
adc
and
jle
push
movsb
adc
clc
adc
test
pop
push
xorb
imul
xchg
jnp
add
aas
xlat
sbb
push
popf
loope
mov
into
daa
enter
mov
xor
sub
adc
and
jnp
or
fs
jmp
addps
mov
xor
xchg
in
sbb
aam
and
das
or
leave
push
inc
jo
jmp
orb
mov
lea
or
mov
adc
xorl
sub
test
dec
insl
dec
outsb
rolb
pop
in
sub
mov
enter
fsubs
xor
cmp
test
mov
bound
shlb
cmp
inc
imul
imul
xlat
mov
rolb
jb
adc
xchg
nop
xchg
mov
lods
nop
dec
test
push
sbb
jne
push
and
dec
movsl
adc
push
push
data16
fiadds
adc
sbb
lret
inc
jp
je
sub
insb
popa
xchg
out
push
adc
loope
push
add
icebp
je
das
rolb
sbb
sbb
xor
cmp
cmp
imul
add
dec
xor
icebp
in
sahf
or
mov
loop
dec
push
outsl
fwait
cli
jne
pop
jg
test
fld
test
adc
jecxz
adc
mov
loope
rclb
test
sub
call
jl
scas
lock
mov
mov
ja
ja
pop
inc
fistpll
ret
add
inc
push
insl
inc
aas
and
adc
mov
js
dec
push
push
je
dec
aas
sbb
inc
jo
jo
inc
xchg
mov
add
movsb
dec
sub
pop
inc
jns
test
add
aas
and
jmp
cmc
push
test
aad
aam
insb
or
and
mov
lock
mov
sbb
mov
inc
mov
addl
negb
shlb
pop
leave
lods
stc
mov
inc
daa
jo
sbb
cmp
sbb
pop
and
imul
idivb
loop
lods
sti
xor
adc
jno
test
fwait
cmp
sub
rorb
scas
xchg
arpl
jge
xchg
lcall
dec
cli
lock
push
je
imul
xlat
sub
xchg
je
popa
inc
jmp
xor
nop
and
add
sahf
and
insl
and
sub
adc
inc
mov
xor
add
les
stos
sub
mov
add
lock
or
les
cmp
dec
into
js
aam
shlb
dec
mov
stos
adc
data16
insl
cmp
movsb
cltd
mov
adc
push
and
int3
insb
push
lahf
movsl
dec
lods
sbb
pop
or
inc
fwait
into
push
fwait
inc
fwait
mov
sbb
ds
adc
fwait
pop
lret
sbb
pop
mov
xor
inc
mov
push
pop
mov
mov
and
sub
adc
adc
or
adc
imul
or
mov
call
add
adc
and
or
mov
mov
mov
xchg
xchg
out
add
inc
cmp
adc
dec
test
xor
cltd
addr16
jnp
mov
repnz
stos
mov
inc
dec
and
cmpl
cmp
addr16
lea
cmp
sbbl
aaa
jne
cmpsb
movzwl
push
push
push
mov
adc
movsb
xchg
adc
inc
add
adc
pushf
and
xchg
mov
pop
test
xor
mov
je
je
xchg
pop
dec
or
mov
inc
js
jg
sub
sbb
mov
mov
int
jp
cmp
int
leave
stos
or
ficompl
pop
and
sub
mov
movsl
adc
decl
inc
adcl
or
rcl
push
sub
and
stc
pop
mov
xchg
xlat
mov
mov
or
add
jmp
xor
adc
push
or
pop
repnz
test
movsl
and
lea
push
clc
dec
loope
movsb
ret
in
sarb
jmp
and
jl
popa
pop
sbb
jmp
sub
jnp
sbb
mov
pop
xlat
sub
pop
push
adc
jecxz
popf
movsl
movsb
enter
mov
add
inc
lds
loopne
and
xchg
mov
xor
lahf
push
xor
sub
xchg
sbb
add
fwait
or
mov
enter
dec
push
jmp
popa
fs
mov
mov
and
sbb
xchg
daa
lea
sub
hlt
adc
dec
and
test
movsb
adc
sub
cmpl
rclb
xor
sbb
jmp
cmp
mov
push
insb
fadd
cltd
lahf
push
pop
dec
dec
adc
jecxz
mov
push
jne
lahf
mov
outsb
syscall
mov
icebp
test
pusha
dec
and
sahf
add
loop
or
cmp
xlat
clc
sub
dec
xor
nop
mov
sub
jmp
mov
loop
mov
or
lods
setnp
shlb
inc
xchg
and
xor
shl
jmp
aam
adc
mov
or
cmpsb
xchg
daa
out
rcr
aam
pop
rcrb
dec
int
cmpsl
mov
or
popf
rcll
inc
jno
mov
add
insl
cmp
push
mov
dec
sti
sub
pop
andb
jge
cmp
sbb
cmpsl
jmp
push
sti
int3
pop
test
adc
add
add
dec
int
mov
inc
insb
add
mov
stos
adc
adc
push
xor
adc
adc
dec
or
stos
or
mov
bound
ja
sbb
inc
lds
out
or
xor
jg
xor
test
lea
shl
pusha
push
mov
aas
rcrb
cmp
or
jle
inc
adc
cmp
loope
sbb
iret
data16
sub
aaa
push
and
cmp
jmp
aaa
add
or
adc
push
push
dec
xor
and
nop
inc
scas
add
icebp
loopne
add
lea
or
and
xchg
jle
mov
gs
and
sbb
cmp
sbb
sbb
pop
mov
sub
lea
outsl
mov
gs
inc
imul
pop
inc
add
sbb
iret
mov
pushf
mov
outsb
pop
js
lock
movsl
inc
push
dec
and
xor
xchg
mov
or
loopne
rcr
add
shl
and
dec
jo
push
inc
lret
inc
in
push
mov
sbb
push
cmp
push
jo
dec
test
call
jne
daa
into
loopne
lmsw
test
push
dec
lods
mov
pusha
test
push
lret
mov
inc
sub
lock
push
dec
insl
scas
lods
insl
shlb
in
xchg
mov
rcll
addb
das
inc
xchg
mov
sbb
add
inc
jmp
repz
mov
mov
inc
mov
aas
jmp
fsubs
or
cmp
sub
push
add
clc
insl
dec
jg
jecxz
shlb
hlt
jne
movsl
push
push
sbb
add
iret
add
lock
inc
jl
ss
mov
add
outsl
int3
ror
test
push
clc
inc
sarb
mov
fdivl
jge,pn
mov
sub
inc
xchg
dec
mov
jl
jne
mov
mov
pop
sub
movsb
xlat
inc
or
add
rorl
hlt
lret
testl
xor
lods
dec
cmp
roll
dec
xchg
fneni(8087
sbb
cmp
in
push
dec
in
fimuls
rclb
adc
xchg
mov
sub
sti
push
mov
je
cmp
adc
test
push
aam
mov
inc
jl
add
xchg
test
gs
loopne
sub
dec
movsl
or
repz
shlb
test
call
pop
aas
xor
add
mov
mov
in
mov
inc
jmp
add
testl
movsl
inc
cld
clc
inc
mov
movsl
jmp
mov
sbb
cwtl
pop
pop
xchg
sbb
and
inc
sub
int3
adc
adc
pop
cwtl
subb
cmp
bound
fsubp
fisubrs
stos
adc
mov
mov
gs
lock
jge
cmp
test
sbb
subb
inc
and
ret
mov
push
mov
sub
push
pop
adc
orb
xchg
add
mov
lods
or
mov
or
or
lcall
mov
sub
pop
inc
subb
xchg
sub
daa
cmp
inc
jmp
movsb
or
dec
pop
js
lock
int
mov
and
inc
div
call
mov
pop
dec
pop
roll
add
adc
lret
das
push
je
out
fcmovnbe
pop
mov
clc
sbb
cmp
icebp
mov
push
cltd
mov
cmpb
call
pop
or
xor
insb
xor
mov
jl
or
inc
push
das
adc
pop
lods
loopne
or
adc
shll
jbe
in
repz
push
daa
orl
push
xchg
jb
xchg
push
sub
int3
shr
add
inc
les
cmp
loopne
xor
shr
dec
rcrl
rolb
and
cmpsl
aam
adc
stos
push
adc
fsubl
sbb
jo
sub
xor
push
shlb
popa
mov
xchg
popa
in
mov
mov
rolb
mov
cmpsb
xchg
sub
sbb
xchg
mov
push
shrl
mov
lods
inc
les
add
incl
jmp
out
pop
loop
or
cmp
pop
lods
orb
adc
dec
add
sahf
and
insl
mov
xor
jl
sbb
ss
or
call
cmp
sbb
sbb
adc
mov
outsl
je
movsb
add
lea
or
enter
mov
cli
cltd
or
mov
mov
lcall
rolb
fdivl
xchg
xor
ficoms
push
push
pop
adc
je
addr16
fistl
inc
sbb
das
lods
add
mov
xor
xor
test
gs
imul
xorl
clc
adc
or
jne
fstpt
je
push
sbb
adc
rdtsc
call
xchg
nop
mov
outsb
inc
lcall
shll
xor
push
stos
loopne
adc
jbe
je
cltd
sbb
rclb
and
mov
inc
pop
xlat
xchg
lret
fcmovu
fcomps
fmuls
in
mov
sub
inc
xor
pop
add
dec
sub
mov
inc
cmp
gs
fstpt
add
add
xor
arpl
dec
jl
rcrb
add
inc
jecxz
push
test
mov
or
out
int
test
sub
scas
das
mov
sbb
add
lds
sbb
sub
sbb
pop
jnp
pop
loopne
xor
movlps
and
daa
sub
add
dec
mov
jo
mov
dec
inc
xchg
cld
push
xor
les
xor
aaa
jp
pop
mov
cmpsl
sub
pop
pushf
and
push
xchg
xor
ja
lret
xor
out
xchg
and
push
adc
adc
mov
add
and
xchg
mov
leave
in
mov
or
add
dec
inc
les
sbb
pop
add
or
sbb
jmp
pop
push
test
pop
outsl
adc
push
xlat
addr16
lds
adc
daa
aaa
xor
adc
cmp
outsl
or
xor
push
xchg
or
adc
xor
or
adc
adc
or
cli
enter
xlat
pop
xchg
push
sbb
sub
mov
insl
push
or
adc
xor
rcll
adc
sbb
rolb
sub
out
push
xor
push
push
and
xchg
and
mov
jne
push
imul
push
or
sub
adc
mov
jae
mov
jno
xchg
cmpb
jmp
xchg
icebp
xlat
ret
insl
pop
sub
mov
dec
inc
or
inc
adc
xchg
movsb
jecxz
test
and
inc
xchg
pop
inc
or
dec
mov
incb
mov
or
hlt
mov
rclb
sub
adc
orl
jl
or
pop
push
sbb
and
popf
sbb
sub
dec
dec
xor
jno
push
aas
mov
or
pop
pop
roll
lcall
adc
sub
mov
insb
mull
inc
dec
in
cmp
cmp
gs
aaa
movb
xor
sub
imul
adc
sbb
data16
adc
sbb
ss
push
sbb
sub
mov
xor
mov
or
adc
jmp
sbb
push
scas
inc
in
into
sbb
push
out
push
add
or
sbb
inc
scas
pop
xor
sbb
lods
inc
cmpsl
cmpsl
out
xchg
popa
mov
loop
movsb
or
push
and
push
sub
call
dec
mov
xor
dec
push
pop
mov
sbb
push
ret
mov
loope
pop
cmpsl
pop
enter
aas
in
bound
out
arpl
nop
add
sub
dec
add
nop
add
nop
add
nop
data16
nop
add
lods
push
add
enter
push
lock
jb
insb
dec
add
add
enter
outsb
mov
enter
jo
add
add
add
jb
icebp
jae
in
cmp
dec
add
in
jne
in
cmp
jbe
js
in
cmp
add
xor
repnz
sbbb
dec
sbbb
and
sbb
cmp
sbbb
int3
sbbb
cmp
sbb
jb
or
das
push
cmp
sub
dec
inc
push
cmp
insb
cmp
cmp
mov
push
cmp
lods
xor
inc
push
cmp
in
or
ss
aaa
xchg
xchg
dec
and
sbb
xchg
mov
sbb
xchg
and
nop
xchg
push
nop
inc
sub
nop
inc
push
nop
dec
dec
insb
push
nop
inc
push
dec
mov
nop
inc
lods
dec
nop
inc
push
nop
int3
dec
in
add
inc
push
dec
or
push
and
enter
enter
dec
push
insb
pop
enter
mov
enter
enter
int3
push
in
add
add
sbb
sahf
ret
mov
mov
subl
pop
adc
pop
or
mov
test
mov
pusha
mov
enter
stc
mov
inc
mov
pop
lods
inc
ds
in
aam
loopne
mov
lret
jns
fadds
aam
jb
insb
mov
adc
rcrb
dec
and
or
andl
xrelease
adc
out
jns
bound
test
add
clc
mov
imul
or
push
clc
xor
or
popf
or
or
bound
dec
in
and
jne
or
je
cmp
cmp
jns
dec
jb
dec
rcl
add
cwtl
xchg
out
out
pop
sbb
or
or
cltd
not
sub
xor
and
adc
push
sbb
or
insl
inc
outsl
test
or
popa
js
push
lea
add
inc
lahf
add
out
popf
clc
push
sbb
rorb
fstpt
or
or
imul
sub
or
or
ja
inc
cmp
aam
push
sub
xchg
fnstcw
add
cmp
into
add
push
movsb
push
mov
jb
pusha
push
lea
add
jno
les
daa
inc
outsl
test
cmp
sub
adc
jbe
pop
flds
dec
pop
lcall
pop
add
call
adc
js
cwtl
daa
in
add
and
sbb
rcrl
scas
lods
push
sbb
push
push
sbbb
add
push
nop
ja
xchg
dec
movsl
pop
mov
or
push
xchg
sbb
enter
daa
pop
and
and
push
dec
or
sub
je
popf
pop
subl
push
mov
int3
xor
mov
mov
push
jnp
cmpl
insb
popl
sub
cmp
cmp
icebp
int3
test
push
loopne
lds
pop
and
int3
inc
jnp
sbb
test
or
push
dec
xor
add
mov
xor
xor
xchg
pusha
xor
movsb
or
pop
inc
sub
dec
or
dec
js
je
out
dec
or
outsl
xor
incl
jnp
sbb
push
mov
or
jo
lret
fs
mov
mov
out
loope
enter
cmp
inc
push
and
gs
push
popa
jbe
inc
push
leave
leave
testl
movaps
leave
leave
leave
leave
sub
into
das
addr16
inc
add
lock
mov
ja
ret
pop
loope
jo
dec
ret
test
test
decb
jle
xor
arpl
sbb
cmp
orl
and
push
pop
cmpsb
add
add
fs
inc
mov
jnp
xor
lret
push
fiaddl
jmp
mov
jnp
push
and
clc
mov
sbb
push
test
and
call
or
xor
mov
jmp
or
ret
and
add
xor
cmp
dec
daa
and
xchg
inc
nop
clc
daa
or
lret
add
sub
addb
movsl
xor
clc
cltd
lea
sbb
jmp
or
xor
pop
je
loop
inc
pop
dec
add
sbb
and
es
outsb
bound
pushf
lods
adc
cpuid
loop
cmp
stos
loop
scas
andb
fidivl
cmpb
jmp
jmp
pop
mov
lcall
push
cwtl
test
sub
inc
adc
cmp
cli
sub
loopne
push
or
icebp
mov
aam
mov
inc
hlt
aad
jne
jne
jmp
es
jo
push
inc
and
cmp
and
rorl
das
push
cli
aam
loopne
test
push
sub
fcmove
jne
fstps
jp
inc
mov
dec
subb
orl
or
mov
add
pop
inc
cmp
or
in
and
mov
cltd
imul
aaa
pop
push
or
imull
enter
and
mov
lock
fwait
jmp
je
in
loop
nop
and
adc
pop
ret
fs
inc
jmp
mov
inc
outsb
ret
cmp
les
stos
push
mov
jge
inc
push
cld
add
mov
mov
or
xchg
mov
test
and
mov
loop
insl
inc
adc
mov
sbb
insl
int3
mov
jno
xchg
xor
outsb
jmp
cmp
adc
mov
insl
xchg
add
jle
push
pop
add
push
mov
sub
pop
loopne
dec
andb
pop
pop
add
imul
imul
aas
xor
cmpb
inc
dec
fsubl
gs
xor
jno
mov
test
enter
push
pop
xor
or
jne
mov
jae
dec
bound
jo
popa
movsl
and
ds
xor
sub
test
push
cmp
hlt
mov
jbe
pop
and
push
addr16
mov
mov
push
rcrb
push
push
adcl
jmp
jae
mov
fucomi
dec
and
andb
add
cs
enter
hlt
mov
inc
jne
in
sub
jp
in
rcll
lea
ret
xor
and
inc
pop
into
movsb
jl
sub
mov
roll
sbb
add
mov
mov
adc
add
ja
sbb
jle
jno
incl
dec
sbb
push
ret
movl
or
cmp
mov
gs
xor
adc
fcoml
push
xor
cmp
cmp
bound
jo
dec
xchg
add
loopne
out
jne
ret
insb
call
mov
int
test
cmc
out
jl
pop
out
mov
shl
mov
and
out
out
sub
pop
xchg
sub
push
push
inc
inc
dec
iret
dec
pop
add
push
cmp
dec
xchg
sbb
pop
andb
inc
cmp
nop
dec
adc
sub
push
xor
xor
mov
fldcw
dec
xchg
add
inc
or
stc
test
lock
dec
rorb
mov
adc
aas
sub
sub
lea
jae
push
push
push
mov
pusha
push
stc
gs
clc
or
das
mov
adc
daa
push
outsb
xchg
mov
mov
mov
xor
mov
and
shr
xor
sahf
das
out
test
inc
fnstcw
jge
movl
push
inc
pop
outsb
mov
or
ret
or
test
and
xor
push
push
lret
fsubl
sbb
jmp
cltd
xchg
leave
imul
inc
ret
add
lahf
inc
mov
inc
dec
inc
and
add
xor
xor
mov
mov
addb
sbbl
and
adc
stos
add
fdivrs
add
inc
push
dec
push
fldl
mov
add
xorb
sub
sub
outsl
mov
pop
or
pop
mov
cmc
adc
inc
inc
xor
xor
adc
inc
push
jns
jge
push
sbb
mov
xor
jmp
pusha
add
aam
lock
adc
add
xorb
sbb
sub
push
or
xor
repnz
mov
pop
pop
fiadds
das
rcll
fnstsw
pop
pop
and
decl
cld
dec
sbb
sbb
pop
fdiv
test
push
pop
mov
mov
enter
mov
xor
push
mov
push
or
xchg
sbb
decb
add
bound
push
or
popf
sbb
fisubl
or
mov
lahf
insl
and
sbb
sbb
mov
cld
push
cltd
fs
cmp
cltd
mov
cmp
xchg
adcl
inc
mov
or
movd
mov
add
jnp
out
into
movsl
ret
inc
inc
lret
mov
loop
and
pop
dec
pop
fstpt
mov
jne
cmc
xchg
push
and
cli
mov
or
xchg
xchg
dec
inc
je
sub
or
push
mov
pusha
rcl
incl
out
mov
loop
push
je
add
xchg
sbb
or
mulb
lock
jb
repz
cmpsl
out
or
jns
iret
fmull
js
imul
mov
aam
fisttpll
loope
mov
push
mov
fsubrs
and
loopne
add
add
add
sub
xchg
push
iret
lahf
push
mov
rcr
dec
mov
pop
ret
cmp
jbe
and
dec
jbe
push
sbb
push
pop
fldenv
add
push
add
adc
push
imul
dec
pushl
icebp
sti
fwait
mov
or
sarl
push
sbb
ret
xor
dec
inc
test
es
sbb
jo
add
and
cmp
inc
inc
leave
mov
push
mov
shl
add
cltd
ret
arpl
xchg
bound
sbb
adc
aam
sarl
mov
add
test
shlb
mov
aaa
mov
sub
and
or
loope
out
loope
jne
inc
outsl
dec
add
lea
dec
mov
insl
aam
dec
mov
pop
sbb
add
rorl
loope
or
ret
xchg
int
dec
add
inc
rorb
test
or
or
or
add
mov
lcall
or
nop
dec
pop
jmp
mov
or
std
jmp
stos
inc
fstpt
enter
adc
push
push
and
mov
imul
lea
ret
dec
out
dec
flds
sti
cmpsb
jg
incl
int
loop
bnd
mov
mov
call
add
xor
nop
and
and
xlat
bnd
roll
lds
push
loope
jp
popf
mov
add
negl
or
loopne
jmp
mov
dec
mov
jmp
mov
mov
jne
inc
jmp
pop
movsb
data16
icebp
add
xchg
adc
mov
sub
jb
aam
shll
cmpsb
dec
shr
mov
cmp
mov
das
sub
jle
adc
inc
dec
fwait
dec
mov
mov
lods
xchg
and
sbb
xchg
adc
dec
push
adc
push
ret
and
inc
adc
mov
andl
sbb
rcr
ficoms
add
lahf
mull
lret
or
adc
jae
inc
dec
jle
test
inc
mov
incl
dec
stos
jne
and
sub
add
pushf
sbb
push
lcall
lea
dec
fcompl
das
fiaddl
mov
xchg
rclb
jbe
add
mov
shll
cmpsb
xor
sbb
lea
mov
ss
and
popf
insb
mov
int3
mov
adc
lret
sub
fisubs
mov
pop
or
inc
les
jnp
xchg
push
shll
adc
mov
sub
les
jge
add
les
out
dec
push
call
mov
sub
test
pusha
push
aas
add
or
movsl
rcll
push
fcmovu
adc
shr
ljmp
add
shll
cmc
out
and
cmp
daa
push
ja
lods
addl
aam
push
pusha
in
aam
jb
dec
add
xor
push
xchg
cmp
ret
js
addl
sbb
cmp
neg
inc
enter
shll
outsl
test
jg
cmpsl
xor
fwait
dec
call
mov
adcl
cwtl
filds
cmp
mov
jne
mov
faddl
push
enter
jmp
mov
jbe
out
jmp
add
ss
icebp
notl
mov
shll
sub
cli
mov
bound
lea
lock
adc
or
shrb
incb
sub
inc
es
jo
aaa
fdivrs
adc
into
addl
mov
shl
sub
addb
add
mov
stos
jge
add
or
push
inc
adc
in
mov
mov
mov
int3
sub
in
call
sbbb
mov
push
stc
add
outsb
subb
or
adc
xchg
mov
out
js
add
les
xor
xchg
jl
push
inc
mov
mov
ret
sub
cmpsl
movsb
clc
push
dec
fsubrs
ja
test
and
add
cmpsb
test
jae
decb
sarl
les
outsl
fcomps
add
and
rcrb
push
decl
push
mov
shl
mov
repnz
wbinvd
mov
mov
insb
sbb
or
mov
sub
dec
insl
out
ss
jnp
add
or
adc
icebp
jecxz
jo
push
shrl
jp
jmp
inc
mov
adc
jo
inc
jg
fwait
and
adc
loop
dec
lock
adc
push
int3
sub
xorl
stos
icebp
push
mov
dec
in
dec
int3
rolb
sbb
add
inc
mov
rorb
xor
arpl
or
mov
sbb
pop
add
xchg
jbe
sti
mov
adc
pop
push
mov
mov
shlb
or
fwait
pusha
or
lods
mov
sbb
out
ds
push
mov
sbb
inc
lock
or
cmpsl
in
mov
cmp
inc
les
lock
inc
ret
sahf
push
in
movl
xor
shrl
adc
sbb
push
addb
daa
mov
pop
in
sub
cmp
inc
sbb
outsb
xchg
fists
sbb
je
add
in
jmp
xlat
sbb
inc
out
mov
xchg
add
shl
rcll
loope
shlb
dec
test
daa
jbe
mull
pushf
and
jne
and
sbb
jnp
or
dec
inc
lret
in
scas
jnp
xchg
jno
pop
mov
sbb
add
testb
dec
mov
fwait
push
sub
ljmp
or
sbb
jmp
jl
push
or
jbe
adc
xor
loop
sbbb
mov
and
push
testl
adc
sti
add
mov
or
sub
and
fmull
pop
sub
add
and
or
or
or
xor
and
ret
adc
divl
push
sbb
lea
js
scas
push
mov
push
inc
inc
xor
in
dec
ret
gs
cltd
mov
rcrl
movl
adc
push
sbb
pop
mov
sbb
mov
push
cwtl
dec
mov
adc
popf
mov
or
jae
and
aam
and
or
and
aaa
dec
out
sub
pop
mov
daa
mov
mov
mov
or
test
repz
xor
pop
mov
and
or
mov
ficompl
jo
jmp
iret
jae
sub
push
and
pop
sub
add
xlat
ds
mov
sbb
xor
push
movsl
sbb
ret
pop
lahf
inc
les
pop
push
in
ret
pop
sahf
mov
shrb
pop
pop
roll
fcoms
cmp
jae
sbb
fisubl
dec
dec
jmp
push
sub
sbb
inc
dec
or
test
mov
jl
cmpl
add
sbb
fwait
int
pop
and
and
add
out
cmp
jae
ficomps
sub
fimull
ffree
or
or
je
push
cmpsb
add
push
push
out
mov
cs
ret
lods
pop
std
jecxz
fwait
dec
iret
jmp
or
add
rcl
loop
pusha
cmp
out
xchg
jl
or
jb
adc
pop
fimull
mov
mov
xor
mov
adc
dec
out
sbb
shrl
cmp
add
daa
lret
push
sbb
xor
and
pop
rcll
aad
out
lea
sub
sahf
mov
push
add
pushf
add
insb
add
adc
fbld
xchg
mov
sub
add
sbb
fs
push
out
push
inc
inc
or
inc
push
push
addr16
and
push
mov
xor
idiv
and
pop
fstpt
and
rolb
sub
lock
and
enter
mov
push
jne
test
subb
push
ljmp
mov
mov
sub
cltd
sahf
mov
lea
mov
or
scas
mov
sub
mov
leave
jge
test
mov
add
cmpb
call
xor
je
stos
xor
dec
mov
enter
out
shrb
ret
push
sahf
sbb
push
pop
add
mov
fldl
rcrb
into
dec
rcl
repnz
jbe
push
or
add
adc
movsl
mov
test
jbe
cmp
jae
insb
aaa
add
xor
incb
in
hlt
cmp
out
cmp
push
jnp
loopne
add
cmp
jns
mov
mov
add
sbb
loopne
lret
adc
push
aas
pop
add
and
mov
movq
add
sbb
push
mov
aad
jp
mov
cmp
sub
jle
xor
pusha
add
add
pop
mov
push
loopne
pop
pushf
loopne
or
xchg
push
lods
jo
data16
js
les
or
mov
mov
insb
ljmp
xchg
push
pop
xorl
scas
clc
adc
movl
xchg
and
push
and
lahf
sahf
xor
jecxz
adc
out
pop
mov
and
cmpsb
jp
jne
aaa
movsb
push
add
adc
push
dec
clc
jae
pusha
add
cmp
arpl
sub
push
adc
scas
es
es
ret
or
or
pop
lret
jb
mov
push
orl
ret
mov
push
mov
push
mov
imul
sbb
test
adc
sahf
addl
into
mov
or
push
imul
je
clc
mov
scas
or
xlat
mov
push
into
adcl
dec
mov
jmp
shl
or
inc
or
stc
jb
imul
jg
int
add
sub
imul
hlt
scas
test
sub
call
int
or
test
push
jne
call
or
xor
rorb
sub
int3
pusha
and
inc
call
test
push
fimuls
cli
mov
push
imul
inc
xchg
aam
adc
sub
cmp
push
cmp
test
sub
push
divb
inc
fdiv
cmp
and
push
mov
scas
sbb
cmpl
push
inc
lea
lret
push
js
mov
insl
gs
cmp
adc
mov
int
mov
cmp
cmp
xor
add
lods
mov
mov
imul
dec
stos
test
sbb
dec
test
mov
je
jae
jo
flds
in
push
xor
ret
pushf
dec
push
push
sub
and
inc
push
xor
ret
or
pusha
pop
sub
jg
mov
xor
push
xor
shr
sbbb
rorl
shrb
stos
pusha
sbb
xor
rolb
mov
sub
and
jmp
xor
mov
mov
incb
adc
inc
push
add
jle
mov
and
fxch
dec
movhps
neg
inc
ficoms
and
push
mov
adc
push
ljmp
dec
addl
test
push
daa
xchg
sbb
je
adc
push
decl
clc
mov
dec
mov
enter
loopne
push
daa
out
test
in
push
repnz
adc
mov
pop
stos
add
sub
dec
jmp
push
aam
sbb
adc
notl
imul
imul
out
jl
sub
das
xlat
idivl
mov
mov
mov
xchg
or
xchg
lea
inc
adc
add
mov
sub
push
ds
add
imul
dec
sbb
insb
adc
outsb
push
adc
sub
inc
adc
pop
or
das
shrl
xor
mov
jo
sbb
ds
add
adc
dec
loope
jge
out
sbb
cmp
sbb
fisubrl
dec
or
movl
loope
pop
cmc
and
jae
dec
adc
and
ljmp
jmp
and
mov
decl
pop
mov
adc
jb
adc
pushf
nop
jecxz
xchg
fsubl
inc
xchg
add
jnp
addr16
push
mov
mov
jg
ss
gs
sbb
scas
pusha
add
lcall
loope
inc
cli
testb
sub
adc
jb
je
inc
inc
push
push
or
add
add
daa
insl
ss
loope
adc
rorl
fld
pop
and
add
js
add
mov
cmp
imull
es
jmp
adc
lds
and
cmp
sbb
and
add
pop
lods
xor
adc
and
dec
adc
or
addl
xor
jnp
or
dec
inc
movsl
out
mov
testl
mov
lea
pop
mov
jne
fcoms
add
sub
mov
add
dec
das
or
movsb
and
add
cmp
sbb
pushf
jmp
xchg
std
dec
sub
rorl
xchg
push
sub
push
sub
push
dec
push
cmc
scas
xchg
or
orb
mov
mov
jo
repnz
shll
xor
rorb
rcrb
outsl
sbb
mov
xchg
cmc
test
insb
sub
or
mov
leave
push
rclb
mov
stos
mov
in
sub
ss
out
fdivl
mov
and
lret
cmp
sbb
decl
add
jo,pn
mov
cmp
cmp
cmp
pop
jbe
sub
adc
lds
cmpb
sub
fs
jge
pop
and
leave
test
inc
xchg
inc
jmp
lods
inc
enter
xor
sub
out
sub
sub
push
aas
jge
mov
or
adcb
imul
pop
xor
add
sub
test
sbb
loope
push
pop
jno
dec
fwait
pusha
xlat
xchg
pop
outsb
xchg
adc
add
mov
adc
inc
cmp
sbb
or
xor
mov
and
fidivl
inc
fdivr
fsubrs
dec
movsb
cli
mov
shll
xor
movsl
mov
cld
repnz
iret
or
addl
mov
sahf
and
xor
add
arpl
or
sbb
ret
mov
xchg
sti
mov
dec
xor
xor
pop
xchg
call
or
sub
xor
xchg
jo
sub
cltd
test
xchg
adc
mov
sbbl
sti
sti
adc
sbb
lods
lret
mov
inc
and
add
xor
shrl
inc
and
lcall
xor
add
daa
les
inc
jo
push
idiv
addr16
sbb
fsubs
push
daa
pop
jp
mov
lret
in
pop
dec
shr
es
jb
inc
inc
idivb
mov
repnz
gs
pop
ss
xor
or
loopne
roll
xor
jae
mov
inc
filds
aaa
sub
and
ss
dec
out
add
add
addl
popa
cmp
and
in
mov
adc
jmp
jae
mov
mov
scas
ss
jb
mov
lea
add
cli
rcr
mov
sub
or
jae
mov
sub
mov
push
data16
push
call
aam
aam
sbb
mov
adc
push
pop
sub
outsb
in
dec
jmp
jge
imul
js
out
sbb
sub
jle
lock
jmp
sub
dec
jne
jmp
daa
sbb
jne
test
add
filds
popa
bound
xchg
sbb
mov
lret
shr
adc
mov
pop
adc
add
stos
xor
ficoms
xchg
mov
sbb
imul
jnp
dec
adc
or
ret
or
mov
or
xchg
adc
inc
rcll
mov
inc
add
and
movsb
arpl
insb
mov
faddl
push
out
adcb
push
fsubl
loopne
adc
inc
sbb
cltd
test
jmp
lods
cld
das
jecxz
mov
or
cmpl
push
adcl
adc
ljmp
or
dec
cmp
aaa
inc
sub
pop
xor
pop
add
repz
push
jbe
pop
jmp
cli
mov
jmp
inc
test
jne
and
pop
test
inc
xor
insl
jmp
push
test
and
test
add
pop
gs
test
cmp
add
lds
test
sbb
dec
outsl
jg
push
pop
xchg
mov
xchg
adcb
push
jmp
add
dec
inc
aam
clc
add
ret
imul
push
sub
mov
fistps
call
inc
inc
enter
pop
inc
add
xor
incl
dec
decl
mov
lahf
das
imul
cmp
aas
rol
jae
push
or
popl
call
dec
pop
xor
mov
sub
imul
jmp
sub
mov
in
cmp
mov
cmc
xchg
std
hlt
and
faddl
cmp
pop
push
pop
mov
fstpt
adc
shlb
push
or
dec
stos
ljmp
sti
or
jecxz
in
xor
add
and
mov
adc
mov
scas
in
leave
xchg
cmp
cmp
and
cmp
filds
push
sbb
jecxz
gs
sub
scas
push
dec
mov
mov
xor
aam
add
xchg
xchg
into
das
sahf
inc
add
je
sbb
or
push
orl
inc
popa
mov
add
pop
sub
adc
and
or
in
cmp
cmpxchg
add
mov
ds
mov
and
ficompl
mov
cmp
ds
fs
xchg
or
dec
ja
add
xor
inc
fs
mov
mov
mov
add
push
add
cmp
fisttpl
inc
push
adc
adc
xchg
jge
hlt
sbb
mov
jns
mov
sub
daa
sub
push
xor
daa
jns
push
mov
jns
mov
dec
mov
daa
dec
mov
push
mov
enter
pop
mov
and
mov
pop
shrl
sbb
jo
or
jns
sub
mov
ret
sbb
dec
push
cltd
idiv
je
test
test
and
dec
sub
lret
pushf
rclb
movsb
xor
es
or
lret
inc
mov
mov
arpl
xor
inc
inc
movsl
pop
sub
mov
insl
popf
data16
dec
stc
sbb
adc
add
dec
add
and
cmp
fildll
jp
lods
push
movsw
das
or
repnz
orb
popa
outsb
pop
inc
bound
push
lret
das
inc
jo
mov
ja
outsb
pop
insb
pop
jl
dec
jne
pop
push
gs
arpl
leave
xchg
jbe
lea
xchg
pop
pop
jne
mov
daa
jb
addr16
cmp
pop
imul
add
insb
jg
nop
dec
jo
aas
fs
inc
bound
stos
push
lods
gs
push
outsl
push
push
jns
and
inc
daa
xor
fcmovb
outsl
daa
daa
push
pop
jae
pop
add
push
jne
sbb
and
fs
xor
mov
jbe
insl
xchg
scas
pop
pop
mov
sbb
outsb
jae
mov
in
insl
fistpl
jb
fisttps
or
dec
inc
mov
cmpsl
mov
xchg
xchg
pop
test
and
mov
inc
push
mov
mov
push
sub
adc
xchg
push
ret
ja
xchg
mov
xchg
inc
fs
push
mov
rol
jne
jg
test
xlat
mov
rcr
ja
loopne
mov
hlt
xor
sbb
les
xor
mov
cmp
or
es
sub
add
and
cli
scas
or
add
mov
insb
mov
xlat
push
fisttpl
or
sbb
jne
xchg
push
lods
aaa
xor
add
pop
mov
sub
jg
popa
int3
xchg
cmc
xor
movsb
in
sar
inc
test
jg
je
fmuls
lods
mov
mov
push
mov
daa
pop
pop
pop
inc
jg
sub
jnp
inc
xchg
xchg
mov
test
xor
pop
imul
outsl
fldenv
loopne
cmc
cmp
mov
les
lea
sbb
lods
andb
cmc
pop
xchg
pop
cmpsb
sbb
mov
mov
mov
cwtl
pop
clc
test
imul
cmp
dec
movsl
js
pop
clc
add
dec
inc
sbb
add
sub
mov
bound
test
xor
xor
adc
push
sbb
imul
xor
inc
jmp
addb
adc
add
test
lods
mov
jmp
fxch
inc
push
lcall
cli
shll
push
push
add
xor
in
in
test
dec
inc
jns
xchg
jge
adc
push
imul
mov
mov
adc
mov
les
xchg
xor
cmp
sub
enter
popa
and
jo
and
pop
les
out
mov
and
and
or
cmp
xlat
out
inc
dec
push
aaa
push
pop
jns
push
sub
and
jae
xor
lods
pop
insl
inc
mov
cmp
xor
mov
aaa
xor
rcl
dec
push
test
xor
add
xchg
test
cmovle
subl
addr16
dec
outsb
and
adc
dec
dec
dec
dec
adc
push
pop
dec
dec
dec
dec
sbb
sbb
dec
dec
dec
dec
sbb
push
pop
dec
dec
dec
dec
add
add
dec
dec
dec
dec
add
push
pop
dec
dec
dec
dec
or
or
dec
dec
dec
dec
or
push
daa
and
icebp
repnz
daa
daa
daa
hlt
cmc
div
daa
daa
daa
daa
clc
stc
cli
sti
daa
daa
daa
daa
cld
std
jmp
daa
daa
daa
loopne
loop
daa
daa
daa
daa
in
out
daa
daa
daa
daa
call
daa
daa
daa
in
in
out
out
cmp
daa
rorb
testl
test
fisubrs
inc
jg
in
pop
test
lods
cld
dec
rorl
push
dec
add
cwtl
je
enter
mov
adc
dec
in
into
add
hlt
add
sub
mov
xor
je
lods
xor
sarl
adc
xchg
cs
ret
inc
enter
pop
push
je
xorb
sbb
ror
inc
dec
mov
xchg
push
dec
push
mov
mov
sbb
inc
imul
and
pop
or
mov
pop
push
std
push
cmp
icebp
adc
dec
xchg
adc
cwtl
or
xchg
mov
cs
cs
cmpsb
push
sub
push
xchg
xchg
push
jb
xlat
in
sub
lret
dec
adc
int
dec
lahf
dec
dec
gs
es
and
dec
imul
ret
test
test
inc
add
gs
mov
xchg
cmpsl
inc
mov
cmc
add
mov
les
xor
aam
add
and
push
ds
bnd
test
cmp
jg
sub
ret
dec
sub
ja
adc
pop
outsl
into
mov
pop
mov
mov
aas
sub
leave
sub
inc
or
cmp
mov
call
mov
cli
mov
or
into
gs
sbb
push
pop
pop
pop
cmp
or
inc
outsb
push
push
dec
in
cmpb
sbb
fisttpll
loope
xchg
adc
xor
pop
mull
inc
lea
xchg
sbb
int3
pop
sub
ds
nop
cmp
scas
rclb
cmovs
es
xor
inc
cmp
sbbb
add
sarl
pop
xor
and
stc
cli
pop
jo
pop
or
flds
mov
mov
push
movsb
clc
adc
frstor
jnp
add
mov
jae
add
sbb
pop
add
push
or
ret
nop
fisttpll
add
xor
les
insb
push
push
test
dec
rorb
inc
cmp
xchg
sbb
fnsave
mov
cltd
add
mov
or
daa
test
mov
sbb
ret
push
pop
jne
xchg
addl
xchg
xchg
xor
lret
insl
loope
dec
pop
jmp
aaa
iret
pop
lods
mov
inc
push
jae
push
jo
ja
ret
jo
adc
fs
sbb
or
adc
aas
bnd
jae
call
and
popa
xchg
in
mov
outsl
xor
or
push
pop
mov
xor
test
push
and
cs
aaa
pop
adc
push
test
mov
outsl
jle
xchg
mov
ss
jne
xchg
test
and
push
iret
sub
pop
cwtl
inc
add
cmp
jnp
sbb
jbe
ret
int
dec
push
cmp
mov
sub
mov
nop
mov
mov
add
lock
dec
push
jbe
pushf
mov
aam
add
add
mov
pop
or
cmp
mov
jmp
jmp
sub
outsl
bound
mov
cmp
inc
arpl
xor
outsl
lret
and
ja
or
cmp
add
cltd
and
dec
push
jns
or
test
cmp
dec
pop
xorb
dec
sbb
hlt
inc
or
pop
jle
lods
out
jns
adc
dec
xor
push
les
push
adc
and
dec
fstp
xlat
or
and
cmp
arpl
sub
or
jge
negb
jp
inc
sbb
lcall
lock
jo
iret
addr16
mov
push
mov
incb
add
fcoml
sbb
cmp
sbb
push
adc
je
push
adc
or
sub
dec
insl
push
sub
add
xor
mov
mov
mov
jp
add
sub
xor
adc
insb
and
or
gs
dec
dec
test
in
shlb
dec
sub
xor
ds
xchg
mov
cmp
cmp
push
mov
and
je
push
push
inc
mov
add
add
inc
negb
aaa
nop
push
mov
enter
lock
adc
nop
inc
mov
rcrb
and
hlt
pop
lds
and
xor
pop
and
aaa
or
xchg
cmp
fiaddl
mov
inc
pusha
test
push
adc
push
dec
mov
lea
add
sub
xchg
dec
jecxz
pop
add
or
lret
or
mov
jp
cmp
ja
add
sub
xlat
dec
pop
out
adc
xchg
xchg
aaa
test
and
add
and
cmp
jb
cmp
jbe
sub
clc
mov
rcrb
int3
jle
scas
scas
andb
cmpsl
lahf
dec
add
iret
ss
xchg
cmp
cmp
push
inc
jbe
inc
and
or
mov
jl
adc
dec
mov
jno
push
dec
cmp
pop
pop
dec
notb
ja
pop
mov
mov
push
fidivrl
sbb
ja
ret
push
xor
imul
into
leave
ja
sub
outsl
jne
jb
xchg
cmp
pushf
dec
pop
sbb
mov
fs
lret
adc
inc
push
jmp
mov
xor
dec
add
mov
fcom
pop
or
rcr
and
cmp
inc
mov
mov
hlt
mov
mov
or
cmc
jb
cli
cmp
je
sub
fldt
decb
or
mov
lea
icebp
push
fimull
push
jb
push
out
sub
pop
clc
dec
test
add
ss
pop
insl
inc
xchg
mov
hlt
or
mov
cmc
jae
enter
repz
inc
fdivl
jmp
or
sub
cmp
mov
add
es
imul
shlb
sbb
jmp
inc
push
cmpsl
add
and
iret
dec
int3
aad
mov
adc
inc
add
or
push
jl
jle
xlat
or
mov
xchg
mov
aas
xlat
cmp
push
cmp
mov
sbb
sahf
cltd
push
fildl
call
in
lea
and
outsl
mov
jne
divl
lahf
inc
fs
jo
lods
add
sub
jle
jp
jo
addl
sub
sarb
dec
dec
jne
xor
bound
mov
addb
mov
orl
jl
fwait
jle
sub
dec
sar
scas
test
test
pop
pop
xchg
sbb
add
subl
jle
push
mov
add
mov
or
mov
or
pushf
mov
arpl
jae
push
cwtl
pop
xor
imul
xor
mov
inc
cli
cmp
les
nop
push
jmp
add
mov
jo
dec
or
nop
and
pop
les
test
sub
inc
sbb
or
push
mov
ja
sbb
or
sub
shr
mov
aaa
addl
ret
cmp
adc
adc
or
mov
xor
and
inc
add
xlat
mov
or
aad
inc
xchg
test
and
push
dec
mov
inc
pop
ret
gs
aaa
dec
lods
and
add
hlt
add
push
stos
pop
xchg
filds
shll
inc
pushf
mov
mov
mov
clc
pop
call
adc
movsl
adc
sbb
sbb
xor
xchg
add
cs
fidivrs
aaa
adc
push
ss
adc
adc
rcrl
inc
sbb
add
push
aad
jg
jle
and
or
adc
xchg
mov
popa
and
xchg
and
add
adc
cmp
cld
push
les
push
add
mov
cwtl
mov
insl
inc
out
mov
and
lret
push
sarb
inc
dec
dec
sarb
sub
adc
out
add
or
in
mov
sub
test
or
mov
add
xchg
sub
gs
fs
pop
and
mov
push
mov
xchg
inc
sub
inc
add
pop
inc
lcall
pop
mov
inc
add
add
fsubl
fiadds
leave
push
rorl
or
xor
sarb
in
leave
push
jge
mov
int
lret
adc
mov
lahf
pop
sub
inc
rcrl
cmp
add
pusha
arpl
inc
xor
in
push
inc
pop
add
xchg
xchg
out
or
sbb
lea
mov
scas
add
and
scas
or
or
mov
add
xor
push
ret
orb
xchg
pop
xor
or
gs
lods
ficoms
roll
movsb
push
mov
xlat
rorb
sbb
sbb
sub
mov
pop
sbb
cwtl
pop
popf
push
mov
imul
sub
jg
sbb
cmp
ret
loopne,pt
sub
add
sub
mov
mov
movsb
adc
jns
enter
sub
aaa
lcall
sub
fistpl
pop
and
outsl
data16
sbb
cs
scas
popa
daa
aas
mov
sbb
sub
ds
add
mov
pushf
lock
add
inc
or
insb
mov
xchg
add
enter
add
sti
cld
mov
inc
mov
adc
adc
fadds
push
aaa
push
adc
adc
push
mov
inc
push
add
mov
xor
mov
sub
popf
int
jmp
das
push
imul
pushf
add
fiadds
and
adcb
out
cmp
imul
adc
jg
push
cmp
mov
aad
jne
repz
aaa
lock
hlt
push
add
shll
imul
add
jae
subb
or
add
loope
push
jmp
adc
ljmp
xchg
xchg
sbb
mov
scas
mov
lahf
mov
jo
push
push
push
push
loop
jae
xchg
pop
dec
hlt
jno
jb
xor
mov
add
lea
xor
cmp
daa
jns
mov
xchg
push
icebp
js
cmpsl
cmp
push
push
mov
inc
cwtl
popa
add
cmp
rolb
lock
add
push
pop
cli
movsb
push
xchg
mov
dec
pop
mov
mov
test
inc
inc
mov
push
pop
ret
jo
and
push
push
repnz
jne
lahf
mov
and
sub
inc
mov
sbb
loop
lahf
outsl
dec
pop
jb
lods
xor
dec
stc
dec
and
mov
or
dec
mov
dec
push
fs
daa
ja
mov
iret
in
xchg
cmpsl
push
xlat
push
mov
push
pop
ja
xchg
out
inc
jnp
push
fsubrs
xchg
dec
push
out
fdivl
nop
add
ja
insb
pop
jnp
js
addr16
gs
ja
adc
pop
push
pop
and
arpl
jmp
pusha
xchg
adc
xchg
xchg
pop
cs
outsl
aaa
jb
dec
aaa
fs
addr16
ss
je
insb
add
test
movzwl
daa
pop
sti
sbbb
inc
jbe
sub
insb
or
scas
jo
adc
shlb
and
jo
mov
es
xchg
dec
in
cwtl
aaa
je
pop
xchg
add
js
sbb
push
adc
jl
adc
cmpb
inc
mov
pop
adc
loop
xchg
ja
jl
push
daa
xchg
outsl
or
xchg
or
xchg
test
enter
shrb
adc
push
add
xchg
nop
lret
mov
nop
xchg
ret
jbe
push
nop
push
xchg
xchg
xlat
subb
pop
jb
jae
aas
ja
sbb
mov
push
add
fs
inc
push
nop
xchg
pushf
hlt
outsl
pushf
nop
xchg
outsl
xlat
sub
push
stos
dec
push
mov
jle
fsubs
pop
movsb
jg
cs
xchg
outsl
movsb
add
xor
push
sub
test
jo
fisubl
lahf
and
outsl
fsubrs
xor
out
mov
add
mov
and
cmp
iret
dec
jno
xchg
add
adc
sbb
jne
ja
and
mov
mov
outsl
mov
ret
cmp
insb
pop
adc
fidivl
enter
jno
pop
inc
push
push
in
les
jb
jl
xchg
les
bound
pop
enter
dec
es
bound
aaa
insb
outsl
imul
add
fs
jb
adc
rol
sub
sbb
shlb
insl
nop
jb
lods
pop
scas
aam
jae
cmpsl
mov
jae
test
push
push
test
jns
fsubs
xchg
fcoms
fdivrl
mov
shlb
push
ja
lahf
and
or
loopne
mov
enter
cmpsl
or
in
out
pusha
pop
pop
dec
mov
jo
mov
mov
stc
scas
sbb
cmp
clc
je
mov
mov
jno
rclb
pop
lock
jns
test
pop
adc
negb
hlt
xlat
xorb
in
hlt
mov
inc
cmpsb
out
pop
pop
jp
inc
ljmp
enter
cmp
in
popf
das
adc
and
inc
cmp
outsb
add
cmp
push
dec
jbe
pop
xor
into
xorb
xchg
js
pop
leave
xchg
addr16
adc
stc
testl
pop
and
aaa
pop
adc
inc
xchg
jg
mov
lret
inc
inc
xchg
jb
dec
es
adc
add
and
test
adc
sbb
ja
fists
pop
adc
cltd
inc
sub
sbb
sub
dec
ja
mov
fcomi
jae
xchg
js
daa
pop
leave
sbb
and
cwtl
inc
and
and
fs
xchg
fdivrs
adc
inc
shl
js
inc
inc
call
insb
popa
jo
rsqrtps
shlb
sbbl
sub
jns
mov
pop
adc
dec
push
cmpl
nop
dec
xor
in
mov
ja
ret
aam
dec
test
jns
nop
mov
jae
xor
gs
sub
add
xchg
lods
xchg
dec
dec
cmpsl
cmp
aad
scas
idivl
cmp
enter
dec
push
ds
push
loopne
lods
data16
inc
mov
sub
inc
inc
dec
push
inc
enter
or
dec
jg
dec
xchg
add
dec
movsl
sbb
pop
push
mov
sub
dec
addr16
or
and
leave
adc
arpl
movsb
jnp
in
xchg
adcl
movsb
repnz
and
add
mov
bound
jbe
sub
ret
push
inc
push
daa
pop
pop
dec
mov
pop
or
sbb
pusha
mov
cmp
mov
outsl
cmpsl
fs
jl
daa
xchg
outsl
ret
jbe
and
xor
xor
mov
push
andl
insb
push
sub
mov
add
and
dec
or
mov
ljmp
daa
rcrb
js
pop
push
popa
leave
inc
js
sbb
es
dec
dec
sub
cs
xchg
jl
repnz
cltd
jl
das
and
mov
push
add
push
jb
test
aaa
cmpsl
inc
xchg
mov
push
mov
inc
sub
pop
and
adcb
or
push
push
call
mov
adcb
cltd
inc
sub
push
sbb
cwtl
lods
sub
aam
mov
addr16
add
xchg
adc
mov
stos
inc
inc
xchg
mov
push
leave
mov
cs
inc
movsb
adc
push
cmp
mov
add
inc
cmp
ja
subb
pusha
insl
es
mov
and
jg
dec
lret
xor
cs
nop
mov
xchg
movsl
xchg
sub
mov
pop
mov
sbb
mov
inc
fists
daa
xchg
shlb
pop
and
mov
pop
xor
in
add
hlt
xchg
push
sub
enter
adc
xor
aam
lcall
nop
and
test
xor
test
xchg
or
pop
sbb
inc
rolb
and
lods
inc
jns
nop
xchg
iret
push
lds
es
push
fcoms
dec
and
cmpsl
xor
pop
pop
loopne
or
leave
int3
test
rorl
push
xchg
in
xor
in
nop
lret
call
fs
or
and
xchg
xchg
ja
sbb
testl
insl
xchg
dec
push
inc
ds
xchg
call
cmc
insl
insb
loopne
test
adc
add
cwtl
mov
int3
dec
out
push
ds
dec
cmp
in
cmp
jo
test
in
cmp
iret
pop
and
fs
mov
shrb
adc
repnz
sahf
jo
je
js
jmp
jl
adc
jns
iret
in
mov
pop
ja
dec
outsl
adc
in
pushf
les
jae
cmp
test
lods
lahf
lret
jae
lods
mov
mov
jno
jae
sub
stc
pop
sahf
rcl
add
repnz
sahf
lret
xor
push
cs
aam
jae
fdivr
pop
sahf
lret
test
aam
sub
lret
push
call
lock
dec
in
jne
push
clc
nop
frstor
ja
mov
inc
or
adc
in
cmp
or
jl
adc
ja
push
jae
cs
sbb
dec
in
js
push
lret
jae
clc
xor
jns
lahf
lret
jae
je
mov
or
jae
sub
inc
xchg
push
stc
pop
sahf
dec
aam
sbb
push
repnz
sahf
lret
pop
push
mov
call
pop
xor
fs
out
les
insb
inc
jge
out
push
jo
je
js
dec
test
jl
cmpb
jg
push
out
pop
sahf
mov
pop
sahf
lret
cwtl
jl
les
out
adc
xchg
out
test
in
and
xchg
out
push
mov
mov
out
jae
adc
fidivl
add
mov
enter
adc
jns
iret
in
aam
fdiv
cs
in
fmull
loopne
in
in
jns
call
lock
inc
mov
add
xor
dec
add
cld
or
push
lock
push
cmp
inc
mov
sub
int
xor
mov
mov
sub
das
test
mov
sarb
push
int
imul
push
shlb
mov
jo
insl
and
xchg
push
sbb
movsl
insl
mov
lret
and
push
mov
bound
mov
movsb
test
pop
pop
or
rcr
daa
ja
adc
iret
rolb
xor
mov
loop
enter
add
add
adc
push
enter
in
fstpt
push
jl
mov
add
xor
cmp
sub
fdivp
dec
dec
xor
stos
inc
fadd
out
sbb
add
fwait
cmpsl
scas
pop
test
cwtl
jge
and
outsb
pop
orl
ret
jae
or
fsubrs
adc
mov
pushf
adc
or
adc
test
cmp
adc
xor
iret
inc
sub
hlt
inc
jg
nop
ret
idiv
lea
cli
or
xchg
mov
xchg
jle
push
push
aas
inc
dec
push
pop
jns
out
pop
insw
je
lea
out
mov
xchg
mov
mov
mov
aas
ja,pn
outsb
mov
cld
and
jge
ret
adc
loopne
cmp
sub
out
lcall
push
jns
xor
xor
mov
or
or
jp
enter
inc
xor
pop
fucomp
adcb
faddp
mov
or
xchg
or
inc
push
push
test
adc
icebp
cli
adc
cmp
nop
ret
mov
sub
adc
adc
or
js
imul
jl
data16
into
and
mov
cld
cmpl
cmp
sbb
out
and
adc
push
into
dec
or
mov
jl
push
xchg
inc
aam
leave
lock
pushf
inc
scas
fiaddl
scas
pop
or
rcr
ss
int3
xchg
lahf
lock
js
dec
repz
push
out
xor
fadds
pusha
shlb
push
jb
dec
inc
test
arpl
xor
add
inc
push
inc
push
mov
bound
repnz
adc
iret
daa
mov
and
cmp
push
js
adc
jl
xchg
sbb
xchg
mov
xchg
andb
in
cmp
in
xchg
or
fadds
pop
cmc
rolb
push
xchg
cmpsl
dec
cmp
arpl
jge
outsb
jae
jo
into
or
mov
iret
push
push
adc
cmpsb
add
xchg
jmp
sub
dec
inc
shl
cmp
mov
pushl
cmp
xor
push
add
lock
and
add
inc
add
pop
or
push
cwtl
out
sbb
adc
mov
add
xabort
adc
pop
pop
imul
xchg
add
loope
ljmp
adc
push
mov
sub
add
add
mov
or
sbb
add
hlt
in
inc
int
cld
shll
xchg
sarb
shlb
add
mov
in
cli
out
sti
dec
clc
cmp
sbbb
popa
push
lods
cmp
adc
mov
pop
hlt
xchg
out
add
popa
lock
or
cmp
dec
in
add
sub
fbld
in
pop
add
inc
lea
sti
movsl
xor
loop
ds
popa
shlb
sub
or
pop
lret
xor
adc
jne
fisubl
and
test
test
jne
and
sub
dec
lock
pushf
leave
jl
cmp
jle
inc
iret
cmpsb
xor
fdivrp
push
cld
jmp
inc
dec
jne
data16
aam
movsb
or
xchg
lds
pop
add
test
push
mov
fstpt
ds
outsl
xor
aaa
sub
les
cmp
mov
pop
or
dec
inc
lret
jb
imul
rorb
rorb
int3
dec
clc
repnz
and
push
add
xchg
gs
jo
jno
cld
mov
flds
fwait
pop
ljmp
fdivr
ds
mov
dec
rcrl
mov
in
push
dec
fwait
cmc
daa
push
in
mov
pop
sub
ficomps
fidivrs
dec
pop
push
pop
push
insb
jns
out
jge
lahf
mov
sarl
shl
hlt
add
cmp
daa
cmp
imul
cmp
sahf
scas
ror
ds
repz
clc
push
fwait
adc
jno
out
xor
sahf
jl
xor
mov
mov
mov
pop
in
test
xchg
sbb
fisubl
mov
test
mov
mov
mov
sbb
cmp
and
invd
jbe,pn
xchg
push
mov
hlt
and
jbe
sbb
inc
xchg
mov
or
test
inc
jb
inc
push
mov
jo
xor
cmp
repnz
pushf
mov
hlt
mov
sbb
push
stc
in
inc
mov
ss
sub
in
inc
or
xchg
cld
push
mov
daa
in
or
cltd
mov
out
dec
mov
or
jl
jge
fwait
inc
addb
dec
xchg
andl
rolb
stc
cmp
add
std
xchg
sbb
imul
rcrb
mov
mov
jbe
add
jge
ficompl
inc
mov
sbb
dec
call
mov
cmc
add
cld
jb
lea
add
sbb
movsb
mov
pop
lret
aaa
lds
mov
mov
mul
ret
aad
test
mov
jae
jmp
mov
mov
mov
aaa
popa
js
add
mov
and
mov
fcoms
cwtl
popf
ret
lods
cmp
orl
inc
lcall
ret
loopne
leave
push
push
push
sti
xor
mov
pushaw
fistl
bound
scas
insl
or
pop
or
inc
add
dec
cmp
inc
pop
mov
sub
sub
mov
pusha
aaa
psubsw
mov
test
sub
xor
push
arpl
mov
cmpsb
sahf
pop
inc
out
shrl
and
sub
adc
inc
jg
movsb
test
jle
hlt
push
pop
or
ficoml
iret
xchg
lahf
push
enter
cwtl
lahf
pusha
rcrb
popa
jbe
pop
mov
add
nop
clc
and
lcall
scas
insl
daa
mov
push
push
push
nop
scas
xor
out
imul
push
mov
mov
mov
mov
push
dec
outsl
adc
inc
xchg
out
mov
andl
nop
cmp
data16
mov
movsl
mov
je
sub
jl
movsl
test
xor
jmp
clc
mov
fs
push
mov
int
stos
cld
adc
push
in
jmp
lock
pop
cli
jle
push
mov
cwtl
mov
ss
pop
je
in
imul
add
and
cmp
testb
pop
push
mov
mov
push
pop
scas
scas
add
push
mov
and
sbb
xorb
icebp
add
adc
or
mov
cmp
dec
addl
sub
popf
dec
fstpl
jnp
inc
test
rcrb
mov
sub
movb
outsb
mov
fsubrs
nop
stc
loop
stos
shll
lods
int
inc
pop
test
call
mov
subl
push
ss
lods
push
inc
shlb
addl
hlt
and
add
pop
mov
sbb
movsl
sbb
xchg
nop
nop
push
call
paddq
std
fcompl
data16
rcrl
cli
add
sbb
cs
push
roll
rolb
adc
xor
lods
aam
pop
test
inc
jne
fdivr
xor
adc
fstpt
mov
push
push
mov
ret
mov
out
mov
test
ss
das
aam
iret
xchg
mov
dec
xchg
adc
dec
mov
nop
and
adc
mov
ret
mov
mov
add
mov
ljmp
je
call
mov
inc
inc
inc
mov
je
lahf
pop
mov
pop
sbb
push
jo
mov
add
imul
push
mov
sbb
fcoms
xor
mov
jno
paddw
aas
jge
loop
mov
fcoms
or
rclb
push
filds
lcall
icebp
sbb
imul
in
fstl
sbb
jg
rorb
fisubl
test
fwait
adc
adc
movsb
cmpsb
aam
lock
pusha
cli
add
mov
jnp
bswap
mov
push
or
adc
push
push
mov
add
and
inc
sbb
aam
fcmove
add
cltd
and
cmp
xchg
std
movsl
sbb
ss
sbb
push
dec
or
mov
jmp
lods
sbb
lods
dec
jmp
enter
dec
xchg
idivb
sbb
enter
xchg
jae
insb
pop
add
jno
push
dec
ds
lock
test
mov
sbb
out
arpl
mov
mov
jp
rorb
adcl
and
pusha
test
pop
inc
je
in
inc
pop
addr16
xlat
add
roll
fcom
std
push
sbb
lods
sarb
lcall
add
xchg
and
and
int3
dec
hlt
andb
dec
mov
and
and
mov
add
or
pop
dec
out
test
inc
push
push
dec
lds
andl
and
subl
dec
cmpsl
jl
inc
and
xchg
or
add
lds
push
push
add
jmp
xor
push
pop
jl
jmp
rcr
pop
outsb
lds
add
push
les
inc
mov
loopne
adc
lock
mov
sub
sbb
xchg
and
nop
or
push
imul
inc
pop
into
mov
loope
and
les
xchg
pop
jno
push
sbb
test
testl
push
push
cmc
push
addl
or
inc
mov
rcrl
push
scas
xchg
xchg
stos
cmp
cmp
or
mov
dec
ljmp
push
mov
je
push
sti
fisttpl
ds
pop
mov
mov
add
push
movsb
cmp
cmpl
xchg
mov
bound
xchg
pop
mov
pusha
fisubl
add
pop
fstpl
shll
shr
push
inc
es
aam
mov
aad
mov
pavgw
add
pop
add
testb
cmp
mov
dec
hlt
fisubl
lods
out
lahf
adcl
cmpl
stos
adc
sbb
xor
push
je
sbb
insb
and
dec
rorb
pop
mov
jo
cli
jge
ret
and
cmp
pop
mov
popa
and
inc
mov
imul
adc
and
scas
adc
sbb
daa
clc
rcrb
in
inc
push
inc
scas
or
imul
popa
pushf
shr
push
nop
xor
add
dec
enter
jp
xor
xor
adc
dec
and
add
dec
scas
inc
push
inc
or
push
aaa
adc
pop
push
sub
xchg
lods
ret
or
and
imul
or
pop
faddl
push
pop
lea
push
fmull
and
cmp
ss
pop
dec
call
sbb
mov
arpl
cmp
fdivs
shll
adc
adc
stc
push
mov
pop
xor
push
jle
and
inc
mov
jmp
sub
or
add
inc
jl
push
sbb
pushf
add
test
aas
outsl
mov
std
push
mov
subl
or
xor
ror
adc
mov
or
mov
cltd
nop
mov
insb
or
and
clc
sbb
cmp
jl
add
xchg
cmp
dec
repnz
test
xor
fwait
cmp
xchg
hlt
pop
hlt
add
push
mov
int
aaa
movsb
lods
and
in
push
cmp
repz
in
jge
cwtl
or
jmp
hlt
hlt
xchg
sbb
dec
inc
fiaddl
test
mov
mov
or
cmpsb
mov
dec
fstpt
js
mov
insl
push
popa
cmp
jo
inc
mov
andb
ss
addr16
mov
jne
shlb
adc
push
add
cli
dec
mov
int
cmpsb
inc
outsl
mov
cld
mov
pop
xchg
or
xchg
imul
cmp
and
sbb
jo
addr16
test
jne
repnz
add
push
or
pop
movsb
jmp
test
and
outsb
mov
add
pusha
test
arpl
movsl
lods
into
add
fdivl
lods
lock
push
mov
sbb
add
pop
mulb
loopne
push
push
or
mov
mov
and
cmpsl
lods
jo
sbb
sbb
imul
inc
pop
out
cli
jge
xor
pop
scas
and
adc
lret
jmp
push
fimuls
orb
mov
stc
xchg
push
loopne
jmp
ret
xor
add
sub
or
dec
xchg
and
mov
push
inc
mov
sarb
mov
test
push
xor
and
sbb
mov
pop
or
cwtl
push
lock
in
in
in
push
mov
inc
xchg
mov
scas
orl
imul
xchg
cmp
test
in
mov
and
iret
mov
aad
mov
push
incb
mov
jns
aad
mov
or
movsl
cmpsl
testl
cmpsl
outsb
rcrb
and
test
lock
add
dec
inc
clc
outsl
sbb
data16
push
mov
das
sub
adc
inc
lods
js
pusha
mov
mov
pop
dec
adc
cmp
pop
test
pop
push
ljmp
rol
fs
or
add
mov
lea
pop
xacquire
mov
pop
push
lea
mov
sbb
mov
mov
and
inc
add
pop
js
aam
iret
xor
cltd
xor
aam
xchg
imul
ror
test
lahf
or
mov
daa
int
mov
test
xorl
jns
adc
mov
mov
xchg
fstl
sub
sbb
ss
xor
jg
rorl
adc
cmp
shlb
mov
in
sub
add
nop
jbe
fcoml
shlb
lods
bound
inc
enter
pop
inc
sub
in
mov
mov
mov
sbb
dec
cmp
cwtl
daa
mov
mov
sub
mov
enter
ja
fs
sub
cmp
adc
lods
cmpsb
mov
and
insl
test
jns
and
clc
and
outsb
sub
sub
ljmp
inc
cmpl
mov
clc
fwait
jns
or
jne
or
movsb
lods
sbb
ret
pop
push
xlat
orb
or
pop
call
mov
xchg
shlb
rorb
sbb
or
pop
adc
mov
iret
add
and
adc
sbb
mov
sub
mov
cmp
inc
or
sbb
mov
sti
jnp
adc
popf
test
and
enter
mov
pusha
pop
inc
fiaddl
mov
xchg
les
pop
repnz
icebp
mov
das
mov
icebp
push
or
int3
mov
push
xchg
scas
push
inc
and
pop
add
cmp
pop
rorb
fincstp
lods
adc
adc
xchg
test
dec
repz
popf
and
outsb
push
sub
cmp
stos
dec
jmp
dec
push
sarl
loopne
push
mov
icebp
lsl
test
push
outsb
sbb
mov
shr
lea
in
dec
add
shl
dec
mov
out
adc
ds
repz
mov
inc
sub
xor
push
mov
add
dec
add
inc
lods
mov
add
cmp
adc
mov
or
add
push
pop
cmp
sbb
imul
mov
push
mov
xchg
adc
mov
bound
mov
aam
aad
jecxz
je
sbb
sahf
adcl
cwtl
inc
insl
adc
daa
or
add
mov
mov
ret
xor
inc
pop
gs
xchg
les
inc
aad
aas
nop
aaa
dec
insl
adc
dec
sub
jecxz
jge
push
clc
outsl
movsb
xchg
inc
outsb
enter
inc
pop
jns
xor
cli
aaa
mov
cld
icebp
adc
pop
dec
add
pop
hlt
mov
add
lret
gs
insb
mov
test
loope
pop
fwait
mov
jo
xchg
sbb
scas
or
pop
pop
sahf
das
sub
insl
jge
mov
dec
std
inc
pop
gs
je
mov
inc
dec
loope
jmp
and
sbb
test
mov
gs
out
or
out
and
inc
sbb
jne
fs
xorb
arpl
adc
jge
inc
sbb
add
scas
mov
stos
call
test
lds
rclb
mov
sbb
pop
sub
jmp
mov
cmc
add
out
popf
inc
mov
adcb
lret
aam
inc
rclb
cltd
sub
or
faddp
adc
inc
movsb
xor
xchg
pop
add
lock
push
jne
pop
je
mov
in
ja
add
sbb
and
add
xchg
adcb
adc
outsb
push
mull
movl
mov
xor
mov
pop
fdivl
or
or
cmp
aam
movsl
and
ret
add
add
jg
les
rolb
rclb
add
mov
test
mov
push
or
out
and
adcl
cmp
adc
out
cmp
orl
push
adc
add
adc
loop
rorl
and
pop
add
dec
mov
mov
add
add
and
adc
xchg
push
in
push
add
push
mov
pushf
insb
mov
adc
repnz
fwait
push
pop
imul
je
stos
or
dec
mov
add
inc
cmpsb
movsb
lret
inc
jg
lock
leave
aam
in
in
adc
push
mov
popa
fwait
sub
mov
jne
pop
lea
mov
jb
lret
aas
int
push
mov
or
push
int3
push
imul
enter
add
outsl
xor
fldenv
jge
or
pop
cmp
out
mov
cs
adc
es
gs
xor
js
loopne
pop
push
sub
or
fwait
test
mov
jb
push
out
and
lret
gs
pusha
insl
insl
add
fidivrl
mov
jmp
push
hlt
sub
cs
or
pop
add
or
and
inc
or
push
mov
daa
sbb
add
and
add
add
cmp
add
jmp
pusha
fbld
andb
add
ficoms
jo
jo
inc
call
ja
push
adcb
jl
inc
loopne
in
lods
inc
mov
add
rclb
push
rol
or
sub
inc
push
test
pop
pop
loopne
repnz
ret
mov
cmp
sbb
popa
fs
mov
iret
sub
xchg
xlat
add
xor
sbb
aam
adc
pushl
shll
popa
adc
scas
add
mov
movsl
xor
call
adc
dec
add
pusha
jne
aas
dec
inc
xor
and
enter
and
add
xchg
fstl
xorl
pop
pusha
inc
xchg
cmpsl
ret
jne
mov
repz
adc
push
rclb
movsb
and
dec
mov
dec
adc
sbb
ret
enter
iret
pusha
jo
sbbb
pusha
push
fs
sbb
ret
test
or
inc
int
lea
adc
lcall
pop
cmpl
js
mov
in
test
aam
mov
clc
mov
xchg
or
nop
inc
or
or
pop
ret
idiv
lock
sbb
mov
lret
jo
jge
popa
pop
adc
mov
into
repz
or
je
cmp
ss
sub
jmp
dec
and
mov
test
xlat
test
and
into
push
lea
dec
dec
inc
inc
dec
dec
dec
push
push
daa
xor
int3
and
out
aaa
xor
xor
das
cmc
dec
loopne
fcoms
xchg
add
into
movsl
out
adc
pop
dec
loopne
int3
addl
or
mov
iret
mov
enter
iret
sub
outsb
test
cmp
add
out
mov
push
rolb
jo
add
sbbb
in
mov
addb
sbb
sub
rclb
mov
jl
mov
and
popf
mov
and
lahf
jno
ljmp
roll
test
xor
or
push
data16
inc
pop
inc
movb
ljmp
add
push
and
mov
xor
lea
sbb
cmp
fwait
lahf
movsb
add
int3
shl
jle
cmp
out
or
cmp
pop
xlat
bound
push
inc
pop
xchg
cmp
inc
cmp
test
mov
pop
cmp
orl
rorb
and
rcrb
or
pop
inc
mov
test
dec
mov
inc
sbb
cs
cmp
sbb
push
push
enter
nop
testl
fistpl
rcl
cwtl
xor
dec
push
test
or
add
xor
sbb
push
mov
jnp
fsubrs
inc
not
xchg
xchg
test
sbb
or
xor
xor
jo
hlt
pop
insb
pusha
add
pop
movsb
xor
test
aad
cmp
or
push
and
xor
mov
sysret
cmp
fldcw
sbb
pusha
insb
or
js
mov
aam
nop
pop
js
add
loopne
cmpsl
and
cmpsl
sbb
adcl
sub
addl
xor
mov
add
cmp
sub
dec
inc
wrmsr
fcomps
xor
pop
sub
cmp
jg
cld
dec
or
mov
jle
aad
and
and
iret
les
or
clc
adc
jmp
xlat
pop
in
adc
mov
mov
push
mov
mov
mov
push
or
adc
mov
push
push
iret
inc
inc
jge
iret
xor
add
push
push
dec
cwtl
push
jb
add
jns
ret
xchg
push
mov
mov
rorl
cmp
push
popf
jb
or
pop
lahf
add
sbb
aam
rorb
jb
and
mov
mov
mov
xchg
rorb
jne
imul
xor
jmp
pop
or
xchg
not
xlat
mov
sub
push
lds
or
and
in
xlat
xchg
cmp
movb
mov
inc
xor
pop
ja
js
cmp
mov
ja
sub
mov
push
rcl
daa
movsl
addr16
test
push
sub
mov
adc
dec
xchg
xor
stos
add
movhps
cmp
or
fldcw
pop
adc
xorb
or
loop
add
loop
jo
mov
fisubs
push
pop
inc
mov
and
xchg
notb
pop
addb
shrd
fwait
aam
in
out
shl
aaa
adc
mov
insl
pusha
imul
str
testb
sbb
outsb
or
inc
and
das
int
cmp
lret
add
rolb
fnstcw
ja
movl
inc
cmpsb
ret
add
xchg
outsb
fcoms
adc
mov
aas
cs
push
test
push
add
fstpt
data16
cwtl
adc
or
push
imul
adc
add
sub
xchg
or
test
test
adc
xor
pop
das
mov
xor
pop
add
sbb
xor
inc
ret
subl
mov
hlt
aam
push
pop
jle
ds
pop
sub
add
dec
insb
xor
out
inc
mov
test
dec
inc
imul
adc
aaa
inc
inc
xor
push
xor
sub
imul
sti
insl
iret
pop
lock
add
xor
push
movb
test
ja
sbb
push
mov
mov
or
cld
outsb
es
out
rolb
pusha
jl
std
inc
shll
jl
inc
sbb
cmpsl
std
push
push
rcrl
pop
movl
repnz
push
add
and
push
sar
cmp
pop
je
xor
outsb
inc
pop
bound
inc
cmp
loopne
fstpl
cmp
dec
jg
pop
lock
pusha
add
mov
adc
xchg
fdivp
push
out
push
sbb
sub
pop
mov
cmp
cmp
xchg
mov
cmp
xor
test
shll
adc
pop
jmp
addl
je
mov
mov
imull
outsl
adc
movsb
add
xchg
sub
stos
push
pop
pusha
bound
mov
iret
jae
push
push
mov
dec
hlt
mov
lahf
out
dec
nop
mov
dec
mov
mulb
scas
js
test
mov
pop
mov
xchg
push
cmp
dec
ficoms
dec
xchg
pop
in
add
filds
mov
sub
andps
inc
xor
sub
imul
xor
add
sbbl
fnsave
and
jns
dec
adc
add
jne
sarb
sbb
cltd
ret
dec
push
sub
lret
nop
cmp
push
dec
fildll
pop
shll
inc
push
popa
and
lds
bound
rcr
addl
mov
aam
loopne
xor
xor
test
fcoml
push
sbb
das
adc
sbbb
and
enter
loopne
movb
sbb
lds
lret
and
sub
stc
insb
xchg
and
bound
mov
or
sbb
mov
outsb
sbb
mov
adc
add
sbb
test
les
mov
inc
js
push
incb
add
mov
push
das
xor
push
mov
adc
push
push
push
lock
sahf
cs
in
dec
adc
lret
insl
stos
movsl
xchg
inc
adcl
inc
mull
mov
push
adc
push
arpl
fstpt
test
adc
mov
movsb
outsl
mov
mov
clc
inc
adc
cmp
push
jno
in
push
xor
dec
adc
add
add
sbb
and
jnp
aad
dec
repnz
mov
jae
in
xchg
sar
inc
dec
scas
sbb
movsb
sbb
mov
dec
adc
xchg
movsl
adc
sub
lahf
add
mov
or
pop
dec
dec
sbb
mov
inc
and
ds
and
aad
test
inc
xor
xor
dec
lret
std
test
cltd
pop
push
sbb
and
mov
adc
pop
adc
jecxz
xchg
and
cld
jp
xchg
mov
mov
mov
rcrl
cld
rorb
test
jecxz
jle
xor
mov
loopne
xor
xchg
in
pop
push
mov
sbb
scas
push
shr
shr
add
jmp
cmp
adcb
sub
aas
push
jne
mov
in
popa
push
pop
xor
sub
daa
mov
lcall
pop
fsubrs
push
sbb
inc
and
daa
dec
adc
dec
mov
push
and
cs
pop
or
popa
xor
inc
repnz
aaa
sub
sub
mov
and
adc
dec
mov
jl
sbb
sub
loopne
sbb
or
push
in
push
sub
xor
pop
mov
lock
sbb
mov
fisttpl
nop
dec
iret
jmp
mov
sub
sub
jg
dec
mov
orb
lds
inc
shlb
jne
mov
xchg
add
cmp
xor
xchg
sbb
aaa
sub
push
roll
sub
outsl
sbbl
xor
adc
pop
xchg
cmp
je
sub
nop
dec
stos
and
mov
arpl
inc
test
insl
in
rcl
psrlq
leave
leave
leave
leave
aad
xlat
fmul
leave
leave
leave
fcmovnu
leave
leave
leave
leave
fstp
ffreep
leave
leave
leave
leave
rol
leave
leave
leave
leave
enter
leave
leave
lret
leave
leave
leave
leave
int
iret
mov
xchg
mov
xchg
or
icebp
sbb
roll
enter
sbb
mov
push
jb
dec
add
jge
mov
shr
mov
in
sti
outsb
out
mov
push
mov
lods
data16
push
add
dec
xchg
fbld
dec
mov
pusha
in
std
add
sub
pop
sbb
cmp
add
mov
rorl
pop
adc
or
sub
rolb
repnz
rcr
aas
aam
add
pusha
adc
shll
lret
jo
mov
pop
cmp
arpl
sbb
mov
dec
js
push
lcall
mov
je
sub
mov
push
cmc
jae
mov
lods
out
inc
adc
fiaddl
or
mov
inc
sbb
pop
xor
mov
push
pop
mulb
ret
inc
xchg
xchg
mov
ljmp
pushl
push
add
fwait
xor
xchg
adc
cmp
lcall
jmp
loop
jo
xor
add
adc
dec
mov
sbb
movsb
flds
or
push
pop
xchg
test
lea
pusha
outsl
imul
out
dec
shll
fmuls
outsl
inc
sbb
mov
push
or
ret
inc
xchg
adc
mov
stos
popa
mov
inc
jns
in
xchg
jae
add
lock
pop
xor
inc
add
call
pop
xchg
and
popf
mov
xorb
mov
sbb
or
rorb
or
xor
adc
rol
shl
pop
jg
scas
pop
sbb
and
jb
mov
gs
popa
stos
ds
iret
jecxz
adc
dec
nop
sbbb
test
imul
xor
push
cs
pop
adc
incl
inc
sbb
inc
outsb
outsl
jne
pop
cmp
push
inc
bound
adc
push
imul
cmpsl
js
jne
rcll
jge
lock
out
inc
or
cmp
lock
iret
jge
add
dec
aaa
lcall
jne
adc
movsb
sbb
push
xor
daa
add
adc
ret
in
or
or
pop
jl
inc
daa
negb
add
inc
out
jmp
mov
push
leave
mov
jmp
outsb
fwait
add
popa
cmp
push
ljmp
js
push
das
repnz
out
push
jae
pop
push
xchg
lahf
shr
test
loope
dec
outsb
jecxz
push
and
and
push
xchg
scas
adc
add
xor
call
and
push
in
inc
push
and
push
ret
inc
pop
adc
xchg
das
or
es
add
pop
push
lock
dec
cwtl
adc
adc
icebp
fildl
jle
xchg
push
leave
insl
mov
pushf
jno
sete
and
nop
push
fisttpl
add
adc
ret
sub
add
cli
cmp
mov
add
sbb
xor
fiadds
test
inc
cmp
mov
jmp
xor
xor
mov
fiadds
sbb
pop
push
cmp
xchg
push
test
clc
sub
fcomps
add
cmp
xchg
push
xchg
aas
out
mov
jg
xchg
inc
sbb
or
hlt
pushf
cmp
add
and
jecxz
fdivrl
das
or
bound
dec
dec
hlt
rolb
ss
push
add
aaa
fwait
mov
mov
fsubs
mov
xchg
and
std
lret
insl
and
ds
add
fldl
inc
sub
adc
or
mov
mov
adc
jp
adcb
xchg
jle
pusha
push
and
dec
roll
popa
in
pusha
pop
fmuls
sub
adc
fsubrs
jmp
inc
shrb
test
aaa
adc
stos
loope
aaa
inc
xchg
orb
in
in
pop
fbstp
pop
mov
adc
and
add
mov
and
sub
push
hlt
mov
sub
push
cld
mov
in
dec
mov
adc
push
xchg
aam
fucomp
popa
or
push
test
test
jne
push
mov
xor
and
cmp
inc
inc
push
push
sbb
pop
mov
jle
mov
mov
and
jae
adc
stos
add
fcmovb
adc
adc
cmp
push
fadds
ss
or
rcl
ror
fadds
fucomip
add
mov
fadds
fyl2x
pop
push
insb
pusha
in
lock
pop
adc
push
sub
int3
adc
push
fdivrs
enter
sub
sbb
pop
jp
mov
add
nop
icebp
pop
shrl
push
adc
push
inc
dec
hlt
xchg
or
push
and
out
test
int
cmc
faddl
in
inc
aaa
sub
aas
ret
filds
or
or
pop
aam
sbb
nop
fstl
cmp
pushl
mov
jg
idiv
push
xorb
and
pop
xchg
sub
cmp
icebp
insb
mov
fdivrl
aaa
inc
test
mov
loopne
sbb
add
out
xor
adcb
sbb
addr16
push
push
xchg
add
lods
mov
int
sub
stos
lods
ljmp
lret
inc
inc
xchg
jle
add
sarl
sbb
inc
sbb
add
orb
sbb
fcmovnb
xor
lret
lahf
and
testl
movsb
push
enter
jle
xor
and
or
cmp
orb
sbb
sahf
mov
xchg
add
and
push
inc
cmpsl
lock
popa
or
add
testb
xchg
xchg
mov
add
das
js
and
frstor
cmp
push
add
inc
push
stos
dec
jo
das
data16
inc
mov
sti
inc
addr16
idivb
cli
push
inc
cwtl
roll
das
and
mov
or
into
pop
sub
sbb
or
sbb
add
popf
inc
mov
inc
dec
in
push
or
push
jno
aaa
and
pop
dec
xchg
add
xchg
push
inc
dec
inc
xchg
stos
nop
xchg
clts
ret
cmp
ja
popf
cmp
shlb
xor
inc
stos
inc
popl
lahf
xor
sbb
push
loope
xor
push
das
cmp
dec
mov
dec
xor
adcl
rcrb
jne
int3
lea
mov
add
add
mov
pop
xchg
adc
or
scas
push
test
movsl
mov
mov
sub
pop
cli
pop
mov
mov
or
pushf
mov
inc
xor
loopne
movsb
xchg
fimull
xchg
sbb
in
clc
loop
lods
sub
cltd
xor
mov
loope
and
mov
cld
jo
or
xchg
in
or
test
adc
and
daa
mov
std
xchg
pop
adc
loop
sbb
nop
fs
cs
dec
outsb
xor
adc
je
add
mov
nop
ret
pop
mov
daa
mov
jb
xor
mov
push
adc
mov
xchg
cwtl
mov
pop
jne
push
inc
push
jae
mov
iret
xor
jb
inc
iret
dec
sbb
subb
xchg
push
adc
ret
push
pop
and
push
fwait
shrb
dec
inc
pushf
popa
loopne
faddl
iret
aam
sub
packuswb
mul
xor
inc
mov
inc
push
push
xchg
inc
inc
add
mov
xchg
iret
push
mov
lock
hlt
cmpsb
push
push
cs
and
push
add
pusha
add
xchg
enter
mov
rol
popa
and
inc
adc
mov
mov
add
sub
adc
jne
or
and
jns
sbb
pop
and
lods
nop
xlat
xchg
or
ja
out
mov
hlt
inc
push
mov
adc
and
es
dec
pop
add
rcrb
inc
enter
mov
or
dec
aad
xor
inc
es
dec
xor
adc
mov
mov
pushf
adcl
or
cltd
or
rcl
or
push
inc
inc
push
shll
insb
iret
jo
mov
jb
mov
test
in
or
jecxz
adc
popa
insb
outsl
cmp
xlat
nop
mov
jbe
js
push
add
imul
mov
fs
data16
dec
add
repnz
out
pop
dec
test
insl
mov
adc
out
and
sbb
adc
or
test
dec
data16
or
lahf
or
xchg
pushf
adc
push
push
dec
outsb
pop
ret
shlb
filds
push
cmp
incl
aas
movsl
xlat
movsb
nop
sub
gs
xlat
push
or
mov
pop
or
rorb
lret
xor
xlat
les
inc
les
outsl
and
pop
add
je
mov
mov
das
cmc
xor
fistps
outsl
fistl
orb
outsb
push
rorb
dec
jbe
sbb
in
or
add
jns
or
imul
imul
push
push
pushf
pop
push
push
push
loopne
mov
dec
push
cmp
jnp
imull
rcr
push
rorb
insb
mov
adc
clts
mov
cmp
fs
ss
insl
mov
and
push
push
je
lods
sbb
fcoml
enter
jno
adc
xchg
mov
loope
or
xchg
pop
and
popa
mov
and
xchg
mov
or
push
stos
push
lcall
mov
out
cmp
dec
sbb
dec
sub
addr16
mov
push
add
mov
sub
add
pop
mov
xchg
and
repz
pop
inc
fnstsw
inc
or
pop
std
push
push
les
lret
pop
enter
push
push
xchg
push
scas
insl
test
pop
ffree
mov
xchg
dec
nop
dec
push
push
insb
aam
or
dec
push
cwtl
enter
xor
lret
add
push
dec
sbb
or
nop
fmuls
lea
jo
xor
add
mov
ds
jnp
into
orb
inc
inc
sub
sbb
gs
or
lock
xlat
lret
sbb
sub
ror
shld
push
adc
add
sbb
inc
inc
ret
dec
push
je
daa
adc
inc
or
push
loop
lods
adc
xlat
add
xor
jge
das
lea
loopne,pn
sarl
inc
pop
lods
cmp
xor
cmp
idivl
or
les
mov
enter
or
pushf
add
adc
shrl
xor
lea
sub
sub
xchg
lock
sbb
pop
or
lea
js
xor
jae
cmp
loopne
shrl
pop
ret
fs
insl
movlps
inc
mul
sub
and
push
ret
sbb
push
enter
push
dec
adc
nop
out
test
stos
push
adc
rclb
shlb
adc
and
fadd
pop
rcll
rcrl
or
adc
mov
sbb
sbb
mov
pusha
inc
icebp
dec
xor
jne
dec
pop
adc
adc
shrb
insb
and
xor
std
mov
cmpsl
or
pop
daa
add
test
inc
mov
and
test
or
jo
or
aaa
inc
and
add
adc
adc
sbb
pop
dec
lods
mov
or
sbb
push
cltd
push
loope
adc
sbb
popa
dec
sbb
push
xchg
mov
int
icebp
cmpsb
push
ss
mov
int3
lds
in
test
dec
daa
mov
repz
adc
sbb
mov
push
sub
ret
int
cli
js
lock
aaa
fmuls
jns
or
push
or
xchg
pop
sbb
mov
add
and
movsb
jg
rcrb
or
xor
jecxz
pop
jecxz
adc
fs
lock
scas
dec
jmp
inc
jp
jo
xorl
fists
pop
add
jle
cmp
cli
cmp
jle
ja
jecxz
addr16
push
sub
das
leave
fdivs
cmp
inc
mov
and
aam
repnz
sbb
out
test
or
pop
into
and
xchg
push
or
loop
scas
and
dec
cmp
call
pop
and
lea
pop
inc
pcmpeqd
movsb
aam
cmpsb
or
dec
jl
or
adc
mov
pop
dec
add
mov
aam
add
int3
lahf
pusha
mov
pop
jno
dec
rorb
sbb
scas
int
push
das
add
shrb
andb
jne
cmp
cmpb
test
dec
add
fisttpll
bnd
push
add
adc
std
inc
or
push
inc
mov
adc
push
addr16
mov
push
test
nop
inc
and
mov
or
lret
dec
pop
sbbb
dec
pop
jle
push
add
int
mov
outsl
dec
push
clc
or
and
sbbl
xorb
dec
inc
xchg
nop
ret
je
sub
sbb
mov
ja
or
sub
sbb
inc
add
fs
stos
ss
mov
sbb
add
scas
gs
clc
xchg
adcl
aam
pop
scas
jge
mov
sub
cmc
push
loopne
mov
les
popa
in
mov
pop
inc
imul
lock
add
and
das
xor
adc
inc
adc
inc
push
and
inc
adc
jmp
xchg
int3
or
add
or
imul
xor
push
fwait
jle
inc
cmp
js
fnstcw
mov
sarb
pop
mov
sbb
mov
filds
pause
lods
repnz
mov
or
lods
fidivrs
sub
mov
out
push
mov
and
fdivl
call
into
popf
lock
cmpsl
jg
jmp
inc
jne
inc
mov
roll
in
shrb
jno
mov
inc
insl
lahf
das
adc
hlt
pop
aad
sbb
mov
mov
sti
sbb
xchg
dec
sub
mov
sbb
or
flds
inc
iret
pusha
lods
adc
jecxz
pop
xchg
adc
mov
mov
aas
das
nop
fadds
sbb
cmpsb
xor
pop
adc
daa
pop
lea
jge
mov
push
lret
and
mov
and
and
jnp
je,pn
xor
clc
sub
inc
and
xchg
ja
push
xor
repz
dec
inc
add
or
or
xor
push
das
mov
mov
out
cmp
fcomps
and
orl
xchg
subb
add
adc
pop
sub
push
mov
inc
sbbb
push
gs
shlb
mov
sbb
loopne
jne
shlb
in
add
cmp
clc
sbb
arpl
mov
shll
popa
and
idiv
insl
jae
add
dec
loope
mov
inc
in
or
inc
sbb
or
inc
jbe
nop
sbb
cmpsl
les
inc
and
cmc
mov
cmpsl
sti
jle
sbb
xchg
mov
xor
imul
and
jo
shrl
test
dec
mull
inc
repz
or
addr16
push
and
mov
cli
mov
hlt
push
pop
xchg
xor
jno
mov
xorb
outsb
in
loopne
sbb
rcl
out
into
xchg
cmpsb
mov
movsl
cmp
xor
xchg
inc
inc
loope
in
xchg
pcmpgtb
jae
jmp
or
xor
dec
fcoml
lds
aad
add
or
setp
les
push
lea
data16
mov
push
jg
mov
les
repnz
es
subl
cli
mov
rcrb
sub
xor
movsb
sbb
pop
cmpb
xor
scas
xor
lret
pusha
dec
xor
ja
adc
or
mov
movups
inc
push
stc
add
mov
das
add
lcall
mov
rclb
lods
movsl
adc
cmovle
and
fucomip
xor
or
add
add
sbb
pop
jecxz
ja
and
outsl
jae
and
cmp
or
cmpsl
scas
subl
sbb
stos
in
mov
and
call
and
xchg
stc
call
out
push
and
cli
int
push
add
addl
xchg
lea
push
cmp
push
adc
or
jo
inc
jnp
inc
icebp
push
push
push
and
sub
and
cmp
nop
clc
cmp
pop
or
sbb
xchg
popa
cmpsl
test
mov
or
sahf
and
dec
dec
xor
sub
mov
movb
mov
or
mov
clc
cmp
aam
pop
or
clc
and
add
mov
pusha
lock
rcll
jle
jns
mov
add
pop
push
and
sbb
dec
cwtl
fimuls
adc
sti
xchg
and
xchg
fnstcw
test
add
les
jle
push
adc
dec
xor
idivb
xchg
or
clc
or
adc
cmp
jbe
adc
sbb
xchg
and
mov
xor
sbb
dec
sub
dec
inc
call
call
imul
or
push
into
hlt
sbbb
sbb
inc
mov
arpl
sub
aaa
xor
js
add
or
les
add
je
cmp
cmpl
scas
enter
insl
mov
and
sub
and
xchg
add
sub
push
ss
mov
and
andb
jle
mov
xchg
js
mov
movsb
add
add
bound
pop
xchg
adcb
bound
mov
addr16
inc
and
mov
and
test
pop
cld
or
roll
mov
sbb
push
xor
cmp
incl
push
jbe
fstpt
inc
xor
xchg
mov
xchg
sbbb
sbb
adc
cmp
add
fs
es
fsubr
inc
pop
or
mov
movsl
inc
addb
test
xchg
pop
int
movl
adc
test
scas
or
inc
mov
popa
repnz
popa
lcall
fimull
movsl
int
inc
sbb
mov
imulb
es
enter
cmovp
nop
jno
xor
ffree
test
mov
xchg
sbbl
and
mov
mov
push
inc
push
add
sti
nop
push
or
pop
xchg
sub
fsubrp
mov
cmp
adc
enter
mov
cmove
lock
mov
clc
push
pushf
cs
push
mov
sbb
daa
mov
mov
sbb
test
and
test
pop
cmp
push
xor
aaa
fstl
rol
mov
mov
and
mov
xchg
pop
in
addr16
pop
ficoml
cwtl
movsb
adc
inc
ret
add
jecxz
sbb
cmp
shll
inc
mov
orl
add
push
shr
aaa
and
pop
int
cmc
xchg
push
ss
pop
leave
add
xchg
faddl
aam
ja
out
xchg
pop
test
rolb
or
into
and
push
sub
mov
mov
movsb
leave
sbb
cltd
fistps
fcoml
nop
cmpsb
leave
cmp
pop
hlt
lock
lock
cmp
imull
push
mov
mov
pop
fmuls
imul
ljmp
push
cmp
mov
mov
adc
inc
sub
mov
push
insb
test
sub
out
sub
movsb
sub
scas
data16
or
push
add
dec
sub
add
xor
xor
into
lds
call
mov
mov
test
jbe,pn
test
pop
xor
lods
das
push
ljmp
mov
add
inc
inc
daa
pop
and
dec
push
imul
sub
adc
test
xchg
negb
subb
imul
je
push
sub
outsl
je
xchg
dec
dec
aas
fidivl
cmpsl
dec
cmp
fsub
pop
and
add
movsl
das
sub
dec
xor
lret
lods
fs
test
cmp
add
loopne
sub
xor
cmp
ss
xor
pop
xchg
jo
addb
dec
pop
or
mov
orl
test
pop
loop
scas
outsl
jl
push
sub
xor
pushf
cli
mov
roll
in
lods
push
and
rcrb
in
push
sbb
arpl
inc
add
sub
push
mov
mov
inc
dec
push
xchg
inc
imul
movsl
dec
push
call
fcmovb
adc
fdivs
push
gs
cmp
cmp
out
daa
cmp
sub
lock
add
imul
pop
add
cld
jecxz
cld
insb
rclb
mov
mov
orl
cld
adc
push
aas
inc
mov
xor
sub
lods
push
lahf
dec
xorb
mov
push
or
jmp
mov
inc
lcall
or
or
cmp
mov
pop
repnz
add
adc
orb
add
movsl
movsl
xor
rorb
push
iret
inc
xor
add
sub
iret
push
and
pop
rorb
les
adc
mov
mov
xchg
push
xchg
jle
push
xchg
jnp
mov
shrb
nop
es
push
je
int
repz
push
js
cmp
test
sar
xchg
cmp
mov
test
mov
cmp
fcoml
push
jmp
sbb
sti
int
stos
jne
aas
pop
xor
shll
mov
pop
push
xor
cmp
hlt
xor
and
dec
iret
pop
sub
push
sbb
scas
and
adc
pop
push
pop
pop
sub
mov
lods
insb
pop
icebp
dec
sbb
or
pop
mov
ja
mov
and
cwtl
or
and
rorb
test
cmp
or
or
and
outsb
add
sbb
rcrb
mov
pop
rcl
cmp
and
push
dec
pop
fs
aad
imul
outsl
add
adc
add
jp
dec
call
xchg
lret
data16
sbb
sbb
and
mov
pop
cld
movsb
es
insl
cmpl
sbb
dec
ljmp
jae
mov
mov
call
stc
xor
mov
aaa
movsl
and
iret
and
inc
pop
cli
fcompl
orb
jns
jl
inc
push
add
cmp
mov
sbb
sub
push
shlb
rorb
sub
int
fcomps
cmp
ja
nop
dec
lea
xchg
inc
mov
mov
sbb
stc
jnp
rcll
add
lods
mov
push
in
add
pop
lock
hlt
stos
in
mov
insb
jl
sbbb
inc
shrb
xor
jge
xchg
adc
lock
dec
ret
sub
int
aaa
push
or
insl
cmpsl
fwait
sbb
cmp
mov
adc
jo
push
push
movsl
mov
push
cmpsl
pop
movsb
xchg
jnp
movsl
aas
loopne
and
mov
out
jmp
jne
nop
ss
xor
das
decb
out
mov
mov
mov
adc
fmuls
daa
loope
decl
jle
clc
js
mov
in
or
lods
mov
fadd
mov
sub
xor
pop
imul
mov
aas
lock
push
fs
mov
or
mov
adc
ror
mov
or
orb
outsl
call
cltd
lock
sbb
pop
insb
dec
pop
cmpl
sub
scas
inc
or
cmpsb
jmp
fstpl
xlat
je
iret
xchg
leave
jo
scas
imul
push
lcall
mov
in
push
lret
lahf
nop
xchg
nop
clc
adc
add
inc
or
incb
mov
dec
pop
xchg
inc
pop
mov
adc
nop
std
add
cmp
mov
jecxz
pop
mov
xor
leave
aaa
push
mov
outsl
pop
insl
or
cmp
mov
sub
in
mov
xor
fstl
lods
pop
aam
or
popa
or
dec
insl
cltd
push
sbb
daa
icebp
add
cld
stos
sbb
xchg
push
adc
pop
test
sbb
xor
add
aam
and
or
sbb
dec
jno
add
xlat
mov
sti
imul
jmp
push
jne
sbb
add
sti
fldt
add
add
imul
mov
ror
adcl
out
dec
xor
push
dec
jne
and
jle
push
pop
fwait
jmp
and
sub
add
aaa
xor
xor
add
pop
add
out
mov
push
xor
or
inc
aas
adcb
inc
movsb
add
mov
rcrb
mulb
lcall
cmp
and
push
add
adc
es
lret
add
shl
jmp
mov
test
adc
push
adc
aas
push
adc
hlt
flds
lods
out
or
dec
pop
fbld
xchg
add
addl
push
and
mov
out
jg
sub
outsb
jno
fcomps
inc
pop
dec
mov
jo
insb
push
loopne
add
mov
popf
pop
fisttps
push
repz
insl
inc
dec
aas
sub
loopne
out
and
xchg
sub
dec
xlat
out
js
xchg
push
nop
lahf
mov
adc
lock
pop
pop
xor
pop
xchg
push
inc
call
icebp
cmp
dec
invd
dec
sub
outsl
and
jno
cmp
adc
mov
jmp
call
sti
push
push
jb
push
add
add
rclb
stos
or
or
dec
inc
sbb
xor
das
insb
in
jo
adc
add
xor
sbb
mov
mov
add
mov
cmp
jmp
dec
data16
data16
or
nop
leave
pop
popf
adc
inc
inc
mov
nop
push
jle
enter
jo
ja
add
lds
ja
adc
pop
xor
dec
xchg
enter
dec
sub
lret
incb
mov
adc
pop
enter
push
push
bound
fs
dec
push
add
leave
mov
push
add
adc
pop
aam
inc
inc
repnz
push
iret
add
add
cmp
fsub
xchg
inc
and
dec
xor
adc
dec
and
push
adc
gs
add
leave
aas
add
xchg
fmuls
ret
test
sarl
and
adc
sub
scas
inc
or
push
inc
scas
in
push
inc
push
and
lods
and
popf
push
inc
sbb
cmp
add
sub
or
fidivs
adc
nop
mov
inc
or
cmp
mov
pop
test
fldcw
and
les
cmp
and
test
inc
cmc
dec
push
test
mov
mov
push
js
inc
outsl
inc
inc
popa
xchg
je
and
jns,pn
jns
dec
inc
dec
push
jnp
add
mov
insb
scas
es
outsl
mov
ja
ss
jle
fnstenv
jl
or
sysenter
or
inc
pop
imul
fstps
test
lods
repz
inc
jne
or
xor
and
jae
inc
enter
es
test
and
pop
aam
shrb
sbb
or
cmp
push
test
dec
out
pop
sub
roll
mov
ja
mov
in
jo
orb
scas
pop
jns
loopne
jl
aaa
ja
shl
or
pop
pop
sub
xor
mov
rclb
dec
or
test
pop
aad
fidivs
xchg
mov
fidivl
and
jl
or
and
mov
push
and
notb
xchg
outsb
test
pop
or
xchg
test
scas
mov
mov
pushf
pop
sbb
or
lock
push
pop
mov
adc
lock
loopne
fildl
sbb
mov
inc
push
mov
arpl
cmp
mov
mov
adc
or
dec
push
dec
loopne
or
outsb
dec
scas
add
mov
push
dec
sbb
push
add
ds
mov
sbb
in
les
nop
cs
push
pop
add
ret
xor
cmp
mov
push
add
mov
mov
jle
aaa
adc
repz
loopne
or
lea
push
jae
add
in
in
and
imul
add
rcl
xor
daa
add
aam
fdivl
and
int3
jge
addb
int3
or
mov
sbb
pop
shlb
dec
outsb
xchg
hlt
imul
push
mov
push
mov
jp
cs
push
mov
xor
insl
inc
enter
dec
lods
int3
mov
sub
daa
pop
jb
fcomp
and
dec
dec
movb
inc
pop
test
or
jbe
test
push
xor
add
push
repnz
inc
cmp
repz
pop
lret
push
pop
cmc
adc
inc
add
push
es
rclb
outsl
sub
dec
jmp
inc
sbb
jp
data16
movsb
add
addr16
pmulhuw
out
or
inc
pop
jb
loop
sahf
cld
js
push
inc
bound
clc
inc
and
iret
in
in
xchg
pop
repnz
dec
in
pop
pop
mov
xor
test
push
or
mov
and
push
xchg
out
add
pop
movsb
adc
sbbb
enter
pop
mov
or
pop
and
mov
aaa
adc
and
es
mov
movsl
dec
fldl
test
adc
js
pop
mov
dec
or
dec
fs
out
inc
rorb
dec
cld
adc
add
pop
xchg
aas
shr
orb
add
jae
scas
dec
push
add
movsb
nop
push
xor
push
push
and
xor
sbb
inc
adc
add
jo
sub
fcmovbe
lock
sub
add
int
mov
daa
test
jbe
and
or
inc
push
lods
aad
add
cmp
push
addr16
push
dec
fiaddl
sub
lahf
pop
mov
and
test
lock
push
mov
js
add
cmp
adc
or
adc
jl
js
mov
movsl
insb
lods
sub
int
pushl
inc
inc
push
loopne
aas
lea
inc
push
enter
mov
add
add
inc
scas
scas
push
mov
xchg
imul
decl
mov
flds
jmp
jns
repz
and
mov
insb
sbbb
inc
mull
shlb
add
mov
or
in
dec
fwait
pop
leave
addr16
push
and
mov
nop
mov
loopne
leave
out
paddusb
pop
ss
sbbl
fadd
pop
insb
push
stc
inc
aam
cld
aam
or
test
mov
or
leave
test
int3
push
pop
adc
dec
mov
ss
lea
mov
or
xor
jo
bound
lods
movsb
and
arpl
jne
sti
mov
enter
and
stc
sbb
pop
xchg
fmull
sbb
or
iret
scas
das
xor
scas
nop
add
sub
fsubs
push
fdivrs
or
or
sbb
mov
and
cmpsl
and
nop
xor
push
or
xchg
pop
sbb
add
aad
jne
leave
add
hlt
hlt
lock
add
in
in
and
roll
call
sbb
in
push
push
adc
fildll
das
sub
loopne
or
test
fcompl
add
cmpsb
nop
xchg
add
add
inc
aam
pop
jmp
push
shlb
pop
mul
mov
jae
cmp
movsl
add
lea
ja
rcr
leave
sbbb
push
pop
inc
movsb
jp
adc
add
sub
mov
add
jae
sarb
inc
mov
mov
mov
lret
rorb
jmp
aad
sti
roll
mov
adc
rcrb
inc
push
imul
jecxz
or
movb
in
insl
movsl
loopne
lods
jl
xchg
clc
add
bound
add
cmc
sub
add
and
add
mov
dec
adc
lods
mov
sbb
mov
or
lahf
addr16
push
pop
pushl
add
fiaddl
arpl
ja
fidivrs
push
adc
add
or
cmp
dec
enter
sub
popa
jnp
lret
inc
jmp
xorl
mov
sbb
add
outsl
je
cmpl
fdiv
sarl
xor
fdivs
sahf
loope
lret
or
clc
jne
imul
jae
es
inc
mov
add
scas
stc
fcmovb
push
imul
in
xchg
fs
lds
add
hlt
pop
in
mov
rorl
adc
sbb
jl
sub
add
cmpsl
jle
add
adc
scas
pop
mov
sbb
cmpsl
mov
rcl
push
repnz
push
enter
arpl
sbb
adc
popa
lock
test
lock
inc
cmpsb
or
pop
test
mov
mov
and
lea
jns
stos
call
stos
pop
and
add
insl
das
push
imul
mov
cmp
imul
add
cmp
out
dec
insl
pop
imul
je
mov
faddl
enter
fmull
fcomp
dec
scas
sbb
dec
aam
repnz
sbb
dec
aam
xchg
stos
shrb
dec
push
nop
stos
inc
int3
imul
dec
push
nop
dec
enter
push
nop
rol
jecxz
sub
jns
jae
jb
hlt
hlt
xchg
and
bound
jae
aad
int3
test
and
in
ret
mov
inc
pop
pop
push
xchg
pop
pusha
cmc
and
inc
pop
push
movsb
pop
xor
pop
mov
add
xchg
orl
mov
push
ret
daa
add
dec
jne
jl
enter
insb
ror
push
loop
movsb
hlt
sub
adc
and
xor
in
nop
add
test
arpl
ja
nop
std
cmp
adc
mov
shlb
mov
orl
lret
mov
lock
cmpsb
xor
cmp
jp
sbb
call
ror
push
xor
inc
sbb
loop
ficoms
adc
sub
pop
dec
lods
aas
icebp
mov
jmp
aam
mov
mov
jmp
adc
dec
and
lock
sarl
popf
push
mov
shll
notb
test
xchg
or
dec
aas
add
out
mov
add
ljmp
push
mov
loopne
push
sub
dec
jb
add
sub
lock
subl
jne
add
lock
leave
call
sbb
in
aam
or
dec
fmull
jb
add
fcomp
add
add
aam
adc
rcl
neg
orl
mov
in
jo
pop
cmp
mov
in
dec
cmpsb
nop
das
aad
stc
enter
repnz
les
push
or
add
rorb
jo
mov
mov
popa
inc
or
dec
pop
jo
lcall
mov
mov
mov
push
xor
enter
in
xchg
pusha
movsb
push
push
mov
mov
scas
pop
and
and
and
addb
add
push
adc
daa
add
shll
inc
int
addr16
add
xchg
pmulhuw
imul
shrl
push
xor
add
mov
bound
repnz
sub
mov
imul
mov
adc
pop
cli
push
mov
inc
dec
out
pop
ret
mov
cmp
push
and
out
add
andb
nop
addr16
cmp
mov
je
push
mov
xchg
mov
or
in
outsl
add
insl
dec
movsb
enter
mov
dec
dec
mov
cmp
dec
and
insb
jp
pop
and
fsubr
and
movsl
jno
or
lock
mov
push
or
xchg
aaa
mov
in
in
and
jns
adc
outsb
nop
push
jo
xchg
mov
loop
or
push
dec
and
pop
mov
outsb
dec
testb
leave
adc
mov
ficoms
mov
dec
aam
test
inc
fdivs
push
dec
aam
aam
jb
add
ror
add
int3
int3
enter
jb
aad
inc
lds
jmp
adc
jmp
les
loopne
xor
inc
push
lret
cmp
mov
jno
add
icebp
mov
cmpsb
fucomp
push
sub
adc
inc
add
orb
sub
mov
fstpl
xchg
les
sub
and
mov
mov
lock
adc
cmp
mov
sbb
pop
sub
in
push
dec
sub
jmp
je
mov
cld
lock
std
cmp
pop
fldcw
jo
fmuls
nop
sub
xor
mov
jmp
insb
jg
jno
or
enter
fs
js
dec
fs
jl
dec
testb
movl
arpl
xor
enter
xchg
fsubr
and
cwtl
fcoml
mov
jb
fdivrs
xchg
jl
mov
mov
jmp
movsl
jae
sbb
add
xor
rolb
ret
add
inc
test
pop
pop
jo
xchg
bound
aam
lods
mov
enter
xchg
mov
je
mov
sti
ja
adc
adc
mov
xor
clc
loop
lret
in
xchg
das
add
jl
mov
mov
xlat
jo
or
sub
subl
inc
sub
adc
add
daa
xlat
lea
push
or
xchg
lcall
add
push
or
jecxz
nop
lahf
ret
and
sbbb
add
inc
das
cli
sbb
jnp
les
inc
pop
sbb
in
mov
or
sbb
lock
dec
add
bound
jl
hlt
mov
xchg
hlt
xchg
les
ret
das
in
call
das
jmp
andb
jne
adc
leave
addr16
movsl
mov
in
jo
add
mov
mov
call
test
dec
aas
and
pop
jne
or
cs
jmp
mov
in
pop
inc
add
fisubl
mov
fdivl
jo
clc
mov
sbb
and
fwait
xor
subl
add
or
pop
divl
mov
aaa
add
xchg
sbb
loopne
or
and
adc
inc
push
nop
sub
jns
lock
and
in
lock
sub
dec
xor
inc
outsl
add
les
popf
mov
lar
add
and
adc
jmp
adc
add
outsl
and
shrl
mov
dec
addl
or
mov
ret
loopne
clc
pop
test
pop
dec
in
roll
adc
dec
aam
inc
outsb
or
mov
bound
jns
or
fcomip
inc
popa
mov
pop
pop
fs
pop
call
enter
sub
add
push
or
ficompl
pusha
in
add
sbb
movsb
icebp
sbb
aam
insb
jnp
faddp
scas
push
cwtl
push
add
or
gs
js
pop
leave
and
jge
sub
cmpl
and
jns
jge
jl
jle
adc
add
add
test
clc
push
sbb
cmp
xchg
test
stc
mov
pop
xchg
sahf
jg
xor
iret
jl
push
adc
aaa
push
cmpsl
leave
xor
cmpsl
or
inc
dec
dec
adc
inc
push
into
in
sub
jmp
mov
aam
incb
adc
cmpsb
push
out
call
adcl
dec
popa
insb
and
mov
cld
int3
xchg
xchg
xor
je
add
pop
divb
ds
sbb
orb
inc
cmp
test
cmpb
lcall
adc
or
aad
xor
int
mov
inc
divb
mov
inc
out
or
adcb
pop
push
orb
daa
mov
ja
sbbl
adc
pop
rcrl
mov
lea
bswap
cmpb
cs
lock
cld
push
mov
popa
or
cltd
xchg
xchg
add
cmp
xchg
sub
sub
pushl
add
lods
les
adc
mov
and
negl
and
pop
std
dec
push
loop
push
cmp
or
ret
subb
dec
aam
imul
or
adc
adc
mov
cwtl
loop
orl
test
or
cmc
jg
cld
or
xchg
inc
mov
mov
jo
or
jno
das
adc
add
xchg
xor
inc
hlt
hlt
mov
or
rclb
push
cld
jg
push
push
adc
xchg
jae
mov
lret
into
push
sbb
xchg
pusha
insb
iret
decb
fsubl
jmp
popa
or
adc
insb
mov
cmp
adc
mov
sbb
and
add
push
out
jns
test
fs
fisttpll
je
rcrl
jo
lea
ret
stos
inc
in
dec
lds
xor
xchg
sub
push
jge
jae
imul
adc
prefetch
ss
push
sbb
pop
out
sub
adc
xor
and
ja
push
push
adc
in
movsl
loopne
xchg
pop
or
jne
add
mov
fwait
shll
and
aas
push
test
push
xor
les
jo
push
popa
nop
add
lea
push
pop
nop
cmpsl
mov
cmpsl
adc
lods
mov
das
adc
add
ss
rorb
inc
test
xor
imul
push
leave
lret
stos
xchg
mov
add
add
dec
xor
mov
push
movsl
xchg
jnp
lahf
add
ficoml
xor
adc
outsl
adc
ja
pmuludq
add
jb
sub
pop
test
dec
test
add
mov
mov
pushf
pusha
pop
rorb
inc
pop
shrb
jno
push
pop
jae
or
cmp
outsl
adc
test
clc
test
jne
mov
and
imul
cld
insl
out
rclb
loope
mov
lret
mov
pop
or
loopne
bound
adc
sub
movsb
inc
sub
jge
or
cmpsb
and
and
inc
rol
dec
ret
cmp
jge
fstpt
xor
push
nop
sub
cmp
ret
scas
inc
negl
popa
add
pusha
mov
stos
add
jl
dec
dec
add
inc
aas
jge
imul
sbb
push
lock
xor
mov
jmp
fidivl
xor
add
mov
lahf
and
or
sbb
insl
or
xchg
mov
cmp
xchg
in
adc
add
pushf
cmpsl
push
mov
cmp
rorb
cmpl
stos
add
fistpll
and
xor
xchg
mov
in
repz
xchg
fwait
jmp
dec
xchg
xchg
cmp
xchg
mov
push
inc
dec
sbb
or
mov
sub
pop
mov
das
fidivl
test
aam
add
sbb
xchg
jne
mov
je
test
addb
mov
mov
rclb
jmp
test
shrl
imul
cmp
lret
stos
or
or
sbb
mov
push
jo
fldcw
cmp
jne
call
cmp
sub
push
push
mov
je
add
pusha
in
pop
jmp
mov
jb
outsl
sub
popa
xor
sub
sub
xor
aaa
xor
xchg
pop
testl
pop
sub
insl
popa
xchg
pop
mov
int3
into
aad
xchg
mov
push
dec
and
dec
sbb
inc
inc
adc
aad
gs
mov
adc
decl
pop
inc
mov
pop
cmc
cmp
adc
aam
notl
je
jl
inc
stos
xorb
int3
push
fs
or
xchg
sti
cmp
jmp
decl
mov
cli
add
lock
xchg
dec
pop
loope
push
add
pop
cmpsb
xchg
lods
xchg
xchg
insl
in
outsb
mov
repnz
cmp
gs
jne
roll
enter
push
inc
mov
fsubl
std
sar
out
add
mov
xor
pop
lret
int
movlps
push
and
add
inc
and
ret
adc
mov
add
adc
add
jb
sbb
orl
aaa
ret
mov
mov
add
rorl
xchg
in
cs
or
push
or
ss
mov
cmpsl
add
ret
jbe
daa
sbbl
dec
stos
enter
hlt
shlb
nop
lcall
out
xor
ret
insl
pop
cmpb
cmp
adc
aas
and
xor
inc
loop
jl
xor
cmp
or
imul
outsl
ror
insb
je
cmp
add
cltd
mov
ficoml
inc
nop
mov
outsb
jb
out
sbb
or
and
rol
cs
mov
sub
cmp
movsl
sbb
add
or
push
incb
mov
jbe
add
dec
loope
loop
push
adc
push
inc
adc
js
or
adc
mov
cmp
xchg
or
cs
fadd
mov
sbb
inc
mov
push
inc
loopne
pushf
test
pop
inc
or
mov
xchg
sbb
or
sub
or
imul
pop
xor
data16
cmp
xor
xchg
cmpsl
cs
popf
adc
sub
ret
arpl
push
add
lret
add
rcr
les
inc
cmp
add
sbb
cmp
sub
loop
fwait
jl
cmp
js
push
dec
cmp
test
push
xchg
mov
mov
mov
push
pusha
dec
js
push
xchg
es
and
flds
pop
sub
rorb
mov
mov
add
mov
pop
fs
inc
sti
mov
mov
add
pop
aas
dec
scas
xchg
sbb
inc
inc
push
cltd
fidivrl
mov
pop
bound
in
lcall
out
pusha
stc
mov
adc
and
pop
imul
inc
cmpsl
pop
pop
nop
int
add
pop
popf
pop
fsts
and
sbb
popa
scas
aam
dec
or
aaa
push
xor
or
and
outsl
xchg
inc
mov
add
aaa
add
sbb
mov
rolb
cmp
arpl
nop
or
lahf
out
xchg
out
repz
mov
adc
unpckhps
fsubp
aam
mov
je
orb
mov
inc
xchg
nop
mov
jecxz
mov
xorb
adc
leave
push
xchg
jmp
or
push
mov
popf
ss
mov
aaa
xor
xchg
push
pop
push
cmpsb
adcb
jge
or
and
inc
enter
xchg
test
push
add
testl
inc
jo
movsl
cmp
pop
adc
rsm
and
outsl
xchg
push
jb
push
cmp
sahf
das
xor
loopne
jmp
je
mov
mov
fs
xor
gs
dec
xchg
test
out
dec
sarb
imul
sbbl
pop
sbb
orl
aad
dec
or
adcb
xchg
dec
and
push
sub
insb
xchg
adc
test
roll
or
pusha
mov
sub
sbbl
ja
inc
mov
push
xchg
cmpsb
fildl
insl
push
data16
fs
inc
dec
pop
std
je
sub
xor
jmp
jb
les
lahf
int
or
inc
xchg
xchg
mov
xor
imul
popf
and
sub
fsubrl
sbb
mov
nop
push
rorl
test
lods
hlt
jg
adc
cs
loope
add
addr16
paddd
dec
mov
mov
push
dec
dec
dec
mov
mov
dec
scas
push
push
sub
sub
notl
xor
push
push
cs
adc
lahf
divb
cmp
cmp
jae
sub
mov
push
dec
push
dec
pop
ss
cs
and
xor
xor
add
repnz
loope
or
mov
pop
fsubs
or
push
aam
in
sub
xor
aaa
jg
jo
enter
xchg
lahf
bswap
addr16
push
inc
adc
and
xor
xor
pop
sub
bound
mov
xor
jb
data16
sub
adcb
xchg
inc
push
dec
sbb
pop
sub
mov
xchg
sarl
xor
dec
call
test
popa
bound
cmovb
xchg
pop
xor
xor
lahf
xor
xlat
inc
inc
inc
scas
loope
addr16
out
imul
dec
push
ret
fbstp
arpl
and
outsl
insl
mov
mov
jb
inc
inc
out
ret
cmp
daa
xchg
pusha
cmp
bnd
hlt
inc
inc
jg
dec
dec
sbb
push
jg
jmp
mov
cmp
pushl
and
movsl
cmp
ss
add
pop
cmp
popf
js
inc
mov
mov
mov
lea
daa
movsb
addr16
mov
push
ja
pop
add
or
push
mov
xor
xor
xor
dec
push
dec
and
mov
dec
push
pop
xor
aaa
mov
pop
or
push
das
adc
mov
or
xlat
imul
xor
fisttps
int
or
xor
daa
iret
pop
and
push
inc
pop
xchg
push
mov
dec
in
xchg
daa
or
pop
push
in
sub
inc
dec
mov
or
daa
cvtps2pi
add
movsl
xor
jbe
rcrb
ss
sbb
lahf
aaa
cmpsl
int3
and
add
insb
loopne
push
outsb
popa
pop
js
out
aaa
test
lods
stos
xlat
push
or
xor
mov
daa
js
insl
inc
mulb
xlat
xor
movsl
cmpsb
test
mov
pop
sub
inc
rorl
xchg
jl
lods
lahf
inc
xchg
push
xchg
aaa
ss
lret
xchg
rorl
lahf
inc
push
aaa
aam
jo
dec
aaa
aaa
lret
or
ljmp
and
cmp
add
mov
dec
pop
xchg
inc
jnp
inc
inc
outsb
sub
out
add
xchg
sub
inc
dec
ss
xor
xor
fs
inc
add
mov
inc
test
das
xor
push
add
outsl
dec
inc
pop
pop
lock
mov
sub
bound
inc
push
xor
dec
neg
jg
inc
cs
mov
or
xor
cmp
xor
push
inc
jns
xchg
pop
dec
ds
xchg
cmp
ss
cmp
adc
push
arpl
xchg
sub
ljmp
pop
mov
pop
and
mov
dec
cltd
mov
and
and
and
outsl
push
sub
insb
add
push
mov
das
adc
xchg
or
xor
and
stos
js
xchg
pop
sub
xor
movsb
jb
mov
cmp
movhps
xor
inc
pop
jp
sub
xlat
je
das
arpl
insb
adc
mov
bound
add
mov
cmp
sbb
or
or
jnp
iret
sub
push
mov
insb
inc
sub
add
add
bound
int3
les
aas
adc
or
xor
pop
xor
fidivs
das
ja
mov
xor
imul
outsl
rclb
add
scas
iret
data16
bound
cmp
pop
ficompl
test
xor
pop
insb
xchg
aaa
push
ja
imul
push
gs
bound
add
cmp
add
cmp
cmp
pushl
lahf
inc
push
jo
add
dec
dec
fs
pop
loop
dec
pushl
add
aaa
sbb
push
mov
aaa
cmp
andb
inc
test
dec
jne
sbb
popa
jb
das
cmp
aaa
pop
add
mov
daa
ja
xorb
cmp
lahf
push
or
aam
cmp
cmp
cmp
xor
loopne
add
xor
ss
mov
shlb
aaa
cmp
pop
inc
cmp
pop
in
mov
pop
mov
adc
xor
data16
rcll
lods
jg
iret
or
mov
jb
daa
dec
pop
mov
ficoms
and
movq
inc
push
sub
imul
xor
aas
mull
add
fs
movb
jbe
iret
push
push
xlat
je
mov
inc
xlat
adc
push
rclb
leave
xor
dec
movl
pop
pushf
dec
insl
nop
dec
iret
xor
test
xlat
xor
inc
cmpsl
nop
cmp
pop
pop
xor
addr16
sbb
shll
xchg
cmp
cmp
xor
cmp
adc
xor
ljmp
cmp
inc
push
inc
pop
push
xor
xor
push
push
dec
push
push
or
sub
xor
call
daa
cli
aaa
pushl
jg
notl
xor
add
cmp
test
dec
addl
xor
mov
xor
cli
cmp
and
push
push
cs
add
aam
xchg
xlat
fstps
dec
push
and
xchg
sbb
pop
jg
add
add
inc
xor
lahf
xor
jnp
and
xor
dec
cmpsb
movsb
cmp
xor
nop
dec
xor
xor
xor
in
adc
pop
xor
xchg
dec
cs
inc
mov
mov
dec
inc
fbstp
sbb
mov
addr16
sub
xor
lcall
inc
bound
push
inc
push
rclb
jecxz
popa
aaa
jo
popa
and
addb
out
sbbb
xor
mov
sbb
divl
xor
stos
or
adc
and
jb
push
stos
cmp
frstor
outsb
insl
xor
inc
xchg
inc
scas
fs
cmp
pop
jg
mov
or
xor
and
adc
push
mov
inc
xor
testb
or
inc
das
pop
mov
inc
dec
out
ss
xchg
nop
add
scas
fs
dec
pop
aaa
aaa
xchg
mov
sbb
dec
push
pop
cmp
xchg
pop
ret
dec
sbb
iret
jg
movsl
push
mov
cmp
rol
push
or
xchg
pop
lods
sub
scas
mov
pop
leave
aam
xlat
and
pop
cmp
sbbl
adc
ja
bound
push
lds
inc
testl
pop
and
cmp
cmp
ljmp
cmp
dec
pop
xor
cmp
push
push
ror
cmp
cld
aas
insl
cmp
fisttps
push
pop
dec
cs
xor
xor
mov
inc
fisubrl
sbb
jae
jns
out
xor
jp
dec
mov
jns
push
cmp
in
inc
loop
aad
xor
rorb
jbe
inc
imul
pop
push
xor
test
lods
out
and
xchg
test
xor
add
xor
and
adc
sbb
adc
sub
inc
mov
pop
jnp
sub
mov
push
das
adc
movsl
frstor
scas
sbb
rcl
add
outsl
xor
ja
test
cmp
test
pop
cmp
xor
adc
xlat
mov
lea
ja
mov
mulb
daa
adc
inc
out
daa
lock
dec
push
push
iret
lods
add
mov
sbb
cmp
add
sub
xlat
notb
mov
push
dec
dec
inc
jg
jbe
mov
scas
imul
inc
pop
xchg
sub
mov
ss
cli
lods
in
push
aaa
xor
sub
push
xor
cmp
add
mov
pop
lds
pop
and
sub
mov
lods
pop
push
lcall
sbbl
rorb
clc
bound
scas
mov
or
pop
sbb
or
lahf
and
push
aaa
scas
fistpll
imul
ss
or
sbb
test
mov
and
lahf
loop
xor
add
lods
out
es
cmp
fcompp
loop
and
shr
inc
inc
push
mov
push
xor
pop
sbb
pop
pop
lahf
imul
sub
inc
jmp
dec
ss
daa
inc
enter
fldenv
xchg
out
divb
in
push
xchg
pop
mov
dec
popa
insb
and
or
pop
dec
dec
scas
sub
add
or
dec
push
cmovnp
xor
inc
push
cmp
push
sbbb
push
xor
push
xor
push
xor
cmp
xlat
movl
mov
rcr
fistpll
cmp
push
add
cmp
inc
mov
aas
and
jb
xlat
movsb
aas
push
push
push
aas
or
data16
outsl
divb
out
daa
xor
in
cmp
dec
inc
inc
das
push
or
sbb
scas
bound
push
sub
xchg
jne
ljmp
je
or
lock
pop
add
and
mov
xlat
inc
adc
or
dec
dec
push
dec
cmp
fisubrs
and
in
inc
mov
addr16
and
sbb
xor
adc
xor
mov
and
pop
and
mov
xor
aaa
or
in
add
push
cmpsl
adc
xchg
dec
aaa
cmp
adc
imul
ret
push
idivl
xor
jns
aaa
sbb
or
xlat
or
add
inc
and
aam
xor
xor
test
xor
or
xchg
mov
and
bound
push
pandn
fstl
jbe
xchg
push
xchg
lahf
or
sub
mov
das
inc
dec
add
push
das
xor
ret
add
ficomps
testl
ret
xor
nop
or
ficoml
xor
jb
punpckhbw
xor
adc
lcall
insl
cmp
mov
cmp
push
bound
jp
jns
fbstp
repnz
bound
push
test
or
aas
or
sti
inc
popa
insb
je
outsl
loopne
fildll
sbb
es
cltd
es
xor
or
fs
xor
jg
cltd
pop
xchg
cmp
cmp
enter
pushl
sbb
xor
nop
or
aaa
dec
enter
ss
pop
mov
pop
jg
mov
jg
pop
fisttpl
push
lahf
xor
enter
inc
frstor
adc
pop
fs
es
xor
and
or
xor
xor
ficompl
push
pop
sbb
adc
xchg
sbb
in
xor
leave
orl
xchg
pop
sbb
lahf
test
cmp
adc
pop
cmp
in
push
jbe
lahf
cmp
xchg
xchg
leave
andps
ljmp
sbb
test
test
das
pop
or
lcall
sbb
jle
aaa
cmp
xchg
mov
cmp
xor
mov
shlb
addr16
stc
outsb
adc
jg
push
and
test
je
xor
aaa
push
xchg
xor
push
mov
stc
ficoms
pop
adc
jae
ss
sbb
je
addr16
push
fnstenv
outsl
push
cmp
xor
mov
je
push
or
andb
cs
movsl
insl
xchg
lods
das
pop
xor
push
cmp
pop
adc
das
push
pop
pop
es
add
dec
insb
lcall
push
pop
notb
mov
pop
stos
test
cmp
push
dec
dec
push
dec
push
sub
inc
mov
inc
mov
sub
and
daa
dec
inc
jb
push
jb
push
out
push
dec
and
in
push
sub
mov
andnps
push
dec
sub
xchg
xlat
mov
popa
xor
cmovge
dec
dec
dec
xchg
scas
dec
outsb
jb
lcall
sbb
pop
push
dec
jno
mov
xor
and
sarb
and
dec
dec
scas
mov
sbb
ljmp
or
dec
sub
push
dec
inc
sub
mov
fists
jno
xor
mov
mov
sbb
mov
mov
out
test
sub
imulb
jl
in
movsl
sub
pusha
cmpsl
xchg
xor
aaa
push
cmpsl
and
inc
xchg
xor
adc
js
sbbb
jae
inc
xor
mov
adc
aaa
add
fisttps
add
xor
es
out
imul
dec
and
fcmovb
fisubrs
fbstp
imul
xor
xor
jb
dec
and
ss
and
bound
dec
push
nop
or
aaa
nop
int
popa
aaa
lahf
data16
aaa
and
inc
cmp
xchg
mov
mov
sbb
cmp
cmp
imul
test
dec
dec
xor
mov
test
out
dec
test
mov
adc
push
sbb
push
or
xchg
jne
inc
mov
cmp
fsubl
dec
push
orb
or
das
mov
add
int
jnp
scas
pop
xlat
xlat
add
inc
xor
mov
pop
clts
rorl
xor
scas
aad
sub
clc
divl
daa
add
dec
shlb
cmp
sahf
ret
rclb
nop
mov
int3
scas
aaa
out
movsl
rcrl
push
pop
cmpsl
arpl
cwtl
cs
sub
cmp
jecxz
push
sbb
mov
das
add
ss
sub
push
jg
jnp
ljmp
cwtl
add
xor
mov
push
cwtl
or
inc
shrl
xor
mov
fbld
jo
test
cmp
and
in
fldt
outsb
push
xchg
les
xchg
fbld
pop
loopne
pop
rcrb
add
cmp
cwtl
mov
lea
or
popa
xor
test
iret
addr16
push
imul
in
inc
insl
je
cmpsl
sub
dec
int3
or
lahf
adc
push
dec
inc
aaa
rorl
cmp
ja
add
pop
xor
sbb
sub
sub
mov
mov
adc
out
add
sub
push
cmp
mov
cmp
ss
and
in
ss
xor
arpl
in
ja
aaa
icebp
dec
push
xchg
sub
xor
or
cmp
inc
xor
and
sbb
or
xor
cmp
xor
arpl
bound
je
jb
sub
ret
daa
inc
inc
xor
push
aas
call
add
rcll
mov
out
sub
dec
adc
or
test
repz
xlat
sbb
fildll
lret
aas
mov
or
push
mov
imul
or
push
push
movsl
negl
push
jns
bound
xchg
mov
push
sub
xlat
sahf
nop
andb
pop
xchg
xlat
sub
push
addl
or
enter
or
sub
xor
xlat
sub
inc
fcmovnb
ficompl
mov
lahf
sub
and
mov
arpl
mov
mov
dec
or
je
or
pop
pop
mov
push
xor
mov
lods
je
jo
les
insb
call
lret
inc
pop
insl
adc
dec
das
sub
sbb
jne
in
and
xchg
sbb
and
xor
or
subb
xor
mov
cs
or
xor
mov
push
push
movsb
test
xor
fistps
add
cmp
aaa
int
inc
mov
and
insb
movsb
pop
sub
sub
xchg
sbb
mov
ljmp
inc
shll
dec
ss
in
xchg
orb
sub
jnp
add
in
mov
xor
movsb
add
rol
enter
add
fmull
rcr
sbbl
lcall
xlat
movb
push
loop
mov
push
adc
in
pop
cli
out
jno
jne
jg
sbb
pop
xor
mov
inc
sub
shlb
or
jo
arpl
push
or
pop
add
jne
cmpb
and
test
xchg
cwtl
or
jno
imul
aad
aaa
add
push
and
add
sbb
fists
mov
jmp
jl
xchg
push
cmp
jo
push
mov
or
nop
out
int
cmp
aam
mov
jbe
push
adc
pop
jecxz
push
add
fistpl
imul
pop
test
nop
rorb
adcl
loop
jne
inc
or
mov
push
lock
adc
and
dec
in
jo
movsb
xchg
shll
or
adc
and
push
xchg
enter
inc
enter
or
and
and
dec
add
lock
insl
cwtl
sub
icebp
ja
cmp
cmp
mov
or
jmp
js
nop
xchg
loopne
shlb
rolb
xchg
andl
add
stc
cmp
fld
mov
pop
cmpsb
and
or
push
test
sub
shlb
repz
and
or
ret
jb
inc
xchg
xchg
dec
xor
repz
fmul
clc
xor
cmp
push
jecxz
js
fldenv
adc
add
sub
fs
adc
mov
or
rorb
test
mov
add
dec
mov
aam
push
adc
lret
mov
xchg
fwait
sbb
sub
xor
aaa
popf
sub
pusha
insl
dec
adc
hlt
ret
or
das
cmc
and
je
lods
push
add
fbstp
pop
nop
decl
and
jmp
out
lea
gs
jb
xor
imul
xor
sub
pop
sar
fsubl
mov
dec
aam
xchg
dec
and
aam
adc
repnz
mov
inc
rolb
pop
ret
mov
sub
and
loopne
movsb
pusha
mov
ljmp
jo
cmp
jg
aas
cmp
dec
jle
daa
arpl
push
or
shl
sub
insb
cmpsb
por
pop
mov
imul
les
mov
push
adc
push
fcomi
fstpl
pop
or
push
adc
nop
lock
or
scas
sbb
adc
inc
jne
inc
push
dec
cmpsl
and
lea
fnstsw
call
push
insb
rolb
mov
jmp
es
insb
adc
push
or
xor
call
push
pop
adc
and
sbb
sub
imul
mov
cltd
mov
mov
daa
mov
ja
xchg
dec
mov
dec
dec
aaa
gs
pushf
je
cwtl
add
addr16
adc
and
mov
leave
test
decl
rorb
ficompl
jae
pop
rorb
test
fs
insl
cmp
xor
aad
sbb
jl
test
add
push
test
mov
test
push
jnp
or
fcmovnu
js
loop
add
shr
test
mov
in
jl
cmp
loopne
pop
mov
je
add
outsb
push
mov
cltd
cltd
push
popa
mov
lock
xchg
pop
jns
cmc
jo
adc
les
xlat
loopne
pop
mov
leave
pop
sbb
popf
loope
xor
fs
add
adc
add
xchg
or
mov
push
fdivrs
sbb
fadds
imul
dec
cmp
mov
add
sbb
shll
jb
loope
dec
inc
loopne
inc
clc
or
addb
add
js
sbb
movsb
push
pop
inc
sub
adc
cmpsb
add
jae
or
pop
pop
movsl
or
add
rcrb
cld
push
mov
les
in
shr
mov
lock
hlt
mov
or
enter
inc
jl
sub
imul
jg
loop
enter
pop
push
dec
in
vmwrite
push
inc
inc
inc
cmc
nop
xchg
push
push
dec
inc
push
in
in
mov
psrlw
sub
or
int3
pmulhw
pop
rcl
in
aam
or
mov
clc
fdivrl
in
in
jb
enter
in
in
in
cmpsl
inc
ds
mov
in
dec
dec
dec
inc
inc
inc
inc
das
dec
inc
push
jo
xchg
push
pop
xlat
dec
arpl
pop
push
inc
pop
in
ds
inc
push
dec
inc
push
dec
dec
push
imul
push
ror
add
inc
sub
popa
inc
sub
into
xor
or
cmp
and
inc
fwait
mov
or
sub
and
pop
repnz
push
rclb
add
aam
insb
or
mov
pop
add
push
or
clc
xor
adc
push
jo
fwait
mov
nop
cmp
ss
dec
xor
cmp
jae
push
out
pop
and
inc
mov
jnp
test
or
sbb
push
jmp
nop
cld
movsb
adc
setl
cld
int3
mov
inc
push
inc
aam
movsb
mov
fcomps
cmc
add
fcoml
faddl
or
gs
cmp
shl
lret
out
test
sbb
or
es
jae
out
push
push
adc
in
mov
or
push
imul
add
adcl
fadds
cmp
jl
add
add
mov
andb
je
pop
xor
aaa
idivb
leave
push
jno
fs
repnz
cmp
jl
ljmp
lods
aam
imul
jnp
addb
push
sbb
adc
sarl
nop
xor
and
adc
mov
adc
ret
mov
dec
pop
pop
jmp
xlat
inc
adc
mov
and
and
push
imul
xor
fistl
das
insl
aaa
pop
ret
cmovno
adc
pop
inc
divl
cmp
add
les
dec
icebp
mov
adc
shlb
pop
lods
push
sub
loop
push
fcmovbe
les
mov
fstpt
imul
jne
sbbl
fimull
mov
stos
int3
jecxz
adc
cmp
fimull
xorl
xor
push
scas
pusha
and
adc
jmp
add
fdivr
xor
push
fsts
mov
ficoml
test
adc
sub
nop
addb
aam
movsb
loopne
push
out
push
rorb
xchg
mov
jmp
push
int3
pop
xchg
ss
inc
dec
or
dec
arpl
inc
push
enter
or
sbb
in
xchg
inc
in
repz
jmp
dec
arpl
stos
add
rcr
push
lcall
mov
enter
fstl
xchg
mov
inc
and
les
push
in
stos
push
or
sbb
add
daa
mov
cwtl
popa
leave
testl
in
inc
add
or
and
adc
adc
push
clc
push
push
dec
mov
in
out
call
in
mov
add
dec
xchg
testl
cmpsb
or
sub
mov
pop
xchg
test
push
dec
adc
push
ja
ret
in
jo
push
push
dec
add
push
push
lock
pop
jne
outsl
push
nop
das
movsl
cmp
or
rclb
push
xchg
xchg
and
add
adc
add
add
fisubl
adc
shrl
pusha
sub
pop
sbb
xchg
xchg
not
cmp
mov
or
xchg
xchg
xchg
add
sbb
push
loope
xchg
and
movb
push
arpl
pop
inc
ja
and
xchg
mov
clc
stos
movsl
ret
shll
ret
xor
nop
repnz
and
nop
add
inc
mov
jle
push
xchg
js
test
hlt
mov
icebp
psllq
aad
xor
sbb
add
imul
adc
mov
push
lock
add
ds
or
fmuls
xchg
test
xor
or
test
in
int3
xorb
in
iret
loopne
call
fadds
mov
add
push
fsubs
sub
les
mov
dec
pop
add
je
test
iret
arpl
adc
sbb
fmull
test
adc
lods
ret
push
jo
sbb
pop
inc
mov
scas
ret
inc
in
out
sbb
aaa
or
shrb
sub
ja
and
test
fmuls
das
je
push
mov
push
movl
flds
nop
das
inc
pop
cmp
and
aas
mov
and
xchg
addb
pop
or
push
adc
in
out
sbb
and
sbb
sahf
sbb
shrl
repnz
hlt
jge
xchg
mov
fildl
inc
mov
sbbb
sbbb
loopne
sbb
lcall
fs
xchg
sbb
test
fnsave
mov
imul
sub
inc
mov
dec
jmp
pop
repnz
mov
sbb
and
insb
aas
and
pop
sti
add
sbbb
shll
gs
mov
push
mov
js
or
mov
lea
shrl
cmpsb
mov
sub
cmp
sbb
lock
clc
adc
jae
lea
sbb
push
sbb
push
jb
rolb
mov
lock
mov
repnz
scas
adc
and
mov
or
adc
and
andb
add
xor
add
in
jnp
sbb
add
sbb
fwait
insl
or
in
push
mov
jmp
daa
jmp
lods
cmp
jbe
pusha
test
add
push
inc
push
add
js
cs
inc
ja
and
sub
pop
add
cmpsb
inc
lcall
lcall
and
push
xchg
or
add
orl
cmp
in
das
movb
push
cmp
add
and
fs
lds
sub
jmp
xor
inc
add
or
jns
and
test
sub
cmp
mov
mov
and
xor
xchg
cmpsb
xor
sbb
pop
mov
clc
or
out
adcb
es
cmp
jmp
mov
dec
rclb
stos
adc
in
mov
or
enter
inc
push
push
stc
and
pop
push
mov
pop
add
pop
ja
cwtl
mov
add
jo
loop
pop
jnp
popf
test
mov
pop
sbb
inc
pop
xchg
xchg
test
xchg
pmulhuw
jg
xchg
sbb
inc
dec
fdivrp
or
adc
or
push
pusha
imul
fcoml
loop
pop
sbb
leave
mov
pop
das
push
inc
repnz
cld
and
or
sbb
in
jmp
sbb
adc
mov
add
dec
dec
xchg
lock
jecxz
in
mov
jmp
cmp
jnp
andb
or
dec
inc
inc
xchg
inc
or
mov
and
decl
jle
outsb
adc
jne
movsl
dec
loop
pop
insb
push
xor
sub
push
cmp
scas
jno
fcoms
ss
adc
inc
sti
dec
jmp
cmpl
dec
sbb
mov
xor
dec
cmp
xor
inc
iret
ret
mov
cs
inc
pop
lea
nop
sar
mulb
add
leave
fwait
ret
popf
inc
ljmp
xchg
xchg
cld
popa
addl
mov
sub
outsb
fwait
inc
adc
adc
adc
sbb
inc
and
fstl
in
mov
push
scas
jg
std
sbb
xchg
xchg
inc
pusha
xor
outsl
xchg
xor
lahf
dec
mov
outsl
seta
fcmovb
test
or
cmp
stos
xchg
or
sbb
incb
sbbl
bound
mov
inc
sub
cmpb
sbb
enter
cmp
sbb
push
clc
jecxz
add
mov
jmp
inc
out
mov
and
or
sbbl
lods
or
repz
inc
scas
xor
push
dec
iret
lds
dec
xor
mov
mov
leave
xchg
nop
aaa
xor
popf
fimull
dec
mov
roll
les
adc
jae
pop
add
addr16
or
cmp
ja
gs
shll
ja
cmp
add
rorl
lcall
pop
and
inc
lods
daa
ret
aaa
bound
sub
add
add
fidivs
dec
scas
or
addr16
push
push
pop
add
push
add
test
les
dec
inc
lret
push
pusha
lock
xor
das
pop
sub
ja
mov
ret
inc
pop
sub
mov
or
and
popa
addb
or
jmp
fwait
xchg
pop
push
jp
test
mov
mov
dec
xor
adc
xor
xor
xor
push
mov
adc
cmp
insb
xor
add
test
daa
mov
jg
movb
rol
es
stc
ret
push
jle
roll
dec
test
xlat
mov
leave
dec
cmp
sub
sub
inc
xchg
cmp
add
les
ja
fldl2t
cwtl
push
jno
hlt
add
inc
call
sub
sub
mov
sbbl
push
xor
sti
ljmp
mov
in
and
push
rolb
mov
mov
push
sbb
mov
mov
adcl
and
xlat
and
mov
sbb
inc
or
inc
pop
das
ret
and
mov
imul
ret
mov
add
mov
cltd
fadds
popa
and
fistpl
sbb
xor
mov
icebp
add
add
sbb
cs
inc
inc
sbb
jl
pop
aaa
shl
cs
icebp
dec
cmp
push
pop
xchg
sub
loop
or
xor
push
repz
sbb
dec
mov
xor
mov
xor
jb
cmp
or
jno
jge
xchg
xchg
test
xor
movl
mov
sbb
mov
cmp
pop
hlt
jg
sbb
repz
or
call
or
push
jae
std
jne
xor
loope
and
add
loope
cltd
inc
lods
std
dec
inc
pop
sub
into
xchg
inc
add
sub
in
pop
adc
adc
mov
aad
pop
clc
mov
mov
cmp
hlt
es
add
cmpsl
lahf
mov
mov
or
and
or
daa
cmp
xchg
xchg
or
clc
add
dec
mov
dec
fists
imul
out
and
sub
xorb
xor
cmpsb
push
jmp
addb
sbb
push
push
rcll
push
or
inc
out
add
shll
in
sahf
xchg
stc
inc
repnz
rcrb
dec
cli
pop
testb
ja
ret
mov
loopne
repz
test
push
pop
mov
fadds
es
sub
or
jmp
cmpsl
xor
inc
push
dec
loopne
xor
jno
js
add
mov
mov
rorb
jle
call
inc
mov
xor
add
rolb
call
in
faddp
and
dec
add
ljmp
in
movsb
jns
or
jo
push
sub
out
out
and
dec
fadd
add
mov
jl
push
js
pop
lea
pop
xor
fdivs
in
sbb
mov
fstps
out
lea
jae
xor
add
pusha
lea
mov
lret
scas
fcomps
rorb
pop
push
shrb
xchg
or
in
add
int3
sub
sbb
adcl
cmc
pop
loopne
mov
pusha
mov
stos
nop
adc
je
in
add
adc
inc
jb
out
and
das
sbb
call
call
dec
xor
negb
and
mov
adc
xchg
push
push
cwtl
xchg
pop
fistpll
xchg
movsb
jb
xor
test
cmp
les
imul
test
mov
movl
add
mov
in
es
rorb
xor
push
add
lea
add
je
aaa
cmp
cs
inc
push
cmp
and
mov
add
gs
sub
cmp
sub
dec
inc
sub
popa
bound
outsl
and
mov
int3
aaa
sub
or
loopne
data16
adcl
loopne
outsb
outsl
mov
or
mov
loop
mov
mov
das
xchg
insb
icebp
xor
in
movsb
add
adc
and
mov
add
mov
cmpsb
rol
dec
sbb
mov
sub
and
xchg
cmpsb
lahf
sub
daa
nop
scas
mov
push
xor
addr16
imul
decl
jae
jne
ja
jns
xor
gs
mov
das
xlat
jle
push
and
dec
add
add
cmp
lret
lahf
adc
and
mov
add
dec
pop
insb
pusha
aaa
push
push
add
nop
icebp
adc
pusha
test
dec
mov
aaa
xor
rclb
push
or
adc
mov
mov
mov
add
mov
push
testl
push
inc
aad
sarb
jae
xor
pop
sbb
push
jo
pop
adc
xchg
or
or
push
lock
out
aaa
xor
fcompl
jo
fadds
xorl
mov
or
sbb
out
jbe
insb
mov
ds
enter
sub
in
and
out
and
xchg
test
jp
out
adc
push
leave
or
pop
jmp
and
inc
adcl
add
add
addl
dec
loopne
xor
dec
and
mov
xor
pop
add
enter
mov
mov
pop
sbb
test
pop
pop
leave
addl
popf
adc
lds
mov
lcall
fistps
add
and
or
sbb
adc
sbb
push
incl
mov
sub
aas
mov
xor
movsl
pop
out
and
adc
inc
or
cmp
notl
or
push
aaa
or
gs
fwait
add
stc
mov
mov
sbb
pop
add
jne
jae
imul
jnp
sub
rol
mov
clc
xchg
hlt
xchg
mov
enter
or
mov
mov
adc
lret
and
pop
repnz
jp
test
or
gs
into
mov
js
sbb
cld
repnz
mov
cwtl
inc
cmpsb
popf
out
push
fdivl
in
xor
cmp
lret
shlb
mov
pop
in
push
inc
and
xchg
mov
cmpb
adc
inc
lds
stos
leave
push
pop
jnp
sub
cmp
cmp
bound
cmp
mov
or
mov
add
rorb
sbb
sti
outsb
dec
adc
out
lock
adc
push
adc
dec
or
cmp
in
cmp
sub
add
adc
mov
sbb
push
adc
add
ret
sub
enter
mov
sub
sub
fwait
dec
and
xchg
xchg
into
imul
mov
js
les
jecxz
mov
push
jbe
mov
sub
inc
in
mov
call
xor
mov
cli
mov
rcr
and
mov
sbb
loopne
ret
push
mov
addr16
dec
jbe
or
lock
aam
subb
arpl
add
pop
add
add
mov
addr16
cs
and
cmp
fwait
add
dec
push
cwtl
adc
cmp
and
sbb
shlb
jmp
scas
add
inc
sbb
test
fiadds
nop
ret
mov
mov
scas
add
mov
add
pop
push
insb
ljmp
or
clc
sbb
inc
push
adc
rorb
fsubs
cmp
push
sub
pop
xor
lahf
fs
sahf
or
aaa
inc
add
jle
imulb
je
and
xor
jmp
in
inc
or
push
pop
xor
sahf
adc
cltd
inc
pushf
mov
js
addb
das
jno
loop
sbb
sahf
and
sub
dec
pusha
inc
ja
test
lds
xchg
xor
xor
adc
adc
inc
or
and
inc
cmpsl
movl
and
ja
dec
inc
fsubrs
sub
ret
sub
aaa
adc
sub
sbb
and
dec
cmp
cmp
idivb
adc
in
and
push
sbb
inc
or
into
mov
dec
outsl
lock
jae
jo
push
test
pop
sub
fwait
outsl
negl
jl
add
imul
dec
add
divl
mov
sbb
sub
sub
push
sub
sub
add
sbb
push
outsl
adc
sbb
xor
xor
scas
shrl
and
mov
inc
sarb
cmpsl
std
test
cmp
inc
inc
lea
pop
outsl
and
and
fimuls
push
les
pushf
or
adc
inc
ljmp
cmp
xor
pusha
mov
sub
bound
sarl
pop
mov
and
and
and
or
jae
filds
and
mov
inc
fs
adc
inc
add
loope
lret
incl
sub
gs
lock
push
icebp
pop
or
xor
insb
aas
mov
push
clc
xor
les
add
dec
mov
ret
daa
cmp
aaa
fnstcw
sub
outsl
or
dec
mov
and
in
adc
mov
clc
mov
dec
sub
add
push
sbb
add
pop
sbbb
sbb
add
loopne
stos
push
ret
aam
cmp
adc
scas
shrl
adc
xor
or
cltd
push
rcrb
cmp
gs
or
sbb
pop
cwtl
rcrl
inc
sbb
mov
pushf
xchg
inc
jmp
stos
mov
xchg
idivl
sbb
or
lock
sub
fdivrl
or
cwtl
in
sub
lcall
inc
div
ja
imul
and
imul
loope
adc
inc
cmp
jmp
cmp
xorb
fs
shrl
gs
or
cmpsb
mov
imul
push
sub
jge
or
ret
insl
inc
insl
or
jmp
cmp
add
xor
idiv
jae
push
xchg
xchg
pop
imull
mov
push
cmp
push
aas
inc
addr16
cmp
adc
sub
fstpl
inc
push
and
call
adc
push
push
rcrl
xchg
clc
adc
clc
clc
jle
sbb
das
adc
pop
test
push
mov
push
cmovo
jns
dec
fldenv
inc
xchg
xchg
test
xchg
test
scas
jbe
and
and
jae
add
gs
adcb
inc
inc
daa
xor
sbb
push
add
test
movntps
js
jno
dec
adc
out
stos
test
jne
mov
jns
sub
inc
and
jl
push
mov
sub
adc
adc
je
clc
cmpsb
andb
xor
mov
adc
shlb
in
xchg
dec
daa
fists
popf
lock
inc
push
cmp
testl
pop
or
dec
loop
sbb
ds
inc
inc
push
cvtpi2ps
andl
push
or
cs
dec
xchg
test
stos
xor
and
jnp
mov
sub
push
pushf
sub
aaa
test
dec
xor
pop
addr16
aaa
sbb
outsb
call
jg
pop
xchg
cmp
xchg
add
sub
pop
or
loopne
dec
cltd
scas
or
fdivl
rcrb
pop
xchg
loopne
and
mov
bound
imul
mov
sbb
in
xor
mov
mov
or
aam
sbb
mov
imul
aaa
push
enter
sbb
mov
mov
mov
xchg
movsb
xchg
fisubrs
push
rcrl
dec
add
add
and
in
pop
mov
rolb
add
mov
adc
and
adc
and
mov
push
mov
test
call
mov
pop
sub
jns
hlt
sub
dec
ret
xor
xor
xor
stos
movsl
aas
andb
xor
ds
xor
or
es
inc
sbb
push
pushf
insl
pusha
outsb
xchg
mov
dec
sbb
push
pop
sub
adc
ss
jnp
jbe
bound
inc
addb
dec
add
jle
xor
ja
rorb
cmp
nop
cmp
test
cmp
cmp
and
cmp
lock
int
les
addl
sub
xor
incb
js
adc
mov
adc
dec
dec
inc
push
adc
pop
jbe
push
daa
or
cmp
subb
sbb
cwtl
sub
out
or
sub
js
mov
xorl
mov
mov
inc
sub
lock
adc
jl
outsl
and
jg
test
insl
call
push
cmpsb
std
test
decb
and
insl
enter
aam
shl
insl
shll
xor
push
ret
adc
mov
xchg
daa
and
mov
inc
pop
sub
push
inc
push
push
dec
dec
dec
inc
sub
dec
sbb
pop
sub
daa
mov
add
or
xchg
pushf
sbb
insb
mov
ja
dec
and
loope
pushf
call
lahf
push
adc
cld
das
inc
pop
cmp
imul
jns
xor
xchg
add
and
xchg
xor
out
mov
mov
notl
cwtl
push
jmp
cmpl
push
addl
pop
adc
jmp
push
add
push
mov
cmp
nop
out
das
clc
fldcw
inc
mov
xchg
ret
adcl
or
inc
push
inc
mov
shll
dec
movsb
ret
mov
add
xchg
jne
jg
push
mov
cmp
push
imul
les
mov
addl
or
cmp
add
and
mov
lds
ja
inc
or
aas
xor
lods
add
jo,pt
or
or
sub
movsb
mov
cmp
lret
add
inc
bound
pop
pop
adc
sbb
loope
ja
mov
and
mov
ss
and
pop
mov
sub
in
mov
sar
ret
out
dec
xor
dec
and
mov
mov
dec
mov
mov
js
jbe
rclb
sbb
and
sbb
sub
inc
into
popf
mov
daa
adc
cmp
lock
push
push
sbb
mov
or
push
pop
sbbl
mov
adc
sbb
aas
aaa
pop
sbb
into
ficomps
mov
movsb
dec
es
sub
inc
add
inc
sub
loop
adc
lock
xor
das
enter
sbb
mov
mov
and
adc
popl
cs
jp
push
mov
outsb
rorl
and
ljmp
in
mov
inc
subb
sub
int
sbb
dec
mov
insl
loope
test
lods
adc
sbb
jbe
pop
pop
dec
sub
test
dec
jns
mov
adc
cmpsb
cmp
cwtl
pop
add
dec
ret
sbb
push
pop
xor
xchg
push
nop
ret
mov
adc
push
jl
adcl
test
jg
jmp
add
bound
mov
imul
hlt
lds
or
lods
mov
push
dec
mov
adc
or
xor
mov
gs
addl
shlb
sub
jge
adc
test
daa
popa
shrb
lock
inc
push
cmp
xchg
add
sbb
mov
ror
dec
dec
subb
movsb
push
and
mov
pop
cli
push
loop
inc
in
out
mov
inc
sbb
adc
dec
jne
icebp
sbb
and
push
cmpb
jg
mov
sub
pop
inc
stos
push
sbb
fwait
add
mov
insb
inc
popa
cmpsl
inc
movsl
push
sbbl
inc
shrb
pop
pop
dec
inc
ds
mov
rol
out
aas
mov
jo
push
imul
iret
loope
mov
das
cmp
add
outsl
addr16
mov
sbbl
faddl
push
dec
rolb
xor
adc
loope
or
cmp
sub
add
shl
imul
stos
loopne
add
lea
jecxz
aas
fldl
pop
xchg
sbb
daa
push
cmp
dec
cmpsb
and
jb
shr
push
ret
ret
shll
mov
dec
stos
and
jns
xchg
pop
movsb
pusha
stos
sbbb
dec
add
push
loopne
movlps
rcl
sub
mov
cmp
push
rolb
cmp
add
inc
enter
shlb
adc
pop
loop
add
xlat
inc
add
jae
or
fnsave
nop
das
cmp
jg
scas
rcll
and
xor
lret
lock
adc
int
imul
mov
mov
dec
pop
cmp
mov
imul
adc
stos
inc
dec
jne
mov
add
push
jbe
lods
dec
rol
fdivr
mov
xlat
adc
sar
mov
dec
loopne
cmp
repnz
inc
aaa
cmp
adc
movsl
or
or
iret
mov
bound
and
out
xor
test
lds
cltd
mov
fsub
dec
jo
inc
pop
pop
rclb
push
push
js
cvtps2pd
adc
mov
cmpsl
or
lods
rorl
movsl
add
cmp
pop
cmp
mov
scas
dec
sub
aaa
pop
hlt
ret
and
and
in
xacquire
jno
or
jno
add
push
xchg
sbbb
pop
sub
lds
pop
adc
pusha
or
or
mov
add
inc
outsl
loop
sub
adc
jne
mov
cmp
push
les
repnz
enter
loop
hlt
add
or
cmpsl
mov
fistl
js
stc
dec
call
and
and
adc
dec
dec
inc
push
adc
jl
inc
adc
sbb
std
stos
sbb
jbe
inc
inc
js
xor
xor
shll
adc
xor
fiaddl
cli
inc
push
mov
rclb
and
sub
out
aas
psrld
dec
and
imul
movsb
mov
sbbb
popa
push
xor
daa
das
rolb
aam
pushf
sbb
inc
nop
inc
mov
sub
adc
ficomps
or
test
adc
inc
add
add
sbb
fbld
out
sub
jmp
int3
sbb
lock
pop
jnp
lock
inc
pop
pusha
push
test
add
adc
aad
sbb
syscall
push
push
add
or
scas
aas
pop
filds
stc
dec
sarb
mov
sahf
mov
push
pop
inc
sbb
push
push
dec
pop
rolb
out
nop
out
sub
clc
icebp
push
test
or
pusha
dec
sub
jne
movsl
out
ljmp
and
and
or
inc
add
iret
mov
pop
push
rcrb
cmpsb
push
xlat
sbb
pop
push
xor
movsb
dec
dec
inc
push
sbb
inc
sar
push
mov
dec
jg
push
inc
sub
pop
dec
cmp
pusha
scas
dec
lods
push
xor
mov
in
cmpsl
add
add
scas
xchg
xor
rcll
push
push
push
xor
movhps
add
inc
outsl
pop
or
movsb
in
push
ret
aad
or
movb
push
or
adc
jbe
adc
lea
push
adc
add
or
xchg
push
sbb
test
js
out
pop
or
or
dec
and
test
mov
sub
ss
push
push
xchg
fsubl
out
push
jecxz
add
in
and
sub
pop
lds
mov
xor
nop
push
rol
cmp
cmp
inc
add
push
dec
pop
pop
enter
add
dec
loope
jmp
adc
add
mov
or
gs
mov
add
push
sti
inc
mov
and
scas
or
test
dec
jb
and
mov
sbb
mov
cmp
push
jb
insl
popa
mov
cmpsb
jmp
push
loopne
add
scas
lcall
push
sub
sub
cmpsl
or
mov
pop
sub
pop
pop
pop
cmp
pop
inc
add
inc
add
shrl
push
jne
or
xlat
and
sbb
sub
mov
das
loopne
cld
mov
inc
sub
cmpsb
das
dec
cltd
add
jns
movsb
xor
push
sub
pop
mov
push
dec
push
aam
add
addb
insb
push
sub
pop
or
cwtl
pop
in
fs
ss
or
ror
insb
jo
je
test
cmpsb
dec
push
imul
and
xchg
mov
rcrb
or
ja
add
pusha
nop
mov
cmpsb
mov
mov
imul
push
test
adc
cmp
loop
dec
add
inc
dec
and
nop
ja
push
je
nop
cmpsl
roll
pop
sbb
adc
adc
push
int3
test
rol
leave
mov
movsb
sahf
adcb
test
pop
repnz
xchg
dec
and
pop
or
lea
or
inc
and
add
sbb
inc
pop
push
pop
enter
setg
jo
aas
sbb
xor
push
nop
stos
cmpsb
xlat
lods
pop
add
addb
hlt
mov
inc
popa
dec
bound
fxtract
jbe
push
push
lods
mov
popf
mov
adc
pop
xor
test
adc
loopne
push
in
jns
push
inc
pop
and
jae
or
subb
outsl
jnp
adc
inc
js
push
scas
call
push
sub
adc
cwtl
daa
addb
fiaddl
xor
in
push
test
int3
add
test
aas
inc
cld
or
data16
inc
aad
sbb
inc
pop
adc
enter
dec
cmpsb
adc
inc
add
sbb
mov
jo
mov
popf
xor
push
or
or
dec
lcall
cmp
cmp
dec
rorl
sbb
and
and
sub
xor
shrl
xor
xor
shll
dec
push
xor
shll
push
push
pop
pop
push
adc
pop
pop
jmp
add
sub
xlat
inc
add
push
cltd
nop
adc
sbb
or
sub
inc
inc
and
xor
int3
cli
sbbb
pusha
sub
pop
push
sub
adc
xchg
je
cmpl
enter
sub
inc
les
nop
pop
push
int
push
out
xor
cmp
jl
or
mov
mov
and
loopne
loopne
jl
or
cmp
mov
rcr
mov
pushl
test
or
setae
adc
popf
ret
adcl
test
push
jmp
mov
lcall
mov
push
fisttpll
out
xor
clc
inc
or
mov
mov
push
sub
add
or
sub
xchg
mov
xchg
int3
mov
dec
arpl
add
pop
pop
pop
dec
fwait
xor
mov
aas
daa
pop
les
ds
les
cmp
rol
shlb
aad
fcomi
jg
jge
fildl
fdivs
mov
fwait
jmp
jbe
stc
cmp
lock
sub
pusha
mov
imul
mov
mov
mov
test
adc
das
das
adc
aaa
arpl
sub
das
xor
rclb
xor
test
sub
lahf
xchg
push
aaa
mov
dec
fdivrl
test
and
xchg
inc
dec
xor
push
js
stos
pop
sub
fwait
es
clc
add
movsb
mov
inc
in
in
cmp
mov
inc
adc
mov
fs
mov
dec
mov
or
add
cmp
xchg
fs
das
push
jbe
dec
ja
in
cltd
add
pop
repnz
add
add
fldl
fcomps
jae
adc
fucom
mov
or
popa
push
push
scas
pop
inc
addb
mov
xor
pusha
pusha
cmpsb
xor
inc
subl
xor
and
fisubs
nop
xchg
or
bound
push
push
adc
in
sub
mov
inc
push
sub
test
rcrb
ffree
mov
inc
sbb
or
cmpl
dec
pop
int
inc
fs
dec
shr
call
and
and
rcr
setg
daa
xor
je
add
mov
pop
push
inc
mov
mov
adc
push
add
jecxz
pop
pop
das
dec
inc
xchg
push
inc
and
pop
fiaddl
leave
push
dec
arpl
mov
repnz
frstor
cs
push
pop
sub
inc
jecxz
jne
push
cmp
push
dec
daa
inc
insl
xor
insl
or
sbb
jmp
sub
push
mov
adc
cmc
pushf
dec
nop
push
push
fcoms
mov
add
inc
pop
jno
and
scas
mov
xor
pop
sub
inc
into
fbstp
pop
loop
add
or
dec
mov
mov
or
inc
jmp
fadds
mov
fcmove
add
and
pop
test
addr16
jno
loope
adc
mov
pop
push
mov
push
or
pop
insb
mov
inc
push
jb
jo
pop
pop
add
in
loopne
in
inc
mov
adc
pop
test
cmp
mov
xchg
js
aas
dec
adc
push
and
push
fmuls
and
sbb
xchg
inc
cpuid
pop
int
inc
pusha
xor
pop
and
or
fs
pop
push
sub
push
das
btc
add
jg
and
dec
sbbl
or
inc
cmpsl
pop
addr16
jno
outsb
pop
jbe
or
sub
push
dec
lcall
test
jl
xchg
lret
mov
xchg
addb
test
test
xchg
push
inc
sahf
pushf
xchg
or
push
jmp
and
mov
adc
jo
push
jl
das
stos
add
inc
xchg
sbb
jg
ret
loopne
push
and
das
sub
add
es
popa
das
pop
outsb
or
sub
cmpsb
cmp
push
lods
and
lret
sbb
decl
cmpl
daa
fimull
adc
sahf
inc
test
pop
inc
xchg
dec
pop
out
sbb
push
clc
and
insb
insb
enter
xor
or
xchg
or
je
fs
scas
loopne
jl
jl
dec
test
xor
inc
mov
pushf
cwtl
and
inc
and
pop
cld
and
xchg
in
jp
pop
pop
fcomps
push
jnp
orl
daa
cmpsl
cmp
jns
pop
jmp
sbb
mov
clc
mov
pusha
call
iret
test
arpl
test
lds
lock
dec
xor
hlt
adc
mov
test
add
mov
mov
sub
pop
dec
or
ficoml
mov
jmp
push
add
sub
cwtl
jo
and
add
inc
fs
sub
mov
mov
subl
cltd
stc
or
sbb
mov
sarl
pop
and
fistpll
xchg
or
sbb
repnz
js
jl
and
arpl
pop
pop
mov
bound
bound
pop
stos
sbb
cld
cs
xor
sbb
add
jge
mov
das
xchg
adc
mov
call
and
xchg
out
sub
pop
aaa
je
and
add
push
roll
adc
jo
fs
xor
mov
push
outsl
cmp
or
push
dec
addr16
sbb
and
es
jbe
add
or
adc
pop
add
push
inc
add
imul
fistl
push
in
call
inc
dec
daa
adc
mov
stos
mov
dec
add
sub
pop
jge
inc
inc
inc
xor
cmp
bnd
xchg
in
je
push
fs
push
inc
jo
outsl
adc
ja
es
sub
sub
fs
aas
fldt
cmp
adc
push
fildll
add
lea
lea
and
loopne
mov
mov
push
idivl
jo
jae
and
inc
sbb
mov
int3
dec
adc
cld
pop
mov
cltd
push
popa
adc
dec
jo
movl
dec
outsb
and
insb
lea
and
push
dec
gs
loopne
add
adc
inc
inc
sbb
add
push
mov
push
jb
fs
ficomps
push
push
jae
mov
fsub
sti
pop
js
add
fwait
std
ja
pop
jo
xor
andb
testb
mov
jbe
dec
and
push
loope
push
rcrb
jae
add
add
popa
sub
mov
test
fsubrs
sbb
rclb
cmp
push
sbb
sbb
cmpsl
or
rol
inc
ds
or
dec
arpl
or
add
aad
mov
mov
xlat
sbb
popa
or
sbb
mov
add
sub
popa
jo
divl
aad
addr16
andb
sub
roll
push
sub
adc
push
adc
or
imul
sti
mov
addr16
dec
repz
push
aad
cwtl
pop
in
push
add
sub
jg
popa
dec
imul
pop
sub
dec
mov
push
ja
insl
jb
dec
mov
loope
add
sarb
loopne
add
movl
enter
call
or
jl
fsubl
imul
scas
mov
bsr
mov
pop
pusha
pusha
add
mov
pop
pop
fmull
mov
dec
insb
xchg
dec
movl
cmp
pop
pop
or
nop
pop
sub
sub
dec
or
or
xor
imul
push
mov
sbb
xchg
and
jo
sbb
jo
inc
push
sbb
mov
mov
add
dec
rolb
lret
push
loope
push
or
mov
lret
push
mov
adc
pop
repnz
jno
xor
adc
adc
jns
jns
inc
sbb
sbb
or
adc
fwait
sub
stos
add
cmpsb
sub
in
add
in
mov
inc
pushf
pushaw
xchg
sbb
mov
stos
pop
and
stos
nop
cwtl
pusha
rorl
add
cmp
lods
stos
adc
loopne
xchg
adc
sbb
movsb
mov
jne
add
add
mov
mov
adc
sbb
imul
loop
insl
or
adc
push
sub
lcall
lret
adc
mov
pop
or
add
cwtl
inc
pop
mov
outsb
jmp
inc
mov
inc
cld
xchg
and
hlt
cld
or
dec
push
add
push
mov
cmp
outsb
inc
inc
adc
jae
mov
imul
adc
daa
pop
inc
add
and
sbb
mov
push
outsl
or
xchg
sbb
sub
and
sbb
cmpsl
rolb
pop
xor
sbb
in
add
adcl
sbb
ss
pop
and
jl
sbb
jl
pop
jle
adc
inc
pusha
loopne
jo
sub
add
test
and
jo
push
mov
nop
xchg
or
mov
add
add
add
popa
popf
aas
loope
or
add
mov
jnp
pop
cmp
xchg
jno
jno
ljmp
adc
dec
leave
fldt
pop
in
mov
xchg
testb
adc
and
out
pop
sub
es
adc
and
scas
mov
jno
pop
rorb
bound
rolb
lea
jge
cld
and
movsb
pusha
sbb
jae
jl
push
xchg
es
and
jae
test
out
inc
insb
movsb
hlt
cld
lock
shrb
call
call
outsl
cld
add
les
inc
or
pop
adc
pop
jo
pop
push
add
jecxz
push
lret
mov
lock
and
addl
cmp
inc
adc
xchg
fistl
lock
mov
ja
inc
imul
add
out
popa
in
xlat
inc
pop
fstsw
inc
addb
push
xchg
sub
mov
clc
insl
mov
inc
and
pop
hlt
dec
fisttpl
adc
pop
mov
sub
add
out
bound
pmulhuw
push
sub
sbb
fiaddl
mov
sbb
and
std
xchg
xlat
sbbl
sbb
mov
loope
xor
shlb
lods
movsl
loopne,pn
iret
enter
arpl
jp
sbb
xchg
adc
and
cmp
xor
pop
pop
pop
pusha
xchg
push
push
or
jne
and
nop
hlt
stos
push
add
out
and
je
and
fildll
jle
js
ja
es
sub
xor
insb
gs
fs
xor
scas
push
sbb
stc
insb
sub
lcall
insl
push
xor
adcl
frstor
sub
dec
rcr
sbbb
mov
add
ret
pop
adc
mov
mov
ljmp
push
pop
and
popa
nop
inc
iret
pop
test
dec
push
adc
sbb
rcrb
mov
cmp
sbb
outsb
push
mov
sti
outsl
lret
or
orb
mov
sbb
adc
aas
mov
pop
dec
mov
inc
fwait
and
mov
adc
ret
push
js
lods
or
movsl
ret
dec
and
lahf
mov
dec
int
xchg
adc
inc
dec
out
in
push
adc
jl
push
pop
rcrb
aam
loope
dec
mov
add
pop
lahf
dec
adc
dec
and
ret
out
dec
and
mov
dec
sub
jbe
adc
mov
sbb
inc
adc
mov
sbb
ds
pusha
or
mov
and
mov
pop
xchg
dec
jp
pop
fwait
sub
adc
and
and
push
sub
adc
ficoml
mov
xchg
sbb
bound
lods
ficoml
jno
adc
or
mov
aaa
popa
and
push
xchg
adc
jo
adc
and
jnp
mov
xor
adcb
xchg
nop
rcll
fwait
dec
and
dec
pusha
jno
pop
inc
shrb
adc
iret
add
pop
add
das
popa
nop
push
mov
xor
mov
dec
mov
adc
insb
lcall
push
fmull
push
jb
or
add
flds
push
push
push
leave
jnp
add
xor
sbbl
cmp
fsubl
mov
add
mov
cmp
outsb
inc
rol
nop
xchg
xchg
and
xlat
pop
add
xor
and
add
mov
push
fidivrs
mov
popa
cmp
sarl
clc
cmc
cmp
mov
mov
sub
mov
sub
es
pop
and
push
dec
xchg
sub
sarb
push
jno
dec
ja
stos
test
fsubs
dec
js
les
iret
pop
popa
arpl
and
push
dec
dec
lahf
pop
jge
pushl
mov
out
orb
cmp
outsl
jle
or
negl
xorb
sbb
mov
ret
mov
pop
hlt
jno
mov
lock
jmp
addr16
dec
imul
push
inc
mov
sbb
push
fldcw
mov
cmp
in
jle,pt
sub
movsb
xchg
in
push
adc
rcrb
push
adc
addr16
jo
and
and
sub
xchg
jne
dec
orb
xchg
lock
xchg
pusha
cmc
lds
testl
pop
mov
rcr
or
adc
push
sub
popa
mov
mov
xchg
cltd
inc
sbb
lds
fiadds
xchg
push
and
mov
stos
inc
and
and
xchg
mov
push
out
daa
and
mov
rcrb
rcll
ret
into
mov
loopne
test
fcoms
adc
mov
pusha
addl
daa
sub
enter
pop
sbb
sbb
or
pop
adc
and
jmp
jbe
pcmpgtb
xor
adcb
sub
gs
inc
data16
adc
adc
push
mov
outsl
adc
insl
and
add
jl
out
or
test
jno
lock
mov
cmp
pop
repnz
push
loopne,pt
aaa
test
gs
lcall
sub
imul
xorl
inc
shlb
push
xchg
and
mov
orl
mov
sub
sub
cmp
pop
mov
or
mov
mov
or
mov
insl
jmp
and
shlb
pop
mov
imul
out
decl
inc
push
jmp
das
sbb
inc
push
push
aam
jne
ret
jo
mov
push
cmp
inc
lcall
and
movl
cmp
orb
aaa
xchg
mov
xor
daa
testb
pop
fbstp
pop
jl
in
pop
dec
push
push
in
sbb
les
sub
mov
inc
inc
push
push
adc
add
dec
inc
push
inc
add
test
iret
fwait
inc
cmp
adc
ret
dec
ss
test
cmp
pop
ret
int3
imul
nop
or
loopne
xorb
lahf
cmp
pop
xor
xor
and
xorb
pop
xchg
test
in
adc
inc
cmpl
add
sahf
lcall
add
push
mov
inc
loopne
jmp
mov
mov
add
cmp
pop
jle
add
fiadds
das
jmp
mov
mov
outsb
cs
jne
add
xchg
dec
mov
out
pop
sub
and
mov
mov
sub
rorl
shll
int3
xor
push
sub
jb
mov
cmp
fs
aam
or
mov
lods
mov
inc
ret
add
push
xchg
mov
cmpsl
push
sub
and
loope
imul
add
mov
adc
nop
cmc
push
and
nop
out
inc
adc
adc
mov
imul
cwtl
pop
in
sub
adc
jne
xor
lret
leave
pop
daa
push
nop
push
push
int
fadds
dec
mov
cmpsl
rolb
rorb
jae
pop
sbb
jmp
push
jmp
orb
pop
insb
and
sub
inc
sbb
jecxz
adc
add
out
fsts
dec
adc
or
xorb
push
jg
test
enter
cwtl
xor
mov
and
jle
inc
orl
and
jp
xlat
push
orl
loopne
push
dec
lods
pop
xchg
or
outsl
pop
cli
imul
stc
or
mov
mov
dec
rorb
fidivs
sbb
psubusb
add
sbb
mov
mov
cmp
xor
popa
imul
popa
cmp
bswap
js
daa
sub
sbb
outsl
leave
inc
imul
mov
addr16
sbb
lahf
hlt
or
out
dec
dec
inc
inc
push
jb
and
inc
loope
sbb
dec
imul
lcall
pop
es
nop
or
repnz
inc
in
pop
test
and
fs
or
mov
aam
jne
or
cli
mov
loope
pop
xchg
sahf
gs
out
pop
nop
adc
add
aam
sub
inc
xor
mov
push
mov
mov
pop
push
mov
fs
mov
push
mov
jae
dec
sbb
clc
inc
sub
js
jne
xchg
clc
in
inc
scas
in
clc
in
in
lods
test
mov
enter
ret
inc
sub
les
xchg
cs
daa
or
jns
and
lock
xor
mov
pop
fistl
jmp
and
add
jmp
inc
cld
cmp
push
sub
cld
out
imul
xchg
mov
out
sbb
add
xor
sbb
out
cmp
dec
mov
push
mov
jae
sub
aas
xchg
jl
inc
mov
dec
jne
mov
pop
fsubs
mov
push
pushf
lcall
rclb
imul
sarb
inc
rcl
push
push
sbb
pop
jne
dec
mov
movsl
xchg
rcrb
sub
xchg
inc
jb
call
mov
in
sbb
push
cltd
sbb
pusha
jg
test
cmp
sub
repz
or
mov
xor
jae
sbb
mov
cmp
inc
mov
mov
cmp
mov
xchg
dec
mov
les
adcb
movl
scas
dec
je
jmp
xlat
mov
repz
decl
push
dec
dec
mov
pop
sbb
shl
dec
mov
cwtl
movsb
ss
test
push
call
outsb
mov
jnp
adc
test
push
mov
shl
add
inc
add
lds
add
leave
cmpl
pusha
out
loopne
cmp
lahf
xchg
loope
movsb
push
data16
js
fs
adc
xchg
daa
inc
or
and
xchg
mov
das
sub
pop
ja
mov
dec
js
mov
out
inc
test
adc
stc
mov
xlat
je
into
push
je
mov
les
pop
call
andl
popl
push
js
push
cmp
add
mov
push
je
stos
adc
sarl
in
sub
imul
mov
xchg
pop
pop
insl
adc
aam
or
inc
shlb
sub
dec
fmull
daa
or
orb
ret
in
cmc
add
push
loopne
mov
mov
push
rolb
popa
inc
out
pop
mov
imul
test
mov
xchg
imul
pop
ret
add
subb
inc
es
inc
lret
js
cmpsb
pop
not
or
or
fs
sub
ret
int3
push
pop
andl
fldenv
adc
or
pop
and
ja
push
or
aad
sbb
adc
or
mov
inc
mov
push
lea
mov
dec
inc
cmp
mov
adc
fstpt
inc
lds
popa
cmp
xchg
xor
jb
fiadds
cmpl
fs
imul
pop
xchg
jo
cmovno
hlt
nop
inc
mov
and
and
and
push
mov
mov
and
lock
or
sub
movsb
movsb
in
icebp
jmp
mov
and
mov
call
call
loopne
inc
mov
sbb
mov
inc
jo
pop
inc
dec
dec
fistps
fwait
and
cmovnp
push
sub
inc
dec
dec
push
sub
out
xchg
and
lcall
inc
pop
fld
lretw
pop
or
mov
ficomps
adc
pop
mov
or
adc
mov
add
das
mov
enter
add
lret
dec
push
inc
adc
xchg
subb
or
push
movsb
lret
rolb
test
add
pop
mov
push
out
aaa
adc
add
dec
lret
adc
dec
or
dec
push
addr16
sarb
bound
ljmp
push
les
xchg
lods
scas
pushl
adc
xchg
cmp
lea
aaa
cmpsb
sub
rorb
lock
shr
adc
fidivs
dec
imul
lret
and
stc
cmpsl
xchg
jno
add
stos
xchg
mov
cmpsb
jmp
or
mov
xorl
mov
mov
sub
shrb
aas
sub
xor
cmp
test
ja
cwtl
cmpl
ret
adc
xlat
fisttpll
add
xchg
es
add
and
arpl
or
mov
jmp
inc
lret
inc
test
js
shll
stos
jb
mov
mov
outsb
jmp
lcall
or
orb
int
test
or
sbb
shr
cltd
dec
xor
popa
nop
push
push
sti
imul
push
mov
add
popf
add
daa
inc
dec
xchg
add
xchg
push
xor
lock
cld
movswl
cmp
jne
adc
push
adc
je
inc
mov
sbb
adc
mov
mov
sbb
pop
push
hlt
xor
mov
lock
push
or
lcall
call
and
cld
clc
cld
push
mov
jnp
lcall
mov
sub
pop
enter
addr16
add
je
lcall
fdiv
sub
mov
mov
push
push
xor
add
movsb
xor
mov
add
inc
lcall
add
in
imul
sahf
push
aad
or
out
cli
push
test
adc
add
mov
test
pop
xorb
xlat
testb
adc
cmp
mov
je
xor
push
test
or
sbb
insb
das
dec
cmp
clc
cmpb
mov
repz
and
fdivs
sahf
xorl
pop
ret
push
mov
rolb
push
js
adcb
inc
in
xchg
das
and
data16
push
xchg
dec
mov
sbb
xor
jbe
push
inc
and
cs
push
les
add
sbb
pop
adc
sub
int
insb
mov
enter
add
mov
popf
xchg
add
mov
pop
mov
popf
adc
or
xlat
test
shlb
lret
in
add
fldt
sub
shlb
movsl
inc
rclb
scas
dec
leave
sbb
ret
pop
xchg
push
or
mov
enter
dec
loop
and
jmp
jge
add
aad
cs
dec
movsb
cmp
fucomi
arpl
adc
rcl
ds
add
insl
lods
and
inc
add
push
testl
dec
les
stc
jge
shl
sbb
mov
mov
adc
push
pop
loopne
test
out
inc
push
add
fcoml
cmc
int3
and
mov
pop
in
lret
jns
sti
mov
pop
push
jnp
pop
movl
adc
rclb
sbb
popa
mov
lahf
or
mov
xor
ljmp
rcrb
mov
xor
xchg
and
add
xchg
cltd
int3
and
test
outsl
cmp
pop
vpshlb
addb
jg
or
xor
sbb
pop
outsb
mov
mov
cwtl
jne
hlt
mov
mov
int
xor
out
cmp
dec
push
mov
jo
dec
lds
mov
and
mov
inc
nop
test
mov
push
mov
movsl
cmp
hlt
clc
mov
mov
add
xchg
bound
fisttpll
or
inc
inc
adc
cmpsb
movsb
add
and
fimull
int
jo
scas
fcomi
or
orb
rorb
clc
xchg
cmp
insb
cmp
sub
daa
inc
adc
or
push
mov
mov
xor
adc
sbb
addr16
push
lea
jmp
jge
mov
push
movsl
pop
adc
pop
sbb
test
jg
and
rorb
clc
pop
jne
pop
ds
and
and
mov
cmpb
sbb
mov
jnp
xor
fsubrp
inc
add
jge
mov
testb
movsb
das
stos
push
xchg
inc
fiaddl
ret
push
xchg
adc
pop
js
fbld
orl
fmul
xchg
jno
js
push
movsb
mov
pop
dec
xchg
pop
ret
loopne
mov
mov
clc
aaa
filds
lods
movsb
cwtl
dec
mov
jecxz
test
cmp
or
xchg
clc
js
jns
xchg
sub
aaa
inc
add
pop
lcall
mov
or
div
dec
lods
dec
mov
sti
mov
jmp
dec
cmp
dec
test
xor
mov
mov
xchg
lods
or
push
out
cmp
xor
hlt
inc
adc
ds
les
cmc
call
inc
xor
lea
mov
daa
xchg
ret
cs
sbb
lds
push
inc
fdivs
inc
dec
jne
mov
dec
test
pusha
and
xor
mov
and
loope
pushl
jae
and
lods
sbb
jbe
movsl
cmp
dec
test
or
in
and
and
dec
cmp
and
test
pop
push
mov
sbbl
cwtl
loop
enter
cltd
xchg
in
in
nop
xor
fbstp
loope
dec
mov
or
mov
sub
andb
lcall
js
cs
je
add
popa
je
jo
and
xchg
aaa
and
pusha
sbb
push
jno
push
pusha
pop
fisubrs
pop
pop
mov
push
in
push
push
push
mov
dec
insb
dec
dec
xchg
lret
dec
imul
testl
cmp
cmp
xor
xchg
cmp
cmp
sbbb
xor
jb
nop
sub
sub
leave
in
cs
inc
inc
pop
push
in
inc
and
and
nop
lret
andb
sbb
add
sbb
or
gs
adc
and
and
push
in
add
add
xchg
cld
xor
popa
cld
std
sbb
leave
cmpl
std
mov
cs
sbb
jecxz
cld
xchg
in
std
sbb
pop
call
mov
and
loopne
xchg
out
outsl
fmull
insb
fcom
xchg
and
and
fwait
jb
std
mov
add
std
sbb
addl
adc
rclb
add
or
enter
jb
std
sbb
std
outsb
enter
jb
std
adc
mov
std
sbb
xor
xchg
add
in
movsb
mov
mov
inc
add
or
nop
nop
mov
xor
xchg
mov
dec
push
test
jge
cmp
add
jmp
push
adc
loopne
push
scas
and
gs
inc
push
lods
mov
sbb
pop
adc
repnz
push
mov
pop
inc
push
jg
xchg
cmp
jbe
lea
mov
pusha
add
repnz
leave
imul
pop
fidivs
xor
mov
jbe
scas
stc
push
cltd
mov
push
add
test
cmp
add
xor
adc
inc
inc
xchg
dec
add
popf
outsb
inc
in
cltd
in
adc
and
add
push
loope
mov
jne
or
out
cwtl
and
fadd
or
rolb
mov
movb
fbstp
sarb
mov
insl
out
jnp
xor
popa
xor
loopne
push
imul
xor
add
or
gs
rcrl
add
popa
or
pusha
negl
movsl
adc
pusha
add
sub
pop
leave
mov
xchg
cmp
ret
and
dec
adc
push
push
ja
scas
shrl
call
das
add
xchg
int3
test
push
or
add
adc
xchg
and
pop
pop
sbb
loopne
mov
fldt
ljmp
or
inc
dec
cmp
or
loopne
out
imul
add
dec
cmp
iret
mov
je
test
and
mov
cmp
push
push
sub
mov
addb
ror
movsb
adc
push
fiaddl
cmc
xor
enter
dec
push
dec
lock
lret
inc
mov
mov
sub
lods
enter
pop
test
das
add
cmp
mov
xor
xchg
mov
rcrb
ror
xchg
pop
mov
mov
mov
icebp
clc
jmp
inc
and
lcall
pop
sahf
push
adc
call
cltd
popa
dec
and
xorb
or
push
fcoml
cmpsl
jae
lahf
and
push
xor
or
add
sub
cmpsb
lock
adc
dec
inc
jo
cmp
fcmovnu
pop
push
cmp
sti
xchg
bound
rcl
mov
sahf
xchg
lock
fsubrs
mov
xlat
cmp
cmp
fbstp
pop
lcall
xchg
mov
lods
mov
mov
xchg
pushf
shlb
stos
scas
mov
xchg
out
test
cwtl
xchg
xlat
adc
xchg
notl
mov
sub
mov
cwtl
pushf
data16
xchg
pushf
mov
test
and
imul
loope
insl
mov
xchg
imul
test
push
jnp
mov
mov
out
fisttps
pusha
jb
nop
out
pusha
push
dec
insb
pop
push
sbb
rcrb
push
push
lods
dec
cs
push
pop
pop
inc
inc
push
nop
pop
dec
inc
lcall
int3
inc
xor
gs
dec
dec
dec
jae
enter
insb
dec
jae
dec
xor
in
xor
mov
imul
mov
xor
sbb
in
and
fs
lret
sub
xchg
out
xchg
sbb
adc
nop
out
adc
sbb
dec
jb
sbb
stos
imul
add
lea
mov
cmp
or
cmpb
pop
sbb
jbe
pop
loope
mov
lret
cmp
adc
pop
adc
pop
fdivp
scas
sub
dec
sub
add
sub
jb
sub
subl
call
or
and
push
je
sbb
fstl
push
add
mov
jmp
adc
in
adc
mov
insl
ja
shlb
or
cmp
sbb
mov
mov
shlb
inc
or
mov
xchg
mov
mov
cltd
mov
add
imul
add
cmp
enter
pushf
dec
pushf
add
xor
out
movsl
cmp
sub
xchg
pushf
xor
xchg
cwtl
cwtl
sbb
push
cmpl
sbb
inc
jb
cmp
xorl
and
das
insl
pusha
js
mov
add
pusha
test
mov
add
fs
add
lret
test
lods
dec
push
add
fs
pop
pop
outsl
add
les
dec
jnp
enter
dec
dec
cmp
adc
das
sbb
mov
sub
dec
js
fisttps
pop
mov
jp
mov
lea
sbb
sbb
xchg
adc
inc
inc
sbb
inc
push
imul
inc
es
xchg
add
call
pop
enter
add
sbb
xchg
or
mov
lods
or
add
fdivrp
add
sbbb
xchg
or
cmpsb
notl
fs
adcb
adc
mov
xchg
and
icebp
adc
push
sub
sti
sub
xchg
xor
dec
inc
cmp
mov
cmp
jmp
lret
insl
outsb
adc
sub
lock
sbb
sarb
and
xor
xchg
pop
inc
fdivr
aas
call
movsb
lods
cmpl
loope
aas
add
ret
aaa
xor
sub
ret
xor
inc
aaa
je
outsb
adc
imul
or
loope
lods
jns
js
mov
in
fldl
xor
sbb
dec
mov
inc
mov
jne
repz
repz
dec
lods
test
add
test
fwait
xor
data16
push
arpl
cmc
mov
pushf
aad
push
movsb
cwtl
sbb
scas
mov
fsubp
rclb
shll
mov
out
test
addb
jl
add
add
je
fwait
icebp
lods
je
mov
push
add
insb
inc
push
or
sbb
stos
xor
pusha
adc
xor
pop
mov
cmpl
sbb
jb
repz
jo
movsl
dec
les
or
js
push
jno
gs
cs
dec
dec
dec
dec
inc
outsl
enter
inc
in
nop
out
dec
sbb
cmp
jo
jl
inc
cmp
xor
loopne
or
sub
enter
cltd
sub
and
inc
pop
or
push
and
ret
xor
repnz
sbb
dec
inc
lcall
jo
add
iret
and
jns
or
and
jns
or
sub
adc
jno
and
add
push
or
cmpsl
sbb
xchg
cmp
sbbb
call
out
sbb
in
and
or
or
enter
adc
xchg
daa
pop
fcomps
lock
in
popf
fcoms
or
aaa
sub
sub
loopne
inc
testl
push
cmpsb
push
add
inc
push
dec
rcrb
sub
sbb
fbld
enter
lods
andb
pop
rolb
inc
loope
sarb
mov
dec
mov
sbb
lods
aam
mov
popa
mov
inc
dec
dec
ret
inc
xorl
adc
mov
add
subb
and
xor
adc
and
sub
in
insb
add
and
mov
adc
or
sub
and
and
add
bound
and
in
stos
xorl
cmpsl
xor
popa
mov
in
or
mov
push
lods
xchg
add
test
ret
mov
push
sbb
das
push
movsb
jo
inc
dec
inc
xorl
dec
lods
dec
push
sub
fwait
inc
push
pop
push
and
xorb
in
add
push
scas
push
es
sub
adc
mov
popa
add
inc
jb
popa
out
jno
out
pop
andl
xor
xor
or
or
jb
or
dec
cs
dec
jnp
adc
loopne
inc
xor
inc
and
dec
loope
loop
dec
jno
jo
xchg
add
dec
or
sar
or
add
sbb
sbb
enter
mov
int3
cmpsl
adc
jge
adc
test
mov
test
adc
and
or
inc
cmp
and
enter
or
fadds
push
cmp
mov
imul
or
or
in
sub
test
and
movsb
fdivr
fwait
dec
or
jns
and
add
sub
scas
jns
push
mov
orb
out
or
lds
push
mov
ret
es
cmc
je
loop
je
roll
xor
in
out
push
mov
hlt
add
jae
gs
mov
mov
pop
pop
dec
push
inc
sbb
mov
ret
push
and
and
dec
dec
sbb
movsb
sub
iret
push
cmp
nop
lret
sbbb
add
xor
sub
gs
sub
and
sbb
push
in
sbb
sbb
nop
lret
adcb
inc
add
or
in
leave
in
inc
inc
or
and
push
or
add
push
ja
jns
add
sbb
cld
cld
sbb
cld
pop
xchg
push
mov
sbb
dec
ds
cld
lock
subb
test
inc
repnz
lock
jae
jb
cld
pop
nop
sbbl
fcompl
push
fstl
sbb
aam
mov
je
sbb
ds
xor
xacquire
imul
jo
dec
jae
rorb
dec
mov
or
cld
sbb
mov
sbb
movsb
cld
movsb
and
ret
cld
in
nop
pop
gs
cwtl
and
xor
loop
jl
sbb
mov
sbb
je
push
or
cld
sbb
test
aaa
and
test
addb
jl
mov
mov
cld
mov
faddl
xchg
push
inc
repnz
mov
imul
out
or
sbb
pop
add
fsubl
jo
push
nop
fs
pusha
cld
xchg
push
push
dec
pusha
sbb
stc
test
test
into
push
cmc
test
sahf
pop
push
mov
ja
icebp
popf
adc
lret
aad
data16
xor
shll
test
dec
in
popa
mov
incb
xchg
xor
xchg
xchg
or
sub
sub
pop
fcompl
pop
dec
repnz
push
or
subb
nop
pop
mov
mov
adc
cmp
push
and
and
sub
dec
jo
mov
add
or
aad
xacquire
emms
or
jne
insl
cmp
leave
xor
insl
dec
fisubl
lret
aam
jmp
inc
fadds
scas
push
pop
in
xlat
jae
shrl
imul
cmc
xor
jmp
mov
pop
shll
jmp
adc
nopl
mov
mov
or
ret
in
add
lea
mov
inc
push
gs
xchg
ss
mov
test
jns
flds
xchg
xchg
shrb
add
push
movsl
rcll
fcmovnu
stc
es
inc
outsl
mov
hlt
or
jl
push
aam
sbb
sbb
dec
ss
fistps
pop
hlt
sti
mov
je
sti
sbb
xchg
or
je
add
leave
call
sti
movsl
cmp
mov
loopne
cmp
fcoml
and
outsl
stos
sbb
jno
in
repnz
mov
nop
pop
add
push
enter
stc
push
in
les
sbb
mov
cmp
mov
clts
in
mov
mov
mov
and
mov
mov
popf
or
pinsrw
mov
add
add
xorb
movsb
xor
inc
aas
jp
push
xor
ret
cmp
mov
push
xchg
rcr
outsb
lcall
call
dec
stc
push
xchg
orl
outsb
call
mov
add
fistpl
or
add
outsl
xlat
les
cmp
out
jo
add
cmp
jb
outsl
out
mov
std
outsl
xchg
jo
cmc
outsl
in
add
and
loopne
mov
fsubrl
leave
and
orl
outsl
test
add
dec
loopne
sub
inc
adc
sub
dec
cmp
sub
adc
add
sti
gs
push
add
lret
gs
adc
pop
push
shlb
gs
add
xor
push
add
das
pusha
push
add
sub
das
das
daa
and
adc
sub
cmp
xchg
sbb
pop
leave
pop
les
or
add
xorl
jmp
cs
xor
test
fadd
pop
sub
popa
das
fucomp
push
cmp
cmp
jle
lea
mov
push
and
push
cmp
addr16
xchg
ret
sub
fwait
mov
dec
rcrb
in
pop
sub
out
lret
push
inc
or
add
ffreep
mov
not
and
daa
mov
and
mov
mov
dec
test
leave
in
dec
mov
push
dec
cmpl
or
mov
or
pop
cmpb
mov
enter
adc
sbb
xor
and
mov
insb
ret
repnz
sub
sbb
mov
cmp
cmp
aam
jo
mov
insb
pop
orb
dec
push
int
idivb
add
push
in
cwtl
pop
ret
aas
inc
sbbb
test
scas
push
int
fisttpl
pop
mov
cmpsb
pop
les
dec
xchg
fistl
mov
inc
pop
rcll
pop
stc
pop
cmpsl
sbb
jle
and
or
or
sbb
xlat
mov
cmpb
xchg
nop
ret
bound
pusha
sbb
add
rcl
and
mov
mov
xor
mov
push
add
nop
enter
cmpl
fcomps
mov
xchg
xor
lret
push
hlt
and
xchg
cmp
adc
into
xor
nop
cs
or
and
sub
daa
andl
inc
add
enter
loop
adc
shl
jae
pop
enter
fsubr
cmp
movsb
out
or
mov
jl
and
std
and
repnz
xchg
call
and
nop
inc
mov
xchg
or
orb
xrelease
fldl
mov
and
dec
leave
push
xorb
popa
fucomi
push
add
pop
mov
dec
push
mov
sbb
adc
mov
add
leave
clc
repz
fbstp
pop
iret
cli
cmpsl
leave
adc
int3
or
jno
sbb
xor
test
arpl
adc
in
lods
dec
call
mov
sub
bound
xchg
test
loop
test
ret
mov
ret
dec
ret
inc
loope
xor
test
fsubl
les
dec
cs
ret
in
loopne
adc
sbb
addr16
fdivs
bound
sbb
les
or
js
add
mov
mov
and
or
add
leave
sbbl
cs
mov
add
xchg
sub
ret
sbb
add
cmp
out
jb
sub
sbb
dec
push
cltd
add
adc
test
rcrb
ljmp
add
mov
test
adc
adc
sub
xchg
test
sbb
or
sub
stos
loop
adc
mov
test
add
add
fcomp
aam
sub
sbb
outsb
jno
jmp
loop
out
in
pop
pop
jmp
xchg
rolb
cwtl
dec
lds
dec
cmpsb
push
xor
sbb
test
pop
xchg
adc
xchg
pop
leave
push
sub
xor
in
pop
adc
mov
mov
add
adc
sub
sub
inc
cmp
orl
in
xchg
sbbl
xchg
pop
in
and
pop
jnp
push
inc
mov
scas
pop
mov
movsb
and
xor
push
mov
inc
sub
push
xchg
inc
shrl
shlb
pop
xorl
push
imul
ret
pop
and
mov
lods
push
push
popa
push
inc
lahf
pop
fists
and
and
inc
loope
insb
add
pop
sub
jo
add
adc
aam
in
lea
dec
popf
pop
or
hlt
push
cmp
sub
std
pop
mov
pushf
ret
push
sbb
or
xor
or
inc
aaa
and
adc
adc
outsl
sub
ret
dec
cmpsb
push
pop
ficomps
outsl
test
xor
pop
or
int
mov
pop
mov
xchg
add
ficomps
and
leave
insb
inc
sub
xor
mov
test
lock
cmp
movsl
or
mov
jl
dec
push
in
xorb
dec
imul
sub
movsb
imul
sbb
loope
sbb
mov
leave
loope
and
sub
sub
or
xor
jb
js
js
pop
push
in
inc
dec
or
add
inc
sub
cmp
lods
adc
xchg
inc
mov
mov
xchg
sbb
jb
out
fistps
stos
push
sub
jle
inc
add
jo
inc
pop
adc
and
or
or
dec
or
inc
or
loope
xchg
adc
lods
push
or
imul
jb
jecxz
dec
in
enter
pop
or
repnz
mov
loopne
pop
je
add
xor
cld
mov
mov
cld
dec
mov
fistps
add
or
sbb
inc
jmp
sbb
mov
inc
movsl
mov
mov
nop
outsl
inc
mov
lods
lods
dec
cmp
add
fdivr
add
test
movsb
mov
mov
pop
jb
jmp
dec
insb
fnstenv
xor
xchg
inc
mov
push
mov
js
in
and
je
es
insb
cmp
jo
add
sbb
repz
pusha
pop
dec
push
orl
sbb
call
movsb
mov
dec
in
and
decl
inc
lret
sbbb
inc
add
nop
cmp
cmp
repnz
cs
inc
add
xor
pop
push
in
sub
and
nop
lret
andb
push
les
fwait
add
loope
sbb
xor
enter
adc
or
add
sub
xchg
dec
sub
sub
dec
push
in
add
or
cs
sbb
xor
xchg
and
insb
mov
adc
push
and
push
mov
push
lret
and
xchg
sbb
movsl
ret
ret
int3
loopne
arpl
pop
imul
sub
ljmp
sti
sbb
mov
adc
mov
pop
test
enter
scas
insl
lods
aad
gs
ds
inc
movsb
movsb
add
pushf
in
and
nop
out
dec
or
in
cs
jb
nop
xchg
xchg
loopne
dec
push
imul
loop,pn
sti
test
orb
mov
inc
addb
jl
jae
aaa
and
and
and
jo
sbb
add
sbb
pop
cmp
cli
push
fs
addr16
lods
pusha
pusha
jecxz
push
or
pop
pop
mov
push
mov
push
push
dec
dec
in
cmpb
cmp
push
push
inc
xor
xchg
addr16
inc
sbb
cmp
add
and
push
xor
pusha
inc
mov
push
sub
cmpb
sub
and
ficoms
and
or
sbb
xchg
sbb
xor
add
cwtl
pop
pop
nop
andb
lcall
es
sbb
sti
sbb
mov
xchg
add
dec
add
out
cli
sbbl
mov
cli
sbb
cli
ja
mov
sbb
fcoml
sbb
cli
add
dec
call
and
push
xchg
loopne
dec
faddl
dec
fsubs
lret
cwtl
adc
adc
out
xchg
int
sar
rclb
or
sbb
nop
aam
roll
or
sbb
cli
mov
add
cli
sbb
mov
or
sbb
mov
fstps
bnd
xor
lods
test
add
sbb
filds
mov
aaa
and
arpl
push
xchg
xchg
inc
add
nop
mov
mov
cli
lcall
int3
sbbb
inc
addb
enter
cmp
xchg
xchg
mov
cld
push
add
and
dec
sub
xor
mov
pushf
nopl
mov
jae
inc
adc
or
mov
nop
and
mov
repz
sub
push
ljmp
movb
enter
dec
mov
outsb
clc
cmp
xor
jecxz
lock
jns
jno
lock
int3
sub
lahf
jmp
cmp
push
loopne
mov
cwtl
sub
or
rcll
aaa
jne
sub
or
ror
enter
mov
or
fsubs
cmpsl
inc
jecxz
rol
adc
inc
sub
enter
shrb
inc
lcall
mov
adc
mov
pop
rcll
lock
adc
dec
dec
jecxz
sarb
fadds
and
mov
ret
jo
fstp
pop
test
xchg
jecxz
call
daa
sbb
sub
loopne
pop
ret
test
pop
adc
es
jecxz
daa
mov
pop
test
mov
inc
and
movsb
push
or
xchg
mov
hlt
push
fbld
push
or
loop
sub
dec
xchg
popa
or
loopne
mov
or
loopne
shrb
pop
test
push
xchg
mov
in
lock
push
and
cld
xchg
push
lods
inc
fcoms
sub
xor
loope
mov
push
cltd
jecxz
or
stos
adc
push
cltd
or
adc
mov
cltd
mov
add
test
int3
in
or
test
sbbl
test
cmpsl
arpl
rorl
imul
test
xchg
enter
sub
loopne
dec
addr16
sbb
sub
xorb
mov
loopne
xchg
mov
mov
jno
loopne
xchg
in
push
xchg
sbb
push
cmc
or
shll
sbb
inc
xor
leave
insb
jnp
adc
lods
and
add
cmc
push
xchg
dec
pop
mov
push
sbb
bts
push
xor
in
sti
adc
xchg
roll
sub
sub
cwtl
xor
pop
push
sub
lods
jecxz
inc
jp
test
jg
xor
bound
and
sub
loope
xor
mov
xor
inc
pop
dec
rcrl
jle
inc
jecxz
sbb
in
add
or
adc
inc
dec
cmp
stc
shr
push
add
les
dec
xchg
lods
and
push
test
add
and
xchg
mov
ja
fimull
inc
mov
jne
dec
pusha
dec
clc
jne
adc
and
and
dec
xchg
enter
pop
xor
andb
inc
and
jbe
xchg
mov
add
insl
mov
cmp
pop
push
rdtsc
lods
movsb
and
sub
inc
pop
fcmovne
leave
in
push
je
xchg
xchg
xchg
xchg
js
orb
nop
xchg
cwtl
lahf
xchg
xchg
xchg
pushf
mov
sahf
mov
lcall
out
lahf
filds
push
pushw
xor
pop
add
pop
pop
decl
pop
ret
add
dec
inc
inc
add
mov
mov
fdivr
outsb
inc
arpl
mov
mov
decl
js
adc
add
inc
add
inc
mov
xchg
mov
xchg
push
mov
les
dec
pop
pop
cmp
xchg
cmp
pop
int3
enter
and
dec
add
ud1
jns
enter
iret
add
int3
adc
dec
pop
fadds
sarb
leave
repz
xor
aam
in
mov
sahf
xchg
cmp
adc
aam
or
push
xchg
pop
int3
shlb
inc
dec
insl
ret
add
jns
mov
mov
xor
lret
sbb
inc
aaa
or
lods
push
jecxz
aad
loopne
ror
xchg
add
cli
dec
insb
leave
or
dec
adc
inc
loopne
leave
mov
outsl
and
ret
or
mov
pusha
hlt
dec
mov
mov
sub
cmc
pushl
xlat
movsb
and
insb
imul
fidivs
pop
imul
aaa
jne
xor
pop
sub
es
les
sub
insb
push
lods
inc
push
dec
xchg
mov
fimuls
leave
cld
pop
add
mov
cwtl
enter
push
or
xor
inc
pop
pop
or
jl
add
sbb
or
push
push
pusha
and
push
orb
int
aaa
cmp
enter
sbb
pop
js
aad
pop
mov
jp
arpl
int3
cmp
int3
cmovle
out
mov
xchg
dec
in
mov
xor
sbb
inc
inc
pop
inc
jle
int3
push
aaa
sbb
cmp
add
std
rcl
enter
enter
inc
les
xor
xor
xchg
xor
fsubs
adc
lea
push
xchg
pop
gs
enter
aad
rol
xchg
push
jb
cmp
and
or
cwtl
mov
inc
nopl
push
packsswb
adc
or
fcomi
hlt
sub
sub
pop
stos
sbb
stos
jne
inc
pop
rcll
sti
pop
adc
xor
pop
aas
mov
pop
nop
mov
and
sbb
mov
std
xchg
out
xchg
loope
aam
lret
fistpl
mov
pop
cmovnp
add
aam
or
push
pop
adc
sbb
dec
rcrb
nop
push
loop
nop
adc
dec
mov
xchg
jo
lret
js
lock
xchg
test
mov
or
je
pop
xchg
shlb
lcall
push
xchg
lahf
mov
stc
fcomps
add
add
andb
mov
add
cmp
or
mov
xor
arpl
sbb
pusha
jge
add
fists
xor
add
mov
loopne
mov
faddl
sbb
ja
push
adc
inc
aas
or
inc
xor
mov
push
mov
cmp
sub
add
lods
sub
ja
movmskps
inc
pop
xchg
sbb
in
cmp
lea
mov
ss
xor
sub
push
fcoml
jl
add
andb
fdivs
mov
xor
js
xchg
xchg
add
push
fldenv
xor
mov
cwtl
dec
sub
push
or
scas
pop
jp
push
or
and
test
jo
pop
mov
mov
not
rolb
xor
and
aam
movsl
sub
cld
sub
cmpsl
inc
adc
dec
jge
and
jo
movsb
cmp
sub
stos
add
shlb
rorb
inc
mov
gs
mov
sarb
imul
out
in
rcrb
loop
loop
add
xchg
pop
adc
mov
fimuls
loop
adc
das
shr
aam
cs
or
push
inc
sahf
or
jmp
pop
push
push
mov
mov
insb
pushf
and
and
fbstp
and
gs
cmp
test
xor
push
call
add
mov
pop
shrb
or
add
sti
filds
stos
test
mov
leave
and
and
push
push
or
cmp
cmp
loop
xchg
pop
gs
lret
dec
push
dec
xor
and
inc
pusha
cmp
les
scas
or
in
inc
jb
inc
lods
dec
fbstp
and
mov
in
in
or
mov
sbb
add
xchg
dec
sub
sub
in
and
xor
xchg
xchg
pop
xor
leave
xchg
dec
pop
popf
in
loop
les
sbb
pop
loopne
repnz
jno
je
cs
xchg
fsubr
hlt
dec
push
mov
inc
sub
cld
sbb
mov
and
xchg
mov
jne
push
xchg
push
xchg
subb
mov
mov
lret
mov
or
gs
rcl
aam
and
add
mov
out
dec
fbstp
rorl
and
fistpll
xchg
lret
movsb
add
ret
test
mov
add
loop
add
and
push
pop
xor
sub
push
stos
push
call
xchg
dec
sub
mov
mov
and
push
loope
adc
pop
xor
inc
jb
inc
loopne
leave
inc
add
mov
sbb
pusha
and
xor
pop
cs
pop
pop
dec
push
sbb
dec
xchg
sbb
loopne
inc
mov
fwait
insb
xor
or
xor
inc
cs
add
sub
and
sub
lock
inc
add
cmp
add
pop
shlb
cmp
loopne,pn
jb
xchg
aad
and
jecxz
loope
cmpsb
add
or
sub
push
fs
cmp
test
rolb
pop
mov
or
ret
add
xor
test
jecxz
loope
les
in
and
enter
sbbb
bound
mov
nop
ret
pusha
dec
mov
loopne
or
mov
adc
orb
cmp
outsl
jecxz
and
xchg
pop
push
in
xchg
cwtl
cwtl
pushf
inc
xchg
lret
mov
scas
adc
pop
mov
leave
xchg
or
sub
jne
xor
mov
pop
popa
enter
aam
sbb
fs
cs
fs
enter
mov
daa
loop
dec
or
outsb
sbb
push
add
or
and
xchg
dec
xchg
test
xor
xor
lret
sbbb
cwtl
adc
ja
or
and
sub
rorl
adcl
sbbb
loop
add
stc
mov
add
cmc
ret
xchg
pop
add
lea
lods
add
ret
fsubs
xchg
jl
aam
xor
mov
jecxz
int3
push
mov
pop
cmp
and
dec
adc
sub
adcl
rcrl
mov
mov
dec
inc
add
fidivrl
inc
add
add
pop
jb
popa
lea
dec
mov
mov
bound
lea
mov
and
jb
mov
sbb
add
xchg
sbb
cmp
add
repnz
fs
push
mov
adc
sbb
adc
xchg
and
or
sbb
add
jb
xchg
dec
je
js
sbbb
jl
add
dec
xchg
add
rclb
sbb
add
xor
and
sub
hlt
push
xor
rorl
leave
out
aaa
xchg
adc
das
sub
roll
enter
rorl
mov
cmp
dec
xor
cmp
clts
in
or
or
xor
add
inc
xchg
loop
mov
xchg
add
xchg
insb
add
leave
inc
jmp
mov
adcb
or
sti
sti
in
lret
sti
sti
or
insl
and
push
or
sbb
in
sbb
sbb
mov
lea
aaa
push
add
xchg
lea
nop
dec
cwtl
xchg
xchg
nop
push
in
sbb
nop
mov
mov
and
jb
mov
push
xchg
mov
ss
pop
stos
lods
adc
add
dec
add
movsl
nop
mov
mov
or
dec
push
leave
and
dec
out
mov
or
leave
nop
pushf
or
jb
push
in
in
insb
xchg
and
and
in
jecxz
xchg
add
test
mov
inc
loopne
and
and
mov
mov
add
shll
add
xchg
adc
negl
pushl
loopne
xchg
in
rcll
fwait
cmp
mov
pop
add
fwait
loope
nop
sbb
or
sub
dec
pop
adc
sbbb
icebp
sbb
clts
in
aam
rcl
das
int3
adc
and
inc
add
test
loope
push
popf
adc
cli
test
inc
add
dec
cs
add
inc
jne
sub
nop
inc
dec
in
inc
pop
add
add
add
mov
or
aaa
lods
add
mov
test
sub
sbb
push
or
js
js
je
in
and
in
and
shrl
add
push
push
outsl
leave
add
cli
mov
shlb
rcrl
cmp
aaa
pop
xchg
push
in
push
inc
push
or
push
push
or
nop
outsl
dec
jecxz
dec
inc
sbb
inc
inc
ds
rorb
jnp
cmp
cmp
mov
push
or
mov
xor
popa
sub
enter
sub
nop
push
add
dec
and
andl
add
and
xchg
sbb
scas
push
in
adc
adc
iret
or
inc
xchg
and
or
cmpb
stc
add
adc
adc
arpl
loopne
pusha
ja
xchg
xorl
xor
sub
sbb
lock
fstl
in
stc
sbb
dec
push
sbb
stc
sbb
stc
nop
sbb
add
push
int3
add
push
fmuls
sbb
dec
jbe
aam
aam
shlb
dec
in
dec
sarb
pushf
movsb
repnz
insb
enter
cmp
lret
loopne
jb
sbb
xchg
jl
add
push
stc
stc
faddl
add
sub
pusha
cmpsl
lods
add
sbb
rcrb
lods
std
test
dec
movsb
nop
pop
push
sbb
jecxz
or
inc
mov
push
ret
and
xchg
pop
push
in
xchg
nop
nop
mov
mov
jl
mov
lds
jne
adc
call
jl
sbb
lcall
pop
mov
push
in
jo
insb
insb
test
xor
test
in
adc
inc
ds
ss
iret
push
xchg
pop
lret
lods
inc
fisubrl
push
add
int
cs
int
dec
dec
insb
dec
dec
push
repnz
inc
dec
xchg
pop
xor
mov
pop
pop
test
bound
stc
inc
inc
nop
lret
sbbb
add
cmp
inc
mov
pop
mov
ret
imul
sbb
sbb
and
dec
ret
in
sbb
sub
imul
xor
test
mov
dec
pushf
outsb
sbb
shll
adc
mov
mov
les
mov
mov
xchg
push
movsb
rcrb
add
leave
lret
sbbb
clc
shrl
clc
sbb
in
ds
enter
or
push
lock
jge
cmp
or
sbb
sub
xorl
mov
xchg
sbb
mov
lock
lock
pop
enter
in
mov
int
inc
mov
push
call
mov
fnstsw
push
test
inc
or
jno
faddl
push
sub
xor
je
xchg
and
in
popa
mov
lret
lods
pop
aam
or
sbb
rorb
enter
shr
add
push
fdivl
xchg
dec
add
rol
pusha
andb
shlb
add
mov
enter
mov
and
add
xchg
nop
and
mov
dec
enter
lods
sub
movsb
test
je
addb
xchg
sub
adc
pushf
mov
or
cwtl
xlat
and
sbb
out
and
push
sub
xor
dec
mov
adc
and
dec
mov
mov
addb
xchg
addb
xchg
sub
call
jl
and
es
nop
je
xchg
xchg
push
js
jo
xchg
sub
sbbb
and
and
push
inc
xchg
sub
cs
sbb
pop
mov
and
mov
ret
adc
and
dec
push
add
dec
inc
xor
dec
dec
dec
subb
xor
push
sub
fs
lods
leave
nop
pop
es
cmp
dec
inc
dec
in
mov
cmp
sbb
xor
add
sub
andb
xor
xchg
shlb
add
and
ret
or
and
mov
add
and
mov
imul
movsb
push
daa
and
fs
cltd
adc
inc
nop
jne
cmpl
dec
fiadds
cld
add
iret
dec
mov
pop
enter
dec
add
mov
pop
push
gs
or
mov
mov
ss
xor
lods
dec
or
pushf
dec
adc
and
xchg
cmp
mov
or
inc
lea
lret
mov
cmp
outsb
mov
testb
or
ucomiss
outsl
pop
iret
cmpl
xor
and
mov
sarl
js
mov
xor
mov
xor
mov
and
add
pop
or
outsl
cmp
das
in
shlb
jl
cmp
jg
lea
sub
xor
filds
filds
stc
add
add
add
push
jp
inc
inc
adc
inc
push
jge
fisubrs
or
push
call
sbb
insb
adc
xor
adc
mov
stos
jge
addr16
je
xor
test
xchg
adc
loopne
or
addl
inc
arpl
je
out
mov
or
push
insb
dec
or
ret
or
testb
xchg
fisubl
jl
xchg
dec
outsb
or
or
jecxz
in
mov
insb
push
cs
cmp
sbb
xchg
sub
frstor
mov
arpl
inc
dec
mov
push
mov
mov
popa
and
sbb
pop
les
aad
jg
fists
pusha
and
daa
sbb
in
jo
daa
fbstp
sbb
shl
xor
xor
stos
ret
js
xor
mov
movsl
xchg
nop
cmp
loopne
pop
sub
sbb
lret
and
adc
adc
jo
or
add
cs
arpl
out
inc
pop
mov
inc
dec
sbb
arpl
inc
jns
mov
and
aam
cmp
mov
push
in
xor
lods
adcl
sub
mov
arpl
pop
pop
mov
mov
xchg
lret
loopne
jo
pusha
adc
bound
xlat
inc
dec
push
int3
in
add
inc
adc
add
test
dec
jb
js
mov
cmp
add
mov
push
cmp
pop
insb
mov
adc
or
mov
loopne
jo
xchg
push
roll
cld
cmpsl
xchg
incb
push
ljmp
repnz
in
cmpl
js
jl
test
dec
es
stos
sbb
sbb
dec
pusha
mov
adcl
fwait
xorl
or
shlb
nop
dec
loop
dec
roll
fwait
lahf
mov
xchg
sbb
jecxz
std
mov
push
shlb
in
xor
pop
mov
adc
jne
adc
mov
sub
sbb
das
in
or
xor
aad
add
and
add
leave
inc
pop
add
sub
in
sub
test
push
shlb
push
inc
lock
lods
lcall
sub
inc
fmull
jecxz
rolb
and
cmp
and
mov
jecxz
sub
fldl
inc
adc
rorl
or
push
inc
and
push
or
stos
and
and
sbb
mov
sub
push
jo
jnp
ljmp
mov
daa
cmp
int
lods
roll
cmp
test
mov
jl
decl
dec
loopne
and
imul
jo
push
nop
inc
push
je
jl
inc
push
cmp
cmp
mov
nop
inc
cwtl
pushf
mov
movsb
test
nop
inc
push
sbb
xchg
or
adc
dec
aaa
xor
movsl
or
and
cwtl
push
fnstsw
adc
aas
push
jb
ljmp
sub
push
xlat
pop
pop
cvtps2pd
adc
repnz
jne
fistpl
addl
clc
out
add
add
add
mov
out
pop
mov
popa
push
mov
ljmp
jne
ja
xor
gs
and
push
cmp
adc
add
popa
cmp
adc
arpl
scas
fcos
fists
imul
jp
js
js
jbe
jns
sub
insb
imul
jns
add
push
jns
enter
push
jl
out
in
fsubs
add
fsubrl
pop
cwtl
lea
sub
insb
jp
xlat
mov
insl
repz
divl
push
sbb
jbe
jl
mov
lock
js
clc
cmp
insl
ds
movsb
bound
jo
inc
jle
cmp
mov
lock
inc
xchg
or
mov
cmp
xlat
insb
dec
cwtl
lods
xchg
pop
cld
add
lahf
loopne
inc
es
mov
subb
mov
inc
int
cmp
and
mov
jl,pt
adc
outsb
inc
rclb
cmovae
fists
sbb
mov
fbstp
dec
and
sahf
sbb
mov
fiaddl
sarl
fildll
addr16
test
jle
testl
or
jg
pop
and
inc
outsl
sub
imul
outsb
xchg
stc
cmpsb
es
aam
rol
dec
leave
mov
push
cs
aad
scas
dec
and
adc
ds
les
sub
ds
clc
sbb
jle
adc
inc
iret
inc
icebp
fwait
inc
ds
and
inc
push
sbb
les
das
clc
dec
leave
out
mov
adc
lahf
insb
aas
movsb
fildll
sub
es
adc
add
dec
scas
loope
inc
lds
sub
and
jae
mov
add
xor
jae
push
xor
rolb
pop
cmp
push
sub
mov
adc
sub
cmp
xlat
adc
ja
cmpsb
cmp
ret
jbe,pt
mov
aas
repnz
pop
shlb
mov
imul
cmc
lods
inc
or
push
mov
push
popa
dec
adc
dec
mov
jo
std
cmp
call
cmp
adc
mov
push
enter
or
flds
int
and
pop
inc
sub
jl
loopne
and
popa
xchg
into
sub
jmp
cs
in
dec
add
clc
inc
jns
add
mov
mov
or
jl
and
rorb
mov
mov
xor
push
inc
call
neg
and
in
add
xor
xchg
xchg
xchg
fnsave
sbb
mov
push
rcll
pusha
sub
enter
popa
xor
xchg
dec
pop
push
ret
andl
clc
call
cmp
add
lcall
cs
mov
and
fs
aam
repz
mov
nop
dec
push
mov
mov
inc
cmp
add
mov
inc
inc
aaa
lret
and
loope
push
or
or
cmpsb
into
insl
xor
cmove
adcl
stc
jg
in
iret
mov
or
push
call
mov
and
pop
push
or
xchg
xchg
push
xor
or
pop
jae
aaa
lcall
jbe
fistpl
inc
xor
in
dec
in
nop
sub
pop
insb
clc
stc
dec
xchg
and
pushf
or
mov
xchg
and
loopne
dec
and
loopne
insl
mov
sub
cmp
mov
stc
cmp
out
push
mov
sub
sbb
aaa
adc
mov
data16
push
aas
mov
nop
or
mov
or
in
sti
or
mov
xchg
lret
and
sub
push
cmp
xlat
imul
add
inc
sbbb
sbb
idiv
sbb
rcll
mov
mov
adc
mov
mull
jb
cld
pop
jge
fs
test
xor
mov
popf
jecxz
call
cmp
sbb
dec
lock
xor
sub
rcrb
lds
and
cmp
mov
push
test
add
add
jmp
pop
movsb
shlb
pop
pop
out
repnz
sbb
or
ja
cmpsl
stc
sub
nop
pop
jl
jnp
test
sbb
loop
inc
jecxz
daa
jns
pusha
jns
push
adc
adc
out
cmp
xor
hlt
pushf
mov
xchg
xchg
mov
sbb
cmp
and
push
and
and
inc
xor
xor
pop
fimuls
daa
pop
fadd
fsts
test
cmp
xchg
out
push
xor
out
repnz
jae
jmp
sbb
mov
fstl
jae
cmpl
add
addr16
adc
xor
cwtl
xchg
out
stc
in
clc
call
or
int
faddl
icebp
or
add
sub
sub
add
add
mov
out
sub
cmp
jle
sub
into
notb
adc
xor
or
or
and
mov
mov
call
sbb
into
insb
sti
out
pusha
ds
pop
test
add
outsl
hlt
push
xchg
mov
and
pop
std
cld
pop
es
mov
and
adc
inc
fcoms
or
or
jl
fidivrs
mov
movl
decb
or
sbb
mov
pop
jno
xor
dec
adc
mov
in
lock
filds
sbb
sbb
or
cltd
movsl
sbb
push
or
sarb
and
mov
mov
and
hlt
fimull
popa
cmc
cltd
mov
bound
clc
mov
in
scas
mov
movsb
in
mov
push
xchg
mov
out
cltd
imul
adc
mov
das
mov
cs
cmp
inc
xchg
je
repnz
adc
and
int
xor
mov
fs
lret
test
roll
sub
mov
lret
imul
aam
enter
inc
sbb
cwtl
or
out
lret
push
push
inc
out
sbb
mov
adc
xor
add
idiv
mov
adc
adc
jge
imul
repnz
pop
xlat
xchg
sbb
fisttpll
sbb
dec
pop
jno
cld
repz
adc
adc
ret
pop
dec
jo
test
pop
and
iret
out
adc
inc
adc
and
xor
pop
pavgb
xchg
ret
mov
in
or
pop
movb
mov
or
fistl
push
pop
lds
add
pop
cmpsb
ret
add
add
adc
cmp
sub
adc
adc
add
aas
and
and
or
inc
cs
enter
lret
adc
test
aam
xchg
sub
and
insl
mov
inc
jb
pop
push
leave
js
mov
inc
jb
nop
cwtl
xchg
pop
and
mov
jb
shl
jns
pop
and
add
xchg
mov
and
mov
cs
mov
pusha
andb
loopne
adc
mov
add
jb
pop
jo
pop
and
jmp
add
xchg
pop
leave
inc
shlb
and
pop
leave
inc
repnz
add
daa
xchg
push
adc
shlb
xchg
orb
or
or
sub
sbb
and
scas
shlb
sbb
out
lret
int3
enter
enter
fcomp
gs
lock
fxch
loopne
jecxz
in
dec
cmp
push
jne
jo
mov
and
shrb
in
add
and
and
jge
incl
add
rcrb
mov
push
push
sub
sbb
fadds
mov
xchg
xchg
mov
push
lock
cmp
jnp
test
xchg
insb
loope
in
inc
or
ja
pop
es
js
inc
addb
cmp
repz
cwtl
mov
iret
repz
out
cmp
loopne
lock
add
out
sahf
or
sbb
sub
jns
out
cmp
push
pop
out
sahf
out
push
out
sahf
mov
xor
int3
add
gs
xchg
mov
mov
inc
sahf
mov
sub
sbbl
or
fstps
pop
shlb
and
xchg
sarb
mov
cmp
dec
int3
xchg
jnp
dec
loop
daa
or
adc
cmpsl
ss
or
repz
sti
add
inc
add
and
dec
pop
iret
repz
push
ror
repz
loopne
push
repz
xor
call
add
adc
clc
or
mov
push
push
inc
inc
into
push
pushf
sbb
mov
mov
in
sub
pusha
stos
adc
insb
push
sub
cmp
adc
add
adc
dec
orb
imul
jg
and
push
adc
jns
or
push
sbb
sub
add
mov
fdivrl
pop
xor
pop
rolb
cmp
add
push
call
adc
jnp
mov
add
aas
lahf
cmpsb
imul
jg
clc
cmpsb
lret
mov
cs
push
and
mov
sahf
cmpsb
push
or
push
add
out
sahf
out
add
jns
adc
adc
adc
testb
jns
cld
push
cmp
sahf
sbb
push
sbb
push
adc
cmp
or
lods
cmp
repz
rolb
adc
iret
repz
sbb
daa
pop
sub
jns
out
inc
push
push
sbb
fs
jl
fistps
nop
push
repz
jmp
mov
int3
iret
repz
add
or
cmp
mov
cmpsl
mov
add
iret
mov
cmpl
push
sbbb
xor
jns
out
dec
mov
jns
jl
xchg
mov
mov
int3
hlt
sbb
or
mov
mov
add
add
jbe
outsb
jg
mov
sub
cmp
pop
xor
out
push
pop
bound
fisttpll
cmp
imul
div
fcomps
imul
ret
or
insb
rcr
mov
jb
loopne
cmp
add
adc
pop
cli
cli
xchg
shl
cli
in
jecxz
jbe
lock
sub
push
std
cmc
out
push
out
in
lcall
xchg
push
cmc
cmc
rorl
lahf
pusha
cli
jmp
mov
sahf
mov
cmp
lcall
xchg
aam
cmc
mov
loopne
daa
cli
or
aam
out
aad
pmaxub
cmpsb
pmulhuw
xchg
push
lock
push
cmc
jle
pop
mov
scas
inc
jo
cmp
enter
inc
mov
jmp
jg
aad
add
mov
hlt
aad
mov
add
push
jl
loope
jns
mov
or
lahf
sahf
push
cli
xorb
jg
pop
in
addr16
mov
adc
mov
push
movsl
sub
mov
mov
pop
cmp
dec
outsb
dec
mov
mov
pop
movsl
push
cmovne
mov
and
xlat
hlt
sbb
cld
push
mov
subb
fimuls
jmp
pushf
jg
push
mov
out
call
rolb
mov
jmp
push
cmpxchg
and
imul
ljmp
dec
fcomps
aam
push
mov
inc
xor
push
push
jl
into
hlt
imul
push
imul
imul
int
inc
push
jl
shlb
fwait
adc
cwtl
sti
cwtl
adc
data16
fnstcw
sti
cltd
sub
mov
push
mov
mov
sti
add
push
push
imul
push
mov
mov
xor
movq
xchg
sahf
push
mov
jl
push
neg
scas
and
cs
mov
loopne
pusha
push
lods
fdivrs
lds
sub
nop
push
fs
in
ds
add
cli
scas
fmulp
push
dec
mov
dec
hlt
push
jge
push
lock
loopne
cmpsl
sub
mov
sbbb
jmp
push
inc
imul
jo
ret
sbb
jo
push
cld
add
pop
into
sarl
push
pop
sahf
mov
jo
mov
fcompl
mov
cmp
add
push
clc
add
cmpsl
ds
cmp
cltd
xor
pop
cmpsl
sub
nop
push
out
test
mov
rorb
mov
push
push
cs
mov
loop
scas
fldcw
into
push
xor
xchg
sub
mov
push
lahf
push
jl
mov
mov
ret
addr16
out
subb
push
fidivl
sahf
push
cmp
iret
hlt
frstor
mov
lahf
jge
orb
ror
push
mov
fldcw
push
jnp
outsb
dec
push
ja
cltd
scas
dec
popa
iret
leave
aas
push
roll
cmpsb
push
ss
jge
outsl
mov
inc
cmpb
push
pop
daa
movsb
ja
jo
hlt
push
cmc
negb
mov
cmpsl
and
imul
fistpll
cmp
iret
scas
push
das
dec
dec
scas
push
faddl
sahf
mov
cmp
push
test
push
arpl
pop
mov
dec
jno
out
pop
push
push
and
fsubp
imul
cmp
imul
cli
aam
loopne
cld
jns
cmpsl
stc
or
sbb
cmp
out
out
xor
pop
jns
out
pusha
push
push
mov
push
push
fiadds
add
js
adc
ds
imull
add
push
std
jle
or
jg
fcomps
inc
mov
sahf
loopne
out
nop
fcompl
lret
pop
push
and
inc
pop
xor
add
inc
add
outsl
inc
add
enter
add
in
jge
jae
pop
add
pop
add
push
jmp
or
jns
pop
addb
push
lsl
pop
hlt
mov
or
out
sbb
sub
cmp
jns
out
dec
clc
pusha
negl
testb
out
mov
shl
out
sahf
out
call
repz
adc
cmp
repz
jmp
ljmp
add
xchg
xor
andb
ret
aad
xor
cltd
adc
daa
dec
pop
push
out
popa
lods
inc
jp
mov
bound
inc
or
or
sarl
aam
or
or
push
xor
repz
inc
push
fs
cwtl
cmp
repz
mov
sahf
out
clc
add
sbb
xor
jns
out
pop
push
jno
movsb
mov
pop
fwait
adc
data16
mov
mov
cmp
pop
ret
in
inc
pop
adc
lret
outsl
jae
das
sbb
xchg
mov
popa
dec
pop
int
xchg
cmp
roll
stc
mov
cmp
sti
cld
std
incb
cmp
repz
test
push
lock
jg
rcll
outsl
hlt
mov
or
add
roll
sahf
out
sahf
push
push
mov
add
cmp
nop
and
pop
mov
fcoms
and
add
fwait
inc
sub
or
es
jb
push
popl
and
jle
adc
outsb
scas
add
gs
cmp
jl
inc
pop
push
mov
push
and
insb
dec
pop
xchg
xchg
lods
imul
or
push
xchg
ds
into
pop
and
cmp
xor
mov
and
jae
shll
add
enter
push
pop
add
pop
add
jae
mov
pop
or
repz
and
inc
popa
add
addb
jns
out
push
or
sbb
jo
out
xor
push
adc
push
mov
xchg
xchg
xchg
fildl
xchg
xchg
xchg
xchg
or
or
je
xchg
or
add
jnp
repz
movups
push
pop
das
repz
jl
sarb
ror
leave
or
mov
out
addb
jb
cmp
aas
pop
sbb
sahf
push
cmp
shl
in
jns
adc
in
in
mov
mov
in
in
lock
unpcklps
cmp
je
jb
cmp
enter
and
incl
mov
call
cwtl
jb
repnz
push
jl
daa
pop
pop
jno
aas
pop
ljmp
daa
daa
daa
mov
daa
daa
daa
clc
add
daa
daa
daa
daa
mov
daa
daa
daa
les
bound
daa
daa
daa
daa
movsb
add
daa
in
pop
sbb
daa
daa
daa
xchg
inc
jp
daa
daa
daa
daa
aam
push
daa
daa
daa
daa
mov
mov
daa
daa
daa
hlt
add
repnz
add
jbe
jb
jb
int3
pcmpgtd
jb
lods
push
xchg
jb
inc
in
or
jb
jb
pushf
arpl
jbe
jb
fcompl
aas
outsb
xchg
fucomi
in
mov
sub
stos
xchg
dec
cld
call
dec
cs
xchg
adc
in
dec
ret
in
in
mov
dec
cs
pop
sbb
jns
rorb
dec
imul
dec
dec
mov
stos
inc
out
in
adc
inc
dec
dec
es
lret
in
gs
in
test
pop
in
dec
dec
sbb
in
cmp
dec
dec
dec
mov
fadds
cli
iret
adc
ret
jae
ja
mov
and
mov
cmp
out
daa
daa
pop
pop
sbb
jnp
imul
daa
daa
sub
daa
daa
dec
notb
leave
add
pushf
pushf
pop
enter
scas
pushf
pushf
pushf
pushf
pop
xchg
enter
pop
pop
sahf
test
outsb
mov
fldt
das
mov
push
adc
call
leave
inc
xor
mov
and
shll
icebp
xchg
dec
and
leave
test
jmp
dec
and
stc
leave
inc
xor
movsl
xchg
dec
and
in
adc
inc
xor
mov
dec
and
and
xor
and
fnstsw
std
ret
dec
and
leave
mov
xor
and
xor
and
leave
fstpt
sti
and
leave
inc
cmpsl
out
xor
and
iret
xor
and
leave
inc
lahf
fists
xchg
dec
mov
cmp
or
push
pmaxub
adc
sahf
cmpsl
test
add
sub
rcll
pop
inc
jg
repnz
in
pop
add
dec
jns
cmpsb
and
pop
int3
sub
cmp
push
add
sbbl
lret
enter
jg
enter
incl
xor
xchg
mov
or
fnstenv
out
sbbb
jns
or
xor
and
imul
xor
outsl
jp
add
jbe
rclb
inc
xor
xchg
and
add
xchg
shr
or
mov
insb
ds
das
inc
lea
or
cmp
or
icebp
ja
jbe
sub
daa
pop
jo
and
push
mov
cmpsb
jmp
inc
or
or
add
imul
push
mov
jo
fistl
xor
shrb
outsl
lret
or
iret
inc
push
jae
dec
dec
add
scas
mov
fucomip
inc
push
pop
pushf
aaa
mov
insb
mov
repz
pop
aas
jg
jns
out
inc
jmp
shl
jg
mov
and
sbb
sbb
mov
movsl
cmpsl
sbb
outsb
pop
adc
sbb
jge
hlt
cmp
xchg
add
xor
or
sub
jae
fisubs
sub
xor
in
pop
sahf
xor
cmp
inc
mov
cmp
mov
in
adc
clc
sarl
test
push
sbb
jmp
mov
in
mov
inc
lcall
xchg
data16
sbb
outsb
inc
lcall
lods
xchg
les
call
or
mov
dec
mov
push
push
imul
sbb
and
lods
imul
hlt
xor
push
decb
sbb
jno
mov
mov
jg
push
pop
insl
xor
mov
cmpsl
mov
add
scas
jne
popa
icebp
sub
rol
push
notb
mov
xlat
lock
fwait
mov
popa
sub
mov
movsl
xchg
cmpsl
xor
mov
and
loope
sbb
pop
adc
sub
mov
adc
popf
in
insl
mov
lods
popf
xor
adc
mov
cmp
pusha
idivb
inc
lock
inc
inc
pop
imul
ror
or
xor
lock
adc
adc
mov
push
out
nop
fsubl
sub
mov
fidivs
inc
push
ja
pusha
das
fisubrl
sub
lea
mov
rcll
inc
inc
sar
das
int
or
dec
iret
mov
push
dec
jg
subl
stc
pop
mov
adc
add
ja
jne
inc
adc
sbb
jnp
or
fimull
pusha
jge
lods
mov
dec
dec
scas
cs
inc
sub
cmp
scas
jecxz
cmp
pushf
repnz
pop
fldenv
xchg
or
sbb
jecxz
and
inc
adc
add
mov
or
add
fsubrl
xor
push
daa
enter
iret
shr
punpckhwd
ret
xor
gs
leave
mov
lret
xchg
xor
xchg
in
push
jns
sub
jmp
push
sub
fildll
push
imul
and
or
rcr
loopne
mov
dec
lcall
adc
xchg
xor
or
es
gs
push
cwtl
test
adc
das
insl
pusha
call
adc
insl
popa
sbb
rclb
dec
data16
dec
gs
loope
cmpsb
jo
lds
inc
cmp
jmp
out
add
dec
and
pop
jmp
sbb
nop
and
inc
repz
xor
cmp
push
pusha
iret
repz
insb
js
nop
pushf
test
iret
repz
ror
in
ret
into
repz
add
xlat
mov
pop
outsl
imul
push
push
in
jecxz
ret
and
fists
das
mov
dec
loope
and
out
dec
pusha
js
movsb
lahf
out
sahf
mov
or
cmp
repz
inc
dec
push
pause
lods
ror
cmp
mov
pop
push
xor
repz
rep
adcb
fsubr
add
jns
inc
pop
jo
nop
movsb
jl
out
mov
cltd
repz
rcrl
dec
pusha
je
repz
mov
sahf
out
add
jns
out
push
sahf
ja
out
lock
jns
out
pop
insb
mov
mov
pushf
mov
push
xor
test
jns
out
mov
fdivr
iret
repz
or
and
pop
jo
out
repz
pushf
mov
pop
popf
popf
iret
repz
repz
sahf
push
cmp
push
test
sahf
out
in
add
jns
out
push
cmpsl
jnp
int3
in
push
mov
sahf
out
pop
jo
cwtl
lahf
out
sahf
test
aam
cld
or
sub
xor
iret
repz
jns
iret
lock
out
sahf
pusha
je
movsb
mov
cmp
out
fdiv
add
sbb
cmp
repz
nop
iret
repz
test
shl
cld
adc
and
dec
pusha
je
sahf
out
test
sahf
out
out
movsl
push
xor
jl
out
cwtl
mov
in
add
adc
push
push
iret
movsb
rcl
or
sahf
out
sahf
and
inc
pusha
je
jns
out
pushf
mov
loopne
sahf
out
testl
xor
pop
jns
out
insb
test
sahf
out
fdiv
add
sbb
repz
xor
insb
sbbb
rcl
test
repz
inc
push
pusha
cmp
repz
mov
out
lock
adc
cmp
jns
out
insb
adcb
enter
lods
sub
iret
repz
fs
movsb
imul
call
jns
out
inc
pop
insb
sbbb
mov
iret
sarl
and
pusha
repz
repz
mov
ds
in
adc
sub
out
sahf
push
insb
test
out
loopne
or
and
cmp
repz
nop
out
cmp
movsb
mov
sahf
out
sahf
sbb
inc
pop
jo
jns
out
mov
repz
repz
adc
dec
iret
repz
pusha
jl
movsb
mov
cmp
cld
pop
mov
push
inc
lahf
out
sahf
pop
insb
mov
repz
jbe
mov
push
xor
cmp
repz
pop
push
cmp
lods
mov
sahf
out
lcall
jns
out
jl
movsb
mov
fidivrs
out
call
push
cmp
out
dec
fs
mov
mov
shl
hlt
jns
out
add
dec
pop
out
sahf
out
sbbb
sahf
fsubr
pusha
push
adc
cmp
repz
pop
push
iret
mov
out
xlat
cmp
push
cmp
sahf
out
sahf
pop
je
mov
out
fsubr
cld
adc
repz
push
insb
or
cmp
nop
mov
sahf
out
ds
sbb
cmp
sahf
out
fs
pushf
mov
jns
out
shr
cld
or
iret
repz
sbb
dec
pop
push
cmp
mov
sahf
out
hlt
add
adc
cmp
jns
out
pop
je
xchg
sahf
idivl
mov
jbe
mov
mov
sahf
out
sahf
push
pusha
je
xchg
mov
mov
aam
lock
jle
push
and
dec
pop
jns
out
insb
js
pushf
lods
fnstcw
out
shl
in
and
jns
cmpsl
push
adc
sub
push
sahf
out
sahf
pusha
jo
xchg
movsb
mov
sahf
out
rcl
hlt
or
sahf
out
fsubrp
push
cmp
jo
jns
out
xchg
movsb
mov
int
lock
adc
cmp
repz
dec
pop
fs
cwtl
cmp
repz
aam
cld
jns
cmpsl
stc
adc
and
inc
pop
out
sahf
out
mov
lahf
in
add
sbb
dec
fs
repz
xchg
test
ror
mov
or
mov
xor
cmp
repz
jo
cwtl
lods
imul
in
add
sbb
jns
out
cmp
pop
jo
out
sahf
adcb
int
jns
clc
sbb
xor
iret
repz
jo
cwtl
test
sti
cmp
fsubr
cld
into
enter
repz
inc
push
insb
mov
rcr
or
sahf
out
sahf
and
dec
pusha
je
jns
out
mov
repz
repz
sbb
dec
pop
iret
repz
jo
test
shl
sahf
cmpsl
stc
cmp
adc
and
dec
jns
out
pop
insb
adcb
mov
fsubr
or
iret
repz
and
inc
pop
insb
mov
repz
lods
ror
jns
out
hlt
or
adc
xor
jns
out
pop
jo
pushf
dec
repz
mov
aam
into
sub
repz
xchg
lods
shr
iret
repz
repz
adc
xchg
push
push
jo
mov
enter
fiadds
iret
repz
inc
push
sahf
out
ds
sub
push
jns
mov
lock
repz
shll
inc
pop
jo
iret
repz
pushf
mov
fsubr
add
adc
dec
pop
jo
sahf
out
test
dec
repz
and
push
iret
repz
fs
lods
fcompl
or
and
dec
jns
out
mov
repz
out
add
adc
iret
repz
xor
dec
pop
fs
iret
repz
mov
mov
fsubr
cmp
repz
add
or
and
cmp
repz
push
pusha
in
repz
insb
js
nop
pushf
xor
inc
outsl
push
push
mov
inc
sbb
or
cmpsb
pop
adc
or
and
out
out
inc
pop
xchg
sbb
inc
xor
xlat
push
movsb
push
pusha
push
push
mov
es
sub
xchg
xchg
jno
sub
xor
pop
jnp
and
adc
dec
cmpsl
inc
adc
in
fimuls
scas
out
pop
pop
mov
dec
call
jnp
adc
dec
ss
into
cwtl
dec
hlt
dec
push
and
fidivs
jne
pop
loopne
and
adc
or
xchg
icebp
lret
push
call
les
outsl
gs
sbb
dec
push
clc
ja
fidivrs
nop
xchg
dec
mov
push
negl
xchg
mov
js
inc
jle
test
sahf
or
js
lock
lods
ds
sbb
pushf
out
rol
inc
adc
pop
push
jl
xchg
neg
jnp
es
cwtl
mov
push
dec
fcomps
idivl
mov
dec
lahf
sbb
fcoms
mov
dec
test
neg
jnp
adc
cmp
ja
scas
sub
sub
rcrb
push
clc
into
fadds
mov
test
inc
cwtl
decb
push
inc
out
mov
jbe
neg
sarb
nop
dec
ss
push
xor
jnp
mov
push
add
pushf
push
dec
push
rorb
cmpsb
or
ss
sub
fcoms
push
enter
pusha
jo
sub
setle
mov
test
clc
or
jnp
imul
jl
mov
js
jo
cmp
mov
lock
mov
mov
out
ret
les
orb
idivl
addb
fs
lea
sub
sbb
data16
out
jns
mov
enter
pop
scas
mov
inc
shr
mov
push
dec
into
mov
movsb
cmp
jp
in
scas
add
cmp
inc
imul
into
loopne
in
xor
pop
fimuls
mov
ja
pusha
fcoml
push
xchg
xor
cmp
mov
pop
lods
jle
into
add
lock
outsl
jnp
enter
push
cmp
inc
out
inc
inc
push
outsb
mov
mov
jge
inc
test
mov
sbb
into
jo
push
es
into
aam
jnp
iret
negl
pop
push
fsubl
inc
mov
xor
adc
out
daa
out
lock
dec
push
xrstor
out
sbb
mov
push
and
pop
adc
add
dec
fbstp
cli
scas
cmp
jnp
gs
push
aas
push
push
dec
pop
xchg
mov
and
pop
les
add
or
push
movsb
mov
jmp
lods
dec
sahf
dec
cs
cmp
daa
push
rol
mov
inc
mov
push
mov
out
aam
add
or
divl
push
sbb
les
jbe
xlat
loop
shlb
jp
pop
push
mov
outsb
cmp
pusha
mov
sbb
push
pushf
jg
movsb
sub
xchg
sbb
iret
loopne
sbb
dec
or
push
mov
sti
mov
int3
mov
push
mov
pusha
push
fsubr
jl
pusha
cmp
fs
xchg
pop
xor
out
mov
dec
mov
inc
cmp
mov
mov
jecxz
nop
fimuls
push
xchg
sbb
mov
in
ss
lods
fs
jns
mov
pop
jo
popf
jnp
jmp
mov
loope
ja
ds
dec
xor
xchg
push
lock
loopne
mov
push
sub
shrb
scas
sbb
cs
faddl
and
not
add
js
out
enter
mov
test
jo
cmp
inc
jp
xor
call
sbb
push
mov
js
inc
into
call
cmpsl
inc
testb
scas
mov
sbb
push
scas
nop
push
xchg
add
mov
jo
clc
jle
pusha
es
jnp
mov
fcomps
inc
push
add
pop
lret
push
pop
mov
pop
cmovle
fisubrs
xchg
aam
rolb
or
test
das
sbb
enter
inc
add
mov
add
or
push
cmpsl
jle
inc
add
pusha
dec
cmp
adc
sub
addl
inc
add
add
pop
pop
add
push
dec
out
jnp
fwait
push
add
pop
inc
sbb
fmulp
jnp
inc
and
dec
pop
push
and
pop
ficomps
push
pop
dec
add
sub
in
cmp
push
dec
xchg
push
fnstsw
repnz
push
inc
mov
jnp
pop
mov
iret
es
dec
push
inc
cmp
imul
fimuls
mov
aaa
or
push
je
or
inc
push
scas
dec
dec
inc
js
loopne
xchg
push
add
dec
xor
or
mov
xor
cmp
inc
dec
push
pop
push
out
mov
push
aaa
push
xchg
or
jnp
rol
add
or
dec
mov
js
push
dec
push
adcl
addb
inc
cmp
push
jnp
pusha
mov
push
xchg
xor
rolb
xorl
jmp
xchg
add
push
sar
push
lahf
pop
lcall
pop
ror
repz
push
sbb
popa
or
push
mov
addb
lods
test
pop
stc
repnz
cld
jg
clc
aas
push
pop
jmp
mov
out
rol
add
pop
or
xchg
testl
icebp
add
add
addr16
in
inc
leave
add
test
or
jo
fwait
mov
dec
add
in
shrl
mov
psubb
outsl
push
pushf
outsl
add
push
out
ds
mov
ficompl
out
dec
jb
sbb
add
pop
dec
mov
sbb
clc
pop
push
aas
pop
mov
in
popf
cs
pop
xchg
addr16
lock
ss
dec
pushl
push
pop
std
mov
push
fnstsw
add
adc
cmp
jl
pushw
jbe
out
cmp
jg
sbbb
lret
jae
inc
add
jo
iret
enter
rolb
mov
lock
add
sahf
push
xor
cmp
pop
xor
jmp
push
add
decl
aas
push
or
aaa
inc
sbb
add
add
insb
adc
and
imul
add
das
aas
dec
inc
jne
out
pop
outsb
daa
shll
out
or
pop
std
clc
lock
stos
xchg
int
aas
rcrb
dec
add
pop
divl
outsl
clc
popl
cmpsb
imul
pusha
addr16
inc
add
jns
fstps
sbb
mov
jnp
inc
nopl
ds
push
xor
out
pushf
xlat
pop
in
les
test
xchg
inc
aas
nopl
pop
push
add
xor
fwait
and
fdivl
aaa
pop
xchg
cltd
add
add
adc
imul
dec
inc
jge
cmp
sbb
push
sub
inc
add
int
insb
ss
addl
and
mov
push
push
sbb
popl
test
ret
roll
lock
adc
fcompl
jl
sbb
push
sbb
pusha
fwait
or
test
push
shl
dec
enter
data16
imul
add
push
cmp
orb
add
rolb
and
add
out
add
and
aas
cmp
subl
sti
xchg
xchg
cwtl
mov
daa
sbb
cmp
outsb
ja
popf
and
daa
and
xor
lahf
and
daa
and
mov
inc
cmp
clc
dec
push
dec
fnstsw
notb
andl
dec
push
push
inc
outsb
mov
daa
lret
xor
daa
xchg
mov
ss
sbb
cltd
sarl
mov
jge
stc
push
ja
push
daa
ret
mov
sbb
or
add
mov
lahf
adc
cmp
xor
cmp
inc
and
mov
xor
and
xor
lods
pop
daa
inc
push
movsl
jg
mov
push
push
aas
push
xor
mov
daa
xor
dec
sub
sbb
mov
jbe
and
mov
es
and
push
ret
and
and
cmp
inc
cmp
xor
pop
push
nop
or
push
fs
jge
mov
cmpsl
daa
push
and
into
adc
push
or
push
xsavec
daa
dec
daa
push
xor
jb
clc
repz
stos
addr16
fdivrl
xlat
mov
testl
xchg
inc
inc
inc
or
mulb
ljmp
or
sbb
jg
daa
inc
aad
push
push
dec
fidivrs
sub
pop
daa
mov
adc
dec
out
in
push
fcoml
fcmovu
push
aas
add
clc
daa
add
sub
sub
add
mov
daa
mov
stos
mov
es
cwtl
mov
jo
sbb
ss
arpl
nop
fbld
ds
shll
xor
arpl
es
clc
roll
xor
mov
sti
fcomps
fs
mov
push
cmp
push
mov
daa
mov
push
aas
daa
dec
lret
ljmp
inc
inc
es
out
fldenv
daa
dec
add
jle
ret
daa
xor
in
repz
sub
jecxz
test
add
xor
shl
xor
in
inc
xchg
sbb
cmp
push
stos
movsb
sub
push
cmp
out
pop
repz
daa
xor
scas
mov
cmpsb
arpl
aas
das
es
sbb
in
push
inc
sub
lcall
xor
xor
mov
call
xchg
sbb
data16
inc
push
xchg
jge
and
je
push
inc
mov
clc
insl
daa
je
stos
inc
aas
call
or
movsb
pop
xchg
mov
sub
nop
cmp
pop
xor
dec
xchg
or
jbe
daa
mov
xor
or
xchg
mov
xchg
jns
pop
jne
adc
cmove
or
inc
out
xor
jle
adc
cltd
xchg
push
xchg
sbb
adc
jl
jo
pop
andl
imul
popf
in
jl
and
clc
or
sbb
pop
lods
insb
xchg
xchg
fcoms
daa
dec
cs
dec
xor
dec
daa
dec
mov
dec
daa
clc
dec
je
fidivrl
dec
sarb
dec
jl
pop
and
pop
out
rorl
icebp
icebp
sbb
clc
lahf
push
cmpsl
out
mov
pop
sahf
xor
sahf
cltd
cltd
call
cltd
cltd
sub
fdiv
and
push
mov
test
repz
popa
xchg
inc
movsb
aaa
cmp
fs
mov
add
jb
ss
push
cwtl
sbb
outsl
inc
and
dec
push
ja
inc
daa
shlb
stos
or
ss
mov
test
add
pushl
inc
pusha
and
cmp
addl
pusha
cmp
inc
stos
xchg
and
push
or
faddp
pushf
mov
fildl
aaa
into
cwtl
jns
or
cwtl
or
jno
and
cwtl
stos
sub
aaa
sub
jge
test
insl
mov
or
mov
inc
es
and
stc
faddp
fidivrs
push
mov
frstor
and
cmp
jmp
xchg
add
insb
js
push
or
push
xchg
dec
dec
push
adc
push
and
adc
sub
xchg
or
sub
or
push
pop
jg
add
clc
js
push
pop
push
push
adc
dec
xor
leave
vmread
sahf
adc
pop
ja
or
sti
or
mov
pop
rol
outsb
push
invlpg
mov
cmp
add
ud2
jnp
cmp
adc
lock
xchg
cltd
std
pop
mov
and
lock
add
out
scas
pop
pop
sbb
add
lds
repnz
push
or
aas
mov
rclb
das
xchg
aaa
dec
lahf
add
iret
pop
mov
jmp
loopne
jo
outsl
aas
ja
xchg
add
add
pop
lock
mov
dec
pop
cld
int3
iret
popl
xchg
mov
push
mov
mov
inc
scas
cmp
vmread
aas
jo
sub
mov
xorl
mov
or
mov
inc
dec
dec
dec
test
jg
cmp
mov
aaa
rorb
jns,pt
orb
add
out
outsb
popa
and
movsb
or
and
mov
subb
push
imul
jnp
imul
insb
adc
int
sbb
add
jo
jns
fidivrl
mov
pop
push
outsl
fwait
arpl
sub
and
dec
or
movsb
or
shlb
jne
jp
enter
inc
xor
push
gs
push
imul
push
add
inc
add
xor
les
cmpsl
ja
scas
mov
pop
outsl
push
outsl
inc
sub
sti
push
cmp
jno
jae
insl
adc
mov
jb
imul
cmp
xchg
scas
sbb
push
inc
cmp
jo
popa
jb
dec
outsb
scas
arpl
jge
inc
fstpt
popa
out
or
in
es
addr16
fistps
push
outsb
js
mov
mov
popa
push
jo
lock
fists
pop
fstpt
inc
insb
jecxz
data16
ficoml
mov
rorl
jnp
pop
add
repnz
fisubrl
fidivrs
xchg
sub
mov
jecxz
ret
outsl
cmp
jge
arpl
inc
mov
cs
dec
popa
out
outsl
lcall
inc
insb
lahf
ds
dec
sbb
xchg
fs
popa
jg
out
insl
test
inc
push
outsl
bound
imul
inc
xchg
insb
adc
loope
mov
outsb
mull
sbb
or
mov
je
dec
push
push
dec
or
mov
mov
pop
dec
lcall
inc
and
sbb
dec
je
xchg
js
adc
lds
jbe
push
js
gs
out
mov
fbld
jnp
dec
inc
push
arpl
jne
insb
xchg
daa
jg
push
bound
lcall
push
mov
push
mov
jb
xor
loop
xor
jnp
js
inc
cli
push
mov
bound
mov
dec
das
pop
xchg
imul
outsl
icebp
cmpsb
dec
daa
insl
ret
cmp
cmpsl
mov
lret
jo
push
fwait
sub
push
jnp
pop
xor
sub
rolb
addr16
adc
jp
mov
sub
dec
jnp
add
xor
dec
subl
cmp
iret
in
hlt
call
outsb
xor
jecxz
add
mov
jb
movsb
and
push
vmread
sub
daa
mov
mov
outsl
add
insb
pop
loopne
stos
fs
iret
insb
lds
fwait
fs
cmp
pop
jo
jg
jae
adc
add
or
push
repnz
mov
fs
xor
pop
imul
lret
dec
push
and
ret
and
adc
push
add
jae
mov
jnp
sbb
rcl
jne
sbb
jne
ret
adc
jmp
jb
aaa
lds
dec
adc
imul
push
loopne
and
pop
push
adc
loopne
daa
push
testw
adc
dec
aaa
sti
mov
push
add
push
test
sti
add
test
fidivs
jns
je
add
fbld
adc
sbb
dec
fdivrs
adc
pop
lock
inc
mov
pop
out
sbb
rcrb
outsl
xchg
ja
sti
into
dec
ss
popl
gs
push
push
sub
movl
mov
push
es
adc
addr16
push
ljmp
repz
call
and
jmp
xlat
jb
sub
inc
sub
das
mov
inc
mov
add
cmp
or
adc
lahf
and
rcll
jl
and
sbb
sbb
xchg
push
fistl
sub
pop
sub
mov
repz
push
add
xor
xor
xchg
popa
adc
mov
sbb
shll
pop
jo
das
fwait
adc
sub
or
fwait
add
mov
pop
push
mov
sbb
dec
mul
outsb
outsl
adc
mov
lret
inc
and
cmp
data16
push
enter
addl
fistl
add
pop
xchg
push
jbe
das
arpl
jbe
push
stos
out
popa
imul
pusha
rclb
xchg
pop
das
test
pop
jp
iret
icebp
subl
jae
push
mov
and
push
push
imul
push
lds
sbb
add
jnp
daa
sbb
sub
mov
xchg
jbe
mov
xlat
arpl
mov
lret
icebp
cs
jmp
pop
sub
xchg
adc
sti
adc
or
sub
out
push
or
jae
xor
mov
jae
dec
xchg
andl
adc
jne
mov
outsb
sub
imul
fcomp
mov
orl
addr16
adc
jo
add
ret
xchg
jae
dec
add
inc
pop
repz
pop
js
dec
shll
sbb
adc
fucomip
xchg
jl
dec
mov
insl
inc
andl
adc
xchg
loopne
cvtps2pi
xor
mov
stos
ds
test
fisttpl
add
pop
inc
mov
and
stos
les
bound
xor
inc
mov
pop
test
xlat
pop
jg
or
jae
bound
es
and
iret
sti
stos
adcl
adc
or
pop
lea
sub
scas
cwtl
dec
pop
mov
add
xchg
imull
sbb
adc
push
lods
mov
mov
jnp
je
insl
mov
xchg
je
imul
xor
cmpsl
insl
ja
orl
adc
push
outsl
jno
add
fildll
and
ja
lods
adc
stos
or
cmp
iret
jnp
sub
mov
jl
push
loopne
outsb
jo
notl
push
add
dec
jbe
call
adc
push
jb
inc
roll
push
push
and
insl
mov
or
jae
pop
dec
filds
scas
adc
jge
and
mov
push
sbb
pop
mov
cmpsl
mov
insl
outsb
adc
mov
inc
lahf
fwait
rorl
pusha
xor
ret
ljmp
mov
aas
out
xlat
and
mov
iret
and
jo
es
aas
fs
gs
popa
ret
inc
dec
arpl
cmpsl
mov
arpl
das
adc
and
ss
sub
fistl
xor
pop
lcall
push
loop
and
push
dec
adc
mov
jb
outsl
cmp
adc
add
mov
and
push
movsb
push
out
sbb
push
sbb
sub
dec
arpl
stos
fwait
addr16
cmpsb
push
xchg
jo
cwtl
mov
iret
fldt
sub
xchg
je
add
xor
cmpsb
jmp
add
aaa
mov
push
or
fcmovbe
push
push
adc
jp
dec
stos
push
push
mov
sahf
jle
push
adcb
xlat
add
ja
dec
jne
mov
mov
aam
mov
mov
fisubrs
out
xchg
jmp
rcrb
das
pop
scas
add
add
pop
ret
xchg
call
mov
dec
sub
add
xor
jl
rcll
inc
lret
sbb
rorl
out
sbb
xlat
add
jle
push
push
or
in
mov
sub
imull
pop
sub
xchg
lret
sub
add
sbb
add
outsl
add
pusha
adc
stos
dec
dec
pushf
mov
out
les
jmp
daa
outsb
mov
adc
push
subb
jmp
rcrl
je
jo
push
out
fdivs
outsl
pop
cli
jne,pn
ret
push
ja
push
or
cmp
cmpsb
push
and
and
dec
jmp
arpl
pop
pusha
adc
sahf
pop
aad
xchg
or
xchg
jo
shlb
sub
loopne
lds
adc
lret
cwtl
jl
test
aaa
imul
and
stos
push
pop
in
popa
insl
adc
cmp
push
push
sbb
jo
pop
insb
out
sbb
lret
mov
aaa
ret
sub
ret
xor
inc
mov
incl
pop
ja
loop
sub
mov
dec
out
and
rclb
das
dec
push
adc
ret
movsb
dec
cmpsb
js
arpl
pop
es
arpl
scas
push
inc
ret
mov
pop
fbstp
push
lret
cmp
shrl
lds
out
mov
cmp
push
xor
fsubs
lods
push
aaa
xchg
cmpsb
mov
sub
aas
addr16
daa
das
shrb
dec
movsl
imul
xchg
or
outsl
dec
xor
inc
and
mov
jb
add
sbb
imul
shrl
in
pop
mov
mov
daa
shll
mov
adc
mov
xchg
add
aaa
xchg
mov
call
and
mov
sub
jmp
mov
ss
in
sbb
lret
and
paddsw
out
bound
insb
int
jae
fists
sbbl
inc
mov
sbb
pop
adc
or
mov
push
mov
cmp
adc
push
xchg
sub
adc
mov
arpl
outsl
sbb
sbbl
jae
dec
cwtl
or
arpl
adc
or
lahf
test
jmp
mov
inc
and
sub
pop
test
and
lods
pop
jo
jg
push
pop
xchg
test
arpl
mov
adc
mov
cmpsl
push
sub
outsb
imul
inc
je
add
pop
pop
add
rolb
sub
insl
push
push
cmp
imul
lock
scas
mov
add
daa
sbb
mov
lods
sbb
bound
ficoml
addr16
mov
mov
mov
pop
pop
mov
lock
or
sbb
mov
js
ja
inc
sub
push
xlat
scas
push
and
or
dec
imul
lods
aaa
testb
sahf
sub
adc
aad
insb
dec
xchg
and
pop
popa
jecxz
mov
adc
out
stos
stos
popa
cwtl
bndldx
or
arpl
pop
test
pop
test
sbbl
dec
fdivs
cs
and
adc
pop
xorl
ja
sub
data16
out
cmp
xor
movsl
add
xlat
inc
icebp
mov
push
jns
loopne
mov
arpl
movsl
add
jae
jnp
sub
or
ret
pop
push
push
pop
movsb
add
adc
push
adc
mov
loop
outsl
pop
or
jmp
add
imull
dec
cwtl
stos
shr
jo
ja
lahf
lahf
sub
xor
push
and
arpl
daa
adc
insb
inc
adc
shll
or
adcl
push
addr16
mov
adc
daa
dec
daa
psrlw
sbb
push
jmp
and
xlat
jo
testl
and
push
and
ljmp
cltd
mov
push
ja
test
push
inc
adc
push
fstpt
out
push
jnp
scas
pop
xchg
or
fildl
fisubrl
stos
in
mov
inc
and
and
pop
fs
push
scas
add
lahf
test
or
mov
pop
mov
add
adc
arpl
dec
mov
jne
mov
fmuls
and
test
ret
sbb
add
incl
aaa
addb
inc
sub
loopne
or
jbe
inc
rolb
outsl
pop
sub
das
inc
or
subb
and
mov
arpl
inc
int
bound
cmpsl
rcrb
aaa
and
adc
sub
adc
inc
mov
decb
push
mov
adc
fstpt
push
sub
movq
pop
adc
pop
and
rolb
sbb
jno
out
stos
adc
in
adc
icebp
inc
mov
jp
pusha
mov
test
sub
test
insb
sub
adcb
inc
cmp
jno
scas
add
push
xchg
push
fisttpl
lods
inc
loop
ja
int3
clc
pop
mov
out
xchg
push
xor
jae
jmp
pusha
adc
add
cmp
dec
pop
rolb
repz
aas
and
lahf
dec
push
es
xchg
sbb
aam
jg
popa
pop
lds
and
test
scas
arpl
push
pop
inc
sbb
add
data16
sti
enter
jmp
cmp
push
cmpsl
out
out
rcll
jmp
test
iret
pop
or
add
adc
push
xlat
pop
daa
pop
enter
sbb
das
xchg
rolb
sarl
fwait
outsb
and
pop
stos
sti
sub
mov
mov
stos
or
fimuls
popa
lds
sub
add
fistpll
rcrl
cmp
pop
jg
sbb
push
xlat
sbb
mov
test
dec
push
jb
mov
dec
dec
pop
xor
xchg
aas
arpl
sbb
jmp
push
add
or
scas
imul
add
push
loope
testb
push
dec
and
jp
dec
cmpsl
stos
fs
test
jmp
add
ret
jp
leave
pop
push
pop
xor
clc
cs
pop
adc
push
jnp
mov
popa
pop
pop
xchg
das
sbb
add
dec
jnp
dec
shlb
dec
pop
fcmove
mov
test
data16
aas
adc
mov
sbb
jmp
xchg
push
fisttpll
add
mov
mov
test
daa
imul
cmpsl
fbld
fs
xor
stos
fwait
loop
sarl
sti
or
or
sub
push
outsl
pop
insl
shrb
iret
testl
adc
adc
popa
jae
adc
lds
daa
dec
jns
sbb
mov
sub
add
xor
outsb
cmc
fadds
push
sbb
or
adc
jp
xchg
mov
sub
test
push
and
xor
add
cmp
aaa
mov
repz
add
fwait
cmp
aam
jl
dec
push
imul
jne
sub
mov
and
andb
dec
lods
pusha
mov
push
cwtl
mov
mov
fsubrs
push
bound
sub
adc
push
mov
addr16
or
insl
xchg
sbb
lret
adc
ficompl
insb
jo
popf
int
and
call
sub
fldt
sub
lods
push
cltd
cmp
inc
xchg
and
push
sarb
push
insl
and
mov
inc
bound
pop
mov
jns
push
push
dec
push
jae
push
sub
and
cmp
call
pop
cmpsl
adc
mov
shrl
cltd
xchg
add
popf
dec
sbb
sub
in
dec
test
add
mov
gs
mov
iret
int
sbb
imul
cmpsl
xor
inc
pop
lret
and
sbbl
or
mov
push
jb
push
cmpsl
mov
push
outsl
add
inc
test
out
cltd
insl
mov
mov
dec
fs
bound
rcl
or
inc
sbb
dec
mov
mov
pop
sbb
push
adc
mov
pop
out
es
sub
insl
pop
sbb
cmp
adc
daa
and
xchg
push
roll
sbb
sbb
dec
xchg
fldcw
lret
mov
dec
insb
mov
sub
adc
or
inc
mov
scas
and
adc
dec
dec
test
pop
and
or
push
adc
lea
sarb
and
xor
subl
jne
lods
adcl
xchg
imul
mov
pop
adc
roll
mov
dec
xor
add
rolb
ret
clc
hlt
mov
insl
inc
jo
push
js
push
cld
sub
sbb
push
insl
inc
faddl
out
cmp
sbb
adc
sbbl
jne
sub
insb
push
loopne
mov
aas
sub
loop
mov
loop
mov
ljmp
lods
pop
and
pop
mov
mov
imul
popa
cmpsl
lea
mov
pop
adc
push
jbe
scas
cmp
jp
movsl
mov
sar
cwtl
add
sbb
inc
insb
insl
xchg
in
mov
lods
rclb
xor
sub
hlt
cmp
mov
cwtl
lods
fisubrs
mov
xchg
dec
imul
ds
adc
push
lods
sub
adc
add
cmpsl
jp
xchg
or
lock
int3
les
in
push
mov
and
inc
popa
pusha
lret
sbbl
mov
adcl
adc
push
xor
dec
or
sub
inc
or
insl
adc
arpl
add
inc
inc
adc
push
add
add
add
add
adc
pop
or
cmp
daa
or
insb
mov
setnp
cmp
or
and
cmc
or
add
push
push
mov
jno
je
dec
add
or
pop
pop
inc
and
faddl
add
int
or
and
xor
add
and
rol
mov
insb
or
icebp
and
or
dec
sbb
cmpsb
cmpsb
jbe
scas
outsb
inc
or
xor
or
add
in
add
dec
scas
in
push
pop
adc
inc
cmp
roll
sbb
add
insb
test
addl
nop
push
daa
ja
dec
fnstsw
js
arpl
and
sub
add
add
and
cmp
sbb
pop
test
sbb
pop
sub
push
sbb
gs
clc
imul
outsl
test
gs
push
add
test
adc
xor
jbe
and
inc
xor
pop
imul
fs
mov
sbb
adc
outsb
fs
iretw
and
in
lods
sub
imul
aaa
mov
and
inc
adcb
adc
fsubs
jno
adc
ja
adc
jne
testb
xchg
cmp
cld
imul
inc
lock
sbb
push
outsl
adc
outsb
dec
lock
dec
sbb
xchg
andl
sub
push
imul
pop
mov
sbb
mov
stos
inc
ret
cwtl
xchg
and
cwtl
jnp
sub
and
add
fsubrs
fs
gs
push
pop
jnp
mov
inc
dec
je
sbb
pop
sbb
mov
push
push
insw
pop
std
lds
add
xor
cltd
dec
adc
or
in
loopne
push
jns
fnsave
pop
lea
sub
outsl
sbb
jnp
fstps
inc
outsl
rol
es
sub
and
daa
mov
fstl
arpl
mov
add
pop
enter
push
add
dec
fs
xchg
push
addr16
ret
sub
adc
xchg
mov
adc
addl
inc
mov
in
push
mov
popf
pop
and
jo
sbb
out
pop
cwtl
jnp,pt
sbb
mov
es
cmpsb
sti
and
mov
xor
xor
rcr
push
push
sub
mov
or
sub
mov
imul
pop
and
loop
sti
push
cwtl
fistl
mov
pop
mov
pop
xchg
sbb
outsl
fistl
push
pop
and
add
dec
popl
mov
cs
out
pop
cmpsb
mov
jno
sbb
sarb
inc
push
hlt
mov
dec
jmp
add
push
mov
call
add
jne
or
jge
push
movl
cli
cmp
mov
mov
dec
adc
adc
xor
test
cltd
adc
adcb
mov
jb
and
cmpsb
push
dec
ret
mov
adc
xchg
in
ja
lods
sbb
xor
cmp
mov
sub
lds
je
ja
pusha
adc
dec
sub
sbb
or
push
or
lock
mov
push
dec
and
divb
popa
je
gs
inc
lock
add
push
sbb
cmp
cmp
hlt
subl
pop
or
dec
add
push
pop
adc
cltd
shrl
andb
movsb
jecxz
fadds
cltd
inc
cltd
and
subl
push
jnp
inc
push
cmpl
sub
das
and
popa
sub
insl
and
aam
ja
and
rorb
xor
push
pop
sub
dec
mov
push
outsl
sbb
cmpsl
xor
add
repz
repz
insb
sbb
in
les
addr16
and
jns
daa
mov
insl
lock
loopne
push
dec
jb
scas
pop
mov
mov
ret
and
daa
cmpl
cmp
imul
ficompl
movsl
push
dec
push
xor
ss
push
popl
lea
popa
repz
sub
shll
movsl
subl
ja
je
sbb
mov
jbe
fistl
adc
faddl
ret
inc
jne
pop
rorl
popa
jns
and
push
jbe
sahf
and
add
out
aaa
add
cmc
and
stos
nop
xchg
or
test
mov
sub
movsb
pop
dec
pop
cmp
xchg
xchg
mov
inc
testb
sub
mov
xchg
mov
or
mov
inc
outsl
or
ret
notb
adc
out
adc
push
pop
push
cmp
mov
insl
sub
lods
gs
popa
jo
dec
sbb
and
mov
mov
mov
sbb
rclb
sbb
addr16
add
sbb
insl
and
inc
fs
push
jns
loope
repz
lret
sbb
jbe
and
and
imul
adc
sbb
xor
bound
adcl
jo
pop
jnp
cmp
and
rolb
xor
xor
fadds
lcall
dec
cmp
das
inc
jns
xchg
push
adc
data16
je
xor
or
fs
mov
les
sbb
inc
arpl
data16
mov
xor
lea
in
push
addr16
js
cmp
lds
and
loopne
and
pop
push
xor
dec
dec
adc
stos
clc
jg
pop
or
pop
push
jo
lods
into
pop
cmp
mov
inc
mov
fnsave
mov
adc
cmc
insb
add
fsubrs
and
cmp
cmp
push
arpl
test
add
mov
add
shrl
and
sbb
push
mov
sbb
push
popa
mov
sbb
insb
and
ds
clc
sub
mov
in
adcl
imul
insl
imul
jno
cmp
insb
nop
cmc
pshufw
dec
stos
iret
and
adc
shlb
push
shl
sub
mulb
enter
ret
inc
xchg
push
mov
push
and
jne
xchg
mov
sub
xor
push
jno
push
or
mov
cmpb
fdivrs
inc
mov
dec
test
add
adc
std
push
jne
rorl
add
popa
das
and
mov
cmp
or
push
xor
call
je
jne
in
xor
and
push
je
sbb
in
mov
ror
test
stos
dec
lods
lods
lahf
sbb
loopne
dec
dec
jae
js
and
shlb
cmpsl
sbb
repnz
jo
sbbl
pop
stos
faddl
push
xchg
jo
in
pop
mov
mov
lds
imul
dec
jae
in
adc
movsb
mov
out
and
jnp
and
pop
mov
leave
adc
jns
add
ret
mov
adc
sub
inc
cli
add
ret
mov
xchg
addr16
push
jb
inc
and
inc
mov
pop
pop
mov
popa
jo
inc
cmpsl
out
push
cmp
jno
orl
inc
test
mov
andl
stc
sbb
pop
and
jne
push
inc
push
in
xchg
inc
inc
jo
mov
jg
adc
popa
sub
add
imul
in
mov
mov
lods
out
and
popf
lret
and
mov
shll
in
insl
ret
cmp
dec
xchg
xor
push
jbe
and
popf
xchg
scas
push
insb
xor
aaa
push
inc
cltd
add
and
adc
aaa
mov
add
mov
lods
ja
and
nop
mov
in
mov
add
stos
repz
mov
ss
mov
sub
xchg
inc
sub
and
mov
mov
sbb
imul
popa
gs
test
mov
jne
enter
in
mov
sbb
shr
adc
push
outsl
sbb
mov
arpl
adc
adc
inc
shll
insl
jecxz
and
roll
xchg
insl
arpl
sbb
sbb
mov
pop
push
xchg
dec
data16
loopne
add
pop
in
and
jmp
dec
sbb
and
and
mov
pusha
pop
jmp
cli
pop
adc
dec
loope
or
push
adc
fmulp
and
dec
mov
dec
int3
aaa
inc
xor
sub
adc
mov
rcrb
push
jo
mov
dec
jg
fs
fmull
and
std
bound
or
sbb
sub
inc
aaa
push
inc
and
test
inc
adc
sub
arpl
push
xchg
xor
cmpsl
sarb
arpl
xor
pusha
pop
jmp
pop
sbb
push
insl
ja
add
push
dec
add
add
cld
orl
push
out
mov
daa
test
adc
jo
add
push
mov
pop
add
lahf
sbb
out
repz
inc
movups
jae
cmpsb
and
imul
sub
jbe
jno
sbb
in
mov
push
insl
cs
adc
push
scas
adc
mov
ds
push
jmp
and
dec
jns
pushf
inc
xchg
dec
dec
push
cmp
wbinvd
or
bound
cmp
shlb
insl
js
aaa
clc
sub
lahf
fs
bnd
cmp
jmp
dec
pusha
add
inc
in
movsl
sahf
inc
dec
gs
dec
sahf
mul
jo
cmpsb
into
inc
fisubrl
dec
data16
or
add
xor
or
push
dec
xchg
and
add
add
add
inc
add
inc
xchg
popa
pop
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
inc
dec
add
dec
add
