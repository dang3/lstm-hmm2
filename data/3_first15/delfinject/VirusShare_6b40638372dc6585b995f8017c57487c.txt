fdivp
or
add
add
add
inc
push
js
inc
add
push
xchg
xlat
push
out
mov
jmp
xor
push
adc
or
xchg
sbb
orb
add
mov
jmp
lea
call
call
push
pushf
mov
lea
call
pusha
lea
jae
pushf
sete
mov
not
mov
seto
inc
pusha
pusha
jmp
movb
lea
call
clc
cmc
pushf
cmp
pusha
pushl
lea
jae
cmc
cmp
jl
pushf
push
movb
lea
jae
jmp
mov
rep
lea
mov
push
lea
jmp
out
jge
push
hlt
mov
mov
andl
std
cmp
repnz
loop
fildl
jp
mov
xorl
adc
std
mov
fmuls
xchg
cli
addr16
jb
lods
stos
rclb
cwtl
or
dec
lods
in
dec
ljmp
jne
dec
orb
dec
lahf
adcl
mov
sub
jecxz
xlat
mov
mov
sahf
adcb
hlt
mov
in
fisttps
xchg
mov
andl
mov
cmp
adc
jmp
rorl
mov
adc
dec
mov
mov
mov
sub
jno
icebp
cli
sbb
cwtl
jl
cmpsl
jo
aas
xchg
cmp
mov
adc
hlt
das
fdivrp
mov
pop
repz
out
mov
mov
jne
pushf
mov
icebp
sub
mov
je
jne
faddl
xor
pop
inc
mov
in
xor
xorb
adc
mov
xchg
jmp
push
pushf
pusha
lea
jae
test
cmc
cmp
push
mov
call
jne
gs
xor
fs
insb
add
add
je
jne
jb
outsb
je
push
dec
add
or
add
add
or
add
mov
icebp
or
push
test
add
add
add
test
add
sbb
dec
sbb
pusha
pushfw
popw
sbb
rcr
ror
mov
not
xor
rol
sub
rol
jmp
inc
jmp
outsb
je
insb
insb
cs
insb
add
orb
add
push
pushl
pushf
pushl
ret
clc
cmc
cmc
sub
pushf
jmp
enter
add
add
push
call
rol
mov
imul
xchg
fnstcw
scas
sub
jne
pop
testb
pop
dec
stos
sti
mov
mov
call
imul
mov
call
lods
sbb
mov
mov
test
lock
jp
or
mov
and
jne
not
call
popa
fs
jo
xor
cs
insb
add
orl
add
pushf
cmp
jmp
push
call
lea
ja
dec
call
push
call
es
punpckhwd
push
dec
cmpsb
pop
xchg
cmp
adc
mov
and
pop
jno
into
ja
mov
ror
inc
outsb
pop
sub
mov
push
jae
mov
sbb
sahf
xlat
xor
push
mov
cmp
pushl
push
js
pop
fistpll
lret
test
add
stos
out
and
mov
pushl
clc
lss
loop
mov
mov
xor
and
jo
mov
das
dec
sub
sbb
lret
aad
xchg
and
xlat
jle
xor
scas
push
cmp
jo
xchg
repz
pop
mov
jl
mov
jmp
add
or
xorb
sbb
sub
in
nop
or
mov
and
pushf
xchg
inc
xchg
popf
cmc
jae
pop
xchg
mov
xchg
loopne
xchg
mov
orb
inc
stos
xchg
scas
dec
push
cmp
jb
lock
or
mov
mov
jae
push
fucom
nop
test
sub
adc
lcall
sbbl
push
fnstenv
mul
mov
insl
pop
jae
add
insl
lods
mov
cmp
xor
push
rcll
dec
inc
pop
or
sub
rcrb
sahf
adcb
pop
xor
neg
mov
in
outsl
xor
adc
jg
push
popf
insb
jae
fwait
xor
ljmp
les
insl
xor
sbb
mov
pushf
dec
loope
das
mov
pop
gs
and
icebp
imul
sub
nop
mov
mov
mov
jmp
shll
sub
lahf
test
push
adc
popl
repnz
out
into
idiv
push
mov
dec
sub
cmp
out
fdivrl
rclb
or
aam
lods
repnz
mov
xchg
test
pop
out
sarb
sbb
dec
stos
call
lret
add
lahf
dec
lds
stos
or
push
lods
imul
lret
mov
mov
fdiv
mov
xorb
xchg
call
faddl
jbe
pop
cmp
sub
loopne
mov
cmp
rcrb
aas
in
mov
testb
jp
dec
inc
jmp
fnstsw
jns
sbb
sarl
pop
shll
xchg
xchg
std
cld
call
jno
sub
subb
adc
pop
loopne
xchg
addr16
cmp
fcompl
push
lods
enter
insb
xor
enter
or
adc
add
push
pop
lea
xchg
mov
sub
js
jmp
aad
decl
cld
mov
or
cs
jl
dec
imul
nop
or
pop
jae
mov
sahf
orl
inc
mov
jge
imul
dec
pop
enter
pop
mov
pusha
paddd
push
lock
aam
pop
mov
sub
fdivr
lea
in
out
xchg
mov
imul
mov
inc
in
subb
push
fcompl
fnstcw
insb
pushf
je
dec
in
fsubrl
cmp
adc
sub
jnp
mov
lcall
add
iret
test
adc
xlat
negb
repz
xchg
test
into
enter
aam
ret
fdivrl
inc
add
jae
push
rclb
stos
popf
dec
popa
stos
arpl
push
mov
fwait
xchg
or
or
adc
pop
add
inc
dec
or
adc
fs
jae
cld
dec
insl
stos
iret
int3
cli
mov
cwtl
inc
jae
mov
iret
mov
xchg
pop
mov
out
dec
pushf
mov
mov
in
clc
loope
jae
sub
inc
sbb
outsl
or
sub
addr16
sti
xor
mov
outsl
or
das
cmp
add
rorb
repz
inc
or
rclb
mov
movsb
jg
orb
sub
jge
mov
repz
or
dec
ja
dec
push
orl
mov
mov
cld
cmpsb
mov
inc
adc
and
sbb
icebp
imul
in
push
cmpsl
ljmp
mov
lahf
xor
aam
dec
mov
dec
xchg
inc
lods
rorb
jae
aas
pushf
or
or
mov
lods
xchg
jo
xchg
das
mov
into
adc
stc
sub
pop
stos
mov
pushf
pushl
sbb
mov
imull
mov
or
test
mov
ret
mov
dec
fcoms
push
mov
aad
cmpsl
fs
cli
fldl
imull
repnz
int3
rcl
test
ret
sub
arpl
int3
xor
jbe
inc
mov
in
jnp
mov
xchg
inc
in
dec
lret
scas
push
xchg
xchg
mov
in
call
fists
movsl
or
movsbl
pop
pop
mov
mov
shlb
mov
lock
sub
jl
pop
ficomps
or
insb
sub
test
push
pushf
cmp
loope
in
mov
rcrl
dec
cld
inc
push
stos
lret
mov
fisubl
cmpb
adc
mov
rorb
fwait
clc
cmpsb
rorb
repz
sub
shrb
enter
dec
leave
push
inc
dec
xchg
mov
jle
lahf
repnz
loope
jecxz
aas
sarl
insl
adc
inc
push
fbstp
fabs
sub
mov
add
clc
mov
out
dec
xchg
nop
push
enter
aad
pop
add
icebp
push
enter
outsl
jae
imul
cld
enter
mov
bswap
ret
sti
mov
mov
pop
hlt
cli
setg
dec
xchg
popf
gs
das
shll
or
lods
pop
mov
sub
shlb
jg
clc
cmc
or
filds
das
pop
loopne
movsl
lret
pop
mov
les
pushf
hlt
mov
mov
sbb
repnz
or
test
mov
dec
shl
pop
add
pop
into
adc
mov
iret
nop
lea
gs
mov
ret
aaa
dec
jmp
lock
pop
arpl
adc
and
mov
pop
outsb
lret
loop
bound
mov
mov
adc
mov
mov
pushf
inc
jb
mov
pop
lahf
pop
adc
mov
dec
addr16
iret
pop
rorl
loope
push
lods
pop
jae
jmp
mov
mov
adc
mov
aam
in
pop
fsts
push
test
iret
fsubrl
lret
jmp
mov
jecxz
adc
mov
data16
dec
xor
jge
test
add
dec
mov
cmp
mov
push
lcall
nop
adc
aam
ss
nop
pushf
fildll
add
fimull
xchg
mov
pop
pushf
jg
std
xchg
adcb
adc
popf
adc
cmp
add
dec
cmpxchg
xchg
mov
add
push
sbb
shlb
cmc
push
mov
jnp
mov
pop
xchg
and
icebp
ljmp
mov
out
xorb
mov
sub
xchg
xlat
add
test
lcall
cld
dec
or
xorb
dec
call
push
sbb
sub
nop
xchg
xchg
adc
imul
mov
fldcw
inc
rcl
dec
cmpsb
jecxz
xchg
out
inc
dec
sub
push
push
mov
lea
fmuls
adc
dec
sub
mov
push
aas
in
mov
je
sub
fmull
shll
sbb
lcall
mov
ret
loop
push
sub
into
mov
mov
push
inc
and
mov
cmp
sbb
pushf
or
sbb
out
jmp
fsubr
fists
popf
mov
fmull
mov
fisubrs
dec
cmovl
imul
inc
icebp
orl
mov
jmp
inc
adc
or
test
fsubrs
xchg
push
pop
dec
or
push
sub
out
repz
xor
push
mov
mov
xchg
cmp
mov
xchg
jmp
sbb
mov
mov
jae
push
adc
lods
add
push
mov
fmull
jb
lret
icebp
push
lcall
hlt
jne
mov
xchg
cld
sti
cmp
outsl
sub
das
clts
jl
movsb
rcll
mov
scas
jp
popa
mov
ljmp
dec
xchg
push
fdivrl
lret
xchg
or
and
push
hlt
lods
mov
orb
cmpsb
ret
cmp
mov
mov
dec
hlt
push
or
pop
es
xchg
out
lock
mov
lahf
mov
inc
mov
lods
mov
mov
fwait
mov
mov
xor
pop
adc
push
mov
add
out
popf
mov
push
stos
or
jae
push
aad
ljmp
pop
fldenv
inc
dec
lock
daa
xchg
nop
cmp
call
testb
fcoml
xchg
aad
push
lods
xor
jnp
xchg
enter
inc
or
jno
jmp
int3
rcrb
aad
mov
push
mov
mov
clc
int
mov
imul
je
push
push
mov
and
int3
test
jae
pop
or
jmp
mov
adc
fxch
sbb
repnz
inc
mov
fldl
std
das
out
xor
orb
es
das
mov
xchg
repz
fsubrl
mov
pop
je
aas
stos
mov
lcall
jnp
jmp
mov
jnp
and
bound
cli
cli
sub
push
mov
sbb
xchg
jbe
dec
sbb
pop
push
aam
shlb
push
push
jl
jecxz
push
and
mov
xchg
jp
pop
add
stos
xrelease
cli
mov
dec
inc
inc
xchg
jnp
mov
xchg
dec
mov
rorb
outsb
mov
int3
sbb
rcll
jno
cmpb
pop
cmpsl
mov
call
fmull
add
shll
xor
mov
push
xchg
rclb
push
jle
pushf
je
loopne
ljmp
gs
and
outsl
sarl
mov
test
mov
dec
jns
and
pop
dec
lock
mov
dec
adc
das
or
push
mov
mov
sub
enter
xlat
hlt
inc
scas
repz
test
xor
push
cmpsl
mov
inc
cmp
push
mov
mov
push
sub
mov
lock
mov
jmp
rcrl
dec
icebp
or
inc
adc
cmp
mov
cmp
aad
fildl
pop
mov
xchg
mov
mov
test
fistl
sub
pop
pop
imul
xor
clc
mov
jecxz
ljmp
enter
xchg
inc
inc
jo
addr16
or
jae
push
loope
push
arpl
imul
gs
jne
inc
mov
nop
std
cli
cld
mov
push
mov
leave
fidivs
inc
jle
fcoml
push
mov
mov
push
xchg
mov
lahf
mov
mov
jnp
mov
rcll
ss
cmpl
incb
filds
push
mov
xor
aam
mov
lds
popf
push
cli
fidivrl
mov
imul
lret
les
lods
imul
xchg
pop
mov
mov
sahf
andl
pop
pushf
adc
lret
inc
sbb
es
popf
insb
rorb
ret
stos
xchg
dec
xor
loopne
stos
nop
cs
cmpsl
jmp
mov
in
xor
rclb
pop
lds
in
aam
test
push
xchg
mov
mov
out
push
xlat
ret
rol
stos
scas
rorb
int3
jmp
icebp
lods
pop
jo
pushf
sbb
popl
nopl
pop
scas
outsb
test
and
jnp
mov
xchg
lods
mov
ljmp
xor
push
cmpsl
mov
mov
pop
cmp
add
pop
sbb
mov
jl
inc
out
ret
and
fldenv
pop
pop
mov
fildll
xchg
mov
mov
into
or
imul
pop
lret
ljmp
inc
and
inc
add
ja
test
mov
jbe
add
add
paddusb
call
fisubs
pushf
jmp
js
int3
or
mov
jne
jno
push
aas
xchg
fdivl
cmp
sbb
jecxz
inc
int3
pop
cmp
xor
adc
std
mov
popf
shrb
cmp
out
and
lret
cmp
adcb
xchg
mov
mov
jmp
xchg
push
xchg
add
add
mov
sub
lods
shr
cwtl
push
adc
fsubr
lret
scas
aam
shrl
ret
push
maxps
mov
jmp
dec
sub
mov
insb
mov
lea
test
xor
das
sub
sbb
sub
sbb
mov
daa
jl
cmpsb
pushf
mov
loop
or
pop
int3
cld
mov
mov
fsub
mov
mov
in
mov
dec
aad
xchg
ret
mov
jl
rolb
clc
lcall
lods
fsubr
lods
adc
jle
in
call
shlb
push
out
cmp
mov
mov
cmp
shl
jecxz
push
fs
add
pop
outsl
stos
or
enter
cmc
nop
jb
push
jecxz
jne
cs
int
jnp
mov
push
add
push
add
or
or
sbbb
addr16
ja
arpl
pop
mov
inc
dec
jp
cmp
fdivs
imul
addr16
mov
inc
mov
lahf
popf
addb
sbb
xchg
lods
fisttpl
mov
out
add
movsl
call
cmc
fcmovu
dec
scas
cwtl
jns
pushf
mov
int3
mov
rcrl
popf
fildll
cwtl
dec
cs
cmp
add
push
inc
xlat
psrad
movb
cmp
dec
mov
mov
mov
call
cmp
mov
jo
inc
jae
shrl
sbb
adc
in
sub
fcmovbe
xchg
ljmp
or
pop
mov
fcmovbe
lret
and
test
outsl
cmp
or
cmp
cli
mov
divl
mov
jbe
pop
aam
dec
out
pop
add
xchg
pmaxub
add
aad
dec
fisttps
movsb
fstps
loopne
dec
jl
xchg
mov
mov
imul
lods
fstps
pop
dec
arpl
test
testb
push
mov
pop
cld
lods
dec
push
les
push
call
xchg
testl
adc
repnz
xor
pop
movsl
inc
sbb
adc
fcompl
mov
mov
mov
outsb
or
mov
lret
ret
imul
es
mov
rorb
push
adc
mov
fdiv
mov
mov
xchg
mov
push
aad
pop
in
icebp
test
mov
arpl
cmp
rclb
pushf
hlt
xor
outsb
mov
outsl
outsl
imul
inc
inc
loop
jl
or
les
fs
ret
lahf
pop
fisttpl
shrb
ror
mov
movsb
sub
mov
sub
movsb
or
lods
dec
xorb
movsl
mov
dec
andb
sub
xchg
sub
movsb
test
inc
lcall
mov
stos
mov
cmp
loopne
sub
xor
test
mov
test
in
push
rcl
test
int3
movsb
jg
cmpsl
shl
shlb
adc
enter
and
mov
int3
test
mov
mov
dec
lret
adc
inc
loopne
out
nop
aam
push
sub
pmaxsw
ret
jae
call
mov
mov
mov
dec
xchg
jb
pushf
sbbb
enter
xchg
xchg
cld
adc
lds
ret
mov
inc
mov
ret
mov
clc
mov
outsl
mov
ret
dec
call
imul
stos
call
test
mov
add
sbb
mov
enter
sub
sub
mov
aas
mov
jg
sarl
jg
mov
pushf
add
xchg
dec
loop
adc
or
sub
inc
repnz
xchg
iret
cmp
mov
mov
xchg
mov
mov
out
imul
sub
mov
int3
add
inc
ja
mov
insl
popf
daa
call
ljmp
mov
pushl
movsb
sbb
sbb
aam
out
cld
test
ret
pop
xchg
mov
out
mov
cwtl
sub
enter
add
addb
lock
fsubrs
lock
sub
dec
xchg
mov
int3
out
mov
outsb
ret
mov
and
into
pop
mov
jmp
mov
das
jecxz
test
push
pop
mov
fsubrl
mov
add
cs
mov
mov
and
push
int
cmc
pushf
mov
sbbl
jo
adc
sub
rol
cmp
mov
bts
lea
and
jp
cmpsb
loopne
push
aad
lret
mov
sub
sbb
xor
adc
into
pushf
mov
mov
sub
xlat
dec
data16
pop
fucom
inc
add
mov
pushf
jmp
or
sahf
test
test
aas
mov
push
jge
lcall
movsl
ret
xlat
mov
arpl
pusha
fucomip
rorb
push
sbb
leave
sub
call
rcr
adc
cmp
in
xor
scas
fucomip
das
mov
stos
dec
dec
aad
aam
test
dec
insb
int3
jmp
nop
mov
adc
and
dec
aas
negb
icebp
inc
jae
sti
sahf
adc
popa
xchg
mov
lahf
mov
cmp
fildll
sub
push
jne
jo
sub
dec
sbb
and
push
adc
arpl
inc
mov
sbb
mov
sub
pmuludq
mov
pop
shl
call
in
or
pavgw
shl
mov
push
aad
ret
loope
mov
test
xlat
addr16
or
mov
mov
mov
xlat
lcall
inc
lret
mov
jae
ret
or
pusha
fcomp
lret
lds
mov
in
xchg
mov
popf
dec
push
rolb
fs
shll
xor
rorb
push
jns
pop
mov
lock
out
sti
mov
xor
sub
aad
stos
push
shrl
test
dec
fsubrl
insl
in
sbb
sahf
aaa
daa
lods
stc
xor
in
fiaddl
xchg
adc
repnz
jno
mov
aam
cmp
in
int3
mov
je
inc
in
ljmp
and
push
int
fdiv
pop
adc
outsl
add
mov
sahf
fmull
adc
mov
test
inc
lds
outsl
cwtl
sahf
xchg
dec
sti
push
pop
or
inc
out
lock
adc
push
mov
in
inc
and
and
nop
push
loop
mov
shlb
aam
pop
lret
mov
popf
ljmp
pop
iret
fdiv
sti
leave
test
jecxz,pt
fcoms
aaa
xlat
mov
inc
or
adc
lods
xchg
ljmp
call
mov
bound
jne
jb
xchg
inc
in
xchg
or
jmp
xchg
lea
xor
inc
in
ror
cs
xchg
push
enter
mov
pop
inc
lea
mov
imul
sub
call
rcrb
pushf
pop
mov
std
mov
sbbl
cmc
mov
clc
scas
js
xchg
mov
adc
dec
test
fs
xchg
decb
icebp
call
xchg
xorb
pop
add
mov
rorb
pop
adc
or
aas
imul
mov
jmp
sub
repz
fcomp
xorb
pop
enter
popa
mov
jle
and
cmc
aas
dec
test
cmp
imul
xchg
lret
cmc
adc
cmp
inc
out
call
fdivr
out
pop
mov
div
lcall
cltd
bound
aam
test
cwtl
stos
mov
ljmp
call
imul
xchg
adc
or
or
in
stos
ljmp
fsubr
sub
rolb
sbb
fdivl
cmp
mov
sub
and
seto
mov
push
sub
dec
or
jb
cmp
shlb
xchg
pop
or
xchg
dec
in
daa
mov
cmp
pop
dec
or
cli
pop
mov
stc
call
jle
sti
dec
jl
sub
mov
fistpl
popl
in
dec
mov
xor
push
loopne
ds
xor
mov
mov
rcrl
popf
push
push
daa
das
mov
cmp
cmpsb
ret
jp
cmp
cmc
aam
dec
jb
dec
out
call
dec
loopne
or
jb
ret
jo
dec
stos
mov
int3
pop
cwtl
fstpt
add
mov
push
adc
pop
mov
push
mov
jmp
cmovns
and
pop
movsl
cmp
and
pop
add
add
sbb
xor
dec
cld
insl
mov
xchg
shrb
lock
fs
imul
dec
sub
aad
mov
stos
sub
xchg
lods
xor
orl
pop
rcll
jbe
cmpsl
inc
push
sbb
mov
cmp
xchg
outsl
xrelease
clc
or
clc
jg
arpl
xchg
add
cmp
loop
addr16
aaa
sbbb
or
sbb
in
mov
jecxz
mov
lret
dec
es
call
mov
pop
lahf
scas
pusha
mov
icebp
lds
sub
movsb
mov
adc
mov
jnp
xor
mov
sub
out
and
enter
mov
pop
test
or
cmp
lock
out
insb
jmp
push
sbbb
imul
xchg
pop
adc
cmp
in
push
jb
ljmp
xchg
or
lahf
sbb
loope
lea
out
jge
cwtl
mov
mov
dec
push
int3
push
fsubrl
mov
push
or
adc
cmc
adc
shr
cld
cmp
addl
outsb
add
mov
out
outsb
jge
adc
out
mov
insl
pushf
xchg
insb
fcompl
ficoml
add
pop
pop
dec
lret
cmp
cmp
lcall
ds
dec
mov
mov
icebp
sub
enter
mov
fisttpll
xchg
adc
js
pop
push
out
mov
sub
pushf
movb
xchg
mov
jecxz
jo
adc
mov
cmc
in
xlat
xchg
imul
mov
mov
adc
jmp
lods
mov
popa
pop
mov
push
push
xchg
cmpsb
mov
sub
cmp
and
mov
cmpsb
xchg
pop
lret
jecxz
int3
pop
cwtl
aam
imul
xchg
sar
and
mov
and
mov
jo
lods
icebp
or
aam
mov
pop
cmp
loop
ss
lock
movsl
shr
addr16
push
fmull
ja
sub
adc
ret
ret
lock
insl
or
mov
scas
push
outsl
lea
arpl
lea
loopne
adcl
jmp
adc
inc
mov
push
repnz
repz
adc
push
les
in
xchg
rorb
bound
xor
int
fwait
rcrl
es
movsl
mov
movsl
js
mov
rcl
inc
movsl
or
mov
push
rcr
mov
lods
sub
stos
loopne
ds
pop
xchg
das
lea
pop
push
inc
in
in
push
pushf
xchg
mov
lcall
cmp
pop
push
fiaddl
pushf
xchg
dec
inc
shlb
dec
pop
pop
in
test
jmp
fcoml
in
icebp
jae
dec
int
addb
dec
repz
orl
jbe
mov
fldt
add
fidivs
cld
push
push
mov
cmp
int
and
push
test
cmp
pop
inc
lea
xchg
xor
into
push
cmp
out
aam
xchg
fmulp
lea
mov
push
ljmp
push
faddl
lds
mov
push
jmp
cmpsb
jno
test
add
jmp
pop
clc
pop
iret
jbe
push
dec
loop
xlat
pop
repz
mov
mov
outsl
add
pop
mov
ret
jge
in
xchg
je
aad
mov
xor
mov
cwtl
mov
in
lcall
sbb
sbb
dec
adc
mov
mov
inc
insl
int3
adcb
cmpl
orl
lcall
pop
sub
call
insl
ret
dec
aad
fucomip
js
sub
xor
mov
dec
pop
testl
lret
cld
adc
mov
shll
pop
pushf
push
sub
into
mov
dec
sahf
outsb
lea
in
cmp
addr16
push
arpl
mov
movsb
loope
ss
and
movsl
inc
jge
xor
and
call
fsubl
jp
fnsave
repnz
stos
arpl
xchg
pop
popf
xor
gs
mov
jp
daa
mov
movsl
cs
push
dec
stos
add
xchg
push
aam
xchg
call
daa
in
in
in
dec
lea
adc
aaa
in
xchg
nop
leave
mov
aam
adc
mov
fsubl
ds
adc
bound
push
rorb
push
fadd
mov
inc
ljmp
xchg
fisttpl
lcall
pop
mov
mov
mov
repz
popa
pop
pop
popa
pushf
and
mov
insl
mov
sti
or
fmull
pop
cmp
fs
stos
ret
aad
pop
mov
push
scas
loop
mov
inc
lahf
add
mov
sub
mov
pop
or
pop
add
sub
mov
xlat
push
out
jecxz
negb
faddl
mov
ror
and
incl
es
in
sub
xchg
sub
cmpsl
inc
stos
pop
jle
cld
lods
shlb
xchg
cmp
rolb
insl
cmp
pop
cs
lcall
or
adc
add
or
dec
xchg
movsb
aam
jne
jne
fsubrl
mov
add
jp
clc
pop
sahf
shrb
test
adc
and
nop
icebp
push
in
pop
loop
das
add
xor
mov
sub
gs
pop
mov
dec
fdivl
loope
push
mov
and
sarb
ds
sub
pop
faddl
repz
mov
pop
inc
and
push
xchg
mov
out
out
pusha
adc
repnz
arpl
xor
in
sub
repnz
in
stos
xor
mov
fcompl
or
cmp
xchg
lock
push
pushf
aad
mov
or
insl
dec
mov
push
jl
mov
ficoml
fdivl
stos
aad
movsb
fistl
mov
add
loope
push
pop
sub
pop
push
shlb
pop
rep
and
js
adcl
vunpckhps
mov
mov
pop
dec
cmc
pop
jge
mov
fsts
pop
insl
scas
xor
sub
ds
repnz
cmp
mov
pop
mov
mov
lods
mov
adc
adc
push
lea
mov
push
and
fcmovu
mov
ds
mov
addl
dec
insb
nop
test
or
dec
push
shrb
or
mov
add
mov
mov
or
pusha
xorl
loopne
testl
ficompl
xchg
fidivs
dec
mov
ljmp
insl
imul
pop
pop
call
xor
je
rorb
pop
xchg
int3
mov
and
push
repnz
insb
orl
mov
mov
and
pop
or
sub
cmpsb
out
or
dec
mov
and
fdivs
lret
cmp
mov
add
jp
aam
or
int3
rcll
xchg
mov
mov
mov
xlat
lret
or
xchg
mov
daa
andb
mov
jl
cmpsb
orb
loopne
push
mov
mov
mov
and
mov
cli
mov
js
cmpsb
popf
and
mov
fcompl
into
push
push
idiv
mov
dec
iret
mov
lea
lret
mov
mov
jl
mov
cmp
pop
xlat
dec
inc
mov
fiaddl
mov
mov
mov
fcmovnb
push
lea
notl
jnp
shll
arpl
jl
push
das
mov
rorb
mov
sbb
mov
lea
xchg
push
out
or
and
out
sbb
fisubrl
push
push
scas
seto
jb
push
push
out
and
loop
rclb
xor
push
mov
or
and
sub
nop
and
shlb
fadds
out
dec
fs
push
sahf
push
xor
or
jmp
int3
cmpsb
not
mov
dec
adc
test
or
push
sub
pop
loope
mov
sub
in
xchg
cmp
aad
popa
nop
mov
and
or
ljmp
cmpsb
xchg
push
pop
cmp
push
xchg
push
sub
jp
lock
lock
insb
testb
arpl
mov
lahf
lcall
in
mov
jg
mov
fmuls
mov
aad
or
adc
push
shll
stos
adc
jb
insb
roll
inc
adc
push
mov
movsb
push
out
adc
xchg
andl
fistps
fmuls
sbb
push
pop
jge
fst
or
js
insb
cmp
sbb
or
push
xor
sbb
test
imul
cmp
mov
xchg
test
mov
adc
and
mov
in
outsl
cmp
les
adc
add
or
mov
push
adc
cmpsb
cmp
lea
mov
out
push
lods
inc
fildl
mov
mov
adc
sub
or
aad
adc
push
or
mov
cwtl
popf
fstpt
dec
xchg
mov
lock
or
push
sub
test
imul
add
mov
mov
inc
push
and
push
fcoms
pushf
or
lcall
mov
shlb
nop
mov
out
nop
outsl
push
stos
loop
dec
mov
pop
cmp
jp
jbe
nop
xchg
mov
cmc
xchg
xor
ss
nop
test
or
xor
or
adc
nop
and
ret
sbb
in
nop
push
pop
lds
popa
or
cs
addr16
aas
cmpsl
data16
icebp
leave
add
mov
sub
push
push
pop
data16
lds
and
dec
nop
sbb
and
jb
js
push
dec
sub
sub
stos
cmpsb
adc
stos
mov
cmpsb
dec
jae
or
xchg
ja
cmp
or
outsb
sbb
repz
cmp
jg
jns
rcrl
rclb
cmp
lock
cli
nop
push
sbb
das
mov
and
xchg
mov
nop
js
aas
pop
int
inc
orl
lret
dec
movb
mov
nop
and
inc
push
adc
ret
sub
pop
push
adc
pop
or
cmp
mov
mov
push
sub
das
push
rclb
pop
xor
nop
cwtl
sub
nop
xor
mov
or
or
test
jns
xchg
xchg
repnz
loopne
sub
xchg
gs
xor
clc
cwtl
push
nop
jb
loope
push
outsl
out
nop
pusha
and
fucomp
mov
inc
adc
sbb
mov
xchg
out
cmpsb
cmp
shlb
ds
pop
movsb
icebp
mov
jmp
or
mov
clc
and
nop
xor
rcr
sub
or
orl
iret
jnp
add
pop
rclb
ja
inc
add
nop
push
push
and
mov
call
mov
cmp
nop
jecxz
out
dec
in
ja
add
mov
or
adc
imul
xchg
inc
sti
adc
divl
xor
nop
shrl
and
inc
cmpl
xorl
shll
mov
inc
cmp
pop
xor
addr16
push
mov
sbb
push
fwait
jmp
pop
iret
nop
aas
xor
xchg
das
test
inc
jmp
jg
shl
push
push
nop
test
aaa
fs
in
mov
pushf
push
lds
nop
ljmp
popf
nop
inc
scas
cmp
mov
lods
sbb
lds
lret
cmpsl
loopne
jbe
cwtl
xchg
scas
pop
std
mov
sub
jp
mov
call
xchg
adc
sbb
mov
sub
dec
nop
mov
xor
mov
call
push
leave
xchg
in
sub
nop
loop
mov
or
nop
mov
xor
nop
popa
sbb
ficoms
add
cs
sub
xchg
pop
nop
dec
mov
mov
shr
nop
movsb
push
add
push
xor
pop
push
push
clc
xchg
xchg
xchg
inc
jno
mov
arpl
nop
scas
out
jne
or
inc
add
mov
fldenv
nop
mov
pop
into
dec
nop
mov
js
push
ret
mov
nop
inc
sub
jns
movsb
or
nop
add
fs
test
cwtl
xchg
mov
mov
dec
xchg
aaa
shrl
xchg
sbb
xor
movsb
inc
add
mov
mov
push
mov
loop
nop
ret
add
arpl
into
jno
nop
insb
mov
mov
cli
jo
mov
nop
inc
cmpsb
jne
push
lock
jnp
inc
push
mov
cli
mov
outsl
js
std
test
inc
out
jl
gs
fs
rolb
cltd
mov
jno
or
pop
add
mov
sbb
imul
inc
adcl
xchg
inc
ror
fildll
push
push
add
sbb
out
out
mov
test
adc
cwtl
xlat
mov
ja
mov
jg
sbb
jmp
testl
fistl
in
jns
pop
mov
jae
jbe
repnz
push
out
mov
nop
sbb
lods
add
loop
nop
enter
adcl
mov
les
fidivrs
or
mov
movsl
nop
iret
cmpsb
push
cmp
mov
gs
xchg
cwtl
xor
lock
lods
inc
xchg
nop
inc
sub
imul
cmp
clc
inc
adc
inc
pop
loope
in
push
nop
pop
jecxz
ret
outsb
nop
lcall
push
mov
mov
aad
call
cmpsb
nop
out
dec
outsl
addr16
adc
fs
jp
test
xchg
mov
cmp
cmc
rorl
lds
mov
push
dec
loopne
outsl
out
pop
jns
nop
shl
jb
repnz
dec
and
dec
adc
pop
or
shlb
shll
shlb
sub
nop
or
aad
adc
imul
sub
jns
and
insl
fistpll
add
dec
pusha
cmp
mov
nop
cmc
cmp
mov
fs
pop
mov
out
pop
mov
rclb
sbb
nop
dec
enter
aas
pxor
mov
nop
mov
pop
ljmp
add
pop
or
fwait
mov
pushf
iret
adc
in
jg
loopne
nop
leave
cmp
scas
nop
jp
push
dec
out
cltd
push
push
nop
jnp
inc
jge
subl
fcoml
adc
mov
pop
nop
inc
into
mov
xchg
lds
jg
dec
call
and
adc
inc
in
notb
lahf
jmp
popa
nop
out
mov
loopne
dec
add
ret
cmp
pop
nop
outsl
movsl
ljmp
fists
sahf
movsb
adc
imul
int
insl
les
in
out
adc
mov
fwait
lods
mov
sar
sub
hlt
rclb
sbb
xor
test
add
nop
fbstp
or
ss
rolb
nop
fwait
in
inc
aas
or
mov
sbb
loope
or
fs
or
push
daa
das
sahf
test
lods
mov
xchg
cltd
nop
je
subb
jae
stos
call
fcomps
mov
nop
adc
out
xchg
ja
xor
sbb
xchg
call
jge
mov
cmp
nop
daa
sbb
outsl
jg
imul
pop
add
xchg
nop
pusha
lret
cmp
mov
mov
loopne
les
outsl
mov
aam
mov
and
rol
nop
pop
and
sub
push
inc
popa
in
dec
xor
repz
sub
repz
out
nop
lret
lret
in
xlat
xchg
and
xchg
push
or
nop
push
imulb
push
popf
dec
nop
and
xchg
ret
push
sbb
nop
mov
push
xor
jp
aam
dec
jnp
mov
nop
or
loopne
out
jbe
nop
jle
shrl
int
arpl
divb
orb
andl
je
icebp
cmp
stos
mov
or
cmc
mov
je
es
aam
and
mov
js
addb
cmc
push
pop
or
push
leave
push
shl
xor
pop
nop
push
push
in
fiaddl
cmp
jl
inc
pusha
nop
cmpsb
push
arpl
pop
sub
gs
mov
ds
loop
outsb
nop
or
jle
xchg
adc
nop
add
mov
aaa
fstpt
cmc
ret
inc
mov
cmp
addl
out
inc
iret
adc
nop
movsl
ja
add
pop
test
cmp
and
cltd
mov
mov
nop
sub
lock
adc
sbb
cltd
les
nop
mov
xor
fs
outsb
nop
mov
out
mov
jl
popf
jbe
ljmp
scas
decl
nop
rcrb
xor
jmp
leave
cmovb
xlat
aam
das
nop
and
sbb
or
and
adc
lcall
add
push
mov
xchg
nop
mov
sub
mov
or
mov
ljmp
dec
sub
enter
out
sti
lods
leave
jl
mov
mov
js
inc
aad
xor
push
nop
jo
inc
dec
add
mov
sbb
adc
jne
push
inc
data16
push
cmp
in
pop
add
xchg
and
orb
xor
add
loop
nop
repnz
add
or
push
fmulp
fmul
cmpsb
xchg
ret
cmp
jmp
hlt
xchg
test
or
ljmp
je
xorb
lds
inc
dec
shrb
mov
xchg
adc
mov
mov
mov
jl
dec
jge
test
cbtw
pop
or
mov
insb
sub
ja
rol
loope
lods
clc
sub
aas
push
or
or
xchg
push
mov
sbb
sahf
adc
stc
fdivrs
repnz
mov
add
fsubs
and
fdivl
jle
push
pop
out
push
scas
hlt
xor
cmpsb
cmp
or
dec
nop
mov
and
fsubr
nop
jge
dec
xor
push
loop
push
push
mov
std
jne
cmp
mov
push
jbe
sarb
jns
jecxz
aaa
dec
negl
sub
lods
nop
or
push
cmpsl
scas
fimull
push
jo
ja
aas
xchg
mov
xchg
leave
dec
mov
and
fst
mulb
dec
pop
lea
mov
ret
addr16
add
gs
repnz
and
je
xor
sub
movsl
inc
mov
cmp
inc
shl
out
nop
aam
sub
cmp
cmp
xor
add
and
pop
cmpsb
mov
rcr
dec
xor
aam
out
inc
adc
imul
xor
xchg
in
in
mov
add
mov
fisubs
nop
dec
mov
mov
ja
adc
or
xor
jb
add
adc
jno
fwait
mov
xchg
test
dec
enter
cld
sbb
cmp
jb
adc
inc
mov
std
test
shlb
add
xsha1
cmpsb
lret
mov
mov
xorb
mov
enter
mov
rcrb
mov
ds
enter
aas
push
xor
cmp
dec
and
scas
nop
fstpt
enter
xchg
aam
adc
xchg
inc
jae
mov
test
lret
xchg
jmp
add
in
les
lock
pusha
xchg
xchg
fimull
loopne
inc
push
fs
xchg
bound
jp
push
adc
clc
push
pop
adc
mov
ljmp
inc
mov
lea
push
xor
inc
adcl
int3
cmpsb
and
mov
aad
es
push
pop
xlat
push
push
xchg
push
bound
xchg
pop
lea
mov
js
testb
insl
xor
sub
test
or
enter
mov
inc
mov
and
xchg
jne
mov
cmpsb
lea
mov
movsb
xor
imul
lods
dec
mov
pop
mov
mov
mov
movapd
adc
jbe
and
pop
sbb
jmp
leave
sub
in
push
sub
sbb
nop
mov
add
in
nop
dec
dec
lret
les
inc
lahf
fsubrl
fadds
pop
jne
rclb
xchg
add
and
jno
les
lcall
push
xor
rclb
addr16
and
cmpsl
arpl
push
mov
mov
xchg
loop
call
lock
nop
mov
xlat
test
mov
push
lcall
jl
xchg
sub
and
adc
adc
sub
imul
shl
jne
lods
ss
jle
sbb
out
rorb
iret
addr16
scas
sub
xchg
nop
inc
and
push
cwtl
test
lret
clc
jbe
nop
lcall
in
roll
nop
mov
pop
add
inc
cmp
nop
adc
add
and
lahf
push
fildl
div
outsb
cld
aaa
nop
das
movsl
sarl
arpl
jns
dec
or
ret
test
jbe
mov
cmp
xor
push
nop
out
aaa
or
gs
sub
sub
pop
ljmp
mov
outsb
sub
fisttpll
test
lods
sbb
and
and
push
jbe
loopne
repz
shlb
push
adc
loopne
mov
adc
jge
iret
hlt
addr16
adcb
and
cmp
dec
orb
adc
es
aam
sahf
adc
add
movsb
add
fdivs
push
lods
adc
mov
orl
shlb
scas
pusha
inc
cmp
or
hlt
mov
lahf
nop
rcl
push
test
mov
xor
mov
testb
lcall
sti
cmpsb
popf
nop
arpl
push
movlps
jg
xor
xchg
xlat
nop
int3
cmp
xchg
or
addr16
cli
in
or
in
sub
nop
loopne
aad
ds
repz
out
in
ljmp
xor
nop
sbb
push
nop
lcall
adc
nop
and
lret
mov
rcl
mov
mov
mov
lods
jecxz
cmp
rolb
push
sbb
cmc
fmuls
pop
xchg
cs
sbb
es
xlat
xchg
test
stos
mov
xlat
rolb
outsb
xor
hlt
scas
out
mov
nop
lods
jae
cmp
mov
icebp
mov
fldt
lock
outsl
nop
fs
push
or
push
dec
cmp
mov
imul
data16
jecxz
jp
hlt
gs
lcall
aam
push
in
and
adc
cmpsl
add
sahf
adc
roll
fwait
xchg
fistl
or
mov
dec
lea
xchg
add
mov
xchg
mov
jmp
nop
pop
add
loope
nop
out
ss
mov
xor
cmp
nop
cmc
push
pop
mov
fistl
cmp
rorl
jne
dec
loop
shrb
pop
xchg
popf
cmpsb
xor
test
shrb
les
nop
sbb
push
jno
popa
pop
stc
adc
imulb
pop
fsubs
jb
xchg
rcrb
dec
and
and
stos
mov
xor
nop
out
imul
pop
jmp
mov
lods
js
push
jno
cmp
dec
sbb
clc
arpl
insb
fdivs
sarb
xor
sbb
mov
push
popa
add
xor
jmp
aam
sub
pop
dec
dec
nop
das
jbe
pop
mov
ds
jl
xchg
addr16
sub
pop
loope
nop
inc
adc
clc
ss
fs
inc
dec
prefetcht0
dec
adc
int3
lods
nop
xor
dec
or
cli
es
ficoms
sbb
mov
sub
add
and
pop
aas
cltd
add
popa
out
cmpsb
pop
jb
cmp
nop
ljmp
lea
in
nop
mov
xchg
loope
nop
scas
in
in
mov
stos
nop
push
aaa
pusha
xor
pop
outsb
iret
nop
fucomip
les
or
adc
cmp
daa
arpl
jle
mov
ffreep
sbb
ds
adc
xor
cwtl
pusha
aam
lods
cmpl
push
add
or
inc
aaa
mov
icebp
jns
out
mov
nop
enter
push
imul
clc
jae
push
nop
cwtl
xlat
cmp
xchg
mov
push
dec
sbb
jg
decl
dec
xchg
outsl
pop
jp
nop
push
es
arpl
xor
mov
pop
shll
into
ret
cli
xchg
mov
sub
arpl
adc
iret
add
push
push
sbb
nop
mov
jae
jge
jo
in
push
lcall
nop
sbb
mov
mov
adcl
ss
inc
jb
stos
repnz
xchg
cwtl
int
add
int3
sub
sarb
adc
nop
fsubrs
outsl
lea
add
nop
add
test
nop
pusha
add
loopne
jae
jge
cwtl
dec
jne
mov
lock
nop
pop
stc
push
or
cmpsb
insl
inc
nop
les
and
push
xchg
lret
mov
ret
cld
divl
scas
nop
outsb
adc
fisubs
stos
enter
movsb
sbbb
lods
nop
mov
mov
mov
scas
xchg
movb
mov
aaa
dec
mov
pop
nop
stc
faddl
scas
aaa
adc
add
cwtl
aam
mov
xchg
xor
and
ret
xlat
push
mov
push
dec
lock
or
xchg
in
vprotb
ficompl
movsb
in
nop
sarb
lock
push
xor
out
jp
in
nop
xchg
xchg
mov
inc
dec
adc
mov
sbb
mov
xor
push
in
addr16
xchg
ljmp
inc
xchg
fistps
repnz
mov
cltd
pusha
leave
nop
lock
test
or
popf
bound
leave
adc
int
nop
daa
add
in
scas
mov
popf
jl
nop
fldl2e
xchg
adc
push
mov
xchg
popf
ficompl
sub
or
int
test
cwtl
notl
inc
out
mov
addr16
pop
aas
jp
rcrl
nop
dec
jnp
inc
dec
popf
xchg
pop
or
int3
ror
stc
xor
cmp
roll
mov
daa
mov
nop
adc
mov
cmpl
pop
cwtl
xchg
jg
cli
nop
mov
push
icebp
push
sbb
cltd
fldl
arpl
rcr
sbb
jecxz
jecxz
pop
adc
bound
iret
ja
and
mov
jno
inc
cld
pushf
jle
nop
pusha
jge
mov
xor
call
or
seto
xor
sbb
sub
jl
jp
adc
stos
cmp
rcr
loopne
fisttps
movsb
rcrb
lock
sbb
es
xor
int
push
je
mov
pop
push
and
push
leave
repz
bswap
mov
imul
rclb
out
mov
xor
mov
or
mov
xor
sbb
inc
ret
xchg
out
xchg
mov
mov
xchg
movmskps
xchg
jl
inc
rcl
mov
fs
ss
out
popf
mov
rcl
test
cwtl
insl
mov
inc
xor
sbb
into
nop
pop
add
and
aad
in
mov
lock
jae
and
adc
faddl
mov
sbb
sti
add
nop
xor
mov
pop
int
adc
add
into
iret
nop
jae
push
mov
xlat
cmp
fistpll
sub
dec
adcb
nop
ss
call
fcmove
nop
cmp
mov
fstl
or
imul
dec
dec
sahf
lods
xchg
mov
in
insb
push
sbb
push
in
xor
fsubr
cltd
xchg
cmp
lock
mov
nop
xor
or
std
nop
sub
out
scas
adc
mov
mov
jns
push
int
imul
shll
outsl
cmpsl
das
mov
loopne
adc
nop
ja
je
xor
andb
add
lea
nop
insb
dec
adc
popa
enter
imul
loope
mov
inc
push
dec
xor
lret
or
xchg
pop
nop
int3
loope
call
mov
aam
rorl
push
andb
outsb
les
adc
out
xor
cmp
stos
add
sarb
cmp
pop
sub
lcall
arpl
insl
nop
scas
xchg
sub
fdivl
sbb
nop
jno
mov
nop
push
push
push
outsb
sub
rorb
nop
mov
mov
lret
cmp
loopne
outsl
nop
push
scas
call
xor
ror
test
fs
mov
mov
mov
jle
rolb
and
push
scas
adc
nop
push
xchg
jmp
cmp
cltd
stc
lods
jae
jno
add
pop
xchg
jns
nop
daa
push
add
into
push
or
nop
out
sbb
sbb
sbb
nop
scas
loop
dec
xor
int
dec
lds
cld
nop
sahf
push
push
and
ds
push
nop
gs
ss
inc
adc
cmp
sbb
inc
lods
xor
or
daa
rcrl
adc
jns
les
cltd
jge
nop
mov
aam
adc
push
xchg
nop
dec
enter
fmull
dec
push
jae
mov
dec
std
cmp
aas
nop
mov
fsubs
push
nop
bound
adc
add
xchg
xchg
push
nop
jnp
mov
filds
dec
mov
and
pop
xchg
rorl
ds
cld
mov
push
inc
fdivrl
aad
push
jns
jno
inc
pushf
sti
adc
scas
jb
add
inc
pop
xor
test
cmp
das
scas
popa
dec
insl
call
jl
push
shll
xchg
aaa
loopne
fidivrl
cli
test
in
lods
icebp
test
enter
fsubr
adc
jge
les
leave
mov
jno
adc
nop
xor
dec
lea
pop
test
cmpsl
imul
stos
cli
cmp
or
pusha
nop
es
push
and
nop
in
add
xchg
test
jnp
sub
imul
adc
mov
icebp
in
push
inc
lahf
mov
cld
inc
test
loop
mov
jbe
jae
pop
imul
mov
or
icebp
je
mov
and
aam
cmp
nop
xor
pop
lods
dec
inc
ja
pop
adc
pop
out
clc
add
jl
outsb
inc
fbld
lods
cwtl
imul
loopne
sub
mov
lahf
rcpps
nop
rol
or
mov
stos
test
je
mov
sahf
add
xchg
xchg
arpl
addr16
xchg
outsb
lahf
mov
nop
test
or
nop
out
ds
roll
leave
scas
jg
lcall
testb
nop
add
mov
insl
jo
daa
adc
addb
mov
arpl
ds
fadds
sbb
adc
xor
mov
xchg
jbe
mov
add
nop
cmp
cmpsb
mov
lahf
ret
rorb
mov
inc
cmpl
lock
cli
ja
add
pop
and
pop
nop
mov
cmp
dec
or
and
sti
sbb
fwait
sbb
cwtl
lcall
imul
jl
mov
sbb
clc
xchg
cmp
cmpsl
daa
push
sbb
dec
lods
pop
mov
in
stc
nop
fistl
rcll
lods
xchg
adc
enter
cwtd
or
popa
and
repnz
lahf
repz
inc
scas
lret
imul
mov
adc
mov
jns
orb
add
xchg
pop
xor
repz
lock
sbb
inc
xchg
in
sti
orb
xor
or
cld
mov
push
popf
sar
movsb
in
int
decb
mov
sub
adc
in
push
sbb
aaa
jle
orl
aaa
cmpsb
dec
notb
mov
push
pop
lea
adc
cltd
jge
xor
mov
mov
pop
jae
loop
scas
lock
push
test
jo
lods
pusha
and
out
les
movsb
cmp
adc
mov
clc
aas
outsb
out
nop
sarl
adc
pushf
fcmovnbe
nop
sbb
inc
pop
icebp
cmp
data16
sub
pop
mov
rcrb
je
notl
xor
std
fldt
ja
push
pop
repnz
xchg
cmpsl
lret
enter
nop
daa
jecxz
jae
xor
addr16
cltd
fisttps
gs
xor
stos
xor
pusha
cmpsb
pop
mov
jmp
adc
enter
movsl
nop
jne
add
lds
leave
into
nop
xor
arpl
nop
pop
jb
adc
mov
xchg
xchg
dec
adc
or
mov
icebp
popa
adc
les
sti
aam
pop
or
out
inc
xchg
and
dec
or
fcmovnb
mov
ret
aas
xchg
xchg
add
into
aad
js
mov
inc
mov
cwtl
cld
inc
mov
nop
xchg
push
test
fstl
scas
sub
fwait
hlt
lret
mov
vmwrite
jmp
mov
pop
xor
cmp
mov
or
insb
push
test
add
sub
pop
jb
nop
iret
into
inc
fwait
mov
jmp
mov
pop
jbe
adc
mov
mov
insl
in
xchg
rorb
sub
lock
mov
cli
loop
hlt
nop
cmp
faddp
mov
nop
dec
in
in
out
loop
nop
jg
adc
nop
rolb
out
fldcw
das
nop
pusha
or
les
lock
cmpsb
cmc
mov
adc
lock
xchg
or
popa
clc
icebp
test
pop
add
mov
xchg
lock
lock
dec
nop
lret
mov
aaa
xchg
xchg
nop
xor
cmp
xchg
mov
das
add
jno
shlb
add
or
xchg
faddl
xchg
mov
shlb
push
pop
sub
and
jl
push
xchg
add
pop
xchg
add
nop
test
into
leave
xchg
icebp
lods
stos
and
sbb
xchg
sbb
mov
js
jnp
mov
les
cmp
jmp
mov
loopne
nop
sbb
or
nop
filds
adc
clc
xchg
ljmp
fwait
sub
ud1
xor
push
nop
jnp
mov
add
mov
aad
shll
rol
jns
ret
dec
leave
stos
xchg
popa
das
or
lods
and
add
roll
dec
icebp
into
mov
cmpsb
mov
ror
aaa
inc
or
pop
adc
pop
sub
inc
mov
push
mov
add
adc
jo
pop
xor
xchg
push
andl
iret
jecxz
nop
dec
pop
pop
into
pop
scas
jge
nop
arpl
push
sub
mov
dec
insl
nop
dec
cwtl
xchg
adc
in
mov
sub
push
lret
hlt
movsb
and
nop
jle
je
xlat
mov
inc
fisttpll
cmpsb
stos
nop
stc
sbb
ds
cmpl
xor
pop
out
test
and
loop
arpl
mov
dec
pop
adc
adc
push
nop
mov
mov
mov
xchg
push
xchg
fdivl
icebp
leave
mov
popf
fst
xchg
sbb
and
nop
mov
pop
cmp
pop
stc
mov
jns
out
xchg
je
cmc
dec
pop
xchg
andb
adc
scas
dec
data16
nop
arpl
lock
pushf
adc
fsubrl
aas
inc
and
je
nop
enter
int3
fdivrs
cld
inc
fiaddl
or
cmpsb
lcall
inc
nop
mov
push
xor
outsb
pusha
lcall
std
dec
jo
cwtl
nop
sbbb
pusha
lret
or
cmp
mov
stos
xor
jmp
inc
mov
outsl
loop
adc
inc
movsb
lret
out
bound
fmull
mov
cmp
mov
lcall
jge
mov
cli
cmp
sbb
mov
fdivrs
icebp
adc
push
adc
push
fs
sarl
jg
or
inc
mov
pop
repnz
adc
mov
add
pop
push
nop
and
andl
lods
mov
cltd
aam
stos
xchg
nop
fadd
fdivrl
sub
add
ja
push
lds
sbb
inc
inc
rclb
loope
rorb
loop
xor
dec
ja
jbe
inc
nop
push
loop
push
nop
shlb
cmp
fildl
xlat
jo
nop
int
rclb
ljmp
clc
scas
sahf
fucom
jg
adc
pop
xor
inc
test
sbb
jne
roll
adc
fucomi
dec
nop
jb
cmp
jae
push
push
cmpb
in
xor
insb
jno
ror
repnz
les
pop
mov
mov
push
push
mov
out
nop
out
es
pop
arpl
nop
lret
cmp
dec
mov
mov
std
nop
leave
bound
or
jle
jmp
and
in
les
mov
mov
or
in
jnp
mov
mov
icebp
or
popa
mov
add
arpl
shlb
jecxz
cmc
jmp
cld
push
cmpsl
inc
push
nop
fnstcw
ret
xchg
pop
mov
dec
nop
jle
jecxz
leave
jmp
or
int
and
sbb
imul
sbb
mov
scas
repnz
mull
nop
jae
adc
aam
iret
add
cwtl
rol
xchg
push
es
sub
scas
push
repz
push
pop
nop
enter
scas
jg
insb
nop
test
jo
nop
mov
outsb
shll
scas
popf
imul
std
xor
xlat
movsb
add
sub
scas
insl
rcr
pop
dec
pop
nop
sub
ret
inc
outsl
lods
cmc
nop
xor
dec
sbb
lret
xor
subb
push
jge
dec
subl
roll
loopne
nop
shll
scas
inc
mov
nop
movsl
jge
xchg
test
rcrl
xchg
nop
cmp
mov
mov
ljmp
lock
lret
in
gs
sub
fidivrs
cs
xchg
shlb
mov
xchg
mov
hlt
dec
les
rcrl
lock
decl
xor
aas
dec
div
dec
aaa
ds
fisttpl
pop
or
nop
sahf
shrb
ss
mov
adc
scas
lahf
pop
icebp
mov
dec
rorb
adc
or
lret
jbe
mov
in
lahf
test
mov
jp
in
nop
push
xchg
adc
adc
push
mov
add
shrb
or
loope
pop
ret
xor
mov
iret
pop
push
sahf
jns
es
and
mov
leave
in
loop
ja
shlb
mov
es
mov
sub
mov
adc
mov
sub
cli
jo
push
jge
mov
lock
in
jnp
sbb
sbb
cmp
jmp
or
jecxz
pop
in
inc
fstps
pop
hlt
mov
imul
gs
mov
popa
nop
ret
in
divb
and
sub
push
inc
sti
lret
lock
test
adc
lcall
adc
test
mov
enter
nop
jp
dec
or
and
mov
mov
pushf
inc
roll
or
pop
xor
ret
enter
nop
xchg
or
andl
mov
mov
mov
xchg
mov
adc
test
xchg
cs
jmp
push
jmp
aam
pcmpeqd
loopne
dec
out
sarb
xchg
fs
aas
ficomps
sub
xchg
out
sbb
dec
ja
push
adc
in
iret
mov
pop
mov
out
rolb
repnz
and
test
lret
mov
push
lds
push
dec
lea
in
or
stos
jnp
out
loopne
and
push
sub
pop
mov
dec
enter
nop
xchg
ret
mov
push
insb
scas
pop
sub
lahf
jno
fsubl
inc
cs
shlb
out
in
xor
cmp
mov
cmp
call
nop
std
push
lcall
xchg
pop
leave
out
or
pop
decl
arpl
push
mov
rclb
adc
pop
ss
mov
mov
out
call
ret
mov
xlat
add
dec
xchg
mov
xchg
leave
mov
pop
or
sarl
enter
mov
insl
loopne
data16
mov
fistl
and
add
or
sub
fsub
test
and
in
or
and
jb
into
arpl
add
mov
lods
pop
je
adc
sahf
in
mov
lock
loop
nop
dec
mov
and
iret
adc
push
sbb
ds
lock
push
inc
xor
les
test
adc
jb
je
stos
rolb
cwtl
nop
xchg
cmp
and
ret
adc
jge
adcl
adc
int3
in
rcll
mov
xor
rclb
dec
repz
ljmp
push
scas
leave
imul
in
adc
mov
xor
nop
and
dec
lret
sbbb
insb
repz
shlb
cli
fsts
jns
mov
out
mov
nop
add
jecxz
jbe
sbb
inc
nop
sbb
das
nop
fwait
cmpl
aas
inc
xchg
sbb
dec
cmp
or
or
pop
mov
flds
pop
pop
insl
cwtl
xchg
nop
es
sbb
adc
mov
jg
sub
stos
adc
aas
shlb
shr
and
mov
pop
lods
lret
xor
sub
nop
mulb
ret
mov
js
stc
and
addl
dec
imul
mov
add
lds
mov
pop
sbb
fcomip
cmp
movsl
adc
sub
cmpb
in
inc
push
add
fdivrp
nop
push
int
dec
cs
mov
sbbl
pop
stos
sbb
mov
push
jo
in
adc
call
or
lock
xchg
pop
into
add
test
mov
mov
jmp
inc
mov
xchg
clc
mov
pop
lcall
mov
add
enter
push
ficompl
mov
push
and
and
pop
cmp
mov
fs
nop
push
xor
inc
cmc
mov
or
mov
scas
nop
mov
add
push
ret
movsb
iret
fisubrl
cmp
cld
loope
daa
adc
call
pushf
pop
push
aad
out
loop
or
in
cmp
repnz
nop
pusha
pop
lock
out
jge
negl
xchg
int3
mov
ret
mov
test
les
rcr
gs
inc
imul
mov
inc
push
aam
jns
xor
andb
jmp
jge
inc
xor
xor
nop
les
lds
nop
push
imul
insl
pop
cmp
js
negl
push
adc
sub
fdivs
adc
inc
imull
cmpsb
hlt
add
cmp
dec
out
jl
or
mov
xchg
dec
lock
xchg
lods
int3
inc
mov
sti
imul
sub
inc
adc
mov
hlt
add
cmp
cmp
icebp
arpl
sbb
hlt
sti
loop
adc
ljmp
push
scas
adc
fisubrl
mov
shlb
rcll
out
int3
aad
nop
pop
xchg
sub
in
in
adc
pop
xchg
fsubs
cmp
mov
mov
lahf
pop
data16
mov
daa
out
fs
cmp
call
push
bound
rep
rcrb
xor
adc
inc
cmc
lcall
inc
shlb
stos
add
nop
in
ficoml
mov
int
addb
cmp
fcmovnb
incl
push
jns
mov
nop
out
or
repz
movsl
jp
into
out
ret
jne
adc
std
mov
push
nop
and
dec
ljmp
movsl
xchg
xor
mov
and
out
lock
jl
jae
nop
mov
or
cmovns
outsl
nop
enter
mov
shrb
in
shrb
addl
push
lds
dec
adc
push
or
cwtl
pop
mov
rcr
fwait
or
ja
pop
loope
dec
xchg
add
pusha
mov
jl
jg
pop
xchg
pop
cmpsb
nop
in
test
add
inc
push
pop
mov
rcll
fs
adc
xor
in
lods
inc
push
shrb
nop
add
fiadds
add
mov
test
aad
adc
nop
fiadds
addl
pop
or
or
mov
aad
push
xchg
out
in
js
mov
nop
xchg
dec
xchg
pop
leave
mov
xchg
fldcw
roll
addr16
nop
sub
jecxz
nop
je
rcrb
nop
pop
inc
mov
push
dec
cmp
xlat
mov
pop
add
jno
lock
into
xchg
or
add
insb
add
sbb
std
lcall
push
pop
dec
jmp
jl
cmp
cmp
out
add
and
push
mov
pop
lea
mov
xchg
sub
mov
mov
jnp
xchg
cs
sbb
or
xchg
nop
hlt
and
insb
xchg
mov
sbb
ror
dec
test
lahf
pop
repz
add
nop
int
jno
push
into
mov
jmp
cmpsb
fsts
sahf
stc
icebp
mov
xchg
je
pop
cltd
cmp
xchg
insl
jo
hlt
pushf
mov
sahf
mov
rclb
fisubs
orl
fmulp
enter
xlat
dec
jo
nop
jl
or
add
inc
adc
cmp
lods
adcb
out
mov
nop
addr16
lcall
and
adc
out
nop
clc
jb
sahf
mov
adc
nop
repnz
adc
nop
flds
sub
add
xchg
inc
or
int3
mov
loopne
adcb
mov
rorb
mov
out
dec
nop
aaa
jle
pop
adc
xchg
sti
mov
and
imul
out
nop
fnstcw
rclb
icebp
nop
in
sti
cmpsl
push
mov
xor
pop
nop
pushf
dec
arpl
pop
mov
push
pop
add
clc
outsl
or
lds
nop
mov
lods
adc
pop
bound
hlt
jb
cmp
mov
or
jmp
sbb
mov
aaa
adcl
mov
add
sub
outsb
adc
inc
or
dec
cs
mov
sub
inc
loope
jae
lcall
jmp
jb
cld
pop
sbb
loopne
nop
adc
outsb
mov
jge
mov
or
add
gs
sbb
inc
nop
adc
mov
mov
nop
data16
jne
call
outsb
nop
mov
pusha
pop
xlat
and
movsl
add
jnp
sub
cltd
add
ret
rclb
jmp
nop
testb
insl
nop
add
sti
jge
outsb
jp
cwtl
ss
pop
sbb
int
out
mov
mov
lahf
shl
les
lret
outsb
nop
ret
fbld
cld
dec
or
jmp
fst
push
lea
lret
jno
imul
jns
mov
push
lds
pop
nop
cmp
imul
sbbl
nop
push
jg
jnp
sti
das
nop
push
inc
rcrb
nop
ja
loop
lret
daa
push
cmp
add
lods
test
adc
push
ss
mov
shl
imull
and
mov
outsl
aas
push
imul
cmovp
adc
lock
daa
xchg
nop
jne
mov
and
nop
cs
notl
jmp
mov
mov
sahf
dec
cli
or
out
xchg
fdivrp
clc
add
std
ret
movsb
loope
ja
imul
div
lahf
aas
and
xchg
push
nop
scas
mulb
or
nop
cmp
adcb
cmp
insb
bound
xor
pusha
das
out
fbstp
nop
je
or
nop
outsb
inc
mov
add
sbb
rcrl
shlb
cmp
test
rcrl
cmp
scas
stos
xchg
and
fsts
mov
loope
call
adc
or
jle
aaa
add
sbb
nop
mov
and
mov
fwait
mov
xor
mov
incl
das
fwait
nop
cmp
cmp
idivl
jge
idivb
aaa
fadds
arpl
into
fidivs
xchg
inc
push
mov
xor
sbb
mov
inc
jg
ret
rclb
push
jnp
mov
adc
dec
nop
fwait
out
adc
fbstp
lock
or
pop
xorl
shll
insl
das
test
aad
adc
test
int3
push
sub
add
test
mulb
mov
cs
aam
les
sub
xor
xchg
push
mov
inc
into
repnz
jmp
adc
add
push
adc
repnz
inc
inc
in
loopne
adc
cmp
cmpsb
rolb
and
sub
imul
fcoml
popf
pop
cmp
xor
jb
and
loop
nop
xor
or
add
xorb
sub
nop
pop
jg
lods
mov
mov
and
in
xlat
nop
mov
push
lahf
or
nop
xchg
push
scas
adc
sub
sub
enter
xor
mov
rcl
mov
jbe
nop
sbb
cmpsb
dec
nop
jg
test
repnz
pop
pop
xchg
das
addr16
pusha
gs
xor
in
int3
mov
hlt
shr
pop
or
test
lret
icebp
jns
aas
add
les
rolb
outsb
adc
or
cld
jg
mov
sbb
notb
xchg
dec
bound
push
lock
sub
roll
cld
sub
pop
hlt
mov
stc
ficoml
xor
in
mov
add
andl
or
nop
dec
lods
stc
pop
jbe
dec
mov
mov
shrb
xorl
xor
jae
sbb
aaa
dec
mov
cmp
inc
xor
xchg
fcom
jae
outsl
nop
jb
dec
fistpl
lahf
mov
insl
ljmp
out
nop
je
mov
cmpsl
or
iret
fdivp
daa
jp
and
push
loopne
jnp
ds
addr16
mov
nop
outsl
xchg
sub
cwtl
aad
loop
into
mov
cmc
enter
mov
imul
nop
stc
lahf
clc
into
in
xor
sbb
cwtl
jp
add
cmpsl
loop
or
repz
mov
or
flds
in
nop
mov
out
testl
or
adc
sar
xor
dec
into
imul
sahf
movsb
xlat
add
and
dec
shll
add
decb
push
loope
nop
and
or
jnp
mov
mov
jmp
jns
inc
setp
mov
nop
fidivl
adcb
jnp
xchg
or
int3
loop
and
addr16
aam
orl
dec
out
push
nop
sub
xor
std
inc
lret
hlt
sub
push
loopne
rclb
mov
mov
shlb
pop
fists
xchg
push
jae
lock
inc
xchg
add
nop
xchg
adc
test
add
pop
xor
nop
sub
shlb
mov
lret
fsubrp
out
in
data16
nop
rcll
test
nop
ret
out
testb
jecxz
clc
and
mov
idivl
fidivs
nop
sbb
xor
dec
sub
ret
nop
rcr
fists
imul
nop
push
lahf
mov
sbb
push
and
popa
dec
stos
mov
cmp
nop
es
clc
push
jmp
pop
gs
int
jb
xchg
xor
imul
cmp
pop
sar
sub
stos
test
fbld
jbe
mov
nopl
dec
repz
loope
mov
adc
sarb
enter
nop
dec
jno
shl
push
nop
call
mov
sti
fnstsw
sbb
push
outsb
fstp
enter
xchg
jnp
out
fwait
jne
pop
out
xchg
xchg
jo
cmpps
popa
jecxz
shrb
shl
imul
data16
rolb
je
push
mov
mov
pushf
shl
jbe
and
pop
nop
cs
repnz
mov
cmp
mov
stos
jbe
cmp
and
nop
push
jo
jle
inc
mov
nop
pushl
aad
nop
and
xlat
adc
repz
xor
fs
outsl
int3
int
in
inc
sub
pop
and
xor
lds
pop
nop
test
nop
popa
dec
mov
fimuls
inc
nop
lcall
xchg
inc
decb
and
mov
xchg
xor
lcall
enter
les
repz
lret
nop
loope
js
in
cmpsb
pop
nop
mov
bswap
popf
pop
imul
lcall
out
jecxz
sub
pop
sbbl
push
repnz
lock
jno
or
mov
push
daa
sub
cs
scas
or
je
jae
faddl
lock
push
aam
push
aad
enter
xor
ja
xchg
rclb
repnz
fmul
es
fcoms
fst
push
mov
or
lods
pop
adc
mov
push
stos
push
ss
push
leave
mov
jae
mov
mov
mov
cs
fildl
fisubrl
nop
lret
xchg
mov
std
cmp
jl
xchg
xchg
lock
dec
inc
nop
cmp
loope
insb
nop
sbb
leave
pop
pop
add
int3
into
int
subl
fbld
out
f2xm1
adc
jne
cmpsl
sub
enter
nop
cs
adc
dec
inc
sti
mov
dec
add
pop
xor
fdivp
mov
jl
scas
shlb
mov
mov
pop
cmpsl
je
int
dec
adcb
loopne
fistl
add
rorb
lret
in
adcl
sub
mov
or
sbb
arpl
cmp
pop
sub
jne
stc
outsb
mov
mov
xor
jno
scas
fwait
jo
out
adc
testl
mov
daa
mov
loopne
adc
lock
subl
xchg
xor
add
pop
pop
xchg
jmp
pushl
fcmovbe
rorb
nop
cli
pop
dec
dec
lret
das
push
dec
bound
mov
adc
subb
push
sbb
lods
xchg
cwtl
loop
dec
jne
cmp
outsb
aad
dec
add
stos
repnz
sti
dec
or
adcb
jmp
xlat
enter
fsts
rclb
orb
adc
insb
in
cmp
adc
fnstsw
icebp
sbb
pop
arpl
jle
dec
nop
sub
push
push
mov
nop
dec
ds
nop
rclb
andl
je
inc
fildl
or
sbb
jns
jmp
mov
mov
daa
std
ljmp
push
fs
outsb
mov
jnp
out
mov
inc
xchg
nop
jl
imul
repz
fadds
and
ret
inc
push
nop
sbb
movsl
sub
inc
mov
nop
int
mov
addr16
pop
loopne
sub
fidivl
aad
jecxz
mov
or
cltd
decb
insb
cwtl
mov
inc
xchg
push
adc
xchg
adc
mov
jl
dec
nop
adc
push
gs
nop
push
xchg
sbb
jno
subb
fs
and
rcl
es
jae
inc
aad
fsub
insb
adc
nop
flds
pusha
pop
add
outsl
int
pop
inc
and
bound
pop
std
xchg
cli
and
repnz
push
mov
jne
adc
fst
lcall
xor
cmp
cld
jmp
jbe
add
fiadds
xlat
pusha
ljmp
outsl
cmpb
push
inc
adc
add
jg
xchg
roll
popa
idivb
mov
sbb
mov
aad
stos
and
inc
mov
pop
cmp
js
jge
fsubl
push
inc
mov
movsb
mov
jl
push
pop
xchg
arpl
lcall
fstps
push
and
cmp
nop
inc
adc
in
shll
adc
mov
repnz
sub
std
adc
rcll
push
cmp
leave
lods
cmp
mov
enter
subb
pop
dec
sbb
imul
leave
stos
cltd
lods
aam
adc
scas
mov
sbb
xchg
nop
dec
fiadds
push
or
sub
dec
pusha
sarl
outsl
adc
lods
mov
andl
bound
nop
mov
jbe
shll
dec
nop
daa
fs
sub
loope
and
sub
std
nop
mov
enter
out
ds
cmp
pop
shlb
nop
fisubrs
out
nop
sar
addb
add
aam
nop
hlt
je
outsb
sahf
mov
fdivr
nop
scas
inc
inc
pop
insl
mov
nop
std
loope
jle
cmp
pop
nop
out
mov
ret
nop
pop
rcrl
clc
or
sbb
mov
cmpb
jne,pt
out
nop
push
push
xchg
nop
inc
aaa
idiv
cmpsl
mov
adc
add
cwtl
pop
mov
pop
push
cld
les
adc
ret
push
mov
dec
push
mov
xor
lock
adc
push
dec
mov
nop
ret
cmpsl
in
and
mov
pushf
aad
mov
nop
ret
int3
pop
mov
mov
pop
pusha
jns
xor
pop
push
or
enter
xchg
xchg
lock
nop
int3
dec
or
lcall
shll
lahf
xchg
nop
test
or
push
push
nop
push
test
mov
cmp
xlat
les
mov
adc
add
cwtl
out
jge
mov
mov
sahf
paddusb
or
in
std
shlb
fdivp
fistps
aaa
sub
enter
outsl
nop
arpl
mov
adc
mov
xor
lods
nop
repnz
lods
sub
cmp
jecxz
data16
jb
in
jmp
pop
iret
adcl
fwait
testl
shl
pop
imul
nop
sub
or
mov
pop
into
pop
loopne
jecxz
nop
pop
jb
das
push
cmc
mov
out
jbe
cmpl
xchg
adc
adc
and
push
je
nop
inc
adc
and
pop
ss
mov
sbb
movsb
fcomps
dec
rolb
push
or
pushf
mov
ds
stc
or
mov
push
outsb
mov
mov
nop
and
in
dec
xor
add
mov
adc
sub
aam
cmc
adc
jnp
loopne
push
lods
sbb
cmp
stos
adc
nop
test
lods
sbb
adc
nop
aam
xor
leave
xchg
pop
or
push
ss
je
and
test
nop
clc
int
push
jae
xchg
js
push
nop
lea
in
nop
test
and
dec
add
adcl
repnz
cltd
nop
inc
cmp
push
cmp
dec
dec
adc
add
test
mov
add
lret
mov
mov
and
and
push
loope
lods
inc
push
nop
adc
mov
push
in
dec
nop
xchg
les
dec
sbb
and
sub
sbb
pop
adc
add
push
inc
or
scas
sbb
enter
adcb
testl
sub
fs
jecxz
pop
aad
mov
push
nop
or
adc
add
outsb
mov
or
insl
inc
push
cli
mov
nop
xchg
jg
adc
insb
mov
xchg
nop
out
test
mov
aam
fs
pop
or
and
nop
into
jns
das
lods
lock
nop
outsb
rclb
je
es
add
push
jg
jns
rcll
xor
add
leave
adc
pop
in
fimull
nop
mov
add
arpl
pop
jo
movsl
or
mov
pop
loope
shrl
cs
jl
pusha
adc
sub
sbb
xchg
clc
fistpl
and
std
or
or
call
nop
sbb
cmpsb
nop
movsl
push
cltd
pop
mov
adc
nop
lret
ret
sti
push
push
nop
push
jo
xchg
and
inc
loop
pushf
lock
jne
fisubrs
loop
xchg
in
fwait
sub
rcrl
xchg
mov
push
clc
adc
jmp
fistps
dec
push
test
cmp
xor
fs
xor
mov
push
push
mov
mov
nop
lds
daa
pop
fstl
mov
repz
add
fdivl
loopne
nop
mov
inc
fsubl
clc
push
fcoms
adc
sbb
or
push
jecxz
inc
sti
nop
movsb
das
and
push
sbb
nop
daa
mov
jne
or
mov
loop
mov
es
fcoms
outsl
or
adc
nop
dec
ss
cmp
push
push
add
repnz
push
shl
shrb
pushf
loop
data16
mov
xchg
inc
inc
push
cmp
sub
or
dec
pusha
mov
mov
nop
int3
loope
imul
jmp
xlat
lock
cmc
xchg
repz
adc
push
mov
ret
add
xchg
push
nop
inc
test
rcl
cmp
cmp
cwtl
in
mov
or
and
pop
cmpsl
mov
stos
xchg
pusha
nop
flds
mov
popa
or
nop
nop
in
or
jbe
sub
sahf
xchg
leave
and
jp
das
pop
mov
inc
nop
mov
add
in
fsubrs
nop
and
orl
push
nop
in
mov
aad
adc
clc
dec
cwtd
mov
call
sar
or
cmp
loopne
jmp
pop
enter
sbbl
nop
sti
outsl
cmpsl
out
inc
fcoms
xchg
xchg
in
sub
nop
stc
stos
stos
mov
leave
mov
inc
push
xchg
xchg
in
adc
or
test
enter
jae
bound
lock
xchg
test
jle
cmpsl
shr
mov
mov
sbb
xor
push
stos
js
aad
pop
xchg
test
and
nop
sbb
inc
lods
loopne
scas
and
nop
out
scas
cmp
lods
stos
adc
aam
ja
nop
arpl
hlt
xchg
nop
enter
sub
jnp
bswap
jns
mov
dec
stos
adc
nop
cs
mov
sub
clc
push
add
adc
lock
stc
jle
nop
cmp
sbbl
test
nop
fisttps
push
lahf
adc
in
or
shlb
inc
shlb
es
cmpsl
sub
xor
mov
mov
js
jl
adc
sbb
dec
or
push
lock
lcall
ss
xor
sbb
gs
mov
jle
in
test
xchg
bound
stos
jns
cltd
aam
fbstp
rcr
pop
cmc
push
pop
movsl
cmp
mov
jg
mov
in
xchg
mov
nop
in
enter
adc
test
inc
xor
iret
sub
mov
mov
in
add
nop
insl
jp
andb
add
sbb
test
call
push
pop
jae
push
mov
nop
imul
push
jmp
and
loopne
inc
pop
or
and
jb
imul
pusha
rcrl
test
push
lock
xchg
data16
popa
add
pop
xchg
test
nop
pop
sbbb
les
daa
cmp
cmpb
out
mov
dec
rorb
pop
ret
nop
fwait
jecxz
xchg
rclb
pop
dec
mov
mov
pushf
fildl
icebp
nop
int3
imul
lock
xchg
cld
lods
xchg
fists
sbb
loopne
out
lds
imul
ja
and
mov
push
ret
xor
mov
loop
push
cmp
jo
cmc
rclb
adc
ret
arpl
popa
adc
mov
nop
lahf
gs
adc
repz
stos
pushf
nop
ja
lds
nop
aaa
xchg
std
into
add
push
cmp
ljmp
das
nop
pop
cltd
mov
cmp
sbb
repnz
scas
or
cmpsb
rclb
mov
and
in
lret
dec
imul
adc
sti
add
fisubl
hlt
aas
xchg
sub
pop
sbb
mov
cmp
add
arpl
jne
imul
out
in
add
clc
push
fistpl
sub
stos
int
in
push
fs
mov
je
lock
jl
rclb
xchg
add
and
out
mov
ljmp
cld
mov
nop
adc
xchg
mov
cmp
mov
mov
nop
subb
std
and
mov
outsl
cmp
adc
flds
cmpb
lods
xchg
adc
lock
negl
movsb
adc
js
xor
mov
xlat
nop
int
addb
inc
push
dec
nop
and
rcrb
sbb
scas
nop
inc
mov
divb
mov
inc
pushf
lahf
addb
repz
pop
sbb
mov
imul
mov
mov
scas
or
nop
out
fistpl
idivb
lock
inc
push
xchg
loop
jo
xchg
outsl
cmpl
nop
pop
ja
mov
push
mov
sub
rcll
lret
mov
nop
and
ljmp
adc
push
insl
mov
rcr
and
mov
rcll
xchg
stos
dec
aad
lods
scas
in
add
fcoms
xchg
nop
adc
push
sahf
shlb
and
into
push
sub
nop
cli
cmpsb
in
push
and
mov
sbb
out
or
cltd
add
aam
fmuls
mov
sbb
xchg
bnd
mov
inc
xchg
add
hlt
and
int
scas
lcall
lcall
loop
rdpmc
xchg
add
dec
add
sbb
dec
push
lock
ret
sub
adc
push
adc
call
ja
or
pop
ret
nop
dec
jge
out
mov
stc
jbe
cld
jmp
push
andb
dec
mov
sub
nop
sti
stc
mov
in
nop
dec
pop
cltd
fs
sub
int3
or
inc
pop
dec
and
nop
out
sbb
enter
inc
add
mov
or
inc
xor
test
push
les
mov
repz
fistl
sarb
popf
push
pop
xchg
sbb
jl
nop
jb
dec
adc
arpl
mov
shll
push
adc
fwait
push
repnz
nop
in
or
arpl
jnp
inc
nop
out
mov
pop
mov
sbb
decb
dec
dec
lahf
jmp
inc
inc
nop
jne
into
cmp
insb
imul
adc
nop
scas
negb
mov
push
mov
jns
adc
sbb
push
ss
dec
inc
add
arpl
mov
cs
sub
pop
lret
mov
or
shll
jne
dec
mov
adc
dec
shl
lret
nop
mov
push
loopne
adc
dec
adc
adc
push
or
not
shlb
mov
shrb
pop
mov
enter
outsb
ficomps
dec
lret
pop
sub
addr16
push
push
loop
and
nop
test
xchg
nop
bound
jae
push
or
out
enter
add
out
out
cs
inc
nop
pop
mov
nop
movsl
cmc
lds
nop
jecxz
fstp
add
pop
lcall
xchg
nop
dec
pop
inc
mov
adc
or
sub
nop
mov
xor
ret
sbb
outsl
cs
mov
movb
cmp
push
ss
cmc
mov
data16
bound
sub
cmpsl
mov
adc
mov
xor
dec
push
adc
rcrb
loop
jne
nop
dec
cmp
repnz
mov
pop
jbe
nop
or
imul
clc
adcl
nop
or
mov
nop
faddl
push
fimuls
fisttps
cmpl
xchg
sbb
inc
add
adc
nop
stos
push
mov
das
cmp
faddl
icebp
ja
xor
cmp
daa
pop
or
mov
out
xchg
pop
pushl
nop
icebp
fwait
cmpsb
inc
or
fsubs
fcomip
cmpsw
cltd
inc
sub
test
flds
lods
jo
nop
jg
sbb
mov
jecxz
dec
and
and
push
jae
mov
dec
adcl
mov
mov
or
in
fcoml
xchg
pop
nop
inc
dec
sbb
nop
je
mov
xchg
nop
dec
jno
xchg
xor
aaa
iret
push
cmp
jne
adc
and
clc
xchg
sub
addr16
sbb
add
mov
aam
rorb
nop
add
add
pushf
ffreep
nop
iret
lock
movsl
test
pop
nop
push
shlb
xor
adc
dec
nop
mov
sbb
ja
or
dec
test
aas
jecxz
xlat
xchg
rclb
rorb
pop
push
sub
adc
int3
int
adc
pop
in
sbb
scas
push
nop
xorb
nop
mov
inc
aam
nop
stc
fildll
push
mov
nop
nop
xchg
mov
notl
loopne
nop
xor
inc
imul
insl
or
adc
push
sbbl
js
lea
xchg
mov
iret
mov
cwtl
push
xor
gs
xchg
repz
jle
pop
fcmovb
sahf
ja
pop
mov
inc
dec
stos
or
xchg
mov
lods
or
mov
je
out
jbe
dec
repz
test
mov
jno
sub
xchg
add
loope
nop
mov
pop
jecxz
nop
ss
stc
inc
pop
inc
adc
push
in
lahf
pop
out
in
inc
jecxz
nop
cmpsb
cmp
stos
push
js
nop
jg
sub
jb
fdivrs
idiv
inc
and
aaa
test
jl
xor
nop
jns
jb
dec
icebp
aam
mov
mov
sub
pop
mov
add
enter
mov
enter
stos
push
mov
mov
movsb
push
mov
cmpsb
mov
nop
outsb
pop
jnp
jecxz
jg
lahf
push
scas
cltd
fbstp
adc
clc
pop
add
arpl
cwtl
adc
mov
in
dec
nop
adcl
shlb
scas
rolb
cmovl
int
xchg
pop
fnsave
sub
lahf
repnz
pop
in
inc
ret
add
insl
nop
sub
add
jge
inc
xor
or
nop
mov
xchg
rolb
sbb
ljmp
and
push
xchg
add
rorb
add
sbb
push
or
nop
insl
in
push
mov
ret
cmp
jg
dec
push
les
push
ja
push
adc
gs
flds
sbb
gs
leave
je
pop
or
cmp
sbb
clc
out
aad
push
jns
xchg
shlb
cmpsl
xchg
out
inc
push
lock
mov
or
scas
scas
mov
loope
imul
pop
pop
push
iret
add
in
ds
je
adc
inc
mov
sbb
push
pop
clc
cmp
nop
mov
xor
inc
jbe
jle
xchg
and
jmp
leave
sub
mov
xor
pop
scas
loopne
out
int3
jle
mov
movsb
pusha
jbe
cmp
pop
mov
hlt
gs
arpl
mov
inc
jb
mov
fs
push
push
xchg
clc
lahf
mov
inc
ror
adc
nop
inc
adc
pop
adc
shll
dec
mov
nop
mov
out
ljmp
cmp
mov
fmul
lock
mov
push
jecxz
push
mov
ljmp
scas
test
movaps
cwtl
inc
xrelease
fstl
jg
rorl
xchg
lret
xchg
lods
out
ret
xchg
adc
sbb
fwait
popf
jb
call
mov
xor
sub
nop
rcrb
bnd
nop
popa
es
fdiv
scas
sub
sub
sahf
fisubrl
nop
inc
hlt
cmpsb
iret
jp
push
nop
add
mov
xchg
jb
pusha
and
scas
jle
mov
nop
add
push
std
nop
pop
pop
aaa
cmp
xchg
cli
lcall
xchg
mov
or
hlt
stc
ficoml
aad
jns
aam
fdiv
mov
shlb
pop
push
push
jle
scas
nop
add
mov
mov
sbb
xor
divb
dec
loope
inc
cmpsb
jne,pn
sbb
aam
adc
sub
jae
dec
or
in
mov
int3
cmpb
fdivrs
mov
pop
outsb
insb
call
lods
add
mov
jo
repz
fdivl
test
pushf
mov
push
adc
jne
imul
mov
fdivs
mov
nop
dec
cltd
or
pop
and
ss
nop
inc
outsb
gs
mov
mov
sub
push
test
mov
cmp
nop
mov
dec
pusha
sti
xor
movsb
negl
nop
pop
mov
mov
add
add
jb
mov
sbb
jge
nop
pop
stc
subb
cli
test
rcrb
mov
dec
xchg
hlt
aam
dec
nop
jae
loopne
hlt
mov
sbb
test
nop
in
push
pop
fcom
and
rclb
lret
call
pop
or
mov
arpl
ret
mov
sbbl
mov
repz
mov
shlb
and
test
xchg
adcl
icebp
lea
or
in
or
nop
push
or
mov
lods
adc
inc
or
sarb
incb
shrl
sbb
sub
nop
rolb
outsb
cld
xchg
cs
mov
cmpsl
out
ret
push
mov
sub
sub
test
nop
add
mov
nop
adc
inc
jecxz
ss
sbb
add
into
and
or
sub
pusha
inc
call
nop
dec
dec
loopne
dec
pop
or
mov
arpl
shll
push
xchg
pop
popa
ror
adc
or
inc
outsl
mov
sbb
and
xchg
shlb
dec
sbb
cmp
int3
mov
sub
les
add
pushf
imul
enter
scas
sbb
cmpsb
popf
stos
nop
pop
cmp
cmpsl
push
inc
add
sbb
stc
mov
sbb
das
test
shlb
push
xchg
jmp
push
lret
push
outsl
bound
nop
mov
cmovb
jmp
nop
in
mov
daa
pop
add
pop
clc
or
filds
in
adc
jb
jmp
insb
dec
nop
and
and
push
fildll
movsb
mov
xor
les
das
nop
push
add
or
sti
pop
sub
xlat
rolb
adc
adc
inc
out
jae
add
lock
mov
out
popa
sbb
shlb
fistl
sub
subl
push
and
and
nop
sbb
mov
mov
jle
pop
nop
sub
loop
push
enter
cmpsb
jecxz
fists
mov
adc
cmp
lock
push
iret
adc
dec
cmp
dec
push
lock
and
mov
sub
jle
scas
nop
adc
ja
rorl
pusha
mov
nop
lds
sub
sbb
mov
dec
mov
adc
shrb
jl
adc
mov
jne
adc
ss
mov
negb
lea
mov
ret
clc
lock
push
inc
mov
xchg
jns
je
nop
negb
sahf
or
xor
jne
sub
out
cmpsl
cmp
dec
sbb
lds
jo
nop
stos
mov
lret
loopne
pop
adc
mov
mov
arpl
dec
enter
and
fnsave
adc
nop
int
test
hlt
add
sahf
sbb
mov
aad
stos
nop
fdivrs
stos
mov
mov
nop
js
add
jg
jp
pop
pushl
stos
cld
xorl
dec
out
ret
dec
je
psubw
add
xor
adc
pop
test
subb
cmp
adc
scas
mov
mov
dec
pop
std
add
out
mov
cmpsb
rolb
test
fistpl
inc
sahf
xchg
mov
xchg
nop
sub
inc
mov
insl
xchg
mov
repz
bound
fisubl
sbb
xor
loopne
ljmp
lods
jge
lock
pop
sbb
loopne
adc
pop
shlb
cld
cmp
jle
aaa
adc
sarb
int3
adcl
gs
sahf
xor
loope
sub
lret
jge
cli
mov
mov
and
push
bound
nop
dec
push
aad
jle
div
nop
jecxz
xor
test
nop
or
jo
lret
sti
xchg
dec
dec
nop
inc
mov
mov
push
mov
popa
iret
cmp
out
lock
mov
inc
jge
inc
aaa
arpl
lock
nop
jb
xor
adc
and
nop
mov
and
imul
nop
lahf
xor
ljmp
lret
cld
add
mul
nop
popa
fsub
les
dec
jo
mov
jb
loope
jecxz
add
or
call
xchg
mov
jno
lcall
clc
or
sbb
dec
mov
sarb
sbb
inc
popf
cmc
add
rcrl
adcl
nop
cmpsb
push
mov
frstor
mov
cmpsl
dec
or
nop
test
cmpb
insb
out
cmpsb
int
dec
sub
aam
mov
add
or
mov
mov
sub
je
add
nop
cmp
fiaddl
xor
mov
popf
loope
nop
sub
in
popa
jge
dec
add
push
or
out
clc
aad
push
ret
nop
jno
pop
jg
repz
xchg
cmp
insl
mov
ja
aas
sub
hlt
inc
into
adc
imul
rorb
add
nop
push
adc
mov
cmc
loop
jo
adc
or
push
mov
adc
jo
sub
push
loopne
nop
inc
sub
shlb
add
dec
push
cltd
or
and
push
sbb
sub
rorb
or
arpl
sub
adc
fwait
shlb
nop
cmp
out
enter
jno
dec
xchg
dec
push
nop
mov
xchg
cld
hlt
mov
cmp
repnz
sbb
nop
in
dec
enter
ss
cltd
mov
cld
lahf
or
loop
inc
shlb
sub
aaa
push
rclb
dec
lock
xchg
nop
inc
and
jmp
dec
mov
sbb
nop
into
add
test
mov
jbe
mov
stc
add
femms
outsl
dec
mov
dec
mov
icebp
sub
fistps
mov
mov
lock
ds
nop
insl
and
xchg
fldt
and
sub
mov
fisttpll
lods
stos
push
adc
pop
sbb
inc
fcomps
mov
pop
mov
inc
shll
sbbb
or
nop
in
mov
xchg
gs
or
or
jnp
sbb
sarl
pusha
cmp
int3
movsb
jmp
inc
jp
xchg
add
call
daa
movhps
sbb
lock
dec
ror
cld
clc
sbb
or
fwait
loope
adc
adc
sbb
mov
xor
enter
fwait
lret
lea
popf
push
ret
in
aam
ss
repz
jnp
cs
mov
mov
adc
bound
mov
sbb
lret
lahf
enter
nop
cmc
mov
movsb
or
sbb
in
push
pop
nop
xlat
jno
mov
adc
out
dec
jmp
inc
mov
mov
int3
std
rorb
pop
jecxz
ja
nop
xchg
je
push
mov
mov
add
jmp
cmp
or
sub
push
pusha
rorl
jae
xor
aam
pop
mov
inc
xchg
add
imul
jae
sahf
cmp
push
adc
out
push
in
ss
mov
sbb
fcompl
adc
mov
mov
mov
lods
les
or
sbb
outsb
mov
add
push
mov
cmp
xchg
sbb
mov
cmp
stos
loopne
insb
icebp
nop
rorb
pop
fstl
das
scas
cmp
add
stos
mov
in
mov
nop
xchg
xchg
jne
shlb
ret
cltd
pop
mov
outsl
push
push
mov
mov
pop
push
lock
add
add
js
pop
aam
nop
mov
loope
imul
or
jae
inc
mov
out
nop
xchg
cmp
stos
sub
ja
nop
mov
dec
or
cmp
push
or
rorl
mov
jnp
shl
push
dec
ds
ss
pop
mov
inc
movsl
dec
add
arpl
cmp
nop
push
or
cmp
or
test
lock
ljmp
sbb
adc
arpl
decb
or
scas
test
mov
subb
cmpl
xchg
jb
push
xchg
fwait
nop
or
stos
push
mov
sbb
nop
mov
lcall
jae
adc
dec
nop
mul
call
or
and
insb
xchg
loopne
movsl
nop
adc
push
push
lock
dec
addr16
or
sti
xchg
repnz
scas
aad
xchg
add
int3
rclb
nop
xor
and
cwtl
or
nop
icebp
jecxz
scas
xchg
lods
nop
repnz
or
mov
rclb
sarb
xor
enter
xchg
jl
inc
pop
or
add
dec
xchg
push
pop
lret
pop
xchg
xchg
or
pop
xor
xlat
pop
popa
in
dec
fucomi
sub
nop
mov
sub
enter
ss
nop
mov
jo
add
stos
adc
mov
push
outsb
xchg
std
mov
add
push
pop
aas
adc
pop
adc
sbb
das
dec
inc
scas
inc
mov
cmp
and
mov
das
cmp
jbe
lock
shlb
xchg
jmp
test
into
outsb
adc
stc
nop
dec
cmp
fsubl
not
iret
pop
gs
shlb
nop
mov
les
nop
push
jbe
adcl
xchg
lds
nop
dec
faddl
aad
and
adc
cli
sub
les
int
insl
or
in
or
push
fildll
inc
sub
stc
lcall
mov
aad
stos
sbb
xorl
xor
stc
sar
ss
fadd
fisttpll
aaa
mov
adc
aam
addr16
inc
pop
andl
nop
sbb
sub
sub
andl
or
cmpsb
cmp
nop
cli
in
add
or
jmp
push
mov
mov
jb
dec
jp
repnz
inc
cmpsb
nop
and
xchg
in
addb
nop
jbe
ss
lcall
pop
push
fimull
mov
rorb
mov
ret
xchg
les
frstor
clc
mov
fcoms
nop
pushl
imul
movsb
mov
inc
in
subb
add
fcoml
aam
in
mov
adc
jno
adc
sbb
adc
leave
push
push
mov
sub
lea
sbb
nop
aas
aam
xlat
adc
or
nop
out
ret
jb
push
nop
jno
mov
mov
mov
notl
jno
imulb
pop
adc
sub
cmp
dec
call
mov
popf
scas
adc
pop
adc
out
mov
cmpsb
popa
gs
stc
add
stos
xlat
add
inc
or
shlb
xchg
cwtl
mov
enter
stc
iret
and
subl
xlat
repz
xchg
mov
inc
mov
inc
loopne
adc
inc
dec
dec
enter
mov
lret
lea
insb
sub
fsts
cld
dec
add
mov
int
loope
ficompl
cmovbe
xchg
ja
sti
push
xorb
cmp
push
popf
repnz
pop
sub
rol
push
adc
clc
dec
nop
xchg
pusha
push
test
aas
mov
popa
lret
dec
cld
iret
add
pop
mov
add
push
ss
add
pop
scas
js
nop
test
xchg
jo
stc
xor
ljmp
xchg
aad
pusha
inc
loope
movsb
cmp
cmp
xor
test
adc
aaa
add
stc
adc
dec
mov
nop
sub
cli
iret
les
adc
push
sub
adcb
es
lahf
test
nop
popa
adc
jge
cmp
xor
jae
and
sub
aam
cmpsb
pop
in
adc
test
mov
nop
in
push
movsb
js
je
xor
push
or
out
mov
cli
adc
jbe
imul
nop
mov
xorb
nop
xchg
mov
ljmp
mov
popa
cmc
dec
cs
inc
dec
dec
nop
dec
jae
sub
push
in
mov
add
shl
imul
idiv
scas
in
outsb
nop
in
push
jmp
mov
loope
sbb
nop
stc
lret
sbb
pop
jne
mov
addl
pop
nop
fs
bt
jnp
sbb
nop
adc
aas
mov
insb
adc
testb
mov
dec
xor
lock
lds
stc
adc
sub
nop
rcrb
or
imul
aad
pop
imul
nop
in
inc
mov
js
nop
iret
adc
push
nop
or
not
cwtl
dec
add
adc
hlt
jmp
push
or
not
lods
faddp
mov
sbb
rcrb
push
adc
imul
nop
pop
pop
or
insl
das
lock
nop
jb
test
out
imul
mov
xlat
mov
sub
aam
and
mov
popf
lret
mov
clc
fstl
subl
sbb
int3
xchg
sub
add
mov
fidivl
mov
andb
sub
adc
cmp
rcl
lret
inc
mov
popa
jae
dec
cli
jecxz
mov
jb
std
out
lret
lret
int3
dec
adc
xchg
nop
leave
ja
sub
aam
lods
enter
mov
out
pop
ficoms
and
push
add
push
int
repnz
scas
cmp
or
in
xor
jne
sub
cwtl
nop
and
inc
mov
pop
ljmp
sahf
dec
jne
sub
call
push
cmp
lock
cmp
gs
sbb
out
xor
cmpsb
nop
sub
nop
push
outsb
pextrw
cli
loop
repnz
scas
pop
js
fldl
sbb
lock
fimull
popl
pop
repz
add
inc
nop
int3
mov
sbb
inc
xchg
nop
pop
xchg
jecxz
push
pushf
outsb
std
nop
and
push
push
xchg
jb
add
fwait
lods
and
mov
nop
jno
das
test
nop
inc
in
xor
xchg
mov
dec
lock
sub
dec
pop
nop
jo
fs
icebp
adc
jmp
ss
dec
sar
rclb
addr16
xchg
gs
nop
rol
xor
dec
jne
nop
dec
xchg
mov
imul
inc
sahf
jb
insb
push
inc
jae
jns
cs
lret
dec
sub
int3
and
out
dec
cwtl
or
adc
dec
loopne
mov
insl
xchg
pop
loop
nop
jmp
xchg
mov
loop
ljmp
and
stc
in
das
xchg
sub
mov
sub
mov
in
xlat
nop
bnd
imul
xorl
bnd
jg
push
aad
mov
and
into
loopne
mov
adc
adcb
jle
pop
xor
bound
sbb
push
cltd
push
iret
popf
inc
lret
nop
inc
add
dec
das
add
sbb
adc
pusha
sbb
jg
in
inc
aas
fadds
addr16
lock
insl
pop
adc
mov
push
imul
pushf
push
std
mov
jge
nop
jp
and
cltd
push
aad
nop
sub
xchg
mov
xor
fst
nop
stc
mov
lret
out
or
sbbl
fmuls
xor
mov
daa
jp
les
pop
scas
enter
movsb
xor
sbb
xchg
stos
ficoml
int3
mov
stos
or
sub
xor
nop
cltd
jp
mov
push
inc
push
adcl
pop
push
sahf
xor
push
xchg
and
sbb
jg
insl
cmp
in
pop
pop
adc
push
nop
dec
stos
subb
ret
lahf
adc
fnstcw
xchg
fwait
dec
push
inc
cs
push
xchg
or
scas
mov
lret
in
xchg
nop
mov
lods
out
bound
pop
jo
test
jg
mov
fcoml
mov
push
or
mov
cmpsb
jmp
pop
jnp
int3
cld
mov
jl
pop
popf
xchg
loope
cltd
std
repnz
inc
stc
loop
cwtl
enter
mov
cli
pop
and
stc
nop
addl
inc
aaa
fdivs
rorb
aam
adc
inc
fcoms
daa
movzwl
adc
mov
loope
movsb
mov
jae
mov
mov
ljmp
jmp
mov
not
aad
adc
fisttpll
daa
and
shrb
int
mov
nop
xchg
std
cmp
dec
daa
dec
nop
mov
jg
nop
xor
and
addr16
add
insb
in
fsubrl
or
sbb
sbb
sub
leave
enter
lahf
test
mov
pop
out
or
inc
cwtl
test
aad
dec
push
nop
jb
mov
dec
nop
or
lret
mov
repnz
mov
lods
ror
insl
into
pop
nop
mov
repz
mov
xchg
add
stc
icebp
sbb
nop
inc
stos
push
sbb
inc
je
nop
rcrb
loope
in
adc
dec
and
ljmp
test
sub
pop
dec
loop
mov
rclb
xor
repz
gs
out
mov
mov
les
pop
xchg
mov
fcomi
nop
push
inc
pop
inc
cli
mov
sub
sbb
jecxz
and
cmp
fisttps
jmp
mov
push
test
enter
int3
rclb
mov
ljmp
into
in
cmp
scas
mov
cmp
lret
inc
mov
repz
adc
push
js
adc
sub
lds
fstpt
nop
and
pusha
imul
push
mov
cmpsl
es
insb
pop
nop
xor
xor
or
jnp
dec
nop
or
icebp
gs
fnstsw
mov
push
bound
enter
cwtl
fs
icebp
popa
inc
mov
cs
out
mov
push
js
out
cmp
mov
sub
imul
dec
mov
pminub
mov
fdivrl
pushf
push
rol
and
js
cmp
mov
and
nop
jb
stos
cmp
xor
cmpsl
dec
add
mov
ficompl
xor
jmp
fwait
insl
pop
fstpt
mov
inc
sub
adc
shl
pop
or
lcall
dec
xor
adcb
ret
shl
rolb
mov
data16
add
imul
cmpsl
xchg
jle
adc
clc
daa
movsb
out
adc
jb
lcall
aas
dec
popa
sub
scas
ja
and
cltd
ror
das
scas
jl
cwtl
sahf
aas
mov
push
adcl
nop
pop
sub
inc
repnz
push
pop
cmpsl
mov
adc
ret
mov
lock
mov
enter
test
scas
lods
test
or
popa
or
mov
inc
lea
adc
aaa
or
xor
ds
popf
cmp
and
adc
stos
jo
mov
sbb
out
or
mov
fsts
rclb
sbb
pop
outsl
adc
jne
mov
sub
sbb
nop
lods
movsl
hlt
js
push
fstl
nop
in
test
mov
cmc
mov
int3
lret
mov
mov
clc
adc
popa
and
nop
mov
push
xor
jecxz
fisttpll
add
in
fadds
adcb
jbe
xor
push
jecxz
xor
inc
aam
or
fisttpll
pop
xchg
pop
mov
pusha
punpckhwd
or
jb
and
inc
dec
dec
cld
pushf
add
fsubrs
cmp
imul
jecxz
mov
push
sti
scas
out
cwtl
xorb
cwtl
nop
mov
add
loop
or
mov
lahf
nop
mov
scas
int3
jne
push
xchg
lock
add
jle
mov
int3
shrb
jge
sbb
loop
outsb
sbb
nop
mov
jns
ss
out
nop
ds
dec
lcall
add
ja
inc
or
xchg
rorb
pop
nop
shl
shl
inc
mov
add
mov
or
push
pop
nop
mov
shl
bound
nop
xor
in
push
mov
nop
inc
cmp
arpl
out
nop
sbb
movsl
aaa
cld
adc
mov
iret
mov
mov
inc
hlt
cmpsl
sahf
adc
mov
lea
out
push
push
inc
int
jns
mov
sbb
std
js
in
les
or
sub
adc
cmpsl
jle
mov
fimuls
sbbb
stc
test
nop
jo
xlat
push
push
inc
lahf
notb
xor
int3
ljmp
nop
sub
inc
mov
adc
cmpsl
jb
push
sub
jo
xor
hlt
add
pop
push
cmp
jb
sub
mov
xchg
cmp
loope
rclb
aam
adc
pop
dec
imul
das
xchg
inc
xchg
push
or
loopne
jnp
int3
dec
mov
dec
inc
jmp
jg
pop
sub
jns
push
nop
inc
sub
inc
cmpsl
out
jmp
adc
push
xadd
sbb
cmp
sub
mov
pop
inc
mov
or
leave
nop
aam
pop
pause
arpl
icebp
mov
mov
jmp
rcrb
outsb
xor
int
stos
pop
cmp
mulb
xchg
sahf
push
xor
loopne
fistpl
or
mov
lock
pop
inc
or
add
lea
ficomps
popf
mov
pop
mov
pusha
shlb
xor
lock
mov
sbb
sub
fmull
or
push
rcl
repz
fs
push
or
dec
mov
into
fwait
loop
aas
stos
mov
jecxz
adc
in
and
std
sahf
mov
test
dec
jg
sub
add
mov
stos
mov
ffree
int
and
mov
pop
lods
repnz
xor
outsl
nop
enter
push
xor
shl
cmp
or
xorl
push
scas
mov
fs
xchg
lret
aaa
push
popf
jl
sti
int3
out
lds
sbb
cmpsb
ret
mov
stos
fsts
movsl
jmp
imul
das
bound
pop
adc
stc
pop
xchg
adc
jno
nop
mov
aas
ljmp
sub
dec
cltd
pop
add
out
insl
cmp
mov
ds
xchg
mov
or
add
sbb
cld
push
adc
arpl
adc
out
mov
sahf
nop
jmp
pop
icebp
mov
or
data16
pop
xchg
xor
aaa
mov
nop
push
insb
sahf
dec
adc
pop
nop
xchg
pop
add
or
xchg
pop
push
outsb
cmpsl
push
nop
adc
notb
nop
add
in
movsl
mov
scas
cld
nop
sbb
cmp
adc
mov
cmp
cltd
mov
cwtl
add
mov
mov
pop
adc
inc
jne
in
std
xchg
pop
nop
decb
in
nop
popa
jge
push
movsl
lods
gs
nop
mov
push
mov
mov
sub
and
or
and
pavgb
push
shll
push
movsl
nop
dec
mov
int3
imul
test
jae
push
dec
cs
shll
aaa
pop
ds
xor
ror
mov
outsb
in
mov
fimull
shl
or
adc
jb
inc
hlt
pop
fnstenv
push
sbb
arpl
xlat
dec
leave
mov
pop
sbb
mov
and
dec
push
mov
push
inc
mov
mov
push
cwtl
aad
nop
add
js
push
adc
data16
mov
repz
test
cmp
add
dec
jo
add
lret
insb
xchg
lock
aam
pusha
jnp
sahf
popa
add
inc
inc
dec
nop
push
ds
sub
sub
or
pop
mov
stos
push
mov
nop
movsb
imul
add
nop
enter
sbb
nop
mov
into
cmp
test
or
ret
clc
push
nop
pusha
xor
data16
xchg
nop
cmp
pusha
push
lret
or
jmp
test
repz
cmp
xchg
stos
mov
nop
jb
xchg
out
aaa
pop
xlat
nop
and
jg
or
movsl
cmpsb
add
mov
int3
outsb
out
nop
fistpl
push
loop
test
or
lret
xor
lahf
xchg
andl
jnp
jge
nop
aam
lea
mov
cli
mov
nop
cmpb
jne
pop
test
fisubs
adc
push
popf
mov
mov
nop
adc
pop
repnz
stc
pop
nop
adc
lahf
aas
inc
fimull
and
mov
sub
or
bound
jl
sti
add
nop
cmp
lock
shrb
dec
cmpsb
adc
mov
mov
push
sar
adc
in
jb
jne
dec
mov
mov
out
in
pop
mov
xor
push
dec
push
push
mov
mov
mov
push
xor
pop
nop
lret
adc
rsqrtps
cmp
mov
nop
and
testb
stos
popa
mov
sub
sahf
xchg
insb
jmp
pop
mov
adc
jl
mov
test
add
mov
pop
xchg
cmc
mov
xor
nop
or
jecxz
nop
cwtl
mov
clc
nop
pop
sbb
and
mov
dec
pop
or
lcall
xchg
or
inc
sub
xchg
insl
mov
sar
ret
sbbb
nop
pop
loop
inc
sahf
int3
push
nop
int
in
idiv
into
xchg
mov
das
inc
jno
xor
enter
add
lods
push
pop
jnp
nop
pop
std
push
maskmovq
testl
js
rorb
push
mov
hlt
shrl
nop
fbld
mov
ret
and
nop
add
add
pop
add
xor
jb
test
jge
nop
mov
pop
mov
ficoms
add
sbb
dec
insb
push
nop
sbb
pusha
sbb
or
adc
or
sbb
imul
test
movsl
pop
fs
jns
rcll
adc
mov
fmull
mov
and
loopne
int
mov
movsl
cwtl
mov
nop
sti
mov
test
nop
mov
decb
xor
lods
leave
pop
inc
adc
insl
stos
cmp
xor
shr
test
xchg
fidivrs
std
or
test
mov
mov
insl
outsl
fsub
dec
nop
in
sub
jle
or
xchg
xchg
cmp
popf
push
mov
fnstsw
imul
outsb
pop
cmpsl
dec
or
or
jl
add
lock
dec
aas
mov
sub
cli
call
sub
and
repnz
add
ja
cmpsb
lods
fisttpll
xchg
les
cltd
adc
or
xchg
fmul
test
popf
mov
mov
nop
roll
adcl
xchg
or
cmp
insl
fdivl
nop
sbb
pop
imul
push
pop
xorb
mov
jbe
cmp
stc
mov
hlt
and
stos
adc
pop
lea
push
test
push
add
imul
pop
push
rcr
fistps
out
push
mov
xchg
mov
cwtl
idiv
mov
adcb
fdivl
nop
jb
out
iret
pop
stos
xchg
aad
dec
pop
lock
fldt
sbb
cmp
xor
push
out
imul
dec
repnz
das
mov
mov
rolb
mov
or
mov
mov
push
xchg
subl
add
push
mov
in
nop
mov
outsl
mov
stos
lcall
lock
cmp
nop
xchg
rcll
jno
nop
push
inc
xchg
sbb
nop
loop
jmp
and
adc
pop
adc
adc
enter
rclb
add
adc
cli
das
call
call
xchg
loope
mov
cmp
xor
fwait
jnp
daa
nop
incl
stos
ss
cmpsb
ja
hlt
jno
lahf
cwtl
nop
mov
push
add
jge
loop
pop
jecxz
loopne
cld
scas
arpl
jp
leave
nop
mov
jo
shlb
out
nop
repnz
ds
xchg
out
mov
nop
or
push
inc
ret
lock
jbe
xchg
mov
adc
sub
adc
and
jle
int
pop
adcl
enter
pop
add
cmpsb
jne
inc
xchg
mov
cmpsl
call
scas
out
mov
mov
push
popf
fisttpl
adc
faddl
mov
dec
jmp
ja
xchg
mov
adc
pop
push
jl
ljmp
mov
push
adc
xchg
push
xor
cmp
call
inc
adc
push
xor
popl
loope
or
fcomps
xchg
xor
aam
pop
cmp
push
mov
xchg
adc
sub
repnz
pusha
subb
fistpl
push
out
jne
call
cwtl
shrb
shll
mov
je
cltd
and
xchg
adc
fstl
pop
stos
fidivs
mov
dec
mov
jle
add
pop
mov
xorb
pusha
dec
pushf
push
jo
or
lea
mull
stos
pop
add
shll
std
rorb
sarl
fisttpll
outsl
stos
aam
jae
jmp
shl
cmp
popf
out
sarl
mov
int3
clc
or
sbb
call
lock
out
mov
in
xor
in
jg
ret
cmp
sub
sti
cmovl
xor
pop
pop
jl
pop
fmull
pop
test
rorb
xchg
cli
test
inc
jae
sub
mov
cmp
nop
sub
imul
add
jle
mov
sub
add
sbb
mov
push
sbb
xor
sbb
push
mov
mov
cwtl
xchg
mov
jns
inc
mov
mov
dec
inc
and
lret
nop
push
ds
mov
mov
or
arpl
xor
ljmp
pop
sub
xor
and
and
ret
nop
dec
and
je
sub
xchg
aas
es
jl
inc
adc
mov
sub
test
addb
fadds
push
xor
enter
nop
enter
lds
mov
cmp
data16
lea
adc
and
dec
fstl
std
push
cli
add
mov
and
mov
arpl
mov
mov
mov
cli
adc
adc
test
nop
sbb
mov
nop
rcll
or
popa
aad
adc
out
in
les
cmp
xchg
pop
fadds
rcrb
subl
loopne
rcrl
sub
push
nop
and
leave
mov
lret
icebp
mov
inc
adc
mov
shrl
out
sub
dec
popa
mov
gs
xor
mov
cmpsb
repnz
sbb
add
dec
stos
xchg
outsl
and
sbb
or
inc
xchg
mov
nop
jp
push
jge
adc
ror
mov
pop
cs
mov
loop
mov
movsb
nop
in
cmovp
adc
scas
aas
jb
push
and
icebp
nop
push
insb
pop
in
mov
or
stos
inc
jne
ret
xchg
jmp
mov
sbb
lret
adc
jno
sbb
or
xchg
pop
xor
and
pop
rcrb
xor
icebp
sub
cmp
repz
xchg
divb
repnz
and
insb
lahf
idivb
lock
adc
int
mov
js
nop
pushf
scas
dec
xor
dec
mov
loop
aad
jb
or
outsl
inc
cltd
and
in
or
xchg
cmpsl
nop
jp,pn
fcoms
inc
cmp
and
add
nop
adc
xor
cmp
adc
stos
mov
mov
nop
cmp
adc
rorb
mov
pop
into
push
pop
push
outsb
cld
call
addr16
enter
imul
xchg
mov
das
pop
mov
sub
nop
inc
insl
mov
lea
dec
xchg
mov
mov
in
xor
push
nop
daa
out
stc
cli
jg
adc
lcall
test
lret
ja
xchg
nop
dec
arpl
aas
fisubl
push
inc
mov
sbb
jae
call
jo
dec
in
into
imul
enter
jnp
mov
std
jae
push
aaa
nop
dec
mov
add
lahf
jmp
aam
pushf
jb
push
mov
adcb
adc
outsb
aas
sub
insl
mov
push
nop
jp
jp
inc
mov
adc
lods
mov
or
ret
xchg
ror
sbb
daa
mov
fadd
mov
cmpl
jae
adc
or
lock
mov
into
cltd
fmulp
add
sub
add
xor
xlat
mov
stos
movsb
nop
cmpsb
mov
and
cmp
nop
mov
lcall
in
nop
test
lock
nop
xchg
push
adc
xchg
xchg
popf
popa
rolb
and
nop
mov
loope
xchg
xchg
andl
pop
cmp
orb
ljmp
dec
cmp
sbb
ss
or
push
sbb
js
jb
cmp
jg
dec
stc
call
mov
mov
popa
scas
fisttps
scas
nop
jbe
sar
lahf
pop
lds
inc
icebp
rorb
mov
pop
pushf
stos
adc
sub
inc
mov
scas
push
imul
enter
and
push
leave
mov
out
in
mov
jle
add
and
push
pop
push
push
pop
leave
aaa
cmp
jo
xor
loop
mov
push
xchg
jmp
mov
mov
nop
int3
in
aas
sub
icebp
cli
pusha
dec
cltd
dec
hlt
inc
mov
es
mov
lret
js
cld
push
fisttpl
nop
je
icebp
fadds
sub
mov
jb
les
popf
loopne
scas
jecxz
dec
in
repz
nop
fidivrs
jns
push
inc
cli
cmp
lret
dec
nop
sub
jl
xor
push
mov
lds
cld
cli
pop
mov
mov
ljmp
dec
addb
lock
or
adc
cwtl
ja
inc
sarl
or
sub
icebp
nop
push
outsl
jo
inc
test
es
rol
movsl
cltd
aam
rcll
or
mov
mov
cs
add
pusha
outsl
cmc
xchg
lock
jno
leave
insb
cmp
push
loopne
or
nop
es
push
add
mov
nop
mov
xor
outsl
sub
repnz
stc
fcom
jb
pop
dec
dec
xlat
or
push
jl
insl
test
xor
mov
sbb
loopne
mov
gs
nop
adcl
inc
xchg
addr16
iret
add
or
mov
inc
lret
hlt
add
popl
cmp
pusha
mov
pop
add
and
push
mov
nop
ficoms
pop
cwtl
aad
xor
pop
shl
enter
cli
push
pop
ss
push
scas
cmp
push
cmpsl
xorb
mov
mov
xchg
xor
das
jnp
sub
xchg
inc
cmp
sub
rclb
or
adc
into
loopne
xchg
aam
aam
dec
out
js
arpl
sbb
fsts
pop
push
add
sub
jb
arpl
into
inc
pushf
mov
ror
nop
cli
cmp
nop
mov
fs
pop
lea
andl
mov
add
adc
loope
js
jmp
popf
xor
add
xchg
nop
dec
mov
ja
icebp
mov
inc
push
nop
cmpb
xchg
pop
push
data16
nop
jae
lea
pop
imul
sahf
jno
xchg
dec
sbb
mov
out
or
xchg
nop
iret
xchg
mov
outsl
xchg
mov
adc
mov
loopne
dec
nop
insl
aad
and
repnz
ss
out
aas
nop
cmp
cmp
nop
jmp
jo
sbb
xlat
lods
dec
insl
nop
lods
mov
rorb
mov
nop
jge
cmp
aad
ret
repz
cmp
dec
cwtl
enter
aas
je
jne
xor
sub
mov
idivl
xor
inc
mov
rorl
xchg
mov
std
mov
fprem1
fidivs
add
sti
nop
pop
or
fiadds
popf
push
dec
xor
fwait
pop
nop
leave
ss
sbb
enter
or
or
pushf
shl
stos
add
ljmp
jle
fidivrl
jb
xor
dec
ror
in
mov
cld
add
nop
into
push
cmp
fidivl
adc
int3
mov
sti
xchg
cli
repz
push
adc
sub
and
mov
nop
out
sbb
xor
xchg
test
dec
sub
pop
nop
push
mov
out
aaa
mov
jl
mov
rolb
nop
xor
jae
and
and
mov
mov
outsl
inc
xchg
push
scas
and
xor
popf
adc
mov
mov
in
push
xchg
cmp
outsb
mov
sub
nop
jns
fisttpl
iret
jmp
sbb
or
dec
add
jge
push
stos
xchg
in
les
dec
fs
lock
sub
stos
stos
lods
mov
jb
out
or
popf
jmp
mov
cmpsl
loope
sub
imul
jno,pn
dec
les
cwtl
lret
sbb
jnp
enter
cli
nop
and
aaa
fsubs
nop
bound
lcall
insl
jbe
mov
xor
andl
fwait
or
out
add
in
dec
add
jge
mov
sar
fadds
popa
push
cwtl
push
adc
pop
lret
dec
adc
out
mov
cmp
orb
xchg
xchg
push
add
subb
pop
decl
inc
cmp
adc
inc
adc
adc
cmp
sbb
mov
daa
test
pop
sar
pop
and
ja
nop
cmp
adc
jg
test
mov
call
nop
sbb
loop
cmpsb
nop
jge
jmp
clc
mov
cmp
movsb
push
daa
ret
hlt
mov
sbb
out
out
ret
mov
lahf
cwtl
nop
in
scas
xchg
out
test
enter
sbb
cmp
les
mov
pop
pop
xchg
dec
pop
mov
mov
pop
add
jne
xchg
and
push
aad
outsb
div
or
xchg
mov
mov
xor
lock
iret
sub
mov
mov
mov
ljmp
popf
jecxz
or
roll
mov
mov
icebp
daa
std
push
push
mov
cli
sub
mov
sahf
imul
nop
or
fsubs
cli
sub
xor
lds
nop
sbb
mov
imul
fs
dec
repnz
xor
mov
pusha
nop
movsl
inc
mov
xor
xchg
xchg
adcl
dec
jge
adcl
daa
pop
cmc
mov
adcb
jge
adcl
nop
dec
pop
inc
push
xchg
repz
nop
push
pusha
leave
mov
or
xchg
es
movsb
cmp
mov
xchg
popf
sub
pop
ror
das
lahf
xor
in
out
int3
rorl
mulb
movsl
mov
out
pop
gs
jmp
xor
cmp
cmp
orb
scas
inc
nop
sub
dec
and
nop
sbb
insb
push
cwtl
xchg
sub
in
fsubrp
or
mov
lock
nop
mov
and
add
cmp
ficoms
sub
rorb
mov
nop
xchg
pop
jg
jle
xor
mov
inc
fists
int3
xchg
rcrl
ficoms
nop
push
fcoms
lock
adc
push
jmp
mov
mov
or
push
sub
in
xchg
mov
push
pop
scas
jecxz
js
inc
fadd
jo
mov
lods
fwait
scas
ficoms
test
or
push
and
mov
cli
nop
pop
xchg
xchg
push
dec
pushf
stc
fwait
cmp
gs
mov
lods
mov
mov
inc
sub
outsl
or
leave
fidivrl
xor
pushf
movsb
pop
xor
mov
cmpsl
jns
push
sarb
jnp
insb
dec
xlat
jo
fdivrl
inc
jg
aam
outsl
adc
cli
dec
mov
scas
shl
mov
jns
data16
or
insl
sub
es
cmp
xchg
std
icebp
imul
nop
dec
add
cmp
mov
mov
pop
cwtl
jmp
insb
fwait
nop
mov
scas
mov
repz
ret
cmp
sahf
sbb
jg
push
inc
xor
test
nop
xchg
adcb
nop
aad
pop
out
loopne
jecxz
xchg
or
sti
jno
lock
ret
je
das
or
fdivl
jl
or
push
fnsave
lods
and
add
pop
scas
lahf
xchg
xor
cmp
mov
mov
xor
lock
adc
das
xor
adcb
nop
dec
es
xchg
pop
std
sahf
out
test
adc
cmpb
sbb
pop
push
xchg
adc
and
sub
mov
outsb
and
nop
adcl
pop
pop
icebp
mov
mov
pop
sbb
adc
and
jl
das
and
ret
loop
nop
xchg
ja
pushf
mov
cli
lcall
mov
jp
xchg
jns
les
mov
insb
mov
cmpsl
rcr
or
mov
xchg
scas
add
aaa
aaa
adcl
mov
mov
xchg
adc
dec
mov
int3
jmp
fsts
inc
mov
cmp
push
or
or
rorb
in
sub
nop
out
jecxz
and
dec
icebp
xchg
sbb
or
sbb
jno
fcmovne
xchg
cs
xchg
mov
xor
mov
loopne
lock
sbb
nop
xchg
mov
clc
and
in
sbb
dec
xchg
repnz
insb
jo
rcl
fcomip
popa
ret
loopne
jecxz
iret
nop
cs
push
lea
nop
push
jnp
jo
pop
push
pop
fists
nop
addr16
cld
ret
xchg
fdivr
nop
sbb
add
cmpb
mov
or
cmpsb
cmpl
or
nop
mov
ja
adc
nop
mov
push
les
shrb
call
and
jae
xchg
push
mov
or
clc
inc
je
int3
cmp
aaa
pop
adcb
jl
push
cmpsl
mov
adc
push
lea
sbb
pop
daa
cmp
cs
nop
mov
pop
cmpsl
sub
int3
pop
cmpsb
ja
push
es
divb
or
xor
insb
popf
add
lods
sub
mov
jecxz
ljmp
dec
sub
nop
ret
pop
fs
stos
jmp
into
shlb
dec
and
cmp
nop
ss
mov
or
mov
int3
jp
nop
lahf
les
inc
nop
mov
push
clc
adc
adc
xor
dec
call
outsl
stos
subl
nop
jb
jae
popf
dec
incb
xor
mov
jns
nop
je
daa
pushf
mov
ljmp
les
mov
xchg
dec
jmp
mov
out
push
adc
je
lret
cwtl
mov
adc
cmc
pop
xchg
xchg
stos
movsb
pop
and
dec
push
inc
insl
fsubrs
add
cmp
nop
insb
push
dec
mov
outsl
pop
nop
ljmp
out
adc
fstpl
mov
loop
ja
lret
gs
mov
nop
add
push
jbe
pop
jae
mov
stos
ret
inc
lock
mov
lock
and
repnz
and
mov
pop
pop
mov
mov
loope
stos
mov
das
jno
sub
incl
fs
aaa
imul
cltd
ljmp
or
fimuls
add
or
push
and
nop
inc
not
addr16
cmpsl
pause
loope
ret
imul
lahf
lcall
dec
repnz
loopne
adcl
stc
test
pop
jecxz
arpl
xchg
inc
notl
scas
shl
sbb
filds
jecxz
nop
ja
int3
and
push
rcrb
nop
mov
in
std
shrb
adc
and
fistl
add
lret
cmp
es
testb
repnz
nop
int3
inc
jno
fbstp
pop
or
imul
ficoml
nop
cmp
xchg
test
aam
add
mov
xchg
and
stc
repz
mov
outsl
in
nop
push
inc
xchg
fiadds
fnstenv
pop
nop
add
jno
subb
jg
popf
mov
dec
jo
cmp
mov
cltd
insl
lahf
and
or
jbe
pop
rolb
and
das
nop
mov
sbb
mov
lcall
lahf
mov
shlb
nop
into
aad
in
rclb
adc
insl
pop
es
push
out
ret
or
xchg
nop
je
and
and
stos
push
nop
push
aad
add
cwtl
push
int3
mov
xchg
nop
aaa
dec
loop
xlat
addr16
loopne
nop
dec
xor
test
leave
and
and
adc
lcall
xor
mov
xor
adc
ss
mov
mov
movsl
cmpb
lahf
scas
popf
cmp
dec
pop
out
pop
in
data16
jne
lahf
add
nop
dec
das
or
in
push
add
lods
jnp
insb
aam
mov
stc
hlt
cmp
xchg
fmul
nop
mov
inc
bound
enter
test
sub
dec
or
hlt
fwait
int
or
jns
stos
fisubs
push
ja
mov
mov
sub
or
daa
int3
mov
fcmovnb
shll
inc
ja
loop
xlat
xchg
call
int
faddl
pop
nop
push
adc
push
xchg
add
out
popf
ss
mov
push
les
fcoms
js
ss
inc
cwtl
fnstenv
xchg
lret
xchg
cbtw
pop
nop
pushf
or
push
lret
or
jecxz
adc
inc
in
add
rcl
ficoms
cwtl
pop
dec
cmc
addl
addr16
and
xor
mov
insl
in
sahf
imul
movsb
dec
pop
sbb
vmread
push
push
nop
into
fsts
and
test
xlat
fists
mov
push
dec
mov
or
pop
jo
add
bound
jecxz
in
out
mov
push
lds
adc
fstpt
sub
adc
push
stc
out
sub
out
mov
scas
pop
push
sbb
pop
jl
les
orb
lock
mov
mov
ss
nop
add
push
lods
pop
adc
and
push
jae
loop
pop
fdivl
nop
test
lods
push
daa
shlb
mov
aaa
mov
div
pop
or
nop
push
xbegin
icebp
xchg
add
sub
je
loopne
out
and
sub
pop
add
test
dec
xchg
imulb
nop
pop
test
jge
mov
xlat
nop
xor
inc
fcoml
ljmp
add
nop
roll
test
repnz
not
nop
lahf
xor
inc
xchg
lods
add
push
pop
mov
shll
inc
addr16
lret
inc
push
pop
jp
incl
sub
xchg
jg
push
pop
inc
or
cmp
jmp
lcall
in
sub
loope
addb
fnsave
xor
push
jmp
cli
add
mov
lret
cmp
or
repz
sbb
mov
push
xlat
inc
sbb
mov
mov
es
in
stc
lahf
mov
loop
mov
aas
mov
mov
aaa
nop
fs
mov
nop
movsb
and
sub
or
dec
mov
or
push
dec
fcomps
or
fldcw
nop
xorl
ljmp
into
pop
sbb
and
xchg
sarb
inc
cmpsb
sub
jl
mov
iret
shrb
or
arpl
loopne
aad
nop
jge
or
repnz
in
push
push
jl
fcmovne
shll
pop
mov
mov
xor
mov
pop
pusha
mov
sahf
mov
pop
pop
pushf
inc
pop
xor
loop
inc
dec
xchg
dec
fisttps
pop
push
xchg
lock
xor
dec
pop
push
jne
xor
xchg
nop
in
rcll
xor
sahf
stos
jo
dec
xchg
cmp
shrl
adc
nop
fldt
xchg
nop
icebp
sub
bound
outsb
lods
mov
aaa
xchg
mov
push
push
mov
jmp
mov
in
test
aad
adc
das
sub
lock
mov
mov
add
xor
and
cld
jne
nop
test
cs
add
ja
or
imul
icebp
clc
fbstp
sbb
mov
test
jb
loop
lock
nop
and
enter
xor
nop
adc
inc
lcall
mov
adc
iret
les
in
rorl
push
jne
movsl
cltd
rolb
cmc
lahf
or
and
aaa
sarb
js
ds
xor
mov
mov
into
in
xchg
ret
cli
std
stc
mov
xchg
cmp
push
lock
jl
nop
aaa
push
loope
daa
add
rorl
shr
out
add
outsb
pop
in
mov
mov
sbb
test
dec
pop
or
or
enter
pop
cmpsl
xchg
dec
add
repnz
xlat
clc
leave
and
sub
cmc
or
into
xchg
mov
imul
mov
loope
nop
filds
aam
pop
fwait
xchg
xchg
mov
and
shll
test
movsl
lods
xchg
mov
adc
bound
cmpsl
adc
stc
pop
sub
sbb
xchg
sbb
dec
mov
adc
aam
jbe
loope
pop
dec
mov
fstpl
pop
push
inc
push
mov
inc
mov
nop
mov
push
push
jmp
add
loopne
pop
mov
stos
nop
into
test
inc
push
inc
clc
rcll
iret
fnstcw
jne
js
and
lcall
adc
hlt
mov
jg
xchg
fisttps
add
sbb
mov
add
das
dec
sarb
mov
jae
nop
adc
test
cltd
push
ret
cmp
lock
sbb
movsb
xchg
int3
or
lods
out
xor
inc
inc
ljmp
pop
adc
daa
pop
lods
shlb
xchg
mov
adc
aam
push
sarb
cmp
test
add
adc
sbb
stc
enter
nop
mull
xor
je
jb
insb
in
stos
push
push
push
shll
push
les
push
icebp
cmp
add
lock
inc
mov
mov
aas
mov
les
addb
xor
iret
leave
adc
int3
sahf
jecxz
mov
int
and
sbb
ficoms
fadds
stos
int3
mov
inc
mov
nop
imul
cwtl
pop
jns
out
mov
jb
pop
xchg
jg
loop
nop
push
icebp
movb
inc
adc
lds
or
add
das
mov
sbb
push
mov
pop
nop
push
inc
in
or
daa
int3
cmp
mov
in
xchg
cs
pusha
add
ljmp
mov
dec
mov
ljmp
pop
xor
xchg
adc
scas
popf
adc
jecxz
frndint
icebp
jb
nop
mov
in
daa
nop
dec
pop
ret
adc
lods
fsubrs
jecxz
adc
loope
ss
adc
daa
fs
or
add
xor
push
fsubl
push
and
popa
lock
sbb
jb
ss
popa
xlat
in
loop
movsl
ljmp
nop
ds
in
aam
mov
sub
aam
mov
stos
fcoms
dec
dec
nop
icebp
cli
aaa
sub
adc
jns
les
test
adc
sub
nop
arpl
push
aad
test
xor
adc
aaa
and
les
sub
dec
lds
es
enter
ds
or
pop
sbbb
out
cmpl
nop
mul
adc
enter
or
jo
sub
nop
or
imul
push
insl
add
inc
scas
stos
nop
mov
adc
and
mov
xchg
mov
adc
std
jp
push
nop
arpl
dec
addr16
xchg
and
mov
aas
rcll
push
dec
jb
push
jmp
popa
fwait
rcrb
xchg
out
push
push
dec
push
mov
mov
bound
sub
nop
xchg
sti
cwtl
ja
mov
stos
adcl
jl
adc
xor
xchg
std
into
nop
scas
pop
and
movb
insl
js
repz
imul
dec
sbb
ds
or
mov
loop
xor
push
movsb
aad
fs
fstpl
incl
popa
aaa
cmp
insl
sub
mov
pop
pop
ja
inc
xchg
mov
add
and
outsb
jnp
test
lahf
icebp
xchg
xor
nop
push
mov
xchg
scas
add
and
das
nop
test
jl
mov
lea
add
nop
ficoms
xor
jle
pop
insb
dec
pop
adcb
mov
pushf
xchg
fcmovu
mov
int3
out
imul
xchg
xchg
add
dec
dec
call
testl
pop
test
push
pushl
mov
sub
jno
sub
xor
pop
in
and
xchg
mov
aas
lcall
pop
inc
lahf
cs
and
push
pop
repnz
lret
jo
arpl
cltd
lock
mov
bound
adc
int
pushl
les
mov
fisttpl
imul
das
les
insl
out
xchg
mov
push
in
sub
push
adc
or
sub
mov
gs
adc
dec
nop
in
cmp
or
aaa
cli
mov
jg,pn
fdivr
jnp
jb
fwait
es
mov
pop
sbb
jecxz
xchg
pshufw
ja
movsb
adc
nop
push
je
xchg
shrl
push
cmp
or
insl
xchg
xchg
iret
adc
cmp
mov
rcrb
dec
inc
xchg
test
imul
jnp
add
nop
das
jne
ljmp
andl
out
jmp
adc
fnsetpm(287
sahf
dec
jmp
mov
mov
pop
mov
aad
nop
loope
xor
adc
gs
addr16
sbb
push
push
inc
nop
ret
outsb
mov
adc
lret
xor
inc
jmp
mulb
std
adc
cwtl
xchg
out
mov
pop
adcl
cmp
mov
push
aas
andl
jmp
jecxz
inc
dec
shr
pop
xlat
adc
lods
cmpsb
xchg
xor
nop
leave
test
imul
ss
int3
sarb
call
in
lret
cli
nop
cmp
aam
aaa
xor
sti
nop
fwait
inc
add
jle
nop
aad
jge
shr
dec
enter
out
rcl
and
gs
adc
adc
jp
nop
xor
mov
inc
clc
out
test
sarl
mov
mov
adc
nop
sbb
nop
mov
lods
gs
insb
or
cmp
ret
xor
sub
inc
nop
mov
mov
sub
popf
in
mov
inc
out
sbb
setae
mov
adc
in
rcl
cmp
jae
add
pusha
jb
fwait
cmp
clc
rclb
inc
pop
popa
jmp
nop
addb
repnz
lret
ss
or
pop
push
mov
fisttpll
pop
je
mov
xchg
xchg
jb
sub
push
loope
mov
nop
out
lock
cmpl
mov
testl
mov
push
mov
cmpsl
jmp
push
inc
mov
jns
mov
add
loop
adc
cmp
dec
mov
in
xor
into
int
mov
fs
cmp
nop
mov
imul
push
cld
xchg
aam
cmp
in
push
rcrb
mov
xor
push
int
add
aaa
cltd
nop
or
or
or
mov
cmpsb
xchg
jp
add
in
inc
fcoml
bound
out
int
mov
arpl
mov
or
nop
xlat
sub
xor
pop
mov
mov
lods
sahf
ficomps
cmpl
and
bnd
adc
arpl
mov
je
icebp
nop
fsub
inc
and
inc
popa
nop
outsl
mov
xchg
add
mov
loope
test
sub
andl
lods
int3
daa
jmp
jle
mov
dec
dec
nop
mov
and
mov
call
repnz
mov
dec
insb
or
sub
dec
test
fistps
cmp
sti
push
enter
fs
mov
pusha
fwait
lock
adc
inc
sbb
add
jmp
int
fidivl
pusha
in
arpl
nop
mov
popa
sbb
nop
icebp
jnp
mov
nop
js
lret
stos
jge
jg
nop
xchg
subb
push
in
andl
jne
add
ljmp
nop
push
cmpsl
xchg
sub
icebp
scas
mov
in
lock
dec
mov
movsb
jecxz
adc
sbbl
stos
mov
fsubrs
pop
push
xchg
pop
cmp
nop
cmp
mov
push
push
xchg
aas
push
xor
imul
push
or
daa
mov
cwtl
ss
das
dec
std
cmp
lahf
outsb
inc
pop
xlat
jmp
jbe
psrlw
sub
add
nop
rcl
into
add
xchg
xor
mov
dec
nop
inc
xor
push
dec
or
xchg
call
sbb
fisubs
fcompl
add
loopne
push
xchg
addb
std
jle
js
xchg
imul
in
adc
mov
rolb
adc
pop
jge
insl
mov
xchg
nop
ret
dec
leave
add
imul
sti
lods
add
adc
jns
fidivs
dec
jb
mov
ja
cltd
mov
fists
insl
sub
test
je
mov
or
mov
pusha
dec
sub
nop
pop
and
outsl
fsubrl
inc
call
pop
ss
mov
cmc
imul
adc
and
jbe
cmp
nop
pop
add
jo
xchg
cmp
lret
lret
imul
jp
pop
sbb
and
nop
imul
jnp
xor
add
push
and
dec
xchg
and
pop
push
loopne
mov
push
test
push
jecxz
lret
xchg
push
adc
std
jb
jne
nop
test
xlat
scas
mov
ret
xchg
pop
test
aad
and
add
push
nop
mov
or
je
mov
xor
push
jecxz
push
in
clc
pop
push
sub
nop
dec
lds
and
scas
lea
sub
pop
loopne
or
inc
icebp
mov
mov
insb
push
daa
nop
push
adc
lret
nop
and
loopne
pop
xchg
adc
rclb
inc
cmc
aam
loopne
frstor
inc
add
mov
mov
adc
xorb
loopne
sahf
nop
mov
loopne
or
add
push
aas
stos
daa
sub
popf
adc
or
xor
mov
pop
xor
int3
jmp
or
pushf
xchg
lods
cmpb
push
clc
jl
aad
mov
push
mov
dec
inc
repnz
mov
popf
push
mov
inc
mov
or
push
mov
rolb
lock
xchg
out
sub
mov
push
or
xchg
mov
adc
leave
push
xor
dec
loop
xor
jmp
jo
xchg
test
xor
fadd
clc
divl
and
popf
sbb
iret
ror
push
mov
lock
and
push
pop
adc
push
pop
hlt
xor
adc
cli
in
xor
inc
jns
mov
test
add
nop
push
or
jb
jp
xchg
ficompl
and
sub
xchg
lods
mov
lahf
inc
adc
jb
adc
imul
fwait
cmp
push
adc
daa
popf
nop
push
sub
inc
int3
pop
lcall
mov
adc
push
jne
cmpsl
in
fwait
nop
stos
int
mov
fninit
nop
fstpl
or
imul
adc
adc
hlt
nop
insb
subl
mov
push
pushf
dec
jle
das
cwtl
scas
sbb
push
adc
fildl
mov
and
push
nop
and
arpl
nop
pop
push
xor
mov
mov
nop
mov
ret
loope
or
jmp
push
dec
shlb
jge
lds
mov
push
inc
adc
mov
mov
loop
mov
cmp
in
add
scas
fsubrs
push
or
mov
inc
push
shlb
nop
mov
sbb
aaa
adc
gs
lock
enter
fildll
dec
push
adc
inc
mov
fs
sub
adc
loopne
jmp
xchg
push
nop
mov
add
lcall
nop
or
sbb
mov
or
rorl
nop
or
aas
pop
push
sbb
nop
mov
and
js
lock
pop
adc
or
jle
subb
out
and
cmp
imul
aaa
xchg
nop
mov
pcmpeqb
popf
cmp
in
add
mov
adc
jb
negb
arpl
int3
js
pop
xchg
ret
pop
lcall
push
xchg
es
mov
mov
nop
out
std
test
nop
int3
call
in
nop
fnstenv
pop
mov
movsb
dec
test
jne
cli
and
push
nop
int3
xchg
xchg
cmp
xchg
xchg
outsb
or
cmp
cli
xchg
jb
lahf
ficoml
and
xchg
les
ret
loopne
lret
test
stc
loope
inc
adc
cwtl
mov
adcb
nop
pusha
sti
adc
inc
nop
sbb
lds
aaa
ret
push
cmp
popa
push
test
dec
je
lock
mov
adc
shl
pop
jb
or
inc
pop
inc
insl
nop
cltd
xor
fstl
cmp
jmp
nop
test
and
or
jecxz
arpl
cwtl
mov
js
jae
sbb
add
xchg
xor
inc
test
or
fisttpl
iret
cli
or
movsl
testb
adc
jecxz
repnz
and
lret
or
mov
ss
xor
inc
in
push
mov
xor
sbb
and
cmp
adcb
lret
lds
aad
scas
push
mov
cmp
mov
movsb
xor
mov
mov
rclb
cmpsl
jp
int3
sbb
popa
nop
or
xor
or
mov
xchg
gs
icebp
mov
lcall
push
test
aaa
mov
ror
and
jo
cwtl
cmp
cmpsl
nop
mov
dec
mov
or
nop
cmp
cwtl
mov
cld
into
nop
aam
addb
jns
int3
xchg
clc
push
fsubrl
sti
push
lock
outsb
or
jge
lret
cli
mov
test
pop
test
int3
mov
pop
xchg
jge
jmp
or
xor
pop
push
cwtl
out
fiadds
adc
cltd
jge
push
aam
ffree
or
mov
and
dec
xor
fcomps
nop
push
aam
aad
lahf
inc
and
test
inc
faddl
pop
test
lcall
add
loop
push
nop
mov
adc
and
sub
lds
or
push
dec
fcompl
xchg
or
nop
adc
xor
or
mov
sbb
jecxz
mov
mov
leave
fwait
dec
sar
cwtl
nop
cmp
sbb
into
ret
nop
xchg
pop
testb
pusha
pop
xor
push
loope
repz
xchg
aas
mov
xchg
pop
lcall
fildl
nop
imull
push
pop
test
sub
dec
in
std
xchg
cmp
movsl
mov
pop
xor
pop
dec
lock
inc
mov
fwait
pop
jb
mov
mov
mov
nop
pop
ds
add
gs
iret
rol
cli
enter
frstor
fsubs
not
lret
xchg
pop
mov
push
mov
sbb
aas
in
mov
nop
clc
scas
pop
cmp
sub
push
inc
pop
ss
add
jne
cli
jp
test
push
popa
repz
shlb
stos
ret
jle
push
push
nop
jl
push
mov
nop
faddp
dec
sbb
outsl
cmpb
pop
insl
inc
pusha
daa
jmp
lods
loope
sub
jmp
nop
icebp
mov
gs
bound
xchg
inc
dec
lock
or
jb
or
loop
push
xchg
mov
ficompl
mov
cli
jp
rolb
aad
mov
pop
pop
test
pop
leave
adc
adc
cltd
adc
aam
mov
stos
insl
xor
pop
jne
pop
add
jno
movsb
outsb
dec
pop
les
mov
mov
aam
adc
mov
test
in
mov
mov
push
gs
inc
pusha
inc
call
xorl
in
nop
pop
push
adc
nop
xor
mov
jns
adcb
insb
inc
enter
imul
fiaddl
pop
pop
mov
nop
lcall
shlb
test
int
cmc
les
out
dec
fidivrs
nop
in
push
mov
push
nop
shrb
sub
jle
adc
aas
lods
sbb
jae
mov
and
mov
sbb
mov
nop
icebp
leave
mov
stos
nop
int
jle
dec
sbb
pop
inc
loope
mov
inc
hlt
cltd
or
inc
in
inc
in
mov
pushf
mov
sti
mov
jnp
ficompl
addr16
sub
cmp
push
insl
xchg
mov
xchg
test
nop
in
cltd
pop
mov
cmc
leave
nop
stos
adc
lcall
incl
fstl
push
seto
or
les
jl
adc
je
sub
lods
int3
shll
sahf
nop
aad
neg
rorb
cwtl
nop
adc
sbb
out
nop
mov
addl
nop
rcl
pop
xor
push
mov
test
hlt
jmp
nop
mov
outsb
ret
sub
fmull
jae
scas
loopne
mov
aas
push
jb
sub
inc
mov
cmpsb
in
les
nop
incl
pop
nop
bnd
sbb
gs
fcoms
pop
mov
fisttps
cmpsb
in
popa
fwait
rclb
xor
mov
andb
pop
cmp
sti
nop
push
bound
daa
sub
add
jmp
in
lods
nop
mov
mull
adc
scas
sbb
dec
lret
nop
out
movsl
cmp
cmp
jle
push
repnz
mov
arpl
nop
pop
xor
inc
nop
adc
add
xlat
dec
cwtl
nop
in
testb
sarb
nop
xchg
inc
arpl
jno
xor
nop
push
into
adc
dec
xchg
inc
adc
fwait
sbb
lret
and
ss
popf
mov
dec
repnz
scas
mov
ficoms
nop
cs
mov
lods
nop
inc
stc
pop
test
cltd
nop
outsl
sub
mov
and
aam
out
mov
inc
clc
adc
push
out
std
sub
or
xor
imul
add
xchg
nop
lea
nop
jae
and
pusha
or
roll
pop
xchg
pop
add
aad
imul
xor
popa
or
lods
lock
sti
ficoms
xor
or
rcrb
xchg
andb
nop
sub
jne
arpl
push
push
ss
adc
and
xchg
mov
hlt
sbb
mov
out
add
jae
jbe
push
popa
sub
fimuls
hlt
stc
xor
and
rcrb
mov
nop
pop
sbb
out
fwait
dec
nop
ds
sahf
pop
ja
out
adc
add
idiv
filds
nop
and
cmp
add
dec
dec
clc
nop
je
push
dec
sub
cmp
ss
pusha
shlb
adc
sub
mov
or
ja
rcll
cmc
adc
dec
dec
aad
nop
cmp
sbb
nop
push
popf
lea
cmp
nop
mov
enter
add
mov
stos
lock
sarb
nop
fdivl
ljmp
nop
xlat
xor
push
nop
push
xchg
push
inc
stc
int
js
xchg
subl
jbe
enter
adc
sahf
push
dec
jno
pop
adc
add
sahf
iret
aas
lock
imul
mov
pop
inc
or
into
fldcw
fmuls
and
jmp
loope
nop
pop
icebp
test
sbb
sub
aad
inc
mov
push
cmp
mov
leave
xchg
or
out
sbb
pop
dec
nop
push
and
adc
dec
gs
or
nop
sub
cmp
call
and
dec
xor
fwait
mov
adc
jge
stos
nop
mov
mov
imul
jae
mov
je
nop
lods
arpl
mov
in
lcall
xchg
scas
ss
xchg
movsl
cli
fdivrl
outsl
rorl
mov
bound
pop
loopne
jp
pop
or
enter
sar
ja
push
sub
cli
test
push
fsts
data16
adc
adc
mov
xchg
sbb
push
cwtl
jae
push
lret
dec
sub
pop
cs
xchg
faddl
push
mov
sbb
xchg
cmp
and
pop
cmp
adc
xor
inc
push
call
nop
stos
fsubrs
scas
aad
push
ljmp
inc
mov
or
fistps
stos
andl
leave
dec
and
jge
inc
cld
xchg
jb
xchg
lods
int
mov
shl
shll
cmp
inc
nop
and
cwtl
push
nop
push
xor
sbb
nop
addr16
les
nop
mov
jle
push
nop
xor
mov
scas
nop
aad
mov
out
or
sub
mov
dec
jne
rolb
dec
imul
lods
lea
mov
lods
incb
push
pusha
push
fcoms
mov
test
or
insb
adc
jnp
mov
cmpsl
daa
sahf
sub
or
jo
shlb
out
les
jle
and
movl
mov
adc
mov
nop
aam
rorb
es
mov
nop
enter
pop
lret
cli
xchg
aad
nop
sub
cmc
shl
xchg
jbe
nop
jb
sbb
cli
mov
mov
xchg
nop
push
mov
enter
mov
xor
aas
sbb
mov
hlt
mov
adc
cmp
mov
or
pop
lock
pusha
push
jne
daa
test
ret
pop
dec
inc
arpl
cmpsb
and
mov
repnz
lret
icebp
movsl
inc
mov
or
xor
sbb
nop
popa
xchg
repnz
rcrl
sub
dec
cltd
push
pop
pop
add
dec
mov
jbe
sbb
adc
xlat
mov
pop
cmp
scas
mov
jae
iret
lock
std
jecxz
outsb
nop
mov
mov
dec
aaa
pop
xchg
nop
jns
dec
fwait
enter
nop
cmc
lods
jne
imul
call
insb
xchg
ss
fsubrs
mov
cwtl
iret
nop
out
xor
test
sti
jb
cld
or
mov
nop
push
adc
rclb
or
and
lock
ja
add
cmp
arpl
nop
lret
clc
pop
dec
cmp
dec
js
mov
mov
orb
fsubs
stc
mov
mov
insl
inc
test
push
pop
pop
xor
sti
xor
fmul
mov
and
subb
aaa
or
adc
lret
insb
repz
lea
in
nop
mov
sub
nop
sarb
outsl
dec
notl
xchg
push
stos
pop
nop
out
subl
sub
lods
outsb
lret
fs
iret
xor
inc
aam
push
test
push
add
sbb
and
nop
loop
lods
mov
nop
sbb
push
xchg
nop
push
mov
pop
inc
push
jle
add
cmp
insl
or
adc
test
mov
mov
movsb
outsb
dec
mov
inc
test
pop
and
inc
mov
jae
or
mov
xor
and
out
aad
xchg
ljmp
in
fsub
rcl
sub
jle
out
adc
nop
jg
mov
mulb
sub
push
dec
inc
lods
repz
ja
xchg
jne
addr16
cmp
out
sbb
nop
lcall
xchg
nop
ds
sbb
fmull
sbb
shrb
pop
jne
clc
xchg
inc
xchg
fmull
mov
or
js
xchg
adc
add
xchg
sub
push
xchg
pushf
mov
mov
pop
xor
xor
lcall
nop
sub
fnstcw
iret
pop
movsb
lods
adc
cmp
or
pop
outsl
neg
mov
mov
in
popa
nop
push
in
cld
adc
xor
mov
adc
pause
jmp
jp
sub
popf
pop
push
scas
sub
adc
ljmp
sbb
rol
bound
fisubl
push
push
pusha
shlb
addr16
sahf
and
pop
fadds
movsl
or
cs
dec
in
lods
adc
add
or
sub
inc
sub
test
movsb
xchg
mov
clc
or
jb
int3
inc
or
daa
aaa
xor
aas
nop
imul
mov
iret
enter
repnz
movsl
ss
rcl
pop
popf
mov
add
nop
in
push
ret
pusha
mov
dec
xchg
mov
sbb
out
outsl
xor
pop
inc
int
cltd
or
xchg
f2xm1
xor
inc
cmpl
lods
adc
lds
cmpsl
lock
insl
iret
nop
arpl
jg
dec
nop
test
mov
mov
dec
mov
lahf
aad
dec
stos
adc
mov
mov
pop
or
aaa
stos
notb
nop
inc
mov
test
nop
dec
pop
mov
dec
ss
lret
fdivs
jmp
dec
mov
test
pop
movsb
loope
dec
movsl
nop
mov
imul
in
es
dec
mov
rclb
nop
inc
mov
stos
xchg
nop
cwtl
inc
in
jno
sbb
adc
xchg
mov
or
sub
jnp
nop
mov
lahf
mov
mov
add
jnp
rcrb
int3
loop
js
sbb
jg
fadds
nop
addr16
xlat
add
jmp
or
adc
lds
jne
sbb
push
sbb
nop
lahf
loop
ret
rcrl
push
xor
jns
andl
fisubrs
dec
sbb
nop
leave
ret
add
or
std
fadds
add
lea
fistpl
scas
leave
jb
ljmp
sar
aam
adc
hlt
adc
fiaddl
push
add
sub
push
mov
cmp
push
imul
cs
aad
fadds
mov
scas
fwait
add
fldcw
add
stc
adc
jge
aam
sbb
hlt
adc
or
cmp
mov
cwtl
sub
ret
nop
into
test
in
jmp
jo
or
jmp
loope
cwtl
int
sbbl
push
fmull
xor
cmp
mov
nop
fs
in
pop
push
xchg
mov
mov
sub
cmp
sti
jge
test
rcrb
jb
cmc
sbb
xchg
pop
nop
xor
xor
nop
sbb
jbe
nop
adc
mov
fs
nop
jle
inc
not
push
push
addl
aas
mov
adc
cmp
sti
adcl
and
sbb
mov
cmpsl
call
adc
test
in
push
dec
adc
shl
add
dec
cmp
cltd
jp
sub
cwtl
xor
es
sbb
nop
mov
cmp
enter
and
push
nop
mov
sbb
lods
adc
mov
lahf
setb
fnop
dec
and
or
rcll
push
insb
adc
mov
loopne
xor
faddl
das
jb
in
mov
mov
nop
dec
inc
xor
and
pop
insb
nop
mov
dec
dec
nop
lcall
push
adc
les
mov
lcall
inc
jp
or
aad
daa
repz
xchg
das
or
xchg
dec
hlt
stos
outsb
in
push
int
nop
sub
add
adc
int3
xchg
nop
out
lods
add
sarl
xor
outsl
push
xor
test
dec
push
pop
and
cmpsb
add
xchg
dec
push
mov
in
lcall
in
pop
inc
nop
jg
cs
ljmp
xor
outsb
adc
pop
test
stc
inc
nop
adc
aam
in
sbbb
ret
fisttpll
mov
clc
add
xor
jne
rcrb
prefetch
and
hlt
repz
push
aaa
loope
cmpsb
cmp
arpl
mov
fsts
enter
push
int3
jnp
dec
jg
mov
cmp
xchg
dec
add
mov
das
ss
imul
in
pushf
nop
into
xchg
cmpb
out
nop
cmp
loopne
mov
outsl
mov
push
adc
sub
mov
adc
int
and
loopne
sub
dec
cmc
adc
sub
das
xchg
nop
xchg
int3
mov
sbb
dec
call
loopne
jnp
scas
adc
mov
cld
xchg
shlb
dec
adc
int
dec
sub
xchg
fnstsw
nop
in
xlat
fsubrs
jmp
adc
nop
mov
fildl
pop
mov
sahf
lods
adc
mov
push
add
insl
adcb
inc
arpl
andl
cmp
lret
fwait
mov
dec
pop
arpl
inc
clc
movsb
nop
outsb
int3
jmp
iret
loopne
aam
nop
loope
or
nop
adc
and
lcall
std
xchg
ret
cmp
aam
in
scas
xor
nop
loop
sarb
jbe
mov
and
in
icebp
fimull
gs
fsts
into
rorl
stos
dec
cmp
int3
pop
mov
popf
mov
lock
mov
cli
inc
jle
pop
cltd
lock
loopne
nop
or
int
in
nop
dec
lods
add
push
lods
mov
loope
add
pop
jae
mov
jp
sbb
xor
push
ret
sbb
mov
cmp
jl
test
nop
mov
jns
mov
sbb
pop
loope
cmp
pop
call
adc
lock
int3
jg
dec
jbe
pop
mov
ret
pusha
dec
jmp
addr16
adc
outsb
clc
roll
jg
pop
leave
nop
push
sub
mov
jmp
ret
push
in
jp
pop
nop
insl
jg
xchg
mov
sub
sbb
xchg
aam
xor
ss
or
push
cli
or
jge
test
xor
negl
inc
push
orl
mov
mov
jg
daa
sub
nop
jnp
iret
push
shl
hlt
xor
nop
rol
mov
rcrl
nop
pop
testl
inc
test
stc
mov
push
jo
out
or
mov
leave
nop
dec
sbb
cmpl
sbb
ds
mov
pop
mov
push
cltd
ret
push
cmp
scas
lods
push
pop
sbb
inc
loopne
mov
aad
cmpsb
xor
stos
sbb
inc
loope
int
dec
lret
pop
or
nop
xlat
xchg
cmpsb
fistl
hlt
mov
movsl
outsb
into
mov
inc
bound
xlat
adc
add
loope
ljmp
pusha
add
gs
or
leave
or
mov
dec
adc
aam
arpl
jb
mov
mov
jnp
sub
mov
nop
movsl
cmp
jb
xchg
sub
jl
mov
lods
lock
fnstenv
pop
out
push
pop
nop
mov
xchg
rolb
nop
hlt
mov
xchg
mov
mov
nop
jns
jnp
mov
lods
adcb
pop
fcmovnb
xchg
pop
rol
add
std
fs
pop
test
jg
sbb
pop
pop
cltd
cmp
cmp
insb
xor
mov
xor
outsl
xchg
push
mov
divl
loop
int
nop
push
sub
inc
mov
sbb
shrb
stos
pop
pop
cltd
xchg
xor
insb
rolb
xor
cli
cmp
dec
nop
mov
popf
nop
sub
add
cmpsl
lds
nop
jecxz
jmp
cmp
int
adc
cmp
imul
or
add
inc
inc
xor
nop
push
fisttps
mov
ret
mov
xchg
mov
out
orl
test
mov
out
bnd
xor
adc
cld
adc
cmc
adc
sti
mov
fimuls
ficoms
mov
popf
sarb
in
aad
fstpt
add
push
cmc
jbe
mov
repnz
mov
rclb
into
nop
cmc
cmp
mov
nop
ret
jp
in
aad
nop
dec
pop
das
lahf
pop
data16
and
rcl
inc
lods
sbb
inc
add
adc
nop
shrb
dec
mov
push
sbb
popa
and
xchg
jns
sbb
lods
stc
loopne
andb
lret
insl
fldln2
mov
iret
xchg
xchg
mov
xor
sbb
or
xor
ss
jecxz
add
xchg
dec
rclb
shl
aaa
pop
or
clc
nop
divl
push
or
lods
jno
mull
add
movsl
lock
adc
in
mov
sbb
xor
fcoms
in
or
push
je
in
fcoml
mov
flds
inc
sbb
loope
cmp
jno
rcl
and
mov
adc
cmp
jno
fdivrl
xchg
loopne
mov
and
dec
add
rcrb
xchg
shl
adc
add
loope
sbb
xchg
dec
mov
add
mov
lret
and
sahf
nop
inc
dec
into
jne
cmp
xchg
stos
int3
dec
sbb
adc
gs
mov
dec
adc
xchg
mov
lods
push
sar
xchg
nop
and
push
xor
ret
mov
nop
xchg
dec
leave
es
dec
mov
jnp
dec
ds
loop
sarb
xchg
nop
jb
xlat
adc
movsb
and
enter
nop
xorl
mov
lret
daa
arpl
jo
nop
fdiv
inc
adc
inc
fbld
inc
std
xchg
mov
mov
stos
arpl
and
nop
cmc
mov
jns
inc
push
nop
adc
xor
cmp
dec
movb
pop
xor
lea
pop
xchg
dec
sbb
clc
dec
sub
inc
stc
push
or
lock
pushl
inc
bound
lahf
or
nop
or
xchg
nop
sub
pop
lcall
es
or
negl
push
jp
xor
arpl
jmp
in
fildll
ret
sbb
daa
or
lods
push
ja
add
adc
nop
and
ret
int3
jns
inc
add
icebp
xor
cmp
mov
shll
aam
nop
fsubs
adc
sub
mov
call
and
scas
adc
shlb
xchg
push
int
mov
repz
pop
pop
and
cld
nop
pop
adc
xchg
jb
movsl
nop
mov
dec
dec
test
int
lcall
and
inc
aas
popf
nop
out
mov
pop
hlt
adc
and
fcoms
jbe
loope
xor
xchg
jae
mov
mov
rcll
dec
imul
xor
in
pop
int
sub
int3
push
outsl
dec
aam
add
nop
dec
fs
std
lret
pop
dec
nop
push
push
jns
arpl
cwtl
or
aam
dec
sub
mov
cmpsl
ljmp
cmp
xchg
mov
sbb
jmp
pushf
nop
pop
mov
and
nop
adc
sbb
aaa
daa
add
and
pusha
jne
nop
mov
jbe
nop
jo
sub
fidivrs
std
sub
nop
adc
call
jbe
test
cltd
outsb
jne
fsubrp
rcr
nop
dec
sbb
mov
data16
cld
mov
xor
nop
xor
adc
sub
and
inc
cli
psraw
sub
dec
enter
jnp
pushf
inc
les
push
or
xor
sub
insl
jecxz
not
dec
movsb
lret
testl
xchg
sub
sbb
nop
xchg
xchg
mov
xor
nop
mov
mov
cs
or
xchg
cmp
mov
nop
in
pop
out
mov
jge
shrl
push
cwtl
adc
or
inc
mov
sbb
negb
cmpsl
notb
bound
loope
loop
xor
sbb
repz
sub
es
insl
jl
pop
ja
cmpsl
dec
dec
bound
out
es
fstpt
cmp
ret
adc
xchg
add
out
xadd
aad
mov
cli
mov
stc
pushl
mov
sti
inc
int3
pusha
adcl
or
test
pop
pop
int
push
push
adc
nop
mov
int3
jecxz
mov
imul
nop
hlt
xor
xor
insb
pop
gs
loope
push
sbb
out
popl
add
mul
adc
xchg
orl
lock
mov
lret
push
mov
mov
jle
enter
inc
mov
inc
adc
dec
mov
imul
mov
enter
aaa
jmp
nop
das
inc
fistps
into
adc
pushf
fwait
jne
aad
cmpsl
mov
inc
add
adcb
and
push
xchg
faddl
pop
adc
movsb
jno
aam
arpl
test
fiadds
lods
dec
mov
jno
adc
mov
push
pop
outsl
or
fstps
cmc
inc
stos
shlb
nop
out
jae
mov
adc
shlb
std
sub
cmp
mov
inc
dec
call
nop
mov
dec
fs
imul
inc
dec
adc
push
fiaddl
sub
or
lock
mov
cld
leave
and
fiadds
test
mov
nop
sbb
pop
in
test
mov
icebp
dec
pop
mov
nop
mov
enter
data16
xor
fisttps
pause
dec
dec
jae
cmp
lcall
ficoml
sahf
imul
xchg
ljmp
or
out
aad
loopne
mov
push
gs
or
lock
cmpsb
push
mov
push
dec
in
jle
in
aam
lahf
mov
out
push
and
popf
jecxz
xchg
nop
inc
sub
jp
cmp
mov
es
je
cmp
push
mov
daa
movsl
nop
rorb
xchg
nop
dec
lret
int3
cmc
push
xchg
jbe
push
push
rclb
dec
mov
sub
push
nop
add
cwtl
mov
nop
mov
sub
stos
nop
pop
push
mov
pop
sub
jns
js
hlt
dec
inc
js
nop
or
scas
jge
push
xchg
pushl
mov
pop
popa
nop
fstpt
nop
out
or
jp
movzwl
iret
scas
idivb
dec
push
aaa
je
cmp
pop
mov
add
sub
mov
mov
pop
rcr
dec
mov
fcomip
lds
push
lcall
mov
adc
cmp
lret
insl
loopne
xor
add
nop
inc
cltd
jns
mov
outsl
dec
nop
lret
js
sbb
push
lea
in
inc
frstor
je
std
add
inc
stc
adc
insb
jp
into
ds
ljmp
or
mov
or
mov
movsl
nop
jp
insl
outsl
jno
inc
push
nop
pop
mov
ret
or
inc
pop
dec
out
addr16
inc
imul
mov
arpl
nop
psadbw
adcl
add
loope
das
or
in
xchg
jns
dec
inc
paddsb
mov
jae
pop
fldt
xor
loopne
jno
mov
pop
mov
mov
or
or
lret
jb
arpl
and
in
fcmove
nop
imul
pushf
push
outsb
mov
mov
mov
xchg
es
les
and
adc
mov
ret
out
cld
sarl
push
sub
stos
add
add
stos
fucomp
out
nop
or
cmp
xor
test
mov
nop
or
in
jns
out
sub
clc
nop
or
jecxz
leave
dec
ds
ficomps
mov
or
sub
push
test
adc
pop
and
or
mov
rclb
xchg
fcoml
cmpsl
xchg
iret
push
nop
adc
jae
or
test
sub
sbb
fmull
ds
or
into
leave
dec
adc
nop
mov
mov
xchg
nop
cmc
scas
out
cmpsb
bound
dec
lods
adc
icebp
push
call
enter
push
clc
in
stos
mov
inc
inc
nop
jb
adc
hlt
mov
aad
loopne
fstpt
or
sub
dec
xchg
ficoms
scas
inc
xchg
xchg
data16
cmp
out
bound
adc
or
aaa
cs
iret
nop
pop
pop
fmuls
insl
testl
ret
add
cmp
mov
jo
jg
into
sbb
push
push
je
pop
and
and
bound
dec
clc
lahf
or
jg
sub
mov
jle
daa
mov
mov
mov
xchg
nop
sbb
test
adc
repz
inc
sbb
nop
fsubp
dec
push
aaa
inc
insl
and
dec
sti
shll
movsb
jns
nop
or
cmp
push
subl
lret
mov
cmp
shlb
adc
mov
cmp
adcl
jo
call
dec
push
aad
xor
shlb
outsb
mov
or
jae
repz
mov
adc
jecxz
cmp
xchg
add
jl
loop
nop
scas
jns
iret
ljmp
mov
mov
and
dec
es
and
pop
fiaddl
nop
mov
inc
fdivrp
fisttpl
icebp
mov
cmpsb
nop
jle
push
enter
jne
std
inc
dec
lahf
mov
pop
mov
test
mov
notb
nop
out
xchg
or
cwtl
nop
mov
mov
loopne
inc
jg
sahf
repnz
adc
shlb
stc
dec
nop
std
iret
in
sub
nop
out
mov
fists
cmp
int
inc
nop
rcll
dec
icebp
jno
nop
sbb
jg
nop
xor
loop
push
stos
int3
or
sahf
mov
std
nop
out
icebp
mov
nop
test
mov
push
sub
fnstsw
fidivrl
lea
cmp
test
shll
fwait
nop
xchg
push
fisubl
dec
icebp
mov
xchg
xchg
clc
or
fsubrs
ds
add
imul
pop
xchg
nop
mov
test
nop
pop
les
xor
pusha
test
mov
pop
mov
popf
jl
filds
nop
push
sub
nop
addb
sbb
pop
dec
aas
nop
dec
jae
repz
out
adc
jmp
dec
enter
sti
fisttpll
nop
daa
orb
lock
cmp
ret
lods
mov
popa
jbe
fmull
mov
nop
out
mov
ja
pop
adc
jg
sbb
shl
push
jne
mov
nop
push
lods
push
mov
test
sub
enter
nop
sub
shlb
nop
movb
imul
nop
pop
and
aam
adc
mov
and
adc
dec
mov
fistl
add
loope
stc
pop
in
xchg
leave
pop
adc
test
movsl
pop
mov
out
xchg
sbb
sti
xchg
push
add
jns
xchg
pusha
nop
cmp
xor
push
adc
sub
mov
jp
lea
fcoms
jne
jl
fiadds
push
xchg
nop
or
subl
nop
movsb
inc
sub
push
xlat
inc
rorl
jne
push
fistpll
nop
or
mov
pop
mov
push
adc
mov
ljmp
mov
lock
test
addb
sub
mov
adc
andb
mov
or
scas
xchg
idivl
test
mov
cmpl
xor
mov
aaa
nop
add
cltd
jg
add
shlb
or
call
nop
dec
cwtl
xchg
sar
xlat
mov
lahf
mov
enter
hlt
shlb
cld
lock
mov
xchg
add
push
nop
dec
jecxz
xor
nop
inc
enter
xlat
aad
and
das
imul
rcl
insb
fnstsw
jnp
pusha
nop
mov
mov
in
nop
adc
test
divl
icebp
and
in
loopne
bound
shr
popf
inc
nop
jae
sbb
xor
mov
xchg
nop
out
xor
pop
add
sub
dec
sbb
loop
jne
push
dec
pop
roll
xor
pop
pause
xchg
push
mov
add
insb
fcom
xor
ja
mov
xchg
pusha
leave
rcl
mov
fchs
loopne
or
orb
adc
nop
icebp
xor
adc
cmp
dec
jnp
or
nop
add
jle
add
and
xchg
sbb
jecxz
rolb
and
dec
frstor
or
mov
or
les
cmp
sub
pusha
inc
push
ss
nop
inc
cmp
add
push
fcmovb
jbe
mov
mov
in
nop
das
jnp
out
xchg
mov
push
mov
inc
jmp
lods
js
adc
sub
adc
push
imul
in
into
std
mov
dec
int
les
rolb
jno
out
scas
arpl
ds
loopne
cmpsb
fisttpll
nop
cmpsl
mov
fdivl
nop
fcoms
imul
pop
push
mov
jle
nop
adc
inc
push
dec
and
mov
lods
fisubrs
mov
mov
test
out
jp
nop
dec
movsl
push
gs
push
xor
fisttps
nop
xchg
push
xchg
sub
sarb
jge
fsts
fs
jne
nop
scas
sub
add
jnp
push
pop
or
nop
pop
in
andl
cmp
or
icebp
mov
std
lret
sti
pusha
loop
hlt
enter
nop
xor
or
lods
or
pop
mov
inc
dec
mov
call
call
ret
dec
fldt
scas
cmpl
cmp
push
subl
adc
adc
lret
or
call
xchg
fnstsw
outsb
adc
incl
mov
inc
mov
lea
cwtl
inc
insl
nop
imul
mov
in
adcl
jg
mov
push
xchg
rcl
ds
sub
add
movsb
cmpsl
xchg
mov
add
icebp
cmp
push
mov
mov
enter
idivb
jmp
scas
sub
es
aaa
fdivs
dec
pop
and
push
fdivrs
jns
jbe
repz
pop
nop
insl
dec
sub
imul
loopne
nop
ret
testl
nop
cmp
xchg
movsl
mov
mov
rcl
xchg
aaa
scas
nop
insl
push
xchg
sbb
sti
or
nop
pop
mov
jecxz
loopne
adc
es
imul
aaa
nop
cwtl
call
jg
loop
nop
pop
or
leave
jbe
mov
ret
add
arpl
cmp
sub
clc
ja
fsubrs
xor
add
stc
fimuls
pop
aam
insl
xorl
sbb
sub
nop
and
push
inc
nop
xor
cmc
cld
pop
mov
subb
sub
int3
ficoml
dec
fldcw
inc
xor
int
fcoml
mov
scas
aas
ja
sbb
inc
adc
fs
xlat
push
adc
ljmp
mov
pop
mov
mov
fidivrs
fstpl
ja
mov
nop
jg
mov
imul
aam
nop
sbb
jno
jb
icebp
pop
jecxz
nop
xchg
adc
xchg
daa
js
adc
or
testl
stc
xchg
nop
div
fucomi
jns
push
clc
nop
repz
dec
nop
fwait
add
ficoms
mov
roll
cwtl
mov
jae
sarb
daa
sub
mov
daa
xchg
nop
out
xor
and
loope
pop
and
jmp
xchg
std
movsl
adc
mov
loopne
add
push
dec
push
mov
add
movsl
lock
xchg
push
or
pop
nop
push
sbb
icebp
push
mov
adc
mov
test
push
jmp
cmpsb
nop
dec
jo
iret
inc
cs
sub
stos
push
fwait
add
adc
cmp
pop
int3
jae
push
mov
stc
nop
xchg
out
sbb
nop
pop
push
addl
scas
daa
nop
or
inc
repnz
or
paddusb
rol
adc
dec
xor
pop
push
incl
nop
loopne
js
mov
xchg
pop
fisttpl
jb
pop
ss
nop
push
cltd
loop
scas
xchg
push
mov
nop
cmp
mov
stos
jecxz
jbe
and
lock
js
cs
jmp
repz
mov
pop
mov
pop
insl
notb
aaa
mov
xor
test
arpl
nop
mov
pop
xadd
nop
popf
popa
vprotb
xchg
pop
scas
fisubrs
bswap
xor
mov
nop
addl
push
adc
xor
dec
ljmp
stos
in
mov
nop
pop
or
mov
fwait
outsb
nop
xchg
xchg
fistl
mov
nop
mov
cmpb
cld
das
or
pop
cwtl
cmp
mov
enter
xchg
mov
xor
inc
call
push
push
nop
dec
or
or
dec
push
test
cmp
jecxz
nop
sbb
xor
pop
cs
shll
mov
lcall
lock
je
shlb
mov
nop
and
ror
jo
add
adc
xchg
or
cmpsb
mov
xor
adc
xchg
push
and
pop
lcall
in
sarl
notl
lds
aas
js
pushf
ret
xchg
pop
popa
lock
lods
pop
jl
outsb
inc
ds
adc
or
xor
nop
add
sti
and
push
sbb
adc
adc
xchg
stc
mov
inc
dec
std
shlb
fucomip
popf
pop
nop
repnz
and
stc
shl
nop
mov
lret
aam
fbld
mov
nop
fldt
xchg
mov
xchg
mov
daa
push
out
nop
mov
xchg
add
outsb
push
or
dec
pop
into
mov
mov
leave
repz
nop
xchg
pop
xchg
sbbl
xchg
pop
and
fldcw
sub
dec
pop
add
mov
push
nop
imul
cs
nop
cld
mov
adc
dec
stc
inc
nop
xor
nop
mov
add
pop
mov
int3
push
repnz
into
ret
or
dec
push
xchg
mov
xor
filds
fiadds
pushf
pop
out
aaa
lods
mov
jl
or
and
mov
xor
repnz
nop
xchg
or
or
or
and
jmp
into
mov
shlb
rcrl
subb
jecxz
xor
dec
sbbl
nop
jno
leave
pop
mov
lret
movsb
dec
cmp
fcmovnbe
xor
or
mov
nop
mov
sub
inc
or
lcall
xchg
in
stos
xchg
sub
mov
dec
push
inc
and
aaa
sbb
pop
popa
rorb
or
pop
adcb
sub
dec
nop
inc
push
ret
xlat
mov
stos
or
sub
int3
or
rcrl
nop
lods
push
xor
dec
arpl
mov
push
xchg
mov
divb
mov
add
call
iret
mov
mov
xchg
xor
popf
shll
std
adc
int
lahf
sbb
mov
aas
or
pop
outsl
cmp
nop
push
sub
popa
jb
sbb
ret
xchg
adc
xlat
loopne
mov
push
xchg
adc
or
fdivs
jl
nop
notb
loop
cli
shll
std
fnstcw
outsb
loope
dec
fiadds
nop
int3
pop
aad
mov
pop
inc
nop
mov
jg,pn
xchg
inc
dec
dec
cmp
mov
nop
jle
pop
fs
sbb
nop
outsb
fwait
iret
pop
repnz
lret
pop
in
popf
les
rolb
push
mov
loopne
pause
in
incb
sar
adc
inc
sahf
dec
lds
jns
js
test
movsl
or
xchg
imul
js
lods
aad
pusha
loop
dec
adc
bound
cwtl
inc
jb
iret
insb
imul
lock
xchg
clc
cs
stos
rorl
push
shlb
js
push
jp
sbb
test
xor
movsb
jle
rorb
ds
ss
sub
sti
loopne
adc
and
inc
sub
call
dec
push
jno
mov
dec
lds
imul
adc
push
push
mov
out
pop
dec
jmp
jb
nop
dec
cmpb
mov
loop
pop
xchg
hlt
cmp
std
and
mov
sbb
cmc
nop
fstpt
jns
add
ja
or
sub
pop
dec
out
jb
in
fcomps
pop
nop
out
inc
dec
inc
dec
push
mov
mov
adc
mov
add
fdivrs
and
push
xchg
nop
dec
adc
cmc
xchg
sbb
repnz
ljmp
test
rcrb
nop
lcall
jge
jb
nop
xlat
pushf
rclb
sub
rcr
or
jo
mov
mov
cmp
std
sti
adc
repnz
inc
push
jnp
lahf
arpl
adc
pop
jg
dec
lcall
repz
lock
xlat
adcb
and
das
nop
sbb
xor
out
shr
mov
outsl
dec
mov
mov
fsub
shr
cmp
add
dec
mov
enter
push
aam
pop
testl
rolb
mov
jno
rolb
mov
jle
mov
add
das
popf
jmp
adc
mov
testl
rcr
lret
loop
mov
rclb
incl
sub
cltd
stos
stc
popf
jne
pop
nop
push
jo
scas
push
pusha
rorb
cmp
call
shrb
leave
ret
nop
lahf
cmp
test
mov
mov
enter
test
cli
out
jp,pn
or
push
fstps
jg
pushf
inc
inc
pop
subb
xor
imul
loop
sub
int3
push
cmp
nop
stos
insb
fwait
aaa
stos
je
add
lret
mov
xchg
mov
push
les
nop
and
mov
scas
nop
jbe
cmp
lret
nop
and
fwait
sahf
sub
mov
pop
jae
push
cmp
xchg
add
xchg
fiadds
mov
mov
and
nop
jg
in
cwtl
in
dec
cmp
addr16
imul
dec
ficoms
and
test
std
push
aas
les
lret
fmull
and
xchg
push
stc
shr
lock
jg
push
or
dec
add
fs
ret
mov
jns
or
cltd
shlb
push
fucomp
adc
add
cwtl
int
movsb
or
nop
arpl
sub
adc
fwait
mov
push
lret
xchg
shrb
lea
loop
or
or
inc
mov
nop
loope
rorb
stc
sub
nop
lret
leave
lahf
icebp
adc
mov
or
out
mov
clc
cmpsl
rcl
ret
adc
xor
cmpsb
xchg
into
daa
and
adc
outsl
faddl
jns
loop
nop
jmp
add
sbb
movsb
jns
popl
imul
xorl
or
add
mov
sbb
sti
cld
jae
pusha
lods
lock
nop
add
push
iret
out
pop
nop
xor
pause
mov
mov
or
add
sub
lds
sbb
push
bound
out
inc
lea
jge
cmp
shlb
mov
arpl
out
fwait
and
mov
mov
std
or
enter
mov
jle
mov
mov
mov
sub
gs
fs
and
adc
add
cmc
in
mov
pop
mov
mov
jp
add
hlt
das
insl
xchg
or
out
jo
jmp
into
shlb
fcoml
jle
xor
nop
xchg
aam
sbbl
inc
nop
xchg
test
mov
fidivs
data16
nop
fcmovb
popa
stos
jp
push
xchg
mull
push
nop
sbbl
xchg
mov
cmpsl
adc
aaa
nop
and
push
cmp
filds
cmpsl
adc
inc
rolb
repz
loope
adc
push
ss
pop
and
inc
ja
mov
subl
adc
popf
mov
stos
jl
cmp
icebp
jmp
jmp
ret
in
mov
adcl
xchg
mov
lahf
xor
stos
mov
addr16
sbb
rcrl
rcll
jno
lock
cmpsl
outsl
sbb
insb
dec
xlat
repnz
sbb
jl
xchg
lods
nop
into
clc
stc
add
pop
fisttpl
lea
cmp
call
dec
sub
mov
inc
pop
enter
shlb
mov
cmp
dec
ret
scas
and
xchg
sbb
adc
jb
cmp
vprotb
orb
push
mov
pushf
nop
out
pop
cmp
pop
mov
jns
aam
jbe
nop
inc
sub
cmovnp
repz
xchg
dec
and
test
sub
mov
loop
iret
inc
test
cmp
int3
outsb
cli
add
mov
pop
and
dec
movd
loop
test
adc
xchg
jl
nop
jo
dec
xor
ljmp
mov
sbb
ret
sub
xchg
das
icebp
dec
out
or
adc
mov
nop
out
scas
test
mov
pushl
in
insb
sbb
adc
fnstcw
mov
mov
dec
dec
icebp
rcrl
adcl
cs
les
arpl
nop
icebp
xchg
aas
ss
cmc
inc
add
int3
sarb
nop
xchg
fsubp
inc
imul
push
mov
mov
xchg
mov
lock
hlt
int3
mov
adc
popf
adc
in
inc
bound
repnz
into
stos
or
mov
pop
shll
cmp
xchg
mov
jo
loop
adc
fwait
data16
xor
adc
xchg
adc
inc
nop
mov
cmp
adc
xor
clc
nop
sbb
push
cmp
lods
mov
mov
xchg
jmp
arpl
jno
shlb
inc
lock
xchg
lahf
fistl
fnstenv
out
push
or
fistps
mov
into
mov
mov
lock
sub
nop
ja
loope
sar
cli
ljmp
inc
int
hlt
pop
mov
xchg
idivb
mov
nop
icebp
es
adc
int
rcrb
add
aad
nop
xchg
arpl
cmc
jg
rcr
int3
clc
lret
daa
jo
mov
test
nop
fsub
cmp
mov
inc
rorl
and
shr
pop
imulb
outsb
dec
les
aaa
lods
sbb
inc
adc
xchg
and
aad
inc
and
xor
xlat
roll
imul
push
mov
out
scas
adc
adc
xchg
loop
jb
xchg
pop
repz
aaa
jmp
fidivrs
inc
jp
mov
lret
lods
scas
call
cmc
nop
push
push
fisubrl
fdivrl
xchg
cmp
push
sbb
xchg
insl
imull
adc
mov
and
pop
lret
dec
or
sbb
sub
in
jns
loope
push
cs
sub
and
pop
jbe
loop
pause
das
add
mov
fldl
xchg
std
mov
jbe
out
cmp
pop
stc
xchg
fldcw
jmp
mov
cltd
nop
mov
loope
mov
push
jae
cmp
int3
nop
sub
lock
or
aas
lret
mov
lock
dec
int
nop
push
mov
aad
jp
or
pop
sarb
dec
mov
push
flds
push
idiv
test
fildll
leave
nop
fwait
pop
orb
into
aam
mov
xchg
adc
xor
cwtl
push
lock
rclb
pusha
mov
nop
jae
into
adc
fcoms
bound
xor
sub
or
jge
cmp
and
jge
nop
adc
mov
inc
jb
jo
xchg
repz
dec
ja
xor
nop
dec
cltd
int3
in
mov
gs
nop
dec
outsl
rolb
and
outsb
sbb
nop
imul
xchg
scas
nop
int
aaa
pop
adcl
cmpsb
or
es
test
std
nop
icebp
sbb
cltd
and
or
nop
inc
scas
adc
cli
lcall
adc
pop
aaa
nop
pop
loopne
lret
sti
xchg
nop
and
mov
pop
push
in
insl
out
cmpl
nop
sar
dec
add
jne
leave
test
nop
aas
xor
xchg
lcall
cmpsb
add
mov
xchg
decb
pop
lock
pop
clc
mov
or
nop
sub
mov
divb
xchg
rorl
mov
inc
mov
cmp
inc
loope
subl
insb
pop
movsl
xchg
js
xor
nop
xchg
xchg
jns
out
iret
nop
in
and
adc
hlt
xor
rcrl
lcall
pop
pop
nop
xchg
xchg
pop
test
cmp
pop
and
mov
sub
add
adc
loopne
xorb
sbbl
jecxz
xchg
aas
xor
mov
repz
add
adc
test
or
daa
mov
in
pop
nop
test
or
or
xchg
mov
ds
fidivl
lfs
inc
lea
pop
xor
outsb
or
xchg
shlb
jecxz
pop
nop
fdivs
jne
or
push
nop
fiadds
cmp
movsl
dec
nop
sub
cs
mov
jb
nop
jae
mov
mov
ja
shrb
cld
push
xor
sahf
lret
xor
cs
rorb
int3
push
pop
lock
mov
ljmp
nop
insl
cli
pop
imul
or
mov
rcrb
xchg
add
mov
cmp
out
mov
stc
addb
enter
mov
xchg
outsb
pushf
inc
or
test
cmpsb
cmp
xor
fnstsw
popf
jg
sub
mov
xchg
inc
xor
in
or
and
loop
pop
xlat
sub
push
movsl
lods
std
xchg
mov
or
scas
jno
pop
imul
pop
addr16
in
xchg
aad
loopne
nop
dec
or
insb
xor
push
lcall
arpl
bound
loope
cmpsl
dec
nop
xlat
pop
pop
or
inc
adc
xchg
mov
xchg
test
mov
sahf
push
push
addr16
adc
in
roll
cld
add
out
jge
shlb
dec
repnz
cmc
in
mov
and
insb
test
add
or
nop
or
mov
pop
or
dec
dec
dec
add
je
sbb
sbb
lods
test
or
insb
or
aad
outsl
jmp
jbe
and
nop
xchg
std
mov
jg
ror
dec
xchg
cmp
nop
push
inc
fs
nop
aas
and
push
xchg
xchg
mov
jnp
js
xor
fnsave
sarb
cmpsb
xchg
nop
mov
push
push
adc
pop
test
ds
jo
cli
push
pop
adc
or
add
pop
pop
repnz
shr
cmp
in
rcrb
mov
loope
lock
add
inc
mov
mov
pop
jle
outsb
and
out
subb
adcl
nop
and
xchg
push
push
outsl
pop
adc
test
jo
fsubr
cwtl
nop
cld
fwait
or
mov
das
xchg
push
jmp
je
mov
cmp
xchg
mov
insb
fdivs
xor
out
cmpsb
xchg
in
mov
add
adc
shrb
mov
inc
sub
or
aas
cwtl
nop
ret
imul
mov
mov
addl
je
pop
stos
mov
aad
mov
pop
mov
in
xchg
mov
imul
mov
divl
in
jle
stos
ja
mov
xchg
add
scas
xchg
inc
cmpsl
sub
mov
or
xchg
nop
pop
imul
decb
adc
aam
scas
fadd
mov
xor
outsl
cltd
nop
mov
mov
fwait
push
arpl
loope
adc
clc
leave
mov
fdivp
sbb
add
nop
inc
cs
shl
sti
fidivl
sbb
out
adc
rclb
or
add
and
sub
push
enter
jl
sbb
lods
pop
aaa
bound
push
pusha
push
pop
decb
mov
cld
sub
jnp
xchg
clc
call
dec
in
rcl
mov
sbb
push
lock
mov
nop
cs
ja
mov
pop
sub
stc
stos
cmc
push
jl
jae
inc
cmp
sub
mov
pop
inc
push
enter
es
push
in
loopne
or
mov
movsl
jo
shlb
lods
outsb
fwait
adc
imul
fsts
cli
adc
movsb
adc
xor
or
inc
dec
dec
inc
mov
scas
adc
push
loope
in
inc
fdivs
addl
push
mov
outsl
mov
add
jb
or
fisubl
push
push
inc
int
mov
imul
push
test
rcl
push
sub
and
fdivs
jb
pop
mov
lods
enter
shlb
rclb
push
pop
insb
test
fdivrl
clc
mov
cli
push
cmp
ljmp
imul
push
mov
push
pop
inc
sti
and
pop
xchg
shlb
test
int3
lea
jnp
cmc
jmp
mov
or
insb
jo
fs
jb
fcmovnu
icebp
in
xchg
add
je
mov
pusha
or
nop
imul
movsl
mov
mov
lret
push
sbbl
out
dec
or
test
mov
xchg
fdecstp
aad
nop
sbb
inc
sub
test
nop
push
cmpsb
push
pop
fildl
jno
addl
inc
and
setp
stc
xchg
cs
or
in
or
sbb
movsl
lock
and
nop
jns
ss
in
and
cmp
push
mov
je
xor
or
js
sbb
in
jno
xchg
push
mov
gs
adc
dec
inc
nop
adc
push
or
xchg
xchg
fwait
jnp
dec
jle
xchg
sbb
aam
ss
les
or
repz
dec
mov
in
cmpsb
adc
nop
mov
jg
bound
sub
fdivp
push
and
lahf
stos
sti
nop
pusha
enter
xor
mov
push
rcrl
pop
or
push
loop
out
add
call
nop
movsl
pushf
cmp
mov
mov
pop
inc
sub
seto
mov
cmp
aad
mov
int3
nop
mov
stos
sub
call
push
xchg
nop
dec
dec
xchg
clc
mov
sbb
rorl
test
mov
mov
iret
xor
sub
cmpsb
movsb
nop
inc
mov
sub
mov
in
add
push
mov
nop
cmp
push
adc
fcomi
dec
or
sbb
xchg
mov
cmpsl
nop
orb
adc
incb
jg
pop
and
nop
jne
and
lods
mov
call
push
sbb
pop
adc
inc
adc
int3
inc
nop
sub
jle
cmp
add
mov
sbb
into
setb
loop
sti
xchg
cmp
cmp
xor
test
mov
fmuls
dec
pop
cltd
push
jb
rorb
xchg
ds
mov
jecxz
mov
pusha
rcl
inc
sub
lret
loopne
mov
push
clc
lock
nop
pop
and
jb
ljmp
pop
in
inc
xor
dec
dec
jb
cmpsl
fldl
nop
jg
rorl
push
or
test
adc
mov
sbb
pop
xor
fisubl
sub
nop
shrb
mov
cmpsb
xchg
nop
loope
imul
clc
enter
or
pop
inc
lea
in
pop
add
add
xor
out
push
xchg
mov
pop
xchg
nop
jmp
mov
cli
in
sub
nop
sub
insb
lock
outsl
andb
lods
push
xchg
movsb
adc
xchg
subb
mov
aaa
adc
mov
jle
fsubrs
jl
nop
ret
mov
into
je
insl
and
fwait
insb
cltd
jns
sbb
js
nop
out
mov
push
sbb
mov
mov
rcll
add
hlt
pushf
lock
mov
scas
jmp
negl
loop
nop
and
sti
adcl
add
nop
pop
dec
cmp
and
outsl
loopne
and
out
pusha
cltd
iret
into
xorb
sti
int3
nop
or
cmp
xor
lock
inc
mov
push
nop
lds
cli
out
cmpsb
mov
fmuls
lea
fnstcw
push
xchg
call
nop
ds
push
sub
dec
nop
cmp
dec
divl
push
fwait
jecxz
pop
repz
repnz
mov
sub
loopne
nop
pop
push
testb
and
icebp
bound
add
popa
inc
pop
mov
mov
int
negb
nop
sti
ror
stos
sub
nop
in
xchg
and
nop
loop
loopne
cmp
mov
pop
sub
mov
sahf
pop
out
or
inc
push
addr16
shlb
nop
int
jno
mov
or
mov
dec
ret
aam
fsubrs
sub
decl
test
or
dec
or
push
mov
repz
jg
nop
test
test
into
nop
movsl
xlat
add
fbld
insb
xchg
fidivrs
push
outsb
nop
sbb
add
dec
loop
mov
and
test
add
push
fwait
adc
mul
xchg
push
sbb
movsl
shl
rep
dec
or
xchg
mov
push
test
nop
in
in
sub
xchg
insl
adc
cmp
out
out
fidivl
ja
push
fsubs
call
sti
call
push
mov
shrb
rolb
sahf
pop
lock
adc
mov
nop
jno
cli
shr
insb
out
nop
or
adc
mov
and
jo
dec
mov
xor
sahf
ret
pop
lss
inc
lock
sub
iret
lret
xchg
test
jno
cmp
bound
xor
cmp
popa
mov
cmpsb
nop
inc
pop
or
and
jg
ss
aam
mov
clc
lcall
loope
dec
jecxz
xor
push
push
mov
xchg
pop
mov
nop
mov
dec
filds
es
nop
or
sbb
loopne
data16
scas
rcll
outsl
or
scas
lock
pop
nop
ds
push
mov
adc
loopne
nop
fs
pop
adc
cmp
nop
jl
mov
sub
enter
fadds
nop
and
adc
mov
lock
add
mov
cmp
mov
into
leave
jg
mov
mov
mov
lock
lods
addr16
sti
fistpll
call
outsl
lea
adc
push
inc
xchg
std
jo
adc
repnz
add
in
nop
sub
mov
pushf
dec
jecxz
lcall
inc
nop
flds
mov
shll
dec
in
movups
lods
xchg
rorb
nop
imul
adc
sbb
inc
lcall
shrd
mov
pop
lahf
xchg
js
nop
or
mov
jl
pop
gs
lcall
test
sub
xchg
test
fwait
add
adc
nop
data16
addr16
cmp
jnp
loopne
xor
push
adcl
mov
push
mov
sub
nop
aad
pop
hlt
test
pop
dec
idivb
xchg
call
icebp
mov
and
or
push
loop
adcb
dec
nop
xor
ss
sbb
fdivr
fwait
int3
nop
int
outsb
and
mov
jmp
fisttpll
movsb
call
cmp
in
xor
hlt
std
push
mov
daa
cmp
movsl
dec
xchg
inc
dec
arpl
insb
dec
rcrb
or
jp
andl
sbbb
js
shl
jge
mov
adc
add
mov
jo
call
or
cmp
pop
pop
sbb
adc
and
in
jnp
ss
xchg
mov
cmp
sbb
jo
push
nop
xchg
pop
aam
push
adc
out
ljmp
iret
enter
xor
push
scas
or
pop
xchg
nop
arpl
test
adc
ror
push
js
imul
dec
lock
adc
mov
cmp
sub
int3
or
nop
jnp
mov
jecxz
clc
jbe
iret
in
mov
nop
sbb
cmp
push
jne
nop
cld
push
jno
push
xor
push
aad
insb
jmp
gs
popa
fcomps
or
push
cmpsb
jno
insb
ja
push
sbb
jg
and
xchg
aas
xchg
pop
push
push
jl
sub
loop
or
and
test
in
jmp
inc
xchg
clc
mov
rorl
xchg
xchg
xchg
xor
pop
cmpsl
popf
fucomip
mov
lea
imulb
nop
pushf
loop
orl
repnz
rorb
sub
jl
xchg
adc
addb
lret
bound
sbb
imull
pop
fsubrl
xlat
repz
mov
shlb
aad
repz
xlat
mov
and
lods
faddl
fwait
mov
stc
aam
fcmovb
push
loop
in
jb
shlb
add
nop
arpl
adc
cmpl
mov
inc
andb
dec
add
lcall
popf
inc
xchg
dec
add
clc
push
push
mov
lods
repz
ja
pop
aaa
nop
inc
and
nop
fwait
ret
dec
ss
adc
fdivl
mov
lcall
inc
adc
xchg
push
xlat
lods
nop
popf
cmpsl
fucomi
insl
test
mov
lds
add
sbb
divb
jmp
xchg
loop
jecxz
nop
or
ret
jmp
xlat
shll
and
ljmp
jp
jb
lea
loop
mov
ficoml
cltd
mov
adc
or
nop
lods
add
dec
add
or
lea
adc
nop
rcrb
adc
mov
mov
or
xor
arpl
lret
movsl
mov
ficomps
out
adcl
xchg
dec
nop
addb
test
out
fistps
nop
pop
push
mov
sub
mov
stos
cwtl
cmp
nop
scas
mov
call
das
sub
dec
mov
int
pop
insl
sbb
or
cmp
out
nop
data16
jnp
dec
nop
pop
incb
loope
nop
lods
add
jl
iret
xor
movlps
clc
add
jecxz
lea
or
stc
iret
and
xor
enter
mov
adc
cld
loopne
les
jmp
rcll
add
or
cmp
inc
mov
nop
daa
dec
fcompl
ds
sbb
ljmp
adc
dec
movsb
std
lret
xchg
icebp
cmp
sbb
mov
sahf
in
dec
ja
ljmp
je
cmp
lahf
jnp
or
dec
push
test
mov
shlb
fisttps
pop
adc
xor
rol
iret
out
scas
pmullw
movsb
cmp
imul
orb
mov
mov
movsl
sub
aam
xor
mov
ror
add
pop
xor
outsb
leave
pop
dec
cmpsl
nop
clc
add
pop
push
cwtl
enter
aad
aas
mov
outsl
notl
in
nop
popf
xchg
scas
xor
pop
push
add
rorb
jne
xorl
mov
adc
test
orb
jno
je
mov
mov
inc
cmpsb
pop
adc
dec
push
xchg
aaa
nop
cld
negl
fwait
adcb
xchg
in
nop
fdivs
stos
xchg
mov
sbbl
lods
and
nop
mov
test
loop
mov
mov
or
imul
pop
pop
adcl
into
std
outsb
nop
mov
add
lods
xor
sub
nop
ds
ret
nop
pop
dec
jle
xor
inc
mov
sbb
inc
sbb
cwtl
test
xor
in
sub
dec
and
nop
and
inc
adc
push
sbb
aam
cmc
int
and
popa
jnp
push
shlb
mov
add
or
lods
or
std
pop
fldt
lret
sete
adc
push
pop
subb
and
xor
or
jecxz
xchg
rcrl
mov
out
lds
mov
lcall
mov
nop
pop
sbb
lea
and
in
mov
adc
in
inc
push
dec
adc
in
sbb
mov
lock
adc
jecxz
pop
lods
cmpsb
dec
pop
jbe
icebp
nop
outsb
adc
loopne
push
nop
mov
sbb
faddl
jl
cwtl
fcomip
nop
pop
push
in
aad
xchg
or
sub
inc
call
xor
push
std
adc
lds
fsubs
and
in
aas
jno
addr16
inc
xchg
insl
daa
es
shrb
sub
adc
test
stc
or
rcll
enter
push
nop
sti
jb
sbb
gs
nop
or
push
xchg
fiadds
nop
mov
cmp
out
or
push
out
nop
cmp
jp
in
addr16
dec
and
adc
mov
sub
and
aaa
or
inc
je
faddp
adc
xchg
testl
adc
stos
xor
cld
cwtl
out
stc
cmp
xchg
xor
cmp
mov
fbld
sbb
shrb
nop
mov
or
push
les
out
nop
mov
cmpsl
out
nop
mov
test
cmp
push
and
mov
jns
js
fcoms
and
rclb
xchg
xlat
dec
add
loopne
js
adc
ljmp
xchg
mov
sub
ja
pop
and
lods
cmpsl
inc
std
jp
es
jns
arpl
shr
and
cli
nop
leave
or
push
xor
nop
out
jns
cmc
mov
nop
aam
repz
out
jb
nop
lock
fwait
mov
das
nop
add
out
jnp
mov
or
fadd
add
cmp
or
nop
mov
pop
mov
imul
lcall
std
inc
push
fsub
out
nop
ret
mov
fldt
mov
pop
xchg
mov
fcom
xlat
sub
mov
or
or
jne
int3
nop
adc
popf
mov
mov
aaa
popa
xor
addr16
mov
cmp
out
dec
and
dec
daa
sbb
nop
cld
lcall
nop
lea
je
fdivr
clc
xchg
nop
cwtl
sbb
lahf
xchg
and
pop
loopne
cld
test
cmp
sub
nop
jo
and
lods
outsb
jge
nop
lock
cmpsl
nop
lcall
cs
pop
clc
mov
jne
push
pop
out
lods
testb
fsubl
or
adc
or
xchg
scas
mov
popf
xchg
and
icebp
pop
mov
jmp
loopne
cmp
adc
xchg
adcl
repnz
push
nop
rcl
ret
imul
lcall
testl
icebp
adcb
aaa
inc
imul
xchg
movsl
nop
pop
inc
in
mov
adc
int
mov
xor
mov
rcrb
int
add
xchg
adcl
adc
cmc
push
shrb
mov
mov
mov
jmp
inc
nop
sarl
imul
adc
popa
les
sbb
imul
xchg
push
add
fbld
lret
or
pusha
or
popf
nop
shll
xor
mov
jmp
push
push
test
xchg
or
and
xchg
das
inc
add
nop
inc
jecxz
int
jo
xchg
xchg
sbb
lret
nop
pusha
imul
adc
ss
nop
jae
sbb
inc
nop
or
loope
xchg
adc
pop
fsubr
push
nop
loop
pop
jne
and
xor
jae
add
add
hlt
cmp
mov
push
push
xor
fcomp
push
aad
push
lods
std
mov
and
imul
adc
mov
mov
nop
and
jns
jb
pop
xor
push
nop
sbb
add
and
mov
ljmp
nop
repnz
sti
jae
inc
fistl
mov
ds
test
mov
repz
and
in
fucomi
adc
lret
bound
cwtl
arpl
clc
scas
xchg
iret
mov
imul
mov
cmp
cs
into
nop
clc
dec
movsl
ret
icebp
mov
adc
sub
push
iret
dec
mov
mov
clc
sti
filds
outsb
xor
mov
jp
out
loopne
add
pop
xlat
pushf
cwtl
mov
flds
cmpsl
jmp
call
nop
lds
mov
adc
push
fnstenv
aaa
add
cltd
pusha
xchg
fmull
sub
nop
xor
mov
hlt
cmp
sub
mov
and
aas
lock
xchg
or
push
push
jecxz
xor
xor
shrl
clc
push
dec
pop
sbb
mov
es
sub
stos
jmp
push
hlt
mov
mov
into
loop
movsb
nop
cmpsb
imul
push
pushf
ds
in
xchg
decl
push
jae
push
adc
cmp
popf
dec
ljmp
aad
test
in
mov
fdivl
or
mov
pop
push
mov
fsubrs
xchg
loopne
adc
movsb
inc
mov
les
lods
sbb
test
push
sbb
adc
pop
ret
mov
subb
mov
mov
cmpsl
pop
stos
daa
xorl
ds
nop
js
aam
sbb
sub
sub
in
sti
lock
or
cli
loopne
push
nop
out
mov
dec
mov
push
lock
xor
aad
gs
imul
lock
aas
pop
nop
jle
shll
jmp
fsubrs
nop
and
fstl
aaa
jge
aas
outsb
test
or
inc
aam
rclb
jb
movsb
pop
scas
pushf
loopne
cs
xchg
mov
push
clc
aam
nop
mov
lret
mov
mov
loop
sahf
fstp
cs
fwait
les
xchg
mov
fmull
icebp
rclb
push
push
insl
int
add
fsubrl
xor
pop
into
or
dec
shll
shrb
jo
mov
dec
insb
bound
and
mov
mov
and
sub
pop
clc
repnz
add
cmpsb
pop
ljmp
push
xor
push
nop
xor
push
aas
cmp
movsb
fildl
xor
hlt
int
dec
add
mov
enter
and
mov
cmc
lret
push
iret
mov
jno
test
or
cltd
and
lahf
out
inc
sbb
push
fsubrs
cmp
in
sub
cmovle
rclb
sbbb
sub
outsb
fisubrs
nop
iret
rcrl
jecxz
aaa
mov
rclb
inc
nop
repnz
cmpsb
lea
and
jae
cmp
nop
lods
test
insl
nop
in
add
popa
or
cmc
ficoms
push
mov
test
add
das
sbb
add
cmp
dec
notb
insl
rcr
pop
ficoms
rcll
daa
xchg
in
sbb
movsl
sbb
mov
adc
mov
int
call
pop
push
xchg
or
inc
shlb
imulb
popa
nop
and
sbb
stos
scas
sbb
mov
nop
addr16
popa
add
mov
nop
pop
ret
aas
loopne
jbe
call
add
nop
in
inc
fdivr
loopne
fwait
or
xor
rorb
nop
call
or
pop
adc
insl
inc
xor
sbb
jmp
jno
xor
movntps
popf
push
pop
pop
or
jecxz
loope
inc
sahf
lahf
dec
pusha
xlat
cmp
adc
mov
mov
pop
les
cwtl
or
scas
mov
sti
mov
mov
aaa
mov
ss
ret
jno
xchg
subl
lcall
enter
jge
ds
adc
int3
xchg
lods
pop
inc
xor
inc
fcmovnbe
mov
add
dec
pop
adc
mov
in
pop
push
not
lock
aam
pop
inc
dec
out
mov
addr16
mov
loopne
aaa
shl
or
xchg
enter
test
cmc
cld
xchg
nop
xchg
call
leave
mov
movsl
nop
mov
sarb
nop
aad
ljmp
sbb
xor
inc
cwtl
dec
mov
adc
cmp
in
stos
mov
and
ds
jns
nop
xchg
outsl
cld
jmp
clc
sub
cwtl
int3
nop
mov
and
adc
pop
movb
out
mov
mov
push
xchg
mov
or
cmp
enter
lahf
or
xor
lock
xor
sub
imul
or
sub
sub
nop
mov
hlt
lea
scas
or
pop
or
mov
sub
nop
push
xchg
xchg
dec
ljmp
or
mov
add
pop
add
imul
lcall
push
insl
and
dec
dec
inc
popf
fwait
inc
add
xor
sarb
lret
addb
push
lock
fldcw
pop
popa
leave
fistpl
divl
nop
mov
lods
xchg
insl
repnz
inc
mov
pop
jmp
nop
out
jecxz
and
iret
ljmp
adc
sub
gs
es
sbb
add
cmp
shl
mov
jmp
dec
nop
cmovge
pusha
nop
inc
into
fsub
fstpt
xchg
cmpsl
and
adcl
gs
dec
addr16
nop
push
in
xor
jb
dec
imul
adc
int3
lock
adc
scas
mov
sub
adc
jmp
mov
inc
gs
shlb
fcmovnb
push
push
adc
jb
lock
add
hlt
stos
lret
fcoml
sub
subl
stos
nop
mov
shl
hlt
pop
push
or
fildll
cmp
mov
mov
repz
push
nop
sub
pop
jl
sar
in
or
outsb
jbe
ret
call
out
out
jo
enter
loopne
pusha
fst
mov
and
into
mov
or
sbb
ret
sbb
nop
inc
outsl
outsb
inc
dec
je
call
aam
mov
xchg
scas
iret
add
cmp
nop
fbld
sahf
icebp
push
out
or
test
xchg
std
lods
sarl
mov
xchg
sbb
push
xchg
and
mov
jne
daa
xchg
xchg
xchg
nop
jmp
incb
lock
inc
pop
pop
dec
dec
mov
pop
test
pop
push
imul
nop
mov
bound
hlt
lock
aas
pusha
adc
pop
rorb
cltd
nop
push
leave
add
pop
inc
daa
nop
mov
mov
imul
rorb
sarl
inc
mov
sbb
neg
nop
insl
push
lret
push
xchg
nop
mov
subl
scas
enter
xchg
stc
adc
or
call
push
sbb
adc
js
push
lret
xor
pop
ficompl
add
imul
xchg
push
js
add
lock
rcll
cltd
aam
cmp
filds
xor
daa
cwtl
or
xchg
pop
dec
into
frstor
adc
test
inc
je
mov
scas
test
shlb
add
inc
mov
xchg
jp
sbb
pushf
xchg
jno
mov
testl
test
repnz
jge
push
sub
mov
nop
mov
fsubs
popf
into
xchg
nop
pop
bnd
imul
fwait
adc
mov
add
popf
lock
adc
xchg
jnp
xor
mov
frstor
lods
imul
jmp
cmp
adc
xchg
sub
xor
or
sarl
lods
jmp
mov
xchg
notl
and
and
sub
sub
ljmp
fcoms
dec
pop
cmp
nop
jno
mov
iret
adc
ljmp
cli
mov
push
shl
jnp
xchg
adc
sbb
in
ss
adc
sbb
jno
aam
in
nop
dec
std
fisubrs
adc
icebp
inc
jl
xor
jmp
pop
sub
sti
in
nop
loopne
xlat
jno
xchg
nop
and
loopw
mov
nop
push
mov
andl
xchg
nop
fadds
push
sbb
xchg
pop
lea
addr16
pop
sbb
mov
sbb
xchg
cmp
adc
xor
lds
push
out
and
fidivs
xchg
out
leave
sti
push
mov
arpl
adc
and
inc
mov
xchg
shl
nop
fmul
mov
nop
sbb
repz
mov
xchg
pop
lods
cmpsl
nop
fnstsw
cltd
insl
sub
lret
fstps
mov
adc
aaa
test
mov
nop
fs
xor
hlt
mov
cs
jg
iret
call
nop
jnp
and
push
out
xor
cmp
nop
fistps
subl
push
push
xlat
fwait
cwtl
aam
and
nop
ret
push
nop
lea
sbb
push
ss
cltd
xlat
nop
loope
movsb
sbb
xor
and
sbb
xchg
call
aas
and
lods
cli
or
dec
sahf
sub
stos
lock
lret
jg
in
mov
jns
push
jbe
fistl
or
inc
nop
in
pop
xor
jecxz
andl
fsubrl
in
xor
cs
rcrb
dec
nop
stos
jne
mov
add
inc
xchg
lret
and
pop
sub
nop
xchg
addr16
jg
sbb
mov
stos
xor
inc
divb
sbb
jl
orl
scas
lods
mov
xor
mov
xor
nop
jae
insl
push
jp
aad
setg
scas
and
sub
out
out
pop
fwait
loop
nop
pop
xchg
test
addb
push
mov
pop
adc
test
lea
and
rcr
sarb
out
jle
and
inc
nop
aaa
test
cmp
test
cmpsl
lret
mov
out
push
nop
xchg
mov
outsl
fistl
scas
repz
aaa
sub
or
test
repnz
add
rolb
inc
ss
out
nop
sub
sbb
fisttps
pop
add
pop
pop
inc
or
mov
adc
leave
paddd
rcll
add
inc
fidivl
cs
or
jo
clc
push
adc
fs
leave
pop
sub
les
mov
inc
or
in
and
jmp
nop
fmull
add
stos
fsts
jg
or
cwtl
add
push
sbb
cli
in
enter
mov
inc
repnz
xchg
stos
mov
add
lea
xor
and
fisubrs
mov
popf
mov
je
push
or
test
jae
mov
pop
nop
cmpsl
inc
and
cld
stos
xchg
push
nop
fsubrl
es
sbb
roll
div
mov
loope
pop
jne
js
jbe
mov
cbtw
sti
fistpl
das
nop
aas
fimull
mov
insb
dec
sbb
push
add
sub
div
fucomip
popf
scas
int3
mov
and
iret
sub
orl
loopne
mov
aas
adc
nop
lahf
inc
cwtl
pusha
shll
xlat
adc
loope
push
test
aas
in
jnp
fisttps
sbb
nop
xor
mov
pop
or
dec
ds
xor
scas
fiaddl
in
push
mov
sbb
pushf
lock
push
nop
lods
dec
inc
cltd
xchg
nop
imul
cmp
cmp
mov
adc
jnp
pop
nop
ja
push
xor
or
nop
shrl
mov
cmp
xor
fwait
and
jns
fistpll
push
pop
add
xchg
rcrb
xchg
daa
pop
out
dec
add
jp
adc
dec
jns
aad
fstl
jge
std
lcall
jae
push
pushf
stos
nop
jg
pop
pop
push
mov
mov
adc
add
in
sub
adc
mov
inc
outsb
les
rclb
icebp
filds
add
enter
iret
addr16
cli
mov
popf
jno
nop
sbb
cmpsb
xor
loopne
push
mov
icebp
nop
mov
xchg
push
cmp
enter
cltd
aas
lock
sub
rorb
adcl
mov
nop
faddp
mov
pop
lods
test
in
xchg
mov
arpl
sbb
clc
nop
and
add
push
sbb
sbb
adc
out
adc
dec
jae
aaa
in
add
clc
int3
lds
insl
adc
sub
insl
adc
hlt
mov
and
les
sti
cmp
mov
xchg
inc
movsb
subl
and
iret
xchg
mov
add
call
nop
int
xor
pop
shl
mov
arpl
xchg
mov
sub
mov
mov
nop
in
lret
insb
mov
nop
xchg
scas
out
dec
test
nop
push
test
fstl
out
in
mov
jmp
loopne
in
adc
push
xchg
mov
adc
fs
pause
sahf
sbb
pop
inc
mov
notl
push
xchg
repnz
inc
in
jp
les
pop
cmp
das
add
push
mov
aam
inc
enter
shr
nop
icebp
xchg
jno
stc
dec
or
cwtl
push
repz
ret
dec
pop
call
and
jbe
xor
cmpsb
adc
sbb
mov
fsubrs
fldenv
ljmp
mov
mov
nop
fwait
out
inc
repnz
add
pushf
cmpsb
lock
mov
lret
enter
mov
lcall
mov
nop
je
xchg
mov
sahf
jl
clc
nop
push
iret
ss
in
dec
nop
jle
xchg
pusha
out
xor
nop
ja
imul
nop
adc
rcrb
pop
and
ljmp
jb
add
add
nop
hlt
testl
dec
add
mov
stos
mov
xchg
in
ficompl
dec
mov
mov
jmp
nop
push
sahf
jns
adc
adc
pop
mov
repnz
add
stos
mov
push
mov
mov
loopne,pn
aad
nop
and
in
bound
sbb
repz
push
divb
imul
or
lret
jle
cld
stos
xchg
outsl
dec
mov
sub
inc
add
out
xchg
inc
jnp
xor
movsl
mov
lret
aam
loopne
adc
lock
sub
push
sub
adc
insl
xchg
sub
and
and
outsl
in
adc
neg
int
mov
xor
push
cmp
mov
je
nop
movsb
cmp
js
adc
cmpsb
sbb
repnz
test
pop
out
dec
xchg
sahf
movsb
or
scas
fnsave
sub
inc
mov
sub
std
out
lock
fildl
repnz
les
shll
add
xchg
nop
cmp
nop
test
fcoms
enter
lahf
out
adc
call
inc
sbb
nop
lods
ret
lods
adc
stos
out
jmp
aaa
nop
push
jns
imul
insb
aam
mov
sbb
adc
mov
mov
add
pop
lods
or
sbbl
mov
rclb
in
xchg
pop
inc
push
fisttpl
xchg
inc
pushf
aaa
mov
inc
inc
sbb
dec
mov
aad
inc
push
ficoml
inc
xchg
or
and
add
stos
xchg
in
pushf
nop
jmp
aam
test
lods
xchg
inc
sub
addb
pop
out
cmc
rol
inc
mov
and
rcll
add
fcomps
sub
pop
xchg
dec
dec
nop
push
in
jbe
mov
mov
cmc
test
pop
loope
jmp
mov
ja
ljmp
outsl
push
pop
cmp
movsl
call
call
scas
test
inc
scas
ds
xchg
push
fnsetpm(287
into
pop
lods
rcr
fcoms
int
add
cwtl
or
lock
push
int3
mov
loopne
mov
aad
pop
ds
or
sbb
xor
lds
divl
shlb
pop
nop
lcall
fxch
nop
into
cmp
push
inc
push
nop
dec
popf
jb
enter
nop
loopne
lahf
dec
out
adc
xor
lcall
dec
pop
or
nop
clc
je
std
cmp
cmp
jb
fs
sarl
jbe
push
pop
sub
clc
sbb
adcl
lds
dec
jns
notb
gs
in
scas
in
test
nop
mov
dec
mov
out
scas
and
test
dec
ss
mov
or
insb
call
sub
fdivs
aaa
xchg
mov
subl
mov
cli
dec
loopne
nop
fs
mov
gs
popa
nop
xchg
xchg
aad
aas
jl
or
leave
dec
cltd
shrb
adcb
insl
imull
jmp
nop
or
dec
mov
movsb
mov
repnz
aas
ljmp
lret
pop
lcall
fs
cmp
mov
imul
nop
xor
inc
repz
dec
nop
xchg
sub
arpl
popa
or
push
xchg
out
lock
fcoms
xor
push
enter
cli
add
mov
push
addb
push
jbe
nop
cmp
pop
cmp
jl
les
loope
xchg
sahf
nop
adc
out
fcomip
mov
or
sti
lret
inc
dec
inc
jnp
add
in
jecxz
nop
adc
cmp
sbb
add
outsb
icebp
nop
add
add
or
punpckhwd
lock
mov
pop
adc
xchg
or
sbb
mov
jb
mull
nop
push
in
les
fadd
adc
fiaddl
cld
push
push
popa
nop
xlat
aad
adc
sub
add
insl
pop
pop
jns
push
pop
dec
and
xor
xor
inc
xor
or
ss
mov
into
push
les
mov
push
inc
push
nop
xchg
popf
cmp
adc
add
adc
xor
jb
pop
pop
dec
rcrl
nop
int3
and
jns
jmp
inc
pusha
jo
xchg
jbe
clc
frstor
jb
or
lods
mov
out
or
cwtl
xor
adc
mov
ficompl
cld
or
scas
nop
push
ja
ljmp
clc
xor
jae
fstl
enter
mov
cwtl
out
xor
loop
nop
adc
int
aaa
sbb
loop
sbb
shrl
xchg
lcall
pop
xchg
shl
xchg
sbb
shlb
jbe
rcr
dec
xor
xchg
or
sub
mov
push
jae
push
nop
xor
inc
loope
push
rcll
movsl
sbb
add
mov
jo
into
shl
push
xchg
mov
pushf
imul
andb
clc
xchg
mov
pop
dec
call
cmc
test
or
lret
pcmpgtw
imul
stos
push
xor
fstpt
call
aas
mov
nop
xor
jnp
gs
pmuludq
mov
sbb
inc
jno
nop
loope
test
iret
jecxz
out
popa
mov
jg
xchg
repz
or
pop
cmp
nop
xchg
andb
lahf
push
imul
data16
push
subb
dec
push
cmc
int
or
clc
filds
mov
nop
sbb
rorl
arpl
andl
mov
cmp
or
sbb
pop
push
inc
adc
movsb
lock
add
enter
nop
fwait
mov
push
cmp
sub
daa
mov
frstor
mov
nop
imul
and
xlat
mov
xor
push
lods
fstpl
nop
push
loop
add
mov
inc
pop
xchg
lock
xchg
adc
pop
lods
fidivrl
loop
jp
out
xchg
fidivs
icebp
cmp
data16
xchg
sub
or
nop
pushf
sti
adc
stos
nop
pop
insb
pop
or
add
cmpsb
xor
aaa
mov
inc
dec
fists
movsl
nop
jb
clc
pop
push
cmp
jmp
les
sbb
nop
cmpb
or
mov
jmp
arpl
mov
mov
data16
test
loopne
repz
cmc
andb
imul
fs
mov
xlat
pop
rclb
add
mov
lock
cmpsl
in
repz
lods
loope
insl
xchg
or
sarb
mov
mov
ss
mov
adc
fwait
inc
nop
xor
jns
push
enter
int3
nop
dec
push
idivl
scas
xchg
or
cmpsb
pop
cmc
mov
lods
xor
shrb
fwait
dec
fdivs
nop
call
xchg
push
notb
and
push
and
add
xchg
nop
rcll
fwait
pusha
lods
in
xlat
xchg
insb
fsts
cmp
pop
xchg
mov
rcll
add
lret
and
rclb
jb
mov
mov
push
gs
dec
repz
imul
nop
jecxz
xor
or
inc
xchg
and
pop
push
mov
cmc
rcl
sbb
jg
or
mov
or
jmp
mov
xor
adc
or
cli
pop
rclb
dec
adc
jle
push
fst
adc
pop
mov
out
in
add
mov
sub
andb
shll
dec
pop
sub
cwtl
imul
test
pop
adc
sbb
out
mov
lods
addr16
add
add
lret
xchg
and
mov
nop
dec
push
mov
sahf
nop
iret
xor
fsts
dec
push
push
fmul
jge
ljmp
shrb
jno
dec
or
mov
call
mov
stos
add
mov
adc
xor
fs
mov
lea
mov
sti
fsubl
fmulp
rcrl
out
shlb
jo
dec
pop
adc
aad
sub
jecxz
arpl
ljmp
pushf
nop
mov
pop
cmp
ss
dec
imul
fadd
lret
scas
sub
lret
icebp
push
sbb
sub
inc
nop
dec
repz
sub
pop
and
add
subb
in
nop
imul
nop
out
arpl
ja
lods
adc
add
xor
lahf
dec
out
jne
test
xchg
movsb
or
push
pop
xchg
xchg
out
mov
dec
mov
jns
nop
clc
and
dec
aad
cli
pop
mov
dec
lock
or
cltd
clc
mov
jnp
andb
es
mov
mov
push
mov
adcl
nop
add
je
clc
mov
fwait
or
or
inc
enter
jae
dec
mov
adc
xchg
or
add
call
imul
loopne
outsb
inc
in
nop
fs
rcrl
cwtl
mov
cmpsb
fst
es
jg
xor
hlt
and
inc
out
repz
iret
mov
in
fsub
and
fnstsw
nop
test
ret
dec
jg
fisubs
nop
add
push
fcoms
jo
rorl
aam
loope
push
dec
les
dec
push
stos
push
push
mov
lret
bound
shlb
mov
mov
xlat
inc
adc
mov
dec
test
xor
outsb
call
dec
lock
lahf
nop
xchg
cld
sub
and
or
les
mov
outsl
leave
mov
clc
jge
push
nop
jmp
push
addr16
nop
dec
xchg
sbb
inc
pop
ljmp
cmpsl
sub
jne
cmp
xchg
xchg
outsb
rcll
lcall
mov
add
out
nop
outsb
jae
xchg
xchg
xchg
fmull
mov
adc
or
or
mov
insb
nop
xlat
pop
aas
out
stc
adc
fbstp
aad
push
mov
mov
idivl
xchg
mov
fsubl
mov
jnp
nop
testl
mov
fsubs
push
es
insl
mov
adc
add
cmp
nop
int
pop
fldt
mov
call
maxps
sti
lcall
or
lods
jno
add
sarb
jle
ss
mov
mov
adc
xchg
nop
popl
dec
xor
push
sbb
movd
nop
cmp
orl
stos
cs
adc
in
fstps
mov
pop
sub
and
clc
add
leave
xchg
nop
mov
xchg
fisubrl
push
dec
imul
mov
sub
insl
adc
loop
lea
xor
mov
cwtl
inc
clc
ret
xchg
jo
gs
cmp
sbb
enter
bound
nop
insl
adc
into
les
nop
cmc
ja
lods
in
xchg
jno
les
mov
cmp
cwtl
out
sbb
mov
and
leave
add
add
cwtl
int
nop
enter
mov
scas
nop
or
jno
pop
cltd
dec
mov
in
dec
mov
mov
sti
es
pop
mov
push
mov
push
out
xor
pop
kmovb
lret
adc
nop
add
jle
or
test
nop
jge
pop
push
mov
aas
ja
icebp
sbb
dec
shl
lds
das
or
nop
mov
xor
mov
adc
nop
xor
xlat
inc
sbb
inc
mov
nop
sarl
jg
xchg
fisubrs
addb
xchg
and
push
ja
sbb
inc
sarl
push
orl
push
pop
jno
aaa
pop
adc
xor
pop
movsb
fnstcw
fistps
mov
inc
sub
adc
and
cmp
data16
fwait
in
in
ficoml
mov
xor
cmp
mov
sti
sub
outsl
adcl
lret
xchg
nop
push
rcrl
or
mov
or
adc
push
jbe
ja
dec
cmp
mov
xor
xor
js
test
std
or
jne
popf
pop
aad
mov
push
rcrb
mov
push
rol
mov
in
push
cwtl
or
aas
aam
ror
pushf
mov
iret
nop
call
push
cmp
mov
or
xchg
ds
dec
fists
xchg
hlt
lock
test
mov
jecxz
nop
jp
lahf
in
lret
xor
pop
ja
nop
int3
stos
mov
popa
iret
pop
or
mov
sbb
out
jge
xchg
das
pusha
nop
inc
inc
syscall
mov
xor
sub
icebp
nop
movsl
mov
mov
nop
cli
pop
into
lock
mov
push
jns
clc
stos
sahf
fistl
out
inc
scas
or
test
mov
sub
out
idiv
mov
xchg
xor
sbb
test
nop
jnp
bound
add
push
nop
mov
or
int
ret
jecxz
notl
inc
jae
je
xorb
in
mov
enter
adc
ss
add
loop
push
push
sbb
push
std
mov
mov
rcll
jae
mov
shlb
xchg
aam
mov
xchg
inc
push
cmpsl
mov
nop
popa
or
lock
repnz
push
bound
push
and
cwtl
nop
fwait
jge
jns
jle
dec
mov
mov
mov
mov
aaa
scas
aad
adc
dec
in
push
inc
nop
cmp
or
adc
fmuls
inc
nop
test
mov
nop
out
imul
into
movsb
add
sti
pop
test
mov
push
pushf
shl
adc
out
mov
sub
or
push
push
or
dec
pop
ds
mov
fwait
outsb
adc
xor
sbb
dec
fcompl
nop
ds
or
sbb
and
add
nop
add
xor
leave
stos
iret
hlt
inc
nop
jae
jns
std
aaa
adc
fmull
adc
cwtl
leave
test
nop
bound
mov
add
nop
dec
dec
sub
add
lcall
sub
in
jmp
cmc
nop
push
fcmovne
sub
testl
mov
shr
adc
aam
rolb
mov
mov
jg
dec
es
cli
lds
std
fptan
mov
in
cmpsl
nop
enter
rol
cli
jmp
xchg
adc
jno
sbb
in
push
jg
enter
sbb
aad
xchg
and
jecxz
imul
mov
inc
movsl
ljmp
pushf
les
mov
cmpsb
icebp
xchg
leave
shrb
out
cmc
adc
push
scas
ja
add
pop
mov
mov
loop
pop
test
sub
dec
je
fdivrs
lock
or
dec
popf
inc
nop
outsb
sbb
std
ds
push
lea
ffree
sub
nop
inc
pop
sti
mov
inc
fbstp
dec
dec
cmpsb
add
inc
or
jo
inc
adc
jbe
sub
call
or
lods
or
xchg
mov
nop
mov
sub
dec
iret
popa
nop
test
and
lret
push
aaa
sbb
ficomps
nop
pop
aad
push
mov
xchg
and
mov
out
movsb
punpcklqdq
mov
out
lds
jns
aas
fwait
outsb
jno
repnz
dec
or
sbb
cmp
imul
mov
test
adcl
jge
add
rcrl
insl
jb
xchg
and
and
cmp
xor
ja
jmp
imul
adc
loope
pop
xchg
jg
mov
jge
stc
outsb
or
nop
int3
adc
out
jae
mov
mov
je
ja
stos
and
vmovshdup
inc
push
jo
dec
jae
fs
dec
mov
mov
dec
notb
push
nop
int
mov
lods
nop
pop
es
notb
mov
xchg
stos
lcall
outsl
inc
jo
ds
nop
in
lret
mov
mov
mov
into
lea
ds
mov
adc
adc
xor
and
stos
nop
ret
dec
out
push
imul
jae
dec
push
push
add
popf
int3
outsb
mov
in
rcll
jne
jge
iret
mov
cmp
inc
pop
pop
lock
enter
dec
aam
mov
mov
pause
xchg
xor
subl
pop
inc
scas
mov
hlt
xchg
mov
lock
pop
or
add
imul
adc
push
enter
nop
mov
pop
mov
aaa
pusha
fcmovnbe
mov
int3
ret
nop
test
stc
sbb
out
sub
cmp
add
nop
outsl
sub
leave
jecxz
cmpsl
test
repnz
cmp
mov
push
or
dec
push
aaa
push
paddq
push
jns
iret
push
stos
mov
nop
bound
fbstp
rcl
adc
or
fisttps
nop
adc
sub
mov
xlat
xchg
jg
test
dec
int3
fldl
add
cmp
nop
ret
lcall
or
icebp
sbb
out
nop
add
jle
sahf
loope
nop
xchg
mov
mov
fldt
adc
or
xchg
pop
hlt
rorl
imul
sub
xor
aaa
nop
push
out
iret
rcll
out
nop
fsubrs
mov
in
insl
nop
repz
pop
inc
inc
push
xor
xor
adc
nop
lock
ljmp
out
push
push
cmp
nop
loop
or
add
sbb
in
out
scas
nop
jb
add
cli
push
push
jmp
add
clc
sbb
enter
mov
insl
jno
test
cmpl
xchg
push
jecxz
nop
pop
insl
cwtl
sbb
fnsave
sub
hlt
rcr
xor
nop
jle
cmpsb
push
lods
nop
andl
xor
jns
es
sbb
inc
inc
outsb
loope
scas
dec
dec
add
pusha
mov
lods
daa
cmc
adcb
iret
hlt
lret
or
mov
push
inc
rclb
iret
movsb
popa
lcall
in
dec
nop
jb
in
mov
pop
lret
icebp
int
pop
nop
sub
push
xchg
adc
test
and
adc
push
sub
or
in
add
pop
sarb
insb
xchg
sbbl
nop
push
add
leave
xchg
or
mov
mov
inc
xor
cmpsb
out
mov
flds
adc
nop
js
add
ljmp
cmpsb
sbb
mov
sbb
nop
xchg
ds
adc
jb
dec
pop
ret
rclb
hlt
nop
add
xor
arpl
add
push
xorb
xlat
cmpb
or
mov
push
in
sbb
sbb
loope
leave
call
push
add
ss
rolb
lret
inc
push
xor
cmc
pop
or
push
fimull
jnp
enter
and
nop
dec
in
lock
adc
and
iret
fwait
mov
adc
lret
cltd
ret
aam
loopne
add
and
outsl
loope
push
rorb
inc
les
pop
jg
outsb
xor
lods
and
push
test
mov
out
cli
cmc
or
or
jb
adc
call
fnstcw
out
mov
cmpsb
out
aam
pushf
enter
mov
jns
loope
int3
cmpsl
fimuls
xchg
fldl
jb
jmp
mov
fs
repnz
add
nop
das
cmp
jmp
sbb
mov
pop
adc
mov
sub
xchg
inc
into
and
xor
mov
push
push
sarb
nop
and
pop
aad
mov
inc
ds
nop
enter
xchg
add
inc
inc
sub
fldl
sti
xor
cmp
mov
stos
jb
mov
nop
pushf
jecxz
sbb
jle
cmpsb
xchg
lods
and
inc
pop
adc
lods
xchg
insb
mov
jmp
sti
seto
pop
icebp
pop
mov
into
nop
lahf
jg
popa
or
iret
daa
xchg
sar
push
insb
mov
nop
lea
and
sub
inc
mov
clc
mov
movsb
cmp
cmp
push
mov
xor
inc
mov
jl
or
inc
cli
jnp
mov
pop
insb
push
mov
nop
mov
push
out
xor
cmp
pop
gs
jl
nop
popa
jecxz
mov
nop
shl
mov
test
mov
add
push
jle
outsl
nop
push
fcmovu
add
movsl
mov
mov
std
xchg
adc
aad
fcomip
call
xor
addb
jo
jbe
inc
sbb
hlt
cmp
les
rcrb
xchg
cmp
mov
out
nop
pop
daa
push
adc
lock
rorl
or
pop
shlb
adc
rcrl
push
cmp
jl
pop
mov
sub
jp
nop
push
lcall
nop
jge
sbbl
sbb
push
out
dec
jp
dec
adc
cs
push
je
icebp
out
adc
xchg
rol
push
test
jmp
push
frstor
popa
mov
fidivrs
mov
xor
jne
or
ficomps
pop
cwtl
test
ds
test
std
jp
inc
xchg
sti
adc
cwtl
pop
add
je
pop
sarb
cwtl
movsb
nop
push
flds
xchg
outsb
nop
int
or
insb
sbbl
jg
xchg
dec
pusha
adc
lods
in
sti
rolb
aaa
push
mov
adc
popw
pop
nop
jbe
dec
cmpsb
jne
mov
xchg
mov
jle
and
mov
sub
outsb
je
cwtl
mov
popf
nop
shll
seto
pop
test
pop
imul
movsb
les
lret
stc
outsl
imul
sti
nop
add
mov
xchg
push
or
mov
in
cmc
icebp
adc
mov
nop
cltd
push
lea
nop
jl
mov
mov
inc
cmp
imul
cmp
int3
push
ja
dec
call
nop
xchg
pop
leave
add
mov
lea
test
lods
sbb
outsl
nop
xor
in
sub
mov
clc
test
push
js
adc
call
dec
push
sbb
scas
imul
in
mov
sbb
pop
test
sbb
or
insb
filds
test
nop
and
sbb
inc
mov
frstor
outsl
push
hlt
mov
shrl
adc
mov
xchg
lds
mov
pop
fdivr
and
adcb
in
loop
nop
daa
add
add
into
mov
lret
cmc
xchg
cwtl
je
inc
inc
cmp
or
ja
pushf
inc
fmuls
fsubrl
push
lret
out
enter
cwtl
aam
ljmp
cmp
in
inc
lods
nop
pop
xor
scas
testl
and
pushf
cld
mov
nop
mov
mov
divl
nop
test
xchg
xchg
daa
dec
not
inc
cmc
test
or
sbb
in
inc
adc
lret
js
inc
lock
push
inc
fisttps
cmp
popf
nop
lret
mov
xchg
pop
adc
cmp
nop
movsb
stos
iret
popa
fs
cmp
cmp
sub
or
pusha
jg
call
mov
js
movsl
mov
sbb
lods
xchg
jns
jmp
pop
jns
stos
nop
je
test
lock
mov
lods
or
into
pop
ret
enter
mov
jl
aad
je
mov
ficomps
mov
aam
and
ss
enter
adc
and
nop
cmp
dec
pop
mov
cmc
cmp
mov
xchg
pop
test
xchg
test
test
dec
pause
divb
fs
loopne
xchg
aad
pop
dec
jl
jb
out
orl
insb
lcall
push
nop
and
push
dec
and
mov
ds
inc
test
dec
or
add
push
mov
pop
jl
xchg
jge
nop
push
lods
repz
nop
loope
mov
xlat
nop
add
mov
sbb
nop
sbb
outsb
lcall
notl
sbb
repz
std
sti
sub
push
mov
js
and
sarb
mov
mov
pop
leave
cmpsl
icebp
int
aas
in
bound
nop
idivl
add
xchg
in
nop
insl
mov
mov
sbb
nop
cmpsb
pop
jle
mov
pusha
cld
nop
les
rcll
jns
ret
lds
fstpt
xchg
test
fstps
pop
push
std
push
xor
push
nop
lock
adcb
into
mov
fiaddl
mov
nop
jge
lock
jl
mov
in
xor
mov
push
aam
pop
mov
jo
xchg
stos
mov
cmp
dec
cmp
add
jl
into
lods
dec
or
ret
jmp
shrl
fstl
pop
and
fisttps
jbe
stos
into
cwtl
nop
push
push
popf
cmp
bound
and
cmp
sub
out
mov
add
dec
ja
or
movsl
sahf
add
xor
adc
mov
add
rol
or
sbb
fistl
lds
nop
sub
int3
jle
or
add
mov
daa
mov
lods
ds
jle
fistl
cmp
dec
add
jecxz
nop
jle
lods
and
pop
add
mov
sbbl
inc
nop
push
jbe
pop
pop
out
adc
mov
out
fistpl
cmp
ds
lahf
nop
xor
xor
nop
mov
lret
fcmovnbe
dec
nop
icebp
xchg
lds
nop
in
sub
xlat
pop
enter
jecxz
lock
dec
jge
nop
or
nop
or
adc
mov
movsl
mov
mov
frstor
cmp
xor
jle
lahf
mov
cmc
sbb
pop
sahf
mov
sub
nop
pop
jp
inc
xor
push
push
and
imul
rclb
push
mov
adcl
mov
jns
cli
aad
pop
push
out
int
mov
xchg
int3
pushf
push
loop
mov
mov
movsb
xor
jne,pt
arpl
sub
sbb
repnz
rorb
cmp
pop
jae
jmp
sbb
nop
pop
loope
sbbb
xchg
lods
pop
sub
adc
add
rcr
aad
rcl
push
push
loop
push
ret
nop
hlt
cli
sti
gs
sub
int3
nop
pop
dec
cmpsl
add
add
push
push
sub
mov
cwtl
xchg
inc
xor
add
pop
test
push
lock
les
rol
nop
faddl
or
int3
mov
inc
nop
or
sbb
nop
cmpsb
xor
xchg
cwtl
pop
mov
hlt
in
es
imul
or
or
in
cli
sarl
icebp
nop
movsb
jecxz
rol
adcb
nop
addl
jge
mov
and
add
cmp
inc
xor
sub
cmp
lock
jbe
out
pop
push
cmpsl
adc
inc
mov
icebp
xor
xchg
nop
cmp
nop
push
inc
hlt
mov
je
adc
jmp
adc
nop
xchg
addl
into
test
fwait
xchg
nop
ret
xor
insl
mov
icebp
les
sbb
lea
popf
into
push
nop
mov
dec
pop
mov
loope
rol
inc
mov
jbe
adc
ret
mov
pop
aam
int3
cmpsb
nop
rorl
lcall
nop
xlat
aad
cmpsl
stc
mov
push
test
mov
jg
fistpll
push
dec
adc
xor
push
addr16
aaa
lldt
mov
jb
mov
mov
xor
add
lods
scas
or
xchg
cmp
pop
add
push
nop
adc
jg
inc
nop
lcall
inc
loopne
nop
lret
and
movlps
fcoml
loopne
inc
mov
adc
nop
xchg
mov
sbb
push
xor
shr
inc
sub
jns
repz
push
lds
push
je
popa
fisttpl
mov
push
inc
gs
aaa
pop
out
fisubl
inc
adc
cmp
jno
rclb
stos
and
dec
nop
iret
fwait
dec
jne
jp
nop
fimuls
mov
mov
subb
xor
dec
and
sub
inc
jo
mov
mov
sti
push
push
cmp
sub
cwtl
jg
push
xchg
nop
pop
enter
sub
mov
mov
inc
dec
xchg
mov
adc
jae
outsl
adc
iret
and
out
addr16
outsb
pop
sub
hlt
mov
outsl
nop
stos
test
cmpsl
std
nop
out
adcl
dec
data16
pop
fs
cmp
cld
scas
xlat
nop
test
fbstp
nop
cmp
push
push
nop
incl
icebp
adc
nop
sbb
in
push
jnp
mov
adc
fdiv
push
rcl
push
add
js
cmp
adc
lods
scas
xorb
nop
or
mov
inc
ffree
test
mov
dec
and
dec
or
jo
rol
add
mov
cmova
rclb
jo
nop
outsl
int
imul
scas
sbb
leave
aas
xor
pop
pop
cwtl
out
inc
sbb
mov
hlt
call
nop
mov
sbb
add
mov
cmp
out
ret
lock
out
loope
shrb
adc
daa
adcl
push
or
dec
out
inc
lock
adc
roll
adc
cmp
mov
aas
xor
jo
gs
lea
cmpsl
xchg
push
adc
aaa
nop
cmp
loop
rcr
nop
std
mov
dec
adc
mov
nop
mov
nop
addl
and
jp
arpl
hlt
mov
adc
lods
ljmp
mov
jae
nop
xchg
iret
outsl
fldenv
adc
adc
seto
out
and
insb
xor
or
loopne
pushf
mov
nop
das
test
outsb
mov
push
shlb
mov
outsl
test
mov
xor
enter
mov
int3
xlat
or
nop
jge
add
mov
pop
mov
nop
push
loope
adc
repz
test
nop
into
cmp
jle
or
inc
scas
mov
jno
sub
in
rorl
xlat
add
loopne
insb
inc
shlb
mov
call
scas
mov
jle
mov
shlb
in
push
dec
lds
xchg
roll
pop
enter
sbb
iret
fdivl
test
repz
xchg
outsl
jne
push
xchg
mov
sbb
jae
xor
pop
std
jnp
ds
mov
add
nop
and
xor
aaa
cmpsb
ljmp
jl
arpl
xlat
nop
shlb
test
mov
ja
data16
mov
int3
mov
fstpl
iret
in
popf
mov
sub
test
out
cwtl
cltd
mov
nop
mov
inc
movsb
nop
lock
sub
lds
bound
mov
push
and
mov
mov
pop
leave
es
sub
and
in
sti
adc
cmp
or
xchg
and
cmpsb
sub
cld
inc
call
xchg
ficompl
mov
nop
lret
mov
nop
ss
lods
dec
or
push
std
mull
dec
ret
fxch
jge
shrb
pop
rorl
sbb
daa
bound
data16
jbe
or
xor
gs
or
rclb
out
fists
inc
nop
lahf
sbb
push
pop
xor
in
and
add
dec
adc
out
imul
lcall
fld
xchg
call
mov
fsub
nop
or
inc
sbb
mov
nop
bound
rep
loopne
out
push
mov
clc
inc
fisubrs
nop
add
rcl
adc
insl
inc
push
out
nop
fwait
push
rclb
sub
nop
lock
cltd
jb
jmp
sbb
nop
repz
daa
aas
pslld
lahf
idivl
nop
and
push
or
addr16
mov
js
insb
dec
push
nop
scas
xor
cmp
fisttpl
insl
jecxz,pn
jmp
push
nop
shlb
movsl
lods
push
sbb
adc
dec
cltd
movsb
insb
outsl
jbe
xchg
les
adc
jecxz
and
es
adc
jns
loop
jle
jl
arpl
sbb
cmp
jbe
and
hlt
adc
outsb
add
nop
ret
out
add
bound
add
nop
sub
idivb
fldl
addl
jb
fcmovnbe
pop
lcall
jns
stos
pop
or
insb
test
leave
aad
mov
mov
xchg
lret
xchg
cmp
push
mov
pop
sbb
pusha
mov
mov
pop
nop
rcrl
imul
movsb
fwait
nop
stos
dec
xorl
lret
mov
nop
call
xchg
lock
push
nop
pop
jo
fistl
fsub
rorl
inc
mov
pushf
andb
nop
cmpsb
lret
aas
lahf
and
nop
fisttpll
mov
mov
or
lret
nop
daa
popf
sbb
aad
add
mov
pusha
hlt
xchg
idivl
sbb
xchg
push
adc
pop
jne
mov
sub
sub
or
xor
mov
dec
push
arpl
sahf
nop
cmpsl
adc
and
leave
xor
pop
rcll
jne
nop
dec
std
add
add
and
in
insl
clc
popa
pop
xor
xchg
cwtl
cmp
xchg
mov
inc
pop
clc
adc
nop
lods
or
stos
jns
stc
outsb
clc
push
xchg
ljmp
shr
nop
lods
sub
push
out
xor
dec
xchg
ret
nop
mov
loopne
xchg
jae
mov
repnz
pusha
nop
lcall
and
mov
cmp
rorb
push
adc
cmp
or
lds
add
shlb
mov
repnz
movsb
inc
lock
mov
pushf
mov
adc
and
movsl
ds
xor
pop
add
jo
insb
mov
icebp
cmp
outsl
mov
lret
xor
and
call
mov
insb
jns
aam
nop
push
jmp
push
lret
mov
clts
pop
xchg
push
or
sbb
pop
pop
adc
sti
call
sub
movsl
pop
int3
or
or
test
cmp
or
adc
ret
ja
insb
out
inc
mov
test
scas
lock
jecxz
nop
and
mov
adc
dec
mov
mov
mov
rcl
cmp
sbb
shlb
lret
mov
and
push
pop
mov
adc
xor
mov
pop
lea
sbb
fiaddl
gs
outsb
adc
dec
add
scas
rcrl
xchg
test
out
sub
shll
or
lahf
add
sti
push
fistps
outsl
mov
or
dec
sub
mov
or
cmp
mov
mov
aaa
mov
shlb
repnz
loop
mov
out
nop
jg
cmp
nop
hlt
push
insl
adc
or
flds
dec
mov
mov
lret
xchg
scas
lock
testb
clc
jbe
nop
pop
xor
xor
nop
push
loopne
out
sub
call
mov
ss
inc
sub
nop
push
scas
dec
test
nop
int
stos
xchg
inc
inc
add
nop
or
cmp
nop
andl
mov
pop
add
push
adc
nop
mov
test
pop
mov
int3
insb
lock
xchg
fists
or
adc
imul
or
and
ss
pop
pop
dec
jae
xlat
push
test
into
fists
popa
aaa
je
nop
inc
mov
jmp
enter
fcom
nop
int3
movsl
dec
out
sbb
adc
mov
dec
inc
arpl
jp
mov
jb
movsb
in
insb
cld
nop
imul
fs
fldenv
cmp
dec
adc
int3
push
test
out
lcall
in
cld
pop
dec
push
nop
and
inc
pop
daa
mov
nop
or
jne
push
jg
push
nop
jecxz
cmpsl
dec
pop
mov
mov
imul
xchg
mov
neg
mov
adc
jp
xchg
inc
mov
aaa
cmp
inc
or
jae
aas
mov
xchg
adc
xor
cmpl
adc
xchg
mov
push
lock
push
inc
ret
fcomps
mov
aad
nop
push
xchg
cmpsl
je
test
nop
cmp
movsb
pushf
enter
nop
adc
sbb
add
mov
gs
into
push
insl
nop
add
cld
pop
sub
lret
add
nop
call
in
popf
nop
mov
xor
jp
xor
xchg
and
inc
push
daa
push
cmp
and
cli
xchg
push
mov
jmp
call
scas
and
inc
jae
ficompl
lea
sarb
cltd
popa
enter
add
push
push
jg
pusha
nop
adc
cmc
pop
xchg
adc
loopne
cmpsl
outsl
fwait
jae
out
fmuls
nop
mov
jnp
nop
jge
das
jmp
nop
mov
out
fiadds
cli
nop
push
mov
ret
shlb
push
test
inc
mov
bound
out
fildll
push
cld
ficompl
jecxz
mov
or
mov
push
iret
push
fisubl
dec
mov
push
adc
push
xchg
pop
into
xchg
mov
insl
lcall
out
adc
adc
xor
js
mov
lcall
mov
push
add
lea
xor
ljmp
fidivl
icebp
jmp
or
push
or
mov
sub
rcrb
jle
pop
fstl
fsubl
nop
lret
push
cli
int3
cmp
in
nop
dec
jb
lahf
shrb
nop
xlat
mov
xchg
xchg
cmp
xchg
ss
mov
inc
cwtl
dec
or
xor
adcb
jge
nop
fcmovu
inc
xor
jb
inc
jbe
enter
nop
jne
lret
mov
and
add
lods
jo
mov
lock
nop
or
cld
mov
add
mov
nop
mov
jmp
cmp
imul
and
mov
cltd
shl
insb
sub
or
nop
js
mov
mov
das
mov
out
mov
fdivl
or
cmp
pusha
xchg
pop
mov
xor
loop
xor
rcrb
and
outsb
insb
adc
nop
repz
in
test
inc
adc
mov
mov
jno
push
nop
leave
aam
andl
notb
sub
xchg
sbb
scas
adc
addb
fwait
stos
test
mov
test
push
add
sub
out
add
push
addr16
or
or
fmull
dec
test
ret
xlat
or
sbb
cs
nop
mov
test
pop
outsb
adc
nop
dec
xchg
add
lcall
cmpsb
outsl
jne
xchg
and
mov
jmp
out
lret
inc
adc
ss
mov
cmp
call
xor
lret
scas
cmc
or
jmp
shlb
and
mov
add
enter
nop
mov
jne
sub
stos
pop
stc
sbb
out
jno
fnstcw
nop
lock
push
movsl
enter
sbbl
xacquire
and
notl
inc
jae
jmp
mov
or
mov
xchg
push
push
test
mov
cmp
test
into
adc
scas
sahf
test
out
dec
cs
or
add
imul
fistl
mov
incl
cltd
mov
nop
or
stos
test
ss
mov
jno
inc
out
movsb
mov
scas
cld
dec
add
mov
ret
mov
into
imulb
or
fs
test
lock
mov
cld
add
inc
jp
mov
and
or
sbb
xchg
int3
mov
dec
ss
dec
jmp
icebp
fnstsw
mov
ficoml
xchg
jb
xchg
shll
push
inc
punpckldq
push
cld
ljmp
int
sub
scas
ss
rorb
xor
jne
mov
sarb
ds
or
aas
fdivs
scas
jno
pop
or
bnd
xchg
nop
dec
pop
mov
push
fucom
nop
sarb
inc
xchg
nop
xchg
std
int
aad
sub
add
add
mov
shlb
hlt
flds
cmp
andl
or
pusha
sub
stos
jge
mov
xor
mov
inc
sbb
test
xchg
andb
push
cld
push
or
imul
fisttpl
outsb
or
jg
mov
or
nop
mov
pop
in
cs
mov
shrb
pop
scas
push
pop
dec
out
cmc
aad
les
pop
dec
ror
sbb
add
iret
lds
inc
insl
and
sbb
dec
loopne
push
push
dec
test
out
sbb
es
aad
xchg
or
aam
cld
adc
cmp
sbbb
push
jg
dec
gs
add
rclb
mov
aad
mulb
dec
test
aad
insb
int
cmpsl
not
add
leave
mov
and
and
xchg
lock
or
add
scas
mov
test
loopne
jge
fwait
aaa
push
mov
pop
cwtl
add
clc
call
iret
pop
nop
test
pop
in
arpl
adc
std
mov
mov
nop
mov
sti
inc
insb
or
repnz
adcl
mov
mov
dec
xchg
ret
test
jecxz
adc
test
fbstp
js
fildl
repz
call
aas
xlat
mov
inc
mov
sub
mov
mov
stos
stos
jbe
int3
mov
dec
icebp
imul
jae
stos
xchg
cmp
and
and
push
push
daa
loop
leave
mov
int
and
shlb
dec
mov
fucomi
cmpsl
mov
int3
fstps
test
xchg
push
sub
sbb
je
cltd
nop
in
rol
or
stos
adc
adc
adc
aad
mov
aaa
mov
dec
nop
or
or
sbb
nop
pop
sahf
ret
rclb
aaa
cmp
dec
add
mov
lahf
fmul
sub
add
cmp
jns
mov
call
mov
dec
les
ja
jo
pop
adc
push
adc
pop
mov
rcrl
out
out
stc
and
xor
add
lea
outsl
imul
xor
nop
cmp
jb
mov
fwait
gs
push
popf
out
outsl
and
les
nop
pop
inc
dec
jno
in
add
les
jmp
add
push
shlb
xchg
nop
shrb
or
nop
repz
or
sub
in
rolb
repnz
nop
mov
pop
cmpsb
xchg
pop
nop
outsb
xchg
add
ficoml
icebp
fisubrs
dec
nop
adc
inc
lea
sahf
lods
dec
adc
pop
lret
inc
mov
outsb
nop
stos
jmp
lods
adc
add
pop
outsb
dec
inc
nop
inc
arpl
call
stc
xlat
xchg
adcl
loope
cmc
ss
nop
sbb
outsb
fwait
arpl
nop
mov
aaa
jb
lods
jg
nop
cmp
mov
nop
jno
sbbl
dec
movsl
rclb
pop
cmpsl
sub
fdiv
jno
ret
nop
cmc
mov
popf
and
jle
inc
pop
loop
sbb
mov
inc
adcl
leave
pusha
fucom
xor
nop
sub
add
add
jl
nop
lds
rcr
xchg
in
mov
mov
arpl
bound
popa
mov
sbb
add
out
movsb
ficompl
inc
scas
or
xor
cmp
mov
subl
arpl
nop
jne
pop
cmpsb
jnp
out
fwait
hlt
push
xchg
repnz
push
into
xchg
iret
xor
pop
jmp
iret
dec
aaa
std
adc
sub
int3
push
pop
xor
add
nop
dec
repz
xor
ret
or
aam
sbb
sarb
imul
nop
mov
pop
ret
mov
shrb
mov
mov
loopnew
xor
push
out
adc
jae
mov
das
mov
pop
sub
xchg
jg
cmpsb
pushf
pop
cmc
jae
xchg
fistps
push
push
dec
jo
nop
sub
adc
mov
jle
sub
push
int3
cmpb
mov
sub
pop
push
dec
push
mov
iret
loop
push
nop
popa
pop
xchg
nop
insl
test
pop
adcl
scas
xchg
mov
in
mov
js
jp
or
and
sbb
sahf
jne
mov
in
lods
nop
iret
repz
add
xchg
ret
mov
or
lods
add
sub
adc
lret
xchg
rclb
iret
outsl
mov
fsub
mov
les
pop
lock
xor
dec
outsl
jmp
lods
enter
inc
cmovne
jb
call
stos
hlt
jp
adc
push
nop
add
mov
and
xchg
sbbb
inc
adc
nop
dec
mov
jns
xlat
loopne
add
nop
test
call
nop
inc
test
mov
cmpsb
and
out
jne
adc
xor
andl
fistpll
nop
mov
mov
test
push
jb
fdivrl
mov
push
div
jge
aaa
in
inc
fdivl
mov
call
fidivl
js
pop
movsb
iret
imul
jg
nop
pop
aad
ljmp
popa
dec
nop
pop
js
fsts
adc
pop
dec
jle
add
dec
push
cwtl
jmp
outsl
gs
add
das
push
les
adc
cmc
sub
adc
or
lahf
nop
test
mov
cmp
or
jge
mov
insl
and
push
dec
pop
nop
int3
push
xchg
cmc
sbb
cmp
adc
ror
int
push
arpl
adcl
jnp
imul
mov
pop
jbe
mov
nop
mov
xor
sbb
mov
lods
cltd
femms
fisubs
add
xor
in
rcrl
mov
mov
mov
loop
mov
loope
mov
lret
xchg
mov
mov
cmc
nop
fildl
mov
pushf
jbe
shlb
hlt
adc
cmpsb
lret
add
repnz
or
mov
dec
add
push
xchg
pop
nop
pop
dec
popa
in
loope
aam
adc
add
jo
xorl
and
shlb
push
mov
cs
cwtl
shrb
clc
xchg
jle
push
sub
jo
dec
inc
adc
lods
xchg
add
lock
xlat
clc
or
imul
xchg
loope
in
daa
pop
sub
mov
pusha
shr
or
sbb
mov
je
sarb
push
push
fistpll
pop
js
mov
test
dec
xor
xchg
mov
int3
add
push
cmp
mov
lds
sub
nop
in
push
insb
mov
mov
pop
lea
dec
aam
dec
out
pop
xor
fidivrl
lea
adc
adc
xchg
aaa
lds
adc
jno
aad
add
loop
test
adc
in
xchg
pop
nop
mov
pop
jnp
dec
sub
nop
fimuls
arpl
repnz
out
fs
inc
lahf
in
push
push
ret
shlb
movsl
mov
or
out
shlb
nop
xor
or
inc
cmp
addr16
mov
add
jno
sub
fldcw
add
nop
xlat
xchg
adc
jns
sub
sbb
js
nop
pop
cmp
inc
movsb
int
inc
nop
mov
das
xchg
out
cmp
cmp
mov
mov
daa
jl
mov
fistps
movsb
or
xor
cmp
loopne
roll
mov
or
xor
aas
cmp
push
rcr
aam
dec
not
cmp
pop
fcoms
nop
ds
adc
xchg
scas
faddl
into
xchg
push
pop
jmp
imul
push
push
mov
sbb
cwtl
adc
cld
or
nop
mov
mov
jbe
pextrw
popf
mov
nop
xchg
push
je
popa
push
xchg
adc
and
dec
adcb
popf
imul
aas
bound
cmp
nop
aad
push
in
sbb
leave
mov
nop
jge
cmp
mov
popf
jp
nop
arpl
nop
insb
pushf
shll
mov
jmp
leave
pop
loop
setnp
loopne
push
pushf
sub
out
into
test
popa
rep
lcall
mov
inc
nop
dec
inc
push
xchg
sbb
jmp
mov
insl
push
mov
or
outsb
call
push
jo
nop
dec
jge
es
cmpsb
add
pop
sbbl
pop
nop
pop
push
adc
ja
ljmp
jno
nop
jle
add
jne
dec
in
cmp
test
mov
sub
nop
push
ja
sbbb
loope
mov
push
push
xchg
sbb
and
nop
xchg
mov
jb
push
xchg
push
xor
test
adcb
hlt
xlat
int3
nop
loope
xchg
cltd
in
lods
push
popa
xor
or
jo
inc
jnp
jne
fidivrl
nop
out
pop
add
xor
inc
and
jp
sub
cmp
xchg
lock
add
pop
pop
jo
out
xchg
add
pop
mov
adc
mov
sbb
notb
adc
add
fsubrs
and
dec
rclb
aad
xor
sahf
mov
add
adc
ja
mov
or
call
xor
cwtl
pop
enter
cmp
xor
mov
and
lds
ficoml
ljmp
push
rorb
aaa
test
sbb
movsl
in
rclb
xor
rclb
pop
cltd
push
stc
nop
fmuls
cmp
xor
sbb
sbbl
xchg
adc
iret
or
outsl
dec
sahf
add
jne
inc
jb
nop
and
jmp
jno
push
fildll
nop
fsubr
lods
in
inc
push
or
ficompl
nop
scas
jle
jnp
iret
ds
adc
xor
rcrb
movsb
shrb
insl
inc
sub
pusha
mov
mov
and
or
lahf
arpl
mov
sbb
and
cwtl
sahf
sub
pop
pop
add
xchg
bound
mov
mov
sub
nop
inc
sbb
ds
xchg
xchg
jb
mov
dec
clc
adc
jns
out
andl
and
xor
mov
out
or
rcr
mov
jno
frstor
aam
out
lcall
nop
ds
xchg
shlb
aas
jl
jbe
popa
je
mov
rcl
mov
push
nop
into
mov
fiadds
nop
push
addr16
or
xlat
ret
out
pop
ja
clc
or
ljmp
mov
xchg
jge
sbb
iret
ljmp
aaa
shlb
add
adcb
adc
les
jp
jno
icebp
leave
xchg
cmp
nop
sbb
fisttps
add
dec
jnp
mov
sarb
jns
scas
jbe
sub
sahf
out
mov
nop
mov
insl
rcll
fwait
aam
xchg
xchg
pop
enter
fldl
xor
icebp
ret
stc
bound
mov
les
repz
push
jl
fdiv
cmpl
jb
push
pop
xchg
loopne
adc
jmp
push
call
in
jmp
mov
mov
mov
push
lret
out
cld
mov
nop
dec
cmpsl
adc
inc
nop
imull
cmp
test
pop
nop
adc
pushf
bnd
ds
push
mov
sbb
add
xchg
sbb
adc
int
jl
fistl
add
jg
dec
sarb
inc
mov
add
leave
inc
fcoml
daa
xchg
add
jnp
push
jne
loopne
clc
xchg
std
fsubrs
imulb
fidivs
rorb
lods
fisttpll
daa
int3
add
mov
lock
jle
in
notl
out
push
lret
jl
jp
fadd
filds
nop
push
lahf
sarb
xchg
adc
and
into
mov
leave
cmp
adc
les
test
sbb
nop
fistpll
clc
adc
xor
imul
add
nop
fdivs
nop
out
addb
mov
mov
imul
mov
cmp
addr16
out
popa
jmp
nop
insl
stos
mov
push
loop
adc
adc
sbb
fcmove
mov
push
nop
jecxz
xor
scas
dec
mov
mov
push
les
dec
jbe
adc
push
adc
ds
sbb
test
nop
jg
inc
jo
and
nop
sti
dec
rorb
popa
ss
test
jl
dec
outsb
inc
push
adc
movsl
pause
add
ret
es
nop
add
mov
scas
nop
jbe
push
adc
mov
inc
enter
xchg
rcll
dec
xor
cmp
iret
pusha
je
sbb
add
mov
nop
std
loope
pop
adc
inc
out
mov
or
nop
iret
orb
sub
pop
nop
xchg
insl
jmp
outsb
push
and
and
stos
sbb
or
pushf
iret
movsl
add
shl
bound
fcompl
mov
push
aad
imul
mov
and
aam
rolb
pushf
addl
gs
in
inc
xor
nop
xchg
and
mov
aas
shll
out
sub
loopne
loopne
test
xlat
nop
jp
jl
mov
aaa
adc
sub
mov
nop
sbb
pop
test
int3
fs
mov
adc
in
icebp
arpl
dec
jo
mov
int
scas
imul
adc
lea
lcall
mov
aas
jnp
mov
ljmp
aad
or
dec
ret
rcr
mov
inc
aam
jmp
mov
pop
imul
in
xlat
mov
mov
cmp
nop
and
inc
or
adc
in
adc
insl
test
nop
pop
sbb
xchg
stos
icebp
mov
stos
stc
adc
pop
fxtract
mov
aam
rorb
jg,pn
into
adc
lret
sbb
inc
and
scas
into
fbstp
mov
xchg
fwait
push
rclb
push
and
and
or
iret
nop
rorl
or
pop
or
push
jo
inc
adc
nop
into
popa
xor
pop
sbb
jmp
sarl
imul
hlt
nop
cwtl
fiaddl
sub
adcl
call
add
mov
xchg
out
push
cmp
lea
into
ds
nop
jecxz
icebp
clc
out
adc
mulb
pop
xchg
mov
daa
icebp
nop
iret
stos
mov
mov
lock
lods
dec
mov
lods
rcr
rclb
and
pop
dec
inc
mov
ljmp
xor
ret
cmp
clc
rcll
in
aad
sbb
or
xor
aas
mov
xor
mov
xchg
nop
es
pusha
sbb
xchg
leave
fwait
nop
int
imul
mov
mov
sub
inc
pop
mov
jae
imul
inc
out
mov
adc
adcb
add
mov
mov
pop
bound
jbe
lock
push
ljmp
push
pop
in
mov
sub
sbb
nop
jl
xchg
roll
sbb
jo
push
mov
inc
scas
pop
enter
and
cmpsl
clc
dec
pop
popf
adc
lds
movsb
xchg
dec
cmc
pusha
lock
loop
add
cmp
fadd
ss
nop
push
or
mov
inc
daa
xlat
jecxz
adc
adcl
jg
ljmp
hlt
push
out
cmp
pop
mov
inc
mov
inc
test
and
in
nop
cmpsb
jl,pt
aad
jno
nop
sti
mov
test
nop
clc
sub
adc
mov
rcr
adcl
or
cmp
jecxz
in
lock
dec
xchg
xor
loopne
inc
mov
add
and
nop
dec
add
aam
outsl
xor
out
nop
cld
adc
lret
dec
xchg
ret
test
nop
sti
cmpsb
popf
mov
push
sarb
nop
inc
ret
adc
jmp
push
cmp
mov
mov
test
xchg
repz
fcoml
test
rclb
aam
add
sub
cli
dec
cmc
xchg
insb
aas
add
and
popf
adc
rorl
test
xchg
insl
push
pop
and
mov
mov
lret
nop
xchg
mov
cs
nop
decl
cwtl
xlat
adc
lock
aad
add
aas
inc
dec
rclb
lcall
stc
idiv
jb
pusha
and
js
in
aaa
ss
test
movsl
push
jo
cmp
rcrl
mov
dec
jns
mov
sbb
mov
aam
push
nop
into
fwait
cld
dec
add
add
in
nop
leave
into
xlat
push
daa
movsl
lock
or
pop
add
xchg
leave
rcrb
adc
or
fsubs
push
les
sbbb
pop
mov
pop
ret
lods
push
rorb
xor
inc
outsl
inc
out
loope
frstor
out
andb
fistl
imulb
nop
pop
inc
push
mov
int
nop
xchg
mov
add
nop
pop
call
dec
lock
shlb
mull
in
adc
nop
sti
popa
mov
movsl
or
mov
in
leave
adc
xchg
push
xor
notb
jecxz
sub
mov
nop
les
ljmp
xor
aaa
lock
push
call
dec
sub
cmp
popf
pop
in
aam
in
mov
cs
movsb
mov
outsb
mov
mov
jne
mov
mov
addr16
nop
cld
jle
popa
xor
cmp
ja
inc
sub
shlb
cmp
mov
push
adc
lahf
fisubl
jbe
daa
mov
adc
scas
sti
push
nop
xor
push
aad
push
cmp
dec
xchg
nop
pop
xchg
push
xchg
cmpsl
movsb
cld
nop
fadd
push
mov
or
std
mov
fildll
nop
xor
mov
js
movsb
adc
fsubrp
xor
rorl
ss
xchg
lret
mov
out
cltd
nop
into
xor
inc
ficoms
mov
xor
nop
inc
insb
leave
bound
xor
xchg
nop
jne
and
nop
and
sbb
cmp
and
mov
adc
out
mov
dec
cwtl
nop
dec
add
inc
int
movsl
hlt
adc
arpl
flds
cmp
or
mov
mov
nop
leave
lock
fwait
negl
dec
nop
inc
fbstp
xchg
mov
arpl
mov
test
out
nop
adc
sbb
aad
lods
pop
cs
sbb
pusha
rclb
dec
fmul
lock
nop
adc
hlt
mov
shr
cmp
je
call
add
adc
or
jnp
loop
adc
aad
and
adc
hlt
jnp
cmove
out
into
insl
push
std
jo
mov
fucomi
xchg
nop
sub
adc
adc
loop
int
lcall
test
mov
outsl
push
lock
add
mov
adcb
mov
nop
aaa
mov
insb
mov
nop
inc
cltd
loope
loopne
mov
stc
icebp
mov
push
es
push
mov
cld
dec
inc
rol
shrb
sar
cwtl
push
push
xor
in
mov
fdiv
loop
in
mov
out
mov
dec
dec
mov
add
xlat
adc
adcb
aaa
fistl
nop
mov
test
inc
inc
jecxz
nop
sbb
xor
mov
xchg
mov
es
inc
inc
xor
push
shlb
jb
adc
cmp
pop
adc
mov
or
loopne
add
push
int3
nop
xor
in
nop
xlat
push
sub
xor
test
cmp
xor
cmp
hlt
cmc
fdivr
insl
dec
sub
push
pusha
inc
pushf
inc
les
sub
es
jecxz
mov
rclb
xor
popa
das
dec
push
enter
mov
cmc
rcr
jecxz
mov
mov
jo
sub
popf
nop
sbb
push
hlt
dec
jnp
mov
cmp
xchg
jmp
or
sahf
leave
sub
clc
pop
ficoml
rcrb
jae
and
xor
ss
nop
sub
call
adc
xchg
rcll
push
mov
nop
and
push
xlat
test
ficoml
aam
cmp
nop
sbbl
lods
inc
xor
or
scas
decb
shl
nop
jb
lahf
mov
jmp
nop
icebp
mov
cmp
push
lods
nop
out
in
inc
shl
cli
or
stos
pop
pop
pop
cmp
pop
lret
pop
fdivl
nop
mov
push
jp
hlt
aas
cmpsb
nop
mov
fs
push
jecxz
mov
shll
dec
iret
lcall
xchg
out
pop
mov
inc
jg
sbbb
ret
sbb
nop
rcll
out
icebp
imul
and
hlt
jg
xor
mov
scas
stc
xchg
adc
sub
popa
push
in
mov
sbb
mov
jo
repz
push
mov
xor
pop
jg
lods
xchg
cld
push
nop
out
pop
and
jge
and
fdivs
push
scas
jbe
arpl
pop
cmp
mov
inc
inc
outsl
mov
int
adc
jae
clc
mov
out
nop
push
sbb
shl
int
icebp
cld
pop
and
pushf
cmp
aaa
xchg
dec
or
leave
scas
loopne
sbb
sub
scas
stos
sub
rcll
mov
mulb
nop
xchg
bound
out
iret
xchg
out
mov
pop
cmc
mov
js
push
lds
adc
movsb
pop
std
sbb
jecxz
and
jae
xor
xor
xor
js
arpl
std
pusha
shl
out
sbb
dec
xorb
dec
jno
or
or
mov
sbb
mov
outsb
mov
cmp
call
push
push
pop
or
in
cmp
cs
cmpsl
lock
iret
mov
xor
lret
nop
cmpsb
rcrl
je
add
lods
call
sbb
adc
pop
adc
jmp
rcl
jns
mov
xchg
loopne
insl
adc
mov
je
pop
arpl
cld
and
jns
xchg
add
fwait
jnp
mov
cld
mov
mov
shl
xchg
dec
pop
nop
or
mov
rclb
enter
nop
mov
adc
inc
mov
xor
std
cmp
cmc
sub
rclb
jl
nop
je
cmp
xchg
or
sbb
nop
out
pop
xchg
mov
sbbb
and
scas
in
push
cwtl
shrb
nop
jg
outsb
push
mov
mov
jnp
xor
inc
nop
movb
push
jecxz
nop
mov
jmp
or
mov
fmuls
cwtl
inc
ss
dec
xchg
icebp
lock
shlb
ffreep
lock
push
pop
nop
stc
cmp
outsl
scas
or
dec
push
stos
inc
clc
fwait
mov
fistl
pop
cwtl
rcl
xchg
jno
push
stos
mov
sub
jnp
jl
ds
cli
nop
shll
or
nop
repz
mov
mov
sub
rcrb
lods
jbe
imul
sarb
jns
adc
nop
push
fs
es
rcl
out
rorl
push
jns
push
mov
and
aad
dec
insl
clc
push
clc
movsb
andl
nop
das
std
jge
push
cli
out
sbb
xchg
mov
push
lods
jae
nop
mov
ret
faddl
mov
sbb
nop
mov
sbb
cmp
aad
jge
mov
xchg
nop
push
pop
push
pop
pop
mov
nop
cld
stc
pop
imul
mov
outsl
mov
inc
or
cmp
lods
push
lock
mov
mov
outsb
adc
rcll
cmpsb
out
push
xchg
outsl
jle
aas
dec
fs
xor
stc
lock
aad
or
rcr
jae
sub
mov
and
cwtl
cld
or
fcmovne
sub
call
mov
mov
jmp
cmp
inc
cmpl
push
cmpsb
mov
icebp
jp
nop
push
xchg
out
insl
test
mov
int3
rclb
mov
jge
adc
enter
nop
cltd
or
mov
nop
sbb
mov
cmp
mov
jns
pop
clc
out
and
inc
test
cmpsb
mov
fcmovbe
nop
pusha
pop
xchg
xor
test
cmp
jg
nop
add
aam
nop
push
inc
test
pop
loopne
xlat
nop
js
mov
ljmp
fnstenv
aad
mov
sbb
mov
mov
ljmp
dec
popa
mov
loopne
push
inc
mov
mov
jge
adc
xor
loopne
into
lea
rcl
mov
repz
hlt
enter
pop
cltd
jb
stos
or
jp
jae
enter
lock
cmp
and
fstl
pop
enter
add
daa
inc
push
mov
and
inc
jle
loop
fists
ds
out
xor
scas
jne
das
enter
pop
jnp
ss
clc
mov
ret
imul
mov
rclb
jp
nop
fwait
cmpsl
inc
add
jge
adc
and
mov
cmpsl
nop
xor
notb
dec
fbstp
bound
lret
xor
jae
and
inc
mov
imul
sbb
rclb
dec
mov
scas
xor
inc
dec
int
jmp
gs
sub
mov
nop
test
or
test
sub
cmpsl
mov
mov
int
ret
cmp
es
add
cwtl
or
and
xor
push
jb
out
sbb
lock
inc
popa
and
nop
inc
call
xor
mov
std
jns
int
mov
enter
es
cmpsb
jno
nop
mov
or
lcall
movsb
xchg
push
push
nop
gs
adc
or
add
cmpb
push
xchg
cmp
sub
mov
in
mov
cltd
or
das
pop
in
nop
mov
cmpsb
jbe
nop
inc
inc
loop
int
mov
cld
ret
and
jb
in
sahf
xchg
nop
lock
das
fistpll
xor
xchg
shll
nop
fwait
adc
nop
push
push
js
in
popa
add
iret
pushf
lock
cmpsl
nop
push
xchg
subl
nop
add
xchg
mov
nop
push
or
lods
push
notb
popf
test
nop
cmp
mov
xchg
pop
inc
stos
push
xchg
shl
push
aam
lcall
push
mov
insl
cmc
and
lcall
xlat
nop
stos
out
push
push
into
shrl
test
clc
scas
scas
jb
testb
popf
mov
cmp
fimuls
icebp
ss
mov
dec
push
nop
es
faddl
jnp
jp
or
inc
inc
xchg
cmp
fwait
jns
mov
and
sbb
mov
arpl
cmpsb
cmpsl
popa
mov
loope
sub
mov
out
fmuls
stc
ret
xchg
and
jns
sub
and
add
sbb
cld
sub
dec
or
lds
xor
cmpsb
fnstsw
repz
daa
fs
pop
jp
push
mov
dec
es
push
test
adc
icebp
cmp
mov
jg
hlt
nop
lret
mov
sbb
movsb
fimuls
xchg
stc
jg
popa
gs
sbb
pop
call
cmp
fdivrs
movsl
movb
inc
mov
and
sub
ret
dec
in
repnz
rcll
in
sbb
nop
xor
jg
xchg
mov
lock
add
outsl
iret
mov
xor
jne
lds
outsb
ljmp
push
xchg
add
nop
push
test
pop
jg
inc
xorl
adc
xchg
les
imul
aaa
fldl
ret
stc
adc
nop
imul
xlat
xor
rcll
cmpsl
shrl
fmuls
call
loopne
cmp
das
test
nop
xchg
sub
test
pop
fdivs
pop
jne
push
mov
or
int3
fnsave
js
mov
mov
adc
mov
or
outsb
xchg
xor
mov
or
xor
inc
adcb
es
and
adc
sub
jp
xor
out
in
call
mov
cs
push
mov
call
out
lds
mov
sarl
pop
dec
mov
fwait
adc
popf
push
jae
pop
int3
stc
add
pop
bound
sub
in
lcall
inc
jecxz
adc
mov
xor
mov
mov
adc
fisubs
nop
dec
les
adc
adc
jbe
adc
jmp
xor
dec
xchg
nop
repz
fsubrs
nop
jb
mov
push
or
xor
lea
sbb
in
xchg
nop
mov
ret
out
nop
cmp
cmp
nop
test
and
dec
jae
out
outsl
dec
adc
sbb
jno
mov
xchg
jle
nop
and
jg
popf
inc
adc
leave
cli
aas
lds
jge
insl
ja
sub
nop
jbe
mov
out
jp
ffreep
or
fistpl
mov
rolb
push
adc
push
aad
cmp
pop
les
push
dec
add
nop
int
ficoml
adc
es
mov
or
std
shlb
loopne
ss
test
lods
mov
out
leave
jo
movsl
nop
add
lret
fidivrl
xor
or
js
and
push
jl
lretw
sub
dec
nop
mov
cmp
and
push
dec
nop
pop
aas
inc
xor
jns
inc
mov
mov
dec
arpl
xchg
jg
push
subl
xchg
in
es
add
jle
adc
mov
add
xor
sbb
jle
in
test
gs
and
jmp
fwait
cld
call
jle
push
cmp
cltd
js
ss
sti
cld
mov
mov
shl
dec
nop
test
inc
int3
inc
sbb
xchg
and
shl
pop
fists
sbb
cmp
daa
mov
popa
xor
or
inc
cmp
gs
pop
xlat
in
mov
mov
call
jmp
test
icebp
nop
mov
push
mov
test
nop
popf
cli
les
sbb
ds
call
pop
inc
cmp
in
sbbb
push
scas
xchg
nop
add
fmuls
popf
pop
nop
lock
inc
std
in
xor
mov
cs
out
or
xor
lahf
into
int3
out
jne
mov
dec
jge
sub
mov
xchg
nop
fninit
aaa
xchg
cli
cmp
nop
mov
scas
pop
mov
shl
push
shl
xchg
aad
shlb
das
bound
cmp
jbe
and
loop
pop
adc
jno
outsb
push
int3
mov
test
adc
cltd
inc
rcl
imul
push
or
or
adc
xchg
mov
mov
mov
gs
pop
pushf
adc
arpl
addb
nop
push
pop
dec
adc
mov
aam
cmc
scas
pusha
dec
sbb
sub
xchg
mov
rorl
hlt
inc
mov
mov
inc
bound
nop
sti
enter
fsubs
daa
pop
scas
pop
jae
int
xchg
sahf
nop
es
add
lods
repnz
nop
das
movsl
into
push
jmp
adc
push
mov
pop
imul
inc
sarl
pop
mov
andb
xor
rolb
jmp
mov
pop
xor
fnstsw
test
iret
xchg
pusha
pushl
xchg
push
in
sub
lahf
push
lret
xor
mov
js
adc
pop
sbb
mov
inc
xor
into
adcb
add
nop
lods
mov
add
sub
jge
add
nop
out
push
test
pop
sti
cmp
mov
or
das
nop
mov
cmpsb
pop
inc
nop
xlat
or
loope
nop
cltd
cmovb
dec
dec
adcb
lea
mov
ficoml
popf
fs
int
jbe
pop
rolb
add
cli
xchg
mov
xchg
sub
adc
lods
jle
adc
out
inc
test
hlt
movsb
adc
nop
add
adc
lock
xchg
outsb
mov
push
in
repz
or
fsts
mov
nop
mov
mov
sti
mov
stos
xchg
adc
push
sbb
or
cmp
pop
shrb
add
ret
iret
pop
cmpsb
mov
inc
and
lahf
xchg
loopne
mov
clc
push
xor
xlat
or
push
cmp
push
mov
ss
enter
ret
nop
lret
push
bound
mov
adc
and
fadds
sub
fwait
sbb
push
nop
xor
rol
push
pop
jp
loop
add
out
sbb
sbb
lods
shlb
add
xchg
shrl
cmpsb
test
cli
nop
insb
sbb
adc
and
jns
les
jp
pop
rorl
ds
nop
pop
test
push
iret
mov
mov
inc
mov
jp
nop
sub
cwtl
test
nop
cmp
fisubrl
add
ja
aas
jns
aad
nop
mov
and
pushf
inc
and
addb
pop
lock
sbbb
pop
jne
insb
inc
sbb
or
flds
rclb
inc
push
pop
imul
jle
nop
adcb
cltd
jecxz
ljmp
testb
outsl
mov
mov
ja
cmp
subl
bsf
nop
mov
xchg
nop
push
lods
lahf
inc
xor
jo
mov
adc
mov
jns
call
nop
mov
andl
rcl
loope
push
pop
xchg
lock
or
push
mov
iret
out
ror
adc
pop
mov
jnp
nop
sarb
or
cmp
push
cli
xor
std
adc
ror
jmp
aas
add
jo
sub
jae
out
lea
or
fwait
bound
fdivs
mov
adc
lods
test
int3
ret
xor
mov
sbb
lcall
sub
sbb
ja
nop
or
rclb
into
sub
fcoms
repnz
hlt
fcoml
rcll
and
scas
nop
xchg
sbb
cmp
fildll
push
push
mov
in
loopne,pt
jne
sbb
out
js
nop
mov
mov
cmp
dec
sbb
jae
aaa
jge
rcrb
icebp
js
jnp
nop
mov
out
add
mov
adc
or
adc
into
fbld
arpl
daa
addb
adc
sub
mov
test
sti
and
xchg
lods
xchg
cs
lock
push
fldt
idivl
sar
cmpsb
mov
jle
mov
dec
fcompl
rcl
jae
mov
hlt
pop
push
fs
inc
dec
pushf
cli
in
in
test
mov
inc
frstor
fldl
pop
mov
stos
aam
lods
aad
fdivrl
sub
pop
pushf
popf
test
pop
mov
adc
xchg
js
xchg
rclb
div
cmpsb
mov
mov
or
add
scas
inc
mov
mov
jg
adc
jge
sub
xchg
mov
or
cltd
cmp
dec
fstps
mov
les
mov
xor
mov
pop
rclb
outsb
pop
xchg
loop
sti
mov
fmull
jae
inc
outsl
sub
imul
pop
cmc
mov
cs
stc
add
rol
xchg
lahf
cmp
pop
adc
and
xchg
nop
sahf
push
pushf
push
cmpw
ja
fdiv
mov
jge
adc
es
xchg
nop
jnp
dec
xlat
leave
adc
test
push
dec
sub
or
pop
push
stos
push
sbb
out
popf
mov
xchg
sar
push
and
lret
push
popf
out
mov
int
inc
insl
cmp
fsubl
out
cld
std
mov
pop
xchg
adc
mov
rclb
in
pop
lahf
movsl
cmp
mov
loopne
in
adc
jp
xchg
leave
adc
dec
and
pop
mov
into
int3
mov
and
jo
stc
add
inc
lcall
lods
aad
jae
adc
test
mov
nop
ret
mov
xchg
pop
xor
lea
fldl
lcall
in
insl
mov
mov
sbb
add
lret
jns
fnstenv
inc
cmp
pop
out
adc
les
sub
xchg
dec
insl
popf
adc
nop
fwait
int
hlt
sarl
movsl
adc
leave
or
inc
loop
nop
fmull
imul
aas
xor
pop
or
adc
sbb
mov
nop
ret
out
jecxz
outsl
cmp
xchg
or
inc
js
shrb
or
pop
push
mov
stc
xor
nop
adc
lcall
divl
in
pop
xorl
shrb
nop
fwait
push
ljmp
mov
fldcw
imul
dec
mov
mov
mov
xor
nop
jne
int3
sub
jno
xor
das
push
aas
insl
mov
cli
imulb
xchg
or
je
pop
jge
or
aad
lock
in
adc
out
xchg
test
add
mov
mov
iret
inc
lahf
pop
jae
test
imul
mov
nop
leave
dec
xchg
or
in
test
popf
bound
lret
call
into
xchg
mov
lock
mov
gs
push
push
jecxz
movsl
data16
mov
jns
dec
fimuls
mov
jnp
pop
out
lret
pop
nop
imul
movsb
push
adc
push
sbb
repz
xchg
cmc
sub
lock
clc
push
and
rcl
js
xorb
mov
adc
pop
dec
arpl
push
loop
inc
push
or
and
jne
test
mov
scas
stos
int
bound
mov
push
je
in
aad
jnp
dec
sbb
test
fs
or
test
xchg
mov
faddp
mov
shrd
mov
dec
push
sub
fstpl
in
add
dec
lods
lcall
xor
pop
addr16
nop
imul
xchg
jp
fildll
xchg
adc
ds
shr
sbb
jl
jmp
in
scas
nop
sahf
inc
lret
int3
test
mov
push
ficomps
in
mov
aas
and
mov
dec
mov
sub
lods
xor
push
ss
shlb
cmp
jb
imul
rcrb
push
push
nop
dec
testb
dec
mov
cltd
inc
push
nop
repz
inc
xor
mov
movsb
ja
out
and
inc
je
or
shl
add
push
add
mov
jle
adc
cs
push
aam
xchg
insl
or
loope
jmp
lock
test
out
adc
cmpsb
enter
mov
lock
mov
adc
ds
mov
or
sbb
arpl
ret
mov
cld
jns
aas
add
fdivl
adc
lret
add
mov
out
mov
test
mov
setnp
nop
fwait
dec
jl
notb
mov
push
rolb
sti
sbb
cli
mov
aad
nop
xchg
adc
pop
outsl
clc
xor
push
pop
adc
roll
outsb
xor
bound
nop
rolb
daa
iret
mov
sbb
pop
jmp
xchg
cmp
or
xor
mov
nop
mov
nop
sub
mov
pop
addr16
cmp
bound
jmp
mov
fxch
shrb
xor
xchg
and
fiadds
lock
cmp
call
in
and
lods
add
mov
jg
adc
test
mov
aas
orl
xor
repnz
jge
xor
push
ljmp
mov
enter
push
in
and
or
les
test
das
adcb
pop
xor
jno
enter
int
repz
cmp
ret
mov
or
fistpll
mov
xchg
fdivl
xlat
nop
pushf
andl
and
mov
cmp
inc
lods
mov
fwait
xchg
xchg
fsubp
lds
cmp
cmp
mov
fcoml
push
mov
rolb
pop
loopne
jbe
pop
and
push
adc
movsb
lds
mov
clc
mov
xchg
fdivl
mov
iret
pop
dec
sbb
jl
imul
mov
sub
or
and
xor
pop
lea
cmp
into
ds
dec
enter
xor
js
cmc
xchg
push
lock
push
and
daa
dec
or
fimuls
cmp
or
jbe
adcb
mov
ljmp
cmc
loop
fwait
add
outsb
adc
xlat
ret
xchg
jbe
icebp
mov
shlb
fbstp
pop
push
push
fdivp
stos
scas
dec
shlb
cli
outsb
pop
nop
bnd
in
nop
pop
ljmp
cmpsb
ficoms
xchg
cmc
nop
xor
sbb
sbb
mov
test
cltd
rcl
adc
dec
dec
adc
pop
xchg
push
xchg
xor
and
push
clc
adc
dec
fcoms
cwtl
test
imul
movsl
andb
idivb
nop
mov
xor
lds
les
les
adc
or
test
push
daa
lods
sarb
mov
pop
mov
mov
jo
xchg
sub
or
jge
shr
cmp
bnd
dec
or
jmp
mov
movsw
mov
nop
mov
pop
out
sbb
into
cmp
lcall
mov
push
push
sahf
nop
bound
lahf
push
pop
in
dec
addl
dec
int
mov
into
xor
int3
in
mov
nop
and
ja
add
aaa
pop
add
adc
xchg
or
cli
or
jmp
xchg
jg
nop
sub
mov
mov
mov
pop
roll
nop
jecxz
mov
cmp
das
test
lods
nop
jne
cmc
sbb
rcrl
jno
pop
ret
or
sahf
lret
mov
sub
push
pop
lds
hlt
xor
cmp
xchg
mov
out
and
pop
lods
nop
xchg
ss
pop
jmp
je
cmp
push
out
xchg
notb
dec
dec
jne
fcmovnb
enter
scas
xchg
lods
loopne
clc
lds
mov
inc
xor
jae
testb
divl
adc
out
stos
add
xor
loop
dec
or
scas
cld
in
push
inc
jo
out
mov
sahf
xchg
aaa
jne
adcb
mov
sbb
cmp
dec
nop
or
pop
xchg
jmp
imul
movsl
and
out
nop
cld
cmpsl
push
sbb
and
ljmp
mov
mov
idivb
repz
mov
jns
xchg
aad
pop
or
sub
sti
jno
ret
and
cli
lret
rorb
cmpsb
mov
push
dec
push
enter
jecxz
lcall
nop
and
pop
inc
daa
push
popf
or
movsb
sbb
test
popf
test
mov
jnp
cmp
jl
jmp
cmp
xor
nop
sbb
pop
jne
push
jns
les
rcll
lods
daa
adc
aam
dec
mov
add
int
inc
mov
addr16
jp
or
sbb
loop
mov
fidivrl
in
popf
pop
cmp
sbb
pop
push
fcoml
adc
cmp
xchg
sahf
adc
push
adc
cmc
fnop
fs
xchg
stc
xchg
push
adc
nop
bound
insl
mov
xlat
in
inc
cmp
cmp
pop
sub
inc
lret
push
jnp
xchg
fimull
jmp
mov
jbe
adc
js
dec
xchg
nop
data16
sub
pop
push
or
gs
mov
je
sahf
nop
pop
ds
inc
fdivrl
jmp
icebp
xor
pop
jns
jl
lcall
mov
xchg
sub
rcrb
nop
dec
push
hlt
or
and
sub
nop
insl
sahf
cmp
iret
scas
adcl
jmp
or
mov
aaa
xor
cmpsl
mov
nop
dec
subl
jno
mov
arpl
nop
cmp
pusha
addr16
rcll
adc
jb
mov
jecxz
out
test
in
iret
vmovlps
mov
mov
jne
addr16
add
es
mov
rol
daa
mov
pusha
add
aas
cmp
stc
push
xchg
push
nop
inc
mov
pop
inc
notl
push
movsb
cmpsb
mov
les
inc
lock
and
xchg
mov
hlt
std
nop
cmc
out
lret
xor
aad
es
in
xor
in
fsubrl
dec
jge
mov
mov
cs
cltd
cli
jnp
nop
ret
mov
xchg
cmp
mov
add
adc
popf
sub
in
nop
iret
add
push
dec
test
pop
nop
movsb
lds
push
push
mov
cmp
out
cwtl
mov
mov
test
insl
or
sti
enter
ja
or
nop
inc
sub
nop
or
jb
jp
xchg
mov
xchg
cmp
lea
aaa
jnp
rol
lods
jecxz
cs
inc
nop
mov
loope
fsubp
pop
cmp
xor
sbbb
jb
int
clc
nop
scas
test
punpckhdq
sub
push
jno
inc
nop
imul
nop
sub
sbb
adc
dec
loopne
add
nop
mulb
gs
icebp
les
movsb
xor
jge
push
test
push
insb
mov
and
adc
outsl
int3
nop
push
scas
test
aas
sbb
nop
jle
adc
bound
js
rcl
inc
nop
xorb
adc
and
fmulp
push
adc
push
xchg
fsubrl
mov
sbb
add
add
adc
push
pop
nop
lock
jp
inc
jno
test
mov
inc
xchg
xor
and
mov
mov
mov
out
loopne
add
jb
rorb
or
mov
es
out
nop
inc
lds
ret
nop
arpl
sub
jl
mov
xchg
ficompl
lret
nop
sbb
fsts
jns
lock
or
leave
cli
mov
call
nop
ror
pop
int
dec
test
add
in
nop
push
pop
cmpsb
inc
sti
nop
and
jbe
out
hlt
cmp
lret
daa
int
sbb
add
les
nop
mov
dec
dec
lret
dec
cld
nop
and
leave
fbld
ret
sub
mov
pop
movsb
xchg
aam
test
test
stos
popa
rol
adc
or
jae
add
xchg
ret
push
mov
hlt
or
out
jmp
add
cmc
cmp
inc
loope
or
jae
xlat
and
shll
adc
add
scas
fcmovu
lcall
mov
push
inc
mov
cmp
push
mov
sbb
aas
lock
sub
dec
nop
jmp
dec
es
xor
xchg
adc
inc
jns
cmpsl
cli
subb
mov
push
scas
rolb
sbb
dec
rclb
adc
push
dec
adc
lret
fcoml
adc
mov
add
test
fs
ja
rolb
out
aaa
push
xchg
adc
test
or
insl
sbb
dec
mov
push
in
or
or
in
int3
mov
pop
add
daa
xchg
mov
adc
xor
dec
stos
sti
push
jae
clc
xorb
sbb
nop
les
nop
jnp
mov
outsb
add
nop
imulb
test
fs
mul
popf
xor
add
test
or
lods
push
insb
sub
cmp
nop
je
movsl
inc
hlt
jmp
cmp
sbb
push
sub
int
push
sarb
jnp
mov
add
mov
test
pop
nop
push
scas
test
std
out
arpl
movsl
movsb
nop
xchg
aas
add
mov
and
pop
mov
data16
mov
out
ljmp
aad
nop
adc
and
int3
bound
or
mov
cltd
test
xchg
in
or
pushf
add
or
lock
push
das
loope
mov
addr16
cld
loop
stc
sub
ljmp
push
inc
and
nop
fidivl
test
scas
cmp
mov
repnz
loopne
push
idivl
mov
inc
xor
add
nop
inc
ja
orb
into
out
adc
cltd
sub
enter
cmpsb
or
mov
push
loopne
mov
in
mov
div
jb
mov
sub
popa
repnz
mov
imul
jbe
or
adc
lcall
sbb
test
and
mov
ljmp
xchg
enter
mov
imul
inc
movsb
nop
aam
pop
dec
sub
push
nop
leave
imul
mov
nop
dec
je
sub
fstl
cs
outsl
add
mov
xchg
pop
mov
push
lods
in
leave
or
push
cmc
test
xor
iret
imul
cs
lods
pop
push
adc
push
fwait
adc
xchg
add
and
scas
cmpsl
stos
sbbl
out
inc
sti
nop
popa
adc
rorb
nop
pop
dec
clc
pushf
mov
es
in
dec
inc
dec
ret
nop
push
adc
pop
or
test
adcl
xor
mov
nop
jne
inc
dec
and
ficoms
mov
pop
fs
xchg
push
pop
mov
jns
lock
cltd
dec
ljmp
cmp
adc
cmp
adc
or
adcl
lods
out
nop
jb
mov
pop
nop
push
mull
std
cmp
mov
or
andb
enter
mov
jle
sar
adc
lock
and
outsb
or
dec
insl
inc
lret
jp
xor
pushf
dec
into
add
incl
roll
push
je
in
adc
jns
inc
jecxz
ret
nop
xor
or
imul
lret
ret
mov
nop
and
mov
nop
sbb
inc
mov
test
mov
dec
mov
invd
dec
je
dec
xor
clc
inc
nop
scas
popa
int
jmp
mov
nop
loop
dec
adc
nop
loope
out
sarl
xor
loopne,pt
shrb
pop
cltd
adc
pop
test
das
ss
std
jmp
in
fnsave
es
mov
dec
push
mov
pusha
xchg
lods
nop
dec
jmp
inc
xchg
jne
ja
add
aad
push
repnz
mov
negb
mov
cwtl
std
cld
mov
fisttpl
dec
dec
add
mov
sbb
rolb
nop
and
es
pushf
adc
cmp
nop
aad
fldenv
adc
or
sbb
dec
sub
sti
nop
jo
test
or
popa
aaa
rorb
inc
addl
xor
push
xor
hlt
mov
movsl
scas
fwait
lret
icebp
fcmovnu
mov
mov
nop
shlb
mov
jp
sbb
mov
pop
int3
pop
ljmp
mov
mov
or
seta
sub
nop
mov
and
push
loope
repz
mov
xor
inc
nop
xor
push
notl
pop
mov
pop
nop
pop
sbb
sbb
mov
mov
inc
ret
mov
fdivrs
lods
divb
mov
xor
sbb
mov
ljmp
sahf
pusha
xchg
sub
mov
shll
sub
mov
cs
jge
inc
clc
or
xchg
xchg
sub
fisubrs
dec
add
jg
mov
nop
adc
pusha
dec
pushf
xchg
jmp
arpl
xchg
adc
xchg
cmp
sub
test
movsl
clc
fsubs
jnp
pop
pop
push
loopne
pop
xchg
sub
pop
add
mov
loop
aaa
and
pop
mov
mov
imul
loopne
push
inc
xor
nop
inc
adc
rcrb
jne
xor
stos
mov
and
jmp
inc
push
or
xchg
adc
mov
dec
je
adc
sbb
int3
nop
jb
pushf
ror
add
call
xlat
xor
or
pop
outsb
out
or
cmc
pop
sbb
shrb
mov
sti
nop
cmpsl
pop
fwait
out
insb
jno
xchg
sbb
ret
dec
lods
subb
mov
nop
test
adc
not
cld
nop
mov
sub
mov
pop
fbstp
nop
and
nop
vmread
cld
jno
mov
xor
xchg
push
sbb
hlt
or
cmp
add
add
cltd
pop
dec
fdivl
lods
cli
les
push
nop
adc
add
add
lret
nop
movsl
push
aaa
je
xorl
rcl
mov
jo
xchg
mov
push
jbe
push
xchg
jecxz
cmp
in
adc
leave
dec
mov
bound
lret
scas
push
adc
testb
nop
inc
add
popf
rol
xor
mov
nop
js
and
or
jne
enter
cmp
loopne,pt
pop
jg
pop
rorb
rcrb
insb
pop
nop
data16
sub
nop
mov
je
in
orl
lea
ds
push
in
movsb
and
gs
xchg
fsubrs
jle
test
pop
push
add
jno
xchg
frstor
jo
cmp
nop
fidivl
mov
xchg
ret
sub
cmc
les
inc
adc
js
cmp
cli
repnz
mov
mov
nop
fistpll
fwait
in
sub
shl
xor
out
push
nop
and
orl
add
cmp
mov
in
int
nop
fcomps
stos
inc
nop
repnz
jge
aaa
jecxz
rclb
or
pushf
lcall
out
arpl
test
adc
mov
lret
jbe
pop
daa
stos
loope
or
dec
orl
pop
add
mov
mov
cmp
out
inc
inc
nop
xlat
subl
sub
mov
test
xchg
mov
std
loope
nop
movsl
repz
addl
jg
je
jmp
rcl
and
and
pusha
xchg
jb
mov
mov
ret
sub
mov
nop
mov
cmp
imul
in
out
jo
fcmovne
pop
push
loopne
jmp
mov
rorl
inc
sbb
inc
mov
dec
outsb
sbb
xor
and
test
aam
nop
xchg
pop
cmp
in
xchg
push
xor
sahf
mov
mov
mov
or
clc
cmc
lods
jmp
nop
out
lods
xor
xlat
push
adc
nop
clc
cmpsl
in
pop
icebp
jp
jb
arpl
inc
push
cld
imul
ret
lea
xchg
ljmp
cmpsl
cmp
sbb
shlb
add
and
loope
xchg
shlb
pop
nop
mov
cmp
repnz
arpl
xor
das
test
aaa
mov
ret
popa
sbb
stos
outsb
testb
cld
mov
mov
mov
iret
shrb
xchg
push
gs
push
popf
adc
js
je
dec
nop
test
aad
adc
cwtl
outsb
adc
nop
jle
xor
data16
push
lret
call
faddl
dec
sub
fdivrs
cmp
cmpsb
inc
stos
arpl
sbb
nop
push
push
mov
mov
movsb
cltd
push
mov
cwtl
dec
test
mov
inc
push
loop
bts
push
mov
loopne
sbb
nop
dec
sub
mov
xchg
leave
nop
repnz
mov
in
sbb
sahf
mov
jg
daa
sbb
stos
xor
xor
das
or
mov
push
mov
dec
jg
fwait
shrb
xchg
adc
test
push
xchg
mov
cltd
fxam
add
int
or
nop
out
sub
push
sbb
mov
nop
iret
imul
mov
adc
cmc
push
mov
add
aad
inc
roll
int3
mov
popa
rorb
js
nop
movsl
and
popl
aad
nop
and
sub
inc
shll
js
cmp
loope
inc
jle
inc
cmp
enter
push
or
nop
xchg
add
movsl
fbld
mov
ljmp
rcl
les
sub
push
adc
xlat
xchg
imul
mov
jmp
nop
and
jb
add
xchg
adc
mov
or
cmp
nop
in
stos
push
pop
jle
adc
adc
imul
in
push
cmp
shl
je
in
nop
add
push
incl
push
mov
mov
xor
test
mov
popf
adc
nop
push
bnd
push
mov
nop
mov
adc
xchg
imul
cmp
cmpsb
sahf
fistl
add
push
sub
pop
dec
ds
sbb
mov
adc
push
loopne
sub
or
adc
lock
js
cmp
mov
hlt
cmp
lods
and
mov
jnp
ja
fidivl
mov
push
mov
and
add
add
adc
pop
das
pop
fidivl
jecxz
scas
jle
iret
into
push
arpl
pop
fwait
addb
mov
pop
mov
adc
xchg
orl
shll
dec
inc
pusha
mov
hlt
nop
inc
adc
pop
mov
add
mov
cmp
iret
inc
add
nop
sbb
in
in
cmp
dec
adc
nop
jecxz
and
nop
add
loope
dec
rol
nop
fnstsw
in
stc
repz
sahf
adc
mov
cmp
fcomp
pop
fbld
or
mov
scas
imul
lret
sbb
fisttps
push
push
or
loope
ret
jecxz
mov
push
test
and
test
fidivrl
add
xor
lods
icebp
push
daa
push
jl
jbe
nop
inc
xor
mov
loopne
mov
lahf
push
jbe
lcall
inc
mov
nop
fistpll
or
loop
shl
jo
nop
negb
out
add
test
inc
in
dec
pop
add
nop
rorl
xor
mov
nop
iret
fdivl
mov
push
adc
push
nop
nop
pop
outsb
lods
hlt
xchg
jmp
loope
pop
in
pop
fcomp
jp
pop
popf
aad
add
sbb
ja
adc
nop
push
add
xchg
loop
xchg
test
xchg
push
mov
push
rclb
ss
add
cmpsl
sbb
dec
inc
xor
in
pop
test
mov
fsubs
out
mov
call
movsb
add
adc
push
and
xor
xchg
mov
cmp
xchg
dec
or
insl
push
cmpsb
repnz
fwait
out
aas
sbb
push
out
nop
mov
lcall
jb
push
rcrb
cwtl
push
inc
mov
or
in
xor
cmp
imul
es
scas
aaa
loope
xchg
dec
mov
inc
test
push
jg
sub
mov
nop
mov
and
popa
push
adc
jnp
mov
cwtl
or
dec
lods
ss
nop
enter
pop
or
inc
adc
shll
mov
pop
pusha
push
hlt
xor
fldl
dec
enter
add
cwtl
mov
cwtl
daa
nop
xlat
dec
mov
loop
test
repnz
loope
adc
inc
jge
outsl
and
test
mov
sub
jl
mov
mov
andl
jo
jns
sbb
mov
nop
fldt
mov
nop
inc
pop
ficoml
fcoml
leave
inc
jge
jns
sti
nop
rorb
add
addl
xchg
sbb
lds
mov
nop
mov
jmp
hlt
iret
or
popf
lcall
sub
and
sbb
sub
call
nop
inc
mov
shrl
stc
cld
sbb
pop
add
mov
cld
pop
insb
rcrb
cmp
or
into
ljmp
or
ret
add
lock
adcl
notl
cmpsl
jle
mov
nop
xor
mov
xor
mov
setbe
inc
ret
mov
mov
mov
lahf
nop
rolb
ret
cmp
das
jb
or
ret
cmp
test
loopne
nop
fs
cmp
iret
int3
sub
testb
gs
jmp
outsb
or
jp
or
js
cmp
ror
sahf
or
cmp
insb
pushf
shlb
loope
mov
mov
sub
js
inc
or
and
test
cmp
out
lock
or
popa
div
jno
das
add
cmpsb
pop
pop
negb
lret
lock
loope,pt
sar
test
sub
push
push
adc
cs
inc
rorb
xchg
outsb
jecxz
data16
or
mov
notb
adc
and
cmpsb
call
sub
les
in
jb
mov
nop
lods
xor
push
sub
or
enter
cmovl
scas
and
add
ljmp
scas
cld
aas
push
nop
sbb
xchg
push
jo
push
xlat
jle
movsl
push
mov
xor
pop
aam
mov
ss
jb
xchg
inc
nop
sbb
push
inc
push
in
stos
xchg
pushf
and
loopne
mov
nop
cmpsl
shrb
adc
notb
nop
icebp
dec
ret
and
in
pop
adc
fs
add
enter
mov
cmpsb
push
or
add
lcall
mov
mov
iret
cwtl
js
roll
add
inc
and
mov
movsl
shr
xor
sbb
mov
cwtl
lea
stos
pusha
pslld
lahf
test
or
imul
sti
add
arpl
lret
sbb
nop
lods
push
jg
push
fwait
insb
scas
enter
mov
xchg
nop
aad
add
cmpsl
nop
pusha
roll
or
xchg
ds
mov
mov
adc
mov
xchg
lock
addr16
nop
daa
scas
imul
cmp
cli
aas
mov
push
or
adcl
jnp
pushf
fildl
mov
shll
nop
xchg
lods
inc
mov
into
sbb
and
dec
data16
pop
push
mov
jne
push
adc
push
repnz
cmp
nop
xchg
xor
jp
mov
fidivl
mov
pop
mov
icebp
or
outsb
mov
and
xor
inc
and
loope
add
push
jno
mov
ss
sub
push
arpl
or
rclb
nop
mov
mov
nop
ret
popa
leave
inc
pop
lods
nop
outsl
push
lret
ret
cmc
mov
scas
mov
pop
fs
dec
lock
nop
cs
sub
push
imul
aad
aam
nop
dec
sub
das
es
nop
xor
ret
scas
dec
ss
pop
add
shll
fistl
or
in
sti
les
push
dec
mov
fcompl
inc
in
int
in
xchg
addb
stos
jle
fsubl
fnstenv
xchg
adc
es
pop
loop
xchg
sub
xor
adc
mov
les
scas
ret
repnz
xchg
sbb
ds
test
inc
inc
cmpsl
cld
xchg
push
push
loop
nop
pop
adc
popa
pusha
adc
out
dec
loop
sub
lea
xor
fistpl
mov
out
sbb
add
nop
push
outsl
or
hlt
cs
mov
pop
test
xor
sub
dec
leave
nop
fsubs
out
nop
mov
mov
lods
jb
adc
adc
jne
inc
out
jmp
fs
fst
loopne
cmp
movl
cwtl
push
cmp
fists
mov
cmc
in
ljmp
xchg
or
adc
stc
or
bound
pop
nop
popf
jecxz
cmp
mov
and
addr16
pop
fstp
nop
sub
div
mov
mov
lods
adc
notl
in
loopne
mov
mov
add
or
aaa
jmp
imul
test
dec
push
xor
enter
pmuludq
push
adc
push
mov
xchg
jbe
fcompl
adc
jmp
test
es
nop
sub
mov
mov
test
jle
cmp
push
xchg
jne
call
cwtl
insl
lcall
nop
and
adc
nop
jno
xchg
add
pushf
sbb
into
mov
mov
nop
cwtl
jo
inc
rcrb
and
xchg
push
add
fcomps
sub
nop
cld
test
dec
nop
jg
jmp
cli
cmpsb
rorl
jnp
out
inc
aaa
mov
rcrb
add
or
add
aam
lret
pop
sbb
pop
nop
stos
xor
cmp
fdiv
sub
jb
nop
lcall
sub
aaa
inc
imul
stos
fisubrs
pusha
shufps
mov
inc
add
cli
xchg
or
arpl
push
cmp
push
add
sbb
js
add
jbe
xchg
gs
xorb
inc
movl
pushf
mov
lds
lock
mov
mov
andl
dec
mov
add
jbe
call
jl
js
pop
mov
rorb
mov
cli
or
and
jle
nop
shrl
or
sbb
insb
scas
mov
lea
jge
nop
and
jbe
xchg
cmp
test
icebp
dec
nop
sub
mov
nop
mov
test
stc
nop
cmp
fadds
aad
nop
repnz
jmp
xor
repz
pushf
xchg
mov
adc
cmp
nop
aaa
add
pop
nop
push
mov
das
lea
jmp
sti
mov
mov
adc
xor
sbb
push
aam
rclb
or
lret
inc
cwtl
xchg
mov
clc
cli
or
pop
push
add
enter
test
test
xor
cmp
lcall
inc
xchg
adc
add
aam
push
mov
rclb
loopne
sbb
aas
movsl
test
pop
nop
cmp
mov
xchg
push
test
or
inc
loopne
sub
into
nop
frstor
lea
bound
xchg
dec
mov
push
rorb
imul
cmc
push
nop
add
adc
sbb
cmp
or
call
aaa
jge
das
aam
nop
inc
cmp
adc
nop
cld
daa
popf
cmp
push
pop
dec
loop
nop
or
xchg
testb
or
fsubr
lcall
adc
shrb
mov
stos
cmp
xor
aaa
sub
mov
dec
push
or
jno
out
push
or
cmp
push
mov
cmpsl
xor
shlb
int3
rclb
add
pop
push
dec
xor
movsl
mov
jae
or
mov
daa
xor
adc
mov
aad
dec
and
lcall
icebp
push
cld
dec
test
and
inc
fdivl
cmp
aaa
add
xor
sub
es
mul
jmp
inc
aaa
cmpsb
mov
shl
outsb
mov
mov
mov
lds
sbb
nop
and
cli
out
nop
dec
loopne
push
insb
gs
mov
sbb
pop
outsl
rolb
lret
xchg
sub
cwtl
and
add
nop
mov
les
mov
nop
pop
je
cmpl
jge
cld
xchg
std
es
mov
nop
out
mov
mov
sahf
xor
nop
mov
mov
es
pop
adc
iretw
push
loopne
mov
lcall
addr16
loopne
lcall
daa
nop
xor
imul
sub
das
push
nop
and
dec
jmp
or
mov
mov
push
ss
fwait
push
cwtl
nop
xor
cmpsl
idivl
mov
nop
movsl
fnsave
addr16
adc
das
jbe
jp
enter
and
jg
insl
add
lods
add
jecxz
xchg
lds
jbe
mov
enter
dec
nop
sbbl
add
lock
add
and
sbb
ret
mov
adcb
stc
push
xor
jbe
and
stc
dec
fisubl
lock
nop
inc
daa
add
lods
or
nop
pop
lock
iret
clc
imul
inc
mov
dec
push
jno
or
imul
xchg
mov
nop
or
out
and
jmp
nop
data16
das
xchg
cs
call
push
cmp
mov
outsb
sti
or
int3
nop
in
clc
xchg
fsub
xchg
fcoms
dec
out
aad
nop
ret
int3
lock
inc
dec
pop
nop
loopne
icebp
pop
xor
mov
fsubrl
pop
nop
push
leave
inc
dec
xlat
sub
adc
fldt
call
cwtl
adc
lcall
pop
dec
nop
lret
and
aam
mov
jns
push
test
xlat
pop
lret
pop
or
rcll
dec
icebp
push
aaa
nop
dec
repnz
xor
arpl
nop
fsubs
xor
ss
roll
cmp
mov
test
jp
nop
das
dec
cltd
sbbl
jl
sti
lock
notb
js
sub
cmp
orb
xor
insb
nop
mov
out
rorb
add
pop
pop
and
sbb
inc
push
push
in
inc
daa
mov
push
fnstsw
jmp
lds
inc
movsl
sbb
adc
sbb
inc
movb
out
ret
mov
mov
out
and
js
nop
lea
jbe
push
jb
nop
sti
xchg
in
add
sbbl
mov
inc
out
daa
nop
in
in
push
push
rcrl
adc
jb
pusha
mov
notl
jmp
xor
fstps
mov
push
lcall
dec
or
xchg
ljmp
mov
shr
add
fnstcw
dec
xor
push
xor
insl
push
cmp
loop
xor
pop
imul
jge
add
ja
jnp
mov
dec
adc
cmpsl
lea
movsl
xlat
pop
nop
mov
fistpll
lahf
test
nop
push
jb
out
stos
push
dec
and
test
add
adc
adc
jmp
imul
mov
fdivrs
loopne
mov
addr16
sub
push
sub
mov
mov
rorb
test
scas
lret
jge,pt
xorb
nop
cmp
jb
les
push
sarl
xor
xchg
mov
clc
pop
or
adc
push
mov
adc
push
fdivr
adc
lret
xchg
rorl
nop
xor
xchg
in
dec
inc
push
nop
insl
add
mov
nop
or
mov
flds
es
enter
jb
pop
sar
and
nop
or
aad
and
nop
les
cmc
adc
mov
jmp
add
xchg
enter
push
jae
and
lds
fs
call
pop
ret
fmull
nop
sti
popa
or
mov
pushf
stos
int3
cmp
fwait
sub
nop
out
xchg
sbb
push
jne
insl
imul
jecxz
push
aam
nop
in
dec
cwtl
jge
mov
pop
sub
faddl
nop
push
imul
nop
cmc
into
add
test
cmp
xchg
lret
ret
lret
ljmp
nop
mov
jae
fstl
stc
std
xchg
lret
pop
cmp
push
clc
rcl
nop
and
add
imul
sbb
cmc
hlt
jmp
jns
into
rcr
pop
js
loopne
pop
pop
shl
inc
nop
xchg
or
cli
dec
insl
mov
pusha
loop
or
add
jbe
enter
cmp
cmpsb
repz
push
fistl
out
mull
iret
pop
mov
push
nop
sbb
pusha
or
nop
mov
push
adc
sbb
adc
pop
imul
lods
dec
jne
notb
out
call
cwtl
ss
fisubl
aaa
mov
xor
pop
cmp
pop
mov
nop
orl
xchg
nop
sbb
mov
jecxz
arpl
xchg
mov
test
add
notl
push
push
ret
mov
mov
mov
jb
mov
inc
nop
push
xlat
repnz
into
sti
nop
ret
inc
pop
jae
outsb
sub
nop
insb
pop
jno
enter
xchg
fisubs
or
mov
nop
loopne
sbb
into
popf
sub
nop
decl
shrb
pop
xor
xor
jmp
sti
addr16
mov
dec
mov
push
sbb
adc
jl
mov
cmp
push
mov
xchg
adc
test
mov
lods
xorb
xor
gs
imul
sub
mov
test
test
cwtl
or
int3
xchg
xor
nop
cmp
add
rcr
mov
push
fisubrl
call
ss
or
std
xor
adc
test
push
in
nop
mov
mov
sbb
pop
shlb
cmp
adc
jge
push
pusha
and
ljmp
mov
bound
inc
adc
loopne
dec
movsb
sti
or
shrl
lock
adc
shrl
or
or
or
in
enter
fnsave
push
mov
in
addr16
sbb
lea
into
daa
xchg
sub
iret
fisubrl
or
push
fwait
pop
aaa
inc
xchg
pop
adc
subb
hlt
rorl
adc
push
dec
and
sbb
mov
nop
js
cs
addl
in
xchg
cmpsl
nop
loop
aaa
push
jnp
xchg
or
mov
sub
jb
arpl
iret
nop
lahf
push
movsb
xchg
lcall
jnp
inc
push
cmp
lock
int
cs
cmpsl
sbb
cmpsb
test
mov
add
sub
jnp
loop
aaa
mov
cmp
rcl
jg
data16
nop
dec
fcmovne
stos
add
jo
nop
call
nop
cmp
bound
xor
loopne
inc
call
in
cmp
xchg
enter
je
push
sub
jl
or
loop
fsubl
nop
scas
add
mov
push
fcmovbe
pushf
add
je
shr
into
in
add
mov
idiv
mov
outsb
or
adc
int
jbe
popf
xor
xor
in
pop
add
call
cmc
nop
dec
cmp
je
sbb
xchg
nop
out
repnz
nop
gs
xor
inc
fistl
out
fs
push
fucompp
mov
das
cmpsl
push
nop
add
popa
or
sbb
lea
daa
xor
fwait
push
mov
cs
rol
out
cmp
notb
repnz
jae
or
push
add
mov
nop
js
scas
jno
and
sbb
inc
imul
out
adc
stos
fwait
in
nop
cmp
stc
add
aaa
popa
lock
nop
aas
in
pop
dec
lahf
pushf
add
nop
mov
jecxz
mov
jne
popa
adcb
sbb
adc
push
xchg
mov
adc
clc
nop
add
sub
mov
mov
fs
or
sbb
fdivrl
out
adc
ljmp
pop
nop
aad
xchg
pop
fimuls
lcall
not
push
xor
mov
leave
test
cld
ljmp
test
sub
pop
loopne
arpl
inc
shrb
fcompl
out
add
and
add
push
and
addb
adc
add
add
mov
aad
inc
xchg
mov
mov
inc
insb
nop
adc
xchg
lret
pusha
insl
fwait
dec
pop
jae
push
push
xchg
nop
mov
pop
jbe
aam
nop
pop
lahf
and
or
dec
adc
ds
imul
flds
cmp
inc
xor
cmpsb
incb
xor
push
push
lahf
es
rorl
clc
sbb
out
pushf
jge
nop
mov
mov
cmp
xchg
pusha
aas
in
nop
jg
fwait
adc
mov
idivl
xor
outsl
movsl
mov
push
or
mov
adc
mov
pop
test
seto
mov
fmull
inc
nop
jns
es
out
jno
dec
or
lret
or
jnp
rolb
adc
fisttpll
cmp
lock
ljmp
loope
out
in
mov
push
mov
push
sti
and
or
cmp
push
adcl
lods
sub
cmp
add
fcoms
xor
jle
fistps
pop
cwtl
add
mull
lcall
hlt
jbe
jle
mov
fisubs
movsl
std
xor
dec
cmp
daa
and
adc
nop
adc
test
cs
inc
mov
mov
adc
push
mov
loop
adc
jne
or
shlb
mov
popa
push
adc
sub
ljmp
mov
call
xchg
ljmp
ja
das
adc
nop
cltd
mov
nop
call
test
sbb
sbb
sub
je
test
nop
jecxz
lret
mov
jge
mov
nop
outsb
das
inc
lds
sub
ja
jns
adc
sub
aas
ds
xchg
nop
mov
cmp
ljmp
adc
pusha
test
xor
fdivrl
or
mov
fsubrl
pushf
inc
mov
adc
and
in
aas
dec
or
dec
jle
dec
les
inc
cmp
lock
nop
mov
jl
loope
dec
xor
pop
sbb
jae
rclb
loop
movsb
stos
or
xchg
sbbb
pause
das
jp
push
mov
dec
push
popa
int
cmp
nop
shll
and
jmp
push
aaa
sbbl
nop
xchg
popa
mov
mov
push
mov
nop
inc
adc
es
push
jae
dec
add
lds
xor
adc
lods
andb
nop
cmp
daa
mov
lcall
scas
insl
add
into
push
nop
mov
inc
incb
adc
pop
dec
dec
leave
in
cwtl
jne
lea
pop
adc
ss
lods
test
sub
arpl
and
mov
add
nop
adc
push
sarl
mov
dec
aam
pop
push
nop
xchg
leave
ret
xchg
xchg
or
push
int
add
lods
stos
popf
jp
cltd
cmpsb
ret
adc
pushf
adc
mov
ss
stos
jb
inc
pop
rclb
lret
or
ret
dec
adc
test
shlb
sbb
scas
or
bound
dec
mov
nop
imul
cmp
jl
xchg
jg
mov
pop
in
testb
nop
fyl2x
movsb
inc
pop
inc
ljmp
mov
xchg
std
pop
or
add
push
jge
xchg
or
iret
mov
mov
andb
loopne
lods
mov
jge
nop
mov
jne
or
enter
ljmp
mov
mov
ja
xchg
cmp
movsl
lret
sahf
xchg
mov
push
mov
push
push
loopne
bound
mov
jb
xchg
nop
roll
sbb
and
pop
jg
push
jecxz
inc
sar
jmp
or
fadd
adc
jl
add
pop
stos
daa
inc
bnd
adc
push
push
mov
mov
out
out
nop
mov
and
push
pop
loope
fcoml
nop
daa
das
push
inc
nop
mov
div
jb
mov
ficoms
jno,pn
outsl
add
xchg
xchg
mov
or
push
push
fiaddl
xchg
pop
and
sbb
js
add
lea
fbstp
xlat
sarl
mov
ss
subb
jae
jle
mov
lds
nop
jmp
inc
insl
cld
fnstsw
arpl
xor
cmp
nop
and
mov
sarl
sbb
rorb
fists
pusha
jl
cmp
cld
test
dec
xchg
add
test
sub
or
cmp
mov
push
adc
or
cmp
movsb
aas
push
nop
imul
aad
or
jmp
stc
cmc
jg
mov
cs
sbb
dec
xchg
xlat
rclb
mov
cld
repz
pop
call
dec
les
mov
pop
rclb
mov
and
mov
ljmp
insl
ret
and
mov
fwait
andb
inc
or
jno
clc
shlb
sbb
mul
push
arpl
outsl
hlt
mov
andb
push
sub
xor
rcll
sub
pop
insl
mov
out
mov
imul
xchg
dec
push
shlb
fisubl
rcll
int
xchg
push
mov
mov
mov
push
jle
sti
test
movsl
nop
pop
jl
ret
xchg
pop
push
scas
movsb
rcr
test
mov
cmp
shl
jnp
pop
rclb
fidivrl
xchg
out
add
jo
pop
nop
int3
xchg
jge
push
cmc
xor
xchg
pop
loop
xchg
or
mov
pop
xlat
and
jge
clc
out
mov
in
shlb
nop
test
fidivrl
push
outsl
sub
or
cmp
xchg
cmp
leave
mov
out
push
shlb
fcomip
arpl
nop
hlt
mov
jnp
nop
loope
add
cltd
fwait
addr16
mov
loopne
nop
mov
ret
xchg
cmp
pop
daa
sub
call
nop
add
rcr
lds
pop
test
adc
jb
mov
mov
adc
imul
add
mov
mov
lock
mulps
incl
cmp
add
jmp
pop
jno
nop
std
test
mov
mov
cmp
push
or
jl
xchg
adc
mov
pop
aam
push
nop
ss
pop
push
cmpsl
mov
xchg
vsqrtss
test
jbe
xlat
nop
fs
mov
popa
adc
jmp
push
int3
adc
cmp
pushf
sbb
int
and
inc
xchg
jbe
cmpsb
popf
jge
pop
lcall
test
pop
jge
nop
outsb
lea
or
inc
scas
adc
nop
into
jb
hlt
mov
sub
pop
and
xor
test
jmp
int
hlt
cmpsl
push
cmp
sub
cmp
inc
dec
mov
fwait
nop
push
sub
lds
adc
fldt
cmpsl
dec
xor
nop
push
and
xchg
xor
jb
orl
aad
movsb
mov
add
mov
movsb
fidivs
dec
and
xor
sub
pop
cmp
jns
mov
leave
enter
sub
movsl
push
out
pop
or
mov
mov
inc
sahf
pmulhw
rcll
pop
xor
pushf
mov
daa
xchg
repz
and
in
push
das
nop
call
mov
call
sbb
dec
in
roll
xchg
jb
mov
mov
rcl
not
xlat
fldlg2
nop
arpl
pop
lea
jo
push
enter
sub
aaa
push
fdivp
and
aam
push
insl
lock
sub
jae
aad
inc
sub
jecxz
xchg
xor
lock
dec
mov
push
in
adc
and
lahf
or
mov
js
bound
pusha
clc
and
fcmove
call
call
nop
mov
sub
nop
ljmp
aad
adcb
test
out
push
add
adc
daa
xchg
dec
fsubs
enter
lods
xlat
inc
pushf
lds
xchg
adcb
nop
dec
dec
xor
sbb
xor
js
pop
mov
jbe
mull
push
xor
nop
cmp
in
jns
pop
ljmp
popf
rorb
cmpsb
mov
adc
cmp
sbb
aaa
and
xor
nop
lret
pop
inc
bound
xor
lods
lret
leave
or
rol
sbb
test
fisttps
mov
mov
mov
nop
testb
xchg
dec
or
sub
in
fidivrs
ja
sbb
pop
push
jmp
scas
fsts
fcomi
mov
pop
or
fwait
push
nop
loop
xchg
lock
mov
and
fucom
jno
rorl
cmp
push
mov
pop
sbb
push
popa
sbb
sti
pop
jae
popf
insb
adc
pushf
les
out
inc
push
enter
mov
arpl
fcom
pop
nop
xor
mov
vcvtps2dq
adc
fdivrl
add
adc
mov
mov
xorl
ss
iret
lock
push
cwtl
or
pop
xchg
mov
jno
lahf
fcomps
xchg
mov
add
xchg
xlat
mov
mov
xor
out
adc
cld
sub
and
sbb
lret
in
imull
nop
std
cmp
mov
sub
xchg
mov
nop
add
nop
lea
cli
nop
jge
mov
paddq
imul
daa
mov
nop
add
pop
mov
xor
nop
rorl
je
fimuls
xchg
in
cmpsl
mov
dec
cmp
add
jmp
stos
xlat
xor
xchg
dec
add
nop
or
fdivl
mov
ret
adc
push
fsts
imul
lcall
jecxz
in
mov
jbe
test
fnstsw
xor
or
or
inc
xor
test
loop
xchg
mov
leave
mov
loopne
add
in
mov
shrl
in
xchg
inc
addl
add
adc
add
push
nop
imul
add
sub
aam
nop
jmp
adc
test
in
loopne
pop
nop
dec
je
leave
arpl
mov
add
add
jmp
mov
cltd
inc
sub
mov
adc
jmp
xchg
movb
stos
xchg
pop
push
jecxz
sbb
nop
cld
cmp
stc
adc
nop
pop
outsl
mov
or
mov
mov
sub
add
xchg
jns
pushf
ds
fwait
sub
out
mov
pop
insb
nop
push
cmp
daa
jle
mov
mov
cmc
fsubs
or
cmp
sub
loop
lahf
nop
iret
jge
inc
incb
jae
cmpsl
mov
aas
in
nop
sub
call
icebp
out
sarb
cmp
adc
out
lahf
loop
nop
xchg
add
cmp
jno
lcall
mov
inc
nop
mov
out
aam
jl
mov
sub
jp
adc
jmp
out
addr16
xchg
sahf
adc
test
nop
rol
les
push
push
nop
cli
inc
mov
or
icebp
fsts
call
hlt
jnp
movsl
mov
mov
lods
xchg
ret
cmp
pop
xor
pop
lret
fsubs
fmuls
das
in
nop
dec
leave
mov
loop
enter
nop
out
push
xor
mov
adc
loopne
cmp
sbb
out
cmpsb
jg
pop
movsl
out
mov
fs
cmpl
stc
lods
lret
mov
jle
adc
fsubl
dec
cmpsl
pop
ljmp
nop
fsubp
adc
loopne
xchg
sub
sbb
pop
and
shrb
paddd
mov
movsb
nop
in
adc
mov
daa
inc
and
cmp
bound
imul
jae
cli
mov
pop
ficomps
mov
and
mov
dec
nop
push
inc
in
nop
sub
lds
fildl
ret
out
sarb
nop
mov
sbb
movsb
pop
scas
ljmp
lods
mov
and
mov
sbb
nop
dec
pop
lea
push
nop
adc
loope
add
nop
test
cmc
dec
pop
push
or
pop
inc
pop
add
bound
sarl
test
jne
xor
sarl
loopne
loop
mov
dec
fdivr
lahf
cltd
and
enter
cmp
push
and
fists
test
nop
mov
pop
pop
stc
or
dec
lret
fcoms
inc
push
jnp
and
jbe
mov
outsb
jae
mov
jecxz
xor
push
pop
cmc
shl
loopne
add
fnstcw
dec
xchg
lcall
mov
mov
sarb
xchg
xchg
jle
pop
lock
xor
push
repnz
cmpsb
push
push
and
and
dec
lahf
mov
xor
mov
or
xchg
dec
sub
hlt
and
add
je
push
in
xlat
nop
in
icebp
ljmp
in
inc
jno
pushf
sbb
loopne
icebp
std
nop
push
insl
sub
jecxz
adc
nop
hlt
push
jp
ds
fnop
add
or
push
shrl
or
ret
lock
jnp
adc
ret
mov
mov
rclb
lock
mov
add
xor
xchg
fadds
push
sti
nop
inc
pop
outsl
xor
nop
xor
loope
mov
mov
sbb
xor
or
xor
pop
nop
mov
pusha
cmc
jecxz
push
and
mulb
xor
pop
arpl
fdivrs
and
shrb
cld
xchg
rolb
test
bound
stos
out
stc
add
jg
mov
adc
mov
mov
rcl
icebp
jae
shll
mov
aam
fcmovu
nop
iret
popf
es
inc
int3
xchg
aas
nop
and
push
insb
cmp
push
pop
nop
and
sub
pop
popf
nop
inc
je
insl
das
sbb
add
jg
sub
adc
in
cltd
ficoms
jmp
hlt
insb
or
pop
mov
icebp
movsb
nop
fisttps
imul
push
mov
int3
in
adc
pop
mov
jle
push
incb
std
xchg
aad
pop
inc
fdivl
idiv
fiaddl
jne
mov
jl
pop
bound
cmc
or
jb
movsb
or
cmpsl
repnz
nop
insb
pop
jmp
inc
adc
mov
adc
sbbl
fcmovnbe
inc
ljmp
aas
and
leave
lds
dec
inc
scas
loope
mov
cmpsb
adc
sub
sbb
add
loope
aam
push
adc
pop
rolb
jle
movsl
cmp
mov
xchg
in
mov
call
out
movsb
fwait
mov
sbb
push
es
cmp
lret
nop
sbb
or
mov
call
nop
inc
int
jg
lahf
pop
out
nop
int3
mov
cmp
nop
scas
lcall
sti
push
dec
in
mov
repz
inc
aam
enter
jecxz
pop
nop
dec
scas
outsl
outsb
sub
adc
ret
mov
outsl
mov
or
add
shl
stc
and
iret
xor
nop
addr16
mov
xchg
mov
mov
outsb
scas
out
nop
inc
movsl
je
ja
pop
into
nop
jb
sub
leave
jne
jns
inc
shll
xchg
mov
xchg
push
sub
imul
out
mov
cwtl
incb
xor
cmp
pop
xchg
pop
cmpb
xor
push
mov
ret
and
sbb
neg
add
mov
lods
daa
mov
jle
push
adc
adc
filds
lods
cmp
or
push
xchg
mov
sub
add
mov
out
xchg
mov
ret
inc
cmc
inc
sbb
adc
cmp
push
or
sbb
lea
dec
cmp
pop
arpl
jnp
adc
imul
cld
lds
mov
sbbl
sbb
xor
dec
in
outsb
jg
mov
jp
push
jbe
aaa
mov
imul
fdivl
movsl
nop
add
pop
mov
nop
rcr
inc
in
xor
stc
or
mov
jg
nop
or
xchg
rsqrtps
nop
cmpb
pop
lahf
es
xor
push
movsl
shlb
jnp
xchg
xor
jne
jo
mov
or
pop
nop
mov
popa
ds
inc
push
ss
enter
fnsetpm(287
mov
imul
lock
nop
and
mov
add
shlb
cli
push
bnd
nop
andl
aas
nop
mov
push
xchg
nop
pop
mov
gs
cmp
xor
call
xchg
xchg
mov
push
lock
jne
jle
nop
xor
mov
jecxz
in
pop
inc
stc
nop
sbb
bnd
pop
add
stos
test
sbb
das
roll
pusha
nop
lahf
les
sbb
mov
pause
cmp
pop
nop
push
xchg
xlat
pop
das
push
insl
jnp
dec
push
push
sbb
push
es
mov
mov
iret
stc
mov
jno
mov
je
push
test
sub
es
mov
sbb
sahf
add
mov
mov
cld
enter
push
ljmp
addr16
and
outsl
and
mov
xor
mov
push
lret
ret
imul
nop
call
mov
rep
or
nop
scas
adc
stos
fxam
rcrb
adc
bound
xchg
enter
push
jmp
leave
pop
mov
xlat
push
mov
bound
lret
adc
movsb
mov
add
bound
xor
jmp
adc
dec
movb
lcall
mov
and
int
mov
inc
nop
out
mov
ret
adc
push
and
ss
pop
nop
fnstenv
mov
xchg
xor
fwait
sub
and
repnz
imul
leave
mov
test
fildll
nop
lds
aam
nop
jp
leave
push
mov
inc
cmp
inc
out
push
add
inc
mov
adc
mov
lods
xor
xor
jmp
push
mov
fidivl
or
outsb
mov
lcall
jbe
cmp
outsl
mov
loopne
push
nop
add
rcll
sbb
add
nop
inc
sahf
lods
push
or
pusha
nop
in
mov
xchg
lea
mov
sti
bnd
mov
mov
pop
out
nop
mov
xchg
clc
fldl
push
sbb
jmp
bound
aad
jecxz
push
cld
cwtl
adc
rcrb
and
or
shll
mov
pop
ret
push
fidivl
mov
lock
fdivrl
sub
fsubrl
rorl
inc
int3
xchg
xchg
xor
or
fadd
sub
mov
mov
sub
pusha
adc
das
mov
sbbb
and
jmp
adc
insl
out
xor
int
push
repz
jle
mov
lahf
or
nop
aas
loop
sub
cmp
xor
inc
or
sbb
dec
and
nop
int3
mov
jno
aad
or
idivl
clc
jb
in
rclb
iret
pop
pop
cmpsb
ss
mov
push
cmp
pop
push
lcall
arpl
inc
stos
loopne
adc
xlat
nop
movsl
pop
ret
push
cltd
push
nop
xor
daa
pop
loopne
mov
decb
adc
xchg
sbb
xchg
inc
leave
xor
cmp
jp
inc
mov
fistpl
test
push
sbb
rolb
mov
cmp
mov
mov
scas
push
add
xchg
loop
lds
shl
popf
iret
nop
sbb
mov
pop
mov
sub
jmp
nop
insl
std
pushf
mov
nop
popa
and
add
or
fwait
lock
sti
inc
adc
test
lahf
cmp
mov
mov
icebp
std
xor
rcll
sub
or
insb
mov
fbld
push
push
aad
mov
in
pushf
add
nop
stos
pop
cmp
js
dec
adc
jmp
sub
pop
loopne
sbb
push
jg
adc
cmp
dec
jecxz
insl
ljmp
inc
or
jmp
stos
pop
add
sbb
sub
xchg
xor
mov
aas
mov
sub
ja
nop
stc
mov
dec
imul
pop
pop
push
shl
mov
xchg
xlat
cmpsl
nop
fcmovnb
jecxz
dec
xchg
sbb
out
sbb
call
dec
mov
nop
sub
mov
cmp
pushf
jno
adc
nop
and
std
lcall
outsl
cmc
in
stos
mov
pop
xlat
push
sub
in
nop
cmp
sbb
sbb
cmc
xlat
dec
nop
jg
add
mov
jns
in
insl
aam
jo
adcl
mov
movsl
xchg
cmp
in
cmp
adcl
test
nop
in
pop
jo
mov
sbb
imul
nop
fxch
jno
in
or
add
iret
adc
push
ss
pop
jge
inc
mov
aas
jb
faddl
scas
rcrb
out
jbe
dec
jle
add
out
mov
mov
aad
or
adc
psllq
fwait
inc
test
mov
adc
sbb
jl
pusha
insb
fisubs
or
xchg
movsb
xchg
push
sub
out
or
lds
xor
add
nop
pop
lcall
daa
into
mov
bound
add
in
loopne
and
dec
lahf
jae
loope
mov
ret
ljmp
shlb
jge
mov
pop
jns
in
addb
pop
ljmp
push
dec
or
rol
or
inc
sbb
inc
adc
mov
js
imul
pop
xor
or
scas
fsubl
push
aad
nop
jmp
or
into
adcl
ficomps
inc
insb
clc
pop
call
or
xchg
jnp
fstl
cld
or
xor
xchg
nop
cltd
andb
rol
push
adc
inc
mov
nop
in
pop
lahf
in
mov
adc
mov
outsl
je
pop
or
xlat
dec
push
push
sbb
mov
mov
and
xchg
adc
loop
jne
xor
cmpsb
or
mov
xcrypt-ofb
cmpsl
insb
or
mov
nop
mov
inc
dec
and
jp
jmp
scas
je
nop
sbb
add
rcrb
xor
push
jo
popa
sbb
xor
filds
loopne
mov
pusha
sbbb
insl
cmc
jne
in
xchg
adc
mov
sbb
jnp
je
xchg
shlb
push
rorb
cmp
nop
imul
jle
adc
fisttps
in
xor
std
inc
nop
das
bound
ds
test
jae
nop
inc
mov
or
or
pop
push
mov
cmpsl
jb
data16
shl
fwait
add
mov
xchg
mov
fsubs
insl
or
ja
mov
cmp
shrb
sbb
xchg
xchg
nop
mov
das
mov
xchg
ds
xchg
sub
cltd
xchg
fucomp
test
setbe
pop
stc
std
push
push
mov
add
sbb
mov
in
inc
fdivs
cltd
lods
adc
mov
cs
cli
push
nop
sbb
mov
movsb
flds
nop
mov
push
sub
add
inc
fcomi
cmpsb
mov
mov
or
movsb
cmp
rcrb
mov
lret
addb
inc
fldt
dec
xchg
ret
cli
inc
sub
jae
cwtl
cwtl
cmp
inc
mov
jns
jg
fsubrl
mov
or
push
addb
inc
imulb
lret
xchg
xorb
mov
lock
sub
adc
cmp
mov
push
and
xchg
mov
dec
lcall
arpl
push
and
int3
or
lock
ret
imul
shlb
loop
inc
xchg
dec
nop
lret
xchg
out
sub
leave
fcoms
dec
push
cmpsb
dec
shlb
insb
inc
adc
xchg
xchg
sbb
jecxz
flds
loope
orb
mov
jae
popf
stc
mov
orb
jecxz
adc
ss
nop
outsl
mov
stc
jg
push
nop
lcall
push
xchg
or
jp
es
push
cwtl
mov
jb
neg
test
nop
xchg
dec
out
sbb
mov
test
xor
and
bound
orl
loopne
gs
aaa
nop
or
fistpl
pop
push
call
call
in
fcoml
imul
out
pop
in
fistl
popf
adc
out
jmp
seto
jp
scas
xchg
push
mov
jle
push
nop
test
add
nop
rcrl
jno,pn
nop
stos
ja
jb
nop
out
push
push
push
fdivl
mov
in
fstpl
and
sbb
pop
mov
or
lret
mov
mov
int3
test
incl
pop
xor
cmp
mov
scas
adc
mov
loop
cmp
or
outsb
sub
loop,pt
mov
dec
mov
jno
dec
jbe
ja
mov
dec
nop
orl
inc
loop
repz
mov
rcl
cmp
mov
faddl
mov
or
stos
nop
outsl
add
ss
lahf
rcrb
xor
xor
mov
pusha
mov
notl
arpl
adc
inc
popf
pop
nop
jl
pop
cmp
xchg
fs
and
dec
loope
inc
xor
or
repnz
dec
fbld
xchg
dec
scas
rclb
nop
pop
std
and
fiaddl
data16
loop
mov
fnstsw
dec
push
push
lret
and
into
mov
mov
xchg
cmp
out
mov
rcl
imul
out
in
enter
outsl
adc
mov
outsb
lods
sahf
push
push
pop
jne
lret
nop
ss
hlt
xor
outsb
rcl
adc
push
add
mov
nop
ja
stos
out
mov
xor
fwait
mov
nop
cmp
insl
scas
push
ret
out
jmp
imul
enter
int
out
hlt
cmp
ljmp
dec
nop
int
scas
push
pusha
clc
std
xchg
sbb
nop
call
ds
nop
test
mov
fiadds
nop
int
dec
xor
std
ret
test
jle
xchg
es
fstps
mov
out
loop
sub
lcall
movl
jnp
mov
gs
shlb
xchg
rclb
fmulp
daa
push
fisttpl
xor
cmp
pop
adc
push
adc
arpl
pop
pop
mov
testl
pop
inc
push
pushf
mov
xchg
rcrb
faddl
xorb
cmpsl
sub
inc
add
in
dec
push
and
nop
sti
stos
pop
cmpsb
fistps
mov
mov
mov
cmpsb
loopne
mov
ja
add
fistpll
fstl
or
jns
nop
cmpb
int
pop
sbb
je
adc
or
movsb
push
in
and
pop
lods
mov
adc
cmp
nop
jecxz
enter
sub
cs
ret
push
or
lcall
test
mov
dec
sbb
inc
daa
jae
add
es
and
lret
push
inc
xchg
mov
stos
jge
outsl
or
daa
nop
xchg
sarl
std
imul
lcall
movsl
nop
cld
stos
stos
into
adc
nop
repnz
xor
push
jb
loopne
aam
nop
sub
push
jbe
add
xchg
nop
frstor
ds
stos
xchg
rolb
data16
nop
pop
aam
cmp
gs
orl
or
pusha
aam
xor
andb
jno
insb
jno
nop
in
adc
icebp
sti
stos
nop
hlt
fidivl
fidivrs
or
mov
mov
cmp
and
sub
popf
jl
nop
add
outsb
mov
daa
push
cli
xor
adc
nop
rorb
adc
jne
imul
popf
test
call
fwait
adc
sub
orb
jp
jle
inc
test
fisubs
pop
mov
or
mov
test
cmp
cs
aas
fildl
mov
test
in
xchg
lcall
roll
jnp
adc
lock
mov
adc
push
popf
add
pop
adcb
jp
mov
lock
jae
adc
xchg
cwtl
mov
aad
and
bound
ljmp
popf
aaa
inc
rolb
and
mov
mov
mov
test
gs
nop
lods
loopne
jno
inc
pop
cmp
push
fsubl
or
adc
jmp
dec
out
cmp
fcoml
and
dec
dec
dec
mov
mov
pop
or
loop
mov
out
loope
cmc
pop
mov
xchg
mov
mov
lahf
lret
xchg
outsl
pusha
mov
cwtl
std
mov
nop
jg
add
ret
in
jae
inc
cmp
mov
adc
je
push
push
fcomi
pop
aam
pop
nop
cs
fwait
jl
and
nop
jnp
fs
mov
jno
push
rol
or
adc
fsubs
fucom
mov
fstl
xlat
cwtl
lock
inc
movsl
in
push
xchg
xchg
pop
push
push
or
and
nop
leave
mov
movsb
jbe
fs
xchg
jl
orl
scas
es
mov
xchg
nop
and
repnz
stos
jae
ss
jp
xchg
cmpsl
adc
fidivrl
lea
sbb
loopne
mov
adc
nop
ret
lea
inc
jb
popa
shll
shl
inc
ror
and
int3
xchg
testl
add
inc
sub
inc
sbb
std
rclb
lea
loopne
scas
scas
cld
mov
test
test
and
nop
pushf
xor
add
nop
mov
aaa
sub
je
push
or
or
stos
inc
dec
push
fcomps
out
push
adc
es
movsl
pop
push
push
aam
ljmp
mov
adc
sub
xor
mov
lock
loope
inc
lcall
inc
mov
dec
nop
and
incb
xor
push
mov
nop
movsb
andb
nop
dec
adc
popa
sub
mov
test
into
sbb
inc
mov
fisttpl
cli
aad
imul
es
insl
mov
aaa
shl
pop
push
nop
and
lret
cmp
popf
or
sti
xor
mov
scas
inc
mov
pusha
mov
sbb
hlt
fistl
outsl
movsb
mov
jg
add
mov
mov
xchg
test
add
dec
mov
scas
stos
cltd
clc
lods
lock
imul
or
clc
mov
jns
push
sub
dec
arpl
pop
nop
aas
mov
dec
mov
lods
mov
pop
leave
adc
nop
clc
stos
insb
push
adc
inc
push
nop
rcll
push
bound
xor
cmp
in
loop
movsl
sbb
adc
mov
cmp
sub
pop
nop
out
push
cld
sbb
jne
and
out
dec
nop
jecxz
popf
cmpsl
shl
lock
insl
out
divl
push
mov
fadds
adc
mov
xchg
leave
or
pop
out
jle
jmp
inc
les
outsb
lock
nop
fcoms
int
pop
push
jg
nop
push
out
jb
jp
or
nop
xor
push
jl
testl
stos
ja
cmp
nop
insl
xchg
fs
add
out
ds
xchg
xor
dec
lock
mov
ds
pop
lods
enter
add
nop
push
cmp
je
inc
push
and
shlb
push
enter
movsl
xor
push
mov
jecxz
nop
call
das
pop
xor
out
jo
cmpsb
jbe
int
push
cmp
lahf
nop
shll
push
dec
fidivs
nop
movsl
and
ljmp
mov
push
jge
cmpsb
aam
push
pop
out
imul
xchg
addl
adc
adc
movsb
fsubrs
jnp
or
sbb
popf
out
sbb
icebp
adc
nop
iret
inc
push
xchg
xlat
test
cwtl
pop
adc
dec
add
int3
js
dec
scas
hlt
call
pop
push
stos
nop
adc
inc
cmpsb
mov
sbb
add
mov
nop
mov
mov
add
jb
push
adc
mov
mov
fistl
popl
icebp
test
gs
dec
or
mov
outsl
sub
lods
nop
pusha
push
jle
out
push
inc
test
or
push
es
mov
aaa
and
shll
clc
mov
loope
pusha
adc
pop
call
in
xchg
xchg
roll
adc
cld
jns
sbb
xchg
cmpsb
jge
nop
xor
ljmp
enter
cmpl
jp
dec
nop
adc
cmc
jb
clc
push
or
dec
stos
inc
mov
mov
adc
mov
insb
mov
dec
add
jp
cld
nop
push
xor
adc
mov
rol
push
sti
add
adcb
popa
and
or
mov
mov
push
jp
adcb
test
jns
push
cs
notl
push
cmpsl
push
and
adc
cmp
aam
test
lds
lahf
push
adc
in
popw
mov
mov
insb
mov
test
in
shrd
test
jnp
hlt
ljmp
or
dec
loop
hlt
imul
nop
xor
push
dec
cmpb
andl
pop
sub
insl
pop
jge
les
or
mov
cmpsl
cli
dec
push
mov
push
aam
cmp
in
jae
inc
sbbb
nop
test
inc
packssdw
sbb
adc
cwtl
inc
pop
aam
rclb
mov
icebp
adc
aad
dec
mov
lds
add
rcrb
test
cld
incb
enter
icebp
mov
pop
jmp
or
popl
aas
pop
mov
popf
lods
mov
sub
add
xor
imul
mov
rcll
lret
scas
push
dec
nop
test
popf
iret
push
sub
ljmp
xchg
cmpsb
mov
mov
mov
sub
ja
nop
mov
daa
add
test
cmovg
sti
repnz
lret
add
mov
mov
mov
inc
nop
aad
scas
jl
or
dec
jae
mov
mov
lret
arpl
jmp
cmp
idivb
scas
and
mov
in
inc
fisubs
pop
int
pop
insb
out
data16
dec
gs
mov
lret
mov
cld
sub
adc
shl
jb
inc
adc
push
ss
cmp
sub
dec
add
cmp
or
push
mov
inc
stos
inc
subb
nop
lea
cmpsb
ljmp
rol
mov
pop
movsl
xchg
mov
xor
push
fdivrp
mov
mov
add
call
test
cwtl
imul
jmp
and
mov
push
mov
shrb
int3
pop
addl
jae
lods
loop
sarl
fidivrs
leave
in
xchg
andl
xor
imul
test
fwait
nop
inc
scas
pop
jno
cmc
mov
xchg
rolb
outsb
pop
loopne
insl
in
mov
xor
push
adc
mov
nop
cmp
sbb
jp
ss
xor
add
out
and
in
divl
xchg
cld
or
loopne
out
nop
bound
push
aaa
mov
into
int3
or
dec
imul
std
addb
push
das
adc
pusha
mov
dec
push
in
xchg
add
adc
mov
nop
icebp
mov
or
sbb
pop
cmp
lret
lock
sub
sti
push
inc
cld
lea
in
popf
pop
test
nop
xor
rcrb
adc
insl
mov
push
daa
nop
cmc
lea
cmpsl
nop
in
add
fwait
push
or
mov
sarl
movsb
stc
nop
jae
pop
aaa
cmp
ret
mov
aad
nop
stos
ljmp
adc
in
fisubrl
xor
mov
sbb
dec
nop
adc
xor
xchg
pop
nop
pop
cmp
mov
nop
xlat
in
clc
dec
mov
std
mov
js
mov
xchg
xor
stos
inc
hlt
sti
pop
sbb
movsb
nop
pop
mov
push
xor
nop
mov
fs
xchg
mov
movsb
mov
push
nop
or
shlb
pop
pop
ss
dec
dec
pop
inc
enter
or
adc
test
xor
out
adc
xchg
pusha
stos
mov
fstl
cmp
lock
jo
nop
iret
sbbb
nop
jle
mov
fdivr
nop
iret
mov
xchg
cmp
idivb
lock
insb
jg
mov
loopne
leave
mov
xchg
xchg
mov
push
and
stos
adc
pusha
scas
nop
rol
add
cmc
mov
arpl
fcoms
or
mov
lock
inc
nop
push
sahf
flds
nop
sbb
cmp
maskmovq
idivl
ret
or
nop
xor
jmp
bound
shlb
jmp
mov
and
out
nop
je
xor
ss
xchg
movsb
and
xchg
sub
popf
stos
dec
sbb
scas
nop
in
lret
aad
jae
nop
sahf
jmp
xchg
xchg
xchg
and
push
insb
sbb
adcl
xor
inc
enter
nop
cmp
adc
pop
jb
loope
iret
ret
mov
setp
test
sub
nop
filds
xor
jns
aad
sub
jno
xor
xchg
repnz
nop
or
into
mov
pop
sub
std
cli
nop
mov
fidivrs
lock
xchg
xor
repz
mov
scas
nop
cmp
gs
xchg
pusha
push
scas
dec
out
nop
cld
adc
jno
popa
adc
add
dec
push
shl
or
or
mov
ror
sbb
push
mov
or
popa
xchg
scas
push
mov
xchg
fs
mov
xor
nop
inc
add
xor
adc
xchg
cli
or
and
out
rcl
push
fstpl
xchg
push
inc
jg
sbb
fbstp
nop
xchg
lock
pop
jns
mov
or
push
sbb
adc
sarl
cmc
pusha
mov
nop
jae
adc
fcomps
mov
sbb
stos
cwtl
push
mov
sbb
cmp
lock
mov
lds
mov
outsb
sbb
add
jmp
in
enter
dec
jbe
lock
jns
nop
pushf
testl
inc
sbb
xor
in
lods
fs
dec
mov
adc
mov
hlt
lea
pop
sub
pop
sbbb
das
lahf
dec
loop
push
push
insb
lcall
jle
fbld
sti
lock
gs
lahf
cld
bound
insb
jle
pop
nop
xchg
push
or
jg
ret
mov
jge
adc
fbld
inc
pop
push
outsb
nop
and
mov
loop
mov
mov
nop
push
mov
jp
nop
in
add
mov
dec
nop
fwait
dec
jb
imul
js
xchg
scas
cld
orb
fdivl
mov
outsb
clc
adc
pop
xor
shlb
mov
xchg
dec
test
xchg
adc
loope
shlb
nop
fimull
rorl
xchg
das
out
sbb
dec
jg
mov
nop
out
sbb
nop
ret
shll
je
lret
jne
out
nop
stos
pushf
or
sbb
mov
jecxz
stos
mov
gs
nop
pusha
es
adc
test
xchg
nop
dec
xor
sti
je
shlb
dec
nop
xchg
xchg
adc
movsl
nop
stc
xor
xchg
inc
insl
nop
fistl
jge
jmp
lcall
pop
and
int3
push
dec
jecxz
test
in
xchg
lret
nop
montmul
cmpsb
sbbb
mov
jae
fcomps
push
test
jg
sti
sub
nop
loopne
push
dec
mov
out
ficoml
movsl
lret
or
ja
mov
mov
push
nop
jge
bound
nop
aam
inc
inc
add
xchg
nop
push
pop
push
jecxz
xorl
call
cltd
push
add
mov
insl
rcll
aam
cmc
nop
sub
les
popa
cmp
loopne
out
in
mov
push
xchg
jmp
movsb
repz
or
les
dec
nop
add
xor
fnstsw
pop
int3
negb
xchg
pop
xlat
test
nop
or
pop
leave
pop
or
sti
mov
sub
sbb
clc
rcll
ret
jno
sbb
jnp
sub
nop
lods
xor
fcoml
cli
cmpsl
jne
clc
sub
xlat
lret
dec
lret
push
mov
push
mov
nop
push
adc
mov
fucom
stos
pop
cli
adc
xor
adc
sarb
push
mov
adc
clc
insl
nop
repz
inc
push
mov
cmp
ret
loop
aad
scas
dec
call
mov
lcall
bound
stos
cmpsl
jo
gs
xchg
fimuls
or
or
sti
mov
adc
xchg
aam
out
nop
and
neg
and
jo
lock
sbb
dec
dec
pop
xchg
fxch
popa
pop
inc
pop
mov
sbb
clc
fsub
and
mov
dec
pop
mov
dec
dec
sub
andnps
test
jge
loopne
adc
nop
mov
loope
pop
nop
xchg
test
int3
cli
arpl
pop
int
dec
nop
or
mov
out
int3
addr16
or
in
outsb
in
mov
mov
pusha
shl
push
aam
nop
jae
aad
ret
or
sub
addr16
or
in
xchg
push
sbb
lock
xor
aam
jecxz
fld
xchg
in
cld
nop
add
and
adc
stos
sbbb
push
push
adc
or
adcl
adc
mov
fmul
nop
stos
push
xor
mov
push
sub
fdivl
nop
rsm
mov
insl
nop
xchg
out
pusha
pop
cmpsl
fmuls
xchg
xchg
loopne
cmp
push
lods
push
mov
insb
jmp
add
cltd
xor
fadds
repz
stos
cmp
cld
test
nop
pop
cmp
std
clc
shl
jne
nop
inc
sub
dec
arpl
nop
andb
fldl
and
sub
rcrb
push
fwait
mov
lahf
nop
adc
dec
popf
sub
sub
inc
cltd
rcll
jnp
pop
mov
xchg
in
add
inc
test
inc
movsl
fidivrl
out
sbbb
pop
sub
nop
lock
fstpt
nop
aas
jb
push
adc
mov
fmuls
nop
outsl
push
sub
scas
insl
nop
jge
pusha
aas
add
xor
inc
rorb
rcl
cmpsb
out
nop
or
adc
mov
dec
ficoms
rep
repnz
std
jb
nop
fildl
fcoml
in
mov
ficoml
xorb
xor
daa
rcl
lahf
adc
fstpl
nop
xchg
xchg
aad
inc
jge
notl
cmpsb
mov
nop
lret
jg
enter
nop
or
jmp
push
adc
mov
in
xor
nop
jge
fsub
xor
daa
subl
inc
dec
mov
sbb
aam
and
pop
sbb
icebp
into
out
nop
jmp
test
out
mov
ljmp
inc
xor
lret
out
addr16
rcrb
cwtl
nop
jne
int
ljmp
jb
pop
adc
dec
jp
nop
dec
cmp
inc
dec
loope
movsb
xchg
lods
nop
and
push
nop
xchg
xchg
jle
dec
enter
push
add
scas
or
cmp
cmpsl
pop
and
xchg
lahf
pop
pusha
ss
nop
cmp
cmpsb
jecxz
into
fistpll
test
jp
daa
fcompl
jcxz
add
cmp
dec
lock
push
nop
mov
xchg
out
adc
xor
push
and
jg
or
cmp
mov
dec
test
mov
outsl
mov
sahf
fisubrl
ret
mov
dec
pop
cld
nop
aaa
out
hlt
mov
bound
js
add
dec
repz
psadbw
aad
sub
xor
data16
xchg
jmp
and
xor
rorb
pushf
and
cs
paddusb
mov
and
fdivrl
and
pushf
mov
xor
and
adcl
cmc
push
jl
sub
arpl
xadd
pushf
popa
shr
xor
out
int
lea
pop
jmp
rclb
cmp
in
dec
adc
loopne
xor
or
daa
sub
add
inc
fstps
lods
inc
das
dec
or
add
imull
shlb
dec
adc
nop
jb
pop
mov
and
mov
aaa
mov
xchg
mov
jnp
lret
aaa
data16
mov
nop
jmp
mov
fisttps
pushf
nop
repz
inc
insb
or
rcl
push
dec
lock
int3
mov
adc
aaa
iret
cmp
rorb
adc
leave
lcall
add
lahf
pop
nop
mov
repnz
mov
es
and
mov
inc
sbb
nop
xor
out
or
inc
adcl
mov
pop
int3
push
lock
xchg
cwtl
insl
div
nop
mov
jmp
es
fs
sub
ds
adc
mov
nop
xchg
mov
dec
fsubrs
and
sbb
call
nop
or
push
and
rolb
stos
and
mov
jl
rol
insb
loopne
inc
or
pop
push
out
and
movsb
add
imul
xchg
inc
sub
jg
or
rcrb
sti
cmp
mov
mov
test
ret
or
je
xlat
sahf
nop
mov
imul
or
inc
dec
test
adc
xor
subb
pusha
jne
icebp
scas
mov
jl
mov
sbbb
add
mov
lods
ja
nop
fmulp
xchg
ret
dec
inc
mov
test
nop
jno
inc
pop
cli
outsb
clc
loop
lods
scas
call
rclb
pop
pop
mov
andl
cld
pop
add
mov
aad
aaa
jno
add
lock
insb
lahf
int3
adc
nop
lret
pusha
fisubrl
sub
add
nop
jo
inc
mov
cwtl
adc
lcall
cmpsb
jae
stos
shl
shl
mov
cwtl
xchg
and
imul
push
pop
adc
pop
mov
adc
ds
push
cmp
jnp
jecxz
xchg
jb
push
rorl
and
xchg
adc
fsubrs
or
arpl
mov
nop
jnp
fdiv
in
add
jb
rclb
or
jae
adc
sub
fdivl
push
mov
xchg
xchg
ja
lcall
rcl
les
inc
push
fwait
adc
aam
mov
in
lods
xchg
pop
nop
pop
dec
scas
lea
cmp
loope
mov
test
lods
mov
loopne
cmc
mov
push
cs
or
ds
nop
cmp
into
cld
repnz
mov
nop
sub
push
xchg
cmp
sub
rcr
adc
jno
cli
lock
adc
mov
movsl
mov
jp
sbb
xchg
in
fcomps
vpminub
dec
rclb
jns
das
sbb
movsb
ds
nop
pop
adc
shrl
aas
xchg
xchg
fchs
test
adc
xor
sub
mov
mov
or
sahf
cmpsl
inc
and
faddl
jmp
pop
xchg
subl
inc
int3
sub
shl
mov
cmp
ds
mov
out
dec
xchg
xchg
adc
or
inc
jp
ret
rcrl
lret
insb
xor
jb
xchg
ss
adc
sbb
sub
mov
mov
fcomip
enter
cmp
mov
in
nop
sub
pop
sub
push
subb
push
in
pmulhw
fists
movsb
sti
aam
lcall
sbb
sub
pusha
mulb
call
mov
adc
lea
xorl
arpl
ret
fnstenv
cmpsl
icebp
hlt
push
adc
push
or
cmp
arpl
lods
mov
inc
movsl
nop
sbb
dec
scas
pop
int
fstpt
in
mov
jno
nop
imul
inc
mov
rorl
rcrb
mov
xlat
aas
cwtl
mov
test
push
cmp
nop
push
push
addr16
shll
sbb
in
mov
pop
add
repnz
bound
xor
pop
inc
pop
nop
pop
arpl
inc
pand
jo
mov
lahf
mov
or
shl
aaa
and
insl
push
fs
mov
fwait
jecxz
ficoms
xor
das
nop
in
lret
test
mov
pop
in
adc
add
lret
sti
les
divl
pop
loopne
dec
jno
nop
int3
push
test
subb
or
ljmp
outsl
adc
pusha
setp
mov
loopne
out
xchg
cmp
mov
xor
mov
hlt
mov
mov
test
daa
ds
mov
aad
and
or
pushf
popf
jnp
pop
pop
adc
lea
fmull
and
mov
pushf
insb
push
mov
cmpsb
inc
nop
bound
rol
loope
mov
fcoml
xor
cs
stos
xchg
mov
xor
nop
pop
jb
insl
cmp
insb
and
fisttpl
ljmp
cld
leave
repz
add
sahf
lea
jmp
test
aam
decl
push
or
hlt
shlb
cmp
scas
icebp
jb
test
mov
lret
in
nop
in
cmpb
fwait
mov
bound
jo
nop
filds
cltd
nop
pop
add
daa
mov
add
mov
shlb
mov
mov
mov
mov
loope
nop
popf
cltd
mov
sub
mov
mov
ss
aas
xchg
fimuls
xlat
dec
add
leave
pop
or
pushf
nop
arpl
mov
mov
fcoml
mov
pop
push
inc
insb
adc
mov
sub
fisttps
lahf
dec
daa
or
or
xor
mov
repnz
loope
jmp
sub
inc
dec
popa
push
ds
fldenv
in
pop
mov
out
mov
leave
sbbb
jo
sbb
xor
jl
cmp
nop
mov
pop
dec
mov
mov
rcrl
xchg
add
mov
dec
jle
cmpsb
out
mov
cmp
cmp
aad
pop
or
add
push
sub
mov
and
xchg
pop
mov
mov
loopne
pop
dec
adc
xchg
popa
add
lret
lock
adc
push
lret
jp
mov
mov
nop
mov
sar
rcll
push
pushf
cmpsb
sbb
lcall
or
add
mov
rcrl
flds
loope
pop
jg
js
mov
adc
inc
push
dec
and
xor
add
xlat
rclb
adc
ds
mov
push
xchg
nop
lret
loop
shrb
mov
fisubrl
and
push
pop
pop
loop
out
and
xchg
lret
aas
in
xorb
jo
push
dec
mov
push
pop
pextrw
pop
femms
add
xchg
cmp
dec
repz
cli
cmp
sar
inc
in
nop
imul
fwait
sbb
mov
sbb
nop
mov
in
sub
dec
xchg
aaa
nop
addr16
xor
pop
iret
push
stos
in
aam
nop
stc
shll
dec
mov
rorl
adc
mov
pop
mulb
inc
or
nop
iret
ss
and
nop
mov
fsts
nop
dec
and
sub
fdivs
dec
dec
shl
js
xchg
mov
dec
or
lock
push
mov
in
push
fsubrl
xor
sbb
sub
dec
cld
cmp
jmp
xchg
enter
mov
ljmp
subl
push
subl
repnz
push
jp
jg
aam
nop
cmp
sbbl
divb
jne
push
nop
cld
ja
into
inc
mov
repnz
pop
clc
cmpsb
dec
mov
je
test
mov
adc
test
nop
jnp
mov
cmc
outsl
or
repnz
pop
fdiv
stc
loopne
ficompl
add
sarb
lods
fcoms
xlat
seto
or
mov
movsb
pop
jns
test
nop
dec
pop
xchg
mov
ds
fmull
sbb
dec
mov
fldt
jnp
test
stos
mov
ret
adc
adc
or
loopne
push
enter
outsl
push
mov
push
loopne
push
pusha
jno
mov
adc
mov
test
jg
int
jg
mov
xlat
xchg
inc
xor
loopne
adc
push
nop
mov
hlt
push
nop
in
mov
cmp
jp
mov
ds
nop
scas
pop
dec
adc
adc
mov
sbb
daa
ljmp
loope
dec
fmuls
pop
mov
outsb
dec
inc
mov
add
sbb
std
enter
inc
loope
fwait
dec
xchg
nop
dec
in
pop
push
lds
nop
mov
cmp
stos
adc
movsb
add
xchg
fdivr
out
test
insl
nop
add
orl
mov
pop
push
or
shr
loopne
lds
jle
add
ds
xchg
xor
dec
add
jle
jae
nop
call
scas
mov
nop
xchg
pushf
in
and
insl
clc
nop
mov
sbb
sbb
inc
psraw
mov
fidivrs
scas
clc
adc
jmp
xchg
aam
mov
popa
dec
inc
test
push
xchg
lcall
xor
out
inc
fcmovnbe
lods
cmpsl
or
and
push
sub
mov
sub
xchg
push
sbb
fldcw
mov
fsubrs
add
xchg
nop
lahf
sub
push
mov
xchg
lods
sbb
rcll
mov
shlb
or
pop
and
push
sub
lock
or
movsl
mov
out
int3
mov
mov
xor
jle
xchg
push
adcb
cmpsl
mov
push
outsl
inc
lcall
inc
clc
adc
sbb
mov
push
je
xorb
and
inc
lock
outsl
loop
xchg
cmp
mov
shl
lds
fcoml
pop
imulb
sbb
dec
xchg
adc
in
or
fidivrs
mov
nop
xchg
sahf
iretw
out
dec
pop
pop
nop
outsb
jmp
xor
nop
mov
or
push
nop
push
ret
jecxz
cwtl
pushf
nop
xor
cmp
nop
call
loop
adc
pushf
nop
outsl
xor
ss
push
nop
mov
sti
add
inc
jecxz
cmpsl
lret
xchg
xor
add
insb
push
mov
mov
scas
aad
fcmovne
loopne
test
lock
arpl
add
xchg
xchg
loopne
or
pop
daa
mov
test
mov
into
nop
mov
fdiv
xchg
mov
adc
mov
push
fidivrs
clc
cmpl
mov
xor
jecxz
nop
add
dec
jne
jb
cmpsl
daa
inc
mov
lock
sub
orl
pop
rclb
ret
cs
mov
lcall
mov
nop
pop
sbb
in
push
scas
inc
nop
daa
mov
aam
out
add
fstl
imul
mov
sub
flds
mov
pop
mov
leave
insl
xorb
repz
idiv
rcll
aas
jb
xchg
mov
stc
out
arpl
sbbb
jge
ss
push
pop
pop
movsb
nop
cmp
and
jae
mov
lods
ljmp
mov
lret
test
rcrl
andb
add
xlat
jo
das
cld
subl
pushf
sahf
xor
mov
loop
dec
orl
subb
add
jns
cmp
add
pop
cmp
nop
jecxz
imul
or
inc
adc
jge
outsl
xchg
cmp
sub
nop
dec
lcall
or
lock
subb
js
push
add
mov
xchg
mov
xor
cli
xor
f2xm1
sub
fisubs
popw
nop
mov
in
shl
mov
cld
andb
sbb
inc
push
scas
fdivrl
pop
dec
ficomps
lock
stc
loop
nop
movsb
daa
pop
push
call
scas
or
in
stos
testl
cmp
mov
nop
repz
fs
pop
cmpsb
or
jns
jp
jne
rcrb
cmp
mov
fcmovnu
aad
inc
add
push
ja
int3
aas
ror
fdivp
fcoml
mov
fwait
nop
cli
movsb
add
sbb
fcomip
pushf
pop
sbb
push
out
xlat
ss
xchg
nop
int
test
xor
and
in
xor
or
nop
enter
mov
push
loop
roll
nop
cmp
mov
adc
rcll
pand
push
es
mov
nop
inc
or
dec
sbb
sbb
adc
xchg
loop
call
xor
enter
cmp
cmp
pop
int
and
cld
sbb
lea
xchg
loopne
faddl
aam
mov
mov
push
xchg
scas
nop
push
pop
add
aas
ficoml
sti
rcrl
pop
sub
fstps
fs
out
lcall
lea
xchg
pusha
mov
pop
jge
mov
cmp
and
jns
stos
xchg
cld
sub
sub
cli
nop
popf
xchg
mov
icebp
pop
std
ret
nop
call
aaa
cmp
add
fists
cmp
pop
jae
xor
nop
sbb
lret
adc
outsb
mov
sbb
test
ja
push
xchg
nop
int3
test
lods
cmp
jmp
mov
fdivs
nop
dec
adcl
push
sbbl
nop
not
in
fwait
pop
push
lcall
jb
loope
mov
sub
mov
xor
or
mov
jmp
nop
mov
mov
sub
ja
or
ds
cwtl
push
sbb
test
mov
cs
nop
push
fmuls
mov
iret
scas
int
test
incl
out
sbb
jg
mov
stos
push
sbbl
jno
push
dec
nop
ja
aaa
and
frstor
cmpsb
or
rolb
sahf
mov
cmp
jo
sub
inc
ret
cld
mov
imul
bound
jns
nop
inc
or
mov
out
sbb
add
cld
fwait
or
push
pop
xor
loop
jbe
xchg
mov
cltd
jle
mov
xchg
stos
insb
out
inc
sbb
std
or
xchg
lahf
xchg
jmp
mov
pop
mov
inc
seto
fisttpl
and
or
movsl
push
gs
lcall
fdivl
push
jo
les
pop
cmpl
adc
stc
shlb
ja
nop
jne
lcall
repz
out
dec
fcmovnb
mov
mov
rolb
mov
cltd
mov
adc
scas
dec
movsb
nop
add
inc
jp
adc
cmc
out
fcomp
lods
insb
lahf
nop
sub
and
cmc
rolb
les
cld
xor
outsl
add
nop
pop
test
mov
iret
jmp
loop
push
jnp
adc
xchg
add
fcomps
nop
mov
sbb
mov
dec
shrb
xchg
pusha
sbb
leave
lock
pop
sbb
aam
mov
cwtl
mov
add
jo
jnp
outsb
sbb
sub
inc
aam
lock
cmp
rclb
popf
nop
loopne
push
outsb
movsb
in
add
fcomi
shrl
cmp
nop
insl
or
mov
mov
cmpxchg
decl
cmp
rcl
pop
nop
scas
jl
sub
lock
sbb
xor
int
loop
shrl
fisubrl
or
dec
stc
mov
mov
insl
repnz
pop
inc
imul
xor
adc
and
push
in
stos
fcomps
imul
jnp
test
loopne
dec
nop
hlt
stos
add
push
repz
nop
int
testb
fistpll
cmp
pop
pop
nop
cmp
mov
je
add
test
cmp
int
cmp
pop
jb
or
sbb
adc
adc
cltd
cmp
add
jnp
mov
bound
test
es
or
adc
insl
xor
in
pushf
fildll
mov
rcrb
rcll
movsl
inc
sti
ret
adc
sub
adc
fadds
nop
jbe
es
add
or
xchg
test
adc
mov
imul
jnp
fwait
nop
sub
or
loope
jbe
push
incb
and
or
loop
mov
nop
arpl
add
jg
nop
int
sub
adc
stos
xchg
bound
test
pop
nop
cmp
imul
dec
adc
dec
shl
test
lahf
and
jno
jp
mov
icebp
int3
sbb
idivb
out
nop
mov
loop
and
push
and
add
inc
ficomps
lret
sbb
nop
sbbl
in
loopne
outsb
arpl
shrb
inc
jmp
inc
mov
subb
adc
xchg
outsl
push
fwait
int
mov
scas
adc
jns
nop
pop
sbb
lret
lahf
cltd
adc
sti
out
call
push
dec
imul
adc
push
addr16
inc
nop
stos
ret
adc
adc
nop
movsb
mov
sub
nop
pop
or
push
adc
add
ljmp
lea
lret
rolb
sub
outsl
xchg
incb
popf
fdiv
or
test
xchg
lcall
dec
stos
lea
sub
mov
or
add
test
adc
nop
jnp
cmp
mov
push
add
jbe
jb
nop
jmp
mov
cld
aaa
and
mov
inc
pop
int3
mov
jne
aam
jbe
cmp
inc
insb
mov
scas
ret
pop
lods
mov
inc
xchg
push
xor
jmp
out
mov
lock
notb
cmp
rclb
gs
inc
xchg
inc
int3
and
insl
call
sub
jns
nop
pop
lret
jg
dec
mov
add
rorb
xor
in
pop
nop
cmp
std
enter
dec
xchg
cmp
stc
pop
cmpsb
rcr
adcb
aad
mov
in
fwait
outsl
mov
fsubrs
jbe
insl
adcl
jmp
push
mov
test
lret
nop
xchg
in
cwtl
divl
nop
lock
xchg
hlt
xchg
call
mov
aam
pop
nop
pop
test
sbb
mov
pop
lock
or
nop
jo
aaa
lods
or
movsl
shlb
push
xchg
cld
lock
movsb
mov
sbb
ret
cltd
lods
mov
dec
into
adc
fucomi
iret
mov
xchg
jge
xchg
nop
jo
frstor
nop
xor
lods
and
and
mov
outsb
imul
inc
push
mov
mov
pop
mov
pop
scas
xchg
push
adc
push
out
jnp
xor
test
lds
add
nop
scas
or
sti
repnz
rcrw
inc
nop
xorl
mov
stc
lock
cmp
add
pop
xchg
nop
pop
push
and
insb
aam
stos
ljmp
sub
les
lret
add
je
aas
cwtl
xchg
xchg
iret
nop
pushf
lods
ror
mov
pop
scas
nop
jo
cmpsl
addr16
nop
inc
dec
push
cmp
ss
pop
inc
bound
mov
push
dec
xchg
cmp
inc
ficoms
xchg
mov
sub
mov
call
push
lret
inc
xor
lods
jp
test
ret
fcompl
push
lret
xchg
mov
nop
lods
mov
jmp
movsb
add
or
and
in
rol
pop
xchg
mov
je
cmp
test
iret
inc
int
pusha
invd
cli
pop
lds
nop
pop
and
testb
loopne
xchg
stos
call
xchg
stos
adc
testl
enter
lock
aad
dec
mov
mov
stos
nop
pop
and
push
aam
in
or
adcl
xchg
xor
or
jb
xor
les
adc
mov
hlt
insl
pause
andb
mov
jne
in
hlt
mov
adc
lods
test
or
mov
in
mov
jbe
add
cltd
add
mov
adc
xchg
and
cwtl
xlat
adc
and
or
cmp
nop
and
inc
lret
loopne
and
icebp
mov
lock
cmpsb
dec
mov
aaa
pop
push
adc
nop
add
and
loop
nop
fadds
push
sbb
push
mov
fdivl
test
nop
pop
jecxz
jne
mov
xchg
adc
jl
or
cmc
nop
adc
aaa
pop
jb
cmp
fldt
test
adc
mov
daa
xchg
fiadds
cmp
loop
nop
xor
lods
adc
daa
sysret
lock
push
adc
jg
ret
nop
es
rolb
nop
daa
sub
lods
in
dec
mov
ret
into
sbb
add
or
mov
shlb
lret
enter
lock
mov
sbbb
mov
gs
or
sbb
cmpsb
test
add
or
lds
cmpb
stc
nop
out
adc
lahf
fdivs
shl
adc
stos
cmp
cmp
ficomps
push
ja
sub
nop
daa
inc
cmp
fcoml
mov
repz
jae
pop
cmpb
dec
clc
mov
sbb
adc
into
in
lock
nop
push
pop
insl
lahf
cld
xchg
mov
xchg
cmpsb
aad
into
test
adc
lret
aas
mov
nop
test
mov
mov
push
nop
daa
fmuls
inc
nop
mov
cmp
dec
pop
iret
movsl
adc
outsl
in
or
adc
and
push
and
jmp
shrb
call
adc
adc
test
sub
jle
cmpsb
add
mov
aaa
sub
cmp
or
lret
fisubl
pusha
jns
xor
nop
dec
les
inc
mov
add
inc
addr16
adc
inc
jne
jns
adc
jge
jb
pushf
or
shrb
lahf
incl
pop
dec
dec
lock
fldcw
inc
icebp
insl
or
jbe
jl
xor
nop
lahf
enter
pop
adc
push
aad
adc
ds
pop
mov
xchg
pop
shll
add
test
test
cwtl
mov
into
adc
nop
clc
xlat
push
dec
xchg
lods
cmp
sti
xchg
mov
push
nop
addb
cmp
pop
xorl
ljmp
mov
in
mov
lock
cwtl
push
cmp
or
nop
in
cltd
jg
add
mov
adc
movsb
jle
sarb
out
cmpb
int3
rcll
push
mov
cmpsb
jns
mov
adc
pop
adc
and
fwait
add
repnz
mov
pop
jno
cmpsl
mov
nop
int
adc
nop
and
sbb
cmp
add
xchg
cld
aad
and
outsb
pop
aaa
jl
push
nop
negl
out
imul
notb
xor
mov
mull
aaa
xor
jmp
jno
aad
mov
stc
decb
nop
int3
sub
mov
nop
cmpsb
iret
lret
and
inc
mov
jbe
daa
cmp
or
movsb
jge
and
push
rcrl
jo
icebp
outsl
push
sub
xchg
sub
fcmovb
or
mov
and
xorb
nop
jb
jnp
cltd
push
nop
lods
pop
jbe
sub
cli
pop
nop
add
sub
fisubrs
jno
hlt
jbe
rclb
sbbb
dec
out
int3
dec
pop
adc
rclb
mov
std
nop
in
lret
adc
and
nop
mov
cmp
jne
ud1
mov
stos
popa
or
test
mov
stos
adcl
pop
add
sub
mov
cmp
jae
cmpsl
jbe
or
iret
xchg
pop
cmp
sti
push
lock
je
or
stos
sbb
cwtl
aam
daa
push
dec
fnstcw
inc
outsl
push
adc
cmp
cmc
out
pop
mov
xor
inc
nop
ret
loop
push
adc
xchg
roll
nop
mov
movsb
repnz
mov
data16
cld
mov
dec
push
aas
xchg
loope
shl
adc
xchg
push
add
inc
sub
jo
adc
jge
gs
ljmp
mov
jmp
popa
pop
rol
jle
sub
push
inc
nop
insb
jg
cmpsb
pop
test
cmp
fcomps
stc
lock
pop
cwtl
add
nop
sub
add
dec
add
ds
adc
cwtl
notb
iret
pop
and
nop
int
jo
adc
gs
adc
mov
imul
ljmp
sti
add
insb
aaa
nop
leave
cmp
push
mov
mov
cmpl
dec
push
ret
dec
out
mov
nop
mov
and
aaa
ret
inc
sbb
daa
or
mov
jo
xchg
nop
filds
dec
pop
nop
jno
rcll
loopne
nop
pop
pushf
mov
aad
add
int3
jg
pop
sub
mov
lods
adc
and
mov
or
bound
jl
nop
dec
gs
and
insb
ds
mov
pushf
pop
dec
enter
rorb
inc
in
les
hlt
nop
test
inc
adc
add
xchg
outsl
loop
lock
or
push
mov
pop
pop
cld
inc
and
call
rclb
nop
mov
cmp
xchg
jge
pop
fists
das
in
ja
mov
push
nop
push
pop
testl
jb
nop
les
fldenv
bound
out
idiv
lock
dec
scas
addr16
lahf
sub
xchg
cmc
lods
aaa
es
push
pop
nop
cmpsb
pop
sarb
pop
nop
add
fildl
or
loope
pushf
mov
cltd
dec
sub
shl
add
add
mov
ja
into
mov
cmp
push
inc
mulb
jb
dec
add
mov
mov
push
jl
or
and
sub
insl
mov
push
nop
pop
out
lret
ss
gs
js
hlt
push
dec
dec
pop
nop
fucomp
adc
nop
xor
push
mov
xchg
mov
out
into
nop
jne
mov
adc
scas
nop
daa
jp
cmp
push
nop
sbb
fistl
nop
dec
cltd
inc
fcom
movsl
es
adc
mov
sub
sub
data16
ficoml
movsl
orb
test
out
mov
int3
mov
dec
or
jno
outsl
pop
shrl
jnp
cmp
and
sarb
faddl
daa
mov
leave
dec
or
push
mov
jl
pop
xchg
in
xchg
xor
push
fdivrl
push
outsb
dec
sbb
adc
jnp
xchg
cmp
pop
in
into
or
lock
sub
test
ficoms
mov
popf
cmpsb
sbb
cltd
dec
dec
dec
nop
and
and
nop
inc
dec
xor
cmp
pop
fmul
or
lods
rcll
rcrb
pusha
cmp
ss
lea
lret
dec
pushf
xchg
xor
stos
xor
ficoml
nop
jp
jb
mov
adc
xlat
xor
fiadds
sbb
and
and
mov
mov
mov
nop
out
lea
jmp
jns
xchg
and
ljmp
pop
and
nop
iret
adc
mov
jmp
data16
clc
out
nop
cmp
hlt
shll
dec
dec
inc
dec
xchg
sarb
nop
shr
push
cs
jmp
andl
dec
adc
push
push
fidivrl
nop
jecxz
push
outsl
and
cmp
nop
in
sahf
stos
jmp
nop
xor
scas
jb
insl
xchg
xor
rcll
jg
add
call
sbbl
test
arpl
xchg
mov
add
lods
repnz
ljmp
inc
rol
sarl
push
cmpsb
pop
nop
sub
out
and
dec
arpl
push
sub
out
mov
stos
testl
and
dec
popf
sub
js
and
pop
test
in
push
nop
xor
xor
ret
mov
pop
xchg
adc
or
xchg
addr16
lea
xchg
enter
mov
sub
inc
test
nop
je
mov
mov
dec
lods
jns
rcrl
fwait
out
adc
out
jmp
jp
inc
insb
pop
pop
in
jecxz
nop
mov
dec
or
hlt
mov
xor
rcll
pop
hlt
xor
inc
adcb
add
or
test
mov
push
adc
loopne
adc
xorb
jg
out
dec
jecxz,pn
je
clc
nop
xor
or
nop
mov
fmuls
xchg
repnz
add
ret
addr16
addl
into
cmp
fstpt
mov
imul
loopne
mov
and
xchg
popa
mov
ss
add
inc
into
push
dec
mov
rorb
addl
push
nop
sahf
sub
push
xchg
nop
inc
test
loop
adc
xchg
in
pushf
lods
sbb
add
test
int
add
sub
push
shlb
nop
cmpsb
sbb
ficompl
hlt
adc
nop
or
mov
addl
mov
pop
and
jne
mov
fwait
xor
and
fisttpl
ficoms
xor
and
test
test
mov
xchg
lcall
lea
sbb
jno
inc
rorl
imul
dec
enter
push
pop
daa
aad
les
repz
leave
mov
mov
xchg
imul
mov
adc
lea
jg
nop
test
push
sub
xchg
pop
nop
push
mov
stc
sub
lds
push
nop
int3
add
dec
mov
jecxz
xor
xchg
imul
js
push
jle
jnp
clc
pop
sbbl
and
addr16
cmpsl
pop
and
nop
and
cli
repz
nop
jle
shl
cltd
mov
out
imull
add
add
pop
nop
or
aas
xor
les
mov
add
loope
aam
or
popa
nop
pop
fwait
out
movsl
aas
add
fsubrs
or
mov
je
loopne
inc
insb
or
and
push
cld
cmpsl
nop
popa
test
test
mov
cmp
pop
loopne
cli
xchg
xlat
mov
sbb
push
mov
rcl
sbb
mov
clc
in
repnz
xor
pop
nop
sbb
sti
mov
rcll
out
sub
nop
test
mov
hlt
xor
inc
loop
nop
mov
in
and
iret
rcll
fs
sbb
mov
cmp
push
ror
imul
fwait
pushl
movsb
lahf
cmova
cmp
nop
sub
jmp
in
adc
cmc
xor
sub
out
movsl
call
add
push
mov
jne
pop
adc
cmp
and
outsl
pop
mov
add
clc
xchg
cmp
pop
cmpsl
into
nop
mov
hlt
xor
in
icebp
jl
ret
push
adc
enter
push
jae
mov
adc
out
push
sub
inc
arpl
sti
pop
mov
cmp
daa
push
cmp
nop
mov
cmpsl
loopne
xchg
int3
jmp
adcb
das
repnz
nop
and
out
xor
adc
loopne
loope
push
pop
aas
nop
mov
mov
push
nop
mov
pusha
std
push
dec
insb
mov
leave
nop
mov
dec
imul
fistps
pushf
sub
xchg
call
loopne
nop
lahf
jecxz
or
aaa
dec
adc
push
shr
nop
mov
inc
and
nop
outsl
sub
in
lret
je
pop
or
mov
mov
ret
mov
pop
lods
in
adc
nop
js
sbb
imull
jle
fsts
fisubrl
mov
mov
pop
clc
gs
dec
inc
nop
fsubs
jecxz
and
iret
nop
xchg
lods
xchg
into
cmpsb
fcmovbe
nop
pushf
cmp
or
inc
jb
cmp
push
aas
cmp
je
into
mov
nop
outsl
jnp
pop
pop
ds
mov
sbb
xor
test
lret
sbb
xor
adc
lods
stos
loopne
pop
mov
adc
ret
lods
pop
mov
mov
fstl
cld
mov
addb
out
push
sbb
nop
popf
inc
add
nop
mov
or
mov
or
push
sarb
adc
cltd
addl
fmull
loope
push
ret
mov
outsl
nop
mov
and
nop
fs
inc
or
push
jp
adc
lret
dec
xor
ds
fcompl
test
jp
call
and
cmp
inc
imul
push
push
insb
in
nop
xchg
sbb
inc
enter
or
jl
push
mov
jnp
lahf
clc
int
and
nop
mov
daa
cmp
sub
push
lock
arpl
sbb
or
mov
push
nop
mov
lret
mov
repz
xchg
lret
xor
nop
repnz
jecxz
mov
ds
adc
mov
popf
cmp
jb
loop
and
andb
icebp
ja
out
lock
jbe
rolb
sbb
nop
dec
pop
push
jae
xchg
or
nop
call
je
sahf
loop
nop
add
adc
lea
xor
xor
mov
xchg
xchg
and
or
inc
dec
xor
movsw
mov
lret
nop
rcrl
imul
stos
adc
or
sbb
dec
stc
mov
fdivrl
js
pop
clc
jl
roll
pop
nop
rcrl
outsb
ljmp
enter
rcr
nop
sbb
imul
pop
fsubl
inc
cwtl
jne
ljmp
push
jae
addr16
push
mov
or
test
inc
dec
pop
xchg
xchg
repnz
lock
push
mov
negl
jno,pt
mov
scas
mov
push
into
fstl
cmp
nop
push
push
mov
or
outsl
insb
push
dec
mul
mov
rorl
in
lcall
fisubs
adc
rorl
rolb
fsub
sub
xchg
enter
les
nop
jo
xchg
adc
adc
nop
aad
add
pusha
enter
or
lds
clc
or
data16
xor
loopne
push
pop
nop
jae
mov
and
pop
sbbl
add
mov
movsb
mov
nop
out
add
adc
subl
push
enter
nop
out
xchg
outsl
int
js
sbb
add
sbb
lock
or
or
xor
xchg
nop
push
add
or
sub
nop
xchg
add
adc
ror
in
or
aad
and
inc
xchg
mov
push
xchg
lret
lahf
inc
lods
push
inc
adc
pop
out
dec
cwtl
nop
mov
mov
aaa
nop
orl
cmc
nop
mov
xor
add
push
or
mov
je
jecxz
aaa
mov
hlt
das
nop
scas
jp
sub
fidivrs
adc
mov
ss
repnz
cmp
dec
rorb
lahf
les
xchg
sahf
scas
adc
xchg
nop
push
dec
stos
adc
js
nop
cmpsb
das
mov
ja
mov
xchg
or
pop
push
pop
pop
ret
nop
jl
out
dec
mov
mov
mov
gs
out
adc
enter
adcb
inc
dec
mov
mov
or
sbb
inc
adc
test
ja
jl
ljmp
push
dec
filds
sbb
jo
mov
fmuls
nop
xor
jno,pn
pop
in
xchg
nop
or
push
pop
pop
add
lock
test
inc
ret
in
cmp
out
daa
cltd
nop
lods
dec
lret
mov
mov
test
addr16
shl
stc
out
adc
outsb
int
mov
clc
fdivp
push
mov
xor
mov
nop
add
popf
inc
jae
push
sbb
lods
lock
cmp
mov
push
nop
mov
jo
lret
movsb
out
addr16
mov
ret
jbe
cmp
pop
rclb
adc
fmull
fcoml
push
sub
xchg
dec
imul
cmpsb
lock
mov
repz
sbb
lods
inc
jnp
xor
les
std
in
nop
mov
xchg
xchg
jnp
or
xchg
cmp
mov
inc
mov
ss
out
test
sbb
nop
xchg
push
mov
adc
or
adc
stos
ds
nop
or
out
je
loope
or
mov
pop
or
adcb
jl
cli
nop
cwtl
inc
or
sub
adc
das
nop
mov
jnp
repz
xchg
stos
jne
cli
xor
sub
daa
nop
mov
or
pop
pop
nop
aam
inc
bts
sti
push
std
push
mov
mov
pop
lods
dec
lret
aaa
jle
loop
lds
dec
push
int
or
nop
ja
mov
jne
sub
stos
jge
jg
mov
add
mov
mov
rorb
iret
nop
sahf
dec
inc
test
nop
stc
into
addl
bound
insl
out
pop
mov
in
nop
cmovle
xchg
adc
mov
fisubrs
sti
pop
push
lgs
test
es
mov
aas
nop
add
dec
icebp
nop
testl
mov
add
or
popf
xchg
clc
jle
nop
int3
jns
push
test
mov
nop
out
lods
pop
std
xchg
or
ret
nop
jo
sub
nop
aaa
cmc
aad
bound
mov
cmpsb
pop
and
xchg
mov
xor
lods
rclb
test
nop
imul
mov
nop
push
lahf
adc
ds
mov
adcl
cmpsl
out
out
add
xchg
sub
ficoms
pushf
enter
call
nop
outsl
push
push
lret
or
mov
sub
or
push
jbe
sub
out
out
jge
dec
ds
push
and
lret
mov
nop
mov
push
cmp
out
pop
mov
imul
repz
subl
shrb
xlat
pop
loop
enter
pushf
push
jbe
or
cmp
nop
jmp
ljmp
nop
pop
dec
sub
hlt
or
sbb
out
sub
add
xor
adc
loopne
push
dec
sbb
aad
jbe
mov
clc
lods
mov
cmp
and
nop
mov
jbe
or
lods
ds
nop
pop
outsb
push
pcmpeqb
inc
fwait
dec
nop
rcll
lcall
lock
lds
fisubl
hlt
mov
shlb
inc
fisubs
pushf
loopne
mov
and
push
out
cmp
add
and
push
dec
xchg
or
jb
inc
mov
pop
push
sub
jmp
adcl
pop
aaa
pop
mov
jo
dec
xor
push
mov
ror
mov
pop
mov
adc
ja
or
xor
orb
popf
dec
push
rclb
adc
inc
fcomps
sbb
inc
outsb
lret
push
cmpsl
xchg
mov
lret
mov
jae
movb
clc
mov
cmpsb
outsl
int3
xlat
pop
lea
dec
mov
popl
push
ss
mov
fsubl
push
stos
pop
arpl
rcrb
push
adc
add
in
jle
dec
leave
pop
lcall
xor
jne
cltd
clc
dec
dec
push
jnp
lock
fistpl
decl
push
rclb
sub
or
inc
out
outsl
insl
add
nop
xor
mov
mov
sbb
imul
shrl
inc
or
nop
adc
dec
mov
jl
fcmovnu
call
rcrb
js
movsb
push
jl
push
push
cmp
adc
mov
cli
nop
mov
cmp
cmpsb
cmp
pop
xchg
cmp
mov
inc
push
adc
mov
dec
pusha
lods
xor
push
enter
add
and
inc
pop
sub
sub
sub
dec
nop
xchg
ds
nop
std
pop
xchg
sahf
test
xchg
jno
add
and
stc
mov
dec
cmp
push
push
cmp
daa
in
cli
nop
fimuls
and
movsl
loop
jae
jmp
popa
cmp
mov
test
addb
fbstp
xchg
xor
lods
scas
sbb
addr16
dec
je
mov
neg
scas
lret
mov
xor
xchg
cmpsl
jl
aaa
and
mov
aas
push
in
jb
das
push
hlt
xor
rcr
out
dec
test
and
gs
mov
nop
add
adc
out
push
rolb
dec
or
jne
nop
push
mov
nop
jmp
test
ja
mov
nop
and
ss
add
xor
cmp
mov
imul
testl
jp
xor
or
movsl
jbe
push
cmpsl
mov
push
nop
dec
outsl
je
push
popa
movsb
xor
xor
sbb
dec
adc
adc
divb
psubusb
sbbb
out
mov
into
or
popa
mov
stc
push
add
and
nop
cld
call
mov
jne
test
stc
nop
cmp
ljmp
adc
jecxz
scas
nop
dec
mov
xor
ja
inc
inc
outsl
push
push
sub
arpl
jne
rcrb
or
pop
aaa
call
movsl
jb
js
push
loope
jbe
add
insl
mov
cvtdq2ps
imul
enter
push
int3
pushf
nop
rorb
inc
mov
adc
in
mov
nop
lock
add
shll
xchg
adc
adc
pop
rorb
in
nop
xchg
xor
dec
sub
int
mov
pop
push
inc
mov
loop
sbb
nop
xor
xchg
cltd
jo
jmp
test
pop
jle
test
nop
jecxz
push
or
lret
pop
inc
or
mov
cmp
js
dec
xlat
and
ret
nop
fwait
ret
lea
inc
fsts
nop
inc
xchg
lock
xchg
int
push
xlat
in
mov
out
ds
pop
scas
add
or
fsts
push
dec
aaa
pushf
icebp
nop
pop
subl
jmp
lcall
inc
mov
jae
enter
jae
sbb
nop
xchg
scas
jmp
mov
or
mov
in
popf
add
mov
shl
xorb
jbe
fwait
xchg
add
xchg
lret
cmpsl
lahf
nop
inc
cwtd
aam
mov
or
adc
icebp
nop
mov
inc
pop
pop
mov
nop
and
movsb
xchg
into
mov
lcall
lahf
mov
out
or
lcall
push
aas
lods
addl
mov
adc
or
cmp
enter
js
leave
push
cld
mov
dec
mov
pop
mov
sub
xchg
sar
inc
adc
addl
fadds
xlat
nop
mov
jnp
mov
pop
jbe
cli
mov
cmpsb
nop
test
jp
or
stos
jnp
icebp
rclb
shrl
jg
aam
mov
sti
repnz
into
cld
jg
imul
arpl
negl
pop
or
sbb
shll
les
call
add
es
mov
cmp
lcall
adc
aad
sub
test
hlt
rcrb
mov
dec
mov
pop
adc
or
jo
xchg
and
aas
adc
pop
mov
push
arpl
push
out
fsub
mov
popa
push
xor
xor
int3
mov
mov
aam
fs
cmpsb
les
dec
aaa
nop
stos
inc
xorl
scas
and
repnz
add
jge
or
mov
adc
adc
arpl
rcrb
pusha
lahf
xchg
or
scas
lock
push
shlb
nop
pop
enter
shlb
xchg
cs
dec
nop
pop
aaa
xchg
sahf
enter
mov
jp
jecxz
push
sti
sub
adc
cwtl
in
ljmp
push
mov
inc
pop
mov
adc
mov
std
shl
xchg
imul
or
repz
js
inc
je
movsl
pavgw
or
push
addr16
push
sahf
nop
cli
popa
fdivs
lahf
mov
xor
fcmovne
mov
nop
lcall
insl
jg
je
nop
mov
and
daa
or
pop
jbe
cli
enter
xchg
nop
and
je
adc
daa
pop
imul
scas
and
push
in
hlt
pop
nop
dec
cltd
std
imulb
jg
inc
mov
xchg
out
pop
pop
mov
push
shl
adc
nop
iret
in
test
adcb
push
es
loopne
adcl
nop
stos
mov
mov
and
test
push
xchg
mov
dec
mov
mov
outsb
loop
xlat
decl
push
pop
push
inc
shl
inc
lock
imul
pop
in
lret
cmp
jle
test
popf
sub
adcb
loop
push
or
jno
jo
loopne
aaa
jg
nop
shrb
jge
lret
dec
nop
add
and
nop
sub
xchg
xlat
nop
loopne
icebp
out
pop
add
adc
mov
adc
inc
nop
ja
xchg
mov
adc
adc
in
aam
mov
lds
nop
out
sarl
pop
pop
pop
popa
adc
inc
dec
add
xor
sub
or
xor
call
lahf
jmp
enter
adc
in
lods
insl
ds
push
add
ficompl
cmp
sbb
mov
mov
outsl
aam
subb
rolb
or
out
mov
pusha
stos
lahf
fcompl
aam
cs
sub
cltd
push
adc
dec
mulb
popf
pusha
lods
add
xlat
fs
cmp
cltd
nop
loopne
xor
mov
nop
jns
push
es
or
fsts
mov
cltd
and
lods
mov
and
or
hlt
xchg
imul
loopne
and
nop
pop
sub
cmp
xor
call
add
pinsrw
lahf
clc
aad
xor
idiv
pop
into
xchg
jl
xor
mov
adc
cwtl
mov
mov
repnz
sbb
fwait
push
nop
int3
enter
cmp
nop
sub
xor
stos
xor
jne
nop
ret
mov
lock
movsl
in
ss
scas
mov
add
add
test
cmpsl
nop
and
dec
xlat
mov
or
in
sub
in
jb
mov
outsl
push
inc
cmpsb
jno
cmp
nop
mov
frndint
lds
sub
sbb
and
inc
cmp
das
test
rcrl
rclb
loopne
cmpsl
popf
fdivrs
push
push
or
push
jo
lods
inc
mov
jae
adc
mov
aas
inc
pop
nop
fs
push
nop
inc
sub
es
nop
imul
mov
dec
daa
jmp
clc
adc
nop
int3
cmp
outsl
mov
pop
add
push
add
xor
lock
test
icebp
rorl
mov
ds
dec
in
mov
dec
push
lret
insb
arpl
fsubr
add
xchg
xchg
add
in
pop
int
jg
adc
sub
lock
adc
nop
jp
add
imul
fisttps
nop
dec
mov
popa
jl
xchg
and
pop
mov
push
pop
push
pop
mov
and
or
sarb
or
or
sbb
or
imul
sub
pop
gs
mov
mov
xor
ds
insl
cmp
pop
stos
xchg
rcrb
nop
clc
stos
insl
dec
or
push
nop
pop
lcall
nop
xor
movsl
popf
pop
nop
jo
inc
mov
xorl
rclb
xor
cli
nop
xchg
mov
lock
inc
jnp
pop
jo
decl
or
jne
xor
push
dec
nop
icebp
clc
xchg
std
mov
cwtl
loope
dec
adc
push
mov
test
jp
test
pop
js
dec
test
imul
cmp
pop
adc
mov
pop
popa
ror
ficoml
dec
and
lods
pop
inc
orl
ja
lea
nop
xor
xchg
jle
jbe
mov
or
ljmp
mov
mov
lds
in
lea
mov
movsb
dec
sar
call
adc
push
pop
imul
cmpsl
cmp
sbb
shlb
mov
mov
mov
inc
pop
in
xchg
or
pop
mov
scas
sbb
xchg
fsubl
mov
sub
sbb
out
nop
adc
arpl
inc
or
push
mov
insb
nop
std
ja
iret
xchg
aad
adc
lods
xlat
inc
rorb
push
pop
pushf
nop
mov
pop
xor
clc
in
or
mov
loop
nop
sarl
popa
sti
adcl
cmc
in
pop
gs
xor
call
nop
mov
inc
or
sti
aad
jmp
nop
stos
xor
arpl
das
sbb
or
mov
ret
in
scas
cltd
test
pop
rcrl
push
test
mov
or
cmp
loopne
pop
pop
and
shl
cmp
jg
scas
nop
push
leave
mov
test
lcall
nop
xchg
adc
push
jbe
sbb
mov
movsb
fcomps
hlt
xor
js
repnz
rclb
js
mov
push
fcomi
sub
mov
jae
mov
fxch
mov
pop
lock
xchg
pop
cmpsb
mov
mov
cs
and
jmp
add
xchg
out
in
rcl
in
xor
cmpsl
fdiv
push
fs
ljmp
fistps
insl
ja
mov
les
out
ret
jo
adc
dec
jb
jno
adc
adc
dec
lret
fisttpll
inc
mov
push
fsubs
jno
scas
mov
loop
push
loope
mov
add
hlt
aad
or
roll
rol
pop
xchg
movsl
mov
icebp
nop
iret
jg
lds
push
push
and
loopne
add
inc
inc
pop
lea
xchg
push
jmp
nop
and
cmp
adcb
sbb
outsl
orl
nop
xchg
add
and
push
clc
sub
dec
push
push
cmc
push
or
iret
insl
sbbb
xchg
sbb
push
stc
in
cmovg
fcmovnbe
fs
insl
in
imul
pushf
xchg
test
add
dec
enter
mov
pop
push
pop
nop
jmp
jae,pn
sbbl
nop
xlat
push
or
xchg
test
or
repnz
mov
shll
pop
enter
xchg
cmp
rclw
enter
gs
push
loop
sub
test
xchg
jo
dec
mov
stos
inc
xchg
sbb
adc
in
mov
out
nop
sbb
sbb
test
push
inc
pop
push
test
and
out
aaa
adc
in
stc
test
inc
ret
nop
push
ror
jle
sub
jp
mov
xchg
nop
lock
sbb
add
xchg
fldcw
add
sbb
sbb
fistpl
mov
sbb
das
lea
push
rcr
icebp
sbb
add
es
sahf
ja
fildll
in
or
repnz
sti
nop
les
subl
imul
pop
jecxz
fdivl
push
popf
jbe
repnz
lods
test
ficoml
es
adc
cwtl
mov
fadds
mov
jae
stos
xchg
cld
sub
cmp
push
sbb
mov
mov
cmp
sbb
imul
nop
and
adcl
nop
test
popl
pop
inc
nop
push
out
mov
fnstcw
pop
cmc
repnz
insb
lods
out
nop
sbb
pop
fimuls
pop
lret
push
inc
xor
daa
mov
rclb
mov
ret
add
sbb
nop
adc
push
seto
dec
xor
lock
mov
fisttpl
or
stos
push
xlat
arpl
loopne
hlt
ds
xchg
nop
push
and
push
jb
nop
addr16
mov
adcl
nop
cmp
jmp
nop
mov
sub
xorl
hlt
loop
repz
sub
cmpsb
lahf
mov
xchg
adc
js
mov
loop
mov
adc
movsl
hlt
cmpsl
pop
clc
cmc
fsubrl
test
pop
add
xchg
rcl
mov
test
popa
xchg
nop
push
cli
sbb
icebp
xchg
dec
xchg
fmul
push
ds
aam
cmp
nop
and
add
rol
jne
imul
mov
xchg
out
mov
or
push
inc
inc
out
add
adc
sbb
or
jnp
or
xor
xchg
xor
shl
in
mov
rcrl
xchg
and
pop
mov
pop
jne
xor
xchg
stos
sub
cli
xchg
mov
lock
mov
push
sub
aam
xor
push
mov
call
fdivs
jge
nop
addb
nop
std
loop
adc
and
ss
xor
rdpmc
jb
repnz
push
add
mov
mov
fimuls
xchg
and
iret
stc
inc
mov
mov
cwtl
cld
jle
push
das
jns
push
stc
sahf
pop
fsubrs
adc
nop
mov
insb
fistpll
pop
leave
sub
xor
xchg
daa
mov
cltd
mov
xchg
push
xchg
cmp
jle
shrb
lock
loopne
icebp
xor
test
loopne
dec
out
jno
mov
bound
cwtl
dec
orb
dec
and
sub
jne
or
and
fs
movsb
jnp
jb
pop
mov
xor
insb
test
rcll
or
lret
inc
nop
jecxz
in
mov
addr16
nop
lock
mov
lcall
pop
jp
test
inc
add
clc
xchg
test
dec
es
imull
dec
pop
call
adc
divb
dec
and
sarb
ja
nop
jge
or
dec
nop
xorps
push
cmp
jo
call
mov
nop
dec
xchg
mov
jnp
mov
inc
and
scas
sub
adc
mov
fdivrl
pop
add
lods
nop
mov
cmpsb
push
nop
push
es
dec
insb
movsb
sbb
ds
and
or
data16
mov
nop
int
xchg
sub
loop
test
sbb
sbb
xchg
call
cmp
and
xchg
xlat
jae
adc
leave
dec
lret
mov
cmpsl
test
sub
adc
adc
shlb
cmpsb
inc
lret
call
nop
fstpl
testl
and
mov
sahf
push
cmp
pusha
frstor
xor
nop
sbb
aas
nop
mov
push
inc
xchg
mov
movsb
int3
test
mov
hlt
out
push
mov
and
inc
lock
int
sbb
nop
xorb
inc
jg
fadds
nop
or
xchg
sahf
nop
fldt
xchg
mov
out
rorb
mov
nop
jns
movsl
data16
fdivr
lock
adc
jmp
cs
sbb
xchg
out
ss
sub
test
jg
sub
int3
rorb
adcl
insb
cmp
jb
fisubrl
inc
sbb
sbb
mov
mov
data16
cltd
fidivl
jo
rolb
sub
mov
aaa
imul
and
pushf
mov
nop
pop
and
jb
xchg
xchg
into
nop
jns
cmp
scas
in
sbb
pop
push
inc
ret
nop
cmpsb
adc
rcrb
lods
repz
cmp
out
adcb
faddl
adc
cwtl
int3
bound
nop
lods
mov
sbb
or
aad
andb
and
add
lock
jnp
xor
add
mov
xor
pop
xchg
inc
inc
insb
xor
lock
mov
jae
repnz
or
xor
nop
int
xchg
in
ret
mov
dec
push
rcll
dec
push
xchg
ret
jns
fcom
nop
mov
mov
adc
and
shll
dec
mov
adc
inc
nop
mov
cmp
and
popf
out
nop
psubq
test
mov
mov
xchg
test
cld
inc
jle
pop
sbb
push
cs
nop
test
fucomip
nop
dec
mov
mov
cmp
pop
rcrl
mov
out
cltd
nop
std
push
push
push
das
xchg
sbb
nop
push
xor
sbb
test
mov
cmp
xor
jno
mov
rolb
inc
rolb
xor
push
cmpsb
xchg
rcrb
push
ljmp
aad
test
and
mov
adc
repnz
jne
adc
cmc
mov
pop
sub
movsl
aas
bound
inc
add
adc
mov
movsl
sbb
mov
fs
lds
or
mull
sahf
xchg
push
cmpsl
test
in
fwait
nop
jp
sub
mov
loope
sbb
and
ja
movsl
into
std
out
lea
repz
mov
adc
adc
or
or
addb
jmp
inc
sub
fwait
cmp
and
sub
pop
lock
or
lock
into
lods
in
aaa
in
mov
loop
rcl
xor
or
gs
jbe
jae
add
repz
cmpsl
xchg
shll
or
out
enter
pop
adcl
je
sub
push
rorb
mov
mov
jmp
popf
lods
sub
adc
jl
mov
shlb
test
xchg
dec
ja
divb
repnz
inc
nop
inc
jmp
mov
popl
mov
cs
mov
jge
and
stos
cmpsl
sbb
std
fs
mov
jae
lahf
fisubrl
pop
xor
jbe
fimull
fnstsw
xchg
adc
inc
popf
enter
test
out
fisttpll
les
daa
xchg
push
nop
imul
call
push
mov
aam
cmp
nop
pop
scas
cwtl
sub
nop
jne
or
hlt
add
je
scas
xor
xchg
out
es
push
movsl
loopne
jo
nop
dec
xor
lret
inc
nop
sbb
daa
mov
pop
nop
mov
mov
repnz
les
nop
lods
scas
icebp
ljmp
jle
aam
push
in
clc
cwtl
sbb
ljmp
repz
rclb
mov
arpl
nop
loopne
mov
sti
nop
fbstp
inc
aaa
sbb
or
add
jl
pop
js
push
xchg
enter
stos
aaa
adc
inc
sub
jno
mov
push
nop
jecxz
data16
out
cmp
xchg
sbb
lock
cmc
pop
jg
mov
xchg
xchg
xor
and
les
or
adc
push
repz
cmpsl
cmp
push
in
sub
test
jne
pusha
pushf
loop
rcrl
ja
nop
xchg
or
stos
push
insb
xchg
push
aaa
jne
or
lret
push
cld
and
push
or
or
cli
pusha
call
mov
xchg
sarb
lods
pushf
icebp
nop
xor
sub
inc
push
sbb
and
dec
movb
shlb
xchg
nop
push
adc
sbb
cli
jb
ljmp
xchg
jmp
pusha
in
dec
aaa
mov
dec
xchg
int3
pop
pop
repnz
js
jge
push
lods
mov
pop
xor
xor
adc
in
call
dec
fadds
imul
xchg
pavgb
pusha
sub
jp
push
stos
enter
sub
nop
pop
pop
dec
jbe
pop
mov
mov
das
test
clc
or
fisubl
fistpll
test
negb
inc
sub
or
mov
shll
push
mov
aam
sub
sub
testl
fwait
adc
or
lock
adc
jge
callw
addb
dec
pop
mov
ds
in
lcall
dec
mov
add
cmp
xchg
test
xor
nop
pop
popf
cwtl
sarl
shrl
js
dec
mov
pop
jmp
rorb
int3
stos
loope
pop
lock
and
and
cltd
pushf
dec
insl
fstps
dec
cwtl
in
mov
loopne
lods
stos
test
xchg
adc
movl
loopne
jecxz
nop
call
and
pop
push
test
mov
nop
test
fstpl
enter
orb
mov
adc
nop
hlt
divb
popa
mov
rcr
in
jmp
xchg
std
and
int
clc
nop
mov
push
gs
nop
cwtl
xchg
jge
or
pushaw
jbe
ja
and
dec
adc
pop
sub
nop
xlat
xchg
fcom
xchg
push
bnd
test
mov
out
cld
xchg
mov
je
nop
dec
or
sbb
xchg
cmc
outsb
push
xor
fbld
mov
xlat
rcrb
loope
xchg
icebp
nop
scas
and
fwait
push
add
mov
mov
or
dec
add
jl
nop
mov
push
mov
xor
sbb
aas
push
mov
pop
adc
dec
dec
dec
fldt
mov
push
add
pusha
jecxz
call
fmuls
rorl
inc
mov
mov
cltd
adc
not
jno
lea
cmp
jns
adc
movsl
mov
out
aam
rclb
imul
jp
lea
cltd
in
xor
nop
aaa
sti
imul
scas
movsb
sbbl
bound
and
fiaddl
insl
iret
mov
es
nop
jns
pop
std
adc
jb
mov
mov
lcall
mov
scas
jg
cltd
push
nop
inc
xchg
add
adc
mov
cmpsb
or
sbb
test
sub
mov
test
dec
cmp
mov
pop
fstpt
out
sub
and
dec
mov
mov
sbb
lock
adc
nop
xchg
stos
and
pop
pop
nop
or
imul
out
jg
repz
lret
in
inc
popa
mov
push
std
jle
jmp
test
add
ret
in
out
fists
lahf
fs
push
mov
cmovge
out
cmpsb
test
xchg
inc
adc
fsubrs
mov
outsb
aaa
push
nop
inc
sub
or
or
jg
jns
cmp
mov
daa
inc
aas
xchg
jo
push
sbb
int3
pop
push
lret
cli
mov
shrl
mov
movsl
loopne
flds
daa
xor
je
sbb
or
call
and
fldz
xor
inc
test
nop
push
leave
adc
xchg
movsb
aaa
xchg
imul
rcrb
imull
nop
shr
mov
nop
fdivs
or
xor
jno
sar
nop
imul
ret
test
movsl
enter
in
xor
pop
and
dec
pop
iret
outsb
out
adc
cmp
nop
or
icebp
pop
sbb
cli
mov
xchg
cld
jle
add
js
jmp
bound
push
insl
loop
adc
ss
in
and
dec
ret
cmp
mov
cwtl
movsb
mov
ror
and
std
push
pop
jmp
mov
and
lods
xchg
test
pop
lock
nop
cmp
cs
in
sub
iret
dec
cli
cmp
and
push
mull
enter
or
addr16
cs
adc
decb
loopne,pt
adc
pop
mov
loop
lcall
aaa
lods
jp
nop
lds
dec
aad
data16
popa
mov
xchg
sub
nop
and
mov
sbb
fs
push
xchg
xchg
mov
stos
jmp
int
fdivl
cmp
rcrb
repnz
fldt
nop
pop
mov
dec
dec
rcll
pushf
push
pop
fisubs
testb
pop
lret
aaa
jnp
nop
mov
popf
mov
ja
nop
notb
test
push
cmpsb
dec
or
das
dec
insb
aaa
nop
rep
pop
xchg
push
xchg
xorb
iret
adc
je
fcomps
push
sub
xchg
add
push
out
shlb
lods
nop
repz
sub
test
aas
inc
push
mov
in
xor
adc
subl
cmp
xlat
nop
jg
adc
cmovae
adc
cmpsl
add
testl
gs
jo
inc
ficomps
cwtl
pop
jnp
jecxz
shlb
clc
adc
fcoml
movsl
repnz
mov
outsb
push
pop
in
rolb
mov
sahf
nop
mov
cwtl
int
lea
roll
js
mov
cmp
test
mov
cmp
and
sbb
ret
lods
push
pop
nop
dec
outsb
pop
sbb
pusha
ljmp
push
cmp
mov
bound
insl
sub
loopne
nop
mov
mov
mov
mov
nop
daa
push
xor
add
nop
xchg
add
push
xor
dec
push
xchg
sahf
jmp
pop
insl
adc
or
stc
mov
cmp
gs
leave
cld
add
pop
pop
rcl
inc
movsb
xor
in
lret
fsubrl
push
push
dec
shlb
push
nop
inc
sarb
sbb
dec
dec
out
cmc
jl
les
mov
clc
xor
ja
scas
nop
sbb
mov
aaa
stos
rol
ret
sub
jle
nop
daa
cmp
xchg
sbb
and
sub
inc
enter
test
int3
mov
adc
inc
rclb
sub
pushf
dec
loopne
shlb
xor
insw
nop
inc
xchg
fcoml
pop
jp
into
nop
mov
jo
nop
sub
or
or
nop
lds
push
dec
push
dec
xchg
and
dec
or
inc
add
push
nop
aas
push
mov
cmpsb
jmp
mov
inc
inc
movsb
dec
or
fcoml
xor
int
nop
jnp
lods
out
adc
ret
clc
nop
mov
pushf
push
mov
dec
sarb
subb
dec
test
push
xchg
or
add
subl
lret
loope
push
scas
nop
popf
add
cld
or
rorb
sbb
or
lea
sbb
cmp
aam
adc
dec
dec
push
cwtl
mov
adc
mov
and
mov
scas
or
jecxz
xlat
sahf
nop
aas
leave
jmp
lret
mov
or
nop
mov
test
pop
nop
pop
lock
dec
stos
mov
fisttpl
fs
mov
les
inc
loopne
jge
mov
push
jo
nop
iret
mov
lret
jl
adcb
outsb
adcb
es
sub
dec
fsubr
aam
nop
or
fisubrl
inc
arpl
adc
lock
sbb
rcrl
int
popa
outsb
stos
mov
adc
hlt
enter
xchg
call
push
js
insb
push
push
cmp
cltd
xchg
mov
ljmp
loop
cmpsl
nop
cld
mov
xorl
sub
cmpxchg
ret
dec
push
lret
subl
pop
vzeroupper
or
xchg
out
test
push
mov
lods
xchg
mov
cmc
data16
cwtl
xchg
pop
xor
push
xor
jmp
data16
adc
add
push
mov
cmp
ret
pusha
sub
nop
mov
xchg
sahf
and
mov
movsl
into
lock
insl
int
pop
inc
aaa
mov
adc
pop
push
xor
pusha
popf
nop
mov
cwtl
xchg
jecxz
jbe
iret
mov
add
push
mov
aam
push
popl
xchg
lea
out
loopne
mov
and
mov
lret
enter
cmp
xchg
or
cmpsl
insb
mov
mov
adc
or
lods
fisttps
inc
pop
lret
gs
xchg
nop
or
cmc
nop
xor
cmp
and
int3
xchg
fidivrs
repz
in
in
ljmp
nop
out
and
sub
jecxz
xchg
cwtl
adc
stc
out
mov
cmp
loope
pop
addr16
lcall
adc
or
into
mov
jmp
sub
mov
or
jno
inc
jo
nop
pop
jnp
or
add
sahf
out
or
cmp
nop
xchg
stc
fldenv
nop
inc
or
sbb
or
rcll
out
jo
mov
aad
cmp
stc
aas
aaa
inc
sahf
nop
xchg
cs
adc
orb
add
scas
dec
mov
add
out
pushl
pop
inc
mov
popf
xor
and
in
nop
es
jo
add
loope
lods
adc
nop
xor
cld
fsts
in
movb
push
push
mov
outsb
bound
std
sub
sahf
sub
cmpsl
adcl
inc
clc
int
test
push
adc
xor
add
cwtl
dec
nop
sbbl
mov
mov
push
nop
xchg
pop
mov
int3
icebp
inc
loope
dec
sbb
lods
sbb
ljmp
adc
add
cmp
dec
std
mov
fmuls
aam
ja
xor
sbb
fsts
jne
xor
adc
pop
add
push
int3
sub
int3
xor
jl
cmpsb
iret
nop
inc
add
leave
pop
sbb
ficoms
dec
inc
cmpsb
fdiv
mov
sbb
addb
pushf
mov
rcl
jl
gs
popa
inc
push
mov
xchg
mov
pop
and
repz
not
stos
push
or
mov
cmc
mov
or
mov
mov
in
sub
add
fisttps
lock
mov
fadds
sub
push
or
leave
nop
mov
outsl
insl
xor
or
fstpl
fdivl
pop
nop
lods
pop
sti
int3
mov
jae
nop
and
jg
call
push
dec
nop
dec
ss
inc
push
loop
fdivr
repnz
jbe
sbb
test
lret
nop
das
sahf
iret
lock
dec
xchg
xlat
fucompp
cmp
sbb
lods
cmp
mov
mov
adc
ja
into
nop
mov
fwait
xchg
dec
push
fistl
ret
icebp
or
adc
and
inc
int3
sbb
bound
lock
ss
or
nop
out
stos
jnp
mov
clc
jmp
clc
push
xchg
pop
cmc
nop
and
cmpsb
mov
shlb
nop
imul
xor
call
jmp
insb
addr16
push
cs
test
stc
aaa
mov
rcrb
and
stos
repz
push
sti
and
dec
pop
push
pop
xor
scas
rcl
fldl
nop
es
mov
pop
aaa
sbb
mov
popf
scas
decb
or
nop
xor
je
dec
fcoml
push
movsl
incl
call
xchg
jo
inc
pop
xchg
stc
ja
xchg
test
cld
mov
sbb
fidivs
xchg
jl
nop
dec
jno
mov
in
sti
and
test
mov
xchg
nop
mov
shr
lret
add
or
inc
in
lahf
pop
push
loopne
dec
shrl
adc
jno,pt
nop
jae
push
cmp
fistl
mov
pop
out
jg
ss
loopne
cmp
or
add
clc
mov
push
sub
mov
cs
out
pop
inc
or
xchg
std
cmovnp
nop
inc
sti
mov
adc
cli
inc
mov
push
mov
and
shlb
fsubrl
hlt
push
les
cmp
push
gs
nop
repz
sbb
adcl
nop
rorb
add
fimuls
rcll
and
dec
sub
adc
jno
pop
repnz
outsb
out
push
mov
repz
sti
push
cltd
sarb
mov
stc
sub
push
loopne
rclb
jl
cwtl
outsl
or
xor
push
jnp
nop
lds
adc
in
ret
push
nop
imul
and
jne
dec
and
ret
dec
jae
xchg
ljmp
in
push
or
call
mov
nop
clc
and
xchg
push
inc
nop
stos
cmp
push
lea
mov
je
sbb
dec
pop
rorb
repz
cmp
xchg
adc
nop
sbb
add
push
jne
imul
addps
adc
adc
cmp
cltd
sti
shlb
inc
stos
rcll
in
cmp
in
fucomi
dec
sbb
das
jbe
addr16
lret
push
out
xorl
mov
stc
lea
pop
add
push
lods
scas
mov
enter
movsl
loopne
sub
nop
pop
scas
xor
inc
push
lahf
xchg
test
decb
push
and
adc
rcl
or
test
imul
cmp
nop
sbb
fwait
or
push
xlat
pop
loopne
or
xchg
ret
cmp
nop
jmp
lock
faddl
popa
adc
les
stc
call
loope
rclb
filds
mov
xchg
dec
test
mov
aad
mov
mov
xchg
pop
xor
hlt
jns
cltd
into
jmp
xor
fchs
dec
nop
fidivl
push
addr16
mov
cwtl
jae
stos
lahf
loop
mov
jle
out
clc
xchg
dec
inc
jle
scas
popa
loopne
cmp
pop
adc
div
std
cld
nop
leave
call
xchg
into
nop
mov
jb
mov
insl
mov
push
sti
mov
push
out
dec
fstp
add
nop
dec
push
shlb
stos
mov
xchg
lea
mov
push
nop
insl
jg
sub
nop
sub
pop
push
mov
mov
shlb
ds
pop
sbb
enter
xor
das
xor
jno
cmpsl
xor
cmp
jnp
sbb
cltd
mov
jmp
inc
mov
nop
adcl
or
es
and
stos
push
mov
je
push
adc
cs
mov
cs
nop
xor
inc
push
inc
outsb
push
orl
push
orl
into
inc
sub
mov
xor
cmp
aam
ret
nop
mov
hlt
icebp
jbe
dec
push
gs
lcall
sbb
or
aaa
dec
sti
aam
mov
and
fs
jae
lock
popa
nop
and
pop
sbb
idivb
xor
adc
dec
adc
das
or
sub
mov
cld
xor
rcll
addr16
sub
pop
mov
xchg
nop
int3
lahf
lock
adc
in
push
es
not
add
nop
pop
mov
lods
fwait
nop
int
popf
xchg
lods
insb
jl
nop
inc
xor
xlat
das
nop
xor
mulb
cmpsb
mov
mov
and
push
cmp
add
nop
ss
lods
cmp
test
iret
daa
jo
repz
adc
clc
jno
sub
and
nop
inc
ja
sbb
stos
mov
in
cld
out
jb
mov
call
lea
pushf
movsl
mov
les
nop
cltd
mov
dec
sbb
push
push
xorl
mov
adc
cmp
cmp
fcoms
lcall
test
mov
sti
scas
paddw
inc
jg
mov
aas
and
push
pop
xor
or
sbb
ret
cmp
fldt
aad
sub
std
in
inc
adc
fcompl
sub
in
jg
adc
aam
das
inc
leave
loope
sbb
xchg
int
xchg
dec
nop
les
or
inc
shlb
fcomi
fsubrs
push
nop
not
and
or
andb
addr16
mov
xlat
mov
rcrb
push
mov
sbb
mov
nop
pop
popa
dec
lods
jno
or
push
mov
lods
mov
orl
sbb
fldl2t
sub
nop
lods
inc
adc
adc
cmp
xor
nop
and
adc
cmp
rorl
loopne
pop
nop
notl
pop
cmp
nop
mov
std
or
push
gs
sbb
mov
aaa
ret
imul
mov
jmp
aad
incb
sub
imul
jne
jmp
neg
push
lret
jl
sbb
push
je
cmp
and
pop
mov
mov
js
pusha
pop
mov
dec
cmp
aam
nop
add
movsb
out
inc
mov
xlat
sbbb
lret
je
adc
push
mov
loope
cld
xchg
add
subl
lods
popa
int3
jg
mov
icebp
test
fnstsw
mov
jmp
xchg
outsb
xor
and
aas
add
mov
nop
adc
xchg
subb
mov
cmp
adc
loope
dec
mov
das
aaa
xchg
dec
ja
mov
int
clc
fistl
ret
dec
nop
movsl
and
and
dec
cltd
cld
nop
ja
add
lods
int
nop
sub
andb
add
int
orl
mov
jb
adc
cmp
mov
rol
mov
je
inc
mov
adc
nop
cmp
jb
lret
fnstsw
loopne
jo
nop
shrb
pop
add
cltd
push
xor
push
in
add
pop
jp
dec
xchg
dec
pushf
nop
jae
loope
sbb
nop
into
movsb
jecxz
test
lcall
cmp
imul
pop
adc
mov
mov
test
jno
push
sahf
mov
xor
cmp
popf
nop
or
adc
sbb
sbb
scas
in
aad
nop
mov
dec
cmp
testb
cmp
nop
unpckhps
les
nop
andb
mov
sbb
movsl
nop
js
jl
mov
nop
adc
andl
subb
inc
push
sar
dec
xchg
or
ficompl
xor
notl
lret
push
adc
xchg
mov
pop
or
aas
and
into
and
jns
stc
int3
call
bound
cli
rol
nop
cmp
daa
lods
or
lret
sub
cmp
popa
les
mov
mov
cli
rcrb
mov
mov
jp
jne
push
daa
ljmp
mov
push
test
add
mov
mov
push
dec
xchg
xor
mov
nop
xchg
dec
mov
and
dec
divl
mov
data16
mov
sub
movsl
cmp
jo
loop
pusha
cmp
xchg
test
push
inc
mov
mov
or
cli
mov
lods
push
shl
ficoms
xchg
add
fnstcw
lods
inc
xchg
rcrb
cmpl
nop
arpl
clc
sbb
jl
jmp
nop
pop
add
nop
and
xchg
imul
ljmp
and
das
ficoml
mov
mov
push
nop
pop
mov
test
sub
nop
push
mov
mov
push
lods
adc
sarl
std
add
leave
xchg
adc
jbe
insl
gs
or
mov
dec
loop
mov
stos
pop
xchg
xchg
fdivrs
aad
push
nop
into
xchg
push
lock
xchg
cmc
adc
pop
or
nop
jl
ret
mov
add
cld
mov
jae
clc
mov
cmp
adcl
pop
int3
sbb
clc
nop
push
hlt
add
loopne
jge
pop
fidivs
jp
dec
js
rcl
xchg
xor
vsubps
fcoms
mov
inc
mov
mov
fildl
inc
shlb
popf
adc
push
loopne
xchg
leave
xchg
pop
lods
sub
test
cld
or
mov
sbb
adc
lds
xor
test
mov
ss
outsb
sbbb
cmp
or
sub
mov
cmp
roll
iret
arpl
mov
fbld
inc
pop
add
pop
cmpsb
fsubs
nop
fisubrl
cwtl
mov
nop
mov
lret
or
adc
arpl
adc
scas
pop
aad
nop
mov
xchg
add
xchg
add
inc
ss
loopne
test
mov
adc
aaa
mov
scas
nop
dec
rorl
dec
nop
adcb
xchg
add
push
cwtl
sahf
loop
dec
movb
push
in
push
and
jecxz
ficomps
xor
imul
lcall
jb
xor
xchg
nop
outsl
mov
sbb
nop
mov
jnp
mov
ljmp
dec
xchg
dec
dec
inc
test
jecxz
adc
stc
mov
lock
xchg
mov
mov
adc
ljmp
adc
mov
jnp
or
out
inc
shl
lods
or
xor
cmp
daa
std
inc
in
fidivs
dec
xchg
outsb
sub
mov
fdivs
mov
cld
inc
xchg
push
adc
xor
rolb
jg
and
cmpsl
or
or
xlat
xchg
nop
mov
adc
jae
mov
ss
push
cmp
paddsw
nop
imul
lds
popf
cwtl
jecxz
sub
stos
nop
pop
add
add
nop
jmp
mov
das
nop
arpl
daa
movsl
cmc
mov
xchg
fcmovne
test
push
lcall
inc
inc
jge
xor
fcmovnbe
clts
sbb
inc
rorb
nop
mov
push
lahf
aas
add
sarb
rcll
xchg
inc
enter
nop
push
daa
mov
icebp
sub
or
jmp
push
mov
xchg
sti
cmp
dec
out
jns
int
cmp
mov
push
push
nop
hlt
in
lret
mov
outsb
rclb
out
idivb
imul
out
test
decl
and
xchg
iret
movl
xor
mov
and
cmp
scas
loop
nop
xchg
movsb
fsin
push
movsb
jae
nop
in
adc
in
fisubrs
mov
rolb
out
shl
xchg
data16
xor
sub
in
pop
lret
and
cwtl
aas
or
xor
pop
nop
loope
sub
adc
cmpsl
fs
xchg
test
jle
shlb
mov
rcrb
adc
adc
test
aaa
notl
pusha
daa
cmp
nop
dec
add
add
push
push
dec
mov
dec
pop
pop
in
popa
outsb
nop
lcall
push
mov
ljmp
cs
out
push
or
sub
nop
dec
daa
dec
mov
nop
loop
xchg
bound
hlt
lods
add
xor
cmc
je
adc
jg
ljmp
mov
sbb
xchg
xchg
xchg
adc
or
add
dec
aam
mov
jp
and
sbb
add
adc
ss
adc
nop
scas
add
nop
mov
and
nop
inc
in
xchg
adc
cli
add
rcr
fistpl
call
mov
pop
clc
mov
outsb
adc
mov
fsubrs
push
gs
int
fwait
or
jmp
rcl
mov
xor
xchg
loopne
push
insb
nop
fisubl
inc
push
outsl
dec
adcb
mov
in
xchg
xchg
addr16
dec
nop
xor
mov
in
push
or
jnp
test
sub
into
dec
nop
cwtl
test
jecxz
es
inc
mov
mov
out
scas
pop
push
enter
dec
pop
filds
iret
add
scas
mov
das
shlb
nop
inc
test
xchg
xchg
nop
push
inc
pop
xor
nop
repz
pop
push
and
jnp
std
int
outsl
cli
nop
hlt
mov
imul
inc
lds
jae
push
cmpsb
ret
loope
std
ja
xchg
xor
das
js
jg
pop
jp
fidivs
or
nop
aaa
lcall
adc
ret
loop
push
out
je
inc
xchg
xlat
xchg
adc
mov
out
in
imul
cld
arpl
in
add
lods
and
adc
and
dec
je
mov
nop
addr16
or
jp
jbe
hlt
mov
xchg
cmp
sbbl
bound
push
les
nop
repnz
rorb
mov
fldl
ret
xchg
xor
and
cmpsb
cmpl
jge
add
xchg
cmp
mov
sub
in
sar
adc
ljmp
xchg
mov
pop
cmc
inc
je
es
mov
inc
out
and
mov
pop
push
push
adc
dec
nop
cmp
fwait
jp
popa
push
jecxz
mov
scas
cmp
lock
movsb
adc
dec
or
inc
push
jae
cmpsl
inc
sub
adc
push
adc
and
aam
xor
cmovp
sbb
in
mov
loop
leave
ljmp
fcmovbe
insb
bound
xchg
rclb
daa
dec
aam
mov
sbb
adc
add
sbb
push
jo
xchg
xor
push
stos
dec
lock
xchg
pop
fisubl
test
nop
aam
pop
cmpsl
mov
cltd
jmp
jo
notb
mov
cmp
push
insb
stos
lds
mov
or
addr16
loopne
jecxz
push
rclb
mov
aas
js
roll
addb
and
nop
xor
pop
rcrl
js
cmp
jmp
test
out
repnz
nop
sub
call
mov
mov
nop
jno
out
or
adc
inc
ret
loopne
add
movsl
ja
out
xlat
ror
fucomi
dec
cmp
bound
adc
jb
test
xor
das
xchg
popa
nop
push
inc
lret
lock
mov
test
fistl
inc
mov
out
mov
outsl
shl
loope
sub
mov
ss
arpl
cmp
in
ret
aam
dec
adc
jo
dec
pop
subb
hlt
or
add
nop
jns
push
fwait
movsb
add
les
loop
jl
test
jno
cmpsb
sub
push
stc
out
inc
nop
xor
cmpsb
fnsave
insl
mov
repz
test
adc
jns
pushf
cmp
in
pop
or
rorb
notb
jecxz
sbb
movsl
icebp
into
jno
adc
loop
dec
test
mov
inc
dec
mov
rcll
ret
nop
mov
jl
bound
push
adc
mov
imul
add
cmpsb
mov
jmp
pop
in
out
fst
nop
cmc
in
or
xchg
jo
movsb
sub
mov
cli
pop
and
ss
decl
push
nop
mov
or
mov
sahf
out
nop
stc
inc
cmp
addr16
add
jb
fiadds
cwtl
movsb
les
cmpsl
jns
push
push
into
ficoml
pop
imul
ljmp
jo
jnp
push
ret
scas
sbb
rcr
loopne
movsb
nop
cmp
rorl
lods
nop
and
mov
pop
pop
sbb
nop
inc
int3
jl
ret
cld
adc
pop
sbb
jmp
cmp
add
adc
jo
mov
sbb
pop
int3
lcall
and
jecxz
nop
in
xor
pop
fchs
fidivrl
into
jle
imul
xor
nop
jb
adc
push
pop
fbstp
mov
int3
rolb
jno
inc
ret
cmp
addr16
pop
test
mov
push
fimuls
fmulp
ficoml
add
das
push
lret
sub
jmp
and
lock
mov
inc
xchg
sarb
fistl
push
fmulp
dec
nop
xor
inc
push
aas
sub
push
fadd
mov
adc
stos
sti
push
clc
imul
add
inc
fwait
or
orl
add
sub
mov
and
pandn
mov
out
nop
out
rorl
nop
xchg
or
mov
mov
das
adc
xchg
adc
imul
mov
dec
mov
pushf
test
mov
lds
mov
ds
xchg
ljmp
lcall
sub
cmp
xchg
or
xchg
outsb
rclb
jo
mov
rcr
and
mov
stc
pop
xlat
lock
clc
mov
call
adc
jns
jge
in
rclb
mov
nop
lea
xlat
jo
mov
nop
cli
ret
mov
lds
pop
mov
push
mov
jne
xchg
jbe
scas
stos
mov
icebp
orl
dec
jg
cwtl
mov
outsb
mov
pop
push
into
pop
nop
lret
mov
fadd
shrb
sbb
jle
push
xchg
adc
scas
pop
fisttpl
and
push
and
nop
ret
xchg
xchg
lcall
push
int3
xlat
arpl
dec
loopne
fdivs
and
aas
pusha
mov
mov
movsl
sbb
nop
pop
sti
or
or
xchg
shrb
jp
push
cs
lods
nop
sti
mov
iret
loopne
mov
dec
rclb
pop
nop
scas
insl
add
aas
bound
popa
jns
lods
sbb
ret
lods
or
aaa
nop
jl
push
jo
jg
dec
adc
mov
adc
call
mov
xchg
cmp
stos
lret
shl
sub
or
mov
popa
sub
inc
es
xchg
faddl
xor
loop
das
inc
mov
sahf
mov
mov
mov
mov
push
xor
push
movb
hlt
dec
sub
sub
sbb
adc
push
hlt
insb
faddp
or
clc
sar
enter
jae
xor
sub
mov
test
addb
or
sbb
push
cltd
pop
xorl
icebp
mov
daa
imull
aas
mov
fcoms
jbe
nop
loopne
add
cmp
ss
mov
test
out
jbe
xor
and
inc
cmp
mov
sub
nop
adc
xor
adc
lret
sub
imul
cltd
mov
vpandn
mov
sbbl
ljmp
dec
int
in
sbb
sub
cmp
mov
add
pop
mov
nop
rorl
adc
push
pop
out
cmp
xor
mov
pop
push
lret
add
xchg
jne
jl
xchg
cli
imul
push
inc
cs
or
mov
push
out
sbb
cli
daa
jmp
test
mov
and
rcrb
pop
mov
in
js
or
dec
push
lret
ficoms
mov
imul
push
push
nop
inc
fwait
dec
xchg
add
imull
nop
cmp
and
adc
fistps
jmp
nop
xchg
cli
lret
xchg
xlat
xchg
xchg
cld
pop
or
mov
push
mov
js
cwtl
mov
adc
jp
and
fldcw
nop
cmpsb
lods
xor
cmp
push
ss
jle
or
lahf
add
mov
nop
mov
aaa
and
test
lock
add
lds
sbb
mov
push
pop
pop
jle
stos
fs
dec
cmp
or
add
push
nop
inc
xor
and
pop
xchg
cmpb
cmp
push
pusha
push
lock
xlat
add
movsl
or
jl
push
push
nop
pop
xchg
movsb
pushf
push
imul
shll
ret
iret
shlb
xor
inc
jmp
loope
lahf
sub
xor
push
leave
loopne
nop
xchg
jmp
jnp
roll
cld
mul
push
xchg
push
push
and
cmp
and
nop
jge
jmp
push
nop
iret
sub
and
pop
and
nop
lahf
cld
jno
les
scas
nop
test
sbb
shlb
in
dec
pop
lret
and
sbb
nop
imul
mov
shlb
rcrl
cmp
nop
sbb
popf
imul
je
sub
nop
out
insb
mov
adc
cli
call
out
int
adc
mov
nop
push
test
cmp
fcomip
push
cmp
or
mov
fcoms
nop
jle
push
pop
pop
ret
test
add
data16
mov
loop
xor
sbb
shl
adc
popa
int3
loopne
push
adc
xlat
cld
ds
clc
jmp
int3
nop
sub
cmp
rcrl
cwtl
pop
nop
popa
adc
aaa
movsl
dec
nop
xlat
dec
jno
call
mov
std
mov
xchg
pop
loope
mov
and
xorl
xchg
aam
sahf
arpl
xor
stos
out
dec
push
lret
pop
mov
mov
and
out
fistpll
nop
cmpsl
push
jns
jnp
out
and
jl
adc
gs
lret
call
shrb
xchg
fimuls
inc
push
nop
call
lock
adc
jae
in
imul
nop
sti
inc
out
loope
add
mov
rcr
ffreep
jge
nop
int
cmpsl
cwtl
jne
nop
std
sbb
and
nop
enter
and
mov
cld
sub
orl
jle
inc
leave
lock
mov
mov
adc
scas
test
dec
mov
jge
repnz
out
outsb
ja
push
shlb
shlb
fidivl
into
inc
dec
sbb
sbbb
mov
add
xchg
push
add
lods
and
pop
nop
mov
leave
mov
fdivrl
mov
arpl
nop
frstor
mov
nop
mov
fistpl
ljmp
or
leave
cs
fbstp
jbe
push
mov
push
inc
sar
jecxz
cmp
lods
adc
add
addr16
mov
lret
mov
sbb
nop
jmp
cmp
add
shlb
and
jnp
inc
dec
xchg
add
pop
and
cmp
mov
adc
xchg
fucomp
ja
cli
nop
or
stos
mov
mov
fadd
or
test
inc
dec
ficoml
mov
inc
nop
js
inc
test
or
repz
les
pop
sub
arpl
mov
rorb
das
or
mov
sbb
loop
mov
ss
call
scas
popf
jnp
mov
nop
and
push
sub
mov
cmp
or
xor
mov
outsb
call
xchg
inc
cld
jmp
or
xchg
xchg
arpl
mov
adc
pop
or
mov
jmp
mov
loope
cmpsl
jp
jecxz
push
andps
loopne
mov
pop
rorl
or
xchg
mov
ficoms
sahf
jmp
dec
call
repnz
es
sbb
cmp
xor
cmc
mov
sub
push
or
push
test
fdivrs
lods
jae
int3
and
das
nop
out
in
add
nop
sub
xchg
movsl
xchg
xchg
add
xor
insl
lods
mov
mov
scas
imul
add
shl
sub
fcomip
stc
pop
std
push
adc
jmp
andb
jmp
std
sahf
in
out
xlat
nop
clc
dec
inc
incl
cmpsl
xorb
nop
sahf
inc
mov
int3
ss
jno
or
lea
outsl
je
push
fwait
pop
mov
call
xor
nop
sbb
cmp
or
jne
aam
cwtl
cmp
int3
push
nop
xchg
ljmp
nop
push
dec
lret
sbb
mov
mov
nop
and
pop
inc
jb
ja
out
cltd
cli
cmpb
fisubrs
xchg
jnp
jb
subl
pop
adc
mov
cli
nop
xchg
aad
dec
sub
or
into
movsb
inc
mov
das
fisubl
mov
sbb
nop
orl
inc
stc
lcall
pusha
nop
and
bound
orb
jmp
pop
rolb
loope
popf
nop
mov
popa
cltd
mov
cmp
mov
adc
jb
or
js
loop
xchg
mov
nop
inc
dec
mov
cld
sbb
es
int
icebp
push
int3
adc
fcoms
ds
jg
rorl
sarb
daa
in
sarl
out
adc
adc
andl
add
nop
ds
push
mov
xor
stos
lahf
mov
push
mov
rclb
pop
das
and
push
nop
ds
iret
jnp
nop
jbe
cmpsl
cltd
or
sub
push
nop
sub
cli
call
subb
nop
and
add
fistl
in
lahf
bound
add
mov
sub
and
sbb
nop
cld
xor
mov
nop
add
cmp
mov
mov
xchg
mov
pop
nop
bound
js
add
ds
xor
mov
hlt
dec
xchg
es
aaa
or
stos
adc
push
leave
jo
cmp
lock
xchg
cs
xor
pop
ss
pop
jmp
in
in
ret
les
push
hlt
or
push
add
sahf
sub
and
jbe
scas
cmp
in
inc
push
subb
ret
adc
cmp
repz
mov
out
mov
insl
add
pop
mov
cli
es
imul
hlt
inc
xor
nop
inc
je
cmp
test
addr16
xorb
hlt
nop
jae
push
xlat
or
mov
es
popa
stos
or
mov
inc
scas
fsubrp
jge
lock
inc
rorb
jo
push
call
lock
jp
xor
lea
das
pop
aaa
std
cmp
lods
inc
rclb
mov
and
xor
push
aad
adc
out
in
ja
in
push
lahf
mov
sbb
push
loop
push
and
pusha
je
jmp
add
cltd
dec
in
mov
fistl
enter
movsb
fcmovb
nop
mov
pop
push
or
test
shl
inc
or
xchg
mov
mov
lock
xor
es
inc
xor
jae
rcr
dec
shlb
sub
mov
inc
nop
xchg
bound
adc
ret
inc
jo
mov
movsl
and
roll
sbb
jnp
out
xor
or
push
nop
inc
or
cmp
jmp
test
mov
nop
iret
xchg
mov
mov
mov
add
inc
xchg
pusha
or
das
mov
pop
rclb
int3
testb
push
xor
sahf
push
nop
lret
pop
xor
fists
int3
imul
dec
xorb
mov
fnsetpm(287
movsl
mov
sub
lret
icebp
mov
push
or
popa
nop
cs
repnz
jmp
inc
push
nop
cmc
rcrb
push
nop
and
in
xor
shl
jmp
jbe
nop
loopne
call
cmc
fimull
add
aam
mov
xor
add
cli
mov
pop
and
test
test
xchg
xorl
pop
add
xlat
lret
dec
in
stos
xchg
nop
mov
insl
nopl
lret
jge
icebp
decb
pop
jns
xor
daa
mov
nop
cmp
push
gs
movsl
rorb
sub
fst
aad
stc
push
xor
xchg
lahf
out
je
addr16
es
mov
xlat
mov
in
cmpb
add
outsl
xor
test
sahf
dec
sbb
jne
inc
cmpsl
add
mov
clc
neg
inc
insl
xor
cld
inc
dec
aam
fwait
pop
jp
xorb
int
std
xor
and
pop
nop
in
mov
or
inc
subb
push
nop
add
inc
add
mov
stos
mov
rolb
lds
fs
nop
and
in
iret
xlat
ffreep
nop
or
pop
inc
dec
mov
adc
repz
push
sbb
jle
out
sub
dec
out
ljmp
mov
jp
ja
popa
adc
inc
push
out
add
mov
and
cmpsb
or
jnp
ds
jbe
sti
lds
inc
mov
push
ds
xor
mov
outsl
xchg
dec
nop
add
addl
stos
xchg
push
or
cs
insb
sar
lahf
stos
int3
notl
sbb
add
lcall
addl
or
rorb
les
and
dec
adc
mov
arpl
enter
mov
cld
das
loopne
scas
sti
adc
push
push
rcrb
dec
lock
and
mov
sub
nop
das
mov
shlb
mov
xor
pop
mov
sbb
mov
or
adc
stc
xchg
daa
xor
scas
nop
adc
or
stc
outsl
nop
dec
lret
push
push
push
xchg
in
in
ficompl
mull
cmp
ds
shlb
dec
sbb
push
mov
cmpsl
cmc
nop
and
inc
mov
xor
ja
loopne
shrb
sti
inc
mov
adc
xchg
nop
push
mov
inc
pop
leave
nop
lcall
xchg
nop
inc
sbb
add
int
pop
xchg
inc
int3
mov
iret
js
dec
cli
fwait
lods
nop
dec
rcrl
shlb
nop
bound
stos
xor
outsl
nop
jge
enter
mov
cwtl
into
imul
sub
fwait
jbe
aam
int
nop
jecxz
push
push
lock
cmp
adc
bound
popf
clc
or
sti
lock
mov
adc
in
mov
push
lret
push
cld
enter
pop
adc
sbb
mov
lds
mov
mov
jb
mov
nop
movsb
js
rcrb
cmp
add
xor
push
pop
nop
into
popf
dec
lds
push
xchg
fdivr
sbb
adc
test
xchg
mov
cmp
bound
nop
dec
inc
cmp
cmpsb
lcall
nop
mov
imul
subb
sbb
lock
xchg
popf
shrb
test
int3
xchg
shlb
push
ja
ljmp
nop
pop
call
cmp
sbb
push
cld
fadds
lock
mov
push
nop
push
mov
mov
mov
dec
nop
cmpsb
out
test
lahf
cld
inc
xorb
fnstenv
loopne
shll
jg
xor
cld
nop
and
jmp
rorb
fidivs
nop
adc
sub
and
jmp
shl
shll
shll
sub
inc
nop
jne
jo
sub
cmp
in
fcompp
mov
add
and
in
or
mov
std
dec
loopne
idiv
inc
nop
clc
pop
jb
add
mov
or
pop
fistl
loope
mov
sahf
in
xchg
mov
xchg
and
ss
in
cmp
mov
insl
fsubs
inc
fsubs
pop
add
jbe
push
push
add
mov
adc
xchg
int3
int3
xchg
shlb
lods
and
stos
pop
mov
in
mov
dec
nop
mov
push
and
inc
in
add
sahf
in
mov
nop
jbe
or
or
dec
xor
jo
nop
imul
insb
adc
outsb
mov
aam
movlps
ds
out
mov
jge
xchg
cli
pop
lgs
or
xlat
or
jp
icebp
xor
mov
sbb
or
out
int3
push
out
pop
out
je
nop
movsb
jp
in
inc
sbb
imul
fsubrp
aas
nop
bound
fcoms
push
int
jnp
xchg
add
mov
jecxz
out
xchg
xlat
jle
inc
stc
rolb
and
loop
gs
fwait
xor
loopne
xchg
sub
rorb
adc
rorl
jno
outsb
jge
mov
nop
mov
outsl
and
nop
scas
add
aas
nop
jnp
pop
pushf
and
ffreep
nop
fsts
dec
ja
mov
nop
repz
movsb
and
sbb
cltd
push
int
shlb
enter
insl
je
sub
inc
mov
jne
aaa
inc
sbb
loope
rcl
loopne
out
adc
cmpsl
shlb
and
mov
ret
lcall
insb
pop
or
or
cmp
xlat
adc
sub
push
aam
clc
sbb
nop
add
leave
push
cmpsb
ret
cmp
sti
in
sahf
mov
jb
popa
add
lret
jbe
clc
xchg
sbb
xchg
lods
sbb
adc
sub
or
insb
cmp
xor
mov
pop
pop
loope
ljmp
bnd
repz
jno
jg
rol
out
inc
push
testl
xchg
sub
push
fwait
and
mov
cmpsb
push
push
mov
pusha
push
rolb
test
nop
test
xchg
shlb
rclb
push
lods
inc
nop
or
scas
adcb
adc
insl
ja
adc
xchg
add
fisttpll
es
pop
lods
psraw
cmp
cmp
mov
jecxz
bound
nop
push
push
addr16
add
call
nop
pop
push
iret
push
in
fidivs
sbb
nop
cltd
repz
fsubrs
or
imull
call
push
and
ret
loop
es
divb
jnp
sbb
hlt
sar
addb
jo
inc
jb
nop
cmp
or
adc
sbb
out
push
sub
adc
pushf
push
jo
imul
inc
xchg
jno
mov
adc
idivb
mov
cmp
cld
adc
incl
js
sbb
sub
dec
mov
es
mov
inc
xor
fldenv
pop
ja
cld
mov
xchg
dec
scas
push
hlt
pushf
in
sbb
mov
mov
dec
mov
adc
aas
fimuls
in
lock
test
je
mov
in
add
xchg
xchg
lock
and
sarb
data16
fists
fmull
test
dec
push
sub
rcrb
add
sbb
xor
clc
jns
nop
push
push
int
push
out
xor
call
popa
out
cmp
mov
push
jne
jg
cli
xchg
mov
addb
nop
mov
out
clc
aam
nop
mov
jnp
iret
pusha
js
push
mov
jg
xchg
scas
mov
lds
sub
gs
pop
cmpsl
cwtl
cltd
adc
stos
je
fiaddl
je
out
or
cltd
loop
mov
cwtl
int
nop
loopne
inc
and
mov
shlb
add
lock
xchg
test
add
int3
pushf
or
push
fsts
ret
imul
mov
mov
push
and
mov
nop
out
or
dec
movsb
fdivr
nop
popa
sub
test
sahf
nop
pop
xchg
and
in
xchg
int3
fsubrl
nop
lods
lret
stos
adc
nop
fstpl
push
mov
mov
hlt
adcl
out
dec
fisubrl
shll
inc
and
out
dec
cwtl
adc
jns
stos
ficoms
cld
mov
push
inc
pop
pop
addr16
movsl
out
scas
stc
pop
mov
lcall
xchg
xchg
jmp
mov
adc
int3
mov
xor
repz
outsb
mov
push
ret
mov
cwtl
adc
lret
in
fstl
shrl
xchg
std
loop
aam
push
not
xchg
popf
dec
faddl
sub
cwtl
gs
push
loope
cmp
jge
in
xor
nop
int
daa
xor
mov
xor
mov
test
sbb
imul
es
push
nop
pop
jb
divb
enter
arpl
xchg
fisubs
popa
or
into
nop
es
pop
in
js
notl
hlt
or
aaa
xlat
inc
nop
lret
and
pop
pop
jl
outsl
stos
inc
mov
add
xorl
cld
movaps
mov
dec
add
sbb
pop
push
lock
jmp
lods
push
or
inc
mov
fmull
arpl
movl
inc
fists
or
ja
shlb
adc
rcll
mov
int3
or
mov
xor
sbb
fdiv
nop
stos
stos
sub
cmp
in
mov
mov
mov
sbb
cs
out
or
mov
nop
fdivs
or
or
lock
jecxz
or
mov
loop
mov
in
mov
cmp
nop
scas
movsb
mov
aad
add
stos
mov
in
jmp
out
addr16
nop
test
sub
cmpsl
rclb
xor
or
lds
inc
nop
jg
jle
addr16
cmc
cmpsl
nop
mov
push
mov
and
mov
nop
jl
sub
fcmove
mul
push
nop
pop
pop
add
ljmp
xchg
adc
es
pop
jecxz
jns
nop
fimull
jl
nop
jmp
pop
icebp
leave
movsb
in
nop
test
sub
les
mov
pop
inc
or
dec
repnz
adc
add
fmuls
nop
ljmp
dec
add
mov
jl
fcompl
fildll
nop
push
sbb
jb
pop
jbe
jae
push
rcll
pop
xchg
mov
cmp
rolb
popf
add
jae
nop
outsl
inc
mulb
nop
dec
adc
cmp
nop
mov
scas
and
add
xlat
out
je
xor
push
pop
jg
nop
add
lods
nop
jecxz,pn
pusha
test
aas
mul
ja
stos
jge
nop
popf
movsb
outsl
arpl
call
repz
mov
out
xor
xor
sbbb
nop
jle
pop
sub
shll
push
out
pusha
nop
mov
out
outsb
stc
inc
unpckhps
nop
rcll
leave
sbb
fidivl
das
aam
fs
dec
nop
rclb
xchg
push
out
cld
push
mov
bound
imul
inc
test
pop
ds
nop
gs
jp
mov
stc
lock
dec
inc
push
cmp
add
dec
jle
adc
mov
loopne
lods
inc
and
cld
jbe
adcb
out
cmp
repz
sbb
or
mov
shll
xchg
xchg
in
hlt
nop
mov
jae
flds
pop
call
xor
cltd
push
dec
adc
and
pop
outsl
mov
jbe
lret
mov
cmp
insb
dec
aam
ss
mov
leave
mov
jle
add
ficoms
push
and
repnz
and
adc
jo
call
mov
rcl
mov
lret
repnz
mov
gs
adcb
cmp
hlt
mov
int3
or
fsts
enter
dec
nop
xor
mov
push
inc
mov
lea
popa
pop
pop
dec
adc
xor
mov
sbb
push
dec
sub
mov
testl
xorl
fidivrl
adc
or
nop
stos
xor
cmp
dec
adc
mov
sbb
lods
nop
push
in
xchg
repz
jnp
pop
cmp
jo
imul
lret
pop
out
jecxz
nop
dec
pop
fildl
mov
adcb
rcrl
or
mov
lret
nop
mov
insb
fldl2t
movsb
fisttps
mov
mov
adc
add
rcr
jnp
sbb
sarl
push
and
outsl
out
loop
nop
sbb
push
call
jns
mov
nop
add
iret
test
inc
into
xchg
jge
inc
mov
faddl
aas
or
sbb
lret
xchg
add
pop
or
mov
insl
dec
mov
nop
out
adc
test
xor
or
adc
aad
nop
inc
mov
sbb
nop
jno
fs
lahf
mov
sahf
mov
out
in
daa
mov
icebp
nop
mov
lods
pop
pop
leave
popl
jmp
cmc
mov
pop
pop
jno
cmp
orl
in
or
mov
fiadds
adc
pop
arpl
adc
repnz
sub
movsb
mov
lret
aaa
out
in
movsl
push
adc
iret
std
add
sbb
mov
add
push
mov
addr16
and
aam
dec
nop
cmpsb
out
test
pop
aaa
sub
cltd
and
adc
jl
jnp
scas
loopne
pushf
or
addr16
pop
bnd
or
lret
fnstcw
rclb
push
cmp
inc
gs
inc
sbb
or
test
out
jo
in
cli
mov
pop
pop
pop
cmp
clc
ret
mov
ret
jbe
lds
movsbl
inc
push
sarb
stc
pop
fdivrl
int3
adc
mov
rcl
nop
dec
sub
negb
iret
nop
and
dec
ja
push
fcomps
cltd
or
ljmp
loop
popf
loope
inc
fdivrp
jo
in
mov
mov
push
loope
jbe
shlb
pop
dec
fnsetpm(287
test
dec
fstl
pop
sar
nop
mov
xlat
loop
nop
sub
dec
or
ret
lock
sahf
dec
enter
adcl
outsb
xor
movb
cmpsb
jl
add
mov
pop
fsubl
mov
scas
shr
push
jns
nop
ss
test
cwtl
outsl
xchg
out
sub
push
nop
fdivl
dec
int
bound
call
fstl
push
rcr
nop
and
popa
outsb
repz
insl
or
mov
addl
jecxz
dec
jle
dec
jns
cltd
mov
xor
adc
jbe
rorb
xchg
hlt
and
mov
lahf
nop
dec
mov
gs
sub
popf
insb
repnz
xchg
test
lock
imul
stc
sub
xchg
nop
arpl
inc
add
cwtl
xchg
iret
lea
std
hlt
orb
jae
cmp
ss
mov
out
aam
pusha
sbb
lock
sbb
mov
adc
cmp
adc
pop
push
fistl
adc
fsubl
push
adc
cmp
ror
cld
loope
xchg
rorl
jp
ret
jp
cld
andl
lahf
rcll
movsl
push
sbb
sbb
dec
mov
test
fcompl
sub
cs
or
cmp
data16
fdivrl
mov
xor
jg
and
mov
orl
dec
xchg
or
inc
dec
test
pop
lahf
cmp
inc
mov
jno
movsb
hlt
fdivl
mov
and
dec
cmp
push
nop
or
push
nop
das
inc
sahf
pusha
aas
sub
pop
enter
sub
lock
iret
dec
inc
cmpb
cmpsb
nop
cmp
push
movsl
andl
xchg
cli
fildl
nop
dec
stos
xchg
and
insl
fwait
nop
adc
mov
cmpsl
popf
adc
cli
xchg
insl
mov
fidivl
jb
jle
push
sti
mov
shlb
push
out
loopne
sbb
mov
mov
inc
insb
pop
jmp
adc
adc
sbb
shll
cmp
enter
and
in
mov
shll
jecxz
dec
cmp
mov
push
pushf
mov
movl
out
sbb
xor
data16
mov
xchg
push
nop
sbb
popf
lret
fs
cld
mov
mov
xchg
or
daa
shl
fcompl
insl
imul
mov
inc
jae
mov
ljmp
movsl
cmp
mov
lods
lds
in
adc
lock
test
nop
ss
sbb
mov
xchg
push
fadds
aas
push
xchg
mov
adc
in
vcmpss
adc
les
push
xor
mov
sub
inc
out
xor
divl
sbb
or
and
mov
adc
lods
nop
mov
out
fwait
dec
mov
push
xchg
dec
sahf
inc
nop
mov
pushf
bound
or
sbb
mov
pop
scas
js
aas
mov
jns
mov
cmp
andb
testb
inc
popl
lcall
repnz
cmp
jecxz
adc
out
xorb
int
imul
xlat
out
xchg
dec
mov
cmp
das
out
in
mov
mov
inc
cmpsb
stos
mov
jecxz
arpl
nop
sbb
dec
push
push
shlb
sahf
jno
sarl
xchg
lods
mov
mov
ss
push
pop
aas
js
mov
nop
sub
into
jmp
and
xchg
and
mov
pop
dec
cmpsb
ds
nop
inc
out
dec
adc
cmpsl
cmp
xor
test
push
shll
lret
adc
outsl
adc
mov
call
inc
sbb
xchg
or
pusha
pop
gs
pop
cmp
nop
jnp
mov
dec
or
add
jg
iret
mov
xchg
out
mov
cmp
and
push
push
and
cmp
xor
clc
not
mov
pop
add
adc
repnz
jle
iret
push
rcr
xor
stos
cmpb
jp
inc
movsl
repz
fwait
mov
jb
xchg
pop
aaa
and
ret
xchg
or
sub
jmp
sub
mov
imul
test
xor
rclb
mov
lods
lahf
int
lock
iret
lcall
jge
addps
nop
gs
xchg
adc
ja
mov
lods
or
mov
mov
sub
nop
xchg
daa
xlat
sbb
pop
out
push
sbb
jp
xor
les
sub
rclb
jle
dec
and
enter
lret
call
adc
or
mov
xlat
rolb
std
rclb
dec
addr16
imul
nop
adc
es
and
das
orb
xor
adc
push
jo
pop
xor
nop
jbe
jp
sbb
cmp
or
push
insl
adcl
mov
mull
shl
add
stos
sub
mov
or
gs
mov
clc
nop
and
sbb
push
fstpl
cmp
adc
push
mov
sbb
cmpsb
insl
add
lret
repnz
lock
icebp
fwait
roll
and
mov
pushl
push
rclb
sti
mov
jp
jb
push
cmp
sbb
lahf
pshufw
fists
push
mov
pusha
nop
fprem
adc
sub
mov
outsb
sub
fcoml
nop
addl
test
nop
in
in
jns
call
nop
stc
lret
ljmp
subb
cld
inc
clc
hlt
aaa
faddp
rcl
jp
xchg
dec
out
fldl
push
cwtl
mov
insb
mov
push
and
int
call
nop
mov
into
ds
inc
xchg
mov
mov
mov
xchg
inc
mov
pop
sub
js
and
in
rcrl
outsb
cli
add
add
jns
out
mov
or
je
mov
cmc
fcoms
push
xchg
mov
dec
xchg
in
add
arpl
repz
imul
jae
adc
loope
cwtl
outsb
leave
nop
lcall
mov
nop
mov
clc
pop
jbe
add
or
dec
xchg
mov
jns
imul
xchg
inc
sbb
xor
hlt
in
int
add
push
xor
jmp
xchg
dec
pop
test
sbb
rorb
out
mov
hlt
or
pop
push
aad
nop
add
mov
in
outsl
imul
loopne
loop
fistl
adc
ficoms
addr16
push
pop
adc
movsl
test
lahf
pop
xchg
pop
xlat
jl
inc
nop
push
pop
shl
aaa
adc
stos
adc
out
sub
pop
sbb
stos
dec
jl
rcr
and
push
mov
cltd
mulb
gs
movl
popa
call
enter
mov
sub
xor
shll
mov
xchg
arpl
ds
sbb
pop
mov
decl
nop
outsb
cmp
xor
xchg
mov
pop
inc
mov
mov
je
stos
lret
cld
nop
mov
push
setne
stc
fsubrl
adc
pop
sbb
bnd
xchg
or
jmp
nop
sbb
lea
ja
js
movsb
cmp
mov
sbb
sub
pushf
decl
repnz
pop
push
sarb
nop
loopne
mov
jbe
mov
push
mov
pop
xlat
and
adc
xor
fnstsw
popf
mov
mov
iret
movb
inc
or
adc
fcmovu
mov
xchg
sbbl
add
fcoml
push
push
mov
into
sbb
dec
pop
loop
adc
nop
data16
mov
push
addl
mov
jbe
adc
aaa
and
xchg
cmpsl
rolb
insl
pushf
inc
xchg
xor
shrb
mov
mov
cli
shlb
ja
nop
sub
sbb
or
inc
nop
pop
sub
mov
aad
nop
test
clc
gs
insb
add
out
je
sub
push
push
in
nop
sti
mull
dec
nop
sub
movsl
fwait
pop
jb
bound
out
pop
int3
inc
ret
sub
mov
push
or
stos
std
shl
mov
xchg
jecxz
fistl
push
std
xor
lods
pusha
cmp
lds
add
ljmp
mov
or
jge
lock
xchg
dec
popa
test
fwait
nop
icebp
bnd
loop
push
adc
sbb
cmpsb
ljmp
add
ss
mov
and
sbb
decl
xchg
pop
scas
dec
push
ljmp
daa
std
xchg
jnp
pop
mov
xor
push
out
mov
nop
arpl
mov
mov
imul
sbb
inc
sarb
scas
and
inc
mov
rorb
mov
shl
mov
in
hlt
pop
lock
testb
xlat
inc
shll
push
pusha
or
iret
cmp
jg
push
pop
lcall
outsl
in
addb
cmp
mov
loop
push
movsb
call
push
push
notb
jecxz
jl
jns
or
outsb
xor
mov
ret
mov
jnp
shl
push
push
adc
cmpsl
mov
push
ljmp
xchg
inc
and
add
mov
iret
aad
sbb
mov
insl
push
in
add
rclb
fcmovnb
lfs
nop
push
dec
popa
mov
xor
lock
mov
in
sar
fdiv
sub
adc
in
add
lcall
scas
inc
pop
lods
xor
in
stos
mov
xor
push
jp
mov
and
js
push
nop
cmp
mov
cld
push
mov
sub
mov
arpl
cmpsb
aad
jns
fistl
cli
xor
divb
jne
arpl
mov
test
mov
nop
or
sub
in
dec
loopne
adc
mov
mov
sbb
nop
sbb
pop
nop
xor
cmp
mov
nop
push
jg
dec
or
inc
nop
dec
ja
push
nop
in
out
mov
sbb
sahf
pop
xlat
dec
sub
fsts
jl
inc
loop
test
nop
add
dec
scas
sahf
shl
nop
rol
fildll
sbb
inc
bts
das
jg
andl
outsb
push
nop
push
js
shrl
test
test
ret
popa
movb
sub
in
lock
js
adc
orb
adc
int
cmc
mov
pusha
push
mov
push
leave
in
out
sbb
push
adc
nop
sub
lret
and
or
jae
inc
xor
nop
arpl
push
loopne
aam
nop
adc
mov
add
sbb
outsb
pop
add
aad
mov
test
in
xchg
sbb
nop
orb
nop
sub
popf
pop
sub
aaa
test
dec
dec
xorb
test
cmc
mov
arpl
outsl
xchg
roll
std
and
mov
nop
outsb
mov
push
nop
aad
rcl
xor
jns
lds
pop
es
nop
outsl
sub
pop
pop
popa
rol
jae
xor
nop
inc
and
push
insl
shl
nop
clc
and
mov
jecxz
shlb
xor
pushf
cld
sbb
jnp
ret
in
sub
mov
push
xchg
mov
jecxz
sub
xchg
xor
pop
adc
sub
sbb
jl
pusha
in
call
fwait
pop
aas
xchg
inc
inc
int3
jns
push
nop
stos
shrb
movsl
test
pushl
mov
aam
popa
inc
mov
cmpsb
add
int
shlb
pop
cld
mov
arpl
add
adc
into
inc
addr16
ficompl
aaa
nop
pop
adc
cld
adc
xor
fld
nop
xlat
imul
mov
adcb
pop
mov
nop
add
imul
mov
cwtl
push
nop
pop
sub
mov
cs
loop
xor
nop
cmp
push
pushl
subl
and
cmpsb
lock
jge
fcmovu
sub
nop
into
insb
xlat
dec
nop
jae
xchg
mov
add
ficomps
adc
arpl
push
repz
mov
pop
dec
jbe
into
jecxz
fwait
fwait
nop
add
stos
or
nop
jae
lret
jbe
nop
jnp
mov
mov
dec
pop
add
lock
pusha
out
cmp
nop
adc
push
push
int3
repnz
xchg
mov
addr16
inc
cmpsb
mov
nop
lods
mov
aam
or
adc
push
pop
push
mov
jle
icebp
mov
sbb
and
jne
mov
cwtl
sbb
flds
adc
rcr
adc
push
insb
lods
icebp
jae
hlt
sub
inc
movsb
mov
jge
xchg
add
scas
addr16
dec
or
ffreep
lods
fdivrl
andb
push
in
pushf
xor
sarb
cld
mov
jg
adc
fs
rcll
xchg
push
xchg
xor
xchg
push
dec
fnop
push
add
fcoms
lret
push
adc
xchg
inc
into
sbb
out
loopne
sub
push
mov
in
hlt
roll
int
les
stc
ficoms
movsb
jge
popa
or
add
or
cmc
call
add
inc
nop
mov
mov
mov
jo
mov
jbe
call
pop
test
add
lea
or
mov
call
rorb
lcall
je
std
inc
dec
fistl
jns
xchg
push
pop
mov
mov
std
jle
cltd
inc
mov
cs
pop
cmp
je
nop
push
mov
cmpsb
dec
repz
nop
in
mov
stos
aaa
adc
or
mov
test
xchg
popf
nop
push
mov
ret
xor
push
rorl
cmp
icebp
jg
aad
sub
loopne
dec
ret
nop
pop
push
xchg
shlb
stos
ds
lock
adc
ja
nop
cltd
bound
int3
nop
push
data16
das
mov
mul
cmpsl
cs
cmpsb
sub
jmp
std
xor
add
loopne
push
call
push
aas
test
sarb
pop
mov
mov
push
ja
push
pop
add
pop
lds
popa
cmp
pop
dec
lods
mov
dec
arpl
and
pusha
dec
je
cmp
addl
sub
and
sub
push
lcall
in
icebp
repnz
cmp
lret
hlt
test
inc
or
cmp
push
stc
cltd
in
xchg
xchg
nop
test
mov
ret
cwtl
negl
cmpsl
cmc
or
flds
xchg
mov
inc
bound
sub
rolb
dec
jns
ficoml
cmc
and
adc
dec
xor
xchg
test
adc
sub
or
inc
jecxz
xchg
mov
add
test
popf
push
sub
es
adcb
and
cmpsl
decl
xchg
inc
lcall
mov
xchg
mov
lds
mov
adc
rclb
pushf
bound
out
nop
dec
or
enter
rcrb
orb
mov
movsl
sub
nopl
cltd
enter
test
mov
lahf
and
nop
sub
pop
inc
nop
lret
pop
and
das
nop
lock
xor
jne
dec
adc
mov
xchg
xlat
cmp
pop
nop
or
adc
lcall
inc
sub
push
ss
jne
jb
imul
nop
insb
mov
mov
adc
push
dec
and
sbb
nop
and
ficomps
test
xchg
and
xor
addb
nop
mov
andl
aam
push
pop
mov
pop
cltd
lds
out
push
dec
gs
arpl
xor
adc
cltd
imul
nop
push
xchg
mov
or
loop
xchg
inc
ljmp
xorl
nop
call
fldcw
pop
adcb
xchg
test
pushf
into
adc
mov
clc
scas
popa
or
sti
or
nop
sub
push
push
inc
fsubrs
mov
scas
lods
mov
sahf
mov
jge
stos
rcrl
lret
aad
paddusw
push
xor
pop
xchg
cmp
inc
cli
cmpsl
insb
clc
leave
add
nop
mov
xchg
nop
inc
jns
jg
test
test
fimuls
cld
lods
xor
push
roll
testb
fdiv
jb
add
cli
xchg
jp
in
sbb
mov
xchg
les
lahf
adc
jnp
fsubs
sub
ss
pop
or
popa
xchg
jnp
cmpb
out
sbbb
or
daa
dec
aaa
nop
fcoms
movsl
jo
nop
dec
or
test
and
rcll
push
push
mov
mov
insl
aad
mov
mov
push
mov
test
xchg
in
test
cmpb
popa
dec
ljmp
mov
daa
mov
xor
sarb
pop
out
push
jg
pop
sbb
icebp
sbb
nop
jmp
rclb
cld
or
loope
jg
dec
xchg
lock
dec
loop
push
jno
dec
xor
mov
xchg
inc
mov
cld
jle
repz
insl
sub
in
jp
nop
stc
sub
push
imul
or
pop
sbb
nop
mov
sbb
mov
rcll
shll
nop
push
popf
repz
xor
data16
lods
push
pop
out
stos
mov
inc
arpl
dec
nop
add
adc
mov
dec
nop
lret
xchg
push
daa
inc
push
inc
and
jno
outsb
pop
mov
inc
xor
scas
pop
sbbb
leave
nop
dec
xor
mov
nop
and
inc
popa
or
ficompl
jmp
sbb
popf
and
out
in
mov
adc
insl
cmp
lret
sarb
stc
subb
add
dec
aad
nop
cld
or
movsl
mov
and
xchg
mov
adc
push
xchg
sub
std
call
das
ds
test
mov
fildll
lahf
outsb
add
nop
cmp
sbb
out
mov
xor
jmp
ficoml
cmpsl
nop
fmull
call
jno
sub
lds
xchg
nop
scas
lea
lock
fists
js
xchg
nop
int3
jo
out
shlb
test
xor
nop
cmp
push
mov
or
xchg
push
add
or
lock
mov
rcll
jno
les
loope
inc
and
rorl
bnd
outsb
nop
mov
into
stos
nop
aaa
test
pop
jecxz
inc
nop
push
inc
in
push
ret
nopl
push
lock
dec
pushf
sbb
fsubs
js
push
lock
pop
out
loope
lock
and
icebp
loop
adc
add
xor
or
mov
xchg
jbe
or
shll
adc
scas
loop
in
xchg
sub
aaa
or
out
aaa
nop
cmp
ret
xor
jl
mov
add
mov
add
notl
xchg
mov
sbb
aam
nop
xor
cs
sub
out
arpl
dec
nop
jmp
imul
int3
mov
cmpsb
test
adc
mov
lock
mov
das
faddl
pop
jbe
mov
scas
popf
or
lahf
mov
mov
shlb
loop
repnz
into
nop
inc
lea
mov
inc
jne,pn
aaa
addb
inc
xchg
pop
mov
adc
pop
cmc
cmp
mov
cld
nop
divb
mov
pop
dec
push
inc
nop
imul
gs
or
jg
dec
sbb
pop
into
cmc
sti
imul
sbb
sbb
stos
and
aam
add
repnz
adc
lret
js
in
mov
std
or
jg
shl
es
mov
mov
xor
nop
stc
movsb
mov
into
jle
nop
or
aas
call
add
out
push
cltd
xchg
popa
or
dec
pop
gs
jl
hlt
aam
xchg
dec
imull
jno
mov
fwait
dec
nop
repnz
mov
loopne
inc
adcb
stc
xchg
mov
push
push
push
xchg
mov
nop
xchg
sbb
inc
jmp
movsb
into
pusha
nop
jecxz
fdivrl
push
push
inc
lcall
or
in
loop
cmc
outsl
nop
mov
xor
loope
add
dec
push
and
inc
mov
xorb
hlt
sub
jns
xchg
out
adc
xchg
mov
push
mov
adc
push
sbb
into
adcb
push
mov
sub
ss
mov
cld
ljmp
mov
nop
popa
adc
pushf
js
mov
jmp
fsub
bound
pop
fwait
mov
mov
fsubrp
shll
nop
pop
mov
loop
nop
cmpsl
pop
sbb
jo
and
nop
cli
cmp
fcoms
push
adc
aaa
out
scas
nop
sub
push
rcrl
addr16
mov
cmpl
xchg
loop
mov
movsb
xchg
int3
cmpb
or
jecxz
in
mov
nop
enter
fcoms
adc
push
cli
mov
cmp
pop
add
push
sar
aam
imul
mov
cmp
adc
or
loop
pushf
mov
ret
xchg
jae
je
popa
xchg
or
outsb
cld
call
jo
add
mov
aam
pop
fucomi
ss
sahf
push
mov
test
negl
adc
icebp
dec
mov
cmp
dec
push
xchg
lods
cltd
pop
rcl
pop
jns
stos
push
mov
ljmp
inc
xchg
fs
pop
xor
imulb
xchg
into
test
loope
dec
leave
nop
rcll
loop
nop
pslld
xor
and
and
adc
add
ljmp
stos
dec
mov
lds
inc
jno
add
ds
fs
xchg
xor
insb
or
fcompl
mov
push
push
mov
test
lods
mov
xchg
jmp
jo
mov
scas
fidivs
inc
ljmp
push
xchg
push
dec
nop
loope
jp
xor
sbb
pop
sub
bnd
nop
pushf
inc
gs
cltd
cs
lock
dec
je
adc
rcr
les
mov
or
mov
sbb
mov
add
add
adc
and
daa
pop
les
add
xchg
jne
add
jbe
aaa
lahf
push
mov
pop
mov
and
rorb
or
inc
dec
push
adc
jae
adc
gs
insl
cli
jno
mov
and
add
or
scas
add
push
sbb
sub
or
nop
adc
ds
lahf
xchg
clc
pop
lcall
pop
lock
jmp
mulb
or
xor
jns
cmpsl
out
ljmp
jmp
mov
jecxz
cwtl
mov
cmp
pop
lret
xchg
cmovno
jns
push
nop
pop
pop
pushf
mov
call
mov
out
movsb
jno
pop
add
jae
cs
jnp
loop
push
mov
add
fwait
popa
add
addr16
adc
jmp
lahf
adc
sbbb
out
divl
mov
rclb
pop
or
inc
xor
dec
ljmp
orb
pop
subb
fcompl
add
cmpsl
xlat
mov
mov
bound
pop
pop
sbb
lods
test
ljmp
dec
mov
pushf
or
inc
inc
scas
dec
mov
fldenv
mov
mov
jae
cmp
mov
inc
inc
stos
mov
lcall
mov
or
rcr
nop
mov
mov
pop
xchg
pushf
lods
mov
addr16
mov
je
xchg
push
mov
jl
cmc
adc
inc
outsb
test
stos
sahf
or
into
les
mov
aam
icebp
dec
push
fiadds
jge
and
lds
add
mov
lret
jecxz
dec
push
test
sbb
dec
cmp
sbb
clc
mov
jnp
mov
mov
dec
addr16
cmp
loope
fnstsw
nop
or
dec
imul
popa
lret
jns,pn
xchg
xchg
nop
xchg
xchg
sarb
outsl
sub
aaa
jp
jl
jb
mov
dec
nop
pop
test
in
or
mov
sbb
mov
cmp
mov
data16
mov
jg
ret
push
cwtl
fists
dec
dec
nop
imul
jle
std
scas
jnp
or
push
mov
lret
mov
or
cmp
popa
stos
add
inc
xchg
nop
lods
cmp
and
mov
mov
out
sarb
fimuls
inc
cmp
pop
xor
into
nop
shl
dec
jecxz
jo
nop
data16
lock
aas
insb
clc
push
loopne
cmpxchg
mov
mov
xor
stos
fnstsw
mov
ja
xchg
jae
lods
and
fbld
daa
adc
push
mov
and
pop
mov
adc
cmp
sub
test
aaa
pop
dec
shlb
mov
nop
fwait
in
cs
sub
clc
or
cwtl
inc
aaa
sbb
sbb
mov
and
out
nop
ror
mov
xchg
lods
nop
outsl
mov
lahf
mov
xlat
push
jecxz
xchg
mov
arpl
aam
test
xor
cmp
mov
nop
sub
push
adc
adc
inc
cltd
and
jnp
andb
sbb
jecxz
fiaddl
or
fldenv
and
imul
xchg
nop
stc
cmp
or
or
sarb
hlt
test
push
adc
aam
or
mov
out
inc
nop
bound
or
xor
jae
jmp
adc
insb
adcb
aad
dec
pop
gs
and
xchg
cmp
fidivrl
in
jl
popa
nop
and
add
pop
sbb
adc
push
cmp
pop
sbbb
push
and
xor
aas
aam
bnd
xchg
fdiv
pop
adc
pop
adc
cmpsl
nop
call
mov
outsl
adc
or
loop
test
mov
or
inc
xchg
pop
nop
inc
jmp
rcll
bound
xor
pop
and
ljmp
jmp
pusha
mov
arpl
pop
mov
inc
jle
pop
add
and
movsb
jne
xchg
out
jnp
jb
mov
pop
mov
les
arpl
inc
pop
xchg
push
nop
xor
and
pushf
cld
add
add
mov
jle
xchg
mov
lahf
jb
shrb
jnp
add
cld
inc
mov
mov
pop
adcl
mov
in
fbstp
and
or
pop
lock
cwtl
sbb
push
outsb
ficoml
cli
xchg
xor
loope
push
add
jns
inc
adcl
ret
nop
cli
mov
dec
andl
adc
out
scas
int
or
pop
sahf
jb
imul
sbb
hlt
dec
nop
int3
and
nop
lcall
jmp
xchg
xlat
adc
fsts
inc
xor
push
shlb
sub
add
imul
or
pop
mov
rolb
mov
sti
lret
test
jmp
push
hlt
test
or
ljmp
scas
sti
sbb
pop
or
mov
pop
lds
pusha
mov
mov
nop
pop
mov
pushf
dec
xor
add
fistpl
nop
cld
cmp
outsb
fbstp
aad
sbb
cltd
xchg
mov
ror
or
fucomi
xor
add
mov
das
add
jno
lds
aad
nop
stos
insl
push
lock
inc
sub
mov
in
adc
xor
inc
scas
xor
lods
lret
lahf
mov
cmp
ja
jge
pop
sub
jno
adc
inc
shrl
xor
or
sbb
mov
nop
jge
jg,pt
imul
fnstenv
scas
add
jecxz
xor
nop
das
push
mov
nop
out
gs
fisttpl
into
mov
mov
jb
cli
ret
pshufw
out
je
lret
push
fistpll
in
or
insb
mov
pop
jl
xchg
mov
scas
adc
movsl
andl
hlt
clc
jecxz
nop
dec
sbb
std
nop
mov
mov
arpl
xorl
push
xchg
nop
dec
jne
frstor
movsb
xchg
mov
ret
sbb
jmp
dec
ret
lock
sbb
pop
sbb
xchg
cltd
pmaxub
aam
lock
mov
ljmp
cltd
push
fnop
sub
nop
fsubl
push
adc
push
rcr
xchg
nop
int
push
repnz
call
cmp
lret
push
adc
xchg
xchg
mov
sti
xchg
rol
mov
xor
nop
mov
bsf
jle
rcll
push
mov
icebp
arpl
daa
vaddsubpd
fsubl
mov
movsl
into
nop
clc
push
sub
in
add
lods
mov
test
nop
scas
fxch
cmpsl
jp
mov
movsb
int
nop
xor
ss
cltd
insl
repz
jmp
or
ss
in
fsubs
mov
lods
jp
xchg
xchg
push
pop
push
fimuls
outsl
add
dec
nop
ja
cltd
sub
jge
sbb
das
sbb
jne
inc
arpl
mov
gs
nop
add
pop
repz
lcall
test
mov
cltd
bound
imul
leave
mov
shl
mov
xchg
les
insl
nop
xlat
ss
dec
arpl
add
int3
inc
adc
ljmp
nop
sbb
jge
sub
out
loop
adc
sub
dec
ds
hlt
test
jp
pop
or
fisubrs
adc
cmpsl
pushf
xchg
and
push
sub
cwtl
iret
test
fadd
mov
pop
nop
sbb
adc
dec
mov
cmc
adc
enter
jge
out
lret
push
negb
in
adcb
ds
insb
or
jecxz
aad
lret
nop
setle
nop
adc
in
jecxz
or
ljmp
cmp
stos
nop
mov
push
jbe
fnsave
mov
jmp
or
xchg
movsl
scas
lds
nop
shlb
jp
inc
and
enter
fmuls
pushf
js
mov
jno
add
mov
pusha
pop
adc
xor
out
ret
movsl
nop
mov
and
xor
mov
adc
xchg
insb
mov
adc
call
mov
loopne
sbb
test
jecxz
adc
imul
call
add
rolb
push
jae
cmpb
xor
insl
cli
adc
push
mov
aam
test
nop
jno
push
mov
mov
in
mov
ret
mov
jle
add
lahf
in
cld
imul
mov
outsl
xlat
adc
test
cli
dec
hlt
aas
nop
rorl
ljmp
insb
push
sbb
sahf
out
jp
test
les
pop
sbb
mov
adc
xchg
push
push
xor
adc
push
fisttpl
jecxz
add
add
pop
sbb
or
pop
test
rcrl
loope
fdivrl
shlb
ds
int3
mov
cmc
inc
fwait
adc
icebp
lea
pop
andb
nop
sbb
dec
jg
or
mov
mov
aad
fldcw
fsubrs
mov
push
dec
fldcw
int3
xor
call
das
movsl
push
push
daa
mov
pop
mov
add
es
cmpsb
mov
pop
pop
pop
cli
mov
nop
test
and
icebp
nop
sub
push
push
pop
nop
sub
dec
call
enter
mov
mov
mov
jno
ret
or
push
orb
adc
cmpsb
mov
aaa
nop
test
inc
popa
lods
int
jge
mov
ss
stos
nop
ja
fisubl
stos
mov
push
xchg
pop
mov
popa
adc
jb
push
and
and
imul
bound
pop
sbb
hlt
ret
fs
fmuls
sub
sbb
out
push
neg
inc
jne
nop
fistl
ficoms
jae
push
push
dec
jp
loopne
decb
jns
or
pushf
jb,pt
out
js
nop
imul
es
xor
push
cmp
push
in
xchg
sbb
xchg
dec
shl
pop
movsl
insb
or
nop
leave
test
nop
sub
and
aad
nop
inc
mov
xorb
cmp
xchg
jae
addl
xchg
fadds
pop
inc
fstl
aam
loop
or
mov
addb
nop
mov
scas
jl
nop
pop
mov
push
ficompl
push
adc
xor
mov
jns
jne
les
push
nop
sbb
cmp
movsl
lock
mov
sti
cmp
adc
xor
and
popf
fsts
sar
lods
jne
pop
repnz
and
hlt
cli
nop
fnsave
lret
jg
nop
icebp
push
and
cwtl
xchg
pop
lds
mov
jno
rol
mov
lods
cmpsl
lds
lods
ret
push
inc
call
loope,pt
pop
call
lods
popa
mov
xchg
dec
js
movsl
sarb
cmc
cwtl
mov
mov
jno
fsubrs
jle
fs
or
loope
dec
rclb
jbe
fsubrp
mov
aad
xchg
inc
pop
push
mov
or
sub
jle
mov
andl
test
cwtl
inc
and
lock
pushf
xchg
nop
inc
push
fistps
nop
add
cmp
stos
sbb
outsb
das
nop
pop
int3
jp
fs
mov
lcall
stos
inc
xor
and
cmp
sub
jmp
movb
pop
lods
mov
mov
or
push
repz
shll
arpl
nop
mov
sub
and
outsb
mov
cmp
stc
in
dec
nop
add
xor
mov
nop
fwait
movsb
popf
xor
cmp
push
out
fisttps
arpl
sbb
inc
shlb
and
pop
pop
adc
in
shlb
mov
out
loopne
mov
xchg
cmp
shr
mov
mov
dec
gs
adc
scas
xchg
rcll
jmp
cs
push
addr16
cmp
mov
pusha
cmpb
mov
push
lock
mov
fistpl
aad
popa
push
fwait
data16
mov
or
add
pop
xchg
movsb
inc
nop
push
loope
out
xor
pusha
nop
mov
sbb
in
push
and
or
or
fmull
pop
cmp
dec
and
pop
fisubl
sub
or
add
sahf
or
push
mov
inc
cltd
popa
jae
adc
call
adc
mov
nop
inc
lret
aam
rorb
test
pop
scas
pop
arpl
movsl
ficoml
adc
out
push
and
jns
lock
mov
cwtl
mov
push
push
pop
nop
in
mov
loope
js
in
ljmp
mov
fnstenv
cmp
outsl
sub
mov
lds
inc
sets
dec
jl
enter
inc
jb
sub
sub
rclb
ret
pop
sbb
sub
mov
sti
sub
add
inc
pop
sarl
mov
fmull
pop
insb
lret
add
wrmsr
icebp
ja
push
loopne
adc
jge
xchg
rcr
mov
push
mov
sbb
shlb
mov
add
scas
scas
mov
nop
jb
mov
test
pushw
or
int3
lahf
pop
andl
jnp
dec
sub
sub
insb
lock
xchg
ret
js
insb
mov
fmulp
loope
mov
movsl
pop
xor
xchg
shrl
or
mov
sub
mov
jl
js
push
push
mov
fstl
lods
mov
push
nop
shll
xchg
and
mov
mov
in
test
or
dec
nop
push
sbb
nop
cmpsb
fsubs
mov
mov
rclb
movsb
andl
adc
jno
lcall
xchg
popa
nop
push
jmp
aad
nop
mov
bound
aas
outsb
dec
pusha
dec
inc
rcrl
adc
pop
call
adc
pushf
hlt
push
test
xacquire
inc
ret
jbe
xchg
js
rcll
insb
dec
popa
nop
xlat
jb
call
xchg
ficoml
adc
fadd
xor
or
lods
test
nop
mov
or
stc
nop
test
mov
mov
outsl
je
gs
mov
add
sbb
mov
and
push
mov
fsubrl
add
sbb
jle
test
pop
aad
jno
orl
push
negl
lcall
pushf
out
cs
xchg
arpl
xor
nop
mov
and
xor
iret
jbe
or
jl
cmpsl
dec
out
sub
shl
push
andps
jl
or
mov
nop
repz
icebp
pop
sub
mov
aas
ja
in
test
dec
mov
daa
sbb
pop
mov
add
popa
pusha
jae
gs
xlat
or
clc
mov
jp
sbb
nop
arpl
daa
jmp
sbb
push
mov
mov
adc
push
push
out
jae
nop
lds
call
insl
nop
mov
test
push
nop
push
add
nop
pop
jecxz
movsb
xchg
xor
adc
mov
lea
xor
pop
nop
dec
mov
ffreep
iret
push
rclb
inc
mov
stos
sbb
add
pushf
test
adc
outsb
clc
leave
or
ljmp
lock
nop
enter
cmpsl
push
pushaw
adc
js
xchg
dec
sahf
mov
nop
in
cmp
or
call
loope
gs
pop
push
sub
iret
fwait
pop
push
nop
jbe
cmp
sub
je
and
fldt
xchg
ret
data16
fbld
sub
mov
mov
mov
lods
pop
inc
sub
cmp
and
nop
out
mov
cltd
nop
jbe
aas
push
lods
add
es
lret
nop
jle
xchg
jge
int
hlt
leave
or
lret
rclb
stc
inc
inc
je
imul
lret
and
mov
xor
test
ret
fbstp
adc
sub
in
sarb
jnp
inc
subl
cmp
cmp
pop
mov
cwtl
mov
rcll
fucomip
std
mov
in
mov
ds
pop
sub
add
mov
cmp
mov
xor
out
adc
sub
and
push
adc
insl
imul
push
in
inc
jl
lcall
xchg
and
mov
sub
sub
loopne
notb
test
loop
sahf
in
push
movsl
les
xor
nop
js
lock
push
imul
andl
push
ds
mov
pop
mov
les
mov
int
roll
cmp
ja
cmpsl
or
sub
mov
cltd
jmp
or
dec
test
pop
adc
leave
mov
nop
fdivs
add
sub
stos
nop
outsb
cli
or
dec
adc
jo
mov
faddl
mov
cmp
lods
ret
mov
mov
repnz
pop
jp
nop
leave
mov
aam
adc
jno
inc
pop
nop
mov
mov
pop
out
mov
arpl
adc
nop
shll
jne
nop
jbe
lret
test
test
or
xchg
mov
cs
jecxz
mov
xor
arpl
ljmp
jle
fwait
push
nop
stc
xchg
lods
movsl
jo
cwtl
jno
cmp
je
jg
pusha
inc
or
inc
mov
push
sub
iret
hlt
pop
mov
xor
cmc
addr16
jb
mov
mov
seto
push
aad
dec
rcll
xor
shll
mov
in
jns
movsl
fdivrs
stos
adc
std
inc
popa
push
scas
nop
addr16
cli
mov
jge
nop
orb
push
inc
fnstsw
xchg
cld
sub
pop
aaa
pushf
nop
mov
pop
jp
mov
dec
or
adcl
es
sarb
cwtl
mov
nop
std
and
pop
pop
pop
sbb
roll
or
adc
add
xor
hlt
xor
sub
mov
mov
pop
int3
nop
jge
shr
dec
dec
jo
fs
or
dec
dec
fsubr
jmp
nop
test
cli
cmp
pop
ret
out
adc
dec
cmp
xchg
jo
insb
movsl
cs
jns
ficomps
test
mov
jno
mov
scas
fs
popa
jge
fsubr
into
nop
adc
sub
in
imul
mov
xorl
out
jg
and
mov
mov
nop
adc
outsl
xor
adc
xchg
int
test
das
cmc
sub
mov
sahf
sbb
inc
rol
add
test
scas
clc
sub
add
adcb
fisttpll
int
in
lahf
push
test
test
cmp
push
dec
fiadds
pop
xor
lds
add
pop
loopne
mov
xor
xchg
nop
jne
pop
call
or
xor
nop
frstor
stc
ret
or
xchg
fldenv
mov
adc
push
push
lock
imul
sbbb
dec
nop
bound
add
mov
ljmp
in
insl
repz
nop
fnstenv
xchg
xor
mov
mov
xchg
adc
and
mov
dec
nop
test
push
nop
mov
mov
jns
orps
sub
out
cmp
int3
jecxz
nop
mov
mov
and
in
dec
push
cmp
mov
and
push
or
sbb
add
pop
lret
faddl
adc
nop
or
jnp
push
lds
dec
jg
xchg
mov
enter
ja
mov
dec
lret
mov
mov
adc
iret
into
push
pop
cmp
or
jge
lock
mov
nop
pop
pop
or
or
dec
xor
pop
enter
cmp
ja
adc
sub
jp
xor
push
popa
out
jb
nop
mov
jo
lgs
adcb
nop
rcrl
fsub
add
add
popf
mov
xchg
gs
or
adc
nop
mov
mov
nop
leave
mov
scas
nop
pop
call
pushf
and
insl
adc
pusha
cmp
xchg
xor
rorb
nop
xor
sbb
fiadds
lret
nop
shrd
jl
xchg
adc
imul
adc
push
movsw
nop
lock
xlat
fsubrs
mov
stc
or
jnp
nop
xor
xlat
hlt
add
lcall
fwait
sub
xlat
nop
jo
and
push
lds
or
pop
adc
pop
enter
nop
movnti
iret
pop
lods
fdivs
pusha
cmpsl
cwtl
aam
ret
in
xor
lods
nop
dec
mov
nop
cmp
call
nop
popf
out
adc
sbb
lret
cmp
sub
bswap
int
fstpt
xchg
fdivrs
inc
jge
pop
ret
outsl
nop
test
jae
leave
aaa
ljmp
xchg
and
sbb
popf
add
xor
outsl
lahf
nop
jge
pop
jbe
scas
add
inc
fnsave
les
cmp
mov
fwait
sbb
mov
xchg
cli
adc
push
mov
arpl
xor
je
mov
loope
rcrb
shll
pop
test
push
out
rol
je
sahf
ret
xchg
push
mov
mov
xchg
test
fidivs
dec
pop
mov
push
adcl
mov
icebp
cmp
ljmp
es
sbb
dec
mov
and
sub
nop
fildll
pop
data16
cld
xchg
pshufw
xchg
and
dec
xlat
mov
adc
nop
clc
cmp
test
nop
mov
cli
mov
push
lds
aas
loope
cmp
stc
nop
pop
mov
movsb
cmp
pushf
inc
cmp
lds
mov
lods
adc
or
push
aas
jb
insb
and
sbb
sub
jle
cmp
mov
nop
lret
inc
push
imul
nop
mov
pushf
jecxz
xor
pop
xor
nop
sub
dec
xchg
cltd
adcl
stos
nop
arpl
fisubs
and
mov
nop
es
idivl
lods
adcb
adc
movsl
inc
repz
fnsave
add
or
lock
cmc
daa
les
push
nop
aam
mov
nop
mov
div
cmp
inc
icebp
adc
sti
pop
xor
fsubrp
outsb
nop
adc
movsl
in
add
lock
inc
and
inc
fsubrl
out
or
adc
or
xchg
adcl
dec
lock
sarb
jge
dec
test
push
insl
mov
mov
fdivrs
jle
inc
nop
cli
push
sbb
xchg
add
xchg
pop
mov
lods
add
pop
push
xchg
lock
enter
jae
xchg
push
adc
and
push
fbld
cmp
nop
xchg
add
bound
imul
aad
mov
mov
mov
or
mov
std
jb
lock
dec
fmull
cmp
push
inc
jl
sbbb
lret
xchg
pop
enter
nop
lahf
insl
repnz
fs
nop
mov
outsl
out
jecxz
nop
aam
fwait
adcb
sub
sti
nop
jne
pop
xchg
out
push
mov
jge
push
and
sti
inc
nop
push
sub
xor
nop
push
sbb
ret
fisubrs
jae
or
cmpb
ljmp
push
inc
xor
ret
push
js
mov
popf
or
jae
inc
repnz
clc
sti
or
fcoml
pop
mov
or
repz
lahf
sbb
fadds
xor
push
pop
mov
daa
and
xor
shrb
nop
rcl
std
and
sbb
in
pop
in
sti
loopne
test
inc
dec
divb
mov
sbb
jbe
sub
das
sub
nop
aad
int
mov
and
lret
loopne
mov
cmp
adcb
add
out
mov
rcll
add
mov
xchg
mov
lea
int3
lcall
stos
cmp
or
bnd
sbb
push
sub
push
or
and
lret
nop
cmp
add
lods
and
je
loopne
cmp
sarb
jne
xor
pop
clc
addl
fstl
dec
into
adc
or
fiaddl
inc
pop
pop
adc
out
in
jns
jl
mov
nop
adc
sub
nop
shrl
inc
mov
bound
add
clc
repnz
add
and
lcall
xchg
subb
scas
nop
cmp
mov
dec
push
int
cwtl
mov
test
into
stos
loop
sub
sub
and
xchg
test
sub
ja
test
nop
jp
push
xor
nop
aad
pop
mov
mov
in
pop
popa
inc
jl
or
aaa
loopne
loop
loopne
nop
mov
lods
std
and
mov
xchg
adc
movsb
stc
sub
xor
movsb
xlat
dec
nop
ja
cli
gs
pop
mov
not
aad
xchg
cmp
sbb
dec
sti
aad
mov
adc
data16
mov
out
aam
nop
ja
dec
mov
fcmovne
xor
xchg
sahf
xor
ficoms
xchg
loop
neg
test
inc
push
pop
loop
mov
add
push
repz
sahf
into
outsl
icebp
mov
fndisi(8087
xchg
adc
shrl
adc
in
out
aam
sbb
sub
sub
xor
rclb
lret
pop
jmp
cmp
sti
dec
xchg
iret
test
mov
pop
adc
hlt
inc
lods
adcb
fildl
pop
xchg
testl
pop
sub
mov
nop
pop
sti
lock
jo
out
mov
mov
and
or
pop
mov
sub
inc
inc
fidivs
rcr
rcrl
sub
rcl
xor
add
in
repnz
out
sub
jae
js
adc
push
nop
iret
push
xor
sbb
dec
sbb
add
cwtl
ja
jbe
cmp
xor
loope
or
push
shl
js
int3
adcl
nop
add
rcrl
adc
xchg
dec
dec
jne
or
mov
inc
inc
cld
cwtl
lock
fs
adc
push
pop
jno
jbe
lea
loopne
fcmovnu
fisttpll
jp
push
stos
sarb
daa
inc
lcall
adc
xor
icebp
int3
xchg
stc
xchg
mov
add
insb
or
xchg
nop
mov
scas
jg,pt
mov
cmp
nop
fcom
stos
loope
xchg
nop
add
jge
xchg
in
mov
pushf
js
inc
shrl
nop
shlb
xchg
decb
mov
or
xlat
inc
nop
sahf
add
std
nop
rolb
ljmp
and
scas
inc
and
push
sbb
loopne
call
nop
or
sbbb
inc
pushf
nop
sub
mov
lea
rorb
mov
xor
lret
cwtl
cmpsb
cmp
add
adc
jo
mov
jge
enter
ja
es
cs
lds
push
or
movhps
mov
iret
xchg
push
loop
mov
cmc
shlb
push
mov
add
jns
sti
hlt
stos
nop
cmp
jg
inc
cmp
dec
nop
adc
mov
sub
dec
nop
pop
mov
pop
stos
test
test
xchg
add
aad
cmpsb
nop
cmp
icebp
les
jno
dec
adc
and
int
mull
jne
sub
jno
loopne
pop
cmpsb
jle
or
loope
inc
nop
lcall
aam
xor
xor
nop
xchg
jge
push
xchg
clc
adc
xor
add
loopne
dec
nop
scas
mov
stos
nop
lods
inc
cld
loope
xchg
stc
orl
mov
lea
pop
jbe
rclb
fwait
lods
sub
jo
sarb
sub
push
jge
fdivrs
js
adc
fidivs
je
in
ljmp
jmp
cltd
push
addr16
jno
andnps
or
mov
pop
lock
pop
test
in
nop
mov
insb
or
nop
shrb
jg
fldl
cmp
xor
maskmovq
testl
sub
jo
loope
insl
call
arpl
mov
test
mov
js
mov
xchg
cmp
cmpsl
cmp
jl
test
push
push
mov
jmp
push
pop
cmpsb
add
xor
push
call
push
nop
pop
cs
mov
nop
clc
jbe
adc
rcll
test
jmp
cltd
adc
cmp
orb
pop
add
rorl
addr16
pop
nop
sub
jns
jmp
nop
xchg
rcrb
dec
int3
xor
out
enter
pop
pop
nop
hlt
jb
jecxz
stos
push
sub
mov
push
repz
data16
jecxz
scas
nop
inc
cli
pop
and
sub
shrl
nop
dec
scas
or
nop
ffreep
push
hlt
cmpsl
out
lods
push
js
jp
mov
cmp
push
mov
sbb
jo
int
nop
adc
pop
mov
in
xchg
out
test
push
push
inc
and
sbb
insb
dec
loop
cmpsl
nop
push
sbb
add
subb
inc
loopne
lret
pause
xor
mov
pop
push
nop
and
aad
ficoml
push
or
cmpsl
or
nop
gs
cs
pop
pusha
adc
adc
nop
testl
outsb
mov
sub
mov
cmpsb
jl
adc
pop
nop
test
out
cmpl
lds
sub
mov
in
outsb
in
nop
cmp
pop
scas
xchg
cmp
paddb
insb
int3
lret
nop
fildl
adc
push
ss
rclb
mov
lock
pause
loope
mov
out
cmp
and
stc
xchg
hlt
popa
nop
icebp
je
xor
nop
ds
cmpsl
aad
pop
sub
add
and
lock
mov
cmp
popw
dec
jg
xlat
lahf
stos
dec
jae
nop
into
push
es
cmp
cld
icebp
loopne
or
fistps
mov
mov
nop
xor
and
push
jp
add
push
mov
icebp
pusha
nop
imul
xchg
hlt
rol
or
in
jae
mov
lea
mov
ja
divb
insl
jl
das
shrb
fisttpll
clc
nop
jns
mov
cmp
and
lods
mov
pop
mov
mov
push
mov
dec
nop
jne
add
jns
nop
dec
mov
cmp
mov
dec
cs
aam
mov
out
push
mov
mov
push
js
iret
or
and
dec
inc
cli
faddp
ret
pop
repnz
dec
fildl
push
shrb
mov
inc
cmpsb
fnstenv
call
aad
nop
pop
add
sbb
mov
js
fwait
mov
std
rol
push
dec
and
lds
mov
adc
pop
dec
cld
fisttpll
in
mov
mov
pop
ror
or
negl
rcrb
mov
xchg
xor
nop
mov
mov
fidivrs
adc
and
sub
fcos
js
pop
imul
ret
sub
pusha
nop
cs
mov
arpl
lret
dec
adc
push
mov
pop
adc
and
push
test
nop
lahf
push
sub
adc
cs
fmuls
mov
pusha
or
mov
xchg
adc
nop
and
stos
cmp
pop
nop
or
dec
xchg
nop
cmp
test
and
mov
push
add
push
mov
mov
nop
fs
ds
mov
mov
lret
mov
leave
push
jnp
test
jns
xor
jg
pop
loopne
pop
mov
popf
shrb
mov
nop
addb
les
shrl
cmp
xchg
mov
xlat
pop
mov
or
daa
xorl
nop
inc
xchg
enter
dec
jg
mov
seto
cwtl
sbbl
pop
nop
lcall
adc
xor
pop
ljmp
dec
pop
push
push
adc
adc
mov
inc
mov
popa
nop
adc
mov
les
dec
sub
ja
rclb
mov
mov
add
push
fs
and
push
jae
sub
nop
jg
or
popf
nop
xor
cltd
repz
push
xchg
lcall
sub
fsubrl
div
cwtl
or
or
mov
xchg
std
sbb
nop
mov
idivb
add
repz
nop
xchg
icebp
and
push
dec
jns
les
call
imul
loopne
mov
icebp
lock
aam
jo
nop
sahf
lcall
xor
movsl
adc
lret
lods
sbb
out
nop
lcall
stos
nop
ds
add
add
ficompl
pop
shl
insb
jmp
xchg
stc
mov
and
insl
mov
nop
mov
inc
shrb
popf
loop
int3
mov
cmpsl
mov
xchg
mov
mov
in
adc
or
enter
inc
xor
out
pop
cmp
movsb
mov
icebp
xchg
rclb
scas
cltd
inc
nop
mov
lods
lcall
or
nop
and
mov
mov
mov
push
pop
pop
ret
cltd
fs
nop
or
shll
dec
adc
mov
nop
jo
sub
test
jmp
adcb
pop
or
and
push
shll
frstor
add
mov
xchg
sti
cmp
imul
nop
test
insl
in
cmpsb
sub
or
mov
hlt
jp
jo
inc
les
mov
xchg
lcall
nop
add
pushf
sarb
sub
jns
and
shl
fisubrs
dec
repnz
mov
sub
dec
xchg
inc
push
dec
add
popf
and
cs
sahf
push
imul
mov
or
call
cmovo
push
push
shl
nop
push
fcmovnb
mov
pop
jae
push
mov
sub
dec
nop
dec
rolb
fistpll
inc
ficoml
push
bound
push
fwait
mov
xchg
push
sti
int
jo
test
jne
dec
mov
inc
call
cmpsb
lods
pop
and
fistps
scas
les
sarb
cmp
dec
filds
nop
jp
cmp
orb
mov
pop
out
push
repz
mov
mov
outsb
sbb
mov
ss
cmpsl
xor
dec
xchg
push
mov
xchg
jmp
xchg
and
call
inc
std
add
test
lcall
add
nop
cmpsb
gs
ret
nop
xor
or
dec
icebp
add
shl
call
lahf
cmpsl
dec
ret
test
out
nop
int
iret
idivl
in
mov
shl
jl
icebp
xchg
hlt
fcomip
push
jmp
jns
adc
pop
leave
popa
nop
cmp
idivl
dec
in
mov
icebp
lret
add
ss
inc
mov
jmp
xor
aaa
sbb
or
clc
mov
shlb
ljmp
push
fmuls
pop
xor
std
cli
mov
lcall
shlb
xor
fs
or
jle
outsl
dec
dec
xchg
insb
lods
mov
push
jne
and
out
cmc
enter
sub
jne
push
add
sbb
imul
mov
sub
pop
sbb
js
mov
adc
insl
cmp
outsl
dec
int3
gs
nop
test
cmp
in
leave
xor
nop
lea
xor
cmp
xchg
xor
push
jmp
rclb
xchg
cs
cmpsb
in
shll
sar
xchg
push
push
adc
sbb
or
movsb
nop
sti
loopne
cs
addl
aas
int3
jb
orb
adc
rclb
mov
movsb
out
nop
jmp
aaa
mov
ret
nop
push
cwtl
sbb
ljmp
out
pusha
sub
std
jbe
mov
ja
ja
mov
mov
push
adc
dec
jmp
arpl
add
mov
or
sti
cmc
je,pt
aam
stos
adc
nop
icebp
int
pop
push
lahf
nop
lcall
mov
xchg
jge
and
jbe
nop
push
sbb
sub
mov
pop
pusha
mov
push
dec
add
mov
sahf
sub
nop
lock
das
shrb
pop
mov
nop
ficoms
push
or
cs
lahf
jl
data16
nop
or
push
push
dec
sub
nop
es
ss
in
scas
mov
xlat
pop
pusha
aam
add
ret
mov
inc
dec
loopne
shlb
repz
loopne
cmp
push
xchg
jg
xor
mov
or
cmp
push
arpl
xlat
lods
mov
sahf
addl
adc
jg
jns
lds
subb
mov
xchg
pop
sub
and
cld
add
sbb
xchg
pop
lcall
leave
fldt
or
mov
xor
sbb
push
push
jo
packuswb
ja
xor
lcall
roll
loopne
mov
xchg
xchg
nop
lret
daa
into
pop
shl
ja
xor
cmpsb
or
test
out
popa
nop
push
pusha
insl
push
aas
in
or
xchg
test
or
das
cs
cmp
cmp
cmp
nop
inc
mov
out
sub
in
jno
js
add
jne
int
nop
adc
aad
mov
loopne
jns
xchg
negb
je
inc
dec
out
mov
lods
xchg
icebp
pushf
mov
jbe
inc
test
aaa
lret
pop
push
movsb
inc
pusha
xchg
mov
icebp
add
into
or
nop
jae
push
cltd
jge
mov
or
inc
aas
cvtdq2ps
or
mov
int
lods
pop
push
adc
fstpl
nop
adc
jno
cmc
out
mov
push
nop
subb
loope
pop
mov
lods
xchg
std
sbb
push
cmp
fs
jl
xor
fwait
clc
into
nop
dec
pop
rorl
sbb
xor
lea
pop
fcompl
fistl
jmp
test
xchg
cmp
pop
mov
mov
mov
out
pop
mov
cmp
inc
loope
dec
stos
js
mov
or
jl
outsb
adc
jecxz
nop
icebp
in
inc
pop
je
inc
bound
loopne
loope
pop
push
hlt
addb
push
or
or
test
rcl
inc
sbb
fmul
pop
fists
add
sarl
ds
adc
nop
jbe
and
mov
arpl
data16
adc
and
mov
mov
cmp
add
and
dec
cs
call
mov
lock
ljmp
fninit
lods
divb
and
mov
outsb
dec
xor
hlt
sub
jle
je
cmp
jge
fisttps
nop
inc
shlb
xchg
xorb
mov
dec
cmpsl
clc
xchg
outsb
mov
mov
xor
pushf
adc
nop
ficompl
push
loop
jo
nop
scas
mov
add
and
inc
mov
stos
sti
mov
and
hlt
sti
aaa
aad
adc
cli
jecxz
dec
mov
jae
adc
lcall
ljmp
inc
adc
rcll
shld
jl
jae
cmp
mov
mov
ds
mov
bound
jecxz
add
cwtl
mov
xlat
push
xchg
xchg
out
mov
and
mov
nop
daa
and
dec
push
pusha
mov
or
and
pop
inc
adc
sahf
dec
pop
cwtl
xor
repz
xchg
mov
xor
or
add
je
adc
fwait
mov
mov
jno
nop
fistpl
xor
nop
fsubrl
pop
inc
stos
jle
xor
xchg
rorb
loope
cmovle
and
mov
add
mov
scas
sar
lds
xchg
in
fcmovnbe
add
lcall
add
pop
jl
mov
aad
mov
or
ret
sub
push
and
jle
rcrb
arpl
nop
roll
push
lock
jle
add
pop
and
bound
jns
shrb
jl
pop
lret
in
sub
xchg
dec
cmpsl
mov
push
and
mov
push
and
mov
and
rcrb
xor
nop
decb
add
cli
xchg
nop
mov
sub
xor
neg
sarl
gs
lcall
dec
int3
xor
pop
pop
pop
sbb
enter
sub
dec
insl
xchg
addb
adc
lea
loope
cs
sub
mov
or
lock
adc
fsubrl
loop
pusha
nop
fiaddl
xor
push
nop
outsb
fsubrs
adc
and
jno
fisttps
mov
jecxz
nop
mov
sbb
pop
mov
sub
into
mov
inc
mov
xor
dec
addb
mov
push
movsl
push
adc
or
int3
xchg
push
sahf
inc
fdiv
dec
or
dec
jnp
mov
and
xlat
xchg
or
and
fcoml
orb
pushf
aaa
aas
mov
cs
jns
rcr
movsl
inc
push
mov
xor
push
fwait
fwait
xchg
sub
loop
mov
mov
jno
push
adc
ret
cmp
xchg
add
sbb
nop
add
push
sti
es
jmp
jo
stc
cmp
pop
nop
lret
pushf
and
lds
orl
aam
popf
loope
jecxz
jmp
jnp
xchg
clc
xchg
nop
add
jge
ss
push
nop
mov
lret
loope
addr16
xchg
adc
sti
aas
int3
jmp
jnp
fcomps
jge
xor
stos
iret
leave
ljmp
mov
xchg
jb
pop
scas
push
jo
push
mov
in
nop
movsb
pusha
jg
xchg
dec
lds
xchg
test
sub
int
or
push
mov
mov
nop
pop
in
xlat
loopne
les
rol
push
lock
iret
jg
pop
dec
enter
add
rolb
pop
or
leave
cltd
scas
shlb
fmuls
rcll
push
dec
sbb
xchg
hlt
nop
fidivs
sbb
jae
sub
xor
popl
lock
popf
mov
int3
dec
test
nop
sbb
fwait
add
test
nop
or
das
ds
pop
nop
push
cmp
push
sub
nop
push
dec
bound
fdivrl
sti
jns
cwtl
mov
shl
add
lods
lahf
clc
and
icebp
pop
xor
push
xchg
jb
or
inc
imul
pop
out
and
pop
mov
insb
leave
pop
ja
addl
push
inc
push
mov
dec
nop
test
jbe
mov
stos
out
xchg
push
imul
pop
nop
push
loope
into
inc
add
arpl
iret
cmpsl
std
mov
adc
lret
fidivrs
or
rcrl
or
nop
jg
addr16
outsb
stos
nop
sarb
push
pop
mov
ds
ja
add
sbb
pop
xchg
cmove
dec
aam
ds
and
es
daa
adc
rcrb
nop
hlt
and
test
stc
ljmp
xor
aaa
repnz
inc
adc
xor
mov
or
xchg
sahf
ja
mov
fcmovu
cmp
fidivrs
cmpsl
xchg
inc
rcll
and
add
xlat
add
mov
mov
cmp
push
cs
mov
jecxz
jmp
lds
nop
add
or
nop
sbb
imul
inc
adc
or
fcomps
fcoms
cmp
lock
pop
loopne
mov
add
mov
negl
call
jecxz
nop
mov
or
scas
adc
pusha
sub
insb
mov
adc
inc
mov
outsb
jge
icebp
outsl
ss
cld
mov
nop
lcall
das
nop
xor
mov
mov
jbe
loop
ljmp
cmp
das
jmp
sub
ja
js
prefetchw
xchg
ror
stc
nop
outsb
je
push
insb
push
pop
out
dec
add
hlt
mov
mov
jg
add
mov
test
loopne
nop
xchg
jae
out
add
xchg
pop
iret
nop
jno
fmuls
scas
stos
mov
movsl
aas
shlb
push
add
inc
in
popf
fisttpl
sbbl
jmp
mov
popf
jb
xor
nop
sub
mov
aam
nop
sbb
movsl
rclb
mov
inc
jb
adc
insb
and
or
iret
push
cltd
sbb
mov
sub
subl
nop
cmc
out
push
insl
jo
xchg
dec
mov
out
xor
adc
nop
or
std
dec
fdivrl
hlt
pusha
mov
nop
mov
mov
push
nop
adc
inc
or
mov
rcrb
pop
dec
lret
cmp
jmp
nop
ss
or
lret
cmp
xchg
xchg
mov
xchg
ja
xlat
in
push
nop
push
inc
bound
push
mov
sub
cmc
movsl
clc
add
inc
nop
dec
push
jo
je
mov
xor
fsubrs
loop
daa
nop
into
sbb
xor
mov
cli
nop
loop
test
xor
sub
imul
inc
jo
mov
nop
scas
push
out
jg
push
mov
mov
inc
divb
das
or
xor
add
mov
push
mov
cmpsl
or
lods
jecxz
jge
mov
jmp
push
nop
sub
mov
mov
stos
pop
jns
or
sub
sub
add
dec
inc
rcll
xorl
dec
ja
fdivp
nop
lods
inc
push
sub
add
pop
and
pop
pop
in
push
nop
adc
adc
or
pop
adc
dec
pop
shrb
inc
nop
test
sbb
push
nop
mov
xchg
movsl
pop
mov
fcmovnbe
cmpsl
insb
inc
sub
lcall
cmp
shlb
nop
and
cmpsl
outsb
cli
mov
iret
adc
dec
lea
jno
push
cli
or
call
pop
fnstcw
inc
nop
dec
fmuls
movntps
add
lods
add
jmp
jmp
popw
fadds
adc
cmp
cmpsb
jp
jno
jne
cmp
ja
inc
sub
lds
mov
dec
test
mov
xor
mov
adcb
jmp
xchg
nop
mov
xor
add
sahf
pop
lock
loope
xchg
nop
icebp
lret
adc
rorb
nop
dec
sub
jne
jg
nop
mov
or
or
repz
push
jl
jge
les
jne
push
pop
ja
mov
inc
push
orb
push
pop
inc
aam
pop
xlat
test
jae
xor
mov
dec
xor
nop
mov
sub
inc
dec
insb
jg
sub
jns
ror
sti
mov
loopne
mov
adc
stos
arpl
mov
rorl
movsb
inc
bnd
and
movsb
cli
mov
out
loop
lcall
pop
mov
jl
push
cmp
xor
dec
mov
adc
outsb
imul
or
lea
mov
fmul
nop
subl
addr16
fwait
or
clc
ret
mov
mov
xchg
jo
add
cmp
imul
sahf
push
rcll
or
cmp
jp
xadd
push
aad
arpl
xor
xor
nop
popf
lcall
nop
sarl
cmp
jmp
push
neg
call
fxam
mov
scas
nop
cmpsb
arpl
jb
add
cld
stc
hlt
cmp
pop
out
lock
stos
popf
icebp
jae
imulb
leave
mov
mov
lods
sbb
and
hlt
repz
pop
or
jae
add
int3
das
nop
cmp
push
shr
and
lcall
push
loop
jl
pop
lock
jo
xchg
icebp
imul
nop
xchg
add
xchg
aad
hlt
push
nop
pop
xchg
xchg
fistps
dec
mov
inc
and
mov
push
and
std
xlat
movsb
loopne
push
dec
adc
jl
jnp
clc
xchg
jae
pop
leave
mov
enter
nop
out
adc
add
fmulp
mov
lret
add
je
xchg
nop
idivb
sbb
js
adc
arpl
add
sub
nop
sub
sbb
sub
mov
out
scas
xchg
ss
cmp
adc
mov
cwtl
aaa
sbb
or
mov
in
and
outsl
add
mov
cli
lods
jl
jnp
es
dec
pop
and
lret
nop
xchg
stc
nop
push
pusha
sarb
lods
out
cs
adc
loop
popf
pop
movsl
rcrb
pop
inc
nop
lret
call
fimuls
nop
adc
loopne
or
mov
fnstcw
pop
jecxz
inc
push
mov
add
sub
jb
pop
cmp
jo
mov
pop
add
fbld
stc
lock
imul
mov
test
nop
test
mov
inc
nop
cmp
mov
inc
push
clc
xchg
mov
mov
dec
add
xchg
nop
xor
pop
dec
pushf
or
subl
add
mov
scas
jmp
mov
cmp
add
xor
xor
or
pop
nop
outsb
movb
mov
mov
stc
mov
stc
subl
jno
jae
push
pop
dec
cmp
mov
fcom
aad
add
mov
rcll
and
hlt
push
into
add
rol
jecxz
inc
loop
vmwrite
int
fcmovne
insl
inc
push
andb
pop
or
cwtl
fstl
cmpsl
cmpsb
movsl
les
popf
test
ret
rcrb
sbb
or
jecxz
nop
lahf
test
pushf
out
nop
add
shlb
jo
nop
outsl
mov
dec
nop
inc
das
jecxz
addr16
or
testb
adc
push
dec
mov
cld
xor
mov
add
pusha
inc
loope
aas
adc
lds
lock
cmp
mov
mov
mov
cmp
mov
nop
push
cwtl
std
incl
sbb
adc
jne
movl
xor
jo
sub
pop
push
pop
addr16
jl
push
movsb
es
data16
jae
fcmovu
jg
loop
jmp
mov
inc
shrb
dec
in
dec
fisttpll
rorl
scas
jns
mov
loope
sbb
mov
stc
mov
pop
mov
cld
mov
inc
xchg
roll
sahf
repz
xor
jp
shll
dec
nop
out
into
sahf
sub
mov
mov
insb
push
andb
mov
pop
or
xor
push
fstl
daa
pop
add
xor
xor
lock
in
xchg
idivb
pop
mov
and
nop
cmp
mov
lods
nop
add
or
add
mov
mov
arpl
fnsave
mov
lods
xchg
rcll
pop
ret
jmp
xorl
nop
cmp
fbstp
add
lea
pushf
jge
icebp
add
fcoms
mov
ljmp
add
ja
sub
nop
add
lods
rcll
inc
dec
fbld
pop
nop
mov
mov
ja
nop
mov
cld
xchg
fwait
xchg
sub
cmp
cmpsb
adc
add
dec
push
xor
or
aas
push
pushf
mov
nop
dec
pusha
daa
sub
js
fistl
into
cmp
ds
push
pop
mov
adc
xchg
cmp
cmp
sbb
ss
inc
sub
test
jo
jbe
inc
mov
rorl
mov
cmc
lock
shlb
lock
adc
outsb
cwtl
andb
loopne
adc
add
add
into
xchg
jecxz
jge
xor
mov
sahf
imulb
push
xchg
mov
imul
test
nop
outsb
lret
jno
pusha
stc
nop
mov
popa
cmpsl
lods
sbb
aad
or
mov
test
xlat
sub
aas
xchg
inc
or
jl
mov
shll
popf
push
shlb
inc
or
shlb
rorb
pop
nop
repz
les
or
js
adcb
shrl
push
mov
mov
ljmp
pop
push
aas
fbld
gs
mov
ljmp
mov
push
jb
and
std
adcb
pop
or
dec
xchg
lcall
xor
sub
push
insl
arpl
xchg
mov
sahf
fcompl
popf
scas
aaa
arpl
push
daa
lods
xchg
inc
pop
not
adc
gs
mov
scas
cli
cmp
bound
loop
mov
mov
nop
and
les
mov
ret
inc
nop
fwait
lea
dec
lahf
or
sbb
dec
dec
es
loop
or
call
jecxz
adc
nop
ficomps
aam
nop
push
lea
inc
dec
popa
repz
pushf
andl
add
nop
call
in
pop
test
fwait
xlat
nop
cli
dec
jo
sub
jne
and
iret
pop
sub
xor
jp
mov
and
and
ss
jg
xor
insl
jmp
adc
mov
pop
fs
ret
nop
icebp
mov
push
mov
movsb
cmpsb
int
nop
ds
fwait
out
mov
paddq
sbb
adc
or
xor
nop
push
ja
pop
add
cltd
push
xchg
push
in
lods
popa
pop
call
gs
nop
pop
imul
lahf
nop
mov
jae
nop
jo
sub
add
inc
jle
loop
jp
lcall
pushf
mov
fisubl
ja
inc
dec
mov
mov
mov
inc
lods
dec
and
cld
jnp
lret
nop
les
and
stc
xor
dec
pop
cld
aad
in
outsb
scas
mov
xchg
mov
sbb
orl
or
jge
adc
icebp
jbe
and
movsb
or
mov
insb
add
ror
cmpsl
add
lret
mov
icebp
nop
out
xchg
pop
sbb
test
nop
mov
jno
iret
or
aaa
add
in
adc
xlat
xchg
mov
mov
fcoml
pop
sub
nop
insl
cmp
lret
adc
div
outsb
jmp
xor
xchg
push
nop
add
aas
call
clc
xorb
out
or
dec
mov
cmp
leave
xor
cmpsl
out
push
pop
nop
jnp
mov
movsl
nop
bound
sub
pop
imulb
xor
scas
mov
int3
cmpsb
imul
loopne
lcall
lods
nop
jp
add
mov
nop
fcomps
jle
and
cmp
mov
insb
pop
sahf
loopne
xlat
xchg
nop
cmp
test
pop
nop
push
mov
aam
scas
ret
inc
mov
insb
mov
mov
pusha
fstl
inc
add
xchg
nop
scas
addb
nop
push
add
and
nop
jge
push
stc
test
int
nop
enter
fcompl
arpl
pop
xchg
cmp
movsb
xor
sbbl
nop
in
xor
mov
std
cld
dec
nop
testb
inc
fcmovnb
addr16
push
adc
je
dec
add
pop
lock
adc
imul
in
out
dec
mov
inc
nop
cmp
push
movsb
pusha
in
xor
pop
add
mov
enter
mov
nop
dec
or
cmp
adc
mul
dec
fstps
nop
movsb
cwtl
ret
lret
or
nop
mov
int3
or
and
inc
shr
sub
sub
push
sub
scas
aam
or
push
nop
mov
pop
or
jb
nop
popa
adc
insb
leave
add
imul
orb
bound
pop
rclb
jne
dec
xchg
outsl
push
pop
outsb
add
push
and
dec
jns
inc
ret
pop
outsl
jl
clc
stos
mov
mov
xchg
daa
faddl
pop
cmpsb
adc
lcall
and
nop
stos
and
or
inc
xchg
pusha
shlb
loopne
loope
stc
cld
xchg
nop
mov
pop
out
fsts
enter
add
push
ss
lods
nop
jle
inc
and
fnstcw
imulb
nop
inc
inc
mov
mov
rcrb
int3
adc
andb
or
nop
test
mov
filds
sbb
pop
jno
pop
xor
and
enter
push
pop
movsb
pavgb
jae
sub
inc
sbb
and
add
cmp
lret
cmp
jecxz
dec
nop
inc
mov
es
nop
push
mov
test
cmpsb
sbb
or
xchg
arpl
xchg
xchg
push
nop
cmc
lock
into
adc
pop
mov
daa
adcl
nop
stos
add
fsubrs
pop
mov
in
push
jle
test
xchg
cwtl
gs
outsl
push
nop
popa
dec
sub
add
xor
mov
push
ror
scas
pushf
xor
das
scas
xor
jl
sbb
lock
movsl
shl
inc
pushf
test
mov
cs
nop
test
repnz
int3
loop
nop
aam
mov
jne
dec
xchg
cmc
mov
push
aad
xor
cs
test
xchg
xor
lea
mov
rclb
test
or
add
mov
dec
pop
lock
add
loop
cmp
lret
inc
rorl
xor
mov
or
stos
pop
cs
in
mov
sti
add
cmp
repnz
adc
inc
adc
test
clc
mov
aaa
adc
nop
in
sub
test
push
sahf
popa
inc
lret
addb
cmp
pop
sbbl
xchg
jne
mov
jmp
sbbl
das
cmp
lds
jb
mov
jae
push
shr
shr
mov
mov
cmp
sub
fs
pop
shrb
cmp
sub
push
loop
xchg
pop
adc
push
xor
fsubrs
nop
ljmp
mov
cltd
add
mov
mov
outsb
leave
mov
lods
jle
inc
rorl
rcr
jge
ss
dec
rolb
mov
clc
js
das
nop
mov
pop
cmp
iret
insb
jmp
push
stos
push
and
dec
aam
adc
xlat
jns
pop
jp
nop
and
iret
andb
shrb
inc
sahf
dec
nop
cmpl
sbb
or
jb
test
subb
add
loop
mov
xchg
xchg
add
jae,pn
in
stc
out
sar
into
adc
lea
cmp
nop
in
fisubl
push
pop
cmp
lods
jo
or
push
lret
fsubs
pusha
push
jne
sub
inc
movsl
or
decl
xor
mov
fs
jge
adc
dec
dec
cmp
imul
mov
and
jb
fcoms
xchg
adc
dec
movsb
and
repnz
xor
jae
pop
stos
xchg
out
loopne
mov
inc
dec
mov
sub
stc
loope
ja
js
test
mov
mov
cmp
mov
inc
or
jae
add
pop
andb
adc
sub
dec
xor
xchg
out
repnz
xor
cs
push
xchg
mov
int3
mov
sub
int
fstpt
stc
push
nop
inc
outsl
lds
dec
jge
nop
add
xor
aam
xchg
insb
adc
jbe
je
and
xor
lret
xchg
inc
nop
loop
aaa
ret
ficoms
pop
jae
les
mov
xchg
sub
xchg
cli
xchg
jb
mov
nop
popf
pop
shll
nop
scas
daa
out
aas
mov
adcl
push
sarl
clc
nop
ret
jecxz
int3
sub
inc
mov
test
test
mov
push
lods
fstp
xchg
nop
imul
jge
jno
rcrb
and
pop
das
out
nop
popf
mov
mov
cmp
imul
xchg
cmovge
fs
lcall
test
imul
in
pop
nop
cmc
jle
shr
hlt
dec
les
ss
ret
or
out
nop
push
cmpsb
nop
notl
repz
aad
add
pop
popf
subl
nop
pop
fists
push
adc
and
hlt
xchg
cmpsb
addl
nop
jmp
test
sub
incl
fdivrl
push
jg
test
cs
into
nop
or
pop
pop
pop
ret
adc
shlb
mov
dec
scas
sub
nop
movsb
xor
jb
nop
push
ja
mov
pop
or
jg
push
mov
pop
aad
dec
pop
loop
nop
and
fwait
sahf
add
mov
popf
rolb
mov
aas
adc
cli
nop
pop
aad
mov
test
jo
pop
lahf
push
mov
sti
loop
xchg
xlat
aad
je
int3
nop
inc
into
out
stos
pusha
shrb
nop
loop
fistps
fldenv
clc
xchg
fcomp
mov
daa
nop
mov
lret
jge
or
js
push
aam
cmp
xchg
mov
mov
add
lock
cs
mov
or
dec
sahf
adcl
cmp
nop
mov
adcb
daa
push
or
aaa
lods
ficoms
adc
cmpsl
shl
subl
jle
out
pop
dec
sub
jge
mov
rep
or
xchg
pop
andb
mov
mov
push
pop
aam
mov
enter
sub
jecxz
cmp
shll
mov
mov
in
loopne
adc
sbb
sarl
sbb
aad
adc
popa
cmp
pop
int
nop
mov
jnp
push
xchg
pusha
dec
xchg
dec
xor
push
shrb
jno
aad
nop
idivb
xchg
nop
jne
xor
nop
shll
mov
fnstenv
mov
int3
pop
nop
stos
pop
daa
adc
nop
ss
loopne
sarb
mov
and
cltd
andl
pop
ret
jge
mov
pusha
ja
fcomi
leave
or
mov
ror
cmp
jge
gs
pop
sar
in
sub
nop
push
push
cmp
lret
inc
mov
js
nop
push
dec
out
xlat
stos
aad
pop
sbb
xor
xor
les
cmc
loopne
xchg
push
add
fs
mov
sub
sub
dec
jo
adc
std
or
push
ret
xchg
xor
adc
mov
insb
nop
lret
out
xchg
sahf
inc
pop
das
mov
lcall
in
movsl
inc
aas
or
out
rcrb
push
add
stos
shll
out
xor
arpl
es
xchg
pop
into
cltd
push
cmp
lock
inc
or
or
jl
ret
nop
in
mov
popa
push
dec
ja
cmp
cmpl
lds
lret
sti
or
xchg
inc
dec
imul
jb
arpl
pop
jns
mov
inc
lods
out
cmp
enter
pop
xchg
shl
pusha
or
nop
sarl
inc
hlt
nop
aas
adc
lcall
dec
adc
xor
fbld
nop
ficomps
loop
sub
scas
adc
inc
mov
cmp
rorb
sbb
mov
inc
out
nop
cld
dec
add
das
fimull
nop
jl
jo
mov
adc
rol
mov
xchg
nop
arpl
lret
fiadds
insl
and
xchg
add
loopne
push
add
dec
jp
ljmp
movsl
and
add
stc
into
nop
call
ljmp
icebp
nop
fmull
nop
dec
and
cmp
jg
adc
pop
int
mov
dec
pushf
shlb
addr16
fldl
ret
sub
adc
loope
fcomp
filds
inc
sbbl
aaa
call
pslld
cmc
sti
iret
subl
test
ljmp
mov
in
ja
scas
jb
sub
popa
push
pop
aas
sub
ret
cmp
nop
roll
jecxz
hlt
insl
nop
icebp
scas
jo
push
or
mov
clc
je
arpl
shrb
nop
aam
sbb
neg
mov
ja
push
in
mov
push
pop
jecxz
and
lock
sbb
movsl
or
loope
xor
adc
pop
out
mov
dec
xor
jnp
inc
mov
xchg
les
sarl
pop
fadds
mov
mov
xchg
adc
mov
aaa
rolb
cmp
and
loopne
mov
ljmp
insl
sub
arpl
jmp
nop
inc
fmuls
mov
aas
inc
pop
fs
adc
mov
daa
rolb
mov
nop
mov
call
imul
mov
mov
clc
or
xchg
push
lret
cmp
mov
ficoms
sbb
jmp
rcll
fdivrl
pushf
stos
or
repnz
mov
nop
or
jnp
out
fistl
std
enter
inc
popf
cmp
andb
mov
push
sbb
or
add
pop
adc
aam
add
push
je
jl
sbb
pusha
xchg
xor
cwtl
or
jno,pn
mov
cmp
mov
loopne
xlat
loopne
push
jb
out
outsl
sarl
push
ret
nop
push
lds
dec
nop
mov
inc
loopne
ss
or
jle
xchg
ficoml
hlt
pushl
inc
mov
adc
hlt
and
in
ret
or
not
jo
int3
loopne
adc
adc
mov
pop
push
nop
sub
sbb
dec
nop
jmp
scas
xor
arpl
add
cmp
clc
mov
cmpsb
mov
add
aaa
popf
adc
xor
insl
iret
adc
dec
lock
daa
adc
in
arpl
pop
lock
loope
aam
nop
lock
addr16
sub
jle
push
and
cmovns
frstor
xchg
imul
mov
nop
pop
pop
inc
iret
popl
xor
sti
jnp
mov
je
cmp
mov
xchg
or
pop
mov
inc
jnp
and
pop
rcll
xchg
push
cmp
imul
jnp
push
xor
fadd
nop
mov
stos
mov
add
push
xchg
das
adc
xchg
bound
testb
pavgb
adc
pop
sbb
mov
ret
cmp
push
fistpll
gs
cmpsb
mov
mov
nop
push
out
jno
mov
bound
or
cmpsb
sbb
xchg
lcall
stc
jl
lcall
out
sar
ljmp
push
lcall
and
pushf
mov
add
mov
xchg
dec
loope
int3
inc
nop
xor
test
pop
cmc
negl
pop
cmp
dec
rclb
cmp
sbb
mov
pop
andl
add
cltd
push
sub
stc
ret
nop
lock
aad
cmp
mov
jecxz
xchg
fcoms
in
mov
or
das
push
xchg
enter
lcall
mov
mov
and
cltd
lock
into
outsl
nop
sub
mov
fistpl
and
mov
sub
loopne
das
loopne
test
faddl
push
nop
add
jecxz
jno
sahf
ret
sbb
nop
fs
iret
addr16
sbb
adc
pop
nop
add
pop
pop
out
shll
nop
inc
push
push
roll
inc
movsl
adc
movsb
or
add
mov
inc
adc
push
jno
pushf
lret
in
addr16
sub
mov
pushl
adc
pop
nop
and
aad
mov
mov
mov
mov
lods
int
sbb
xchg
int3
nop
mov
dec
out
out
loopne
cltd
or
clc
push
lret
cwtl
jmp
and
sti
push
mov
adc
pusha
jecxz
stc
mov
xchg
pop
push
and
pop
mov
adc
leave
jge
rorb
and
in
nop
lret
and
lcall
movsl
aad
loop
nop
cltd
test
or
mov
adc
int
cmpl
dec
push
enter
enter
aas
outsb
lea
in
add
and
inc
pop
lahf
nop
int3
pushf
mov
std
fnstcw
mov
ret
nop
fmuls
mov
imul
xor
out
sbb
iret
dec
pop
sub
xchg
shll
mov
xor
xchg
xorb
and
pop
add
cmp
mov
out
in
jecxz
sti
popa
or
mov
hlt
je
xor
adc
fimuls
jl
nop
sub
cmp
mov
jnp
jne
adc
aaa
nop
dec
xchg
dec
cltd
outsl
nop
and
pop
scas
nop
push
add
jecxz
in
mov
dec
dec
pop
and
clc
dec
rcrl
test
xchg
cmp
lock
mov
adc
jmp
cmpsl
repnz
call
pop
nop
arpl
cwtl
add
or
and
adc
dec
nop
sarb
out
fsts
jnp
and
nop
lcall
adc
xor
mov
mov
sub
std
sub
xchg
push
aas
jecxz
fdivrs
push
nop
cmp
out
pop
xor
bound
dec
pop
dec
jo
pop
sub
mov
jnp
jecxz
jge
mov
adc
iret
jecxz
cmpsl
cmp
cmp
es
and
out
or
int
mov
fcomps
adc
mov
jns
jb
in
xor
xchg
pop
pop
nop
xchg
and
pushf
outsb
stos
outsl
nop
mov
ljmp
lock
jb
inc
mov
add
mov
or
sub
adc
int
inc
mov
or
lods
cltd
popa
pusha
shlb
cmc
and
scas
pushf
sub
insb
push
xor
test
dec
xor
lds
mov
les
sbb
nop
shrl
int3
aam
mov
repz
imul
push
fstpt
nop
xor
mov
and
push
out
xchg
icebp
out
nop
inc
in
or
cmp
fdivs
ja
nop
mov
test
sbb
mov
sarb
scas
rcll
sub
or
rolb
mov
shlb
loopne
inc
outsb
adc
or
mov
or
mov
mov
ss
add
fcomip
cli
cmp
daa
and
push
cltd
lock
add
lds
pop
in
sub
mov
insb
pushf
cmp
pop
cmpsl
int3
adc
lods
xchg
rclb
dec
push
nop
bound
add
nop
negb
stos
arpl
je
xchg
lock
jne
xchg
inc
xchg
mov
cmp
les
rcll
stos
movsl
mov
faddl
inc
repz
ljmp
test
movb
popa
mov
lret
pop
nop
sbb
jnp
pop
or
jno
pop
fnstcw
mov
add
mov
add
hlt
add
in
nop
fcmovu
mov
iret
jbe
scas
xchg
push
nop
push
xor
sbb
mov
imull
out
repz
das
imul
pop
jl
in
adc
mov
xchg
test
das
dec
inc
xchg
ret
mov
or
adc
push
mov
dec
or
jae
push
dec
addr16
add
cmp
sbb
nop
or
arpl
nop
dec
cltd
fiadds
cmpsb
and
lock
mov
aas
and
test
dec
paddusb
xchg
fnstsw
loopne
adc
mov
jl
daa
cmp
xor
ficoms
jo
fdivs
rcll
push
pushf
push
sbb
mov
icebp
lret
nop
adc
shl
mov
divb
test
nop
dec
inc
lret
dec
pushf
sub
sub
in
rol
in
pop
nop
outsl
fsts
inc
cs
inc
sub
js
adcb
sbb
cmc
cvtps2pi
pop
xchg
hlt
pop
ljmp
sub
adc
loop
mov
movb
pop
lret
push
stc
popf
pushf
nop
shll
dec
mov
fldt
hlt
cltd
push
rolb
adc
jle
mov
scas
nop
lret
xchg
arpl
imul
cmp
lret
enter
mov
scas
dec
dec
rcl
rcll
jecxz
or
ret
lret
mov
mov
sti
mov
dec
nop
testl
or
jmp
adc
iret
fisubrs
hlt
pop
push
int3
nop
sub
repz
xchg
pop
push
cmpsb
ljmp
popa
arpl
stos
aaa
cwtl
fsts
dec
push
mov
pop
mov
adc
dec
dec
mov
in
fdiv
cwtl
mov
xchg
aam
push
lods
xor
jp
mov
jbe
nop
xchg
cld
cmp
nop
inc
icebp
stos
lea
cmp
or
fdivrp
insl
jl
leave
push
fsubl
lret
movsb
lds
mov
gs
fwait
mov
decl
lock
out
into
add
cmp
mov
addr16
icebp
cmpsl
pop
ja
lock
mov
idivb
int3
push
pushf
nop
mov
lcall
stc
imul
scas
mov
decl
dec
mov
roll
push
mov
pop
push
mov
mov
mov
loopne
nop
out
mov
cs
xchg
nop
cmp
xor
mov
shrb
pop
jb
mov
xchg
nop
add
lea
inc
cmpsb
adc
jl
xchg
pushf
pop
repnz
ljmp
aad
mov
mov
push
mov
xor
in
add
mov
fs
ficomps
test
and
outsl
xchg
mov
or
or
mov
pop
nop
popl
dec
lods
or
sti
push
enter
xchg
jg
popf
jb
out
xchg
add
push
mov
les
or
sbb
adc
inc
add
lret
sbb
pop
xchg
jl
sub
push
bound
lods
xchg
aad
nop
stos
sbb
xchg
pusha
pop
or
xor
mov
sbb
mov
repnz
enter
scas
fisubl
mov
or
rol
xchg
test
sub
icebp
jge
xlat
sbb
int3
adc
cmpsb
mull
nop
adc
mov
jmp
rcll
sbb
inc
pushf
int3
mov
nop
and
aam
loope
call
and
mov
lods
ficomps
fcomp
sbb
sub
push
shll
nop
ja
loope
push
neg
cmpsl
nop
add
fwait
sbb
loope
cltd
ret
scas
fldenv
jo
enterw
add
xor
nop
xchg
inc
pop
nop
stos
mov
mov
cmp
jle
repz
xchg
push
test
xchg
lock
dec
and
nop
int
pop
roll
fstps
fs
jb
pop
or
inc
cmpb
lods
pusha
or
mov
test
adc
out
pop
ja
shlb
nop
or
pop
int3
test
insl
shl
cmp
xchg
nop
loopne
mov
dec
inc
aad
or
cltd
jae
movsb
sahf
mov
nop
lods
cli
add
shlb
movsl
lock
nop
out
add
fadds
cs
inc
adc
in
loope
adc
sbb
jns
or
fcoms
xchg
pop
mov
push
arpl
leave
or
leave
adc
fsubs
movsb
xchg
and
mov
hlt
ret
dec
nop
aam
ss
nop
loope
cs
jns
out
nop
push
jl
lcall
cld
or
mov
notl
xchg
imul
push
nop
add
sti
mov
pop
test
mov
adcl
pop
cmp
pop
dec
mov
pop
mov
push
popf
fwait
xchg
nop
xchg
inc
add
jge
lods
nop
or
js
nop
sbb
pop
aad
clc
nop
aam
ret
xor
mov
rcll
push
fwait
fs
jnp
ljmp
repnz
add
rorl
sub
push
dec
nop
pushf
lea
ret
mov
dec
rcr
adc
inc
aam
xchg
shll
mov
test
push
dec
mov
test
lock
loopne
sbb
mov
enter
mov
pop
in
cmpsl
push
mov
and
nop
xor
mov
mov
setne
or
movsl
lock
lcall
ljmp
ss
push
out
jle
nop
sahf
inc
out
inc
and
int
stos
std
leave
dec
cld
adc
inc
inc
dec
dec
in
lods
jmp
nop
insb
loop
and
xor
inc
nop
and
ja
mov
nop
repz
dec
cmp
or
jo
adc
rolb
fiaddl
mov
sbb
mov
push
je
cmp
push
dec
xlat
pop
clc
cltd
jb
xchg
adc
lock
sti
lods
sarb
test
pop
outsb
loop
test
mov
mov
add
inc
jle
shlb
nop
mov
sbb
jno
scas
mov
sub
pop
mov
js
pop
fdiv
sti
nop
jnp
ret
sahf
inc
xor
mov
dec
cmp
lahf
adc
xchg
lods
enter
loop
mov
pusha
loope
xor
nop
bound
dec
jmp
insl
or
and
ja
sbb
xchg
adc
outsl
fadd
add
fcoms
pop
cwtl
imul
mov
pop
inc
nop
mov
fmuls
sub
mov
or
fistps
sub
adc
out
nop
loopne
das
add
ss
or
arpl
enter
inc
jbe
lahf
fildl
jle
cmpsl
shll
xor
pop
mov
push
insb
or
inc
icebp
movsl
lcall
nop
fildll
jno
out
andb
mov
cmp
inc
mov
nop
call
fisttps
lds
mov
loope
xchg
pushf
mov
cmpxchg
lret
and
push
icebp
mov
pop
int3
fistl
test
mov
jp
js
stos
mull
xchg
or
mov
adc
lods
pop
lahf
push
cwtl
jo
cmp
cmp
faddl
fists
cmp
mov
adc
xchg
repz
sbb
xchg
jle
loop
lods
mov
fucom
push
pop
adc
sarl
movsl
pushf
subl
das
push
int3
push
mov
push
rorl
sub
or
test
ret
cmp
or
pop
cld
push
lock
pop
subl
mov
inc
and
adcl
lret
loopne
iret
fisubs
das
inc
insl
mov
cmp
out
arpl
lds
jmp
sbb
pusha
mov
nop
rcll
add
nop
repz
test
lret
xchg
hlt
nop
fsubrl
scas
gs
ljmp
sub
int
jecxz
mov
mov
cmpl
cltd
test
cmpsl
negl
push
add
imul
and
jle
xchg
push
mov
xor
js
leave
lret
out
shl
inc
imul
adc
jge
xor
push
lcall
pushf
nop
stc
sbb
pop
loope
xchg
aaa
xchg
scas
xor
sbb
and
pop
add
and
cld
xlat
lcall
insb
rcr
sbb
jb
lods
lcall
adc
sbb
and
cwtl
shlb
imul
fisubl
call
nop
lahf
repz
insb
adc
notb
cltd
mov
sbb
lock
stos
nop
jb
orl
subb
loopne
sub
and
nop
fiaddl
pop
jbe
daa
rcrl
fs
xor
stos
clc
aaa
nop
shlb
add
and
jle
ljmp
nop
ss
addr16
and
iret
or
lcall
test
add
nop
lock
jbe
jne
pop
dec
pop
pushf
nop
bound
sbb
adc
mulb
lea
int3
roll
mov
xor
shrb
push
xlat
lods
nop
xor
jno
sub
jns
xor
mov
ja
into
cwtl
and
data16
insb
cmp
mov
enter
nop
and
negl
adc
mov
mov
or
icebp
addr16
mov
fmulp
movsl
repnz
ficoms
nop
xlat
fdivs
inc
jecxz
add
pop
adc
clc
movsb
nop
addr16
mov
nop
icebp
inc
jl
aaa
scas
arpl
addl
adc
or
sar
mov
lods
inc
out
addr16
push
or
loopne
jg
les
push
push
nop
jl
testb
cmp
cmc
sub
adc
fsubs
push
add
loopne
and
jle
nop
int
push
cmp
pop
xchg
adc
sbb
arpl
ds
idivl
jo
rcrl
xchg
ss
adc
dec
ljmp
mov
mov
mov
dec
cmp
or
addr16
fnstsw
mov
mov
outsb
jbe
les
dec
ficoml
dec
mov
or
out
orl
inc
mov
aad
in
test
mov
xchg
mov
dec
roll
or
cwtl
jmp
int3
jb
lods
mov
cld
dec
jge
jne
ja
push
lahf
les
in
mov
subb
push
push
leave
cli
nop
int3
stos
imul
nop
sbb
lods
js
mov
dec
nop
jl
loope
or
lret
jmp
mov
cmp
test
arpl
adc
push
ds
nop
hlt
mov
xor
inc
sbb
sbb
in
cmp
push
fcmove
or
js
clc
insl
out
pop
nop
scas
lea
repnz
and
movsb
cmp
leave
enter
fs
jne
xchg
fimuls
jns
push
shl
adc
lods
mov
push
orl
enter
insl
xor
push
call
xorb
pop
mov
jge
mov
add
jg
stc
mov
mov
shl
jp
sub
icebp
cwtl
sar
xchg
stos
pop
ret
cmp
add
repnz
mov
or
nop
pop
mov
push
nop
js
mov
nop
shll
les
xor
inc
adc
flds
nop
popf
test
loop
or
sub
push
mov
and
jne
mov
cltd
inc
adc
mov
pusha
insl
and
cld
rorb
mov
adc
adc
mov
cmp
rorb
mov
pop
fdivs
cmp
or
pop
lcall
in
or
mov
pop
outsl
rolb
push
lcall
or
fs
sbb
xchg
fidivl
xchg
push
rolb
jo
shrb
nop
push
in
sub
loopne
and
fcoml
neg
mov
stc
fsts
push
pcmpeqb
mov
rorb
xor
xchg
cmp
xchg
add
xor
mov
nop
cs
nop
mov
and
xor
jp
pop
lock
push
rorb
nop
mov
pop
mov
outsl
xor
insb
stos
es
xchg
fisttpll
cltd
rep
rcl
xlat
sbb
nop
pop
imull
lcall
jmp
insb
jne
fisttpll
sub
xchg
sbb
jp
daa
mov
push
adc
xchg
test
ret
lds
xlat
stc
rcr
mov
into
jl
call
int3
mov
fldln2
mov
out
outsb
cltd
ss
mull
dec
nop
adc
hlt
mov
mov
lcall
push
scas
mov
mov
mov
cltd
sbb
imul
shlb
fwait
sub
out
nop
mov
nop
cmc
fldenv
pop
mov
cmpsl
nop
add
jno
jns
sub
hlt
nop
pop
lds
ret
jge
sbb
xor
or
jae
test
dec
push
sbb
add
add
mov
imul
mov
jb
push
sbb
icebp
xchg
testl
stc
mov
lret
ret
out
cmpsb
nop
push
enter
daa
adc
addr16
hlt
test
push
nop
mov
push
push
pop
in
nop
cmp
or
leave
fsincos
and
dec
nop
fadds
or
push
cli
xlat
test
int
mov
aas
repz
stc
or
dec
adc
repz
jl
push
nop
mov
fdivrs
adc
jno
xchg
fstps
xor
inc
or
fwait
push
ss
loop
push
lods
add
nop
or
sbb
notl
mov
leave
inc
nop
adc
mov
sub
sbb
enter
push
nop
into
pop
faddl
add
mov
dec
jmp
enter
sbb
mov
lahf
push
jmp
nop
pusha
jnp
pop
repz
adc
nop
push
insb
cmp
pop
nop
xor
add
inc
jnp
xchg
push
pop
and
mov
cli
cmp
xor
add
add
push
nop
inc
dec
stc
faddl
or
aas
ljmp
mov
sarb
xor
xchg
mov
add
push
roll
cmp
push
bound
push
js
dec
adc
mov
je
rclb
test
nop
aam
mov
stos
nop
pushf
mov
pusha
enter
nop
push
jle
out
ret
addr16
js
lock
lahf
or
lds
daa
ljmp
push
adc
add
ficoml
mov
mov
sub
sahf
outsl
xor
shrb
icebp
pop
jno
dec
mov
in
xor
loope
mov
in
nop
xor
sub
xchg
xchg
xchg
cwtl
roll
mov
test
adc
cmp
and
mov
orb
xor
aam
mov
mulb
mov
movsb
ret
loope
adc
jmp
repnz
sahf
mov
in
test
pop
and
shlb
inc
test
sbb
push
fstpt
int3
nop
inc
fwait
jl
nop
adc
aas
pop
out
scas
nop
cmp
mov
das
nop
adc
mov
dec
shr
ret
nop
mov
push
insb
push
mov
fisttpl
lahf
pop
insl
sti
shlb
lods
sahf
nop
jae
add
mov
adcl
nop
lcall
in
nop
push
ljmp
jle
cli
push
inc
test
fcoms
sub
jp
dec
pushf
push
push
rcrl
movsl
fdivs
jnp
les
mov
adc
pop
lock
icebp
js
sbb
nop
dec
cmp
dec
mov
lods
or
dec
lock
outsb
add
dec
bswap
mov
fimuls
pop
out
repz
or
jg
lock
pop
jae
sahf
nop
pop
add
push
mov
mov
or
out
nop
adc
mov
cmp
inc
jp
mov
hlt
ljmp
push
xchg
jb
neg
loope
loopne
dec
push
mov
cmp
mov
nop
in
cs
mov
aas
add
orb
and
pop
loop
scas
nop
jp
and
shrl
nop
add
inc
shrb
dec
lret
mov
adc
push
sbb
xchg
jne
imul
lods
cli
insl
rol
nop
push
loope
es
ljmp
pushf
rorb
push
sub
adc
nop
inc
scas
pop
ds
dec
popf
clc
jb
arpl
insl
sbb
mov
cmp
es
nop
jo
add
test
jp
or
push
addr16
movsl
mov
nop
ljmp
sbb
or
xchg
cwtl
sbb
aam
push
mov
dec
fstps
int
call
fcoml
dec
xchg
mov
mov
out
mov
inc
dec
xor
inc
lock
push
mov
jno
adc
movsb
leave
adc
jno
cld
add
xchg
cli
mov
jb
jle
mov
call
cs
nop
loop
adc
jg
addr16
dec
mov
sahf
adc
mov
sbbb
mov
nop
fdivl
cwtl
shrl
adc
aas
adc
jge
adc
or
and
in
outsb
nop
lock
in
aas
push
pop
clc
push
sti
nop
fadd
sbb
inc
loope
and
sbb
nop
xchg
or
jmp
fdivl
add
add
insb
xor
sub
cmc
test
cmp
imul
and
and
sub
rorb
adc
mov
sbb
out
sbb
nop
std
jl
add
adc
nop
in
subb
mov
sub
in
xlat
push
mov
and
sarb
sahf
mov
push
jnp
mov
in
mov
in
ss
mov
xor
adc
pushf
testl
mov
rcrb
mov
dec
add
imul
test
stos
int
pop
rorb
cbtw
and
adc
stc
adc
loop
pop
jb
dec
pop
cmpsl
icebp
nop
push
sub
fldt
addr16
loope
adc
or
clc
add
push
inc
cld
nop
cli
sbb
jecxz
fmuls
mov
lods
fs
jmp
lahf
xlat
cmp
mov
jns
fstl
sub
or
push
dec
xchg
push
nop
inc
scas
and
nop
and
sbb
sub
fwait
cltd
xchg
mov
dec
push
roll
and
nop
ss
mov
add
jmp
cs
sbb
dec
nop
mov
sbb
nop
es
xchg
aad
out
aaa
pop
add
outsb
mov
jmp
dec
das
aam
mov
mov
in
sub
sbb
cltd
and
and
loopne
lahf
jl
les
mov
cmp
mov
xchg
lock
or
adc
scas
les
mov
ret
jp
adc
lods
inc
test
dec
insb
loop
iret
nop
add
inc
jns
test
popa
push
or
xor
mov
lods
divb
lds
test
in
pop
repnz
xchg
jle
nop
in
lcall
inc
in
add
out
nop
clc
mov
out
sbb
inc
bound
fnstsw
aam
cmp
in
test
sti
nop
jo
loope
nop
pop
fdiv
dec
das
in
movsl
fwait
iret
adc
jg
loop
rcrb
nop
popf
mov
mov
adc
jle
outsl
fsubrs
sti
incl
fadd
xor
inc
ret
stos
adc
movsb
das
mov
xor
xchg
sub
out
pop
dec
ffree
sub
dec
or
xchg
add
rol
cmpsb
and
push
outsl
out
xchg
incl
cmp
dec
inc
rcr
gs
nop
lods
fcomps
add
lahf
jp
nop
pushf
ret
pop
jge
rorb
sahf
or
mov
mov
sub
aas
push
mov
lods
jne
adc
ljmp
data16
mov
xchg
std
cmp
loopne
fwait
add
nop
imul
sub
push
sbb
loope
add
jge
mov
ss
push
mov
clc
or
fstl
xlat
xchg
cmc
pop
push
mov
ret
sub
and
pop
nop
jg
cmp
mov
int
nop
leave
popf
sub
dec
push
lods
adc
pushf
cld
cmp
xchg
lret
cli
test
sbb
mov
iret
lock
or
mov
nop
cltd
push
or
and
cmpsl
cwtl
jmp
cli
ja
inc
nop
popf
in
and
or
jl
mov
inc
imul
out
aad
jge
and
repnz
sub
cmpsb
shrb
xlat
mov
nop
add
mov
adc
push
xor
imul
and
repz
inc
insb
fcmovb
mov
dec
out
push
jge
inc
sbbb
repnz
add
test
inc
lea
fistpll
push
sbb
cmp
jne,pt
dec
inc
mov
adc
pushf
ljmp
or
shll
push
ret
bound
mov
clc
nop
push
ror
add
aad
mov
adc
out
sbb
xor
bound
rcll
mov
or
push
shrb
or
loop
call
nop
loopne
pop
mov
nop
sahf
iret
cmpsb
push
inc
xchg
lock
cmp
sbb
dec
pop
inc
outsb
cli
adc
cwtl
rorb
shl
mov
sbb
movsl
adc
xchg
mov
pop
xchg
xchg
adc
dec
mov
hlt
xchg
pop
jo
lock
mov
jae
fimuls
bound
and
mov
sub
or
mov
push
adc
inc
rclb
pop
clc
jg
mov
pop
aad
repnz
adc
nop
mov
out
test
nop
and
ljmp
cmp
cmp
lds
fwait
into
xchg
add
dec
hlt
cmp
and
je
dec
cmpsb
dec
call
sbb
sahf
fcoms
adcl
rorb
or
popa
in
leave
aam
loopne
mov
push
nop
lea
mov
nop
cmp
pop
aad
clc
scas
adc
adc
sbbb
jns
sbb
nop
xor
jecxz
and
les
cmp
mov
dec
fistpll
nop
mov
push
adc
pop
repz
pop
int3
fcompl
nop
fsubrl
dec
sbb
mov
pause
xchg
mov
cmp
test
add
stos
cmp
mov
xchg
nop
sub
adc
nop
jecxz
xor
flds
ja
ss
dec
xor
fmulp
aaa
imul
lahf
nop
mov
call
adc
jo
orl
xor
pop
cmpl
fcom
shr
popf
cltd
dec
das
hlt
cmp
mov
stc
mov
pop
xchg
lods
shlb
mov
nop
dec
dec
xor
pop
xchg
jg
in
shlb
sbb
iret
mov
nop
and
les
or
mov
gs
add
lds
out
and
jecxz
xchg
iret
mov
mov
mov
popf
jno
cmc
mov
add
dec
aad
adc
mov
mov
add
rclb
mov
les
adc
ror
shrb
nop
cmp
sahf
pop
mov
test
dec
fistpll
daa
nop
lds
ret
rol
and
add
and
mov
in
icebp
fsubrs
call
jge
sti
nop
add
ret
xchg
dec
pop
sub
mov
dec
jne
subl
loopne
or
dec
cwtl
lds
in
fldt
or
nop
cltd
inc
sti
out
sahf
nop
imul
mov
test
cmp
adc
pop
arpl
push
fbld
bound
sbb
dec
test
out
shlb
dec
call
fisttpl
nop
xchg
mov
jge
notl
mov
insb
jle
add
iret
sbb
xlat
cmp
gs
jmp
push
out
into
adc
iret
sub
jns
mov
enter
mov
xchg
push
adc
pop
push
adc
decb
xlat
mov
sbb
outsb
add
mov
stos
nop
testb
std
jbe
enter
nop
lds
adc
dec
loope
jecxz
shrl
mov
pushf
shlb
adc
fldlg2
nop
fdivp
mov
dec
nop
add
lds
add
icebp
notl
dec
sub
sbb
cltd
test
push
lret
nop
mov
jp
sub
iret
adc
push
inc
nop
imul
lock
shrb
jg
xchg
push
clc
mov
fistl
aad
pop
mov
sub
cmp
pop
dec
nop
test
jg
adc
jae
mov
notl
xor
xchg
add
std
add
and
sbb
cmp
or
sub
ror
les
outsb
jbe
loop
inc
mov
push
or
dec
test
adc
sbbb
dec
push
dec
dec
shlb
mov
sar
hlt
nop
loopne
cmc
in
push
sarb
ret
fsubrs
cmpsl
adc
lock
mov
pop
push
loop
data16
xor
nop
in
xchg
pop
mov
adc
push
clc
aas
je
test
dec
add
ficoml
aaa
jno
nop
xlat
shll
push
fdivrl
adc
lods
jge
test
cli
data16
aad
cmp
shr
lcall
pushf
adc
jnp
pop
repnz
fmul
adc
xchg
rorl
dec
pop
aaa
mov
out
test
or
or
xchg
lock
cmp
push
adcl
xchg
cld
mov
cmp
mov
lea
lahf
stc
adc
test
adc
pusha
dec
cmp
inc
nop
mov
arpl
sub
cmp
mov
mov
push
xchg
fstpl
mov
jg
shrb
xchg
or
xchg
in
mov
or
nop
mov
xchg
mov
nop
adc
jmp
mov
in
jp
lock
test
lods
aam
adc
nop
mov
hlt
mov
mov
xor
stos
bound
xchg
jnp
ss
and
mov
cmp
add
mov
jg
stos
movl
and
mov
jne
adc
xchg
nop
dec
imul
xor
inc
mov
inc
jmp
mov
in
js
mov
int
pop
aaa
cmp
add
pop
xchg
xor
mov
fs
dec
push
or
xchg
ret
cmpsb
sbb
lret
mov
nop
push
xchg
pop
sahf
jle
or
inc
lock
dec
aad
inc
mov
in
or
jg
lahf
test
add
add
cli
insl
fnop
rcll
push
jo
fdivs
push
mov
sub
int
aam
xor
jo
clc
notb
push
push
inc
mov
jae
mov
inc
in
xchg
xchg
ss
neg
nop
aam
sbb
mov
cmovne
xchg
mov
jno
xchg
mov
sub
cmc
nop
mov
sbbl
nop
mov
int
out
inc
rclb
test
dec
pop
mov
cmpsl
nop
inc
and
inc
xlat
stc
nop
cmp
add
adc
push
or
call
jecxz
lods
in
nop
leave
jmp
aaa
cs
lock
inc
mov
xchg
lods
and
aaa
fnstcw
cmp
ss
push
adc
dec
push
xor
popf
mov
lods
dec
rcr
stc
jno
sub
insl
push
xchg
mov
add
mov
jne
fbld
xchg
jg
inc
scas
in
int3
cmp
cmp
jle
pusha
lods
pop
test
lock
aam
or
aam
and
cmp
pop
xchg
leave
push
mov
scas
adc
inc
mov
pop
push
jl
arpl
fadds
push
inc
out
inc
repz
lcall
inc
sahf
ret
jne
cmp
adc
sub
insb
imul
adc
xor
mov
shlb
imul
push
sarl
xchg
xor
mov
nop
inc
in
push
rcll
cmp
mov
jbe
push
adc
add
cmpsl
lods
nop
adc
jae
xchg
cmp
mov
nop
xchg
inc
gs
and
insb
nop
jns
movsb
push
sbb
insl
shll
stos
loopne
mov
ds
dec
adc
aaa
nop
mov
add
scas
arpl
mov
cmpsl
lds
pushf
mov
insl
and
push
sbb
and
rcrb
push
xchg
pusha
or
lock
fisubs
push
cltd
test
mov
rcrl
sub
ss
stos
xor
pop
or
lods
lock
inc
push
aaa
jp
push
icebp
out
jne
nop
adc
jmp
in
mov
or
dec
and
mov
loopne
xchg
nop
jp
jno
ss
mov
mov
hlt
jne
enter
pusha
ror
mov
pop
sub
nop
imul
sarb
in
or
mov
jecxz
pop
sbb
xchg
push
sahf
decl
mov
push
lds
sub
imull
adc
or
dec
inc
int3
in
xor
movsb
fistpl
sbb
jne
aaa
shr
in
out
test
es
inc
cwtl
nop
out
mov
jns
nop
repnz
and
push
nop
mov
add
cmpsb
ss
nop
pop
push
mov
mov
jns
lock
adc
fsubl
cmp
test
in
xor
xor
mov
stos
and
rorl
popa
movsb
mov
lds
loopne
pop
adc
aam
lret
test
lea
nop
inc
js
add
aaa
loopne
or
ljmp
dec
out
sub
in
ret
or
push
jge
mov
xchg
mov
or
mov
fmul
adc
cltd
xchg
jle
add
stos
cmpsl
and
mov
das
nop
in
and
push
xchg
shr
out
push
inc
jecxz
stos
xchg
adcb
repnz
adc
adc
jle
dec
or
scas
push
dec
mov
arpl
addr16
nop
push
push
xor
dec
xchg
and
aaa
adc
xchg
scas
repz
pop
dec
push
adc
mov
out
pop
or
or
into
adc
nop
lret
mov
pop
mov
repz
and
sbbb
test
out
xor
hlt
push
push
nop
je
pop
adcl
push
mov
mov
add
int3
rcll
nop
icebp
ds
xor
mov
es
mov
dec
dec
pushf
mov
xor
ss
iret
pop
pop
dec
nop
adc
pop
or
in
repnz
push
pop
call
movsb
push
in
lods
push
add
ljmp
popf
mov
lock
xchg
inc
loop
mov
mov
jle
ja
fwait
adc
popf
pop
mov
call
loop
out
jecxz
push
inc
xor
and
imul
test
lahf
popf
nop
jb
mov
outsb
arpl
cli
out
jge
sbb
or
iret
stos
cmp
leave
mov
imul
cmp
jmp
sarb
mov
divl
fucom
adcl
loop
or
outsl
aaa
sbb
insl
adc
popa
push
sbb
pop
or
or
sbb
aaa
shrb
jl
nop
dec
loop
xor
mov
push
in
mov
push
ss
lret
mov
jne
out
test
subb
mov
push
into
jb
mov
nop
mov
jmp
adc
fwait
in
lret
inc
lock
cmpb
xchg
push
mov
ret
add
lods
icebp
adc
ret
jns
add
jnp
rcrb
dec
repnz
stc
mov
sub
xor
rol
imull
lock
jbe
xchg
add
and
nop
push
add
mov
nop
outsb
jne
iret
and
mov
adc
ljmp
nop
and
mov
cmp
dec
jl
sub
inc
fldenv
push
adc
subb
mov
dec
push
xchg
mov
bound
popl
aaa
push
lods
scas
scas
nop
jg
fsubs
movsb
incb
adc
and
or
dec
shrl
inc
and
nop
pop
adc
xchg
push
push
mov
test
rcrb
mov
xchg
loope
push
inc
cmp
movsb
int
subl
lods
and
aad
or
pop
repnz
pushf
out
stos
xor
clc
in
sbb
nop
fs
rcrb
nop
or
push
pop
mov
mov
nop
and
dec
fwait
hlt
repnz
nop
xchg
fcompl
mov
add
add
popa
pop
nop
pop
add
fsts
and
push
aaa
fwait
nop
out
fstpt
movntps
push
jne
pop
sub
dec
dec
mov
sbb
sbb
sbb
jmp
mov
pop
test
push
dec
mov
xchg
les
push
lods
sti
scas
xchg
jmp
jne
jb
jmp
mov
push
dec
push
stos
sbbl
mov
sub
adc
inc
pushf
or
mov
cmpsb
pop
test
orl
es
ret
sbb
lock
mov
loope
mov
push
add
sub
mov
nop
pop
movsl
lcall
add
mov
adc
add
xchg
lcall
test
cltd
fisubs
xchg
push
cmp
fnstcw
nop
adc
gs
movsl
nop
out
test
aaa
adc
push
lods
cmpsb
xchg
dec
mov
push
insl
mov
sbb
jns
stos
push
fxsave
push
pop
mov
movsb
nop
sbb
addr16
sarl
nop
cld
outsb
sbb
sub
nop
cmpsb
popa
mov
adc
lock
shll
aad
mov
xchg
push
fsts
jle
mov
mov
sub
iret
inc
nop
leave
xchg
int
or
mov
adc
sti
add
xor
lea
rolb
frstor
xchg
ret
scas
nop
movsb
leave
fmull
mov
push
xchg
mov
dec
mov
inc
in
inc
mov
rorb
dec
push
cmp
cld
jle
mov
sbb
ds
push
ljmp
xchg
stc
jbe
mov
pusha
sarb
push
cmp
ret
inc
jae
mov
loop
stos
mov
inc
jns
cmp
jne
into
or
fistpll
xchg
and
imul
aam
in
pop
adc
mov
jecxz
sbbb
sbb
pop
ror
mov
test
pop
adc
fnsave
mov
fcomps
imul
and
sub
adc
push
cli
mov
mov
jg
js
mov
stos
lret
shrb
lcall
adc
bound
outsl
mov
mov
imul
nop
lret
add
fiaddl
xchg
adc
mov
sbb
pop
add
dec
test
mov
cmc
js
jmp
dec
mov
scas
or
bnd
inc
loopne
mov
push
nop
loop
shrb
jle
nop
push
xchg
cmc
add
lock
subl
and
mov
push
int
push
lret
cmp
stos
sbb
nop
or
stos
mov
sahf
push
xor
lock
int
js
lock
inc
adc
in
xor
cmp
sbb
addr16
and
imul
sub
mov
dec
jno
nop
movsb
insb
sbb
push
jecxz
nop
or
xor
rorb
jbe
dec
ficoml
je
pop
nop
push
cli
push
fsubrs
lea
nop
inc
push
cmp
leave
dec
and
bound
clc
movsl
nop
gs
add
pop
xor
inc
mov
jae
hlt
adc
nop
in
bound
add
pop
push
rcr
fcomps
push
mov
arpl
adc
cwtl
shlb
inc
nop
iret
push
fldl
xchg
adc
pusha
mov
inc
popa
fs
fsts
xchg
test
push
idiv
pop
aam
int
push
nop
xorl
movsl
into
stc
outsl
or
jecxz
stos
shrb
push
clc
xchg
clc
call
or
jb
add
mov
or
adc
loop
add
jl
jmp
push
xchg
ss
jp
pushf
adc
or
or
test
push
mov
ss
in
adc
popa
pop
jno
scas
lock
fimull
and
pop
loop
push
xchg
push
sub
shlb
stos
addl
inc
pushf
mov
mov
sbb
hlt
dec
nop
vmwrite
add
and
cltd
push
aad
shrl
jb
pop
cmpsb
dec
popf
xchg
adc
in
scas
fistpll
inc
lret
sti
test
add
aas
in
cmp
out
push
mov
stc
cli
iret
std
pop
xchg
pause
push
adc
fdivp
scas
mov
inc
sarb
or
lds
aam
xor
or
mov
lcall
sti
ror
push
adc
mov
sub
test
fwait
nop
in
jnp
rolb
mov
and
imul
rorb
push
pop
add
push
pop
push
fcom
mov
xchg
inc
xor
adc
hlt
in
xor
cmp
or
push
lock
inc
add
je
jge
jl
push
inc
jg
stc
fstpl
nop
pop
lret
mov
pop
nop
aaa
popa
xlat
push
testb
adc
aad
cmp
ja
push
rcll
leave
cmp
pop
mov
insb
cwtl
and
nop
mov
shlb
adc
add
ss
sti
add
push
adc
xor
outsb
jae
mov
nop
leave
sbb
imul
std
cwtl
arpl
cmp
pop
sub
inc
jge
sti
or
push
shrl
pop
adc
shlb
mov
lds
in
cmp
lods
je
stc
adc
les
das
mov
mov
outsb
mov
loopne
nop
fsubp
shll
inc
add
leave
push
nop
add
jb
insb
mov
nop
dec
xor
test
mov
dec
sbb
inc
mov
or
push
cmpb
jp
jl
std
nop
orb
jnp
fmul
mov
aaa
jae
arpl
fcomi
sbb
notl
lahf
dec
das
ss
mov
push
aam
jg
jbe
mov
outsb
or
je
push
nop
pushf
add
jecxz
dec
fcoms
adc
aam
mov
xor
cmpsb
enter
enter
mov
test
cltd
mov
aaa
sbb
inc
fwait
ss
repz
mov
insb
xchg
inc
adc
adc
addr16
es
out
stos
jne
or
xchg
or
xchg
aaa
jnp
adc
mov
in
fstp
cmp
daa
cwtl
mov
mov
and
dec
jmp
nop
scas
sbb
inc
mov
xor
add
divl
nop
mov
mov
xor
xchg
nop
pushf
bound
ffreep
fdivrl
loopne
nop
xor
add
jbe
nop
xor
iret
lds
sbb
ja
nop
xchg
out
push
test
inc
push
nop
out
vpsubsb
xor
nop
mov
pop
out
or
test
push
inc
test
outsl
xchg
cmp
add
cmp
mov
jl
mov
cmc
imul
mov
push
mov
shrb
mov
nop
sti
add
shrl
xchg
mov
lock
testb
lods
test
push
sub
gs
add
pop
mov
inc
adc
std
out
cld
vmovupd
push
and
dec
aas
dec
fmul
loop
adc
nop
jne
pop
pop
xchg
jno
repz
psubsw
nop
popf
mov
sbb
xchg
imul
int
test
aaa
ret
mov
or
sub
aad
cwtl
xor
nop
xor
fwait
inc
es
sub
ss
clc
enter
lret
cltd
adc
xchg
lock
cld
loope
call
push
nop
call
jge
push
nop
popf
jp
xor
jo
push
cmp
jmp
fwait
sub
add
ljmp
push
push
jb
inc
push
sbb
add
pusha
mov
out
in
or
nop
pop
and
sbb
sbb
out
scas
gs
mov
fistl
lds
fdivrl
les
mov
cmp
bound
ss
mov
cmpsb
inc
adc
or
adc
pop
sub
fwait
or
adc
pop
mov
out
mov
mov
nop
pop
jb
into
shl
xor
pop
xor
nop
pushf
mov
mov
das
inc
and
xchg
orl
jae
bound
adc
fadd
filds
lock
cmp
shlb
test
insb
push
nop
fcomps
mov
mov
nop
add
insb
ds
and
cld
mov
sub
xlat
inc
aam
dec
repnz
gs
sbb
xor
in
lods
xchg
add
push
mov
xor
lret
mov
js
aad
adc
out
and
loopne
cld
add
cli
mov
jge
or
cltd
xchg
outsb
pop
xorl
mov
xor
mov
setnp
jmp
pop
push
push
or
inc
fs
pop
sbbl
sub
push
pop
aad
ja
sub
shrb
push
into
testb
rclb
xlat
mov
out
dec
nop
add
xor
insb
adc
pop
push
sub
nop
dec
in
jb
mov
int3
in
imul
jecxz
mov
push
and
jnp
jp
sub
cmp
fisttpl
arpl
mov
aam
imulb
cmp
adc
pop
pop
add
jne
lods
sub
jb
mov
dec
ja
or
frstor
sbb
add
outsb
cmp
es
nop
jb
inc
push
test
jno
sub
sbb
xor
ljmp
push
cmpsl
insb
mov
aam
nop
repnz
nop
outsl
inc
or
xchg
xchg
add
lods
dec
mov
or
outsl
dec
xchg
in
test
dec
add
nop
dec
sub
mov
or
dec
jno
mov
out
icebp
push
push
mov
jg
leave
movsb
shll
add
test
lgdtl
test
rcrb
bound
nop
cmp
pop
mov
xor
lcall
mov
stc
xchg
xor
fdivrs
in
mov
cmp
dec
xchg
jae,pn
lcall
mov
jmp
stos
mov
xchg
mov
call
daa
in
xchg
or
sub
mov
decb
or
outsl
ficoms
jg
cwtl
test
adc
fnstenv
popf
ror
std
in
mov
rcrb
push
ficomps
xor
test
xor
adc
fcomps
inc
inc
imul
push
mov
pusha
mov
fistpll
push
rorb
arpl
or
adc
pop
and
out
fisubrl
lock
insb
adc
pop
nop
ret
adc
xor
popf
data16
pop
jl
jg
test
imul
or
rorb
mov
nop
in
mov
mov
push
xlat
or
popf
lods
insl
pusha
lock
paddq
xchg
add
nop
and
cmpsl
into
or
ja
adc
invd
in
imul
dec
jne
pusha
nop
and
rcll
ja
xchg
fiadds
rolb
imul
imul
jne
aam
fdivrl
and
sbb
je
dec
lret
incl
or
mov
aam
nop
popf
ljmp
or
xchg
js
pop
fcompl
or
push
roll
cs
mov
movsl
xchg
daa
fwait
dec
nop
push
outsl
ds
xchg
adc
mov
out
cmpsb
mov
cmp
dec
arpl
xor
jle
inc
inc
pop
inc
adc
cmp
push
dec
cmp
js
leave
in
nop
inc
lods
adc
adc
nop
mov
push
sahf
mov
sbb
xchg
fisttpl
add
divl
repnz
cltd
int3
sub
mov
jl
push
arpl
mov
int3
nop
imul
shlb
ja
mov
cmp
mov
nop
xchg
xchg
mov
pop
insl
mov
outsl
or
or
pop
and
fwait
call
and
pop
or
test
out
mul
stos
shrb
xchg
ret
xchg
rolb
inc
and
push
pop
adc
xor
je
pop
fsubp
fs
ljmp
or
scas
repnz
fildl
fimull
xchg
dec
stc
push
nop
addb
aas
adc
add
shl
out
insb
div
nop
push
jmp
xlat
sub
inc
test
shrb
add
ficoml
repnz
add
cmp
sub
fcoms
mov
scas
mov
leave
mov
nop
aam
rcl
adc
ds
aad
gs
mov
dec
inc
nop
sbb
pop
sbb
xlat
popf
insl
inc
or
nop
mov
pop
xchg
or
jne
mov
testl
into
xchg
adc
fstpl
and
outsl
cs
loopne
add
or
pop
pop
push
nop
jne
nop
and
call
nop
cmpsb
mov
fimull
adc
add
loop
shll
lock
sbb
xor
adc
cli
ljmp
mov
loopne
daa
addb
mov
pushf
xchg
nop
xchg
pop
inc
outsb
das
sub
in
mov
subb
mov
out
sub
xor
outsl
insb
jnp
mov
fildll
adc
mov
hlt
stos
nop
in
aam
inc
outsl
mov
push
add
dec
or
sub
jno
sti
nop
xor
fmuls
outsb
mov
xchg
inc
add
pop
lea
add
push
stc
jns
jl
or
mov
nop
push
movsl
pop
cli
orl
in
dec
nop
les
call
push
ret
xor
push
sub
cli
push
sbb
jb
xchg
mov
mov
enter
lods
xchg
dec
xchg
icebp
nop
ret
and
cmp
arpl
nop
ret
cld
inc
sub
call
push
test
xchg
stos
nop
dec
xchg
stos
cli
pop
into
fbstp
fidivrs
int3
roll
scas
sahf
nop
mov
jno
jae
stos
pusha
nop
js
sub
pop
lock
stos
out
lret
nop
jmp
leave
imul
add
enter
push
and
pop
jg
inc
mov
ret
xor
mov
xor
jmp
cmp
popf
ret
xchg
lods
jae
test
sub
jns
repnz
jg
mov
dec
nop
inc
ror
lcall
rcll
scas
mov
addps
fnstcw
mov
nop
inc
inc
push
add
inc
js
rolb
mov
mov
roll
adc
jl
mov
pushf
dec
call
dec
jno
xor
push
out
or
xlat
xchg
adcb
push
sbb
adc
push
les
jb
and
jge
daa
xchg
loopne
pop
jne
imul
mov
add
loope
int
jg
sub
xchg
jmp
add
hlt
xorl
dec
push
int3
or
pop
in
rcr
adc
sbb
dec
les
jae
arpl
mov
in
rcrl
mov
cmp
shrb
lock
outsb
in
xchg
sbb
inc
jns
xchg
jecxz
nop
cmp
into
cmpl
imul
cs
rcr
es
jmp
cmp
or
mov
ret
divb
adc
insb
mov
xchg
loopne
rorb
mov
mov
popf
pushl
cmp
jb
mov
les
inc
cmp
jg
nop
push
sub
or
dec
xor
rclb
addl
out
dec
addr16
adc
push
pop
cmp
push
and
jb
sub
adc
cs
push
popa
nop
outsb
or
jmp
add
int
lock
and
adc
in
testb
nop
xchg
xchg
repnz
mov
jne
push
test
sub
flds
aaa
aad
xchg
xor
xor
mov
inc
fcoms
mov
xchg
nop
cwtl
leave
jl
sub
in
test
add
pop
nop
mov
aaa
fildll
inc
sti
nop
insb
or
pause
jp
or
mov
and
les
mov
pushf
dec
push
adc
xchg
xlat
std
xchg
pop
aam
aam
jno
scas
fnsave
lahf
adc
xlat
inc
sub
nop
pop
dec
push
dec
test
sub
push
arpl
daa
test
data16
jo
push
lret
cmpsl
jmp
mov
adc
ror
jp
divb
xor
or
int
shrb
dec
test
shr
flds
nop
xchg
idivl
jae
shll
shl
shlb
adc
cmpsb
or
cmp
sub
pop
pop
fiadds
nop
jb
xor
push
and
lods
nop
iret
and
xchg
inc
sub
mov
dec
adc
jge
and
nop
xchg
add
sub
mov
test
xor
in
mov
iret
xchg
cld
notl
loop
push
mov
mov
jne
jge
icebp
dec
add
es
aam
adc
xor
dec
enter
or
mov
jo
arpl
pop
int
xchg
cwtl
fwait
in
cmp
nop
inc
shr
xor
nop
shll
jp
nopl
rdmsr
pushf
std
pop
shrb
iret
sbbl
mov
sub
push
nop
jmp
mov
mov
int3
cmc
and
loopne
mov
rcrb
and
outsl
cmp
push
jge
ljmp
cmpsb
xor
test
nop
imul
into
or
lods
loopne
stos
dec
leave
neg
loope
jge
or
mov
bound
mov
add
sub
add
mov
push
dec
jecxz
fisubrl
lea
nop
mov
movsb
out
mov
gs
and
enter
mov
sti
or
mov
sbb
rclb
outsl
jo
adc
pushf
pop
xchg
clc
in
out
jnp
pop
push
jbe
mov
nop
div
inc
mov
popa
adc
mov
insl
ds
pop
adc
clc
mov
sahf
xor
xor
sbb
mov
nop
mov
insl
pop
cmp
psrlw
mov
mov
jns
loope
arpl
lods
cmp
add
mov
repz
mov
test
push
mov
faddl
mov
push
nop
mov
lds
ds
fcmovne
xorl
or
sub
xlat
test
jl
pusha
cmpsb
mov
nop
insl
std
jo
inc
pop
cmp
js
mov
adc
pop
push
sarb
inc
lock
push
sbb
out
or
fcoml
sar
popl
pushf
pushf
aam
movsb
adc
push
mov
jno
fcmove
ja
test
std
adc
int
mov
pop
adc
fldt
pop
rol
sbb
and
inc
xchg
pusha
hlt
xchg
std
jg
rcrb
sub
stc
dec
loope
mov
mov
dec
nop
push
add
imul
repnz
mov
push
and
nop
test
or
xlat
jbe
adc
xchg
mov
nop
pop
das
push
notb
cltd
movsb
nop
push
mov
sub
outsb
nop
and
push
sbb
or
rorb
or
sarb
pusha
sti
mov
mov
xchg
pop
std
outsb
sub
stc
mov
or
adc
in
push
sbb
dec
dec
out
in
pusha
inc
nop
xchg
mov
ds
xchg
pusha
loop
nop
pop
neg
sub
nop
xchg
bound
mov
dec
in
xor
enter
sbb
pop
mov
arpl
loopne
out
mov
je
xor
xor
in
fcoms
cmpsb
xchg
icebp
test
xor
xor
neg
mov
test
repz
cli
mov
addr16
out
inc
mov
ret
nop
dec
adc
sub
nop
jg
icebp
push
insl
mov
nop
pop
pop
cmp
out
or
cmpsl
hlt
icebp
loopne
inc
xchg
mov
sbb
jmp
and
iret
sbb
sub
jns
cltd
pop
mov
pusha
push
dec
cmc
ljmp
lds
jg
mov
adc
mov
nop
adc
movsl
adc
pop
pop
jmp
jae
fisubs
mov
ret
push
inc
sub
jae
nop
clc
or
pop
scas
cltd
inc
add
test
or
mov
rcrl
ja
ds
lea
nop
lret
sub
sub
sub
dec
aaa
nop
test
out
in
mov
lock
out
lock
cmpsb
test
test
sbb
add
inc
out
outsl
nop
xchg
js
repnz
sub
pop
mov
enter
rcl
fs
das
lret
sub
dec
gs
outsb
adc
or
pop
addr16
cltd
or
fmuls
mov
mov
mov
nop
or
adc
pop
data16
nop
xor
roll
frstor
cmp
cmp
fcoml
sub
nop
mov
jnp
pop
cmp
rclb
in
mov
enter
nop
ljmp
mov
rorl
popa
mov
mov
mov
repz
fdivr
loope
mov
pop
pop
sub
sar
je
nop
addr16
popf
adc
out
push
jae
test
sub
adc
repz
lods
loopne
dec
nop
fiaddl
xchg
mov
imul
nop
mov
ljmp
rcr
jg
mov
xchg
xchg
cmp
cmp
mov
push
pop
lea
push
cmpsl
push
mov
rcll
shrb
xchg
xchg
out
jb
scas
xor
xlat
or
sub
lret
sbb
xchg
inc
add
jp
dec
lock
add
sub
shr
jae
push
je
movsb
sbb
jne
iret
loop
adc
mov
in
in
nop
dec
fistpl
outsb
sahf
leave
mov
bound
leave
nop
in
jo
mov
nop
and
roll
xor
lahf
xchg
cmpsl
inc
nop
mov
xlat
inc
repnz
adc
sahf
mov
cmp
mov
sbb
nop
dec
jmp
jne
and
fsubl
out
rol
nop
or
push
add
dec
push
mov
sbb
test
pop
orb
nop
jnp
jmp
test
inc
mov
mov
cmpsb
and
sub
dec
nop
push
in
cmp
dec
incl
lea
dec
mov
imul
sbb
mov
rclb
or
push
nop
ficoms
mov
mov
inc
dec
sahf
pop
and
and
ljmp
in
sti
xor
shlb
adc
ja
nop
pop
test
iret
in
cwtl
rclb
xchg
jb
cli
nop
cmp
xor
outsl
mov
pop
test
ret
aam
mov
cmpsl
stc
push
cmp
xchg
mov
inc
mov
pop
cmp
xor
test
in
push
sbb
mov
pop
jo
mov
sub
inc
std
pop
cmp
enter
mov
cmc
mov
mov
add
test
add
stc
lock
cmp
sub
push
cmp
hlt
hlt
call
insl
mov
mov
mov
test
rolb
call
pop
or
nop
cmp
push
rclb
ret
xlat
nop
fs
jmp
test
or
cmpsl
cmp
addr16
daa
nop
sub
repz
mov
stos
mov
lahf
ljmp
or
xlat
fadd
cmpb
sub
or
out
xor
je
xor
adc
push
in
inc
outsb
mov
pop
es
fldt
cld
xchg
aam
leave
adc
mov
mov
push
push
out
push
mov
rcll
xchg
add
dec
xlat
in
pop
insl
nop
sbb
push
xor
jae
loope
mov
push
push
dec
in
out
lods
into
ret
or
dec
sbb
push
nop
jmp
push
in
scas
mov
adc
daa
cmpsl
sbb
jno
inc
inc
xlat
andl
imul
push
or
addl
nop
pop
cs
stc
jne
jnp
nop
add
inc
dec
mov
adc
mov
pop
dec
mov
xchg
jns
fxch
push
dec
jg
popa
mov
les
inc
adc
ss
mov
fwait
loopne
mov
sub
or
cmc
out
mov
clc
call
repnz
ficomps
dec
xor
and
mov
stos
call
ljmp
jbe
sahf
push
scas
stc
mov
pop
rorb
or
sbb
addr16
mulb
pusha
dec
sbbb
in
aam
test
flds
sbb
stos
or
filds
aam
lock
and
push
jno
ret
add
pop
aam
push
int3
incb
fsub
dec
rcrb
nop
aad
int
jmp
xchg
mov
aam
popf
loop
jns
lea
push
inc
notb
xchg
dec
adc
mov
xlat
das
nop
jl
fwait
jecxz
push
push
cs
fcomps
mov
add
shlb
inc
nop
push
sub
or
jecxz
nop
leave
cli
lahf
cld
mov
fmull
sub
adcb
addps
jbe
lock
cmp
gs
fadd
shl
enter
mov
pop
nop
ret
cmp
nop
sub
jg
add
cwtl
add
sbb
mov
sub
mov
push
icebp
add
scas
mov
ror
cwtl
cmpsb
xchg
mov
fisttpl
decb
imul
jge
mov
xchg
sbb
jno
dec
xor
ftst
lods
push
xchg
xchg
aad
and
adc
rorb
bswap
mov
call
and
xchg
arpl
sarl
and
gs
out
xchg
into
cs
inc
sbb
xchg
cmc
jp
fisubrl
add
ds
jecxz
decb
mov
push
jmp
sub
add
inc
mov
sti
xor
jno
and
pop
scas
push
adc
ret
nop
pop
imul
nop
jns
cmp
popf
mov
scas
mov
rolb
and
nop
inc
rorb
call
sub
adc
stos
pop
jle
sbb
jge
ror
pop
mov
pop
arpl
nop
cmp
stc
sub
nop
adc
imul
out
nop
pop
add
test
movsl
leave
mov
jecxz
mov
pushf
add
repz
push
sbb
mov
aaa
mov
aad
mov
outsl
ss
xchg
rcl
sbb
push
sbb
dec
push
fucomip
mov
divl
aad
nop
lock
out
jo
ficoms
nop
aad
mov
adc
adc
andl
icebp
cmp
cld
bnd
mov
inc
pop
in
imul
nop
mov
fisubrs
cmp
or
mov
or
xor
pop
jmp
fstpl
stos
jmp
pop
nop
add
or
les
vprotb
xchg
xor
xor
inc
add
loop
nop
jl
add
je
sub
inc
xlat
aas
loopne
nop
es
inc
sub
nop
in
ret
fs
ror
mov
gs
mov
or
jno
fdivs
cmpl
nop
cltd
adc
xlat
outsb
and
pop
pop
dec
ja
getsec
test
hlt
sbb
and
out
pop
sbb
daa
ljmp
lret
xlat
add
mov
mov
pushl
cld
mov
and
lret
xlat
jmp
repz
adc
sub
ficompl
repnz
dec
jl
mov
xor
mov
out
xchg
fucomi
jo
and
xchg
mov
pushf
inc
sub
push
jg
lcall
push
iret
dec
mov
imul
cmpsb
enter
cli
mov
data16
pushf
cmp
out
xchg
jg
cmc
or
mov
dec
xchg
loopne
fistpl
testb
mov
jnp
nop
imul
inc
sub
and
cmpsl
push
enter
pusha
aaa
popa
push
repnz
inc
addr16
movsl
inc
mov
rclb
jecxz
iret
nop
lods
add
mov
nop
dec
je
and
cmp
shr
and
ficoml
add
and
nop
dec
or
fs
nop
je
loopne
test
imul
sub
mov
aas
and
insl
xchg
nop
push
dec
push
pop
and
test
fcoml
adc
nop
adc
ss
xchg
push
jl
daa
pop
lret
fcoml
or
xchg
call
popa
clc
and
or
ds
mov
mov
pop
add
inc
push
xchg
pop
push
enter
and
lcall
lret
xchg
fstl
nop
jecxz
inc
jbe
int3
icebp
inc
nop
clc
xor
xlat
nop
call
dec
into
movsl
xor
es
mov
push
mov
loope
repz
push
adc
and
scas
pop
fsubs
arpl
nop
sub
xchg
nop
gs
cmpsl
adc
and
nop
mov
xor
pop
stos
push
sub
out
cmp
xor
pop
bound
jg
xlat
push
dec
fmul
mov
fisttps
or
xor
adc
inc
mov
inc
cmc
adc
fcoml
inc
push
insb
fistl
rcr
nop
pop
lea
js
popa
sbb
jns
and
adc
xchg
xchg
adc
stc
push
dec
loop
icebp
pop
mov
cmp
mov
into
pop
sarb
mov
lods
push
nop
enter
pusha
fnstsw
adcl
mov
dec
jbe
push
fdivrl
nop
cmp
xchg
out
fs
sbb
push
popa
xor
adc
xchg
mov
fwait
xchg
ficomps
loop
idivb
inc
jae
sbb
adcb
pusha
shlb
movsb
fcompl
scas
loopne
push
add
inc
jmp
imul
subb
add
addr16
daa
push
js
loopne
ret
pop
loopne
or
outsb
cmpsb
repnz
mov
and
icebp
pop
pop
movsb
test
nop
in
xchg
pop
cmpsl
jle
nop
movsb
mov
aas
mov
ljmp
ret
shr
shlb
xchg
cmpsb
nop
fs
lahf
stos
pushf
test
and
mov
inc
out
fs
fsubrl
repnz
jecxz
nop
std
test
mov
add
shl
cld
and
outsb
dec
les
in
std
lock
sub
pop
das
sub
cmc
pop
sub
mov
sbb
mov
scas
enter
lcall
cmpsl
shlb
les
lahf
mov
nop
aas
into
jle
sahf
mov
lods
add
mov
in
into
mov
adc
fwait
and
push
les
in
fldenv
push
pop
inc
roll
nop
adc
xchg
fwait
pop
int3
xchg
mov
inc
fisubrl
jge
fmulp
pop
sub
adc
xor
loope
pushf
loop
addb
neg
push
nop
sti
dec
loop
mov
lret
pop
sarl
add
in
cltd
push
ret
lock
nop
mov
ds
bound
fcmovnbe
jo
andl
aad
fs
push
xor
jge
push
lock
inc
push
shl
pop
push
pop
popa
add
fmull
test
test
test
push
or
xchg
popf
test
xchg
sar
and
cmp
mov
and
rcl
arpl
jmp
xor
les
lea
pop
or
les
mov
sbb
nop
jle
cmp
jo
nop
shl
cmpsb
or
mov
sub
popa
int3
nop
ljmp
lea
stos
sub
aaa
sbb
inc
iret
fdivs
cwtl
ja
xchg
mov
sub
je
jecxz
xchg
leave
xor
nop
mov
pop
jb
and
int
popa
fildl
push
fwait
imul
push
leave
push
arpl
bound
int3
fadds
dec
cli
jae
lret
aam
pop
loopne
cmc
jmp
fwait
cmp
cmpl
test
je
mov
xor
lcall
stos
xorb
jo
nop
jbe
jmp
mov
dec
loopne
ja
cli
sub
cmp
sbb
in
sub
bound
push
push
fsubrl
aam
nopl
outsl
lock
push
test
out
test
sub
dec
pop
adc
pop
into
scas
push
bound
icebp
nop
or
push
inc
mov
jl
nop
pop
test
fwait
adc
mov
push
nop
cmc
sub
pop
or
xchg
mov
and
popa
xchg
nop
sub
mov
inc
call
xchg
inc
test
adc
mov
xchg
repz
int3
jp
insb
nop
jg
ja
xchg
mov
mov
adc
sub
jne
nop
rcrb
lds
scas
leave
jmp
int3
fnstsw
mov
dec
test
nop
fildl
or
int
insb
sub
push
das
outsl
push
fsubs
pop
cli
nop
cs
or
lods
scas
aas
nop
inc
mov
scas
rcll
sbb
test
mov
cmp
jnp
jge
nop
xchg
and
mov
nop
dec
pusha
inc
daa
lcall
sbb
and
pop
xor
popa
xor
jecxz
test
aam
mov
push
and
fcomps
ret
add
nop
js
dec
mov
push
filds
imul
inc
lret
mov
sub
insl
loopne
stos
add
sub
sbb
nop
lahf
xchg
mov
xchg
testb
arpl
divb
or
pushf
imul
jmp
xchg
cmp
mov
cmp
nop
push
mov
inc
adc
lock
mov
aad
nop
jmp
xlat
dec
jno
insl
inc
fimuls
pop
xchg
mov
and
dec
cltd
dec
fstl
cwtl
cmp
or
incb
fwait
enter
inc
or
nop
add
add
add
sbb
mov
stos
repnz
leave
fbld
addr16
mov
inc
push
nop
or
sarb
push
jne
nop
mov
mov
xchg
nop
fildll
mov
mov
push
in
mov
nop
cmp
mov
or
jl
mov
push
jge
jo
pop
js
testb
sub
lahf
clc
or
adc
iret
sti
cmp
inc
xchg
and
jg
mov
aad
add
js
sub
ret
mov
xor
push
adc
mov
or
lds
push
sahf
sub
inc
pop
imul
out
lds
fwait
in
pop
nop
dec
cltd
repnz
sub
ss
fwait
jnp
out
xchg
test
ds
shlb
lods
test
sbb
test
nop
sub
std
jge
pop
movsb
out
call
lgs
ret
and
call
out
fcmovbe
rclb
add
imul
xor
clc
out
jmp
mov
dec
dec
inc
mov
xchg
adc
cltd
das
cld
clc
jne
mov
gs
ljmp
sbb
fmuls
loope
and
test
nop
cmp
xor
nop
push
lahf
in
jns
xor
cmp
push
mov
icebp
fisubs
sbb
int
jecxz
leave
lods
outsl
sub
ss
mov
push
out
clc
xor
lods
jb
fldcw
mov
nop
insb
push
addr16
imul
testb
jae
fistpl
jo
insl
xchg
nop
xlat
call
rclb
xchg
push
mov
mov
mov
xor
add
add
aad
mov
inc
push
push
sar
push
cmp
repnz
lahf
pop
fdivs
nop
mov
in
mov
nop
and
jb
jle
fistps
rclb
nop
test
js
ds
adc
add
xor
loop
in
mov
jnp
lods
xchg
push
nop
mov
xor
add
fistl
xchg
cmp
lods
dec
incb
ret
dec
sbb
shrl
push
das
cmpsb
ss
std
adc
adc
loop
and
add
shrl
sbb
and
lcall
jae
repnz
nop
lods
push
jb
mov
pop
lds
fstpl
pop
nop
lea
je
nop
pop
adc
fnstcw
aad
mov
push
add
xchg
das
and
dec
scas
shlb
add
cmc
inc
mov
es
mov
fiadds
sbb
pop
sbb
test
nop
fbstp
insl
mov
mov
mov
push
xchg
dec
je
nop
sbb
pop
xor
nop
sub
jmp
addr16
and
and
adc
mov
in
mov
adc
inc
fcompl
rorl
xchg
mov
call
cmp
mov
or
movsl
ret
push
insb
sub
mov
fisubrs
test
shrb
xchg
dec
jo
mov
adc
dec
in
jb
xlat
fcompl
or
lret
aaa
sahf
push
cwtl
daa
in
add
test
mov
sbb
imull
mov
scas
lret
and
xchg
js
sbb
das
adc
and
scas
je
cmp
mov
sti
mov
sar
nop
jb
jno
inc
mov
or
rol
je
fbld
mov
shlb
shlb
fwait
xlat
mov
cmp
jno
push
movsb
jecxz
test
mov
fmull
push
in
cld
mov
add
sub
nop
in
fistpl
cmc
loop
nop
pop
enter
and
ficompl
mov
pop
mov
mov
lea
lock
xor
or
inc
push
lock
stos
inc
nop
hlt
pop
dec
push
or
jle
aam
pop
sbb
fdivl
in
mov
or
xchg
nop
out
xlat
test
int
in
pop
fbld
out
idivb
push
adc
fs
lds
or
gs
ljmp
lret
mov
mov
les
je
enter
adc
xor
in
mov
xchg
ja
mov
dec
loope
nop
ljmp
into
adc
inc
push
xchg
repnz
or
pop
pop
shrb
mov
cltd
lret
nop
mov
in
cmp
clc
dec
sub
test
sbb
dec
pop
ror
pop
nop
fisubl
scas
push
mov
jne
nop
adc
sahf
hlt
insl
divl
nop
add
mov
xchg
and
lahf
fcom
sbb
adc
rclb
fnstcw
add
andl
pusha
icebp
jae
or
sub
testl
repnz
add
dec
mov
test
iret
in
icebp
cmp
lods
or
mov
push
inc
cmp
mov
jbe
xor
sub
insl
nop
jge
int
adc
les
stc
nop
lret
pop
ljmp
popa
nop
jns
dec
les
shlb
or
pop
inc
daa
mov
ficompl
es
nop
cmpsb
lahf
hlt
pop
push
ss
xchg
and
data16
div
jecxz
dec
out
cmp
xor
push
fsubp
nop
xchg
ret
fsts
lret
mov
mov
dec
mov
nop
test
jne
mov
pop
aas
les
out
jecxz
mov
pop
dec
ljmp
jo
xchg
mov
add
es
mov
lahf
nop
aas
js
mov
push
lcall
jl
fs
mov
jmp
or
xor
nop
push
lds
xchg
imul
fidivrl
mov
testl
mov
jmp
hlt
xchg
cld
aad
xchg
stos
nop
cmpsb
and
xorl
in
add
nop
jge
rcrl
inc
pop
nop
rcr
ja
insl
in
pop
stc
nop
es
inc
add
cwtl
ja
dec
lret
push
pop
dec
mov
test
shr
nop
lcall
rclb
or
insl
nop
adc
mov
lret
jle
ja
lock
imul
mov
cmc
arpl
insb
sarb
fimuls
push
dec
pop
nop
xchg
cmpsb
xchg
nop
pop
ror
sub
outsl
aas
nop
add
xchg
pop
jl
push
in
test
iret
push
nop
xchg
psubsw
pushf
sbb
je
inc
xor
adc
mov
dec
mov
shr
mov
jl
mov
push
addr16
repz
xor
call
cwtl
xchg
or
out
mov
aam
rorb
adc
dec
adc
push
mov
push
push
cmp
xchg
sti
rol
sahf
lds
dec
pop
push
andl
mov
push
stos
int3
fistl
nop
jne
push
mov
and
seto
inc
cmp
out
and
nop
lods
rcrb
mov
nop
ret
xor
lahf
rcl
nop
mov
xchg
insl
fwait
sub
cli
push
cmp
ja
pop
cmpsb
xchg
mov
add
mov
xlat
insb
nop
or
filds
adc
nop
dec
fwait
mul
and
arpl
jge
pop
imul
mov
push
inc
scas
aad
xchg
dec
mov
dec
hlt
jp
jecxz
ret
fcoml
les
xor
pop
or
xchg
fstps
and
xlat
mov
shrb
adc
popf
nop
cmpsb
cmp
and
nop
movsl
push
aas
pushf
mov
std
sbb
push
roll
pop
mov
in
js
bound
add
sti
xor
or
jg
sbb
push
cmp
jl
ljmp
outsl
test
xchg
jae
adc
fwait
loopne
mov
add
xchg
fsts
jbe
mov
dec
add
dec
mov
lcall
cli
test
xchg
jge
cs
dec
rcrb
cmp
nop
sti
sbb
sahf
lcall
mov
orl
in
nop
inc
xor
popf
jmp
out
out
sub
sbb
nop
jnp
mov
in
stos
ss
out
mov
lods
sbb
arpl
iret
push
pop
cmpsb
insb
fisttpl
nop
les
xor
hlt
ret
nop
sub
dec
xchg
cltd
inc
rclb
adc
nop
fsubrl
jmp
cmp
pop
and
nop
lock
nop
cmc
pop
call
into
nop
iret
or
xor
rorb
sub
or
fcomp
dec
rclb
fstpl
jmp
mov
xor
cmp
aad
pop
mov
xchg
push
xchg
xor
clc
je
mov
in
mov
mov
daa
mov
loope
mov
sarb
repnz
negb
xor
popa
xor
std
aam
nop
or
es
sub
test
repz
leave
in
nop
jbe
jp
jae
pop
pop
nop
pop
arpl
nop
jo
pop
fists
nop
lods
xchg
sbb
jnp
popf
nop
inc
sahf
mov
mov
fldcw
xor
icebp
nop
shll
inc
repnz
mov
iret
jp
hlt
pop
imul
fcomps
les
mov
nop
mov
loop
adc
mov
shlb
flds
nop
dec
shl
mov
mov
shll
out
fs
out
cs
clc
xchg
xor
flds
pop
icebp
outsl
adc
pop
sub
rclb
xor
add
fwait
sub
adc
or
lahf
cltd
out
decb
aam
add
xchg
or
xchg
adcb
sbb
xor
in
inc
cld
sarb
pushf
mov
call
call
sahf
adc
pop
fs
dec
pop
mov
rorb
js
clc
jg
nop
lods
push
mov
ds
cmp
in
and
xchg
es
ljmp
enter
icebp
cld
leave
push
sbb
or
xchg
negb
add
in
inc
fimuls
cmp
int
pop
nop
pop
mov
nop
ljmp
lods
nop
mov
mov
jge
in
clc
gs
inc
je
mov
aad
popa
leave
mov
inc
xchg
mov
xchg
add
arpl
lods
mov
pop
nop
cmp
and
aam
mov
sub
pop
push
lods
add
cltd
ja
pushf
mov
addl
sub
nop
movsl
rclb
push
cwtl
scas
xchg
das
popa
cmp
cmpsl
mov
nop
testb
or
pop
jns
or
mov
dec
nop
adc
filds
xchg
insl
xchg
push
loopne
xor
test
pusha
nop
add
add
aas
xchg
ljmp
pop
pop
pop
jmp
enter
xor
mov
jp
jge
jmp
add
cs
insb
lahf
push
in
fnstenv
cld
shrb
nop
sbb
sub
adc
fucomip
xchg
sbb
test
leave
and
xor
cld
subl
loop
push
divb
stos
fnstenv
cmp
adc
xchg
mov
jp
shlb
popf
insl
ficompl
nop
mov
xchg
loope
nop
test
xor
lcall
mov
nop
test
jo
ljmp
ret
int3
add
dec
sbb
pop
fcomps
ss
push
mov
sbb
hlt
insl
or
popa
sub
fnstcw
xchg
arpl
aad
ljmp
jbe
cmc
mov
cwtl
push
mov
add
nop
mov
divb
scas
nop
call
aad
push
nop
sahf
cwtl
push
movsb
imul
outsl
int
mov
nop
jg
push
mov
nop
addb
jle
dec
mov
cli
lock
add
inc
pop
dec
xchg
aam
sub
adc
mov
ror
nop
cmp
push
pop
mov
inc
mov
dec
and
xor
push
outsl
lock
imul
xlat
sahf
jle
dec
pop
xchg
lahf
test
mov
sbb
push
in
cmpsb
add
jecxz
mov
fsubr
sbb
test
adc
xacquire
imul
in
pusha
xchg
mov
mov
inc
data16
xchg
repz
mov
lcall
aad
push
fbld
nop
sbbb
out
dec
ret
cmp
xchg
sub
push
mov
xchg
nop
lret
stc
xchg
fistps
or
add
cmp
repz
xchg
aaa
ds
fldcw
in
cmp
xchg
nop
movsb
xchg
lahf
js
jnp
nop
jmp
data16
mov
ret
lret
dec
add
ret
test
cmp
sarb
sub
dec
adcl
das
lock
hlt
jns
fs
adc
dec
xchg
adc
mov
xor
gs
mov
fisubrl
nop
lret
push
jmp
sarb
fisttps
lods
push
pop
cli
nop
lds
mov
adc
xor
mov
or
mov
add
inc
inc
gs
push
xchg
mov
sbb
std
dec
ror
lods
insb
ret
popf
mov
cld
nop
sti
mov
test
jmp
cmp
lahf
pop
cmp
push
sub
push
jne
cmp
addl
cmp
mov
adc
adc
mov
mov
xchg
mov
xchg
nop
or
stos
lds
mov
xor
xchg
test
or
jl
sbb
mov
fsubrp
popf
push
pushf
mov
nop
rcrb
lret
test
push
jbe
outsb
xor
fsts
cmpsb
sahf
call
fmulp
sbb
jecxz
clc
stos
cld
mov
les
or
fnstcw
cmp
push
jno
sti
loop
mov
rcr
inc
cmpl
aad
nop
int
fdivl
nop
adc
pop
cmp
notb
cwtl
jl
rcll
pop
stos
mov
push
fsubr
mov
push
nop
movsb
lock
sub
cmpsl
stos
nop
xchg
xchg
sbb
outsb
jmp
mov
sbb
mov
or
imulb
xchg
das
lods
mov
mov
and
adc
pusha
xor
outsl
sbb
jp
nop
pop
mov
jbe
ljmp
cmp
cmpsb
gs
jg
sub
jns
nop
mov
loop
push
push
xor
sbb
pop
adc
shlb
push
iret
xchg
xor
sbb
cld
jno
daa
in
scas
hlt
adc
mov
mov
das
hlt
jle
cmpsl
lods
cwtl
rcl
mov
push
mov
pop
mov
mov
aam
js
aad
push
xor
jb
incb
rol
popf
pop
jmp
aaa
xchg
cld
add
sub
pop
push
mov
test
clc
and
clc
xchg
les
dec
ret
inc
or
clc
push
push
dec
shr
sbb
adc
xor
adc
push
xchg
dec
mov
xchg
mov
mov
nop
mov
lret
shll
test
shlb
xchg
xor
in
mov
aam
das
cmp
pop
xor
push
push
jge
cmpsb
adc
mov
gs
sub
subl
popa
aad
out
ret
nop
call
outsb
fisttpl
es
xchg
xor
and
cmpsb
popf
nop
dec
pop
enter
push
lds
dec
xor
mov
sarb
mov
or
scas
mov
pop
loopne
lahf
xchg
pop
adc
cmp
sbb
lock
je
or
nop
movsb
fldt
jnp
rorl
inc
subl
mov
movsb
dec
mov
sub
out
fstl
dec
dec
or
mov
dec
nop
mov
test
mov
arpl
jno
inc
jecxz
nop
sbb
aaa
imul
push
sbbl
shlb
sbb
fsubrs
jg
mov
addr16
loopne
jl
adc
xchg
push
push
clc
int
nop
cs
xchg
mov
call
gs
lret
mov
insl
add
repz
mov
xchg
cmc
std
adc
xor
enter
insb
sarl
jns
mov
and
in
fisttpll
insl
das
pushf
dec
mov
or
rcrb
sub
pop
nop
pusha
inc
adc
jns
adc
adc
sub
sub
bound
mov
push
outsb
ss
jmp
and
sbbl
lods
aaa
out
fidivs
out
mov
push
mov
nop
filds
adc
jae
add
mov
jecxz
add
xor
std
ja
xor
mov
lea
dec
frstor
add
shrb
enter
jnp
into
push
pusha
mov
por
leave
xor
fstp
nop
jo
sub
pop
nop
mov
jnp
xchg
nop
xchg
and
stc
fldenv
lock
xor
jge
in
loope
adc
pcmpgtb
adc
ljmp
push
jp
jmp
imul
xchg
adc
adc
bnd
enter
cmp
add
sti
xor
fldcw
pop
fsts
pop
push
rcll
aad
mov
nop
inc
adc
dec
nop
push
aam
cmp
in
loope
inc
and
lods
or
xor
xchg
es
pop
fwait
roll
nop
ja
jae
test
jne
fildl
outsl
mov
jb
inc
popf
sub
dec
nop
stos
mov
mov
mov
add
sbb
incb
adcl
cli
ss
mov
mov
pop
add
dec
rclb
cmpsl
sbb
fistl
cmp
xchg
mov
scas
mov
adc
and
cmpb
pop
and
lea
loopne
jo
pop
sbb
lods
or
inc
mov
roll
cltd
adc
mov
or
sahf
nop
xor
xchg
jo
loope
out
test
jge
nop
xchg
bswap
jb
fst
mov
lea
mov
fsub
pop
nop
sbb
push
sub
ss
sbb
adc
hlt
mov
pop
fs
xlat
nop
dec
js
cmp
fmuls
xlat
or
dec
test
push
mov
or
add
fidivl
icebp
nop
cmp
fwait
mov
jnp
popf
imul
mov
in
sbb
shlb
push
add
and
or
les
adc
insb
ljmp
dec
push
outsb
inc
pop
inc
out
xchg
mov
adc
push
scas
ds
cmp
push
push
sub
inc
mov
and
mov
test
rorb
jecxz
nop
pop
outsb
ret
test
imul
push
lahf
movsl
inc
pop
and
xchg
ds
pinsrw
jmp
dec
test
mov
popf
nop
cmpsb
sahf
shr
xchg
out
or
cmp
flds
nopl
and
mov
push
jecxz
or
daa
and
mov
push
push
mov
popf
cmp
inc
call
nop
enter
mov
adc
xchg
imul
or
xchg
lret
inc
and
inc
xchg
ljmp
pop
clc
jmp
decb
jo
aas
rorl
pop
pop
mov
es
sbb
popa
push
mov
gs
ds
nop
cltd
icebp
mov
and
subb
sarl
das
mov
adc
negl
inc
loopne
cmp
nop
mov
inc
nop
fabs
lds
jge
adc
cs
shlb
cld
test
lock
or
mov
cld
xchg
fsubrp
fisubl
push
adc
stos
or
clc
mov
lds
arpl
mov
mov
or
lods
push
jb
push
nop
push
scas
mov
ljmp
mov
add
lock
fimuls
xchg
xchg
sbb
mov
insb
cwtl
adc
push
cmp
or
outsl
pop
mov
xchg
inc
fldln2
nop
mov
sub
cmp
mov
loop
repnz
add
int
adc
mov
andl
adc
xor
data16
shlb
rorl
fadd
aaa
and
mov
in
mov
fs
scas
cld
sbb
jb
cs
mov
ds
nop
les
seto
and
orl
sub
inc
outsl
sub
xor
mov
repnz
nop
xchg
push
or
sbb
nop
inc
mov
es
cmpsb
add
xor
cltd
clc
xor
nop
sbb
mov
shl
dec
xor
or
adc
sub
lock
repz
rorb
and
mov
xchg
dec
hlt
insl
xchg
loopne
lcall
mov
sbb
push
mov
xor
fdivs
mov
fidivrs
leave
and
mov
cmpsl
xchg
mul
shrl
mov
xorb
test
nop
lods
cmpsb
mov
jns
xor
data16
lea
add
dec
cmp
adc
ficoml
mov
adc
shr
and
jae
nop
push
sarb
mov
in
iret
nop
call
cmp
shr
adc
lods
sub
fdivrs
pushl
sbbb
mov
cmp
and
hlt
adcl
jg
rcll
inc
or
daa
adc
out
ljmp
cmp
test
arpl
pusha
mov
adc
xchg
call
xor
push
cmp
mov
lock
sbb
nop
push
inc
and
lahf
xchg
aas
clc
mov
mov
nop
imul
xchg
jl
nop
mov
cmp
fsubr
test
jnp
nop
int3
and
pop
jbe
cmp
push
push
xor
pop
jmp
loopne
lods
cmp
fdivp
cld
nop
fs
cmpsb
inc
or
or
adc
enter
movsb
nop
push
xchg
cmpsl
pop
nop
jmp
popf
mov
rcll
or
sbb
lret
or
inc
nop
mov
mov
sbb
fcompl
mov
jp
xchg
pop
nop
jb
jbe
mov
fsts
sbb
fnsave
sbb
adc
nop
movsl
xchg
mov
lea
or
mull
iret
nop
lret
inc
sbb
adc
dec
or
insl
adc
lock
pop
je
aam
sbb
nop
stos
fiadds
popa
cwtl
cmp
xchg
nop
adc
cmp
inc
cmpl
and
popa
nop
mov
outsb
scas
xchg
nop
sub
mov
les
rcrb
mov
pushf
jnp
fisubs
nop
js
jns
inc
cli
jp
nop
lret
icebp
push
lods
ret
ret
inc
daa
dec
test
xchg
inc
ss
cmpsl
scas
xor
cvtps2pi
lods
notb
leave
nop
sbbb
sbb
mov
adc
xor
cmp
adc
jns
rclb
mov
nop
mov
pop
push
adc
pop
into
nop
bound
cvttps2pi
leave
lods
xlat
jne
pushf
adc
xchg
int
pop
push
inc
push
and
adc
mov
xchg
jge
js
push
fmulp
lret
sar
roll
hlt
mov
add
pop
insl
push
test
sub
and
mov
mov
inc
shrb
adcb
mov
loopne
jl
fimuls
jmp
lcall
in
xchg
xor
clc
mov
mov
fisubrl
test
icebp
mov
mov
adc
idiv
popa
or
ficoms
shrb
das
pop
lock
lret
xchg
sub
mov
nop
add
mov
daa
pop
xor
cmp
dec
inc
jb
adc
xchg
mov
xlat
cmp
addb
mov
jecxz
cmp
mov
add
jae
fildl
xchg
cmp
lock
nop
call
fbstp
cmp
ljmp
pop
loop
mov
mov
add
imul
mov
fmuls
push
fwait
int3
repz
or
adc
aaa
sti
inc
mov
push
push
mov
jae
jl
xchg
add
adc
sbb
push
loop
mov
popa
xlat
pop
xchg
jno
xchg
and
mov
shr
sub
or
sbb
mov
jo
fmulp
das
nop
gs
lret
push
xor
add
add
jg
inc
dec
push
fmuls
lcall
sbb
xchg
mov
int3
fs
insb
xor
std
pusha
movsl
rclb
shlb
nop
jecxz
sahf
push
jo
xlat
ret
jmp
and
test
jp
nop
sub
jns
adc
xchg
sub
inc
pop
pop
fcompl
loopne
adc
loop
mov
rcrb
nop
xchg
mov
pop
fld
push
xchg
push
loope
ret
aaa
nop
and
xchg
ss
sarl
pop
dec
call
xor
mov
cld
xchg
scas
nop
and
enter
pop
rol
or
mov
loope
es
nop
sub
in
cmp
push
xchg
repnz
addr16
mov
repz
in
nop
arpl
adc
adc
xchg
add
dec
push
nop
jbe
es
mov
or
fdivl
mov
adc
jmp
and
cmp
out
cld
iret
push
sub
imul
sahf
cmpsl
sti
adc
repz
dec
cltd
push
loopne
or
rcll
aad
je
xchg
in
daa
sub
dec
dec
nop
sbb
mov
adc
leave
pop
gs
xor
push
movsb
movsl
nop
adc
pop
pop
cwtl
nop
add
insb
sti
sub
lds
js
mov
nop
xchg
inc
jmp
and
and
nop
and
dec
or
add
sub
push
shll
mov
nop
xchg
popa
push
mov
mov
mov
xor
xchg
sbb
cltd
stc
loopne
jecxz
hlt
or
fldcw
int3
nop
imul
nop
pop
fwait
inc
shlb
sti
loop
adc
nop
rcrl
nop
sub
aas
push
pause
shll
lods
cmp
cli
sarb
stos
je
lock
mov
push
std
cli
aam
xchg
mov
fwait
rcll
pop
adcl
inc
mov
jecxz
push
add
in
shrl
cmp
push
repnz
or
push
inc
xchg
mulb
mov
aam
mov
adc
aaa
loop
insb
sub
in
xor
out
adc
loopne
hlt
mov
cmpsb
sub
nop
popa
ret
jnp
jge
and
out
and
adc
out
scas
adc
inc
pause
js
pop
mov
sbb
test
mov
ficoml
sbb
insb
fs
inc
push
fsts
lret
cld
jmp
adc
jl
nop
xchg
adc
push
mov
ret
add
lcall
cmp
imul
push
sub
shl
xchg
pop
ja
xor
add
or
sbb
push
int3
pop
out
clc
jge
jae
cmp
mov
insb
cwtl
stc
nop
sub
jae
scas
sub
or
mov
add
pop
nop
inc
xor
rcl
bound
xor
gs
fsubs
mov
js
xchg
cmp
lock
jmp
mov
test
lock
fwait
es
mov
pushf
jno
movsb
negb
inc
push
pop
pop
shll
xor
nop
je
out
pop
scas
int3
sub
ror
out
in
add
jp
mov
jmp
nop
push
push
pop
dec
arpl
xchg
nop
add
mov
sub
xchg
or
cs
jg
clc
xorl
mov
or
stos
mov
mov
xchg
andb
cli
xor
mov
nop
mov
add
pop
jb
mov
push
adc
add
into
sbb
les
mov
rcll
pushf
push
shlb
stos
cmp
or
pop
aas
insb
das
jb
jnp
jbe
push
adc
push
nop
or
punpckhdq
inc
arpl
nop
mov
stc
xchg
mov
in
shrb
pushl
adc
in
lds
add
jmp
push
pop
ficoml
push
frstor
mov
das
xlat
sbbb
cmp
xchg
icebp
pop
jnp
aad
pushf
cwtl
cmc
nop
xor
std
push
mov
push
inc
imul
nop
xlat
repz
mov
cld
in
mov
test
outsb
push
jg
nop
cmp
pop
inc
sub
lahf
push
sbb
loopne
dec
lock
mov
shll
mov
movsb
mov
in
adc
cwtl
mov
test
xor
adc
xchg
sbb
and
int
jmp
jle
nop
std
test
push
adc
jmp
jb
mov
lret
nop
xchg
sub
rclb
stos
pop
cmp
sub
xchg
cld
sbb
and
xchg
lcall
cltd
xor
nop
ret
push
mov
sbb
adc
mov
fidivrl
pop
nop
sub
xchg
mov
lds
sub
push
mov
dec
nop
outsl
push
sbb
adc
pop
adc
sbb
mov
push
or
xchg
nop
idivl
and
outsl
sub
xor
sti
cmpsb
push
or
mov
dec
push
nop
adc
int3
jmp
aad
inc
add
mov
in
adc
xlat
adc
sub
imul
out
jo
nop
mov
fsubrs
push
add
in
xchg
add
xlat
rolb
in
or
xchg
sbb
clc
inc
adc
mulb
aam
stos
nop
pushf
jecxz
inc
icebp
push
mov
mov
nop
xchg
pop
dec
arpl
push
nop
xor
sarb
mov
push
mov
cs
cmpsl
adc
stc
jns
or
push
mov
mov
or
adc
repz
push
nop
xor
stc
nop
add
test
nop
mov
mov
and
rcrb
pop
push
outsb
xor
jecxz
cltd
and
lock
and
nop
ds
mov
lods
rclb
inc
pop
mov
mov
pop
dec
or
sbb
push
push
daa
xchg
fwait
mov
xlat
lock
inc
add
adc
xor
punpckhdq
sub
test
outsb
mov
test
clc
pop
cld
shrl
adc
cltd
mov
and
push
xchg
and
jge
mov
sbb
fwait
mov
xor
push
mov
push
nop
add
jno
movsl
push
jmp
xor
in
pop
notb
pop
xchg
pop
orb
inc
movsl
call
int
fiadds
test
jbe
ljmp
stos
daa
xor
adc
lods
xchg
loope
xor
mov
loopne
filds
cmpsb
loopne
lea
cmpsl
mov
nop
stc
ljmp
or
jne
insb
sarb
je
mov
nop
sbbb
nop
mov
jp
fldenv
pop
xor
push
out
hlt
mov
in
popf
outsb
fs
xchg
nop
inc
andb
lea
nop
bound
scas
ret
les
nop
sbb
and
test
xor
xchg
pop
adcl
imul
jp
fstpt
jecxz
shlb
movsl
fucomip
dec
nop
push
les
std
mov
aaa
inc
nop
inc
clc
mov
hlt
xchg
mov
or
sbb
hlt
mov
movsb
jl
loope
and
orb
daa
dec
hlt
xlat
inc
pop
pop
outsb
nop
aas
sub
mov
lea
icebp
ss
in
shrb
dec
lret
jg
xlat
or
pop
dec
mov
lds
cmp
nop
outsb
add
mov
clc
lds
movsl
push
es
add
hlt
mov
nop
xor
js
adc
dec
leave
mov
cmpsb
sbbb
enter
nop
push
sahf
aam
bound
arpl
push
or
jne
mov
scas
pop
ss
push
nop
movsl
mov
stos
nop
jnp
xrelease
stos
xlat
sbb
arpl
push
das
and
in
push
nop
movsb
adc
mov
filds
into
fimuls
xchg
sbb
mov
ret
nop
fisubl
ret
pushf
aad
arpl
jecxz
hlt
idivb
pushf
fidivl
ss
in
ljmp
add
repnz
fimuls
lock
loopne
add
pop
inc
aad
or
push
nop
jecxz
hlt
mov
cld
push
popa
xchg
pop
or
dec
lock
sub
lea
stc
lock
movsl
jp
push
inc
xchg
les
aad
mov
inc
lods
push
cmpsb
sarb
lahf
add
jnp
sarl
jle
popf
fcompl
sbb
jp
xor
js
cmpsl
fwait
call
pop
xchg
jecxz
jmp
or
mov
sub
add
dec
lcall
nop
lock
out
bound
mov
adc
add
mov
fdiv
rcr
and
sub
les
or
or
fistps
loopne
mov
adc
loopne
fnsave
cltd
adc
test
shll
nop
jno
icebp
jns
mov
insl
add
cmpsl
push
cmp
mov
adc
in
sbb
out
xor
adc
mov
mov
xorl
jge
add
lods
or
xorl
or
inc
nop
stos
pop
mov
xor
jno
nop
mov
aas
jb
pop
or
clc
add
push
ja
xchg
cmp
jns
shl
in
cmpl
cmpsb
and
popf
cmp
out
fld
in
ja
push
cltd
xlat
pop
nop
shrl
in
inc
or
and
fmull
nop
dec
fmuls
ficoml
fstl
popf
nop
dec
mov
sti
nop
push
hlt
jo
insb
mov
and
scas
or
or
or
aas
fninit
mov
nop
stos
pop
stos
xor
cld
imul
mov
lock
sbb
jae
xor
dec
jbe
cmp
inc
cld
sbb
jno
and
push
mov
in
shr
xor
nop
loopne
push
mov
inc
mov
adc
or
adc
in
test
mov
mov
aaa
insb
into
shll
icebp
aad
loope
cli
cmp
int3
movsl
xchg
ret
loopne
pushf
lods
jl
mov
inc
int3
sub
out
loopne
lea
xchg
push
xchg
stc
test
lods
mov
fistps
out
mov
pop
mov
jno
or
mov
ljmp
nop
push
and
lahf
adc
das
push
cmp
rorb
loop
pushf
sub
cmpsl
aaa
sarb
imul
out
in
mov
js
xor
xchg
mov
in
cwtl
mov
mov
or
dec
or
lret
js
inc
shrl
mov
test
cmp
in
push
jp
push
rclb
jmp
pop
or
jbe
mov
les
aad
add
push
adc
sub
or
lods
sbb
nop
lods
and
aas
aaa
sbb
dec
fidivs
arpl
add
in
insb
mov
lods
fcompl
jbe
or
mov
cmp
scas
call
in
aaa
mov
add
push
or
dec
sahf
mov
mov
xor
xchg
cwtl
mov
pushf
jnp
nop
cmpsl
mov
fnstsw
jl
mov
adc
repnz
nop
jbe
mov
add
jno
nop
fs
cli
int3
in
faddl
adc
adc
icebp
mov
jge
aam
inc
nop
test
mov
or
out
nop
push
and
jecxz
adc
nop
fs
xlat
es
mov
std
test
repz
hlt
jle
repz
and
mov
int3
ja
lret
movsb
and
daa
xlat
shll
add
ud0
dec
and
out
test
adc
mov
jo
iret
decl
push
dec
lock
jecxz
aad
xchg
cmpsb
pushf
aas
insb
xlat
nop
int
adc
push
dec
adc
xchg
nop
arpl
mov
rcrl
nop
cmp
adc
nop
inc
pop
scas
pop
xchg
push
push
in
shlb
push
jne
pop
scas
xchg
stc
faddl
inc
jns
mov
xor
pop
add
jle
pop
pop
mov
js
cmpsb
jmp
cs
add
push
nop
adcl
sbb
mov
add
mov
add
or
leave
push
gs
popa
movsb
mov
int
or
push
ret
jmp
jg
xchg
push
add
repz
and
dec
cmp
cmp
add
mov
nop
sub
nop
cmpsb
xor
shrl
or
pop
in
loopne
xchg
cltd
nop
mov
test
dec
in
dec
mov
into
sbb
jne
movsb
pop
icebp
nop
mov
shll
or
or
fdivr
cmc
mov
mov
adc
out
push
sub
xlat
and
imul
push
scas
nop
andl
lock
test
out
nop
jge
in
ds
nop
xor
cmp
or
push
pop
xorl
mov
jecxz
pop
stos
and
negl
jns
inc
pop
nop
in
addr16
lret
stos
js
test
and
nop
push
data16
or
fdivrl
in
fs
repz
and
enter
mov
lcall
xchg
in
cmpsb
mov
cld
sbb
mov
insl
lahf
jnp
or
aaa
add
xor
iret
into
mov
lcall
add
pusha
push
sub
and
movsb
nop
and
shlb
xor
pop
std
adc
nop
cmp
insl
test
nop
jno
mov
mov
or
inc
push
int3
sahf
xchg
sub
jns
nop
gs
cwtl
ds
inc
nop
pushf
aam
adc
mov
test
int
mov
nop
sbb
pop
cmp
and
push
hlt
nop
cli
movsb
pop
lahf
pop
int
enter
sbb
stos
mov
jmp
inc
adc
fwait
push
mov
sarb
hlt
mov
movlps
push
push
dec
lock
nop
not
ret
lea
and
sbb
mov
xchg
inc
sahf
mov
arpl
nop
cmp
inc
push
mov
cltd
rolb
mov
arpl
aam
nop
bound
insl
jo
or
insb
push
and
jp,pt
mov
or
jo
in
xor
xchg
ds
cmp
in
cmp
dec
adc
fldt
sub
mov
setae
and
fisubrl
nop
and
call
mov
testl
jecxz
push
mov
loopne
loopne
mov
lock
push
jae
outsl
rol
loope
loopne
jl
adc
dec
test
or
xchg
inc
fcoml
add
shrl
and
cltd
lcall
in
add
in
gs
nop
pop
pop
andl
push
mov
je
xchg
xlat
aaa
inc
test
mov
leave
nop
fwait
or
mov
adc
mov
add
aaa
fwait
dec
inc
sbbb
pop
or
or
jnp
pop
imul
stos
test
mov
lods
xchg
popf
nop
std
cmp
adcb
push
fwait
mov
ss
testb
dec
out
mov
nop
sbb
cmpsb
or
je
adc
lods
stos
nop
lods
in
daa
mov
jne
adc
in
lret
pop
push
xlat
and
repnz
xchg
inc
or
xchg
and
dec
push
adc
jae
nop
inc
push
cli
test
nop
outsb
arpl
mov
leave
dec
add
loopne
imul
xchg
sbbl
xchg
adc
pusha
push
mov
sbb
bound
xor
aam
add
sub
movsl
ss
push
jb
repnz
aad
nop
lret
inc
sbb
mov
jge
inc
adc
cmp
xchg
add
push
lock
and
mov
cs
jmp
int3
sahf
xchg
mov
mov
cmp
jb
xor
mov
cmp
ffreep
ds
push
sbb
lods
push
fcoml
adc
nop
or
push
insl
jno
in
inc
sub
cmp
fcomi
rolb
iret
mov
inc
pop
push
and
cmp
mov
push
arpl
dec
int3
faddp
addl
inc
sahf
or
pop
arpl
jbe
pop
pop
adcl
jns
jmp
aaa
pop
and
fadd
movsl
push
xchg
pusha
repnz
sar
pushf
shl
setne
lods
not
xor
rol
sub
rol
pusha
movb
lea
call
bt
pusha
mov
bt
cmp
jmp
push
call
lods
call
dec
lret
addr16
fs
ljmp
add
test
imul
shll
out
cmp
jbe
cmp
fxch
mov
les
pop
mov
popa
loop
rcrl
and
and
pop
sbb
sub
roll
xchg
add
mov
ret
add
mov
loop
lock
push
sahf
dec
adc
dec
sbb
cs
out
sbb
add
jle
sub
leave
cltd
jmp
jmp
push
call
cs
movsl
pop
jo
push
pushf
lea
jb
push
push
pushl
ret
stos
pushf
mov
mov
lea
pushf
pushf
jmp
pusha
pusha
cmp
pushf
push
lea
ja
jmp
push
test
add
add
add
pushf
add
jmp
lea
pushf
not
call
and
sbb
xchg
fisubs
dec
and
in
pop
cmp
popa
es
repz
sbb
ror
lcall
sbb
mov
add
push
push
js
arpl
gs
add
push
add
add
add
xchg
outsl
call
test
cmp
movsb
bswap
call
push
mov
dec
jmp
pushf
lea
jne
call
push
sub
pushf
rep
lea
pop
jmp
push
call
out
pusha
jmp
mov
pusha
lea
jmp
xchg
add
jne
and
bound
das
jae
gs
dec
hlt
cmpl
add
popf
imul
xchg
inc
test
and
ds
push
insb
mov
sbb
roll
xchg
and
jge
dec
jne
out
xor
and
pusha
xor
popa
xor
loope
ficoms
das
loope
inc
jnp
push
subb
mov
or
jecxz
push
xchg
inc
mov
add
xchg
or
and
or
iret
adc
pop
cmpsl
daa
cmc
mov
stos
rcr
daa
inc
sbb
sbb
mov
or
sub
insl
movsb
dec
repz
inc
into
repnz
push
adc
pusha
lock
xchg
push
and
leave
push
mov
pushl
lea
jmp
fdivp
or
add
add
loop
or
add
add
lods
not
xor
rol
sub
rol
push
call
pop
mov
add
add
add
or
add
add
pusha
lea
jne
pusha
pusha
call
push
call
sub
fwait
cmp
insb
loop
add
je
and
jmp
adc
movb
lea
call
pusha
lea
jbe
push
lea
jb
pusha
pusha
movw
pushl
ret
repnz
or
add
or
pop
out
or
jbe
push
add
push
add
jle
add
jg
add
jge
add
push
add
push
add
mov
add
mov
add
out
or
inc
out
or
lahf
dec
or
mov
or
jle
push
add
repz
sarl
dec
test
add
push
add
mov
add
add
add
add
add
repz
out
or
outsl
insb
gs
jne
xor
cs
insb
add
jmp
push
call
dec
aas
cltd
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
pushf
jmp
add
push
je
inc
arpl
jo
gs
inc
jne
data16
push
call
jae
or
add
call
pushf
adc
lea
pusha
mov
pushf
jmp
add
add
not
pop
mov
push
pushl
mov
lea
jmp
shrl
movsb
jp
fwait
pop
fstl
push
shl
pop
and
push
sbb
sarl
mov
mov
or
lea
call
mov
lea
pusha
push
push
lea
call
jmp
add
push
jns
inc
jb
gs
je
imul
gs
jb
arpl
fs
jae
add
in
or
add
add
push
call
ret
push
loopne
pop
test
add
inc
in
sbb
mov
add
pushf
sub
pusha
movb
lea
call
push
call
push
xchg
lea
jnp
pusha
push
pushf
dec
mov
test
clc
shl
jmp
lock
xor
sahf
xchg
fidivrl
in
dec
fisttpll
and
inc
push
roll
xchg
or
shll
lds
insb
clc
push
sub
loope
out
cmp
push
add
test
jno
pusha
cmp
xchg
sbb
ljmp
sbb
stc
lods
jg
cmp
fst
cmp
cli
out
pop
or
cli
adc
add
add
cmp
xchg
fstpt
jl
aad
adc
inc
mov
sbb
pop
pop
fistpl
or
sub
data16
cltd
xchg
daa
pop
mov
add
nop
jns
loop
test
cmp
iret
dec
pop
mov
sub
out
lea
call
call
rep
pushf
mov
pushf
lea
jmp
imul
gs
xor
cs
insb
add
ret
std
decl
pushl
pushf
pushf
pushl
ret
push
pushf
pushf
inc
add
sbb
cmc
sub
xchg
or
test
mov
sub
setae
bt
neg
mov
push
xchg
rol
mov
push
call
lea
call
push
mov
push
push
lea
jmp
sub
dec
jb
sbb
aaa
adc
rcrb
dec
ljmp
push
push
shlb
pop
jb
and
rorl
xor
aad
cmpsl
test
nop
imul
sti
dec
mov
or
nop
xchg
push
cmp
outsb
adc
dec
enter
nop
js
bound
pushf
ja
or
nop
xor
mov
shl
std
mov
mov
adc
push
neg
in
fcompl
mov
fmull
cmp
push
pusha
nop
ljmp
int
sbb
mov
outsl
into
push
or
sub
xor
pop
inc
pop
nop
push
adc
dec
push
int
cld
nop
jmp
andl
mov
jp
in
testl
push
je
iret
sub
jnp
adc
xorl
aas
adc
in
nop
ds
cmp
adc
imul
ret
add
pop
fldl
mov
pop
mov
movsl
jp
imull
push
mov
lods
in
and
jmp
enter
mov
xchg
or
jae
pop
pushf
sbb
sub
cwtl
aaa
nop
call
jle
js
insb
arpl
nop
pop
or
ss
fwait
and
loopne
adc
lock
or
or
insb
xchg
nop
iret
imul
nop
cmpsb
mov
pop
sahf
test
xor
leave
sbb
movsl
scas
xor
sub
adc
shlb
nop
cmpsb
movsl
xchg
mov
sbbb
push
fcompp
mov
fcoms
popa
sahf
mov
xchg
mov
xchg
xlat
mov
sti
adcl
rcrl
adc
in
nop
push
xchg
inc
loopne
lea
daa
outsl
mov
cmp
in
adc
jbe
xchg
cmp
pop
insw
mov
jp
nop
mov
int3
add
inc
cmp
pop
pop
or
out
cmp
pop
repz
add
fstpt
hlt
addl
clc
lea
inc
psllw
nop
sarb
and
fmuls
in
inc
fs
cmp
mov
andb
aaa
cltd
dec
sbb
pop
nop
daa
xor
jge
gs
xor
nop
cs
fstps
cmp
pop
xchg
inc
dec
sbb
jg
pop
mov
add
pop
mov
in
in
jae
test
ljmp
fwait
in
rcll
pop
imul
loop
ja
mov
das
inc
xchg
divl
js
popa
cmpsl
mov
push
lods
sub
mov
jge,pt
mov
add
lods
adc
popf
lcall
dec
nop
jl,pt
bound
xlat
jne
add
mov
aaa
test
xchg
xchg
jmp
fsubl
js
push
mov
add
mov
ds
jnp
and
mov
xchg
adc
jmp
push
scas
cmc
xchg
movsl
add
dec
pop
cmp
mov
bound
xchg
push
nop
mov
fimull
xlat
or
fstps
pop
nop
push
inc
sub
jno
xor
divb
push
nop
daa
popa
pop
ja
sub
nop
pop
aas
jae
and
adc
adc
and
call
sbb
lret
mov
xchg
xlat
xchg
in
nop
insl
mov
adc
nop
ljmp
cwtl
nop
pushf
jecxz
in
daa
out
cmp
sti
mov
mov
mov
in
psubb
pop
nop
or
and
xchg
shl
mov
jae
adc
fcom
or
xchg
icebp
movsl
pushf
orb
int3
in
bndstx
add
xchg
outsb
jae
nop
adc
add
and
fwait
nop
sbb
repz
test
aaa
pop
mov
adc
imul
rclb
pop
add
mov
push
movsl
cmpps
sub
add
and
jge
sarb
rcll
inc
fistl
add
add
jno
xor
sar
sbb
repz
jbe
xor
shrb
leave
push
lds
lahf
je
jno
jae
mov
arpl
jb
push
dec
add
xlat
mov
mov
stos
ret
aaa
out
lret
mov
hlt
shlb
movsb
mov
mov
pop
push
nop
jae
adc
push
dec
scas
rcrl
rolb
jecxz
insb
mov
or
pop
adc
inc
and
loope
nop
push
cli
aad
jmp
mov
sar
lcall
fsubrs
clc
mov
pop
les
and
insl
pop
jg
pop
jecxz
xchg
cmp
add
mov
mov
pushf
xor
mov
in
jne
sbb
jge
add
cmp
shlb
sbb
fdivs
enter
nop
pop
jns
dec
sub
mov
filds
add
test
jp
mov
popf
pop
nop
mov
nop
add
pop
cli
pop
pop
in
or
repnz
loope
loopne
mov
shll
push
lea
and
fs
clc
or
fistps
dec
dec
inc
inc
cmp
pop
adc
int3
adc
nop
jmp
in
cltd
nop
xchg
lahf
mov
dec
mov
out
jle,pt
jo
jmp
fsubrs
sub
jae
repnz
mov
or
testl
loopne
inc
hlt
fldl
shll
xchg
rol
push
pushf
pop
inc
jo
xor
or
pop
mov
pop
inc
daa
adc
push
sbb
clc
and
fwait
nop
pushf
sarb
aaa
js
fidivs
aam
sub
sbb
mov
sub
inc
inc
nop
adc
cmpsl
jae
mov
enter
xor
nop
push
cmp
mov
fsubl
nop
xchg
adc
outsb
sbbl
and
inc
push
ljmp
mov
scas
cmpb
mov
xor
jae
mov
or
xor
push
aam
pop
jb
sub
ds
or
loopne
pop
adc
cld
nop
testl
and
fistl
std
leavew
movsl
nop
mov
pop
add
pop
movsbl
nop
shlb
call
orb
cs
roll
xlat
dec
stc
mov
cmp
adc
aas
pop
int3
pop
fcompl
aad
in
clc
nop
xor
lret
or
sarb
insl
or
nop
push
icebp
ja
loop
sub
add
push
jg
aas
das
fistpl
nop
sbb
cmp
mov
inc
and
pop
add
fsubs
push
nop
jge
sbb
cld
jb
xor
pop
fistpll
dec
push
or
nop
adc
es
pop
adc
xor
inc
cmp
and
lock
cmpsb
push
cmp
inc
xor
and
icebp
lods
sarb
cs
or
xor
jno
mov
ret
cmp
or
push
sub
add
sbb
xchg
xchg
xchg
dec
ljmp
mov
test
adc
inc
rclb
push
push
xchg
sti
dec
mull
loop
sub
mov
stos
jecxz
xor
lds
xor
add
sub
mov
xchg
popa
or
xor
inc
push
call
add
test
dec
xor
or
pop
aam
jge
out
lret
cmp
dec
push
push
dec
das
cmp
xchg
nop
mov
loope
nop
sub
or
idivl
nop
in
lods
mov
or
insb
xchg
std
push
mov
adc
imulb
push
inc
scas
mov
lcall
mov
pop
adc
imul
std
stos
pushf
or
sbbb
mov
loopne
adc
insb
pusha
xor
mov
je
mov
push
pop
xorl
dec
and
mov
lds
mov
mov
cmp
cmp
aad
fildll
lahf
jp
arpl
xchg
adc
add
sub
jle
sbb
nop
mov
ret
jmp
adc
lret
sahf
mov
pushf
dec
pop
mov
mov
mov
push
cmp
dec
pop
adc
gs
adc
jae
cmp
sub
adcb
fsubs
inc
cmp
or
sub
jno
shll
in
test
mov
pusha
xchg
aam
loopne
xchg
mov
inc
adcl
xchg
nop
out
jecxz
lret
sti
aas
in
ret
nop
decl
aad
out
mov
ret
mov
xor
nop
fucom
repz
and
sub
rclb
inc
sbb
call
mov
int
mov
lahf
ss
nop
lds
rol
pushf
notl
mov
nop
xor
scas
or
sub
push
mov
clc
xchg
ljmp
fnsave
loop
sti
nop
mov
sbb
ss
sbb
ret
inc
mov
cli
jmp
lods
inc
movsb
inc
sbb
jecxz
jbe
lock
dec
mov
test
mov
cmpsb
int3
fcoms
pop
nop
pusha
sbb
push
mov
ss
dec
mov
nop
add
aas
arpl
nop
jbe
int
cmp
sbb
lea
jmp
shll
mov
mov
pop
cwtl
dec
ss
pop
sar
out
inc
adcl
rol
mov
mov
adcb
lds
aad
popf
mov
mov
mov
nop
dec
jae
and
nop
jb
movsl
jp
repz
loopne
fsubrs
lret
test
in
fsts
into
sub
push
nop
pop
xor
mov
adc
jo
or
push
test
xchg
cmc
add
fwait
xor
loop
int3
bound
repz
fdiv
out
inc
fsubrs
xor
sbb
add
cld
je
lret
mov
mov
dec
mov
repnz
out
jg
out
inc
jbe
nop
addr16
hlt
ret
push
ss
xor
adc
or
inc
js
sbb
cmp
dec
xor
inc
cmp
and
sbb
movsb
sub
add
jae
sbb
je
adc
mov
mov
shrl
push
or
add
mov
adc
out
dec
in
clc
adcb
mov
fwait
nop
jmp
pop
dec
in
clc
fldcw
cmp
adc
mov
push
cwtl
mov
in
ljmp
int
nop
sbb
out
icebp
and
loope
or
cmc
call
fcom
add
mov
ja
and
cmpl
mov
push
in
int3
adc
jb
js
dec
push
aas
pop
add
vlddqu
iret
dec
sub
aad
rcll
pop
mov
adc
or
push
xchg
faddl
lea
fmuls
nop
cmpb
jno
mov
fisttpl
mov
inc
nop
jmp
adc
cmovb
pop
jbe
inc
fstl
or
xchg
iret
mov
xchg
movsl
mov
mov
out
loopne
lods
mov
fsubrl
sbb
adc
nop
xor
mov
in
and
icebp
jnp
mov
pop
pop
xchg
jae
adc
imul
mov
ljmp
in
push
or
out
jbe
loop
lock
jl
cs
or
dec
dec
push
data16
nop
pop
push
mov
aam
pop
mov
outsb
or
or
sub
nop
shlb
mov
xchg
ret
rolb
lret
repz
setno
jmp
xchg
or
sub
fldenv
xchg
mov
mov
nop
pop
xor
cltd
adc
stos
lds
push
inc
or
adc
or
or
jo
pop
pop
cltd
les
lods
mov
mov
clc
pop
fimull
sahf
int3
clc
stos
adc
aad
mov
push
call
dec
imul
cltd
aaa
push
popf
mov
fs
pop
pop
notb
loope
sbb
sub
incb
fistpll
nop
inc
sbb
int3
jl
sub
adc
push
pop
imul
jp
cmp
adc
jno
sahf
aad
nop
mov
pop
pop
add
js
lock
adc
enter
lret
cmc
ret
icebp
nop
test
dec
xchg
or
repnz
iret
push
mov
sbb
jno
cli
dec
nop
adc
fisttpll
dec
sub
out
sarl
std
clc
out
fmull
sahf
adc
mov
xchg
cmc
fists
ljmp
movsl
rcll
lret
mov
shl
fsubrs
xchg
adc
sub
jp
mov
mov
push
aaa
xchg
jae
lock
ja
mov
jo
test
nop
mov
daa
dec
jle
push
lahf
fdivr
subl
dec
popa
push
lretw
nop
cmp
xor
rcll
ja
shlb
ds
sbb
mov
nop
dec
fsubrs
pop
sarb
gs
outsb
imul
and
xchg
call
mov
dec
scas
nop
test
imul
or
dec
shrb
das
xchg
lods
mov
lret
nop
inc
out
stos
or
loop
adc
loope
imul
jp
fimuls
mov
rorb
rcrb
xor
and
out
shlb
cmp
adc
in
movsl
cmp
nop
mov
push
sub
in
cmpsb
ds
mov
lods
mov
mov
iret
lcall
mov
mov
nop
es
mov
adcl
fnstenv
push
xchg
shrl
popa
nop
sub
cs
in
xchg
xor
inc
mov
nop
pop
inc
gs
dec
push
dec
nop
shrl
and
nop
cmp
xchg
pop
fsubrl
mov
jo
nop
jl
lcall
add
mov
adc
addb
lods
nop
rolb
rcll
mov
fmuls
sbb
in
adc
mov
sbb
pop
sub
cmp
dec
loope
pop
ja
int3
push
lcall
sbbb
mov
xor
loop
rcrl
mov
nop
es
inc
mov
jge
sbb
push
ss
cmp
call
and
xchg
jbe
jge
mov
mov
lea
inc
inc
ret
jae
adc
lods
lahf
mov
rcrl
jno
or
dec
xchg
pop
push
call
or
dec
pop
rcrb
fldcw
xorl
pop
jl
jne
imul
popa
push
xor
ret
lret
dec
xor
shl
jmp
add
push
mov
dec
fistps
lea
and
xchg
mov
and
xchg
mov
stos
mov
xchg
into
fisttps
cmpsl
mov
push
adc
or
jo
sbb
je
or
ja
adcb
das
sub
jle
inc
mov
pushf
icebp
mov
xchg
cltd
mov
lahf
push
ss
mov
dec
push
outsb
rdmsr
adc
and
cmp
mov
mov
dec
adc
fiadds
loope
nopl
divb
dec
adc
mov
push
fiadds
xchg
stos
mov
out
icebp
xlat
cmc
nop
stc
pop
sbbb
or
xchg
jnp
mov
nop
mov
sarl
sbb
and
cmpsl
nop
pop
push
outsb
mov
add
jb
fwait
pushf
outsl
pop
stc
arpl
jmp
fldt
mov
fisttpll
mov
test
mov
ficoml
push
xchg
pop
jnp
in
mov
mov
mov
clc
stos
or
push
push
arpl
mov
adc
in
cmp
jp
and
ja
nop
push
es
adc
push
test
adc
out
xor
cltd
inc
xor
mov
xlat
jmp
nop
cmpsl
mov
cmp
stc
out
xchg
enter
ss
dec
pop
lret
xor
mov
sub
push
data16
ss
rclb
sbb
popf
fcoml
nop
mov
pop
dec
nop
sub
sti
ljmp
loop
fldpi
jns
dec
nop
lock
jb
adc
daa
pushf
nop
mov
inc
cmpl
dec
inc
jp
outsl
bound
aam
sbb
addr16
push
xchg
add
jmp
adc
ror
pop
test
fistl
push
ljmp
cmp
cmpl
fmull
sbb
lret
je
loope
insl
cmp
sbb
std
xchg
sub
dec
and
ret
jmp
enter
fidivs
mov
shl
cwtl
xchg
jno
jb
sbb
inc
aas
xchg
js
call
pop
nop
fiaddl
data16
movsl
adc
nop
bound
sbb
sahf
loop
nop
mov
push
nop
ret
mov
lea
mov
sub
mov
pop
in
pusha
nop
fstl
pop
cld
aad
inc
nop
loopne
mov
mov
adc
shl
pop
xchg
aaa
xchg
js
inc
outsb
pop
sub
repz
and
incb
jmp
mov
mov
xor
sahf
iret
mov
call
sub
mov
in
mov
loop
ss
jnp
adc
and
pop
mov
lock
sbb
movsb
int
leave
scas
mov
xchg
fst
fists
pushf
xor
jl
nop
sti
mov
lods
nop
mov
mov
mov
sbb
and
hlt
out
loop
push
push
pop
in
jl
mov
adc
fcmovnbe
test
stos
and
pop
push
or
sbbl
nop
push
loopne
lds
xchg
inc
add
add
callw
xchg
jle
push
in
add
mov
push
cmp
cmp
and
call
nop
mov
stc
mov
je
aas
jnp
int3
nop
mov
xchg
xchg
and
mov
mov
loopne
mov
add
fcoms
nop
sbb
mov
orb
pushf
cmp
jle
lods
nop
add
inc
or
std
shlb
cmp
nop
add
inc
dec
sbb
cltd
fwait
mov
add
dec
lcall
mov
nop
cmp
movsl
pop
data16
sub
fcom
mov
jbe
xchg
insb
push
leave
or
cld
daa
cmp
sbb
xchg
adc
test
and
mov
or
xor
dec
pop
lock
push
das
pop
adc
xchg
jne
aad
aas
sub
scas
cmc
jae
mov
ljmp
inc
push
sti
dec
jno
inc
insl
jge
inc
jecxz
enter
pusha
adc
test
in
adc
lret
xchg
xchg
or
mov
fistpll
out
xor
jne
add
or
test
dec
dec
mov
adc
ror
movsb
sub
adc
dec
mov
sub
cs
mov
pop
popf
in
nop
or
cmc
push
or
jne
xchg
aad
scas
adcl
sti
mov
orb
mov
jg
fdivl
mov
gs
lahf
mov
ror
mov
shrb
cmpb
repz
sbb
nop
sub
mov
das
nop
jns
dec
ja
jae
mov
call
and
rcpps
or
in
dec
mov
les
les
xchg
add
nop
sub
jle
adc
movsb
inc
push
nop
ja
adc
cmp
pop
nop
mov
ret
jne
mov
in
add
pop
mov
xchg
add
xor
int
lcall
in
daa
mov
adc
cmp
std
cli
scas
xchg
nop
enter
mov
lcall
dec
cs
out
cmp
icebp
or
outsb
fsubrl
xor
jg
mov
push
fsubl
ja
shl
mov
shrb
incb
test
xor
repnz
jge
pop
push
nop
sub
add
jne
int
out
mov
into
enter
adc
or
sarb
std
fstl
call
pop
adc
scas
out
sbb
adc
fisubs
setns
push
pop
mov
out
mov
jns
in
int3
loopne
nop
scas
inc
out
ret
loop
nop
ror
mov
jecxz
and
test
out
lods
je
cmpsb
cmc
lods
jo
jne
cmp
or
dec
xchg
out
or
mov
mov
mov
pushf
xlat
xchg
or
mov
jle
stos
hlt
mov
aad
in
shrl
add
mov
pop
mov
lahf
fpatan
mov
lea
and
outsb
shlb
pop
adc
add
clc
xchg
xlat
adcb
mov
lret
nop
out
leave
push
test
lret
aam
and
popa
mov
mov
or
jnp
jae
mov
nop
lahf
mov
xchg
cltd
call
sbb
mov
jnp
push
clc
aam
nop
dec
pop
jns
sub
out
xor
adc
cmp
in
andb
xchg
adc
dec
dec
xor
jns
cmp
sub
cli
notl
nop
ds
xchg
std
scas
mov
mov
inc
xchg
loopne
cld
sub
mov
add
shl
sub
mov
stc
lcall
push
pop
nop
les
push
nop
jp
cli
dec
adcl
nop
xchg
cltd
pop
dec
jns
mov
or
movsl
insl
mov
pop
nop
leave
popf
mov
out
icebp
mov
cli
pushf
inc
jge
int
mov
shll
xchg
je
mov
lea
int3
shl
cmc
clc
test
adc
jge
dec
call
mov
test
repnz
sub
insb
stos
jb
jne
pop
fdivrs
push
out
cmc
nop
test
lcall
jl
lock
cld
mov
mov
cltd
pop
cmp
jmp
test
das
mov
mov
cmp
xchg
pop
aam
outsb
nop
adc
push
xor
pop
movsl
stos
sub
dec
into
nop
or
push
nop
mov
mov
lock
clc
lcall
mov
nop
push
push
push
addl
lret
out
je
insb
outsb
or
sub
sbb
add
int3
bnd
add
cmpsb
shlb
cmp
nop
dec
dec
orl
call
dec
adc
nop
cwtl
mov
fs
or
test
push
jns
dec
push
dec
add
addr16
adc
adc
add
pushf
pop
arpl
mov
and
mov
std
cld
nop
in
mov
fisubrs
sarb
sbb
ds
fisubs
cmp
ss
loop
mov
add
outsl
xor
imul
jns
les
jae
nop
adc
out
out
mov
cmp
or
les
pop
call
or
movsb
in
scas
mov
lds
sbb
add
sub
ja
push
stc
rclb
lcall
add
mov
scas
test
or
stos
ja
rcr
leave
xchg
xchg
insl
xchg
push
inc
ret
pop
repnz
push
nop
outsl
cwtl
aad
mov
jl
enter
into
sub
cld
or
aas
xlat
dec
or
xchg
jmp
pop
mov
test
nop
lds
sbb
push
or
nop
lds
ljmp
xchg
xchg
ret
jp
mov
mov
inc
shlb
imul
das
loop
idivl
mov
nop
lret
popf
dec
sub
loopne
out
enter
mov
sbb
nop
inc
ja
mov
push
sbb
jo
dec
adcb
pop
nop
je
sub
push
mov
repz
sub
loopne
testl
fsubrp
mov
int3
sbb
mov
inc
mov
cmp
out
int3
cld
push
bound
enter
mov
lea
sbb
mov
fs
lahf
out
xorl
cmp
int3
xchg
push
gs
pushf
jno
pushf
inc
fs
pop
fstl
cmp
stc
int3
mov
nop
mov
fisttpll
lock
sahf
js
hlt
adc
sub
xor
push
mov
push
push
push
rolb
repnz
fwait
rclb
clc
int3
nop
sub
ret
jge
sahf
nop
adc
sbb
jbe
add
je
adc
cmp
push
pop
cmovnp
jge
ret
mov
nop
iret
pop
popf
mov
xchg
into
sti
lock
movsb
nop
lret
leave
xchg
mov
scas
sub
fsub
nop
ljmp
dec
nop
mov
xlat
int3
push
add
cld
pop
or
pop
jbe
mov
mov
aas
adc
push
ljmp
shlb
faddl
mov
mov
out
cmc
xchg
out
nop
mov
mov
daa
aam
outsl
nop
push
ljmp
lea
mov
gs
push
jecxz
dec
loopne
dec
icebp
push
nop
ret
lcall
test
rcr
pop
nop
push
popa
insb
cmp
mov
pushf
mov
repnz
adc
nop
out
push
cmp
sub
loope
bound
inc
lahf
cwtl
cmpsb
and
nop
xchg
ret
ljmp
shll
loopne
xor
out
cld
xor
add
cli
and
mov
call
loop
cld
xchg
pop
les
rcl
mov
inc
das
jecxz
jnp
nop
push
pop
xchg
imul
int3
and
movsb
dec
pop
jne
nop
cli
out
adc
or
leave
mov
jbe
lcall
xchg
mov
or
aas
push
and
in
decb
mov
fs
adc
rcl
xorl
cmp
or
movlps
and
inc
jmp
jae
test
push
jb
jl
ja
nop
or
sbb
cwtl
test
jg
inc
scas
sub
mov
stos
andb
aad
fnstenv
push
fidivrl
inc
nop
ss
cmp
nop
cmp
or
xchg
jne
fldenv
dec
jl
mov
fistpll
jb
mov
dec
jns
inc
inc
adc
and
xor
outsl
popf
pushf
mov
adc
mov
xchg
xchg
lock
test
arpl
xchg
or
scas
clc
xor
or
cltd
cli
movsl
ret
fwait
dec
sub
fmull
sbb
ss
xchg
adc
pop
adc
je
mov
inc
loopne
fs
push
jbe
fistpl
lods
fsubrl
sub
dec
sub
xor
sub
mov
rolb
nop
insb
mov
dec
arpl
or
inc
jmp
fnstenv
cmpsb
loopne
cmp
mov
sbb
adc
sbb
ds
sbb
negl
inc
subb
xorb
or
push
std
imulb
mov
or
mov
push
test
bound
mov
pop
mov
sub
adc
and
sbb
and
inc
and
insb
sbb
jle
xchg
mov
mov
jb
mov
nop
sbb
into
idiv
jle
pushf
add
jge
lock
push
inc
push
loopne
push
pop
cmp
es
pop
mov
or
ljmp
mov
mov
xchg
inc
mov
in
cmp
scas
dec
sbb
adc
nop
mov
dec
or
or
lcall
nop
repz
fiadds
sbb
push
dec
nop
in
push
lds
enter
mov
test
xor
push
daa
jns
mov
stos
pop
pop
mov
pushf
cmc
in
sub
mov
test
nop
push
push
addb
lret
pop
xlat
adc
das
in
movsb
pop
testl
in
leave
jecxz
nop
jl
pushf
cmpsb
cmp
jmp
xchg
int3
and
and
mov
cmp
jno
sar
mov
xorb
js
fiadds
nop
jl
cmp
cmp
pop
fmuls
xchg
stc
jle
bound
sbb
adc
aas
and
push
push
jmp
jno
imul
std
insb
test
nop
mov
aas
add
fsubl
jmp
mov
nop
push
mov
or
sar
sbb
mov
cld
xorb
push
jnp
jo
fisubrs
lret
clc
or
icebp
and
inc
in
fdivr
enter
in
add
insl
push
pop
or
and
push
mov
mov
add
add
push
cmp
fildl
movsb
cwtl
mov
add
xchg
cmpsb
test
aam
xchg
shrb
nop
sub
mov
outsb
dec
jp
bound
dec
fs
fimull
xchg
push
lock
sahf
nop
jae
aad
jmp
inc
sub
add
nop
aad
xor
add
ret
push
nop
add
pop
loope
icebp
nop
and
push
stc
nop
pop
test
aad
cmp
mov
ret
cmp
sbb
daa
adc
cmp
jmp
cltd
xchg
cwtl
mov
xchg
xchg
lds
cli
add
pushf
sub
adcb
shlb
add
adc
pop
add
xor
xchg
rclb
push
push
sbb
pop
pop
aas
sti
shrb
fcompl
add
pop
int
jg
lds
movb
insb
add
ds
addl
xchg
stos
pop
das
dec
mov
adc
xchg
in
int
xor
repnz
nop
mov
ret
mov
nop
rcl
repz
sbb
lea
popf
mov
mov
jg
mov
movlps
int3
stos
push
mov
add
jne
nop
and
cmpsl
ljmp
loopne
pop
inc
adc
xor
adc
push
or
cmp
and
add
add
shlb
aaa
pop
jns
nop
mov
das
negb
mov
push
stc
sbb
repz
enter
scas
xchg
std
mov
testb
ret
insl
jmp
xchg
hlt
dec
in
mov
mov
arpl
addr16
fwait
iret
xchg
nop
orb
sub
jl
nop
out
mov
push
nop
loop
lret
cmp
dec
mov
fwait
int
mov
pop
nop
mov
rorl
inc
pushf
push
insb
add
mov
push
lret
lcall
nop
mov
in
cmp
xor
cmp
daa
sbb
popf
stc
adc
ret
dec
les
aaa
arpl
inc
dec
fcoms
movsl
jmp
shlb
mov
fistl
loope
and
jae
icebp
sbb
shlb
pop
cltd
mov
mov
hlt
stos
or
xor
sbb
filds
add
inc
fisubrs
pop
in
dec
nop
xchg
fisttpl
shlb
loopne
lods
lret
jp
push
nop
and
mov
or
in
imul
xchg
push
mov
or
nop
test
iret
cli
push
push
adc
adc
adc
in
clc
shl
ficoms
fs
pop
pop
adc
add
sbb
and
loopne
pop
test
xlat
out
adc
mov
xor
mov
mov
jmp
nop
movsl
cwtl
and
push
insb
nop
pop
in
gs
adc
nop
fldenv
dec
mov
subb
mov
add
mov
scas
ss
dec
nop
pop
adc
pop
mov
jnp
mov
ds
faddl
nop
sub
mov
nop
adc
dec
inc
pop
gs
in
jmp
dec
xchg
or
clc
cmp
jecxz
bound
out
adc
jg
push
pop
mov
aam
mov
pop
mov
xor
int3
sahf
dec
cmp
jge
xchg
jbe
push
and
or
mov
outsl
popf
mov
cmp
mov
pop
adc
xor
icebp
jno
add
add
nop
mov
jmp
cli
adc
std
jmp
mov
and
mov
loopne
lea
push
xchg
shl
dec
fld
or
mov
repz
test
xor
jae
lret
xor
in
cmp
nop
xchg
ds
pop
fwait
cltd
xchg
mov
mov
fisubl
in
call
test
add
adc
jecxz
push
cmpb
nop
imul
out
adc
cmc
lcall
push
arpl
cmp
test
rorb
enter
jb
aad
or
jl
in
xchg
mov
out
jne
nop
ja
or
inc
outsl
fidivrs
daa
or
imul
adc
nop
lea
sub
jns
roll
outsb
push
sbb
dec
dec
nop
lcall
outsl
nop
inc
fildl
inc
mov
movsb
add
nop
fidivs
or
mov
adc
ljmp
test
mov
lds
scas
mov
xchg
nop
testb
mov
cwtl
push
adc
mov
sub
jno
call
and
inc
mov
push
mov
repnz
push
cld
sbb
mov
sahf
insb
cli
imul
shlb
jl
add
lcall
inc
cli
das
cmpps
mov
pop
jge
dec
pushf
inc
stos
adc
xor
sub
mov
iret
or
add
fcos
mov
nop
test
cld
jecxz
or
sar
mov
bound
and
dec
ds
sub
data16
inc
push
lods
stos
add
pop
aaa
adc
dec
dec
jo
adc
cmp
loopne
ljmp
xor
pusha
cs
inc
jle
push
push
mov
iret
test
sub
mov
out
mov
nop
jae
mov
test
fcoms
mov
sub
jb
fistl
sbb
mov
nop
jo
ss
fdivrp
push
enter
rcrb
xchg
inc
xchg
aaa
fsubs
push
jg
dec
dec
nop
aaa
or
jnp
test
imul
push
repz
mov
nop
mov
push
xlat
or
cmp
inc
adc
inc
nop
cmp
mov
nop
lret
cmpsb
add
xchg
stos
aaa
and
nop
sbb
scas
and
mov
xlat
aas
inc
or
pushf
lock
out
cltd
lret
rclb
push
xchg
push
xor
das
cmp
punpcklwd
inc
and
sub
dec
lcall
dec
add
imul
nop
cmp
std
and
movsb
lea
add
sar
or
mov
mov
ss
xchg
mov
in
cwtl
movsl
cld
nop
and
sbb
mov
test
lret
cmp
nop
add
bound
es
fadds
sub
shlw
dec
nop
push
sbb
xchg
mov
js
out
push
lret
hlt
test
std
mov
inc
cmp
clc
iret
nop
pop
jo
mov
sar
nop
push
mov
dec
add
add
lahf
adc
aaa
pop
push
cmp
sub
and
data16
nop
loope
and
xchg
and
int
push
lock
xchg
jo
push
push
or
ja
adc
mov
aam
inc
int3
enter
arpl
mov
rclb
pop
mov
out
nop
ds
dec
nop
fldl
jbe
dec
fwait
push
or
arpl
pop
sbb
nop
lea
data16
mov
sub
test
mov
mov
andl
or
xor
cmp
nop
iret
jae
jno
pop
and
nop
or
sbb
mov
ds
mov
lcall
popf
add
clc
dec
mov
adc
pop
lret
push
adc
std
push
fimuls
nop
inc
adc
test
dec
cmp
nop
or
lahf
xchg
mov
adc
out
sub
cmpsb
aam
stc
cwtl
adc
pop
movsl
out
mov
ficoms
das
dec
mov
cmpsb
jns
jo
shl
inc
nop
scas
cmpsl
cmc
add
xchg
xor
lahf
mov
adc
push
and
jnp
loope
scas
mov
rcll
mov
lods
rcrl
and
inc
mov
and
test
nop
mov
mov
out
fldl
cmp
nop
jmp
adc
nop
ljmp
add
push
pushf
dec
jo
loop
nop
cwtl
inc
imul
adc
pop
pop
das
cltd
test
test
lcall
or
push
mov
icebp
push
push
mov
and
dec
push
adc
arpl
fdivl
cltd
and
movb
fwait
aam
mov
cmc
test
roll
daa
push
sub
adc
les
pusha
xor
sbb
adc
nop
inc
mov
jae
push
mov
or
inc
push
or
stos
cld
cmp
adc
lods
cmc
loope
mov
popa
nop
sbb
or
jno
cmp
stos
scas
dec
daa
nop
int
out
push
adc
nop
das
mov
xchg
pusha
lret
stc
adc
les
jecxz
into
push
mov
mov
fwait
outsl
in
pop
cwtl
aam
nop
dec
xchg
push
cmp
dec
out
and
imul
jns
arpl
mov
mov
std
dec
fwait
mov
and
out
push
lds
jb
aas
imul
das
mov
pop
adc
inc
aaa
add
mov
xchg
sbb
mov
cmp
xor
sbb
nop
out
dec
mov
adc
nop
mov
and
in
mulb
cli
out
or
pop
lock
incb
push
ss
movsb
nop
arpl
cs
or
mov
xchg
adc
xchg
repnz
fmuls
pusha
popf
add
outsl
lock
mov
mov
push
cmpsb
sub
loop
xchg
add
lea
mov
mov
hlt
leave
mov
shll
scas
inc
or
pop
push
lock
xchg
push
nop
imul
repnz
nop
jne
xor
mov
das
xor
or
push
nop
clc
jge
popa
cmpsb
fimuls
nop
inc
dec
imul
push
mov
imulb
idivb
loopne
inc
nop
scas
mov
ret
jnp
mov
jge
mov
lods
sub
nop
jbe
je
push
out
nop
pop
xchg
rcll
nop
aas
or
add
std
mov
add
sar
mov
xchg
cmpb
xchg
jmp
jns
in
jb
adc
push
inc
mov
addr16
add
pop
adc
nop
rolb
inc
adcl
dec
cmp
mov
add
push
add
pop
sbb
sub
js
mov
mov
cwtl
or
test
cmp
push
dec
nop
test
xchg
pause
xor
ja
fdivr
aad
or
repnz
mov
mov
nop
in
in
adc
sbb
or
adc
xor
jae
xchg
adc
icebp
fisubs
mov
fwait
push
out
cmp
or
sahf
std
test
sti
inc
test
or
repnz
clc
mov
clc
leave
adc
std
mov
cmp
push
pop
add
or
sbb
mov
sbb
iret
xor
or
nop
jp
inc
subl
scas
xchg
dec
fsubl
jmp
imul
inc
fwait
test
adc
sti
hlt
andb
mov
mov
into
xor
jl
cwtl
gs
sbbl
aas
inc
and
dec
cmp
test
cmpsl
ds
or
mov
dec
mov
lcall
into
pop
inc
push
jecxz
mov
jge
call
jno
sub
cmc
movsb
pop
nop
xchg
cmp
mov
jbe
adc
test
mov
movsb
enter
mov
scas
jp
fadd
pusha
test
ret
mov
nop
cmp
pop
and
jle
call
xchg
arpl
mov
and
hlt
sarl
shlb
jle
repz
mov
shll
repnz
addb
aad
nop
mov
fisttps
pushf
jge
mov
mov
nop
or
nop
out
fidivl
cli
nop
fdiv
iret
test
lods
repz
nop
dec
test
mov
clc
fld
nop
lods
in
adc
ret
sub
insl
dec
aas
jno
loop
lock
jg
nop
std
insl
push
adc
or
imul
pop
les
outsl
cmp
adc
jge
cwtl
jp
cmp
fmul
inc
pop
imul
rcrb
nop
test
daa
ds
stos
sub
outsl
pusha
mov
mov
mov
repz
cwtl
movsl
mov
xchg
jle
insb
jns
test
scas
cmp
nop
ss
fisubl
fcoml
mov
jne
nop
pop
inc
inc
negl
sub
fwait
xchg
adc
pop
leave
imul
rcrb
enterw
nop
mov
sub
ss
jp
push
mov
aaa
jo
jb
std
pop
and
nop
daa
adc
pop
push
nop
cmp
sysenter
pop
push
sbb
xor
hlt
push
addl
mov
loopne
push
inc
outsb
scas
test
sbb
inc
rsm
and
push
xchg
lods
nop
movsl
out
lods
fdivp
sarb
inc
cld
divb
jg
xor
rcrl
loope
add
cltd
cmp
mov
push
jne
mov
xchg
arpl
test
adc
or
stc
sbb
jecxz
xchg
std
movsb
jg
inc
pop
xor
cmp
mov
cmp
jne
rorb
movsb
push
cmpsb
push
dec
sbb
dec
xor
in
push
mov
push
sbb
sbb
in
xor
ja
cmp
pop
inc
sbb
xor
jbe
out
or
jnp
adc
mov
nop
ss
or
inc
out
nop
xchg
in
hlt
lcall
in
out
cmp
cmp
lea
xchg
mov
out
pop
movb
or
mov
nop
sub
pop
jg
mov
jno
xor
inc
mov
jecxz
add
enter
std
rorb
xor
or
cmp
adc
pop
pop
sbb
hlt
ja
xor
mov
mov
rolb
inc
daa
or
ds
rol
pushf
jae
push
notb
lret
and
xchg
sub
les
loop
push
xlat
lcall
mov
or
jge
rolb
movsb
imul
cs
pusha
loop
fimull
inc
add
mov
xchg
push
adc
nop
lahf
jae
js
sbb
jno
sub
nop
pop
dec
test
ret
xchg
nop
lcall
sub
ds
cli
out
jne
mov
mov
or
xchg
int
sarb
aaa
rcr
stc
xor
add
and
nop
xchg
mov
or
outsb
xor
negb
adc
popa
jb
mov
das
inc
xchg
sbb
and
jbe
fidivrl
nop
mov
add
rcr
nop
adc
adc
insb
xchg
sarb
push
sti
addr16
adc
movsl
call
or
xor
lret
add
loop
mov
mov
into
mov
adc
clc
ds
cwtl
or
jg
in
sar
mov
aad
inc
mov
push
lods
out
test
dec
out
and
xchg
pop
sbb
or
xchg
sbb
inc
sub
xchg
fbld
in
icebp
rorb
lea
movsl
call
pop
aas
or
xor
je,pt
fcomp
xor
outsl
fadd
cwtl
call
cwtl
mov
xchg
test
push
jmp
rorl
test
out
mov
rolb
xchg
jge
or
lods
mov
lret
nop
es
cmpb
add
pop
nop
or
pop
std
mov
jp
xchg
xchg
fdivr
dec
cmp
movb
cs
imul
fstl
aaa
mov
fbstp
sbbb
ljmp
fwait
adc
in
loop
fcompl
push
movsb
cmpb
jnp
mov
por
dec
sub
mov
mov
loop
sarb
int3
addb
in
xchg
aaa
cld
cltd
nop
popf
rcl
xchg
out
std
nop
pop
pop
and
aaa
stc
adc
out
fwait
arpl
mov
inc
enter
adc
in
push
hlt
jae
lods
nop
sub
test
jb
sbb
decl
and
enter
orb
add
adc
lock
mov
outsb
or
fistl
adc
into
ljmp
push
jno
test
sbb
or
push
rolb
or
movsb
dec
cmp
xlat
into
push
cld
mov
int3
push
add
pop
or
mov
das
nop
sub
cmp
sub
nop
cs
popa
imul
shlb
mov
and
enter
test
xor
fiadds
fcompl
jae
pop
xchg
subb
mov
xchg
les
jns
movsb
mov
aas
incl
or
sbb
fs
nop
pop
icebp
mov
dec
mov
dec
mov
jno
lods
adcl
mov
nop
dec
cmp
or
xorb
nop
mov
fnstcw
in
push
xchg
fists
ret
inc
mov
mov
adc
repz
mov
sbb
push
pop
nop
pop
xor
or
sete
test
cmp
mov
enter
hlt
or
push
jno
nop
cmc
pop
test
nop
pop
add
rorb
xor
lcall
cs
pop
push
and
push
push
xor
xchg
int
pop
sbb
orb
lds
or
and
sub
xchg
jge
outsb
mov
gs
imul
mov
jae
mov
loopne
test
imul
xchg
push
sarb
adc
sbb
mov
push
cmp
outsb
mov
adc
sub
arpl
pop
loopne
addr16
mov
les
orl
scas
inc
add
cs
pop
or
pop
cld
inc
inc
bound
cmp
fldt
dec
mov
js
nop
jecxz
ljmp
jns
lea
test
cmpsb
out
jecxz
cld
dec
imul
nop
test
mov
xchg
xacquire
mov
pop
out
scas
nop
loopne
iret
jecxz
mov
int
rorl
insl
aaa
imul
jecxz
nop
stos
mov
ficoms
jg
aas
inc
push
push
nop
add
lods
xor
dec
mov
xor
mov
leave
inc
mov
cwtl
push
loope
fmull
fiadds
sub
push
or
sbb
push
dec
sahf
push
dec
gs
pushf
adc
push
adc
add
cmp
inc
fsubrl
out
shlb
int3
xchg
into
jmp
mov
push
stos
nop
mov
dec
cmp
jno
imul
sub
mov
aaa
and
nop
and
and
data16
nop
dec
loopne
cmp
inc
jp
adc
mov
sti
out
clc
cltd
gs
nop
adc
dec
add
repnz
add
outsl
cmp
adc
bound
daa
fsubs
aad
lds
jg
stos
sbb
lcall
or
cmp
lock
rcll
js
inc
cmpsb
inc
mov
mov
movsb
inc
nop
in
xor
push
stc
cli
rclb
mov
push
push
sub
call
in
xchg
imul
push
cmpsb
sub
pop
lcall
or
dec
cwtl
and
pushf
xchg
inc
popf
cmc
mov
pop
xchg
int3
int3
loopne
xchg
mov
mov
adc
pop
push
cmp
int
lock
or
push
popa
mov
shl
test
sub
adc
mov
dec
lcall
sbbl
push
fnstenv
idivl
jae
or
insl
lods
mov
cmp
push
xchg
push
in
push
rcll
dec
adc
inc
sub
rcrb
sahf
adcb
mov
xor
push
neg
inc
push
sub
outsl
das
adc
jg
xchg
insb
or
fwait
xor
sub
and
dec
xor
sbb
loope
das
mov
pop
and
imul
sbb
adc
xchg
mov
mov
in
je
jmp
jae
iret
sub
mov
rclb
adc
mov
jg
shl
or
mov
mov
dec
sub
pop
push
in
out
fdivrl
adc
dec
push
in
push
aam
repnz
adc
xchg
test
pop
out
jnp
adc
sbb
in
jb
out
dec
stos
mov
dec
xchg
pushf
lret
add
dec
lds
push
subl
and
int3
xchg
out
pop
std
enter
mov
push
int3
xchg
arpl
xchg
call
faddl
lea
cmp
sub
lret
xchg
xchg
in
xchg
cmp
mov
aas
in
mov
testb
pop
jp
addl
adc
jle
sahf
sbb
jge
mov
orl
std
mov
sub
subb
test
rclb
pop
sub
xchg
xchg
das
sahf
mov
sbb
mov
push
adc
or
adc
mov
clc
inc
push
adc
xchg
aad
pop
dec
xchg
mov
rcll
mov
jmp
out
pushl
pop
mov
mov
dec
jecxz
mov
sahf
jl
mov
xlat
sub
xchg
nop
or
pop
mov
mov
scas
mov
imul
dec
pop
xorb
pop
push
out
sbb
lods
lods
push
fdivrl
aam
or
outsb
int3
in
call
fdivr
mov
aad
jmp
mov
imul
sti
inc
jb
loop
fistl
lahf
jg
dec
mov
mov
insb
pushf
je
dec
in
fsub
or
xchg
js
adc
and
negl
mov
add
nop
sub
scas
iret
test
stos
mov
jecxz
jle
or
xlat
adc
lods
ret
aam
les
push
imul
cmp
pop
rclb
mov
rep
arpl
push
mov
fwait
xchg
or
or
adc
pop
add
inc
dec
or
adc
fs
jae
cld
dec
insl
stos
iret
int3
cli
mov
cwtl
inc
jae
mov
iret
mov
xchg
pop
mov
out
dec
and
pop
mov
in
clc
loope
jae
sub
inc
sbb
outsl
or
sub
mov
mov
dec
xchg
or
out
outsl
add
mov
and
add
mov
inc
inc
or
mov
mov
cmp
movsl
or
push
push
or
ljmp
sahf
jb
inc
or
shlb
dec
das
push
mov
mov
test
dec
fcomps
cld
mov
mov
sahf
mov
add
sub
cltd
push
cmpsl
ret
lret
mov
mov
jnp
push
sub
jecxz
pushf
dec
mov
lods
imul
jae
aas
nop
pushf
or
or
jb
lock
test
mov
into
adc
dec
jo
sub
mov
stos
cmc
nop
pushf
pushl
sbb
mov
jmp
cwtl
imull
stos
outsl
lret
push
or
mov
dec
mov
dec
jae
mov
xor
int
aad
cmpsl
mov
in
and
mov
adc
fadd
jne
mov
mov
int
add
cmpb
or
push
mov
aad
call
filds
in
dec
lret
scas
push
xchg
mov
pop
in
call
fists
movsl
lea
stos
mov
inc
in
mov
arpl
and
mov
imul
mov
dec
ficomps
cld
jns
movsb
or
insb
sub
test
nop
push
pushf
cmp
cld
adc
sub
sar
decl
inc
push
scas
mov
nop
fisubl
cmp
adc
mov
or
out
clc
cmpsb
or
rep
mov
xorl
rorl
dec
leave
push
mov
jle
lahf
or
sub
push
mov
sar
insl
lcall
inc
push
jle
ja
inc
mov
sub
in
clc
lods
pop
das
cmpsl
bound
sub
fcoms
nop
and
pushf
aad
pop
movsl
dec
xchg
mov
scas
icebp
push
cmpxchg
outsl
shlb
enter
int3
enter
mov
ret
sub
mov
jle
fdivr
pop
hlt
cmp
xchg
add
and
and
andl
iret
rcrb
fstpt
push
jae
filds
das
jl
in
movsl
stos
mov
or
ja
das
mov
add
test
rcl
out
add
clc
hlt
pop
outsl
dec
xchg
pop
mov
ret
or
iret
lea
call
in
outsb
fldt
mov
jmp
imul
lret
sbb
push
loope
mov
mov
bound
repnz
lock
pop
sbb
repz
mov
mov
mov
pop
lahf
adc
jmp
iret
shll
adc
dec
push
movb
or
jmp
mov
test
inc
and
mov
aam
in
push
pop
ja
scas
out
push
fsubrs
mov
jge
test
jmp
mov
fdivr
es
push
pop
add
push
mov
lods
xor
jge
or
add
scas
mov
ja
push
or
mov
ljmp
push
nop
mov
insl
ficomps
rcr
mov
or
jle
jg
xchg
inc
xlat
adcb
push
mov
movsb
or
pop
addr16
cld
dec
mov
cmp
dec
rcr
sub
push
sbb
adc
cmc
push
mov
dec
lock
in
pop
pop
xchg
leave
dec
shl
ljmp
mov
out
dec
mov
sub
adc
sub
lods
insb
out
xlat
fbld
xorb
pop
pop
rorb
jae
lret
lret
pop
dec
gs
mov
mov
xchg
adc
imul
fsts
jo
push
inc
rcl
dec
jecxz
ljmp
aaa
push
push
nop
aas
imul
fmuls
aad
dec
sub
imul
xlat
xchg
in
mov
xchg
stos
sub
fmull
rcll
xor
ror
fmull
pop
ja
mov
adc
shll
les
cmpsb
faddl
and
push
aam
fs
cmp
pop
clc
cwtl
pop
fldcw
mov
mov
fcompl
out
jmp
inc
jmp
mov
fmull
jnp
mov
test
sub
cmovl
test
imul
pushf
inc
icebp
orl
mov
jmp
inc
mov
or
es
inc
jmp
roll
push
inc
dec
mov
cwtl
push
repz
dec
push
push
lret
pop
mov
mov
xlat
dec
pop
mov
jmp
out
repnz
adc
push
adc
addb
cld
inc
jnp
jle
jmp
mov
push
adc
lret
push
xlat
pop
dec
arpl
mov
or
xor
xchg
sar
test
sub
push
add
movsb
push
popa
nop
mov
push
adc
imul
mov
xchg
xchg
or
and
outsl
inc
pop
and
mov
fwait
cmpsb
lret
and
popf
lret
test
dec
mov
mov
dec
hlt
push
das
pop
sub
out
aam
jl
ljmp
cmp
shrb
mov
fwait
andb
invd
lea
pop
mov
pop
pop
inc
inc
add
out
fs
xchg
push
or
imul
ljmp
popl
inc
pop
test
mov
mov
in
push
push
xor
stos
not
pushf
divb
jg
push
xchg
aad
push
lods
xor
dec
mov
add
mov
in
rcrb
aad
mov
push
mov
shl
pop
jecxz
jb
xchg
mov
imul
je
or
and
mov
movsb
mov
jae
or
sbb
fnsave
jge
mov
mov
dec
enter
lret
fldl
std
out
cmp
adc
stos
sbb
add
fsubrl
stos
test
pop
je
aas
stos
mov
call
pop
insl
mov
call
dec
lret
leave
cltd
iret
jmp
sub
cwtl
push
das
jmp
xchg
dec
dec
sbb
push
mov
lea
jl
jecxz
push
and
mov
fwait
dec
add
push
add
stc
gs
test
addr16
ficomps
cld
xchg
dec
inc
inc
xchg
repnz
idiv
fmull
mov
adc
shrl
cwtl
hlt
call
jbe
out
fadds
out
mov
inc
pop
cmpsl
mov
imul
mov
fmull
and
rcrl
or
ds
dec
fisttpl
test
mov
mov
je
out
mov
gs
lahf
mov
outsl
ljmp
and
add
dec
dec
jns
and
test
xor
mov
mov
mov
pushf
mov
xchg
test
xlat
push
inc
mov
jno
dec
xlat
cs
mov
adc
push
inc
cmp
dec
fldcw
adc
push
sub
outsl
mov
hlt
aam
mov
mov
aad
inc
call
add
dec
gs
inc
dec
je
mov
dec
aad
lret
cmp
fld
mov
mov
jb
fisttpl
mov
xchg
sbbb
pop
and
js
jecxz
ljmp
lret
cmp
inc
inc
jo
loopnew
lret
jae
push
jno
jae
mov
decl
and
fdivl
cmp
mov
mov
or
pushf
fiadds
mov
mov
cmpb
xlat
lods
xchg
mov
dec
mov
mov
jnp
mov
sarl
and
rorl
es
or
sub
pop
fcmovnu
xor
adc
or
int3
ret
stos
jo
xor
mov
xlat
test
adc
push
in
ficompl
pusha
push
pop
in
daa
lret
les
int3
fldl
cmc
imul
rcrb
mov
sbb
cmp
xchg
into
dec
pop
pushf
dec
jne
into
inc
mov
popf
insb
mov
inc
jp
xchg
sub
loopne
es
das
mov
stc
mov
xor
rol
xchg
jp
mov
mov
in
aam
insl
push
fcoml
dec
xor
pop
ss
xchg
out
xlat
mov
leave
sar
iret
scas
shlb
int3
jmp
inc
in
gs
lock
sbb
fmull
mov
scas
test
pop
lods
sub
pop
out
jge
mov
push
outsl
xchg
mov
aaa
jb
mov
hlt
aaa
test
cmpsl
mov
mov
pop
mov
cmc
fidivrs
sbb
insl
mov
ret
inc
out
fimull
and
fsts
pop
pop
mov
in
lods
test
mov
test
adc
movsb
mov
into
pushf
inc
xlat
test
pop
psubusb
ljmp
mov
ret
aam
push
mov
jbe
xor
int
pop
addb
fmull
call
fisubs
nop
pushf
jmp
js
mov
mov
pop
xchg
mov
std
jbe
fcoml
mov
jb
inc
int3
inc
jl
push
loope
std
movsb
pop
scas
arpl
adc
cmpl
cmp
out
imul
test
ficompl
jno
or
sbb
xchg
clc
and
jnp,pn
loop
adc
add
mov
sub
lods
shr
jae
gs
scas
jecxz
sbb
mov
dec
mov
lods
sub
dec
mov
mov
les
shr
testl
out
cmp
and
sub
fcompl
jae
jmp
lcall
sbb
mov
jp
gs
jl
pushf
fwait
mov
inc
or
lahf
pop
add
mov
mov
fcomps
mov
std
xchg
push
xchg
mov
mov
dec
aad
xchg
dec
mov
jl
xchg
inc
repz
mov
adc
jle
push
call
mov
bound
insl
pushf
push
out
loope
inc
enter
adc
dec
lods
cmp
insb
shrl
push
hlt
fs
fnop
add
add
pop
subb
cmc
loop
adc
push
jecxz
jne
lret
mov
mov
push
add
push
add
bound
mov
lret
xorb
inc
jno
mov
repz
dec
cwtl
jp
cmp
fcoms
fcmovnu
rorb
lock
mov
mov
inc
lahf
popf
inc
dec
xchg
or
sbb
xor
fcoml
out
add
cmpsl
call
cmc
push
dec
aas
jns
jae
mov
xorl
fistpll
cwtl
sbb
mov
push
inc
and
lret
xchg
push
call
nop
cmp
dec
mov
mov
mov
ds
mov
loope
cli
jo
std
nopl
or
shll
fsubl
xlat
lret
subl
xchg
xchg
ljmp
mov
sbb
les
sub
or
fcmovbe
ret
and
test
adc
cmc
test
push
add
add
cmp
imul
idivl
nop
cmpxchg
mov
gs
adc
mov
out
pop
add
xchg
clc
push
add
sub
dec
xchg
fisttps
fldenv
pop
mov
mov
or
or
and
lods
ja
pop
mov
ret
mulb
mov
pop
ret
lods
mov
push
xor
pop
fists
adc
repnz
jp
lds
sub
fcompl
mov
mov
cwtl
iret
ss
mov
sbb
popa
xchg
mov
scas
ret
push
cmp
mov
jmp
rclb
add
mov
icebp
negb
pop
movsb
mov
sub
jge
loopne
mov
push
push
aad
pop
mov
mov
sar
lds
sar
xchg
pushf
hlt
xor
outsb
bound
cmp
mov
cmp
popf
mov
sbb
rclb
mov
movsb
jno
lcall
mov
out
mov
or
cmpsb
or
sbb
aam
rcr
lahf
xor
mov
mov
lods
cmpsb
cli
sbb
mov
mov
mov
scas
cmpsb
les
lcall
cwtl
mov
pop
sub
and
les
test
mov
movsb
pushf
mov
xor
or
imulb
sbb
mulb
sub
push
cltd
mov
xchg
xchg
adc
and
sub
repz
cmpsb
lret
mov
mov
adc
sub
sarb
nop
cmp
out
cld
pushf
out
xor
scas
jecxz
ret
cmpsb
mov
jecxz
int3
int3
stos
add
aas
xchg
mov
xor
les
es
cmp
sub
push
sahf
les
loopne
in
mov
pusha
mov
and
or
ret
pushf
cmp
mov
lret
orb
test
call
in
cmpb
int3
cmc
pop
iret
lods
mov
ljmp
ljmp
ret
mov
mov
cmp
mov
andb
mov
int3
cwtl
test
sbbl
mov
mov
loopne
mov
out
cli
mov
and
shrl
mov
xor
int
int
iret
int3
scas
ret
or
mov
test
loop
mov
lods
pushf
cwtl
lahf
mov
lock
das
mov
enter
loope
mov
xor
adcb
sbb
cwtl
mov
negb
iret
lret
push
pushf
sub
lods
mov
sahf
mov
mov
mov
add
les
lods
in
pop
outsb
ret
mov
and
into
pop
mov
jmp
mov
das
jecxz
test
push
pop
mov
fsubrl
mov
add
cs
mov
mov
and
push
int
cmc
pushf
mov
sbbl
jo
adc
sub
rol
cmp
mov
bts
lea
and
jp
cmpsb
loopne
push
aad
lret
mov
sub
sbb
xor
adc
into
pushf
mov
mov
sub
xlat
dec
data16
pop
fucom
inc
add
mov
pushf
jmp
or
sahf
test
test
aas
mov
push
jge
lcall
movsl
ret
xlat
mov
arpl
pusha
fucomip
rorb
push
sbb
leave
sub
call
rcr
adc
cmp
in
xor
scas
fucomip
das
mov
stos
dec
dec
aad
aam
test
dec
insb
int3
jmp
nop
mov
adc
and
dec
aas
negb
icebp
inc
jae
sti
sahf
adc
popa
xchg
mov
lahf
mov
cmp
fildll
sub
push
jne
jo
sub
dec
sbb
and
push
adc
arpl
inc
mov
sbb
mov
sub
pmuludq
mov
pop
shl
call
in
or
pavgw
shl
mov
push
aad
ret
loope
mov
test
xlat
addr16
or
mov
mov
mov
xlat
lcall
inc
lret
mov
jae
ret
or
pusha
fcomp
lret
lds
mov
in
xchg
mov
popf
dec
push
rolb
fs
shll
xor
rorb
push
jns
pop
mov
lock
out
sti
mov
xor
sub
aad
stos
push
shrl
test
dec
fsubrl
insl
in
sbb
sahf
aaa
daa
lods
stc
xor
in
fiaddl
xchg
adc
repnz
jno
mov
aam
cmp
in
int3
mov
je
inc
in
ljmp
and
push
int
fdiv
pop
adc
outsl
add
mov
sahf
fmull
adc
mov
test
inc
lds
outsl
cwtl
sahf
xchg
dec
sti
push
pop
or
inc
out
lock
adc
push
mov
in
inc
and
and
nop
push
loop
mov
shlb
aam
pop
lret
mov
popf
ljmp
pop
iret
fdiv
sti
leave
test
jecxz,pt
fcoms
aaa
xlat
mov
inc
or
adc
lods
xchg
ljmp
call
mov
bound
jne
jb
xchg
inc
in
xchg
or
jmp
xchg
lea
xor
inc
in
ror
cs
xchg
push
enter
mov
pop
inc
lea
mov
imul
sub
call
rcrb
pushf
pop
mov
std
mov
sbbl
cmc
mov
clc
scas
js
xchg
mov
adc
dec
test
fs
xchg
decb
icebp
call
xchg
xorb
pop
add
mov
rorb
pop
adc
or
aas
imul
mov
jmp
sub
repz
fcomp
xorb
pop
enter
popa
mov
jle
and
cmc
aas
dec
test
cmp
imul
xchg
lret
cmc
adc
cmp
inc
out
call
fdivr
out
pop
mov
div
lcall
cltd
bound
aam
test
cwtl
stos
mov
ljmp
call
imul
xchg
adc
or
or
in
stos
ljmp
fsubr
sub
rolb
sbb
fdivl
cmp
mov
sub
and
seto
mov
push
sub
dec
or
jb
cmp
shlb
xchg
pop
or
xchg
dec
in
daa
mov
cmp
pop
dec
or
cli
pop
mov
stc
call
jle
sti
dec
jl
sub
mov
fistpl
popl
in
dec
mov
xor
push
loopne
ds
xor
mov
mov
rcrl
popf
push
push
daa
das
mov
cmp
cmpsb
ret
jp
cmp
cmc
aam
dec
jb
dec
out
call
dec
loopne
or
jb
ret
jo
dec
stos
mov
int3
pop
cwtl
fstpt
add
mov
push
adc
pop
mov
push
mov
jmp
cmovns
and
pop
movsl
cmp
and
pop
add
add
sbb
xor
dec
cld
insl
mov
xchg
shrb
lock
fs
imul
dec
sub
aad
mov
stos
sub
xchg
lods
xor
orl
pop
rcll
jbe
cmpsl
inc
push
sbb
mov
cmp
xchg
outsl
xrelease
clc
or
clc
jg
arpl
xchg
add
cmp
loop
addr16
aaa
sbbb
or
sbb
in
mov
jecxz
mov
lret
dec
es
call
mov
pop
lahf
scas
pusha
mov
icebp
lds
sub
movsb
mov
adc
mov
jnp
xor
mov
sub
out
and
enter
mov
pop
test
or
cmp
lock
out
insb
jmp
push
sbbb
imul
xchg
pop
adc
cmp
in
push
jb
ljmp
xchg
or
lahf
sbb
loope
lea
out
jge
cwtl
mov
mov
dec
push
int3
push
fsubrl
mov
push
or
adc
cmc
adc
shr
cld
cmp
addl
outsb
add
mov
out
outsb
jge
adc
out
mov
insl
pushf
xchg
insb
fcompl
ficoml
add
pop
pop
dec
lret
cmp
cmp
lcall
ds
dec
mov
mov
icebp
sub
enter
mov
fisttpll
xchg
adc
js
pop
push
out
mov
sub
pushf
movb
xchg
mov
jecxz
jo
adc
mov
cmc
in
xlat
xchg
imul
mov
mov
adc
jmp
lods
mov
popa
pop
mov
push
push
xchg
cmpsb
mov
sub
cmp
and
mov
cmpsb
xchg
pop
lret
jecxz
int3
pop
cwtl
aam
imul
xchg
sar
and
mov
and
mov
jo
lods
icebp
or
aam
mov
pop
cmp
loop
ss
lock
movsl
shr
addr16
push
fmull
ja
sub
adc
ret
ret
lock
insl
or
mov
scas
push
outsl
lea
arpl
lea
loopne
adcl
jmp
adc
inc
mov
push
repnz
repz
adc
push
les
in
xchg
rorb
bound
xor
int
fwait
rcrl
es
movsl
mov
movsl
js
mov
rcl
inc
movsl
or
mov
push
rcr
mov
lods
sub
stos
loopne
ds
pop
xchg
das
lea
pop
push
inc
in
in
push
pushf
xchg
mov
lcall
cmp
pop
push
fiaddl
pushf
xchg
dec
inc
shlb
dec
pop
pop
in
test
jmp
fcoml
in
icebp
jae
dec
int
addb
dec
repz
orl
jbe
mov
fldt
add
fidivs
cld
push
push
mov
cmp
int
and
push
test
cmp
pop
inc
lea
xchg
xor
into
push
cmp
out
aam
xchg
fmulp
lea
mov
push
ljmp
push
faddl
lds
mov
push
jmp
cmpsb
jno
test
add
jmp
pop
clc
pop
iret
jbe
push
dec
loop
xlat
pop
repz
mov
mov
outsl
add
pop
mov
ret
jge
in
xchg
je
aad
mov
xor
mov
cwtl
mov
in
lcall
sbb
sbb
dec
adc
mov
mov
inc
insl
int3
adcb
cmpl
orl
lcall
pop
sub
call
insl
ret
dec
aad
fucomip
js
sub
xor
mov
dec
pop
testl
lret
cld
adc
mov
shll
pop
pushf
push
sub
into
mov
dec
sahf
outsb
lea
in
cmp
addr16
push
arpl
mov
movsb
loope
ss
and
movsl
inc
jge
xor
and
call
fsubl
jp
fnsave
repnz
stos
arpl
xchg
pop
popf
xor
gs
mov
jp
daa
mov
movsl
cs
push
dec
stos
add
xchg
push
aam
xchg
call
daa
in
in
in
dec
lea
adc
aaa
in
xchg
nop
leave
mov
aam
adc
mov
fsubl
ds
adc
bound
push
rorb
push
fadd
mov
inc
ljmp
xchg
fisttpl
lcall
pop
mov
mov
mov
repz
popa
pop
pop
popa
pushf
and
mov
insl
mov
sti
or
fmull
pop
cmp
fs
stos
ret
aad
pop
mov
push
scas
loop
mov
inc
lahf
add
mov
sub
mov
pop
or
pop
add
sub
mov
xlat
push
out
jecxz
negb
faddl
mov
ror
and
incl
es
in
sub
xchg
sub
cmpsl
inc
stos
pop
jle
cld
lods
shlb
xchg
cmp
rolb
insl
cmp
pop
cs
lcall
or
adc
add
or
dec
xchg
movsb
aam
jne
jne
fsubrl
mov
add
jp
clc
pop
sahf
shrb
test
adc
and
nop
icebp
push
in
pop
loop
das
add
xor
mov
sub
gs
pop
mov
dec
fdivl
loope
push
mov
and
sarb
ds
sub
pop
faddl
repz
mov
pop
inc
and
push
xchg
mov
out
out
pusha
adc
repnz
arpl
xor
in
sub
repnz
in
stos
xor
mov
fcompl
or
cmp
xchg
lock
push
pushf
aad
mov
or
insl
dec
mov
push
jl
mov
ficoml
fdivl
stos
aad
movsb
fistl
mov
add
loope
push
pop
sub
pop
push
shlb
pop
rep
and
js
adcl
vunpckhps
mov
mov
pop
dec
cmc
pop
jge
mov
fsts
pop
insl
scas
xor
sub
ds
repnz
cmp
mov
pop
mov
mov
lods
mov
adc
adc
adc
rclb
jae
jmp
jmp
movb
call
loop
xor
cmc
sbb
add
insb
notl
pop
adc
adc
mov
into
stc
and
jge
pop
push
and
xchg
daa
xor
insl
ljmp
cmp
xor
daa
jo
lock
cltd
mov
sub
cmp
in
or
stc
xchg
cltd
out
inc
jnp
in
inc
mov
mov
inc
cmpsb
mov
mov
sub
test
mov
pop
and
dec
xor
cwtl
ds
out
stos
jmp
cltd
jnp
xlat
mov
dec
loopne
xor
pop
mov
stos
lods
mov
std
pop
outsb
jp
lret
xor
xchg
sbb
hlt
jnp
aad
push
shl
roll
je
jae
gs
insb
xor
cs
insb
add
adc
pushl
pushf
lea
jae
pushf
call
add
dec
gs
popa
addr16
outsl
js
add
cmc
addr16
incl
xor
and
adc
xchg
adc
bswap
bsr
neg
mov
pusha
mov
or
bt
bswap
mov
seto
not
inc
inc
mov
sbb
cmp
adc
sub
lea
setns
lods
not
xor
rol
sub
rol
setno
pushf
push
call
sbb
add
mov
daa
mov
sahf
gs
enter
xchg
push
daa
cmp
in
jo
cmp
and
cmp
mov
repnz
and
dec
loopne
enter
mov
aad
out
or
in
pop
ds
push
mov
fldcw
cs
cmp
or
out
pop
mov
pop
ljmp
xchg
push
hlt
cli
sbb
sti
sbb
cltd
mov
and
and
and
pop
ret
fcomp
sub
mov
lcall
sbbb
xchg
sub
shrb
fsubs
dec
sbb
imul
in
jecxz
bound
mov
adc
les
push
call
dec
jecxz
fs
jae
push
pushf
pushf
cmp
pushl
mov
lea
ja
mov
pusha
not
inc
movb
mov
inc
shr
xchg
shr
rcr
shl
mov
xor
shl
clc
mov
pusha
xchg
mov
ror
push
movzbw
mov
add
jp
sub
pusha
pusha
call
fwait
test
dec
out
mov
or
fldl
repz
sub
lcall
mov
pushf
push
pop
sti
pop
push
mov
notl
jmp
ds
mov
cwtl
add
popf
xor
mov
test
jae
mov
dec
sub
test
sub
inc
or
call
lea
rorb
push
lea
pop
daa
xchg
mov
inc
test
add
lcall
dec
divl
mov
imul
mov
cmp
clc
mov
push
xchg
popf
dec
loopne
rcl
mov
push
fidivrs
mov
insb
dec
imul
jl
insl
mov
imul
sbb
into
popf
mov
aam
adcl
ja
add
mov
fmull
orl
dec
cmpsl
or
pause
aam
jecxz
iret
and
sbb
dec
orl
insl
fcompl
inc
sbb
or
fmuls
or
mov
out
mov
or
test
add
imul
and
loop
rcl
mov
mov
mov
lea
add
adc
nop
mov
mov
push
sar
dec
jmp
push
mov
insb
xor
test
cmpsl
stos
sub
lret
nop
push
mov
dec
test
lock
pop
cld
jns
js
pop
movsl
incb
pushf
mov
add
pop
mov
bound
mov
adc
adcl
dec
mov
inc
aaa
jae
mov
pop
shlb
in
test
xchg
movb
inc
ljmp
xorl
mov
sub
inc
test
shrb
mov
mov
pop
sub
dec
push
lods
pop
mov
cmc
fadds
push
sbb
mov
xor
and
mov
push
mov
rorl
scas
lds
mov
pushf
adc
sub
cmp
mov
repnz
lods
xor
push
mov
addb
and
and
les
mov
in
mov
add
lock
adc
mov
mov
in
test
sti
push
push
shll
xchg
jb
mov
scas
xchg
icebp
les
mov
mov
loope
add
mov
push
or
sbb
pop
sbb
fildl
arpl
dec
lds
push
enter
jle
mov
ret
lea
icebp
jae
fdivl
xchg
xor
push
xorb
jne
lret
stos
sub
inc
push
nop
mov
mov
stos
imul
aaa
dec
out
ret
test
call
push
xor
loopne
fimuls
testb
fs
fdivl
inc
jle
cld
fadd
test
out
scas
aad
mov
lret
mov
inc
lret
or
enter
cmp
mov
xor
add
mov
mov
aam
xchg
jmp
adc
mov
fldcw
adc
mov
mov
pop
mov
repnz
xchg
or
sub
cmp
mov
mov
add
in
add
std
test
stos
mov
or
aas
loopne
mov
ret
mov
mov
add
jmp
sub
cwtl
mov
xchg
cwtl
test
mov
clc
setp
mov
repnz
mov
or
ret
mov
cmpb
cwtl
sbb
das
test
xchg
shlb
fcmove
mov
stos
push
mov
add
add
les
mov
mov
and
cwtl
lea
test
ret
loop
loop
lcall
loop
lock
shr
lods
sahf
pop
or
fidivl
loopne
nop
stc
xor
daa
cli
sub
fiaddl
inc
in
mov
mov
enter
sub
pop
fiadds
cmpb
rcr
rcr
mov
imul
mov
lods
lods
mov
sub
orb
mov
imul
lods
xchg
lret
fidivs
mov
mov
sub
movzbl
notb
cld
loop
mov
out
lret
nop
mov
lods
mov
or
into
enter
pushf
mov
loop
mov
mov
scas
dec
xchg
sbb
add
sarl
in
fsubl
fdivs
dec
aam
jns
mov
cmp
test
or
jnp
mov
pop
add
push
in
fstp
cmp
sub
lea
mov
int
out
lock
push
aam
mov
int3
loope
sti
xchg
mov
pop
lea
mov
insl
in
test
outsb
pop
pop
test
or
push
xchg
cmp
popa
push
lock
fadd
push
arpl
ss
push
dec
sahf
adcb
push
mov
push
add
xlat
dec
add
outsl
adcb
push
or
pop
sbb
pop
inc
push
pop
aad
out
or
adc
push
iret
mov
push
mov
jmp
outsl
arpl
push
icebp
fsubl
arpl
in
movb
ss
aam
or
or
les
add
movsb
or
adc
xchg
ja
sub
jnp
mov
cmp
aas
xchg
lods
push
repz
push
vpmacssdd
mov
inc
push
cltd
mov
cli
pop
mov
das
push
dec
shl
repnz
sarl
dec
fsubrl
adcb
ret
cmp
inc
ljmp
adcb
call
lahf
xor
mov
xor
mov
je
les
inc
inc
lea
pop
cmp
xchg
fwait
adc
pop
xchg
jmp
mov
das
cwtl
cmpsb
mov
inc
jmp
rcr
mov
pop
mov
mov
dec
mov
mov
mov
mov
push
in
push
pushf
stc
aam
mov
dec
pusha
shr
std
jbe
push
or
int3
mov
xchg
loop
test
pop
lea
mov
test
mov
test
test
out
sbb
dec
fsubl
jo
lock
sarb
mov
loop
test
push
mov
dec
lods
lds
sbb
push
mov
insb
inc
xor
into
outsl
jmp
cwtl
or
insl
fldenv
jae
int3
je
pop
repz
scas
inc
push
or
push
rorb
aas
xlat
mov
inc
test
iret
push
lahf
mov
jmp
testb
dec
mov
repz
pop
loop
andb
orl
ror
xor
xorb
mov
das
sbb
ret
dec
push
sub
pushf
sbb
rcr
jecxz
add
xchg
mov
pop
mov
ret
mov
subl
adc
mov
dec
mov
dec
xor
xchg
nop
jp
mov
or
addb
fmuls
cmc
popf
lods
ret
adc
mov
push
stos
out
imul
lret
pop
add
dec
stos
clc
mov
xchg
pushfw
or
sti
push
xlat
out
adc
xor
mov
push
fsts
fdivr
inc
xchg
outsl
mov
shr
mov
push
mov
lret
mov
pop
push
adc
lret
pop
shll
mov
ljmp
loop
dec
lods
mov
mov
aam
sub
and
hlt
shlb
test
pop
test
dec
filds
mov
cmp
push
sbb
add
rcrb
fs
aas
mov
test
cwtl
stos
cmc
sahf
mov
xlat
sti
cmp
inc
inc
shlw
inc
push
rcr
js
jne
mov
cltd
aaa
imul
pop
shll
dec
sahf
jmp
aas
sbb
add
xchg
inc
scas
lret
and
out
int
dec
jmp
clc
decl
addb
fiaddl
push
mov
pop
fs
movsb
mov
push
sub
push
mov
cmpsb
rclb
hlt
sbb
es
in
lcall
mov
jecxz
cwtl
mov
hlt
dec
shrb
and
call
pop
mov
xchg
nop
pushf
bound
loop
add
cmp
inc
and
mov
sbb
push
inc
lahf
pop
adc
sub
mov
dec
xchg
inc
fldt
int3
mov
dec
loop
mov
repz
fistpl
xlat
aaa
mov
jle
shlb
jmp
sub
lret
mov
aad
pop
jb
fcoms
push
fld
mov
inc
ret
in
imul
mov
inc
idivb
mov
mov
mov
repz
in
push
xchg
shll
rclb
shld
pop
syscall
lret
imul
out
xor
inc
inc
mov
pushf
in
andb
enter
mov
pop
mov
pop
lods
daa
push
add
mov
lods
cmp
lret
jbe
lahf
add
cmp
repz
adc
aad
rolb
js
cmp
jmp
aas
in
cmpsb
cbtw
das
jecxz
test
push
pop
fwait
push
xchg
or
inc
orb
and
mov
movsl
xor
mov
lds
fsts
enter
mov
pushf
leave
jne
cltd
and
sub
mov
call
mov
fdivrl
cmp
repnz
add
call
stos
mov
and
xchg
or
sbb
jp
nop
push
or
pushf
push
aam
adc
pushf
minps
jle
dec
dec
js
mov
or
jge
pop
cmc
cmp
icebp
dec
lods
sahf
inc
shrb
dec
in
mov
adc
mov
cli
or
int3
std
inc
test
jmp
test
xlat
scas
jb
mov
dec
pop
das
dec
lret
dec
push
or
out
xchg
daa
das
pop
inc
mov
stos
cmp
sbb
mov
cmp
sti
pop
stos
arpl
jns
imul
pop
cwtl
mov
mov
icebp
enter
lret
nop
sub
aas
scas
pop
mov
xchg
mov
pop
mov
jbe
push
mov
add
inc
mov
inc
xchg
sub
add
push
and
pop
inc
inc
jno
cmpsb
lea
xor
pop
int3
push
jae
adc
aam
cmpsb
nop
cmp
fucomp
mov
mov
psrlq
push
mov
hlt
mov
mov
test
dec
cmp
pop
sub
and
mov
or
add
outsb
inc
inc
lret
or
dec
jecxz
jmp
daa
fiadds
ret
jle
xlat
pushf
aam
push
mov
push
mov
mov
iret
xchg
sbb
add
fcmovu
and
mov
mov
scas
cmpsl
sub
jge
and
pop
jg
mov
and
xlat
or
mov
bound
pop
pop
outsb
jge
xor
xor
mov
or
mov
cmc
repz
cmp
cmp
mov
mov
sbb
sub
push
add
adc
xchg
push
mov
mov
pop
push
mov
inc
adc
imull
mov
xchg
lods
mov
ret
lea
insl
or
dec
push
dec
push
sub
mov
mov
movsb
add
fmul
jle
mov
out
cmpsb
jns
notl
xor
imul
sub
shlb
daa
xchg
test
adc
jmp
push
std
popf
cmp
mov
adc
xor
pop
enter
mov
mov
inc
fldenv
mov
cli
sub
mov
enter
rcl
xlat
popf
pop
cmpsb
inc
js
push
int3
xchg
mov
scas
fcompl
mov
cmpsl
outsl
lcall
inc
mov
mov
xchg
mov
fidivrs
xor
mov
gs
sbb
add
insl
outsl
hlt
xor
jb
hlt
or
aam
shll
lret
hlt
mov
or
fsubl
fldcw
xchg
stos
xchg
fucomip
mov
inc
ljmp
pop
les
test
jnp
shl
fwait
cmp
fdivrs
fmull
enter
aam
std
negb
sbb
adc
xorb
mov
std
xchg
lret
mov
mov
mov
xchg
pop
lock
fisttpll
push
dec
lret
hlt
xchg
add
cmp
xchg
lret
xor
push
popa
cltd
sub
mov
dec
sahf
cmp
fdivr
lods
fisubrs
mov
cmpb
add
inc
test
orl
jle
movsb
xor
repnz
imul
nop
push
test
dec
mov
xchg
mov
cmp
shlb
cmp
push
push
mov
push
xlat
dec
repnz
js
aam
insb
lds
jo
in
rcrl
dec
pushf
cmc
push
and
xor
push
pop
mov
stos
out
insl
cmp
pop
inc
mov
cmp
test
aam
into
adc
repz
cmpsl
xchg
shr
jmp
in
mov
lock
icebp
imul
test
xlat
mov
in
dec
clc
popf
push
cmp
les
insl
sub
xor
in
sub
xchg
fsubrl
outsb
pop
and
cmp
push
dec
jecxz
stos
leave
pop
mov
pop
mov
lcall
xor
sbb
icebp
rcll
or
mov
xchg
shrb
nop
sub
dec
mov
repnz
mov
dec
mov
pop
rorb
jmp
test
jb
dec
inc
ds
mov
dec
pusha
int3
stos
sub
andl
mov
lret
cmp
mov
shl
pop
scas
in
in
ja
mov
in
mov
push
test
into
fcom
cmp
dec
bound
mov
out
lret
jbe
and
mov
mov
mov
popf
pusha
push
stc
pop
inc
mov
mov
push
mov
fcmovnb
movsb
imul
adc
or
inc
cmp
lock
xor
loop
xchg
mov
adc
push
xor
mov
or
lds
mov
sbb
test
jo
mov
inc
ror
cmp
push
xchg
test
push
ret
lea
mov
pop
test
in
stos
test
mov
fcoml
dec
jle
out
mov
lock
lcall
push
mov
sarb
mov
fidivl
lahf
cs
mov
mov
loopne
jge
cmp
addl
pop
pop
push
cmpl
lods
fldenv
repnz
mov
mov
rorl
inc
enter
jp
push
push
adc
or
sub
out
aaa
mov
pushf
scas
mov
popf
movsl
pop
jne
xor
cltd
xchg
jne
dec
jecxz
das
push
push
mov
mov
mov
pop
mov
mov
add
jo
dec
aas
jb
mov
shll
mov
int
mov
and
add
and
cmp
dec
hlt
test
inc
mov
aaa
pusha
loope
push
loope
das
xor
movsb
xor
dec
mov
shr
jl
mov
push
pop
lret
rcll
mov
add
ret
cmp
fidivs
loopne
lods
jae
mov
sbb
mov
fsubrs
cmp
xor
jnp
push
repnz
les
mov
lds
js
mov
lea
inc
cmpb
adc
mov
pop
aam
scas
fists
fsubrp
push
dec
jp
or
mov
test
int3
xor
mov
dec
outsl
xchg
mov
mov
insb
mov
xorb
pop
stos
pop
or
sbb
adc
stc
xor
out
and
mov
dec
sti
cmp
int
mov
stos
add
or
xlat
out
sbb
jae
lods
in
inc
lds
inc
add
jecxz
and
pop
cmpsb
int3
fwait
mov
fstpl
adc
or
sbb
inc
int3
mov
jne
ss
imul
xchg
xor
test
mov
inc
mov
fiadds
lds
push
gs
jae
jecxz
lcall
mov
mov
jnp
call
pusha
or
in
xor
jg
or
subb
jecxz
mov
fisttpl
fsts
std
jge
sub
js
cmp
lock
fcompl
pop
in
cmc
stos
enter
test
hlt
push
arpl
mov
repz
lret
cmpsl
and
daa
add
inc
pop
sbb
test
loop
mov
pop
cld
xor
fmull
sbb
int3
push
lock
dec
mov
jmp
scas
mov
sub
lds
or
ss
xchg
dec
dec
push
ret
adc
cmp
jecxz
or
aam
inc
enter
out
movsb
movsb
mov
stos
add
push
lahf
dec
pop
dec
ret
add
shrb
add
mov
test
cs
or
mov
scas
fldl
dec
stc
xlat
mov
pop
stos
inc
xchg
xor
push
inc
sub
scas
mov
pop
outsb
loop
dec
mov
scas
mov
mov
add
fsub
sarl
jp
mov
xchg
xchg
repnz
sbb
pop
sub
ja
imul
das
xchg
add
das
shll
xchg
in
xchg
addr16
mov
dec
inc
fsubl
xchg
out
jns
test
push
inc
and
lock
int
loopne
mov
and
dec
outsl
cmpsb
mov
dec
mov
mov
loope
jl
mov
je
mov
stos
or
loop
jno
push
test
cwtl
sbb
in
push
aam
js
mov
bound
or
push
mov
mov
dec
std
bound
add
jecxz
fsubl
jns
sbb
data16
cli
jno
lds
enter
mov
pop
in
mov
les
mov
daa
imul
sub
imul
or
sbb
inc
cmp
test
xchg
aam
inc
outsl
popf
pop
inc
xchg
mov
call
jecxz
nop
dec
dec
xor
push
les
fsubl
push
jo
and
pop
jle
xorb
push
ja
sub
jne
push
jp
jnp,pt
mov
adc
mov
ljmp
cwtl
out
dec
jp
or
scas
or
pop
push
test
or
into
loop
jnp
or
and
or
jecxz
lock
lea
xor
push
sub
movsb
sti
fistl
shll
movsl
ror
sub
cmp
gs
xor
frstor
mov
addb
shrl
sub
testl
test
lock
imul
test
lret
pushf
jecxz
inc
dec
fistl
xchg
pop
mov
nop
fistps
outsl
mov
xchg
push
adc
sub
push
jp
andb
cs
shl
movsb
mov
push
int
xchg
pop
into
add
and
mov
xor
cmp
nop
cli
test
jmp
imul
sub
insb
push
push
nop
mov
or
cmp
adc
mov
pop
dec
adc
fmuls
xchg
xor
loopne
push
sub
ja
in
pop
aam
mov
repz
push
lock
ret
push
jns
xchg
mov
std
test
mov
dec
mov
lret
hlt
scas
mov
clc
mov
es
mov
in
aam
std
test
jne
jne
call
fsubrl
lds
popf
es
xchg
mov
inc
dec
sbb
dec
xor
mov
xchg
inc
pop
cmp
and
xchg
push
xor
popa
pop
or
dec
inc
xor
fcomps
jge
movsb
or
fimull
adc
lcall
xor
push
pop
out
mov
xchg
scas
fsubl
mov
fwait
mov
pushf
int
cs
mov
and
sub
out
pop
adc
cmp
dec
cmp
jb
sbbl
arpl
or
les
lds
int
push
lock
adc
mov
call
or
inc
mov
xchg
mov
aad
pushf
xor
mov
cltd
jmp
mov
sub
add
mov
lret
pushf
sbb
jne
lods
loopne
sub
dec
jne
mov
lods
test
or
pop
cmp
jle
dec
pop
movsl
pop
mov
loop
lods
jle
outsl
int3
mov
mov
shl
xor
addr16
jmp
dec
mov
insb
xor
mov
sub
mov
mov
mov
cs
mov
and
mov
sarb
push
sub
lods
test
repz
pxor
ds
mov
pushf
sub
push
cmpsb
loop
mul
leave
adc
pop
idivb
sarb
and
inc
dec
mov
fwait
cmp
repz
je
stos
mov
adc
mov
cmpsl
push
push
rclb
imul
fldt
fstl
xlat
xchg
pusha
push
cld
sbb
cltd
push
xor
xor
jb
jmp
loope
aaa
mov
sarb
jle
bswap
imul
xor
mov
je
into
xchg
xchg
lret
addr16
xchg
iret
sub
repnz
mov
add
mov
dec
into
pop
pushf
jg
xchg
pushf
push
or
aam
jmp
stos
mov
test
push
out
or
add
xor
jb
sbb
mov
push
mov
not
xlat
mov
call
xchg
xchg
pop
shrl
cmc
icebp
stc
push
dec
and
jle
xor
andb
stos
orb
adc
clc
push
aam
add
dec
jge
movd
fcoml
pop
popa
popa
mov
jb
repnz
sub
insb
jae
out
data16
or
out
pop
test
into
push
jns
lods
fisttpll
mov
xchg
inc
xor
push
mov
push
cmpl
call
aas
adc
icebp
jb
xor
cltd
shl
mov
sbb
in
pop
fwait
scas
xchg
cmp
repnz
cmpb
nop
push
repnz
sub
fcompl
mov
jp
mov
push
mov
or
pop
popf
jg
pop
xorl
popa
push
addr16
es
mov
jle
lock
call
add
jnp
aad
mov
sarl
xchg
outsl
aam
nop
jae
shrl
fs
push
jae
out
aaa
int
xchg
call
push
mov
mov
lret
scas
in
leave
test
fcoml
xor
arpl
test
mov
mov
mov
mov
data16
movups
dec
jmp
push
loope
mov
cli
dec
mov
arpl
inc
dec
and
cli
testl
test
dec
out
arpl
adc
mov
shll
mov
ja
dec
loop
mov
fbld
scas
sbb
push
lods
aaa
lods
lods
dec
jo
les
mov
jno
rcll
xchg
cmpsb
loop
mov
rol
add
inc
lock
arpl
movsb
mov
fwait
sti
adcb
aam
inc
or
popf
aaa
push
mov
test
mov
mov
cs
cmp
push
clc
fisttpll
push
pop
mov
iret
xchg
adc
pop
xchg
daa
cmpb
jb
sub
stc
inc
jbe
cmp
fisubrl
mov
stos
push
inc
cli
rcrb
push
inc
jle,pn
jne
pop
push
inc
aas
sbb
jnp
mov
mov
add
in
or
mov
faddl
lret
rsm
call
cld
call
ret
insb
xchg
jmp
fbld
gs
fmull
mov
sub
repnz
xchg
outsl
inc
jle
popa
xchg
in
gs
push
or
mov
adc
push
mov
sub
push
add
dec
shl
aad
cmp
lret
out
xlat
call
xor
add
les
pushf
push
aaa
out
loop
push
arpl
push
push
and
lock
insl
mov
or
orb
xor
adc
loopne
mov
mov
adc
aam
outsl
jmp
jae
mov
or
lret
mov
xor
repz
loopne
cmp
push
mov
jno
mov
out
push
xor
xlat
fdivrl
pop
mov
inc
mov
aaa
fstl
xor
inc
stos
mov
cs
int3
add
or
push
movsl
push
jb
mov
inc
sub
push
fmull
lret
in
xchg
push
outsl
mov
sub
push
cmp
cmpsb
rorb
outsb
pop
pop
xor
js
int3
mov
cmpb
nop
dec
push
cmp
stos
push
sbb
push
xchg
mov
dec
das
adc
sub
and
mov
ja
leave
xor
movsb
sbb
shlb
and
mov
cmpsb
push
imul
lea
sahf
mov
mov
jb
rorb
and
sub
aad
mov
push
stos
nop
and
mov
cmpsb
xchg
jl
push
pop
inc
mov
adc
mov
faddl
sbb
mov
pop
pop
jne
mov
add
rorl
xor
and
pusha
jno
andb
das
aad
andb
inc
adc
mov
insl
pop
cwtl
icebp
insb
or
icebp
push
les
mov
adc
pop
data16
addl
fmuls
adc
stc
pop
stos
push
adc
test
mov
dec
lock
cmpsb
push
fwait
mov
mov
push
dec
adc
je
or
jne
rorb
lret
cwtl
xor
mov
aad
inc
nop
mov
mov
mov
aad
stos
mov
lds
jmp
inc
movsb
pop
call
pop
push
sti
rolb
mov
and
ficoml
push
fwait
std
aad
and
push
and
paddq
xlat
enter
cmpb
cwtl
dec
dec
xchg
mov
shl
or
aaa
or
jo
and
lret
lock
cmpsl
push
shll
mov
sbb
or
shll
movlps
mov
adcb
mov
cmpsl
mov
push
insb
shlb
jl
mov
pop
pop
sbb
push
mov
mov
pop
mov
adc
xor
adc
and
outsl
inc
aad
int3
es
sbbl
sahf
test
lock
pop
int3
and
lea
or
pop
or
and
mov
push
scas
push
xor
insb
pusha
mov
cmp
push
iret
rolb
sbbb
pop
mov
cmpsb
addl
and
sbb
imul
and
dec
mov
add
pop
pop
fistl
and
inc
sahf
jae
sbb
cmpsb
aam
cli
mov
subb
and
mov
push
shrl
pop
insb
aam
shlb
or
test
fstp
aam
and
imul
sbb
movb
lods
in
leave
push
adc
adc
loop
out
or
hlt
int3
mov
test
enter
or
adc
xor
lods
mov
cmpsl
fsubs
mov
and
pop
pop
out
dec
andb
sub
xchg
xchg
or
mov
std
adc
xchg
adc
mov
jmp
or
xchg
xchg
jo
iret
push
add
mov
push
int3
and
adc
pop
fisubrs
xchg
imul
mov
dec
loop
in
mov
add
enter
lea
adc
jl
aam
rolb
add
xchg
jmp
push
nop
lret
push
fs
nop
lea
mov
nop
mov
mov
in
mov
and
shll
clc
nop
add
mov
sbb
push
fnstsw
lock
pop
daa
sub
loopne
and
lods
sub
inc
add
clc
daa
mov
sub
leave
fsubs
mov
pop
jle
hlt
mov
fisttpl
mov
rorb
or
in
ret
pop
or
iret
jge
leave
insl
jb
nop
adc
xchg
clc
nop
cmp
inc
mov
cmp
leave
mov
or
inc
add
shl
pop
xor
in
mov
mov
mov
lea
push
les
scas
inc
push
cld
inc
sarb
or
aam
imulb
cmp
js
jecxz
cli
nop
xor
jb
sbb
pop
adc
nop
fisubrs
dec
fcoml
arpl
stos
xlat
pop
xor
adc
into
mov
jl
nop
jns
add
mov
jb
inc
mov
js
movsb
fidivrl
jae
pop
xchg
nop
movb
lret
add
shrb
test
xchg
cwtl
nop
push
mov
pop
mov
addr16
shll
mov
fists
pop
xorl
cmpsb
sahf
push
aaa
jnp
ds
mov
sti
popl
repz
aam
mov
jle
ret
call
add
mov
nop
sub
sub
nop
or
mov
or
sbb
mov
rclb
repnz
gs
mov
mov
rcl
jbe
lret
dec
xlat
mov
sbb
test
jg
add
fisubrl
jo
pushf
test
push
cmp
push
jb
push
or
popf
ss
mov
pop
jp
pushf
ficoml
pop
push
dec
fadd
nop
loope
pop
leave
cmpsl
addl
jno
in
popa
std
nop
loop
test
nop
xor
fdivrp
bound
call
push
pop
lods
lock
push
xor
nop
adc
iret
inc
popa
sub
adcl
sti
test
in
xchg
js
add
ss
mov
jge
scas
aam
mov
ror
lahf
pushf
push
xchg
mov
icebp
mov
aam
sbb
jecxz
aas
mov
push
loopne
sbb
push
pop
jg
in
js
dec
std
fcoms
outsl
invd
lods
aad
nop
movsl
mov
mov
fs
sub
fwait
das
rcl
xlat
xchg
push
nop
daa
pop
in
je
mov
adc
xor
out
xchg
ds
orl
pop
rcll
in
dec
jo
nop
aas
iret
mov
cmp
notb
add
test
add
into
pushf
or
ljmp
xchg
call
adc
enter
mov
xorl
pop
or
and
cwtl
js
sbb
jg
dec
enter
aam
jb
nop
ss
sub
sbb
imul
lahf
xchg
pop
nop
imul
mov
shll
je
cmp
movsb
nop
lods
inc
and
adc
out
adc
inc
xor
ret
and
mull
jl
in
jo
nop
sahf
and
sbb
insl
test
in
nop
add
stc
push
xchg
push
adc
jb
xor
outsl
cld
xchg
inc
lea
lcall
test
pop
les
mov
mov
sbb
gs
adc
pushf
pop
loopne
loopne
scas
inc
adc
xor
xor
fcompl
out
inc
call
nop
stc
mov
popa
pop
nop
pop
std
lds
xchg
mov
add
push
mov
mov
xor
jo
xchg
mov
dec
sbb
fdivs
insl
mov
and
cld
dec
nop
add
mulb
nop
xlat
mov
and
call
leave
or
inc
ss
iret
xchg
in
lret
lock
mov
dec
jbe
cmp
inc
mov
fdivl
fld
nop
out
aad
sti
add
pop
mov
lods
bound
inc
fs
push
or
in
js
nop
mov
test
nop
mov
inc
cmc
jl
popa
mov
es
nop
sar
out
push
jle
out
inc
mov
lea
or
outsb
nop
rcr
and
fcompl
jo
push
enter
mov
mov
cli
push
movsb
das
popa
xchg
std
daa
xor
dec
ret
call
sbbb
xor
shl
bound
outsl
or
and
aad
or
cld
shlb
mov
mov
xor
mov
mov
nop
mov
inc
mull
cld
fxch
nop
lahf
jne
or
add
addr16
dec
stc
pop
call
xchg
js
pop
or
adc
sub
dec
adc
add
out
fisttpl
inc
loop
and
nop
cmp
xor
repnz
daa
nop
in
xchg
pop
or
out
fiaddl
mov
or
rcrl
pusha
and
pop
psubsw
aas
nop
mov
leave
das
mov
mov
mov
imulb
lock
inc
xchg
insl
xlat
mov
push
add
fisttpl
fwait
in
and
or
call
add
pop
fmul
adcb
mov
push
nop
jg
jne
adc
cmpsl
mov
and
inc
repz
push
arpl
ds
jnp
xchg
aad
negl
sahf
fnsave
or
jg
mov
nop
push
add
notb
sbb
loopne
pusha
nop
mov
jno
push
nop
sahf
xor
js
mov
loop
mov
nop
jbe
lds
loop
or
and
xchg
sbb
gs
push
nop
pop
in
pop
lods
aam
iret
popa
nop
jo
sar
push
jle
je
sub
push
mov
adc
lret
popf
orb
rclb
xchg
pop
push
leave
outsb
adc
sbb
mov
push
in
lahf
fcoml
cmpsb
icebp
xchg
or
cmpsl
dec
adc
stos
dec
shr
shrl
inc
out
xchg
sbb
cmp
into
mov
xchg
nop
sbb
test
in
nop
and
xor
enter
test
pop
repz
cmp
insl
mov
or
clc
in
stos
push
rclb
push
pop
mov
cmpl
iret
add
pusha
mov
cld
ss
cmp
outsl
test
push
popf
sub
jae
cmp
shlb
add
inc
mov
sub
or
pushf
imul
cmp
nop
rclb
xchg
repnz
or
adc
jp
movsl
mov
out
aam
mov
cmp
adc
dec
insb
sbb
jmp
add
jo
dec
pop
pop
nop
loope
jbe
add
addr16
and
jb
mov
divb
shrl
lods
lock
nop
rorl
mov
or
inc
jg
addb
adc
insl
push
jp
adc
scas
stc
fsts
sub
les
push
pop
cmp
rorb
and
das
test
and
mov
or
and
adc
add
in
ror
inc
cmp
adc
adc
loopne
mov
or
pop
mov
jp
xchg
mov
fiadds
nop
mov
lods
out
mov
cltd
scas
xchg
fnstenv
jno
pushf
push
sti
push
sub
rcr
leave
ret
push
xchg
test
mov
nop
lds
pop
xchg
push
sbb
pop
mov
push
jecxz
push
add
js
mov
adc
pop
ficoms
sti
lret
scas
inc
add
out
jecxz
cmc
not
push
fsts
xchg
pop
fcoml
xchg
sti
bound
add
cmp
xchg
sub
test
fwait
popf
cmp
ret
ja
sub
ss
outsl
imull
or
or
cmc
mov
ss
push
sbb
fmulp
adc
or
aad
nop
xchg
pop
leave
scas
jae
mov
outsl
pop
aad
fcoms
mov
cmp
nop
fldcw
add
xor
clc
andl
lock
sbb
mov
notb
gs
and
add
xor
imul
jecxz
sub
jmp
lret
add
dec
cmpsb
dec
loope
scas
repz
or
mov
fildll
fsts
aam
xchg
pop
nop
hlt
loope
bswap
int
mov
adc
mov
adc
mov
pop
adc
stos
shl
adc
jg
cli
imul
into
iret
packuswb
ja
aad
fistpll
ljmp
adc
mov
nop
jae
xchg
stos
jge
movsb
fiaddl
mov
rclb
cmp
nop
pop
mov
or
jne
sub
nop
and
cs
cwtl
je
or
lock
pusha
mov
nop
push
cmp
jne
mov
lret
adc
jmp
js
leave
xor
in
nop
mov
icebp
test
inc
nop
push
bound
loop
aaa
enter
out
xchg
mov
xor
push
test
movsl
insl
nop
je
mov
or
lods
nop
pusha
pop
fisubl
jo
cmpsl
popa
nop
scas
fistpl
jns
or
out
test
xor
sub
aam
pop
xor
in
nop
and
sub
xor
mov
jmp
mov
out
nop
mull
pop
cmpsb
mov
jae
nop
nop
ljmp
sbb
arpl
rcr
jmp
nop
rcl
dec
dec
pop
ss
or
pop
nop
or
mov
rcr
cli
das
push
js
pop
nop
clc
test
nop
sbb
xor
mov
adc
xchg
push
push
fwait
add
stos
jmp
nop
rcrb
in
xor
sbb
lods
fcom
lret
sbb
nop
mov
dec
adc
outsb
sbb
into
lcall
nop
push
int
iret
jnp
sub
jbe
push
sti
mov
xchg
mov
int3
stos
iret
aad
inc
cwtl
sarl
mov
fstl
cld
inc
test
or
leave
mov
mov
test
pop
fcomp
xchg
adc
xor
fcoms
mov
mov
pusha
mov
inc
push
movl
rorl
inc
ds
nop
dec
inc
adc
push
nop
stc
sub
les
das
jge
inc
stos
rorb
ss
add
sbb
sbb
inc
movsl
lods
inc
test
inc
push
pop
xchg
xchg
mov
jae
adc
mov
push
cwtl
ret
dec
nop
cltd
jb
xchg
xor
mov
jmp
into
test
fdivrl
jecxz
nop
loop
or
sub
and
mov
sbb
cmc
pop
mov
xor
insb
jns
fistpll
out
xchg
sub
data16
insl
nop
adc
clc
fisttpll
int
nop
mov
in
lahf
adc
mov
outsl
xchg
lods
jle
enter
pop
es
enter
sbb
push
insb
rorl
je
repnz
adcl
into
sbb
rorb
lds
pushf
nop
mov
dec
imul
test
loopne
aaa
insb
jae
jg
fnstcw
xchg
sahf
cli
nop
dec
jne
mov
ret
subl
mov
in
sub
dec
fdivs
dec
outsl
fsubs
lcall
pop
pop
sbb
add
aad
nop
push
aam
int
inc
mov
fstp
nop
loope
xor
subl
jge
mov
je
mov
fyl2xp1
nop
or
sbb
js
shr
nop
mov
popf
cmp
add
add
jb
or
fwait
push
push
push
loop
repnz
mov
cmc
xchg
cwtl
push
in
xor
mov
adc
or
pop
lret
jne
loopne
xchg
jp
and
ds
xor
fists
lcall
adc
fwait
and
fadd
xchg
adc
jae
imul
lea
mov
sbb
add
push
push
or
in
sub
xor
inc
or
xchg
pop
jmp
push
lahf
insl
mov
xor
lret
mov
ljmp
jbe
xchg
nop
test
sbb
or
popf
and
fidivrs
nop
daa
test
xchg
xchg
roll
nop
fsubrp
inc
pop
iret
mov
test
dec
xchg
xor
mov
stc
addr16
mov
dec
lock
and
mov
nop
jbe
xchg
jo
push
int3
mov
aas
xor
les
dec
or
xor
sub
jp
fisubs
nop
xchg
jmp
loopne
nop
jg
call
mov
lods
jge
js
sbb
xchg
nop
incl
xchg
stc
adc
mov
cmp
aaa
sbb
fcoms
mov
mov
rorb
movsb
or
add
lret
cmp
mov
aaa
pop
lcall
fisubrl
push
mov
lahf
scas
nop
loop
adc
push
lret
pop
popa
bound
pop
fldenv
out
shlb
repnz
dec
std
adc
outsl
sbb
mov
lret
popa
or
movsl
rol
push
cmp
xor
aas
nop
xor
cmpsb
sbb
lret
dec
nop
add
sbb
lcall
ja
dec
les
nop
jle
clc
leave
bound
loopne
dec
rorb
cmpsl
xlat
les
jo
fcoml
aam
push
nop
imul
mov
sub
daa
nop
dec
movsl
push
sbb
jge
test
clc
push
mov
into
add
fcoml
lods
shll
sbb
inc
inc
sub
mov
jb
arpl
pushf
jp
sub
test
shlb
stc
int
stos
xchg
pop
add
sti
or
xor
cmp
in
mov
dec
movl
jle
and
nop
mov
or
cmpsl
jno
nop
repnz
mov
ljmp
clc
cmpsb
movntq
in
xchg
cmp
nop
push
mov
fs
or
or
mov
cmp
lods
push
nop
xchg
push
outsb
jns
mov
loopne
adc
nop
jge
mov
loope
xchg
sti
sub
jns
cmp
arpl
call
nop
mov
push
mov
sub
push
nop
jae
aad
sub
fwait
sbb
push
and
push
nop
gs
and
out
push
push
mov
and
out
push
push
call
adc
sbb
ljmp
mov
push
out
adc
push
push
push
adc
xlat
mov
test
str
pop
test
add
or
fs
jae
bt
cmc
clc
sub
jmp
pusha
jmp
popa
test
add
add
add
push
call
xchg
icebp
or
add
add
pusha
bt
xchg
xor
btr
mov
jmp
fadds
adc
adc
push
fbstp
insb
add
xor
lea
adc
xchg
cmpsb
mov
insb
sub
mov
nop
in
movb
push
mov
addr16
pusha
xlat
jle
cmp
and
pop
insb
dec
test
aas
cltd
int
pop
in
sbb
lea
and
ja
sub
jg
pusha
pusha
rep
lea
mov
push
lea
jmp
push
call
jno
mov
icebp
or
push
test
add
add
add
xchg
call
xchg
movb
inc
lea
call
nop
std
adc
lea
mov
or
mov
xchg
shl
pop
mov
inc
mov
mov
orl
loopne
or
in
outsl
fs
in
out
addr16
popa
loope
loopne
arpl
loop
dec
mov
mov
repz
mov
xor
aaa
enter
mov
popf
sbb
pop
lahf
push
sahf
sbb
fwait
sbb
xchg
pop
xchg
enter
cmpxchg
orl
sub
pushf
jl
adc
lock
push
lea
call
pusha
sub
call
stos
pusha
push
movb
lea
jmp
xchg
icebp
or
add
add
push
call
jo
scas
push
nop
mov
fdivl
xchg
xlat
nop
pushf
inc
mov
xor
dec
mov
cmpb
and
xchg
xchg
sahf
adc
int3
sbb
aas
mov
loopne
adc
mov
pop
mov
mov
jne
push
sbb
lods
sub
faddl
rorb
pop
add
adc
xor
sahf
notl
push
sbb
mov
mov
push
dec
popf
and
int3
mov
push
xchg
in
lret
adc
test
pop
mov
popf
or
mul
push
mov
push
arpl
push
loope
dec
xchg
mov
pop
enter
jns
icebp
pop
jle
dec
jecxz
mov
mov
mov
lahf
popf
mov
rcrl
pushf
sahf
flds
and
mov
aad
loopne
les
test
mov
fcoml
adc
outsl
or
iret
or
mov
pop
jecxz
adc
xchg
aam
pop
call
mov
mov
cmpsb
inc
popl
pop
mov
mov
mov
push
and
dec
pop
mov
push
nop
push
insl
xchg
mov
test
mov
xchg
mov
cld
xchg
jae
ficompl
sub
jecxz
ret
not
mov
mov
lods
out
in
cmc
jb
arpl
xlat
push
fcoms
into
hlt
xchg
out
dec
mov
test
inc
insl
xlat
fsubrl
das
push
clc
xchg
sbb
pop
mov
dec
push
mov
loope
jbe
push
cmp
in
mov
adc
pop
xchg
sarb
xor
push
dec
in
aas
jg
adcb
push
adc
adc
fdivs
mov
std
pop
std
mov
mov
rol
cltd
and
push
dec
mov
iret
add
xor
mov
xchg
or
dec
cmp
ljmp
subb
out
cwtl
adc
nop
call
not
lods
not
xor
rol
sub
rol
cmp
pushf
cmc
bt
shr
pushf
lea
je
pushf
jmp
jmp
xlat
jne
mov
test
mov
push
lcall
popf
sbb
arpl
push
mov
mov
repnz
ret
pop
imul
and
insb
sub
stos
xchg
in
and
les
aaa
adc
add
and
push
rep
pushl
pushf
lea
jmp
push
call
stos
jl
push
mov
push
cmp
movsb
sbb
nop
gs
add
daa
pop
or
les
and
mov
xchg
cld
xchg
lea
repz
xor
js
out
adc
shlb
lds
add
sub
inc
mov
nop
xorl
pop
fstps
mov
sub
out
inc
and
ss
and
rcrb
imul
adc
sbb
jnp
dec
fdivrl
out
sub
adc
sarb
je
xchg
sbb
pop
mov
fsubr
imul
add
sbb
adc
xchg
push
xor
notb
repz
mul
mov
call
test
lcall
push
shrl
sub
ret
sub
ficompl
icebp
movsl
xor
fidivs
test
imul
adc
and
test
push
lock
mov
cld
sti
fsubp
lcall
mov
in
mov
sbb
sti
jae
push
stos
out
sbb
mov
push
adc
mov
adc
adc
add
mov
and
jmp
sbb
mov
call
add
jb
inc
cli
push
xor
divl
imul
out
jp
imul
lea
dec
mov
je
adc
add
aaa
movl
lea
jmp
stos
sahf
movsb
fcoms
xlat
sub
push
ljmp
arpl
xchg
bound
outsb
popa
test
lods
stos
or
clc
push
push
push
pop
and
pop
imul
add
pop
cmp
lods
fstpl
leave
ds
cmp
push
fistpll
data16
or
int3
mov
int
cld
lods
fwait
jge
pop
daa
cltd
repnz
push
dec
jno
loope
mov
xchg
aaa
cmp
push
fcompl
pop
mov
push
xor
mov
push
jge
iret
pop
and
push
pop
imul
fdivp
xor
mov
add
xor
inc
mov
inc
iret
imul
pop
jno
outsb
sbb
fisttpll
xor
and
js
sbb
fucomp
jmp
push
call
mov
add
add
fisubrl
push
insb
in
xor
inc
imul
jo
lods
inc
pop
sub
js
aad
andl
add
sub
jmp
enter
dec
dec
or
add
add
add
push
imul
jb
je
arpl
add
addr16
gs
popa
insb
jne
inc
js
add
inc
inc
inc
sar
xchg
movsbw
cwtl
cmp
mov
shl
mov
call
inc
addr16
push
stos
orb
fisubrs
and
ja
imul
shll
adc
mov
add
add
add
lea
lcall
rcrl
lock
inc
mov
int
repz
xor
mov
mov
ret
pop
mov
mov
test
mov
cld
push
into
aas
cmp
orb
fimull
lods
sbb
les
popl
enter
les
fsubrl
enter
pop
test
push
loopne
incb
fadds
lock
in
mov
test
or
xor
mov
jb
pop
sub
or
mov
xchg
add
rorb
dec
outsl
lcall
test
in
mov
or
mov
pop
ljmp
mov
sub
mov
pop
mov
and
shll
movsl
dec
fcmovnbe
outsb
shlb
push
push
xor
in
jb
nop
or
adc
fdivl
pop
mov
inc
pop
or
push
adc
jb
les
cmpsb
fdivrl
mov
push
mov
adc
int3
adc
hlt
scas
cmpsl
stos
movsb
jmp
enter
add
loop
cld
mull
je
push
rcll
ret
or
stos
add
mov
das
sub
or
enter
xchg
adc
aaa
call
dec
in
or
adc
dec
jp
push
inc
xchg
aaa
call
pop
mov
add
push
mov
xorb
cmp
adc
in
in
insb
pop
add
das
push
push
xchg
xchg
cmpxchg
mov
mov
int3
sbbl
xlat
cli
push
mov
scas
nop
xchg
mov
xchg
fnop
mov
adcl
nop
or
fnstsw
pop
ss
push
pop
xor
int3
pusha
inc
mov
ds
fbstp
xchg
mov
test
push
and
adc
pop
in
imul
mov
mov
aad
sub
mov
stos
mov
adc
jb
push
iret
or
lods
test
adc
and
arpl
add
jno
imul
and
dec
lock
push
repnz
shll
out
fmuls
mov
adc
adc
xchg
test
push
fcompl
dec
dec
in
ljmp
fsts
inc
mov
outsl
push
insb
pop
jmp
lcall
pop
sbb
xchg
push
mov
adc
or
in
jmp
test
mov
rolb
sub
lods
fs
push
in
mov
out
pop
push
fcoml
cmp
xor
jb
sub
fiadds
xchg
dec
ror
mov
push
cli
je
mov
js
imul
jnp
jle
mov
ljmp
and
fimuls
mov
call
adc
data16
mov
mov
fs
div
adc
or
fmul
add
dec
scas
orb
or
addr16
or
sub
clc
xorb
mov
insl
mov
cs
test
rclb
lahf
jbe
mov
out
test
lret
and
jo
or
lods
shlb
sbbb
cmp
mov
push
orb
and
jle
add
xchg
lods
sbbb
adc
fnstcw
cmp
xor
xchg
lock
in
pushf
fst
pop
imul
lock
aas
loope
xor
insl
movsb
xor
or
lcall
lret
sub
pop
or
adc
xlat
jb
jnp
shll
xchg
clc
movsl
gs
cmp
dec
mov
fcoml
test
repnz
sbb
lea
mov
test
adc
arpl
inc
cmp
decl
fcoms
sarb
mov
cwtl
test
or
mov
mov
mov
xor
in
xchg
pushf
mov
adc
mov
lock
dec
xor
adc
aaa
pop
mov
add
icebp
lock
or
push
jae
jg
push
mov
cltd
push
arpl
daa
adc
mov
jecxz
inc
cmpsl
sub
or
cmp
ds
push
jmp
or
mov
loope
dec
test
fcompl
push
mov
jmp
xor
pop
sub
pop
add
stos
subb
and
xlat
pop
mov
lcall
mov
jns
dec
sub
xor
xor
mov
dec
repz
push
out
mov
out
add
xchg
jle
clc
ss
mov
out
aam
stos
xor
lcall
les
jmp
mov
ret
int3
sub
add
ljmp
mov
stc
clc
repz
cltd
rclb
dec
sbb
sub
ljmp
and
add
add
aaa
cmp
in
dec
stos
enter
mov
lods
inc
hlt
adc
stc
mov
mov
mov
mov
mov
lahf
mov
fsubrl
dec
into
mov
xchg
pushf
mov
mov
dec
enter
cmp
inc
je
in
mov
xchg
daa
scas
dec
xor
mov
jb
ficomps
push
call
lock
xor
add
dec
adc
test
adc
xchg
lods
clc
cmp
push
mov
mov
mov
dec
inc
mov
lea
push
or
push
jb
clc
in
inc
mov
or
orl
push
add
aam
aam
push
mov
xchg
movsb
addr16
xchg
hlt
icebp
xchg
xchg
mov
dec
stos
mov
das
into
rorb
sahf
mov
js
sub
xchg
fsubrl
sub
aas
xorb
ret
shrb
aaa
scas
sbb
call
inc
sbb
xlat
dec
cmovg
mov
mov
pop
mov
mov
movsb
shlb
hlt
addr16
sub
scas
cltd
dec
scas
iret
movsb
dec
jae
jge
insb
sub
xor
rcr
push
std
cwtl
xchg
fsubl
test
loope
idivl
xchg
test
push
gs
mov
into
jae
loop
mov
ss
lret
push
xchg
cmp
fldcw
addr16
call
mov
loop
fsubr
ret
fs
mov
imul
cmp
push
cmp
add
leave
mov
mov
inc
sarb
dec
add
mov
in
or
cmp
lret
movsb
xchg
fisttpll
dec
sub
jne
pop
and
js
mov
push
adc
lea
push
test
outsl
repz
jbe
icebp
shlb
push
cltd
adc
jno
dec
add
dec
call
mov
mov
lea
adc
mov
xor
mov
or
idivb
mov
inc
jne
ss
hlt
lcall
push
fidivrl
adc
adcb
clc
aas
pop
xor
add
jecxz
rcrb
xor
adc
jmp
sub
movsb
aas
inc
insb
paddusb
ret
pop
ret
or
mov
pop
xlat
testb
inc
inc
push
orl
fisubrs
inc
shrb
fcmovu
mov
mov
dec
and
lock
add
push
cli
or
mov
mov
jae
mov
test
enter
adc
lret
sbb
mov
push
popa
adc
cld
out
sti
int3
mov
icebp
pushf
std
xchg
insb
mov
das
xchg
xor
xor
lock
sub
shl
or
in
or
incb
test
out
sub
sub
test
mov
das
movsb
lret
test
inc
out
pop
add
lret
push
or
mov
dec
mov
mov
xchg
mov
cli
adc
push
fsub
roll
cmpsl
popf
insb
mov
push
jp
mov
pop
mov
sbb
xor
in
call
xchg
xor
xlat
push
shrl
mov
xchg
cmpsb
fdiv
stos
ss
test
into
mov
ja
loopne
sub
mov
stos
mov
stc
add
scas
adc
rorl
adc
mov
mov
dec
xchg
aas
outsl
pop
lret
jb
iret
mov
int
fmuls
fs
dec
adc
movsb
adc
and
int
sub
mov
shlb
xchg
mov
dec
nop
int3
mov
cli
cmpsl
inc
in
rclb
jp
mov
xlat
into
clc
cmpsb
sub
aaa
pop
xlat
fstl
mov
aaa
jmp
test
out
pop
dec
test
andb
cmp
vaddsd
andl
mov
inc
cmc
in
inc
mov
ljmp
rolb
adc
xor
in
xchg
fimull
sub
adc
int3
adc
dec
out
inc
aas
sub
xor
pop
push
push
sti
sub
ret
cld
cmp
xchg
xchg
mov
jge
mov
aaa
push
fiadds
outsb
popa
aam
or
rorl
and
and
pop
mov
mov
mov
xchg
test
sub
jmp
cs
fwait
inc
mov
mov
xchg
push
cmpsl
cld
iret
movsb
dec
lods
orb
mov
aaa
call
inc
mov
push
sub
imul
xchg
adc
stos
jae
sub
rorl
adcl
adc
xchg
mov
insb
fadd
pop
jecxz
lea
push
fwait
push
cmpl
add
push
and
hlt
push
ss
cmp
lock
add
jbe
mov
or
popf
cmpsl
and
pop
push
push
push
enter
jle
faddl
mov
cmc
rorb
cmp
por
xor
adc
fisubs
and
test
test
cmpsl
fistl
movsb
scas
mov
mov
es
call
and
jp
mov
movsb
adcb
out
add
push
into
pop
pop
mov
adc
adc
addr16
fwait
sub
adc
lcall
ret
or
or
insl
scas
dec
fadd
push
or
test
adc
cmpb
ljmp
adc
dec
scas
xchg
aas
jmp
ret
stos
mov
lds
dec
movsl
aas
inc
and
stos
dec
mov
pushf
or
fs
push
xor
push
scas
sbb
filds
in
xchg
rorl
push
int3
sbb
test
adc
mov
test
sbb
inc
mov
cmp
or
test
iret
lea
in
dec
mov
outsb
ss
std
mov
mov
sahf
mov
aam
pop
dec
mov
xchg
lods
lods
cwtl
and
push
xchg
cwtl
and
xchg
add
invd
inc
loopne
addr16
inc
adc
adc
cwtl
in
mov
mov
xchg
adc
mov
mov
mov
push
fsubrl
sahf
rcl
dec
cmp
cmp
mov
stos
fcompl
jnp
mov
mov
gs
outsl
jl
mov
loop
sub
mov
add
add
dec
cmpsl
test
in
jge
subb
adc
mov
out
jge
add
outsb
pop
adc
addl
addl
add
les
clc
xchg
push
pop
enter
push
lret
aam
sub
sti
lea
pop
sbbb
adc
stos
mov
cmpsb
out
sti
scas
fists
mov
jno
std
mov
and
call
outsb
gs
in
repnz
stc
rcl
arpl
mov
dec
mov
sub
cmpsl
int
out
mov
inc
dec
stos
mov
adc
ds
dec
incb
divb
dec
cmpsb
add
mov
mov
jno
mov
and
mov
test
adc
xchg
or
mov
or
mov
insl
cmp
sbb
sub
jb
sbb
pop
mov
dec
pop
jnp
mov
cmp
dec
mov
mov
fstl
and
pop
xor
dec
mov
aas
sbb
adc
push
movsl
xchg
or
int3
test
mov
int3
mov
ret
mov
out
or
sub
mov
insl
mov
adc
test
push
sbb
test
aam
xchg
mov
adc
rolb
out
cwtl
ret
sub
clc
add
iret
shrb
pusha
mov
das
adc
mov
jecxz
jmp
and
jecxz
mov
or
xor
adcl
mov
repnz
mov
pop
adc
or
dec
outsl
jae
sahf
hlt
mov
or
arpl
mov
push
xor
push
das
scas
cmp
and
cmpb
sub
pushf
mov
mov
andl
or
or
or
mov
or
sbb
mov
fmull
test
orb
xor
adc
shr
pop
inc
xor
in
test
lea
adc
int3
add
push
dec
dec
pop
xchg
dec
ret
fcompl
mov
lret
sub
add
scas
mov
and
adc
inc
xor
fistps
orb
push
mov
adc
mov
lods
lcall
jge
mov
sub
cmp
mov
enter
pop
or
popf
dec
aaa
out
push
push
cmp
mov
add
in
in
enter
shr
mov
lea
adc
sub
iret
rclb
mov
out
mov
adc
std
rorb
clc
or
cmp
fcompl
lods
in
insb
cwtl
dec
adc
ds
test
inc
xor
push
repnz
rorb
sub
ljmp
lea
pop
insb
adc
mov
or
lea
movsl
je
dec
aaa
in
rolb
sarb
pop
mov
or
cmp
push
xchg
test
and
mov
pop
dec
mov
pop
insb
cmp
imul
dec
sub
inc
jle
ss
mov
pop
popf
push
orb
adc
out
fsub
add
pop
xchg
pop
dec
jb
shr
or
js
adc
fsubrl
fdivrs
stos
push
sub
loop
test
cmpl
jns
outsb
cmp
in
fdivs
fmulp
mov
inc
sahf
movsl
fdivl
int3
test
inc
cmp
mov
mov
call
jmp
pop
test
popa
and
repz
and
scas
adc
jb
dec
ss
enter
fsubrs
out
jb
jg
pop
adc
aam
xchg
mov
lahf
shrb
sub
aaa
xchg
subl
and
mov
test
mov
aam
xor
mov
mov
xchg
mov
sbbb
stos
push
ret
xorb
lahf
jns
cltd
lock
adc
and
stos
or
sub
jnp
fimuls
pop
pop
sbb
and
and
fisubrs
xchg
mov
xor
jge
push
cmpsl
movsb
mov
mov
repnz
mov
scas
sub
add
mov
push
test
cmc
fcoms
sub
lret
inc
fists
movsb
jae
dec
subl
mov
cltd
sub
fisubrl
in
lcall
pop
or
adc
int
push
sbb
or
movsb
push
sub
and
test
pop
scas
out
mov
aam
xor
mov
adc
mov
fsub
pop
addb
cmp
mov
mov
clc
fs
ret
leave
add
inc
mov
test
sub
mov
adc
fwait
lcall
xor
cwtl
pop
xlat
xor
xchg
add
xchg
mov
cmp
xor
fwait
jae
pop
fisubrs
lahf
mov
les
pop
repnz
mov
shlb
lods
inc
dec
stos
mov
mov
xor
hlt
in
pop
fdivl
fdivrs
rolb
movsl
shlb
pop
aam
sub
pop
cmpsl
test
sbb
xchg
or
in
or
subb
mov
xchg
inc
iret
pop
mov
mov
shlb
data16
hlt
xchg
xor
adc
mov
mov
loop
iret
xchg
cmpsb
orb
jg
or
rolb
fdivl
divl
repnz
xchg
cwtl
mov
pop
pushl
movsb
repnz
mov
cmp
cmp
in
push
pop
rorb
xchg
or
rol
pop
and
bound
inc
push
xor
xchg
dec
mov
stos
mov
mov
inc
mov
add
lret
mov
enter
ret
sbb
xor
cmp
mov
cmp
mov
mov
rcl
cmp
aad
xchg
dec
into
ficompl
ret
mov
and
sbb
lods
adc
ret
movsl
add
or
call
test
and
dec
push
mov
cli
out
mov
adc
mov
loopne
cmpb
xor
jp
lods
loopne
mov
lahf
addl
test
int3
push
ljmp
cmp
stos
xchg
movsb
mov
mov
out
movl
mov
js
mov
loop
clc
hlt
sub
and
mov
add
mov
mov
xor
mov
stos
inc
popf
aaa
adc
pop
outsl
test
aad
mov
clc
arpl
mov
push
cwtl
sahf
nop
and
mov
sbb
push
in
mov
cmp
mov
in
adc
das
shlb
add
push
ljmp
test
mov
mov
loope
cmp
pusha
fcoml
fldenv
inc
or
jo
dec
pop
xor
sub
outsb
int
sub
add
mov
cmp
push
adc
repnz
das
dec
insb
popf
mov
test
sub
cld
sub
in
inc
movsl
fcmovbe
and
jb
add
clc
fidivrl
data16
adc
std
fnstcw
insb
pop
xor
in
cmpw
stos
test
fisubrl
gs
dec
rclb
lock
mov
fsts
mov
outsl
js
push
mov
test
pop
fwait
movsb
xor
dec
push
xchg
orb
adc
push
cmp
push
xchg
cmp
dec
lds
cli
fmull
mov
mov
data16
clc
popa
push
movsb
hlt
push
fdiv
jg
test
icebp
lret
dec
movsb
int
test
ret
imul
fstpt
mov
dec
sub
imul
lds
cmp
repnz
out
push
xchg
jp
dec
dec
mov
inc
rclb
pop
out
or
dec
cwtl
inc
rcr
dec
inc
add
sahf
sbb
push
rcrl
add
scas
sbb
sub
adcl
into
ljmp
popl
jno
xchg
sub
sub
rorl
pushf
lahf
lret
xor
mov
shll
aam
std
stos
test
fidivl
xchg
orb
push
aam
pop
or
movb
xor
test
xor
mov
aas
mov
cmp
adc
lods
fsubrl
or
push
sarl
mov
in
ljmp
fmull
xor
mov
fsubs
xor
lahf
mov
add
push
jae
sbbl
movsb
sbb
push
dec
sbb
out
sub
rolb
iret
rcrl
fstpl
lods
test
ss
int3
stos
scas
in
xlat
jge
adc
cmp
mov
mov
push
dec
cmp
add
mov
add
or
sbbb
mov
pushf
mov
cmp
mov
mov
ss
pop
scas
sar
push
int3
and
mov
mov
jmp
pusha
push
ds
shll
sbb
adc
adc
jmp
cmpsb
inc
xor
mov
mov
sub
stos
pushf
test
fwait
sbbl
aad
dec
or
aas
adc
das
scas
outsl
enter
mov
push
push
mov
std
mov
rol
std
shrl
sbb
push
popf
test
xor
loop
jecxz
gs
iret
out
cmpsb
cmp
ffreep
xchg
cs
push
stc
repnz
add
xor
imul
mov
push
pop
mov
and
mov
mov
dec
aad
mov
and
aas
adc
int3
lods
adc
push
cli
mov
dec
mov
sbb
mov
jne
push
mov
scas
repnz
adc
ja
int3
loope
push
out
outsl
out
fidivrs
enter
lret
sbb
xchg
lret
subb
or
jb
out
arpl
inc
popl
mov
mov
cmp
and
int3
adc
mov
movsl
insb
and
stos
xchg
xor
sbb
sbb
mov
aam
nop
das
dec
outsl
fwait
mov
adc
jae
and
ficoml
test
fnsave
stos
loope
mov
and
fs
loopne
out
mov
ss
or
loopne
imul
ds
lock
enter
sti
icebp
push
fimuls
fadds
mov
pop
out
and
mov
xchg
iret
mov
es
and
mov
sub
xchg
push
adc
pop
mov
shr
icebp
add
out
mov
dec
lods
jno
pop
xor
cwtl
push
into
push
lods
xchg
dec
push
adc
mov
sub
test
mov
and
lock
push
cltd
arpl
sub
xchg
lock
lods
sub
in
add
lret
fsub
dec
xor
outsb
push
cmp
stc
test
es
mov
test
mov
fdiv
jne
addr16
adc
pop
pop
das
fs
in
fiadds
mov
mov
push
loopne
outsb
sysenter
ljmp
lret
pop
pop
sub
inc
xorb
int
test
cmp
xchg
aad
sti
add
mov
lods
sub
xor
fsubrl
lods
stos
mov
movsb
data16
test
lahf
xchg
mov
test
push
out
test
adc
add
lea
scas
into
loopne
dec
xchg
inc
dec
arpl
mov
or
jbe
mov
sbb
cmp
leave
push
stos
and
mov
push
adc
stos
dec
add
out
xchg
int3
addl
fdivrl
lcall
adc
sbb
aaa
mov
loopne
fisubrl
loop
mov
lods
imul
popf
rol
cmp
and
or
and
fs
and
lret
roll
pop
add
int3
cmp
enter
and
jo
sbb
or
mov
stos
out
pop
pop
in
mov
mov
filds
fdivp
cmc
in
repz
mov
lods
into
rcr
mov
pusha
mov
into
dec
pop
inc
das
jecxz
sub
ret
pop
mov
in
jmp
cmp
mov
rclb
xchg
xchg
and
adc
mov
pop
xchg
mov
mov
xchg
dec
pop
lods
and
or
movlps
jp
test
in
sub
int3
mov
or
or
sbb
push
scas
pushf
cmpsl
mov
insb
mov
movl
lds
shlb
fsubs
mov
ds
int3
je
repz
mov
in
stc
test
add
jbe
nop
xorl
ds
mov
mov
push
xchg
cltd
int3
in
fsubl
in
pop
jae
iret
and
push
xlat
frstor
mov
ja
insb
add
xchg
movsb
or
pop
scas
push
and
mov
push
push
and
insl
xchg
shr
ret
cmp
iret
inc
in
roll
mov
loope
sbb
imul
add
xchg
lea
mov
enter
iret
adc
or
test
in
push
mov
ljmp
pop
mov
mov
add
dec
pushf
stos
addb
jnp
fsub
in
xor
adc
aas
mov
aas
shl
mov
out
or
jnp
jnp
jecxz
aas
shl
test
xchg
xchg
test
sbb
enter
lods
jnp
aas
mov
xor
mov
mov
push
dec
mov
jg
xor
fs
or
sub
mov
paddusb
fnstcw
fs
sub
fmul
cmp
and
inc
js
or
in
push
add
and
repnz
or
inc
mov
aas
push
or
adc
cwtl
jnp
fmull
into
push
push
rcl
loop
fdivrl
mov
addb
in
lret
ds
ja
movaps
mov
mov
mov
loopne
adc
mov
outsl
lret
ret
dec
sub
addr16
xchg
out
inc
add
fdivl
mov
inc
loope
mov
xchg
test
inc
orb
movsl
movsb
fsubs
jecxz
repz
mov
xlat
in
sbb
pop
sahf
mov
xchg
imul
movsb
lods
dec
bnd
pusha
mov
pop
xchg
or
adc
loope
je
pop
cmpsw
popa
push
les
sub
pop
or
inc
pop
pop
sub
sbb
ss
lret
jne
mov
mov
mov
jcxz
jmp
adc
pushf
repnz
mov
jo
repz
mov
movsl
into
adc
dec
mov
jb
insl
xor
pop
int3
outsl
sbb
sti
mov
fidivs
dec
xor
pop
mov
fs
fildl
rolb
adc
shrb
inc
cld
and
add
or
pusha
inc
mov
int3
cld
loop
cmp
fwait
adc
hlt
mov
leave
mov
add
or
in
es
sbb
das
mov
shrb
add
in
rorb
out
mov
call
mov
xorl
mov
out
cmpsb
in
outsb
mov
sbbl
mov
lcall
push
cwtl
inc
rorb
mov
add
adc
test
sbb
popf
pushf
mov
cltd
aad
sbb
lcall
scas
pop
sbb
lods
fcompl
test
faddl
test
jg
and
jl
sbb
add
xor
mov
sbbl
xor
cwtl
inc
aaa
mov
loop
pop
sarl
movsl
loop
fcoml
pop
decl
lcall
mov
push
mov
repnz
or
push
xchg
mov
jmp
mov
adc
mov
mov
gs
test
sub
adc
int
xor
in
fsubrl
mov
dec
cmpsb
fmuls
mov
jle
push
sbbb
pop
rorl
sub
lods
fcmove
pushf
mov
mov
movsb
xchg
shlb
cmp
mov
add
or
mov
mov
inc
mov
add
mov
and
jp
xchg
push
xchg
mov
or
addb
shrb
add
mov
mov
mov
pand
add
or
repz
jo
dec
mov
leave
test
mov
or
sub
das
jmp
adc
lea
imul
xor
jg
mov
leave
or
xchg
enter
dec
jns
sub
sbb
test
and
cmpsl
push
jb
sub
jl
xor
movsl
and
lcall
shl
pushf
jle
mov
cmp
pop
stos
sbb
mov
dec
xchg
sbb
xchg
and
in
and
movsb
lods
add
sbb
cmp
mov
fstp
test
push
fisttpll
and
add
cmpb
sahf
cmp
pop
enter
dec
or
inc
subb
fisubs
rclb
cli
pop
movsb
sbb
dec
dec
inc
push
cmp
inc
mov
lcall
add
sti
enter
fdivrl
push
out
or
or
mov
sub
subb
cmpsl
icebp
cmp
xor
xlat
fwait
mov
shl
cli
gs
xchg
adcl
mov
dec
adc
sub
jb
xchg
rcl
add
cmp
and
jecxz
cmp
loopne
int
push
cmpsl
out
dec
inc
in
sbb
aas
push
inc
lea
hlt
sarb
aam
pusha
inc
in
das
inc
mov
aam
into
mov
dec
jne
and
jge
xchg
gs
pop
in
xchg
push
inc
dec
je
daa
int3
jmp
mov
enter
dec
mov
xorl
and
outsb
cmp
in
leave
fdivrl
loop
jno
andb
fdivrl
lret
sbb
aaa
fistl
insl
push
punpckhwd
push
mov
out
lods
inc
mov
add
pushf
jne
mov
movsb
pop
mov
jmp
mov
lcall
out
inc
test
mov
test
sahf
jnp
xor
loop
repnz
lods
mov
mov
or
in
int3
adc
xchg
jmp
pop
iret
xor
mov
ss
sbb
test
add
inc
push
and
rolb
mov
inc
lret
push
outsl
xchg
mov
or
stc
lods
mov
in
dec
mov
lret
cmc
cmp
movsb
jp
mov
nop
mov
mov
xchg
rclb
lods
jo
mov
mov
and
sub
sub
test
jl
call
mov
sub
add
call
inc
jp
and
stos
test
loop
mov
jae
mov
mull
lods
cmp
shrb
notb
roll
add
scas
mov
lods
out
push
icebp
repz
mov
xchg
mov
fiadds
sub
sub
ret
mov
or
pop
pop
out
and
ret
mov
cmp
push
fcoml
fwait
mov
test
xchg
push
sub
les
fiaddl
iret
or
int3
cmp
rcll
cmp
xorl
ja
rolb
test
mov
sub
das
push
mov
xchg
ja
adc
in
cmp
pop
or
mov
sub
lahf
repnz
arpl
ds
xchg
and
psadbw
cmp
mov
adc
push
imul
ret
sub
enter
and
mov
mov
ljmp
mov
fsubl
leave
or
pop
lret
cmp
mov
xchg
sbb
push
push
fimuls
add
cli
sbb
imul
xor
fld
pop
shlb
pop
mov
add
dec
out
outsb
cmp
ljmp
outsb
jmp
push
sub
repz
mov
out
push
push
xchg
mov
outsb
sub
cmp
pop
mov
and
ljmp
xchg
sub
subb
xchg
sub
std
test
dec
cwtl
sbb
scas
sbb
inc
les
push
repnz
lahf
push
xchg
xchg
dec
inc
stc
push
out
fimull
scas
and
test
fmuls
mov
jmp
bound
mov
rorl
inc
mov
into
ja
inc
mull
call
repnz
mov
sbbl
in
ja
cmp
xchg
lds
mov
shlb
inc
in
aam
sub
fsubl
adc
adc
out
insl
repz
push
cmp
or
loopne
jbe
imul
lods
mov
addl
and
add
das
xor
adc
sti
test
int3
pusha
pop
scas
imul
lret
inc
sahf
aaa
sbb
and
imul
mov
pop
lods
test
lcall
sub
and
inc
cltd
mov
xor
lcall
rolb
mov
mov
jnp
mov
sahf
repz
mov
test
cwtl
adc
pusha
adcl
subb
cli
test
cmp
cmp
sub
dec
push
loope
cmp
jns
scas
ret
jb
pop
mov
cmp
push
sub
and
adc
repz
dec
inc
stos
mov
out
cmpb
or
xchg
dec
jno
shll
mov
std
popf
movsb
hlt
popa
repnz
pop
xor
insb
or
cmp
out
or
adc
scas
xor
cmpsl
std
push
imul
fsubl
aas
gs
pop
xchg
mov
bnd
add
fimull
lcall
lret
jg
fidivrl
lods
out
pop
test
test
lret
add
jmp
sar
insb
sub
cli
mov
mov
popf
out
aas
mov
mov
aam
sub
outsb
mov
scas
enter
sub
hlt
xchg
scas
and
fcmove
out
sub
mov
add
cmp
ret
out
fiadds
mov
xchg
dec
ljmp
inc
xchg
dec
call
loopne
rclb
sbb
adcl
or
cmp
dec
cmp
mov
mov
or
out
mov
dec
in
dec
into
js
insl
dec
cld
adc
cmp
mov
sbb
lods
int3
mov
repnz
add
cli
movsb
dec
jns
add
xchg
pusha
gs
mov
add
lock
and
mov
sahf
lcall
aad
or
outsl
sub
cmp
add
jge,pn
dec
mov
mov
push
or
mov
stos
orb
scas
out
add
pushf
mov
stc
addl
sbb
repz
lods
std
call
sbb
sarb
fistpl
rcrb
pop
adc
rcrb
or
mov
dec
test
dec
push
aam
mov
cmp
cltd
jmp
arpl
bound
pavgw
dec
dec
sub
xor
test
jbe
or
xorb
mov
out
andl
out
dec
add
and
stos
cmpsb
sub
movsl
sub
cltd
in
test
fisubl
cwtl
mov
dec
cmpsl
sti
sbb
bound
insl
popf
movsl
les
scas
cwtl
dec
sbb
test
scas
shrb
mov
dec
sub
andb
jno
fidivl
fsts
ficompl
xchg
loopne
push
push
outsb
or
or
lods
and
and
mov
cmpsl
cmp
sbb
inc
jecxz
dec
cld
popf
cmp
push
aas
cltd
repnz
scas
lcall
or
lcall
icebp
xor
cld
mov
hlt
xchg
stos
dec
mov
in
mov
adc
test
xchg
mov
aam
mov
xor
stos
leave
pop
sub
stos
cmpsb
dec
cmc
lret
subb
sub
push
js
cmpsl
and
ljmp
sub
xor
sub
das
test
stos
pop
push
jo
sbb
push
mov
or
mov
xchg
enter
cmp
mov
lret
dec
push
cs
fcmovb
mov
add
mov
cmp
data16
jnp
ret
lret
arpl
inc
jl
and
add
xchg
call
repnz
gs
dec
dec
mov
fcomi
adc
movsb
repnz
clc
repz
pop
add
sub
cmp
test
lcall
in
lods
or
movsl
xor
mov
xor
dec
cmp
test
inc
jge
pop
mov
lds
and
mov
cmp
cmp
xchg
mov
pop
add
divl
mov
mov
cmp
cmp
arpl
sub
or
mov
mov
cmp
fs
mov
pushf
mov
rcl
sbb
sbb
lock
in
lods
jno
jle
aam
mov
leave
mov
mov
inc
clc
push
lret
repnz
mov
and
lret
mov
xor
pushfw
aam
fisttps
gs
cmp
xchg
push
in
movsl
movsb
sub
mov
popf
test
push
lcall
dec
imull
lret
or
adc
add
outsb
mov
xchg
sub
adc
adc
sbb
movsb
loop
jae
xchg
ljmp
aam
pop
pop
test
or
into
mov
andl
or
push
xor
or
or
fxtract
inc
cs
test
xor
int3
sub
pop
and
pop
enter
xlat
jmp
and
loopne
mov
movsb
adc
sub
cmp
lods
jmp
repz
hlt
test
mov
xorb
outsb
into
xor
in
outsb
movsl
add
daa
cltd
push
or
jb
loop
sub
in
mov
xchg
and
test
cmpsl
pushf
dec
pop
mov
xor
fisubrl
jbe
cmp
push
mov
mov
icebp
cmp
aaa
adc
lret
dec
sbb
orb
xchg
scas
jle
push
pop
hlt
inc
add
ret
push
and
insl
jp
mov
lods
pop
lods
cmpsl
or
jecxz
mov
mov
add
xchg
or
lods
icebp
cs
mov
shlb
jbe
ror
mov
dec
lock
or
jg
sbb
dec
xorl
or
add
jecxz
cmp
ret
stos
lcall
test
jbe
rorl
rcl
test
aaa
dec
push
es
daa
pusha
inc
stos
hlt
cld
lods
inc
insl
scas
sub
push
out
sarb
xchg
push
imul
xor
xor
test
adc
push
or
jbe
dec
lcall
dec
popa
je
inc
jge
cmp
jnp
out
or
jae
sub
test
fmull
fdivr
and
mov
mov
mov
inc
xchg
mov
in
pop
je
inc
mov
repnz
or
jbe
xchg
or
push
push
daa
std
mov
add
jne
or
ljmp
xchg
addb
add
inc
fs
inc
aaa
push
test
xor
sbb
lea
push
mov
divl
inc
dec
pushf
test
xchg
call
sbb
int3
ss
rol
jo
test
jae
mov
adc
mov
or
xor
mov
mov
xor
mov
sbbl
inc
movsb
es
rol
addl
push
and
push
mov
xlat
std
imul
sbb
pop
sub
jge
incb
cs
cmp
pop
mov
pop
xor
loopne
popa
inc
test
sahf
pop
lods
push
movsb
cltd
lcall
ja
sti
jne
pop
sub
notb
mov
mov
movsl
mov
cmovns
sbb
mov
fwait
push
adc
mov
bound
jecxz
mov
pop
in
testb
out
add
xchg
add
cmp
cmp
pop
dec
or
and
sbb
and
cmp
movsl
movsb
cmp
hlt
mov
daa
dec
aam
or
and
adc
aam
in
cld
pop
ljmp
xor
pop
push
jecxz
fsubrs
jl
mov
mov
mov
jae
xchg
std
pop
cmp
sbb
mov
lock
insl
out
stc
into
mov
jge
test
aaa
out
mov
mov
popf
inc
shlb
push
fcomi
testb
lea
imul
lods
mov
pushf
cli
mov
repnz
into
mov
ret
adcb
scas
dec
mov
test
pop
fidivs
mov
dec
jbe
mov
xor
jnp
int3
lahf
dec
mov
clc
pop
pop
cmp
cmc
xor
je
cwtl
hlt
test
fcomi
test
cwtl
mov
adc
mov
push
ja
mov
sub
call
mov
test
inc
mov
iret
dec
inc
mov
movsb
add
int3
mov
cmp
dec
sbb
dec
push
mov
scas
int3
push
pop
push
sub
ret
andb
scas
lahf
mov
cmp
add
xor
je
or
loopne
clc
negb
dec
push
mov
cs
mov
fs
lret
or
sbb
shrb
addb
pop
lahf
lcall
stos
mov
ror
push
xchg
in
mov
push
xchg
cmpl
aam
mov
cmc
jle
xchg
fisttpl
repz
outsb
mov
enter
or
sbbl
jbe
into
mov
jbe
int3
out
sbb
enter
notb
rorb
sub
sti
xor
pop
dec
push
pand
lret
mov
cli
add
jne
popl
orb
test
xchg
mov
stos
add
mov
mov
outsl
shlb
idiv
jp
testb
sub
or
add
dec
ljmp
fsts
jg,pt
mov
repnz
mov
add
enter
scas
sbb
lcall
or
mov
jp
or
rcrl
sahf
mov
ja
pushf
push
mov
jbe
enter
test
push
roll
in
mov
cs
in
mov
movsl
jbe
mov
mov
aaa
ja
mov
stos
adc
shrb
mov
xchg
lea
adc
test
pop
hlt
mov
mov
push
test
mov
push
testl
adc
test
std
xchg
pushf
sbbb
mov
adc
test
test
stos
mov
stos
mov
ror
add
cli
xchg
pop
mov
jg
mov
stos
cmp
stos
add
jno
push
in
sarb
or
mov
mov
mov
nop
sub
mov
push
test
lock
mov
add
push
add
fs
imul
inc
xor
mov
dec
mov
das
data16
or
cmpsb
sbb
cmp
mov
loop
mov
pop
and
in
mov
test
sbb
loopne
sti
mov
cmp
dec
sub
shrb
aaa
push
push
xchg
mov
daa
les
pop
scas
and
mov
fidivs
xchg
push
testl
pop
mov
into
xchg
push
push
mov
stos
mov
fisttps
jnp
sbb
pop
push
add
insl
cmp
mov
cmp
sbb
sahf
hlt
insl
mov
cmpsb
inc
loopne
insl
jne
ljmp
jns
ret
das
cmc
dec
jo
mov
add
sbb
gs
dec
inc
cltd
arpl
out
sbb
aas
sar
jbe
enter
cmc
mov
imul
cmp
and
mov
jle
jmp
lahf
add
mov
pop
into
loopne
loop
cmp
scas
push
mov
mov
cmp
ret
cmpl
jle
stc
or
test
dec
mov
add
pop
fcoms
dec
or
xlat
pop
jae
jne
dec
out
orb
call
adc
daa
mov
lcall
or
mov
fs
int3
and
cmpsl
jbe
mov
rcr
dec
sub
sub
call
lods
mov
sbb
shl
aad
fmull
test
mov
mov
lds
mov
decl
clc
pop
in
cmc
ss
enter
ficoms
lcall
xchg
inc
cld
mov
ret
inc
inc
decb
lcall
cmp
jmp
rolb
gs
xchg
int3
in
loop
xorl
jg
hlt
shrb
incl
sub
sarl
or
xorl
les
adc
pop
popl
push
ret
js
mov
or
sub
jl
or
jg
les
setno
int
xchg
or
push
jecxz
subl
cmpsl
roll
out
jnp
lret
pusha
stc
add
in
adc
movsb
pop
sub
stos
mov
mov
mov
out
xor
and
int
xchg
lds
call
xor
xchg
repz
cli
cmpsb
fcompl
ret
fidivrs
mov
movsl
jae
addr16
cwtl
inc
add
xor
cltd
mov
mov
add
inc
rcl
xorl
notb
adcl
test
mov
hlt
mov
bnd
jg
or
inc
sub
pop
xor
pop
movsb
outsb
push
dec
or
mov
and
ret
jnp
fimull
pop
pop
adc
iret
sbb
sub
mov
les
shlb
mov
movb
rorb
dec
mov
jp
cli
out
sub
jg
es
add
je
idiv
ret
mov
in
mov
roll
loop
mov
scas
jge
pushf
fmuls
mov
push
or
test
xchg
push
cmc
xchg
icebp
mov
leave
sbb
pop
mov
pop
pop
mov
insl
pushl
jo
lods
je
call
or
mov
jl
test
lahf
mov
stos
inc
cli
test
enter
cmp
in
inc
lods
inc
and
push
cs
lock
and
ret
cmc
push
mov
cmp
cmpsb
jne
testl
push
push
fcomps
xchg
fdivrl
jge
xchg
xor
mov
mov
sub
clc
cmp
pop
paddusw
sub
xchg
in
rclb
in
sub
mov
cld
pop
notb
sub
clc
les
mov
je
cmp
pop
scas
addr16
repnz
mov
lods
js
or
sti
sarb
add
mov
addl
mov
add
mov
add
stc
mov
shlb
add
cwtl
jecxz
decb
pushf
or
mov
sub
pop
loopne
sub
stos
dec
rorb
mov
xchg
das
cmp
mov
dec
cmpb
xor
adc
scas
sbb
leave
jle
or
add
pop
xor
mov
dec
mov
int3
sub
add
adc
dec
ret
inc
mov
nop
and
scas
pop
xor
and
mov
scas
negb
xchg
lock
scas
out
push
inc
in
into
jecxz
scas
sbb
lret
push
inc
lret
imul
loop
fsubrl
in
imull
adc
cmp
out
push
ds
mov
leave
mov
mov
outsl
mov
adc
and
jmp
sbb
sahf
stos
add
fisubs
ret
clc
mov
inc
mov
daa
jge
dec
sbb
call
movsl
dec
mov
cmovle
ljmp
mov
cs
push
mov
aad
test
sbb
pop
repnz
inc
in
lcall
add
ja
and
stc
push
xor
stos
pushf
jmp
mov
lcall
jle
aam
fwait
incb
jg
mov
addl
icebp
aam
cld
sub
arpl
mov
movsl
hlt
add
fwait
ret
enter
dec
push
shl
jnp
jb
xor
daa
orl
fwait
in
mov
jle
xchg
mov
or
xchg
mov
imul
dec
inc
adc
mov
mov
fs
or
and
insl
push
mov
mov
fdivrs
dec
or
mov
out
adc
adc
xchg
fnsave
in
leave
sub
mov
mov
mov
incl
inc
aam
mov
xor
mov
mov
shrl
or
fiadds
mov
fdivl
cs
mov
imull
push
push
clc
dec
sahf
andb
mulb
adc
scas
inc
movsl
int
push
lock
je
mov
repz
mov
lea
jle
lods
cmp
xchg
jo
scas
push
mov
lret
mov
xor
mov
repz
dec
cmp
mov
adc
insb
sub
cmp
cmp
mov
inc
cmp
mov
fnsave
andb
stos
sbb
and
or
icebp
loope
icebp
xlat
sbbl
mov
loop
insb
mov
call
and
and
jmp
cmp
pmulhw
aaa
jge
lcall
mov
and
das
sub
mov
lds
pop
or
shlb
int3
mov
add
mov
push
stos
mov
or
insl
je
mov
aam
mov
jne
sbb
xor
mov
cmp
lods
in
mov
loop
movl
sahf
cmc
add
or
adcb
push
test
mov
data16
test
dec
pop
xchg
xor
sub
aas
or
cld
mov
mov
sub
push
lret
pushf
cli
adc
shlb
pop
cld
stos
shlb
ss
loope
or
test
push
push
into
repnz
sbb
sub
adc
lods
lcall
mov
lcall
add
out
sub
or
and
filds
cmpsb
iret
rcr
int3
push
inc
lea
dec
xchg
mov
mov
inc
mov
lods
imul
pop
or
cmp
mov
test
add
xchg
imulb
out
push
or
inc
mov
or
aaa
mov
out
mov
out
or
out
mov
out
mov
out
or
out
or
out
shlb
test
loope
incb
adc
leave
arpl
repz
mov
out
wbinvd
adc
in
dec
lahf
cld
mov
dec
inc
jge
popf
inc
ret
pushf
es
mov
lea
cmp
test
mov
mov
mov
or
aad
adc
sbb
ljmp
mov
xchg
into
arpl
mov
cmpb
in
inc
repnz
test
xor
adc
and
mov
xchg
mov
jge
cmc
push
rcr
les
outsb
pop
dec
in
xorb
repz
shrb
cmp
mov
mov
mov
rolb
add
popa
sub
dec
or
gs
jmp
jge
mov
in
mov
or
inc
rcl
mov
xchg
test
fmull
test
add
movsb
int3
aam
sub
sub
mov
or
int3
inc
data16
jmp
lock
mov
pop
scas
mov
mov
xchg
cmpsl
into
stos
mov
inc
inc
cmc
cld
cmp
sub
cmp
mov
or
adc
cmp
ret
adc
js
fmuls
and
int3
in
std
mov
iret
leave
xchg
or
mov
into
mov
addr16
js
out
or
cmp
ret
test
mov
in
shrl
stos
fidivl
mov
cmpsb
mov
mov
lcall
aad
xchg
in
pop
ret
jle
lods
mov
adcl
mov
inc
sub
adc
subb
dec
mov
inc
movl
dec
mov
mov
mov
xor
fnstsw
push
cwtl
pop
cmp
xor
out
jo
imul
in
sti
repz
arpl
or
jnp
cmp
into
int3
cmpb
mov
mov
mov
das
pmulhuw
mov
ret
mov
in
int3
mov
stos
les
orb
lods
in
aaa
sub
mov
test
ficoml
bnd
pop
arpl
shr
and
jns
in
mov
cmp
mov
lds
mov
sti
pushl
pop
fcmovnbe
mov
push
xor
sbb
imul
hlt
adc
imul
push
adc
andl
and
adc
pop
jbe
cmp
shlb
pop
mov
mov
adc
adc
inc
popa
xorl
and
cmp
call
push
pushf
popl
jmp
mov
call
pushf
rol
call
pushl
mov
jmp
pushf
mov
movb
call
pushf
not
jmp
call
dec
jmp
push
call
mov
jmp
pusha
pushf
not
push
pushf
mov
mov
dec
stc
mov
jmp
stc
jmp
pushf
mov
call
call
pushf
mov
pushf
mov
pushf
mov
movb
lea
jmp
dec
clc
bt
bswap
stc
bt
neg
movb
movb
lea
jmp
jmp
dec
stc
jmp
not
mov
dec
clc
mov
mov
bswap
cmp
neg
mov
movl
mov
pushf
lea
jmp
test
movw
push
not
call
dec
dec
shl
mov
ror
dec
bt
mov
clc
sub
call
mov
pushf
movb
mov
lea
jmp
pushl
popl
push
pushf
lea
jmp
stc
jmp
cmc
pushf
add
pusha
call
aad
mov
add
mov
cmp
sub
bt
push
mul
push
mov
call
call
sar
bswap
movzbw
mov
bts
stc
sub
rcr
mov
pushf
stc
cmp
clc
add
call
pushf
inc
stc
pushl
call
pushl
mov
jmp
clc
neg
pusha
lea
jmp
pusha
jmp
xor
pusha
pusha
jmp
stc
pusha
call
pusha
stc
jmp
pushf
call
mov
jmp
rcl
sar
shl
mov
clc
rol
jmp
pushl
pushf
lea
je
pushf
cmc
mov
not
mov
call
jmp
cmp
mov
pusha
sub
call
jmp
mov
pushf
lea
jmp
pushf
dec
pushf
test
bt
push
bswap
pushl
movw
pushf
neg
push
pushl
movb
push
lea
jmp
mov
call
stc
shr
stc
bts
lea
test
call
lea
lea
mov
call
sub
jmp
push
mov
push
movb
pushf
lea
jmp
pushl
call
cwtl
stc
bt
sub
mov
mov
mov
movl
mov
lea
jmp
mov
cmp
cmc
cmc
sub
lea
jl
pushf
mov
mov
movb
pushf
movw
lea
jmp
pushf
shr
jmp
pusha
mov
pushf
lea
jmp
sub
jmp
jmp
pushf
mov
push
mov
pushf
jmp
aaa
daa
mov
setne
clc
mov
pusha
mov
cmc
push
lea
jns
add
call
mov
mov
pushf
pushl
pushl
pusha
pushf
popl
call
movw
bswap
xchg
pushf
popl
pop
bswap
inc
bswap
xchg
call
push
pushf
call
mov
movw
pushf
push
push
lea
jmp
jmp
bts
cmp
mov
shl
dec
mov
stc
add
call
call
bswap
pop
push
pushf
push
pushl
ret
pushf
popl
jmp
pusha
pushf
rol
bt
jmp
lea
jge
mov
push
pushf
movw
pusha
lea
jmp
mov
not
jmp
call
inc
bswap
jmp
call
seta
xchg
mov
or
sbb
setg
mov
bt
pushf
clc
pusha
sub
bt
shl
pushf
mov
pushf
pushf
popl
pushf
mov
call
pushl
popl
pusha
pushf
mov
lea
jmp
add
pusha
pusha
movw
lea
jmp
xchg
inc
movzbw
movl
mov
movsbw
push
jmp
xchg
mov
lea
mov
push
movb
divl
pusha
call
pushf
mov
mov
pushf
pushf
lea
jmp
add
movb
push
call
pushf
popl
call
push
inc
push
cmc
xor
pushf
pusha
mov
inc
pushf
clc
bt
rol
mov
cmc
add
cmp
push
stc
push
xor
call
movsbl
movl
pop
pusha
movzbl
mov
push
not
call
pushl
push
pushl
popl
pushl
movb
lea
jmp
movb
dec
pushf
stc
cmc
sub
jmp
movb
jmp
jmp
movsbw
mov
cmp
pusha
add
movb
pusha
mov
call
bswap
jmp
cmc
stc
rol
movl
add
jge
add
stc
test
xor
pusha
cmc
bt
cmp
cbtw
pusha
movb
pushf
cwtl
sub
ja
pushf
stc
stc
sub
pushf
movb
call
shld
mov
not
pusha
inc
add
sete
pushf
mov
jmp
in
popa
push
lods
test
lock
popa
push
mov
insb
popa
push
lods
test
sub
popa
push
cmp
popa
push
push
movsl
popa
push
pop
cmpsb
popa
push
repnz
popa
push
js
popa
push
mov
outsb
popa
push
cmpsb
jne
push
cmpsb
jne
push
cmpsb
jne
push
cmpsb
jne
push
cmpsb
jne
push
cmpsb
jne
push
cmpsb
jne
push
cmpsb
jne
push
movsb
xchg
popa
push
movsb
xchg
popa
push
movsb
xchg
popa
push
movsb
xchg
popa
push
movsb
xchg
popa
push
movsb
xchg
popa
push
movsb
xchg
popa
push
movsb
xchg
popa
push
stos
mov
popa
push
gs
push
inc
jp
push
lock
popa
push
pop
xchg
popa
push
mov
outsb
popa
push
in
popa
push
in
popa
push
dec
fs
push
bound
popa
push
inc
jp
push
cmpsb
xchg
popa
push
dec
fs
push
hlt
arpl
bound
popa
push
js
popa
push
xor
push
mov
xchg
popa
push
dec
pop
popa
push
js
popa
push
lods
test
gs
push
inc
movsl
popa
push
add
push
gs
push
add
push
cmpsb
xchg
popa
push
cmp
popa
push
mov
xchg
popa
push
outsb
addr16
push
cmpsb
xchg
popa
push
rolb
popa
push
cmp
popa
push
inc
jp
push
inc
jp
push
push
insb
popa
push
fisubl
push
and
hlt
arpl
ljmp
push
pop
xchg
popa
push
pop
xchg
popa
push
hlt
arpl
add
push
dec
pop
popa
push
push
cmpsl
popa
push
dec
xchg
popa
push
cs
popa
push
jle
popa
push
cli
andl
scas
xchg
popa
push
push
popaw
push
cs
popa
push
dec
pop
popa
push
rolb
popa
push
dec
pop
popa
push
gs
push
cmpsb
xchg
popa
push
in
popa
push
pop
popa
push
add
push
cli
popa
push
imulb
push
add
push
andb
push
stos
mov
popa
push
inc
jp
push
fisubl
push
dec
arpl
outsb
jle
push
jle
popa
push
hlt
arpl
jle
popa
push
jle
popa
push
mov
push
push
arpl
scas
stos
popa
push
inc
jp
push
xorb
stos
mov
popa
push
dec
xchg
popa
push
lock
popa
push
gs
push
mov
gs
push
repnz
popa
push
sub
popa
push
outsb
addr16
push
cmpsb
xchg
popa
push
dec
fs
push
push
insb
popa
push
add
push
cmp
popa
push
pop
xchg
popa
push
dec
xchg
popa
push
cmpsb
jne
push
cmpsb
jne
push
cmpsb
jne
push
cmpsb
jne
push
cmpsb
jne
push
cmpsb
jne
push
cmpsb
jne
push
cmpsb
jne
push
movsb
xchg
popa
push
movsb
xchg
popa
push
movsb
xchg
popa
push
movsb
xchg
popa
push
movsb
xchg
popa
push
movsb
xchg
popa
push
movsb
xchg
popa
push
movsb
xchg
popa
push
fisubl
push
xor
push
js
popa
push
dec
pop
popa
push
bound
popa
push
push
insb
popa
push
outsb
jle
push
cmp
popa
push
add
push
add
push
mov
andb
xchg
popa
push
dec
fs
push
cmp
popa
push
and
jle
popa
push
mov
insl
popa
push
fisubl
push
repnz
popa
push
cmp
popa
push
add
push
scas
stos
popa
push
xorb
pop
xchg
popa
push
cli
andl
cmp
popa
push
mov
imul
gs
push
push
stos
popa
push
inc
jp
push
pop
cmpsb
popa
push
mov
imul
mov
push
and
lock
popa
push
mov
push
inc
pop
popa
push
inc
movsl
popa
push
mov
gs
push
outsb
jle
push
js
popa
push
and
inc
pop
popa
push
inc
pop
popa
push
inc
pop
popa
push
andb
push
dec
xchg
popa
push
dec
fs
push
scas
xchg
popa
push
andb
push
hlt
arpl
cli
andl
pop
cmpsb
popa
push
and
imulb
push
xor
push
repnz
popa
push
in
popa
push
mov
outsl
popa
push
stos
mov
popa
push
cs
popa
push
js
popa
push
fisubl
push
pop
xchg
popa
push
push
test
stos
mov
popa
push
ljmp
push
mov
mov
cs
popa
push
gs
push
gs
push
pop
popa
push
pop
popa
push
cs
popa
push
cmp
popa
push
in
popa
push
xor
push
sub
sbb
add
aas
pop
add
movb
pushf
mov
pushl
mov
bsf
mov
lea
bsr
push
not
push
mov
mov
jmp
call
pusha
push
add
pushf
jmp
pusha
movw
push
mov
pushf
pushf
pushf
lea
jmp
call
pushf
xor
call
bswap
lea
call
mov
pushf
jmp
clc
rol
call
inc
not
bswap
dec
bsr
dec
bt
bswap
shl
neg
rcr
bts
test
pushf
sub
shl
lea
xor
sub
lea
shl
mov
not
mov
btr
bsf
btc
rcl
add
shrd
mov
rol
shld
ror
shl
xor
pusha
dec
dec
dec
movsbw
pushf
movsbw
dec
clc
bswap
movsbl
bswap
ror
sub
not
bsf
ror
neg
bsf
sub
mov
jmp
mov
mov
pushl
ret
not
call
jmp
jmp
bsr
dec
mov
pusha
mov
cmp
pushf
cmp
sub
pusha
shr
movb
movb
jmp
aam
rol
adc
notl
or
setge
not
aas
mov
bt
stc
jmp
xor
push
jmp
pushf
dec
clc
rol
mov
test
sub
pushl
jmp
pushf
mov
mov
pushf
push
call
dec
bt
clc
bswap
bt
neg
push
pushl
pushf
push
lea
jmp
jmp
jmp
bswap
cmc
push
btr
mov
cmp
sub
call
cmc
cmc
neg
mov
mov
mov
lea
jmp
pushf
call
sub
pushf
mov
pushl
pushf
pushf
lea
jmp
movb
dec
lea
ja
stc
cmp
clc
bswap
call
pushf
call
cwtl
cmp
movb
stc
sub
push
call
movl
pushf
pushf
push
mov
jmp
pushl
jmp
and
jl
pusha
movw
pushf
popl
push
pushl
popl
mov
lea
jmp
call
btr
call
pushl
popl
pushf
lea
jmp
movw
call
daa
bswap
mov
cmp
mov
jmp
mov
pusha
mov
lea
jmp
dec
test
bswap
push
mov
neg
mov
pushl
mov
pushf
lea
jmp
pushf
pushf
pushf
pushl
popl
mov
mov
push
lea
jmp
call
pushf
mov
call
test
sub
call
pushf
mov
pushf
popl
call
pusha
mov
pushl
lea
je
push
pusha
push
pushf
popl
jmp
xor
movzbl
call
sub
pushf
not
push
pusha
inc
call
jmp
jmp
mov
pusha
mov
pushl
jmp
mov
jmp
push
pushf
add
stc
stc
stc
pushl
sub
pushf
dec
cmc
call
pushf
call
daa
mov
dec
neg
bsr
adc
mov
call
jmp
pushl
popl
push
movb
lea
jmp
not
call
or
shl
mov
pusha
stc
stc
cmc
bswap
clc
jmp
pushf
cbtw
test
cmc
call
add
pushf
test
pushl
popf
pusha
lea
jmp
inc
stc
rol
movw
mov
pushf
pushl
ret
mov
mov
pushf
popl
pushf
jmp
dec
bsf
mov
cmc
pushf
movb
mov
pusha
pushf
cmc
sub
cmp
jmp
push
pushf
mov
mov
pushl
pushf
movzbw
mov
xchg
xchg
movzbw
pushf
popl
pop
mov
call
call
push
mov
lea
jmp
rcl
movzbw
mov
mov
add
mov
call
pusha
jmp
dec
stc
bswap
movb
neg
pushf
push
push
lea
jmp
btr
mov
shl
and
bt
mov
adc
not
mov
jmp
jmp
push
mov
pushf
mov
pushl
mov
lea
jmp
pushf
pushl
pushl
mov
jmp
bsf
movl
movzbw
mov
call
jmp
bt
cmc
stc
add
cmp
mov
jmp
call
call
mov
bswap
movw
bsf
movsbw
mov
bsr
setge
bsr
mov
xchg
pushf
movl
not
mov
mov
call
jmp
pushf
mov
push
jmp
pusha
push
pushf
popl
pushf
jmp
ror
pusha
lea
cmp
test
cmc
cmp
add
pushl
call
pusha
mov
pushf
mov
push
pushf
pushl
mov
pusha
mov
pushf
push
mov
lea
jb
pushf
pushf
pushf
pushf
popl
call
jmp
sub
push
mov
pusha
pusha
movb
mov
lea
jmp
test
xor
movsbw
mov
inc
xor
inc
btr
not
sub
neg
movzbw
setp
sets
movzbw
not
bswap
dec
add
bsf
not
btr
xor
dec
mov
test
test
push
cmp
add
cmc
pushf
bt
mov
push
stc
sub
movl
push
pusha
push
lea
jmp
call
rcr
rol
pushf
mov
jmp
call
jmp
pushl
popl
push
push
lea
jmp
pushf
not
jmp
bt
bsr
rdtsc
mov
sar
mov
mov
mov
clc
test
push
test
add
push
shld
jmp
push
pusha
stc
sub
push
add
call
mov
mov
pusha
lea
jmp
mov
pusha
pusha
lea
jmp
dec
jmp
jmp
not
mov
jmp
mov
lea
jl
pushf
pop
pop
jmp
mov
push
lea
jmp
pusha
decl
jmp
movzbw
mov
inc
pushl
mov
inc
jmp
pushf
mov
mov
movb
lea
jmp
call
cmc
neg
pushl
lea
jmp
rep
cmc
cmc
btc
mov
cmc
shld
mov
cmc
pushf
pushl
popf
push
push
lea
jmp
call
xor
movb
jmp
xchg
pop
call
call
jmp
shr
push
clc
mov
xor
pushf
xor
pusha
mov
lea
jmp
pushl
mov
push
movl
pushf
mov
movw
jmp
call
mov
mov
dec
stc
not
bt
bt
call
pushf
not
test
bt
mov
pushf
neg
pushf
movb
not
lea
jbe
dec
clc
cmc
push
pusha
xor
movb
bt
test
bt
mov
bt
bt
call
mov
jmp
pusha
pusha
push
mov
mov
mov
push
lea
jmp
push
mov
call
mov
mov
mov
lea
jmp
movb
pushl
mov
pushf
lea
jmp
mov
pushf
mov
lea
jmp
neg
mov
movb
mov
bt
sub
cmc
stc
shl
call
aaa
lea
pusha
add
mov
pushf
cmc
movb
cmc
add
mov
call
movb
bswap
call
pushf
mov
jmp
pushl
popl
mov
movw
pushf
mov
lea
jmp
pushf
not
pusha
push
jmp
mov
mov
jmp
pusha
movb
pushf
mov
call
mov
pushf
mov
lea
jmp
call
pusha
push
not
mov
dec
push
bswap
pushf
push
cmc
pushf
neg
movb
lea
jmp
pushf
call
call
jmp
bt
pushf
mov
sub
pusha
pushl
mov
push
pushf
lea
jmp
not
movl
call
cmp
sub
test
shl
pushf
mov
pusha
jmp
pusha
stc
xor
movw
call
pusha
jmp
jmp
call
pushf
popl
pushl
pushl
pushl
xchg
inc
jmp
jmp
mov
pushf
pushl
popl
push
push
push
push
lea
jmp
or
mov
setno
jmp
not
jmp
add
cmp
shrd
call
pushf
jmp
mov
pusha
pushf
lea
jmp
shr
push
mov
pusha
call
bt
cmp
jmp
pushl
popl
movw
pushl
pusha
push
lea
jmp
bts
bsf
sar
mov
mov
clc
call
pushf
popl
call
mov
cmp
pushf
pushf
sub
jmp
pushl
mov
pop
not
mov
not
mov
inc
pushl
mov
dec
call
shl
stc
mov
and
xor
mov
shrd
sbb
sub
inc
pushl
popf
pop
mov
pusha
movzbw
call
mov
pusha
mov
movl
pushf
lea
jmp
jmp
bsr
sub
clc
xor
lea
adc
lea
shl
shrd
shl
bswap
sub
pusha
movzbw
mov
pushf
movzbw
pushf
popl
std
push
pushf
mov
lea
jl
movzbl
pushf
lea
std
jmp
not
push
pushf
pushf
call
add
jmp
push
push
movw
not
not
mov
jmp
setno
ror
pop
cmc
stc
xor
rcl
rcl
push
pusha
neg
pop
inc
movzbw
not
movsbw
shld
and
shld
adc
mov
test
sub
push
mov
pushf
push
mov
lea
jmp
pushf
sub
call
mov
cmp
sub
stc
xor
call
pushf
jmp
dec
cmp
call
push
jmp
neg
push
push
pushl
mov
lea
jmp
aad
mov
rcr
mov
test
mov
clc
push
clc
movw
sub
pushf
jmp
movsbw
mov
dec
movsbw
movl
movw
call
mov
push
mov
pushl
lea
jmp
pushf
pushf
std
cld
pusha
rep
inc
movsbw
mov
shl
and
rcr
mov
bt
cld
clc
pushl
popf
pushf
lea
jmp
push
bswap
mov
lea
jb
mov
push
mov
pusha
lea
jmp
pusha
lea
jle
mov
pushf
lea
jmp
mov
mov
mov
mov
pushf
popl
movb
mov
mov
bsf
movzbw
pushf
mov
bswap
mov
dec
movzbw
jmp
jmp
mov
push
call
test
add
pusha
jmp
push
movw
mov
jmp
pushf
push
mov
push
mov
movb
movb
mov
push
pushf
popl
call
mov
jmp
cmc
stc
neg
movb
push
lea
jmp
inc
clc
test
call
lea
xor
rcr
btc
test
btc
movzbl
rcl
mov
push
jmp
call
bt
pushl
sub
push
pushf
mov
push
mov
mov
mov
lea
jmp
pushl
popl
pusha
pushf
movb
lea
jmp
pusha
mov
pushf
popl
pusha
jmp
pusha
mov
pushl
pushf
movw
pushf
lea
jmp
jmp
push
pushf
pusha
push
mov
movl
push
pushf
popl
jmp
mov
dec
bswap
mov
jmp
cmc
pusha
push
add
pusha
test
push
xor
cmc
jmp
mov
pushl
lea
jmp
sub
push
cmp
mov
xor
lea
jbe
cmc
pusha
cmp
not
jmp
mov
movzbw
mov
pushf
movzbl
inc
mov
mov
movzbw
mov
movzbw
pushf
pushl
lea
movl
call
ror
pusha
mov
call
pushf
mov
pushf
pushf
lea
jmp
mov
pusha
sub
cmp
mov
cmp
pushf
and
mov
pushl
mov
pushf
pushl
movl
pushf
pushf
popl
jmp
cmc
neg
pushl
pushf
call
pushf
dec
stc
test
bswap
pushf
jmp
mov
mov
movb
push
jmp
call
dec
cmp
clc
clc
clc
bswap
clc
sub
jne
neg
pusha
pusha
push
movw
lea
jmp
xchg
not
pusha
std
not
mov
std
cld
cld
call
pushl
popl
mov
push
lea
jmp
jmp
mov
mov
push
push
mov
pushf
pushl
push
mov
pushf
mov
push
pushl
mov
call
push
pushf
popl
movb
jmp
pushf
push
movw
pushf
dec
jmp
pushf
jmp
add
push
jmp
call
jmp
call
movl
pushl
pushf
popl
mov
pushf
pushl
popl
pusha
mov
movb
lea
jmp
mov
stc
pushf
ror
shrd
movsbw
rcl
xor
rcr
cmp
rcr
shr
neg
pushf
setp
bsr
inc
bswap
and
not
not
shl
shrd
shr
and
dec
movw
mov
clc
cmp
add
jmp
call
bt
bswap
clc
cmc
pusha
clc
neg
pusha
pushl
pushl
mov
lea
jmp
jmp
pusha
inc
jmp
xor
jmp
lea
jne
mov
pusha
lea
jmp
pushf
ror
movb
add
stc
jmp
call
mov
mov
jge
xor
bt
ror
pusha
pusha
sub
cmc
pushf
rol
movb
dec
call
pusha
stc
rol
test
stc
cmp
sub
cmc
cmc
clc
ror
pusha
cmp
cmp
pushf
add
stc
sub
pushf
movl
mov
movb
pushf
pushf
lea
jmp
dec
push
call
mov
push
sub
pusha
bt
test
add
jmp
call
mov
jle
push
stc
sub
pusha
movb
pushf
mov
pushl
pushf
pushf
pushf
lea
jmp
mov
movw
movw
mov
pusha
pushf
pushl
mov
mov
call
jmp
pushf
popl
jmp
mov
push
bswap
movl
dec
not
mov
pushf
jmp
jmp
call
mov
mov
mov
push
lea
jmp
mov
pop
bsf
pop
mov
pop
mov
bsr
bswap
call
btc
cmc
lahf
movzbw
movzww
clc
xchg
stc
jmp
call
xchg
movsbl
mov
pop
lea
pushf
movl
pop
movzbw
push
mov
setge
not
bsr
dec
jmp
cmc
mov
bt
bt
sub
lea
jne
push
pushf
mov
movb
pushf
pushl
mov
lea
jmp
pushl
push
dec
clc
bt
call
pusha
mov
movzbl
movzbw
bsr
pushf
mov
movsbw
bswap
mov
pop
jmp
bswap
pushf
cwtl
mov
pushf
mov
jmp
mov
mov
jmp
pushf
popl
pushf
xchg
mov
mov
bsr
mov
dec
pusha
lea
movsbw
mov
bsr
movsbw
call
add
push
xor
cmc
rol
test
call
mov
movzbw
mov
jmp
mov
push
call
bswap
jmp
inc
mov
not
not
bsf
pop
mov
bswap
push
pushf
movl
dec
lea
mov
lea
js
pushf
pusha
mov
not
pushf
jmp
pushf
pushf
popl
pushf
pushl
popl
movl
push
lea
jmp
sar
lahf
or
movzbl
mov
cmp
rcr
cmp
shl
mov
push
add
jmp
bts
cwtl
aad
mov
shl
mov
clc
pushf
add
pushf
call
push
mov
push
call
clc
neg
push
mov
jmp
call
pushf
pushf
mov
push
lea
jmp
xor
call
push
mov
push
movb
pushl
movb
lea
jmp
bswap
mov
dec
bsr
pushf
movl
bsr
mov
jmp
jmp
pushf
lea
ja
daa
bswap
mov
mov
sbb
ror
lea
lea
jmp
sub
sar
sar
rcl
rdtsc
pusha
sub
jmp
jmp
mov
movb
movb
pushf
popl
call
dec
jmp
pusha
pusha
jmp
mov
call
pushf
popl
pusha
xchg
bsr
pop
mov
dec
mov
inc
pusha
pushf
movzbw
mov
lea
movzbw
mov
pop
bsf
not
movl
pop
not
inc
dec
mov
mov
pushf
not
pushf
movb
call
mov
pushf
lea
jmp
movw
lea
jne
call
cmc
sub
push
movb
call
sub
push
jmp
push
jmp
pushl
pushf
popl
pushf
call
pushf
mov
mov
pushf
lea
jmp
lea
jl
popl
pushf
pushf
movb
lea
jmp
mov
pushf
call
pushl
call
pushf
inc
clc
rol
bt
call
mov
movzbw
not
bsf
mov
mov
call
jmp
not
pushl
call
bts
dec
movzbw
mov
sar
rol
mov
cmp
not
pushf
movw
lea
jbe
not
push
sub
bt
cmp
and
pusha
movb
mov
pushf
pushf
pushf
popl
mov
push
mov
pushl
popl
push
pushf
pushf
lea
jmp
push
mov
pusha
mov
pushf
mov
push
push
mov
jmp
movb
mov
pushf
mov
lea
jmp
call
mov
movb
not
lea
movl
mov
pushf
movb
pushl
ret
bsf
jmp
rdtsc
or
btr
mov
cmc
rcr
test
mov
bt
jmp
mov
push
pushl
mov
movl
movb
lea
jmp
inc
pushf
push
call
sar
shrd
mov
setp
neg
xor
pusha
ror
shrd
sub
pushl
rol
stc
rol
mov
bsf
mov
dec
bswap
dec
shl
btc
shl
dec
not
movb
xor
xor
btc
bt
cmc
xor
rcl
rcr
cmp
sbb
mov
call
test
neg
push
pushf
lea
jmp
rol
sbb
mov
call
bt
push
add
test
cmp
xor
jmp
jmp
xor
mov
clc
cmp
call
not
jmp
mov
push
push
lea
jmp
call
jmp
jmp
dec
pushf
sub
call
mov
pushf
popl
push
push
xchg
bswap
pushf
lea
mov
push
dec
mov
pop
movzbw
mov
movsbw
movl
pushl
mov
push
call
mov
push
mov
not
movw
not
pushf
stc
clc
and
jmp
shld
dec
bts
call
mov
movsbw
bswap
mov
mov
bswap
call
shl
mov
rcr
rcr
not
shrd
pop
neg
bswap
or
sbb
pop
or
pop
shl
call
call
not
mov
jmp
rol
stc
add
pusha
xor
movb
pushf
dec
test
sub
pushf
pushf
call
movsbw
movsbw
pushf
mov
pusha
pusha
movb
mov
call
push
mov
push
pushf
popl
call
bswap
and
neg
add
inc
cmc
push
bsr
sub
shl
shr
lea
mov
sub
bswap
mov
test
shr
mov
add
sbb
not
bts
add
shl
not
movzbl
btr
mov
movsbw
btr
xor
dec
setle
dec
dec
push
bswap
pop
dec
rol
ror
shl
rcr
not
sar
shld
sub
sub
jmp
movzbw
call
shl
shr
xor
dec
sub
bt
bswap
movzbl
mov
stc
cmp
rcl
mov
pusha
pushl
cmc
sub
call
pusha
lea
jne
push
pusha
pushf
popl
jmp
push
pusha
jmp
add
jmp
cmc
rol
movzww
clc
stc
clc
xchg
jmp
pusha
jmp
bt
jmp
mov
pushf
movb
pushf
popl
movb
mov
lea
jle
pushf
pushl
popl
pushf
push
lea
jmp
not
bt
bt
pushf
xor
test
stc
movb
clc
sub
movb
mov
pushf
cmp
xor
stc
add
jnp
push
push
mov
pusha
jmp
div
movb
mov
jmp
pusha
lea
ja
inc
push
pushf
xor
push
call
movw
pusha
mov
call
mov
push
movl
jmp
mov
pushf
call
pushf
pushl
popl
pushl
pushf
movb
lea
jmp
call
mov
mov
movb
call
cmp
call
mov
pushl
popl
test
jmp
jne
push
push
mov
pusha
mov
pusha
pushf
pushf
xchg
jmp
bswap
aad
mov
clc
add
pushf
pushl
mov
pusha
mov
push
lea
jmp
call
adc
mov
test
call
pusha
pusha
mov
jmp
jmp
pushl
popl
push
lea
jmp
bswap
sub
inc
lea
push
movzbl
stc
pushf
pusha
test
shl
cmp
call
add
clc
ror
mov
bt
and
pushf
call
shrd
shl
mov
neg
call
pushf
popl
push
jmp
pusha
mov
pushf
mov
call
pushf
mov
jmp
cmp
cmp
bswap
clc
stc
neg
mov
mov
mov
mov
lea
jmp
pushf
mov
clc
pushf
stc
xor
lea
jo
push
inc
call
push
not
movb
bswap
call
stc
jmp
push
pusha
pusha
mov
call
jno
add
stc
test
test
sub
jmp
pushl
popl
pushf
movb
lea
jmp
