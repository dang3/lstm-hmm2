pushf
pushf
mov
jmp
cld
call
sub
pushf
pusha
movb
lea
jmp
mov
rep
call
call
mov
push
movb
movb
pushl
ret
xor
pushf
pushf
dec
pusha
mov
push
ror
clc
add
pushl
push
clc
cbtw
pushl
pushf
clc
cwtl
call
rol
rol
rol
rcr
pusha
not
movzbw
movsbl
movzbw
not
rol
shl
dec
rol
clc
xor
neg
xor
inc
shr
movzbl
jmp
jmp
pusha
sub
je
dec
movzbl
pushf
add
cmp
bt
cmc
bt
xor
jmp
jmp
shld
lea
movsbw
mov
stc
sub
pushf
not
pushf
bswap
lea
inc
movsbw
dec
neg
ror
lea
bsf
shr
sub
not
mov
pushf
pushf
movb
pushf
lea
jmp
call
pushf
popl
mov
pushl
popl
pushl
lea
jmp
pushl
xor
call
xchg
pushf
shld
inc
cmc
pushf
mov
shl
push
sbb
pushl
add
btr
push
movzbw
xchg
xadd
mov
mov
shld
sub
pushf
mov
movsbw
not
not
movzbw
movsbl
push
pusha
inc
cmc
and
jmp
pushf
movb
mov
jmp
jmp
pushf
lea
jne
shld
shld
call
std
pushl
popf
pushf
lea
jmp
shrd
mov
bt
rcl
sub
call
call
aas
daa
mov
add
shr
cmc
mov
test
stc
test
jno
add
pushf
jmp
sub
test
stc
stc
cmpl
call
xor
call
stc
sub
pushf
jmp
call
pushf
popl
pushf
call
add
jmp
btc
bsf
dec
mov
cmp
cmp
stc
add
pushf
pushf
lea
jmp
das
bts
movzww
pushf
clc
xchg
jmp
mov
pop
clc
shrd
cmp
sub
mov
pushf
not
movsbw
jmp
lea
je
push
lea
cpuid
test
sub
clc
jb
cmp
cmp
cmpl
push
push
call
sub
pushf
movb
push
pusha
lea
jmp
call
jmp
lea
jbe
mov
pusha
pusha
movw
movw
lea
jmp
cmp
xor
test
cmp
pushl
sub
push
movb
jmp
call
pushf
jmp
push
mov
jmp
clc
jmp
jmp
test
push
sub
bt
cmc
add
push
jmp
add
stc
shld
jg
push
push
movw
mov
pusha
pushf
popl
pushf
pushl
popl
push
movb
push
lea
jmp
push
neg
pushl
pusha
mov
push
lea
jmp
pusha
pushf
jmp
aaa
shrd
rcl
mov
call
mov
movb
movb
pushf
push
lea
jmp
jmp
jmp
push
movzbl
mov
mov
call
pushf
pushl
popl
movb
push
mov
lea
jmp
shrd
mov
js
add
push
pusha
lea
jmp
lea
push
mov
jmp
cmc
sub
mov
cmp
cmp
clc
add
push
push
pusha
lea
jmp
pushl
popl
pushl
mov
push
lea
jmp
pushf
pusha
mov
movw
mov
lea
jmp
jmp
test
bt
test
sub
push
mov
mov
mov
movw
lea
jmp
jmp
cmp
shl
neg
mov
test
add
pushf
push
movb
pusha
lea
jmp
not
mov
pushf
clc
clc
pushl
popl
jmp
pusha
mov
pushf
push
call
pusha
pusha
mov
jmp
cmp
cmp
sub
test
stc
and
jmp
inc
pushf
lea
jmp
jmp
bswap
mov
sbb
cmp
mov
call
movb
jmp
pushl
popl
push
pushf
pushf
pushf
lea
jmp
test
mov
cmp
sub
pushf
mov
pushf
movw
inc
push
pushf
lea
jmp
stc
clc
test
sub
push
bt
add
pusha
movb
call
sub
jl
mov
xchg
shlb
jl
mov
dec
cmp
ljmp
aaa
mov
xor
mov
inc
cs
pop
xchg
mov
cmc
add
mov
bound
mov
pop
lcall
clc
sub
xchg
shlb
and
lcall
mov
pushf
adc
mov
adc
call
push
mov
xchg
mov
mov
xorl
fnsave
ljmp
stos
mov
pop
cld
mov
mov
scas
mov
lea
mov
xor
mov
pushl
xor
mov
jae
decl
jmp
mov
mov
ljmp
lea
jmp
mov
mov
cltd
mov
push
das
mov
jg
mov
ljmp
mov
fnsave
jmp
mov
adc
mov
xchg
mov
fbstp
decl
ljmp
mov
popa
and
dec
cmp
decl
sub
mov
pop
xchg
mov
mov
xchg
mov
ljmp
mov
push
push
cmp
inc
cs
jg
mov
icebp
cmp
pop
cld
mov
imul
mov
and
mov
loopne
mov
mov
cmp
fildll
ljmp
mov
cmp
cs
push
cltd
mov
jp
mov
jl
mov
pop
cld
mov
xor
cmp
insl
sub
fbstp
call
mov
pushf
dec
mov
clc
sub
clc
sub
sub
call
mov
mov
jne
ljmp
mov
adc
std
jne
pushl
adc
std
jne
mov
adc
std
jne
lcall
mov
adc
std
jne
call
mov
hlt
loop
std
jne
ljmp
adc
std
jne
decl
adc
std
jne
inc
xorl
xor
mov
std
jne
lcall
mov
adc
std
jne
jge
mov
adc
std
jne
jl
mov
adc
std
jne
jmp
push
adc
std
jne
lcall
mov
fildll
std
jne
ljmp
mov
adc
std
jne
push
add
mov
mov
push
mov
jg
mov
xor
pop
cld
mov
icebp
cmp
ljmp
mov
xor
inc
xorl
stos
cltd
mov
test
mov
test
mov
and
mov
sub
mov
ljmp
hlt
loop
mov
cmp
jmp
mov
adc
mov
stos
cltd
mov
mov
inc
mov
imul
mov
xchg
mov
jl
mov
dec
mov
mov
xor
inc
mov
lret
push
mov
mov
xor
insl
sub
push
cltd
mov
jp
mov
test
mov
mov
push
mov
sub
jae
push
add
mov
jmp
mov
jge
mov
popa
and
xchg
mov
bound
mov
rcll
decl
and
mov
push
pushf
pushf
popl
call
mov
mov
bt
cmc
sub
movl
pushf
jmp
push
mov
call
pushf
jmp
mov
pushf
popl
pushf
pusha
pushl
popl
pushf
lea
jmp
clc
add
mov
call
call
xor
das
mov
clc
stc
jmp
bsr
btc
test
mov
mov
ror
add
jmp
stc
rol
stc
push
jmp
bswap
stc
xor
pusha
dec
call
push
pushf
pusha
pushf
mov
jmp
rol
shl
cmc
add
mov
call
mov
pushf
push
push
jmp
xchg
bt
shr
test
shrd
mov
clc
pop
mov
pop
shr
xor
mov
test
mov
bsf
mov
not
pushl
popl
pushf
shr
shl
xor
movl
neg
call
call
mov
pusha
pusha
mov
call
ror
shrd
btr
push
lea
sub
pushf
sub
lea
mov
pusha
pusha
pushf
lea
jmp
pushf
popl
lea
jg
popl
push
pushf
pusha
push
lea
jmp
add
movb
cmp
shrd
mov
movw
pushl
mov
push
movl
pushf
popl
jmp
rcl
mov
jmp
push
movw
stc
btc
xchg
rcr
movzbw
push
xchg
movzbw
clc
push
movsbw
jmp
add
pushl
lea
jmp
sub
call
sub
push
pushl
lea
call
mov
pushf
pusha
push
lea
jmp
pusha
movw
pushf
pushf
popl
pushl
mov
lea
bswap
not
bswap
mov
bt
cmc
mov
movsbl
mov
movzbw
lea
mov
rcl
mov
bswap
not
bts
pusha
mov
movzbl
rcl
cmc
xchg
movw
btr
pusha
rol
pushl
popl
pushf
stc
not
movl
rcr
mov
stc
cmc
pop
jmp
movw
call
mov
jmp
xchg
clc
jmp
pushf
add
call
mov
clc
inc
call
sub
jmp
mov
pusha
pushl
jmp
stc
jmp
mov
movzbl
stc
xor
stc
stc
bt
xor
pushf
lea
jnp
pusha
pushl
dec
cmp
mov
xor
clc
xor
pusha
clc
lea
test
movw
bt
cmc
mov
stc
movl
movb
call
jmp
mov
movw
push
pushf
pushf
mov
mov
lea
jmp
call
mov
push
mov
pushf
mov
jmp
pushf
popl
pusha
pushf
jmp
movl
pushf
popl
pushf
pushl
call
test
sub
push
bt
stc
shl
pusha
call
pushf
popl
pushf
test
mov
pusha
mov
mov
mov
call
sub
jmp
pushl
popl
pushl
movb
pushf
mov
lea
jmp
xchg
pusha
pushf
popl
rcl
bswap
rcl
mov
cmc
mov
pushf
bts
clc
rcr
mov
not
pushf
cmc
rcr
mov
pop
xchg
jmp
xchg
movzbw
mov
pusha
movzbl
movb
bswap
jmp
call
shrd
call
xchg
mov
pusha
pop
imul
xchg
mov
cli
add
pusha
pop
imul
adc
push
punpcklbw
imul
loope
imul
pusha
pop
imul
pop
xchg
push
punpcklbw
imul
outsb
hlt
push
punpcklbw
imul
lcall
punpcklbw
imul
xor
andl
push
lss
psraw
xor
sbb
imul
jbe
push
imul
lahf
sahf
push
mov
imul
inc
and
setp
mov
push
orps
bswap
cmp
std
cli
punpcklbw
imul
jno
push
punpcklbw
imul
std
cli
bts
push
nopl
pcmpeqd
cmovo
imul
pop
xchg
push
movlps
imul
pop
lods
push
bts
setg
imul
inc
and
wrmsr
pop
push
add
lcall
imul
pop
xchg
push
setl
mov
push
andps
push
setl
pcmpgtd
xor
jbe
push
movlps
imul
lahf
sahf
push
paddusw
push
packssdw
push
punpcklwd
xadd
imul
rorl
unpckhps
dec
push
mov
push
setg
cmovae
mov
imul
lahf
sahf
push
movups
push
paddusw
push
cmovp
push
sete
push
cmovp
push
xadd
push
orps
lss
repnz
push
cld
push
punpckhbw
cmovp
push
setp
push
cmovp
push
bswap
cmp
push
repnz
bndstx
push
punpcklbw
mov
imul
jl
push
xadd
push
maxps
push
cmovp
push
setp
sete
push
cmovae
jbe
bound
dec
repnz
dec
push
cmovp
push
wbinvd
imulb
sbb
push
pcmpgtw
imul
dec
repnz
orps
wbinvd
imulb
loope
imul
leave
sbb
rolb
imul
xchg
cmovo
imul
imul
add
push
add
or
psubd
imul
push
andps
imul
jl
push
packssdw
push
psubd
imul
lahf
sahf
push
punpcklwd
cmovae
xor
dec
repnz
movups
push
bndstx
imul
popa
outsl
imul
rol
push
setp
push
orps
xadd
imul
pop
lods
push
psrld
imul
into
cmp
pushw
out
pop
imul
ds
pcmpeqd
shrd
push
xor
mov
bswap
xchg
push
stc
not
xchg
pushl
popl
stc
cmc
bts
mov
movl
call
and
not
aam
bsf
mov
neg
inc
mov
cmc
pushf
add
mov
movb
pusha
pusha
mov
pushf
pushf
pushf
lea
jmp
bswap
lea
movzbl
cmp
pusha
clc
bt
mov
clc
or
jmp
xor
clc
xor
shld
movzww
call
pushf
call
call
mov
mov
mov
movb
lea
jmp
cwtl
inc
mov
push
not
mov
cmp
mov
sub
pusha
bt
shr
movw
mov
jmp
push
sar
jmp
pusha
dec
pushf
push
cmp
lea
pushf
sub
cmp
pushf
mov
stc
clc
clc
sub
call
push
pusha
mov
mov
mov
jmp
push
movb
pusha
mov
pusha
mov
jmp
pusha
pusha
mov
jmp
jmp
pusha
push
mov
jmp
mov
pusha
lea
jmp
push
clc
sub
jmp
push
pushf
pushl
popl
push
pushf
lea
jmp
pushf
popl
pusha
movb
pushf
call
call
bswap
lahf
mov
call
dec
or
mov
stc
pusha
pushf
add
movb
mov
movw
push
lea
jmp
pop
add
cld
and
or
and
add
and
add
pop
add
cld
and
sbbb
add
cld
and
xorb
adcb
sbbb
andb
and
add
mov
add
or
andb
es
sbbb
xorb
cmpb
cmpb
andb
add
cmp
and
add
jl
andb
add
xorb
and
xorb
add
mov
add
insl
es
mull
add
and
add
or
and
add
out
add
sbb
add
sbb
adcb
and
add
inc
xorb
and
adcb
adcb
and
add
shlb
sbbb
adc
adcb
adcb
and
add
adc
xorb
and
andb
adcb
xorb
and
adc
and
add
and
add
adc
add
add
add
cld
and
or
and
add
es
clc
and
add
and
andb
adcb
add
andb
add
inc
xorb
and
sub
and
orb
sbbb
es
and
add
add
add
frstor
add
and
adcb
and
add
pop
xorb
add
xor
adc
add
clc
and
addb
add
add
es
and
adcb
xorb
andb
and
add
xor
andb
add
and
adc
and
xorb
xorb
and
adcb
adc
es
mull
add
sbb
add
cmp
addb
and
add
and
subb
es
inc
xorb
and
addb
and
add
add
and
add
clc
and
andb
sbbb
xorb
and
add
jne
andb
sbbb
adcb
xorb
and
add
cld
and
xorb
and
add
pop
andb
and
add
out
add
frstor
add
pop
add
cld
and
sbb
add
cld
and
or
add
and
add
addb
add
cld
and
add
add
cld
and
xorb
es
add
cld
and
add
pop
add
cld
and
add
sbb
add
cld
and
orb
add
cld
and
add
sub
add
add
cld
and
sbbb
and
add
cld
and
add
inc
add
cld
and
add
and
xor
xchg
mov
pusha
call
movzbl
movzbl
jmp
clc
shr
call
movb
jmp
mov
pusha
pushl
lea
movw
call
bts
lea
pushf
rol
not
add
call
sub
pushl
jmp
mov
push
pushl
push
push
lea
jmp
pushf
push
call
rol
rol
adc
and
movzbl
pushf
xor
pusha
mov
pusha
inc
bt
clc
clc
call
sub
jmp
bt
and
mov
pushf
call
bts
test
mov
clc
cmc
bt
cmp
add
push
jmp
call
pushl
mov
pusha
mov
movw
pushl
movw
lea
jmp
jmp
pushf
jmp
pusha
mov
movsbl
call
pushf
push
call
call
mov
jmp
push
pushl
popl
pushl
pushf
pushf
lea
jmp
call
push
sar
aam
aad
mov
add
lea
stc
mov
mov
add
movb
call
sub
push
call
push
mov
pushf
pushl
pushf
popl
jmp
mov
pusha
movb
push
pushf
lea
jmp
jmp
pushf
pusha
mov
push
pushf
pushl
movb
lea
jmp
mov
sub
cmp
neg
mov
lea
jmp
push
pushf
jmp
jmp
pushl
popl
movb
lea
jmp
call
mov
call
mov
call
ror
ror
mov
pusha
cmp
jmp
push
call
bt
bt
cmp
sub
stc
shl
pushf
push
mov
call
clc
jmp
mov
call
cmp
stc
cmp
add
clc
sub
cmc
mov
cmp
pushl
stc
mov
sub
lea
jbe
push
pusha
movb
mov
push
pushf
pushf
lea
jmp
push
bswap
push
bt
bswap
lea
rol
push
btr
bt
push
push
lea
pushl
popl
cmc
ror
rcl
push
mov
rol
btc
jmp
sbb
ror
lahf
shl
mov
push
rcl
mov
clc
push
not
cmc
not
pushl
cmp
call
pushf
xor
pushf
movb
push
pushl
lea
jmp
aam
shrd
rcr
pusha
mov
bt
stc
add
push
call
pushf
pushf
popl
mov
jmp
pushf
popl
jmp
cmc
cmp
mov
bt
sub
call
std
cld
pushl
popf
movb
pushf
mov
mov
lea
jmp
pusha
bsr
notl
dec
sub
not
mov
push
sub
call
pusha
mov
mov
lea
jmp
jmp
pushf
push
lea
jl
push
pushf
pushl
popl
movl
lea
jmp
rol
push
jmp
pusha
jmp
pushf
jmp
mov
stc
push
test
sub
call
mov
pushl
pushl
ret
push
pushl
mov
call
push
mov
push
pusha
pushf
movb
lea
jmp
mov
pushf
add
pushf
lea
jmp
jmp
das
mov
sar
test
mov
add
test
push
xor
mov
movl
jmp
movb
pushl
popl
movl
movb
pushf
lea
jmp
call
rcl
mov
pusha
shld
mov
movb
push
pushf
bt
not
stc
pushl
jmp
mov
mov
pushf
pushl
mov
pusha
pushl
pushl
lea
jmp
mov
push
movl
mov
call
mov
dec
or
jmp
pushf
call
mov
btr
pusha
rol
xchg
mov
call
cmc
test
cmp
call
cmp
sub
push
mov
pushf
lea
jmp
movzbw
pusha
mov
bswap
mov
pushl
movb
divl
call
rol
xor
call
ror
mov
clc
sub
pushf
cmc
cmp
call
shrd
xorb
lea
setne
pushf
mov
mov
pushf
push
lea
jmp
pushf
sets
bts
pushl
popl
clc
cmc
movsbw
bswap
movl
stc
rol
bt
mov
pop
stc
ror
not
rol
add
and
bsf
not
lea
pusha
bt
shl
xor
sub
movzbw
ror
mov
push
shl
sub
shld
dec
mov
xor
xchg
rcl
mov
rol
dec
bt
shrd
add
shld
pusha
mov
test
bsr
sar
add
jmp
movl
dec
cmc
stc
sub
cmc
jmp
bt
bt
not
pushf
xor
pusha
lea
jmp
add
pushl
mov
pushf
call
aaa
lea
mov
cmc
pusha
cmc
add
pushf
pusha
movb
lea
jo
pushf
pushf
pusha
pushl
popl
push
movw
lea
jmp
mov
movw
pushf
pushf
mov
pushf
pushf
lea
jmp
mov
mov
mov
movw
mov
movb
lea
jne
ror
shl
mov
pushf
stc
and
clc
cmp
pushl
push
call
sbb
mov
jmp
pushf
popl
push
jmp
rcr
mov
bt
movb
sub
call
mov
test
shrd
mov
mov
jmp
movzbl
pushf
popl
not
test
xchg
shrd
mov
shr
mov
mov
neg
shr
sar
pushl
popl
lea
and
movl
movsbl
btc
xadd
cmc
mov
inc
clc
cmc
add
sub
dec
lea
pushf
not
lea
pusha
bswap
inc
add
lea
btc
pushf
mov
sub
bswap
mov
pusha
pushf
push
pushl
lea
jmp
sub
jmp
push
not
push
push
lea
jmp
mov
push
mov
call
mov
cmc
push
and
movzbw
call
mov
jmp
pushf
mov
pushf
movb
pushf
lea
jmp
jmp
jmp
btr
clc
movzbw
mov
shr
rol
jl
adc
mov
push
call
mov
mov
movw
pushf
popl
push
call
mov
mov
mov
pusha
stc
sub
clc
mov
shl
call
mov
pushf
pushf
mov
lea
dec
mov
inc
stc
mov
mov
lea
bts
and
push
mov
push
bt
bts
push
lea
pusha
pushl
popl
xor
movzbw
xor
movl
cmp
rcr
mov
pushl
sub
pushf
pushf
neg
movb
mov
lea
jmp
setae
mov
movsbw
not
mov
mov
mov
pushf
movb
pushf
pushf
pushl
ret
mov
shl
daa
rdtsc
bt
cmc
jmp
btr
mov
push
bt
call
pushf
add
jmp
jmp
call
cmp
add
call
movw
pusha
jmp
pushl
popl
pushf
pushl
lea
jmp
mov
shr
and
not
mov
call
pushl
popl
mov
pusha
pushl
add
movb
pushl
popf
push
lea
jmp
not
test
xor
pushf
movw
lea
jmp
xchg
jmp
movb
mov
movb
pushl
lea
jmp
cmp
sub
lea
jae
shl
push
mov
lea
js
pushf
pushl
pushf
popl
push
pushf
push
pushl
popl
pusha
pushf
movb
lea
jmp
movb
movl
call
sub
shr
dec
neg
mov
jle
bt
sub
pusha
call
cmc
test
call
test
sub
mov
mov
lea
jb
pusha
mov
pushf
push
mov
lea
jmp
movw
pushl
popl
pushf
lea
jmp
push
sub
pusha
mov
jmp
jmp
shrd
test
clc
aaa
notl
rol
bsr
neg
lahf
mov
call
pusha
push
jmp
jmp
bts
sbb
shl
mov
clc
neg
add
mov
clc
bt
jmp
jmp
ror
pushf
cmc
movzbl
jmp
push
pusha
movw
dec
pusha
jmp
or
and
neg
setb
mov
test
sub
pusha
mov
pushf
pusha
pushf
lea
jmp
rol
stc
jmp
jmp
sub
call
lea
mov
mov
pushl
pushf
lea
jmp
rol
inc
rdtsc
cmc
pusha
sub
push
movl
jmp
pushl
popl
push
pushf
lea
jmp
call
pushl
lea
jne
xor
mov
bt
mov
stc
pushf
cmp
pushf
and
stc
jmp
pushf
push
mov
jmp
call
jmp
pusha
not
pushl
push
mov
movb
dec
push
not
jmp
jmp
shrd
call
sub
bsf
movsbw
mov
pusha
test
bt
sub
jmp
stc
mov
clc
test
sub
bt
pusha
jmp
pushl
popl
movw
pusha
push
push
lea
jmp
xor
movb
push
pusha
lea
jmp
mov
pusha
jmp
jmp
movzbw
pusha
movsbw
movzbw
mov
push
lea
pushf
call
call
mov
push
jmp
test
shl
call
push
mov
call
pushf
mov
call
pusha
mov
jmp
pushf
mov
mov
pushl
pushf
mov
lea
jmp
jmp
sub
call
pusha
jmp
movzbw
bswap
movsbl
lahf
push
movzbl
bswap
mov
pusha
jmp
call
push
lea
jl
push
call
call
movb
add
stc
movl
bt
bt
cwtl
cmc
pushl
bt
sub
call
mov
jmp
push
pusha
or
ror
movzbl
clc
sub
clc
pusha
cmc
rol
movw
pushf
call
shld
pushf
bsf
mov
stc
test
jmp
jmp
jmp
mov
pusha
pushf
lea
jmp
lea
mov
push
jmp
pushl
pushl
or
jmp
pushf
call
pushl
xor
pusha
movsbw
dec
not
movb
inc
dec
dec
shr
add
rcl
inc
rcr
add
mov
jmp
push
mov
push
lea
jmp
movb
pusha
mov
jmp
call
pushf
pushl
clc
shld
jmp
mov
call
stc
bt
sub
pushf
test
shr
jmp
push
mov
movb
jmp
push
call
pushl
jmp
push
mov
push
mov
pushf
popl
push
jmp
pusha
jmp
sar
aas
btc
cltd
rdtsc
cmp
sub
pusha
pusha
call
push
movl
call
pushf
pushf
lea
jne
call
mov
pusha
lea
jmp
pushf
mov
pushf
mov
pushl
lea
jmp
cmp
sub
stc
call
pushf
pushf
popl
call
bt
mov
clc
mov
push
shl
rol
cmp
mov
sar
mov
shl
shl
mov
bsf
mov
bts
rcl
mov
movsbl
pushl
popl
cmp
or
movl
shld
mov
test
bt
movb
sub
cmp
mov
bt
mov
neg
pushf
pusha
mov
lea
jmp
pushf
pushf
mov
push
movb
pushf
xchg
lea
lea
call
mov
jmp
jmp
pushf
lea
jne
clc
sub
call
mov
pushl
lea
jmp
bt
dec
bsr
mov
pusha
pushl
add
pusha
pushl
pushf
pushf
lea
jmp
lea
ja
rdtsc
call
mov
mov
mov
mov
jmp
pushl
popl
pushl
mov
pushf
lea
jmp
pushl
popl
mov
pushf
lea
jmp
cmc
ror
stc
add
pushf
clc
cmp
stc
sub
call
movb
stc
add
call
bsr
mov
lea
shl
shl
adc
pushl
popl
lea
bswap
movl
clc
not
sub
dec
mov
test
sub
pushf
not
push
pushf
lea
jmp
mov
cmp
bt
sub
jmp
ror
bt
movsbw
lea
add
sub
lea
mov
shl
pushf
mov
sar
shr
add
xchg
sub
cmc
shr
mov
rol
rol
movsbw
xor
adc
xor
movzbw
rol
pop
adc
cmp
btc
add
pusha
xor
sub
jmp
add
lea
jp
bt
ror
stc
test
pusha
xor
clc
mov
cmc
add
pusha
test
jmp
cmc
cmc
mov
clc
push
mov
cmc
mov
movsbw
cmp
mov
btr
mov
shl
test
mov
mov
shld
rcr
pushl
popl
and
lea
movl
shl
mov
pusha
sub
push
movw
lea
jbe
not
pusha
pusha
pushl
lea
jmp
mov
pushf
jmp
dec
btc
shl
daa
movzww
pushf
clc
push
xor
pushl
dec
bt
neg
jmp
shl
bts
bswap
neg
pushf
shl
neg
btr
add
btr
setne
bswap
ror
shld
xor
seto
mov
inc
push
mov
push
pushl
push
pushf
dec
pushf
cmp
add
jmp
pushl
popl
pusha
clc
ror
movl
bts
rcr
mov
clc
movw
rol
clc
pushf
call
sub
cmc
stc
stc
push
xchg
movb
call
push
call
mov
call
bsr
rdtsc
mov
or
movsbw
mov
bt
test
call
pushf
pushf
push
mov
pushf
push
lea
jmp
rdtsc
mov
lahf
not
cwtl
pushf
mov
mov
divl
push
movw
mov
pusha
pushf
mov
jmp
jmp
mov
stc
pushf
sub
add
jae
bt
cmp
clc
shr
pushf
push
pusha
mov
jmp
call
clc
bt
movb
sub
movb
lea
jne
pusha
push
sub
jmp
movzbl
bswap
mov
jmp
or
cmc
xor
pushf
pushf
lea
jp
pushf
inc
push
pushf
decl
jmp
push
or
bt
stc
xor
push
call
pusha
call
jmp
movzbw
mov
shld
or
mov
cmp
cmc
pushf
pusha
add
jmp
rcr
mov
and
bt
sar
mov
test
sub
cmc
shl
jmp
pushf
clc
push
bts
pushf
call
not
xor
stc
xchg
mov
sub
pusha
dec
mov
call
mov
pushf
pushf
popl
test
pusha
cmc
mov
jmp
bsf
test
daa
rol
mov
pusha
call
ror
stc
call
mov
call
jmp
mov
pusha
mov
pushf
push
mov
not
not
lea
mov
push
xchg
bswap
pushf
popl
bsf
mov
stc
mov
cmp
adc
stc
and
pushl
popl
shl
bsf
sar
movl
call
call
pushf
mov
mov
pushf
jmp
pushf
pushf
push
pushf
lea
jmp
inc
setl
mov
pusha
cmc
push
sub
push
mov
movb
movl
movb
pushf
lea
jmp
pusha
pushl
popl
mov
add
mov
pushl
popf
pushf
lea
jmp
push
push
inc
movl
pushf
movb
lea
jmp
cmp
or
pusha
push
bt
xor
jmp
mov
clc
mov
not
pusha
mov
pushl
popl
mov
movl
call
pusha
pushf
popl
push
jmp
movsbl
call
mov
pusha
mov
pushf
push
lea
jmp
mov
pusha
clc
add
push
pusha
push
pushf
lea
jmp
not
add
add
jmp
rol
btc
adc
xor
not
jmp
movb
mov
mov
movl
lea
jmp
mov
movsbw
mov
push
jmp
xor
sar
ror
add
shrd
setge
movzbl
pushf
mov
call
ror
mov
neg
mov
test
ror
neg
or
pushl
popl
pushf
stc
rcl
movl
inc
push
mov
stc
lea
jo
cmc
test
sub
jmp
or
pushf
lea
jae
pusha
mov
lea
je
cmc
xor
jmp
add
pushf
call
and
bts
mov
push
push
add
movb
mov
push
mov
pushf
push
pusha
push
lea
jmp
cmc
add
mov
pushf
lea
jmp
inc
clc
shr
lea
mov
test
jmp
pushf
popl
mov
pushl
popl
movb
push
mov
pushf
lea
jmp
bt
test
add
push
clc
pusha
xor
pusha
pushf
test
bt
sub
clc
push
mov
call
pushl
movl
jmp
call
mov
jmp
movsbw
btr
pushl
popl
jmp
bsf
bsr
mov
pushf
pusha
add
pushf
mov
push
call
mov
push
movw
pushl
mov
lea
jmp
stc
add
movb
movb
jmp
bts
test
rcr
pusha
mov
pushf
cmc
mov
xor
push
pushf
call
bt
or
pop
shl
sub
bts
pop
rol
pop
call
mov
pushf
pushf
movb
pushf
lea
jmp
push
jmp
pushl
cmp
add
pusha
push
lea
jmp
push
jmp
pusha
pushf
popl
pushf
bt
movb
bt
mov
rcl
mov
mov
rol
pushl
mov
rcr
not
mov
ror
lea
btc
mov
stc
movsbw
rcr
mov
mov
movzbw
mov
ror
xchg
clc
btc
not
pushl
popl
rol
xchg
movzbl
mov
movl
pushl
not
mov
btc
call
cmp
sub
bt
stc
sub
movb
call
call
push
mov
mov
pushl
push
movb
pushl
lea
jmp
movl
pusha
inc
push
pushf
lea
jmp
pusha
add
push
call
rcl
or
sub
adc
mov
shl
pushf
mov
pushl
sub
pushf
cmc
call
pusha
cmc
push
and
lea
jg
pushf
pushf
popl
pushf
pushl
popl
movb
mov
lea
jmp
pushl
clc
cmc
cbtw
jmp
pushf
pusha
jmp
sub
jmp
push
pusha
pusha
pushl
popl
mov
mov
pushf
lea
jmp
lea
jne
movzbw
xor
test
mov
push
stc
cmp
push
and
mov
cmp
pushl
push
push
call
sub
pusha
push
mov
pushf
lea
jmp
inc
jmp
push
mov
pusha
mov
pusha
mov
mov
movl
pushf
mov
push
lea
jmp
mov
movb
mov
movb
mov
lea
jmp
push
pushf
mov
pushf
pushl
mov
mov
jmp
lea
pusha
mov
setg
cwtl
pop
lea
jns
mov
push
pushf
movb
divl
lea
jl
mov
call
add
mov
pusha
movb
pushl
lea
jmp
mov
jmp
call
call
call
mov
pusha
pushf
lea
jmp
push
call
push
mov
call
mov
movb
jmp
pushf
lea
ja
push
jmp
call
movb
mov
pusha
bswap
pushf
push
pushf
dec
call
not
sbb
test
mov
movb
add
movl
mov
mov
push
lea
jmp
lea
jmp
mov
call
pushf
mov
pushf
pushf
mov
push
pushf
lea
jmp
call
xor
stc
adc
mov
stc
bt
clc
or
mov
push
bt
stc
add
call
pushf
jmp
pushf
jmp
bswap
mov
push
add
pushl
pushf
lea
jmp
mov
cmc
pushf
pusha
add
mov
lea
jmp
pushf
call
clc
call
test
clc
xor
movw
lea
jmp
push
mov
push
jmp
movw
mov
pushf
movw
mov
mov
lea
ror
not
mov
lea
movsbw
push
mov
cmc
jmp
mov
pushf
jmp
push
mov
push
lea
jmp
mov
pushl
movb
mov
mov
pusha
mov
pushf
lea
jmp
bswap
xchg
xchg
call
push
shl
pusha
mov
mov
pushl
call
bt
stc
mov
lea
clc
push
movsbw
stc
jmp
call
push
cmp
add
pusha
pushf
popl
call
mov
call
movb
jmp
jmp
mov
mov
call
call
pusha
push
pushl
popl
push
movw
push
pushf
lea
jmp
call
mov
or
bts
mov
clc
not
bt
bt
push
bt
not
pushf
clc
mov
lea
jg
sub
push
stc
clc
and
movb
mov
call
shr
mov
push
movl
sub
jmp
pushf
popl
jmp
clc
add
call
sub
jnp
pusha
pushf
mov
pushf
jmp
inc
lea
pusha
pushf
cmp
movb
lea
ja
lea
mov
bsr
lea
rcr
sub
daa
sub
bswap
lea
bsr
pusha
not
ror
and
mov
shrd
pop
sub
pusha
mov
mov
push
movzbw
movzbl
pushf
popl
call
stc
shl
pushf
mov
push
movb
mov
jmp
pushf
jmp
pushf
movb
mov
call
cwtl
jmp
movb
jmp
pushf
pushl
popl
mov
mov
lea
jmp
sbb
bt
mov
adc
neg
jmp
dec
inc
or
rcr
bsr
ror
sub
movsbw
push
not
pushl
movzbl
push
dec
mov
mov
call
aaa
daa
xadd
mov
jb
rol
bts
mov
test
clc
bt
jmp
pusha
not
lea
jg
push
pusha
pusha
lea
mov
mov
pushf
mov
pushl
ret
call
pusha
pop
mov
call
pusha
call
call
pushf
lea
rcr
pushl
popl
rcr
call
mov
pushf
lea
jmp
pushf
jmp
pushl
popl
movb
movl
lea
jmp
pusha
shld
mov
inc
and
mov
bt
sub
push
shr
movb
mov
call
shld
ror
mov
bt
rol
or
bswap
mov
jmp
mov
mov
push
mov
pusha
jmp
pusha
add
pusha
shld
call
jmp
mov
clc
jmp
movb
pushf
popl
pushf
pushl
popl
pushl
mov
pushf
push
lea
jmp
mov
pushl
mov
pushf
lea
jmp
mov
pushf
lea
jmp
sets
mov
clc
jmp
movw
mov
movb
mov
pushf
lea
jmp
mov
pushf
pushf
mov
jmp
call
pushf
pushf
popl
mov
pushf
mov
pusha
push
mov
mov
push
mov
call
call
mov
call
push
mov
pushf
mov
call
setl
call
mov
call
push
test
pushf
sub
pusha
mov
inc
push
neg
bt
xchg
cmp
movb
clc
sub
pushf
sub
jbe
sub
bt
stc
call
push
jmp
jmp
sub
pushf
cwtl
test
call
mov
bt
or
pushf
pushf
pushf
jmp
adc
pusha
not
mov
pushl
rol
rol
test
mov
clc
cmc
sub
cmp
movb
mov
push
shl
pushf
pushf
mov
pushl
jmp
pushf
jmp
pushl
and
mov
mov
mov
jmp
bt
bt
mov
setl
clc
bsr
mov
push
test
pushf
jmp
pusha
mov
pushf
push
lea
jmp
mov
pushf
popl
pushf
pushf
pushf
pushl
popl
mov
lea
jmp
rol
push
mov
pusha
pushl
pushl
pushl
ret
jmp
xor
cmc
cmc
pushf
pusha
sub
clc
push
sub
cmc
bt
stc
movw
rol
clc
pushl
sub
cmc
jmp
not
pusha
movsbw
not
mov
lahf
movzbw
mov
pushf
lea
cpuid
jmp
mov
mov
mov
pushf
call
inc
shl
mov
pusha
mov
jmp
add
pusha
push
movw
pushf
lea
jmp
push
pushl
popl
mov
pushl
lea
jmp
call
pushl
popl
push
lea
jmp
stc
pushf
push
shr
jmp
pusha
mov
pushl
push
mov
pushf
lea
jmp
pushf
popl
call
pushf
popl
cmc
clc
push
bt
pushf
bswap
mov
clc
bswap
lea
bswap
push
rol
call
clc
cmp
bt
sub
bt
cmp
cwtl
test
sub
push
movw
pushf
mov
pusha
pushf
movb
pushf
lea
jmp
clc
cmc
xor
clc
mov
cmc
sub
jmp
lea
jo
pusha
pusha
mov
jmp
lea
je
cmc
call
pushl
popl
mov
lea
jmp
shr
inc
not
mov
mov
or
pop
pop
pushl
popl
add
movl
bt
bt
rcr
mov
bsr
sub
mov
not
pop
not
dec
xchg
inc
shl
lea
neg
pusha
sub
bswap
jmp
add
movw
mov
mov
bt
sub
pushf
pushl
lea
jmp
pushf
movb
pusha
mov
jmp
mov
bt
mov
bt
jmp
pushf
pushf
popl
pushl
clc
mov
mov
pushl
xchg
pop
mov
mov
mov
mov
lea
mov
btr
bts
pushl
popl
cmc
ror
cmc
pop
movl
ror
stc
jmp
call
shl
inc
pushf
movzbl
push
sbb
setb
not
sub
btc
not
setbe
ror
stc
setle
xor
xor
dec
bts
test
neg
sub
not
pushl
sub
add
shl
sub
pushf
mov
call
bswap
mov
pushf
pushl
pusha
mov
push
jmp
pusha
inc
bt
test
add
pushf
movb
pushf
dec
call
lahf
movzbw
mov
pusha
clc
pushf
movzbl
mov
or
ror
cmp
mov
bt
jmp
pusha
pushl
adc
mov
call
cmp
ror
mov
pusha
add
pusha
pushf
movl
movw
lea
jmp
cmc
add
jmp
pushf
setl
cwtl
mov
push
mov
pusha
pushf
divl
pushf
pushf
push
mov
pushf
pushf
mov
call
pusha
call
mov
mov
pop
pushf
pushl
popl
pusha
ror
movl
clc
call
clc
sub
sub
jle
pushf
sub
call
jmp
pusha
pushf
push
mov
pusha
push
lea
jmp
rcl
bt
rol
setb
lea
dec
dec
rcr
sbb
and
pusha
or
mov
movb
mov
sub
pushl
push
pushf
mov
mov
pushf
pushf
pushf
lea
jmp
jmp
jmp
push
mov
movb
push
jmp
mov
pushf
mov
lea
jmp
test
pusha
add
jmp
jmp
bsf
mov
jno
rcl
or
add
bswap
sub
add
mov
pushf
jmp
sbb
and
mov
rol
pushf
sub
btr
mov
bt
cmc
movb
add
jmp
neg
mov
push
cmc
add
pushf
call
pushf
movl
call
aam
mov
test
push
sub
push
cmp
add
pusha
mov
pushf
popl
mov
movb
pusha
pushl
popl
pushl
push
lea
jmp
call
mov
call
mov
ror
mov
pushf
cmp
clc
test
add
pushl
shrd
pusha
call
lea
jb
pusha
mov
pusha
mov
call
mov
pusha
movb
pushf
lea
jmp
pushf
movb
mov
movb
mov
pushf
pushf
mov
mov
mov
push
mov
jmp
push
mov
pushl
jmp
mov
mov
movw
pushf
lea
jmp
pushl
popl
pushf
pushf
lea
jmp
movl
call
call
movb
pushl
popl
pushf
lea
jmp
sub
clc
shl
xor
inc
call
movzbw
cmp
shl
mov
pusha
jmp
call
pushf
pusha
push
call
call
pusha
mov
mov
pushf
mov
pushf
popl
pushf
push
call
clc
bt
movzbl
bt
push
sub
mov
push
stc
cmp
sub
cmc
bt
bt
jmp
mov
pushf
pushf
pushf
lea
jmp
call
pushf
push
jmp
pushf
pusha
call
call
xchg
call
pushf
clc
cmc
push
pusha
stc
mov
movb
test
movb
mov
xor
mov
call
lea
cpuid
clc
sub
jmp
sub
cmc
movw
mov
pushf
sub
mov
push
mov
movb
lea
jmp
and
pusha
or
mov
test
jmp
call
pushl
push
movl
mov
pusha
call
xor
pushl
dec
jmp
not
rcr
ror
movzbl
call
sbb
mov
add
xor
pushf
inc
inc
movzbw
ror
add
stc
cmc
sub
xor
btc
mov
sar
shr
xor
inc
bt
bswap
shrd
mov
cmc
jmp
mov
call
inc
pushf
decl
mov
lea
jne
push
jmp
pushf
pushf
mov
jmp
call
pusha
pushf
mov
jmp
stc
movl
mov
btc
pop
pushl
mov
btc
mov
not
pushf
mov
bswap
cmc
bswap
btc
pushl
popl
mov
rcr
rcr
movl
pusha
pop
bswap
bts
mov
clc
rol
call
inc
inc
call
popf
pushf
pushl
pusha
movb
lea
jmp
mov
pushf
call
mov
movb
call
add
and
bswap
sub
pusha
mov
mov
push
pushf
popl
not
bswap
std
push
xchg
mov
movsbw
movsbw
jmp
shrd
lahf
aad
mov
sbb
mov
add
rcr
jmp
push
push
dec
jmp
mov
jmp
ror
movsbw
bsr
shrd
movzbl
shrd
sbb
add
test
xor
btc
clc
bsf
sar
not
cmp
test
cmc
xor
sar
add
sbb
adc
sar
mov
cmp
push
sub
test
add
pusha
pusha
mov
push
lea
jmp
cmp
pushf
test
call
or
bts
sub
clc
mov
cmp
bsr
mov
clc
pushf
test
not
jmp
pushf
popl
pushf
jmp
bswap
push
sar
test
sar
cmp
mov
jmp
pusha
mov
push
pusha
movb
push
lea
jmp
and
mov
call
btc
rcl
movzbl
lea
btc
not
bt
push
rol
inc
dec
stc
rcr
add
stc
btc
xor
bsf
call
rol
pushf
clc
cmc
bt
sub
stc
clc
pushf
bt
cbtw
jmp
pusha
pushf
movl
pushf
popl
jmp
xchg
clc
movb
stc
sub
cmc
cmc
movb
stc
neg
pusha
xor
stc
ror
stc
cmc
push
sub
push
cwtl
jmp
mov
pusha
lea
jmp
call
add
test
add
push
call
mov
push
jmp
mov
pushl
pushf
pushf
mov
pushf
mov
pushf
lea
jmp
not
sbb
mov
bt
add
pushf
pushf
push
lea
jmp
cmc
push
add
movb
push
lea
jmp
xchg
mov
and
cmc
add
jmp
pushf
popl
jmp
mov
jmp
sub
jmp
das
cmc
ror
movzww
call
cmp
cmc
mov
pusha
pushf
jmp
shr
push
mov
pushf
pushl
pushf
popl
pushf
call
pusha
mov
decl
mov
push
lea
jne
pushf
call
pushf
popl
call
movsbw
pushf
popl
pushl
call
pushf
pushf
pushf
popl
pusha
pushl
pushl
popl
movb
pushf
push
pushl
lea
jmp
lea
jmp
lea
or
mov
clc
add
pushf
mov
lea
jmp
add
pusha
pushf
lea
jmp
jmp
pusha
pop
mov
pushf
pushf
mov
movb
mov
pushf
mov
pushf
lea
jmp
pusha
jmp
bt
shl
movsbw
shrd
movzbl
mov
setg
bsr
jmp
bsr
pusha
shld
clc
mov
call
jmp
movl
shl
xor
lea
shl
mov
cmp
sub
cmp
cmc
neg
pushf
pusha
push
lea
jmp
jmp
mov
movb
lea
jmp
movb
push
movl
lea
jne
sar
mov
cmp
cmc
and
pusha
cmp
pusha
pushf
pushf
push
lea
jne
btc
xorb
movzbl
pop
push
pushl
push
pushf
lea
jmp
pushf
popl
mov
rcr
stc
xchg
btr
stc
xchg
lea
mov
bt
xchg
movsbl
mov
rcl
bts
mov
btc
mov
xchg
mov
seta
btc
bts
mov
pushl
rcr
movzbl
call
jmp
jmp
shl
ror
mov
call
sets
mov
jno
and
neg
mov
cmp
push
cmp
not
call
pushf
movb
mov
jmp
shr
notl
lahf
shr
neg
mov
pushf
cmp
sub
mov
and
pushl
pushf
popl
push
pushf
call
bswap
pushf
popl
pushf
bt
push
mov
jmp
call
add
stc
push
shld
pushf
jmp
jmp
jmp
mov
movb
pushf
lea
jmp
bswap
mov
adc
stc
stc
mov
jmp
bsf
mov
pushf
rcr
mov
clc
sub
call
clc
pusha
mov
rol
pusha
cmc
pop
mov
cmc
lea
rol
xchg
movsbw
mov
jmp
stc
stc
cmp
cmc
sub
call
cmc
sbb
daa
mov
rol
mov
cmc
pusha
bt
add
call
call
pushf
popl
jmp
pusha
push
pusha
lea
jne
pusha
pusha
movb
jmp
pusha
call
bsf
bswap
test
mov
pusha
cmc
jmp
cld
jmp
add
cmc
movb
stc
cmc
xchg
jmp
pusha
call
test
mov
pushf
mov
test
test
bt
mov
shr
mov
shl
shl
shl
push
xor
push
shld
clc
stc
pushl
or
push
and
movl
sub
inc
mov
pusha
test
cmc
sub
pushf
not
pushf
push
pushf
lea
jmp
mov
push
pushf
pushf
mov
pushl
jmp
jmp
bt
push
cmp
pushf
pushl
movl
pushl
lea
ja
lahf
aaa
neg
inc
mov
rcl
sar
inc
lea
inc
rcr
cwtl
sub
shl
mov
aaa
lea
cmc
and
pushf
add
sbb
sub
not
pop
movsbl
lea
mov
jmp
pusha
pushf
lea
jmp
cmc
dec
movzbl
test
cmc
add
call
push
pushf
pusha
call
mov
call
mov
pushf
pushf
popl
call
call
mov
call
mov
pushf
push
pushl
mov
pusha
pushf
lea
jmp
xchg
bswap
jmp
jmp
call
pushf
bt
sub
mov
push
pushf
mov
push
pushf
lea
jmp
jmp
jmp
sub
push
lea
jmp
push
mov
pushf
popl
pusha
pusha
call
pushl
popl
pushf
pushf
push
mov
lea
jmp
movb
mov
call
call
bt
clc
bt
ror
cmc
clc
bt
xor
test
push
clc
neg
stc
pushf
sub
jmp
mov
mov
jmp
mov
pusha
pushl
ret
call
pusha
mov
pushf
pushf
pushf
mov
lea
jmp
pusha
cmc
mov
btr
stc
xchg
movw
jmp
call
pushf
call
movb
pushl
mov
lea
jne
pushf
pusha
pushf
pushf
popl
jmp
ror
bt
bt
sub
pushf
clc
clc
pushl
mov
cmp
clc
pushl
sub
pushf
pushf
mov
pusha
lea
jmp
pushf
mov
mov
pushf
pusha
mov
call
sub
clc
xchg
clc
pusha
bt
neg
push
jmp
bt
sub
test
mov
test
sub
pushf
pusha
mov
pushf
lea
jmp
movb
add
call
bswap
test
mov
pushf
cmc
cmp
add
pushf
pushf
pusha
lea
jmp
call
mov
pushf
mov
pushl
ret
mov
cwtl
pushf
pushf
stc
clc
sub
push
push
lea
je
mov
pusha
pusha
push
lea
jmp
call
mov
movb
pushf
pusha
lea
jmp
sub
pusha
pushf
call
pushf
add
jmp
sub
sub
jbe
cmpl
push
mov
pushf
jmp
seto
bt
mov
setnp
sub
jmp
shl
bswap
pushf
clc
mov
push
pushf
mov
cmc
test
add
pushf
mov
push
mov
movw
pusha
lea
jmp
pushf
movw
call
test
sub
pusha
call
bts
pusha
pop
xor
bswap
bt
rol
sub
and
shrd
not
movzbw
add
shl
movsbl
sub
bsr
xor
bt
movzbl
ror
btr
not
mov
movb
cmc
pushl
cmc
rol
movl
call
movl
pushf
lea
pusha
mov
push
mov
pushf
lea
jmp
call
call
call
pushf
shld
mov
jmp
add
mov
ror
bsr
cmc
add
pushf
pushf
and
xor
lea
bt
btc
neg
mov
test
clc
stc
shl
test
cmp
test
cmc
shr
jmp
xor
mov
movb
call
ror
mov
bt
xor
mov
call
mov
pushf
pushf
lea
jmp
pusha
call
mov
pushf
movb
pushf
pushl
lea
jmp
pusha
pushl
mov
mov
pushf
pusha
push
mov
pushf
pushf
pushf
popl
bt
clc
test
clc
mov
cmp
mov
mov
cmc
bt
xchg
test
inc
mov
shld
mov
rol
bsf
mov
rcl
add
pushl
popl
or
movl
bswap
sbb
neg
pop
mov
pushl
cmc
call
jmp
shr
push
mov
pushf
pushf
popl
call
inc
bsf
lea
jmp
xor
mov
inc
mov
pushf
neg
push
sub
cmc
cmc
cmp
mov
pusha
test
bt
clc
sub
pushf
push
pushl
jmp
mov
pushf
jmp
mov
bt
clc
jmp
mov
jmp
daa
adc
mov
setge
mov
test
pushf
pusha
add
push
cmp
clc
lea
movb
not
push
pushf
jmp
neg
call
mov
cmp
cmc
test
and
bt
cmp
pushf
jmp
push
movl
lea
jb
mov
jmp
not
jmp
add
pusha
mov
push
movb
lea
jmp
pushf
popl
pushf
pushf
pushf
call
mov
push
pushf
pushf
lea
jmp
mov
pushl
mov
call
or
movsbw
sub
mov
shl
bsf
add
add
rcl
cmc
bt
not
btc
not
not
sub
movzbw
dec
dec
bsf
cmp
not
rcr
add
stc
btc
sbb
mov
stc
pushf
stc
add
pushf
call
xchg
pusha
lea
bswap
jmp
mov
jmp
pushf
call
jmp
and
mov
test
pusha
stc
test
sub
stc
not
pusha
rol
call
pushf
popl
pushf
call
stc
rcr
mov
pushf
mov
cmc
pushl
add
pusha
jmp
sub
pushl
mov
pushf
lea
jmp
mov
jmp
pushl
pusha
mov
pushl
movw
push
push
lea
jmp
jmp
pushf
mov
pop
mov
stc
not
not
mov
ror
call
xor
std
rol
pop
test
jmp
jmp
mov
pushl
jmp
movb
mov
mov
movb
lea
jmp
inc
add
mov
stc
bt
sub
stc
cmc
test
bt
add
jmp
mov
pushl
call
jmp
jmp
pusha
movb
pushf
popl
push
push
jmp
push
mov
pushf
pushf
popl
jmp
mov
push
push
movw
lea
jmp
mov
push
pushf
pushf
lea
jmp
pushl
popl
pushf
movb
mov
movb
lea
jmp
btr
pushl
popl
rol
movl
not
ror
bts
bt
mov
btc
jmp
mov
mov
pushf
push
pushf
mov
pushl
ret
mov
pushl
popl
pushf
push
movb
mov
lea
jmp
mov
bt
jmp
bswap
inc
mov
bt
stc
stc
jmp
call
cmc
sub
clc
pushf
pushf
add
pushl
push
pushf
mov
pushf
pushf
pushf
pushl
ret
jmp
call
bswap
pushf
pushf
popl
push
mov
lea
jmp
movsbw
pop
jmp
call
not
lea
movb
pusha
pusha
lea
jmp
test
shl
pushf
mov
dec
sub
add
pushf
jmp
rcl
ror
mov
pushf
mov
movsbw
lea
sete
setae
pushl
rol
jmp
pusha
pusha
movb
mov
pushf
pushf
pushf
call
bts
mov
jmp
mov
pushl
pushl
call
cmp
pushl
pusha
sub
lea
jns
clc
pushf
cmc
ror
stc
cmc
cmc
cmc
xor
clc
neg
pusha
bt
sub
pusha
stc
pushf
jmp
mov
jmp
jmp
pusha
mov
lea
jne
pushf
jmp
bt
cmc
sub
clc
neg
pushf
call
std
pushf
mov
movzbw
movsbl
mov
mov
jmp
mov
pushf
mov
push
movb
pusha
lea
jmp
movb
mov
pushl
pushf
mov
movb
lea
jmp
call
jmp
shl
push
mov
bt
movb
add
push
jmp
call
pushf
sub
pusha
pusha
jmp
inc
call
cmp
pushf
movw
lea
jne
pushf
lea
xorb
lea
pusha
jmp
push
not
pushf
pushl
inc
push
rol
call
movzbw
mov
jmp
setl
bswap
shld
btc
mov
cmc
add
call
mov
pusha
jmp
mov
pusha
call
movsbw
inc
clc
jno
mov
pusha
jmp
lahf
movsbw
cwtl
push
cwtl
mov
pusha
push
lea
cpuid
jmp
bt
add
pushf
lea
jmp
bswap
mov
pushf
call
call
movsbl
inc
rol
bt
mov
stc
setp
mov
jmp
mov
jmp
lea
aaa
mov
add
sar
shl
shld
mov
pushf
call
cmc
lea
neg
bts
mov
pusha
stc
pushf
sub
lea
jo
push
inc
call
pusha
call
cmc
pushf
test
mov
cmp
add
pushf
mov
pushl
pushf
lea
jmp
add
cmc
cld
pushf
cmc
pushl
popf
mov
movw
push
lea
jmp
pushf
pushf
mov
jmp
rol
mov
call
movzbw
mov
shl
shl
mov
neg
ror
and
not
mov
push
call
call
lea
call
jmp
push
push
mov
pushf
jmp
pushl
popl
shrd
sbb
inc
push
jmp
pusha
inc
seta
bswap
movsbw
dec
rcl
shl
xor
sbb
sar
sub
adc
rol
xor
call
lea
dec
mov
jmp
add
pusha
mov
pusha
mov
push
mov
pushf
lea
jmp
pusha
mov
mov
jmp
pushf
call
bswap
bts
pusha
mov
cmc
shl
xor
neg
add
not
pusha
mov
jmp
not
pusha
pop
movw
inc
bswap
btr
shrd
cmc
lea
ror
sub
lea
jmp
pushl
push
mov
mov
jmp
bt
sub
jmp
bt
rol
mov
clc
call
mov
pushf
popl
clc
cmc
mov
cmc
xchg
push
pop
mov
clc
bt
bt
mov
clc
lea
mov
cmc
lea
rcr
call
not
rol
clc
mov
pop
pop
bts
mov
cmc
movsbw
bswap
call
lea
jp
pushf
pusha
mov
pusha
lea
jmp
call
btr
mov
cmp
jmp
rol
jmp
shld
xor
add
mov
bsr
xor
shr
mov
call
stc
add
jmp
pushf
test
add
pushf
pusha
lea
jmp
push
lea
jbe
mov
push
pusha
lea
jmp
mov
call
pushf
pushl
lea
jne
rcl
bsr
xorb
bswap
mov
call
bts
btc
and
mov
jo
clc
clc
pusha
add
call
jmp
call
add
pushf
pusha
pushf
push
mov
push
pushf
lea
jmp
cmp
pushf
add
movl
movb
mov
pushf
lea
jmp
call
mov
call
cmc
sbb
clc
mov
sbb
movsbw
mov
cmc
add
push
mov
movw
pusha
pusha
lea
jmp
add
jo
stc
pusha
sub
call
setno
ror
mov
sar
sub
add
btc
rcl
sar
inc
sub
sar
neg
mov
test
cmc
bt
shl
pusha
shr
jmp
sar
dec
rcr
dec
mov
pusha
clc
add
movl
pushl
push
lea
jmp
call
rol
shl
adc
rol
cmp
xor
lea
lea
inc
shl
ror
sub
lea
mov
movb
bt
call
jmp
adc
lea
shl
das
mov
shl
cmp
dec
neg
mov
stc
cmc
pusha
add
mov
mov
pushf
pusha
lea
jmp
pop
shl
mov
bts
mov
rcr
mov
bsr
mov
bt
pop
mov
pusha
movsbw
pushl
popl
pop
push
movl
rcr
rcr
shrd
neg
mov
cmp
pushl
jmp
lea
jge
pushf
xchg
stc
xchg
btc
push
pusha
mov
push
mov
btr
xchg
lea
movsbw
cmc
mov
cmc
clc
mov
pusha
bswap
jmp
call
mov
not
mov
push
cld
mov
cld
push
pusha
rep
sbb
call
pushf
pushf
mov
pushl
mov
call
xor
jmp
pushf
mov
pushf
pushf
push
movb
lea
jmp
movl
movzbw
mov
jmp
push
movw
movb
mov
jmp
call
jmp
lea
jmp
call
pushf
mov
pushf
clc
mov
movb
push
jmp
cmp
xor
movb
push
sub
jne
push
add
call
call
pusha
pushf
pushl
lea
jne
setae
btc
sub
bts
xorb
pushf
pushf
lea
mov
pushl
pusha
lea
jmp
movw
call
mov
mov
pushl
pushf
popl
jmp
test
add
push
mov
lea
jae
pusha
not
call
pusha
mov
pushf
popl
jmp
call
jmp
shr
lea
bswap
bsr
push
inc
sub
pusha
movzbw
call
shl
mov
pushl
call
lea
sbb
btr
sub
bswap
mov
pusha
mov
mov
lea
jmp
test
pusha
add
mov
pushf
mov
push
push
mov
push
lea
jmp
pushf
mov
pushf
movw
lea
jmp
pushf
cld
pusha
pushf
rep
or
rcr
pushf
cmp
mov
btc
mov
std
clc
pushl
popf
push
pushf
pushf
lea
jmp
mov
pushl
popl
mov
lea
jmp
mov
bswap
call
call
call
mov
pushf
pushl
push
lea
jmp
lea
ja
mov
rcl
xchg
shl
mov
aad
lea
aas
sub
dec
lea
xor
and
clc
adc
shl
sbb
sub
jnp
mov
bswap
lea
not
pushf
push
movzbw
xchg
cld
mov
pusha
lea
std
pushf
pusha
xchg
jmp
call
xor
bsf
mov
neg
add
not
jmp
mov
mov
lea
jmp
inc
setp
rcl
aas
mov
test
pusha
xchg
push
xor
pushf
add
jmp
pop
rol
mov
btr
add
xor
or
pusha
add
ror
pushf
setnp
movzbl
call
add
add
adc
bts
bsf
mov
bsf
btr
sete
rol
add
bswap
sar
pushf
xor
lea
bsf
sar
shl
neg
movsbw
add
pushf
shl
bt
add
pushf
movzbl
call
pusha
pushl
popl
movb
pushl
lea
jmp
rcl
cmc
rol
movsbw
movzbl
not
push
movzbl
bswap
dec
dec
setg
and
movzbw
rcr
rcr
mov
pushf
pusha
jmp
pushl
stc
cmp
shl
call
adc
sub
mov
dec
rol
sbb
mov
bt
stc
cmc
add
pushf
pushl
mov
movb
lea
jmp
pushf
mov
shr
rcr
adc
call
stc
mov
pusha
pushf
cmp
sub
pusha
call
bt
sub
jmp
pushf
pusha
mov
add
pushf
pushf
movb
pushf
lea
jmp
pushl
popl
pushl
pushf
lea
jmp
mov
pusha
pushf
popl
mov
pushl
popl
pushf
pushf
movb
lea
jmp
pusha
pushl
popl
pushl
pushf
pushl
lea
jmp
inc
movb
cmp
stc
call
pushf
mov
pushf
jmp
call
cwtl
mov
jne
pushf
mov
push
mov
pusha
jmp
bt
movzbw
movzbl
test
sar
xor
sbb
mov
clc
jmp
pushf
pushl
pushf
popl
jmp
mov
pushf
push
lea
jmp
pushf
mov
pushf
pushl
movb
lea
jmp
call
bt
jmp
push
mov
jmp
pushf
xor
movzbl
cmp
add
mov
bswap
pushf
jmp
mov
jmp
stc
add
pushf
jmp
sub
shld
dec
mov
cmp
inc
push
mov
mov
shl
pushl
shl
cmp
bswap
cmc
push
movsbl
inc
neg
push
mov
pushf
stc
sub
mov
not
mov
pushf
pushf
push
lea
jmp
call
mov
movb
mov
movw
mov
pushl
ret
shld
mov
btc
aam
rcr
cmp
pop
push
movzbw
aad
cltd
mov
or
aas
mov
cltd
call
call
ror
pushl
popl
movzbw
mov
push
movl
bt
btc
rcl
mov
bt
movsbw
rcl
rol
dec
shld
ror
add
xor
push
mov
inc
sar
shl
stc
bt
lea
pusha
sub
pusha
pusha
lea
jmp
mov
pushf
pushl
ret
inc
lea
mov
stc
bt
pusha
push
add
mov
mov
pushl
lea
jmp
or
dec
pusha
mov
pushf
pusha
call
pushf
pusha
push
not
cmp
test
call
mov
call
lea
mov
call
push
bt
not
clc
pushf
add
pushf
pushf
jmp
ror
rol
add
not
bsf
movzbl
dec
movzbw
movb
neg
mov
jmp
shld
mov
pushf
sub
mov
mov
pushf
movb
pushl
push
lea
jmp
push
pushl
pusha
jmp
stc
clc
cmp
pushf
not
pusha
xor
pushl
movb
lea
jmp
add
pusha
jmp
push
push
stc
shl
pushl
mov
pushf
pushf
popl
mov
mov
call
call
mov
call
movsbw
mov
jmp
mov
cmc
stc
mov
call
mov
bt
sub
call
not
test
mov
push
not
pushl
bt
sub
jmp
movw
cwtl
mov
pushl
mov
pushf
mov
pusha
lea
jmp
mov
push
pusha
pushf
mov
lea
jmp
clc
pushf
add
cmc
call
pushf
jmp
add
mov
pusha
stc
cmp
add
push
lea
jmp
call
pushl
movl
xchg
btr
btc
clc
mov
bt
bt
bts
btr
mov
mov
pushl
btr
pop
mov
bswap
pushl
popl
rcl
movl
bt
bswap
clc
clc
mov
stc
bt
bt
cmc
rol
cmp
clc
add
jl
not
bt
stc
bt
call
add
pushf
mov
jmp
call
push
pushf
mov
pushf
jmp
push
mov
mov
lea
jae
pusha
pushf
popl
pusha
pushf
call
pushf
popl
lea
jbe
pushf
movb
pusha
pushl
popl
pushf
pushf
mov
lea
jmp
call
call
not
bswap
inc
mov
clc
mov
call
pushf
popl
pusha
pushf
pushl
popl
movb
mov
push
lea
jmp
push
call
pusha
push
mov
call
sub
call
and
stc
neg
and
mov
cmp
clc
bt
add
push
pushl
pushf
mov
lea
jmp
mov
pushf
pushf
mov
pushl
ret
pusha
mov
pushl
pushl
mov
pushf
lea
jmp
rol
adc
mov
pusha
add
pusha
pushf
pushf
lea
jmp
inc
not
mov
clc
test
sub
cmp
add
call
test
pushf
add
cmp
sub
pusha
mov
push
movb
pushf
movb
lea
jmp
pushf
mov
movb
mov
call
push
mov
pushl
mov
pushf
lea
jmp
jnp
cmp
bt
push
shr
mov
mov
jmp
pusha
pusha
pushf
pushf
mov
push
pushf
lea
jmp
add
movzbl
btr
bsr
mov
xor
movsbw
bswap
push
sub
rol
rol
inc
btc
setle
sar
sub
sub
sar
rol
and
xor
sbb
add
mov
mov
mov
test
test
add
pushf
jmp
jmp
mov
not
pushf
mov
pushf
lahf
or
movzbl
mov
mov
mov
stc
mov
rol
bsf
bt
mov
not
rcr
mov
mov
clc
not
bsr
mov
btr
mov
shl
shrd
pushl
popf
pushl
pop
pushf
mov
call
bt
bt
clc
xchg
pop
jmp
clc
add
call
pushf
call
or
mov
jmp
call
pushl
lea
jne
mov
push
movw
mov
pushf
lea
jmp
push
clc
mov
pushf
pusha
add
pushf
pushf
pushf
lea
jmp
btr
test
clc
bswap
mov
btc
shld
add
call
lea
push
pushf
pushf
xchg
not
not
mov
lea
jne
pusha
std
cld
jmp
sub
jmp
mov
call
mov
movb
movl
mov
lea
jmp
sar
call
jmp
pushf
mov
jmp
test
add
pusha
pusha
pushf
popl
push
call
cmc
sub
push
neg
pushf
movb
lea
jmp
pusha
mov
mov
call
jmp
ror
test
cmp
stc
add
clc
push
cbtw
stc
pushl
bt
cwtl
cmp
bt
pushf
pushf
sub
pushf
call
lea
jne
btr
sbb
mov
xorb
movsbl
bswap
pusha
lea
mov
pusha
lea
jmp
mov
jmp
cmc
call
mov
inc
pushf
inc
mov
call
cmp
pushf
lea
jne
and
xorb
movzbw
mov
pop
push
pushf
pushf
pushf
lea
jmp
add
jmp
pushf
popl
movw
mov
pushf
pushl
popl
pushf
lea
jmp
call
btc
mov
shld
mov
jmp
lea
clc
bt
clc
stc
add
cmp
test
call
call
cmc
sub
test
cmc
stc
shr
push
mov
jmp
jmp
add
inc
mov
test
push
pusha
sub
pusha
call
mov
call
push
dec
cmp
add
push
mov
movb
mov
push
lea
jmp
sub
pusha
rol
jmp
push
not
jmp
lea
je
push
jmp
call
pusha
mov
bts
mov
xchg
mov
mov
rol
not
pushf
pushl
popl
rcr
bts
ror
rol
movl
clc
ror
mov
lea
call
mov
movzbl
bswap
lea
movsbw
mov
pop
call
dec
shl
and
rcl
mov
stc
add
pushf
push
lea
jmp
push
mov
movw
movb
lea
jmp
pusha
mov
movw
dec
stc
bt
pusha
not
jmp
or
pushf
xor
pushf
mov
stc
stc
add
pushf
mov
call
mov
pushf
lea
jmp
inc
bt
xor
pushl
bt
mov
test
push
sub
jmp
mov
movb
jmp
pushf
call
call
mov
mov
jmp
pushf
call
mov
call
mov
pushf
mov
jmp
pusha
xor
call
not
cmc
not
pushf
push
and
movb
pushf
mov
mov
push
push
movb
pushf
pushf
popl
movb
pushl
popl
movb
lea
jmp
mov
movb
lea
jb
push
jmp
pusha
pushl
mov
movb
jmp
adc
mov
clc
sub
call
mov
push
pusha
pushf
mov
lea
jmp
xadd
pusha
bswap
mov
add
bsr
add
mov
pop
inc
mov
lea
inc
inc
rcl
or
movsbw
lea
xor
not
call
bsr
sub
dec
not
push
jmp
movb
mov
pushl
pusha
push
mov
movb
call
test
clc
add
push
pushf
lea
jmp
movb
pushf
mov
mov
pushf
pusha
lea
jmp
pusha
pushf
pushf
mov
pushf
push
lea
jmp
movzbl
push
xchg
movsbw
mov
pushf
bswap
mov
jmp
sub
movw
jmp
or
rdtsc
pushf
cmp
clc
sub
call
pushf
bt
mov
lea
push
call
pushf
call
call
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
aad
aam
mov
cmc
jmp
pushl
pushf
jmp
mov
movb
jmp
movl
stc
bsr
mov
or
sub
call
add
pusha
pushl
lea
jmp
bts
pushf
mov
cmp
pushf
cmc
pushf
add
mov
lea
jmp
mov
jmp
mov
jmp
test
test
lea
clc
bt
movw
cmc
xor
stc
cmc
cmc
bt
ror
pushf
stc
sub
push
call
jmp
mov
pusha
pusha
movb
lea
jmp
pusha
pushl
pusha
call
mov
movb
call
bswap
rol
bsf
movzbw
stc
pusha
and
push
bswap
mov
cmp
test
mov
add
jmp
bt
mov
pushf
clc
pushf
sub
stc
shr
pushf
jmp
pusha
push
jmp
call
and
pusha
movzbl
jmp
call
pushf
call
add
test
cmc
push
bt
shld
mov
mov
call
bts
pushf
mov
sbb
inc
dec
mov
stc
test
pusha
pushf
add
call
mov
mov
lea
pusha
mov
pusha
mov
push
pushf
lea
jmp
push
pushl
pushf
popl
mov
mov
jmp
mov
movb
lea
jmp
call
cmp
movb
jmp
add
pushf
call
pushl
pushf
popl
pushf
pushf
mov
pushl
popl
pushf
movb
pushf
mov
lea
jmp
pushf
xor
jmp
cmp
call
pushf
call
bt
pushf
sub
clc
call
push
pushf
popl
bt
jmp
dec
clc
stc
cmp
test
not
test
add
clc
jmp
mov
push
push
movw
lea
jmp
cwtl
movsbw
pusha
mov
cmp
push
pushf
add
jns
add
jp
push
movl
mov
pushl
jmp
sbb
mov
bt
sub
test
cmc
stc
stc
shl
push
call
jmp
cmp
call
shl
mov
bts
btr
mov
push
jmp
rol
mov
cmp
bt
sub
call
jmp
pushf
pusha
call
call
add
push
lea
jmp
call
pusha
mov
pusha
lea
jmp
or
bt
cmp
mov
cmc
pusha
push
pusha
add
push
lea
jmp
mov
push
pushf
pusha
lea
jmp
pushf
pop
and
neg
mov
pushf
call
pushf
pushf
mov
push
pushf
lea
jmp
jmp
mov
jmp
jmp
lea
pusha
lea
jmp
bt
add
bt
shrd
pusha
call
pushf
mov
movb
lea
jmp
dec
das
movzww
pusha
sub
pusha
movb
mov
call
movb
mov
jmp
mov
call
movsbw
lea
movb
pushl
pushl
pusha
lea
jmp
push
mov
push
pushf
popl
mov
jmp
pusha
cmp
push
sub
mov
pushl
mov
push
pushf
lea
jmp
pusha
push
mov
pop
movl
mov
call
xor
neg
movsbw
movzbl
or
inc
stc
mov
bt
cmc
test
sub
mov
cmp
add
push
pushf
push
mov
pushf
push
push
pushl
ret
bswap
shr
das
btc
notl
call
sbb
mov
sub
movzww
pushf
call
bsr
shl
bsr
aas
mov
cmc
pusha
stc
sub
pusha
add
movb
push
jmp
sub
cmc
movw
neg
cmp
test
add
mov
mov
sub
call
shr
call
xor
dec
dec
movsbw
bswap
inc
cmc
btr
movzbl
movzbl
clc
mov
pushf
stc
cmc
rol
push
mov
pushf
push
pushl
ret
rcl
ror
xor
shl
not
inc
add
stc
xor
rcl
dec
shl
and
cmc
setp
sub
clc
mov
cmp
sub
jns
pusha
pusha
mov
pushf
movb
push
push
lea
jmp
mov
mov
movl
pusha
pusha
lea
jmp
call
pushf
lea
pushf
lea
bsf
sub
dec
aad
lea
bsr
bt
sar
add
and
adc
bt
sub
lea
pushf
lea
mov
pusha
pushf
popl
mov
call
jmp
push
push
push
not
push
mov
lea
jmp
pushl
popl
pusha
lea
jmp
bts
shl
sar
mov
shl
shr
mov
jmp
pushf
pusha
pushf
popl
movb
call
bt
adc
cmp
mov
stc
test
stc
call
setp
mov
push
movb
lea
call
push
push
pushl
popl
pushl
pushf
lea
jmp
pushf
lea
movl
push
pusha
mov
lea
jmp
inc
jmp
mov
pushf
pushf
pushf
pushf
pushf
popl
jmp
sbb
pushf
rcr
and
mov
shr
mov
cmp
jmp
pusha
pushf
jmp
push
pusha
push
mov
push
lea
pushf
jmp
cmc
inc
movzbw
mov
push
test
cmc
mov
mov
pushf
pusha
add
jmp
mov
movw
pushf
pushl
call
movsbw
mov
pop
mov
pushl
pushf
lea
jbe
cld
cld
push
movl
rep
dec
or
not
cld
mov
sub
cld
shl
mov
std
std
std
pushl
popf
pusha
push
pushf
lea
jmp
jmp
cmc
mov
rol
jmp
movl
jmp
jmp
call
or
mov
inc
not
call
sub
adc
xor
movsbw
lea
movzbl
stc
mov
cmc
jmp
stc
and
push
call
bswap
mov
dec
ja
sub
mov
jmp
mov
mov
movzbw
jmp
mov
pushf
push
mov
pusha
mov
push
pushf
mov
pushf
pushf
popl
call
push
pushf
popl
push
jmp
call
mov
xchg
pop
pop
movzbw
pushf
popl
dec
mov
bsf
shl
call
add
pusha
mov
pushf
push
lea
jmp
call
push
pusha
pushl
pushf
popl
call
push
push
mov
pushf
popl
bt
push
mov
stc
rcr
bts
mov
pushf
bswap
call
rol
mov
neg
movzbw
sub
push
pushf
not
movzbw
inc
neg
lea
add
sub
movsbw
pusha
lea
mov
pusha
pushl
lea
jmp
push
add
call
add
stc
sub
push
pushf
push
inc
call
pusha
xchg
mov
cmp
mov
pushf
pushf
stc
add
push
mov
pushf
pushf
shrd
push
jmp
cbtw
call
call
push
pushf
mov
mov
push
mov
lea
jmp
mov
pushf
pushf
movl
push
mov
jmp
mov
mov
mov
movb
movb
pushf
lea
jmp
pusha
pusha
inc
rcl
rol
call
bts
mov
call
mov
pushl
mov
pushf
call
push
cmp
and
jmp
cmp
sar
mov
dec
clc
mov
call
jmp
pusha
inc
bt
sub
pushf
call
call
movl
mov
lea
jne
or
cmp
mov
jmp
xor
clc
bt
pushf
add
jmp
jmp
call
pushf
mov
pushf
movb
pushf
popl
call
pushl
pusha
mov
push
lea
jno
pusha
mov
pusha
lea
jmp
movb
movb
pushl
mov
call
call
push
not
bt
test
movb
pushf
add
push
pushf
xor
pushf
test
call
pushf
lea
jb
pushf
pushf
popl
push
pushl
popl
push
pushf
mov
lea
jmp
lea
je
pusha
call
pushf
movb
pushl
popl
pushl
pushf
pushf
mov
lea
jmp
xor
shld
mov
clc
cmc
test
add
push
push
lea
jmp
pushf
jmp
mov
push
push
mov
movw
lea
jmp
jmp
pushf
mov
mov
pusha
mov
pushf
jmp
mov
pushf
call
mov
pushf
pushf
pushf
popl
pusha
jmp
pushf
mov
mov
jmp
push
pushl
popl
pusha
push
pushf
pushf
lea
jmp
jmp
mov
shl
shr
pushf
mov
rcl
dec
shr
mov
test
cmp
test
add
pushf
shrd
pusha
jmp
pushf
popl
test
call
pushf
pushl
pushl
popl
pusha
lea
jmp
cmc
shr
call
sbb
mov
pusha
pushl
add
mov
lea
jmp
pushf
mov
pushl
pushl
push
lea
jmp
stc
mov
bts
bswap
xchg
bts
btr
mov
mov
pop
rcl
mov
pop
mov
movzbw
jmp
aam
adc
neg
rdtsc
test
test
jmp
pushl
pusha
pushf
popl
pushf
jmp
pushf
jmp
jmp
mov
pushf
lea
jmp
movl
mov
movw
pushf
pushf
lea
jmp
clc
sub
jmp
mov
pushl
popl
pusha
movw
push
mov
lea
jmp
jmp
movw
mov
mov
jmp
mov
stc
cmp
pushf
cmp
add
mov
lea
jmp
test
or
call
jmp
bt
jmp
pushf
mov
mov
lea
jmp
push
not
call
pushf
popl
mov
push
call
clc
cmp
not
test
cmc
xor
clc
xor
call
mov
pushf
mov
movb
pushl
lea
jmp
clc
neg
jmp
lea
jb
push
mov
pushf
pushf
pushf
push
lea
jmp
pusha
pusha
xchg
clc
movsbw
mov
and
movzbw
mov
bts
mov
adc
neg
mov
inc
mov
rol
mov
call
push
mov
movb
pushf
popl
pushf
movb
pushl
popl
mov
lea
jmp
add
cmc
pushf
mov
pushl
movl
sub
pushl
call
jmp
test
movzbl
pushf
mov
xor
mov
test
test
clc
neg
cmc
jmp
btr
dec
mov
push
pusha
jmp
pushf
mov
mov
push
pusha
pusha
call
mov
movw
pushf
push
movb
mov
jmp
pusha
mov
pushl
movb
lea
jmp
push
pushf
call
push
pushf
mov
pushl
pushf
mov
jmp
cmc
clc
sub
jmp
lea
bsf
mov
cmp
cmp
sub
push
push
mov
pusha
mov
pushf
lea
jmp
sub
clc
cmc
lea
cmp
xor
bt
bt
push
sub
jmp
mov
btr
rol
call
clc
cmc
not
bt
stc
stc
bt
rol
push
call
pushf
movb
mov
mov
push
pusha
mov
movb
pusha
lea
jmp
pushl
popl
pushf
push
push
pushf
lea
jmp
test
clc
call
push
mov
xchg
push
movsbl
call
jmp
push
push
call
cmp
add
lea
jb
pushf
pushl
mov
pusha
lea
jmp
call
movb
movb
xchg
sub
jle
push
cmp
pushf
xor
add
ja
sub
push
cwtl
stc
stc
pushl
push
sub
pushf
push
mov
pushf
push
lea
jmp
pusha
pushf
pushl
call
mov
pushf
mov
pushf
lea
jmp
cmc
bswap
mov
jmp
pushl
popl
pushf
push
movw
pushf
lea
jmp
sub
movw
lea
jmp
clc
bt
mov
pushl
pusha
movb
pushl
sub
call
bts
bsf
mov
jmp
call
rol
clc
xor
call
movsbw
xchg
xchg
movzbw
call
pusha
push
bt
xchg
pushf
mov
lea
bt
cmc
bts
mov
clc
rcl
mov
bts
mov
bswap
mov
pusha
lea
movw
ror
mov
btc
xchg
stc
rcr
pushl
popl
rol
rcl
rol
lea
movl
bt
clc
bt
mov
bswap
rol
neg
shld
lea
bts
xor
movsbw
lea
inc
neg
lea
test
test
pushf
test
sub
pushf
pushf
push
lea
jmp
mov
push
lea
jmp
dec
stc
test
clc
call
mov
jmp
mov
pushf
pusha
lea
jmp
aas
bswap
clc
clc
mov
shl
shl
mov
cmc
clc
cmp
add
pusha
pusha
pushf
mov
pushf
lea
jmp
shl
bsr
mov
bt
cmc
xchg
push
stc
stc
pushf
xor
test
stc
call
shl
bsr
pushf
mov
cmp
bt
clc
sub
jmp
cmc
sar
mov
shr
mov
call
mov
mov
jmp
pushl
popl
pushf
mov
pusha
lea
jmp
cmc
cmp
not
bt
jmp
movsbw
not
movsbw
mov
pusha
inc
bsr
bt
shrd
jmp
call
mov
bt
mov
movsbl
mov
bts
movzbw
movsbl
mov
movzbl
bt
bswap
mov
movw
rcl
pushl
popl
lea
bts
btc
movl
not
mov
stc
bswap
rol
rcr
xor
dec
push
inc
sub
test
stc
lea
cmc
clc
cmp
sub
pushf
push
lea
jmp
clc
mov
call
push
mov
pushf
movb
pushf
push
lea
jmp
mov
pushf
push
jmp
pushf
jmp
neg
mov
test
pusha
sub
pusha
mov
mov
push
movb
pushf
lea
jmp
daa
aad
call
mov
jmp
pushl
popl
movw
pusha
pushf
lea
jmp
mov
pushf
mov
pushl
pushf
push
pushl
lea
jmp
clc
xor
push
pushf
lea
jmp
rcl
aas
xadd
mov
movzbl
bswap
xadd
pusha
mov
sub
mov
clc
add
bt
shld
movw
mov
jmp
jmp
shld
bsr
mov
pusha
jmp
or
call
bsr
rol
mov
cmc
rcl
add
adc
mov
call
jmp
call
btc
mov
movzbw
btr
bsf
mov
push
test
add
pushf
mov
pusha
mov
pushf
lea
jmp
mov
pusha
pushf
movw
pushf
lea
jmp
jmp
mov
pushl
mov
movb
mov
jmp
pusha
pushf
mov
pushf
movb
lea
jmp
movb
jmp
stc
cmc
lea
cmc
call
movb
pushf
pushl
popl
push
pushf
mov
lea
jmp
pusha
pushl
call
pusha
call
push
jmp
mov
call
lahf
mov
pushf
mov
mov
jmp
movb
mov
movb
lea
jmp
call
pushf
mov
push
call
pushf
popl
bt
mov
jmp
movb
xor
bt
pushl
xor
mov
movl
cbtw
cmc
stc
cwtl
movb
stc
jmp
pusha
pusha
cmp
sub
mov
bt
add
pushf
pushf
popl
mov
mov
pushl
popl
pushf
lea
jmp
pusha
pushl
popl
push
push
pushf
lea
jmp
call
xor
clc
pushf
mov
movb
cmc
pushf
sub
movb
mov
mov
pushf
movl
lea
jmp
pushl
popl
bt
pusha
stc
add
push
test
pushl
popf
push
pushf
mov
lea
jmp
push
pushl
popl
pusha
pushl
mov
push
lea
jmp
pushf
lea
cpuid
jae
stc
sub
test
call
btr
mov
ja
add
call
bt
test
pusha
cmpl
call
dec
shr
seta
adc
pushl
not
call
sub
jmp
pusha
pusha
movb
lea
jg
pushf
pushf
call
pushl
popl
pushf
pushf
movb
mov
lea
jmp
push
push
jmp
pusha
dec
adc
shl
rol
shld
not
add
sar
shl
btr
add
sbb
clc
mov
cmc
test
jmp
jmp
call
lea
je
push
pushl
popl
mov
lea
jmp
jmp
pushf
mov
pushl
pushl
pushf
movb
lea
jmp
add
mov
pusha
call
movzbw
mov
cmp
mov
stc
jmp
push
mov
jmp
jmp
call
cmc
add
pushf
lea
jmp
not
rcr
setno
and
rdtsc
clc
pusha
pushf
stc
sub
jmp
cmc
clc
rol
jmp
pushf
mov
push
lea
jmp
call
jmp
pushf
pushf
inc
pushl
pushf
push
call
call
std
shld
pusha
mov
lea
neg
pop
shld
shl
test
pop
btc
sbb
test
shr
pop
sbb
ror
pop
jmp
pusha
pushf
mov
movb
pushf
lea
jmp
popf
xor
mov
pop
xchg
scas
fisubl
mov
xchg
lea
movsl
mov
gs
lea
ljmp
scas
cmp
lea
push
mov
scas
loopne
mov
fisttpl
mov
push
rorl
inc
bound
scas
jo
mov
xor
scas
ljmp
scas
push
int3
lea
fisttpl
mov
dec
sbb
scas
pop
or
scas
rolb
scas
outsl
movsl
mov
dec
sbb
scas
dec
sbb
scas
sub
lea
and
mov
push
int3
lea
or
mov
cmp
lea
xchg
lea
icebp
cmc
lea
push
orl
jge
mov
push
int3
lea
pop
movsb
lea
rolb
scas
inc
bound
scas
dec
in
scas
inc
bound
scas
gs
lea
xor
scas
aam
lea
mov
orl
insb
inc
lea
dec
in
scas
and
lea
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
pop
iret
mov
mov
pop
lea
pop
movsb
lea
jl
lea
fisttpl
mov
lods
out
scas
jge
mov
insb
inc
lea
inc
cmp
mov
jb
mov
fisttpl
mov
loope
lea
xchg
lea
push
rorl
icebp
cmc
lea
push
mov
scas
idivl
mov
idivl
mov
pop
arpl
scas
xor
scas
xor
scas
xchg
orb
jle
lea
pop
xchg
scas
pop
arpl
scas
ljmp
scas
icebp
cmc
lea
in
orb
push
int3
lea
pop
arpl
scas
jb
lea
idivl
mov
scas
ja
scas
insb
inc
lea
jns
scas
jbe
mov
and
mov
loope
lea
loope
lea
ljmp
scas
push
mov
scas
sub
mov
xor
scas
push
rorl
push
mov
dec
xchg
mov
idivl
mov
or
lea
repnz
scas
xor
scas
jo
lea
lods
out
scas
jb
lea
popf
xor
lea
rolb
scas
jb
mov
pop
arpl
scas
cmp
mov
scas
ja
scas
push
mov
scas
xchg
lea
xor
scas
insb
inc
lea
cmp
mov
in
orb
fisubl
lea
and
pop
mov
call
pushf
clc
sub
pushf
pushl
jmp
cmp
neg
push
cmp
sub
lea
jmp
mov
mov
pusha
lea
jmp
aas
mov
neg
or
cmc
xor
mov
push
stc
sub
pushf
bt
jmp
shr
push
pushl
mov
pushf
jmp
call
lea
je
cmp
push
push
stc
sub
cmp
xchg
pusha
mov
jmp
not
add
adc
push
movzbl
clc
cmp
test
xor
jmp
pusha
jmp
call
movb
mov
pusha
pushl
jmp
pushf
mov
pushf
movb
mov
push
push
lea
jmp
pushl
popl
mov
lea
jmp
inc
clc
bt
pusha
stc
cbtw
lea
jb
push
cwtl
stc
pushf
push
pusha
sub
push
jmp
push
movb
mov
pushf
pusha
mov
jmp
cmc
aam
mov
rol
mov
clc
jmp
pushf
popl
pushl
mov
push
pushl
popl
movb
push
movw
lea
jmp
push
sub
stc
cmc
shr
movb
push
push
mov
jmp
mov
pushf
mov
call
mov
push
call
mov
lea
shl
mov
mov
cmc
add
cmc
not
add
not
pusha
mov
movb
call
cmp
and
pushf
pushf
push
mov
mov
jmp
pushl
popl
pushf
mov
mov
lea
jmp
lea
jbe
inc
test
jmp
setno
mov
jmp
push
movw
mov
call
pushf
pushl
popl
pushf
pushl
mov
mov
lea
jmp
mov
jmp
mov
mov
pushl
popl
mov
pushf
lea
jmp
jmp
jmp
pushl
popl
pushf
lea
jmp
call
jmp
not
lea
pushf
bswap
mov
pusha
mov
mov
mov
pushf
lea
jmp
movw
clc
shl
call
mov
push
jmp
movb
pushl
popl
pushf
lea
jmp
rol
push
not
push
xor
push
pushl
movb
lea
jmp
push
movb
mov
pusha
pusha
mov
call
push
pushf
mov
mov
pushl
push
lea
jmp
jmp
pusha
jmp
jmp
neg
bswap
mov
clc
sub
push
call
pusha
pusha
jmp
xor
pushl
xor
mov
clc
stc
mov
add
je
add
call
mov
pushl
pushf
push
lea
jmp
shrd
movzbl
btc
mov
bt
cmp
add
push
pushf
lea
jmp
mov
pusha
pushl
ret
not
mov
pushf
call
lea
jne
inc
btr
add
xorb
bswap
bswap
pop
push
lea
jmp
dec
rol
mov
setno
sbb
bswap
bt
mov
bt
add
call
push
jmp
bsf
aaa
or
mov
cmp
sete
cmc
mov
cmp
add
pusha
mov
push
mov
pushf
push
pushf
movb
lea
jmp
rol
stc
or
dec
mov
neg
pushf
ror
mov
clc
cmp
mov
cmc
sub
test
jmp
mov
jmp
and
mov
test
ror
add
xor
sub
bts
mov
cmc
shl
pusha
jmp
add
pushl
lea
jmp
pusha
jmp
mov
rcr
rol
rcl
btc
sar
xor
push
not
movsbw
not
inc
shr
pushf
lea
cmc
bt
cmc
sub
pusha
push
lea
jmp
bt
mov
cmc
push
clc
pushf
mov
cmp
xchg
movsbw
inc
lea
mov
shld
push
mov
not
sar
mov
sar
pushl
popl
test
bsr
stc
movl
pusha
bt
mov
push
cmc
mov
push
sub
jmp
call
neg
movzbw
mov
jmp
shld
notl
inc
rol
mov
jbe
pushf
pushf
pushf
sub
pushf
and
pushf
pushf
popl
call
not
test
test
xor
movb
pushf
lea
jmp
shl
and
bswap
mov
call
jmp
pushl
popl
movb
movl
pushf
push
lea
jmp
call
lea
jne
rol
call
mov
pusha
add
pushf
mov
lea
jmp
call
mov
call
mov
push
pushl
lea
jmp
pushf
mov
call
call
pushf
mov
pushf
push
movl
lea
jmp
push
push
mov
pushf
pusha
lea
jmp
pushf
popl
mov
clc
cmc
mov
xchg
pusha
lea
bswap
clc
xchg
jmp
mov
bswap
mov
bts
pop
mov
bt
movsbw
clc
pushl
popl
clc
btc
pushl
pushf
movl
lea
bt
mov
cmc
clc
bt
clc
rol
cmp
pusha
mov
not
add
jl
push
cmp
pushf
xor
pushf
pusha
lea
jmp
not
movb
cmc
and
push
mov
call
pushf
cmc
cmc
xor
movb
sub
mov
pushf
call
shl
mov
not
mov
or
mov
rcl
rol
mov
stc
call
jmp
rcr
test
mov
call
mov
mov
mov
pushf
mov
lea
jmp
mov
pusha
jmp
push
call
pushl
popl
pushl
movb
lea
jmp
js
pusha
mov
jmp
sar
aam
or
mov
call
pushl
popl
mov
movb
lea
jmp
mov
cmc
push
sub
mov
pushf
dec
pushf
call
jmp
pushf
pushf
push
pushf
pushf
popl
pushf
push
pushl
popl
mov
lea
jmp
inc
ror
notl
movsbw
mov
pushf
jmp
movb
push
mov
mov
lea
jmp
pusha
pusha
push
mov
push
jmp
pusha
pushf
popl
stc
stc
xchg
pusha
call
jmp
add
jmp
cmp
cmp
lea
cmc
jmp
pushl
ror
bt
bt
add
jg
sub
test
pusha
cmc
mov
pusha
mov
test
sub
jmp
call
lea
je
jmp
rep
pop
shr
mov
not
add
pop
mov
movw
push
stc
stc
pushl
popf
mov
lea
jmp
jmp
test
stc
cbtw
mov
call
pushf
popl
pusha
jmp
bt
pusha
pushl
popl
cmp
stc
add
cld
pushl
popf
mov
push
lea
jmp
add
movl
pushl
push
movw
lea
jmp
pushl
call
pusha
pushf
pushf
popl
mov
clc
stc
pushf
xchg
bswap
bswap
rcr
pop
mov
rcl
mov
bswap
mov
cmc
bt
mov
rol
pushl
mov
bts
movzbl
mov
movzbw
mov
btc
pushl
popl
push
rol
ror
bts
movl
lea
mov
not
rol
shrd
clc
jmp
pushf
mov
jmp
push
pushf
add
pusha
lea
jmp
pusha
pushf
popl
clc
pushf
pushf
xchg
push
bswap
mov
lea
btr
lea
mov
btr
push
xchg
bts
lea
jno
push
btr
push
xchg
lea
movzbw
not
push
rcr
rol
jle
ror
push
rcr
xchg
cmc
stc
pushl
pushf
stc
movl
bt
not
ror
mov
xchg
push
bts
movzbw
rol
mov
movw
shl
add
cmc
rcr
movsbw
stc
ror
rcr
lea
btc
sub
rol
and
sub
clc
mov
call
bt
cmp
mov
call
pushl
popl
pushf
pushf
mov
push
lea
jmp
call
jmp
mov
movzbl
test
lea
movzbw
neg
clc
neg
sub
push
lea
call
sub
push
and
jmp
sub
pushf
mov
push
mov
push
lea
jmp
daa
neg
sar
mov
mov
sbb
mov
pusha
stc
add
call
push
movb
jmp
mov
mov
pusha
pushf
pushl
lea
jmp
pushl
popf
pusha
push
pushf
push
lea
jmp
jmp
mov
dec
pushl
stc
clc
clc
ror
jmp
pusha
movl
pushl
pushf
pushf
mov
push
mov
pushf
pushf
pushl
ret
mov
pushf
push
pushl
lea
jmp
mov
mov
mov
movzbl
pushf
call
add
jmp
pusha
lea
jmp
clc
rcl
shr
daa
mov
btr
rol
rol
sub
mov
rcl
mov
cmp
call
mov
pushf
cwtl
bt
stc
clc
lea
jge
sub
call
not
pushf
popl
rol
rcr
cmc
mov
mov
clc
rol
push
movzbw
rcr
setnp
push
call
bts
rol
stc
call
push
bt
bt
xor
sar
neg
bts
add
jmp
lahf
mov
movzbl
mov
pusha
movsbw
push
mov
movl
pushf
pushl
push
pushl
ret
clc
not
ror
mov
bt
add
push
lea
jmp
mov
pushf
movb
push
pushl
lea
jmp
cmp
mov
test
sub
push
pusha
cmc
mov
shl
movw
mov
pusha
mov
jmp
jmp
mov
cmp
pushf
mov
clc
call
rcl
stc
shl
clc
mov
call
pushf
popl
mov
call
lea
jne
cmc
pushf
cmp
sub
jmp
clc
mov
pushf
mov
clc
call
mov
push
pusha
call
mov
mov
pushf
pushf
pushf
mov
mov
movb
mov
lea
jmp
mov
lea
jl
pusha
movw
pushl
pushf
popl
movw
pusha
pushf
stc
mov
call
pusha
pusha
mov
movw
pushl
push
movw
lea
jmp
jmp
mov
pushl
pushf
lea
jmp
pushf
popl
push
movb
call
pushf
jmp
btc
pushf
pusha
mov
cmc
bt
clc
pushf
add
movb
mov
lea
jmp
pushf
pusha
pushf
push
pushf
popl
movl
pushl
pushf
jmp
push
mov
pusha
movw
pushf
pushf
lea
jmp
shr
pop
mov
or
btc
mov
movw
mov
bsf
call
stc
clc
rol
mov
inc
jmp
jmp
jmp
lea
jne
pushf
sub
jmp
pushf
pusha
pushf
popl
pushf
call
pushf
pushl
popl
pushf
push
lea
jmp
sub
mov
call
jmp
pusha
push
movb
mov
call
pusha
inc
clc
mov
cmp
call
pushf
popl
bt
clc
mov
mov
pusha
stc
mov
cmc
clc
test
mov
bswap
ror
bswap
btr
mov
mov
bsf
btc
mov
shrd
stc
rol
mov
shrd
cmc
shr
shld
mov
ror
mov
neg
pushl
popl
rol
sub
xor
movl
shr
rol
bts
shrd
mov
movb
pushl
cmc
sub
clc
push
neg
mov
push
lea
jmp
mov
pushf
lea
jmp
adc
bt
mov
bt
jmp
pushf
jmp
pushf
mov
mov
movb
pusha
movb
lea
jmp
mov
movb
sub
jmp
mov
call
pusha
push
pushf
popl
rol
btr
or
mov
xchg
pop
sar
ror
mov
rcl
btr
jmp
divl
pushf
pushf
call
pusha
lea
jne
or
xor
ror
xorb
lea
pop
pushf
pushf
mov
lea
jmp
sub
pushf
pushf
add
movb
call
jmp
pushl
rep
test
bswap
jmp
jmp
clc
rol
pushf
mov
cmp
movb
neg
pushf
dec
cmc
pusha
sub
cmc
mov
bt
clc
test
pushf
sub
movw
mov
push
movw
pushf
movb
lea
jmp
pushl
popf
push
push
lea
jmp
mov
push
pushf
movb
pushf
pushl
ret
push
add
pusha
movb
mov
pushl
lea
jmp
inc
stc
bt
cmp
cmp
xor
jmp
movsbw
jmp
call
clc
sub
pushf
pusha
call
pushf
pushf
popl
call
mov
call
pushf
popl
movb
pushl
popl
movw
movb
movb
mov
lea
jmp
mov
mov
xor
mov
call
mov
mov
mov
movw
push
movl
lea
jmp
lea
movzbw
mov
pusha
mov
push
lea
jmp
bsr
bsr
shld
mov
mov
shl
mov
jmp
pusha
movb
pushf
jmp
mov
call
jmp
pushl
popl
pushf
push
lea
jmp
xor
mov
test
bt
mov
push
test
add
mov
pushf
pushf
push
mov
movl
lea
jmp
xor
pushl
bt
pusha
xchg
jmp
mov
push
jmp
mov
pop
xchg
movsbw
bswap
xchg
push
jmp
rcl
mov
test
pusha
jmp
cld
pushf
call
stc
mov
jmp
mov
lea
jne
movsbw
shl
push
xorb
lea
jmp
mov
pusha
mov
pushf
movb
lea
jmp
mov
rcr
ror
clc
pushf
rol
neg
xor
movsbl
inc
add
rcl
lea
movb
sub
pusha
pusha
lea
jmp
call
push
pusha
mov
stc
pusha
cmp
jmp
not
push
jmp
push
mov
push
lea
jne
push
mov
mov
jmp
call
mov
pusha
pushf
pushf
pushl
ret
sub
lea
jge
mov
pusha
pushf
push
push
lea
jmp
call
jmp
pushf
call
inc
pop
inc
lea
bts
sub
bsr
mov
xor
sar
bsf
mov
pushf
add
sub
dec
mov
mov
pushf
sbb
add
btr
xor
jmp
call
call
pushf
call
pushf
popl
call
mov
push
lea
std
push
pusha
mov
jmp
not
stc
mov
clc
mov
test
call
xchg
not
pushl
movzbw
pushf
inc
and
neg
lea
sub
btc
sub
movsbl
movsbw
movsbw
mov
mov
pusha
push
push
pushf
lea
jmp
push
cmp
jmp
mov
call
mov
pusha
mov
mov
lea
jmp
btr
jmp
mov
push
jmp
pushf
pushl
pusha
call
test
push
push
add
movb
push
pushf
lea
jmp
cwtl
test
jmp
pushl
test
test
shr
pushl
pushf
pushl
mov
mov
call
bswap
pushf
lea
movsbw
bswap
lea
mov
mov
btr
ror
cmc
ror
add
test
dec
setge
mov
pushl
xor
neg
xor
clc
dec
sub
bsf
not
setle
add
ror
pusha
bsf
call
shl
aad
movsbw
mov
mov
clc
push
cmp
add
pushf
pushl
call
push
jmp
movb
jmp
mov
rol
adc
cmc
mov
pusha
and
mov
movb
cmc
cmc
add
call
pusha
movb
mov
call
pushf
pusha
mov
push
pushl
pushl
lea
jmp
pushl
popl
pushl
pushf
movb
lea
jmp
clc
sub
pushf
call
jmp
mov
pushf
push
movw
lea
jmp
push
bt
pushf
jmp
sub
call
mov
movsbw
not
lea
movzbw
xchg
jmp
not
stc
pushl
and
call
not
not
pushl
dec
dec
ror
rol
btc
and
shl
mov
pushf
call
shrd
aam
stc
mov
cmp
shl
jmp
sub
pushf
add
pushf
pusha
mov
pushf
popl
call
not
mov
push
jmp
pushf
mov
pushf
pushf
lea
jmp
push
clc
sub
call
bsr
movsbl
daa
mov
and
mov
push
stc
pusha
add
call
movw
push
mov
push
push
movb
pusha
mov
call
mov
test
sub
add
pushf
not
mov
pushl
pusha
mov
pushf
lea
jmp
movw
jmp
inc
setl
test
cmc
bts
sub
not
sub
pushf
cmc
ror
dec
dec
shl
inc
sub
or
add
mov
clc
pushf
stc
push
add
push
jmp
push
call
pushl
jmp
mov
pushf
mov
mov
mov
jmp
mov
rcr
xchg
clc
xchg
cmc
rol
rol
pushl
mov
clc
mov
jmp
call
cbtw
pushl
bt
cwtl
push
stc
cmc
cmc
sub
clc
bt
add
movb
mov
call
push
push
push
pushf
mov
movb
jmp
call
call
push
push
pushf
popl
call
mov
jmp
aaa
pop
jmp
adc
rcr
mov
btr
call
test
shrd
shld
and
mov
call
cmp
pusha
add
pushl
mov
pushf
mov
push
lea
jmp
bt
aas
mov
push
push
add
movb
pushl
jmp
pushf
mov
lea
mov
call
jmp
neg
btc
adc
jmp
mov
pusha
lea
jmp
cwtl
cwtl
lahf
mov
call
pushf
pushl
pushf
call
pushf
mov
push
pushf
movb
lea
jmp
mov
rol
xor
mov
pushf
call
pushl
popl
mov
mov
lea
jmp
cmp
sub
push
bt
pushf
push
add
jmp
push
call
pushf
popl
jmp
push
movsbw
lea
push
movzbl
push
bswap
push
jmp
and
mov
mov
pushf
popl
mov
movb
jmp
bts
add
mov
jmp
cmc
test
cmp
sub
bt
pusha
pusha
shl
push
mov
lea
jne
pushf
call
aaa
not
mov
push
pushf
bts
sar
mov
cmc
jmp
pushf
lea
jmp
inc
mov
call
mov
mov
mov
movw
lea
jmp
push
pushl
popl
movb
pushf
lea
jmp
push
pushl
popl
pushf
push
lea
jmp
mov
pushf
push
push
inc
movb
lea
jmp
daa
cmp
mov
cmp
call
mov
jmp
mov
xchg
push
call
push
pushf
popl
jmp
push
pushl
popl
clc
btc
jmp
shl
call
cmc
mov
rcl
rol
clc
mov
jmp
jmp
aaa
mov
setg
movzbl
cmc
cmc
mov
bt
pushf
push
pusha
not
test
clc
not
test
pushl
push
cmc
and
movl
call
call
pushl
popl
movb
pushl
mov
lea
jmp
mov
call
mov
pushf
shr
mov
and
mov
call
movb
pushf
jmp
pushf
mov
pushf
lea
jmp
pushf
call
decl
mov
call
lea
je
cmp
pushf
pushf
clc
sub
movw
stc
movw
xchg
movb
test
jmp
pushl
popl
pusha
pushf
mov
lea
jmp
bsr
adc
or
bsr
movzbl
bt
clc
cmc
ror
add
add
xor
pusha
movzbw
not
jmp
test
sub
test
call
mov
mov
jmp
mov
mov
jmp
call
sub
push
lea
movb
pushf
jmp
movzbw
lea
cmc
pushf
cmp
movw
cmp
movw
pushf
call
mov
jmp
mov
pushf
pushl
push
pushf
lea
jmp
pushf
mov
push
movb
push
lea
jmp
call
jmp
push
clc
test
push
cmp
push
inc
push
mov
push
and
ror
pusha
pushl
mov
bswap
xchg
push
shrd
mov
pushl
pushl
popl
sub
btc
movl
lea
mov
dec
sub
cmc
cmp
sub
neg
lea
movzbw
setne
xchg
inc
rcr
shrd
mov
rol
sub
bswap
mov
shl
sbb
bsr
mov
xor
add
movsbw
mov
btr
jmp
call
pushl
popl
pushf
mov
pushf
movb
lea
jmp
mov
jmp
jmp
cwtl
mov
cmc
mov
pushf
cmc
cmp
call
call
pusha
mov
pushl
push
pushf
popl
cmc
jmp
push
cwtl
mov
push
lea
cpuid
pushf
movb
jmp
mov
not
setg
pushf
inc
test
neg
neg
neg
sub
neg
btr
xor
btc
bswap
xor
movsbw
dec
movzbw
rcr
movzbl
stc
jmp
call
not
stc
push
bt
xor
jmp
jmp
push
mov
pop
mov
not
jmp
push
pushl
mov
push
mov
mov
pusha
push
pushf
lea
jmp
jmp
mov
pushl
pushl
mov
lea
jmp
btr
cmc
push
bt
xchg
push
btr
call
mov
push
pushf
mov
pushl
push
pushf
mov
movb
call
pushf
sub
jle
bt
sub
jge
mov
push
mov
movw
pusha
lea
jmp
btc
mov
btr
sub
push
bswap
cmc
rol
rol
pushf
dec
sub
not
cmp
add
inc
xor
clc
neg
btr
sub
test
mov
cmp
stc
bt
clc
add
pusha
push
mov
movl
mov
movb
mov
lea
jmp
btc
inc
mov
add
sbb
and
ja
mov
stc
sub
clc
bt
push
jmp
shr
test
pushf
stc
pusha
or
clc
bt
clc
cmp
xor
jmp
push
inc
movsbw
and
cmp
rcl
bt
sub
mov
mov
lea
pushf
pusha
pushf
xchg
lea
call
pusha
mov
pusha
pushf
jmp
jmp
jmp
cmc
mov
sub
clc
bt
call
mov
movw
call
lea
or
rcr
sub
cmc
rcr
neg
mov
test
adc
mov
bsf
push
movsbw
call
lea
pushl
jmp
movw
call
and
lea
ja
pushf
pusha
mov
jmp
mov
pushf
pushf
push
lea
jmp
pusha
call
pusha
cmp
pushf
and
bt
jmp
movw
movb
call
mov
mov
pushf
lea
jmp
sar
mov
rcr
shl
mov
pushf
stc
pushf
movb
sub
jmp
pusha
mov
push
mov
push
lea
jmp
jmp
jmp
pusha
lea
je
mov
push
pusha
jmp
dec
call
pusha
inc
lea
ja
pusha
decl
pusha
pushl
movw
lea
jne
push
mov
mov
lea
jmp
mov
push
mov
pushf
popl
call
jmp
bsf
shrd
mov
mov
push
clc
stc
call
sub
bt
jmp
movb
mov
movb
pushf
pusha
mov
pushl
ret
add
pusha
call
aad
cltd
adc
rdtsc
clc
bt
jmp
pushf
popl
call
mov
pushl
popl
pushf
pushf
pushf
lea
jmp
mov
pushf
pushf
popl
jmp
movsbl
cwtl
call
jmp
push
mov
pusha
pushl
lea
call
sub
ror
shl
bt
movzbl
cmc
bt
add
pusha
pushf
call
mov
pusha
pushf
mov
push
jmp
call
bswap
bts
mov
call
rcr
cmc
mov
not
pusha
pushf
mov
bt
sub
sub
jbe
shr
jmp
add
pushf
mov
push
mov
pushf
lea
jmp
push
call
pusha
shl
jmp
add
aas
mov
add
mov
pushf
and
mov
jmp
mov
pushf
mov
jmp
rdtsc
mov
cwtl
pushf
sets
mov
pushf
pushf
movb
pusha
divl
jmp
not
stc
xor
push
pushf
push
pushl
lea
jmp
movb
mov
mov
mov
call
ror
pusha
pushl
popl
rcl
sar
movl
btr
bts
jmp
call
mov
pushl
popl
pusha
mov
mov
lea
jmp
inc
rcl
neg
lea
shl
sub
not
push
lea
lea
pusha
lea
jmp
jmp
push
movb
or
clc
xor
call
bt
pusha
test
shl
pusha
pushf
call
mov
pusha
push
mov
call
stc
pushf
jmp
pushf
popl
push
pushf
pushf
pushf
xchg
stc
mov
jmp
mov
pushf
mov
mov
movb
lea
jmp
mov
pushf
movsbw
movzww
push
add
test
call
test
movzbl
cmp
cmp
pushf
add
cmc
pushf
jmp
not
pushl
popl
push
call
jmp
movb
mov
pushf
pusha
pushl
lea
jmp
pushf
push
mov
call
mov
mov
divl
mov
pushf
pushf
pushl
mov
pusha
mov
push
mov
pushf
popl
mov
movl
pushl
popl
pushf
push
lea
jmp
pushf
mov
pushl
mov
pushf
jmp
pusha
pusha
pushf
cld
cld
pushf
mov
call
mov
movl
movl
pushf
mov
lea
jmp
xorb
lea
lea
pop
pusha
mov
pushf
pusha
lea
jmp
lea
jmp
push
mov
pusha
push
jmp
pushf
sub
lea
je
shl
pushf
jmp
add
pushf
mov
movb
lea
jmp
pushf
popl
push
pushl
popl
pushf
push
lea
jmp
mov
bsf
push
inc
stc
push
mov
shl
bswap
sub
push
shld
xor
pusha
mov
cmc
bsf
pushl
mov
shl
shl
lea
xor
pushl
popl
bsf
rcr
bsf
movl
not
bts
mov
jmp
sub
mov
call
mov
pushf
pushf
popl
pusha
pushf
push
pushf
pushl
popl
pushf
push
lea
jmp
call
mov
pusha
lea
jmp
call
not
rdtsc
jmp
jmp
stc
stc
xchg
mov
pushf
mov
stc
btc
btr
mov
mov
not
stc
mov
lea
rol
btr
mov
mov
mov
btc
pushl
rcr
btc
pushl
popl
pushf
bt
pop
call
test
rcl
btc
not
mov
test
jmp
mov
pushf
call
bt
mov
clc
call
jmp
cmp
mov
clc
mov
bt
cmp
cmc
bt
mov
ror
dec
pushf
mov
bt
and
mov
dec
rol
bsf
mov
rcr
bt
call
pushf
mov
push
lea
jmp
inc
jmp
jmp
jmp
movb
jmp
mov
pushl
pushf
popl
mov
pushl
popl
pusha
mov
pushf
lea
jmp
cmp
bt
xadd
mov
sub
clc
mov
cmp
stc
call
call
movsbl
mov
pop
not
not
bt
mov
clc
pop
movsbw
pushl
popl
pusha
movl
rol
mov
call
pushl
decl
push
call
jmp
movb
mov
mov
lea
jmp
jmp
movb
inc
cmc
cmc
sub
clc
pusha
pushf
cmp
cbtw
pushf
pushf
mov
cwtl
pushl
sub
test
add
mov
pushf
mov
pushl
mov
pushl
pushf
pushf
lea
jmp
test
mov
pushf
test
mov
bt
pusha
cmc
sub
cmc
mov
shr
mov
pushf
pushf
pushf
mov
call
cmc
xor
push
movw
call
pusha
jmp
movzbl
pusha
bt
clc
stc
sub
pusha
test
cmc
neg
sub
jge
pushf
xor
pushf
call
push
sar
sub
movzbl
call
movsbw
sbb
sub
lea
mov
push
pushf
movb
lea
jmp
jmp
clc
sub
test
push
call
bswap
jmp
mov
pushl
mov
movb
push
mov
call
cbtw
cmp
cwtl
push
sub
movb
mov
movl
lea
jmp
jmp
pushf
jmp
push
bsf
jmp
mov
pushf
pushl
mov
movb
jmp
bt
cmc
add
movb
pusha
mov
pushf
lea
jmp
not
ror
pop
test
add
lea
dec
cmp
sub
mov
mov
pusha
pushf
pushf
lea
jmp
ror
xor
mov
test
add
pushf
push
pushf
pushf
lea
jmp
cld
pushf
pushf
rep
pusha
mov
shr
xor
call
movzbl
lea
pushf
pushf
lea
jmp
pushf
popl
jmp
pushf
pushl
lea
jmp
ror
mov
inc
call
movzbl
mov
dec
mov
push
stc
pushl
sub
mov
push
neg
jmp
test
stc
mov
add
mov
jmp
sub
call
call
pushf
popl
jmp
not
pushl
popl
jmp
rcl
bswap
push
mov
rol
dec
not
bswap
dec
push
rcr
setg
and
btr
stc
mov
pushl
test
mov
add
pushf
push
mov
pusha
lea
jmp
rcr
mov
pushf
add
sar
xor
cmp
sub
pop
lea
movzbl
and
movsbw
mov
cmc
sub
push
pusha
pusha
mov
pushl
lea
jmp
call
pushf
pusha
bt
add
call
call
jmp
lea
jmp
call
mov
btc
rol
bts
add
movsbw
ror
lea
add
rcr
lea
rol
sar
sub
mov
push
lea
movb
pushl
pushf
pushl
lea
jmp
push
mov
pushl
mov
bt
xchg
sbb
btr
ror
mov
inc
push
bts
push
neg
push
btc
push
movsbw
ror
pushl
mov
push
inc
shl
mov
cmp
bt
test
stc
sub
call
jmp
pusha
pushl
popl
movw
push
pushf
lea
jmp
btr
adc
mov
stc
cmp
add
push
pushf
popl
jp
pushf
pushl
popl
pusha
pushf
pushf
push
lea
jmp
seta
cmp
mov
bt
add
setle
mov
jmp
lea
jno
movsbl
mov
push
pushf
mov
pusha
jmp
push
mov
call
and
shld
mov
or
cmc
mov
clc
sub
rol
clc
sub
bswap
mov
and
xor
xor
bt
btr
not
bt
ror
jmp
lea
jo
pusha
dec
stc
cmp
add
je
not
stc
jmp
pushf
push
pusha
pushf
pushf
popl
clc
stc
mov
xchg
movsbl
lea
mov
lea
mov
pusha
rol
push
ror
mov
pop
rcl
lea
mov
cmc
clc
mov
pop
mov
clc
not
cmc
stc
mov
rcr
stc
bt
clc
pushl
popl
stc
rcl
pushf
mov
movl
movzbw
cmc
stc
call
call
call
jmp
add
call
cmc
movb
jmp
mov
pushf
xchg
movb
movl
movw
mov
pusha
mov
movb
pushl
ret
pushf
cmpl
call
mov
jmp
daa
shr
mov
bt
clc
and
mov
sub
shr
mov
pushf
bt
add
test
bt
test
stc
shrd
jmp
stc
sub
cmc
xchg
pushf
bt
jmp
pushl
popl
pushl
mov
lea
jmp
lea
js
pushf
mov
pusha
push
lea
jmp
pushf
popl
call
mov
pushl
popl
pushf
pusha
push
mov
lea
jmp
add
pusha
pushf
pushf
mov
pushf
pushf
lea
jmp
xadd
mov
ror
pushf
sub
bsr
sub
movsbw
not
bts
rol
call
push
mov
pushf
pusha
lea
jmp
pushf
cmp
call
jmp
movb
mov
pushf
push
movw
pushf
lea
jmp
rcr
mov
push
call
jmp
mov
push
push
pusha
push
lea
jmp
mov
call
not
pushf
cmp
and
pusha
call
movzbw
mov
pusha
call
call
movb
pushf
mov
pushf
pushf
jmp
sar
clc
rol
shl
mov
pusha
clc
sub
pusha
bt
bt
bt
add
pushf
pushl
pushf
pushf
popl
call
cmc
mov
pusha
clc
clc
push
add
pusha
movb
mov
lea
jmp
inc
call
movsbw
movzbw
push
rcl
btr
xchg
push
movzbw
cmc
push
lea
push
movsbw
push
bts
push
not
movzbl
rol
pushl
pushf
push
pop
movl
mov
clc
mov
mov
rol
cmc
mov
add
bt
movzbw
rcr
jmp
lea
pusha
mov
pushf
pushf
lea
jmp
pushf
mov
pusha
movb
lea
jmp
cmc
sub
pushf
cbtw
cmp
cmc
lea
jnp
cwtl
pusha
clc
cmp
movb
sub
call
ror
movzbw
mov
stc
bt
pusha
clc
add
pusha
pushl
lea
jmp
btr
neg
ror
aad
mov
push
sub
pusha
jmp
mov
btc
pop
stc
rol
mov
btr
pushl
popl
bts
movl
lea
mov
stc
bt
push
rol
bts
bswap
add
rcr
btr
movzbl
not
ror
cmp
sub
shl
lea
pop
sub
pushf
not
lea
movb
pusha
lea
jmp
pushl
popl
movb
push
pushf
lea
jmp
bswap
pushf
movl
bt
ror
movw
mov
clc
push
rol
test
jmp
mov
movb
mov
lea
jmp
push
pushf
jmp
test
push
pushf
sub
pushf
movb
stc
movb
cmpl
pusha
call
pushf
movl
jmp
call
push
mov
push
push
pushl
pushf
lea
jmp
jmp
call
test
sub
cmp
pushf
pusha
shr
movb
call
pop
push
movzbw
xchg
clc
not
mov
btc
rol
rol
neg
sub
mov
sar
neg
lea
mov
shrd
sub
neg
mov
cmp
sar
mov
bsf
mov
movsbw
add
cmc
btc
movzbw
stc
mov
btr
sete
dec
lea
xor
jg
push
inc
shrd
add
lea
stc
movsbl
ror
bsf
sbb
neg
shl
test
xor
bswap
setl
pushf
inc
bt
movw
movzbl
mov
rol
btr
push
mov
jmp
call
pushf
popl
pushf
pusha
xchg
stc
bt
movsbw
cmc
mov
cmc
rcr
rol
pushl
mov
jmp
push
pushl
pushl
dec
mov
jmp
jmp
jmp
pushf
mov
jmp
mov
pushf
lea
pushf
popl
dec
mov
cmp
clc
setne
push
shl
and
xchg
bsr
push
pushf
bsr
xchg
mov
setle
push
shl
push
setne
mov
pushl
shrd
and
neg
push
rcl
lea
mov
clc
pushf
sub
and
not
lea
shrd
btr
bswap
pushf
cmc
lea
lea
or
sar
sub
rol
xadd
mov
ror
rcl
movsbw
shl
mov
lea
sub
add
shl
mov
dec
stc
add
add
jmp
rcr
pushf
mov
movw
bt
sub
cmp
pusha
stc
pusha
sub
cmp
cmp
movb
neg
jmp
shr
sbb
movsbw
mov
adc
bswap
sub
ror
test
sar
sub
bswap
btc
xor
dec
rcl
movsbw
add
sub
bsf
adc
clc
lea
ror
sub
sub
and
mov
pushf
add
pusha
mov
movb
pushf
movw
mov
lea
jmp
mov
pushl
lea
jmp
lea
jo
pusha
rep
or
rol
bsf
shr
mov
xor
cmc
mov
add
ja
cmp
popf
pusha
mov
pushl
push
lea
jmp
clc
sub
cmp
sub
pushf
ror
movb
call
pushf
popl
push
pushf
pushl
popl
pushf
mov
push
pusha
lea
jmp
mov
pusha
push
push
lea
jmp
bt
bt
rol
pushf
call
or
dec
add
movsbw
movsbl
bswap
pushf
not
pop
call
pushl
rcl
xchg
push
call
pusha
pushf
lea
jmp
clc
pusha
jmp
mov
mov
pushf
movb
mov
lea
jmp
push
not
lea
jp
pusha
dec
call
clc
cmc
clc
cmp
call
lea
inc
cmc
mov
neg
mov
push
add
lea
jnp
push
pushl
pushf
mov
pushf
push
lea
jmp
call
pushl
jmp
movw
pushl
popl
mov
movl
lea
jmp
aam
lahf
cmc
bswap
mov
btc
and
mov
bt
pusha
add
call
movsbw
shrd
cbtw
bswap
mov
rcr
push
mov
test
sub
bt
mov
shl
call
lea
jne
bswap
xor
pusha
movzbw
xorb
lea
pusha
mov
pusha
pushf
movw
pushf
lea
jmp
add
test
clc
test
neg
jmp
rcr
sub
mov
call
call
test
bt
mov
stc
push
mov
stc
sub
pushf
lea
jne
jl
test
clc
xor
push
pushf
xchg
call
sub
pushl
pushf
cmc
test
neg
pushf
push
lea
jmp
pushf
popl
pusha
jmp
btc
clc
dec
lea
call
inc
push
test
clc
sub
bt
stc
stc
push
xor
test
clc
pushf
movw
cbtw
cmc
cwtl
clc
pushf
jmp
mov
push
jmp
add
mov
jmp
push
movw
movsbl
lahf
mov
mov
mov
jmp
stc
bsf
notl
bts
bswap
btr
mov
pushf
sub
test
cmp
and
movw
call
xadd
sar
inc
movzbl
add
not
clc
shl
sub
rcl
dec
and
add
add
bsf
push
inc
not
pushf
clc
test
call
jmp
pusha
pushf
push
push
mov
movb
movw
push
lea
jmp
push
jmp
mov
pusha
movb
mov
movw
lea
jmp
pushl
pushf
popl
clc
cmp
mov
pushl
pushf
push
mov
call
lea
jne
push
bt
cmp
xor
pushf
mov
xchg
call
mov
rep
and
pushf
mov
bts
bts
mov
test
pushl
popf
pushf
pushf
mov
movl
lea
jmp
call
mov
call
mov
shl
cmc
bt
bts
mov
stc
test
pushl
popf
pushf
movb
push
lea
jmp
call
cmc
ror
bts
mov
neg
mov
stc
jmp
cmc
mov
test
jmp
push
mov
pushl
popl
movw
push
movb
lea
jmp
bswap
mov
rcl
pop
mov
push
bts
ror
mov
stc
btc
btc
mov
rcr
lea
btr
mov
btc
clc
xchg
clc
pushl
popl
stc
rcr
not
pushf
movl
clc
ror
movsbw
mov
rcr
not
rol
movsbw
adc
xor
pusha
pushf
inc
xor
bswap
lea
jmp
call
cwtl
cmp
rdtsc
call
clc
cmp
sub
stc
xor
movb
pusha
movw
ror
stc
clc
bt
clc
sub
mov
sub
bt
mov
clc
push
jmp
mov
pushf
push
pushf
popl
push
push
pushf
call
push
mov
jmp
mov
sub
movb
pusha
mov
push
lea
jne
bt
pushf
stc
xor
pushl
pusha
pushl
xchg
push
movl
mov
mov
push
pushl
ret
mov
pushf
btr
clc
clc
mov
btr
mov
not
bts
pop
mov
ror
mov
call
lea
jnp
push
pushl
popl
pushf
pusha
push
lea
jmp
shrd
mov
pushf
test
call
or
mov
stc
pusha
clc
bt
add
pusha
movl
pushf
pushf
lea
jmp
rol
cmp
dec
stc
mov
pusha
add
push
lea
jmp
call
xchg
lea
aam
mov
xchg
mov
or
dec
dec
ror
mov
jmp
push
test
sub
pushf
pushl
lea
jmp
pushf
jmp
push
pushf
movb
mov
pusha
pushf
popl
mov
push
pushf
pushl
popl
mov
push
movb
mov
lea
jmp
pushf
popl
pushf
clc
pushf
stc
mov
test
jmp
cmp
shr
add
jge
push
pushf
test
or
clc
pusha
xor
call
mov
pushf
push
pushf
movb
lea
jmp
mov
dec
call
cmc
stc
rol
call
pusha
mov
push
pushf
pushf
mov
pushf
jmp
call
mov
call
btc
jmp
add
jmp
jmp
push
mov
movb
mov
mov
pushf
mov
push
movb
mov
mov
lea
jmp
call
call
jmp
mov
clc
not
mov
jmp
pushl
popl
clc
jmp
call
aas
sbb
push
mov
and
shr
mov
rcl
mov
cmc
pushf
bt
bt
not
stc
call
push
mov
pushf
mov
movl
pusha
mov
lea
jmp
pushf
pushf
pushf
pushl
popl
mov
pusha
lea
jmp
jmp
call
jmp
mov
lea
push
call
push
pushf
popl
pop
btc
shl
mov
sar
lea
jp
push
jmp
sub
call
pushl
call
pushf
mov
call
mov
jmp
pusha
jmp
call
sar
push
call
shl
mov
push
shl
ror
mov
bt
pushf
pushl
add
stc
push
shrd
pushl
lea
ja
pusha
pushf
mov
movb
pushf
pushf
popl
jmp
bt
bt
add
movb
pusha
pushf
pushl
pushf
popl
pushf
call
test
mov
dec
movsbw
rcl
mov
rcr
dec
bts
mov
and
mov
jmp
inc
bt
movb
mov
neg
call
ror
setae
sar
mov
rdtsc
call
push
pushf
pusha
mov
pushl
lea
jmp
jmp
lea
jne
jmp
add
pushf
pusha
push
movb
lea
jmp
mov
pushl
movb
pushf
lea
jmp
mov
pushf
mov
lea
jmp
adc
call
jmp
sub
jmp
jmp
das
add
mov
bts
dec
mov
push
test
add
push
call
pushf
movb
call
call
pushl
popf
pusha
lea
jmp
jmp
movb
push
pushf
popl
call
movb
mov
jmp
push
mov
call
jmp
add
push
push
lea
jmp
mov
ror
push
lea
jae
bt
add
pusha
test
cbtw
pusha
jmp
push
mov
pop
ror
lea
pushl
popl
lea
clc
movl
ror
jmp
call
mov
pusha
pushf
pushf
pushf
lea
jmp
add
mov
jns
sub
pushf
jmp
bt
add
stc
jmp
jmp
std
pusha
cld
pushf
mov
call
pushf
mov
pusha
mov
movw
lea
jmp
mov
mov
test
push
add
pushf
movw
movb
pushf
lea
jmp
mov
pushf
push
push
movw
lea
jmp
mov
push
pusha
pushl
lea
jmp
test
or
dec
mov
btr
jmp
xchg
mov
pushf
pushf
movl
jmp
movl
xchg
jmp
push
movb
mov
jmp
mov
pushf
pushf
call
xor
clc
sub
test
stc
bt
cmc
cbtw
test
cwtl
push
pushl
cmp
cmc
sub
jmp
cmc
pusha
movl
jmp
call
sub
rdtsc
clc
sub
pushf
jmp
add
pusha
mov
pushl
pushf
push
pushf
lea
jmp
call
lea
jmp
or
shrd
cmp
xadd
mov
cmc
cmp
mov
cmp
cmc
add
call
sub
lea
jle
cmc
pusha
pusha
rol
call
mov
movb
pusha
jmp
call
call
jmp
lea
movb
push
pushf
movw
lea
jmp
rcr
rol
mov
bts
lea
rcl
mov
mov
rcr
btc
bts
mov
ror
btr
not
pushl
popl
xchg
movl
bts
rcl
call
stc
stc
neg
pusha
clc
push
jmp
push
pushl
popl
push
push
mov
lea
jmp
test
mov
neg
jmp
call
movsbl
rcr
mov
ror
shr
rol
adc
mov
pushf
call
pushf
mov
movw
movb
lea
jmp
cltd
neg
call
pushf
push
mov
pushf
push
lea
jmp
mov
movb
movl
push
pushf
pushl
ret
pushf
setle
pusha
mov
not
not
mov
mov
pusha
call
aaa
bswap
mov
btr
sar
movzbw
pushf
mov
or
pusha
xor
rol
mov
cmp
clc
add
clc
shld
jmp
lea
ja
btc
rdtsc
aas
shrd
mov
neg
shrd
lea
bswap
setae
das
shl
sub
shr
add
lea
movzbw
rcl
stc
not
and
pusha
sub
bswap
movsbw
pusha
mov
mov
jb
push
pop
pushf
bswap
std
push
call
pusha
setge
inc
mov
jmp
jmp
mov
pushl
pushf
push
call
inc
push
bt
push
add
stc
pushf
sub
call
call
lahf
mov
bswap
pushf
mov
mov
divl
jmp
call
mov
not
mov
mov
movsbw
pushf
jmp
call
cmc
sub
push
call
pushf
call
sub
call
mov
push
movb
mov
call
movb
mov
pushl
popl
mov
movb
movb
movw
lea
jmp
inc
push
pop
bsr
mov
pusha
test
pusha
add
movb
lea
jmp
call
sub
pusha
shl
movl
call
bt
call
sar
sub
mov
shl
sbb
mov
sub
bswap
sub
shl
bts
xor
bts
rcl
adc
movsbw
sub
pusha
pop
pusha
rol
movsbw
btr
sub
bswap
movzbl
test
clc
clc
stc
mov
cmc
jmp
pushf
call
pushf
mov
call
not
bswap
push
call
mov
mov
movb
lea
jmp
neg
mov
cmp
test
call
mov
mov
pushl
call
jmp
add
movl
jmp
call
mov
push
pushl
pushf
mov
lea
jmp
add
pusha
call
call
push
mov
movl
pushf
lea
jmp
mov
call
pushf
mov
xchg
movzbl
push
pushf
bswap
pusha
pushl
mov
mov
movsbl
xchg
bswap
mov
not
not
call
dec
mov
or
sar
js
ror
mov
jmp
pusha
lea
jne
sbb
rol
xorb
lea
pushf
mov
pushl
lea
jmp
sub
bt
push
shl
pushf
pusha
mov
push
pushf
popl
jmp
rcl
mov
ror
jmp
call
pusha
lea
ja
shl
jmp
movl
pushf
pushf
popl
pushl
pushl
popl
pushf
push
movb
movb
lea
jmp
mov
call
push
cmc
pusha
test
not
movw
xor
pusha
pushl
lea
jmp
call
pushf
not
pushl
pushl
lea
jmp
sar
cmc
push
mov
cmp
dec
push
mov
pushf
sub
cmp
shl
pusha
mov
call
push
bt
sub
pushl
jmp
pusha
pushl
popl
mov
movb
mov
pushf
lea
jmp
mov
pusha
push
mov
pushl
movw
mov
call
bts
mov
bt
add
pusha
push
pusha
pushf
lea
jmp
pushl
push
pushf
popl
push
call
call
call
inc
test
sub
jmp
movzbw
pushf
call
push
call
pusha
mov
cmc
mov
movzbw
bt
clc
push
mov
rol
mov
mov
rcl
movzbw
rcr
mov
mov
rcr
stc
mov
bts
mov
bts
mov
call
call
movw
mov
mov
movb
pusha
push
lea
jmp
pusha
pop
mov
std
std
mov
pushf
lea
pusha
mov
pushf
bswap
movzbw
mov
pushf
jmp
clc
shld
stc
shl
movzbl
rcl
cmp
xor
sar
clc
pusha
bt
xor
setp
movzbw
dec
movsbw
xor
shl
setle
xor
jmp
ror
bswap
bsr
test
mov
bt
clc
pushf
movl
sub
cmc
add
pushf
pushf
popl
call
jmp
pushf
pushl
popl
pushl
mov
pushf
push
lea
jmp
mov
pushf
pushf
movb
pushl
ret
mov
mov
pushf
call
call
movzbw
pushf
mov
bswap
pushf
popl
rcr
shl
push
add
push
cmp
adc
pushl
rcl
movsbw
not
dec
push
cmp
shr
mov
bts
sub
ror
rol
sub
dec
bswap
dec
not
call
pushf
pushf
pushf
popl
movb
movw
stc
jmp
sub
cmc
mov
shl
mov
mov
push
add
lea
jns
mov
push
pusha
lea
jmp
pushl
popl
push
lea
jmp
cwtl
mov
shl
mov
bt
jmp
pushf
test
add
mov
jmp
pusha
call
push
movb
mov
jmp
mov
mov
push
push
pushf
lea
jmp
das
cmc
mov
mov
adc
mov
call
pushf
rol
stc
pusha
add
cmc
cwtl
pushf
sub
jmp
pushl
mov
movb
pushf
pusha
lea
jmp
push
pusha
mov
mov
pusha
pushf
movb
lea
jmp
pushf
mov
btc
inc
clc
add
stc
rol
call
jmp
mov
mov
pushf
push
lea
jne
bts
cmp
mov
bt
cmc
test
and
jmp
mov
movb
mov
pusha
mov
lea
jmp
push
mov
call
pushf
not
movw
lea
jmp
jnp
pushf
pusha
pushf
popl
bt
call
pushf
decl
jmp
lea
jne
bts
mov
clc
bt
and
call
xor
push
mov
lea
jmp
jmp
add
mov
lea
jmp
test
mov
push
stc
bt
jmp
push
mov
lea
jmp
mov
mov
push
lea
jmp
bswap
not
jmp
movw
mov
mov
mov
pushf
popl
pushf
call
mov
push
movb
pushl
ret
pusha
call
jmp
cmc
test
pushl
popf
movw
movb
lea
jmp
pushf
pushl
dec
not
lea
pushf
dec
inc
xchg
bts
pop
lea
rcr
lea
cmc
mov
sub
push
bswap
lea
pusha
pusha
push
mov
lea
jmp
and
push
mov
btc
rcl
cmc
ror
mov
cmp
jmp
jmp
add
call
mov
movb
pusha
lea
jmp
call
movzbw
bswap
not
movsbw
movzbw
push
jmp
pushf
popl
pusha
lea
js
popl
pushf
lea
jmp
sbb
bts
cmp
call
lea
jne
clc
cmp
test
mov
clc
bt
bt
and
cmc
call
not
movzbw
movzbw
mov
pusha
mov
pushf
call
pushf
xor
pushf
dec
jmp
setge
mov
shl
stc
mov
shl
shl
neg
shl
mov
bt
stc
call
rol
push
btc
btr
rol
bts
bsr
stc
add
rcr
bswap
bt
rol
rol
add
bswap
adc
and
bswap
sub
shl
mov
clc
sub
jmp
jmp
bt
pusha
add
pushl
push
pushf
movw
lea
jmp
pusha
mov
jmp
pushf
mov
mov
pusha
mov
jmp
pushf
popl
pushl
jmp
call
mov
btr
call
pushf
pushl
call
mov
jmp
pushf
pusha
pushf
popl
jmp
test
pop
mov
call
btr
or
movzww
cmc
cmp
sub
jmp
pushf
mov
push
call
jmp
rep
or
std
dec
bsf
pop
shrd
pop
jmp
xchg
call
mov
inc
movw
call
pushf
mov
pusha
pushf
popl
push
call
pop
bswap
push
movsbw
lea
mov
call
pushf
popl
stc
jmp
pushf
neg
call
call
xchg
push
setb
mov
pusha
bts
mov
rol
test
sbb
shld
add
xchg
rcr
ror
adc
neg
lea
movzbw
inc
sub
ror
and
stc
mov
bt
mov
inc
add
not
xadd
sbb
mov
add
mov
stc
xor
stc
dec
pusha
xor
pushf
movzbw
bts
bswap
rol
pushf
mov
add
pushl
inc
call
jmp
cmp
not
pushf
pushl
stc
test
not
call
call
inc
test
clc
clc
lea
bt
neg
cmp
xchg
mov
sub
call
jmp
xor
pushf
inc
rcl
bsr
lea
clc
mov
test
sub
pushf
push
lea
jmp
call
not
pusha
pushf
dec
inc
sub
lea
bts
bswap
pop
sub
lea
bswap
mov
pushf
pusha
lea
jmp
jmp
mov
push
call
inc
mov
jmp
mov
stc
call
call
inc
pushf
cmc
xor
stc
mov
push
call
mov
test
add
push
lea
jmp
call
movw
mov
mov
mov
mov
mov
movb
lea
jmp
jmp
mov
clc
cmp
shld
mov
pusha
add
pushf
jmp
jmp
pusha
rol
cmp
mov
xor
pop
bswap
inc
shl
lea
stc
stc
sub
push
pusha
pushf
lea
jmp
test
not
lea
jp
stc
pusha
not
pushf
stc
and
call
jmp
cmp
cmc
add
pushf
jmp
call
neg
pusha
mov
test
call
mov
jmp
movb
pushl
popl
pushl
mov
lea
jmp
clc
rcr
and
push
mov
clc
mov
pushl
pushf
sub
jmp
pushf
pushf
jmp
pusha
jmp
call
mov
push
mov
lea
jmp
pushf
pushf
mov
push
mov
lea
jmp
pushf
pushl
popl
movl
mov
movb
mov
lea
jmp
mov
pushf
lea
jmp
bt
cmc
add
call
mov
call
push
call
jmp
push
pushl
popl
movb
movb
mov
movw
lea
jmp
mov
pushl
lea
jmp
mov
call
cmc
pusha
ror
mov
not
mov
cmc
stc
test
pushf
add
call
push
lea
jmp
mov
pushf
jmp
mov
movb
mov
push
mov
mov
jmp
sub
pushf
lea
jne
cmp
pushf
sub
call
cmpl
push
mov
movb
push
pusha
jmp
call
mov
movb
movb
mov
lea
jmp
pushf
pushf
popl
cmp
stc
clc
jmp
movb
pushl
mov
mov
push
movl
pusha
pushf
popl
bt
bt
bt
pushf
mov
movb
mov
pusha
movsbw
call
and
mov
shl
add
add
btc
clc
xor
xor
shl
mov
pusha
shl
cmp
pusha
stc
bt
shr
call
mov
movb
pushf
pusha
lea
jmp
aas
aam
mov
and
inc
mov
push
pushf
push
test
add
call
pushf
popl
pushl
mov
mov
btr
xchg
pushf
mov
call
jmp
call
lea
jne
rcl
bsf
mov
clc
stc
and
pushf
cmp
pusha
jmp
clc
shr
jmp
jmp
pusha
mov
setb
mov
pop
mov
call
mov
pushf
popl
jmp
btc
bsr
mov
mov
shl
mov
call
clc
add
mov
mov
mov
pushl
pusha
movb
pushf
lea
jmp
pushf
popl
mov
mov
call
mov
pusha
lea
jmp
mov
pushl
mov
movb
pusha
lea
jmp
jmp
mov
jmp
push
jmp
rcl
dec
shr
notl
rcl
shl
aaa
mov
call
cmc
clc
sub
pushf
pushf
mov
pusha
push
pushl
pushf
mov
pushf
movb
pushf
push
lea
jmp
clc
xor
stc
clc
test
sub
call
add
clc
pushf
clc
bt
rol
call
push
btc
push
bswap
bts
btr
bt
push
rcr
push
bt
movsbl
not
mov
push
bt
push
call
cmc
movsbw
rol
clc
mov
seta
shr
mov
bt
pusha
add
call
jmp
pushf
cwtl
call
pushf
mov
clc
call
jmp
cmc
cmp
shl
call
push
pushf
pushl
popl
pushf
lea
jmp
setl
mov
call
pushf
push
mov
shr
mov
mov
lea
jge
push
pushf
popl
call
call
push
jmp
mov
shr
rcl
pop
mov
call
bt
pushf
add
push
lea
jne
pusha
mov
pusha
push
pushf
pushf
lea
jmp
pusha
push
pushf
mov
movw
lea
jmp
mov
pushf
mov
movb
call
pushf
mov
movb
pusha
pushf
popl
lea
jo
pushf
pushl
popl
push
movb
lea
jmp
mov
jmp
pushf
popl
clc
pushf
pushf
pushf
mov
clc
stc
rol
bswap
mov
pushf
mov
rol
btc
push
clc
mov
push
mov
rcr
ror
movzbw
mov
cmc
push
ror
bswap
movsbw
bswap
push
btr
bswap
bt
pushl
rcr
push
bts
rol
mov
pushf
btr
ror
stc
rol
mov
sub
or
rcr
xor
not
inc
rcl
call
pushf
mov
mov
pusha
pushl
lea
jmp
cmc
add
sbb
bsf
mov
pushf
add
pushf
pushl
lea
jmp
neg
jmp
pushf
movsbw
movb
pushf
mov
pusha
movsbw
dec
dec
sub
cmc
adc
shr
add
add
mov
rol
rol
test
dec
pushf
add
jnp
neg
add
sub
sub
bt
bts
clc
mov
jge
add
pusha
mov
pushf
pushf
movb
lea
jmp
call
shl
mov
push
mov
call
bswap
rol
btc
bsr
shld
stc
add
call
movb
mov
pushl
movb
lea
jmp
shld
movzbw
mov
setnp
stc
add
add
push
push
mov
mov
pushf
pushf
push
mov
mov
lea
jmp
mov
not
test
cmc
bt
sub
jg
xor
pusha
push
pushf
push
lea
jmp
pushf
jmp
ror
bsf
inc
mov
aas
bsf
pop
lea
pop
clc
movzbl
xadd
aaa
pop
shrd
pop
daa
bt
pop
movsbl
not
xor
neg
pop
rcl
add
btr
pop
btc
mov
bswap
ror
pop
adc
rol
pop
bswap
rol
pop
stc
cld
bt
cmp
popf
push
pushf
pusha
pushl
ret
jmp
lea
je
push
pushl
popl
pushf
movw
lea
jmp
pusha
pushf
popl
pusha
lea
js
pusha
movb
pushl
popl
pushl
mov
movw
pushf
lea
jmp
std
mov
pushf
mov
lea
call
pusha
push
jmp
pusha
call
call
call
inc
sbb
pushl
sub
lea
sbb
dec
shrd
shl
sub
pushf
lea
push
push
push
pushl
lea
jmp
sub
movw
lea
jno
pusha
mov
pushf
pusha
lea
jmp
call
pushf
setg
setbe
mov
push
xchg
call
mov
push
pushf
pushf
pusha
lea
jmp
mov
test
not
cmp
clc
jmp
jmp
pushf
popl
pushf
pushl
popl
mov
mov
movw
movl
lea
jmp
mov
jbe
pushf
mov
push
jmp
pusha
add
bt
jmp
cwtl
neg
xadd
and
mov
rol
pop
cltd
shrd
daa
pop
rol
pop
bsr
pop
movsbw
neg
pop
setno
bsr
not
pop
rol
movzbw
pop
dec
jmp
push
pushl
popl
pusha
movw
pushf
pushl
lea
jmp
mov
pushf
pushf
lea
jmp
mov
pusha
push
lea
jmp
test
mov
or
pusha
mov
cmc
pushf
xor
jmp
jmp
jmp
add
pushf
lea
jmp
jmp
sub
call
add
pushf
mov
pushf
mov
pushf
lea
jmp
call
jmp
movl
mov
pushf
pushf
pushf
popl
jmp
pushf
popl
pushl
bt
mov
mov
mov
push
call
mov
clc
clc
test
or
movw
pushf
pushf
lea
je
bt
stc
stc
xor
call
pushl
popl
pushf
mov
lea
jmp
or
pusha
cmp
cmc
xor
jmp
clc
stc
cmp
not
test
bt
bt
pushf
sub
cmc
pusha
cmp
sub
jmp
jmp
das
mov
not
test
mov
cmc
clc
sub
call
push
movw
pushf
popl
pushf
std
mov
movsbw
mov
std
std
lea
call
clc
bt
pusha
not
cmc
bt
cmc
add
stc
clc
mov
pushf
jmp
push
call
pushf
popl
call
rcr
pushl
popl
xor
dec
sub
sar
movl
movsbw
cmp
rcr
mov
call
shl
shl
test
movzbl
bt
cmc
jmp
cmp
mov
pusha
mov
pushl
clc
cmp
sub
call
pushf
push
mov
push
mov
push
pushf
lea
jmp
add
add
add
add
rol
sbb
cmc
xor
bsr
movzbl
movzbw
call
mov
movsbw
movsbw
rol
clc
jmp
push
push
mov
mov
lea
jmp
push
jmp
btc
or
mov
rol
sbb
movzbl
mov
clc
jmp
mov
movl
movzbw
push
movzbw
mov
lea
jge
pusha
xchg
movzbw
movw
mov
pushf
mov
pushf
popl
sbb
xor
mov
and
mov
xchg
call
call
jne
pushf
pushf
pushf
popl
pushf
pushl
popl
push
pushl
lea
jmp
pushl
popl
push
movb
push
lea
jmp
sub
pushl
popl
lea
btc
shrd
movsbw
movl
clc
btc
movsbw
mov
pushl
call
stc
add
pusha
mov
pusha
lea
jmp
setge
cmc
rcl
mov
shl
bswap
clc
ror
add
or
and
pop
rol
mov
ror
xor
test
xor
call
movzbw
lea
pushf
mov
push
push
lea
jmp
call
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
dec
add
sub
xlat
dec
add
mov
dec
add
dec
add
dec
add
push
dec
add
dec
add
dec
add
rorb
mov
orl
dec
add
dec
dec
add
dec
dec
add
xor
xlat
dec
add
insb
dec
add
insb
dec
add
insb
dec
add
rorb
call
dec
add
add
pop
dec
add
jecxz
add
ret
xchg
push
dec
add
rorb
cwtl
dec
add
push
dec
add
push
dec
add
rorl
push
sti
dec
add
cwtl
dec
add
cltd
dec
add
cltd
dec
add
cltd
dec
add
cltd
dec
add
cltd
dec
add
cltd
dec
add
cltd
dec
add
cltd
dec
add
lock
add
jae
add
add
out
dec
add
add
push
dec
add
adc
call
dec
add
adc
mov
dec
add
dec
add
orl
sbb
add
add
rorb
mov
dec
add
add
push
dec
add
mov
add
cwtl
dec
add
mov
cmp
jae
add
lock
add
dec
add
out
add
add
lock
add
sub
push
dec
add
jecxz
add
test
add
xchg
dec
add
mov
addr16
add
dec
add
dec
add
lahf
dec
add
xchg
dec
add
dec
add
rorb
xchg
dec
add
rorb
xor
dec
add
lock
add
add
mov
mov
sti
dec
add
dec
add
xor
jae
add
dec
add
dec
add
dec
add
add
rorb
es
dec
add
sub
mov
dec
add
mov
adcb
orl
dec
add
sub
mov
add
sub
leave
dec
add
call
dec
add
dec
add
dec
add
add
add
dec
add
rorl
xchg
push
dec
add
dec
add
dec
add
sub
mov
add
dec
add
add
test
jnp
dec
add
rorb
rorl
insl
pop
dec
add
dec
dec
add
dec
add
out
add
add
dec
add
dec
dec
add
orl
dec
add
mov
add
dec
add
ljmp
inc
mov
cwtl
dec
add
rorb
mov
add
test
jmp
repnz
add
mov
pushf
jae
add
leave
dec
add
dec
add
xchg
dec
add
jae
add
xchg
dec
add
xchg
dec
add
adc
cwtl
dec
add
orl
dec
add
inc
dec
add
add
repnz
add
ret
mov
lahf
dec
add
dec
add
mov
sub
rorl
add
dec
add
sti
dec
add
dec
add
xor
xor
cli
dec
add
add
rorl
test
jae
add
aad
add
aad
add
aad
add
aad
add
aad
add
mov
jmp
push
rcr
rol
lea
mov
jmp
mov
movb
push
jmp
add
pushf
movb
lea
jmp
pushf
popl
call
stc
sub
lea
jae
pushf
mov
pusha
movw
pushf
movw
lea
jmp
setg
mov
lea
and
mov
pusha
rcl
mov
sub
jo
pusha
stc
movw
add
pushf
pushf
clc
shld
pushf
pushf
pushf
mov
movw
pushf
pushf
pushf
popl
push
push
push
pushl
popl
pushl
push
lea
jmp
mov
pushf
push
lea
jmp
call
sar
mov
push
push
add
pushf
pushf
lea
jmp
lea
pushl
pushf
mov
lea
jmp
add
pushf
dec
pushl
bt
call
mov
call
cmc
call
dec
pushl
sub
clc
push
pushf
rol
pushf
sub
jno
pushf
cmc
add
pusha
cmp
xor
jmp
push
pushl
popl
mov
pushl
lea
jmp
mov
mov
pushf
movb
mov
movb
lea
jmp
sete
push
lahf
mov
call
pusha
movw
call
rcr
aam
movzww
stc
pushf
stc
xchg
stc
stc
xor
bt
cmc
xchg
cmp
call
btr
pusha
movzbl
bts
sar
add
pusha
dec
lea
jno
inc
push
lea
lea
stc
rol
movsbw
lea
call
jmp
mov
pusha
jmp
pushf
popl
call
jmp
jmp
mov
clc
xchg
rcr
mov
mov
mov
call
pushf
push
pushl
mov
push
movl
jmp
ror
test
jmp
jmp
not
pop
mov
push
lea
jmp
pushf
pushf
mov
pushf
pushf
lea
jmp
mov
cmp
inc
and
add
not
jmp
pushf
pushf
pushl
popl
mov
movb
mov
push
lea
jmp
jmp
pushl
popl
push
lea
jmp
mov
rol
jmp
jmp
rcr
cmc
mov
bts
ror
bswap
pushl
popl
rcl
movsbw
lea
call
adc
mov
pusha
rcl
pusha
test
mov
test
bt
sub
bt
mov
cmp
shr
lea
jg
mov
pushf
call
mov
movw
call
pushf
pushf
popl
cmp
call
cld
cld
mov
rep
xor
neg
jmp
bswap
not
mov
mov
not
rol
btr
btr
rol
add
pushf
call
bt
add
pushf
mov
push
lea
jmp
lea
jge
pusha
pushf
mov
jmp
jmp
mov
movb
movb
lea
jmp
pushf
jmp
test
add
pushf
jmp
push
pushf
popl
call
shl
mov
pusha
pushl
shr
cmc
pushl
pushf
or
pushf
cmp
bt
clc
xor
jmp
bt
sar
bt
mov
test
sub
cmp
cmp
pushf
add
stc
movb
call
pushf
mov
call
call
mov
pushf
mov
movw
call
jmp
clc
xchg
pusha
pushf
mov
pusha
clc
stc
sub
pushf
lea
jne
push
bt
bt
jmp
movzbl
pushf
mov
pusha
mov
pushf
mov
pushf
lea
jmp
pushl
popl
mov
lea
jmp
dec
shld
mov
shl
clc
inc
test
mov
pushf
not
bt
call
pushf
push
mov
push
pusha
push
pushl
lea
jmp
call
rcr
mov
bt
add
push
mov
push
lea
jmp
lea
jmp
mov
movw
mov
mov
mov
lea
jmp
movsbl
mov
bts
add
xor
call
or
neg
call
push
call
mov
push
pushf
pushl
pushf
lea
jmp
pusha
mov
clc
cmc
pushf
add
push
push
push
lea
jmp
pushf
mov
movb
mov
lea
jmp
jmp
push
mov
jmp
sar
bswap
and
mov
shld
sbb
and
mov
push
pushf
push
add
pusha
call
add
jmp
mov
push
push
lea
jmp
pusha
mov
pusha
mov
pushf
pushl
mov
pushf
lea
jmp
or
bswap
and
test
mov
clc
shl
mov
push
jmp
not
mov
stc
cmp
add
push
lea
jmp
mov
movb
call
pushl
popl
pusha
pushf
lea
jmp
push
push
mov
mov
mov
mov
pusha
lea
jmp
call
or
clc
sub
clc
movzbl
clc
test
jmp
call
push
mov
pusha
lea
jmp
mov
pushl
push
mov
mov
mov
pushf
pushf
pushf
lea
jmp
pushl
mov
movb
inc
pushl
push
movb
pushf
lea
jmp
call
push
push
pushf
popl
push
mov
ja
push
pushf
mov
call
pushf
push
mov
pusha
mov
movl
pushf
lea
jmp
jmp
push
pusha
push
pushf
mov
pushl
push
pushf
movw
mov
pushl
mov
pushf
popl
stc
jmp
mov
push
lea
jmp
rol
pushf
dec
cmc
bt
pushf
sub
test
sub
jmp
mov
pushf
mov
bt
stc
call
add
call
call
pushf
popl
pusha
pusha
jmp
shrd
jmp
cmp
mov
mov
lea
ja
btc
aas
setle
jmp
mov
movw
pushl
push
lea
jmp
or
adc
inc
rcl
mov
call
lea
jne
shr
neg
rcr
mov
pushf
lea
jbe
cmc
pusha
and
pusha
bt
stc
cmp
pushl
push
call
mov
pushf
push
call
shld
neg
sub
or
shld
sub
sub
cmc
mov
test
pushf
test
add
push
pushf
push
mov
movw
pushf
mov
lea
jmp
mov
setns
mov
call
pushf
push
mov
movb
pusha
pushf
popl
pushf
pushf
call
pushf
mov
call
pushl
popl
movb
pushf
lea
jmp
add
stc
mov
rcl
sar
mov
pusha
cmp
push
jmp
cmp
btr
movzbl
bsf
xor
sub
bsr
xor
rcl
or
add
rcl
or
xor
inc
stc
shr
neg
inc
mov
inc
mov
sub
shld
stc
shld
mov
test
push
pushl
add
mov
mov
push
mov
pushf
movw
pusha
lea
jmp
push
movzbw
lahf
mov
pop
jmp
rol
ror
btc
push
xor
cmp
lea
inc
bswap
sub
pusha
movzbw
lea
movb
push
lea
jmp
movzbw
mov
movzbw
movzbw
mov
pusha
divl
pusha
mov
mov
jmp
push
push
pushl
popl
movb
lea
jmp
sub
movsbw
mov
or
mov
stc
call
mov
push
push
mov
lea
jmp
movsbw
mov
jmp
mov
pusha
mov
pushf
jmp
call
not
pushf
pushf
movb
pushl
lea
jmp
not
xor
xor
add
adc
not
not
bsf
and
clc
mov
test
jmp
call
sub
bsf
jmp
sbb
mov
mov
shl
clc
mov
call
push
mov
pushf
lea
jmp
jmp
pushf
popl
call
pusha
pushl
pushl
popl
push
test
test
neg
movl
bsf
test
cmc
xadd
mov
inc
sub
push
jmp
aad
add
mov
stc
stc
jmp
movzbw
mov
lea
lea
mov
bswap
movzbl
xchg
not
mov
movzbw
mov
pusha
pushf
popl
bsr
movzbw
xor
dec
mov
ror
xadd
pushl
mov
pushf
mov
pushl
popl
inc
or
shl
rcl
movl
shrd
inc
mov
call
call
mov
movb
mov
pushf
pushf
lea
jmp
shl
btr
mov
shrd
cmp
mov
clc
test
pusha
clc
not
movb
stc
not
test
push
sub
bt
clc
and
pushf
jmp
pusha
pushf
popl
mov
movb
pushl
popl
push
push
pushl
movw
lea
jmp
push
pushf
popl
call
cwtl
pushf
mov
lea
movsbl
mov
pusha
pushf
push
lea
cpuid
clc
pushf
cmc
sub
call
bt
mov
stc
stc
pusha
add
movb
cmc
call
call
add
movb
lea
jmp
call
mov
mov
mov
pushf
lea
jmp
xor
not
mov
push
bswap
inc
bsr
bswap
clc
test
lea
jmp
movb
mov
jmp
cmp
sub
jmp
mov
movsbl
movzbw
call
mov
jmp
stc
or
pushl
cmp
test
xor
mov
call
pushl
popl
pusha
movb
lea
jmp
mov
lea
jne
push
pusha
pushf
lea
jmp
mov
pushl
pusha
pushf
push
lea
jmp
jmp
push
not
cmp
sub
jg
bt
xor
push
pusha
mov
push
lea
jmp
cmp
and
pushf
pushf
popl
pushf
push
call
pushf
pushl
popl
mov
push
mov
pushf
lea
jmp
neg
mov
not
stc
push
mov
pushf
test
sub
cmc
pusha
shr
mov
pushf
mov
call
shr
movzbl
cmp
pushf
add
pusha
not
jmp
ror
stc
mov
jmp
call
pushf
dec
cmc
push
xor
pusha
cmp
xor
test
lea
pushl
test
call
push
mov
mov
pusha
lea
jmp
push
sub
pushf
mov
call
call
movl
btc
mov
btr
cmc
rol
or
add
xchg
rol
ror
xchg
ror
shrd
xchg
ror
lea
bts
shl
sub
mov
movzbw
pusha
lea
pusha
movb
lea
jmp
clc
pushf
add
jmp
call
lea
cmc
pushf
jmp
lea
pushl
mov
jmp
rol
shl
mov
bt
bts
dec
or
mov
mov
xor
or
push
movzbw
bt
push
btr
push
bswap
movzbw
inc
shr
pushl
movzbw
call
add
push
pushf
movb
movl
pushf
popl
jmp
sub
sbb
mov
neg
mov
test
jmp
sub
call
rol
mov
cmc
stc
add
bt
cmc
call
pushl
movb
inc
call
bt
call
sub
cmc
cmc
stc
cmp
shr
jmp
lea
neg
rol
lea
or
sub
pop
aaa
lea
call
pusha
pushl
mov
call
mov
movb
pusha
mov
pushl
pushf
popl
bt
call
clc
lea
not
movl
pushf
jmp
xor
push
clc
sub
pushf
mov
pushf
lea
jmp
pushf
jmp
pusha
pushf
movw
mov
mov
pushf
pushf
movb
lea
jmp
mov
cmc
pushf
add
pusha
pushl
lea
jmp
sub
pushl
lea
jo
mov
pushf
mov
movb
mov
lea
jmp
clc
pushf
test
not
cmp
clc
xor
mov
movb
lea
jmp
mov
lea
jne
push
pushf
mov
mov
pushf
movb
mov
mov
lea
jmp
push
pushf
popl
pusha
mov
bt
mov
movzbw
mov
ror
btc
call
movb
mov
pushf
movb
lea
jmp
pushf
popl
movl
mov
pusha
jmp
call
sub
bt
test
and
jmp
pushf
movb
pushl
mov
std
call
not
mov
pushf
jmp
call
lea
je
mov
pusha
push
pushl
lea
jmp
mov
xor
cmc
mov
push
jmp
not
movb
call
jmp
mov
shr
jmp
bswap
lea
cmc
mov
stc
test
cmc
clc
bswap
test
clc
xor
cmp
jg
add
jmp
mov
pushf
mov
pusha
push
pusha
movb
mov
pushf
push
mov
pushf
push
mov
jmp
pushf
popl
pushf
mov
jmp
mov
pushf
movw
pushl
ret
mov
movw
pushf
popl
pushf
jmp
bsf
bt
bsr
mov
pusha
neg
add
not
mov
pusha
pushl
mov
push
lea
jmp
call
mov
pusha
rcr
pushf
jmp
mov
jmp
call
stc
clc
pushf
shl
push
push
pushf
mov
pushf
call
movsbw
pusha
mov
clc
clc
add
pushf
mov
push
pushf
movb
pushf
lea
jmp
push
cwtl
not
mov
push
pushf
mov
pushf
call
inc
jmp
cmc
sub
cmc
bt
mov
pusha
rol
clc
clc
pushf
bt
add
bt
sub
jmp
mov
call
lea
jp
pushf
push
pushf
popl
pushf
call
mov
push
pusha
pushl
lea
jmp
mov
rcr
mov
jmp
mov
btc
bts
ror
rol
rol
ror
adc
btr
add
pop
bswap
ror
btc
ror
shl
lea
shl
shl
sub
cmp
rol
mov
inc
movzbw
bsr
rcr
mov
test
and
lea
ror
add
dec
shld
bts
mov
add
test
neg
xor
xor
shrd
ror
xor
btr
stc
setle
rol
bt
add
bts
adc
xor
not
cmc
movzbl
rcl
ror
movsbw
rcl
mov
stc
sub
pusha
stc
add
jmp
pushf
bt
call
sar
bts
mov
btc
mov
stc
add
jmp
lea
jle
pusha
mov
push
mov
pushf
lea
jmp
clc
rcr
xchg
xchg
push
stc
lea
pushf
mov
cmc
cmc
pushl
pusha
movl
movzbw
stc
mov
clc
rol
ror
ror
rol
pop
btr
add
rol
call
ror
bsr
rol
btr
mov
cmc
call
mov
lea
jae
pusha
mov
pusha
pushf
popl
pushf
call
jmp
pushf
pusha
push
pushf
popl
movb
cmc
push
clc
mov
pushf
clc
cmp
mov
call
mov
movzbw
inc
bt
movsbl
ror
lea
rcl
sub
sub
call
lea
jb
pushf
pushl
popl
pushf
mov
lea
jmp
bt
pushl
popl
xor
neg
pusha
inc
movl
cmc
sar
rol
mov
mov
pushf
bt
sub
jmp
test
add
pusha
pushf
not
mov
pushf
jmp
shld
cmc
lea
lahf
mov
mov
test
bsf
rcl
mov
pushf
adc
mov
jmp
mov
add
sbb
shl
cmp
add
pusha
mov
pushl
mov
pushf
mov
push
lea
jmp
mov
pushf
push
mov
movb
lea
jmp
push
mov
pushf
pushf
pushf
call
jmp
sub
btr
btr
mov
pushf
add
jmp
bt
mov
push
pushl
cmp
mov
sub
movl
mov
movb
mov
movb
mov
movw
movb
lea
jmp
rcr
adc
shl
mov
adc
shl
add
call
pushf
popl
mov
clc
cmc
mov
bt
cmc
mov
movb
xchg
mov
ror
jmp
push
pushf
popl
pushf
call
push
mov
jmp
push
mov
pushf
pushf
mov
lea
jmp
pushf
pushf
pushf
popl
pushf
mov
pushl
popl
push
pushf
pushf
lea
jmp
mov
pusha
mov
push
pushf
popl
mov
pushl
pushf
call
cbtw
add
notl
mov
bsr
mov
pushf
mov
sub
call
das
neg
jmp
mov
test
test
cmc
pushl
popf
movb
movb
mov
lea
jmp
pushl
push
mov
mov
push
movl
lea
jmp
cwtl
mov
stc
cmc
clc
call
mov
call
pushf
call
mov
aad
sar
cwtl
shld
mov
ror
ror
mov
shr
adc
mov
call
pushl
popl
push
pushf
push
pushl
lea
jmp
rcr
shrd
notl
xor
mov
push
call
pusha
mov
pushl
mov
call
clc
mov
btc
bt
not
stc
xchg
movzbw
jmp
movsbw
cmc
bts
mov
lea
pusha
mov
movsbw
mov
not
mov
jmp
add
jmp
jmp
cmc
pushf
stc
cmc
pushl
popl
call
mov
push
mov
lea
jmp
inc
jmp
pushf
popl
pushf
movb
pushl
popl
push
lea
jmp
mov
call
mov
xadd
sub
pushf
pusha
xchg
pusha
lea
add
cmc
call
shr
call
pushf
mov
pushf
pushf
popl
jmp
lea
je
push
mov
pusha
pushf
push
lea
jmp
add
mov
mov
movw
push
lea
jmp
movb
call
push
mov
pushl
movw
lea
jmp
mov
pushf
push
mov
lea
jmp
call
inc
not
mov
inc
xor
rcr
cmp
jmp
mov
pusha
mov
pushf
pushf
lea
jmp
call
pushf
jmp
mov
mov
pushf
movb
lea
jmp
pushf
pushf
popl
pusha
cmc
pusha
mov
not
btr
bswap
mov
jmp
rol
movzbl
cmp
sub
pushf
clc
mov
add
pushl
movb
sub
jne
not
pushf
pusha
sub
push
test
stc
mov
sub
test
cmp
push
sub
test
mov
call
jmp
call
shl
bsr
mov
setge
mov
movsbw
pushf
pushf
push
add
jmp
cmp
shld
pushl
mov
pushf
pushf
popl
jmp
movl
mov
mov
push
pushf
lea
jmp
movb
pushl
mov
pusha
pushf
mov
push
lea
jmp
push
mov
movb
pushf
pushf
popl
stc
mov
push
pushl
xchg
btr
mov
bswap
rcr
rol
mov
mov
mov
mov
cmc
clc
pushl
pushl
popl
not
movl
rol
bts
mov
call
clc
jmp
call
pushl
xchg
mov
movsbl
mov
movzbl
mov
push
xchg
pushf
bswap
not
mov
movsbw
xchg
mov
call
add
jo
cmc
push
sub
call
push
mov
pushf
movb
lea
jmp
pushl
push
pushf
popl
jmp
jge
push
add
pushf
lea
jmp
divl
pusha
mov
pusha
mov
jmp
mov
movl
lea
jmp
call
stc
stc
bt
and
push
mov
pushf
mov
pushf
popl
pusha
pushf
pushf
jmp
pushf
popl
pushl
call
mov
push
jmp
mov
movw
push
pusha
push
lea
jmp
mov
call
cmp
add
pushf
push
movl
mov
jmp
mov
call
jmp
mov
bswap
sete
mov
mov
pushl
ret
mov
pusha
pushl
mov
pushl
call
add
cmc
movw
xor
push
mov
dec
call
mov
movb
mov
pushl
ret
pushf
mov
pushf
push
lea
jmp
pushl
popl
pushf
push
pushf
pushf
lea
jmp
call
pushf
push
mov
call
movzbw
not
mov
call
call
lea
inc
not
pop
inc
inc
or
push
lea
dec
mov
dec
sub
bswap
mov
pusha
pusha
push
movb
lea
jmp
shld
pusha
stc
push
mov
call
sub
lahf
ror
cmc
mov
shr
or
add
mov
clc
cmp
jmp
pushl
popl
pushl
pushf
lea
jmp
pushl
popl
pushl
lea
jmp
clc
clc
cmp
pushf
call
seto
push
movzbw
mov
pusha
mov
call
pushf
mov
mov
pushf
movb
pusha
call
jmp
movzbl
clc
push
bswap
rcl
bt
push
rcr
btr
push
bts
mov
push
btr
push
pushf
not
pushl
popl
cmc
pusha
push
movl
pop
btr
mov
stc
bt
cmc
rol
rol
bswap
jmp
bt
and
lea
xchg
mov
test
rol
setg
add
call
or
push
lea
je
bt
call
mov
call
movw
jmp
mov
push
movb
pusha
lea
jmp
movb
cmp
test
cmpl
pusha
pushf
movb
pushf
mov
call
cwtl
lahf
bswap
pusha
mov
jmp
mov
mov
pushf
pushf
popl
push
pushl
popl
movb
lea
jmp
movb
pushf
popl
pushf
mov
stc
rol
jmp
not
setp
mov
dec
lea
jge
ror
rcl
lea
and
setnp
sar
add
shld
shrd
pusha
mov
mov
jmp
mov
pushf
lea
jmp
inc
inc
test
add
btr
movzbl
pushf
pushf
stc
movb
mov
jmp
pusha
ror
call
pushf
popl
jmp
add
fs
mov
add
int
and
leave
add
sub
add
sub
add
sub
add
fidivrl
add
fistpll
add
and
add
sbb
add
scas
mov
add
out
mov
add
fistpll
add
jns
add
ret
add
aad
add
aad
add
movsb
iret
add
and
add
pop
mov
add
pop
mov
add
int
rcl
mov
jo
int3
add
xor
add
movl
dec
mov
add
dec
mov
add
ret
add
fs
mov
add
into
int3
add
aaa
iret
add
into
int3
add
mov
movb
mov
add
push
int
jo
mov
add
cmp
mov
add
lods
mov
add
idivl
add
dec
mov
add
bswap
add
into
int3
add
movsb
iret
add
aad
add
ret
add
sub
add
sub
add
sub
add
sub
add
mov
int
jo
movl
mov
mov
add
lret
nop
push
int
mov
mov
add
jne
add
inc
mov
add
add
jge
add
bswap
add
push
mov
push
pop
mov
push
dec
mov
add
fidivrl
add
mov
mov
add
jns
add
leave
add
fidivrl
add
dec
mov
add
dec
mov
add
mov
lds
pusha
mov
add
scas
mov
jo
movl
add
push
mov
add
push
mov
and
movb
enter
mov
add
fistpll
add
dec
mov
add
inc
mov
mov
into
add
lret
mov
leave
add
mov
into
add
mov
leave
add
sub
add
sub
add
sub
add
pop
mov
add
adc
add
movsb
iret
add
pop
mov
add
mov
lret
add
insb
movb
mov
add
jne
add
bswap
add
idivl
add
mov
enter
mov
add
dec
mov
add
dec
mov
add
adc
add
ret
add
dec
mov
add
dec
mov
inc
dec
mov
add
dec
mov
add
idivl
add
push
int
nop
push
int
mov
enter
lret
add
lods
mov
add
cmp
add
and
add
mov
mov
sarb
add
fmul
add
movsb
iret
add
mov
movl
jns
add
mov
mov
add
scas
mov
add
ror
add
int
mov
mov
add
sub
add
sub
add
sub
add
sub
add
adc
add
push
mov
orb
add
lahf
mov
add
pusha
mov
add
pop
mov
add
push
mov
add
adc
add
lret
adc
add
adc
add
and
add
sti
mov
add
add
scas
mov
sarb
add
fs
mov
add
aaa
iret
add
dec
mov
add
dec
mov
add
dec
mov
add
movsb
iret
add
movl
adc
add
lahf
mov
add
add
mov
jne
add
inc
mov
add
scas
mov
add
fmul
add
movsb
iret
add
jns
add
adc
add
mov
add
inc
mov
add
scas
mov
xor
lret
sub
pushf
pushf
not
movw
pushf
movb
push
lea
jmp
cmp
bt
cmp
cmpl
jmp
dec
stc
mov
cmc
pusha
add
pushl
lea
jmp
push
pushf
mov
pushl
jmp
movb
add
cmc
call
jmp
jmp
pusha
pushl
push
pushl
popl
movb
lea
jmp
mov
pushf
pushf
mov
mov
pushf
lea
jne
pusha
mov
jmp
mov
pushf
pushf
lea
jmp
cld
mov
pushl
test
pushl
popf
mov
mov
lea
jmp
call
jmp
shld
aas
mov
call
mov
pusha
clc
bt
bt
not
pushf
jmp
movsbw
push
inc
stc
rcr
stc
movsbw
sub
call
pusha
pushl
popl
mov
pushf
lea
jmp
pushf
pushf
popl
pushf
call
mov
jmp
rcl
xor
add
movzbw
ror
pusha
clc
add
lea
movzbw
sub
mov
pushf
jmp
add
push
lea
jmp
jmp
movsbw
xchg
movzbw
xchg
bswap
not
push
movsbw
pushf
pushf
popl
ror
push
btc
rcr
neg
push
call
movw
pushf
popl
pushl
cmc
cmp
mov
cmp
cmp
mov
push
clc
call
cwtl
btc
mov
cmc
and
not
mov
jmp
push
pushf
popl
jmp
pusha
call
bswap
push
btc
mov
movsbw
pushl
rol
stc
jmp
pusha
mov
pushl
jmp
pushl
pushl
mov
push
push
pushf
popl
call
lea
jne
shl
rcr
bswap
xorb
mov
movsbw
movzbw
pop
push
push
lea
jmp
call
call
mov
mov
push
lea
jmp
push
movb
pushf
popl
movb
mov
clc
clc
mov
movzbw
pushf
not
mov
mov
lea
clc
rcr
mov
pusha
bt
cmc
lea
mov
stc
lea
pushl
popl
call
call
pushf
mov
push
mov
lea
jmp
not
pushf
xor
pushf
push
pushf
lea
jmp
push
not
stc
bt
and
jmp
pushf
call
btr
bswap
lea
jmp
cmc
pushf
xor
pusha
jmp
call
pusha
push
call
call
stc
cwtl
cmc
pusha
push
sub
mov
pushl
mov
mov
pushf
movb
lea
jmp
pushf
pusha
sub
movb
call
rcr
mov
shl
and
pop
sar
sbb
bsr
pop
dec
add
shrd
or
pop
or
btr
pop
aad
cld
pop
cmp
sar
sar
pop
bsr
cwtl
shld
call
call
pushl
popl
movb
lea
jmp
jmp
pusha
pushf
mov
jmp
mov
jmp
jmp
pushf
popl
movb
pushl
popl
mov
pushf
push
lea
jmp
pushf
popl
push
mov
call
clc
push
cmc
jmp
push
mov
pushf
lea
jmp
bt
cmp
mov
xor
movb
pushf
pushf
pushl
lea
jmp
jmp
mov
call
xor
jmp
pusha
mov
pushf
popl
jmp
mov
pusha
pusha
pushf
popl
mov
push
pushl
popl
pushf
push
movb
lea
jmp
cbtw
jno
dec
mov
cmp
sub
cmp
test
add
push
call
fs
dec
add
cs
add
mov
test
dec
add
dec
add
dec
add
add
dec
add
lods
dec
add
rorb
in
dec
add
lods
dec
add
dec
add
dec
add
xchg
test
dec
add
stos
dec
add
stos
dec
add
mov
add
dec
add
sub
dec
add
rorb
lods
dec
add
push
dec
add
dec
add
dec
add
jmp
add
rorb
lahf
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
mov
add
rorb
mov
dec
add
cs
add
nop
dec
add
sub
dec
add
rorb
stos
dec
add
xchg
push
lea
mov
dec
add
add
lods
dec
add
rorb
into
dec
add
add
dec
add
daa
dec
add
dec
add
dec
add
dec
add
dec
add
lea
icebp
cs
add
dec
add
cs
add
rorb
enter
test
xchg
dec
add
lods
dec
add
into
dec
add
dec
add
dec
add
rorb
cmp
ret
ss
dec
add
dec
add
mov
cmp
add
dec
add
lods
dec
add
lods
dec
add
dec
add
dec
add
into
dec
add
stos
dec
add
dec
add
rorb
cmp
mov
orb
dec
add
sub
dec
add
lods
dec
add
rorb
jbe
add
push
dec
add
dec
add
add
lods
dec
add
rorb
cmp
add
dec
add
mov
add
nop
dec
add
dec
add
rorb
testl
cmp
jmp
add
dec
add
inc
dec
add
pop
dec
add
cmc
dec
add
dec
add
mov
add
inc
dec
add
dec
add
mov
dec
add
lea
mov
add
dec
add
dec
add
lods
dec
add
pop
dec
add
add
inc
dec
add
add
stos
dec
add
dec
add
testl
jle
add
dec
add
dec
add
cmc
dec
add
dec
add
sub
dec
add
pop
dec
add
dec
add
push
dec
add
dec
add
dec
add
inc
dec
add
pop
dec
add
fimull
cld
dec
add
in
dec
add
dec
add
dec
add
sub
pop
dec
add
jecxz
add
rorl
enter
testl
pop
dec
add
into
dec
add
test
dec
add
sub
dec
add
lods
dec
add
pop
dec
add
dec
add
dec
add
fimull
cmc
dec
add
test
dec
add
jecxz
add
dec
add
cmc
dec
add
sub
dec
add
pop
dec
add
xchg
into
nop
dec
add
into
dec
add
daa
dec
add
dec
add
pop
dec
add
add
dec
add
dec
add
add
sub
dec
add
dec
add
pop
dec
add
sub
lea
test
dec
add
mov
dec
add
pop
dec
add
dec
add
add
dec
add
mov
dec
add
mov
add
pop
dec
add
xchg
mov
dec
add
mov
add
lea
mov
add
dec
add
pop
dec
add
push
dec
add
mov
lcall
xchg
lcall
and
je
cmp
inc
add
and
add
and
aaa
add
mov
btc
pushf
mov
call
pusha
bt
bt
sub
mov
jmp
cmp
sub
stc
cmp
pushf
and
push
call
mov
call
cmp
clc
test
call
inc
dec
xor
cmc
movzbl
pusha
cmp
xor
movb
call
jmp
mov
seta
jmp
sub
pushf
not
movw
movw
movl
lea
jmp
jmp
pusha
pusha
movl
lea
push
mov
mov
movw
mov
pushl
pushl
ret
pushf
mov
call
mov
call
pushl
popl
mov
movb
movb
lea
jmp
pushl
pushl
pushl
popl
pushl
lea
jmp
jmp
push
call
lea
jne
mov
clc
xorb
setb
pop
pusha
pusha
lea
jmp
sub
jmp
xchg
xchg
movsbw
mov
pushf
mov
call
mov
movb
pushf
lea
jmp
call
movl
pusha
jmp
push
xor
stc
test
bt
mov
bt
add
call
xchg
bt
sub
bt
cwtl
bt
sub
stc
jmp
lea
ror
bt
pushf
neg
adc
neg
call
movb
mov
movw
pusha
movb
push
mov
push
call
mov
call
xor
call
not
clc
clc
sub
bt
stc
test
and
push
mov
jmp
test
bt
sub
jge
shl
jbe
pusha
pusha
mov
jmp
pushf
movw
mov
push
pusha
push
call
bt
pushl
popl
sub
jmp
mov
jmp
rcl
rcr
rcl
rcr
mov
bt
cmc
add
pushf
pusha
lea
jmp
lahf
xor
mov
push
clc
pusha
cmc
xor
test
push
call
cmp
call
movsbw
push
setbe
mov
call
call
push
mov
pushf
movl
lea
jmp
cmp
cmc
push
pusha
xor
movb
dec
cmp
sub
test
mov
pusha
cmc
stc
stc
sub
pushl
mov
mov
pushf
pushl
mov
movb
lea
jmp
push
pushl
popf
mov
pushl
lea
jmp
push
mov
mov
lea
jne
bt
dec
dec
xorb
push
movzbw
mov
push
push
lea
jmp
jmp
push
lea
jne
rcl
push
xorb
lea
pusha
pop
call
pushl
popl
mov
movw
lea
jmp
pushf
cmc
pushl
popl
pushf
add
jmp
and
cmc
add
xor
mov
pusha
cmp
jmp
mov
jmp
call
jmp
pushl
pushl
popl
pusha
mov
lea
jmp
lea
cmc
btc
mov
push
rcl
movsbw
mov
bswap
clc
mov
lea
pushl
rol
rcl
push
btc
mov
push
bt
pushl
rol
call
xchg
mov
shrd
shl
movsbl
mov
shr
pushf
push
mov
bt
add
call
cmc
stc
push
mov
call
bsr
shr
shl
mov
clc
bt
add
call
mov
pushf
pushf
mov
pushl
pushf
call
bts
rcl
rol
inc
cmp
inc
sub
xor
inc
mov
inc
add
cmc
sbb
lea
lea
cmc
cmp
sub
push
pusha
lea
jmp
sar
pushf
mov
pusha
pushf
add
pushl
lea
jmp
pushf
xor
stc
call
pushl
pushl
popl
push
lea
jmp
pusha
mov
jmp
movb
mov
mov
mov
call
pushl
popl
pushf
lea
jmp
test
cmc
cmp
pushl
jmp
movl
btc
btr
movzbw
mov
bswap
bswap
movzbl
push
rol
rcr
btc
cmc
test
add
rcr
stc
ror
rol
clc
lea
and
bt
sub
pusha
lea
pushf
push
pushf
push
lea
jmp
dec
pushf
xor
cmp
stc
jmp
call
xchg
and
mov
shr
cmc
ror
sar
mov
clc
cmc
stc
test
sub
push
shr
push
mov
pusha
mov
jmp
mov
pushf
movb
mov
push
pushf
popl
call
xor
bt
movzbl
movzbl
rol
sar
lea
mov
stc
bt
cmp
movb
sub
cmp
cmc
add
jmp
rol
cmc
stc
pushf
stc
xor
jmp
pusha
mov
bt
pop
rcr
btr
mov
movsbw
movzbl
pushl
popl
movsbw
call
bsf
aam
pusha
mov
mov
pusha
movsbw
adc
mov
xor
clc
setae
or
mov
cmp
mov
add
cmp
push
shld
jmp
push
call
push
jmp
call
cmc
add
mov
clc
add
pushf
push
lea
jmp
pushf
pushf
popl
clc
push
rol
mov
push
mov
push
pusha
pusha
pushf
pop
mov
btc
mov
clc
bts
mov
lea
lea
mov
rol
jmp
mov
call
pushf
popl
pushf
pushl
pushl
popl
pusha
mov
push
lea
jmp
sub
call
lea
push
call
mov
lea
jae
push
not
mov
lea
jmp
push
mov
jmp
pushf
lea
jmp
add
pushf
pusha
call
call
xor
jmp
push
pushl
pushf
popl
push
jmp
pusha
call
mov
call
pushl
lea
jg
mov
pushf
lea
jmp
call
push
mov
pushf
movb
pushl
push
lea
jmp
movzbl
rcr
sbb
push
mov
call
call
sub
rcr
lea
rcl
mov
jmp
mov
shrd
mov
or
cmc
mov
shl
add
mov
shrd
pushl
popl
mov
sar
movl
lea
clc
mov
push
stc
pusha
bt
sub
push
not
movl
pushl
lea
jmp
stc
pushf
bt
cwtl
push
clc
lea
jbe
sub
cmp
bt
mov
bt
test
sub
push
mov
lea
jmp
jmp
call
inc
movzbl
ror
mov
pushf
stc
pushf
add
pusha
movb
pushl
lea
jmp
mov
call
sub
pushf
movw
lea
jmp
pusha
jmp
bt
pusha
cmc
pushl
popl
pushf
pushf
add
push
pushl
popf
pushl
mov
mov
lea
jmp
sub
stc
jmp
sub
pusha
mov
lea
jmp
pushl
popl
push
pusha
mov
lea
jmp
push
mov
pusha
mov
pushf
pushl
movw
movw
mov
pushf
mov
pusha
lea
jmp
pusha
pushl
popl
pushf
push
pushf
lea
jmp
cmp
call
call
mov
mov
pusha
mov
movb
pusha
lea
jmp
pusha
pusha
call
push
pusha
shld
dec
xor
shr
inc
shrd
and
add
neg
clc
lea
not
cmp
neg
and
pusha
inc
seto
cmc
mov
call
mov
push
jmp
jmp
cmp
mov
bt
shld
and
ror
mov
pusha
cmp
bt
add
pushf
pushf
mov
pushf
mov
mov
mov
lea
jmp
pushl
popl
mov
movw
mov
lea
jmp
push
pushl
pushf
movl
push
push
mov
call
add
mov
bsr
cmp
sub
call
pusha
call
dec
mov
mov
call
call
stc
pusha
pushf
xchg
cmc
call
movsbw
pusha
mov
add
cmp
test
clc
mov
cmc
jmp
mov
push
push
pushf
movw
lea
jmp
mov
movw
movzbw
mov
movzbw
movsbw
push
xchg
xchg
not
mov
pusha
movw
pushf
popl
btr
pushf
mov
test
mov
inc
bsr
cmp
mov
mov
bsr
sbb
adc
pushl
popl
xchg
xchg
bsr
btc
movl
stc
mov
sbb
inc
bts
dec
sub
call
shld
shl
mov
call
push
test
lea
jae
sub
jmp
pushf
push
mov
call
movl
mov
jmp
mov
push
lea
jmp
cmc
not
cmp
xor
mov
lea
jmp
mov
push
pushf
movsbw
mov
pushl
mov
pushl
lea
cpuid
pusha
sub
bt
cmpl
push
mov
mov
jmp
mov
pusha
lea
jmp
pushl
popl
push
pushf
lea
jmp
pushf
or
mov
mov
stc
cmc
add
mov
lea
jmp
decl
push
jmp
das
mov
rcr
add
shl
mov
pusha
pushl
bt
sub
pushf
shl
mov
push
mov
jmp
pushf
popl
jmp
mov
jmp
inc
sub
lea
jmp
mov
call
pushf
popl
pushf
mov
pushl
popl
pushf
push
pushf
push
lea
jmp
movb
not
call
or
push
add
clc
ror
pushf
ror
pushf
xor
lea
or
rcr
or
sub
push
lea
pushf
pusha
movb
lea
jmp
shrd
bts
btr
bsr
sub
dec
movsbw
setnp
jmp
mov
pushl
mov
pusha
lea
jmp
call
sub
clc
bt
cmp
sub
jmp
pushf
stc
pushf
sub
stc
pushl
shr
lea
jnp
push
movw
pushf
mov
jmp
call
cmc
cmp
lea
cmc
cmp
push
cmp
call
call
movsbw
bt
mov
bts
mov
stc
bt
stc
cmp
not
cmc
pushf
not
call
or
jmp
pushf
and
mov
pusha
sub
stc
bt
mov
add
call
pushf
popl
call
pushl
pushf
popl
pushf
cmc
mov
cmc
mov
push
test
call
pusha
push
call
mov
push
pushf
popl
jmp
stc
or
xor
neg
bswap
movzbl
bt
movb
pushl
mov
cmc
push
or
pushf
push
push
jmp
and
sub
rol
mov
clc
push
sub
call
rol
shld
mov
clc
cmp
call
movb
mov
jmp
sar
movzbl
clc
add
jmp
stc
sub
cmp
shl
pushf
jmp
stc
test
add
call
push
pusha
sub
mov
call
push
call
stc
call
mov
movb
mov
jmp
mov
pushf
cmc
add
push
pusha
push
lea
jmp
dec
pusha
sub
cmp
call
mov
clc
pusha
test
cmp
sub
pusha
jmp
movl
lea
clc
jmp
stc
mov
clc
rcr
clc
push
pusha
movsbw
mov
clc
stc
lea
rcl
mov
rcr
jmp
lea
jne
bsf
pushf
bt
mov
cmp
push
bt
and
bt
cmp
cmc
call
test
clc
or
stc
mov
pushf
call
stc
clc
clc
add
call
pushf
pushf
mov
pushf
lea
jmp
sar
shr
mov
push
cmc
call
movb
sub
jmp
bswap
sbb
cmc
mov
jmp
call
inc
pushf
pushf
push
call
lea
stc
sub
movsbw
pusha
lea
mov
pushf
mov
lea
jmp
push
mov
jmp
mov
call
push
mov
jmp
and
mov
call
mov
not
mov
call
pusha
pusha
push
pushl
popl
movl
push
movl
movw
lea
jmp
jmp
sub
mov
not
mov
cmp
jmp
ror
clc
dec
shrd
or
lea
xor
sub
not
call
call
bswap
movzww
stc
clc
sub
cmc
sub
clc
rol
push
cmp
stc
add
mov
cmc
sub
call
add
sub
bswap
inc
not
call
push
pushl
mov
pushf
mov
mov
pusha
mov
movb
pushf
pushf
pushf
lea
jmp
rol
clc
jmp
pusha
stc
test
sub
push
pusha
bt
cmpl
jmp
call
add
pop
add
outsl
add
pop
add
pop
pop
add
outsl
pop
add
jp
add
enter
les
adc
add
cltd
arpl
cwtl
xor
add
add
loopne
pop
add
cwtl
addr16
and
xor
gs
fistpl
dec
xchg
bound
sub
pop
add
enter
in
addr16
and
enter
mov
and
mov
pop
pop
add
pop
add
ja
add
push
addr16
pop
pop
add
adc
add
mov
pop
add
pop
add
sbb
add
mov
add
popa
add
sahf
pop
add
outsl
pop
add
and
ror
pop
add
pop
add
rcrl
mov
push
pop
add
pop
add
jnp
add
jns
add
mov
add
pop
pop
add
mov
pop
add
adc
add
add
sahf
data16
pop
add
jnp
add
outsl
pusha
add
repz
popa
add
lcall
sbb
add
push
addr16
pop
popa
add
cvtdq2ps
add
pop
add
popa
add
enter
mov
loopne
popa
add
xor
rcl
add
popa
add
adc
loopne
pop
add
popa
add
pop
pop
add
cmp
popa
add
cwtl
pop
add
push
data16
add
mov
lcall
mov
punpckldq
inc
sub
data16
popa
add
jns
add
movsl
popa
add
fisubs
add
popa
add
jnp
add
and
loopne
popa
add
leave
pop
add
sbb
add
popa
add
mov
bound
xor
pop
add
enter
sbb
add
enter
ficomps
cwtl
mov
or
pusha
add
pop
add
jnp
add
bound
mov
ficomps
mov
pop
add
cwtl
pop
add
add
lea
enter
xchg
pop
add
jecxz
add
xor
dec
xchg
addr16
and
inc
aaa
pop
add
pop
add
leave
pop
add
sbb
add
pop
add
sbb
add
rcrl
jno
add
arpl
add
pop
add
outsl
popa
add
pop
add
aaa
pop
add
les
mov
addr16
pop
pop
add
cmp
pusha
add
pop
add
sub
popa
add
mov
sbbb
add
and
inc
aaa
data16
add
loopne
pusha
add
repz
add
mov
add
shll
jo
pop
add
jno
add
pusha
add
pop
add
leave
add
gs
clc
fistpl
add
add
data16
pusha
add
data16
add
pop
add
jne
add
pop
pop
add
and
mov
fisubs
pop
add
jne
add
and
pop
pusha
add
pop
add
rcrl
add
add
popa
add
cltd
pop
add
outsl
add
pop
add
bound
xor
add
pop
add
enter
movsl
data16
add
pop
add
leave
pop
add
pop
popa
add
add
data16
add
cmp
addr16
and
pop
pop
add
enter
movsl
pusha
add
add
popa
add
xchg
popa
add
add
bound
sbb
add
mov
adc
call
mov
pushf
popl
jmp
push
lea
jmp
btc
pushf
ror
cmc
shl
sbb
rol
add
add
clc
btr
xor
btr
xor
and
sar
add
bts
rcr
mov
push
stc
bt
add
movb
movb
call
mov
mov
push
pusha
mov
pushl
lea
jmp
stc
rol
push
jmp
push
pushf
pushf
mov
pushf
call
mov
not
add
jp
stc
and
push
call
clc
mov
movw
rcr
jmp
mov
pushl
pushf
lea
jmp
mov
pushf
pusha
mov
mov
lea
jnp
pushf
mov
push
mov
pusha
pushf
lea
jmp
call
pushf
pushf
mov
mov
push
lea
jmp
lea
pusha
jmp
push
pusha
mov
push
pushf
popl
call
push
mov
add
pusha
pushf
mov
pushf
movb
movl
lea
jmp
jmp
das
aad
movzbw
cmp
lea
pushf
stc
cmc
test
cmp
pushf
jmp
call
call
shl
mov
pop
sub
clc
rcl
rol
dec
inc
lea
setae
dec
inc
dec
btr
ror
bsf
shl
lea
push
sub
movsbw
call
pusha
mov
pusha
lea
jmp
inc
call
pusha
mov
pushl
movb
pushl
pushf
lea
jmp
btr
and
rcl
stc
mov
bt
add
pusha
lea
jmp
lea
jae
pushf
call
mov
push
pushf
dec
test
sub
pushf
call
pushl
pushf
popl
pushf
cmc
stc
xchg
push
mov
lea
mov
bts
rcr
call
mov
not
jmp
bt
clc
push
bt
sub
movb
call
call
pushl
popl
not
cmc
mov
movl
mov
btr
mov
rol
clc
rol
and
xor
movl
inc
stc
lea
pushf
cmp
sub
pushf
pushf
lea
jmp
jmp
pushf
mov
lea
call
mov
movl
movb
movw
lea
jmp
movb
call
jmp
pushf
mov
push
call
neg
mov
pusha
cmc
cmc
jmp
jmp
pushf
clc
stc
pushl
popf
push
pushf
lea
jmp
xor
stc
test
xchg
bt
test
sub
stc
bt
xchg
jmp
push
movw
pushf
pushl
popl
push
movb
lea
jmp
lea
pushf
lea
jnp
push
mov
push
mov
call
pusha
pushf
popl
jmp
push
clc
pusha
stc
shr
push
jmp
push
jmp
pushf
mov
pushf
call
add
add
sar
jbe
mov
cmc
cmp
cmp
sub
pusha
shr
movb
jmp
pushl
jns
clc
clc
test
add
cmp
popf
push
lea
jmp
btc
mov
push
mov
add
pusha
call
mov
pushf
popl
call
jmp
pushf
jmp
test
add
mov
push
pushf
popl
pusha
jmp
mov
jmp
push
pusha
movw
mov
pusha
jmp
movw
bt
not
clc
jmp
mov
movw
pushf
pushf
lea
jmp
clc
btr
xor
cmp
mov
test
cmc
pushf
test
add
pusha
push
mov
pushf
lea
jmp
pushf
pushl
mov
jmp
call
jmp
mov
pusha
lea
jmp
pushf
cld
pusha
movb
pushl
rep
btr
rcr
mov
movl
bsr
movzbw
bts
mov
std
clc
pushl
popf
mov
lea
jmp
pushf
movzbw
mov
bt
not
cmc
pusha
test
test
not
pushf
pushf
call
call
bt
mov
pushf
jmp
push
pushl
popl
push
lea
jmp
pushf
popl
movw
jmp
pushf
xchg
pusha
pushl
movl
jmp
mov
lea
cpuid
call
not
or
movzbl
pusha
sub
pusha
push
rol
cmc
movb
pushf
add
mov
movb
cmc
jmp
pusha
cmc
add
call
mov
movzbw
bt
btr
rol
rol
bsr
xchg
cmp
add
pop
bswap
ror
and
rol
lea
lea
pushf
rcr
xor
sub
movzbw
jmp
jae
movzbw
mov
lahf
mov
pusha
pushf
lea
jo
push
mov
mov
jmp
mov
call
mov
adc
mov
pusha
cmp
call
pusha
pusha
pushl
mov
movw
movl
pushf
call
pushf
stc
rol
sub
jnp
push
cmp
mov
not
pusha
pushf
xor
movb
lea
jmp
dec
call
call
pusha
pushf
mov
mov
mov
pushf
mov
mov
jmp
shl
xor
movsbw
sub
add
adc
xor
btr
rol
dec
shrd
movzbw
and
inc
bts
mov
cmc
sub
pusha
mov
push
pusha
movb
lea
jmp
mov
movl
lea
jmp
shrd
add
or
mov
bt
bt
add
jmp
stc
pushl
popf
mov
pushf
pushf
lea
jmp
not
movw
lea
jmp
pushf
pusha
mov
mov
jmp
pushf
call
xchg
test
pusha
movb
clc
add
cmp
sub
call
pusha
mov
pushf
pusha
sub
test
test
shr
call
jmp
cld
push
pushf
pushf
rep
shrd
mov
cmp
and
mov
jmp
mov
cmp
pusha
cmp
sub
movl
not
pushf
pushf
push
mov
lea
jmp
pushl
pushf
pushf
popl
call
pusha
jmp
pushf
pusha
mov
pusha
mov
pushf
mov
movb
mov
mov
pushl
lea
jmp
jmp
movzbw
cmc
movl
btr
btr
not
mov
clc
bt
stc
rol
sub
ja
not
call
xchg
test
mov
cmp
pushf
bt
pusha
sub
jmp
mov
movw
movzbl
mov
pop
rol
mov
stc
call
push
push
jmp
pushf
mov
pusha
jmp
push
mov
call
mov
not
bswap
lea
bswap
pushl
popl
not
movl
movl
movzbw
rcr
pushf
push
mov
pushf
jmp
mov
lea
jbe
movzbw
cld
movsbw
mov
call
lea
xor
jmp
mov
jmp
sub
mov
mov
push
pushf
mov
pusha
lea
jmp
shr
lahf
sbb
mov
push
mov
clc
stc
add
push
test
bt
test
neg
call
pusha
mov
pushf
popl
push
pusha
mov
pushf
mov
btc
movsbw
mov
bswap
movzbw
rcl
stc
mov
cmc
mov
stc
mov
stc
pushf
pop
mov
rol
pushf
jmp
pushf
mov
mov
movw
pushl
lea
jp
push
push
movb
pushf
popl
call
jmp
pushl
popl
mov
movl
lea
jmp
lea
jno
mov
push
movb
pushf
push
lea
jmp
not
xchg
mov
lea
setle
movsbl
not
push
not
lea
movsbw
pusha
mov
pushf
mov
pushf
popl
cmc
pusha
rol
clc
mov
btc
clc
pushl
popl
stc
xchg
movl
cmc
pop
cmc
btr
mov
jmp
call
call
jmp
pushf
mov
pushf
popl
pushf
jmp
mov
pushf
mov
movb
lea
jmp
call
jmp
pushf
decl
jmp
sub
clc
pushl
xor
cmp
clc
sub
lea
jl
push
push
mov
movb
lea
jmp
pushf
mov
call
pusha
lea
mov
lea
jmp
pushf
popl
lea
jge
pusha
movw
pushl
popl
mov
lea
jmp
mov
mov
movb
push
mov
jmp
dec
clc
bt
ror
bt
sub
clc
cmp
bt
stc
mov
bt
stc
test
jmp
lea
clc
mov
bts
pusha
mov
bt
btc
jmp
mov
pushf
mov
movw
mov
jmp
mov
mov
movl
pushf
pushf
lea
jmp
dec
cmc
mov
stc
clc
pushf
add
push
push
lea
jmp
or
movzbl
call
call
sub
jne
xor
push
jmp
pushl
popl
mov
lea
jmp
mov
pushl
push
add
movb
mov
movb
push
lea
jmp
jmp
clc
mov
bswap
mov
ror
call
jmp
add
push
call
cmp
pusha
shr
mov
mov
mov
pushf
popl
call
stc
stc
stc
pushl
test
jmp
pusha
pusha
jmp
pushf
add
push
pushf
push
pushl
lea
jmp
not
pushl
call
pushl
clc
or
push
pusha
pushl
jmp
pushf
mov
movl
pushf
call
aam
not
mov
shr
sub
mov
pushf
stc
test
sub
bt
shr
movw
pusha
mov
jmp
mov
push
mov
pusha
pushf
push
mov
lea
jmp
jmp
push
pusha
mov
pushf
popl
pusha
push
call
pusha
lea
jg
push
push
mov
pushl
mov
pushf
popl
push
mov
pusha
mov
movw
pushf
mov
movw
movb
call
movw
call
shrd
sub
shrd
pusha
movzbl
bt
mov
cmc
movb
bt
or
call
movsbw
cmc
movl
pusha
movw
movsbw
xchg
mov
stc
rol
clc
add
pushl
btc
rcl
movsbw
ror
rol
rcl
lea
rcr
shld
sub
push
lea
push
push
pushf
lea
jmp
pushl
popl
pushf
lea
jmp
pushf
push
jmp
pushf
mov
mov
pushf
movb
pusha
lea
jmp
jmp
pushf
mov
push
lea
jmp
stc
mov
neg
pushf
push
pushl
lea
jmp
call
stc
and
pushf
pushf
popl
pushf
lea
jns
popl
pushf
pusha
pushf
lea
jmp
bswap
dec
bsr
movzbl
rcr
cmc
shl
mov
pushl
call
mov
movw
bswap
mov
ror
mov
btc
movsbw
jmp
mov
pushl
pushf
jmp
sub
movb
movw
cmc
and
jmp
add
movw
pusha
lea
jmp
xchg
clc
mov
ror
cmp
and
mov
push
pusha
sub
call
cmp
mov
cmp
cwtl
cmc
cmc
cmc
pushl
sub
pushf
mov
movl
lea
jmp
daa
sbb
clc
mov
clc
call
jbe
not
lea
mov
push
lea
jmp
btr
mov
bt
lea
test
jmp
movb
pusha
mov
pushf
pushf
popl
push
movb
pushl
popl
pushf
pushl
movb
lea
jmp
pushf
mov
pusha
pushl
popl
movb
pushf
pushf
lea
jmp
movb
pushf
popl
jmp
pushf
popl
pushf
pushl
popl
pushf
mov
lea
jmp
xchg
mov
xor
sar
rcr
mov
stc
sub
cmp
jmp
shr
call
rcr
call
call
pusha
lea
jne
call
call
cmc
shr
pushl
pushl
pushf
mov
movw
pushf
popl
call
call
push
mov
pushf
mov
mov
call
dec
sbb
btr
mov
pusha
neg
push
inc
adc
rcl
lea
shr
jmp
test
mov
bswap
movzbl
mov
pusha
jmp
rcr
daa
sub
inc
mov
clc
add
jne
mov
push
pushl
pusha
mov
movb
push
movb
lea
jmp
push
push
movw
lea
jmp
pusha
jmp
pushf
stc
mov
rcl
rcr
ror
clc
mov
call
jmp
mov
push
pushl
jmp
mov
pusha
pushf
pusha
lea
jmp
pushf
popl
pushl
push
jmp
cmp
push
pusha
cwtl
call
movw
pushf
popl
movb
pushl
popl
pushl
lea
jmp
not
movl
bt
bt
test
not
clc
bt
add
ja
sub
pushf
and
pushf
mov
call
bswap
shl
bt
lea
cmp
test
cmp
push
lea
ja
and
mov
call
not
rol
bsr
mov
pushf
pusha
add
jno
sub
push
jmp
mov
movb
call
mov
pushf
pushl
pushl
ret
jmp
mov
movb
pushf
popl
lea
jb
pushf
mov
pushl
popl
push
lea
jmp
mov
bt
mov
bt
mov
movzbl
mov
xchg
mov
btr
pusha
mov
clc
movzbw
btr
ror
pushl
popl
movsbw
pushf
bts
movl
cmc
xchg
bswap
rcr
mov
rcl
pushf
rol
btc
rol
clc
bts
pushf
add
clc
lea
pop
cmc
ror
xchg
lea
pushl
sub
not
call
push
mov
stc
btc
not
movsbl
mov
stc
not
pushl
popl
not
bts
bts
pushf
movl
cmc
rcr
pushf
mov
bt
pushf
clc
call
cmc
pushf
sub
cmp
bt
pushf
pushf
cmpl
push
mov
pusha
mov
jmp
lea
jne
pusha
pusha
push
movl
mov
pushf
pushl
pushl
lea
jmp
sub
jle
shl
xor
mov
push
stc
test
add
pusha
push
lea
jmp
add
add
stc
mov
bt
pushf
add
pusha
pusha
movb
pushl
lea
jmp
mov
mov
pushf
mov
pushl
pushf
lea
jmp
clc
sub
pushf
jmp
bt
movw
xor
movzbl
lea
dec
inc
dec
lea
cmc
test
stc
jmp
stc
test
push
add
pusha
mov
pushf
pushl
lea
jmp
sub
sub
sub
bswap
sub
mov
bt
shl
lea
neg
bsr
add
sub
inc
sub
clc
shl
rol
movzbl
clc
push
test
mov
cmp
cmp
call
movsbl
pusha
jmp
pushf
popl
jmp
jmp
pushf
popl
call
dec
mov
cltd
adc
pop
btc
bsf
lea
add
pop
bt
ror
pop
das
aaa
cltd
shrd
popf
movsbw
cwtl
pushf
movzbw
mov
not
movzbw
mov
not
pusha
movsbw
push
mov
call
shl
jmp
lea
jne
neg
pushf
call
pusha
sub
pushf
push
mov
pushf
pushf
push
lea
jmp
sub
pushf
pushf
neg
call
sub
call
mov
jmp
jmp
mov
pushf
movb
mov
pushf
push
jmp
dec
pusha
cmc
call
test
xor
bt
jmp
pushf
pushf
mov
bswap
pushf
pop
jmp
call
rol
neg
bswap
inc
add
movzbw
ror
cmc
xchg
rol
lea
btc
sub
pushf
pushl
lea
lea
lea
pusha
push
pushf
movb
lea
jmp
call
call
pushf
pushl
popl
push
movb
mov
lea
jmp
sub
pushl
pushl
jmp
setnp
call
mov
movb
push
movw
lea
jmp
xor
dec
mov
cmp
jmp
jmp
shr
call
push
pusha
mov
push
pushf
mov
call
pushf
mov
jmp
call
movzbw
test
mov
cmp
add
pushf
call
lea
jle
mov
call
cmc
not
call
pushf
mov
lea
pushf
pusha
call
not
mov
pushf
lea
mov
std
mov
bswap
movzbw
mov
push
push
cld
mov
pusha
mov
call
mov
lea
jge
pushf
mov
pusha
push
lea
jmp
btc
and
mov
call
cmc
add
mov
mov
push
pushf
lea
jmp
pushf
call
pushl
popl
movb
lea
jmp
pushl
popl
pushl
lea
jmp
pushl
mov
stc
sub
push
pushf
pusha
inc
pushf
mov
mov
pushf
lea
jmp
and
btc
mov
call
shrd
mov
bt
clc
add
pusha
pushf
push
lea
jmp
push
mov
pushl
pushf
lea
jmp
cmc
add
jmp
mov
call
stc
pushf
lea
bt
push
bt
sub
pushl
sub
pushl
mov
mov
mov
lea
jmp
lea
jne
pushf
jmp
pushf
popl
call
mov
mov
pushl
ret
add
mov
push
stc
pushl
mov
mov
add
pushf
movw
jmp
cmp
push
cmc
xchg
pushl
jmp
pushl
popl
pushl
mov
mov
lea
jmp
mov
push
call
pushl
lea
lea
jne
pusha
mov
mov
mov
movb
pushl
lea
jmp
pusha
sub
bt
stc
cmpl
jmp
jmp
push
pushl
popl
pushf
movl
push
lea
jmp
lahf
lahf
mov
push
push
mov
pushl
pushl
lea
cpuid
pushf
sub
pushf
cmpl
pusha
call
jmp
test
shl
shl
stc
movzww
clc
stc
push
bt
xor
call
cmp
sub
stc
test
clc
cmp
not
movw
call
push
pop
mov
lea
lea
inc
sub
sbb
sar
mov
or
rcr
lea
bt
mov
and
btr
rcr
shld
add
dec
pusha
bts
clc
mov
pop
shl
dec
and
sub
inc
pop
clc
sub
dec
or
bts
xor
pushl
movsbw
push
inc
cmp
sub
stc
movzbl
lea
rcl
mov
pushf
pushf
call
and
pusha
mov
mov
pushf
call
mov
pushf
mov
lea
jmp
call
bswap
pusha
setns
mov
not
pushf
mov
pushf
pushf
lea
cpuid
jmp
movsbw
xchg
pushf
bswap
mov
xchg
pop
mov
pop
xchg
movsbw
setae
pushf
popl
pop
not
not
not
mov
dec
not
not
pushl
popl
dec
push
movsbw
movzbl
inc
movzbw
mov
not
not
lea
bswap
xchg
dec
inc
not
add
bswap
not
lea
jmp
bsf
bts
sar
sbb
mov
push
bswap
shr
xor
call
sub
test
call
btc
btr
mov
stc
clc
rol
cmp
pushf
not
movw
jmp
call
pushf
mov
push
movb
push
pushl
lea
jmp
mov
pusha
mov
movl
pushf
lea
jmp
xchg
movsbw
movsbw
xchg
pushf
mov
not
call
mov
pushf
dec
jmp
lea
ja
pushf
lea
rol
lea
cmp
sbb
sar
sub
rol
cwtl
ror
shld
lea
shr
bswap
and
adc
sub
not
movsbl
pushf
mov
mov
push
not
movzbl
pushf
popl
pushf
jmp
movzbw
inc
jmp
or
call
jmp
dec
cmp
add
cbtw
mov
mov
or
dec
mov
test
cmp
sub
stc
shl
pusha
movb
push
push
mov
call
pushf
popl
push
neg
sub
mov
cmp
bsr
xchg
xchg
cmc
rol
bts
pushl
popl
dec
movl
pushf
movsbw
setb
mov
test
sub
call
mov
mov
pusha
movb
lea
jmp
jmp
push
sub
.byte
inc
mov
push
clc
shl
push
lea
pusha
jmp
mov
call
jae
loop
xchg
dec
jge
mov
cmpsb
data16
xor
or
mov
add
std
pop
ss
pop
outsl
cmpsb
xchg
adc
fnstenv
in
loop
cmc
mov
cmp
xchg
cwtl
fisttpll
cmpsb
std
xor
js
aas
addr16
decb
mov
int
sub
hlt
cltd
push
rclb
xchg
xchg
mov
mov
inc
cmpb
dec
cld
stos
in
fwait
sbb
pop
lock
mov
xchg
pop
movsb
addb
adc
inc
subb
and
jmp
clc
mov
testl
push
adc
mov
pusha
mov
xchg
push
xchg
cmpsb
mov
push
push
scas
xlat
ja
test
popaw
test
sahf
cmc
xor
movd
in
jg
pop
decl
mov
xor
cmp
cmp
jmp
cmp
lea
lahf
adc
or
rolb
sti
cmc
mov
add
mov
sbb
sub
out
xor
xor
popf
pop
sbb
ljmp
xorb
inc
std
pop
or
push
add
cli
add
out
mov
movsb
js
jecxz
sub
cmp
xor
repnz
sbb
dec
cwtl
xchg
mov
add
push
pop
dec
test
cld
int3
int3
roll
int3
inc
push
lea
sbb
push
and
cltd
cmp
rcrl
push
in
call
dec
mov
xchg
sti
jg
xchg
cmp
or
mov
sbb
cmp
in
rclb
sahf
in
push
cmp
iret
jo
loope
push
cmp
fiadds
add
fdivrl
adc
ret
push
pop
xlat
xor
inc
cltd
fs
rolb
cmp
outsb
sti
mov
xlat
pop
test
cli
mov
or
ljmp
fdivrs
jp
mov
mov
inc
jle
add
jno
sbb
mov
enter
xchg
pop
xchg
mov
jns
mov
push
lea
pextrw
test
jp
stc
mov
fwait
std
mov
mov
repnz
pop
inc
loope
lret
adc
mov
push
pop
test
ror
inc
imul
fs
cld
xorb
or
push
or
pop
sbb
sahf
cmp
ret
aaa
cmpl
ja
ljmp
arpl
roll
lahf
pop
gs
or
test
push
sub
jecxz
cwtl
xchg
push
sbb
jmp
fcoms
ds
adc
add
ja
sbb
xchg
push
jnp
or
jo
mov
cmp
rcr
cmpsl
jae
gs
test
jle
sub
rorl
pop
push
insl
mov
jmp
pop
mov
popa
mov
jp
insl
lret
fimull
mov
in
cwtl
loopne
rolb
pop
repnz
push
mov
std
in
stos
hlt
xor
sbb
xchg
push
lsl
iret
stos
imul
cmp
ljmp
push
into
das
in
pusha
incl
aas
xchg
xor
mov
imul
jge
insl
cld
adcl
ljmp
sub
mov
ljmp
and
mov
es
push
lea
fistps
and
add
scas
cmp
leave
adc
lahf
sbb
mov
pushf
adc
call
pop
icebp
out
call
in
push
cs
test
jl
mov
ret
mov
testl
dec
jle
adc
inc
ljmp
mov
outsl
lock
pop
mov
mov
fldcw
out
jg
arpl
adc
mov
xlat
and
mov
lods
out
jns,pn
lods
mov
jg
add
inc
mov
rcr
ds
mov
jb
mov
and
lahf
sbb
push
pusha
adc
rcr
push
sub
bsf
not
mov
shl
and
sub
call
add
dec
outsb
je
jb
gs
gs
fs
imul
mov
jg
inc
xchg
inc
add
pop
out
push
sbb
dec
scas
jmp
add
cmp
arpl
lds
xchg
jno
xchg
ret
xor
cld
addr16
out
xor
stos
les
ja
pop
shlb
mov
add
das
outsb
dec
test
jge
sbb
pop
mov
lock
sbb
pop
sub
jmp
lods
mov
stc
fs
pop
jge
ja
mov
mov
aas
and
cmp
lock
ret
xchg
add
add
push
lea
je
sub
lea
pushf
jmp
adcb
adc
mov
mov
pop
or
adc
pop
cmpsl
daa
aam
push
repz
aad
push
addl
sbb
mov
pop
outsb
dec
repnz
adc
cwtl
inc
out
les
sub
push
ljmp
or
ss
clc
xor
test
and
mov
fisubrs
das
nop
dec
jl
cmp
aad
andl
mov
loopne
out
icebp
pop
inc
mov
out
sub
xor
or
les
sub
movzbl
pop
mov
pushf
bswap
shld
inc
mov
shr
dec
sub
xchg
jmp
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
imul
and
int3
adc
or
xor
and
cmp
cmc
push
fsts
into
leave
or
cmp
andb
hlt
or
add
into
xor
jg
iret
arpl
test
orl
movsb
out
xlat
adc
push
cmp
dec
cmp
cmc
movb
lea
inc
add
sbb
pop
sbb
mov
adc
test
pop
fadds
mov
rorl
inc
cltd
push
je
pop
sub
push
movsb
mov
jno
jle
inc
inc
add
cmc
mov
or
mov
not
sub
ror
shl
lea
pushf
mov
aas
bt
shl
mov
shr
shr
sub
cmp
cmp
lahf
pushf
and
rcl
rol
add
mov
jmp
pushf
bt
cmp
pushf
call
xor
push
dec
dec
or
scas
scas
sub
lea
imul
sarb
popf
push
fisttpll
mov
pushf
xchg
adc
test
cld
std
loopne
xchg
and
push
dec
cmp
pop
popf
add
lods
je
jo
daa
rclb
movsl
cmpsb
out
in
jl
test
jecxz
pop
movsb
fs
imulb
popa
fisubl
jns
cmpsl
das
sub
out
add
pop
push
xor
dec
imul
lods
lods
inc
xor
jmp
mov
add
call
or
xchg
inc
fidivl
test
sub
in
aaa
cmp
inc
stc
xchg
sbb
pop
ret
repnz
xor
mov
mov
sarb
ret
mov
push
in
leave
pop
test
dec
adc
outsb
mov
cmpl
sbb
ss
pushf
addr16
mov
in
adc
sub
icebp
imul
jo
push
jecxz
sub
and
mov
mov
push
xchg
pop
push
fstpl
loope
xor
adc
lahf
sbb
lods
lods
and
cmp
leave
inc
ret
lcall
push
repz
aad
icebp
xor
movsl
sub
pop
dec
sbb
xor
inc
xchg
cld
xor
mov
mov
outsl
scas
sbb
or
xchg
andl
out
xchg
push
les
rol
push
lods
imul
inc
hlt
movsb
xor
push
mov
lret
rorb
sbb
inc
stc
jmp
mov
jmp
pushl
cmc
add
lea
test
pushf
cmp
movb
lea
jne
pusha
inc
pushf
pusha
lea
jb
inc
jle
cmpb
call
test
xchg
nop
data16
cmp
stos
or
ficoms
test
adc
in
arpl
adc
jmp
sbb
push
lcall
jl
mov
add
and
nop
mov
cli
loope
xor
sub
mov
mov
sbb
ss
dec
insb
loopne
pop
inc
and
jo
mov
mov
out
movsb
loope
incl
mov
sub
scas
jge
mov
mov
pop
add
call
pushf
lea
call
call
lea
jb
movsbw
movzbl
and
shr
clc
jmp
push
or
js
int
jl
popa
fdivrl
pop
test
push
scas
mov
adc
movb
jmp
rorb
pop
add
xor
sub
loop
jl
les
or
fistpll
xchg
jbe
mov
test
mov
bound
leave
jle
loopne
shrb
sbb
sbb
cmp
pop
aaa
sub
sti
imul
out
mov
xchg
shrb
movsl
inc
jns
cmp
cmp
or
push
das
add
jmp
add
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
or
mov
pushf
call
pop
lods
clc
jge
jle
xchg
addr16
inc
mov
ljmp
mov
jecxz
daa
dec
mov
loopne
js
leave
xchg
add
xchg
adc
pop
pop
fidivrl
lahf
pop
fisttps
xchg
scas
cld
mov
mov
jmp
icebp
cld
ja
rol
div
ss
xlat
mov
cld
sbb
pop
inc
xchg
dec
out
test
test
inc
ret
pop
or
adc
cmpsl
sub
lret
mov
push
push
push
inc
inc
in
xchg
jecxz
adc
xor
adc
add
push
sar
imul
push
and
adc
xchg
cltd
and
pop
imul
add
not
pop
mov
pushf
jmp
call
shl
mov
adc
setne
inc
mov
rcl
shr
rcl
mov
jmp
pop
sub
mov
lds
lcall
mov
mov
outsb
into
or
sbb
dec
sub
pusha
loope
fstpt
lods
enter
mov
pop
out
mov
sub
inc
lods
push
pushf
pop
inc
out
xchg
test
nop
mov
cld
cmp
les
lret
mov
clc
xor
cmp
scas
fwait
cwtl
fs
jecxz
push
mov
ja
popf
add
pop
mov
and
js
decl
into
dec
into
or
dec
dec
imul
and
shll
repz
inc
push
movb
test
mov
push
and
adc
sbb
push
push
rorb
aas
orb
xor
xchg
xchg
push
cli
mov
adc
in
cmp
lahf
and
and
pushf
lea
call
lea
call
stc
test
add
cmc
cmp
pushf
call
jmp
hlt
and
mov
imul
jmp
outsb
shrb
int
sub
fcmovnbe
push
loope
jge
pop
mov
adc
pop
pop
cmp
scas
xor
testb
repnz
sub
push
adc
scas
mov
jo
jge
xlat
push
movsl
and
pop
lods
fiaddl
je
popf
xchg
xchg
icebp
mov
ss
and
inc
imulb
dec
xchg
mov
cmp
in
bound
pushf
movsl
jo
icebp
out
lahf
and
mov
mov
jnp
bound
pop
data16
in
sub
ljmp
loop
mov
in
sahf
jg
sbb
cmp
scas
xor
clc
addr16
mov
mov
add
add
aam
sbb
mov
push
fwait
inc
scas
jns
jmp
leave
aas
shlb
cmpsb
cmpsl
mov
loopne
push
andb
mov
xor
sub
adc
mov
fistps
cmp
and
ja
push
mov
bound
inc
shl
inc
addr16
pop
cwtl
ficompl
or
mov
into
add
sub
mov
call
or
add
sub
mov
lods
scas
cli
test
test
js
cmp
push
nop
push
mov
xor
xchg
jb
pop
fbstp
pop
adcb
mov
js
mov
pop
in
sar
adc
flds
sub
sbb
add
cmp
ja
mov
inc
lret
jno
xchg
cmp
leave
ja
dec
lcall
rclb
bound
inc
adcb
mov
push
mov
ja
outsl
movaps
ret
mov
mov
les
in
mov
or
inc
mov
aas
sbb
data16
arpl
bound
and
inc
mov
mov
mov
pop
jmp
mov
inc
aaa
roll
notl
in
repnz
adc
test
cli
fs
mov
mov
xchg
lock
repz
scas
inc
pop
jne
aas
push
movsl
test
test
sbb
aam
mov
or
leave
data16
adc
std
rcrb
pusha
fsts
xor
sub
ljmp
adc
pushf
call
mov
lcall
or
cmpsl
addr16
test
arpl
add
andl
fs
in
ret
and
je
addr16
pop
addr16
sub
jb
push
outsl
mov
int3
incl
ret
in
movsb
in
dec
mov
shr
movsb
dec
add
aam
in
fs
xor
mov
adc
repnz
cld
cltd
jl
enter
in
or
sbb
insl
cli
cmp
arpl
movsb
add
jle
adc
xor
test
dec
rcrl
pop
ljmp
mov
add
movb
dec
clc
cmp
jmp
inc
adc
xor
adc
sar
add
xchg
inc
rcr
shld
xor
call
call
bt
cmp
push
test
call
fiaddl
jns
std
imul
bnd
lods
sub
sbb
cmpsl
data16
fsubl
out
ja
and
loop
ss
outsb
cmp
fildll
in
mov
mov
lret
sti
outsl
jo
xor
fsubs
out
cli
out
mov
mov
aam
in
jmp
imul
or
fwait
mov
add
mov
mov
xlat
nop
icebp
add
pop
mov
stos
or
add
or
push
insl
xchg
mov
or
adc
addr16
shl
loopne
cmpsl
mov
push
in
dec
and
fcompl
leave
jg
pop
lods
insl
out
cli
loope
lret
int
rorb
jo
pop
and
mov
pushf
ds
je
mov
inc
sahf
xchg
out
orl
je
cwtl
int
std
xor
mov
les
jo
movsb
repnz
add
and
mov
popa
popa
mov
aas
or
fldl
jecxz
and
repnz
or
pushf
insb
jae
push
sbb
and
push
scas
loope
in
fdivrs
pop
lods
out
cmpsb
cmpsl
xchg
mov
sub
imul
jns
add
xchg
sub
in
popa
xor
in
mov
out
nop
nop
mov
pop
xorb
jo
loop
xchg
arpl
lods
insb
mov
adc
pop
cltd
scas
inc
sbb
or
mov
leave
std
and
or
fs
lcall
out
pop
hlt
cmp
mov
outsl
lock
inc
and
mov
addr16
and
jmp
inc
xchg
mov
adc
mov
jo
test
and
mov
cld
repz
jno
sbb
call
sahf
addr16
mov
jl
push
into
lret
int3
adc
sbb
push
push
mov
push
popa
lret
mov
push
js
ss
cwtl
into
pop
sahf
cmp
mov
in
js
out
lcall
add
jecxz
sub
mov
lahf
pop
xchg
lods
sbb
aam
aad
xchg
je
ds
lds
jb
push
and
out
sub
bnd
imul
enter
lock
aaa
into
mov
lods
push
mov
sub
jl
popf
cmp
cmp
fbld
pop
mov
lock
push
mov
cwtl
and
fbld
gs
cltd
jbe
pop
fdivl
rorb
imul
pop
adc
sbb
iret
add
and
adc
or
aad
gs
hlt
enter
xchg
in
pop
or
dec
and
and
add
pusha
vmread
mov
push
push
test
pop
sbb
dec
adc
add
nop
out
dec
rcrl
int3
dec
push
out
int3
shll
mov
mov
rolb
cmp
xchg
mov
outsb
dec
adc
or
outsl
mov
ret
fstpl
xor
sbb
xchg
mov
pop
mov
jecxz
ja
jae
test
add
jbe
test
xchg
outsb
mov
aad
sbb
lock
mov
xchg
nop
dec
and
addl
addr16
test
add
aaa
mov
inc
mov
popl
mov
andl
lcall
push
xor
mov
jne
outsb
outsb
mov
lds
int3
xchg
jb
pushf
outsb
push
fsubrs
aas
shr
push
clc
out
iret
inc
push
out
hlt
add
cwtl
cmpl
dec
sarl
ds
pusha
xor
nop
sbb
inc
or
or
rolb
nop
ror
sub
sub
jbe
dec
dec
ret
fcomp
mov
leave
lods
cmpsb
mov
mov
jne
sbbb
adc
cmp
or
call
jecxz
jg
in
aad
daa
mov
iret
cltd
mov
add
mov
lret
mov
cmp
shrb
fwait
push
pusha
cmp
and
mov
je
daa
add
lret
popl
mov
dec
icebp
fsubs
jp
sub
lret
loope
jmp
sahf
adc
je
xor
int3
out
fs
out
pop
imul
pushw
cmc
push
dec
dec
pop
xchg
push
ja
or
scas
sub
mov
xor
push
cmc
jo
call
addl
shr
mov
xlat
push
ret
leave
sub
or
mov
jo
inc
jle
shlb
sub
mov
inc
mov
jbe
add
loop
pop
iret
adc
inc
aaa
test
stos
ss
fldcw
sti
cmp
sbb
inc
mov
outsl
xor
or
mov
test
fcomps
mov
xor
mov
jg
aas
mov
mov
mov
iret
lock
jb
rcrl
adc
mov
scas
call
pop
sbbb
lret
add
cli
scas
xchg
push
roll
outsl
cmpsl
or
les
inc
jecxz
push
sub
push
pop
xor
or
push
lea
pop
int
mov
push
cs
out
and
jl
pop
xor
mov
mov
int
out
xchg
imul
adc
xchg
into
clc
loopne
jp
push
pop
cmp
mov
icebp
and
sbb
cmp
fnstcw
and
and
leave
mov
adc
xchg
cld
inc
fldenv
push
push
jmp
je
roll
cmpl
inc
pop
jl
sbbl
adc
sbb
xchg
sub
fisttpl
inc
sub
add
mov
in
rolb
repz
mov
or
leave
sbb
out
inc
mov
sub
in
rol
out
outsl
adc
inc
mov
dec
inc
adc
lods
lock
int3
inc
cli
add
and
jmp
cltd
in
cli
std
insl
out
mov
sub
mov
cs
arpl
or
jge
fidivrl
in
iret
dec
inc
jno
addr16
or
int3
out
enter
pop
lcall
lock
testl
in
push
mov
fstps
nop/reserved
test
jg
lods
mov
ret
sub
shrl
sub
mov
stc
adc
into
mov
rolb
cld
imul
outsb
sub
fwait
les
fmuls
out
movsl
enter
jl
sub
clc
inc
je
sbb
xor
pop
cmp
out
mov
add
dec
addr16
into
gs
cmc
mov
scas
dec
jo
jne
push
xor
bound
cmp
test
lds
xchg
dec
mov
enter
jl
ja
pop
jmp
mov
and
int
pop
insb
jge
mov
ret
mov
rol
xchg
and
rorl
sub
fildll
pop
or
ds
test
xor
ror
mov
xchg
lea
scas
lret
loopne
insb
inc
pop
push
into
xchg
je
dec
push
and
cmpsb
das
lcall
add
or
add
mov
sbb
pop
cmc
nop
pop
or
outsb
orl
xor
sbb
pop
lahf
icebp
mov
lcall
andb
dec
push
cli
mov
jo
jl
push
enter
fstps
adc
push
and
add
push
popa
pop
les
lods
mov
sbb
arpl
push
loope
sub
add
cs
xchg
or
flds
xchg
adc
int
jl
xchg
dec
sub
fs
mov
sub
idivl
add
mov
sbb
and
pop
xchg
add
pushf
mov
pop
and
cmc
js
cmp
pop
mov
push
push
imul
call
data16
fwait
dec
lds
rcl
out
sbb
sub
lret
cwtl
push
dec
sub
dec
dec
mov
lss
xchg
repnz
sub
inc
pop
xor
xchg
aad
scas
out
or
fwait
sub
and
jecxz
les
mov
aad
cmp
xor
shrb
or
stos
mov
nop
mov
pop
je
in
pop
xchg
out
mov
sbb
cwtl
cmp
jbe
push
cltd
out
xlat
jle
xor
iret
dec
ljmp
sahf
xchg
and
test
jbe
iret
adc
ds
in
dec
xchg
mov
push
cmp
xchg
insl
imul
fidivrl
in
mov
ja
aaa
inc
xchg
push
sbb
addl
mov
dec
jb
dec
insb
test
push
and
rol
out
mov
lret
pop
adc
shlb
pop
dec
outsl
jecxz
out
sub
ret
mov
stos
xor
jno
dec
xor
lret
or
xchg
xor
xor
dec
icebp
ljmp
sub
imul
push
pop
push
adc
das
data16
push
push
cld
in
mov
jnp
lds
pushf
cli
push
ret
lret
outsl
jns
lock
push
ret
cmp
imul
or
inc
xor
xchg
xor
scas
sub
fisubrl
dec
fstpt
daa
call
push
movsb
insb
int3
andl
enter
pusha
cmp
cmp
mov
enter
loope
sbb
movsl
sbb
test
push
mov
cmp
or
daa
or
jb
jle
mov
xor
out
out
add
jb
nop
mov
fcompl
ljmp
rorb
les
mov
lret
sahf
cmovs
jns
aas
mov
aam
mov
dec
push
dec
xchg
jecxz
lods
adcl
pop
ja
push
inc
lods
xchg
push
loop
push
in
aam
inc
mov
pop
scas
push
shrb
jg
aaa
int
mov
clc
cmp
mov
mov
sub
movsl
sahf
sar
aad
in
test
inc
sbb
or
mov
scas
jb
and
pop
ds
test
push
call
neg
fcoms
in
leave
scas
arpl
icebp
mov
daa
test
fisttps
aaa
jb
jae
push
cli
xor
cwtl
adcl
inc
mov
fwait
rcll
xchg
pop
mov
cmp
test
lds
fistps
testl
mov
or
lods
and
sub
dec
sub
inc
repnz
jg
jbe
inc
xor
sbb
aam
or
fcoml
outsb
mov
not
push
and
das
mov
add
fnstcw
int
mov
pop
or
aad
pop
or
or
loope
enter
icebp
and
push
addr16
dec
sbb
mov
dec
and
idivl
adc
stos
push
sub
mov
mov
scas
mov
mov
fstps
cs
mov
in
leave
xchg
pop
mov
pop
addb
lea
je
mov
pop
incb
imul
inc
test
mov
cmp
icebp
out
sti
arpl
aas
xchg
sub
mov
int3
stos
pushf
fnstcw
icebp
mov
jnp
or
testb
iret
sahf
cltd
mov
add
cmp
and
push
push
cmpsb
and
out
jbe
mov
leave
in
pusha
ret
adc
push
mov
or
mov
and
lret
lret
pusha
ja
andb
mov
arpl
in
pop
enter
addb
push
inc
stc
mov
mov
in
or
mov
fdivs
or
test
mov
ret
ficompl
sub
pop
pop
sti
xchg
in
mov
popa
pop
jne,pn
ds
sub
or
mov
shlb
scas
add
sub
in
lret
rolb
pop
mov
xor
cs
mov
adc
dec
mov
fwait
jns
push
shll
daa
arpl
add
insb
jbe
pop
mov
imulb
out
xchg
or
loope
mov
stos
int
aam
cmpsb
inc
xlat
pushl
xchg
adc
mov
and
dec
pop
adc
xor
xor
adc
lds
ja
in
adc
adc
test
xchg
je
sub
lds
mov
sbb
pop
xchg
lea
sub
loopew
cltd
test
test
ret
stos
jns
jg
out
fdivs
xchg
imul
loopne
rclb
mov
dec
xchg
mov
push
cmp
cmp
xor
lods
sbb
mov
cmp
pop
inc
incb
pop
std
inc
pop
sbb
out
pop
fdivs
cmc
adc
add
mov
add
rolb
xchg
mov
dec
xchg
push
jge
mov
mov
outsl
adc
jns
sbbb
push
xchg
and
and
mov
sub
or
mov
jp
test
iret
mov
add
mov
inc
mov
sbb
loope
aas
ret
aam
cmp
mov
ja
push
sub
inc
test
lret
add
cmpsl
dec
in
jne
movsl
out
lods
mov
lds
adc
xlat
sbb
mov
lea
adc
shll
loope
and
xchg
fsubrl
sbb
jns
arpl
mov
mov
ljmp
pushl
inc
adc
cmp
pusha
jecxz
or
punpckhbw
hlt
shl
in
scas
and
jae
lahf
aad
lds
cli
xchg
aam
push
or
add
cmp
subb
je
fnstenv
xchg
lds
shrb
idivb
insb
mov
aam
fs
shl
mov
popa
xchg
aad
sbb
dec
sub
shll
xchg
sub
imul
mov
xchg
jae
jnp
outsb
ss
pushf
sbb
xchg
lret
xor
std
jg
bound
jnp
bnd
push
xlat
pop
jo
imul
daa
lcall
inc
shrb
add
ficoms
push
inc
jns
cli
int3
and
push
mov
inc
gs
mul
loope
int3
dec
adc
ljmp
cmp
addr16
push
cmpsb
lret
lahf
xchg
or
mov
pushf
subb
leave
cmpsl
cltd
add
popf
cwtl
sbb
cli
fiaddl
cwtl
fistpll
cmp
pusha
dec
and
cli
pop
adc
jno
xchg
push
adc
hlt
ret
outsb
loop
cltd
inc
cmp
pop
or
mov
xchg
adc
cmp
imul
cmp
arpl
jcxz
jl
imul
inc
fildll
sub
jmp
scas
stos
sbb
into
pop
frndint
sbb
sbb
push
or
fprem1
fmul
divl
pop
and
mov
stc
aas
cmp
pop
jle
iret
or
sti
mov
xchg
mov
and
mov
das
mov
movb
cmp
scas
push
leave
imul
inc
sub
jl
dec
mov
pop
jne
ja
inc
sbbb
push
divb
add
jnp
sbb
or
push
jecxz
lds
push
xor
adc
pop
jbe
fisubs
inc
mov
dec
or
sbb
xor
popf
insl
cmp
rcrl
je
shll
int
cmp
sub
repz
or
aad
aam
pop
and
mov
mov
lret
cmc
out
fs
imul
fnstsw
mov
jnp
movsb
rcll
push
loopne
in
fidivrl
je
pusha
insl
xchg
repz
fdivrs
or
filds
mov
mov
aad
mov
adc
cmp
inc
pop
test
repnz
pop
cmc
push
cmp
arpl
push
hlt
dec
or
cmp
mov
dec
int3
xchg
jb
mov
popf
mov
into
icebp
jb
bound
adc
div
stc
cmp
xchg
sbb
mov
arpl
push
cmp
in
negl
mov
mov
inc
outsb
imul
clc
testb
cmp
cmpsl
adcb
mov
les
popf
ret
stos
movsl
push
into
inc
sti
addr16
sbb
into
or
push
insb
xchg
imul
or
loope
xchg
sbb
cmp
xchg
adc
scas
stos
dec
xchg
cmp
pop
or
push
mov
inc
mov
push
dec
mov
negl
xor
outsl
mov
mov
in
mov
fadds
fldl2e
cmp
mov
xchg
xchg
jne
cld
and
and
stc
fsub
std
clc
push
mov
mov
repz
or
xor
outsb
mov
dec
jno
push
dec
into
jge
sub
mov
jae
bound
xchg
out
subl
or
inc
lcall
inc
out
xor
push
test
or
fsts
test
fildl
stos
add
adc
pop
clc
xor
xchg
in
out
and
jg
xor
sub
shl
outsb
pop
xor
data16
mov
stos
jl
add
in
lahf
lret
fdivl
mov
das
mov
fdivl
imul
jnp
out
add
out
int3
dec
jns
aaa
rcr
clc
xchg
jl
push
loop
mov
or
shlb
insl
dec
ficomps
add
in
push
sahf
lahf
adc
adc
push
dec
jmp
cmp
sbb
sbb
sub
mov
lea
js
cmc
inc
xor
pop
dec
adc
jp
add
insl
jecxz
add
and
mov
in
icebp
sbb
into
push
pop
pop
mov
add
jecxz
xchg
out
mov
test
out
mov
ljmp
sbb
and
jne
mov
jbe
push
in
push
int
inc
dec
outsl
push
push
cmpb
and
inc
pop
inc
xchg
jg
push
fisttps
or
xchg
mov
lock
insl
dec
imul
sub
lock
gs
adc
insl
jb
mov
inc
or
addr16
cld
addb
push
or
subw
xor
enter
inc
int3
dec
aad
xor
es
test
out
jl
arpl
fisubrl
nop
cmpb
in
pop
mov
inc
push
inc
ret
out
mov
inc
pop
and
es
std
daa
daa
pop
sub
in
inc
popf
lret
pusha
mov
ljmp
push
inc
cmp
push
cmp
xor
pop
mov
lds
popf
fildll
jp
xchg
cmp
mov
scas
pop
push
dec
dec
jmp
cmp
or
jno
sbb
dec
mov
aas
jns
test
dec
jne
pop
cmpsl
jecxz
lds
sti
inc
mov
rolb
mov
sahf
jae
in
xor
pop
push
int
bound
cs
data16
enter
cmp
pop
fdivrs
mov
add
sbb
jecxz
iret
mov
pop
sbb
cld
inc
push
into
jg
rcrb
xor
pop
pop
cmp
or
ja
ss
mov
jae
mov
pop
ss
fsubs
mov
lahf
daa
nopl
rcrb
frstor
roll
xchg
add
nop
add
repnz
pop
pop
sahf
pop
xor
sbb
sub
scas
pusha
mov
js
rol
and
sub
xor
mov
call
mov
or
scas
xor
pusha
dec
dec
push
test
mov
jmp
leave
cltd
or
iret
xchg
popa
dec
xchg
sbbl
mov
sbb
pop
sbb
mov
fists
scas
xchg
sqrtps
xchg
xor
dec
cld
push
jecxz
xchg
lret
movl
inc
mov
add
pop
xchg
cmp
repnz
bound
cmp
js
mov
in
data16
jge
xchg
nop
mov
shll
push
not
hlt
addb
icebp
stos
inc
inc
pop
inc
sub
xchg
movsl
add
dec
fwait
sub
loopne
iret
jno
outsl
je
pop
inc
shl
pushf
xchg
mov
aad
js
ss
ljmp
mov
stc
cmp
adc
insl
xchg
in
jmp
shll
sbb
mov
ss
jecxz
dec
cltd
mov
inc
sub
lret
xor
dec
clc
into
jne
mov
cli
adc
add
sub
cltd
ud1
mov
adc
sub
sbb
pop
add
xchg
stos
inc
mov
and
mov
test
cwtl
or
scas
jle
dec
push
and
push
icebp
sbb
lahf
int
call
sbb
fdivrs
adc
idivb
sbb
lock
dec
lahf
push
xorb
lea
or
mov
push
jg
mov
push
aad
mov
adc
mov
jo
mov
dec
cld
or
sbb
add
les
loope
loopne
pop
in
and
enter
or
fnstcw
or
imul
scas
in
jmp
shrl
adc
pushf
pop
adc
out
int3
ret
imul
or
pop
movb
inc
into
sub
movl
lcall
sbb
xchg
das
sub
shrb
add
pop
sbb
sbb
lret
cmpsb
mov
mov
divl
jne
push
jnp
mov
dec
sbb
mov
lret
pusha
xor
popa
gs
cmp
jnp
push
or
and
cmp
imul
movsb
in
enter
jb
lcall
in
sqrtps
xchg
dec
add
test
fsubs
sbb
stos
mov
hlt
test
push
jmp
fcmovb
jmp
and
not
lahf
cltd
insb
mov
cmp
sbb
and
stos
lods
inc
and
jle
fnstsw
push
fistps
cld
mov
test
data16
jae
inc
andl
mov
pop
and
daa
call
lahf
aas
fisubrl
sub
add
rep
adc
xchg
adc
or
inc
lds
andl
mov
das
xor
int3
int3
iret
fisubrs
cmp
adc
xchg
mov
add
outsb
mov
shlb
cli
xor
push
testb
fsub
push
pop
imul
jne
addr16
adc
add
push
lcall
and
push
cld
sub
and
insl
mov
mov
les
cs
enter
mov
outsl
iret
and
je
mov
cmp
mov
aas
xor
aad
add
int3
mov
add
add
xchg
cmp
fs
call
pushf
jmp
andl
mov
xchg
in
ja
clc
mov
aad
rorb
add
mov
push
push
pop
pop
shll
sub
in
xchg
add
dec
fs
add
les
lock
adc
iret
gs
mov
aas
xor
gs
scas
mov
dec
dec
ljmp
in
add
clc
fldenv
inc
pop
xchg
dec
adc
sahf
dec
sub
cmp
or
cmc
ss
mov
bound
xchg
test
jecxz
mov
lods
js
sub
push
shrl
jecxz
stos
pop
mov
mov
or
jb
jp
mov
dec
ja
es
jle
loope
dec
xchg
call
jle
lock
fwait
cmp
mov
push
stc
fsts
adc
dec
ret
fs
adc
push
lret
xchg
es
dec
add
call
push
lea
jb
movsbl
mov
sar
call
dec
je
jmp
dec
int3
add
cmp
ret
call
mov
cmpb
or
push
and
scas
jno
jmp
mov
loope
aaa
ja
outsl
sahf
jecxz
stos
ljmp
lds
pop
xchg
cwtl
clc
clc
mov
ficompl
xor
pop
and
fdivl
pusha
cwtl
ret
cwtl
jbe
adc
addr16
pop
rcrl
mov
stos
data16
lahf
inc
sbb
cmc
push
lcall
in
inc
adc
arpl
das
das
jp
push
inc
lods
test
mov
jae
mov
test
test
sti
or
or
xor
xchg
jg
inc
xchg
push
push
push
stc
jae
lcall
mov
dec
jp
insl
in
inc
sub
xor
jo
popa
notl
sahf
dec
inc
rorl
mov
pushf
add
lea
je
test
sub
stc
cmc
cmc
cmc
cmp
pushf
lea
ja
clc
push
bt
lea
jae
imul
test
add
push
lea
jmp
popa
push
cltd
or
dec
clc
mov
divb
cmp
xorl
aad
daa
mov
pop
cmp
mov
sub
pop
xchg
xchg
cmp
scas
ja
push
cmpsl
in
lcall
add
shrl
inc
add
sbb
ljmp
sbb
jae
in
mov
cmp
lahf
inc
dec
sbb
lea
call
pushf
mov
pushf
lea
jne
pushf
mov
movb
pusha
pushf
lea
jmp
pushl
popl
pushf
push
pushl
ret
push
jmp
mov
mov
jnp
cli
inc
sbb
repz
test
js
sbb
fdivl
std
jno
xchg
call
and
xchg
in
movsl
not
lods
mov
adc
adc
xor
outsb
leave
add
nop
out
fstpt
xchg
les
xlat
in
lahf
fdivrl
cmc
xorb
mov
sub
cmc
rolb
leave
test
pusha
cmpsl
bswap
pusha
call
mov
cld
daa
pop
sti
and
insb
mov
rclb
popa
mov
push
xchg
popa
in
or
xchg
or
sub
sti
dec
jns
cmp
xor
inc
cmp
push
sbbb
lods
lods
shlb
arpl
sbb
dec
mov
out
pop
cmpsb
add
push
es
fnstcw
faddl
idivb
sarl
xchg
xlat
sub
ret
and
lea
jmp
add
pushf
lea
push
lea
call
call
ss
and
mov
xor
push
cmpl
push
pop
xor
pop
insb
xlat
mov
loope
mov
push
into
dec
lds
rorb
push
pop
test
cli
inc
or
inc
cltd
lret
mov
sahf
add
push
insb
icebp
sbb
mov
les
push
inc
faddl
dec
imul
ret
outsb
pop
scas
popf
mulb
mov
sbb
xchg
fsubl
sbb
mov
inc
inc
daa
testb
inc
imul
outsl
inc
outsl
jae
popa
je
push
imul
or
iret
int3
test
push
cmp
lds
or
or
pop
xchg
jno
cmpl
not
pop
into
adc
in
and
cmpsl
mov
inc
leave
call
pop
out
cmpsl
xchg
cli
mov
mov
dec
jg
mov
movsb
push
mov
jle
je
mov
dec
mov
jl
repz
das
and
add
pop
insl
mov
push
sbb
or
imul
and
outsb
jmp
mov
mov
lahf
inc
out
jnp
jbe
jb
imul
add
xlat
fimuls
inc
xorb
dec
adc
dec
shll
dec
inc
mov
mov
add
and
and
push
pop
fidivl
xor
daa
enter
jg
in
ja
mov
popa
test
xlat
jecxz
lcall
adc
pop
lahf
mov
mov
or
sbb
cld
js
xor
bnd
mov
inc
int3
dec
pop
mov
lock
out
sbb
not
mov
push
xchg
bswap
mov
call
jne
gs
xor
fs
insb
add
aaa
sub
test
pusha
imul
out
sub
imul
scas
mov
jmp
mov
mov
in
or
mov
sbb
addr16
addb
cmp
jp
rorb
xchg
shl
outsb
mov
les
ds
das
fnstcw
clc
cmp
lods
arpl
cmp
and
cmpl
sub
nop
lock
push
fcompl
pop
fwait
mov
aaa
pop
mov
add
jo
pushf
mov
add
jbe
ret
mov
test
sub
loop
lcall
and
jbe
sub
jg
lahf
cmpsb
test
sbb
mov
clc
mov
pop
sbb
dec
add
fisubrl
sbb
mov
xchg
pop
pop
adc
test
repnz
push
push
iret
repz
dec
mov
gs
sub
sbb
mov
in
mov
mov
rep
ss
das
mov
xor
lahf
adc
push
mov
dec
mov
jae
mov
lret
aaa
in
inc
adc
lcall
jb
pop
adc
add
fidivl
popa
fildll
push
dec
push
xor
icebp
aam
in
jl
sbb
sbb
pop
mov
adc
push
and
mov
js
mov
dec
mov
stos
xor
lcall
cmp
test
dec
sbb
arpl
rclb
dec
aad
sbb
add
pop
repz
je
cmpsl
sub
jge
xchg
loopne
cmp
xlat
mov
inc
out
sarl
fisubl
dec
cmp
push
adc
adc
pcmpeqb
add
test
dec
insb
adc
push
repnz
adc
ret
cwtl
test
cmp
hlt
xchg
test
xchg
aad
push
inc
mov
sub
repnz
out
das
adc
jns
push
dec
lods
imul
lahf
inc
out
xchg
push
sub
or
pusha
call
pop
divl
jle
inc
xchg
adc
test
inc
ja
jne
jnp
js
dec
std
je
mov
in
add
xchg
xor
sbb
adc
cmp
or
cmpsb
jb
jnp
mov
out
push
mov
cli
push
jb
test
sbb
inc
lcall
andb
jno
pop
sbb
cmpsb
inc
lea
mov
mov
or
adc
movsb
inc
add
aaa
bound
lock
pop
cmp
adc
mov
out
sub
jo
jns
mov
jmp
mov
pop
fstpl
cltd
in
rcll
dec
inc
loope
outsl
nop
lds
mov
daa
clc
cmp
repnz
movsb
mov
mov
mov
pop
aas
xor
add
rcll
mov
bound
call
dec
popa
add
cmp
cwtl
aam
in
sbb
arpl
lahf
dec
push
insb
jae
clc
movb
add
pushl
pushl
shl
jmp
call
cld
scas
outsb
loope
push
inc
inc
repz
stos
out
scas
sub
and
sub
int3
sahf
cmp
dec
andl
aad
pop
xchg
sbb
ret
mov
mov
fwait
int3
dec
pop
or
mov
lock
cs
mov
std
mov
push
xor
inc
cmp
in
adc
inc
sbb
or
sbb
sbb
mov
movsb
popa
fwait
pop
and
mov
add
pushf
lea
jmp
faddp
dec
rcll
fwait
imul
dec
out
jmp
divb
adc
push
push
fbstp
cli
lods
int
mov
ja
push
mov
les
xor
sbb
pop
callw
mov
test
mov
jmp
fbstp
xor
js
xor
push
imul
pop
mov
test
int3
sub
push
jnp
mov
dec
leave
xchg
or
push
sqrtps
lahf
dec
inc
daa
mov
pushf
or
fwait
sahf
push
insl
stc
sti
sti
push
push
xor
addl
int3
xlat
sbb
jge
icebp
xchg
xor
inc
push
mov
fbstp
fcompl
ret
jmp
sbb
arpl
sarb
inc
dec
xorb
clc
lods
js
dec
push
xor
imul
imul
and
icebp
in
jecxz
pop
xchg
adc
in
jge
iret
std
mov
dec
test
push
sbb
outsl
divl
dec
xchg
sbb
lahf
fsubr
lods
gs
add
mov
push
lods
stc
neg
pushf
pushf
not
bt
bt
call
and
push
mov
aad
inc
xchg
int3
xchg
push
fbld
loop
out
test
lea
lret
ss
popa
stos
pop
mov
movsl
es
push
pop
cmpsl
pop
stos
ljmp
sahf
arpl
mov
inc
movsl
cmc
inc
loop
xor
mov
pop
out
rcrl
jle
and
and
inc
outsb
cwtl
xor
js
aas
mov
roll
rcrl
and
sub
repz
fdivrp
cmc
xchg
cmp
jne
pop
idivb
inc
cmpl
lret
push
and
data16
xchg
sbb
insb
mov
or
inc
add
sub
and
push
out
pop
sbb
mov
dec
sbb
inc
outsb
xor
pop
cmp
aas
lds
sarb
adc
or
fwait
mov
ss
clc
in
lret
rolb
js
fisubs
mov
bnd
add
jns
lcall
les
fidivl
inc
addb
sbb
loope
stos
push
popl
lahf
dec
and
imull
push
iret
out
sub
stc
icebp
lock
sub
add
cld
jns
std
les
nop
push
cmc
sbb
rep
cmp
cmpsl
inc
xor
add
xchg
push
sbb
movups
lret
and
mov
data16
mov
rcll
add
dec
xchg
lock
lea
not
mov
not
lea
pusha
call
dec
arpl
repz
ja
aas
in
push
pop
cltd
mov
jmp
fstpl
iret
test
pop
xor
inc
push
xor
inc
cmp
clc
in
cmp
repz
cmp
rol
lahf
mov
imul
mov
out
xchg
jns
loope
mov
in
rcll
lret
push
int
xor
hlt
rorb
adc
std
push
nop
or
push
rcrl
xchg
sbb
jb
in
lock
pop
mov
pushf
dec
push
out
add
lret
inc
je
cmp
decb
add
lea
out
pop
out
mov
cmp
aam
lock
mov
ja
xchg
dec
push
out
or
or
movsl
imul
dec
cmpsb
inc
cld
jecxz
mov
cmc
xor
add
add
lret
or
dec
movl
shl
not
out
cli
mov
lret
dec
mov
and
sbb
mov
clc
inc
out
cmp
mov
mov
dec
stos
pop
xor
mov
movsl
cltd
enter
test
add
sbb
mov
push
call
jp
wrmsr
and
ljmp
sub
div
nop
or
clc
pop
daa
fistpl
sbb
clc
and
pop
out
fdivs
dec
shr
pop
dec
inc
fsts
dec
rcr
je
mov
movsb
ja
jbe
mov
jae
sahf
test
cmp
dec
adc
or
lret
js
lahf
dec
cmp
push
pusha
pushf
lods
jmp
lock
push
mov
push
and
cld
ficompl
stos
sub
aaa
pushl
cmp
not
dec
inc
fwait
adc
adc
dec
dec
outsb
xchg
lcall
mov
outsb
or
or
fimuls
adc
stc
adc
add
inc
add
lock
js
mov
adc
xor
popf
imul
popf
ret
je
or
sub
int
mov
jp
rorl
sub
loopne
lahf
dec
rclb
xchg
or
out
xor
push
sbb
mov
loop
mov
fsubrs
orl
xor
sub
call
cltd
fnstsw
fwait
jns
xchg
mov
add
bnd
daa
dec
mov
lret
ret
pusha
jle
or
jbe
js
notb
sbb
shr
fnstsw
sti
sbbl
mov
lods
dec
aam
mov
mov
push
aad
or
call
adc
xor
stos
leave
lcall
fs
jmp
call
aas
icebp
lods
pop
push
or
mov
xchg
repz
ja
xor
dec
adc
push
in
ret
xorl
push
mov
in
insl
and
mov
cld
popf
and
clc
in
xchg
div
sbb
cmp
nop
xchg
popf
push
pop
jp
iret
xchg
in
inc
pop
lods
xor
repnz
jecxz
or
in
ret
filds
cmp
xor
bound
ret
sub
dec
inc
jo
cwtl
adc
or
xchg
jno
inc
jno
xchg
dec
push
xchg
fcomps
adc
add
dec
sub
and
sbb
mov
in
add
sbbl
sbb
add
push
push
enter
push
pop
mov
mov
jmp
rorl
pop
jp
rol
or
das
mov
xchg
stc
popa
jle
mov
mov
stc
cmp
lahf
adc
dec
inc
inc
jnp
adc
dec
jg
aaa
adc
dec
test
push
push
mov
mov
jae
lret
lret
insb
push
out
cmp
movsb
lods
mov
dec
rorl
xlat
jnp
push
jp
inc
mov
rcl
sbb
pop
mov
mov
add
and
xor
movsbw
pop
mov
pop
bswap
movsbw
pop
movsbw
pusha
lea
bswap
mov
pusha
pushl
mov
pushl
mov
bswap
bswap
pop
pushf
pusha
pusha
pushl
ret
fisttpl
add
and
and
sub
cld
xor
dec
jg
es
jns
push
imul
nop
into
mov
mov
push
xchg
or
cmp
fsts
pop
stos
pop
mov
mov
mov
mov
dec
mov
insb
sub
dec
mov
add
hlt
daa
outsb
sbb
jo
rcrb
mov
ja
push
xor
mov
lds
incb
lahf
push
mov
adc
leave
add
fldenv
ret
enter
rcll
int
outsl
sbb
push
or
jp
xlat
lock
das
adc
movsl
mov
imul
lea
jae
int3
scas
adc
push
lock
jns
mov
aam
sbb
shl
sub
fistl
and
idiv
insb
jae
push
mov
das
idivl
xchg
lcall
add
into
add
addr16
int3
scas
lods
jmp
pop
lahf
imul
push
sub
inc
stos
jle
add
or
xchg
lcall
rcrl
cmp
insb
sub
jg
pushl
out
les
push
mov
adc
and
xchg
in
push
inc
jge
int
into
xchg
mov
out
je
ret
adc
mov
jmp
and
add
adc
sub
xchg
movsb
psubusw
push
inc
dec
push
lahf
gs
push
iret
mov
in
cmp
cmpsb
or
jae
aaa
jns
and
js
push
movl
push
xchg
hlt
stos
or
aad
pop
or
sub
jmp
ds
ret
icebp
ds
je
scas
mov
or
inc
fwait
push
leave
jns
push
rcrl
xchg
mov
adc
xchg
xchg
adc
or
lahf
push
sub
pop
cwtl
lea
jmp
shl
in
or
push
inc
call
divb
lods
imul
mov
sub
sbb
pop
imul
inc
jne
sbb
cmp
lea
fs
sub
jge
js
jle
push
inc
fcoms
sti
arpl
ffree
xor
shl
xor
cmp
add
lcall
ja
xchg
jge
jo
outsl
jo
pop
or
test
pop
ret
mov
cmp
cmp
jg
add
pushf
mov
movzbw
mov
mov
lea
mov
pop
rep
pop
mov
sete
pushl
mov
movzbl
push
jmp
clc
cmp
push
jmp
sbb
pushl
fldl
sbb
movsb
fs
out
mov
in
jmp
in
mov
in
bound
jns
adc
sbb
lret
mov
push
out
stos
imull
repnz
pop
repnz
mov
or
and
lock
iret
test
or
test
dec
xchg
imul
inc
add
ss
xlat
pop
aam
bound
lcall
sub
adc
pop
pushf
divl
jo
jp
addr16
jg
mov
out
ja
dec
cltd
and
fistpl
sub
les
ret
mov
dec
xor
sbb
jl
scas
in
cmpsl
mov
nop
mov
inc
and
mov
dec
int3
xor
xor
add
xor
lret
call
xchg
jnp
jo
movsb
adc
into
jbe
das
lret
test
fdiv
jns
cmp
push
rcr
loope
push
cli
xchg
cmp
mov
rorb
and
jge
mov
jmp
cmp
in
mov
xchg
mov
bound
lahf
push
push
xor
and
cmp
iret
push
arpl
push
movlps
pop
mov
and
es
xchg
dec
rcll
fadds
mov
stc
cmp
mov
icebp
int
aas
gs
shrl
mov
je
mov
movzwl
sahf
pop
fildl
push
or
xorl
insb
cwtl
movsb
out
xchg
or
mov
push
mov
add
test
mov
repz
xor
sbb
cmp
rcr
imull
les
and
jge
mov
rolb
lahf
push
lock
pop
fwait
dec
dec
or
xchg
clc
mov
mov
or
fistpl
fwait
loope
sbb
fcomi
clc
stos
pop
lret
pusha
jge
in
insl
mov
dec
test
pop
or
add
scas
adc
jecxz
mov
jg
stc
cmp
mov
in
inc
mov
cmp
mov
inc
mov
sub
pop
jle
sub
mov
pop
movsb
jg
ffreep
fstl
xlat
inc
ds
lret
popf
fcmovbe
lret
add
movzbw
sub
sar
mov
neg
mov
mov
bts
add
xadd
sub
shr
xadd
mov
push
neg
add
movzbw
not
push
mov
movb
pushf
mov
mov
pusha
not
lods
clc
bt
mov
clc
neg
clc
lea
jp
not
pushf
cmc
ror
movb
push
dec
cmc
cmp
cmp
bswap
call
movsbw
mov
jmp
in
bound
dec
lods
pop
scas
subb
and
push
xor
ds
and
xchg
add
in
push
push
cmp
call
jno
xchg
mov
dec
cli
ficompl
outsl
dec
cmpsb
and
ret
or
ret
cmpl
push
adc
mov
jno
cmp
sbb
loopne
mov
pop
sbb
icebp
testb
push
sbb
mov
scas
inc
fwait
pop
jl
daa
enter
insl
fisubrs
jle
outsb
sub
mov
lds
add
bswap
call
mov
pushl
pusha
movl
push
lea
jmp
imul
or
mov
push
std
jnp
jb
aaa
and
mov
shll
cs
sub
outsb
mov
mov
jl
inc
cmp
add
call
push
call
jae
add
call
jb
mov
shl
lea
call
add
pop
ret
pushf
pop
mov
pushf
push
pushl
not
jmp
pushf
bswap
bswap
movl
jmp
call
add
movsbl
cwtl
not
pusha
setb
lea
pushf
lea
push
pushf
call
hlt
inc
add
aaa
ret
popa
ret
iret
xchg
iret
fcoms
add
lods
mov
mov
je
popf
mov
sbb
adc
sbb
push
ret
and
pusha
dec
sbb
sbb
das
popa
stos
mov
ffreep
fisubrl
pushf
pop
inc
pushf
add
adc
fdivr
int3
lcall
addr16
lea
jecxz
loopne
add
xor
cmp
sbb
fbld
xchg
add
lea
jb
neg
mov
test
shl
not
or
shl
mov
pushf
rol
xchg
jmp
cltd
cmp
cmp
xchg
pop
test
repnz
mov
mov
notl
mov
or
xchg
psubusw
push
and
jl
lock
jb
int
pop
mov
pop
stc
cwtl
dec
mov
in
or
imul
icebp
add
bound
ret
aaa
test
lock
out
jb
cmp
in
mov
shll
cltd
mov
cmpsl
loope
ljmp
pop
call
fs
call
cmp
call
mov
push
inc
sub
test
cmc
ja
jp
cmc
jbe
js
iret
outsb
es
mov
daa
addr16
testb
push
mull
dec
add
ficoms
mov
repz
and
cld
or
cmp
mov
pop
shll
push
in
fstps
and
test
adc
lret
imul
or
cwtl
scas
loope
cmp
pop
dec
sub
mov
arpl
test
mov
pushf
popf
pusha
cltd
daa
and
and
lcall
sbb
daa
sti
add
push
push
xchg
rcrl
pop
mov
pop
jo
test
xchg
rorb
pusha
into
scas
outsb
rorl
call
xor
or
aam
negl
pop
and
clc
out
mov
cmc
cmp
call
mov
addb
mov
jmp
xor
dec
xchg
xlat
int
push
push
mov
lahf
pop
ljmp
lret
push
and
lahf
pop
decb
sbb
inc
mov
or
xlat
rorl
sub
out
push
aad
cltd
adc
pop
int3
cmpsl
push
into
adc
inc
sbb
fsubl
je
rolb
aas
push
cs
pop
subb
xchg
mov
push
mov
sbb
xchg
fisubs
push
adc
in
rorb
mov
in
scas
jne
rcll
sbb
push
mov
rorl
outsl
daa
inc
cmp
xchg
ss
sbb
nop
lea
popf
adc
lock
push
stos
cs
cmp
fdivrs
loope
std
pop
jne
or
into
jge
lahf
test
pop
sbb
mov
fdivrl
adc
adc
mov
cmp
pop
jmp
sbb
add
ja
imul
add
loopne
out
testl
pushf
pusha
test
cmp
add
or
imul
xor
popf
hlt
push
mov
xor
mov
shll
js
cmpsl
mov
movsb
mov
sbb
mov
lret
xchg
mov
mov
inc
and
notl
jae
sub
out
enter
lock
xor
mov
inc
out
jmp
xchg
pop
movsb
sub
push
pop
sbb
or
sbb
daa
bound
movsb
add
loopne
xchg
add
cmp
daa
stos
daa
in
hlt
outsb
cli
clc
mov
adc
pop
mov
mov
das
sbb
pop
ss
lds
sbb
push
add
mov
call
pop
inc
daa
fadd
xor
xchg
lds
cli
int3
jmp
mulb
mov
pop
fisubrs
jmp
in
xchg
pop
adc
pop
lahf
in
les
sub
xor
int
out
popa
test
cmp
hlt
js
xchg
sarl
enter
xor
lahf
pop
and
fstl
xor
mov
dec
fstps
stos
jmp
sbb
jnp
lds
xor
and
and
in
lret
outsl
test
sbb
xchg
mov
cld
insb
pop
mov
fidivl
repnz
cltd
push
out
dec
sti
mov
pop
add
iret
mov
dec
inc
jae
cwtl
mov
push
jnp
xor
add
adc
dec
cmp
mov
fwait
iret
ret
das
std
mov
incb
rorb
dec
xchg
push
pop
fsubs
incb
lahf
pop
mov
rcll
js
pop
lret
out
outsb
sub
mov
or
cld
std
cmp
shl
xor
fisttpll
and
ja
shrl
xchg
in
dec
push
lock
out
clc
lods
mov
xchg
mov
xchg
je
dec
fs
sar
or
fwait
mov
ret
push
dec
mov
pop
out
push
arpl
pop
pop
testl
sbb
prefetchwt1
or
test
subb
fnsave
jae
fsubs
or
das
lock
mov
movl
ret
pop
je
push
jl
shll
dec
cmp
inc
cld
adc
pop
cwtl
and
sbb
add
jbe
mov
lea
test
arpl
jae
lret
hlt
nop
icebp
std
cmp
push
sbb
or
gs
dec
and
dec
xlat
or
mov
lret
ss
push
mov
mov
mov
push
jmp
inc
xlat
ss
imul
test
pop
sbb
sbb
add
mov
adc
or
popa
pop
fcomps
cmpsb
sbb
inc
inc
jl
adc
loopne
pop
test
mov
jae
out
and
outsl
push
les
cmc
mov
mov
pop
inc
std
fwait
xchg
mov
les
loope
push
sub
repnz
push
lock
mov
jo
rcr
mov
pop
sbb
push
je,pt
pop
ja
insb
les
xchg
divl
mov
cld
or
push
iret
das
add
sub
test
cltd
xchg
pusha
cmpb
and
bound
jo
gs
ret
cmp
aas
add
sub
leave
or
negl
mov
dec
int
outsb
dec
mov
sbb
push
insl
mov
out
gs
mov
pop
xchg
xor
test
repz
addr16
imul
in
sbb
mov
test
cs
mov
xchg
push
into
sbb
inc
fwait
fs
data16
pushf
cli
bound
ljmp
add
push
xchg
fisubrs
lods
lods
jmp
mov
sbb
bound
repnz
sbb
mov
fdivrp
daa
sti
faddl
mov
rcrl
mov
dec
out
je
je
cmpl
jno
or
adc
xchg
or
and
popa
loope
pop
cmp
lahf
pusha
jp
int3
btr
mov
pushl
sbb
mov
test
repnz
call
jmp
add
bt
movzwl
test
inc
btr
bswap
mov
bt
pusha
call
cmc
cmc
call
push
mov
not
lahf
pop
pushl
popl
not
movb
pushf
mov
jmp
xor
sets
movzbw
pop
movl
mov
pusha
not
mov
lea
mov
mov
call
pushf
lea
jne
jmp
dec
movsb
and
jmp
adc
les
adc
sbb
fs
cmpsl
cli
fstpl
inc
inc
sub
out
into
dec
jge
stos
mov
xchg
lock
in
push
fnstenv
sbb
xor
cmpsl
mov
repnz
into
sbb
jge
or
sarl
push
loopne
ds
add
inc
add
xlat
hlt
sub
gs
xchg
popa
xlat
mov
pop
cld
mov
loope
jecxz
stc
cmp
xchg
adc
mov
fwait
gs
inc
popf
fwait
add
lods
mov
movsb
and
pop
lahf
and
imul
lahf
popa
test
or
shlb
add
scas
out
cmpsl
test
lea
xchg
xchg
fwait
pop
sbb
cmp
loopne
push
in
cmp
stos
adc
cmp
arpl
inc
xor
call
sbb
sarl
mov
outsl
mov
mov
sti
dec
in
jno
scas
mov
imul
inc
pop
int3
adc
nop
mov
cmp
xchg
mov
or
dec
or
arpl
inc
fs
fiaddl
push
fcmovnu
cld
jp
inc
inc
dec
pop
ficompl
sub
in
test
bound
sub
fwait
lds
clc
cmp
call
adc
insb
fstpt
or
enter
adc
push
fistl
loope
les
jmp
xchg
dec
pop
setnp
dec
scas
pop
scas
ds
jp
test
mov
dec
insl
mov
scas
mov
dec
loope
mov
or
mov
fwait
or
cmpsl
mov
rol
ret
lahf
cmp
or
sbb
out
js
lods
je
mov
cmc
lea
loop
push
cmpsb
pop
mov
mov
dec
lret
and
ficomps
cmc
sbb
dec
addr16
mov
aaa
out
andl
add
aaa
hlt
scas
jnp
out
xor
pop
into
inc
loopne
mov
xchg
dec
push
test
int3
jnp
mov
mov
pop
add
out
sub
xacquire
aam
pop
and
enter
mov
cmp
add
lahf
arpl
rclb
add
sub
push
out
cmp
pop
and
adc
es
mov
je
or
lahf
bound
add
bound
lock
push
insl
or
mov
xchg
jne
xor
adc
xchg
int
jae
outsl
xor
xchg
out
in
js
inc
sahf
fildl
ficomps
pusha
in
in
mov
cmp
add
call
bswap
movw
movsbw
lea
movl
pushf
pushf
jmp
icebp
dec
sarl
fdivrl
xor
loopne
pop
sbb
imul
out
ss
ret
arpl
scas
mov
xchg
lret
iret
xor
fisttps
add
insb
inc
mov
divl
and
mov
fisubrs
in
pop
addb
test
rclb
or
dec
ljmp
orl
sbb
gs
orl
call
pushf
lea
ja
pushf
pusha
add
add
cmc
pusha
mov
movb
cmp
pusha
jmp
call
call
call
push
mov
jecxz
insb
subb
jg
add
fcompl
push
mov
and
mov
jge
jb
inc
inc
roll
inc
je
xchg
movsb
daa
and
and
ret
gs
adc
push
lcall
lret
insb
cmp
sbb
in
sub
mov
sbb
pop
cmp
xchg
and
add
inc
pop
mov
jb
ret
shr
vpminsw
stos
into
movhps
lods
not
or
adc
aad
arpl
cwtl
int3
int3
or
and
fidivs
and
mov
mov
xor
pusha
enter
mov
inc
inc
clc
lods
jecxz
cmpsb
scas
mov
call
stos
inc
jle
xor
push
data16
int3
or
pop
fcompl
add
shl
cmpsl
adc
decl
or
call
nop
xchg
sub
jns
mov
cld
sbb
shrl
pop
mov
das
cmc
ret
fcmovne
sbb
call
or
push
icebp
test
test
push
sub
cmp
mov
inc
mov
jnp
testl
lahf
pushw
pop
jmp
insb
out
mov
dec
dec
or
push
fsubl
sbb
sub
mov
ret
pop
and
xor
hlt
mov
lea
out
or
ss
ja
rclb
mov
xor
jge
mov
ret
ficoms
outsb
pop
xchg
mov
rcrl
inc
xchg
adc
cmp
mov
sti
mov
add
mov
stos
pushf
mov
mov
pusha
lea
jmp
call
push
pushl
pusha
pushf
movl
movb
call
subb
add
pop
add
je
jle
cmp
daa
arpl
xor
mov
xchg
shl
out
mov
lods
push
sar
out
mov
or
inc
outsb
xchg
dec
lods
scas
movsb
nop
mov
hlt
and
lods
xor
fwait
fwait
xchg
sarl
stc
out
cmpl
scas
xchg
and
mov
add
mov
pushf
cwtl
jecxz
push
out
jne
push
add
xchg
cs
mov
test
bound
test
repnz
scas
mov
push
into
js
or
adc
pop
xor
push
rcll
add
fwait
push
mov
sbb
jecxz
sub
inc
adc
or
push
sub
xchg
or
idivl
clc
xchg
cld
cltd
sub
inc
mov
push
jecxz
sahf
sbb
movsl
outsb
jno
sti
cmc
roll
lahf
rcrl
add
cmp
ret
pusha
pusha
xchg
movzbl
mov
pushf
pushf
movsbw
push
mov
lahf
movw
lea
mov
cwtl
movsbw
xchg
lahf
lahf
not
pushf
mov
pushl
mov
not
lahf
setg
push
lea
push
jmp
shll
jge
and
pop
ficompl
sbb
mov
pop
jmp
insb
je
in
add
pop
xsetbv
test
adc
sub
icebp
cwtl
xchg
xchg
mov
shrb
adc
cmp
loop
and
jg
popa
mov
and
mov
mov
cmp
jle
aaa
aam
cmp
in
in
enter
pop
mov
repnz
cmp
in
mov
fwait
stc
xor
lock
les
add
dec
lret
std
mov
xor
test
dec
add
int3
inc
mov
add
push
jmp
mov
adc
movb
jmp
mov
mov
mov
pop
add
add
xchg
push
enter
inc
and
cmp
jbe
int
sbb
dec
aas
cmpsl
fs
add
lcall
ffreep
add
arpl
lret
dec
push
sbb
cmp
ljmp
add
pusha
add
push
popa
popf
or
outsl
sub
sub
out
les
lcall
push
mov
movsb
dec
movsl
sbb
dec
push
add
enter
es
add
stos
rolb
pop
sbb
push
sbb
gs
xor
add
add
push
xchg
xor
or
in
movb
sbb
xlat
push
dec
sti
sbb
push
mov
loope
inc
cmc
movsl
std
ja
and
lret
or
lods
lahf
mov
fbstp
add
outsb
stos
jmp
sub
int
lds
mov
ror
mov
cli
xchg
and
lds
push
cwtl
xchg
fildll
sub
out
add
dec
dec
pushf
push
mov
stc
clc
cmp
pusha
call
lea
call
pusha
adc
pusha
lea
jae
rol
movsbw
cwtl
cmc
pop
shrd
rol
mov
sar
pop
shrd
shl
bswap
call
les
jmp
pop
out
pop
sbb
cmp
out
mov
xchg
push
aam
cmp
loop
int3
lods
sbb
clc
sti
jbe
mov
inc
repnz
les
sbb
dec
inc
pop
mov
mov
push
and
add
scas
lcall
ficoms
stos
sbb
mov
test
and
inc
test
outsb
arpl
push
inc
out
data16
mov
mov
sbbl
xchg
lcall
add
push
es
xchg
dec
sub
stos
mov
roll
or
dec
sub
nop
enter
sbb
pushf
aad
lret
ljmp
adc
dec
push
ss
test
lret
jecxz
mov
sbb
fmull
jb
push
xlat
push
leave
inc
and
inc
cmpsb
add
out
cmp
pop
cs
clc
popf
pop
shlb
push
sahf
mov
cmp
lret
and
in
mov
ret
adc
cmpsl
jecxz
test
pop
mov
mov
addb
imul
cmp
xlat
jo
scas
xchg
iret
dec
dec
orl
lret
mov
ret
rorb
loopne
aas
xchg
pop
xchg
cmc
clc
cmp
jb
dec
stc
test
rcrl
cmpsl
cmpb
int3
cmp
push
sahf
hlt
adc
sbb
push
mov
sti
cmp
sahf
mov
xchg
aas
inc
cld
aas
or
add
mov
jbe
lahf
insb
cmp
aaa
inc
cmp
xor
push
pop
shll
enter
xor
insb
sub
mov
enter
pop
cmp
mov
sub
dec
lret
mov
mov
pusha
adc
sub
inc
jecxz
test
mov
cmp
adc
xorb
dec
or
sbb
xchg
mov
mov
dec
out
jne
cmc
popf
les
lahf
push
mov
lea
mov
movl
or
filds
inc
in
ret
imul
es
xchg
in
roll
lahf
cltd
fwait
shll
mov
push
push
sbb
loope
in
aam
cmp
push
dec
push
into
mov
cmp
mov
std
fsts
mov
sarb
jecxz
sbb
movzwl
aaa
stc
cli
cli
cmpl
adcb
adc
xchg
pop
mov
mov
mov
aad
sub
mull
sub
test
mov
jg
mov
lds
stc
adc
xchg
popf
fidivs
sarl
cltd
sbb
xchg
mov
adc
testb
inc
out
cmp
push
mov
imul
jmp
push
rcr
test
mov
sbb
pop
jmp
insl
mov
inc
imul
gs
xor
cs
insb
add
push
sbb
fs
dec
cmc
rcll
push
cwtl
fsubs
sbb
jecxz
fsubp
mov
mov
lods
lcall
hlt
rcll
or
jae
les
or
mov
mov
push
negl
mov
jno
add
inc
test
mov
inc
test
fsubrl
push
mov
and
push
push
mov
fbld
sub
cmp
jg
push
inc
fwait
jb
and
je
dec
fdivrs
push
pop
push
sub
fs
in
add
stc
cmpsb
in
or
out
xor
push
fstpl
lahf
sub
xchg
ss
xor
incb
or
faddl
push
cmp
cmp
pop
mov
and
or
repz
pop
leave
std
jb
lock
xchg
fcomps
mov
mov
scas
int3
int3
cmp
sub
push
dec
divl
dec
imul
dec
int3
inc
add
fcom
pop
dec
add
push
lea
je
cmp
jmp
sub
and
cmc
pop
sbb
mov
cmc
call
movsbw
lea
jmp
inc
sub
btr
add
sar
xor
adc
add
jmp
sbb
cmp
subb
add
push
or
aad
dec
fdivs
fisubl
inc
jge
mov
mov
addl
and
pusha
out
test
sbb
stos
scas
jge
shrl
daa
stos
call
sbb
icebp
jno
adc
and
jb
leave
add
push
mov
js
movsl
ror
in
lods
pop
shl
fdivs
xchg
mov
fs
adc
outsl
push
mov
out
xor
jle
mov
add
mov
pushf
pushl
lea
jmp
mov
call
clc
jmp
xlat
jp
outsl
ja
insb
test
scas
je
in
pop
lret
loopne
fnstenv
push
add
cmc
mov
mov
add
ret
mov
sub
or
jbe
outsl
xor
inc
pop
imul
push
push
or
stc
xchg
mov
inc
sahf
cmc
in
inc
loopne
push
leave
push
mov
cltd
ds
inc
mov
push
xchg
mov
sbb
fisubl
insb
scas
push
inc
add
popa
push
or
jb
sbb
cmp
addb
push
gs
add
xchg
ds
adc
adc
fnsave
push
rorl
popf
jle
insb
out
mov
mov
lret
and
mov
rcl
push
jne
pushf
orl
or
inc
pop
mov
mov
add
std
cmp
mov
clc
gs
jo
cli
cld
inc
cmp
dec
add
lea
jae
pusha
lea
jmp
cmc
sub
call
pushf
mov
pushf
movzbw
jmp
pop
cmc
jl
adc
add
mov
jae
imul
arpl
std
or
fists
test
inc
add
or
popa
mov
mov
daa
adc
repz
out
push
xor
xchg
add
sbbl
rcrb
lea
push
sub
pop
fwait
xchg
imul
xchg
out
xchg
jg
int3
inc
add
nop
add
pushf
sbb
pushl
lea
push
push
pushf
mov
lea
jmp
pushf
lea
jb
call
push
pushf
pushf
lea
jb
push
pushl
lea
jmp
lret
lock
cltd
stc
jb
inc
jae
add
cltd
and
and
es
gs
enter
std
pop
sub
mov
fidivl
xlat
pop
and
js
xchg
mov
adc
mov
jbe
jnp
xchg
sbb
xchg
pop
jbe
or
shlb
outsl
cmp
add
cli
inc
sub
mov
scas
frstor
shl
enter
mov
inc
mov
or
and
je
mov
clc
cmp
clc
pop
add
pushf
lea
jb
cmc
push
jmp
lea
push
in
mov
jae
in
std
mov
dec
xchg
pop
setb
das
push
or
nop
movsb
pop
cmpsb
imul
fdivs
pop
shrb
incl
push
mov
stos
push
fdivp
pop
popf
les
mov
push
aaa
insl
leave
adc
and
out
inc
and
mov
jp
lods
jnp
shr
out
mov
xor
cmp
out
sbb
add
dec
or
popa
test
and
lahf
jae
xor
pushl
cmp
test
cmp
movb
call
cmp
and
adc
cwtl
push
xlat
popa
out
call
movsl
data16
inc
out
lret
pop
mov
arpl
cltd
fdivs
out
lea
dec
sub
test
andb
push
fwait
adcb
fnstsw
cmp
mov
or
mov
dec
dec
aad
xor
data16
push
xor
in
or
orb
gs
gs
jge
scas
cmpsl
out
sbb
inc
mov
and
pop
or
sub
pop
sub
xchg
loopne
sbb
dec
xchg
sbb
rorl
and
add
lea
jb
rcr
push
sbb
mov
cmp
pop
pusha
mov
pushf
lea
jg
pusha
pusha
lea
jb
inc
bsf
rol
mov
cmc
jge
stc
sub
call
sub
dec
inc
pusha
cmp
lods
adc
add
xlat
dec
dec
prefetchwt1
lcall
push
sub
pop
lahf
mov
popf
cmp
add
loopne
shrl
push
pop
inc
xor
sub
cmc
jae
xchg
lock
inc
mov
outsb
ja
sti
sbb
int3
jno
xor
fwait
std
sti
aaa
dec
jp
xchg
mov
jns
les
or
jp
cmp
pushf
lret
jae
sbb
sbbl
sbbb
xor
fcmovne
inc
loope
inc
in
jae
insl
push
inc
dec
int3
fmuls
lahf
je
jle
sub
lea
push
xlat
sahf
addr16
sbb
mov
imul
aam
stos
or
lcall
daa
cmpsb
insl
rorb
push
fnstcw
sub
into
dec
or
mov
out
fcmovne
inc
fildl
push
push
adc
insb
pop
sbb
in
jne
repz
dec
add
mov
fs
mov
test
imull
out
sub
sub
imul
bswap
dec
cltd
popa
in
sahf
jge
loop
iret
in
push
mov
mov
fsubrl
imul
sti
adc
cmpsl
lahf
inc
or
stos
fs
pop
mov
adc
imul
xchg
jae
mov
and
stc
in
stos
in
xor
jae
lahf
jne
cmpsb
in
sub
int3
lds
pop
out
mov
ss
fisubrs
jnp
cli
popa
cmp
sbb
lahf
in
es
lods
insl
mov
cmp
cmp
call
add
jle
add
lods
pusha
lahf
cld
mov
mov
sub
dec
in
xchg
cli
int3
inc
movsb
mov
adc
loopne
inc
cmp
in
loopne
xchg
icebp
loope
cmp
lods
lahf
add
adcl
outsl
lcall
ret
push
dec
pop
dec
xchg
ret
jbe
push
adc
push
dec
addl
fsub
and
mov
inc
sbbb
daa
pusha
inc
jae
hlt
test
cmp
cmp
mov
push
mov
scas
jmp
jnp
lock
aaa
insb
mov
mov
pop
jecxz
adc
mov
xor
shl
arpl
cmpsb
add
imul
inc
hlt
xor
fsubs
mov
adc
inc
iret
dec
mov
jbe
addb
popa
or
mov
lea
jle
not
jmp
pusha
pushf
jmp
mov
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
std
out
arpl
fwait
je
ljmp
mov
ficomps
das
outsb
shrl
push
pop
inc
vunpckhps
les
add
pusha
add
add
sub
aam
sub
jecxz
mov
cld
push
xchg
jnp
ret
subb
mov
mov
pop
ja
add
push
push
xchg
loopne
les
test
or
pop
cltd
pop
ljmp
cmc
cmp
call
pop
jae
out
inc
incb
punpcklwd
and
addr16
add
add
call
xor
sti
and
mov
mov
dec
push
or
mov
jnp
xchg
jno
int
sarb
lahf
lock
lods
push
xor
iret
push
jbe
push
shlb
subl
ss
dec
loopne
inc
mov
push
fdivr
sbb
mov
cmpsl
pushf
pop
pop
subl
mov
leave
xchg
lahf
js
add
bswap
lahf
push
xchg
mov
bswap
cwtl
lea
jmp
scas
mov
mov
rol
pop
or
inc
push
mov
xor
lds
insl
inc
adc
pop
xchg
mov
push
and
jmp
and
scas
add
fnstenv
fmul
add
pop
dec
inc
or
push
push
sub
sbb
daa
loopne
xchg
xor
jge
mov
xchg
cltd
popf
push
jle
sbb
and
aaa
out
sbb
jle
mov
or
dec
or
fsubrl
mov
xchg
mov
ljmp
ficompl
jecxz
sbb
xchg
push
push
cmc
in
jl
mov
aaa
in
fxch
adc
popw
faddl
js
xlat
rorl
pop
in
xor
add
lock
rol
lcall
jb
mov
add
jae
mov
xor
outsb
scas
sahf
dec
add
icebp
xchg
dec
mov
int3
stc
and
insl
js
movsl
ror
in
push
out
inc
push
in
mov
dec
movsb
je
cmp
cmpsb
ret
ds
or
xchg
into
push
mov
add
mov
mov
ds
testl
test
sub
popa
mov
pusha
adc
sahf
cmp
in
mov
adc
inc
mov
lods
jae
inc
sbb
stc
fsubr
imul
stos
pop
into
pop
cltd
ret
cwtl
mov
jne
jb
shll
lock
cmp
mov
ret
les
cmp
mov
sti
cltd
lcall
or
jo
fwait
jge
ret
pushf
aad
add
hlt
push
movsb
inc
push
shrl
imul
jae
out
jecxz
lahf
jp
push
in
mov
not
bswap
xchg
pop
push
bswap
mov
mov
cwtl
mov
push
cwtl
bswap
mov
lea
pusha
movl
mov
call
fs
push
mov
outsb
mov
pop
adc
out
pop
imul
inc
cmp
fistpl
cmp
fs
mov
pop
in
jp
and
xor
sbb
insb
dec
sub
xor
add
add
cmpsl
xlat
mov
xor
in
in
xchg
data16
cld
int
pusha
mov
cmp
sbb
fwait
popf
cmpb
sbb
pop
popa
sub
add
cmp
lahf
add
xchg
clc
inc
lods
or
mov
imul
mov
cmp
jae
and
mov
mov
je
or
or
inc
in
cwtl
mov
icebp
mov
cs
repz
les
mov
insl
pop
sub
jmp
mov
jno
lcall
push
adc
sahf
mov
call
out
xchg
aaa
sub
jo
xor
push
or
push
lods
out
in
push
mov
sbb
push
dec
dec
sahf
gs
lar
xchg
ret
mov
jle
shlb
rol
push
mov
pop
leave
pusha
pop
repz
loop
or
jnp
sbb
and
ljmp
pop
and
or
or
inc
movsl
push
shlb
xchg
mov
mov
jb
xchg
dec
add
mov
sbb
mov
and
lea
je
push
call
lea
je
pusha
pushf
stc
add
cmc
cmp
pusha
lea
jb
cmp
cmc
cmp
push
call
mov
jbe
jg
lret
sub
push
push
mov
adc
stc
dec
mov
adc
in
call
dec
fcom
xlat
rorb
push
pusha
es
addr16
mov
rclb
mov
dec
xor
cli
repz
std
and
test
sub
dec
jmp
sub
outsb
cli
hlt
jp
mov
cs
mov
add
call
pushf
call
call
ljmp
mov
inc
nop
mov
jae
lret
out
push
out
sub
test
idivl
mov
pushf
fs
lret
inc
call
enter
mov
outsl
int3
jns
pop
cmpb
cmc
add
negb
inc
add
push
popf
fsts
push
jo
lahf
jge
daa
scas
scas
adc
mov
mov
jge
mov
pop
loop
out
cmpsb
scas
lods
adc
or
icebp
out
lods
std
into
sub
imul
sarl
mov
push
popf
imul
rorb
jnp
and
fistpl
sbb
daa
arpl
sub
or
rcrl
jp
test
inc
int
test
dec
push
lret
imulb
pop
cmc
mov
shll
movsl
xor
jne
mov
cld
xchg
inc
cwtl
cli
cmp
xchg
cmpsb
mov
dec
inc
xchg
push
aad
int
mov
jmp
aam
je
or
dec
into
sub
mov
cld
imul
jns
adc
movsl
enter
lahf
rcll
leave
sbb
inc
mov
cld
cwtl
add
jl
jmp
sub
mov
aaa
fisttpll
mov
add
enter
sub
daa
movsb
ljmp
lahf
jle
adc
mov
inc
jae
hlt
mov
push
in
mov
sbb
loope
add
cmp
cmp
loope
add
cmp
sar
loope
add
outsb
adc
add
leave
repnz
pop
add
fiadds
rorl
clc
add
and
cli
cs
add
loop
push
in
mov
clc
add
add
xchg
movsb
daa
mov
jmp
add
out
mov
cwtl
add
filds
ret
js
loope
add
mov
in
add
mov
addb
jecxz
mov
mov
add
add
add
das
push
fadds
loope
add
fwait
sar
add
or
mov
psubusb
loope
add
andl
faddl
sub
fadds
loope
add
and
ljmp
dec
sarb
push
in
mov
push
shr
mov
add
pop
pop
in
mov
pop
add
jecxz
dec
out
mov
clc
add
mov
mov
insb
sbb
loope
add
cmp
js
jecxz
add
xor
add
or
test
cltd
adc
xlat
in
add
rcrb
sbb
xchg
nopl
test
int3
mov
jecxz
mov
dec
aaa
push
and
fnstsw
and
inc
es
jae
mov
jle
ds
ds
daa
ds
mov
push
lahf
push
fdivp
cmove
xchg
stos
inc
ljmp
jmp
sub
sub
jge
cmp
inc
push
ss
movsb
mov
mov
ss
out
lods
movsl
lret
jae
enter
xlat
cmp
lahf
xor
mov
mov
xor
neg
out
sbb
sub
push
push
pop
cmpsb
sub
xchg
leave
add
ret
iret
xchg
fwait
cltd
fisubl
xor
adc
lahf
andl
push
push
les
pop
push
dec
out
inc
jle
int
icebp
xchg
sub
mov
outsb
xor
push
into
or
int3
insl
test
add
hlt
lea
sub
adc
popa
call
sbb
jmp
sbbl
bswap
sub
es
cwtd
or
sbb
ds
xchg
add
aad
or
sbb
mov
stos
out
and
pop
sahf
clc
add
addr16
sub
lcall
adc
cmpsb
mov
xor
int3
jmp
fcmovnb
dec
ret
dec
test
aam
cmp
fisubs
sub
pop
cwtl
cmp
in
cmpsl
and
test
xchg
cmpsb
adc
out
sti
lahf
push
shrl
dec
fcomps
bound
mov
mov
or
and
jbe
mov
aaa
fdivrs
in
dec
cmp
in
add
out
loopne
shrb
lret
sti
sbb
stos
fistpl
popf
test
mov
fbstp
dec
mov
cmp
rcrb
jmp
add
pushf
lea
jb
mov
jmp
cmp
sub
mov
mov
call
mov
adc
push
mov
jbe
cltd
mov
pop
xchg
mov
jmp
shl
clc
pushl
stc
movb
add
bt
mov
call
jecxz
jp
xchg
stos
in
push
mov
jnp
mov
jmp
dec
mov
daa
jns
shlb
scas
jbe
gs
pushf
adc
push
push
jno
push
pushf
outsb
les
xor
lcall
cmp
jne
xchg
sub
pop
sbb
test
dec
or
pop
in
and
scas
cs
les
movzbw
movl
mov
call
xor
push
inc
dec
fidivl
jl
jp
lret
addb
sub
fsubrs
pop
lods
mov
pusha
push
mov
dec
cs
outsb
sub
inc
js
xchg
insb
xor
xor
out
dec
pusha
jo
mov
xor
pushf
pop
lods
or
and
sub
push
cmp
les
shlb
push
movsl
popa
mov
inc
mov
and
pop
sbb
movsb
add
lahf
adcl
sbb
sub
inc
movl
push
bt
xor
clc
cmc
cmp
add
bt
jmp
jmp
pusha
pushl
pusha
pushf
inc
pushl
xor
mov
stc
add
cmc
shl
stc
bt
cmp
add
pushf
jmp
arpl
aas
xor
outsl
xor
add
jnp
or
sub
sbb
in
dec
add
sbb
xor
inc
loopne
add
fidivrl
jb
cmp
lods
nop
inc
lcall
push
into
in
cmp
mov
and
or
push
jnp
insb
cmp
inc
fsubs
movsb
mov
ss
pop
cld
mov
jmp
xchg
ss
movnti
dec
stos
xor
scas
cmpl
xor
jo
das
mov
cmp
mov
enter
lahf
test
outsl
call
clc
outsb
scas
movsl
sbb
gs
das
mov
jns
outsl
stos
push
dec
or
xchg
repnz
rolb
stos
mov
loopne
mov
out
mov
mov
fdivs
scas
ljmp
xor
mov
jecxz
sub
xor
mov
xchg
jmp
inc
jbe
ja
add
ret
or
rorl
jp
dec
mov
sbb
jp
repz
jle
cmp
xchg
and
mov
call
jle
sti
xor
int3
inc
stos
gs
out
scas
mov
in
daa
jmp
and
cmp
mov
aad
nopl
imul
add
sbb
lret
loopne
xchg
imulb
inc
cs
das
push
enter
in
popf
cli
sub
push
cmp
scas
je
cmp
bound
jecxz
outsb
in
dec
and
inc
pushf
sti
mov
add
inc
mov
add
lret
pop
nop
aam
xchg
push
push
enter
outsb
sti
push
lods
pop
loop
sbb
inc
inc
cmp
inc
lret
sbb
sbb
add
roll
pop
add
out
cmp
in
out
les
aaa
sti
enter
mov
and
add
lea
je
pushf
pushf
push
jmp
jmp
repz
pop
out
jmp
out
sub
lsl
movsl
push
fs
add
call
mov
mov
daa
mov
sbb
mov
andb
ss
shlb
jmp
popa
xchg
push
push
pop
cmp
lds
notb
mov
jecxz
push
jae
push
mov
inc
stos
mov
xchg
push
adc
pop
add
lea
sbb
scas
push
xor
mov
xchg
sbb
lahf
xchg
ljmp
loope
or
pop
loopne
pop
and
mov
sbb
xlat
pop
in
lods
js
push
dec
or
mov
dec
or
aad
xchg
xchg
xchg
pop
subb
mov
push
shl
out
cmp
add
jno
in
pop
rcll
scas
xor
and
fildl
pop
mov
jno
leave
push
xchg
mov
dec
add
add
cltd
rclb
aam
movsl
out
jmp
sbb
lods
pop
mov
es
push
arpl
repnz
sbb
inc
in
clc
pop
roll
int3
push
xchg
xor
int
add
inc
sub
or
jae
sub
scas
sub
sbb
sub
stos
sub
stos
hlt
jle
inc
cmp
lahf
xchg
xchg
pusha
call
lea
xorb
fidivl
out
mov
rolb
mov
and
jne
sub
mov
aas
sti
mov
or
mull
aas
dec
jle
jns
jo
add
cmp
pop
std
movsb
pop
scas
rcrl
jge
leave
pop
ficoms
inc
fildll
imul
iret
dec
xchg
push
or
adc
add
shl
jmp
and
out
int3
jecxz
ret
gs
in
mov
and
xchg
pop
dec
mov
fimull
xor
idivl
or
iret
adc
lahf
adc
mov
repnz
rcr
inc
and
fadds
push
sbbb
pop
pusha
fdivrl
sbb
jbe
testl
pop
jge
leave
lock
push
je
outsb
xchg
adc
jo
adc
push
inc
push
xchg
or
lea
lahf
mov
ds
mov
in
cmp
rorl
mov
int
mov
pop
cmc
hlt
iret
xchg
insb
mov
shl
enter
sbb
mov
jo
and
and
std
push
jo
xchg
pop
cmp
dec
stos
jp
cmp
mulb
aaa
pop
ja
sbb
je
xchg
xchg
stos
jge
movsb
pop
pop
fisubrs
movsb
pop
pop
mov
ja
jg
cmp
imulb
call
jb
mov
xlat
loope
sub
lods
dec
cmp
rcpps
push
push
xchg
push
dec
add
jp
xor
or
dec
pop
push
adc
sbb
in
movsb
test
sub
mov
add
es
fadd
es
cmp
and
dec
outsb
dec
dec
out
pop
pop
mov
pusha
bound
pop
inc
addr16
popl
mov
xchg
leave
xchg
jge
adc
add
decb
and
and
stos
fwait
arpl
xchg
xchg
out
outsb
xor
out
mov
ret
mov
sub
add
loope
push
jl
push
mov
stos
dec
mov
rcrl
pop
fsub
sbb
inc
add
or
test
pop
xchg
pop
jecxz
stos
cmc
std
stc
test
jle
rorl
scas
addb
xlat
stos
lret
add
pop
push
rcrl
mov
sub
mov
pusha
sbb
enter
iret
in
cmp
ds
mulb
xchg
xor
pushf
frndint
popf
scas
js
push
mov
insl
xchg
add
enter
dec
xchg
pop
fwait
pop
pop
mov
mov
mov
adc
stc
sub
call
push
jbe
xor
inc
testb
push
dec
mov
push
sbb
jne
mov
les
mov
lods
push
js
add
dec
push
int
loop
out
ficoml
outsl
xor
jg
test
gs
adc
fidivrs
call
mov
cmp
idivb
add
sbb
add
bound
cmc
jno
clc
bswap
sub
aam
cmpb
jmp
jnp
dec
push
fcmovnbe
das
aaa
dec
loopne
pusha
popa
test
mov
dec
pushf
pop
pop
sarl
add
in
xchg
fsubl
pusha
cmpsl
test
dec
jle
mov
jle
mov
mov
dec
or
imul
xchg
pushf
pop
push
nop
xchg
aam
dec
add
bound
xchg
mov
pop
nop
lods
nop
lret
dec
mov
xlat
pop
sbb
xor
and
cltd
scas
mov
fs
or
js
stos
loopne
mov
jb
xchg
xor
outsb
int
call
inc
push
jle
mov
cmc
mov
repz
jae
mov
loop
mov
bound
in
stos
pusha
std
xor
sahf
and
in
data16
and
mov
stos
mov
jp
fisubs
fnstsw
lret
jno
arpl
lods
add
xchg
lahf
mov
mov
mov
pusha
mov
mov
mov
lea
jbe
lea
lahf
call
test
or
mov
repz
xchg
lcall
sbb
fildll
ret
push
lret
mov
jo
inc
cmp
lock
dec
add
ss
data16
jae
xchg
out
insl
arpl
push
fistpl
rolb
and
lods
or
add
sarb
mov
addr16
dec
jne
divb
ljmp
xor
dec
int
fists
mov
lahf
mov
or
fmuls
xchg
lea
lea
call
pusha
pushf
pushl
lea
call
pusha
pushf
lea
jb
or
cmp
lea
mov
setne
lahf
sbb
lea
not
movsbw
lea
push
not
bswap
mov
lea
jbe
pusha
not
push
mov
call
inc
hlt
jae
push
pop
lods
ja
aad
pop
pushf
pop
xlat
mov
gs
and
fimull
das
jae
insb
sbb
iret
sbb
dec
or
add
pop
aad
fildll
cmpsl
push
mov
mov
pop
mov
push
push
stos
or
cmp
or
sub
or
lahf
inc
sbbb
mov
or
sbb
std
lods
xor
mov
dec
push
push
pop
loop
imul
xor
call
xor
enter
addb
mov
mov
xchg
sub
inc
rclb
movb
aad
sub
jne
mov
ds
mov
pushf
fs
jo
push
jge
in
lcall
dec
pop
lds
sar
adc
sub
sbb
mov
int3
pop
pop
sahf
jecxz
ljmp
lahf
lds
into
lods
nop
iret
movsl
ja
xor
cmp
out
scas
xor
mov
and
testb
dec
inc
lds
clc
jg
sbb
push
jg
xor
jp
stc
enter
cmp
mov
hlt
push
stc
sbb
pop
in
xchg
push
adc
mov
or
cmp
lret
or
xchg
roll
xchg
test
push
dec
mov
adc
lahf
mov
neg
stc
cmc
mov
push
jge
fcoml
pop
data16
hlt
sub
fistl
sub
aad
out
add
adc
jg
scas
cmp
push
lods
lret
cmpl
pop
xor
fisttpll
adc
adc
rcll
test
fcmovnb
mov
mov
fadds
aas
in
mov
cmpsb
push
xchg
mov
js
lahf
adc
movl
lahf
mov
adc
jl
xchg
push
mov
pop
mov
je
jb
loope
lods
insl
xchg
dec
or
hlt
mov
lret
lret
sub
inc
adc
bound
stc
add
fisttpll
test
es
ss
xchg
movsb
test
fmuls
pop
mov
or
mov
clc
pushf
clc
mov
addr16
adc
cwtl
divb
xorl
test
aam
push
sub
and
mov
dec
push
iret
ror
pop
sbb
cmpsb
insb
addr16
add
or
mov
cmpsb
inc
enter
inc
add
or
pop
fcompl
pop
or
repnz
movb
add
lock
aad
imul
aad
cmp
call
sbb
in
ds
cmp
xchg
hlt
dec
cmp
push
and
dec
insb
test
insl
add
arpl
cmp
ljmp
frndint
cwtl
fidivrl
ret
and
mov
add
mov
push
xchg
mov
lahf
nop
add
repnz
adc
stos
push
dec
jnp
mov
sbb
sbb
pushf
pop
mov
push
sti
mov
adc
sbbl
fucomi
leave
adc
dec
mov
inc
pusha
pop
sbb
dec
cmp
xchg
xchg
fldcw
dec
jne
mov
lods
add
xchg
lock
or
and
mov
cmc
cld
sub
popf
orl
push
in
nop
dec
ficoml
imul
and
or
or
jmp
add
push
jns
push
gs
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
popf
xor
or
lahf
popa
insb
cmpsb
jecxz
lods
in
jl
in
jmp
pop
lahf
cmpsb
and
lcall
ret
pop
xor
mov
into
dec
xlat
cmp
aam
add
mov
scas
dec
push
add
lods
leave
adc
mov
repz
andb
inc
xor
fdivl
insl
and
or
movsl
clc
stos
mov
adc
pop
fsubs
cmp
lahf
xchg
pop
es
cmp
repnz
pop
aas
xchg
aam
movsl
cmp
dec
lods
insb
push
mov
aam
and
lock
cld
nop
out
sbb
xchg
and
imul
jbe
ljmp
ljmp
xlat
stos
fstpt
aaa
in
dec
jno
pop
imul
scas
jp
xchg
mov
rorl
leave
mov
clc
ror
call
call
pusha
call
cli
pop
in
mov
jb
xchg
dec
mov
push
pop
xchg
pushf
loope
in
out
rclb
inc
dec
repnz
sbb
daa
fidivrl
sub
cmpsb
inc
pop
adc
idivb
pop
cmp
pop
clc
mov
push
lock
imul
lret
push
xchg
orb
les
ffree
or
push
adc
xchg
xor
cmp
imul
push
xor
mov
mov
xchg
sbb
inc
dec
inc
addb
fistpll
out
enter
mov
xchg
leave
add
or
clc
hlt
xchg
shlb
rorl
sub
imul
outsb
xchg
fdivs
mov
adc
cmpb
cmp
pop
inc
and
std
popf
mov
dec
nop
int3
mov
rol
jo
je
hlt
pushf
inc
into
mul
and
pop
pop
rorb
sbb
scas
in
sub
xchg
clc
cmp
cwtl
xor
mov
shlb
fldl
popf
cmp
test
pop
add
ljmp
or
rcrb
jae
jmp
inc
xorb
stos
xchg
rolb
add
ret
cmpsb
adc
mov
cmovle
push
push
pop
ds
sub
mov
xchg
addb
popf
aad
arpl
ds
sbb
add
lahf
sti
xor
outsl
jmp
cmp
sub
inc
test
inc
and
les
adc
aaa
or
jae
mov
sbb
sub
pop
jo
pop
cmp
xor
mov
dec
inc
out
fstpt
mov
jmp
pop
jns
xor
inc
scas
push
fistps
dec
adc
lret
rcrb
cmc
fcompl
cmp
daa
inc
dec
dec
xor
dec
inc
out
xor
mov
pop
xor
daa
pop
pop
push
pushf
pushf
fstps
fcoml
lea
lahf
xchg
and
sbbl
pop
push
imul
cli
add
jmp
sbb
adc
stos
add
inc
icebp
sub
lea
mov
jecxz
stc
cmpsb
shll
ss
loopne
sub
mov
or
adc
in
fisubl
test
cmp
rcrl
lahf
xchg
xchg
aad
xchg
pop
inc
add
js
jnp
inc
incl
mov
into
aam
sbb
ja
das
shl
jp
mov
iret
orl
mov
jmp
and
pop
xor
mov
fs
sub
mov
nop
nop
loop
push
mov
loop
add
inc
adc
loope
jg
add
fpatan
popf
out
cs
pusha
pusha
les
das
xchg
iret
push
cmpb
orl
lcall
insl
stos
insb
sub
mov
lahf
xchg
sub
xchg
jmp
bt
ror
movl
dec
cmc
pushl
cmp
call
clc
push
aad
daa
and
rorl
addl
testl
mov
aam
cmp
fwait
jae
sub
mov
cmp
je
cmp
sahf
neg
jmp
in
es
sbb
imul
fdivr
in
xchg
jecxz
aaa
dec
sub
mov
pop
stos
jnp
sub
shll
mov
mov
leave
mov
add
movsb
ficomps
pusha
insb
pop
add
push
push
xor
xor
inc
dec
dec
add
mov
mov
mov
jne
aas
xchg
mov
push
xlat
lahf
pop
sahf
pop
cmpsl
adc
aam
dec
movsl
out
popf
inc
xchg
ret
divl
mov
inc
ficompl
cmp
xor
push
jb
push
inc
push
pop
cmp
dec
xchg
xor
rcll
dec
repz
fxch
and
or
adc
push
sub
mov
pop
repnz
loopne,pt
lds
loopne
mov
repz
mov
jnp
xchg
and
sbb
bound
inc
add
adc
mov
add
dec
sub
xchg
mov
jle
cwtl
cwtl
xor
outsb
lcall
push
add
and
mov
mov
rclb
mov
push
lcall
stc
das
shll
inc
cmp
mov
scas
add
jge
das
pop
aas
aas
and
pop
test
sbb
insb
mov
ficoml
or
es
stos
push
pushf
inc
sub
jmp
ret
call
in
xchg
es
jnp
mov
insb
sub
jmp
cmp
mov
dec
push
scas
add
jmp
pop
or
push
or
cltd
movsb
mov
mov
loop
xchg
sbb
fs
out
add
cld
inc
push
push
and
adc
sub
sbb
jnp
cltd
loopne
pop
push
sahf
cmpb
shrb
sub
inc
test
lret
mov
cwtl
das
gs
jp
pop
adc
mov
mov
lret
pushf
adc
xchg
push
xlat
push
cmpsl
xor
idivl
add
stc
or
pusha
mov
pusha
call
inc
jno
pop
mov
xchg
stos
bound
cmpb
in
mov
dec
sub
out
hlt
push
loopne
fildll
enter
and
dec
std
mov
popf
test
rcll
pop
jl
loopne
sarl
and
mov
clc
lret
mov
jecxz
add
pop
cmp
mov
sahf
icebp
and
sbb
xchg
pop
mov
std
sbb
jl
add
inc
mov
sqrtps
xchg
lcall
or
mov
adc
ja
sti
outsl
jne
or
and
je
sbb
out
or
fcmovnu
cmp
loop
add
push
adc
jl
or
pusha
dec
in
fadds
ret
pusha
mov
inc
adc
loop
or
inc
cmp
mov
inc
aaa
cld
addr16
imul
out
mov
adc
addb
adc
or
nop
adc
clc
pop
adc
pop
andb
cld
push
add
inc
fs
push
and
mov
xlat
push
inc
or
cwtl
xchg
ret
clc
loop
push
fwait
in
les
or
sbb
jge
xchg
and
nop
imul
arpl
mov
test
cmpsl
inc
mov
pop
andb
jns
lock
cmp
imul
or
and
scas
in
movl
and
pop
out
js
sbb
out
leave
in
mov
xchg
jge
push
dec
xchg
stc
jmp
mov
test
mov
and
in
hlt
cmp
jmp
sub
test
push
push
mov
out
movsl
stc
lcall
in
mov
pop
inc
mov
fldl
push
loop
push
mov
mov
xchg
dec
dec
jns
jg
sub
rolb
cmp
addr16
xor
mov
cmc
mov
and
sub
int
leave
mov
pop
dec
lahf
rcrb
stc
push
pop
stos
mov
sbb
int3
mov
and
pop
into
push
int
cmp
or
out
mov
mov
jb
stos
push
mov
aam
lret
cmpsl
movsl
je
cltd
fcmovu
push
mov
push
repz
movsl
adc
shlb
pushf
xor
call
add
das
stos
cmpsb
mov
mov
fs
movl
lds
in
in
sahf
adc
add
push
repz
mov
inc
test
andb
sbb
rorb
ret
dec
cmc
ret
lret
and
out
aam
or
lods
fsubrs
outsb
mov
push
dec
push
mov
daa
out
jb
pop
shr
cs
jg
cwtl
outsb
sbb
push
enter
push
daa
cmp
jge
out
push
leave
stos
into
nop
sub
dec
movsl
insb
call
popl
in
pushf
push
mov
rcll
mov
cwtl
and
adc
mov
pop
mov
cld
push
popf
pushl
sub
roll
cltd
jne
mov
ds
sbb
mov
dec
mov
sbb
pop
cld
sub
xor
dec
mov
xorl
imul
clc
mov
test
mov
call
data16
push
xor
jecxz
xor
add
shll
aas
cld
mov
lea
and
or
mov
sub
testl
push
pop
jbe
adc
lea
bnd
cmp
mov
xor
mov
mov
push
adc
cld
sbb
inc
mov
and
xchg
pop
lret
lods
cmpsb
cmpb
mov
push
aaa
mov
push
aas
and
out
mov
mov
push
jmp
xchg
popf
outsl
jle
jp
add
xchg
dec
lods
mov
scas
movsl
scas
inc
inc
xor
scas
or
test
dec
scas
cli
mov
xchg
dec
xor
xchg
dec
sub
mov
add
lds
in
jnp
push
cmp
sub
lods
mov
xchg
andb
lock
enter
cli
sbb
push
sahf
lret
jecxz
add
filds
cmp
hlt
cltd
or
pop
jne
add
dec
loop
lods
fmul
sbb
popa
sbb
fs
popa
loop
xchg
adc
pop
pop
inc
xchg
push
loope
repnz
mov
scas
test
pop
sub
pop
dec
lods
inc
fstps
mov
xor
pop
insb
cs
fildll
js
xchg
push
imul
mov
in
sub
je
or
ds
xchg
push
mov
pop
adc
imul
sahf
and
outsl
es
addl
popf
insl
in
shl
shrb
push
and
stos
dec
mov
lds
loop
les
pop
outsl
push
imul
mov
mov
clc
cmc
pop
lock
xchg
out
in
add
lds
fwait
jg
ljmp
or
push
rorb
inc
movsl
repz
xor
mov
or
scas
daa
insb
ja
inc
cli
bnd
ljmp
in
jmp
mov
add
jae
stos
xor
mov
cmp
jp
mov
mov
pop
inc
cmp
getsec
fidivs
push
push
fwait
out
out
call
sub
and
xchg
sbb
push
jae
jae
cmp
lahf
movsl
inc
adc
sub
xchg
push
mov
mov
sbb
mov
rcl
xchg
push
push
mov
sahf
mov
xchg
jae
mov
xchg
lods
xchg
ret
pop
outsb
push
dec
movsb
dec
lret
int3
dec
clc
inc
mov
xchg
add
loope
repz
mov
orl
jle
outsl
out
aad
or
push
pushf
sbb
mov
test
sti
and
int3
enter
inc
lea
jne
sub
cld
adc
jp
mov
mov
mov
xor
lcall
cmpsl
xchg
xor
scas
popa
mov
pop
in
mov
in
cmp
add
and
mov
xchg
sub
movsl
js
push
push
outsl
ds
and
jb
push
xor
pop
shll
mov
loopne
xor
cli
pop
shlb
pusha
adc
push
cltd
mov
jge
xor
sbb
cs
pop
pop
shlb
pop
inc
xchg
pop
xor
andb
hlt
push
inc
add
or
add
and
lods
push
xchg
lods
xor
cmp
es
rorb
and
in
bound
mov
ds
xor
insb
scas
pop
mov
and
xchg
sahf
aaa
in
jo
lahf
or
and
sbb
bound
jno
or
iret
daa
or
mov
std
fcomi
cwtl
inc
pop
or
mov
jp
mov
or
sub
ret
in
or
out
arpl
dec
push
mov
add
daa
push
fstpl
push
ljmp
xor
enter
push
mov
mov
inc
inc
add
loope
std
divb
jp
scas
push
das
adc
add
push
sub
push
cmp
and
mov
popf
inc
test
mov
test
dec
ds
xchg
mov
jbe
jns
aam
jns
mov
fcomip
cmp
data16
xor
mov
out
mov
ret
cmpsl
stos
push
mov
fadds
stos
dec
in
jle
or
cli
mov
dec
stos
test
push
push
jb
mov
cmpb
movsb
mov
push
cli
in
or
xor
cltd
cld
aad
xlat
inc
fcompl
inc
sbb
pop
sbb
fisttps
dec
inc
sbb
and
and
jne
mov
cmp
test
jb
test
in
insb
andb
loop
mov
repnz
fsubrl
test
rcrb
out
test
fs
imul
mov
cmpsl
divl
imul
lret
pop
inc
lods
or
sub
adc
outsb
jl
xor
mov
loopne
popf
sbb
or
or
inc
sub
jo
in
fwait
mov
mov
or
ret
popf
push
pop
adc
stos
jl
dec
cmpsl
std
test
xchg
mov
jp
loope
pop
dec
mov
arpl
mov
sub
scas
stos
fdiv
mov
cld
enter
xor
mov
fstpt
inc
in
sub
sbb
xor
movsl
cmp
mov
cltd
xchg
push
inc
test
jno
jne
fwait
and
mov
and
add
or
sahf
dec
lea
popf
add
pop
inc
data16
push
jecxz
cmp
jnp
mov
push
insl
into
xor
sti
mov
push
out
sub
lcall
add
mov
aaa
cmpsl
cmp
mov
push
mulb
push
fstpl
fwait
mov
sarb
stos
test
pop
scas
insb
mov
loop
mov
hlt
stos
jne
cmpsl
outsl
dec
xor
jmp
sahf
lods
jge
push
test
xlat
sbb
out
imul
xchg
sub
adc
cmp
movl
or
sbb
into
shlb
mov
out
and
jbe
jbe
lock
dec
lods
cmp
loopne
popf
insb
cmpsl
push
pushw
sub
fistpl
seto
aaa
add
mov
nop
repnz
fbstp
stos
and
repnz
imul
push
not
ficompl
xor
lea
sub
jb
inc
iret
mov
xchg
or
mov
pop
xchg
in
sbb
adc
mov
mov
sbbb
out
fcmove
mov
add
fnsave
out
pusha
pop
pusha
and
mov
scas
dec
fsubrl
sub
sub
lea
mov
xchg
dec
ljmp
mov
add
lock
pop
pop
add
xlat
inc
mov
jnp
enter
mov
lahf
or
arpl
mov
cltd
div
mov
scas
push
pushf
arpl
push
jl
adc
rolb
incl
es
mov
loope
stos
je
scas
sbb
mov
inc
lahf
out
jle
popa
fldcw
cmp
sub
mov
mov
sbb
cwtl
sti
scas
in
rorb
jg
fstpl
sub
pop
shll
movsl
aam
push
add
in
pop
pushf
sub
test
jae
aas
push
sbb
pop
in
pop
sbb
ret
add
and
dec
and
sti
jns
mov
sbb
sub
call
into
inc
sahf
lock
or
lahf
dec
dec
mov
mov
inc
imul
cmpsb
call
stos
cmpb
mov
xchg
pusha
call
push
inc
popf
es
outsb
add
adc
jl
lods
ja
cmp
adc
and
das
out
push
sub
push
sub
lods
dec
inc
pushf
pusha
iret
out
sahf
outsb
adc
push
ljmp
add
ss
jmp
or
xchg
sub
xchg
mov
sub
jne
cmp
push
jo
or
xchg
rcr
aaa
idivb
lock
cs
loopne
mov
push
xchg
repz
or
jno
push
ret
mov
dec
in
push
mov
or
xlat
sarb
cwtl
mov
pop
jae
iret
mov
dec
mov
xchg
stc
push
push
imul
mov
cli
or
cmp
repz
sbb
jl
loop
jecxz
test
xor
call
in
inc
adc
outsb
insb
mov
sbb
in
rcll
bound
inc
or
lret
test
cmp
dec
mov
outsl
sub
mov
popa
sti
sbb
push
jge
sbbb
cmp
hlt
ret
pushf
adc
push
out
lret
xchg
sahf
lds
add
sbb
lret
mov
add
mov
mov
jae
dec
stos
mov
push
add
ds
hlt
jnp
xor
and
xchg
inc
adc
pop
mov
mov
mov
xor
sub
lahf
les
pusha
repnz
lods
mov
jns
das
insl
xchg
test
enter
xor
pop
mov
push
jo
daa
dec
js
pop
rolb
mov
bound
ret
or
orl
xor
mov
icebp
push
repnz
sbb
lret
stos
adc
mov
mov
imul
das
imul
jnp
call
ja
insb
cltd
ss
je
jmp
add
jno
jmp
arpl
je
xor
push
jno
shlb
bound
and
fmul
sahf
fnsave
jmp
in
jmp
xor
mov
daa
lods
ficomps
pop
call
cmp
into
inc
dec
fldenv
adc
div
jnp
insb
cli
xchg
add
adc
pop
int3
mov
mov
pop
pop
mov
repz
pop
decb
and
aaa
add
cmp
xor
pop
push
jno
nop
xchg
or
stos
fadd
sti
repz
js
sub
pop
outsl
rol
jg
add
jl
dec
jmp
fs
dec
xor
jmp
push
cmpsb
xchg
pusha
in
nop
loope
pop
pop
xchg
or
cli
test
arpl
loop
and
adc
mov
jbe
push
adc
mov
mov
lahf
insb
rorb
ret
adc
shrb
adc
in
xor
test
inc
and
mov
out
std
sarb
fildll
subl
lahf
jmp
mov
sahf
clc
xor
xor
mov
xor
xchg
les
jns
sahf
fcomps
and
pop
pusha
sbb
popf
in
sub
sub
mull
pop
inc
mov
cld
shrb
out
dec
cmpb
fyl2x
rcr
push
cmc
paddsb
mov
stos
adc
fwait
rcl
clc
movsb
xchg
sbb
mov
push
xor
pop
mov
fisttpl
aam
or
test
jmp
lcall
in
mov
out
mov
jne
aam
outsl
jnp
cmp
cmpsl
rolb
adc
filds
push
inc
cmp
fsubl
addl
mov
push
push
add
mov
add
push
shrb
int
sbb
mov
pop
mov
gs
incl
aam
sbb
pop
mov
xchg
into
xlat
xchg
sbb
jle
pop
mull
std
and
int
push
push
pushl
cmp
lcall
xchg
adc
mov
das
gs
aaa
jg,pt
or
mov
rorb
jp
dec
pushf
cmp
and
sarl
push
outsl
mov
mov
push
cmp
fwait
lret
jl
mov
or
mov
push
int
push
outsb
or
mov
lods
xchg
addb
mov
cli
out
shrb
std
dec
aaa
frstor
cmpb
loopne
subb
pop
cwtl
fstpt
call
jns
add
sbb
jbe
inc
fs
mov
movsb
int3
add
pop
aas
and
push
lods
xor
cmp
push
xchg
fldcw
std
xchg
pop
push
jmp
inc
jae
lret
fs
orl
lcall
lock
sub
or
test
sub
cmp
clc
test
cli
fisubrs
inc
fsts
mov
xchg
dec
aad
cmp
inc
push
push
inc
jns
ss
inc
addb
scas
push
xor
ret
push
add
dec
dec
popf
dec
inc
mov
mulb
fs
dec
mov
mov
jge,pt
dec
cwtl
inc
ljmp
testl
inc
loope
test
and
sub
jo
testb
aam
sub
add
adc
popf
mov
shl
pop
inc
push
loop
pop
jnp
ret
insb
imul
addl
mov
sub
mov
xchg
cmc
repz
shl
jno
shll
shll
imul
andb
test
les
pop
out
jmp
cmpb
leave
cmp
sbb
shlb
test
xchg
fcoml
mov
lret
rclb
adc
adc
hlt
jecxz
test
fdiv
lods
shll
leave
ds
adc
push
xchg
xchg
daa
push
dec
xchg
mov
xchg
xchg
mov
fdiv
sbb
push
pop
inc
fidivs
es
out
sub
pop
aad
xor
sbb
jp
cs
mov
hlt
jmp
shl
add
mov
notb
sub
sbb
mov
aas
adc
jb
mov
pushf
ja
mov
lahf
mov
test
sbb
fcmovbe
lahf
mov
jmp
data16
repz
cwtl
out
insl
xor
or
addr16
fdivrs
sub
in
mov
repnz
jge
push
loope
or
in
loope
aaa
shll
pop
xor
jg
mov
hlt
ljmp
xor
jns
lret
xchg
sub
push
jb
lahf
jbe
or
mov
mov
lret
push
mov
mov
xchg
repz
sbb
lods
cmc
stos
add
stos
pop
test
ljmp
adc
repnz
les
mov
int
cwtl
aas
in
inc
or
cltd
mov
dec
loop
mov
aad
and
je
mov
push
subl
leave
call
push
mov
push
mov
cld
and
insb
push
movhps
mov
add
nop
pushl
clc
add
pop
mov
push
xor
lods
inc
jmp
jg
movsb
inc
push
jl
fcoml
into
cmpsl
mov
sbbl
pop
shr
or
lock
jl
sbb
scas
xchg
sbb
add
je
shll
cmp
push
push
subb
jmp
jb
movmskps
sub
lret
popf
sub
rcrl
xchg
scas
outsb
cmp
pop
test
popa
xor
inc
xor
jecxz
xchg
mov
ss
add
movsl
add
xor
shll
fmull
pushf
stc
add
shr
fisubrs
dec
repnz
sbb
stos
mov
decl
nop
xor
mov
ficompl
cli
jmp
cmp
xchg
adc
cmp
xchg
mov
leave
test
xchg
xor
cltd
adc
cld
fadds
push
xor
jno
inc
pop
dec
ljmp
mov
test
xchg
lret
popf
fs
mov
pop
lea
mov
adc
xor
jmp
cmp
xorb
add
mov
data16
cmp
xor
add
and
inc
cmc
lods
or
psllw
or
movsb
push
arpl
sub
adc
pop
jbe
and
test
rcrb
lcall
mov
mov
pop
iret
das
fists
inc
pop
outsb
jg
sbb
mov
sti
dec
cs
jo
mov
addr16
bound
insl
sub
fmulp
pop
xor
pop
sbb
inc
repz
insl
xor
jb
cmp
leave
stos
xchg
lret
imul
adc
ret
loop
mov
cmpsb
pop
xorl
leave
jmp
inc
arpl
cmc
aas
lea
fstp
sti
aas
fcompl
fcomip
sbb
dec
sub
push
mov
divb
pushf
mov
xchg
mov
sti
incb
ljmp
cmp
jmp
fsubs
adc
cwtl
in
popf
add
push
xor
movsl
insl
mov
dec
jp
jo
sub
out
mov
mov
stos
pushf
jne
and
sub
sub
insb
pushf
jae
pop
negb
mov
mov
mov
sub
cmp
test
mov
dec
fsubrl
jbe
cltd
mov
lcall
xor
das
cmp
arpl
xor
sub
repnz
dec
scas
clc
cltd
notl
cmpsl
lcall
cmpsl
sbb
sbb
or
pop
insb
in
and
cmpsl
fisubrs
jne
jg
add
mov
daa
loope
adc
pop
cmpb
in
das
xor
mov
aaa
lock
pop
jae
dec
push
mov
xchg
cwtl
in
adc
mov
sbb
xchg
mov
cli
cltd
pop
cld
jbe
gs
js
imul
push
outsb
arpl
insl
shll
or
inc
mov
repnz
leave
out
dec
daa
pop
sbb
jmp
jecxz
in
scas
and
in
outsb
pop
pop
xchg
addr16
cwtl
loope
jge
mov
test
es
pop
push
je
rcr
loope
lea
xor
aaa
pop
cmp
ret
inc
mov
xor
and
add
push
fwait
mov
inc
repz
cli
aas
stc
and
pop
jo
adc
push
lds
mov
pop
aaa
lea
xor
lock
jmp
push
rcl
push
lahf
pushf
cmp
loope
dec
popa
pop
out
xor
int
dec
int3
sub
jne
fsubrs
push
mov
lcall
aas
hlt
mov
ret
clc
mov
lea
dec
jbe
push
mov
ficompl
add
testl
test
jmp
sbb
inc
mov
lea
mov
cli
aaa
out
xchg
jp
and
les
cmp
and
push
fistl
sbbl
loop
sub
mov
xchg
add
add
cmp
imull
xchg
push
flds
dec
jmp
jl
fwait
sub
xchg
ret
pop
call
test
push
rorb
stc
fldt
mov
push
pushf
add
mov
sbb
inc
inc
shll
sti
int3
pop
add
mov
cwtl
shrb
dec
pop
jne
mov
ret
fs
push
jecxz
je
lods
adc
pushf
test
pushl
push
dec
in
jmp
in
jns
mov
ljmp
or
div
mov
fnstsw
test
xor
sbb
cmp
lea
pushf
pop
aad
push
daa
pop
lds
imul
jae
push
nop
hlt
rcrw
mov
sub
filds
sub
xchg
movsl
loop
sbb
push
mov
pop
push
ja
xor
fwait
test
sbb
pop
rclb
sti
xor
subl
mov
in
mov
or
mov
fnstenv
out
ret
rcll
cmpl
xlat
mov
arpl
icebp
mov
mov
nop
jne
pop
dec
sarb
mov
sbb
jecxz
insb
jns
xchg
jge
cltd
pop
mov
and
sbb
cmp
dec
inc
sbb
and
in
stos
cli
pop
dec
jb
lds
jge
sbb
iret
popl
push
outsb
incl
mov
or
mov
xchg
inc
mov
xor
ficoms
imul
iret
out
mov
sti
xor
sub
fcompp
mov
mov
jge
arpl
and
pop
ds
sbb
mov
leave
jb
mov
in
sbb
sbb
outsl
hlt
fisttps
push
cmp
sub
dec
inc
iret
adc
sbb
or
es
push
mov
xor
jecxz
or
insb
pushl
adc
xchg
xchg
mov
fsubl
in
ds
idiv
sub
repnz
sbb
xor
test
pushf
das
mov
movsb
pop
lcall
or
test
cltd
push
push
push
xor
pop
cld
cwtl
scas
sub
imulb
arpl
ss
and
and
ja
jmp
mov
jecxz
arpl
cmc
addl
xor
mov
cmc
outsl
js
lahf
pop
pop
les
xchg
scas
dec
adc
lcall
mov
cwtl
ret
int
cmp
ds
fnsave
shl
push
insb
push
mov
stos
or
js
jne
scas
sub
lahf
xchg
in
fucomi
mov
cmp
inc
test
imul
cmp
mov
sbb
iret
adc
push
ljmp
dec
mov
mov
xchg
add
cli
out
jne
dec
sbb
push
fnstenv
dec
add
cli
das
xor
scas
push
push
adc
sub
lret
lret
jne
gs
adc
mov
sub
jbe
add
ds
cmpsl
iret
pop
mulb
test
std
and
shl
inc
les
adc
aam
insl
adc
fmul
call
lock
xchg
fisttps
in
xor
jecxz
rcrb
insl
out
push
push
or
fwait
outsb
fistpll
cltd
mov
shll
or
inc
enter
jp
jno
out
jns
mov
pop
add
and
icebp
pusha
sub
gs
and
or
jecxz
cltd
cmp
mov
fs
cli
addl
sub
inc
std
mov
imul
dec
cmp
mov
in
and
jns
sar
das
aam
jmp
jne
adcb
lods
cmp
xor
inc
aad
lods
sbb
sbb
push
mov
mov
leave
xor
and
sub
js
ret
cs
andb
add
icebp
inc
mov
pop
std
scas
test
cmpxchg
jl
sub
jno
std
sbb
mov
cli
or
fwait
xor
add
dec
mov
inc
rcrl
push
xor
icebp
push
sahf
ss
mov
sbb
rorl
ja
sbb
mov
outsb
pop
pop
repz
fwait
pusha
sbb
out
std
clc
inc
sbb
cwtl
mov
jbe
xlat
fimull
add
jmp
dec
mov
mov
mov
sbb
inc
mov
scas
leave
mov
repnz
adc
fs
push
adc
push
test
fisubl
dec
ret
mov
or
test
add
test
mov
mov
or
icebp
jo
lods
jge
mov
leave
adc
test
int3
into
sti
fs
xchg
test
push
push
sbb
aad
frstor
movsl
std
or
jns
jo
outsb
popf
les
icebp
mov
lds
aaa
stos
and
out
insl
ret
or
inc
mov
adc
push
pop
adc
jbe
sbb
jnp
xchg
repz
inc
not
das
rcl
ret
enter
scas
mov
cmp
cs
xchg
mov
repz
cmp
mov
sub
adc
xchg
xchg
das
xchg
adc
frstor
adc
mov
gs
imul
add
push
lock
pushf
nop
sbb
inc
mov
dec
iret
mov
mov
and
mov
cmp
sub
jl
flds
mov
xlat
and
dec
and
stos
pushf
rorb
lea
loope
fs
pop
mov
lret
scas
mov
leave
mov
lcall
pop
and
es
dec
fidivrs
leave
repnz
stos
test
xchg
inc
xchg
jbe
lods
xchg
sbb
cmp
insb
ds
add
popa
cltd
and
aam
push
ds
mov
xchg
jne
inc
je
lret
lahf
clc
fstpt
sub
fisubl
pushl
inc
lret
jno
fistl
jecxz
nop
jge
dec
dec
ror
mov
jne
movsl
ljmp
in
daa
test
aam
cltd
cmpsl
sub
jae
fsqrt
outsl
call
and
mov
ret
repz
push
iret
iret
test
fsts
add
outsl
insb
aaa
pop
movsb
sbb
cs
xchg
cmp
test
aas
or
das
or
std
rolb
out
and
xchg
mov
pop
das
ret
fwait
jecxz
lahf
lds
arpl
rclb
inc
into
dec
stos
adc
xor
sbb
ret
push
or
jge
mov
pop
lcall
imul
or
insl
and
cmpb
call
icebp
xchg
cmpsl
mov
seto
addr16
cmp
stc
pop
roll
jns
push
inc
in
sbb
push
es
sbb
pushf
mov
out
ja
jns
adc
in
mov
gs
or
leave
mov
movsb
fdivrs
cmc
outsb
lea
mov
push
inc
mov
mov
xorl
pop
sub
call
push
push
aam
inc
add
scas
movsb
add
push
sarb
fs
sbb
stc
fidivl
adc
sbb
in
scas
inc
fwait
xor
out
xchg
cwtl
add
aas
and
or
mov
lahf
push
adc
in
aaa
cmpsb
es
sub
mov
movl
xchg
mov
imul
adc
cmp
sub
aam
pop
jg
inc
loopne
out
aad
sarw
cmc
into
pop
ss
ja
sub
sub
or
xchg
aas
push
out
mov
and
aad
data16
mov
ret
mov
hlt
jo
adc
or
jmp
insl
push
daa
mov
push
adc
mov
inc
sbb
mov
sub
pop
cmc
sbb
mov
add
cld
lods
jl
std
jae
outsb
xor
or
xor
pushf
sub
sub
push
test
lcall
enter
or
fsubrs
jle
inc
add
pop
test
cli
push
cltd
fidivs
sbb
and
pop
pop
aaa
and
push
and
lret
or
or
lcall
pop
in
lds
push
dec
adc
jecxz
pop
add
jmp
in
insl
cmp
dec
into
addr16
mov
sahf
lcall
xchg
pop
mov
aaa
rcr
sbb
sub
lret
push
dec
out
cld
fdivrl
jnp
lret
sbb
lea
or
jbe
enter
jle
stc
out
push
sub
push
push
xchg
adc
leave
push
out
push
std
ss
xchg
mov
or
mov
mov
hlt
sbb
fs
sbb
mov
pop
movsb
jb
into
mov
xchg
cmp
arpl
stos
xchg
in
test
mov
xchg
leave
lcall
cmp
mov
pop
shll
inc
fcom
jae
ret
addr16
testb
ss
fmull
jne
int
xlat
xchg
mov
mov
sub
arpl
lods
push
hlt
popf
scas
adc
imull
mov
pop
mov
jbe
lcall
mov
addl
mov
cmp
sub
sbb
ljmp
jp
aas
jp
test
in
hlt
adc
pop
push
out
xor
pusha
ficoms
xchg
and
fs
or
fwait
loop
outsl
jg
mov
testb
stos
jnp
mov
sbb
cltd
enter
jne
jp
jmp
mov
push
out
mov
dec
cmp
add
movsb
subb
cmp
out
stos
push
mov
int
ss
xchg
fstl
rclb
out
idivl
push
addr16
sarl
lock
fisubrs
pop
xchg
shrb
mov
jg
jbe
mov
call
pop
cmpsl
add
jbe
adc
repz
dec
add
aam
adc
jb
rcrl
xor
mov
mov
cli
pushf
dec
jecxz
cmp
inc
dec
outsb
pop
sub
leave
add
mov
mov
rolb
lcall
pop
cli
adc
mov
fsub
jle
or
sarb
cmpsb
mov
push
sub
or
ljmp
stos
inc
popa
xor
shll
fadds
sbbl
cmp
push
push
aad
inc
mov
adc
lods
test
pop
fs
sbb
nop
ret
adc
imul
jo
or
stos
push
aad
aam
cmp
test
mov
dec
cmp
adc
out
push
hlt
fimull
or
out
push
lcall
sbb
jl
jmp
stos
test
test
fwait
bound
cmp
mov
jp
stc
or
test
popl
cli
pop
mov
pusha
xchg
or
sqrtps
sub
enter
ret
adc
int
daa
iret
mov
jns
sarl
ja
arpl
aam
mov
xor
adc
jbe
out
stos
stos
jp
or
push
mov
mov
xchg
outsb
jne
jb
inc
or
xor
jmp
push
mov
adc
fwait
mov
cmpl
ss
pop
push
sbb
or
ds
mov
in
lods
in
sbb
mov
fimull
cmpl
lea
mov
dec
pop
lea
fstpt
lret
dec
mov
sbb
pop
push
and
out
pop
test
mov
mov
rcll
addr16
sbbb
xchg
icebp
mov
adc
pop
xchg
lea
inc
imull
clc
mov
mov
adc
inc
adc
sub
outsl
cmp
inc
in
xchg
dec
out
xchg
pop
andb
pushl
cmc
shll
add
movsl
or
mov
pop
test
sbb
aaa
mov
mov
xor
xchg
out
sbb
repnz
push
inc
add
cs
sub
mov
clc
xor
sub
or
xchg
scas
mov
pop
xchg
push
or
pushf
xchg
xlat
add
mov
or
adc
fs
add
ret
and
lds
inc
lds
xor
xchg
cmp
leave
mov
mov
mov
or
and
mov
outsb
cmp
imul
lret
pop
es
xchg
in
mov
add
call
js
jmp
xor
pop
lds
cmpsl
xor
mov
mov
jp
scas
xchg
gs
pop
rolb
int
mov
sti
inc
lods
test
pushf
xor
sbb
xchg
xor
sub
fwait
jo
jl
daa
xlat
adc
cltd
jb
inc
call
xor
and
sub
jne
cmp
ds
pop
test
stos
testl
mov
mov
fwait
aam
mov
cli
cmp
loopne
ret
sbb
inc
adc
adc
adc
pop
sbb
cmc
test
add
dec
dec
test
ficoml
mov
and
cmpsl
inc
cmp
call
rorb
je
add
adc
sub
mov
das
repnz
jne
test
dec
push
fidivs
mov
pop
sub
pop
xchg
mov
sbb
stos
jbe
fmuls
ffree
lret
subb
popa
pop
insl
mov
jo
aaa
sbb
add
mov
dec
push
xor
xchg
scas
adc
sbb
lock
cwtl
shlb
addr16
ret
xlat
mov
ljmp
push
lcall
lahf
or
add
mov
rolb
shll
aad
add
imul
cld
into
in
dec
stos
outsb
pusha
xchg
addr16
sub
xchg
jecxz
mov
clc
xchg
push
dec
adc
xchg
sub
and
lret
out
dec
jae,pt
push
sarl
mov
add
mov
leave
in
inc
xchg
lods
jo
mov
mov
lcall
scas
or
loopne
mov
hlt
outsl
jae
pop
and
les
push
lock
cli
mov
sbb
mov
mov
sbbb
sbb
arpl
jg
push
xchg
lods
xchg
sub
cmp
cmp
mov
pop
jecxz
fidivrs
sbb
adc
mov
inc
adc
out
dec
outsl
aad
call
xor
xor
bound
dec
ds
mov
adc
dec
pop
push
mov
gs
lods
mov
aad
add
mov
mov
jae
test
dec
mov
stc
fsubrs
adc
and
int
dec
lcall
jp
aaa
xor
pop
popf
lock
jns
scas
mov
les
icebp
xchg
es
roll
fdivrs
jo
push
rcl
add
xchg
decl
or
xchg
adc
es
mov
je,pt
mov
subl
popf
ljmp
cmp
lds
aad
aad
iret
dec
jno
fdivs
cmp
sbb
test
lods
pusha
test
mov
fistpl
rep
push
in
jmp
jl
mov
xor
stos
imul
mov
movsb
imul
fistl
pop
jl
or
test
xor
jnp
sbb
inc
pop
mov
shl
jg
xor
cmpl
lds
repnz
adc
and
movsb
ds
std
ss
sbb
movsb
xor
or
pop
jg
and
pop
decb
daa
pop
inc
sbb
push
jmp
mov
scas
inc
push
push
sbb
pop
out
mov
daa
loope
cmc
aad
fsubrs
ljmp
sahf
rcll
pop
sbb
dec
push
call
cltd
sbb
mov
pop
mov
cmp
inc
sub
xor
mov
mov
adc
adc
xor
mov
and
cmp
push
jecxz
cmp
xchg
int
and
pop
cmp
mov
or
jbe
jns
outsl
test
inc
out
flds
pusha
mov
mov
or
mov
in
out
pop
loop
ret
scas
mov
mov
mov
cmp
dec
fcompl
and
clc
pop
aaa
push
jp
loopne
fildl
stos
or
cmp
sbbb
sbb
push
push
rcrl
out
cli
inc
sub
and
push
mov
scas
xchg
or
call
cltd
push
sahf
mov
test
out
mov
mov
outsb
pop
jmp
xor
dec
push
sbb
ja
jecxz
icebp
jecxz
imul
das
sbb
scas
out
insl
or
loopne
sar
in
mov
and
and
xchg
in
cld
popa
in
jns
inc
dec
cmpsl
std
mov
xchg
in
data16
stos
xchg
outsl
lods
jae
pop
mov
into
jnp
cmpsb
adc
add
es
orb
pop
jb
pop
adc
mov
inc
mov
mov
and
icebp
lcall
hlt
out
sub
adc
repz
mov
pop
pop
push
mov
je
and
sti
lods
push
cmp
push
add
scas
jmp
fwait
pop
ret
imul
outsb
loope
out
fdivrp
xor
les
addl
jmp
outsl
aam
pcmpeqd
xchg
cltd
and
push
imul
sbb
xchg
sub
push
xchg
and
in
pop
mov
xlat
and
inc
xor
xchg
or
mov
mov
pusha
jbe
push
nop
ds
add
push
and
cld
rcr
mov
push
and
repnz
push
test
xor
lods
mov
or
dec
pop
fwait
inc
jge
add
push
mov
in
into
pop
xor
jl
jbe
ror
into
jns
sbb
popf
mov
inc
fdivrs
into
and
imul
mov
shlb
repnz
mov
inc
pop
loop
and
inc
lods
or
sbb
cmp
dec
push
mov
and
add
lcall
sarl
sbb
inc
mov
jmp
cld
jmp
push
test
stos
mov
scas
mov
ret
ja
loop
dec
pop
shr
je
cmp
std
fdivrs
in
add
inc
into
jge
aam
push
jle
lret
push
jno
testl
lret
jno
imul
xor
int
andl
cmpsb
fisttpll
mov
cld
ja
test
movsb
and
ret
ljmp
fwait
add
mov
addl
jmp
addr16
clc
xor
adc
or
xchg
sbb
pop
cld
mov
mov
and
mov
xor
loope
addb
imul
test
in
push
or
in
fsubr
cltd
sarl
mov
mov
enter
sub
rcll
bnd
out
fildl
pop
sub
neg
daa
data16
int3
cmp
nop
push
lods
sub
data16
and
xor
pop
adc
testb
jae
movsb
scas
push
mov
jae
ret
mov
andl
adc
repnz
ja
adc
leave
pop
mov
sti
push
sub
enter
cmp
jg
addr16
xchg
and
xor
push
enter
repz
call
and
dec
lret
mov
adc
pop
add
inc
and
lahf
mov
pop
popa
sbb
nop
addl
repnz
je
cmp
jo
mov
push
dec
sahf
sbb
or
sub
fidivl
jmp
push
mov
std
jp
xsaveopt
cld
push
jae
es
insb
daa
adc
in
or
sub
ljmp
inc
dec
les
push
ret
sbb
ret
push
cmp
addr16
jmp
cmp
xchg
mov
and
cwtl
sahf
mov
xor
mov
icebp
inc
jecxz
ja
out
leave
mov
ret
sbb
lods
mov
iret
shll
cmp
ret
test
adc
push
or
dec
je
repnz
xchg
js
inc
xor
std
pop
cmpsb
ja
or
ja
sarl
pop
lcall
xchg
outsl
dec
dec
pop
mov
jo
mov
adc
pop
fisttpll
mov
test
cmp
imul
jmp
scas
fstpt
and
inc
xchg
std
imul
jle
xchg
loope
pop
and
xlat
fucom
sub
push
outsl
xor
adc
jg
movsb
xor
rclb
jne
lcall
add
div
std
testl
jg
aad
jne
push
lahf
mov
lods
out
sub
pop
cwtl
pop
xchg
mov
dec
hlt
mov
repz
mov
xor
arpl
fisubrs
sbb
adc
adc
and
movsl
cmp
std
in
push
int3
mov
shll
xchg
xor
lahf
or
insb
lods
mov
xchg
aad
stos
jb
cmpl
mov
push
mov
inc
adc
mov
pop
mov
pop
mov
jne
fst
idivl
xor
lret
inc
repnz
xorl
add
jno
mov
pop
mov
and
cs
push
cwtl
addl
or
adc
mov
movsb
mov
xchg
lds
mov
scas
je
xor
mov
call
and
popf
cmp
mov
mov
dec
ds
mov
sub
fcoml
jae
rorb
pop
sti
xor
jnp
fnstcw
mov
in
arpl
adc
sub
lods
lret
xchg
daa
adc
leave
imul
xchg
rcrb
mov
ficoml
add
adc
mov
mov
push
rcl
or
inc
ret
dec
fidivrl
xor
inc
push
lds
inc
mov
xchg
xor
mov
xchg
xchg
mov
mov
shlb
mov
inc
outsl
or
loop
push
insb
inc
aam
popf
out
mov
sub
arpl
stos
add
hlt
loope
repnz
push
pop
xor
mov
push
andl
mov
ljmp
pop
mov
jge
movsl
call
lret
pop
mov
faddl
push
jmp
cmpsb
mov
shl
lock
lds
add
lret
subl
push
jae
add
inc
gs
mov
aaa
in
and
mov
add
adcl
cmp
push
into
cwtl
test
xchg
and
repz
inc
insl
sbb
sub
ret
jl
ja
adc
jbe
push
mov
or
xchg
mov
sbb
into
xor
xchg
shlb
shl
add
sbb
cmp
es
js
data16
inc
push
into
call
iret
mov
aaa
jge
ljmp
xlat
xchg
popa
pushf
shll
cli
xchg
jne
into
js
call
xor
pop
xchg
jmp
push
or
fcom
lods
jge
je
lock
mov
jnp
test
push
and
cmp
pop
sbbl
sub
sbb
into
cld
call
adc
mov
cmp
pop
enter
sub
out
cmp
inc
mov
cld
int3
ss
mov
addr16
sub
or
mov
scas
call
jl
xor
dec
lahf
icebp
pushf
mov
jp
sbb
push
mov
mov
adc
pop
dec
scas
aad
aaa
jge
xor
insb
inc
fwait
adc
outsb
outsl
fdivrp
adc
enter
pop
mov
cmp
xchg
cmp
imulb
fsts
mov
loop
cmpsb
jl
push
je
aad
out
and
test
mov
sbb
mov
addr16
aaa
fisubs
repz
stos
jmp
stc
and
fimull
dec
lea
xchg
xor
test
adc
mov
in
sub
cmp
push
or
mov
pop
and
sub
cli
aas
xor
int
dec
pop
mov
pop
pop
push
xorb
and
fiaddl
div
mov
dec
vmread
mov
jnp
ljmp
push
dec
pop
and
sbb
es
jge
outsb
pop
lods
repz
cmp
movsb
popa
loop
sti
mov
fadds
imul
xchg
in
mov
sbb
or
cmc
js
or
mov
sarl
inc
dec
in
jns
mov
mov
push
xchg
dec
jne
lods
pop
aas
in
loopne
add
push
cli
mov
dec
mov
stos
adc
mov
fcmovnbe
adc
in
cmpsl
add
repz
mov
outsl
add
lods
lret
jle
in
xor
mov
push
outsl
das
xor
sub
mov
dec
cmp
inc
mov
push
xchg
push
cld
cmc
fsubs
mov
pop
mov
xchg
rcll
push
lret
ret
lret
mov
popf
push
add
jbe
test
lret
in
add
inc
les
test
adc
movsb
out
ss
movsl
adc
xor
arpl
fstpl
xchg
mov
or
adc
ja
dec
xchg
mov
push
sbb
int3
ss
mov
mov
inc
out
mov
aad
push
push
mov
mov
nop
pop
add
cltd
outsb
daa
cmp
jmp
adc
popa
dec
xor
xchg
jge
std
cltd
xchg
dec
xor
rcrl
inc
dec
icebp
add
in
rcl
xchg
lret
imul
andnps
dec
sbb
push
data16
aaa
imul
cmp
xor
sub
or
sub
cmp
shrb
and
dec
dec
dec
ja
in
push
pop
sbb
sbb
aaa
and
das
and
outsl
sbb
repnz
mov
or
andl
inc
dec
xchg
ja
xchg
das
in
jl
daa
mov
daa
scas
xchg
pop
xchg
scas
cmp
mov
cwtl
inc
mov
mov
and
jl
sbb
cmp
ffreep
stos
mov
xchg
jae
push
insl
mov
cmp
add
pusha
mov
sub
xchg
cmp
xlat
adc
mov
aas
and
incb
data16
arpl
pop
lock
ret
xor
mov
clc
aaa
inc
cltd
jbe
sbb
pop
je
js
clc
or
fimull
mov
adc
add
int3
pop
mov
or
fwait
mov
dec
adc
jb
add
sub
sbb
cmp
and
arpl
cli
fiadds
fists
xor
pushf
xchg
and
ret
test
add
cmp
into
xor
pop
dec
lcall
cmp
lds
xchg
mov
mov
in
inc
and
xor
fdivrp
sub
ret
add
mov
jmp
mov
mov
add
shrl
jmp
or
stos
enter
xchg
dec
sarb
sbbl
stos
scas
adc
cltd
mov
lret
leave
cmp
mov
movsb
fsubl
add
or
or
push
mov
lret
push
xchg
sbb
add
and
jnp
cld
in
mov
imul
aas
or
int3
push
mov
sub
addr16
and
mov
mov
xor
std
call
js
mov
dec
inc
jg
lret
pop
insl
movsb
xchg
pop
sbb
cmpsb
xchg
test
mov
movsb
lahf
jp
sbb
dec
adc
inc
ljmp
test
sub
dec
in
movsl
cwtl
xor
mov
xchg
inc
inc
stos
jmp
fs
mov
mov
sbb
in
mov
out
sarl
cmp
insb
ja
ret
test
sahf
push
int3
add
inc
add
fsubrl
xlat
dec
jle
mov
lret
je
dec
movsl
xchg
inc
lds
mov
xchg
stos
xor
ret
push
push
outsb
pop
and
btr
in
jb
or
adc
xlat
arpl
outsb
push
or
pop
in
movsl
shlb
sbb
icebp
lret
adc
or
repz
loope
jo
jns
push
or
cmp
push
and
push
icebp
mov
pop
mov
imul
int
pop
mov
add
xchg
sub
xchg
sbb
add
pop
push
xor
jle
jmp
mov
jle
sub
sub
out
and
push
xlat
or
mov
lock
pusha
stos
mov
or
arpl
or
xor
fisttpll
nop
mov
xchg
mov
les
aam
sbb
jle
cwtl
cmpsl
cmp
loopne
ret
ficompl
mov
push
add
adc
inc
call
sub
mov
inc
pop
sbb
push
inc
loop
fwait
lret
pop
xchg
imul
in
push
dec
jle
fs
push
mov
and
jno
icebp
sub
jno
iret
xchg
cmp
jmp
sti
jnp
scas
push
lret
ficomps
and
push
xor
fnstcw
sub
and
push
mov
push
xchg
ret
jne
pop
and
mov
loop
and
fwait
ja
adc
cmp
sub
popf
jbe
dec
adc
and
mov
mov
add
inc
push
fsubrs
mov
xchg
cmpb
mov
jo
mov
arpl
xlat
lea
inc
jo
or
jnp
dec
push
pusha
fucomp
jmp
xchg
cltd
and
mov
mov
loopne
mov
stos
or
cmpl
cmp
jp
push
mov
cmp
xchg
mov
push
enter
push
pop
pop
sbb
mov
popa
sbb
test
mov
mov
sahf
mov
out
cmp
daa
stos
xchg
lods
mov
dec
xor
push
add
fsubrs
mov
loopne
leave
inc
and
or
dec
inc
popf
lods
clc
in
inc
push
loope
cli
fsub
mov
leave
sbb
es
sub
ret
add
clc
gs
mov
inc
cmp
fmuls
repz
test
popl
xor
mov
jmp
sbb
pop
inc
pop
mov
popl
jns
mov
or
out
mov
xchg
inc
leave
daa
loop
aad
ret
stos
and
adc
popf
push
pop
and
jo
out
push
sahf
pop
jae
pushf
xchg
push
out
lret
sbb
test
jecxz
jg
adc
or
xchg
adc
inc
mov
loop
pop
inc
xchg
push
pop
nop
dec
pop
pop
shrl
mov
push
push
das
pop
mov
xor
fcoms
jg
mov
in
and
sbb
add
push
outsl
or
ja
call
mov
jno
xor
mov
out
ds
cmp
push
add
push
xchg
xor
sti
bound
test
xlat
cmp
ljmp
xor
lahf
cld
enter
into
lea
mov
add
jbe
mov
xchg
test
pop
fistpll
dec
fidivrl
loop
fcoms
and
sbb
popa
std
dec
and
add
int
inc
iret
xchg
add
push
inc
js
xchg
inc
mov
sti
mov
popf
pushf
sbb
movsb
data16
mov
cmp
shrl
push
mov
gs
sbbb
fsubp
repz
sub
hlt
adc
repz
or
and
nop
mov
das
and
adc
mov
out
push
adc
fs
adcl
jge
cmp
mov
dec
mov
mov
in
insb
adc
inc
fsubs
add
sbb
inc
inc
gs
xchg
das
cmp
push
movsb
jae
xchg
mov
fsubrl
or
dec
dec
mov
mov
outsb
dec
push
sbb
jae
aam
frstpm(287
mov
dec
popa
adc
test
pusha
mov
into
adc
int
std
lahf
xor
fstps
subb
pop
out
cmp
cmp
js
stos
mov
add
mov
fildl
fs
mov
ja
add
xor
fsubl
xchg
rcr
in
es
lret
popl
push
xor
mov
add
scas
dec
sbb
addr16
sub
roll
movb
dec
lods
cmpsl
cmp
xor
clc
xchg
movb
fprem1
push
jecxz
scas
xor
inc
shll
aam
or
inc
adc
sub
std
push
adc
hlt
les
lock
cmc
push
dec
xlat
cwtl
in
mov
inc
xor
mull
adc
mov
sbb
sbb
pushf
ret
lcall
push
dec
lahf
lcall
xor
lock
sti
test
leave
dec
cld
gs
xchg
mov
ret
sarl
mov
and
inc
mov
mov
sti
andb
mov
test
popf
pop
pop
repz
mov
mov
dec
mov
fbld
insb
dec
test
orb
repz
mov
lds
loopne
push
dec
aaa
ret
xchg
sub
xchg
dec
or
arpl
scas
xchg
jno
aad
sar
jb
out
int
jno
aas
xlat
cmp
aas
cli
stc
push
scas
icebp
lcall
fnstcw
sub
pop
mov
jg
mov
pop
or
adc
add
sub
cmc
sub
inc
shr
mov
out
jb
rorl
push
pop
sub
lea
mov
dec
cmpsb
xchg
or
lcall
ds
or
ds
sub
loop
test
mov
leave
push
add
rcr
mov
cmp
rcl
icebp
testb
xlat
aas
mov
push
mov
add
and
pop
push
sub
lea
call
mov
aam
aam
add
imul
imulb
dec
fisttps
adc
ds
shrb
test
mov
sbb
fs
mov
ss
nop
or
bound
adc
jg
mov
decb
and
and
repnz
shrl
icebp
dec
xchg
clc
fadds
lods
pop
and
ss
sahf
sbb
cmpl
push
loopne
lds
cmc
jg
mov
push
push
fsts
in
dec
push
jnp
movsl
sar
mov
xchg
and
pop
seto
xchg
scas
mov
xor
push
rolb
popf
push
xchg
mov
sahf
shll
jle
pusha
jno
lret
mov
pop
pop
dec
aam
sbb
dec
inc
xchg
lea
aaa
rcrl
add
mov
adc
lret
mov
jns
sbb
incb
jo
mov
jno
int3
out
or
push
pop
lcall
notb
scas
sub
out
pop
inc
pop
xor
jne
dec
daa
aaa
movsb
mov
cwtl
jge
dec
imul
ljmp
outsb
das
jecxz
mov
ss
mov
jno
jg
mov
hlt
mov
shlb
cmp
sub
loope
das
and
js
xor
int3
inc
testb
repnz
or
mov
movsb
or
test
lcall
inc
adc
mov
shll
push
fwait
je
dec
mov
mov
insl
mov
jp
mov
lods
jg
sti
mov
and
pop
lahf
xchg
fimull
jbe
mov
inc
inc
or
notb
sbb
jbe
sbb
ret
pop
aaa
xchg
stos
jbe
jmp
dec
mov
sbb
dec
test
das
fstpt
pop
xchg
fsubrl
into
imul
sbbb
mov
add
inc
jbe
xchg
mov
jnp
cmc
dec
mov
xor
sub
mov
test
xor
cmpsb
lret
addr16
lea
jp
xor
add
into
leave
cmpsb
ret
dec
mov
sbb
fstps
jmp
sbb
imull
stos
jns
stos
lret
add
shll
inc
adc
mov
push
push
mov
ss
enter
xchg
or
mov
pop
js
lods
stc
cld
jno
cmp
jno
sub
adc
shll
cmp
fwait
loop
push
je
push
fs
cld
jae
xchg
jo
ja
hlt
pop
mov
aam
sub
mov
xchg
data16
jge
mov
push
fs
mov
sahf
push
cltd
lods
dec
mov
stc
es
mov
or
imul
sub
je
in
xlat
sub
pop
insl
into
notl
icebp
push
cmp
mov
dec
push
xchg
adc
mov
adc
add
lods
mov
les
xchg
pop
test
clc
roll
cmp
pop
mov
mov
lods
fnstcw
pop
and
add
jge
cmp
repz
xchg
jb
xchg
int3
inc
test
addr16
push
stos
push
js
cmc
es
pop
xor
sub
into
ljmp
sarb
xchg
xchg
xor
sti
int3
fisubs
fnsave
cmc
push
xchg
push
push
jp
mov
mov
or
dec
mov
out
push
mov
mov
mov
inc
adc
sub
ja
nop
xor
or
inc
add
inc
aas
scas
mov
iret
inc
test
aad
and
iret
jecxz
addr16
pop
adc
jmp
pushf
pop
mov
addr16
rcrb
pop
rolb
sahf
inc
rorb
add
fistpll
sbb
out
mull
inc
ljmp
xchg
dec
xor
xor
dec
loopne
lret
jnp
lock
lret
outsl
into
cwtl
pushf
xchg
inc
xor
jae
sub
mov
adc
arpl
push
loop
fadds
adc
notb
int
divl
out
push
mov
sti
loop
mov
andl
rcl
mov
shr
or
lcall
push
cmpsl
dec
lahf
popf
fwait
outsl
cmp
icebp
adc
loop
sbb
inc
cmp
fsub
std
aad
mov
push
shlb
inc
daa
ds
fwait
cwtl
cmpl
fiaddl
outsb
add
pop
mov
out
mov
ds
shll
jp
ss
xor
ret
or
xchg
inc
adc
fildl
mov
sub
add
test
add
outsb
xchg
mov
outsl
aaa
loope
scas
iret
jecxz
or
sub
push
sub
stc
in
fstps
mov
pop
jmp
cltd
fwait
add
add
sbb
pop
dec
mov
inc
mov
in
dec
sub
in
lcall
div
sbb
std
aam
mov
aam
imul
add
inc
ja
ret
imul
pop
ja
sahf
pop
mov
adc
lock
insl
sbb
xorb
mov
jbe
std
in
cmpsb
cwtl
rcr
cmpsl
mov
mov
jmp
cltd
pop
ss
mov
xor
jnp
push
adc
xchg
ja
and
sub
cmp
pop
mov
mov
lret
pushf
mov
inc
mov
sahf
fdivp
cmp
mov
imul
and
cmpsl
rolb
push
jb
sbb
ds
stos
adc
fsts
sahf
inc
sbb
movl
adc
xor
aad
add
movsb
inc
inc
shll
das
push
fistl
das
push
inc
xchg
mov
inc
add
push
data16
pop
mov
add
daa
cltd
mov
push
inc
mov
dec
jl
es
sub
mov
shl
jne
mov
and
dec
mov
adc
sahf
dec
dec
mov
inc
lcall
insl
mov
jnp,pt
popa
movsl
xchg
add
pop
outsl
sub
mov
outsl
jmp
jmp
jle
xor
fidivs
xchg
btc
xchg
pop
pop
popa
mov
addr16
mov
stos
lds
stc
xor
repnz
dec
inc
ficoms
loopne
cwtl
int3
in
cltd
sbb
jmp
adc
add
movsb
lods
pop
xchg
jb
jb
lahf
sub
lock
outsb
push
sbb
ret
loope
ja
fisttps
lods
rolb
or
fwait
popf
ja
jecxz
aaa
out
lcall
xor
jns
add
repnz
popf
mov
repnz
ljmp
lods
lret
outsl
pop
arpl
sbb
mov
rcll
aad
pop
popf
jnp
out
negl
dec
pop
dec
push
add
jle
dec
dec
sar
fdiv
xor
add
mov
push
jnp
jb
ret
cmpsb
xchg
sbb
out
dec
add
pop
jg
sahf
sbb
push
std
push
inc
call
stos
testb
ds
mov
je
mov
or
xchg
popf
xchg
push
cmp
stos
push
pop
pop
inc
adc
xor
fwait
sbb
insb
pop
jp
ret
jo
cld
dec
mov
xchg
xor
ret
loope
mov
mov
or
adc
mov
cmp
or
fildl
inc
clc
sbb
adc
lods
mov
push
cmp
mov
and
mov
lock
xor
pop
jmp
in
test
push
sbb
aam
shrb
in
jge
fcompl
stos
out
and
rorb
mov
movsb
or
loopne
xor
or
ja
rcrl
sbb
dec
mov
mov
mov
and
jne
dec
daa
xchg
mov
sbbb
adc
xchg
pop
push
fsubr
test
fistpll
cmpsb
dec
clc
cmp
push
fbstp
mov
mov
mov
imul
mov
mov
mov
mov
dec
jp
mov
movsb
push
jmp
xor
int
outsb
xor
loop
nop
jg
dec
xor
lock
nopl
or
stos
jns
lcall
mov
addb
xchg
int
aam
aas
insl
cmp
or
add
inc
clc
int3
rorl
inc
adc
imul
xlat
mov
sub
pop
and
aaa
cmpl
call
scas
mov
repnz
adc
add
xchg
in
and
adcb
sbb
push
in
sub
jg
lret
sub
sub
or
pusha
cmc
sbb
das
adc
adc
xor
fldcw
xchg
lahf
add
mov
test
push
insb
adc
scas
cmp
mov
hlt
int
andl
pop
out
fildll
push
loopne
stos
dec
cmc
sub
fs
arpl
jo
mov
sub
jmp
xchg
mov
sahf
out
stos
mov
push
fs
mov
pop
popf
pop
outsl
dec
out
repnz
in
in
repnz
or
dec
cld
and
lods
push
dec
mov
jnp
xchg
and
cmpb
dec
cmpsl
mov
imul
popa
jl
mov
icebp
scas
lods
repnz
ds
sbb
jmp
ss
jl
cld
outsb
or
push
pop
stos
sbb
push
sbb
fisubl
inc
jmp
std
mov
mov
sbb
adc
cmp
cmpsl
aaa
scas
imul
cli
hlt
lods
test
push
mov
addr16
fisttpll
push
rorl
imul
pushf
add
and
cmpsb
inc
std
ds
cld
mov
sbb
sub
lods
in
cmp
mov
add
add
pop
jl
stos
lret
mov
jmp
mov
xchg
mov
mov
mov
loop
xlat
mov
call
or
xchg
inc
aam
adc
ret
out
ret
mov
jmp
add
outsl
icebp
outsb
mov
scas
xchg
out
mov
pop
lahf
push
movb
lds
out
sub
push
or
shll
sbb
or
gs
jnp
stos
es
ficoml
gs
aam
cmp
mov
les
and
dec
test
stos
inc
pop
jle
in
cmpsb
sbb
andl
lea
xchg
lock
les
rcr
sbb
into
sub
stos
push
repz
pop
jb
add
cmp
xor
push
ret
out
outsb
minps
mov
mov
fisttpl
cwtl
push
addl
jle
inc
adc
and
movsb
mov
js
mov
or
ds
repnz
insl
sub
and
int
sub
dec
sbb
jnp
cmp
sbb
rcr
fs
shr
xor
pop
in
xor
jbe
cmp
push
lret
inc
cli
shrl
ret
push
sbb
sbbb
inc
stos
ret
int
inc
es
or
mov
pop
movsb
push
popf
xchg
push
dec
xchg
push
xchg
pop
lock
test
and
sub
xchg
js
imul
aam
mov
jnp
or
cmp
xor
and
test
xchg
test
cmp
or
sbb
loop
call
jns
mov
mov
and
loope
popf
stos
ds
ret
xadd
sub
scas
popa
decl
fucomip
adc
sbb
pop
negl
dec
pop
icebp
adc
imul
lods
mov
xchg
stos
mov
push
dec
pusha
stos
scas
iret
sub
clc
adc
inc
mov
sti
inc
cmpsl
in
andl
xor
inc
lock
push
jle
addb
sbb
pop
xchg
mov
push
popf
outsl
rorl
or
pop
andb
xchg
mov
push
daa
sbbl
cltd
add
imul
lods
orl
call
add
xchg
cmpsl
dec
ja
xor
xchg
mov
or
jae
fidivl
or
lods
loop
jg
mov
xor
clc
push
sub
sti
cmp
mov
mov
ret
aam
pushf
cmp
cmpsl
into
pusha
cs
push
nop
loopne
addb
out
fimuls
add
mov
popf
jb
xchg
xchg
add
test
jmp
xchg
mov
mov
rcrl
aam
je
mov
mov
xchg
pop
ja
and
pop
movsl
xchg
test
inc
ja
ss
or
pop
push
aas
scas
push
mov
mov
cs
or
rol
cmp
inc
inc
xchg
xor
push
fs
and
cmpsl
sub
cmc
mov
fcomi
fidivrs
ret
and
movsb
add
cmpsl
pushf
and
xchg
sub
je
lods
add
ja
jnp
repnz
fmul
xlat
mov
js
mov
push
data16
cld
adc
xor
je
xor
sti
mov
push
add
ja
ss
xor
inc
push
into
lods
cmpl
fsubs
outsl
mov
ds
dec
js
cvttps2dq
pop
sub
mov
addr16
popf
push
sub
ds
mov
sub
in
push
icebp
ja
or
fists
mov
xchg
or
mov
stc
clc
and
stos
mov
sbb
gs
subb
roll
mov
and
lea
test
lods
push
xor
cmc
push
mov
sub
mov
fldl
xor
mov
ret
arpl
or
sti
push
je
or
rcll
ficoms
mov
mov
fimull
fsubl
cmp
add
jg
push
mov
out
add
and
dec
xchg
sti
sbb
mov
rcl
out
out
push
adc
icebp
lods
mov
push
mov
xchg
inc
adcb
hlt
xor
stos
out
les
addr16
mov
test
jns
mov
jp
repnz
xor
push
jge
inc
ja
sti
adc
mov
xchg
add
dec
or
nop
lods
inc
loopne
loopne
mov
push
imul
hlt
enter
sti
xchg
lret
xchg
sti
ret
sbb
xchg
dec
pop
lock
push
jmp
dec
mov
divb
or
lods
dec
enter
int3
fwait
cmpsl
adcl
push
sub
mov
insb
jnp
mov
cmpsb
push
sbb
pop
ds
jnp
test
adc
into
sbb
xchg
xchg
pop
ds
insl
cmpsb
loope
inc
std
pop
and
stc
cld
test
xor
lds
popa
stos
je
scas
mov
stc
mov
sub
mov
sbb
outsl
leave
jns
loopne
sarb
loop
idivl
cmp
cld
into
imul
lret
xchg
push
inc
call
mov
addr16
or
cmc
pop
iret
int
shrb
imul
dec
fmuls
jns
push
fs
push
and
jmp
xor
repnz
leave
in
mov
in
lods
pop
xchg
fists
jge
sbb
sbb
pop
push
add
and
jmp
and
pushf
mov
lret
mov
iret
push
aas
scas
int3
xor
in
sub
xor
nop
orb
sbb
insb
sbb
loop
pop
or
mov
scas
inc
in
add
xlat
mov
push
inc
lahf
aad
lahf
div
lea
jmp
sbbl
das
lods
sub
lds
xor
cmp
lea
mov
or
sbb
out
mov
mov
inc
cmp
test
adc
out
dec
jae
into
int3
sub
or
adcl
lds
dec
xor
fsubs
inc
test
cwtl
fwait
iret
ret
mov
cmpsb
aam
notl
push
cmp
fimuls
inc
lods
sub
cmp
and
cwtl
mov
jmp
mov
xchg
ja
pop
xchg
icebp
adc
pop
dec
arpl
mov
adc
sbb
or
loope
pop
inc
dec
adc
mov
popa
jecxz
inc
lret
mov
inc
imul
icebp
jle
cmp
cmp
aad
call
mov
stos
fnstsw
fwait
test
fstpt
xlat
jnp
mov
mov
fwait
jp
or
xchg
shlb
xchg
dec
mov
sbb
test
movsl
loopne
add
fidivrs
and
aad
mov
pop
iret
dec
movsl
shl
mov
cmp
aad
test
push
mov
xchg
fistl
push
and
hlt
imul
movsl
pop
jecxz
icebp
dec
std
ja
push
or
cli
stos
mov
jo
insl
xor
push
ja
jae
push
pop
mov
nop
into
cmpsl
mov
lcall
fstpl
scas
jge
cmc
add
push
mov
aaa
jmp
adc
mov
mov
mov
add
lods
sbb
xorl
sahf
jle
scas
inc
pop
sub
cwtl
xor
ret
sbb
or
sub
jl
pusha
mul
test
testl
cltd
loopne
inc
mov
sbb
cmpsl
dec
jno
xlat
and
sti
adc
jle
js
negl
pop
ret
jbe
cmpsl
mov
into
imul
pop
xchg
scas
mov
xor
jb
insb
mov
addr16
inc
je
testl
or
fwait
jmp
rclb
cmp
add
es
mov
icebp
xchg
adc
push
mov
or
xor
es
sbb
xchg
insb
out
mov
fs
sub
stos
inc
xchg
sahf
in
enter
ret
in
jg
in
xlat
inc
arpl
das
sti
in
sub
cmpsb
ret
aam
mov
pop
xorb
xor
push
push
xor
mov
xchg
xchg
addb
rorb
stos
inc
xchg
cmpsl
mov
dec
or
and
addr16
mov
adc
sahf
sub
jns
testb
repnz
mov
addr16
pop
lock
and
cmp
dec
and
sbbb
aas
imul
xchg
aas
pop
add
adc
test
arpl
mov
rorb
cmpsl
int
sbb
push
js
cmp
cmp
out
add
and
das
sbb
lcall
inc
aaa
push
fcom
fwait
loopew
mov
jl
jnp
iret
pop
adc
xchg
fsubs
cmp
sub
sbb
cmp
out
xchg
dec
call
pop
adc
pop
adc
pop
loope
pusha
rorb
aas
lock
movsb
clc
int3
inc
leave
dec
outsl
mov
out
mov
add
sti
scas
lcall
lea
icebp
sbb
jp
xor
rcll
adc
mov
sarb
jbe
sbb
lcall
mov
jmp
mov
cwtl
ret
in
out
cmpl
out
in
outsb
or
mov
adc
imul
sbb
icebp
lahf
outsb
ljmpw
pop
pop
dec
sar
insl
mov
push
in
mov
ljmp
cmpsl
sbb
mov
daa
int3
setl
jl
push
lock
dec
push
jae
nop
enter
lret
and
add
xchg
jns
in
cltd
mov
jb
add
mov
cli
movb
jnp
mov
add
out
jg
sahf
mov
xor
aam
and
fwait
push
or
jecxz
imul
fs
fimull
mov
bnd
dec
pushf
outsl
mov
cwtl
outsl
aam
xchg
push
xor
dec
jae
adc
repz
ds
or
aas
cmpsb
mov
sub
jno
jno
pop
mov
and
inc
aaa
xor
pop
xchg
mov
mov
pop
cmpsb
adc
fsubrs
adc
std
dec
das
leave
and
and
push
or
test
in
inc
xor
mov
cwtl
notl
xchg
mov
or
mov
inc
and
out
jne
pop
sti
mov
dec
hlt
insb
std
ds
aad
dec
mov
push
xorl
pop
jecxz
pop
clc
lods
adc
dec
es
cli
add
or
and
stc
mov
adc
out
xchg
clc
adc
fisubs
es
ja
cwtl
xchg
dec
inc
enter
into
pop
dec
in
aaa
pushf
insb
push
xor
lea
mov
mov
sbb
xor
xor
sbb
cmp
adc
hlt
mov
loopne,pt
inc
lcall
adc
mov
or
mov
aaa
pop
popa
leave
cmp
or
shll
cmp
sub
and
stc
jb
arpl
dec
clc
xor
xor
xchg
mov
xchg
jmp
shl
clc
xchg
je
js
fs
lret
mov
adc
mov
aam
jecxz
ret
mov
mov
sahf
popf
mov
shl
push
mov
xor
div
rorl
mov
xor
test
ret
faddl
lds
outsb
jg
push
jg
das
sti
push
mov
inc
scas
leave
add
mov
mov
les
cs
xchg
sbb
cmpsb
cmp
inc
xchg
add
cmp
inc
test
rol
inc
mov
nop
jb
mov
cmpsb
lock
mov
adc
push
push
add
popf
add
push
jle
in
jp
repnz
in
data16
insb
add
cmpsl
movsl
add
pmaddwd
test
in
pop
pop
imulb
test
dec
xchg
mov
xor
push
add
xchg
aas
cmp
out
xor
in
pop
pop
jle
pusha
jge
dec
push
mov
ret
shrl
pusha
add
repz
and
mov
xchg
nop
call
std
cmp
cs
popf
inc
scas
sub
xchg
fnstenv
dec
aam
out
sahf
and
jbe
sbb
add
xchg
mov
ret
push
test
movsb
mov
xchg
scas
in
mov
inc
rcll
or
call
inc
sti
fiaddl
pop
movsl
xor
jecxz
sarb
inc
jbe
sub
push
mov
xchg
adc
inc
jnp
sbb
sbb
fists
sahf
loopne
adc
or
xor
flds
movsb
loop
cmc
jno
sti
mov
lods
das
es
cs
notl
repnz
fstl
dec
xor
dec
int3
xor
in
ret
push
push
and
push
pop
js
popf
and
push
cmp
repz
insl
dec
or
adc
cmp
fsubr
addr16
gs
mov
mov
int3
jmp
and
dec
pop
or
dec
shr
insb
add
push
xchg
jmp
hlt
cmp
mov
mov
fsts
dec
leave
adc
mov
aad
sub
sbb
popa
pop
xchg
jl
jns
jno
mov
xor
data16
sbb
imul
xor
and
insb
int
adc
insl
xor
gs
add
xchg
addr16
push
adc
and
inc
loop
inc
mov
xchg
lahf
add
mov
insb
inc
push
push
xchg
push
sub
pop
out
dec
dec
push
push
lds
push
sbb
fimull
aam
fs
dec
jae
push
bound
and
or
mov
add
cmp
popf
adc
ret
inc
fisttps
push
int
mov
lret
cmc
gs
addr16
movsl
push
leave
bnd
push
pusha
mov
add
push
fwait
or
ret
imul
jnp
mov
mov
inc
sbb
sbb
xor
cmp
mov
and
rolb
mov
inc
and
loope
xchg
lods
xchg
and
rcr
lock
or
pop
mov
push
xchg
lods
dec
cmpsl
dec
loope
test
jo
add
mov
and
add
mov
jecxz
invd
pop
scas
mov
adc
inc
mov
shlb
sarb
lret
lods
push
pop
adc
and
aas
scas
xchg
jg
insl
jne
mov
xor
mov
inc
loope
mov
xchg
mov
pop
int3
cld
mov
pop
inc
cmpl
jns
in
popa
movsl
xchg
dec
cmp
dec
mov
and
ss
or
xor
xchg
pop
and
stos
adc
fwait
lock
sub
mov
decb
pop
jl
sub
ljmp
mov
and
and
incb
fadds
jb
pop
xor
insl
mov
cmp
or
jp
mov
mov
inc
xor
clc
in
pop
cli
out
and
pop
popf
mov
lods
sub
cmc
sub
mov
cmp
sbb
adcl
sarl
andb
imul
fcomp
fistpll
and
mov
or
mov
insb
mov
adc
xor
imul
scas
push
sbb
clc
idivl
jo
cmpsl
inc
sbb
mov
fdivl
sahf
push
ss
adc
out
adc
fistps
cmpsl
mov
push
or
jb
insl
and
ds
adc
jmp
cs
subl
ss
fildll
pop
shlb
fiadds
popa
popf
nop
stos
sub
jle
sbb
stc
jae
or
out
inc
sbb
cmc
pushf
add
je
popf
mov
or
adc
xchg
cmp
lock
pusha
cmp
dec
ffree
adc
or
and
rcll
cwtl
outsl
ja
lock
sbb
dec
mov
cmpsl
jbe
xor
cltd
pop
xor
dec
aaa
xchg
sbb
jle
mov
mov
fcom
shrl
imulb
mov
sub
stos
adc
jecxz
neg
out
shrb
icebp
jl
push
and
add
enter
iret
int3
movsl
shll
ret
add
nop
in
and
push
mov
leave
out
inc
or
mov
out
jo
xchg
dec
lds
daa
cmp
cmp
mov
lea
add
arpl
add
jg
jns
sbb
je
jge
mov
fcoml
xor
pop
xchg
dec
repz
pusha
cmpl
sti
int
or
mov
sbb
movsb
sub
cwtl
lret
mov
mov
cld
and
xor
fiadds
xchg
lret
add
xlat
fdivrl
sub
jle
popa
sub
mov
data16
mov
js
add
stos
pop
loope
pop
clc
dec
push
jae
dec
add
aam
push
jge
push
fwait
dec
fnstsw
mov
add
pushf
jo
jp
test
ret
mov
mov
test
lds
cmp
dec
ficompl
dec
xor
cli
je
xchg
outsl
mov
leave
rorb
xchg
addb
sbb
mov
adc
pop
sbb
aad
outsl
jg,pn
pop
testb
and
ret
lret
ja
pop
hlt
jmp
inc
into
xor
fdivrl
stos
push
xor
sti
out
fs
dec
mov
and
cld
lahf
imul
lea
loop
loopne
call
jne
and
xchg
pop
pop
dec
faddp
aaa
adc
fs
dec
adc
gs
inc
jae,pn
ret
add
cs
inc
dec
pop
into
out
fcoml
adc
and
loop
pop
cmp
add
sar
xchg
stos
scas
mov
adc
add
jo
out
aaa
mov
mov
adc
pop
mov
rolb
nop
jae
sub
clc
sbb
les
xor
gs
push
xor
xchg
je
mov
cli
lock
xlat
xchg
std
lods
mov
push
fimuls
cmpsb
add
aas
sbb
f2xm1
inc
xlat
push
jg
cmp
ret
test
xchg
xor
aaa
xchg
movsb
push
push
aad
cmp
aad
cmpsl
jecxz
mov
pop
sbb
jo
adc
adc
bound
push
enter
aam
push
rorl
nop
push
arpl
xchg
dec
jnp
adc
iret
jns
cld
cmp
and
adc
adc
sub
cs
cmpsb
xchg
mov
leave
iret
dec
fdivl
push
sahf
popa
mov
push
push
fwait
mov
mov
adc
push
repnz
cmp
jb
lds
lcall
xor
mov
mov
in
or
imul
insl
test
pop
orl
je
cmp
nop
lret
add
imul
ljmp
push
dec
xchg
movl
inc
xchg
ret
loope
sbb
ficoms
stc
inc
ret
int
lret
divl
int3
mov
pushf
adcb
je
adc
repz
adc
add
xlat
cmpsl
xchg
jge
out
xchg
test
dec
add
out
xchg
jecxz
pusha
xchg
mov
sbb
cmp
xor
lcall
int
adcl
dec
adc
pusha
xor
or
mov
lahf
pop
aaa
popa
stos
cmpsb
dec
push
cmp
jmp
stos
loop
fs
dec
sbb
jg
push
add
out
add
mul
pop
out
add
cs
sahf
inc
push
xor
push
sahf
inc
mov
fstpt
jno
aaa
movsb
inc
inc
fs
popf
push
sub
clc
xchg
test
push
pop
cld
in
mov
nop
movsl
mov
jg
mov
hlt
mov
sbb
or
cmp
test
aas
mov
imul
scas
fsts
nop
imul
pushf
xor
int
out
add
into
or
push
push
pop
mov
push
mov
gs
xor
shlb
test
mov
xor
jno
adc
jb
add
jle
rcrb
or
jmp
imul
in
pusha
loop
movsl
jbe
cmpsl
mov
and
test
cmp
fldt
mov
pop
int3
daa
sbb
shl
cmp
sbb
je
mov
js
sbb
mov
or
add
adc
js
mov
ret
out
lret
sbb
dec
inc
and
pop
sti
jns
mov
inc
dec
dec
push
dec
cmp
push
jae
popa
stos
pop
inc
xchg
cmp
insb
movsl
sbb
fstpt
adc
sbb
sub
hlt
pop
mov
xchg
xchg
fidivrs
popa
inc
ret
bound
cltd
mov
in
mov
inc
ret
xchg
pop
fadds
and
jae
insb
sub
sub
xchg
daa
clc
es
imul
mov
out
test
cmc
ja
arpl
hlt
mov
jno
js
inc
adc
xor
fdivrs
mov
aas
sub
mov
stc
dec
and
mov
cld
jmp
mov
dec
mov
clc
mov
pop
fcmovnu
sub
sub
xchg
cmp
data16
fdivr
mov
je
outsl
pop
rsm
push
lret
jns
test
dec
loop
mov
cmc
sbb
out
mov
daa
leave
sub
pop
lock
sub
and
out
scas
repz
lret
pop
mov
cwtl
inc
mov
mov
mov
fldcw
inc
sbb
je
mov
enter
push
mov
jge
xor
adc
stc
xchg
xchg
mov
in
mov
paddw
lcall
and
mov
insl
cmp
adc
mov
push
and
push
pop
fwait
scas
pop
xorl
sahf
aam
ret
pop
push
les
ds
outsl
pop
scas
mov
cmp
mov
cmp
dec
add
mov
insl
insb
lret
decb
jl
addr16
sbb
pop
xchg
push
hlt
fisubrs
inc
popaw
js
xchg
fistpl
jno
xchg
mov
inc
xchg
inc
pop
sbb
enter
adc
xor
cmp
mov
xchg
dec
pop
jl
sub
std
and
imul
mov
mov
mov
mov
sbb
xor
sahf
sti
add
scas
out
fimuls
jecxz
and
xchg
sub
hlt
stc
subb
push
loop
ja
aas
xchg
rol
or
outsl
cld
stos
and
jge
out
and
sub
aaa
push
fwait
jnp
xchg
lahf
xchg
sti
push
lret
push
pop
cs
lods
pop
adc
jbe
sbb
gs
aad
and
xchg
pushf
lahf
add
test
cmp
inc
rcrl
dec
dec
xchg
or
mov
sahf
roll
jl
pop
push
call
cmpsb
out
arpl
mov
sbb
adc
and
mov
ss
notl
pop
sbb
jbe
xchg
into
xor
fcomp
fwait
adc
pop
in
cltd
orl
in
jle
xor
or
test
xor
adc
aam
push
mov
aam
cwtl
mov
mov
inc
push
aam
movsl
inc
mov
push
sbb
leave
mov
imulb
mov
add
add
pop
adc
jge
xchg
pop
sbb
jns
adc
push
sti
inc
inc
jno
out
fbstp
insb
out
xchg
lret
jno
ja
inc
jns
movsb
inc
stc
shlb
mov
sub
je
push
fwait
xchg
aaa
repz
dec
mov
aam
xor
pop
adcb
ljmp
adc
push
push
mov
lds
inc
push
mov
mov
jbe
xor
repnz
push
and
pop
mov
rclb
fstps
adc
mov
movsb
frstor
popf
cwtl
test
pop
cs
fistps
pop
push
jb
ljmp
cmpsb
push
dec
sqrtps
mov
jne
inc
push
dec
push
and
cmp
sbb
stos
sahf
mov
test
ret
mov
xor
lock
add
fwait
and
mov
dec
popa
and
sti
aam
mov
xchg
roll
mov
adc
mov
subb
mov
test
sbb
scas
and
into
dec
pop
inc
or
icebp
outsb
fwait
in
dec
nop
xchg
xchg
sbb
mov
mov
std
sub
xor
mov
xchg
cmp
and
sub
je
mov
jo
pop
cltd
add
test
loope
out
out
cmp
mov
movsb
pusha
sub
cmpsl
cmp
xchg
pop
lods
out
xor
fcomi
jl
mov
xchg
cmp
jge
lcall
sub
cmpsl
lahf
out
jmp
les
mov
test
xchg
or
mov
adc
sarb
ret
xor
leave
mov
loopne
cmc
imul
lods
out
dec
mov
xor
aad
sbb
jle
and
std
addr16
jge
shll
rolb
cmp
or
pop
fsub
jnp
xlat
imul
push
xchg
dec
mov
sub
or
pop
mov
mov
mov
inc
push
or
aad
out
push
jne
jmp
mov
lds
mov
jge
ficompl
and
cmova
sub
in
sbb
push
jbe
sbb
or
xor
sti
pop
and
dec
sbbb
xor
xor
cwtl
sub
in
arpl
mov
insl
les
icebp
ror
mov
dec
insl
mov
xchg
push
mulb
inc
lret
push
xchg
mov
xor
sbb
xor
lret
xchg
rorb
mov
add
inc
inc
popa
push
dec
ret
ret
pop
out
push
sahf
test
rcr
lret
and
inc
cltd
stos
sbb
mov
push
cmc
je
pushf
mov
mulb
xchg
push
jnp
mov
jne
call
movsb
or
or
add
xchg
inc
push
cs
in
lods
xchg
adc
je
aam
dec
test
inc
dec
and
popa
adc
sub
sahf
nop
loope
in
jge
mov
cmp
cmp
xchg
andb
xchg
mov
jge
outsb
pusha
cmp
sbb
adc
pop
subl
rcr
inc
mov
push
jno
cmp
and
add
loopne
insb
inc
inc
jp
pop
xchg
test
scas
loopne
in
mov
sbb
out
cld
jmp
scas
repz
scas
out
adc
mov
add
and
and
fnstsw
into
and
cmpsb
cmp
cmp
lds
pop
pop
fdivrl
fsubrl
xchg
sbb
rcrl
loop
add
test
fwait
and
jb
jmp
dec
sar
or
repz
xchg
adc
xchg
hlt
dec
call
mov
and
int3
adcb
inc
mov
mov
sbb
xor
jmp
repnz
mov
dec
push
fidivl
lret
or
js
lahf
xchg
add
sbb
mov
ljmp
add
cmc
movsl
cmp
mov
js
xor
sbb
add
mov
iret
cmp
inc
stos
dec
sarl
in
lds
mov
daa
xor
inc
addl
incb
adc
pop
push
mov
or
dec
add
nop
jg
add
and
cmp
cs
push
inc
jl
mov
and
decb
out
and
jbe
inc
jp
mov
cltd
add
dec
jge
sub
pop
pop
mov
xchg
mov
mov
pop
addr16
sti
imul
pop
mov
loope
gs
or
pop
dec
sbb
in
into
mov
mov
mov
pop
daa
adcl
jle
ljmp
dec
repz
mov
out
jp
fldenv
outsb
ds
sub
push
sbb
cmp
and
sti
lret
cwtl
shrl
adcb
dec
inc
pop
lods
bound
pop
shll
mov
sarb
int3
add
xlat
cld
xor
js
inc
sbb
mov
mov
lods
xor
mov
adcb
icebp
lds
in
sbb
jo
pop
arpl
je
and
jge
or
ja
xor
cmp
xor
ss
movsl
enter
xchg
sub
xchg
stc
cmp
jge
jne
push
jo
sbbl
xchg
inc
sbb
push
jo
xor
xor
sahf
mov
lret
lea
ret
enter
enter
mov
adc
lret
lcall
inc
jnp
jnp
jo
in
inc
lret
mov
add
mov
and
stos
jge
mov
aaa
push
nopl
ficompl
xor
cli
out
adc
pop
cli
int3
cmp
jp
js
test
fstpl
or
and
imul
mov
shl
jg
and
data16
push
cmp
std
push
test
inc
lods
shlb
adc
and
xor
or
popa
std
sbb
and
xor
xchg
mov
add
cs
pop
push
mov
ds
xor
sub
outsb
adc
test
addr16
shl
add
addr16
out
jp
xor
movd
adc
movsb
cmp
call
mov
in
jne
ds
incb
lahf
test
mov
xchg
pop
push
pop
pop
rorl
or
out
lret
jg
sbb
ret
add
and
nop
push
xchg
adc
xchg
ret
push
sbb
pop
ljmp
les
ss
addr16
fstps
sbb
rorb
mov
and
mov
push
or
inc
scas
inc
lret
call
out
mov
cmovge
idivl
jg
push
iret
in
test
and
insl
mov
adc
in
adc
int
xchg
cld
out
inc
out
das
mov
scas
xor
ljmp
dec
push
sub
sbb
or
pop
enter
xor
pushf
loope
cmpb
cli
cmpl
inc
mov
inc
xchg
fidivrl
lahf
lods
add
jb
mov
inc
lods
insb
pop
test
pop
pop
mov
xor
adc
cmpsb
stc
xchg
xchg
stc
or
xor
cmpsb
and
rorl
lret
icebp
dec
jmp
imul
std
mov
dec
mov
daa
push
push
xor
add
inc
test
insb
inc
cmpsb
and
xor
cmp
lods
push
out
jnp
call
int3
xchg
mov
into
in
fiadds
and
adc
mov
ret
pop
insl
dec
adc
stos
lret
dec
outsb
sahf
pop
je
outsl
in
popa
pop
cmp
lret
mov
mov
mov
and
cmp
cwtl
test
daa
xor
ror
xchg
jae
mov
lahf
add
and
inc
sbb
jmp
sbb
faddl
sbb
test
out
lock
lret
shl
icebp
jne
adc
dec
fistpll
mov
test
out
aad
aaa
dec
mov
or
pop
or
icebp
add
cmp
pop
call
sub
cmp
jae
jno
xor
push
or
push
pop
lock
adc
call
adc
inc
cltd
and
sti
rcl
mov
mov
or
orl
push
push
jb
pop
nop
sbb
push
mov
aad
int
cwtl
sub
dec
mov
mov
sbb
sub
sbb
and
es
ret
popa
cmpsl
sbb
loopne
adc
lea
fidivs
or
scas
dec
shll
lods
mov
push
sub
mov
jmp
insb
cmpsb
pop
int3
lret
add
fs
sbbl
pop
insb
adc
cltd
mov
aaa
sbb
sub
lods
cmpsl
cmp
xchg
or
pop
das
sub
in
mov
aaa
sarb
jg
lods
and
cmp
nop
sarl
cld
and
cmp
inc
cmpsb
inc
nop
imul
and
rcll
lods
jo
daa
je
dec
ljmp
scas
dec
out
push
inc
hlt
lods
push
dec
inc
in
adc
int
jo
pushf
push
jg
or
push
xchg
ficoml
movl
mov
adc
mov
inc
lods
ds
fwait
les
mov
andb
aad
insb
pop
and
pop
stos
cs
xchg
adc
sub
push
movb
out
stc
rorl
cld
loop
add
pushf
mov
adcl
fisttps
xor
add
jbe
rcrb
repz
outsl
xchg
inc
enter
xchg
iret
daa
out
adc
jmp
pop
outsb
xlat
ret
add
jp
cmc
jb
cli
adc
sbb
adc
pop
fsubr
xchg
icebp
mov
mov
sbb
sbb
repz
std
sahf
add
mov
pushf
and
lods
xlat
or
shlb
xchg
or
sub
pop
add
mov
gs
dec
sbb
in
inc
outsl
xor
mov
pop
push
mov
cmpb
notb
push
xor
mov
ret
bound
xor
jb
or
dec
mov
push
and
imul
xlat
ficompl
inc
push
fsubrs
cltd
insl
mov
lea
add
mov
pop
std
mov
fwait
pop
pop
hlt
push
sub
and
adc
cmp
cmp
inc
test
stos
sbb
stos
xlat
mov
inc
jmp
xchg
adc
lock
jge
push
out
sbb
inc
into
mov
mov
vmread
ret
mov
or
mov
test
lods
sbb
pop
adc
mov
mov
mov
cs
xor
das
mov
in
cmp
enter
bound
push
stc
jae
shrb
cld
insb
out
in
or
pop
stc
ficompl
add
xor
fidivl
rorl
stos
xchg
hlt
sub
scas
sbb
add
xchg
mov
lods
fsub
xor
mov
pop
and
iret
cld
not
cmpsl
les
add
fsubrp
lods
mov
dec
mov
adc
cmc
pop
pop
pop
out
dec
or
aaa
adc
push
and
add
mov
call
aaa
sbb
into
jp
daa
jb
inc
sub
mov
insl
mov
les
ljmp
outsb
inc
out
test
jle
sbb
xchg
mov
dec
adc
mov
mov
adc
jg
out
inc
dec
addr16
dec
push
dec
xchg
lea
fcompl
js
push
dec
jmp
sbb
imul
dec
xchg
mov
push
mov
jb
sarb
mov
comiss
jmp
pop
jl
push
je
mov
ds
cmp
in
or
fcmovb
xor
xor
enter
push
stc
jns
jns
add
fwait
add
sub
mov
lea
jle
jg
aaa
or
aad
or
jbe
push
int3
das
adc
and
sbb
outsl
mov
ret
sbbb
test
jo
and
and
jmp
arpl
sub
out
leave
cld
bound
int
dec
cmp
ja
sub
mov
nop
inc
adc
std
pop
fmull
aad
lahf
pop
jecxz
sahf
scas
test
test
or
jmp
hlt
cmp
dec
xchg
call
push
pop
mov
adc
xchg
test
sahf
test
orb
pop
lods
push
nop
add
mov
scas
add
rcll
push
push
jl
sub
xor
or
ret
fisubs
sbb
idivb
or
mov
arpl
mov
arpl
in
jb
sbb
lds
andl
call
inc
push
xor
push
jne
leave
pop
insl
xchg
mov
mov
push
or
jb
xchg
sub
pop
mov
push
cwtl
packsswb
lahf
mov
inc
stos
cli
push
dec
bound
inc
mov
popf
call
repz
xor
out
sub
ds
sbb
mull
pop
hlt
push
mov
xchg
xor
mov
adc
mov
cwtl
xor
data16
pop
in
adc
pop
bound
inc
adc
aaa
pop
lret
out
cld
inc
lahf
in
push
lea
bound
mov
ret
adc
mov
jo
xlat
fldcw
jnp
loope
or
pushf
in
out
cmpsb
insl
push
mov
js
and
add
sub
pop
mov
orl
xor
pop
in
leave
xor
mov
gs
inc
test
sar
fstl
daa
lahf
mov
xor
insl
xor
imul
push
cmp
xor
repnz
repz
shr
pusha
xchg
loope
cmp
in
sbb
jb
and
cmc
add
iret
xchg
movsl
pop
cmp
rcll
xor
call
stos
in
adc
in
iret
call
push
sbb
mov
je
push
push
push
fmuls
scas
out
xchg
sarl
mov
push
xor
lock
int3
stc
xor
loopne
mulb
rcll
dec
das
add
adc
in
inc
or
mov
jnp
test
aad
rcl
jne
int3
ficomps
stos
mov
or
testb
shlb
cmpl
cmp
xchg
xor
movsl
push
arpl
mov
jecxz
fadds
cmp
jo
sarl
call
inc
xor
sbb
js
faddl
jne
into
or
push
sub
mov
pop
fsubs
test
mov
inc
sub
sbb
jg
mov
or
push
xor
mov
out
inc
sub
shrl
orl
adc
jmp
cltd
fwait
jge
pop
mov
push
shlb
add
inc
or
aas
cmp
cmp
xor
bnd
stos
jmp
cmp
push
das
pop
jg
xchg
mov
shr
lret
in
cmp
out
xor
lret
sti
jmp
repz
fmulp
pop
add
dec
push
push
cld
add
jge
add
mov
xchg
add
xor
fistpll
mov
and
inc
cli
ds
mov
mov
fs
xchg
push
xor
or
fsts
lods
mov
pop
loope
int3
movsb
inc
mov
mov
js
push
jns
or
shrb
movsb
stos
adc
inc
sub
dec
pop
fsubrp
mov
dec
cltd
xor
aad
xchg
test
and
sahf
jno
scas
lahf
cmp
mov
jle
xchg
adc
jne
test
popa
pushf
push
mov
push
mov
mov
gs
lcall
loop
imul
inc
push
lcall
cmp
xlat
xchg
shll
add
jl
lret
std
jb
sub
xchg
insb
or
cmpsl
int
testb
xchg
je
rcrb
jecxz
mov
fisubrl
aam
movsb
fistpl
sti
dec
andb
dec
aad
or
xchg
push
and
leave
mov
xor
call
test
jg
out
xor
pushf
imul
int
pop
jb
aas
movsb
in
add
fisubrl
sbb
xchg
mov
xor
xchg
stos
pop
mov
jb
jnp
mov
push
daa
adc
jle
pop
xchg
sti
std
mov
stos
mov
pop
mov
sub
pushf
imul
mov
mov
mov
sahf
fs
in
jno
add
lods
adcb
xchg
imul
cvtdq2ps
fldz
bound
cmp
and
jbe
or
test
inc
push
pusha
mov
jl
shrb
lahf
inc
jno
fsubrs
roll
xchg
outsb
es
aam
xchg
adc
pop
loopne
in
and
les
popa
sbb
loop
sub
pop
mov
lock
push
push
pusha
movsl
mov
mov
lahf
je
repnz
cmpsl
adc
xor
shl
leave
and
mov
outsb
push
cwtl
cmp
rcl
mov
jnp
fucomip
xchg
testl
ss
popf
mov
sahf
xbegin
add
rclb
inc
sub
out
sbb
xchg
cwtl
in
lods
movl
mov
sbb
xor
test
cld
out
fcoms
add
jge
cltd
loopne
popfw
inc
jne
inc
pop
cmp
cmpsb
int
push
mov
dec
dec
inc
in
mov
jl
shl
add
dec
xchg
and
jg
or
lret
rclb
test
inc
repz
cltd
fistpl
sbb
cld
enter
imul
mov
out
popa
inc
mov
dec
push
daa
daa
pusha
mov
es
cmp
icebp
jnp
fildl
sbb
dec
insl
xor
or
dec
xchg
mov
push
or
cmp
pop
cmpb
mov
cmp
xchg
pop
inc
scas
inc
pop
pusha
xor
xor
clc
lock
ja
imul
out
mov
mov
xchg
xor
test
repz
jle
mov
movsl
mov
inc
sub
cli
jmp
or
sbb
mov
mov
popf
int
stc
das
repz
aas
xor
scas
or
outsl
xor
out
cmp
push
stc
sub
or
dec
mov
pop
fsubrp
lret
shll
dec
mov
sbbb
add
inc
and
inc
fimuls
mov
addl
call
mov
mov
cmp
sti
pusha
jecxz,pn
cs
sahf
test
test
xchg
pop
xchg
aaa
sub
mov
cmp
and
mov
in
rcr
add
subl
in
in
repz
testb
jg
testl
in
das
cwtl
jns
pop
pop
lahf
mov
aam
dec
dec
fst
inc
add
in
call
imul
shll
lods
mov
add
sbb
inc
hlt
adc
and
inc
ja
jne
fistl
fsubrl
rorl
push
xor
cmp
xchg
aad
inc
pushf
adc
ret
push
pop
or
mov
and
cmp
cmp
incb
movsl
notb
cmp
xchg
stos
xchg
mov
xchg
ret
mov
and
cmc
mov
ret
jno
inc
clc
sbb
adc
jmp
lea
lahf
mov
cmpsl
fsubrs
ret
lea
sub
mov
sub
shr
insl
jle
cmc
mov
xchg
cmp
sti
cvtps2pd
mov
fs
mov
lret
les
out
push
iret
push
and
popf
pop
notb
rcrb
pushf
adc
xor
insb
push
movsl
lea
cmp
or
push
pop
scas
inc
add
notl
fstpt
xor
aas
clc
jle
insb
sub
mov
cmp
push
mov
pop
xlat
cmpsl
mov
xor
cmp
jo
aam
fdiv
mull
pop
jg
xor
dec
add
xchg
in
add
mov
sub
dec
aas
fstps
in
mov
clc
test
sub
pop
or
sub
add
sub
test
sbb
or
flds
and
and
inc
pop
sbb
cmp
clc
repz
and
dec
aad
repnz
sub
hlt
dec
insl
jae
aas
test
sbb
lea
mov
je
movsb
repz
or
inc
xlat
lret
xor
jecxz
xor
sbb
jle
dec
out
iret
xchg
xchg
loop
leave
dec
jb
push
push
cwtl
cs
cmp
or
fsubl
je
sahf
stos
dec
stc
fimull
stc
push
dec
pop
cmc
out
enter
cmp
or
idivl
scas
das
jnp
sbb
jmp
into
lock
pop
sub
push
jno
mov
test
mov
fsubrl
push
pop
jg
cmp
and
or
or
add
lock
fcmovb
clc
outsb
jmp
mov
sbb
add
adc
sbb
inc
lods
loop
cmc
xchg
mov
jbe
fsubp
mov
push
pop
adc
cwtl
cwtl
jne
popf
je
outsb
sub
lcall
or
jb
cld
pop
mov
inc
aas
jb
xchg
xlat
test
mov
outsl
pop
pop
xchg
out
push
mov
sahf
sub
test
inc
cmp
jb
jbe
xchg
in
lahf
or
mov
pop
test
dec
jg
lcall
repnz
fwait
xchg
jmp
js
outsb
adc
sbb
mov
paddsw
js
lahf
je
dec
jae
std
pusha
mov
pop
ljmp
mov
push
pushf
push
xor
pop
push
pop
jbe
pop
sub
cmp
adc
test
shlb
mov
fcompl
push
jg
lds
ret
mov
adc
rcrl
cmc
pop
cwtl
es
cmp
adc
jmp
sbb
call
insb
mov
pop
jne
push
push
xchg
jmp
inc
lahf
adc
adc
or
inc
lcall
mov
js
and
pop
jae
dec
xor
das
testb
lds
cmp
jns
ss
cs
mov
mov
push
mov
or
inc
repnz
out
lcall
fbstp
mov
sub
mov
not
dec
lret
pop
leave
out
adc
dec
xchg
adc
movsb
push
push
xor
lcall
lret
xor
mov
adc
pop
cs
mov
xchg
cmpb
pop
les
jo
inc
mov
jo
out
in
cmpsb
fldenv
adc
call
scas
sti
jnp
sbb
mov
fcmovnu
xor
xor
addr16
cmp
stos
leave
pcmpgtw
jnp
loopne
das
scas
sbb
aad
mov
ret
push
jmp
ret
xchg
or
repz
pop
push
xchg
pop
xor
int3
push
loope
shlb
stos
cmp
outsl
sbb
clc
dec
je
shrb
mov
leave
lahf
cpuid
dec
cs
inc
shlb
inc
mov
fistl
xor
je
mov
mov
adc
inc
or
jnp
mov
pop
les
pop
shlb
pop
dec
mov
std
bound
in
rclb
dec
sbbl
sbb
cmc
sbb
xabort
inc
popf
and
and
jge
xchg
cs
in
xchg
cmpsb
lods
outsl
inc
pop
push
call
jno
sbb
mov
pop
cmpsb
ds
add
xor
xchg
or
dec
push
mov
push
jg
lahf
rcl
stos
and
xchg
stc
loope
or
test
xchg
inc
dec
jno
stos
jnp
or
daa
xlat
xor
lret
jbe
xor
pop
jbe
stos
fisttpll
push
fsubl
xchg
dec
mov
repnz
add
int3
imul
cmp
jp
push
pop
imul
and
jl
gs
cmpsb
xchg
jne
xor
or
sahf
icebp
mov
test
ja
adc
jmp
sbb
jae
sub
in
jno
mov
sub
call
mov
or
mov
xlat
push
int3
fiaddl
fwait
mov
push
pop
add
inc
cltd
add
je
pop
mov
mov
mov
dec
xchg
cltd
sbb
adc
add
in
scas
fistl
mov
xor
push
test
fwait
outsl
roll
push
add
stos
imulb
push
faddl
shll
pop
sub
sub
ret
pop
push
mov
sbb
filds
mov
push
and
jg
jg
fs
out
or
push
pop
and
sub
xor
ret
cmp
fistl
push
dec
iret
stos
hlt
mov
call
mfence
sub
mov
scas
and
das
cs
cmpsl
ret
das
repnz
das
aam
lods
lcall
aam
call
add
aam
inc
fsubl
xchg
jmp
xchg
xor
test
mov
adc
pop
aaa
addr16
pop
adc
ds
or
dec
mov
insl
sbb
push
cwtl
pushf
push
cmp
imul
rolb
sub
jno
xor
jp
and
stos
sub
gs
mov
or
or
dec
stos
and
int
cmp
pmaxsw
cmpsb
and
xchg
addr16
and
push
ja
adcl
dec
xchg
add
pop
clc
sub
mov
jns
push
je
sti
adc
mov
lea
jnp
das
testb
insl
push
push
cli
jecxz
cmc
je
and
cmp
enter
or
imul
cmp
es
test
aad
sahf
fisttpl
lcall
sbb
orl
lods
push
or
jno
cmp
xchg
into
pop
mov
push
rcl
dec
ds
mov
pop
dec
jnp
mov
add
sub
dec
push
mov
mov
cmpsb
inc
stos
ja
daa
lock
leave
cvtps2pi
mov
dec
jnp
ljmp
xchg
out
add
cmpsb
jge
movsl
jge
aad
mov
ds
js
add
mov
leave
nop
in
and
test
inc
and
loopne
enter
xchg
push
fmull
lret
mov
mov
repz
mov
mov
xor
push
aas
pushf
xchg
mov
fsubrs
addr16
sub
adc
insb
push
push
or
inc
nop
insl
shl
sbb
int
or
push
mov
sarb
adc
dec
xor
inc
dec
mov
push
xchg
and
push
mov
jecxz
mov
mov
inc
dec
test
cltd
lea
mov
sbb
mov
inc
stc
adc
cltd
pusha
pop
push
xor
push
pop
lea
out
add
mov
mov
and
repz
arpl
xchg
inc
jge
dec
pop
sbb
pop
lock
and
loopne
jmp
fidivrl
lcall
add
orb
daa
ss
jb
js
pop
inc
lock
inc
mov
fldcw
jmp
out
rclb
lahf
jo
sbb
sarb
movsl
sub
lret
push
dec
mov
ds
inc
mov
in
in
mov
fistps
add
out
pop
xor
mov
xchg
leave
mov
push
das
stos
ret
jae
shll
or
mov
into
adc
push
xchg
mov
sub
dec
xchg
fidivrs
insb
push
sbbl
ret
pushf
xchg
ljmp
push
call
test
cmpsb
addr16
adc
and
xchg
mov
ds
fs
cmp
inc
sub
daa
sbb
lahf
insl
and
arpl
push
and
cmpsb
sub
mov
xlat
insb
rcrl
sub
icebp
sbb
jae
sub
enter
daa
inc
popf
enter
ljmp
jne
int3
scas
lea
or
fstps
push
in
test
pop
out
jb
dec
dec
xor
cltd
dec
out
xor
fadds
mov
addl
int
dec
fcompl
push
arpl
xchg
ds
and
ficoms
mov
fmulp
xchg
sbb
lods
mov
cmp
fists
mov
jne
loope
pop
inc
int3
pop
pop
sbb
mov
jae
jmp
fstpt
aam
xor
and
stc
aaa
outsl
xor
xor
js
fistl
mov
or
push
mov
ds
pop
loope
enter
or
inc
mov
test
sub
daa
cmp
loope
scas
gs
adcl
mov
jle
mov
mov
test
lcall
or
mov
ror
stos
jp
cld
adc
sub
pop
and
xchg
xor
mov
ljmp
movsl
pop
jnp
pop
cmpsb
fistps
xor
sub
inc
mov
daa
cmp
or
jae
cmp
cs
les
cmp
or
adc
sub
int
mov
and
dec
inc
and
pop
decl
push
je
mov
jle
push
cmpsb
jne
mov
aam
data16
popa
dec
mov
inc
push
cld
pop
sahf
lods
dec
dec
xor
loop
sbb
sub
and
mov
lods
push
pop
call
pushl
and
jne
aas
sbb
lahf
inc
test
mov
xor
sbb
aas
add
aaa
jg
les
xlat
daa
adc
push
cs
in
in
cmpsl
jp
push
jmp
xchg
addr16
push
aas
jno
jle
push
mov
aam
nop
adc
hlt
xchg
sbb
pop
imul
pushf
or
mov
mov
and
sbb
jbe
icebp
shrl
xchg
jg
out
fs
lds
cmp
xchg
push
xchg
or
xor
sbb
pusha
out
lock
or
sub
fsubrl
pop
mov
out
out
arpl
scas
shlb
sahf
jmp
cld
mov
lahf
ficoml
aas
jge
mov
mov
jno
push
mov
insb
jno
lahf
aam
push
mov
mov
xchg
push
leave
pop
add
sbb
add
into
mov
inc
xor
out
xor
add
cmp
push
push
lret
sahf
daa
ret
cwtl
je
dec
xchg
add
lods
fistl
orb
loopne
out
dec
sub
sahf
pop
movsb
push
inc
push
pop
cld
or
insb
scas
sbb
imul
add
jg
imul
shrl
pop
jl
inc
mov
pusha
cltd
jo
sbb
jl
mov
jge
mov
xor
sbb
dec
clc
xor
add
cmp
std
jecxz
mov
je
shrb
roll
mov
xor
ljmp
jp
mov
loop
cmp
lahf
jl
pushf
xor
orb
inc
xlat
pop
sti
lret
push
fldcw
out
popf
inc
ja
lods
mov
dec
aam
mov
mov
cltd
lods
pop
int3
xor
arpl
xchg
test
pop
push
aad
cmp
jp
and
dec
and
push
jns
add
int
leave
pop
and
popf
pop
fs
push
imul
iret
and
xor
test
inc
xor
out
fldt
sbb
out
inc
xchg
int
cli
xchg
push
testb
cmp
int3
jno
sbb
pop
fimuls
mov
jae
sub
xor
push
popa
addr16
in
sbb
jne
movsb
push
xchg
clc
stos
mov
pop
or
and
pop
sub
dec
push
stc
mov
cmc
and
test
mov
dec
fnstcw
sbb
leave
stc
sub
mov
cs
jge
sub
out
dec
xchg
out
jne
shrb
xchg
loop
pusha
add
pop
mov
into
loopne
imul
mov
and
pop
ret
jmp
jp
or
lcall
jp
xchg
jmp
fisubrl
arpl
lods
adcl
mov
push
xor
push
jno
pop
cmp
scas
popf
pop
sbbl
fdivp
jl
test
pusha
sbb
mov
notb
shlb
popa
popf
shrb
xor
xchg
add
rolb
inc
push
aas
es
mov
mov
lret
dec
fs
jmp
std
push
loop
sub
xlat
cmpsb
dec
ds
std
fucomp
gs
arpl
cmp
mov
cwtl
gs
rcr
fbld
fnstcw
mov
pop
gs
sbb
out
cwtl
mov
mov
cmp
xchg
push
or
lret
sbb
in
xchg
and
push
adc
gs
sub
sub
pusha
sub
test
cmp
add
nop
sub
pop
ljmp
leave
push
mov
scas
imul
icebp
inc
in
mov
sahf
cmp
sub
xchg
inc
clc
dec
mov
in
cmp
add
adc
roll
pop
jbe
inc
mov
scas
sti
daa
fcoml
push
add
stc
xchg
xchg
mov
and
pusha
push
xchg
sbb
sti
jmp
test
xor
lea
sub
roll
lock
fs
dec
xchg
nop
jp
mov
aam
stos
xchg
fistl
xor
push
jmp
faddl
ss
mov
imul
pop
xchg
dec
es
or
mov
dec
mov
mov
pusha
dec
fxch
push
stos
fisubrl
cld
push
xchg
mov
push
mov
xchg
xchg
popl
xchg
inc
lock
mov
mov
leave
insl
add
mov
mov
mov
add
push
out
cli
xchg
and
inc
or
pop
dec
or
inc
mov
mov
sbb
push
adc
mov
cs
mov
clc
sub
xchg
ficoml
mov
mov
or
xor
cmp
sti
pop
inc
aas
mov
cmp
aam
mov
xor
sbb
sub
xor
mov
xchg
xchg
data16
inc
add
push
fidivs
ret
hlt
sub
not
mov
and
sbb
shlb
mov
mov
adc
idivb
xor
cli
sti
pusha
dec
fs
das
fisttpll
xchg
cld
mov
ret
stc
inc
sbb
sbb
jp
jo
scas
pop
pop
outsl
scas
mov
lcall
std
lea
push
fnstsw
insb
jl
test
jns
mov
mov
xchg
arpl
push
ss
pop
sbb
cmp
arpl
adc
inc
es
or
sbb
loope
pushf
sbb
insb
inc
sub
xor
add
or
pop
cmp
push
lahf
mov
xchg
mov
fcoms
push
inc
into
fsubs
xor
ja
jno
jbe
jnp
mov
mov
cmp
adc
loope
fadd
sub
fidivrs
fisubl
icebp
sub
jge
aam
scas
in
pop
dec
shll
pusha
push
imul
imul
and
stos
cwtl
jmp
into
sbb
stos
loopne
cmpsl
push
and
pushf
in
sub
fs
rolb
movsl
je
xor
adc
mov
ja
cld
lock
lea
stos
test
sbb
pop
stc
cmove
push
jbe
sub
or
add
daa
lock
test
loopne
leave
flds
mov
xchg
jne
adc
int
mov
xchg
mul
scas
push
andl
leave
ret
mov
inc
lcall
mov
sub
cld
outsl
hlt
shlb
pop
lods
push
and
pop
test
stos
mov
jnp
subl
test
rcrl
push
je
rol
sub
push
lret
dec
and
or
sub
inc
lds
and
lahf
push
and
lea
hlt
fdivrl
aas
cmp
addr16
pop
sub
xchg
cmp
and
cmpb
cmpsb
insb
lcall
add
or
in
loope
mov
and
inc
testb
xor
divps
stos
and
sub
inc
pusha
fwait
test
dec
dec
icebp
sti
pop
mov
gs
popf
add
push
ret
or
inc
imul
lods
pushf
xlat
push
push
loopne
repnz
pop
push
mov
sbb
pop
or
mov
push
cmp
mov
pop
sub
arpl
ror
sbb
mov
cmp
test
dec
inc
rolb
pop
out
addr16
push
cmpsb
adc
loop
loope
fldt
sub
arpl
sbb
arpl
xchg
fcoml
cld
mov
fcmovnb
jb
imul
inc
xchg
pop
jno
icebp
add
aam
push
test
not
out
es
imull
fnstcw
in
daa
xchg
outsl
gs
mov
loope
mov
icebp
aam
gs
mov
fs
pop
inc
or
call
or
mov
mov
mov
scas
push
movsl
nop
xor
test
jbe
jae
mov
lret
cmp
and
push
mov
sbb
xchg
cmp
pop
push
pop
push
pop
insb
push
inc
jl
mov
xchg
leave
jo
movl
pop
xchg
cld
cmpsb
cmp
jne
cmpsb
mov
subl
je
popl
imul
add
bound
push
icebp
xlat
out
pop
rcll
sbbl
cmp
jl
jg
and
add
push
push
pop
sbb
or
hlt
mov
mov
mov
sbb
icebp
bound
jmp
inc
fbld
push
sub
pop
pusha
scas
in
sub
pop
lahf
cmp
mov
mov
mov
pop
sub
mov
xchg
adc
mov
jmp
sub
cmc
push
sbb
mov
xor
mov
sarl
mov
stos
stos
pop
adc
mov
cmp
or
push
cld
iret
xor
lret
adc
xchg
lods
jo
shlb
push
xchg
stos
cmp
sbb
sbb
outsl
test
mov
out
jne
push
popl
push
jecxz
push
ret
shlb
cltd
notl
jmp
pop
in
nop
lds
mov
adc
mov
jo
in
test
repnz
cmp
mov
aad
sbb
repnz
lcall
ds
jle
lock
std
adcl
aaa
sbb
push
movsl
jo
cmp
sbb
adc
test
sub
ljmp
mov
int
adc
scas
or
push
hlt
xorb
test
test
dec
out
bound
push
fcmovnb
push
pop
dec
push
dec
mov
jge
rcrb
adc
pop
out
movl
shr
popa
push
and
mov
cmpsl
adc
addr16
jge
sete
cli
jge
movsl
cmp
or
cmpsl
sti
dec
imul
add
test
mov
mov
call
stos
call
lret
ljmp
bound
jge
dec
cwtl
pop
lea
roll
movsl
adc
imul
out
push
pop
rcl
rorb
cmp
cmp
sarb
repnz
or
mov
mov
into
mov
jecxz
dec
outsl
jecxz
enter
sub
mov
xor
mov
arpl
bound
arpl
mov
sarb
add
sub
pop
aad
pop
lret
dec
loope
test
cwtd
sti
call
repz
adc
xor
jle
jmp
insl
cmp
inc
pop
iret
mov
fnstsw
jle
and
cmp
xchg
sub
inc
pop
mov
jbe
inc
or
or
hlt
cwtl
test
fimull
fistl
or
and
pop
out
fnstenv
adc
jg
enter
mov
mov
push
jo
adc
loope
adc
jae
jge
jnp
mov
mov
popf
scas
scas
dec
bound
orl
lds
add
std
xor
add
inc
and
adc
mov
mov
jg
daa
pusha
stos
or
sti
mov
sar
fcmovnbe
mov
pop
fucomp
dec
enter
or
ror
sbb
loopne
sahf
loop
dec
push
in
cmpsb
mov
jmp
cmpl
call
mov
xchg
push
adc
fbstp
es
stos
lret
adc
arpl
and
fcmovnu
mov
mov
mov
adc
addl
and
fwait
mov
cmpsl
push
lock
xchg
into
pop
lahf
pop
jle
sub
jecxz
test
sub
add
inc
lahf
xorl
jg
jo
adc
mov
fldenv
xchg
inc
mov
dec
dec
sahf
es
daa
ret
seta
pop
jmp
pop
mov
or
mov
mov
jl
inc
fidivs
loope
fs
ljmp
or
fsubrl
cmc
ljmp
test
push
xor
pop
hlt
inc
or
dec
sub
mov
inc
test
sub
imul
and
mov
mov
ret
out
addr16
add
std
test
pop
popa
jmp
fs
test
jge
loope
in
mov
or
cmp
and
test
call
das
push
cmpsl
es
sbb
mov
cmc
and
inc
mov
loope
pop
adc
int3
faddl
mov
pusha
jl
adc
xor
ret
push
xchg
rclb
cmp
sbb
bound
data16
dec
mov
xchg
in
and
sbb
icebp
jmp
aad
mov
aaa
add
sbb
mul
addr16
xlat
es
sub
or
dec
idivl
in
add
pushf
sbb
add
insb
mov
cmp
cmp
iret
xchg
cmp
sbb
movsl
pop
xchg
jle
jno
outsb
ficompl
or
cmp
inc
imul
mov
fcmovnbe
add
jmp
bound
scas
dec
xchg
outsb
test
jge
hlt
in
pop
mov
idivb
out
iret
mov
mov
fnsave
je
and
and
inc
sbb
xchg
ja
outsl
out
fstp
add
sbb
push
mov
sub
pop
xor
and
mov
jp
mov
jns
xchg
pop
imul
xor
test
ss
xchg
lock
dec
push
lods
xchg
pop
xchg
jecxz
ja
inc
out
out
push
mov
mov
xor
add
jle
ss
or
in
dec
or
dec
leave
jp,pn
mov
enter
sub
or
ss
pop
leave
xchg
xchg
push
cmc
insl
imul
xchg
sar
pop
aaa
je
mov
in
lea
xchg
mov
das
jp
sbb
scas
dec
dec
pop
cld
or
lret
sbb
clc
test
jmp
xlat
mov
xchg
popa
scas
pop
mov
cmpsl
xorl
daa
addl
rorb
aad
js
mov
pop
fisubs
imul
clc
mov
int3
push
scas
mov
lahf
fimuls
sbb
mov
adc
sarb
sbb
nop
mov
rcll
push
or
lods
xor
scas
dec
stos
xchg
mov
pop
hlt
push
or
mov
aaa
aam
xor
int
shll
test
push
insl
hlt
xor
negl
add
inc
cmpsl
out
xor
cs
pop
mov
out
cmp
inc
and
in
movsl
les
mulb
push
and
es
flds
adc
mov
jecxz
in
xchg
fdivs
call
pop
rcrl
xor
sbb
cmp
jne
adc
cmp
jb
inc
xchg
mov
dec
negb
mov
adc
pop
mov
fsubs
xchg
cmpsl
icebp
mov
fstpl
rclb
mov
adc
test
or
cmp
cwtl
ljmp
les
adc
jge
mov
adcl
add
stc
add
dec
into
dec
or
sub
jecxz
fsubrl
sbb
lods
lods
dec
sahf
or
mov
mov
scas
inc
dec
test
or
dec
mov
loop
data16
and
push
lret
into
mov
into
and
and
cmp
pop
pop
push
neg
nop
std
movsb
fistpll
pusha
sti
xor
cmpsb
adc
sti
sbb
sbb
lahf
add
mov
xchg
and
ljmp
push
mov
add
lock
push
pop
mov
push
xchg
xor
push
cmp
idivb
xchg
loop
sub
aad
xor
adc
xor
stos
jle
int3
insl
pop
mov
out
and
scas
rorb
lds
or
jbe
bound
adc
and
sub
jle
in
pop
inc
push
bswap
stos
out
insb
mov
rorl
jae
stc
mov
add
rorl
ret
add
clc
hlt
mov
rsqrtps
cs
cwtl
stos
xor
in
fidivl
jp
sbb
mov
fildl
or
mov
inc
or
daa
add
adc
xchg
into
sahf
add
insb
xchg
inc
xor
jae
jl
daa
out
pop
jl
cwtl
sbbl
xchg
pop
mov
pop
cmp
xchg
in
mov
insb
leave
and
and
pushf
sub
repz
sbb
cmpsl
mov
xchg
out
std
mov
adc
cmp
push
mov
dec
adc
jmp
mov
mov
fbstp
jmp
fsubrs
xor
inc
in
in
pop
adc
dec
pop
xor
ret
in
or
sbb
sub
fisubs
dec
dec
push
or
sub
mov
mov
ljmp
jle
cs
dec
push
dec
dec
fistpll
pop
insb
jmp
fldl
lods
jecxz
adc
call
or
out
arpl
js
mov
fisttpl
repnz
mov
jb
icebp
dec
jne
scas
xchg
enter
mov
pop
adc
push
dec
jmp
adcl
adc
jmp
ficoml
aam
out
ja
dec
aaa
sahf
jge
adc
cmpsb
fidivs
pop
fdivp
movsl
mov
mov
mov
pop
int
add
xchg
fdivp
shlb
rorb
je
daa
lock
sar
sbb
clc
repz
push
pop
into
mov
sbb
push
xchg
xlat
mov
in
cmp
rorb
or
xchg
jmp
xchg
push
mov
and
out
xchg
rol
pop
mov
fimuls
pusha
xchg
xor
sub
sub
sbb
xchg
mov
cvtps2pd
push
aad
mov
dec
stc
out
pop
call
out
fnstcw
pusha
arpl
or
sub
mov
push
test
push
popa
xor
and
enter
jno
mov
dec
ror
in
lods
loopne
dec
add
sbb
ja
push
xor
mov
and
fnstcw
icebp
push
in
mov
or
fucomip
cwtl
daa
add
jl
jle
inc
dec
repz
cmpsb
std
test
xchg
sbb
fucomp
mov
orb
cs
call
mov
cmp
or
cli
lds
cmp
aas
xchg
and
add
mov
cwtl
cmp
adc
mov
lods
cwtl
xor
cli
jle
ja
adc
xor
dec
mov
fmul
icebp
ss
jmp
push
cmp
out
arpl
je
fcmovne
inc
push
dec
test
fcomip
shll
in
inc
cs
push
xor
sbb
adc
dec
add
ljmp
and
aas
lcall
inc
insl
daa
pop
in
mov
sbb
in
sub
pop
jns
mov
cmp
orl
in
inc
std
cmpsb
clc
sbb
and
mov
sub
mov
daa
mov
xchg
repz
mov
push
pop
jmp
clc
mov
fs
mov
xchg
or
xchg
icebp
lds
mov
imul
push
mov
loope
inc
loopne
xchg
jne
ljmp
inc
add
movsb
into
sub
das
dec
aad
mov
ljmp
jle
cmp
push
xor
dec
cmpsl
inc
xor
addl
ljmp
lcall
mov
mov
push
sbb
adc
lret
xchg
jb
arpl
xorl
out
xchg
mull
sbb
daa
add
out
inc
decl
sub
push
das
xchg
mov
sbb
test
jecxz
sub
stos
adc
into
and
fs
dec
mov
mov
test
nop
push
inc
cmp
ret
add
cmpsl
rcll
out
add
rclb
xchg
fistpll
mulb
out
js
out
jp
xchg
std
subb
cmpb
insb
ret
xor
jl
push
mov
sbbb
lcall
cmpsw
aaa
daa
push
lcall
and
push
pop
mov
pop
test
sahf
cli
sti
add
aad
xor
jle
mov
push
mov
test
mov
lss
in
sub
test
lea
jns
mov
cmp
push
cmpsb
popa
pop
inc
jge
rol
cwtl
push
or
neg
movsl
fildl
loope
mov
mov
add
jg
mov
add
jne
push
xchg
inc
xchg
mov
stc
cmp
int
cld
inc
mov
mov
and
mov
enter
inc
mov
mov
lock
or
shlb
popf
cmc
add
stc
cmp
in
xchg
imul
add
inc
loopne
arpl
push
insb
jbe
xorl
mov
ret
xchg
xchg
pop
sbb
mov
repz
add
mov
dec
xor
and
push
mov
mov
imul
jge
and
shld
xor
mov
mov
insb
cmp
test
cmpsb
into
fs
clc
mov
out
dec
out
addr16
icebp
jle
lock
ja
ds
test
mov
mov
or
lret
push
sub
jg
sbb
out
and
fsubrl
sbb
clc
pop
or
xchg
out
js
push
out
push
adc
mov
mov
xchg
mov
cwtl
in
mov
sbb
mov
push
pop
addr16
pop
ljmp
mov
mov
mov
sub
aad
sub
cmp
xor
negb
pop
push
inc
das
aaa
bound
testl
mov
mov
int3
add
pop
es
mov
and
jl
mov
sbb
pop
stos
push
dec
jmp
fisttps
das
mov
out
or
imull
push
mov
jb
xor
jbe
push
fsubrs
out
es
mov
dec
or
sbb
cwtl
xor
addr16
jo
xchg
mov
xor
pop
pop
dec
add
jnp
addr16
sbb
repnz
sbb
pop
mov
dec
dec
popa
pop
in
icebp
mov
cli
inc
mov
cmp
dec
ljmp
sbb
imul
std
ja
xchg
xor
sub
loope
loope
add
inc
and
cmp
dec
push
das
jno
std
mov
popa
jo
inc
xchg
out
outsl
sbb
outsl
mov
mov
mov
nop
add
out
cmp
mov
cli
push
sub
sarl
jne
nop
xor
push
sbb
mov
lods
jb
data16
cli
movb
out
and
or
and
sub
popa
sub
leave
mov
clc
cmp
je
mov
xchg
and
cmc
xchg
dec
icebp
add
outsb
incl
stos
ret
in
mov
cmp
mov
push
xchg
insl
dec
and
repz
insb
and
div
iret
mov
inc
pop
es
adc
call
push
dec
lods
in
inc
mov
enter
pusha
and
dec
subps
mov
movl
mov
cmc
and
mov
pop
scas
leave
jle
cmp
dec
aam
xchg
shl
sub
pusha
jns
push
outsl
aas
sub
test
xchg
xor
lret
push
jmp
fimuls
scas
sbb
fstpt
xor
es
out
sti
cli
pop
aad
pusha
addb
je
mov
iret
xor
xchg
dec
insb
sub
lcall
xor
dec
fcoms
lret
and
rorb
jmp
push
leave
or
add
sbb
sub
sub
imul
adc
push
arpl
flds
xor
sbb
push
fwait
std
pop
cs
movsl
fsub
or
scas
movsl
and
test
jb
addr16
pop
lods
xchg
fs
add
xchg
jg
sbbb
sub
xorb
stos
jg
mulb
adc
cmp
jl
mov
xor
mov
lret
addr16
sti
repnz
sbb
pusha
push
mov
std
arpl
insl
in
hlt
insb
insb
nop
push
xchg
hlt
fwait
xchg
sbb
adc
addr16
jae
lods
ds
addl
cmpb
out
stos
sub
insl
lds
push
dec
aas
sbb
sarb
test
ja
leave
ljmp
push
adc
or
fcoml
jl
test
decl
mull
push
shlb
xchg
in
data16
cwtl
into
repnz
pop
mov
sbb
or
roll
scas
pop
scas
insb
ljmp
inc
mov
inc
or
lock
fstl
push
inc
pop
inc
mov
dec
ja
sbb
jg
mov
push
std
pop
mov
ja
add
and
and
aam
fwait
fwait
mov
add
dec
jo
xor
xor
ret
mov
xchg
sub
scas
addr16
sbb
sbb
add
add
sbb
in
popf
sub
xchg
xor
cmp
mov
xor
pop
pop
inc
cmc
xchg
aad
dec
mov
mov
cmp
fidivs
xor
jl
mov
inc
aaa
or
movsl
add
roll
cvtps2pi
sbb
push
mov
fistl
sar
fcmovu
test
dec
enter
lods
xchg
mov
mov
push
rcr
in
mov
fnop
bound
mov
sbb
push
push
push
cmp
in
repz
stc
push
pop
test
call
icebp
das
in
fwait
ja
mov
sarb
rcr
mov
cld
xor
out
das
pop
loope
jl
mov
dec
popf
xchg
xor
je
xor
mov
ljmp
ficompl
lods
xor
jo
mov
ret
inc
pop
sub
xchg
rcrb
xor
jl
pop
loopne
ja
mov
push
movsb
sbb
lahf
mov
inc
addr16
inc
mov
xor
push
jne
sbb
push
pop
in
push
add
cwtl
loop
roll
fadds
mov
fidivrs
imul
jo
sub
ss
stos
xchg
cmpb
aas
call
mov
dec
repnz
dec
dec
ret
out
ret
in
mov
jmp
shl
inc
subl
sub
xchg
jp
jecxz
inc
mulb
dec
stos
call
cs
test
test
pusha
cli
pop
or
mov
mov
insl
push
decl
movsb
jecxz
lods
jo
push
pop
xchg
adc
inc
push
popa
pop
xor
xor
mov
xlat
ds
and
or
mov
testl
imul
int
xchg
les
jecxz
mov
sub
mov
mov
pop
push
fs
cmp
mov
pop
cmc
outsb
pushf
fldenv
xchg
jge
pop
mov
js
jecxz
gs
pop
out
cmpsb
mov
sub
jno
pop
sbb
shll
xchg
mov
loopne
jg
inc
mov
cmpsb
xor
test
leave
and
inc
inc
outsl
inc
imul
add
cmpl
gs
dec
sbb
pop
dec
mov
in
xchg
cwtl
cmpsb
mov
test
sbb
or
mov
fidivs
aad
sbb
pop
dec
push
or
iret
pop
mov
imul
jge
fwait
insl
cmp
shlb
and
adc
daa
push
cmpsb
ljmp
or
ljmp
dec
dec
cmp
fdivs
push
pop
scas
les
xor
sbb
xchg
arpl
stos
jle
lret
cmp
lods
jne
mov
gs
cmpsb
mov
push
push
add
in
inc
push
cwtl
xor
jle
inc
adc
rcll
mov
insl
jns
push
jp
inc
sarb
pop
sub
data16
imul
pop
das
out
js
lea
dec
sbb
test
mov
jmp
xchg
and
xor
iret
jbe
in
stos
cmp
pop
loope
dec
jecxz
pop
int
adc
inc
sahf
pop
dec
js
sbb
arpl
rorl
dec
das
gs
dec
push
push
sub
sbb
add
push
icebp
dec
gs
mov
and
and
push
mov
add
jae
out
lret
adc
clc
loope
addr16
push
mov
mov
or
fnsave
or
scas
movsb
lock
xchg
scas
das
pushf
and
aas
lret
mov
push
fsubl
jns
jg
mov
push
dec
lock
inc
outsl
cmpsb
cmp
xchg
xchg
push
sbb
adcb
pop
pushf
mov
pop
jno
mov
fbld
fsubr
lret
xchg
lsl
pop
in
inc
pop
aam
fcompl
xchg
mov
jp
scas
sahf
xchg
arpl
pusha
insl
push
add
inc
stc
icebp
xchg
mov
sbb
push
test
mov
bound
mov
je
mov
vfrczss
movsl
mov
ja
sbb
inc
lcall
scas
nop
pop
lret
rclb
inc
cmc
sub
cmp
mov
mov
mov
pop
mov
xlat
repz
jns
mov
sub
cmpsl
data16
insl
cmp
xchg
jmp
sbb
lcall
sub
and
jecxz
pop
sbb
test
in
adc
fimull
mov
decb
scas
shl
jg
jb
ja
adc
pop
negl
push
and
add
xchg
mov
cmp
add
std
add
leave
or
sub
jno
inc
sub
in
rol
loope
movsb
xor
mov
mov
ja
cs
jle
ret
pop
stc
adc
jp
xchg
add
mov
jl
push
sub
shll
inc
gs
sbbb
cmp
push
dec
mov
and
lods
in
xchg
out
stc
push
push
dec
adc
lahf
jp
inc
clc
inc
add
jae
mov
imul
fcmove
xor
outsb
repnz
xor
pop
fwait
dec
cmp
pop
daa
mov
cmp
pusha
mov
mov
scas
aas
test
inc
jmp
ss
call
jne
mov
xor
mov
jmp
imul
addr16
push
movsl
ret
push
jns
dec
and
lods
adc
push
out
xchg
aam
push
dec
outsb
rcll
mov
jecxz
dec
call
repz
shrl
imul
or
std
push
leave
xor
inc
pop
xor
daa
addr16
mov
push
add
pop
leave
sahf
xlat
push
stos
or
lock
inc
inc
sti
sahf
test
or
aad
pop
mov
incb
imul
or
cmc
push
fdivp
ss
fisttpl
cmpsb
out
pop
fucomp
jg
lock
jl
xchg
push
jecxz
lret
xchg
es
adc
mov
xchg
mov
dec
dec
mov
inc
insb
and
pop
sbb
pusha
push
mov
mov
cmpsl
sbb
fwait
push
push
mov
es
push
aad
movsb
je
in
and
testb
sbb
loop
jp
std
rorl
mov
and
in
scas
inc
jbe
in
fsubrs
sub
xchg
jno
or
bound
insb
ja
in
lcall
inc
rcrl
sub
ret
xor
andl
xor
inc
xchg
xchg
inc
sti
test
out
dec
jno
cmp
push
xor
xchg
mov
xor
push
cld
push
das
mov
popf
adc
add
xor
mov
lret
cld
je
insb
mov
mov
adc
mov
mov
inc
inc
lret
fs
and
ljmp
enter
stos
fs
lods
xchg
push
int
mov
cmp
pop
xchg
sbb
movsl
loop
lret
and
insl
push
xchg
sti
xor
xchg
mov
mov
inc
test
fcoml
mov
lret
stos
cwtl
inc
inc
cs
jno
fsubs
mov
inc
inc
pop
lahf
loop
fistl
add
gs
mov
inc
lds
inc
call
jecxz
ret
dec
popf
jo
sub
pop
push
popf
dec
in
stc
inc
xor
jnp
jge
aam
cli
jmp
test
inc
pop
movsl
fcomps
fidivs
aad
ret
inc
adc
jo
iret
jp
add
popf
sbb
ja
neg
mov
adc
out
mov
fisttps
sarb
repz
or
scas
mov
fisubrs
sbb
mov
jmp
sub
cmp
mov
enter
adc
nop
xor
add
test
dec
lcall
push
pop
pop
sub
fistpll
insl
neg
rorl
add
pop
sbb
sbb
sbb
popa
call
lcall
mov
fcmovbe
mov
mov
repnz
dec
dec
sbb
fwait
mov
pop
cld
cmc
fisubrl
dec
mov
adc
cmp
jecxz
cmp
out
aam
add
ficoms
jmp
jns
sbb
pop
mov
jp
jo
mov
push
pop
sbb
test
mov
dec
lods
repz
cli
in
ret
ljmp
xchg
ret
iret
or
pop
xchg
add
cmp
push
inc
lods
sbb
lea
xchg
fbld
add
shl
mov
stos
int
mov
xor
inc
gs
cli
pop
sahf
fnstsw
inc
lcall
jp
lret
sbb
andl
fisubs
and
lcall
dec
sbb
adc
mov
hlt
and
inc
mov
fs
sub
pop
jle
jecxz
clc
orl
clc
shl
fs
fdivs
mov
fwait
inc
push
inc
cmpsl
jo
xchg
std
in
jbe
bnd
and
cld
or
sub
ljmp
sbb
jmp
gs
in
mov
out
adcl
mov
sbb
punpckhwd
fmuls
in
repz
pop
mov
test
in
sbb
int3
sbb
cltd
repnz
inc
ja
test
or
fdivs
cli
or
jb
xor
ds
and
data16
dec
movsb
cmpsb
arpl
sbb
pop
add
sbb
pop
std
loope
xor
pop
test
add
xchg
xlat
pop
or
mov
jle
sub
mov
push
adc
push
stos
and
jp
adc
scas
mov
scas
dec
stc
and
and
push
xor
xchg
jne
push
xchg
sbb
sub
repnz
mov
and
sub
cmpsb
repz
jp
jb
jecxz
imul
cmc
inc
movsl
inc
add
stos
addb
xchg
out
cmpsl
mov
rcrb
jge
inc
pop
push
or
test
mov
pop
in
data16
inc
mov
inc
and
popa
or
std
mov
sti
aad
imul
mov
lods
mov
mov
jnp
xor
cmp
lds
push
mov
mov
sub
popf
push
fistl
ret
notb
sub
mov
sahf
dec
or
jno
xor
sbb
mov
lea
mov
fsts
adc
lcall
out
std
std
pop
popa
stc
rcll
add
cltd
cmp
stc
xchg
mov
out
push
pushf
cmp
cmp
nop
cld
aad
movsl
mov
add
rclb
jg
es
in
jo
lret
loope
jne
cmp
movsb
xorb
xor
movsl
or
inc
push
mov
push
inc
cmp
out
fcompl
or
fdivrl
filds
ja
cmp
mov
sbb
mov
int3
movsl
fistpll
xlat
test
ret
or
push
pop
cmp
jg
shld
and
int
out
loopne
or
push
pop
inc
cli
push
cmp
mov
pop
push
pop
jecxz
cmpsl
js
and
imul
jmp
fiaddl
mov
mov
mov
pop
les
out
mov
pop
push
push
stc
outsl
push
mov
dec
xor
jno
addb
xor
sub
movsb
cmp
dec
pop
out
jle
in
push
jmp
inc
mov
aad
adc
ja
add
push
add
hlt
xor
sbb
orb
gs
mov
inc
lods
gs
mov
iret
clc
adc
mov
sbb
arpl
cmpsl
inc
adc
inc
repz
and
mov
lret
mov
mov
cmpsb
test
insb
ds
mov
lods
jno
sub
inc
aad
out
mov
sbb
lods
cltd
ljmp
inc
out
lcall
adc
stos
pop
clc
lods
icebp
jae
add
jmp
inc
jmp
hlt
push
pop
lret
lods
dec
pushf
dec
leave
test
or
int3
adc
sbb
xlat
imul
mov
cmpsl
jo
test
push
mov
push
cmp
mov
les
sbb
pop
js
dec
dec
dec
aam
add
and
push
aam
pushl
ret
psubsw
ret
mov
inc
ljmp
movsb
mov
lods
iret
jb
mov
lret
push
imul
and
out
xor
mov
push
sub
xlat
ljmp
push
mov
dec
jle
stos
addr16
inc
sbb
mov
fwait
push
pop
jae
inc
xor
sub
sub
adc
adc
mov
pushf
cmpsb
push
dec
jp
cltd
xor
push
in
mov
jecxz
jle
in
icebp
rdpmc
nop
adc
lahf
jle
push
rcl
aad
aam
or
nop
loop
dec
aas
jg
or
xchg
add
jmp
out
addr16
test
sub
mov
cli
pop
idivl
mov
pop
xlat
adc
push
fcoms
sub
lahf
push
sub
nop
insl
pop
cmp
ret
nop
xchg
adcb
jg
lds
mov
std
sahf
ja
cmp
fbld
or
imul
shr
xor
xor
cmove
xchg
or
test
cs
aaa
mov
test
das
sub
pop
inc
mov
inc
push
adc
sbb
das
fwait
cmp
xchg
mov
add
daa
lods
pop
addr16
push
js
jae
jmp
xchg
mov
icebp
adcl
js
dec
call
pop
push
jl
lock
dec
push
adc
jl
dec
dec
popa
xchg
imul
addr16
cs
pop
in
int
add
repnz
std
in
sbb
mov
inc
push
int3
inc
test
xor
cwtl
xor
pushl
mov
dec
clc
push
sub
jbe
cmp
pop
cmp
mov
push
cmpsb
movsb
cmc
notl
das
pop
in
fidivs
or
sbb
enter
fistl
add
mov
xchg
daa
stc
ss
dec
jle
stc
lcall
sub
dec
pop
cmp
ja
sbb
rorb
sub
aad
jecxz
cld
lods
xlat
sbb
or
inc
fldcw
cmpsl
pop
mov
loope
jmp
inc
movsl
xchg
and
outsb
and
jno
jge
outsb
and
sbb
pushf
jns,pn
nop
jp
mov
xchg
xor
ret
cmp
cmp
out
jb
das
adc
mov
push
scas
sbb
push
cmp
out
scas
jbe
jno
sub
push
scas
mov
push
movl
enter
popl
mov
mov
repz
mov
push
fsub
push
scas
mov
cmp
cmpsb
adc
mov
cmpsb
std
and
push
add
jno
push
mov
push
xorb
scas
and
aad
inc
fs
lret
inc
jbe
pop
popa
or
jae
adcb
mov
das
daa
ds
dec
adc
mov
sub
push
xchg
xchg
pop
popl
jo
fs
negl
cmp
and
dec
fldl
pop
stos
and
sub
jns
arpl
in
int3
xchg
or
inc
sub
dec
vmovupd
icebp
mov
ja
adc
inc
test
test
es
cmp
cltd
roll
or
add
in
pop
push
out
sti
push
and
test
add
ja
xchg
or
mov
push
jo
xor
mov
mov
add
cwtl
fsubl
inc
subl
dec
movsb
mov
or
into
rcll
lret
push
mov
ljmp
insb
cmc
jp
leave
lea
incl
arpl
arpl
ret
adc
imul
mov
insl
jne
fmull
fcoml
push
pop
stos
jmp
shlb
lret
xor
jo
pop
les
into
fildl
lahf
add
es
out
jo
inc
pop
mov
xor
in
inc
xor
stos
sbb
xchg
mov
je
pop
scas
mov
dec
cmp
jp
popf
push
shrl
scas
push
jne
fisttpl
out
int
cld
pop
add
add
rclb
sbb
test
dec
shlb
cmpsb
test
sbb
pushf
adc
cltd
inc
or
mov
push
sbb
les
in
lods
scas
shlb
mov
xchg
loop
cmp
mov
and
inc
sbb
lcall
push
inc
add
call
scas
cltd
movb
or
mov
xor
daa
dec
jp
or
pop
dec
ds
xor
push
adc
outsl
push
je
les
hlt
adc
xor
and
pop
mov
clc
fnstcw
insb
cmp
fldenv
add
faddl
sub
hlt
mov
push
push
dec
and
insl
push
inc
bound
inc
and
insb
push
or
int3
pop
inc
sbb
mov
int
jmp
push
mov
hlt
sub
dec
push
xchg
add
inc
cltd
cltd
jg
lea
dec
mov
rol
cwtl
mov
inc
pop
pop
loop
orb
xor
add
pop
insb
xchg
arpl
aad
mov
dec
idivl
inc
in
jno
adc
movswl
dec
mov
inc
insl
lret
loope
xor
lret
sub
mov
adc
add
hlt
je
mov
push
stos
dec
pop
xchg
inc
pop
jns
sahf
in
inc
inc
cmp
dec
pop
mov
sub
dec
fisubl
adc
push
pop
out
inc
sub
mov
sbb
push
je
xchg
mov
movl
or
xchg
out
ja
or
int
xchg
repz
sti
cmc
push
rcrb
pop
jle
out
or
jno
outsl
leave
sbb
cmp
add
mov
call
mov
inc
dec
negl
mov
cmp
aam
sub
jo
aam
cmp
xor
push
pushf
and
adc
shl
inc
dec
mov
push
adc
inc
inc
fiadds
jg
xchg
mov
test
xchg
test
adc
pop
jbe
repz
pop
jbe
or
xchg
push
inc
inc
pop
je
das
lahf
mov
int
adc
xchg
in
insb
sbb
mov
fucom
jb
orb
sbb
fildll
fcmovnbe
mov
call
pop
inc
mov
mov
outsb
dec
xor
jg
int
pusha
push
or
mov
and
adc
lods
mov
loopne
inc
xchg
cwtl
fildll
cli
mov
test
push
dec
cld
sbb
and
inc
sbb
movsl
popa
xchg
and
adc
pushf
mov
and
int3
lds
outsb
hlt
iret
je
push
scas
push
arpl
xor
cmpsl
aad
pusha
cld
pop
adc
jo
inc
and
dec
mov
subb
mov
cli
xchg
mov
cmp
mov
bound
pop
cld
sub
push
test
scas
cs
xchg
dec
lcall
inc
inc
sbb
fisubl
in
dec
mov
ret
ljmp
dec
out
cmpsl
movsl
cmpsl
and
mov
cmp
push
pop
mov
mov
push
sub
inc
add
lret
out
xor
cli
lcall
dec
adc
mov
subb
movsb
push
adc
sahf
cmp
insb
sbb
lods
orb
int
xlat
sarb
cmpsl
lcall
mov
jae
and
push
and
mov
hlt
sarl
scas
fsubrs
or
aaa
sbb
cmp
xchg
sbb
sub
das
pop
test
cmpsl
mov
mov
hlt
in
orl
push
pushf
pusha
mov
and
xchg
add
cmp
in
jg
fldt
vmwrite
in
outsl
out
mov
loop
pop
sub
subl
stos
add
inc
jae
shr
adc
repz
int3
jnp
fs
sub
mov
xchg
aaa
or
and
xchg
cld
in
adc
pop
fisubrl
xchg
pop
mov
aas
incl
sbb
scas
push
or
mov
test
gs
push
xchg
lcall
mov
cmp
adc
jmp
xor
insl
xchg
sub
push
dec
cmpsb
sub
cli
in
mov
andl
in
inc
mov
mov
xlat
dec
xchg
inc
cmc
mov
outsl
ds
int3
push
pushf
or
sbb
sbb
dec
mov
data16
pop
add
test
sti
and
push
jmp
sbb
aaa
stc
loopne
scas
sahf
ret
inc
lods
sti
and
movsl
aas
fadds
fisubrl
loope
imull
daa
lods
pop
inc
xor
inc
mov
cld
jb
lcall
dec
sub
popl
or
push
arpl
jmp
mov
mov
pop
iret
cmpsl
cmp
add
int
lds
xlat
sbb
mov
in
push
inc
pop
dec
mov
jl
ljmp
adc
insl
and
outsl
les
push
push
or
call
popa
mov
pop
int
loope
sti
mov
sub
mov
mov
xchg
nop
adcl
mov
rorl
aam
cmp
cmp
shlb
test
xchg
jmp
sub
aad
jl
sub
mov
mov
xchg
test
in
imulb
cwtl
push
mov
pop
jmp
popfw
js
shlb
lret
cmc
pop
jecxz
mov
cld
adc
mov
mov
jp
icebp
jae
mov
mov
lods
gs
aam
or
addb
add
push
fsubl
gs
loop
in
fs
test
inc
add
and
adc
push
aas
jmp
sbb
adc
mov
cmp
xchg
mov
fmull
sbb
mov
int
shrb
pop
aaa
cmc
inc
fimuls
lds
dec
pop
leave
jmp
mov
insl
fnstcw
es
mov
jno
jle
test
int
mov
out
inc
pusha
adc
push
mov
in
ret
lret
push
mov
lods
xchg
sbb
in
lsl
insl
add
pushf
jp
cmp
pop
gs
jnp
add
dec
mov
lods
dec
mov
push
scas
push
sub
xchg
push
and
cmc
xchg
or
gs
das
and
jl
bsf
cmp
aam
cltd
jo
mov
jle
xchg
add
out
sub
xchg
out
mov
cli
pop
pop
cli
sbb
clc
out
inc
movsl
mov
dec
and
popf
cmp
subl
add
adc
cwtl
inc
ja
out
notb
loop
enter
sahf
cmpsb
or
xchg
mov
mov
sbb
lods
pop
adc
call
fimuls
pop
jmp
aas
add
xor
push
popf
in
pop
dec
fs
push
shlb
in
test
mov
jg
push
sbb
push
sub
dec
bndstx
int3
and
mov
xchg
lock
stc
mov
adcb
cld
and
xchg
mov
jo
fcoml
cmpsb
outsl
and
lret
mov
mov
cwtl
movsl
loopne
incl
inc
daa
imul
xchg
mov
mov
in
jnp
push
mov
xchg
lcall
fisttpll
mov
sbb
divl
fwait
sub
shlb
adc
cmp
cmc
loopne
sbb
mov
scas
add
push
push
xor
cwtl
cmpsl
mov
js
jmp
bound
inc
rol
adc
jmp
pop
jmp
aaa
jg
xor
cwtl
push
jno
mov
dec
add
mov
push
lcall
enter
mov
bound
cltd
fisubs
push
dec
sbb
cs
bound
jo
add
push
adc
mov
ret
insl
es
add
fs
popf
jae
xor
imul
insb
mov
xchg
xor
mov
aas
jb
bound
xlat
aas
or
fstps
pushf
adc
cmp
add
cmp
dec
pop
jo
mov
pop
ljmp
pop
cltd
dec
cmp
andl
loopne
mov
popf
and
ret
adc
sub
insl
jbe
push
in
jae
xor
inc
or
and
test
out
aad
nop
inc
adc
lcall
and
mov
pop
mov
roll
pop
cltd
imul
xchg
lcall
fwait
push
data16
mov
shlb
pop
cld
ds
adc
data16
cmp
push
sbb
std
aad
xchg
xchg
adc
cmp
xchg
mov
adc
ljmp
xchg
jge
mov
shrl
outsb
dec
data16
call
pop
in
sarl
pushf
push
inc
fucomi
cmc
imul
mov
xchg
popf
xchg
nop
fwait
mov
mov
in
mov
add
or
mov
arpl
ficompl
mov
jp
std
inc
adc
bound
arpl
or
jbe
cmpsb
cwtl
dec
sub
adc
out
adc
mov
cmpsl
mov
popa
jno
cmpsb
fadds
test
dec
ret
push
xor
insl
sbb
xor
inc
push
mov
inc
add
mov
xchg
jne
dec
push
mov
lods
out
outsl
jp
out
mov
xchg
xchg
jecxz
mov
sub
inc
rorb
push
mov
pop
inc
jle
lret
mov
cltd
cmp
xchg
and
dec
cmpl
lret
push
sbb
adc
leave
imul
mov
cwtl
ss
stc
adc
cwtl
daa
bnd
int3
sub
cmp
xchg
or
cld
dec
mov
int3
lods
movb
mov
mov
fcmove
cmc
leave
cmp
pop
nop
sub
lahf
mov
adc
nop
adc
lock
std
inc
pop
push
sub
gs
shll
stc
sub
jnp
aas
add
incl
push
rcrb
cmp
mov
inc
cmp
loop
stos
insl
mov
mov
mov
mov
and
sbb
popf
jns
xchg
test
push
pop
add
lods
adc
cmp
xlat
scas
jl
xor
xlat
fstps
inc
mov
mov
mov
leave
loop
fisttps
shl
sub
loop,pt
mov
inc
in
clc
mov
sub
jmp
fmul
imul
sarl
jg
sub
shrb
inc
pop
xchg
sbb
lcall
pop
xchg
push
jns
rcl
fisubrl
inc
imul
in
test
out
sub
sti
les
mov
jg
adc
arpl
je
aas
jae
sub
pop
pop
pop
test
cmp
cmp
jb
gs
jg
rclb
movsb
out
lock
sbb
xor
mov
loopne
std
mov
gs
or
ds
and
cmpsl
xchg
scas
pusha
or
outsl
movsl
test
mov
out
lods
mov
out
xor
int
and
pop
push
sub
xor
push
lea
out
mov
imul
cmp
cmp
and
test
xor
ficompl
orb
ror
lahf
arpl
daa
inc
and
dec
jecxz
lock
or
adc
scas
jo
xchg
mov
xchg
outsb
and
lret
sub
test
jnp
sub
sub
mov
mov
lcall
scas
shll
insl
sbb
lret
sarl
push
push
int
ror
and
push
int3
jbe
loop
cmp
pop
pushf
test
not
lcall
out
cmp
jno
loope
imul
out
pop
jns
sub
jl
mov
mov
out
loopne
sbb
pop
and
dec
pcmpgtw
stos
xchg
subl
subb
xchg
and
loopne
and
jecxz
std
cmpsl
sub
and
in
stc
lcall
inc
arpl
mov
fcomps
fisttpl
sti
push
mov
stos
in
vcvtdq2pd
gs
cmp
push
inc
jnp
mov
mov
push
fdivs
fimull
push
pop
jbe
and
dec
dec
xor
xor
or
or
push
xchg
dec
mov
jb
cwtl
fadds
cwtl
push
mov
jecxz
aas
jge
cwtl
push
loopne
repnz
aad
testb
mov
fidivl
imull
inc
outsl
sahf
rcl
pop
adc
inc
add
and
ljmp
and
sub
or
add
push
adc
enter
sti
into
fcmovne
inc
pop
mov
in
inc
push
subl
adc
outsl
inc
dec
aaa
in
pop
shlb
push
cmp
add
sbb
inc
lret
ds
stc
lret
aad
aad
leave
int
jge
mov
scas
and
test
nop
xchg
aad
bnd
sbb
fistps
aam
mov
inc
int
push
lcall
insl
fldt
xor
dec
dec
push
aaa
testl
dec
add
xor
lahf
cmp
or
fcoms
cmp
inc
fcompl
xchg
loopne
pop
and
xchg
xor
mov
dec
rorb
nop
lret
xchg
lds
mov
test
cmp
add
out
iret
inc
aas
push
and
mov
pop
stos
ret
mov
pop
out
sub
sahf
push
or
pop
xorb
js
push
jle
ret
cmp
icebp
jmp
out
fadds
sub
scas
pop
enter
fistpl
dec
mov
mov
mov
jb
vpaddb
or
jge
ret
lock
arpl
mov
and
jnp
sub
test
xlat
dec
js
mov
rcrl
inc
aam
mov
mov
dec
cli
cmpsl
das
mov
push
pop
cmc
or
cmpsb
dec
ss
cmp
mov
aas
add
inc
rcrb
lea
cmpsl
int3
xor
mov
xor
andb
int3
xchg
call
test
pop
inc
aas
stos
outsb
iret
and
add
cld
pushw
subb
mov
repz
jp
sbb
push
fsubrp
sbb
push
dec
lods
push
or
pushl
inc
xorl
mov
pop
mov
cltd
cmp
je
psllq
cmp
push
subb
dec
inc
jae
mov
sub
ss
cs
pop
outsb
cmovl
loope
mov
mov
mov
mov
adc
aam
and
sub
and
or
stos
cmpsl
sub
mov
cltd
rcrb
sar
aas
adc
mov
xchg
inc
jno
mov
dec
les
cmpsb
jo
xchg
push
cmc
push
and
cltd
xchg
xorl
sub
addr16
hlt
psubb
mov
pop
sub
inc
scas
adc
repz
pop
cmp
cld
push
idiv
xchg
stos
out
aam
incl
mov
mov
push
addr16
cmp
xchg
std
stc
add
daa
xchg
jns
xchg
fisubrl
dec
dec
out
sti
loopne
ja
pushf
fsubl
or
int
out
xor
clc
jnp
fdivl
dec
cmp
orb
pop
pop
lret
mov
pop
iret
aas
ljmp
or
and
jns
xchg
sbbb
mov
scas
movsl
xchg
cmp
daa
add
loope
mov
sub
push
mov
repz
mov
xor
stos
iret
sub
shlb
push
in
xchg
andb
xor
lods
xor
es
adc
or
arpl
mov
mov
pop
int3
jno
or
ss
je
incb
pop
aam
mov
pusha
movsl
movsl
and
sahf
add
add
sbb
inc
aam
mov
imul
divb
shr
in
dec
ds
das
loopne
push
aas
out
push
ljmp
rcll
loope
ficompl
cmp
pop
lret
xchg
lods
adc
stos
fisubrs
mov
jmp
pop
xchg
pushf
es
aam
mov
sahf
xchg
movsb
pop
mov
cmp
andb
inc
mov
call
xchg
lods
ret
daa
xor
mov
test
sub
aaa
in
lret
xchg
sub
hlt
cmp
xor
mov
mov
popa
aas
in
jnp
mov
lea
stos
jecxz
dec
xchg
in
pop
mov
addr16
mov
sti
clc
data16
mov
push
test
cmpsl
out
insl
insb
pop
xor
aam
xor
fcoml
dec
mov
movsl
out
cmpb
repnz
xchg
insb
pop
std
inc
negb
es
push
fimull
xlat
dec
stc
or
ret
lock
enter
mov
out
fs
push
push
xlat
fbstp
jae
mov
dec
ljmp
std
das
mov
ljmp
cli
xchg
xchg
add
arpl
pop
mov
pop
addr16
add
sbb
imul
mov
mov
enter
int
movsb
push
or
or
sbb
and
mov
std
fidivs
movsb
add
cmpsl
in
lahf
in
jns
dec
and
xchg
jb
push
push
insl
loope
cmp
adcl
and
xchg
dec
mov
int3
lods
sbb
mov
aas
fidivrs
rolb
roll
adc
inc
mov
xor
lcall
dec
test
xor
imul
mov
call
jmp
cwtl
test
insl
iret
pop
add
dec
mov
or
xor
jnp
fldcw
adc
ret
inc
addb
xor
jp
out
push
scas
cli
lahf
les
lods
scas
sub
aad
pop
sti
adc
repz
inc
mov
insb
dec
add
les
and
pop
stc
or
push
cmp
push
mov
jecxz
popa
push
sbb
int3
cmp
movsb
mov
imul
popf
out
push
jg
xor
xchg
jnp
mov
cmc
add
bound
cltd
mov
fldl
sbb
clc
lret
out
adc
dec
push
sub
push
or
roll
outsl
aam
shll
loope
xorb
fstl
scas
mov
dec
mov
call
mov
mov
mov
mov
je
xor
jo
jmp
jp
or
xchg
lods
mov
xor
sub
rep
mov
inc
clc
push
in
mov
add
push
sub
pop
push
cmpb
fdivl
inc
cltd
or
stos
inc
xchg
insl
pop
pop
cmp
dec
test
mov
sarl
loop
sub
jmp
push
cli
and
sub
cmpsl
jnp
adc
iret
enter
insl
imull
pop
cli
lss
outsl
sarl
and
pop
enter
inc
mov
sbb
ljmp
mov
push
mov
jb
daa
sub
adc
fwait
lock
in
rorb
mov
xchg
cmpsl
addr16
inc
mov
mov
push
insb
movsb
add
pusha
sub
and
in
dec
xor
mov
cld
scas
or
xchg
adc
faddp
add
dec
xor
imul
or
test
stos
add
loope
mov
es
inc
fildl
shrb
out
mov
aam
aad
cmp
adc
push
cmp
pop
mov
xor
lret
orb
push
sarb
cmp
ficompl
mov
mov
pop
push
and
das
gs
aas
or
dec
mov
adc
cmc
pop
dec
and
lds
add
inc
xor
mov
mov
xor
ret
xchg
cld
scas
outsb
scas
or
mov
xor
add
sbb
lock
in
add
jnp
jecxz
rolb
movsw
xor
mov
es
lret
ret
mov
cli
aam
sar
das
xor
cmp
push
std
inc
mov
loop
int3
mov
cmp
adc
int
lea
movsb
insb
dec
cmp
xor
ljmp
adc
xor
lret
lods
mov
andl
push
hlt
jno
sub
call
cs
add
mov
jo
ja
mov
pop
push
ja
mov
xor
repz
pop
cli
scas
cmpsb
scas
pop
daa
je
mov
out
filds
xor
dec
or
das
add
int
sbb
push
mov
mov
aam
sub
mov
rorb
pusha
subl
sbbl
cmp
push
test
add
pop
adc
pop
add
jecxz
xor
jbe
lds
pop
leave
inc
and
and
std
add
pop
test
add
jb
inc
adc
lea
pop
cmp
imul
movsl
ja
jb
out
add
sysexit
cld
adc
frstor
adcl
je
mov
or
and
imul
les
shlb
and
loopne
repnz
mov
fldln2
bnd
fwait
push
jo
lret
pop
push
fimull
lods
pop
roll
and
jno
inc
lahf
sbb
loopne
xorl
jae
lret
mov
in
mov
add
mov
dec
jle
mov
arpl
sbb
lret
in
push
nop
and
jecxz
fistpll
in
sahf
push
mov
int3
std
icebp
jb
call
aam
cmc
gs
repnz
mov
mov
push
add
xchg
leave
xor
adc
stos
pop
ljmp
lods
es
adc
cltd
ljmp
xor
sbb
add
fs
jno
add
loopne
mov
pop
lods
shlb
push
pop
ljmp
add
or
out
inc
rcll
pop
sbb
xor
fisubl
jnp
adc
aaa
lock
jmp
movsb
lds
add
push
dec
stc
sbb
lret
mov
sti
sbb
flds
pop
jb
adc
fs
xorl
jno
lret
dec
cmpxchg
or
add
inc
xor
xchg
add
lcall
inc
inc
bound
in
lcall
pop
and
daa
fdivp
pop
js
cmp
mov
and
scas
jmp
ret
jo
fadd
shlb
xchg
push
mov
popf
test
int3
test
cltd
mov
call
cmp
jg
inc
and
mov
inc
jo
or
push
xor
jl
add
jmp
add
fucomip
mov
insb
in
in
jno
mov
test
adc
mov
loop
rcr
lods
js
or
inc
jno
ret
push
iret
fmuls
out
out
sahf
or
cmpsl
jp
and
pop
mov
adcl
lods
shrl
adc
jge
lret
or
stos
or
mov
mov
loop
pushl
popa
xor
fisubrl
xor
out
das
or
pop
out
pop
xchg
out
dec
mov
adc
jb
cmp
jno
sbb
fisubrl
pop
pop
stos
sub
rolb
pop
mov
iret
xchg
jle
jno
icebp
xchg
lods
mov
inc
xor
pushf
mov
inc
jl
mov
mov
mov
test
jecxz
sub
mov
rcl
sbb
jle
enter
sub
cwtl
mov
and
adc
divl
out
mov
arpl
out
std
sahf
lcall
test
jae
out
cmpsb
shlb
pop
pop
imul
pop
pop
sbb
inc
push
testl
xor
jge
cld
imul
dec
push
mov
icebp
add
cmp
adc
outsl
sub
imul
push
mov
mov
inc
jmp
xor
xor
sub
ljmp
push
mov
jb
cld
enter
or
pop
loope
jecxz
call
rcrl
lret
xor
mov
mov
xchg
orb
push
into
inc
or
ds
data16
lret
jns
xchg
xchg
addr16
out
cmp
push
xlat
cmp
into
jne
scas
sub
nop
push
sarb
xor
mov
sarb
shll
xchg
jmp
push
and
or
xor
idivb
pop
mov
xor
and
pop
push
sarb
push
repz
push
sub
stos
push
jo
dec
pop
ret
cmpsl
add
inc
add
movsl
out
inc
adc
mov
adc
jecxz
ret
jns
inc
cmp
mov
jnp
pusha
outsb
xor
mov
in
xor
aam
sub
mov
push
sbb
add
test
cwtl
mov
jno
inc
dec
aaa
pop
aam
sub
fstpl
outsb
cmpsl
cli
push
xchg
push
sbb
jbe
arpl
mov
pop
push
push
aaa
dec
ljmp
jmp
and
adc
jns
push
adc
cmp
or
insb
out
or
xchg
in
fisttpll
jl
or
push
dec
jl
jnp
jae
sbb
lret
scas
mov
pusha
filds
and
pop
xor
addr16
jle
ds
xor
mov
lock
data16
jle
or
loop
sub
mov
ds
xor
bound
xchg
psrlq
sbb
xlat
and
adc
insl
xchg
enter
xchg
add
push
jnp
fisttpl
pop
repnz
out
cmc
in
cld
mov
dec
ret
lods
addr16
pop
addr16
daa
lea
cld
jb
fistl
pop
es
mov
pop
sbb
or
test
inc
inc
fcmovu
dec
dec
cmp
les
mov
lret
aaa
jo
into
push
fmull
scas
push
inc
sbb
pop
pop
jp
or
out
mov
mov
in
sbb
cmpsl
sbb
fcoml
mov
cli
xchg
add
xor
push
or
fsub
adc
adc
mov
pop
fs
push
into
out
inc
dec
fcom
inc
outsb
cmp
jb
mov
push
mov
add
mov
lods
mov
and
xlat
or
or
push
mov
fldt
orl
sub
push
adc
push
fwait
and
movsl
mov
nop
and
aam
dec
jb
inc
xor
out
dec
pop
repnz
in
fdivrl
fdivr
inc
lahf
out
dec
movsl
stc
les
cs
mov
jle
ja
sub
testb
cmpsb
mov
movsb
mov
inc
nop
add
pop
lea
inc
or
loopne
ja
icebp
jno
loope
jb
int3
xchg
push
xlat
jl
cmpsl
pop
cmp
jge
daa
mov
out
xlat
pop
ljmp
fnsave
xor
scas
flds
add
imul
add
mov
fwait
mov
dec
scas
push
sub
aam
jge
jnp
ljmp
out
clc
adc
push
jbe
xchg
or
mov
imul
or
dec
pop
dec
push
fbstp
mov
loope
cwtl
nop
push
mov
int
and
dec
sbb
enter
mov
sbb
add
xchg
xor
mov
xor
cmpsl
mov
xor
push
jb
cmp
stos
sub
movb
arpl
mov
pop
xchg
es
push
aas
xor
inc
sub
lcall
or
pop
jl
cld
jmp
cmp
stos
add
pop
test
mov
in
dec
imul
pop
aaa
fwait
inc
fstl
ror
gs
mov
shll
fwait
daa
jge
imul
mov
das
xorl
repz
and
rcrb
imul
dec
mov
push
lcall
clc
imul
dec
sti
adc
xlat
enter
mov
mov
mov
jmp
sbb
pusha
sub
mov
inc
xchg
cmc
jp
xchg
jg
andl
and
andl
xchg
or
sbb
sbb
xchg
fwait
xchg
xchg
push
pop
adcl
mov
xor
repz
mov
mov
pop
cmp
mov
inc
sub
dec
push
cmp
and
es
push
add
outsb
repz
stc
out
lea
mov
pusha
xchg
cmp
adc
jno
pop
adc
mov
stc
lcall
mov
cwtl
js
pop
cmp
push
cwtl
sti
mov
filds
add
mov
fcoms
or
hlt
jb
ljmp
movsl
and
or
pusha
lods
sbb
mov
cmp
cmp
les
push
insl
xor
insb
dec
orl
into
xchg
subb
out
je
loope
out
rorb
pop
push
inc
icebp
push
fsts
add
outsb
inc
jo
cmpsb
test
sbb
adc
ror
pop
pusha
mov
ja
out
jp
jne
dec
bound
push
fcomp
and
in
ljmp
stos
hlt
mov
insb
negl
sub
imul
les
or
pop
int
xchg
sahf
cmp
je
push
xor
in
pop
and
mov
pop
mov
xchg
mov
in
mov
add
test
adcb
je
cmp
jg
xchg
ret
cmpsb
loope
xchg
xor
sbb
shll
movsl
bound
jno
inc
jb
jmp
enter
pop
mov
xor
in
dec
rolb
mov
mov
sbb
sbb
xor
xchg
mov
repnz
repnz
or
mov
jae
lock
sbb
out
rorl
mov
je
loopne
mov
clc
fidivs
mov
mov
adc
mov
mov
inc
mov
lahf
push
rorl
add
mov
fldt
dec
lret
insb
ljmp
aas
xorl
imul
jmp
cwtl
push
js
in
cmp
mov
cmp
and
push
and
push
xor
pushf
push
scas
inc
mov
sbb
lods
push
sbb
sbb
stc
mov
dec
sub
out
ds
pop
in
rcll
sarb
pop
cmpb
push
sub
out
mov
xchg
mov
xor
mov
arpl
cmc
fcomps
xchg
lods
adc
push
popa
ficoms
aam
rorb
inc
xchg
push
pop
je
push
jno
push
aad
out
sub
filds
xchg
data16
dec
js
loope
shr
je
or
movzwl
stc
xlat
js
cmp
insb
push
adc
sbb
pushf
push
aaa
pop
std
pop
outsb
ret
int
sub
aas
fnstsw
clc
push
lock
pop
dec
pop
ja
mov
adc
sub
xchg
push
and
adc
dec
or
inc
mov
or
dec
outsb
mov
add
push
mov
scas
inc
sub
mov
jo
in
dec
push
fcompl
imul
lcall
push
loope
sbb
sub
and
rcl
mov
testb
dec
negb
cmp
mov
ret
shlb
mov
xor
or
out
xchg
sbb
fldt
es
imul
ja
aaa
mov
push
xchg
mov
push
cmp
lea
mov
int3
mov
dec
lods
push
inc
inc
loope
scas
pop
xor
xor
sti
mov
or
stc
pusha
adc
int3
jl
sub
in
dec
jb
and
out
xchg
imull
mov
lcall
lds
in
outsl
fnsave
insl
sbb
int
mov
xchg
leave
sbb
jno
pop
out
imul
or
add
and
test
pop
rol
ja,pt
aaa
xor
sbb
fsubr
lahf
xor
push
rcrl
inc
xchg
test
mov
xorb
js
xor
xor
test
jno
cwtl
xor
testb
and
testl
and
dec
push
movsl
call
fistps
das
xchg
xchg
xor
mov
xor
ret
push
mov
loope
std
xchg
ret
and
fcomps
sbb
sbb
cwtl
push
fdivs
xchg
orl
push
movsb
sbb
xchg
mov
push
dec
mov
pop
cmpsl
mov
mov
insb
sub
dec
orl
mov
jno
jno
jmp
mov
jb
add
mov
add
test
aam
loopne
xor
push
arpl
hlt
stos
xor
nop
in
xchg
lds
js
es
inc
hlt
cs
popf
xchg
iret
mov
adc
inc
in
sub
mov
push
clc
mov
gs
nop
in
jecxz
fcmovbe
add
mov
scas
and
enter
cmp
cmp
and
xlat
aas
push
xor
jns
repz
data16
in
iret
out
xlat
mov
decb
xor
test
jbe
fidivrl
lea
push
lea
loopne
loope
ret
or
inc
mov
rcrb
mov
jmp
mov
mov
push
adc
inc
ret
nop
push
inc
scas
in
fidivrs
add
shll
js
or
or
sbb
push
in
test
les
adc
lods
popf
pop
mov
lret
mov
dec
dec
out
push
cmp
insb
daa
xchg
imul
jae
add
sbb
or
mov
push
dec
adc
nop
push
and
mov
xchg
ret
lret
lret
loope
ss
jge
das
es
mov
in
or
xchg
roll
out
gs
xor
cli
loop
cmp
pop
xchg
or
call
stos
or
js
sahf
stc
push
sbb
sti
stc
mov
sub
iret
inc
jb
aam
push
mov
mov
decl
jo
jle
out
lods
mov
mov
cmp
pop
adc
popf
push
mov
bound
nop
dec
push
jae
cmp
adc
les
inc
andb
xor
jne
cltd
add
cmp
sbb
xchg
pop
xor
sub
or
pop
out
push
mov
pop
xchg
pusha
in
test
enter
cltd
mov
testb
sub
cmpl
aad
cmpsb
test
push
call
and
xchg
filds
cmp
xor
jbe
into
dec
push
pop
xor
sub
filds
idiv
pop
adc
pushf
stc
fstps
xchg
sub
or
mov
mov
fbld
or
xchg
mov
mov
hlt
pop
push
clc
add
pop
daa
mov
cmpsb
xchg
shll
aaa
ljmp
xorb
cmp
mov
dec
inc
push
je
mov
enter
int
push
out
aas
outsl
loopne
lret
rorb
cmp
das
je
shll
adc
dec
pop
sbb
fistl
loope
add
loope
pop
adc
sti
mov
lahf
mov
xor
fdivp
or
rorb
fiadds
enter
push
add
add
push
adc
mov
add
rcrb
inc
fs
dec
lcall
pop
fcompl
movsb
push
pop
mov
sub
mov
loopne
adc
push
push
inc
jns
xor
lds
scas
pop
mov
outsl
hlt
loopne
lock
mov
jnp
mov
out
out
or
and
shll
push
pop
int
imul
inc
cmp
jno
push
scas
or
ffreep
mov
and
inc
inc
jnp
scas
pop
and
cmp
loop
shlb
call
lds
cmp
shll
loope
and
ljmp
scas
mov
adc
sbb
cmp
mov
cli
rorb
in
inc
or
jne
or
mov
icebp
outsb
cli
add
test
sub
jge
cltd
inc
xchg
jp
andl
cmp
or
or
jle
es
push
into
jp
lcall
dec
adc
fdivl
pop
or
mov
cmc
adc
insl
frstor
adc
aas
fwait
jne
aaa
and
cld
mov
lcall
fisttpll
out
mov
sbbb
xor
fcomps
sti
xchg
push
out
sub
es
sub
jns
xor
or
lretw
ljmp
sub
flds
aam
sbb
lock
sub
lods
mov
or
pop
add
cmp
sub
jge
sti
add
xchg
adc
out
ret
cmpsl
sub
fdivp
pop
cli
and
jb
int
imulb
in
jns
inc
jg
aaa
cmpsb
xchg
mov
sub
scas
lea
andb
imul
mov
popf
int3
push
mov
scas
cld
pop
mov
pusha
scas
fnstcw
into
push
xor
cmp
js
mov
test
cltd
leave
imulb
ret
loope
add
jb
cmpsl
adc
addl
mov
ds
pop
and
push
sbb
ret
push
movsb
mov
mov
jge
xchg
jg
inc
sahf
pushf
and
test
and
jg
pop
inc
jg
fstl
mov
stos
mov
lock
in
dec
and
mov
js
fdiv
inc
scas
fmuls
in
popf
jno
enter
es
sbb
jge
add
xor
inc
jae
ljmp
sub
sbb
push
icebp
lcall
stc
fs
inc
shll
jp
xor
testl
in
dec
ja
push
enter
mov
repz
xchg
aaa
or
or
insb
sbb
mov
cmpsb
loope
fcompl
daa
pop
insb
fidivl
adc
mov
sub
ja
pusha
push
in
in
imul
jo,pn
sub
subb
and
mov
xchg
ss
pcmpeqd
movb
or
in
add
lcall
jae
test
arpl
cmpsb
cltd
imul
mov
aas
bound
sbb
enter
cmpsb
aas
push
dec
or
aas
adc
fiaddl
gs
loopne
cmp
cli
inc
and
inc
loopne
xor
fucom
jno
push
lret
cmc
fidivl
push
mov
pop
ror
loopne
mov
loopne
xchg
mov
mov
pop
dec
clc
jae
xchg
or
inc
imul
std
cmpsb
cmova
and
pop
rcr
jbe
push
aas
pop
sub
fstpl
add
ds
fdivrs
pop
sahf
jg
out
mov
jo
je
mov
test
xor
inc
xor
mov
daa
in
jmp
ja
je
jp
mov
mov
xor
jmp
cmp
stos
xchg
dec
fisttpl
movd
inc
inc
cmpsl
or
or
or
jbe
or
mov
leave
sub
sbb
ds
pop
or
fwait
push
xor
in
ds
mov
repz
sbb
pop
fs
sahf
dec
mov
lret
out
inc
data16
int3
gs
xchg
lea
pop
out
sbb
pushf
movsl
lahf
adc
nop
jnp
loopne
out
mov
cwtl
movsb
mov
in
xchg
xchg
or
out
mov
jbe
imul
push
add
mov
repz
xor
in
xor
insl
idivl
fwait
pop
js,pn
sub
and
lcall
inc
flds
mov
mov
movsb
inc
out
jb
jl
arpl
jne
push
push
jg
xchg
dec
popf
xor
addr16
sti
xchg
mov
fcoml
sbb
push
pop
cmc
mov
xlat
push
outsl
ds
xchg
in
movsl
movsb
imul
fimuls
movsb
dec
and
cmp
jne
jge
pushf
fwait
aam
inc
inc
jns
add
dec
push
fnsave
ds
ds
cmp
and
push
or
xor
push
lock
inc
loope
ljmp
cmp
sbb
ljmp
dec
fs
inc
inc
loopne
inc
pop
adc
imul
inc
cmp
cmp
mov
aaa
pop
das
sub
push
int
jo
jno
xchg
sarb
ret
jge
arpl
inc
pop
jge
or
sbb
sahf
lea
jg
inc
push
xor
lret
jne
mov
sbb
iret
adc
shl
stos
adc
adc
aad
push
or
mov
in
scas
and
cmpsl
dec
mov
lret
mov
scas
dec
adc
arpl
ficomps
cmp
ss
cmc
push
jl
mov
pop
arpl
popf
imul
stos
jl
xchg
jp
pusha
loopne
sbbl
adc
fisttps
inc
jl
movsb
roll
inc
jb
xchg
addr16
xchg
sarl
jne
jmp
dec
xchg
mov
dec
inc
imul
xchg
test
lret
inc
insb
stos
mov
or
or
into
mov
jp
pop
loopne
jae
or
loopne
cmc
mov
nop
das
enter
loope
pop
int3
pop
push
push
sbb
std
mov
or
sbb
xchg
or
push
cmp
pop
add
inc
mov
fcmovnu
xchg
add
shll
or
and
mov
sbb
ja
lret
lock
cmp
mov
jne
pop
into
mov
mov
loope
in
push
jae
inc
add
scas
dec
sarl
rcrl
dec
fnsave
cmpsb
dec
push
iret
lock
ds
test
sub
and
mov
mov
pop
xorl
ret
idiv
mov
loop
cmp
in
mov
mov
push
sbb
mov
inc
stc
adc
xchg
je
ficompl
pop
sbb
xchg
adc
lret
aam
into
pop
out
rcll
adc
jb
test
push
fsubs
cmp
icebp
xor
bound
inc
bound
adc
scas
cltd
add
sub
andb
out
push
idivb
ljmp
or
data16
or
mov
jbe
mov
push
andb
or
mov
sbb
push
lahf
xchg
sbb
push
and
lret
test
sub
or
addr16
dec
adc
adcb
add
test
push
jmp
cltd
jo
dec
add
ret
jle
in
pop
xchg
std
pop
sub
testb
aaa
inc
ds
pop
push
ljmp
arpl
sub
int
xchg
push
cmp
stc
test
push
pop
inc
jae
xor
jns
cmp
pop
cltd
fdivs
les
repnz
inc
es
fwait
mov
outsb
repnz
push
incl
cltd
adc
stc
inc
sbb
es
je
mov
icebp
mov
call
mov
pop
lea
and
adc
test
cmp
mov
cmpsb
aaa
lahf
or
add
add
decb
ljmp
jb
sub
rorb
adcl
cmp
xchg
lea
lret
add
xchg
pop
add
mov
pop
push
decb
or
stos
and
xchg
cmc
push
mov
shll
neg
jmp
sub
or
ret
int3
cwtl
pop
leave
mov
aaa
jmp
test
or
cltd
sub
stc
aas
sbb
pop
imul
inc
jns
sbb
push
jne
cld
popf
add
shlb
movsl
fs
push
mov
dec
rclb
dec
jns
mov
jbe
add
xchg
mov
lock
add
aaa
mov
sahf
mov
imul
shrl
aad
xchg
sbb
push
push
fsubr
xchg
push
mov
cltd
jmp
imul
rorl
xor
inc
jg
pop
xor
cmp
and
repz
inc
xchg
repnz
movsb
std
ds
add
je
out
push
or
fnstenv
pop
lcall
insl
sub
js
mov
cwtl
jne
es
cwtl
add
imul
fsts
neg
loop
gs
clc
push
sub
repnz
xchg
fiaddl
and
pop
ficompl
cmpsl
mov
sti
js
add
ja
loopne
add
or
decb
inc
popa
and
test
inc
in
xlat
cmp
add
adc
push
jge
jno
outsl
push
shll
dec
inc
adc
add
cmp
mov
xor
in
pop
outsb
sub
andl
fsubrs
sahf
jno
or
out
mov
cmpsb
jl
cmp
add
les
mov
push
movsb
pop
lods
aam
push
or
imul
jge
xchg
repnz
jl
sub
dec
pop
dec
add
icebp
les
pop
xchg
test
sub
aad
add
adc
add
push
enter
xchg
sti
push
ret
mov
iret
rcll
fists
rolb
movsb
lods
jb
subl
dec
in
out
aaa
into
inc
mov
fwait
test
push
mov
dec
fdivrl
xchg
sbb
jp
fs
dec
popa
fisubrs
call
jp
repnz
mov
sbb
js
xchg
inc
aam
dec
push
cmp
mov
or
jge
sbb
mov
mov
cmp
rcl
and
dec
in
dec
lret
repz
in
add
test
xchg
cmpsb
mov
jecxz
adc
data16
pop
or
mov
xchg
sahf
cs
insb
imul
xchg
pop
sbb
inc
sub
les
call
jno
push
pop
popa
and
mov
mov
add
or
push
cmp
and
sub
leave
mov
xchg
andb
or
aas
and
and
xor
cltd
std
mov
test
data16
ljmp
out
ds
mov
xchg
stos
rcr
addr16
dec
push
push
lret
jne
aas
rcl
add
repz
jp
cmp
dec
and
add
push
ljmp
xchg
ds
push
mov
hlt
bound
push
add
andb
in
jns
pop
or
subl
repnz
jb
xchg
addr16
lods
ljmp
push
inc
pushf
mov
cld
mov
and
xchg
xorb
dec
jle
mov
xchg
arpl
xchg
in
pop
adc
sbb
cmc
inc
lods
mov
shr
xor
sub
push
mov
cmp
cmpsl
sti
hlt
xor
imul
call
cmc
aad
or
dec
pushf
loope
and
mov
and
popf
pop
adc
push
pop
addr16
lock
lods
fcoms
jns
movsl
mulb
cmp
xor
push
xorb
jo
jg
insb
pop
fidivs
lret
and
das
fstpl
inc
sub
insl
pop
add
xchg
push
popa
add
das
mov
popf
test
aaa
push
jne
or
jb
aaa
iret
jmp
mov
test
fidivs
jl
adc
sbb
ds
and
xchg
fdivrp
loopne
adc
add
in
popa
test
cmp
daa
je
in
cmp
call
mov
inc
mov
add
push
cld
xchg
sub
lea
mov
roll
and
fs
stc
rcrl
mov
jmp
imul
or
call
cmp
inc
pop
sbbb
stos
mov
sbb
pop
mov
push
stc
movsb
ds
out
inc
jb
gs
jmp
mov
pushf
mov
xor
sub
or
loop
push
test
inc
cs
imul
push
pop
lods
mov
dec
mov
jg
adc
or
andb
and
sbb
orl
mulb
xor
dec
add
cmp
lahf
cltd
inc
jne
mov
fxch
aas
sar
adc
push
adc
pusha
insl
js
repz
adc
rcl
mov
stos
insl
bound
inc
rcr
sub
je
mov
pop
ja
jo
xchg
or
adc
mov
fldenv
arpl
inc
movsl
jbe
jne
cmpb
inc
mov
rcr
jmp
cs
lock
sub
and
push
mov
std
cmp
mov
int
and
add
in
adc
push
bound
add
js
ljmp
aas
sub
enter
lret
pop
sub
and
mov
add
jmp
cmp
rclb
fmuls
push
mov
pop
adc
sub
fisttpl
jne
lock
mov
mov
out
sar
add
inc
mov
cmp
sub
in
mov
andl
negl
shrl
or
lret
inc
jle
scas
fidivrl
insb
icebp
pop
sbb
jo
mov
cmp
mov
arpl
jo
inc
clc
or
and
insl
leave
lods
lahf
and
xchg
int3
xor
leave
repnz
outsl
ret
cmp
inc
push
jle
sbb
dec
data16
add
popf
outsl
jp
mov
mov
xchg
xchg
jnp
in
or
aam
loope
mov
add
push
push
cwtl
dec
movsl
xor
rcr
xchg
jb
daa
sbb
iret
push
js
in
pop
mov
icebp
and
jo
imull
cld
pop
push
adc
mov
mov
and
movsl
lahf
stos
xchg
shrl
xor
stos
mov
test
fmuls
sbb
jmp
in
bswap
sahf
cmp
lods
mov
subl
mov
mov
pop
lods
push
loope
adc
xchg
mov
fmull
js
dec
loop
ljmp
mov
rol
cmp
jne
dec
sub
adc
aaa
ficompl
out
add
jge
js
pop
movsl
ljmp
fists
test
je
rcrl
clc
daa
or
enter
fs
add
pop
and
pop
fisttpll
cld
lods
push
mov
cltd
cmp
push
mov
push
pop
mov
mov
ja
xor
icebp
pop
call
ret
mov
shr
xor
imul
fisubl
fdivr
andb
mov
icebp
push
lods
pop
sub
jo
loop
cmp
shll
lcall
cmc
aad
mov
rorl
mov
push
cltd
js
inc
pusha
out
lods
cwtl
imul
scas
and
and
jmp
dec
rcrb
adc
jns
test
mov
and
mov
insb
xor
out
ljmp
pop
dec
addr16
cs
sub
arpl
test
mulb
test
add
mov
and
cmpsb
inc
bound
negb
enter
fcoms
xchg
push
sbb
xchg
lea
inc
lds
dec
xchg
xchg
repz
add
jb
xor
loop
clc
ret
sbb
and
add
sbb
pop
rorb
sub
adc
cmp
jle
xor
jle
jg
and
sub
cmp
xchg
mov
aaa
dec
push
xchg
ja
fdivrl
push
mov
daa
mov
adc
and
fldlg2
rorl
xor
aas
inc
pushf
lods
pop
nop
stos
fadd
mov
sbb
addl
ficompl
pop
scas
xchg
repnz
push
mov
stc
fcoml
es
test
pop
popf
lods
xchg
push
std
rcrb
jecxz
insl
scas
sahf
out
ljmp
clc
nopl
mov
mov
dec
xor
js
loop
mov
bound
add
lahf
add
das
pusha
jmp
mov
aas
addl
mov
cmp
les
mov
test
cld
mov
incl
or
push
xor
adc
adc
insl
mov
scas
mov
aaa
pop
insb
js
icebp
push
daa
jle
jns
cltd
setle
shl
mov
test
push
leave
dec
push
lods
mov
gs
inc
les
imul
pop
xlat
cmp
adc
into
inc
add
inc
hlt
syscall
call
or
push
pusha
stos
jno
cmp
icebp
popa
jl
jg
dec
sub
jo
out
js
add
pop
xchg
xor
mov
and
sbb
popa
out
mov
adc
outsb
add
jo
das
pop
shll
push
stc
cmp
dec
lret
sub
xor
nop
clc
inc
adc
pushl
cmpsl
ret
idivl
sbb
push
push
and
push
aas
flds
sbb
mov
out
push
test
push
sbb
pop
int3
push
fistl
test
push
xor
mov
push
ljmp
push
xor
clc
fimuls
push
mov
jae
ret
and
sub
adcb
bound
js
std
fstps
sub
sbb
test
test
push
and
jo
js
mov
pop
sbb
je
jb
loopne
sub
push
dec
adc
leave
mov
leave
jno,pn
mov
lret
insl
jnp
in
mov
outsb
inc
adc
sbb
enter
insb
and
outsl
fstpt
movsl
mov
adc
add
mov
loop
outsb
inc
and
mov
pop
push
pop
jae
jg
inc
mov
lea
push
fiadds
mov
and
icebp
mov
mov
sbb
jmp
xor
aaa
js
mov
push
xor
mov
popa
sub
jge
aas
sub
sbb
mov
shrb
ds
pop
enter
jbe
dec
xchg
fsubs
shrb
sbb
add
and
pop
fs
and
outsb
and
inc
pop
xlat
add
pop
sbbl
xchg
jp
rcr
jae
andb
repz
sbb
je
outsl
arpl
and
xchg
mov
adc
xor
fmuls
pop
cwtl
push
aad
xor
lahf
push
lret
lods
ljmp
enter
incl
push
call
jl
cmp
pusha
ret
and
aam
pop
aad
push
adc
sub
movsb
and
dec
mulb
shrl
xchg
mov
jl
sbb
cltd
mov
and
pop
out
out
xor
jo
mov
rol
jne
cmp
movsb
pop
pop
movl
jle
or
gs
xor
jo
jle
sbb
stos
ret
mov
pop
xor
cmpb
stos
cwtl
mov
and
xchg
sbb
xlat
fxch
jno
rol
dec
ds
clc
aas
nopl
or
pop
je
arpl
pop
cwtl
sub
cmp
mov
pop
imul
mov
addr16
jne
mov
mov
push
sub
lahf
jmp
or
fiadds
fdivl
stos
pop
pop
mov
icebp
xchg
out
jge,pn
dec
xchg
pop
cmp
arpl
lods
int
ror
adc
adc
push
or
cld
aam
push
mov
test
jecxz
daa
push
pop
push
orl
jge
aas
sub
jnp
in
rcll
mov
pop
fistpll
repz
mov
or
test
out
cld
aaa
pusha
pop
xchg
negb
test
in
add
mov
test
dec
mov
add
sub
sub
loope
mov
dec
push
sbb
add
or
out
jne
clc
pop
sub
inc
pop
adc
mov
shll
out
int
mov
in
jb
mov
xor
xchg
cmp
sub
xorl
inc
frstor
out
lods
push
inc
push
xor
xchg
pushf
imul
inc
xor
adcb
ss
and
repnz
in
inc
xchg
inc
stos
das
adc
ret
mov
pushf
cld
xor
sti
movsb
leave
mov
dec
je
jp
or
daa
popa
cmp
fbstp
and
sbb
adc
jb
add
arpl
and
out
je
sahf
repz
cli
repz
repz
rcrl
or
cwtl
mov
xorb
pop
inc
movsb
or
jmp
pop
or
stc
sbb
adc
or
andl
cwtl
daa
push
ljmp
cmpsl
orl
repnz
insl
or
into
pop
adc
and
pop
ret
dec
xchg
mov
mov
outsb
fstpt
sub
xchg
or
ja
les
mov
into
sub
jne
aas
xor
dec
mov
insb
out
mov
mov
jle
in
test
xor
icebp
push
lods
mov
ret
mov
mov
enter
pop
pop
cmp
movsbl
add
sbbl
sti
mov
loopne
or
xchg
ljmp
lret
xchg
xor
adc
dec
xchg
adc
lds
adc
rorb
lods
loopne
movsb
out
daa
cltd
jmp
mov
and
or
add
mov
cmpsb
push
mov
mov
and
dec
mov
fimull
fs
icebp
jle
mov
cmc
pop
leave
test
es
insl
dec
lret
loope
sbb
mov
popf
sub
sub
xchg
int3
std
repz
push
cld
xlat
mov
je
dec
sub
jg
loope
pop
and
test
inc
ljmp
or
hlt
mov
test
xchg
test
lods
adc
jmp
cmp
mov
mov
and
sbb
xchg
mov
jg
rcl
cmp
adc
fistl
in
imul
jno
xchg
cmc
dec
dec
mov
dec
das
dec
push
mov
push
push
jb
in
mov
data16
dec
sti
jb
jb
scas
sub
xchg
push
push
pop
sub
adc
lret
test
adcl
inc
pusha
mov
or
ret
mov
mov
mov
push
ja
scas
insl
movsl
dec
outsl
int
push
les
test
incb
leave
inc
mov
jmp
or
mov
popf
xchg
scas
add
outsl
repz
sbb
shrb
js
daa
nop
and
mov
in
ds
pop
inc
orl
mov
sbb
subl
iret
sahf
mov
dec
jb
cmp
or
add
sub
js
mov
mov
addr16
jns
lds
push
xchg
mov
dec
loop
ds
int
lock
jnp
sbb
lods
test
pop
add
scas
lret
loope
fwait
sub
dec
and
out
jae
cmp
daa
out
ja
idivl
insb
stos
mov
xor
and
bound
or
sub
arpl
mov
jmp
xchg
fimuls
or
test
idivb
inc
cwtl
les
pop
pop
pop
inc
out
sbb
cmp
pop
jge
jo
xchg
jo
ja
dec
out
cmp
cli
xchg
mov
xchg
call
cmp
xchg
dec
arpl
lret
or
mov
aaa
xlat
pusha
xchg
mov
test
cmp
mov
xor
insb
jl
and
sbb
adc
lcall
dec
insb
xchg
cld
lea
popf
out
stc
push
ficompl
cmc
ljmp
cmc
out
fists
adc
dec
fsubs
imul
call
fxam
aam
mov
daa
push
cmc
jl
or
mov
in
ret
xor
out
adc
inc
shlb
or
out
jno
stos
sbb
fsubl
or
pop
jo
hlt
sbb
hlt
mov
jge
dec
and
das
ja
jo
xor
lea
mov
push
inc
fnsave
push
xchg
and
in
push
loope
push
js
push
mov
lcall
fxtract
loope
test
test
repz
lods
dec
cld
mov
push
sub
scas
out
repnz
notb
testl
mov
aas
xor
jae
je
or
les
mov
push
mov
inc
xor
push
xor
iret
popa
push
and
jge
mov
mov
xor
add
test
jg
out
sbb
pushf
movsb
lods
daa
scas
sahf
inc
dec
in
imul
dec
dec
stc
mov
cs
lret
pushf
jle
cmpsl
and
sub
fisubs
loopne
loop
pop
leavew
mov
test
add
lahf
lea
jbe
dec
fwait
sbb
popa
pop
dec
popf
stos
call
test
popf
les
je
cmp
xchg
pop
add
or
or
bound
pop
aam
pop
hlt
insl
data16
xor
mov
pop
leave
in
push
push
roll
cmpsl
push
enter
mov
lret
push
inc
jns
pop
adc
cli
outsb
iret
mov
aad
fbstp
mov
mov
cmp
xor
test
inc
sti
xor
loopne
test
arpl
int3
fisubl
ljmp
jbe
cmc
and
rcrl
jmp
push
jo
add
push
pop
dec
dec
inc
sbb
fmuls
jle
popl
cmp
cmp
jo
repz
and
in
xchg
mov
inc
jmp
mov
and
dec
icebp
xor
pop
addr16
inc
dec
mov
xor
dec
btl
adc
fbld
mul
jnp
and
repnz
mov
cmpsb
sahf
sahf
push
jp
lcall
lret
jmp
in
pop
icebp
mov
push
xor
mov
jnp
and
xchg
add
cs
daa
inc
xchg
or
scas
xor
jbe
sbb
test
pop
or
cmpl
packuswb
pop
out
sbb
cltd
jne
xchg
leave
outsb
mov
push
dec
js
aad
and
push
icebp
push
mov
cli
or
aaa
pop
xchg
dec
loopne
mov
xlat
cli
jl
mov
mov
out
xor
imul
jle
jecxz
pop
mov
bound
xorl
push
dec
scas
rorl
mov
into
and
and
test
cmp
mov
inc
adc
fwait
iret
mov
xlat
js
xchg
movsb
aas
mov
dec
int3
xchg
lret
sub
mov
jae
pop
out
fcoms
ja
cwtl
jbe
insb
push
mov
dec
and
leave
or
movsl
repz
shlb
cmc
mov
hlt
leave
and
mov
jae
push
mov
fcmovne
or
pop
jae
add
sub
into
add
pop
mov
aad
jbe
int3
sbb
scas
adc
push
sbb
cltd
dec
cmp
rclb
rorl
mov
sub
int
inc
mov
pushf
pop
xchg
or
movsb
mov
test
lret
push
hlt
pop
push
pop
jno
js
jmp
mov
mov
mov
sbb
pop
inc
cmp
loop
or
pop
fs
stos
push
push
xchg
add
jle
lods
xchg
iret
pushf
arpl
stos
push
test
pop
push
bound
add
adc
in
jl
add
imul
stos
or
push
mov
stos
fdiv
aam
lds
adc
sub
push
fs
cmp
test
das
pop
enter
or
lock
out
xor
daa
xchg
xchg
adc
ret
pushf
xor
xchg
cmp
or
loopne
sbb
int3
pop
and
mov
dec
and
mov
pop
inc
sub
xchg
nop
and
lea
jmp
pop
fsave
mov
test
in
dec
mov
sub
in
sub
popa
mov
insl
mov
xchg
jne
jns
add
mov
cmpb
push
mov
mov
stos
repnz
ds
dec
sub
mov
cwtl
stos
ret
lahf
call
dec
dec
out
fistpll
popa
and
les
dec
out
bound
push
scas
xor
ds
call
out
jb
roll
std
pop
jo
outsl
stc
les
and
sbb
add
mov
loope
jns
xchg
cmp
and
daa
xchg
cltd
add
xor
inc
sahf
imul
push
jl
cli
mov
movsb
call
xor
test
lcall
pushf
rorl
divl
mov
jnp
mov
mov
lcall
jecxz
pop
inc
jge
add
int
dec
xchg
xor
sbb
pushf
mov
test
and
dec
dec
scas
stos
data16
je
pop
mov
inc
repz
pop
mov
out
mov
aad
jns
xor
pusha
and
xchg
insb
fidivl
loope
xchg
sti
cmpsl
sub
out
dec
cmp
sbb
movsb
xchg
dec
std
dec
inc
dec
xor
xchg
out
xlat
out
cmp
push
push
xlat
inc
movsb
sbb
push
ds
stc
jne
sbb
mov
xchg
or
shrd
add
push
les
xchg
xlat
or
inc
cwtl
or
dec
cmp
xchg
jmp
pusha
push
cmp
in
xchg
clc
cltd
sbb
mov
sarb
hlt
inc
sub
sbb
call
and
add
cs
test
dec
pop
xor
xchg
cs
mov
cld
dec
sub
stos
nop
jmp
test
stos
sbb
pop
xchg
mov
incb
lcall
les
imul
adc
push
insl
test
xlat
pop
rcl
flds
in
inc
mov
or
sub
dec
pop
ret
es
sbb
icebp
jne
test
xchg
ds
pusha
mov
and
or
cmp
cmp
bound
je
loop
hlt
push
push
enter
lods
dec
je
outsl
jge
sbb
push
test
push
mov
pop
inc
xchg
cltd
popf
mov
jl
loopne
out
test
pop
push
lcall
aaa
jbe
lea
sub
fcoml
lret
in
mov
call
mov
mov
enter
js
jmp
jl
or
jo
xchg
adc
enter
pop
cmp
pusha
cwtl
push
cmc
cmp
out
xchg
dec
inc
jl
pop
mov
pop
push
imul
jl
rcrl
mov
mov
repz
sub
int3
leave
mov
loopw
xchg
dec
dec
push
sbb
shlb
out
sub
mov
fdivs
xor
and
push
test
fidivrs
int
sub
pop
cmp
mov
inc
repnz
aad
out
adcb
lods
sbb
jo
out
cmp
shll
xor
jnp
push
pop
fcoms
jecxz
inc
and
dec
adc
stc
mov
pop
dec
add
push
cld
xor
ja
dec
lds
sarb
lods
sbb
push
sbb
sbb
fadds
test
pushf
loope
xchg
mov
icebp
push
add
call
push
mov
fsubl
jb
lock
jb
inc
or
xor
or
pop
add
leave
push
cwtl
and
decb
insl
push
in
daa
sbb
hlt
mov
ss
std
jle
or
jle
fcomps
add
cmc
cmp
mov
fiaddl
aaa
dec
iret
repz
dec
or
inc
mov
into
lods
or
das
test
jo
xchg
jbe
jns
daa
adc
pop
aam
shll
inc
mov
xor
mov
pop
jnp
ds
push
in
mov
xor
pop
mov
aad
pushf
xchg
out
or
arpl
dec
mov
mov
rclb
sti
sub
xchg
je
ss
push
out
add
enter
mov
jle
popa
pop
adc
ja
push
jb
in
fs
mov
xor
call
push
mov
leave
pop
cmp
sub
cmp
iret
inc
aas
mov
enter
cmpsl
arpl
or
push
or
add
test
xlat
pop
aaa
sbb
cld
out
inc
push
ljmp
lea
loop
pop
aad
fs
and
hlt
sti
lods
pop
xor
xchg
outsl
sub
dec
jecxz
push
xlat
clc
sub
mov
stc
dec
cmpsb
lahf
fsubrs
xorl
xchg
jae
popf
mov
movsl
pop
sbb
xor
jo
push
mov
pop
push
mov
inc
fdiv
rcrl
adc
push
push
inc
fs
jnp
leave
sub
fadd
dec
int3
je
aam
push
lock
cmp
xor
fs
inc
lea
bnd
or
in
ret
imul
push
push
lds
pushf
or
or
adc
mov
in
jmp
or
mov
jmp
daa
ficompl
mov
sub
bound
arpl
xchg
mov
push
push
xor
and
xor
es
aam
sbb
pop
xor
xor
pop
call
mov
imul
rclb
scas
or
negl
call
pop
pop
push
lret
aad
imul
out
mov
push
lcall
jo
je
das
dec
ja
mov
cmp
rorb
fwait
mov
insl
mov
cmp
hlt
or
add
dec
or
pop
adc
dec
mov
movl
filds
or
mov
shlb
push
mov
test
xorl
adc
lock
push
pop
sbb
fstp
divl
orl
mov
dec
fimuls
xor
cmp
clc
icebp
enter
in
jecxz
je
add
mov
mov
imul
idivb
leave
push
jecxz,pt
dec
xlat
add
rcr
jg
xchg
loope
xchg
and
push
pop
dec
pop
sbbb
sahf
fwait
dec
dec
pop
pop
mov
enter
mov
cmp
cmc
rcrl
mov
pop
jb
xchg
scas
sub
shrb
inc
cmp
cltd
jno
shr
sub
cmp
in
sub
aas
test
add
out
xlat
add
and
mov
shr
mov
outsb
ret
loope
pop
add
shld
femms
add
and
int
inc
and
test
mov
add
loope
jo
fs
dec
lahf
dec
andb
xor
adc
js
lods
cmpsl
jecxz
leave
add
fmuls
roll
test
mov
cmp
inc
xor
mov
cld
lahf
or
cmc
push
jnp
repnz
fmuls
mov
adc
xchg
dec
idivb
mov
stos
leave
ja
sub
or
into
cmc
lret
mov
push
cmp
fisubrl
cld
outsl
dec
sbb
sti
sbb
scas
jp
out
lcall
adc
cmp
pop
and
aas
push
lret
mov
mov
pop
sbb
adc
ficompl
sub
test
imul
iret
fcoms
inc
inc
ss
imul
imul
pop
out
mov
mov
sbbb
mov
sbb
cli
sub
pop
xchg
jns
cmp
sub
bound
push
or
insl
outsb
hlt
and
aaa
pop
dec
push
push
repnz
push
xor
and
int
push
sbb
ret
insl
xchg
jne
mov
je
cmp
fdivrs
nop
daa
in
jbe
add
cmp
lahf
push
inc
sahf
aas
push
sbb
xchg
mov
sbb
mov
jbe
sbb
ficompl
not
ret
mov
sub
aaa
sahf
jmp
mov
test
xchg
nop
jmp
dec
aaa
jge
hlt
lahf
imul
mov
cmc
inc
in
pop
inc
ret
shll
dec
fisttpl
daa
popa
repnz
xchg
aaa
cwtl
adc
xor
lret
adc
adc
dec
add
sub
xchg
push
mov
cmc
rcrb
mov
xchg
mov
xor
xlat
mov
jg
add
scas
out
xchg
andb
out
mov
sti
add
inc
ja
int3
sbb
dec
add
fwait
mov
out
outsl
adc
out
adc
mov
lcall
mov
inc
mov
jne
les
mulb
mov
push
das
inc
xor
xor
lcall
push
mov
int3
sti
imul
xchg
mov
mov
jo
sub
insb
push
mov
js
dec
std
cmp
mov
pop
xlat
pop
mov
xor
stos
inc
enter
nop
mov
cmpsb
sbb
jnp
adc
jns
and
int3
fs
pop
inc
loopne
sbb
xlat
xchg
insb
mov
movsb
sahf
sub
addl
scas
adc
aas
and
test
xchg
loop
and
sbb
pop
test
cli
xor
adc
push
and
fsubr
adc
jbe
data16
clc
jecxz
inc
stos
movsb
xchg
mov
add
cltd
xchg
mov
jle
cmp
xchg
mov
fiaddl
cmp
mov
mov
cs
pop
push
push
rep
sub
cmp
push
cmp
sahf
aad
dec
inc
inc
or
sub
push
xor
fsubl
cmpsl
adc
sub
xchg
push
es
loope
xchg
pop
sbb
in
stos
adc
cltd
sub
xor
pop
outsl
pop
cmp
inc
das
lea
add
repnz
dec
cmp
inc
dec
outsl
aas
mov
jae
leave
jg
icebp
adc
pop
enter
sbb
ja
adc
cmp
jae
adc
daa
adc
xchg
rcll
xchg
lcall
mov
xchg
mov
add
xlat
ljmp
in
mov
xor
xchg
lods
inc
inc
loopne
sbb
and
fbstp
cmp
push
mov
cmp
xor
pop
dec
dec
inc
arpl
lds
mov
sar
jne
xor
orl
inc
sbb
clc
adc
inc
inc
fs
and
out
icebp
shrb
cmp
xchg
mov
fldcw
xor
sub
dec
xor
pop
sub
adc
push
sub
lods
jmp
dec
mov
nop
cld
sub
inc
popa
add
mov
enter
scas
je
std
dec
mov
or
xor
repz
xor
push
leave
add
bound
out
nop
cmp
sub
and
push
mov
cmpsl
mov
cmp
push
lcall
add
int
int3
mov
in
push
dec
lret
and
addr16
das
adc
or
imul
jge
fstpt
cld
dec
jbe
jecxz
mov
or
scas
mov
fwait
add
lret
addr16
test
repnz
stos
roll
movsl
cmpsb
bound
mov
popf
pop
cwtl
fwait
sbb
mov
xchg
lahf
sub
out
stos
jge
outsl
push
cltd
subb
sbb
dec
and
out
jg
sub
cmpl
cmpsl
xchg
ret
leave
inc
push
add
movsb
push
xchg
xchg
je
rorb
ja
adc
adc
std
ret
clc
fs
imul
mov
and
pop
nop
mov
cmpb
sub
or
cli
add
jg
repz
and
fistl
mov
in
push
fbstp
outsb
repz
adc
pop
pop
movsl
shlb
enter
lods
repnz
push
rcrl
adc
stos
into
sbb
mov
cvtps2pi
add
mov
and
test
jnp
out
xor
jns
jne
sub
xor
ret
test
fisttpll
sub
jnp
inc
add
jg
jbe
inc
std
mov
lcall
adc
jg
addl
cmp
lret
out
xchg
xor
pop
cmp
mov
jnp
and
shl
inc
faddl
cmpsl
fstps
pop
popf
sti
std
bound
xchg
xor
test
stos
xchg
sbb
jae
mov
jbe
push
inc
jmp
cwtl
loop
cmove
xor
mov
xchg
sbb
in
aad
or
inc
xchg
mov
inc
jo
das
jns
xchg
or
push
push
xor
cmpsb
jne
mov
jno
xchg
xor
nop
mov
subl
push
add
jecxz
nop
mov
or
mov
lea
inc
pop
int
clc
stc
add
jnp
fs
or
in
mov
mov
fistl
bnd
cwtl
jl
mov
sbb
jp
jno
adc
push
in
jg
or
xchg
shrb
sub
or
ret
push
aam
sub
cltd
pop
jle
push
ret
repz
aad
lds
xorb
fst
sahf
cmp
push
lret
xor
cmp
push
cld
push
data16
fdivr
cs
and
movsb
dec
in
sbb
mov
adc
fs
mov
fsubr
in
ss
cmpsl
sbb
push
xchg
sub
shlb
das
cmpsb
xor
pop
frstpm(287
std
lock
nop
ds
mov
les
xor
scas
int3
adc
push
lods
dec
outsb
jae
sbb
adc
xlat
xchg
cmpsb
out
or
push
repz
fldt
dec
cltd
and
lahf
fsubrs
in
int3
sbb
in
mov
sti
push
xor
loopne
movsb
aad
xor
pop
and
mov
xchg
js
shlb
sahf
sti
loopne
sahf
mov
lock
mov
repnz
popf
mov
xor
push
mov
cmpsl
in
adc
sarl
push
cmp
leave
push
mov
inc
pusha
sub
std
test
adc
repnz
and
out
sbb
fstps
arpl
cmpsl
push
cli
stos
xor
fldt
outsl
mov
daa
or
call
cwtl
out
pushf
cmp
sbb
adc
sbb
pop
popa
lcall
mov
test
jle
mov
rcrl
pop
les
inc
add
mov
or
stos
insl
out
inc
lcall
mov
sub
lcall
rcrb
dec
xor
xchg
std
lea
add
clc
push
adc
inc
pop
mov
fs
out
movsb
adc
dec
aaa
and
test
mov
xchg
push
pop
rcr
sbb
insl
outsb
fldt
pop
movsl
cli
in
add
repz
cmp
test
shrl
jae
dec
or
and
fnstsw
ds
dec
movsb
xor
nop
xchg
pop
mov
test
xchg
sbb
mov
push
jne
mov
int3
in
pop
or
mov
inc
inc
les
adc
rcll
sub
int
dec
out
imul
xchg
inc
clc
mov
add
pop
inc
and
cmp
dec
inc
cwtl
ja
inc
adc
rcr
fimull
popf
insb
rcl
cmp
je
cltd
mov
mov
xchg
adc
aad
repnz
mov
sbb
fistpll
and
push
cmp
or
out
inc
push
testb
bound
mov
clc
jne
outsl
mov
lea
mov
sbb
pop
les
pop
sbb
das
orl
cmp
sbb
mov
jo
fldenv
pop
mov
cmpb
pop
pop
jecxz
sub
idivb
mov
sbb
mov
das
xor
push
sarb
mov
dec
sbb
movsl
and
test
push
dec
pushf
inc
ret
push
fsub
sub
std
mov
inc
mov
test
fadds
cmp
ds
notl
in
sahf
sbb
push
shrb
lret
inc
sahf
rorl
cmp
or
inc
adc
les
xor
push
testb
add
ds
xchg
xor
ret
scas
cmpsb
sub
std
cmp
push
inc
stos
cld
inc
imul
push
loopne
push
rol
cld
pop
mov
jae
out
add
adc
sti
movsb
mov
and
jnp
mov
xchg
add
cmp
subb
lods
ss
mov
xchg
lods
lea
pop
add
dec
test
repz
stos
xchg
mov
lcall
pop
and
and
scas
add
pop
push
cmp
xor
mov
or
push
mov
xchg
ss
imul
cmp
jg
fimuls
mov
je
stc
cmpsb
jp
pop
sub
shrb
mov
xchg
cwtl
mov
mov
cmc
adc
mov
sbb
mov
icebp
pop
mov
div
sbb
push
scas
je
imul
mov
or
push
cld
rclb
push
or
jle
pop
scas
push
dec
xor
or
lea
push
mov
outsb
mov
mov
ss
arpl
inc
inc
enter
mov
cld
sar
dec
int3
cmp
test
bound
and
inc
jnp
lcall
ror
icebp
sahf
mov
push
mov
xor
lods
sub
mov
notl
test
cmc
inc
ljmp
inc
lahf
es
jae
cmp
xor
fldenv
scas
aad
test
vpunpcklbw
cmp
out
mov
jbe
jae
inc
repnz
pushf
sbb
lods
jg
in
xor
cwtl
jns
aaa
incb
sub
icebp
loop
dec
xchg
aad
jbe
cmp
xor
sbb
ja
xchg
fildl
ss
jne
sahf
enter
std
clc
sub
pop
mov
add
push
mov
xlat
dec
aaa
cvtps2pi
pop
inc
repnz
stos
pop
stc
stos
jp
gs
xlat
cli
pop
and
adc
mov
stc
insb
daa
jb
pusha
mov
xchg
or
mov
mov
jb
xchg
push
mov
mov
shll
pop
aaa
incl
or
loope
jo
xchg
sbb
xor
xlat
mov
inc
lea
rorl
add
js
jmp
clc
pop
ret
jmp
in
fnstcw
add
lods
inc
stos
and
in
cmp
jb
mov
lahf
add
sub
jg
pop
aad
fstps
inc
subl
test
fiadds
popf
pop
sarl
rol
mov
and
pop
fwait
out
jb
lock
repnz
push
out
mov
lods
push
mov
dec
popl
stc
in
sbb
rorl
xor
flds
xchg
mov
pop
push
ret
inc
sbb
mov
and
imul
daa
xor
addl
cld
push
push
setle
mov
push
add
aad
subl
inc
cmpb
je
and
test
adc
dec
and
push
cmp
or
daa
and
loop,pn
cmp
in
cltd
xchg
push
mov
jmp
push
mov
inc
jbe
in
jmp
aaa
ja
push
cmp
xchg
popf
sub
fs
or
sbb
outsl
xor
test
loope
shrb
inc
pop
out
ljmp
inc
gs
cmp
push
dec
fnstenv
dec
mov
outsl
jp
insl
negl
xor
dec
mov
daa
test
mov
pop
jmp
mov
cmp
sub
push
xchg
fcomps
or
jo
sti
jae
adc
leave
mov
cs
push
movsb
ja
lods
mov
out
adc
xorl
repnz
cli
push
cmpsb
mov
imul
les
add
lea
mov
das
pop
std
scas
adc
mov
je
dec
scas
insl
pop
cwtl
push
jl
pop
or
pop
leave
fmulp
mov
shlb
ja
out
mov
cld
jle
xchg
test
ja
lods
sbb
inc
std
xchg
dec
jbe,pn
add
sub
jb
aaa
ljmp
lahf
fwait
sub
mov
or
data16
mov
mov
jl
pop
jmp
xchg
xchg
and
aaa
icebp
xchg
bound
sub
sbb
ja
mov
fsts
pop
lock
sub
iret
pushl
rolb
inc
call
repnz
mov
push
jnp
mov
test
mov
jb
das
fisttpll
cmp
int
xor
cmp
jnp
sub
sti
inc
aam
pop
adcb
fnsave
sbb
and
in
dec
repnz
rcrl
pop
pop
lret
jle
mov
sbb
mov
mov
xchg
pusha
ds
rorl
mov
adc
test
aas
add
pop
push
push
shr
xchg
pop
pushf
lahf
shll
push
add
xchg
adc
insl
xchg
push
insl
cmc
subl
cmp
std
aas
pop
fisttpll
gs
push
sub
xchg
les
shll
loop
outsl
leave
xchg
into
adc
cs
inc
int3
dec
add
imul
sbb
aas
lods
xor
stos
inc
lds
and
dec
jbe
add
sub
js
mov
cltd
push
outsl
into
add
mov
cmpsb
es
mov
data16
jnp
pop
and
cmp
aam
or
push
jb
sub
lcall
and
into
pop
in
xchg
dec
jl
cmp
aam
fcomps
jo
adc
fsub
mov
push
sbb
leave
cmp
andb
inc
lock
push
sbb
ljmp
sub
aad
mov
xchg
popa
je
xchg
xchg
sbb
inc
lahf
loope
sbb
in
sbb
scas
cmp
orb
add
cmc
jl
shr
cmp
lods
pop
mulb
out
in
outsl
lahf
insl
and
inc
or
aam
or
pushl
xchg
jbe
cmp
popf
cs
mov
pushf
sub
add
inc
mov
xchg
or
inc
scas
pop
mov
sbb
cmpsb
loope
mov
inc
out
imul
adcl
int
jl
mov
into
lea
mov
movsl
push
adc
mov
mov
lret
icebp
add
jecxz
mulb
xor
mov
repz
push
and
nop
push
sub
xchg
push
pop
dec
call
neg
or
and
andl
push
enter
sub
inc
sbb
test
lock
dec
sbb
jp
xor
mov
imul
or
sbb
cs
frstor
inc
sbb
lock
mov
sbb
out
inc
mov
iret
nop
dec
sub
aad
fisubrl
stos
loope
movsb
ret
mov
and
and
mov
sbb
dec
push
inc
add
xor
sarb
xchg
loope
jnp
jg
sbb
out
cli
or
mov
cmp
mov
repz
sub
push
test
and
iret
loopne
stos
imul
push
lahf
mov
push
scas
cwtl
iret
icebp
mov
cltd
mov
cwtl
rol
ss
popl
test
cs
fldl
sub
sub
sbb
out
imul
mov
das
xchg
test
pop
mov
ss
push
dec
cmp
xlat
lods
jmp
cmc
test
xchg
insl
push
sti
adc
mov
jg
in
and
lods
mov
leave
out
int3
mov
fsts
out
add
and
cmp
mov
xchg
in
std
xor
sbb
sbb
jecxz
fidivrl
mov
nop
xchg
jbe
enter
ja
pop
xchg
dec
mov
sbb
jp
dec
jo
mov
xchg
jae
cmpsl
fs
cmp
and
add
nop
repz
push
jae
out
push
nop
call
pop
loopne
aaa
fcmovnu
sub
repnz
jno
or
jae
jnp
mov
inc
inc
push
mov
inc
xchg
or
fistl
xchg
xor
mov
pop
daa
dec
xor
cmpsb
gs
mov
in
lock
mov
add
or
addl
push
cmpsb
sub
mov
mov
aad
adc
mov
add
idivb
and
dec
cmovnp
sbb
stc
mov
mov
ss
sub
mov
xchg
test
fs
sbb
cmp
arpl
add
dec
sbb
int
das
cmp
stc
jecxz
cmpxchg
inc
shr
ja
ljmp
fneni(8087
pop
or
jmp
shrl
cs
je
cmpsb
dec
ds
cmp
mov
push
enter
lcall
cmc
xchg
outsl
xor
dec
setge
loopne
daa
rcll
andb
in
stc
ret
jle
adc
jns
loope
sahf
das
sub
cwtl
cmpsb
sbb
ja
cs
jbe
jle
loopne
inc
negl
fiaddl
je
divl
rcl
das
cld
dec
gs
repz
or
jl
mov
orl
ret
int
jns
mov
outsb
lods
xchg
jl
ss
cmp
xor
lds
mov
jl
cmp
inc
les
adc
lret
xchg
arpl
jp
test
push
inc
inc
cmp
mov
outsb
hlt
mov
push
mov
rcr
or
aas
jg
add
push
bnd
mov
mov
mov
stos
cltd
jge
mov
jmp
int3
ret
pushf
cmp
imul
jmp
jns
mov
sbb
cmp
fistl
mov
das
xchg
adc
lahf
in
ret
push
push
insb
inc
dec
push
mov
inc
int
sahf
les
lret
xlat
ret
cmc
mov
dec
out
xchg
mov
call
pushf
mov
push
stos
xlat
roll
les
xor
pop
cmpsb
or
push
and
cmpsl
lock
dec
ror
xor
and
lret
popf
sbb
rcrl
popa
rcr
mov
daa
out
movsb
mov
add
mov
outsl
jb
jmp
push
add
add
roll
loop
cmpsb
pop
and
fldt
xor
mov
inc
mov
add
and
shrl
sahf
xor
cmp
popl
sub
enter
ficoml
jbe
rcll
movsl
mov
rclb
sbb
std
iret
stos
ds
push
jmp
cli
loope
out
xchg
insb
outsb
cmp
xor
adc
pop
stos
rcr
aam
xchg
cmpsb
bound
loop
add
jbe
jnp
mov
push
xchg
lret
fadds
pop
cmp
mov
mov
cli
sbb
mov
out
mov
in
shl
shll
add
or
jne
mov
pop
mov
jbe
pop
adc
sbb
mov
nop
inc
loopne
pop
daa
cmpsl
testb
ljmp
cmc
add
push
dec
pop
out
cs
mov
xchg
std
sar
rcrb
std
pop
cmp
inc
cli
sub
mov
sahf
test
mov
sarb
sub
stos
pmaddwd
fld1
lea
call
xor
arpl
mov
test
pop
imul
push
daa
mov
outsl
or
leave
jmp
cwtl
cld
sbb
pop
bound
popa
sbb
repnz
push
jl
cwtl
lock
push
or
xchg
stos
mov
ret
adc
mov
and
out
or
outsl
adc
cltd
push
adc
in
mov
mov
cs
jnp
and
sbb
inc
mov
lods
orl
inc
cmp
mov
inc
add
ja
mov
mov
xchg
jo
inc
pusha
xor
mov
push
and
mov
pop
in
xchg
and
fwait
adc
rolb
add
arpl
xchg
mov
xchg
mov
rcll
pop
iret
sub
cmp
pop
cmpsl
cmp
in
sbb
adc
bound
aam
rclb
hlt
fsubrl
sub
dec
cld
gs
adc
int3
fisttpl
bnd
es
push
insb
jle
pop
sub
jo
mov
pop
jle
scas
add
jae
lret
fnstsw
dec
fwait
mov
icebp
xchg
xchg
jl
pop
push
push
lret
imul
push
leave
or
jae
or
movsl
xchg
adc
lahf
adc
dec
movsb
mov
xchg
add
and
faddl
push
ja
out
or
push
in
fcomp
cmp
enter
ja
push
repnz
or
sti
and
adc
inc
add
jl
test
ret
add
or
push
into
pop
pop
outsb
jb
adc
popf
stc
movsb
fcompl
push
pushf
dec
adc
sub
sar
jle
pushf
pop
sub
jl
push
dec
adc
xchg
xor
fistps
comiss
jmp
push
mov
in
je
cmp
jg
mov
xlat
pop
pusha
mov
in
jne
out
mov
cmpsl
sub
or
das
mov
lahf
js
pop
mov
aaa
dec
xchg
mul
sub
mov
pop
int3
add
jo
push
pop
rcll
out
rolb
cmp
mov
nop
lock
faddl
popf
adc
adc
pop
sarb
fwait
inc
fs
aas
jb
dec
test
adc
pop
fistps
jnp
or
xchg
add
int
unpckhps
mov
or
mov
xchg
mov
shl
test
adc
pcmpgtb
push
cwtl
fdivr
ja
ret
lahf
jl
mov
mov
jne
int
add
push
mov
mov
sbb
cli
clc
jp
aam
ss
jmp
rcrl
sbb
out
xchg
enter
push
lea
fdivs
mov
loopne
bound
xor
xor
in
ds
push
cld
pop
popf
jmp
mov
sbb
pop
adc
or
jne
in
ret
leave
in
or
outsb
mov
out
cli
sahf
push
out
ret
movsb
pusha
and
fs
dec
lock
cld
data16
dec
jno
test
neg
or
movsb
fwait
inc
xlat
adc
xor
jl
std
lods
pop
push
dec
jb
or
add
and
dec
push
das
xor
pop
lea
xor
mov
fxch
ret
xor
ficompl
jne
lods
lods
mov
fs
movsl
inc
fmulp
mov
call
lods
aam
xchg
lahf
lahf
in
ja
cmp
out
in
or
sub
imul
and
jecxz
mov
idivl
pop
popf
xor
in
inc
pop
call
stos
das
mov
cltd
sub
mov
insl
aas
push
sub
xchg
sarb
ret
push
into
cli
and
jbe
subl
enter
mov
push
xor
sub
add
test
cmp
mov
ljmp
mov
mov
fistpl
sbb
jno
lods
into
push
xchg
jl
jns
insl
jb
jecxz
and
add
test
xor
or
jg
fldenv
jnp
int3
enter
xchg
fdivrs
inc
or
inc
jge
mov
sub
in
and
cmp
xchg
vmread
xchg
adc
push
mov
outsl
jp
fdivrs
sbb
and
xor
popf
and
pop
test
xchg
nop
dec
or
sbb
leave
cmp
mov
or
jecxz
sub
mov
lods
mov
and
mov
jb
xchg
sbb
cmp
pop
jge
movsb
icebp
nop
test
scas
mov
ret
test
test
mov
pop
xor
dec
rorb
inc
popa
call
mov
idivb
sahf
pusha
dec
jae
push
and
or
ret
mov
adc
repnz
clc
jp
mov
mov
xchg
fmull
push
dec
jns
cmp
adc
or
and
mov
cmp
test
shrb
lds
cmp
inc
arpl
shl
or
xor
data16
inc
lcall
jne
sub
pop
jmp
addr16
push
test
imul
movsb
iret
cwtl
shl
sbb
adc
fwait
jmp
pop
push
push
ds
sub
jmp
out
and
das
push
es
jg
cmp
ja
mov
add
imul
nop
out
sbb
test
sub
addr16
lcall
xor
stos
leave
jb
mov
dec
lret
test
into
add
cmp
testb
loop
lods
push
mov
push
mov
js
sbb
jge
std
and
jl
mov
mov
add
xlat
out
ret
add
shll
imul
add
sbb
insb
pop
stc
mov
icebp
jp
mov
pop
test
dec
adc
insl
pop
cmc
or
movsb
cld
scas
push
sbb
mov
or
xchg
test
xchg
shl
mov
cmpsl
rorl
rolb
cmc
call
dec
xchg
sub
push
xchg
pop
cltd
outsb
rcr
fnstenv
mov
mov
push
xor
mov
popf
das
and
sub
fnstsw
mov
setge
cmp
push
ret
jne
incb
lret
out
sahf
sti
push
loopne
outsl
stc
outsb
aad
in
xchg
insl
mov
test
sbb
pop
mov
jl
iret
sbb
std
addr16
pop
dec
ficompl
lock
xchg
mov
mov
jno
push
jnp,pn
and
jns
enter
loope
sbb
pop
and
fidivs
enter
push
pop
sahf
xor
xchg
jl
push
shll
out
mov
in
jmp
std
lea
add
scas
pop
movsl
bound
int3
pop
out
jge
pop
rclb
or
sub
leave
in
and
clc
ficoml
cmp
mov
or
insb
test
sahf
sbb
mov
pushf
fnclex
imul
sub
punpckhbw
outsb
lds
or
iret
scas
xor
arpl
jmp
jae
inc
stos
clc
lcall
aad
push
jnp
cmpsb
pop
ffreep
daa
jle
rorl
insl
mov
test
and
or
aam
jno
gs
cmp
loop
icebp
insl
mov
push
or
xor
sbb
or
shrb
lcall
mov
lret
fmull
test
sbb
jecxz
sbb
pop
push
popf
out
cld
jno
loope
cmp
cmc
fdivs
cmp
push
mov
data16
fdiv
ss
lret
inc
push
pop
or
cmp
out
lea
fdivp
sub
mov
xor
lcall
adc
jno
pop
out
or
inc
push
push
sbb
xchg
fsubs
pop
jb
cmp
daa
nop
cmp
xchg
mov
and
sub
push
jmp
incl
dec
add
jmp
adc
lods
or
cmpsb
push
cwtl
push
bound
js
mov
sbb
lods
imul
cltd
push
xchg
jmp
shrb
pop
mov
add
pusha
out
pushl
mov
mov
mov
push
pop
shlb
insl
cmp
hlt
jno
xor
inc
mov
adc
lea
outsl
mov
xchg
cmp
xorl
out
nop
out
or
add
cmp
pop
inc
xor
aam
repnz
push
test
cmpsl
xchg
sub
push
mov
sbb
adc
dec
movaps
mov
shlb
add
ja
loope
scas
les
in
scas
dec
mov
daa
popa
or
cmpl
cs
sbb
xor
cmp
mov
jl
sbb
jo
test
pop
repz
ss
lea
adc
sarb
and
jecxz
fsubr
cwtl
or
enter
movsl
or
aas
mov
cmp
inc
or
fcompl
test
mov
lods
test
adc
pop
clc
popa
jge
dec
or
pop
subb
cld
cmp
mov
jp
dec
and
and
repz
mov
dec
cmp
jae
js
add
pop
xchg
cmp
daa
sbb
or
mov
ja
xor
test
or
mov
xchg
xlat
stos
je
loope
fcom
xchg
adc
test
add
mov
ss
sub
add
sub
dec
sarb
fs
nop
adc
xor
stc
pop
scas
cs
add
xor
push
sahf
cmpb
mov
movsl
addr16
ja
ret
mov
pushf
cld
repz
sti
xchg
sahf
jp
shrb
es
pop
xor
mov
arpl
lcall
adcl
ret
or
push
jmp
imul
xor
mov
test
insl
mov
mov
xor
jp
les
inc
lock
fcmove
mov
adc
out
jg
pushf
add
lds
pop
push
lods
xchg
pushf
or
sub
cs
pop
arpl
jae
sbb
stc
cmp
imul
js
ja
xlat
outsb
cmc
andl
lds
sahf
sub
cmp
mov
xor
mov
enter
shll
and
jmp
sahf
nop
cli
inc
popf
std
add
jno
in
and
pop
std
add
mov
xchg
movsb
or
gs
dec
adc
cli
mov
outsl
incl
push
lret
push
mov
cwtl
dec
cwtl
and
pushf
xchg
push
jb
mov
mov
gs
js
adc
imul
decb
mov
daa
loop
cmc
ror
jne
std
adc
fsts
mov
stc
mov
mov
xchg
jge
lret
data16
stc
or
movsb
test
sbb
jbe
aam
adc
out
sub
inc
push
loope
dec
cmp
cmp
int3
ret
sbb
cmp
cmp
dec
pmaddwd
pop
or
jbe
pop
or
cmp
pop
or
stos
ffreep
mov
aaa
sub
popa
mov
pop
shlb
popf
push
jecxz
out
cld
bound
in
mov
mov
lea
jle
adc
rolb
cltd
rcl
addr16
cmpsb
xchg
pop
jbe
jecxz
test
pop
and
mov
jae
sub
stc
pop
fdivrl
fistl
sahf
jb
ds
ds
xor
push
call
xor
aam
mov
frstor
js
xchg
cmc
stos
divl
ret
adc
aam
xchg
loope
sbb
and
repnz
and
mov
xchg
push
push
pop
cli
ficoml
push
push
sub
adc
inc
add
push
cmp
sti
sbb
data16
or
enter
pusha
inc
das
aam
and
ja
test
and
adc
ret
ss
mov
or
test
fcoms
jmp
imul
add
or
mov
and
adc
arpl
lea
push
enter
test
mov
mov
pop
dec
add
sub
cltd
divb
dec
jne
ret
xor
roll
pop
jle
pop
cwtl
scas
lret
add
jno
jmp
xchg
in
mov
cmp
xor
adc
cmc
out
sub
mov
mov
push
je
pop
insl
hlt
call
sub
test
movsb
movsb
loope
mov
out
dec
adc
inc
in
test
das
mov
dec
fbstp
das
nop
loop
xor
sarb
push
jg
scas
repz
ret
add
hlt
sub
aad
cltd
jge
jg
xchg
xchg
movsb
cltd
ficompl
mov
and
mov
cli
xchg
cmp
fldt
test
push
sbb
and
sub
adc
dec
fs
dec
inc
dec
add
mov
push
insl
cmc
dec
es
jae
ja
xchg
mov
dec
call
btc
mov
xchg
mov
sbb
mov
mov
outsl
loope
inc
sub
clc
insl
adc
stc
stos
sub
sbb
fistps
dec
cmp
cmpsb
arpl
dec
clc
jmp
imul
or
lret
mov
cltd
rcrl
dec
push
outsl
and
pushf
jp
and
mov
dec
xlat
cmc
inc
mov
or
add
cmpsl
dec
add
popf
adc
push
fisubrl
ret
mov
pop
lahf
rorl
add
arpl
lret
and
cmpsl
rolb
jo
xor
add
jge
stos
out
mov
push
jbe
loop
push
aas
adc
in
add
inc
xorl
xchg
mov
sub
imul
pusha
in
daa
cmpsl
pop
test
xor
pop
xchg
xor
jno
dec
push
mov
jmp
les
movsl
cmpl
push
stc
and
pop
add
and
jge
neg
xlat
dec
adc
out
mov
lahf
into
jae
sub
and
mov
in
push
loopne
loopne
adc
lods
in
mov
push
sbb
and
and
subb
dec
fdivl
or
sub
je
jb
pushf
mov
mov
xchg
leave
pop
add
popa
add
test
daa
test
jg
repz
add
decl
ds
fsubl
or
cwtl
xchg
call
in
push
mov
repz
es
jmp
inc
pop
out
adc
outsb
jbe
xorb
iret
imul
fs
lods
add
jecxz
mov
rcrl
and
scas
pop
sub
and
cmp
aaa
popl
jo
inc
mov
movsb
sub
fwait
or
cmp
lea
dec
xor
or
jmp
in
add
cmc
xchg
cwtl
push
inc
xlat
leave
in
xchg
rcll
loopne
push
cli
xchg
dec
lods
movsl
mulb
into
xor
aas
pop
idiv
xchg
daa
push
pusha
out
in
lods
scas
scas
xor
lock
fistl
jns
out
push
xor
mov
cmpl
mov
out
jmp
xor
jge
mov
mov
and
mov
call
mov
mov
mov
inc
call
lret
faddp
cmpsb
xchg
in
adc
out
adc
popa
or
pop
xor
outsb
fcomps
shll
stc
loop
mov
fadds
rcrl
mov
pushf
mov
mov
pop
std
sbb
imul
inc
jae
lret
loope
fwait
sahf
inc
mov
pop
pop
movl
lret
pusha
ret
jno
mov
or
add
jno
mov
stc
dec
mov
mov
lcall
inc
add
shll
and
negb
mov
es
adc
fisubrs
dec
add
orl
shrb
or
dec
das
divb
stos
popf
dec
aad
movsl
loope
dec
mov
mov
pop
sub
xchg
xor
and
cltd
nop
mov
mov
cmp
adc
adc
lcall
adc
mov
pop
in
insb
les
inc
or
jae
sbb
data16
dec
push
mov
or
in
xor
adc
xchg
and
push
bound
push
stos
ja
lret
fwait
cwtl
pusha
push
mov
aaa
mov
jecxz
jle
inc
lret
sbb
in
mov
inc
or
sbb
lret
popa
aad
aaa
aam
dec
cwtl
or
jecxz
stos
cmp
cmpsb
data16
je
pop
mov
imul
leave
shl
cmp
add
mov
push
inc
pop
xor
jo
ds
roll
pop
stc
and
test
lea
fstpt
sbb
jl
mov
or
xchg
push
daa
test
test
jo
fisttpl
pop
hlt
das
enter
fimull
lds
mov
mov
pop
jl
and
fisubs
mov
scas
jecxz
mov
inc
push
mov
int
lcall
and
in
xchg
loop
shrb
shrb
jns
sub
hlt
jbe
dec
ret
lock
decl
pop
das
sarb
scas
mov
aaa
insb
dec
fisttps
adc
inc
inc
add
jmp
mov
mov
sub
add
imull
leave
lds
mov
add
mov
nop
add
push
or
xor
and
xor
inc
out
sbb
loopne
pop
xchg
xchg
sti
shll
lahf
add
xchg
and
leave
pop
inc
jno
cmpl
sub
adc
subb
mov
mov
in
adc
in
sahf
nop
rcrl
mul
and
or
or
sbb
in
mov
pop
out
push
repz
xor
ret
push
sbb
clc
jg
iret
mov
and
lcall
pop
xor
shrb
fstps
adcb
loopne
add
mov
pop
mov
fsubs
mov
hlt
jmp
icebp
cmpsl
mov
cmpl
sbb
push
fldt
xchg
cmc
mov
push
aaa
and
or
mov
and
jl
in
mov
mov
shl
mov
xchg
push
out
adc
aam
arpl
movsl
mov
sub
cltd
add
sbb
es
popf
xlat
int3
negl
inc
and
lret
cs
cs
mov
mov
push
mov
repz
add
mov
jle
sbb
sub
out
imul
jns
sbb
fdivl
pop
bound
jb
mov
mov
or
lock
movsb
inc
and
stos
sub
hlt
adc
push
and
xchg
pusha
inc
mov
lods
mov
psrlw
and
int
and
cmp
shll
fld
incb
pop
sbb
push
nop
sbb
jge
mov
leave
std
xchg
ja
sub
in
inc
mov
inc
hlt
stos
mov
push
out
es
xor
lock
or
and
pop
int3
xchg
mov
or
lea
sbb
or
xchg
testb
mov
jecxz
test
mov
es
call
fcomp
les
hlt
jae
jns
loope
mov
adc
mov
pop
xor
cmp
cmpsl
jge
idiv
ljmp
les
adc
out
incb
cmc
jbe
test
sub
pusha
iret
mov
fbld
push
in
mov
jbe
cmpsb
sbb
mov
jp
xor
fwait
mov
arpl
dec
icebp
int
lcall
cmp
test
cmp
loope
add
pop
or
xchg
fnstenvs
dec
sbb
jno
jecxz
adc
hlt
xor
call
sub
sub
add
mov
cmp
sbb
lahf
fs
dec
or
outsl
push
je
mov
push
in
and
jb
cmp
push
xlat
loop
push
xor
mov
or
in
out
sbb
fmull
jge
jmp
cmp
test
outsl
mov
mov
loope
out
stos
push
das
mov
jmp
testl
hlt
stos
outsl
ljmp
jb
pop
mov
push
fisubs
or
mov
mov
dec
inc
inc
sub
in
lods
lret
cmpsl
xchg
ja
jmp
jmp
add
pop
rcll
daa
ds
std
inc
stc
pop
std
mov
rcrb
and
test
sbb
adc
fstpl
add
test
pop
sbb
sub
and
adc
std
push
ja
cwtl
jae
outsl
fiaddl
cmp
jmp
repz
repz
inc
mov
movsl
mov
mov
add
xchg
cli
int3
xchg
pop
dec
fnstsw
jg
mov
popf
dec
jp
rorl
xchg
push
mov
fisttpl
adc
dec
repz
xchg
mov
test
psrld
leave
jmp
xchg
add
pop
adc
jle
pop
inc
mov
je
add
cmp
fs
fdivrp
mov
push
pusha
aas
lahf
leave
pop
xchg
sbb
xchg
int3
dec
mov
dec
mov
adc
xor
mov
std
pop
insb
ss
scas
fst
pop
aam
push
pop
push
popa
mov
cmp
mov
test
lock
mov
fstpt
mov
aad
repnz
xchg
addl
int3
pop
cld
jg
arpl
inc
mov
pusha
arpl
outsl
jp
addl
rcll
inc
add
out
and
and
lahf
mov
xlat
dec
fimull
int3
adc
mov
sbbb
add
mov
lods
push
fstpt
jo
mov
loope
sbb
inc
popf
dec
xchg
rorl
rclb
push
jns
push
jb
mov
push
sti
ret
dec
insb
cmc
in
shll
aas
pop
dec
jae
lret
clc
popa
leave
jno
mov
dec
xchg
add
push
sub
sub
andb
inc
xchg
xlat
insl
push
in
mov
enter
std
xchg
gs
jbe
or
mov
add
fmull
fcmove
stc
and
push
ja
scas
pop
fidivrl
mov
adc
add
imul
xorl
add
and
lods
push
sbb
repz
pop
fldt
dec
and
xorl
mov
sbb
adc
xorl
sub
fisubl
lret
cli
cmp
ja
rclb
xor
shll
lods
jecxz
xor
sbb
ret
jno
aam
sub
pop
push
xchg
mov
jge
push
lock
xchg
out
stos
sbb
out
es
aas
neg
fwait
mov
arpl
add
dec
jno
sbb
cli
fldcw
sbb
xor
scas
sahf
cli
roll
mov
imul
push
in
ds
in
ja
fdivrs
aad
sub
xchg
dec
js
sub
popa
imul
gs
mov
sbb
clc
repnz
addb
xchg
lea
mov
fs
mov
pop
stos
loopne
loope
jne
or
pushf
repnz
lea
dec
out
jle
xchg
outsb
sub
sub
mov
and
dec
pop
jns
xorb
inc
or
rcl
sub
cld
sub
rolb
push
sti
xchg
in
and
fdivs
jmp
push
mov
mov
mov
xchg
sbb
outsb
pop
dec
inc
test
sub
pop
jns
lods
insl
pushf
aas
insl
ret
ret
and
dec
rcll
add
sub
out
cmp
mov
xchg
sub
in
test
call
jae
xor
jo
and
cmp
dec
dec
mov
daa
push
test
push
test
lret
fsubrs
sub
mov
stos
daa
adc
cmpl
lcall
lock
out
into
or
jp
jbe
mov
sub
mov
lcall
mov
push
dec
xor
mov
xchg
hlt
pushf
push
int
cmc
fsubp
repnz
and
aaa
push
orb
ret
cmpb
ljmp
xorb
in
pop
insb
xor
push
add
cmp
or
pop
ret
fidivs
jbe
lods
adc
pushf
call
jo
fldt
in
jae
cmp
insl
mov
inc
imul
jne
jle
in
je
push
jbe
inc
jmp
fimuls
and
and
enter
push
hlt
jne
add
call
fimull
nop
inc
mov
cmpsb
je
aam
cld
lcall
mov
mov
lcall
push
loop
fidivl
mov
xchg
add
fs
dec
cltd
sbb
pop
push
push
das
mov
and
enter
pop
push
jg
aaa
jae
xchg
fcmove
push
mov
insl
jnp
mov
and
jb
mov
and
add
sub
outsb
cmc
fs
xorb
lods
mov
mov
loopne
mov
mov
shll
pusha
add
call
test
push
push
cmp
jg
scas
dec
cmc
sbb
lock
xlat
pop
push
xchg
iret
cmp
cmp
jae
push
test
push
xchg
push
sub
pop
mov
pop
add
mov
mov
jae
inc
xchg
mov
das
ds
nop
push
push
popa
mov
adc
mov
scas
xchg
mov
pop
mov
pop
jmp
cmpsb
sbb
jecxz
sub
addb
xlat
push
dec
inc
sbb
test
mov
xor
mov
fdivr
jo
imul
pop
mov
jnp
xchg
les
mov
cwtl
inc
neg
loopne
cli
jnp
and
inc
jno
add
cli
mov
sbb
jg
insb
sub
fbld
cwtl
push
inc
or
lds
jbe
daa
in
dec
stos
lret
int3
out
clc
repz
xor
shl
je
enter
xlat
in
test
not
jb
jae
push
jb
mov
xor
adc
das
stc
jno
inc
dec
das
into
add
mov
xor
push
sub
dec
inc
ljmp
aad
add
mov
fs
out
stos
add
aas
and
stos
outsb
sbb
out
cli
xchg
rorl
repnz
mov
dec
cmp
mov
jmp
sub
aad
xor
mov
loop
popf
call
and
jb
iret
sbb
cmc
cmpsl
repnz
pop
sarl
lods
call
pop
sub
popa
aaa
movsb
add
mov
loope
lret
xchg
mov
cmp
add
jbe
inc
ficompl
and
push
sahf
inc
mov
lock
imul
leave
cld
fsubr
fcomp
rcll
inc
mov
and
jns
movsb
mov
lds
dec
movsl
adc
enter
mov
mov
xchg
mov
add
lods
lcall
pop
aad
xchg
sub
in
or
xor
js
dec
sub
jbe
sahf
inc
xchg
lods
jbe
shl
in
in
mov
shrl
fiadds
loope
jl
enter
movsl
mov
dec
mov
xchg
dec
popa
sbb
mov
xchg
push
or
mov
add
push
pop
mov
jecxz
ret
xchg
outsl
sub
aam
and
or
xchg
mov
mov
lahf
fiadds
push
push
push
loop
jne
push
pop
jb
mov
mov
or
out
or
aas
outsb
pop
sub
mov
dec
enter
jmp
les
adc
jno
or
ss
pop
push
scas
mov
cs
sub
xchg
inc
dec
pop
push
sbb
sbb
jle
dec
mov
dec
xchg
or
adc
sbb
cld
jbe
mov
rcll
adc
jb
ljmp
testb
push
pop
jne
lock
stos
and
jb
hlt
dec
xchg
xchg
rclb
or
iret
pop
xchg
loop
inc
mov
push
pop
leave
pop
stc
mov
pop
test
cmp
adc
inc
ret
add
mov
lret
xor
fmull
jmp
pop
in
jge
jbe
pop
cmp
or
and
stos
movsl
sbb
clc
ret
add
sar
loopne
hlt
loop
push
lahf
push
lods
mov
dec
fbld
xor
dec
dec
mov
lcall
fiaddl
roll
xchg
popf
mov
call
not
xchg
add
xchg
jne
ljmp
or
xchg
flds
or
mov
sbb
test
ret
insb
loopne
sti
bound
repnz
ret
enter
and
ds
sbb
js
inc
push
mov
cmp
out
jle
cmp
jno
jae
add
out
xor
mov
xchg
inc
aas
and
ret
das
jge
and
pop
sahf
orb
and
gs
mov
jb
aaa
inc
sub
pop
mov
mov
xor
rorb
adc
fs
fwait
push
mov
in
jne
push
jae
sbb
cmc
sub
les
or
sbb
fwait
arpl
pop
loopne
pop
fildl
cmp
mov
outsl
dec
mov
mov
pop
ror
push
xor
scas
sti
out
mov
pop
add
dec
sub
nop
in
arpl
push
sbb
push
mov
xchg
cmp
movb
mov
daa
sbb
inc
push
mov
dec
push
mov
mov
push
call
sbb
and
icebp
cmc
xor
popf
or
orl
shrb
sbb
loop
shll
out
lcall
into
ja
xchg
mov
cwtl
jns
push
orb
test
dec
rcl
mov
xchg
andb
sbb
fnstenv
fsubr
test
in
inc
in
test
add
mov
aas
leave
mov
pop
mov
sbb
xchg
sub
movsl
aad
xor
push
cmc
pop
cmp
pop
clc
xchg
sub
rclb
in
arpl
fisubl
jge
mov
or
inc
cmp
fwait
xchg
jo
xchg
mov
xor
insb
add
outsb
testb
add
fucom
or
stc
jb
ret
popf
xchg
sbb
adc
cmp
add
cltd
popa
aad
adc
call
in
pop
sahf
lods
jg
hlt
mov
push
negl
inc
or
xchg
adc
test
rcll
scas
cwtl
sub
mov
push
xor
sub
mov
mov
jmp
mov
pusha
sbb
movsl
adc
xchg
jb
mov
cmovl
jno
push
push
dec
jbe
imul
and
sub
popa
xchg
sub
push
push
pop
mov
inc
jge
out
int3
loopne
adc
pushf
or
pop
rcr
pushf
push
jg
mov
js
jbe
cmp
push
or
lods
xchg
or
mov
repnz
mov
jae
stos
imul
rorb
adc
fadds
pop
stos
es
inc
loope
pop
xor
lock
add
and
movsb
or
dec
inc
sub
test
fwait
lahf
in
popf
es
pop
mov
sub
adc
adc
in
sti
aas
inc
dec
xchg
rcrl
pop
daa
cmp
cmp
sub
int3
xchg
jae,pn
inc
imul
xchg
sub
lods
or
aas
in
shrb
pop
inc
rorb
jo
mov
test
sbb
in
sbb
aaa
stc
movsl
mov
gs
inc
sub
dec
mov
sbb
jbe
insl
xchg
cs
cli
insl
add
in
cmpb
outsl
xor
adc
mov
cmpsl
push
pop
cmp
or
dec
imul
xchg
lds
movsb
jle
sbb
xchg
adcl
and
mov
cld
data16
lea
push
pop
cs
stc
std
jge
mov
addb
xchg
cmp
adc
sub
mov
cmpsb
push
add
cltd
pop
dec
sub
arpl
fisttps
ja
mov
pmullw
mov
fsubs
xor
add
pushf
xlat
adc
into
jmp
loope
dec
sti
add
push
out
push
loope
push
rcll
dec
int
mov
movsl
push
pop
push
dec
pusha
xchg
insl
loopne
aas
sub
jmp
sbb
cmpsl
insl
stc
shrb
xchg
ret
sbb
jbe
shll
adc
inc
inc
in
lret
push
lds
xchg
pop
orb
adc
lahf
push
int
ror
push
add
jns
mov
fdivl
js
jmp
in
cmp
sbb
xor
push
movsb
dec
fucomi
and
pop
mov
and
lcall
adc
lea
pop
mov
jns
fists
and
cwtl
movsb
push
push
lret
dec
aaa
jo
push
pop
enter
jl
lock
rcr
mov
cmp
add
add
cmp
sbb
inc
xor
sub
push
cmp
pop
fnstsw
and
xchg
or
lcall
lahf
stc
in
push
cmpsb
aad
mov
insb
inc
rcrl
ljmp
or
popf
jb
rorl
push
popa
movsl
je
cmp
test
ds
and
xor
stos
pop
add
push
push
sbb
sbbb
jmp
call
inc
insb
pop
fists
xor
mov
mov
dec
hlt
mov
scas
pop
or
sti
push
add
movsl
and
push
negb
jae
fnstcw
sbb
mov
adc
andl
inc
dec
cs
sub
cltd
adc
add
adc
xchg
aad
pop
push
stos
loop
jo
dec
push
push
dec
xchg
fldcw
movsb
inc
js
mov
or
push
imul
xchg
aad
mov
int
sub
sub
sub
pop
push
dec
ds
jmp
cmc
jmp
decl
shl
sbb
outsb
cmpsl
rol
sbb
call
mov
lret
add
dec
pop
mov
cmpb
insb
pop
jns
mov
inc
adc
dec
cmp
jne
roll
ficoml
ljmp
jnp
or
imul
out
xchg
cmpsl
cwtl
sahf
aad
out
faddp
mov
xorb
pusha
xor
jne
in
sarb
enter
mov
adc
stos
xor
cmc
cmp
aas
jecxz
popf
popf
and
sub
jnp
aad
fwait
popf
popf
sub
popa
test
hlt
adc
sbb
test
mov
out
out
jmp
sbb
fistpll
int
inc
sub
inc
fwait
dec
fwait
in
fidivrs
insl
push
sub
mov
lret
addr16
and
xlat
in
adc
fs
in
lret
jnp
add
jge
roll
push
sub
push
test
jb
test
and
cmp
std
xor
jge
dec
pop
sbb
or
test
mov
outsb
stos
xor
inc
sub
iret
das
cld
jno
pop
adc
daa
imul
cmp
hlt
pushf
jmp
adc
jno
add
fdivrs
mov
imul
adc
mov
insb
add
das
mov
aaa
cld
xchg
daa
and
pop
fimuls
sbb
fwait
add
mov
enter
push
xchg
rolb
loopne
jg
mov
cli
or
or
pop
scas
mov
das
scas
push
aam
movsl
add
pushf
sbb
cmpl
inc
into
mov
cmc
add
mov
xchg
sbb
cld
xchg
dec
xor
rorl
stc
or
call
sti
out
or
mov
xor
pop
test
push
iret
add
dec
cs
mov
pop
adc
mov
mov
addr16
cld
and
push
xchg
sbb
pop
outsl
nop
pop
clc
dec
int3
push
inc
dec
cmpsl
insl
movsb
clc
scas
mov
mov
repnz
lret
or
adc
or
iret
inc
sub
jp
push
test
push
pop
mov
xchg
inc
jmp
xchg
dec
pop
insl
out
cmp
aaa
mov
data16
gs
shll
xchg
or
incl
lret
pop
ljmp
jae
aaa
out
notb
lahf
std
jns
mov
xor
xchg
lea
mov
mov
int
or
inc
cmp
adc
push
mov
add
ds
mov
lds
rcrl
mov
cmpsl
int
xlat
lcall
in
sub
sub
mov
push
push
add
sbb
xchg
out
inc
cmp
adc
loopne
push
pop
push
cmp
pop
ret
js
pop
add
lret
jge
mov
in
mov
test
jle
lds
shlb
icebp
sbb
mov
in
ja
sbb
mov
repz
pop
pop
inc
jecxz
and
dec
jae
xor
pop
sbb
mov
cmp
addr16
sub
jmp
insl
test
dec
popa
mov
sbb
mov
cmpl
adcb
and
popa
lock
mov
pop
inc
inc
cmc
xor
push
dec
and
cmp
insb
aaa
sub
cltd
ljmp
mov
rcl
cmp
push
loop
mov
bound
faddl
dec
fs
mov
daa
mov
xor
xchg
loopne
sub
xchg
icebp
lret
inc
xchg
jns
push
iret
in
movsl
jl
frstor
push
add
lea
insb
imul
clc
dec
xchg
fistpll
scas
leave
push
jg
xchg
pop
lcall
xchg
mov
test
sarl
repz
icebp
ds
sbb
mov
jl
outsl
and
push
sub
dec
xchg
fisubrl
outsb
cmc
dec
loop
cld
jno
push
sbb
dec
adc
push
icebp
aam
xor
push
popf
mov
pushf
xchg
aaa
jbe
cmp
sti
aas
pop
push
pop
xchg
repnz
ja
or
jge
sti
lds
cmp
mov
mov
nop
and
jecxz
mov
leave
std
add
xchg
ret
pop
das
fwait
xor
mov
fwait
out
repnz
cmpsl
pop
adc
sub
jecxz
cwtl
xor
imul
fmuls
lods
sbb
sub
xor
mov
mov
push
dec
or
and
imul
xlat
out
add
sub
mov
xchg
mov
or
pop
std
out
sbb
jno
andb
out
clc
jns
sub
or
int
push
mov
push
inc
cmpsl
xchg
mov
xlat
rol
mov
mov
cwtl
mov
adc
xchg
sbb
stos
add
push
test
rorl
sub
ret
clc
mov
push
and
clc
mov
jge
xor
add
push
hlt
smsw
lahf
sbb
push
xchg
js
repnz
or
fstl
test
sub
pop
push
repz
mov
jl
addr16
xchg
dec
insb
dec
pop
ror
xchg
daa
fisubs
negl
test
imul
adc
xor
adc
inc
sub
mov
inc
dec
pop
in
push
cpuid
and
add
ja
test
mov
xor
pop
cmp
and
sti
xor
pop
mov
cmc
mov
jge
xchg
fcom
mov
pop
in
pop
por
jo
mov
shrl
mov
cmp
lods
cli
js
mov
pusha
xlat
cmp
adc
ds
mov
enter
repz
out
mov
or
popf
fiadds
pop
testb
cmp
loopne
ficomps
xor
cmp
in
add
gs
cmc
mov
cltd
push
push
addr16
add
xor
shrl
jns
mov
xchg
push
adc
pop
adc
loop
dec
aad
or
pop
pop
adc
jge
and
dec
aad
fs
sbb
roll
in
push
mov
in
lock
into
les
movlps
daa
std
pop
lcall
mov
mov
fcoml
pop
jno
push
outsb
lea
out
pop
rclb
stos
or
les
test
adc
pop
inc
jp
mov
popf
mov
ret
fdiv
pop
dec
xchg
cmp
mov
dec
push
sub
lds
pop
sarl
stos
cmc
add
stos
push
and
add
clc
xor
ret
test
mov
cmp
daa
or
scas
xchg
jo
arpl
int3
dec
idivl
in
pop
out
add
jg
movsb
mov
and
mov
dec
cmp
pop
push
jmp
xor
or
sub
inc
lods
aam
popa
cmc
test
lret
cmp
lret
mov
jb
cmp
dec
dec
pop
jge
mov
adc
xor
xchg
mov
add
bound
cmp
xor
xor
pop
bound
shll
mov
mov
sub
popa
mov
dec
lods
pop
mul
cmp
xchg
and
jno
repnz
push
inc
ljmp
loope
sti
shrb
loop
sahf
mov
out
ss
loopne
pop
stos
stos
cmp
mov
lcall
subb
cwtl
jo
rcl
adc
idivl
test
xchg
ret
lock
test
lea
mov
cmpsb
jns
push
mov
inc
or
gs
push
daa
cmp
jle
outsl
int
pop
dec
cmc
jo
jae
daa
loopne
in
adc
xlat
dec
jne
stos
addr16
lahf
aaa
dec
push
cli
mov
pop
sti
jle
mov
idiv
mov
ds
inc
push
sbb
dec
bound
insb
mov
aad
jp
pop
cld
imul
cmp
adcl
or
mov
call
adc
nop
stos
stos
adc
fs
mov
cmp
mov
data16
sbbl
sub
pop
push
ds
xchg
sub
jo
lea
ret
and
mov
sbb
sbb
jecxz
jp
out
mov
pop
adc
add
fists
pop
jns
adc
leave
popf
xor
hlt
mov
aaa
jbe
xor
enter
ds
jae
fstl
cs
jmp
idiv
xchg
pop
inc
add
pop
ja
adc
adc
cmp
mov
shll
imul
ficoms
jmp
xchg
jge
push
mov
lahf
push
add
xor
push
xchg
rcll
mov
and
pop
inc
out
push
dec
jbe
pop
and
add
dec
mov
movsl
aaa
jecxz
jno
inc
call
orl
sbb
lods
or
push
movsb
push
mov
out
ret
lcall
je
xchg
aad
inc
fs
push
add
cmp
clc
push
jb
test
nop
sbbb
les
xchg
cmp
mov
mov
lret
rcrb
les
lret
pop
iret
sbb
mov
or
fxch
mov
ss
sub
loopne
mov
or
movsb
in
out
pop
lret
shll
pop
sbb
cmp
jne
clc
aaa
xchg
or
lret
inc
pop
adc
xor
xchg
test
mov
lret
adc
push
xchg
jp
pusha
iret
daa
pop
pushf
sahf
imul
mov
mov
sub
and
adc
addr16
pop
arpl
add
mov
gs
stos
cmp
inc
dec
push
mov
addr16
and
and
cwtl
push
ljmp
es
or
int3
fistpl
sbb
sub
cli
lcall
mov
add
cmp
outsl
stc
inc
jb
es
test
sub
cmc
nop
and
lds
lods
aam
push
lods
roll
jecxz
xor
mov
sub
lret
out
pushf
mov
imul
xchg
or
test
pop
or
mov
adc
sbbb
insl
push
cmp
jge
push
insb
jmp
imul
outsl
mov
fstpt
mov
int
jne
jle
cwtl
jnp
scas
push
pushf
inc
or
fld1
rorl
je
mov
cmpsl
xchg
pop
xchg
mov
aas
outsb
test
xchg
addr16
ffree
and
imul
cwtl
mov
xchg
push
test
xchg
jmp
movsb
sub
test
or
lock
mov
stc
sub
and
fiadds
cwtl
mov
xorl
rcrl
cmp
xchg
jae
pop
jne
sbb
or
xchg
test
das
sbb
and
pop
push
aad
push
daa
mov
ret
mov
insl
pop
ret
mov
rol
cmp
popa
xor
int
leave
pusha
nop
cmpsl
mov
inc
inc
inc
and
xchg
scas
out
mov
imul
mov
mov
add
ljmp
pop
mov
xor
xchg
sbb
cld
out
fstps
test
andl
mov
sbb
ret
inc
fbld
mov
jmp
mov
or
cld
mov
je
mov
inc
cmc
add
pop
in
mov
das
sub
inc
dec
xor
lahf
in
fmuls
mov
lret
test
jbe
frstor
push
jle
xor
jecxz
cmp
push
loope
addl
jae
pop
mov
lea
sbb
aas
cs
int
and
jecxz
mov
add
pushf
test
je
inc
dec
ja
rorl
das
dec
clc
pop
or
lds
repnz
sbb
xor
ficoml
pop
fld
jns
mov
data16
aad
lcall
push
int
sbb
call
fst
pop
data16
dec
ja
inc
cmp
outsl
and
aam
sbb
inc
je
test
repz
add
aad
aas
jae
sbb
sbb
add
adc
jae
repnz
mov
dec
pushf
imull
jmp
adc
cli
out
loope
enter
in
test
adc
fisubs
or
inc
xchg
fmulp
or
iret
pop
sarl
out
pop
add
xchg
sbb
dec
or
adc
pushf
push
or
dec
xchg
aaa
sub
jbe
insl
fisubs
inc
jnp
sbb
jl
or
in
mov
jl
jno
mov
ja
mov
jge
dec
jg
push
or
ret
out
sbb
add
hlt
push
dec
add
jae
jae
or
retw
mov
outsb
mov
xor
pusha
add
movsl
out
mov
pop
lcall
mov
rcr
pop
or
jns
mov
shl
js
faddl
and
jns
adc
xchg
jg
mov
sbb
shr
out
faddp
orb
sub
xchg
sbb
jbe
xchg
aas
xor
imulb
es
rcrb
xchg
enter
leave
sbb
fists
imul
loopne
icebp
mov
test
mov
js,pt
movb
mov
cltd
dec
andl
shlb
aaa
lds
frstpm(287
mov
ljmp
outsb
add
fstpt
fcomip
lock
push
test
ret
inc
adc
pop
mov
in
loopne
inc
sub
cwtl
out
dec
outsb
mov
inc
in
jae
mov
stos
test
add
fxch
and
fstp
mov
addb
ret
pusha
sub
xor
add
addr16
frstor
and
jo
iret
push
sbb
fisttpl
dec
cmc
es
or
adc
iret
push
jg
test
cltd
fidivrs
sarb
test
or
dec
pop
cli
jmp
sbb
sbb
push
mov
cmc
testb
lahf
or
or
stc
fdivr
aas
sahf
fidivrs
mov
mov
mov
pop
sbb
iret
addr16
int
cmc
mov
inc
dec
xor
repz
inc
or
cmp
aam
dec
cltd
pop
ljmp
and
xor
mov
test
and
and
sub
idivl
sub
faddl
pop
ja
fistl
dec
nop
mov
push
cs
aad
pop
iret
cwtl
pop
jno
idivb
icebp
mov
push
sbb
outsb
cwtl
jno
inc
inc
outsb
inc
jbe
mov
dec
loop
pop
pop
popa
and
push
dec
and
mov
and
xchg
shr
les
inc
cmp
les
inc
jle
cmp
scas
mov
ret
mov
mov
pop
pop
pushf
std
and
and
aas
roll
dec
inc
adc
lods
iret
dec
pushf
loope
xor
into
xor
cs
cld
adc
sti
out
out
sbb
mov
idivb
test
jl
imul
xchg
dec
ljmp
leave
add
leave
dec
or
mov
push
cmp
les
mov
repnz
cmpsl
mov
dec
lods
out
in
test
jns
mov
jg
loop
inc
push
jmp
test
sahf
inc
push
cmp
mov
loop
out
dec
lret
adc
cmc
out
cltd
sti
shlb
jecxz
pushf
iret
lret
bound
in
cmp
rcl
pop
mov
cld
inc
adc
sub
mov
mov
mov
dec
dec
lret
jl
jo
pop
pushf
lcall
cmp
inc
fsubs
and
cmpsl
inc
sub
pop
dec
sub
xchg
push
enter
push
mov
pop
or
and
mov
adc
xorb
sub
out
rcr
popa
jbe
mov
std
loope
das
inc
or
mov
in
mov
inc
daa
ficompl
xchg
cmp
and
repnz
into
fcom
add
in
add
jns
cmp
test
jle
push
pop
icebp
sbb
xor
dec
push
and
in
aad
das
jnp
jnp
outsl
sbb
push
or
mov
lret
sarb
ljmp
sbb
inc
rorb
adcl
xchg
test
rcrl
imul
daa
stos
jp
push
jns
push
hlt
out
fisttpl
cltd
out
xchg
ds
shlb
push
lods
das
mov
test
lods
push
pop
push
mov
xor
mov
mov
adc
out
push
out
repnz
jbe
sub
inc
mov
decl
adc
inc
sahf
jo
mov
mov
mov
in
add
lea
aad
insb
sub
push
push
addr16
sub
xchg
pop
xchg
inc
pop
call
cmp
repnz
callw
fiaddl
lret
ret
test
xchg
outsb
ss
adc
addl
pop
imul
mov
lock
fadds
jle
imul
xchg
iret
and
fstp
idivb
movsl
jnp
dec
xchg
push
pop
ret
push
ljmp
push
gs
and
popa
pop
shlb
push
movsl
sub
cmp
mov
fbld
aaa
sub
dec
adc
sbb
push
fdivrp
ret
lods
jno
jg
fsubrs
pusha
or
xor
adcl
add
jge
fwait
bound
push
fdivrs
test
adc
jae
cmp
push
mov
dec
popf
pushf
in
out
lcall
stos
dec
add
lea
cmp
dec
push
pop
add
aas
jb
add
cmpsl
push
jecxz
xor
jmp
fisubrl
or
outsl
mov
fstpt
xor
mov
std
add
mov
fistps
push
push
dec
jnp
pop
int
add
in
roll
out
push
sbb
jmp
fsubrl
pop
push
daa
nop
pop
adcb
jo
push
out
and
aam
test
xchg
xor
sub
push
lret
pop
sub
test
inc
movsb
pop
leave
push
sub
in
inc
jl
mov
adc
fldt
mov
test
sbb
cli
das
sahf
imul
fs
jbe
shll
daa
es
test
dec
mov
sbbl
cmp
adc
sbb
add
sub
mov
ds
bound
sti
fsin
mov
xchg
pop
pop
fisubs
add
adc
mov
xor
cmp
pop
xor
lock
mov
insl
test
repnz
and
cmp
ss
or
mov
mov
inc
lock
mov
add
enter
mov
adc
sub
mov
cmp
rclb
lock
mov
jge
and
and
jg
sbb
sbb
mov
cmpsb
mov
cmp
int
insb
adc
xor
mov
mov
daa
or
mov
xor
dec
stos
cmp
orb
inc
mov
mov
icebp
lods
jecxz
mov
push
rolb
pop
ljmp
pop
lea
rcll
pushf
arpl
lea
mov
cmc
dec
je
test
mov
imul
or
pop
sarl
mov
lahf
hlt
or
cmc
loop
fistpll
test
sub
adc
cld
fisubs
mov
das
push
sti
shl
cmpsl
xchg
popf
jae
dec
sbb
ss
movsl
or
loope
hlt
aaa
sarb
aaa
sub
ljmp
sarb
fsub
call
sub
mov
jmp
subl
gs
mov
xor
iret
jp
nop
insl
dec
cld
mov
int3
mov
and
pop
fstl
push
push
aaa
fistps
pop
add
xlat
sarb
adc
es
cmp
jb
and
arpl
enter
xchg
and
add
mov
scas
aaa
loop
mov
in
movsl
push
adc
jbe
xchg
push
mov
lret
mov
inc
cmp
cld
shrd
sahf
inc
sub
addr16
cltd
outsb
ss
data16
stos
add
pop
outsl
xchg
outsb
hlt
hlt
idivl
mov
pop
cld
dec
in
or
pop
jb
lret
jb
adc
mov
push
pop
mov
repz
sbb
mov
jl
outsb
add
arpl
icebp
jp
inc
cmpsl
shrl
cmpsl
outsb
insb
insl
sbb
ret
jl
or
or
fwait
add
ret
ffreep
jle
jns
imul
loopne
or
pop
js
lods
lret
roll
test
or
xchg
mov
push
xor
inc
test
loopne
cmp
add
in
mov
push
movsl
adc
enter
sbb
fwait
inc
and
cmp
or
mov
jb
das
out
mov
in
and
mov
stc
test
insb
lods
roll
xchg
pop
xlat
lods
pop
scas
add
clc
fwait
or
jg
dec
sub
or
arpl
cmp
arpl
cmp
jns
js
test
test
push
negb
in
in
insl
ret
loope
push
sti
in
fdivl
pusha
jecxz
mov
mov
pop
int
jne
imulb
xorl
mov
push
ret
out
sub
mov
xor
cmp
popf
gs
jg
aas
jns
fsts
add
out
cltd
xchg
dec
popf
fs
andl
adc
jno
cwtl
mov
nop
int3
inc
test
dec
xor
sbb
cli
leave
or
push
jb
shr
rorl
bound
dec
std
adc
xor
sbb
add
add
aaa
xor
idivl
jo
xchg
push
lret
mov
imul
aad
test
jecxz
popa
xchg
loope
cwtl
fists
stos
sahf
and
filds
ds
stc
ror
sbb
add
xchg
lods
and
testb
dec
lods
test
out
data16
push
fldl
scas
pop
stos
repz
imul
loopne
jnp
xor
or
pop
mov
and
adc
dec
rolb
not
cmp
dec
add
xor
mov
xor
pop
loope
hlt
sbb
das
in
call
xchg
out
xchg
addr16
mov
aad
adc
mov
cli
test
sbbl
fwait
test
cmpsl
inc
aad
push
xor
movsl
movsl
mov
in
mov
cld
cs
enter
sub
out
iret
add
cli
xchg
lods
xchg
push
mov
pushf
cs
mov
or
in
mov
test
clc
push
in
xor
out
add
mov
mov
out
jne
jl
sub
add
pusha
sub
xchg
loop
xchg
sbb
outsl
idivb
loope
and
pop
cmc
sarb
push
sbb
insl
jecxz
xchg
mov
and
shlb
xor
sub
in
fisttpl
and
lods
into
bound
rcrl
xchg
and
jns
mov
jmp
out
adc
aad
sub
scas
push
insl
shl
shr
fldcw
call
lcall
jl
ja
add
std
or
in
pop
xchg
daa
aam
js
in
cld
mov
shr
sub
jl
jae
je
ret
cmp
xchg
pop
dec
mov
outsl
adc
push
or
mov
stos
push
mov
aad
pusha
push
fistpl
into
cmp
aas
xchg
fisttps
int
mov
pushf
jmp
cmp
in
mov
lahf
outsl
movsb
jle
jae
pop
sbbl
test
sbb
cmp
lods
xor
pop
aas
pop
xor
dec
daa
jnp
loope
test
jge
pop
mov
inc
adc
jae
mov
pop
push
ret
xchg
nop
or
pop
xorb
or
dec
or
lahf
enter
xor
outsb
scas
or
mov
je
int3
outsl
int
out
out
scas
aad
xchg
js
fistl
clc
jl
adc
pop
aam
fsubrl
popa
iret
pop
insl
scas
ret
mov
pusha
into
aad
in
popf
adc
sbb
adc
and
int
add
or
xchg
cmpsb
ret
jne
adc
lahf
sbb
xor
leave
idiv
push
imul
js
dec
jle
popa
leave
push
gs
addr16
es
jnp
pusha
stos
in
sub
shl
jno
pfcmpgt
jge
or
and
mov
add
fisttpl
jbe
shl
mov
sbb
sbb
jb
sub
jp
dec
xchg
lods
insl
mov
xlat
aas
jge
lcall
data16
add
cmp
mulb
jmp
and
mov
and
and
jg
ds
sahf
or
adc
outsb
lea
fsubl
or
pop
bound
mov
sbb
mov
scas
or
jmp
mov
xchg
outsb
xchg
xchg
push
pop
dec
fucomi
push
mov
fs
mov
aas
bound
filds
jecxz
jo
xchg
xor
ret
bound
jmp
xchg
mov
andb
ficoml
insb
and
rorl
sbb
xor
mov
pusha
pop
sbbb
std
cmpsb
nop
xchg
adc
pop
out
pushf
dec
mov
enter
cmp
mov
ret
push
dec
cs
rcll
test
stos
lock
test
lahf
push
dec
mov
and
stos
dec
cs
jg
fstl
xor
cwtl
pop
adc
jl
popf
mov
jle
push
inc
bound
mov
pop
in
xchg
or
orl
pop
stos
jge
nop
add
push
jp
mov
add
test
dec
push
ret
pop
nop
sbb
pop
dec
inc
xchg
mov
testl
mov
ret
pop
movsl
add
vandpd
repz
icebp
sbb
xchg
movsl
sbb
in
xchg
imul
and
test
push
push
dec
pop
shrb
pop
and
jge
add
xlat
repnz
lds
sbb
mov
repz
cmp
repnz
and
mov
pushf
lods
das
fstps
adc
in
cmp
imul
cmp
rcrl
sub
sti
ret
sahf
enter
mov
add
test
stos
sbb
add
push
shll
pop
mulb
les
pop
push
nop
sub
add
pushf
rcll
mov
xchg
mov
jg
leave
push
fbstp
cli
push
das
mov
mov
loopne
dec
mov
mov
xchg
push
iret
fwait
dec
xchg
inc
shlb
or
test
repnz
cwtl
into
mov
mov
imul
aad
and
jae
sub
mov
mov
mov
push
addb
add
lods
xor
dec
sub
adc
aas
xchg
iret
pop
push
add
dec
xchg
lahf
int
sbb
in
ret
inc
jl
xorb
fwait
arpl
lahf
in
jo
out
lret
test
dec
or
into
cli
ja
dec
xchg
out
and
xor
arpl
iret
sarl
jmp
pop
cmp
jecxz
add
mov
sub
xor
adc
push
mov
adc
push
or
cmpsb
pop
fmulp
outsb
call
pushf
inc
jnp
push
rclb
outsl
mov
dec
add
mov
jl
lods
dec
and
movsl
add
push
add
in
sbb
jg
add
push
leave
mov
divb
dec
frstor
les
aaa
lret
jl
addr16
jmp
sub
nop
adcb
scas
inc
xchg
inc
mov
jbe
cmpsb
ja
lds
fists
mov
testl
rolb
or
adc
xor
fs
inc
movsb
int
lret
xchg
test
iret
jp
data16
jge
mov
pop
cmp
icebp
xchg
lahf
es
test
and
inc
sub
rcrl
testl
nop
mov
loope
xor
repz
test
je
fcmovne
bound
mov
aam
jb
cld
xorl
hlt
rcrb
ds
jg
bound
inc
fxch
sbb
mov
mov
and
or
sub
pop
rcll
mov
inc
inc
sbb
stc
add
in
xor
sub
nop
test
fisubl
cmc
sbb
adc
jg
addr16
cmp
xlat
dec
mov
out
inc
fidivl
adc
pop
add
jmp
sahf
mov
mov
add
sub
daa
mov
lods
cmp
out
and
pop
out
out
jg
aaa
and
push
out
jle
or
les
std
xchg
repnz
inc
push
inc
flds
add
lret
fs
cmp
mov
rolb
sub
out
jne
loopne
mov
mov
loop
jb
mov
into
mov
push
push
test
and
xchg
xlat
sbb
fnstenv
js,pt
shl
push
cmpl
push
aaa
jae
rolw
inc
test
fcoml
stos
dec
dec
ss
lods
callw
insl
orps
jecxz
push
nop
fcompl
test
ljmp
mov
jbe
aad
xchg
xor
decl
pop
or
pushf
or
fistpll
xorl
inc
test
mov
push
into
nop
addr16
mov
leave
xchg
mov
mov
scas
push
sbb
xchg
in
cld
and
imul
sub
mov
and
nop
pop
jge
les
fiaddl
add
inc
hlt
pop
gs
or
lock
mov
sahf
jae
in
jge
roll
ret
ret
std
add
lea
pop
scas
jg
ds
or
hlt
inc
stos
cmp
add
loopne
xchg
sahf
fstl
xchg
mov
jno
lods
pop
data16
mov
pop
jbe
mov
pop
pop
sbb
adc
repz
sbb
and
adc
daa
sub
and
imul
arpl
mov
cmc
daa
push
mov
gs
pushl
dec
fsubs
adc
mov
mov
xchg
pop
sub
test
jns,pt
mov
lcall
js
pop
jbe
and
xor
dec
and
adc
lds
ret
mov
xor
cmp
cli
pushl
fsubr
cwtl
inc
dec
jno
inc
fmull
add
movsl
fidivs
adc
decl
out
or
sub
cmpb
pushf
xchg
lods
out
cs
je
mov
xchg
cwtl
in
daa
jge
movsb
xchg
mov
push
mov
jae
aam
push
mov
and
in
dec
fsubrp
lcall
ds
sub
ficomps
sbbl
popf
push
pusha
adc
and
push
negl
scas
push
scas
psrlq
stc
in
and
or
std
push
mov
out
push
adc
jmp
int3
mov
icebp
sub
iret
aad
shll
push
out
testb
mov
jmp
das
pop
or
arpl
in
dec
rclb
add
nop
fisubrl
movsb
lock
mov
adc
dec
lock
lods
xchg
adc
std
lret
lock
or
sbb
rolb
adc
idiv
jmp
fmull
mov
ja
adc
push
sub
ja
sub
add
mov
cltd
cmp
test
js
stos
hlt
adc
repz
inc
decl
xor
sub
aad
pop
xor
jbe
movl
cltd
jle
aad
stos
mov
lods
cmc
lret
gs
out
mov
ret
cmp
ficomps
pop
push
sub
push
cmpsl
pop
aaa
sub
inc
or
cs
inc
movsl
int
popf
xor
outsl
sbb
and
vmwrite
stc
out
lea
insl
mov
lods
mov
xchg
dec
cmp
sub
lahf
lahf
add
sbb
sar
cmp
out
pushf
sub
mov
in
sub
inc
or
adc
ljmp
adc
out
sbb
xor
push
daa
test
icebp
cli
jecxz
lds
adc
push
sub
cmpsl
lret
js
lahf
xchg
push
adcl
in
jp
adc
cmc
scas
add
xchg
shlb
into
jae
push
or
nop
cmp
mov
sub
push
sub
push
movsb
mov
sub
mov
push
mov
pusha
fucomp
lds
xlat
adc
and
push
flds
jl
dec
adc
shlb
ss
ret
jnp
leave
and
les
push
cmp
pop
mov
scas
imul
pusha
pop
scas
xorb
ds
fidivl
dec
sub
std
mov
mov
mov
push
lods
mov
aas
push
and
and
xchg
cmp
shl
loope
gs
inc
lcall
fdiv
insb
movsl
dec
jp
xchg
and
int3
jmp
insl
push
pop
out
dec
jae
sbb
fsubl
cwtl
fsubrs
inc
push
cmpsl
xchg
add
call
jle
mov
icebp
imul
xlat
sbb
or
cs
imul
push
fcompl
xor
mov
fisubrs
aad
jno
loop
loope
movlps
in
inc
rcrb
and
and
pushf
mov
mov
jo
test
das
ficompl
out
adc
aaa
outsl
dec
data16
loope
outsl
sbbb
xor
push
lock
mov
cmp
mov
xchg
xchg
dec
mov
sahf
sub
pop
sahf
mov
outsb
push
mov
and
or
jmp
sbb
sub
dec
in
dec
leave
adc
aam
outsl
in
test
jecxz
int
mov
cmpsl
mov
jae
jae
jne
es
xorl
bound
mov
data16
push
add
test
mov
mov
sub
clc
loope
pop
push
jp
je
lea
scas
adc
clc
sbb
ds
xchg
jg
jae
or
push
jecxz
mov
mov
xor
dec
dec
sub
and
push
insl
jo
dec
sbb
or
adc
mov
stos
in
lea
inc
sarl
sbb
or
xchg
fsub
imul
xchg
mov
pusha
call
cmp
or
sbb
mov
sub
mov
xor
xlat
lea
movsl
frstor
push
outsb
subl
jbe
into
add
mov
jecxz
xor
rcll
lret
ret
imulb
js
lahf
ja
testl
popa
ja
xchg
jo
mov
and
test
push
push
add
inc
sub
out
mull
mov
sti
out
pop
iret
mov
jle
in
xor
pop
dec
mov
into
pop
cmp
cmp
add
jmp
and
sub
lcall
add
lods
pop
jo
fidivl
outsl
dec
xchg
pushl
lret
aas
jb
push
add
inc
fwait
jb
int
test
adc
sbb
lcall
mov
bound
or
out
into
lock
lods
daa
loop
aaa
inc
sbb
or
jne
push
stos
dec
inc
xor
hlt
and
mov
or
into
add
pop
cltd
pop
pop
xchg
or
xor
pop
mov
dec
push
enter
xchg
jg
push
jle
dec
outsb
cmc
mov
ret
mov
and
and
sahf
fildll
cmp
adc
pusha
push
addr16
stos
sub
cmc
outsl
add
or
pop
roll
or
je
in
jno
mov
loop
ds
inc
pop
push
iret
cmp
pop
push
sbbb
mov
push
mov
cmp
arpl
mov
dec
pop
pop
mov
sarl
jle
xchg
cltd
mov
mov
fs
loopne
adc
fldt
out
inc
fldenv
sub
add
mov
or
daa
mov
xchg
xor
cld
pop
out
pusha
enter
push
test
mov
xor
mov
add
xchg
jnp
leave
and
mov
pop
mul
mov
add
fdivrl
mov
into
int3
or
movsb
ret
ds
ss
lahf
push
popf
cmp
mov
mov
cmp
push
or
mov
mov
cmp
sub
mov
mov
cmpsl
sbb
shll
mov
jge
ja
cli
sbb
lods
cmp
cmp
lock
insl
test
arpl
and
sub
cmp
jle
dec
mov
xchg
dec
insb
bound
add
push
cli
sub
cmp
add
pushf
or
insl
iret
xchg
enter
sbb
push
mov
mov
dec
inc
rcl
into
push
xlat
pop
push
notl
dec
xor
pushf
mov
push
in
insl
push
icebp
cmpsl
add
mov
scas
out
fidivl
fnstcw
mov
inc
mov
dec
sub
and
icebp
int3
gs
test
pop
push
mov
mov
pop
xor
inc
or
out
into
subl
add
loop
fdivl
bound
sti
call
xchg
std
push
sbb
les
pop
or
push
cs
push
sbb
imul
ret
loop
pushf
ret
aam
test
xchg
lret
xor
xor
stos
xchg
cmpsl
mov
mov
add
aaa
jge
cli
sub
inc
mov
lods
arpl
das
push
lods
pop
iret
pop
inc
adc
mov
fwait
mov
cmp
pop
imul
xchg
push
int
xor
or
lret
push
loop
add
inc
negl
push
mov
mov
fwait
leave
cmp
fs
cmpsl
stos
cmp
addb
xor
jl
je
xchg
dec
stc
aas
mov
dec
dec
jae
arpl
xchg
ret
imul
out
sub
mov
dec
fdivrl
std
add
adc
xlat
pop
stc
int3
hlt
xchg
ret
lea
adcl
xchg
idivb
xchg
sahf
mov
push
cmp
cmc
cmpsb
fmul
ljmp
jbe
and
jmp
mov
adc
or
sbb
add
pop
pop
push
in
js
and
lods
dec
jnp
cmpsb
fisubl
stc
sub
dec
lcall
mov
icebp
cltd
or
or
test
out
out
pop
xor
sbb
aad
jge
sti
lock
inc
ljmp
and
xor
bound
movsl
and
sub
push
lods
out
ja
sbb
and
jg
cmpsl
add
hlt
scas
rorb
out
dec
in
dec
xchg
push
mov
cmc
hlt
push
mov
pusha
jge
fdivr
fwait
and
xlat
fadds
pop
out
leave
sahf
mov
pop
push
jle
push
icebp
scas
fimuls
ljmp
in
or
in
jp
stos
stos
cmp
in
fidivs
movsb
test
orl
std
pop
sbb
mov
xor
inc
cltd
pop
xchg
push
jbe
xor
movsl
jp
cmpsb
je
or
push
movsb
mov
cmp
cmpsl
hlt
aaa
gs
fsubrs
and
hlt
in
jnp
cmp
lock
shrb
sub
cmpsl
xchg
std
shrl
dec
push
in
ss
repz
mov
loope
inc
pop
sbb
xchg
addr16
lea
xchg
and
addr16
xor
aad
dec
test
inc
jg
fidivrl
pusha
mov
popa
jge
inc
xchg
mov
dec
mov
aaa
lea
ret
mov
push
xlat
fisubl
or
dec
jl
fisttps
dec
add
inc
pusha
mov
xchg
lea
jmp
in
dec
push
and
xor
rorb
adc
scas
int
or
xchg
mov
xchg
cld
lret
cli
pop
and
int
test
in
jp
lret
xchg
gs
xchg
jle
adc
or
hlt
push
shll
ror
pop
mov
les
push
pop
imul
and
mov
fdiv
insl
sarb
aam
cmp
sahf
inc
mov
lret
mov
jae
std
inc
sbb
cmpsl
xchg
aam
or
aam
popf
inc
clc
pop
push
test
add
and
or
push
ret
and
sbb
les
xchg
xor
in
xchg
inc
push
test
pop
add
cmpsl
sub
aaa
pushf
popa
mov
pop
in
mov
pop
mov
jae
add
cmp
xchg
arpl
js
mov
pop
out
and
sub
into
cmp
cmc
xlat
xchg
cmp
outsl
imul
and
insb
sbb
call
popa
mov
fdivrp
inc
mov
and
and
in
cmp
pop
dec
imul
fcom
mov
inc
stc
addl
or
sti
cltd
nop
cmpsb
inc
lods
jns
ret
cwtl
shrl
xor
into
in
insb
mov
mov
inc
dec
pop
int
fistps
in
nop
pusha
cwtl
xchg
adc
mov
jp
xor
sub
cli
ret
xor
adcl
push
inc
jl
push
cmp
sbb
ret
int3
repz
add
or
arpl
mov
dec
ja
fistps
fsubl
in
sahf
adc
test
sbb
mov
cmp
rorl
insb
pop
pop
xchg
mov
ret
movb
decl
add
in
jns
icebp
and
in
xor
xor
xlat
mov
inc
out
push
cmc
enter
lods
rcrb
js
ds
aad
jl
jg
int
cld
mov
std
lret
call
lahf
and
xchg
and
in
gs
cli
fldl
inc
popa
popa
xchg
out
mov
pop
fwait
bound
lds
inc
jno
sbb
xlat
in
cmpsl
sub
or
lods
out
scas
mov
mov
sbb
dec
xchg
les
push
and
shrl
push
dec
jmp
mov
jmp
callw
sarb
in
mov
lret
into
jns
add
scas
sbb
shl
fisubs
aad
add
stos
lods
idivl
sahf
sub
je
ljmp
push
sti
cmpsb
outsb
fwait
repnz
sub
xlat
sub
ret
fbld
and
fcomi
jae
pop
into
jo
sbb
mov
push
into
imul
pop
shll
mov
test
lcall
xchg
ret
test
inc
rolb
mov
pop
std
jp
or
pop
push
into
pop
imul
pushf
sti
faddl
data16
in
and
mov
jbe
in
dec
shlb
mov
sub
adc
sub
mov
hlt
rolb
xchg
aas
cmp
xchg
push
mov
push
cmp
push
mov
rcll
dec
incl
and
cmp
cli
aam
inc
fcmovne
cmpsl
es
mov
sarl
fdivrl
dec
sbb
pop
cmp
push
nop
iret
jg
imul
aam
add
es
mov
push
rorl
mov
inc
mov
test
mov
clc
ss
fmuls
push
xlat
mov
jbe
pop
arpl
and
test
ret
std
fsubl
sub
sti
loope
push
push
push
sub
mov
dec
nop
ss
ret
ds
mov
aam
js
bound
insl
jg
cld
mov
inc
mov
mov
leave
dec
pop
or
leave
jo
js
jbe
push
inc
hlt
push
pop
lds
test
cltd
jne
and
es
add
pop
in
loop
movsb
test
jbe
and
es
push
cmc
imul
in
and
cli
jns
xchg
cmp
lahf
test
xchg
fisttpll
pop
mov
mov
insb
xor
psubsw
push
xchg
jae
push
sub
jb
int
or
test
decl
scas
inc
jnp
xlat
popf
sub
lods
lret
or
adc
jmp
mov
mov
test
fs
xchg
popf
cwtl
outsb
jl
mov
cmp
ret
fnstenv
fstl
cli
inc
movsl
pushf
and
gs
pushl
sub
cmp
mov
cli
fisubl
mov
sbb
sbb
pop
into
negb
xor
loopne
movsl
test
or
dec
insb
nop
jmp
inc
out
cmp
mov
pusha
push
int
mov
xchg
addr16
inc
push
in
add
int
iret
xrelease
fcmovnu
mov
fistpl
ja
sub
pop
push
pop
sbb
inc
and
xchg
xor
push
mov
movsl
adc
sbb
cs
inc
shrb
push
push
lods
xchg
push
imul
or
lods
mov
cwtl
and
or
and
mov
dec
rorb
int
cmp
push
andl
dec
fisttpl
add
jecxz
fiadds
mov
sub
je
add
in
push
out
sub
pusha
xor
mov
test
lahf
leave
in
pushf
mov
bound
and
xor
out
fwait
sarl
mov
inc
inc
faddp
rcll
rcrb
das
and
in
loop
ljmp
pop
sbb
mov
gs
roll
mov
ret
fistpl
add
sbb
pop
data16
enter
adc
das
ds
dec
testl
nop
or
ss
lds
cmpsl
lds
roll
xor
adc
into
xchg
in
adc
adc
insb
lea
pop
and
lea
ffree
insl
js
lock
xor
mov
xchg
xor
xchg
xchg
pushf
test
stc
mov
push
mov
push
add
pushf
dec
add
mov
outsb
cmp
jmp
dec
pop
das
sbb
jmp
sub
rolb
outsb
sbb
inc
jbe
scas
sub
sti
insl
fmul
dec
dec
pushf
cmp
insl
mov
xchg
pop
js
loope
jge
gs
push
repnz
outsb
cmpsl
out
je
xchg
pop
sub
inc
cmp
mov
pop
xor
and
into
pop
cmove
das
fnstsw
xor
test
inc
cmp
stc
inc
mov
enter
iret
mov
iret
lcall
lods
lods
ja
or
and
pusha
xchg
sub
mov
or
pop
adc
bound
cmp
dec
sbb
push
shrb
adc
mov
lds
ret
jg
sbb
xorl
inc
arpl
std
popf
pop
repz
stc
aam
add
aaa
push
dec
std
mov
imul
loop
or
rol
nop
cmp
inc
gs
bound
subl
and
sar
fstpl
jbe
add
jae
add
add
cltd
test
and
jae
data16
push
lods
fs
loopne
adc
add
mov
xor
out
sbb
cmp
sarl
cs
add
das
xor
aam
out
fwait
cltd
jg
lock
pop
rcrb
repz
loopne
and
fdivr
inc
sub
mov
mov
imul
sub
hlt
cli
imul
test
test
lods
bswap
repz
test
aam
dec
test
and
mov
imulb
add
mov
push
mov
add
cmp
test
imul
dec
add
outsl
push
fmuls
jecxz
in
fbstp
jmp
push
mov
jg
pusha
pop
lds
sbb
ret
dec
and
xchg
jg
sub
mov
ds
or
mov
jae
popa
orl
adc
add
and
ret
mov
outsl
adcb
subb
enter
out
mov
test
mov
push
fisttpll
or
jo
sbb
pop
push
mov
sbb
add
and
jmp
xchg
jb
mov
mov
bound
dec
xchg
add
stc
out
test
fidivrs
xchg
lret
xchg
sub
in
fdivrl
jnp
or
ja
cmp
lods
and
mov
jns
shrb
cwtl
ret
cmpsb
inc
pop
push
insb
adcb
sbb
ds
and
jl
pusha
cmp
bound
mov
fstpl
fwait
push
or
jae
jmp
mov
mov
jl
adcb
ja
adcb
scas
and
in
push
ffree
dec
repnz
dec
sub
insb
fisubl
and
out
push
and
fstps
fdivr
pop
jmp
mov
adc
movsb
pusha
mov
test
and
bound
sbb
leave
cmp
mov
lods
ljmp
and
mull
fcoms
jmp
loope
ljmp
push
sub
mov
add
add
mov
scas
jmp
mov
adcb
xchg
movsb
out
scas
test
mov
test
dec
jmp
inc
idivb
ret
jns
add
lea
mov
or
push
lret
sahf
or
cmp
into
fwait
rorb
inc
popf
nop
stc
mov
inc
pop
in
icebp
leave
repnz
fmuls
and
icebp
mov
lret
push
mov
mov
adc
mov
fs
jbe
call
sub
and
push
sub
pop
fstps
mov
imul
push
jnp
loop
cmc
test
repz
adc
decb
fisubl
push
test
pushf
sbb
in
icebp
arpl
mov
xor
shrl
mov
cwtl
enter
pop
pushf
cmpsb
lea
push
or
mov
lret
test
cmc
outsl
jg
mov
and
mov
movsb
pop
inc
sbb
or
mov
nop
jno
pop
mov
adc
push
negl
lods
cld
out
outsb
sahf
lret
adc
repz
jmp
jns
pop
aas
lds
mov
inc
test
lds
pop
in
jno
sbb
call
aam
decb
outsb
xchg
daa
cmp
imul
sbb
mov
or
insl
xchg
out
dec
sbb
out
mulb
mov
pop
jb
cmp
lcall
mov
add
mov
inc
add
pop
push
imul
jp
pushf
data16
inc
jne
ret
pushl
mov
jne
dec
jbe
repz
std
bound
js
dec
jnp
sbb
jnp
pusha
sti
pop
cs
in
inc
int
mov
cwtl
inc
aas
mov
inc
fs
sub
rcr
das
push
leave
add
xchg
inc
aas
pop
pushf
sub
mov
out
fnstcw
or
data16
or
ja
dec
push
inc
in
test
or
stc
inc
daa
and
es
and
push
jecxz
mov
inc
jle
and
aad
lcall
jmp
mov
mov
cmc
in
das
xor
mov
stos
cld
or
aam
push
stos
rorl
xchg
or
push
cmp
sbb
lods
sub
loop
mov
push
fldenv
jbe
daa
pop
and
mov
std
in
mov
rcr
je
xchg
mov
aam
push
xchg
rol
sbb
cmp
pop
movsl
lea
adc
mov
mov
lds
int
mov
or
sbb
lret
jnp
gs
fadds
jmp
shlb
mov
mov
aas
add
pop
xchg
add
adc
pop
adc
adcl
pop
xchg
mov
sub
loopne
imul
adc
add
aad
loope
std
int3
push
loope
test
cmc
and
loopne
push
jge
jo
dec
rcrl
inc
lret
jmp
inc
push
aad
mov
xor
sub
inc
sbb
push
dec
lcall
repnz
loop
cmp
pop
sbb
sub
push
mov
scas
aas
and
stos
cmp
dec
popa
and
insb
sub
testl
mov
dec
cmp
fwait
lds
in
add
mov
mov
std
in
mov
hlt
dec
cs
out
jecxz
mov
mov
popf
xlat
lcall
dec
stc
jle
fimull
fs
pop
fsubrs
and
outsl
mov
fcoms
pop
in
lret
addr16
jg
inc
and
mov
or
mov
test
add
out
jg
lret
push
adc
or
int
outsb
cmpsb
jns
jl
je
pop
push
xchg
mov
cmp
sti
lret
stos
lock
dec
push
xorb
pop
test
sahf
mov
add
lods
sbb
bound
in
mov
loope
add
lret
inc
clc
inc
aam
test
cmpsl
pop
ljmp
mov
fmuls
mov
sbb
xchg
arpl
push
sbb
push
pop
das
inc
pushf
add
push
mov
adcl
fdivs
lods
mov
cs
jmp
stos
pop
mov
pop
pop
cmp
adcl
ret
out
shll
pop
or
pushf
nop
cwtl
div
es
xchg
stc
jecxz
sub
mov
out
add
mov
lods
cld
mov
jae
scas
rorb
add
scas
cmp
xchg
push
mov
daa
push
cmpsl
or
sahf
add
mov
ds
and
sub
push
shlb
adc
push
pop
jp
push
xchg
es
in
icebp
mov
lret
sbb
clc
ja
or
xor
push
out
lret
cmpsb
out
notb
out
outsl
push
push
xchg
adc
scas
sbb
ja
call
add
icebp
xchg
sbb
popa
mov
sti
loope
stos
cmc
jnp
sti
out
scas
and
aaa
dec
mov
out
jecxz
movsl
fidivl
int3
sbbl
xor
pop
pop
insb
mov
adc
cli
push
shrl
jns
mov
outsb
aad
pushf
out
popa
out
fcmovu
jae
pop
mov
repnz
imul
xor
movsl
xchg
setl
cmp
sub
lret
aam
test
sbb
jae
xchg
sbb
stos
cwtl
loope
or
daa
loop
mov
add
mov
ds
test
jno
jle
arpl
dec
cmp
pop
adc
add
test
sub
inc
jns
dec
in
pop
outsb
aad
inc
mov
pop
dec
pusha
xor
int
jb
mov
mov
fwait
jne
mov
test
flds
add
icebp
add
movsb
leave
push
out
dec
out
mov
shlb
or
jae
shr
mov
push
inc
sbb
push
mov
mov
cltd
sub
dec
and
insl
leave
aaa
lods
dec
push
add
xlat
mov
les
adc
hlt
push
pop
arpl
mov
imul
adc
enter
sbb
jo
xor
adc
mov
in
cmp
pusha
inc
xchg
xchg
insb
outsb
testb
insb
add
decl
fistpll
outsl
sub
jb
subl
lods
ljmp
mov
jae
push
adc
imul
inc
or
mov
cwtl
adc
mov
inc
subl
jp
loop
xlat
rclb
jl
push
das
faddl
xchg
and
in
add
push
iret
stos
ss
lret
nop
imul
loope
clc
pop
xor
gs
dec
push
iret
aad
adc
xchg
call
push
sahf
jne
mov
pushf
filds
push
mov
pop
mov
lods
jne
mov
jl
add
sbb
in
adc
xor
mov
sbb
xchg
xor
jp
mov
lods
shrl
or
pop
scas
xchg
xor
and
push
xchg
ror
mov
pop
addr16
xor
out
hlt
adc
dec
push
fwait
test
sahf
jl
rclb
jne
push
in
int
rcr
out
nop
mov
xor
add
leave
mov
dec
cli
imul
hlt
cli
jecxz
sub
mov
mov
xchg
insb
fidivl
fdivl
xor
loope
shll
lret
push
ret
xor
mov
add
out
lods
inc
push
xchg
out
insb
adc
xchg
std
xchg
mov
inc
nop
shll
xchg
mov
notb
insl
out
and
adc
mov
pop
cld
xor
outsb
jl
push
lea
mov
push
mov
mov
jp
lahf
lret
jle
xor
xor
and
inc
fists
mov
dec
mov
lock
pop
xchg
add
and
xor
pop
inc
mov
jno
push
jbe
lahf
bound
jns
mov
cmp
sub
jg
pushf
sub
xor
lds
mov
xor
stos
sub
ljmp
inc
outsl
in
test
fiaddl
in
inc
ret
push
arpl
inc
pop
mov
sbb
insb
cmpsl
xchg
pop
ljmp
out
xchg
inc
in
repz
outsb
into
dec
adc
xchg
cld
adc
adc
jnp
mov
out
jecxz
pop
enter
xchg
push
hlt
sbb
inc
pushl
gs
lods
mov
sub
fiadds
cmpsb
cs
mov
out
aas
movnti
mov
push
mov
sbb
mov
into
loop
ret
inc
stc
popa
jle
dec
xor
mov
je
das
sahf
testl
pop
xor
jge
xorb
bnd
clc
dec
jg
movq
sub
fadd
addl
scas
std
cmp
cld
sbb
aam
leave
das
xchg
mov
loop
jecxz
inc
push
mov
jo
jnp
fisttps
xchg
pop
add
xor
pushf
fisubl
jl,pt
jmp
push
pop
idivb
test
lea
push
inc
add
in
or
push
mov
xor
out
mov
jl
and
mov
jg
ss
and
loop
inc
jge
add
or
incb
lret
insl
pop
add
mov
movsb
sub
out
sahf
mov
rcrl
push
push
dec
cmp
repnz
jns
mov
fstps
push
mov
add
ret
mov
xchg
or
fistpll
sub
fmull
xor
dec
pop
jle
or
outsb
push
fbstp
cmp
adc
dec
leave
ffreep
or
icebp
xchg
stc
mov
xchg
movsl
setb
cmp
scas
test
or
sub
mov
xor
daa
adc
cmc
in
flds
loopne
jno
or
repnz
inc
mov
adc
jbe
xchg
mov
xorb
jp
sbb
cmp
js
xchg
xchg
dec
inc
dec
inc
add
xor
dec
mov
cs
xchg
mov
out
sbb
bound
movsl
pop
in
xlat
ljmp
mov
ja
hlt
clc
push
jae
mov
cs
scas
bound
pop
mov
xchg
mov
xchg
xor
into
mov
lret
add
fdivs
cwtl
clc
es
cld
gs
and
test
into
pusha
mov
popf
shl
pushf
rcll
cwtl
or
cmpsb
pop
outsb
ds
div
or
test
pop
lods
int
iret
mov
cwtl
adc
jne
inc
cmpb
aam
nop
enter
outsb
lods
jne
pop
fwait
cli
stos
add
gs
xor
push
nop
cltd
pop
jp
daa
add
testl
sbb
fadds
popf
hlt
or
out
insb
push
and
out
fdivs
xor
mov
out
stos
test
jl
in
and
loop
call
jbe
test
cmp
mov
imul
int
arpl
fstp
inc
es
imul
aad
icebp
adc
cmpsl
dec
stc
or
outsl
lcall
mov
lea
out
dec
lret
ror
jmp
cmp
cmpsb
xor
push
push
lret
push
pop
shll
xchg
fldl2t
insb
pop
jle
gs
movsl
fs
fists
jl
add
xchg
stc
mov
stos
fxch
ss
adc
push
jl
mov
mov
hlt
cmpsl
or
xadd
xchg
sbb
in
mov
out
push
or
pop
out
insl
cld
mov
fcomi
adc
cmp
popa
fwait
mov
pop
jp
cld
call
mov
and
push
and
lock
sub
jp
popa
lock
in
push
repz
inc
subl
or
dec
sub
sbb
pop
mov
and
or
aad
pop
lret
lahf
push
inc
outsl
stos
or
adc
inc
xor
sbb
adc
aaa
xchg
mov
adc
inc
push
xor
or
cs
inc
call
clc
mov
adc
adc
loope
insl
cli
add
dec
packuswb
out
sub
and
or
mov
and
mov
lret
mulb
stos
jg
fcoms
push
fdivr
fcoml
mov
lcall
arpl
das
cmp
mov
pop
cmc
fcoml
dec
ds
frstor
ret
hlt
movsl
sub
divb
adc
adc
das
gs
ljmp
pop
mov
leave
frstor
inc
xor
fisubrs
ljmp
pop
inc
add
sbb
sub
repz
adc
mov
mov
insb
and
push
pavgw
mov
dec
insb
xlat
clc
sub
or
out
loop
aad
add
jb
ja
xchg
xchg
sbb
stos
stc
xchg
lahf
outsb
rcrl
mov
repz
sarl
gs
jnp
and
cmp
push
sub
mov
mov
lea
cmp
imul
and
pop
xor
xchg
js
hlt
add
inc
pop
push
popf
sbb
mov
data16
adc
mov
and
jl
sar
add
dec
in
push
inc
dec
jno
or
jecxz
xor
push
shll
insb
outsb
movsl
jno
mov
add
lahf
pop
mov
fs
dec
js
movsb
mov
outsb
out
adc
push
adc
and
mov
jl
mov
cmp
cld
ds
and
or
aad
pop
pop
jl
inc
loop
add
aas
xlat
int3
ljmp
out
inc
jbe
lahf
loop
pop
mov
leave
arpl
ja
dec
jbe
inc
jecxz
push
mov
ret
cwtl
xchg
stos
std
sub
lcall
jb
push
ret
jmp
pop
pop
xor
push
test
lret
cmp
jecxz
jae
sub
xor
out
les
out
int3
fwait
stos
addr16
xchg
sbb
adc
mov
stc
bound
adc
or
cmp
or
sbb
xlat
in
hlt
pop
sub
pop
and
repnz
pusha
mov
loop
outsl
dec
daa
frstor
cs
lret
mov
sbb
mov
jmp
and
sub
jge
test
add
sub
mov
pop
or
cwtl
sub
jecxz
and
adc
mov
xor
stc
add
rcrb
or
jno
adc
adc
jle
add
xchg
xchg
or
push
jo
adc
in
cmp
out
repz
hlt
cltd
jmp
mov
jge
pop
lds
ja
sub
ja
xchg
jge
pop
out
dec
rolb
int
and
fldt
dec
repnz
push
lcall
out
int
aad
loop
fwait
movsb
ret
inc
inc
iret
mov
gs
clc
gs
ja
sti
push
xor
mov
out
in
movsl
fcmovnb
in
and
cli
mov
push
push
push
jns
out
push
or
cs
cmp
pop
xchg
aaa
pop
lcall
lahf
outsl
in
idivl
addr16
das
add
sub
xchg
sbb
popa
pop
fimull
push
cmp
mov
pop
push
mov
movsl
in
sub
aaa
sub
and
adc
mov
cmpsb
sub
add
push
stos
shufps
or
push
lds
lods
inc
into
out
dec
stc
test
lret
bound
int
push
jbe
xchg
btr
popa
test
jns
adc
scas
sbb
sti
pusha
mov
in
or
shrb
dec
and
inc
pushf
dec
out
sbb
xorl
movsb
cmp
arpl
xchg
dec
sub
cmp
leave
ds
in
xlat
xor
jle
jmp
mov
hlt
xchg
hlt
push
xor
mov
pop
bound
int3
cmc
mov
cwtl
or
clc
adc
mov
cmpsb
jbe
loop
or
stos
popf
repz
jle
push
inc
mov
in
insb
shlb
stos
fistpl
dec
xor
jmp
adc
scas
test
push
xlat
pusha
out
sbb
mov
xchg
add
icebp
aam
mov
mov
mov
adc
jns
mov
inc
pusha
int
nop
mov
pop
jl
scas
sub
repnz
jnp
xor
shr
push
aas
add
aam
aaa
mov
in
bound
mov
shrb
pushf
sub
dec
rorl
sahf
ficoml
mov
xchg
add
dec
test
ret
sbb
push
int
lods
xchg
loope
negl
call
and
pop
sbb
mov
cmc
lcall
pop
in
lahf
xor
mov
in
push
cltd
dec
ja
xchg
push
mov
dec
outsb
adc
cwtl
iret
out
lds
or
fisttpll
jno
outsl
or
dec
inc
mov
fdivl
sarl
jne
icebp
lahf
or
lods
ds
add
cmpsl
inc
iret
xchg
sub
or
pop
adc
xchg
test
mov
in
sbbl
ret
cmp
cmpsl
and
xor
test
fiadds
push
adc
fsubrl
icebp
ffree
outsb
cmp
jecxz
rcl
rcll
or
fiaddl
jg
test
insb
push
cld
jo
sbb
addr16
jg
sbb
adc
mov
jmp
xchg
pop
sub
inc
lret
dec
clc
push
sub
push
add
adc
cs
jg
push
cmpsl
repz
aas
js
nop
adc
cmpb
lahf
fisubs
ds
in
add
je
sbb
jb
jns,pt
stc
mov
stos
movl
loope
xchg
movsl
in
in
sub
fildl
hlt
mov
jns
dec
push
jp
sarl
les
rol
test
fsubr
push
adc
push
jmp
rclb
movsl
mov
stos
bound
pop
cmp
daa
rclb
call
ja
stc
mov
push
negb
insl
jg
sbb
xchg
rorl
mov
out
push
jae
orl
mov
pop
frstor
xchg
ficoms
jb
sub
cmp
mov
xchg
add
and
stc
stos
or
push
imul
js
cmp
dec
in
lods
push
inc
scas
mov
sbb
mov
enter
jns
enter
jecxz
sub
out
movsb
gs
push
mov
jns
stos
lret
movsl
jb
icebp
dec
stos
je
inc
mov
cld
fs
arpl
out
sbb
lcall
push
in
cmp
sbbb
add
call
ret
cmpsb
jo
pop
les
sti
xor
and
dec
mov
xor
idivl
out
in
xor
sbb
push
fs
dec
sub
rol
ret
test
in
push
mov
lods
mov
fcmove
xlat
adcl
sub
sbbb
ret
adcl
leave
divl
mov
bound
lods
stos
push
mov
test
dec
inc
jbe
shll
pop
sbb
or
in
mov
mov
iret
or
mov
dec
mov
push
pop
push
add
mov
mov
negb
loopne
sbb
mov
mov
mov
ja
push
pop
test
shr
clc
scas
pushf
jae
push
daa
inc
mov
mov
adc
adc
fsubr
add
outsb
sbb
xchg
mov
xchg
cmc
sbb
sub
lods
xchg
mov
jno
jbe
cli
repnz
and
repnz
pop
cmp
xchg
test
fwait
xchg
fs
mov
inc
cli
movsb
icebp
in
mov
mov
jne
mov
sub
jecxz
cmp
mov
jmp
fwait
popa
pop
and
pop
das
adc
lret
inc
pop
xchg
adc
xchg
push
pop
mov
xchg
xchg
inc
and
sub
cwtl
sbb
imul
mov
es
test
add
mov
jge
sub
leave
cld
je
inc
stc
mov
cmpsb
sti
jmp
lret
mov
mov
pop
shlb
out
mov
mov
sub
sbb
adc
sti
mov
lahf
pop
dec
scas
sbb
sub
pushf
cmp
std
and
mov
xor
push
loope
pop
jbe
add
add
cld
test
sbb
lock
lret
lret
mov
sahf
fimull
mov
push
and
inc
cmp
and
push
xor
iret
cmpsb
adc
dec
push
jno
inc
xchg
mov
and
sub
imul
lds
mov
in
icebp
arpl
pushf
mov
mov
loopne
lret
mov
cmpsl
adc
inc
icebp
pop
dec
rcl
pop
adc
hlt
outsb
xor
adcb
adcl
mov
and
paddb
sub
pop
popf
or
xor
jnp
cli
lret
sub
pop
out
jb
or
int
jge
out
push
leave
popa
pusha
pop
es
xlat
adc
cmp
add
daa
out
lahf
sahf
adc
rcll
push
push
test
adc
jge
mov
mov
loop
mov
sar
mov
xor
ss
pop
ja
and
add
or
jecxz
mov
or
mov
hlt
cwtl
lret
push
cmpsb
or
jl,pn
xor
push
jmp
xchg
imul
push
push
icebp
aam
xor
inc
cmc
cli
std
inc
jae
mov
jb
sub
mov
mov
jo
adc
dec
ret
cmc
stos
rclb
fadds
out
and
andb
shrl
sbb
daa
pop
push
xor
jne
stos
push
cmp
or
cmc
scas
cltd
xchg
push
shll
repz
fmulp
inc
pop
rorl
dec
inc
xor
clc
pop
inc
mov
bound
mov
push
or
adc
xchg
mov
roll
mov
jge
cmp
inc
sahf
daa
popf
pop
gs
leave
mulb
iret
repz
movsl
add
fildll
js
iret
stc
and
dec
cwtl
sbb
xor
sbb
es
arpl
push
cmp
push
adc
popa
xchg
stos
sbb
push
jecxz
mov
sbb
and
cwtl
mov
lea
push
add
inc
add
les
sub
aam
clc
lret
mov
fld
out
cltd
mov
loop
ds
dec
xor
pop
mov
xor
xor
daa
int3
dec
dec
and
add
int
jle
sub
cmp
and
or
cmp
in
jo
xlat
ljmp
jae
popf
dec
inc
sbbl
insb
xchg
or
and
andb
mov
fisttps
es
dec
mov
inc
mov
add
mov
fldt
mov
inc
push
jl
out
aam
push
sti
loope
and
push
xchg
lcall
sbb
in
cs
ss
cmp
in
lock
imul
jo
inc
aas
push
pop
xor
movsl
shrl
cmp
sbb
aad
inc
bound
das
jo
clc
mov
int3
pop
and
cmc
ss
push
dec
out
or
xor
fstpl
test
les
push
in
mov
or
sbb
neg
iret
aas
imul
scas
dec
out
sbb
lods
and
test
mov
imul
jl
in
sub
icebp
pop
mov
mov
rep
icebp
mov
jno
add
iret
addr16
and
cmp
dec
repz
test
push
adc
das
add
push
movsb
test
push
add
outsb
or
mov
jmp
sahf
filds
outsl
into
hlt
cmp
lock
xchg
xchg
push
popf
icebp
jnp
outsb
in
cltd
xchg
xchg
movsb
xor
stos
insb
jno
loope
jmp
xchg
xor
sub
adc
and
xchg
int
mov
push
arpl
jecxz
rcr
out
push
inc
sarl
lret
out
mov
fwait
cli
dec
cmp
fs
mov
stc
fistpl
jmp
arpl
pop
mov
mov
push
jnp
call
sahf
daa
std
push
pop
loop
jl
ret
mov
sub
xor
inc
lahf
cmpb
jne
lahf
mov
in
enter
push
ficompl
inc
repz
xlat
pop
mov
push
jns
inc
xor
xchg
stos
add
push
mov
sub
in
cmpsb
loop
sbb
int
xlat
sbb
lcall
dec
push
push
popa
jle
andl
add
push
gs
jnp
jle
cmc
nop
cmp
push
jne
sbb
iret
sub
mov
mov
jae
jmp
pusha
push
cmc
mov
xchg
add
lret
mov
leave
sub
sub
ljmp
jae
inc
mov
mov
rcrl
fucomip
mov
xchg
xlat
xlat
mov
sbb
and
xor
imul
push
fstps
pop
cli
jle
xchg
sbbb
call
rclb
push
cmp
push
lahf
scas
mov
es
cmp
adc
and
jecxz
cmpb
repnz
add
outsl
mulb
jnp
fwait
adc
in
inc
popa
mov
pop
out
mov
dec
mov
popa
mov
sbb
xchg
arpl
leave
xchg
out
test
xlat
lahf
pop
or
ljmp
or
test
jno
js
cwtl
add
lea
xchg
fs
nop
cmp
idivl
adc
enter
add
testb
ret
movsb
cltd
push
std
xor
or
push
xchg
nop
and
jns,pt
or
sbb
mov
mov
add
cli
fwait
lret
movsb
ret
jns
clc
cmp
xor
and
or
cmc
mov
pavgb
cs
pop
leave
or
adcl
daa
xchg
clc
push
push
loopne
popf
push
mov
pop
xchg
xchg
fiaddl
arpl
test
jnp
out
mov
lds
dec
ds
xor
fiadds
js
movsb
push
pop
call
inc
insb
orl
xchg
push
adc
andl
fisttpl
xlat
cmp
sbb
xchg
sbb
pop
in
ja
dec
lds
xor
dec
gs
dec
movsl
daa
adc
fldl
xorb
in
inc
pop
aam
les
stc
lret
sar
xor
in
and
mov
es
adc
jmp
mov
bound
push
or
inc
icebp
out
in
pop
sub
aad
mov
dec
cmp
jp
cmp
and
adc
or
movsb
insb
movsb
adc
xor
xchg
jle
test
inc
scas
orl
push
push
in
mov
out
sub
mov
cmpb
cmp
push
aaa
in
enter
scas
and
jbe
aaa
add
sahf
out
inc
sbb
movsb
sbb
loope
lret
mov
insb
add
dec
sbb
cmpb
xchg
dec
nop
out
mov
cmp
lock
cmp
fldenv
adc
cmpl
or
xor
aaa
mov
das
cmpsb
xchg
test
mov
dec
push
movsb
mov
jb
cmp
add
lea
cs
divb
dec
inc
sbb
les
mov
sbb
lock
pop
movb
leave
arpl
dec
push
aaa
cmp
jbe
mov
jge
rcl
scas
fwait
or
sbb
fldt
add
cmp
and
push
hlt
jle
leave
repnz
pop
sub
inc
push
and
or
test
mov
leave
pop
fidivrl
pop
push
and
sbb
ja
stos
inc
dec
or
pop
ds
shr
test
fstpl
sbb
mov
sbb
shrl
cmp
out
sbb
pop
fdivrl
test
out
sbb
push
mov
jp
jg
les
and
fldl
jle
dec
fisttpl
ret
sahf
addr16
mov
daa
imul
andl
cmc
lods
push
mov
stos
divb
dec
add
mov
mov
xor
outsb
mov
or
mov
mov
and
jmp
adc
push
jo
std
scas
imul
loope
scas
xlat
mov
cmc
mov
jle
leave
xchg
inc
pop
es
fs
fnstsw
ret
out
xchg
icebp
mov
xchg
rorl
divl
mov
mov
lcall
mov
fs
sahf
bound
out
fcoml
insb
cmpsl
es
dec
sbb
ss
mov
in
mov
sbb
jns
jg
lret
pop
ret
cmp
cmpsl
lcall
ljmp
inc
xor
sub
notb
insl
mov
mov
sbb
test
jge
out
cwtl
xor
mov
cs
adc
jmp
ret
sub
popf
scas
pop
mov
jmp
sub
int
push
cmpsl
popf
sub
int3
imul
sbb
jle
mov
fisttpll
shl
push
pushf
mov
push
bnd
mov
inc
inc
ds
and
lea
sti
xor
fwait
call
fimull
sub
dec
mov
inc
mov
sbb
dec
lahf
mov
psrlq
mov
xor
mov
pop
popl
and
ljmp
out
cld
dec
addb
mov
cmp
enter
iret
imul
jg
into
fisttpll
jno
cmpsl
and
pop
ja
adc
xor
addl
sub
enter
movsl
cmp
mov
adc
dec
dec
std
je
pop
lds
lds
daa
mov
mov
scas
and
in
lods
les
xor
leave
cmp
adc
cmpb
movl
mov
out
jae
mov
movsb
repz
xchg
test
cmpsl
aad
outsb
pop
sub
jl
push
clc
jnp,pn
incl
pop
xor
subb
pop
pop
jb
mov
mov
imul
pop
loope
push
gs
lcall
mov
xor
push
add
in
add
cmp
repnz
pop
inc
adc
mov
stc
ja
jbe
in
and
fwait
mov
xchg
adc
mov
in
movsb
aam
les
jb
scas
fwait
adc
adc
mov
xchg
add
adc
rorl
clc
out
test
cli
pop
stos
cmp
pop
aaa
dec
jmp
pop
adcb
sbb
adc
mov
xchg
xchg
push
mov
outsl
loope
movsl
cwtl
jnp
add
inc
bnd
add
pop
mov
gs
adc
sbb
dec
and
mov
push
add
in
mull
push
or
mov
pusha
out
test
jnp
adc
push
fs
sbb
xchg
addb
fldl2t
int3
outsl
sahf
sub
imul
push
dec
iret
test
cmpl
adc
mov
lock
mov
sbb
push
leave
imul
into
pop
cmp
pop
pop
test
xchg
outsb
insl
fwait
test
xor
and
sbb
add
dec
sahf
jp
lcall
daa
adc
jno
and
loope
fisubrs
jo
adc
ds
mov
inc
sbb
adc
push
imul
xchg
cmp
jge
and
mov
dec
imul
mov
mov
idivl
add
pop
xor
or
stc
stc
push
inc
sahf
loope
repnz
jecxz
xor
or
lret
jns
ss
jp
pop
add
mov
or
insb
loop
out
ss
dec
in
ret
pop
outsb
iret
stc
adc
imul
iret
jns
pop
imul
repz
sub
pop
pop
ret
pusha
adc
cmp
xchg
in
add
out
daa
insb
xchg
xchg
push
mov
hlt
clc
or
xchg
or
aas
ljmp
xor
bound
push
adc
js
cmpsb
jno
std
fcmove
gs
xorb
push
std
sbb
dec
sbbl
mulb
mov
std
lods
jnp
add
je
jnp
cld
aaa
mov
fs
insb
cmp
cs
loope
xchg
cmp
or
out
rcrb
and
mov
pusha
jb
out
dec
pop
jmp
adc
xor
mov
insl
dec
bnd
pop
repnz
push
mov
loope
cmp
push
cli
jnp
notl
and
xor
ljmp
sub
shl
scas
and
movsl
xorb
add
jmp
in
adc
or
mov
cmp
sub
bound
jo
and
call
pop
adc
stc
stos
xchg
aad
sbb
mov
std
rcll
xor
adc
mov
addl
mov
push
xor
and
out
jbe
push
add
pop
in
jp
xor
cmpsb
sbb
addr16
or
or
mov
cmp
push
divps
arpl
adc
ficompl
mov
pushf
mov
add
repz
aam
jecxz
push
test
nop
jae
lock
ja
dec
inc
sbb
cli
popa
xor
aas
adc
pop
pop
push
push
sub
fwait
daa
mov
cmp
fiaddl
mov
shll
push
ds
and
enter
iret
addr16
shl
ds
xchg
cmpsb
leave
outsb
adc
je
jl
adc
outsl
int
add
ljmp
xor
xchg
sub
lret
cmpl
insl
xor
adc
test
fildl
mov
cltd
jbe
jl
in
sub
ret
pop
xchg
scas
push
mov
filds
mov
ljmp
dec
mov
popf
jae
je
xlat
ret
inc
arpl
fbstp
mov
xlat
aas
movsb
and
es
xchg
sub
xor
xorb
lock
push
ja
arpl
int3
rorl
hlt
pop
jno
dec
dec
dec
sub
mov
pop
or
or
adc
dec
mov
fstl
repz
push
sbb
clc
mov
loope
mov
lea
fidivl
or
ljmp
mov
int3
ljmp
xlat
es
das
adc
or
cmpsl
out
xlat
cld
in
and
adc
adc
loopne
in
shlb
into
hlt
jo
mov
mov
rcl
arpl
inc
aam
das
lock
inc
lds
lret
cmp
andb
lods
pop
mov
dec
aaa
cmp
divb
js
test
sbb
adc
cltd
aaa
add
xchg
orb
mov
and
or
je
aaa
stc
aaa
shlb
push
pop
sbbl
gs
repz
sbb
lods
in
pop
stc
push
leave
adc
push
cmp
dec
mov
dec
sahf
jp
adc
jb
comiss
lret
loop
xchg
xchg
aad
adcb
mov
shrl
xchg
loop
mov
sub
outsb
cld
stc
out
in
rol
mov
xchg
mov
test
and
mov
jnp
pop
xchg
addps
mov
pop
pop
jge
pop
aad
es
or
jne
mov
cs
mov
mov
out
rcrl
ja
mov
into
js
cwtl
ljmp
jg
ret
mov
divps
mov
cld
mov
sbb
mov
sub
dec
push
sbb
push
test
daa
jae
lahf
adc
cmp
nop
xchg
mov
sbb
and
mov
lods
cmp
jl
add
or
dec
pop
cmp
mov
adc
cmp
in
pop
push
jb
mov
sbb
pusha
js
mov
js
ja
enter
mov
jne
pushf
sbb
lods
mov
push
loop
mov
leave
add
push
mov
push
cltd
rorl
rorb
gs
push
and
fwait
test
xchg
clc
ss
or
fldcw
dec
pop
sub
dec
adc
cltd
sbb
sub
and
cmp
lret
out
pop
out
xchg
aam
add
dec
inc
mov
push
les
sub
fldenv
push
addr16
cld
movsb
push
cmpsb
pop
mov
sbbl
push
ljmp
fsts
sub
neg
pusha
hlt
inc
insl
in
inc
repz
jle
inc
push
lret
mov
stc
adc
ds
pushf
lods
jle
and
ss
in
ss
scas
sub
cmp
sar
icebp
lods
aad
sbb
pop
fbld
and
pop
cwtl
gs
pop
daa
push
cmpsl
add
daa
jl
ds
out
mov
in
ret
ljmp
call
data16
gs
pop
sbb
ret
mov
jg
xor
or
xchg
pop
in
lods
shll
popa
adc
stc
adc
cwtl
call
jnp
loop
cmpsb
lods
xchg
es
iret
outsl
cmp
out
daa
jne
pop
xor
rcll
push
popf
dec
test
in
pop
in
cmc
jne
cmpsb
inc
scas
sub
pop
pop
xor
fstl
or
sbb
pop
leave
je
inc
shrl
xor
sbb
jmp
pusha
js
out
mov
mov
fidivs
xchg
xor
dec
fwait
add
xlat
sub
fdivr
js
and
cmpsl
daa
test
movsl
arpl
mov
ficoms
xchg
mov
xchg
cli
cmp
xchg
push
add
push
outsl
out
jmp
push
insl
push
push
mov
ret
imulb
mov
jb
dec
sbb
xor
adc
pop
sbb
popa
xchg
scas
dec
outsl
in
in
sbb
cmpb
xlat
lods
cmp
mov
sub
push
inc
clc
fsubl
and
cmp
and
mov
push
mov
imul
xchg
iret
push
xor
lahf
fisubs
call
dec
sub
mov
xchg
dec
push
mov
inc
rorb
in
sub
mov
xlat
sub
inc
add
ja
inc
jne
pop
jecxz
fdivrl
pop
adc
mov
and
inc
js
aad
inc
aas
daa
pop
and
mov
jnp
cltd
lcall
xchg
and
cld
inc
mov
jnp
pushf
iret
pop
jno
lahf
cmp
popf
xor
xorb
mov
xor
shlb
fsincos
addr16
dec
jne
xchg
cbtw
loop
mov
jecxz
mov
clc
cli
add
loop
test
jnp
cmpsl
cs
jp
adcl
and
ja
xchg
adc
pop
js
loope
inc
inc
jno
fsubrs
ss
push
loopne
jecxz
movsb
jne
clc
into
ds
xor
sub
fisubl
les
lea
dec
repnz
mov
xor
inc
test
sub
gs
xchg
cmp
sahf
xchg
fs
xchg
or
ljmp
lret
addl
shl
data16
cmp
cmp
push
sbb
test
in
add
cmpsb
jmp
inc
xor
adc
js
dec
jecxz
daa
iret
pop
scas
push
push
sbb
je
or
pop
xor
xchg
mov
pop
xchg
push
shll
ja
pop
mov
xchg
mov
mov
inc
aaa
cmpsl
inc
fimuls
sub
mov
add
adc
lea
mov
in
push
jne
mov
dec
xchg
push
jb
cmpsl
js
add
je
adc
jb
lahf
add
lahf
dec
xor
in
inc
int
les
or
mov
inc
and
add
cmp
or
push
fwait
push
mov
sub
rcrl
jno
jnp
pushf
inc
lahf
mov
stos
sbb
ret
imul
outsl
das
sbb
mov
orb
mov
sub
aas
add
pop
leave
jnp
rcrl
loopne
inc
ds
aad
sti
lahf
mov
std
movsb
push
in
divl
movsb
or
push
add
les
sti
jo
int3
lcall
pop
add
inc
push
movsb
jmp
cmp
movsl
lock
pop
movsbl
lret
inc
cmp
cmpsb
enter
jbe
stos
xchg
leave
adc
inc
ja
mov
lods
push
jo
js
pop
xchg
inc
jmp
jae
bound
ret
and
cmp
xor
inc
lahf
stos
mov
push
lahf
push
shl
iret
jno
outsb
ret
sbb
je
and
addr16
mov
pop
xchg
push
in
int3
cmp
ja
xchg
js
insb
arpl
out
mov
mov
adc
inc
push
pushf
add
lret
pop
jno
sbb
pop
jbe
sbb
and
adc
stos
sub
push
mov
cmp
rcrl
mov
mov
shlb
push
sub
xor
cmpsl
rorl
push
xchg
outsl
in
outsb
dec
xchg
and
repnz
pop
inc
popa
push
incl
scas
out
test
dec
es
arpl
pop
cld
addb
aaa
notl
ss
mov
into
jnp
push
out
push
mov
dec
mov
pop
test
aad
push
scas
adc
ja
or
sbb
mov
mov
clc
and
jo
push
or
pop
out
add
lret
lods
and
sub
inc
lock
mov
sbb
xchg
adc
aas
filds
clc
test
fldl
push
adc
dec
or
push
lret
scas
mov
jp
jmp
inc
add
cmp
push
ds
mov
rcll
xor
sbb
fs
jnp
mov
pop
add
cwtl
xchg
sbb
inc
cmpsl
inc
outsl
scas
adc
jl
mov
adc
adcb
hlt
cmp
push
frstor
decl
pop
cs
pusha
ljmp
add
adc
insb
pop
lahf
add
jns
dec
or
shrl
dec
mov
and
ss
pop
pop
cmpsb
cmp
mov
xchg
arpl
xor
xor
pop
cmp
fmuls
fistpl
push
std
enter
pop
sbb
jecxz
dec
inc
pushl
cs
dec
imull
push
ret
push
lcall
pop
push
dec
pusha
sub
add
fdivs
fs
xor
jle
outsb
cmpsl
out
ror
xchg
xorb
ds
inc
std
dec
push
jbe
pop
cwtl
or
inc
jle
clc
dec
mov
sarb
sbb
xor
imul
rolb
inc
repnz
leave
mov
xchg
mov
pop
je
outsb
push
jmp
inc
mov
xchg
push
xor
xchg
adcb
scas
gs
cld
lock
mov
add
xchg
xor
jp
lods
jle
inc
lcall
or
leave
push
rep
pop
in
aad
push
lcall
out
dec
dec
jl
mov
push
push
dec
sbb
jmp
pop
outsl
inc
lea
ja
fisubs
int
jo
scas
enter
dec
daa
out
and
sti
inc
push
mov
mov
cmc
jge
xor
jmp
push
jbe
adc
dec
mov
mov
adc
xor
inc
daa
and
dec
mov
test
mov
ja
pop
cmp
pop
adc
aaa
rcrl
and
mov
xchg
mov
sahf
outsb
fxch
mov
mov
or
xchg
insb
bound
adc
jnp
inc
jmp
roll
nop
test
push
mov
je
sar
fsubs
add
test
lret
or
jns
in
testl
cmp
nop
mov
call
adc
push
ljmp
mov
and
pop
lock
mov
pushl
lfs
flds
xchg
adc
sbbb
lods
outsl
push
ja
scas
xchg
xor
hlt
pop
pop
jge
xor
mov
and
fmull
mov
pop
js
notb
int3
adc
sub
testl
add
push
inc
in
mov
pusha
adc
jp
lods
cld
imul
arpl
xchg
mov
in
sbb
sarl
inc
xor
in
jno
xchg
insb
jecxz
pop
rolb
cmc
sub
mov
inc
push
out
sbb
aas
jmp
sub
cmpl
xor
cmp
mov
clc
rcll
cld
fmuls
jl
scas
adc
add
leave
xor
es
dec
outsb
mov
rorl
inc
xchg
mov
iretw
or
push
and
test
mov
cltd
pop
or
mov
mov
je
repz
pop
xchg
adc
flds
push
xchg
sub
push
pop
mov
jbe
in
ds
icebp
jecxz
addr16
mov
pop
data16
xchg
cmp
and
scas
mov
cmpsb
mov
jge
ret
add
mov
pushf
ret
xchg
or
dec
mov
fwait
dec
clc
inc
fidivl
cmpsb
fidivrs
repz
push
or
mov
cwtl
int
pop
inc
repz
int3
push
pushl
xchg
sysenter
pop
push
bnd
and
and
dec
sub
sub
mov
cmpb
outsl
or
nop
icebp
in
addr16
pop
xchg
fistl
aad
xor
or
outsb
push
pop
dec
jp
nop
cmp
mov
sub
ficomps
mov
jnp
movl
addr16
mov
fwait
xor
jle
jnp
jbe
xor
xchg
fmul
push
cmp
les
xlat
aaa
dec
mov
leave
mov
filds
inc
jecxz
mov
mov
addr16
out
add
and
dec
iret
pop
addr16
mov
push
sbb
and
jae
js
inc
js
iret
cmp
jne
fnstsw
inc
and
hlt
es
lahf
shrb
dec
mov
dec
out
mov
into
out
inc
xor
stos
imul
cmp
add
cli
stos
subl
push
inc
xchg
shlb
mov
mov
inc
scas
rorb
add
gs
cmp
adc
fldl2t
push
and
stos
push
clc
mov
mov
mov
aas
jo
jmp
fsubl
inc
jmp
or
fcmovu
daa
ss
push
jo
lea
xchg
ret
sub
xorb
mov
push
mov
jne
ss
loope
ds
icebp
mov
mov
xchg
jns
sub
push
push
ds
jne
movsb
leave
sub
in
cs
and
inc
mov
pop
xchg
idiv
fildll
and
lcall
or
dec
das
push
jno
inc
imul
push
add
inc
jecxz
insl
lret
mov
imul
fcmovb
imul
pop
sahf
lods
mov
popa
icebp
cmp
xor
sbb
mov
scas
aad
pop
xor
callw
pop
loope
js
cmpsb
push
je
pop
mov
or
lods
dec
push
inc
dec
pop
pop
inc
aad
jb
sahf
adc
dec
push
fcoms
fistps
mov
dec
fidivrl
aas
aad
mov
leave
bnd
mov
fwait
sub
mov
repnz
inc
cli
add
lds
aas
push
xor
push
cmpsb
jge
ss
fwait
dec
cmp
bnd
cli
jp
clc
outsl
andl
or
lea
pop
pop
daa
int3
mov
lods
mov
and
jo
sbb
jno
jnp
inc
shrl
mov
cmp
push
aas
xchg
xor
lcall
roll
imul
xor
sbb
push
or
fbld
pop
pop
sti
mov
fdivs
rcr
cmpsb
adc
setae
pushf
mov
xor
or
mov
sarl
sbb
mov
loopne
fs
xchg
js
shll
repz
inc
enter
xor
sub
addb
call
loopne
mov
dec
mov
mov
sarl
movsb
int3
int
ss
push
fnstcw
mov
add
fs
jmp
or
push
inc
xor
jno
fldenv
adc
mov
nop
and
mov
xchg
aas
sbb
push
addr16
xor
fimull
sarl
cld
mov
in
lahf
rcll
hlt
ret
xchg
pop
mov
mov
hlt
jb
jge
add
dec
orl
in
lret
cs
push
insl
jo
ds
or
or
imul
enter
cltd
aaa
popf
inc
fbstp
jno
into
fistpll
push
mov
jmp
add
movsl
sub
addr16
adc
inc
add
push
add
arpl
stos
inc
and
adcb
add
cmpb
in
orb
jbe
mov
jne
xchg
xor
mov
xlat
aad
mov
out
outsb
pop
xchg
fstl
cmp
adc
adc
pop
cmp
mov
lock
lret
sbb
inc
in
inc
adcb
rolb
sahf
pop
mov
lods
or
or
bound
out
xor
xchg
or
cwtl
sbb
jg
push
lret
shrl
iret
mov
movzbl
movsl
mov
cli
dec
or
fwait
jbe
in
cmp
lock
mov
aad
pop
sbb
mul
jnp
stos
add
popa
dec
mov
aad
repz
cmpsb
xlat
or
xchg
sub
xchg
xchg
repz
push
sub
mov
xchg
lcall
je
add
outsl
lds
cmp
mov
std
push
xchg
lea
mov
pop
mov
sbb
xor
jb
mov
loopne
xor
cltd
test
push
clc
pusha
int3
xchg
shlb
test
mov
fdivrl
pop
adc
stc
outsl
jmp
stc
cmc
push
addr16
std
mov
cmp
stc
and
jnp
xchg
pop
imul
mov
mov
inc
mov
popa
inc
sub
cs
jb
sbb
xor
and
int
adc
cmp
xchg
ljmp
adc
fwait
aad
pop
dec
or
fldt
dec
or
push
out
sbb
mov
xchg
pop
pop
pop
adc
loope
sahf
rcrl
sub
add
jmp
in
dec
xchg
mov
je
out
shll
sbbl
mov
dec
jae
dec
js
mov
jbe
cli
cltd
cmpsl
xchg
fstp
push
inc
addr16
cs
ds
mov
dec
fs
testb
scas
imul
lea
pop
and
inc
mov
jge
mov
stc
std
cmpsl
inc
lcall
jecxz
push
push
test
and
xchg
push
mov
mov
test
dec
cmp
shrl
fsubrs
icebp
lock
adc
mov
scas
popa
jg
pop
movsl
xchg
je
inc
enter
jecxz
popf
or
shl
bound
sbb
outsl
push
mov
shll
mov
in
je
aad
jle
movsb
lea
jl
pop
push
and
fs
jmp
cmpsb
and
subb
cmc
imul
es
orb
ud2
dec
mov
in
lods
cmp
lcall
inc
dec
ds
mov
ret
xor
cwtl
dec
aaa
mov
fmul
ss
xlat
daa
mov
test
inc
fisubrl
sub
out
mov
data16
mov
and
mov
lcall
xor
jae
mov
jbe
rolb
andb
out
iret
leave
test
and
lahf
imul
xchg
call
jl
adc
jns
cmp
scas
pop
repz
call
jge
mov
ljmp
ds
xlat
js
dec
and
stos
sub
ja
dec
mov
fs
push
stos
push
repz
mov
mov
jno
dec
or
xorb
fidivrs
xchg
data16
test
jbe
mov
xor
imul
or
mov
cs
imul
divl
int
imul
hlt
hlt
sti
imul
and
daa
notl
mov
sbb
add
mov
pushf
lcall
inc
and
out
mov
imul
add
cmpsl
lods
mov
xor
bound
popa
xor
mov
jmp
nop
movsb
cmp
out
std
cs
xchg
lds
mov
inc
push
cmc
dec
ret
mov
outsb
and
orb
shll
ss
cmpsl
fadd
adc
add
pop
jo
add
mov
mov
or
cmp
pop
cmpsb
es
mov
les
jno
and
and
int3
push
sahf
aad
and
and
sti
sub
and
or
das
mov
ds
aas
push
aas
add
sbb
or
mov
ja
mov
ret
das
xor
out
scas
cld
jmp
loop
fwait
hlt
sbb
ror
adc
je
inc
mov
xor
aad
ffreep
jb
mov
arpl
std
dec
jmp
mov
out
push
test
faddp
xchg
ret
testl
cli
xorb
adc
gs
lret
or
and
cmp
shrb
test
mov
out
ud1
inc
mov
mov
cmp
or
lea
test
xor
rorl
jge
icebp
push
scas
inc
adc
mov
adc
push
mov
xorb
jl
mov
cmc
or
adc
push
loope
pop
push
leave
cs
lret
andb
jns
hlt
push
cltd
sub
daa
loop
cmp
stos
addr16
bound
push
lock
in
push
nop
in
cmp
xor
stc
inc
xchg
jl
sbb
mov
test
movsl
jl
add
scas
in
xchg
into
sub
hlt
decl
fldcw
sbb
fs
mov
popa
cmpsb
mov
fidivl
aam
jecxz
out
les
insb
push
pusha
xchg
xor
mov
jge
jnp
cmp
scas
dec
xchg
int
fs
pop
mov
pop
xchg
mov
bound
push
adc
add
mov
jl
lods
dec
fiaddl
subb
mov
mov
dec
es
inc
lods
mov
loopne
add
push
xor
inc
out
or
divb
popl
ss
xor
xchg
and
cmp
out
scas
pop
jmp
sub
cmp
ret
lods
dec
pusha
inc
or
mov
or
xchg
stos
cmpsb
nop
xor
fldt
in
fisubs
sub
stos
xchg
insl
inc
push
mov
sahf
jp
test
pop
dec
and
stos
test
out
inc
cmp
inc
nop
lea
fs
ljmp
mov
xchg
adc
cmp
std
cmpsb
pop
fidivl
mov
inc
ret
test
xchg
adc
inc
jbe
jp
xlat
mov
adc
jnp
jl
test
dec
or
jmp
jge
add
rolb
ret
push
dec
leave
pop
addr16
sbb
sti
mov
sbb
hlt
ss
xor
jbe
push
leave
dec
popl
pop
insb
fldl
mov
add
jg
imul
xchg
test
mov
movsl
sub
pop
xchg
jmp
push
outsb
in
mov
xchg
cmp
dec
and
sub
aaa
xchg
int3
aaa
add
xchg
push
popa
lahf
test
mov
push
push
fwait
divb
fstl
push
lcall
inc
clc
scas
mov
mov
pop
ss
push
xchg
je
js
pop
cs
enter
jmp
mov
xchg
xor
mov
pushf
jl
ret
ret
mov
outsb
jae
cwtl
jp
je
mov
jnp
fs
mov
pop
and
sbb
loope
dec
jns
add
dec
lods
roll
jno
popf
ja
and
dec
cld
xor
addb
mov
outsb
jmp
imul
ret
fidivrl
mov
xor
or
test
clc
mov
and
xchg
sub
pop
popf
testl
dec
adc
push
inc
lcall
jno
or
sbb
xor
fimuls
cli
aam
mov
cli
insb
dec
ljmp
fs
sbb
xor
or
lods
es
aas
mov
cmp
andb
push
dec
sarl
dec
and
addr16
ds
and
xchg
cmp
fimuls
hlt
mov
add
or
loop
call
ds
lods
pop
add
jle
lock
sahf
cld
mov
int
stos
cli
push
mov
cmpsl
xchg
sub
push
jb
aaa
push
push
bnd
jmp
subb
ss
lcall
xchg
jl
dec
add
call
mov
lock
orl
cld
shr
lcall
push
dec
out
jae
cmp
jb
push
stc
xchg
fxch
fnstenv
std
mov
icebp
xchg
sti
lds
jo
rcl
pop
mul
lods
stos
push
adc
mov
xchg
cltd
mov
or
dec
dec
outsb
jl
data16
mov
adc
ljmp
jmp
lcall
cmp
nop
mov
ss
lods
cwtl
mov
or
insb
leave
lcall
xchg
mov
adc
mov
std
sarb
inc
sti
xchg
imul
mov
jno
xchg
mov
push
imul
jno
pop
es
shrl
jecxz
inc
pop
mov
lods
jmp
and
fcoms
xchg
aas
mov
inc
pop
call
aad
or
iret
fwait
or
dec
bswap
lcall
and
pop
pop
and
adc
orb
mov
cmc
es
add
pop
jns
das
imul
in
sub
or
jp,pt
jp
movsb
push
or
mov
icebp
add
hlt
inc
dec
mov
mov
stc
dec
cmp
add
fwait
cmp
lods
sbb
fwait
mov
mov
loop
popa
or
lea
stos
loop
adc
outsl
sbb
jnp
jle
cmp
xchg
sbb
in
gs
mov
nop
imul
jmp
int3
mov
int3
push
sbbl
sbb
cmp
lods
push
fiaddl
lea
aaa
xchg
xchg
jle
sbb
into
stc
scas
mov
xchg
dec
into
pop
jns
jl
inc
mov
mov
inc
fwait
sbb
sbb
cld
fcmovnbe
dec
outsl
into
out
jg
repz
dec
add
fiadds
xlat
lcall
mov
cmp
stos
js
sbb
addr16
movsb
pop
xor
xor
outsl
cmp
test
xor
cwtl
test
push
fcmove
imul
mov
pop
out
xchg
sbb
pop
out
fsts
loope
inc
aad
or
test
jecxz
cmp
lds
xor
dec
fcoms
xor
mov
adc
or
sub
jg
mov
pop
push
inc
fwait
pop
imull
pop
js
inc
insb
mov
jb
subb
jbe
out
add
sbb
mov
fnstenv
cmp
mov
outsl
push
pusha
jp
xor
ret
push
fdivrl
stos
insb
out
into
loop
push
ficompl
cmc
dec
dec
add
jge
insb
push
or
xchg
jnp
enter
inc
nop
xor
out
das
dec
ja
int3
out
addr16
gs
stos
je
cli
or
dec
mov
and
add
lods
aaa
inc
rolb
xor
sti
pop
cmp
call
adc
out
stos
inc
mov
test
dec
mov
out
add
notb
jno
imul
jg
jb
ja
jbe
sbb
jl
out
push
sarl
and
add
jnp
gs
pop
or
xor
and
aas
les
bound
les
ljmp
stos
dec
mov
mov
repz
push
adc
or
adc
leave
in
pop
loop
je
sbb
sub
sbb
cmpsb
mov
push
dec
cmp
and
iret
cmpsb
popf
add
enter
mov
jl
movsb
ds
adc
not
imul
mov
or
inc
cmpb
or
jb
xchg
add
ds
mov
jge
pop
xchg
jp
xor
mov
cltd
fdiv
and
mov
roll
scas
aad
loope
out
rcll
sti
enter
pop
inc
adcl
out
jno
test
daa
dec
jae
std
adc
sbb
xor
adc
inc
mov
or
sub
std
test
repnz
mov
bound
dec
data16
push
in
shrb
loop
xor
inc
mov
cmc
es
lcall
fldl
mov
pushf
inc
cmp
loopne
jne
mov
addl
repnz
rcll
mov
lods
add
pop
repnz
mov
fstps
in
aam
mov
dec
mov
mov
leave
lock
pop
stos
cltd
pop
in
popf
sub
sub
outsb
into
mov
dec
sti
adc
push
sahf
pop
xchg
hlt
sub
or
out
xorb
cmc
push
mov
shl
inc
popf
xor
cmp
lcall
add
cmp
dec
ja
or
adc
xchg
xchg
jmp
xchg
fnstenv
cli
incb
insl
push
jle
lret
adc
data16
jmp
js
push
aaa
dec
mov
cmp
decl
xchg
jl
xor
mov
sub
cmpsl
stc
cltd
sbb
jb
mov
rcr
sbb
ficoml
cmp
cld
adc
lea
cmp
and
xorl
das
push
popa
mov
mov
outsb
sbbb
pop
mov
jp
je
fisubrl
or
test
pushf
dec
aam
je
mov
mov
stos
es
daa
xor
lcall
and
ljmp
and
mov
pusha
lahf
sti
mov
mov
lock
mov
cmp
es
adc
stos
inc
orb
int3
das
jns
aad
mov
lds
in
cwtl
leave
dec
mov
sbb
lret
es
gs
push
inc
xor
jo
add
cltd
movsb
or
ds
out
aad
lods
aas
mov
es
cmp
cmp
fidivl
jbe
xor
pop
cmpsl
movsb
call
mov
cmp
popf
insb
and
and
adc
dec
add
push
xchg
pop
mov
pop
cwtl
into
adcl
pop
add
mov
xchg
pop
sti
aas
daa
mov
stos
nop
jo
push
add
lret
xor
jb
nop
lods
push
pop
mov
pusha
mov
pop
js
outsl
shlb
cmp
dec
mov
out
lods
push
popa
and
mov
icebp
cmpsb
lcall
mov
mov
fs
in
into
ret
jns
sti
push
mov
jns
xor
loope
push
stc
pop
jae
out
xchg
jbe
mov
dec
aaa
insl
push
jne
mov
std
aam
push
out
movsl
inc
mov
pushf
add
arpl
js
jmp
mov
ss
aaa
outsl
jbe
mov
xchg
inc
inc
sbb
aad
in
inc
les
bound
mov
pop
fwait
test
add
adc
fs
or
mulb
inc
xor
dec
add
and
sarl
or
inc
mov
mov
ret
sub
adc
lods
clc
addr16
mov
in
js
out
mulb
movsl
iret
scas
sub
xlat
mov
jo
jno
je
mov
or
fcmovnbe
xor
dec
mov
movsb
in
outsb
dec
xchg
push
jae
ljmp
cmpsl
pop
pop
push
inc
ss
adc
arpl
inc
xchg
in
scas
dec
in
aaa
pop
mov
shll
lods
repz
in
adc
sbb
jbe
scas
mov
pop
and
lahf
mov
jb
and
dec
or
daa
insl
mov
adc
das
push
cmc
jmp
lea
pop
ret
bound
lret
jbe
lretw
mul
movsb
add
pushf
and
repnz
inc
cltd
out
mov
leave
mov
mov
addr16
rorb
insb
cmp
cmp
cmpsl
in
popa
mov
cmpsb
xor
mov
dec
js
clc
xor
shr
sbb
push
leave
pusha
inc
or
dec
inc
cmpsl
inc
out
enter
dec
roll
sub
add
cmp
xchg
pop
push
add
dec
jns
pusha
xchg
test
addr16
push
push
stc
ret
insb
cmp
sti
movsb
pop
out
outsl
dec
pushl
sub
jb
les
cmpsb
adc
cld
mov
stos
add
inc
lcall
fldl2e
ss
xchg
imul
ljmp
fiadds
lea
or
mov
mov
and
addr16
icebp
and
or
jae
pop
out
rol
xchg
dec
mov
addr16
orl
adc
test
pushf
sar
leave
adc
ret
fdivs
dec
push
or
sbb
dec
adc
enter
dec
idivb
pop
add
xor
or
rcrb
add
or
mov
btc
das
iret
or
test
inc
push
xchg
mov
sbb
mov
loopne
insl
xor
adc
ss
sbb
jb
pop
ss
push
sub
inc
jge
cmp
xor
arpl
fdivrs
mov
std
fnstcw
lds
clc
inc
jle
sbb
pop
pop
mov
lahf
push
fisubl
sub
add
pushl
cmp
jp
fidivl
ja
or
xlat
lock
insb
cmpsl
enter
xchg
icebp
out
popw
pushf
mov
xor
mov
sbb
or
shll
gs
pop
sti
mov
popf
fs
jmp
pop
mov
fsubl
and
insl
lea
xor
cld
aaa
mov
cmp
arpl
cmc
cld
inc
dec
hlt
xchg
rcr
test
es
js
mov
inc
dec
mov
jb
ds
fnstenv
pop
enter
ljmp
adc
add
subl
pop
subb
push
shrl
pop
dec
out
cltd
scas
xchg
in
add
stos
pop
rcr
pop
sbb
out
push
test
push
outsl
and
arpl
test
popf
inc
fiadds
insb
xor
cmpsl
mov
fisubrl
cmp
fmul
and
pop
lock
add
push
lock
dec
jp
push
dec
repnz
push
jmp
pop
xchg
loopne
lods
test
paddd
mov
mov
xor
retw
in
and
call
mov
add
jne
jnp
mov
sub
int3
pop
and
or
mov
xchg
into
jl
in
jbe
loope
loope
jo
clc
xor
ljmp
imul
push
add
and
popa
mov
cmpl
sti
or
xlat
aam
push
sub
sbb
es
cmpsb
nop
push
cld
pop
push
adc
lods
in
out
sub
dec
or
outsb
in
push
mov
data16
jle
fistpl
xchg
push
fcomps
test
ret
sbb
mov
pushf
enter
and
cmp
xchg
inc
cmpsl
insl
icebp
xchg
xchg
mov
shll
outsb
sbb
in
fisttpll
sub
sbbl
mov
or
sub
sub
sbbb
lahf
sub
cmp
test
add
fwait
movsb
push
dec
loopne
aaa
imul
sub
push
mov
and
sahf
mov
push
shr
dec
add
xor
pop
add
ret
push
mov
mul
dec
push
daa
pop
addr16
sub
mov
sar
imul
add
cmp
popf
mov
mov
sub
loopne
jno
adc
nop
pop
inc
lea
adc
scas
xlat
xchg
push
lcall
in
loope
in
inc
lea
adc
scas
out
enter
popf
enter
andl
add
cmpsb
ss
xchg
and
mov
ss
in
cmp
mov
adc
sub
lods
mov
stc
mov
pop
dec
xlat
mov
arpl
dec
and
cltd
test
fsts
aad
out
andb
xchg
clc
sbbb
rorb
movsb
pop
hlt
adc
mov
mov
mov
mov
std
ret
pop
xor
fistpll
lods
shrb
into
lahf
fnstsw
rolb
jle
pop
sub
or
push
xchg
cs
inc
push
arpl
cld
outsl
push
jne
or
js
loop
inc
xchg
sub
fisubrs
lds
and
mov
jbe
movsl
pop
hlt
in
push
dec
loopne
movsl
push
cld
call
cmp
mov
cmp
testl
mov
and
in
popa
mov
jle
jns
jmp
push
dec
gs
mov
negl
daa
in
sbbl
stc
mov
mov
xchg
ss
sbb
ss
fsubrl
popf
pusha
mov
push
mov
arpl
lret
cmp
dec
mov
popa
jmp
pop
test
inc
push
rcrl
xchg
scas
jns
repnz
mov
int
dec
shrb
sub
jg
xchg
stos
sub
js
adc
and
sub
lock
cltd
sub
daa
push
push
adcl
mov
es
pop
cmc
push
mov
push
call
ret
cmp
mov
lock
shl
or
jmp
or
fwait
es
sub
pop
xor
test
push
sub
test
or
aad
mov
lods
xor
movsb
lcall
fldt
add
pop
nop
mov
cmp
fmull
std
lds
push
lock
xor
test
mov
leave
add
push
inc
and
imulb
pop
and
mov
fnsave
fsqrt
xchg
dec
pop
js
lcall
fs
mov
mov
sbb
dec
mov
subl
xchg
jl
repz
outsl
rcrl
pop
mov
and
pop
shll
jns
ds
xchg
sbb
movsb
fcmovbe
and
jae
mov
inc
inc
lds
mov
stc
iret
cltd
dec
aam
mov
pop
mov
jbe
ret
ret
pop
dec
mov
addr16
jae
mov
cmpsl
jmp
rcrl
in
ret
dec
leave
ljmp
rcr
stc
or
jns
incb
inc
jns
push
ret
fcmovu
dec
into
js
dec
pop
dec
pop
mull
pop
or
push
repnz
div
test
aaa
insl
int
stc
cltd
sbb
pop
jmp
cli
jge
cmpsb
pop
pop
addr16
pushf
xor
mov
sbb
jle
stc
adc
push
and
out
dec
scas
pop
or
addr16
pop
scas
lret
sahf
mov
cwtl
leave
xor
roll
rol
jmp
std
pop
sbb
cmp
pop
or
mov
push
adc
inc
cmp
into
daa
addr16
or
pop
push
lcall
mov
xlat
std
je
icebp
jnp
arpl
mov
daa
divl
leave
jle
mov
and
lods
sbb
inc
loopne
sbb
ret
mov
push
and
sub
cmp
mov
or
stos
lods
inc
in
inc
pop
jbe
fisubl
std
lahf
daa
loopne
sahf
movsl
fildl
xchg
ljmp
aad
jl
mov
ret
jecxz
nop
lds
jmp
push
push
cmpsb
mov
ds
lods
add
inc
ljmp
xor
xor
ss
lret
lods
ja,pt
pop
inc
xchg
mov
mov
js
sub
cmp
out
sbb
dec
xchg
xor
xor
dec
ret
adc
cmpsb
jb
outsb
sub
ljmp
sub
cmp
cmp
cli
sub
pop
push
shrl
jno
in
pop
call
in
push
pop
fs
pushl
mov
dec
js
leave
jns
cmpsb
lret
adc
cmc
push
testl
mov
sbb
mov
icebp
fldenv
shl
adc
lods
inc
shll
leave
mov
dec
dec
imul
call
pop
sti
pop
mov
push
pop
xchg
or
push
addb
mov
push
mov
mov
push
in
jnp
adc
mov
std
push
sbb
ljmp
or
repz
pop
in
repnz
aam
push
inc
jns
insl
jl
add
mov
mov
mov
repz
jae
xor
jnp
xchg
mov
js
adc
pushw
sub
pop
pop
push
push
test
xor
and
fidivl
gs
xor
dec
rorb
mov
jns
xchg
mov
jg
cli
ret
or
jns
and
jp
pop
push
leave
and
sub
xchg
shll
enter
add
push
mov
insl
jae
call
push
inc
push
cmp
push
inc
xor
mov
sbb
mov
xor
xlat
mov
mov
stc
xchg
mov
out
int3
clc
shrb
test
inc
mov
xlat
cmp
rcrb
in
xor
popa
test
arpl
and
das
jp
pushf
jg
adc
adc
data16
mov
mov
ljmp
xor
roll
fcoml
jmp
movsl
lock
das
pop
stos
ret
cld
clc
sbb
sbb
pop
ja
movsb
jg
adc
inc
mov
sbb
sbb
aad
lahf
out
inc
push
and
pop
sub
ret
in
pushf
mov
sub
jp
hlt
mov
and
adc
or
icebp
in
jno
jecxz
gs
cmp
xchg
loopne
jo
cmp
out
adc
aam
inc
test
xchg
adc
fwait
aam
es
push
je
jg
xor
adc
in
mov
jge
sub
sub
xlat
sbb
mov
sbb
mov
or
dec
push
orl
scas
xor
fldenv
pop
jno
mov
mov
mov
dec
lret
test
fsubl
popf
jo
dec
push
scas
stos
loop
mov
stc
or
icebp
imul
test
and
out
sbb
mul
fiadds
jl
fwait
mov
adcl
mov
jle
es
adc
into
and
fcoml
sbb
add
test
vzeroall
sub
neg
xchg
loop
pop
add
rorl
ja
pop
xor
jnp
mov
lock
or
sub
push
xchg
sub
fcom
call
jo
popa
cmc
add
pop
mov
inc
daa
ss
jle
or
inc
xchg
cmp
xlat
lret
das
push
sub
pop
sti
lds
daa
cltd
and
in
push
rcl
pop
mov
cld
adc
xchg
repz
popa
call
mov
outsl
pop
sti
das
rclb
fistpl
jg
andb
rorl
push
addb
es
jmp
shlb
iret
in
enter
enter
int
rol
cmc
adc
ret
cmp
cld
xor
repz
std
mov
pop
and
inc
cld
jmp
sub
sti
add
lock
push
ror
outsb
sbb
movl
push
test
sbb
fsts
mov
fsubrs
rclb
in
jecxz
outsb
dec
orl
icebp
test
sbb
movb
adc
xorb
daa
sub
cmpsl
std
repz
dec
hlt
xlat
mov
pop
mov
xor
push
les
nop
aad
shrl
xchg
jmp
aad
xchg
cmp
fldenv
insl
pop
fwait
outsl
xchg
popf
scas
insl
dec
cmp
divb
sbb
xor
jo
enter
jl
cmp
pop
cmp
xchg
inc
ja
stos
mov
xchg
and
pop
cs
push
test
pop
ljmp
mov
lea
repnz
mov
adc
adc
fisttpl
pop
mov
in
xor
mov
outsb
cmpsl
jnp
xor
shlb
push
pop
out
arpl
and
fldcw
rorl
es
cmpl
xorl
sub
sbb
fcoms
mov
mov
jbe
jle
xchg
shrl
xor
out
sarb
push
inc
js
into
jne
cmp
pushf
adcl
and
xchg
xor
rcl
lcall
xchg
mulb
mov
fistps
in
ss
fsts
adc
in
sbb
mov
stos
cmc
cmp
ror
and
int
stos
mov
jae
shlb
movl
xchg
jbe
out
inc
and
xor
pop
jnp
dec
pop
ret
jecxz
mov
std
pop
sbb
push
loope
fwait
mul
test
loope
imul
jnp
and
mov
jle
push
addr16
inc
mov
hlt
lods
dec
or
and
xor
arpl
sub
adc
movsb
add
mov
cmp
in
out
cmovs
repnz
jne
xchg
in
in
hlt
inc
nop
adc
or
mov
and
pop
sahf
imul
insl
sub
pop
in
push
xchg
mov
mov
mov
pop
cmc
enter
xor
add
movsb
cmp
mov
jl
xchg
add
pop
lock
xchg
xchg
insb
inc
and
mov
sbbb
mov
je
and
cmp
mov
or
pop
inc
rclb
pop
stos
jno
js
cwtl
inc
pop
cli
insl
and
stos
ret
cmp
or
cmp
aas
fcmovnbe
daa
sub
inc
jle
pop
mov
cmp
mov
xor
aas
subb
cwtl
adc
ljmp
or
mov
mov
cmp
push
inc
clc
imul
push
and
jo
scas
iret
dec
repz
sbb
js
cmp
adc
frstor
pop
push
notb
add
out
inc
sub
lea
pusha
into
inc
hlt
hlt
lds
add
and
lds
les
cmp
arpl
pop
rcrl
jno
sub
sbb
lret
stos
push
shrb
pop
adc
imul
jl
rorl
and
add
inc
sub
adc
test
and
dec
gs
push
pop
xchg
popf
dec
pop
pop
sahf
mov
clc
hlt
fwait
xor
jge
inc
mov
xchg
je
nop
mov
or
fisubrs
jae,pt
add
sub
push
fsts
stos
xchg
cmp
outsb
push
push
outsb
cwtl
stc
xchg
xor
add
pop
xchg
jle
dec
jl
push
jns
fcmove
jno
lds
mov
movsb
idivb
mov
mov
pop
inc
push
jle
adc
les
enter
push
test
inc
push
sbb
lcall
gs
adc
sahf
iret
lcall
lods
jp
pop
gs
stos
hlt
add
loopne
fisubrs
or
into
xor
call
in
jno
ret
inc
sbb
jns
jno
cmp
popa
adc
mov
xchg
mov
jno
mov
enter
add
sahf
cmpsb
dec
js
add
mov
inc
stos
push
sub
cltd
aas
mov
movsl
adc
imul
test
jns
es
or
out
pushf
int
mov
icebp
lretw
xor
call
pop
push
xor
hlt
dec
sbb
notb
int3
xor
xchg
xor
xchg
int
sub
lock
mov
or
sbb
mov
out
fldl
mov
sub
sub
lret
xchg
mov
push
adcb
ds
div
xchg
jecxz
dec
xchg
mov
cmp
out
pop
lods
add
push
push
sbb
mov
add
jno
push
xchg
sti
push
mov
jnp
adc
dec
or
icebp
xor
inc
fwait
mov
and
mov
shrb
sub
aaa
loope
mov
rcll
in
xlat
faddp
mov
mov
mov
xchg
or
out
lock
js
aam
call
mov
lods
inc
stos
fbld
push
je
movsb
inc
cld
inc
test
mov
adc
fmuls
fisubs
add
cmp
shlb
call
sub
pop
dec
enter
xabort
stc
pop
add
push
or
insb
fldenv
call
cli
out
mov
push
inc
cmp
int3
adc
ret
pop
aam
shll
push
into
mov
sub
jns
out
ljmp
les
add
cmp
adc
imull
jb
pop
xor
xor
out
cmp
mov
rorl
dec
mov
push
mov
shll
stos
jl
jns
gs
or
cwtl
in
sub
push
aam
fst
or
mov
fdivr
aas
xchg
jge
sahf
data16
jb
cli
lds
mov
mov
jno
sbb
sub
jo
adc
or
xor
inc
cmpsb
ss
sahf
repnz
jle
sub
roll
insl
repnz
outsl
jae
mov
gs
xchg
sbb
iret
push
mov
pop
xchg
sbb
jg
jle
insb
insb
movsb
and
cmp
std
dec
ret
out
push
xor
mov
pushf
lock
or
outsb
hlt
dec
addr16
cmp
mov
dec
mov
repnz
pop
cmpsb
sub
lcall
xchg
pop
pop
iret
add
les
push
cmp
roll
lahf
aad
sbb
int
ror
das
imul
dec
pusha
mov
mov
adc
fadd
popf
xor
popf
sbb
incb
mov
fcomps
cmp
push
jae
jnp
test
xlat
repz
cmp
xor
jg
cmp
dec
mov
scas
sahf
inc
push
fwait
jnp
mov
mov
leave
outsl
fimuls
mov
or
xchg
stos
ret
and
cmp
fisubrl
or
inc
out
loopne
lret
ret
and
call
cmpsb
xor
stos
addl
xorl
pop
and
hlt
cld
es
in
out
out
sarl
aad
add
es
jno
push
mov
ja
arpl
clc
cltd
scas
inc
movsb
jecxz
mov
std
shlb
jne
add
or
or
lahf
ljmp
sbb
xchg
sub
leave
jl
sub
adc
fisttpl
mov
fldcw
inc
stos
dec
jp,pn
daa
mov
jl
lahf
mov
imulb
add
xlat
xor
inc
cmp
add
mov
shlb
fs
mov
and
adc
jnp
mov
mov
insb
push
dec
pop
lea
nop
and
pushf
int3
repnz
pop
movsl
call
mov
clc
lock
loop,pn
cmpsl
iret
mov
ss
xchg
pop
loope
stos
stos
icebp
movsl
popf
inc
xor
or
andb
mov
cmpsb
arpl
mov
fildll
push
test
loopne
and
dec
jne
jp
iret
mov
cmp
pusha
cmpsb
cmp
fstpt
pushf
fwait
inc
or
cmp
fs
push
sbb
cmp
xor
mov
push
sbb
jo
push
push
sahf
mov
and
mov
shll
aam
cmp
lods
shll
push
push
and
sub
xchg
add
inc
mov
loopne
rcrb
jp
mov
pop
fstp
and
aas
xchg
aaa
adc
pop
lcall
fstpt
mov
mov
mov
outsl
aad
int
testb
push
push
jle
mov
test
sub
cmc
xchg
adcl
xchg
fwait
out
add
je
jne
adc
incb
fucomip
xor
cmpsb
call
dec
ja
rcrb
add
pop
out
into
mov
pop
jp
sbb
fdivrs
dec
outsb
add
and
jecxz
mov
pop
pushf
push
popl
pushf
mov
out
mov
push
out
xor
in
or
bound
cmpl
out
fdivrl
adc
inc
outsb
sbb
out
pop
out
dec
in
adc
jg
loope
mov
movsb
pop
cmp
adc
push
inc
shll
mov
sub
add
push
cmp
stos
and
aam
push
xor
leave
add
lret
lock
jnp
sbb
sahf
cli
xchg
mov
into
pop
lret
add
mov
repz
pop
call
xchg
gs
decb
xor
sbb
decb
xor
cmp
xor
lods
mov
std
int3
iret
cli
jmp
jle
imul
add
dec
adc
into
loop
xlat
jmp
cltd
ret
or
ds
mov
pop
cmpsb
pop
rcl
lcall
mov
mov
pop
in
test
mov
pop
insl
lahf
fsubp
and
into
xchg
lret
xor
scas
stc
or
cmp
test
movl
bound
jg
jbe
cmp
jecxz
push
jmp
push
test
fwait
jmp
jne
std
mov
xchg
push
bound
push
pushf
mov
dec
js
push
test
lret
lds
pop
leave
stc
loopne
ds
push
lods
mov
xor
cwtl
pop
cmp
imul
fs
mov
jmp
push
add
cmp
pusha
js
lea
js
adc
inc
push
add
mov
jns
jns
push
repnz
xchg
pop
fstl
cmp
lret
stos
adc
xchg
es
fcom
mov
hlt
sahf
or
imull
ret
mov
add
push
popf
xchg
rorb
push
dec
jecxz
loopne
div
mov
mov
xor
dec
push
inc
jl
je
jns
or
add
push
scas
int
adc
xor
or
lds
xchg
test
aas
or
imul
add
xchg
les
les
push
jb
out
pop
loop
mov
lea
fisttpll
stc
movsl
ficoml
push
cmpsl
cmpsl
insl
mov
sub
stos
and
dec
les
mov
jmp
lea
insl
mov
push
lcall
test
sahf
and
rclb
or
mov
sbb
jge
add
or
movsl
clc
shrl
mov
dec
ja
inc
adc
mov
and
lock
ss
xchg
daa
aad
push
cs
out
xor
jmp
dec
outsl
imul
mov
ret
pop
add
adc
pusha
je
adc
arpl
dec
je
rcr
test
jne
fwait
mov
movsb
jo
sbb
addb
xlat
adc
imul
insb
scas
dec
arpl
ljmp
add
mov
jecxz
insb
jnp
hlt
call
movsb
rorl
movsl
aaa
insb
jne
sbb
jmp
outsb
pop
inc
dec
pushf
ret
cmpsb
adc
sub
fildl
hlt
stos
ljmp
xchg
push
pop
jle
loop
xchg
push
or
popa
js
mov
dec
out
cmp
into
insb
les
in
aad
cld
push
fst
sub
insl
jo
in
push
mov
es
sbb
sub
repz
mov
lock
jne
test
hlt
or
das
push
movsl
xor
in
pop
ret
aad
data16
fcmovnb
jecxz
jne
mov
xor
cs
jle
jle
pushf
push
mov
sbb
xchg
jnp
fstp
add
add
xlat
test
dec
xor
push
fsts
jge
pop
push
inc
sub
jmp
push
xor
add
in
movsb
sub
mov
and
pop
xor
jg
pop
inc
scas
or
imul
cld
add
adc
adc
or
scas
adc
sti
subb
sub
test
lret
xor
les
inc
dec
inc
into
scas
into
mov
adc
cmpsb
outsb
sbbl
hlt
inc
cmp
xorl
or
fsubr
cmp
aad
in
sbb
dec
cwtl
xor
and
loop
rorb
incl
call
dec
mov
mov
test
push
xchg
shrb
pushf
sub
insl
pop
cmc
adc
add
and
inc
dec
movsb
aaa
jle
dec
roll
out
mov
iret
lods
stos
subb
clc
test
add
pop
or
pop
subb
arpl
mov
mov
cmp
push
arpl
lods
adc
js
stc
jge
inc
cmp
xorb
fstl
mov
mov
pop
mov
sbb
int3
sub
sahf
lea
inc
jnp
mov
test
xchg
mov
dec
inc
sahf
in
inc
cmpsb
shlb
sbb
mov
imul
ret
int
aas
mov
aam
loop
out
mov
cmp
adc
mov
das
lret
jmp
mov
xchg
loopne
cmpb
sbbl
popf
insb
inc
fbstp
mov
mov
and
call
js
jg
pusha
jp
insb
inc
push
lods
jbe
stos
rol
cld
push
sbb
fmul
cmpsl
lcall
test
ja
dec
sahf
or
sbb
mov
xchg
dec
mov
dec
psrlw
sub
loopne
popa
cmp
push
repnz
push
push
push
jg
in
pop
mov
xchg
imulb
out
dec
nop
imul
mulb
xchg
popf
xchg
je
lret
test
and
xor
xlat
pushf
xchg
dec
sub
shlb
popf
les
popa
push
mov
movsl
xchg
sahf
inc
mov
inc
out
test
xor
push
jp
ret
jne
add
adc
loopne
pop
xchg
out
xor
pop
xchg
jmp
xor
ret
xchg
sub
dec
cld
mov
push
inc
pop
out
ss
data16
xor
or
test
dec
push
adc
mov
cltd
adc
jmp
ret
xor
mov
jo
pop
cmp
test
sub
nop
stc
mov
cmp
mov
xor
xchg
je
fimull
sub
add
ret
repnz
push
jns
mov
push
sarb
enter
nop
lahf
popf
cmp
mov
mov
xor
test
cmc
cmpsl
stc
rcrl
fldenv
dec
je
enter
std
pop
mov
jae
or
adc
and
and
pop
repnz
cmp
inc
or
xor
iret
lret
add
mov
jno
std
dec
and
fistpll
xor
lcall
arpl
dec
mov
push
iret
push
or
and
in
xor
hlt
mov
fwait
lods
mov
sbbb
repz
clc
xlat
mov
push
clc
mov
loopne
enter
inc
ljmp
lahf
and
add
cld
inc
jbe
std
fcmovbe
cli
ret
wbinvd
and
jge
push
rcr
in
hlt
push
cld
mov
jmp
inc
xor
mov
pop
push
pop
xchg
xchg
mov
cmpsl
mov
repz
cld
push
fidivs
sbb
xorb
pushl
push
pop
aas
cmp
sbb
imul
inc
fldcw
loop
enter
ret
jecxz
xchg
les
add
lods
out
mov
lahf
jb
xchg
pop
mov
jl
lcall
mov
jae
xor
subl
stos
aaa
fisubs
pop
enter
fisubl
xchg
adc
in
pop
scas
pop
popa
or
out
imul
outsl
add
xchg
sub
adc
ss
test
jmp
in
dec
xor
in
stos
xchg
mov
adc
pushf
pop
imul
inc
fisttpl
add
push
pop
xchg
icebp
sub
inc
push
mov
sbb
xchg
push
rorl
and
fistpl
pop
adc
inc
test
push
and
push
or
js
inc
xchg
jecxz
in
sbb
adc
push
push
aam
repnz
enter
pushf
pop
push
out
jno
stos
fwait
aas
cmp
mov
popf
jne
sub
lods
mov
sbb
jl
out
jo
sbb
aam
shl
jp
cmp
and
inc
movsl
mov
pushf
push
sbb
leave
pop
mov
in
dec
xchg
mov
fstps
jne
aaa
clc
lea
test
pop
inc
or
cwtl
xor
jge
popf
fildl
or
je
xor
int3
adc
scas
adc
out
stos
adc
xor
scas
inc
xchg
push
push
in
in
dec
fwait
inc
jo
rol
jo
or
adc
pop
mov
bound
inc
add
lahf
aad
inc
sbb
loopne
sub
jecxz
stos
sbb
xchg
dec
push
inc
xor
inc
in
mov
es
push
cmpsl
cltd
lock
out
mov
shll
sbb
jp
sub
lret
jp
gs
add
add
lods
inc
cmpsl
dec
out
jbe
jno
add
mov
xchg
or
mov
leave
sbb
push
dec
div
dec
and
sub
add
mov
jne
jecxz
aas
icebp
out
cmp
sbb
clc
pop
je
jbe
xchg
aad
mov
adc
dec
sbb
sub
in
icebp
cmpsb
mov
mov
jp
js
roll
cmp
pop
dec
add
cltd
cmp
xor
xchg
xorl
mov
fadd
icebp
mov
enter
nop
xor
lods
or
stc
rorl
push
test
push
gs
sbb
dec
repz
test
das
loopne
mov
mov
cs
mov
jecxz
inc
iret
add
push
lret
ds
and
and
or
sarl
cld
out
or
mov
mov
repnz
addb
sub
dec
xor
pop
das
out
sub
dec
or
and
cld
inc
xchg
fidivrl
popf
in
mov
test
lea
orl
sbb
cmc
hlt
in
das
xchg
jo
jge
ds
js
pusha
aaa
enter
pop
in
adc
popa
imul
lahf
jns
pop
mov
dec
adc
mov
xor
cmp
popa
jmp
fwait
test
inc
dec
js
not
lret
and
enter
mov
pop
fs
leave
mov
xor
mov
or
jae
fisubrl
and
xchg
mov
inc
adc
xor
cmp
xchg
addl
aas
adc
and
mov
dec
scas
jl
mov
jne
pop
cmp
outsb
repnz
pop
movsb
stos
sbb
pop
lret
sub
cmp
ret
into
shrb
jo
add
adc
dec
cmp
xchg
add
xchg
mov
add
outsl
add
fbstp
decl
hlt
cwtl
cmpsl
js
fucom
pop
xchg
leave
cmp
dec
cmp
pop
or
int3
push
daa
xlat
scas
sbb
aas
outsl
out
push
in
pop
or
add
push
test
xchg
jne
mov
popf
lods
add
lahf
xchg
push
mov
je
sbb
cmpsl
js
mov
and
cmp
jb
fwait
dec
ja
lods
in
cld
lock
pushf
out
clc
mov
cmp
cmp
xchg
call
movsb
addl
ficoms
jnp
pop
adc
mov
movsb
leave
pop
shlb
pop
mov
lret
adc
inc
das
push
push
out
and
pop
or
gs
and
cmc
fcoml
insb
je
or
clc
iret
push
das
pushf
jge
stos
cmp
fdivrp
mov
jno
ds
add
gs
mov
jg
inc
xchg
lcall
mov
rcrl
ss
xlat
fisubrl
jmp
shr
out
push
mov
push
or
test
sti
mov
out
push
push
inc
cs
sub
ja
das
pusha
jge
rolb
test
decb
fmul
xchg
leave
fisubrs
movsb
pop
inc
jbe
xchg
jmp
sub
pusha
mov
pushf
xchg
lods
incl
and
lret
das
loop
inc
aaa
je
xor
xchg
pushf
loope
xchg
stc
scas
loope
xchg
pop
sub
mov
adc
adc
xchg
mov
cmpsl
shll
cmp
cmpsl
aas
popf
out
ficoml
adc
inc
adcl
mov
lahf
jae
fstpt
repz
out
fnstsw
sbb
lods
jge
pop
int
xor
pushf
nop
and
push
mov
mov
push
sbb
lret
aaa
cmc
es
mov
sarb
xor
ds
icebp
push
test
neg
daa
cmp
or
daa
arpl
push
scas
inc
dec
in
loope
pop
xchg
push
stos
loope
sbb
addb
int3
sbb
fmuls
sub
lods
xchg
xchg
cmp
sar
push
das
inc
das
fnstenv
pop
sub
and
mov
rcrl
imul
test
icebp
pop
add
leave
cmp
fstl
fs
fcomp
enter
and
pusha
mov
sbb
cli
out
mov
pop
lock
mov
mov
push
shlb
andl
clc
fbld
inc
mov
cld
sub
lret
rorb
sbb
mov
pop
sub
in
addr16
xor
loop
ds
movsl
xor
insl
icebp
lds
xchg
add
and
mov
and
dec
and
xor
lea
dec
mov
push
pop
fmuls
mov
jl
stos
sbb
stc
pop
mov
adc
push
mov
pop
aaa
mov
popa
gs
jb
jecxz
cli
pop
lods
cmp
pop
mov
out
xor
shrb
fisttpl
adc
addr16
es
pop
pop
push
cmpsb
aaa
jmp
cmpsl
and
fs
test
ret
in
jp
dec
mulb
outsb
stc
pusha
ss
imul
in
in
xchg
or
xchg
push
cmpsb
add
stos
jge
and
xchg
lods
adcl
dec
insb
pushf
roll
mov
jno
xchg
repz
fcoml
ja
mov
mov
test
xor
arpl
push
mov
dec
or
add
mov
gs
or
dec
push
push
stos
or
mov
comiss
sub
xchg
test
pop
jnp
and
or
xchg
adc
sbb
orb
cmp
test
pop
outsl
outsl
jo
cmc
lods
push
xor
jmp
popa
push
flds
add
ds
js
in
xor
push
out
xchg
dec
into
inc
into
sti
call
sub
xchg
pop
int3
mov
lea
jnp
pop
and
shrl
add
pushf
ljmp
xor
add
jnp
in
ds
jp
fbstp
inc
test
mov
mov
addl
js
jae
cmp
mov
clc
ret
out
shlb
pushf
add
sbb
repnz
sbb
mov
hlt
jecxz
addr16
xor
cmp
cmp
xor
add
nop
sub
lock
mov
sub
sub
xor
nop
les
or
jle
and
clc
lock
lret
lods
adc
pop
in
lods
cmp
stos
stos
movsb
push
pop
ss
fsts
cmpsb
add
lret
mov
mov
lods
fucomi
xlat
jno
mov
inc
ret
jne
push
lea
cmp
jp
addr16
mov
jne
adc
fstpl
hlt
add
xor
sub
mov
add
push
aad
sbb
pop
cld
paddusb
mov
xchg
pop
sahf
jne
xchg
jmp
pop
stos
jne
sbb
and
aaa
adc
jb
ds
and
lock
std
outsb
dec
add
popf
add
push
outsl
repz
and
scas
mov
xor
xchg
popf
mov
push
cmpsl
and
push
pushf
out
sub
call
cmpsl
repz
jbe
ret
inc
dec
xor
cmp
mov
and
xor
and
out
aad
enter
outsb
mov
scas
jle
std
xchg
xchg
or
cld
sub
inc
out
cmp
pop
mov
cmp
and
mov
xchg
push
inc
push
inc
dec
cmp
or
pop
adc
pop
xchg
jo
mov
adc
mov
jno
cmpl
add
and
mov
bound
popa
shlb
nop
rclb
hlt
xor
dec
mov
fisubl
ljmp
aam
fidivs
bnd
call
repz
in
repnz
stos
stos
mov
cmp
add
mov
or
xchg
in
out
push
jle
out
dec
xchg
and
push
jns
insl
inc
adc
shll
dec
pop
pushf
imul
test
sbb
movsl
js
ud1
cli
ficoml
in
cli
scas
push
test
xchg
std
jbe
insl
push
or
das
sbb
aaa
jge
insl
loopne
les
jle
dec
in
xor
pusha
lock
push
mov
popf
xchg
jle
fimuls
ja
in
xchg
or
pop
ret
shrb
inc
aaa
mov
inc
mov
nop
mov
fcmovne
out
fbld
call
mov
dec
add
fiaddl
sar
fs
dec
and
mov
xor
stc
std
mov
or
cmp
js
pop
bnd
or
jl
cmp
cmpl
pushw
in
sti
ret
push
add
inc
pop
pop
aas
sbb
je
stos
mov
jmp
mov
stc
adc
push
dec
enter
and
inc
inc
iret
repz
jmp
xor
xchg
mov
mov
outsb
jecxz
subb
repnz
ret
add
xchg
out
test
jne
das
cli
lcall
rorb
inc
jb
cmc
leave
enter
daa
lods
pop
pop
mov
dec
aas
arpl
xchg
aam
jl
cld
ljmp
lea
lcall
or
sub
add
pop
adc
jno
xchg
xor
mov
ja
sahf
aas
and
aas
icebp
inc
push
stos
lahf
adc
jmp
xchg
or
aad
in
mov
add
popa
dec
iret
or
jg
insl
sub
in
push
mov
inc
icebp
les
mov
sub
jg
and
in
inc
aad
jl
xor
mov
adc
mov
fldcw
xor
sub
fwait
pop
lret
out
xor
dec
pop
inc
inc
ret
out
lret
lds
cmc
fabs
xchg
hlt
popa
xchg
pop
test
jp
mull
arpl
adc
into
mov
test
or
jp
aaa
xchg
jno
push
or
sub
mov
lret
mov
jnp
test
or
jp
xor
add
je
adc
pop
and
mov
pop
cmp
pop
ds
roll
cmp
outsl
or
repnz
in
std
cmpsl
adc
mov
and
add
mov
inc
test
movsl
les
sbb
sub
or
push
adc
enter
mov
inc
xor
adc
addr16
cmpb
jbe
in
imul
sub
fs
sahf
dec
iret
mov
in
mov
xlat
xor
test
test
jno
faddl
data16
loope
ds
repnz
movsl
dec
sub
dec
cmp
pop
sbb
push
div
push
outsl
or
icebp
xor
jnp
sahf
pop
add
addr16
fdiv
mov
pop
and
xchg
mov
movsb
add
jb
jb
mov
and
stos
or
pop
pop
cmp
push
cmp
or
sbb
fsubrl
inc
inc
sbb
and
or
repz
and
inc
cmp
inc
inc
cmpsl
adc
xor
pop
mov
cmp
ret
xor
or
adc
push
repnz
inc
addb
mov
cld
inc
aas
dec
push
int3
popa
or
ficoms
push
xchg
jp
pop
ljmp
test
insl
enter
aaa
lods
cmp
cmp
mov
adc
fsubrs
mov
shr
aas
add
adc
dec
sti
lock
inc
push
lahf
sbb
insb
mov
mov
push
in
push
arpl
loop
sub
push
and
mov
lods
rcl
out
das
push
movb
pusha
clc
mov
jmp
movsl
mov
stos
icebp
int
push
mov
push
cmp
sbb
xor
push
mov
xchg
mov
xchg
mov
aad
adc
inc
jge
push
int3
cltd
imul
imul
ja
sbb
pop
cli
push
adc
fs
jmp
and
push
adc
push
sub
pushf
loope
in
sub
pop
cmp
or
sahf
clc
or
push
jecxz
fistpl
add
or
fmuls
jl
hlt
cmp
xchg
popf
call
out
pop
mov
jg
pop
pusha
or
clc
push
inc
sub
js
lcall
popf
mov
jmp
shl
sarl
fldl
sbb
aaa
or
xor
jne
push
pop
mov
lea
pop
jnp
or
xor
movlhps
push
cmp
lcall
adc
push
daa
pop
push
push
xor
push
imul
ret
dec
push
icebp
dec
outsb
pop
adc
aad
js
mov
jl
mov
movsb
and
test
dec
pushf
push
mov
sub
sub
cmp
mov
pop
pop
lea
mov
mov
imul
adc
xor
xor
mov
dec
mov
xor
mov
js
mov
sbb
popf
push
cmp
xchg
adc
les
mov
mov
sbb
mov
cli
fidivs
scas
sub
push
add
xchg
outsb
lea
mov
pop
dec
outsb
nop
lock
lcall
jmp
jno
inc
mov
mov
dec
insl
lcall
cs
scas
sbb
mov
push
enter
jmp
mov
notl
adc
pop
out
xor
sub
ss
fisttps
flds
subb
inc
sahf
xchg
fdivl
outsb
mov
push
lret
stc
or
dec
lods
inc
push
push
lahf
lea
sbb
and
push
mov
fs
gs
cmc
or
imul
add
push
sbb
cld
add
cltd
push
sbb
outsb
pop
jo
loop
add
pop
push
jb
add
sarl
lret
inc
addl
xor
mov
ss
mov
daa
pop
shll
int3
loop
xchg
std
je
and
jge
pcmpgtb
jae
pop
test
insl
dec
out
adc
test
shll
movsb
xchg
xchg
push
sahf
and
adc
push
ret
xor
filds
xor
sahf
cmp
push
mov
daa
adc
les
sbb
dec
sti
cmp
lcall
jmp
test
aaa
mov
fldt
sub
mov
dec
int3
dec
das
mov
sbb
dec
pusha
mov
out
pop
repz
pushl
aad
pop
in
dec
push
adc
cmc
nop
or
adcb
imul
dec
sbb
adc
sti
hlt
and
push
stc
jns
jb
mov
lods
mov
mov
xchg
and
pop
fmuls
pop
adc
test
jbe
jne
sbb
cmc
adc
sahf
rcrl
pop
or
push
add
xor
lret
mov
mov
jo
mov
inc
outsb
push
cmc
test
in
inc
lret
test
jl
sub
cwtl
pop
out
loop
mov
hlt
sub
das
mov
fisubl
dec
cmpsb
jne
mov
mov
add
repnz
mov
and
push
in
jns
jbe
xchg
dec
push
ret
add
pusha
js
repnz
test
adc
adcb
adc
xor
fbstp
mov
sbb
loop
and
sub
sub
fcompl
cmp
jmp
jl
adc
dec
add
or
pop
jno
sub
xchg
insb
shrl
nop
shrb
pop
inc
loopne
sbb
iret
loop
test
adc
vmovntps
jne
mov
cwtl
xchg
jae
jge
shll
pop
int
adc
cmp
push
dec
xchg
into
sbb
nop
fnstcw
popa
inc
inc
js
dec
jmp
push
mov
xlat
push
sbb
dec
xor
test
shrl
mov
loop
mov
inc
int3
out
or
movsb
pop
mov
sti
into
iret
rorl
fstpl
add
mov
pop
int
jno
inc
mov
outsb
pop
int
cmpsb
pop
fwait
sub
imul
add
pop
push
xchg
data16
es
or
lock
jns
mov
in
popf
push
sub
mov
mov
pop
mov
sbb
mov
ljmp
ja
mov
dec
enter
ljmp
repnz
cmp
xor
mov
aam
pop
dec
test
stc
ljmp
in
movsb
cmp
cmp
sub
and
sti
xor
xchg
in
xchg
jle
or
jns
cltd
xor
pop
and
pop
cld
add
aaa
aaa
shll
call
pop
mov
leave
call
jp
inc
xchg
imul
insb
adcb
lock
cmp
pop
cld
sbb
fisubrs
fimuls
into
xchg
in
push
clc
loop
rorb
clc
sbb
mov
aam
jne
stos
xchg
add
dec
fldt
sbb
jl
cwtl
lcall
push
rolb
hlt
jns
cmp
mov
mov
sbb
push
cltd
sbb
cs
pop
push
xchg
fwait
inc
leave
stos
inc
inc
cmp
mov
mov
or
data16
add
jg
mov
pop
jo
mov
test
addl
xchg
xorl
sbb
fidivl
or
dec
dec
lods
add
xchg
xor
add
rol
ret
das
xchg
xchg
std
xor
out
enter
jns
ds
cmp
mov
and
pop
add
cmp
mov
sub
sti
filds
xlat
stos
push
into
out
sub
test
fwait
pop
push
cmpsl
jmp
int3
add
negl
pop
stos
jge
call
jo
fimuls
cltd
rorl
stos
inc
fsubrp
lea
cmpsb
movsb
aad
fwait
sbb
sbb
xor
imul
bound
inc
das
imul
lahf
cmp
add
xor
aam
cmp
js
xor
pop
mov
mov
test
stc
adc
setno
mov
cmp
sbb
addr16
lcall
hlt
xor
aaa
pop
or
sti
aad
sbb
aas
mov
or
leave
sub
ljmp
test
sub
add
movsb
cmp
test
cmp
ds
sub
pop
leave
lahf
xchg
test
bound
jecxz
sub
push
push
pop
cld
xchg
repz
leave
aas
sbb
iret
push
sbb
std
popa
pop
mov
cmpsl
cmp
pop
xchg
ja
or
insb
xchg
scas
in
icebp
cltd
loop
jno
jne
cmp
xorb
stos
sub
movsb
ret
fmul
sarb
imul
add
cmpsl
fwait
sub
lret
inc
popf
and
xor
sbb
test
dec
pop
jae
push
dec
xor
sub
test
push
lods
movsl
aad
mov
out
rorl
fcmovnb
xor
and
fimull
popf
pop
sub
sarl
popa
mov
sbb
fcomp
es
nop
enter
lock
mov
mov
mov
clc
pmulhuw
dec
or
pop
and
flds
ds
movsb
out
orb
in
sub
xchg
pushf
lods
pop
fsubrp
adc
test
fsubrl
mov
dec
aam
movsl
iret
add
in
popa
mov
push
lret
add
das
jg
xchg
divb
push
lcall
lahf
xchg
loopne
sub
and
repz
fbld
icebp
xor
daa
cmpsb
xchg
xor
push
push
jno
repz
aaa
jne
adc
ret
jle
cmp
sub
sub
imul
cmpsb
nop
hlt
scas
cld
pop
pop
jne
inc
enter
xor
inc
cmpsl
add
sub
inc
mov
jge
cmc
paddb
imul
cmp
inc
lret
rcl
adc
cmp
push
jno
inc
mov
cmp
repnz
fisubrs
shl
xchg
shl
mov
popa
mov
mov
push
shr
xor
adc
inc
fcoml
lahf
dec
jge
lcall
jne
out
dec
lret
daa
lods
cmp
sarb
dec
cmp
lds
lea
test
dec
into
xor
sbb
sbb
shll
mov
jae
ja
xor
fldt
roll
cmp
cld
mov
ret
scas
jmp
xor
pop
dec
jb
shr
cmc
lods
sub
inc
std
fdivp
je
int3
stos
pop
lods
clc
push
outsb
lock
leave
and
sub
shl
js
lret
inc
test
std
jnp
push
shrl
mov
mov
lds
mov
mov
ds
mov
js
std
jb
test
movsb
pop
pop
cmp
adc
negl
pop
ret
mov
push
jg
adc
xor
daa
jnp
sbb
arpl
stos
dec
setb
out
sti
fwait
imul
leave
or
jbe
xor
mov
insl
xor
dec
jo
cmp
add
aad
fldl
aas
mov
jg
gs
xor
inc
pop
imul
insl
cwtl
cmc
enter
in
ret
stos
xchg
and
ja
in
jl
lods
out
cltd
fcmovnb
loopne
lds
jecxz
out
ret
mov
cmp
mov
in
in
test
loope
sub
mov
aaa
mov
sarl
inc
fwait
ljmp
jno
xchg
jmp
cmpsb
sbb
mov
xor
or
test
mov
negb
jno
dec
sub
mov
js
ljmp
inc
adc
sub
clc
std
push
or
sub
sahf
dec
js
sub
jp
pop
rolb
movsl
cmp
adc
xchg
push
stos
xlat
scas
in
orl
dec
and
aaa
mov
push
lret
popf
jb
xor
mov
xchg
test
sbb
xchg
mov
test
aad
lcall
imul
xlat
mov
cmp
jp
lods
and
pushf
pop
xor
mov
cld
jp
pop
addb
adcl
mov
push
clc
cmpsl
cli
jecxz
pop
insl
xor
jno
xchg
sub
popa
cmc
std
mov
pop
mov
jge
sub
movsl
sub
notb
fcmovb
stc
stos
divl
jmp
sub
fistpl
xor
repz
pop
xchg
mov
jae
sahf
cmp
and
rclb
mov
aam
mov
inc
ljmp
mov
push
fdivl
jp
lock
xchg
in
add
test
and
xorb
lds
or
shll
jno
mov
cwtl
sbb
push
lods
add
pop
outsb
out
sub
push
mov
push
in
mov
xchg
xor
outsl
in
lret
aaa
adc
or
cmpsl
jmp
dec
dec
and
jecxz
mov
pop
stos
inc
mov
fisubrl
add
scas
out
fs
sub
jno
and
rcrl
andl
and
ret
xchg
pusha
test
adc
fwait
pop
call
jmp
add
push
jns
cmp
fnsave
in
xchg
les
mov
fdivl
hlt
gs
sub
setp
xor
dec
add
sub
mov
mov
jne
pop
scas
js
out
cwtl
xor
cmp
xchg
int3
stc
sbb
stc
push
decl
lea
jmp
xchg
stos
psadbw
xor
pusha
xchg
ds
push
inc
jmp
in
ficoms
push
pop
aas
jbe
jecxz
hlt
pop
std
sbb
inc
mov
cmpsl
xchg
notl
movsb
mov
mov
or
pop
je
loop
pop
sbb
mov
lret
xchg
xchg
loop
push
adc
jae
adc
inc
imul
dec
pop
jbe
xlat
xor
scas
add
dec
jg
cltd
pop
inc
mov
xor
and
ss
into
xor
sbb
mov
xchg
sbb
push
jne
je
or
xor
dec
fsubl
and
or
xor
mov
aam
mov
dec
ret
insb
in
cwtl
sti
push
sub
xchg
sbb
js
daa
and
in
out
add
inc
fsubl
lods
dec
pop
fstps
stos
in
push
or
aaa
xchg
jb
mov
xor
cltd
mov
adc
mov
xor
in
gs
jle
mov
ds
addr16
inc
push
jmp
push
mov
inc
adc
data16
mov
ds
and
dec
xchg
hlt
jo
in
inc
push
out
ret
inc
leave
fcompl
sbb
sub
lds
push
ret
ds
daa
repz
dec
mov
mov
pop
mov
inc
outsl
mov
jne
pop
ffree
sub
pop
xchg
jp
cli
movsb
push
mov
adc
das
mov
jecxz
adc
cmp
insb
mov
jp
jl
out
push
pop
test
xor
xor
loope
push
test
lods
mov
fstps
lock
mov
lds
inc
test
push
pusha
loop
arpl
mov
add
xor
iret
and
test
aas
mov
loopne
les
pushf
test
xchg
push
out
mov
les
mov
mov
in
add
dec
stc
fs
fidivs
ss
aas
testl
cmc
lods
addr16
imul
ror
shlb
dec
movsl
pushf
mov
imul
aam
in
fwait
dec
jecxz
ja
or
data16
outsl
hlt
ret
sub
sar
fnstenv
in
dec
sub
adc
iret
pop
push
imul
stos
ss
imul
call
fcmovnbe
sbb
not
dec
std
xor
cmp
lahf
mov
xor
lcall
dec
ja
fildll
mov
push
and
dec
cli
cli
xchg
fisubrs
mov
adcl
pop
dec
sbb
sahf
sbb
pop
mov
aas
testl
mov
sbb
jb
mov
ficoms
dec
pushf
bound
jge
dec
movsb
sbbl
aas
and
adc
lock
mov
dec
sub
lahf
and
aaa
lret
fcoms
es
and
cmpsl
scas
leave
mov
push
inc
fwait
int
inc
mov
push
in
movsb
jno
xlat
jno
clc
lea
sub
lods
and
clc
aad
inc
jecxz
lret
aad
jbe
xor
and
adcb
pop
cmc
push
jp
sti
aam
adc
iret
stos
push
xor
mov
xchg
pop
dec
dec
in
jecxz
out
insl
xchg
enter
mov
pop
sbb
icebp
add
sbb
fs
fld
adc
adc
or
fwait
popa
ljmp
xchg
int3
xor
mov
fldlg2
inc
rolb
pop
mov
movsb
fcom
push
mov
inc
sbb
cwtl
arpl
jb
sbbb
cmp
ljmp
mov
icebp
out
dec
sub
pop
or
mov
pop
sbb
jle
push
or
pop
in
or
pop
std
push
cmp
insb
adc
pop
and
lds
dec
rcl
push
jno
in
xor
lods
inc
icebp
test
lock
stos
or
mov
cmp
sahf
lret
out
adc
adc
outsb
xchg
xchg
mov
mov
xchg
dec
mov
dec
sahf
out
sub
add
xchg
mov
lcall
adc
ss
sub
insl
ljmp
jp
pop
mov
sbb
mov
cmp
xor
xchg
xchg
cltd
push
movsb
mov
inc
scas
xlat
fnstsw
cmpsb
loope
arpl
enter
sub
shl
push
mov
inc
sbb
adc
cmpsb
pop
out
inc
dec
jbe
decb
pop
negb
xchg
jge
repz
dec
pop
in
push
sub
sbb
sbb
mov
mov
test
adc
adc
and
lcall
jmp
cltd
or
jle
mov
push
lret
xlat
lret
ret
cwtl
shrb
jo
cli
loopne
xchg
jne
fistps
xchg
push
sub
push
pop
ja
xchg
fistpl
xchg
cwtl
push
into
inc
stos
in
les
and
mov
movsl
stos
enter
mov
hlt
dec
icebp
lcall
cmp
hlt
mull
dec
lret
adc
and
in
mov
mov
test
add
rolb
out
das
cmp
adc
sbb
jle
sub
sbb
stos
or
xchg
jno
insl
iret
mov
cmp
jno
jmp
jle
mov
lods
rcll
pop
das
lahf
rclb
mov
or
xor
insl
mov
sbb
ds
pop
xchg
mov
dec
js
xchg
add
sbb
fbld
and
mov
mov
das
imul
aam
in
cmp
dec
pop
fdiv
or
or
nop
rorb
dec
pop
outsl
loop
pop
movsl
psrlw
push
nop
lock
loop
sahf
xlat
adc
call
nop
push
jae
pop
sub
repz
mov
sub
jns
mov
repz
xor
push
or
rol
inc
and
or
lods
sub
in
sbb
in
push
cmp
lret
dec
push
jne
test
js
cmp
xchg
mov
scas
mulb
jns
jl
sub
ret
scas
shr
lret
pop
sub
aad
push
push
mov
icebp
pusha
pop
int
out
fldenv
call
push
arpl
push
or
mov
pusha
addr16
sbb
cmp
scas
ja
inc
aad
clc
aad
push
jb
cmc
sub
aas
xor
xchg
andb
mov
inc
mov
mov
jecxz
adc
push
negl
call
xchg
out
xchg
dec
aam
add
loope
xor
orw
std
outsl
inc
jbe
sar
mov
pop
mov
push
or
xor
jle
mov
xchg
xor
mov
jl
inc
xchg
cwtl
aas
inc
unpckhps
popf
pushf
xor
iret
lretw
dec
add
pop
out
adc
dec
pop
imul
pop
gs
inc
aam
ret
jo
enter
addr16
mov
test
pop
shlb
mov
rcrl
and
and
jp
mov
xchg
ljmp
outsl
ret
bound
adc
push
pop
ja
outsb
fldenv
fwait
shrb
dec
push
es
les
push
out
mov
sbb
mov
ret
call
cld
enter
rcrb
cmc
divb
mov
sbb
mov
xchg
or
call
lret
add
mov
pushf
mov
inc
or
mov
nop
ss
call
das
adc
in
inc
stos
shl
cmc
scas
cmp
mov
sub
add
push
loop
inc
addr16
fidivs
mov
insl
addr16
pushf
call
cltd
xor
scas
mov
data16
cltd
out
lds
ffreep
iret
dec
or
mov
ljmp
mov
push
pop
les
into
sbb
mov
dec
push
pop
mov
xchg
sub
lock
je
enter
nop
or
jne
out
mov
dec
int3
add
fs
dec
mov
cld
mov
out
cmc
xchg
push
iret
adc
jae
inc
mov
mov
mov
mov
mov
xor
sbb
imul
push
pop
pop
push
mov
cmp
jmp
addr16
addr16
mov
inc
pushf
stos
sbb
and
cmc
cmp
dec
out
repz
outsb
test
jmp
push
call
or
or
shlb
repnz
mov
ss
add
in
jo
and
mulb
xor
fmuls
sbb
dec
xor
jle
dec
je
mov
rclb
addb
in
in
sub
cmpsl
mov
adc
mov
js
ja
xchg
out
sub
pop
scas
insl
stos
js
lods
pop
mov
dec
mov
out
pop
xor
fisubs
dec
cmp
int
xor
js,pn
pop
sub
push
fwait
sar
mov
adc
ret
fldenv
imul
ret
push
les
mov
push
sbb
xor
dec
pusha
shlb
mov
jns
sbb
add
cmp
jp
adc
xchg
jg
jnp
mov
and
xchg
mov
out
out
and
mov
xlat
movsb
adc
lret
sahf
aam
call
shlb
pushf
push
in
or
cld
mov
aaa
nop
fwait
call
pop
push
xchg
cli
cmp
dec
push
icebp
data16
int
pop
mov
adc
das
xchg
and
jmp
and
insb
nop
xchg
pop
pop
into
stos
adc
sbb
jo
sbb
sbb
out
ds
ret
adc
dec
add
int
sub
xchg
test
dec
xor
mov
add
sbb
sahf
arpl
addr16
loop
fstpl
mov
test
and
jge
lods
mov
mov
in
shll
aam
lea
or
push
arpl
out
push
jecxz
jg
lcall
sbb
xor
lcall
and
pusha
xlat
add
mov
stc
push
adc
subl
jp
adc
xor
cmpsb
jmp
mov
mov
mov
cmp
popa
sub
push
ficoml
dec
cltd
inc
and
push
xchg
cmp
arpl
pop
mov
sarl
mov
cmp
inc
fwait
in
xor
cmp
dec
arpl
or
outsb
sahf
aaa
mov
xor
mov
or
add
test
jbe
in
stos
into
xchg
stos
fiadds
mov
cmp
test
mov
jl
sub
insl
adc
movsl
ret
mov
pop
cli
lret
cmp
sub
cmp
aam
lcall
ret
push
les
jp
fldcw
mov
xor
or
jb
jne
sub
mov
movsl
scas
cli
int3
fmuls
nop
cmpsb
cmp
mov
cs
push
test
dec
cmp
aas
or
fwait
lcall
dec
int
aam
ror
push
insl
stc
dec
inc
loop
cmp
mov
cs
stc
aam
or
xchg
or
test
pop
dec
mov
dec
dec
and
lcall
cld
scas
push
mov
sti
sbb
push
dec
push
mov
lret
stc
sbb
mov
add
cltd
insb
lea
in
cwtl
jo
ja
cmpsl
pop
stos
and
fisttpll
stos
mov
jnp
push
sbb
test
push
dec
call
mov
mov
cld
scas
lahf
and
nop
stos
dec
std
jns
je
les
pop
aas
pop
lods
dec
movsl
and
test
scas
dec
mov
dec
push
bound
and
add
mov
adc
test
mov
jno
insl
movsl
shll
cmp
int3
sbb
mul
dec
push
movsb
addb
mov
mov
sbb
inc
xchg
lcall
leave
inc
mov
dec
pop
mov
mov
pop
sub
imul
add
insl
pusha
sbb
mov
mov
mov
imul
jge
pop
push
sbb
aaa
jns
sub
lcall
loope
dec
hlt
sub
push
into
cwtl
mov
inc
xor
inc
sub
xor
ljmp
or
sbb
cmpsl
dec
jns
pop
xchg
mov
cmp
fnstsw
xchg
test
cmp
mov
in
inc
and
popw
in
dec
jle
in
adc
xchg
pop
mov
inc
inc
dec
and
add
or
push
int3
xorb
dec
sti
js
bound
les
divl
push
cmp
sub
sti
pop
dec
insl
aas
dec
push
cmpsb
mov
es
mov
cmpb
rorl
xchg
fidivrl
movsl
pop
or
fldl
jle
xchg
daa
lret
lahf
adc
hlt
test
push
loopne
cltd
out
inc
push
mov
mov
adc
mov
fldt
lahf
loopne
lcall
cmove
xor
sbb
mulb
sbb
mov
mov
icebp
lcall
sub
xchg
std
movsl
sub
inc
outsb
or
aam
pusha
mov
jae
sub
jo
xchg
push
roll
jmp
cmpsb
out
sarl
rorl
xor
add
test
ja
and
xor
adc
dec
push
lret
pop
add
mov
jne
inc
inc
mov
lea
xor
roll
stos
pop
cmpsl
inc
xlat
orb
rorl
arpl
pop
sbb
xchg
fdivrp
cs
and
xor
xor
fisttps
mov
jns
leave
dec
add
add
ljmp
or
mov
lret
xor
pop
add
dec
lcall
push
pop
clc
andb
scas
repz
fbstp
inc
gs
cmp
jne
cmpsl
inc
insl
and
xchg
imul
pushw
mov
ss
mov
scas
scas
out
cmp
lods
fwait
int3
ss
lods
lret
add
into
cmp
or
aad
or
leave
pushf
xchg
addb
push
and
xor
test
daa
jo
xor
and
jmp
add
loop
push
add
int3
pop
cmp
das
pextrw
or
mov
bound
dec
dec
shll
dec
arpl
in
adc
pop
mov
cs
inc
cmp
loopne
pusha
arpl
fcmovb
sbb
sbb
lods
xor
jl
popf
xchg
addr16
mov
mov
jno
pop
or
test
xor
jmpw
mov
das
cmp
scas
nop
cmp
int
pop
js
inc
ja
mov
test
nop
std
push
test
fnstsw
addr16
pmulhw
imul
popf
add
pop
xchg
add
hlt
mov
pusha
pushf
popa
stc
push
stos
adc
xchg
std
mov
loope
mov
jns
lahf
lds
xchg
push
mov
leave
test
test
clc
xorl
jbe
fnsave
ret
int
adc
jp
inc
repnz
mov
or
mov
test
in
inc
xor
ror
or
mov
ds
mov
fisttps
jle
cmp
push
es
xchg
mov
lods
ret
mov
add
cmp
add
push
push
hlt
xchg
mov
imul
mov
mov
cmc
in
and
mov
or
and
test
mov
and
cmp
test
or
jne
cmp
mov
sbb
int
repnz
ljmp
mov
inc
test
nop
and
xchg
jae
test
pop
push
lods
add
les
jge
mov
or
popa
inc
pop
push
xor
cmpsb
inc
dec
ljmp
es
push
test
dec
insb
and
jne
test
jno
cmp
sbb
mov
test
cmp
push
mov
int3
js
push
mov
dec
sub
jne
xchg
and
or
fincstp
sub
movl
and
ss
xchg
scas
or
ljmp
pop
outsb
jge
ljmp
pop
repz
mov
cmpsb
addr16
icebp
pop
loopne
js
insb
xchg
push
das
std
mov
dec
arpl
aam
icebp
adc
aam
data16
pop
js
dec
inc
mov
gs
repz
mov
lcall
push
mov
in
dec
mov
sbb
xchg
clc
test
in
mov
addr16
adc
push
xor
iret
pop
cmc
imul
repnz
std
jecxz
les
pop
push
ljmp
jmp
push
fdivr
jae
icebp
xchg
pop
pop
lea
or
inc
fdivs
outsb
out
mov
ss
push
xor
es
rcrb
pop
mov
xlat
pop
fistpl
addr16
in
mov
lods
test
loopne
fistps
mov
pop
sub
and
xchg
pop
xchg
sub
fistps
sbb
cmp
out
and
test
inc
push
dec
fnsave
adc
sbb
xchg
sub
xor
ja
jb
xchg
fcompl
cmpl
jecxz
dec
test
in
shrb
dec
addb
mov
push
sub
jecxz
int
cmp
pushf
negb
push
aas
jnp
mov
sbb
and
mov
js
pop
fists
out
hlt
lret
es
cmp
pop
pop
add
mov
jae
adc
sahf
iret
aam
lcall
cmp
push
in
shrb
and
shrb
lea
add
or
cltd
xchg
adc
nop
dec
ja
jecxz
fsubs
ljmp
aas
outsl
cli
push
arpl
sbb
and
insl
cmp
scas
insb
jmp
dec
sub
andb
jbe
repz
and
and
cmpsl
inc
mov
in
pop
jb
and
fists
pusha
lock
and
cltd
movsl
filds
sub
sbb
xorb
out
daa
adc
mov
jns
mov
lcall
int
cltd
jo
mov
adc
roll
lret
aad
mov
ss
lahf
aas
rcrl
add
jle
fsubs
adc
push
mov
adc
scas
stos
popw
mov
jno
cmpsl
daa
and
push
call
pop
mov
outsb
sub
inc
inc
dec
aaa
cld
mov
jecxz
push
lods
add
mov
add
push
pop
push
ret
hlt
jns
add
adc
inc
inc
shrl
xor
adc
push
jg
mov
vsqrtps
inc
sahf
iret
lret
out
and
rcll
or
push
push
inc
dec
add
mov
mov
dec
into
push
xchg
shrb
or
mov
jl
mov
mov
inc
xchg
cmp
pop
addr16
enter
mov
jne
imul
test
leave
xor
cwtl
sbb
les
lds
mov
test
loop
adc
cmc
repnz
jae
into
push
mov
push
loop
mov
popf
inc
sub
or
pop
cli
arpl
mov
cmp
enter
dec
sbb
dec
es
notb
pop
call
in
movsl
movsb
gs
sbb
mov
adc
jnp
mov
in
sub
cmp
outsb
stos
icebp
pop
stos
mov
adc
xor
jb
push
or
hlt
xchg
insl
adcl
inc
mov
push
xchg
test
or
cmpsb
stos
imull
sub
lods
mov
ret
sbb
addb
popa
pop
inc
aad
pushf
popa
sub
and
pop
fstl
pop
mov
inc
sbb
iret
fstpl
mov
add
das
add
sbb
out
lds
popa
lea
and
cmpsb
inc
in
icebp
push
pop
arpl
sbb
test
sarl
es
pop
bound
and
aas
mov
add
popa
xlat
cltd
pop
jne
mov
lock
lret
mov
aas
fisubrs
scas
imul
and
fstps
mov
xor
pop
xchg
iret
jo
ljmp
xor
inc
aaa
sub
sbb
push
es
inc
pop
add
add
sub
cmp
push
imul
fiaddl
push
inc
and
fsub
addl
fistpl
dec
ja
mov
in
and
fcmovu
idivb
je
xor
or
fs
xor
jle
test
and
movsl
popa
cli
scas
inc
xor
outsb
gs
push
sbb
fwait
shlb
dec
push
shll
ss
leave
adc
or
push
dec
mov
fwait
xor
jecxz
call
jne
fdivl
or
movsb
add
rorl
xchg
rolb
xor
pop
adc
push
aad
in
andb
das
xor
mov
xor
js
sahf
pop
outsb
ja
xor
sbb
ljmp
add
ret
add
lods
push
add
leave
es
inc
scas
adc
mov
sub
cwtl
mov
inc
add
sbbb
cmp
fidivrl
pop
jle
in
imul
bound
push
jl
dec
jo
imul
cmp
lahf
sbb
push
add
pcmpeqb
or
popf
mov
xor
inc
mov
outsb
rclb
stos
insl
js
jge
subb
popa
cmp
aaa
inc
mov
pushf
pop
inc
xor
jne
fnstsw
jp
arpl
mov
sub
fxch
jmp
pop
mov
lret
loope
cmp
push
and
fs
sub
mov
xor
hlt
lret
jae
outsl
mov
push
aam
gs
in
inc
xchg
mov
push
into
ss
in
inc
imul
mov
mov
lock
das
lret
xor
lret
pop
pop
cld
xchg
repnz
mov
jns
cs
call
lret
pop
gs
out
fsts
imul
das
sahf
pop
repz
lods
aam
cltd
or
mov
and
cmp
lret
mov
inc
pop
pop
outsl
ret
call
xchg
push
xor
mov
mov
push
pop
int
test
inc
sub
loopne
jecxz
mov
daa
cs
add
aad
fidivl
xor
and
mov
mov
and
rorb
pop
inc
or
pop
inc
mov
repz
outsb
mov
clc
mov
pop
fs
out
lods
mov
mov
mov
dec
adc
jmp
sbb
push
pop
mov
test
stc
rorl
lods
pop
loope
mov
ror
lods
das
or
mov
mov
add
fstp
sbb
fsts
dec
rcl
in
inc
mov
imul
loope
pusha
sbb
add
and
inc
push
pop
dec
bound
dec
iret
jns
call
push
inc
rolb
int
ret
je
mov
enter
sub
bswap
cltd
xchg
clc
add
dec
clc
sti
inc
pop
jbe
push
inc
ja
sbb
cli
loope
pop
push
and
cwtl
jo
fcompl
xorb
icebp
pop
repnz
add
das
stos
jmp
inc
cmp
mov
add
or
loop
fld
lock
loopne
xchg
xor
nop
sbb
jb
and
in
mov
mov
mov
push
decl
sbb
adc
or
and
sti
xor
mov
fs
sub
xchg
jns
push
push
call
call
pop
nop
fstpl
in
push
xchg
scas
add
in
cmp
sub
adc
outsl
aam
call
jnp
popa
pop
cmp
jecxz
frstor
hlt
lods
jge
call
pop
into
sti
loopne
movl
and
push
push
lret
cmp
mov
out
in
add
in
jbe
adc
fadds
fisttps
movsl
jecxz
mov
jne
repz
sti
addr16
xor
mov
xor
adc
lcall
add
or
pop
or
cmp
or
jae
jl
jmp
fistl
rorl
inc
pop
mov
ljmp
mov
popa
push
or
inc
out
nop
adc
hlt
mov
cmpsl
push
xchg
shlb
shrd
xchg
mov
xor
lods
mov
rorl
mov
jo
loopne
dec
lods
aad
addr16
ljmp
inc
sbb
add
into
cmp
je
mov
stos
xchg
std
popa
in
out
test
add
clc
pop
mov
inc
out
mov
xchg
mov
scas
mov
sub
sub
loopne
shlb
gs
mov
xlat
in
out
arpl
mov
mov
sbb
push
jmp
stos
xchg
loope
shrb
xor
fidivs
push
and
scas
push
cmp
xchg
dec
mov
mov
sub
or
pop
aas
mov
ss
and
adc
cmp
fadds
lock
push
push
mov
add
mov
cmp
sbb
dec
lock
cmp
mov
xor
sub
jo
movsb
rcrb
or
rcrb
sub
pusha
rcll
xlat
popf
push
mov
push
enter
push
adcb
dec
sbb
adc
inc
dec
sbb
lods
xchg
xor
xchg
inc
and
mov
mov
into
inc
fstpl
imul
pop
cmp
push
sti
push
adc
jo
pusha
dec
scas
jns
test
cmp
push
jae
xchg
adc
jecxz
and
adc
pop
jg
xor
std
test
bound
sbb
mov
mov
pop
xchg
clc
cmp
add
ret
std
fcmovbe
xchg
xchg
dec
pop
dec
add
mov
mov
inc
out
add
jo
fwait
xchg
mov
dec
lret
clc
mov
dec
std
push
stos
xchg
ret
adc
lods
sub
mov
call
popf
pop
and
lcall
imul
xchg
js
test
call
orl
out
xlat
inc
mov
imul
sar
es
mov
adc
pause
and
xor
and
xchg
push
leave
sarl
iret
ljmp
rol
jno
popf
arpl
mov
pop
cmp
push
test
insb
cmp
jo
sub
sub
outsb
push
xchg
pop
cmp
jne
jge
aad
loop
and
mul
fcoml
add
pusha
jl
inc
enter
lods
add
add
inc
push
mov
leave
jecxz
das
insb
fptan
ret
adc
sbb
in
bound
xchg
add
xchg
pop
arpl
subb
sub
dec
add
pop
and
xchg
mov
xchg
cmp
cltd
cltd
xchg
pop
out
stc
xor
or
jg
sti
fcmovnb
sub
jg
lock
xlat
lds
je
dec
fistps
out
sub
pop
je
fwait
push
rep
cmp
data16
pop
sub
popf
je
xchg
popf
scas
and
les
sbb
xor
cmp
rclb
jns
push
push
and
xchg
scas
lret
xchg
mov
into
pop
dec
mov
subl
or
sti
or
iret
xor
push
and
jmp
xchg
adc
jmp
in
add
and
jg
mov
imul
bound
adc
sbb
mov
fdivp
imul
popl
adc
aaa
jge
inc
mov
push
ja
shll
cli
cmpsb
add
mov
cwtl
lret
lret
sub
mov
js
mov
jge
push
in
pop
js
call
inc
or
stos
loope
mov
adc
jl
cltd
cli
and
aaa
loopne
sbb
jnp
xor
push
and
jge
and
mov
test
sti
dec
adc
in
cltd
push
movsl
les
jae
in
stos
add
xchg
and
inc
sub
xchg
ret
out
fdivrs
jp
mov
je
cs
icebp
lret
cwtl
adc
es
sahf
xor
sbb
jns
dec
arpl
dec
push
adc
cmp
dec
pop
xor
or
mov
dec
es
sub
adc
adc
xchg
inc
fucom
mov
aas
push
mov
scas
shlb
and
inc
or
nop
xchg
push
roll
and
fnstcw
es
push
test
stos
pop
imul
jl
dec
shll
add
divb
sbb
mov
or
sbb
movsl
sbb
fwait
outsl
dec
test
sti
pop
cmpsl
cmp
mov
inc
dec
flds
mov
add
mov
test
adc
pop
push
pop
sub
mov
in
or
fsubrl
mov
xor
xor
cmp
mov
cld
mov
mov
stos
inc
xchg
pop
test
sbb
test
push
xchg
ret
jmp
stos
mov
ret
mov
mov
push
push
inc
repz
or
cmp
cmp
arpl
mov
fwait
mov
pop
inc
cmc
addb
addb
int3
repz
mov
inc
pushf
inc
scas
cs
outsb
cmp
sbb
push
into
inc
add
and
dec
mov
ja
add
lock
stc
sbb
xchg
cs
cmpsl
popa
adc
test
sbb
jle
sbb
xor
cmp
jbe
dec
jnp
daa
xchg
sbb
ret
hlt
add
js
cmp
inc
dec
fwait
dec
loopne
pushf
mov
mov
pop
mov
fs
adc
adc
cmp
pop
cmp
shll
mov
mov
aas
xchg
add
jp
lock
gs
test
aad
push
push
or
dec
stos
cmp
jo
xchg
sti
adc
jp
jnp
jae
test
adc
mov
sub
lahf
inc
wrmsr
bound
insl
push
outsb
loope
shll
ret
adc
test
in
fs
cs
jmp
popa
mov
cmp
mov
adc
cld
xor
lods
inc
ret
pop
mov
aad
sub
roll
out
gs
cmp
in
xchg
mov
dec
sahf
je
in
sub
push
sahf
aas
sub
dec
cmp
stos
nop
jb
dec
out
add
loop
ds
jbe
out
int3
sahf
jno
rorb
and
je
add
pop
rcl
dec
and
arpl
mov
sub
sbb
lret
movsb
dec
scas
cmp
xor
cmp
lret
scas
mov
xor
imul
xchg
testl
test
stc
pop
rclb
test
push
inc
dec
mov
jb
or
insb
jle
insl
push
mov
ja
lods
adc
imul
aas
xchg
popa
test
aad
mov
mov
ljmp
dec
mov
divl
mov
bound
das
insb
add
xchg
jbe
mov
test
adc
mov
pop
cmpsl
xor
movsl
pop
pushf
adcb
add
jp
xchg
pop
xchg
call
mov
inc
and
jge
enter
cmpsb
jno
stos
push
movsb
cmpsl
loop
shll
fisttps
fs
sti
fstp
cmp
cmc
das
and
pop
xor
add
fcompl
lea
dec
rcr
lea
jecxz
jmp
bnd
mov
and
lods
adc
das
mov
test
imul
sti
jns
push
adc
xor
adc
aaa
xchg
xchg
inc
stc
cmp
int3
fs
adc
xchg
test
in
push
ja
pop
adc
jns
xchg
and
mov
add
xchg
movsb
maskmovq
lcall
rcrb
test
daa
xchg
fdivrs
shlb
mov
ret
data16
mov
mov
mov
push
jmp
cmpsl
nop
iret
or
stos
sbb
out
pop
add
cld
mov
dec
sbb
mov
aam
jne
inc
xlat
jle
sti
mov
push
xor
sahf
inc
or
cmp
movsl
mov
push
and
mov
dec
aam
imul
push
push
xchg
mov
call
aas
in
ljmp
jo
shll
push
das
dec
push
pop
cmpb
xor
jae
arpl
jno
je
pop
pop
shl
lret
aam
and
lret
push
and
ss
mov
enter
mov
pop
shr
in
xorl
into
not
xchg
rorl
pop
push
enter
arpl
stos
dec
dec
sar
fidivrs
enter
pop
adc
jo
jl
lds
es
nop
add
incl
into
lcall
test
xchg
cmp
outsb
ret
mov
dec
push
rolb
sbb
jecxz
cwtl
mov
iret
bnd
shrl
pop
int3
or
sbb
frstor
in
mov
push
mov
adc
jae
lods
loopne
push
rorl
lea
mov
out
cmp
mov
pop
xor
mov
push
repz
test
fwait
mov
push
loop
imul
jle
dec
push
adc
in
xor
pop
mov
int3
cmp
ja
inc
lret
or
xchg
push
test
cmp
adc
mov
jp
pop
mov
es
mov
sub
cld
push
xlat
popf
add
test
sti
in
sbb
mov
adc
jg
mov
loop
fsubrl
scas
dec
sbb
and
cmp
mov
mov
jecxz
pushf
sti
andb
or
mov
faddp
je
sub
addb
mov
fdivrl
loop
cmp
adc
scas
cmp
mov
mov
dec
or
ficoms
rclb
scas
xor
subb
idivl
and
adc
mov
adc
xchg
xchg
or
or
add
lcall
mov
loopne
daa
imul
jns
push
imul
lea
jle
fstps
pop
xchg
xchg
dec
cmc
popf
rcl
testb
sbb
sub
divl
push
scas
push
inc
andl
loop
xchg
adc
sub
mov
addr16
and
sub
inc
xchg
inc
stos
mov
xchg
cld
sbb
jno
js
mov
add
popa
mov
aad
les
scas
and
pusha
imul
fnstsw
inc
cmp
pop
mov
xor
shl
add
fbld
inc
pop
ret
jg
cwtl
out
inc
mov
cmp
cld
lahf
fcoml
or
getsec
xchg
push
iret
in
push
lret
popa
pushf
mov
ljmp
in
xchg
nop
pop
lods
adc
outsb
fst
popa
push
pop
mov
sub
jns
adc
jg
sub
mov
and
inc
loop
lret
jge
xchg
adc
scas
test
aam
xor
shrb
push
or
mov
and
or
je
fadds
push
fmul
cmp
add
or
sbb
pop
fbld
push
xor
out
sbb
insl
inc
in
call
cwtl
stos
hlt
in
mov
iret
les
mov
pop
ds
xor
das
push
scas
iretw
mov
mov
int
mov
lods
lds
mov
mov
imul
orl
ret
xchg
pop
cmp
outsb
ret
test
fldl
cs
mov
jp
in
flds
add
mov
fadds
inc
sbb
add
xchg
cmp
fidivrs
pop
nop
setne
and
pop
inc
lock
out
mov
bound
add
jge
aaa
cli
mov
movsl
and
add
push
lods
jge
orb
gs
lcall
dec
test
cmc
ds
mov
push
lds
out
cmp
jg
sbb
dec
fxch
jle
pop
out
add
inc
std
dec
test
lea
ljmp
ljmp
dec
inc
mov
jmp
jns
out
mov
or
mov
std
lcall
or
std
mov
les
les
inc
sub
aas
jge
or
mov
packsswb
push
insb
push
test
pop
and
das
push
sar
nop
stos
fwait
inc
shll
cwtl
in
imul
fcomps
adc
jmp
sbb
and
std
adc
ret
pop
add
dec
push
sub
inc
or
mov
ret
jle
mov
or
xchg
mov
pusha
xbegin
fs
push
pop
sub
test
mov
mov
loop,pt
lds
push
mov
insl
inc
popf
fwait
xor
xchg
jb
fwait
js
jmp
js
xchg
adc
lret
int3
es
inc
lcall
sub
jmp
pop
inc
xchg
inc
inc
mov
inc
mov
sub
push
mov
outsb
hlt
inc
jno
jl
mov
push
and
cmp
lds
mov
add
xchg
mov
popa
or
int3
sbb
add
orb
xchg
xor
out
cltd
jl
js
xchg
bound
mov
paddusb
mov
fcompl
dec
outsb
jo
scas
adc
cmc
mov
inc
xchg
mov
andb
and
outsb
and
jns
sbb
daa
mov
xchg
or
pushf
or
push
push
loop
push
lds
jge
enter
xchg
pop
sbb
mov
inc
outsl
loopne
aaa
js
xchg
push
dec
jmp
mov
cmp
inc
cmp
xchg
push
and
jl
pop
mov
sti
and
ret
and
mov
cs
repz
test
cmp
aad
xor
adc
loop
test
jg
pop
fisttps
push
pushf
fisubl
or
fbld
aas
cmp
jp
nop
sbb
ja
in
mov
std
dec
cli
jno
js
jb
cmovb
roll
pop
ret
ret
dec
and
cmp
mov
adc
out
mov
cli
int3
mov
test
dec
ffreep
outsl
int3
rorl
fildl
dec
inc
push
jnp
xor
sub
fcmovnu
fmul
rcrb
hlt
clc
sub
sbb
inc
cmp
lret
arpl
push
stos
push
cmpsb
mov
mov
lahf
aaa
stos
shlb
rorw
stc
loopne
or
mov
lahf
icebp
mov
jmp
xlat
inc
ret
mov
cltd
sahf
std
lods
outsb
cltd
add
outsl
sbb
rcl
inc
and
imul
mov
pop
leave
jp
inc
pop
and
mov
inc
sub
das
adc
stos
pop
fadds
sub
cmpl
xor
aam
insl
jp
mov
std
sbb
out
lea
les
dec
call
out
add
dec
inc
jns
push
push
mov
in
ds
out
imul
cmp
mov
jmp
cmpsb
lss
mov
dec
adc
push
and
xor
xchg
inc
shrl
sub
in
es
mov
call
into
iret
cmpsl
hlt
pop
push
push
nop
aad
xor
xchg
or
sbb
mov
and
fldl
inc
test
arpl
cmpl
mov
add
loope
mov
and
cmp
sarl
cwtl
lea
pusha
jno
loop
outsb
es
aaa
and
dec
and
mov
mov
xchg
jmp
jle
cwtl
cld
aam
push
sub
sbb
mov
das
cmc
jbe
xchg
or
sbb
dec
xchg
test
movsb
fildll
jb
xchg
insl
inc
pop
vmread
inc
pusha
jbe
cmp
xchg
bound
xchg
cmp
shlb
cmp
les
adc
xor
adc
imul
sub
aad
fldl
xor
je
addw
clc
pop
cmp
stos
sub
mov
sub
cmp
push
mov
ret
inc
inc
rep
int
out
and
loopne
addb
lods
lahf
int3
sbb
imul
lods
mov
add
or
dec
push
sbb
insb
js
ret
jmp
lods
fadd
cli
rorb
mov
adc
ds
rol
nop
leave
dec
fildll
addl
lcall
stos
fimuls
ja
ljmp
aam
and
add
clc
pushf
xor
ficomps
push
sarl
or
out
pop
scas
sbb
cmp
cmp
mov
xor
xor
je
mov
sub
sub
and
imul
mov
add
fcoms
aas
sub
mov
mov
ss
lahf
or
outsb
std
mov
hlt
adc
mov
ret
inc
xchg
stos
fcoms
aas
mov
sbb
in
das
ss
testl
mov
xor
dec
lret
cmpsl
jno
xchg
dec
fistpl
mov
rcll
das
cmpsl
ret
sbb
push
mov
sub
fimuls
and
pop
cmp
lcall
mov
std
and
sub
fbld
or
push
add
loop
xor
shl
mov
mov
pop
in
dec
stos
in
ja
sub
add
stos
fiadds
notl
hlt
aad
lahf
push
jl
cmp
popf
inc
fwait
jp
testl
mov
aaa
push
loopne
sbb
sbb
mov
mov
xchg
push
stc
idivb
jae
or
pop
xchg
repz
mov
inc
xor
rorl
or
in
push
push
mov
mov
and
clc
xchg
pushf
pop
fstps
stc
stc
movsl
mov
in
scas
push
xor
addr16
and
mov
imull
lods
sub
or
lcall
neg
adc
ss
fucomp
adc
pop
lcall
sbb
jmp
jecxz
pop
ficoml
xchg
push
rolb
jnp
sub
push
cmpsb
pop
out
fidivl
and
or
inc
pop
push
mov
loop
hlt
imul
xchg
xchg
and
bound
push
cmpb
ret
pop
clc
jb
xchg
adc
lret
mov
lcall
push
xchg
idivb
fdivl
mov
mov
inc
jmp
lea
insb
nop
mov
or
lret
add
cmpsb
push
push
clc
rcll
es
dec
sbb
popl
mov
lcall
inc
lcall
jns
mov
fs
xchg
test
into
lret
xchg
movsb
cmp
xchg
pop
not
sub
jb
cld
mov
add
pop
es
dec
mov
fwait
jl
sti
nop
imull
out
pop
lret
adc
add
sub
vpsllq
iret
pop
fdivs
scas
cmpsl
pop
xchg
push
dec
stos
dec
cld
mov
fnstenv
mov
jmp
stos
cmp
es
xor
adc
test
push
push
test
jl
and
movhps
jmp
pop
mov
and
add
or
pop
out
rolb
jno
xchg
jbe
mov
out
inc
pop
or
jnp
mov
mov
pushf
cmpsl
mov
data16
in
xchg
pop
xor
lods
sahf
out
imul
fnsetpm(287
sub
push
outsb
fimull
in
and
pop
mov
mov
lea
iret
mov
or
or
and
mov
mov
test
ret
in
jnp
imul
ret
lods
mov
push
fwait
inc
cmpsl
test
popf
cmp
pop
ret
iret
xchg
xchg
jnp
imul
pop
mov
ret
mov
imul
xchg
jno
pop
fsts
sbb
iret
fcomps
outsb
ja
mov
test
lahf
xor
pusha
out
inc
jbe
jae
rcrl
add
cmpsl
cs
xchg
xchg
push
in
inc
dec
xchg
dec
jnp
jecxz
xor
cltd
mov
jo
push
dec
jmp
fwait
iret
ret
cwtl
pop
in
xor
outsb
mov
mov
adc
mov
dec
mov
fcoms
fs
out
xlat
inc
fisubs
into
int3
sub
dec
or
inc
out
push
sahf
int3
sub
mov
sbb
insb
mov
movsl
pop
adc
es
cmpsb
cmp
mov
jae
daa
andb
in
add
jmp
fcmove
and
test
ret
stc
xlat
adc
arpl
mov
mov
add
push
jae
sbb
in
push
mov
jmp
push
inc
inc
jne
mov
adc
dec
jge
lcall
or
pop
gs
repnz
mov
pusha
and
stos
inc
lcall
fs
lcall
xlat
mov
mov
mov
dec
cmp
in
fwait
neg
inc
mov
pop
xchg
dec
or
pop
insl
sbb
rorl
clc
xorb
repnz
outsb
nop
add
out
gs
sbb
repnz
fdivr
leave
pop
mov
aad
movsl
push
sbb
fsubl
sahf
lahf
xchg
cwtl
in
xor
les
aad
data16
xchg
rorb
stos
mov
jnp
lods
mov
es
shll
add
jne
out
xchg
outsb
loop
negl
jmp
or
cwtl
ja
add
mov
fwait
pusha
push
pop
int
adc
cmp
insb
mov
add
pop
push
popa
jbe
inc
sarl
pop
sbb
sbb
jns
jns
aad
sub
mov
xchg
cltd
or
lods
int
lahf
pop
cld
leave
xchg
push
pushf
mov
sub
shrl
or
mov
sub
mov
enter
add
pop
sbb
inc
ficoml
mov
jnp
ljmp
in
scas
je
addl
sbb
data16
adc
fisttpl
lret
ss
mov
fistpll
sti
sbb
push
sbb
cld
sar
mov
xchg
loope
nop
data16
cld
xor
loop
into
ret
in
adc
xchg
out
mov
sbb
clc
adc
push
jg
test
mov
ds
fsubrs
call
or
sub
and
xorl
xchg
or
jmp
xor
repnz
test
jecxz
jmp
pushf
int3
pop
outsb
in
ret
inc
in
popf
sbb
std
push
xchg
cmc
js
cmp
hlt
pop
scas
fisttps
out
bound
int
push
adc
and
shll
cmp
or
int3
xchg
cs
fldenv
call
jmp
jbe
test
adc
aam
mov
inc
testb
jae
andb
pusha
push
add
mov
in
xchg
jle
sbb
and
div
adc
add
popf
cmpsb
into
arpl
mov
aad
jno
and
popa
mov
add
sbb
cwtl
insl
push
stos
or
mov
gs
xchg
jecxz
mov
scas
ss
ja
push
xchg
sbb
inc
aas
cmp
inc
subl
ljmp
jb
cmp
mov
jae
lock
shrb
fsub
call
call
push
movsb
dec
adc
sbb
sti
scas
mov
mov
aad
cmp
add
jb
filds
jg
outsl
or
xchg
dec
cmp
fwait
push
lret
sbb
stos
push
or
movsl
mov
mov
pop
mov
push
pop
test
mov
xlat
pop
or
inc
clc
sub
js
adc
sub
test
jecxz
xor
xor
rclb
mov
int3
xor
jge
ret
lock
dec
shrl
std
cmpsl
inc
shr
dec
mov
mov
push
int3
outsb
imul
pop
xor
or
xchg
cmp
clc
daa
jno,pn
imul
push
mov
dec
mov
sti
xchg
cmp
ljmp
pop
dec
in
cmp
pop
daa
sub
cmp
or
xchg
cmp
paddb
push
sbb
xchg
loopne
repnz
push
sti
pop
adc
stos
xchg
in
daa
popf
shl
dec
xor
cli
inc
int
inc
insb
xor
enter
mov
arpl
mov
filds
outsb
adc
divl
add
nop
out
add
or
scas
xchg
mov
inc
sub
mov
mov
in
repz
bound
sbb
aas
push
xchg
inc
fptan
xchg
aad
dec
cmp
pminub
sbb
and
inc
fwait
jnp
sbb
outsb
xchg
filds
dec
sub
adc
jmp
pop
arpl
mov
dec
cwtl
and
inc
xchg
sub
sub
test
fstenv
or
das
cmpsb
mov
dec
cs
into
sbb
xor
inc
pop
adc
or
mov
inc
stos
insb
setb
lods
or
xchg
lret
or
shll
ret
adc
push
fsubrs
pop
shl
or
lahf
inc
sbb
push
or
dec
mov
iret
xchg
sub
cmp
insl
stos
pushf
sub
inc
aam
int
fs
fst
cmp
stos
popf
movsl
shll
cltd
out
dec
rcrl
mov
stos
fwait
xchg
adc
sub
and
adc
cltd
pushf
gs
adc
push
ljmp
movsb
sub
popf
or
or
incl
test
mov
pop
pop
xchg
jo
xchg
jo
lea
stos
int
jge
int
pop
pandn
jns
xchg
mov
pop
jno
dec
pop
add
int
mov
dec
xchg
sbb
fisttps
jae,pt
inc
jmp
mull
jbe
pop
dec
add
fbld
xor
jmp
pop
gs
sbb
popa
or
cltd
jno
xchg
fwait
mov
decb
outsb
into
ret
push
push
xchg
lock
shll
je
add
adc
mov
test
rcl
push
shl
leave
lock
mov
jne
roll
mov
mov
stos
fisttpl
decl
lods
mov
push
xchg
fsts
arpl
testl
cmpsb
adc
movsb
int
out
cmp
test
out
sub
xor
sub
jp
lods
pop
loopne
pusha
mov
push
xchg
jg
ficoml
dec
cltd
gs
test
ds
xor
stos
filds
fisttpll
sub
je
fmul
ljmp
insb
clc
mov
insb
mov
dec
stos
loop
sub
cli
aad
lcall
mov
push
mov
xchg
ret
xchg
pop
fists
xor
aaa
hlt
fnstsw
add
mov
lea
mov
cld
mov
loop
mov
push
cmp
add
loopne
inc
js
loope
shlb
sub
push
push
insl
outsl
das
cmc
popa
adc
pop
mov
add
or
jp
dec
xchg
jnp
pop
jp
add
mov
stos
mov
lret
sub
jnp
mov
mov
cvtps2pd
out
cmp
loope
imul
add
fnstcw
jl
or
arpl
mov
dec
inc
orl
out
sbb
ja
inc
lcall
sub
shr
pop
faddl
popa
scas
clc
popa
mov
mov
xchg
ret
sub
or
dec
mov
cmp
cmp
jecxz
mov
pop
sbb
pop
adc
push
test
std
mov
sbb
mov
add
push
pusha
add
mov
push
add
in
leave
icebp
aad
test
stc
mov
lahf
sbb
pop
lahf
pop
sbb
mov
jl
inc
std
push
mov
lea
fldl
fs
movl
out
jno
pop
jnp
cltd
shrl
cmpl
notl
mov
cmp
inc
std
jbe
clc
push
daa
mov
outsl
sub
aaa
cmp
mov
mov
sub
xor
sti
cli
add
int3
out
loope
stc
push
outsl
push
aam
loop,pn
xor
sbb
sarl
push
push
es
in
mov
addr16
mov
cmp
or
repnz
subl
mov
pop
cltd
scas
aad
inc
mov
add
mov
mov
sbb
fcompl
in
jb
aad
shr
push
adc
sarb
hlt
and
cmp
ds
dec
adc
pushf
es
mov
icebp
adc
lods
pop
aad
xchg
add
fbld
aas
push
jns
push
mov
mov
add
xor
movsl
jae
test
out
in
lods
mul
inc
jmp
loopne
scas
mov
jl
push
fldcw
adc
push
dec
iret
cli
pusha
lods
pusha
jmp
idiv
adc
jmp
xor
jnp
faddl
dec
or
iret
std
sub
in
sbb
fwait
sahf
bound
jp
cmc
and
movsb
xor
add
or
rcrl
jne
pop
xchg
scas
push
movsl
push
ret
stc
stos
dec
addr16
aam
pop
popf
dec
pushf
xchg
sub
sub
adcl
adc
fmull
es
in
fnstcw
dec
push
jae
and
pop
mov
loop
push
adc
sbb
stc
test
push
fstpt
push
out
incb
in
xchg
mov
cwtl
aam
inc
fwait
cmpsl
ja
leave
lret
sahf
pop
cli
mov
ljmp
xor
and
scas
cld
iret
jns
jbe
push
inc
dec
pop
leave
icebp
sahf
dec
mov
mov
aaa
imul
repnz
mov
mov
mov
jp
loopne
jno
push
mov
lret
xchg
sub
add
mov
cmp
scas
out
pop
enter
mov
loop
loop
inc
rclb
cwtl
and
aas
push
into
jne
sti
inc
mov
push
cmp
mov
sub
add
testb
add
cli
xchg
cmpsl
pop
pop
adc
push
das
xor
dec
xchg
pop
inc
pushf
stc
int3
icebp
push
cmp
jle
stos
fsts
fcomps
stos
sub
and
cltd
sub
sbb
jle
ljmp
pop
mov
xor
jns
add
xor
add
jmp
popf
loop
scas
xchg
sub
aaa
sti
adc
add
imul
lock
dec
xor
out
mov
nop
sub
lret
xor
hlt
cwtl
out
add
adc
cmpsb
sub
call
lea
and
mov
mov
cmp
mov
adc
mov
mov
enter
bnd
mov
testb
push
fistl
mov
lods
lea
mov
sbb
push
adc
cmp
add
and
sbb
adc
mov
and
and
mov
movb
jo
cwtl
stos
xor
int3
inc
out
cwtl
pop
ds
cld
lds
inc
pop
leave
aaa
rolb
adc
data16
popf
aam
dec
xchg
rep
or
push
xchg
loopne
cwtl
shlb
in
or
jmp
test
data16
mov
daa
jnp
je
out
andl
push
sbb
je
nop
ljmp
and
or
dec
lods
add
imul
xchg
insl
jmp
xchg
fninit
aad
mov
out
or
pushf
sub
xor
in
leave
pushf
fisubrl
mov
jb
enter
in
scas
cmp
adc
jmp
jnp
mov
out
test
pop
inc
cmp
mov
andl
mov
lret
out
test
loop
cli
test
sahf
sbbl
xor
mov
mov
out
cmp
notb
subb
stos
and
test
xchg
addb
lret
dec
push
add
int
mov
add
iret
lds
fldcw
xor
bound
aas
cmp
cmp
add
sbb
mov
test
jo
pushf
mov
jg
xlat
sahf
sahf
push
jl
push
pop
aam
xchg
inc
mov
xor
and
sbb
into
rcrl
out
push
mov
sbb
mov
mov
mov
inc
test
xor
pop
lahf
mov
bound
xchg
dec
ja
shl
sub
gs
aas
fadds
fcmovne
int
and
cmc
sbb
jle
mov
jo
int
fnsave
mov
stc
les
and
mov
rol
and
push
clc
ljmp
jmp
aas
pushf
sar
sbb
mulb
jae
or
adc
add
js
cmp
outsl
lret
mov
frstor
mov
mov
stc
xchg
stos
add
sub
and
dec
outsb
test
loope
jmp
sub
daa
cmp
sub
push
jbe
stos
push
imull
pop
xchg
xchg
inc
add
pusha
imul
mov
mov
dec
mov
out
pop
in
xor
das
mov
leave
dec
ret
jnp
in
mov
les
test
jl
das
jae
lods
pop
mov
xchg
or
lcall
dec
insl
mov
in
cli
sub
lods
icebp
or
mov
sti
push
loope
xchg
jmp
arpl
into
lock
mov
push
pop
inc
sbb
cli
or
or
cmp
lahf
cmp
mov
lret
pushf
out
push
das
loope
fldcw
test
and
test
sub
clc
js
clc
xor
pop
iret
outsl
xor
jl
or
mov
and
mov
add
adc
shll
leave
ret
test
divl
out
inc
lret
and
add
rolb
xchg
mov
mov
inc
xlat
loopne
test
sub
movsb
mov
jb
shrb
pop
push
test
imul
push
jmp
inc
insl
lret
xor
lahf
icebp
xchg
push
jecxz
scas
mov
mov
xchg
lock
sub
fwait
cmp
in
jle
add
in
pushf
jbe
xchg
sbb
test
fsub
pop
dec
inc
stos
xchg
insb
popf
xchg
stos
mov
jae
orb
enter
sub
pop
cli
ret
mov
mov
jl
push
jnp
inc
sti
das
pop
sbb
bound
inc
cmpsl
scas
push
in
jo
insb
ja
mov
sub
mov
pop
jl
push
pop
push
out
jl
mov
pop
imul
lock
outsb
test
ss
pop
lods
xchg
xor
inc
or
lods
insl
clc
xchg
in
dec
mov
mov
xchg
mov
scas
push
insl
cwtl
lods
pop
lods
ret
subl
inc
pusha
add
cltd
cmp
lret
mov
cld
pushf
hlt
pop
and
mov
fisttpll
xor
mov
adc
pop
fs
into
or
or
jp
nop
pop
je
mov
out
jne
pop
test
or
mov
outsb
mov
enter
call
adc
push
filds
inc
dec
int
mov
daa
jne
fbld
clc
aas
mov
jl
into
push
negl
xchg
lret
jns
lock
mov
into
loop
into
mov
mulb
repnz
add
aas
adc
pop
mov
push
dec
lret
pop
lfs
inc
pop
mov
addr16
outsl
xchg
sbb
pop
dec
ss
movsl
bound
xor
mov
adc
push
jecxz
aaa
cwtl
push
mov
out
add
fdivr
pop
outsb
imul
aaa
xor
sbb
stc
jb
lds
jbe
pop
sub
cmc
xchg
jecxz
out
inc
stos
fwait
int3
mov
add
xor
out
xchg
imul
arpl
movb
es
nop
mov
stos
mov
and
hlt
imulb
pusha
test
movsb
fisttps
cmp
mov
mov
jno
xlat
into
testb
mov
push
jl
add
mov
daa
or
sahf
fisubs
mov
scas
push
dec
inc
adc
fldcw
pop
test
cmp
iret
xchg
ss
adc
push
sbb
or
push
enter
pop
pop
pop
rorb
adc
aaa
pop
xor
mov
es
lods
sbb
jmp
insl
test
loop
mov
popa
jno
or
fwait
imul
js
popf
rclb
xchg
mov
mov
adc
mov
jnp
daa
dec
mov
movsb
sbb
mov
test
mov
clc
les
cwtl
cli
fwait
add
pusha
mov
stc
sub
insl
dec
test
in
je
push
pop
jecxz
xchg
sub
les
rcll
in
mov
cmpsl
jne
and
inc
xor
ljmp
jb
mov
jb
adc
cli
inc
cmp
cmc
or
les
loopne
test
xor
lds
cld
in
adc
push
mov
lds
or
xchg
stos
or
inc
dec
mov
lret
cmp
cmp
aad
pop
jmp
pop
push
mov
loopne
adc
es
rcll
jb
jnp
pop
xchg
mov
xor
out
mov
aaa
mov
xlat
push
mov
gs
mov
addr16
andb
dec
les
scas
lea
inc
sti
and
and
jne
push
cmpsl
andl
sub
fistpl
mov
xor
pop
xchg
or
jo
sbb
dec
xchg
mov
add
mov
mov
js
fwait
test
pop
mov
pop
pushf
dec
push
movsb
inc
jg
jle
sbb
pop
xor
push
fstps
rolb
ret
pusha
call
cmp
std
cmp
push
push
jecxz
mov
scas
fstpl
in
cmpsb
lahf
mov
jns
inc
mov
fidivrs
in
push
loopne
push
or
jle
mov
and
or
ret
les
mov
daa
int
cld
xchg
dec
mov
sarl
mov
cmp
dec
ret
and
jo
push
stos
ja
ja
mov
xchg
pop
xchg
add
mov
sub
xchg
jns
rol
push
fcmovb
sbb
enter
xor
jmp
out
insl
mov
sbb
out
aaa
cmp
pop
pop
pop
inc
movsl
push
push
dec
pop
jb
arpl
add
enter
push
lcall
jmp
insb
test
add
mov
ret
hlt
les
mov
loope
add
data16
push
or
popl
push
lahf
lea
adc
jbe
out
pushf
add
inc
ret
inc
data16
shlb
or
mov
xor
mov
jg
lcall
push
bound
sbb
xchg
or
lret
dec
arpl
sbb
lock
jno
cmp
inc
mov
fbstp
out
sbb
inc
add
into
xchg
xchg
xor
jbe
push
add
jmp
jmp
pop
xchg
arpl
mov
popa
push
stos
lds
push
and
cmpsl
mov
lahf
je
mov
cmp
mov
lret
test
cwtl
out
fnstsw
jg
sbb
pop
decl
mov
adc
mov
loop
std
pop
sub
fcmove
fprem
xlat
inc
push
gs
sti
mov
fstpt
in
pop
rorb
pop
push
mov
ds
inc
sub
cmc
mov
arpl
push
or
xor
repnz
pop
faddl
fistpll
cwtl
mov
cmp
push
push
adc
loope
lods
in
ret
xor
mov
push
jae
fmul
fsubl
cmc
pop
scas
or
fcomip
fsts
clc
push
inc
test
cld
xchg
out
or
jle
into
dec
xchg
inc
and
jnp
or
cli
loop
inc
sti
push
jo
adc
push
jmp
test
aad
icebp
and
jmp
lret
les
repz
mov
or
jne
loope
cmp
subl
or
cmp
pusha
pop
sub
xchg
loopne
fsubl
inc
lret
aas
fisttpll
xchg
sbb
mov
add
adc
mov
arpl
jae
jbe
add
mov
mov
pusha
cmpsl
out
sahf
stos
mov
dec
jmp
pop
imul
arpl
dec
addr16
inc
or
es
rcrb
dec
cmp
mov
ljmp
and
push
dec
mov
mov
stos
dec
imul
fs
push
fiaddl
mov
lods
movsb
sub
xchg
and
jl
addr16
insl
fisubs
int
loope
xor
fidivs
jmp
push
rcrl
mov
jg
in
cmc
rorb
test
xchg
test
adc
xor
mov
sub
in
adc
or
mov
push
int3
fnstsw
cmp
mov
dec
aad
mov
pusha
mov
subl
js
mov
mov
mov
aaa
sahf
adc
movd
sub
icebp
sbb
fnstenv
mov
ljmp
jp
andb
xchg
jo
loop
out
in
leave
sarl
sbb
pop
sarb
popf
lea
mov
xor
xor
pop
movsl
jge
cmp
orb
rclb
in
and
cmp
imulb
adc
xor
cmp
and
ss
jb
psrlw
inc
test
push
dec
scas
jmp
add
xor
mov
mov
mov
test
iret
inc
sub
sbbl
scas
ljmp
rcl
jp
jnp
sub
mov
jo
push
les
js
adc
mov
pushf
jp
movsb
mov
push
std
or
sbb
jo
subl
cmpsb
fs
or
adc
dec
xchg
xchg
mov
gs
add
push
mov
jp
lea
xchg
outsb
shl
leave
je
pop
pushf
fs
mov
int3
dec
stos
xlat
test
adc
loope
xor
scas
in
add
pop
xor
in
push
int
das
sub
outsb
jl
insl
cmp
pusha
mov
cmpsb
xor
push
pop
cwtl
jl
dec
or
jbe
pushf
push
push
out
je
pop
test
rcrb
imul
jmp
pop
jne
sub
popf
dec
cld
bound
fsts
add
fidivs
in
cmpsl
in
sar
data16
clc
iret
insb
and
insb
sbb
mov
cs
aaa
mov
xchg
outsb
inc
vorps
cmp
add
popa
xor
mov
adc
scas
pop
pop
add
imul
or
std
in
adc
ret
mov
add
sub
push
loop
shll
jmp
es
dec
xlat
les
fs
push
mov
and
push
nop
jb
sbb
sub
push
aad
add
sbb
mov
xchg
pop
dec
jae
aaa
cmpsl
mov
jae
mov
adc
cmpsb
scas
xchg
std
xchg
mov
lds
cld
inc
sbb
pop
push
adc
jmp
rclb
ljmp
sub
dec
loope
adc
mov
insb
sar
repnz
cltd
lds
aaa
push
lock
sub
out
mov
arpl
outsl
cmp
or
push
push
mov
cmp
fbld
movsb
js
repz
mov
mov
ljmp
push
mov
pop
scas
or
jno
ljmp
notl
loop
mov
push
add
loop
loop
xchg
popf
xor
pop
lcall
ljmp
lea
shlb
sbb
cmp
out
call
lock
pop
pusha
test
and
push
into
add
hlt
hlt
lock
inc
cmp
push
jg
in
and
clc
and
mov
fiaddl
mov
push
add
hlt
imul
jle
outsb
inc
mov
mov
fiaddl
loope
daa
fcmovnbe
cmpsb
pop
pop
enter
cmp
imul
jecxz
push
fiaddl
es
xor
cli
lods
or
lods
inc
lock
push
std
inc
mov
enter
or
bound
inc
lds
sub
and
adc
out
push
mov
pop
cmpsl
movsl
xorl
jns
data16
cmc
cmp
mov
xor
lods
aas
andl
xor
add
add
sbb
cmp
ret
add
jp
mov
xor
mov
mov
sahf
dec
in
jge
dec
cwtl
leave
cmp
mov
stc
cmpsb
andl
ljmp
inc
out
and
repnz
lods
sbb
cmpb
inc
insl
out
aas
or
daa
pushf
jp
cmp
and
push
sub
movsb
dec
cs
mov
lds
adc
pop
jecxz
mov
mov
push
enter
or
cmp
mov
test
sub
pop
sahf
lahf
loopne
rclb
imul
pop
mov
inc
add
cltd
pop
test
call
lods
push
push
in
dec
movsl
pop
mov
mov
pop
or
cmpsb
call
mov
push
test
rolb
mov
cltd
mov
mov
pop
and
or
adc
add
cmpsl
pop
fidivrl
rclb
xchg
cld
lods
jae
loope
out
dec
incl
fwait
fwait
les
hlt
insl
xchg
inc
inc
roll
int
lcall
add
out
adc
ss
ja
jmp
pop
xlat
push
outsb
cld
mov
cmp
int
add
mov
fs
das
sub
ret
jle
fwait
mov
pusha
inc
xchg
sub
lret
jecxz
divb
sub
movsb
loope
add
sbbb
or
and
inc
movsb
adc
xchg
dec
mov
push
jbe
adc
pop
xlat
sub
hlt
stos
push
jae
repnz
dec
cmp
and
rcrl
sbb
push
inc
pop
pop
pop
imul
inc
sbb
add
mov
addr16
out
clc
sub
push
out
imul
jg
push
cmpsb
sbb
imul
popa
lds
daa
shll
int3
fsubrl
out
mov
in
mov
inc
popf
adc
inc
imul
fistpll
sbb
adc
inc
sub
cmc
sub
inc
in
mov
rorl
fnstsw
xchg
ljmp
sub
std
jae
movsb
adc
mov
inc
xorb
push
sbb
push
push
inc
jo
and
xlat
or
imul
and
cwtl
jb
lcall
imul
sar
cs
call
jmp
inc
rcr
sbb
lods
push
lds
scas
jbe
push
jnp
cmp
loop
outsb
lcall
and
dec
in
push
inc
mov
add
mov
scas
aam
pop
or
inc
inc
mov
stos
push
pop
pop
loop
push
jno
jecxz
enter
pop
aas
jnp
test
mov
int3
inc
out
inc
cmp
into
cs
dec
dec
lods
into
xor
cmp
lahf
cmp
pusha
stos
lret
shrl
sbbb
lcallw
bnd
xor
fwait
repz
cmp
pop
add
cmpsl
inc
cmpsb
sub
or
loope
mov
lret
testb
and
int
data16
inc
push
dec
mov
lret
pusha
filds
leave
or
aam
and
andb
sub
jae
pop
mov
icebp
push
and
fidivrs
push
fmull
ss
not
mov
jl
pop
out
jae
addr16
out
inc
lds
or
or
mov
movsl
aas
addr16
fimuls
mov
jb
sub
ja
pusha
ds
push
jnp
mov
and
inc
jge
inc
lret
mov
add
jb
inc
loop
mov
in
sub
mov
out
adc
mov
in
jne
dec
nop
or
jnp
outsl
lods
mov
rol
and
mov
sahf
mov
stc
outsl
stos
push
imul
add
ljmp
jg
popf
xor
loopne
push
adc
fucom
loop
and
jecxz
sub
std
or
pop
inc
outsl
or
mov
cmc
pop
fdivrs
ret
jl
aam
std
xlat
lahf
je
ds
jns
mulb
inc
rcrb
push
pop
sub
sub
gs
scas
sti
jo
mov
xor
adc
mov
daa
jg
fisttpll
call
mov
adc
mov
sti
jo
inc
and
js
lcall
lods
dec
mov
sbb
dec
sub
aad
call
cmp
arpl
mov
aad
mov
xor
rcr
kandw
jbe
sahf
fmulp
ret
add
xchg
cmpl
shlb
mov
xchg
cwtl
aas
fldl
jg
into
ds
stc
xchg
out
aam
out
mov
stc
loop,pt
cmp
mov
or
lock
mov
flds
out
pop
js
mov
dec
dec
pusha
outsb
clc
in
mov
in
mov
test
inc
test
inc
loopne
jg
jge
or
and
push
sti
aam
sbb
or
stos
jge
lcall
cmp
xor
in
int
shrb
out
hlt
cltd
pop
clc
xchg
dec
imul
scas
pusha
popf
clc
dec
pop
les
mov
andl
add
push
mov
ss
iret
fwait
cli
cmp
pop
je
xchg
cs
push
xchg
add
xor
aas
mov
adc
cmpl
stos
pop
std
mov
ret
rolb
jge
sub
xor
dec
enter
pusha
inc
adcb
xchg
mov
data16
into
lret
jl
test
push
cmp
adc
rcll
or
cld
mov
xchg
push
cltd
adc
inc
lods
push
cli
pushf
add
iret
call
leave
and
mov
adc
les
fsubs
rcrb
gs
sub
cli
into
insb
dec
mov
pop
adc
fisttps
mov
dec
sbb
cmc
leave
jp
loop
int3
in
jnp
adc
dec
icebp
xor
sbb
ret
mov
add
scas
imul
jnp
outsb
xlat
dec
fisubs
inc
jno
cmp
jo
cmp
sub
stc
lret
pop
iret
repz
imul
insb
aaa
inc
push
sbb
inc
stc
adcl
inc
shlb
dec
mov
jg
dec
dec
fwait
mov
sahf
pop
dec
frstor
pusha
xchg
out
dec
mov
dec
je
mov
dec
adc
add
push
sbb
jg
sub
pop
jmp
sbb
sbb
and
fsubrl
sbb
leave
add
inc
cld
fnstcw
std
and
xor
xchg
out
mov
xchg
mov
adc
mov
enter
in
outsb
inc
loop
pop
mov
mov
add
sbb
je
cwtl
mov
sbb
in
pop
dec
mov
jae
pop
xchg
fs
or
stos
sbb
mov
jge
or
mov
sbb
xchg
lea
jne
js
and
fisubrs
divb
je
xlat
test
push
sub
cmpl
in
mov
mov
cmp
clc
loop
sbbl
mov
jecxz
fs
mov
xor
aas
cmpsl
sub
cli
outsb
ds
dec
pusha
lahf
push
mov
subb
or
ja
mov
inc
cld
aam
movsl
mov
insb
pop
mov
subl
inc
out
lock
sub
fwait
add
lret
inc
or
fimuls
jae
mov
dec
icebp
cmp
jnp
xchg
adc
rol
data16
adc
repnz
mov
enter
push
jns
cltd
xchg
pushf
cld
cmp
movsl
dec
mov
pop
imul
xchg
push
push
subb
pop
push
jp
or
shlb
jne
inc
movl
rcll
or
test
dec
bound
imul
xor
mov
test
imul
or
adc
xor
mov
and
add
dec
sub
mov
cld
ja
lahf
outsb
fstpl
add
push
arpl
and
dec
lea
movsb
cmc
xchg
jbe
out
mov
xchg
add
test
mov
dec
in
inc
cwtl
push
pop
mov
bound
ret
out
mov
sub
and
movsb
mov
inc
arpl
cld
xchg
sub
js
enterw
push
test
cli
push
scas
xor
mov
cltd
pop
mov
cmp
and
mov
mov
sbb
jp
es
and
in
inc
pop
in
sub
into
shl
in
push
popa
add
scas
fimull
call
mov
dec
and
jmp
lahf
pop
inc
push
out
jnp
pop
lahf
xchg
xchg
xchg
or
cmp
imul
stc
insb
cmc
pop
mov
or
mov
in
in
iret
or
sub
pushf
push
sub
daa
cmp
outsb
or
pop
cmp
push
subb
mov
xchg
sub
aaa
loopne
fs
cs
notb
outsl
cmc
fst
mov
mov
jb
mov
sbb
sub
jb
insl
sbb
dec
pop
jecxz
inc
jmp
imul
jnp
stos
and
dec
fisttpll
sahf
test
adc
push
repz
and
js
jne
notb
mov
or
icebp
mov
insb
cmp
dec
sbb
out
leave
dec
fs
inc
mov
mov
mov
fbld
jne
mov
shrb
stos
lods
test
sub
lahf
int3
inc
outsl
mov
test
fcmovu
out
jmp
lods
fs
imul
pop
fdecstp
push
popa
adc
fwait
cmpsb
mov
sbb
mov
jge
or
outsb
mov
aad
outsl
inc
cltd
les
dec
out
push
pop
rcll
push
sti
or
adcb
lods
lret
and
pop
lock
mov
and
ljmp
adc
call
out
push
outsl
mov
xor
cld
push
sbb
xchg
mov
mov
lcall
pop
ss
push
mov
popa
xchg
mov
fiaddl
adc
mov
sub
push
js
push
and
lea
cmp
insb
aaa
cmp
xchg
xor
into
cld
jle
iret
adc
pop
cmpb
mov
sub
daa
adc
adcb
add
sbb
xchg
push
adc
pop
rolb
adc
jmp
scas
movl
lcall
and
std
repnz
mov
mov
xor
push
or
stc
jmp
adc
xchg
xchg
xchg
adc
lcall
cpuid
push
add
dec
aas
lret
or
popf
mov
xchg
repnz
shrb
add
dec
pop
push
fisubrs
fwait
sub
cmc
fldpi
ret
out
sbb
ja
mov
or
pop
out
les
outsb
xchg
aad
aaa
pushl
push
mov
das
or
enter
fcmovnu
test
stos
push
hlt
xchg
popf
sub
aas
and
push
cwtl
jno
aad
pop
rcrl
pop
fs
mov
mov
pop
sti
sub
push
mov
stos
icebp
cmp
sub
addb
cmp
ljmp
pop
lcall
js
xchg
mov
jle
repnz
jb
test
not
sub
and
into
loope
pop
mov
stc
sbb
sbb
pushf
icebp
and
int
sbb
sbb
cmp
inc
adc
xor
xchg
ss
push
test
into
mov
clc
sbb
movsb
sub
sbb
adc
xchg
jno
scas
add
inc
cli
pop
pusha
sub
jl
and
clc
jne
mov
hlt
fdivrp
mov
es
adc
aam
mov
xchg
cmp
int
sbb
stc
fcomps
or
lahf
mov
mov
aas
fcoms
subl
in
adc
push
jg
sbb
add
adc
pop
in
push
popa
or
adc
and
icebp
adc
xchg
or
jl
and
add
stc
shlb
stc
fimull
jno
cmpb
fldl
cmpsb
xchg
xchg
add
mov
in
lock
sti
stc
pop
fmull
pop
sahf
push
mov
loop
daa
xor
pusha
xchg
sbb
push
pop
push
add
sbb
sbb
in
arpl
lock
jb
or
pop
cs
ret
repz
cmp
inc
push
push
das
add
stc
icebp
fs
xor
jb
lds
mov
leave
xchg
mov
push
mov
dec
push
outsl
cmc
mov
jge
inc
cld
add
jge
pop
jbe
jo
rcr
jo
push
jge
mov
nop
in
pushf
jmp
test
std
cmp
shrb
pop
inc
sbb
je
popf
daa
clc
sub
loopne
sub
lods
add
cmp
cld
push
jge
je
jbe
inc
xchg
sub
inc
leave
mov
jno,pt
jnp
pusha
mov
mov
mov
lea
aad
loop
xchg
cltd
jne
push
popa
mov
cmp
mov
pop
and
jecxz
push
inc
lcall
or
arpl
cmpsb
leave
sbb
add
jmp
jecxz
push
mov
rcrb
mov
call
mov
hlt
sub
imul
int3
fstps
fs
xchg
mov
push
cmp
not
orl
mov
insb
ja
pop
sub
inc
cli
fcom
std
iret
dec
dec
push
out
push
pusha
push
add
inc
pop
pushf
fsubl
addb
jg
xchg
jnp
jne
sti
out
int3
leave
or
mov
jmp
gs
icebp
test
popl
lcall
pop
cmpsl
shll
negl
stc
xchg
mov
sub
and
add
inc
jo
out
subl
xor
sbb
rol
stos
jb
stos
outsl
rcl
cli
int3
and
xor
stos
jle
cltd
xchg
ljmp
jb
sbb
pop
mov
icebp
es
mov
sbb
xor
pop
sbb
pop
addr16
xor
add
sub
pop
and
or
pop
loopne
leave
clc
mov
mov
xchg
mov
pop
or
ja
inc
adc
dec
scas
or
push
adc
push
xchg
push
addr16
arpl
cwtl
xchg
cltd
lcall
sub
sbb
jnp
sub
dec
repnz
or
pop
fistps
test
stc
push
and
hlt
mov
add
mov
inc
shl
aas
adc
and
in
push
sti
cmc
jae
mov
sbb
or
out
inc
or
pushf
inc
mov
or
jmp
clc
cwtl
dec
adc
stos
cltd
lock
fdivrl
mov
dec
arpl
movsl
lock
dec
loop
repz
in
pop
or
sbb
or
mov
xor
les
fcomps
sub
fsub
xchg
adc
std
mov
inc
sbb
mov
jns
push
sbb
push
test
pop
dec
and
push
addl
xchg
cmp
cmp
mov
mov
popf
ror
cmpsl
sub
mov
mov
cmc
sar
pop
xchg
into
and
push
sti
pushf
cmp
repnz
das
jl
dec
dec
notb
fsubs
jns
cmp
fsubrl
sub
lock
and
std
mov
cmpsb
push
sbb
fs
mov
pop
jns
mov
call
jbe
test
jmp
popf
dec
cltd
sub
push
rolb
push
cmpsl
add
or
dec
je
add
test
add
clc
adc
pop
enter
adc
fdivrs
inc
enter
mov
xorb
and
push
sub
jge
fucomp
out
lea
mov
stc
mov
test
sarl
aas
jnp
inc
jl
xchg
dec
lods
rclb
xor
pop
dec
jno
popa
cwtl
aam
mov
xchg
out
sti
int
mov
fstl
mov
mov
fmuls
push
insb
aas
xchg
ljmp
stc
mov
mov
stos
pop
cmc
cli
adc
mov
mov
shll
mov
rorl
movsb
add
jb
inc
je
repnz
outsl
cmp
pop
mov
sbb
popa
sub
cmp
sbb
mov
scas
data16
sbb
or
sbb
in
push
xlat
std
popf
test
das
fcomip
mov
test
loop
cmc
lret
test
xchg
test
jg
xchg
das
or
insb
lock
add
mov
xchg
pop
or
adc
fnstsw
enter
cmp
mov
push
dec
push
sbb
pop
lfs
pop
mov
push
jl
sbb
ds
aas
incl
rol
sub
test
fcoms
lcall
jmp
pop
ds
jmp
pop
mov
ret
dec
mov
push
push
lcall
iret
outsb
xor
xlat
mov
stos
popl
add
inc
cs
testl
je
xchg
das
inc
gs
cwtl
dec
shll
dec
sti
lret
push
and
push
cmp
aas
xor
cli
xchg
test
paddsw
gs
mov
sub
into
jg
repnz
loop
xlat
dec
and
imul
mov
inc
iret
ljmp
adc
jecxz
je
sarb
jmp
sub
es
aaa
push
bound
outsb
sarl
out
call
pop
outsl
and
push
stos
pushl
in
cmp
hlt
scas
push
jo
xchg
and
pop
mov
enter
mov
and
or
push
ljmp
stc
pop
push
repz
insl
nop
jge
fmull
sti
cs
out
sub
lods
adc
mov
rolb
jb
adc
enter
cld
pushf
sbb
sub
mov
push
jo
lods
shr
and
inc
iret
cltd
sahf
pop
cwtl
and
pop
push
cld
xchg
mov
mov
movsb
rclb
gs
popa
mov
hlt
ja
mov
and
int3
cmp
lret
xchg
mov
jp
adc
add
sbb
sahf
dec
fwait
sahf
test
pop
adc
bound
jle
sub
out
fisttpl
push
mov
mov
fisttpll
das
pop
loop
shll
das
jne
xlat
out
iret
inc
push
jp
arpl
and
mov
fnstcw
ss
movsl
fdivl
popf
mov
mov
xchg
or
orb
insb
outsl
into
es
pushf
rcrb
jno
and
repnz
xchg
jne
sub
mov
sbb
repz
fsubrs
dec
std
mov
lea
mov
repnz
or
loop
shrb
push
scas
ret
out
faddl
call
jge
repz
or
xchg
iret
mov
scas
jg
out
int3
mov
adcb
pop
mov
int
mov
je
mov
xor
mov
std
ret
add
neg
dec
cmpsl
push
ret
adc
pop
jmp
dec
mov
jle
sbb
or
adc
jmp
sti
jl
fdivrl
mov
push
push
lahf
aas
insb
aam
and
stos
sub
rcl
daa
inc
loope
test
rcr
aad
out
cmp
pop
sahf
push
int
adc
push
das
faddp
je
icebp
sub
mov
pop
pop
cmpsl
mov
testb
out
stos
inc
mov
lods
sub
cmpsb
sbb
or
mov
jbe
stc
lods
cmp
push
jp
pop
pop
cli
sub
ret
nop
int
mov
pop
lock
adc
xchg
outsl
inc
cwtl
cmpsl
dec
dec
adc
rcrb
scas
pop
add
xchg
dec
jle
xchg
mov
outsl
xor
test
push
pop
xor
ror
sbb
xchg
lods
mov
xchg
call
mov
jnp
xchg
nop
paddusw
inc
js
push
lods
pop
negb
jnp
movhlps
mov
mov
adc
xor
lea
loopne
lods
jne
inc
aaa
mov
shll
xorb
inc
mov
xor
xchg
adc
lock
out
push
or
inc
aad
push
pop
rcrb
or
jae
dec
int
pop
sbb
mov
aaa
mov
lea
and
add
sti
pop
shl
adc
mov
cs
out
iret
cmp
std
movl
dec
cltd
adc
inc
testl
cmpsb
push
lcall
pop
and
add
xchg
shrb
jae
insb
testb
cld
fildl
xchg
iret
sbb
or
dec
int3
xchg
daa
faddl
push
jno
ficomps
stos
mov
neg
lds
out
dec
movsb
clc
out
cmpsb
les
push
cmp
mov
pop
jmp
cwtl
xor
pop
daa
cld
sbb
dec
mov
mov
aam
mov
mov
movsl
add
mov
sbb
shll
xchg
scas
enter
hlt
push
daa
pusha
dec
cltd
clc
inc
mulb
hlt
xor
out
dec
jae
aaa
idivb
xchg
mov
push
push
sbb
pop
xor
scas
cmpb
mov
sub
addr16
xchg
jge
jl
hlt
jb
cmp
xchg
sbb
imul
cld
xchg
js
icebp
insl
cmp
scas
test
es
imul
repz
push
jge
pop
ds
mov
aaa
xchg
add
in
stos
or
pop
call
cld
xor
cmp
test
jge
daa
inc
xchg
cltd
cs
sbb
mov
movsl
sub
cmpsl
popa
push
jmp
or
cmpsb
mov
repnz
pop
jb
dec
out
xchg
les
sti
inc
jmp
mov
out
push
mov
in
xor
les
xor
test
fucompp
pop
lods
mov
inc
mov
dec
xchg
lcall
test
fbld
in
in
inc
mov
sub
add
inc
jns
lds
outsl
fsubs
inc
popa
sti
pop
in
js
pop
dec
mov
repnz
movsb
testb
push
dec
sarl
dec
push
xorb
mov
add
stc
std
int3
les
das
cmp
dec
jl
add
in
cmpsl
repnz
ret
sub
and
sub
iret
or
dec
push
inc
mov
std
xor
or
cmp
jne
add
or
jbe
jg
mov
inc
mov
pop
in
ljmp
or
stos
xchg
fldenv
cmp
ret
adc
cmp
cmp
xchg
in
push
fdivr
push
loopne
stos
aas
repnz
cmc
fimull
cmp
cs
repnz
ficomps
fstpt
pop
xchg
bound
jge
adc
insl
lea
or
adc
sti
add
daa
push
dec
cmpsb
sti
arpl
imul
jp
dec
cld
fcoms
rcrb
xchg
loop
aaa
and
xor
mov
inc
jle
xor
or
dec
hlt
sbbb
jbe
mov
sbb
sub
sbb
inc
xchg
lret
fdivl
clc
push
mov
mov
jecxz
or
dec
and
xchg
jae
jmp
push
jg
hlt
notl
clc
adc
fs
xchg
scas
in
imul
mov
rol
fwait
pusha
cmc
pop
jg
mov
cmc
jnp
xor
arpl
jg
out
shll
lcall
and
mov
pop
rcrl
sub
xor
pop
adc
jae
stos
je
sub
cmp
dec
or
and
mov
dec
sub
push
push
add
push
lahf
loop
sahf
data16
in
or
push
jb
xchg
fidivl
pop
mov
xchg
popf
dec
insb
ljmp
dec
push
test
imull
aad
rol
xchg
mov
push
pop
jg
call
testl
mov
les
adc
dec
inc
mov
and
cltd
es
cmp
cld
call
jp
enter
xor
mov
or
xor
cwtl
and
mull
push
in
push
push
imul
sbb
xchg
mov
jge
ret
std
out
gs
inc
jns
jle
add
fcomi
outsl
mov
jle
cmc
add
sbb
cwtl
cmpsb
cmpsl
icebp
cli
pop
push
mov
mov
sbb
add
mov
push
xchg
cmpsb
lods
jle
outsb
jmp
mov
pop
push
shll
mov
arpl
insb
lock
aas
xor
fidivs
cmpsb
gs
test
mov
lret
jne
mov
and
sub
push
sbb
pop
daa
out
add
push
sub
ss
mov
int3
cmp
sub
push
xchg
aad
xchg
sbb
dec
ss
js
and
into
inc
and
xchg
divb
and
ficoms
icebp
bound
je
sbb
mov
movsl
stc
dec
inc
orl
data16
or
repnz
sbb
call
xor
rclb
js
and
xchg
aaa
mov
jno
or
mov
push
test
hlt
lret
mov
add
xor
jmp
ss
leave
cmpb
repnz
into
ret
xor
addr16
rep
inc
pop
add
cmp
push
inc
jne
gs
shl
or
and
add
jnp
xchg
mov
pop
or
adc
inc
shll
cld
adc
sbb
cmp
stos
cmp
push
cmp
rclb
cmpb
xor
sub
push
jl
popf
adc
mov
xchg
les
rcl
out
inc
inc
pop
ss
rcrl
inc
xor
std
test
in
nop
stos
xchg
inc
outsb
std
ret
arpl
out
cli
ljmp
hlt
push
mov
jae
mov
into
dec
push
jmp
pusha
movb
jmp
jno
mov
outsb
out
sbb
xchg
sbb
push
nop
sub
mov
nop
mov
cmpsl
mov
call
cwtl
cmp
sub
mov
add
repnz
push
sub
stos
cmp
dec
push
cmp
sbb
jae
mov
xchg
ret
jmp
ljmp
in
out
push
aas
or
mov
cmpsl
dec
ja
fdivl
mov
xchg
add
pop
cmp
pop
out
lcall
lahf
cmpsl
ljmp
lcall
mov
pop
mov
cmc
pop
mov
push
sbb
fwait
pop
imul
sub
ficomps
bound
in
fchs
cmpsb
leave
or
sbb
push
popf
imul
out
lock
outsl
subb
mov
jno
mov
pop
test
add
mov
sbb
add
loopne
inc
pop
out
movsb
add
pop
mov
push
lods
xchg
leave
insl
jl
insb
and
inc
into
push
pop
mov
inc
sbb
mov
mov
dec
push
insb
dec
stos
pushf
add
rorl
int
mov
fld
push
cmp
in
mov
in
jo
jle
pop
push
or
pop
pop
xchg
aad
ja
xchg
int
dec
pop
adc
cwtl
inc
pop
sahf
lahf
mov
int
test
mov
adc
xchg
pop
push
push
sub
imul
or
lock
cmp
stc
push
or
xchg
in
les
sbb
mov
lcall
mov
sub
fprem1
push
xchg
sub
notl
add
sbb
mov
push
cmp
addl
in
fldcw
mov
xchg
je
pop
movsb
jae
pop
js
add
pop
repz
cld
fldenv
fcoms
arpl
pop
or
dec
icebp
sub
inc
adc
test
into
in
rcrb
push
in
xor
mov
scas
dec
and
cltd
ds
ret
lds
inc
movsb
jp
sbb
insb
cmp
js
in
je
in
and
add
mov
test
xchg
and
rcrb
adcb
pop
dec
and
jae
cmp
cld
stos
xchg
out
jmp
add
fstpt
fwait
nop/reserved
jge
jns
call
pop
fimuls
fs
dec
in
daa
lcall
mov
addr16
lods
aaa
sbb
loope
sti
fcmove
getsec
lret
push
adc
inc
add
je
popf
sub
dec
dec
inc
jnp
jl
xchg
sbb
push
mov
aad
jo
mov
int
iret
xchg
pop
incb
xor
inc
pop
xchg
popa
push
scas
cld
test
dec
loope
xchg
jns
pushf
mov
int
popl
push
jns
xor
gs
lret
sub
add
pop
xchg
hlt
mov
negb
inc
bound
lahf
outsl
or
cmp
adc
cltd
inc
mov
leave
lret
int3
adc
pushf
lods
lods
push
cmpsb
loop
sti
jp
push
cmp
ret
and
fisubrs
inc
out
jnp
sbb
adc
cwtl
test
cld
jle
mov
popa
jae
or
repnz
add
sbb
arpl
insw
pop
mov
fstpt
movsl
imul
rcl
nop
push
arpl
jnp
addr16
xlat
call
inc
mov
sar
in
jno
inc
test
adc
pop
mov
mov
jmp
adc
data16
pop
xor
jecxz
dec
rorl
xor
sar
jns
loopne
fistpll
mov
pop
and
ret
icebp
xchg
mov
jns
inc
aas
jne
cmp
test
and
cmp
aas
dec
hlt
setg
fldenv
flds
cli
push
jo
aad
jecxz
xor
in
xor
insl
rcll
gs
inc
fildll
push
insb
popf
ljmp
add
arpl
sub
fmuls
repnz
inc
xor
movsl
xor
gs
cmpsb
jnp
pushw
jbe
andb
jo
add
xchg
mov
movsb
ja
xor
fdivrl
adc
xorl
or
jl
repz
add
mov
xchg
mov
divl
mov
or
jle
xor
pop
mov
jae
idiv
and
push
neg
mov
ficompl
sub
sbb
cmpsl
mov
inc
mov
lock
sub
dec
jl
and
and
repz
or
inc
inc
rcrb
inc
sub
jl
dec
adc
push
jge
inc
dec
jge
sarl
mov
sti
pop
mov
mov
and
das
movsl
push
repz
stos
add
dec
insl
add
add
push
mov
sahf
push
aaa
loopne
push
stos
fmull
jl
addb
xchg
into
inc
lds
and
xchg
and
adc
popf
dec
push
jp
add
in
aad
mul
psubb
dec
mov
pop
mov
rcl
xor
lret
ret
loope
sahf
mov
jno
pop
inc
and
cmp
pop
and
mov
test
dec
dec
jle
out
push
pop
cmp
addl
cmpb
arpl
mov
push
test
je
arpl
cmp
loop
lahf
cmp
push
xchg
push
imull
and
std
mov
dec
jg
mov
and
div
arpl
int3
ret
fstpl
std
addl
sub
mov
adc
test
out
rorl
in
notl
lods
pop
mov
test
out
dec
adc
shll
outsb
inc
in
out
rol
jge
subl
lahf
enter
xchg
outsb
in
bnd
cli
gs
ljmp
aam
jae
jo
call
xchg
add
adc
dec
ds
cmp
js
adc
and
sbb
mov
xchg
daa
loopne
xchg
and
mov
push
inc
pop
aaa
mov
out
mov
sub
mov
lea
xor
adc
mov
push
xchg
jnp
mov
and
sub
int3
aad
je
xchg
mull
inc
mov
adc
jbe
lcall
ds
add
roll
dec
mov
mov
push
fidivl
popa
jmp
fmul
fmuls
inc
out
mov
jnp
arpl
jns
and
rcr
push
aad
sub
arpl
shrb
xchg
inc
sub
mov
cltd
rcr
call
fdivrs
add
xchg
cmpsb
push
sbb
loopne
adc
adc
add
ja
and
or
and
in
push
jns
aas
mov
or
leave
cli
push
outsl
push
and
in
outsl
adcb
push
cmpsl
xchg
outsl
adc
stos
cmp
subl
or
aas
mov
cli
xor
cs
std
mov
add
mov
xor
dec
sarb
xor
jl
gs
or
xor
sarb
lahf
mov
or
mov
aas
xor
mov
cmp
leave
loopne
push
xor
xor
mov
call
or
adc
xor
cli
mov
out
lret
fwait
inc
sahf
push
inc
xchg
lcall
sbb
stos
ds
sbb
arpl
shll
sahf
mov
iret
shr
scas
ja
pop
negl
scas
sub
outsb
test
cltd
mov
sbb
sbb
dec
push
scas
cmc
pop
jle
mov
mov
mov
and
push
cmp
cmp
loope
loopne
jb
mov
inc
jbe
leave
or
inc
mov
xchg
pop
out
dec
sbb
sub
aaa
rcll
jns
push
into
pop
loopne
loop
js
loopne
je
cmp
jg
or
push
fnstcw
adc
jno
pushf
mov
int3
pop
out
cmc
jbe
cmp
test
jg
push
pop
lds
xchg
sti
test
stos
xchg
in
jnp
push
pop
mov
sbb
in
xchg
fcomps
and
ds
inc
mov
jb
insb
incb
inc
mov
mov
in
pop
daa
mov
jne
adc
xor
stc
dec
pop
fisttps
jle
sbb
and
lret
or
aas
pop
xchg
and
push
push
std
xlat
mov
fsubr
xchg
dec
sahf
xchg
sti
adc
cmp
pop
fs
mov
int3
xchg
repz
scas
and
inc
lret
jg
int
push
sti
arpl
pusha
fbstp
lods
mov
fwait
scas
cmpsb
adc
and
mov
pusha
imul
aam
test
out
icebp
lods
push
mov
xchg
mov
nop
shrb
sbb
add
pop
mov
jp
push
loope
int
daa
mov
mov
xlat
popa
fimuls
jbe
fdivl
xorb
or
sarl
sbb
cmpsb
fcoml
add
dec
sti
push
push
mov
std
insb
test
loope
mov
mulb
stc
lret
jae
pop
add
sbb
cmp
mov
enter
lods
aas
or
addr16
inc
mov
dec
xlat
mov
jg
leave
jle
pop
stc
fsubp
fnstsw
les
mov
jno
outsl
cmp
nop
call
add
adc
mov
push
out
testb
ret
stos
mov
ja
mov
mov
mov
xchg
inc
xchg
cmp
insl
jmp
js
lret
ljmp
call
xor
jg
pop
cltd
adc
rcll
or
mov
and
mov
aaa
xlat
lahf
xchg
mov
push
data16
sbb
sahf
sbb
mov
mov
sub
push
adc
push
cmp
or
mov
dec
jmp
call
loopne
sbb
test
cmp
inc
push
mov
imul
int3
nop
push
jnp
in
gs
iret
pop
pop
jecxz
int
jno
mov
cmp
cmpb
out
push
and
sbb
jp
scas
test
dec
push
xor
test
xchg
adcl
jp
test
xchg
lahf
mov
ss
faddl
mov
sub
push
in
xchg
popf
push
cs
stc
sub
push
into
mov
test
pop
cmp
lret
sbb
les
pop
lahf
xchg
cmpb
inc
pop
adc
jne
and
xchg
pop
or
imul
cmp
std
test
mov
mov
mov
push
repnz
inc
or
add
jl
or
pop
andl
mov
test
gs
aad
pushf
or
inc
push
mov
push
pop
or
pop
test
ret
divl
mov
adc
jl
xchg
into
insl
int3
xchg
and
inc
pinsrw
sbb
cmp
cmc
inc
mov
cli
test
aas
dec
add
pop
sbb
fsubr
dec
jnp
cmp
test
jnp
imull
test
inc
adc
mov
fwait
push
cmp
mov
lds
fbld
pop
test
mov
or
das
lds
and
rcl
fldenv
int3
imul
scas
sbb
push
outsb
popa
xchg
lret
cli
shll
jmp
jne
loope
jl
in
mov
enter
inc
das
cmp
jbe
sub
aad
add
in
in
sub
xchg
imul
push
or
dec
repnz
inc
mov
dec
pop
and
sbb
xor
mov
adc
cltd
js
or
pop
jmp
lahf
aaa
xor
or
lret
icebp
hlt
jb
xchg
out
repnz
imul
adc
xor
pop
or
dec
mov
adc
mov
xchg
add
sub
les
mov
aas
dec
push
sub
out
push
inc
loope
jae
or
test
pop
lock
lea
and
jnp
mov
jl
jnp
movsl
in
xchg
cmp
add
daa
cmp
xorl
sti
dec
sbb
clc
push
mov
add
inc
test
lret
js
push
add
cmc
lock
jg
cmc
scas
pop
jbe
std
sub
mov
jne
fmulp
mov
or
out
sbb
mov
out
bound
mov
cmp
cmp
mov
cmc
sbb
pushf
ja
testl
push
rcrb
stc
xor
fidivs
call
jecxz
pop
cmp
out
xchg
mov
lret
pusha
and
or
cmpsl
loop
add
vpsubsw
adc
movl
movsb
lret
and
cld
push
mov
insl
adc
pop
add
fstpl
xor
std
push
orb
inc
mov
or
pop
and
xor
sti
scas
jae
push
scas
push
and
test
and
aas
out
add
stos
mov
xchg
psubd
daa
mov
and
sub
andb
xchg
into
scas
dec
jp
rcll
loope
mov
in
pop
push
mov
add
pop
xchg
aam
mov
and
mov
popf
xchg
test
repz
sub
in
fnsave
adc
push
gs
out
repnz
lods
lea
hlt
cli
js
leave
mov
fildl
leave
adc
xor
scas
sub
arpl
mov
stos
repz
cmp
testb
cmc
pop
fs
nop
outsl
lcall
mov
fdivrs
test
pop
js
add
xchg
mov
add
mov
xor
dec
fbstp
inc
cmpsl
popl
aam
in
stos
sahf
mov
ljmp
pop
insb
inc
inc
mov
repnz
sbb
movsb
jne
dec
add
into
pop
pusha
adc
pop
push
cmp
inc
sar
int
data16
jns
movsb
inc
enter
mov
nop
js
pop
sahf
adc
inc
mov
inc
cmpsb
and
mov
andps
dec
cld
dec
aam
mov
into
cld
jno
ret
rorl
loope
push
xor
pop
xlat
stos
outsb
mov
xor
push
mov
call
lock
aaa
sbb
testl
out
xlat
pushf
push
enter
je
pop
movb
or
fwait
jmp
call
mov
jae
mov
or
cli
xchg
cmpsb
test
fsub
push
push
jmp
filds
dec
and
scas
aaa
jb
jnp
xor
rcll
sarb
iret
nop
cld
pop
iret
cmc
dec
cmpb
mov
stos
enter
push
in
jb
sbb
stc
adc
dec
add
adc
push
mov
js
fisttpl
stos
add
stos
popa
imul
jbe
outsl
pop
imul
mov
xor
ljmp
dec
cli
xchg
sahf
jno
and
jmp
adc
or
loopne
xchg
data16
je
sbb
mov
and
dec
je
into
fmul
imul
iret
fcoml
sbbl
add
mov
imul
sbbl
sbb
or
push
sub
cmp
cmpb
adc
xchg
ficoms
scas
push
daa
sbb
call
test
xchg
lcall
ret
mov
std
xor
and
jnp
icebp
test
cmp
fs
mov
repnz
bound
je
mov
mov
adc
test
mov
outsb
xchg
sub
daa
cmp
push
push
popa
xlat
inc
xchg
cmp
sti
jmp
inc
push
arpl
in
cmc
dec
pop
mov
fldcw
xchg
sub
and
movsb
inc
les
in
mov
xchg
cmc
mov
push
movsb
sub
aam
adc
in
loop
test
xchg
in
subl
xchg
lds
mov
xchg
lea
pop
cmp
inc
jmp
imul
not
inc
iret
inc
pop
mov
cmp
adc
lahf
mov
cmp
push
push
dec
xchg
push
int3
movsb
push
sub
add
cltd
inc
mov
pop
aaa
outsl
jmp
addr16
sbb
cli
pop
xchg
and
mov
xor
push
push
push
xor
cmpsb
xchg
jecxz
cwtl
jle
es
stos
dec
pop
bnd
jmp
add
mov
add
pop
push
add
ficoms
frstor
mov
jns
cmp
rcrb
xchg
xchg
aaa
imul
push
pop
es
sti
andl
fnstsw
stos
insl
int3
pop
jmp
fdivl
mov
popa
test
push
xchg
out
and
out
fs
pusha
loop
mov
shll
mov
lret
and
dec
mov
je
dec
aaa
aas
push
adc
stos
add
in
in
cmp
lods
mov
inc
mov
push
rcrl
jb
notb
push
and
lds
outsl
push
cmc
inc
mov
nop
push
cmpsb
ja
push
lret
mov
leave
sub
mov
data16
cwtl
push
xchg
or
hlt
sbbb
outsl
adc
xor
mov
movsb
loope
cld
and
clc
xor
dec
add
js
sbb
sub
cwtl
lock
insb
mov
scas
repz
rorb
mov
or
jge
dec
or
adc
incl
pop
out
cltd
sarb
icebp
push
xchg
add
pop
std
loope
mov
pop
gs
add
es
iret
int3
daa
into
pop
jns
je
push
or
jnp
dec
leave
push
bound
sub
xchg
dec
or
cltd
sarl
test
mov
fdivs
cli
mov
ss
lds
test
dec
inc
jp
xor
jle
addr16
inc
mov
mov
insl
jge
pop
or
icebp
sahf
rol
sub
pop
xchg
sub
cmp
nop
lret
jge
mov
std
lret
movsl
repz
push
mov
loope
in
xchg
aas
fcmove
int3
sti
mov
fxch
fldl
cmp
adc
xchg
addr16
outsb
jno
mov
stc
jmp
outsb
cwtl
idiv
push
or
pop
ja
push
xor
dec
jg
imul
out
inc
icebp
sbb
xchg
stos
cmovo
adc
push
cmpsb
sub
mov
jge
xor
push
insb
pop
pop
roll
add
addr16
pop
je
and
lods
icebp
lods
pop
sub
adc
dec
shrl
cmpsl
nop
or
inc
xchg
jbe
and
cmp
test
xchg
dec
xchg
jge
add
int
aad
inc
dec
adc
lock
dec
in
test
popf
out
fldt
arpl
adc
fidivrs
and
cmp
insb
push
daa
pop
push
into
xchg
out
dec
jns
cmpsb
sbbb
xchg
movsl
mov
inc
stos
and
das
push
xchg
icebp
or
xor
data16
andb
cmp
cwtl
sahf
scas
jecxz
xor
xchg
mov
adc
es
scas
sbbl
iret
sub
jae
push
icebp
mov
push
pop
repnz
push
xor
jbe
call
pop
xchg
inc
xchg
outsb
shlb
mov
push
je
xor
and
mov
jno
pop
pop
fs
in
jg
sbb
fcomi
lock
imul
das
jno
mov
stc
sub
in
movsb
pop
mov
rolb
call
sbb
addr16
call
icebp
cmp
dec
cmp
fdivrp
jb
mov
fcmovb
dec
push
jp
inc
filds
les
jl
or
mov
add
mov
cltd
dec
repz
stos
sahf
mov
sub
lods
push
adc
bnd
inc
mov
jle
pop
pop
jnp
xchg
mov
dec
in
popf
cmc
xchg
jle
sbb
dec
inc
cltd
mov
xor
jns
mov
mov
jno
outsb
rclb
movsl
fs
dec
aaa
jae
lods
inc
cld
das
xchg
mov
or
mov
aas
js
pusha
ss
in
cmp
push
stc
das
push
ja
cmp
fwait
pop
aaa
loop
fdivl
jecxz
dec
cmp
jne
cs
xlat
stos
push
xchg
mov
movl
push
mov
sub
jns
mov
mov
add
dec
in
lahf
jge
cmp
cmp
or
sub
out
inc
push
ret
add
cmp
shld
ficompl
in
mov
cli
sub
in
cmc
push
cmp
cltd
jle
imull
out
mov
xor
inc
insl
mov
xchg
ljmp
js
mov
inc
stos
hlt
jns
pushf
jno
push
push
dec
cmpsl
ret
add
sub
xor
imul
mov
fsubr
scas
xchg
int
xchg
mov
jge
enter
imul
fidivrs
cmp
mov
pop
pop
jp
inc
movsb
leave
pop
mov
ficoms
stos
scas
out
stos
fadds
pop
and
mov
cmpsb
xor
adc
cmp
imul
nop
sbb
or
mov
mov
ja
sub
out
cld
fcoms
lcall
dec
addb
lods
xchg
pusha
and
lcall
popf
lea
push
xchg
cmpb
lahf
icebp
push
cld
ret
mov
push
jmp
or
mov
test
cltd
lret
aas
push
inc
aam
call
rclb
xchg
cmp
cmpb
mov
xchg
in
clc
lock
fiaddl
or
cmp
dec
and
add
add
nop
aam
aam
jmp
test
push
dec
sub
jecxz
in
mov
ret
cs
filds
jg
test
decb
out
scas
fs
sbb
xchg
testb
push
arpl
xor
jmp
into
stos
mov
adc
pop
mov
stos
pop
inc
aad
cmpsl
movsb
imul
loope
in
insb
push
add
orl
pop
mov
es
inc
mov
add
inc
addr16
pop
dec
push
xchg
addr16
cmp
or
add
or
int3
add
pop
mov
insl
pop
int3
mov
mov
push
lcall
push
jbe
xor
inc
sbb
jg
jmp
add
mov
cmpsl
js
cli
es
mov
add
inc
loopne
rcll
popl
xor
xchg
xor
xor
jmp
mov
imul
out
js
mov
jo
es
int3
xchg
std
ds
aaa
pop
mov
enter
inc
iret
dec
or
xchg
test
jne
pop
mov
xchg
add
ss
std
cmp
cwtl
add
hlt
dec
mov
hlt
fistpl
jle
pop
xchg
jmp
shl
dec
push
jecxz
in
mov
or
mov
out
inc
xchg
sbb
stc
xchg
xor
andl
and
sub
push
dec
out
fcmovb
sub
shll
xchg
sbb
fs
addr16
mov
orb
les
rorb
sub
lea
popa
pop
ljmp
xor
fdivs
jno
pop
js
leave
test
aas
hlt
sbb
add
cwtl
stos
dec
sbb
loop
ret
shll
cli
pop
lret
push
imul
add
icebp
clc
fs
mov
bound
test
mov
and
jae
jle
and
or
push
adcb
fists
cmpsb
cmpb
pop
xchg
or
jbe
rolb
jnp
jns
sub
shrb
sahf
sti
mov
inc
das
lahf
sub
std
cmp
movsl
add
push
mov
cwtl
jno
mov
push
shrb
inc
in
stc
stc
fcmovb
sahf
cmpsb
jmp
pop
fs
aaa
repnz
dec
jl
test
into
aaa
mov
out
mov
mov
jb
lcall
push
lods
outsb
jl
sub
and
add
jbe
and
pop
gs
add
psubd
cmp
mov
aad
push
fnstcw
pop
ret
aam
xchg
dec
dec
addb
ja
test
imul
out
mov
loop
movsb
out
sub
ficoms
or
or
jb
popf
or
lods
andl
popa
enter
jo
and
adc
push
outsl
dec
ret
sub
gs
inc
je
scas
mov
pop
xchg
loop
test
aam
push
sub
push
insl
sbb
mov
outsb
mov
mov
pop
es
mov
jmp
iret
pop
sbb
cmp
mov
jecxz
js
xchg
or
adc
sub
loope
lea
xlat
pushf
je
sbb
inc
stos
jno
xchg
mov
pop
dec
jle
add
pop
sub
in
jge
idiv
inc
mov
imul
add
xchg
lds
mov
push
pop
stc
icebp
iret
mov
add
mov
jp
test
add
sub
xchg
add
push
inc
cmp
sbb
inc
lods
icebp
daa
mov
push
lods
push
sub
mov
pusha
push
call
lahf
pop
out
cmp
cli
movsl
mov
pushf
inc
gs
ret
hlt
jg
dec
test
sub
daa
mov
or
lods
sub
add
enter
mov
repz
fucomi
test
je
or
addr16
mov
pop
xorb
pop
mov
and
pop
jmp
lret
push
in
pop
adc
cmp
test
in
sahf
cld
pop
push
cmp
enter
mov
out
xchg
lods
jp
icebp
push
fsub
fcmovnb
cmp
inc
or
or
test
xchg
xor
mov
aad
mov
test
add
jge
xor
ret
mov
add
mov
dec
jae
fwait
in
subl
ret
insl
add
cmpsl
mov
jecxz
nop
sarb
in
jle
add
lret
jl
jnp
int3
mov
mov
test
pop
stos
loop
daa
fwait
jno
sub
loopne
frstor
addr16
mov
or
inc
pop
adc
cwtl
dec
sti
popf
mov
movsb
imul
cmpsb
mov
in
mov
repz
cmpb
sbb
sbb
dec
sub
jns
aam
fdivr
lahf
xlat
iret
inc
inc
call
das
push
mov
or
sti
jno,pt
fwait
imulb
mov
cmp
inc
sbb
loopne
inc
lret
push
push
sbb
les
jmp
mov
shrb
xchg
and
imul
lret
xchg
xor
mov
sub
das
sti
test
sbb
sbb
stos
push
repnz
fbld
out
push
or
adc
jg
dec
jns
js
xchg
int3
inc
xchg
call
xchg
mov
cmp
sub
cwtl
mul
push
in
rol
sub
jnp
hlt
es
adc
or
outsb
dec
cmpsl
cmp
lea
mov
mov
into
jnp
repnz
sahf
jge
sbb
sbb
leave
jne
aas
pop
pop
jno
sub
xchg
icebp
mov
test
push
cli
or
lret
push
sbb
fwait
xlat
xlat
mov
scas
mov
xor
loop
test
dec
scas
stos
ss
mov
xchg
or
add
inc
rcll
push
sub
lods
popa
nop
insl
mov
or
mov
mov
dec
or
add
scas
pop
lods
outsl
scas
mov
mov
add
and
mov
or
cs
mov
popa
jg
repnz
outsl
mov
ja
ljmp
mov
outsl
jle
rolb
aaa
and
jp
bound
adcb
adc
jns
das
dec
mov
xchg
leave
out
psraw
fs
clc
dec
inc
sub
push
pop
test
scas
dec
leave
pop
inc
nop
mov
shrl
jno
pop
mov
add
sbb
push
clc
add
lahf
cmp
sarl
dec
mov
mov
add
fld
jmp
adc
stos
std
add
scas
lcall
in
pop
aaa
lcall
jo
mov
out
lds
jb
mov
std
repnz
aad
arpl
xor
jns
fnsave
cli
popa
xchg
int
or
out
xchg
inc
mov
or
adc
loop
idivb
xchg
cs
outsl
add
ret
sahf
or
mov
leave
pop
and
and
imul
sub
mov
dec
int
ljmp
jecxz
mov
dec
cli
lahf
loopne
out
jbe
dec
rcl
aaa
lea
out
jno
fucomi
or
dec
mov
test
or
mov
sub
int3
inc
fdivr
stc
call
ljmp
mov
dec
inc
inc
sti
inc
loopne
pop
xchg
xchg
rcr
fldenv
mov
sbb
cmpsl
int3
inc
cltd
outsb
add
test
sub
lods
mov
jbe
or
les
lods
cltd
mov
sti
jae
shr
cmp
sbb
repnz
jl
loopne
adc
rolb
inc
xchg
test
fists
jge
cmp
fwait
pop
and
dec
cmp
pushf
enter
cmp
mov
rcrb
shrl
sub
adc
mov
push
sub
lds
adc
hlt
sub
lods
insb
sub
jl
push
mov
push
sbb
push
add
mov
ret
add
xchg
inc
insb
adc
daa
cmpsb
xor
loopne
popf
arpl
adc
out
stos
call
ret
in
jno
cld
sub
scas
sbbl
idiv
shll
mov
mov
imul
adc
pop
or
loopne
add
mov
into
ja
inc
cmp
ds
cmp
and
cmp
pop
sbb
adc
jnp
nop
push
cld
call
dec
adc
mov
and
pop
andb
push
hlt
lods
dec
mov
rorl
cmpb
lret
mov
out
ror
cmpsl
jnp
pop
adc
stos
dec
inc
outsl
sub
adc
pop
jae
push
and
lock
sbb
pusha
add
fwait
mov
pop
dec
syscall
mov
ljmp
push
jns
stc
stos
pop
pop
jl
dec
adc
popf
int
iret
add
mov
ja
je
mov
pop
ret
daa
xor
add
mov
mov
add
mov
cmp
mov
mov
subl
mov
and
gs
lock
mov
fwait
and
xlat
mov
mov
lds
leave
mov
cs
sbb
aad
fs
jmp
imul
clc
mov
push
or
or
ja
mov
pop
add
insb
inc
pop
pop
popa
mov
jnp
push
adc
mov
pusha
mov
xor
mov
in
jns
xor
and
add
outsl
ret
or
fldt
and
sub
and
pop
xchg
or
test
movsb
lret
outsl
mov
test
fwait
stos
adc
mov
divb
sbb
loope
and
mov
cmovne
cwtl
idivl
insb
add
push
push
lea
clc
popf
lea
fisubrl
cltd
fnstsw
das
xor
inc
pop
sub
mov
mov
clc
loope
stc
xchg
popa
sbb
sbb
sti
and
and
push
icebp
dec
ret
dec
add
sarl
punpckhwd
fildl
xchg
jmp
into
xor
cld
test
stos
std
or
jp
jge
inc
cmp
sbbb
stos
mov
mov
inc
subb
arpl
xchg
out
sub
inc
inc
sbb
mov
dec
into
adc
call
sbb
into
stc
push
mov
out
dec
mov
fwait
xor
cmc
sbb
add
jo
lret
popa
or
movsb
movsl
out
arpl
adcl
mov
inc
mov
lahf
xor
in
xorb
xchg
mov
dec
ds
and
sbb
icebp
inc
and
mov
sahf
adc
adc
gs
das
sbb
push
mov
adc
and
rcrl
sbb
stc
addr16
adc
sub
pop
sbb
nop
mov
dec
pushf
fs
adc
cmp
mov
push
loope
imul
cmpsb
inc
jne
mov
mov
leave
movsb
js
js
mov
cmp
pop
sbb
je
pop
inc
in
out
enter
adc
mov
test
xchg
leave
cmpsb
mov
movsl
dec
in
inc
mov
cmp
mov
orl
mov
adc
lahf
mov
scas
push
sbb
pop
ret
xlat
add
inc
sub
in
cmp
sbb
or
imul
jmp
and
outsl
xchg
movsl
jns
ljmp
ds
cmpsl
dec
add
or
xchg
daa
add
call
sar
mov
mov
push
or
jne
inc
jns
adc
lret
aas
arpl
inc
lods
jnp
mov
mov
movsb
repz
jge
mulb
mov
xchg
adc
push
movsl
repz
stc
sbb
mov
mov
and
push
cmp
mov
xor
adc
push
aam
or
movsl
movsb
sbb
mov
sbb
nop
pop
or
jge
clc
stc
rcl
fiaddl
es
pop
or
or
add
xor
sbb
inc
inc
cltd
push
push
inc
cmp
adc
mov
ds
dec
sbb
out
mov
fistpll
adc
std
mov
pop
fs
pop
fmull
fistpll
aad
mov
fwait
aam
test
std
mov
pop
flds
xchg
enter
addl
pop
adc
hlt
dec
sub
cmp
movsb
mov
add
cmc
sub
es
movb
push
outsl
pop
insb
fstps
sub
in
adc
pop
jg
fcmovne
popa
push
add
out
cwtl
and
and
dec
pusha
shlb
mov
test
mov
shl
ret
repz
loope
and
jae
cmp
mov
shlb
das
cwtl
into
cmp
push
adc
add
inc
dec
fcom
push
push
add
ds
pushf
xor
outsl
jo
and
sub
pop
outsb
subb
cmpl
mov
cli
cmpsl
and
into
jp
aam
cmp
adc
sbb
dec
cltd
out
stos
jo
push
adc
mov
pushf
das
out
in
jb
xchg
sub
mov
mov
lock
fidivl
lea
or
lret
aam
lds
push
mov
jo
xor
stos
jno
or
movsb
mov
sbb
sbb
outsb
adc
adc
adc
pushf
mov
fdivrs
popa
insl
js
jne
cld
jne
pop
fstpt
pop
adc
push
popa
mov
jmp
mov
mov
mov
dec
pop
sub
and
mov
aam
cs
mov
out
mov
mov
add
inc
cmpsl
loope
clc
neg
add
jno
jns
or
cmp
out
jg
push
sub
enter
pop
jmp
cli
pop
add
jge
movsb
lds
insl
mov
out
cltd
jecxz
adc
inc
sbb
or
sbb
leave
or
xor
pop
xchg
insb
stc
rclb
ja
mov
repz
ja
fsubl
xor
ljmp
repz
ficoms
inc
jl
mov
insb
in
xchg
mov
sbb
inc
jecxz
jl
and
jns
ss
adc
lea
imul
clc
in
mov
int3
dec
pop
inc
mov
xchg
xchg
aas
idivl
arpl
jne
cmp
pop
fldpi
sar
dec
nop
cmp
js
adc
pop
adc
cltd
mov
pminsw
stos
stos
mov
pop
pop
pop
or
xchg
imul
xchg
insl
jno
xor
rcll
or
insb
les
rorl
fnstcw
jne
aas
fimull
cmp
mov
jmp
adc
repnz
mov
ss
sub
xor
iret
or
lds
mov
push
xchg
sub
inc
mov
jmp
loop
lods
mov
inc
cld
leave
adcb
mov
cs
xchg
and
lock
push
out
inc
aad
mov
movsl
gs
dec
inc
fildl
xor
xchg
aaa
jne
adc
push
cmpsb
push
ja
adc
cmp
lcall
dec
ficompl
add
ficoml
das
xchg
mov
rcrb
push
test
mov
push
lods
mov
push
adc
bound
pop
je
imul
dec
repnz
push
shl
pop
adc
mov
sbb
and
push
addr16
pop
dec
lock
shl
xor
adc
push
pop
dec
pop
ja
arpl
xor
jno
jo
sbb
cmp
stos
movsl
jne
insb
out
dec
ljmp
push
inc
sub
dec
and
cmp
and
cmp
adc
sub
clc
loop
dec
aaa
out
sbb
iret
adc
mov
insl
mov
sbb
roll
nop
add
push
outsb
mov
sti
mov
in
jl
xor
pop
lahf
scas
xor
jge
pop
jns
sbb
mov
mov
mov
ljmp
in
adc
test
pop
add
inc
enter
cmpsl
xor
fcmovnb
dec
xlat
divl
lods
jne
pushf
jge
push
xchg
inc
cs
mov
cld
addl
test
mov
mov
aas
xor
sahf
add
popa
xlat
sahf
xor
lods
movsl
cmpsb
sub
sbb
loop
mov
fsubrs
cmp
jo
imul
aad
cmp
dec
push
into
popf
mov
hlt
xchg
push
add
fwait
out
dec
out
cmp
in
mov
jne
and
adc
daa
fmul
pop
or
mov
xchg
xor
loop
push
sbb
xchg
jae
push
mov
xor
sbb
stos
pop
in
bound
lea
dec
sub
jl
adc
push
daa
sbb
sarb
cwtl
mov
movsb
push
pop
popa
out
iret
sub
and
or
jae
bound
sar
pop
aas
mov
popf
xchg
les
gs
insb
mov
sbbb
sub
je
push
lock
imul
loop
popa
rorb
inc
mov
xchg
inc
pop
les
add
loopne
rorb
out
and
stos
mov
rolb
sub
jl
fnstcw
sbbl
pop
push
lcall
jg
cmp
sub
jnp
or
push
call
shll
xchg
movsl
fwait
insl
addr16
mov
dec
in
in
or
cmp
in
out
movsb
jl
jmp
jle
out
add
outsl
shlb
fwait
inc
fadd
mov
dec
xlat
sbb
dec
pop
addl
mov
push
lods
les
fsubrl
jecxz
es
push
aad
pop
sub
or
push
or
pop
ja
in
xchg
scas
pop
and
filds
sbb
push
mov
push
xchg
cs
xor
imul
xchg
cltd
shlb
rcr
cmpsl
fiaddl
pop
mov
sahf
gs
jmp
sub
mov
push
loopne
lock
push
out
cltd
fisttpll
lahf
aam
or
and
in
int
rol
cwtl
or
insb
push
aam
lock
fldl
enter
mov
cmp
arpl
mov
daa
adc
enter
and
push
mov
shlb
mov
mov
fwait
or
loope
aaa
sti
fwait
andb
adc
or
mov
and
xor
cmp
dec
fdivrs
sbb
xchg
xorb
lds
pop
mov
sub
jecxz
pop
sbb
push
rcll
cld
loopne
add
push
fcmovbe
mov
insb
out
mov
xor
mov
add
inc
cmpsb
sarl
add
fs
leave
adc
xor
inc
mov
outsl
dec
push
push
and
mov
cmpsl
lds
ss
push
add
enter
add
or
jmp
out
dec
sub
xor
out
or
scas
in
dec
sbb
jg
enter
and
push
push
xor
add
sar
push
push
mov
lret
add
out
sub
dec
insl
cli
jae
arpl
add
pop
lock
cmpl
and
loope
push
test
fnstenv
pop
push
imul
out
aas
sub
xchg
mov
or
insl
jno
mov
cli
lret
aam
popa
pop
jge
in
mov
cmp
mov
sbb
or
shl
dec
jne
icebp
mov
sbb
or
arpl
xchg
dec
icebp
int
xchg
rclb
imul
xchg
mov
js
mov
mov
add
nop
shl
ss
mov
push
das
mov
inc
cli
pop
icebp
push
gs
cmc
jecxz
add
sbb
ret
sbb
sahf
or
subl
cmove
xor
fcoml
mov
dec
or
mov
idivl
mov
dec
or
andl
sbb
xchg
sbb
in
xor
pop
cmova
or
lods
outsb
rcrb
xor
jae
lahf
cmpsb
jne
inc
in
inc
mov
jbe
cwtl
test
adc
inc
sub
out
bound
popa
sbb
mov
pop
xchg
fs
sub
adc
pop
in
push
ret
push
leave
sub
mov
mov
push
inc
out
adc
mov
xor
adc
mov
inc
inc
pop
push
add
pop
pop
adcb
pop
testb
and
out
cmp
add
lds
scas
push
xchg
xchg
fucomp
repz
pop
addl
mov
repz
jne
gs
cld
sbb
fsts
xchg
pop
rcrl
js
shll
fwait
mov
scas
cmpsl
jb
imul
in
xor
mov
dec
popa
jmp
cmp
and
sbb
arpl
mov
mov
sbb
xor
in
test
out
mov
sbb
stc
aad
mov
push
notl
test
cmpsl
sbb
test
push
lods
rorl
outsl
inc
push
add
dec
lahf
popa
jno
push
iretw
sbb
jbe
sbb
arpl
lret
stos
fcmovb
sub
xor
inc
cltd
loopne
xorb
cmc
push
mov
cmpl
sbb
cltd
cmp
jo
mov
and
cmp
xchg
addb
or
stos
das
iret
fidivrs
insb
pop
out
jo
pop
fcoms
test
orb
leave
add
fdivl
arpl
add
insl
jg
mov
lds
sbb
ljmp
stos
mov
xchg
push
mov
ss
scas
fimuls
push
sar
cwtl
pop
out
xchg
and
out
mov
jle
mov
jno
int
push
enter
fdivrl
pop
mov
jge
inc
addl
lods
ret
pop
cs
mov
inc
cmp
mov
adc
in
test
or
fistps
pop
inc
stos
call
sub
je
xchg
mov
pop
lods
add
enter
jg
shrl
jno
mov
xlat
jp
push
imull
push
add
movsl
in
jbe
js
sub
lock
outsb
dec
arpl
iret
inc
loope
jb
mov
inc
mov
inc
nop
nop
jge
sbb
ret
insb
push
xor
push
push
jl
dec
ret
cmp
jge
sbb
mov
dec
cmp
clc
adc
or
sub
cmpsl
addr16
dec
add
fxch
jae
stos
daa
ss
sub
out
or
ret
add
test
shll
mov
mov
les
xchg
push
mov
xor
test
test
ret
mov
lds
jne
jbe
add
out
inc
xchg
sub
movsb
push
les
test
sub
dec
out
adc
repz
sub
mov
or
inc
aam
jge
pushf
lahf
in
ljmp
jg
xchg
inc
jno
mov
inc
cmp
inc
pop
fstpt
into
sub
sbb
sub
jae
out
or
in
ret
and
ss
test
pop
xor
notb
or
jg
loopne
imul
push
fs
jb
xchg
nop
pop
enter
dec
fadds
inc
inc
xor
push
jecxz
push
mov
out
dec
cwtl
mov
xchg
sbb
push
popa
xchg
pushf
popf
test
jbe
or
sti
mov
or
jg
pop
inc
and
sbb
jno
data16
pushl
dec
mov
outsb
lods
inc
jle
xor
xchg
pop
sti
cmovns
push
mov
call
cmp
cvtpi2ps
cmc
in
pusha
push
mov
mov
xor
mov
ret
stos
xor
add
cs
cld
or
cmp
inc
pop
jbe
orl
adc
nop
mov
insb
pushf
shl
inc
xor
lcall
add
pop
ret
test
inc
push
sahf
cwtl
xor
sub
sahf
in
sarl
out
mov
fadds
pop
test
and
aas
stos
cs
or
mov
cmp
dec
ret
mov
dec
ljmp
lods
xchg
mov
and
jg
push
das
mov
and
rorb
leave
mov
fldt
int
xchg
jmp
adc
movsb
mov
or
add
pop
in
mov
sbb
adc
shlb
ret
daa
push
mov
ss
ror
pop
cmp
rcll
pop
int3
fildl
cmp
std
sbb
or
or
iret
mov
sahf
in
stc
and
pop
jl
pop
fidivrl
push
xchg
push
icebp
scas
xor
mov
ja
inc
add
pop
push
clc
adc
dec
jns
pop
mov
push
or
gs
sahf
out
rcll
xor
jle
cltd
icebp
fmuls
in
pusha
xor
test
hlt
xor
xchg
popa
push
add
cmp
jo
jecxz
adc
mov
je
mov
into
mov
jge
into
pushf
mov
mov
pop
gs
adc
fcmove
test
roll
mov
dec
imul
mov
jae
xlat
ss
sub
les
loopne
mov
xchg
xchg
test
sbb
decl
aam
js
stos
pushf
pop
lods
xor
fistpll
push
dec
int
inc
sti
cmpsb
movsb
imul
repz
add
sbb
xchg
ljmp
aaa
cmp
in
out
sub
jae
in
fs
sub
fcmovne
loop
and
adcl
ljmp
pop
fstl
scas
lret
xchg
and
es
addr16
fcomps
cmp
xchg
retw
mov
inc
adc
sub
pop
mov
or
jl
jno
fidivrl
mov
xor
and
loop
pop
lret
notl
roll
push
test
jmp
jmp
push
fildll
shr
push
in
add
into
sub
push
popa
sbb
rolb
rcrb
iret
inc
dec
mov
mov
lret
fsubrl
sbb
pop
scas
in
inc
dec
test
cld
mov
lods
push
and
out
mov
inc
ss
xchg
push
xor
jnp
mov
xchg
and
icebp
add
and
sbb
loop
jnp
bound
lcall
testb
or
cwtl
inc
iret
fadds
stc
mov
or
inc
cmp
xor
cmp
bound
and
mov
inc
mov
mov
test
scas
int3
inc
cwtl
pop
lea
or
inc
popa
inc
jae
mov
lret
mov
push
int
sti
dec
push
xchg
sti
scas
dec
repz
mov
sub
js
jp
movsb
xchg
arpl
mov
adc
adc
adc
lods
fistps
mov
repnz
mov
stos
mov
bnd
test
cmp
pop
scas
push
js
insl
mov
fstpt
adc
out
les
jno
ja
ds
scas
dec
lcall
jmp
xchg
orl
out
fldenv
movsb
lcall
vmovdqu
push
mov
lods
pop
push
imul
sbb
inc
add
out
mov
jne
rorb
mov
lret
lahf
mov
in
dec
or
sub
mov
in
push
inc
add
xor
jb
nop
xor
sbb
pop
bound
mov
push
mov
and
push
jmp
out
lret
xchg
push
stos
in
mov
cmp
out
inc
sarl
add
divb
pop
push
dec
test
ret
das
push
stos
cmp
or
fimuls
enter
mul
test
je
std
cmp
jl
cmpsb
push
jbe
cltd
out
sbb
xlat
inc
add
daa
mov
inc
loopne
inc
adc
xchg
ja
xchg
in
sbb
dec
inc
fisubl
xlat
xchg
add
adc
jae
mov
mov
std
dec
xchg
adc
dec
push
gs
and
mov
in
xor
mov
jmp
mov
cmp
or
xchg
stos
push
pusha
lea
push
mov
push
sub
bnd
mov
cmpsl
mov
loopne
js
in
fldcw
fs
jns
mov
fdivrl
jbe
push
int3
int
stc
imul
fiaddl
movsb
inc
dec
leave
cmp
daa
ja
pop
in
dec
jo
push
lods
outsl
shr
xchg
mov
adc
aam
pop
repnz
jle
je
push
int3
lret
adc
adc
mov
cli
fisubrl
cmp
call
pop
into
filds
xchg
xchg
sbb
mov
cmp
ljmp
or
in
je
cld
inc
xchg
arpl
ds
xchg
fdivp
add
inc
and
sub
jg
inc
aas
dec
xor
cmp
int
lock
out
xchg
jecxz
fidivs
fisttpll
cltd
imul
push
push
jne
fdivrl
dec
jg
or
xchg
rclb
cmp
insb
sarl
xchg
or
dec
call
pop
repz
xchg
mov
and
daa
push
pop
xchg
insl
adc
jne
xchg
fcomp
cmp
mov
cli
inc
mov
pop
shll
mov
out
ret
mov
lods
pop
lock
xor
jb
jnp
loopne
sbb
ret
jge
pop
sub
pop
cmp
int3
push
mov
call
cwtl
jge
push
pop
jmp
sbb
cld
xor
sub
mov
fwait
mov
add
mov
and
jo
mov
aam
lret
lcall
jl
addl
push
loop
and
sub
dec
add
pop
scas
pop
arpl
shlb
lods
leave
push
pop
int
rcrl
add
stos
lcall
sub
jle
sub
mov
dec
cmpsl
insb
cmp
or
xor
inc
arpl
push
push
and
fwait
jae
mov
jo
sbb
aas
scas
xlat
push
hlt
push
in
mov
ds
jp
scas
adc
lods
jg
add
xor
addr16
push
push
lock
hlt
bound
push
notl
mov
xchg
aaa
xchg
rorb
cmp
or
not
push
nop
lods
sbb
add
mov
adc
sbb
sar
fnop
adc
adc
inc
outsl
test
ss
adc
jp
mov
shl
adc
dec
adc
imul
sbb
decb
or
rol
cltd
mov
divb
out
das
add
pop
cwtl
lcall
mov
xlat
das
in
mov
xchg
xchg
loopne
stc
jnp
in
dec
data16
ljmp
sbb
pusha
push
into
jmp
sub
jbe
cmpsb
adc
jno
or
insl
rcl
sahf
pop
mov
sar
in
and
lcall
xchg
cmpsb
add
fnstenv
sub
gs
adc
jnp
loop
ret
pop
cmc
movsl
push
push
mov
ja
and
lods
xor
mov
bound
out
icebp
pop
xor
sbb
xchg
push
sarl
loop
jb
cmp
sub
loop
fcmove
insl
jns
lea
aam
jae
clc
test
test
mov
mov
aas
xchg
xchg
enter
push
cmpb
mov
pushf
scas
aad
outsl
xor
cltd
sbbl
imul
jae
enter
aam
imul
pop
in
in
scas
ffree
adc
add
push
push
fxch
mov
enter
xor
fistl
repz
shlb
and
jl
dec
adc
jle
mov
fiadds
cmp
xchg
je
mov
stc
pushf
mov
add
inc
fstpl
jmp
adc
dec
jb
cmp
fiaddl
mov
dec
jns
lods
xor
and
inc
cltd
lds
fistpll
jbe
inc
fstps
loop
add
xchg
or
mov
push
jbe
push
push
pop
mov
or
add
pusha
dec
sub
add
dec
incb
xor
or
mov
shl
dec
je
mov
lret
cmp
lods
jbe
add
and
in
jmp
adcl
pop
sbb
int3
cli
in
popa
pop
jnp
scas
orl
pop
jne
push
mov
push
in
cmpsb
ja
mov
jge
test
jne
sbb
inc
push
sbb
js
pop
add
outsl
adc
rcrl
loop
or
decb
les
dec
lods
add
xchg
or
outsl
loop
lea
addl
stos
and
pop
mov
xor
mov
movsb
jo
mov
cmp
pop
ret
test
dec
push
sbbl
jne
sbb
xor
fiaddl
punpckhwd
jge
push
outsb
test
pop
xchg
enter
xor
cmp
dec
xchg
data16
sti
mov
aam
das
sub
cld
clc
lock
pop
and
stc
out
xor
add
aas
aaa
jo
or
test
pop
dec
or
mov
fidivl
clc
rcll
sbb
jnp
xorb
outsb
cmpsb
sub
test
iret
lods
xchg
mov
ds
ss
xchg
mov
sub
je
sbb
sbb
iret
shr
jge
or
scas
clc
mov
clc
out
aaa
aas
or
cwtl
call
jecxz
push
mov
nop
lcall
cmc
sbb
mov
dec
insl
into
gs
vandnps
pop
test
pop
movsb
in
sub
add
aad
sub
cwtl
add
inc
lds
xor
xchg
xor
int
xor
ret
mov
lret
dec
inc
cmovns
dec
in
fsts
and
and
test
in
jne
sub
shll
repz
adc
and
lods
mov
mov
les
push
es
dec
sub
fcmove
add
shlb
subl
fsts
popl
cmc
push
loopne
std
in
push
push
adc
jge
push
push
and
aad
cli
loope
xchg
loopne,pn
shll
movsb
das
xor
xor
mov
in
jmp
cmp
inc
shrl
pop
pusha
or
int
cmc
pushf
mov
mov
and
mov
shlb
aad
fmull
adc
mov
sub
xchg
pop
sub
test
sub
lock
rorb
pop
movsl
test
push
mov
dec
cmpsl
shl
sub
dec
insb
arpl
scas
test
inc
fldenv
ja
pop
xor
fimuls
stos
lret
lea
enter
and
popf
cmp
add
in
sub
mov
addl
fcmovne
or
jb
pop
dec
cmp
push
test
imul
inc
in
mov
jmp
cmpsb
lcall
xor
popa
pop
imul
mov
push
in
rolb
outsb
lods
sbb
jo
dec
jbe
dec
xorb
into
pop
arpl
sub
jecxz
gs
inc
xor
cmp
lret
mov
lds
lcall
mov
pop
mov
cmp
mov
and
pop
add
scas
aad
jl
outsl
sbb
xchg
lcall
xchg
add
test
push
test
adc
imul
call
mov
mov
sahf
test
xchg
jns
insb
arpl
xchg
nop
cltd
lea
jb
cmp
fistpl
int
sub
ljmp
pop
stos
test
jb
pop
scas
jecxz
shr
mul
pushf
scas
sub
test
cmp
outsl
aaa
pop
fchs
add
sarl
out
sbb
xor
cli
pop
xor
mov
mov
lods
jno
icebp
loope
sub
daa
addr16
inc
inc
dec
push
sub
in
clc
push
adc
mov
jo
add
movl
and
shrl
daa
cwtl
mov
adc
and
clc
mov
std
cmpxchg
mov
int3
push
push
decl
scas
pop
cmp
dec
out
add
sbb
xchg
aam
orl
push
ja
cmpsb
mov
lods
jb
mov
jmp
test
out
test
je
and
lcall
dec
es
xor
aaa
jno
xor
dec
xor
arpl
mov
xlat
xchg
jl
es
addr16
push
adc
pushf
jns
xlat
sub
cmovns
fmuls
inc
enter
sub
push
popf
jp
lcall
xchg
dec
dec
popf
mov
dec
inc
mov
pop
mov
push
sub
rcr
sub
sub
push
cs
mov
mov
and
in
stc
pop
push
int3
std
push
mov
add
and
adc
jae
into
adc
mov
inc
adc
xor
ret
jecxz
add
push
or
call
pop
xor
pusha
pop
out
out
inc
icebp
pop
int
push
push
ss
xchg
mov
pop
mov
push
out
mov
lcall
pop
sub
xor
and
mov
mov
add
in
inc
int
push
in
xor
cmp
inc
out
xor
sbb
mov
nop
dec
jno
inc
xchg
loop
iret
adc
xchg
les
cmp
fcomp
push
cmp
adc
sub
add
cmp
xor
insl
out
clc
dec
fstl
mov
add
and
lds
pop
mov
inc
cmp
push
rcrb
sub
jecxz
insb
jnp
mov
push
fisttpll
ljmp
cmp
mov
jmp
xor
push
out
shrl
cmpsb
lock
add
ds
pop
stos
xor
cwtl
test
jb
test
xor
sbb
xor
jnp
fisttps
out
dec
adc
fistpll
inc
lea
mov
add
dec
shll
lahf
sbb
cmp
dec
testb
lods
push
and
add
lock
insb
dec
jb
add
lds
sub
mov
cmp
push
mov
sub
add
es
fistps
je
sub
aam
ds
dec
fldcw
xor
in
filds
ret
dec
shll
jecxz
cmc
shll
pmulhw
xchg
sub
or
or
xchg
xchg
push
inc
sbb
bound
or
and
or
test
loope
and
inc
subb
mov
rorb
cmp
sbb
negl
mov
rclb
mov
and
xchg
sbb
jne
add
fstpl
cli
jl
jl
in
daa
push
call
stos
push
adc
shrb
push
cmpb
dec
xchg
frstor
mov
movsb
leave
adc
das
xchg
xchg
imul
sub
sub
jne
repnz
add
insb
into
ret
enter
sub
lret
inc
lock
sub
imul
add
mov
sbb
mov
pop
sub
xchg
mov
fs
xchg
sub
mov
adc
xchg
hlt
sahf
jno
mov
jl
repz
jns,pn
mov
xchg
mov
cmp
push
jne
outsb
jno
movsl
xchg
mov
mov
sub
jge
lret
sbb
int3
sub
and
adc
cmpsb
mov
test
xor
lock
jl
pop
nop
aas
lods
aaa
xchg
out
fisttpll
cmp
xor
rcrl
push
xchg
lods
addr16
xchg
jge
dec
int
pop
push
sub
inc
repz
dec
push
push
cmc
lds
sub
mov
jne
mov
in
fsubp
mov
lcall
and
xor
test
push
jb
imul
out
mov
jmp
inc
in
dec
jl
push
and
sub
adc
nop
xor
push
movsb
mov
in
mov
add
popf
cmp
and
fs
shl
push
push
adc
or
int
or
sbb
sub
popa
sub
or
cmp
aas
mov
mov
mov
mov
mov
sahf
out
push
in
sti
ret
sub
pop
test
in
cmp
mov
aaa
jns
cmovs
inc
inc
mov
leave
adc
jle
pushf
outsb
movsb
nop
sbb
sub
adc
fmuls
lock
mov
dec
push
out
xchg
or
cmp
cli
out
xor
sar
and
ja
dec
cmp
sub
inc
add
out
dec
shlb
std
adc
cmpsl
xchg
mov
mov
xor
std
sti
test
outsb
and
js
iret
and
aam
dec
dec
pop
std
into
mov
dec
jno
les
scas
icebp
inc
addr16
hlt
lcall
arpl
add
jo
jge
sbb
lcall
adc
jae
mov
bnd
add
shrl
pop
sub
push
xor
fs
ljmp
dec
jl
data16
in
bound
jae
or
lahf
jae
push
jmp
xchg
call
shlb
daa
outsb
push
add
test
ds
add
lods
or
adc
lods
loope
jo
push
cmp
out
push
inc
enter
scas
pop
js
fwait
pop
cltd
outsl
mov
jg
scas
jle
out
jmp
cmp
jbe
out
leave
inc
xor
fimull
gs
xchg
xor
scas
dec
mov
cmp
xchg
inc
clc
in
loope
mov
insb
push
xchg
or
xchg
adc
mov
mov
inc
jns
adc
inc
dec
push
xor
shrb
mov
xor
push
imul
xchg
cwtl
pop
movsb
jg
pop
or
add
inc
sbb
and
xchg
pop
xchg
push
jge
mov
nop
out
popf
or
lea
std
fstpl
mov
movsl
push
inc
adc
or
push
dec
cld
sbb
nop
fists
and
negb
cli
fimull
movsb
aam
mov
cltd
xchg
ficompl
push
jnp
out
adc
push
push
mov
or
fisubrs
or
scas
or
push
push
fiaddl
mov
fidivs
xlat
daa
mov
push
leave
mov
repz
sarb
shl
jns
mov
mov
repnz
aad
sahf
imul
push
sub
xchg
jl
mov
imul
mov
aaa
mov
aad
int3
jle
int3
sbb
scas
lahf
jne
or
cmp
jg
stos
cmpb
sbb
pop
jge
hlt
push
dec
lahf
sbb
int3
push
inc
aas
lahf
mov
lds
imul
mov
inc
mov
popf
and
leave
push
mov
add
shlb
je
cmp
cmp
mov
std
or
xor
sti
add
cwtl
or
adcb
insl
shrb
jl
mov
dec
push
adc
in
pop
pop
aad
add
pushf
ja
test
inc
dec
xchg
fimuls
xlat
dec
add
or
cmc
jns
cmp
inc
pusha
xor
fldt
rclb
fnstcw
faddl
ss
or
xchg
jge
scas
xor
push
pop
es
xchg
mov
ja
cmp
das
test
mov
dec
and
pop
pop
mov
dec
lcall
inc
or
xor
push
adc
lret
es
leave
fidivrl
loope
test
incb
bound
faddp
xor
sbb
ret
pop
pushl
je
pop
dec
mulb
mov
hlt
cmpl
pop
push
pop
xchg
mov
clc
loopne
mov
jmpw
rcrl
test
xor
pushf
adc
inc
jbe
fisttpl
outsl
lds
shll
or
xor
outsb
test
loopne
sbb
mov
out
pushf
adc
cs
data16
sti
flds
movsl
les
call
outsl
loope
lods
dec
sti
addl
push
adc
mov
ds
cmp
jnp
push
addl
cs
mov
and
negl
into
mov
push
cwtl
sbb
into
add
fsts
shll
sbb
ret
push
clc
xchg
dec
mov
cwtl
xlat
and
movsl
jl
push
jnp
nop
pop
popa
pop
mov
daa
mov
fs
mov
shlb
push
xchg
xchg
xlat
and
or
testl
ret
xlat
fs
sbbb
jmp
rcrl
popf
mov
jmp
xorb
and
out
sbb
mov
xchg
in
xchg
repz
sbb
fwait
stos
push
rclb
cmc
or
xchg
in
push
or
movsb
scas
mov
jno
cmp
pop
sbb
inc
jb
dec
in
mov
adc
add
aas
push
xchg
mov
test
add
sub
cmp
mov
xchg
stos
push
out
repnz
inc
fs
in
ret
inc
fsubs
test
stc
pop
adcl
jecxz
push
xor
pop
faddl
inc
mov
stos
nop
jg
mov
test
popa
cmp
and
aas
mov
test
xlat
in
dec
pop
rorb
jmp
adc
cmpsl
dec
or
mov
xor
xor
leave
pop
dec
adc
xor
iret
out
mov
xor
jb
aaa
aaa
jbe
jns
mov
sbb
xchg
jl
sbb
in
pop
scas
ficoml
add
mov
mov
or
movsl
cli
fucom
xor
cld
mov
sahf
xlat
or
rorb
ret
mov
xor
outsb
push
xchg
xchg
ljmp
jb
pop
les
addb
pop
cmpsb
jmp
rol
sbb
pop
pop
push
mov
vcvttsd2usi
loope
fdivrs
sub
cmpsb
inc
das
out
mov
decl
sbb
inc
std
pop
jbe
push
sub
pop
aam
daa
push
loope
inc
lock
addr16
rcrl
pop
jbe
lret
jp
icebp
stos
fmulp
jle
mov
pop
scas
sti
in
movsl
inc
lea
mov
test
sub
jbe
xchg
sub
inc
sub
test
fistpl
ss
arpl
lea
adc
xchg
push
adc
push
jbe
cmp
in
jle
rorl
popf
gs
jmp
sub
into
addr16
add
mov
add
fs
push
inc
push
xorb
adc
xchg
sarb
outsb
dec
xchg
mov
out
and
jle
nop
inc
in
int
fldl
ret
scas
or
insb
and
fnstsw
rorb
std
inc
mov
and
jge
ret
jb
stc
mov
std
mov
push
xchg
shrl
sar
cmpsl
jp
xor
jb
mov
loop
adc
xor
fwait
pop
int3
mov
mov
pusha
add
int
sbb
lods
mov
ficoml
dec
test
push
jp
push
mov
cmpsl
xchg
sbbl
cmp
flds
cld
pusha
dec
lock
pop
lods
cmpsl
jl
ficompl
mov
imul
inc
jnp
clc
cmp
in
sbb
lahf
push
aas
outsw
dec
mov
sbb
addr16
dec
test
rcrl
add
push
mov
std
lahf
push
cmpsb
mov
jnp
push
popa
push
mov
xchg
lahf
xchg
mov
aaa
jne
mov
xchg
pusha
test
seta
into
or
pop
shr
shlb
pop
lahf
pop
cvtdq2ps
popf
inc
push
sub
lock
dec
ds
stos
sbb
mov
loop
jmp
mov
jle
jp
aam
fdiv
mov
les
cwtl
data16
adc
testl
xor
popa
pop
jnp
or
jmp
lock
dec
cmp
repnz
xor
scas
mov
out
outsb
jle
xchg
mov
mov
adc
xchg
push
mov
pop
leave
nop
mov
sub
inc
jno
addb
or
xchg
push
and
xor
add
pop
sbb
popa
push
mov
sbb
stos
and
cltd
scas
mov
mov
ljmp
sbb
fwait
mov
icebp
push
dec
xor
dec
xor
insl
popf
cmp
inc
or
lds
fisubs
loopne
jo
pop
pop
leave
add
add
icebp
clc
out
push
mov
stc
pushf
and
fsubrl
sarl
icebp
arpl
inc
push
test
push
aad
pop
jno
cmpb
sbb
pop
adc
es
add
sbb
inc
and
inc
cmpsb
pop
ffreep
dec
sub
into
push
ja
lcall
in
mov
fucomi
sub
mov
and
fwait
lret
or
ret
xlat
iret
pop
push
mov
push
mov
in
adc
jg
test
cli
add
xchg
fistpll
out
inc
pop
dec
jge
pushf
out
lods
les
sub
xchg
push
arpl
jne
adc
decl
out
scas
or
mov
jl
mov
lea
xor
push
dec
pop
mov
jecxz
mov
ja
push
fwait
imul
jb
insl
hlt
push
sti
addr16
bound
mov
and
js
xchg
mov
shrb
nop
ds
cli
test
rolb
add
aam
and
imul
xor
daa
jae
mov
dec
rcll
scas
mov
lret
leave
pop
mov
sbb
push
call
add
pop
sbb
aaa
loope
lods
dec
out
xor
scas
outsb
outsl
dec
sub
test
mov
dec
outsb
xchg
jne
test
sbb
bnd
sbb
jno
mov
mov
sub
xchg
test
into
cmpsl
cltd
pop
and
lock
lock
pop
jno
sub
sbb
add
imul
mov
jmp
leave
sbb
cmp
lcall
shrb
xchg
pop
push
mov
stos
jle
and
subl
subb
jnp
fs
mov
xor
sbb
outsb
data16
or
xor
cld
aas
das
rcl
add
in
dec
mov
clc
mov
pop
cltd
fcompl
mov
loop
pushf
loop
add
outsl
sub
xchg
cs
mov
xor
add
mov
sub
rcll
movsl
mov
add
sbb
push
dec
xchg
ret
cmc
jns
dec
cltd
aaa
lahf
push
lods
adc
and
lret
addr16
and
adc
jge
inc
adc
push
in
daa
shrb
cmpsl
dec
mov
xchg
inc
loopne
sub
mov
in
daa
mov
sub
andb
stos
lret
aaa
rolb
outsb
mov
sub
call
push
or
daa
push
or
mov
dec
push
sub
push
aas
shl
and
push
cwtl
push
dec
fs
adc
pop
addr16
ret
mov
adc
cmove
mov
lods
fimuls
ret
dec
lds
repnz
adc
lret
out
sti
imul
xorl
in
jp
inc
sub
std
js
inc
or
and
rorl
mov
dec
popa
pop
mov
lock
xchg
inc
dec
pop
dec
rorb
pop
lds
xchg
cs
jbe
or
or
ja
push
cmpsb
orl
mov
fidivs
repnz
cmp
lds
xchg
mov
jae
addr16
lret
xor
dec
inc
lret
mov
in
jecxz
outsb
enter
fsubrl
jge
mov
mov
or
hlt
push
dec
sub
and
sub
dec
mov
or
dec
cld
jmp
sub
imul
lret
jmp
add
mov
aas
cli
xor
mov
mov
push
fwait
mov
xchg
push
cmp
sub
arpl
lods
dec
jecxz
mov
or
cmp
repz
mov
pop
ljmp
incb
cmp
clc
fistpl
das
jmp
out
xchg
and
add
loop
xchg
mov
mov
jne
pop
arpl
mov
aaa
inc
add
push
loope
imul
cmp
xchg
sbb
mov
inc
fnstcw
and
mov
cld
push
push
jg
in
mov
and
idivb
jge
cmpsb
mov
dec
pop
sbb
push
pop
sub
mov
pop
leave
inc
negb
js
lcall
aas
pop
movl
jmp
popw
xor
cmpsb
sub
pop
test
je
enter
or
iret
cmp
daa
inc
push
push
mov
nop
std
jl
xchg
repz
lret
std
and
mov
mov
push
dec
mov
addr16
out
push
insl
pop
adc
cmc
jbe
sahf
fwait
mov
aaa
dec
dec
push
inc
inc
mov
cmp
dec
shrb
mov
pop
mov
inc
jl
pop
xor
dec
xchg
pop
jb
xchg
xchg
xor
loopne
xchg
jns
lock
repz
mov
in
imul
out
xchg
push
mov
pop
jp
pop
push
jle
test
movsb
dec
sub
dec
out
mov
jp
fnstsw
pop
ds
adc
popf
repz
cmp
pushf
cmpsl
movsl
push
daa
daa
mov
fsts
push
lods
mov
push
or
ret
mov
pop
xchg
gs
cmp
jecxz
hlt
xor
push
vmptrst
mov
sub
cmp
push
in
and
adc
inc
loopne
push
mov
pop
pop
pushl
adc
loope
rcl
icebp
xor
scas
push
mov
xorl
and
int
inc
movsl
xchg
gs
dec
fnop
mov
mov
outsl
mov
mov
loopne
lods
xor
sub
sahf
xchg
das
stos
ljmp
and
int
lahf
int
stos
mov
pop
scas
xchg
sbb
inc
push
es
sbb
pushf
dec
stc
inc
test
pop
and
pop
adc
adc
mov
xor
pop
lods
lret
inc
sbb
cli
in
adc
jp
rolb
sbb
aad
out
fldenv
lock
out
pusha
xor
xchg
push
ret
test
push
push
cmpsl
mov
lret
outsl
xlat
add
adc
cmc
adc
or
stos
add
xchg
cmp
rcll
mov
int3
push
and
push
imul
mov
mov
fstp
ja
mov
fistps
mov
mov
jge
xchg
sbb
loop
lret
jle
fcmovbe
adc
jno
fcoms
jmp
push
shll
les
es
test
mov
in
lcall
les
lret
cmpsb
icebp
dec
hlt
inc
sub
jae
jmp
pusha
fidivs
mov
push
cmp
loopne
ret
insl
dec
enter
lahf
xor
ljmp
jle
loop
insl
mov
xchg
mov
jle
scas
rcl
popa
mov
pusha
mov
cmpb
movsb
and
insl
jl
imul
in
sbb
jge
das
lcall
xchg
loope
and
ret
fdivrl
mov
stc
sbb
xor
adc
imul
sbb
repnz
mov
in
or
mov
stc
cmp
pop
sub
ljmp
push
das
xchg
imul
pop
ds
mov
nop
imul
jne
leave
mov
mov
int3
fcmovne
dec
and
rcr
add
fistps
lods
pop
clc
hlt
in
or
jo
ds
scas
fsubs
nop
pop
dec
sbb
and
add
imul
es
mov
push
push
sub
push
sbb
stos
rcrl
adc
jmp
cmpsb
nop
adc
in
enter
dec
bound
pop
xchg
scas
dec
sub
fistps
mov
stc
stc
mov
pop
mov
orb
mov
ret
mov
pop
adc
nop
aas
push
test
mov
or
sub
fwait
mov
add
clc
movsl
pop
mov
test
sub
int3
adc
ja
jo
add
data16
into
xchg
sbb
testl
and
out
push
pusha
popf
add
xchg
test
inc
in
mov
cmp
adc
jnp
push
cmp
test
jmp
mov
xor
enter
sbb
xor
and
cmp
int3
int3
out
fisubl
mov
stc
inc
test
mov
add
in
stos
xor
cmp
push
dec
sbb
push
fwait
or
mov
cmp
cmp
pop
pop
jmp
jecxz
loope
fmuls
jle
jno
fistpll
mov
jecxz
xchg
test
and
xor
mov
notl
mov
or
es
and
insb
mov
adc
fstl
inc
pop
jns
movsl
loope
int
mov
xchg
add
mov
mov
mov
popw
sbb
or
int3
fadds
and
dec
inc
adc
scas
cmc
je
pop
aas
lahf
les
cmpsb
xor
cmc
iret
jp
mov
sbb
mov
add
pop
sbb
and
cmp
stos
and
pusha
inc
sti
dec
loop
mov
sub
xchg
fwait
jl
lahf
pop
inc
dec
adc
daa
in
push
lds
mov
pop
push
fadds
fdiv
sub
repz
adc
push
rorb
call
mov
mov
and
lock
adc
call
mov
outsb
mov
fsubr
int
mov
adc
pushf
dec
arpl
jno
push
pop
or
sbb
mov
sahf
enter
xor
flds
lods
imul
mov
xor
loope
cwtl
decl
jmp
push
jmp
cmp
stos
cmpsb
mov
mov
addr16
fstpt
xchg
jmp
in
sub
lret
movsl
cmpb
cmpsb
dec
les
daa
mov
je
push
jge
inc
jno
and
lcall
jmp
pop
scas
add
push
sbb
imul
test
sti
adc
rolb
pop
enter
rorl
popf
shll
xchg
enter
mov
and
lock
adc
subb
lea
in
xor
shrb
jl
mov
addb
test
mov
push
xchg
popf
repnz
fldl
add
xor
sub
sahf
repnz
jmp
adc
or
adc
sbb
pop
insl
movb
xor
jl
int
jge
test
push
push
fwait
aaa
cld
pop
mov
fwait
xor
leave
in
mov
je
and
stos
mov
imul
out
xchg
sub
test
mov
ret
mov
cmp
loope
xor
mov
aad
jecxz
pop
mov
xchg
in
pop
mov
ljmp
bound
insl
fidivs
gs
iret
scas
out
or
jbe
mov
in
and
adc
popf
in
js
aas
scas
enter
fs
cli
adc
xor
and
mov
cwtl
mov
daa
int3
xor
les
sar
shr
scas
imul
or
dec
fcmovnb
sub
rcrl
lahf
mov
sti
mov
mov
xchg
lret
sub
jp
or
sbb
ja
adc
xor
dec
sub
je
jno,pn
ficomps
sub
shrl
and
xchg
dec
dec
call
ljmp
lcall
push
mov
into
iret
andl
test
pop
xor
lods
das
clc
mov
jns
sbb
ljmp
out
jl
aam
mov
push
adc
out
loope
inc
inc
in
xlat
or
add
sub
stos
dec
mov
mov
mov
addl
pop
test
push
jl
faddl
fldt
or
arpl
dec
pop
pop
sub
pop
ficompl
lods
pop
pop
iret
fists
fdivrl
add
test
mov
xor
push
push
dec
adc
pop
mov
sub
cmc
xchg
stc
jne
in
adc
loope
in
es
and
pop
sub
aad
jno
mov
and
xchg
popf
lret
jmp
loope
lret
sub
imull
push
imul
sub
or
add
push
cmc
cmp
mov
dec
mov
xchg
ja
push
add
jno
fdivrs
sub
jmp
dec
dec
sbb
icebp
sahf
filds
mov
mov
or
mov
xor
xlat
andb
test
push
xchg
xor
pop
pop
cmp
dec
inc
addr16
hlt
xchg
cli
insb
bound
ror
les
jae
std
inc
mov
xchg
icebp
test
mov
mov
je
inc
cmpsb
je
cltd
stos
cli
rclb
insb
pop
int3
and
das
fnstcw
xchg
dec
imul
fs
inc
mov
ds
divl
pop
or
and
dec
lods
bound
mov
mov
dec
mov
and
and
orl
cwtl
movsl
mov
xchg
sub
aas
xchg
sub
movsl
icebp
push
lahf
pop
ds
pop
mov
lock
xor
ljmp
push
fcoml
cmp
gs
jp
and
ss
jle
aad
or
xor
sub
mov
out
stos
fs
pop
stos
in
arpl
jb
xor
sbb
insb
sahf
shlb
mov
jle
xchg
orb
add
rcll
iret
jle
inc
imul
inc
cltd
mov
stos
out
ficomps
add
out
stos
shrl
dec
ljmp
call
pop
xlat
sub
sub
pop
add
jl
test
sti
js
xchg
js
popa
shll
sub
inc
orb
scas
mov
sub
scas
shll
rorl
sbb
ds
jo
xchg
jno
mov
filds
dec
or
cltd
or
xor
cmpsl
ds
orl
mov
loop
scas
push
daa
out
mov
sub
push
orl
mov
decb
sbb
xlat
inc
call
mov
and
shl
fcmovu
mov
jmp
and
ljmp
mov
pop
jmp
add
inc
jecxz
scas
lahf
out
mov
in
daa
rcll
lds
jb
cmp
ds
icebp
xchg
repz
push
call
shl
ljmp
leave
jbe
ret
cli
jnp
mov
jg
dec
xor
jge
xchg
or
fwait
sbb
sub
outsl
rcrb
sbb
jp
ret
and
test
fsubl
lret
mov
adc
inc
lcall
xor
inc
sub
xchg
fnstsw
push
enter
push
pusha
push
ss
cmpsl
frstor
xchg
inc
fs
fmuls
mov
cmc
sub
and
scas
or
sub
jo
movsb
fsubrs
scas
push
cwtl
dec
lret
outsl
leave
inc
sbb
xor
sub
aad
mov
mov
push
mov
das
dec
mov
jecxz
cmp
mov
fstps
and
stos
lods
or
ljmp
into
sbb
sub
pushf
sbb
adc
repz
sbb
mov
lds
js
xor
data16
leave
cmc
adc
pop
or
adc
lock
sub
inc
fstp
hlt
dec
or
repnz
sahf
adc
loope
stos
jno
fs
jg
inc
jecxz
scas
jp
dec
iret
out
dec
scas
sbb
sarb
insl
pusha
jbe
or
not
loope
sub
dec
cmp
and
dec
xor
xchg
ror
mov
dec
mov
rol
mov
adc
ds
add
pop
sub
pop
insl
sub
aaa
imul
xchg
pusha
ds
mov
dec
das
xor
jge
fdivrl
int3
dec
inc
in
add
mov
fiaddl
pshufw
mov
arpl
jl
das
xchg
jl
jecxz
lret
inc
push
jmp
sbb
xor
addr16
lods
movsb
xchg
in
jp
and
orl
rcrl
neg
test
ja
lds
pop
adc
shll
rorl
inc
sti
and
cmc
cwtl
movsl
gs
sbb
leave
jbe
or
cli
sahf
bound
jo
shrl
mov
xchg
or
dec
aas
pusha
imul
xchg
cmp
mov
or
push
jne
sub
shll
jb
adc
sti
mov
mov
pop
adc
xchg
lea
add
dec
out
mov
lds
mov
mov
cld
ret
aam
cmp
data16
inc
push
data16
adc
mov
dec
pop
pop
lcall
or
xchg
cmp
subl
pusha
add
push
adc
dec
aad
lahf
adc
inc
in
and
mov
xchg
stos
outsl
stc
mov
adc
fisubrs
div
jne
ret
pop
pop
jo
and
fmull
and
lds
xchg
hlt
loopne
notl
lahf
loopne
fidivs
inc
jecxz
insl
rcrl
pop
and
and
in
add
xor
mov
or
aam
sbb
insl
jle
das
push
les
stos
mov
push
dec
roll
fldt
xchg
ret
add
push
xchg
sti
movsl
bound
push
or
fcmove
hlt
aas
mov
sub
jle
inc
xchg
lock
shl
cltd
inc
lret
mov
rolb
jnp
inc
cwtl
ds
xor
pop
cli
subb
mov
lahf
xor
mov
mov
sub
jg
sub
mov
scas
or
bswap
movsb
xchg
notb
aaa
fninit
jae
sbb
sbb
cmp
jae
mov
mov
add
adc
sbb
outsb
add
sbb
sarl
cli
jmp
sbb
and
xchg
cmp
mov
jae
inc
cmp
adc
jnp
pushf
fldcw
sbbl
loop
sbb
add
movsl
pop
leave
pop
cli
mov
mov
xchg
lahf
imul
andb
stc
fs
adc
je
enter
aam
test
jbe
mov
aaa
sub
loopne
pop
addl
adc
or
jle
rcrl
es
or
iret
sub
or
loope
fisubrl
dec
fwait
and
shll
negl
pop
test
dec
leave
mov
insl
rolb
xchg
popa
dec
scas
mov
dec
cmc
insl
fnsave
pop
push
add
cli
xor
outsb
xchg
cmp
out
shlb
clc
dec
test
fistps
imul
jmp
es
or
nop
gs
lahf
cltd
xchg
out
and
into
inc
pop
ds
popfw
cs
xor
xchg
pop
loop
jmp
iret
test
fwait
cmp
xor
pop
pusha
pop
inc
scas
insl
clc
push
in
jecxz
cli
fisubl
fstpt
orb
xchg
and
aad
or
cmpsb
adc
sbb
in
push
mov
dec
gs
jns
mov
push
xor
add
loopne
imul
mov
or
ljmp
sub
push
test
mov
hlt
outsb
dec
pop
bound
out
pop
or
mov
push
sub
cmp
imul
push
inc
or
clc
test
fs
dec
mov
stc
dec
popa
dec
fadd
jns
lock
adc
sbb
adc
mov
cmp
into
ror
clc
daa
stos
mov
daa
lahf
int
repnz
jae
dec
sbb
lret
pop
test
into
dec
clc
mov
stc
xor
inc
fwait
jmp
push
clc
sub
adc
pushf
std
movsl
push
mov
loop
cmp
dec
loop
aaa
jge
jb
test
dec
mov
enter
dec
sbb
cmpsl
push
aas
xchg
add
xchg
scas
lahf
add
test
movl
xchg
cld
mov
and
ds
sti
push
jno
nop
cmp
jmp
mov
mov
popf
inc
stc
jno
jl
out
inc
xor
decl
lahf
in
cld
and
push
ljmp
jns
or
scas
pushf
fstps
or
lcall
sbb
shrl
jp
cmp
xchg
xchg
clc
sub
pop
mov
scas
test
pop
movsl
sar
push
cmp
aaa
outsb
or
pop
call
rcl
pop
dec
fbstp
and
dec
push
aas
pop
rorb
adc
outsl
add
push
iret
fstpt
add
add
lock
adc
ret
xlat
movsl
push
stos
xorb
mov
cmp
jo
ja
add
in
mov
xchg
mov
test
fimull
cmpsl
movl
mul
sub
rcll
push
push
lret
or
xchg
dec
jg
test
sbb
xor
jmp
cmp
out
push
add
lret
mov
mov
inc
xchg
xchg
outsl
lahf
leave
cs
call
rcrb
pop
imulb
add
sub
enter
cmp
in
ljmp
add
scas
call
lock
pop
lret
scas
mov
sub
push
or
js
cli
xchg
rolb
push
push
dec
and
arpl
mov
dec
mov
test
mov
mov
xor
or
mov
loop
mov
pop
fstpt
push
subl
enter
cmp
fnstenv
outsl
xor
testl
shrb
lds
inc
or
hlt
movsb
jg
outsb
imul
out
fisubs
xor
lcall
jge
nop
stos
mov
pop
jnp
fwait
pushf
jecxz
xchg
inc
sar
cmp
stc
push
ret
dec
ret
xor
in
and
pop
jne
inc
and
shll
adc
push
jecxz
jecxz
fwait
shll
aas
jmp
nop
insl
sarl
push
into
or
ds
pushf
shlb
xor
roll
cs
pop
mov
test
and
push
bound
rorl
pop
out
and
pop
into
mov
js
lret
dec
mov
lods
inc
sub
cmc
sbbl
xchg
and
jae
insl
adc
jbe
adcl
mov
lds
andl
lcall
cmp
xchg
pop
outsl
cwtl
inc
icebp
lea
or
push
ljmp
and
or
cmp
movsb
sti
adc
pusha
cmpsl
pop
sbb
mov
xor
daa
push
aad
pusha
jae
mov
inc
enter
fists
cli
dec
sahf
mov
push
repnz
pop
mov
enter
sbb
in
mov
or
lret
movsl
js
fld
push
scas
call
test
dec
jl
insl
test
cmp
shll
pop
push
jne
jge
dec
mov
jl
orb
mov
or
push
push
push
jno
lock
rorb
sub
xor
test
sbb
es
in
adc
das
scas
nop
pop
push
movsb
push
sub
or
sub
jl
and
icebp
sub
mov
jg
fadds
or
in
mov
mov
pop
jne
cmp
call
lret
stc
out
lods
outsb
or
iret
cs
xchg
cmp
scas
push
sbb
in
mov
out
and
push
jb
mov
jne
xor
les
test
mov
push
mov
jo
fwait
int
sti
add
loop
js
lret
mov
mov
or
and
dec
test
pop
adc
sti
sti
xor
push
and
add
cs
add
repz
sbb
inc
and
jo
imul
decb
imul
mov
inc
das
sub
sub
push
aas
ret
pop
les
mov
xchg
mov
cmp
sub
cmp
fisubrl
cmp
fsubl
int3
aam
push
gs
xchg
dec
cmpsl
mov
jae
repnz
out
pusha
stos
mov
fisubrs
inc
pop
or
je
xlat
adc
cmp
pop
cli
mov
cmp
mov
sbb
imul
sub
dec
lret
jg
lahf
cmpsb
fists
mov
pop
pop
out
pop
jle
mov
jmp
popf
or
das
mov
shlb
roll
push
out
mov
loopne
or
fmuls
inc
ja
and
call
mov
sub
inc
jno
rcl
rolb
cmp
out
cli
or
mov
dec
sbb
mov
dec
mov
aas
pop
mov
push
mov
int3
adc
movsb
xor
mov
lods
xchg
push
cmp
push
jns
inc
push
mov
mov
aam
icebp
std
and
pop
mov
add
sti
in
xor
xchg
inc
nop
adc
sub
push
mov
mov
pop
fwait
lret
mov
sar
movsb
and
add
mov
rclb
xor
out
rcl
push
out
pop
jl
pop
mov
pop
sahf
sub
enter
jge
mov
push
shll
aas
mov
sahf
or
jle
imul
daa
inc
adc
mov
les
out
xchg
cli
push
or
cmp
or
popa
inc
fsubs
sub
mov
in
nop
push
es
adcl
inc
adc
mov
outsb
and
jbe
mov
shrb
addr16
pop
jae
jns
les
push
popa
mov
fcomps
and
jbe
inc
add
cwtl
jge
jl
mov
push
pop
lds
push
sahf
pop
mov
jmp
repz
gs
stos
sub
mov
inc
cmpsl
sub
das
gs
mov
xor
ret
adc
rcll
xor
sub
or
inc
testb
jbe
mov
sbb
dec
dec
sub
imul
push
cld
jmp
xchg
mov
and
sbb
mov
cmpsb
adcb
sub
lret
mov
mov
jnp
popa
int3
in
inc
lret
scas
cltd
jae
int
sbb
and
out
inc
ret
sub
out
into
jo
mov
aaa
or
cmp
and
jl
mov
into
pop
nop
int
pop
push
outsb
jle
test
dec
or
aaa
cmp
and
aam
les
dec
xor
fucomi
push
movl
mov
sbb
adc
fistl
aad
sahf
mov
xor
shl
movsl
ss
enter
jns
in
inc
mov
mov
fisubrs
push
lret
jl
addl
int3
mov
fdivp
nop
and
roll
orl
push
mov
pop
lock
or
adc
enter
sbb
pop
mov
or
sub
orl
sbb
push
rorb
ss
outsb
add
add
xchg
mov
jbe
jno
mov
test
xor
arpl
sahf
cmpsl
pop
pop
mov
aam
js
mov
lret
and
sbb
les
push
iret
push
test
mov
int3
fistps
inc
mov
loopne
mov
mov
push
pop
popa
mov
in
xchg
out
cmp
pushf
push
fadds
mov
ret
into
sub
lret
push
stos
mov
jnp
adc
mov
pop
fistpll
ljmp
rolb
out
pop
pop
and
mov
lahf
mov
mov
shr
xor
mov
pushf
test
mov
jge
mov
cmpsb
stos
dec
add
push
jl
jns
mov
pop
mov
je
ds
inc
mov
fstl
cmp
dec
mov
mov
dec
mov
sti
enter
sub
sbb
mov
mov
push
adc
mov
outsl
es
inc
mov
or
mov
ss
les
daa
rclb
cmc
popf
cwtl
pop
test
pop
sahf
jecxz
cmovb
xorb
fbld
out
pusha
push
arpl
inc
sub
inc
imul
inc
jg
out
outsl
sbb
adc
push
xchg
push
pushf
or
sbb
mov
or
sub
push
mov
mov
xchg
xlat
inc
repz
cwtl
lods
shrl
pop
call
sti
push
roll
movl
psraw
cld
pop
fwait
mov
je
cmp
pop
bound
add
cli
pop
jmp
frstor
out
xchg
call
sbb
rolb
int
in
rolb
insl
imul
in
lahf
or
rclb
cmp
jo
mov
aaa
fistpl
loopne
dec
mov
inc
lcall
inc
addb
pushf
les
aad
push
cmp
or
cmp
lahf
or
push
adc
and
jmp
mov
dec
and
and
add
leave
test
icebp
cld
mov
or
int3
pop
dec
cmp
push
mov
mov
sub
mov
mov
imul
sbb
dec
cli
in
sub
cli
into
imul
sbb
arpl
dec
leave
sarl
nop
lods
sbb
sbb
lret
add
mov
sbb
xor
mov
sub
jl
adc
call
sarl
or
push
xchg
popa
xor
or
lahf
ja
sahf
xor
pop
jle
fdivrp
rcll
dec
push
xchg
jmp
enter
insl
clc
or
push
mov
and
inc
icebp
add
pop
leave
sti
mov
cmp
clc
push
mov
lods
pop
mov
lret
daa
mov
lret
mov
xchg
cmp
ret
sub
push
leave
dec
cmpsl
outsb
pop
std
mov
ds
jne
xorl
push
icebp
clc
bound
loope
xchg
dec
mov
add
cltd
jecxz
in
bound
cmp
notl
xor
lret
fs
add
pop
push
in
inc
and
mov
lahf
mov
inc
xchg
mov
cmpsb
cmpsb
orb
dec
dec
out
adc
lds
push
xchg
stc
and
mov
lods
sub
movsl
sub
cwtl
cld
and
and
loop
adc
int
icebp
and
pushfw
cmc
pushf
dec
sub
dec
xchg
iret
dec
xor
idivl
dec
testb
add
cltd
call
out
stc
mov
dec
iret
push
popa
not
jnp
neg
loop
adc
or
jp,pt
es
testb
stc
lods
fldt
hlt
pop
inc
jns
adc
fnstsw
add
cmp
xchg
add
lds
stos
ljmp
lods
popf
push
xchg
add
fsubrp
push
mov
imul
jns
repnz
js
sub
add
push
andl
mov
jg
xor
pop
sbb
cltd
inc
insb
fs
outsl
bswap
cltd
and
sub
dec
xor
movsl
and
outsl
insb
dec
ror
xchg
lods
mov
out
repz
sbb
daa
push
fs
push
cmp
inc
stc
out
aas
jnp
aad
cld
fs
xlat
push
pop
std
cmp
sub
loopne
aas
mov
and
cmc
repnz
cmp
jp
inc
jo
xchg
mov
lcall
jns
icebp
iret
sub
lret
ret
mov
push
fcmovu
shl
aad
test
jno
adc
pop
test
sub
cwtl
mov
mov
mov
push
mov
mov
test
das
sbb
es
xchg
divb
mov
movsl
fmull
cmp
stos
push
bound
and
adcl
hlt
stos
xchg
aad
loope
push
jg
xchg
mov
in
addr16
mov
or
enter
add
inc
dec
movsb
pop
push
adc
inc
inc
andl
sti
mov
jo
push
fisubrl
fs
mov
jne
push
cmp
or
push
cmp
dec
jge
mov
add
cmpsl
push
dec
sbb
in
jp
sahf
test
sub
rcrl
rcrl
inc
mov
mov
test
je
push
insl
fisttpl
xor
movsl
jle
dec
add
fldl
cmp
cmp
cmp
cmp
fwait
aas
nop
pop
mov
cltd
cmp
cs
loop
fidivrs
jbe
push
xlat
ds
mov
out
dec
and
test
mov
mov
pop
and
sar
fdivs
daa
sbb
mov
or
cwtl
mov
mov
mov
jns
movsl
mov
push
sbb
jne
ja
lcall
mov
shlb
cmpsb
cld
cmpsl
or
push
pop
imul
dec
aam
das
scas
lcall
arpl
movl
inc
je
lds
insb
xchg
lea
cmp
repnz
int
jb
loope
cmp
daa
cmpsl
jge
dec
stos
adc
dec
add
jbe
mov
add
nop
mov
int3
sub
fdivrs
sbb
xchg
fwait
js
xchg
das
ret
pop
movsl
sbb
jns
outsl
outsb
jecxz
push
jp
jne
jae
std
jmp
lods
lret
sub
push
arpl
xor
cmp
pop
push
cli
fisubrl
xchg
repz
mov
add
sub
and
out
xor
push
fs
mov
les
lea
nop
jle
jne
into
pop
arpl
cld
mov
fwait
xlat
cmp
mov
cmpsl
or
pop
fisttpll
cltd
shl
sub
add
and
jp
and
and
aad
loope
mov
lea
push
clc
int
dec
lods
out
lcall
sbb
cmp
into
push
add
das
jge
push
icebp
xchg
addr16
push
sbb
adc
xor
fwait
mov
fwait
sbb
fidivrs
mov
cmp
mov
add
repz
fsts
fiaddl
inc
sbbb
sbb
mov
shll
stc
inc
mov
add
fstp
pop
ret
dec
mov
dec
push
inc
insl
clc
mov
push
sbb
rep
dec
sub
and
aad
push
sbb
stc
jmp
push
fmuls
les
dec
test
cmp
int3
jae
sbb
mov
push
outsl
sbbb
cld
jecxz
clc
pushf
cmp
sahf
rolb
mov
in
and
out
fyl2x
mov
fsubrl
bound
push
nop
jmp
fsub
ds
clc
jge
popa
aad
and
rolb
adc
mov
inc
or
sbb
mov
xor
in
pop
push
dec
dec
xchg
mov
sub
lods
loopne
andb
dec
mov
lds
xchg
adcb
cmpsb
sub
adc
test
out
call
movsl
loop
inc
mov
pop
mov
loope
sub
xor
or
or
test
xchg
imul
scas
popl
addr16
cmc
xor
mov
and
push
hlt
stos
in
pop
mov
mov
jmp
imul
in
bound
ret
out
vcvttpd2dqy
jbe
cmpsb
decb
push
cwtl
xor
dec
jae
xchg
pushf
xor
jle
mov
pop
xchg
xchg
jl
jge
lods
fwait
mov
nop
sub
push
xchg
jmp
out
mov
fimuls
adc
loope
or
imul
leave
cwtl
or
or
idivl
jne
push
jns
sub
mov
xchg
or
scas
dec
roll
cli
jge
jae
shrb
orb
xchg
jg
aam
pop
insl
in
test
call
sbb
iret
lret
mov
pop
cmp
mov
cmp
xchg
imul
lods
push
add
or
stos
les
addr16
out
int3
sahf
stos
and
in
jns
mov
push
popf
fsubrs
pop
cmp
sub
cltd
ds
and
scas
add
jecxz
jmp
mov
xchg
shl
lods
lods
mov
mov
adc
mov
pop
les
push
mov
cwtl
cld
jge
in
adc
sub
or
mov
jle
inc
gs
cmp
xchg
fiaddl
xchg
jg
lahf
aas
dec
cld
sbb
je
mov
jae
fcmovnbe
push
in
negl
arpl
inc
push
loop
mov
pop
push
xchg
mov
add
push
repz
stos
jne
jge
push
int3
ret
call
and
inc
pop
mov
aam
adc
jp
mov
and
pop
repnz
xchg
into
mov
sub
cmpsl
mov
pop
push
cld
orb
stc
add
insb
in
mov
repnz
mov
fiaddl
scas
lds
lcall
xor
cmp
dec
addr16
sbb
adc
andb
lahf
data16
daa
mov
jae
inc
shlb
pop
lret
push
das
lods
xchg
cmp
es
jg
arpl
cmp
push
test
pusha
inc
cmpsl
std
jg
rclb
dec
cmp
xor
lret
sub
pop
or
cs
lret
icebp
adc
loopne
pusha
ret
xor
pop
lahf
icebp
ret
out
sbb
jg
es
mov
cltd
xor
sbb
adc
aas
ret
dec
push
jnp
push
jnp
fildll
xchg
out
dec
movsb
aad
push
xor
out
mov
ret
mov
cli
sti
addl
fwait
movsb
xchg
sub
mov
mov
aad
and
leave
adc
sbb
jbe
jmp
pop
adc
push
pop
mov
data16
mov
lods
sub
push
aaa
push
out
xor
dec
inc
jo
nop
inc
mov
outsl
jns
cltd
xchg
dec
pop
scas
mov
dec
test
push
repnz
out
dec
push
sub
sub
mov
push
add
aam
shlb
ss
loop
nop
pop
and
in
lds
jge
xchg
out
data16
addr16
sti
lock
xchg
mov
cmc
orb
push
inc
mov
dec
lods
loopne
sahf
push
fdivrl
imul
push
jecxz
xchg
hlt
pop
push
jl
mov
xor
inc
fucom
orb
and
test
fldl
js
sub
movsl
sbb
xor
test
andb
hlt
lods
stos
fwait
test
push
dec
in
dec
inc
pop
rorb
daa
sbb
je
jnp
xchg
nop
movsl
sbb
mov
mov
rclb
xchg
xchg
cwtl
insb
add
inc
mov
or
inc
mov
sti
decl
mov
dec
data16
out
int
fnsave
cltd
sub
push
push
das
lock
xchg
sbb
pop
xor
shll
dec
sub
push
mov
pop
xor
xor
jl
ja
icebp
arpl
push
cmp
sahf
mov
cmpsl
push
enter
out
stos
push
jecxz
cli
jle
and
jb
mov
lods
jno
jns
leave
aad
aam
xlat
mov
out
push
pop
cwtl
iret
in
and
mov
inc
pop
cmp
push
test
mov
cmp
daa
xor
fidivs
cmpsl
fldcw
ret
pop
inc
sub
jo
shrl
aad
adc
ficoms
mov
fs
jae
jns
fwait
mov
inc
or
fisubl
gs
out
test
ljmp
les
xchg
jbe
push
test
xchg
push
xlat
bound
nop
sbb
sbb
mov
adc
cltd
ret
inc
call
mov
lcall
aas
or
cltd
jns
vhsubps
mov
inc
add
dec
sbb
xchg
fbstp
testb
aad
mov
pop
mov
cmp
jmp
pop
or
rcr
push
aaa
repz
mov
cmp
pop
rol
fstpl
inc
push
lds
xchg
mov
mov
jae
lahf
jmp
and
fdivrs
mov
scas
inc
imul
mov
sbbb
out
fstl
das
and
stos
ds
roll
fidivrs
leave
clc
cmpsb
sbb
add
sahf
xchg
sub
mov
sahf
mov
addr16
and
dec
pop
sbb
fdivrs
out
repnz
es
mov
sarl
mov
xor
inc
mov
stos
mov
icebp
dec
clc
stos
ret
stos
adc
push
inc
fists
iret
nop
mov
pop
in
pop
les
pushf
push
add
cmc
adcl
or
or
and
insl
cwtl
and
jae
into
ljmp
push
push
push
mov
xlat
xchg
add
mov
mov
sub
sbb
into
cmp
outsl
addr16
adc
xor
movsb
aas
mov
xchg
pop
xchg
sub
add
fcmovu
fbld
xor
scas
in
mov
addr16
pop
jp
fcompl
dec
jae
rcll
pop
inc
sbb
fcompl
lret
or
insb
cmpsb
dec
push
cmc
cli
pop
add
xchg
push
jmp
jnp
mov
add
cmp
dec
and
rolb
mov
xchg
xor
mov
jecxz
jl
mov
mov
push
pop
xlat
mov
rorl
push
sub
imul
test
add
push
sbb
repz
xchg
jne
cmp
stc
push
mov
lcall
scas
ljmp
pop
jge
cwtl
in
mov
push
lcall
adc
inc
sub
adc
dec
out
pop
in
cmpb
scas
sbb
fldenv
mov
andl
fistpll
push
mov
fsubrs
cltd
imul
jp
fisubrs
test
or
les
xchg
insl
imull
push
adc
loopne
sub
push
mov
out
stos
bound
and
mov
movsl
dec
in
cmp
sub
push
insl
and
pop
push
or
pop
gs
iret
xchg
xchg
xor
adc
sbb
pop
xchg
clc
data16
mov
mov
xor
mov
cmp
ja
repnz
fs
idiv
mov
mov
ss
stos
push
pop
push
pop
movsb
and
mov
jecxz
lea
ds
jle
cmp
jl
and
and
xchg
xchg
mov
jo
sub
cmpsb
and
sbb
jg
stos
mov
or
mov
shlb
cwtl
add
jnp
into
test
stos
sub
sub
xchg
and
mov
in
mov
inc
out
xor
jno
icebp
das
pop
xor
aad
cmp
or
jnp
imull
sbb
xor
movsl
cwtl
leave
mov
add
mov
sub
push
iret
or
lcall
cmp
dec
outsb
lock
and
clc
mov
scas
inc
nop
dec
lock
out
inc
orl
cltd
mov
clc
lods
and
xchg
jp
ss
dec
push
mov
pop
dec
rcrb
mov
iret
push
jge
mov
or
scas
dec
mov
out
sbb
mov
mov
hlt
mov
push
ljmp
jmp
push
lret
pop
sbb
jg
mov
push
adc
sub
pop
sar
push
stos
movsl
sub
xchg
popf
sbb
das
cmp
nop
test
fidivrs
cmp
pop
imul
xor
pop
sub
or
repz
mov
stos
and
jb
xchg
ror
xchg
js
dec
je
add
imul
cld
cmp
or
or
iret
jbe
hlt
and
mov
das
in
dec
sbb
push
scas
int3
test
add
rcl
pop
leave
jle
insl
and
roll
inc
or
lock
inc
jb
icebp
push
xchg
xchg
mov
mov
es
loope
imul
repnz
stos
fistpll
loope
jle
mov
push
lods
popf
adc
jns
popl
cmp
pop
jmp
mov
repnz
mov
lods
repnz
pop
inc
cmp
nop
imul
out
lcall
pushf
and
out
ss
lret
jge
cwtl
xor
adc
jmp
and
jb
pop
ret
jno
popf
jae
xor
inc
inc
and
out
xchg
fnstenv
xchg
std
filds
mov
sub
iret
pop
clc
lods
data16
or
je
or
scas
xchg
pop
fisttpll
mov
lods
jmp
call
insb
int3
adc
sub
shlb
imul
lock
inc
out
push
loope
sbb
loope
cmp
dec
inc
call
test
or
jmp
fs
outsl
jge
movsl
inc
rorl
cltd
lcall
test
loop
push
jno
mov
xchg
xchg
mov
cmp
pop
jno
and
pushf
jae
mov
sti
repnz
jg
enter
push
pop
pop
in
nop
sub
sub
cs
add
xchg
cmp
mov
pop
pop
inc
jno
aad
andb
mov
lahf
call
sub
insl
or
pop
jecxz
pusha
mov
aas
xchg
cwtl
mov
mov
stc
pop
out
pusha
cmp
pop
js
mov
jbe
and
sbb
lret
lock
sbb
notb
negl
sbb
je
in
out
ss
cwtl
add
sahf
add
xchg
imull
and
adc
mov
add
add
cmpsb
mov
test
pop
xchg
xchg
add
roll
mov
add
cmp
stos
dec
mov
sbb
jne
test
sub
add
mov
dec
fisttps
lods
add
sub
in
and
int3
call
cmpsb
jb
lcall
ss
push
std
scas
inc
cwtl
lods
mov
adc
pop
loop
sub
inc
add
jo
push
or
sub
inc
and
cmpb
or
arpl
jp
dec
adc
fnstcw
pop
sbb
aam
aad
outsb
fwait
xchg
call
mov
repnz
popa
mov
incl
add
add
sbb
pushl
add
xlat
jnp
xchg
into
ret
mov
and
js
decl
in
dec
push
ret
or
mov
dec
hlt
inc
jbe
dec
or
aam
cwtl
lret
into
pop
icebp
ficompl
enter
mov
mov
sbb
stos
test
sbb
sarb
xchg
xchg
sbb
push
lret
aaa
in
push
int
adc
lcall
sub
shll
stos
scas
mov
testl
pop
mov
pop
mov
adc
outsl
xor
pop
or
mov
add
repz
mov
sub
add
cmpsl
andb
mov
mov
lret
xor
pop
arpl
xchg
jmp
mov
xchg
outsl
scas
imul
and
xor
jo
dec
cmpb
add
or
mov
or
mov
es
push
dec
bound
push
and
cmp
mov
mov
pushf
pop
cmp
loope
xor
inc
dec
bound
bnd
arpl
jg
or
sub
sahf
xor
leave
in
pop
add
adc
adc
xchg
mov
mov
mov
jb
jl
xor
adc
xchg
test
cmp
dec
jb
stc
mov
xchg
push
jl
add
sbbl
xorl
jmp
inc
pop
enter
cltd
mov
clc
sbb
mov
or
movsb
mov
push
das
rclb
ucomiss
fdiv
aas
or
xlat
je
pop
dec
push
outsb
mov
cmp
push
out
xor
sbbb
or
cwtl
ficomps
cmp
xchg
das
aam
movsl
jo
ds
mov
xor
mov
outsl
mov
lds
loope
adc
push
jbe
dec
adc
int3
sub
lock
sbb
cmp
and
pushf
or
shll
jecxz
push
or
dec
test
fnstsw
lods
jo
cmpsb
push
xor
cmp
sbb
and
jg
popf
addl
mov
mov
mov
or
add
outsl
cmp
test
fwait
scas
mov
js
stc
sbb
aad
push
xchg
notl
cmp
idivb
repnz
test
std
sub
andb
repnz
call
mov
xchg
fldcw
mov
sbbb
mov
enter
sub
fstps
es
mov
jmp
in
pop
push
inc
push
mov
xchg
or
sub
or
cmp
leave
fldenv
or
inc
cmp
cmp
out
das
fldenv
jnp
inc
sbb
mov
pop
push
xchg
xchg
sub
lea
mov
mov
cmp
jp
scas
testl
lret
loope
mov
sbb
mov
in
into
test
and
scas
xlat
out
xor
pop
jle
pop
in
xor
push
adc
insl
leave
inc
repnz
pop
sbb
sbb
popf
add
mov
sbb
push
inc
push
aaa
push
fcompl
push
inc
cwtl
mov
mov
ret
ss
push
fldcw
jp
jae
fistps
pop
hlt
icebp
fists
cmp
mov
xchg
xchg
cmp
pop
in
stos
mov
addr16
gs
movsb
and
push
xchg
mov
lcall
or
mov
out
or
mov
enter
pop
std
mov
fsubs
mov
jbe
mov
sbb
inc
dec
test
bound
pusha
dec
xor
mov
mov
jge
insl
cli
sub
mov
addb
and
hlt
and
cs
std
cmp
dec
lret
sbb
call
mov
lret
das
sub
ret
iret
jge
cld
mov
mov
mov
xlat
adc
arpl
outsl
inc
xchg
adc
icebp
out
adc
xchg
clc
int3
and
ds
leave
mov
loop
fs
or
lahf
fistpll
sbb
out
inc
xrelease
ret
loope
mov
xor
push
or
push
pop
xlat
push
in
jno
fistl
flds
jmp
jnp
mov
and
dec
mov
xchg
jl
addr16
cmc
pop
inc
push
mov
sbb
mov
xor
dec
rclb
pop
xchg
jge
jge
sub
insl
ds
cmp
dec
aam
push
sub
push
sbb
aas
nop
lock
inc
sbb
mov
xchg
mov
gs
into
ficompl
lock
imul
lret
pop
popf
bound
scas
add
lods
cmp
sbb
or
imul
xor
das
pop
dec
sub
sub
ljmp
mov
cmpsb
xor
pop
xlat
xor
mov
push
sbb
sub
dec
or
shll
iret
loopne
inc
inc
dec
mov
cmc
push
cmp
adc
sbb
dec
jne
imul
or
pop
cld
out
push
int3
out
dec
mov
sar
and
outsl
ret
add
rdpmc
jo
jmp
aaa
inc
sbb
or
pop
lcall
jge
pop
test
jne
aas
sbb
mov
fwait
mov
jecxz
dec
and
inc
and
gs
loopne
xor
out
cmp
lahf
jno
arpl
repnz
mov
loop
pop
pop
insl
test
cmpsl
and
out
mov
push
jmp
adc
inc
and
js
jp
fs
testl
sbb
inc
packssdw
jns
nop
mov
or
outsl
ljmp
repz
sub
imul
out
and
repz
adc
mov
iret
nop
jae
lcall
push
ja
sahf
imul
loopnew
lahf
cmp
push
and
pop
sub
in
sub
add
xor
popa
pop
jae
mov
mov
shll
sub
aas
xchg
mov
jmp
add
dec
xchg
lds
or
movsl
dec
jno
frstor
pop
and
fwait
and
mov
cmpsl
mov
xchg
or
cmp
push
call
xchg
subb
arpl
cmp
or
adc
and
insl
jne
xor
cmp
inc
int3
adc
mov
insl
fcoms
pop
or
adc
dec
mov
push
insb
fistpl
clc
rcr
je
and
dec
orl
lret
mov
pop
dec
jne
push
adc
daa
shl
xchg
dec
lret
inc
cmp
lcall
insb
ds
xor
pushf
je
decl
ds
sbb
stos
lods
nop
repnz
pop
lock
subb
fdivs
imul
movsb
or
outsb
jge
adcb
mov
jp
mov
clc
stos
lea
insl
lret
dec
jae
xlat
in
xor
mov
jmp
and
mov
loope
xchg
das
sub
xor
icebp
out
mov
idivl
mov
add
dec
jl
loopne
ja
sbb
mov
push
mov
dec
lahf
mov
je
outsl
push
xchg
sbb
imul
out
out
pop
movsb
popf
nop
popfw
popa
add
xchg
mov
adc
mov
nop
test
xlat
icebp
ficoms
cmpsb
sbb
and
shrl
sub
inc
int
jno
push
leave
pop
adc
clc
jbe
add
fs
and
das
ss
ja
pop
inc
pop
jb
mov
jl
mov
lcall
cmp
and
lds
sahf
outsb
mov
mov
ss
clc
cmp
pop
cmc
testb
jge
sub
ljmp
daa
ret
mov
fidivl
pop
jb
and
in
or
fsub
xchg
stos
push
ret
ret
dec
mov
pop
pop
aaa
sub
mov
les
xchg
rcrb
lahf
imul
mov
mov
fsubp
xor
lret
aas
lock
xor
lock
shrl
shrl
jg
aad
iret
xor
es
dec
or
inc
mov
xchg
roll
dec
xlat
into
sarb
into
mov
pop
xor
sarl
fstpt
xchg
xor
fsubp
aam
daa
mov
fndisi(8087
add
cmp
out
jp
pop
push
lods
andb
lcall
jmp
sbb
inc
jns
push
jl
fwait
aas
fdiv
cmp
xchg
daa
push
flds
insb
repz
sti
andb
pop
call
jb
add
or
push
xor
stos
dec
std
cld
mov
xchg
ret
cmp
xchg
hlt
jae
fiaddl
aaa
sub
or
sbb
jbe
xor
push
fsubl
lods
xor
mov
dec
aad
pop
std
xor
inc
jno
and
pop
xchg
lcall
lea
and
mov
lret
or
mov
pop
pop
insl
imul
into
js
pop
jno
mov
dec
fstpl
cmc
ret
push
cltd
mov
insb
xor
mov
dec
jnp
jnp
jno
inc
push
out
les
enter
mov
sbb
pop
push
mov
fnsave
icebp
sahf
sbb
and
clc
dec
rcl
jae
pop
push
or
adc
ret
mov
mov
push
adc
les
sbb
enter
test
insl
xor
adc
out
in
movsl
negb
or
add
sub
mov
jge
xchg
jns
pop
aaa
cmpsl
mov
das
js
sbb
sub
outsl
lods
enter
in
les
das
pop
jb
add
fwait
mov
mov
push
shl
fwait
inc
pop
and
lret
mov
bound
xor
into
pop
cmc
sub
testl
xor
dec
pop
push
repnz
imul
roll
add
and
idivl
je
bound
push
loopne
mov
jae
inc
mov
dec
sub
repnz
stc
decb
lret
cmpsb
loop
lea
or
es
idivb
jp
ljmp
cs
adc
sahf
and
pop
mov
fiadds
mov
test
and
scas
std
add
test
adc
mov
ret
xor
movb
inc
add
out
sub
mov
xor
lahf
ja
icebp
fwait
lret
jnp
jno
negb
jl
lret
push
mov
inc
xor
push
lret
jg
cmp
decb
mov
mov
mov
pop
aad
adc
mov
mov
insl
inc
xchg
xor
cmp
xor
mov
movd
jecxz
popa
in
aas
stos
out
icebp
cmp
push
cmpsb
daa
hlt
xchg
mov
adc
outsl
dec
in
int
orb
push
bound
mov
and
push
push
pop
xchg
lea
dec
dec
ficoml
sub
outsl
lret
lret
mov
inc
xchg
xor
inc
push
fmul
sub
xchg
stos
out
and
movsb
sub
imul
mov
loopne
adc
stos
add
add
out
inc
andl
cltd
jae
call
mov
xchg
xor
daa
xchg
stc
cmp
mov
dec
lds
pushl
shll
xchg
rcrl
xchg
or
das
xchg
in
mov
pop
adc
adc
ljmp
imul
lods
addr16
pop
mov
icebp
mov
cmp
repz
sbbl
arpl
sarl
jns
enter
lcall
rcl
mov
lods
or
call
out
ljmp
out
loopne
mov
mov
push
test
mov
adc
mov
mov
out
mov
lock
rcrb
push
adc
dec
or
xor
and
push
cmc
dec
and
jo
cmpsl
push
mov
xor
enter
repnz
lock
jo
pusha
les
cmp
lock
or
jle
jmp
cli
xchg
cltd
stc
sub
outsl
gs
stos
dec
fdivrp
dec
stc
inc
adc
jae
pop
adc
xchg
pusha
repnz
scas
dec
cmp
dec
mov
push
or
push
js
ss
pop
pop
xchg
int3
pop
outsb
fmuls
pop
jl
mov
add
mov
xor
dec
daa
sahf
adc
aam
sub
js
bound
push
stc
popf
mov
out
lods
push
pop
or
add
inc
add
repnz
popf
xlat
add
mov
pop
clc
pop
jle
cld
fs
sahf
mov
mov
xor
std
inc
cmp
lret
mov
lahf
push
pop
dec
fst
add
push
inc
imul
sub
cld
jle
imul
testb
scas
cmp
or
mov
mov
add
iret
ret
mov
inc
pop
rclb
lods
shrb
repnz
in
cmpl
out
imul
rcrb
fistl
fcmovne
test
call
dec
cmpsb
movsl
inc
insl
sub
mov
pop
test
mov
movsl
dec
cmp
or
sti
lret
dec
pop
inc
cld
pushf
push
les
or
mov
in
nop
lretw
xchg
enter
or
and
fnsave
xchg
xchg
inc
addl
dec
fiadds
sub
rclb
and
sub
jp
pop
mov
pushf
cld
lahf
inc
int3
mov
ret
pop
in
and
gs
add
mov
push
inc
adc
or
inc
loop
mov
push
jg
popa
jmp
mov
or
sbb
pushf
sbb
jmp
sahf
aad
mov
rcrb
shlb
pushf
sub
xor
hlt
push
and
add
jmp
das
into
mov
xor
test
int
add
test
movl
jno
aas
add
stos
arpl
gs
fists
sub
cmpsl
push
call
add
cmp
sub
aas
loope
sub
jge
jno
in
inc
add
data16
clc
cli
scas
movsb
mov
ret
insb
lods
or
loope
adc
lods
cmpsb
add
lea
hlt
aas
nop
loopne
subb
xor
ja
mov
lahf
clc
xchg
dec
mov
and
xchg
andb
sbb
pop
out
je
pop
sub
jb
lret
dec
insb
cmp
adcl
dec
bound
and
jle
in
inc
xlat
sub
hlt
xchg
shll
jne
jmp
jns
ret
xchg
je
mov
lahf
push
cmp
mov
inc
call
cli
mov
pusha
pop
mov
out
out
ja
xor
jl
push
ja
in
inc
dec
jnp
into
int3
sbb
lods
sbb
adc
bound
fwait
inc
fidivs
sbb
adc
xchg
adc
mov
outsl
fwait
or
inc
sub
cltd
mov
push
repz
ret
mov
into
add
or
sbb
movb
iret
push
daa
inc
mov
js
into
loopne
push
std
arpl
imul
push
ja
ds
lea
inc
dec
outsl
mov
mov
inc
mov
jg
sub
xor
aas
incb
pop
mov
inc
jo
jae
jp
insl
cmc
sahf
or
aaa
and
cs
jmp
adc
pop
insl
pop
lcall
clc
fs
ljmp
push
mov
push
mov
in
jnp
sbb
jl
cmp
or
mov
sarl
fwait
in
movb
add
das
jp
ds
cmp
dec
mov
adc
movl
adc
mov
sub
fs
sbb
mov
shrl
sbb
pop
or
sub
xlat
arpl
dec
test
pop
in
mov
imul
mov
inc
ds
cmp
jle
jmp
ljmp
jns
mov
xchg
mov
xchg
mov
mov
adc
dec
imul
push
aad
ret
mov
jns
lahf
add
sub
jg
and
jmp
mov
imull
fisttpll
sub
out
adc
push
js
mov
rclb
jbe
xchg
push
test
shll
loop
cld
lods
popa
repnz
jge
test
dec
and
sub
or
and
js
movsb
lea
inc
movsl
xchg
jmp
fildl
jge
cli
fs
mov
pop
jne
imul
sub
gs
test
xor
xchg
nop
insb
movsb
dec
xor
or
loop
ds
in
incb
xchg
ret
ret
aad
test
mov
cmc
into
push
mov
ljmp
xor
dec
sahf
fldt
movsl
cmc
xlat
sub
icebp
sti
ss
mov
pushf
add
add
jmp
bound
cmpsb
enter
clc
inc
and
les
andb
pop
int
mov
jo,pn
push
lea
in
shl
xchg
inc
jge
aaa
xor
sbb
aad
je
push
mov
add
ss
push
cmp
aaa
jno
insb
jecxz
ja
lods
adc
jg
arpl
inc
mov
cmp
xchg
and
xor
ja
xlat
mov
adc
stc
xchg
mov
cmp
bound
mov
adc
xchg
jle
cmp
jecxz
out
or
insl
sbb
jp
xor
fwait
adc
push
mov
cmpl
mov
movsb
or
inc
int3
mov
add
add
repnz
loope
jle
mov
test
fdivl
call
xchg
xor
mov
mov
mov
mov
insb
jns
or
daa
ds
bound
scas
xchg
sbb
cwtl
jl
sub
popa
cmpsb
adc
sbb
jo
in
dec
gs
inc
test
movsl
daa
call
dec
mov
in
cs
sbb
enter
mov
and
adc
push
cmpsb
sub
or
jl
stos
xchg
lods
pop
cmp
xchg
cmp
ret
lret
and
or
in
mov
lock
cmp
and
xchg
stos
inc
inc
mov
add
movsb
movsb
test
idiv
cmp
cld
xlat
fldenv
mov
xor
jns
int3
xchg
cmp
nop
dec
fnsave
or
add
stos
jno
jle
sbb
and
sub
jp
add
outsl
jb
jecxz
dec
pusha
popf
lret
aad
mov
adc
pop
movsl
pusha
cmp
xor
and
pushf
pop
popa
adc
mov
xor
inc
jecxz
mov
pusha
push
pusha
mov
shlb
in
dec
jle
dec
push
mov
lahf
scas
pop
lcall
sbb
and
jb
hlt
pop
das
mov
gs
shlb
jno
mov
push
sub
pop
pop
insl
jae
xlat
cmpb
dec
test
cmp
pop
and
outsb
adc
sahf
std
lcall
iret
sbb
sbbl
loope
iret
add
push
fs
nop
mov
bound
jnp
mov
cmp
orb
dec
mov
fnstcw
flds
jo
adcb
adc
int
xor
shrl
push
rcrl
or
rol
bound
sub
lock
sub
in
and
stc
pop
leave
sub
scas
pop
jne
aaa
in
jle
mov
test
xor
mov
clc
call
sub
xor
pop
add
stos
and
mov
pop
shll
mov
or
movsb
rolb
add
xor
push
clc
cmp
ficoms
icebp
xor
pop
push
jb
std
in
out
dec
outsb
ret
xchg
fidivs
sti
cmc
and
aaa
sub
ficoms
repz
and
int
roll
repz
lcall
fwait
pop
fstl
sbb
fwait
scas
adc
jnp
adc
mov
mov
les
and
in
xchg
sti
mov
inc
cmpb
adc
push
xchg
and
ljmp
xchg
adcl
cwtl
xor
mul
test
jnp
fistpll
aaa
in
push
int
pop
mov
and
and
mov
repz
outsl
rolb
dec
loop
sbb
adc
int
aaa
dec
cld
repnz
push
push
inc
push
xor
jno
add
jecxz
arpl
add
mov
cmp
test
pop
xchg
jl
dec
sbbl
inc
cmp
adc
sbb
xchg
out
or
negb
out
cli
sbb
cs
cmpsb
lret
mov
push
adc
jg
xor
mov
int
jg
cmp
movsl
in
test
push
sub
pop
cwtl
add
jo
mov
es
jo
mov
push
insl
adc
xorb
xor
in
cwtl
aam
dec
mov
dec
jns
cli
ljmp
out
push
enter
xchg
sbb
pop
jnp
inc
inc
pusha
mov
out
and
loopne
vmwrite
mov
int3
sbb
pop
gs
mov
stos
repnz
mov
scas
mov
mov
mov
insb
mov
leave
mov
mov
into
inc
mov
inc
add
sub
sub
xchg
mov
sbb
lds
gs
inc
ret
sahf
inc
cld
lcall
cltd
sub
dec
push
sbb
test
mov
cltd
aad
cmp
pop
popa
dec
imul
pop
ds
xchg
loop
int3
insb
pop
cmp
dec
insb
fs
push
xchg
mov
mov
lods
sbb
or
test
insb
jae
flds
xor
mov
mov
das
and
loopne
les
pop
push
sub
test
pop
rolb
pop
notb
pop
or
push
jns
sub
repz
push
loop
imul
inc
scas
xchg
push
xor
or
cmp
pop
and
and
out
mov
sub
ss
jae
add
and
iret
inc
ficoml
mov
pop
test
out
out
pop
cmp
test
mov
xchg
xchg
pusha
clc
inc
adc
pop
in
call
sub
xchg
push
shrb
ss
stc
insb
sbb
jp
xor
jb
or
bnd
imull
cmp
mov
mull
push
test
insb
inc
and
xor
sbbb
jne
inc
clc
xor
movsl
fs
notb
mov
add
cmp
sub
mov
mov
adc
inc
fmulp
dec
or
xchg
pop
pop
or
jge
repnz
icebp
jns
mov
lret
mov
cmc
imul
lods
xchg
mov
pop
mov
push
inc
in
jge
jnp
rcrb
lock
jp
test
sbb
testl
push
or
scas
stc
xchg
les
pop
es
loop
out
les
jecxz
call
jecxz
jle
mov
mov
sub
mov
cld
and
jmp
sbb
cmp
xchg
jae
sbb
icebp
mov
push
mov
popa
fidivl
dec
repnz
dec
xchg
shlb
add
push
inc
testb
jge
or
daa
cmp
std
jae
jno
dec
jnp
xor
movsb
mov
sbb
push
jo
fwait
ljmp
jg
mov
sti
into
cmpsl
mov
cld
imul
sbb
call
mov
xor
fldl
fistpll
sahf
sti
push
rolb
aad
andb
xchg
add
out
out
std
arpl
lock
pushf
push
push
ds
shr
lds
adc
push
dec
rol
mov
push
xchg
or
mov
pushf
aaa
loopne
dec
out
pop
inc
outsl
das
cs
pop
jns
iret
adc
cmp
add
pop
insl
xor
cmp
add
jg,pn
or
and
or
inc
cs
mov
sbbb
sub
mov
ss
jp
mov
fsubp
inc
jge
repz
push
notb
mov
xchg
ret
shll
sahf
popf
test
adc
add
pop
in
ds
or
bound
cs
push
sub
and
sahf
popf
mov
sbb
lds
sbbl
cmp
test
xor
jne
adc
inc
out
dec
jp
mov
inc
cmpsl
daa
push
push
lods
ja
std
push
mov
mov
mov
int
pop
or
in
sbb
sbb
idivb
sub
jp
pop
dec
add
outsl
lock
or
inc
lret
ret
gs
mov
cmp
cli
push
push
sub
and
dec
sub
dec
push
sub
aam
in
divl
pop
xchg
mov
xor
enter
mov
mov
cltd
and
in
jp
out
jl
mov
fcomp
popf
cmp
cmp
fstpt
inc
bound
aas
jo
add
push
mov
lea
sub
ja
pop
xchg
jb
push
cmpsl
sbb
dec
sub
mov
sub
cmc
or
jne
mov
cmp
mov
push
in
sahf
test
test
shll
mov
cmp
dec
mov
jecxz
jae
sub
mov
inc
push
or
dec
jne
mov
add
sbb
ret
notl
repz
and
mov
jb
inc
push
mov
inc
pop
add
shll
or
insb
push
inc
cwtl
jnp
shlb
sbb
jecxz
inc
fnstenv
mov
std
stos
cmp
sbb
ds
dec
pusha
xchg
ljmp
loopne
or
dec
push
test
mov
mov
dec
fdivrp
insb
cmpsl
stos
pushf
loop
and
xor
stc
mulb
jge
std
lock
push
push
fdivs
xchg
pop
mov
mov
fs
lret
pop
rcrb
xchg
ret
rcrb
jo
xorl
pop
pop
and
mov
fildll
xchg
cmc
or
xchg
lret
and
daa
scas
es
cld
repnz
jmp
cmp
sbb
cmp
mov
jno
das
popa
mov
xchg
mov
xchg
sbb
lea
sbb
frstpm(287
sub
cld
and
aas
pop
mov
add
decl
xor
inc
outsb
adc
stc
xor
add
lods
cmc
stos
dec
test
sub
in
test
leave
push
dec
xor
dec
pop
adc
rorl
sbb
push
add
dec
dec
lock
mov
jns
mov
adc
js
mov
sahf
jbe
loope
mov
adc
mov
ja
or
jnp
or
ja
jle
push
mov
es
ljmp
jg
daa
in
cmpsl
fildl
sbb
mov
scas
sbb
aaa
xlat
lock
dec
test
xorb
iret
lods
cmpsb
mov
dec
jmp
or
cmp
and
inc
shlb
pop
jae
mov
and
xor
mov
and
pushf
lret
jno
rorb
pop
and
imul
sbbb
cmp
ret
outsl
pop
in
pop
scas
inc
inc
mov
xchg
sub
cld
cmpsl
xchg
hlt
inc
xor
ja
xchg
movsl
aas
nop
xor
and
outsb
sahf
push
push
loope
dec
call
xchg
das
mov
fcoml
push
stos
outsb
and
les
negb
lock
cmp
cmp
lcall
or
mov
xor
adcb
xchg
repnz
pop
roll
cmp
pusha
xor
iret
ljmp
jmp
pusha
inc
dec
loopne
lods
jmp
and
xchg
dec
sti
add
sub
in
dec
dec
mov
notl
mov
lods
jbe
mov
jno
dec
jno,pt
cltd
jb
es
cmpl
in
dec
data16
pushl
xor
gs
or
inc
ljmp
fisttps
fistps
mov
enter
sub
das
and
cld
jb
push
cs
pusha
incl
cld
lds
aam
sub
imul
and
enter
dec
loopne
bnd
add
aam
mov
movsb
popa
xor
xchg
aaa
lods
push
sbb
and
addr16
mov
jb
sahf
adc
mov
mov
jns
ret
xor
out
shlb
add
inc
outsl
mov
int
das
dec
mov
sar
int3
xlat
setnp
mov
mov
dec
pop
inc
mov
jnp
int
sub
call
in
sub
dec
pop
jb
mov
in
lahf
repz
add
or
ja
lretw
pushf
gs
xchg
xor
inc
pop
push
popf
add
adc
lea
or
loop
or
xor
push
lock
insl
mov
xor
aaa
xor
adc
xchg
push
fcmovnbe
push
ret
jmp
jmp
sbb
inc
add
dec
mov
jg
push
mov
sub
pop
pop
test
or
pop
or
fiadds
inc
pop
jbe
sub
rorl
test
dec
lcall
ret
fsubrl
mov
pop
stos
xchg
sarb
lret
insb
ss
push
jb
pop
mov
loop
addr16
mov
cmp
mov
hlt
shrl
xor
xlat
xchg
and
iret
bound
mov
xrelease
xchg
mov
mov
sub
dec
dec
scas
aaa
adcb
add
cmpsb
movsl
jp
addb
mull
dec
pop
add
cmc
mov
lds
add
cwtl
in
ljmp
enter
adc
leave
push
imul
jno
fsubrs
fdivl
lods
mov
arpl
mov
movsl
ret
lods
mov
push
jl
xchg
and
loopne
xor
lods
or
cmp
jbe
rcll
mov
sub
orb
fs
inc
sahf
push
or
cmp
stc
xor
jecxz
jle
ret
xchg
xor
in
int
sahf
cmc
cmp
jno
push
outsl
stc
pop
cmpsb
mov
mov
inc
movsb
rcll
sbb
test
mov
fcomi
push
jecxz
ret
lds
mov
sub
jne
cmp
mov
pop
adc
and
xchg
mov
pop
xor
push
mov
or
aam
in
dec
pop
lahf
sbb
xor
cs
sub
add
mov
into
aas
pop
lds
mov
loope
sbbb
cltd
mull
mov
lret
fstpl
sub
imul
pop
lods
andb
mov
call
outsb
push
mov
test
aad
and
xchg
dec
stos
test
outsb
inc
dec
sti
xchg
shlb
fmulp
stc
mov
cmp
mov
int3
inc
fs
sarl
in
or
or
int
push
pop
lods
xchg
jp
jne
ss
xchg
out
mov
cmp
mov
dec
mov
and
xchg
push
sub
outsb
inc
sahf
and
dec
xchg
adc
dec
add
fcoms
mov
add
inc
testb
mov
aad
xchg
jge
cmp
jne
cmc
cmpsb
cmpsl
daa
mov
mov
pushf
dec
daa
mov
mov
jge
and
iret
mov
pop
inc
sbb
cmpl
ret
insl
es
xorb
lds
mov
xor
mov
fs
dec
out
leave
test
mov
in
add
repnz
push
jmp
in
aad
sub
inc
std
fdivp
push
stos
cmpsb
fisttpl
outsb
mov
sbb
push
test
push
repnz
sub
scas
arpl
adcl
ret
fiaddl
push
gs
imul
add
mov
lret
je
es
cmp
in
and
out
cli
xor
aas
popf
mov
add
imul
xor
jg
or
jns
scas
xchg
adc
jle
out
ficoml
dec
sub
in
je
push
mov
cmpsl
addl
lcall
imul
push
push
xor
mov
jl
mov
cmp
popa
ljmp
test
imul
mov
subb
dec
lods
cmp
int
add
mov
dec
mov
insb
push
inc
in
jnp
lock
sub
orb
mov
lahf
icebp
out
loopne
sbbb
insb
lret
jl
add
jle
cmp
test
vmwrite
xor
cmp
fimuls
imul
les
notl
addr16
imul
in
mulb
sub
add
sti
stc
or
loope
inc
sbb
dec
ficoml
xchg
cli
add
lea
je
gs
push
dec
mov
sbbb
pop
imul
addl
bound
jb
xor
cmpsl
pop
sahf
push
inc
xor
jb
adc
js
int
mov
add
in
subb
test
dec
fstps
lahf
mov
lret
mov
xchg
imul
jbe
dec
out
jecxz
push
mov
dec
outsl
pop
aaa
mov
les
lret
xor
cmp
cmp
jne
leave
mov
pusha
mov
iret
mov
aad
dec
push
mov
xorb
addr16
mov
push
bound
fldcw
test
mov
adc
xchg
cmp
mov
xchg
push
push
pop
imul
negl
pop
fwait
jl
sub
arpl
xor
xor
cmp
mov
inc
popa
mov
pop
pop
lods
sbb
push
cmp
push
cs
repz
add
movsl
jo
inc
mov
push
int
es
inc
or
bswap
xor
out
or
adcl
shlb
mov
inc
fmulp
outsb
push
enter
pusha
cli
hlt
outsb
int3
cwtl
mov
xchg
xchg
repz
int
addl
mov
imul
or
out
pop
mov
cmpsb
aas
xor
in
ret
subb
push
sub
cwtl
sub
push
aad
ss
pushf
sahf
aas
ja
mov
adc
mov
push
cld
push
les
fidivrs
out
clc
mov
lcall
jge
push
dec
scas
movsl
push
mov
shll
xchg
ss
mov
mov
cmpsl
push
pusha
push
les
addr16
incl
scas
es
mov
lret
inc
xchg
jno
scas
stos
aad
divb
push
jb
pop
cmp
add
dec
xchg
je
or
inc
cwtl
add
lods
jle
int
insl
push
shrb
loopne
sarb
mov
sbb
dec
push
aaa
out
push
stos
fcmovnb
sbb
sub
movhps
jecxz
sbb
dec
data16
movsb
into
psllq
adc
jns
mov
adc
stos
mov
sbb
mov
or
mov
cld
push
rol
js
clc
test
xor
mov
nop
aad
and
mov
mov
cs
jg
mov
adc
shlb
gs
xchg
dec
stc
fldcw
add
sub
bnd
or
mov
ljmp
or
cmp
mov
sbb
push
lods
pop
lods
jne
sets
sbb
inc
and
xor
fmulp
cltd
add
adc
fwait
cmpsl
pop
mov
pop
push
push
cltd
test
dec
popa
xchg
add
push
sub
or
pusha
mov
ret
shlb
cmpsb
cmp
push
jl
sbb
jno
lret
sti
adc
push
sub
add
pushf
pusha
or
adc
jp
push
insb
ret
pop
notb
xor
ret
out
addr16
std
cli
test
in
stos
hlt
stos
paddw
inc
adc
xchg
pop
mov
stos
push
stos
inc
pop
xchg
or
fdivl
inc
in
inc
or
jle
cmpsl
aad
gs
push
xchg
cmp
and
mov
xor
and
loop
je
push
adcl
scas
ja
ret
pop
fxch
pop
sub
iret
test
mov
jne
stos
out
sbb
call
sbb
scas
jge
clc
xor
popf
test
pop
cmpsb
test
dec
adc
jecxz
sbb
std
mov
popf
jns
pop
jns
outsb
inc
movsb
mov
adcb
out
mov
mov
sbbb
fcoms
sub
outsb
fildll
adc
addl
fildl
xor
xchg
clc
outsl
or
mov
ljmp
mov
adc
lcall
xor
mov
repz
popa
add
or
adc
lods
fstpt
fmull
push
mov
mov
or
int
mov
xchg
push
daa
and
pop
lret
sbb
mov
lret
leave
cmp
push
pop
push
in
in
xchg
cmc
pusha
dec
pop
adc
mov
orl
xor
dec
push
mov
mov
xor
es
shr
jns
ljmp
fisubrs
outsl
out
dec
scas
test
repz
mov
push
cmovno
mov
mull
pop
daa
fadds
inc
lahf
lret
inc
mov
inc
jl
stc
shlb
movd
test
or
outsb
or
cmp
imulb
mov
ljmp
xchg
push
jno
sbb
enter
add
pushf
push
dec
imul
jb
sbbb
mov
push
pop
and
aam
push
cmp
mov
adc
mov
inc
pushf
nop
dec
cmc
xchg
js
enter
mov
adcb
push
ds
aam
xchg
pop
sti
pop
push
pop
sbb
xor
lock
sbb
inc
mov
xchg
loope
xchg
jbe
jns
pusha
ss
fdivrl
push
enter
lock
pop
test
jecxz
outsl
push
mov
add
or
int3
outsb
mov
insb
xor
add
xor
test
mov
sbb
pop
xor
out
inc
fldz
push
outsl
imul
fsts
add
cmpsb
int3
aad
mov
mov
mov
or
cwtl
xchg
sbb
je
pop
pop
mov
dec
sub
repnz
iret
push
dec
aas
sbb
cmp
push
mov
test
xchg
outsl
sbb
mov
mov
jmp
push
jle
jne
insl
adc
sbb
xor
ret
mov
shrl
or
dec
xchg
lret
xor
fwait
push
or
in
lods
das
mov
add
mov
mov
jno
pop
sub
jmp
dec
pop
jge
lock
cmc
arpl
call
jecxz
push
mov
and
repnz
push
sar
repnz
fs
bound
adc
ljmp
pop
imul
and
pop
mov
call
shl
ss
and
add
lds
and
mov
insb
xor
and
pop
jbe
repz
cmp
xchg
test
push
imul
aaa
lret
sbbb
sbb
xor
fs
jo
rolb
loope
jmp
imul
jo
imul
sbb
and
addr16
and
jbe
mov
js
daa
imul
xor
xchg
imul
push
dec
pushf
push
cmp
push
loop
dec
dec
inc
mov
mov
mov
cmp
push
adc
std
pop
ffree
iret
and
lcall
xor
add
insl
dec
popf
dec
jbe
or
pop
rclb
into
cmp
jnp
mov
loope,pn
adc
jmp
out
sub
inc
adc
in
loopne
cld
inc
xlat
inc
out
jmp
or
mov
adc
mov
pop
adc
dec
mov
ret
fdivrs
push
cs
lret
xor
cmc
push
push
lahf
out
arpl
sti
iret
and
cwtl
aaa
adc
mov
mov
adc
lret
out
dec
xchg
aad
mov
imulb
add
inc
jne
sub
pop
push
sub
mov
cld
hlt
les
push
push
sahf
test
lods
jne
gs
popa
pop
mov
or
cmp
loop
jbe
xchg
dec
mov
lret
enter
out
popa
ljmp
int
test
fiaddl
scas
add
dec
mulb
or
rol
jnp
mov
mov
repz
mov
aas
sbb
and
xchg
or
inc
lret
add
pop
add
lods
cmpsb
cmp
jae
inc
xlat
cmp
jns
out
cmc
lret
lcall
mov
ds
adc
sbb
cmpsl
fmuls
add
cwtl
pop
clc
jbe
popf
scas
shll
imul
out
sahf
pop
push
enter
push
aas
mov
call
das
jae
insb
fchs
outsb
adc
mov
xor
jle
jno
xchg
and
int3
jnp
jo
pop
popa
and
clc
mov
faddl
cmc
sahf
xlat
in
sbb
loop
ret
pop
mov
ja
dec
mov
lahf
xchg
push
xlat
bound
test
gs
addr16
xor
mov
hlt
mov
push
int
cltd
jae
fcompl
sbb
aam
mov
xchg
mov
jo
mov
and
dec
sti
sarl
mov
dec
mov
cmp
outsb
mov
lahf
inc
test
sbb
lods
mov
xor
sub
add
mov
loop,pt
pop
mov
push
push
je
jb
int3
mov
or
xchg
test
adc
dec
dec
jo
aas
daa
pop
sar
mov
jge
incb
loope
jo
push
jg
stos
mov
out
das
gs
pop
jno
fdivrs
mov
scas
jno
push
fistpl
test
orb
adc
cmp
stos
ret
mov
repnz
xor
jbe
test
ja
dec
jbe
ljmp
lods
and
mov
pop
lock
sbb
aas
xchg
push
push
pop
lahf
and
jno
movsb
add
test
cld
mov
sub
fldl
les
mov
add
pusha
andl
mov
test
mov
insl
cmp
xor
mov
mov
push
sbb
cwtl
sbb
insl
jb
mov
das
jno
icebp
mov
add
clc
repnz
jge
shrl
jl
or
adc
ja
push
lods
insb
loopne
mov
mov
in
bound
das
lret
mov
mov
push
insb
sahf
mov
jbe
inc
cmpsb
pusha
jg
pop
push
ss
icebp
pop
pusha
adc
outsl
das
push
mov
pop
sbb
pop
cmp
shlb
pop
sub
xchg
fbld
stc
mov
pusha
dec
fwait
cmp
mov
movsb
js
push
xchg
inc
pushf
test
xchg
out
add
fists
mov
nop
add
mov
aas
mov
lahf
adc
repnz
repz
std
fidivl
jp
add
test
jb
aad
cmpsb
cmp
lock
add
nop
mov
add
and
cmc
loope
adcb
push
icebp
pop
mov
mov
cld
movsb
adc
rcrb
inc
dec
jns
mov
mov
sub
mov
adc
out
cmp
and
or
pusha
dec
out
xchg
pop
cwtl
mov
xchg
push
mov
inc
pop
xchg
popf
push
pop
sub
lea
in
xor
and
repnz
pop
popf
in
popa
fldl
xor
repnz
and
inc
call
cmp
pop
test
mov
cli
scas
push
inc
bound
add
out
mov
popa
mov
mov
lret
ret
pop
inc
sbb
fwait
ss
popa
fidivs
mov
inc
test
in
mov
mov
xor
jmp
adc
enter
push
lret
and
cmp
or
xchg
mov
incl
rcrl
dec
mov
mov
cmp
sub
loop
xor
repnz
mov
test
pop
add
rorl
dec
cpuid
cmp
movsl
aas
arpl
repz
gs
sbb
xor
ret
cmp
inc
jo
or
add
pop
arpl
cmp
sub
mov
cmp
cmp
enter
mov
push
sbb
fdivrl
test
pop
scas
dec
enter
jb
icebp
ret
daa
stc
sbbb
fisubs
mov
lods
shll
pop
jnp
xchg
mov
sbb
aam
push
xchg
jne
inc
or
jmp
dec
loop
xor
mov
pop
adc
jb
push
out
fwait
cld
sti
dec
rcrl
push
mov
adc
outsb
pop
mov
repz
arpl
movsl
push
push
inc
pop
inc
mov
ss
push
pop
pushf
imul
jle
and
sbb
mov
aaa
lea
inc
lods
dec
xor
jno
inc
data16
arpl
dec
into
lea
in
jnp
test
xor
mov
shl
popf
cli
add
dec
cld
pop
sbb
mov
int3
pop
lods
fs
adc
sbb
add
jno
xor
sbb
popa
push
inc
sub
lds
inc
cmp
inc
jmp
pop
lock
adc
hlt
mov
mov
pop
lcall
imul
fsubl
jmp
incl
pop
shll
jle
push
ret
mov
int3
std
lcall
fidivrs
dec
fdivr
adc
pop
ret
xor
mov
out
push
repz
inc
movsl
iret
fidivl
cs
cltd
pop
xchg
push
test
cwtl
lret
mov
out
push
movl
das
in
push
mov
add
movsl
mov
stos
outsl
push
fsubl
imul
xor
or
mov
sbb
mov
cmp
mov
pop
outsb
jmp
dec
or
loopne
cmp
sbb
in
jmp
imul
nop
xchg
push
das
das
push
xchg
sbb
add
int3
scas
push
pusha
dec
and
jnp
arpl
or
cmc
pop
mull
push
movsb
leave
pop
adc
dec
and
rcll
jmp
lock
scas
stc
iret
push
sti
int
add
xor
mov
cltd
aad
shl
rcrl
xchg
cmp
daa
mov
jecxz
leave
test
or
push
or
jns
push
add
ljmp
bt
scas
int3
pop
push
or
dec
insb
cmp
les
cld
arpl
xchg
xor
inc
add
mov
shr
cs
ss
lods
in
push
adc
pop
jbe
push
mov
pop
stos
int
and
jnp
insl
xchg
mull
ret
push
jle
fimull
dec
movsl
mov
fsubr
cmp
gs
lahf
scas
inc
mov
hlt
inc
cmp
repz
pop
mov
aaa
mov
adc
and
ljmp
nop
cwtl
arpl
and
call
test
enter
stos
mov
in
add
sub
and
fwait
scas
bound
fdiv
popf
adc
jp
sub
xchg
ja
arpl
imul
nop
mov
pop
add
sbb
ret
mov
dec
dec
mov
movsb
stos
sub
dec
jmp
jae
ljmp
test
pusha
push
decl
dec
ss
repnz
mov
test
insb
addl
cld
sub
ficoml
adc
jle
clc
or
psraw
push
das
adc
mov
jecxz
rol
fdivrs
dec
clc
ss
call
xor
or
sub
pop
mov
inc
movsb
pop
mov
mov
sti
inc
mov
int
test
cmp
les
pop
dec
icebp
mov
inc
mov
pusha
mov
fistpll
mov
add
and
jo
jns
mov
ficoms
sub
push
xchg
pop
movsb
sbb
push
pop
inc
inc
xor
mov
dec
hlt
in
xchg
scas
andl
stos
adc
mov
cmpsb
sti
fldt
push
xor
jb
adc
add
hlt
and
dec
bound
pop
inc
mov
and
push
sarb
movsl
sbb
cli
xchg
push
ficoml
mov
cltd
pop
xchg
inc
dec
fucom
test
mov
mov
int
mov
cmp
lret
dec
ficoms
push
fimull
das
out
jge
mov
adc
adc
push
pop
inc
jae
iret
mov
push
data16
pop
outsl
mov
jbe
lea
pop
scas
sub
xchg
jg
xchg
mov
and
adc
push
lahf
cmpsb
xor
stos
into
and
dec
xchg
or
xchg
xlat
rorl
clc
inc
aad
inc
xor
cmp
push
jmp
cmp
fsubrs
outsl
test
sub
test
add
popa
xchg
inc
in
mov
cmc
sub
out
fdivrs
dec
jge
sub
cli
pop
fs
xor
add
push
push
push
cmp
out
xchg
cmpb
cmp
jbe
pop
rcrb
stos
sti
and
mov
mov
mov
into
jl
cmc
push
adc
incb
or
mov
ja
jae
mov
push
pop
add
xor
scas
fwait
hlt
dec
icebp
pop
cltd
jns
sbb
std
lds
into
repnz
inc
ret
cs
jmp
add
out
xchg
sbbl
mov
mov
dec
dec
test
and
movsbl
mov
stc
jge
pavgb
push
js
sbb
jge
subl
push
pop
enter
adc
cld
sar
or
cmp
dec
xor
arpl
stc
lods
mov
je
loop
cmpl
out
inc
xchg
push
fsubs
scas
ljmp
mov
ficoms
cmp
jmp
push
pop
stos
mov
nopl
ljmp
push
pop
push
and
push
ss
adc
mov
lret
test
xchg
xchg
push
cs
push
fcoml
pushf
rol
add
push
xor
dec
cmc
sub
int3
mov
cmc
sub
ret
jle
ljmp
jo
adc
popf
mov
lods
pop
adc
or
lds
mov
or
movsb
mov
fists
into
decb
jg
std
inc
imul
outsl
dec
or
fstps
mov
xor
fadds
cmp
inc
fs
push
adc
addb
inc
push
pop
add
pmaxsw
and
jb
cmp
mov
push
inc
dec
stos
stc
xchg
subb
sub
int3
sub
in
movsb
notb
daa
xchg
push
xchg
or
adc
push
mov
scas
mov
cmpsb
pop
outsb
sub
xchg
add
mov
rorl
loopne
or
js
push
jb,pn
mov
push
div
addr16
jns
jb
fs
xchg
out
mov
add
outsb
popf
sbb
mov
pushf
sbb
setl
mov
pop
cmp
cwtl
or
sub
inc
and
add
mov
xor
stc
and
out
sub
mov
sub
add
dec
in
ror
adc
and
outsb
hlt
jle
pop
add
mov
pop
mov
jmp
test
push
pop
push
cltd
lods
or
push
xchg
enter
or
mov
lret
int
push
fstl
jle
out
mov
and
filds
jle
cmp
in
subb
mov
jne
pop
add
imul
xchg
add
inc
cmp
adc
test
adc
jae
pop
arpl
out
rorl
jns
shrb
popa
dec
jo
add
cmpsb
fs
arpl
pop
outsl
mov
cmp
fcoms
cmp
inc
sti
add
data16
add
push
stos
and
shlb
loopne
add
in
jmp
insb
fistpl
sbb
hlt
data16
jbe
jmp
mov
xchg
out
clc
inc
movsbl
sub
dec
or
jno
mov
xchg
and
in
jl
stc
adc
push
ret
cwtl
inc
or
xorl
out
and
mov
js
jae
mov
rclb
cmp
fisttpl
fadds
xchg
addr16
push
ljmp
in
rolb
adc
popf
enter
adc
xor
insb
cmp
lea
test
addr16
jp
clc
popf
xor
cmp
cmpsb
arpl
std
pop
mov
push
js
imul
loopne
aas
mov
add
repz
or
mov
enter
lcall
or
add
fs
cmpsb
insl
and
lods
jmp
cmp
xor
xor
cmp
pop
push
aam
cmp
pop
mov
call
test
stos
mov
xchg
add
and
jg
xor
or
add
and
or
jmp
insl
js
insl
jo
and
fistpll
push
cmp
repnz
jmp
sub
adc
pop
scas
sub
xchg
fidivrl
inc
jp
mov
jmp
adc
sub
shlb
inc
mov
mov
jmp
test
pop
fisubrl
lret
xchg
stos
and
lahf
ja
rcrl
pop
xor
imul
sub
cmpsb
xchg
mov
or
hlt
adc
pop
xor
lahf
push
addb
sarl
dec
icebp
jmp
add
mov
jae
repnz
arpl
lds
dec
sti
cmpsb
mov
cmp
fs
ret
test
mov
inc
arpl
mov
imul
in
xchg
scas
jg
xor
in
out
dec
mov
mov
icebp
push
jle
mov
ret
and
xor
xor
push
jb
lahf
xchg
lods
cmp
xchg
icebp
pop
negb
xlat
xchg
jle
mov
sbb
cmp
mov
inc
movsb
shrb
push
popf
inc
mov
ljmp
daa
xchg
sub
ret
fmull
jbe
and
scas
pushf
cmc
daa
mov
je
das
enter
cmpsl
pop
dec
imul
loopne
add
leave
jg
pop
pusha
sbb
xchg
push
mov
sub
sub
sti
iret
mov
mov
insl
mov
lock
and
mov
fimull
add
in
aaa
stc
in
call
lods
or
in
repz
loopne
cli
xor
jbe
mov
rcr
pop
stc
insl
sbb
test
adc
repz
negb
icebp
rcll
imul
ljmp
cmc
loope
cli
repz
dec
mov
das
sar
in
sub
mov
into
push
xchg
int
nop
ror
xor
adc
sub
dec
mov
lods
sbb
arpl
lods
in
rol
pushl
stc
cwtl
or
loope
cmp
jmp
add
xchg
stos
ljmp
dec
dec
sti
jg
jbe
mulb
inc
lods
rcrb
xlat
mov
fwait
aam
jae
test
push
adc
sub
push
imul
and
push
sub
mov
xchg
push
std
cmc
mov
mov
outsl
jp
bound
adc
enter
loop
cmp
fisttps
jl
mov
out
add
cmp
and
mov
in
fnstcw
clc
push
dec
jg
lock
mov
and
xor
fstps
cltd
call
xor
stos
sub
or
and
mov
stos
insb
dec
mov
cmp
cmp
scas
xchg
xor
cmp
lds
fmul
arpl
fcmovb
inc
cmp
or
hlt
sbb
add
lret
sarl
cmp
adc
xor
les
lahf
cmpsb
dec
add
decl
sub
cltd
add
inc
xor
sbb
out
stos
pop
adc
shll
and
jmp
jp
pusha
roll
mov
mov
lcall
mov
mov
adc
scas
aaa
or
icebp
subl
fisttpll
mov
pusha
dec
push
xchg
aaa
orl
cwtl
pop
sahf
pop
aaa
pop
jne
mov
sub
std
sub
pop
xlat
call
push
sbb
cmp
mov
mov
or
mov
leave
jb
iret
inc
add
add
mov
dec
idivb
push
jns
adcb
in
repz
xor
lea
sbb
sub
clc
jbe
push
outsl
int3
addl
bound
add
jbe
test
in
nop
xchg
sbb
push
mov
xchg
mov
jg
mov
fcmovne
popf
sub
or
dec
insl
out
je
ja
sahf
addr16
inc
pushf
add
rolb
dec
shlb
push
icebp
and
mov
aad
mov
sub
lods
xchg
in
insl
popa
popa
mov
adc
hlt
imul
lods
repz
bound
hlt
lea
inc
mov
popa
adc
cmp
subb
imul
sbb
sti
ds
xchg
xchg
push
ljmp
dec
xor
rorl
mov
adcb
ss
insb
roll
and
sahf
push
push
test
pop
dec
and
cmpsb
ret
cltd
hlt
sub
xchg
call
decb
jecxz
push
sbb
loopne
cwtl
movsl
xchg
ds
adc
insb
push
mov
jnp
call
faddl
fwait
mov
mov
sbb
jmp
and
lret
cs
xchg
clc
or
xor
pusha
mov
daa
clc
mov
inc
cmc
cmpsl
es
mov
and
mov
push
jns
jecxz
mov
iret
inc
lret
jge
fistl
mov
aaa
testb
addl
pop
andl
sbb
jl
out
cmp
jg
xchg
lods
cld
adcb
cmp
repnz
imul
ret
sub
daa
mov
cmpsl
pop
and
and
iret
xchg
dec
inc
data16
mov
push
sbb
mov
mov
pushf
mov
rcl
cmp
pop
mov
roll
sarb
fists
jno
insw
jbe
negl
pusha
out
shlb
mov
sbb
daa
loope
outsl
insb
aaa
aad
push
xchg
bnd
push
push
and
xor
out
inc
jl
or
subb
inc
dec
push
andb
movsl
adc
and
out
cmpsl
test
lds
add
xchg
xor
aaa
shrb
daa
das
repz
addl
mov
xchg
push
arpl
jno
cmp
enter
jno
popf
sbb
out
fisttpll
and
pusha
cld
hlt
push
sub
mov
add
jp
add
aad
xor
adc
jl
jo
std
jns
mov
aas
pop
push
cmp
mov
sub
cmpsl
and
inc
std
cmp
xchg
pop
mov
lahf
insl
test
or
ljmp
gs
into
push
sbb
nop
clc
test
enter
outsl
add
fdiv
jecxz
push
add
orl
and
cmp
lret
data16
inc
ja
jecxz
fs
xor
lahf
lods
jecxz
aad
cmp
mov
push
mull
jmp
jns
mulb
push
ja
or
pop
jno
imul
inc
aam
cmp
fmuls
shlb
lahf
rolb
jl,pt
pop
pop
cmp
and
scas
add
jmp
cmp
pusha
pusha
push
fildl
pop
mov
lahf
sub
cmp
mov
lods
add
cmp
arpl
add
xor
and
addr16
lea
in
repz
fwait
inc
int
jbe
jecxz
out
mulb
mov
es
loop
fcoms
mov
in
pop
cs
iret
push
xchg
push
orb
add
dec
and
out
jnp
pop
pop
jmp
push
push
jmp
mov
mov
fs
dec
jmp
add
cmp
int
mov
mov
popa
dec
idivl
sahf
sub
movsl
std
fnsave
jl
cmpsb
dec
call
add
pop
out
xor
add
ljmp
test
fidivrl
and
dec
pop
shr
mov
jnp
cwtl
addb
jle
adc
jbe
sbb
sbb
cmp
dec
loopne
dec
xchg
mov
push
xchg
xor
pop
jne
push
jbe
and
xor
inc
cmp
sub
jmp
mov
add
mov
xchg
xchg
lahf
dec
pushl
shl
js
xor
das
lahf
sub
and
loop
enter
or
push
sub
push
sbb
insl
out
mov
mov
clc
mov
mov
lret
and
out
jnp
xor
cltd
push
sub
jne
mov
dec
sqrtps
xor
out
js
out
movsl
jle
mov
sarb
add
roll
and
mov
jbe
imul
push
shl
mov
mov
xchg
and
out
iret
mov
add
movsl
ja
push
push
test
mov
cld
test
jmp
fadd
and
xor
mov
aam
mov
adc
add
repz
jmp
pop
daa
test
pushf
add
sbb
sbb
popa
stc
popf
addr16
int
ss
shl
dec
test
inc
fldcw
imull
call
mov
add
sub
jo
ja
shll
adc
dec
jne
leave
mov
mov
lds
jge
jl
adc
push
pop
ret
xchg
sub
mov
xchg
addr16
pextrw
xchg
ss
mov
negb
in
jg
repnz
movsl
test
mov
pop
pop
fcmovbe
push
xor
test
xchg
scas
das
sbb
std
xchg
lcall
roll
cli
and
cmp
pop
adc
adc
or
data16
mov
mov
or
add
pop
test
aas
adc
adc
add
cmpb
xchg
cmp
fwait
pop
rol
pop
ficoms
insb
in
int3
jl
push
in
daa
sub
mov
mov
and
add
mov
push
int
pop
rorl
sbb
jne
inc
xchg
xchg
cmp
cmpsl
and
repz
jbe
xchg
fs
dec
push
mov
mov
lea
jne
ss
cmc
add
sub
push
pop
scas
push
pop
xlat
mov
or
lods
jmp
mov
ret
mov
addl
in
imul
cmc
loope
lds
cmp
lock
iret
sbb
or
mov
addr16
lea
mov
dec
xor
leave
sahf
das
sub
out
cmp
push
jmp
iret
and
cwtl
jg
pop
jno
sub
add
fmull
ss
in
jae
js
push
fwait
push
test
mov
movsl
adc
xor
jl
lcall
clc
fs
dec
cwtl
jge
movsl
lea
mov
cmp
mov
dec
ret
xchg
xchg
push
pop
clc
sub
pop
mov
sub
cmpsb
jg
mov
xor
test
pop
inc
das
dec
jb
mov
cmpsl
fdivrl
push
fstpt
cld
insb
sub
jns
cs
inc
mov
mov
sub
fsubr
inc
dec
cmp
and
jnp
pop
mov
cmp
and
out
adc
cltd
out
xor
xchg
push
ss
out
insl
out
in
sbb
outsb
pushf
jns
imul
adc
dec
test
cmp
mov
lcall
cmpsl
aaa
enter
xchg
into
loope
xor
scas
outsl
add
cmpsl
mov
xchg
xchg
dec
xor
dec
jg
sbb
das
divl
pop
adc
loop
dec
dec
jns
adc
push
or
lods
adc
jnp
xchg
fisttpll
icebp
enter
imul
pop
mov
mov
int3
jb
rcrb
addr16
add
mull
fmul
fldln2
push
fdivrp
je
cld
lcall
cmp
out
fdivrl
cmpsb
jp
shrl
hlt
xchg
imul
rcll
inc
int
add
shlb
mov
sub
sub
or
sbb
sub
jecxz
nop
in
repz
fidivrl
jmp
dec
sti
fwait
repz
mov
mov
cmpsl
adc
xor
enter
in
sti
push
repnz
jl
hlt
pop
scas
and
jnp
adc
jmp
mov
dec
cmp
jb
jle
dec
pushf
cmpsb
icebp
repnz
push
push
scas
icebp
or
mov
mulb
arpl
iret
in
mov
and
push
ret
shr
xchg
pop
ds
dec
stc
mov
lds
std
orb
mov
pop
xchg
jmp
std
sub
sti
int
jb
jmp
repz
lds
xchg
adc
add
int
ret
mov
jle
ret
cmpsl
adc
push
fcoml
fisubs
cmpsb
stos
mov
and
hlt
dec
pop
adc
inc
dec
clc
cmp
cmpsb
add
leave
inc
push
ds
or
or
in
ret
je
fimull
add
pop
cmp
xchg
push
sbb
mov
and
pop
sub
jle
inc
dec
fistpl
pop
inc
adc
adc
or
lahf
std
test
fimuls
and
mov
inc
ret
adc
mov
movsl
out
lds
dec
and
pop
sbb
mov
xchg
xchg
adc
mov
movsb
outsb
push
xchg
mov
xor
or
shlb
pushfw
js
inc
mov
jecxz
sub
iret
aas
dec
mov
push
pop
fists
cld
push
inc
outsl
scas
shlb
bound
mov
or
popf
stos
push
aas
and
adc
js
lods
jno
adc
sub
inc
aam
mov
pop
cmp
test
sub
popa
xor
outsl
insb
inc
leave
aad
cli
add
js
add
inc
add
mov
and
cmpsb
jle
nop
cmpsb
sbb
outsl
cmpb
scas
jns
mov
in
je
bound
mov
push
aaa
push
mov
push
cmpsb
push
add
sbb
inc
outsb
pop
push
xor
xchg
lahf
sti
sbb
push
jp
or
imul
mov
push
fimull
inc
xlat
imul
pop
sub
lea
mov
mov
fsubrs
push
subb
and
inc
js
xchg
into
sahf
xor
sahf
movsb
inc
push
jnp
mov
dec
and
jne
movq
lods
xchg
mov
es
jp
jp
and
sti
inc
movsl
xor
cmp
jbe
cmp
push
jbe
xchg
mov
pusha
test
xchg
jg
xor
xchg
dec
dec
enter
mov
push
sbb
pop
and
andb
inc
repnz
loope
pushf
call
aad
int3
xor
mov
push
xor
adc
push
xlat
mov
in
ret
stos
out
pop
scas
add
rorb
popf
jb
inc
aam
push
sbb
ljmp
jle
setp
test
fldl
jae
jbe
rolb
test
scas
ret
fwait
nop
ret
add
mov
cmpl
push
jae
es
cwtl
jg
xor
ret
stos
int3
out
pushf
xor
mov
adc
adc
push
movl
subb
int
xchg
push
jecxz
sbb
movsb
repz
pushf
popa
mov
push
out
mov
dec
adcl
dec
mov
arpl
add
andl
jmp
adc
fnstcw
jnp
sub
ja
into
int
pop
ret
xchg
fwait
lcall
inc
fstpl
jns
mov
ja
jmp
sub
mov
xchg
enter
mov
and
xchg
das
je
sub
pop
or
fwait
pop
and
test
loopne
dec
xchg
dec
test
addr16
inc
out
in
mov
enter
jbe
pop
rcl
xchg
jo
negb
dec
shll
mov
jle
push
pushf
pop
add
ja
sti
sbb
std
push
dec
pop
xor
scas
scas
sbb
jb
sub
mov
mov
xchg
or
jg
ret
subw
inc
fnstsw
stos
call
sti
ret
sub
xchg
mov
mov
xchg
jle
sti
sbb
mov
lds
sub
pop
mov
scas
xchg
daa
mov
push
ficoms
shl
lret
or
out
dec
iret
mov
mov
cmp
pop
or
gs
dec
xor
pop
pop
add
cmp
push
mov
stos
jae
push
inc
shrd
test
test
push
pop
inc
hlt
je
jnp
or
cmp
dec
fisttps
fdivrl
ret
or
in
jns
imul
xor
push
mov
pop
les
pop
sti
popf
inc
insb
fadds
cmpsl
push
fildll
cmp
rol
mov
dec
or
mov
lret
cltd
mov
inc
idivl
fwait
pop
daa
fcoml
cmp
retw
js
mov
dec
scas
lret
pusha
lahf
cmp
imul
jmp
cli
inc
cltd
leave
sub
mov
xor
pop
mov
leave
add
pop
mov
inc
cmp
push
jl
cmpl
lods
outsb
fucomip
push
movsb
sbb
mov
movsl
je
cs
xor
movsb
addr16
out
cmp
push
outsb
mov
dec
or
inc
outsl
mov
aam
repnz
arpl
push
or
js
fnstcw
mov
out
shlb
xor
cmp
aas
cmp
dec
push
mov
fadd
pop
push
mov
pusha
mov
mov
xchg
mov
cwtl
bound
add
mov
stc
sub
cld
jo
gs
je
pop
je
cmp
and
rcrb
pop
sti
cmpsb
and
mov
cs
iret
xchg
pushf
push
pop
cmpsl
sarl
clc
cmp
cmp
cmp
mov
andb
fisubs
les
pop
xorl
mov
xchg
aam
xchg
and
scas
mov
icebp
ss
add
xor
imul
out
and
repnz
jnp
lret
popa
pop
push
out
mov
push
ja
sbb
or
pop
ret
lea
xor
and
in
sbb
in
xchg
dec
leave
pop
jp
jp
push
sbb
push
jg
clc
popa
push
mov
or
mov
inc
and
xchg
pop
xor
lods
cli
mov
and
mov
shrb
inc
fnstcw
daa
ljmp
xor
add
inc
lds
add
dec
into
ficompl
jmp
mov
stos
push
bound
popa
mov
xchg
imul
mov
iret
pop
arpl
outsl
or
push
loop
mov
jmp
sbb
xchg
mov
aad
jo
jle
fwait
xorb
mov
sub
imul
imul
pop
sbb
mov
lea
imul
and
cmp
mov
push
repz
jmp
dec
imul
xchg
pop
inc
mov
test
jbe
push
clc
jle
in
inc
cmpb
in
shlb
pop
inc
lcall
mov
xchg
sarb
loop
fcomps
test
mov
outsb
cmp
shlb
mov
lret
mov
insb
xchg
test
cmpsb
shrb
mov
ss
mov
mov
movsl
fcomip
cmp
mull
mov
subl
scas
loopne
cld
push
cmp
jo
inc
mov
iret
mov
arpl
mov
adc
add
je
popf
mov
adcl
loope
mov
fmull
fsub
es
into
mov
sub
or
mov
sahf
xor
gs
jns
aam
mov
push
push
fs
dec
dec
cmp
pusha
or
xchg
and
jbe
outsl
push
inc
lea
cmp
add
idiv
dec
mov
loop
sub
in
sub
push
popf
xor
mov
push
and
popf
hlt
clc
into
cmp
fs
jle
cltd
lcall
fcoms
adc
mov
iret
xchg
mov
push
and
mov
sub
scas
jecxz
popa
gs
inc
dec
lcall
dec
cmc
mov
pop
adc
push
jne
jmp
mov
int
xor
ret
mov
jne
jl
bound
mov
ret
push
sbb
insl
pop
dec
rcl
orb
inc
cmp
adc
dec
sbb
outsl
insl
jle
in
xchg
xchg
or
ja
fwait
mov
adc
xor
sbb
mov
out
iret
pop
mov
rolb
cli
ja
idiv
je
iret
ror
arpl
sub
jg
jge
arpl
pop
mov
and
sti
mov
lret
push
movsl
jge
sub
mov
jns
imul
dec
jg
ja
cwtl
jl
es
jo
push
mov
sbb
out
cmp
dec
push
loop
mov
or
xor
cltd
imul
fildl
nop
sub
popa
stos
lds
mov
mov
nop
pop
out
in
fsts
pusha
add
les
psubusb
pop
mov
outsb
daa
add
lock
push
popf
jns
jle
lret
push
xlat
iret
or
jb
out
loopne
mov
push
lret
cwtl
and
mov
push
inc
icebp
inc
pop
imul
sbb
adc
aam
mov
push
cmc
inc
lret
das
and
jne
add
add
push
cmp
jne
loop
frstor
sub
xchg
ja
fldt
xor
popf
mov
fsubl
int
insl
sbb
add
cmp
cmpsb
int3
xchg
mov
mov
adc
add
jae
add
in
add
addb
xchg
jae
scas
push
or
aad
scas
pop
shrl
mov
in
jb
mov
lea
jp
gs
inc
jbe
adc
daa
idiv
sti
cmc
pop
mov
mov
xchg
fwait
call
cmc
push
xor
outsb
and
out
in
lds
dec
loop
cmp
cmpsb
xor
inc
add
sbb
mov
add
xchg
ffreep
ljmp
mov
adc
jnp
mov
imul
je
mov
dec
lret
scas
fiaddl
mov
adc
js
gs
scas
dec
inc
cs
xlat
inc
dec
insl
mov
int
cmp
add
jl
or
jno
add
push
sub
int
jge
mov
push
movsl
dec
add
adc
into
push
cmp
mov
popa
push
iret
scas
ss
in
xchg
mov
gs
sarb
test
push
sbb
es
push
inc
hlt
ja
into
xor
in
les
loope
sbbl
and
push
sbb
dec
cmp
or
jp
jp
test
pop
or
repnz
or
jmp
push
mov
int
fldcw
dec
in
aam
add
lods
adc
in
pop
mov
cmp
push
jo
and
mov
sbb
cmp
and
mov
jmp
mov
xchg
je
adc
inc
jl
mov
das
jp
add
outsb
push
ds
pop
lock
movsl
push
adc
loope
test
mov
je
xlat
push
inc
fsubp
pushl
jp
out
lods
jns
out
adc
lret
sub
ss
dec
sub
sti
or
out
insl
mov
hlt
adc
xor
jg
pop
out
sbb
inc
sbb
inc
notl
popa
sub
lods
popa
leave
push
and
xchg
jne
pop
push
imul
es
cltd
test
add
aad
lods
data16
bound
stc
stos
push
mov
pop
jnp
pop
ret
icebp
enter
mov
dec
pop
fidivrs
mov
or
shrb
add
add
inc
into
mov
and
adc
or
cld
jbe
cmpsl
mov
mov
adc
test
inc
roll
jnp
int
fstpl
je
test
jns
xor
mov
out
dec
cmp
xchg
xchg
out
dec
push
jecxz
movb
mov
dec
or
sar
mov
rcll
sub
mov
sbb
movaps
orb
fs
shlb
add
add
sbb
jne
in
dec
sbb
sar
dec
mov
lret
add
iret
or
in
pop
ss
jp
mov
pusha
inc
pmaddwd
lods
and
mov
sub
pop
sub
pop
dec
lret
aas
in
lcall
jbe
mov
dec
xchg
jle
les
jmp
inc
call
xchg
lds
loop
push
out
lock
xchg
fisttps
mov
jge
push
out
js
mov
dec
pop
mov
sub
sti
pop
push
sbb
mov
and
test
and
pop
cmp
mov
xchg
fbstp
and
mov
pop
xchg
outsl
ret
pop
test
add
pop
repnz
in
leave
lea
mov
cli
in
lcall
jb
loop
adcb
inc
mov
mov
sub
adc
jae
test
dec
dec
lds
pop
insl
push
sub
mov
loopne
fmuls
cld
jbe
outsl
mov
sti
repnz
enter
mov
dec
dec
dec
and
mov
cmp
rcr
js
pop
mov
xchg
shll
jmp
test
dec
push
inc
nop
sti
std
sbb
xchg
mov
inc
cmp
es
outsb
push
std
leave
jae
inc
sub
xchg
and
mov
in
cld
insl
adc
test
enter
pop
nop
or
push
mov
imul
lret
cmp
push
aam
lock
push
out
inc
xlat
mov
ss
cmpsl
sbb
in
jmp
call
jne
je
cmp
pop
sub
xchg
fstpl
bound
je
icebp
sahf
cmpb
xchg
sar
jl
cmp
cmp
leave
ljmp
ss
xor
movsb
insb
dec
inc
push
jecxz
or
rcrb
mov
and
push
or
push
cmp
mov
fsubl
test
dec
pop
xor
sub
adc
repnz
cmp
pop
sbb
aas
push
pop
add
xor
pushf
push
inc
scas
cvtdq2ps
ficoms
cli
dec
sbbb
daa
notl
incb
lret
pushf
ljmp
daa
add
push
add
push
popa
mov
stos
xor
push
xor
dec
and
dec
dec
pop
adc
daa
sbb
push
ret
push
push
dec
jecxz
pop
cmp
insl
outsb
push
std
les
or
mov
add
mov
mov
cmp
cmpsb
gs
or
sub
clc
xchg
add
inc
iret
in
test
enter
mov
ja
mov
test
sub
iret
mov
cmpsb
test
xor
sub
push
xchg
lods
vprotw
fidivs
push
cmp
stos
arpl
faddl
cli
xor
out
pop
test
sub
mov
nop
or
fwait
pop
lea
out
inc
nop
jno
out
xchg
and
fwait
mov
cs
jnp
mov
pop
jmp
inc
popa
mov
lret
sub
pop
in
scas
mov
xchg
mov
dec
fstpt
call
jmp
std
fs
sub
call
mov
fimull
into
mov
in
fadds
dec
gs
xor
mov
enter
push
mov
dec
scas
pushf
fdivr
in
push
sahf
pop
lods
jbe
fsubp
xlat
mov
xor
loope
jl
js
ffreep
sub
push
dec
adc
repnz
jno
pop
push
sbb
lds
inc
and
dec
mov
jp
or
ficoml
cmp
cli
jo
inc
lret
pop
push
lahf
es
mov
or
lods
lahf
int
movsb
jno
int3
je
mov
subl
pop
mov
adc
js
and
dec
pop
and
stos
mov
sti
push
mov
jae
mov
mov
jno
ret
movsb
aad
and
sbb
xchg
lea
jns
fimull
inc
out
scas
push
sbb
pop
xchg
jmp
dec
jmp
call
inc
sbb
mov
js
das
sahf
movsb
ret
mov
adc
addr16
jns
cld
pop
insb
ja
sub
out
or
add
xchg
leavew
and
sbb
mov
sub
lea
out
push
insb
mov
sub
or
push
test
out
insl
data16
mov
xchg
sbb
outsb
mov
push
mov
sub
repz
lea
ret
lsl
mov
mov
popf
repz
cwtl
push
fyl2xp1
mov
int3
or
int
mov
out
adc
push
adc
call
inc
stc
add
arpl
data16
lea
shll
sbb
xlat
inc
jb
sbb
mov
fadds
daa
or
xor
cmpsb
sbb
pop
sbb
jecxz
js
aad
clc
pop
jns
lcall
scas
cmp
and
addr16
je
pop
popa
xor
xchg
pop
pushf
push
repnz
loop
bound
and
mov
pop
adc
mov
test
or
lret
ret
rcr
pop
rorl
pop
or
rol
jns
add
int3
jmp
or
or
jecxz
mov
hlt
and
aad
add
lret
ret
and
adc
shr
jmp
stos
and
push
jnp
popa
jnp
enter
test
movsl
divl
mov
clc
push
push
add
or
sbb
cmp
ret
fsubs
sub
mov
dec
pusha
je
sbb
sub
push
and
aad
lahf
arpl
outsl
xor
cltd
pop
push
mov
add
iret
arpl
cltd
ret
dec
or
add
mov
fidivrs
and
adc
push
dec
xor
dec
lahf
clc
daa
dec
add
mov
rclb
test
rclb
mov
into
sti
cmp
pop
push
jno
loop
rol
jns
mov
cmc
cmp
pmullw
ljmp
js
call
fcompl
lahf
jmp
mov
stos
ljmp
mov
test
adc
rcrl
xchg
push
push
cltd
push
pop
rcll
leave
lds
fbstp
cs
clc
sub
ret
out
push
sti
cld
loop
mov
inc
or
fadd
cs
inc
movsb
or
popf
push
ss
cmp
sti
xor
dec
sbb
das
rolb
subl
sbb
inc
shll
mov
mov
inc
or
xchg
add
cmpsl
jnp
decl
es
add
adc
mov
pop
push
push
clc
in
test
mov
je
je
add
arpl
mov
jp
dec
sub
movsl
push
mov
sub
hlt
lret
daa
add
pop
dec
lcall
push
repnz
mov
mov
inc
cmp
push
cmp
push
int
xor
adc
test
mov
cmp
lahf
add
push
call
dec
or
test
adc
add
notb
xchg
insb
adc
aaa
in
and
pop
lahf
cmp
sbbl
inc
cmp
repz
push
mov
mov
pusha
orb
adc
out
int3
xchg
inc
dec
mov
arpl
fmulp
fsubp
jae
add
inc
dec
pop
jl
xchg
in
js
ds
xor
out
push
mov
pop
mov
rcll
inc
jge
push
push
add
sub
xadd
mov
hlt
out
or
push
jo
sbb
test
ret
and
pusha
and
ss
in
cltd
mov
and
inc
movsb
inc
mov
mov
jle
sbb
dec
push
add
loopne
loop
outsb
lcall
lahf
mov
mov
mov
and
fldcw
stos
or
sub
mov
pusha
outsl
jmp
lret
xor
jne
pop
fstpl
jge
xchg
dec
push
incl
mov
fldl
mov
mov
or
or
inc
mov
je
xchg
cmp
sub
sub
sub
clc
testb
push
out
je
sahf
jnp
sub
adc
test
jmp
hlt
inc
test
xor
addb
push
fistl
mov
inc
cmp
cmp
inc
sti
stos
cmp
mov
jb
insl
stos
popf
pusha
sbb
add
rorl
fistps
mov
push
dec
xlat
addr16
add
popl
sub
xor
xor
pop
jae
int
gs
mov
dec
imul
movsl
xor
adc
mov
jecxz
mov
into
add
mov
decb
mov
int3
out
fs
mov
cmp
rcll
mov
xchg
adc
bound
test
sarb
mov
xchg
xchg
ljmp
gs
inc
sub
lret
pushf
dec
sub
inc
pushf
enter
ds
or
jb
cmp
jp
nop
fdivrl
mov
jb
and
mov
sahf
cltd
loope
and
hlt
cltd
push
pushf
ljmp
std
pop
insb
loopne
scas
and
push
mov
push
lcall
scas
lret
pushf
in
mov
fsts
shufps
out
sbb
dec
daa
notl
das
daa
movsb
push
in
movsb
fcmovnb
or
cmp
sbb
idivb
xor
repz
ret
imul
sub
mov
in
inc
and
addl
push
push
lods
gs
nop
push
pop
dec
jns
dec
adc
pop
push
adc
rorl
pop
aaa
fwait
cmpsl
or
xchg
rorl
sub
scas
test
xchg
inc
sahf
or
and
jge
loop
lock
cmp
sar
addl
inc
sub
pop
jp
movsl
loope
fiaddl
jp
push
push
inc
pop
xor
jp
add
mov
xchg
pop
rcll
cwtl
inc
and
ret
cli
inc
inc
std
cmp
push
add
ret
xchg
mov
aaa
into
ret
movsl
aam
addr16
outsl
fnstcw
xchg
pop
dec
outsl
sahf
sub
mov
jo
push
adc
sti
rcrl
daa
imul
push
aam
pop
push
fisubl
inc
mov
xchg
cmp
jne
jbe
test
xor
mov
int3
mov
ds
test
cmp
roll
fmuls
inc
and
pusha
xchg
pop
mov
sbb
mov
sub
mov
jnp
das
mov
push
popf
add
mov
nop
aad
pushf
enter
fs
sbb
push
mov
cltd
arpl
jae
ret
das
lock
or
xchg
jbe
pop
sub
push
sbb
clc
loop
inc
sub
lret
stos
xor
jle
pop
jb
test
rorl
outsl
rcpps
pop
xrelease
repz
aam
sub
mov
sbb
xchg
aam
negb
frstor
je
cmp
or
xchg
icebp
adc
add
fdivrs
sub
fstpt
sub
aad
mov
bound
dec
popa
lds
or
lds
push
movsb
inc
shrl
outsl
icebp
bnd
pop
leave
sbb
jbe
cmp
imul
or
lods
mov
imul
lea
fs
aaa
add
adc
inc
push
xchg
daa
jl
mov
push
repz
repz
sbb
pusha
je
loop
movsl
rclb
cmp
ficompl
lahf
jae
arpl
cmpsb
mov
aas
arpl
push
mov
xor
mov
push
jg
pop
mov
cmpl
pop
push
les
lds
inc
cwtl
push
and
fiaddl
popf
iret
xchg
call
mov
lea
jge
add
jle
add
hlt
sbb
mov
add
and
and
and
mov
aaa
or
movsl
aam
xchg
in
and
cltd
jbe
into
add
arpl
loopne
sub
sub
xor
jae
shrl
mov
jecxz
push
xchg
je
push
loope
or
movsb
jp
inc
lods
push
cld
mov
xchg
mov
push
stos
and
mov
es
sbb
cmp
jge
sub
addr16
pop
jnp
and
sahf
mov
jp
add
icebp
jge
sbb
mov
inc
jns
xor
lods
xchg
jmp
push
cmpl
inc
sarb
popa
cld
jecxz
dec
mov
dec
popa
popf
mov
pop
pop
fstpt
stc
fs
pusha
nop
xor
insb
mov
pop
int3
dec
push
xchg
out
mov
lea
repz
mov
push
pop
int
jmp
push
inc
xorl
jno
pop
mov
cltd
push
fcos
xor
cmpsb
pop
and
ss
dec
and
jg
add
repz
jg
insb
xchg
xor
fisttpl
cmp
xor
fistps
cmpsl
cmp
mulb
fmuls
cmp
push
mov
xor
sbb
imul
push
insb
sub
jb
xchg
mov
mov
aas
jl
lret
sub
fwait
dec
cmp
dec
cmp
pop
popf
jae
or
sub
xchg
fildl
popf
push
nop
rolb
lret
xchg
push
adc
mov
into
xor
sbb
add
repnz
lret
jmp
neg
out
clc
cli
add
push
dec
mov
push
xor
ss
pop
sub
sub
sbb
fstl
xchg
mov
jb
add
add
push
daa
mov
popf
call
mov
sbb
add
xor
xor
pushf
add
push
inc
rcrb
mov
pop
fisttpl
sbb
xor
ret
mov
cmp
cmpsl
xchg
jle
sub
adc
es
xor
or
jl
xchg
xor
jb
pop
xor
xchg
imulb
ds
in
dec
inc
dec
pop
repnz
lcall
pop
lods
testb
loope
out
cmp
iret
out
cmp
and
push
adc
sub
daa
insb
mov
push
push
mov
testl
cs
push
lea
ds
aam
mov
and
loope
mov
fstl
sbb
mov
ror
xchg
or
mov
cmp
mov
cmp
rol
in
outsl
xchg
xlat
or
pop
adc
lret
cmp
out
out
aas
add
ret
leave
pop
mov
in
jb
daa
and
roll
in
mov
test
push
push
not
add
adc
pop
test
pop
fnsave
insl
jl
cwtl
es
repnz
fst
cmp
in
jg
ss
cmc
cltd
sbb
wbinvd
outsl
jecxz
test
popf
cmp
movl
cld
stc
sbb
push
mov
fwait
or
les
mov
icebp
test
into
mov
xor
add
and
xchg
inc
insl
cld
or
xchg
xorl
fists
into
xchg
sti
inc
sbb
sub
insl
mov
aaa
xchg
sbb
inc
popf
adc
loop
stc
add
dec
leave
add
mov
mov
mov
cmp
xchg
cmp
movsb
dec
cld
fnstenv
pop
sub
aam
in
cltd
sub
pop
sahf
enter
not
mov
fildll
fwait
xlat
les
and
dec
xchg
lods
ss
xor
cmpsl
les
mov
imull
push
daa
fcmovbe
push
sbb
cwtl
cmc
ljmp
push
hlt
das
adc
cmpsb
subl
push
mov
push
aam
imul
pop
rcrb
sub
into
pop
xchg
lds
fstpt
nopl
dec
mov
cmp
lods
and
scas
mov
mov
xchg
pop
pop
lock
in
pop
test
scas
pop
inc
mov
and
mov
imul
out
in
js
loop
enter
pop
fcoms
mov
inc
sub
mov
and
push
xor
out
and
mov
adc
mov
popl
add
or
jb
adc
sbb
pop
jl
add
adc
xor
xchg
out
repnz
jns
enter
test
cli
in
movsl
jae
rolb
push
fbld
in
and
ret
leave
sub
xor
into
fidivl
rcrl
das
outsl
add
insl
outsl
and
iret
push
xor
fwait
out
jne
mov
mov
pop
aad
mov
sub
inc
mov
cmc
pop
pop
add
nop
sbb
xchg
jne
inc
mov
clc
cmpsb
pop
mov
jl
push
les
repz
adc
sbb
iret
inc
repz
jns
into
stos
scas
scas
mov
jns
or
mov
fwait
push
in
push
cmp
stc
int3
xor
out
fldcw
xor
sbb
sahf
dec
scas
push
cwtl
pop
and
xchg
or
xchg
lds
ret
in
popa
movsl
mov
or
out
outsl
out
lea
and
fcoml
into
xlat
jns
mov
out
pop
insb
push
lret
jne
pop
cld
js
pop
inc
pop
stc
dec
lods
jp
pop
test
push
das
scas
clc
inc
sub
jae
push
and
stos
and
push
sub
jl
sahf
loope
and
jge
lret
shr
pushf
scas
movsb
dec
in
inc
jecxz
adc
outsl
scas
out
jmp
jecxz
sub
pop
push
cltd
insl
inc
lock
fwait
pop
stos
lds
or
pushf
jo
push
aas
dec
in
mov
lcall
xor
popa
cmpsl
cmpsl
cmp
dec
mov
and
jmp
decl
or
inc
pop
mov
mov
call
addr16
lahf
in
push
ljmp
jecxz
ret
xchg
inc
out
shr
not
pop
loope
ss
push
push
inc
mov
and
xchg
sarl
aad
mov
fisubrl
cli
out
xchg
out
xor
test
enter
push
insl
ja
nop
icebp
cs
push
mov
fdivr
pop
shll
cli
lahf
out
popaw
outsb
push
or
pop
mov
testw
sti
pop
jecxz
fmuls
cmp
pop
adc
inc
xchg
pop
in
int3
adc
loope
mov
les
sbb
push
fucomp
enter
and
test
mov
cmp
lahf
jo
xchg
mov
push
sub
and
push
fnstenv
rcll
fwait
cmp
pop
and
xchg
rorl
mov
jo
mov
pushf
push
jecxz
xlat
jbe
inc
out
jecxz
fdivr
fstpl
adc
mov
lods
push
mov
sub
adc
ret
dec
sbb
in
push
lcall
pop
xchg
cmp
or
push
sarl
jae
cld
xchg
scas
mov
xlat
inc
cmp
inc
cmp
mov
gs
pop
stos
out
inc
aaa
add
cltd
imul
push
push
sbb
in
inc
aam
lcall
loop
or
loop
aad
jg
addr16
or
sbb
rorl
push
mov
sbb
movsb
jecxz
or
sub
cmp
addb
xchg
pop
jns
jle
test
stos
dec
inc
ret
mov
nop
loopne
in
fdivl
push
pop
addb
fbld
int3
dec
notl
pop
xchg
dec
mov
mov
pop
das
xlat
xchg
das
test
sub
sbb
dec
dec
pushl
xor
inc
cmp
out
dec
rclb
cli
std
xor
xor
mov
cmpl
jo
mov
loop
into
fcomps
bound
xor
inc
dec
fidivs
pop
mov
pop
sub
adcb
jne
cmp
sub
shr
cmp
movsl
push
imul
mov
out
pop
aad
xor
test
jle
js
xorl
push
adc
repnz
rorl
xchg
fisubs
mov
dec
pop
push
mov
lret
dec
xchg
repnz
dec
add
or
dec
loop
loopne
adc
push
mov
xor
testb
sti
push
outsl
inc
fcomps
push
mov
imul
es
sbb
sub
or
fsubrl
dec
outsl
sub
sub
and
call
insb
inc
cmpsl
adc
push
lret
jo
repnz
fistpl
inc
push
add
fisubrs
add
bound
test
add
push
fcomps
inc
adc
ret
imul
xchg
in
adc
dec
dec
aaa
and
xchg
fcmovbe
lock
cwtl
sub
mov
sub
pop
xchg
lds
jbe
aad
mov
xchg
xchg
xor
addr16
roll
mov
or
push
xchg
push
ljmp
inc
cld
mov
in
add
lret
push
jp
mov
lods
xlat
push
mov
xchg
mov
jge
mov
scas
add
mov
mov
pop
adc
fildl
and
sbb
cmpsl
sbb
or
and
lods
and
repnz
or
pushf
push
mov
mov
cmp
cmp
mov
or
iret
add
dec
mov
mov
push
fistps
in
mov
dec
mov
out
add
decb
cmpsl
repnz
idivl
push
add
scas
mov
addr16
inc
xor
cmp
je
push
add
and
nop
push
xchg
hlt
vmaxpd
and
xchg
or
dec
add
push
push
ljmp
rolb
pop
mov
call
dec
mov
fdivs
insb
xor
negb
cmc
cmp
jle
dec
and
sbb
cmp
sub
sbb
cmc
aad
outsl
add
cmpsb
std
js
mov
lods
lea
int3
pop
lea
out
dec
adc
cmpsb
inc
push
sbb
nop
pop
scas
mov
sub
mov
call
xor
and
mov
mov
popa
test
xchg
ljmp
or
mov
out
aam
or
lcall
pop
cltd
mov
pop
pop
jae
shll
gs
jg
lret
shlb
xor
inc
xlat
mov
repz
stc
add
inc
leave
insl
loop
fdivl
lahf
std
xor
iret
and
push
and
and
ljmp
insl
sub
mov
in
xorb
out
dec
sub
jb
dec
hlt
aaa
int
test
lea
push
sar
mov
call
cltd
clc
lea
jmp
and
js
xor
mov
pushf
movsb
ds
ds
pusha
and
and
stos
test
dec
outsl
xor
leave
fmull
test
and
sbb
idivb
mov
into
cmc
outsl
add
push
mov
bound
call
sbb
xor
js
mov
pop
or
jmp
pop
mov
mov
adc
pop
pop
inc
shrb
repnz
xlat
push
xor
pushf
or
mov
add
pop
and
outsl
pusha
fldenv
mov
in
ret
shll
pop
or
movsl
cld
push
dec
and
insl
mov
gs
mov
js
mov
add
jne
push
sbb
testl
arpl
int
bound
fisttps
leave
jo
sbb
js
push
adc
add
push
cmc
out
sbb
movsb
scas
inc
jg
push
leave
pop
adcb
push
scas
fwait
int
push
movsb
jmp
fisttpll
lock
std
lret
adc
sbb
xor
into
ss
mov
cmp
andb
repz
pop
mov
sub
test
ja
xchg
addb
dec
push
ljmp
iret
dec
addr16
out
daa
dec
ss
int3
sbb
jo
or
addr16
frstor
xchg
inc
inc
insl
es
arpl
xchg
xor
cld
jo
cmpsb
repnz
push
cmp
sub
mov
imul
mov
sub
xchg
xor
outsl
xor
rorl
push
pop
call
dec
ja
out
mov
lock
lea
adc
imul
mov
jge
cwtl
jmp
push
sbb
stos
jnp
std
or
das
xchg
xor
js
shl
inc
in
mov
lds
or
inc
ret
hlt
decl
and
jnp
jge
testl
mov
aam
pop
pusha
out
scas
xlat
stc
cmpl
addr16
cld
adc
cmp
dec
pop
pushf
or
adcb
aas
and
lods
mov
and
loop
notb
add
cmpsb
add
add
mov
or
std
push
fmulp
repz
add
js
mov
xchg
test
or
dec
cmp
in
cs
xor
out
pop
pop
ss
jl
push
outsl
test
mov
call
pmulhuw
loop
fdivr
into
call
fdivrp
mov
xchg
pop
rcr
dec
pop
pop
push
sarl
fs
sub
and
fwait
inc
push
and
or
xor
out
jns
out
mov
cmpb
icebp
pop
enter
pop
and
lds
mov
loop
test
push
xlat
test
xchg
cli
xor
sub
test
adc
aaa
jecxz
test
shlb
cltd
enter
mov
sbb
pop
or
lods
test
idiv
lock
popf
and
mov
add
js
push
shr
push
dec
sub
loope
sahf
adc
xchg
xchg
push
or
push
or
fs
cld
cwtl
xchg
in
in
sbb
pop
and
cmp
mov
loop
adc
mov
imul
jae
leave
inc
lods
arpl
in
adc
into
sub
hlt
lret
cmpsl
scas
jecxz
decb
or
jnp
popa
dec
dec
stc
or
jge
xor
mov
cmp
or
in
popl
mov
inc
or
test
pop
jo
push
mov
fistpll
mov
xchg
in
push
jb
push
or
jns
add
scas
movsl
xchg
add
inc
popf
xchg
shrl
in
fisttpll
add
mov
jge
dec
ficoms
dec
divb
jo
xchg
dec
iret
mov
cwtl
dec
xchg
xor
sub
hlt
dec
pushf
mov
add
add
or
jg
sarl
push
movsl
pop
adcl
lret
add
fldcw
lret
mov
jnp
or
mov
repnz
test
pop
inc
cmp
in
jnp
push
sarb
xlat
out
inc
scas
cwtl
je
push
push
ret
mov
mov
xlat
jmp
fst
and
xchg
jge
xor
enter
lret
sbb
std
dec
push
popf
sahf
fldenv
arpl
sbb
sbb
loopnew
sarl
popa
out
lea
les
loope
jmp
mov
lock
ss
push
shrb
cmp
mov
frstor
int3
jns
aas
iret
es
xlat
mov
fs
cltd
pop
push
sub
andb
pop
loop
xchg
test
pop
xor
ds
aad
rorb
in
call
aas
add
sub
mov
push
or
sbb
sub
or
xchg
in
xchg
cli
xor
mov
push
xchg
and
mov
movsb
lahf
inc
sub
jle
imul
mov
stos
dec
es
jns
jae
rclb
movsb
or
lea
push
popa
jge
inc
add
popf
cmp
cltd
hlt
push
push
in
stos
mov
cmp
jge
or
pop
fsubrs
pop
in
push
push
jp
sbb
addb
enter
es
imul
xor
leave
inc
ret
or
lds
push
xor
dec
pop
adc
int3
push
movsl
xor
dec
add
xlat
mov
dec
lcall
push
je
jb
iret
and
or
in
out
stc
jnp
mov
pop
test
push
loopnew
test
mov
pop
lods
or
adc
in
mov
in
test
or
data16
xchg
mov
ljmp
jbe
add
push
mov
mov
aad
push
cli
mov
int
pushf
and
xor
jb
or
mov
test
aad
push
in
into
mov
adc
and
inc
mov
loope
std
and
and
push
jb
jmp
cmp
push
aad
pop
push
test
dec
push
cmpl
and
pop
insb
xor
adc
getsec
push
and
dec
xchg
scas
ret
sarb
and
xchg
mov
pop
push
inc
sti
mov
sbb
cmp
mov
jg
and
jp
pop
inc
xchg
inc
jo
adc
cltd
scas
and
jl
jno
stos
and
adc
daa
add
jo
or
mov
mov
jno
add
adc
fcoml
pop
and
jmp
cwtl
cwtl
das
mov
jmp
add
and
pop
int3
jecxz
add
push
push
jo
outsl
arpl
pop
add
les
out
jb
mov
pop
jmp
sub
and
fstl
out
push
insb
cmp
jecxz
fsubl
test
aas
adc
fcmovbe
in
inc
in
aad
add
dec
testl
outsb
dec
cmpsl
int
testb
jae
bound
sub
call
fisubrl
mov
mov
mov
xor
adc
add
imul
scas
int
push
pop
movsl
fdivs
adc
bound
cmp
push
jecxz
inc
add
and
inc
sub
test
xor
dec
mov
pop
jno
imul
bound
xchg
cmp
pop
mov
fmull
dec
sbb
adc
jbe
shlb
lret
shrl
cmp
sub
and
and
pop
fistl
ja
aas
shl
mov
xchg
mov
adc
faddl
or
dec
cmpsb
pop
xchg
mov
orl
mov
pop
inc
lahf
fsubs
lock
imulb
lret
pop
pop
mov
std
add
out
int
and
mov
dec
fcmovu
mov
mov
mov
xchg
test
lea
aad
orb
push
lock
mull
and
adc
outsb
stos
imul
sahf
mov
add
jbe
sti
push
jno
in
sahf
dec
adcb
aad
fbld
mov
loopew
frstor
cld
mov
sub
sbb
mov
cvtdq2ps
add
int
adc
repnz
cltd
cmp
mov
loopne
fmull
test
fwait
jno
mov
mov
ds
mov
in
test
cltd
sarb
mov
inc
movsb
movsl
jbe
das
mov
popa
test
lcall
aas
popa
mov
push
mov
add
push
jp
pop
jg
stos
imul
jge
ret
dec
subl
add
mov
test
mov
lret
adcl
mov
addr16
cwtl
das
hlt
popa
insl
add
pop
mov
out
push
xor
aas
sub
cmc
xchg
insl
leave
xchg
test
ret
mov
jne
add
sub
rcrl
mov
mov
cmp
test
imul
fwait
mov
mul
outsb
loope
add
push
test
mov
in
inc
xlat
repz
nop
adc
mov
or
jnp
mov
xor
or
dec
testb
cmpb
leave
push
fstpl
pusha
jge
xor
sbb
sub
aas
pop
testb
jg
leave
iret
sti
addr16
mov
cmp
loop
das
fcomps
sub
adc
mov
mov
fstpl
scas
mov
cmp
and
dec
leave
das
sti
sti
loopne
xchg
jae
xchg
aas
push
and
inc
mov
ljmp
dec
and
imul
add
outsb
ret
fcoms
loopne
sti
insb
and
jle
fisubs
add
aad
into
pop
mov
sub
stc
sbb
filds
mov
cmp
cmc
push
outsb
or
cmp
in
std
std
aam
leave
sub
fdivrl
outsb
inc
pop
jmp
nop
test
mov
notl
dec
filds
arpl
xchg
mov
inc
xchg
or
cli
jb
xchg
pop
bound
testb
pop
aad
pop
call
add
sbb
xchg
pushf
out
fwait
pop
push
adc
cmc
daa
cli
xchg
or
fidivs
lods
inc
jae
mov
test
imul
and
daa
std
and
addr16
mov
aam
nop
fistpl
sar
inc
xchg
rolb
jnp
or
xor
adc
xchg
sub
dec
or
jae
lea
cmp
dec
jmp
ficompl
nop
ret
push
push
cwtl
push
mov
inc
pop
mov
jmp
dec
dec
and
testb
cmp
aaa
mov
cmp
push
rclb
add
dec
mov
loope
mov
xor
sbb
fucomp
cmpb
scas
pop
cld
push
sahf
adc
mov
jmp
mov
mov
flds
repnz
mov
pusha
fisubs
mov
andl
mov
lea
cmc
mov
and
pusha
pop
hlt
fisttps
sahf
xor
jl
and
jns
idivb
mov
lds
adc
jb
and
clc
mov
stc
repz
xchg
push
or
jg
xor
fimull
mov
and
rol
cld
pop
sahf
rcll
pushf
add
mov
lea
cmpsb
cmp
inc
sub
mov
dec
ljmp
loope
sbb
pusha
push
test
cmp
mov
call
lcall
pop
mov
adc
jp
es
aaa
leave
cs
pop
push
dec
jne
sub
ljmp
sti
xchg
js
fsubrl
cltd
std
aam
insl
inc
push
adc
dec
stos
and
fwait
pop
out
cs
xorl
ds
aaa
push
sub
xchg
test
stos
inc
mov
lea
sbb
fst
add
or
or
xorps
lret
div
cmc
adc
push
out
stc
lcall
dec
lds
jae
es
xor
and
loopne
xchg
in
mov
mov
add
push
movsb
sbb
mov
shr
sbb
dec
hlt
in
mov
lds
sub
jo
jp
mov
inc
ss
cmp
adc
lret
outsb
repz
sbb
ljmp
xchg
mov
je
xor
pop
mov
push
popa
sar
add
int
push
adc
fs
cmp
dec
adc
sahf
add
mov
je
sbb
mov
in
xorl
scas
imul
outsl
fmuls
ds
sub
cmp
xchg
mov
lock
js
xchg
lods
lcall
in
mov
loopne
inc
fs
lcall
mov
pop
fstpt
nop
lock
cmc
lock
or
jl
cmp
cs
mov
lods
inc
lahf
or
push
fldcw
push
ljmp
hlt
les
mov
push
std
fwait
dec
mov
fmulp
sbb
pop
inc
mov
xchg
xchg
xor
inc
inc
push
xchg
xchg
rorl
pop
jo
ljmp
and
ret
jl
loope
inc
iret
sub
lcall
adc
sbb
test
lea
call
xchg
lods
movsl
mov
or
xor
sbbl
in
jg
fistps
xchg
cmpsl
pop
shrb
cltd
inc
lcall
xchg
mov
and
sub
rcl
shll
fincstp
lea
in
hlt
jae
add
dec
jb
js
insb
or
jno
cwtl
inc
dec
xor
jno
jecxz
pop
jmp
insl
pop
cmp
outsl
dec
dec
clc
pop
test
push
insb
ss
stc
pop
std
popa
push
xor
jbe
mov
jmp
or
call
in
test
push
add
stos
nop
lods
les
adc
cmpsl
jne
pop
add
imul
outsl
mov
sub
iret
into
test
movsb
mov
fcmovnb
sahf
sbbb
mov
pop
mov
mov
adc
jo
cmp
loopne
sti
inc
orl
shl
mov
dec
pop
jecxz
add
repz
sub
sbbl
shld
cmp
cltd
inc
jecxz
addl
outsb
cmp
lods
lds
xchg
push
jl
mov
lods
lods
cmpsb
xor
push
cltd
sbb
mov
mulb
ret
push
bound
repnz
es
jae
and
aad
pop
adc
and
jae
mov
add
mov
jecxz
cmp
iret
mov
jns
dec
mov
pop
bound
stos
lods
cs
and
fstpt
or
repnz
lods
cmc
dec
testb
dec
cmp
add
rcl
pop
lahf
push
inc
dec
fcomi
cmp
mov
push
cmpl
clc
cmpsl
ljmp
loop
mulb
xchg
repz
rclb
cmp
inc
test
dec
es
mov
pop
mov
pop
mov
in
ds
sub
int3
call
adc
or
add
jle
loopne
sub
push
and
jecxz
xchg
cmp
pop
lock
xchg
fnstenv
mov
jg
dec
push
dec
mov
lock
ljmp
lods
add
sub
sub
out
jno
sbb
push
pop
mov
fadd
iret
mov
loope
bound
test
out
dec
movsb
into
shl
xor
lock
dec
mov
pop
lret
pop
roll
leave
inc
in
loope
dec
mov
lods
add
or
and
sbbl
mov
xchg
jno
xchg
sahf
mov
ret
push
xlat
push
cmpsl
pop
loope
add
out
inc
mov
mov
pop
jecxz
or
xor
sub
sbb
push
stos
mov
jle
loop
inc
insb
ds
lock
popf
jecxz
es
addl
or
xor
test
xor
int
daa
push
push
mov
pop
cmp
int
dec
xlat
cmc
es
sarb
cltd
rolb
testb
sbb
mov
sbb
in
cmc
jle
out
xor
xchg
movlhps
dec
mov
in
xlat
movsb
dec
or
or
cmc
cmpsl
aaa
jmp
adc
loopne
mov
xlat
test
stos
enter
xor
add
sub
sbb
fisubrs
pop
mov
scas
jb
movsb
repz
xchg
orb
dec
and
sbb
loopne
inc
test
inc
shr
jmp
xor
test
pop
and
fmul
add
push
or
fwait
loopne
ja
sbb
push
add
imul
pop
fisttps
jno
push
adc
dec
loope
fistpl
mov
jecxz
lahf
insl
cmp
pop
push
push
add
push
inc
scas
xchg
mov
fs
pop
ds
mov
into
adc
mov
sahf
and
pop
std
aad
aam
adc
sarl
jecxz
movb
clc
dec
dec
mov
ss
jae
notb
cld
test
pop
cmp
sub
rclb
and
cmp
xlat
pop
lock
xchg
or
mov
nop
in
stos
aas
fstps
push
test
icebp
mov
dec
test
adc
scas
sub
cli
inc
movsb
test
push
rorb
dec
cmc
push
push
or
imul
in
sub
push
mov
test
dec
jnp
jmp
out
fcomps
mov
inc
mov
jno
insl
xchg
adc
or
inc
mov
pop
jnp
sub
mov
xchg
pop
or
arpl
shlb
repnz
mov
repnz
xor
scas
fmulp
in
cmp
inc
xchg
aad
decl
popa
dec
jl
lods
xchg
aad
mov
lahf
cmp
pop
and
std
ss
or
mov
jbe
xor
xchg
lcall
inc
repnz
add
stos
repz
hlt
and
mov
xchg
inc
dec
sbb
stos
fsubp
aas
cmp
inc
lods
ljmp
or
dec
jo
das
jecxz
dec
sub
push
or
dec
and
sub
dec
inc
and
mov
loop
jnp
loop
sete
add
or
loope
sub
jl
ds
xor
adc
outsb
shlb
and
xchg
xchg
push
mov
and
cmp
and
and
push
fistps
cmpsb
test
in
faddl
fbld
jecxz
or
int3
cli
jecxz
cmp
into
std
sbb
jae
jo
fsubrs
mov
inc
lods
arpl
cmp
dec
pop
mov
and
push
andb
sahf
in
test
sbb
lret
shlb
fs
and
aad
daa
das
lock
ss
mov
dec
mov
aad
or
pop
mov
mov
xor
adc
decb
mov
push
jmp
stc
lret
out
xlat
fisttpl
mov
les
push
loope
pop
stc
rcrb
mov
fwait
repnz
push
and
out
ja
mov
sbb
test
jl
jnp
pop
xchg
enter
fmull
jo
mov
xchg
push
dec
rcrl
jmp
cs
add
xchg
adc
mov
push
mov
dec
divl
xchg
imul
insl
add
push
jle
js
push
mov
xor
mov
push
cmp
pop
insl
pop
rorb
std
cmp
jns
pop
inc
sub
mov
les
jo
addl
inc
xchg
dec
or
andl
jg
scas
cmp
aad
and
xchg
sbbl
out
xor
arpl
dec
inc
inc
pop
jns
jo
jl
xchg
loopne
mov
in
outsl
shl
adcl
call
aam
repz
jmp
cld
int3
cmp
gs
lcall
sub
mov
inc
mov
mov
add
ss
clc
aam
sbb
inc
xor
pop
xor
xor
shl
and
pop
mov
inc
loope
jo
pusha
aam
mov
inc
or
cmpsb
xchg
xor
push
sub
pop
xchg
or
lret
mov
stc
inc
cmp
insl
fbstp
adc
inc
lods
insb
aas
mov
push
insl
cmp
or
mov
or
dec
lds
jmp
pushl
pop
inc
ret
aam
lods
data16
or
rcr
mov
fstl
mov
data16
pop
push
aas
cmp
jo
fistl
inc
jns,pn
int
out
int3
test
dec
rcll
jecxz
cmp
sub
rcll
dec
mov
xor
adc
cli
add
fisubl
ss
in
mov
imul
jl
outsb
push
push
inc
rclb
sub
mov
fnstsw
scas
jg
andb
push
nop
fidivrl
jo
jbe
sbb
fdivrl
ja
mov
in
mov
xchg
inc
out
jnp
lret
push
mov
sbb
pop
jo
mov
ja
jno
sbb
jg
dec
testl
lods
addl
inc
arpl
mov
dec
addb
jbe
daa
dec
mov
or
add
mov
sub
adc
pop
sbb
rcr
mov
cmpsl
mov
data16
inc
cli
xchg
clc
test
lds
sub
inc
mov
call
sti
jno
testl
mov
shll
push
jge
dec
aad
les
sub
fists
mov
xlat
outsb
cld
imul
cmpl
hlt
sub
std
nop
lret
lea
lds
into
sbb
imul
jns
test
xlat
mov
pushf
sbb
and
pop
push
movsb
adc
mov
xchg
inc
jns
addb
mov
cltd
leave
mov
mov
sbbb
rorb
xchg
cmp
ljmp
mov
push
push
jl
mov
loopne
pop
cmc
adc
inc
pop
xor
dec
mov
xchg
sub
fs
cs
pop
test
push
test
fadds
adc
cmp
xchg
insb
inc
stos
pop
mov
in
xchg
ja
movsb
dec
pop
test
jbe
dec
inc
mov
cmpsl
inc
ret
cmpl
add
push
std
int
loope
dec
fisubs
mov
push
aaa
add
out
cmp
xor
in
out
inc
addr16
add
divl
jecxz
popf
out
rolb
xor
lods
lret
imul
mov
leave
dec
lret
cmc
insl
shll
jl
adc
jae
add
out
imul
push
bound
sub
dec
jne
cli
cmp
dec
and
cmc
jmp
cmp
jecxz
pop
cli
xchg
jp
add
dec
ss
out
aas
lock
adc
cwtl
xor
pop
jmp
stc
push
mov
enter
cmp
mov
jo
jmp
push
push
dec
adc
icebp
repnz
test
daa
inc
in
cmc
pop
cmp
outsb
xchg
mov
icebp
rcl
aad
pop
flds
jle
ret
pop
inc
rorb
fwait
arpl
rcrb
jg
pusha
data16
dec
inc
outsb
jl
lea
jl
mov
sbb
jl
cmp
jl
lods
and
pop
cmc
stc
mov
and
push
pop
sahf
mov
movsb
test
mov
mov
inc
jecxz
in
pusha
fbstp
xchg
mov
xlat
insb
int
loopne
fdiv
or
pop
fcompl
jecxz
inc
jae
mov
and
les
test
shl
into
stc
jg
jmp
outsb
xchg
test
xlat
les
dec
loopne
sbb
pop
and
ljmp
mov
inc
rcll
fidivrs
or
xor
adc
jle
cld
mov
popf
or
lds
icebp
shrl
mov
or
mull
pop
out
sbb
cmp
mov
pusha
pop
aam
mov
or
pop
std
movsb
xchg
cmp
test
bnd
pusha
in
or
jp
inc
aaa
mov
adc
mov
xorl
in
mov
dec
call
cmpsb
sub
dec
cmp
pop
fnsave
inc
xchg
mov
sub
idiv
and
cmp
push
or
stc
cmp
stc
jo
movsb
and
xchg
mov
aaa
sbb
mov
dec
dec
mov
shrl
negl
and
dec
fmull
jmp
push
sub
pop
push
add
int3
mov
jl
leave
xchg
xor
or
lock
pop
dec
test
sti
enter
loope
adc
sbb
cmp
dec
sbb
je
in
cmp
std
subb
cmp
sbb
outsb
mov
jns
add
lea
add
adc
push
fstl
sub
sub
in
cmp
shlb
rcrl
jno
mov
out
xor
add
scas
xchg
hlt
shlb
or
jmp
xchg
cmp
shrl
outsb
push
bound
pop
mov
lahf
jg
das
xor
sbb
sbb
jmp
jg
xchg
int3
xchg
xchg
test
push
arpl
cmp
pop
sbb
mov
mov
xchg
jbe
mov
in
stos
push
aad
inc
aam
in
or
lea
loopne
jno
push
or
pop
xchg
in
movsl
in
aam
into
add
pop
bound
jmp
imulb
std
jge
dec
cmpsb
repnz
add
pop
jbe
int3
movsl
fisttpll
in
ret
test
pop
xlat
outsl
xchg
nop
jnp
sub
in
aam
clc
mov
sti
xlat
into
ret
int3
in
movsl
sbb
xchg
adc
jo
add
push
xchg
fisttpl
push
xchg
outsl
dec
out
and
enter
mov
pop
adc
in
jl
ljmp
sub
mov
shlb
test
loopne
mov
test
pop
push
ds
or
push
push
es
cmp
subb
or
gs
lods
jnp
test
jge
jl
roll
mov
jg
sub
push
das
ljmp
or
pop
dec
outsl
mov
cwtl
jmp
adc
cmp
mov
xchg
dec
xor
sbb
inc
adc
aam
arpl
xchg
add
mov
pop
ja
inc
insl
xchg
shlb
adc
adc
inc
add
roll
jne
cs
ss
lods
ret
lcall
jb
jp
add
add
mov
xor
or
xor
cli
movsb
jns
notl
jne
ret
push
add
mov
fstpl
out
jno
adc
jnp
fistpl
jecxz,pn
aaa
ds
adc
inc
js
stc
mov
pop
sbb
xchg
cmp
add
push
jbe
add
dec
or
mov
arpl
std
imul
test
xchg
jb
add
mov
dec
icebp
push
mov
int
js
lret
mov
and
fsubs
lock
outsb
adcl
daa
aad
imul
pushf
aas
repz
std
xchg
mov
addr16
outsb
outsl
push
mov
in
and
push
ljmp
xor
jmp
mov
in
in
pusha
xor
and
mov
add
push
test
inc
into
cmp
sbb
or
pop
sbb
sti
aas
movsb
mov
ss
adc
jg
in
jge
loope
out
cli
decb
push
xchg
data16
lcall
cmp
test
cmp
fwait
out
popf
mov
enter
int
popa
dec
mov
mov
jg
scas
or
fwait
adc
xchg
enter
data16
pop
and
cmc
mov
call
xchg
enter
inc
fidivrs
fisubrs
mov
aam
fsubs
fisubs
mov
mov
xchg
pop
push
add
mov
pop
dec
jecxz
iret
sub
out
outsb
xchg
int3
cli
dec
pop
lahf
lahf
es
movsb
push
dec
addr16
mov
push
icebp
aam
dec
ds
adc
clc
or
xchg
jp
or
dec
and
jb
mov
loopne
movsb
mov
loopne
lahf
scas
pusha
stc
out
jne
xor
push
sarb
fists
ljmp
mov
pop
sbb
pop
nop
xor
push
cli
inc
jg
mov
sbb
sti
mov
add
out
dec
stc
popf
inc
sub
mov
leave
out
ljmp
mov
jb
xchg
roll
dec
jnp
adc
int
movsb
lea
mov
test
cmp
loope
cwtl
xor
aas
fistpl
ret
xchg
lods
loopne
loopne
push
ljmp
xlat
adc
adc
sub
mov
mov
loop
xor
mov
mov
adc
and
inc
outsl
push
dec
and
pop
out
call
call
fsubl
call
cld
enter
dec
cmp
das
sbb
rol
mov
jbe
in
aam
pop
insl
jns
fstpt
and
cmp
xor
sahf
ficompl
into
fisubl
fwait
lcall
mov
cli
cmpsl
xor
dec
adc
dec
cmc
sub
in
ret
cmp
aas
std
and
dec
out
or
adcl
jge
jp
leave
scas
xchg
add
mov
adc
sub
add
stos
and
push
mov
movsb
scas
sub
roll
inc
push
lcall
pushf
and
mov
cmpsl
and
sbb
idiv
movsl
mov
test
and
and
inc
aaa
es
pushf
pop
fmuls
cmp
push
xchg
stos
mov
mov
bound
outsl
pop
pop
xchg
mov
pop
mov
iret
mov
xchg
ret
rcrb
stos
arpl
movsl
lret
dec
shll
dec
xor
loopne
clc
arpl
dec
and
or
mov
cmp
adc
sub
hlt
pop
leave
lds
pop
inc
cmp
adc
dec
add
pop
mov
fnstenv
inc
xor
mov
sub
setp
aad
aad
pop
mov
lock
push
cmp
test
cltd
add
shlb
jg
iret
xchg
call
mov
cmp
filds
sbb
mov
int
or
sti
mov
mov
pushf
sbb
or
outsb
push
mov
mov
xchg
sarb
pop
add
pop
ret
inc
sub
das
dec
popa
mov
in
push
rcl
add
sbb
insl
or
jmp
xlat
pop
lcall
jo
sbb
sbb
ret
adc
les
fcmove
push
push
dec
mov
call
pop
test
push
icebp
push
shll
push
dec
popf
jp
enter
mov
pop
test
je
xlat
mov
std
test
xlat
adc
cmp
es
arpl
push
jne
scas
inc
ds
xlat
mov
and
mov
adc
inc
jnp
push
pop
dec
lea
cmpsl
cmp
fdivr
cmpsb
aad
int3
cli
jg
mov
lock
xor
imul
jbe
int
xor
lods
arpl
lock
push
push
clc
dec
cs
test
mov
mov
das
jb
in
jecxz
mov
adc
int3
rclb
loope
inc
jmp
xchg
test
xchg
jbe
mov
out
mov
rcrb
xor
pop
sbb
jo
adc
sbb
add
in
nop
jnp
int
mov
out
shrb
pop
xchg
fistpl
lds
dec
repnz
lea
add
jo
fwait
or
cwtl
addr16
pop
jns
lock
addr16
mov
mov
mov
lcall
add
jl
notl
mov
adc
loopne
xchg
xor
outsl
daa
push
sbb
mov
xchg
cltd
pop
sub
sbb
pop
or
push
mov
popf
push
out
mov
bound
adc
nop
add
shrl
mov
add
ljmp
sarl
int
pop
push
or
sub
leave
mov
push
inc
setne
or
fs
fldt
cmp
mov
cmp
or
xchg
add
cld
jne
gs
fidivl
ss
xchg
xor
pop
xchg
icebp
sub
or
fstl
leave
neg
mov
sbb
dec
mov
mov
cmp
enter
aas
jne
cltd
or
cmp
insl
push
clc
insb
test
in
push
pop
test
push
lahf
xor
movsb
ret
repz
cs
xor
xor
icebp
nop
and
add
lods
into
mov
and
sub
sti
rcrl
in
inc
inc
mov
adc
popa
out
add
cmp
in
outsb
xchg
push
or
sarb
mov
movsl
mov
jbe
pop
lods
mov
push
mov
aaa
xchg
xchg
idiv
lret
mov
add
add
andl
add
push
jbe
add
cli
push
scas
std
or
fistpll
cwtl
mov
jno
jns
std
aam
ljmp
mov
sub
add
popa
stos
out
jne
inc
sub
repnz
cmp
out
mov
mov
push
push
pop
repz
mulb
ds
imul
pop
inc
cli
mull
jge
sub
pop
or
inc
mov
fwait
and
adc
sub
add
fimull
jl
and
dec
or
pop
mov
mov
loope
push
pop
jge
in
test
ja
jne
jbe
jns
mov
push
dec
cltd
jo
test
jp
mov
adc
je
and
jnp
xlat
sarb
sbbb
dec
pop
dec
and
adc
hlt
push
push
cmpsl
into
jg
gs
xchg
mov
pop
jge
xlat
enter
push
adc
mov
sub
pop
dec
push
lock
pop
xchg
filds
ds
je
xor
and
add
add
sub
in
fisttps
ret
inc
cltd
add
rorl
jns
inc
cmpsl
jnp
cmp
cmpsl
das
push
icebp
fcomps
push
xrelease
add
lret
ret
pop
repnz
mov
push
add
sbb
xor
mov
mov
or
lcall
out
cltd
add
imul
xor
ss
mov
add
mov
mov
inc
int3
mov
inc
xor
pop
dec
add
cmp
loop
fcoms
les
out
sub
mov
cmp
mov
punpckhdq
push
or
xor
cli
push
jne
pop
int
jnp
jmp
mov
data16
push
and
js
jo
ret
jle
cmc
imul
cmp
fsubrl
scas
imul
js
inc
fnsave
sarb
stc
and
mov
inc
cmp
xchg
lods
adc
mov
pop
lahf
push
fmul
scas
sub
cld
adc
fcmovb
movsb
icebp
outsb
cltd
add
mov
or
test
movsb
inc
adc
sbb
sarb
aam
jg
jne
dec
adc
adc
sti
call
mov
out
mov
or
dec
lock
pop
pop
jnp
cmp
mov
lret
cli
xor
add
jno
imul
push
enter
pop
addr16
fs
mul
dec
bound
test
or
enter
push
outsb
add
movsl
xchg
add
aam
mov
sbb
jnp
mov
lods
sbb
pop
mov
out
sbb
cwtl
mov
fstps
jge
add
loope
pop
movsl
jle
mov
ljmp
fiadds
add
cmp
arpl
jo
pop
xlat
movsb
in
iret
pop
mov
pop
in
cmpsb
mov
jg
sbb
dec
cmpsl
test
push
mov
lret
push
pop
xchg
jno
pusha
mov
insb
divl
ss
lods
fcompl
cmp
mov
mov
ret
pop
cltd
dec
scas
imul
in
cli
xchg
cmp
mov
outsb
mov
shr
call
mov
int
dec
mov
add
popa
pop
out
in
dec
dec
inc
aas
daa
and
das
jne
lret
mov
mov
leave
into
cwtl
xor
push
aam
outsl
pop
pop
mov
xor
and
push
test
popf
xor
fbld
into
mov
ds
lods
mov
xchg
add
inc
push
test
pop
dec
mov
xor
xchg
push
test
lock
lods
jne
and
movsb
lock
int
mov
sub
inc
mov
clc
repnz
push
fnstsw
mov
repnz
sub
push
lds
push
andb
cmpsb
xor
adc
push
pop
bound
jmp
jno
out
test
or
add
dec
stos
or
cs
mov
ret
les
lret
into
out
inc
mov
mov
fnstsw
adc
jmp
inc
rorb
jl
or
mov
push
call
enter
dec
pusha
sbb
imulb
test
inc
sbb
adc
in
fstl
sarb
jbe
inc
sbb
jecxz
out
sub
mov
xchg
push
popa
popa
in
scas
xorl
cltd
xor
aad
lea
scas
cmpb
iret
sub
add
push
pop
movsb
inc
arpl
ss
ret
sbb
jle
fs
push
stc
nop
out
jl
into
je
inc
lea
or
pop
fldcw
clc
jb
mov
ss
cmp
or
ja
add
enter
popf
add
das
test
call
xor
push
lods
cmp
fstpt
push
cmp
das
pop
xor
mov
rcll
push
mov
dec
aam
fildll
mov
and
les
and
and
dec
loop
or
fldt
mov
sub
test
test
adc
pop
pop
xor
jp
xchg
movsl
mov
cmp
clc
icebp
sarl
outsb
les
push
adcb
mov
mov
or
jmp
dec
sti
cltd
cmp
cmc
push
addl
into
mov
push
jecxz
fs
shlb
xor
push
add
cmc
ret
or
pop
aam
jg
inc
int
cmp
aad
popa
shlb
ficomps
and
mov
xchg
loop
pop
push
adc
inc
push
sub
push
or
dec
mov
dec
test
into
lods
insl
jge
adc
xlat
arpl
xchg
jmp
repnz
cmc
aam
je
add
mov
pop
inc
daa
or
mov
cmpsl
dec
rcll
test
cld
xchg
adc
fnstcw
fwait
icebp
push
adc
mov
jns
ret
sub
insb
jp
mov
out
adc
cmp
mov
shrl
and
push
mov
out
sbb
add
push
jge
js
jb
inc
orl
ljmp
adcl
lea
outsl
cmp
clc
mov
inc
inc
out
inc
lret
test
jne
jmp
xchg
adc
jle
insl
push
jb
adc
clc
add
aaa
test
stc
mov
sbb
mov
shl
nop
fiaddl
mov
jno
outsb
inc
pusha
inc
int3
sub
test
adc
dec
sub
int3
sahf
js
fsubrs
and
pop
rolb
push
je
fwait
cmp
loop
mov
xor
scas
fdivl
jns
jno
lahf
pop
push
shrb
mov
stc
stos
repnz
or
jecxz
pop
push
lret
pop
xchg
nop
mov
jns
out
nop
cmp
notl
jecxz
push
mov
push
adc
bound
test
data16
jno
inc
gs
fs
in
mov
jl
gs
inc
cli
mov
notl
sbb
icebp
and
sbb
adc
jae
jbe
cmpsl
jnp
fcoms
mov
fcoms
sub
lods
psubb
push
pop
sbb
inc
dec
daa
imul
push
inc
dec
and
cmp
dec
enter
push
movsb
cmp
cmpsl
inc
mov
jg
out
pop
push
pop
and
xchg
jae
out
push
or
pop
ss
dec
xor
mov
mov
popa
jnp
aas
jge
popf
inc
and
push
dec
jge
addr16
xor
cwtl
shlb
sahf
xchg
orl
pop
sub
pushf
in
ret
cmp
neg
int3
jae
xor
repnz
movsl
add
xor
xor
or
or
add
inc
push
sub
adc
dec
stc
rclb
lock
data16
das
jg
mov
mov
test
mov
insb
xchg
mov
inc
in
xchg
cmove
cmp
xor
jnp
hlt
loopne
movsl
popl
add
add
loop
fstpt
lret
pop
repz
out
pop
push
movsl
lock
andnps
lods
outsb
add
add
stos
out
cmp
or
cmp
fstl
cwtl
or
or
inc
mov
mov
xlat
cmc
popf
cmp
movsb
add
lret
xchg
test
and
jae
inc
mov
stos
mov
cltd
xor
mov
xchg
xor
mov
mull
or
sbb
cmp
dec
repnz
xchg
cwtl
ss
pop
ds
hlt
mov
roll
ja
mov
fwait
pop
and
inc
inc
insl
test
stos
jle
mov
lods
adc
js
mov
pusha
inc
cmp
lds
adc
pop
pop
jo
aad
addr16
pop
or
arpl
js
mov
scas
jecxz
jge
aam
jecxz
xchg
inc
mov
scas
inc
cmp
xchg
xchg
iret
push
xor
sbb
fldl
filds
cmp
and
dec
jns
stos
out
pop
xchg
daa
cld
bnd
mov
sbb
lds
mov
loope
pushf
xchg
outsb
add
push
shll
fbstp
push
fwait
lret
inc
lahf
lcall
mov
mov
sahf
and
push
in
dec
stos
aad
push
sub
cmpsb
je
sbb
push
push
mov
inc
adc
xchg
sub
sub
mov
jo
out
mov
in
mov
push
pop
scas
sbb
pop
out
sti
icebp
dec
notl
cld
outsl
pop
jg
and
fstp
dec
mov
inc
leave
ret
pop
icebp
ficoms
shlb
movsb
hlt
cmp
mov
movlhps
mov
dec
outsl
jbe
jle
mov
loope
aas
mov
ficoms
ret
push
stos
jb
pop
or
jbe
mov
push
sbbb
sbb
adc
xchg
jnp
xor
movsl
arpl
loopne
sub
lods
test
lock
lret
jp
loope
stos
inc
xchg
jns
mov
inc
push
popa
xor
push
or
sti
cmp
addb
pop
pop
pushf
insl
xor
gs
push
push
out
pop
and
xchg
mov
mov
adc
pop
mov
xchg
add
jmp
in
inc
cmp
sbb
mov
scas
mov
ja
daa
cmpl
dec
fmuls
leave
jmp
push
aam
aam
insl
adc
xchg
into
or
int
jecxz
setb
dec
in
icebp
push
rorb
dec
addb
in
or
push
push
jo
mov
adcl
or
jg
gs
int
mov
call
xchg
lock
in
xchg
js
sbb
and
push
jno
int3
sub
inc
bound
pop
arpl
sbbb
cmc
xchg
cmp
mov
cmp
mov
stos
sub
arpl
push
and
addr16
add
adc
xor
adc
cs
mov
jbe
xor
dec
push
mov
pop
dec
xlat
cmc
cs
lret
and
fisubs
jns
push
push
test
pop
nop
mov
popa
mov
bound
jg
nopl
cmpb
mov
push
test
movsb
push
mov
shlb
mov
data16
shll
jo
imul
es
fsubrs
inc
pop
int3
xor
sbb
fxch
jl
dec
mov
loop
xor
mov
jle
andb
add
cs
rcll
scas
xor
cmp
out
je
je
xchg
or
shrb
jl
lods
dec
cmp
push
sub
stc
aas
cmpsb
mov
push
std
mov
xchg
mov
rclb
pop
mov
int3
mov
lods
xchg
pop
aad
gs
scas
adc
inc
enter
or
subl
mov
pop
adc
pop
mov
aad
mov
cld
negb
fsubrs
dec
aaa
sub
push
pop
adc
and
mov
pop
addr16
mov
sbb
add
fcmove
cwtl
push
push
lods
push
rcll
push
sahf
lahf
pop
imul
and
push
repz
xchg
push
pop
into
jp
inc
test
sub
push
dec
pusha
or
pop
mov
mov
sub
ret
mov
or
daa
std
mov
pop
or
inc
bnd
inc
push
sbb
inc
and
push
fmuls
push
adc
pop
sbb
lods
push
adc
xor
push
jno
mov
outsl
cmpsb
jl
mov
mov
jbe
inc
icebp
lret
call
movsl
sub
push
imul
stc
arpl
add
shlb
cmc
fbstp
ljmp
orb
jmp
push
mov
mov
insl
loop
add
fwait
out
ret
loop
mov
call
dec
xor
aad
add
mov
out
push
pop
lods
imul
lods
cld
jecxz
or
pushf
xchg
pusha
ret
lods
int3
push
cwtl
push
ljmp
shlb
mov
sbbb
emms
lds
xor
sti
dec
es
fwait
add
sbb
xchg
outsb
hlt
bound
or
rclb
xorl
mov
cmpsl
aas
shlb
mov
lahf
orl
insl
sbb
adc
enter
lahf
cs
in
sbb
pushf
js
xchg
mov
outsb
or
fs
push
out
arpl
insl
mov
pop
into
lahf
inc
mov
and
mov
push
mov
sbb
xchg
xchg
test
add
rorb
aas
jnp
and
push
sub
neg
push
mov
push
int3
sub
loope
clc
pop
ss
test
enter
pop
jb
push
loopne
loopne
adcb
gs
insb
or
push
xor
fmuls
les
fsub
dec
push
mov
sbb
or
enter
push
mov
push
out
outsb
xor
aam
stos
in
clc
jmp
shlb
in
in
jne
push
push
push
jnp
cmp
xor
mov
sub
lock
fbld
add
xor
pop
adc
in
xlat
sub
push
cld
fistps
jmp
mov
pop
sbb
mov
add
fdivrl
sbb
jmp
loopne
sub
cmp
inc
push
xchg
in
push
repnz
int
add
orl
mov
and
or
mov
mov
inc
std
mov
pop
pop
xor
stos
jbe
add
imul
mov
mov
cld
shrb
fwait
sbb
repz
xchg
call
testl
lods
gs
stc
jae
je
mov
roll
dec
movsl
jb
mov
iret
nop
pushl
sbb
sbb
cmpsb
push
addb
pop
pop
add
or
add
ret
das
or
mov
call
sub
mov
subb
xchg
xchg
jmp
mov
sbb
and
shr
dec
xor
repz
inc
or
popa
fwait
orb
add
daa
fimull
mov
iret
pop
mov
lea
push
cs
jecxz
subb
in
call
cld
mov
mov
jo
movsb
pop
jns
pop
mov
scas
std
and
jnp
iret
xor
je
testb
hlt
jle
mov
loop
pop
inc
adc
inc
sbb
sbb
jns
xchg
xor
inc
xor
push
sbb
cltd
ljmp
adc
push
movsl
sarb
aas
xchg
inc
inc
mov
insl
xchg
mov
jmp
insl
fcmove
cld
or
inc
lcall
cmpsb
into
loop
imul
cwtl
add
xchg
cmc
test
cmpsb
dec
pop
add
sbb
ret
mov
fs
xlat
and
xchg
insb
or
inc
lfs
pusha
fisubrl
jg
xchg
mov
push
and
xchg
fsubrs
or
enter
and
pusha
dec
mov
ret
cmp
adc
pop
jp
leave
pop
xor
ret
mov
iret
nop
int
jne
sbb
cld
push
or
rolb
or
adc
push
pop
adc
rcll
cwtl
jnp
jns
movb
adc
ljmp
xchg
sti
xor
push
lret
fldl
mov
and
xor
inc
mov
push
mov
sbb
iret
subb
lret
add
sbb
add
fs
fwait
dec
adc
mov
mov
pop
jae
cmpsl
in
fisttpl
adc
dec
negb
jo
fdiv
mov
cld
or
mov
out
dec
cmp
mov
fdivl
adc
lret
fs
in
jmp
adc
xor
dec
ja
or
push
jo
mov
sbbb
repnz
popf
sbb
add
dec
pop
adc
fldenv
add
jecxz
repnz
push
mov
push
and
shrb
cmp
mov
test
sbb
push
popa
add
push
mov
adc
xor
push
xor
leave
dec
jns
push
ja
lock
mov
pop
mov
mov
das
imul
fsubl
aas
int3
adc
or
cld
std
cmp
ror
stos
dec
pop
lea
jb
repz
std
pop
push
in
mov
lods
or
xchg
ror
lea
in
mov
inc
test
jge
lret
lock
rorb
outsl
push
mov
cmpl
lcall
out
xor
mov
mov
cs
mov
pop
pop
loope
push
add
lock
aas
or
mov
xor
dec
loop
stos
out
addr16
push
lea
xchg
jmp
inc
mov
popa
jge
mov
push
cli
inc
dec
pushf
ror
add
lahf
add
and
jb
test
dec
dec
cwtl
dec
ficoml
xchg
pop
adc
lods
xchg
push
jb
mov
jne
xlat
fcompl
add
hlt
daa
and
loop
sbb
ficompl
inc
cmc
push
rcr
xor
aad
out
adc
fdivr
cmc
inc
in
add
pop
fcomip
aam
je
push
xchg
sub
push
or
mov
jmp
jp
rcrb
rcr
and
mov
cmp
int3
lahf
or
push
lahf
stos
jl
mulb
xchg
jns
sub
ret
adc
mov
adc
push
jmp
mov
jbe
into
mov
in
cld
pop
add
mov
inc
inc
mov
dec
xchg
inc
inc
dec
les
rolb
movsl
push
push
dec
pop
nop
pop
pop
dec
jb,pn
int3
adc
pop
sbb
popf
pop
out
jnp
pop
inc
outsl
jae
add
cld
jae
aam
sub
and
inc
xor
movsl
out
pop
xchg
jne
pop
cmpsb
les
mov
je
stos
mov
cmpsb
call
mov
and
xor
sarl
std
movsb
ret
sub
fdivrs
fstpl
inc
in
rolb
les
xchg
into
daa
popa
inc
fildll
shll
movsb
and
gs
icebp
push
add
mov
add
xchg
fidivrl
mov
out
int3
jmp
ds
inc
jmp
repz
repnz
std
sub
sahf
sub
lods
movsb
dec
ds
xchg
sub
mov
push
lcall
lds
sbb
and
and
dec
leave
in
lret
ja
jno
ficoml
or
dec
out
arpl
cmpsl
loope
or
ja
sub
cmp
iret
push
fldl
pop
cmp
inc
cmp
pusha
test
jmp
push
jecxz
popf
inc
mov
adc
jnp
pop
in
int3
leave
insl
movsb
and
je
dec
fxch
mov
and
es
out
imul
dec
xor
jb
mov
inc
push
push
pushf
mov
cmp
mov
repnz
dec
xor
aas
arpl
les
sub
stos
xchg
xorl
mov
push
mov
mov
out
je
insb
stos
pop
sbb
mov
pop
sbb
adc
or
adc
repnz
cltd
cmp
fwait
mov
push
insb
add
shll
bound
cs
jbe
scas
aaa
mov
lods
pop
pushf
and
adc
mov
lods
inc
test
or
sub
dec
jb
mov
adc
sub
jbe
into
cmp
in
sub
xor
pop
nop
test
lcall
pmaxsw
outsl
mov
das
dec
movsl
xor
mov
or
popa
int
fisubl
pop
mov
and
mov
xorb
ret
outsb
xchg
cli
jb
call
pushl
xchg
jns
xchg
je
mov
popa
inc
lret
fdivl
out
dec
and
fdivr
push
sub
sub
push
sbb
std
ja
xor
inc
sbb
xlat
sub
cs
mov
in
movsl
and
cmpsl
in
mov
scas
or
nop
ret
fildll
and
in
dec
push
mov
and
repz
or
cmpb
xchg
sbb
jno
out
push
or
xchg
mov
jmp
sub
insb
out
add
mov
mov
cld
mov
push
adc
cmp
pop
jnp
pop
jno
or
pop
cmpsl
testb
cmp
dec
jnp
xor
popa
inc
imul
adc
sub
jp
cmpl
stc
stos
arpl
sahf
in
dec
adc
sbb
imul
rolb
add
dec
pop
xor
subb
fld
loope
push
push
push
out
popa
sub
sub
mov
push
scas
sbb
dec
aas
lods
test
lret
push
int
data16
dec
xor
fidivrl
leave
mul
mov
mull
xchg
xchg
lds
mov
jmp
xchg
adc
inc
aad
sub
stos
xlat
or
mov
mov
stc
mov
mov
dec
dec
sbb
lods
imul
jne
or
pop
xor
fs
xchg
and
xchg
roll
cmp
mov
ljmp
fdiv
xor
adc
and
mov
and
fisttps
cli
xlat
push
sub
outsb
jmp
adc
or
jmp
or
sub
repz
rcr
fdivs
lea
fcomps
jg
in
iret
loop
push
test
les
js
mulb
push
aam
cmp
orl
call
fsubr
mov
sub
xlat
ljmp
mov
xchg
xor
test
adc
push
std
or
gs
xor
or
adc
mov
int3
xor
mov
xchg
ss
sahf
and
or
les
lods
ds
mov
mov
enter
sbb
in
xchg
imul
aas
loop
stos
or
setns
or
cmpb
xchg
mov
sub
cltd
mov
lea
adc
xchg
mov
cmp
adc
jp
mov
mov
pop
push
mov
fdivs
cltd
xchg
js
ds
xchg
int3
mov
cs
call
js
cmp
and
fidivrs
mov
cltd
lcall
sbb
push
out
mov
sub
or
scas
mov
sarb
sbb
adc
dec
add
jge
pop
sbb
cli
pop
std
jno
js
sub
push
aas
push
mov
insb
scas
inc
shlb
notb
pop
add
sub
inc
movsb
xor
stc
je
xorl
orl
xchg
test
jmp
xor
adc
pop
dec
fisttps
adc
jbe
insl
jl
daa
push
inc
lea
sub
hlt
jg
adc
sub
push
mov
push
cmp
pop
dec
add
xchg
arpl
stc
jne
outsb
pop
fcomps
sub
jge
dec
dec
mov
mov
ret
in
push
insl
mov
fs
shrb
movsb
test
cs
popf
xor
loop
jne
push
mov
cmp
out
adc
or
mov
pushf
push
add
test
adc
lcall
ss
lds
jmp
test
push
push
test
pop
das
inc
inc
or
jns
mov
sub
xlat
insb
into
dec
xchg
enter
mov
mov
rcr
adc
sub
adc
fptan
jl
xchg
jge
dec
nop
popa
mov
ss
icebp
xchg
or
scas
sub
lret
fstpl
sub
lcall
push
loop
pusha
in
shr
xchg
rdmsr
cmp
movsl
test
mov
hlt
xlat
jmp
inc
sub
mov
out
push
add
nop
shll
lds
inc
pop
push
out
repnz
mov
idiv
movsl
lret
fisubl
ud1
subb
sbb
sub
add
inc
mov
mov
leave
aaa
jb
sub
jns
fstpl
jo
dec
inc
push
lock
aaa
stos
test
call
dec
cmc
cs
sub
push
push
push
add
push
inc
fisubs
jmp
or
xchg
fistpl
std
imul
cmp
lds
and
cmp
sbb
xchg
cmp
out
jmp
sub
rorl
stos
leave
sub
out
pop
mov
and
insl
jo
cmpsb
cmc
lds
loopne
cmp
push
push
pop
je
icebp
addb
add
out
mov
pop
in
sub
sbb
out
jo
add
adc
push
dec
inc
fs
mov
xchg
cmp
pop
sub
add
xchg
arpl
jnp
dec
lods
iret
hlt
cltd
sub
lcall
mov
shlb
ret
out
push
lcall
aas
in
mov
push
scas
stos
xchg
enter
fcoml
pop
add
ret
lods
cld
rclb
xor
pop
sub
sbb
inc
pushf
pop
cltd
mov
jbe
rorl
push
dec
cld
adc
mov
mov
pop
aaa
xor
jne
jmp
jmp
cmpsl
push
testl
push
mov
or
push
pushf
add
lock
sbb
lds
or
int3
aad
addr16
arpl
test
mov
jb
cmp
rorb
clc
int
ljmp
gs
out
xor
sbb
lds
call
imul
mov
cs
xchg
movsb
in
push
jle
push
mov
enter
movsl
dec
les
sub
shrb
xchg
or
mov
lea
mov
rcl
rorb
lock
cmp
dec
mov
adc
testl
ficoml
mov
adc
les
pop
jnp
lcall
mov
ljmp
jb
dec
push
sbb
int3
adc
subl
mov
dec
shll
or
pop
pop
fildll
and
sbb
aas
fdivrs
mov
ror
xchg
gs
cmp
jne
mov
push
movsl
dec
aad
add
gs
mov
adc
test
jo
push
push
jecxz
mov
pop
mov
out
test
xchg
fcmovne
sbb
jmp
es
rorl
dec
ljmp
mov
popa
cmp
lcall
andl
mov
xorb
adc
inc
ja
or
cmpsl
mov
mov
lret
out
inc
shlb
ror
ret
mov
cs
jecxz
jno
jg
jecxz
comiss
sbb
adc
and
lahf
xor
lods
jg
push
xchg
mov
mov
mov
les
in
scas
xchg
jno
mov
or
xor
mov
sub
xchg
xor
testb
scas
pop
std
inc
adc
in
cwtl
lea
clc
stos
or
fcompl
xor
insl
sbb
test
aad
bnd
pop
fdivrs
sti
jns
xor
xchg
cmp
mov
ja
mov
lret
jl
hlt
fidivrl
inc
pop
jno
pushf
ja
xor
loope
stc
pop
dec
cltd
push
testb
mov
cmp
cs
into
clc
popa
pop
mov
mov
or
ljmp
inc
mov
lret
adc
xchg
insb
jae
or
dec
sub
adc
mov
xchg
add
sahf
jle
sti
cs
xor
repnz
xchg
adc
in
xor
loopne
mov
or
cmp
xor
dec
inc
inc
cmp
out
popf
pop
popf
push
mov
xlat
testl
add
loop
mov
aam
imul
or
fs
loop
addl
popa
mov
fmull
gs
jecxz
sbb
jecxz
out
xchg
xchg
adc
push
lcall
icebp
hlt
daa
fisttps
aad
sub
mov
add
push
ret
mov
mov
fsubr
das
int3
sub
lea
imull
js
mov
addl
lahf
dec
aaa
ljmp
fsubrl
repnz
pop
pop
sbb
mov
cli
inc
scas
outsl
mov
cmp
pop
add
mov
dec
lret
ljmp
icebp
sbb
cs
sbb
and
xlat
mov
dec
push
pop
lcall
xchg
fs
ss
fcomps
lods
sti
pop
popa
aaa
repz
cmp
add
jb
sbb
sub
mov
xchg
adc
xchg
mov
push
dec
iret
out
inc
push
mov
push
mov
mov
push
jecxz
xlat
shlb
or
les
jns
push
out
in
sub
add
ss
scas
mov
inc
xchg
ficoml
mov
daa
xchg
fsubs
lret
or
movsb
add
mov
je
xchg
xchg
mov
rcrb
jnp
call
pop
mov
jno
push
setge
cmp
sar
ljmp
mov
adc
ljmp
push
cmp
mov
dec
icebp
inc
cld
sahf
ret
outsl
mov
int3
out
add
sub
loopnew
sbb
test
xchg
cld
shll
pop
pop
push
inc
adcl
nop
popf
rolb
fisubl
movsl
pop
sbb
mov
scas
dec
xchg
cmp
sub
outsl
pop
and
imul
je
sub
cmp
inc
jmp
pop
sti
or
cmpsb
enter
xchg
lret
iret
mov
xchg
ljmp
aaa
test
cmp
sbb
xchg
inc
push
gs
shlb
fcoms
xchg
sbb
mov
and
imul
movsl
decb
aas
cmc
daa
loope
jnp
mov
pop
cmp
inc
mov
dec
repnz
push
pop
jne
xchg
mov
xchg
push
pushf
sub
add
cmc
xor
add
cli
inc
fs
and
popa
dec
fdiv
pop
inc
sbb
lods
mov
pop
push
pop
gs
xor
xlat
test
jb
adc
xchg
mov
in
icebp
daa
sub
cs
repz
test
aad
inc
out
into
repz
test
ljmp
int3
dec
dec
add
scas
sub
pop
adc
push
add
rorb
or
mov
testl
or
and
add
mov
imul
mov
add
sub
negb
shll
ret
push
lods
lea
call
popa
mov
out
xchg
adc
std
sub
ja
push
push
jge
stos
sbb
lods
cmpsl
inc
push
mov
ljmp
into
add
fs
sbb
mov
push
enter
daa
or
push
dec
add
or
imul
icebp
jae
popa
adc
sbb
enter
mov
sbb
adc
or
adc
dec
jmp
les
cld
adc
push
mov
jae
dec
iret
adc
mov
andl
push
push
daa
andl
inc
jp
mov
add
xchg
push
rcrb
aaa
loopne
stos
add
sub
add
rcrl
adc
inc
mov
popa
add
and
sti
movsl
fdiv
push
cmp
push
and
test
add
test
push
fmuls
xchg
iret
pop
cmp
ret
inc
loopne
test
xchg
inc
nop
xchg
pop
pop
imul
sub
push
xor
push
jbe
aaa
mov
mov
es
pop
cmpsl
repz
outsb
inc
adc
fs
jo
jle
sahf
iret
add
icebp
clc
adc
inc
push
cmp
fmull
xor
xchg
in
repnz
icebp
cmc
adc
mov
add
mov
lods
test
mov
mov
outsb
pop
mov
out
add
into
test
stos
or
out
push
and
xor
push
subl
adc
adc
pop
fidivrl
mov
shrb
mov
mov
nop
arpl
hlt
jbe
mov
inc
shr
push
push
dec
loope
lock
sub
ja
push
or
repnz
jne
setbe
adc
mov
push
repz
dec
pop
dec
xchg
inc
add
xlat
sbb
in
fwait
dec
cwtl
sbb
or
pushf
cmpsb
outsl
mov
push
pop
lret
xlat
cmp
sub
xor
or
mov
cmp
inc
push
pushf
mov
mov
xchg
and
or
enter
xchg
mov
xor
sbbb
add
outsb
loopne
xor
mov
in
in
xor
fs
jo
mov
mov
fldl
sub
push
lahf
outsl
mov
mov
leave
imul
sbbb
adc
xor
cmp
insb
dec
jne
inc
mov
jb
mov
rolb
mov
clc
push
repz
loop
ret
xchg
sub
dec
xchg
lds
add
mov
dec
or
fs
cld
mov
jl
jge
test
sbb
lock
and
outsl
inc
sbb
cmpb
ja
and
loope
in
test
mov
sbb
dec
pop
cld
xor
xor
add
adc
jg
aad
cmp
jo
out
push
xor
mov
pop
aaa
mov
add
test
out
aas
lea
or
ljmp
or
in
jb
or
or
push
pop
and
cmpsb
and
add
pop
mov
pop
adc
adc
int3
aas
stos
adc
std
mov
mov
jg
push
popl
inc
xlat
enter
and
jmp
fstps
stc
sub
add
jnp
xchg
mov
push
scas
cwtl
inc
stc
adc
in
in
xor
pop
fdivl
xchg
push
pop
rclb
imul
or
ret
add
mov
mov
mov
lcall
enter
iret
popf
mov
cmp
xlat
mulps
adc
mov
and
dec
sub
fisttps
pusha
in
jo
inc
int
xorl
and
cli
push
nop
dec
pop
out
imul
pop
sub
out
jne
fstpl
sbb
sub
out
loope
add
jae
jecxz
inc
inc
push
fisubrl
xchg
mov
jno
test
push
scas
ss
aam
imull
pop
stc
roll
adc
std
dec
fdivrs
ret
xor
jb
pop
add
test
xor
in
dec
pusha
adc
inc
dec
sti
mov
jge
jno
loope
rcll
out
mov
mov
cmp
xchg
fidivrl
or
mov
add
push
dec
add
dec
sub
fstpt
jmp
jle
int3
xor
inc
jge
pop
push
mov
out
cli
data16
jmp
imul
ficomps
cli
mov
adc
and
jns
mov
xor
mov
andl
xor
int
xchg
and
cmpsl
fsubl
loop
pop
cmpsl
cmp
aad
cmpsl
xor
pop
sti
jo
push
pop
push
sti
fcmove
pop
sbb
cld
leave
lock
into
out
pop
out
lcall
cmpsb
xchg
fwait
jo
inc
cmpsb
cmpsl
pop
cs
or
repnz
cmc
jns
inc
xor
dec
sarl
inc
ret
sti
aad
pop
insl
test
shrl
call
mov
dec
pop
ja
push
sub
push
lahf
sarb
aad
das
mov
test
sub
ljmp
mov
sbb
lods
shlb
push
enter
pushf
jne
xor
insb
adc
sqrtps
cmp
xchg
lds
mov
aam
cmc
sub
dec
das
sub
pop
jp
jmp
push
ret
cs
lock
pop
lods
ljmp
push
scas
jg
mov
pop
jbe
mov
movsb
or
repz
or
test
jge
or
cmp
push
adc
stos
mov
jcxz
stc
push
inc
xchg
dec
pop
leave
mov
jns
sub
xchg
ljmp
imul
xchg
adc
xor
cmp
xchg
popa
jg
pop
push
out
inc
push
jns
mov
mov
adc
jmp
lods
test
xchg
pop
sbb
adc
pop
ljmp
fmuls
fnstcw
insb
call
inc
adc
lahf
push
inc
cli
xor
add
lcall
idivl
cmp
fistps
rclw
sub
pop
xchg
ret
std
repnz
inc
jb
xor
xchg
out
into
push
mov
and
push
jae
cmp
jno
add
nop
sub
lea
bound
js
jle
sbb
mov
repz
decl
aad
jl
push
mov
cs
xor
scas
dec
jo
rcpps
or
arpl
jp
pop
push
jno
data16
xchg
pushf
outsb
fiadds
scas
sbb
adc
rcll
adc
fnstenv
or
mov
pop
fiaddl
punpcklwd
std
loopne
test
jae
or
mov
jge
sbb
mov
xorl
sahf
aaa
jno
lret
in
sbb
sbb
fldl
test
divb
mov
pop
jecxz
xor
push
fcmovnb
and
mov
jp
or
test
sbb
call
pop
or
cli
test
outsl
mov
push
dec
or
mov
xchg
cmp
and
inc
test
ret
addr16
jns
pop
pop
xor
sahf
xor
adc
ret
pusha
test
fbld
jns
divl
adcl
lcall
sbb
jge
jmp
fsubrp
xchg
push
bound
cmc
scas
and
hlt
or
dec
mov
mov
adc
cmc
jp
mov
or
xor
rclb
in
and
jmp
or
mov
xor
cmp
jo,pt
mov
mov
push
xchg
xchg
jmp
dec
jmp
push
imul
mov
shrl
xchg
rcrb
lods
mov
pop
sbb
xor
adc
mov
inc
insl
xor
dec
xor
mov
push
or
jmp
insl
cld
sbb
pop
popa
xor
outsl
test
stos
push
push
inc
fdivl
mov
mov
pop
lret
lods
int
pop
cmpl
xor
mov
push
rorb
adc
in
and
and
cmp
sub
js
sbb
js
loop
and
rol
scas
jmp
mov
sbb
bound
push
add
pop
lret
pop
mov
xor
arpl
mov
pushf
hlt
addr16
mov
jnp
inc
repz
and
jo
int
ret
add
adc
fcomps
int3
mov
mov
inc
jle
xor
mov
mov
sbb
cmp
std
sub
insl
clc
icebp
jp
push
adcl
in
sar
lock
xor
fisubs
xchg
addl
hlt
jne
and
cmp
push
mov
stos
or
ljmp
cs
rcrl
daa
mov
xchg
mov
xlat
fwait
in
call
mov
sub
jns
cmp
fidivs
xchg
jae
cmpsb
mulb
test
dec
or
rcr
xchg
sbb
push
std
ss
mov
sti
jb
add
push
lret
and
inc
xor
jns
fwait
xchg
add
clc
cwtl
dec
pop
inc
xor
dec
xchg
inc
call
mov
xor
pop
xchg
movsl
jo
xor
mov
mov
xor
fwait
int
out
rcl
insl
adc
jecxz
lods
mov
lods
orl
cmpsb
cmpl
xchg
lret
push
fdivrs
xchg
out
mov
lahf
int
pop
pop
mov
mov
cmpsb
or
pusha
sbb
sbbl
mov
out
mov
and
data16
ja
xchg
and
into
roll
sbb
sub
mov
cmp
xchg
mov
fbstp
mov
repz
add
ljmp
shll
andl
cld
jo
xchg
pop
push
mov
jmp
dec
jnp
popf
in
cltd
add
or
lock
sbb
jl
mov
dec
gs
dec
je
xor
or
push
ret
sbb
enter
andb
adc
sub
repz
sbb
test
jb
pop
jb
mov
sub
mov
test
call
lahf
cli
push
dec
cli
adc
and
xlat
addr16
andl
dec
outsb
inc
aam
push
sbb
adc
fcom
xchg
jle
outsb
sbb
push
mov
nop
fcompl
repz
xchg
mov
xor
push
pop
cmp
sbb
fstpl
jno
popl
in
and
ss
outsb
inc
out
mov
lcall
jbe
pop
add
cmp
pusha
or
nop
inc
mov
int
and
and
adc
mov
iret
add
repz
rolb
pop
pusha
mov
jns
or
and
jnp
push
lret
js
dec
movsb
push
push
loop
dec
mov
movsb
mov
mov
mov
inc
jmp
push
cmpsb
out
loop
in
mov
popf
push
lcall
hlt
dec
pop
jb
daa
cmpsl
jg
and
pop
popa
insl
push
sbbl
fwait
scas
add
cli
sti
xor
xor
lock
fistpll
popa
cltd
cmp
je
sar
scas
fs
or
test
pop
sbbb
push
xchg
insl
or
les
or
adc
es
test
mov
cli
je
mov
sbb
data16
cmp
xor
inc
mov
int3
decb
stos
in
fldt
inc
outsl
mov
push
pop
xor
push
aam
xor
pop
mov
push
pop
pop
hlt
shl
js
and
leave
xor
aam
outsb
daa
cld
loope
lcall
pop
and
add
pusha
cmp
movsl
sub
pusha
sub
jle
pop
int3
test
pop
popa
les
cmp
and
and
jae
scas
sarb
loop
jmp
push
mov
loop
fbld
jecxz
aam
imul
cli
or
jae
xor
inc
cmpl
mov
movsb
xor
cmp
and
stc
xor
cwtl
adc
cmpsb
movsb
inc
lods
addr16
aad
and
ret
cmpb
icebp
imul
add
iret
outsl
mov
pop
inc
jne
jecxz
cmp
cmp
lar
inc
and
add
aas
mov
jbe
dec
jo
idivl
pop
and
pop
inc
lock
inc
sarb
pushf
or
ret
sahf
cmp
sbb
pop
and
fcmovnbe
xchg
daa
idiv
mov
xor
int3
sub
adcb
pop
xlat
movsl
lds
inc
xchg
dec
or
adc
ds
mov
xor
lcall
adcl
loope
mov
pop
daa
xchg
ljmp
fsts
jp
sbb
sub
or
sbb
sbb
push
push
xchg
and
sbb
je
leave
adc
test
or
adc
sbb
mov
mov
push
imul
dec
pop
lock
or
adc
adc
sbbb
cmp
mov
out
mov
xor
out
pop
and
shll
sub
je
sub
push
and
clc
arpl
in
dec
jo
test
push
xchg
scas
lahf
jmp
mov
or
es
ret
repz
clc
icebp
xlat
dec
fcmovb
push
lods
add
ret
test
enter
pop
adc
std
cmp
xchg
push
add
push
imul
xchg
inc
jnp
cmp
lds
addr16
shlb
aas
jecxz
inc
mov
xchg
data16
xlat
addr16
jns
cmp
insl
icebp
inc
dec
mov
cmp
jno,pn
aas
pop
imul
dec
jl
sar
adc
pop
mov
mov
jne
or
fwait
loopne
xlat
subb
fistl
ror
cmp
test
and
xchg
loop
cwtl
pushf
jb
pop
pop
lods
lods
shrb
adc
pop
xchg
push
fs
push
inc
lcall
cmp
mov
dec
push
imulb
jmp
jbe
pop
ret
rcr
xchg
lea
in
gs
inc
push
aam
lock
dec
pop
int
sbb
push
call
pop
pop
cmp
ljmp
and
sti
inc
xchg
inc
mov
jp
and
rorl
movsl
pop
dec
cmpsb
mov
jns
sub
je
jge
lock
cli
xchg
xchg
adc
out
mov
mov
mov
mov
xchg
cwtl
je
pop
out
ja
push
leave
mov
or
imul
arpl
les
test
pop
ja
jne
add
es
lret
lret
mov
pop
xor
lods
aaa
jnp
xchg
mov
xlat
out
insb
fidivrl
dec
sarl
dec
jle
cmp
shrl
cltd
or
inc
mov
mov
test
insl
pushf
mov
fsubr
enter
rolb
adc
mov
cmp
fldz
mov
or
stos
ss
jb
int
push
sub
dec
shlb
nop
fdivrl
jno
push
movsl
jbe
adc
sbb
mov
ficomps
out
jp,pt
and
pushl
jle
sbb
adc
pusha
dec
xchg
js
jp
sub
push
cwtl
adcl
xor
pop
cmpsl
pop
fcmovne
mov
in
js
bound
out
out
push
lahf
inc
popf
js
add
ror
fcmovu
aaa
cli
test
outsl
mov
cmc
sbb
mov
insb
or
push
pop
inc
cmp
loopne
mov
lds
jle
aaa
mov
shl
mov
cmp
out
lods
test
loop
jne
imul
jl
cmp
subb
cmp
xorl
cwtl
jg
cmpsl
or
pop
dec
scas
bswap
mov
popa
lcall
cmp
or
jge
scas
jg
mov
mov
xchg
xchg
outsb
sbb
jle
pop
pop
jbe
sahf
mov
sub
cmp
mov
das
and
xchg
jp
dec
adc
lock
cmc
or
lds
sbb
xor
and
fists
lods
addr16
dec
ret
lods
mov
lds
push
sub
iret
repnz
cmc
fisubrs
lds
cmp
push
xor
cmpsb
cmp
mov
inc
pusha
fldl
and
push
fisubs
mulb
mov
xor
jp
lods
fistl
outsl
adc
push
sbb
inc
out
mov
lds
jmp
xchg
mov
sbb
stos
cmpsl
repz
call
fadds
xor
insl
adc
and
xchg
pcmpgtb
jae
xor
mov
mov
stc
ret
fistps
mov
in
add
adc
leave
mov
into
adcb
int3
inc
jl
ret
in
stos
sarl
stos
jl
aas
xor
adc
pop
mov
fcoml
ljmp
test
mov
and
orl
push
dec
xchg
cli
jne
inc
ja
inc
js
out
das
dec
in
stc
push
js
out
insl
lahf
insb
mov
sbb
pushf
lcall
add
stc
jnp
fcmovbe
jmp
sbb
leave
pushf
stos
xchg
test
xchg
icebp
sub
out
push
mov
and
loopne
push
lea
fsubrp
adc
inc
mov
push
in
pop
fcom
push
loopne
cmp
cwtl
sbb
mov
es
out
clc
mov
fdivp
xchg
pop
dec
roll
mov
dec
xlat
cmpsl
xchg
mov
add
lcall
jbe
leave
mov
mov
xchg
jbe
imul
shr
or
add
fnsave
mov
ret
lret
xchg
loop
cmp
imul
push
ficoms
aad
jecxz
sarl
push
repz
jnp
dec
outsl
cli
mov
mov
aam
loopne
cmc
lock
xchg
leave
mov
adc
mov
test
enter
cmp
sub
adc
imul
inc
xor
push
xchg
movsb
mov
pop
lret
cwtl
xchg
adc
push
sbb
icebp
jb
jnp
aad
sub
fstl
pushf
pop
and
hlt
jecxz
cltd
into
aad
loope
pusha
in
push
pop
sbb
sub
test
aam
jns
adc
xor
xchg
push
ret
call
rorb
xchg
clc
addr16
cmp
inc
out
inc
add
jle
or
bound
incb
loop
lret
in
adc
mov
in
sar
and
xor
jg
inc
jle
jnp
lock
sbb
add
mov
cmp
pop
xor
lea
push
jle
dec
cmp
aad
mov
mov
je
sub
sbb
in
add
leave
inc
outsl
movsb
sub
pop
lcall
bound
cmpxchg
push
pop
lahf
inc
fucom
js
test
daa
xorb
aad
lahf
dec
and
and
xor
xchg
dec
lds
push
sbbl
lods
mov
aad
stos
leave
sbb
cld
ljmp
cmp
ss
push
and
dec
daa
jmp
xchg
mov
lock
inc
je
cmp
push
pop
cmpsl
popf
lret
and
sub
pop
repnz
xlat
ljmp
int3
je
pop
jne
dec
sbb
ljmp
dec
call
js
testl
add
ds
movsb
je
aad
int
imul
xchg
in
insl
pop
ret
fdivrl
iret
pushf
and
scas
testb
das
jnp
pop
pop
aas
and
aas
repz
rorb
dec
test
ja
adc
sub
mov
sbb
mov
outsl
mov
cs
adc
xchg
out
push
clc
in
out
adc
out
js
leave
sbb
sbb
ss
inc
xor
insb
lahf
out
add
cmc
dec
inc
vmwrite
enter
push
lock
cmc
xlat
dec
out
sbb
push
mov
test
stos
insl
mov
clc
mov
int
mov
mul
cmpl
cmpsb
outsl
xchg
iret
xlat
int
push
inc
roll
out
pop
rorl
dec
jbe
mov
out
pushf
scas
fwait
jg
mov
jo
shll
ss
inc
std
sti
mov
enter
or
ljmp
pop
stc
mov
fisubs
addb
incl
mov
jne
dec
pop
push
insb
ret
and
or
shrl
xor
cs
xchg
ficoml
mov
into
mov
mov
es
sbb
jno,pn
leave
mov
push
mov
jle
dec
jmp
out
mov
and
jnp
pop
inc
and
cmp
scas
sub
pop
and
dec
xchg
sub
test
sub
in
adc
pop
jp
jno
enter
inc
aaa
leave
loope
roll
mov
adc
std
shrl
and
and
inc
iret
jle
clc
inc
stc
mov
mov
jb
adc
sti
add
xor
fnstsw
push
mov
lahf
lock
pop
mov
mov
pushf
call
mov
hlt
repz
les
iret
flds
bound
push
and
outsl
sar
testl
add
fstpt
and
jp
enter
addr16
pusha
push
pcmpgtb
push
jmp
add
sub
lods
mov
push
dec
pop
xchg
cltd
popa
imul
inc
jge
fldenv
xchg
ljmp
ljmp
push
sub
ss
lods
xlat
loopne
std
pop
int3
nop
cmp
and
xchg
sub
jno
mov
data16
mov
stos
mov
mov
and
imull
dec
std
xchg
and
stc
fs
pop
xor
enter
test
pushf
lcall
xor
jb
jae
aam
and
lock
add
ficoms
and
mov
pop
test
mov
test
sti
jmp
sbb
hlt
hlt
lock
imul
ss
insb
outsl
fnsave
iret
mov
ljmp
mov
mov
stos
xor
sbb
imul
xchg
mov
aas
fcomps
cs
mov
mov
xor
das
adcb
adc
leave
xchg
in
pusha
fisubrs
arpl
mov
cwtl
or
pop
pop
xor
mov
adc
test
jg
dec
sub
lods
pop
pop
int3
ds
rcll
and
push
mov
rcl
sub
push
jbe
cmp
and
jmp
dec
scas
orb
mov
adcb
idivl
push
jne
push
mov
stos
cmpsl
push
jo
jle
cmpsb
mov
xor
sub
sub
add
aad
mov
outsl
aas
push
pop
xlat
xchg
jnp
mov
mov
fsubr
push
movsb
mov
cmc
arpl
push
mov
pop
xlat
sbb
and
xor
mov
fsts
pop
dec
ss
sbb
scas
jmp
cs
pop
movsl
pop
int3
lahf
add
insb
pop
leave
jge
je
imul
cmpsb
rolb
xchg
pushf
mov
je
lds
dec
test
xor
dec
movsl
iret
repz
push
je
sbb
sub
jnp
je
pop
mov
bound
hlt
or
mov
pop
sahf
repnz
loope
pushf
cwtl
int
das
leave
sbb
dec
data16
mov
leave
into
out
xchg
xchg
pusha
push
imul
push
or
shll
cmp
sahf
test
sbb
sbb
pushf
ss
hlt
test
add
fbld
int
out
cmp
popa
xor
fmull
add
adc
cmpsb
jns
jae
cmp
pop
mov
sub
pop
push
mov
xor
and
cmc
dec
dec
push
xchg
negl
push
out
sbb
stos
mov
stos
lea
pop
dec
lock
das
inc
xor
lahf
push
cmp
push
sahf
mov
leave
mov
mov
mov
scas
sub
popa
scas
sti
dec
test
mov
xchg
cmpsb
jno
jbe
or
add
ret
add
fldt
mov
rcll
aad
stos
or
sub
je
out
push
add
gs
fs
sbbl
loop
fcoms
xchg
out
push
jb
xor
mov
cmp
mov
mov
mov
dec
or
and
or
inc
jp
test
dec
insb
or
jno
cmpsl
jo
std
clc
in
sub
sbb
movsl
or
or
jmp
xlat
pop
lods
mov
adc
stos
mov
mov
mov
notl
ja
add
or
mov
inc
cltd
shrl
sahf
mov
xchg
or
mov
inc
cltd
push
fisubl
jno
dec
or
adc
jns
movsl
arpl
fisttpll
xchg
jecxz
hlt
cmp
pop
mov
bound
scas
mov
outsl
das
pop
xchg
inc
aad
mov
imul
mov
das
or
clc
mov
ja
xchg
dec
sub
adc
nop
or
loope
fadds
xor
xorb
lods
sub
incl
pusha
sub
xchg
fstpl
jnp
mov
and
fbstp
fists
btc
rorb
lret
add
fnsave
out
add
sub
or
jge
lods
push
enter
lea
pop
add
lret
cs
add
sub
dec
stos
into
cmp
xor
cmp
adc
aas
stc
insb
mov
inc
loop
cmpb
popf
jbe
mov
aad
xchg
and
repnz
xlat
and
mov
adc
shl
sti
pop
jp
scas
jb
mov
outsl
push
xor
cmc
mov
inc
xor
cltd
xchg
hlt
add
pop
sahf
gs
jle
cltd
ja
cltd
push
repz
sub
add
std
aaa
fcomps
insb
loopne
cld
lret
lods
xor
dec
or
push
bound
hlt
sbb
mov
out
pusha
cmp
push
sbb
and
data16
inc
pop
fildll
cvtps2pi
je
push
jne
adc
das
inc
out
adc
lea
or
cld
cmpsl
hlt
fstpl
mov
push
rep
push
fdiv
adc
pop
pop
jle
sbb
je
enter
ljmp
cld
mov
pop
sbb
outsl
arpl
mov
in
scas
mov
lahf
in
clc
cmp
fwait
xor
movsl
cmp
dec
add
ss
pop
and
sbb
push
push
fcmovu
and
xchg
nop
xor
or
stc
aaa
fisubl
xchg
pop
mov
arpl
sbb
or
mov
outsl
xor
repz
leave
dec
xor
adc
outsb
xchg
sbb
data16
in
inc
enter
adc
das
loope
sbb
mov
or
pushf
mov
jg
xlat
add
push
les
mov
and
xor
inc
or
jae
cmp
ret
mov
cs
sbb
cmp
jnp,pt
imul
das
insb
ds
lods
or
loope
cmp
ja
popa
or
cwtl
mov
daa
js
and
scas
arpl
and
push
shl
inc
clc
cs
lret
stc
xchg
sbb
mov
pop
stc
add
sbb
cmpsb
dec
mov
push
pusha
popa
enter
mov
cmpsb
inc
add
rcll
fs
cmpsb
cmpl
pop
jae
stc
mov
push
cmp
test
dec
test
push
pop
cmp
jb
jp
stc
mov
xchg
sub
shlb
jmp
sbb
and
pushf
cmp
push
cli
insl
pop
enter
adc
push
cli
loope
jae
jbe
cmpsl
inc
pop
mov
lret
jae
ja
jmp
jecxz
push
nop
pop
in
addr16
xlat
stos
lret
mov
pop
stos
sub
cli
dec
out
popa
shl
fdivr
cltd
js
fstl
jbe
jbe
hlt
mov
scas
sub
push
mov
pop
loop
sahf
repnz
inc
jo
js
and
mov
jae
xchg
jne
int3
bnd
add
dec
push
lcall
sbb
repnz
pop
and
mov
mov
inc
jae
jl
fbld
je
lcall
out
imul
daa
add
mov
shlb
faddp
xor
lock
jp
lds
inc
pop
push
hlt
int
sbb
outsl
daa
or
sub
inc
pusha
xchg
ja
mov
arpl
das
movsb
inc
in
test
lock
jo
dec
sbb
mov
fdivrp
lea
leave
sub
xchg
or
mov
jl
rol
loope
push
imul
push
fdivr
inc
xor
mov
jle
push
mov
jg
fistpll
xchg
or
pushl
xchg
push
test
dec
shlb
pop
insl
loope
push
mov
imul
jmp
pop
mov
subb
jmp
arpl
mov
and
dec
lock
sub
loope
popa
inc
sbb
dec
dec
out
pop
jbe
xor
lock
jl
or
push
push
or
cmp
push
gs
pop
push
and
cmp
mov
or
cmp
push
sub
iret
in
xlat
and
clc
leave
mov
ret
add
test
pop
inc
jmp
es
aam
imul
mov
xchg
cmp
jne
fcoml
fsts
shlb
mov
jo
subl
xchg
out
jb
mov
sub
jb
push
xchg
xor
or
enter
cld
mov
mov
inc
jg
xor
ds
mov
or
pop
jbe
movsww
scas
jmp
mov
aam
and
pop
mov
lods
add
fsubs
cwtl
mov
add
repnz
inc
xchg
jb
sbb
and
mov
add
dec
push
jo
add
jne
sbb
aad
test
iret
outsl
xchg
mov
jbe
and
xchg
xchg
mov
nop
insb
pop
and
mov
pop
lods
std
mov
adc
cmpsl
add
jo
pop
mov
aas
sbb
dec
cmp
inc
add
repz
out
xor
mov
or
or
fwait
stos
sti
lret
arpl
jns
xchg
and
mov
popa
out
pushf
xchg
lock
lds
dec
push
push
gs
inc
add
add
jae
sbb
sub
and
loopne
xchg
xor
sub
or
jecxz
ja
push
adc
test
repz
push
sub
sub
mov
pop
xchg
sub
divb
cmc
stos
push
fcomps
notl
rorb
fimuls
pusha
and
lea
mov
sbb
rcl
jl
in
movsl
mov
cmp
mov
test
aam
scas
and
cmpsl
push
add
movsl
adc
inc
hlt
test
jle
daa
dec
idivb
loope
adc
adcb
das
xchg
ds
add
sahf
jle
addb
test
adc
ret
mov
pop
out
push
sbb
cmp
inc
push
repz
jns
xchg
sbb
adc
push
hlt
out
hlt
lret
in
fdivrl
add
loope
dec
and
imul
cmpsb
xor
test
mov
cld
divl
sub
push
cli
cli
inc
pop
loop
push
scas
lret
shll
sub
cwtl
xor
sub
sub
mov
outsb
add
cwtl
dec
rcrb
adcl
and
mov
les
lcall
mov
mov
pop
fcompl
dec
adc
dec
shl
push
in
adc
cmc
test
mov
add
jb
icebp
dec
adc
out
ds
xor
inc
or
adc
adc
pop
sub
jle
mov
fisubrs
cmc
fdivs
pop
xlat
mov
pop
mov
jae
sbb
push
or
scas
stos
pusha
rcrl
out
mov
xchg
pop
push
fsub
or
push
jae
stos
add
dec
js
in
shlb
rcrl
ds
stos
push
call
insb
and
leave
addr16
in
mov
lds
inc
imul
sbb
mov
jl
or
cmc
pop
jmp
popa
js
arpl
cmpsl
sti
nop
loop
mov
jne
add
scas
ss
je
int
fsts
test
xor
into
ljmp
ds
lds
nop
mov
psllw
pop
pop
dec
out
sarb
loopne
or
rcr
pop
lahf
pop
out
jge
std
pop
mov
jae
mov
ret
jne
xchg
fucomp
cwtl
inc
sbb
loopne
decl
and
and
sar
jno
jg
pop
stc
push
aam
bswap
mov
or
repz
mov
jno
dec
mov
mov
js
dec
shlb
dec
sahf
or
fcom
pusha
in
rorl
loope
pop
mov
orb
fcompl
outsb
xchg
xor
mov
mov
or
stos
dec
inc
push
nop
icebp
iret
add
fs
sub
enter
repnz
mov
mov
add
pushf
bound
cmp
adc
lods
jle
mov
repz
icebp
inc
mov
xchg
stos
xchg
jae
inc
add
dec
sub
sub
and
and
mov
in
aaa
xorl
aad
pop
push
mov
or
ror
jb
mov
lcall
and
inc
jg
jp
mov
push
adc
push
jo
hlt
in
mov
adc
sbb
sbb
mov
cmp
xor
cltd
push
xor
xor
push
mov
les
popf
xlat
lea
mov
push
out
push
cmpl
dec
push
jle
jae
test
xchg
adc
xor
xchg
fneni(8087
sbb
inc
pop
movsb
push
fwait
arpl
in
popf
jno
pop
jp
add
ja
pop
gs
imul
ret
sbb
lret
jae
push
out
shl
and
xor
incl
dec
inc
data16
xchg
popf
xor
jp
fldln2
jecxz
push
dec
mov
or
int3
gs
and
int
into
xor
inc
mov
jb
inc
insb
cld
out
inc
movsb
outsb
out
mov
dec
dec
scas
mov
mov
lods
popaw
jl
mov
dec
jmp
rcrb
in
out
pop
jecxz
xchg
and
aad
das
daa
div
adc
fnsave
pop
stos
inc
cld
leave
push
imul
adc
cmpsb
push
mov
mov
insb
fisubrl
jg
pop
push
sub
sbb
sbb
inc
inc
adc
inc
out
jae
jno
or
jmp
push
and
out
test
stos
push
fidivl
adc
mov
xor
cld
pop
das
dec
int
test
lret
mov
xchg
adc
xchg
jae
subb
cmp
stc
sbb
xlat
lret
xchg
call
xlat
mov
lds
push
stos
adc
add
je
push
lahf
sub
and
sar
aas
cmp
jmp
shl
fwait
enter
mov
xchg
xchg
mov
jmp
and
adc
popa
aam
mov
jl
adc
and
das
repz
outsl
or
lret
dec
mov
imulb
fwait
or
inc
mov
scas
push
xor
mov
xchg
inc
je
push
xorb
push
sbb
repnz
sarl
cmpsb
and
mov
jp
jle
fstl
mov
call
inc
jge
mov
fidivl
push
push
pop
add
inc
cltd
mov
imul
jb
gs
call
adc
fisubrl
stc
gs
push
and
dec
lods
popa
ror
pop
rcl
pop
int3
xchg
push
or
push
cmp
push
iret
push
inc
jnp
stos
mov
je
jbe
push
mov
sub
pop
outsl
xchg
add
nop
xor
xchg
or
cmpsl
mov
ja
push
popf
pop
outsb
daa
outsl
add
outsb
loop
mov
sbb
into
popa
jmp
lods
adc
shll
icebp
dec
add
loop
jno
loope
mov
dec
sahf
cmpsl
mov
and
add
sub
loopne
fnstsw
push
xchg
insb
pop
and
adcl
inc
pushf
rorb
gs
ret
push
sbb
ljmp
xchg
sbb
jo
sahf
pop
inc
sti
and
das
movsl
inc
dec
in
stos
push
cmpb
mov
mov
push
es
xchg
fwait
add
das
mov
lods
xor
in
mov
scas
loop
sub
dec
imul
movd
aas
into
sbb
cmp
dec
popf
push
and
and
xor
scas
push
jle
ret
pop
inc
aas
jae
in
test
and
into
in
stc
lea
lret
rcrb
push
sbb
outsl
sbb
lock
inc
add
mov
jae
orb
xor
and
out
pushf
subb
insl
pushf
icebp
cmpsl
cmp
push
pop
arpl
arpl
mov
fidivrl
pop
xor
mov
adc
stc
daa
iret
movsl
mov
xchg
outsl
sbb
lds
sarb
and
pop
out
xor
or
into
in
in
sub
inc
bound
lock
push
or
pop
repnz
cmp
repz
cs
mov
mov
mov
flds
rcll
and
cmp
cmp
jge
loope
mov
cmp
sahf
aas
neg
in
test
rcrb
push
fmul
cmpsb
leave
pop
js
add
push
pop
popa
shrl
shlb
push
fs
pop
sahf
mov
jp
xorb
push
ficomps
jg
mov
add
clc
pop
dec
cmp
jle
fcomip
or
push
sub
inc
sti
xor
loope
pop
sub
aas
loop
sbb
pop
pop
pop
sbb
in
push
arpl
lock
int
mov
or
in
sub
add
movsb
insl
jae
xor
jmp
xchg
sbb
or
inc
loope
int3
in
roll
cmpl
aad
sbb
fimuls
lcall
or
aas
jno
mov
dec
or
cmp
pop
dec
popa
lcall
paddsb
or
lret
push
fisubl
dec
and
test
inc
lcall
mov
ret
mov
mov
fs
filds
cmp
andl
sbb
jno
bound
xchg
out
xchg
pop
insl
jno
fisubs
xchg
aas
jo
ror
jp
jecxz
hlt
xor
jmp
lret
or
push
push
aas
bound
jb
sti
out
shlb
add
jmp
shrl
das
xchg
mov
inc
push
cs
insl
cltd
sbb
mov
fsub
and
lcall
inc
stc
fsub
pop
jns
adc
dec
add
ret
mov
mov
mov
dec
daa
inc
push
add
mov
out
bound
aam
idivl
sti
test
loope
mov
xchg
cmpsb
and
sub
push
stc
dec
add
pop
std
imul
jmp
cs
adc
dec
mov
notb
das
xlat
inc
sti
xchg
jp
mov
adc
mov
mov
push
or
in
loope
arpl
inc
in
mov
xchg
lods
cli
out
jl
sub
sti
lock
in
sub
imul
fs
ljmp
test
aas
sahf
push
push
mov
cmp
sbb
fimuls
stos
push
jmp
cwtl
mov
mov
mov
int
add
rorb
lea
inc
dec
mov
xchg
xor
mov
cmp
push
jno
push
xor
sbb
fldt
jae
lea
movsb
pusha
dec
fistps
aam
mov
rorl
lcall
cmp
data16
loop
int3
jo
or
sub
cmp
lods
in
sbb
iret
and
mov
scas
fisubrl
dec
fsts
cld
dec
jmp
ret
cwtl
xchg
or
dec
shrb
cmpsl
xchg
jnp
in
jns
mov
mov
js
sbb
and
adc
jno
stos
pop
mov
mov
vprotb
idivb
and
mov
or
scas
aam
push
mov
stc
mov
sub
fildll
dec
movsl
aam
mov
daa
adc
mov
dec
cs
rclb
mov
leave
jno
xchg
jbe,pn
sbb
mov
ljmp
mov
inc
cmp
and
push
xor
repz
sbb
loopne
adc
out
sti
or
cmp
dec
lea
test
clc
enter
int
addr16
mov
ss
or
fucomp
clc
xchg
and
cmp
dec
mov
test
push
push
push
mov
test
sbb
insb
fwait
ucomiss
fdivs
cvtps2pd
push
stc
push
push
sub
or
sbb
test
push
ret
js
mov
or
imul
push
cs
sbb
lcall
pop
cs
jp
cmp
test
outsb
jb
inc
or
inc
in
rcrb
push
addr16
cmp
movsb
pop
aam
sub
xor
add
fldt
loop
mov
jg
jae
jo
icebp
lret
push
inc
rol
call
fs
sub
dec
pop
lcall
sbb
stos
sbb
pop
jbe
jns
enter
mov
pop
dec
pop
cmp
jp
fld
jl
out
test
push
outsb
dec
negb
xor
push
push
dec
lock
aad
inc
stos
xchg
lret
aaa
pop
pop
xchg
pop
int
call
test
cmp
cmc
repnz
lcall
out
insl
sti
cmp
mov
jecxz
mov
cs
sbb
jne
jo
push
jmp
lods
cmp
js
dec
add
sub
in
jno
inc
in
adc
jp
mov
mov
mov
cmpsb
and
push
or
adc
imul
fmull
lret
mov
jbe
iret
add
cmp
popf
sahf
inc
aam
repz
and
inc
and
ficomps
test
out
lds
jns
aam
stos
adc
adcl
adc
pusha
mov
mov
and
pop
lock
jo
xchg
mov
adc
adc
arpl
stos
imul
lds
je
sti
xchg
or
or
mov
icebp
mov
inc
insl
dec
shlb
lahf
faddp
mov
loope
pop
sbb
mov
add
test
shld
pop
leave
sbb
int
mov
dec
repz
fildll
call
sub
xchg
push
pushf
or
sub
aad
lea
push
mov
into
test
leave
aas
mov
lods
jne
fldl
sahf
outsl
loop
aad
dec
aas
xchg
movsb
jl
pop
pop
insl
add
pushl
or
or
push
shl
mov
pop
fmul
mov
or
lcall
data16
or
loope
xorb
sti
lret
push
jp
jge
push
sbb
ffreep
add
sbb
pusha
scas
rorl
jl
dec
mov
movsb
cmp
lds
inc
pusha
subl
inc
or
push
data16
jbe
dec
push
push
pushf
push
push
icebp
scas
pop
popa
cltd
jmp
clc
xlat
jb
inc
scas
mov
fwait
mov
cmp
sbb
mov
dec
or
mov
add
mov
sbb
ror
pop
add
dec
inc
pop
dec
stc
jnp
mov
push
les
lret
mov
mov
faddl
ret
pop
and
mov
mov
jle
xchg
mov
xor
test
xchg
jp
jg
xchg
sahf
nop
push
arpl
pop
xchg
aas
cmpsl
push
dec
out
cmp
add
xor
test
imul
or
aas
jb
rorl
fwait
les
imul
cld
rorl
push
ret
ljmp
xlat
addl
arpl
call
cmp
push
mov
jle
test
push
cmc
jg
test
cli
daa
xchg
dec
iret
out
xchg
lock
mov
stc
fs
pop
add
popf
scas
dec
jecxz
mov
cmp
clc
xchg
adc
repnz
dec
pop
es
test
inc
xchg
adc
popf
jbe
mov
in
mov
inc
add
lret
icebp
adc
mov
mov
fwait
dec
and
push
popf
es
xchg
or
pop
cmp
loopne
jno
mov
pusha
mov
adc
push
xor
shrb
xor
enter
jne
shrb
pop
xor
outsl
mov
adc
out
lret
xchg
mov
test
push
xor
inc
inc
sub
dec
decl
jge
das
out
xchg
ja
cwtl
aam
aaa
lret
push
adc
out
jle
lret
sbbb
sbb
inc
pop
adc
or
out
pop
iret
mov
insl
jae
mov
mov
inc
lock
pop
mov
jmp
sarb
cmp
inc
je
mov
cmp
es
fs
xor
shr
cmc
inc
xchg
icebp
and
orb
mov
sub
xchg
sbb
fisttpl
cmp
fisttps
out
mov
push
mov
rol
enter
mov
adc
cltd
dec
mov
sbb
stc
inc
adc
sub
sub
out
les
js
repz
movsb
add
mov
mov
cs
jecxz
pusha
popa
adc
adc
cmp
daa
data16
sti
clc
cltd
rcrl
push
pusha
ret
push
pop
lods
mov
imul
adc
das
dec
mov
cmp
add
in
push
push
add
xor
scas
or
or
push
cmp
jno
ds
push
gs
pop
es
push
subl
dec
xchg
icebp
push
add
loopw
jle
add
aas
outsl
rorb
sbb
test
rcrb
inc
inc
pop
jge
push
dec
adc
mov
xor
movsl
cmp
je
add
iret
inc
jbe
popf
jns
pop
pop
push
outsl
jg
xchg
or
hlt
mov
pop
rcrl
loope
daa
scas
xlat
jp
sbb
cmc
xchg
cli
dec
outsb
mov
or
pushf
cli
inc
push
mov
daa
inc
adc
xchg
inc
pop
inc
jge
lods
out
lods
aam
mov
and
leave
into
lahf
fstpl
pop
dec
mov
mov
dec
jge
push
aad
adc
in
or
inc
cwtl
hlt
pop
sbb
in
ds
popa
xor
sub
rol
mov
in
sub
jae
ror
push
stc
push
aam
push
jae
mov
mov
sti
and
rolb
fwait
adc
jo
loop
mov
jmp
or
inc
into
ss
add
xor
test
or
add
fsubrp
adc
xchg
lock
cmp
push
jne
pop
adc
push
lock
in
roll
roll
ret
hlt
adc
xchg
aaa
shlb
cmp
pushw
dec
cmc
pop
shrl
mov
jle
icebp
xchg
rcrl
inc
loopne
fsubr
push
rorl
dec
in
lods
jnp
shll
negl
movb
adc
ss
lds
jge
lds
xchg
xlat
pop
mov
lods
fmuls
xchg
mov
fnstcw
aas
mov
xchg
xchg
mov
loopne
out
pop
push
divb
je
cwtl
pop
enter
push
push
sar
jb
inc
xchg
out
outsl
scas
dec
add
push
add
arpl
inc
or
sub
sbb
push
enter
cli
or
sbb
inc
lods
subl
imul
in
mov
movsl
xor
dec
dec
cltd
loop
icebp
mov
and
clc
hlt
mov
xchg
frstor
andnps
aad
xchg
dec
xchg
inc
pop
sbb
leave
xor
adc
jb
pop
or
xor
jnp
jl
int
mov
clc
or
mov
fsubp
pop
mov
inc
fists
sbb
push
cmp
das
mov
dec
and
pop
xor
pushf
adc
call
icebp
lods
adc
int
and
mov
jg
or
dec
dec
xor
xchg
sti
jb,pt
test
js
or
pop
inc
mov
add
sti
je
pop
mov
adc
or
inc
movsb
outsl
scas
lock
mov
push
push
movsl
dec
in
mov
mov
adc
or
inc
test
adc
lock
ret
jb
scas
out
xchg
or
scas
or
je
mov
cs
je
jg
cmp
add
jb
pusha
fisttps
ljmp
pop
dec
sub
or
mov
or
stos
inc
dec
dec
outsb
hlt
mov
xchg
shlb
xor
fisttpl
idivl
rol
in
gs
push
loopne,pn
rcrl
nop
push
mov
xlat
mov
push
aad
xchg
xchg
out
sub
adc
cmp
fidivrl
pop
mov
sub
push
cmp
mov
enter
jae
push
sub
jno
ljmp
cwtl
cmpsb
sub
pop
add
mov
mov
in
lcall
daa
pop
and
scas
and
add
movsb
js
icebp
aaa
in
aad
nop
cmp
pop
xlat
jne
test
pusha
cmp
ror
pcmpgtb
cmpsl
cmp
push
je
cmp
std
xlat
mov
xor
aaa
sbb
cmp
mov
popa
cltd
mov
sub
lods
push
gs
jmp
sub
add
jbe
std
xor
jecxz
gs
and
xchg
aaa
scas
loopne
fwait
xchg
xchg
inc
mov
out
call
sub
popa
jle
in
jp
loope
mov
out
dec
mov
mov
dec
vpmovusqd
jno
imul
ds
xchg
mov
lock
sub
xor
xchg
mov
mov
lcall
scas
jnp
hlt
lcall
mov
mov
repnz
std
cs
test
pushf
sub
pop
mov
jne
pop
or
mov
mov
mov
inc
fbld
es
dec
lods
or
push
jl
loop
lods
popf
sbb
jno
cmp
scas
inc
setge
lock
sbb
andb
gs
xorl
xor
pop
cmc
nop
mov
push
rorb
icebp
std
sub
pop
add
aaa
icebp
pop
ret
cmp
mov
jbe
repz
sub
scas
stos
addr16
lret
sbb
sub
loope
push
push
jmp
mov
mov
xchg
adc
fwait
pop
lcall
out
lcall
inc
iret
inc
cmpsl
sarb
dec
push
sbbl
imul
push
in
or
mov
fs
cmc
cld
and
mov
and
adc
test
lahf
and
jno
mov
fwait
and
mov
mov
ficoml
std
push
jae
cmp
ljmp
mov
xor
scas
rcr
ret
adc
fbld
pop
rolb
out
jns
push
test
int3
sbb
aaa
clc
mov
jae
lods
mov
cmp
in
fs
pop
insl
and
dec
xor
cwtl
pop
jmp
imul
sub
call
sbb
stc
ror
inc
xchg
dec
push
dec
sbb
outsb
mov
lret
mov
aad
hlt
jne
decl
push
cmc
aaa
xchg
or
outsb
push
pop
adc
add
and
mov
jmp
push
xor
lea
aad
push
mov
cld
ds
es
pusha
mov
or
mov
xchg
and
sbbb
fisubrs
sub
jmp
adc
lret
xchg
inc
push
cltd
or
pop
push
jnp
push
xor
mov
push
in
adc
dec
fcom
loop
xchg
in
mov
int3
mov
pop
cmp
sbb
loopne
enter
mov
in
inc
xchg
lea
mov
fsubl
xchg
lahf
in
xchg
xor
jge
xchg
aaa
mov
push
xor
cmp
or
imul
test
inc
mov
xor
or
sbb
jecxz
jecxz
loope
push
pop
jae
dec
inc
int
add
sub
jp
mov
mov
pop
push
cmp
in
add
pop
cmp
mov
das
in
inc
fldenv
dec
push
scas
ds
jl
clc
sbb
je
fs
stos
push
mov
jne
setg
xchg
jp
dec
ss
or
mov
fdivl
xchg
pop
cmpsb
mov
lahf
enter
rol
push
jo
xor
daa
shl
mov
ret
mov
cmc
dec
fwait
in
jnp
rolb
shll
in
mov
cmp
xchg
mov
mov
sbbl
gs
add
sti
xchg
inc
adc
cmpl
dec
pop
dec
int
subb
sub
xchg
jge
ss
dec
lods
mov
sarl
sahf
pusha
je
leave
mov
mov
push
xor
sbb
sbb
ret
jmp
pop
aad
in
clc
adc
xlat
iret
insl
jg
xor
mov
or
imul
jns
testb
ja
loope
inc
into
dec
loope
jne
ja
nop
popf
push
mov
gs
ss
jecxz
xor
push
inc
nop
xchg
into
frstpm(287
dec
lods
dec
or
pop
add
in
mov
fmull
jp
mov
std
clc
inc
push
xchg
loopne
mov
mov
and
int
mov
je
xor
sub
xchg
out
mov
dec
or
jl
xor
add
rcrl
dec
pop
notb
loope
mov
jns
rorl
mov
push
fbld
addr16
dec
mov
push
pushf
sub
push
xchg
xor
iret
sbb
sarb
xor
sbb
jb
pop
loope
inc
es
mov
ss
sbb
fstpl
scas
and
hlt
xchg
fcoms
scas
jb
mov
in
insb
mov
loope
sbb
or
inc
lcall
adc
clc
fistl
imul
addr16
shll
adc
data16
adc
iret
mov
xchg
cmp
push
inc
jecxz
xor
xchg
icebp
hlt
xlat
jbe
mov
push
dec
hlt
or
lahf
cmc
mov
inc
push
ficoms
push
xchg
imul
out
popa
jl
and
and
push
add
or
jp
orb
sbb
in
push
in
mov
test
dec
mov
mov
cmpsl
testb
mov
in
adc
inc
andl
arpl
int
jle
inc
out
loop
push
jbe
dec
sub
lock
aam
pop
mov
adcl
aas
and
orb
cmp
xchg
inc
cli
shll
movsl
add
movsl
sbb
mov
jo
mov
fucomp
inc
add
xchg
icebp
lea
push
mov
cs
push
push
mov
in
xchg
imul
sbb
inc
sbbb
outsl
rcrb
or
cmpsl
adc
ret
cmp
loope
dec
mov
or
sbb
fstpl
pop
or
sub
int3
cs
test
out
inc
sbb
sbb
test
lods
or
lock
aad
into
xchg
hlt
stos
ret
cmpl
cwtl
rolb
and
lods
test
push
inc
das
dec
add
andb
stos
add
sub
cld
call
mov
push
cmc
outsl
or
jl
pushf
out
dec
and
pop
iret
push
cmp
shlb
dec
jbe
test
addr16
divb
stos
mov
pop
and
xchg
cmp
inc
mov
push
push
sbb
pushf
push
inc
out
add
fwait
enter
test
push
mov
pop
mov
js
sti
sar
mov
call
mov
sub
pop
cmp
idivl
pop
adc
aaa
push
jle
xchg
pop
subl
ja
leave
sbb
sahf
movl
pop
mov
data16
pusha
or
push
push
pop
imul
cld
xor
add
scas
cmpsb
stos
cmp
push
push
jb
mov
inc
mov
adc
mov
dec
xor
jb
jb
in
cmc
pop
scas
aad
mov
ljmp
jge
push
cmp
xchg
sub
dec
movsl
inc
cmpsl
dec
ret
mov
popf
inc
mov
test
jne
aas
mov
mov
subl
test
dec
pop
cmp
mull
nop
push
in
ljmp
fst
cmp
pop
test
rolb
addl
adc
sub
push
sub
jmp
dec
pop
mov
adc
arpl
fldcw
lds
in
int3
sub
out
out
pop
lods
fsubr
sahf
jp
test
pop
inc
loope
fists
popf
jecxz
push
push
xchg
jmp
push
imul
cmpsl
aas
rclb
jl
loopne
cmp
scas
cli
adc
mov
add
and
lods
enter
pusha
sbb
rorb
jp
lretw
nop
mov
aaa
sbb
adc
add
fmul
xchg
gs
mov
fdivs
xchg
mov
bound
leave
sub
pop
xor
mov
mulb
leave
and
popf
push
and
nop
call
adc
iret
push
aaa
sbb
or
mov
arpl
and
fimuls
movsb
cmc
jp
out
bound
scas
nop
jmp
xchg
in
imul
lahf
mov
inc
push
inc
adc
mov
repz
mov
call
scas
jnp
in
popa
les
sbb
jge
je
ja
cmp
out
sbb
mov
sbb
loopne
fidivrl
xor
popf
add
jne
jo
in
loope
arpl
insl
pop
cs
lods
aaa
orb
pop
add
rcl
std
std
push
mov
mov
cmp
mov
sub
pop
xchg
sub
ficomps
xchg
mov
cmpsb
and
pop
adc
mov
rol
aas
xchg
mov
push
orb
jae,pn
xor
pop
and
fmuls
adc
mov
scas
sti
loope
ds
rclb
mov
shl
mov
fnstenv
mov
loop
imul
cmpsl
enter
inc
xor
dec
mov
add
or
jle
mov
inc
arpl
cmp
pop
clc
sbb
cmc
cmp
jbe
mov
or
mov
push
aam
xchg
rclb
cmpb
xchg
rcrl
inc
or
pop
fidivl
sub
fs
xor
stc
pop
pop
ds
repnz
push
adc
jmp
jb
add
lea
insb
fld
not
sub
xor
rcll
and
dec
loop
lret
inc
aad
push
xchg
cli
sub
or
and
imulb
pop
xchg
dec
mov
cs
cmp
in
cmp
out
xor
and
in
xor
test
xchg
adc
adc
data16
mov
and
adc
aad
push
ret
arpl
mov
fisttpll
int
mov
flds
push
xchg
xor
sbb
cmp
jmp
add
cmc
std
mov
js
stos
aaa
dec
xchg
pop
fimuls
push
jl
cltd
filds
in
je
fbstp
sub
outsb
dec
shlb
xor
in
ljmp
out
aad
dec
xchg
push
dec
jno
sub
xor
mov
loopne
fisubrs
add
in
int3
repnz
inc
xchg
jecxz
jnp
xor
sub
pop
mov
sahf
out
jbe
paddusb
dec
pushf
rcl
xchg
push
loopne
jb
fsubl
fiaddl
fs
xchg
push
inc
and
aas
jge
sub
mov
rcll
sbb
xor
decb
scas
inc
jmp
adc
jp
cmpsl
insb
mov
mov
jecxz
mov
mov
icebp
mov
mov
jmp
pop
dec
and
sbb
mov
mov
jns
cwtl
sub
in
push
int3
cmp
sbb
mov
mov
jle
ficoml
xor
bound
fldcw
fwait
inc
and
add
sahf
fwait
mov
inc
mov
lcall
ljmp
xchg
cmp
into
int
stos
xchg
xor
mov
rorl
jnp
cs
das
or
stos
rcrl
pusha
mov
jnp
out
add
xor
dec
shufps
cmovne
dec
icebp
mov
mov
out
icebp
pop
mov
es
fcomp
xor
in
mov
xchg
jnp
push
cwtl
inc
sbb
std
pop
xchg
adc
xor
call
adc
sahf
daa
rcl
inc
out
outsl
pop
cwtl
out
jg
push
cmc
xchg
into
mov
aam
jnp
pop
xor
repz
xor
scas
dec
add
add
data16
xchg
dec
clc
cmpb
add
addb
sar
mov
mov
movsl
in
pop
sbb
or
xlat
scas
mov
mov
clc
cli
aas
xorb
mov
xor
popf
pop
xlat
enter
and
shlb
faddl
mov
jecxz
xor
push
mov
daa
jmp
dec
iret
jmp
loope
lcall
sbb
test
push
inc
mov
fisubs
sub
mov
pusha
test
xchg
fiadds
mov
daa
dec
push
cmp
imul
pop
nop
sti
cmp
dec
push
cmc
sti
in
mov
push
mov
ret
insb
inc
out
xor
aam
lret
sub
or
mov
fwait
xor
sahf
push
sarb
out
cli
fsubr
cltd
addl
ss
out
and
mov
or
fcomps
stos
jl
in
pushf
pop
xor
fwait
jns
pop
nop
test
test
mulb
jo
push
mov
sbb
scas
xchg
pop
cmp
addb
out
sbb
test
imul
insb
xor
cwtl
pop
dec
imul
mov
insb
iret
xor
sbb
push
jp
mov
pushf
push
bound
dec
xor
xchg
pop
sbb
dec
or
mov
test
fmuls
push
in
leave
push
addb
call
hlt
rol
cltd
scas
inc
add
xor
and
sbb
in
gs
arpl
mov
dec
leave
outsl
mov
and
jae
nop
mov
mov
adc
push
test
stos
shlb
inc
fbld
xchg
sti
add
aam
push
mov
inc
insb
inc
cmp
dec
push
add
cmpsl
and
idiv
stc
mov
adcl
insl
cmp
xchg
pop
sti
push
push
ja
cmpsl
sub
sbb
inc
push
repnz
and
shr
ficoml
imul
push
mov
lret
shlb
shll
sub
mov
or
ljmp
insl
aam
cmp
popa
cmpsb
pop
cs
dec
movsl
inc
xorb
fs
je
adc
popa
pushf
in
imull
popf
xor
mov
je
in
push
or
inc
ljmp
push
pop
into
add
stos
inc
or
in
in
jne
nop
shll
or
mov
mov
ret
repnz
fs
dec
xor
xor
push
icebp
insb
addb
cs
mov
and
pop
sub
hlt
xchg
or
sbb
or
jb
jbe
in
pushf
mov
mov
push
inc
mov
lods
adc
test
xchg
and
pop
inc
addr16
and
movsb
sarl
loop
push
sbb
and
mov
pop
push
mov
or
or
inc
fbstp
xchg
test
cld
inc
les
mov
pop
inc
inc
outsl
outsl
gs
hlt
adc
pop
inc
pusha
lock
inc
rcl
mov
mov
push
pop
add
mov
fldl
popa
xor
dec
aad
ror
mov
push
pop
sbb
adc
call
scas
lgs
adc
pop
add
pushf
adc
les
out
scas
fdivrl
sbb
sbb
pop
fmull
add
pop
fs
rorl
inc
fdivl
mov
in
adc
ret
jmp
add
outsl
testl
push
and
xchg
jg
ret
pop
or
inc
nop
fsubrp
lods
xor
inc
add
not
mov
lock
imul
pop
xchg
push
int3
and
xchg
pop
adc
mov
ret
inc
inc
push
xchg
mull
sbb
insb
xchg
mov
push
mov
or
ss
dec
es
in
test
and
sbb
cmp
ret
js
sbb
pusha
repz
outsb
inc
leave
shlb
xchg
pop
enter
jns,pt
sub
xor
jo
or
adc
inc
mov
dec
dec
jae
jmp
push
adc
pop
lcall
or
mov
jb
inc
inc
sub
pop
popf
call
xchg
inc
leave
mov
mov
sub
cmp
es
jmp
popa
data16
cmp
aam
push
fcomps
sub
xchg
and
ss
and
mov
sbb
sarl
aam
sbb
sub
push
cld
adc
sahf
aaa
out
xchg
inc
mov
xchg
jb
jo
aas
inc
pushf
push
cmp
sub
add
imul
mov
loop
pop
or
mov
dec
xchg
jnp
xchg
into
pop
xchg
enter
lret
jle
loopne
clc
push
push
jecxz
fisubrl
iret
in
outsl
adc
push
adc
fwait
cmc
stos
pop
jg
fistpl
mov
notb
mov
pop
xor
fisubl
or
adc
mov
scas
mov
ret
int3
outsb
dec
mov
mov
mov
clc
rcrb
aad
jnp
sub
popf
add
pop
aaa
les
rcll
add
jg
icebp
rcrl
int
and
clc
into
test
int3
adc
cltd
and
jbe
ljmp
lods
movsl
sub
out
add
je
mov
pop
aaa
dec
pop
jmp
clc
pop
fmulp
gs
lds
sub
xor
sub
push
cmp
imul
inc
cmp
sarb
out
jl
mov
scas
out
icebp
mov
and
and
mov
rcl
push
and
jno
loopne
out
insb
jo
imul
mov
dec
mov
mov
pop
pop
and
mov
push
test
icebp
lds
sbb
aad
sbb
dec
loope
lahf
bound
or
jle
adc
outsb
sbb
or
jbe
cmp
push
xchg
mov
arpl
and
mov
in
mov
jg
add
xor
push
enter
fildll
mov
cs
test
cld
mov
and
jecxz
jecxz
in
inc
loopne
or
mov
insl
xor
fisttps
jecxz
mov
cld
add
xlat
lret
xchg
inc
add
imul
pop
iret
fs
je
xchg
into
pop
jbe
xchg
xchg
es
pusha
ret
cltd
loop
cli
lcall
push
adcl
jle
dec
rcrl
std
xchg
jae
cli
and
lcall
mov
push
add
pop
add
in
and
int
and
cmp
jge
cltd
mov
push
cmp
inc
mov
adc
lret
cmpsb
and
fsubrs
adc
lret
sbb
mov
lret
fnstcw
pop
aam
pop
orl
lds
cmp
nop
fcomps
inc
dec
insb
jp
aas
rolb
popa
add
shrl
cmp
xchg
bnd
sbb
mov
aas
jp
and
mov
addl
in
clc
fcomi
movsl
inc
cmp
jg
jecxz
adc
rorb
mov
and
mov
jmp
test
jg
mov
pop
add
sbb
js
push
pusha
test
dec
lds
std
cmpsl
jb
mov
cmp
imul
cmp
xchg
pop
push
faddl
inc
push
xchg
dec
push
sub
lret
test
push
mov
jns
add
shll
cmp
in
mov
and
mov
sarb
jecxz
add
mov
xchg
pop
movl
mov
push
inc
ret
mov
push
dec
fstpl
or
xchg
mov
mov
loope
inc
jnp
mov
imul
outsl
mov
and
xchg
cmc
cmp
addr16
test
xor
enter
test
mov
inc
push
lods
jp
mov
pop
or
ja
xor
inc
in
and
jmp
add
popf
adc
jno
push
xor
xchg
push
movsb
jae
add
faddl
jae
jl
push
cmpsl
maskmovq
idivl
adc
ljmp
xchg
mov
lret
sub
xor
daa
inc
arpl
adc
fisttpl
inc
mov
dec
inc
adc
adcb
or
jge
insl
pop
into
mov
daa
bound
lret
add
and
jno
mov
push
in
lahf
pop
sahf
out
movsl
mov
mov
mov
pop
sub
sub
sub
mov
in
cli
xchg
pop
test
sub
mov
inc
add
or
arpl
lods
ret
cltd
arpl
leave
push
fisttpll
cmp
mov
jns
rclb
vpackssdw
mov
sub
xor
jecxz
nop
jecxz
mov
jnp
add
out
push
popa
jle
or
fdiv
sbb
or
jne
xchg
pop
or
push
cmc
outsl
cmp
lock
int3
mov
int3
fsts
aaa
insl
cwtl
inc
into
dec
aad
push
mov
sub
rorb
mov
xor
fld
cltd
shr
lods
inc
movsb
stos
scas
jnp
imul
stos
add
aad
int3
out
xchg
xchg
mov
mov
push
mov
je
xchg
shrl
mull
ljmp
push
fbld
inc
call
xchg
lahf
mov
mov
xchg
stos
mov
xchg
inc
or
mov
fs
mov
xor
rcl
inc
xlat
cltd
pop
cmp
jmp
sub
leave
xor
leave
int
mov
sub
xchg
jle
out
je
test
clc
push
idiv
aam
mov
and
push
pop
cld
mov
dec
mov
adc
cltd
sub
frstor
loopne
cmpsb
cli
mov
dec
outsl
hlt
adc
cmp
jnp
mov
inc
js
mov
jno
icebp
imul
nop
mov
xor
mov
lea
mov
inc
inc
insb
pop
lods
push
mov
or
or
repnz
push
js
dec
loope
and
pop
jle
aam
dec
mov
cmp
xchg
mov
roll
sub
dec
push
mov
lods
mov
out
ficomps
fwait
pop
sbb
mov
push
push
mov
push
stos
mov
push
xor
sub
adc
scas
xchg
sub
cmp
cmp
cld
jbe
push
lods
int3
fwait
mov
inc
imul
fwait
pop
pushf
loope
add
push
push
inc
and
jp
cli
mov
sub
xlat
pusha
call
push
adc
call
gs
push
inc
mov
xchg
setnp
das
int
aad
lods
lock
lret
in
hlt
adc
and
pusha
mov
push
je
insl
dec
aad
xchg
xchg
cmpb
in
cmp
add
in
stc
add
pop
push
scas
leave
mov
sub
mov
adc
cs
sub
cmp
xchg
dec
cmp
mov
lock
inc
inc
jl
pop
sbb
arpl
fnstcw
lock
mov
cld
adc
mov
push
sub
roll
rclb
jnp
addr16
cmpsb
mov
and
insl
push
je
icebp
xchg
xchg
testb
andb
aad
jecxz
sbb
les
pop
shr
sub
lcall
inc
pop
mov
fistpl
ret
iret
dec
inc
mov
jne
and
jnp
aas
jne
dec
shlb
sub
mov
sbb
adc
mov
mov
ror
cmp
push
into
aad
shlb
out
cmp
or
mov
sahf
mov
fidivrs
repnz
sarb
mov
adc
out
jno
pop
cmpsl
mov
lret
cmp
mov
fadd
and
movsb
mov
pop
lock
cmp
cmpsb
insl
int
cmc
xor
push
incl
jg
mov
lret
out
xchg
vmulpd
outsb
xchg
or
arpl
rorb
lock
mov
rol
jle
fadds
xchg
mov
or
stos
push
scas
lcall
fistl
add
mov
cmp
push
cmpsl
jl
mov
cmp
lcall
adc
mov
mov
cmp
test
fucomi
pop
sbb
pop
test
jle
fstps
test
fiadds
fisttpll
cli
dec
inc
mov
je
scas
mov
xor
push
mov
lahf
out
stc
add
or
mov
pop
aas
cltd
bound
sub
jo
sub
push
in
fdivrs
sti
or
adc
add
in
std
jbe
cld
idivb
sub
jg
stos
or
mov
icebp
out
sub
test
jge
lret
mov
pop
pop
inc
dec
sarl
jle
or
or
push
popa
dec
popa
jge
adc
cmp
lret
adc
push
fcmovnb
aaa
pop
jecxz
lret
ja
push
fndisi(8087
xchg
inc
and
jle
int3
daa
xor
or
pop
jns
enter
in
lds
lret
arpl
outsb
imul
add
mov
shlb
sarb
dec
lock
adc
xchg
adc
inc
mull
cmpb
pop
loope
push
add
fwait
bound
outsb
push
inc
cld
ds
sbb
lahf
jns
pop
js
sbb
and
ja
cmp
mov
fcmovu
out
cmovae
sbb
sub
jg
and
in
cmpsb
pushf
sub
imul
jecxz
out
mov
sub
mov
lahf
sahf
test
xchg
inc
in
pushf
xchg
pop
cmc
aad
mov
pop
xchg
psrld
mov
mov
cmpsb
in
sub
lret
xchg
arpl
into
es
push
cmp
outsl
ds
movsb
xorl
dec
das
xor
and
sbb
jecxz
mov
bound
adc
das
icebp
ja
shlb
adc
sets
lcall
inc
cwtl
lods
adc
addr16
and
pop
popa
ret
add
add
test
inc
popa
pop
push
outsl
std
shrl
jge
or
out
jl
ss
or
addr16
lods
insl
jnp
fsub
fisttps
dec
xchg
fnstenv
sub
sub
test
jns
sub
xchg
xor
pop
sbb
bound
adc
ja
into
mov
push
sar
ret
mov
or
ss
test
notl
js
in
add
rcrb
imul
adc
cmpsb
dec
loopne
cwtl
mov
fldcw
xchg
jl
ret
aas
icebp
and
jbe
jnp
lock
mov
jp
inc
pop
mov
das
pop
aaa
mov
xlat
jmp
int
cmp
and
mov
push
testb
sub
xlat
push
adc
test
xchg
int
cmp
push
jecxz
lahf
mov
test
jbe
rcrb
adc
jmp
mov
jnp
shlb
xlat
sub
sbb
into
xchg
jne
mov
pop
xchg
inc
push
jmp
push
push
mov
loopne
rcrl
push
pop
inc
adc
jnp
iret
loop
sub
sti
push
push
lods
mov
dec
cli
repnz
popf
imul
repnz
addr16
mov
and
in
or
hlt
sbb
imul
in
popf
jle
call
imul
adc
fsts
mov
mov
push
rorb
mov
push
jg
call
call
bound
cwtl
mov
outsb
jl
mov
pop
loope
sub
push
outsb
fisttps
xlat
xchg
cmpl
pop
xchg
fcmovb
add
sub
and
inc
and
jbe
pop
dec
add
sub
rcl
repnz
add
adc
jno
dec
push
cwtl
ret
inc
imul
add
shll
xor
mov
adc
test
into
fwait
sub
push
xor
push
mov
xchg
xor
in
cwtl
and
pushf
pop
lahf
sbb
mov
daa
test
repnz
xchg
xchg
sti
mov
adc
rclb
sahf
push
lret
push
jecxz
cld
mov
sti
out
lock
jl
test
mov
or
push
push
mov
sti
adc
into
add
test
fstps
daa
adc
jns
pop
test
pop
xchg
scas
popf
xchg
adc
test
out
fisubrs
aad
xchg
push
loopne
push
cmc
stc
xlat
dec
jb
add
and
mov
icebp
mov
mov
inc
xchg
dec
xchg
nop
aaa
rorl
subl
push
daa
inc
pop
lahf
mov
pop
test
enter
aas
xchg
pop
cltd
xchg
and
dec
mov
lea
dec
or
xchg
insl
adc
push
and
xor
lcall
ret
xor
sbb
movsl
xchg
sub
cmpsl
stos
mov
pop
cmp
sub
jl
add
jecxz
jle
pop
test
leave
or
cmp
test
add
adc
adc
fmuls
aam
sub
rcl
lds
adc
pop
aaa
leave
xchg
mov
sub
xor
sub
push
push
dec
inc
int
pop
cmpsl
imul
scas
cmpb
mov
adc
push
xchg
aam
shrb
cli
pushl
mov
xchg
and
into
hlt
sub
and
fwait
test
xor
sub
shrb
xlat
push
and
sbb
imul
cltd
jmp
xor
sbb
adc
fidivl
je
xor
popf
dec
add
rcl
jmp
repnz
mov
lret
mov
andb
dec
stos
push
sub
xlat
inc
jae
shr
and
push
out
ja
xor
mov
and
push
divl
adc
icebp
test
mov
ret
cmp
lcall
add
stc
push
iret
or
sub
fwait
xchg
test
sbb
subb
mov
mov
popa
push
push
pushf
push
cli
setbe
cld
inc
inc
push
int
addr16
lds
push
push
jle
shrb
movsb
mov
cmp
pop
mov
xchg
mov
push
lret
leave
arpl
xchg
cmp
adc
mov
sub
mov
sbbl
ljmp
sarl
les
nop
sub
dec
fmulp
in
popf
outsl
fistl
mov
dec
push
imul
sub
subl
stos
xor
enter
sbb
add
and
mov
pop
dec
lahf
xchg
xor
mov
iret
in
sub
popa
push
nop
adc
dec
push
xchg
shr
imull
adc
dec
cmpsl
add
dec
add
adcl
jg
in
inc
add
cs
sub
mov
imul
daa
je
rolb
in
xchg
jbe
xor
and
sub
sbb
mov
xlat
jmp
adc
ret
or
and
popa
cli
adc
pop
xchg
movsl
outsl
dec
inc
inc
jo
jo
dec
jne
pop
dec
aas
ja
sbb
adc
in
int3
pop
loope
mov
sub
dec
xchg
jae
jno
fmul
lea
mov
jnp
std
add
outsl
adc
insl
mov
loop
pop
scas
sbb
push
aam
xchg
sub
add
shlb
mov
cli
adc
out
and
cmc
add
movsb
and
jl
lret
mov
cmp
cmc
or
and
fdiv
mov
lahf
jp
push
aam
sbb
or
and
roll
add
fiadds
mov
lea
xchg
fldl
scas
and
adc
lods
add
lret
push
and
lahf
popf
dec
xchg
sarl
add
jo
popf
stos
mov
cltd
xor
jnp
lret
or
jns
inc
jns
sub
mov
test
jg
and
jae
jg
dec
movsl
xor
test
test
add
pop
jp
pop
jo
pop
cmp
pop
ljmp
pop
cld
movsl
clc
mov
cwtl
cmp
std
inc
fisubrl
pusha
jo
jno
filds
xchg
xor
or
lods
cmpsb
sbb
dec
pop
hlt
mov
push
pop
les
ja
inc
sub
fxch
sbb
ss
or
popf
jnp
lret
push
dec
push
push
inc
mov
aas
push
repz
js
ret
por
mov
fists
xor
int3
stos
xor
insb
je,pn
out
sub
inc
mov
ret
adc
or
xlat
mov
dec
and
test
sbb
pusha
adc
push
jnp
movsl
imul
mov
inc
mov
push
mov
mov
test
test
lret
sbb
loop
dec
aas
mov
leave
or
jg
dec
sub
sarb
sar
and
incl
cs
fcompl
out
dec
inc
pop
call
jge
bound
dec
pop
mov
int3
jg
push
int3
jb
and
mov
aas
je
cs
je
cmp
fstl
push
add
scas
movsl
jl
mov
jb
pop
sub
cs
adc
mov
dec
ret
sarb
push
rcrb
adcb
pusha
push
lahf
or
enter
pop
adc
lods
ja
fwait
in
ficompl
int
iret
cmp
push
cmp
inc
fmulp
rcrb
popa
inc
testb
and
outsl
pop
les
mov
mov
cmc
aad
aad
stos
mov
fbld
clc
popa
je
cmp
nop
jae
cmp
mov
fldt
adc
cltd
fcmovnbe
jae
ljmp
notl
xchg
lret
jecxz
inc
ret
cwtl
cli
jnp
push
mov
fwait
push
sub
adc
xchg
into
cmp
mov
xchg
jno
shlb
lret
repnz
mov
mov
cmpsb
insb
pusha
jmp
ss
enter
clc
loop
in
fstps
push
mov
xchg
mov
repz
sub
loop
adc
test
mov
movsl
mov
sbb
mov
stc
xlat
add
push
jae
cld
mov
bound
mov
cmpsb
adc
sbb
or
insb
adc
jp
dec
clc
dec
inc
jnp
mov
xchg
mov
mov
pop
push
xchg
ja
les
stos
cmpl
sub
das
sub
or
add
push
cmp
insl
mov
arpl
xor
ljmp
test
sub
xor
cmpsb
mov
xor
subb
jae
push
insl
push
jnp
mov
mov
xchg
adc
xor
jo
mov
push
adc
lret
jb
mov
lcall
sub
sub
and
les
ljmp
adc
out
jecxz
pop
call
xchg
dec
jecxz
add
popa
cmpsb
xchg
push
insl
rcrl
pop
je
ds
jno
push
and
clc
rcrl
push
push
pop
pop
xchg
mov
shll
aam
jg
and
mov
fcom
inc
outsl
testb
ret
pop
rolb
jg
add
hlt
jno
jmp
adc
add
enter
jae
push
test
aaa
jl
xchg
int3
sbb
dec
lret
mov
mov
sub
mov
sub
out
xor
xchg
mov
sub
inc
ja
fildll
ficoms
mov
and
or
jns
in
pop
xchg
arpl
push
daa
repz
adc
enter
pop
je
icebp
sbb
insb
rorl
inc
or
in
lcall
dec
and
jp
push
int
fimuls
sbb
fbld
ja
adc
rorb
movsl
popa
mov
fxtract
out
inc
enter
int3
push
and
cmc
mov
cs
jg
jecxz
sub
js
jnp
sti
sub
cmp
or
scas
xor
fiaddl
mov
dec
call
orb
sub
dec
mov
pop
mov
movsl
cmp
cmp
xor
imul
jbe
daa
icebp
iret
xor
outsb
push
inc
cmp
jmp
outsb
jns
outsb
aad
and
and
or
ljmp
adc
xor
ret
or
cmp
bound
jg
call
lahf
int
es
sbb
pop
mov
dec
sbb
dec
ljmp
es
cmp
jle
fcoml
adc
int
mov
jnp
push
mov
je
xor
fidivl
mov
nop
dec
mov
out
loope
std
pushf
lods
pop
mov
mov
addb
popf
fstpl
bswap
cmp
aad
mov
jl
mov
mov
insl
jmp
test
mov
repnz
mov
pushf
enter
nop
inc
test
sub
ss
lcall
es
imul
andl
push
int
dec
aaa
and
or
ljmp
sti
xchg
inc
and
loop
sub
push
in
cltd
movsl
movsl
jl
adc
pop
dec
and
call
stos
popf
test
dec
xor
mov
add
mov
fimuls
or
push
and
in
lret
adc
lahf
push
stos
cmpl
add
aam
in
mov
pop
icebp
leave
lcall
call
fdivp
stos
xorb
out
or
pop
lds
fildll
inc
sarl
or
push
and
adc
pop
pop
movsb
aaa
jae
cmpsb
icebp
sbb
mov
and
dec
in
mov
test
mov
xor
jl
js
movsl
out
enter
or
cmp
cmp
pop
jne
subl
leave
in
xchg
scas
jecxz
adc
add
inc
sti
test
mov
popa
pop
and
in
mov
movsl
inc
daa
repz
inc
or
pop
inc
and
aaa
mov
or
push
xchg
or
or
pusha
in
out
sbb
xor
pop
stos
inc
pop
or
popf
enter
adc
les
das
dec
mov
jcxz
or
add
movsb
out
add
imul
cmp
cmpsl
add
loop
movsb
sub
or
fisubrl
pop
shll
jae
ljmp
ljmp
add
xchg
andl
push
test
es
and
mov
xchg
stc
lahf
cmp
cltd
repz
push
xor
testb
inc
jg
iret
orb
mull
es
add
dec
sub
cmp
mov
lock
pop
pop
cmpl
pop
lea
ret
enter
and
xchg
mov
adc
and
push
xchg
xchg
mov
xlat
test
jecxz
xor
fiaddl
icebp
fsubl
les
pushf
rol
loope
bswap
cmp
in
sbb
xchg
mov
cld
inc
mov
xchg
add
in
hlt
push
pop
fsub
insb
sbb
sub
ret
jle
or
jp
add
add
sbb
fidivs
mov
das
sub
shll
xchg
in
push
sub
cmpl
mov
mov
test
push
xor
test
adc
jecxz
sar
mov
push
dec
adc
je
adc
rorb
cmp
cmp
xor
and
in
xor
jecxz,pn
mul
xlat
mov
pop
mov
inc
jne
mov
test
int3
mov
pop
repz
nop
inc
push
push
ret
ja
out
pop
add
leave
mov
push
dec
in
jb
push
ljmp
aas
xor
sub
ljmp
xchg
popa
or
arpl
int3
adc
fnstenv
add
mov
or
mov
xor
jmp
or
scas
shll
rcll
sbb
lahf
push
stos
aad
xor
aaa
mov
outsb
fwait
cmpb
repz
cmp
sbb
das
adc
nop
adc
addr16
sti
testb
mov
jp
lods
adc
int
popf
shlb
xlat
aam
fst
movsl
je
jge
jnp
test
lds
mulb
call
movsb
push
test
cltd
and
rcrb
psrlw
sti
prefetchw
ljmp
scas
pop
std
imul
mov
loopne
movb
pop
int
pop
pop
aad
out
aam
cmp
cli
and
paddw
and
mov
movlhps
mov
and
rorb
pop
mov
and
or
add
insl
call
push
jb
adc
imul
shl
mov
add
add
pop
pop
sarb
gs
movsl
mov
mov
insl
notb
jbe
cmp
mov
xchg
cmpsb
cmp
mov
xchg
add
fwait
ljmp
mov
mov
popa
clc
adc
stos
adc
leave
cmc
les
lock
dec
push
push
loopne
aaa
das
adc
fiaddl
and
lret
mov
push
andb
xchg
sub
sub
imul
push
movsl
adc
and
outsl
in
test
or
mov
scas
sbb
in
push
shl
and
inc
add
test
push
sbb
shrl
mov
push
inc
jo
hlt
mov
jno
jge
ficomps
les
cmp
inc
push
cmp
dec
push
mov
in
jns
adc
cmp
mov
inc
pop
je
arpl
repnz
xchg
and
xor
mov
lcall
xchg
fistps
loopne
in
adc
aas
je
pop
or
es
imul
movl
xchg
in
insl
jmp
bswap
dec
fistps
xlat
pop
inc
jl
add
or
fimuls
and
in
ja
dec
loope
jge
out
add
int
js
je
lds
rcrb
lods
pop
xchg
inc
ret
rol
cli
xchg
loop
lret
out
sbb
push
in
sub
add
leave
add
push
out
and
stos
push
xor
or
rcl
add
or
je
xchg
lods
mov
cmp
and
outsb
mov
inc
insl
xlat
popa
mov
imul
push
repz
cs
mov
popf
stc
lock
cmp
sub
adc
les
popf
shll
and
ljmp
xchg
std
into
iret
sub
in
xlat
adc
inc
std
cmp
dec
push
int3
or
in
hlt
sub
xchg
and
lret
lods
mov
stos
lret
iret
push
test
stos
fucomp
rcrb
mov
dec
aad
popf
xchg
mov
out
pusha
adc
subl
lea
xchg
fs
int
and
add
cmp
in
xor
loopne
fdivrs
and
lock
loope
aad
mov
jno
lret
or
movsl
rorb
pop
adc
mov
xor
jl
outsb
mov
insl
and
pusha
mov
xor
movsl
es
ss
stos
imul
outsb
adc
insl
inc
hlt
mov
xor
mov
jno
addr16
cmp
gs
sar
sbb
xor
mov
cmp
jb
pop
jge
jp
add
je
push
sbb
pop
mov
sbb
iret
dec
orb
pop
pop
das
xor
rclb
adc
or
sbb
inc
or
ja
aas
imul
cli
dec
nop
es
mov
in
ds
test
pushl
sub
inc
inc
ja
xlat
jnp
and
test
pop
jge
icebp
fcoms
lock
sbb
sbb
lods
mov
and
sub
scas
dec
out
jmp
loope
pop
sbb
outsb
and
adc
mov
dec
cmp
push
jnp
sbb
add
mov
push
cmpsb
in
inc
cmp
in
ficoml
sbb
mov
pop
jmp
add
scas
or
cmp
pop
dec
cmp
shlb
lods
aaa
jmp
xchg
test
leave
sub
jp
das
push
sub
xchg
or
lahf
out
and
adc
and
bound
mov
push
sbb
mov
sti
inc
jl
or
imul
cmc
pushf
ficoml
sbb
adc
push
xor
in
push
cmp
mov
cs
and
fdivrl
dec
pop
sub
sbb
jns
fisttpl
xchg
pop
leave
orl
xchg
call
adc
lret
lods
push
outsb
cmpsl
cs
movsl
idivb
js
push
jne
xor
sbb
jmp
cwtl
rcrl
sub
mov
jg
dec
ficomps
shll
sbbl
iret
pop
fsubl
jno
fs
imul
leave
mov
cli
xchg
mov
iret
xor
loop
std
xor
jmp
shlb
fisttps
xlat
insb
mov
std
imul
sub
pop
aaa
loopne
aas
js
xchg
lds
into
pop
lea
push
dec
ret
inc
mov
ficompl
mov
cmpsl
inc
mov
and
test
lcall
xor
push
mov
lock
sub
mov
jo
fisttpl
add
out
pop
push
xor
repz
mull
cmp
aas
fs
fisttpl
movsb
mov
mov
stc
leave
add
jnp
mov
test
je
mov
cmp
jb
dec
pop
stos
push
cmpb
sub
xlat
mov
push
sbb
movsl
in
push
out
js
mov
bound
adc
test
xlat
call
sub
pop
pop
xor
fiadds
sub
orl
mov
adc
and
inc
fwait
rclb
testl
push
pop
and
call
push
xchg
loope
in
inc
shr
imul
lret
repnz
xchg
leave
ss
cmc
shlb
mov
out
push
jp
add
xor
fstpl
jge
test
imul
mov
popf
xlat
jnp
clc
mov
sub
adc
inc
inc
or
adc
pop
mov
pop
in
ljmp
xchg
icebp
icebp
push
and
sbbl
mov
pop
push
xchg
std
inc
lret
lock
ja
dec
imul
movsl
xchg
scas
addr16
xchg
jno
pop
sub
ffree
int3
bound
cwtl
and
push
sbb
paddusb
in
cmpsl
loope
ficoml
bound
and
ds
jb
int
mov
jne
hlt
cli
popf
sub
mov
mov
push
sub
push
jno
sbb
xchg
sbb
jne
mov
mov
jle
xchg
lea
xchg
inc
mov
sbb
int
xor
fidivrl
push
adc
cmpsl
add
mov
jp
cmp
cwtl
pop
popf
sub
dec
adc
les
dec
nop
aas
add
aaa
adc
in
inc
inc
movsl
mov
mov
inc
inc
pop
dec
xchg
xor
adc
sti
xchg
cmc
mov
test
jne
fs
and
push
and
std
dec
mov
pop
lret
push
outsl
sub
cmp
cmpsb
mov
or
jle
mov
stos
icebp
mov
or
movsb
outsl
pop
cmp
call
arpl
add
lds
fscale
icebp
mov
aam
jmp
cmp
in
ret
mov
sahf
rcrb
jbe
divl
xchg
adcl
push
jmp
cmc
ss
xor
xor
aam
adc
mov
int3
push
int
jg
lret
aaa
nop
jle
mov
or
rclb
ds
pop
cwtl
cwtl
pop
aad
ss
cmp
mov
mov
push
mov
or
cli
sti
lret
das
mov
xchg
add
arpl
lods
xchg
movsb
lock
insl
test
jbe
dec
out
dec
cli
aad
orb
jno
imulb
mov
adc
push
cs
fnstsw
mov
mov
stos
jnp
or
leave
mov
mov
add
mov
push
fs
cli
loopne
leave
in
daa
outsl
and
and
xchg
cmpsl
push
xchg
cld
xchg
fcmovne
xchg
inc
aam
mov
jae
loopne
mov
mov
shrb
push
mov
rorb
jns
in
jbe
sarb
out
decl
mov
jno
inc
cmpb
inc
pop
ljmp
cltd
or
out
aam
sub
addr16
insb
andb
adc
add
push
add
or
test
in
sbb
int
sbb
loop
insl
adc
jb
or
or
int
pop
jns
sahf
or
mov
cmpsl
adc
fildl
jo
lret
outsb
push
js
push
into
stc
adc
sbbb
inc
scas
adc
mov
stos
push
and
sub
shlb
mov
stos
sbb
nop
cltd
repnz
fwait
aam
ss
fwait
pop
sbb
mov
or
push
pop
into
mov
movsb
sub
add
ja
push
lea
lods
jle
or
mov
icebp
lods
loop
cmp
rcrl
js
lds
mov
das
movsl
xchg
ja
and
xchg
aas
dec
stos
push
xchg
sub
lock
bswap
cltd
sbb
ret
or
jnp
mov
add
mov
adc
in
sub
shl
pop
lods
pop
lods
adc
ret
fcoms
cmp
pop
cltd
push
jl
cmp
sar
cmp
pop
call
addr16
daa
fs
jnp
xchg
inc
mov
inc
sbb
insb
pop
jo
movsl
mov
sbb
cld
pushf
fsubl
stos
pop
inc
and
mov
andl
fiaddl
add
xchg
xchg
and
or
inc
mov
mov
daa
add
sub
or
push
pusha
xchg
jb
loop
lahf
push
in
or
cmpsl
adc
inc
xorl
pushl
push
adcb
loopne
out
enter
call
addr16
out
pop
das
xor
pushf
sarl
cltd
add
fisttps
pushf
int3
mov
mov
ljmp
fbld
bound
xor
xor
sahf
mov
xor
popf
insb
xchg
mov
jle
mov
sbb
pop
rcrl
jnp
cmp
jns
cmp
shrb
scas
push
in
and
mull
sbbb
sub
lods
movsb
xorb
jp
mov
sbb
js
xor
mov
sbb
xchg
pop
xchg
fisttpl
inc
sub
pop
or
es
dec
scas
pop
shll
sub
aaa
sbb
test
popa
loop
call
lret
hlt
push
and
xchg
inc
ret
das
mov
aam
dec
cmp
mov
std
lret
test
adc
imul
adcl
sbb
fisubrs
lock
push
les
fdivrp
push
stc
jecxz
popa
orl
ljmp
push
aas
jmp
cltd
shl
cltd
into
mov
fwait
xchg
inc
pop
or
mov
mov
cmp
ljmp
test
push
mov
cs
out
aas
jge
jp
test
mov
xchg
inc
mov
call
xchg
int3
pop
movsb
js
out
cmp
pop
and
int3
lds
hlt
outsl
mov
pop
mov
fmull
mov
xorb
shll
inc
stos
mov
pop
in
scas
div
sbb
mov
inc
popa
pcmpeqd
mov
clc
sub
add
call
lret
mov
adc
dec
dec
push
xchg
shrl
adc
push
mov
lahf
dec
push
dec
xor
fstpt
add
scas
jbe
pop
xor
cmp
aas
sbb
adc
in
mov
push
adc
fsubl
mov
xor
nop
mov
call
mov
out
pop
imul
mov
push
jl
mov
sbb
fstpt
fs
imul
adc
inc
push
setle
movsb
idiv
mov
sarl
mov
shll
leave
das
test
or
adc
addr16
push
subl
scas
loopne
sbb
push
fucomi
cmp
fstpl
popa
push
mov
cmpsb
fwait
mov
push
cmpsl
shll
out
pop
adc
pop
popa
mov
pop
sbb
or
dec
call
or
into
testl
gs
jmp
in
xchg
mov
mov
jg
leave
or
incl
icebp
out
jne
scas
gs
out
stos
or
or
or
fs
leave
pop
push
or
movsl
pop
test
test
dec
add
lods
test
stos
enter
xlat
pop
ljmp
inc
mov
and
fdivs
xchg
mov
lcall
mov
out
pop
add
cmp
add
adc
ljmp
xchg
test
sbb
jmp
and
bound
mov
call
xchg
xchg
outsb
inc
pop
xchg
stc
mov
testb
jecxz
test
pop
or
call
popa
dec
daa
mov
pop
sub
pop
pop
inc
xor
pushaw
in
aad
ss
mov
bound
push
xor
imul
subl
push
fisttpl
repz
setb
mov
stos
lgs
cmp
adc
test
dec
test
addl
scas
cwtl
xchg
addb
jno
test
xchg
pop
push
scas
fistl
xchg
mov
sbb
stos
stos
fsub
push
push
mov
jg
iret
pop
shlb
fistpl
xor
add
cmc
or
lret
adc
and
mov
shll
cmp
and
mov
sub
mov
lret
inc
mov
aaa
mov
imul
jns
leave
cmp
negl
adc
inc
mov
or
clc
int
fucom
js
sub
popf
cmp
mov
les
stos
mov
dec
inc
pop
insb
mov
push
cmp
hlt
pop
pop
les
xchg
xor
imul
cmpsb
inc
sbb
iret
cltd
sbbb
mov
pop
clc
adc
andb
jae
pusha
sbb
mov
or
ret
pusha
repnz
inc
bound
mov
icebp
jle
mov
xchg
or
ficoms
into
jge
mov
add
shrl
pop
dec
push
gs
push
rorb
ficoml
outsb
lahf
mov
fs
pusha
or
fimull
int
jl
in
pop
xor
int3
popf
push
cli
add
pop
xor
mov
or
cmp
sub
push
push
out
inc
mov
adc
sahf
pop
mov
xor
stos
push
xor
dec
sbb
inc
mov
lahf
add
andl
mov
mov
cmpsl
in
dec
jl
outsb
nop
daa
inc
jg
int3
rorl
out
and
and
into
inc
insl
dec
sub
pop
imul
rcl
nop
loopne
pushf
push
fxch
icebp
stos
inc
enter
xchg
xchg
leave
pop
gs
fbld
xor
mov
sarl
xorb
mov
out
movsl
adc
fcoml
mov
aam
loope
rcll
ja
mov
pop
mov
or
cld
xchg
add
jp
filds
inc
push
js
outsb
jnp
lret
scas
adc
dec
mov
xchg
dec
ljmp
mov
and
sub
mov
sar
cltd
sub
add
xor
js
dec
test
dec
pop
pop
in
pop
pusha
mov
call
xchg
je
test
int3
push
and
mov
es
or
inc
jo
jnp
mov
cld
aas
adc
add
shrl
ljmp
lods
adc
and
idivl
mov
inc
jecxz
subl
xor
icebp
lcall
cld
in
ret
jecxz
shll
iret
dec
mov
mov
push
jb
test
divl
out
xor
or
push
sbb
std
sbb
jge
lret
xor
and
dec
pop
mov
addl
sbb
leave
inc
daa
push
xchg
xchg
ficompl
sub
pusha
and
ret
jns
sbb
das
pusha
dec
dec
inc
xorl
mov
bound
jge
xlat
icebp
ds
mov
and
pop
sti
pop
dec
ss
sbb
out
shl
cwtl
insl
fistl
lret
cltd
lea
xor
imul
mov
int3
jne
repz
lea
xchg
xor
ret
fildll
paddusw
mov
adc
pop
shrb
mov
dec
push
mov
dec
add
xchg
cmpsl
imull
mov
xlat
rolb
inc
fcmovne
add
and
or
les
inc
mov
arpl
jl
aas
and
xchg
lds
add
jae
jb
lods
insb
stos
sbb
inc
lcall
sti
mov
rol
adc
inc
lret
cmp
mov
push
dec
clc
adc
int
push
sbb
or
jnp
pop
mov
pop
mov
les
dec
subb
mov
aad
lea
pop
insb
jno
nop
jle
pop
or
mov
das
loop
pusha
push
xor
inc
nop
pop
addl
daa
ret
adc
jnp
adc
jmp
pop
dec
xchg
mov
sub
aas
cmp
std
out
in
popa
sub
xor
inc
in
mov
pusha
lods
inc
push
aas
mov
jmp
lcall
sahf
jge
rorl
loop
sbb
cltd
mov
push
sbb
xor
imul
sbb
divb
inc
xor
inc
pop
or
int
jp
adc
jns
add
aaa
aam
fdivs
push
cmp
in
xor
pop
lods
lods
std
fwait
mov
jno
add
jbe
test
cmp
push
mov
lahf
les
or
mov
iret
out
rcll
pop
lcall
jge
pop
dec
ret
mov
push
jo
xchg
pushf
dec
bnd
ret
inc
not
dec
push
out
popa
popa
aad
add
sbb
iret
in
and
xchg
xor
jb
into
movsl
or
cmpsl
fcom
cmc
add
mov
aaa
xor
jo
in
xchg
mov
push
movsl
mov
inc
shll
xchg
sub
and
popf
jecxz
fdivr
cltd
inc
jmp
pop
or
adc
mov
mov
xchg
xor
add
add
loopne
jae
sub
sahf
je
inc
add
imul
sub
and
cmpsl
fisttps
leave
daa
jmp
dec
fcomp
fnstcw
repz
mov
je
cmp
xorl
aad
inc
or
mov
clc
adc
addr16
adc
mov
pop
out
and
mov
out
mov
push
jle
into
int3
roll
cmpl
stos
and
outsl
ljmp
sarb
xchg
cmp
clc
xorl
mov
faddl
fmulp
mov
dec
mov
mov
sbb
jae
add
orb
mov
push
pop
jp
rcrb
pop
jmp
and
jl
lahf
push
mov
cmp
lret
and
fisttpll
cmp
sbb
aam
jg
adc
mov
scas
daa
outsl
test
shlb
pop
ret
jbe
pop
add
test
sub
out
pop
mov
or
pushf
mov
xlat
imul
test
sub
jge
ja
scas
pop
gs
inc
dec
ret
mov
push
hlt
clc
fisubrl
lret
flds
adc
adc
sub
push
adc
scas
movsb
add
movsl
repz
mov
ret
mov
dec
cld
stos
cltd
xor
xor
cli
lods
mov
dec
das
sbb
in
adc
mov
sub
mov
sbbl
je
mov
das
jnp
decb
cmp
dec
add
xchg
gs
adc
mov
ficompl
rcrl
lret
jmp
aad
pause
popa
sbb
jae
gs
inc
cli
dec
xchg
cmp
rcl
cld
cmp
push
call
aas
jne
pop
cli
pop
mov
daa
movsl
roll
cltd
mov
inc
movsb
les
ds
mov
cmp
bound
inc
mov
loope
arpl
cmp
adc
or
push
shl
add
inc
sub
mov
add
add
adc
dec
add
shrb
jp
mov
call
into
inc
and
dec
cld
cmp
rorl
or
fsubl
and
xor
mov
das
push
mov
mov
scas
test
inc
dec
daa
xor
mov
pusha
loop
dec
sbb
popf
arpl
or
mov
push
mov
sbb
cld
insl
mov
mov
stc
stos
xor
push
test
and
repz
ret
mov
lock
loope
fistl
stc
mov
mov
test
add
sub
add
outsb
dec
ja
int3
jg
dec
fcmovne
push
mov
xchg
cmp
ljmp
xorl
addr16
cwtl
adc
xchg
pop
dec
jne
add
dec
out
push
outsb
fmuls
hlt
lods
inc
fmull
mov
and
pop
decl
test
xor
xor
call
jge
push
lahf
jmp
or
and
xchg
into
leave
out
in
and
mov
fs
addr16
gs
movsl
ret
dec
adc
pop
out
or
sub
out
mov
mov
ret
pop
dec
mov
flds
fstpt
gs
hlt
pop
fwait
pop
sarb
mov
in
add
cmp
add
mov
insb
xchg
pop
dec
fmul
lock
aaa
stos
adc
jne
int
enter
pop
fwait
add
jo
pushf
lods
dec
sbb
mov
adcl
ss
fwait
daa
mov
or
jo
or
push
mov
mov
push
sahf
sub
leave
lods
rol
lods
xchg
xchg
stc
or
dec
mov
mov
fimull
fsubrs
cltd
shrl
popf
ret
push
push
pusha
negb
insl
sahf
data16
mov
mov
roll
ja
mov
fdivrl
add
inc
or
fsubl
fidivl
inc
nop
and
xlat
imul
fwait
ja
jmp
mov
add
sbb
adc
lea
mov
push
ret
push
push
or
adc
mov
les
lock
jecxz
addr16
jl
inc
leave
jmp
shlb
jo
pop
xor
mov
push
adc
repnz
mov
sbb
mov
xor
in
int
pop
hlt
fwait
js
sti
leave
fwait
mov
jecxz
jns
xchg
mov
cwtl
fnstenv
mov
imul
aam
add
xchg
std
mov
push
lods
pop
jg
adc
or
add
test
stos
lods
lret
loopne
dec
lret
and
sub
dec
pop
outsb
mov
mov
ret
push
or
lods
int
loope
pop
out
inc
ror
aad
mov
frstor
daa
and
popf
cmpsl
pop
sbb
incl
aam
loopne
shl
inc
jo
ficompl
lret
std
jg
push
les
cmp
xlat
and
pop
vmovss
sbb
mov
daa
shlb
cmp
outsl
sub
mov
dec
nop
aam
mov
fsubrs
mov
or
lea
stc
sub
pop
rorb
lret
movsb
dec
cmp
sub
in
push
loop
jmp
jnp
adc
cmpsl
cli
sbb
push
jg
shll
ss
push
adc
stc
sbb
jge
mov
add
and
xor
outsl
jecxz
and
mov
mov
dec
lahf
into
mov
xlat
sbb
movsl
adc
decl
iret
xchg
cmp
std
std
pushf
dec
fdivrl
js
int
fwait
mov
mov
add
loope
push
aaa
sbb
pop
push
lods
cmpsl
cmp
add
call
scas
imul
mov
dec
mov
mov
cmp
sbb
les
dec
xor
mov
int
hlt
push
mov
paddw
stos
cmpps
xchg
push
into
jno
es
shll
nop
xchg
sbb
cmp
stc
sbb
push
mov
mov
in
mov
sbb
stc
icebp
lcall
push
loop
call
loopne
add
ret
mov
mov
jmp
cltd
insb
fwait
xchg
mov
aas
mov
stos
sbb
adc
orb
out
pop
or
aam
push
or
jle
out
aam
scas
xchg
jge
mov
dec
pop
lcall
mov
cs
xor
mov
call
ficoms
push
andl
mov
or
push
fs
arpl
jmp
fstps
xor
mov
fidivrl
pop
cmp
sub
fnstsw
outsb
filds
cs
pop
imul
subb
adcl
push
sbb
bound
scas
jo
mov
dec
xchg
and
and
movsb
inc
inc
dec
adc
or
lret
sub
outsl
pop
mov
push
pop
sub
into
or
sbb
jle
stos
jno
lret
nop
push
xchg
adc
ret
add
scas
pop
lea
xor
ljmp
add
dec
jb
insb
and
test
mov
leave
shll
pop
and
mov
inc
dec
scas
pop
mov
shll
sub
aas
cwtl
iret
pop
mov
lahf
xor
xchg
adc
les
popa
test
decl
in
stos
shl
cmp
push
mov
xchg
sbb
gs
leave
or
pop
outsb
cld
pop
int
xchg
imul
and
aam
hlt
and
and
adc
mov
push
dec
fists
in
out
or
orb
scas
dec
les
fistl
mov
pop
push
add
add
cmc
int3
out
jmp
push
ljmp
in
pusha
cltd
ja
sbbl
lods
pop
adc
and
and
push
es
pop
sbbb
loop
and
mov
xor
lea
les
pop
xor
push
aam
aaa
sahf
out
ficoms
inc
mov
aad
mov
xchg
xor
cmpsl
mov
lods
dec
sbb
sub
out
enter
pop
test
mov
outsb
pop
cmp
mov
aas
decl
lea
sub
xor
js
dec
scas
mov
faddl
loopne
rorl
ret
mov
lods
ret
sbb
or
stc
push
mov
jmp
outsl
mov
and
cmc
add
cmpsb
jp
or
add
imul
rol
push
jp
sahf
inc
fildll
call
mov
inc
push
push
loopne
scas
cmpsb
sahf
sbb
shrb
mov
and
xchg
pop
roll
mov
jmp
or
add
sub
mov
sub
repz
int3
orl
movsl
rcr
mov
and
inc
pushf
xchg
iret
push
je
sbb
je
rclb
pusha
jp
gs
jns
and
movsl
jbe
aam
mov
lret
xor
pop
pop
xchg
sub
inc
inc
call
mov
sub
mov
js
lahf
les
imul
pop
shl
mov
lret
shll
jb
push
out
add
sub
out
xchg
ret
jnp
lods
adc
lods
jecxz
push
adc
and
popf
xor
sarl
jbe
cld
pop
scas
jo
xchg
insb
xor
jp
cli
lahf
test
cmp
cmp
adc
daa
dec
cli
rcrb
xchg
dec
insb
inc
and
ss
xor
sbb
les
test
xchg
cmp
repz
xor
jle
mov
and
sbb
fwait
sbb
enter
jnp
or
scas
cmp
xchg
sbb
nop
mov
inc
shlb
dec
in
or
icebp
mov
imul
out
ds
cltd
js
in
out
adc
adc
ja
hlt
push
jecxz
or
aad
mov
rclw
cmpsl
jbe
ja
in
int3
fcomip
pop
jmp
add
and
in
fsubrs
nop
dec
mov
repz
push
enter
pop
mov
pop
ds
imul
outsb
in
cmp
stc
jl
jno
call
jl
xchg
out
cmp
adc
in
or
jmp
jbe
sbb
filds
hlt
xchg
jmp
inc
int3
rcrb
js
dec
adc
scas
les
inc
add
cltd
jo
add
in
mov
pop
aad
jg
lahf
xchg
adcl
lahf
pop
arpl
dec
add
and
lock
adc
jp
add
lret
jnp
roll
icebp
jne
pop
xchg
jnp
daa
or
enter
in
fadds
cmpsb
loop
pop
sbb
mov
ret
inc
bound
add
xchg
out
test
std
addb
dec
dec
jo
in
pop
sub
adc
jno
adcl
adc
pop
fbld
enter
xor
jo
mov
mov
aam
frstor
sbb
or
pushf
stc
sbbb
mov
mov
or
sbb
bound
sbb
or
daa
inc
loop
loop
mov
test
and
push
movsb
xor
jne
ja
aam
movsl
inc
cmp
std
add
cld
mov
in
pop
sub
xor
mov
shr
xor
or
inc
add
inc
mov
popf
cmc
icebp
mov
call
imul
loopne
lods
pop
shll
sbb
cld
push
xor
jecxz
sub
shlb
scas
jg
repnz
push
sbb
je
fstpl
xor
movsl
jo
xchg
scas
daa
sub
mov
out
fsub
ds
das
xor
stos
inc
and
jecxz
xchg
arpl
je
cmp
daa
add
int3
dec
mov
xor
sbb
xor
pop
jnp
movsl
and
frstor
mov
cmp
loop
fcoml
outsl
das
sbb
dec
pandn
leave
das
fdivrs
je
popa
xlat
insb
in
pop
mov
push
jo
sarl
aam
mov
sbb
sbb
xlat
cli
xor
lret
jmp
dec
loop
cmp
jae
test
aam
inc
mov
xor
sbb
xchg
and
shlb
push
inc
inc
push
int
dec
dec
xchg
cltd
and
pop
lods
xchg
and
or
mov
int3
inc
xor
inc
fldl
nop
int
and
jbe
cld
add
inc
out
dec
jecxz
cmc
jmp
mov
aad
cmp
int
jo
aam
pop
mov
cmpsl
repnz
daa
dec
mov
movsl
mov
loop
inc
xorl
xchg
sti
insb
js
pop
mov
add
pop
mov
fcom
jbe
outsb
lea
out
push
sahf
into
scas
jbe
call
xchg
mov
xor
adc
adc
and
fimull
js
imul
lds
jbe
aaa
pop
adcb
nop
cmp
and
and
fs
or
in
mov
lcall
sahf
adc
pop
mov
mov
test
add
js
mov
jns
int3
push
mov
xchg
xchg
loope
mov
push
jno
cmp
scas
cmp
cmpsb
js
mov
cld
aad
push
cmp
and
mov
inc
movsl
mov
rolb
cmovp
es
add
and
mov
or
andl
call
jns
lcall
add
sbb
xchg
cmc
mov
cltd
lret
pop
push
fists
xor
lods
xchg
sbb
pop
mov
in
mov
inc
mov
pop
lretw
mov
cld
out
fstpl
xchg
popa
xorb
mov
cwtl
pop
and
pop
jge
adc
jne
pop
adcl
popf
dec
add
dec
js
test
jno
jae
dec
mov
arpl
sub
or
add
xor
xor
and
fmull
rcl
jl
mov
ret
inc
dec
xchg
xchg
mov
in
add
fistpll
aaa
shlb
gs
adc
jge
pop
push
je
mov
enter
adc
stc
mov
sahf
dec
insl
xchg
sbb
movsb
icebp
push
mov
inc
test
sub
in
clc
cmp
leave
jno
les
outsb
pusha
sahf
int
dec
enter
cmc
mov
or
ror
xchg
enter
aam
push
pop
jnp
enter
ret
cwtl
ja
lahf
dec
pop
mov
and
cmpsl
inc
push
xchg
out
or
in
or
in
mov
pop
out
cmc
test
adc
xor
std
add
mov
fcoml
and
xchg
data16
push
movsl
fnstsw
xlat
sbb
sbb
movsl
jae
lods
sbb
fcoms
stos
repz
cmp
jne
test
test
pop
mov
inc
xor
sbb
mov
inc
or
faddl
mov
cmp
call
push
and
lret
jg
jecxz
mov
or
scas
jns
xchg
jo
xchg
adc
add
mov
xor
xchg
mov
sub
push
cmp
push
mov
mov
fwait
scas
push
out
fnstcw
mov
jge
mov
cmc
add
inc
pop
inc
xchg
adc
std
mov
lods
movsl
jle
negl
je
sbb
jns
inc
dec
mov
jo
mov
aad
shll
jns
pop
test
or
add
pop
xchg
cld
repnz
push
std
xor
cmpsb
insb
lods
jb
call
pop
enter
or
mov
dec
es
imul
or
hlt
dec
dec
jle
adc
hlt
or
pop
xchg
pop
push
add
hlt
dec
dec
inc
popf
loope
sub
dec
adc
or
add
adc
out
icebp
xor
movsb
subb
stos
adc
cmp
aas
int3
data16
and
sub
jo
callw
mov
scas
mov
push
mov
push
gs
lcall
xor
fisttps
and
mov
push
rorl
sbb
jmp
imul
cmpsl
inc
cmp
aad
sti
cmp
lods
pop
repz
mov
sub
mov
mov
add
mov
in
inc
scas
mov
fldcw
dec
push
dec
inc
enter
jo
out
pop
lods
push
shl
ja
data16
jbe
imul
mov
jmp
hlt
sub
jne
aad
or
adcl
add
mov
out
iret
movsb
roll
sbb
jno
jne
dec
outsb
testb
aad
dec
adc
cmpsl
mov
lods
add
adc
xchg
push
xchg
repz
jmp
push
jne
adc
fidivrl
sbb
cmpb
mov
xor
jmp
jle
fisttpll
sub
les
and
pop
push
jne
adc
scas
adc
pop
popf
out
push
lds
test
call
aad
leave
popf
andb
les
je
enter
cwtl
or
mov
sub
mov
mov
add
sub
jl
pushl
cmc
cmp
jmp
jp
xor
les
or
jo
mov
cmp
xor
sub
das
jo
cmp
cs
jmp
pop
bound
mov
mov
xchg
adc
adc
push
inc
xchg
jnp
mov
lcall
add
or
leave
stos
mov
jo
jo
shrl
sarl
mov
jbe
sbb
pop
jbe
mov
pop
sahf
loopne
mov
jae
xor
cmp
iret
add
dec
in
mov
jge
cmp
ljmp
test
adc
dec
aaa
add
mov
fadd
rolb
iret
lret
rcl
xorb
push
je
arpl
int3
mov
add
outsl
stos
cmp
addr16
loop
cmpl
int
ficoms
int
loopne
xchg
dec
xchg
ja
movsb
test
push
or
int3
arpl
mov
sbb
mov
js
mov
scas
jns
sti
mov
xor
xor
aaa
incb
shll
test
int3
add
dec
adc
adc
rcll
push
push
mov
sbb
cmpl
aam
fs
int3
dec
cmp
ja
push
rcll
pushl
and
loope
push
rcll
xchg
mov
mov
imul
mov
aam
cli
das
pop
leave
mov
dec
xchg
iret
pop
pop
arpl
mov
pushf
aam
testl
je
push
lock
aam
ja
push
cmp
cmpb
jbe
jno
adc
jg
inc
lods
jnp
in
cld
add
jae
mov
test
shll
stc
cmp
leave
xchg
mov
sub
or
nop
outsl
popf
test
jno
test
leave
or
and
mov
dec
fs
das
or
testl
sbb
cli
les
imul
ja
fwait
mov
push
xchg
pop
fistps
mov
dec
sarl
mov
adc
sub
mov
push
lods
not
sete
xchg
ror
call
cwtl
clc
movzbw
movzbl
pusha
shr
setle
rcl
pusha
imul
cmc
btc
lea
shl
xor
rcr
mov
lea
bsf
rcr
btr
xchg
ror
mov
shr
pop
pushf
mov
movw
cmp
call
rcl
call
adc
xor
fwait
add
daa
xchg
stos
add
aad
std
fiaddl
push
lret
inc
mov
aam
test
cmp
insb
leave
pop
cmc
fmuls
mov
mov
pushf
insl
sub
ret
loope
imul
outsl
cwtl
lea
scas
xchg
mov
mov
mov
insl
icebp
cwtl
mov
ljmp
stos
aam
sbb
sbb
les
push
xlat
rcr
cmp
mov
mov
int
icebp
push
mov
or
sbb
mov
xchg
stc
testl
sarb
out
xor
stos
mov
mov
insl
mov
inc
inc
imull
stos
pop
cwtl
mov
mov
and
mov
jae
mov
mov
add
pop
mov
stos
arpl
adc
dec
adc
push
pop
paddw
or
leave
push
int
loopne
movb
aad
jge
pop
jae
fs
push
test
cmp
mov
inc
ret
pop
ret
or
xlat
mov
test
lret
inc
and
inc
jnp
or
and
in
aam
add
mov
pavgb
hlt
add
in
cmp
pop
scas
mov
dec
std
lods
jno
fs
les
ja
add
sub
gs
push
mov
xor
out
cmp
or
add
add
ja
outsl
arpl
xor
fs
insb
add
add
aas
nop
add
jg
aaa
push
xchg
xchg
push
pushf
add
fisttps
mov
push
fmuls
xor
movsb
lea
arpl
cwtl
fstpl
dec
int3
jo
popa
pushf
imul
jecxz
lahf
mov
jmp
and
pop
sbb
mov
call
inc
cmpsl
push
arpl
fsubrl
push
sbb
loopne
insl
in
dec
mov
ljmp
fcompl
mov
or
lea
jb
pushf
mov
movb
lea
jmp
mov
lea
jae
mov
xchg
cwtl
mov
call
or
cltd
pop
adc
jns
add
cmp
fcomps
clc
jb
popa
sub
fstps
in
test
pop
adc
add
add
sbb
mov
mov
imull
rolb
cmp
dec
data16
popa
fstpl
adc
lods
in
ds
sbb
sti
push
cmpsb
xor
adc
mov
xor
pop
mull
jae
or
js
mov
cli
push
or
call
in
mov
adc
xlat
decb
fs
xor
mov
push
arpl
and
test
add
lea
call
jmp
shl
cmp
jno
push
data16
je
lock
jp
outsb
lock
stc
pushf
jb
adc
lock
jl
push
push
jnp
adc
sub
sbb
imul
pop
pop
ja
aad
orb
mov
adcb
push
xchg
cltd
pushf
pop
dec
push
into
mov
push
xor
les
jp
adc
aad
add
mov
jnp
pop
jl
xlat
adc
xlat
fwait
popl
mov
pushf
pusha
lea
jb
shld
mov
cmc
clc
push
sub
pusha
mov
mov
stos
push
lea
jmp
icebp
or
ret
les
jle
je
mov
mov
or
pop
into
lahf
mov
and
mov
rcl
push
cmpsl
test
mov
movsb
shlb
js
xchg
fwait
arpl
mov
loopne
ror
adc
vpunpcklwd
mov
sbb
call
fstl
xchg
mov
hlt
out
mov
adc
mov
call
push
lea
jo
mov
pusha
lea
jmp
sar
inc
cld
scas
gs
dec
cmc
push
rcl
xchg
adc
sbb
sbb
pop
or
dec
sub
stos
rclb
cld
int3
jmp
xlat
ret
inc
xchg
inc
add
xor
in
repnz
sub
mov
loop
cmp
cltd
stc
xchg
inc
fldl2t
imul
mov
in
xchg
push
call
dec
mov
loopne
mov
ret
xchg
sarl
ficomps
dec
add
sub
in
scas
cs
and
jns
inc
movsb
add
cmp
push
pusha
jmp
jae
sbb
fnstcw
out
ss
in
ja
aad
insb
mov
add
addr16
and
fldl
jmp
popa
sahf
ficompl
scas
ja
cmp
ds
or
mov
cmp
adc
xchg
cmp
mov
or
adc
stos
fcomp
cwtl
fcmove
inc
pop
push
adc
shrl
and
out
and
sahf
or
out
sub
aas
lahf
outsb
in
loop
xor
leave
les
jne
add
cltd
pusha
test
inc
add
cmp
add
movzbw
movb
mov
cmc
cmp
mov
add
movw
pushf
pushl
mov
call
xchg
lahf
pusha
movl
pushf
jmp
dec
scas
mov
adc
shlb
cmc
idivb
inc
dec
sar
or
mov
mov
mov
mov
es
inc
xor
or
sbb
ja
sbb
add
popf
fmull
dec
xchg
inc
push
idiv
inc
xchg
fwait
divl
dec
pop
xor
loope
test
arpl
js
pop
pop
imul
jae
dec
popf
xchg
in
jno
cli
jmp
or
add
push
mov
sti
enter
xlat
pushf
pop
mov
out
outsl
cmp
cli
dec
sub
clc
cmp
jmp
push
dec
mov
scas
je
cmp
dec
leave
adc
sahf
and
scas
jne
sub
jns
or
jo
sub
lret
pop
iret
mov
cs
andl
adc
or
stos
dec
aas
inc
or
ret
shlb
scas
rolb
adc
dec
sbb
or
mov
into
lods
repz
mov
mov
or
in
xor
inc
adc
xor
cmp
add
int
adc
popf
sahf
out
sub
and
mov
pushf
cmc
rol
test
not
bt
neg
cmc
mov
bt
test
add
pushl
test
push
movb
lea
jne
pusha
movb
call
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
xor
mov
add
mov
push
or
daa
push
dec
movsbw
lea
push
aaa
sub
mov
call
mov
insb
repz
mov
roll
or
and
mov
sbb
dec
pop
movb
int3
popf
pop
and
dec
pop
sbb
sbb
mov
cmpb
jne
shll
shll
push
lods
ror
inc
xor
add
mov
pop
ret
lret
out
adc
add
add
inc
cmp
add
or
add
sub
add
add
add
adc
add
add
movsb
sbb
add
add
add
test
add
add
dec
adc
add
add
rol
add
add
add
ficompl
add
add
cmc
push
add
add
add
adc
add
add
xchg
dec
sbb
add
add
mov
sbb
sti
and
sbb
ljmp
add
jecxz
add
add
add
sub
popa
orb
jge
xchg
movsb
jmp
jmp
imul
mov
inc
push
dec
imul
and
or
addb
jbe
ficompl
fcomps
xchg
jge
sub
sbb
add
in
jecxz
jns
shlb
adcb
out
and
sti
jecxz
out
pop
jns
stos
jae
ds
fwait
mov
and
into
stos
add
pushf
cld
add
or
ror
push
fcmove
add
and
stos
dec
ret
mov
jmp
inc
or
into
xchg
sarl
sbb
hlt
dec
xchg
lret
lcall
xchg
and
lock
ffree
cmp
mov
movsl
mov
movsl
aas
scas
pop
inc
test
outsl
sub
jno
cwtl
add
or
jecxz
or
push
and
cmp
add
bound
pop
adc
xchg
aam
movsb
insl
xor
jns
testl
cwtl
test
bt
shl
stc
movb
add
cmc
bt
stc
bt
sub
jmp
fadds
dec
jle
and
test
cwtl
push
sbb
pop
adc
enter
xor
sub
sarb
test
cs
xor
inc
jnp
sub
and
cld
into
push
lahf
inc
inc
push
jns
jp
addr16
popf
lret
lahf
xlat
xor
cmpsb
add
clc
stos
and
mov
ja
insl
scas
fs
fistpll
inc
cmp
pop
aad
imul
cmp
aaa
or
pop
rcr
add
ja
out
out
sub
stc
mov
add
movl
pusha
pushl
jmp
lea
jb
call
movw
jmp
clc
test
jmp
pusha
jmp
pushl
popl
pusha
mov
movb
pushl
ret
test
add
mov
sub
lea
jl
jne
xchg
cmc
clc
mov
stc
mov
rcr
xor
adc
sbb
not
mov
btc
setle
dec
mov
btc
sbb
pusha
rcr
mov
and
btr
shr
mov
pushf
mov
lea
rcl
movzbw
sub
mov
pop
inc
test
and
sub
stc
shld
mov
add
neg
shrd
rcl
bt
mov
movzbl
btc
test
sub
bt
shrd
and
movzbw
rol
mov
cmp
shl
cmc
add
jmp
adcl
mov
not
push
ficomps
loope
cmpsb
mov
js
scas
iret
sub
cmp
repnz
repnz
push
mov
test
lds
pop
fists
xor
inc
jbe
imul
jnp
push
sub
stos
pop
xor
addr16
lds
sub
jb
pushf
pushf
pop
push
in
xchg
jecxz
orl
mov
xor
jp
roll
int3
add
std
add
add
cmp
ss
into
pop
sbb
pop
pusha
aad
mov
cmpsb
push
mov
inc
adc
xor
out
das
mov
insb
es
cmp
mov
fsubl
xchg
je
test
divb
ss
dec
inc
mov
cmp
cmc
out
out
jb
sub
rolb
daa
pushf
pop
inc
mov
jg
xchg
in
xchg
mov
fwait
add
mov
push
sub
jmp
mov
rorb
xchg
bndldx
ret
sbb
imul
loope
movsb
in
bt
test
push
cmp
mov
mov
jmp
fimull
test
lods
fidivrs
dec
xchg
pop
cwtl
sbb
inc
adc
mov
stos
xchg
outsb
int
cli
iret
in
clc
lcall
ljmp
sarb
pop
and
and
cmp
dec
int3
cs
sbb
sbb
aad
xor
or
push
cmp
mov
hlt
sti
outsl
fs
xchg
inc
je
test
jmp
cld
or
xor
hlt
mov
or
fnstcw
add
add
inc
fs
jae
push
outsl
imul
jb
jbe
insb
gs
call
lret
idivb
jg
xor
lret
mov
int
lcall
add
cmp
mov
aad
lahf
testb
repnz
mov
mov
gs
in
add
std
clc
xlat
lret
or
hlt
jle
pushf
adc
and
pop
xchg
dec
sub
js
adc
mov
lds
inc
cmp
lret
sarb
dec
cmovns
add
inc
pop
fistl
and
or
in
mov
cmp
ja
jo
js
cmp
not
mov
aaa
and
ret
add
mul
jp
divl
das
cli
jecxz
dec
into
dec
or
mov
push
nop
lret
fidivrl
add
sets
jmp
mov
pop
dec
out
popf
xchg
mov
rcrb
push
fcomps
jnp
scas
push
adc
in
out
xchg
loop
daa
aas
cmp
aas
cmp
jno
add
leave
jae
push
mov
gs
dec
dec
nop
mov
jne
sbb
repz
sahf
fmull
ljmp
in
outsl
push
push
jo
aad
cmp
add
push
repz
cmc
insb
adc
rclb
cli
js
mov
xor
jnp
mov
scas
add
and
or
push
mov
dec
aad
xchg
fcomps
imul
aaa
cwtl
mov
bound
clc
mov
push
push
dec
in
dec
mov
sub
pusha
ds
mov
faddl
pop
mov
mov
cmc
nop
and
cltd
test
popa
mov
xor
pop
jns
sbb
sub
adc
fmull
xchg
add
testl
cmp
shlb
inc
outsb
int
sahf
mov
jecxz
jb
xlat
or
cltd
adc
repnz
xor
in
lods
or
mov
loopne
xlat
add
add
pop
fisubrs
stos
imul
sub
hlt
dec
enter
jp
inc
dec
out
sub
push
adc
movsl
scas
rorb
and
sub
ds
sbb
cmp
xor
jl
cmp
das
jg
jo
jns
data16
lret
push
fs
ret
jge
notl
jle
adc
add
pop
push
mov
cmp
xchg
pop
ja
in
sahf
sub
out
jg
add
mov
cltd
adc
add
sbb
fwait
xor
nop
in
sub
sbb
jo
repz
out
pop
jle
out
mov
mov
push
adc
movsb
pusha
sbb
aas
popl
push
cld
xchg
push
in
dec
push
aaa
out
sub
jle
or
movsl
push
xchg
mov
pop
push
sbb
or
and
xor
add
xchg
xchg
ljmp
enter
pusha
xchg
sgdtl
inc
or
or
mov
push
pushf
xchg
pop
pop
jmp
fimull
jne
adc
dec
dec
fdivs
sub
aas
cmp
and
xor
fdivs
scas
sbb
mov
add
fdiv
imull
jle
jl
ja
sbb
mov
adc
shrl
ljmp
ljmp
mov
mov
xchg
pushf
mov
in
loop
mov
dec
lds
out
mov
pushf
inc
dec
test
or
dec
push
push
pop
cmp
mov
shr
outsl
imul
lods
inc
std
cld
movl
std
or
xor
add
sbb
sbb
push
test
jl
add
fs
jns
js
sub
or
out
sub
push
push
jb
in
cmpsl
inc
sbb
and
icebp
ret
mov
pop
xchg
jb
push
mov
out
outsl
pop
int3
sub
aam
cmp
xchg
xchg
mov
aas
xor
nop
and
or
daa
ja
jg
xchg
adc
sbb
xchg
xor
cwtl
mov
into
into
ds
xorb
ret
bound
or
stos
jb
inc
inc
xchg
shlb
mov
dec
cmp
pop
dec
and
fcomps
lods
sbb
xorb
aas
dec
mov
lock
nop
adc
out
aad
adc
or
out
sbb
inc
std
add
jb
ss
cmp
imul
inc
jge
or
sbb
xor
dec
aam
rcll
fcoml
pusha
pop
fisubrs
mov
mov
stos
pop
jnp
fsubr
xor
cmpsl
je
scas
mov
sub
into
mov
fistl
adc
cli
inc
mov
insb
jae
and
fisttps
jmp
xor
adc
pop
and
scas
mov
jg
rolb
stc
shlb
add
sbb
rcrl
pop
ss
or
push
jo
lahf
imul
xor
divb
add
mov
jmp
push
add
inc
add
sbb
jo
jle
sbb
shll
add
mov
insl
aas
mov
xor
push
mov
cld
into
lods
xor
dec
xor
popa
gs
je
insb
lods
push
lock
test
jne
loop
or
clc
in
xchg
sarl
mov
add
adc
cmp
add
addl
pop
lea
sbb
andl
add
adc
out
imulb
cmovo
sub
stos
jmp
movsl
cmpsl
jno
xor
sti
xorl
call
jp
sti
fcomps
xchg
inc
push
out
cld
aad
xchg
mov
insb
push
mov
mov
xchg
es
xor
pop
lds
sbb
inc
cmp
cmp
mov
ret
or
xchg
nop
lret
adc
or
mov
pop
inc
je
jno
jl
jb
lahf
pop
xor
xchg
jb
pop
adc
adc
repnz
sbb
and
push
das
in
push
in
test
push
push
inc
jmp
mov
mov
push
aad
loopne
and
fadds
mov
cmp
pushl
jmp
not
shl
clc
mov
movsbl
bt
movzbw
mov
stc
rcr
shl
xor
sar
mov
mov
add
jmp
xor
arpl
scas
push
cmp
cmpl
adc
rcrb
push
aam
adc
jle
xor
in
jmp
call
bound
sahf
jmp
mov
mov
mov
adc
out
in
or
popa
adc
aas
or
adc
push
negb
orb
cs
and
repz
xchg
dec
lahf
pop
pop
mov
lock
hlt
ds
jp
mov
pushf
mov
inc
sbb
mov
xor
dec
lret
inc
add
aaa
ds
add
jnp
pusha
stc
add
pusha
lea
push
call
mov
push
xor
mov
ss
xchg
das
lock
test
sti
int3
adc
cli
addb
mov
add
xchg
adc
jmp
cmp
fistpll
xchg
mov
imulb
push
insb
enter
sbb
jnp
outsb
dec
mov
popa
push
aaa
lods
pop
mov
xor
inc
ds
imull
mov
mov
xchg
jne
ret
or
lret
bswap
or
cmpsb
add
not
cmc
cmc
jmp
call
push
lea
jae
inc
pop
inc
dec
pop
mov
sbb
cmc
btr
mov
bsr
mov
cmp
pushf
push
mov
pushl
pusha
pushf
lea
jmp
add
out
adc
pop
mov
and
lahf
fwait
cltd
mov
xor
scas
mov
sbb
cld
xorb
pmaddwd
sarl
or
bswap
fcoms
mov
loop
es
xor
jp
in
out
lods
mov
or
mov
sahf
inc
mov
loop
movsb
lcall
xchg
mov
cmp
sbb
push
add
push
push
ljmp
inc
dec
xchg
or
mov
arpl
andl
add
sub
in
frstor
push
stos
xor
jnp
les
or
lret
pop
ds
lock
adc
jb
test
cli
ficoml
push
sbb
and
push
ss
inc
js
push
jbe
sahf
pop
pop
xor
ja
out
rorl
lret
insl
cmp
cmp
adc
adc
add
jmp
repz
xchg
int
loop
mov
lea
inc
inc
mov
jl
mov
test
addr16
jge
adc
mov
mov
out
pop
test
inc
or
mov
pop
movsl
fs
lcall
fdivs
insb
inc
insb
push
mov
xchg
pop
stos
sbb
or
cmp
mov
cwtl
shll
xor
push
scas
jae
inc
mov
mov
adc
pop
lahf
mov
cmc
repnz
imull
add
mov
pusha
lea
jne
push
push
jmp
andl
jp
add
jns
adc
xchg
ror
mov
ja
mov
push
cmpsl
fcmovu
ret
jne
sub
push
rorb
jecxz
mov
add
add
je
mov
stos
push
rol
mov
jecxz
lcall
dec
repz
inc
aas
dec
adc
sahf
popa
push
popa
out
pop
inc
dec
or
add
push
movl
pusha
push
pushf
pushf
lea
jmp
xor
imul
ljmp
cmp
mov
iret
pop
sarl
sahf
bound
xchg
in
arpl
dec
inc
mov
imul
dec
jmp
rorl
pop
cmp
mov
cmp
or
icebp
xor
adc
sub
adc
sbb
adc
xor
ret
arpl
mov
cltd
push
pusha
mov
mov
mov
mov
into
xchg
mov
add
jns
test
cmp
stc
push
add
cld
data16
dec
lahf
pop
nop
arpl
fildl
cmp
popa
or
inc
adcb
pop
sbb
mov
xchg
into
sbb
call
fs
mov
xor
fiadds
scas
mov
scas
lahf
adc
dec
ret
pop
movsl
icebp
in
adc
cld
cmpl
jne
js
popa
inc
lahf
inc
dec
push
notb
sub
insl
int3
popf
pop
mov
push
mov
jns
add
add
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
pop
pop
out
std
aas
mov
lret
rcl
xlat
push
adc
rolb
dec
rorb
stos
iret
enter
imul
mov
or
mov
dec
add
test
mov
jb
xor
cmp
call
and
xor
push
inc
test
xor
gs
mov
add
mov
mov
mov
xchg
je
cmpsl
fsubl
sbb
loop
sub
cmp
test
sbb
addl
adc
pop
sbb
ds
xchg
push
repnz
pop
inc
mov
mov
sbb
sbb
into
fldenv
mov
adc
js
or
addr16
pushf
push
sbb
add
jbe
jbe
push
imul
popa
popa
jno
iret
repnz
sbb
sbb
scas
adc
into
mov
addb
popa
add
dec
mov
dec
iret
xchg
inc
in
mov
add
pop
movsb
push
es
xchg
ret
aaa
dec
mov
push
or
jecxz
div
adc
sbb
and
sbb
cmpl
leave
cwtl
or
cmp
jae
ja
loopne
repnz
fwait
mov
jb
or
add
mov
lock
arpl
dec
fs
loop
xor
loopne
fwait
aas
xchg
sub
jb
push
adc
test
loopne
imul
sub
cmpsl
xor
hlt
clc
stos
jmp
stos
pop
dec
lock
push
shl
dec
cld
popa
and
push
mov
aas
pop
push
jecxz
std
enter
in
push
rclb
pop
inc
or
adc
movsb
add
jmp
int3
outsl
divb
fprem1
mov
inc
inc
dec
or
out
pop
aaa
popf
filds
jno
sarb
push
popf
xchg
cmc
xchg
scas
jle
xor
aad
test
jb
divl
test
out
rclb
outsl
popf
fildll
movsl
xor
ret
cmp
pop
cli
jnp
jle
mov
inc
jge
add
pop
xchg
div
popa
pop
lahf
pop
imul
adc
pop
pop
es
mov
aad
test
jbe
mov
adc
std
enter
inc
add
mov
fs
mov
mov
inc
out
xor
mov
mov
insb
sub
xchg
dec
call
cltd
and
xchg
scas
cmp
dec
push
stos
les
sub
das
cmp
add
jge
mov
aad
ss
jecxz
pushf
xchg
jp
das
inc
xchg
fcompl
mov
int3
adc
pop
dec
sbb
ja
lahf
divb
mov
add
out
mov
pushf
mov
mov
cltd
pop
mov
xor
aas
bt
mov
test
shl
cmc
clc
add
movb
call
out
gs
es
inc
add
mov
fbld
out
dec
mov
cmc
pop
jae
xor
inc
repnz
cmp
mov
ror
mov
pushl
push
out
pop
adcl
xor
lods
enter
dec
data16
subl
movsb
rcr
mov
xchg
out
add
mov
lea
push
movsl
addb
inc
xchg
pop
sbb
and
add
enter
jbe
sbb
add
pushf
xchg
fstpl
pop
ficoml
xor
movsb
rcl
enter
cwtl
push
xor
test
sbb
mov
mov
in
and
xor
push
imul
lcall
fisubl
mov
cld
lret
pusha
add
xor
aad
sti
inc
test
rorl
frstor
dec
add
xchg
jnp
jb
push
aaa
aad
rcrl
push
outsb
xor
mov
out
imul
out
mov
insl
scas
dec
int3
push
cmpsl
mov
shlb
stos
sbb
addr16
jb
pushf
pop
aaa
dec
fdivrl
mov
lods
xor
sub
mov
repnz
lds
ds
sbb
ds
mov
dec
adc
lcall
lods
mov
aam
push
les
xor
bound
insl
icebp
cmp
xchg
cmpsl
pop
es
or
fstl
movsb
or
imul
ja
xchg
jle
cwtl
jb
dec
rep
push
mov
and
lcall
or
mov
fisubs
mov
in
mov
push
mov
jge
fiaddl
jle
and
repz
ficomps
xlat
jne
xchg
flds
cs
push
bound
ret
pop
adc
fstpl
and
in
lods
dec
add
mov
movb
sub
jae
test
jmp
add
add
pushf
jmp
inc
mov
icebp
into
lds
adc
imul
ds
je
mov
sti
jl
mov
and
pop
lcall
into
and
jb
jecxz
fadd
ljmp
loope
rcrb
rcrb
inc
push
roll
pop
in
lahf
push
movzwl
leave
roll
aaa
adc
shll
orb
and
sbb
in
fisubs
inc
mov
xchg
add
pushf
lea
jl
not
pushf
mov
push
push
stos
movw
movb
mov
pushf
lea
jmp
lea
jae
pushf
pushf
movb
pushl
lea
jmp
call
arpl
arpl
xor
fs
insb
add
cmpsb
arpl
lret
sub
xor
cmp
std
cmp
jo
mov
pop
out
iret
je
mov
lahf
push
je
in
inc
cmp
out
sub
pop
and
mov
lock
xchg
jns
call
pop
inc
mov
into
lea
adc
dec
add
mov
sbb
pop
es
inc
int3
dec
xchg
pop
pop
call
inc
test
scas
movsb
bound
fxsave
imul
mov
fnstsw
cmpsl
push
ss
sbb
xchg
int
sub
adc
mov
xchg
popf
jp
push
pop
sbb
mov
xlat
xchg
ret
cmp
sbb
pop
push
mov
pop
and
hlt
jp
std
enter
leave
xchg
fincstp
add
pusha
movl
pushf
call
dec
mov
dec
xchg
xchg
stos
inc
dec
push
int
lret
dec
xlat
lcall
or
cmp
cmpb
orb
sub
mov
xchg
daa
pushf
add
icebp
leave
aas
push
mov
mov
cmpsb
xor
mov
xor
and
sbb
xor
out
cmp
mov
inc
sti
scas
out
std
fnsave
inc
lret
mov
dec
pop
pop
in
pop
add
rclb
outsl
lret
xchg
test
nop
mov
inc
jg
add
mov
pop
jmp
ljmp
repz
rolb
dec
rcll
loop
xchg
int3
cwtl
mull
sub
inc
sbb
out
divb
mov
mov
mov
push
mov
enter
das
pop
pop
enter
lods
add
adc
cmp
in
lcall
popf
inc
inc
shl
into
ret
or
or
inc
std
mov
dec
dec
rolb
call
popf
add
jg
push
movl
je
pusha
pusha
push
movl
movb
movb
lea
jmp
lea
movzbw
call
push
add
iret
jnp
ja
inc
enter
inc
push
pop
movsl
sbb
cs
mov
inc
cmc
add
sarl
adc
push
subb
idivl
mov
xchg
sti
pushf
arpl
push
out
add
in
lcall
add
ja
ret
popf
mov
push
mov
arpl
ret
lret
adc
push
sbb
pushf
cmp
fdivrl
insl
das
dec
add
fidivrl
and
in
push
in
divb
xchg
rorl
mov
call
adc
cmp
cld
adcl
jle
repnz
mov
into
xor
ja
mov
movsl
and
jmp
inc
into
xor
mov
or
sub
push
or
rcll
jge
aad
repz
xchg
stc
ss
sbb
mov
aas
clc
jl
aaa
add
movsl
outsl
test
add
add
sub
mov
pop
ljmp
adc
add
adc
xlat
adc
into
mov
inc
mov
adc
shll
imul
add
cli
arpl
test
or
stos
and
mov
xlat
and
loop
sub
mov
mov
pusha
sbb
jmp
cmc
jmp
jno
mov
sub
daa
inc
pop
mov
cmp
test
jge
sbb
xor
out
int
inc
push
jp
shl
or
insl
jns
xor
scas
sub
stos
jmp
aad
pop
inc
loope
push
out
or
iret
push
mov
mov
adc
fld
sbb
xor
add
fninit
sub
mov
sahf
popa
pop
push
push
add
leave
inc
into
xchg
mov
mov
bsf
mov
pusha
pusha
bt
cmc
cmpb
push
call
setb
movzbl
bswap
pop
lea
call
notl
imul
daa
js
sub
iret
lahf
push
sub
mov
jmp
sub
repz
lea
cmc
jp
mov
mov
push
rcrb
lds
add
bound
test
push
imul
sbb
lock
xor
jp
ret
pop
adc
add
add
pushf
pushf
pusha
push
lea
jmp
scas
xchg
flds
sbb
dec
fstps
mulb
aas
movsb
mov
lds
sub
adc
jmp
sbb
lahf
sahf
sbb
fstpl
xchg
pop
cmpsb
lcall
fstl
or
xchg
aad
add
addl
jle
jecxz
xor
inc
cs
movsb
loop
jb
jb
pmaxsw
loop
adc
xchg
mov
cmpsl
insl
test
xor
out
add
pusha
pushf
pusha
lea
call
push
push
lea
jae
seta
lea
movsbw
lea
push
lea
call
push
lea
jb
ror
call
setns
movzbl
movl
pushl
pop
mov
movzbw
lea
call
aaa
and
add
dec
jo
mov
in
xor
js
les
push
mov
mov
sbb
scas
push
jmp
add
add
dec
test
sbb
add
mov
mov
imul
jo
add
mov
pop
and
sahf
icebp
das
push
dec
xchg
xchg
mov
mov
dec
jp
add
js
mov
rcrl
ss
xchg
movsb
in
dec
dec
pop
push
jo
pop
test
sub
pop
sbb
int
mov
jge
hlt
aaa
cmp
lock
ret
mov
repnz
inc
push
fidivrl
cmp
jae
lock
andb
add
je
push
adc
daa
inc
gs
sub
stos
aaa
jb
scas
xor
mov
movl
pushf
pusha
pushf
movl
movw
lea
jmp
mov
mov
mov
pusha
push
pusha
mov
pop
rep
movzbw
mov
pop
setnp
lods
ror
bts
ror
not
lea
ja
xchg
xchg
inc
movzbw
xor
adc
mov
call
lea
jne
rcl
mov
mov
pushf
add
pushf
movzwl
btc
neg
mov
test
add
push
stc
jmp
call
or
aad
xchg
cltd
stos
jp
or
cltd
mov
mov
and
adc
repnz
jnp
mov
enter
pop
mov
lock
and
or
mov
or
dec
push
sbb
mov
stos
shrb
cli
cmc
pop
add
jno
inc
dec
out
iret
add
mov
scas
push
test
mov
push
add
inc
xchg
or
dec
out
mov
icebp
jno
aad
shlb
and
cmp
cld
inc
inc
mov
popa
add
dec
test
outsb
lea
lods
mov
cltd
mov
push
inc
ret
add
mov
cmp
mov
push
ljmp
mov
cltd
fisubrs
jbe
out
sub
mov
inc
out
push
in
lcall
inc
lret
jo
jecxz
or
mov
es
sub
xor
mov
add
dec
dec
sub
mov
mov
jmp
jmp
pop
push
cwtl
and
repnz
xchg
dec
push
rcrb
loope
call
add
fnstcw
pop
push
or
jnp
sbb
sub
adc
mov
mov
dec
sub
cld
add
cs
arpl
inc
aas
into
data16
cld
cmp
das
mov
and
xchg
jbe
lods
adc
adc
mov
xchg
sbb
jmp
mulb
leave
in
das
shll
adc
pushf
loopne
lods
lods
mov
mov
mov
mov
jmp
in
outsl
fnstsw
lods
pusha
pushf
mov
xchg
push
sbb
push
adc
addr16
pop
aam
push
xlat
pushf
in
pop
sbb
cmc
add
mull
push
outsb
inc
icebp
cli
pop
dec
add
and
mov
enter
sbb
mov
jo
dec
inc
dec
and
xorl
pop
fistps
pop
rorb
sub
push
add
xchg
jne
stos
fsubs
out
cmpsl
scas
pushw
add
mov
not
pushf
mov
pushf
lea
jl
pusha
mov
pushf
mov
pusha
pushl
lea
jmp
mov
push
pushf
bt
clc
test
push
pushf
lea
je
cmc
test
sub
bt
pushf
call
mov
daa
pop
test
enter
clc
ss
addl
add
adc
mov
fdivrl
pop
test
jo
mov
or
mov
aaa
stc
add
cmp
mov
push
div
les
ja
pop
inc
insb
ja
out
push
sub
ret
mov
mov
pop
sbb
pop
mov
cmp
movl
lods
fstl
push
sbb
repz
sub
test
cli
jbe
inc
jns
repz
mov
call
mov
adc
mov
insl
or
xchg
fistl
outsw
sub
fcompl
mov
and
jo
xchg
inc
stos
icebp
and
popf
sub
enter
mov
sbb
mov
xchg
mov
pop
and
popa
popa
iret
in
jno
call
cmc
mov
xor
mov
add
dec
fadd
popf
test
push
add
inc
lret
sbb
lahf
ficompl
fisttpl
adc
ja
push
mov
jns
lods
cmp
mov
dec
ret
fst
mov
or
daa
test
xchg
jno
ds
inc
push
sahf
pop
sbb
je
bts
xorb
cltd
das
push
out
mov
cltd
jl
pop
cmc
inc
add
ljmp
ficomps
mov
and
subb
loop
inc
ror
inc
and
mov
xchg
mov
sub
loop
divl
xor
xor
cld
stc
fwait
aam
or
ds
icebp
fdivrs
sub
mov
js
xchg
scas
add
fs
jae
pushf
pushl
pushl
sub
push
not
setl
movzbl
lea
push
mov
movb
pushl
lea
call
bt
shld
sub
movzbw
add
inc
lahf
pop
add
setnp
bsr
daa
pop
pusha
cmp
call
mov
stos
cwtl
into
push
into
pop
dec
jecxz
cwtl
fldenv
mov
cmc
jnp
ror
and
mov
mov
dec
mov
outsl
je
jl
mov
mov
dec
into
jle
pushf
xchg
and
push
dec
les
xchg
data16
add
fiadds
movsb
mov
je
notb
sub
mov
and
sub
jecxz
insb
mov
mov
std
faddl
movsb
add
xchg
popf
sarb
stos
dec
aas
shll
sub
cmp
lret
cmp
idivl
scas
jbe
int3
lret
ss
jg
xchg
adc
mov
mov
inc
outsl
dec
loop
xlat
sub
std
cltd
mov
stos
sbb
cmp
mov
movsb
in
aaa
xor
in
popa
jae
push
or
mov
gs
or
push
lods
mov
adc
bound
lcall
sbb
xor
scas
jne
jge
add
into
or
ficoml
sub
push
dec
xchg
xchg
ficompl
add
pop
cmp
cmp
jnp
cmp
cmp
adc
jb
lcall
sbb
cmpsb
mov
les
push
add
cwtl
fstps
pop
shll
fidivl
rcl
sbb
dec
sbbl
outsb
and
mov
mov
mov
in
out
scas
mov
add
in
inc
mov
sub
stos
dec
xchg
lea
lret
adc
jmpw
xlat
btr
dec
mov
cmp
shl
pushf
jmp
add
setne
jmp
mov
stc
add
cmc
mov
shr
movsbl
movsbl
dec
mov
clc
push
cmp
jmp
mov
sbb
cmp
dec
dec
push
adc
adc
addl
cmc
jns
jp
scas
iret
jg
les
xchg
fmuls
xchg
outsl
pop
stos
mov
cli
ja
test
fnsave
cmp
sarl
cmpsb
hlt
ja
sbb
sti
aaa
sbb
add
scas
dec
ljmp
push
les
popaw
pop
aas
xchg
lds
in
test
cs
sbb
cmpsb
js
daa
and
ficoml
sbb
sub
mov
divl
add
enter
or
xlat
data16
cmp
cmpl
add
and
mov
imulb
jp
mov
sbb
push
int
lock
inc
out
sahf
mov
mov
loop
je
ljmp
add
sbb
add
popf
and
fucomip
in
in
and
test
push
xchg
mov
mov
movw
jmp
lods
xchg
push
xchg
in
jl
inc
int3
dec
or
mov
mov
int
push
dec
insl
or
xor
push
sub
push
fwait
push
dec
and
add
cmp
and
in
dec
adc
in
cmp
nop
add
jp
imul
daa
push
pop
or
scas
out
pop
inc
daa
adc
loope
repz
dec
inc
mov
sti
xor
dec
ds
jbe
xor
std
sub
jl
popf
xchg
mov
xlat
das
fadds
pop
sub
std
push
cmp
xor
js
sarb
push
adc
popf
xor
mov
ds
pop
ficomps
test
clc
xor
test
cmp
ss
mov
adc
cmp
ss
mov
negb
outsl
and
cmp
adcb
mov
jne
dec
or
mov
or
mov
out
call
push
lret
ret
jno
jmp
imul
push
arpl
push
nop
adc
inc
mov
mov
mov
movsb
cmp
push
push
add
movsl
cmpsb
xor
je
fisubl
jecxz
outsb
in
sub
add
lea
je
clc
xor
test
mov
stc
bswap
bswap
cmc
add
bts
mov
pushf
stc
cmc
test
pushf
call
mov
jmp
jmp
cmp
sub
sbb
dec
hlt
add
pop
aam
test
out
stos
jno
mov
mov
testl
hlt
je
jle
out
and
sbb
cmpsb
jb
jb
mov
push
cmp
dec
pop
lds
xlat
dec
or
pushf
mov
sub
lret
inc
lods
imul
aam
daa
in
xchg
gs
daa
xor
mov
mov
iret
sub
cmp
adc
ficoms
pop
cmpsb
stos
gs
sub
icebp
sub
insb
int3
add
mov
mov
inc
push
int
xchg
orb
js
push
jl
shlb
cmp
cmpsl
and
fs
mov
jmp
mov
rclb
mov
ret
sbb
test
fisubl
in
push
pop
cmp
cmp
stc
in
int3
addb
pop
fidivrl
arpl
pop
add
mov
data16
andb
add
and
out
xor
mov
xorb
sub
sub
cmp
pop
data16
pop
loop
dec
add
std
repnz
shlb
inc
movb
cmp
xor
and
pop
aas
fstps
das
cli
int
rcr
clc
test
sbb
int3
loope
loope
ret
andl
in
xchg
addb
push
mov
movsb
lea
leave
daa
sub
mov
add
cli
orb
aam
push
xchg
pop
and
mov
mov
inc
lea
jne
inc
bts
dec
mov
lea
setno
clc
mov
xadd
xor
push
btr
or
mov
xor
not
shld
mov
inc
shld
bsr
mov
shld
lea
mov
rcl
shl
btr
mov
not
push
adc
mov
shl
sub
sub
shr
lea
shrd
mov
not
btc
setge
neg
mov
rol
cmp
sar
sub
dec
aam
and
inc
mov
cmc
shl
stc
clc
add
call
call
xchg
mov
or
and
and
sub
xchg
aam
outsl
out
nop
pop
fmull
outsl
inc
addb
xor
in
jp
mov
mov
jmp
stc
fs
fcompl
fs
dec
adc
inc
push
out
mov
repnz
pop
rcrb
stc
pushl
mov
mov
cmpsb
pop
pop
xor
fistps
jp
push
das
mov
jmp
mov
jmp
mov
add
divl
std
test
push
sub
in
cmpsb
and
outsl
pusha
sbb
mov
out
ss
int3
pushf
xchg
mov
xor
popa
cmpsb
test
sbb
je
push
ret
cs
out
push
aaa
rclb
loope
in
lcall
pusha
push
mov
movsb
faddl
fisubrl
mov
jecxz
sbb
shlb
push
mov
divb
cmc
cmc
lcall
mov
mov
jp
aas
mov
pop
mov
ds
lret
cmp
xorb
dec
xchg
pushf
fmull
dec
cmp
mov
push
incl
ficompl
insl
movsb
fdivrp
jne
push
sbb
fcmovb
test
roll
jge
jmp
dec
aaa
je
repz
imul
inc
xchg
roll
rorl
or
nop
push
insl
mov
out
sub
sub
repnz
test
and
cmpb
sahf
jb
and
pop
gs
push
lcall
movsb
or
dec
push
jg
daa
push
mov
push
test
xchg
rcrb
lahf
push
gs
xor
fs
or
adc
jae
dec
cmp
xchg
movsb
push
pop
push
jecxz
test
sahf
jne
push
call
mov
mov
mov
mov
cmp
jne
sbb
ret
pusha
push
mov
nop
subb
push
fistpl
pop
xlat
jbe
repz
incb
jp
incl
inc
or
add
mov
add
cltd
cli
cmp
mov
hlt
xor
scas
das
scas
dec
jmp
loope
mov
bound
jge
push
stc
gs
mov
dec
jmp
mov
and
adc
or
subl
push
cmp
mov
add
outsl
mov
call
pop
sti
mov
cmp
ja
rcrb
pusha
imul
lods
stos
jecxz
push
repz
or
xchg
adc
test
xchg
xor
and
pop
aaa
dec
push
ds
and
in
add
sahf
push
rcrb
xor
mov
clc
xor
or
test
lret
xchg
dec
dec
dec
mov
push
push
aas
sbbl
stos
popa
sub
mov
pusha
stos
and
sub
xor
or
incl
mov
lcall
ds
out
jmp
sbb
cli
inc
sahf
sub
lea
push
xchg
pop
sbb
shlb
sahf
inc
and
xor
mov
ficomps
fbld
xchg
push
jmp
stc
xchg
aam
pop
jp
adc
out
ja
inc
sbb
into
sbb
or
xor
adc
sahf
addb
and
jg
ljmp
mov
jp
dec
test
in
repnz
dec
adc
add
inc
and
mov
adc
xchg
adc
ljmp
pushl
lea
jmp
lea
jb
stc
bt
pushf
call
aaa
or
stc
inc
arpl
insb
test
xchg
pusha
cmp
lods
in
adc
xlat
mov
jg
xchg
jl
cmp
pop
lods
add
into
jb
pop
sub
movsl
lcall
jbe
fcoms
cmpb
jmp
out
xchg
pavgb
sub
clc
iret
stc
nop
shrb
xor
adc
lret
pop
inc
mov
mov
push
loope
add
add
lock
mov
fwait
xchg
popa
mov
jne
pop
subl
and
lods
push
cld
js
add
pop
cltd
enter
repnz
test
gs
stos
inc
das
aas
rclb
sbb
jo
js
mov
push
xor
ret
lea
jne
ror
sub
dec
mov
adc
btr
rcl
adc
mov
neg
pushf
xor
pushf
not
and
bts
mov
rcr
shl
neg
mov
not
bsr
mov
pop
rol
shl
mov
jmp
mov
bsr
neg
mov
bswap
movzbl
mov
neg
add
btc
rcr
call
ret
pop
stos
lcall
adcl
sub
mov
mov
in
sub
shl
xor
dec
or
adc
pop
push
jns
and
movsl
sbb
sbb
dec
mov
in
lcall
lret
fdivr
mov
outsl
dec
push
mov
push
ds
sub
cmp
cmp
loopne
fimuls
dec
int
sbb
add
push
pop
dec
sbb
pop
arpl
mov
testb
popa
lahf
call
fsubl
mov
aam
dec
arpl
xor
cmp
gs
jne
inc
div
roll
cmp
mov
pushf
imul
in
lahf
lret
data16
jmp
lock
idiv
ljmp
xor
or
ror
mov
lcall
mov
in
movsb
and
shrd
xor
ljmp
push
sbb
jbe
in
push
xor
repz
push
test
fstpt
jnp
stos
add
call
adcl
lea
sarb
sarl
pop
fldenv
shl
sbb
rcrb
dec
stos
xor
lret
aas
test
adc
rorb
popa
pop
jp
jge
popa
push
iret
test
or
cmc
xchg
cmp
scas
adc
movsb
test
add
rclb
fcom
adc
add
movsb
adc
stc
clc
jmp
add
xchg
pop
xchg
lcall
lcall
fisubs
dec
cmp
jp
scas
fs
imul
inc
int3
dec
mov
pushf
pop
jg
cmp
addb
out
icebp
cs
inc
or
addr16
xchg
in
lret
lret
pushf
in
cld
or
jmp
mov
dec
xor
popa
dec
popf
mov
out
aam
pop
pushf
cmpl
fildll
pop
es
xor
pop
gs
mov
repz
lock
fiaddl
movsb
adc
xchg
fwait
jmp
pusha
clc
sub
pusha
stc
jmp
mov
pop
aas
sub
sbb
adc
sub
clc
adcb
test
repz
sahf
dec
cltd
jg
dec
dec
mov
in
test
mov
jbe
scas
xor
sub
filds
fldenv
xchg
and
movsb
dec
ja
mov
dec
cmc
fadds
cmp
sub
and
out
jnp
adc
cwtl
inc
rcll
push
into
pop
sbb
inc
and
in
inc
jp
loopne
adc
div
outsb
rcrb
mov
sbb
inc
jae
idivb
xchg
lods
test
sub
hlt
xlat
adc
pop
sbb
mov
or
jge
or
jp
fiadds
push
bound
clc
notl
push
push
mov
scas
cwtl
and
scas
inc
imul
les
in
rol
fldl2t
jb
out
adc
or
push
jg
inc
into
mov
and
sbb
shll
sbb
std
test
dec
out
pop
pop
push
push
mov
fmull
fucomp
xchg
cmpsb
xchg
push
mov
mov
add
push
add
xchg
out
in
stos
cltd
fdiv
adc
stc
lds
mov
test
xor
jns
pop
cmc
lods
bound
mov
jle
jns
and
or
pop
xchg
loope
sub
in
mov
clc
scas
in
scas
mov
fstps
das
les
fwait
sarb
sbb
sbb
dec
in
push
lods
std
mov
leave
cli
pop
sbb
out
out
fwait
ret
clc
add
mov
fiadds
subl
aam
fs
adcb
gs
push
and
out
jns
rolb
or
bound
jnp
icebp
cs
adc
stc
pop
sub
test
out
shl
fdivrs
imul
mov
lods
adc
loop
rcll
sub
mov
sbb
and
xor
push
dec
sub
loop
or
mov
and
cmp
mov
xchg
pop
aas
fisttpl
pop
ja
jae
add
mov
insl
and
hlt
dec
cli
idiv
ror
cwtl
fs
xor
jecxz
sbb
leave
xchg
or
xchg
es
pop
aad
repnz
cmpsb
and
ffreep
rclb
fildl
and
aas
aad
ljmp
mov
mov
pop
popf
loopne
movsb
iret
cld
aam
movsb
in
mov
enter
fldenv
jb
insl
aam
jmp
jns
xchg
in
or
push
xlat
shrl
test
cld
add
and
pop
call
sub
movsb
sbb
sbb
jmp
or
jecxz
and
push
mov
jo
or
sbb
cmpsb
cmp
arpl
cmpl
add
cmp
jecxz
push
in
or
jnp
subb
das
imul
test
mov
shll
pop
clc
sti
ja
mov
or
movsb
cmp
and
fisubl
and
mov
mov
and
adc
imul
mov
jge
xor
xchg
push
add
jg
sahf
cmp
insb
jp
decb
addr16
icebp
test
jb
mov
and
lds
cmpsl
ja
cltd
lret
mov
sti
divl
adc
pop
decl
sub
push
mov
test
shrb
aam
clc
fcoms
xor
insl
fnstcw
mov
insl
sarl
das
mov
gs
pop
sbb
jl
push
push
push
clc
std
sti
movsb
iret
clc
push
xor
cmp
fidivs
adc
in
mov
js
push
mov
lahf
in
rcl
or
push
mov
mov
and
fninit
xchg
fistl
incb
shll
lret
into
test
lods
push
call
cwtl
pop
xor
sub
cmp
mov
add
or
jns
push
add
and
mov
or
and
jg
jl
sbb
roll
add
ret
jo
popa
std
cmpsl
mov
ja
mov
sbb
pop
and
add
mov
xlat
xor
fdiv
fwait
mov
or
cmc
test
pop
mov
sub
fmulp
in
mov
pop
cltd
pop
sub
mov
aaa
ljmp
les
push
and
pop
sub
es
je
dec
insb
push
je
jp
lret
imul
sbb
leave
xor
outsl
aas
jno
jl
mov
mov
pop
mov
dec
loop
push
sub
imul
das
xor
cltd
xchg
js
ret
call
lea
push
add
xorl
movsl
cli
loopne
test
mov
mov
mov
fwait
mov
scas
ds
pop
mov
jb
mov
leave
push
hlt
mov
mov
fnstsw
mov
js
mov
hlt
mov
loopne
hlt
mov
into
pop
and
scas
leave
stos
call
scas
or
nop
arpl
into
movsl
xchg
xchg
mov
in
push
enter
push
lea
scas
cmpsb
cmpsl
pop
xchg
mov
push
or
rolb
ret
mov
fistpll
xor
lock
aad
lea
push
push
les
xchg
xchg
sub
add
lds
fimull
and
fldt
sahf
ljmp
or
lahf
jg
popa
insl
pop
xchg
dec
cli
mov
sub
inc
jae
loopne
cmp
xchg
flds
mov
push
jne
rorl
xchg
in
div
leave
mov
sbb
subb
insb
flds
mov
or
adc
mov
xor
int
cmpsl
dec
lahf
popf
cmp
xlat
dec
push
xor
cld
fists
call
and
and
dec
fcmovnb
pop
xor
pop
pop
stc
inc
cs
lahf
adc
xchg
jns
std
inc
bound
add
ss
repnz
int3
mov
mov
leave
adc
mov
mov
mov
dec
mov
mov
jmp
push
aam
add
xchg
ret
sbb
shl
mov
xlat
inc
lock
insl
sub
jo
pop
sbb
stc
sbb
mov
and
aaa
fildll
or
lock
mov
xchg
mov
jle
push
rcr
mov
in
arpl
pop
jo
aaa
sahf
jg
dec
xchg
mov
mov
jmp
cli
pcmpeqd
in
mov
outsl
scas
arpl
mov
test
xchg
dec
loop
or
dec
jne
faddp
dec
cmp
cmpsb
ret
xchg
cld
xchg
lds
sub
xor
cmp
add
lock
addr16
out
jl
popf
inc
xchg
cs
or
imul
jno
pop
and
movsb
lar
push
loope
pop
sub
into
mov
mov
inc
cmp
fsubr
imul
mov
sbb
xchg
push
add
cmp
sub
daa
outsl
arpl
pop
or
mov
ljmp
mov
xchg
mov
cmp
push
pop
jmp
or
adc
lock
xor
or
or
xor
or
dec
push
mov
cmp
mov
jp
or
and
sbb
aam
dec
daa
test
sbb
dec
and
cmc
daa
out
cld
xchg
push
pop
imul
sbb
inc
xchg
cmpsb
jge
push
cmc
lods
hlt
cld
xchg
out
mov
pop
push
dec
mov
or
sbb
popa
xchg
orb
sbb
pop
fsubl
and
xor
loopne
push
je
inc
pop
in
push
push
imul
mull
jg
adc
mov
sti
dec
rcrl
push
lods
mov
inc
xchg
push
dec
cwtl
jge,pn
xor
xor
jmp
loopne
notb
sub
xchg
fdiv
jne
cmp
jne
dec
sahf
out
movsl
mov
cltd
aaa
or
les
xor
push
add
mov
leave
pop
sub
push
or
mov
imul
fdivl
mov
adc
arpl
insb
pop
and
and
lods
lret
add
dec
mov
dec
xor
mov
lret
sahf
mov
xor
sbb
aas
mov
cmpsl
fnsave
push
mov
into
mov
imul
rolb
mov
out
enter
jae
push
out
dec
and
mov
bound
push
into
pop
aad
lods
incl
out
popf
inc
push
cmc
int
imul
fsubr
cmp
pop
adc
lcall
sub
add
fs
ret
fwait
jno
mov
jmp
or
lods
rorl
insb
lods
sub
nop
mov
push
mov
cmp
loopne
xlat
or
ret
aam
sar
stos
subl
cld
mov
ret
pop
bound
clc
clc
insb
bound
mov
ret
jecxz
pop
pop
idivl
int
jl
loopne
or
xor
xlat
xchg
inc
std
popfw
mov
nop
aaa
or
lock
sbb
addl
mov
imul
in
filds
jbe
dec
push
inc
incl
mov
add
xor
mov
cwtl
mov
jo
fdivrl
sub
subb
stos
test
add
sub
loope
das
aaa
sbb
sub
jbe
aaa
inc
dec
outsb
aad
fidivs
in
cmp
cmpsb
xchg
pop
sbb
cmpsl
adc
ret
ret
daa
iret
mov
xlat
adc
and
iret
outsl
add
pushf
sti
push
scas
cwtl
jb
shl
lods
dec
push
adc
cmpsb
in
lods
sub
mov
and
push
leave
sbb
fsubr
ret
cmpl
ss
arpl
aas
dec
dec
mov
out
es
int
dec
pop
int3
leave
jns
inc
inc
ljmp
mov
in
jmp
pop
add
sbb
inc
cmc
mov
pop
std
push
sub
sbb
loope
mov
lahf
popa
aam
bound
push
or
sbb
pop
cmp
aas
into
pop
adc
ss
lret
sub
cld
movsl
mov
push
dec
aad
mov
das
out
js
stc
dec
xchg
icebp
xor
lret
mov
test
sysret
lods
loop
push
dec
adc
ja
push
jae
daa
int3
mov
cmp
out
pop
xor
cwtl
dec
mov
jmp
subl
cmp
and
xlat
mov
or
cmp
ret
adc
stos
and
dec
in
add
cmp
in
stos
xorb
sub
jae
xchg
movsl
push
cltd
jp
movsb
inc
adc
mov
sub
lcall
aaa
fcomp
sub
add
std
sbb
rcrb
scas
cli
cwtl
sbb
dec
sbbb
inc
dec
add
mov
xor
popa
mov
xchg
push
in
rcrl
orb
dec
jmp
stc
lods
jbe
scas
push
sub
xchg
andl
cmpsb
repnz
call
cwtl
je
xchg
ficoms
int3
sti
adc
fistpl
mov
push
stos
in
pop
xchg
sub
lahf
in
fidivrs
add
cs
sarb
inc
dec
adc
dec
fidivs
cmp
inc
leave
xchg
cmpsl
ret
int3
inc
aam
add
test
mov
lock
or
cmpsl
jb
pop
lock
xchg
outsl
das
imul
pop
xchg
add
mov
push
divl
cmc
pop
repz
sub
pop
adc
mov
and
out
xor
in
popa
iret
repnz
jecxz
sub
rol
mov
cmp
inc
ss
jmp
fnstenv
hlt
cmp
fnsave
mov
ss
std
es
adc
or
cmp
adc
cmpsb
dec
sub
cld
lcall
inc
mov
mov
xlat
scas
push
insb
xchg
inc
jmp
or
mov
in
fsubrp
xchg
sub
ror
test
jne
push
insb
pop
mov
stc
imul
out
cwtl
mov
popl
mov
push
ss
pop
or
insl
adc
push
mov
push
xor
jmp
mov
push
addr16
pop
cltd
mov
pop
sti
cmp
cwtl
push
cmp
or
movsb
cli
icebp
mov
movsb
cwtl
cld
xchg
gs
sub
addr16
lret
sbb
cwtl
mov
pop
out
push
or
imul
dec
mov
movsl
sti
sub
mov
or
xor
mov
jno
adc
ja
and
ja
loopne
xor
push
sahf
sub
sti
ds
cli
sub
mov
push
in
pop
lret
adc
pop
ret
scas
xchg
test
sub
dec
cmp
cmp
sahf
or
xchg
add
cmp
hlt
repnz
mov
xchg
test
xchg
repz
sub
stos
push
jne
sub
dec
nop
jp
mov
aad
mov
push
and
add
outsl
out
sbb
xchg
cmpsl
inc
ret
scas
imul
push
or
mov
xchg
xchg
or
incl
arpl
jmp
mov
sub
adc
rcl
mov
loopne
lds
cltd
dec
mov
lcall
add
repz
sbb
dec
push
call
mov
adc
dec
inc
sahf
lea
jmp
cmp
add
std
pop
lock
add
xchg
out
loopne
popf
push
ds
xlat
cmpsl
xchg
pop
cmpsl
lret
inc
cmp
mov
out
xor
jno
cs
fs
inc
jns
sub
adc
cwtl
xor
in
or
sbb
bound
fidivl
pop
pop
pop
test
popa
int
push
out
popf
sub
cltd
gs
repnz
les
sbb
xchg
std
mulb
ljmp
jno
cmp
sahf
xor
fs
adc
push
out
ds
or
in
sti
movd
popa
mov
mov
dec
mov
call
xor
inc
mov
pop
fcompl
sbb
inc
and
daa
ret
repnz
sbbl
in
mov
fisttpll
fwait
ss
jmp
sbb
popf
dec
dec
inc
xor
lock
xchg
sub
lret
xor
jp
inc
shlb
and
sub
dec
jl
jbe
dec
mov
imul
call
repz
mov
js
ficoms
jnp
int3
sub
inc
movsb
or
lret
jmp
adc
jmp
pop
pop
out
into
pop
stos
and
cmp
movsb
fadd
sbb
roll
pop
aaa
out
mov
lcall
mov
loopne
or
or
jl
insb
cmpb
movsb
cmp
divb
adc
mov
es
push
or
ss
jno
pop
mov
pushf
xor
mov
js
jmp
or
fadds
fs
or
push
test
adc
in
mov
lock
add
rolb
push
std
push
or
or
mov
loope
cli
jns
mov
movsl
ljmp
divl
cmpsb
mov
in
lcall
and
pop
cmp
leave
lcall
ret
push
mov
ljmp
int3
sub
mov
rclb
cmp
stos
bound
mov
push
mov
call
mov
xchg
imulb
std
sub
mov
sbb
adcb
dec
repz
push
cld
adc
ds
imul
mov
mov
xchg
push
pop
loop
shlb
xchg
fwait
or
test
mov
sub
mov
fs
lock
lods
and
shlb
dec
pop
lods
aas
aaa
xor
subb
lcall
pop
xor
jb
nop
movsl
xor
push
in
cmpsl
sti
lods
mov
add
outsb
dec
cmp
mov
xchg
add
xchg
in
mov
xor
or
sti
fnstcw
sahf
inc
sbb
adc
cmp
cmp
sub
inc
jmp
gs
mov
jno
dec
enter
aad
cmpsb
inc
les
lret
push
lret
pop
mov
inc
rorl
mov
jecxz
cmp
pop
cmp
push
dec
out
aam
test
mov
adc
sti
mov
es
jae
dec
xor
pop
ljmp
sbb
enter
js
jle
mov
mov
stos
push
pop
cmpsl
xor
je
mov
ficoms
pop
and
dec
out
mov
gs
pop
ficomps
mov
mov
xchg
loopne
in
mov
cmp
inc
mov
or
pop
dec
icebp
push
mov
movb
jg
jg
pop
mov
or
and
test
repnz
inc
shrb
dec
inc
leave
push
xchg
lret
mov
lret
or
xchg
push
roll
jns
idiv
outsl
outsl
fs
add
ja
adc
clc
mov
and
repz
adc
into
dec
fstp
bound
xorb
rcrl
cmc
aaa
mov
inc
cmp
rcrb
inc
pop
push
pop
std
iret
xchg
cmp
insb
lock
imul
push
sbb
in
jl
cmc
mov
mov
std
cltd
mov
fsts
adc
xor
sub
out
call
ss
sub
push
jle
jbe
mov
jmp
fldt
xchg
ret
sahf
hlt
mov
lcall
inc
dec
movsl
mov
shrl
fidivrs
mov
in
ret
cld
lret
jo
sub
add
in
sbb
jo
sti
push
push
daa
or
loopne
add
mov
push
lret
out
inc
pop
xlat
in
cltd
data16
loop
loop
mov
ljmp
lcall
addr16
mov
jnp
push
popa
cltd
mov
fucom
cmp
push
mov
xor
adc
test
mov
or
pop
mov
ds
mov
ss
xchg
pop
ret
cs
or
inc
sbb
daa
mov
jbe
mov
xchg
mov
fnstcw
outsl
stc
nop
ret
lock
add
rorl
and
or
scas
inc
xor
arpl
lea
nop
rcrb
xor
nop
cmp
call
jne
add
shlb
jnp
gs
mov
outsb
and
icebp
mov
ljmp
push
aas
or
pop
aad
loop
pop
push
adcl
xlat
pop
push
movb
and
adc
mov
sbb
int3
sub
jmp
sub
shll
push
std
lods
cltd
aad
xor
or
int3
cmp
ss
xchg
sti
movb
enter
cmp
pop
repnz
sti
sti
aad
jnp
jno
test
icebp
jle
outsl
mov
jo
dec
cmc
inc
pop
cltd
repnz
imul
pop
push
repz
ja
aas
insb
mov
push
enter
int
aaa
xchg
mov
insl
mov
or
xor
or
ficoms
inc
inc
mov
fwait
xchg
inc
stos
pop
adc
push
pusha
add
mov
fwait
pop
dec
push
adc
xchg
jg
or
loope
ss
xchg
ljmp
or
int
and
and
scas
fdivr
pop
dec
dec
inc
popf
and
and
and
call
pop
cwtl
adc
mov
pushf
sub
jbe
ds
sub
adc
or
aas
lods
filds
xor
inc
lret
shrl
shll
call
test
lods
fs
pusha
mov
test
stc
insb
pop
add
sub
lret
fcomps
push
xor
inc
sbb
xor
fucomip
push
and
mov
push
fneni(8087
sbb
ljmp
xorl
jg
adc
mov
sub
test
movb
and
adc
mov
dec
or
mov
stc
pop
jg
or
mov
loopne
ret
movsl
mov
fiadds
pop
pop
das
mov
cmp
push
and
mov
xchg
inc
jns
or
jl
stos
lods
js
fbld
ljmp
push
aas
test
lea
jmp
int3
push
movsl
ja
ds
push
mov
imul
mov
loop
pop
push
push
sbb
loop
jno
mov
sbb
mov
jo
jmp
pop
sub
daa
nop
jp
sub
cmp
test
mov
es
adcb
cmc
push
lods
add
fs
sbb
clc
cwtl
in
or
cmp
pop
xor
or
xchg
inc
cli
xor
cwtl
and
aas
loopne
xchg
sbb
and
fcmovbe
imul
bound
mov
test
jo
mov
out
test
or
dec
mov
jae
repnz
add
sub
mov
or
inc
dec
cmp
xchg
not
push
or
test
sbb
lret
sahf
repz
sbbl
lock
std
push
jmp
push
loope
lret
mov
push
insb
aas
lcall
inc
fdivl
cli
jmp
and
das
mov
add
add
outsb
pusha
xchg
icebp
add
and
lods
idivb
sbb
mov
mov
iret
adc
xor
addr16
add
push
int
mov
dec
out
xlat
scas
cwtl
pusha
and
call
xchg
push
sub
cmpsl
pop
mov
rclb
xor
inc
pop
in
add
shrb
pop
inc
shlb
dec
or
inc
fidivl
leave
in
call
mulb
xor
push
mov
sub
sub
and
call
jae
es
int3
mov
ror
pop
and
adc
add
in
cmpsb
inc
lods
and
sbb
or
lcall
lahf
jp
adc
cs
std
mov
pop
mov
into
push
faddl
xchg
cmc
or
imul
cmp
icebp
jle
pop
mov
loop
loop
and
insl
push
push
in
scas
fildll
in
jne
mov
pusha
adc
repnz
cwtl
adc
fbld
jnp
lods
add
xlat
les
in
add
push
dec
push
int3
xchg
repz
stos
mov
loop
inc
std
sahf
addb
mov
and
inc
clc
push
sub
mov
arpl
or
dec
das
add
mov
movsw
jmp
call
or
cmovns
or
clc
push
cmpsl
and
sub
jne
push
mul
data16
or
imul
sbbl
add
jo
inc
repnz
adc
rcll
sbb
pop
or
dec
inc
out
mov
jae
repz
je
pop
out
lods
icebp
fsts
fisttpl
pop
sbb
dec
fcomps
inc
sbb
gs
les
jl
push
add
cmpsb
pop
and
xchg
mov
mov
sub
push
xchg
shll
sbb
daa
mov
shrb
add
push
mov
test
outsb
cmp
fcomp
inc
test
jecxz
and
mov
std
jl
xor
sbb
popf
aam
mov
sbb
shr
adc
mov
aaa
push
mov
hlt
insb
aas
shrb
cmp
pop
mov
add
mov
imul
pop
push
xor
addl
lret
push
mov
mov
pop
jno
vsqrtss
add
xor
add
mov
push
enter
cltd
or
jp
adc
or
pop
xor
aas
pop
rcrl
cmc
lret
and
es
mov
loop
jns
scas
sub
xor
test
mul
iret
cltd
mov
sahf
popa
pop
jbe
clc
or
xor
sub
rorb
pop
jle
xchg
or
lods
icebp
push
jecxz
test
sbb
mov
xchg
outsb
fxch
dec
jp
cmp
pop
mov
pop
and
repnz
movsl
pop
xchg
mov
out
dec
loopne
pop
jecxz
jno
jns
mov
test
cmp
push
lret
cltd
es
mov
mov
or
adc
mov
stos
int3
daa
sbb
iret
push
mov
sub
sub
dec
push
cmp
inc
xchg
mov
add
dec
fistpl
dec
cs
sbb
fs
inc
testl
sub
cmp
outsl
sub
in
add
repz
fs
push
test
js
xchg
mov
xchg
add
and
dec
inc
mov
lret
xchg
or
inc
cmp
repnz
ror
inc
and
cmp
adc
fstps
dec
mov
mov
ja
sub
fstps
adc
das
aad
mov
or
arpl
subb
lcall
adc
repz
in
loop
cmp
daa
jg
or
icebp
and
cmp
push
cmp
movsl
mov
into
xchg
or
cwtl
insl
out
xor
mov
mov
test
neg
xchg
sbb
fs
push
iret
test
mov
jp
pop
mov
movsb
inc
mov
push
and
pop
outsl
iret
sub
int
xor
or
xor
cmc
dec
orl
pop
lds
xchg
xchg
ds
mov
cmp
fsubrs
in
inc
or
sbb
int
scas
and
mov
sbb
inc
mov
push
imul
shrb
push
jno
xor
outsl
mov
cmpb
push
mov
xchg
add
or
cmpsl
test
in
aas
cmp
jnp
scas
pop
add
and
pop
test
push
cmc
jns
xchg
mov
sbb
fs
cmp
movsl
cld
ds
add
jb
add
fimuls
jle
testb
and
adc
scas
xor
and
ja
sbb
xchg
ds
xor
sbb
xlat
jnp
outsb
mov
mov
xor
xor
cmp
dec
mov
std
adc
sub
cmp
jno
push
sbbb
nop
cmp
inc
push
imul
js
and
xchg
ret
xchg
ret
fstps
jge
jbe
ret
add
adc
mov
and
popf
cmc
scas
insb
inc
out
jne
cmc
jle
fcoms
jmp
adc
push
jb
mov
bound
mov
inc
jne
addr16
fs
out
xlat
pop
xchg
in
gs
ljmp
movsb
into
std
xchg
mov
xor
aaa
adc
inc
pop
and
push
out
imul
cmp
popf
clc
mov
xchg
mov
fwait
loope
mov
insb
ror
loope
fldcw
mov
dec
fs
cmc
xchg
xorl
mov
mov
push
rcr
mov
loop
push
and
jnp
aas
ss
sahf
aad
sbb
add
mov
cltd
pop
aam
leave
imul
mov
cwtl
sarb
sbb
pushf
mov
push
and
mov
lods
xor
adc
insl
rorl
scas
into
repz
mov
in
imul
mov
das
ret
rcrb
xchg
loope
jno
push
je
lahf
dec
and
rclb
dec
sbbb
xor
loop
cld
dec
jno
in
dec
mov
ljmp
in
pop
jae
sti
push
xchg
in
mov
inc
out
fs
jno
inc
push
push
dec
pop
xchg
imul
push
lods
out
scas
or
mov
out
movb
repnz
out
mov
leave
xlat
cmp
push
rol
pop
in
and
jne
cmp
add
sbb
inc
or
int
push
inc
sbb
inc
lahf
jb
cmc
adc
imul
adc
icebp
out
outsl
sbb
lcall
dec
or
mov
mov
rcr
mov
sldt
out
aas
mov
icebp
clc
jge
cs
jb
into
or
jmp
int3
addb
cmp
clc
cmp
jp
mov
jno
in
xor
pop
daa
mov
mov
inc
aas
xchg
enter
sub
jno
outsb
and
inc
push
mov
popf
rcr
cmpsl
jae
pusha
jge
jns
mov
lret
in
loop
movsb
lds
aad
cmp
lahf
jns
ret
and
and
aas
push
imul
dec
pop
xchg
xor
jno
out
xor
inc
cwtl
rclb
rcrb
cmp
andw
dec
repz
insb
lret
inc
cld
lahf
inc
test
add
adc
push
fidivs
dec
imul
aaa
fwait
ds
add
cmp
addr16
test
stos
lock
fs
and
outsl
jecxz
aaa
int3
xchg
and
lret
mov
addr16
pop
cld
movsl
inc
sub
xchg
stc
insb
and
jecxz
adc
cmp
jge
lcall
lret
ss
addr16
ror
dec
nop
or
cmp
flds
ret
into
hlt
pusha
add
aam
cmc
aaa
dec
xchg
xchg
xor
ret
sbb
into
je
mov
sub
in
xchg
outsb
or
fildl
or
mov
mov
inc
inc
or
sub
cltd
and
fistpl
pop
std
fmull
adc
in
cmp
js
notb
fmul
sbb
inc
jnp
adc
xchg
movsl
hlt
das
cmp
aas
idivb
mov
fstpt
adc
add
ret
pop
ud1
gs
add
mov
mov
inc
adc
mov
push
movsb
jb
and
pusha
aas
jbe
or
and
lcall
mov
xchg
fists
mov
je
jl
sbb
push
add
popf
push
stos
mov
mov
pop
fcoml
jp
push
ret
lock
sub
mov
adc
sbb
cli
push
jp
xor
mov
add
insb
add
xor
repnz
push
dec
push
cltd
cmpl
sub
test
adc
scas
and
cmpsb
ret
xor
mov
and
stos
ja
sbb
push
push
aam
add
out
outsl
push
push
stc
jl
add
fimull
inc
adc
xchg
out
leave
inc
jecxz
adc
jmp
jl
jle
in
xor
fldt
adc
xor
or
push
or
push
and
and
popf
jne
sub
pop
pushf
stc
xor
fcoml
jbe
dec
andl
cmp
popa
out
ret
popf
pop
sbb
mov
add
loopne
or
sahf
stos
mov
mov
mov
pop
lods
add
inc
lahf
movsb
in
imul
inc
idivl
adc
mov
cmp
divb
push
push
ror
fldenv
arpl
mov
aad
and
jge
clc
jmp
enter
jno
pop
test
and
sub
sub
jmp
cwtl
xor
addr16
das
arpl
push
push
lcall
jbe
int
push
stc
out
push
xor
repz
dec
bound
pushf
mov
sbb
or
mov
nop
js
push
int
stos
pop
cmp
xchg
cmpsb
add
lcall
add
xlat
roll
test
cmp
jae
sbb
into
and
popf
jmp
cli
insb
lock
roll
cmc
mov
mov
insl
iret
aam
pop
rcrl
inc
pop
scas
aad
addr16
sbb
and
jns
es
dec
push
push
mov
aas
push
or
cltd
mov
daa
gs
jno
fwait
aam
jb
dec
jb
jg
aas
jmp
dec
cmp
push
clc
mov
xchg
fnstsw
mov
inc
add
push
and
cwtl
xor
out
adc
dec
pop
sbb
rol
cwtl
popa
call
sbb
bound
fwait
int
sub
repz
les
fldenv
mov
xor
pop
lret
mov
add
divb
aaa
jl
repz
jg
sbb
push
xorl
dec
and
inc
aaa
and
dec
xlat
sub
xor
icebp
pop
loop
jg
and
hlt
mov
loope
mov
lahf
mov
mov
pop
mov
fcmove
movsb
in
ja
pop
adc
inc
addl
movsl
ljmp
sahf
mov
fldenv
lods
pushf
aam
lds
xor
xchg
hlt
mov
fisubrl
mov
mov
and
xchg
jmp
sub
add
mov
mov
shlb
pop
cmp
imul
in
sbb
mov
cmpl
dec
lods
pop
cs
adc
mov
mov
mov
fsubs
mov
ljmp
pop
shrl
xchg
sub
shl
push
ss
xor
je
ss
inc
xor
lods
pop
fistl
pop
push
jo
cwtl
movsl
rcrb
jecxz
imul
jbe
sub
lret
dec
jbe
jge
movsl
xchg
pop
pop
fwait
or
sub
pop
sbb
jecxz
mov
cmpsb
and
pop
lret
mov
psubsb
mov
xor
mov
gs
fimuls
or
movsl
rcrl
repnz
inc
fdiv
cmc
aaa
xchg
sub
loop
movsb
insb
popf
add
mov
or
or
inc
dec
cmc
in
pop
and
ret
or
mov
das
roll
jmp
addps
cltd
stos
push
ja
test
mov
push
pop
cld
and
pop
cmp
xchg
in
out
repz
std
fs
add
mov
ret
cld
scas
in
mov
add
push
xor
bound
xchg
mov
pop
push
mov
adc
das
fidivl
jnp
enter
mov
scas
xorb
pop
sbb
mov
mov
xchg
lock
dec
call
loope
or
mov
pop
pop
jno
pop
cmp
push
mov
mov
push
fadds
ret
cltd
es
dec
sub
in
pop
stos
arpl
test
xchg
cmp
push
push
std
adc
cmp
cmp
add
fisttpl
add
mov
shlb
and
xchg
sbbb
mov
lock
jb
sarb
dec
push
lcall
pop
daa
push
mov
imul
imul
ficoml
adc
jl
fcomps
ret
xchg
adc
pop
mov
push
sub
imul
xor
js
lods
inc
mov
or
and
inc
jno
dec
loop
popf
mov
cltd
ret
ds
fldcw
pop
addl
test
inc
mov
call
or
sbb
xchg
push
sti
push
cmp
in
imul
int
aaa
jns
pusha
dec
insb
imul
mov
and
jae
xor
jbe
arpl
jl
sub
scas
pop
insb
lea
mov
adc
sbb
cmp
xchg
mov
add
int
adc
adc
sbb
lods
outsl
rcrl
shlb
pop
and
xor
sub
out
push
imul
cltd
lock
mov
dec
cmp
aas
lock
mov
rorb
fmul
xchg
fsubrs
cmp
or
cmpsl
cli
rep
sbb
jne
std
sub
dec
adc
push
jbe
mov
int3
daa
adc
int3
icebp
and
mov
mov
hlt
and
jne
mov
dec
xchg
push
push
dec
cmp
pop
fnstenv
xlat
das
push
cmp
addr16
jge
push
lret
imul
subb
dec
pop
dec
cmpsl
in
dec
jg
rorl
adc
push
in
rorl
int
pusha
mov
daa
rcll
cs
lock
dec
mov
dec
pop
pop
fstl
inc
push
push
sahf
sub
xchg
pop
mov
jp
push
mov
sahf
and
mov
mov
jg
out
jne
or
add
dec
je
dec
mov
sbb
push
push
sub
add
mov
pushl
push
xchg
inc
sbb
ds
mov
mov
movb
ja
cld
pop
icebp
cld
fs
mov
ds
clc
in
out
push
and
cmp
test
pop
inc
mov
in
or
pop
stos
stos
cmp
mov
movsl
xor
enter
jle
insl
push
or
mov
imul
pop
mov
mov
hlt
rep
mov
popf
ja
mov
iret
std
out
outsb
adc
aam
orl
aad
pop
pushf
sar
adc
mov
hlt
lret
nop
stos
into
arpl
inc
mov
popf
repnz
mov
subb
sub
jno
or
xor
aad
ja
mov
outsb
push
addl
cmp
xlat
pop
cmpsl
or
adc
leave
or
xor
mov
jmp
insl
adc
dec
enter
add
rcll
push
je
jge
loope
pop
adc
adc
pop
or
add
xorl
rcr
xor
dec
cs
jg
sti
dec
mov
sub
xchg
inc
push
das
adc
sub
push
and
sub
xor
mov
mov
push
sbb
or
pop
xlat
xorl
sbb
or
js
cmp
lds
mov
dec
dec
icebp
xchg
lcall
fists
push
movsl
aas
out
dec
cmp
ret
xor
andl
xlat
outsl
fidivs
out
in
jno
rorl
push
xor
jns
rcll
out
sbb
loope
in
lds
inc
shrl
push
pop
jbe
jb
pop
or
bound
push
int3
dec
jle
adc
jmp
and
adc
test
mov
shrb
dec
or
adc
mov
hlt
or
push
xor
dec
sbb
lods
and
sbb
in
push
and
jp
mov
and
xchg
xchg
jecxz
adc
xchg
les
dec
sbb
jle
push
insb
subl
pop
sahf
out
testb
cmp
outsl
fs
cmp
cmp
sbb
ds
shlb
test
dec
ljmp
xor
xor
clc
outsb
out
jae
add
and
jle
pop
fs
popf
and
or
hlt
loop
pop
dec
dec
xchg
push
enter
rol
clc
aam
dec
push
rorb
jnp
mov
xchg
pop
dec
cmpsb
shrl
repnz
negl
cmp
fdivrs
xor
ret
pop
cmp
push
push
mov
and
inc
or
int
fadd
mull
mov
mov
dec
xchg
mov
mov
rcl
pop
sti
insb
leave
mov
jne
das
xorl
jb
and
repz
shll
insb
shrb
nop
jmp
cltd
sub
fcoms
lods
mov
mov
add
imull
rolb
movsl
ja
xchg
mov
add
xchg
xchg
nop
ror
mov
add
lcall
shll
insb
loopne
outsb
pop
sbb
inc
xor
je
mov
mov
xlat
in
out
cmp
push
cmpsb
es
cmp
pop
test
je
jg
cli
ds
loopne
jl
lcall
mov
sbb
ret
imul
mov
push
jg
inc
enter
adc
dec
jmp
push
pop
or
xchg
mov
and
xor
jg
dec
or
jl
mov
in
insb
sbbl
std
lret
insb
push
hlt
pop
les
mov
xchg
loope
in
fs
je
int
adc
insb
jno
cmc
pushf
gs
shl
jo
sbb
arpl
in
jp
xor
cwtl
lret
mov
add
sbb
and
int3
in
xchg
or
jbe
mov
mov
pusha
add
push
lods
in
lret
push
mov
jno
imul
dec
dec
and
xchg
mov
push
lcall
or
cmp
rorl
imul
sub
push
xchg
in
xor
fisttpll
dec
inc
outsl
stos
mov
lahf
jmp
aam
les
xor
aaa
xor
test
test
jns
imul
sbb
test
mov
sbb
or
outsl
test
push
cltd
push
cmpsb
fdivs
and
int3
sub
outsb
dec
add
sti
rcrb
push
dec
adc
sbb
adc
sti
mov
xchg
push
sub
xchg
addr16
pop
cs
ds
mov
and
mov
imul
sbb
outsb
cmp
sti
call
sbb
dec
xor
call
movsl
scas
jbe
sub
mov
jns
in
mov
mov
xchg
and
jmp
xchg
jae
cmp
xchg
or
repnz
xchg
lods
in
jns
mov
fistpl
pop
cs
aad
or
cltd
and
jl
mov
cs
push
popa
stos
mov
ljmp
lods
pop
push
iret
pusha
ret
jmp
lret
das
clc
push
dec
negb
ret
dec
xor
or
mov
repnz
fmuls
sbbb
sar
das
push
xor
jo
fstps
aam
sahf
add
jp
sub
addr16
out
in
mov
xchg
sar
lea
xor
add
push
inc
sub
movsb
inc
mov
or
or
add
sbbl
arpl
in
add
mov
jnp
dec
out
or
xchg
inc
pop
mov
dec
scas
mov
cmp
jle
daa
pop
sbb
ret
in
cli
sub
xor
mov
or
pushf
push
into
and
in
sbb
notb
push
mov
jle
imul
jno
test
aad
jg
addl
in
mov
int
shl
arpl
jp
or
and
stc
repnz
shlb
lds
push
mov
ficoms
and
in
stos
jecxz
mov
mov
mov
test
leave
pusha
pop
xchg
push
testl
jns
pop
sbb
aad
andb
mov
adc
push
dec
dec
ds
pushw
mov
ljmp
jl
and
pop
mov
pop
pop
notl
mov
rorl
or
call
aam
pop
je
cmp
ss
adc
mov
push
cmc
pop
xchg
mov
cmp
in
add
mov
in
lods
pop
dec
pop
mov
or
scas
push
pop
ljmp
nop
mov
rolb
sbb
mov
sbb
out
loop
sbb
loope
aas
add
or
sbb
pusha
lret
fmull
push
sbb
inc
add
pop
mov
xor
neg
lea
inc
repz
mov
sub
cli
lret
inc
outsb
shll
dec
outsl
test
xchg
and
data16
sar
sub
std
ret
out
icebp
sti
data16
rolb
add
loope
lods
and
test
xchg
std
sbb
aaa
fsubs
jbe
add
daa
lods
in
outsb
in
test
cmp
pop
inc
dec
in
jnp
mov
push
cmp
jge
sbb
add
adc
int3
mov
dec
xor
fldenv
sub
fnstcw
scas
cmp
pushf
flds
repnz
mov
out
xchg
mov
jne
imul
das
sub
fidivrs
xchg
call
mov
bnd
in
mov
dec
sbb
shrb
inc
loope
nop
movb
or
fwait
ja
push
ret
jnp
shl
mov
mov
mov
xchg
and
pop
imul
lea
mov
call
adc
scas
xor
lea
mov
ret
ret
push
sbb
mov
inc
nop
xchg
ret
pop
xor
mov
movsl
orl
fnstenv
sub
cmp
orl
fdivl
mov
cmpsl
mov
aam
mov
orb
negb
mov
jae
fcoms
dec
pop
fidivs
cmp
gs
pop
flds
mov
popf
shll
xor
jl
and
xor
sbb
pop
mov
xor
loope
popa
xor
xchg
clc
sbb
addb
cs
mov
mov
test
mov
stos
cltd
hlt
lds
pop
je
mov
mov
mov
jnp
xchg
or
mov
adc
scas
fucomp
mov
gs
push
fwait
jne
subl
dec
std
jp
mov
adc
lds
or
add
xor
repz
push
test
inc
inc
lea
push
adc
or
rcr
jle
popl
or
out
dec
andl
mov
and
ficoml
adc
scas
sub
cld
pop
xlat
in
mov
daa
mov
stos
xcrypt-ofb
cmpsl
sub
push
mov
or
cli
mov
mov
enter
out
xlat
lret
push
jb
rol
and
jp
test
clc
mov
mov
dec
ljmp
adc
cmp
push
mulb
pop
pop
mov
add
jmp
jbe
scas
ret
stc
push
mov
pushl
and
mov
mov
xchg
pop
dec
test
adc
repnz
inc
push
clc
cmpsl
jnp
add
pop
sub
xchg
mov
cmc
push
popa
jmp
sbb
pop
movsb
sti
mov
xor
popf
shrl
jno
sahf
pop
ljmp
pop
fnstcw
stc
jno
pop
add
popf
std
cmp
test
add
jnp
mov
test
ja
mov
insb
cwtl
es
sbb
notb
addr16
fdecstp
mov
call
clc
jb
mov
or
aam
pop
cltd
test
jne
clc
cs
daa
push
push
enter
dec
mov
icebp
xchg
add
mov
lret
xchg
push
daa
or
imul
xchg
lcall
adc
mov
pop
mov
subb
push
xor
xchg
lock
push
mov
add
mov
jge
scas
mov
pop
cmc
sbb
inc
xchg
icebp
cmp
std
into
cmp
push
jge
rcrl
add
mov
pop
fisubl
xor
mov
hlt
lods
lock
test
cmp
lock
lods
or
mov
mov
xchg
mov
stc
in
fnsave
push
in
pop
int
rolb
xor
lret
movzwl
rorl
pop
cmp
cli
push
in
jae
stos
xchg
mov
pop
dec
dec
pop
arpl
xor
jae
lret
or
mov
je
mov
lcall
mov
nop
jne
and
mov
sbb
sub
addl
stos
jno
in
and
mov
dec
popf
movsl
pop
fildll
cmp
aas
add
pop
daa
dec
lods
mov
sti
sbb
fldenv
lahf
jle
fdivl
xor
adc
jp
popf
unpckhps
ret
shrb
mov
xchg
and
or
iret
mov
call
popa
sub
in
pop
xor
iret
xchg
xchg
jb
add
jne
xor
cltd
loop
xchg
jge
ret
add
shrl
cmp
push
add
mov
mov
out
enter
outsl
aaa
push
faddp
xchg
ret
pop
fnstsw
jmp
lret
scas
dec
or
fistpl
pusha
and
int3
and
pop
imul
xor
fcomip
inc
mov
movsl
mov
inc
stc
testl
insl
pop
cltd
pop
push
sub
cmp
pushf
cmp
push
std
mov
nop
adc
inc
mov
mov
xor
and
dec
sub
push
xchg
mov
arpl
lods
push
xchg
jns
loope
pusha
shl
sbb
xchg
lock
stc
jno
test
pop
ror
mov
in
dec
push
ljmp
sub
xlat
pop
add
and
pushl
popl
mov
pushl
ret
je
pusha
add
mov
cmp
pushf
pusha
pushl
pushf
lea
jb
test
pusha
cmp
push
call
cmp
mov
mov
jmp
bt
jmp
inc
jo
loop
pop
lods
jle
dec
loop
es
jae
mov
clc
jbe
lret
mov
sub
mov
test
cmp
jle
inc
bound
je
das
rol
loop
sbb
add
pop
leave
addl
xchg
dec
mov
dec
mov
lcall
or
cltd
push
dec
lods
xor
push
mov
xlat
xor
movsb
dec
and
mov
xchg
rcll
daa
movsb
movsl
out
js
jns
lret
repz
xchg
out
mov
or
mov
shlb
mov
and
dec
faddl
addr16
mov
lods
dec
or
cmp
cli
jp
inc
ficoms
xchg
pop
out
sti
mov
les
insl
repz
imul
outsb
inc
dec
cld
ret
cmpb
faddp
cmp
aas
mov
add
add
mov
xchg
loopne
fs
jne
movzbw
test
btr
btr
mov
shld
clc
bts
mov
cmc
sar
shl
sub
btr
mov
btc
mov
pushf
dec
mov
sbb
bswap
xor
mov
jmp
pop
addb
cli
fistps
mov
pushf
pop
pop
bound
adc
arpl
addb
ret
and
lea
add
data16
jle
xchg
push
shll
out
stos
cmp
movl
mov
push
scas
out
lea
test
cli
and
aaa
pop
test
mov
nop
adc
fstp
clc
cmc
xchg
push
sbb
daa
lcall
jae
mov
outsl
outsl
daa
jg
adc
es
movsb
in
mov
mov
mov
adc
movsb
dec
mov
filds
shlb
cmp
ja
push
fstps
cmpsl
jno
icebp
and
fimull
stos
adc
sub
psrlq
into
fidivrl
aad
sbb
sahf
cli
cmp
fcoml
sub
mov
cmpsb
repnz
mov
inc
std
leave
pop
sahf
cmp
xor
xchg
jle
mov
sub
and
xchg
je
dec
jb
dec
imul
adc
imul
push
fwait
jmp
and
lret
or
call
sbb
mov
cmpb
mull
inc
sub
push
in
jmp
das
adc
sbb
aam
fs
popf
add
jno
jnp
leave
movhps
or
pusha
inc
movsb
testb
push
cli
mov
xchg
xchg
lret
pusha
imul
ror
jg
pop
dec
lret
or
pop
dec
sub
test
lcall
or
xchg
fwait
xchg
rcrb
bound
test
movsb
dec
mov
jl
pusha
lea
jne
shrd
inc
cmc
mov
bt
add
cmp
bt
stc
push
movzwl
sub
shld
shl
and
rol
mov
pusha
add
stc
push
bt
mov
jmp
pusha
sub
lea
stc
call
jno
leave
mov
fwait
jo
adcl
jnp
dec
mov
push
pop
rcr
mov
mov
repz
out
xor
sahf
jb
jns
in
in
iret
dec
mov
mov
lret
fiaddl
movsl
push
cmp
inc
popa
subb
int3
fnsave
push
jge
add
imul
sub
incb
jp
fbld
push
outsl
clc
decl
into
push
or
int3
test
mov
mov
add
rcrb
in
in
stos
mov
inc
stc
int
fcoml
loope
and
loope
pusha
ffreep
jae
lds
push
xchg
or
stos
test
rclb
sbb
cmp
pop
mov
imul
in
sub
flds
push
mov
leave
push
gs
push
xor
push
jbe
mov
insb
fcoms
test
or
ljmp
push
adc
outsb
aas
retw
ja
push
in
xchg
push
adc
jmp
imul
scas
mov
add
jno
in
lahf
pop
out
les
mov
or
sbb
ja
adc
mov
jge,pt
mov
lods
inc
or
mov
jle
lods
insl
call
inc
shr
outsl
cwtl
es
push
ja
push
mov
sbb
dec
int
loopne
test
incb
movsb
dec
mov
adc
loope
rcr
xchg
cmp
mov
aaa
divl
add
xor
push
aam
push
push
aad
mov
jnp
or
cs
jns
xlat
shrb
icebp
pushf
imul
in
lahf
lahf
ss
jecxz
insl
popa
lea
ds
jp
add
outsl
mov
pushf
dec
dec
test
cmpb
xchg
out
sub
jb
rolb
add
out
in
lods
movb
imul
bt
pusha
cmc
add
push
pushf
lea
jmp
jmp
mov
jno
aad
lcall
xor
nop
ret
inc
add
fwait
pusha
call
and
dec
fsts
mov
dec
sbb
add
in
push
iret
dec
mov
mov
stc
mov
xor
or
ss
mov
fucomi
inc
pop
jle
push
movsb
or
pop
sbb
mov
sub
lea
push
inc
or
popf
lahf
push
add
loope
fstpt
sbb
enter
xlat
pop
fsubs
push
fiadds
daa
sub
adc
loope
mov
mov
rol
movb
sbb
sbb
push
pop
pop
sbb
stos
mov
movsb
dec
es
lcall
icebp
and
mov
xor
lods
inc
cwtl
add
inc
ja
inc
mov
add
pop
sub
push
sahf
xchg
jnp
int
or
add
pop
add
mov
in
add
inc
xor
jno
out
outsb
xor
iret
mov
outsl
mov
outsb
and
test
ret
cmp
cwtl
fcomps
jb
stc
jcxz
je
push
pushf
fs
mov
lcall
into
enter
fdivl
mov
jo
xor
sbb
sub
imul
cmp
addb
add
movb
lea
call
jmp
movl
push
push
lea
jmp
dec
clc
jae
pop
loopne
sbb
shll
ljmp
fldenv
lds
movsb
xor
mov
push
iret
dec
adc
dec
int
bound
ja
mov
add
sbb
enter
sub
loope
pop
adc
push
call
jno
stos
or
pop
lods
sbb
hlt
movsl
int
mov
ficompl
jae
jae
or
push
mov
pop
ftst
sub
stos
fcomps
xchg
jo
mov
ljmp
test
lods
leave
jns
pop
lret
sub
repnz
pop
insb
pop
cld
movsl
outsb
pop
mov
push
adc
pop
adc
xchg
ficoml
incb
hlt
lods
jl
xor
cmp
fcmovu
int
scas
sbbb
push
mov
aad
cwtl
sti
into
jno
push
sbb
ret
add
sub
xchg
icebp
inc
lea
pop
xchg
adc
lods
ja
seto
js
daa
mov
popa
cmpsl
jne
cmp
jnp
hlt
mov
and
dec
xchg
and
sbbl
mov
pop
xchg
dec
or
dec
test
aad
push
adc
or
orb
fs
jmp
push
movb
pusha
lea
jmp
push
adc
movl
movb
push
lea
jae
stc
pop
shl
lea
pop
jmp
cwtl
lea
pusha
lea
call
jmp
movl
movb
pushf
pushf
pushf
movl
push
movb
lea
jmp
xchg
pop
lea
pop
out
in
xor
mov
int3
mov
mov
iret
jl
data16
sbb
jmp
cmp
inc
out
sub
dec
inc
cmpsl
dec
out
fimull
mov
data16
hlt
or
cmpsl
leave
or
out
test
xor
mov
mov
dec
mov
jae
cmp
roll
aas
xchg
or
jle
cmp
lret
adc
and
imul
jno
addr16
or
jb
in
cmpsb
imul
xchg
mov
xor
lahf
pop
hlt
shrb
orl
cmp
cld
ds
xor
jo
jl
cmpl
dec
jnp
bnd
mov
mov
mov
stc
jle
sub
hlt
sbb
test
inc
in
sub
fildl
movsb
push
xlat
xchg
fdecstp
dec
xchg
ret
aaa
test
loop
and
jl
cld
jp
cmp
mov
lret
out
cmp
ret
inc
je
test
or
mov
pop
fwait
call
imul
mov
adc
add
mov
mov
push
adc
das
out
data16
fwait
push
jmp
add
jne
loope
daa
and
gs
test
add
and
in
hlt
je
add
mov
push
lea
jmp
not
setge
lea
jmp
lea
jb
sar
sar
cmp
movsbl
call
xor
xchg
aas
pop
push
xor
adc
insb
jge,pn
iret
add
and
jge
inc
xchg
pop
push
adc
fs
push
outsb
inc
stc
sub
sbb
xchg
inc
dec
scas
cmp
std
int
jg
pop
mov
idivl
dec
xchg
stos
hlt
cmc
js
jne
mov
push
pop
mov
test
cwtl
je
addr16
xor
gs
and
lds
jno
ja
dec
inc
test
sarl
out
xor
mov
xor
add
clc
and
add
add
cmp
insl
lea
pushf
stos
pushf
mov
sub
das
stc
incl
mov
add
jp
in
dec
xchg
jmp
or
sub
sub
jo
mov
push
repz
jle
in
fwait
cmp
mov
in
bzhi
mov
clc
lret
sti
cmp
xor
stos
data16
jno
cmp
add
aas
decb
les
sbb
cmp
and
call
pop
addr16
fs
add
xchg
aaa
mov
repnz
fsubr
call
mov
cmp
es
adc
mov
jae
xchg
and
lods
inc
movsb
sbb
insl
les
add
mov
jne
cmp
dec
ret
orb
fmul
pop
xor
scas
jb
jns
xor
roll
movsb
push
cmp
push
ljmp
and
sbb
jae
int3
inc
loop
jae
adc
cmpsb
movzwl
mov
popf
xchg
daa
es
xor
inc
cmp
xorl
mov
add
cmp
cmp
lea
mov
jmp
cmpsb
mov
push
mov
jno
mov
xor
or
xchg
inc
jbe
sbb
popf
imul
push
xchg
mov
jb
jb
mov
mov
add
xadd
xor
dec
mov
lea
shld
rcr
mov
bt
add
bsr
shr
dec
xadd
call
repz
leave
cmp
lret
jecxz
and
inc
cmpl
out
inc
jno
jo
pushf
xor
test
dec
icebp
sbb
inc
fisubrl
int
cltd
loope
jno
xlat
mov
imul
jmp
cmp
sub
inc
int3
adc
dec
cmp
mov
or
push
icebp
pusha
push
push
pop
push
fistl
fwait
cwtl
fcompl
pop
cmp
or
fildl
stc
sub
das
cwtl
cmp
movzbw
jmp
xchg
jle
stos
cmp
xchg
int
cld
fbld
std
ret
ret
mov
outsl
leave
stos
test
push
mov
sbb
add
xor
inc
jmp
insl
and
dec
mov
outsb
mov
pop
xchg
hlt
fmul
inc
mov
fs
mov
dec
cmp
mov
inc
icebp
cltd
sub
stc
mov
addl
movsb
push
jecxz
dec
sub
syscall
arpl
out
aad
inc
xchg
cmp
stos
mov
push
imul
int
sbb
xor
jge
sbb
cmp
xor
mov
sub
jo
push
gs
push
add
mov
sub
pop
or
sub
mov
frstor
or
sbb
imul
sahf
jp
clc
inc
setne
rcl
pop
aam
movb
push
jo
inc
dec
mov
jne
sahf
xchg
push
scas
je
ja
cmp
outsb
jle
cld
loope
jno
mov
push
das
cmp
push
pop
push
dec
jmp
jmp
loop
push
add
cwtl
sbb
in
outsb
cli
jbe
add
xchg
fsts
shrb
fsubl
jmp
xchg
int
pop
push
rclb
rclb
push
adc
dec
adc
xchg
rorb
dec
mov
add
inc
idivl
cs
jmp
or
inc
and
jae
inc
int
jge
stc
fdivrl
fiaddl
pop
dec
std
mov
push
nop
push
push
push
into
js
pop
ds
dec
push
lret
xorl
loop
mov
faddp
mov
cwtl
inc
and
data16
out
jl
mov
jmp
clc
mov
mov
mov
xor
movsb
push
jg
push
jmp
popf
rdtsc
nop
call
inc
and
jp
sub
inc
push
lret
add
sub
inc
xchg
pop
js
addl
test
rcrl
mov
dec
dec
out
hlt
loopne
lret
bts
sti
fidivrs
sub
cmp
xchg
push
fcomi
push
ds
divl
icebp
dec
int
sahf
pop
push
inc
ss
dec
dec
movsl
jo
ja
fcomps
out
mov
push
pop
lcall
psubusb
fsubrl
sub
clc
mov
add
mov
cli
ljmp
jne
cs
cli
sub
pop
push
push
mov
out
and
add
enter
sbb
aaa
loope
lret
inc
les
xchg
loope
jnp
gs
and
repz
jnp
lret
inc
cmp
jge
out
iret
insl
repnz
push
dec
sub
jp
stc
cmpl
aaa
mov
xlat
sbb
add
test
arpl
stos
mulb
je
imul
mov
ds
cli
fidivrs
fwait
pop
repnz
ds
push
mov
incl
push
mov
inc
in
out
std
mov
push
ret
jmp
xchg
icebp
sti
mov
aaa
jbe
mov
aaa
push
ja
pop
leave
scas
jecxz
fiadds
push
rolb
push
jo
adc
xchg
push
js
mov
dec
jo
or
mov
inc
mov
xorb
sbb
arpl
jne
insl
mov
add
idiv
inc
mov
iret
outsl
add
icebp
mov
or
sub
imul
sub
sub
ret
cmp
imul
jp
insb
xchg
shl
sarb
test
out
jno
je
mov
fwait
stc
ja
mov
jbe
mov
adc
push
ja
sub
nop
mov
bound
sahf
inc
add
lret
or
inc
inc
mov
add
add
push
adc
push
adc
cwtl
std
mov
enter
add
pop
fcoms
sbb
push
rcrb
js
out
add
or
cmc
or
shlb
or
push
mov
loope
sti
sbb
xor
rcll
or
aam
inc
sbb
jge
and
jge
or
inc
adc
push
push
xor
divb
cmp
inc
or
dec
cmp
repnz
xlat
push
add
pop
xchg
push
xchg
sbb
call
lods
or
bound
add
jecxz
pusha
in
cld
ret
icebp
inc
push
add
sub
inc
sbb
inc
jns
sub
mov
inc
sahf
sbb
push
aad
jae
cld
in
add
clc
out
and
cld
sub
inc
ret
inc
sbb
mov
mov
jge
in
xchg
xchg
pop
popf
fsubs
stos
lock
outsb
sti
ss
add
jns
out
mov
call
mov
sub
jl
and
loop
push
sub
push
repnz
inc
outsb
mov
cmp
insb
xchg
rcll
aad
and
sub
sbb
pop
pop
ja
bound
fwait
scas
cmp
es
cmp
hlt
xchg
js
addr16
push
jnp,pt
insb
es
dec
push
cli
add
out
out
pop
mov
jbe
sti
pop
add
fadds
sar
xor
lea
pusha
push
lea
call
call
cmp
call
movl
pushl
call
fucomip
sti
ret
inc
les
dec
add
icebp
push
or
pop
sbb
push
imul
mov
insl
iret
inc
xor
nop
xor
subb
sbb
mov
pop
dec
xchg
ret
add
sub
add
mov
loop
cld
repnz
xchg
andl
push
xor
rclb
pop
add
outsb
pop
ds
inc
jbe
mov
cmp
jne
cmp
in
jo
fxch
sub
add
push
pop
scas
adc
inc
ficompl
adc
and
cmpsb
sub
fldl
movsb
pop
pop
sub
in
xor
lcall
setbe
pop
pop
fmul
dec
insl
add
idivl
dec
repnz
sub
pusha
arpl
cmp
sbb
push
push
shll
lea
jle
dec
jmp
in
mov
movsl
and
das
push
sub
hlt
inc
push
sbb
dec
xlat
xadd
orb
xchg
fcoml
cmp
pushf
daa
scas
repz
clc
js
add
xor
test
sbb
fdivl
add
mov
or
popl
or
cld
mov
mov
sbb
in
push
push
push
sbb
bound
in
xor
mov
movsb
pop
and
or
sbb
dec
mov
jecxz
daa
and
insl
scas
xor
ret
les
fbld
lock
cmp
shlb
aam
pop
mov
inc
cmp
push
lret
mov
into
cs
pushf
fs
int
inc
daa
in
fwait
sub
popa
xor
in
inc
sub
daa
lahf
push
xor
add
push
das
add
dec
or
mov
fcomps
movsb
out
test
dec
imul
out
icebp
or
push
sarb
jle
inc
lret
aad
je
adc
adc
mov
fdivl
mov
cmp
mov
pop
mov
iret
jg
ret
int
fldl
sti
jl
xor
xchg
popl
mov
adc
pop
pushf
mov
xchg
mov
push
xchg
mov
mov
mov
sub
sub
fcomps
rorb
dec
loope
jo
jne
mov
sbb
movsb
pop
cmp
mov
sub
mov
aas
fidivrs
cmpsb
push
jp
xor
mov
dec
imul
xchg
imull
sub
iret
sbb
out
add
mov
lock
xor
inc
lods
inc
sti
adc
test
stos
in
sub
pusha
add
xchg
dec
fucomp
leave
int
adc
sub
sbb
mov
movsb
pop
cmp
sub
jecxz
int3
cmp
or
sbb
and
popl
mov
test
xor
xchg
push
cmpb
int3
jl
dec
aam
push
aam
push
pop
pop
pop
movsb
pop
out
not
push
clc
pushf
ror
call
arpl
bound
aas
pop
in
ljmp
mov
idivb
rclb
fwait
stc
mov
lea
imul
jae
xchg
lock
hlt
in
mov
add
inc
pop
ret
mov
push
push
xor
call
pop
jno
loopne
scas
or
mov
pop
pop
pop
imul
push
mov
bnd
ss
adc
lahf
pop
idivb
sbb
mov
jb
mov
xchg
adc
fwait
and
or
loopne
adc
sbb
and
lods
popf
mov
cmp
sub
or
sub
fsubrs
cld
jecxz
jle
mov
shrl
icebp
jo
lahf
in
mov
outsb
xor
in
sub
cs
ss
xor
cmpb
test
negb
fstps
add
dec
rol
in
rolb
xchg
icebp
out
xor
jl
lea
aas
popf
cmp
pop
stc
sub
mov
pop
push
loop
inc
cmpsl
clc
sub
je
or
cld
das
aas
lock
mov
testb
adc
jae
into
fs
imul
lahf
ret
push
jno
mov
dec
fsts
ret
and
pop
adc
jb
sbbb
cwtl
fsubl
das
xor
testb
push
call
scas
adc
push
in
xor
add
mov
mov
sub
shr
add
call
clc
pop
ret
and
push
in
iret
lret
adc
jmp
jge
bswap
rcrb
push
jmp
push
pop
mov
sbb
cli
push
push
pop
mov
jge
add
push
or
pushf
sahf
sub
xor
loopne
ret
jno
ljmp
jns
jmp
into
mov
pushf
xor
and
adc
dec
and
mov
xchg
cli
xchg
xor
or
popf
sub
int
push
xchg
lea
into
roll
and
jne
iret
mov
sbb
xchg
cltd
movsb
addl
dec
fistpl
mov
js
cmp
push
sahf
and
mov
and
mov
xor
lds
mov
dec
dec
push
in
stos
data16
push
rcll
lds
ret
sbb
addb
push
imul
pusha
repnz
fs
sbb
out
mov
mov
test
dec
orb
fcoml
mov
mov
in
push
pop
ja
out
pop
push
cmp
popf
mov
and
rcrb
add
cmp
mov
add
dec
sbb
das
and
sbb
inc
xchg
or
aad
sub
lahf
lret
fwait
icebp
adc
and
es
cmp
jnp
cmc
jecxz
addr16
cmpsl
or
mov
pop
sahf
std
gs
add
add
leave
xchg
out
fs
adc
push
fldt
andb
lret
dec
cwtl
sbb
lret
out
dec
ljmp
pop
xor
andl
mov
mov
xor
mov
bt
sub
pusha
cmp
pushf
cmp
call
imul
stos
scas
mov
xor
movsb
mov
push
ljmp
dec
adc
int3
lret
cmp
test
pop
push
dec
push
xor
mov
xchg
mov
jl
cmpsl
mov
int
out
xor
xor
mov
mov
inc
mov
pop
cs
movsbw
setne
mov
inc
test
cmp
stc
sub
rcr
adc
mov
aaa
daa
call
popf
cmp
jb
dec
sub
lods
roll
pop
push
into
aad
int
adc
fstpt
ja
sub
loop
jge
lods
xor
rorl
add
je
aam
cwtl
jmp
into
dec
or
call
shl
les
gs
fsub
inc
out
fidivl
es
xlat
xchg
stos
int
idivb
inc
lret
pop
dec
push
jae
dec
rolb
cmp
ret
out
mov
sub
int3
jmp
xchg
xor
mov
test
sbb
and
out
icebp
mov
mov
add
mov
scas
pandn
gs
ljmp
ds
das
out
outsl
inc
pop
testb
jbe
lods
jae
out
mov
and
sub
mov
fiaddl
sarb
cmp
out
adc
or
sub
lea
fwait
jb
fdivrp
push
xchg
in
mov
ror
mov
pusha
jg
mov
jo
aad
ficoml
fsts
jge
popa
popl
out
popf
sub
xchg
subl
mov
sub
lds
movb
or
aas
mov
movsb
gs
inc
pop
or
mov
sti
cmp
pop
mov
in
adc
xor
mov
imul
and
cs
pop
cmp
in
leave
sbb
lea
adc
outsl
outsb
insl
mov
inc
jg
test
popa
inc
cmp
adc
in
push
cs
int
push
jl
sbb
leave
push
and
xor
and
jmp
inc
leave
sub
dec
xchg
pop
xor
testb
adc
ds
mov
push
outsb
xorb
sub
xor
cmp
dec
dec
push
xchg
push
push
xchg
shlb
mov
push
dec
notl
mov
sub
mov
dec
mov
mov
push
in
jns
movsb
popa
fbstp
xor
pushf
push
adc
sbb
dec
bound
fmul
sub
int
imul
push
jl
add
xchg
imul
xor
movsb
add
cmp
push
pushl
lea
ja
pushf
imul
clc
call
push
pop
push
out
jb
arpl
and
cmp
in
iret
cmp
sub
dec
andl
inc
push
jmp
sarb
insb
add
cmp
push
mov
fistpll
mov
int
xchg
sbb
adc
fistpl
into
stos
mov
xor
cli
cli
aaa
xlat
cmp
sub
mov
mov
add
push
push
add
rorl
fcomi
pop
mov
dec
push
inc
into
dec
dec
push
inc
jg
popa
sar
mov
dec
movsb
mov
xchg
das
fcmovnu
imul
stos
push
sbb
xor
cli
xor
mov
lea
movd
push
pop
cwtl
push
cltd
and
cmp
roll
imul
adc
sub
lea
aad
sub
add
add
jmp
mov
cmpsl
js
lea
jmp
pushf
cmc
add
pushl
lea
jmp
inc
and
fwait
clc
jno
sarb
xchg
adc
lea
cwtl
scas
xor
rclb
test
jl
inc
and
sbb
aam
out
jle
mov
sti
cmp
or
pushf
pop
cmpsl
or
rep
in
xchg
and
scas
push
fistps
push
sbb
xchg
repz
push
push
mov
mov
or
inc
rorl
fdivrl
or
add
and
mov
mov
in
test
pop
sbb
sub
xchg
add
data16
sub
lret
push
int
add
sub
cmp
mov
adcl
sub
shlb
sub
fcomp
hlt
mov
in
add
outsl
inc
push
shl
fisubs
jnp
push
mov
ficomps
aas
decb
add
int
inc
mov
dec
test
stos
add
dec
inc
js
fwait
lea
pop
jns
cli
stc
add
adc
imul
pop
in
mov
das
lcall
add
aad
es
add
std
push
aaa
hlt
std
pop
daa
bound
bound
stos
inc
jbe
mov
xor
lea
adc
inc
idiv
rcrl
jp
mov
aam
xor
dec
xchg
cs
jp
cmc
mov
stos
mov
clc
ds
rcll
imul
inc
and
mov
mov
mov
mov
pushl
ret
daa
push
fisttpll
out
pop
add
out
push
mov
sti
in
fsubrp
insb
cld
add
shlb
das
push
sub
jb
lea
push
fs
sbb
mov
jmp
pop
imul
call
lret
mov
push
mov
stos
mov
jge
lcall
psubq
pop
jge
mov
xor
add
add
xchg
add
cmc
ror
movb
lea
jne
push
push
inc
call
dec
cs
loop
xor
push
sbb
in
call
pop
xchg
push
cmpsb
jnp
cld
mov
out
addb
stos
mov
push
mov
jp
sbb
imulb
sub
lea
ja
ret
test
ret
dec
jmp
mov
insl
nop
pusha
or
mov
mov
fldenv
loope
add
mov
lret
inc
cmc
inc
inc
jp
mov
into
xchg
fwait
mov
xorl
clc
mov
dec
cmp
lock
push
decb
outsl
xor
xchg
push
xchg
adc
jmp
and
or
add
into
lcall
into
jg
and
leave
add
pushf
jo
div
repz
ret
inc
pusha
shlb
push
mov
lds
xchg
sub
or
adc
fsubl
outsl
mov
xchg
push
or
jae
mov
xor
icebp
cmp
adc
dec
test
movsb
push
sbb
cwtl
ljmp
sub
pop
push
push
push
frstor
repnz
xchg
pop
lcall
out
mov
cli
push
sarl
mov
jecxz
test
dec
jmp
and
imul
mov
out
and
rep
pusha
loop
out
lock
arpl
mov
mov
sahf
cwtl
xlat
or
push
or
mov
xchg
xor
and
aam
rcll
data16
scas
insl
jae
flds
movsb
push
test
cmp
add
cmp
sub
pusha
call
pop
stos
ljmp
dec
das
cmp
mov
mov
stos
dec
mov
cmp
mov
inc
jp
rorb
idivb
xor
shl
rcr
push
xor
pop
xchg
or
sub
jae
bound
inc
xchg
xchg
jb
jmp
jbe
xchg
inc
cmp
bound
sbb
mov
dec
rolb
insl
out
jno
add
push
xor
xchg
lea
setb
arpl
inc
add
mov
and
xor
pop
aad
or
mov
sarb
xchg
fucomi
out
mov
jnp
lds
js
sub
mov
xor
xor
mov
adc
xchg
inc
enter
cmp
xor
adc
xchg
mov
mov
inc
ficompl
pop
fcoms
in
dec
push
cmpps
in
pop
addr16
dec
fdivrl
mov
stc
inc
push
dec
or
aam
ds
xor
enter
pop
lods
push
loopne
rcll
rcll
stos
xor
pop
xchg
jle
mov
push
pop
mov
inc
cltd
or
test
mov
add
imul
pop
sbb
sub
mov
jne
shll
xchg
push
adc
mov
insb
jb
add
sbb
and
jb
cmc
push
movb
cmp
jmp
cmpsl
stc
mov
mov
cmp
add
test
jl
movsl
int
pop
xchg
into
xchg
call
push
stc
les
movsl
sub
aaa
orl
aam
daa
xchg
xchg
cmc
insb
dec
pushf
pop
push
xchg
jp
pop
mov
stos
cld
pop
aad
xor
js
sub
inc
call
imul
psrlw
mov
add
jle
add
add
push
gs
dec
push
xor
aas
xlat
push
push
js
loopne
mov
pop
outsb
jbe
push
inc
lock
pop
or
cmpsl
sub
pushf
test
aad
and
insb
or
pop
sbb
popa
inc
in
shll
jbe
and
mov
add
fldl
jb
mov
and
decl
add
nop
scas
leave
dec
xchg
cmpsb
aad
cmp
and
jg
cwtl
insl
or
mov
loop
stc
nop
dec
sub
fbld
divl
jle
lret
call
mov
pop
xchg
add
jge
clc
test
call
adc
sub
push
cmc
std
stc
jp
or
or
cld
pop
xchg
jne
xor
movsl
orb
imul
cmc
addl
out
xchg
dec
cld
adc
adcl
aam
div
push
inc
mov
jbe
inc
fsubp
jg
push
lea
add
xor
out
mov
mov
xchg
cmp
stos
pop
xchg
std
push
fucomi
xor
dec
or
mov
mov
jno
mov
and
aam
cmp
jl
jns
cld
or
inc
nop
fldenv
xor
movsb
outsl
mov
inc
push
shr
sub
movsbw
mov
shl
sub
bts
rcr
pusha
sbb
mov
rcl
dec
mov
mov
rol
xor
add
lea
mov
aaa
sub
movzbw
pusha
pushf
not
lea
jmp
mov
or
push
xchg
adc
loopne
pop
add
lea
in
andb
mov
mov
xor
jecxz
adc
cli
cmp
loope
jb
mov
xchg
lcall
mov
mov
fidivrs
mov
in
dec
test
mov
ss
lds
dec
lds
add
roll
and
inc
stc
jl
test
adc
and
scas
int
daa
pop
cwtl
cmpsl
jnp
inc
cmpsb
xchg
pop
xor
mov
cmp
and
sbb
sub
stc
inc
mov
add
sarl
mov
mov
push
pushl
movw
cmpb
call
sub
add
or
fprem
xor
stc
inc
lret
or
mov
stos
lahf
jne
cmp
mov
sbb
push
push
mov
jp
je
mov
inc
or
xchg
and
pop
shrb
test
mov
jns
push
daa
jnp
jae
enter
cltd
dec
and
stos
adc
clc
xchg
rcl
ret
mul
adc
cmp
jb
les
out
ret
aam
dec
stos
lea
push
pop
mov
les
mov
xchg
ret
sub
movsl
and
fbld
in
xor
mov
add
movsb
jo
sub
fimull
add
test
movsl
sub
mov
les
push
pop
ss
cmpb
push
aaa
dec
push
das
stos
adc
push
outsl
add
ljmp
xchg
jnp
mov
mov
jbe
iret
push
test
out
inc
fbstp
popa
popf
adc
inc
imul
fdivrs
mov
les
outsl
xor
scas
out
stos
test
dec
xor
into
dec
rclb
movsb
jo
test
stc
ror
call
xchg
out
pop
cs
out
aad
std
lds
inc
ret
and
lcall
bound
cmp
xor
imull
andb
xorb
or
or
popa
lcall
sub
mov
jle
adc
mov
int
or
ficomps
sahf
jp
jle
bswap
das
xor
outsl
cmp
idiv
or
iret
mov
jbe
movl
and
xchg
xor
sbb
stos
adc
enter
movsb
jno
pop
mov
in
test
mov
xchg
fcoml
fstpl
fldt
mov
loopne
jl
cmpl
sub
scas
cld
cmp
sbb
jne
mov
out
add
dec
je
xor
jmp
fwait
mov
movsl
xor
push
rcrl
lock
xchg
mov
data16
add
aam
mov
adc
lret
inc
movl
inc
push
cwtl
push
movsb
add
icebp
cmp
cmp
xchg
into
cwtl
sbb
adc
cmp
push
stc
jae
ljmp
and
shl
std
ljmp
cmp
jns
shlb
scas
push
shll
xchg
ja
inc
push
sar
sub
or
call
add
or
pop
mov
inc
push
lret
adc
sub
mov
fidivrl
loopne
ja
testl
mov
lcall
pusha
dec
fstps
popa
gs
lret
bound
mov
outsl
fucomip
cmp
iret
outsb
lahf
cmpsb
pop
fldcw
rol
jbe
andb
push
fdiv
shlb
or
ja
mov
enter
and
nop
mov
into
test
mov
dec
push
xlat
rclb
xchg
aam
xchg
mov
movsb
jae
imul
jns
jne
pushf
mov
dec
add
mov
mov
enter
inc
xchg
lds
mov
sub
das
mov
add
and
fucomip
lahf
leave
jnp
adc
icebp
xor
out
aas
int
mov
jle
test
movsl
lcall
out
imul
push
or
add
incb
pushf
mov
jmp
and
les
out
addr16
loope
aaa
sub
xchg
rorl
sub
sbb
out
or
cmp
pop
dec
ret
xor
lret
and
and
scas
scas
pop
daa
dec
in
xchg
sub
pushf
pushf
jg
mov
mov
pop
call
pop
push
xchg
notb
cmp
sub
push
idiv
cmc
inc
scas
cmp
xchg
fistpl
fs
ss
movsb
je
jge
jmp
jmp
sub
or
adc
and
add
mov
das
icebp
mov
out
ret
div
push
scas
pop
aas
cld
mov
fstpt
daa
lahf
push
jl
or
addr16
inc
daa
in
mov
div
fwait
sub
or
lds
int3
jnp
inc
jle
mov
jne
in
sar
jl
jmp
cmp
push
sbb
push
pop
pop
fsubs
mov
add
lea
jb
push
cmpb
pushf
movb
pusha
call
lea
jbe
cmp
bt
sub
call
push
pusha
lea
mov
pushf
jmp
mov
popf
pop
sti
rclb
js
jbe
lea
fucomp
rorb
cs
and
mov
mov
es
in
lods
push
stos
mov
out
sarb
jbe
or
xorl
test
mov
lods
or
test
rclb
sub
fldcw
lret
jg
cld
dec
adc
stos
cld
xchg
repnz
inc
push
xchg
xchg
xchg
outsl
cwtl
mov
jmp
enter
ds
pop
mov
stos
lret
lcall
rorb
sbb
jne
cli
dec
add
jle
push
add
pusha
push
push
lea
jmp
sub
cwtl
andl
dec
xchg
dec
xchg
sbb
cmpsl
mov
push
xor
jp
fnstcw
xchg
jp
hlt
jo
ljmp
inc
inc
inc
push
fiadds
fidivrs
orb
add
movb
inc
mov
ficomps
and
add
rol
xor
dec
btc
pop
shld
add
adc
test
sub
push
jmp
sub
jge
test
pusha
jmp
mov
cli
xor
jge
out
rorb
inc
dec
or
fsub
mov
scas
push
adc
add
stos
les
cwtl
mov
pop
push
test
dec
rclb
lods
rorl
sbb
jo
push
jno
push
inc
insl
sub
and
add
push
imul
stos
xlat
clc
add
aaa
fcompl
push
data16
push
int3
add
cmp
iret
or
inc
and
pop
fcmovnb
mov
outsb
sub
mov
mov
mov
xchg
scas
lahf
pusha
sbb
popf
xchg
pop
data16
outsb
movsl
and
stc
sti
inc
jle
ret
orl
leave
jmp
ret
add
push
movsb
push
dec
adc
xchg
loope
pop
addr16
add
sbb
dec
sub
cmp
or
leave
orb
ret
pop
mov
inc
or
mov
adc
lahf
mov
loop
rorl
dec
les
jb
add
push
inc
or
sbb
imul
adcl
je
pushaw
imul
icebp
jnp
mov
insl
mov
jno
sbb
loop
or
adc
pop
jmp
add
sahf
imul
jecxz
jmp
rolb
cmp
mov
lods
enter
and
sarb
hlt
sti
jae
adc
aas
push
xor
lcall
xor
sahf
sub
mov
add
lcall
jmp
push
push
inc
and
jb
or
adc
sahf
cmpsl
insb
jbe
insb
insb
lret
jmp
and
sahf
stos
dec
leave
dec
inc
xorl
push
cmp
iret
xchg
dec
leave
sub
inc
push
mov
aaa
push
sub
sbb
rcr
inc
mov
mov
cmc
ljmp
mov
mov
int3
dec
imul
cmc
inc
or
lahf
dec
mov
insl
call
sub
xor
lds
inc
add
ret
shlb
mov
stc
sti
xor
mov
shlb
mov
cmp
aaa
icebp
insb
cmp
scas
push
adc
dec
fstps
mov
imul
outsl
data16
jge
popa
aad
push
shlb
sub
or
mov
negl
jo
mov
add
mov
int3
fwait
mov
xlat
xlat
sbb
icebp
pop
xchg
mov
das
mov
movsb
js
test
les
imul
inc
loopne
rcll
push
into
mov
inc
mov
sub
and
and
adc
stc
dec
inc
enter
jb
mov
call
je
ljmp
jmp
fdivrl
cmp
push
push
shlb
decl
xlat
cs
xchg
cmpsb
pop
fiadds
xchg
lods
mov
mov
mov
sbb
xchg
lds
sbb
mov
mov
inc
mov
shll
mov
mov
jbe
or
enter
lcall
in
icebp
lret
mov
insl
inc
or
sbb
test
inc
push
ja
mov
mov
into
rorl
xchg
sbb
and
dec
insb
fnstcw
lea
xchg
les
rol
lods
xor
lret
mov
jmp
into
ds
adc
adc
sub
xor
pusha
jnp
int
mov
add
aas
insb
push
mov
aam
rclb
push
mov
sub
fcomps
mov
leave
pop
xchg
lods
mov
outsb
into
xchg
fwait
aaa
fcomip
icebp
testl
xchg
jne
movsb
jp
sub
dec
not
clc
mov
rol
shrd
bsf
add
lea
jb
mov
push
cwtl
setb
setge
jmp
add
dec
outsl
popa
fs
imul
add
imul
ja
inc
sti
cmp
leave
test
mov
mov
les
and
aam
add
pop
addb
in
mov
cmp
movsb
movsl
mov
ds
cmp
ljmp
dec
mov
pop
dec
jmp
pop
adc
lahf
ficoml
xchg
xor
test
mov
andps
pushf
addr16
push
jl
repz
call
movl
pushl
movl
pushf
lea
jmp
sysexit
mov
mov
cmp
and
add
mov
sub
cmp
fsubs
arpl
cmpsb
and
imul
and
fstl
in
fwait
pop
xchg
in
aas
outsl
gs
or
ret
shrl
push
cltd
push
pop
xor
arpl
xchg
push
imul
xor
lock
mov
jl
fisubrl
std
sub
scas
xor
scas
jle
movb
test
pusha
not
mov
pushf
push
lea
je
cwtl
lahf
movsbw
lea
pushf
lea
call
pushf
adc
pushf
pushl
pushl
pushf
lea
jae
neg
pop
not
shl
inc
adc
pop
movsbw
call
pushf
lea
je
stc
bsf
add
dec
jmp
int
push
pusha
push
cltd
movsb
cmp
inc
jnp
inc
mov
adc
rcll
loopne
lahf
jg
leave
int3
fisubl
dec
push
mov
mov
and
push
iret
pop
in
lods
test
jl
and
mov
lea
mov
pushl
pushf
movl
lea
ja
pushf
lea
jb
clc
cmc
cmpb
jmp
dec
cmc
cmpsb
les
ljmp
xchg
sub
fcmovnbe
and
arpl
ljmp
xor
dec
xor
cli
cmp
lret
inc
push
js
jae
icebp
and
pop
inc
xchg
cli
in
scas
int
loopne
or
shrl
jo
clc
stos
sbb
gs
pop
xor
xchg
cmp
inc
ss
dec
mov
mov
movsb
and
in
into
jp
jge
cmp
lret
popf
and
sub
push
scas
pop
adc
cmp
push
outsl
lods
jae
cmpsl
fs
not
inc
jb
mov
ss
repz
xor
shrb
lds
cwtl
std
jno
stos
outsb
inc
mov
incb
mov
pop
cltd
or
arpl
sub
gs
rcrb
out
sub
stos
mov
jmp
dec
mov
mov
sahf
sub
inc
mov
push
adc
cmp
mov
mov
movsl
les
jb
es
mov
cmp
ja
adc
addb
mov
inc
jno
dec
mov
lret
jecxz
arpl
addr16
pusha
popf
cmp
enter
outsl
sar
sbb
ja
pop
inc
pop
adc
pop
cmp
cmpb
adc
xor
and
out
mov
inc
iret
pop
push
mov
jecxz
add
pop
and
dec
imul
sub
fbld
dec
inc
bound
data16
out
ljmp
int
add
inc
and
mov
shll
add
pop
in
pushf
lea
jmp
adc
mov
test
bndldx
xchg
sbb
adc
or
cmp
mov
jp
bsr
pop
inc
sbb
adc
ret
loopne
ja
movntq
je
mov
lods
or
stc
jp
sti
fisttps
mov
push
fisttps
dec
or
jo
notl
stc
cmp
mov
adc
lret
sbb
pop
cmpsw
sub
jno
in
dec
cmp
orl
inc
ljmp
cmpsl
fsts
push
pop
xlat
adc
movsb
jle
insb
call
lea
je
lea
bswap
bswap
lea
pushf
push
pushf
lea
jnp
call
pusha
call
sbb
push
setge
jmp
mov
call
pop
pushf
push
movl
jmp
pop
xor
scas
sbb
mov
dec
adc
push
aad
fisttpll
dec
int
push
aas
push
inc
bound
cmp
or
dec
clc
test
jp
jle
or
xor
in
xor
sbb
pushf
bound
cmp
je
out
inc
mov
out
mov
movsb
inc
mov
push
cmp
addl
add
inc
and
cmp
aaa
inc
add
mov
push
pushf
pop
push
mov
mov
mov
push
aaa
sub
test
and
mov
data16
imul
push
adc
popa
sub
in
lcall
sbb
push
sarb
clc
xchg
hlt
cmp
cwtl
push
cmp
and
int3
lret
sbb
xchg
pop
mov
add
jecxz
push
mov
dec
outsb
outsl
mov
js
mov
ret
or
fmuls
jge
enter
aas
lahf
mov
bound
test
jo
cmp
and
sbb
cmpsl
push
mov
js
mov
adc
push
repz
and
je
mov
push
imul
es
jb
fiaddl
sbb
cld
std
xchg
push
not
test
jl
mov
mov
fidivl
push
lret
daa
movsl
ret
mov
jns
aaa
mov
iret
iret
pop
pop
dec
add
jl
mov
fdivs
jmp
dec
out
nop
dec
jmp
shlb
push
sub
cmp
arpl
or
cmc
cs
mov
cmp
or
into
iret
jo
mov
fiadds
out
shl
mov
sbb
push
push
xor
or
testl
ret
adc
mov
imul
pop
and
or
les
addl
pop
add
xchg
popf
mov
ds
shll
push
cld
mov
or
std
mov
jge
flds
out
jo
jb
inc
dec
testb
pushl
les
lds
mov
adc
hlt
loope
mov
inc
sbb
jg
add
push
ss
sub
mov
nop
cmp
xor
or
or
cmp
dec
mov
stos
xor
insl
xor
in
sti
adc
aaa
loop
js
jle
addb
cwtl
loopne
nop
fwait
pop
inc
movsb
stos
out
or
out
ds
mov
movsl
fsubrl
lahf
inc
aas
xchg
mov
stos
cmp
mov
jg
inc
push
xchg
xchg
pop
sub
out
lds
test
sub
loop
jmp
in
xchg
hlt
mov
push
xchg
pop
xorb
cli
mov
fmull
enter
aad
daa
xor
jge
cmpsl
dec
mov
or
xchg
mov
inc
cwtl
stc
ret
sahf
mov
shrd
stos
inc
or
mov
mov
mov
xchg
adc
lods
add
mov
and
inc
sub
shll
xor
dec
out
fwait
add
xor
in
mov
sti
and
jns
movsl
shr
mov
jg
jecxz
hlt
inc
add
xchg
bound
push
lcall
jge
push
and
addr16
nop
loop
shlb
and
pusha
ja
sti
cmc
ds
aad
or
add
scas
sub
inc
push
lea
cwtl
sub
dec
dec
pop
pop
je
jns
sbb
push
das
int3
cld
pushf
xor
out
mov
arpl
je
pop
inc
inc
jle
icebp
dec
add
jbe
divl
orb
aad
sub
pop
or
adc
shll
mov
add
xchg
icebp
push
sbb
xor
repnz
pop
mov
pop
and
fisttpl
scas
fs
adc
jno
xchg
ds
xor
jmp
loop
lods
ljmp
push
xor
push
negl
mov
push
mov
xchg
add
mov
cmp
fwait
or
je
outsb
push
and
push
fimuls
sub
mov
or
push
in
rolb
cld
inc
inc
dec
daa
xchg
rcll
aas
dec
nop
adc
pop
test
or
gs
stos
lret
ret
lods
push
push
push
daa
fisubrl
inc
xor
cwtl
jne
frstor
hlt
adc
jb
das
mov
xor
mov
lods
mov
roll
ret
nop
mov
mov
pop
ror
xlat
cmp
or
dec
xor
jno
mov
in
jae
add
sti
dec
pop
cltd
je
sub
xor
xchg
aad
loop
dec
cld
jns
mov
mov
adc
stos
adc
pop
mov
scas
cmp
movsl
push
mov
jp
out
or
mov
loop
test
sbb
movsb
sti
bound
repnz
xchg
jb
push
cwtl
jb
pop
enter
mov
dec
aam
lea
dec
sbb
mov
shll
sub
enter
cmp
adcb
mov
mov
jmp
mov
out
out
sub
lcall
movb
les
jae
fimull
std
out
mov
inc
dec
and
mov
cmpsl
xor
nop
push
cltd
fistpl
mov
dec
ficoms
mov
mov
ja
xor
sbb
cmp
cmp
inc
pop
or
int3
and
scas
and
adc
jle
xor
and
fildl
push
std
test
push
sti
rcll
roll
add
lret
loopne
rcrl
hlt
iret
xchg
mov
jns
fistps
mov
mov
jnp
jb
dec
push
arpl
mov
or
test
cs
in
test
add
adc
add
or
mov
cmpsl
ss
fldl
out
dec
adc
sbb
enter
or
sub
xchg
addr16
and
adc
xor
sbb
dec
mov
push
fadds
pop
test
dec
divl
in
repnz
jecxz
dec
loopne
fstl
cmp
ds
xchg
rorb
sub
frstor
fcomi
inc
inc
clc
lock
lea
add
repnz
jge
sarb
roll
jne
insl
paddd
jp
aas
push
sub
shlb
mov
lret
in
mov
pop
in
mov
lret
xlat
xchg
push
cmc
or
dec
mov
pop
pop
movsb
and
or
loope
leave
adc
lods
mov
movl
rorb
push
dec
xor
mov
je
jo
arpl
das
or
inc
and
pusha
test
aam
cltd
fwait
cmpsl
push
push
and
mov
int3
lock
sub
outsl
stc
pop
ljmp
mov
jge
pop
sbb
add
inc
pop
mov
aas
roll
push
push
jno
popa
paddq
xchg
sub
or
dec
mov
add
scas
sub
stos
mov
addr16
pop
sub
xchg
aam
xchg
dec
push
dec
sti
jge
fs
stc
inc
in
mov
faddl
pop
dec
xchg
lret
cli
scas
adc
mov
popf
lret
jmp
push
or
sub
push
popa
loope
sti
movw
fisubrs
fisubs
fsts
test
xchg
test
adc
fnsave
jae
in
lcall
repnz
push
cs
mov
popa
repnz
mov
sbb
ljmp
mov
je
cli
xchg
stos
out
gs
std
xlat
push
mov
adc
fdivrl
sub
dec
jg
mov
test
sarl
push
add
frstor
pop
pop
in
lea
or
sub
xchg
or
popa
jl
insl
cmc
push
adc
inc
dec
aam
movsl
hlt
xor
arpl
lods
aaa
ds
test
xchg
loopne
lds
ljmp
enter
les
pop
cmp
enter
insl
adc
jbe
mov
xchg
nop
pushf
sub
xor
jge
adc
sbbb
fbstp
testl
shll
aam
xchg
mov
sbb
mov
cmpsb
xchg
sbb
xor
shl
out
scas
dec
inc
mov
mul
cmpl
adc
sbb
and
push
push
and
mov
fwait
pop
ljmp
mov
sbb
ss
aam
inc
pop
cmp
cli
and
test
xchg
sub
fists
push
sub
lcall
dec
mov
inc
xchg
dec
dec
leave
sbb
and
xlat
jbe
pop
add
mov
xor
add
jl
and
stc
sub
jmp
add
cli
xchg
rcl
dec
inc
sbb
add
xchg
jg
test
daa
aam
movlps
lahf
dec
fistpl
jmp
leave
stc
push
scas
push
in
fs
inc
cmpsl
popa
popa
jno
stos
adc
push
fstpt
and
lret
mov
add
xor
or
adc
inc
rolb
test
sub
dec
stos
mov
or
fldenv
push
mov
push
xor
xchg
xchg
es
shlb
mov
mov
mov
imul
xor
fldcw
and
or
lods
movsb
ret
sub
std
xor
leave
rclb
or
mov
push
cltd
popa
ret
jne
pop
test
dec
lods
sub
fldl
dec
movsb
imul
push
daa
jle
js
mov
add
push
movsl
cmc
add
mov
or
out
push
movsl
cmp
or
or
lret
scas
insl
iret
inc
icebp
addr16
mov
test
cmp
mov
mov
push
or
mov
sbb
out
dec
loope
mov
stos
stos
stos
ljmp
jecxz
test
das
dec
icebp
mov
addr16
cmp
lods
sbb
mov
sub
fwait
jmp
ret
xchg
mov
nop
pop
popa
sbb
enter
imul
sbb
lds
mov
push
add
test
in
in
cltd
xchg
out
sub
pusha
and
into
enter
jae
pop
cltd
sub
add
jo
iret
mov
dec
dec
outsb
sbb
adc
in
les
ror
cwtl
ds
mov
clc
adc
nop
cmc
sbb
fcompl
imul
xor
int3
jle
out
cmpsb
stc
mov
int
mov
pop
in
leave
idivb
jne
jne
jne
fldcw
cltd
bound
scas
cltd
push
lods
scas
mov
mov
mov
add
ds
dec
xchg
sbb
mov
shrl
mov
mov
dec
es
iret
sub
adc
out
test
add
push
push
jne
inc
xchg
dec
push
mov
or
and
xchg
jmp
jb
xchg
aas
and
jge
loop
adc
call
cmpsl
cmp
cmp
sub
loopne
fiadds
mov
push
pop
or
iret
adc
mov
out
nop
repnz
lock
jmp
jns
xchg
out
push
adc
mov
iret
lea
xor
jmp
testb
in
out
cli
inc
mov
les
div
pop
jb
fidivrs
and
xlat
jae
jno
and
movsl
xchg
pop
in
fdivrl
fidivs
mov
push
pop
adc
pop
aas
leave
cmc
sub
cld
fwait
jle
xchg
sbb
int
out
sub
fstl
jmp
pop
sbb
mov
lock
sbb
out
pop
testl
or
stc
mov
addb
daa
stc
inc
inc
inc
xchg
outsb
mov
pop
jb
repz
cmpsl
xor
mov
xor
aad
jge
mov
dec
inc
xchg
fst
fcmovu
jnp
push
ret
adc
inc
dec
and
fbstp
outsb
sti
lock
add
mov
mov
and
cwtl
jl
aam
cltd
fcomp
or
cmp
sarl
cmp
lea
jo
stos
mov
jl
pop
xor
into
fimuls
mov
rolb
in
loopne
add
and
jecxz
xchg
lds
jae
mov
addb
fistpl
test
pop
mov
mov
pop
inc
mov
outsl
jmp
js
xor
xorps
jge
push
mov
pushf
movsl
and
repz
mov
and
mov
adc
andl
xorl
cmp
pop
push
mov
jbe
scas
lea
mov
lret
mov
aas
add
fsubrs
push
sarb
cltd
mov
mov
and
cmp
jb
mov
cltd
push
cmp
lcall
sub
movsb
stos
aas
mov
xchg
sahf
fnstsw
insb
xor
jl
int3
lds
into
cmp
outsl
das
std
ficoml
mov
out
pop
outsb
cmp
mov
pop
xor
loop
test
dec
aaa
sub
inc
scas
outsb
push
cmp
mov
jo
out
jns
inc
mov
aad
jns
mov
aas
repnz
out
mov
inc
mov
nop
mov
insb
mov
fcomps
jmp
dec
mov
divps
test
push
nop
push
sub
or
add
and
lea
ljmp
aam
pop
push
sub
inc
push
push
and
mov
in
orl
xor
mov
pop
sub
cmc
ret
or
std
sub
pop
add
test
add
inc
or
cltd
addr16
cmp
mov
scas
sahf
xchg
jnp
sub
jmp
scas
scas
adc
arpl
pop
incb
xchg
add
push
push
in
push
jge
pop
pop
andb
cmc
push
push
cmp
pop
push
xchg
test
gs
repz
sub
dec
movsl
iret
test
xchg
xchg
gs
push
lods
or
and
mov
ljmp
lcall
push
adc
mov
pop
loop
fwait
push
inc
xor
inc
bound
xchg
jae
jb
cmp
jo
test
loope
inc
xchg
or
stos
jle
pop
pop
mov
xchg
in
push
mov
mov
cmp
xor
ljmp
nopl
adc
mov
lock
dec
lret
dec
mov
mov
inc
xchg
inc
rorb
push
test
ret
ret
das
test
mov
pop
sub
push
into
pop
in
sbb
xor
sbb
xor
ss
mov
in
sahf
in
sub
insl
dec
cmpsb
ret
push
push
jbe
sbb
jo
nop
hlt
push
scas
and
fldenv
cmp
ficoml
dec
push
es
sub
push
flds
jmp
jmp
shrl
mov
add
mov
lods
jmp
arpl
fdivrs
lcall
jmp
or
pop
dec
rol
jns
test
test
push
fs
out
jmp
dec
pop
stc
dec
mov
cli
insb
movsb
daa
cltd
mov
rcrb
aas
pop
int
outsb
clc
loope
push
mov
in
jns
mov
cmpsl
into
out
add
ss
rclb
dec
push
imul
xchg
add
fucom
push
pop
inc
jb
mov
pop
in
gs
enter
ds
mov
cmpsl
dec
hlt
sbb
push
stos
es
je
mov
inc
cltd
lahf
mov
and
jns
dec
mov
aad
fisubl
mov
incb
and
adc
or
aam
stos
test
inc
movsl
mov
enter
das
or
aad
repnz
je
das
or
xchg
int3
fs
movsb
daa
pushf
dec
repz
jmp
adc
cmc
push
xchg
repnz
jle
out
and
xchg
pop
or
sub
std
add
jnp
gs
mov
inc
dec
pushf
fs
jne
dec
xor
ds
notb
jp
cwtl
fiaddl
cmp
jl
movsb
cmp
xor
pop
repz
cmp
and
xchg
lcall
aad
mov
adc
aaa
mov
xchg
hlt
jns
repnz
or
loope
pushf
ret
jle
xchg
cmpsb
arpl
mov
loopne
data16
fbstp
xchg
xor
in
inc
bound
jno
popa
jns
cmp
add
hlt
xchg
pop
dec
sbb
je
and
lcall
neg
fildll
pop
or
mov
mulb
adc
xor
or
in
jnp
lods
xor
sahf
fld
inc
push
lea
mov
outsb
lcall
inc
lret
sub
loop
sub
fsubrl
push
adc
loopne
xor
xchg
lret
test
sbb
out
call
push
xlat
fldlg2
adc
cs
or
xor
lahf
movsl
aam
mov
test
mov
in
pop
lret
nop
cmpsl
insl
addl
cld
mov
sti
sbb
lea
ret
ds
inc
mov
add
icebp
push
mov
fnstsw
pop
or
inc
cmp
adc
mov
loopne
xchg
ja
mov
dec
inc
push
outsb
imul
sub
aam
xor
js
insl
es
mov
dec
or
push
lea
fisubl
adc
in
xchg
ja
in
cmp
xor
adc
fsubl
int
dec
gs
in
sahf
repnz
imul
cmp
fcompl
inc
ret
movsl
or
mov
in
jno
outsl
shll
rorl
pop
sub
xor
inc
mov
bound
inc
dec
pop
fwait
jne
call
push
aam
leave
imul
jno
movsl
push
dec
mov
aas
shrl
lret
int3
aaa
mov
dec
es
lss
sub
add
mov
add
xchg
mov
ljmp
mov
cmp
repz
cmp
jg
push
aad
sbb
push
rcl
sbb
cmp
das
leave
repz
pop
insb
jmp
mov
mov
inc
push
in
sub
jns
or
mov
lcall
or
es
or
mov
aad
mov
in
pusha
pop
or
aas
sbb
mov
loope
adc
xor
inc
fs
ret
jno
rolb
sbb
mov
inc
out
fwait
adc
xchg
outsb
rcl
and
push
mov
decb
imull
fcoms
mov
jp
or
sar
loopne
cmp
jbe
sbb
mov
or
sbb
lret
mov
add
and
in
int
loop
faddp
icebp
sahf
lods
cmc
or
mov
mov
test
mov
test
lret
dec
mov
xor
mov
cmp
inc
push
cmp
xlat
inc
pop
mov
rcrl
pop
dec
dec
cmp
sarl
inc
cmp
lret
ds
pop
jge
icebp
push
std
lods
scas
fimuls
imul
cli
pusha
add
lahf
push
nop
nop
movsl
jns
lcall
mov
mov
dec
jb
rcrl
nop
mov
push
repnz
xchg
jge
mov
jecxz
lods
mov
pop
push
pmaxsw
inc
repz
pop
fwait
xor
cli
jp
sahf
unpckhps
mov
cmp
gs
push
push
cmp
mov
inc
push
loop
ret
stos
into
out
xchg
mov
adc
test
sub
dec
jns
mov
in
das
and
es
addr16
cmp
inc
rclb
cmpsl
dec
sub
ds
pop
pop
jp
and
and
jmp
sbb
mov
test
out
mov
xlat
inc
pop
sti
mov
mov
aad
fisubrs
icebp
and
hlt
dec
sar
iret
cs
je
jecxz
adc
lods
leave
stc
inc
sub
or
fwait
sbb
js
add
pop
insl
pop
popf
sub
xchg
cmpxchg
jbe
rorb
sub
test
in
andb
jae
testb
xchg
cli
mov
mov
cmc
leave
fidivs
inc
in
sahf
icebp
aad
and
int
mov
fwait
xlat
cwtl
cli
xor
into
jg
fiaddl
inc
out
seto
and
mov
xchg
jge
lock
dec
outsl
aaa
cmc
pop
lds
imull
stos
push
ds
in
mov
dec
xor
push
add
jmp
aad
jb
aad
fcoml
imul
insb
pop
inc
and
mov
jnp
push
xchg
popf
inc
sbb
cwtl
stc
pop
lock
and
push
mov
pop
outsl
jg
jnp
lds
pusha
les
mov
stos
inc
sbb
cmpsb
negb
adc
jg
sar
clc
into
push
sbb
and
mov
cltd
add
mov
sub
jne
push
sub
cmp
xlat
mov
cmp
rcll
icebp
push
aam
xchg
shlb
scas
orl
jecxz
and
inc
mov
cmp
andb
enter
cmovno
mov
notb
adc
mov
in
adc
shlb
mov
jp
push
pop
jns
sahf
out
fsubs
xchg
es
mov
nop
ja
pop
sahf
pop
fbld
data16
jb
mov
fnstsw
cmp
lcall
jbe
mov
sbb
and
mov
and
imull
lods
rcrl
push
sbb
jb
daa
into
push
sbb
sahf
mov
loope
xor
lods
jb
ds
or
sub
sbb
ror
shl
in
scas
jle
xor
cmpsl
movsb
mov
mov
lea
enter
jne
jo
repnz
cmpsl
sbb
jmp
mov
mov
dec
and
jl
hlt
repnz
rcrb
add
xor
and
orl
out
or
pusha
popf
subb
inc
xchg
nop
pop
inc
pop
test
jecxz
adc
xlat
aam
aad
out
test
idivb
adc
add
mov
xchg
pop
sbbl
or
sbb
adc
add
imul
loope
sub
int
cld
xor
addl
les
mov
xorb
gs
jae
jmp
adc
iret
iret
cmp
ja
outsb
pop
es
or
jg
push
imul
adc
test
mov
rorl
ret
cmp
lods
ja
lret
inc
fsubl
lret
mov
add
into
jmp
mov
mov
fistpll
mov
dec
inc
mov
dec
js
dec
or
xchg
mov
inc
inc
cmp
fisubrs
cmp
dec
fisubs
fs
js
add
stos
outsb
jns
imul
cmpb
in
xchg
cwtl
sub
sti
imul
mov
fsubrs
jge
fabs
ror
test
sbb
ljmp
inc
push
xor
dec
xor
mov
adc
andb
xchg
push
shr
push
cmp
inc
adc
dec
mov
adc
addr16
mov
jl
outsl
cmp
ljmp
inc
popfw
and
pop
test
repnz
jge
mov
pushf
lret
push
pop
and
stos
sbb
sarl
rclb
xchg
push
push
rol
or
dec
and
test
ret
xchg
fs
adc
cmp
xchg
push
mov
pop
mov
adc
mov
fs
cli
or
dec
push
inc
jno
and
push
pushf
or
call
aam
mov
xor
mov
cmc
call
add
test
pop
cltd
xor
pop
sub
int3
insl
adc
hlt
add
jbe
push
sbb
loopne
cmp
push
dec
les
hlt
stc
faddl
sub
mov
jae
push
aas
or
lock
mov
xchg
adc
call
and
add
and
and
adc
jp
cmp
mov
adc
test
nop
pop
mov
sub
dec
pop
and
fiadds
mov
je
xchg
or
cmp
addr16
cmp
sub
out
pop
leave
xor
je
test
and
cmp
sbb
xor
jno
scas
cmpsl
push
lds
insb
daa
fwait
pop
and
int3
inc
les
hlt
or
dec
jle
cmp
dec
sub
push
notl
andl
out
insl
pusha
ficoms
mov
aaa
jge
xor
fwait
push
lret
jae
push
push
add
mov
xchg
add
jo
pop
pop
ljmp
dec
popf
inc
push
mov
std
fdivp
or
pop
sbbb
das
pop
cmp
adcl
iret
add
rorb
xor
ljmp
mov
ret
mov
cmp
mov
jns
add
jne
or
imul
fcoml
xorb
xor
push
stos
sbb
nop
cmp
in
dec
jnp
sub
out
push
testl
aaa
pusha
push
out
clc
ficoml
sbb
pusha
ficoml
inc
pop
popa
jmp
xor
inc
fisubl
jl
orl
mov
ds
dec
jp
dec
cmp
inc
sti
pop
add
call
push
lds
lcall
and
push
pop
xor
lock
js
dec
mov
jae
or
decb
std
bound
dec
and
xor
sub
push
xor
mov
gs
fdivs
cmp
mov
mov
in
lret
pop
ret
mov
dec
mov
sub
cmp
test
loopne
mov
stos
and
or
ret
jae
sub
aaa
mov
arpl
mov
out
out
roll
jns
inc
fmull
or
add
push
pop
inc
xchg
mov
adc
sub
adcb
adc
popf
fisubl
cmp
out
sub
mov
sub
in
cmp
inc
js
inc
xchg
sbb
and
mov
pusha
xchg
les
jbe
dec
packssdw
daa
faddl
lock
gs
ret
int
es
into
in
mov
xrelease
inc
inc
add
cmc
cmc
enter
clc
xor
dec
add
in
icebp
push
stc
arpl
lods
jae
shrl
add
fs
mov
pop
jnp
xlat
mov
pushf
sbb
and
nop
popa
lret
sbb
outsb
push
jbe
dec
stos
adcb
dec
push
jmp
xchg
sbb
or
push
stos
inc
dec
ds
sub
ret
mov
jbe
adc
lods
or
push
push
sahf
mov
jne
or
pushf
mov
test
cltd
aas
pop
aam
or
mov
nop
in
jle
mov
inc
or
lcall
fwait
shl
mov
mov
push
or
out
sahf
fcomps
in
jnp
inc
cmp
mov
add
loope
es
and
repnz
mov
lcall
inc
iret
or
add
shr
aaa
out
lds
rcrl
pop
popa
xor
xchg
out
dec
cmp
jns
aas
out
xchg
cld
jbe
mov
pusha
call
pop
sbb
sbb
and
loopne
out
daa
xor
les
inc
into
out
pop
shll
loope
pop
stos
mov
rcrl
adc
sbb
add
lods
mov
pushf
mov
cmp
add
sub
addr16
xchg
sbb
cmc
movsl
pop
sbb
fcomi
mov
cmp
adcb
hlt
xchg
jecxz
rol
enter
ficoml
mov
outsl
stos
push
in
test
mov
pop
mov
mov
dec
cwtl
fnstsw
cld
inc
or
jp
das
nop
imul
inc
cld
je
out
mov
andb
adc
test
hlt
xchg
test
pop
fldenv
or
jbe
add
or
sbb
cmc
shr
xchg
ljmp
fs
dec
or
fbstp
lds
out
mov
cltd
je
xchg
into
in
mov
loope
mov
jno
xchg
jp
loope
adc
jp
faddp
cmp
jle
test
imul
test
icebp
xchg
xchg
insb
out
or
fdivl
inc
lret
or
test
mov
cmp
stos
stc
ljmp
pop
pop
jno
icebp
in
inc
sbb
push
mov
or
bound
lret
arpl
shlb
dec
and
mov
xchg
push
xor
int
jae
and
mov
lret
pushf
mov
mov
fistl
push
inc
xor
subl
xor
subb
pop
add
jnp
dec
cmp
dec
mov
mov
ja
mov
adc
je
or
dec
or
fstpt
or
aad
icebp
mov
sub
hlt
xlat
int
jmp
pop
cltd
iret
mov
pop
mov
add
or
jl
aas
sub
mov
or
ja
sbbb
add
jmp
cmp
gs
xchg
pop
pop
popa
or
xchg
jbe
xchg
cmpsl
test
js
dec
mov
ss
push
mov
mov
push
repnz
movsb
dec
daa
repz
jp
add
push
mov
out
aam
xchg
mov
pop
inc
shll
clc
dec
inc
hlt
push
sbb
and
cmpb
jbe
fwait
push
mov
shrb
scas
pushl
dec
sub
ffree
pop
jb
fldenv
iret
pop
add
xchg
jns
adc
pop
in
lea
fnstsw
push
mov
add
mul
or
jle
jmp
pop
pop
test
dec
xchg
push
cmpsb
mov
mov
mov
and
lock
xchg
test
loop
dec
test
sti
fisttpll
mov
adc
hlt
or
add
xor
xchg
dec
push
dec
test
bound
sub
sub
inc
jb
sarb
and
loopne
aas
cld
rorb
cmp
outsb
xchg
pop
xor
fnsave
mov
bound
bound
out
mov
rclb
call
pop
jnp
add
push
cs
fadd
aam
push
lahf
dec
xchg
pop
sahf
mov
xchg
xchg
or
jl
adcb
out
add
pushf
or
sbb
lods
cmpsb
test
xchg
push
packsswb
test
xor
insl
push
movsb
adc
jno
jno,pt
jno
cltd
mov
cmp
icebp
ds
xor
es
je
fcoml
cmp
sub
nop
jle
pop
sbb
jb
xchg
les
jne
sbb
shrb
loope
sahf
mov
stc
fwait
cmp
sbb
lea
sbb
sub
lahf
repz
mov
xor
lea
pop
je
push
push
mov
in
jmp
lret
loope
or
inc
push
pop
rclb
and
sub
push
xor
aad
add
add
adc
je
negb
sahf
cld
lods
mov
scas
cld
mov
and
xchg
stos
inc
daa
sub
inc
add
jle
test
mov
pop
icebp
fcomps
sahf
jne
inc
cmp
mov
jg
aad
jge
mov
xor
mov
dec
popa
fwait
roll
arpl
aas
xor
add
imul
sarb
fldl
insb
jge
mov
sub
sub
es
or
stc
jno
cmp
sahf
test
aad
add
and
add
or
mov
js
inc
inc
mov
pop
sbb
addr16
or
bound
daa
sti
push
dec
imul
in
hlt
jb
jmp
mov
sub
sbb
aam
adc
fistpl
jecxz
mov
fnstcw
imul
pushf
test
es
sub
in
lock
fisubl
pop
push
xchg
into
dec
int3
cmpsb
cld
dec
dec
sarl
rcll
push
sahf
lret
rolb
mov
loop
and
push
xchg
adc
mov
out
sub
sahf
mov
pop
ljmp
movsb
jbe
int3
test
xor
fsubp
cld
push
divb
sarl
lods
int3
dec
jecxz
inc
call
daa
add
ja
shrb
mov
inc
mov
fisubs
in
jle
out
jg
or
sbb
fistpl
in
add
pusha
push
in
adc
xchg
lcall
push
jmp
out
scas
jo
and
lcall
js
sar
jno
rorl
xchg
push
jnp
xchg
es
repnz
sarb
aam
jns
and
arpl
in
cmp
pop
enter
lods
mov
jne
sbb
mov
xor
cltd
divl
fadd
jb
add
xor
aad
mov
mov
add
push
push
andb
popa
or
mov
push
frstor
in
adc
test
mov
xor
dec
mov
ljmp
sub
out
pop
push
gs
adc
push
xor
aaa
pop
fldln2
or
stc
pop
aam
subl
push
fists
pop
ljmp
push
push
mov
jmp
jp
repz
mov
fldenv
mov
sub
or
test
xchg
pop
jecxz
and
flds
xchg
push
dec
dec
mov
sbbb
fsub
fbld
and
xor
inc
xor
divb
ds
fsts
ret
jmp
jmp
cld
push
add
pushf
test
scas
mov
mov
lret
dec
xchg
mov
in
jbe
xchg
dec
xchg
in
lods
popa
vmread
sarl
mov
push
jns
add
loopne
xchg
data16
lcall
mov
add
out
int3
inc
mov
les
daa
out
test
mov
push
pusha
insl
pop
in
dec
movsl
shlb
pop
mov
jl
rclb
xor
add
add
add
bnd
mov
pop
sbb
stos
adc
sbb
loope
pop
lcall
js
outsb
dec
leave
aad
and
xchg
loop
rcrl
push
xchg
sbb
lret
orb
ret
mov
imul
cmp
pushf
cmpsl
cmp
aas
add
dec
iret
fmull
mov
imul
or
jnp
arpl
nop
mov
jg
stos
fucom
pop
cmp
pop
fidivl
jnp
test
add
aaa
fistl
cmp
out
aaa
dec
or
lahf
or
xchg
pop
jl
leave
lods
xorl
aaa
lsl
xchg
jg
cmp
sbb
lock
hlt
and
jb
stos
cmp
jns
push
push
push
ret
es
mov
jbe
fistpll
dec
outsb
js
or
adc
adc
arpl
in
and
jne
push
ret
in
mov
push
jp
flds
outsb
insl
push
cmp
fs
leave
and
mov
mov
out
push
imul
sub
sarb
mov
into
sarl
dec
add
xchg
mov
mov
push
inc
mov
cmp
mov
cmp
pop
xchg
ror
and
dec
aaa
inc
mov
inc
adc
mov
stos
push
sbb
inc
lret
mov
add
mov
in
sub
adc
negb
movsb
and
inc
jp
loop
push
add
or
scas
lds
xchg
add
orb
lcall
pop
cmp
mov
add
fucomip
sbb
jp
hlt
sub
arpl
mov
adc
xchg
inc
cmp
mov
cmc
dec
popf
sbb
out
scas
mov
inc
fs
push
fstpl
stc
test
js
inc
xchg
jp
xor
pop
sub
push
lahf
xor
sbb
arpl
mov
mov
ss
mov
mov
sahf
stos
test
mov
ficomps
inc
fwait
xchg
or
aas
xor
insb
sahf
push
inc
lods
add
mov
aad
lret
pushf
sbb
fbstp
leave
repnz
stos
sub
sbb
or
lahf
fnstenv
fidivrl
jo
sbb
arpl
xor
pop
movsl
mov
je
leave
out
fmuls
xor
fsubp
call
mov
insl
dec
out
inc
arpl
jnp
gs
mov
sti
fnsave
mov
inc
xchg
aam
xchg
dec
jo
iret
cmp
pop
or
and
jp
push
sub
mov
and
or
mov
sti
lret
push
ret
cwtl
xchg
jne
xchg
out
sub
imul
insl
jmp
cs
pop
adc
mov
mov
sub
push
mov
movsl
lods
paddd
mov
or
sbb
push
mov
xchg
jmp
aaa
xor
test
xor
fs
outsl
divl
push
dec
out
dec
fistpl
pop
inc
mov
faddp
jecxz
mov
sahf
lods
or
je
pop
mov
and
cmp
insl
outsb
mov
and
xor
add
adc
inc
or
data16
sbb
arpl
insb
mov
mov
dec
les
les
xor
les
call
inc
in
cmp
sbb
adc
fcmovb
xchg
add
sbb
inc
dec
add
out
dec
fwait
mov
push
aam
pushf
pushf
sbb
or
cltd
outsl
mov
fs
movsb
repz
mov
jle
das
adc
arpl
or
fwait
push
xchg
nop
mov
stos
sahf
dec
or
inc
cltd
lock
xchg
add
subl
sub
push
lea
push
sbb
xor
nop
push
mov
imul
push
mov
fistpll
jns
hlt
sub
jae
mov
mov
push
clc
mov
imul
test
add
adc
push
inc
inc
mov
cs
mov
int3
outsb
movsb
scas
ret
xchg
rol
add
repz
sbb
mov
mov
insl
ss
inc
xchg
pop
aas
fnstsw
cmp
xchg
mov
dec
aas
cmp
loopne
jne
push
ja
add
add
movsb
movsl
add
xchg
and
notl
xor
mov
leave
mov
sub
jns
mov
sub
xorl
loop
inc
add
sbb
movsb
mov
lret
push
jg
cmp
test
hlt
ljmp
cmc
push
or
rcrb
out
push
test
dec
or
push
outsl
lret
sbb
xchg
sbb
notb
push
into
and
mov
adc
jp
sub
aad
adc
jp
xor
out
faddl
xchg
gs
je
mov
mov
enter
jle
and
gs
mov
ds
mov
jae
push
and
mov
xchg
cmp
cmc
sub
jg
mov
stc
lods
pop
sub
push
movl
andl
pop
xor
mov
ss
mov
in
out
jl
mov
xchg
ss
sbb
xlat
dec
fidivs
fwait
push
xchg
xchg
cmpsb
or
adc
imul
jmp
mov
mov
inc
pop
ja
cmc
lds
adc
pop
das
pusha
rcll
mov
pop
dec
dec
leave
stos
inc
addr16
or
ljmp
xchg
fsubr
jmp
bound
mov
pop
adc
mov
xor
mov
nop
or
repnz
rorb
js
out
mov
or
fwait
jae
jo
int3
cld
in
inc
lcall
add
push
or
mov
movsb
jmp
pop
xchg
addr16
arpl
pusha
push
hlt
dec
out
inc
enter
gs
and
sbb
sub
inc
negb
pop
js
repz
aam
adc
and
inc
repnz
loop
mov
aad
pop
rcl
pop
add
pop
inc
das
in
push
out
pop
and
xchg
sub
dec
cwtl
jmp
or
das
das
mov
sub
outsb
movsb
leave
xchg
jle
cmp
xchg
cmp
pop
xlat
dec
mov
out
in
stc
jne
adc
mov
testl
lcall
push
movsl
popf
sti
inc
dec
mov
arpl
popf
xchg
mov
sub
add
push
inc
int
lock
clc
addl
int
scas
out
aas
mov
mov
push
and
push
push
daa
xchg
mov
popf
scas
cmp
push
mov
clc
cli
pop
loopne
dec
xchg
pop
fmuls
xor
and
and
enter
sbb
aam
je
lods
sbb
loop
xlat
mov
mov
scas
mov
into
lds
or
pushf
imul
lret
in
add
into
inc
and
mov
cmp
pusha
lds
fmul
out
andb
cmpsb
adc
movsb
insl
rorl
inc
stos
mov
mov
jo
sbb
mov
adc
movsb
ficoml
mov
testl
adc
mov
data16
dec
xorb
and
ljmp
push
divl
insl
pop
add
daa
push
test
jne
ret
rcrb
lds
or
sub
jmp
popf
and
bound
js
xchg
repz
aas
popf
lahf
arpl
mov
mov
push
sbb
xchg
jmp
lods
inc
add
pop
out
mov
cmp
xchg
lods
dec
gs
add
pop
pop
sbb
cmp
sti
rolb
mov
cmpsb
lret
push
adc
shlb
lods
loop
or
sub
sbb
or
loop
and
imulb
inc
add
mov
mov
lret
test
mov
in
push
test
test
and
loopne
fldt
sahf
mov
imul
push
and
ror
adc
lret
insb
mov
aas
mov
and
sbb
lods
mov
inc
mov
add
jecxz
lret
sub
test
int3
enter
sbb
and
push
lea
pusha
fs
gs
and
jle
idivw
arpl
sahf
xor
sbb
int
hlt
ds
int3
mov
clc
xor
pop
or
popa
imul
mov
mov
sti
xor
ljmp
cmpsb
xchg
jecxz
sub
sti
frstor
and
mov
aaa
mov
pop
lret
dec
fsubrl
mov
addb
mov
xor
das
pop
mov
adc
mov
jno
popf
fildl
adc
fisttpll
dec
cli
in
repz
dec
push
addb
push
popa
sub
add
xchg
jmp
pop
scas
mov
mov
xor
ret
mov
push
mov
repnz
cmp
jge
stc
test
mov
lock
adc
add
pop
mov
repnz
pop
and
out
fadds
movsl
xchg
mov
stc
jb
lea
cld
pop
mov
mov
bound
imul
adc
dec
fwait
cmp
ja
hlt
popa
mov
sbb
dec
mov
hlt
scas
or
push
lahf
cmpsb
pop
loop
inc
mov
dec
pop
sti
iret
jae
inc
shr
out
pop
jbe
dec
sbb
negl
fisubrl
sub
daa
mov
push
roll
mov
pop
aaa
inc
adc
jne
in
xchg
push
stc
jno
pop
jecxz
mov
rdtsc
jae
pop
cmc
dec
push
mov
test
ds
jns
fcomip
scas
mov
popf
mov
sub
imul
xchg
or
jno
pop
adc
push
xchg
mov
test
into
pop
pop
sub
jns
push
sub
mov
arpl
sti
enter
dec
mov
sti
mov
repnz
shll
ret
or
sbb
daa
in
cmp
shr
xchg
shll
jle
sub
sub
mov
bnd
bound
pop
int
insl
mov
dec
pop
rcrb
ret
loope
in
jb
daa
andb
sbb
push
jne
push
xor
add
push
into
iret
iret
mov
aam
cmp
pop
push
lret
scas
cmc
out
inc
mov
sub
outsb
push
jne
mov
ret
sti
fstpt
cmp
cmc
sub
scas
filds
test
dec
jbe
int3
cmp
push
ror
jb
into
test
test
aaa
add
pop
jg
je
ror
xchg
mov
stos
mov
add
mov
cli
mov
cmc
adc
aam
lret
popf
sub
lcall
cmp
dec
sub
mov
sbb
nop
stos
adc
dec
mov
rcrl
sub
jg
scas
ss
inc
inc
or
int
xchg
or
mov
jp
movsb
cmp
inc
rcll
fildl
es
xchg
mov
xchg
sbb
mov
dec
xor
pop
out
mov
lret
push
inc
push
or
or
pop
lods
andb
in
roll
shlb
enter
cltd
movsl
dec
mov
imul
scas
cmp
das
pushf
adc
push
stos
adc
div
test
pop
cmp
mov
cmp
scas
int
jae
sub
loop
ja
lret
pop
jne
xor
lret
jl
pusha
or
repz
inc
imul
sub
sbb
sub
repz
ljmp
ja
jp
mov
out
adc
jne
mov
xor
and
fcompl
lahf
cmpb
test
add
or
push
rclb
pop
sub
fistpl
jp
push
xor
or
push
icebp
jb
inc
loop
xor
loopne
es
or
cwtl
mov
popa
hlt
xchg
add
cmpsl
or
repz
xor
ficomps
jb
fnstsw
pop
sarb
sub
pop
mov
test
add
pop
ljmp
aad
push
cmp
dec
adc
mov
sbb
inc
mov
or
sub
mov
out
add
add
sub
sbb
loope
arpl
xor
fdivl
xchg
xchg
pop
pusha
rorl
ret
jecxz
push
mov
sub
push
ljmp
xor
rorb
int3
cmp
add
loopne
or
dec
jp
push
xor
adc
arpl
push
and
xor
and
push
or
add
bound
mov
pop
push
aad
movsl
adc
call
cmp
ja
sub
popf
xlat
dec
push
and
jbe
xchg
dec
xchg
mov
js
sbb
dec
adc
lods
nop
or
inc
subl
ds
dec
jns
mov
sub
jb
jne
fldenv
pop
dec
adc
cmp
aam
shlb
roll
jp
in
xchg
scas
mov
jp
mov
jbe
mov
dec
sahf
iret
imul
lods
sbb
sub
adc
sub
call
in
cmp
cmpsl
or
je
or
or
das
aad
add
movsl
and
repz
cmp
cld
in
mov
push
mov
aad
loope
sarb
sub
dec
push
xor
pusha
inc
mov
push
sahf
outsl
pop
dec
subl
call
adc
pop
add
aam
fstpt
insl
push
lods
les
scas
mov
cli
daa
ds
dec
mov
fcompl
out
shll
in
sahf
call
and
shlb
or
xlat
mov
invd
stos
jb
movsl
inc
rcrl
rcll
xor
test
stos
jl
push
xor
fwait
sub
mov
repnz
out
sub
dec
ja
xlat
jg
push
inc
and
jmp
mov
mov
lods
outsb
cmpsl
out
and
and
mov
adc
aam
jmp
push
pop
icebp
shlb
ret
mov
pop
jno
int3
repz
rorb
enter
pop
aam
movsl
jge
mul
movsl
xor
lods
aad
out
mov
xchg
and
enter
test
cmp
dec
fcoml
xor
sub
lods
dec
cmp
cmp
int
sub
data16
or
test
lea
mov
jmp
es
sub
aam
mov
xchg
pop
jbe
sub
fiaddl
shll
xchg
imul
or
cmc
mov
movsl
sbb
popa
hlt
mov
pop
jg
add
sub
pop
in
dec
jl
push
pop
push
movsb
xchg
lock
jnp
mov
mov
inc
sarb
add
cld
es
mov
shl
aad
loopne
sub
sbb
jmp
or
cmp
jmp
jae
clc
push
dec
cld
test
repnz
cmpsl
jg
loop
or
dec
adc
pushf
mov
divb
push
stos
out
cltd
cli
pop
sbb
xchg
pandn
add
scas
mov
xor
xchg
xchg
xor
stos
fisubrl
sub
mov
and
std
pop
jg
pop
jmp
jp
xchg
lds
jbe
cwtl
popa
sbb
mov
sub
mov
decl
aad
out
jp
sub
js
jge
sbb
rcrb
push
sbb
movsb
jp
nop
faddp
mov
jmp
xchg
mov
jmp
lock
pop
jbe
test
push
repz
jbe
mov
pop
mov
sbb
mov
sub
push
outsb
pop
inc
clc
fldz
fwait
popf
and
es
pop
lret
cltd
iret
sub
xor
mov
push
adcb
ja
cltd
pop
fsubrs
pop
mov
out
test
cmpsb
push
cmp
pushf
fisttpll
in
lods
add
mov
xorl
xchg
add
insl
inc
movsb
in
push
sbb
mov
pop
adc
stos
cmp
inc
mov
lfs
xchg
mov
sarb
sbb
inc
and
mov
popf
mov
push
iret
subb
dec
and
or
push
sub
daa
sub
inc
adc
dec
hlt
shrb
xor
and
mov
call
cwtl
lcall
test
enter
pop
mov
stc
cmp
push
or
scas
push
call
cmp
arpl
lock
dec
sub
imul
std
sbb
outsb
shll
adc
xchg
inc
sbb
adc
or
sub
add
fcoms
push
inc
add
pusha
cmpsl
pop
fiadds
insl
cmp
and
pop
test
ljmp
movsb
or
repz
xor
pop
lcall
and
negb
and
hlt
mov
jge
call
cwtl
mov
cmp
stc
int3
dec
or
insb
int
jae
sub
pusha
ret
in
adc
fwait
lods
faddl
cs
fdiv
sbb
arpl
inc
rcrl
pop
pop
in
in
adc
mov
inc
push
push
jne
leave
imul
xchg
imul
fdivrl
add
ljmp
sbb
leave
xchg
or
lret
into
ret
cmp
inc
in
outsl
aaa
adc
adc
adc
cmpsb
aad
xchg
pop
rcrb
add
mov
adcl
xor
cs
fsubs
inc
out
ja
mov
pop
xchg
movsb
subb
xchg
and
cmp
stos
jae
fnclex
adc
push
bound
bound
xor
mul
sub
inc
js
bound
clc
xor
int3
pop
xchg
adc
push
mov
sbb
subb
arpl
add
inc
lahf
insb
adc
sub
push
sbb
insb
data16
fld
push
outsb
push
cmp
aam
mov
outsb
xchg
call
sub
mov
sti
push
gs
fnstsw
sbb
and
in
mov
test
mov
cltd
fadd
inc
fldcw
jge
scas
aas
jge
mov
in
jne
or
mov
fcmovbe
lahf
hlt
pop
push
sbb
mov
shl
push
sub
jo
loope
xor
mov
or
fwait
ljmp
cmp
das
gs
lock
pusha
addb
mov
je
pusha
pusha
push
movsb
mov
or
pop
movsl
adc
das
gs
out
sbb
cltd
stos
adc
rcl
rcr
mov
adc
mov
dec
cltd
data16
push
aaa
mov
push
rol
dec
xchg
das
hlt
push
push
xchg
mov
and
inc
inc
cmp
ljmp
cmp
das
enter
adc
es
dec
mov
xchg
sbb
dec
clc
test
cmp
decl
ss
aaa
fsubrl
pop
int
sub
mov
ss
adc
imul
int3
pop
stos
xlat
xchg
imul
and
sahf
movsb
inc
or
push
mov
and
push
xor
dec
lds
testl
rolb
rorb
dec
aaa
jg
sbb
outsl
mov
inc
or
sbb
cli
cli
pushf
fdivrs
sub
out
xchg
adcl
out
imul
cmp
xchg
mov
mov
push
xorb
sbb
cmp
jae
xchg
cmp
stos
jne
je
scas
jbe
iret
mov
push
repz
lea
imull
les
xchg
xor
pusha
xor
xchg
pusha
mul
sbb
inc
imul
fldt
fstl
mov
pop
dec
enter
jecxz
outsl
jle
lods
sbb
push
dec
or
adc
sub
fs
xchg
stc
lock
jns
mov
pop
shr
inc
movsl
mov
inc
jmp
notb
std
fucom
icebp
jae
jno
js
jbe
fdecstp
std
adc
data16
mov
popf
loop
ljmp
ljmp
inc
repnz
idivl
shll
dec
mov
sub
stc
jno
cs
ret
lods
test
push
lret
mov
mov
cmp
xchg
push
cmp
add
data16
pop
repnz
mov
adc
test
xor
adc
mov
jb
jns
inc
xor
aas
rcrl
sti
xchg
hlt
outsl
xchg
sbb
add
js
mov
test
sub
and
movb
mov
jno
mov
ljmp
or
fsubs
xor
data16
or
jl
das
out
roll
adc
mov
cs
aad
jne
hlt
sub
inc
and
pop
sbb
inc
int3
add
cmpl
incb
mov
xor
cmpsl
imul
add
inc
mov
test
dec
pop
in
jge
and
push
pop
fwait
lret
movsl
ja
shrl
jl
jmp
sub
gs
add
mov
inc
pop
and
sbbl
lcall
stos
ja
dec
popf
xchg
pop
dec
push
std
cmpsb
out
jg
addb
data16
cld
imul
cwtl
in
xor
cld
and
popa
aaa
popf
xchg
test
clc
imul
pop
dec
mov
cli
aam
pop
or
jl
dec
stos
loopne
aaa
push
insl
mov
jp
xchg
or
xchg
ret
mov
ds
dec
mov
jns
stos
andl
dec
in
xlat
xorb
mov
mov
test
jmp
cmp
pop
pop
shrb
pushf
dec
dec
jl
or
pop
gs
outsl
inc
jp
in
pop
imul
les
pushf
mov
xor
or
xchg
sub
pop
imul
mov
repz
adc
xlat
hlt
scas
fldenvs
mov
es
mov
xchg
jo
push
test
rclb
loope
insb
test
cmp
shlb
mov
fs
pop
dec
pop
jne
add
and
mov
push
notb
pushf
int
pop
inc
xlat
repnz
pop
dec
mov
bswap
lcall
rolb
push
jmp
mov
lret
and
push
stos
dec
aas
cwtl
ljmp
fmuls
rcll
cmp
sub
pop
cs
stos
mov
pusha
call
bnd
jns
jbe
mov
pop
loop
es
leave
jno
add
jnp
jmp
loopne
mov
shrb
lods
ret
cmp
insb
push
out
or
fcoms
adc
jbe
mov
in
add
out
push
or
inc
stc
mov
push
jecxz
dec
sbb
fwait
ret
stos
mov
fcmovnu
aas
hlt
stos
lods
decb
xor
sbb
loop
mov
adc
cmp
leave
mov
mov
xor
nop
sub
push
mov
and
inc
subb
imul
lahf
push
add
xchg
hlt
lea
repnz
fisubrl
sub
and
cmc
test
idivb
adc
mov
lret
fcomps
ret
aam
pushf
or
fistpl
rcll
adc
dec
and
lea
lahf
bound
leave
testl
lea
pop
inc
or
sbb
int
jmp
mov
lret
loop
mov
daa
adc
sbb
bound
dec
add
cmp
lret
shrb
lock
inc
and
call
cmp
xlat
out
pop
das
pop
rcrb
sub
cs
inc
je
movsl
out
and
mov
movsb
icebp
cmp
out
mov
cwtl
fdiv
xchg
pop
dec
push
xchg
fildl
mov
sub
pop
mov
lcall
adc
aaa
jae
mov
xor
xlat
lss
mov
cmpb
fsts
insb
pop
xor
mov
insb
icebp
scas
and
push
mov
mov
xlat
mov
movsl
sti
mov
inc
inc
ss
fcoml
lahf
ljmp
add
sarb
push
inc
frndint
mov
sub
sbb
pusha
aad
mov
int
pop
dec
mov
push
add
cmpsl
arpl
pop
mov
out
popf
adc
cmpsl
fistpll
mov
cltd
xchg
mov
testb
lahf
aam
fcmovb
add
fnstcw
rclb
cld
out
addr16
jl
add
movsl
push
mov
mov
bnd
out
push
or
and
mov
ds
sub
popf
jo
xchg
jne
pop
sub
add
sbb
push
sub
stos
fidivl
adc
mov
add
sahf
and
and
jns
into
sub
jnp
pop
popa
sti
xchg
mov
in
das
dec
rol
and
or
fs
negb
lcall
jae
mov
and
sub
pop
aas
add
loopne
bound
sub
push
lds
rorl
jne
mov
mov
dec
insl
sbb
sti
jns
cmp
jno
push
pop
jle
dec
jge
mov
mov
mov
movsb
pop
cmc
cmc
imul
push
dec
cltd
push
imul
es
adc
and
mov
mov
cwtl
push
add
cmpsb
mov
mov
cmpsb
mov
jp
add
and
shrb
insb
adc
inc
push
jbe
in
lock
push
mov
mov
inc
arpl
adc
lcall
out
lcall
xlat
xor
push
popf
inc
mov
mov
add
sbb
ds
repnz
push
sbb
or
shll
lock
pop
xor
xor
into
mov
mov
sub
sbb
js
outsb
fsts
in
sahf
call
incb
sarl
cli
out
jecxz
push
xor
ficompl
ror
jl
mov
mov
aas
in
sub
stos
sbb
sti
mov
out
sahf
mov
inc
pop
mov
xchg
fwait
mov
pop
pop
pop
sti
aam
into
mov
push
mov
repnz
inc
lea
outsb
dec
stos
jmp
movsb
xlat
sub
cmc
popf
xorl
sbb
add
sbb
or
lahf
xchg
fwait
inc
add
sub
and
ret
push
arpl
loope
push
cmc
inc
repnz
shl
inc
stc
ds
mov
or
or
dec
xor
xchg
cmp
ret
ficoml
int3
cmp
push
stc
das
adc
mov
pop
xor
pop
test
push
scas
pop
call
push
mov
test
fsubl
or
jb
jl
out
int3
xchg
sub
pushf
lods
adc
test
lods
dec
imul
add
inc
inc
out
mov
cmp
inc
inc
dec
push
cs
fists
dec
mov
dec
and
test
insb
push
imulb
sub
inc
cltd
stc
mov
mov
mov
cmp
fnclex
dec
dec
xor
packsswb
stos
scas
sbb
mov
fdivrs
test
enter
lret
lock
inc
mov
rcll
cmp
daa
in
inc
mov
mov
sbb
cmpsb
adc
mov
aam
cmp
push
and
inc
test
sub
inc
cmc
add
pushf
subl
pop
push
jge
sbb
jg
sahf
or
shrl
imull
sar
jmp
pop
mov
add
xor
cs
xchg
sub
imul
mov
std
cmc
pop
test
nop
add
mov
push
jb
push
cmp
lea
mov
fmul
inc
mov
icebp
jb
and
hlt
or
xchg
jmp
pop
xor
test
jnp
push
pushf
jl
mov
push
inc
jmp
fstpt
insl
mov
test
mov
push
jp
aad
lds
jnp
inc
pusha
imul
mov
sti
xor
cmpsb
test
add
clc
push
fmuls
sub
inc
popa
push
inc
add
dec
scas
cmpsb
frstor
out
sub
pop
idivl
mov
xchg
mov
outsb
pop
or
xchg
push
bnd
lahf
push
add
push
loop
push
xor
test
mov
imul
gs
push
jno
dec
mov
in
lret
xchg
sbb
sub
sbb
add
test
iret
ja
sbb
test
xor
inc
mov
sbb
ret
jo
pop
outsl
cmp
mov
pushl
std
jle
mov
pop
xor
jbe
outsl
pop
pop
sahf
adc
cmp
imul
inc
sub
lret
adc
cmpsl
mov
sub
insl
mov
test
andl
add
jmp
push
add
dec
cmpsb
stos
mov
add
mov
or
imul
add
xor
dec
aam
movb
mov
add
and
sbb
cld
xor
or
adc
call
jnp
adc
mov
gs
cltd
ss
adc
mov
mov
mov
sub
ss
rorl
or
adc
sbb
xchg
jg
lcall
repnz
leave
xchg
or
repnz
fimull
cli
lock
cmp
lret
call
loop
cmp
add
and
adc
rol
or
mov
adc
pop
xor
jecxz
push
lods
jecxz
inc
loopne
adcb
in
test
in
and
loopne
ds
mov
sbb
pushf
in
add
popf
xchg
and
mulps
in
das
xor
movsb
hlt
out
rcll
loop
sub
popa
mov
or
dec
mov
lock
and
push
jmp
xchg
cmp
inc
and
fcoms
bound
push
sbb
mov
adc
and
mov
sub
or
dec
test
sbb
adc
pop
sub
clc
push
mov
jl
jae
pop
sub
and
xchg
lret
nop
popf
mov
sbb
or
jmp
negl
stos
dec
push
sub
out
xchg
aad
mov
movsl
jb
and
test
lock
call
dec
scas
stos
mov
ljmp
mov
lahf
fwait
fidivl
jl
out
lret
xacquire
cmpsl
cmp
jl
mov
fdivrp
leave
sbb
jl
shl
aaa
int3
adc
adc
inc
xor
jno
add
pop
jge
cmp
push
push
icebp
lahf
mov
pop
inc
in
mov
push
cmp
fsts
dec
push
and
xchg
arpl
sbb
leave
sub
fs
mov
sub
add
arpl
jo
jp
xchg
mov
sahf
push
mov
loopne
push
cmp
cltd
add
and
cmpb
insl
adc
lret
mov
xor
cmpsl
inc
icebp
scas
shrl
out
test
sti
aam
mov
dec
and
xchg
movsb
iret
xchg
jo
or
jno
mov
decb
les
mov
mov
mov
popa
xchg
ficomps
or
cli
inc
int3
pop
adc
xchg
sarb
add
sahf
jae
leave
pop
cs
push
js
rclb
ret
jmp
fstpl
ss
dec
push
inc
scas
outsl
aam
rcll
fdivl
sub
mov
pop
je
jecxz
fsubrp
cmc
add
popa
xchg
popa
pop
adc
je
mov
int3
or
ja
pop
inc
add
xchg
mov
in
sub
pop
bnd
andl
sbb
dec
outsl
fnstenv
push
mov
xlat
mov
out
or
push
xchg
mov
cli
shrl
cs
cwtl
mov
ret
mov
mov
lcall
out
xchg
adc
mov
mov
mov
mov
jl
push
in
mov
cmovne
mov
cmp
pop
test
xchg
in
and
pop
addr16
xor
ja
insb
js
xchg
mov
scas
sub
cmp
mov
push
xor
dec
lret
js
shr
aas
or
mov
fdivrs
iret
xor
adc
cmp
in
adc
jl
jge
mov
popf
fildl
fxch
lcall
adc
int3
fwait
sub
js
xchg
pushf
cld
push
pop
mov
ror
arpl
in
rcl
adc
xchg
xchg
inc
out
jno
insb
daa
in
insl
dec
sbb
popa
in
into
inc
mov
push
scas
mov
add
pop
cwtl
cli
cmp
clc
sub
and
lret
cmp
mov
roll
xlat
inc
icebp
cwtl
repnz
out
or
jae
insl
xchg
fiadds
lock
call
sub
popf
jecxz
test
call
cmpb
inc
sub
adc
jp
ucomiss
adc
fldcw
push
xchg
aaa
push
pop
scas
aam
push
mov
sbb
xlat
sbb
push
xlat
sub
dec
xlat
imul
mov
add
lret
je
inc
sbb
add
sbb
adc
push
scas
ljmp
data16
adc
jnp
call
mov
jl
push
pop
lahf
pushf
jg
add
add
or
repz
xor
mov
out
cmp
and
sbb
rclb
hlt
in
cmp
cld
pop
dec
mov
jp
dec
hlt
push
pop
int
cs
decl
pushf
loopne
adc
xchg
cmp
and
rolb
mov
scas
nop
shl
lahf
dec
sbb
lods
sti
int3
adc
bound
mov
icebp
mov
loopne
mov
fnstcw
and
dec
mov
jle
xorb
add
lret
mov
jb
pop
fwait
add
aaa
ret
out
in
pop
xor
push
sbb
mov
pop
or
outsb
je
or
scas
push
sbb
inc
into
cli
ficomps
adc
pop
adc
xchg
sub
shlb
shlb
cmpxchg
mov
push
push
mov
sahf
imul
jnp
jb
bnd
lret
imull
mov
push
mov
jnp
pop
rorl
push
movb
pop
fs
jge
lahf
pop
pop
ss
lret
ret
inc
sub
out
mov
xor
fwait
mov
out
rolb
and
adc
sub
fistl
mov
cmpsb
ret
push
inc
push
mov
push
jge
fdivrs
push
push
push
icebp
or
mov
cmp
mov
mov
pop
ljmp
divl
push
fwait
cltd
ficomps
mov
int3
and
inc
mov
adc
insb
subl
imul
pop
pop
xchg
pop
pop
pop
push
or
stc
sub
insl
rcrl
adc
sub
pop
lods
jmp
cs
hlt
daa
mov
mov
mov
or
movsl
adc
cmp
leave
aam
mov
enter
in
jns
mov
lods
sbb
sbb
mov
enter
push
pop
xchg
add
ja
mov
jle
pop
mov
fldt
sub
ljmp
sti
push
or
add
ljmp
dec
pusha
out
int
push
cmp
xorl
cli
repz
call
ret
ljmp
xchg
jge
dec
mov
or
mov
fcomps
inc
movsl
pop
push
jae
lock
mov
pop
in
lcall
sub
mov
frstor
adc
movsl
cmc
mov
add
mov
imul
jne
das
fsubs
jne
push
add
jnp
rorb
dec
loop
mov
push
inc
push
out
inc
loop
xchg
pop
dec
pop
xlat
cmc
aaa
push
or
jl
dec
xchg
jae
sub
push
mov
stos
in
stos
cltd
sar
or
bound
lahf
xchg
or
or
or
adc
add
pop
test
cmp
scas
add
add
movsb
push
xchg
sub
fcoms
mov
and
fdivl
mov
fwait
push
sbb
cmc
lods
push
push
xchg
iret
pop
push
aas
pop
cmp
loope
xchg
mov
cmp
sarl
shrl
mov
sbb
jp
mov
push
sahf
xchg
scas
cmpsl
cmpsb
cmc
jo
xchg
loop
xlat
les
sub
push
sub
fstl
stos
cltd
int3
push
cld
inc
lea
adcl
push
test
fcmovbe
cmpsl
mov
ljmp
and
adc
sbb
andb
push
rcrl
jns
fcmovne
test
add
pushf
mov
cmp
inc
in
out
xchg
movsl
fisubrs
lahf
or
lds
or
jno
mov
dec
insl
xor
test
jb
jmpw
loop
push
cmc
loope
fwait
insb
je
lods
subl
and
pop
cwtl
xor
cld
push
xor
mov
sbb
rcrl
mov
imulb
jbe
test
mov
mov
jnp
inc
adcb
ljmp
pop
call
cli
into
das
aas
lods
dec
or
addr16
pop
negb
jb
inc
pusha
mov
fwait
ljmp
jg
cmp
cld
loop
out
mov
shlb
fiaddl
mov
nop
lea
cmpsb
lea
addr16
insb
sbb
mov
xor
int3
sub
enter
bound
xchg
std
mov
mov
lods
push
sbb
xchg
mov
jne
clc
rcrb
xor
adc
or
insl
pushf
inc
mov
xchg
pop
aaa
jb
sarl
fdivs
cmp
cmp
sub
dec
pusha
mov
adc
std
loope
loope
lds
lods
sub
mov
jge
leave
or
xchg
dec
lea
add
sbb
cltd
or
jno
add
mov
fs
mov
jmp
push
xchg
jge
popa
loopne
or
push
and
and
hlt
xchg
cmc
in
rolb
jo
insl
xor
xor
cmpsl
in
mov
pop
leave
mov
jb
push
les
push
and
insl
dec
inc
dec
sub
arpl
lods
pop
xor
cmp
sbb
jne
mov
xchg
test
cmp
lahf
pop
xor
fsubr
push
sub
std
jne
push
xchg
scas
lret
mov
push
push
push
jne
lea
or
fstpl
cmp
add
jle
mov
sbbb
inc
sbb
adcl
mov
cmp
sbb
jmp
sbb
popf
ds
dec
lcall
popf
jmp
and
sahf
ds
and
test
movsl
fwait
mov
sti
xchg
lret
pop
incl
mov
fwait
pop
or
lock
lret
xchg
shlb
lods
sub
test
jno
add
int3
jp
pusha
pop
and
xor
mov
mov
pop
xor
data16
push
or
sub
xor
jp
fwait
ljmp
cmp
popf
jns
aas
ja
lahf
mov
lret
lock
movsb
sub
push
repz
or
jle
push
sub
push
jo
rorb
daa
mov
int
jno
or
inc
xor
pop
lret
sbb
mov
es
scas
jge
cmpsl
into
jns
push
jae
or
mov
aad
push
stc
aaa
add
cmp
adc
sbb
fdivrl
dec
adcb
pop
mov
lahf
scas
mov
mov
insb
ret
negb
xor
xor
xor
push
popl
addr16
test
ret
ja
mov
cmpsl
shll
inc
mov
cli
std
addl
fldcw
loope
mov
pop
pushf
ffreep
sarl
mov
mov
std
xchg
xchg
jo,pt
fnstcw
lock
inc
xor
cmp
sub
scas
insl
ret
xchg
cltd
dec
dec
sub
xchg
sub
inc
or
cld
mov
repnz
mov
cmpl
sbb
dec
inc
xchg
aas
add
arpl
outsb
and
in
arpl
in
rolb
sbb
idivb
lds
xlat
xchg
or
mov
fdivl
sahf
clc
pop
loopne
arpl
rcr
in
dec
sub
cmp
cmp
adc
xor
fimull
leave
pop
loope
mov
jo
fnsave
add
xchg
sub
jno
pop
inc
in
sub
xchg
sbbb
adc
hlt
stos
stos
pusha
movsl
pushf
fucomi
into
test
sub
sti
pusha
xchg
sbb
jmp
jge
stc
jnp
in
jbe
je
dec
push
jp
rolb
mov
jge
lods
xor
jae
and
lret
in
cltd
ss
cwtl
int3
fsubl
imul
mov
or
or
js
xchg
pop
or
mulb
dec
mov
inc
aad
ret
stc
insb
push
push
lods
push
mov
aad
repnz
fld
adc
add
mov
test
jbe
jecxz
xor
pop
push
pop
adc
ss
sub
dec
popa
aad
push
sbb
pop
or
sbb
enter
inc
add
cltd
in
push
sub
jecxz
push
scas
addr16
leave
xchg
outsl
mov
pushf
inc
imul
aas
lahf
sbb
outsb
cmp
rcrb
xor
push
push
xchg
lods
cmp
call
push
sarl
outsb
sbb
push
xchg
mov
stos
xchg
std
mov
pop
gs
jg
pop
xchg
dec
fdivrs
jg
out
pop
mov
mov
sub
pop
fistpll
cmp
jns
pop
mov
enter
aad
pop
mulb
push
push
push
pop
das
int
js
mov
data16
faddl
sbb
gs
sbb
sub
movsb
pop
rcll
push
cltd
and
imul
bound
mov
dec
repz
sub
pop
lret
and
loop
arpl
mov
lods
jno
ficompl
mov
insb
sti
test
inc
shrl
xor
xor
shl
jae
adc
inc
loop
dec
ljmp
fistl
push
inc
pop
xchg
fwait
and
adc
jo
add
sbb
arpl
push
rclb
add
ja
bound
and
enter
mov
mov
mull
mov
xabort
inc
xchg
mov
dec
das
mov
sub
loop
pmulhuw
mov
popa
mov
addr16
push
stos
mov
jl
and
mov
jmp
jg
out
in
xor
fcoms
inc
dec
out
daa
rcrl
sub
cld
cmovg
insl
add
inc
bound
std
xor
lret
test
mov
ficoms
roll
sarb
push
in
inc
jl
xchg
or
sbb
orb
dec
sbb
push
xor
fisttps
pop
mov
adc
repz
xchg
loope
jbe
push
sub
sub
aad
or
gs
push
flds
je
sub
sbb
imul
push
insl
sub
lret
mov
hlt
jo
jno
mov
in
ja
call
insb
push
xor
add
xchg
mov
insl
push
lret
pop
and
push
loop
cld
cmp
nop
dec
imul
mov
dec
inc
xchg
sub
daa
dec
hlt
div
dec
std
lods
ds
sub
test
bound
mov
xor
xor
cmp
mov
push
mov
mov
xchg
cltd
lea
xchg
mov
ljmp
stos
mov
cmp
mov
cmp
add
andb
sub
cld
mov
and
mov
adc
test
xlat
mov
or
pop
mov
sahf
push
and
or
jmp
loope
xor
into
sbb
xchg
out
movsl
mov
xchg
pushf
movsl
loope
jle
mov
lret
jae
cmp
cmp
adc
xor
out
mov
jnp
lea
jmp
daa
lods
adc
push
iret
xor
stos
sub
lds
inc
mov
dec
sbbb
xchg
lods
in
mov
ljmp
mov
push
out
repz
pusha
xchg
ret
fbld
out
cmpsl
xchg
popa
inc
mov
xorb
dec
push
push
mov
stos
les
jnp
cmp
cmp
das
and
sbb
into
ja
cmpsl
js
sbb
icebp
iret
adc
pop
stos
ret
cli
ljmp
shrb
add
jl
shll
adc
addr16
fidivrl
das
pop
or
sbb
shr
sarl
clc
in
inc
icebp
xor
mov
cmpsl
jecxz
sub
jp
mov
daa
icebp
addr16
xchg
das
inc
cltd
adc
clc
repz
pop
push
icebp
popf
ljmp
add
pop
add
fmull
xchg
or
pop
popf
aaa
add
cmp
inc
lods
icebp
pop
fucomip
jae
sub
mov
testl
loopne
sbb
xor
xchg
xchg
or
or
neg
in
outsb
sbb
sub
mov
and
jg
call
mov
adc
cmpsl
xchg
or
mov
xchg
es
push
mov
mov
mov
cwtl
mov
loop
xor
sbb
ret
insb
cmc
jo
adc
xchg
mov
movsb
into
fildl
imul
cmp
stos
in
push
mov
mov
popa
lods
fdivrs
ds
int3
cmp
mov
loop
xlat
xchg
pushf
daa
mov
xchg
and
xchg
sbb
mov
or
xchg
mov
fisubrs
jmp
xor
dec
mov
in
fildl
pushf
fistps
jge
mov
inc
or
stos
ret
push
adc
in
fdivl
popf
test
je
imull
dec
xor
cwtl
int3
ja
add
add
les
xchg
dec
adc
in
xchg
mov
mov
or
aaa
dec
push
jl
fimuls
mov
ffreep
scas
std
mov
push
jb
pop
mov
insb
mov
or
fs
push
fs
add
aam
in
xorb
dec
push
cwtl
shrl
lahf
xor
orb
xor
inc
xor
jns
fwait
jbe
test
sbb
scas
pop
or
sub
clc
xor
insb
sti
or
sbb
aam
sar
and
jge
fmulp
insb
fisubs
adc
mull
mov
into
in
xchg
lret
orl
mov
jg
fmul
hlt
xchg
jl
mov
and
sbb
push
movsb
jns
or
lret
stc
dec
out
sbb
sub
ljmp
out
icebp
stos
jo
std
arpl
mov
into
cld
test
pop
shrl
roll
ljmp
cmp
andb
imul
dec
jle
inc
dec
lcall
mov
xor
iret
cmp
int
push
shlb
cld
jge
mov
jmp
pop
sar
sbb
stos
lcall
jp
push
ds
lret
jae
lret
xchg
aam
inc
cwtl
sbb
jp
pushf
test
xlat
xchg
ret
aas
outsb
and
insb
xchg
mov
xchg
fisubl
int3
cmovne
out
pop
dec
shlb
movsl
push
and
push
jecxz
jp
mov
shl
jecxz
inc
movsb
jl
test
pop
mov
xor
ret
test
add
xlat
cmp
cs
sti
xchg
pop
cmp
xor
std
test
outsl
popf
add
nop
push
cmpsb
movsb
into
arpl
mov
imul
mov
sbb
jns
cmp
xchg
xorl
fcom
cs
in
imul
invd
fs
inc
cld
icebp
add
adcb
and
stc
cld
and
push
into
fldt
and
shl
je
push
push
pop
adc
addr16
pusha
daa
mov
jns
sub
inc
call
cmpl
pusha
cmp
stos
lret
popa
test
sbb
inc
pop
cmp
cwtl
daa
mov
orl
dec
mov
and
fisttps
mov
cmp
stos
add
push
addb
cmp
push
xor
repnz
mov
sub
fs
std
sbb
cmp
jnp
hlt
lret
push
imul
movsl
imul
leave
xchg
push
push
insb
dec
pop
push
dec
cmc
sub
loope
scas
lds
mov
outsb
pop
xchg
add
test
fs
insl
pop
inc
push
lret
push
jo
pusha
dec
in
out
rclb
xchg
or
pop
pop
push
les
push
negb
in
pop
test
mov
and
push
xorb
roll
scas
lret
repnz
rorb
cmpsb
mov
pusha
pushf
sbb
mov
pop
aas
test
mov
mov
iret
fwait
and
cmp
stos
pop
and
test
imul
scas
cltd
add
cli
sbb
pop
ret
rep
lahf
jns
mov
inc
adc
mov
adc
jmp
jno
inc
movsl
inc
clc
dec
arpl
xchg
adc
adc
subl
movsb
mov
sub
mov
cltd
cmpsb
push
ret
mov
lahf
mov
stos
xor
mov
dec
sbb
sbb
xor
add
jns
jmp
stc
ja
stos
xchg
sub
dec
jbe
jne
mov
inc
or
mov
test
mov
pop
pop
call
outsl
out
into
or
clc
test
mov
sbb
sbb
lret
aad
addb
cltd
ja
jae
inc
lret
std
dec
mov
fwait
aas
out
cmpsb
jmp
inc
sbb
sti
xor
mov
clc
adcl
xchg
js
adc
aas
xchg
hlt
inc
fildll
roll
loop
mov
sub
outsl
jnp
mov
leave
daa
adc
or
aas
repz
or
push
in
lret
push
push
jno
stos
icebp
lds
insb
jns
shrl
mov
into
sub
or
fisttpll
pop
mov
pop
xor
insl
xchg
lahf
mov
lret
xor
scas
add
push
shrl
lret
adc
jo
das
dec
dec
shlb
clc
scas
js
sti
mov
ss
loop
sub
sbb
pop
xchg
fdivs
das
cmp
pop
cltd
xorl
cmp
in
add
kunpckwd
cmp
dec
pop
pushf
in
pushf
adc
mov
jmp
jb
push
sub
cmpsb
daa
or
outsb
xchg
lods
fsub
cmp
insb
pop
sub
imul
or
sub
ja
jmp
mov
jle
ret
cmp
cmpl
mov
xor
adc
movl
cmpsb
push
push
dec
mov
aad
dec
into
cmp
les
xorl
jge
cmp
insl
mov
test
mov
stos
sti
stos
lock
cmp
push
jb
cmp
xchg
jbe
xor
jns
test
and
nop
xchg
xor
dec
adc
cmp
test
mov
sahf
stc
dec
loope
subb
imul
movsb
dec
xor
mov
xchg
xchg
and
test
jge
hlt
leave
addl
xchg
or
popf
mov
sub
aad
mov
and
data16
ja
inc
andb
push
mov
idivl
or
mov
icebp
out
fs
insb
xchg
xor
add
dec
popa
arpl
jb
mov
int
jno
mov
xor
scas
das
repnz
xchg
stos
jns
cltd
jns,pt
shlb
into
add
iret
mov
lahf
mov
xor
jecxz
and
fs
and
outsb
cli
outsb
xor
push
cmpb
xlat
jo
pop
fs
das
adc
leave
add
mov
xchg
sub
mov
imul
push
rcr
pop
cmc
jno
pop
movsb
dec
inc
mov
ss
inc
push
pop
sub
iret
test
insl
in
pop
stos
orl
or
mov
ret
push
cld
je
rcrl
lods
sahf
cmp
inc
add
outsb
dec
jnp
ret
sub
sub
test
or
mov
mov
loop
aas
fiadds
sarb
repnz
cltd
and
movsl
push
nop
xchg
inc
dec
sbb
mov
dec
jne
in
nop
xor
adc
pusha
xor
pop
leave
and
call
add
mov
flds
sbb
int3
pop
int3
outsb
scas
dec
pop
cmpsl
xchg
pop
xchg
mov
dec
and
cli
and
xor
aaa
out
mov
pop
in
gs
dec
inc
lret
loop
mov
xor
mov
jg
dec
mov
inc
popa
rorb
push
mov
out
shr
aam
ret
dec
addr16
mov
mov
push
testb
jg
loope
iret
mov
push
or
inc
adc
adc
mov
xlat
mov
dec
sbb
push
adc
clc
cmp
or
xchg
xchg
inc
lea
cmp
or
adc
insb
adc
add
push
popf
pop
add
cwtl
rcll
movsb
pop
xchg
lea
add
and
mov
ret
push
ja
shrl
mov
cmp
aam
cld
pop
inc
daa
mov
roll
xorl
incl
and
push
cs
or
inc
aas
lret
into
jl
mov
dec
sbb
in
sub
lcall
mov
xchg
adc
in
jge
inc
dec
jb
mov
or
adc
mov
adc
loopne
pushf
enter
pop
jmp
adc
pushf
enter
rcrb
ja
sub
jg
push
jmp
leave
js
mov
dec
in
ficompl
insl
xor
popf
cmp
adc
int3
add
ret
ret
dec
pop
aaa
popa
xor
cmp
mov
lods
inc
cltd
sub
xchg
jmp
and
xor
fmuls
xor
mov
add
out
mov
fdivrs
andl
mov
icebp
jae
mov
imul
inc
mov
add
add
push
inc
xchg
les
loopne
gs
aad
cmc
shll
push
aas
cmp
push
xor
inc
pop
and
leave
mov
repz
add
jecxz
aad
mov
mov
mov
sarb
jmp
dec
mov
cmpsl
mov
scas
aas
push
xchg
in
jns
imul
stc
popa
mov
sbb
rcrb
cmp
and
stc
je
jle
mov
push
sub
inc
fs
mov
and
pop
jge,pn
cltd
xchg
mov
jae
push
popf
xchg
dec
cmp
iret
rol
mov
pop
sub
and
xor
inc
sub
jmp
mov
leave
mov
or
mov
adc
imul
cmpsb
iret
mov
pop
pop
ret
popf
mov
ss
dec
or
fwait
lcall
rorb
xor
push
push
repz
adcl
dec
out
bound
push
jecxz
scas
inc
cwtl
push
into
lock
mov
cli
or
sbb
sbb
in
lret
aam
inc
nop
aas
add
mov
sbb
inc
xchg
cmp
mov
mov
fbstp
xrelease
cli
pop
xorl
mov
daa
imul
adc
jmp
pop
fsubrs
xchg
push
xchg
sub
sub
or
out
cmpsb
aam
insb
fstl
mov
bound
push
neg
push
out
out
fstpt
aas
lahf
jno
es
andl
ror
mov
add
sbb
add
test
rcrl
pushf
mov
and
dec
dec
sub
popf
clc
shll
mov
push
movsb
lea
mov
adc
adc
inc
inc
pop
or
movl
xor
mov
sarl
outsb
cmp
movsl
xchg
leave
pop
repz
fadds
cmc
sub
gs
xor
outsl
sub
negl
shlb
int3
jnp
mov
filds
adc
imul
xchg
flds
call
or
clc
cmpxchg
outsb
dec
std
cmc
sub
inc
xchg
fcoml
stos
jl
loopne
xlat
inc
inc
mov
mov
mov
fstps
in
mov
rol
adc
xchg
mov
aaa
push
jb
nop
loopne
mov
jb
in
and
pusha
outsl
xor
and
dec
adc
fisubrs
fisttpl
int
or
scas
fs
dec
je
xor
daa
push
and
push
inc
daa
fildll
movsb
loop
push
jne
xorl
fisttpl
mov
and
sarb
adc
jmp
mov
inc
lods
cmp
test
and
sub
movsb
insl
fildll
rcr
cmpsl
testl
movsl
inc
ret
mov
mov
mov
push
mov
jp
cmpsl
ficomps
mov
out
dec
cmp
jbe
cmpsb
fcompl
xchg
movsl
push
xchg
mov
add
les
rcrb
pop
or
shlb
or
sbb
ret
ffree
mov
sub
dec
mov
mov
lret
cmpsl
push
mov
xor
sub
imul
jmp
addr16
xchg
ds
addb
bound
jns
cmp
sbb
jb
loop
jo
in
and
pop
jmp
jnp
mov
and
push
and
icebp
cmp
ja
int3
jge
lds
and
movsl
or
jg
addr16
pop
jbe
enter
testb
in
inc
add
mov
cmp
dec
out
mov
fbld
jle
test
mov
push
xor
xor
sahf
into
pop
mov
lock
pop
clc
jns
or
mov
sub
inc
dec
lcall
jmp
out
push
jge
fstps
pusha
scas
das
cli
pop
add
sub
andl
sbb
pop
mov
mov
outsl
nop
jo
movsl
int3
mov
add
or
add
lret
xor
add
sub
xor
addl
in
aad
andb
das
loop
add
jns
mov
data16
mov
mov
jnp
icebp
int3
es
or
or
mov
xchg
sbb
fimuls
push
dec
adcl
xchg
cmc
into
fidivrs
ljmp
aam
and
test
cli
jnp
mov
xchg
in
inc
arpl
sbb
cmp
pop
and
push
subl
dec
adc
rcl
bound
test
xor
adc
int3
lds
pop
insl
mov
lahf
movsl
cmp
lahf
adc
or
iret
jno
int3
mov
out
adc
dec
inc
adc
mov
out
dec
jge
pop
add
iret
inc
inc
fbld
mov
adcl
lcall
xchg
sub
cli
and
enter
mov
sbb
or
mov
scas
cli
clc
push
push
inc
iret
lds
cmp
in
notl
sub
dec
call
sub
cmpw
xacquire
mov
bound
pop
xchg
daa
dec
les
decl
mov
push
xchg
fildll
fsubrl
aad
insl
movsl
jg
or
jl
mov
mov
rcrb
xor
jmp
pusha
repnz
jmp
cli
dec
imul
pop
test
fidivs
jb
aad
cld
add
test
imul
mov
sahf
pminub
fcomip
jle
adc
adc
dec
out
cmp
or
pop
jo
ljmp
fstpt
bound
fistpl
jl
ror
sarl
movsb
and
inc
popa
movsb
or
ret
push
push
pop
sbb
push
inc
or
cmpsl
cli
push
push
daa
inc
mov
mov
xor
cmp
xchg
inc
jo
mov
jp
out
xchg
sbb
les
cmc
lcall
pop
movsl
in
jle
and
jne
mull
pop
bound
sbb
mov
scas
sub
sbb
dec
xchg
xchg
and
cli
jns
push
inc
lret
lds
ffreep
push
mov
push
mov
push
lods
lods
ds
out
imull
ss
mov
in
aam
jmp
jo
aaa
inc
xchg
es
pusha
orb
jb
cmp
cmp
ds
clc
and
cmpsb
pop
mov
pop
ja
aad
movsl
daa
divl
jo
mov
dec
pop
test
pop
scas
out
das
push
dec
jo
lock
dec
cmpsl
jecxz
mov
mov
mov
cwtl
inc
leave
add
dec
mov
imul
fbstp
mov
clc
jmp
mov
imul
std
in
int
mov
adc
mov
inc
mov
sub
jb
ljmp
add
psubb
dec
gs
xchg
sub
inc
adc
std
jae
push
leave
or
xor
jmp
jecxz
aas
cmp
ds
test
xchg
insl
mov
lds
push
inc
lret
js
insb
pop
mov
enter
loop
in
lods
das
out
rolb
outsb
out
add
jg
lret
xchg
xchg
mov
lds
dec
std
loopne
inc
adc
movsl
into
lcall
idivl
mov
test
mov
icebp
lret
jnp
arpl
sbbb
mov
jmp
test
mov
aam
hlt
clc
into
call
nop
cmp
sbb
test
outsl
int
xchg
mov
and
cmc
std
jnp
and
pop
mov
stos
das
outsl
push
dec
insl
xchg
out
ret
mov
cs
lret
not
xchg
pop
addb
pushf
pop
clc
pop
ret
inc
test
negb
shrb
nop
and
or
jmp
sub
lds
add
int
loop
sub
cli
stc
cmpsl
js
mov
mov
dec
mov
test
ja
pop
xor
in
mov
xchg
popa
pop
repz
xor
mov
pop
mov
mov
mov
inc
int3
dec
and
mov
xor
fstpl
xchg
sahf
or
push
pushf
cmp
fisubl
mov
ret
and
lock
xor
pop
insl
jmp
in
in
dec
mulb
add
test
and
lock
xor
test
mov
addr16
push
sti
sub
int
add
add
cltd
mov
data16
push
mov
ljmp
xchg
rcrl
mov
daa
mov
cmp
inc
repz
pop
push
test
inc
adc
xchg
roll
sbb
test
or
fld1
sti
ds
icebp
mov
lcall
jle
mov
jae
gs
or
cmp
and
icebp
pop
mov
clc
sbb
jge,pt
fiaddl
sahf
popa
mov
jne
mov
imul
sbb
pop
fwait
adc
and
mov
xlat
ds
jne
call
cmp
pop
jg
jae
aam
es
addb
idivb
or
ljmp
push
dec
xchg
out
push
mov
push
or
xor
rclb
or
fildl
sahf
mov
fsubs
loopne
cmp
dec
push
cwtl
pop
pop
cli
add
xchg
or
pop
mov
loope
scas
leave
lret
pop
sbb
push
andl
fcoms
mov
inc
ja
nop
mov
test
xchg
cmc
mov
enter
sbb
xor
data16
inc
push
loopne
js
shrb
mov
or
sti
out
push
enter
cmpsl
mov
pop
or
lahf
jno
nop
cmp
out
xor
aaa
ja
lods
sahf
dec
hlt
fmuls
dec
mov
popf
inc
mov
das
sbb
cmp
sarl
enter
jge
mov
mov
cmp
fisttpl
bound
cwtl
mov
push
ficoml
lods
int
mov
and
jb
or
mov
push
daa
clc
mov
out
test
push
popa
stc
ds
dec
pop
mov
jp
aad
jb
fldcw
movsl
mov
mov
hlt
addb
sti
mov
outsl
add
mov
cli
cltd
fsub
cmp
sti
fwait
pop
pop
je
fildl
movsl
jae
nop
lcall
or
pop
popf
mov
fsubr
in
nop
adc
enter
lods
pop
insb
ret
jb
rorb
inc
pop
int
sub
xchg
mov
inc
jmp
ljmp
or
mov
lods
jmp
mov
inc
push
cld
mov
inc
lea
inc
dec
xchg
jae
adc
or
or
loope
sbb
cmp
adc
js
ljmp
dec
mov
faddl
jb
and
outsb
push
jge
nop
into
inc
jo
cmp
lods
arpl
push
cld
jo
call
lods
mov
mov
in
xchg
cltd
or
shrl
adc
add
cmp
xchg
shl
mov
stos
jns
jp
cmpsb
dec
cmp
mov
je
fwait
adc
mov
fs
test
popf
addr16
cmpsl
dec
jmp
sub
jp
add
cltd
scas
jo,pt
ds
and
in
out
je
jno
pop
xchg
inc
addps
adc
out
mov
call
test
jmp
rorl
mov
pop
imul
ja
inc
adc
mov
jae
jge
adc
out
or
xchg
adc
mov
dec
in
in
mov
and
into
xchg
aam
dec
adc
adc
fdivrl
fisttps
and
sbb
in
loop
mov
lahf
rcr
add
mov
les
orl
cmp
push
and
gs
pop
or
lahf
lea
add
inc
pop
pop
mov
data16
into
mov
cmpsb
mov
inc
je
popa
loop
lock
neg
mov
or
out
pop
clc
xchg
int3
mov
dec
and
pop
add
inc
jecxz
xchg
sub
jecxz,pn
pop
mov
aam
pop
cmp
or
and
xchg
cmp
notl
add
mov
test
fbstp
insl
xchg
adc
gs
cmpsb
xchg
mov
cmp
mov
jg
push
mov
xor
pushf
inc
sti
xchg
shll
or
push
add
inc
leave
mov
int
cmp
subl
mov
add
inc
jp
adc
sbb
cmpsl
dec
shl
lcall
add
out
or
pop
fdiv
or
test
xor
lahf
cs
inc
xor
add
xor
sbb
or
cmp
lock
mov
xlat
sbb
mov
js
int
ret
stos
rcr
pop
nop
mov
insb
cltd
cld
js
and
mov
add
lret
scas
enter
jge
dec
mov
loope
loopne
xorb
cmp
cmp
mov
scas
xor
xchg
popa
imul
ret
cmpsl
jge
je
rcrb
pop
push
popf
xor
idivb
and
mov
mov
xor
xor
std
xchg
jg
or
ds
rcrb
insl
test
and
mov
loope
in
arpl
cmc
mov
js
out
dec
jl
jns
mov
outsb
mov
or
push
push
push
cmp
shlb
push
dec
pusha
mov
andl
stos
insl
sahf
jecxz
xchg
adc
imul
add
in
push
sbb
inc
loope
pop
lret
inc
loop
ljmp
cltd
loop
cmpsb
ja
cmp
xor
out
insl
sub
xchg
daa
rolb
int
and
cmp
inc
fs
sti
and
push
leave
fmul
mov
jmp
aaa
mulb
inc
jle
xchg
push
inc
mov
jno
and
fldcw
jne
inc
sahf
xor
adc
insb
data16
mov
jb
testl
clc
ds
ja
in
mov
push
bound
sbbl
xor
jp
dec
cli
xchg
cmpsb
xchg
mov
sbb
rclb
test
rol
cmc
cmp
pop
xchg
enter
loop,pn
xchg
add
xor
cmp
dec
pop
scas
and
pop
andl
pop
cmpsb
sbb
adc
and
mov
lock
cmp
xor
ror
mov
bound
xchg
sub
ss
repnz
pop
ret
push
mov
scas
popf
pop
lcall
fst
cwtl
negl
push
sub
rol
aas
jnp
jmp
out
fistpl
in
dec
fdivs
xor
loop
movsl
inc
add
shrl
out
sub
jmp
pop
shlb
js
jb
sbb
jns
bound
xor
rcrl
cld
or
pop
punpckldq
cmp
sbb
jno
das
cltd
mov
inc
sti
sub
adc
xor
sbb
or
push
fcmovne
push
lock
notl
dec
test
inc
ja
or
xor
sbb
jo
ficompl
sbb
adc
fbstp
xchg
sub
fmull
scas
and
mov
lods
fxch
xchg
sbb
out
mov
pusha
or
outsb
test
cwtl
adc
jns
xchg
leave
adc
mov
fwait
sub
shll
jmp
fucomip
jne
cld
insl
outsb
xorb
xchg
xchg
in
adc
sti
push
pop
cmpsl
repnz
or
sbb
aam
pop
jno
dec
popf
and
or
add
fwait
popf
cmp
mov
daa
push
and
mov
xlat
adc
sub
push
andl
add
divb
adc
sarb
jnp
mov
ja
dec
mov
sti
mov
dec
aaa
repnz
jmp
es
xchg
add
cmc
xor
mov
mov
push
push
pop
in
and
xor
adc
dec
push
jnp
lret
inc
pop
cld
inc
push
dec
and
or
or
mov
call
push
out
ret
out
test
or
fstpt
push
dec
loop
leave
negb
sbb
mov
iret
dec
and
xchg
inc
xchg
clc
ret
pop
shll
ret
fwait
mov
clc
hlt
adc
mov
aas
and
bound
pop
retw
jno
inc
xchg
jo
mov
inc
jae
ds
addb
mov
popf
xchg
mov
mov
stc
lods
fadd
xchg
cltd
sbb
xchg
cld
adc
jbe
in
pusha
in
push
cmp
or
xor
jb
jmp
adc
mov
addb
and
rcrl
dec
jb
sbb
pushf
jg
lods
inc
outsl
dec
mov
dec
mov
add
jns
push
jge
add
daa
insb
mov
out
cwtl
aad
dec
jae
insb
std
cmp
mov
push
jmp
out
push
sbb
inc
push
inc
sbb
cmp
scas
pop
loopne
sti
std
push
inc
push
add
adc
xchg
xorl
cli
cmp
fwait
cmpsb
xchg
sbb
cwtl
cmp
jne
hlt
pop
clc
xor
stos
mov
ret
bnd
adc
scas
inc
fucom
mov
jmp
shld
scas
fwait
movsl
notb
enter
and
mov
js
xor
inc
jle
aas
loopne
das
adc
enter
and
cltd
in
dec
stc
pop
mov
jno
lret
pushf
je
xchg
test
dec
fimull
jb
addb
iret
lea
pushf
jge
adc
cmc
das
adc
cmp
pop
test
lcall
xchg
stos
clc
pop
test
call
mov
repz
sbb
lea
dec
mov
sbb
test
dec
xchg
mov
lea
das
add
mov
push
aas
adc
add
fst
push
and
aas
daa
cltd
xor
xchg
inc
jl
jle
popf
inc
pop
gs
jns
mov
dec
pushf
rcrb
pusha
inc
mov
ret
sbb
ja
hlt
outsb
shl
mov
sub
push
xor
cs
outsl
aam
mov
andl
add
xor
sub
decb
call
movsl
loope
sbb
push
and
in
aaa
or
js
in
push
jecxz
mov
decb
push
dec
ret
rcl
stos
fisttpl
mov
mov
sarl
testl
mov
jns
or
in
xchg
incl
sub
jbe
push
cwtl
sub
lods
pop
mov
mov
dec
push
arpl
lock
fs
test
xchg
int3
lods
sbb
sub
sub
or
mov
fcmovb
mov
gs
jnp
sub
enter
lods
sti
stc
aad
mov
jle
xor
insb
pop
mov
xchg
mov
sbb
lea
mov
dec
xchg
shl
mov
lret
push
mov
cli
push
aad
inc
cli
sub
xchg
xor
xor
fnsave
mov
shlb
push
jecxz
sahf
adc
sub
std
into
push
es
lds
mov
fiaddl
mov
push
jle
filds
andb
push
or
es
mov
loope
sahf
add
pop
mov
popf
push
shl
js
je
sub
dec
fs
push
idiv
insl
add
test
jns
cmp
and
push
clc
or
xchg
xchg
jae
xlat
adc
fidivrl
mov
mov
sbb
ret
aas
adc
ret
clc
sbb
mov
nop
scas
add
mov
arpl
test
mov
xor
ja
int3
inc
pop
sbb
ret
call
dec
ss
sahf
jl
mov
stos
pusha
outsl
aas
enter
pop
cmpsl
cmp
inc
arpl
mov
sub
pop
lods
fisttpl
outsb
mov
aad
sti
jno
out
jo
lret
loop
push
cli
dec
mov
inc
xor
adc
jg
fabs
inc
push
cli
mov
xorl
cli
cli
fwait
push
xchg
cli
movsl
xor
imul
inc
inc
push
mov
lods
addr16
mov
arpl
movsb
add
mov
test
pop
cmp
mov
scas
dec
rclb
add
sub
lret
push
scas
inc
xchg
mov
daa
inc
sbb
andb
jo
and
orb
leave
icebp
mov
int
cltd
or
cmp
sub
pop
pop
mov
rcrb
xor
add
add
inc
enter
out
sub
aad
call
dec
mov
and
cmp
xor
push
addr16
ret
movsb
xchg
xor
iret
dec
lea
test
in
lahf
mov
daa
xchg
mov
popf
push
movsb
xor
aaa
movsb
lds
lea
out
pop
dec
mov
lret
pop
dec
and
cmpsb
mov
xchg
stos
in
mull
outsb
mov
in
jecxz
aaa
inc
js
js
sbb
rcr
enter
or
cmc
mov
or
or
cli
jo
and
mov
jg
popf
mov
xor
sub
andb
xor
pop
mov
enter
xlat
xor
pop
adc
mov
icebp
jno
cmc
loopne
push
in
mov
stc
xor
dec
mov
stc
mov
xor
pushf
jbe
cmp
ljmp
outsb
lods
mov
lret
jae
jbe,pt
and
outsl
pop
cmpsl
add
ret
and
adc
dec
or
push
push
dec
lcall
and
and
es
out
add
cmpb
fmul
fildll
insl
adc
outsl
aas
dec
imul
cli
sbb
nop
adcb
daa
mov
sub
add
sub
mov
xor
outsb
adc
mul
jns
cmpsb
outsb
ds
ljmp
xchg
mov
or
sbb
dec
mov
data16
cld
les
jb
sub
or
dec
jbe
repnz
imul
pop
adc
adc
jo
adc
pop
out
arpl
sbb
repz
jae,pt
and
pusha
fistps
imul
jp
dec
lret
mov
mov
mov
repnz
int3
sarb
push
xor
mov
mov
push
add
insl
xchg
js
shlb
popf
int
inc
mov
fstl
lret
adc
jns
inc
lahf
adc
pusha
mov
mov
pop
add
push
push
into
pop
outsl
scas
sbb
xor
dec
dec
push
add
add
out
fistl
pop
sbbl
mov
adc
pop
rcrb
cmp
xor
stos
js
aam
cltd
fldt
shr
and
inc
sbb
pushf
mov
sahf
pusha
jns
mov
idiv
push
cld
insl
jns
and
loopne
and
ds
pushf
xchg
ss
test
imulb
mov
shl
inc
mov
add
push
sub
fisttpll
popf
inc
outsb
cmp
je
insb
mov
stos
or
cltd
test
cli
mov
cltd
mov
push
fiadds
mov
movsl
fucom
mov
adc
xor
xorl
sub
hlt
sahf
mov
inc
int
int3
cli
cmp
sub
push
add
dec
push
pop
mov
fists
outsb
mov
inc
les
xor
push
imul
ret
xor
push
dec
scas
lods
jmp
fidivs
jb
xlat
lods
mov
mov
cld
jnp
loopne
sub
xlat
or
add
and
dec
test
sahf
lret
mov
mov
mov
xchg
mov
sbbb
stos
sarl
mov
mov
inc
and
mov
insl
mov
stos
and
inc
xchg
xlat
pop
sarb
add
test
popa
xchg
mov
ret
inc
insl
in
inc
outsb
sahf
xlat
ss
jae
icebp
jae
mov
pop
xlat
dec
sbb
xor
aaa
cmpsb
dec
mov
subb
cwtl
das
outsl
jbe
dec
push
arpl
dec
aam
adc
shll
mov
pop
stc
je
or
ror
mov
inc
into
arpl
inc
xchg
pop
loop
mov
inc
dec
push
icebp
xchg
fwait
jg
pop
cs
aaa
rcll
or
test
outsb
or
cmpsb
mov
dec
int3
aam
mov
fbld
adcl
mov
movsl
inc
andb
jmp
out
addl
xchg
mov
addr16
adc
notl
xor
cmpsl
inc
pop
call
aas
sub
push
pushf
nop
imul
out
popa
in
xchg
fstl
sub
xor
gs
push
mov
fdivs
call
outsb
frstor
sub
pop
mov
insb
xchg
dec
inc
stos
xlat
pop
inc
scas
out
pop
gs
xchg
mov
push
jl
icebp
push
shl
jb
imul
mov
mov
lahf
push
icebp
outsl
in
fwait
xchg
sub
rclb
sub
int
loop
lock
pop
add
addr16
shl
mov
mov
dec
push
scas
mov
add
mov
popa
xchg
xor
gs
lds
insb
or
sub
repnz
sub
movsb
clc
stos
cltd
push
popa
mulb
mov
adc
mov
stos
lar
sahf
push
ret
cmpsl
lret
gs
add
jge
pop
and
push
test
mov
outsl
out
or
cmp
sub
jmp
or
fwait
pop
and
es
cmp
in
push
aas
shrb
or
xor
ret
push
pop
inc
cmc
rcrl
sbb
movsl
mov
adc
in
mov
push
cmp
mov
insb
jnp
data16
mov
and
jmp
ror
cmp
test
push
push
xchg
xor
sub
sub
ljmp
sub
pop
filds
pop
push
pop
sub
xchg
push
call
mov
pop
in
cwtl
pop
and
inc
in
jae
cmp
inc
and
iret
movsl
push
lcall
jns
sahf
pushf
mov
loope
imul
cmp
outsl
lahf
push
adc
adcl
sbb
pop
pop
dec
cmpsb
notl
es
jp
scas
adc
mov
ss
pop
mulb
ficomps
sbb
or
leave
in
arpl
sti
inc
and
jo
sub
scas
packssdw
inc
adc
flds
inc
int3
popa
aam
sbb
testl
pop
inc
lods
int
adcb
arpl
jmp
pusha
add
shlb
dec
and
push
adc
or
add
jmp
je
mov
xchg
test
roll
les
test
xchg
je
pop
adc
push
out
mov
adc
les
imul
jns
lcall
push
mov
scas
add
cmpsb
iret
push
push
or
test
out
sti
inc
add
add
fildll
test
dec
es
dec
mov
imul
lock
pop
inc
add
das
ljmp
pop
dec
hlt
sbb
mov
test
lea
in
and
not
push
data16
jp
jp
xchg
das
jmp
dec
pop
mov
je
mov
call
pop
dec
cmpsb
in
cmc
iret
fisttps
mov
iret
pusha
xor
stos
mov
cmp
popf
and
icebp
fwait
andl
incl
inc
test
and
int
xor
mov
imul
lret
movsl
out
adc
pop
xchg
push
stos
or
cmp
inc
daa
outsl
imul
lret
imul
cmp
daa
std
repnz
xchg
insl
inc
sti
xor
hlt
sbb
mov
pusha
shl
fldl2t
and
dec
push
and
ret
outsb
lcall
repnz
mov
sbb
cld
and
cmp
rcll
pop
psadbw
rcrb
adc
imul
inc
js
push
pop
inc
push
mov
pushf
adc
sbb
xlat
int
or
das
test
jle
jbe
es
xchg
adc
les
iret
mov
jmp
push
int
mov
xor
jle
add
mov
loope
sub
xor
in
lcall
add
lea
push
sbb
adc
nop
loopne
or
inc
cs
je
jb
je
push
and
das
cmp
lods
pushf
test
sub
clc
scas
inc
push
fnstcw
arpl
in
jecxz
push
insb
xchg
cmpsb
frstor
pusha
js
jno
ljmp
push
jo
test
cmp
inc
push
or
fstpl
mov
js
cmp
movsl
cmpsl
mov
rolb
mov
xchg
pop
xor
or
fbstp
xor
int3
mov
sub
dec
bound
int
bound
dec
ret
mov
pop
sub
aad
jnp
pop
aas
mov
popa
lahf
sbb
jmp
mov
inc
mov
sub
jb
out
add
add
cld
sbb
mov
sub
xor
sbb
or
vmovntdq
cmp
add
in
test
jle
js
jne
stos
fistl
in
mov
call
add
cwtl
adc
sub
inc
push
adc
jne
mov
pop
push
test
enter
pop
test
outsb
or
adc
jo
adc
insl
push
scas
and
fsubrl
pcmpeqb
in
aam
or
inc
push
inc
mov
addb
pop
bound
fsub
jnp,pt
or
mov
fdiv
mov
aam
or
dec
lahf
out
dec
or
loopne
subb
adc
mov
ret
mov
mov
shrb
sarl
test
sar
xchg
pop
stos
cli
mov
inc
out
addr16
xchg
push
cltd
mov
xchg
jo
xor
dec
je
out
push
or
aad
pop
add
pop
dec
stos
dec
jb
scas
mov
aam
data16
mov
hlt
jo
hlt
xchg
pop
ds
cld
loopne
adc
xchg
cmpsl
ss
addr16
unpcklps
in
arpl
add
and
ds
dec
std
inc
mov
cltd
bound
stos
push
movb
cmp
mov
push
mov
mulb
das
adc
xor
ret
clc
subb
fldenv
fidivl
xor
mov
addr16
xchg
xchg
cmp
dec
xor
movsl
push
icebp
aad
jge
xchg
sbb
rorb
sub
addb
pop
xchg
test
push
ss
add
and
mov
nopl
push
push
push
mov
sti
fsubr
mov
mov
movsb
stos
mov
sub
inc
test
sub
inc
div
faddl
inc
mov
loop
xlat
leave
sub
jmp
lret
inc
fiadds
aad
lcall
jmp
insb
rcrb
jnp
and
ss
shl
or
and
xchg
idivl
jne
std
pushf
xchg
stc
in
mov
notb
pushf
cmc
jg
pop
inc
sbbb
lcall
nop
sub
xor
push
mov
cs
sub
aad
imul
push
or
mov
jae
test
mov
mov
cwtl
xor
cmp
cwtl
sub
push
or
je
fistpll
sbb
jge
mov
fisubl
mov
dec
fwait
inc
mov
ret
ja
adc
xchg
repnz
popf
std
rcrl
cmp
dec
add
lods
jne
xor
jmp
mov
test
icebp
push
repnz
stos
mov
pusha
mov
stc
xor
adc
cltd
ss
and
jb
push
testl
cltd
mov
daa
leave
dec
add
into
icebp
fs
cmp
and
jg
mov
mov
aas
fucomip
sbb
sub
mov
mov
shrl
aad
sbb
out
mov
cmp
push
test
cwtl
je
out
push
jnp
idivb
gs
aas
sub
dec
mov
rcrb
jb
leave
mov
call
xchg
mov
scas
sbb
scas
mov
lahf
pop
daa
pop
fwait
xor
xchg
or
in
sahf
xchg
leave
xor
sbb
in
jbe
dec
clc
inc
add
and
push
or
jge
dec
int
mov
add
std
jbe
jmp
dec
xchg
test
add
sbb
dec
std
jae
movsb
jmp
pop
sbb
scas
loope
mov
fstpt
mov
add
cltd
xor
push
into
fnstcw
repnz
cli
mov
mov
or
ljmp
jne
mov
jp
cltd
repnz
adc
je
cwtl
push
mov
jmp
jmp
jg
mov
and
and
jnp
sbb
and
jmp
sub
jecxz
sub
or
das
ret
sbb
ret
cmp
xchg
adc
test
xchg
inc
call
push
or
mov
fdivs
mov
and
and
stos
loope
es
and
dec
inc
js
push
popa
sbb
rcr
dec
les
or
cld
xchg
out
mov
adc
stos
clc
pop
popa
inc
in
jo
mov
ss
les
dec
dec
pop
mov
fimull
add
notb
sbb
bound
pushf
inc
dec
dec
cmp
jmp
das
push
pop
aas
bound
ret
xchg
mov
addr16
inc
sub
xor
xchg
pop
insb
pop
pushf
scas
xchg
data16
lret
data16
imul
daa
xor
add
shrb
add
cmp
fsubrl
jg
lcall
push
dec
inc
add
mov
dec
test
scas
mov
popf
sbb
dec
or
sbb
sbb
mov
push
adc
sbb
pushf
push
pop
pop
push
leave
ja
divb
daa
dec
mov
dec
jne
lahf
lock
popa
pop
dec
xchg
fistl
aam
mov
and
mov
mov
jmp
insl
jb,pt
addb
movsb
test
dec
jp
pushl
cwtl
push
filds
mov
dec
pop
aas
es
jl
cmpb
xchg
or
ret
mulb
pop
push
jbe
xchg
repz
subb
sbb
cmp
pop
in
mov
shlb
sbb
loope
push
pop
pop
call
xlat
cmp
jb
mov
inc
pop
loope
outsb
cltd
add
insb
push
sub
add
ror
cmp
pop
imul
and
dec
push
nop
and
inc
sbb
lds
jb
iret
sbb
das
jle
adc
mov
dec
mov
jnp
icebp
sbb
push
mov
pop
dec
add
adc
jmp
xor
in
loopne
mov
mov
xchg
sbb
cwtl
xor
and
cli
lock
add
xor
sbb
es
push
and
ds
cmpsb
pop
dec
in
jnp
sbbb
jp
jecxz
movsl
add
mov
stos
imul
test
gs
or
rorl
lods
cmpl
sti
subl
and
jnp
sbbl
mov
lea
jbe
jb
xor
fwait
jp
fstpl
and
cmp
dec
mov
push
insb
ljmp
dec
test
ret
add
cmpsb
adc
pop
sbb
insb
mov
into
mov
dec
ret
fwait
push
dec
loopne
and
inc
adc
cmpsl
or
xchg
sub
sar
cmpb
add
sbb
mov
add
push
cmp
stc
inc
xchg
cmp
xchg
jb
jge
mov
xor
stos
cmpsl
lret
inc
sbb
push
pop
pushf
fdivl
out
lahf
jb
xor
rcl
shl
adc
add
loop
pop
icebp
and
sub
fdivs
mov
dec
mov
movb
lahf
sbb
dec
xchg
cmc
mov
and
add
je
push
xchg
mov
scas
jae
fbld
je
inc
sbb
jns
mov
fs
aad
cwtl
outsb
push
cmp
fcomps
jmp
imul
fs
pop
jl
dec
js
imul
xor
fdivs
jecxz
loopne
mov
xor
rcl
mov
data16
lods
mov
xchg
and
out
mov
shlb
ret
out
repz
mov
pop
mov
cld
or
dec
ljmp
cmp
sbb
inc
mov
mov
adc
out
push
sbb
aad
mov
mov
jge
aas
cld
lcall
and
in
jne
pop
sarl
sub
ljmp
aam
adc
repz
js
and
outsl
jecxz
mov
ficompl
xchg
adc
idiv
into
lods
mov
mov
lahf
add
mov
lock
cli
popf
push
dec
push
dec
cmc
sbb
imulb
rclb
hlt
jnp
push
dec
dec
movb
ds
push
cmpb
popf
pop
mov
scas
inc
rcll
jno
sub
pop
or
icebp
lahf
add
or
and
pop
inc
inc
clc
lds
aam
inc
sbb
jge
shlb
and
lds
fildll
stos
rorb
mov
fnstenv
pop
sti
lcall
dec
sbb
das
testl
mov
jmp
push
loopne
adc
adc
push
sahf
sbb
jle
add
shll
mov
std
sbb
push
pop
fldl
pop
push
or
mov
jecxz
jo
push
neg
jmp
imul
and
ja
add
arpl
loopne
adcl
xor
fisubrs
inc
push
or
push
fstpt
push
add
xchg
lret
sub
add
daa
xchg
or
lret
xchg
sub
push
lret
fwait
xor
out
lods
scas
sbb
arpl
mov
pushl
jo
aas
movsb
aam
pop
aam
or
ret
sbb
icebp
push
mov
notl
push
rcll
jbe
mov
int3
mov
lock
add
and
or
pop
loopne
inc
mov
shll
pop
or
aas
mov
add
mov
fdivl
or
push
xchg
dec
into
sbbb
les
imul
std
push
xchg
add
sub
out
jmp
lds
mov
inc
jb
incb
pusha
iret
dec
out
outsb
popa
add
mov
insl
iret
repnz
js
data16
aas
mov
xchg
fisttps
and
addl
xchg
jge
cmp
cli
lret
or
out
add
mov
ret
psubusw
sub
sbb
adc
sbb
sub
xchg
addr16
xor
dec
push
pop
mov
cmpsl
inc
sarb
mov
test
push
loop
data16
push
ljmp
stc
subb
mov
mov
xchg
nop
loopne
pushf
leave
fidivl
ljmp
stos
mov
push
out
xor
lret
mov
pop
pop
mov
ficomps
push
int3
andb
lock
out
dec
sbb
adc
inc
clc
pop
mov
sub
call
add
adc
addr16
add
xlat
xor
xchg
push
xchg
out
mov
lea
aam
mov
adc
mov
add
mov
sbb
add
ja
ret
out
xchg
aaa
mov
pusha
arpl
mov
cmpsb
add
mov
inc
jmp
in
add
mov
movsl
stc
icebp
inc
outsl
popa
push
test
add
sbb
insl
or
pop
ss
fsubl
pushf
mov
push
and
orl
pop
adc
add
sbb
aas
mov
lahf
add
das
int3
ljmp
cmp
call
mov
lret
and
pusha
out
fdivrl
xchg
pop
xchg
icebp
cwtl
inc
div
push
je
std
mov
leave
inc
jae
sub
fcmovnb
push
gs
in
daa
mov
push
aas
sti
inc
in
sbb
mov
adc
clc
cltd
mov
cmpb
testl
dec
xorb
cmp
jo
sub
sbb
inc
xor
dec
ds
inc
pop
mov
cltd
daa
or
add
mov
jg
iret
and
xor
lods
push
mov
adc
aam
cli
add
jle
std
fsubp
js
into
and
xchg
adc
imul
repz
pushf
push
jae
scas
mov
insl
sub
test
out
add
jnp
les
cmp
into
out
pop
cs
fwait
add
xor
ljmpw
adc
jge
push
push
sarl
in
fsubs
dec
insb
stos
mov
and
jmp
sbb
aaa
push
jp
popa
orl
cmp
lret
js
das
pop
out
jbe
insb
testl
adc
stos
cmpsb
pop
loope
mov
cmp
movsl
les
jns
add
imul
ffree
imul
sub
mov
jo
mov
adc
jb
pop
aad
pop
imul
nop
cmp
mov
sti
jg
adc
pusha
rclb
jb
gs
xchg
mov
mov
jecxz
and
shll
nop
pop
in
inc
clc
lahf
push
loopne
mov
fucomip
xchg
cmpsb
mov
out
cmp
in
push
pop
nop
fisttpl
pop
pop
hlt
xor
adc
dec
push
cmp
jl
xchg
jno
mov
lock
cmpl
add
fildll
pushf
out
outsl
xor
adc
push
loop
sti
push
loope
xlat
xor
push
icebp
popa
cwtl
push
cli
add
mov
push
movsl
adc
inc
push
push
in
mov
iret
out
pop
mov
popf
jg
xchg
push
inc
sub
push
mov
xchg
xor
and
sub
xchg
jno
jno
pop
sub
or
adc
out
sbb
movsb
or
sbb
out
pop
dec
jne
mov
lock
push
ds
out
call
mov
insl
shll
and
sbb
xchg
inc
lods
and
jle
push
cs
adc
fnstsw
test
lcall
cmp
or
imul
pop
loope
sub
lahf
dec
testb
mov
jbe
pop
rcrl
insb
push
ret
scas
das
sbb
push
lahf
je
fwait
cld
ret
icebp
xchg
dec
fnstsw
daa
lret
mov
add
inc
out
mov
dec
lea
xchg
lea
out
dec
incb
inc
sbb
test
push
and
sbb
push
push
sarb
xchg
sub
sub
mov
stos
dec
inc
dec
cmp
sarb
jne
xchg
fs
call
aaa
dec
fdivs
lds
std
and
call
scas
and
and
iret
add
jge
xchg
and
dec
call
aad
sarb
rol
fsubrl
icebp
push
loop
inc
outsl
inc
stos
xor
enter
adc
jmp
adc
adc
stos
bound
pop
jmp
jmp
fwait
push
shl
mov
pop
pop
jp
repnz
add
mov
jmp
scas
jnp
mov
out
cwtl
imul
std
xchg
push
push
ljmp
dec
daa
push
test
fnstenv
out
out
dec
pop
mov
pop
and
mov
xor
sbb
test
add
pop
mov
lahf
dec
sub
cmpl
enter
sbb
aaa
rcll
jmp
cmp
or
popf
in
stc
push
ja
jne
movsb
mov
das
enter
pop
idivl
fdivrp
mov
cmpsl
xchg
mov
mov
cmpsl
xchg
or
fisttpl
push
loope
icebp
jp
popa
mov
rorl
out
imul
xchg
mov
xchg
imulb
xchg
xor
mov
jo
mov
fisubl
shr
jno
test
aam
xor
sub
mov
push
xchg
cmc
lcall
jne
rcr
in
sbb
stc
les
dec
ljmp
sbb
cmpsl
adc
jge
icebp
xor
mov
adc
push
push
jno
popa
loopne
sbb
outsb
int
lods
push
jb
inc
pushf
xor
dec
pop
daa
popa
adc
pushw
mov
aaa
icebp
test
mov
jo
jb
xor
and
jp
mov
sbbb
dec
sbb
and
fs
out
add
inc
mov
jg
pop
loopne
cmp
xor
xchg
sub
mov
test
rcl
xor
sbb
push
testb
mov
adc
pop
mov
shlb
repnz
xor
jnp
imul
pop
repz
xor
addl
ja
lahf
lahf
cltd
xor
cwtl
stos
jl
inc
pusha
arpl
pop
arpl
jmp
inc
fnstenv
dec
pop
mov
int3
iret
aam
mov
lahf
mov
xlat
inc
repz
fcoml
test
jne
aad
shll
mov
or
jnp
cmp
ja
subl
sub
mov
inc
jno
cli
popa
wrmsr
dec
fwait
mov
out
stc
pop
pop
out
stos
int3
int
mov
lods
push
jge
rclb
or
push
movsb
push
pop
mulb
scas
push
mov
mov
jp
mov
dec
mov
mov
imul
sub
jne
test
push
and
sbb
inc
stos
popw
sbb
ror
outsb
sbb
mov
dec
add
dec
adc
pop
call
dec
push
repz
and
sbb
xchg
add
inc
sub
shlb
test
mov
adc
in
push
daa
lods
lret
cmp
loope
addr16
hlt
cli
and
xor
adcl
push
inc
test
stc
mov
scas
pop
inc
add
jmp
in
lods
or
arpl
cmp
dec
adc
fildl
xlat
dec
mov
cmp
adcb
xchg
sub
icebp
ffreep
bound
and
sub
sahf
cld
aad
pop
pop
pop
dec
leave
and
mov
test
sti
pop
pop
inc
push
adc
cmp
xor
or
fwait
push
mov
aad
dec
sub
xchg
mov
adc
pop
stos
dec
outsb
mov
in
sub
adc
repz
gs
scas
pop
inc
inc
pop
test
out
xchg
xor
mov
mov
stos
mov
sarl
inc
mov
mov
notl
mov
cmp
xchg
movsb
lea
cmpb
pop
fs
es
loopne
jo
je
jno
cltd
push
mov
loop
cli
jp
pushf
mov
xor
leave
or
dec
out
call
aam
sub
fildl
mov
xchg
gs
xchg
push
push
push
xchg
adc
stos
xchg
out
repz
inc
jbe
dec
mov
inc
xor
rorb
fdivl
test
je
rorl
ret
cmpsb
in
xchg
out
or
addr16
lcall
imul
mov
jnp
mov
or
in
mov
jb
dec
xor
jg
xchg
lods
cmp
jns
jl
lret
test
mov
addb
insl
mov
loop
or
add
pop
movsl
out
rcrb
scas
adc
mov
push
in
shll
or
jge
andl
mov
in
mov
call
je
cmp
jo
outsb
jnp
call
dec
fcomps
cmp
sub
fcoml
push
mov
cmp
cmpsl
push
jno
pop
mov
pop
xchg
xchg
mov
xchg
data16
arpl
rcll
xor
popa
aaa
inc
ja
pop
rclb
aas
push
arpl
das
cmp
fcompp
fwait
out
dec
mov
pop
sbb
adc
call
inc
popa
xor
outsb
dec
mov
int3
lock
lret
lods
dec
movb
orb
shlb
mov
dec
add
sbb
push
mov
mov
ret
sub
xor
jp
add
adc
icebp
add
or
popf
mov
cmpb
mov
repnz
xchg
xchg
clc
loopne
nop
xchg
push
xor
popa
shll
adc
xor
or
jecxz
addb
cmpsb
adc
inc
mov
sbb
xor
mov
or
xchg
or
popf
fcom
jle
mov
cmp
mov
flds
push
cltd
repnz
test
push
rcrb
pop
cmp
xchg
pop
sub
pushf
into
push
mov
sbb
sbb
dec
inc
pop
lds
cli
mov
xor
inc
xchg
ss
xchg
fstl
loop
mov
jns
scas
std
rclb
xchg
outsb
cli
pop
popl
addr16
mov
stos
jle
push
test
ret
xor
jmp
jo
push
adc
push
dec
nop
adc
enter
outsb
sti
sbb
or
fiaddl
jge
push
pop
mov
pop
enter
loop
adc
movsb
mov
sub
mov
push
cmp
mov
xor
int
add
aas
loope
xlat
mov
mov
sarl
cmp
ljmp
sbb
movsb
and
pusha
mov
lret
mov
andl
xlat
data16
xchg
sbb
jae
add
imul
pop
push
mov
add
jne
jns
ficomps
sahf
js
dec
xor
adc
int3
inc
pusha
jl
or
mov
scas
mov
mov
std
outsb
leave
test
pop
push
adcl
lods
inc
pop
repnz
inc
or
int3
xchg
dec
or
fwait
pop
jnp
dec
jle
xor
cwtl
stos
and
mov
or
push
in
push
nop
cli
push
in
leave
enter
cs
push
std
push
mov
sbbb
leave
mov
shrl
sbb
pop
sub
jle
pop
fisubs
jmp
push
out
out
fs
pop
outsl
mov
lahf
ss
enter
popf
out
andl
push
arpl
movswl
scas
lock
and
out
xchg
pop
mov
xchg
mov
das
lea
push
xchg
mov
and
push
push
jns
test
flds
mov
aam
out
add
push
lcall
cli
mov
mov
pcmpeqw
push
mov
stos
xor
fucomip
xor
fcmovbe
hlt
add
jns
mov
or
and
pop
testb
push
jecxz
fistpll
daa
jne
sub
cmc
inc
inc
insb
aam
enter
or
and
cli
and
out
push
xor
mov
int3
nop
adc
and
jns
push
dec
outsb
lds
xchg
adc
stos
aaa
in
stos
std
adc
sub
outsb
es
sub
jne
test
sbb
add
jge
xchg
repnz
cltd
push
and
dec
push
jb
sbb
xor
sbbb
dec
lcall
outsl
sbb
aaa
jbe
cld
mov
lods
jecxz
dec
inc
jle
push
push
jp
mov
fisubrl
push
push
scas
mov
outsb
xlat
jae
push
and
inc
push
jle
icebp
dec
adc
repnz
sbb
out
add
pop
mov
aaa
pop
hlt
push
addb
fiadds
pop
jnp
jp
fwait
xor
enter
mov
jmp
push
ds
and
mov
decb
outsb
jecxz
cmpsb
lds
scas
leave
jge
lahf
dec
xchg
pusha
push
in
xor
push
sbb
and
mov
mov
or
push
mov
and
in
xchg
push
andl
mov
jl
sub
dec
bnd
in
mov
lock
sub
mov
mov
mov
dec
jo
lret
mov
mov
pop
mov
push
jo
pop
andb
dec
jno
aam
fs
fdivs
popa
jb
inc
popf
push
mov
inc
sbb
cs
or
iret
sub
push
jp
hlt
pop
repz
adc
test
add
inc
adc
pop
pop
jns
jne
inc
sbb
gs
pop
adc
xor
pop
insb
dec
loopne
mov
jo
enter
mov
in
lcall
fcmovnu
push
inc
shll
iret
lock
adc
cwtl
inc
xor
sub
pop
pop
sub
lock
push
stos
int3
cli
dec
pop
stc
and
sbb
xlat
js
clc
sbb
mov
or
sub
fcoml
aaa
shll
xlat
push
pop
sti
xor
cmp
mov
testb
or
push
popl
push
mov
lret
arpl
sub
hlt
mov
jmp
in
sahf
add
fadd
jbe
push
dec
push
repz
in
push
or
clc
inc
outsb
pop
adc
das
inc
and
xchg
mov
inc
jle
imul
out
gs
and
xor
jl
adc
gs
dec
mov
pushf
movsl
decb
loope
xchg
jecxz
cli
and
xchg
ret
xor
dec
dec
push
fistps
ficoml
jae
dec
pop
mov
jl
rorl
jmp
shl
xchg
insl
mov
dec
push
xor
inc
jae
ss
xor
subl
movb
pop
stos
faddl
push
out
das
repz
sub
add
jle
inc
movsl
lret
mov
pop
out
mov
jge
popf
insl
mov
jmp
repz
push
mov
mov
jne
fstpt
insb
mov
test
push
add
xor
jb
aas
lods
inc
sub
data16
dec
push
mov
and
clc
add
xlat
mov
cmp
cs
push
adc
fisttpl
xchg
fisubrl
icebp
cmpsb
mov
mov
fwait
outsb
iret
je
mov
xor
insl
inc
lahf
push
xor
inc
jae
mov
mov
add
lea
xchg
sbb
or
or
or
ja
fmul
leave
adc
jmp
jnp
adc
adcl
pusha
mov
jp
sub
lahf
add
mov
adc
mov
mov
dec
fwait
out
pushf
or
iret
push
jnp
xlat
cmp
xchg
push
in
xchg
test
insb
xor
addr16
iret
push
std
push
and
repz
mov
mov
sbb
rorl
mov
aam
stos
push
jl
ljmp
fadds
add
adc
lcall
rcrl
cs
jecxz
add
push
mov
fs
popf
arpl
ja
stos
lds
push
push
jne
out
fxch
fdivp
test
pop
add
scas
imul
into
mov
pop
sub
aas
jp
sbb
pop
fisubrl
push
push
pop
lahf
mov
gs
sbb
rcrb
ret
lods
in
sub
subb
cltd
insl
push
repnz
push
cli
jmp
or
add
sbb
fmuls
inc
filds
pop
mov
mov
sbb
jg
pop
sub
sub
jns
xchg
mov
divb
aas
test
fnstsw
adc
nop
dec
mov
pusha
jae
mov
sti
dec
rcrb
stos
mov
ljmp
lds
inc
dec
push
in
xchg
testl
add
shll
pusha
push
sub
popa
push
cmp
pop
hlt
mov
repz
fs
cmp
xor
dec
and
pop
add
inc
lahf
std
fndisi(8087
fstpt
outsl
js
add
test
inc
mov
cmp
rolb
aas
mov
cmp
rolb
imul
dec
add
jge
inc
mov
mov
mov
fwait
pop
ret
jmp
dec
enter
rorl
fsts
scas
jbe
pop
push
xchg
scas
jp
sbb
int3
xchg
and
cmp
adc
pop
in
mov
faddp
sub
stc
aad
cmp
push
xchg
sti
xchg
cmp
testl
adc
push
call
sub
das
add
mov
inc
xchg
out
nop
xor
mov
nop
mov
movsb
loope
lock
sub
ds
push
outsl
mov
cmp
insb
mov
push
fistpl
mov
mov
jae
test
lock
cmova
push
xchg
inc
in
pushf
inc
fdivl
lds
mov
sti
cmp
sub
dec
movsl
or
jae
std
cmp
and
mov
mov
xchg
out
in
leave
mov
push
jns
das
cltd
add
push
daa
lods
movsl
sbb
les
mov
push
inc
cwtl
mov
xor
cmp
sub
xorl
test
call
ja
adc
xor
jle
and
in
flds
lahf
inc
mov
mov
mov
in
bound
and
lcall
clc
lret
jb
or
jns
inc
sub
adc
clc
dec
sbb
pop
pop
test
aas
xor
adc
lret
xchg
int
icebp
ljmp
les
lods
jbe
inc
nop
xor
push
jg
sbb
rolb
add
lods
jl
imul
and
cli
ljmp
pusha
and
cmp
ss
scas
mov
test
int
lret
mov
push
js
cli
rol
lds
addl
and
lret
xor
push
or
cmp
ret
inc
fsubs
adc
mov
mov
mov
fmull
sbb
adcl
xchg
in
in
dec
jns
xor
and
push
inc
mov
sbb
sbb
mov
xchg
push
sbb
push
pop
call
stc
mov
stc
jg
sar
push
shrl
stos
and
arpl
jnp
xchg
movsl
sbb
inc
andl
std
in
rcr
jle
bound
idivb
cltd
jne
jns
pop
into
icebp
aaa
mov
mov
pusha
bound
or
cmpsl
inc
sub
cmc
and
jns
push
icebp
or
mov
adc
shll
out
dec
insl
pop
ljmp
or
inc
inc
subb
nop
mov
add
pop
into
scas
jmp
and
jo
subb
lret
mov
out
lret
push
mov
rcll
movl
in
cmpb
inc
pop
adcl
hlt
add
dec
aad
pop
inc
fstps
mov
es
jae
testb
cwtl
pop
jg
nop
add
aam
scas
jle
ljmp
inc
movaps
jmp
cmpsl
mov
cmpsl
movb
pop
lods
popf
mov
lods
lods
sub
sbb
popf
in
mov
mov
mov
adcl
in
imul
and
outsl
dec
add
rclb
or
insb
rolb
pop
into
subl
sub
addr16
push
push
das
pop
ficoml
mov
push
mov
test
cmp
imul
sbb
sbb
js
leave
rcrl
aad
andb
test
jo
or
mov
int3
jge
shrl
cmpsb
data16
sub
adc
push
fistpll
cli
xchg
xchg
cmp
adc
scas
leave
cmp
mov
test
insb
scas
mov
insl
cmp
mov
push
fs
mov
dec
pmaddwd
xchg
xor
shrl
sbb
pop
adc
mov
dec
sar
pop
mov
and
into
fld
mov
stc
loop
cmp
stc
and
mov
push
in
mov
mov
adc
inc
cld
sbb
in
xchg
sbb
xor
ret
jbe
jge
mov
repz
cmp
lret
and
cltd
ficoms
int
roll
fnstcw
xchg
std
insl
pop
loop
out
cli
aam
dec
dec
adc
lcall
mov
jno
mov
cmp
ret
xor
pop
push
out
mov
cld
or
sahf
push
add
push
xchg
dec
dec
cmp
adc
outsl
cmp
mov
ficompl
mov
mov
xchg
xchg
cmp
bound
or
cmp
cmp
idiv
arpl
cmp
jg
cmpsl
xchg
cmp
cmpl
jno
leave
loopne
arpl
lret
fs
mov
ret
scas
xchg
popf
xchg
cmp
dec
sub
xor
mov
sbb
fstpt
pop
add
pop
push
push
push
scas
cs
sarb
mov
insl
cs
cmp
andb
mov
scas
sbbl
enter
cmc
pop
in
xchg
push
sarl
and
or
push
movb
push
sbb
dec
inc
mov
loopne
inc
out
icebp
jg
mov
cmp
in
pop
mov
loop
dec
and
sbb
incb
lcall
es
fs
jno
je
or
outsl
sub
mov
jp
jl
and
mov
aad
push
cmpsl
xchg
push
test
sbb
dec
gs
xor
sarl
in
sub
int3
and
xlat
xor
xchg
dec
adc
inc
mov
lret
jge
or
push
cmpsl
stos
in
shrl
imul
pop
dec
cmp
or
push
subb
imul
xor
test
add
xorb
testb
mov
cmp
popa
es
mov
mov
arpl
mov
pop
ror
std
into
cmp
lcall
and
pusha
ret
sub
cmp
dec
in
fistpll
mov
les
cltd
je
xchg
pop
mov
and
cld
loopne
orl
push
fs
in
pop
out
adc
dec
icebp
adc
mov
xor
in
inc
sbb
int
xor
je
dec
add
pop
push
mov
js
icebp
cmp
inc
adc
in
pop
sub
out
push
stc
decb
xchg
outsb
mov
or
addr16
imul
jno
lock
dec
cmp
aad
lcall
or
in
pop
adc
sbb
les
sbb
and
pop
das
ffreep
jp
loop
mov
or
ret
mov
xchg
aaa
push
test
ss
sub
sahf
fimull
push
stos
lock
xor
aaa
repz
jns
push
in
inc
enter
sub
jne
cmc
cli
adc
cld
inc
mov
addr16
inc
mov
sti
adc
sahf
cmp
movsb
adc
neg
jmpw
push
jae
and
mov
ja
loope
test
adc
aam
aas
out
sub
cvtps2pd
fistps
movsl
negb
pop
push
stos
in
pop
popl
ljmp
mov
mov
stc
dec
xchg
and
aas
insb
lret
fsubrs
dec
lea
int
push
test
adc
lea
pop
or
js
cmp
sbb
frstor
in
repnz
lock
es
testl
mov
loop
xchg
xchg
jnp
adc
jecxz
pop
pop
mov
sti
test
inc
arpl
add
je
mov
cmpl
xchg
jl
hlt
xchg
xor
test
out
xor
inc
xchg
inc
fwait
pop
mov
cld
out
mov
mov
sub
scas
dec
pop
addr16
adc
cwtl
push
dec
je
sar
int3
repz
jne
adcb
xchg
mov
xchg
xchg
loope
or
lret
pop
test
sub
test
inc
test
cmp
inc
dec
jns
and
fstpt
push
push
pop
das
icebp
dec
fsubr
xorl
mov
shll
sti
mov
jne
push
or
cmp
adc
inc
repz
fnsave
xor
push
adc
jnp
dec
inc
add
ret
pop
adc
iret
mov
fs
and
fisubs
repz
ds
sub
repz
outsl
hlt
popf
dec
jne
imul
dec
add
out
popa
subl
mov
mov
imul
lret
mov
push
mov
dec
add
inc
enter
hlt
out
pop
jl
jae
jle
jae
into
int
and
adc
sbb
test
sbb
out
mov
pop
subl
into
pop
andb
and
xor
push
add
fmull
test
imul
sbb
cld
mov
sub
int
or
inc
jmp
adc
pop
sbb
mov
sbb
daa
cmp
xor
push
repz
lret
std
xchg
push
inc
adc
xor
cli
out
and
xchg
mov
insl
fcomps
lret
mov
ficompl
cs
jb
js
jle
rolb
cmp
sub
shlb
adc
js
or
or
and
jns
jns
fsubl
in
cmpsb
jns
or
out
fidivl
xchg
in
mov
mov
outsl
jle
loopne
out
pusha
icebp
test
and
jge,pn
or
inc
int
jns
loop
sbb
and
insb
push
sub
cmp
aad
cmc
and
push
and
imul
dec
cmc
fcomps
popa
inc
loopne
xchg
fisubs
cli
fnstenv
popa
test
jge
mov
leave
mov
push
sbb
popa
or
lock
test
jle
sub
sbb
xchg
stc
ja
sub
cmp
bound
mov
fdivrs
jg
jmp
mov
ret
xchg
scas
daa
fstpt
sbb
mov
in
sub
xorb
sub
es
push
pop
mov
sub
inc
bound
dec
cs
or
mov
jmp
ds
bound
mov
hlt
leave
mov
pop
pop
aam
jbe
mov
add
xchg
adc
ja
lret
mov
xchg
cwtl
lahf
jg
pop
mov
or
dec
mov
outsb
xor
aam
xor
std
test
jle
into
fidivs
lahf
and
push
add
pushf
shrl
iret
int3
mov
shrl
pop
lret
cmp
das
xchg
mov
shl
add
out
mov
bound
cld
mov
mov
and
add
inc
aaa
aaa
dec
cmp
sub
lahf
stc
jns
dec
mov
mov
mov
jno
cmp
jge
cmpsb
daa
hlt
lea
mov
mov
dec
mov
xor
mov
int
in
mul
es
mov
dec
ja
add
in
mov
sbb
xchg
jbe
out
xor
mov
mov
jns
xor
iret
test
or
dec
cld
arpl
imul
adc
inc
jnp
scas
shrb
cli
dec
add
lcall
pop
jecxz
addl
jo
cmc
push
xor
mov
loope
jne
fmuls
insb
arpl
push
loopne
loope
arpl
jnp
pop
lsl
pushf
or
inc
push
push
jecxz
out
lods
ret
mov
and
nop
xor
push
adc
mov
adc
movsb
mov
adc
jb
mov
sbb
sub
sub
sbb
test
imul
roll
mov
sub
fisttpll
and
cmp
mov
aam
addr16
sbb
push
jne
test
cmp
adc
imul
test
fistl
les
lock
arpl
cmp
pop
cmpsl
pop
xlat
lret
popa
inc
xchg
xchg
fwait
roll
addr16
bswap
jb
aas
repz
insl
mov
pop
push
xchg
sahf
inc
cmpsb
psubw
out
xchg
dec
movsb
sbbl
movsb
push
mov
mov
jne
push
mov
lock
dec
push
jle
mov
hlt
add
adc
push
jo
pop
pop
or
lods
xor
gs
and
loop
sahf
int3
sub
ja
and
insb
xor
sahf
mov
repz
lds
mov
cmp
adc
jae
dec
inc
sahf
lahf
mov
and
xchg
sbb
fisubl
xchg
sbb
sub
xor
mov
push
pop
inc
xlat
add
or
add
dec
dec
addb
dec
cwtl
inc
push
ret
lea
fsts
movsl
cltd
pop
lcall
mov
andl
pop
and
clc
sub
cmp
fidivs
fs
adc
pop
lds
int3
push
rorl
mov
cmpb
adc
flds
cld
mov
fmul
mov
inc
xor
xchg
jmp
testb
sub
stos
sub
ret
mov
mov
repnz
lods
ja
out
ja
or
mov
das
cmp
sub
call
sbb
sbb
xchg
mov
icebp
xor
mov
push
insb
dec
test
scas
dec
fstpl
mov
mov
aad
or
subl
add
popf
mov
icebp
insb
aad
imul
cmpsl
push
subl
ljmp
sbb
push
sub
rclb
push
lret
inc
mov
addr16
xorl
cmp
loop
dec
leave
je
xchg
push
sub
jnp
das
sub
fnstcw
stos
or
test
xchg
adc
rcrb
mov
shrl
xor
dec
outsb
add
push
bound
xchg
outsb
cmpsb
test
pop
les
pop
sbb
push
push
lea
mov
xor
dec
push
inc
push
inc
pushf
sbb
mov
je
mov
call
and
movlps
adc
pusha
xchg
ficoms
cmp
jb
nop
in
mov
and
test
xlat
jae
inc
repnz
sbb
fwait
cltd
cmpsb
jnp
out
jns
xor
mov
fisubrs
push
rcl
lret
inc
inc
mov
aad
mov
pop
adc
test
sbb
mov
jno
cmp
sub
or
jp,pt
cltd
xchg
scas
fdivs
push
sbb
jl
hlt
mov
ljmp
adc
adc
mov
pinsrw
mov
cmpsl
mov
or
xor
adc
dec
stos
pop
sub
add
jbe
xchg
mov
shr
out
pushl
pop
stc
inc
fdivl
mov
xlat
sti
push
pop
jae
mov
inc
aas
push
hlt
fimull
push
scas
fldcw
dec
popa
mov
xlat
sbb
or
mov
sahf
jecxz
out
test
adc
cld
dec
pop
mov
outsl
out
cmc
rep
ljmp
pop
stos
xor
mov
dec
fwait
xlat
or
in
cmp
mov
push
dec
insb
mov
ds
out
orb
ja
mov
mov
jo
adc
pop
std
cmp
xor
fimuls
hlt
pop
sub
push
shl
xchg
mov
in
jne
push
or
leave
movsb
or
popf
bound
repnz
push
pushf
test
xchg
sbb
test
movsl
stos
xchg
mov
jae
cltd
ja
imul
gs
out
ja
push
or
mov
xor
push
rolb
jo
mov
and
int3
mov
ret
xorb
push
xchg
mov
fstpt
mov
repz
rcl
es
mov
or
pop
fldenv
and
mov
or
outsb
pop
sub
dec
jmp
daa
and
xor
fwait
push
inc
loope
enter
mov
jb
fdiv
xor
repnz
lret
cltd
rolb
sahf
pusha
lret
push
adcl
sbb
and
cmp
inc
les
bound
pushf
das
mov
and
call
xchg
mov
cmp
mov
and
sti
lret
lea
mov
cmpsb
cmp
lret
jecxz
or
adc
in
enter
xchg
push
scas
xchg
sahf
jbe
sbb
dec
movsb
std
jp
add
sub
push
divb
add
xor
call
lock
in
mov
sbb
xchg
cmp
push
lea
hlt
rcll
jp
inc
lcall
fstpt
fstl
outsb
xor
push
push
outsb
popf
push
cmp
adc
fsubrl
inc
stos
outsl
shrb
js
sbb
fcmovnbe
sbb
fdivrl
push
jne
das
inc
ds
ret
cmp
jp
shll
and
insb
and
mov
mov
pushf
mov
cltd
sbb
imul
mov
jns
mov
pop
mov
das
fdivr
loope
stc
fldenv
cltd
cmp
lcall
xor
popa
fmull
push
bound
ficomps
pop
sbbb
sbb
adc
aam
cmp
jl
cmpsl
xchg
dec
and
clc
inc
ds
dec
mov
setp
push
cwtl
pushf
push
in
gs
fucomp
pop
out
fisttpll
aad
push
xor
adc
in
xor
imul
in
cmp
ror
sti
xor
pop
jno
and
mov
int
out
into
enter
fnstsw
rcrb
inc
mov
push
jbe
sub
add
mov
push
adc
je
dec
xor
jle
jnp
pop
inc
cltd
repnz
dec
pop
lock
pop
popa
pushf
lods
adc
jbe
and
in
pop
jg
aas
jge
push
mov
mov
sub
fsubrs
dec
cmp
adc
push
push
mov
adc
push
aaa
pop
cmpsl
jle
roll
xlat
rcrl
adc
cmp
mov
and
lds
jbe
rcl
sub
rcll
jne
dec
xchg
lods
test
leave
xchg
imul
es
pop
fistpll
daa
movsb
dec
and
sbb
popa
rcl
ficoms
push
inc
gs
fdivrl
mov
cmp
fisttps
pusha
push
ds
outsl
pop
or
lahf
iret
push
aaa
ljmp
push
ss
scas
jp
mov
adc
flds
mov
jl
and
xchg
subb
xchg
sbb
fidivrs
mov
mov
je
jmp
add
sarb
add
iret
mov
pop
cmp
push
popf
test
ret
jnp
mov
and
sbb
ds
dec
ret
das
adc
gs
stos
or
cmp
in
sbb
mov
scas
pop
or
jp
pop
cmp
add
lods
loopne
add
adc
fistpll
lods
sti
andb
test
mov
push
movsl
sbb
push
lret
mov
xchg
mov
sub
andl
stos
mov
mov
lds
and
push
pop
out
clc
fnstsw
adc
test
lcall
leave
mov
hlt
loopne
xchg
sarl
add
mov
xor
movsl
cmpsl
push
faddl
dec
jecxz
sub
sbb
outsl
push
lock
das
in
xor
stos
pop
sub
xor
shl
outsb
jle
dec
mov
rorl
jne
cld
sub
daa
shrl
mov
shlb
ffreep
push
mov
nop
or
mov
stos
pop
dec
and
dec
xor
jo
aas
xor
jns
add
leave
negl
orl
stos
add
loope
jbe
test
outsb
push
stos
inc
mov
and
or
cmp
jb
out
rolb
inc
xchg
mov
cmp
sbb
or
stos
mov
sbb
xchg
into
insl
ret
jb
les
call
stos
lds
ss
jle
popf
pop
mov
push
and
shrb
xlat
or
mov
or
sub
xor
pop
in
inc
push
inc
mov
pop
sub
adc
push
minps
stos
loop
mov
fidivrs
test
ja,pt
stos
push
xor
mov
pop
add
push
jnp
adc
inc
aaa
dec
mov
imul
fldl
or
add
test
scas
bound
lods
gs
sti
mov
mov
dec
sahf
aad
ret
test
pop
clc
nop
cmc
mov
repz
add
pop
rcll
mov
cmpsl
mov
sti
icebp
jge
mov
testb
pop
sub
stos
cmp
and
xchg
out
mov
add
jle
hlt
add
mov
xchg
cmpsb
mov
dec
sbb
and
adc
mov
lret
push
push
mov
adc
sarb
xchg
clc
mov
loope
cli
iret
stos
xchg
mov
lret
mov
adc
adc
shrb
jge
sub
dec
cmp
sbb
fadd
loopne
xchg
popl
lock
dec
cltd
sbb
rcl
movzwl
jns
outsb
mov
test
notb
mov
ds
pop
xor
jne
inc
xchg
inc
aam
lds
mov
adc
dec
in
push
or
std
adc
in
cld
mov
repnz
pop
sub
cld
sarl
cmp
rorl
out
xchg
fidivrl
pushf
scas
mov
push
js
push
outsb
mov
push
call
xchg
sahf
sub
pop
repz
movsb
rcll
std
inc
jo
pop
cmp
sbb
jmp
inc
sub
scas
xchg
addr16
fs
jne
add
inc
sti
mov
into
xchg
pop
add
push
and
movsl
aas
inc
mov
push
push
pushf
fidivl
pop
pop
xor
and
add
sub
xchg
mov
sub
fs
pop
mov
test
test
adc
dec
hlt
scas
pop
push
cmpl
xchg
sub
mov
adc
cs
jecxz
test
jge
rdmsr
int
jnp
scas
das
inc
push
xor
or
sub
mov
into
sub
es
jmp
mov
sbb
ret
jg
sbb
sub
add
xchg
inc
or
cltd
imul
pop
xchg
xlat
jbe
in
mov
ss
flds
mov
ds
scas
inc
xor
jl
divl
mov
mov
and
inc
inc
pop
jmp
repnz
hlt
mov
in
loop
aam
inc
insl
inc
adc
push
mov
adc
fsubrs
xor
repz
pop
aaa
inc
add
lret
insb
sbb
insl
jmp
push
inc
cmp
fs
and
jl
mov
lods
leave
inc
je
dec
pop
mov
in
add
xchg
mov
arpl
popf
inc
in
pop
pushf
aaa
pop
mov
and
repnz
sbb
and
dec
testl
cmpsb
leave
pop
aaa
pop
adc
das
push
pop
inc
cmp
mov
into
add
mov
cmp
xchg
fdivrs
call
xchg
into
in
add
cmp
jo
jo
lock
pop
in
imul
push
addr16
sub
sti
adc
cmp
rcl
mov
xor
adc
adc
cmc
mov
nop
mov
mov
loop
sti
popa
jne
icebp
sahf
hlt
dec
or
arpl
add
inc
sub
rcrl
jg
fdivr
sub
pushf
push
call
xchg
mov
push
add
adc
sbb
dec
and
nop
fisubrs
pusha
cs
pop
xlat
add
insb
add
ljmp
mov
or
popa
je
jne
jge
push
adcb
hlt
adc
repnz
flds
cmp
mov
inc
mov
push
enter
inc
push
icebp
cmpsl
cli
adc
in
sbb
push
aas
cmpsl
clc
pop
popf
loopne
or
sbb
add
jle
add
push
into
mov
push
mov
mov
popa
adc
push
xor
cmp
jo
clc
sub
daa
sub
cmp
xor
and
xor
inc
lret
lcall
sbb
and
ds
adc
pop
push
inc
movsl
xor
xchg
pop
push
cmpsb
adc
lods
cmp
vhsubps
insl
pop
xchg
test
push
xor
push
mov
int3
pusha
sbb
and
mov
std
cmp
lret
lds
push
in
xchg
push
sbb
imulb
inc
movsl
inc
orl
test
loope
mov
es
pop
inc
inc
loopne
and
fcmovnb
pop
jg
daa
ret
or
bound
stos
cli
and
xchg
xchg
shrl
or
ss
lret
pop
lahf
jmp
pop
cmpsl
sub
sub
xlat
lcall
mov
lods
inc
fildll
ljmp
data16
test
mov
rorb
mov
iret
pop
loop
mov
and
xchg
sub
pushf
push
in
jp
sub
jl
or
adc
lds
push
rol
movsb
xchg
fstpt
outsl
push
inc
push
or
pop
stos
dec
cmc
loope
xchg
pop
mov
subb
mov
fadd
cmp
xor
cmp
or
mov
mov
lret
mov
adc
cmp
lds
mov
xchg
xchg
mov
int
jg
and
jno
popa
push
data16
loopne
adc
mov
adc
and
icebp
outsb
or
pusha
xor
dec
lcall
dec
test
dec
push
outsl
arpl
mov
mov
push
sub
cmpsb
cmp
enter
gs
mov
imul
cli
push
dec
mov
sbb
pop
pusha
jmp
ret
add
xchg
cs
adc
jnp
adc
dec
loop
repz
lods
dec
and
jbe
bound
mul
xchg
movsl
popf
jns
add
ja
dec
xchg
sub
push
inc
shlw
rorl
aas
and
pop
pop
data16
fcompl
adc
cmp
xchg
jecxz
ret
adc
cmp
mull
daa
jae
xchg
cmpl
cmp
addr16
inc
cmp
jp
mov
test
pop
fbstp
fists
loop
sbb
pop
out
scas
outsb
scas
jle
dec
shll
les
rorb
jae
stos
loop
ret
pop
push
pop
jl
cmpsb
adc
adc
dec
inc
lock
movsl
popa
xchg
cmp
sub
xor
or
jno
xchg
cmpb
add
std
data16
xchg
test
jl
add
xchg
xor
popf
ljmp
jae
int
mov
mov
or
xchg
nop
shlb
ds
fnop
cmpsb
fwait
mov
aad
adc
cmp
addr16
pop
ficompl
fisttpl
adc
out
pop
xchg
dec
es
sar
lea
adc
lds
mov
mov
repnz
sbb
jae
jno
and
data16
enter
insb
sbb
adcb
imul
dec
adc
fnsave
les
push
imul
fidivrs
mov
push
jnp
inc
xor
movsb
pop
nop
mov
std
adc
cmpsb
mov
jp
lea
dec
gs
xchg
pop
sub
adc
adc
test
jae
aaa
and
mov
cmp
xor
cltd
jl
adc
inc
xor
push
xor
add
cmp
adc
leave
mov
push
and
das
hlt
push
push
insb
mov
rorl
xor
push
sub
insl
ljmp
push
int3
xor
pmullw
int3
in
inc
call
aam
add
add
call
in
adc
int3
inc
repz
and
dec
and
cmp
add
xor
dec
mov
daa
inc
addr16
pop
in
jns
sbb
cmp
lds
adc
pop
cmp
je
stc
add
jp
ljmp
stos
repnz
lods
scas
mov
inc
fldcw
push
cli
loope
repz
lds
jmp
orb
cmpsl
add
ret
enter
xchg
lret
nop
ljmp
sbb
pop
dec
lds
sbb
jle
add
ret
hlt
inc
cwtl
jecxz
cmp
pop
or
insl
ljmp
fsubrp
xchg
popf
mov
insb
push
xchg
pushf
jne
dec
push
lods
das
or
mov
push
jno
inc
and
mov
mov
cmpsb
loop
shrb
ja
outsl
gs
pop
jecxz
mov
xor
cmp
jge
outsb
inc
xlat
pop
add
mov
xchg
sub
repz
xchg
push
subb
fstpt
aaa
adc
test
rolb
mov
aaa
fnstenv
fwait
adc
and
in
adc
jmp
inc
adc
dec
int3
mov
mov
lods
test
popf
fmull
sarl
sbb
pop
xchg
ljmp
push
xor
lea
and
jecxz
out
cmpsb
jne
xchg
cld
std
pop
fadds
out
imul
mov
xor
pop
jmp
sub
add
data16
pop
and
movsb
mov
xchg
dec
pusha
xor
pop
push
xchg
movsl
xor
out
movsb
push
dec
mov
std
adc
mov
imul
call
mov
push
rolb
sbb
pop
fiadds
cld
roll
inc
mov
xchg
icebp
pop
pop
jbe
dec
mov
andl
sub
xor
test
cmpsb
bnd
pop
adc
loopne
and
imul
push
aad
call
mov
je
jl
or
xchg
in
fistpll
repz
pop
fidivrl
jl
jbe
or
repz
xchg
lods
xchg
imul
ds
fdivrs
adc
cld
lea
mov
lock
xchg
orl
push
pushf
sbb
cmp
inc
cli
adc
fisttpll
clc
rolb
mov
movb
sbb
orl
add
ficompl
jns
and
mov
xchg
adc
push
jnp
jg
test
cmp
iret
dec
mov
lock
test
es
jmp
in
and
pop
sbb
mov
pop
push
pop
pop
aam
jl
leave
push
std
fbld
sbb
fstpt
mov
cmp
aas
repz
xchg
sub
jne
mov
insl
sahf
in
jp
xchg
stos
fidivrl
dec
jae
aas
jg
sar
hlt
stos
cmpsl
loopne
xchg
cmpb
lea
scas
sub
or
lods
sub
cli
fwait
sub
clc
jno
and
add
push
ds
jecxz
arpl
dec
push
aas
lcall
add
stc
push
int3
xchg
adc
or
das
movsb
inc
int3
jae
sbb
xchg
dec
cld
cmpsl
iret
push
xorb
jge
adc
into
jl
sub
int3
mov
ret
pop
sbb
cltd
into
lcall
mov
inc
add
scas
xor
in
sub
add
dec
fsubs
dec
icebp
loope
and
xchg
sub
mov
outsb
add
xchg
mov
and
subl
push
rcll
fwait
adcb
iret
test
aaa
jmp
in
in
lcall
decl
sub
adc
mov
jge
js
adc
btr
les
adc
lcall
mov
cmpsb
or
and
aad
pop
repz
cli
loope
sti
sahf
loope
in
lods
xchg
scas
lret
xchg
inc
push
mov
inc
pop
popa
sub
add
lock
mov
ljmp
sub
lock
cmp
sahf
jle
loopne
mov
or
in
push
dec
and
stos
push
mov
hlt
rorb
add
xor
nop
or
push
pop
std
adc
and
shl
inc
ret
mov
outsb
adcb
and
cmp
mov
bound
imul
data16
sbb
mov
out
icebp
outsb
inc
adc
ss
lea
fdivs
iret
fbld
mov
cmp
lahf
cmp
push
clc
stos
mov
jno
lock
and
movsl
xor
cmp
insb
int
aas
jmp
push
andb
push
shll
mov
jb
pop
mov
sbb
negb
mov
loopne
xlat
sti
leave
mov
mov
dec
sub
pop
pop
addr16
xchg
mov
and
pop
mov
enter
addr16
test
fadds
std
sarb
cmp
pop
xor
lcall
aaa
push
or
rcll
cs
out
inc
mov
mov
hlt
or
adc
std
xchg
les
outsb
decl
push
lret
repnz
add
nop
into
out
xchg
mov
mov
sub
cmp
mov
mov
cmpsl
cli
outsl
imul
xchg
movsb
cmpsl
lcall
sub
movsl
out
lds
push
sti
push
cmp
mov
or
jp
dec
clc
xchg
inc
out
cmp
cmpsl
pusha
sbb
xchg
xor
cmc
daa
inc
mov
movsb
cmp
add
push
cmp
mov
add
and
icebp
lea
xchg
and
adc
fs
std
mov
and
mov
sbb
stc
sbb
or
xor
dec
pop
cmp
jl
add
pusha
sbb
and
xor
ret
lods
or
sub
pop
inc
mov
lds
adc
add
cmp
push
mov
aaa
jl
mov
cmp
pop
and
push
rorb
cmp
fstpt
xchg
lcall
sbb
mov
sub
mov
xchg
test
jecxz
pop
test
add
orb
sbb
lret
sarl
dec
push
mov
and
xor
cmp
cmpsl
lahf
inc
adc
inc
lahf
fwait
int
std
or
sahf
dec
add
roll
mov
xor
hlt
cs
scas
adc
add
cwtl
into
jmp
insl
dec
inc
pop
nopl
cmp
ds
pop
sbb
js
and
jle
addl
mov
adc
frstor
add
fldenv
cmpsb
cmp
xor
lea
pop
repnz
sti
rep
cwtl
fs
loopne
jmp
insl
add
add
loopne
ds
jnp
cmp
mov
sub
xor
inc
in
ret
fwait
xchg
push
xchg
mov
or
std
ret
pop
mov
int
or
mov
cmpl
push
lea
outsb
imul
dec
cmpsb
pusha
neg
inc
es
mov
into
add
mov
imul
mov
outsb
popa
popa
sub
addr16
iret
outsl
adc
fnstenv
pop
pop
dec
fdivrp
jg
test
xchg
call
jae
sar
push
outsb
lods
test
xchg
cmpsb
pop
in
inc
addr16
add
push
inc
and
das
push
cmpsl
xchg
sub
cli
sbb
scas
push
mov
cmp
sbb
add
mov
dec
and
cwtl
lods
fisttpll
push
fcmovnb
inc
lret
xchg
cmp
aas
inc
mov
out
push
loop
jns
loope
stc
xchg
sbb
lds
sub
xchg
dec
ds
cmc
dec
pushf
pop
mov
in
je
or
jo
mov
in
and
mov
mov
push
scas
add
jno
scas
mov
dec
mov
insl
pop
arpl
xor
inc
sbb
fiadds
idivl
out
mov
shll
lret
mov
jl
jae
xchg
and
div
cmp
add
mov
inc
and
leave
sbb
dec
cmp
jl
mov
in
jg
ss
pushf
jb
pop
xor
jno
xchg
std
loopne
sbb
lock
cwtl
push
xor
movsb
mov
mov
sbb
adc
add
test
push
into
xor
jns
ljmp
pop
int3
push
jg
rolb
aaa
xchg
cmpb
sbb
shrb
dec
or
enter
adc
push
mov
lcall
push
addr16
mov
divl
pop
fs
cwtl
lods
cmpsl
into
mov
iret
lret
mov
test
shll
sub
jl
and
and
pop
movlps
xlat
gs
in
xacquire
adc
or
icebp
imul
add
cmp
lret
mov
mov
adc
mov
or
xchg
fs
xor
xchg
cltd
test
pop
cwtl
and
jge
iret
ret
mov
fld
cli
jmp
inc
in
cmp
ret
pop
test
jne
dec
sub
cltd
cmp
dec
scas
mov
jae
mov
daa
and
cld
mov
and
stos
movsb
xor
xchg
out
or
out
mov
imul
cmp
call
mov
lret
scas
add
push
add
lea
push
xchg
xor
sbb
inc
fbstp
xchg
adc
or
popa
lret
dec
lods
ror
dec
aas
pop
mov
std
mov
xlat
sub
lods
lock
cmp
or
adc
repz
ljmp
aam
sub
jb
inc
cmp
shlb
jnp
cwtl
pusha
xorb
pop
lods
jg
scas
mov
fcmovnu
cmp
mov
mov
push
adcl
dec
stc
aam
sti
addr16
clc
cmp
repnz
mov
test
ljmp
adc
cmc
cmp
loopne
negl
push
gs
adcb
inc
and
fdivl
movsl
push
jmp
cld
pop
xchg
sbbb
popa
cmp
imul
push
xor
cld
fs
aaa
sbb
jp
cs
inc
fwait
cmp
pop
shll
push
lock
loopne
and
push
mov
movsb
xchg
dec
scas
lcall
and
popa
mov
jo
mov
ret
movsl
push
push
faddl
xchg
mov
ss
out
dec
and
fnsave
std
mov
mov
scas
enter
out
or
and
daa
lods
or
xor
and
push
mov
aas
mov
adc
inc
inc
test
and
les
test
mov
inc
push
and
scas
out
cmpsl
in
jae
or
cld
pop
insl
es
out
fsub
jge
inc
rorl
rorb
push
mov
adcb
cld
daa
mov
sub
xchg
and
adc
dec
and
xor
mov
in
testb
mov
push
mov
push
push
popf
mov
mov
call
insb
fwait
js
out
lret
adc
lret
out
lea
dec
adc
outsl
int
push
loop
inc
test
jns
push
stos
loope
mov
jl
mov
imul
pop
std
mov
hlt
fisttps
shlb
cmp
enter
pop
sub
lcall
inc
aad
push
sti
out
inc
imul
adc
push
loope
pushf
fisttpl
dec
xor
loop
iret
fstps
sub
sbb
add
mov
push
sbb
rorl
nop
jne
cmp
mov
movsb
ds
arpl
sbb
rorb
add
les
cld
dec
test
cmpsl
pop
push
repz
mov
and
cmp
pop
cmp
dec
flds
or
jae
inc
jl
lret
push
imul
repz
jns
mov
cmpsb
sub
sub
outsb
loop
imul
stos
mov
cli
cs
xor
rol
es
jnp
sbb
or
or
add
add
cmpsb
sbb
movb
jnp
add
fildl
leave
iret
lcall
arpl
mov
movl
jnp
fnstsw
jno
xchg
addr16
adc
push
add
add
imul
or
jb
sbb
scas
xlat
shr
pop
jp
dec
lret
add
mov
adc
mov
std
mov
adc
xor
jge
fldcw
add
movsl
sbb
cmp
lods
jecxz
xchg
pop
pcmpeqw
xchg
fnsave
aad
hlt
out
subb
ficompl
jmp
sar
loopne
cmp
mov
cmp
sbb
in
sub
sahf
fs
and
jne
into
int3
lock
push
mov
jb
rorl
outsl
mov
icebp
push
push
cmp
push
mov
add
mov
adc
scas
mov
push
sub
pop
push
arpl
push
call
xor
jp
inc
mov
je
adc
cmc
out
sahf
shlb
push
rcrb
dec
add
fxtract
and
rolb
arpl
enter
pop
mov
cmpsb
test
sti
into
lds
aam
bnd
jnp
cltd
cmp
out
in
negl
movsb
out
nop
push
and
loop
push
daa
out
out
mov
leave
mov
stos
lods
stos
dec
aas
sbb
insb
repz
mov
fsubrs
dec
push
scas
inc
sub
cmp
inc
inc
dec
xchg
push
enter
xchg
mov
stos
add
ss
test
ss
paddq
ret
xchg
cli
div
pushl
add
xlat
sub
shl
inc
mov
and
pop
xor
inc
inc
cmp
push
and
aad
inc
add
fistpl
or
scas
stos
fistps
mov
pop
jns
lret
test
pop
subl
in
mov
sbb
mov
mov
xchg
leave
jo
sub
push
fistl
xor
xchg
call
cmpsl
jae
imul
cmp
aad
test
dec
ror
xchg
je
inc
into
nop/reserved
push
sbb
aad
push
inc
cmp
push
dec
cmp
jno
mov
test
call
std
pushf
xchg
stc
aad
rcrl
lods
sbb
les
sbb
inc
pop
aaa
and
outsb
stos
fnstcw
addr16
pop
mov
push
cmc
testb
push
adc
dec
xor
cmp
inc
hlt
pop
adc
xchg
ljmp
dec
test
inc
xchg
jecxz
mov
or
test
mov
loopne
les
fcompl
lods
jmp
outsl
dec
add
stos
mov
ss
fstpt
xchg
aad
inc
xor
scas
lret
xor
mov
jbe
fucomp
fwait
ret
mov
in
jle
mov
mov
lret
dec
mov
and
scas
iret
fcom
pop
mov
and
daa
imul
dec
cmp
mov
lea
sub
in
xchg
jp
mov
jl
xchg
jecxz
push
rcl
aad
inc
outsl
divl
mov
push
push
sbb
pushl
cmp
dec
stos
test
dec
xor
xchg
cltd
cmp
push
or
push
inc
and
xor
in
popa
adc
ficompl
mov
xchg
sbb
jo
shlb
xor
insb
shlb
sub
mov
arpl
dec
add
loope
je
mov
mov
push
xchg
fdivrp
ja
stos
xchg
scas
lahf
push
data16
inc
cmp
xor
sub
adc
int3
xor
or
push
ds
movb
stc
aaa
cltd
add
ror
mov
roll
or
sbb
mov
mov
ljmp
aad
fwait
or
and
cld
xchg
push
addb
enter
cmp
js
insl
pop
call
ret
jmp
stos
jecxz
xchg
cmp
dec
inc
push
ret
xor
fists
fcoms
add
mov
addr16
or
pop
mov
cld
cli
aaa
jge
ret
iret
jns
jl
insb
shll
push
push
xor
xchg
imul
shlb
sti
push
or
aam
push
jl
add
cld
push
cmp
mov
lock
lahf
sbb
xchg
mov
sub
lcall
or
xchg
shlb
ss
in
clc
adc
enter
cmp
cmp
xchg
inc
das
xor
pop
in
or
test
jmp
cmp
in
cld
test
push
lds
cli
push
adc
xchg
test
mov
xchg
sbb
leave
aad
ficompl
popa
iret
jnp
push
addr16
loopne
movsl
mul
fwait
xor
mov
jle
mov
jmp
adc
mov
ret
pop
adcb
mov
pop
loop
and
jae
jno
shlb
int
mov
frstor
push
mov
sub
cltd
jbe
mov
leave
xor
stos
insl
push
dec
fs
orps
movsb
xchg
cmp
push
jae
jo
sbb
gs
mov
ja
pop
xor
xchg
dec
lds
in
inc
inc
popa
pop
mov
pushf
or
dec
insb
sti
jb
sbb
push
push
movb
adcl
lds
popf
scas
cmp
or
dec
std
insb
call
push
out
popa
dec
inc
jmp
fs
mov
jecxz
push
test
push
push
jmp
pop
cli
cltd
xchg
lods
mov
and
mov
mov
cmp
xor
jb
fimull
or
push
sub
jle
fwait
in
test
xchg
lea
popf
add
fstps
inc
xor
ror
fwait
and
pop
xchg
add
sti
dec
aam
lahf
cmp
inc
push
adc
ffree
xchg
and
adc
jnp
out
pop
imul
lds
or
or
imul
loope
int
outsb
fs
or
and
enter
cld
mov
in
test
popf
xchg
cmpsb
inc
pop
js
pop
add
shll
rorb
pop
xchg
mov
mov
movsl
fwait
xchg
lock
in
lods
mov
pop
jo
cmc
cs
icebp
filds
cmp
cmp
add
ja,pt
sbb
js
xor
xchg
cmp
ds
js
fisubrs
ret
test
int3
xchg
xor
xchg
jecxz
add
pop
dec
adc
ds
jns
jno
es
jle
jnp
sar
arpl
les
pop
inc
cmp
cmp
cmp
sbb
iret
testl
sahf
out
sar
je
xor
dec
inc
add
xchg
adc
in
popa
or
mov
subl
or
fdivp
adc
pop
adc
sub
sarb
gs
pusha
addr16
adc
scas
sbb
inc
push
push
sbb
adc
cltd
adc
bound
mov
outsb
fdiv
sub
mov
push
or
inc
sbb
iret
xchg
jns
jns
inc
shrl
cmp
shlb
sub
xor
data16
lock
fldcw
dec
xchg
imul
ret
in
pop
fidivrl
hlt
rcrb
xchg
inc
inc
or
rolb
out
fdivrl
or
daa
or
inc
pop
inc
xor
mov
data16
test
mov
and
push
rclb
mov
in
mov
xchg
or
xchg
iret
pusha
lods
mov
xchg
and
in
mov
or
or
in
mov
jne
cmp
daa
dec
stos
and
incl
dec
andb
adc
orl
pop
out
inc
push
push
in
jle
punpcklwd
fdivrp
jne
je
add
fwait
jae
xlat
sbb
stos
popa
mov
mov
xchg
adc
lods
lock
xor
cld
dec
sub
leave
inc
lahf
xchg
jge
pushf
and
pushf
inc
shlb
cmpsl
lret
inc
pop
jl
out
fs
adc
inc
fs
push
inc
and
fmul
mov
inc
xchg
sbbl
jno
jl
imul
adc
jecxz
popa
mov
push
dec
lahf
sub
cmp
addl
add
test
inc
push
add
jl
jecxz
jl
mov
push
adc
std
arpl
lds
pop
adc
mov
and
sub
test
lcall
dec
dec
cs
sub
mov
fistpll
xor
pusha
xchg
aaa
sbb
test
mov
sbb
inc
mov
mov
mov
push
mov
push
pop
adc
cmp
ret
sahf
les
movsl
ss
and
mov
xchg
js
pop
insb
jge
dec
addr16
test
aas
mov
inc
cld
arpl
xlat
clc
pop
adc
es
push
fiaddl
xchg
mov
xor
xor
stos
addr16
and
dec
fucomp
adc
in
jg
or
mov
hlt
mov
add
push
fmul
xlat
mov
sahf
test
sbb
aaa
adc
mov
mov
out
mov
or
jne
lea
pushf
mov
add
sbb
fstpl
push
idivb
inc
test
xor
movsl
daa
dec
call
ljmp
mov
jge
push
cmp
addr16
xchg
xchg
mov
lcall
stos
sub
or
es
xor
cmp
jnp
arpl
pop
outsb
push
cmp
pusha
adc
add
call
mov
inc
lret
into
jmp
leave
mov
lock
les
inc
les
cltd
and
mov
test
pop
loope
mov
call
jnp
iret
sub
repnz
leave
shll
leave
cmp
push
call
rorl
out
and
pcmpeqb
test
sarb
mov
mov
mov
cmp
lds
inc
add
mov
out
sub
xchg
push
jns
leave
dec
cs
inc
lods
test
lahf
clc
jne
jns
add
and
das
pop
adc
dec
sub
rclb
adc
popf
das
int3
js
sub
cs
out
mov
xlat
and
out
outsl
jp
stos
pop
les
cmovae
cmp
mov
adc
mov
xor
testb
sbb
mov
insl
cld
sbbl
or
outsl
mov
movswl
outsl
adcl
popf
shl
xchg
xor
sub
out
dec
ds
add
fiaddl
push
jmp
push
pusha
xchg
push
insl
mov
cmpsl
iret
daa
lods
mov
mov
jb
popa
shrb
cmp
mov
mov
rorb
xchg
lds
push
push
jo
add
adc
into
and
mov
pop
cmp
leave
sub
jmp
xchg
leave
out
sarl
push
scas
js
mov
xchg
inc
push
hlt
arpl
push
std
jnp
sub
imul
ror
stos
push
rclb
xchg
jno
or
lret
test
enter
inc
jo
enter
iret
mov
and
inc
lahf
mov
inc
mov
sti
lret
mov
mov
adc
fstpt
aam
stos
loope
inc
imul
lods
pop
fsubl
xor
dec
push
pusha
bnd
sub
outsb
or
sub
addr16
hlt
andb
mov
xor
xor
into
icebp
pop
push
sbb
mov
add
lods
pause
ljmp
in
jle
out
inc
mov
jb
testl
push
arpl
cmp
cmpsb
or
dec
mov
push
je
jecxz
mov
jg
mov
stos
xchg
pop
jne
ja
cs
inc
xlat
sbb
pusha
dec
jle
daa
push
ja
jmp
cld
les
push
pop
sub
pop
push
aam
fs
insl
xchg
orb
push
lock
fucomp
cs
outsl
xor
sbb
dec
xlat
xchg
sub
jo
pop
push
loopne
test
out
pop
pop
mov
add
cs
adc
jle
daa
cwtl
stc
mov
xor
sub
enter
int
adc
mov
cs
pop
or
inc
sub
or
ror
lcall
xor
mov
scas
push
jge
clc
stc
inc
dec
mov
pop
dec
push
mov
test
dec
scas
xor
and
pop
int
sub
mov
push
fdiv
inc
aas
dec
mov
scas
out
pop
push
xchg
lds
jge
js
mov
adc
rolb
dec
cmp
test
xchg
sbb
je
xchg
lcall
es
add
cmp
sbb
mov
jg
in
push
ret
lds
int3
xchg
lea
fxch
inc
pusha
sbb
inc
fwait
or
pop
arpl
push
mov
add
call
ficoml
das
cmp
inc
sbb
ret
mov
adc
pop
cmp
rcll
cmp
imul
adc
es
cmp
add
xor
stc
std
lret
adc
ret
mov
addr16
dec
mov
ds
inc
push
jecxz
pop
lcall
test
pop
aam
shll
pop
cmc
mov
popf
cmc
push
cld
xchg
jge
jb
std
dec
mov
js
xchg
dec
lods
sub
cltd
adc
jo
aam
add
push
mov
cmpsl
inc
inc
popa
adc
out
ret
xor
cmp
xchg
xchg
sbb
pop
mov
dec
insl
mov
push
stc
es
or
add
jecxz
xor
add
mov
cmp
enter
xlat
fstps
mov
sub
inc
ss
mov
inc
pop
mov
aad
movsl
lahf
jmp
dec
cmpsb
mov
and
out
jg
movsb
push
xor
push
in
xor
sbb
popa
cmp
mov
mov
jge
sub
loop
bound
movsl
test
cmp
xchg
and
clc
clc
sbb
addl
icebp
cltd
pop
pop
imul
jg
xlat
push
sub
sti
adc
pop
imul
inc
mov
test
rorl
mov
cmp
mov
mov
mov
xor
add
pop
mov
jmp
add
cld
inc
jb
xchg
andl
cmp
lahf
jae
icebp
in
xchg
mov
lahf
repz
aad
pop
fwait
xchg
popa
stc
adc
push
inc
std
loope
lods
cli
in
and
jge
test
or
mov
fwait
cmp
jp
lahf
or
mov
mov
sbb
adc
mov
inc
xorl
xor
mov
and
cs
pop
or
push
jns
adc
xchg
xchg
js
out
jp
cmp
push
lods
scas
inc
cwtl
testb
add
sbb
aas
cwtl
mov
mov
push
rcrl
dec
mov
jecxz
paddsw
pushf
jns
sub
test
dec
pop
cmp
xchg
dec
cmp
xchg
mov
sub
lods
movsl
inc
jbe
sub
ljmp
dec
sarl
xchg
cmp
push
dec
jne
and
mov
mov
in
sbb
ja
mov
hlt
xor
rclb
and
mov
cltd
mov
pop
inc
cmp
cmp
in
leave
adc
jmp
xor
enter
xor
sbb
adc
stos
pop
imul
fs
cmp
das
jb
call
mov
jp
jb
mov
add
xchg
pop
or
xchg
leave
daa
ret
rorb
aam
popa
andb
cmp
sub
sub
jmp
rolb
fldenv
or
jnp
jmp
stos
in
sub
imul
clc
fisubl
lds
inc
movsl
popa
jno
lds
pop
push
sar
xchg
je
int3
shl
mov
aad
sbb
dec
and
out
inc
jns
pushl
xchg
ja
inc
arpl
or
lods
in
sahf
and
aas
push
mov
dec
add
rol
add
cmp
and
xor
out
sub
push
mov
out
mov
cwtl
dec
xchg
mov
dec
pop
push
jnp
jg
add
push
inc
inc
in
rorb
mov
lock
daa
push
out
mov
lods
std
mov
into
in
jae
pop
cmp
adc
cmpsl
daa
aas
js
cmpb
hlt
daa
lds
mov
bound
movd
inc
scas
sub
jecxz
inc
cmp
add
adc
and
xchg
int3
fistl
push
shll
cltd
addb
mov
loop
dec
jge
jl
push
mov
sbb
xlat
lcall
sbb
sti
data16
mov
push
fs
das
adc
xchg
push
dec
adc
sbb
lea
dec
cmc
mov
dec
dec
loopne
cld
xchg
or
scas
outsb
jg
cld
cmp
push
mov
in
ja
aad
into
xrelease
inc
and
push
mov
sub
shl
or
xchg
sbb
bound
mov
fidivrs
adc
stos
ret
sub
loope
adc
dec
adcl
jno
mov
cmp
popa
jo
scas
push
movl
jge
lcall
daa
addr16
adc
jnp
inc
loop
xchg
push
xchg
jo
add
mov
pop
mov
mov
iret
outsl
jl
clc
enter
push
jmp
and
int
dec
dec
fiaddl
push
sbb
popf
lock
loopne
pop
xor
ret
and
sti
dec
xor
xor
mov
pop
mov
mov
shll
mov
inc
lods
cmpsb
pop
mov
aaa
mov
out
pop
into
xlat
push
pop
inc
mov
inc
sub
dec
xor
or
clc
pop
insb
mov
leave
lock
adc
and
mov
push
cmp
adc
cmp
dec
sub
ss
andl
fs
into
or
add
xchg
xlat
std
rcr
outsb
test
sbb
test
xchg
add
mov
ret
aas
lods
jb
adc
loop
and
mov
adc
jno
nop
inc
aaa
mov
js
adc
ud1
mov
pop
mov
jb
push
aam
mov
rol
arpl
in
xchg
add
sub
popf
les
or
mov
inc
fwait
jnp
xchg
ja
jns
nopl
mov
es
push
in
dec
cli
movsl
andl
rsm
xchg
ror
and
mov
sub
je
mov
es
cs
add
pop
push
pusha
aad
sub
jecxz
lea
fwait
loope
imul
mov
pop
jb
lret
pop
int
cld
sbb
jnp
xor
and
and
lret
inc
push
je
mov
adc
adc
shll
sub
sub
stc
jae
cmpsl
std
sbb
int
sbb
in
sahf
mov
or
inc
cmp
jmp
ja
adc
mov
sbb
scas
out
jbe
aam
xlat
mov
and
es
cmp
or
sbb
mov
jae
add
js
xchg
dec
inc
nop
daa
push
adc
pushl
cwtl
jne
or
cmc
sbb
xchg
sar
orl
aas
out
inc
sbb
cmp
mov
aas
les
push
sbb
adc
pop
jecxz
jae
in
movb
xchg
lcall
pop
insl
mov
stos
mov
jbe
lcall
mov
xor
add
inc
jl
xchg
adcl
addr16
xor
add
bound
push
rdtsc
jnp
sub
das
adc
das
mov
dec
jbe
vucomisd
jle
test
movsl
lret
lds
movsb
arpl
adc
aad
out
mov
daa
sub
and
xchg
adc
xchg
andb
mov
sub
int
adc
jnp
lea
cmp
cltd
cmpsl
cld
jns
lret
faddl
push
cli
cmp
call
jmp
pop
shll
fcompl
push
icebp
inc
fnsave
cmp
jle
jp
jge
lsl
testl
or
jb
inc
repnz
add
dec
cmpsb
and
enter
mov
in
pop
and
outsl
mov
rolb
push
xor
or
pop
xchg
jae
gs
sbb
cmpsb
and
fistpll
or
jns
dec
sub
push
lock
inc
clc
jge
shlb
jns
rclb
stos
xor
mov
cmpsl
movsb
mov
mov
mov
dec
aad
test
sahf
mov
jecxz
xchg
and
sbb
sahf
pop
je
xor
push
dec
ffree
scas
mov
lods
sub
sub
mov
scas
cltd
idivb
fdivrl
clc
mov
ret
xor
cmp
test
or
aaa
inc
sbb
dec
sub
outsl
out
adc
int3
sbb
lcall
pop
int3
std
xchg
sbb
in
xchg
mov
cmp
mov
mov
call
ret
ret
movsb
xchg
jnp
fistps
int
add
push
push
sub
add
jbe
lret
insb
adc
or
rcll
or
jecxz
stc
popa
sarl
xor
lods
cld
mov
adc
popf
xor
mull
mov
das
out
loopne
or
adc
mov
xor
leave
cmp
add
sbb
and
enter
pop
dec
movsl
inc
add
jg
mov
cwtl
aas
daa
sub
sbb
repnz
push
jnp
adc
xchg
adc
mov
fwait
stos
mov
outsb
push
icebp
inc
mov
add
pop
mov
mov
jb
mov
insb
leave
xchg
mov
data16
sub
lds
mov
cld
push
imul
popf
jg
mov
ljmp
test
sub
mov
pop
mov
mov
int
ficompl
mulb
js
lcall
jnp
pop
sti
in
ja
lcall
pop
fisttpl
or
push
call
std
arpl
lods
or
fs
shrl
cmp
iret
aas
inc
pushf
gs
mov
js
mov
mov
jge
test
xor
lcall
lock
int3
xchg
fstpt
dec
fnstenv
mull
xchg
pushf
test
jecxz
out
sbb
mov
ss
push
sbb
sahf
add
dec
adc
sbb
out
ljmp
xor
inc
mov
lds
clc
dec
mov
sub
js
js
push
roll
xchg
enter
lahf
icebp
test
mov
xor
push
dec
dec
pop
stos
cmp
out
xor
xchg
add
ss
or
mov
enter
mov
jne
sub
xchg
adc
repz
fadd
frstor
popf
mov
jbe
nop
mov
loop
push
sub
aam
imul
inc
sbb
test
fdivs
sbb
mulb
xchg
xor
decl
cmp
addr16
test
mov
dec
inc
adc
or
in
xor
and
xchg
mov
xor
jl
inc
test
jns
add
clc
mov
cmc
test
or
jne
pop
mov
jl
adc
movsb
sub
cmp
ss
jb
or
hlt
inc
cmpsl
lea
repnz
xor
cld
das
sub
or
inc
fstps
push
add
decb
cmp
fcoms
ja
mov
icebp
inc
aaa
into
mov
cld
in
push
mov
or
jno
dec
pushf
scas
stos
cmc
sti
cmp
lret
arpl
and
cld
rorl
push
jecxz
cmpsl
repnz
aaa
push
dec
pop
insb
loopne
inc
jl
out
jecxz
sub
xor
push
jecxz
je,pt
mov
es
sub
push
cltd
push
daa
lret
dec
mov
sahf
sbb
arpl
or
push
inc
cmp
aaa
fucomp
xor
mov
xchg
fstpt
call
fs
mov
loope
out
insl
lds
add
push
sub
and
aaa
loope
ja
sbb
mov
push
cmc
sbbl
js
mov
xchg
pusha
mov
xorb
mov
fnstsw
mov
pop
jmp
imul
sub
in
psubd
es
addr16
aas
and
lcall
or
iret
xchg
je
jmp
rolb
and
cmp
jmp
in
imul
iret
dec
int3
mov
cmp
cmpsl
out
mov
mov
movsl
mov
sbb
sbb
add
push
adc
stos
xchg
leave
outsl
mov
cmc
stos
mov
out
push
fwait
add
jg
pop
leave
push
lcall
inc
mov
push
sub
push
cld
lods
fadds
lret
daa
jle
push
adc
fisttps
push
mov
adc
sub
scas
add
out
xor
sbb
xchg
mov
jl
xchg
push
fdivs
xchg
scas
stos
push
dec
mov
jae
cmpl
lahf
mov
ret
sub
xchg
cmp
aaa
xchg
aaa
cmp
lret
mov
xor
mov
mov
sub
pop
push
push
jb
loop
orb
adc
psrlq
fsubl
sub
popf
adcb
sub
lret
rcr
pop
ficoms
mul
shrl
add
fldenv
fwait
shrb
cli
insl
mov
jge
shlb
in
cmp
inc
pop
or
mov
call
js
aaa
jnp
sbb
mov
imul
imul
pushf
cmp
mov
push
jmp
xchg
sbb
xor
outsb
fnstcw
push
jns
daa
lahf
cwtl
and
stc
push
std
mov
ja
or
bound
scas
push
mov
lods
jns
xor
mov
addb
mov
in
jnp
imul
fidivrs
lret
sbb
push
icebp
daa
ror
or
or
mov
fsubrs
and
inc
mov
dec
jge
xor
cmp
adc
into
je
push
xchg
xor
dec
cld
aaa
jne
cmc
loopne
js
xor
and
ja
lea
pop
xlat
loop
mov
mov
mov
das
clc
repnz
mov
notl
push
popf
out
shl
push
ror
sbb
rorb
shl
and
pop
bnd
push
stc
xor
loope
mov
jmp
xchg
hlt
inc
ljmp
mov
push
cmc
test
inc
inc
lods
call
sbb
outsb
xor
dec
loop
int3
xchg
loope
cltd
xor
mov
xchg
xchg
mov
jns
mov
mov
lods
aam
in
je
add
insl
dec
mov
in
loop
movsl
int3
inc
add
or
pop
sbb
cmp
test
stos
add
push
insl
add
addr16
das
out
dec
push
mov
mov
inc
push
adc
adc
jno
pop
outsl
call
or
fsubrl
xchg
inc
xchg
xchg
inc
jnp
push
imul
inc
fnstcw
jns
xor
jp
loope
mov
xchg
mov
push
and
cs
and
xchg
cmpsb
push
adc
imul
fxch
add
inc
mov
dec
aaa
pop
jne
jno
mov
ds
xchg
sbb
mov
repz
aad
lods
jg
push
inc
int3
sbb
scas
ffreep
and
pop
inc
push
adc
in
shll
cmpsl
ja
adc
adc
sarb
in
dec
mov
mull
sbb
movsl
fidivs
xor
mov
test
call
stc
inc
cmpsb
fldcw
and
mov
mov
test
loopne
enter
xchg
pushf
ss
call
push
cmp
mov
stos
mov
jecxz
aam
cmp
mov
aaa
and
cmp
dec
pop
push
cli
je
pop
jmp
pop
add
aas
test
cmp
test
pusha
and
dec
add
lods
repnz
cltd
pop
pop
loopne
and
call
fnstenv
jb
and
mov
pop
pop
xor
or
jne
inc
sbb
scas
adc
in
cli
or
sbb
fimull
mov
test
rcl
sbb
mov
outsb
jns
adcb
movsb
push
movsb
push
pop
mov
and
rol
jl
push
dec
incl
js
bound
jmp
cltd
pop
push
into
out
inc
xchg
repnz
inc
inc
stc
ret
or
xchg
pop
xchg
pop
testb
dec
test
sub
lret
in
std
mov
fsts
rol
jle
or
dec
mov
hlt
in
inc
jbe
push
mov
pop
daa
cmpsl
pop
aaa
mov
pop
xor
ret
lret
sbb
lods
push
fisubl
addr16
lret
icebp
in
int
push
pushf
shrl
les
orb
cld
mov
xchg
inc
imul
sbb
ds
jne
xchg
cwtl
sub
xor
pop
jnp
fcoms
fdiv
popf
add
stos
stos
sbb
inc
sub
push
ret
jo
dec
into
jne
push
aad
cmp
int
mov
enter
mov
insb
mov
insb
jnp
hlt
in
xchg
divb
mov
gs
or
sti
fwait
inc
jne
sub
jnp
sub
and
dec
adc
in
and
test
fisttpl
inc
push
pop
add
inc
mov
inc
out
stos
dec
or
mov
mov
jge
add
cli
push
shlb
inc
xor
leave
sar
adc
dec
cld
xchg
ret
inc
icebp
daa
mov
shll
cmp
je
pop
mov
sub
sahf
mov
iret
sbb
bound
jns
pop
sbb
outsb
add
nop
inc
stos
mov
and
and
xchg
jno
mov
dec
inc
out
inc
test
jl
in
xor
xchg
pop
add
jno
push
mov
pop
sub
lods
dec
lcall
push
dec
mov
andb
rcrb
ret
insl
xchg
jo
call
jge
or
push
subb
cmp
cmpsb
mov
mov
addr16
data16
lds
push
jl
xor
cmp
mov
sub
mov
fisubrs
stos
inc
push
cltd
mov
imul
xchg
pop
bound
mov
roll
into
fnstcw
test
or
clc
cmp
outsl
cmpb
aas
es
cwtl
or
insb
or
or
stos
mov
pusha
jl
mov
call
in
xchg
mov
inc
mov
call
cmpsl
or
movsl
jnp
test
popa
jne
and
repnz
inc
fcomps
push
imul
adc
pop
daa
mov
add
dec
xchg
mov
je
cwtl
pusha
sub
es
and
outsl
mov
push
nop
sbb
imulb
addr16
and
sbb
sti
push
push
ret
adcb
fisubs
mov
jns
out
adc
push
mov
or
jo
stos
mov
xor
loope
sahf
ja
rcr
sahf
add
mov
xor
adc
jb
jno
inc
jg
adc
cmp
xchg
cmp
jg
std
jno
aas
jbe
inc
xchg
cld
mov
inc
or
pop
fistps
into
xor
push
addr16
cmc
pop
or
mov
jg
jmp
lods
dec
jnp
rclb
and
xor
cmpsb
dec
lret
insl
into
out
loop
xchg
lods
sbb
outsb
and
aas
jecxz
shlb
sub
and
cmp
dec
push
imul
fadds
mov
pop
mov
cmpsb
sub
inc
stc
iret
and
and
sbb
stos
repz
mov
jno,pn
dec
push
inc
fnsave
add
xor
mov
jmp
push
dec
or
daa
pop
or
push
test
in
add
adc
sub
jbe
and
mov
fwait
xchg
scas
imul
addr16
call
or
es
adc
and
data16
ret
mov
mov
rcrl
dec
rcrl
insb
push
xchg
jae
inc
cmp
out
pusha
xor
dec
data16
pop
and
ret
xchg
fsubl
xor
icebp
lret
out
loop
dec
lds
pop
arpl
cli
xor
mov
popl
dec
ficomps
add
dec
repnz
sbb
ja
scas
loop
sahf
push
in
dec
dec
xchg
imul
pop
rcl
in
ror
aas
test
cmp
inc
std
js
push
push
xchg
and
cmpsb
clc
pop
data16
daa
mov
ret
rcll
adc
push
jno
and
rclb
cmpsl
in
add
fcoml
inc
gs
rcrl
inc
imul
xor
inc
inc
push
inc
dec
mov
rorb
arpl
popf
xchg
push
pushf
out
int3
sti
xchg
leave
sbb
mov
imul
adc
adc
mov
adc
negl
xor
sub
add
insl
adc
or
mov
cmp
lock
loope
or
pushf
or
push
cmc
sbbl
arpl
adc
xor
push
and
test
das
jb
aad
movsl
jmp
sti
add
mov
lds
stc
mov
xchg
inc
mov
pop
lods
cmpsb
stos
shrl
stos
mov
loopne
mov
push
les
cld
mov
add
ljmp
out
xchg
lock
dec
int
inc
jmp
xor
mov
sbb
adc
mov
or
push
fsubl
cmp
inc
aas
mov
pop
add
jne
cmp
fs
out
push
push
cmp
dec
inc
pop
into
dec
lret
mov
dec
lods
push
mov
pop
out
shll
jl
in
fistpll
sbb
cmp
cmp
jg
loopne
push
mov
pushf
jno
scas
jle
nop
flds
pop
or
mov
inc
pop
std
es
pshufw
push
jl
hlt
push
or
jb
testb
popf
inc
push
and
push
out
insl
push
loopne
test
das
movsl
aad
aad
ja
xor
mov
cwtl
lahf
and
mov
push
dec
and
push
bound
and
js
pop
dec
scas
sub
and
adc
add
mov
outsb
xchg
push
in
cld
repnz
xchg
push
int3
sbb
xor
ret
in
xor
mov
xchg
gs
sbb
pop
push
frstor
lock
push
sbb
arpl
xor
test
cltd
xchg
repz
jge
ss
adc
adc
sbb
jp
add
mov
or
jp
fbld
iret
sub
stos
movsl
loopne
xchg
jnp
jmp
xchg
in
pusha
daa
test
xchg
jl
gs
pop
pextrw
cmpsl
mov
bound
dec
fisubl
push
add
addr16
daa
gs
push
aam
xchg
stos
test
test
sub
pop
fwait
test
jg
jle
adc
outsb
cltd
test
sub
push
int3
inc
dec
ja
addb
mov
mov
and
pushf
insb
jl
sbb
jg
sub
lret
cltd
fstl
loopne
nop
outsl
add
fs
jbe
cli
addr16
out
fstps
add
jo
repnz
fistps
rol
cwtl
xor
adc
push
mov
cmp
sbb
pop
and
mov
rorb
and
add
shlb
add
mov
add
mov
pop
jmp
pop
inc
aad
imul
jo
ret
xor
mov
dec
jo
or
cld
ss
push
addr16
xchg
pop
mov
popl
enter
mov
shrl
fwait
mov
lahf
and
jg
mov
sbb
and
pop
cmpsl
cwtl
nop
jo
add
imul
fwait
push
cs
lds
test
inc
ret
xchg
int
pop
leave
addr16
add
xchg
sbb
icebp
pop
add
imul
xor
inc
xchg
mov
and
add
js
sub
rcrb
sbb
subl
xchg
xchg
mov
jb
lods
fld
insl
nop
out
jle
pop
add
cmpsl
mov
cmp
inc
mov
in
mov
mov
add
sahf
and
fdivrl
sbb
sbb
sub
ds
adc
adc
test
jecxz
shl
ds
in
enter
push
push
andl
sti
lea
sub
gs
push
out
cmpsb
les
xor
imul
mov
insb
stos
loop
mov
loope
or
add
lock
jae
adc
and
dec
shrb
pop
add
jg
mov
fidivrl
jmp
mov
xchg
sti
aas
les
push
fildll
data16
add
xlat
jmp
stos
dec
into
cmpsb
test
adc
mov
push
loopne
mov
and
sub
iret
mov
in
divl
inc
pop
js
jae
imul
and
mov
sub
sbb
jnp
push
arpl
cmpsb
test
jecxz
push
jne
cwtl
push
movlps
cld
cwtl
push
out
sbb
or
ss
gs
pop
repnz
call
dec
xchg
adc
cmp
inc
pushf
test
jbe
movsl
dec
push
cmpb
cmp
mov
sub
int
in
shl
cmc
sbb
sbb
out
imul
jae
mov
add
ret
adc
mov
aaa
lds
jns
clc
fcmovu
xchg
cli
mov
pop
movsb
or
pop
fists
sarl
xchg
pushw
add
xchg
daa
in
addr16
or
ret
hlt
dec
adc
xchg
jp
out
fadds
xchg
mov
mov
ret
pop
jo
cmp
inc
and
or
mov
das
jecxz
repnz
popf
pop
bound
stc
mov
sub
ss
xor
dec
ss
rep
push
cmpsb
test
mov
lret
loope
loop
pop
adc
adc
lods
mov
mov
pop
mov
cmp
imul
push
lret
bound
push
mov
cmp
rcrl
cwtl
add
adc
inc
xor
ds
add
lods
or
daa
andb
mov
insb
gs
lods
dec
xchg
jmp
xor
fbstp
xor
adc
push
popa
pop
add
mov
mov
cli
pop
xchg
push
test
add
and
lds
cmc
pop
gs
stos
fmul
movsl
and
testb
add
sbb
dec
push
mov
decl
pop
pop
xchg
or
adc
lods
stc
lcall
shlb
mov
inc
xor
cmc
sbb
pop
je
stos
fdivr
mov
dec
and
dec
test
pop
call
mov
and
or
sub
shll
outsl
out
cld
repnz
jg
mull
pop
pop
inc
lcall
test
in
xor
dec
aad
in
add
push
push
out
leave
mov
pushf
jns
pop
ss
adc
aas
mov
rorl
aas
adc
jno
cmp
jbe
mov
into
fmul
mov
jae
fildll
and
push
data16
jge
mov
es
lahf
data16
cmpsb
mov
loopne
adc
ret
je
testb
and
cld
xchg
popa
rcll
ja
repz
mov
aad
mov
xchg
jae
outsl
insb
cltd
xchg
inc
dec
push
jbe
pop
mov
ss
mov
sbb
sbb
jbe
dec
ja
arpl
or
sub
mov
xchg
sbb
and
jae
inc
and
insl
out
cs
push
dec
push
add
ja
jmp
nop
sub
xchg
adc
cmpl
pop
xorl
je
or
or
imul
negl
jo
xchg
inc
fwait
daa
lret
add
xlat
loopne
or
sbb
sahf
les
or
imul
cmpsl
mov
gs
xor
sbb
sbbb
test
les
addr16
sbb
pop
imul
adc
adc
push
pop
mov
inc
xor
or
sbb
cmp
push
cmp
cmp
imul
mov
fmull
mov
or
xchg
mov
or
fsts
and
outsb
cmp
pop
dec
and
push
xchg
push
mov
xor
sub
mov
adc
test
jb
clc
cmp
pop
mov
adc
es
push
xchg
outsb
aam
popa
push
pop
mov
clc
sarl
testb
cmc
mov
sbb
bnd
push
mov
mov
outsl
fwait
cld
incb
adc
out
or
not
stos
loopne
das
add
data16
add
mov
xchg
out
ret
test
stc
jmp
test
cwtl
pop
push
test
push
pop
jbe
loopne
aaa
or
stos
pop
dec
dec
inc
sti
mov
inc
adc
inc
es
addb
xchg
cli
xchg
cmc
add
mov
sub
fdivrp
mov
push
lods
inc
adc
add
lods
test
jae
add
inc
adcl
jl
test
mov
flds
xor
inc
gs
xchg
movsb
xor
cmpsb
add
add
sbb
inc
jbe
stc
jb
pop
imul
jle
cmp
cs
pushf
movsb
jnp
fiadds
fwait
pop
cmpsb
mov
loope
push
mov
mov
sub
repz
stos
xor
negl
jb
xchg
sbb
in
jle
add
pushf
fstpt
xchg
outsl
mov
out
rcl
cmc
dec
gs
mov
movsb
popf
and
ret
inc
mov
pop
icebp
jns
cmp
sub
add
pushf
add
sbb
pop
dec
pop
cmc
mov
jns
outsl
cmp
jo
mov
lds
cmp
mov
ljmp
stos
dec
cmp
inc
and
pop
into
push
ja
adc
inc
pop
icebp
pop
outsb
jmp
mov
mov
jl
xchg
fwait
cmpsl
xlat
xchg
mov
jg
xor
dec
mov
jnp
xor
xor
fwait
ret
fsubs
push
fcmove
nop
test
xor
idivb
inc
out
sub
pop
ret
in
cmp
leave
sbb
insb
jno
test
cs
dec
pop
sbb
inc
bound
repz
sar
mov
sub
test
notl
jns
ja
xor
cwtl
cld
jg
sub
jne
in
xor
gs
mov
adc
sub
cmp
jp
or
mov
inc
pusha
fdivrl
dec
xor
adc
xchg
cs
and
mov
adc
or
sub
sbb
adc
repz
add
and
and
je
dec
leave
and
mov
xchg
stos
aam
into
inc
movsb
fst
mov
lds
jecxz
push
xchg
ds
lea
cwtl
ret
sub
push
je
aam
mov
mov
clc
dec
jmp
movsl
loope
add
cmp
push
ljmp
jmp
loop
repz
sbb
cli
jge
xchg
lcall
mov
adc
out
pusha
jbe
lods
fisubrl
add
mov
movsb
mov
jbe
fsubr
mov
mov
fidivl
xor
lret
out
fisttps
mov
clc
pop
enter
int
jl
inc
cld
add
test
mov
imul
mov
lahf
rcrb
pop
dec
bound
cs
decl
sbb
sbb
call
mov
call
ret
rcr
jo
or
mov
sub
mov
out
push
sbb
sbb
mov
sbb
xor
out
pop
xchg
add
sub
int
ja
fildll
cltd
frstor
dec
cmp
or
imul
arpl
mov
dec
mov
jae
addr16
das
mov
fwait
jne
sbb
add
icebp
mov
mov
mov
mov
jp
fimull
push
pop
or
test
lret
mov
xor
pop
gs
out
sub
aam
inc
or
adc
sahf
sbb
mov
imul
inc
loopne
ds
lock
jmp
jne
repz
xor
adc
stc
sbb
test
mov
xchg
mov
pop
insl
adc
add
xor
decb
pop
cltd
mov
cmp
aam
stos
ficoml
xor
scas
cli
test
stos
jnp
mull
test
add
cmp
lahf
sbbl
xchg
push
jmp
shlb
and
pop
mov
stos
outsl
imul
stos
mov
cli
sub
shlb
or
ss
mov
add
xchg
in
sbb
mov
adc
lcall
fidivrs
jne
rcr
pop
inc
fstpl
movsl
aad
push
mov
cmpsl
jmp
fwait
subl
dec
xor
mov
nop
shlb
bound
push
lods
mov
sarl
push
jg
mov
sbb
shrb
push
add
sub
mov
fimull
mov
pop
xor
mov
inc
testl
rclb
les
adc
cwtl
insb
call
sbb
push
out
jb
sahf
icebp
fsubrl
dec
or
movsl
aad
adc
cmp
repz
cs
sbb
iret
imul
dec
pushf
mov
iret
pusha
cmp
dec
mov
mov
push
daa
fidivrl
jb
stos
push
or
in
jle
cmp
loopne
jge
test
aas
sbb
or
jle
and
adc
in
or
sub
xchg
jge
push
cwtl
mov
out
mov
mov
xchg
pop
icebp
call
les
push
and
and
cmp
fiadds
sbb
cmc
rcr
hlt
jbe
mov
xchg
ja
or
mov
mov
push
inc
mov
movsl
pop
xchg
bound
imul
adc
lret
lds
jnp
or
int
mov
dec
add
je
das
mov
aaa
test
jp
mov
inc
sub
popa
aas
ja
adc
push
sub
popf
cmc
std
push
arpl
mov
xchg
mov
jno
push
lret
jo
addr16
rcrb
cmp
dec
adc
xchg
push
jo
fdivrl
imul
xlat
scas
repnz
js
pop
mov
xchg
cmpsl
mov
pop
dec
rol
xchg
cmp
xor
xchg
mov
pop
scas
outsl
repz
into
pushl
mov
rolb
cmp
std
stos
andb
aas
or
jp
adc
daa
xchg
sub
sti
add
cltd
mov
sti
inc
out
inc
adc
inc
and
shl
fwait
xor
subl
nop
cmp
jbe
sbb
sbb
sub
mov
jns
sub
adc
sbb
call
jmp
div
inc
xor
cmp
dec
cmpsb
cmc
jae
cmp
push
out
pop
int
mov
or
idivl
push
mov
ljmp
int
push
rorb
popf
pop
push
push
mov
xchg
dec
jb
ficompl
fwait
mov
cli
lea
pop
add
dec
mov
sub
test
scas
jl
jg
xor
sbb
and
cli
push
cmpsl
mov
das
loop
mov
pushf
mov
ret
mov
adc
in
push
xor
fucomp
sub
hlt
pop
sub
ds
call
fwait
leave
lahf
or
push
rorl
dec
add
pop
and
mov
jno
addr16
inc
push
outsb
push
test
xlat
stos
sbb
dec
mov
cmp
in
jnp
xor
adc
es
pop
pop
bound
sti
xor
pop
dec
sub
andb
jno
enter
test
adc
mov
shl
cmp
mov
dec
ficoms
inc
mov
call
aaa
imul
ret
sub
cmp
sbb
dec
cmp
insl
adc
insl
jl
add
andl
ss
leave
inc
or
stos
or
sub
ret
dec
lahf
out
cmp
push
jmp
bound
adc
and
mov
push
push
ss
loope
lds
mov
cmpsl
repz
lock
pop
adcl
rcr
ret
xchg
push
into
jge
icebp
aad
mov
push
inc
sbb
mov
and
push
and
pop
xor
stos
cmpl
aaa
jb
cmp
inc
fprem1
mov
push
pop
cltd
cmp
fsts
jno
or
jo
divb
mov
call
inc
dec
cmp
sub
lcall
push
or
mov
pop
xchg
push
in
sub
jno
out
xor
mov
inc
in
outsl
and
loop
pop
outsb
mov
in
cmp
sarb
out
aas
push
insl
jb
jne
xchg
pop
mov
xchg
into
xor
aad
xor
loop
xchg
xchg
mov
push
outsl
cmc
sub
in
loop
icebp
or
mov
out
push
sbb
cmpsb
popa
mov
in
push
pop
shrl
enter
add
fwait
outsl
test
push
popf
cmp
test
adc
rcl
xor
jne
fistl
stos
aad
cmp
sbb
mov
aad
jo
in
mov
iret
xlat
ss
inc
mov
repz
or
fldenv
rorl
sub
test
out
push
lahf
testl
jg
add
enter
das
aaa
inc
xor
data16
jmp
push
sahf
lahf
loop
fbld
negb
jns
int
clc
add
out
into
dec
mov
pop
inc
sbb
xor
ja
jecxz
pop
mov
jecxz
outsb
xchg
lretw
iret
pop
icebp
add
das
stos
pop
stc
mov
push
stos
jl
daa
sub
sahf
cmovno
popa
push
aaa
aas
pop
ds
push
sub
pop
loop
push
rcr
xchg
mov
pop
mov
adc
test
and
pusha
mov
cwtl
decl
bound
popf
mov
lret
mov
lret
out
loope
jb
dec
cmp
fists
dec
or
fsubl
out
pop
sub
addl
outsb
and
mov
in
outsb
jno
push
inc
fcomi
jecxz
xor
js
push
jo
fcmovb
inc
jno
add
out
xor
test
sub
cmp
cmp
insb
adc
pop
sbb
testl
or
loop
inc
popa
sub
mov
out
mov
sub
lcall
jae
stos
pusha
aas
test
mov
lods
dec
dec
dec
push
pop
xorb
shl
das
insb
jmp
pop
clc
cmpsl
sub
adc
or
mov
lods
dec
xchg
xor
mov
xchg
mov
cmp
das
cmc
inc
push
pusha
push
and
mov
lods
or
fstl
sub
dec
xchg
inc
icebp
jg
lds
sbb
rcrb
not
cmpsl
not
lock
pusha
dec
pop
pop
jge
daa
inc
cmc
outsl
loopne
jbe
push
add
sub
mov
jle
xchg
xchg
daa
push
sbb
push
cs
add
std
xor
mov
bswap
or
stc
pop
outsl
mov
or
dec
ljmp
jmp
jns
cmp
fs
loop
in
cmp
lahf
cwtl
inc
or
add
jmp
pop
into
orb
out
popf
push
inc
sti
add
dec
lahf
call
lock
push
pop
push
mov
cmp
pop
or
xchg
xlat
or
ja
xor
icebp
mov
rcll
xchg
rolb
lea
pop
int
mull
clc
cmpsl
imull
not
stc
add
loopne
pop
push
ret
inc
mov
adc
imul
inc
or
xor
cmp
jae
mov
sub
addps
cwtl
cli
idivl
loop
cld
pop
pop
loopne
sbb
movsl
mov
or
cmpsl
inc
or
rcrl
cmc
stos
sbb
sub
sub
repz
shll
pop
cltd
jp
test
jae
inc
mov
xchg
aaa
cmp
xchg
jg
rorb
cwtl
inc
or
jecxz
cmp
push
mov
mov
push
xor
movsb
vpaddsb
sub
fcoms
xor
fsubr
popa
ret
out
mov
pop
scas
push
into
dec
pop
cmp
callw
inc
and
jnp
xchg
mov
call
fadds
pop
insl
inc
dec
or
fildll
insl
push
xor
lret
push
insb
ja
ss
jbe
ret
call
mov
daa
shll
lret
shlb
loopne
xor
push
xorb
cmpl
clc
shlb
sarb
out
imul
pop
or
jbe
dec
push
cs
lea
out
mov
outsb
mov
imul
pop
icebp
sbb
outsb
push
stc
or
pop
aam
ret
in
push
mov
idiv
sub
mul
xchg
rcll
divl
push
out
je
rol
movsb
mov
test
cs
inc
mov
enter
icebp
add
inc
or
xchg
or
repnz
arpl
aam
cmp
sbb
loope
mov
js
pop
call
sbb
jl
mov
jmp
iret
shlb
add
xor
repnz
pop
jecxz
push
jg
sbb
leave
fists
mov
fists
loop
adc
ja
bound
fs
fnstenv
stos
fprem
gs
inc
jle
lods
xor
test
sub
insl
lods
push
mov
cli
and
js
mov
cmp
fsubs
lret
imul
popa
pop
aam
stos
sbb
or
pop
cmp
pushf
mov
ljmp
popa
lahf
cmp
mov
inc
sub
jmp
push
pop
imul
ds
pop
mov
in
sub
or
repz
cmpb
pop
aaa
stc
lock
cmp
cltd
inc
jmp
xchg
inc
addr16
cmp
xor
jbe
lods
pusha
sub
xor
xor
adc
clc
mov
call
adc
lea
jne
xor
adc
cmp
pop
dec
push
or
mov
dec
pop
cmc
inc
nop
mov
in
sub
or
mov
xchg
mov
fcomps
cld
cld
mov
fs
insb
jge
mov
les
pop
repnz
mov
push
mov
test
int3
jle
pop
fidivrs
xor
cmpb
icebp
std
mov
pushf
in
fstpl
popa
out
movsl
dec
imul
out
adc
and
ljmp
xchg
push
jle
sub
mov
sub
bound
push
push
lcall
andl
inc
sub
xor
lods
dec
mov
insl
xor
rcll
out
fsubl
mov
outsl
jl
ret
les
js
es
inc
cmp
mov
xchg
dec
push
or
aam
in
inc
inc
sub
jno
movsl
push
out
add
cs
or
xchg
enter
incb
and
lret
push
jno
nop
lcall
xchg
pop
cmpsb
addr16
inc
notb
lret
pushf
cmp
push
jbe
movsl
adc
jb
call
sti
sbb
xchg
fildll
pop
cmp
xchg
sub
sub
sub
cmp
sub
out
xchg
push
inc
sbb
push
gs
das
outsb
and
push
dec
cltd
leave
psrad
icebp
mov
push
mov
adc
test
nop
rcrb
cs
scas
and
xchg
cmc
pop
cmp
push
adc
and
push
lock
sbb
vcmpneqss
lods
add
dec
sbb
mov
les
test
aaa
jb
loopne
dec
imul
fadd
push
jecxz
jge
pop
in
scas
add
push
or
sbb
push
mov
xlat
cld
push
inc
mov
jne
addb
out
das
pop
mov
imul
jnp
fcmovbe
dec
movsb
and
adc
ja
push
or
call
and
fs
xchg
mov
push
jmp
sub
cwtl
dec
shll
jl
aaa
pop
outsb
sub
inc
pop
and
gs
jns
int3
add
jle
lock
add
xchg
shr
mov
push
cmc
fadds
out
add
sti
mov
pop
cmpb
jecxz
xor
mov
insl
fisttps
cmp
outsb
int3
and
iret
mov
pop
jnp
adc
cmc
push
repz
out
xchg
sub
js
push
fdivr
mov
sbb
mov
fcompl
xor
in
out
or
shrl
cmp
pop
adc
xchg
push
divl
stc
adc
loope
xor
popa
push
and
mov
cmp
push
popa
jno
filds
lds
inc
jo
pushf
jb
add
inc
add
jnp
sarl
frstor
jmp
mov
mov
ss
mov
or
add
fmull
pop
rorl
pusha
sti
add
pop
xchg
mov
popf
dec
in
popa
and
js
jmp
arpl
mov
xchg
xchg
jg
lods
icebp
adc
std
mov
andl
cld
repz
dec
lcall
testb
inc
xor
in
mov
cld
dec
jle
test
dec
sbb
out
into
imul
jno
inc
aas
in
add
mov
sti
push
shl
daa
cmp
sub
mov
lahf
shll
or
mov
test
lret
ds
lcall
stos
sub
pop
pop
push
aaa
loope
sub
mov
xchg
rclb
pop
pop
insb
push
cltd
lret
sub
lods
jecxz
or
push
fistpl
pop
push
and
adc
mov
pusha
or
jle
mov
cmp
jmp
xchg
push
pop
or
rcll
mov
jnp
push
add
test
mov
mov
push
mov
pop
in
xor
sbb
imul
lcall
movsb
sub
rcr
push
cmc
mov
movsb
mov
out
popa
mov
cmc
dec
dec
rcr
jns
pop
pop
push
dec
hlt
das
into
nop
sbb
and
mov
es
jl
leave
and
pop
cmp
aad
jp
jae
mov
out
arpl
sbb
ror
mov
inc
mov
cmp
and
out
add
pop
addr16
jmp
pop
mov
push
daa
lea
cmpl
jo
mov
stos
daa
lret
pop
clc
fwait
shr
inc
push
mov
xchg
mov
test
in
mov
pop
jmp
iret
mov
lret
mov
sub
mov
jns
orb
add
fwait
mov
bound
fs
adc
xchg
out
mov
pop
add
pop
out
dec
sarb
or
ror
ret
cmpsl
fs
dec
fstp
cld
incl
mov
jns
sub
adc
jecxz
mov
cltd
psubd
es
sub
lock
out
or
sub
add
fisubs
fwait
adc
pop
pop
or
shl
mov
inc
test
ffree
add
pop
lcall
add
outsb
les
js
adc
loop
mov
pop
dec
inc
cmpl
mov
push
leave
mov
add
adc
mov
loop
xchg
movsb
stc
xchg
roll
pop
add
fsubs
sbb
dec
test
push
and
repz
das
sti
aaa
stos
add
dec
fstpl
and
jle
je
popa
dec
mov
or
adc
xor
lods
adc
sar
ficoml
icebp
addr16
adc
imul
pop
push
pusha
push
and
in
js
add
movsb
inc
sbb
jno
jmp
xchg
and
inc
pusha
sbb
scas
pop
mov
fimull
sbb
bound
stos
push
cmpsl
dec
stos
movsl
mov
repz
push
xor
insb
jmp
cmp
cmpl
in
rcrl
in
test
popf
pusha
add
dec
cmp
lahf
jg
cmp
mov
adc
inc
insb
sbb
mov
and
xchg
inc
push
add
or
into
xor
insb
xor
int
scas
and
insl
sub
mov
inc
push
push
push
imul
and
cmp
adc
addr16
rcrl
movsb
sbb
popf
xor
mov
adc
inc
add
mov
mov
hlt
push
call
push
mov
jl
rolb
dec
or
or
xchg
and
inc
cmc
xchg
testl
fnstenv
or
xor
or
stos
sbb
mov
daa
push
mov
fwait
xor
repnz
in
insb
xchg
inc
cwtl
and
dec
outsl
and
mov
push
xchg
rcr
push
push
bound
push
pop
adc
aad
fdivrl
jae
imul
call
and
ret
xchg
out
cmp
jg
lds
xchg
iret
xor
add
lcall
test
stc
jp
inc
lock
dec
pop
je
add
sub
jns
orl
cmp
in
push
into
add
push
lahf
cmc
test
mov
pop
xorb
and
xor
and
loop
jnp
xchg
fucomi
fsubrl
xchg
sub
test
iret
repnz
leave
dec
scas
mov
or
and
sbb
scas
push
push
fidivrl
xchg
pop
push
in
pop
fdivs
adc
les
cmp
ljmp
push
xor
into
dec
cwtl
lds
mov
cmp
aad
ja
jb
jge
pop
fwait
sub
mov
dec
inc
orl
ret
dec
cltd
jecxz
dec
jb
push
sahf
push
or
push
adc
push
je
std
sbb
xchg
sbb
icebp
out
insl
rorb
jnp
inc
dec
jnp
cmp
decb
sbb
dec
xor
mov
pop
push
push
xchg
in
adc
jecxz
loop
movsl
add
xchg
iret
and
insl
jnp
leave
pop
fcomi
push
sub
bound
mov
lea
push
sbb
icebp
cmp
mov
fucomi
clc
inc
sahf
cltd
je
xor
stos
cmp
sahf
cmp
lret
pop
sbb
aaa
mov
push
iret
hlt
nop
das
test
xchg
aas
nop
jae
mov
mov
leave
mull
test
push
mov
add
xlat
dec
sbb
or
daa
pop
insb
into
mov
mov
pop
xchg
lods
sbb
outsb
inc
pop
fsubrl
mov
fs
repz
inc
int3
pop
cmp
sbb
outsl
and
sti
jl
adc
lret
je
repnz
xchg
mov
mov
or
stos
js
sarb
daa
fs
jno
push
and
aas
pop
arpl
out
sbb
sub
fldl
xor
or
jg
ret
fstl
cli
lods
cmpsb
int
sbb
cli
adc
mov
scas
adc
popl
jl
fisttpll
aam
call
icebp
jecxz
icebp
dec
dec
mov
push
or
pop
fwait
sub
int3
aam
loope
insb
and
lea
pop
dec
shlb
aad
icebp
fmul
jbe
not
jae
mov
and
mov
cmpsb
jno
mov
mov
pop
ds
xchg
mov
test
rorb
sbb
xchg
repz
xor
ret
call
int
imul
adc
jmp
in
in
jle
or
jg
addb
inc
inc
mov
jno
popf
in
sti
push
test
mov
lock
or
das
mov
add
scas
and
or
int
fmulp
lret
enter
jno
jae
cli
or
sbb
pop
xlat
enter
lea
sti
dec
sub
dec
ljmp
xor
pop
xor
push
into
add
test
idivl
cmpsb
clc
orl
xor
in
push
cmp
les
stc
in
adc
push
fildl
push
inc
adc
jecxz
daa
les
cmc
inc
mov
adc
and
hlt
add
paddsw
pop
jmp
pusha
cmpsl
mov
test
popa
sub
push
nop
jo
push
shlb
pop
lahf
fldl
out
lahf
sahf
jecxz
pusha
adc
stos
push
stos
sub
addl
outsb
js
cli
in
cmpsb
jmp
sub
ficompl
fists
adc
out
jp
ss
pop
mov
push
xchg
pop
jnp
call
scas
xor
loopne
jp
mov
pop
ret
rol
pop
push
js
pop
daa
adc
add
lcall
divb
mov
mov
in
pop
incl
rcrl
or
xor
ret
or
add
lods
jle
std
aad
mov
pushl
pop
mov
sub
xor
mov
addr16
into
filds
test
and
mov
jnp
cmp
mov
inc
sbb
fimull
ficoml
push
aas
inc
js
or
mov
dec
je
loope
xchg
dec
mov
stos
xchg
sbb
stos
dec
cmpl
ret
add
shll
and
sub
data16
in
mov
pop
mov
inc
and
mov
push
or
pop
jo
cmp
scas
sbb
out
lcall
cltd
jge
jmp
es
xchg
out
mov
mov
xor
pop
adc
fwait
nop
stc
ljmp
push
pusha
std
insl
or
mov
stos
sbb
xchg
insb
jp
push
push
sahf
imul
mov
dec
mov
mov
mov
shll
scas
pop
lds
popa
sub
mov
jl
shlb
xchg
adc
push
push
jl
hlt
fisubl
leave
and
inc
int
xor
daa
pusha
add
xchg
std
pop
or
push
sub
loop
cmc
scas
es
stos
jle
dec
push
inc
loope
cli
sub
pop
inc
int3
fs
outsl
bound
sbb
fcmovb
outsl
stos
cs
fimull
insb
pop
ja
test
aas
cs
push
mov
addr16
ret
cmp
loopne
and
jnp
fisubrl
cmpl
aam
fldenv
out
sub
outsl
cmpsb
jo
jl
xchg
call
sub
enter
movsl
pusha
in
pushl
jo
xlat
sub
mov
xor
xchg
test
or
arpl
std
mov
enter
pop
xchg
push
es
mov
add
into
adc
enter
bound
out
fimull
arpl
cli
ret
insb
js
rcr
shrl
data16
imul
adc
xor
lahf
fsubrs
int
and
jecxz
or
push
popl
and
cmp
xchg
je
push
and
mov
stos
in
sahf
dec
call
movsl
push
inc
lcall
mov
fisubrl
orb
ss
addl
shl
inc
mov
popf
lock
jb
mov
roll
fwait
mov
dec
imul
dec
sub
es
cmc
jb
xor
push
mov
adc
loopne
jbe
scas
fildl
mov
push
test
push
repz
ret
addb
and
in
aas
and
ss
pushf
dec
punpcklwd
jbe
cmp
xor
xor
lret
sub
cmpsb
push
jmp
xor
repnz
mov
decl
lods
xchg
xlat
loop
xor
sbb
push
adc
lods
je
in
leave
fdivl
xor
dec
cmp
or
jne
pop
test
mov
xchg
ds
jp
dec
inc
sysret
movsl
mov
add
les
out
push
mov
xor
inc
shll
sub
je
sub
pop
dec
icebp
sub
mov
scas
cmp
test
mov
mov
mov
bound
popa
jns
xchg
outsb
mov
dec
das
imul
arpl
pop
mov
andl
inc
adc
mov
push
popa
push
xchg
in
fs
lret
lret
adc
fbld
xchg
enter
jge
inc
mov
push
enter
pop
js
jbe
mov
mov
add
daa
xlat
jecxz
jg
xchg
mov
jg
shl
mov
popf
inc
adc
mov
cmp
cmc
mov
popa
aad
das
loope
xor
ja
mov
xorb
clc
push
push
or
dec
mov
inc
sbb
iret
andb
cltd
pusha
dec
push
clc
shl
imul
arpl
mov
out
push
out
cmp
jno
hlt
or
shlb
mov
sbb
imul
incl
test
movsl
adc
or
push
out
aad
sbb
inc
leave
push
push
mov
mov
sahf
pop
mov
cmp
loope
cmp
cmp
adc
sarl
orl
shrb
faddp
loope
outsb
jl
loopne
mov
and
incl
xchg
inc
mov
xor
aad
jno
inc
aas
stos
nop
cmpl
aaa
adc
aas
jb
add
inc
shl
movd
outsb
jmp
add
aaa
insb
lds
jmp
cld
push
jo
adc
push
cmpsl
jno
sbb
cmp
sbb
mov
les
fwait
mov
jb
dec
subb
mov
fwait
lods
scas
add
test
sbb
xchg
fimull
movsb
hlt
add
ret
sub
mov
sbb
xor
insl
mov
push
stos
imul
fcomi
bound
or
stc
ret
inc
sbb
aad
imul
jne
std
pop
cmp
cmc
mov
pop
movsb
sahf
fadds
pop
cmp
fldcw
fsubrs
lds
push
push
dec
cwtl
cltd
xchg
daa
push
push
inc
ss
mov
dec
in
mov
std
lods
push
lcall
insl
popf
or
mov
mov
loope
adc
iret
jecxz
leave
cli
dec
popa
mov
push
and
stc
push
sti
xlat
rorb
mov
jnp
push
xchg
fldenv
je
lea
aad
les
repz
xlat
cltd
call
mov
cmpsb
sub
fidivl
nop
jno
sarb
fwait
insb
cmp
push
xlat
add
and
filds
es
sbbl
xchg
or
mov
jnp
int3
pop
inc
pop
xor
insl
aad
test
sbb
popf
fs
bound
or
sub
add
jnp
jno
xor
in
cmpsb
adc
and
cmp
and
stc
xor
jo
rorb
jbe
push
cmp
movsl
push
and
or
ficompl
push
out
pop
jle
clc
mov
xchg
cli
push
stos
jle
hlt
test
addr16
sahf
mov
sets
aas
loopne
sbb
mov
add
pop
jns
movb
mov
jmp
adc
push
popf
pop
push
cmp
nop
fcomps
and
out
jecxz
pause
daa
ret
inc
adc
fldenv
pop
aas
xlat
push
movsl
xchg
xchg
dec
mov
popa
mov
push
ds
xchg
lahf
cmc
int
rcll
pusha
and
jbe
cmp
loopne
pop
pop
jmp
and
leave
rolb
fmull
pop
mov
pop
ljmp
movsl
jmp
xchg
negb
outsl
jecxz
xor
ficompl
xor
outsb
loopne
imul
mov
rorb
insl
test
inc
add
loopne
xchg
cmpsb
pusha
rcrb
js
push
ret
mov
pusha
mov
cmpsl
jnp
inc
cmp
inc
jb
mov
sbb
push
push
inc
stos
pop
paddw
icebp
ret
xchg
repz
rclb
xchg
in
cmp
adc
mov
jne
fwait
pop
arpl
adc
lock
stc
ds
sbb
nop
lcall
faddp
pop
fwait
out
jne
and
mov
adc
sub
in
lods
sahf
dec
cmp
mov
sub
imul
fs
es
mulb
call
bound
out
pop
call
inc
jno
inc
mov
test
dec
std
aas
fdivrs
in
sub
ret
imul
sub
cmp
out
inc
cmp
je
negb
inc
cld
std
mov
sbb
inc
jne
mov
push
roll
inc
xchg
mov
insl
xor
pop
rclb
cmp
rcrb
jl
cli
pop
movsb
mov
jle
pop
xchg
testl
pop
sub
in
push
in
loope
mov
subl
movq
icebp
or
flds
xchg
push
leave
fadd
adc
test
xor
hlt
xchg
lcall
sbb
sahf
mov
call
inc
cmc
pop
aad
add
cmp
fcomip
cs
adc
jg
sub
rcrl
sbb
cmp
push
inc
dec
pop
mov
adc
hlt
pop
xchg
lock
idivl
adc
loop
mov
insl
fcmovb
sti
inc
shlb
cmp
aaa
inc
push
repz
mov
test
pop
repnz
mov
lods
mov
mov
aad
mov
jge
or
movsl
cmpsb
cltd
pop
dec
or
pop
imul
lods
fdivl
loope
icebp
or
addr16
jmp
sbb
mov
mov
mov
or
aaa
mov
pop
fmull
pop
cs
or
pop
and
std
pop
les
lret
fisttpll
xorl
hlt
mov
mov
push
or
clc
ljmp
xchg
and
jae
adc
fadd
mov
je
imul
or
fisubrs
push
pusha
lock
push
repnz
dec
inc
aam
dec
or
sbb
in
ljmp
aam
adc
sahf
add
mov
mov
dec
push
xor
and
inc
movsl
or
jge
in
jmp
push
shl
pop
or
or
dec
sub
in
push
pop
in
adc
and
xchg
jnp
ret
sub
mov
pop
test
add
int3
into
mov
div
pop
movsl
scas
fcmovnu
mov
insl
xchg
cwtl
popa
jns
fisttpll
loopne
pop
cmp
pop
lahf
into
pop
movsb
adc
mov
stc
pop
pop
add
sbb
js
cltd
mov
insl
cmp
movsl
cmpl
lds
inc
push
xor
dec
push
push
es
cmp
fbstp
xor
gs
lods
dec
sysretw
rclb
push
dec
adc
or
xor
mov
mov
cmpsl
xchg
jns
in
std
outsl
fnstcw
lods
std
lahf
hlt
bound
dec
lods
stos
repz
adc
and
push
int
mov
pop
in
pop
fwait
rol
mov
add
pop
fmuls
add
mov
jno
lods
jb
push
in
shl
inc
xchg
in
cwtl
in
cs
push
xchg
jno
fidivl
pop
push
push
stos
xor
inc
cwtl
jae
aaa
arpl
add
xor
sub
jl
mov
dec
fdivrs
inc
jecxz
mov
scas
ds
inc
adc
adc
fildl
pop
cld
adc
cmpsb
push
loope
push
shrb
sub
mov
inc
popa
add
test
sub
mov
jo
stos
call
ss
lcall
mov
mov
jae
rcrl
lahf
jmp
outsb
jmp
inc
iret
popf
adcb
adc
jge
xor
les
sbb
shll
mov
push
adcl
out
cmp
xor
xor
call
stc
mov
ror
lods
bound
add
ja
mov
popa
es
ret
insb
arpl
test
mov
jae
or
movaps
mov
ret
aaa
xchg
inc
cltd
add
fisubrl
repz
mov
push
sbb
add
in
aaa
in
fists
jae
sbb
std
cmp
xor
dec
pop
mov
nop
in
incb
lds
pop
scas
jmp
lret
mov
ret
cltd
mov
leave
addr16
fnsave
incl
sahf
mov
orl
cmp
fistl
or
jp
enter
sbb
hlt
mov
push
loopne
adc
in
lods
int
rorb
insb
adc
jge
loope
sbb
pop
popf
dec
pop
jmp
cmpsb
xor
out
test
or
jg
and
je
mov
jge
mov
arpl
loop
leave
mov
xor
pop
xchg
sbb
call
pushf
mov
xorb
scas
in
mov
orl
xor
arpl
jae
popf
inc
sbb
sub
inc
testb
sub
test
fistl
or
mov
mov
cld
mov
pop
xchg
mov
in
jns
add
jp
or
jo
dec
test
mov
mov
inc
sbb
inc
and
rcr
mov
sbb
cli
mov
xor
pop
push
mov
mov
mov
test
sub
xchg
fsubl
idivl
icebp
and
mov
enter
stos
mov
and
mov
push
into
out
inc
out
sub
lods
mov
add
ret
fwait
sarl
subl
add
adc
shl
push
lods
push
scas
dec
ret
aaa
cmp
out
cmp
ss
bound
into
scas
sub
cltd
add
and
addb
sub
inc
jl
xor
out
push
les
icebp
add
sbb
lds
clc
addr16
pop
xor
push
scas
mov
cli
je
adc
sahf
sub
hlt
mov
sbb
cmpsl
mov
push
movsb
sub
arpl
aaa
xor
jmp
out
push
xor
jmp
pop
adc
sbb
and
bound
lods
jmp
jge
shlb
mov
out
in
sti
xchg
cmp
or
fistl
pop
dec
insb
xchg
or
das
xorl
inc
ja
and
push
sbb
mov
xor
pop
aad
push
lock
dec
xchg
popf
xchg
sti
enter
sub
iret
stc
jne
outsl
xor
int
imul
push
mov
in
jmp
arpl
scas
mov
xchg
addr16
cmp
in
or
push
xor
jg
lret
movl
dec
stos
cs
jns
mov
xor
add
lahf
mov
lea
dec
cmp
arpl
lds
mov
ljmp
jle
sbb
test
cs
inc
cmp
out
sub
inc
xor
test
int
cld
aam
sbb
dec
ljmp
jg
lcall
rcrb
push
lea
push
mov
pop
inc
mov
jo
sbb
mov
mov
push
adcl
int3
pop
mov
inc
lds
outsb
and
jnp
shrl
shlb
out
push
test
xor
out
std
push
fidivrs
cmp
xchg
push
lock
mov
xor
outsb
insl
ljmp
xchg
icebp
cmp
jne
les
dec
inc
mov
sub
sbb
cmp
mov
xchg
mov
loopne
iret
jne
and
dec
push
cs
adc
xlat
mov
dec
stc
jge
in
mov
xor
stos
mov
push
adcb
js
adc
call
aas
or
testl
fdivrl
adc
cmc
sbb
pop
or
notb
bound
das
xor
push
cmc
dec
into
fcoml
sbb
push
mov
and
and
pusha
adc
dec
rcr
xor
leave
xchg
mov
lock
mov
cmp
mov
dec
jp
cmp
hlt
cmp
mov
add
push
push
jo
jg
inc
rcr
push
jg
movsl
addl
mov
xchg
lods
lock
jns
addl
dec
push
xor
inc
loopne
lock
inc
movsl
jne
and
jmp
rcrl
pop
sub
cmpsb
into
addr16
or
cwtl
mov
cmc
fisttps
outsb
subb
dec
push
xchg
dec
lods
sahf
into
and
jp
add
or
jbe
call
aam
aas
mov
fiaddl
sarb
pop
inc
leave
and
sbb
mov
mov
mov
test
sbbb
push
fsubl
mov
and
push
iret
ficomps
insl
lods
dec
mov
out
cmp
add
ljmp
imul
loop
mov
pop
mov
jecxz
dec
xor
repz
stos
jp
add
jmp
mov
mov
or
fsts
aas
clc
cmc
test
das
clc
outsb
icebp
je
adc
xlat
sbb
jnp
in
sub
stos
lds
inc
daa
sbb
inc
mul
gs
pop
adcl
sub
ret
testl
cli
lock
xchg
sbb
sub
and
cmpl
fnsave
sub
lods
mov
sbb
mov
xchg
push
xchg
cli
cmpsb
add
test
xor
lret
mov
cmpsb
mov
xlat
sub
scas
ret
inc
inc
adc
adc
mov
add
dec
sbb
dec
dec
mov
cmpsl
int
mov
fcmovb
xor
lods
mov
pop
pop
bound
call
in
adc
pusha
enter
pop
jns
out
popf
xor
outsl
adc
inc
inc
cmp
push
pop
dec
adc
push
out
mov
add
push
fxch
cmp
add
sub
sbb
aas
jno
ret
outsb
hlt
aam
inc
cmpsl
or
push
mov
dec
movsb
jg
inc
arpl
adc
cld
leave
inc
mov
movl
adc
sub
inc
hlt
jne
fcmovbe
xchg
fcmovnbe
mov
jne
add
insb
jg
in
sub
arpl
pop
cmc
mov
mov
adcb
xor
sub
dec
inc
jmp
push
vpmacssdd
pop
mov
pop
into
or
or
cmp
stos
movsl
out
imul
jge
adcl
test
repz
mov
sub
or
daa
cld
insb
cmp
jo
mov
mov
add
lret
cmp
sbb
xchg
ja
loope
mov
cmpsl
sahf
out
add
and
aam
adc
imul
xor
out
enter
mov
pop
dec
arpl
mov
dec
adc
daa
enter
mov
repnz
out
scas
xchg
push
lods
push
cmp
and
mov
mov
jbe
in
inc
cmpsb
mov
out
out
mov
hlt
xchg
push
iret
les
sub
xchg
das
cmp
leave
sahf
fdiv
fdivs
fisttpl
movsl
pop
or
mov
jl
and
clc
cmp
fdivr
pop
cmp
and
adc
scas
or
add
jne
outsb
jbe
in
mov
push
mov
cmp
adc
out
or
adc
mov
rcrl
and
mov
sbb
xorb
push
sub
sbb
js
sbb
xchg
xor
paddw
adc
inc
cmpsl
mov
and
imul
std
dec
imul
pop
int3
push
call
popf
xchg
dec
jne
pop
rclb
sbb
jne
xor
push
inc
inc
xchg
pop
cmp
push
inc
sub
loop
sbb
fs
out
repnz
mov
pop
ss
popa
movsb
leave
mov
mov
enter
or
lea
ljmp
out
mov
adc
pop
cmp
add
out
mov
lds
sets
lods
shr
dec
and
mov
orb
test
jmp
xor
adc
sub
filds
inc
dec
and
ret
ret
int
and
mov
dec
fidivrl
pop
stos
daa
xor
andb
jp
popa
test
sbb
fbld
adc
movsl
xlat
test
dec
xchg
xchg
leave
or
dec
fs
add
sbb
push
xchg
in
inc
or
les
enter
sub
and
cli
dec
push
addl
and
cmpsb
jge
fldt
addl
pusha
in
data16
add
in
fnstcw
mov
push
cmpsl
fdivrl
jl
push
rcl
scas
iret
out
shl
add
imul
jl
add
inc
shrl
xorl
rcrl
es
jge
mov
add
sbb
sub
ret
xor
pusha
aad
ficomps
popa
xor
movsb
in
push
call
inc
fwait
cmp
daa
mov
and
adc
xor
jno
roll
xor
push
je
push
push
mov
in
leave
xor
fsubl
lret
xor
xchg
test
pop
aaa
adc
ficoml
scas
aaa
sub
cmpsl
imul
mov
das
and
jmp
sti
xrelease
cltd
add
hlt
sub
sub
and
loopne
sbb
imul
inc
mov
mov
fiadds
notb
gs
push
and
cmp
push
fnstsw
dec
leave
sahf
cmp
lahf
js
xor
aas
lock
or
insl
mov
mov
loope
jnp
inc
stos
xor
enter
fisubl
lret
mov
pslld
addr16
xor
enter
inc
mov
pop
dec
daa
in
and
adc
push
or
add
icebp
lahf
out
mov
dec
pop
cmpsl
fcom
call
pusha
repz
stos
dec
int
je
mov
enter
mov
fwait
dec
daa
out
add
xor
cld
and
ror
mov
daa
push
data16
add
vpaddusw
add
pop
loopne
mov
add
imul
loop
inc
and
cmp
xor
jae
mov
cli
aaa
push
test
xchg
leave
mov
dec
loop
adc
ss
sbb
sbb
stc
les
sub
loopne
jmp
push
sahf
push
mov
add
les
dec
mov
jmp
arpl
test
stos
fs
test
or
dec
lcall
pop
ror
inc
cwtl
xor
xor
pop
cmp
inc
lods
fcmovb
movsb
data16
jno
mov
ret
mov
fidivl
sub
fidivs
inc
mov
pop
ss
outsl
sbb
rcrl
inc
jbe
outsb
sub
jg
enter
jg
push
and
aas
rorl
das
test
dec
rolb
push
es
push
into
cmp
notl
mov
push
push
xor
les
jp
sahf
xchg
stc
aad
and
pusha
das
ljmp
xor
mov
cmp
xor
in
mov
xchg
xor
jns
in
and
add
pop
ret
sub
mov
jg
mov
sahf
and
and
js
xchg
stos
loopne
insb
push
jne
loopne
cld
andl
ret
and
sbb
daa
pusha
adc
sti
cmp
pop
mov
hlt
pop
xchg
stc
dec
jae
mov
mov
stos
dec
repz
push
push
jle
insl
test
and
inc
leave
jge
aas
mov
cmp
js
xchg
stos
in
outsb
push
jnp
push
dec
jp
or
movb
sbb
sub
pop
jo
popf
push
pop
aaa
mov
arpl
jae
mov
jnp
xor
or
sahf
dec
or
cmp
or
imul
arpl
out
sbb
xchg
sub
outsl
mov
xor
movsb
repz
push
or
jge
test
shll
xchg
dec
or
gs
inc
fsub
inc
fstps
jns
lds
dec
les
push
add
xchg
in
jle
stc
aad
stc
mov
int
decb
add
sbb
dec
xlat
out
push
movsb
out
cmpsl
es
cmpsb
mov
jo
adc
gs
sub
in
mov
mov
push
mov
inc
scas
enter
mov
xor
lret
imul
gs
jl
pop
dec
cli
jle
xor
divl
xor
or
or
mov
mov
jecxz
adc
jne
jge
jno
adc
popa
rcr
sub
jg
mov
negl
jle
insb
std
in
int
inc
xchg
sbb
push
testl
mov
popf
pop
xor
jecxz
push
stos
stos
fimuls
test
xlat
push
jp
jbe
popf
andl
in
inc
push
sub
lods
xor
rclb
mov
pop
adc
loopne
daa
xor
sub
mov
int
add
or
mov
sti
cmpsb
outsl
out
adc
or
sbb
add
int3
das
sub
sbb
cmpsl
mov
xor
mov
out
pop
ret
dec
stos
js
lods
or
push
push
gs
bound
and
jl
mov
pop
mov
in
mov
leave
adc
sbb
mov
push
sub
lcall
in
loop
add
out
pop
xlat
out
dec
out
jle
adc
sbb
fcomip
xchg
lret
mov
pop
xor
or
pop
jo
repz
js
or
or
push
add
sahf
ret
pop
inc
adc
rcrl
jae
pop
in
sbb
sbb
mov
mov
xchg
xor
stos
adc
cmpsl
pop
ret
ljmp
inc
xlat
push
or
pop
jle
int3
xchg
out
xchg
jo
xchg
in
push
push
adc
and
aam
popa
aas
push
test
fldl
adc
int
dec
mov
mov
pop
int
stc
pop
jl
mov
sbb
iret
lods
outsl
sub
cmpsl
mov
sub
mov
jo
mov
xor
incb
ljmp
mov
leave
mov
inc
xchg
pop
call
loop
mov
inc
and
or
sarl
push
inc
and
push
fnstcw
inc
dec
fs
divl
push
aam
jecxz
xor
add
pop
pop
sahf
cmc
xor
sti
pushf
ja
mov
dec
and
pop
lea
popa
cmpsl
add
notl
aad
in
xchg
vandpd
shr
and
outsb
mov
int3
xchg
stos
movsl
inc
add
sti
sub
dec
fwait
movsb
dec
dec
inc
xchg
mov
imul
mov
into
sbb
mov
sub
rcll
xchg
jge
push
jae
repz
mov
scas
xor
mov
add
orb
push
arpl
cltd
sbbb
jbe
cmp
xchg
notb
xchg
add
repnz
in
cmp
sub
shrl
xchg
bound
push
push
test
out
or
int
jle
mov
jb
aam
fstpl
mulb
dec
pop
or
cmp
add
lcall
insl
lret
inc
sbb
mov
sub
stos
xchg
and
lret
je
dec
fidivl
dec
sbb
rcr
repz
aas
dec
std
push
out
xchg
dec
jno
stos
and
jge
insb
fisubrl
inc
sti
icebp
add
divb
add
inc
rcl
jle
sub
inc
test
cmp
call
repnz
inc
lock
pop
inc
movsl
push
sub
cmp
push
movsl
les
sbb
sahf
daa
inc
xchg
mov
cwtl
test
cmp
std
dec
xchg
ds
sub
test
test
cltd
fdivrp
imul
lahf
lea
push
fsubl
inc
jbe
sbb
popa
fwait
mov
adc
out
xor
inc
jno
loope
addb
mov
jmp
ja
inc
loopne
mov
movsl
sub
push
rorl
arpl
sbb
ret
adc
stos
adc
jecxz
std
insb
stc
jle
pushf
mov
loopne
jmp
sahf
push
dec
xchg
mov
mov
popa
test
push
pop
cmpsl
scas
insb
loope
sti
rol
jb
jbe
iret
push
decb
sahf
mov
pop
push
lret
frstor
inc
out
test
mov
fincstp
in
inc
popa
sub
push
loope
ja
cmp
stc
inc
dec
fs
add
push
scas
add
subl
xchg
ficoms
pushf
xchg
stos
insb
jle
xchg
push
in
mov
rorl
cmpsb
test
adc
pop
mov
cmpl
repnz
sbb
sbb
sub
mov
pop
sbb
sar
bound
dec
mov
lret
jg
push
fwait
cmp
jg
aaa
inc
push
dec
fisttpll
jmp
lds
cmpsl
stos
cmc
hlt
dec
and
jmp
test
dec
xorb
es
jecxz
stos
pop
divl
test
mov
sbb
mov
cmpsb
data16
mov
int
js
cmp
stos
aad
icebp
out
bound
imul
jo
mov
or
push
mov
inc
dec
add
in
cwtl
stos
cmpsl
pop
push
call
movsb
lahf
push
outsb
mov
loope
inc
mov
jb
add
mov
imul
bound
rcll
inc
movswl
into
cmc
or
pop
xor
leave
mov
sbb
outsb
imul
pop
outsb
lret
rdpmc
mov
xor
jns
jne
add
scas
push
add
push
mov
jo
arpl
dec
stos
inc
or
test
dec
xor
nop
insl
fld
jl
lcall
push
loopne
pop
ss
jne
cmp
hlt
fistps
sub
or
xchg
push
imul
pop
fcompl
dec
iret
mov
jb
mov
dec
add
test
lea
imul
shlb
out
scas
das
lods
iret
js
test
inc
fmulp
inc
add
add
cwtl
daa
sbb
int3
out
js
jecxz
repnz
repnz
decl
adc
jmp
cmp
ljmp
call
inc
pop
cwtl
adc
xor
shr
jnp
sub
push
lods
stos
pop
sbb
test
push
sahf
ljmp
test
out
adc
xor
inc
xor
sub
sbb
add
sbb
xor
pop
pushf
mov
dec
cmp
sub
mov
pop
mov
sbb
jl
and
je
cld
jp
call
mov
cmp
repz
mov
cmp
bound
dec
lahf
mov
enter
ret
inc
movsb
cs
inc
aad
dec
insl
dec
ljmp
inc
testb
and
push
out
add
addb
dec
mov
cwtl
mov
mov
inc
sub
mov
cld
mov
stos
dec
clc
rorl
dec
jns
jp
xor
cltd
mov
jb
rcrb
repnz
and
xchg
pop
outsl
repnz
cmpsb
shll
add
fwait
test
jmp
jns
jae
into
adc
fistpll
or
movsb
std
test
jnp
ljmp
inc
test
cmp
popa
mov
mov
mov
add
adc
fisttpl
mov
mov
std
dec
mov
mov
outsb
pop
adc
mov
push
jmp
sub
pop
in
shlb
push
lods
cld
sub
lods
sbb
push
push
pop
orb
and
and
mov
sbb
mov
mov
mov
cld
in
adc
sbb
call
pop
cmp
mov
pop
or
dec
jnp
mov
cmp
shr
out
sti
fisubl
xchg
push
jno
fstpt
sub
cltd
sub
and
pandn
incb
test
push
ret
xchg
add
jge
xchg
mov
dec
push
adc
and
mov
sub
shr
imul
jp
es
rcrl
ljmp
fists
dec
sub
nop
sbb
cltd
pop
mov
jle
dec
in
je
inc
dec
test
pop
xor
sbb
nopl
ret
shlb
stos
jnp
pop
out
xor
dec
pop
fidivrl
push
cmp
pop
out
push
cmp
int3
fldl
or
push
movsb
jae
fimull
out
pop
popf
fld
nop
in
xor
adc
into
mov
cwtl
stos
roll
outsb
mov
mov
pushf
inc
pop
movsb
stos
scas
out
sub
enter
add
push
xchg
mov
les
insl
cwtl
js
pusha
es
pop
cwtl
inc
jns
add
mov
fdivs
testb
fisubrs
repnz
flds
ror
add
mov
lahf
imul
cmp
inc
or
mov
lods
daa
add
imul
pop
cmp
daa
sub
aad
sarl
hlt
push
pop
imul
jne
bound
imul
lahf
xorb
bound
xor
add
repnz
jl
jbe
aad
repnz
js
pushf
shlb
sub
mov
mov
add
pop
les
shr
std
dec
mov
cmp
sub
cmpsl
lcall
or
xchg
fdivr
and
jmp
dec
push
loop
sub
lcall
push
cmp
ss
or
js
popf
call
jp
mov
dec
out
imul
xchg
jp
int3
mov
pop
sub
pop
pop
in
xlat
xchg
xlat
sub
xchg
add
adc
test
cld
or
push
divl
jo
jmp
clc
xchg
cmpsb
cmp
in
dec
jecxz
out
fcomps
or
int
cmp
push
xchg
pop
je
int
call
data16
xchg
rcrl
les
dec
pop
xor
outsb
fstpt
fsub
out
sub
cs
mov
imul
loopne
stos
std
mov
cmp
push
lock
or
ja
rol
pop
dec
jbe
pop
fdiv
aaa
imul
jge
mov
adc
int3
pop
cmp
mov
cmp
movsb
daa
stos
daa
xor
xchg
loopne
push
ret
insb
push
xchg
outsl
ja
cmpsb
push
inc
cmpsb
pop
loopne
xchg
sti
ret
or
push
lcall
adc
popf
clc
lcall
xchg
jle
xchg
fcoml
pop
out
loope
fcoml
rsm
out
vxorpd
pop
jl
push
mov
sub
mov
int
mov
imul
fimull
xchg
iret
or
insl
mov
lahf
cltd
mov
test
fs
aad
pop
fmull
call
or
or
mov
aaa
fbstp
jge
jb
sub
enter
cmpsb
adc
adc
adc
mov
xor
leave
ss
push
aaa
loopne
fiaddl
dec
test
sub
cmp
dec
jl
notb
sbb
adc
roll
lahf
and
sti
cmpsl
loop
or
mov
fdivrl
add
fcompl
mov
mov
fisttps
pop
fisubrs
in
xor
lods
into
jle
sub
cmc
push
lods
out
inc
pusha
sub
and
xor
xchg
pop
rclb
aas
enter
adc
sub
xchg
pop
push
es
mov
pop
ja
cmp
cmp
jb
int3
les
dec
sub
or
mov
or
jmp
iretw
sub
adc
jnp
scas
insl
mov
gs
nop
add
loopne
insb
adc
and
inc
cs
int
fstpt
outsl
lods
adc
xlat
testb
pop
xchg
mov
push
sbb
push
dec
push
stos
fsub
fdiv
inc
enter
and
sarl
adc
stos
or
xchg
fistl
xor
dec
adc
repnz
imull
sub
and
and
mov
sbb
loop
dec
lods
sbb
inc
pusha
and
jbe
jle
jns
jo
or
fwait
or
hlt
push
mov
mov
mov
out
inc
lcall
loop
int
xor
push
mov
repnz
adc
in
inc
data16
clc
out
adcb
xor
decl
mov
mov
mov
mov
int
mov
pop
daa
and
in
pop
cmc
xchg
pushf
pop
je
mov
push
fdivl
cmp
jbe
icebp
pop
test
prefetch
xchg
jle
mov
xor
inc
xor
rcr
clc
mov
fisttpl
aaa
shlb
jbe
mov
cli
push
insl
test
inc
outsl
xchg
pop
jmp
push
or
sahf
adc
and
out
mov
xor
xchg
shrb
adc
sti
jg
inc
mov
orb
jmp
mov
aad
push
mov
push
test
sbb
subl
xor
faddl
ret
jge
mov
ss
cmp
pop
mov
arpl
loop
pop
cmpsl
mov
pop
and
mov
pop
sbb
aas
iret
popf
pop
sub
cmp
mov
out
loop
xchg
gs
ja
add
fdivrp
inc
fwait
pop
dec
das
pop
mov
jle
inc
mov
sub
mov
lea
out
lock
and
and
push
cmpb
dec
int
and
sahf
cltd
lods
mov
pop
int
pop
ss
pushf
xchg
out
pusha
sub
inc
add
dec
xor
out
out
xorb
mov
or
test
xor
fstp
aam
sbb
out
jns
imul
in
lock
cli
adc
call
addr16
data16
sub
out
nop
mov
sub
push
icebp
xchg
pushf
pop
stos
cmp
push
or
jp
out
or
mov
cld
in
into
jp
xor
and
fldt
in
dec
push
fnsave
stc
es
or
fstl
push
aad
inc
or
and
lret
cmp
loope
cltd
cmpsl
loop
mov
xor
add
sub
cmpl
inc
xor
and
cli
cmp
clc
bound
inc
in
out
loope
daa
out
pop
jg
pop
jnp
int3
or
pop
cwtl
jg
jp
cld
jecxz
sub
mov
cmp
add
dec
cli
sbb
pushf
push
pop
push
aad
mov
inc
imul
imul
insb
ret
cmp
call
std
mov
sbb
sbb
fwait
js
std
dec
fwait
pusha
jg
mov
xchg
aam
pop
cmpsl
pop
adc
dec
cmp
rcrl
push
repz
cmp
lock
sub
or
dec
test
add
icebp
es
inc
sub
imul
dec
cmpsl
inc
mov
jmp
out
push
sub
push
jecxz
sbb
int3
cmp
es
jl
aas
or
fnsave
ja
je
popa
inc
jno
dec
fstpl
lock
jecxz
pmuludq
xlat
xchg
xchg
add
loope
mov
xor
xchg
lcall
frstor
cmpsl
je
sbb
sub
jmp
jbe
mov
shlb
rorb
and
mov
imul
push
mov
cmpsl
repnz
ror
jnp
cmp
xchg
shll
loop
mov
add
sti
or
jmp
jle
xor
xchg
add
or
leave
sbb
daa
push
push
in
xor
sbbb
jae
push
push
push
xchg
ss
aas
mov
in
fwait
repnz
lods
jg
add
call
add
lods
mov
xchg
sub
dec
movsb
enter
lods
cwtl
ret
mov
push
in
mov
popf
int
pop
push
je
ss
jnp
add
iret
dec
das
dec
fbstp
fneni(8087
mov
xchg
sti
xor
or
test
std
out
push
test
xor
xchg
push
cwtl
jne
daa
loop
inc
rcll
jmp
movsl
outsl
das
fidivl
lret
test
int
scas
clc
mov
fdivrl
sub
mov
push
sti
fisubrl
push
lahf
fimull
nopl
cmpsb
jno
xchg
cmp
jae
jbe
into
lahf
add
test
movsl
popa
sbb
mov
aam
incl
insl
jno
popf
add
xchg
lcall
mov
xchg
mov
sub
data16
push
push
das
outsl
and
pop
icebp
mov
push
dec
xchg
mov
xchg
fistps
stos
push
adc
xchg
repnz
mov
add
fst
inc
addr16
add
and
xchg
xchg
les
outsl
and
mov
test
dec
jle
cmpsb
aam
enter
mov
fbld
dec
add
in
clc
stos
ds
sub
or
jp
mov
sub
ds
mov
frstor
arpl
vshufps
lods
cmp
and
imul
or
or
shl
sub
or
leave
dec
call
fsubrl
popf
inc
clc
les
or
adc
fs
sbb
enter
mov
mov
sub
jge
cld
xor
daa
or
out
or
xorl
mov
lods
cltd
aaa
sub
push
cmp
push
ds
fs
jne
inc
push
push
inc
test
xor
push
xor
sub
fnstsw
xchg
arpl
clc
and
scas
or
sbb
out
push
add
mov
ret
lcall
bound
iret
lods
dec
rcl
adc
rorb
mov
add
lods
and
les
add
insb
jl
lcallw
cmp
in
pop
jae
repnz
rclb
inc
and
and
stc
into
xchg
scas
cltd
sbb
and
mov
aad
aad
sarb
xchg
dec
push
cwtl
jp
call
cwtl
jl
jnp
jno
mov
nop
or
popa
iret
mov
mov
sbb
fsubs
addr16
xchg
cld
lods
mov
loop
dec
inc
cs
inc
adc
hlt
pop
pop
ret
fwait
in
add
es
mov
insb
ret
fldenv
clc
shll
js
jmp
out
in
jae
cwtl
xchg
inc
adc
jbe
or
pusha
mov
push
or
push
push
inc
push
mov
inc
or
push
dec
data16
adc
in
fisubl
mov
dec
popf
pop
fdivs
mov
test
mov
jne
and
arpl
push
insb
cld
xor
and
jmp
and
mov
push
cmpsb
into
mov
jl
insb
push
mov
mov
nop
imul
sbb
fisubrl
add
push
cmp
pop
xchg
jle
pop
or
push
ja
mov
test
icebp
cmp
push
in
icebp
mov
mov
mov
mov
sub
negb
movsb
and
sub
dec
mov
mov
xor
adc
add
loop
in
aaa
mov
inc
js
jmp
jp
inc
hlt
cltd
mov
lcall
add
jmp
mov
xor
loopne
mov
lea
rorl
mov
xchg
loop
test
lcall
sti
fld
pusha
add
movsb
sahf
mov
xchg
dec
fcomi
movsb
jns
icebp
fstps
jb
pop
dec
and
add
pop
lds
aam
loop
sub
fcoml
sbbb
sub
inc
jb
dec
xchg
jb
mov
loopne
push
sbb
test
adc
je
cltd
xor
jb
ret
mov
arpl
or
push
push
js
jb
xchg
stc
pop
and
ret
pusha
in
test
enter
das
mov
rcrb
jmp
pop
jne
mov
fildll
xchg
aam
ljmp
sub
lods
lret
push
stc
jbe
mov
push
adc
jl
push
rcrl
mov
add
movsb
call
or
sub
in
xor
mov
mov
mov
scas
stc
out
gs
cmp
aam
roll
loope
icebp
aas
adc
dec
xlat
fwait
push
test
xchg
pop
ret
aam
xchg
jbe
inc
shrd
push
add
rorb
shl
xchg
mov
xchg
pop
jbe
enter
mov
ficoms
or
aaa
sahf
rorl
or
sbb
movsb
fstl
adc
je
jne
lahf
push
scas
hlt
inc
dec
xchg
mov
jae
adc
out
mov
addl
adc
adc
or
dec
adc
repz
sub
add
jb
push
lock
leave
daa
inc
pop
adc
xchg
sti
stc
les
mov
outsb
sub
sahf
int3
ficoms
mov
shlb
insl
dec
xchg
repnz
fldenv
cmp
mov
test
mov
inc
call
and
sub
bound
jo
xchg
hlt
push
inc
jns
or
mov
dec
aas
add
movntq
sub
push
mov
inc
push
nop
or
cmp
pop
jae
or
xorl
cld
xchg
mov
cld
rcll
adc
mov
fnstcw
stos
push
mov
add
clc
cltd
out
cmpl
fidivl
shlb
negl
mov
lcall
xchg
add
adcl
loop
or
jo
pop
shl
scas
add
insl
pop
inc
inc
jno
testb
lret
rorl
sub
dec
sti
push
xchg
pop
aam
and
xor
adc
outsb
mov
and
repnz
pusha
dec
hlt
rorb
int3
pushf
sti
jmp
mov
jbe
pop
call
jo
or
mov
mov
mov
out
arpl
sub
insl
jo
jo
ret
sub
test
xchg
sar
mov
out
je
pop
xlat
mov
mov
xor
inc
inc
test
pop
xorl
ret
add
pusha
push
outsl
dec
dec
incl
stc
mov
mov
pop
pop
xchg
push
cmp
loope
dec
inc
xor
xorl
imul
stos
sbb
cmp
and
pop
mov
pop
xchg
subl
push
pop
sbb
pop
js
jp
sti
shrl
inc
decb
push
xchg
dec
loop
jg
mov
and
mov
xor
mov
rcrl
cltd
divb
out
xor
pop
nop
aas
cli
in
pop
out
out
cmpsl
inc
mov
and
scas
cmp
jne
fisttps
cmpsb
or
cmp
clc
test
xchg
stos
rcll
test
repnz
sbb
fimull
adc
add
jnp
sub
out
mov
cmpsb
mov
cmp
enter
xor
loope
push
pop
fidivrs
mov
xchg
dec
pop
popa
xchg
fidivl
mov
daa
ret
pop
mov
shlb
outsb
insl
and
cmp
jnp
ljmp
mov
gs
adc
cwtl
inc
cld
jns
xlat
mov
into
jl
mov
inc
je
and
out
mov
pushf
pop
lods
test
fs
xchg
imul
mov
rorb
in
adc
mov
stos
aas
add
pop
cmp
xchg
pop
sbb
add
or
mov
push
push
xor
xor
rorl
daa
xchg
loope
loope
add
fcmovu
mov
clc
aas
or
ficompl
scas
push
adc
inc
outsb
iret
add
cwtl
adc
adc
adc
mov
add
add
sbb
adc
or
pop
in
cmp
mov
idiv
xchg
xchg
in
je
mov
push
gs
loope
imul
xchg
and
test
mov
add
mov
cli
daa
jns
mov
inc
ret
jmp
sarb
cmp
push
push
fmull
iret
cltd
into
lods
sub
into
fsubl
das
pushf
stos
fists
sub
jmp
jle
pop
movsb
push
sub
outsb
mov
sbb
push
daa
xor
sub
leave
aas
sarb
dec
inc
xchg
dec
mov
nop
push
aad
pop
dec
es
push
adc
mov
sarb
gs
and
movsl
mov
sbbl
inc
cmc
loop
aaa
jns
bound
imul
sbb
test
and
mov
push
xor
and
push
mov
into
inc
imul
sbb
idivl
loopne
mov
jmp
cmp
scas
rorl
inc
sbb
rcll
cmp
push
lret
stc
mulb
imul
sub
mov
enter
push
cmc
out
lds
repnz
jns
mov
sahf
in
pop
aaa
dec
jge
jbe
fwait
jnp
stos
icebp
pusha
mov
jmp
aam
mov
push
in
push
mov
outsl
sbb
and
or
mov
pop
lock
pop
decb
ret
popa
leave
dec
cwtl
scas
test
adc
xchg
pop
push
jmp
push
pop
jne
and
push
fsts
and
in
in
xlat
jb
js
push
pop
stos
mov
xor
cld
xor
mov
imul
dec
mov
pushf
ljmp
dec
adc
and
insl
pusha
pop
in
xor
or
and
sbb
enter
inc
dec
mov
ret
aas
adc
xor
mov
mov
clc
scas
out
mov
cmp
push
rcrl
push
mov
mov
cli
test
shlb
pop
and
mov
or
mov
jle
int
inc
jnp
mov
jle
pop
sub
mov
mov
jae
jmp
cmp
arpl
push
add
inc
fnstsw
cmp
add
sub
xchg
sbb
shl
sarl
or
adc
scas
mov
inc
iret
shll
cwtl
fidivrs
fisubrs
jo
xchg
xor
add
adc
sahf
pusha
repnz
push
mov
aad
cmpsb
and
mov
in
loope
jp
jb
jno
addr16
arpl
stos
test
adc
or
clc
sahf
xor
mov
push
nop
dec
sbb
adc
sub
sahf
push
cmc
mov
push
fwait
iret
sub
not
sub
mov
sbb
jb
stos
push
into
push
andl
dec
push
adc
in
xchg
mov
call
stos
ror
cmpb
pop
push
jge
push
mov
jb
cmp
js
pop
mov
test
ja
stc
push
xchg
lods
roll
sbb
call
sbb
mov
lret
mov
cmpl
push
adc
fwait
icebp
ljmp
sbb
cld
xor
ljmp
jge
pop
movsl
mov
lods
mov
out
inc
jae
inc
pop
test
into
cmp
pop
lret
dec
repnz
or
push
pop
xor
push
or
add
out
pop
push
repnz
adc
pop
xor
sub
mov
and
fiadds
adc
addl
add
popa
lret
pop
in
jae
bnd
dec
inc
cld
int
js
imulb
jb
orb
ds
jns
imul
mov
xchg
xchg
cltd
cmp
jmp
fldenv
cld
ret
push
js
outsb
pop
sbb
mov
cli
xor
xor
cmp
mov
les
test
fcomi
int
fnsave
stc
into
mov
leave
jp
pop
jg
mov
ds
add
rorb
scas
sub
sbb
mov
and
adc
rsm
xor
adc
clc
xchg
cltd
mov
lds
stos
mov
jmp
fs
or
xlat
mov
test
mov
mov
notb
sbb
push
sbb
testl
xor
push
inc
out
lock
sti
mov
dec
jne
data16
push
aad
xor
lahf
sbb
pop
sbb
adc
xor
call
sub
adc
jnp
xchg
mov
stos
mov
add
mov
loope
test
inc
add
sub
cmp
cltd
jbe
mov
push
ja
in
pop
or
jnp
adc
movsl
imul
out
outsb
mov
aam
pushf
push
cmpsb
pop
int3
je
adc
insb
std
roll
or
add
adc
mov
cmc
jmp
add
sub
lret
pop
cmp
ss
cmpsb
push
xor
adcb
repz
in
adc
les
and
mov
mov
shll
xchg
fs
xor
lods
lahf
push
mov
ficomps
add
pop
stos
push
aaa
dec
js
dec
in
std
shl
les
out
push
cmp
int
jg
rorl
jne
push
out
jns
sbb
out
imul
scas
fs
push
add
jno
adc
and
jbe
add
xchg
or
test
push
inc
std
jno
test
scas
mov
add
xor
dec
jo
in
pop
or
and
rclb
movsb
ljmp
stos
sarb
pop
popf
push
hlt
je
xchg
add
xor
roll
lock
iret
mov
negl
mov
and
gs
jp
and
pushl
xchg
jbe
hlt
popa
dec
call
xor
idiv
sub
pop
popa
pop
ljmp
out
aam
stc
pop
inc
cld
sbb
jg
popa
push
aad
lock
sbb
jns
or
sbbl
cmpsb
mov
daa
sub
test
outsb
xchg
jnp
push
push
xlat
jge
je
rcr
mov
xor
or
sbb
pop
mov
cwtl
ja
das
xchg
imul
mov
test
loopne
xor
xchg
pop
cltd
mov
add
xchg
lret
cmpsb
scas
std
bnd
inc
mov
ret
cli
xchg
push
mov
hlt
dec
pop
hlt
mov
rclb
call
sub
scas
xor
jbe
push
call
add
push
cmp
sbbl
push
stos
pushf
movsl
mov
sub
mov
dec
add
xor
test
out
xchg
inc
test
aaa
das
or
lret
xor
pop
pop
ret
daa
pop
dec
rcrl
adc
push
insb
cmpsl
jecxz
xor
push
add
adc
dec
sub
ja
lcall
je
addr16
hlt
cmpl
movsl
test
iret
clc
sub
dec
sbb
mull
dec
out
and
ljmp
sub
xor
shlb
sti
pushf
push
jmp
adc
std
aad
and
fiadds
pop
pop
mov
loope
mov
adc
pusha
mov
mov
fs
mov
mov
jbe
clc
xorl
add
outsb
test
add
movsl
or
mov
es
mov
dec
push
clc
pop
lcall
mov
addr16
ljmp
dec
mov
jg
je
hlt
push
mov
xor
jno
es
out
cwtl
outsb
movsl
mov
loopne
lret
mov
sub
aas
rcrb
sahf
adc
int
jbe
imul
pop
push
and
cwtl
sbb
xor
push
mov
insb
in
pop
icebp
xor
clc
sahf
int3
cmp
mov
stos
emms
daa
mov
push
pop
sbb
and
mov
fisubs
fucom
aam
sbb
out
ds
rcr
xchg
hlt
sub
dec
lcall
ret
subb
jne
inc
xchg
cmc
xor
push
cmp
and
fs
fmull
pop
in
push
sahf
lds
scas
mov
or
sahf
pop
neg
aas
xchg
in
inc
push
dec
pop
addr16
repnz
loope
push
ret
pop
xor
movsb
jg
popa
rcrl
sbb
aam
mov
cld
and
sub
and
gs
pop
stos
mov
pop
lret
jb
sarl
into
xor
mov
ret
cli
aam
cmc
movl
inc
imul
xchg
mov
sbbl
dec
rorl
out
and
mov
pop
mov
fwait
imull
mov
xchg
mov
cmc
hlt
aam
hlt
adc
dec
inc
mov
rcrb
pop
mov
je
adc
or
fcmovnu
ss
jmp
jmp
insl
mov
lea
cmp
sub
pop
xchg
cmp
inc
fwait
rorl
mov
leave
dec
jle
shll
or
mov
mov
push
divl
dec
sbb
mov
data16
imul
fimuls
cli
leave
sub
loopne
or
mov
jp
xor
adc
addl
out
fsubs
xor
xchg
fimuls
ficompl
stos
and
ss
add
int3
leave
and
test
inc
mov
pop
clc
loop
mov
outsl
hlt
mov
ljmp
call
xchg
cmpsb
mov
xor
dec
imul
arpl
rorb
rcrb
gs
inc
pop
jb
adc
and
and
lret
sbb
jbe
xchg
push
cmp
add
add
mov
mov
sbb
ss
ret
xchg
mov
fwait
push
push
mov
and
fwait
xchg
cmp
fimuls
xchg
push
cld
sbb
fnstenv
addl
and
sub
scas
sub
add
pop
imul
mov
mov
mov
mov
subl
out
and
pop
dec
jno
iret
in
mov
cld
outsb
pop
mov
sub
push
push
test
mov
jg
shlb
pop
pop
lds
xor
xor
shrl
adc
scas
sub
xchg
inc
shr
xor
aaa
inc
or
scas
adc
in
inc
js,pn
fadds
cli
pop
mov
and
or
xchg
jl
dec
dec
loope
inc
cwtl
sub
movsb
mov
cmp
lret
enter
mov
pop
or
or
repnz
pop
test
gs
addr16
jp
sbb
mov
movsb
push
sbb
dec
cmp
imul
and
mov
push
hlt
imull
xchg
rcr
in
movsb
jno
lret
cltd
and
cltd
adc
fs
lods
or
dec
loope
nop
scas
sbb
and
push
adcl
sarl
or
les
mov
dec
mov
push
adc
sarb
cmpsl
sub
mov
push
je
movsb
shlb
mov
stos
arpl
push
adc
lock
es
sub
popa
lret
push
mov
xchg
gs
cmp
test
pop
lret
pop
cwtl
dec
out
int3
add
pop
jne
aam
aam
mulb
stos
out
lahf
xchg
adc
sub
cmp
adc
loop
icebp
dec
sub
sub
rolb
mov
adc
rclb
iret
aam
or
fildll
loop
adc
iret
mov
in
xchg
mov
push
or
sub
loopne
cld
faddp
pop
ret
lock
or
dec
in
add
test
rclb
aam
movl
and
xchg
fisubrl
lds
sbb
dec
jnp
adc
push
sbb
dec
int
in
and
stos
enter
mov
add
jns
cmp
addl
pop
and
ljmp
idivl
popf
ljmp
sarl
jbe
or
mov
cmp
dec
sbbb
add
or
ficomps
cmpsl
movsl
pop
jmp
bound
out
out
push
popa
sbb
dec
mov
into
mov
mov
mov
cmp
cwtl
in
cmpsb
lods
xchg
cmp
adc
mov
or
repz
push
loopne
jno
cmp
or
dec
mov
xchg
cltd
jmp
jns
and
into
dec
ja
sbb
test
popf
inc
stos
add
ss
mov
and
sbb
pop
outsb
lods
pop
stc
jns
add
mov
out
xchg
pusha
or
and
cld
pushf
mov
jmp
mov
stos
cmp
inc
aad
popf
stos
mov
mov
cli
and
push
xor
loopne
call
mov
pusha
inc
push
gs
popa
sbb
rorb
scas
cld
in
cmp
sahf
cld
add
stos
xor
mov
stos
mov
sbb
icebp
aaa
dec
es
inc
xor
mov
into
push
and
fs
mov
sub
pop
sub
jbe
in
push
in
or
gs
mov
inc
xchg
mov
fidivrs
mov
lahf
das
ret
xchg
push
aas
cmpsl
lea
mov
mov
das
shr
mov
setg
pop
mov
push
mov
push
cmp
mov
or
mov
cmpsb
fadds
ds
addb
fildll
inc
dec
add
std
outsb
ds
jmp
add
xor
push
xor
test
je
sbb
xor
sub
orl
mov
fcoml
call
pop
add
pushf
test
imul
imul
jb
push
in
xor
leave
jno
cmp
jg
jmp
or
movsb
sub
ret
xchg
dec
xor
mov
bound
push
sbb
test
xor
dec
cltd
dec
addr16
adc
stc
sti
lock
jp
std
in
cmpsl
test
das
sub
cld
imul
mov
mov
lcall
daa
xor
cltd
loop
gs
jb
xchg
add
test
divl
add
mov
stos
cs
es
decl
call
cltd
shll
adc
imulb
fdivrs
push
cmovns
orb
rorb
sahf
mov
test
mov
mov
loopne
and
scas
pop
sub
aam
and
cmc
mov
inc
inc
divl
push
clc
pop
lret
enter
lds
jl
int
and
jle
dec
pop
enter
add
ret
ljmp
fidivl
xor
ret
ljmp
das
fdivrp
cmp
aas
rcll
sub
mov
in
fcomip
pusha
fisttpll
out
cmp
and
push
cmp
outsb
loope
hlt
dec
push
inc
mov
dec
icebp
fidivrs
orl
popf
cmc
lea
pop
dec
push
sbb
daa
lock
stos
push
test
test
or
test
daa
idivb
repnz
dec
cli
cmp
aad
inc
test
jb
and
ljmp
fwait
adcl
lcall
pop
ja
aas
push
push
fists
or
push
ljmp
scas
push
pusha
mov
mov
sub
movsb
ljmp
push
in
xchg
cmp
push
scas
xchg
sti
jecxz
or
rorb
sub
stos
jl
cmpsb
mov
cli
icebp
sbb
cwtl
adc
cmp
inc
into
mov
ss
cld
test
or
push
data16
push
mov
jg
into
xor
loop
add
repnz
std
aas
stc
aas
sbb
out
mov
xchg
daa
loope
pop
fwait
push
js
aaa
adc
or
xchg
mov
gs
sbb
adc
adcl
stos
jae
aam
fiaddl
lahf
out
inc
and
dec
jecxz
and
sub
imul
cmp
xor
insl
cmp
sub
pop
mov
mov
mov
sub
das
shr
dec
leave
xor
jmp
push
lea
int3
lds
lds
dec
rcrl
push
jo
loopne
sub
es
inc
sbb
into
mov
fwait
xchg
pop
mov
outsl
ret
xorl
adc
rcrl
xlat
adc
fsubrl
cmp
pop
push
mov
scas
repnz
ret
iret
mov
adc
arpl
ss
sub
leave
push
xchg
test
mov
dec
mov
mov
push
inc
cli
fs
add
mov
shlb
pop
cmpsl
xchg
lahf
add
sbb
cmp
or
inc
inc
mov
mov
lods
or
inc
pushf
andb
xchg
jl
lcall
fnstenv
pushf
mov
jne
sbb
xor
hlt
pusha
das
js
int
mov
lret
lds
lds
jns
lcall
add
mov
push
inc
outsl
mov
cmp
push
in
pop
aam
lods
or
push
jne
outsb
test
mov
shrb
cli
stos
popf
cld
push
loope
pop
and
mov
adc
pop
xor
pop
test
mov
dec
and
pop
cmp
jmp
fcmovnb
sub
bound
scas
sub
adc
add
jecxz
jo
xorl
jge
mov
mov
sbb
iret
insb
rcll
lret
scas
clc
adc
or
adc
jne
subb
adc
das
mov
leave
stc
and
or
push
in
push
addr16
or
fs
add
nop
mov
jo
adc
ljmp
dec
out
jnp
ficompl
xchg
daa
into
rorb
push
jne
mov
aad
lea
int
ss
push
test
xor
or
sbb
xchg
mov
mov
int
jno
xlat
inc
add
popf
shrl
shll
mov
sbb
add
xchg
in
rorl
ja
jno
jl
fildll
inc
add
lret
mov
xor
jg
popf
arpl
push
in
lcall
into
mov
dec
and
lea
pop
cmp
sub
sbb
jne
je
psllw
out
xor
mov
insb
mov
insb
rorl
cmpsl
mov
cmpsb
push
filds
in
xchg
or
mov
test
dec
movsb
sub
and
daa
out
mov
ja
mov
dec
add
adc
cmp
inc
movsl
or
sub
mov
aaa
je
lret
xor
dec
xchg
repz
sarl
hlt
arpl
xorb
stos
mov
in
aad
imulb
inc
dec
js
jb
pop
adcl
cld
dec
xlat
lock
test
fildll
rcrb
pop
inc
xor
mov
call
scas
loope
mov
fwait
in
or
in
xor
and
aaa
hlt
push
loope
aad
mov
adc
mov
icebp
and
leave
cmp
cmpsl
adc
mov
jp
aas
pop
ret
mov
adc
mov
mov
xchg
mov
jl
and
push
jp
addr16
mov
data16
mov
push
imul
stos
xor
inc
sbb
add
out
jecxz
xchg
lods
lods
inc
push
pop
fs
fcoml
sti
rol
sub
pop
pop
sub
sbb
xchg
orl
ljmp
test
fildl
imul
and
sbb
addb
sub
aas
and
rcrl
adc
sbb
cmp
xchg
mov
inc
jo
mov
je
int3
fsubl
mov
xchg
ret
sahf
call
xchg
and
pop
and
into
sbb
cmp
ds
add
loope
in
push
ljmp
adcb
nop
xor
aaa
cmpsl
pop
inc
pusha
push
das
adc
loop
lea
and
mov
mov
clc
mov
sub
notb
out
lahf
jb
add
cmp
add
insb
sbb
mov
outsl
jle
mov
push
adc
call
cmpsl
pop
adc
out
push
rol
dec
mov
adc
sahf
mov
mov
push
push
inc
sbb
dec
faddl
outsb
cmp
fsubr
xchg
xor
jns
jnp
arpl
les
cmp
sub
inc
push
pop
icebp
xchg
stc
xchg
mov
sbb
in
fcomi
or
sub
pop
aad
arpl
xor
xor
mov
jle
faddp
fsub
push
cmpsb
lds
jbe
adc
push
outsb
lret
mov
in
mov
push
mov
lods
je
mov
and
push
js
ret
xchg
push
add
cmpb
mov
or
nop
inc
lret
and
inc
jp
ss
jl
ljmp
mov
test
sub
pusha
mov
testb
ljmp
pop
xlat
add
insb
aaa
addr16
jb
jne
fisttps
enter
pop
mov
dec
mov
mov
jo
std
sbb
ja
cmp
xor
imul
jb
nop
stos
push
fisttps
xor
sbb
mov
mov
lret
jecxz
cmp
jnp
push
or
jne
movsl
pusha
testl
xor
notb
das
sahf
outsb
stc
jle
shrl
es
ret
jge
fmul
pop
test
inc
insl
test
aas
ds
mov
inc
in
sub
adc
and
push
aas
hlt
xchg
pusha
xor
dec
mov
outsl
es
mov
or
fdivrs
lock
add
cmp
pusha
bound
jmp
push
push
sbbb
push
cmp
fcmovnb
cmp
loopne
mov
in
dec
mov
mov
sahf
rclb
pushf
sub
mov
push
pop
lahf
lahf
rcrb
mov
xor
iret
xchg
adc
out
mov
imul
aas
ret
enter
out
rcl
popf
adc
pop
mov
mov
fldcw
js
cmp
add
mov
or
mov
popa
jo
mov
ror
enter
inc
adc
and
sbb
scas
out
stos
popl
fisttpl
sahf
xor
xor
fidivrl
jnp
jecxz
sub
and
in
aam
repz
hlt
loopne
lret
outsb
jb
push
test
cltd
push
ja
hlt
addr16
pop
sub
lea
push
add
push
jle
mov
push
xlat
fiaddl
xchg
adc
and
shrb
pop
adc
out
pop
loop
xor
or
inc
mulb
pop
mov
xor
fldl
ljmp
js
cmc
add
and
adc
mov
jl
sub
dec
lret
jle
movups
sub
es
fs
sbb
pop
mov
adc
and
push
dec
adc
mov
pushf
and
repz
add
inc
mov
mov
decb
ret
bound
push
or
jnp
mov
mov
mov
pop
cli
mov
jns
dec
add
sub
add
or
add
lea
push
mov
mov
mov
push
push
out
add
jmp
adc
vpavgb
mov
pop
xchg
xchg
or
cmp
ja
enter
notl
push
lret
scas
or
fmul
lret
shll
ja
jmp
ljmp
popa
or
ret
pop
loopne
cmc
fcompp
push
push
xlat
and
fsubr
jbe
arpl
ss
or
mov
cli
xchg
xchg
ds
pop
repnz
inc
addr16
daa
xchg
jge
add
out
add
and
daa
push
shl
pop
insb
sbb
testl
out
int3
lahf
lods
mov
adc
pop
test
lret
out
cmc
sub
pop
shll
jg
jmp
cmpsb
mov
loopne
jmp
aaa
daa
pop
test
into
mov
iret
jns
mov
mov
fisttpl
lret
int
pop
rcll
adc
mov
adc
xor
cmpsb
inc
mov
arpl
icebp
inc
mov
pop
adc
pop
fwait
xor
into
xlat
or
cmpsb
stos
lea
aas
aad
or
xor
addr16
out
test
and
js
test
sub
aam
inc
das
repz
imul
frstor
rcrl
int
pusha
push
fstl
lahf
pusha
mov
jne
xlat
fucomip
and
xor
leave
int3
in
aas
xchg
fwait
adc
in
adc
push
push
push
ss
mov
cmp
push
out
inc
mulb
xor
push
sbb
lea
sub
push
dec
mov
mov
mov
cmpsb
out
pop
mov
mov
popf
sbb
add
gs
cmc
push
jae
mull
call
mov
sahf
idivb
popa
icebp
pop
ret
je
lods
sub
ret
xor
or
cld
dec
loop
push
sub
cmp
loope
mov
xchg
jp
and
add
pop
dec
lret
incl
je
cmp
push
add
adc
es
icebp
mov
mov
add
or
loopne
loopne
lock
addr16
shrl
ss
xor
lds
cld
filds
cmpsb
push
sbb
jo
sbb
adc
jae
cwtl
and
test
rcr
clc
lcall
adc
xor
xor
shl
fadd
popa
lcall
mov
mov
or
push
sub
outsb
or
popa
rcrb
adc
jecxz
test
cmp
mov
data16
xchg
push
in
or
push
lret
pop
aad
push
jnp
outsb
sbb
fs
mov
pusha
cli
push
mov
cmp
mov
ss
mov
in
imul
mov
dec
add
jno
push
jbe
push
int
sbb
int
sbb
xchg
pop
test
xor
stos
xchg
lret
incb
and
xchg
stos
enter
std
mov
cli
or
inc
data16
mov
pushl
xchg
addb
cmpsb
cli
sub
xchg
mov
jg
mov
sub
xchg
shrl
out
cmp
sub
in
mov
movsl
pop
out
shlb
das
clc
push
lea
mov
pop
inc
cwtl
push
pop
gs
add
insl
jo
and
sub
hlt
dec
movl
test
insl
stos
fimuls
push
mov
xor
jp
js
xor
mov
sahf
es
out
leave
out
insb
sub
sbb
fnstenv
or
xchg
adc
scas
stc
xchg
in
mov
jnp
pop
jo,pn
mov
sarb
dec
mov
cmp
or
sti
xchg
lret
into
addr16
lcall
sbb
mov
pushf
mov
loope
inc
in
mov
repz
add
dec
leave
sub
dec
push
adc
ljmp
je
sti
mov
ljmp
mov
and
xor
scas
inc
add
pop
push
dec
pop
sarb
icebp
fwait
sub
out
dec
daa
jo
fistpl
adc
xor
inc
fidivrs
rclb
nop
pop
and
test
mov
aad
cmpsl
shlb
cwtl
out
push
mov
cli
lea
xchg
xchg
daa
jne
bound
add
sub
mov
or
push
mov
sub
ljmp
push
dec
lahf
lret
addr16
movsb
adc
stos
lret
je
sahf
adc
mov
call
push
loope
fistpl
xor
adc
mov
adc
test
stos
cltd
cltd
pushf
inc
cmpsb
jns
dec
loope
pop
lcall
mov
add
mov
pusha
xor
xor
xor
cmp
stc
cltd
test
xor
mov
pushf
lock
imul
xor
gs
in
adc
jmp
in
daa
test
fnsave
add
cltd
lcall
dec
or
test
enter
pop
mov
movsl
out
mov
repz
inc
sub
outsb
out
jg
addr16
outsl
movsb
or
cmp
sar
jns
or
insb
rep
out
jge
ftst
sahf
in
dec
out
mov
jnp
std
xchg
fnstenv
dec
ljmp
xchg
and
cwtl
add
inc
xchg
addb
push
xchg
or
fwait
mov
icebp
outsb
jb
std
rorl
xor
test
fdivl
or
add
push
mov
mov
dec
sbb
adc
jno
mov
push
scas
inc
iret
xchg
shll
lock
movsb
push
cld
das
test
add
sbb
jns
mov
pop
cld
pop
dec
xor
add
clc
addb
xorl
outsb
sbb
xchg
jno
add
andl
xchg
xor
xchg
xchg
pop
out
call
movsb
xchg
mov
and
repnz
mov
jae
int3
vandps
add
mov
cwtl
mov
outsb
das
int3
jbe
mov
test
mov
test
lcall
cmp
subl
pop
sub
pop
scas
in
aas
and
xchg
lret
lods
loopne
dec
insb
mov
adc
leave
aad
push
icebp
test
movsl
mov
pop
loope
mov
iret
xchg
adc
mov
arpl
jecxz
repnz
rolb
scas
movb
test
js
gs
or
xor
add
aam
jae
adc
mov
push
mov
lcall
loop
inc
jg
mov
cmp
lcall
ftst
push
push
hlt
add
adc
in
nop
cld
xlat
sbb
and
scas
gs
mov
imul
mov
and
les
pop
pop
pop
sub
ret
arpl
ss
push
repnz
fcmovnu
jg
call
cmp
mov
int3
adc
lret
repnz
xchg
mov
and
jo
mov
push
div
adc
xchg
mov
xlat
loopne
mov
cmp
scas
and
and
in
lcall
xchg
xor
rcrl
push
loop
mov
jbe
jns
mov
xchg
out
mov
andb
lock
bound
jl
aam
negb
sarl
aas
jecxz
mov
into
leave
sbb
dec
cmp
adc
pop
inc
mov
mov
fldt
inc
jp
xchg
inc
mov
repz
mov
imul
mov
enter
or
daa
shll
push
push
jl
rcrl
xchg
dec
sbbl
aas
out
or
negb
sbb
shll
adc
test
jne
in
dec
add
iret
mov
dec
pop
popa
cwtl
hlt
xor
es
iret
sub
pop
fsubl
lahf
sbb
bswap
lret
lret
or
rcll
sbb
and
test
int
xorb
sahf
mov
jmp
jecxz
in
lock
test
jns
sub
in
ljmp
fisttpll
loopne
fwait
mov
fsts
lock
repz
leave
xchg
loop
mov
in
dec
sbb
cmp
xchg
je
aaa
jbe
add
sub
xor
cltd
ret
adc
loop
jle
dec
call
and
dec
jmpw
out
roll
jnp
pop
jge
xchg
bound
decb
das
jmp
btr
inc
mov
xor
aad
dec
push
scas
dec
xor
push
sub
in
pop
pop
xchg
lret
fnstenv
ret
or
jge
sub
les
push
inc
bound
out
xor
mov
shlb
cmp
mov
dec
add
add
xchg
cltd
xor
insb
ret
adc
movsw
sub
add
push
jbe
mov
out
add
cmp
pop
fisttpll
push
add
movsb
mov
subl
mov
out
leave
and
push
cmp
push
sar
add
cmc
out
push
sub
insl
jne
adc
cmp
or
xor
push
lret
mov
aas
mov
insl
lea
adc
stos
fmulp
pop
ja
or
js
mov
dec
das
sbb
cmp
ret
add
xchg
popf
ret
mov
mov
pop
mov
cmpsl
std
cwtl
test
pushl
mov
pop
test
popf
push
mov
lock
push
mov
pop
mov
pop
push
and
add
nop
pop
loopew
out
clc
fcmovu
movsb
out
iret
rolb
dec
xchg
lret
stc
test
and
test
je
add
xchg
rolb
mov
jb
loop
push
inc
cmpsl
cmpl
repz
jge
cltd
pop
inc
lock
mov
cmpsl
stos
popa
adc
sbb
dec
add
mov
mov
push
sbb
and
test
bound
pop
fnstcw
and
int3
jns
push
insl
xchg
cmp
divl
loopne
xlat
jl
js
inc
int3
cmp
icebp
and
cs
rep
mov
sbb
jl
cmp
mov
jb
jo
sub
and
cmpl
pop
movsl
outsb
push
cli
loop
jno
jns
hlt
jp
sub
push
push
ljmp
sub
lds
dec
mov
mov
adc
std
or
inc
in
lret
pop
insb
mov
inc
inc
cli
adc
dec
imull
mov
pop
ret
out
cmp
fmul
xor
xorl
ljmp
ds
mov
cmp
xchg
jmp
cwtl
into
jb
sub
adc
dec
lret
pop
imul
pop
fcomps
mov
mov
or
leave
mov
lret
cld
fstpl
jle
xor
dec
push
push
test
pop
out
leave
mov
push
jle
mov
mov
dec
lock
jmp
sbb
mov
push
mov
in
lea
fdivrl
mov
xor
leave
in
sub
notb
xor
popf
xor
mov
fadd
jnp
cmpl
lret
sbb
mov
mov
inc
arpl
out
xchg
adc
cmpb
addr16
in
popf
or
add
pop
cmp
pop
and
cmp
mov
xor
dec
idivb
xchg
jno
xchg
dec
dec
lret
or
insl
adc
mov
ljmp
cli
sti
xchg
ljmp
pushf
sti
popa
mov
mov
or
xor
lahf
sub
cmpsb
dec
pop
fildll
or
xlat
cmp
in
pop
ja
jmp
mov
pop
lret
mov
mov
adc
mov
pop
aas
or
rol
sbb
mov
dec
test
inc
xor
jl
sbb
cmp
jb
or
test
mov
in
pop
ret
push
add
pop
push
xchg
sbb
insl
sbb
cli
pop
dec
cli
adc
push
aam
sbb
jg
mov
sub
repz
jg
in
or
jg
adc
pusha
mov
dec
push
cmc
or
cwtl
fs
mov
test
mov
pop
int3
les
lcall
movsb
mov
and
mov
popa
iret
mov
mov
lcall
fnsave
test
fists
popa
movsl
push
adc
in
lods
adc
test
or
orl
call
faddl
mov
arpl
cld
sub
pop
nop
in
repz
cmc
lea
add
jmp
add
mov
stc
jns
not
mov
pop
stc
ror
ds
pop
or
xor
pop
je
in
add
je
insb
and
add
in
sub
aas
insl
lds
in
test
aad
inc
mov
xchg
loop
das
inc
cmpsl
ja
vpsrlw
mov
cmc
test
rcl
xor
ljmp
out
dec
jo
fmull
movsb
and
int3
or
xchg
dec
dec
in
je
sbb
pusha
dec
fld
xor
push
add
fsubl
vpsubusb
sub
sbb
std
mov
jne
push
add
sbb
xor
inc
adc
push
jb
pusha
insl
mov
jp
fldcw
hlt
mov
pop
fmulp
sahf
jle
pop
fcmovbe
pop
pop
dec
data16
test
dec
jmp
xchg
add
and
lahf
daa
les
in
pop
popf
rcll
into
push
shll
cmp
out
jge
addr16
sub
mov
loop
jns
cld
xchg
adc
data16
xchg
sar
add
insb
data16
jmp
jno
cmpsb
push
push
stos
mov
sub
jmp
lcall
les
xchg
pop
das
jecxz
test
in
mov
xchg
hlt
std
ficompl
add
mov
ljmp
push
pop
or
dec
fisubrs
fistps
data16
add
mov
jnp
clc
repnz
adcb
and
hlt
aad
pop
and
dec
cmp
into
and
mov
dec
sub
sbb
or
cmp
mov
popa
rorl
fs
xchg
mov
shrl
scas
xchg
and
dec
xor
mov
xor
pop
rclb
js
add
and
add
in
daa
cltd
cmp
adc
in
cmp
stc
mov
push
daa
shll
xor
cs
mov
sbb
adc
adcb
xchg
js
adc
lods
and
mov
inc
jo
push
xchg
or
sub
rcl
arpl
jle
je
cmp
xlat
imul
pop
cmp
es
shld
add
insb
adc
lret
jecxz
lods
pop
scas
sbb
push
jne
ss
test
addr16
xchg
fiadds
push
cmp
pop
pop
jae
inc
lcall
push
xchg
mov
push
dec
imulb
fcoml
pop
mov
add
aas
shlb
out
movsl
loope
repz
mov
pop
fldcw
xchg
mul
fcomps
mov
dec
test
lret
call
imul
xchg
sar
xor
and
shrl
loopne
jbe
xor
or
pop
inc
in
cltd
mov
repnz
sub
test
xor
mov
add
imul
add
xchg
sahf
sub
in
shrl
push
hlt
mov
sub
jbe
push
push
mov
loope
jle
adc
ret
push
movsl
bound
sbb
fldl
cmp
in
imul
mov
mov
pop
sub
xchg
fdivrl
xor
sbb
movsb
dec
out
xchg
inc
loopne
pop
inc
adcb
add
lods
pop
dec
stos
cmp
das
mov
shlb
mov
sti
out
inc
add
pop
mov
sbb
stc
xor
mov
in
adc
aam
ja
mov
push
and
lahf
into
insl
ret
rol
push
pop
dec
lret
mov
or
dec
inc
out
aaa
xor
xor
out
mov
push
stos
inc
aad
loop
das
imul
data16
or
jp
test
jbe,pn
pop
pop
and
mov
imul
jb
stos
push
fdivrs
fiadds
sbb
inc
incb
icebp
repnz
pop
cltd
sub
daa
xor
int
inc
pop
or
lods
pop
add
icebp
mov
mov
sbb
ss
aaa
adc
xor
in
lock
lcall
mov
subl
mov
cmp
and
mov
stos
pop
cmp
push
inc
cmp
push
fildl
cli
xchg
fidivs
ja
repnz
repnz
out
cmp
stos
fsubl
les
repnz
xor
xchg
or
add
pop
ja
inc
push
inc
hlt
call
xchg
ljmp
sub
ret
sbb
repz
jnp
in
or
and
jp
pusha
mov
test
cmpsl
mov
out
mov
mov
std
jl
inc
mov
sub
or
sub
inc
scas
ret
outsl
cmpb
inc
inc
push
and
jo
fistps
pop
sti
mov
jnp
icebp
push
push
lahf
nop
ljmp
inc
inc
arpl
lods
ret
add
nop
add
mov
add
out
mov
scas
add
popa
and
in
rclb
sbb
dec
push
cmp
sbb
pusha
add
dec
jge
bound
inc
mov
mov
test
pop
fstp
iret
inc
pop
jb
lea
adc
testb
add
xor
inc
movsb
cltd
stc
pop
inc
stc
aaa
xchg
pusha
fcmovne
enter
aam
ljmp
outsb
incl
lock
cmpl
adc
sbb
sbb
xchg
xchg
cli
push
mov
ror
and
xor
jg
dec
sub
lock
ret
aaa
mov
bound
pop
and
and
adc
mov
sbb
cmp
mov
stc
arpl
ret
std
add
push
push
mov
add
add
and
sbb
sub
call
dec
popa
fistl
mov
jno
adc
sub
imul
jle
filds
lods
mov
adc
lahf
jns
out
mov
inc
pop
gs
ret
push
or
pop
int
inc
faddl
or
add
out
mov
lock
call
lea
in
jmp
imul
icebp
and
jp
icebp
pop
pop
sbb
cmp
in
or
push
lret
mov
sbb
adc
mov
mov
add
mov
into
mov
call
dec
inc
scas
out
mov
mov
adcb
cs
arpl
sti
movsb
push
jae
repz
mov
fldcw
adc
ljmp
lret
dec
cmpsb
ljmp
pop
jne
adc
add
pop
iret
adc
test
pop
pop
imul
or
or
inc
push
ja
mov
and
or
sub
dec
and
pop
clc
dec
and
push
cmp
je
cmpsb
xchg
dec
jne
mov
mov
and
movsb
cmpsl
sti
lods
sub
xor
sarl
imul
fsubrl
icebp
cmp
mov
xor
popa
jns
cs
mov
push
insl
loope
push
xor
xorb
cmpsb
dec
mov
mov
pop
cmp
fsubrs
ja
add
mov
add
fs
xor
ds
js
push
xchg
lods
testb
mov
and
in
fnstsw
cmc
aam
jge
pop
adc
loopne
popa
ret
cmp
inc
sbb
dec
loop
popf
sub
cli
lock
add
scas
mov
xlat
mov
call
rclb
jmp
gs
xor
insb
lods
and
xchg
std
test
arpl
and
movsb
jl
daa
cld
mov
je
sub
mov
adc
xchg
jmp
push
jge
popa
sub
inc
lret
cmp
pushf
push
outsb
sahf
inc
insl
push
sub
repnz
adc
push
fmull
push
pusha
mov
pop
pop
pop
cmp
repnz
push
mov
mov
pop
fdivr
dec
inc
xchg
lods
cmc
sbb
imul
ffree
stos
scas
insb
leave
dec
repz
cmp
xor
inc
test
sbb
rorl
fiadds
sub
test
idivb
popa
inc
and
mov
sar
outsl
testl
in
mov
gs
xor
mov
and
outsb
jle
clc
mov
andb
test
xchg
lods
jnp
pop
mov
bound
dec
pop
push
jge
push
jae
lock
dec
jbe
pop
adc
ret
mov
call
frstor
test
and
jo
or
scas
pushf
and
gs
xchg
int3
inc
sub
xor
loopne
sbb
cmp
jle
push
in
mov
icebp
in
test
lea
into
test
xor
sbb
cmpb
jmp
pusha
in
or
xchg
shll
pop
sti
and
movb
jo
cmp
sub
rcrb
in
mov
stos
sub
mov
sub
xor
pop
mov
jns
cld
inc
mov
js
inc
xchg
jo
loop
mov
fcmovnu
adc
cmc
adc
mov
mov
aaa
iret
push
adc
cltd
mov
add
sub
hlt
pop
push
je
jle
mov
rcll
jp
xchg
rolb
mov
les
xor
cli
stos
jmp
fisubs
pop
jbe
mov
dec
mov
clc
out
and
pop
stc
xchg
jae
sub
xchg
testb
dec
and
push
cmp
jg
xchg
sub
lret
inc
fld
scas
xchg
fdivs
jl
nop
cmpsl
aaa
enter
push
cmp
sti
and
movsb
stos
and
cld
ja
inc
loope
push
jl
add
rcrb
ljmp
jecxz
xlat
push
mov
sbb
out
mov
lea
and
int3
mov
insl
fstps
or
cltd
ror
fst
fdivs
shll
sbb
repnz
lds
pusha
pop
fst
test
ljmp
mov
xlat
push
fwait
pop
icebp
pop
mov
repnz
or
test
inc
pop
pop
adc
neg
clc
pop
mov
insl
or
adc
test
mov
pop
xor
pop
fs
ljmp
sti
mov
xchg
jae
dec
jmp
pusha
xchg
jo
js
sbb
mov
xchg
cmc
lret
cwtl
repnz
xor
out
adc
cmpsl
jo
jnp
xchg
and
cmc
je
and
fiadds
hlt
hlt
sbb
idivl
fcompl
shl
sub
inc
pop
pop
ja
dec
dec
movsb
add
popf
and
aam
lcall
cmp
data16
leave
pushf
je
cli
aad
hlt
lahf
sbb
fs
or
adc
cld
cmc
jae
mov
pop
andl
sbb
xor
popa
dec
in
out
mov
push
hlt
dec
cmp
mov
xchg
rcrl
push
mov
lret
mov
jle
adc
xchg
lods
inc
jecxz
std
out
push
lea
mov
push
mov
or
pop
sbb
rcrb
mov
cmc
hlt
jl
loope
fists
es
bound
je
sub
add
test
insl
ror
xchg
adc
jmp
jg
xor
std
jbe
mov
test
shlb
fcomp
hlt
mov
cmp
push
xchg
jno
xor
gs
and
loope
mov
mov
dec
xchg
xchg
xchg
test
es
stos
xchg
jg
pop
dec
mov
pop
mov
mov
subb
testl
aas
dec
push
fld1
mov
iret
adc
or
xchg
movsb
inc
push
je
sbb
mov
hlt
mov
mov
inc
loope
addr16
cmc
cmc
push
adc
dec
sub
mov
adc
and
lea
jbe
and
lret
push
stc
rolb
les
adc
fisubl
fsubs
loop
xchg
xlat
repz
scas
dec
cld
or
shll
call
fisubl
jo
in
gs
cmp
repnz
pop
out
jnp
setle
int3
imulb
cmpsb
sbb
mov
imul
mov
ja
xor
or
xchg
stos
sbb
adc
xor
mov
test
pop
loop
out
aam
sub
addb
xchg
mov
cld
or
arpl
jo
arpl
mov
test
fistpl
mov
xchg
lock
lock
les
dec
loope
les
sbb
pop
or
pop
sbb
sti
mov
pop
dec
gs
clc
pop
mov
enter
xor
cmp
lock
rcl
aaa
push
dec
mov
js
stos
adc
or
jne
mov
fcomps
push
jb
shrl
fcompl
out
into
loop
imul
iret
add
orb
cmp
xor
and
mov
xchg
dec
xor
pop
lea
sbb
lods
out
mov
and
mov
out
cltd
test
lds
add
cmpsb
jp
pop
into
fxch
mov
stos
rcll
mov
fcompl
stos
negb
and
mov
jle
dec
xchg
lods
xor
jno
mov
jns
stos
push
ss
ljmp
nop
daa
push
lock
in
or
cmp
andl
adc
fs
les
push
push
pop
lds
sub
int
loope
movsl
sar
adc
hlt
cwtl
fmuls
andl
adc
std
cmp
adc
imull
dec
dec
xor
sbb
stos
xchg
mov
into
mov
push
xchg
or
movsb
sbb
fs
out
pop
jo
call
filds
mov
iret
or
jne
jbe
shlb
aaa
cltd
sbb
fiaddl
inc
xchg
lret
repnz
inc
mov
fmul
fsubl
cmp
lods
xchg
push
jnp
sub
test
movsb
pop
or
and
ja
sbb
or
xlat
xchg
mov
fistl
mov
and
pop
fistpll
xlat
imul
repz
sub
adc
lock
ss
inc
push
jl
sti
bnd
pop
iret
pop
fimuls
dec
movsb
clc
add
cmpl
inc
mov
or
and
sub
enter
pop
mov
imul
dec
dec
cli
out
or
jae
lea
or
dec
aas
leave
in
mov
bound
imul
push
pop
btc
repnz
jp
cmp
jg
inc
jmp
popa
je
mov
xchg
setb
lock
add
xor
cli
cld
popa
or
bound
jge
xchg
outsl
jmp
test
push
repnz
ret
dec
leave
cmc
data16
add
add
fldt
insb
lea
addr16
xor
push
bnd
push
shll
mov
adc
and
push
or
and
movsl
mov
lea
cmp
rcrl
pop
repnz
inc
dec
cmpsl
adc
or
xor
imul
add
popf
adc
cmpsl
lock
xchg
je
jmp
pop
sbb
xor
and
imul
xlat
mov
inc
iret
movsl
rcl
mov
lret
fcoms
or
pop
insb
scas
xor
enter
or
xor
cli
cmpsb
into
xchg
js
test
pushw
push
iret
pop
ret
pop
mov
xchg
mov
call
jl
xor
popa
or
in
addr16
test
hlt
dec
inc
outsb
cmp
sub
inc
dec
add
andb
push
mov
sti
daa
add
aam
mulb
sbb
and
lods
ffree
mov
std
push
lods
mov
jbe
pop
test
or
xor
iret
cmovns
fisubl
les
sub
rcrb
pop
or
adc
dec
push
iret
mov
xor
test
jb
sub
xchg
mov
outsl
mov
outsb
push
insb
push
mov
dec
aas
push
stos
stc
js
cs
and
fists
mov
pop
addr16
jg
inc
or
iret
cltd
mov
inc
in
mov
mov
sbb
adc
adc
jae
mov
pop
xchg
repnz
cld
xchg
push
out
add
das
jo
pusha
in
cs
fxam
lods
push
xor
popa
or
push
js
into
jno
xchg
jbe
popf
ja
test
mov
cmp
lods
mov
imul
add
into
inc
mov
imul
fwait
pop
repnz
pop
and
mov
add
and
data16
xlat
push
mov
popf
rolb
mov
hlt
jns
mov
les
add
rcrl
cmp
or
pop
sbb
fists
iret
push
mov
stos
loopne
jmp
mov
idivb
mov
mov
mov
or
and
inc
imulb
push
repz
insl
imul
sar
ret
push
std
fnstenv
stc
bound
decl
icebp
sbbb
sbb
cmpsl
cld
scas
xorb
stos
cmp
sbb
sub
mov
fstpt
clc
daa
sbb
rcrb
out
dec
cs
xchg
es
sub
xchg
sarl
inc
shlb
shr
mov
movsb
fsubp
dec
adc
mov
dec
dec
lret
clc
sub
hlt
js
and
int3
xchg
and
lret
fs
fxch
jnp
inc
fwait
mov
inc
aas
jl
push
shlb
jp
jmp
dec
bound
mov
arpl
sub
lret
mov
mov
pop
mov
mov
ss
sbb
faddl
jl
test
mov
inc
fidivl
jecxz
shl
xor
mov
pop
mov
cmpsb
loope
xor
pop
adc
lcall
movsl
cltd
lret
sub
and
push
push
add
sub
dec
jg
repz
cltd
mov
xlat
jp
aad
or
and
shl
js
adc
cmpsb
ffreep
xor
xor
orl
and
fldt
dec
test
imul
xchg
fsubs
popf
dec
loopne
or
mov
insb
loop
ficomps
pop
outsb
xchg
dec
shrb
int3
jns
and
out
arpl
or
mov
sbb
jnp
hlt
cli
movsl
cltd
xchg
lea
nop
mov
enter
xchg
pusha
dec
add
push
je
cmp
loopne
sub
sub
data16
jno
hlt
inc
data16
dec
popf
test
inc
scas
aad
xchg
faddl
adc
cltd
push
ja
ret
xchg
ljmp
in
mov
adc
xchg
int
rcrl
xchg
or
mov
xor
dec
lahf
shl
mov
sbb
lock
push
jnp
add
push
sub
daa
push
jp
mov
sbb
je
cmp
add
repz
add
dec
add
mov
mov
fildll
pop
pop
xchg
popf
pop
insb
test
aaa
inc
daa
push
fs
cmp
jbe
jo
sahf
lock
add
push
outsb
jl
lods
mov
mov
fcoml
xor
and
lods
xchg
imul
push
sub
and
mov
mov
mov
je
dec
pop
sub
notl
mov
int
cli
pop
cmp
inc
xchg
cwtl
sbb
bound
addb
enter
mov
insb
test
hlt
nop
push
adc
outsb
outsb
push
jmp
sub
push
inc
push
pop
shrl
lds
push
jnp
sbb
arpl
sbb
les
mov
into
adc
adc
lock
inc
xlat
mov
xor
gs
adc
divl
js
pop
jge
push
jg
test
mov
rclb
stos
mov
icebp
ljmp
cwtl
jb
cmc
cmp
stc
sub
cmp
push
mov
mov
loopne
ret
push
hlt
xchg
add
loop
daa
icebp
je
sub
sbb
sbb
push
xor
jne
adc
pop
or
push
xlat
and
mov
sbb
shl
jns
jle
lea
push
adc
es
inc
mov
inc
pop
sub
test
jp
inc
mov
xchg
insb
aad
rcrl
outsl
stos
sbb
fimuls
popl
push
lahf
pop
mov
or
shlb
das
mov
xchg
rolb
add
fs
xchg
addr16
test
push
mov
shlb
xor
and
mov
sar
push
sti
popf
test
xorl
pop
out
cwtl
ss
xchg
pop
pop
rol
jmp
fnsave
inc
insb
xor
pop
cmp
orb
testb
out
xlat
fwait
adc
int
int
xchg
sbb
test
jecxz
and
hlt
js
push
cmp
sti
aam
in
xlat
mov
mov
daa
push
mov
test
cmp
call
mov
cld
aam
call
sbb
fcomps
add
int
gs
jmp
lret
jg
jb
push
fs
repz
mov
arpl
in
aad
sub
pop
xchg
or
jp
mov
pop
cwtl
fdiv
out
outsb
leave
insl
push
in
sub
lea
inc
stos
rorl
cmp
mov
fisubl
xchg
push
jbe
xchg
push
pop
lods
aas
mov
push
or
fidivrl
movsb
fidivl
mov
rcrb
ljmp
repnz
sub
sbb
mov
sub
push
call
jne
fs
sahf
into
cmpb
bswap
lock
fs
push
mov
fs
imul
cmp
aaa
mov
lds
dec
mov
pop
shr
push
imul
jl
or
inc
outsb
inc
sub
cs
adc
popa
repnz
icebp
push
mov
pop
or
push
es
int
xor
adc
notl
sahf
shl
aam
std
push
and
dec
and
in
jmp
mov
test
xlat
pop
cmp
aaa
inc
push
scas
call
mov
xor
xchg
jae
repz
and
fcomps
or
dec
push
add
add
test
cwtl
repz
lea
ficoml
mov
cmpsl
imul
clc
outsl
loop
movsl
test
std
jne
xchg
pop
sti
jo
cmp
pop
xor
or
xchg
mov
loopne
cmp
push
jge
mov
inc
daa
ljmp
dec
mov
mov
dec
mov
inc
jno
xlat
sub
sbb
rorb
pop
lcall
push
and
pop
addr16
aam
mov
pushf
mov
xchg
or
loop
loope
adcl
out
jno
enter
je
jmp
imul
sub
decl
jmp
add
loope
pop
jmp
xchg
dec
pusha
enter
or
sti
inc
pop
add
rorl
int3
lcall
notl
das
or
mov
add
aaa
sti
adc
push
push
mov
xorb
mul
fsubrs
cmp
popf
enter
jge
xchg
add
popf
je
pop
ret
rorl
fsubrl
cmp
pop
sbb
sahf
addl
leave
lret
gs
insl
testl
sub
push
imul
xor
dec
dec
mov
and
lds
and
xor
gs
lock
push
pop
lcall
cmp
mov
mov
sahf
xor
jmp
mov
jnp
dec
dec
xchg
inc
jle
sti
jge
pop
sbb
mov
pop
or
inc
cmp
stos
pop
iret
sub
pop
mov
xor
testl
fimuls
and
pminub
daa
imul
pop
sub
adc
dec
mov
push
mov
std
outsl
loop
lcall
add
loop
sbb
sbb
mov
sbb
pop
mov
aaa
das
movsb
arpl
outsb
cmpl
daa
lret
push
add
cmp
mov
in
in
outsb
mov
or
cmpsl
movsl
xchg
inc
idivb
call
sbb
nop
xor
clc
push
push
add
push
pop
mov
scas
test
cmc
sti
sti
or
jmp
cmp
mov
ss
insl
add
add
sub
sbb
cmp
xchg
add
inc
jmp
xchg
out
sbb
stos
sbb
loope
rorl
out
mov
adc
cmpsl
fsubr
sahf
bound
dec
stos
mov
fcoms
leave
andb
js
adc
lret
shlb
fcoml
test
xor
repz
jg
pushl
pop
mov
xor
sub
jb
push
sti
mulb
xor
add
fcmovb
cmp
and
iret
and
hlt
orl
and
adc
xchg
mov
test
dec
popa
lcall
and
cmc
or
pop
nop
lea
dec
lret
add
ja
pop
out
cmpsb
fwait
adc
mov
pop
cmc
pushf
add
mov
out
xor
adc
loopne
sub
out
cmpsl
xor
dec
dec
mov
adcl
out
sub
mov
jno
push
or
daa
pop
out
jmp
inc
xlat
bound
and
mov
jg
ret
mov
stos
mov
mov
jnp
cmp
jbe
and
and
pop
lods
or
xor
in
jle
mov
fadds
sti
dec
pop
push
mov
and
sbb
adc
popf
test
xchg
js
push
fwait
mov
dec
xchg
aad
fldenv
es
add
divl
cltd
adc
cli
push
cwtl
daa
add
mov
rorl
mov
out
lea
lahf
pop
ja
movsb
cld
rclb
jne
ljmp
popf
push
inc
inc
insb
fmull
fnstenv
pop
rcrb
shlb
push
fsubrs
push
imul
xchg
lahf
icebp
fidivrl
inc
xor
mov
xchg
and
push
and
xor
movsb
inc
pop
push
fcoml
push
xor
in
mov
mov
aaa
les
lods
movsl
adc
cmp
lret
jo
mov
push
movsb
xchg
and
add
sub
in
test
stos
inc
addr16
dec
loope
mov
mov
lds
lods
rorl
and
jns
out
test
mov
movsb
jle
cwtl
jns
push
xchg
mov
cmp
movsb
fdivrp
les
mov
cmp
jnp
jnp
bound
cmc
xchg
xchg
add
movsl
aad
xor
mov
out
pop
aaa
dec
sti
int
mov
jns
fists
decl
adc
cmpsl
rcr
xchg
mov
or
add
in
mov
and
mov
inc
sbb
dec
sub
mov
mov
cld
or
dec
and
adc
push
pop
adc
aad
xor
fcmovbe
add
popa
movd
dec
sub
out
movsb
jbe
iret
popa
arpl
inc
out
aas
cmpsl
mov
scas
iret
cmpb
movsl
cmp
sbb
sbb
add
in
popa
mov
mov
xor
adc
gs
jne
xchg
inc
test
pop
push
sbb
gs
ret
sbb
cmp
xchg
mov
xchg
jle
push
js
jns
lods
push
popf
and
push
xor
pop
push
sbb
inc
mov
je
pop
repnz
jno
jae
lods
in
pop
mov
inc
or
or
push
mov
fstl
xchg
stos
mov
popf
cmpsb
jae
test
call
xchg
sbb
mov
cmp
test
xor
jecxz
addb
pop
jbe
iret
push
mov
std
test
test
loope,pn
push
call
adc
addb
dec
repz
sbb
test
jmp
jle
mov
popl
add
sbb
jg
sbb
cltd
inc
jbe
scas
test
in
lock
ret
adcb
pushf
mov
add
aas
xchg
scas
lahf
inc
fcomi
scas
mov
and
xor
fmuls
call
notl
mov
movsb
mov
movsl
test
and
repnz
mov
cmpb
sub
mov
xor
add
pusha
sbb
or
dec
cmp
xor
in
ret
scas
pop
aam
in
out
popa
xchg
push
int
xchg
cmpsb
jmp
xor
mov
call
imul
mov
orb
mov
jne
into
ds
mov
dec
xor
xor
pop
jle
jnp
jge
sbb
icebp
int3
shl
pop
stos
mov
out
xchg
sbb
mov
lahf
inc
inc
xor
sbb
test
popl
cli
and
mov
or
lret
mov
jo
bound
in
or
jo
std
pop
pushf
sbb
ljmp
dec
push
into
outsb
mov
mov
mulb
mov
or
sbb
pop
jns
pushf
aad
adc
sti
rcll
mov
mov
sbb
mov
pop
bound
idivl
push
jp
mov
push
aam
leave
and
or
push
clc
cs
and
sub
sbb
add
or
adc
mov
pop
test
mov
data16
sbb
aad
fwait
jne
pop
and
and
mov
dec
dec
dec
mov
test
cmp
arpl
rcrl
pop
bound
fidivrs
les
jp
dec
sbb
mov
sub
iret
js
xchg
xor
or
pop
loopne
test
dec
xor
hlt
out
adcb
sbb
pop
pop
cmp
cli
mov
in
sbb
mov
xchg
xor
mov
ds
leave
es
jmp
insb
data16
arpl
ret
cmpsb
pop
sti
inc
inc
or
mov
ror
repnz
daa
cmpsb
icebp
lcall
and
xchg
push
fimull
xor
aad
jecxz
es
divl
out
cmp
jae
and
out
push
aad
mov
xor
sbb
pop
inc
pop
mov
imul
out
out
xorl
fisttpll
ljmp
pop
mov
fs
jbe
lret
jae
or
mov
out
xchg
insb
ds
sbb
mov
xorb
pop
mov
jl
shrb
sbb
add
sub
lds
push
lds
out
sbb
popf
test
movsl
jge
cltd
sub
jb
in
dec
jno
xlat
sub
imul
pushf
xor
out
mov
jg
inc
test
pop
push
xchg
xchg
movsb
scas
mov
aad
in
leave
sbb
sbb
xchg
mov
jmp
fsubrp
cmp
xchg
push
lods
lods
sbb
sbb
lahf
pop
mov
mov
or
popa
fwait
and
or
int3
lods
addr16
add
movsb
std
mov
fwait
int3
or
lret
addb
dec
mov
sub
xchg
mov
add
sbb
andl
sbb
or
outsb
loope
sub
fdivl
xor
mov
icebp
sbb
dec
test
hlt
adc
sub
push
inc
inc
jae
repnz
lret
push
push
fisttpll
cmc
sets
fwait
mov
out
int
mov
add
imul
push
mov
or
dec
daa
fidivrl
addb
xor
xchg
in
mov
add
orl
jns
xchg
cwtl
push
scas
cmp
cmp
push
push
xchg
jae
add
stos
fmul
mov
sti
push
repz
fnsave
movsb
xsaveopt
mov
jns
add
xchg
fidivs
shll
ja
jl
fdivrl
lods
mov
push
inc
out
add
sub
cmp
jns
jp
add
inc
xor
inc
ret
out
in
mov
add
dec
cmp
sub
lods
and
cmp
aam
pop
mov
sub
cmpsl
dec
iret
les
arpl
in
add
inc
pop
cli
stc
xchg
add
lret
ss
mov
in
aaa
in
loopne
rolb
push
cmp
pusha
cmp
jno
jl
negl
mov
adc
sub
ljmp
ja
add
loop
mov
dec
into
adc
inc
arpl
inc
jecxz
test
inc
cltd
daa
and
xlat
xor
ljmp
xor
dec
fcompl
mov
iret
add
xor
xchg
test
and
lret
add
and
xchg
call
sarl
daa
loop
arpl
adcb
std
ss
xchg
pop
or
sub
jge
rcll
cmp
mov
inc
jge
pushf
xlat
add
xchg
bound
in
lds
adc
inc
shl
fimuls
insl
mov
adc
dec
mov
add
movsb
dec
ljmp
sahf
mov
cmpsb
fsubr
sbb
movsl
jle
adc
mov
sub
dec
dec
stos
pushf
mov
cmpsb
iret
shrl
pusha
xchg
adc
or
xor
arpl
mov
cs
imul
add
test
xchg
mov
mov
fdivr
popf
add
pop
ret
mov
mov
andl
inc
les
mov
inc
out
js,pt
popf
roll
jo
mov
jno
mov
push
jnp
or
xor
fmuls
lods
aad
sbb
push
xchg
lods
xor
test
xchg
push
or
mov
xor
lcall
out
jne
mov
jg
xor
sub
xor
lods
mov
test
aam
push
mov
cli
push
orb
into
pop
fsubl
or
mov
roll
jg
dec
shl
loope
mov
or
jne
xchg
jns
pusha
cld
jbe
jae
jp
call
adc
push
outsb
mov
push
xchg
out
xchg
jg
and
sbb
lret
testb
sbb
sahf
popa
and
mov
out
xor
test
shrl
roll
sub
cmpsb
out
xchg
or
push
push
ret
jge
jbe
xchg
adc
into
dec
dec
adc
xchg
inc
in
repz
adc
mov
push
dec
push
or
add
adc
ljmp
sub
inc
repnz
sti
inc
lcall
dec
push
dec
pop
jnp
pop
cmpsb
jbe
mov
sub
cmpsl
sbb
lods
sub
call
jne
push
inc
xchg
sbb
ds
aas
mov
xchg
test
dec
adc
pop
jb
stc
addr16
adc
dec
push
imul
cmp
imul
idivl
lcall
mov
jl
mov
aas
les
insb
loop
mov
aam
je
xchg
std
xchg
sub
cs
andl
insl
adc
fbld
bound
mov
outsl
jmp
inc
vrsqrtps
cmp
push
ror
dec
cmpb
jg
xor
mov
push
inc
xor
nop
in
add
xlat
sub
or
out
leave
xor
jle
mov
shll
aam
mov
inc
pop
and
dec
leave
pushf
popa
mov
jne
xchg
adc
into
addr16
mov
xchg
push
inc
jmp
loopne
push
data16
in
test
mov
sbb
int
cmp
sbbb
in
or
sarl
adc
popf
clc
mov
arpl
das
fsubs
sbb
cmp
cmp
lret
inc
pop
mov
inc
jb
repnz
add
in
outsl
xchg
fsub
xor
and
push
inc
inc
int3
enter
movsb
adc
mov
sbb
loopne
rcrb
mov
add
xor
subb
push
add
sub
inc
sbb
adc
repnz
imul
pop
inc
jmp
rcr
dec
into
cmpsb
shl
ret
cmp
sub
pop
push
jg
pop
pop
xchg
ret
insl
jo
arpl
not
repnz
or
pop
lret
add
hlt
sub
mov
jno
hlt
xchg
jo
inc
mov
dec
and
jns
or
sti
xor
addl
inc
nop
fnstenv
bound
sbb
fistps
notl
lret
pop
or
jns
pushl
pop
leave
negb
xor
lds
insl
fdiv
sbb
test
and
scas
mov
testl
and
nop
sub
addl
shrb
pop
hlt
andl
movsb
mov
lcall
arpl
sbbb
mov
in
out
inc
clc
jne
into
cli
cs
int
inc
cmpb
push
mov
add
test
xchg
jns
das
sahf
dec
scas
mov
mov
xchg
dec
adc
sub
test
lret
push
sarb
push
lcall
lret
mov
cmp
sbb
xlat
pop
jno
pop
lret
sti
push
sbb
push
clc
adc
dec
sub
rol
repz
jp
xchg
sub
in
inc
jmp
test
xchg
add
stc
test
sub
and
cmpsb
jle
call
lea
stos
mov
scas
movsl
adc
pop
push
fmulp
cwtl
hlt
outsb
adc
sarb
vlddqu
sahf
or
sbb
cmp
cmp
and
cltd
pop
xor
sbb
jae
mov
jge
adc
adc
sbb
xchg
push
pop
movsl
popf
jge
fsubrl
pop
sbb
lret
imul
sbb
notb
dec
iret
cli
ficomps
mov
add
dec
js
aam
jae
lret
xor
push
jne
add
inc
lcall
aaa
dec
pop
sbb
push
lock
jb
push
sarb
mov
add
es
add
push
xor
adc
cltd
jbe
shll
rorb
fisubrs
rol
imul
test
and
movsl
sbb
aad
sahf
xor
aas
xor
sub
cmp
push
mov
pop
fs
lods
in
in
cmpsl
xchg
pop
nop
pop
sti
subl
and
out
insl
and
push
orb
jmp
gs
sbb
mov
cmpsl
cwtl
mov
clc
inc
cld
loop
movl
pop
fisttpl
mov
aaa
mov
pop
orb
cmp
mov
xchg
fdivp
push
in
mov
jg
dec
loope
pop
es
roll
in
sbb
pushf
dec
push
sbb
sar
adc
stos
sbb
cmp
mov
out
enter
push
pop
shll
cmp
mov
cs
decb
adc
je
inc
add
jnp
aad
mov
fs
sti
xor
xor
jne
sbb
lret
faddp
insb
or
ds
adc
or
mov
pop
pop
dec
cmc
mov
insb
pop
add
stos
out
mov
cmp
js
les
scas
adc
mov
pop
xchg
iret
dec
cmp
jb
clc
inc
test
cmp
add
out
jg
in
jle
xor
aas
fcom
mov
xchg
fldcw
add
outsl
xlat
in
mov
aas
jecxz
aaa
xor
sbb
sub
test
out
ret
out
inc
outsb
cs
movsl
dec
fisubs
call
cmpsl
pushf
sti
dec
sbb
push
add
je
scas
jo
repnz
repnz
mov
cld
int
ds
das
ss
inc
sbb
cltd
mov
sub
aam
insl
dec
ja
and
sub
jns
lcall
rorl
sub
lods
iret
inc
hlt
cwtl
inc
and
mov
mov
xchg
into
dec
sbbl
or
mov
sub
mov
mov
push
jnp
adc
test
xlat
adc
xor
test
in
dec
aad
sbb
or
push
mov
push
pop
in
bswap
scas
adc
sbb
clc
mov
mov
xor
clc
arpl
pop
adc
mov
mov
or
or
xchg
ss
push
mov
cmpsl
aad
out
sub
lcall
fsts
jbe
dec
test
xchg
sub
loop
xchg
xchg
mov
inc
jae
and
cli
lea
cmp
push
jl
jnp
jge
or
ret
inc
lock
inc
icebp
mov
stos
ffreep
jmp
adc
cmpsl
sub
sub
repnz
dec
in
inc
sti
fcomps
dec
pusha
aad
cld
imul
and
pop
jns
aad
mov
inc
xor
fsubrp
inc
cltd
jb
ds
push
mov
dec
sbb
xchg
sub
sahf
out
jmp
pop
popa
faddl
pop
push
add
add
mov
or
mov
add
adc
push
mov
je
faddl
es
mov
popa
loopne
lahf
adcb
add
sarl
pop
pop
mov
nop
in
rorb
mov
hlt
shll
jl
std
dec
cmp
andb
jae
gs
pop
cmp
fcmovbe
add
jmp
jb
aad
leavew
or
and
nop
outsb
jo
adc
xor
fdivp
jle
add
scas
jo
imul
out
pop
loop
inc
cld
jecxz
pusha
xchg
push
std
jmp
add
jo
xchg
data16
sbb
add
pop
test
pop
cli
cmpsl
int3
clc
pop
hlt
jno
sbb
test
or
cmpsb
inc
mov
add
repnz
ds
lret
int3
loope
and
sbb
cmpsl
sbb
loop
int
arpl
lods
and
aaa
pop
sub
sub
and
addb
in
in
mov
cmp
pop
imul
fsts
dec
shl
sbb
or
jge
mov
mov
cmp
jle
sub
nop
adc
xchg
dec
xor
stos
aam
ret
inc
ret
shrb
imul
test
push
mov
adc
jecxz
add
icebp
addl
push
test
hlt
xchg
popf
dec
mov
jg
cld
adc
mov
mov
pop
cmp
aad
jo
ja
cmp
aas
cmc
pusha
inc
push
std
mov
pop
lods
lds
sbb
test
out
daa
push
shlb
stos
add
arpl
inc
imul
and
cltd
mov
mov
adc
fwait
add
xchg
add
out
mov
sbb
shll
and
mov
in
xchg
jg
adc
out
xchg
sub
mov
pushf
push
lock
sub
ljmp
jbe
add
xlat
imul
out
shrl
sub
pop
mov
jle
out
add
dec
or
dec
enter
push
dec
rcrb
push
jl
xchg
addr16
cmp
push
mov
testb
lods
pop
testl
stos
out
shl
and
xor
ficompl
lahf
popf
fnstsw
std
out
or
adc
std
es
test
mov
inc
inc
loopne
push
test
movsl
faddl
cs
sbb
jbe
mov
popa
out
dec
mov
iret
push
pushf
mov
and
loopne
push
push
inc
mov
clc
filds
rclb
pop
push
insl
bnd
xor
hlt
mov
fwait
add
lods
test
jle,pt
and
insb
inc
mov
andb
adc
loope
adc
inc
xchg
out
imul
dec
pop
cltd
pop
push
push
out
add
sub
cmp
sahf
xchg
cmp
add
pop
pop
and
xchg
lods
and
test
je
mov
sbbl
jle
add
ljmp
add
push
push
fs
inc
adc
add
mov
xchg
push
push
adc
sbb
mov
sbbl
fincstp
jg
fcmovbe
imul
dec
push
cmp
lcall
enter
pushf
popf
ret
mov
imul
dec
add
pop
addb
arpl
xchg
test
in
sbb
mov
jbe
jle
xchg
orl
mov
sub
mov
xchg
xor
test
xor
adc
jae
add
add
test
jo
xlat
mov
arpl
in
xor
mov
ljmp
pop
js
call
add
cld
and
sub
shr
mov
push
fiaddl
jmp
outsb
add
cli
addr16
out
mov
jno
and
test
and
mov
in
inc
imul
outsb
cwtl
scas
lcall
mov
dec
and
dec
push
fdiv
out
inc
add
push
mov
mov
cmp
in
mov
inc
xchg
push
or
clc
out
imul
lret
dec
xor
pop
call
sub
pusha
js
lcall
mov
add
daa
mov
dec
pop
jg
and
into
cmp
jb
pop
rcl
enter
pop
cld
inc
pop
lods
test
test
cmp
testb
insb
aam
scas
cmpl
dec
clc
sbb
fisttps
hlt
js
sub
mov
int
ljmp
test
push
jnp
push
leave
fadds
popa
mov
movsb
sti
adc
scas
lea
push
inc
rolb
mov
mov
xor
leave
pushf
aam
add
rsqrtps
mov
addr16
push
or
jb
cmp
ds
lds
roll
stc
arpl
push
xchg
sub
xchg
aam
cmp
cwtl
mov
out
cmpl
aas
les
jle
mov
stos
cmpsl
outsl
or
fdivrl
xchg
jo
inc
cld
ret
sar
test
pusha
mov
in
dec
arpl
adc
mov
pop
ljmp
in
test
and
xlat
xor
fimuls
dec
push
cmpsl
dec
stos
push
gs
out
cmp
or
push
cld
xor
sbb
sub
pop
lahf
std
inc
jge
mov
or
pop
data16
cld
or
jo
mov
mov
mov
je
xlat
mov
fsubrs
rcr
mov
jbe
das
inc
adc
stos
and
xlat
cmp
push
sbb
inc
jmp
push
pop
test
mov
or
lods
cmp
dec
xchg
xor
pop
adc
sub
int
cmp
add
shlb
addr16
jg
xchg
add
push
inc
jo
out
xlat
mov
rorl
push
stos
add
addr16
jb
pop
shll
adc
mov
add
xchg
inc
pop
mov
sbb
es
in
insb
outsb
xchg
jle
sahf
jg
shll
mov
out
adc
sbb
shlb
cmpsb
stos
daa
shll
fcmovu
adc
add
xchg
into
sbb
sub
inc
adc
test
push
mov
xchg
sub
aad
test
xchg
sub
stos
outsb
cmp
mov
pop
xor
inc
mov
lahf
in
out
dec
test
push
rcr
notb
hlt
push
rorb
mov
mov
add
xlat
inc
push
subb
cmpb
cli
sub
test
arpl
jns
ds
mov
je
cmpsl
iret
xor
popf
paddsw
add
rcrl
push
outsb
sub
and
lret
mov
adcb
lock
sub
sub
sbb
dec
sbb
aaa
into
or
je
call
fisttpl
mov
xchg
mov
jp
jg
outsl
cltd
and
imul
pop
dec
push
sub
xlat
xor
scas
xchg
mov
movsl
inc
mov
mov
in
add
jecxz
sub
test
and
and
insb
pop
pushf
and
test
loopne
testl
jb
and
daa
adcl
add
cmp
loop
gs
pop
dec
cld
clc
mov
ret
in
or
movsl
pop
movsb
dec
dec
shll
xor
out
icebp
rclb
and
divb
jecxz
xor
daa
call
cmp
push
and
decb
and
ljmp
pop
push
dec
aas
fmull
mov
dec
orb
loopne
mov
sub
mov
and
adc
mov
out
rclb
cmp
inc
std
bndstx
fdivrs
mov
mov
shl
call
fisubs
sbb
ret
out
add
push
dec
fcoml
cmp
dec
int
push
repnz
lahf
inc
repnz
push
mov
and
cld
mov
fildll
insl
out
add
lcall
inc
push
adc
faddl
lods
sub
pop
mov
lret
xchg
xor
nop
stc
sbb
sahf
iret
xchg
pusha
into
negb
movsl
and
xchg
mov
pop
lret
sub
and
imul
xchg
testl
sbb
xchg
testl
and
std
popa
dec
and
sub
lret
or
jle
pop
push
cs
lods
fisubs
into
jne
mov
xor
mov
dec
mov
sub
aad
shrb
push
and
insl
mov
cwtl
xor
movsb
cmp
xchg
outsl
lock
pop
push
xor
jp
adc
clc
insb
xor
push
mov
test
sbb
shlb
sar
lahf
cmp
jnp
mov
call
sbb
xor
addb
pmaxsw
pop
adcb
stos
jg
jae
xchg
outsb
mov
mov
mov
fildl
in
dec
arpl
not
cmc
jmp
shll
stc
pop
sbb
rorb
out
lret
and
inc
les
sbb
loop
subl
push
add
hlt
lahf
loope
clc
and
repnz
aaa
loope
aaa
adc
cld
lret
and
insb
iret
js
cmp
mov
enter
ja
dec
ljmp
js
aaa
mov
int3
fwait
mov
into
outsb
sbb
inc
js
cwtl
cmp
xchg
and
lcall
aaa
rcrb
mov
test
in
lea
loop
mov
mov
inc
pop
jge
insb
icebp
pop
bound
mov
daa
pop
xchg
inc
pcmpgtd
cmpsb
mov
arpl
sub
xchg
stc
ret
add
xchg
jno
test
insl
call
outsl
dec
sub
int3
xchg
and
mov
dec
cltd
into
notl
jle
icebp
xor
inc
sub
stc
mov
push
out
stos
mov
scas
repz
xchg
cmp
and
je
hlt
sub
cltd
decb
xor
xor
dec
dec
push
faddl
sbb
jb
sub
outsl
inc
loope
pop
insl
or
xchg
push
push
in
mov
hlt
pop
xor
aas
jl
fs
ss
div
jns
ret
sbb
fld
mov
leave
dec
mov
mov
mov
pop
ja
or
inc
adc
fmuls
sub
sbb
mov
jmp
xchg
jp
fwait
rcrl
pop
xor
dec
push
jp
cltd
bound
jl
ret
mov
xchg
xchg
add
clc
js
jno
repnz
ja
xchg
iret
or
data16
adc
sub
lahf
jl
pop
jb
xor
push
or
add
mov
mov
sub
mov
enter
in
pop
arpl
ljmp
fiadds
mov
mov
repnz
aas
inc
into
push
popf
outsb
jo
xorl
inc
inc
dec
cs
push
lock
popa
daa
out
cli
mov
sbb
lods
inc
cmp
sti
loope
stc
dec
into
pop
push
js
popa
ljmp
enter
les
jge
sbbl
cmpsl
xlat
mov
mov
xorl
ss
arpl
push
int3
dec
mov
cli
and
scas
dec
mov
es
mov
pop
mov
fiadds
and
leave
scas
dec
cmp
push
lret
mov
jae
outsb
mov
xchg
xchg
sub
xor
push
popf
mov
add
aas
jmp
jg
xor
jl
dec
add
rcrb
addr16
lcall
sub
clc
xor
inc
cmp
or
popf
cs
mov
mov
das
bound
into
inc
adcl
sbb
pop
in
xlat
mov
lods
xchg
jbe
std
jmp
mov
xor
mov
decl
pop
push
push
into
xchg
jb
push
scas
aam
addr16
pop
inc
cmpb
adc
add
ja
jge
mov
xor
gs
add
cltd
push
push
ja
in
adc
sbb
push
jb
jns
mov
and
xchg
inc
mov
pop
cli
xchg
xor
pushf
xchg
repnz
or
add
sbb
xor
xchg
das
dec
iret
sbb
xor
adc
lds
and
cmc
xchg
lret
xchg
and
stos
mov
dec
gs
icebp
rol
dec
xchg
lods
push
sub
push
sbb
sti
inc
in
mov
jl
sbb
mov
adc
andb
inc
push
inc
adc
push
rol
loop
jecxz
pop
in
inc
movsl
add
jb
inc
adc
loop
outsl
add
daa
sub
pop
inc
or
and
xchg
adc
out
jae
mov
nop
pop
cmp
xlat
adc
test
dec
lock
sbb
cmpsl
jmp
xchg
cli
mov
or
pushl
out
dec
jge
push
clc
and
xor
dec
jne
sbb
ja
ja
jbe
ja
shl
repz
leave
test
or
inc
mov
loopne
inc
jns
inc
xorb
cmc
imul
add
dec
push
jg
push
mov
or
jmp
nop
and
pop
bound
bound
fmul
adc
sub
dec
jnp
xchg
rclb
push
lcall
and
jge
movsb
jmp
mov
mov
ret
cmp
xchg
fisttps
in
and
cld
sbb
fidivl
push
dec
les
scas
push
dec
test
push
add
int3
ret
lcall
jns
ret
push
dec
xor
call
jno
ds
insb
imul
repz
div
sbb
and
sub
mov
or
clc
push
jne
xchg
hlt
add
lods
pop
push
mov
fisubs
or
mov
aaa
stos
push
mov
sbb
loopne
imul
xor
fwait
sbb
jb
adc
push
sbb
cltd
dec
stos
loopne
mov
ret
jnp
pushf
call
lahf
rolb
hlt
push
fnstenv
fdivrl
addr16
pop
iret
cwtl
cwtl
mov
pop
push
pop
pop
jno
lock
cmpsl
xchg
ss
std
sbb
mov
inc
mulb
adc
aam
and
or
add
or
add
stc
std
fcoml
fistpl
cltd
jo
sub
mov
daa
leave
add
nop
and
adcl
mov
mov
xchg
call
xor
int3
popa
jl
sub
out
push
sbb
mov
sbb
jae
or
jle
push
gs
sbb
inc
pop
sbb
dec
pop
dec
cmc
inc
rcrb
push
mov
sub
cld
or
mov
scas
sbb
popa
xor
rorb
mov
jmp
aad
xchg
lods
dec
loope
les
push
mov
jmp
int3
or
and
fidivrl
mov
sbb
aad
push
cmp
stc
dec
cmpsb
inc
mov
pop
int3
rcl
adc
jecxz
pusha
ficomps
pushl
and
push
testb
pop
cld
xchg
mov
mov
cmp
pop
lods
push
push
lock
mov
lret
out
js
push
insb
or
push
xorb
arpl
movsl
jmp
lret
pop
cmp
popa
xchg
outsl
push
orb
push
pop
pop
mov
cmp
repz
xchg
in
cmpsb
fisttpll
mov
add
sbb
in
or
cmpsb
cmp
mov
stos
mov
repz
mov
and
ja
adc
pop
imul
adc
imul
xchg
jg
pop
mov
lret
fisubl
sti
adc
pusha
pop
sbb
jl
outsb
sbb
shl
dec
dec
push
insb
lahf
call
add
cmp
ret
ret
adc
add
jmp
movsb
in
gs
push
sbb
dec
popf
push
inc
cmp
add
test
jnp
mov
push
imul
jbe
popf
loopew
aam
xchg
es
fnstenv
negl
dec
loop
sub
sti
mov
pusha
push
stos
inc
add
fsubl
cmp
jno
data16
out
jns
ss
and
icebp
xor
movsl
dec
ljmp
test
fmulp
rcrl
sarl
loopne
aaa
das
in
jno
dec
xchg
or
rcl
stos
loope
cwtl
sahf
inc
test
in
xchg
popa
xlat
gs
test
outsb
add
inc
insl
enter
out
push
popf
ficoml
inc
adc
xchg
mov
push
jne
or
mov
cmp
mov
mov
inc
loopne
sbb
test
mov
cld
dec
push
and
push
out
cli
jmp
fs
cmp
mov
mov
dec
lahf
mov
pop
xchg
sbb
pushf
jns
pop
leave
fldcw
push
inc
aam
mov
sub
jns
or
inc
std
sbb
pop
and
stos
scas
and
jnp
stc
or
dec
xchg
mov
add
pop
fldcw
dec
andl
xchg
pop
sbb
pop
jg
mov
daa
shll
adc
xchg
xchg
jno
clc
sahf
adcb
cmpsl
les
in
cmp
jae
rcll
repnz
les
jbe
lret
out
jle
out
jb
out
call
sbb
iret
iret
sbb
mov
pop
cwtl
aad
pop
iret
mov
jae
out
in
mov
push
enter
scas
mov
inc
xor
iret
std
mov
xor
jp
mov
fsubl
out
xchg
mov
dec
outsl
dec
dec
subb
dec
adc
sbb
cli
and
xchg
orl
sbb
pop
shlb
scas
xor
lret
xor
pusha
push
pop
xchg
nop
xor
sbb
clc
std
dec
or
aaa
cli
ss
out
loopne
add
or
xchg
mov
jecxz
int3
xor
lret
mov
pop
les
push
jl
push
scas
inc
add
xor
dec
test
adc
mov
out
or
mov
sub
sub
add
xchg
mov
imul
cmp
sbb
xchg
cmpb
loop
cmpb
push
movsb
dec
leave
and
cmp
add
ljmp
sub
nop
mov
mov
xchg
test
jns
cmp
mov
mov
push
gs
fstps
cmp
adc
xchg
jg
bound
into
mov
xchg
stc
lock
dec
sbb
adc
xchg
push
outsb
les
adc
adc
add
mov
inc
dec
xchg
stos
dec
sbb
inc
icebp
cwtl
mov
outsb
fstpl
notl
sbb
arpl
enter
pop
add
insb
sbb
mov
adc
fildl
sbb
xchg
push
add
adc
in
out
scas
aas
inc
lock
incl
out
mov
sbb
jno
out
fs
ret
mov
das
inc
mul
shl
imul
fnsave
jl
popf
das
pusha
dec
loop
inc
push
and
and
add
test
movsl
das
hlt
cmp
pop
push
imul
std
sahf
fst
ficompl
mov
sbb
xorl
loop
add
orl
cmpsb
insl
fnsave
loope
xchg
xor
in
test
int
xor
dec
mov
sbb
mov
push
loope
ret
xchg
aam
mov
adc
cmovs
xchg
int3
lret
imul
ds
cmp
and
inc
cs
stos
sahf
add
sub
inc
inc
adc
pop
test
inc
mov
jle
xor
or
aam
add
mov
or
pusha
lods
add
inc
mov
jae
mov
and
les
sbb
out
lret
ficomps
sub
pop
icebp
add
inc
and
jg
in
data16
or
pop
clc
fdivrl
sti
jp
std
addr16
mov
daa
push
push
shll
sub
popa
push
cmpsb
xchg
inc
lret
adc
stc
ret
rcl
dec
cmpsl
scas
dec
push
imul
dec
xchg
add
adc
inc
loope
lock
ss
lds
out
les
leave
xor
jp
mov
jnp
mov
and
inc
dec
lods
popf
or
xchg
or
xor
imul
test
push
mov
pop
or
xor
mov
mov
fsts
sahf
fldt
test
sub
stos
imull
dec
sub
xor
xor
insb
addr16
stos
dec
add
sahf
or
jge
mov
lcall
movl
fldcw
add
and
sbb
aam
mov
and
xchg
add
xor
jmp
xorb
insb
es
add
je
mov
xor
jnp
sub
ja
js
sub
inc
mov
inc
pop
inc
push
imul
cltd
xchg
callw
rorb
lods
subb
popa
push
jmp
mov
in
cli
cmc
icebp
clc
enter
mov
in
dec
lock
mov
out
mov
shlb
inc
jl
push
push
push
int
push
aad
mov
adc
lock
mov
aad
pop
push
jl
jge
test
push
es
addb
sub
in
ss
into
add
mov
jbe
scas
or
push
jecxz
pop
rorl
mov
loopne
cmp
aas
lea
pop
fmul
sub
stos
dec
sti
aaa
jnp
cmp
jne
jmp
fsin
outsl
mov
push
outsb
inc
jl
jmp
push
dec
leave
subl
pop
daa
adc
cmpsb
pop
mov
mov
inc
sbb
in
stos
loope
cs
mov
push
sbb
cmp
jp
aam
test
sti
pop
and
mov
imul
pop
hlt
xor
mov
fistps
cmpsl
push
dec
mov
adc
stos
jno
or
sub
mov
jmp
loopne
pop
cmp
lods
xorb
xor
sub
pop
jno
aas
out
lahf
inc
in
aaa
sbb
imul
mov
xor
in
xchg
sub
pop
popf
cmp
pop
repz
in
mov
fwait
jne
push
js
add
add
or
sbb
sbb
xlat
dec
push
les
repnz
mov
incb
lcall
pop
mov
mov
ja
in
call
pop
popa
ss
cmp
into
adc
and
sbb
out
push
jns
add
jge
jle
mov
rcrl
mov
or
adc
push
lds
ret
int
pop
mov
jle
xor
jno
cli
mov
int3
stos
nop
jl
mov
in
add
jge
loopne
adc
ret
in
inc
jl
cli
stc
cmp
mov
aas
push
fnstcw
mov
sub
mov
lcall
cwtl
push
outsb
sub
cmpsb
cmc
into
dec
mov
repnz
xchg
sbb
aad
ficoms
jno
pop
movsb
push
mov
mov
int
subl
inc
or
jecxz
push
cmp
dec
xor
pop
pop
inc
sub
mov
mov
sahf
inc
stc
mov
pop
add
frstor
iret
sub
lcall
pushf
pop
movsb
daa
leave
test
jl
test
loop
sahf
lret
out
mov
lahf
cmc
sub
out
movsb
mov
xchg
sub
lcall
lret
or
in
mov
fsubr
dec
sahf
cld
sbb
push
shr
jg
jmp
cmp
stos
mov
jp
pop
xchg
mov
inc
xor
repnz
xchg
addr16
xor
mov
or
insb
fcomps
fs
jl
mov
xor
fstps
push
push
or
mov
stc
jnp
popf
cmp
mov
xchg
xor
jno
sahf
divb
or
in
mov
sarl
xlat
jns
or
cmp
jp
pop
ret
aas
mov
enter
aam
daa
popf
sub
xor
mov
in
std
xchg
mov
lea
imul
daa
setbe
cmp
leave
push
or
pop
mov
enter
add
pop
mov
das
mov
out
outsl
pop
jne
jmp
cmpxchg
jnp
push
sbb
loope
pop
rolb
mov
lods
mov
xor
ret
xchg
push
in
inc
push
ja
mov
push
push
bound
fsubr
pop
cli
sub
cwtl
pop
ret
test
fmul
inc
jmp
dec
jg
cmp
into
dec
inc
enter
jns
outsb
ja
ret
inc
lahf
cmp
call
ljmp
or
pop
mov
cmp
jecxz
imulb
xor
xchg
push
shlb
aad
mov
cmpsl
adcl
push
hlt
xor
test
sbb
pop
inc
loop
aam
test
inc
adc
and
frstor
push
test
adc
cmp
mov
add
repz
stos
and
jb
sahf
pop
rcrb
shll
sbb
jg
je
ret
sub
mov
adc
push
clc
xor
mov
inc
sahf
decb
push
shll
mov
jg
push
xchg
xchg
jp
iret
mov
stos
scas
pop
mov
jl
insl
adc
in
jecxz
cli
push
pop
fisubrl
das
adc
lret
push
hlt
cmp
scas
cltd
scas
int
enter
cmpsl
jg
les
xchg
xor
fstp
sub
adc
and
loope
inc
mov
mov
popa
mov
test
into
sbb
adc
lret
popa
arpl
mov
andl
mov
daa
inc
imul
ret
out
mov
shlb
sti
scas
sbb
cli
mov
ja
and
add
aad
xor
cmp
adc
fcmovne
jl
jge
adc
outsl
sub
lret
nop
push
jl
xchg
ds
jo
shll
ljmp
in
adc
add
inc
push
jae
int
pop
outsb
loope
adc
rcrb
iret
enter
sbb
adc
fists
and
lds
addr16
sub
push
push
dec
and
push
add
enter
andb
xorl
inc
mov
cmp
data16
lods
jp
test
mov
xor
or
mov
add
out
lods
sub
popa
xchg
aaa
xchg
or
xor
cli
iret
mov
and
push
subb
cld
jl
mov
out
sub
inc
outsl
insl
stos
push
mov
cmp
loopne
in
xor
mov
xchg
pop
inc
movsb
mov
adc
xor
lcall
and
add
out
aad
inc
sti
pop
movsl
int
fdivl
rcrb
xor
pop
pop
sbb
shlb
push
dec
enter
mov
cs
repz
aas
dec
dec
sbb
add
js
ss
cmpsl
adc
add
push
xchg
stos
xor
xchg
imul
jnp
gs
lods
enter
fwait
dec
jp
mov
and
adc
and
imul
in
dec
sbb
popa
pop
pop
cwtl
cmpsl
adc
inc
cwtl
mov
pop
cld
push
adc
insl
and
push
fidivs
imul
dec
xor
adc
mov
test
cmpsb
add
outsl
xchg
pop
and
push
cmp
andb
push
aad
sub
cmc
inc
or
out
std
mov
icebp
cmp
and
repz
ljmp
cmpsl
xor
pop
cmp
inc
jnp
in
xorl
insl
ss
scas
pop
push
mov
test
divl
je
call
xor
insb
sub
mov
cmp
cltd
leave
mov
adc
cmc
xor
xlat
loop
cmc
xchg
sbb
fstpt
jo
mov
cwtl
cmpsl
out
aam
push
jno
roll
mov
popf
mov
cmp
jl
divl
lret
lcall
movsl
push
insl
adc
ret
and
mov
or
mov
dec
inc
jbe
push
adc
or
jnp
loopne
add
ja
and
in
inc
std
out
testb
jne
inc
popl
xor
out
daa
adc
pop
xchg
stos
mov
mov
pop
lock
cmp
jg
xor
push
xchg
gs
cmpsb
out
or
sarb
out
subb
dec
in
push
pop
sbb
push
inc
pusha
lods
mov
sub
xchg
adc
iret
js
xchg
and
lods
andl
lea
repz
and
imul
fwait
push
mov
mov
push
mov
mov
aas
adc
mov
add
adc
cmp
push
addr16
imul
lcall
mov
mov
jbe
out
lret
aaa
in
enter
inc
ret
lea
ret
add
and
mov
sbb
sub
popa
pop
mov
adc
lds
dec
ffreep
add
lret
inc
js
xchg
hlt
push
lea
mov
cmp
pop
or
add
pop
push
loopne
lret
adc
mov
leave
jp
or
rcrl
pop
jmp
in
mov
dec
or
push
push
push
cltd
cmpsl
popa
add
cmp
les
inc
sahf
inc
insb
push
mov
pop
out
lahf
jp
push
adc
inc
data16
addr16
hlt
pop
test
out
sub
repz
popa
aaa
mov
movsl
in
or
scas
or
pop
iret
push
fdivrs
lds
stos
mov
add
stc
mov
and
cli
jae
dec
jo
cmp
mov
fisubl
jbe
cs
mov
or
lret
jo
jbe
mov
insl
imul
leave
xlat
scas
sti
push
stc
cmc
clc
aaa
mov
addb
scas
push
rorl
cmp
fwait
iret
jmp
aad
push
push
mov
jbe
aaa
outsl
dec
mov
jnp
xchg
sbb
mov
dec
push
mov
inc
lods
cmpsb
mov
push
sub
movl
sbb
push
dec
adc
adc
xor
outsb
test
xor
out
test
and
mov
ret
adc
cli
jae
mov
sub
xchg
imul
daa
xor
loopne
dec
mov
pop
test
sbb
xor
xor
adc
bound
in
addr16
add
sub
push
jle
inc
inc
rol
mov
mov
jne
push
in
push
clc
sub
xor
adc
adc
xor
rclb
and
outsb
adc
sub
cmpsl
pop
xchg
adc
xchg
push
sti
rcrl
inc
add
js
pop
xchg
push
lcall
popa
push
into
mov
sbb
imul
push
scas
sub
sbb
inc
insb
and
ret
jns
adc
call
xchg
rorl
in
xchg
pop
push
lock
jl
push
les
adc
out
movsl
rclb
in
inc
sbb
adc
dec
lret
xchg
add
mov
pop
sarb
mov
movl
lcall
imul
mov
xchg
ret
cwtl
movsl
mov
dec
cmp
and
insb
insl
mov
es
negl
add
push
push
std
xor
xor
rorb
adc
arpl
test
ja
jbe
ficoms
lret
mov
and
dec
sub
out
pop
ds
insl
lock
lods
imul
adc
mov
cmp
jp
out
in
mov
or
imul
aas
push
outsl
or
xor
popa
daa
adcl
fimuls
mov
jb
loopne
lcall
pushf
inc
jle
loope
mov
sti
movsl
push
not
xchg
xor
xlat
in
out
pop
mull
sbb
jno
iret
pushf
mov
ja
mov
push
push
repnz
data16
dec
fimuls
hlt
lcall
repz
sbb
jp
arpl
adc
xchg
inc
movsl
fwait
add
int
ret
jae
jb
cwtl
xor
add
pop
leave
in
and
adc
fdivrs
mov
inc
xchg
pushf
imul
rorb
dec
mov
xchg
jge
jmp
push
clc
lret
push
movsl
shlb
out
insb
cmc
xchg
mov
cmp
fadds
rorl
jmp
shr
and
inc
ret
scas
xor
decl
popf
cmpsl
pushf
sarl
ret
lret
mov
call
mov
sub
aas
cltd
or
mov
stos
xor
xchg
mov
push
jo
adcl
xchg
mov
in
inc
ljmp
and
aaa
cmc
fisttpll
push
movsb
jmp
inc
sub
jns
in
pop
int3
lods
dec
test
ljmp
fdivp
ret
xor
xor
movsb
scas
ficompl
jmp
imul
je
in
js
popa
jns
xchg
cmc
push
lret
add
xor
insb
adc
int
daa
roll
aam
packssdw
insb
mov
aad
cmp
jle
aad
mov
sbb
data16
add
frstor
jb
enter
inc
in
dec
push
sub
inc
inc
mov
leave
fstps
jmp
int3
in
iret
inc
cli
inc
cld
dec
lods
in
pop
leave
jecxz
adc
adc
sbbb
push
pop
shrl
fdivl
mov
xor
xor
push
test
loop
xlat
sub
cmpsb
lret
and
clc
mov
sbb
popl
ja
outsb
sub
std
stos
cmp
jae
sbb
in
imul
push
cmpsl
lcall
cmpsb
scas
ljmp
cmp
cmp
lods
and
mov
or
test
mov
cs
movsl
xor
jge
xchg
ljmp
out
aaa
in
lods
inc
scas
fldenv
sbb
mov
in
scas
dec
test
test
int
mov
mov
xor
mov
jne
int3
sbb
popf
data16
xchg
nop
outsl
daa
lcall
imul
es
mov
imul
cs
mov
push
mov
push
mov
mov
mov
pop
lock
and
addr16
test
in
pop
add
rorb
add
pop
push
ret
icebp
pop
scas
add
adc
loopne
cmpl
mov
les
mov
mov
or
jno
or
test
lret
and
loopne
mov
mov
xorl
loop
stc
lahf
inc
mov
and
lcall
mov
ds
and
int
test
xor
movsb
xchg
xor
mov
lahf
clc
add
scas
stos
cmpsl
xor
cmp
dec
add
stc
stos
mov
outsl
push
adc
cs
test
aaa
xlat
jno
lret
push
inc
mov
cmp
lods
cmp
jo
fadd
clc
jle
roll
mov
test
cmpsb
xor
andb
cltd
jns
in
aam
sbb
fbld
andl
insb
bound
shrb
jp
push
push
cmp
divl
out
cwtl
mov
iret
add
stc
adc
imul
jecxz
aam
repnz
jne
push
jbe
and
mov
pushl
mov
mov
stos
frstor
cli
pop
fucomi
cmp
xlat
jmp
cmpsb
cltd
add
cli
dec
jno
jmp
sbbb
or
mov
movups
outsl
mov
lcall
adc
fisttps
or
dec
pusha
jle
insl
push
sub
and
shrl
shll
inc
in
mov
sbb
mov
imul
imul
leave
xchg
scas
xor
in
inc
cmp
push
pop
cmp
stos
iret
mov
xchg
push
mov
dec
sbb
dec
jle
daa
fisubrl
push
cmp
in
mov
ljmp
and
jno
lea
pop
lock
mov
jo
nop
mov
outsl
dec
inc
add
dec
notl
js
movsl
mov
add
cmp
sbb
rcrl
loopne
cmp
outsb
push
and
xchg
lds
scas
cmp
fs
push
ret
icebp
mov
sub
xlat
lret
add
fsubrs
lretw
cs
les
stos
out
jns
test
bound
repnz
mov
mov
push
iret
test
retw
xchg
fsubrl
jmp
inc
xor
test
cmp
das
push
idivb
jecxz
aad
pusha
cld
movsb
jl
add
xchg
movsl
sbb
shrl
jne
xchg
fstps
adc
mov
testb
and
ljmp
mov
icebp
ljmp
shlb
int3
faddp
push
icebp
test
push
fs
lcall
pop
test
leave
or
dec
ret
pop
mov
daa
pop
pop
mov
pop
jl
mov
jae
jg
scas
call
xlat
arpl
cld
jge
mov
sub
lock
pop
in
gs
mov
daa
xor
adc
mov
data16
jne
add
jle
jg
xor
in
jae
ret
adc
movsl
loopne
ljmp
loope
lahf
cmp
ja
es
lea
sbb
int3
jecxz
xchg
cmp
xor
test
mov
fisttpl
sub
inc
fxch
mov
out
mov
stos
inc
add
ror
stc
dec
push
xor
movsl
fsubs
rorb
aas
adc
test
pop
adcl
mov
imul
adc
mov
shl
mov
xchg
cmp
out
add
cmp
mov
jg
rolb
xor
outsl
inc
and
xor
mov
pop
adc
mov
cmp
adc
adc
pop
fcompl
mov
loope
mov
jb
out
adc
mov
jp
test
mov
ljmp
jl
mov
push
mov
iret
in
movsl
shr
fsubrs
fldt
cli
nop
test
fdivp
mov
pop
arpl
cmp
pop
imull
cltd
adc
push
push
and
cltd
popa
xor
das
scas
and
sub
or
push
leave
adc
mov
roll
das
sub
add
mov
pop
inc
and
pop
test
stc
pop
dec
pop
mov
iret
dec
lea
imul
es
inc
loopne
cmp
das
pop
dec
insb
cli
inc
ss
and
decb
leave
mov
mov
xorb
mov
inc
sbb
shll
movsl
mov
xchg
fsubs
movsb
icebp
lahf
inc
mov
sti
stos
outsb
jge
popa
es
pop
mov
cmp
xchg
push
adc
push
pop
aaa
fbld
dec
imul
ss
and
dec
insl
push
pop
cmp
roll
sarl
std
rolb
inc
xor
jmp
pop
or
push
push
cmc
das
or
sbb
imul
stc
xchg
pop
dec
das
cltd
inc
jecxz
icebp
push
ret
fsubrs
cltd
sarb
and
xor
ljmp
lcall
push
ret
movsb
mov
inc
xchg
enter
notl
loop
push
xor
pop
lds
sub
ds
xor
rorl
sti
iret
jp
aas
push
lahf
ret
mov
mov
pop
mov
pop
ds
pop
jb
mov
clc
sahf
fldcw
mov
ds
jbe
xchg
ds
sub
xor
mov
pusha
movsb
sti
outsb
mov
add
inc
lret
dec
sub
mov
out
outsb
mov
inc
mov
inc
icebp
ja
sub
jp
into
jae
ljmp
lds
aas
lods
and
xchg
les
out
aam
mov
fstpt
xchg
sti
inc
lock
sbb
jp
icebp
sbb
push
pop
mov
ficomps
sub
divl
out
in
add
imul
out
test
xchg
stos
sub
jo
subl
loop
pop
lahf
mov
arpl
xchg
pop
cmp
xchg
mov
in
add
jge
test
daa
insl
pop
and
jl
mov
push
subb
mov
dec
popf
dec
jg
cwtl
jo
lods
cmc
fistpl
iret
jne,pt
inc
or
sti
test
cmp
xor
pop
inc
inc
dec
std
sub
push
jns
pop
jg
lock
shlb
je
cmp
pop
adc
push
jns
and
jecxz
jle
mov
lods
mov
mov
in
push
lahf
sbb
sbb
xchg
xchg
fidivl
les
push
lods
jge
gs
iret
addr16
je
jne
arpl
sub
popl
int3
jnp
cli
xchg
dec
ljmp
sbb
outsb
lret
push
testl
mov
sbb
sahf
adc
cwtl
mov
push
fwait
test
sahf
movsb
push
add
adc
cmp
shrb
cs
std
mov
mov
push
shl
out
sarl
je
jns
mov
das
lods
dec
sti
not
out
test
cmc
and
idivb
xchg
les
ljmp
fs
fwait
xor
dec
out
cld
and
outsl
rcr
lods
mov
cmp
sub
mov
pop
ret
sbb
lea
xchg
ret
jg
std
shll
mov
xchg
jmp
cmp
stc
fimull
movsl
xchg
inc
lock
iret
cmpsl
iret
rol
or
xchg
rclb
xchg
out
fcmovb
sub
pop
ror
dec
push
push
or
adc
push
fsubrs
bound
popf
ds
bound
xchg
mov
cmove
mov
add
push
test
icebp
cwtl
mov
xchg
out
mov
mov
push
add
mov
dec
sbb
aaa
pop
inc
dec
test
or
pop
nop
lock
push
ljmp
lock
add
jmp
pushf
ja
mov
and
sub
fidivrs
fs
dec
adc
adc
xor
dec
test
pop
push
test
push
or
sbb
sahf
ret
es
iret
mov
fld
iret
add
inc
ljmp
or
sbb
sub
cmpsb
fstl
stos
in
test
enter
repnz
adc
insl
out
insl
sbb
bound
jb
test
stc
dec
fwait
inc
fstp
into
dec
sbb
jns
in
xchg
mov
pop
xor
stos
cmpsb
sbb
imul
xchg
sbb
mov
icebp
cs
scas
icebp
int3
xchg
repz
inc
adc
mov
imul
xchg
pop
jo
mov
std
ja
jns
insb
lds
and
enter
ja
movsb
pop
and
sti
mov
dec
xor
test
scas
mov
sahf
in
decl
sbb
push
pop
jno
pop
pushl
push
bound
and
and
pop
add
inc
xchg
fadd
jg
out
cltd
xchg
or
cmp
sub
pusha
lcall
std
pop
fidivrl
mov
fsts
pop
cmpsl
es
mov
sbb
data16
jns
fsubr
es
pop
test
sbb
outsb
dec
mov
stc
pusha
cld
rorb
jle
ja
sti
push
mov
cmpsb
sub
mov
das
mov
cmpsl
pop
inc
add
or
int3
jge
sarl
adc
and
xchg
adcb
hlt
xchg
aam
fld1
adc
fldenv
sbb
jg
bound
mov
mov
dec
addr16
decb
sub
loope
sbb
pop
sub
inc
push
mov
cli
push
pushf
xchg
jmp
sub
imul
dec
ss
decb
pusha
pop
int
xor
mov
in
push
mov
clc
andl
and
pop
mov
sbb
or
jmp
cmpsb
or
test
nop
aad
xor
cmp
adc
pop
stos
testl
iret
in
mov
push
lret
icebp
jmp
xor
mov
push
popa
or
insb
jle
sbb
push
add
sarb
divl
xchg
inc
pop
jecxz
jbe
push
cmp
or
out
cmp
out
stos
sbb
dec
jmp
popf
jmp
orb
outsl
aaa
cmpsl
pop
dec
adc
mov
xchg
daa
xor
inc
and
sbb
fisttps
sbb
in
cmp
leave
inc
fs
jmp
clc
ljmp
cwtl
and
xchg
push
rolb
rcl
cltd
test
and
fmuls
or
dec
jle
pop
mov
outsl
push
mov
xchg
stos
mov
sub
int3
fstpt
pop
decl
jmp
and
mov
int
pop
pop
inc
adc
enter
add
mov
sbb
pop
mov
lcall
jne
mov
filds
cmpsb
sahf
or
stc
jg
jg
dec
sbb
das
ret
mov
add
push
pusha
inc
jge
lret
mov
ror
pushf
loop
lock
pop
mov
out
in
mov
sbb
imul
in
shll
or
jge
inc
popa
jge
push
jecxz
xchg
push
es
push
mov
add
dec
data16
testb
in
xor
imul
mov
dec
sub
mov
outsb
and
xchg
mov
push
xor
rclb
mov
adc
add
push
pop
adcb
sub
mov
ss
inc
les
xchg
out
mov
mov
jno
and
aaa
clc
inc
and
hlt
lock
mov
hlt
loope
push
push
cwtl
stc
fdivrs
add
adc
mov
mov
and
mov
jmp
mov
adc
jl
sbb
andl
xchg
sub
inc
lret
loop
dec
xchg
fs
cmpsl
rorl
push
test
hlt
mov
rcr
or
push
jle
inc
sbb
pop
clc
dec
je
lods
or
mov
ss
les
xchg
push
xchg
sub
jne
cmp
iret
cwtl
lds
xor
inc
xchg
je
dec
insl
mov
push
cmp
xchg
fnsave
test
xor
xor
ljmp
sub
mov
inc
sbbb
scas
daa
cmp
imul
sub
sbb
sub
lea
jne
mov
sub
call
dec
dec
lock
jnp
outsb
mov
int3
cmp
or
sbb
fs
cltd
lret
and
test
push
add
lcall
in
pop
push
jae
add
xchg
aad
arpl
sub
adc
jo
shrl
loop
cmp
sbbb
jp
push
int3
pop
jmp
adc
lret
lds
aas
int
add
data16
test
push
xchg
les
nop
xlat
dec
xchg
je
lcall
shl
dec
loopne
sarl
push
ret
scas
inc
add
push
incl
sub
clc
daa
mov
sbb
int3
sbb
push
insb
fwait
imul
cmp
cmp
pop
adc
orb
and
ss
lahf
and
and
lds
or
in
nop
push
cmp
xchg
dec
icebp
ret
mov
lret
lahf
jmp
add
ljmp
sbb
inc
xor
rcl
int
insl
mov
lea
add
mov
cld
pushf
outsb
mov
cld
lods
ret
scas
push
dec
stos
rcll
outsb
xchg
pop
jb
pop
divb
cwtl
mov
xchg
adc
shl
out
fldl
aad
mov
popf
sub
imul
sbb
sbbl
cmpsl
lds
or
mov
mov
in
pop
pop
jns
sbb
jbe
ja
aam
mov
fisttps
inc
pop
xchg
aas
sbb
loop
roll
orl
aaa
arpl
add
dec
mov
scas
dec
sti
xchg
cs
sbb
push
outsl
dec
xor
test
icebp
fildll
mov
mov
data16
cmp
push
in
or
mov
jmp
loop
mov
adc
adc
aaa
add
dec
sbb
cmp
jno
dec
xchg
les
fdivr
rclb
rcrb
insb
pop
js
sbb
ret
pop
or
aad
fs
and
push
enter
shrl
sbb
insl
inc
int3
inc
insb
std
or
lds
int
mov
mov
pop
pop
sbb
pop
adc
aaa
mov
dec
imul
insb
sbb
dec
mov
cmp
sub
jp
jmp
mov
pop
and
pop
lret
xor
add
xchg
outsl
pop
or
fdivs
aam
stos
pop
sub
lahf
mov
fs
push
xchg
cmp
xchg
or
push
aad
in
pushf
outsl
sub
cmp
test
fwait
add
inc
pop
divb
movsl
jb
imul
dec
int
imul
into
sub
std
ret
add
in
push
clc
inc
adc
mov
lock
inc
pusha
insl
xchg
sub
cwtl
lods
push
into
mov
and
aaa
adc
jg
push
or
leave
lea
sahf
push
in
push
dec
ret
pop
or
add
and
insb
arpl
fsubr
and
decl
mov
add
in
adc
mov
and
xchg
xchg
sub
outsb
dec
adc
xchg
mov
xor
clc
inc
shlb
jmp
xchg
aad
jbe,pt
pop
nop
cltd
shl
cmc
sub
sbb
fstps
and
and
xor
iret
xlat
or
inc
jbe
push
mov
or
stos
xchg
mov
cmp
xchg
sbb
jb
mov
xor
jbe
cmc
movsb
mov
cmp
jmp
sub
imulb
loope
idivl
int3
xchg
arpl
mov
clc
enter
add
mov
in
bound
shll
ss
mov
inc
jp
in
xchg
mov
and
or
dec
pop
xchg
std
leave
inc
movsb
or
add
ljmp
iret
push
out
or
push
push
andl
inc
pop
xor
outsl
fsubr
sub
dec
imul
pop
cli
inc
push
jl
fnstcw
xchg
jg
mov
inc
add
jl
mov
mov
repnz
stos
rol
inc
inc
xchg
leave
mov
adc
mov
gs
arpl
jp
mov
jno
xor
mov
jnp
leave
iret
lahf
cmp
fsubl
test
cmpsb
pop
test
mov
xchg
add
mov
stc
mov
stc
call
loope
aas
out
xor
xor
loope
inc
mov
pop
jae
lock
in
jns
push
je
jne
pop
ljmp
mov
in
pop
test
ja
aam
mov
push
ret
orl
shrl
insb
aad
xchg
xchg
sahf
sbb
adc
jge
push
fwait
xchg
and
lret
pop
mov
jo
lea
dec
jp
mov
pop
test
dec
jecxz
dec
jl
xchg
cmpsb
inc
mov
cmp
insb
inc
mov
jge
and
xor
mov
fdiv
pop
push
xor
out
fnstenv
push
mov
scas
dec
sbb
mov
mov
arpl
hlt
outsl
or
pusha
in
in
sub
pop
xor
mov
clc
cmp
push
loope
daa
ret
jae
clc
call
mov
in
jle
inc
xchg
sbb
pop
hlt
fcompl
ss
mov
mov
aam
stos
or
cmc
push
xchg
pop
pop
jp
int
addb
gs
cltd
test
dec
stos
fisubrs
shrl
xchg
push
inc
into
mov
and
and
sbb
push
cmpl
mov
xchg
mov
cmpsl
leave
cmp
addr16
mov
icebp
sti
leave
adcb
dec
mov
or
jbe
push
xor
xor
add
fisubrl
insl
push
mov
xor
and
cltd
xchg
push
push
imul
xor
and
fcompl
int
jb
js
ja
push
call
loope
mov
push
pop
xorb
out
lcall
and
dec
fstl
nop
mov
daa
xor
test
fs
enter
cmc
or
pop
and
pop
push
pop
dec
mov
xlat
andb
idiv
divl
and
jecxz
pushf
cmp
fimull
imul
fs
pop
jb
stos
jp
pop
xchg
cmpsl
fwait
mov
popf
clc
or
mov
push
cmp
adc
pop
scas
outsl
fcomps
dec
mov
sub
std
push
mov
mov
mov
negl
pop
jae
std
mov
inc
in
mov
xchg
add
test
pop
cs
mov
std
xchg
test
test
lea
out
scas
push
adc
mov
fnsave
aas
pop
sbb
les
inc
loope
int
xchg
xor
mov
test
sub
std
fisttpll
vpaddsb
pop
inc
jb
dec
pop
ret
pop
push
jno
out
xor
sbb
and
push
sbb
call
xchg
dec
jecxz
jl
jo
and
mov
int
xchg
enter
aaa
popa
lret
leave
sbb
outsl
xorl
sub
dec
pop
ljmp
cmp
jl
leave
pop
sar
arpl
jge
sub
mov
push
jne
push
lahf
pop
adc
xchg
pop
imul
movsb
pushf
and
test
ret
mov
adc
push
inc
push
js
movsl
std
add
sub
sub
repz
sahf
pop
jae
cmc
pop
mov
data16
cmp
rorb
jae
ljmp
rolb
cmp
popl
into
cmc
jg
mov
subb
leave
sub
fsubl
cmpsb
bound
fldt
movsb
out
sub
or
js
inc
int
cmp
aad
arpl
xchg
cmp
out
adc
adc
xor
jae
scas
mov
xchg
out
into
or
je
dec
lret
popf
and
rorl
add
nop
mov
push
add
lahf
in
lock
std
test
fs
mov
enter
mov
addr16
jnp
shrb
push
push
test
sahf
mov
sbb
mov
idivl
mov
mov
adc
inc
mov
push
icebp
jmp
mov
push
test
xchg
dec
cmp
test
xchg
cmovg
inc
xor
sub
mov
push
inc
ljmp
cmpsl
xor
rorb
mov
cmpsb
lcall
add
cmp
scas
out
mov
int3
inc
pop
fidivrs
sahf
gs
jno
push
movb
subl
sbb
test
test
sbb
xor
fistl
sarb
daa
lret
inc
out
mov
call
mov
dec
mov
pop
in
nop
xchg
mov
dec
stc
fwait
sbb
sbb
xor
pop
aam
push
ret
add
jg
adc
dec
dec
push
pop
pop
imul
inc
mov
test
push
adc
ss
jbe
fdivl
pop
jb
xchg
pop
fadd
cltd
xchg
jno
jge
cmpsl
xchg
xor
aam
dec
jne
incb
das
jbe
push
push
sbb
ret
add
shlb
pop
out
iret
outsl
ds
out
leave
mov
lcall
test
jp
stos
xor
pop
add
sbb
adc
push
fadd
jp
js
test
adc
jnp
cli
xchg
shlb
add
sbb
stos
jle
imulb
popa
bound
push
and
cmp
cltd
int3
xchg
adc
test
int3
add
es
add
jmp
sarb
dec
pop
inc
int
jmp
jo
jecxz
fs
add
jbe
ror
mov
mov
xchg
xor
add
fs
cmp
push
pop
lret
sbb
push
mov
insl
cmc
scas
ret
cmc
push
cmp
in
mov
add
inc
inc
push
sbb
jecxz
pop
mov
sbb
sub
lcall
cmp
sbb
xchg
idivl
cmpsb
movb
push
iret
or
inc
jmp
push
push
jnp
gs
jle
jns
add
scas
mov
in
and
roll
add
xlat
add
xchg
nop
js
mov
push
stos
es
idivl
fwait
xor
arpl
inc
xchg
xor
xor
iret
into
pop
mov
jl
jne
fwait
xor
ret
xor
xchg
push
cld
mov
inc
in
js
and
dec
sub
jae
iret
sub
add
dec
pusha
ficomps
jecxz
xchg
mov
out
mov
cld
adc
neg
je
std
ret
jae
jbe
das
mov
sbb
sub
jo
mov
cmpsl
test
and
cmp
addr16
lcall
aad
inc
sub
sbb
dec
xchg
sub
jecxz,pt
out
stc
outsl
clc
or
ss
fcmovnb
gs
nop
sub
je
pushf
add
add
enter
and
cli
mov
das
mov
inc
mov
cld
les
out
pop
add
cmp
ret
roll
dec
cmpsl
iret
stc
cmp
add
mov
aas
xor
cmp
push
repz
lock
mov
sarb
lret
andb
cmp
stc
pop
lea
ljmp
stos
cmp
xor
mov
mov
cs
cmp
push
fwait
je
ja
rorb
out
xchg
sahf
ljmp
cmp
lcall
pushf
cli
jne
push
xlat
pop
jge
imul
lods
sbb
cmpsb
sti
addr16
push
inc
push
pop
and
dec
lods
dec
add
loope
add
dec
iret
and
call
in
movsb
add
mov
and
je
popa
iret
adc
icebp
mov
out
adc
enter
jno
ret
sbb
push
repz
sbb
mov
outsl
mov
mov
pop
mov
fs
mov
mov
aas
out
fstpt
pusha
mov
lods
test
pop
push
outsl
jl
in
leave
add
adc
scas
imul
inc
scas
insb
in
lea
add
xchg
dec
cmpsb
out
inc
dec
pop
cltd
arpl
mov
sub
mov
sbb
insb
and
push
cmp
sbb
mov
nop
cs
inc
dec
push
outsb
or
je
sub
mov
jb
mov
and
dec
add
or
fisttpll
push
cmp
mov
aad
das
fidivrl
push
and
mov
jb
mov
pop
addb
fiaddl
dec
imul
pop
out
iret
push
cs
imul
xchg
inc
idivb
mov
into
jmp
lods
cmp
mov
fimuls
out
push
cmpsl
xchg
xlat
pop
dec
subl
mov
lods
nop
cltd
movsl
imul
jmp
mov
gs
inc
loop
aad
cwtl
push
lds
call
mov
movsb
aas
or
mov
in
inc
jnp
lods
in
aam
mov
dec
xchg
and
aam
sub
pop
nop
pop
lcall
adc
push
in
xchg
adc
sbb
in
imul
dec
dec
cmp
jne
mov
addb
ss
hlt
jne
pop
leave
jbe
int
and
dec
fwait
xchg
pop
xor
bound
jne
mov
jbe
and
fisttpll
or
ja
loopne
adc
and
sbb
fwait
xchg
movsl
jecxz
pop
fiaddl
adc
call
xchg
jno
push
les
dec
aam
jp
lret
and
sub
dec
xor
popa
ret
inc
pushf
test
aaa
int
bound
out
dec
fwait
mov
rcll
pop
jbe
inc
push
enter
ljmp
roll
sub
lcall
xor
in
sub
scas
outsb
popa
shl
lods
sbb
mov
xchg
inc
cmp
mov
push
mov
rolb
and
cmp
push
pop
adc
icebp
adc
sub
add
lcall
xor
rcrb
push
mov
push
pop
inc
cli
push
xchg
cmp
lcall
pop
aam
lds
pop
insb
movsl
pop
dec
xchg
faddl
aaa
leave
les
icebp
lahf
sbb
ss
mov
mov
mov
xor
xchg
mov
cltd
dec
or
add
adc
and
mov
enter
cmp
push
fsubrl
inc
mov
jecxz
mov
je
mov
jb
arpl
mov
out
ss
loopne
sbb
scas
jne
mov
dec
dec
and
test
test
out
sti
adc
ljmp
shrl
in
lods
push
adc
and
mov
inc
dec
mov
clc
dec
mov
mov
ja
and
mov
xor
dec
enter
xchg
push
inc
test
dec
adc
nop
mov
daa
stos
frstor
push
dec
pop
push
repnz
mov
ljmp
mov
ljmp
jae
jmp
es
pop
jp
jg
shlb
cmpsb
jge
pop
sub
popa
repz
fisttpl
sti
sub
xchg
push
cld
ds
jl
cmpsl
inc
ja
insb
mov
jbe
ds
push
imul
lret
stos
mov
out
xchg
rorl
mov
cwtl
mov
cmpsb
pop
fidivrs
xor
cwtl
fidivs
loop
ficoml
adc
std
or
and
jl
or
add
ljmp
loop
notb
and
std
lods
out
jmp
insb
pop
test
inc
in
mov
icebp
stc
dec
mov
add
push
insl
inc
inc
imul
cli
fisubs
divb
push
repnz
or
adcl
xlat
add
lret
cld
fildl
or
data16
dec
jg
aad
xchg
cmpsl
shrb
aad
fcmove
dec
scas
inc
inc
mov
icebp
repz
in
inc
lcall
aam
icebp
outsb
int
mov
push
inc
das
lods
loopne
fs
icebp
dec
shlb
out
inc
or
in
es
mov
push
and
mov
pop
stos
insb
cmp
and
cmp
fnsave
pop
mov
out
lahf
inc
stos
cmpl
rclb
out
outsl
pop
xor
or
add
lret
jb
sbb
insl
and
cli
jle
push
int
vphaddubq
inc
popa
add
lds
mov
push
pop
cmp
sbb
push
add
pop
fwait
lret
popa
lock
les
inc
and
int
mov
fucom
popa
add
xor
pop
or
mul
fldcw
gs
dec
mov
pop
sar
dec
push
jge
call
lea
aam
inc
into
fcmovbe
insl
leave
ljmp
loopne
test
pop
icebp
and
aad
movb
or
pop
stc
push
sbb
rorl
xchg
jle
aaa
mov
mov
jp
mov
fnstsw
sbb
cmp
mov
ficoml
out
dec
jbe
adc
adc
arpl
les
inc
mov
loopne
jmp
imul
mov
ljmp
insl
repz
vmwrite
adc
mov
ds
vpsubusb
mov
lcall
lock
ficoml
ljmp
inc
pop
repz
push
cs
arpl
push
mov
pop
dec
or
mov
or
cmp
xchg
sbb
cli
or
std
subl
push
lret
sub
scas
inc
sub
sbb
loope
push
orb
aas
or
scas
fstps
ljmp
sub
and
inc
sub
mov
xchg
test
push
stc
cmp
out
mov
shrb
pop
mov
mov
cmp
sub
stos
sbb
out
nop
pop
std
cmp
inc
into
jg
mov
lds
fsubl
push
leave
sub
xor
xchg
mov
mov
push
icebp
adcb
adc
aam
lds
xchg
pop
push
je
or
cmpl
dec
push
cmp
enter
dec
insb
cmp
popa
sbb
and
add
dec
addr16
lret
push
es
push
call
jge
push
mov
mov
mov
mov
dec
rclb
cwtl
or
sbb
xor
fs
push
inc
sub
inc
push
rclb
repz
inc
imul
insl
arpl
mov
outsb
es
call
mov
mov
mov
aad
jmp
and
pusha
mov
and
adc
adc
rcll
jg
imul
jne
mov
dec
call
stc
mov
outsl
push
or
pop
push
jmp
je
fdivrl
xlat
pop
inc
and
push
mov
jne
sub
or
adc
inc
dec
nop
xchg
add
add
push
pop
ljmp
cmc
adc
jb
imul
iret
stc
push
sarb
jge
icebp
jno
arpl
lods
fdivr
aaa
addr16
ret
movsl
subb
aas
push
lods
mov
orb
inc
mov
test
mov
aad
dec
ljmp
shll
notl
enter
insl
jne
aaa
sbb
test
shlb
icebp
lock
push
arpl
call
add
mov
cmpsb
and
jle
cmpsb
adc
ljmp
mov
adc
cmc
iret
adc
push
shll
adc
roll
dec
ss
mov
adc
out
jl
outsb
jge
pop
dec
adc
mov
jecxz
push
adc
inc
xchg
cmp
lods
mov
out
shrb
adc
aaa
popf
pop
insl
adc
aad
enter
icebp
push
xor
addr16
and
xor
jecxz
aaa
icebp
or
and
or
addr16
jmp
aad
int
loopne
push
movsb
dec
std
enter
orb
addr16
cwtl
dec
xchg
jmp
enter
outsl
mov
xlat
cmp
push
pop
jbe,pn
insb
lods
stos
mov
popa
out
inc
dec
jb
ljmp
sbb
cmc
jns
pop
or
andl
mov
xchg
fcmove
jno
sbb
xlat
xor
add
push
jg
jne
out
lret
adc
mov
cltd
push
pop
test
iret
mov
cmpsl
movsb
adc
fldt
add
inc
mov
cld
and
aaa
popa
or
push
clc
lods
add
adc
or
push
mov
bound
xchg
sbb
sbb
push
orl
adc
cmp
push
das
je
mov
ss
push
movsl
ljmp
shrb
and
stc
lds
fsts
flds
jge
sub
push
bound
es
fnstcw
mov
popw
mov
jno
cltd
notb
cltd
push
mov
dec
add
insb
xor
dec
adc
mov
in
push
mov
dec
mov
xor
inc
sub
xchg
mov
or
pop
jns
fiaddl
dec
sti
test
lods
mov
sbb
repnz
out
add
out
mov
nop
xor
and
mov
sub
gs
cli
iret
push
fldcw
stos
adc
cmp
xchg
xor
adc
pop
out
pushf
adc
xor
das
push
dec
adc
sub
push
and
imul
mov
in
sbb
xlat
push
pusha
in
inc
dec
dec
leave
lock
sbb
xchg
mov
pusha
pushf
push
movsb
cmp
mov
fcoml
mov
mov
mov
aam
stc
and
outsb
cmpsb
inc
lock
repz
icebp
jmp
inc
jg
and
pop
enter
ror
adc
and
fmull
sbb
jns
iret
adc
shl
dec
scas
and
les
fcoms
xor
lret
mov
dec
in
or
outsb
jo
mov
fistpl
lock
mov
pop
lahf
inc
dec
jae
in
jns
pop
icebp
into
js
lock
pop
mov
stos
lahf
add
cmp
mov
fsubrs
daa
add
cmp
mov
mov
mov
lea
inc
inc
sbb
das
dec
ss
adc
mov
shll
cmp
xchg
fwait
add
inc
cmp
mov
stos
lcall
push
push
repnz
push
jge
insl
fcomps
jmp
xor
ds
xlat
sub
repnz
fistps
or
sti
xchg
sahf
iret
fcoml
arpl
insb
scas
xor
adc
mov
dec
push
rol
andl
or
push
lock
add
test
pop
nop
repz
xchg
lds
jne
cmova
mov
pop
pop
in
mov
clgi
cmp
push
sub
decl
in
out
push
stos
pop
mov
inc
les
dec
push
sbb
cli
js
out
mov
mov
mov
leave
sbb
inc
mov
stos
cltd
loope
test
int3
and
fidivrl
fistps
das
daa
stos
mov
ljmp
mov
dec
ds
or
xchg
subb
inc
fdivr
push
mov
iret
loop
jae
in
pop
ss
add
aaa
adc
rcr
enter
xchg
dec
pop
sbb
xlat
gs
cmp
cmp
jge
lds
jmp
addr16
sub
mov
push
loop
jnp
jp
ss
out
lahf
fucomp
insl
fdivrs
mov
pop
mov
into
sub
in
dec
xor
subl
in
mov
mov
rcll
enter
jbe
xor
sbb
xor
jns
mov
and
add
or
pop
fs
sub
dec
xlat
pop
xchg
addb
popa
or
adc
ljmp
push
dec
adc
mov
cmpsb
stos
jp
jle
mov
cmpsl
sub
int3
icebp
fmul
mov
xor
mov
mov
xor
es
insl
mov
dec
and
idivl
movsb
sbb
lods
push
inc
dec
xchg
test
popl
mov
cmp
inc
enter
mov
lahf
repz
int
aam
fwait
ja
mov
scas
enter
xor
xchg
sub
mov
icebp
es
and
stos
lock
push
data16
or
orb
push
mov
jae
dec
das
jmp
add
xorb
or
fsubs
jl
cs
jecxz
ja
cltd
lea
or
or
shrl
push
inc
jb
and
nop
sub
mov
popf
in
sub
and
loope
or
clc
mov
jno
sbb
dec
outsb
rorl
xchg
fcoml
out
enter
scas
adc
outsb
or
sub
xchg
pop
sbb
and
repnz
xchg
fidivrl
lds
movsl
imul
scas
loop
das
inc
mov
repnz
dec
pop
fdivrs
mov
rcr
push
out
das
iret
pop
mov
and
lods
mov
std
es
mov
sbb
cmp
mov
lea
mov
fistpl
sub
jg
jl
pop
mov
cmp
xchg
or
fistpll
xorl
imul
dec
xor
scas
mov
pop
loopne
hlt
icebp
rcll
imul
dec
mov
mov
xor
jmp
int
sti
fldl
mov
loope
inc
insl
cli
mov
push
mov
mov
jl
add
pop
sbb
outsl
dec
mov
xchg
pop
add
dec
inc
loop
or
stos
pop
sbb
or
add
mov
fistpl
pop
pop
int
jbe
out
fmulp
push
xchg
cmc
mov
mov
addr16
sar
rorl
loope
in
in
mov
jno
xchg
outsb
dec
pop
mov
jo
cwtl
cld
popa
jge
fstpt
pop
stos
mov
sub
rorb
rcll
push
xor
pushf
mov
sub
mov
ja
jo
cmpsl
jp
sbb
out
cmp
jno
cmp
sbb
pop
in
adc
cmc
out
jmp
ds
lods
mov
daa
jecxz
mov
and
cld
inc
inc
rcr
daa
pmaddwd
dec
adc
xor
faddl
mov
das
xor
cli
fs
jg
and
or
stos
call
xor
sbb
cwtl
sbb
testl
lahf
mov
pop
fstps
fs
jno
lods
dec
inc
nop
push
sbbb
insl
fisttps
xchg
xchg
bound
in
out
xor
outsb
jb
lods
pop
jns
xor
test
hlt
mov
shlb
fsubl
lea
fidivrl
sub
dec
push
daa
daa
fdiv
fwait
das
out
popf
and
dec
mov
sbb
insb
lock
int3
cmp
scas
fiaddl
rcll
int
mov
shll
mov
push
dec
xchg
cmp
fwait
xor
xchg
out
jp
and
ss
nop
in
mov
paddsb
stos
jmp
mov
scas
scas
pop
push
mov
popl
ss
cmc
push
jge
test
add
pop
cli
push
ret
movb
push
je
pop
mov
aas
and
jle
adc
dec
leave
les
rclb
popa
sub
mov
cli
cmp
icebp
cs
fwait
pushf
movsl
shl
mov
sbb
pop
cmp
jnp
pop
clc
movsl
or
push
xchg
push
cmpb
cmc
push
std
adc
loopne
push
fwait
mov
cwtl
jp
pusha
sahf
xchg
push
sar
and
inc
push
xor
imulb
push
dec
fistps
scas
push
inc
hlt
pop
repz
sub
mov
and
cmp
fildll
xor
inc
lock
mov
mov
mov
pop
lcall
rolb
adc
cmp
fsubrp
cmp
jo
adc
inc
push
jb
test
jle
xchg
jo
jecxz
ljmp
insl
mov
scas
sub
mov
mov
movsl
xchg
ja
inc
or
ficompl
fdivrl
cmp
rcrl
or
sbb
and
push
sbb
jae
pushf
cmp
loop
add
mov
lea
dec
sbb
subb
mov
in
jle
adc
dec
insl
jp
sti
popa
popa
cwtl
sahf
leave
mov
je
jp
pushf
subl
xchg
iret
movsl
pop
sub
mov
adc
mov
and
pop
std
mov
sbb
mov
or
out
rol
lahf
loope
into
out
sarl
mov
mov
push
pop
fs
stc
out
leave
xchg
outsb
shll
adc
mov
xorb
xchg
push
push
mov
xchg
jne
pop
inc
and
inc
fists
sbb
repnz
outsl
ret
fcom
dec
dec
test
cmpsb
hlt
pop
iret
aam
dec
loope
test
inc
insb
sahf
stc
pop
add
fdivl
mov
jne
jo
xchg
pop
mov
mov
scas
or
lret
pop
add
dec
out
dec
dec
jge
mov
sbb
pop
rcl
pop
lret
ds
push
imul
out
or
sbb
std
hlt
inc
sub
adc
pop
inc
sub
sub
pop
and
dec
dec
cmp
mov
shr
jmp
and
les
cmpsb
pop
adc
or
lcall
inc
push
jg
add
sbb
and
lds
cmp
cmp
xchg
jbe
cld
aaa
enter
aaa
jmp
sbb
das
imul
mov
mov
mov
cmpsl
imul
scas
pushw
sbb
jne
pop
arpl
push
ljmp
lods
sub
dec
imul
pop
dec
jge
f2xm1
mov
in
out
sub
cmp
ror
lahf
xchg
icebp
stc
lock
jp
sbb
or
push
outsl
sub
push
add
pop
cmpsb
push
push
adc
mov
sub
int3
mov
and
pop
mov
mov
mov
sub
cmp
in
mov
mov
push
mov
sbb
mov
lods
cltd
sub
adc
ror
inc
add
mov
pop
fwait
cwtl
jg
in
out
ss
loop
fldcw
es
and
cltd
mov
mov
pop
fsts
pusha
hlt
xchg
mov
and
les
std
dec
enter
sarb
insl
test
adc
fdivr
or
push
cs
adc
adc
and
inc
punpckhdq
jns
cmp
xchg
loop
cmp
mov
ja
sbb
dec
sub
sub
mov
xor
mov
push
fs
fsubrs
pop
jp
loop
xor
pop
jne
int3
cmp
out
mov
dec
insb
or
dec
jae
and
mov
mov
pop
xchg
add
adc
ss
sub
sub
neg
sahf
dec
mov
jle
in
testl
push
sub
aad
repz
adc
pop
ljmp
pushf
call
push
sti
mov
lahf
xchg
inc
adc
pop
lds
clc
lods
andl
int3
or
out
inc
inc
cwtl
push
call
add
and
push
dec
xchg
adc
dec
or
push
push
xorb
in
ds
int3
xchg
call
loopne
add
andb
xchg
rclb
xchg
and
xchg
ja
std
add
push
add
insb
jg
sbb
cli
or
dec
mov
lock
mov
ja
mov
xor
xlat
xchg
inc
push
cmp
add
sbb
xchg
mov
push
and
push
sbb
stos
mov
aad
sub
push
hlt
inc
addr16
bound
call
jbe
xchg
enter
in
das
mov
sbb
mov
dec
sub
movsb
lds
loopne
movsb
js
xor
fs
incb
outsl
icebp
inc
mov
lds
lods
mov
not
cld
es
lahf
and
clc
xchg
and
add
xchg
sahf
xchg
jge
cmp
push
cli
stc
jae
dec
inc
in
rorb
aad
jo
push
pop
outsb
inc
js
stc
xchg
je
xor
cli
bound
inc
pop
in
mov
inc
push
stos
jne
sbb
fstp
notb
imul
sub
push
cmpsb
or
cmp
xchg
cmp
xchg
popa
enter
pusha
movb
push
imul
leave
jl
mov
adcl
pop
xchg
adc
jl
push
sbb
dec
push
dec
mov
ljmp
ja
pop
or
pop
jne
in
mov
into
jb
xchg
into
loope
loopne
scas
mov
lods
or
ret
std
subb
adc
mov
stos
stc
sbb
push
mov
and
xor
push
add
dec
fs
in
rorb
cmpsb
mov
popf
pop
out
or
ret
push
and
int3
rorb
sub
sub
fcmove
int3
icebp
js
xor
leave
lcall
les
add
mov
ret
ffreep
std
out
xor
pusha
cmp
inc
ss
call
and
aam
ficoms
pop
shrl
cmp
daa
mov
jbe
inc
cmp
cmpb
test
jnp
bound
sub
out
xor
mov
loope
loopne
test
mulb
dec
out
rcr
push
push
and
ds
jns
dec
cmp
cmp
mov
xlat
cmc
dec
enter
cmp
and
pusha
out
sub
sbb
cmp
cmpsb
scas
xor
mov
leave
dec
xchg
cwtl
ret
fiaddl
loopne
adc
dec
testb
int3
sub
lods
adc
mov
mov
xor
push
mov
fsubrs
mov
push
push
sbb
mov
out
push
cmp
fcompp
inc
das
arpl
jae
pop
mov
lods
sub
lret
jnp
mov
lahf
jnp
push
lds
add
xchg
add
cmpsb
data16
jmp
in
xlat
test
xchg
mov
push
mov
int
xchg
in
xchg
xchg
data16
rol
jl
arpl
scas
pop
dec
and
push
mov
xor
adc
cmp
je
lahf
das
into
repz
xchg
idivb
insl
xor
xor
stc
repnz
pop
pop
and
adc
inc
mov
jecxz
cmc
or
xchg
jg
lret
nop
iret
add
lret
mov
lahf
pop
movsl
iret
cmp
sti
push
push
aam
incl
orb
add
pushl
in
daa
pop
xlat
aaa
std
push
cli
pusha
test
insl
xchg
cmpsl
xchg
in
iret
lahf
ss
jbe
call
jbe
jecxz
sub
data16
lods
leave
xor
pop
fistps
add
sbb
mov
lea
enter
push
pop
inc
int
pushf
push
xor
je
pop
inc
popf
pushf
mov
jno
adc
dec
xchg
jne
ja
pop
add
fdivrs
sti
xor
stc
add
and
mov
in
adc
inc
rolb
push
mov
sbb
aad
rorb
fwait
imul
mov
xchg
xor
pop
sub
and
mov
fimull
ficoms
mov
out
ss
enter
adc
xor
jmp
sbb
imul
pop
testl
xchg
mov
jae
add
jnp
mov
jno
stc
pop
outsl
rcll
mov
test
adc
and
hlt
cmp
cmpsb
scas
lds
in
insl
outsl
jae
push
add
ljmp
cmp
mov
push
js
xor
add
repnz
mov
mov
nop
cmc
rcll
mov
das
xchg
movsb
xchg
fdivs
mov
lds
dec
add
ret
mov
inc
fisttpl
or
fmuls
insl
sbb
mov
or
dec
sub
fdivl
xor
aaa
test
clc
mov
out
out
lahf
xor
daa
inc
lahf
add
push
in
inc
inc
jae
scas
add
les
cmpsb
test
into
lret
cmp
jmp
in
add
dec
jno
fidivs
and
stc
bound
pop
or
test
add
mov
enter
sub
or
std
scas
call
push
mov
imull
adcb
pop
push
or
rcll
lcall
movsb
popa
in
push
mov
sbb
xchg
pop
lds
cwtl
movsl
xchg
dec
push
movsb
adc
aas
mov
out
negb
adc
mov
fdivrl
or
and
shl
push
fwait
and
mov
cltd
sbb
outsl
pop
rcll
imul
mov
stos
je
xchg
push
jmp
cmc
or
xchg
shrb
orb
cs
sbb
sahf
mov
dec
pop
icebp
ficoms
sub
mov
lods
push
or
dec
or
pop
lret
inc
or
fldcw
adc
jnp
ja
mov
and
je
jne
int
lret
aad
dec
call
lock
rclb
lret
fmull
lods
mov
adc
xchg
stc
inc
add
cmpsb
xchg
das
fst
mov
insl
mov
clc
pop
scas
inc
cmpsl
cmc
sbb
cmp
inc
jl
scas
xor
push
pop
movsl
stos
inc
fcomi
inc
ss
jbe
sbb
stc
push
out
frstor
adc
and
imul
enter
call
and
shrl
data16
xchg
or
mov
xor
shll
mov
inc
inc
incb
fs
sbb
movsb
cwtl
mov
jg
sbb
xorb
mov
mov
mov
push
data16
jae
lahf
inc
sbb
loope
imul
cmp
dec
push
popa
pop
mov
ret
xchg
int3
mov
jle
pop
pushf
push
arpl
mov
sub
lea
icebp
insb
adc
xchg
jle
cmp
mov
pushw
jnp
movsl
es
scas
sbb
xchg
dec
and
xlat
cwtl
pop
mov
and
and
mulb
sbb
popf
mov
rcr
xor
leave
data16
jns
std
fistpll
cmpsb
lret
clc
ja
cmp
inc
out
mov
fcompl
and
fbstp
inc
xor
pop
push
idiv
xchg
rolb
and
xor
push
jno
jmp
out
out
dec
dec
fwait
sbb
or
jno
xor
jecxz
scas
es
push
add
je
jmp
jle
cmp
fcmovnu
mov
movsl
enter
xchg
andl
push
dec
call
shlb
ror
stc
mov
sub
pop
test
lds
dec
in
out
ret
in
test
mov
or
mov
mov
adc
shll
jo
adc
jmp
mov
es
xchg
mov
mov
inc
fsubrl
jae
dec
sti
daa
mov
and
cmc
lcall
ss
sub
jnp
xchg
test
call
jns
imul
loop
out
ds
out
add
xor
out
ds
ret
ja
leave
js
cs
dec
mov
mov
cmp
jo
jg
int
cld
mov
std
std
clc
movsb
jl
mov
outsb
out
adc
jl
dec
in
popf
ds
mov
lea
mov
ss
xchg
fsubl
insb
cmp
mov
notl
push
mov
xchg
pop
lods
shlb
push
jl
popf
js
and
mov
xchg
mov
test
sti
addr16
mov
clc
adc
and
iret
daa
into
loop
and
icebp
add
loopne
addr16
aas
push
test
lea
sbb
lcall
pop
pop
mov
movl
cli
addr16
sbb
lahf
stc
dec
adc
dec
sbb
add
xchg
push
jae
pop
out
add
pop
je
out
and
xor
repz
jg
mov
sbb
jo
fistpl
jno
adc
fs
jo
mov
dec
negb
in
mov
sbb
xor
xchg
jp
or
ret
cld
xchg
push
dec
in
push
loop
dec
lock
push
xchg
xor
sbbl
mov
sub
arpl
sub
xor
test
xchg
popf
or
cli
ret
and
mov
out
dec
ficoml
out
nop
push
xchg
jnp
fmull
cld
daa
jno
pushf
cmp
fmuls
mov
loop
jge
popa
cmc
test
stc
adc
jae
inc
sbb
pop
push
movsl
rorb
bound
dec
push
push
stc
std
mov
inc
pop
sub
sub
adc
and
push
dec
std
sub
loop
and
cmp
mov
lods
adc
ret
frstor
sub
and
loop
pop
in
add
in
pusha
add
lcall
ss
cwtl
bound
dec
pop
push
lret
lahf
dec
push
insl
test
les
outsl
pop
mov
int3
jbe
call
es
les
fwait
inc
into
mov
or
and
push
sbb
ja
ja
inc
dec
xor
mov
inc
cmp
add
inc
push
popf
inc
popf
or
sub
inc
and
mov
sub
xchg
ficomps
xorl
mov
daa
jo
mov
popa
push
mov
pop
mov
dec
mov
mov
push
ret
push
lret
mov
pusha
clc
inc
or
pop
lret
xchg
int3
mov
xor
sbb
mov
pop
mov
xchg
sub
add
or
in
aaa
push
push
xchg
in
nop
push
mov
fwait
xchg
add
cs
dec
and
sahf
insl
jo
movb
cmpsb
lret
pop
jecxz
movsl
subb
sub
add
test
inc
movsb
ret
pop
out
movsl
push
aas
inc
ljmp
cmp
pop
fistpl
bound
dec
jnp
mov
mov
clc
dec
enter
loope
fildll
jne
fiaddl
mov
cli
fsts
jb
pop
jmp
adc
add
pusha
fwait
jb
jmp
push
iret
or
das
imul
cmp
in
mov
or
pop
pop
fwait
arpl
ret
add
sbb
testb
je
cmp
loopne
jae
xor
das
fwait
ss
sti
xchg
pop
cvttps2pi
sub
xchg
nop
jecxz
push
mov
mov
pop
clc
sahf
xor
cmp
and
roll
push
jns
iret
cmp
lahf
xchg
mov
sub
mov
outsl
inc
or
mov
in
push
mov
clc
and
outsb
and
add
dec
mov
push
data16
shl
mov
out
stos
jnp
push
dec
stos
rorb
sti
dec
in
push
xor
aad
mov
out
push
sub
aad
pop
add
in
mov
cmp
rorl
and
jp
cmc
pop
cwtl
inc
xor
and
mov
subl
sbb
clc
cmpl
xor
adc
mov
ljmp
xor
pusha
imul
jg
lret
aas
mov
or
icebp
lock
cs
outsl
or
out
sbb
inc
add
dec
add
cmp
xor
mov
fs
mov
push
mov
loope
loopne
imul
test
out
int3
scas
mov
scas
call
xor
out
dec
ljmp
mov
mov
shl
faddl
adc
fiaddl
jmp
movsl
sahf
jl
lahf
lret
pop
pop
and
lret
fildll
shlb
sub
stc
lds
or
scas
fisttps
ror
inc
pop
cli
xor
pop
xorb
lock
dec
lret
mov
ja
add
mov
call
cmpsb
out
push
or
sbb
ret
jbe
in
jo
xchg
int3
shll
mov
jbe
fists
mov
jp
adc
cmpsb
popf
fninit
xchg
sbb
mov
clc
adc
jl
dec
dec
dec
adc
cltd
mov
in
dec
xor
or
out
mov
mov
movsl
repz
jp
jno
mov
pop
xchg
xor
loopne
inc
dec
mov
sarl
sub
lods
aam
cmpsb
jmp
jbe
adc
sbb
ds
xlat
or
mov
out
lock
pop
stos
out
or
adcb
push
pop
pop
fwait
pushf
mov
or
mov
mov
scas
loope
lds
mov
orl
pop
dec
data16
dec
mov
cmp
in
mov
mov
sbb
dec
mov
xchg
lret
lock
mov
filds
insb
fisubrs
mov
or
rcll
mov
addr16
ss
push
xor
xchg
or
adc
loop
push
xchg
fldt
xchg
loop
adc
jb
pop
jmp
rorb
lods
inc
repz
stos
inc
pop
iret
push
cwtl
sbb
lods
movsb
or
scas
and
in
ret
cmp
cmp
add
outsb
cld
cmc
mov
out
jmp
inc
sub
nop
push
pop
adc
divb
mov
dec
negb
mov
sbbl
adc
cwtl
arpl
psrlw
sbb
push
pop
jge
popa
fadds
jb
sub
sub
cwtl
imul
mov
jl
pop
xchg
lahf
stc
aad
mov
out
in
inc
test
push
jp
mov
push
pop
jb
sti
pop
inc
pop
popl
cli
ds
jns
test
out
push
mov
push
test
xor
add
pop
mov
push
push
dec
cld
xor
lahf
lcall
cltd
int3
test
pop
pusha
jnp
jmp
add
out
fwait
pop
int
mov
bound
dec
pop
push
push
xchg
mov
in
dec
lods
mov
jns
xchg
push
fcomp
jb
aam
dec
sti
push
jns
orl
mov
movsbl
stc
mov
sub
dec
outsb
pop
adc
imul
loop
fnstenv
packuswb
sub
dec
test
jno
mov
add
mov
xchg
fisubrs
aad
negl
push
nop
mov
cmp
arpl
pop
cmp
push
out
aam
aaa
negl
mov
test
lahf
mov
ret
int
sub
adc
mov
ss
sahf
xor
or
mov
rolb
popf
pushf
fs
mov
xor
andb
insb
mov
mov
adc
mov
lcall
inc
scas
push
ret
outsl
lods
outsl
imul
arpl
movsl
sub
ds
arpl
aam
jmp
pop
mov
call
arpl
or
sbb
sub
push
fstpl
inc
mov
mov
pusha
in
or
inc
sub
adc
push
push
xchg
shll
call
push
sahf
push
cltd
pop
inc
aad
pop
clc
mov
dec
dec
cmp
lock
inc
add
mov
scas
repz
ja
insl
fneni(8087
push
add
mov
xchg
test
add
fnsave
divps
repz
sub
andl
mov
leave
loope
lods
lret
setle
outsb
decl
sti
clc
das
data16
aaa
les
sub
les
mov
jecxz
loope
or
fisttps
and
pop
addb
rcrb
popl
add
lcall
outsl
sbb
xor
sub
mov
mov
aam
test
fistpll
pop
addr16
cli
repz
lods
pop
insb
jl
mov
rclb
inc
stc
xor
js
xchg
rclb
jno
dec
sbb
test
sub
mov
xchg
scas
adc
out
add
sahf
pusha
leave
xchg
and
into
xor
xor
gs
pop
sbb
jne
and
and
lods
aam
xor
pop
pop
mov
cwtl
pop
mov
insl
mov
jb
cmc
xchg
in
mov
les
aaa
or
lahf
jns
xchg
frstor
mov
loopne
jns
push
loopne
xchg
ds
stos
es
je
lsl
in
sti
mov
mov
fs
inc
fisttps
sarl
mov
nop
ja
xchg
xchg
pop
dec
add
push
xchg
push
mov
push
sbb
orb
push
roll
out
add
mov
dec
jb
lea
and
pop
jns
roll
cld
popf
cmp
test
and
clc
adc
xor
and
lcall
sub
dec
out
out
mov
cmpsb
mov
fisubs
add
test
out
movsl
dec
sub
xchg
inc
push
aas
adc
int
mov
inc
adc
inc
jnp
mov
xor
dec
dec
and
es
aas
movsb
mov
pop
xor
cld
mov
mov
sub
pop
add
mov
adc
push
lods
ret
dec
push
add
aas
shlb
call
mov
cwtl
sub
cmp
cmp
testl
and
jo
bound
fldl
mov
mov
push
cmp
dec
jl
adc
mov
mov
test
xor
ljmp
inc
mov
dec
push
leave
mov
ret
and
in
xchg
outsb
lcall
mov
fmul
cmp
cmp
lret
inc
xlat
cmp
lods
inc
fdivs
std
adc
mov
xchg
into
dec
test
xor
pop
wrmsr
into
mov
and
repnz
xor
jle
sbb
xor
fidivrs
jae
ret
adc
or
mov
and
mov
imul
bound
mov
pusha
nop
insl
ljmp
pop
sbb
test
fcomip
sub
mov
inc
push
push
sub
lock
pop
xchg
shll
sub
xchg
rclb
push
or
and
aaa
idiv
idivl
add
div
andb
call
mov
pop
mov
jmp
fdivrl
outsb
cmp
dec
mov
shlb
pop
and
jmp
scas
inc
or
ljmp
dec
rcr
sbb
jecxz
push
jo
dec
jg
movaps
cltd
pushf
xor
pop
mov
mov
mov
xchg
xor
stc
pop
push
int3
xchg
inc
loop
or
je
jne
or
xor
push
call
pop
xchg
sub
sub
push
ss
dec
push
je
add
mov
test
bound
jno
jne
imull
push
push
ja
out
mov
mov
cmpsl
xor
sbb
dec
icebp
jg
je
std
dec
pop
sub
dec
shrl
ljmp
aam
lock
cmovbe
adc
pop
aad
scas
lea
mov
cmp
inc
add
pop
inc
adc
sub
lods
flds
jle
loopne
cwtl
in
and
dec
int3
cmp
test
imul
xchg
out
cld
mov
adc
pop
and
push
dec
ljmp
ljmp
in
sub
xchg
jge
fs
mov
xchg
add
xor
movsl
or
vpcmpgtd
jnp
notb
outsb
cmp
push
sarl
cli
cmpsb
adc
pop
xchg
adc
push
push
dec
lods
pop
aaa
push
aas
jb
mov
jo
cmp
fnstcw
and
xor
jne
jnp
dec
adc
shll
inc
in
pop
push
loop
leave
dec
notb
rolb
insl
xor
data16
add
dec
aaa
adc
adcb
add
pop
adc
or
test
cmc
xchg
insb
sub
jge
es
insb
sub
mov
mov
ja
jg
shll
sub
nop
and
out
pop
imul
adc
pop
adc
push
lods
lea
jno
fisubs
les
pushf
clc
push
xchg
mov
test
pop
nop
shl
cmpsb
sbb
xchg
sbb
sbb
sarb
inc
pop
and
jno
cmp
mov
shll
mov
jnp
cli
inc
leave
jns
repnz
jb
dec
xchg
pop
lret
lods
cwtl
xor
daa
mov
push
imul
aaa
sub
data16
cli
popa
insb
pop
dec
adc
lds
add
adc
aad
aaa
iret
lret
xor
add
popf
pop
jecxz
loop
je
cmpsb
or
dec
popa
test
outsb
mov
imul
add
mov
cld
popf
vmovntps
dec
push
pop
or
mov
xchg
xchg
jns
in
call
mov
lods
repnz
cld
mov
movsl
loope
add
push
lds
xor
into
and
inc
icebp
xchg
jae
pop
push
out
or
jmp
jg
sbb
sbb
and
jbe
mov
movsl
test
and
xchg
jne
mov
mov
int3
out
enter
scas
jle
loop
fcoml
scas
mov
fwait
push
xor
ljmp
push
adc
cmpsl
sbb
pop
xchg
adcb
subl
xchg
push
ja
pop
push
sahf
lcall
insb
adc
xor
add
dec
outsb
or
ret
jg
rcrl
or
jg
adc
cmp
cmp
aam
xchg
push
jge
out
subl
rolb
dec
lock
sbb
pop
je
cmp
das
cmp
mov
and
pop
mov
push
inc
ret
int3
jae
lds
stc
mov
mov
in
jecxz
int3
inc
cmp
bound
mov
fcomip
ret
and
jl
add
xorb
jns
pop
shr
cmpsl
hlt
ljmp
jl
icebp
or
push
in
jo
push
movsb
loopne
or
push
xor
ds
rcll
daa
loop
inc
lcall
or
push
ljmp
sub
dec
cmp
enter
add
mov
lds
fimuls
adc
movsb
adc
add
mov
out
lds
pop
push
fisubrs
stos
cli
iret
jb
xchg
test
jle
faddl
stc
jl
cmp
mov
jmp
mov
jo
xchg
jae
push
rdpmc
and
or
sub
fldl
xor
scas
mov
repz
out
dec
imul
daa
fcmovne
aaa
push
jnp
sbb
dec
loopne
cmp
cltd
andb
pop
in
sub
jl
aam
ds
nop
xchg
repnz
mov
jne
std
js
ds
xor
fstpl
cwtl
repz
nop
dec
push
mov
dec
outsl
wbinvd
out
sub
pop
repz
lea
xchg
push
push
jo
imul
inc
xor
push
sbb
add
fs
push
ret
ds
mov
negb
push
rolb
sbb
enter
and
out
sub
pop
adc
xchg
shrb
movsb
pop
xchg
or
mov
ret
mov
aaa
js
test
addb
pop
mov
bound
mov
shlb
adc
rolb
std
pop
jl
pop
adc
insb
divl
adc
stos
cmp
mov
cmpsb
repz
cmp
dec
adc
adc
bound
sub
popa
les
jno
subb
pop
lahf
jb
and
bound
mov
ret
scas
mov
mov
sbb
push
jg
or
cmpsl
sbb
pop
repz
jb
leave
cmp
mov
mov
cmp
test
dec
in
jmp
push
pop
sub
add
push
xchg
jns
outsl
test
xor
or
fdivrl
mov
aad
nop
pop
xchg
fs
out
jo
shll
pop
mov
out
or
and
lock
std
out
xor
and
loope
push
push
cltd
icebp
mov
dec
filds
test
and
inc
sub
jnp
xchg
cmp
xlat
fstpl
out
jo
push
adc
sbb
push
es
fisubl
outsb
mov
push
ffree
push
push
mov
and
xchg
aad
adc
out
cld
std
repz
fsts
add
mov
jae
sub
lcall
lods
inc
mov
adc
cmp
sub
in
xor
popa
das
cmp
cli
scas
hlt
jbe
cmc
push
push
fwait
scas
ss
insb
mov
int3
cmp
mov
ret
mov
std
xor
adc
sub
mov
sub
dec
or
push
andl
testl
dec
jle
mov
fucom
imul
cmpb
hlt
push
insb
mov
mov
cld
ljmp
jne
int3
in
cmp
or
lea
idivb
adc
push
std
out
addr16
dec
out
shrl
es
ja
cmp
imul
jge
out
or
out
xchg
sbb
es
imul
ret
sub
add
or
mov
fsts
sub
sub
jbe
dec
sahf
fs
sti
into
cmc
cld
shlb
aad
aam
lods
xor
mov
adc
xorb
movsl
inc
repz
out
in
addb
insb
shl
loope
sarb
outsb
and
pusha
repnz
add
int
xor
mov
stos
inc
mov
pop
filds
cmp
popf
dec
inc
mov
cmp
fwait
sub
insl
xchg
mov
and
or
out
mull
xor
or
inc
add
or
mov
mov
adc
lds
js
mov
jb
mov
mov
fcomps
cmp
jb
push
dec
ss
or
dec
mov
inc
out
pop
fimuls
xchg
sub
aas
push
mov
daa
and
mov
pushf
mov
push
push
lods
bound
scas
stc
dec
adc
notl
cld
adc
or
push
sbbl
test
push
or
xchg
ljmp
pushf
ret
sub
xor
jb
and
sub
pop
jae
notb
loop
add
cmc
iret
and
sbb
popa
sub
pop
and
bound
lret
add
test
jge
xlat
push
es
inc
cmp
nop
aam
sub
adc
mov
mov
inc
xchg
jg
loope
mov
add
sub
and
fidivl
inc
dec
mov
adc
stos
push
dec
das
push
fistps
sahf
lret
outsb
mov
loopne
negb
jg
ficoml
int3
sbb
sbb
loop
jae
cmp
mov
cmpsl
movb
mov
lret
incl
push
aas
lret
fiaddl
jmp
loop
sub
movsl
jg
jl
faddp
loopne
sub
rcrl
jecxz
pop
mov
mov
adc
pop
push
repnz
and
xor
adc
fwait
or
ss
lret
dec
adc
mov
jg
dec
outsb
dec
cmp
fnstcw
cld
xor
jno
xor
out
pop
mov
jge
shll
imul
mov
aam
das
aad
loope
dec
adc
test
adcl
sbbl
add
sub
pop
nop
adc
sub
xchg
lods
lods
push
push
xlat
cs
stos
mov
inc
jne
sahf
movsl
inc
cltd
shrb
mov
shll
or
sahf
jne
gs
pop
or
mov
std
ret
dec
stos
sub
mov
mov
ret
xchg
xchg
decl
mov
test
xor
cmp
add
jns
outsl
lea
in
and
cld
pushf
xchg
popa
adcl
imul
shlb
inc
fldcw
faddl
mov
push
into
ficoms
inc
das
mov
sub
sbb
xchg
inc
shlb
and
es
gs
pop
pop
xor
sub
inc
pop
add
gs
mov
stos
or
fadds
ja
mov
xorb
mov
arpl
iret
fisubrs
fwait
mov
inc
mov
xor
ficoms
adc
fucomi
sbb
or
mov
shrb
in
sbb
sub
out
mov
mov
push
je
mov
cltd
cmp
add
jp
push
mov
adc
mov
leave
js
add
add
fadd
scas
jno
push
inc
sub
frstor
push
scas
push
push
data16
scas
mov
adc
mov
and
add
add
dec
int
cmpsb
pop
xchg
pop
inc
pushf
cmp
icebp
es
mov
js
lret
repnz
xor
bound
pop
lret
icebp
add
stos
jge
call
movsb
ret
cmp
ret
adc
or
hlt
dec
and
cmpsl
xlat
mov
sti
push
mov
loopnew
or
mov
cmp
std
clts
add
out
mov
dec
lock
ret
cmpsb
negl
aad
sarl
sbb
clc
mov
adc
mov
lahf
int3
adc
add
fwait
lock
insl
dec
rcrl
outsb
mov
nop
jg
imul
loope
dec
inc
inc
xor
pop
cmp
pop
icebp
daa
loop
pusha
jnp
out
jno
in
adc
xlat
movsb
mov
xor
loope
cmp
inc
jp
dec
adc
add
cmp
dec
push
pop
cld
jecxz
inc
push
push
xchg
dec
mov
cmp
or
push
pop
add
lock
adc
pop
add
adc
mov
cmpsl
mov
sub
pop
mov
ret
push
pop
fisttpll
stos
ss
cmpsl
pop
mov
stos
jle
rcrb
sbb
dec
lret
and
dec
decb
sbb
mov
imul
pushl
aaa
out
and
pop
hlt
cltd
imul
jp
mov
pop
push
rcl
jmp
movsb
mov
roll
push
nop
es
test
scas
inc
inc
shrb
xchg
xchg
out
stos
and
pop
popf
orb
dec
jno
out
adc
xcrypt-ofb
cmpsl
outsl
jmp
mov
xchg
push
sub
sbb
or
xor
inc
inc
pop
les
daa
mov
lahf
jno
pop
push
adc
or
sub
mov
mov
shrb
jnp
mov
mov
or
notb
push
ljmp
jns
mov
mov
je
aad
aas
adc
addr16
jns
lea
push
cmovle
out
xchg
push
fisubl
negb
sahf
and
inc
push
outsl
lcall
or
push
xor
pop
rcrb
mov
and
pop
push
fisubrl
in
neg
lea
or
jecxz
icebp
enter
enter
popa
fidivs
push
in
xchg
jno
lea
xchg
pop
int
mov
or
insl
mov
std
out
xor
pusha
test
rol
cmpsl
push
ds
rcrl
ret
test
test
add
sbb
pop
out
sub
add
shll
icebp
int3
lret
enter
insl
xchg
mov
fmuls
lret
cmp
cmpsl
xor
dec
fisubrs
loope
xor
icebp
icebp
jnp
sarb
inc
and
dec
sbb
push
imul
push
inc
arpl
out
jnp
push
xor
int
add
lret
movsl
repnz
mov
mov
inc
jmp
cmc
scas
xchg
enter
jns
xchg
or
es
add
fwait
je
int
out
sbb
pop
fnstsw
push
cmp
outsl
push
mov
jno
pop
ror
pop
in
dec
iret
in
push
jg
aas
or
pushf
pop
js
sti
daa
iret
inc
loopne
int
push
test
pop
stos
xorl
jmp
fadds
pop
or
shlb
lret
jecxz
outsb
insl
mov
call
rolb
in
xchg
icebp
dec
mov
mov
mov
fwait
jle
cltd
and
aas
pop
sub
test
andb
hlt
jne
cmp
jae
sarb
fcmovbe
rcr
mov
mov
idivb
lcall
xchg
cmp
into
jle
fnstcw
sbb
sub
lds
std
fidivrl
add
jb
sbb
arpl
negb
or
xchg
sbb
push
movsb
dec
adc
mov
pop
mov
lods
inc
dec
insl
out
pop
push
loop
das
lock
or
mov
inc
cwtl
add
sbb
xchg
jne
mov
in
andb
pop
movsb
pop
mov
sub
clc
in
ficoms
ja
jmp
in
enter
test
mov
clc
stc
jae
outsl
repz
lods
call
sbb
mov
or
cld
xchg
push
lret
btc
pop
dec
fsubs
test
lods
jnp
add
ss
test
and
bnd
test
jb
cmp
lods
subb
test
loope
or
jb
out
and
ret
mov
repz
xor
mov
repz
add
adc
scas
xchg
and
cwtl
fdivp
sbb
les
inc
gs
shlb
cmp
call
insb
enter
shlb
test
and
sub
andl
lret
mov
push
aam
movsb
dec
repnz
std
ffreep
pushf
outsb
sbb
popf
aam
sub
or
ficomps
sbb
push
mov
adc
btc
and
ljmp
std
mov
sahf
pop
xchg
sbb
dec
lock
fisubl
in
idivl
mov
es
int
insb
hlt
jbe
setns
xchg
push
divb
je
ficoml
pushf
xchg
jo
inc
push
adc
mov
pop
sub
sahf
push
jecxz
or
lock
fldcw
out
daa
and
jnp
mov
icebp
popf
inc
pop
out
mov
mov
jb
stc
cwtl
mov
loopne
xlat
scas
dec
es
loopne
flds
in
and
addr16
sahf
out
mov
loopne
or
js
incl
xchg
idivb
lahf
popf
jl
mov
ss
repz
outsb
inc
sub
movsl
jnp
ss
pop
addr16
daa
subb
shr
call
or
mov
xor
ret
test
xchg
jo
loop
cmpsl
ficompl
outsl
mov
pop
aas
lcall
mov
mov
gs
or
das
lret
xchg
das
xchg
mov
xlat
push
push
lcall
add
ret
ret
inc
shl
jge
mov
xchg
cmp
xchg
ret
imul
cmc
mov
dec
flds
stc
and
jp
repz
mov
iret
fmull
adc
cmpsl
jne
movsb
or
ljmp
adc
pop
stc
and
mov
addr16
sbb
sub
adc
lret
mov
fists
inc
add
cmp
push
loop
sahf
xor
sbb
sub
ret
jno
or
cmp
jbe
jno
and
pop
in
sbb
aas
sub
inc
out
imul
sahf
test
jns
mov
daa
dec
das
xchg
push
scas
gs
sub
mov
dec
xchg
mulb
jbe
push
sbb
sbb
cmp
jnp
popf
scas
push
adcb
or
popf
sub
sahf
shll
js
push
and
std
test
lret
push
out
xlat
mov
xchg
movsl
aam
in
stos
lret
test
sti
dec
insb
lock
sub
fucomi
push
jg
fwait
inc
sub
ror
push
cld
mov
xchg
fwait
bound
fcmovnbe
daa
mov
jb
xchg
fldcw
in
cmpsl
pushf
cs
lcall
int
call
in
xchg
jge
ja
xchg
frstor
push
push
outsl
cmp
shrb
mov
insl
popa
je
jl
sarl
in
das
xchg
cmp
and
int
shrb
ds
mov
and
cmp
adc
xchg
in
sub
test
sbb
add
adc
jae
cmp
push
notb
xchg
mov
xchg
adc
cmc
loopne
mov
mov
iret
leave
cmpl
mov
mov
fldenv
mov
cmp
lods
xor
enter
movsl
jecxz
push
nop
outsb
jne
or
mov
test
into
andl
into
imul
test
xchg
dec
shr
xchg
cmp
je
fnstenv
lret
nop
jne
adc
daa
jecxz
idiv
mov
push
fwait
pop
cmp
stos
pop
movsl
add
mov
enter
int
xor
mov
and
outsl
ljmp
shrl
fstpt
xor
or
sbb
sbb
mov
cli
in
adc
cmpsb
int
jmp
out
push
mov
xchg
mov
bound
mov
push
pop
mov
cmp
push
lcall
jno
sub
dec
mov
popa
cmpsl
push
inc
pop
movsb
lcall
daa
add
outsb
cmpsb
xchg
jmp
hlt
cli
sub
adc
fstps
seto
insl
out
fwait
adc
inc
xchg
iret
push
push
push
jmp
repz
sbb
pop
imull
or
callw
push
in
add
push
add
push
mov
pop
cmp
filds
mov
mov
sub
push
dec
jmp
aad
sti
cmp
mov
mov
adc
pop
leave
movsb
mov
test
sub
loopne
loop
push
sahf
jp
and
leave
js
inc
xchg
jecxz
jns
ds
dec
aas
cmpsb
lret
xchg
dec
inc
cmp
call
outsl
ds
cmpsl
push
add
push
test
and
pop
in
mov
jl
in
ret
lods
movsb
dec
hlt
xchg
loopne
repz
addl
mov
dec
outsl
mov
fisttps
bound
loopne
jo
push
shlb
sub
repz
addr16
add
lahf
jg
lds
pop
mov
xor
xchg
push
jmp
mov
cmp
in
inc
addr16
cltd
xchg
xchg
rcl
dec
subl
dec
stos
fmul
mov
inc
sti
push
sbb
je
mov
call
cld
mov
imul
dec
jb
pop
or
ficoml
scas
cmp
repz
popf
loop
hlt
fs
and
jns
mov
movlps
lea
push
jge
mov
pop
pushf
pop
sbb
jmp
and
pop
lds
dec
movsl
xor
daa
in
stos
mov
sarb
popf
testb
xchg
xorl
out
pop
aam
clc
lret
and
push
xchg
xchg
ljmp
push
sbb
cmp
and
add
dec
movsb
int
testl
adc
insb
xor
ja
mov
fst
cmp
cmp
inc
mov
sub
ss
test
scas
mov
xlat
cs
call
mov
filds
push
jo
jae
fistps
lahf
shll
je
mov
lock
loop
test
push
and
idivl
mov
stc
out
pop
shll
pusha
stos
in
inc
nop
out
dec
imul
sub
cmp
bound
lcall
push
in
sbb
test
xchg
mov
pop
and
data16
mov
aaa
lea
shll
cmp
xchg
mov
adc
pop
push
repnz
cmp
frstor
push
pop
cmp
dec
jne
sbb
sarb
in
stos
xor
jae
loope
xchg
inc
test
lcall
mov
cmp
sub
jle
test
add
imul
mov
cmp
pop
lret
xchg
cli
mov
je
out
mov
clc
mov
inc
aas
jp
jge
jno
insl
cwtl
add
sbb
push
dec
cmp
std
aad
negb
xchg
mov
lods
xchg
mov
outsl
mov
adc
cmp
int
dec
in
sbb
arpl
lods
mov
mov
mov
lods
xchg
xlat
daa
inc
jae
cmc
cmp
dec
mov
fsubs
aas
out
push
out
jg
xchg
int3
mov
cli
aad
push
add
shll
xor
aas
ret
leave
je
das
adc
pop
fwait
aam
pop
aad
sbb
into
xor
mov
jmp
sarb
and
push
jg
das
pop
push
adc
and
cwtl
sub
insl
cmp
inc
test
mov
repz
sub
imul
pop
imul
es
xchg
scas
xchg
push
fldl
test
adc
mov
dec
lahf
fcompl
lds
jmp
arpl
insb
mov
aaa
xchg
xchg
xchg
popa
fisttps
and
std
inc
addb
data16
test
adcl
adc
rolb
push
rcll
dec
inc
push
cmp
add
int
push
add
jbe
shrl
outsl
or
addl
std
pop
dec
scas
pop
xor
jecxz
mov
jne
push
xchg
dec
xchg
bound
push
push
xchg
loop
cmp
push
lods
xor
xor
pop
or
gs
enter
add
call
int3
insb
push
xlat
add
adc
repz
icebp
aad
test
stc
or
shr
pop
sbb
mov
cmc
mov
push
jo
enter
sahf
int3
jne
rorl
push
jmp
iret
ret
push
jmp
mov
dec
fists
enter
inc
test
and
or
pop
mov
or
and
dec
pop
cmp
sbb
push
cli
push
gs
sbb
inc
ja
insl
rcll
cmp
sub
adcl
stos
pop
cmp
jle
aaa
leave
notl
lcall
dec
pop
add
push
cmp
aam
test
xchg
mov
ficoms
std
add
pop
repnz
mov
stos
pop
push
mov
sahf
sbb
add
hlt
enter
xor
mov
mov
push
in
rcrb
cmp
add
stos
inc
jbe
sahf
pop
or
or
ffree
sbb
jno
cld
jecxz
imul
sub
add
push
ja
out
push
push
rorl
pusha
dec
daa
rolb
pop
bound
rolb
jge
adc
scas
aam
fwait
jg
dec
cld
mov
in
shlb
lahf
scas
push
push
jb
shl
sub
pop
and
jnp
fnsave
cmp
lock
fbstp
lea
push
in
jbe
xor
jnp
push
das
repz
lock
inc
cwtl
push
jmp
lock
mov
fst
pop
mov
sbb
subb
mov
divl
xchg
add
push
pop
mov
or
std
mov
roll
dec
mov
mov
ljmp
cld
rcl
fldt
xchg
push
adc
dec
call
mov
or
fs
mov
rorb
xor
jp
xor
test
xlat
xor
sub
mov
in
pop
mov
rorb
or
inc
and
test
xor
pop
fs
lret
int
feni(8087
sub
inc
lods
jl
sub
shlb
cmp
cs
jg
xchg
mov
in
in
imul
dec
jge
jo
inc
jmp
mov
sub
mov
jno
fidivrl
mov
mov
icebp
insb
pop
push
push
es
push
loope
push
jne
xor
cltd
mov
test
dec
add
testb
pusha
push
mov
xchg
inc
repnz
out
mov
adc
arpl
xchg
or
sub
aad
cmpl
sbb
and
mov
mov
pop
rorl
mov
push
push
inc
inc
mov
inc
push
insl
subb
sar
leave
inc
out
lock
xlat
dec
lahf
xchg
mov
inc
adc
es
out
sub
stos
lcall
jmp
lds
dec
mull
and
add
popf
push
xchg
push
adc
int3
xchg
mov
inc
lret
cmp
jmp
ds
and
xchg
out
in
test
ja
dec
fs
inc
pop
mov
xlat
lock
inc
fwait
outsl
add
add
jecxz
rcll
in
ljmp
push
or
sbb
push
sub
aas
xchg
call
icebp
pop
inc
push
mov
outsb
push
rol
aad
xchg
push
arpl
sub
xchg
int3
lds
mov
and
xor
jb
or
ret
push
addr16
sub
iret
jns
jb
xchg
dec
push
pusha
cltd
aam
mov
lahf
cli
jle
hlt
movsl
stos
xchg
lods
jmp
and
lock
or
lea
push
pop
sub
adc
inc
arpl
fidivrl
or
mov
xchg
mov
outsb
add
mov
pop
lods
or
jb
or
int3
pop
fldenv
test
nop
dec
or
xchg
or
mov
cld
std
xchg
sub
test
xorl
cmp
pop
or
inc
mov
xor
xor
mov
mov
push
add
lock
push
repz
mov
into
lea
inc
in
mov
cs
xchg
sti
leave
in
rcrl
sti
fildl
or
or
scas
scas
dec
inc
xchg
ljmp
fcomps
dec
mov
push
jns
and
or
popa
aaa
lds
xor
sbb
inc
fs
xchg
pop
movl
dec
pop
test
fs
popa
outsb
adc
lahf
subb
or
lcall
jl
sti
dec
rorl
out
xchg
icebp
std
push
mov
mov
popa
pop
fidivrl
sbb
jg
add
sbb
hlt
xor
aam
test
mov
jmp
aad
fbld
into
inc
sbb
jb
fbstp
mov
jmp
push
sti
scas
jno
xchg
or
lea
out
lods
inc
inc
add
fsubrs
sub
mov
jne
loopne
and
mov
jo
inc
repz
inc
cwtl
pusha
add
xchg
aaa
jns
repz
sub
inc
or
lods
movsb
out
and
mov
cs
fnstsw
jl
stc
or
imul
cmpsb
repnz
stos
aam
xchg
sub
jle
xor
jo
cwtl
mov
test
adc
cwtl
xor
jmp
mov
xchg
rorb
jae
adc
add
nop
mov
aam
push
mov
and
mov
lcall
adc
lock
inc
jb
pop
wbinvd
cmpsb
les
imul
jl
aaa
stos
sarl
and
cmp
fsubr
out
fldt
dec
leave
mov
rorb
push
out
loopne
andl
and
mov
mov
dec
bound
rolb
mov
call
insb
mov
out
aaa
dec
outsb
adc
push
pop
out
mov
popf
jmp
sbb
add
cmp
mov
leave
popf
jno
aas
pop
insb
push
jg
xor
ret
mov
sbb
ss
iret
xchg
or
in
shll
jns
je
push
xor
lahf
cmp
push
mov
or
hlt
test
mov
std
mov
in
or
stos
repz
imul
insl
adc
mov
xchg
pop
mov
and
push
fwait
push
push
xor
int3
cltd
mov
mov
mull
sbb
daa
scas
rcl
or
scas
dec
sub
negl
push
xchg
loopne
push
fs
test
lcall
sets
sbb
imul
push
fadds
loop
mov
add
mov
lods
jns
xchg
jmp
pop
cmp
jns
imul
icebp
mov
std
pop
cmp
pop
ret
xor
adc
lods
pop
or
repnz
push
xchg
mov
mov
push
scas
mov
adc
ljmp
pop
xchg
or
stos
lods
sub
sbb
adc
pusha
cmp
add
push
test
ror
sub
xchg
sbb
or
pop
mov
xadd
movsb
idivb
sub
cmp
std
das
lea
test
sbb
call
cli
cmp
mov
lahf
lcall
adc
cwtl
loope
enter
jns
mov
add
sahf
jle
outsl
push
in
jp
inc
pop
xor
add
cld
xchg
ret
and
mov
in
push
out
mov
fdivs
fldenv
popf
jno
aam
xor
leave
mov
mov
or
sarl
jle
adc
imulb
inc
sbbb
icebp
adcl
inc
xor
icebp
ja
das
aaa
pop
rorb
cmp
aam
repz
or
mov
repnz
mov
pop
push
push
sub
and
bound
mov
loop
pop
lods
jno
std
dec
pop
pusha
inc
ds
lods
enter
loopne
cmc
repnz
mov
rcrb
and
xlat
xchg
mov
push
lock
cmp
mov
mov
pop
rcrb
outsb
mov
int
adc
and
cltd
mov
adc
sahf
dec
loope
imul
sub
out
sub
xor
cltd
sub
icebp
fsubrp
lcall
imul
cmp
inc
stos
dec
test
sbb
mov
push
jne
cmpsb
push
out
jno
adc
push
cmpl
jno
stc
addr16
xor
push
ljmp
in
pop
mov
repnz
imul
xor
and
test
dec
inc
mov
inc
leave
push
int3
jne
xor
mov
pop
or
fnsave
jbe
mov
mov
fs
sbb
daa
or
and
sub
xchg
stos
cmpsl
sub
enter
adc
xchg
xor
and
fs
xchg
sarl
dec
xchg
inc
sbb
push
xchg
sbb
out
mov
add
pop
xor
test
je
in
int
mov
jge
jl
in
pop
xor
jl
inc
inc
mov
in
xchg
imul
ss
repnz
push
sbb
jno
cmpsb
sub
repnz
popa
add
lock
mov
fmull
pushf
rcrl
mov
test
mov
dec
mul
lods
mov
and
sub
mov
and
xchg
xchg
les
or
sarb
push
je
stos
xor
bound
push
enter
and
lds
cmp
pop
sub
clc
lds
jle
inc
xor
mov
sti
cmc
pop
outsb
sbb
push
mov
mov
rcr
mov
popa
add
aaa
arpl
xchg
mov
lock
add
adc
push
push
add
jb
sbb
jp
sub
pop
cld
mov
testl
lds
adc
mov
lods
cltd
add
hlt
in
stc
iret
les
sbb
dec
leave
jle
xor
aad
and
in
add
push
into
lock
inc
mov
int
subb
ret
or
mov
pop
pop
gs
xchg
icebp
loop
mov
dec
jo
enter
push
nop
test
mov
dec
cmc
xor
je
lock
mov
sub
faddl
dec
fwait
shl
mov
mov
dec
lcall
aam
into
mov
mov
cmp
mov
rol
loope
mov
dec
and
and
adc
repnz
ds
in
ret
cmc
xchg
dec
xor
xchg
nop
xchg
adc
jno
jle
test
push
sti
sub
pop
imul
mov
push
daa
adc
imul
imul
shrb
inc
or
test
jae
lret
into
pop
ret
mov
mov
js
aam
out
push
xlat
test
fnstcw
dec
cltd
jl
outsb
push
fistpll
xchg
push
or
dec
les
sbb
icebp
cmp
sbb
ja
cmp
and
jbe
popf
xor
xchg
or
addl
dec
and
and
or
mov
inc
cmp
xchg
cmp
xor
xchg
dec
cli
sarl
outsl
aad
xor
out
push
xchg
cld
movsb
loope
push
cmp
fists
lret
inc
bound
ret
inc
xchg
fnstsw
mov
xchg
mov
cmc
outsb
ja
push
fadds
je
in
lret
add
loop
ljmp
popf
in
cmp
xlat
push
icebp
jp
pop
mov
adc
and
jb
jns
push
cmp
sub
jae
mov
mov
pop
je
lret
cld
out
dec
cmpsl
pop
sbb
test
ljmp
mov
sbb
nop
popa
jns
lret
pop
mov
mov
sahf
aam
push
imul
add
or
xchg
push
jae
outsb
cmc
lret
mov
xlat
push
lds
push
jge
adc
or
mov
jg
cmp
fs
push
xchg
cmpsb
and
and
rclb
loop
int
xor
xchg
je
mov
and
dec
mov
inc
and
xor
enter
inc
mov
sti
sub
jb
aad
adc
dec
lahf
nop
push
push
mov
nop
std
push
xchg
dec
lret
jmp
scas
sbb
test
dec
in
mov
cmp
or
jnp
and
mov
xor
ljmp
jg
fdivrs
jne
jmp
insb
insb
outsb
push
sbb
jae
add
lret
loopne
jmp
pop
sub
orb
dec
and
int3
popa
jmp
cli
dec
lock
lcall
fdivs
push
mov
mov
fldl
xchg
cwtl
mov
jns
jo
push
push
sbb
arpl
sub
sahf
repnz
pop
mov
rolb
mov
into
inc
xchg
mov
mov
ja
mov
stc
push
iret
push
scas
rolb
aas
sahf
lret
and
push
aam
xchg
andl
dec
and
add
inc
cmpsb
ret
inc
xchg
mov
cmp
or
aam
mov
icebp
jmp
add
cmpsb
jne
sbb
imul
dec
movsb
fcmovu
movsb
cltd
sub
or
jecxz
and
imul
out
mov
inc
or
negl
pop
in
cmpsb
pop
jg
dec
insl
in
sbb
xor
dec
and
mov
hlt
sub
andb
je
nop
adc
sub
in
add
mov
xchg
xor
inc
mov
add
mov
mov
mov
daa
cmp
outsb
orb
je
mov
and
mov
clc
jbe
dec
bound
jmp
sub
call
adc
xchg
aad
scas
or
push
push
lahf
in
push
sbb
mov
push
pop
adc
push
mov
stos
imul
adc
mov
or
push
sub
push
fstpl
push
clc
mov
in
mov
in
xor
adc
mov
xchg
jo
dec
and
loope
xchg
mov
xchg
and
outsb
insl
movsl
cmp
dec
inc
dec
mov
sub
movsl
pop
mov
pop
push
sub
cmpsb
push
movl
imulb
insl
jge
aaa
imul
and
push
pop
push
fwait
cmp
xchg
sbb
data16
jle
pop
divb
insb
pop
das
cmp
lcall
mov
scas
jne
jno
int3
add
jecxz
outsl
addr16
pop
pop
pop
pcmpgtw
jecxz
mov
jne
cmp
subl
movsb
into
sbb
imul
call
pushf
inc
stos
dec
in
into
mov
add
cmc
or
push
xchg
fildl
aam
cmp
cli
xchg
sub
shr
mov
or
cwtl
pop
fnsave
pop
mov
stos
pop
sbb
cmpsb
imul
xor
loopne
inc
add
out
jno
mov
inc
rolb
inc
pop
nop
sbb
mov
aas
repz
lods
push
popa
pop
roll
aas
cs
xchg
lods
jae
movsl
call
sub
inc
xlat
pop
addr16
out
xchg
sbbb
and
jecxz
clc
xchg
cmp
jle
or
lods
cltd
mov
imul
or
orb
xlat
orl
pusha
add
xor
setbe
mov
test
sub
or
dec
inc
fcompl
shlb
add
inc
pop
mov
sbb
pop
push
in
scas
inc
jmp
xchg
ret
and
in
js
int
inc
cmp
xor
mov
enter
jg
lcall
cmp
mov
fcmovnu
adc
aam
dec
mov
or
mov
pshufw
jae
xchg
mov
rcrl
jmp
call
or
mov
jb
popf
js
fs
pop
mov
adc
in
ret
add
idiv
mov
ficomps
dec
addl
insl
repz
push
adc
insl
push
loopne
insb
hlt
ficoms
lods
popa
mov
jmp
mov
mov
shlb
test
imul
es
mov
mov
cmp
lahf
xor
shlb
sbbb
imul
dec
jmp
jnp
mov
sbb
mov
mov
and
mov
inc
ret
js
in
pushf
nop
cmp
js
mov
mov
mov
jb
ja
dec
aam
stos
cli
fimuls
push
inc
xor
call
jns
add
xchg
mul
sub
ret
mov
xchg
xor
xor
mov
lods
cs
pop
and
jb
sahf
lock
cs
data16
fldenv
and
xlat
push
xchg
xor
loope
mov
pop
sub
pop
pushf
lods
xor
popa
jae
or
dec
fsubr
in
sub
xchg
cli
sub
mov
mov
cmp
sub
test
or
fistpl
inc
je
add
dec
pop
mov
mov
out
adc
sbb
mov
or
adc
xchg
adc
xor
pushf
cwtl
push
sbb
shll
lods
out
cs
rol
xchg
cmp
ret
push
mov
jne
mov
mov
in
stos
flds
jl
fcoms
add
or
pop
fnsave
lret
sbb
and
xchg
mov
xor
add
int
pop
dec
push
cld
sbb
cmp
icebp
scas
fadds
push
dec
inc
push
insl
outsl
pop
inc
pop
jo
movsl
mov
das
jb
mov
je
ss
stos
outsl
sbbb
push
push
jecxz
out
addr16
jl
adc
pop
mov
mov
add
add
mov
ficoml
mov
push
in
lea
push
call
insl
jmp
push
ficoml
addb
add
das
decl
mov
ficompl
push
and
fmuls
dec
push
imul
ja
sub
push
out
push
ja
dec
and
adcb
mov
sti
sbb
stos
addr16
das
cmp
lret
into
shrl
ror
cmpsb
sub
push
and
sub
jae
sbb
xchg
sub
mov
fnsave
mov
and
movsb
dec
and
in
jae
xor
mov
fwait
sub
outsb
mov
aas
fsqrt
imul
mov
divl
mov
andb
in
es
mov
jecxz
popa
add
cmc
inc
idiv
jbe
leave
xor
sbb
enter
loopne
aas
push
mov
daa
nop
lret
rcrl
fldl
repnz
jbe
inc
out
sbb
rcrl
es
or
lea
lret
dec
xor
sahf
pushl
mov
mov
pushf
push
mov
lcall
adc
inc
imul
cltd
xchg
popf
jl
adc
sbb
orl
repnz
adc
outsb
xchg
mov
lahf
push
or
inc
mov
insl
jle
negl
aas
je
out
xlat
nop
adc
testb
aaa
mov
fsubrs
test
mov
and
sti
pop
outsl
pop
and
insl
ss
test
sbb
pop
cmp
pop
insl
mov
bnd
adc
xor
les
mov
dec
lock
lea
inc
syscall
out
jne
push
add
xchg
xchg
bound
jge
inc
jns
xlat
lods
decl
mov
and
inc
cltd
movsb
sarl
inc
jo
or
fldt
das
cli
int3
push
les
cmp
jbe
adc
mov
cs
sbb
push
shr
stos
xor
or
addr16
pop
xchg
xchg
push
sub
rclb
mov
mov
dec
inc
add
and
ret
push
pushf
adc
clc
cld
and
sarl
aas
mov
sbb
lock
xchg
cmp
fadds
test
jbe
fst
jge
fadds
je
xor
add
imul
es
add
popf
mov
cmp
inc
jno
aad
das
das
xchg
addb
xor
jnp
lods
xor
adc
add
into
sub
clc
xor
xor
andl
shl
push
xchg
adc
fidivl
sbb
mov
and
sbb
dec
or
pusha
cmp
adc
dec
xchg
xor
or
test
enter
mov
xchg
movsl
jle
inc
loope
pop
sub
dec
aas
mov
sub
cmp
cmp
sub
cmp
sub
mov
and
das
sub
cmp
sbbl
cwtl
add
movsb
and
mov
pop
loope
push
cmpsb
aad
repz
js
cmp
push
notb
daa
mov
jo
push
adc
mov
aas
sub
repnz
stos
add
adc
xchg
movsb
ljmp
movb
loope
jmp
inc
mov
xchg
adc
push
gs
adc
out
je
adc
jo
lea
testb
add
gs
adc
test
bound
xlat
push
movsl
frstor
lds
cmp
inc
mov
or
shl
lcall
jl
push
or
mov
jg
into
pop
push
fisubs
push
fsub
inc
sbb
dec
cmpsl
test
aas
mov
ja
sub
lret
cmp
xor
idivl
fcompl
out
ret
xchg
test
test
andb
inc
mov
stc
mov
add
add
lcall
sbb
ret
addl
out
sti
dec
mov
pop
push
ja
lods
sti
loope
jp
push
jo
mov
adcb
push
in
pop
pushf
out
dec
rcrl
dec
les
xor
int3
pop
mov
dec
arpl
outsl
pop
negb
stc
adc
cmpsb
lahf
mulb
xchg
cmp
xchg
cs
mov
rolb
inc
outsl
push
pushf
jns
push
sbb
mov
pop
aad
out
bound
pop
decl
lea
pop
mov
sbb
pop
push
xchg
scas
or
pop
pushf
gs
push
scas
mov
repnz
jecxz
sahf
pcmpgtd
and
stos
lahf
xchg
jecxz
fwait
repnz
insb
add
roll
jg
cli
pop
clc
mov
cli
out
enter
pop
push
fiaddl
ss
mov
mov
out
dec
leave
or
lret
loopne
xchg
pop
cmpsl
fcmovnu
sub
jmp
dec
inc
inc
icebp
inc
adc
mov
sub
into
jbe
movsl
jo
or
inc
subb
xor
rdmsr
jmp
dec
xor
cmp
add
cmp
filds
notb
add
xchg
dec
in
add
and
les
sub
lcall
call
mov
lock
cmp
push
add
js
nop
sbb
sub
addr16
lods
jg
repnz
int3
xchg
xchg
ret
add
mov
test
xor
or
add
out
pop
or
xchg
fmuls
out
sti
inc
mov
lret
and
jo
lock
cmp
loop
faddl
cmp
inc
cwtl
dec
jne
fs
out
arpl
sbb
iret
jp
jle
inc
jnp
lea
repz
pop
push
pop
jno
popf
mov
iret
icebp
aam
outsl
mov
mov
je
and
jmp
lods
xor
jnp
rolb
dec
add
sub
mov
hlt
push
cld
out
mov
add
mov
outsl
mov
in
bound
in
push
es
inc
push
xchg
imul
stc
sbb
in
mov
pop
pop
ljmp
fsts
pusha
pop
jne
xchg
fldenv
cwtl
dec
pusha
lods
mov
push
rcrb
nop
arpl
jmp
out
sbb
jne
outsl
mov
pop
adc
sarb
ds
sub
push
sub
ljmp
ret
lcall
mov
push
dec
imul
rclb
fmull
in
or
lahf
mulb
mov
mov
gs
shrl
cwtl
dec
cld
add
std
mov
shrb
out
es
lret
pusha
or
xor
lcall
adc
pop
push
dec
cmpsb
stc
sti
and
outsl
sbbb
pushf
push
or
jo
aas
repz
aaa
xor
mov
icebp
aaa
es
out
pushf
and
dec
sub
mov
in
into
lods
xor
out
mov
daa
movsl
and
xor
lock
mov
out
out
stc
push
mov
outsb
call
cmp
push
mov
cld
push
adc
dec
push
push
cli
cmp
maxps
rclb
or
lods
add
xor
jge
sbb
dec
sbb
cmpsl
into
cmpb
in
into
inc
daa
adc
leave
xor
aam
aad
mov
dec
cltd
dec
imul
test
adc
mov
mov
sub
cmp
enter
test
into
fwait
sub
and
pop
xchg
push
pop
pop
sbb
xchg
pop
inc
push
push
lods
call
add
rorb
xchg
inc
loope
test
push
int3
push
popf
sub
mov
cmc
adc
icebp
sbb
or
push
pop
adc
xor
jns
hlt
ss
sbb
nop
mov
in
xor
jnp
lahf
adc
mov
xor
subl
and
js
cs
xor
decl
cwtl
or
aas
mov
add
xchg
rclb
lea
fidivrl
out
inc
mov
lds
sbb
cmp
cmp
dec
push
decl
cs
and
cmp
push
mov
cmp
mov
mov
push
inc
jae
pushf
sub
xchg
call
add
xchg
push
jb
pop
push
shld
pop
in
lods
imul
and
popl
fwait
outsl
push
inc
in
gs
inc
dec
push
mov
add
lret
xor
andl
movsb
inc
jle
test
mov
idivb
mov
bound
adc
in
andl
xor
xorl
inc
inc
sbb
movsb
pusha
out
jne
arpl
test
loopne
sti
dec
cwtl
jg
push
and
dec
call
sbb
xchg
push
push
pop
mov
pmulhw
out
push
push
call
sub
dec
jno
xchg
mov
aam
mov
cmp
outsl
mov
test
sti
lods
in
mov
dec
das
movsb
pop
xchg
dec
ret
bound
push
or
cwtl
jmp
shl
cmpsb
sbbb
jo
in
inc
ss
rorl
xor
adc
scas
sbb
or
dec
scas
add
enter
in
loope
push
rcll
test
and
dec
sub
cmp
int3
xor
jb
adcb
jnp
cmp
shl
in
sub
mov
sub
pop
scas
jp
adc
aas
sbb
insb
std
cli
fcmovnbe
or
xor
pop
repnz
stc
jp
pop
dec
jo
dec
jbe
fisubrl
dec
xchg
pop
scas
mov
ffree
ja
push
sub
fsubrl
mov
push
dec
inc
lods
adc
mov
sbb
cmp
cs
es
int
incb
sbb
add
jecxz
bound
mov
aam
and
jbe
sub
movsb
or
pop
enter
imul
scas
loopne
xchg
xorb
jp
mov
imul
lea
out
xor
int3
inc
jns
adc
mov
cmc
cld
xchg
push
iret
xor
mov
stos
jge
inc
xchg
shl
aad
xchg
sbb
mov
fadds
and
sbbl
adc
inc
arpl
das
add
aad
leave
mov
dec
mov
pusha
lds
cmp
lds
jl
xchg
aad
aas
mov
fcmovbe
and
pop
rorl
insl
fs
add
int
fsubrl
shr
scas
lret
in
call
jo
push
sbbl
into
dec
jle
push
lods
add
ret
inc
jno
shll
sahf
mov
jnp
inc
pop
ja
ret
sahf
xor
and
pusha
jo
cmp
and
incb
dec
cmpsl
ja
push
hlt
dec
rcrb
subb
in
inc
adc
aad
sbb
add
call
je
add
pop
loopne
mov
cmp
fisubrl
jmp
add
mov
and
cs
or
inc
lret
mov
sti
xor
in
aam
cmpsl
rorl
hlt
pop
mov
imul
jae
negl
push
mov
fidivs
sbb
call
lock
dec
js
xchg
out
out
jae
popf
ljmp
lock
mov
rcr
push
fwait
orb
or
xor
insb
addb
testb
mov
mov
sbbb
lods
lret
mov
and
ja
movsb
popf
bound
enter
add
sbbb
test
test
mov
mov
adc
add
das
cmp
lahf
imul
call
lcall
xchg
lret
insb
sbb
and
mov
adc
dec
fists
sahf
cwtl
roll
xchg
sub
xor
xchg
push
xchg
mov
cmpsl
sbb
out
xor
mov
dec
dec
dec
dec
orb
dec
fwait
shrl
cwtd
or
test
xor
arpl
jge
jo
push
dec
repz
xor
movsl
jmp
push
out
mov
in
dec
lock
scas
outsl
mov
mov
add
mov
cmpsb
sub
xor
scas
xacquire
jecxz
mov
repnz
add
cmpsb
pushl
jne
outsb
sub
sbb
xchg
sahf
push
je
add
rorb
pop
orl
add
jge
test
ja
call
inc
fstpt
mov
sbb
dec
sbb
ficomps
lods
fdivr
pop
repnz
iret
and
inc
out
div
and
sbbb
enter
mov
or
push
imul
aaa
fistpl
xchg
jnp
mov
pop
aad
and
lods
mov
fcmovne
insl
jae
cli
pop
mov
jae
or
cs
enter
test
out
add
bound
imull
xor
out
xchg
aas
sub
jno
cltd
adc
push
xor
in
repnz
imul
add
scas
les
pop
pavgw
push
xor
dec
xchg
inc
xlat
stos
adc
pop
xchg
mov
loopne
and
sbb
inc
adc
sub
jo
stos
lret
daa
jo
mov
push
mov
sub
sub
mov
mov
int
cmp
xchg
add
mov
or
mov
sbb
enter
aaa
xlat
test
imul
jbe
pop
sahf
cmc
hlt
leave
orl
or
jb
inc
push
sub
aam
inc
inc
cmovs
pop
call
pusha
mov
sar
add
xor
fidivl
cmp
pop
into
mov
adc
shr
push
pop
or
in
push
push
dec
enter
mov
and
or
fcom
sbb
aad
cmp
das
fistpl
arpl
sbb
loopne
into
adc
xchg
sub
daa
imul
call
and
inc
lods
sub
inc
cli
in
inc
xchg
in
push
aas
xchg
scas
cltd
loopne
in
xchg
mov
ljmp
adc
pop
int3
pop
jecxz
sub
stc
xor
pop
jle
push
test
mov
lock
sbb
jbe
adc
iret
clc
clc
ds
push
sbb
lcall
sbb
das
fbld
fnstcw
repz
clc
mov
inc
cmpsb
sahf
fcmove
adc
sbb
add
test
fldcw
negb
push
aam
xchg
push
pop
les
lahf
addr16
fnsave
mov
test
pop
je
adc
pop
mov
cs
mov
dec
jb
jae
xor
push
xchg
and
int3
insl
into
mov
sub
les
push
lret
push
das
ret
mov
mov
add
xchg
shlb
imul
lock
or
cmp
aas
sbbl
int
mov
int3
mov
in
cmpsb
in
push
lcall
shlb
jge
ds
das
clc
cltd
mov
scas
mov
push
or
in
xor
addr16
sub
into
mov
outsl
xor
jp
jge
cmpsb
mov
lcall
xlat
push
rorl
mov
add
jp
insl
xor
and
mov
jmp
cwtl
rclb
pushf
fadds
aad
dec
mov
ds
cmp
std
pop
in
hlt
xlat
mov
hlt
jg
cmpsb
fsub
popf
jg
mov
lock
pushf
fadd
sub
jmp
shrl
decl
jp
ja
scas
dec
jle
sbb
xchg
cmpsb
idivl
or
flds
xchg
cmc
xor
movsl
fiadds
dec
inc
shl
das
jno
xchg
and
fwait
xchg
lods
and
ljmp
mov
sub
jecxz
lret
pop
out
and
sub
mov
sti
mov
xor
push
insb
sti
loop
mov
lock
push
ss
xor
xor
ljmp
mov
aam
sbb
andb
mov
cmp
bound
pop
sbb
jmp
jb
jecxz
fmuls
mov
pop
std
into
sub
mov
icebp
jnp,pt
jae
add
add
je
scas
ss
inc
shr
cmp
push
dec
rcl
xchg
out
mov
mov
in
mov
add
adc
sahf
adc
dec
mov
push
adc
pop
in
xor
icebp
hlt
add
mov
dec
cmp
leave
xchg
jecxz
sub
decl
sbb
loope
add
adc
sub
mov
or
push
sbb
dec
jb
orb
out
movl
mov
push
pop
xor
and
leave
outsb
call
mov
jge
or
dec
adc
arpl
aaa
imul
adc
fs
and
mov
xchg
inc
xchg
cmpsl
lods
pop
jecxz
inc
aas
and
daa
icebp
push
pop
xor
jl
add
inc
xchg
repnz
jp
pop
test
in
add
jmp
aaa
xor
lods
jns
vunpcklpd
xchg
xchg
mov
mov
jne
and
jg
pop
add
rol
call
cmp
ja
jbe
loop
cmp
push
pop
xchg
rorb
push
inc
mov
insb
test
dec
and
pushf
stos
adc
scas
rorl
ret
stos
ss
add
sbb
push
repz
xchg
push
and
jae
sub
lods
mov
xor
mov
xchg
xor
cwtl
xchg
mov
gs
ljmp
rcrl
push
fistpll
repnz
mov
mov
and
aaa
lret
fildll
shrl
idivb
out
push
mov
or
int3
xor
sub
in
sbb
fwait
test
aas
cltd
jl
cld
addl
out
cmp
mov
lods
jbe
gs
in
sub
pop
cld
ffree
jne
leave
fwait
jb
fmul
sbb
std
xlat
xor
out
mov
jmp
or
jns
and
xor
push
dec
jae
mov
test
mov
sar
jbe
aad
and
jns
sub
cmp
aas
mov
xchg
xor
stos
jae
mov
leave
ret
data16
and
xchg
insb
pop
ds
adc
add
filds
lcall
sbb
ret
adc
inc
mov
test
fadd
sti
movsl
in
push
cmpl
test
loope
cmp
push
movsb
popf
outsl
insb
aam
scas
loope
or
addr16
lret
iret
jns
aaa
test
test
lock
pop
lds
mov
lds
sahf
pop
cmp
jb
sbb
pop
rclb
repz
xor
fdivl
sub
imul
sub
push
shlb
pop
insl
cmp
xchg
outsl
mov
dec
xlat
mov
mov
in
sarl
lods
lods
shr
xchg
loop
push
loop
jne
push
pop
outsl
ret
mov
push
sti
fcoml
loop
and
or
sarl
out
sahf
mov
push
loope
lahf
push
outsb
pop
test
inc
arpl
movsl
mov
fnsave
js
es
test
jo
push
push
js
test
mov
xchg
dec
stos
sti
repnz
insb
mov
into
mov
mov
out
add
jno
call
mov
or
adc
lcall
scas
lods
xchg
xor
mov
mov
jae
test
out
in
cmp
mov
sbb
pushf
adcl
or
add
test
add
clc
pop
scas
pop
cmp
and
add
loop
pop
testl
add
repnz
ss
pop
sub
iret
pop
push
jae
insl
inc
mov
inc
inc
and
dec
jecxz
stos
push
xor
aaa
mov
xchg
mov
or
movsb
cs
jl
mov
outsb
andl
aam
cmc
mov
mulb
dec
sub
aam
adc
xchg
ret
and
jle
xor
mov
imulb
add
imul
hlt
ret
fcom
pop
fwait
outsl
cwtl
shlb
xchg
and
imul
test
inc
cmpsl
cld
mov
fcomi
loop
adc
xor
dec
pushf
out
dec
mov
add
push
aam
push
lret
in
inc
push
inc
rolb
mov
xor
fcomps
push
es
test
sarb
fsubrp
cli
mov
loop
or
pop
dec
sub
test
leave
add
nop
rcl
cmp
xchg
push
fwait
push
mov
sub
jmp
xor
inc
cmp
lea
mov
pop
fbstp
jnp
outsb
fdivrs
dec
push
sub
inc
xchg
xchg
jmp
sub
and
imul
iret
inc
sbb
enter
lcall
inc
sub
push
stos
lea
shll
pop
push
dec
lret
or
xchg
xor
mov
rcrl
and
nop
out
push
xchg
inc
or
lods
das
mov
fsubp
popa
mov
or
xor
scas
and
mov
cmc
sub
imul
push
cmp
aad
and
fimuls
testl
int3
push
mov
xchg
push
scas
sub
negl
int
ljmp
pop
adc
fistpl
adc
cmp
fldcw
aas
scas
sbb
dec
or
xchg
divl
jne
sbbl
icebp
mov
into
insl
loope
jne
lods
cmp
jmp
xor
add
stos
cmp
inc
mov
xchg
imul
mov
addl
xor
test
or
add
jecxz
or
int
xlat
xchg
mov
dec
aas
xchg
lahf
in
dec
inc
aaa
or
sub
movsb
cmp
jmp
into
cli
movzbl
add
jo
cmp
dec
sbb
mulb
ret
sub
push
mov
scas
stos
jne
mov
jo
cmp
cmpsl
imul
shlb
add
cltd
bnd
mov
fwait
loopne
inc
lcall
mov
out
add
into
nop
lods
or
xor
and
pop
ret
clc
or
loope
sti
adc
mov
jbe
inc
loope
shlb
xchg
mov
in
dec
scas
xor
lods
notl
pop
es
movsb
int3
rdmsr
cmp
cmc
push
out
call
add
adcl
icebp
pop
into
fisttpll
insl
jg
lahf
adc
xchg
insl
or
test
or
aas
je
pop
mov
add
sub
and
stos
xchg
je
jecxz
movsb
fildl
and
out
movsb
sub
sbb
fs
test
xor
push
pop
int
sub
mov
jl
dec
test
fs
or
mov
cmp
insb
faddl
xor
arpl
stos
movsb
icebp
sub
mov
adc
fistps
sbb
and
aam
cmp
inc
pop
fdivrs
cmp
mov
out
aaa
or
movsl
icebp
adc
mov
test
pop
xchg
xchg
mov
dec
cltd
clc
push
push
inc
sub
fcomi
pop
aad
xchg
or
bound
icebp
sub
mov
dec
bts
iret
mov
xlat
pop
aaa
mov
adc
push
adc
mov
outsl
movb
sub
loopne
mov
das
or
and
aaa
mov
fmul
mov
cwtl
dec
jge
pop
sti
pop
sbb
insl
adc
xchg
sub
sub
push
pushf
sahf
int3
repnz
ret
fldenv
sbb
push
xchg
lahf
lss
and
fiaddl
add
stos
adc
out
adc
icebp
dec
cmc
jl
loopne
pop
or
inc
cmp
aad
sti
call
ret
pop
scas
std
inc
adc
xchg
loope
mov
xor
inc
xor
dec
ret
mov
mov
and
ror
fldenv
stos
test
push
and
gs
inc
gs
ljmp
outsl
in
inc
add
mov
jmp
pushf
and
jnp
xchg
cmc
and
jmp
loope
mov
add
fcmovu
push
iret
push
test
jge
mov
fcoms
xchg
xor
enter
and
xor
data16
push
add
sub
sti
les
lods
repnz
pop
xchg
sub
mulb
add
push
lods
icebp
or
mov
popa
mov
arpl
cmp
ja
or
movsl
or
test
xchg
into
inc
clc
push
jmp
and
out
hlt
xor
sbb
shrl
loope
out
mov
jbe
inc
and
out
orb
pop
ret
dec
popa
mov
lret
mov
xor
insb
add
mov
and
xchg
or
scas
xorl
leave
or
cwtl
pushf
cmpsb
xor
lods
orb
dec
ds
je
popa
pop
pop
sbb
daa
jne
leave
gs
jae
cmc
rcll
pop
inc
mov
sub
das
mov
loope
mov
cmpsl
aas
pop
hlt
push
int
mov
or
clc
xor
mov
push
mov
or
xor
inc
loop
dec
es
dec
jae
imul
ret
stos
adc
push
cmp
or
jbe
pop
nop
add
loopne
sbb
ret
ds
jnp
or
aaa
mov
and
pop
mov
push
sahf
lahf
add
lret
pop
fdivl
inc
push
mov
cmp
xchg
std
or
stc
push
adc
mov
int3
cmp
push
and
insb
cmp
jno
mov
mov
xchg
rorl
push
add
test
lcall
testb
pop
sbbb
pop
adc
add
sti
mov
xor
rcll
sahf
daa
xchg
idiv
int
mov
adc
add
lret
movsl
pushf
nop
push
or
add
inc
lods
or
sbb
or
arpl
dec
iret
gs
loopne
add
clc
addl
add
xor
out
jbe
jp
or
cmp
add
sarl
ja
adc
ljmp
lcall
fcomi
aas
cmp
out
jno
adc
dec
adc
cwtl
lods
pop
jo
stos
mov
ret
scas
loopne
negl
mov
movsl
sub
xor
aam
stc
mov
mov
aas
adc
lret
fwait
cmpsl
dec
outsb
mov
mov
sbb
in
into
jnp
shll
repz
ja
xchg
insb
push
lea
call
stos
pop
test
xor
push
jnp
xor
leave
cmp
pop
sub
mov
testb
leave
sub
mov
xor
add
scas
xchg
cs
out
into
call
hlt
leave
push
mov
inc
and
test
inc
aam
pop
jecxz
aas
mov
xchg
icebp
fs
je
int3
dec
fs
jno
or
data16
or
jns
mov
adc
pop
addr16
fisubrl
out
pop
sti
dec
mov
jne
ds
ss
cmpsb
out
dec
add
xcrypt-ofb
cmpsl
scas
mov
cmc
mov
arpl
jbe
lret
notb
es
lock
lret
push
test
test
mov
cmp
inc
mov
inc
xchg
iret
sub
mov
test
fwait
jge
lds
mov
cmp
or
ss
jo
pop
cmc
inc
leave
mov
sub
ficoms
lods
test
mov
xchg
or
and
addb
scas
cli
les
rorl
lahf
aaa
jo
pusha
sub
mov
mov
in
ja
rolb
sub
sbb
xor
in
inc
xchg
xchg
rclb
and
clc
repnz
add
test
sti
lods
jg
das
sub
xorb
xor
jno
test
xchg
sbb
mov
mov
or
cmp
in
xchg
xor
movsb
popf
sub
dec
sarl
sbb
call
or
iret
repnz
xor
push
jle
add
jmp
jns
jp
test
sbb
xchg
les
enter
int3
hlt
jns
pop
sub
xchg
ja
fimuls
enter
test
fs
xchg
jbe
mov
scas
cld
ud2
movsl
lcall
xor
xchg
xor
ficoms
aaa
lods
xor
jbe
call
lcall
out
lock
sti
aaa
sub
movsl
mov
std
enter
dec
in
mov
mov
icebp
push
mov
pop
dec
rol
mov
sub
pop
aas
xchg
pop
and
push
mov
mov
in
loopne
inc
jns
fucomi
push
jl
add
stc
mov
pop
inc
mov
xchg
push
frstor
repz
pop
and
or
lods
dec
pop
loopne
scas
test
pushf
pop
lds
popa
lahf
mov
xchg
push
add
dec
mov
cmp
daa
test
aam
loopne
dec
pop
cmpl
xchg
xchg
and
into
push
sbb
and
popf
jp
mov
xor
sub
sub
inc
call
cwtl
push
cwtl
jge
sub
js
push
in
das
or
sub
adc
outsl
inc
loop
dec
ss
sti
inc
mov
ja
shlb
mov
jo
cli
ja
pop
pop
xchg
loope
push
cld
rorb
insb
pop
test
in
in
jno
lds
repz
jnp
jle
mov
inc
cmpl
xlat
ficompl
dec
mov
cmp
mov
enter
lods
pushf
jb
popf
mov
inc
xor
test
push
outsb
sbb
dec
push
sbb
aas
cmp
xor
ja
inc
jne
lahf
in
push
or
fnstcw
pop
inc
xor
sub
mov
addr16
fdiv
loope
jl
add
xchg
and
orb
xor
and
cltd
xchg
leave
cltd
cmp
aas
fdivrs
pop
sub
shlb
or
ljmp
inc
pop
in
xchg
data16
push
in
mov
cmp
scas
repz
js
aad
roll
add
mov
test
cltd
jge
call
imul
mov
jo
lahf
jno
xchg
mov
push
or
adcb
adc
adc
bound
fdivs
mov
xor
adc
dec
mov
push
mov
lds
mov
sbb
repz
movsb
inc
push
push
xor
cmp
adc
mov
test
inc
pop
push
call
xor
sub
xchg
roll
frstor
mov
mov
ja,pt
push
push
out
cmpsb
shlb
jecxz
pop
lods
or
js
mov
jns
pop
adc
xchg
aam
push
into
mov
test
jge
hlt
scas
les
outsb
pop
mov
fwait
jecxz
xlat
cs
adc
aad
arpl
aaa
pop
and
lds
clc
repnz
xchg
xchg
or
aaa
dec
dec
sub
inc
inc
shll
inc
adc
in
lods
lret
mov
mov
ja
inc
aas
adc
pusha
xchg
jno
sbb
mov
inc
iret
xor
xor
sarl
inc
xchg
stos
sti
jle
test
inc
cmpsb
inc
loop
int3
pop
mov
insb
loope
sub
stos
cs
fdivs
sbb
mov
pushf
and
jmp
dec
xor
gs
ljmp
xor
shl
fcmovnu
sub
scas
push
andb
and
xlat
pop
jne,pn
lret
sbb
scas
jg
into
adc
fcomp
sub
lcall
cmp
rolb
adc
add
call
xor
add
out
xchg
sti
pop
stc
cmovb
int
sub
xchg
lea
mov
dec
mov
and
push
test
cmpsb
mov
aas
andl
sbb
jge
sbb
test
xchg
mov
pushf
idiv
cwtl
xor
js
dec
or
cmp
xchg
dec
dec
test
insl
pusha
pop
sbb
jbe
cmp
mov
jmp
jb
cmp
xchg
lcall
faddl
and
and
cmp
out
adc
insl
mov
adc
fmul
xchg
jo
int3
mov
sbb
sbb
dec
lahf
or
insl
push
sub
sahf
or
fmull
mov
mov
mov
imul
add
lret
js
das
popf
out
jle
jbe
pop
out
daa
mov
and
scas
jb
adc
das
shr
mov
xor
ja
out
add
mov
push
dec
in
mov
dec
out
cmpsl
adc
jle
les
mov
dec
push
dec
movb
sbb
mov
push
add
sti
dec
push
pop
mov
stos
lods
movsl
and
xchg
pop
outsl
ficomps
push
or
movsb
aad
icebp
testl
std
mov
pop
les
inc
pop
inc
pop
pop
adc
sub
and
icebp
cwtl
fld
mov
jge
pop
dec
out
mov
and
data16
xor
es
pop
stos
sub
ss
faddl
mov
in
cmp
add
jo
add
adc
fs
or
subb
imul
add
or
aaa
fdivs
and
repnz
je
bound
xor
aam
jmp
outsb
pop
jmp
jo
sub
addr16
adc
and
arpl
xchg
insl
out
pop
int
pop
imul
mov
out
cwtl
imul
cltd
inc
push
ds
adc
xchg
mov
xchg
add
adc
data16
add
dec
sarb
inc
sbb
movsb
jecxz
mov
scas
dec
aaa
pop
shl
cmpsl
sbb
ja
inc
and
xor
rorb
and
lret
cltd
lods
ss
fnstcw
fs
pop
add
ss
ret
xor
data16
jecxz
cmc
mov
pop
sbb
ret
xor
mov
adc
dec
call
jns
mov
in
nop
orb
xchg
and
push
idivl
mov
mov
andb
push
pop
mov
shl
test
iret
dec
roll
jnp
mov
jb
aam
xor
or
add
pop
adc
adc
or
sub
cmp
and
xchg
cmp
call
clc
mov
rcll
adc
daa
mov
xchg
push
push
mov
arpl
push
shll
dec
test
push
sub
nop
sub
lahf
mov
adc
sub
test
add
dec
pop
inc
add
rcll
inc
push
jp
int3
stos
nop
pop
jl
mov
lret
jo
es
lahf
pop
stc
mov
xchg
in
fs
or
inc
into
xchg
pop
add
cs
mov
nop
scas
and
and
sbb
stos
mov
jg
pop
pusha
icebp
sub
fcomps
add
sbb
and
jp
repz
adc
add
xor
cltd
insl
lret
or
cs
mov
adc
cmc
push
out
dec
mov
mov
push
jmp
push
xchg
fsubr
je
jmp
or
movswl
cmp
int3
xchg
mov
pop
mov
lds
inc
int3
cs
cmp
cmpsl
out
fcomip
les
adc
sbb
loopne
xor
mov
xchg
jle
out
rcrl
repnz
dec
add
addb
repnz
insl
stos
xchg
lds
or
or
jecxz
xor
clc
mov
into
in
cltd
mov
sbb
xorl
mov
push
xchg
out
out
and
sub
nop
pop
pushf
and
pop
stos
xchg
mov
pop
std
adc
popa
ficoml
fidivl
mov
mov
jp
pop
dec
or
repz
sub
dec
insl
aaa
test
outsb
gs
jns
aaa
dec
test
cmp
scas
jb
push
sarl
jle
arpl
xchg
push
sar
and
mov
sub
xchg
xor
mov
fsubl
addl
pop
shrb
mov
into
lret
dec
out
inc
aas
aam
mov
mov
fcom
xor
sub
data16
mov
aam
add
cwtl
stos
jg
lcall
pop
mov
jne
call
je
jne
pop
cli
fdivs
pusha
push
cmp
jle
testb
xor
sub
clc
jo
push
in
mov
inc
sti
cltd
push
sahf
cmc
cltd
out
cltd
xchg
mov
mov
push
push
les
inc
add
mov
shlb
repz
loopne
jmp
and
adc
test
cld
pop
mov
xchg
sti
js
push
push
leave
gs
mov
mov
jg
mov
mov
shlb
or
ret
xor
cwtl
std
imul
scas
lods
lods
in
stos
push
in
mov
mov
mov
cmp
xchg
sub
sub
mov
dec
or
clc
jns
std
adc
add
int3
orb
mov
outsb
arpl
in
aaa
sti
add
daa
pop
fldt
fldt
jp
movsl
mov
repnz
clc
mov
xor
cmp
sbb
hlt
test
and
iret
insl
adc
xchg
dec
mov
ret
and
aad
jl
push
lret
mov
jl
jmp
push
and
loope
rcr
or
xor
xor
aaa
js
push
mov
mov
push
int3
das
jecxz
jno
lea
and
sub
int3
mov
in
jb
dec
sub
jo
cvttps2pi
aad
push
push
mov
out
in
pop
out
cmp
xchg
negb
clc
shrb
adc
hlt
push
bound
pop
pop
sub
imul
and
sub
aad
or
cltd
jg
cmpsb
pop
aas
ljmp
arpl
inc
into
cmpsb
sti
sub
jg
add
pop
lahf
test
jl
jecxz
inc
lock
fisubrs
adc
sub
xchg
adc
xchg
inc
and
daa
in
mov
adc
mov
idiv
in
orl
xor
je
or
mov
outsl
mov
pop
mov
in
jb
cmp
inc
push
ss
adc
xor
jg
and
arpl
cwtl
lock
mov
cmp
xor
sbb
cmc
jp
scas
push
je
sti
in
outsl
cmp
test
push
mov
mov
add
idivb
dec
jbe
out
aad
xchg
test
xchg
mov
stos
cmp
add
cld
dec
adc
incb
loopne
mov
movsb
fsubr
dec
repz
mov
pusha
mov
mov
mov
adc
and
ljmp
push
jp
test
popf
leave
push
cltd
jle
es
aaa
xchg
push
adc
pop
mov
aas
out
pop
shr
and
lods
and
sarl
imul
nop
cmc
repz
jl
push
pop
mov
push
mov
sbbb
fbld
roll
mov
lea
mov
dec
aam
mov
divl
cwtl
cmp
aad
adc
mov
cmpsl
popa
dec
cmpsl
aam
jo
pop
fstpl
jmp
jae
push
jl
jb
dec
pop
push
outsl
out
adc
push
xor
incb
adcb
ret
orl
mov
outsl
jecxz
inc
sbb
push
sub
or
xchg
imul
add
sub
push
in
popa
imul
xchg
add
adc
insb
jle
aaa
push
cmpsl
adc
xor
mov
jne
mov
jo
push
test
or
andb
jle
sbb
int3
outsb
xor
insb
sar
or
cmp
adc
mov
leave
or
in
and
sbb
pop
sub
bound
jbe
cs
inc
jb
insb
outsl
cmp
pop
push
fcomip
jo
push
scas
sub
adc
ret
mov
inc
cwtl
jecxz
lods
xor
mov
dec
cmp
ja
roll
jmp
cmpb
rcll
psubsb
rcrb
mov
dec
sub
insl
mov
pop
pop
in
fnop
dec
push
jns
jl
push
push
add
fs
shlb
sbb
push
imul
pop
jle
jnp
xchg
repnz
pop
mov
pop
out
mov
inc
sub
cli
xchg
inc
in
push
jecxz
xlat
clc
mov
fadd
insl
ja
xchg
call
jno
xchg
xchg
jnp
jl
mov
push
xchg
call
leave
mov
insb
xchg
or
sub
mov
fisubl
jo
or
dec
nop
xor
xlat
test
enter
fdivl
rorb
inc
outsb
insb
hlt
shll
ret
jo
test
imul
xchg
in
rol
and
pop
aaa
add
aam
xchg
push
lock
mov
inc
and
dec
mov
xchg
cltd
push
jb
sub
mov
jp
xchg
notl
or
movsl
jno
mov
das
mov
jecxz
jo
leave
repnz
push
pusha
mov
xor
sbb
jb
sbb
mov
dec
jl
ret
cmp
scas
mov
jp
fadd
mov
xor
jecxz
inc
jns
push
jae
add
or
sbbl
icebp
push
jne
and
hlt
ljmp
pop
or
scas
xchg
pop
and
xchg
repnz
cmp
bnd
mov
inc
sub
sbbl
fwait
jge
sbb
fwait
mov
divb
popf
repz
or
fldcw
inc
gs
fldcw
int3
rorl
xor
js
push
jmp
inc
popf
sub
jecxz
pusha
cmp
add
cmp
gs
fbstp
xor
mov
fisubl
xor
fists
dec
negb
jmp
fiaddl
in
cltd
lods
xor
mov
data16
pusha
jmp
adc
inc
pop
dec
dec
dec
arpl
movsl
icebp
mov
xor
fs
nopl
fucomip
dec
pushf
jge
jbe
decl
mov
mov
mov
pop
rcrl
and
stos
or
shll
in
push
lret
mov
aad
cmp
les
cmpsl
fisttpl
push
mov
cmp
in
add
mov
mov
aas
rorl
sbb
nop
add
mov
push
cmp
sub
inc
add
mov
push
ret
les
xchg
push
sub
pop
es
insb
out
jo
dec
mov
add
mov
ficompl
adc
mov
xchg
lods
out
push
fs
dec
dec
stos
adc
cmc
cmc
mov
sbb
cltd
pop
fs
out
cmp
xchg
movb
mov
lahf
sbb
fimull
xchg
shll
xchg
std
sbb
xor
je
and
adc
cltd
push
das
jo
cld
sbb
insl
imul
call
inc
xor
push
and
ds
sbb
dec
jne
push
dec
adc
rolb
mov
inc
in
outsl
sbb
pusha
outsl
mov
xor
xor
lock
in
hlt
aam
and
sbb
jp
jo
jge
xchg
jo
push
xor
fwait
push
fstp
leave
int
data16
punpcklwd
insl
arpl
xor
pop
dec
sbb
jge
movsl
cmp
adc
nop
or
jmp
bound
ret
mov
popf
scas
in
mov
shr
mov
cmp
push
test
add
in
and
popa
clc
and
pop
jne
push
ss
adc
push
and
loopne
pusha
or
rclb
andl
add
and
leave
scas
stos
push
sti
lods
shll
out
dec
mov
pop
inc
and
lahf
add
or
and
dec
jg
and
jge
nop
xor
lret
or
and
xchg
mov
xchg
sti
lea
dec
pop
and
pop
or
cmpsb
iret
jne
jle
add
in
inc
mov
cmovg
push
insb
xlat
loope
push
sahf
pop
mov
jae
adc
adc
in
outsl
stc
hlt
arpl
rorl
and
test
outsl
out
les
fldz
in
daa
mov
cmc
in
cmp
jno
pop
stos
inc
shl
and
les
xchg
xchg
xor
call
jnp
mov
inc
imul
jo
xchg
test
jge
or
pop
fucomip
mov
or
inc
cmp
mov
inc
pop
xchg
push
sar
push
jge
cmpsl
ljmp
xchg
in
repnz
dec
icebp
mov
shrl
push
adc
mov
cmp
mov
cmp
out
mov
insb
lock
movsb
aaa
pop
mov
cld
xor
mov
imul
xchg
cmpl
sub
int
leave
dec
add
cli
jns
pop
push
outsb
inc
loopne
and
or
icebp
arpl
not
dec
adc
xor
mov
addr16
mov
mov
dec
sub
mov
mov
dec
add
mov
clc
dec
add
cmp
cli
jmp
jmp
and
in
sub
sub
push
mov
xor
push
cld
rorb
push
and
and
adc
lock
mov
sbb
imul
cmp
sbb
ja
jg
adc
fdivs
add
repnz
cld
sarb
mov
lods
sbb
addr16
dec
gs
and
shll
in
cwtl
mov
sarb
sbb
jns
or
out
or
pop
ficomps
dec
movsl
and
aad
lret
jno
aam
mov
or
dec
ret
sahf
inc
jl
push
and
add
insl
mov
lret
shlb
faddl
cmpsb
mov
cmpsb
lret
mov
mov
pop
xor
jno
ss
cmp
cmc
into
or
loopne
inc
and
sbb
cmp
inc
mov
and
push
xor
or
fldcw
imul
or
movl
push
inc
mull
xchg
jecxz
mov
out
imul
clc
aaa
adc
fidivl
or
leave
jb
jmp
addr16
push
and
mov
stc
cli
ja
mov
mov
xor
ret
out
add
adc
xor
jnp
je
andb
aas
shr
aam
or
pop
lds
es
cmpsl
xor
fwait
mov
mov
lahf
ret
or
aas
in
mov
mov
cmp
loopne
or
pop
movsl
mov
xlat
out
fwait
outsb
bnd
dec
mov
pop
mov
push
fstl
rcl
lods
ljmp
stos
out
adc
ja
xor
ret
ret
mov
out
add
and
adcl
mov
or
mov
scas
pop
out
andl
xor
ds
dec
sub
adc
inc
cmpsb
fs
add
or
bnd
addl
xor
sbb
jo
lret
pop
fcmovnb
fadds
jmp
cmp
lcall
cmp
fabs
add
xor
and
and
push
sti
dec
cmp
cmp
fadd
insl
xor
pushf
fisubrl
cmp
cmpsb
mov
das
inc
cwtl
imul
mov
fstpl
icebp
add
pop
mov
sahf
jns
call
pop
mov
cmp
jl
inc
xor
dec
testl
stc
aas
dec
push
or
sahf
mov
jno
push
repz
stc
inc
insl
mov
stc
xor
adc
cmp
pop
aam
xor
sub
cmp
lds
and
movsb
jg
xchg
bound
xchg
cmpb
das
bound
xchg
fucomip
aaa
sbb
lds
gs
mov
out
pop
push
shll
mov
mov
lods
in
imul
mov
jle
inc
nop
dec
pop
adc
cmpb
lret
inc
or
icebp
or
push
icebp
xor
ss
enter
out
hlt
sbb
int3
je
das
loopne
sub
lea
mov
rol
idivl
repz
loop
inc
insl
xchg
xor
jne
mov
xchg
lea
shrb
fs
loope
iret
cmpsb
fucomi
jp
addb
mov
ret
or
inc
or
add
sarb
push
je
notl
mov
imul
and
push
dec
pop
sub
js
pushf
or
push
mov
dec
jp
movsl
sbb
pop
sub
adc
lcall
and
mov
pop
or
fadds
or
jl
sub
dec
xor
and
pop
inc
inc
jecxz
cmp
dec
or
imul
ja
inc
cli
mov
add
mov
mov
insb
mov
adc
mov
xor
push
mov
jg
negb
in
or
imul
movsl
inc
mov
add
mov
push
call
cmp
push
iret
scas
out
push
fisubrs
out
push
push
aam
test
jmp
cltd
or
icebp
push
sbb
call
stc
or
mov
scas
pop
jmp
pop
icebp
push
mov
dec
pop
mov
xchg
or
in
loope
cmp
push
dec
push
xchg
or
adc
pop
xchg
jbe
jg
or
xor
test
lods
cmpsb
inc
push
jnp
insl
cltd
lahf
cmp
inc
outsb
popa
scas
sub
lock
int
or
cmc
mov
pop
imul
pextrw
sahf
inc
add
in
out
test
push
stos
xchg
pusha
mov
sbb
adcb
push
and
test
stc
popa
call
xchg
jp
sub
inc
sbb
add
sub
les
rol
hlt
mov
mov
call
sbb
call
loop
cmp
jbe
mov
nop
pop
in
lea
or
cmp
int3
cld
pop
and
xor
outsb
cmp
fadds
rorl
fwait
push
lret
fisubrs
xchg
insl
in
xor
pop
pop
cld
cmpl
pop
std
out
movsl
jp
aaa
mov
fdivrl
inc
addb
fnsave
movsb
ret
sar
inc
loop
add
fwait
cmp
in
int3
roll
inc
aam
aaa
pusha
push
mov
lret
insl
push
cmp
orl
jno
adc
jnp
fbstp
pop
fmull
lock
mov
xchg
jno
repz
fimuls
xor
rcll
xchg
mov
mov
in
sbb
add
lcall
sahf
jge
xlat
push
stos
adc
mov
jge
js
test
out
nop
jbe
cmc
enterw
pop
test
stos
cmpl
out
add
push
subl
dec
pop
mov
scas
sbb
jge
add
mov
imul
call
xchg
test
pop
mov
jns
stos
cltd
push
sahf
lahf
adc
adc
dec
sub
loopne
loopne
imul
imul
das
data16
mov
sub
dec
jmp
neg
xor
push
nop
xchg
cmp
mov
loop
xlat
pop
sti
cwtl
jg
mov
test
loope
ljmp
pop
ret
minps
sub
test
sbb
loop
mov
mov
in
std
mov
push
pop
clc
cmp
inc
adc
movsb
push
inc
pop
stos
mov
push
arpl
mov
popa
mov
stc
inc
mov
loopne
pusha
pop
or
mov
inc
cld
nop
orb
gs
test
setb
cmpsb
cld
andl
xor
lret
leave
and
lods
or
push
push
dec
or
mov
insb
mov
lods
jl
andl
rclb
lret
lods
dec
std
enter
cmp
clc
xlat
push
popa
push
inc
cmp
sbb
rcl
cmp
lahf
out
push
mov
xchg
add
lret
jp
addb
daa
add
jno
xor
cli
push
in
push
sub
push
not
sti
loopne
add
push
scas
inc
mov
sbb
adc
dec
add
cmc
ljmp
cmpsl
repz
dec
aas
xor
dec
push
subl
sahf
out
pop
std
and
dec
out
xchg
mov
or
shll
addl
enter
sbb
xor
push
pop
loope
mov
and
sub
stc
mov
mov
inc
push
iret
gs
lret
dec
push
jmp
push
xchg
aad
sub
aad
cltd
gs
mov
stos
mov
fnstenv
adc
pop
xor
unpcklps
loopne
stc
inc
xchg
inc
mov
xchg
and
cwtl
sub
jb
dec
iret
lcall
and
and
push
xor
cmpsb
mov
jmp
mov
xor
out
push
mov
inc
sbb
xor
xor
fwait
ret
cmpsl
or
ja
add
mov
xor
je
mov
mov
rolb
add
mov
add
mov
sbb
int
loopne
lcall
xor
cmp
outsl
in
or
or
outsb
push
in
or
sbb
das
dec
arpl
pop
and
pop
insl
imul
jbe
aaa
pushl
jmp
sub
lods
popl
push
scas
jmp
cmp
add
or
fdivp
jae
jb
lret
ss
fistl
and
int
in
mov
subl
mov
mov
mov
jae
sbb
cmpsb
leave
dec
push
inc
int3
cmpsl
ja
sbb
pop
out
out
push
subb
mov
dec
jge
adcb
test
dec
push
inc
or
add
cltd
imul
adc
arpl
test
hlt
mov
mov
cmp
scas
xorb
mov
push
xchg
jp
addr16
mov
or
testb
adc
idiv
cmp
dec
push
dec
aaa
in
pop
push
jg
mov
sahf
divl
jg
into
xchg
rcll
lds
mov
stos
adc
andb
cmpl
add
push
xchg
arpl
sarl
add
mov
jns
push
inc
sub
call
inc
lock
into
dec
xchg
pop
add
sbb
hlt
int
andb
pushf
push
inc
cli
jne
or
xchg
adc
dec
sub
inc
bound
lcall
jg
arpl
pop
mov
leave
daa
pop
adc
lods
loop
pop
adc
adc
arpl
in
jecxz
insb
cmp
cmp
pop
ret
and
clc
aaa
in
xchg
dec
call
pop
mov
out
push
sbb
call
or
pop
add
ret
mov
cmp
das
in
jecxz
xchg
xchg
bound
dec
or
jge
cwtl
push
xchg
ror
xor
mov
mov
add
scas
scas
lret
mov
mov
aas
or
imul
gs
dec
iret
dec
repz
dec
ja
mov
rolb
add
sbb
leave
dec
es
daa
addb
jnp
push
inc
call
xchg
lds
mov
jbe
or
sbb
imul
iret
mov
mov
push
ljmp
pop
push
aaa
icebp
in
mov
cs
cwtl
pop
in
idivb
lret
rorl
jo
aas
ss
mov
lds
xchg
sti
scas
pop
mov
lret
xchg
iret
sti
xchg
jl
dec
xchg
sub
mov
and
push
lret
push
ret
xor
sub
aas
mov
push
arpl
fistpl
push
scas
sbbb
repz
jle
movsb
jae
inc
push
pop
iret
scas
adc
pusha
sahf
xchg
push
add
je
js
and
leave
into
push
ret
and
pop
xor
fisubl
jge
pop
mov
test
push
sub
or
insb
push
clc
add
cmp
inc
add
add
cld
dec
inc
push
mov
cmp
fldcw
add
fmuls
jle
dec
xchg
pusha
jnp
sbb
popa
mov
les
es
cmp
jmp
dec
ljmp
test
ja
mov
jge
jge
movsl
out
cmpsl
sbb
inc
dec
pop
imul
sub
mov
jle
pop
aas
adc
scas
loop
movsb
cli
and
mov
movsb
js
xchg
lock
adc
daa
pop
adcb
mov
mov
mov
fildl
cmp
mul
xorb
lret
jmp
je
or
push
lcall
rclb
cmpsl
fwait
clc
dec
mov
rol
cltd
add
cmc
int3
ret
es
mov
pop
popf
xchg
arpl
push
sbb
mov
test
cmp
jbe
jae
xor
fcoml
or
jbe
or
sbb
dec
out
out
xchg
mov
movsb
test
or
push
in
jnp
push
lods
fisubrl
fs
aad
push
push
popf
lret
iret
jl
sub
in
push
loopne
dec
or
mov
jl
bound
ss
ljmp
icebp
and
cmc
lds
jle
fisttps
out
imul
js
jmp
dec
xor
add
arpl
mov
jge
out
cmp
aaa
mov
xchg
mov
fstps
push
sub
xchg
movsb
gs
stc
sbb
mov
daa
dec
je
mov
and
xchg
jb
dec
adc
fwait
pop
je
push
add
pop
mov
sbb
inc
xchg
sub
jo
clc
insb
cmc
or
push
lods
out
repnz
push
mov
ljmp
outsb
movsl
add
lea
cltd
and
daa
adc
sub
xor
dec
sbb
jbe
cmp
les
dec
jle
ret
stc
cltd
sahf
sub
loope
inc
outsb
int
xchg
xchg
sub
adc
fwait
mov
ret
rorb
xchg
and
das
inc
data16
sbb
data16
call
out
pop
pop
cld
xchg
pop
push
mov
lcall
jbe
movsl
lret
shll
in
add
mov
push
test
add
push
jp
pop
mov
dec
and
cwtl
cmp
xchg
retw
jno
cmp
or
movsl
or
sub
and
push
and
jle
push
loop
addb
add
aas
sub
inc
mov
lock
movsb
shrb
sbb
cmp
outsl
inc
cs
push
mov
enter
loope
inc
xor
pop
mov
mov
imul
jo
sbb
hlt
leave
mov
pop
movsl
add
mov
sbb
jb
idiv
bound
dec
push
xchg
adc
xchg
ss
inc
dec
or
sub
mov
inc
mov
xchg
pop
mov
imul
lods
lock
es
hlt
pop
scas
pop
repnz
fyl2x
test
sub
lods
out
dec
adc
daa
ret
jb
gs
push
sbb
mov
scas
call
rcl
adc
and
add
repz
sti
mov
pusha
mov
roll
mov
pop
mov
inc
ret
push
mov
and
jg
div
xlat
mov
cmp
mov
xlat
test
xor
inc
pop
arpl
sub
push
sbb
loope
or
adc
mov
dec
jno
aad
lret
pop
jns
popa
and
mov
jp
scas
imul
jg
or
mov
imul
sub
dec
mov
imul
push
and
test
imulb
xor
lods
lret
inc
xchg
add
cmp
or
jmp
addr16
into
push
mov
daa
mov
aaa
push
xor
xor
xchg
int3
jg
jns
mov
int
pusha
cmp
aad
pop
pushf
mov
pop
add
lret
loopne
pop
lcall
and
fidivrl
xor
fadds
dec
lcall
hlt
push
dec
ret
jge
sbb
movsl
clc
and
adc
inc
clc
fwait
daa
mov
bound
adc
lret
mov
mov
jp
push
insl
ficoml
sub
arpl
popl
jae
or
adc
fistpll
test
mov
in
fwait
xor
and
dec
mov
in
cmc
gs
jecxz
int3
xor
and
sbb
xchg
ds
add
add
inc
mov
fcompl
cwtl
cmp
lret
bound
push
dec
nop
xchg
fwait
push
xor
mov
gs
mov
add
jno
lcall
sub
iret
sar
dec
in
cli
ret
sbb
fldt
cmp
addr16
subb
xor
mov
fnsave
call
mov
jnp
or
cmpl
mov
sub
lcall
inc
stc
pop
ss
fstpl
shr
jbe
in
arpl
cmpsb
jno
movsl
dec
test
repz
test
ror
mov
pop
cmpsl
xor
daa
fnstsw
pushf
arpl
pop
fsubp
cli
mov
mov
bnd
mov
add
cld
xor
loope
pop
mov
adc
ret
xchg
mov
jecxz
adc
inc
mov
mov
enter
push
pop
and
ja
fwait
or
jo
jnp
in
pop
xlat
inc
adc
jecxz
in
mov
imul
cwtl
pop
pop
in
xchg
sub
push
mov
je
pop
or
ficomps
or
fsubrs
xchg
gs
loope,pt
push
add
fimuls
adc
sti
aad
sti
jbe
lea
in
and
repnz
rcrb
lds
sbb
pop
xchg
lds
addr16
sbb
sub
insb
xor
push
mov
mov
mov
aas
and
ja
add
movsb
add
sub
xor
aam
daa
movsb
fwait
adc
pop
sahf
and
inc
push
pop
into
xchg
test
aaa
mov
fcmove
mov
push
xor
or
push
fildll
out
loopne
sub
insl
push
enter
and
xchg
gs
gs
mov
jg
fbld
inc
cmp
mov
iret
mov
ja
daa
pop
int
in
xchg
mov
lock
add
sbb
pop
sub
mov
inc
xchg
fnstcw
or
repz
inc
stos
add
jne
cs
insl
add
ss
push
in
or
jae,pt
sbb
cmp
lret
nop
test
add
cmp
mov
pop
xor
outsl
mov
out
lcall
pop
xchg
test
inc
iret
addr16
rol
sbb
xchg
outsl
inc
mov
or
pop
iret
cli
or
sub
aad
jl
out
dec
add
inc
jg
lcall
lret
push
push
enter
loop
test
push
or
movl
xchg
jmp
daa
pushf
mulb
mov
enter
inc
inc
or
aas
mov
mov
cmpsl
sbb
xor
stos
jo
loope
subb
dec
cltd
xor
and
popf
pushf
ret
jne
stos
adc
add
pop
mov
cmp
test
sbbb
pop
mov
and
cltd
jl
rorb
mov
repnz
imul
idiv
adc
ja
loopne
mov
cmp
xchg
push
xlat
fwait
ds
or
shl
inc
cmp
add
inc
stos
mov
jae
xor
adc
in
loopne
pop
mov
push
dec
insl
push
mov
xchg
inc
addb
push
xchg
pop
inc
dec
dec
mov
cmp
xchg
push
into
lods
mov
lods
or
mov
stos
and
or
pop
push
sbb
inc
stc
enter
imul
adc
push
add
sub
sarl
in
jae
mov
jo
xlat
mov
js
popa
stc
and
mov
call
jne
repz
inc
shrl
xor
aad
dec
leave
sbb
jno
or
loop
dec
lods
outsl
icebp
adc
push
add
cmp
jns
bswap
addl
xchg
inc
mov
push
lea
cmp
outsb
push
outsb
mov
push
std
mov
lcall
lock
jge
dec
xchg
xorb
mov
shrl
pop
into
int
insl
lock
push
aaa
in
pop
daa
pop
sbb
inc
xlat
add
shlb
rolb
ret
push
loop
aaa
push
imul
aam
xchg
cmpsb
lret
insb
roll
test
inc
divb
add
lods
leave
fistpll
scas
lret
stos
arpl
jo
and
cld
popf
jo
push
test
mov
xor
mov
lods
pop
insb
push
fdivrp
xchg
lea
sbbl
aad
cmp
movsb
sub
fsubl
fldl
xchg
jne
mov
xchg
idivb
adc
in
aad
loopne
gs
mov
mov
in
fldt
add
and
mov
and
cwtl
out
cmp
cmp
test
sub
dec
inc
jl
pop
mov
clc
or
test
add
nop
stc
nop
mov
cs
ja
xor
dec
mov
mov
sahf
mov
in
ds
add
das
shll
or
push
pushf
fs
mov
dec
jl
shrb
in
gs
jle
cltd
add
mov
mov
adc
inc
mov
lret
push
in
mov
stc
in
out
shlb
stc
and
pop
sbb
push
mov
les
and
push
sub
jmp
sahf
cmc
outsl
mov
pop
or
pop
decb
xchg
popa
mov
push
or
cltd
pop
jmp
data16
test
or
push
xorl
dec
cmpsb
inc
xchg
cmc
cmpl
lahf
push
jmp
sub
mov
pop
movsl
addl
adc
jmp
and
test
xor
jb,pn
sbb
sti
stos
xorb
push
call
xlat
mov
cs
subw
jp
les
jnp
popa
sti
sbb
add
fsubrs
or
in
jg
cmp
xchg
and
jmp
out
rcrl
dec
nop
cmp
lea
popa
outsl
add
lret
jbe
mov
sub
aam
out
mov
test
push
push
stos
mov
adc
add
cmp
enter
test
lahf
or
jecxz
cmp
fistps
cmp
repnz
movsl
ror
jo
shl
jp
inc
lret
xor
js
js
not
iret
xchg
dec
bound
push
adc
movsl
xchg
ja
pop
add
lods
jl
sbb
xchg
inc
gs
xor
ja,pt
arpl
stos
jecxz
pusha
aam
popa
push
push
add
test
test
dec
xor
mov
sbb
xor
pop
cmp
mov
dec
cmp
movhps
in
pop
cmp
fwait
insl
testb
pop
mov
loopne
jmp
out
mov
or
and
test
dec
dec
push
mov
stos
mov
and
and
xlat
dec
ja
mov
lods
test
push
fs
jl
js
mov
mov
roll
sub
lret
jge
cmp
cmp
pop
pop
je
cmp
in
xor
and
xlat
mov
test
adc
cs
pop
ljmp
mov
lcall
and
xlat
xchg
adc
xchg
cmp
test
popa
jecxz
inc
add
jno
jne
jnp
enter
shll
mov
adc
add
fwait
push
enter
pop
roll
xor
loope
xchg
jno
popf
dec
stos
push
stc
jecxz
jnp
adc
outsb
xor
mov
mov
loopne
cmp
xchg
pop
mov
push
and
aad
cmp
xchg
and
mov
jp
aam
mov
ret
divb
shr
jne
fstps
stc
add
push
xlat
fistpl
movsl
push
xchg
adcb
jmp
add
fcomip
notl
dec
mov
lea
inc
scas
jnp
ret
sub
push
dec
dec
jle
push
inc
mov
pop
pop
adc
int3
sub
xor
add
enter
sti
in
fcmovbe
repz
ret
popf
jne
ficoml
add
sbb
daa
jno
lods
adc
add
mov
stos
lock
or
jne
imul
lahf
sbb
fldenv
aad
out
repz
add
lds
cmp
outsl
mov
mov
cld
sub
movsb
jmp
dec
sub
pop
cmpsl
push
test
shlb
shrd
mov
xor
and
mov
popa
pop
sahf
push
sti
cmp
mov
xchg
test
js
mov
lahf
xchg
test
or
push
xchg
jle
pop
nop
mov
and
daa
jl
cld
cmpsl
jmp
adc
das
fucompp
xor
clc
fidivrl
inc
cmp
sbb
add
mov
or
aaa
imul
cltd
fwait
jbe
add
inc
sbbb
sbb
imul
jno
dec
xchg
jno
loop
jge
mov
jecxz
jne
insb
xlat
mov
dec
fiadds
inc
jbe
cmpsb
sarb
lds
mov
inc
xlat
ja
cmp
data16
inc
pop
xchg
pop
sahf
lds
int3
mov
mov
ds
mov
xchg
bound
loop
les
ljmp
clc
xchg
adc
gs
in
jns
ficompl
inc
jae
sub
bound
stc
jmp
clc
in
push
and
and
fwait
inc
mov
xlat
push
adc
sub
cmp
pop
adc
mov
outsb
jmp
ljmp
shr
and
xchg
mov
and
orb
pop
or
dec
dec
sub
fmul
loopne
inc
xchg
lock
ljmp
addb
rcll
into
adc
mov
jno
lods
scas
fdivrs
pushf
sbb
popf
cmp
sti
or
mov
cmp
jbe
fwait
sub
pop
insb
sbb
fisttpl
inc
xchg
out
in
addr16
popa
fisttpll
outsb
mov
dec
mov
xor
daa
pop
popf
stos
jo
ss
mov
icebp
dec
and
pop
outsb
in
sbb
add
shlb
inc
xchg
cld
or
pop
stos
cmp
mov
fbstp
mov
add
lds
mov
or
jnp
jne
cmp
push
xchg
test
sti
movsb
int3
and
ljmp
jo
cmp
jne
inc
fcomps
gs
mov
stos
js
jbe
mov
push
cwtl
xor
push
fwait
cmp
lock
shrl
mov
lods
lahf
pop
xchg
dec
sub
popf
fldenv
cmc
mov
jne
sbb
nop
sbb
outsb
loop
mov
gs
cmc
mov
and
mov
add
jp
jb
outsb
into
dec
lods
and
mov
fistpll
add
push
sub
sbb
xchg
cmp
xchg
inc
xchg
bound
leave
sbb
mov
or
jmp
xlat
sbb
jg
sbb
rorb
push
es
and
mov
push
aaa
add
mov
repz
push
mov
sbb
xchg
rcll
sub
js
and
xchg
lret
ljmp
and
psubusb
jle
mov
add
div
ljmp
adc
repnz
repz
mov
stc
sbb
outsl
lcall
pop
imul
ss
dec
mov
popa
cmp
push
cmp
cld
fstps
jecxz
scas
loope
es
je
xor
das
jg
push
mov
inc
cmp
push
mov
mov
jmp
xchg
sub
adc
xchg
iret
push
es
mov
rorb
push
xor
dec
ja
cmpsl
sub
mov
loope
xchg
inc
mov
cmp
xchg
lret
pushf
sub
mov
adc
mov
mov
loop
js
fisubs
pop
imul
mov
inc
std
sbb
stos
test
mov
jmp
mov
nop
xchg
testb
test
sbb
xchg
mov
pop
lods
mov
arpl
loope
call
enter
xchg
pop
fsubrs
lret
fisubrs
xchg
pop
sub
push
pop
lret
cmpsb
dec
hlt
aad
adc
push
xchg
pop
jns
lcall
sub
sar
mov
xchg
imul
mov
jle
pop
xchg
cmpsl
fsubl
leave
push
xor
sbb
xchg
or
es
xor
and
push
adc
jb
leave
in
lea
dec
push
and
ret
push
adc
aad
and
add
add
les
sub
cmp
out
and
hlt
pusha
pop
push
iret
jge
mov
cmpsb
int3
je
xchg
movsb
es
out
imul
add
call
cmp
sub
inc
cmp
push
sbb
push
mov
push
adc
xor
mov
sbb
sahf
cmovnp
int
add
xor
sbb
cmpsb
je
ja
pop
push
sbb
xor
mov
mov
inc
mov
adc
idivl
xchg
push
xchg
fnsave
clc
sti
imul
inc
mov
stc
outsb
inc
popa
lea
cltd
nop
push
stc
adc
sub
loope,pn
test
popf
xchg
mov
in
jle
xchg
mov
sub
clc
add
pop
sbb
mov
imul
dec
jae
testb
sub
lahf
ljmp
das
or
sbbl
and
pop
hlt
es
cwtl
lcall
loop
pop
stos
std
les
pop
add
leave
out
enter
pushf
xor
inc
pusha
cmovns
pop
je
push
dec
add
push
daa
imul
pop
fcoms
orb
xorl
or
jmp
pop
xor
movl
loopne
xchg
jmp
andl
pop
icebp
fidivrl
movsb
mov
xor
sbb
fildll
lods
lcall
inc
out
xchg
stos
mov
mov
pop
outsb
mov
insb
xchg
insl
sbb
jmp
loope
and
stc
movsb
imul
sbb
adc
out
pop
xlat
scas
pop
inc
or
popf
gs
movsb
in
mov
xchg
push
mov
mov
xlat
iret
bound
lods
or
push
dec
les
or
cwtl
pop
push
sub
dec
push
xor
test
pop
out
and
lock
cmpb
arpl
xchg
aam
or
cwtl
sbb
or
fidivrs
pop
cmpsb
jle
fwait
lods
icebp
sbb
into
lahf
inc
imul
testb
fs
jns
out
inc
mov
stos
add
inc
dec
mov
xor
push
or
xchg
rcrl
loop
lds
xchg
loopne
add
fwait
mov
mov
lret
cmpsl
pop
out
test
sbb
jo
stos
add
adc
sbbl
jp
inc
sub
and
sub
ss
out
lods
xor
and
fcompl
test
js
repnz
push
iret
lock
sbb
jmp
sbb
sbb
popa
xlat
arpl
jb
stc
xor
push
adc
pop
mov
femms
mov
int3
push
adc
xchg
lahf
mov
mov
aad
repnz
jmp
out
jmp
imul
js
mov
or
cmpsb
xor
pusha
xchg
push
push
std
leave
inc
cwtl
int
inc
ret
push
insl
cmp
jge
sbb
data16
and
or
frstor
daa
js
cs
and
cmp
sahf
orl
xor
fdivrl
mov
pop
push
scas
xchg
jae
scas
andl
xchg
addr16
sub
in
scas
call
sub
lods
mov
int3
into
je
dec
dec
inc
fwait
insl
stos
and
push
push
outsl
mov
dec
mov
cmp
adc
or
push
mov
icebp
mov
aaa
test
jne
in
ja
out
ret
call
pop
mov
jl
adc
jmp
cmp
pop
xchg
js
out
lahf
out
cmp
add
mov
xchg
loope
insb
bound
and
mov
push
outsl
or
add
sub
jmp
popa
sub
cs
pop
sub
sarl
add
in
fimuls
add
sbb
stos
jmp
stos
lret
pop
mov
cltd
je
jb
pop
mov
out
orl
andb
sbb
mov
push
xchg
xchg
enter
insb
add
xlat
jge
xor
sti
push
pushf
je
out
outsl
mov
adc
inc
enter
in
dec
jp
adc
fmull
stc
xor
cmp
jmp
push
sti
rcl
inc
jae
sbb
into
int3
out
ja
sbb
mov
fistps
or
sub
mov
and
imul
ret
rcr
push
push
jnp
lds
sti
fnstsw
rorl
fcomps
arpl
mov
fnstsw
or
aam
and
xchg
subb
mov
pop
lea
jns
fs
dec
and
std
dec
lock
and
aad
mov
test
add
insb
or
jns
sbb
std
fdivs
cmpsb
dec
xchg
in
test
ds
sub
mov
imul
out
and
enter
mov
sub
push
iret
dec
cmp
pop
movsl
pushf
xorb
loopne
or
test
stos
addr16
mov
inc
pop
rorl
aad
pop
xchg
loopne
in
daa
aaa
scas
pop
shrl
adc
add
xchg
dec
cmp
fidivrs
fwait
jnp
jo
adc
push
add
mov
cwtl
sub
subl
jnp
pop
jmp
roll
out
sbb
mov
std
cmp
adc
outsb
insl
out
sub
daa
je
sti
jne
daa
mov
pusha
sti
lds
push
push
adc
add
or
xor
xchg
pop
sar
adc
xchg
cmpsb
nop
xchg
inc
test
lods
int
xor
insl
jmp
lods
fcom
cs
loopne
mov
pop
repnz
cs
scas
push
sti
sarw
loope
inc
shll
xchg
dec
jae
pushf
mov
loopne
cmp
cmc
and
in
push
push
in
das
sbb
xor
imul
xchg
push
int
ffreep
sub
enter
mov
add
out
inc
pop
xor
shlb
cmp
push
ja
mov
mov
mov
out
les
mov
add
aas
das
aaa
mov
mov
dec
lahf
rorb
outsb
scas
ljmp
mov
pop
inc
inc
mov
in
rcrl
test
adc
test
je
gs
jo
sub
iret
add
pop
lods
aas
mov
push
and
ja
ret
jb
leave
or
or
iret
fsts
ret
mov
add
mov
push
sub
jge
xchg
mov
movsl
mov
mov
lret
imul
in
cmp
cmc
or
daa
cmp
jns
imul
push
sub
pop
cli
xchg
and
add
clc
mov
inc
jp
jb
inc
fcompl
jecxz
loope
mov
div
scas
xor
iret
pop
push
cmc
data16
mov
jnp
push
and
cmc
popa
jmp
stos
bound
movl
pop
add
sub
mov
lea
adc
lret
sti
xchg
out
mov
cmp
xor
or
pop
pop
jbe
imul
jge
xor
and
xchg
pop
push
pop
xor
dec
add
cmp
cli
push
dec
push
cmpsb
add
cs
jle
scas
cs
pop
aam
push
ret
sub
subb
dec
movsl
dec
xor
lods
and
xor
or
sbb
add
pushf
insl
imul
shll
adc
shl
sbb
bound
cltd
jo
idivl
into
lds
mov
pop
inc
inc
pop
les
cld
pushf
cmp
imul
loope
cmp
rorb
ljmp
or
lret
out
and
scas
sbb
lret
sub
bound
sub
ss
mov
pushf
inc
mov
push
cmpsb
lahf
jge
sarb
adc
ljmp
jbe
icebp
imul
dec
cmp
xchg
test
xlat
xor
inc
lods
jmp
outsl
arpl
push
pop
push
data16
jmp
lea
cmpb
fisubrs
jb
fdivrl
aas
sub
jae
movsl
ja
popa
adc
and
int3
fwait
mov
ret
inc
clc
jno
pushl
sub
insl
fsub
sub
aad
push
dec
adc
jge
mov
ss
dec
fwait
pop
fistpll
pop
aaa
movsb
pop
sub
scas
mov
cmp
andb
and
sub
xchg
xchg
outsb
adc
jl
mov
xor
xlat
popl
insb
rolb
mov
lock
cmpsb
jle
add
aam
in
mov
push
xor
mov
out
outsb
adc
jecxz
xor
and
adc
dec
dec
jle
je
mov
test
sub
push
mov
in
shlb
pop
adc
mov
addr16
and
cmp
mov
pop
lret
jae
mov
dec
xorb
jl
popa
adc
insb
pushf
and
sub
out
add
mov
sub
mov
lret
mov
in
or
rclb
stos
pop
and
out
sub
push
push
jp
imul
or
push
mov
lods
or
jecxz
adc
inc
adc
push
xlat
jp
mov
fimuls
lahf
xchg
testb
xchg
fildl
scas
aam
lret
enter
inc
rorb
xchg
fwait
data16
loopne
cmpsl
jne
leave
jno
les
stos
dec
fcomps
mov
jecxz
leave
pop
adc
add
cmp
mov
adc
sub
pop
lret
add
ds
sub
mov
cld
and
add
leave
xor
push
mov
sbb
repnz
and
or
dec
leave
pusha
std
jns
insb
fstpt
sbbb
inc
and
xor
sub
push
inc
and
loopne
jecxz
out
sahf
mov
mov
sub
xchg
mov
stos
push
sbb
in
lret
test
jmp
or
or
xchg
sbb
ret
and
mov
pop
mov
mov
out
rcl
divl
scas
mov
outsl
push
jge
xor
rolb
cmp
out
mov
pusha
orb
aad
jecxz
adc
std
in
mov
push
sbb
or
push
mov
imul
test
sub
sbb
add
imul
int
add
xor
lods
ret
fiaddl
jl
mov
popa
inc
int3
das
pop
leave
fs
inc
lcall
mov
adc
xchg
andl
orl
das
pop
orb
add
ljmp
mov
lds
in
push
movsl
xchg
or
jne
outsb
lods
shll
stc
daa
mov
mov
mov
outsb
mov
popf
scas
out
jns
sub
fwait
repnz
pop
lcall
shlb
fsubrs
ret
loopne
mov
xor
xchg
lods
add
add
mov
iret
aam
iret
add
add
jae
stc
test
fldl
test
mov
xchg
cli
paddsb
sbb
mov
mov
push
lods
stos
adc
dec
push
or
movsl
and
stc
sub
mov
and
jbe
mov
std
sub
add
pop
daa
es
xor
enter
pushf
test
jbe
push
xchg
lret
sub
adc
lcall
jmp
and
jg
outsb
in
jno
add
push
xchg
dec
dec
inc
test
fstl
mov
ficompl
das
cwtl
mov
jmp
mov
xorl
lods
sarb
sbb
cwtl
enter
ret
and
idivl
scas
mov
mov
cmp
out
repnz
inc
lahf
mull
and
stos
jo
push
or
lahf
loop
sahf
scas
jno
push
or
into
lret
push
xchg
jnp
push
ds
xchg
sbb
sbb
fs
xor
enter
sahf
mov
jl
lahf
xchg
fmulp
fists
andl
mov
aaa
sbb
jns,pn
pusha
xor
repnz
jle
push
mov
push
iret
enter
scas
aaa
cli
mov
fwait
inc
adc
inc
movb
pop
lret
test
inc
daa
adc
push
fmul
nop
repz
notb
cwtl
push
sbb
push
fsubrs
call
bound
mov
mov
jg
gs
pop
fmull
mov
sbb
add
cmp
mov
inc
ret
dec
xor
leave
sub
or
ds
dec
sbb
in
xchg
sub
in
pop
lret
inc
jb
notb
mov
xchg
les
add
jg
mov
cwtl
inc
frstor
movsl
sub
sub
mov
inc
or
jnp
addr16
jns
cmp
or
inc
mov
and
inc
ja
out
dec
dec
sbb
or
mov
add
adc
in
test
call
outsl
testb
mov
sub
inc
fdivs
dec
call
test
push
mov
lret
cmp
sarb
mov
pop
aad
outsb
dec
arpl
cmpsb
loope
add
adcb
sar
pop
pushl
sbb
stc
test
cli
lea
inc
cwtl
adc
dec
mov
mov
or
push
inc
insl
push
push
cld
push
and
mov
or
loopne
movb
movsl
lods
push
jge
xchg
into
adc
in
loop
and
dec
push
std
lds
and
mov
mov
jnp
mov
fwait
cmp
and
lock
sbb
xchg
push
dec
jge
inc
dec
leave
pop
idivb
sub
pop
push
xchg
cwtl
push
xchg
mov
dec
imull
adc
jecxz
lcall
fs
mov
sbb
test
cli
mov
add
pop
dec
adc
adc
jg
call
call
mov
lret
push
in
xor
scas
xchg
mov
pop
sarb
cmc
andl
fwait
sub
mov
adc
lds
aam
imul
mov
mov
pop
jae
std
daa
popa
cmpsb
loop
cltd
sbb
js
stc
xchg
dec
ret
and
mov
jno
add
jmp
xchg
testl
aaa
inc
mov
sbb
push
mov
leave
mov
inc
pop
call
jb
loope
fimuls
in
into
mov
xchg
sub
pop
aad
mov
mov
dec
enter
lea
cmpsb
das
test
repnz
mov
lods
adc
loop
push
ja
adc
clc
sub
dec
jno
pop
inc
lock
mov
push
mov
popf
add
incb
lahf
inc
cltd
fists
jge
dec
das
lods
jb
ss
push
fs
xchg
test
push
mov
mov
add
decb
fwait
and
scas
pop
in
lahf
addr16
xchg
xchg
ss
in
ja
bound
inc
mov
pop
inc
mov
mov
xchg
rorb
pop
push
mov
inc
mov
adc
sub
sti
fildll
dec
sbbb
inc
ja
mov
inc
mov
xor
fucomip
cmp
push
stos
lret
push
into
and
out
xor
push
adc
nop
aaa
insb
stos
aas
clc
imul
nop
dec
outsb
pop
add
sub
pop
cmpl
sub
cltd
xlat
pop
std
sub
adc
or
shrl
adc
push
cmp
mov
in
sub
jno
aad
mov
sbb
xor
mov
add
push
and
or
add
imul
mov
jnp
lret
mov
iret
rcrb
xor
flds
in
jg
xor
pop
pop
outsl
sbb
adc
movsl
push
jno
ljmp
sbb
daa
lret
and
bound
and
mov
pop
bound
sti
scas
adc
or
arpl
mov
ret
rcrb
in
mov
and
push
dec
mov
aaa
jbe
adc
pop
mov
xor
test
idivb
fstl
sub
insb
cmp
adc
aas
test
loope
xchg
fildll
mov
loop
popf
testl
jo
sbb
mov
movsb
repz
mov
fsub
adc
lret
xor
sbb
pop
push
pop
jg
arpl
dec
pop
aad
lods
loopne
and
clc
xlat
mov
je
xchg
xor
cs
data16
testl
mov
inc
stc
dec
jo
sbbl
jl
xchg
dec
mov
shlb
inc
lahf
push
push
scas
push
inc
sbb
xchg
jno
inc
adc
leave
pushf
nop
sbb
xor
jno
add
daa
cli
sbb
sbb
dec
fstpl
ret
fs
pop
icebp
aad
push
mov
jnp
add
cmpsl
xor
mov
stos
popf
mov
mov
nop
fs
in
xchg
push
fs
jbe
inc
lods
stos
push
mov
mov
xchg
gs
lcall
sbb
mov
push
arpl
sbb
lcall
push
xchg
lret
rcrb
and
insb
jmp
adc
mov
push
dec
jp
cli
mov
fisubl
cmpsl
dec
in
jns
cmc
lret
lds
js
rcll
pop
xor
push
and
pop
cmp
ja
lds
out
imul
xorps
jne
cmc
repz
repnz
pop
mov
xchg
test
shll
jno
jmp
lods
xor
dec
orps
pop
repz
pop
mov
repz
sub
pushf
jo
sbb
xor
adc
enter
sahf
cmpl
enter
pop
jg
mov
adcl
mov
xchg
mov
int3
mov
mov
pop
cli
sbb
mov
add
adc
je
movsl
sub
scas
xchg
dec
icebp
mov
push
cmp
dec
xor
mov
pop
mov
lock
aaa
call
sub
push
movsl
pop
add
stos
xor
mov
push
test
out
sti
inc
dec
sub
sbb
adc
fwait
rcrl
les
mov
popa
adc
dec
push
daa
inc
jge,pt
int3
xchg
sbb
inc
sub
dec
mov
dec
out
xor
add
stc
push
insl
popa
add
lahf
jp
add
and
or
mov
xor
xchg
mov
gs
sub
inc
add
sub
pop
movsl
mov
mov
paddd
js
jp
dec
cmp
add
sbb
xchg
fdivs
jo
cmp
out
adc
mov
outsb
fimuls
cmp
cmpsl
jb
cli
add
jge
pop
bound
sbb
mov
loopne
cmp
clc
pop
adc
sub
ja
pop
pushf
ss
mov
loop
stos
scas
std
pop
jbe
scas
inc
mov
push
shrl
cmp
inc
popf
sub
xor
xor
push
mov
push
jb
mov
xchg
and
dec
xor
loopne
ja
lods
xorb
or
cld
shlb
jb
int
ficoms
fcmovnbe
aas
sbb
pusha
in
and
jb
test
inc
imul
test
mov
loope
mov
mov
test
mov
fisubs
xor
sbb
mov
sub
frstor
or
loop
cmp
rcll
cltd
bound
mov
fs
out
test
and
andb
gs
cmpsb
dec
inc
ret
mov
fcmovnb
xor
bound
jecxz
sahf
add
pop
lods
ret
movsb
inc
cltd
dec
cmc
stc
sbb
les
js
pop
adc
in
xchg
push
push
ja
addl
ret
add
and
mov
cmp
add
push
jbe
enter
loope
inc
sbb
cs
loopne
cwtl
add
ret
rcr
fdivrs
gs
mov
dec
cmp
inc
sbbl
push
xchg
cld
idivl
bound
xor
mov
ja
call
stos
imul
dec
addl
inc
mov
int
cmp
mull
xchg
mov
iret
and
andl
mov
pop
sbb
sbb
mov
jne
popl
mov
pop
mov
bound
aas
sar
adc
lcall
inc
roll
bswap
and
and
cs
jbe
lcall
scas
mov
jno
leave
push
mov
add
shrb
lods
cmpsb
push
outsb
dec
jb
push
outsb
loope
jne
adc
inc
es
xor
fcoml
xchg
push
into
xor
lds
mov
add
mov
lds
popa
in
xor
add
add
add
movsl
push
call
std
js
push
xchg
push
hlt
dec
popa
and
or
jge
js
loop
xchg
jo
ss
inc
sarb
adc
sub
mov
lock
push
aas
dec
jo
lret
outsl
add
pop
jmp
jmp
push
shlb
pop
cltd
into
mov
jae
in
in
fsubs
lds
jbe
add
cmc
dec
adc
add
add
jno
mov
jb
dec
mov
aam
fwait
lcall
adcb
daa
int
test
mov
int
push
cmp
mov
int3
call
loopne,pt
pop
scas
add
out
sbb
rorl
idivb
jae
popa
stc
popf
aam
out
sahf
aad
rcll
ss
push
neg
hlt
scas
mov
pop
mov
inc
xchg
add
daa
add
test
shlb
pop
adc
jmp
in
mov
dec
subl
aam
mov
jle
daa
xchg
pop
rsm
movsb
xor
lret
fistl
inc
dec
fwait
mov
into
mov
cmpsb
jno
insl
adc
hlt
lcall
imul
jp
jno
dec
push
in
leave
xchg
mov
jb
pop
je
push
fimull
stos
ljmp
jle
xlat
pusha
ds
inc
das
xchg
jg
pop
and
idiv
add
mov
push
clc
mov
sbb
jns
mov
imul
sub
push
adc
jp,pt
jecxz
outsb
loopne
repz
inc
or
mov
incl
call
leave
pop
lcall
xor
in
push
jae
push
push
in
in
push
out
in
out
movsl
ret
das
test
stc
shl
je
push
repz
std
dec
add
inc
loop
jmp
push
jp
jle
ss
mov
adc
ret
mov
xchg
mov
jno
fldcw
xchg
lret
push
pop
in
dec
push
xchg
inc
sbb
xchg
test
cmp
mov
inc
lods
push
push
in
push
popf
fcmovbe
dec
jl
adc
sub
push
stc
mov
scas
inc
mov
mov
scas
scas
mov
jle
fdivrp
pop
jecxz
mov
mov
js
push
sbb
arpl
stc
push
std
stc
cwtl
rclb
adc
xchg
imul
in
inc
cmp
and
cmp
or
insb
push
xor
sub
aas
or
sbb
or
mov
aad
cld
push
lret
ret
xor
scas
jecxz
jg
shrb
cmp
adc
fstpl
lcall
jb
pusha
iret
xchg
add
data16
and
test
fucom
dec
mov
or
xor
push
clc
inc
ret
aas
inc
and
aas
mov
cmc
insb
bnd
pop
push
lods
xchg
repnz
fsubrs
pop
dec
jmp
lods
fnstcw
mov
sub
imul
xchg
in
scas
int3
lahf
insl
aad
mov
cmp
push
pop
xlat
jb
pop
loopne
fisubs
mov
mov
push
ss
sbb
jo
sbb
jns
scas
jne
add
pop
and
jge
negb
std
sar
fcoml
pop
push
dec
out
pop
jnp
inc
je
loopne
jno
into
inc
push
ret
xchg
inc
in
jns
ljmp
cmovp
lret
jo
out
dec
das
ljmp
mov
push
mov
sub
arpl
cmp
mov
les
lods
out
sub
scas
lret
adc
dec
repnz
lea
outsl
xor
xchg
aaa
daa
ret
add
push
cli
addr16
insl
fsubrl
push
or
sub
dec
cmp
dec
out
jne
bound
jp
cmp
add
sti
int3
pop
inc
fdivp
dec
aas
rcll
inc
add
mov
scas
daa
mov
cmp
fimull
mov
mov
mov
dec
stos
adc
outsb
ret
cmp
mul
lret
add
jae
lods
mov
xchg
lock
ss
call
cmpsl
iret
aaa
mov
mov
push
test
jo
pop
cld
add
dec
fnstenv
add
imul
push
repz
scas
into
dec
scas
inc
pushf
mov
sbb
push
mov
test
add
insl
shll
jmp
mov
fs
add
mov
pop
jg
ss
and
mov
sub
or
fists
test
sbb
jno
rcl
ja
jb
xchg
cmpsl
popf
mov
xchg
sub
call
repz
inc
nop
aad
pop
ss
lcall
push
aam
add
cmp
ret
mov
popf
lods
or
shll
sbb
mov
loopne
loope
jge
inc
sub
dec
dec
les
insb
pop
dec
xchg
pushf
lret
mov
pushf
test
icebp
adc
add
sbb
jae
stos
scas
fbld
cmp
iret
clc
sub
imul
mov
inc
cmpsb
mov
mov
sbbb
nop
add
sub
mov
and
in
push
enter
int
inc
pop
or
addr16
and
jle
lahf
sbb
sub
adc
lods
sub
mov
cmp
jle
jbe
filds
jp
out
adc
xor
sahf
sub
cld
inc
movsb
scas
rcll
mov
add
ds
or
push
cmpsb
push
xchg
das
jo
scas
jo
pop
bnd
xchg
mov
xor
mov
push
into
xor
mov
jnp
in
xor
adc
fwait
enter
sbbl
stos
mov
jle
fwait
rcrb
dec
push
stos
mov
stos
xchg
cli
in
cmp
test
adcb
sub
ret
pop
fbld
aad
repz
ret
imulw
arpl
es
clc
push
pop
rolb
push
xchg
imul
add
enter
mov
push
outsb
dec
push
inc
sub
pusha
int3
cmpsl
push
push
mov
or
jb
nop
add
call
push
cld
add
and
ja
addr16
mov
cmp
mov
fldt
ficomps
in
rolb
jnp
jno
les
pushf
fdivs
dec
xchg
jno
test
jnp
xchg
push
repnz
scas
jns
adc
xor
aad
add
mov
adc
pop
mov
xorb
decb
push
push
dec
push
inc
popf
mov
scas
inc
nop
add
jg
addb
aad
movsl
xorb
mov
movsb
pop
outsb
sbb
add
repnz
xchg
mov
mov
cmp
or
cmp
sbb
sub
nop
pop
out
lcall
mov
and
xchg
xchg
xchg
dec
scas
and
xchg
rep
xchg
xchg
jae
call
arpl
es
mov
popa
jle
aas
mov
ss
sub
cwtl
mov
outsb
loopne
xchg
inc
rorl
into
pushf
add
pop
fadds
shl
dec
mov
das
jp
jmp
daa
mov
mov
fisttps
repz
xor
loopne
outsl
pop
or
pop
outsl
inc
sbb
or
out
cmp
aas
or
test
gs
shrb
mov
lcall
xor
cwtl
inc
push
adc
icebp
xor
mov
dec
mov
xchg
sub
pop
sbb
fcoms
jecxz
lods
into
rcll
lret
and
mov
hlt
pop
push
and
mov
lcall
and
lods
sbb
enter
mov
xlat
pop
aad
pop
fs
inc
test
or
and
sahf
and
xor
and
das
xor
sbb
pushf
xor
jae
mov
mov
mov
or
cltd
sbb
es
add
mov
mov
das
in
pop
ljmp
gs
adc
mov
pusha
ja
add
test
lret
mov
push
mov
cli
cmp
test
sbb
mul
or
ja
cs
mov
inc
out
insl
outsb
push
adc
into
fbld
dec
insb
sub
mov
dec
add
xchg
pusha
es
mov
jb
leave
jl
sbb
jp
or
mov
fistps
and
sbb
mov
push
pop
enter
mov
fistpl
out
cmp
jb
cmp
jnp
imul
xabort
dec
push
and
pop
lods
mov
dec
nop
lret
lea
mov
pushf
push
rclb
les
rcr
test
std
sbb
das
jmp
inc
mov
jo
adc
rcr
push
sbb
aaa
mov
xchg
pop
and
dec
inc
cmpl
mov
ljmp
xchg
mov
push
aas
clc
add
sub
out
outsl
popfw
repnz
dec
and
and
jnp
xchg
test
jmp
data16
xchg
dec
pop
jp
sarb
adc
mov
and
insl
add
mov
mulb
test
dec
cs
sbbl
push
aad
jecxz
jb
dec
mov
xor
adc
popa
dec
ret
push
addr16
cmpsb
push
std
push
xchg
clc
arpl
rcrl
sub
mov
adc
shrb
outsb
mov
xchg
arpl
repnz
sub
jae
xchg
jns
inc
and
leave
and
fidivrl
divl
outsl
sbb
sub
or
incl
push
push
cs
adc
and
jno
xchg
leave
pop
cwtl
cmp
incb
fs
dec
xor
clc
ret
adc
xlat
mov
insl
or
add
dec
ret
and
aad
push
adc
ret
sarb
xchg
cmp
loop
inc
cld
cltd
cwtl
les
shll
aaa
push
arpl
dec
mov
mov
rorl
inc
dec
leave
ss
lods
stos
das
ret
aas
sbb
or
mov
in
repz
adc
sub
filds
pop
mov
inc
sbb
dec
lret
push
sub
ret
pop
fwait
push
aas
add
jg
fmull
pop
xchg
add
push
mov
cmp
pop
and
movsl
xchg
movsb
pop
cltd
sbb
pop
push
xor
ljmp
sbb
inc
outsb
ror
in
lahf
cmc
xor
nop
mov
jns
je
int3
jp
xchg
cmpsl
int
mov
pop
imul
push
jle
iret
pusha
lods
inc
data16
push
xor
add
dec
mov
push
lods
pop
fildll
mov
into
and
aam
out
jge
xor
stos
jbe
xchg
xchg
push
mov
mov
stos
dec
lock
fsub
mov
xor
push
out
cli
cmpsl
push
mov
xor
inc
jmp
scas
jno
push
mov
cltd
in
jo
cmp
cmp
xchg
imul
decl
ret
or
sbb
and
push
pop
js
sbb
bound
adc
imul
xchg
xchg
sahf
xchg
shrb
aam
call
enter
fwait
mov
sbb
push
fmuls
pop
scas
pop
cmp
adc
mov
xchg
stc
inc
inc
push
push
outsb
adc
or
in
sub
dec
into
lret
in
mov
in
and
pop
addl
jno
dec
jnp
sub
mov
sub
cmp
push
mov
test
push
outsl
xchg
sub
pushf
lea
sbb
sbb
add
sub
imul
loop
inc
inc
rorl
dec
jmp
inc
lret
enter
mov
cmp
inc
or
ss
sub
movb
aad
mov
shlb
xor
mov
mov
sub
repnz
imul
mov
jg
in
jg
bnd
inc
jbe
adc
mov
mov
ljmp
addr16
dec
icebp
push
adc
xchg
mov
loop
loopne
xchg
mov
arpl
jecxz
in
imul
stos
popa
ds
sub
loop
out
inc
roll
lcall
adc
pushf
ds
pop
or
add
adc
and
xor
fsts
mov
xchg
cmpl
mov
ficoms
xlat
mov
dec
fistps
jno
adc
inc
repnz
jmp
lret
dec
cmp
dec
cld
dec
int
mov
mov
je
outsb
push
imul
int3
xchg
test
jnp
mov
sar
lcall
mov
daa
mov
mov
jo
fimull
push
psubb
sub
jo
int3
inc
mov
lret
scas
lods
mov
dec
xchg
addl
and
mov
pop
es
push
dec
and
mov
push
push
push
mov
mov
cmp
dec
in
jb
sbb
sub
aam
cwtl
mov
pop
popa
invlpg
mov
js
ja
out
mov
gs
mulb
out
fldcw
fwait
push
mov
out
jge
outsb
inc
out
adc
dec
imul
nop
scas
in
out
cmp
and
pushf
lret
sub
or
lock
push
cli
rorl
mov
cmc
scas
jnp
in
jecxz
in
out
sub
pop
add
aam
mov
mov
repz
test
outsl
push
mov
and
sbb
jp
mov
lcall
jb
pop
pop
roll
pop
imul
ja
push
dec
inc
test
fwait
mov
decl
sbb
stc
jle
test
outsl
ja
loopne
rcr
xlat
jl
fdivs
leave
ret
loop
lea
xor
mov
sbb
cmp
jp
and
push
in
data16
adc
adc
or
push
les
push
jle
sub
mov
hlt
mov
imul
push
aaa
mov
loope
mov
cmc
inc
dec
test
jb
fmuls
and
xor
outsl
and
test
mov
pop
mov
lock
fwait
icebp
cmpsb
add
outsl
aam
cmp
stc
dec
xor
test
out
mov
ucomiss
mov
rcl
stos
xchg
lods
pop
call
mov
popf
or
pop
xchg
push
inc
mov
dec
dec
scas
addr16
lcall
inc
mov
roll
mov
push
mov
rorb
repz
inc
sbb
in
push
lcall
cmpsb
and
inc
mov
sub
push
xchg
mov
mov
mov
mov
jo
lret
mov
sbb
and
int
jb
mov
jb
scas
add
rorb
popa
aas
loopne
aas
ljmp
leave
je
jb
das
mov
stc
sbb
mov
mov
xchg
cmc
aaa
mov
addl
repz
cmp
xor
jp
xchg
rep
inc
cmp
nop
push
mov
leave
adc
int3
dec
push
int3
dec
insb
enter
das
mov
call
in
cmp
lods
popa
mov
inc
pusha
push
sahf
mul
mov
add
das
cmc
fisttps
out
mov
fildll
sbb
push
in
pop
sarl
addr16
and
add
push
sbb
pop
movsb
scas
inc
xchg
push
xchg
movl
add
cld
leave
popf
mull
lahf
jbe
lods
cmp
mov
test
jmp
push
mov
movsb
dec
dec
xchg
and
das
mul
test
xchg
inc
pop
jae
clc
lahf
xor
cmc
adc
call
mov
ljmp
xchg
adc
or
cmp
xchg
push
dec
ds
notl
in
sbb
fsubs
nop
sbb
mov
mov
fyl2x
js
jae
out
dec
or
jbe
cmp
int3
filds
push
inc
jo,pn
int
mov
cwtl
outsb
inc
pop
add
cli
fldt
insl
popf
pop
push
lea
pop
neg
push
icebp
cld
or
lods
popa
inc
push
xchg
mov
adc
push
aam
lock
push
mov
loopne
es
sahf
mov
mov
sbb
mov
sub
inc
inc
add
loop
or
mov
add
leave
xchg
sahf
mov
mov
dec
mov
loope
pop
shld
push
jns
pushf
jg
icebp
dec
jno
pop
and
jns
and
enter
cwtl
add
out
sarl
aam
xchg
mov
rcrl
push
ds
add
push
andb
insb
loopne
add
loope,pn
sarb
stos
mov
out
jmp
xor
in
das
lret
push
push
int
mov
push
jno
lcall
stos
mov
pop
neg
mov
pop
push
cmp
add
push
lcall
and
cmp
lea
xor
mov
daa
pop
jne
mov
fs
sahf
mov
push
sbb
lahf
add
stos
in
imul
mov
mov
ss
mov
rcrl
es
cwtl
mov
pop
push
and
push
out
lods
out
xor
rcrl
xchg
stc
fs
repnz
mov
adc
cmp
in
lcall
out
mov
mov
enter
stos
jns
ljmp
fwait
hlt
repz
pop
jecxz
xchg
test
jne
xchg
test
sti
mov
xchg
pushl
xor
hlt
mov
mov
mov
jl
xchg
inc
xchg
mov
arpl
mov
std
std
stos
and
lods
iret
fimull
pop
popa
sub
inc
sub
pop
xchg
or
pop
hlt
shll
add
and
sub
mov
outsb
ret
dec
xchg
insl
mov
mov
ds
test
clc
jo
or
fcomp
mov
sahf
pop
fs
cmp
ficoml
or
cmp
pop
subb
xor
clc
lahf
cltd
adcb
fdivs
cltd
rcrb
adc
je
xchg
iret
add
jg
dec
xor
xor
sub
test
push
icebp
pop
and
push
sti
pop
mov
mov
fs
adc
in
jns
sarb
push
push
out
scas
mov
xchg
pop
cli
add
inc
adc
aaa
inc
sbb
cmp
lret
fldl
mov
out
add
in
and
repz
pop
mov
sub
scas
loop
fincstp
shl
stc
ret
mov
mov
outsb
add
sbb
jle
sbb
mov
stos
add
outsl
pop
xchg
maskmovq
mull
xchg
test
push
jns
loopne
fsubrp
jmp
ljmp
aad
mov
dec
mov
inc
jecxz
cmp
push
jmp
pusha
icebp
lcall
xchg
add
sub
fwait
and
addr16
xor
mov
mov
pop
dec
subl
sub
addr16
xchg
imul
repz
movl
in
les
fs
mull
movsl
outsb
iret
outsb
sub
inc
or
jg
xor
mov
or
add
ljmp
cmp
add
sbb
xchg
jns
xor
lods
push
out
ss
aad
xor
pusha
shlb
ljmp
fdivrs
lods
loope
mov
mov
loop
mov
and
repz
cmp
movsl
mov
jge
shll
lods
in
adc
cltd
rorb
clc
sub
mov
inc
push
pop
popf
xor
loope
sbb
and
fdivs
insb
fidivrs
es
push
loope
ds
sub
loop
sti
loopne
pop
stos
dec
test
xchg
lea
pop
add
add
push
inc
cmp
dec
pop
pop
call
roll
fiadds
add
shl
sahf
mov
test
sbb
jne
roll
lea
xor
jmp
in
inc
loopne
dec
jecxz
mov
shl
inc
fsubrp
loope
xchg
push
dec
pop
in
lods
rol
xor
fisubrs
mov
jo
and
sbb
push
cwtl
lods
imul
popf
cmp
pop
mov
mov
xchg
xlat
xor
xchg
mov
xor
stc
fsubrl
aas
popa
call
testl
sbb
outsl
sbb
xchg
test
xor
dec
fs
xor
lret
lret
aam
scas
mov
pop
gs
adc
xor
out
add
fcomps
stos
pusha
std
gs
mov
fsubl
inc
push
cs
mov
dec
push
fimuls
mov
dec
inc
std
cmp
xchg
mov
pushf
adcl
dec
sub
add
dec
sti
push
movsl
into
mov
cltd
rcr
xchg
outsb
aam
clc
add
adc
dec
imul
cs
or
dec
mov
pop
mov
or
mov
cld
lods
cmp
pusha
jl
sbb
je
stos
scas
push
add
adc
cltd
jl
sbb
jl
adc
jp
and
scas
cmp
jl
push
xchg
pop
cs
aad
xlat
push
gs
or
or
loopne
mov
dec
dec
push
fistl
cltd
add
jno
push
ficoml
adc
or
lds
mov
sub
repz
mov
xchg
mov
or
sub
sahf
dec
pop
and
push
lret
xor
pop
fwait
push
or
mov
mov
xchg
lods
shlb
ja
pop
insl
int
mov
shll
icebp
inc
mov
rorb
call
and
sub
fwait
gs
aam
lret
jb
hlt
es
xor
mov
cmp
aas
orb
jb
sub
or
pop
hlt
ret
nop
sbb
lret
or
lock
imul
js
xchg
sarb
int3
or
iret
xchg
fadds
aam
add
push
mov
les
sub
or
mov
imul
shlb
mov
dec
cwtl
xchg
sti
rorl
js
jecxz
xlat
imul
jne
xor
loope
mov
sarl
sub
jp
scas
or
mov
in
insb
popf
je
or
ficomps
mov
and
push
cltd
cmp
mov
incl
shlb
jb
ret
add
pusha
push
push
lods
adc
mov
xchg
iret
sbb
dec
mov
or
iret
aas
cmp
push
inc
cmp
pop
lock
das
push
in
dec
inc
push
clc
sbb
xchg
mov
adc
jns
xor
xchg
push
repnz
xchg
mov
filds
dec
outsl
push
adc
and
or
xchg
sub
push
add
or
push
scas
push
add
insb
add
loop
or
or
mov
or
orl
push
mov
out
xchg
stos
and
push
lahf
pop
lock
pop
xchg
mov
push
jl
push
inc
pop
loop
fsubl
push
scas
jae
ja
aas
mov
mov
and
and
cltd
insb
pop
dec
jmp
aaa
adc
jae
xorb
rcr
xchg
push
lds
into
cld
push
xchg
test
xchg
dec
loopne
adc
add
lods
or
xor
js
pop
xor
cmp
cmpsb
or
mov
lcall
test
mov
pop
out
xor
jle
and
dec
lods
dec
jae
fbstp
jbe
xchg
lahf
cltd
add
pop
cld
xchg
cmp
adc
inc
ss
out
mov
add
int
cmc
add
mov
dec
mov
or
daa
jge
iret
andb
lcall
lcall
popf
sbb
adc
aad
addr16
ss
insl
enter
test
and
mov
leave
lock
repz
and
jb
dec
push
je
sub
nop
add
or
jle
sti
mov
iret
pop
daa
jno
cmp
sbb
or
push
xlat
pusha
adc
and
mov
aam
mov
pop
je
mov
dec
insl
inc
push
insl
hlt
loope
mov
pop
adc
test
das
cs
enter
aam
addb
xchg
jl
and
dec
jl
xchg
cld
or
push
cmp
out
cwtl
push
mov
push
or
and
jne
filds
xchg
lahf
cmp
jmp
sub
outsb
shll
imul
cltd
scas
jb
add
leave
sub
add
in
push
jp
scas
fnsave
and
sub
repz
xchg
mov
mov
out
push
mov
lret
out
add
push
push
in
mov
popf
cmc
test
inc
in
cltd
xchg
sahf
xor
lock
sbb
mov
cmp
cs
dec
lods
jb
cmc
inc
cltd
inc
and
jge
fwait
pop
cmpsl
aas
mov
js
gs
je
xorl
dec
xor
push
fs
jmp
mov
sbb
xor
inc
fcmovb
push
idivl
or
cmp
pop
jg
mov
sub
and
or
test
jns
sti
stc
inc
das
stos
push
shr
inc
adc
inc
movsb
int3
mov
fbld
jg
clc
je
clc
mov
and
jp
jb
arpl
lea
pusha
fiaddl
or
fidivl
aas
test
fcomps
out
dec
jo
push
mov
cmc
call
mov
push
jmp
add
push
addl
mov
iret
push
jmp
xchg
addl
in
out
inc
xor
test
repz
fists
jmp
add
xor
cli
movsb
push
dec
repz
push
push
stc
popf
mov
nop
sub
inc
jg
repz
rorl
add
xchg
jb
insb
push
fwait
popf
cmp
jle
pop
and
push
cltd
xchg
push
fcoms
addb
ja
pop
inc
xchg
lods
sub
adc
sub
mov
mov
fsubrs
and
push
push
xlat
inc
jg
in
stc
add
testb
push
sahf
stc
xchg
mov
ljmp
notb
in
into
lahf
cmp
out
test
lea
pop
adc
ss
cmpsb
shlb
jle
and
stos
imul
lcall
and
out
jb
or
rcrl
les
fsubs
ret
cltd
in
mov
mov
insb
xchg
int
jmp
adc
sbb
js
sbb
insl
ret
dec
xchg
pop
fdivs
jbe
js
push
cmpsl
mov
sbb
or
mov
mov
jle
jle
xor
inc
jb
ja
lea
and
dec
cmp
mov
push
lods
daa
sbb
out
xchg
push
fsubp
add
push
in
xor
push
incl
and
sub
pop
loope
ja
sahf
movsb
add
xor
mov
out
ret
aad
fisttps
mov
add
xchg
xchg
adc
repz
rcll
pop
jne
adc
or
inc
mov
push
les
scas
and
mov
lea
sub
test
ret
insb
dec
jns
std
sahf
aad
fisttpl
xchg
xor
add
es
stos
mov
push
in
or
adc
call
mov
and
mov
cmp
adc
icebp
sub
cmpsb
jg
aaa
pop
xor
or
push
lock
jmp
fnstenv
sbb
xchg
fildll
mov
jo
icebp
icebp
lods
pusha
outsl
and
cli
gs
fsts
addr16
pop
pop
test
cmp
sub
out
stos
mov
xchg
shl
mov
cmp
arpl
data16
not
xlat
push
popa
stos
inc
repz
mov
dec
push
add
clc
mov
lea
arpl
mov
lods
daa
jmp
pop
dec
fsts
jl
or
mov
pop
in
clc
push
ret
xchg
jnp
lret
das
into
mov
jmp
sub
stos
adc
outsl
fldenv
pop
push
xor
pop
sti
inc
aad
mov
mov
or
enter
mov
jmp
mov
stos
aaa
scas
cli
shll
jae
pop
xchg
fwait
in
xchg
cld
sub
imul
movsl
push
xor
aad
push
pushf
std
dec
adc
add
in
out
in
loop
and
std
sub
aam
mov
push
mov
sbb
xor
adc
or
xchg
enter
mov
lods
aas
outsb
cmp
int3
filds
hlt
add
mov
jb
ss
out
incl
sti
inc
mov
add
add
mov
dec
outsl
les
mov
or
mov
sbbl
aam
sbb
pop
push
movsb
adc
sbb
sbb
xchg
pop
sub
scas
das
and
add
xchg
inc
adc
pop
movsl
xchg
nop
jb
mov
pop
sbb
out
mov
inc
in
add
mov
flds
js
xor
mov
shll
jmp
sub
dec
cmp
imul
jmp
into
jle,pt
enter
lret
add
jp
adc
push
test
sub
or
xchg
aas
xor
cmp
add
xchg
lret
push
ja
mulb
rorl
and
out
mov
inc
es
mov
pop
fs
ds
xor
cli
mov
sbb
xchg
out
test
leave
mov
and
flds
pop
int
imul
jp
mov
jns
inc
lcall
ret
push
sti
mov
jge
movsl
pusha
movsb
sub
mov
in
adc
test
lret
mov
pop
mov
cmpsl
pop
mov
mov
int
imul
loop
cmp
mov
xor
and
xor
or
test
dec
inc
or
and
sbb
sub
mov
pop
push
lret
stc
push
cld
mov
jno
fcmovbe
jae
add
data16
gs
in
test
mov
sub
adc
fstl
inc
push
call
test
cmp
xlat
pop
fdivp
sub
xchg
cmp
jl
mov
inc
pop
std
pop
mov
xchg
dec
dec
ja
sarb
lret
jmp
mov
in
cwtl
popa
call
add
sti
fsubp
in
pop
pushf
aaa
cmp
mov
ficomps
movsb
cmpsl
call
cli
icebp
xor
clc
sub
cmp
jecxz
xchg
cmp
add
in
adc
fldt
push
icebp
enter
mov
add
xchg
pop
ljmp
iret
pop
loope
loope
sub
or
xchg
flds
shl
jg
xor
cs
ds
cmpsb
push
daa
xchg
loope
push
shl
incl
sub
add
arpl
and
xchg
ret
jg
jae
popa
inc
xchg
push
std
sbb
imul
push
pop
fisttpll
inc
xor
cmp
mov
test
dec
mov
int
mov
fisttpl
push
xadd
rcrl
sub
mov
cmp
cwtl
movsl
mov
cmc
xchg
fimuls
mov
jge
pop
addl
insl
lds
and
mov
repnz
mov
xchg
loopne
fldln2
popa
xor
cmp
pushf
insl
leave
iret
lds
cmpsl
pop
or
gs
scas
cmpsb
cmp
mov
sbb
imul
scas
lea
rolb
repz
dec
stos
in
mov
shll
inc
xchg
sbb
xchg
popf
jl
mov
mov
test
repz
lahf
xchg
cltd
mov
mov
pushf
imulb
cmp
push
vpaddd
les
stos
pop
xchg
ds
fwait
repz
insb
mov
addl
popf
cmpsb
add
push
cmp
pop
mov
jle
mov
aaa
mov
jbe
push
jmp
mov
in
cmp
and
and
nop
sub
xor
cli
in
outsl
gs
mov
pushf
pusha
ss
dec
or
sbb
scas
pusha
and
add
lods
mov
into
adc
lds
and
cld
push
lahf
mov
xor
xor
mov
repnz
ja
dec
push
sub
test
push
adc
pop
jae
sub
roll
add
insb
mov
mov
xor
adcb
jb
js
sti
inc
insb
xor
lea
cmp
jb
push
enter
les
sarb
lock
shll
das
cmpsl
xchg
inc
loope,pt
cld
mov
mov
pusha
push
cltd
aam
stc
lods
std
scas
xchg
aad
shl
test
call
push
sbb
clc
lcall
aad
jno
mov
gs
rolb
out
cmp
adc
sbb
fldt
xor
and
sbb
ficompl
lock
xor
fsubl
lahf
jns
inc
das
inc
mov
lret
and
pop
sub
pop
mov
popa
mov
jmp
xchg
fisttps
pop
es
mov
lea
rol
or
in
pop
cmp
xor
jl
xor
jne
pusha
push
cmp
mov
mov
cmp
dec
sub
repnz
sbb
push
mov
or
jg
mov
pop
jnp
pushf
lret
js
add
push
xor
lock
movsb
cmp
sub
loop
int
sbb
mov
aas
test
dec
or
push
jecxz
dec
sub
sbb
dec
hlt
mov
fstpl
or
jbe
lret
je
outsl
jmp
adc
je
push
test
data16
mov
aam
cmp
test
jne
pop
loope
scas
xor
stos
mov
sub
cmp
mov
dec
fs
cmp
scas
adc
mov
mov
inc
push
xchg
lods
mov
scas
sbb
mov
push
xor
push
jbe
pushf
insl
jl
clc
cmpsl
jo
inc
in
push
dec
hlt
mov
std
mov
notl
jg
cmp
lods
mov
inc
shl
cmc
ja
lret
jg
mov
add
mov
jle
loopne
jle
sbb
mov
jae
push
mov
mov
nop
or
pop
repnz
lock
shll
arpl
fisubl
repz
cmp
divb
sbb
stos
mov
out
jp
and
int
and
into
and
subb
push
xchg
xor
dec
nop
mov
xor
inc
inc
xor
jle
adc
inc
je
sub
jnp
cltd
sti
xor
sahf
sub
ficoml
jmp
icebp
and
gs
push
mov
aad
push
in
shll
sub
jae
add
iret
outsb
xor
popf
ja
or
push
inc
jo
pop
ss
mov
mov
repnz
push
insb
cmp
dec
nop
cmp
fs
fisttpl
and
mov
outsl
sbb
dec
cmp
xchg
push
ss
push
or
jns
lods
adc
adc
testl
add
add
pop
fldt
sub
jle
in
jl
push
dec
hlt
push
xchg
mov
movsl
xor
rcl
nop
inc
push
xor
cltd
pop
push
xor
test
test
inc
mov
inc
lea
push
mov
sbb
pop
gs
cltd
gs
pop
pop
sub
mov
jg
shrb
xor
and
shll
loope
cmpsb
and
mov
ret
jmp
or
pop
sbb
scas
jnp
scas
and
fwait
sbb
in
iret
jp
push
cmpsb
incb
repz
lret
ret
jmp
insl
in
cmc
sub
fcoml
or
add
in
cltd
lea
push
pop
jne
les
ds
push
mov
mov
jb
je
mov
pop
fimull
lock
mov
out
mov
test
xchg
sbb
jno
arpl
pop
inc
jg
js
lods
pop
pop
push
jnp
movsl
je
out
pop
add
jnp
jne
add
out
adc
dec
add
lcall
mov
mov
int3
sahf
mov
cwtl
dec
pop
mov
jmp
xchg
adc
lret
xor
lret
cwtl
clc
or
dec
jb
xor
adc
fcomp
je
dec
popf
sbb
jl
fs
xlat
stc
stos
in
mov
jbe
fcoml
and
sbb
mov
hlt
xchg
or
push
dec
mov
sub
rclb
jmp
std
mov
clc
je
movsl
pop
data16
out
ss
push
aad
xchg
aam
xchg
cmpb
data16
push
lock
push
inc
and
roll
jae
fisubrs
adc
push
dec
jns
mov
pop
jle
pushf
mov
push
movsb
add
fcom
jl
jns
subl
xchg
loopne
into
jecxz
mov
ud0
mov
in
jg
and
addr16
adc
inc
pop
inc
add
or
ds
int
ja
es
add
lock
cmpsb
mov
fstpt
xor
lock
add
mov
cmpb
dec
sbb
ljmp
loop
xor
add
add
push
testb
or
push
sub
fdivl
inc
in
jno
shll
xor
or
imul
mov
jmp
mov
and
test
sbb
decb
enter
fs
sbb
loope
orl
cmpsl
and
lret
or
adc
pop
sbbb
ret
jns
andb
es
lods
cmc
xchg
mov
mov
in
pop
and
push
dec
add
int3
or
xchg
data16
mov
je
clc
sub
in
ja
popa
cli
popa
sub
inc
jns
loope
lea
mov
push
and
jl
adc
repz
and
cli
inc
mov
std
xlat
aam
or
fisubrs
pop
stos
push
cs
cmpsl
addr16
out
rorb
pop
stos
dec
mov
sahf
pop
rcll
ss
out
sbb
sbb
mov
xchg
mov
pop
fstpl
xor
fmul
mov
pop
cmp
xchg
lret
in
mov
sub
inc
cmp
xchg
adc
adc
arpl
ds
movsl
jnp
adc
mov
call
stos
mov
sub
ja
or
ss
sub
push
lock
inc
aas
lods
push
dec
out
cld
pop
ljmp
adc
outsb
movsb
lret
or
pop
mov
inc
aaa
dec
xlat
mov
and
mov
sbb
cs
or
fs
pop
outsb
xor
dec
rcrb
outsb
hlt
dec
repnz
int3
loop
push
xchg
adc
push
cmp
adcb
imul
or
out
mov
jg
lahf
sub
in
add
push
jo
mov
loopne,pn
inc
pop
mov
cmpsb
je
dec
loopne
push
jg
pop
in
jp
cli
repnz
fld
add
sub
push
icebp
dec
sbb
js
inc
inc
push
fwait
adc
fwait
push
fisttpll
stc
inc
sub
imul
das
push
push
cltd
jbe
stos
mov
jle
dec
data16
mov
imul
push
loope
mov
and
test
dec
adcl
cmpsl
fadds
fcoms
in
mov
adc
push
or
fs
mov
inc
pop
mov
jmp
fidivrl
int3
dec
and
lods
mov
pushf
outsb
aaa
ja
scas
lea
sar
adc
cmpsl
xor
push
shlb
loop
sbb
mov
lret
adc
std
insl
in
xor
jge
les
push
aas
or
sub
sti
and
lock
out
xchg
popa
or
jo
mov
inc
vpmacswd
sti
daa
adc
mov
inc
setge
rcl
add
and
shrl
mov
inc
xchg
les
push
in
test
xchg
add
mov
jmp
mov
pop
push
adc
mov
xchg
dec
pop
rcl
gs
dec
in
out
loopne
pop
inc
in
pop
xchg
arpl
or
incb
test
out
xchg
sbb
inc
fsubrs
xor
mov
imul
inc
mov
push
sbb
fcmovnu
popa
push
add
mov
enter
jno
cmc
lock
int3
mov
idivb
xor
popa
sub
fxam
sub
cltd
jmp
movsb
cmp
ds
mov
repnz
fcoml
mov
push
call
push
cmp
adc
push
sbb
sub
push
mov
sbb
imul
repnz
movsl
aam
mov
stc
aas
scas
popf
rcll
pop
sbb
cwtl
push
cmc
imulb
lock
shlb
fwait
mov
into
lcall
adc
sbb
push
mov
loopne
dec
ds
dec
jo
jp
fsts
mov
pop
repz
mov
fs
pop
xchg
push
or
jp
cmp
sub
sbb
mov
mov
mov
daa
out
and
movsl
addl
dec
lret
shrl
adc
cmp
jnp
scas
fucomp
ja
adc
pop
inc
xchg
lret
enter
add
mov
add
xor
mov
leave
inc
xchg
test
out
sbb
imul
in
dec
stos
pop
movsl
pop
push
inc
inc
dec
enter
mov
inc
xchg
in
cmpb
outsl
pop
enter
lea
lea
add
mov
jne
fwait
lcall
mov
loope
push
dec
mov
sbb
add
out
movsb
mov
daa
rclb
enter
sub
rcll
in
sbbb
adc
test
imul
push
jmp
mov
jo
repnz
ds
mov
or
movsl
mov
lret
or
mov
jnp
mov
subb
inc
cli
movl
aad
rcr
inc
rclb
push
cltd
test
jbe
sbb
xchg
not
mov
movsb
imull
bound
loopne
push
lret
lock
pop
mov
js
xor
or
repnz
mov
pop
mov
inc
shll
das
mov
repz
in
out
xor
mov
test
adc
jge
leave
inc
sub
xor
xlat
adc
pusha
pop
jne
jns,pt
mov
xor
push
jo
inc
stos
jbe
dec
outsb
aas
in
test
push
mov
inc
ret
pop
and
int3
les
enter
xor
adc
imul
popa
insl
xchg
sidtl
cmc
mov
push
sar
ret
xchg
pop
ljmp
add
int3
mov
nop
sbbl
ror
mov
das
iret
pop
js
repz
sub
dec
xor
inc
push
lock
add
cwtl
clc
push
jae
mov
xchg
push
push
ja
stos
stos
mov
or
rolb
mov
inc
mov
pop
iret
addr16
hlt
stos
sbb
jno
repz
sbb
cmp
clc
cmpsb
jmp
push
mov
sbb
lock
lds
add
sbb
and
rcll
cmc
mov
push
mov
lret
daa
sahf
sub
stc
and
shl
push
pop
jno
lahf
xchg
shlb
mov
inc
scas
ds
add
cltd
jae
or
mov
adc
frstor
rolb
xorb
sub
repz
shrl
pcmpgtb
movsb
mov
ret
stc
xchg
aaa
ja
sbb
sbb
adc
stos
sahf
cmpb
fildl
ss
mov
dec
pop
mov
enter
jl
iret
cmpb
mov
imul
xchg
jo
das
inc
hlt
jmp
pop
nop
adc
icebp
jb
loop
imul
ret
sub
xor
jns
lods
sub
out
push
pop
push
cld
fisubrl
in
ja
pop
pushf
mov
sub
and
decl
adc
andb
scas
fsubl
lock
push
imul
ret
cmp
fcom
dec
jae
movsl
sbb
es
xchg
cmpsw
enter
push
jmp
repnz
flds
das
mov
test
je
stos
repz
mov
cld
in
push
mov
stc
mov
mov
mov
add
imul
notb
jg
pop
ret
mov
das
fidivrs
into
movsl
add
loop
add
scas
mov
cltd
adc
fwait
or
sbbl
cmp
xorl
or
jecxz
es
xchg
inc
pop
push
cli
aam
and
dec
lds
addr16
pop
es
cmp
sti
ss
mov
mov
xchg
inc
mov
mov
fldl
jp
push
data16
xor
out
push
movsb
cmc
and
insb
push
dec
push
add
rcll
mov
jno
out
cs
cltd
ret
nop
iret
shl
mov
dec
inc
cmp
fsub
dec
sbb
jo
mov
xor
add
scas
xor
push
push
ret
push
pop
in
sub
pop
clc
sarb
mov
adc
cs
inc
xchg
out
jo
cmpsl
repz
aad
daa
jne
filds
fnsave
inc
mov
fists
push
mov
mov
push
jns
rcrl
cmp
imul
in
sub
movsb
push
push
mov
pop
pop
mov
mov
clc
jmp
cwtl
pop
xchg
lods
ret
in
jns
xor
xchg
popa
sbb
outsl
inc
mov
aas
xchg
mov
xor
inc
cmp
add
outsb
sbb
aas
shll
loope
out
and
faddl
popf
mov
enter
xchg
stc
and
popf
or
cltd
pop
lret
and
and
jae
or
test
mov
arpl
mov
ljmp
cmc
jg
stos
push
jle
mov
popa
sub
cld
and
call
cmpsl
push
xchg
out
mov
sbb
hlt
arpl
push
sbb
cmpsb
ljmp
f2xm1
inc
aad
cmp
popa
jo
stc
xchg
inc
mov
popf
lds
sbb
add
jns
mov
movsb
popl
cmpsb
mov
decb
xchg
xchg
xchg
xchg
dec
fstl
add
mov
pop
icebp
cld
stc
jns,pt
xor
loop
and
lahf
mov
ret
dec
out
mov
xchg
add
xorb
mov
sbb
js
push
push
lahf
jmp
adcl
rol
icebp
pop
lret
rclb
xchg
lods
aas
xchg
adc
lcall
inc
cwtl
outsb
mov
idiv
std
pushf
add
cmp
jo
leave
push
call
add
popa
sbb
xchg
fimuls
rolb
fistps
mov
inc
insb
dec
add
insb
add
jne
dec
or
sbb
int3
adc
jno
test
mov
pop
into
mov
mov
adc
sbb
data16
or
test
cmp
cmp
loopnew
scas
add
in
nop
sarb
add
xor
push
and
insb
pop
add
and
xchg
sub
push
xchg
mov
jge
scas
push
lahf
adc
iret
sbb
xchg
mov
movsb
ds
dec
jne
pop
imul
sbb
inc
bound
or
inc
mov
jbe
xchg
std
mov
js
push
pop
fmuls
icebp
push
sub
cmpsb
or
loop
outsb
mov
int3
fidivs
mov
sti
push
incb
or
mov
push
sahf
nop
nop
aas
mov
and
jge
or
jae
insl
dec
inc
xchg
js
jge
xchg
ds
add
sub
mov
scas
repnz
ret
les
and
cmpw
out
mov
fisttps
and
pop
and
xchg
inc
fnstcw
sub
fnstsw
fsubrl
mov
sahf
repz
sub
repz
pop
in
arpl
fstpl
jp
inc
xchg
sbb
sti
cmc
xor
inc
and
imul
loope
fistps
push
test
icebp
jb
cmp
shl
xchg
xchg
add
test
mov
dec
dec
jo
outsb
imul
add
lahf
mov
sbb
cmpb
int3
sbb
sbb
jecxz
mov
orb
ljmp
jge
jb
jae
mov
in
push
push
adc
jmp
sub
mov
data16
jmp
jne
hlt
mov
xchg
and
hlt
pop
or
xchg
mov
jg
roll
popa
cltd
jmp
sub
adc
out
or
xchg
fstps
mov
cmc
lods
lods
movsb
inc
mov
add
xor
xlat
int
and
adc
daa
lods
leave
push
scas
or
stc
pusha
sub
sub
jg
loope
ficomps
sti
ds
ja
outsl
std
fcompl
outsb
jmp
int
lods
cmp
jmp
mov
mov
mov
repnz
ret
pop
pop
cmp
mov
movl
je
test
cmp
xchg
ret
or
jnp
sub
push
jae
jbe
push
pop
cld
xchg
sti
mov
cs
outsb
shrb
dec
pop
les
outsb
ljmp
ljmp
int
sahf
mov
lahf
leave
pop
out
mov
cmp
pop
ja
adc
ja
arpl
dec
and
lcall
push
test
icebp
outsl
rcrb
fucomi
push
mov
lock
out
insb
push
into
fisubl
clc
add
inc
out
or
aam
xchg
loop
or
inc
xor
fmul
mov
dec
xor
fwait
cmp
insl
cmp
scas
xchg
popf
adcb
or
jp
mov
jne
and
enter
repz
mov
outsb
rorb
inc
jnp
cwtl
roll
push
jmp
or
faddl
xchg
mov
stos
inc
inc
jl
jbe
jp
repnz
jmp
jl
and
xorl
shlb
cwtl
sahf
insl
ret
cmp
imul
ret
or
ds
add
pop
negb
adc
inc
arpl
or
and
xor
pop
arpl
ja
fdivrs
movntq
cmp
shll
add
jns
pop
lock
cmpl
in
and
pop
test
adc
jg
xchg
dec
cltd
outsb
test
adc
xchg
mov
mov
xor
mov
xorb
in
cmpsl
lods
mov
mov
mov
or
pop
test
cmp
jg
mov
shrl
jle
mov
orl
aam
cmp
arpl
stos
xor
mov
xor
cli
outsb
movsb
mov
push
push
out
inc
cmpsb
mov
xlat
jae
scas
jne
popa
pop
inc
adc
shrl
out
dec
mov
fwait
sbb
inc
adc
mov
push
imul
push
imul
sbb
or
daa
mov
ds
int3
adc
cmp
fcoms
mov
call
fsubp
js
test
std
push
inc
jp
mov
push
mov
jge
shll
mov
ret
adc
ja
push
sbb
push
or
mov
loop
scas
dec
mov
into
rolb
push
add
enter
sar
pop
pop
dec
or
out
dec
aam
or
push
iret
and
ffreep
dec
movsb
lods
or
cmpsb
loope
jmp
and
cld
jg
ret
xor
out
mov
xchg
pusha
mov
mov
repz
cmpsl
jne
addr16
loopne
xchg
jne
pop
xchg
ret
lcall
ret
inc
sti
mov
jo
push
in
int
jnp
jno
mov
hlt
movsl
movsb
frstor
popf
test
dec
pop
mov
adc
push
and
xchg
pop
leave
mov
sbb
popa
lcall
cltd
xchg
xor
dec
xchg
lds
mov
push
push
into
je
mov
jmp
pop
adc
adc
jecxz
cmpsb
mov
lods
fstl
test
std
mov
es
xor
dec
sbb
test
mov
pop
mov
mov
orl
add
jp
fstpt
xchg
mov
xchg
rcrl
and
or
outsl
pop
ljmp
into
push
cs
mov
test
inc
push
xchg
stc
sbb
cmpsb
iret
in
adc
fnstcw
inc
xor
dec
cmpsl
and
dec
leave
jb
dec
adc
jmp
cmc
nop
push
lock
sbbl
fs
dec
mov
xor
sub
mov
movsl
and
and
jo
test
call
jno
jne
push
rol
int3
orb
cltd
or
cmpl
mov
xchg
ja
and
push
insb
repz
icebp
jge
add
divl
sbb
aaa
rcrb
inc
enter
add
or
hlt
pop
push
cwtl
lds
in
jle
in
sub
jnp
lcall
add
stos
int
and
test
mov
dec
fcmovbe
jbe
scas
mov
cld
int3
cmp
and
sbb
xchg
xor
jbe
daa
outsb
out
pop
dec
mov
je
mov
or
nop
cmp
push
xlat
out
mov
jg
mov
mov
pop
add
push
mov
or
sub
xchg
or
fisubrl
ss
addb
ficoms
or
rcr
push
xchg
and
push
dec
or
rep
jl
sub
mov
je
stos
or
add
out
rclb
dec
int
dec
push
mov
cmpsb
fdivr
push
adc
or
movsl
mov
ficoml
int
and
fmuls
shlb
ret
xor
fmull
into
and
xor
jge
sbb
cmpsl
leave
jg
xor
push
mov
js
pop
stos
sarb
add
push
addb
roll
mov
fnstenv
call
stc
mov
sahf
xor
jg
mov
shll
ja
pushl
or
jo
xchg
and
xorb
inc
adc
jecxz
testb
pop
xor
movsb
adcl
leave
repz
adc
and
bnd
insb
imul
popf
enter
mov
cli
rorl
or
pop
and
xor
sub
lods
mov
dec
add
xor
das
dec
clc
push
call
nop
mov
push
gs
jg
xchg
stc
add
push
scas
leave
or
jae
jg
inc
in
mov
inc
mov
jno
in
push
jmp
dec
inc
icebp
add
pop
mov
jge,pt
push
mov
dec
push
ret
into
mov
xchg
cmp
mov
lret
decl
cmp
sub
sbb
xlat
or
cwtl
and
pop
mov
lods
adc
push
push
push
cs
inc
and
cwtl
sbb
scas
pop
dec
push
mov
xchg
dec
clc
mov
adc
mov
inc
test
push
or
inc
rcrl
cmp
lea
fwait
xchg
sbb
sub
push
jnp
mov
sub
add
dec
cltd
cld
cltd
xchg
outsb
sub
inc
in
repnz
jns
data16
cwtl
js
push
lods
xor
insl
shl
mov
clc
scas
lret
testb
fwait
sahf
xchg
inc
iret
xchg
ss
into
cld
repz
jp
mov
std
imul
adc
xchg
into
std
cmp
in
into
ds
ss
mov
inc
mov
enter
jl
aad
lahf
inc
fcoml
icebp
stc
xchg
jns
es
push
mov
aad
lret
sarb
in
or
outsl
mov
js
dec
add
add
dec
adc
and
sbb
pop
aas
adcb
cltd
pop
je
loope
call
inc
add
es
aad
cmp
cmp
push
mov
xor
into
daa
xor
xchg
sub
jmp
cmpsb
inc
cmpsl
pop
imul
insl
cmpsb
fimull
mov
xor
jbe
xchg
into
test
adc
ja
testl
and
rolb
scas
loopne
data16
sbb
mov
sbb
mov
stos
xchg
and
loope
js
daa
in
lods
or
add
sub
cmc
sbb
addr16
or
cmp
inc
aas
stos
iret
adcb
jne
bound
adc
xchg
adc
in
cmpsl
mov
cmp
cs
leave
mov
xor
jmp
lret
dec
shl
movsb
jecxz
cmpsb
mov
xchg
cs
aaa
out
neg
mov
sti
fbld
cmp
sbb
clts
call
fistl
xorl
add
dec
icebp
mov
and
adc
add
outsb
pop
loope
clc
imul
and
idivl
add
int3
divb
cmpsl
aad
mov
daa
xchg
in
in
sbb
xchg
vmovlps
dec
lcall
jge
scas
popa
mov
inc
pop
fsubrl
ss
dec
add
loopne
ss
jl
into
sbb
sub
pushf
push
fiaddl
mov
push
iret
and
scas
daa
fimuls
jnp
sti
fsubl
adc
sbb
dec
ljmp
mov
scas
jne
mov
xor
jp
jmp
inc
inc
je
arpl
std
cmpsl
out
cld
jae
aas
push
mov
dec
xor
adc
jl
scas
push
xchg
repnz
mov
cmp
ja
in
hlt
in
cli
ret
fadds
imul
mov
xor
lock
shl
dec
int
aam
adc
dec
pop
pop
xor
das
push
sbb
add
jns
imul
xchg
or
subb
jae
mov
ljmp
sarl
push
adc
mov
jne
cwtl
xor
ja
ds
inc
mov
xchg
push
shl
inc
push
push
outsl
ucomiss
pop
xchg
jmp
loope
and
gs
push
inc
pop
push
adc
fisttpll
bound
rcll
dec
mov
leave
out
stc
in
ret
fldt
xchg
add
push
dec
rcrl
xchg
jne
add
inc
push
jg
es
jl
test
jae
movsb
sbb
cltd
lock
es
out
cmp
and
fldenv
jnp
nop
or
ljmp
dec
out
cmc
inc
push
inc
pmulhuw
inc
mov
aaa
decb
outsb
lds
ret
xorb
xor
movsl
scas
insb
mov
mov
popf
test
shrl
push
dec
dec
in
movb
inc
lods
xlat
dec
cmpsb
adcl
push
ds
cmp
test
inc
addr16
mov
jecxz
sub
dec
loop
dec
add
cmp
or
sti
xchg
lret
jecxz
movsl
xor
inc
repnz
jbe
ret
iret
or
cmp
sub
sbbl
cltd
inc
insb
sti
movl
nop
jns
pop
out
loop
call
clc
adc
outsl
lods
mov
sbb
cmpsl
ljmp
or
pop
mov
cmpsl
outsl
ret
imul
or
pop
xor
lret
jns
cltd
ret
xchg
cld
mov
es
mov
adc
cmp
stos
repz
cli
xlat
loope
insb
or
mov
pop
xchg
jmp
sub
rcrb
outsl
iret
sub
daa
test
mov
jno
fcmovnb
jl
sbbl
ss
dec
lea
push
mov
cmp
inc
lds
fistl
jecxz
cmp
insl
movsl
ds
xchg
les
scas
fisttpll
push
out
mov
or
cmpsl
sahf
and
sub
adc
or
and
insl
or
sbb
mov
fwait
pop
push
rorb
test
jns
lret
adc
test
xchg
into
inc
dec
mov
movlps
loopnew
aam
add
scas
test
cmc
adc
mov
adcb
jge
xor
daa
pop
pop
push
pop
div
xchg
cmpsb
and
fs
xchg
push
in
popf
dec
and
ret
cld
cmc
mov
inc
sahf
jl
call
add
mov
stos
cmp
cli
cmc
lcall
scas
cmp
loopne
sbb
adc
out
cmpsl
sub
inc
dec
inc
push
adc
mov
dec
repnz
sbb
out
fwait
stos
xor
and
loopne
pop
jnp
inc
into
les
jae
push
insl
xchg
jmp
sbb
or
lahf
daa
dec
jl
mov
inc
pusha
sub
pop
sbb
stc
fwait
popl
xlat
or
adc
popa
aad
mov
aas
movsl
push
insb
repnz
outsl
add
cmp
idivb
and
leave
fildll
jb
lock
out
push
sti
incl
mov
push
sti
inc
mov
jmp
gs
jno
in
ja
sbb
and
jb
xchg
and
stc
mov
mov
xor
push
je
in
adc
pop
sbb
sbb
aaa
jmp
dec
jbe
jnp
enter
int
ljmp
lea
push
pop
fisttpll
cwtl
xchg
mov
insb
xor
and
pop
loopne
sbb
jno
faddl
or
daa
dec
inc
les
popf
push
test
cmp
pop
xchg
test
je
mov
fiadds
pushl
loope
aad
test
dec
imul
ror
pushf
scas
cmc
inc
mov
or
fdivp
loope
stos
fldt
mov
pop
mov
in
psrlw
cmp
mov
xor
jno
mov
test
std
mov
cltd
inc
daa
inc
sbb
adc
xor
adc
sbb
lahf
add
fidivrl
push
ffree
pop
jo
mov
popl
push
sub
in
jle
cld
adc
scas
pop
dec
jmp
rorb
mov
in
iret
fstpt
andl
mov
dec
add
sbb
jp
dec
je
insb
sti
in
lock
jns
or
mov
dec
add
repnz
or
mov
cmp
jb
mov
push
sbb
cli
imul
data16
popf
pop
jmp
icebp
insl
xor
into
mul
push
jg
mov
push
loop
pop
in
shl
or
cmc
test
inc
imul
sti
push
dec
ss
jno
clc
nop
int
out
pop
mov
pop
or
addb
inc
idivl
scas
inc
bound
cmp
xor
std
rcl
sbb
push
call
inc
jge
pop
dec
push
cmpsb
pop
xchg
aaa
and
leave
lret
jno
pop
es
xor
push
sti
push
sbb
ds
xchg
rolb
mov
movsl
and
ret
cmpsl
push
stc
fdivrl
jmp
aaa
mov
in
mov
xlat
push
mov
push
inc
mov
fs
xor
push
or
jno
xor
push
aad
fdivl
mov
push
jno
and
adc
mov
hlt
cli
outsb
push
mov
cmpsb
sbb
pop
mov
mov
pop
mov
bound
rolb
dec
lret
outsb
stos
xchg
data16
or
xchg
scas
cmpsb
add
pushf
in
dec
inc
lds
jbe
mov
test
add
scas
pusha
dec
pop
xor
lods
push
mov
push
psrad
xlat
xchg
rcll
push
mov
stos
jbe
mov
pushf
inc
mov
out
out
dec
mov
icebp
adc
sahf
repz
lods
inc
mov
in
or
dec
out
mov
fidivs
add
mov
lret
scas
lea
nop
inc
cli
fldenv
cmp
push
movsl
jp
xchg
insl
repnz
lea
inc
arpl
int
xchg
repz
seto
lret
sbb
inc
push
mov
and
push
sub
aam
xor
lahf
fchs
pushf
mov
sbb
pop
in
loopne
or
subl
adc
push
std
mov
mov
jbe
filds
mov
lds
push
icebp
addr16
pop
ljmp
push
sub
sar
bound
mov
add
jmp
sbb
in
pop
cmp
dec
sub
sbb
xor
jns
nop
pop
aad
cld
push
push
loopne
push
xchg
adc
xchg
lahf
loop
lcall
inc
xor
jle
mov
dec
jg
sbb
ljmp
adc
sub
in
jecxz
test
cmp
xchg
outsl
inc
testb
sbb
xchg
jb
jbe
mov
gs
mov
lahf
hlt
inc
add
xor
xlat
aas
mov
movsl
testb
mov
cmc
call
jne
cmpb
jne
dec
sahf
push
pop
inc
pop
out
pop
in
push
sub
loopne
cmpb
push
pop
lcall
enter
pop
std
mov
push
cmp
mov
or
sub
pop
test
scas
inc
stos
push
mov
cmp
jle
jle
std
mov
incb
out
mov
adc
pop
jl
adc
jmp
dec
rcrb
js
arpl
mov
enterw
push
and
repz
pop
xchg
das
dec
and
jo
adc
std
dec
daa
ret
sahf
and
cmc
dec
aaa
sub
add
dec
into
xchg
sub
sub
popf
jo
je
sub
sub
xor
or
xor
std
int
or
adc
pusha
mov
mov
pop
cli
inc
sbb
add
mov
push
xchg
xor
dec
mov
jp
mov
shlb
es
push
mov
imul
xchg
clc
inc
or
in
les
lret
in
fidivrs
movsb
and
outsb
je
sub
rolb
cmpsl
inc
inc
pushf
nop
jle
call
or
pop
enter
test
aas
sbb
and
ds
scas
mov
pop
sub
leave
mov
xor
push
pop
sub
popf
ss
push
sbb
jp
cmpb
repz
cld
push
stc
aam
adc
and
mov
cmp
popa
push
loope
imul
xchg
jo
dec
and
push
mov
scas
insl
mov
mov
cwtd
and
decb
or
dec
jmp
jmp
add
pop
xor
out
test
mov
mov
push
fwait
cmc
js
xchg
add
push
mov
imul
dec
jl
or
xchg
xor
mov
aad
sub
orl
fimull
mov
js
pop
nop
stos
cmp
mov
movsl
popf
lret
fmull
ficomps
jle
out
pop
xor
rcrl
xor
std
pop
dec
xchg
dec
push
bound
mov
aad
xchg
jbe
aaa
and
int
ljmp
nop
mov
xchg
dec
dec
push
or
shll
ficompl
inc
lock
sub
cmp
pushf
leave
les
test
xchg
jecxz
add
mov
dec
push
movsb
mov
scas
adc
filds
adc
sub
jo
xor
pop
rorb
add
hlt
cmpsb
repz
lret
add
push
repz
sbb
test
inc
mov
shr
popf
jae
out
add
int3
jmp
jl
sub
pop
or
fldt
bound
scas
mov
jo
mov
cmpsb
jne
lcall
sbb
mov
pop
mov
gs
and
insb
inc
mov
inc
adc
or
mov
outsl
loop
pop
mov
imul
cmp
xor
mov
add
in
xor
jo
ja
addr16
pop
or
lret
sbb
dec
dec
arpl
xorl
jp
jnp
jp
movsb
lret
and
ljmp
es
mov
cltd
shl
jg
andl
and
mov
mov
ucomiss
stc
outsb
pop
jg
mov
in
movsl
lret
or
in
cmpsb
int3
mov
mov
sub
push
sbb
popa
and
aaa
mov
jl
rcrb
sbb
divl
dec
mov
or
idivb
jl
outsb
std
daa
scas
dec
push
xor
add
in
xchg
fnstenv
pop
jmp
bound
jle
lods
mov
movsl
add
popf
aam
fstps
and
ret
xchg
and
or
aas
fwait
insb
daa
xor
push
jnp
push
jecxz
inc
out
call
lock
stos
jl
shrb
xor
sbb
test
cmc
out
cmpsl
or
adc
loop,pn
lahf
ja
fwait
jb
or
jns
stos
subb
xor
mull
xchg
cmpsl
pop
enter
int3
cmpb
repnz
iret
test
int
mov
xorb
out
std
pop
fdivrl
je
xor
insb
xlat
lcall
subb
push
and
cmp
sub
or
std
dec
lret
hlt
or
in
jnp
sub
adc
mov
dec
aam
mov
dec
mov
icebp
jecxz
lock
test
mov
dec
in
and
jo
fisttpll
jae
fcmovnbe
inc
lahf
sbb
inc
jno
lcall
std
lock
outsb
les
mov
popa
sti
hlt
es
in
dec
dec
pop
scas
jae
mov
adc
mov
rorb
rolb
movsl
fsts
add
sub
mov
call
pop
cmp
push
mov
cld
cmp
xchg
mov
pop
sbb
mov
loope
cmc
cmpsb
stc
testb
sbb
imul
ds
fisubl
jo
int3
outsb
pop
xor
pop
push
out
or
and
scas
add
dec
das
outsl
push
ds
mov
out
xchg
adc
mov
xchg
les
push
pop
test
xchg
xorl
or
call
in
nop
adc
mov
roll
sub
pop
shll
decb
mov
xchg
cmp
loope
mov
pop
fs
dec
mov
adc
sbb
inc
ror
popa
add
movsb
or
pop
dec
les
push
push
mov
cmp
lret
enter
sbb
es
pop
clc
out
test
inc
cmc
call
pop
xchg
mov
in
cmp
jle
add
int3
jno
sub
pop
push
mov
push
jno
jge
pop
mov
dec
ss
imul
jmp
cwtl
pop
ss
ss
imulb
fisubrs
sub
inc
add
je
test
cmpsl
fmulp
std
das
aas
mov
push
aam
loopne,pt
mov
rorl
mov
leave
into
jbe
sub
lahf
ret
cs
lret
bound
xor
cmp
mov
aas
jecxz,pt
xchg
and
aam
and
nop
mov
cs
sahf
lret
out
sub
fiadds
mov
adc
les
pop
outsl
or
ret
and
movsl
jge
xchg
jae
test
dec
sbb
mov
mov
push
icebp
xlat
cs
inc
sub
adc
scas
jno
mov
lock
or
popf
mov
mov
dec
mov
repnz
mov
cmp
mov
mov
jl
addl
repnz
jbe
xchg
jo
mov
fwait
pop
inc
inc
sarb
lock
int3
adc
cmp
ficompl
sahf
sbb
sub
outsl
movsb
pop
mov
xchg
jecxz
enter
mov
mov
aad
sbb
pop
data16
inc
test
pop
shr
push
aam
xor
mov
std
pop
into
enter
je
sbb
push
mov
mov
pop
jmp
dec
shll
xchg
jnp
out
fucomi
xor
dec
in
in
sub
jbe
mov
loopne
lret
int
xchg
filds
push
test
lods
outsb
enter
test
fdiv
fldt
iret
push
test
movsl
push
lea
inc
inc
lods
mov
sub
mov
inc
je
ljmp
mov
push
popa
mov
mov
xchg
xchg
cmp
adc
out
adc
movsl
pop
fimull
mov
stos
sub
adc
ss
push
loopne
fnstsw
inc
xor
test
aad
cltd
out
lock
adc
ss
lahf
rol
add
popf
lcall
loop
cltd
lcall
xor
mov
scas
pop
mov
fmuls
out
jecxz
cmp
adc
dec
mov
push
cli
mov
push
cmp
xor
pop
push
or
enter
movzbl
mov
xor
mov
push
stos
inc
jne
into
jmp
test
sub
dec
mov
data16
adc
repnz
xor
mov
push
ret
outsl
mov
inc
mov
mov
xchg
push
xchg
jmp
pop
mov
mov
sbb
pop
and
ret
cmp
outsb
push
sbb
mov
and
ret
adcl
es
xchg
imul
push
test
cmp
push
push
or
inc
dec
mov
inc
subb
xchg
mov
mov
fildll
dec
mov
test
fs
test
fsts
jno
fstl
and
push
mov
iret
iret
ret
fdivs
xchg
xchg
int
and
cltd
cmpsb
push
cmpsb
jg
mov
mov
dec
jl
jle
xor
mov
pop
add
mov
movsl
push
sbb
lahf
sub
adc
cmpsl
mov
andl
hlt
test
or
cs
cmc
push
dec
dec
ljmp
add
dec
sahf
inc
jle
mov
pop
push
in
rorb
js
repz
lods
aaa
mov
pop
mov
jbe
out
test
sub
inc
outsb
call
jge
pop
mov
sahf
stc
fsubs
xor
adc
adc
push
data16
ja
dec
xchg
nop
inc
jno
push
sub
into
sub
adc
mov
fnstsw
outsl
stc
add
shl
push
lahf
pop
jmp
gs
sbb
shl
lret
add
fld
mov
insl
lods
jb
mov
push
les
jno
adc
jne
dec
loopne
adc
xchg
push
push
xor
jmp
add
into
ss
add
roll
inc
bound
sbb
and
adc
mov
add
lods
cmp
mov
and
and
insb
repnz
dec
in
lods
popa
push
outsb
mov
dec
in
sti
inc
test
pop
fwait
xchg
and
sbb
dec
popa
fstps
mov
fldt
push
cmp
fdivp
or
hlt
mov
bound
gs
popf
scas
cli
dec
jl
bound
fcmove
inc
add
enter
xlat
repnz
cmp
pop
fstpl
jle
jp
or
test
cmp
and
adc
xor
xor
or
enter
mov
xor
popl
lods
xchg
jbe
outsl
in
out
pop
mov
les
mov
xchg
data16
lcall
pop
jns
rorb
mov
cwtl
loopne
sub
xor
repz
sti
in
mov
pusha
inc
push
imul
fistps
xor
clc
xchg
fmuls
ja
jl
pop
fwait
movsl
movl
cmpsb
rorb
and
push
adc
fsubs
add
xor
pushf
jns
jle
nop
fwait
lret
lods
and
jae
repnz
and
pop
jno
xorl
clc
push
fmull
stos
sub
ret
out
aad
sbb
mov
mov
fldt
aad
rcll
js
les
cwtl
xchg
negl
mov
test
lcall
iret
pop
lret
outsl
arpl
dec
scas
sub
mov
jl
mov
xor
mov
sahf
lcall
loope
jnp
adc
push
cmc
leave
mov
add
lcall
add
inc
or
imul
pusha
and
push
sub
adc
sbb
imul
mov
mov
ss
push
je
cmc
lahf
mov
int3
mov
dec
jae
adc
mov
out
push
sbb
hlt
sub
lods
les
inc
and
jle
nop
jmp
cmp
aad
pop
in
loope
adc
enter
xchg
jle
inc
lret
inc
lods
test
clc
aaa
xchg
adc
shlb
daa
ret
sbb
mov
mov
pop
scas
add
addr16
stc
sbb
push
dec
xlat
ljmp
mov
into
bound
repnz
and
das
sub
pop
sbb
and
insl
mov
cmp
arpl
sub
mov
cltd
std
xchg
push
hlt
pop
inc
in
out
push
ss
scas
pop
sub
xchg
pop
sahf
pop
mov
lods
mov
scas
mov
inc
movsb
mov
loopne
add
mov
sub
jne
es
popf
sub
inc
pop
lods
loopne
mov
ds
aam
mov
mov
push
xor
popa
add
adc
insb
fildll
in
insb
lds
push
popa
repnz
aaa
xor
lea
jb
das
les
mull
lds
xchg
mov
sub
js
fistl
jmp
sbb
dec
out
in
xor
sub
gs
fldl
mov
ds
scas
shll
cmp
sub
mov
test
jl
movb
xorb
xchg
repnz
lods
mov
repz
mov
jno
incl
insb
mov
or
mov
xor
rorb
mov
inc
insl
pop
gs
mov
fwait
adc
negl
push
repz
mov
arpl
adc
mov
jecxz
out
lret
push
fdivr
push
add
mov
xor
pop
push
pop
xlat
lret
cmp
add
movsl
push
loop
mov
adc
xor
or
pop
repnz
test
inc
lods
xor
mov
xor
insl
pop
cmp
and
lea
dec
stc
gs
jnp
xchg
leave
mov
lods
lret
sbb
scas
mov
pop
mov
movsl
xchg
lock
lods
shr
imul
sbb
insb
push
lock
or
sub
push
push
cmp
jle
or
stos
push
xchg
fcmove
lock
mov
sarb
shlb
fiaddl
sbb
sbb
dec
xchg
in
pop
rorb
mov
mov
adc
and
mov
inc
dec
inc
jp
mov
out
repnz
pusha
pop
xchg
jnp
mov
xor
jle
push
loopne
or
cmp
mov
fs
iret
xchg
ret
mov
test
push
mov
xor
sbb
iret
test
adc
test
push
dec
jmp
movsl
das
pushf
mov
adc
sbbl
stos
inc
int
pop
call
adc
shrl
ds
cmp
cmpsl
sbb
adc
roll
movsl
mov
xchg
hlt
sub
lock
jmp
hlt
cmp
js
push
and
mov
shr
mov
ss
subl
mov
xchg
gs
outsb
aas
xlat
mov
in
push
add
mov
pushf
mov
testb
in
cli
insb
sub
xor
xchg
or
dec
xlat
push
aaa
ret
sub
pop
pop
aaa
ss
xchg
lret
jo,pn
and
out
mov
and
mov
cmp
mov
shll
fidivs
stc
repz
shlb
dec
xlat
add
icebp
lret
mov
lods
pushf
xchg
mov
jg
dec
sub
loopne
out
aaa
out
repz
cld
popf
adc
push
pushf
lret
pop
sub
cmpsb
movsl
out
mov
xchg
pushf
lret
dec
test
repz
rclb
lds
fdivr
or
bound
lcall
xor
in
inc
ret
jbe
in
mov
add
pop
push
push
xchg
jno
lret
stos
aam
pop
push
adc
add
jge
clc
add
or
mov
xchg
aas
jg
sti
jmp
and
cs
stc
cmpsl
les
test
fimuls
es
out
jmp
sub
inc
ja
inc
aaa
and
lahf
repnz
add
pop
in
outsb
cltd
mov
push
subl
and
pop
in
pop
lods
fidivrl
sub
push
adc
loopne
mov
leave
std
xchg
sub
imul
inc
cmp
cmp
daa
popa
das
xlat
lcall
and
fisttps
mov
std
xor
loope
enter
push
add
popa
pop
mov
mov
or
inc
fdivrp
mov
cmp
pop
or
call
rcll
add
add
in
into
sub
mov
dec
push
loop
add
xchg
and
mov
dec
icebp
add
scas
xchg
xchg
pop
add
push
xor
idivl
mov
insb
cld
push
cmp
jns
jbe
lods
cmp
sub
add
rcrb
mov
jno
mov
ficompl
sub
movsl
xchg
xchg
adc
push
js
in
ret
imul
add
pusha
sbb
addr16
jbe
inc
fcompl
jmp
out
lds
pop
jmp
sbbb
fcomps
shrb
push
das
jmp
xor
out
ret
adc
ret
mov
ds
orl
call
cmp
movsb
fsub
inc
push
push
ret
scas
dec
dec
or
add
lret
loope
push
or
loop
notb
jne
in
test
push
lcall
push
and
xor
push
ret
or
adc
dec
push
push
jle
xlat
sar
sbb
sahf
mov
iret
jns
add
outsl
pushf
cli
adc
mov
pop
or
scas
addr16
in
icebp
dec
xchg
sub
sub
cltd
int
and
fnstsw
mov
sti
aaa
int3
int
cmp
mov
pop
inc
pop
or
lret
shrb
push
and
mov
in
jbe
out
sub
pop
incb
sub
mov
add
dec
dec
mov
dec
push
adc
popa
sbb
mov
cmp
push
ds
xchg
daa
push
cmpsb
pushf
add
dec
pushf
lds
pusha
ds
jne
or
push
adc
cmc
lods
mov
pop
dec
xchg
pushf
mov
lods
insl
lahf
cmp
arpl
sub
add
in
sbb
popa
and
aad
add
fldl
push
or
jne
fs
mov
add
lds
sub
incl
cld
sub
cli
jo
out
inc
push
jno
xchg
imul
xchg
mov
stc
or
sub
insb
loope
fcomp
in
testl
scas
or
sub
lods
xor
jmp
add
iret
ficomps
lret
add
mov
xor
xor
adc
mov
sbb
mov
mov
xor
sbb
mov
xor
push
sbb
ja
cld
jne
jnp
pop
lret
bound
rcl
repz
mov
fdivr
pop
int3
push
pop
jl
movsb
adc
insl
dec
das
sbb
lock
or
and
leave
sub
loopne
mov
test
out
or
dec
les
insb
dec
adc
pop
mov
scas
or
add
cwtl
sbb
mov
roll
jnp
test
lcall
rorl
fst
out
stos
loopne
inc
xorb
and
daa
or
mov
cmpsl
lret
fmuls
mov
rolb
fimull
lds
xchg
xor
xor
sahf
inc
out
fwait
xchg
jmp
mov
insb
enter
aas
xchg
cmc
rcrb
int3
lock
mov
push
fwait
lcall
addr16
mov
cltd
ja
jecxz
pop
or
xlat
adc
call
movl
jp
jno
pop
cmovo
repnz
lock
dec
into
mov
enter
dec
cmp
mov
sbb
test
push
dec
cmc
pusha
cmp
push
lds
xchg
jbe
cmpsb
lds
sarl
mov
jae
mov
scas
pop
jp
hlt
insl
xchg
subl
call
stos
xchg
mov
mov
sub
out
in
pop
rcrl
into
cmpl
inc
and
mov
call
ret
and
cmp
jb
mov
sub
xor
pushf
pop
push
cld
sub
adc
mov
lods
sahf
xor
mov
mov
xchg
mov
iret
jns
inc
cmp
lcall
pop
in
mov
jmp
sti
insl
movsl
xchg
data16
movsl
cmp
iret
rcl
and
mov
mov
lods
xorl
outsb
test
pop
ficomps
cmp
sarb
mov
fcomps
out
jp
pop
scas
add
jl
movsb
push
jl
push
dec
xor
or
lret
scas
scas
jnp
test
aad
xchg
movsb
lods
lret
mov
cmp
inc
push
push
orb
jl
fwait
mov
sbb
xor
or
out
shlb
push
dec
shlb
repnz
popf
shl
push
inc
les
or
aas
outsb
shll
lds
ja
add
inc
adc
jo
add
pop
mov
xor
sahf
aas
adc
mov
inc
jb
adc
mov
in
int
mov
mov
sbbb
iret
mov
cmp
out
jb
aas
incb
dec
incb
adc
sbb
fcmovnbe
scas
sub
lds
jae
lret
insb
orl
pop
insb
testb
out
hlt
leave
cmp
incb
push
testb
mov
stos
or
push
dec
fisubs
fldl
rcr
leave
sub
push
int3
cmc
jecxz
ljmp
adc
pop
gs
fs
rolb
dec
inc
and
sbb
jne
in
stos
aad
push
icebp
imul
inc
sub
inc
out
dec
mov
outsb
push
insl
mov
lret
jg
or
jp
xchg
in
push
mov
inc
fwait
push
orl
lock
xchg
push
test
subb
cli
movsl
mov
sahf
jns
mov
sub
arpl
or
dec
cs
hlt
and
push
pop
lea
xor
aam
xchg
repz
out
xchg
out
arpl
in
or
pop
insb
push
xchg
xchg
jne
inc
and
xor
sub
jg
xor
mov
cmp
and
push
scas
sbb
movsl
fisttps
dec
dec
gs
insb
adc
rcll
fsubs
and
je
or
out
mov
xchg
sbb
lret
leave
mov
cmp
and
ss
jns
dec
in
sbb
mov
pop
out
or
sub
sbb
mov
mov
lret
mov
mov
dec
repnz
mov
popa
inc
std
fisttpl
or
shlb
idivl
cmp
mov
movsb
ret
mov
sbb
mov
mov
inc
xchg
repz
cmc
sbb
push
xchg
sbb
mov
cmpsb
out
xchg
xor
and
data16
mov
outsb
test
cmpsl
or
dec
sub
xorb
cwtl
loop
push
frndint
xchg
or
dec
sub
stos
adc
inc
adc
ret
punpcklbw
push
fmull
ss
in
aas
shl
sbb
jae
imul
fimuls
mov
into
cli
mov
and
imul
cli
arpl
push
xor
movsb
sub
cld
cld
and
sbb
in
enter
adcb
xor
xchg
mov
lods
fldt
mov
test
outsb
push
cs
cmpsl
xchg
push
mov
nop
fsubr
sub
lcall
lret
push
cmpsl
pop
popa
adc
cwtl
stc
test
jg
leave
out
mov
adc
mov
dec
fwait
lret
in
xchg
dec
ficoms
pop
outsb
pop
shl
subb
sbb
sub
outsl
notb
mov
int
out
aaa
repnz
lcall
jno
jmp
cmc
popf
sbb
push
mov
adc
jmp
sbb
jg
int3
mov
mov
imul
push
test
sbb
bound
push
out
and
call
pusha
nop
clc
cld
xor
add
xor
mov
xchg
sbb
daa
pop
mov
stos
scas
insl
lea
aaa
jbe
pop
xchg
pop
aaa
pushf
mov
push
scas
jno
mov
iret
out
ret
out
daa
pop
rclb
jge
xchg
mov
mov
jne
out
pop
inc
xor
mov
aad
loopne
mov
mov
in
mov
daa
mov
push
cmp
movsb
lds
cmp
mov
or
rclb
cmc
mov
sahf
test
or
lret
sbb
jo
pop
fmuls
emms
imul
pop
adc
mov
xlat
mov
aam
pop
fisttpll
inc
dec
popa
xchg
test
sub
xor
sbb
daa
idivl
mov
inc
sbb
pop
mov
repnz
lods
in
lea
xlat
and
xchg
test
dec
sahf
xchg
jae
fwait
lods
adc
or
int3
jbe
shlb
cmc
fucomip
cmp
roll
pop
cmp
test
inc
xchg
sub
jno
cli
inc
lcall
xorb
push
push
outsl
sub
mov
inc
and
dec
push
push
mov
push
fwait
adc
adc
in
rcl
test
test
xlat
movsl
repnz
sbb
push
push
cmp
outsl
pop
mov
popa
ljmp
mulb
pop
or
out
aaa
xor
daa
sub
test
in
xchg
lfs
xchg
lret
push
dec
ja
jl
cmp
loop
cmpsb
dec
fstp
dec
xor
movsb
sub
das
inc
out
dec
test
mov
jmp
push
push
cwtl
sub
jae
xor
jmp
push
xor
push
hlt
das
xchg
adc
movsl
dec
cld
sbb
andl
or
stos
mov
faddl
push
sarb
imul
aas
xor
mov
mov
add
leave
sub
sbb
leave
sub
push
mov
test
jecxz
xor
jmp
cmp
sbb
prefetch
mov
outsl
sub
push
popf
out
xor
jb
lcall
and
add
mov
imul
xchg
dec
jns
pop
push
sub
sub
popf
in
test
add
xchg
push
fisubrs
mov
xor
pop
push
fsubrl
inc
daa
cmp
cmc
cs
xchg
cs
pop
rorb
jbe
test
dec
js
fs
fcoml
or
call
adc
pushf
aad
repz
repz
push
addr16
js
cmp
add
mov
cmp
mov
mov
add
xchg
inc
sahf
imul
inc
orb
cmp
cmpb
js
xchg
push
std
js
and
adc
or
xor
jecxz
xor
clc
jae
stc
scas
jecxz
or
push
inc
push
push
sbb
es
mov
jmp
cltd
jl
rorl
jl
test
sub
pushf
shl
data16
dec
leave
call
adc
dec
jns
call
pop
lea
lds
or
and
popf
mov
mov
jbe
bound
not
rorb
jge
popa
lahf
add
je
sub
lahf
jnp
mov
sub
mov
pop
xchg
push
or
fdivp
lds
daa
jae
xlat
fisttps
in
mov
mov
loope
and
enter
pop
inc
addr16
lods
lret
fdivr
je
fildl
rorl
loope
and
or
adc
in
push
ds
stos
mov
sarb
ds
sub
stos
push
mov
test
adc
shr
push
push
pop
fistpll
jmp
insb
and
pop
mov
mov
in
lods
shll
push
shrb
lds
div
lock
or
jp
cmpb
dec
sbb
test
pusha
fdivrl
sbb
pop
jbe
dec
iret
xchg
dec
std
mov
insb
sub
jl
lahf
xchg
cmp
gs
xorl
out
jo
test
out
shrb
pusha
repz
push
fidivrs
test
jno
sub
outsl
push
and
sbb
pop
ss
dec
outsl
and
insl
ss
push
movsb
jmp
aas
ficompl
imul
divl
mov
mov
mov
inc
ljmp
sub
and
cwtl
sti
fwait
push
cmp
adc
fdivs
push
sub
push
iret
pop
inc
xchg
fldenv
leave
fstpl
pop
cmpb
es
data16
insl
mov
add
shrl
ljmp
je
sub
add
leave
cmpl
cmpsl
xor
mov
lahf
out
add
mov
push
push
in
fisubs
xchg
and
mov
out
bound
mov
lods
mov
jmp
xor
addr16
dec
mov
mov
test
insb
rclb
jmp
ret
pusha
mov
pop
js
lods
push
add
xlat
pop
mov
jp
in
xchg
addb
cmp
add
adc
xor
enter
imul
mov
cwtl
xor
xchg
inc
adc
pop
out
jb
xchg
adc
mov
aaa
loop
sbb
jmp
loopne
pop
pushf
popl
pushf
mov
or
call
fnstenv
mov
or
ds
popa
sti
repnz
xorl
iret
push
fcomps
dec
jmp
inc
in
je
clc
pop
xchg
orb
cld
cs
pop
loope
ds
sbb
cwtl
fsubrl
jne
aad
or
pop
push
lret
outsb
movsl
mov
pop
and
bswap
sar
push
and
mov
mov
test
xlat
push
xchg
xchg
add
rol
push
mov
in
sbb
jae
cmp
mov
sti
call
pop
scas
sub
adc
int
sbb
in
pusha
push
sar
sahf
int
sbb
into
sbb
pop
les
adc
stc
push
pop
jne
inc
cld
pop
pop
rorb
int
xchg
mov
jmp
inc
jle
mov
test
orl
loopne
add
enter
mov
and
jno
xlat
cmp
pop
cli
push
jmp
mov
fisubl
sub
das
or
adc
loope
and
imul
adc
mov
xchg
jl
or
subb
xchg
cli
xorb
sti
sbb
lcall
inc
mov
stc
and
insb
jnp
mov
xchg
sbb
sbb
mov
ret
pop
dec
aad
mov
fwait
lods
mov
lret
or
jecxz
stos
movb
sarb
add
xchg
pop
repz
call
test
sub
fildll
push
out
sbb
and
gs
pusha
rol
dec
mov
mov
lock
inc
sbb
bound
je
in
mov
repz
in
mov
sub
fs
fwait
leave
jb
pop
push
mov
test
aaa
sub
std
dec
push
xchg
loopne
dec
mov
lock
mov
mov
and
mov
cld
mov
mov
or
shrl
jg
mov
fdivrl
mov
sub
or
lret
xor
rolb
lods
xor
push
cmp
imul
int
cwtl
pop
push
mov
daa
push
rcrb
sbb
enter
ret
adc
mov
aad
push
jns
push
add
sbb
push
fs
out
movb
mov
sbb
cmp
xor
xor
push
push
leave
mov
add
push
dec
or
pop
lcall
mov
dec
xlat
mov
int
inc
inc
dec
pop
push
xchg
int3
or
mov
pop
xor
xor
dec
or
inc
fwait
pop
jns
mov
and
mov
push
stos
cmp
inc
xchg
das
or
mov
sub
xor
je
pop
mov
push
je
or
ds
mov
jns
adc
imul
lds
sbb
mov
dec
iret
adc
sbb
in
repz
jp
imul
fidivrl
and
jne
push
test
sti
inc
scas
mov
insl
out
aam
pop
cmpsb
lock
aam
cmc
addr16
lds
ljmp
add
push
loop
or
sub
sub
data16
push
adc
mov
mov
cli
in
pushf
cmpb
or
push
sbb
clc
rcl
int
out
imul
mov
xchg
mov
push
push
xor
sbb
or
rolb
jg
pop
outsl
push
xor
mov
pop
daa
xor
push
icebp
pushf
inc
inc
int
add
pop
adcl
jnp
arpl
inc
xor
ret
mov
cmp
jmp
mov
cltd
movsl
mov
mov
push
jg
cmp
or
imull
fcoms
mov
test
sub
test
mov
and
cmpsb
repz
xor
jae
mov
fmulp
incb
fnsave
sub
jbe
lods
pop
bound
mov
sub
jnp
ja
cli
rclb
add
jp
sahf
mov
mov
jecxz
lret
add
jae
push
sub
mov
icebp
xchg
or
not
mov
and
mov
jb
jp
xor
mov
mov
mulb
adc
xor
mov
xor
fdivrs
inc
ljmp
fcompl
popa
sahf
fisubs
in
mov
xchg
lea
stc
cld
mov
cltd
pop
lods
jns
jo
sahf
cld
lcall
shl
push
inc
lahf
lret
add
out
mov
inc
aam
movsl
and
and
mov
mov
mov
cwtl
std
pushf
fstpl
lret
push
int
cld
icebp
xor
cmp
cmc
jmp
jnp
jg
sbb
shrl
add
xor
insl
daa
inc
push
push
fstps
imul
fisttps
les
jns
sub
popf
fstl
popl
rcl
lock
rcrl
jg
in
dec
pushf
and
pop
jmp
push
ja
jbe
mov
add
jmp
lahf
int
jns
cmpl
out
test
loop
fbstp
dec
cmp
test
push
pop
sbb
lret
fs
add
or
cmp
sub
mov
push
das
pusha
pop
mov
mov
pop
bound
mov
mov
mov
popf
imul
sahf
loopne
dec
call
mov
daa
movsb
daa
adc
lret
xor
pop
push
and
scas
fnstsw
add
xchg
imul
mov
mov
addr16
xchg
mov
pop
cli
lret
jbe
push
outsb
jo
nop
out
fbstp
mov
cmp
mov
outsb
movsl
dec
sti
pop
sbb
scas
popa
call
pushf
bswap
leave
fsubp
popf
adc
jle
pop
cmpl
daa
rorb
fsubrp
dec
sub
sarb
mov
cs
data16
ja
add
xor
mov
and
mov
fs
inc
pop
mov
fbstp
out
cmp
ds
mov
movsl
ficompl
and
mov
aas
mov
int
adc
pushf
daa
sub
or
and
xlat
and
out
add
sub
movsl
shll
aad
filds
inc
jae
push
or
push
dec
pop
cmpsb
mov
fistpll
and
test
mov
ficompl
mov
xlat
pop
pushf
cmpsl
pop
and
xlat
popa
mov
ss
addr16
mov
or
aad
sti
jp
push
pushw
testl
gs
ljmp
rcrb
pop
sbb
add
and
jecxz
je
popa
iret
popf
adc
xchg
clc
add
sub
jae
add
pop
lea
cmp
inc
btc
adc
sbbb
mov
jecxz
loopne
out
push
jl
sti
enter
mov
out
fidivl
test
mov
or
cmp
mov
mov
std
stos
dec
int
gs
rol
mov
sub
fildl
mov
aam
les
push
data16
mov
pop
jne
push
bound
sbb
or
cmp
in
mov
lcall
sub
scas
fists
imul
decl
lds
pushf
dec
push
sub
sbb
stos
stos
or
sbb
and
loopne
pop
mov
lods
xor
mov
test
pop
addr16
ret
mov
adc
bnd
cwtl
jb
jnp
enter
insl
stc
rcrl
jecxz
adc
xor
sahf
xchg
mov
push
iret
or
adc
inc
add
adc
loope
repnz
xchg
pop
pop
insl
cwtl
xchg
pop
add
cmp
xchg
scas
sahf
add
jns
mov
outsl
stc
shlb
cmp
jp
xor
repnz
pop
push
cld
jns
loope
sti
lret
jne
add
mov
fildll
test
iret
mov
mov
fildl
pop
rcll
or
mov
shlb
cli
rcrb
or
je
enter
adc
mov
or
jbe
test
add
xor
mov
fisubrl
xchg
pushf
stc
add
mull
push
adc
inc
push
ret
pop
arpl
mov
xchg
call
loopne
add
jp
mov
xor
sub
fnstsw
xor
cmc
sub
add
je
movsl
outsl
cmp
test
or
mov
jns
ss
movsb
lods
dec
xorb
ja
ja
inc
jecxz
push
mov
mov
lret
push
dec
ss
decl
std
into
dec
jle
xchg
push
das
bound
dec
xor
jg
and
adc
xchg
je
pop
loopne
and
fwait
and
lock
shl
inc
pop
pusha
cmp
insl
stos
fstl
add
fcomps
fsubrl
and
mov
shlb
int
shll
cmc
mov
cmp
stos
shlb
jmp
setbe
or
jl
daa
jg
sub
dec
xor
push
pop
push
imul
shlb
scas
jge
mov
and
mov
and
and
stc
cli
rcr
fcompl
pushl
cmp
push
mov
insb
xchg
sbb
out
repnz
add
xchg
es
sub
pop
pop
inc
mov
fidivrs
sbb
das
sub
hlt
or
pop
push
sbb
jae
mov
add
jecxz
cmp
xor
cmp
adc
jp
andb
out
mov
add
jno
jne
dec
repz
sbb
mov
mov
pop
pop
jnp
dec
push
test
xor
mov
inc
or
nop
mov
movsl
xor
imul
dec
hlt
fildl
sbb
cltd
test
lret
xor
in
jecxz
int3
repnz
cmp
std
sti
jp
out
fldenv
cli
sub
add
or
xor
shlb
pop
inc
adc
pop
sbb
and
mov
dec
jb
add
mov
or
sar
ljmp
int3
repz
sub
scas
mov
mov
add
lock
mov
fisubrs
call
cwtl
add
in
daa
int3
fdiv
lahf
fs
xlat
lock
mov
mov
test
jne
jo
xor
mov
std
fldl
lret
jo
neg
popf
fs
mov
and
pop
jg
mov
jnp
fld
jl
icebp
sahf
bsf
lret
ret
pop
gs
inc
testl
push
pop
push
xchg
xor
and
lret
jl
loope
out
out
sbb
and
call
cmp
or
sahf
push
ljmp
dec
push
popf
scas
into
sub
sbb
test
adc
push
dec
into
fisttpl
out
push
adc
movsb
dec
sbb
icebp
out
dec
pusha
push
out
mov
mov
cmp
inc
push
and
and
adc
pop
nop
ljmp
sub
fmuls
lds
notb
lret
arpl
add
cmp
jecxz
mov
stc
test
and
scas
imul
inc
ds
and
jae
cmpl
jecxz
jle
push
pushl
pop
not
pop
add
out
cmpsl
dec
repnz
cmc
mov
rcl
xchg
mov
popf
sahf
sbb
mov
in
sarb
lods
loop
or
cli
xor
inc
or
lods
or
sub
xchg
adc
lea
cmc
popa
dec
out
movsl
mov
sbb
nop
jne
push
shr
xchg
lcall
cmp
div
push
dec
jne
neg
inc
mov
push
xor
mov
adcl
cmpsl
loope
push
add
lret
add
jge
add
dec
adc
outsb
jns
sbb
nop
ja
push
nop
ja
mov
mov
aaa
out
add
loopne
mov
adc
cmp
fs
lods
and
lods
sbb
and
insl
ja
add
test
xlat
push
int3
gs
xchg
ja
aas
xor
cwtl
scas
jle
icebp
decb
pusha
push
mov
negb
inc
int
stos
mov
fucomi
mov
sahf
sbb
cltd
cmp
fistl
sub
lret
mov
scas
fdivrs
cmp
dec
xchg
rclb
js
scas
xchg
call
cltd
adc
add
xor
push
stc
pop
in
cmp
gs
mov
lock
aaa
inc
out
push
clc
ljmp
lret
adc
mov
rcrl
push
sub
jp
cmp
pop
out
xchg
divl
clc
push
push
mov
mov
dec
adc
bound
sbb
sbb
mov
inc
jmp
shr
xor
adcb
xchg
pop
add
into
std
mov
pop
cmp
rcll
adcl
cltd
test
inc
clc
jb
dec
sub
ret
jp
in
mov
push
push
xor
mov
add
mov
outsb
mov
jnp
fnsave
dec
je
mov
cmp
dec
cmp
pop
pusha
outsb
sub
imul
mov
add
sub
xor
pop
aad
sub
out
inc
mov
repnz
fdivrl
jae
js
popf
pop
mov
add
mov
mov
shl
rcrb
aaa
and
and
fdivrs
mov
or
ficoml
lahf
ljmp
pop
test
push
fwait
push
into
xor
inc
sub
pop
sub
xchg
pop
adc
xchg
jnp
loope
repz
push
cmpps
int
cmp
imul
mov
lcall
call
adc
cmpb
push
sbb
das
leave
add
inc
dec
das
xchg
loope
xchg
repz
dec
int
pop
call
scas
testl
push
idiv
int
add
andl
xor
xor
xor
icebp
push
sub
aas
cltd
sar
cmp
mov
divl
mov
push
pop
aad
xchg
sub
sub
xor
pop
dec
mov
jnp
inc
clc
xlat
call
cld
xor
push
outsb
jmp
daa
lods
cmp
cmp
push
sbb
ret
inc
dec
stos
mov
icebp
cmpl
leave
mov
out
adcl
mov
xchg
mov
mov
pop
ss
xchg
sbb
xor
repz
iret
mov
in
fldcw
mov
jl
jnp
jbe
jp
add
push
test
inc
jmp
cmc
jmp
gs
ret
adc
inc
adc
cmpl
and
xor
pop
mov
push
push
popf
fimuls
andw
ror
out
cmp
mov
push
pop
sub
mov
inc
nop
rclb
clc
aaa
mov
out
sbb
mov
inc
mov
push
xchg
cmp
icebp
mov
cmp
orb
lds
into
xor
xchg
lcall
xor
shlb
cld
sti
in
mov
pop
test
or
sbb
sarb
cli
push
repz
outsl
out
xor
mov
mov
fisttpl
sti
push
cs
ret
into
sub
data16
sarb
les
push
outsl
das
xchg
fsts
imulb
pop
ficompl
fdivrp
adc
jp
jbe
inc
xor
in
and
cwtl
aaa
pop
lds
adc
mov
jl
adc
inc
loopne
mov
outsb
fwait
rcrl
dec
cmpsb
dec
xor
push
dec
psadbw
shll
ss
jae
cmp
mov
jne
out
and
ljmp
jg
push
cmp
mov
cmpsl
fisttpll
sub
fwait
ss
jp
test
subl
mov
fldt
cmpsl
push
xlat
iret
mov
cmp
jge
sbb
inc
or
jb,pt
or
fisubs
inc
jb
psubusw
mov
daa
in
popa
xchg
ljmp
lods
out
add
mov
adc
sbb
les
dec
xchg
push
pop
xchg
inc
or
xchg
ds
enter
jmp
xlat
out
iret
adc
lods
xchg
int3
mov
fadds
loopne
fcmovbe
cmc
ja
and
sarb
shl
ss
adc
inc
cld
jne
pop
mov
sarl
sbb
and
shl
add
push
out
int3
ljmp
sbb
add
sahf
pop
in
pop
push
inc
pop
dec
mov
sbb
jge
push
mov
ret
loop
push
nop
std
ror
fisubrs
dec
test
jne
cmpsl
mov
shll
jmp
push
lock
mov
and
in
push
aam
lret
out
pop
or
pop
xchg
mov
pop
jmp
lods
jo
mov
rcll
pusha
xor
rol
clc
and
mov
les
mov
add
xchg
rorb
data16
jns
incb
push
cs
or
push
dec
pushf
jns
movsb
jmp
stos
jae
or
xchg
mov
iret
push
cs
fisubrs
mov
xor
in
arpl
jmp
sbb
mov
scas
mov
pop
stos
add
mov
cmp
sub
or
push
imul
and
jbe
jo
movzbl
sti
or
mov
imul
out
xchg
pop
xlat
xchg
push
jle
adc
jle
and
stos
loop
push
lods
rol
test
pusha
es
fisubrl
int3
addl
xchg
xor
adc
jo
icebp
sbb
imul
add
sub
pop
das
push
xchg
xchg
or
cwtl
sahf
push
scas
cltd
push
adc
or
push
call
in
andl
mov
sbb
or
xor
mov
xlat
test
xchg
in
push
mov
imul
or
incb
pop
jno
aad
test
lret
push
inc
cli
cs
incl
jmp
shlb
pop
scas
mov
dec
fwait
dec
out
adc
fcoml
stos
mov
push
sbb
popf
add
enter
sbb
mov
push
loopne
xchg
lret
pop
fstps
pop
add
test
loopne
jae
push
jp
rclb
push
imul
push
ds
xor
stc
daa
aad
cmpsl
enter
mov
das
inc
xchg
pop
xor
lock
mov
jg
mov
xchg
sti
dec
jge
jle
sti
in
leave
popf
lahf
xchg
xchg
mov
enter
movsb
in
cmp
test
xorb
decb
lret
rclb
dec
jno
jl
std
jecxz
sub
outsb
rorb
stc
mov
lahf
cmpsb
and
movsl
push
cmc
into
movsl
in
sub
stos
std
mov
popa
or
aaa
insl
decl
pop
mov
test
cltd
ljmp
inc
repnz
icebp
popa
lret
mov
fbld
loope
insl
jecxz
testb
int3
lea
adc
sbb
hlt
fildl
pushf
push
pop
or
rcl
dec
lock
mov
or
pop
in
movsl
cmp
cmpsl
jnp
nop
jns
jg
jno
fcomps
loop
adc
cmp
fdivrp
popf
cld
lcall
daa
leave
fidivs
mov
sarb
add
mov
sub
adc
jo
push
jg
ret
jp
mov
cld
sub
jns
jno
test
daa
imul
mov
in
xlat
sub
out
out
mov
loope
ds
adc
lahf
pop
push
push
pop
xor
mov
aaa
add
call
or
hlt
adc
jae
and
std
aam
jno
push
adc
pop
js
lods
or
add
mov
cmpsb
jle
aas
out
mov
or
xchg
ljmp
fldenv
cwtl
loop
add
xlat
clc
pop
inc
dec
sub
jo
sbb
dec
out
dec
cmp
sarb
push
pop
mov
mov
xor
push
sti
add
loope
cmp
jp
out
jp
fldcw
mov
fstl
pop
lds
enter
out
dec
push
arpl
jbe
xor
push
adc
leave
xor
jl
mov
mov
push
pop
gs
lock
repz
sbb
inc
add
cmpsl
cmpsl
roll
or
inc
ja
mov
sbb
cmp
testb
push
das
clc
push
dec
leave
arpl
and
inc
dec
sbb
jnp
inc
daa
and
imul
mov
insl
add
mov
imul
and
ja
dec
cmp
daa
leave
add
adc
pop
out
call
add
cmpsb
jne
sub
imul
mov
aam
push
or
cs
adc
repz
xor
pop
mov
xor
fnstcw
push
add
jns
decb
pop
cmp
bound
jmp
mov
mov
xchg
bound
dec
mov
jae
pop
cmpb
ds
rolb
inc
dec
stos
sarl
out
movsl
out
mov
mov
bswap
fcmovnb
inc
fldl
les
adc
out
sbb
cmp
fldenv
sbb
rclb
fucomp
push
out
or
lret
mov
outsb
mov
sub
cmpsl
bound
pop
xor
out
lret
xchg
repnz
icebp
xchg
insl
inc
test
dec
mov
enter
movsb
xchg
cltd
dec
imul
mov
pop
jmp
paddusb
out
jl
and
xor
sbb
jne
mov
xchg
into
leave
sbb
aad
hlt
lods
out
lea
jne
sub
pushf
out
push
dec
mov
sti
popf
jecxz,pn
sbb
aad
fistps
sub
xchg
fcompl
pushf
shll
xchg
pop
mov
cmp
mov
mov
jle
arpl
ja
test
sub
jne
jl
cltd
xor
xchg
dec
popf
loopne
fnstsw
mov
mov
pop
or
ret
jno
int
lods
cmp
mov
icebp
daa
cs
jl
out
or
stos
sub
and
dec
xor
pop
inc
add
orb
movsb
or
dec
test
sbb
sahf
push
mov
insb
cmp
jno
xor
in
add
mov
sarl
cmp
aas
mov
arpl
fcmovnu
xor
test
test
jns
lods
les
cs
pop
push
leave
jne
or
xchg
push
mov
lcall
fistpll
leave
lea
push
dec
lret
insl
cld
stc
das
sub
mov
xchg
jne
shll
subb
test
in
or
mov
or
jns
xorb
dec
imul
fdivs
add
mov
jecxz
rcrb
mov
mov
pop
xlat
push
loop
into
mov
lods
das
insb
inc
test
adc
outsb
mov
sarb
aaa
mov
push
cmp
js
dec
popl
lcall
and
cmc
fisubrl
and
lret
fidivrs
out
fstl
push
cmpl
es
in
push
cmp
or
insl
jmp
rorb
inc
cs
add
mov
jae
pushf
js
cmpsl
stc
call
stos
outsl
mov
xchg
push
push
bound
rclb
popa
xor
lcall
insb
in
cmc
mov
add
push
ja
inc
jg
pop
adc
sub
test
lcall
jle
int3
dec
out
dec
add
or
lds
loopne
pop
mov
sarl
adc
dec
je
sub
fwait
ret
mov
mov
in
iret
mov
xchg
push
imulb
cmp
jecxz
push
call
unpcklps
cmpsb
leave
push
or
hlt
jae
adc
jecxz
add
xlat
testl
or
jmp
jno
stos
mov
jmp
cli
cmp
scas
lcall
std
mov
push
pop
add
pusha
mov
or
aam
imul
std
mov
sbb
ds
popf
ljmp
cli
jne
push
lea
sub
loopne
push
push
test
aas
adc
outsb
testl
nop
aad
mov
enter
scas
jg
repz
pushf
cmp
xchg
daa
xor
repnz
pop
add
xchg
loopne
in
mov
les
mov
cltd
sti
and
sbb
rorb
inc
dec
xchg
push
addr16
pop
xor
stos
jl
fsubr
pop
imul
inc
movsb
rorb
stc
mov
mov
jno
cmc
sbb
clc
sbb
xor
lcall
adc
ret
mov
cmp
fwait
jne
add
inc
sahf
push
mov
in
mov
push
cmp
xor
and
ja
mov
fistpll
mov
ds
inc
push
lods
ja
dec
jbe
mov
add
cmp
lcall
mov
repz
call
stos
aam
adc
ja
mov
in
jg
popf
mov
cmp
add
dec
sub
jle
add
sbb
cmp
cmc
ret
add
cli
xlat
aas
and
dec
aas
rclb
mov
push
sub
lahf
scas
nop
lods
enter
pop
jae
mov
je
push
aam
stc
cmp
je
dec
out
xchg
inc
mov
fisubs
mov
aas
adc
xchg
add
lret
inc
imul
pop
in
mov
cli
imull
leave
xor
inc
dec
jcxz
cwtl
rclb
in
icebp
je
leave
pause
cwtl
ret
adc
xchg
or
dec
es
std
ljmp
sub
repz
lds
push
pop
fistl
jo
cmp
shr
ficomps
jne
add
cmp
ds
pop
jno
dec
dec
mov
push
cld
sti
jmp
in
xor
mov
jo
or
cld
jle
pop
in
push
cld
addr16
mov
hlt
cltd
mov
xchg
shlb
mov
push
sub
inc
pop
pop
dec
sahf
adc
addl
fadd
cmp
nop
outsb
pop
insb
sub
mov
mov
and
dec
cmc
mov
not
les
mov
mov
fisttps
loop
out
pop
and
fisttpl
fwait
sub
adc
dec
shr
pop
push
xchg
rorl
inc
int3
inc
add
sub
inc
adc
mov
push
scas
jp
adcl
idivb
xchg
sub
fs
test
mov
das
scas
pop
lock
or
inc
jle
xor
cmp
jl
xchg
std
pushf
jg
js
xor
or
dec
ror
stos
cmp
pop
mov
jne
xor
push
adc
test
pop
rorb
xor
jns
negb
jl
jo
cs
imul
sti
roll
sti
loope
das
sbb
and
sti
ljmp
xchg
imul
subb
ljmp
and
inc
mov
ret
mov
inc
add
sub
test
cltd
mov
cmp
popa
imul
sahf
cmp
jb
arpl
jno
sbb
dec
jl
push
xor
lock
mov
mov
and
xor
pop
adc
push
repz
dec
scas
ficomps
adc
scas
cmpsb
adcb
or
dec
sub
data16
je
mov
sbb
mov
stos
inc
sti
pop
iret
pop
call
out
push
xor
xor
aaa
push
pop
notl
testb
xchg
adc
push
ss
scas
imul
ds
xchg
out
mov
mov
inc
mov
jle
cwtl
repnz
lcall
add
xchg
fstps
cmc
cmpsl
dec
std
inc
repz
cwtl
add
push
add
xor
test
cmp
cmpsl
rcr
aam
or
sbb
push
mov
scas
stos
loop
sbb
xor
jmp
sub
sbb
shrb
out
jns
sub
push
jnp
fs
hlt
pushf
mov
pop
nop
sbb
or
mov
cmp
lret
popf
lods
ljmp
insl
aas
ret
dec
inc
les
cwtl
or
in
jge
and
in
jno
addr16
nop
lock
mov
dec
movsb
ret
jae
mov
ja
or
push
rorl
movsb
sub
and
dec
xchg
mov
pop
bound
pop
xor
int
push
ds
sub
xchg
pusha
xchg
sbb
xchg
xchg
and
aas
das
fmul
out
xchg
sbb
aam
insl
jl
adc
pop
xchg
xchg
cmp
ds
test
test
cmp
pop
in
xchg
scas
or
popf
movsb
sub
ficoml
fistl
bound
xorb
mov
push
out
orb
xchg
jmp
jb
sbb
clc
adc
es
xchg
scas
jbe
decb
inc
in
or
mov
cmpsb
jmp
imul
sub
subb
cmc
pop
cmp
pop
sub
or
andl
test
lods
xor
ljmp
sub
das
inc
out
sub
lock
cmp
and
icebp
sbb
xchg
fdivs
sub
or
aad
mov
ret
je
js
rolb
sbb
push
pusha
icebp
adc
outsl
orb
fsubrl
mov
test
lcall
das
add
or
lds
cmp
test
cmp
in
ret
imull
cmp
xor
scas
xor
sub
fstpt
in
scas
in
and
pop
sub
xchg
leave
xchg
pop
jp
andb
aaa
and
or
gs
test
xchg
and
movsb
cmp
push
clc
or
cmp
mov
and
iret
pop
adc
aaa
push
cwtl
mov
or
mov
lds
int
mov
inc
cmp
fadd
or
stos
sub
insb
mov
divb
mov
push
lcall
gs
es
pop
ds
adcb
repz
das
inc
daa
aam
ret
xor
int
mov
pop
mov
lods
adc
pop
icebp
pop
lcall
mov
hlt
xchg
lret
jns
mov
cmp
test
pusha
xchg
daa
repz
jl
loopne
cmpl
mov
lahf
adc
loopne
mov
add
bswap
flds
add
dec
scas
lods
or
popf
in
jae
and
pop
lahf
pop
inc
mov
xchg
das
sbb
dec
or
fs
push
xor
icebp
popa
xchg
sbb
mov
mov
xchg
cld
fwait
sbb
push
inc
movb
xchg
jl
stos
js
sahf
sbb
xchg
insl
pop
inc
loop
jg
es
mov
lcall
push
or
dec
fsubrp
and
out
lods
ja
mov
and
xor
sbb
mov
pusha
mov
xor
or
mov
lds
sahf
pop
mov
jge
push
xchg
loope
jle
es
addb
mov
addr16
inc
dec
pop
push
std
mov
cmpsb
sbb
cmp
mov
mov
in
push
xor
cmpsb
add
dec
jmp
in
scas
scas
and
sub
dec
sbb
jnp
and
jns
xchg
pop
mov
cmp
imul
mov
jg
imul
cwtl
mov
popf
mov
daa
sub
xor
dec
inc
out
cmp
stos
ljmp
fcompl
mov
lret
ja
push
pop
fcmovnu
dec
dec
enter
out
fmull
and
push
subl
pop
repnz
repz
mov
daa
hlt
mov
inc
fstps
inc
test
jb
adc
lock
adcl
mov
jnp
mov
repnz
sbb
leave
dec
imul
push
mov
sub
inc
mov
popa
mov
dec
dec
adc
lcall
and
fidivs
sbb
fistps
shll
imul
sub
add
js
and
std
and
cltd
and
imul
popf
enter
and
or
fld
and
outsb
push
xchg
mov
cmp
mov
in
cld
push
jge
jecxz
aas
loope
imul
mov
mov
inc
ficomps
loope
movsb
dec
cmp
dec
mov
in
clc
fs
push
cmp
repnz
andl
jae
addr16
mov
cmpsb
and
je
add
addr16
nop
movb
mov
in
rcr
divb
mov
std
or
out
mov
dec
jno
mov
test
mov
or
fwait
and
jbe
icebp
lds
sbb
push
clc
repz
cmp
mov
aas
ds
add
mov
add
pop
es
dec
cld
cltd
push
in
mov
lcall
jno
pop
push
test
xchg
cmp
dec
int
mov
gs
add
xchg
aad
pop
xor
ds
popa
outsb
jge
ljmp
xchg
test
mov
ret
dec
sub
mov
xor
ljmp
xor
pushf
add
mov
mov
mov
dec
rorb
push
add
icebp
iretw
add
xor
movsb
push
loope
aad
aam
mov
outsb
pop
ret
inc
ficoms
movsl
ret
add
sub
lret
pop
loop
scas
lahf
outsb
test
cmp
dec
movsl
jb
bound
mov
das
das
mov
xchg
mov
jne
inc
scas
rol
decb
xlat
sub
loope
add
mov
add
pmaddwd
pusha
sbb
adcl
sub
inc
loope
adc
xchg
push
xchg
xchg
cmp
out
push
xlat
pop
loope
out
sbb
test
lock
out
mov
push
fwait
xchg
in
ficoms
xchg
xor
pushf
mov
xor
sahf
jno
xor
jo
aam
jl
push
mov
push
jb
jo
shrl
add
scas
push
dec
mov
gs
sub
std
jb
test
jecxz
dec
fcompl
jo
popf
jp
in
inc
cmpb
xor
mov
mov
pop
mov
test
in
int3
push
rol
jne
jns
cmp
in
sub
add
jmp
and
mov
and
iret
cmp
mov
push
mov
gs
mov
lods
xchg
movsb
jns
adc
cmp
loopne
xor
pop
insl
notb
outsl
or
sub
inc
or
xlat
mov
rcrl
inc
adc
mov
ficompl
popa
push
call
test
es
pop
jae
mov
pushf
pop
stc
cmp
adc
add
or
xor
add
jne
adc
jg
fsubs
xor
or
aad
mov
xor
pop
jecxz
fmull
addr16
test
or
jp
stc
mov
loope
mov
out
int
or
test
lcall
sbb
cmc
into
mov
int3
int3
xchg
or
out
and
fstpl
cmc
aas
jg
out
test
sub
pop
loop
mov
and
mov
imul
cmp
jp
cltd
cld
enter
inc
xchg
and
fcoms
xor
cmpsl
adc
jecxz
mov
push
mov
sbb
jbe
pop
movsl
jne
push
sub
dec
sub
call
push
popf
aas
daa
sub
jns
ds
xchg
leave
into
or
es
and
fstps
mov
cmp
xchg
repnz
jecxz
addr16
stc
rep
shll
dec
mov
xor
lock
or
and
sub
mov
std
push
shrb
icebp
sahf
push
inc
ucomiss
clc
fstps
jae
idivb
cltd
sbb
dec
out
dec
jg
lock
jne
pop
fwait
lcall
inc
xor
ret
outsb
xchg
sub
mov
pop
mov
xchg
and
pop
mov
or
cld
movb
popa
fildll
mov
and
inc
cmc
inc
sub
adcb
mov
add
cld
adc
nop
imul
cmc
out
xchg
sti
or
sub
cld
jae
pop
xlat
mov
insb
fsts
out
mov
lcall
daa
shlb
adc
xor
xchg
xchg
addl
rcl
es
xor
inc
cld
xchg
inc
sti
outsb
int3
imul
stos
sbb
xchg
icebp
dec
stos
int3
ret
fs
cmp
lea
mov
cltd
nop
mov
xchg
mov
movsl
cmp
cmp
and
stos
sbb
xchg
add
dec
cltd
lret
test
sub
dec
mov
cltd
cmc
lea
outsl
xor
enter
cmp
jge
cltd
popa
ja
movsl
cmpsl
xor
adcb
mov
fists
fdivrs
test
rclb
fnsave
mov
outsb
sbb
and
scas
popl
popa
movsl
popl
pop
icebp
inc
ljmp
push
inc
shrb
inc
repnz
out
jge
call
xor
xor
push
test
mov
imul
cld
stos
fs
fdivs
sar
test
dec
std
xor
push
lcall
fsubr
mov
into
mov
dec
bound
jmp
adc
test
xor
mov
dec
and
out
outsb
outsb
arpl
push
xor
push
aad
cs
pushf
xchg
sbb
xchg
dec
jno
sub
imul
bound
cmc
xor
sbb
push
ja
outsl
cmpb
mov
mov
sbb
or
mov
jp
push
enter
outsl
pop
jns
mov
inc
inc
sbb
js
outsl
push
loopne
pop
iret
pop
fbstp
out
rorb
jmp
add
xor
xor
std
inc
test
xor
pop
add
test
push
lcall
jmp
fisubs
push
lea
xchg
sub
xor
shrl
scas
adc
push
add
or
add
xchg
lahf
mov
xor
jl
out
xor
scas
out
pop
inc
cmc
add
fsubr
add
stos
arpl
pop
jb
in
add
add
pop
in
icebp
jl
ret
fldenv
fnstcw
cwtl
pop
es
into
in
xor
add
inc
or
mov
cmc
orb
inc
xchg
dec
or
cmpl
cs
fsubrl
fldl
jae
jb
sbb
pop
fnsave
sub
xor
movsl
xor
jl
pop
sahf
adc
std
mov
jbe
imul
and
test
call
shll
sbb
mov
sbb
popf
push
fstpl
loope
lahf
cmpsb
call
inc
cmp
stos
fiaddl
popf
jle
dec
std
pop
sub
xchg
lret
sbb
and
jnp
in
mov
dec
ret
dec
fdivs
cmp
mov
movsb
shlb
pop
cwtl
cmp
out
mov
and
xor
fnstcw
adc
int
mov
xor
ret
fistpl
out
test
pop
dec
pop
lret
test
in
movsb
into
pop
jmp
jnp
xor
int
sub
add
fdiv
jmp
andb
xchg
or
stos
push
pop
fsubrl
or
decl
into
mov
or
inc
sbb
lahf
xlat
sub
inc
jae
mov
cmp
movsl
cmpsl
mov
inc
mov
jae
enter
frstor
xchg
and
pop
mov
cmp
nop
and
pop
addr16
xchg
push
push
and
sbb
dec
mov
adc
pop
pop
fdivs
popa
cmp
fimull
xchg
lret
or
mov
scas
sbb
sbbb
xlat
insl
mov
fcmovnb
sti
pop
jns
push
cmc
les
aam
push
ds
jne
cmp
call
sbb
out
jmp
add
xchg
add
mov
xor
int
movsl
cli
lcall
int3
sub
cmp
pop
out
pop
jge
out
cli
inc
hlt
xor
fdivrs
in
dec
int3
fcmovnb
pop
mov
cmc
add
cmp
xchg
mov
xchg
xchg
sbb
and
and
andl
pop
imul
jmp
aad
popa
std
fsubrs
out
dec
mov
or
fndisi(8087
mov
aad
sbb
dec
into
mov
cmp
cmc
mov
inc
out
pop
push
test
xchg
push
inc
push
push
mov
faddl
lds
push
fnstsw
inc
mov
repnz
xchg
in
mov
mov
xor
inc
in
insb
jne
scas
leave
js
jl
jmp
out
scas
cmp
daa
sbb
add
cmp
ljmp
adc
push
cwtl
scas
jge
push
mov
xor
add
movsb
cli
movsb
rcrb
fisubrl
push
cld
push
scas
testl
pop
xchg
mov
fnstenv
mov
test
cmp
in
jns
leave
mov
cmp
lcall
inc
in
xor
test
aad
push
inc
mov
mov
sbb
push
test
sbb
jle
imul
add
push
pop
sahf
aam
mov
leave
arpl
cmp
aad
jns
pop
adc
out
xchg
xor
adc
popa
fsub
inc
gs
lret
sub
push
mov
std
clc
mov
fwait
sbb
fwait
jle
xor
out
arpl
imulb
movsl
outsb
cmpb
jmp
adc
sub
push
loopne
lahf
xchg
nop
fwait
add
pop
stos
and
add
push
push
out
xorb
outsl
jmp
ds
pop
pushf
sbb
adc
in
mov
mov
sbb
adc
adc
fs
push
ja
rorl
rcll
out
js
in
fldcw
in
xor
and
and
out
cmc
repz
rcrb
mov
movsl
pushf
xor
mov
movsl
adc
dec
mov
pop
in
jp
icebp
mov
insb
insb
mov
shl
add
inc
in
inc
dec
xor
mov
sub
leave
cmpl
addr16
inc
sub
xchg
push
rcrl
mov
sub
adc
add
test
mov
xor
in
inc
loop
mov
sbb
xchg
mov
jmp
test
add
mov
sbb
popl
pop
cld
sbb
xor
leave
jne
int3
mov
daa
mov
jp
or
test
mov
fst
cmp
lcall
mov
lcall
xor
pop
outsl
add
test
adc
insb
fwait
adc
mov
orb
sbb
negb
cmp
popf
lods
mov
and
cmp
mov
call
out
int
cli
add
mov
xlat
rcl
or
push
mov
int
in
aas
leave
cmp
pop
sub
push
fcoms
or
imul
dec
pop
sbb
lea
push
clc
jg
gs
xchg
sar
push
ds
insl
mov
jno
jb
dec
repz
mov
cltd
jnp
xchg
dec
dec
aaa
xchg
push
cmp
pop
mov
jns
scas
xchg
enter
stos
add
pop
test
mov
adc
sbb
xchg
outsl
sub
sub
mov
int3
mov
call
std
sub
push
je
addl
sub
inc
push
arpl
div
inc
pop
sub
jns
push
orb
dec
mov
xor
push
pop
jbe
and
sarl
xchg
mov
into
fdivr
bound
pop
adc
mov
push
loop
loopne
addb
dec
je
cmp
jnp
pop
in
xchg
les
enter
mov
mov
ret
insb
jne
addr16
les
lock
jne
loop
mov
sbb
pop
cmp
fdivrs
es
pop
xor
jb
mov
cmp
xchg
jnp
iret
mov
adc
in
testl
fldl
fcmovu
sbb
or
xchg
into
repnz
xchg
into
test
dec
or
int3
fldl
addr16
sub
lea
or
sbb
pop
jnp
mov
or
mov
jg
fwait
mov
test
jle
negb
or
sub
fwait
mov
testl
pop
mov
xchg
sbb
shrl
lcall
pop
mov
aas
mov
inc
xor
xchg
mov
xchg
fidivl
scas
jns
insb
push
test
imul
mov
mov
aaa
andl
out
pusha
aam
emms
sti
mov
add
xor
cmc
std
call
test
jmp
ficompl
xchg
aad
pop
push
xor
das
dec
push
comiss
or
adc
loop
arpl
adc
jge
mov
rolb
push
sub
int
outsb
push
stc
arpl
inc
in
mov
sahf
loope
and
pop
cmc
std
push
iret
jle
cmpsb
xchg
das
nop
aas
mov
sub
in
inc
push
adc
in
xchg
jno
les
iret
sbb
fisttpll
xchg
test
adc
ret
sub
pusha
mov
xor
movsl
jae
xor
mov
stc
or
cmp
mov
out
fidivl
adc
push
xchg
push
les
test
scas
pop
jg
push
push
aam
cmp
mov
cmp
test
push
mov
jb
enter
cmp
mov
cli
and
push
fbstp
sahf
dec
sub
xchg
cltd
into
fiaddl
lea
insl
push
mov
cmp
jae
lock
xchg
imul
sub
aaa
sahf
sub
loop
shlb
jne
xchg
push
adc
daa
ljmp
mov
cs
repz
dec
add
mov
addr16
cmp
mov
insb
mov
movsl
jno
inc
cmpb
fadd
test
mov
enter
daa
ds
cltd
outsl
dec
push
fwait
bound
adc
and
aas
stos
inc
mov
in
int3
cmp
push
add
and
mov
jae
fstps
sbb
iret
je
inc
push
rol
pop
jae
pop
pop
pop
loopne
in
sbb
xor
ljmp
jmp
push
mov
jb
mov
andb
mov
mov
jno
cmc
xchg
gs
ret
outsl
insb
mov
lret
mov
pop
dec
int
push
cmp
mov
mov
sub
out
and
xorl
gs
in
or
xchg
hlt
das
out
add
pusha
leave
mov
push
icebp
or
inc
cmp
sub
push
arpl
mov
adc
test
daa
sub
dec
imul
cmp
scas
int3
jle
rcr
lods
add
lods
jne
mov
dec
xor
sub
adc
icebp
xor
rclb
mov
or
inc
xchg
jl
les
cmpsb
pushl
into
lahf
pop
jcxz
das
mov
dec
fwait
repz
xor
add
or
add
and
arpl
sbb
lods
enter
sub
repz
cmc
mov
outsl
scas
fdivrl
inc
into
add
sub
push
sub
add
outsl
add
pop
xchg
sbb
shll
subl
inc
mov
xchg
cmp
push
movsb
jmp
dec
mov
repnz
xchg
les
stos
sub
add
cs
mov
movsl
pop
jge
gs
push
xor
inc
pop
fs
inc
cmpsl
cmp
inc
cld
fstp
rcr
dec
or
and
mov
xchg
push
xchg
inc
adc
add
push
mov
push
test
ss
fmuls
call
test
jmp
aas
dec
cli
icebp
xchg
jno
call
jp
pop
sub
mov
mov
cmp
arpl
jmp
dec
jecxz
add
adc
cmpsb
pop
xor
es
mov
pop
fidivrs
mov
sub
or
adc
aaa
add
and
mov
push
outsb
jle
enter
and
inc
rorl
pop
xchg
xchg
sub
pop
jge
sbb
stos
push
out
cmc
xchg
adc
mull
das
inc
pushf
jns
enter
inc
cs
sahf
mov
lods
dec
xchg
inc
xor
fld
adc
adc
add
inc
scas
or
std
repnz
lea
mov
dec
mov
pusha
or
xchg
nop
ret
scas
jmp
int
sub
mov
scas
lds
cli
pop
adc
fcmove
ds
xchg
inc
inc
in
movsl
fstpt
adc
jne
lahf
loope
js
jnp
or
fld
stos
xor
leave
xor
mov
or
mov
mov
cmp
out
popf
jle
jns
cmp
divb
mov
add
in
push
cwtl
loopne
ljmp
mov
daa
dec
sub
adc
fwait
aad
bound
sub
mov
jl
fsubrl
shl
jmp
mov
xlat
aaa
shrb
lds
jo
push
ja
test
jmp
clc
mov
inc
lock
repz
cli
xchg
pop
push
xor
push
vsubsd
dec
pop
push
mov
fisttps
dec
pop
inc
sbb
xor
dec
stos
js
jbe
cmp
jns
push
addr16
andb
mov
pop
pop
xchg
int
sub
cwtl
cmp
and
xor
test
fisttps
jb
pop
icebp
in
pushl
add
jmp
in
shlb
inc
adc
mov
mov
hlt
sub
pusha
incb
adc
mov
aam
pusha
arpl
pop
jl
push
adc
xchg
adc
bound
addr16
sbb
cmp
das
mov
push
and
jg
and
push
pop
lea
or
mov
ror
cmc
jecxz
pop
or
xchg
movsl
imul
faddl
addl
jb
jnp
cld
jmp
push
and
ror
add
sub
mov
inc
pop
aaa
cmpsb
cld
cmp
mov
lret
mov
leave
sub
ss
scas
test
cmp
out
pop
mov
pop
sti
aas
scas
int
jle
sbb
push
push
dec
call
fcom
enter
and
orb
push
mov
or
or
loopne
dec
jmp
add
insb
out
hlt
not
cmp
sub
shr
lahf
icebp
stos
mov
sbb
adc
call
mov
or
jecxz
pop
and
in
jb
scas
jmp
lret
shl
push
int
out
fcoms
in
mov
test
dec
pop
sub
test
sbb
xor
xchg
xor
push
jne
adc
rcrb
mov
xchg
sub
lret
mov
pop
inc
push
xchg
pop
rorb
lret
pop
lahf
inc
lds
mov
push
enter
pop
imul
mov
inc
mov
outsl
dec
and
shrb
or
stc
popa
jl
lret
dec
stos
inc
xor
mov
or
jp
sbb
mov
or
lock
scas
add
loop
jnp
lret
or
dec
shll
mov
lahf
pop
push
adc
jg
ret
insl
test
bound
sbb
sub
cli
popa
sub
mov
xchg
icebp
add
fwait
mov
shll
dec
xchg
xchg
xor
call
xor
cmp
pop
hlt
ds
outsl
test
mov
sbb
jb
jno
jecxz
inc
mov
scas
test
call
mov
out
test
mov
adc
cmp
fildll
fdecstp
mov
ret
int3
scas
popf
add
lret
cmp
mov
jmp
repnz
mov
mov
loope
mov
into
popf
andl
sbb
mov
jno
lds
dec
insb
or
jbe
sub
div
in
movsl
sub
sub
jo
pop
lcall
mov
sahf
mov
sbb
cmpsl
sub
fstpl
out
ds
lret
in
mov
orb
inc
scas
orb
subl
imul
popf
shrl
nop
out
xchg
stos
hlt
enter
insb
test
mov
xchg
push
in
cwtl
dec
sbb
push
lods
pop
lds
or
repz
lcall
je
mov
fnsetpm(287
into
inc
lods
movsb
jecxz
cmp
idivl
inc
adc
cmp
mov
lcall
cmp
sub
in
cmpsb
inc
mov
in
cld
lret
fistl
and
xchg
push
add
push
addl
cmp
sbb
xor
idivl
sbb
mov
xchg
cmp
mov
enter
fs
dec
movsl
into
cmp
mov
mov
imul
out
inc
push
ret
adc
push
das
push
lock
inc
mov
out
pop
mov
std
sbb
adc
stos
shrb
push
push
cmp
xchg
sbb
pop
std
sbbb
fstp
cmpl
sub
xor
xchg
xor
push
push
insb
addr16
jo,pn
xchg
test
inc
jle
or
push
jae
xchg
and
cmc
std
fsubp
inc
ret
mov
add
adc
adc
or
mov
cmp
test
stos
mov
cmp
ja
sahf
sahf
inc
inc
leave
lcall
jge
jb
xchg
fcmovbe
push
insb
addr16
out
repz
jnp
adc
mov
push
sbb
shrb
cmc
xchg
and
xlat
jo
arpl
pusha
jnp
push
mov
sub
inc
xlat
repnz
subb
clc
repz
dec
sub
dec
dec
jno
and
int3
int3
push
cmp
outsb
or
jnp
or
or
cmc
or
jg
scas
loope
ret
sarb
arpl
iret
dec
adc
scas
jecxz
mov
sbb
mov
lock
jnp
pop
jl
add
cli
or
aaa
imul
mov
decl
push
and
sbb
inc
rol
mov
rcr
mov
divl
iret
dec
movsl
scas
imul
xchg
xchg
pop
sub
test
stc
dec
ss
inc
aaa
mov
aad
cmp
and
mov
nop
icebp
call
mov
xchg
je
mov
je
sti
mov
mov
mov
mov
or
mov
cwtl
into
jno
xor
mov
jge
lods
in
push
cmp
mov
mov
popf
inc
push
loopne
sbb
cmp
sub
dec
pop
inc
aad
inc
imul
fnsave
aam
jno
sub
cltd
mov
lret
mov
lcall
jns
push
inc
xchg
shll
test
call
or
xchg
pusha
fdivl
sti
shll
sbb
icebp
dec
jb
idivl
repnz
fisubrs
out
fwait
push
not
movsb
and
int3
jecxz
cmp
outsl
shl
ret
xchg
rcl
push
nop
fdivs
mov
sub
cli
adc
dec
je
xor
push
fsubrs
paddw
sbb
call
aaa
push
call
mov
and
lret
push
stc
add
sti
mov
mov
iret
addr16
addr16
pop
xchg
cwtl
mov
movsl
out
pop
iret
in
push
shlb
imul
inc
push
cs
in
xchg
inc
fxch
repnz
mov
xor
mov
jnp
in
sbb
jae
push
mov
dec
xor
mov
aam
pop
jno
in
test
cmp
jmp
mov
icebp
push
mov
push
xchg
add
ds
inc
dec
in
push
shll
push
jmp
aas
xchg
addb
and
mov
fstpt
out
cmp
mov
xrstor
shlb
adc
test
push
xor
ljmp
xchg
inc
enter
cs
test
mov
and
ds
sbb
lahf
pop
pop
icebp
mov
psubusw
fwait
mov
push
sbb
pop
popf
jle
repnz
sbb
and
adc
int
movsb
jecxz
ret
gs
xchg
or
jb
mov
jo
sbb
mov
addr16
jno
push
jno
push
scas
adc
out
pusha
aas
push
insl
adc
push
jno
push
dec
inc
xchg
inc
jecxz
inc
aam
push
and
or
ljmp
xchg
mov
adc
sbb
mov
mov
sbb
aad
fdivl
sub
ja
and
idiv
insb
xchg
in
test
sbb
sub
shll
pusha
gs
and
push
popf
cli
sbb
ret
repz
lret
dec
repnz
sub
icebp
cmp
mov
test
addr16
jmp
push
pop
inc
sahf
test
loop
loope
shlb
jb
lea
dec
mov
cmp
fmuls
ret
inc
push
xchg
dec
pop
lahf
adc
mov
xlat
inc
mov
dec
xor
push
and
and
sub
jo
sbb
mull
and
out
lret
cmpsl
mov
cmp
sbb
add
fmull
xor
in
leave
xor
movsl
push
mov
test
dec
inc
arpl
mov
stos
or
sub
inc
pop
inc
add
cmpsb
ljmp
test
jnp
xchg
cmp
cs
sbb
shl
test
dec
push
cltd
rolw
push
cwtl
dec
mov
rcrl
hlt
aas
or
stos
stos
jg
in
or
ds
cli
or
and
and
sbb
insl
xor
test
int3
sbb
in
jge
lcall
repnz
dec
mov
aas
adc
std
inc
shlb
out
cmp
mov
pushf
fldt
lret
push
das
or
out
out
andl
sbb
fcmovu
pop
xor
aas
xchg
hlt
repnz
fistpl
push
add
mov
orl
and
loopne
jnp
mov
adc
cmp
fldenv
popf
jne
dec
and
shll
cmpsl
mov
mov
jbe
das
sub
imul
lods
push
loop
and
repz
repnz
adc
pop
dec
jb
and
dec
aas
out
and
daa
fistpl
aas
or
movsl
sbb
jge
inc
div
mov
fwait
add
dec
fstl
xor
mov
aam
pop
aas
sub
pop
and
pop
shr
push
sar
movsl
test
xchg
xchg
xor
loop
call
bound
pop
xchg
push
mov
or
inc
mov
stos
mov
sub
notb
or
rcll
or
into
hlt
int3
sub
jae
mov
push
mov
push
mov
ficomps
leave
fbld
jne
mov
cmp
xchg
inc
xor
insl
push
pop
xlat
inc
cli
ret
pop
xchg
lods
inc
jp
sbb
or
stc
loope
dec
jno
mov
inc
xor
stc
repnz
jl
push
leave
sarl
js
mov
lods
mov
pop
push
pop
xchg
adc
mov
sbb
mov
adc
outsb
cmc
stc
into
enter
fstpl
orl
and
sti
mov
push
rorb
pop
or
lahf
mulb
fldcw
insl
mov
mov
mov
jmp
int3
add
adcb
push
ljmp
sahf
lds
rorl
dec
push
lds
sbb
mov
dec
or
push
pop
adc
push
andb
icebp
fmull
or
inc
dec
jbe
xor
mov
xchg
into
pop
mov
packsswb
xchg
sub
stos
cmp
push
imul
movsl
out
push
mov
cs
xor
mov
pop
cltd
mov
lock
pusha
dec
dec
test
or
lret
jo
enter
das
xlat
call
loop
mov
test
mov
mov
std
testb
in
jg
scas
lret
cld
sbbb
imul
ret
pop
dec
in
addr16
sbb
and
nop
int3
add
add
ljmp
arpl
stos
shll
add
shrl
int
inc
out
mov
cmp
jg
mov
out
lock
popa
adc
xchg
mov
jmp
sbb
movsb
lahf
fstp
jo
and
xlat
or
rcrl
ficoml
insl
jmp
call
pop
filds
shrb
pop
mov
rolb
rcrl
or
dec
inc
sub
push
pop
cmpsl
sub
ret
into
outsb
lcall
popf
pop
arpl
push
loopne
xchg
push
add
pushf
mov
dec
nop
jne
adc
clc
mov
lods
jle
cmpsl
inc
mov
pop
lcall
int
popa
rcll
jle
rorb
mov
out
shrl
mov
outsb
je
mov
sub
lods
je
pop
cld
pop
and
push
adc
and
icebp
dec
imul
sbb
popa
xor
sbb
into
imul
xchg
outsb
xchg
sbb
sti
lret
lods
sub
fsts
mov
mov
mov
cltd
test
lock
cld
add
sub
add
bound
or
pushf
push
inc
and
aam
jle
out
pop
outsl
out
test
adc
sti
or
and
inc
push
mov
lds
rorl
mov
fisubl
push
cmc
jle
or
pop
stos
xor
push
adcb
add
adc
dec
addr16
push
scas
jmp
mov
cli
or
fwait
jp
fsubrl
adc
icebp
addr16
push
fs
push
out
mov
dec
or
push
loopne
or
ret
mov
popa
xor
stos
in
cmp
out
push
adc
pop
nop
mov
imul
outsl
mov
mov
and
jmp
xor
sbb
fnstcw
int
cmc
je
push
or
fs
cld
xlat
cltd
push
mov
xor
in
jge
cmc
xchg
xchg
xchg
xor
shl
inc
fidivrs
lcall
int
push
or
or
or
sbb
jno
gs
subb
repnz
in
jle
stos
push
call
mov
data16
into
roll
ret
loope
loope
imul
push
das
jno
mov
jns
jmp
frstpm(287
push
add
test
xor
mov
imull
dec
loope
jbe
loope
xor
cli
mov
cmp
push
ror
fbstp
or
aas
cs
js
and
cmp
push
lcall
in
shl
movsb
punpcklbw
cmpsb
mov
xor
xchg
pop
dec
imul
iret
lods
xor
sub
popaw
repnz
inc
jle
loope
xor
adc
xor
push
inc
cmp
xchg
out
jg
jno
iret
dec
lret
push
mov
enter
cmp
pop
insb
mov
push
rcll
inc
out
shl
cmp
or
iret
fnstcw
xchg
ret
nop
cmp
pop
jno
lock
lret
dec
std
sub
outsl
mov
or
jb
pop
in
inc
and
sbb
push
pop
adc
push
push
clc
mov
gs
out
bound
jno
pop
lock
in
jb
sbb
inc
mov
mov
lahf
pause
push
jbe
inc
fistpl
ja
lds
xor
enter
dec
push
dec
fwait
adc
fwait
or
daa
enter
test
sahf
fs
xchg
mov
pushf
xchg
xor
dec
cli
mov
jns
test
dec
pop
inc
cmp
jecxz
ret
mov
mov
mov
sub
mull
or
dec
mov
pop
fiadds
pop
xchg
pushf
adc
mov
and
push
shll
pop
lea
je
test
je
outsb
xchg
cmc
gs
outsl
inc
pop
data16
movsl
dec
and
jle
inc
xor
mov
mov
lea
xor
aas
xor
cmp
nop
dec
dec
mov
xor
push
aas
and
shl
mov
lret
jp
jnp
aam
sub
pop
xchg
aaa
dec
jae
in
in
in
pusha
dec
fistl
icebp
inc
mov
nop
in
mov
pop
add
out
addr16
sahf
xor
lret
daa
lret
fnstcw
icebp
lret
into
pop
push
push
cmp
loope
je
ljmp
or
mov
icebp
arpl
sub
sub
jg
mov
ds
and
aad
xchg
mov
das
push
xor
scas
cmp
loop
push
sbb
pusha
icebp
cmpb
mov
xchg
es
mov
xor
pop
cmp
dec
add
in
add
adc
mov
xor
lahf
adc
inc
sahf
ljmp
mov
inc
or
xor
cmpsl
scas
adc
mov
mov
pop
dec
rorb
mov
or
push
stc
aas
xchg
push
or
sti
xor
mov
loop
cld
sbb
and
rcr
cmp
cld
leave
push
xchg
fwait
out
ja
xchg
lret
je
in
xor
inc
push
xchg
ja
mov
cmp
pop
in
push
test
inc
adc
repnz
popa
cmp
js
call
js
dec
mov
mull
xchg
pop
push
hlt
jle
imul
fucomi
lret
mov
push
sub
sti
ja
std
sub
inc
fnsave
mov
filds
mov
cld
jl
sti
out
scas
lret
aaa
pop
and
inc
cmc
jbe,pt
sbb
adc
push
ljmp
incb
je
out
mov
and
adc
mov
sub
sub
test
add
jmp
jns
push
and
inc
or
dec
mov
fisttpl
xchg
mov
xchg
sbb
mov
cmp
dec
inc
call
gs
adcb
push
adc
lock
or
aaa
xor
inc
loopne
out
fst
sbb
add
mov
push
adc
or
jp
jle
add
and
push
xchg
mov
into
mov
xchg
cmc
cltd
dec
lea
mov
lret
sbb
mov
xchg
negb
xor
ret
movhps
adc
push
add
js
lcall
inc
pop
mov
fwait
je
pop
in
push
gs
shrb
pusha
out
fs
cmp
pop
ret
call
das
pop
cmp
sbb
mov
rcll
outsb
subb
movsl
call
insb
outsl
pop
push
push
push
popa
es
in
hlt
inc
loope
div
callw
test
pop
in
inc
inc
pop
cwtl
pop
xor
or
inc
leave
outsb
and
mov
cmp
aas
mov
adc
arpl
fndisi(8087
pop
jbe
and
stos
sbb
das
mov
cli
mov
add
xchg
mov
push
cmpsb
lock
sub
test
sbb
sub
stc
inc
rclb
push
cmp
cmpsb
fistl
push
and
cmpsb
testb
sub
or
adc
inc
xchg
sbb
popa
mov
inc
or
loope
push
xchg
sbbl
fcomip
jg
push
jnp
pushf
repnz
push
fiaddl
dec
scas
mov
stc
xlat
aaa
in
bound
mov
fsubs
pop
or
push
adc
or
push
cltd
fwait
aaa
or
xor
sbb
inc
dec
jbe
flds
pop
loopne
inc
scas
xchg
push
push
sbb
gs
fdivrl
lahf
mov
sub
es
xchg
lds
loop
shrb
cmp
mov
dec
mov
cli
mov
sbb
mov
jne
sub
mov
cmp
ds
inc
in
adc
sbb
movsl
cmp
repnz
xorl
sbb
sbb
test
add
sub
aaa
popa
pop
mov
push
pop
push
lock
lock
or
pop
in
xchg
push
dec
or
push
scas
fidivs
pop
pushf
and
jp
sbb
js
clc
insl
cmp
fsubrs
mov
orl
xchg
pop
mov
std
mov
mov
sub
js
push
repz
jno
add
fists
std
dec
outsb
add
popf
roll
add
js
cltd
adc
sub
jmp
enter
or
loope
mov
mov
lret
cmp
aas
loop
lods
clc
and
das
inc
pushf
xor
and
clc
xor
sub
out
popa
push
inc
sub
outsb
fidivl
int3
add
or
mov
insl
aas
cmp
jp
dec
popa
push
inc
cmp
movsb
jbe
inc
enter
aaa
jne
mov
int3
xchg
adc
pop
pop
xchg
outsl
in
cld
xchg
aam
jbe
jg
mov
pop
fisubs
or
xor
jae
xchg
cli
pusha
mov
gs
sub
insl
lea
mov
fdivrs
and
ret
mov
and
rolb
sub
lds
test
outsl
call
mov
push
sub
negl
or
mov
pop
xor
test
inc
jns
pop
loopne
int3
or
jge
scas
das
fisubrl
pop
iret
cmp
sub
mov
mov
movl
test
ja,pn
fstps
xchg
mov
pop
je
inc
push
data16
lret
cmp
xor
pushf
or
frstor
daa
test
cltd
sbb
inc
shl
and
inc
sar
lcall
movsb
int
push
sbb
ficoms
push
sub
xchg
rcl
cltd
cmpsl
inc
shll
pusha
repz
or
dec
imul
std
pop
ror
pop
mov
dec
cmp
xchg
scas
xchg
add
sub
sbb
pop
lret
pop
and
xor
lea
push
ret
adc
fwait
or
sahf
leave
lea
into
sub
pushf
jp
lock
xchg
rorl
mov
arpl
pusha
arpl
cmp
lahf
lahf
and
cmp
lock
inc
popf
dec
aad
mov
out
aas
stos
mov
ljmp
in
or
xor
add
fldenv
loop
popa
inc
jbe
flds
jle
fimull
andl
cmp
imul
fisttpl
popa
mov
cmp
mov
movsb
sarb
sbb
mov
jno
sarl
inc
sub
pop
ss
and
and
clc
movsb
out
push
mov
movsl
and
dec
jnp
popf
sub
dec
sub
xchg
fmull
adc
divl
loope
testb
jle
jo
std
dec
cmpsb
add
ljmp
sbb
dec
and
inc
mov
dec
pop
inc
sub
cmp
cmp
sti
insb
push
pop
cli
imul
xchg
mov
js
lea
pop
jbe
lods
xor
orb
leave
pop
lcall
lea
mov
inc
cwtl
mov
in
mov
jp
mov
imul
js
ja
mov
fistl
icebp
mov
ret
mov
mov
pop
test
loope
push
loop
xchg
out
add
bound
out
lods
xor
xchg
notb
jge
or
insl
jmp
int3
test
cmc
mov
push
not
sbb
repz
mov
in
lahf
js
sbb
cs
cmpsl
mov
mov
movl
push
dec
pusha
out
jle
and
mov
shrl
sub
stos
lods
adc
add
mov
mov
ds
fisubrl
pop
ljmp
dec
adc
into
je
bound
mov
or
xchg
cli
stos
jl
adcb
or
mov
jmp
scas
push
mov
daa
jae
dec
hlt
jno
inc
cmp
sbb
std
adcb
and
test
fnstsw
xchg
insl
cmc
fisttpl
jecxz
imul
push
aad
repnz
mov
sub
out
push
add
sub
lea
rolb
mov
divl
mov
out
cmp
call
push
pop
movsl
dec
add
or
sti
into
jbe
mov
int3
push
or
jmp
fs
xchg
mov
fistpl
mull
lea
push
and
and
dec
fldenv
xchg
push
loope
int3
lods
test
icebp
push
insl
xchg
arpl
sbb
std
lods
ret
filds
sbb
xchg
pop
ds
mov
and
xor
insl
push
scas
sti
mov
adc
in
add
nop
add
mov
addb
push
lds
push
mull
push
jne
pusha
push
mov
int3
lock
push
mov
ljmp
lods
xchg
test
not
int3
das
dec
cltd
adc
dec
daa
sub
sbb
mov
pop
mov
cltd
jnp
dec
inc
mov
push
out
adc
mov
jo
rcrb
sbb
jnp
lods
test
xor
popa
in
lfs
xchg
sub
jp
cs
fildll
lret
inc
xchg
aas
std
mov
add
pop
lahf
or
xor
call
sahf
inc
repz
pushw
mov
test
sbb
pop
pop
jle
mov
mov
cmpb
in
cli
sti
add
outsb
lods
mov
inc
lret
lods
ds
iret
and
jg
cmp
mov
ret
jne
mov
fs
int
push
pusha
push
jmp
out
gs
outsl
bound
cwtl
mov
jp
adc
and
push
jbe
outsb
popl
dec
jns
xor
decl
das
inc
sbb
int3
xchg
add
jb
mov
push
shr
in
aam
orl
ficompl
test
or
movsl
jmp
adc
aaa
inc
dec
mov
mov
sbb
cmp
in
jmp
jno
aam
cltd
rcrb
adcl
adc
ljmp
jge
pushf
cmp
addr16
lods
xchg
pop
jl
imul
icebp
or
cmp
lods
pusha
jae
stos
hlt
test
shlb
lea
lcall
inc
movsb
push
aad
jmp
jno
leave
addb
int
or
push
push
push
jne
mov
test
shr
divb
fdivs
mov
jge
data16
add
ret
mov
inc
js
inc
mov
loop
icebp
mov
dec
push
pop
lods
mov
sbb
jo
hlt
clc
iret
xchg
push
push
mov
xlat
and
mov
dec
adc
lock
mov
cmpsb
sub
add
pop
sbb
leave
test
mov
test
outsl
add
iret
orb
fiaddl
and
push
lahf
sbb
or
cwtl
aad
addr16
inc
pop
lds
cmp
cli
mov
adc
xchg
inc
add
mov
int3
stc
sbb
dec
ss
mov
stos
xchg
sbb
arpl
outsl
pop
sbb
push
clc
inc
xchg
mov
into
scas
rcll
sbb
mov
mov
dec
test
leave
mov
sbb
or
or
xchg
iret
pushf
pop
push
call
and
xor
jp
inc
jle
fwait
add
repz
add
cltd
sub
push
dec
mov
push
dec
in
xchg
add
rclb
add
adc
jge
xor
imull
cmp
mov
aad
inc
add
lods
scas
pop
dec
cld
insl
jnp
int
mov
mov
jmp
scas
lahf
and
xchg
jle
inc
and
push
rolb
gs
mov
stc
leave
fstpt
mov
dec
scas
jmp
aaa
je
fmul
xchg
pop
test
and
mov
ret
or
outsl
xchg
lret
out
cmp
pop
nop
inc
lea
adc
pop
sbb
sahf
lods
les
out
outsl
lods
cmp
nop
jg
push
inc
inc
dec
inc
mov
sub
fisubl
imul
pop
xor
movsb
subl
fwait
mov
shrb
fwait
nop
aad
jmp
xchg
lcall
outsb
enter
rol
and
repz
cmc
int3
xorl
ja
push
rcrb
bound
lret
jns
jnp
loope
lret
loope
pushl
mov
add
loope
gs
xlat
xchg
sbb
sbb
jbe
push
cmp
push
dec
lret
mov
test
inc
lret
push
dec
xchg
add
mov
xchg
je
push
js
and
jb
xchg
ds
fstps
cmp
mov
xor
pop
cli
pop
mov
dec
jg
jmp
in
xchg
pop
jmp
addr16
ret
ret
shl
enter
lods
ror
sbb
repnz
jp
repz
scas
lock
and
mov
jno
pop
and
lods
test
or
stos
inc
outsb
pop
inc
jle
mov
or
jecxz
push
in
bound
cmp
mov
pop
or
jg
push
mov
movsb
ljmp
inc
stos
pop
out
mov
push
push
and
and
test
or
add
and
add
stc
cmc
jl
add
lret
adc
mov
pushf
ss
fistpl
xchg
stos
cld
loop
leave
inc
bnd
push
test
popa
push
fmull
and
loope
cltd
cmc
or
lds
cmp
jg
mov
repnz
adc
lret
cmpsl
sub
test
and
push
push
push
dec
jnp
inc
je
sub
outsl
into
cmp
add
movzwl
scas
mov
mov
or
cwtl
xchg
inc
fwait
popf
aad
into
out
mov
xchg
mov
cmpsl
jnp
mov
jns
rol
fistpl
xorb
les
popf
push
xchg
js
ljmp
idiv
and
stc
int
xchg
nop
cmpsb
jns
es
add
jmp
repnz
mov
nop
push
ret
xlat
jp
addr16
xchg
pusha
xchg
fmuls
iret
mov
cmp
xchg
fsubrs
xor
mov
adc
fmulp
add
gs
ret
push
or
jle
sbb
pushf
shlb
add
pop
dec
je
mov
movsb
adc
insl
shrb
sbb
push
fsubrs
fs
aas
aas
cwtl
mov
fistpl
dec
push
sti
xchg
sbb
cmc
xor
aad
jge
dec
mov
gs
cs
dec
mov
dec
sub
stos
test
dec
stos
out
push
stos
rorl
inc
dec
lods
mov
dec
popf
xchg
ds
mov
ret
in
mov
out
nop
fs
cmp
add
ljmp
dec
sbb
daa
dec
xor
mov
mov
push
lds
push
out
test
sarb
xchg
sbb
lret
or
dec
mov
pop
pop
and
jne
inc
loopne
xor
adc
mov
jl
aaa
mov
pop
lock
cli
in
dec
stc
and
lcall
in
jno
push
sbb
xor
outsl
sbb
add
movsl
lea
jnp
call
les
ret
andb
pop
les
shlb
mov
pop
mov
ret
xchg
rorl
sub
loopne
push
sbb
sub
mov
test
or
jp
ss
in
sub
add
xor
pop
mov
xchg
xchg
int3
iret
mov
insb
push
mull
ret
add
xchg
mov
je
xchg
ljmp
pop
insl
in
lds
jbe
mov
cmpsb
and
sub
loop
sub
inc
ljmp
mov
fcoml
xchg
cmpsb
xchg
pop
pop
adc
popf
push
xchg
shll
ja
mov
stc
cltd
push
jbe
fwait
popa
popf
outsb
repnz
fstpl
iret
fistpll
rorb
xchg
test
add
lret
idiv
sbb
leave
out
fcmovu
pop
rcrb
or
test
xchg
cwtl
xchg
push
mov
cmp
jo
lods
imul
sub
dec
leave
pop
xchg
push
ds
mov
mov
jl
fists
addr16
inc
stc
daa
adc
adcb
xchg
cwtl
sbb
adc
sub
lahf
je
jmp
ret
pop
mov
inc
lds
adc
ret
stc
sbb
fldcw
pop
cld
sbb
imull
dec
gs
mov
es
leave
pop
mov
lcall
jecxz
mov
xchg
nop
jb
sahf
orb
ret
mov
bound
repz
popf
idivl
inc
xchg
loopne
sub
stc
cs
or
add
and
mov
and
add
ljmp
jmp
and
cmp
mov
js
xor
shlb
pop
rcll
mov
pop
xor
sahf
cli
sbb
and
decl
dec
insl
shlb
cmp
fs
fs
movsb
adc
int3
sub
dec
repnz
inc
jbe
sbb
sbb
mov
mov
pop
repnz
insb
pop
cmc
aad
pop
mov
dec
popf
push
push
push
dec
ja
push
inc
pop
jo
ss
outsl
add
or
and
and
aas
adc
jl
rcl
ret
push
sbb
jno
rcll
in
ljmp
pop
sbb
push
jl
push
sub
incl
or
push
sub
mov
rcl
cmp
sbb
fld
fcomip
call
jl
xorb
cmc
test
cld
outsb
repnz
xor
sbb
scas
adc
pop
dec
mov
std
sbbl
loop
imul
enter
inc
loopne
clc
sbb
sbb
mov
mov
xchg
imul
ret
daa
vorps
push
inc
adc
movsl
push
outsb
movsl
out
mov
bound
test
xchg
add
fmul
imul
in
push
shll
imul
sub
pusha
mov
leave
xor
frstor
jno
loope
rcrb
mov
enter
inc
pop
das
sub
sub
sbb
lahf
bound
addr16
enter
sub
jne
jmp
fstsw
movsb
lahf
sbb
vphadduwq
aam
push
or
lods
into
pop
mov
xor
mov
pop
int3
scas
mov
adc
daa
imul
lds
sbb
xor
aas
aaa
fstp
enter
loop
inc
pop
test
adc
fstpt
lds
ret
xor
xchg
mov
pop
ret
or
dec
aam
or
std
cmp
jl
pop
pop
addr16
mov
aas
or
mov
ret
mov
push
push
aas
sub
adc
subb
mov
out
cmp
xchg
jae
push
and
pop
mov
sbb
adc
frstor
lcall
test
into
out
and
rorb
test
movsl
jbe
cmp
cli
xchg
in
movsl
jno
cwtl
fcmovbe
call
xor
and
adc
in
sub
push
bound
cmp
pushf
lods
lock
add
sub
imul
movsl
push
bswap
pop
gs
or
lock
adcb
sub
cmp
dec
push
add
mov
jnp
and
shrl
xchg
loope
lret
scas
push
mov
mov
das
dec
aas
shrl
cs
and
movsl
or
lods
push
fmuls
cmpsl
mov
pop
mov
xor
pop
ss
adc
ss
jnp
addr16
ret
cmp
jbe
lods
rclb
jl
shl
or
mov
push
xor
pop
or
ret
movsb
ljmp
fwait
movsb
movsb
mov
inc
xchg
and
pop
sbb
pop
jns
scas
and
test
lods
sbb
inc
inc
out
cld
xor
inc
sub
pop
sti
add
pop
push
vpcmpgtd
xchg
sub
ret
call
pop
mov
xlat
imul
push
mov
or
sbb
cmp
lea
loope
mov
je
ret
cmp
popa
imul
dec
xor
ljmp
je
dec
mov
repz
loop
cltd
sub
push
dec
icebp
movsl
outsl
jns
inc
adc
out
movsl
cmpb
test
inc
pop
cltd
mov
sub
test
sub
jecxz
dec
xchg
neg
orb
mov
data16
adc
lock
out
lds
imul
stc
xchg
loope
push
int3
leave
cmp
or
sbb
xchg
lahf
cmp
inc
lods
dec
mov
xchg
cmc
in
jo
or
adc
lahf
cmp
sbb
imul
push
push
daa
negb
sub
sub
cmp
imul
and
ljmp
daa
js
inc
adcl
pop
xchg
pop
inc
fldenv
lea
lods
and
popf
xor
pop
pop
or
sbb
loope
je
cmc
mov
bound
cmc
movsl
xchg
mov
es
push
mov
ljmp
mov
add
add
jae
sti
sbb
jl
mull
lock
adc
mov
es
pop
aam
popf
xchg
pop
mov
imul
xchg
jl
add
mov
sarl
mov
ds
lret
outsl
cmpsl
and
inc
jmp
stc
orl
or
dec
xor
out
adc
dec
test
sbb
pushf
sti
or
mov
nop
stos
jecxz
sbbb
dec
or
sub
xchg
xchg
cmp
pop
sbb
lock
xchg
lods
adc
mov
sbb
pop
lods
xor
xchg
sub
into
push
or
push
adc
lret
and
xor
jbe
dec
enter
dec
dec
icebp
rcrl
shlb
repnz
xchg
movsl
fidivl
push
je
push
and
add
push
xor
out
add
mov
jmp
xchg
and
out
enter
repz
push
in
aas
add
pop
jne
bound
lods
sbb
or
or
sub
dec
dec
pop
sbb
inc
scas
popl
scas
dec
sub
sbbl
xor
mov
push
mov
hlt
inc
sbb
je
mov
pusha
and
or
lods
test
xor
loop
push
popf
xchg
sub
idivl
mov
and
mov
pop
stos
test
add
add
cmp
inc
inc
dec
bound
jge
or
icebp
or
test
add
dec
mov
lods
mov
cltd
mov
xor
mov
popa
cmp
into
cwtl
cmp
mov
out
dec
imul
add
leave
and
pusha
frstor
mov
sbb
sub
arpl
loope
cmpb
stos
cmpl
adc
dec
sbb
fsubrs
in
or
adc
jno
cmpsl
lods
dec
cltd
test
stc
out
js
push
inc
in
dec
push
sub
nop
xor
aaa
bound
add
mov
sub
inc
and
ljmp
pop
scas
push
jmp
insb
xchg
add
cmp
das
repz
pop
mov
inc
inc
outsl
pop
mov
ja
fst
mov
push
push
loop
pop
xchg
jbe
xor
xchg
mov
js
push
mov
loope
lahf
push
ffree
ljmp
cmpsb
mov
lcall
xchg
push
aas
mov
ds
test
mov
inc
push
mov
enter
mov
and
xchg
aas
out
add
popf
dec
xlat
lcall
arpl
fstpl
cmp
xchg
xchg
arpl
nop
nop
jg
test
mov
xor
repz
std
xor
int3
sub
or
scas
leave
test
jle
test
cwtl
push
pop
gs
inc
ljmp
test
cltd
xor
mov
rcll
ss
mov
loope
ret
lcall
loope
jno
imul
sub
lock
sete
jb
and
shll
or
in
inc
push
or
sub
sub
fidivrl
int3
mov
inc
push
mov
xchg
or
notb
dec
inc
pop
out
cmp
arpl
cmp
insb
lahf
lahf
xchg
addr16
add
or
test
push
fdivl
sbb
sbb
icebp
adc
xchg
addb
pop
out
data16
outsb
daa
xchg
test
push
aaa
mov
sbb
add
push
mov
hlt
shlb
xor
jp
jae
mov
nop
sub
pop
jbe
inc
outsl
cmpsl
icebp
mov
test
inc
pop
sub
stos
adc
popa
and
dec
inc
lahf
movsb
xchg
outsl
aaa
xlat
pop
inc
fimuls
stos
xorl
sarl
mov
fsubrl
sub
jg
not
jge
test
and
repnz
cmp
jg
popf
xor
push
xchg
cmc
ret
add
push
mov
pop
pop
xlat
aas
inc
dec
lods
lods
inc
or
cmpsb
inc
imul
fisubrl
mov
or
jo
ss
andb
or
pop
ret
pop
loop
add
xor
hlt
push
jnp
mov
xchg
andl
aaa
rclb
mov
mov
inc
std
adc
divl
add
mov
mov
test
and
sahf
sub
fs
out
dec
repz
out
jecxz
mov
cmp
jnp
fimuls
out
cltd
cmp
aad
lods
jg
test
scas
xchg
dec
movsl
xor
cmpsb
in
xor
pop
xchg
xor
and
bound
dec
add
xchg
sub
into
in
ljmp
jne
test
es
in
mov
xchg
and
jmp
sub
cmc
divl
mov
bound
xlat
rcr
xchg
mov
sbb
dec
adc
int
xchg
or
enter
dec
mov
xchg
ret
std
test
jae
rcrl
or
clc
ljmp
pop
stos
mov
sub
or
ret
pop
sub
push
fidivs
jp
ret
rcrb
pusha
jbe
push
aad
xor
mov
inc
fdivrp
cmpsl
repz
int3
add
sub
xchg
jecxz
mov
test
test
mov
leave
xchg
mov
out
pop
push
aas
test
xchg
jmp
lods
dec
imul
mov
movb
xlat
xchg
sub
sub
hlt
pop
push
pop
adc
subl
in
jns
fwait
sti
cmp
addr16
xchg
and
mov
mov
ljmp
mov
lods
push
pop
adc
sub
mov
pop
jne
xor
idivl
xchg
pushf
push
loop
mov
jns
push
push
fdivl
stos
add
roll
push
push
and
shlb
fs
jmp
jecxz
dec
dec
xchg
xlat
stos
push
int
jle
test
jl
in
das
jne
scas
cmp
and
jae
lods
cwtl
inc
mov
mov
mov
cmp
int
push
outsl
data16
mov
mov
mov
jge
add
out
stos
jns
jp
jmp
fimuls
pop
gs
pop
adc
lock
outsl
mov
addr16
or
sbb
or
mov
push
inc
sbb
and
pusha
das
xchg
or
jns
fistpll
adc
ret
pushf
inc
sub
out
ja
pop
adc
sbb
test
push
lods
and
jle
add
push
inc
shrb
cmp
ffreep
iret
enter
bound
dec
jmp
add
mov
ficomps
jle
pop
mov
push
aad
mov
inc
lock
movsb
sbb
mov
test
test
add
sbb
mov
mov
scas
inc
add
sbb
call
cmp
jge
add
aaa
sbb
jae
imul
dec
arpl
in
aad
mov
push
adc
cmp
dec
adc
lds
ret
shrl
rorl
fs
cmpl
jl
dec
and
lea
ljmp
xor
leave
scas
push
mov
cli
lock
idivl
pusha
jmp
mul
xor
ljmp
std
jo
inc
aad
or
xor
lret
dec
lret
out
mov
nop
jmp
mov
into
in
lahf
lods
xor
pop
and
pop
stc
daa
aaa
jle
or
push
mov
xor
mov
das
les
adc
sub
iret
rorl
mov
insl
push
push
push
lcall
cmp
pop
xchg
push
jmp
aas
int3
lret
test
or
cmp
push
mov
adc
insl
pop
fnstsw
inc
mov
or
icebp
int
ret
ljmp
dec
jbe
icebp
sub
lds
sbb
lret
mov
mov
push
in
cwtl
mov
mov
sarl
jmp
xchg
in
add
mov
movsl
mov
mov
mov
mov
add
xchg
pushf
mov
jge
lret
stos
and
insl
aaa
or
fstpl
cmpsl
push
loopnew
adc
adc
xchg
out
fwait
add
push
ds
adc
push
or
sbb
mov
movsl
xlat
shll
cwtl
ds
jbe
movsl
cmp
popa
clc
xchg
stc
and
stc
cmp
ret
fiadds
xor
bnd
inc
jo
mov
cmpsl
cmp
sub
dec
lahf
loop
pop
cmp
leave
xchg
lods
cld
lds
mov
cmp
cltd
cmp
and
rcll
jns
stc
inc
movsb
mov
loopne
cld
mov
outsl
ret
in
fisttpll
jge
fwait
icebp
lret
push
loopne
pop
int3
es
adc
loope
mov
add
orb
mov
stos
movsb
dec
clc
pop
insb
test
xor
sbb
mov
popf
and
jb
rorb
shl
dec
dec
add
fiaddl
fildll
cltd
cld
shlb
imul
lods
inc
fnsave
jecxz
mov
lret
dec
popa
xor
jne
adc
inc
jns
outsl
jmp
sti
cmpsb
mov
push
bound
jo
ret
inc
aad
push
xchg
cltd
push
mov
cld
in
push
call
pop
cmpb
cmp
test
cmovp
aas
pop
sbb
cmpsl
ljmp
jge
shl
push
mov
les
push
stc
sahf
xchg
mov
pop
adc
push
out
jecxz
ss
mov
cmpsl
push
adc
push
out
dec
shrl
sub
cmc
sbb
cmp
in
rorb
add
mov
call
test
fwait
in
lret
in
mov
in
loopne
jg
or
mov
fildl
pop
cld
and
inc
shll
push
insl
out
mov
shll
mov
mov
test
xchg
push
lret
cmp
sub
mov
jp
xor
test
es
push
nop
add
cmp
lret
mov
push
rcr
and
pop
push
and
call
out
aas
dec
sbb
mov
cmp
add
jmp
mov
test
out
jg
dec
loope
lret
jbe
mov
icebp
stos
jns
dec
int
imul
fcoms
mov
cld
bt
sub
mov
sub
and
dec
dec
stos
pop
imul
cmc
out
cld
mov
or
nop
cmp
scas
js
push
arpl
cmp
sti
mov
icebp
xlat
movsb
lock
sub
rorb
pop
pop
and
add
push
xor
andb
repz
mov
insb
add
insb
rol
adc
shrl
sub
or
in
pop
pop
mov
pop
cmp
pop
adc
pop
inc
sub
push
lea
aam
jnp
jb
add
dec
or
lds
inc
adc
lods
leave
add
ss
mov
jmp
add
ret
mov
sub
jp
push
pop
pop
maskmovq
imull
mov
push
xchg
pop
xchg
jb
pop
sarb
aad
lods
fs
and
fnstsw
sub
negb
int
jge
cmc
xor
mov
lcall
pop
pop
loopne
aam
mov
les
push
jge
fwait
sub
mov
loope
push
outsl
adc
mov
imul
loope
and
das
dec
pop
add
inc
sbbl
jno
aam
repnz
pop
shlb
push
add
xchg
push
and
adc
pop
daa
and
mov
lea
dec
and
pop
push
lock
in
jp
pop
pop
jmp
data16
lcall
cs
popa
xchg
lcall
std
sub
rcrl
or
push
sbb
dec
sub
cmp
dec
jle
add
arpl
xchg
aad
aad
adc
loope
xchg
mov
popf
sbb
sub
addl
into
mov
inc
add
mov
adc
cltd
ds
fbld
xchg
subl
jp
xchg
fisubrl
pop
or
repnz
mov
inc
pop
xor
xchg
sbb
mov
push
outsb
imul
cltd
and
mov
jbe
sub
xor
shlb
push
out
adc
jno
adc
lret
xor
cltd
test
add
repnz
aad
das
sub
push
and
mov
fdivs
subb
testl
mov
adc
adc
mov
das
sbb
push
push
fdivl
leave
xchg
mulb
xchg
cwtl
std
nop
addr16
test
fiadds
rorl
stc
nop
xchg
clc
les
xchg
ja
lds
cmp
int3
jge
mov
dec
inc
and
popa
or
shll
sbb
add
inc
and
push
mov
xchg
ret
push
dec
mov
fstl
jo
rep
xor
ret
sub
divl
mov
jge
push
sub
insl
jp
xchg
in
add
mov
sub
mov
cld
into
mov
imul
cmp
shrb
jecxz
jne
xor
pop
inc
push
leave
popa
testl
add
sub
pop
test
inc
fwait
leave
and
out
loope
dec
add
fisubl
push
xor
fcmovb
inc
sub
dec
pop
or
sahf
in
sub
stos
xor
pop
call
stc
jo
ljmp
xor
mov
pop
shll
adc
inc
inc
je
fdivrl
lea
pop
lcall
add
or
sbb
mov
cmp
imulb
push
inc
fisttpll
dec
xor
movsl
and
sahf
mov
xchg
iret
sti
mov
lock
push
test
jbe
mov
inc
sahf
fwait
aad
stos
loope
ljmp
shll
pop
stos
js
cwtl
je
push
cld
int3
repz
mov
or
sbb
ret
sahf
adc
cmp
xlat
call
jo
cwtl
adc
mov
fstpl
cld
outsb
aaa
sti
or
and
pop
or
mov
mov
popa
adc
dec
jns
mov
es
xor
jne
stc
pop
ljmp
loope
or
mov
fnstenv
les
xor
xchg
aaa
push
pushf
jecxz
ja
xchg
mov
jne
out
xor
push
sbb
pushf
cmpsl
nop
or
mov
jns
pop
pop
int
push
cld
stos
jo
jg
imulb
cli
or
mov
or
or
mov
outsl
lcall
test
push
sub
pushf
push
cmp
in
adcb
jmp
in
hlt
and
dec
jl
push
movsb
mov
jo
dec
jne
mov
mov
xor
repz
lods
aam
je
dec
popa
pop
es
xchg
mov
shl
and
hlt
mov
mov
insl
push
fwait
sub
jbe
add
adc
mov
cmc
jg
test
or
or
int
xchg
or
mulb
ljmp
adc
xchg
mov
lcall
or
xchg
xor
xchg
add
loopne
jecxz
push
stos
dec
xchg
fsubrs
mov
inc
sbb
lcall
bound
lahf
mov
fdivrs
fwait
xchg
cmp
sub
xor
loop
inc
sub
inc
leave
out
and
daa
lret
outsl
cvtps2pd
shl
fmull
jg
xchg
jge
mov
mov
xor
jb
mov
das
movsl
xrelease
inc
popa
and
pop
ljmp
ja
xor
repnz
outsl
sbbl
sbb
subl
sub
mov
pop
add
sahf
jp
adc
lcall
sbb
addr16
popa
mov
and
xchg
xchg
int3
inc
dec
mov
push
icebp
push
push
xchg
inc
fidivrl
movsl
jb
xchg
jmp
add
xchg
mov
mov
out
shrb
aaa
data16
fcomps
lret
decl
mov
inc
call
dec
loopne
cmp
repnz
fcoml
pop
shrb
mov
stos
mov
mov
cmpsl
cmpl
pushf
xchg
inc
xchg
push
aam
fdivl
xor
insl
popf
jle
mov
dec
xor
divl
jmp
shll
pushl
add
xchg
pop
aam
lret
pop
adc
gs
roll
lods
mov
pop
jg
jge
mov
mov
jge
jg
mov
ret
fmuls
popf
push
je
inc
mov
fldlg2
pop
add
int
and
adc
add
dec
push
dec
aaa
enter
cld
insb
pop
jle
ds
dec
inc
or
or
add
push
cld
xchg
mov
test
mov
inc
and
leave
ljmp
dec
addb
inc
xor
shrb
jecxz
mov
test
scas
or
xchg
xor
iret
pop
mov
and
loopne
les
xchg
jle
notb
push
adc
roll
pop
popf
addr16
in
gs
xchg
fldlg2
pop
sti
shrl
push
adc
in
jnp
mov
dec
std
cli
movsl
mov
insb
cmp
sub
xor
inc
xchg
pop
xchg
inc
inc
rol
dec
cld
mov
divl
std
lock
inc
bound
mov
adc
test
in
and
repnz
mov
mov
mov
or
jmp
sub
cmpb
add
lret
int
xchg
mov
xchg
mov
sbb
inc
stc
js
out
xor
push
scas
aad
jl
fimuls
jo
je
mov
ret
sbb
popf
pushf
cmp
jno
arpl
inc
insb
mov
lret
cld
pop
out
mov
inc
pop
sbb
push
and
push
ljmp
stos
in
in
pop
adcl
mov
jp
adc
in
lcall
xor
dec
aaa
pop
or
das
mov
mov
dec
bound
adc
cmpsb
or
pop
fwait
xor
cmp
sub
xchg
jnp
adcb
jae
push
xchg
sub
ljmp
fstps
dec
push
cmp
sbb
dec
sub
sbb
pop
and
sbbb
jecxz
stc
xchg
xchg
mov
add
mov
and
adc
adc
mov
mov
es
mov
in
mov
adc
add
nop
fmulp
ja
dec
adc
xchg
xor
loopne
push
add
cs
cmp
scas
cmp
and
push
xchg
fwait
jmp
add
aam
sub
les
rorl
cmp
fisubl
lock
call
jo
insb
mov
pop
mov
or
negb
mov
xchg
and
in
cmpsb
or
filds
rorb
mov
div
movl
andl
jbe
clc
cmp
push
sub
mov
sbb
outsb
icebp
push
sbb
lock
mov
ficomps
push
ljmp
out
jl
fwait
mov
cmp
cmp
sub
iret
aam
sub
mov
fisubrs
out
leave
mov
popa
or
adc
test
jge
jns
pop
outsb
loope
bound
xor
jge
rcrl
jg
out
add
xchg
out
fwait
xlat
ja,pt
lahf
push
cmc
inc
mov
call
push
jg
dec
xor
push
cmp
fwait
pop
jp
sbb
mov
addb
dec
mov
pop
out
xor
mov
loope
push
cli
test
subb
push
ficoml
push
jae
push
sahf
cmpsb
jecxz
les
jecxz
aad
cltd
sbb
jb
cmp
add
loopne
aas
mov
sbb
stos
ret
xor
cmp
jns
aaa
adc
aam
jg
mov
ds
clc
scas
push
out
ljmp
ficomps
dec
sti
add
addr16
aaa
shlb
cmp
and
lods
jle
push
jecxz
sub
rcrb
ds
out
pop
inc
inc
jp
sub
add
push
add
sub
jmp
xchg
jecxz
cmpsb
in
push
push
cli
fs
pop
popa
or
cli
mov
mov
xor
iret
xlat
mov
inc
mov
jmp
test
lret
and
mov
add
jo
rcll
ror
mov
std
mov
into
jo
dec
fpatan
das
mov
fmulp
dec
adc
dec
xchg
pop
faddl
cmpb
imul
pusha
push
or
enter
ss
inc
int3
adc
ja
cmp
bnd
adc
aaa
adc
sbb
adc
shll
loopne
xor
adc
mov
stc
cmp
xchg
out
inc
fsubrl
lods
sbb
xchg
loop
mov
stos
pop
xchg
inc
out
insl
syscall
adc
imul
fdivrs
mov
lahf
xchg
idivb
adc
test
cwtl
cmp
push
leave
pop
pop
sub
aam
inc
or
into
mov
dec
and
or
push
mov
adc
xlat
xor
cmp
push
lea
in
mov
ret
scas
mov
sbb
xchg
lock
mov
imul
sbbb
jae
loopne
std
dec
movaps
and
mov
lods
mov
mov
and
ret
int
sub
pop
popa
and
mov
test
sub
rolb
pop
cli
outsl
cmp
and
jns
dec
cmp
push
pop
fisubl
lds
sbbl
mov
dec
cmp
inc
cmp
mov
iret
mov
push
jle
add
jno
bound
out
outsl
cmpsb
cmc
shrb
ja
fidivl
sub
adc
mov
dec
sub
std
mov
jg
jg
in
leave
stc
jmp
lock
pop
cs
sub
fadd
into
mov
cmp
mov
adc
pushl
jns
add
pushf
je
cmp
mov
sarl
cmp
jo
adc
add
inc
scas
ds
adc
mov
sbb
repnz
notb
xor
out
push
sub
les
hlt
inc
push
int
mov
add
mov
cmp
ret
and
addl
mov
loope
sub
outsb
out
subb
popf
inc
push
fwait
mov
mov
adc
lret
stc
adc
jno
lahf
lcall
inc
and
scas
or
rorl
out
jge
lret
xchg
jmp
xor
xchg
daa
or
mov
jae
gs
add
and
xchg
imul
mov
pop
fcmovnb
addr16
sbb
test
test
notb
or
xchg
mov
push
mov
fmull
fmull
insl
inc
mov
jne
enter
pop
mov
mov
jbe
inc
jg
xor
dec
rcrl
movsb
mov
imul
push
mov
pop
loop
idivl
arpl
mov
or
jg
cmp
int
sub
cltd
jns
mov
aam
push
pop
pop
cmc
int3
cmp
xor
xor
clc
lret
xchg
adcl
pusha
mov
bound
fs
and
imul
jl
pop
cmp
addr16
ds
add
scas
sbb
jne
cmc
adc
xchg
jno
xchg
ja
insl
dec
lea
out
xor
add
push
and
cwtl
aam
insl
ret
xchg
sub
mov
mov
mov
push
repnz
mov
insb
adc
inc
call
ljmp
sar
xchg
test
pop
sub
pop
movsb
xor
ss
jnp
pop
rcll
push
js
scas
cmc
dec
dec
sub
mov
incb
aas
adc
pop
push
into
addl
rclb
xlat
jle
xor
inc
mov
incb
mov
xor
mov
sub
dec
cs
mov
xchg
xchg
push
movsl
push
pusha
fistpl
mov
lea
aam
xchg
ljmp
in
std
add
sub
add
out
mov
in
mov
ret
jae
jbe
out
pop
and
test
movsl
jge
sahf
mov
push
lret
lock
int
push
cmp
aaa
pop
cmpsl
fwait
xchg
lret
pushf
xor
and
std
adcb
popa
fs
idivl
lret
fimuls
or
popf
decl
cli
cmpb
lcall
xchg
pop
dec
inc
dec
adc
cmpsb
cmp
push
adc
rcl
clc
mov
cltd
cmc
mov
cmc
into
jb
sub
jl
push
hlt
mov
mov
and
dec
mov
lea
aad
or
push
dec
dec
pop
cltd
jge
mov
shl
mov
mov
subb
sbb
stos
in
fs
and
mov
lcall
int3
mov
sahf
add
xchg
jge
inc
jbe
xchg
push
xor
pop
push
roll
cwtl
inc
jnp
xchg
arpl
insb
scas
popa
loopne
test
cmpb
hlt
loope
mov
pop
xor
fadds
mov
fwait
pop
popf
ja
sub
out
shll
call
mov
cmp
loope
int3
adc
sbb
add
cli
sbb
push
imul
lods
int3
int
sbb
enter
pop
adc
push
dec
rcrb
cmpb
into
inc
xor
cmpb
adc
mov
pop
ret
daa
add
js
cmpsb
xchg
mov
sarb
jbe
jbe
lret
pop
add
sub
cs
adc
sahf
sbb
sbb
mov
imul
mov
jge
subl
inc
adc
std
daa
mov
sbb
and
std
cmp
into
in
or
and
jae
fwait
adc
lret
push
push
cmp
push
dec
push
hlt
xchg
and
inc
icebp
ret
xor
out
add
inc
xorb
int3
in
mov
xor
mov
lea
mov
stc
inc
fcomi
adc
out
mov
sub
pop
inc
sub
repz
lret
shl
imul
mov
lock
imul
adc
jae
outsb
fcmove
xlat
and
jne
pop
mov
mov
xchg
ret
sub
lcall
push
mov
rcrl
xchg
out
xlat
pop
sti
mov
mov
or
push
sbb
mov
jne
imul
inc
dec
push
jb
jge
jo
in
mov
or
pop
jnp
mov
stc
dec
adc
addr16
mov
sbb
lcall
pop
popa
lcall
push
or
cmpb
jae
rclb
mov
mov
mov
or
jne
leave
jno
int3
aas
mov
mov
cmp
cmp
scas
in
pop
scas
pop
jb
mov
enter
imul
pop
add
mov
or
hlt
out
scas
subb
inc
inc
aas
rcrb
push
cmp
rcr
cmpsl
addb
push
push
push
mov
dec
jnp
imul
push
pushf
scas
push
jge
mov
mov
rolb
lea
inc
sub
stc
xchg
push
dec
sti
mov
inc
pushf
jo
cmc
outsb
xor
pop
imul
in
jl
shrl
xor
jp
fxch
mov
cmpl
jle
and
dec
xchg
addb
mov
out
pop
pop
clc
mov
push
jb
pop
jae
inc
cli
adc
dec
lock
ja
push
rol
scas
daa
adc
xorb
mov
xchg
pushf
adc
jmp
ret
ficompl
sahf
lahf
push
xorb
out
xor
addr16
or
iret
aad
mov
mov
mov
idiv
nop
push
insb
je
addr16
adc
xor
push
jp
cld
hlt
outsl
xor
bnd
test
pop
mull
sahf
cmp
push
loopne
clc
fisubrs
mov
xchg
jae
nop
lds
jbe
ja
xchg
and
into
inc
dec
jg,pt
notl
sub
sbb
fucompp
lock
push
daa
sarl
rorl
jl
lret
adc
jmp
popa
inc
lods
xlat
inc
push
jae
aad
ss
imul
push
in
jne
pushw
dec
cltd
mov
sti
inc
push
adc
mov
scas
push
sbb
int3
xchg
push
fiadds
je
repnz
lds
imul
cmp
push
sbb
in
push
jne
cmp
xchg
sbb
shlb
movsl
adc
mov
jmp
aam
ret
jb
push
sub
sbb
sbb
pop
lahf
jns
stos
clc
fistl
test
rol
lret
loope
je
xchg
pop
adcl
and
addl
pusha
cmp
adc
mov
cmpb
movsb
gs
dec
jne
fs
in
iret
jmp
pop
iret
push
data16
cmp
and
sbb
dec
mov
testl
in
inc
shlb
dec
aas
lret
test
and
mov
mov
enter
dec
mov
adcl
dec
or
or
push
mov
aam
pop
dec
xchg
outsl
lock
fs
mov
jmp
popa
mov
orb
in
loopne
dec
insl
add
stc
or
sbb
xchg
or
dec
roll
in
mov
test
push
push
icebp
mov
fisttpll
mov
sub
sbb
dec
lds
in
add
imul
adc
ret
stos
cmp
lea
xor
jne
jmp
sbb
testb
push
repz
mov
dec
ret
sub
xchg
int3
add
sbb
add
jp
test
aas
push
movsb
sub
or
sub
jnp
out
xchg
fdiv
push
in
mov
lods
cmp
xchg
cmpsl
cmp
sbb
mov
jo
ja
popf
jecxz
loop
into
mov
jae
xor
in
jp
test
mov
push
pop
mov
push
loop
out
shld
ret
sub
loope
popf
mov
mov
pop
addb
pop
sbb
inc
into
add
call
mov
dec
inc
lea
lcall
cmp
jg
pop
push
pop
jg
push
mov
dec
test
cld
fwait
in
cmp
cwtl
lret
js
adc
daa
imul
xor
sub
test
mov
sbb
jne
add
adc
mov
cmpsl
inc
xor
ja
hlt
fldcw
scas
mov
lock
out
and
stos
sbb
xor
stos
cmpsl
and
xchg
ja
aaa
andb
bound
push
lods
mov
fiaddl
add
jne
jno
sarl
jmp
jae
les
dec
gs
adc
ss
cld
pop
mov
jmp
leave
movsb
xor
sbb
movsb
sub
stos
imul
daa
lds
loopne
cmp
cwtl
hlt
inc
sar
daa
adc
scas
or
pusha
xchg
or
sub
xor
sbb
jo
repz
inc
cmp
fstpl
lods
pop
stos
xchg
push
mov
pushf
push
mov
sbb
adc
loop
adc
ss
lcall
sub
cmc
pop
lret
out
mov
push
mov
xchg
dec
mov
jnp
and
outsb
cmpsl
das
inc
add
mov
andb
mov
push
cmpsl
icebp
jb
nop
mov
push
push
add
popf
sbb
insb
xor
insl
sbb
cltd
test
xor
sti
dec
inc
push
sub
cmp
es
or
sbb
shl
mov
cmp
inc
popa
mov
enter
push
mov
nop
out
das
and
xor
or
cli
aaa
ror
inc
pusha
in
rorl
ja
lret
mov
cmp
sbb
loop
and
loop
shlb
adcb
push
aam
mov
insl
xor
fstpl
adc
popf
out
add
inc
cmp
and
lcall
pop
mov
adc
pop
sub
push
cmp
add
sahf
adc
xchg
and
pop
or
test
cmp
pop
iret
mov
stc
sbb
out
pop
call
dec
cli
jecxz
rorl
filds
cmpsl
xor
repz
mov
sub
or
cwtl
es
sahf
incb
add
je
cmp
sbb
mov
cs
les
aad
mov
push
xor
xor
sbb
les
movsb
mov
adc
movsl
sbb
fimull
insl
and
xor
sub
pop
jge
cmp
rcrl
cmp
xbegin
jne
pop
push
xchg
and
push
iret
decb
pop
xor
mov
imul
test
popa
pusha
xchg
adc
aas
dec
sbb
push
sbb
test
adc
ljmp
notl
mov
fidivl
fwait
and
andb
mov
scas
and
mov
hlt
inc
cltd
in
jle
add
mov
sub
neg
movsb
lds
adc
inc
loope
repnz
ret
mov
in
cmpb
inc
or
ret
cmc
movnti
and
das
cmp
jp
mov
sbb
jae
dec
cli
sub
lret
and
fwait
xchg
cmp
or
xchg
mov
sbb
sub
call
cmpsl
mov
hlt
shrl
ret
dec
fnstenv
lods
enter
jmp
fwait
cmp
xchg
cmpsb
sub
mov
sahf
push
xor
loopne
fadd
add
cmpb
adc
push
aam
push
add
aas
pop
sub
sbb
test
sti
jecxz
pusha
les
pop
imul
cmp
call
fstl
mov
mov
insl
mov
mov
rclb
stos
ror
mov
mov
pusha
mov
lret
cs
cli
xchg
fimuls
jp
xchg
mov
jecxz
inc
pop
dec
cs
in
faddl
mov
shl
lea
ret
cmp
fs
gs
mov
inc
movsl
repnz
les
and
and
out
and
test
mov
xchg
out
push
ja
cltd
jge
jg
add
sahf
jg
sbb
jbe
or
cmpsb
pop
insl
jo
inc
adc
pop
mov
xchg
sbb
andl
ret
movsl
mov
add
ret
inc
mov
outsl
out
sub
and
sub
fldenv
jmp
sub
sub
sahf
js
mov
jno
sbb
out
pusha
out
jle
mov
ljmp
lods
divl
or
lods
testb
sub
xchg
cmpsb
outsb
and
pushf
sbb
or
rcrl
jecxz
jmp
pop
xchg
cmp
insb
stc
arpl
dec
repnz
push
jns
xchg
out
insl
loopne
xor
aad
mov
xchg
mov
mov
test
sbb
push
push
call
lea
xor
mov
and
insb
hlt
push
mov
sub
sub
stos
loopne
ret
negl
mov
in
das
cmp
adc
sbb
push
daa
clc
mov
das
jmp
enter
and
or
out
daa
addb
mov
inc
bound
ss
add
rorb
pop
fidivs
hlt
mov
inc
jle
xor
jmp
ljmp
es
adc
pop
pop
lcall
pop
jg
jne
ljmp
out
jb
mov
pop
vshufps
mov
repz
xor
testl
inc
adc
push
in
cli
out
and
ret
inc
arpl
fmull
jle
aaa
push
or
fs
xor
and
inc
idiv
xor
arpl
xchg
jle
jmp
or
jg
adc
sti
clc
outsl
cli
lods
mov
adc
iret
cwtl
mov
divl
pop
fidivs
add
sbb
adc
cmp
popf
dec
insb
test
xor
mov
dec
jbe
adc
xor
addb
sahf
je
and
jo
add
mov
shlb
out
jecxz
mov
push
ret
push
jbe
icebp
inc
cmp
stos
test
cmp
mov
pop
shll
dec
sti
cmp
jecxz
out
inc
push
pop
mov
pushf
cmp
jmp
fidivrl
test
and
test
dec
rcll
sti
add
fmuls
insl
fdivs
pop
jns
jns
sub
cmpl
movl
lret
jp
dec
push
jecxz
ffree
pop
jg
push
add
adcl
fidivrs
loope
fiadds
pop
pop
ljmp
jbe
sub
js
pop
jge
out
push
inc
mov
pop
push
ret
mov
imul
jmp
xchg
adc
cmp
rcr
jmp
lds
popf
mov
mov
shrb
out
sahf
cmp
cmp
add
outsl
push
loopne
js
lret
in
ss
mov
mov
fxch
inc
test
int
jnp,pt
add
jb
lea
in
nop
inc
setns
sub
push
sub
nop
dec
popf
mov
out
ss
or
fwait
xor
scas
push
dec
pop
pop
test
mov
test
clc
mov
mov
cmc
mov
test
push
mov
test
mov
insl
dec
pop
mov
popa
push
dec
adc
testl
subb
pop
push
repnz
aas
das
lahf
cmpsb
xchg
das
and
cmp
repnz
cmp
push
lock
clc
loopne
adc
pop
sbb
sti
sbb
and
popa
xchg
lock
enter
cmp
ficompl
pop
cwtl
dec
dec
mov
dec
and
lea
inc
std
stos
sbb
mov
push
cmp
xor
inc
add
nop
xchg
inc
sbb
push
add
test
mov
andl
add
pop
jg
xor
push
xor
negb
lcall
arpl
lahf
jge
int
push
test
and
push
roll
push
cmp
jbe
sub
sub
out
push
sub
or
movsl
fldl
adc
or
loop
jne
push
sub
cmp
pop
repz
out
cmpsb
icebp
xor
push
fnsave
mov
sbb
mov
lret
inc
adc
sbb
pusha
icebp
scas
sti
cmp
adc
test
mov
lods
jge
dec
mov
xor
fistps
adc
frstor
ret
inc
inc
mov
divb
test
pop
mov
ljmp
pop
sbb
fisttpl
or
aad
cmpsl
lock
mov
out
xchg
push
stos
loop
lea
pop
or
popa
inc
outsl
insb
ss
mov
popf
pop
xchg
imul
sbb
loope
inc
movsb
sub
and
adc
xchg
cmp
test
aam
pop
mov
adc
mov
jb
or
lea
mov
nop
sub
dec
faddl
and
cmp
lret
sub
sub
mov
loopne
sub
xchg
xchg
and
dec
pop
lock
mov
jg
iret
aaa
inc
dec
adc
mov
cld
daa
aaa
and
lods
je
push
pop
mov
cmp
scas
popf
jb
callw
stc
lret
xor
pop
inc
ret
adc
dec
cmc
icebp
sub
pop
lcall
dec
jno
push
in
scas
repnz
add
mov
push
xor
push
inc
push
sub
push
ljmp
stc
xlat
mov
and
sbb
std
or
pop
sbb
mov
inc
mov
and
je
imul
dec
das
or
push
fldt
jmp
mov
iret
rorl
jne
aaa
fistpl
mov
xor
jle
or
or
pop
ss
pop
dec
push
push
jle
loopne
bswap
xchg
mov
scas
xchg
lret
dec
lret
and
push
testl
fadd
insb
mov
fwait
pop
push
ror
in
sub
out
inc
cmp
sbbb
pop
fucomp
mov
cmp
cmpsb
sub
xchg
adc
aam
xor
rcrb
orb
jns
out
push
nop
and
lods
lods
push
in
leave
jns
sub
repz
loopne
lahf
add
je
hlt
add
ljmp
movsb
mov
loope
pop
mov
dec
cs
pop
dec
scas
push
mov
or
in
push
xlat
dec
push
xchg
insb
sahf
lds
mov
dec
orl
in
ja
mov
movsb
add
dec
jo
and
repnz
dec
sahf
nop
and
xor
out
cmp
adc
movsl
sti
jae
addr16
lahf
cmpsb
or
scas
je
sti
adc
nop
out
mov
ret
sbb
sub
jns
mov
mov
rcr
mov
bound
out
pop
popa
dec
jg
adc
jmp
mov
or
or
mov
mov
and
testl
rcl
mov
testl
cmpsb
xchg
lea
add
adc
xorl
jno
mov
movsl
iret
xchg
lds
xor
cwtl
inc
jbe
sub
cld
repz
and
adc
and
insl
push
mov
lret
fnsave
xchg
or
mov
popa
mov
cmpsl
dec
and
pop
mov
or
rcrl
sbb
or
std
mov
nop
cld
es
xchg
adc
adc
mov
imul
mov
nop
mov
test
cltd
xchg
stos
dec
je
adc
or
leave
cmp
pushf
inc
cmp
push
sub
adc
cmpsb
dec
ss
xor
loopne
pop
pop
inc
push
push
out
loopne
add
jae
mov
mov
movsl
xchg
ret
sub
mov
in
aam
daa
jmp
add
mov
jno
or
test
fprem1
rcrl
sub
ljmp
popf
mov
dec
js
mov
inc
sbb
aaa
cmp
sbb
mov
cmp
sarb
push
and
sbb
inc
xor
mov
jl
jle
pop
jo
push
lahf
shlb
mov
mov
xlat
mov
sets
adc
or
ret
dec
mov
adcl
into
aaa
cs
sub
pop
inc
xchg
pop
xor
fwait
xor
in
jl
mov
adc
ja
and
popf
in
push
aaa
mov
pop
lret
ret
std
int
rcll
stos
mov
daa
fisttps
enter
aam
cli
cmpsb
pop
mov
and
je
sbb
or
sbb
pop
ret
fcompl
cmp
int
xlat
mov
les
or
adc
push
fsub
call
imul
xchg
dec
stos
mov
subb
push
and
sti
sub
popf
or
mov
popa
add
lahf
pop
cmpsl
mov
mov
jo
sarl
cmp
nop
cmp
add
int3
push
cmpsl
aas
aas
shrb
pop
xchg
imul
xchg
dec
in
ror
fbld
pop
and
jb
mov
ret
mov
jae
cmpsb
fcompp
insl
ljmp
ljmp
pop
dec
mov
sarb
shrb
xchg
and
and
arpl
add
pop
into
enter
xchg
aad
sub
push
fldcw
test
pop
push
adc
lods
sub
jo
orl
jnp
dec
ja
inc
pushf
push
cltd
sbb
inc
xor
ret
cmpl
or
sbb
scas
sub
inc
call
fstps
aaa
andl
sub
mov
rol
aaa
leave
lods
mov
sti
and
mov
cwtl
mov
add
ret
xchg
sbb
mov
xor
add
out
jae
xor
sbb
sahf
popf
aam
cmp
sub
dec
pop
pop
inc
cld
rol
je
and
xor
inc
sub
xor
andl
jae
stos
and
addr16
fdivs
das
push
xor
push
cmpl
adcl
sbb
repz
subb
adc
push
fwait
gs
xchg
add
movsb
lods
test
add
into
es
push
les
add
ds
jmp
test
add
adc
shrl
lock
aad
jae
jo
test
pop
in
push
stos
arpl
fimull
pop
adc
sub
sub
rcll
das
adc
push
adc
sub
aad
sub
ss
and
ret
xchg
lea
jle
dec
arpl
sub
call
mov
and
stc
xchg
fwait
cmp
mov
xchg
xor
pop
xchg
pop
test
rclb
xor
xchg
add
pop
mov
jb
loope
cmp
insl
or
jne
cmpsb
push
mov
jns
pop
adc
dec
test
xchg
push
fstpl
aaa
mov
push
xchg
enter
cmp
jne
loop
jg
xor
test
xchg
repz
xor
or
jg
je
add
popa
push
dec
pop
push
enter
sahf
mov
add
and
mov
pushf
adc
leave
leave
mov
lods
sub
mov
mov
enter
cmp
ss
insb
xchg
aas
jae
or
xor
popf
es
addb
push
popa
fstp
stos
test
push
dec
lcall
cltd
arpl
or
sub
ja
sub
mov
push
sub
bound
cwtl
icebp
mov
dec
jge
sbb
fdivr
mov
test
xor
add
sbb
inc
in
test
mov
iret
push
push
add
mov
mov
into
mov
inc
lods
cmp
sub
sub
cmp
int3
mov
out
inc
loopne
loop
sub
jecxz
outsb
push
mov
sbb
je
sbb
ret
cmpsb
mov
in
push
dec
and
pop
repnz
mov
pop
fcompl
xor
push
push
daa
jle
clc
push
add
mov
shll
testl
bound
xor
push
mov
loope
jp
pop
adc
xlat
fldenv
pop
inc
push
add
in
fidivrs
xor
mov
inc
ror
iret
sub
fidivrl
dec
mov
push
std
sbb
shrb
push
scas
out
test
add
xor
and
jb
jb
fstp
daa
lcall
iret
or
pop
mov
das
mov
mov
cmp
mov
cltd
shl
cli
inc
push
lahf
out
out
lret
fstps
sub
push
xor
mov
adc
cmp
sbb
shrl
jmp
sub
cmp
js
sbb
shlb
mov
or
add
inc
push
jbe
cld
icebp
pop
sbb
addr16
sti
xor
mov
sbb
inc
push
dec
cmp
adc
sub
cmc
inc
or
jl
hlt
repz
fwait
mov
std
pop
hlt
out
out
shll
and
popa
fisubl
mov
sahf
mov
fsubs
aaa
mov
cmc
xchg
and
push
imul
pop
das
idivl
ds
add
jle
subl
mov
loop
stc
dec
mov
fwait
je
sub
dec
pop
fimull
repz
loop
and
adc
push
lea
repnz
es
jp
cld
push
icebp
mov
stos
pop
sub
adc
dec
fistpl
cmp
cmc
xlat
or
mov
mov
test
out
scas
adc
fwait
cltd
hlt
push
stos
and
mov
xchg
xchg
sub
hlt
mov
stos
xor
fs
xchg
imul
mov
push
icebp
sbb
xchg
es
ljmp
nop
ja
adc
push
daa
pop
scas
sbb
adc
xchg
lds
inc
stc
or
and
je
lcall
insl
cltd
xor
in
jecxz
inc
clc
mov
and
cli
rcrb
call
popf
jg
in
leave
dec
loop
fwait
push
imul
sub
out
mov
xor
jg
cmp
jno
mov
sub
mov
cmp
jae
add
or
ret
push
jno
mov
mov
inc
inc
jns
inc
cwtl
iret
jnp
imul
push
movsl
lock
push
out
push
loope
mov
jge
lock
lods
rcrl
dec
lods
fst
xchg
lods
ficomps
inc
xor
cltd
pop
cli
or
movsb
and
fnstsw
fs
jge
rolb
fs
or
orb
push
and
scas
in
cmp
pop
push
addr16
fsubl
push
jecxz
adc
inc
cmp
push
adc
push
cmpsb
push
icebp
cmp
push
adc
jl
movl
mov
aad
mov
not
xchg
lret
jge
lret
cwtl
lret
les
jecxz
dec
iret
lods
bound
mov
orb
dec
outsl
mull
mov
popf
xchg
popf
and
xor
jmpw
mov
push
mov
inc
mov
xor
stos
out
or
sub
lods
xchg
outsb
les
mov
sbb
dec
dec
or
lahf
or
loop
add
test
add
cld
in
push
insl
es
xor
fimull
mov
test
mov
pushf
add
adc
scas
push
fsubl
cs
ljmp
loopne
jb
outsb
lds
push
push
scas
and
cltd
imul
int
cmp
insb
shlb
or
sbb
push
es
fcompl
pop
std
push
jo
cli
xchg
xor
adc
sti
repz
and
dec
mov
inc
ds
loop
dec
push
not
jg
add
jne
jbe
inc
adc
test
out
sbb
inc
out
cmp
jb
sbb
xchg
pop
sub
xchg
mov
daa
ss
mov
inc
cltd
mov
sbb
adc
das
fs
scas
jecxz
repz
inc
in
jnp,pn
stos
aam
mov
xor
dec
pushl
or
dec
div
push
aaa
jo
rolb
fdivrs
ljmp
or
jo
and
in
std
add
cmp
or
scas
or
enter
sti
and
enter
insl
push
pop
movsb
mov
dec
lcall
inc
push
in
push
sbb
shl
sahf
movsl
and
adc
lret
je
cmpsb
clc
jl
mov
notl
sbb
dec
mov
mov
lods
in
or
push
mov
mov
xor
push
mov
xchg
inc
outsb
outsl
xchg
out
je
xor
lcall
jb
nop
stc
cmp
call
jb
les
cmpsl
inc
adc
ds
ds
pop
sub
cmpsl
mov
jge
add
xchg
lcall
push
loope
xchg
dec
fbstp
adc
lcall
in
xchg
int
add
cmc
or
and
inc
adc
test
inc
dec
inc
int3
sub
aad
xchg
scas
enter
xchg
adc
fwait
ljmp
mov
in
pop
daa
pop
gs
int3
cmp
mov
pushf
sub
or
add
outsl
pop
mov
sbb
inc
or
cld
outsl
inc
fsts
cmp
pushf
push
aad
jmp
mov
and
push
jmp
addr16
sub
lods
xlat
adc
push
jae
sub
mov
dec
add
cmp
mov
fs
pop
push
dec
roll
pop
lock
shl
xlat
jne
pop
jecxz
xchg
cmpsl
add
daa
pop
inc
mov
lds
cmpsb
mov
push
into
sub
lock
xchg
hlt
rclb
in
fnstcw
not
ret
adcl
sbb
mov
jns
xlat
sub
push
mov
inc
insb
enter
out
adc
push
outsl
jnp
add
loopne
out
inc
mov
nop
xor
mov
idiv
mov
add
push
inc
inc
aad
and
inc
insl
je
jle
aam
sub
dec
loopne
push
test
jmp
pop
into
dec
shrl
rcl
outsl
mov
call
addr16
cmp
dec
or
xchg
data16
inc
xchg
push
out
out
lret
and
pop
dec
pop
cmc
xchg
xchg
les
sbb
mov
das
popf
mov
jmp
or
out
hlt
in
fistpl
lds
stos
mov
out
insl
daa
repz
test
lods
cs
test
sbbb
into
pop
dec
mov
pop
push
jae
or
mov
jo
arpl
pusha
push
jmp
mov
pop
cmpsl
dec
out
loopne
repz
das
pop
pop
pop
and
jae
data16
in
inc
into
or
sbb
push
lcall
mov
hlt
mov
dec
daa
cld
testb
fwait
xor
cli
mov
dec
in
sti
cmp
push
mov
jno
je
mov
adc
rcrb
mov
and
cmp
imull
mov
mov
test
test
sti
test
cwtl
rorl
pop
and
shll
into
mov
sahf
lods
test
mov
aaa
das
xlat
aam
gs
ja
daa
test
pop
jl
cmc
inc
and
gs
das
out
adc
or
jmp
jp
xchg
repz
cltd
jns
or
xchg
mov
xor
and
push
xor
or
out
add
call
nop
add
daa
jne
addr16
jecxz
push
imul
lahf
sub
imul
sbb
mov
dec
mov
outsl
add
pop
or
clc
mov
pop
xchg
inc
icebp
xchg
cmpsl
mov
iret
mov
mov
dec
mov
adcl
mov
jae
pop
add
or
inc
mov
mov
xor
jnp
lods
lahf
pushf
rcrb
cmp
enter
decl
in
jo
test
and
leave
sbb
lret
mov
mov
in
int3
call
inc
in
mov
ret
jg
push
or
in
pop
mov
and
je
mov
or
ja
in
lahf
popa
add
sbbl
lock
out
lods
pop
cmc
roll
and
xor
pop
or
jbe
xor
xor
mov
les
and
pop
push
lods
xchg
add
scas
dec
inc
test
xlat
jl
mov
pop
or
sahf
pop
dec
sbb
mov
loop
pop
andl
jg
ret
sub
add
jle
xchg
add
sub
das
out
mov
xor
jo
xchg
mov
test
mov
stos
lods
mov
int3
int3
movsl
cmp
fidivl
loop
pushf
push
fs
xor
push
cmpsb
lods
xchg
imul
shlb
pop
xchg
cmp
adc
mov
ds
mov
jb
test
cli
cmp
cwtl
loopne
repnz
loope
out
pushf
inc
dec
xchg
insl
push
mov
orb
jo,pn
hlt
cmp
fwait
fwait
cmc
gs
insb
xchg
or
ja
push
sahf
pop
insb
enter
cld
dec
andl
push
mov
jb
imulb
add
sbb
dec
or
push
fwait
xchg
dec
mov
call
cli
adc
addr16
outsb
int3
pop
xchg
outsb
cmpsb
jge
push
sbb
es
and
pop
and
adc
inc
ja
sbb
mov
negb
pop
push
or
stos
fwait
mov
push
mov
jecxz
jp
insl
or
roll
roll
fimull
inc
cmp
addr16
xchg
sahf
ja
adc
push
jecxz
dec
mov
mov
std
xchg
push
push
test
aaa
das
jns
and
cmc
mov
push
xchg
insb
and
adc
stos
movsb
insl
je
mov
and
xchg
mov
jne
loope
jo
lahf
dec
add
mov
pop
inc
fs
inc
xor
insb
dec
jmp
leave
lea
dec
push
sbb
out
pop
sub
ret
or
adc
cli
jne
aad
in
gs
fstpl
sbb
inc
lock
das
pop
lahf
bt
ficoml
lret
fdivrs
pushf
pop
ja
cwtl
inc
shll
mov
int
std
pop
push
stos
iret
xor
adc
les
lods
pushf
aas
mov
mov
inc
std
pop
data16
push
ror
cmp
sub
xchg
pusha
mov
push
or
hlt
xor
jno
xlat
sbb
push
rol
mov
xor
pop
jle
cmp
sbb
cs
mov
lds
movsb
shlb
repnz
cmp
xchg
test
enter
test
mov
call
not
dec
mov
or
mul
sti
push
out
mov
sub
out
outsl
testb
es
lods
inc
into
cmpsl
mov
jge
inc
sub
or
arpl
add
test
jo
cvtdq2ps
xchg
nop
push
mov
dec
out
mov
out
mov
iret
inc
pushf
inc
xchg
mov
mov
cmpsb
and
dec
cmpsl
sbb
and
add
call
cmc
das
sbb
int
pop
cmp
jl
jbe
push
xchg
mov
outsb
jp
mov
call
pop
lcall
mov
adc
add
movsl
loop
or
and
mov
sub
loope
sbb
pop
andb
popf
rclb
ret
loop
sub
mov
lock
push
adc
jbe
add
xor
lcall
or
jno
jns
shl
rol
xor
jns
jae
scas
gs
mov
fs
andl
pop
and
mov
cmp
stc
mov
pop
int3
adc
add
xchg
fs
pop
cs
dec
lret
push
stos
std
nop
leave
mov
push
insl
mov
inc
lea
mov
adc
dec
jge
call
sbb
mov
push
enter
xchg
and
push
call
je
stos
cmp
hlt
cmp
sub
mov
fildll
cmp
leave
stos
leave
popa
arpl
mov
stc
arpl
repnz
lret
hlt
aaa
idivl
ret
cli
xchg
loope
jb
cmp
push
jne
xlat
dec
aaa
cmpsl
rcll
inc
add
jne
int3
popa
repnz
push
out
repnz
xchg
jl
test
clc
jnp
addr16
inc
cmp
sub
adc
test
outsb
add
fnstsw
mov
cmp
sbb
or
test
pop
loope
pop
test
inc
sub
fcomps
fistpl
cmc
add
popl
cld
in
sbb
push
sub
dec
addl
push
mov
adc
pop
add
lahf
test
fs
roll
ret
bound
inc
mov
imul
adc
je
mov
adc
jno
jns
pop
or
pop
aad
and
xor
xchg
cs
adc
push
movsb
add
push
add
push
cmp
mov
and
sub
dec
cmc
mov
dec
out
mov
pop
push
mov
loope
shrl
lock
push
ret
and
int3
push
mov
test
jge
inc
ljmp
xor
cli
dec
les
add
mov
es
pop
jnp
add
mov
loope
js
cmc
fsubrl
sbb
test
mov
and
inc
imull
pop
mov
add
sbb
push
stos
incl
or
cli
imul
cwtl
imul
mov
add
rcll
xchg
lock
dec
test
xchg
loop
rolb
movsb
popa
dec
adc
xchg
lods
xor
fcomps
mov
sub
cmpsb
mov
gs
cld
dec
out
mov
outsl
jae
pushf
repnz
shl
mov
mov
jnp
and
jbe
pop
xchg
stos
jo
lock
pop
add
adc
jp
xor
fmulp
sbb
loop
sbb
loope
int
push
xchg
lcall
das
fnstenv
and
stos
sbb
dec
scas
xor
or
dec
jmp
das
call
into
mov
ss
addr16
sbb
stos
out
es
or
or
sbb
xchg
inc
sub
mov
xlat
add
cmp
mov
ret
sub
xor
push
movl
push
xchg
sbb
stos
scas
imul
and
inc
in
test
sub
and
in
in
in
pop
mov
int
xor
xor
loop
ss
sbb
test
mov
lds
and
adc
lret
js
ds
pop
mov
sbb
mov
js
jbe
je
cmpb
adc
negb
idivl
mov
xor
mov
pusha
aas
mov
mov
nop
hlt
adc
lcall
fsubrl
xlat
jge
or
out
sub
js
push
and
stos
lcall
cmp
daa
mov
dec
int3
sbb
and
ljmp
and
mov
inc
imul
pop
pop
fidivs
outsl
sbb
outsb
mov
mov
int3
lods
and
aas
sub
outsl
aad
in
ret
hlt
lcall
lret
pop
inc
mov
jns
pop
inc
jbe
dec
push
cwtl
cmc
mov
std
ret
pusha
sbbl
sbb
pop
xchg
xchg
pop
int
cmp
pop
pop
addl
dec
sub
push
lds
mov
cmpsl
jo
push
call
sub
test
push
daa
cmp
popf
jmp
cmp
sbb
or
dec
arpl
add
jns
scas
add
or
inc
cs
dec
mov
addr16
nop
dec
inc
dec
mov
xor
pusha
mov
insb
imul
sbb
clc
or
repnz
hlt
lods
adc
mov
mov
and
scas
xchg
jne
pop
or
pop
nop
shrl
push
jns
xchg
fcmovb
mov
dec
pop
sti
cmp
mov
scas
xchg
ja
icebp
stos
test
mov
loop
xor
mov
pop
dec
test
clc
stc
adcb
jne
add
pusha
test
aad
inc
repnz
in
lret
clc
xchg
push
add
iret
mov
aam
lods
lods
push
jmp
xor
das
in
stos
pop
jns
push
int3
jne,pt
add
mov
enter
mov
arpl
sbb
test
test
int3
push
aad
mov
xchg
mov
cmp
add
js
inc
mov
in
inc
aas
mov
clc
xchg
push
aaa
xlat
sbb
aaa
filds
insb
int
jg
push
mov
sti
subl
lock
divb
fscale
ret
fistl
jge
repz
fwait
mov
push
sbb
ficompl
into
push
cmp
test
icebp
sub
pop
pop
in
leave
or
out
scas
sar
bound
push
insb
adc
je
test
add
out
adc
nop
push
jecxz
sbb
je
loope
int
xor
int
fsts
sub
add
rcl
sub
in
and
cmp
imul
lret
scas
push
ret
imulb
mov
lods
pop
js
popf
cmp
rclb
sbb
mov
loopne
jmp
cli
or
inc
cmp
aaa
mov
jns
and
adc
jns
pusha
inc
sahf
xchg
stos
outsl
inc
adc
mov
xchg
xor
cmpb
movsl
imul
and
push
outsl
sbb
mov
cs
xor
sub
ja
or
xorb
ret
mov
fadds
pop
int
xchg
sbb
aaa
enter
cmp
shrl
mov
ljmp
jge
mov
das
xor
sub
inc
sub
lods
sbb
mov
sbbl
subb
inc
mov
sar
add
testl
scas
outsl
cltd
sbb
jle
sahf
stos
push
push
inc
fsubrl
stos
adc
adc
fmull
mov
jo
insl
sub
push
adc
xor
pushl
adc
leave
dec
jmp
inc
jbe
jl
inc
int
hlt
pop
nop
pop
pop
lret
stos
dec
xor
in
and
enter
hlt
in
cli
jne
fs
test
mov
scas
pusha
push
lea
push
add
fwait
push
jae
das
pop
sbb
push
cli
ficompl
fsts
movsb
and
sahf
loopne
fcmovnb
sahf
xchg
xor
jae
push
sub
mov
sub
je
or
leave
repz
call
push
cmp
pop
in
sahf
cs
pop
jbe
push
arpl
dec
lret
or
xor
sub
xchg
xchg
and
jo
fmul
mov
cmp
loope
add
and
mov
bound
sub
mov
into
pusha
mov
stos
cwtl
jbe
fwait
or
mov
dec
icebp
add
rol
icebp
sbb
pop
pop
mov
mov
pop
cwtl
dec
and
add
in
pop
iret
sahf
mov
es
add
add
loope
dec
data16
push
leave
fs
mov
xchg
xchg
mov
mov
mov
adc
dec
xchg
test
xchg
scas
jne
ja
and
rcll
sub
icebp
sbb
cltd
fisubrs
and
pushf
out
sbb
mov
out
mov
inc
ja
stc
pop
sub
insl
or
es
les
or
or
mov
sbb
mov
aaa
ret
shlb
mov
sbb
and
out
jg
jle
inc
aad
sbb
xor
mov
sbb
jbe
pop
inc
push
pop
dec
sub
adc
cmp
mov
sti
ficoml
pusha
xchg
adc
xchg
inc
adc
addr16
push
mov
mov
jmp
mov
mulb
push
aad
les
ret
mov
scas
mov
int
aaa
outsb
or
rcrl
rcl
push
mov
mov
cmp
and
jno
outsb
jecxz
aam
jp
sbb
lods
mov
fidivl
mov
ljmp
mov
xchg
divb
mov
push
and
mov
sbb
idivb
push
pop
xchg
sub
or
mov
pop
sbb
repz
add
test
adc
dec
fs
add
sarl
pop
pop
data16
out
push
in
cmp
test
nop
pop
stos
ds
jl
xchg
jne
cs
outsl
xchg
ljmp
shrb
in
sbb
insl
idivl
insb
jno
xchg
leave
cmp
jnp
imul
pop
sbb
fdiv
xor
aad
orb
loop
xchg
add
ror
outsb
imul
scas
or
mov
xor
loop
dec
hlt
mov
fldl
mov
xchg
lret
mov
rolb
cmpsl
out
push
sbb
into
and
jmp
je
push
lods
loope
arpl
rol
mov
and
xchg
shrb
andb
popf
push
pusha
and
dec
xchg
mov
bound
mov
jae
call
xchg
movsl
shl
cltd
push
push
pop
or
test
adcl
xchg
stos
mov
pop
or
cs
mov
jp
lahf
sub
or
push
lods
push
inc
sub
lea
mov
push
sahf
mov
cmc
stos
pop
stos
andb
and
icebp
ret
and
xor
out
jbe
xchg
jb
cwtl
mov
mov
repz
ja
stc
add
enter
leave
push
jl
xchg
fwait
pop
xor
hlt
loop
lea
dec
mov
xchg
js
lahf
fisttps
mov
xchg
jo
stos
mov
stos
pop
sub
rcrb
std
mov
ja
and
mov
adc
xchg
rcl
movsl
mov
xchg
mov
testb
inc
sbb
xor
pop
call
jbe
dec
xor
push
xchg
pushw
fildl
sub
push
and
add
or
jge
js
imul
mov
aam
adc
sub
add
lock
enter
jns
and
push
pop
test
lret
pop
push
push
ja
int3
clc
or
in
xor
xchg
jae
aas
xlat
jo
das
jle
xchg
inc
push
push
sbb
push
inc
inc
daa
sbb
sahf
int
add
cmc
pop
icebp
sti
cmpsb
or
ret
hlt
movsl
jbe
cmp
mov
rcl
xchg
xchg
or
ja
js
jb
cli
dec
cmp
cmp
push
pop
mov
jp
incb
jnp
pop
jmp
nop
xor
movsb
lods
data16
xchg
inc
push
dec
fsubs
add
dec
mov
adc
and
mov
pop
xchg
jnp
xlat
gs
cmp
add
push
push
inc
cli
push
xchg
or
cs
movsb
hlt
es
add
pop
pop
lea
jle
ljmp
lock
adc
push
lock
adc
ss
rorb
jl,pt
nop
push
push
sbb
xor
sbb
xchg
xor
bound
aas
js
aas
div
inc
mov
dec
dec
rorl
dec
xchg
push
adc
mov
xor
rolb
lahf
notl
sub
inc
xor
dec
sbb
jp
inc
dec
mov
fwait
pop
leave
mov
mov
push
pop
cmpsb
iret
ljmp
testl
pop
shl
xor
mov
pushf
cmp
sbb
es
in
adc
push
adc
fstl
testb
in
adc
xchg
ss
sub
add
and
inc
test
ljmp
mov
fldpi
dec
cmp
or
inc
sbb
cmp
xchg
flds
gs
dec
or
jnp
xchg
sbb
mov
outsb
fcom
shr
mov
aad
popa
xchg
jnp
clc
sbb
cmp
push
lcall
adc
std
cltd
push
dec
pop
or
sarb
add
sub
or
and
fldl
shll
lea
jp
pop
mov
push
sbb
adc
dec
or
xor
not
jmp
push
lods
out
scas
clc
mov
xchg
jb
jle
data16
mov
add
xchg
roll
test
mov
push
loope
daa
out
iret
pop
push
push
push
cmpsb
sbb
mov
out
ljmp
popa
enter
cmp
in
fisttpl
mov
popa
rorb
enter
xor
clc
cs
js
out
inc
lods
xchg
push
loope
mov
shll
arpl
sub
mov
mov
sub
imul
addr16
cmp
jae
les
pusha
movsb
loopne
mov
jno
jmp
xor
inc
cmp
add
wrmsr
mov
dec
or
mov
inc
out
dec
popf
inc
inc
loop
test
dec
aam
sti
sbb
imul
loopne
jnp
push
sub
add
lods
and
fsubrp
pop
sbb
pop
stc
or
mov
or
push
mov
and
cmp
inc
out
sub
fstpl
sbb
or
pop
or
xchg
cmpl
sbb
add
out
addr16
cmpsl
lret
or
fcomps
jmp
inc
and
es
movsb
sub
jmp
mov
mov
cmc
test
pop
inc
push
inc
std
jo
jbe
loop
sbb
xchg
xor
cld
and
cwtl
dec
fwait
xor
rorl
sbb
iret
insl
repnz
xchg
popl
sbb
rcrb
dec
divl
out
shrl
jae
mov
testl
movsb
inc
ret
push
push
adc
jns
push
out
sub
pop
adcb
mov
xchg
xor
jns
lahf
js
cmp
mov
pop
or
jle
adc
aaa
and
out
sbb
lods
stc
jecxz
les
fs
adc
or
push
mov
ss
xor
lds
adc
popa
imul
add
lret
les
mov
xor
or
fmuls
test
jle
jmp
xchg
push
pop
lcall
mov
adc
cmpsb
sbb
loopne
stc
leave
xchg
imulb
fdivrl
sbb
jmp
out
ret
xor
fs
lret
scas
mov
mov
stc
mov
aam
nop
and
orb
and
cmc
nop
pop
sub
dec
mov
pop
imul
inc
xchg
stos
mov
cltd
push
mov
ja
and
xor
addr16
mov
ret
xchg
jl
adc
or
push
pop
std
sarl
jb
lahf
sub
push
test
cld
dec
xor
push
xor
mov
rorb
dec
in
jle
repz
bound
lret
movsl
or
fisttpl
in
push
mov
fbstp
adc
out
test
ljmp
mov
sbb
or
or
out
xchg
and
test
push
aaa
push
jnp
enter
mov
sbbb
ss
mov
mov
es
add
daa
push
adc
push
jb
icebp
icebp
jl
push
pusha
sub
cwtl
repnz
repnz
dec
mov
inc
push
ja
xchg
jp
mov
movsb
cmpsb
ljmp
xor
stc
cmp
test
fcompl
fidivl
or
cmp
add
jge
inc
lods
lcall
cmp
into
cwtl
and
sub
insl
icebp
scas
cmp
mov
fs
jl
sarl
push
mov
mov
popf
sub
cmp
shrb
mov
sbb
add
imul
xlat
adcl
and
das
sub
cmpsl
jecxz
mov
into
outsb
xchg
cmp
sarl
xor
ss
aas
mov
addr16
mov
or
fcompl
jge
cmc
adc
stc
data16
test
push
cmp
fdiv
idiv
mov
adc
mov
jle
ja
push
divb
adc
aad
scas
pop
dec
sub
xor
mov
jg
mov
push
fcoms
mov
cmc
inc
rorl
aas
sub
mov
shlb
imulb
sbbb
jp
ds
jmp
push
int
out
push
test
ficomps
jbe
push
insb
push
sub
jno
fldenv
fnstenv
push
sub
push
int3
popf
jge
or
aaa
sti
stos
in
jg
dec
sub
popf
scas
xlat
clc
adc
sub
mov
orb
xchg
pop
xchg
in
not
in
jno
fsubr
dec
jge
pop
jns
cmc
adc
jmp
push
lock
lret
out
in
mov
loope
gs
and
nop
push
sbb
insb
hlt
sbb
ret
sub
les
call
dec
arpl
dec
fs
cli
adc
fs
adcl
insb
push
insl
push
leave
mov
xchg
imul
fwait
mov
dec
jne
xor
out
cmpsb
sub
fmull
inc
jl
jbe
jo
jge
dec
pop
mov
or
sub
mov
xlat
cmp
sbb
mov
mov
cmp
add
mov
adc
nop
rorb
mov
mov
jmp
in
push
mov
fsubrs
test
sub
mov
outsl
adc
and
mov
xchg
jb
xchg
jle
push
mov
mov
mov
ja
push
out
xlat
jae
cmpsb
lcall
dec
adc
fst
and
dec
fs
pop
loope
dec
repz
sbb
or
aad
xchg
int3
push
inc
mov
mov
and
jbe
push
ret
mov
mov
cmc
cs
dec
inc
test
repz
int
lahf
int3
jns
sbb
jp
jg
imul
or
or
adc
xchg
mov
jmp
inc
stos
lcall
orb
push
lock
test
add
jae
xchg
stos
adc
xor
popf
inc
inc
hlt
and
or
sarl
push
sub
or
data16
pop
xchg
cld
inc
push
das
enter
out
lods
repnz
test
lods
add
decl
pop
inc
adc
fcomip
jmp
ss
movsl
xchg
jl
pop
sub
jne
pop
pop
iret
nopl
outsl
push
push
push
inc
ja
jbe
fsts
in
dec
mov
test
push
lods
movsl
imul
jmp
sub
adc
fs
stc
std
inc
inc
pop
sub
dec
jo
xchg
into
mov
adc
pop
xchg
pop
out
ficompl
addl
pop
mov
outsb
lret
xor
imul
xchg
das
stc
sbb
inc
mov
cmpsl
lea
pop
outsl
in
out
leave
cmp
xchg
pop
sub
fcmovnb
jle
sub
adc
sti
js
ds
mov
pop
inc
mov
xor
push
out
jmp
popa
fnsave
clc
dec
mov
int3
scas
cmpl
jg
es
mov
push
add
mov
test
mov
jbe
lock
stos
fsub
push
mov
je
dec
adc
cmpsb
xchg
sti
inc
add
pop
popa
add
xchg
es
inc
leave
stc
xor
sahf
and
jne
adc
jns
cmp
rcrl
cmp
or
aas
insl
es
fidivrs
pop
mov
jp
mov
mov
pop
insl
cs
lret
cmc
clc
xchg
jmp
mov
jne
sahf
mov
mov
test
js
push
stos
das
inc
aas
je
mov
mov
es
jb
sbb
insb
lea
pop
cmp
sub
xchg
jl
xlat
mov
or
push
adc
mov
rorl
in
outsb
scas
xor
sub
adc
fisttps
push
ret
in
outsl
sar
push
cltd
js
jo
out
xor
pusha
dec
mov
inc
cld
xlat
in
shll
jae
push
leave
data16
pop
out
out
adc
fsubrl
mov
rcll
lea
xchg
or
fstpl
insb
inc
fwait
addb
lds
out
xchg
cli
call
pop
lea
mov
inc
fcoml
adc
pop
dec
mov
outsb
jnp,pt
sub
adc
arpl
jecxz
jb
daa
push
ret
aas
incb
stos
loopne
dec
loopne
add
sub
sbb
pushf
sub
add
imul
mov
add
adc
ret
fbld
test
aam
aaa
and
dec
loopne
or
call
mov
adc
paddq
jle
adc
int3
inc
stc
cmp
fldl
outsb
jmp
xchg
in
pop
push
popf
mov
push
test
xchg
arpl
jne
test
popa
cmp
int3
sub
ret
xchg
mov
and
adc
push
hlt
shrl
imul
mov
movsb
data16
jb
jle
dec
mov
insl
movsb
add
xor
mov
icebp
loopne
push
mov
pop
jae
call
pop
sbb
not
mov
enter
clc
sbb
das
insl
dec
pop
push
fidivrs
mov
jne
fadds
lock
mov
xor
sub
imul
sbb
insb
in
xor
inc
xor
imul
int3
or
into
imulb
sbb
out
mov
outsl
aas
fs
mov
gs
rolb
push
adc
arpl
movsb
aad
and
mov
nop
adc
fidivrs
mov
movsl
aas
lahf
lcall
rcrl
add
pop
mov
sbb
sbb
outsl
ljmp
dec
sbb
lcall
mov
ljmp
xor
mov
sbb
loopne
push
and
xchg
xor
cmp
jno
outsb
jnp
cli
mov
imul
mov
int3
push
jns
cmp
jp
and
fwait
pop
add
icebp
jmp
push
js
popa
push
mov
and
pop
xor
call
shll
mov
shll
repz
lahf
call
xchg
movsl
movsb
into
inc
jbe
int
into
movsl
sbb
xor
addl
lds
insl
pop
add
inc
mov
cmpl
add
divl
cmp
aad
sub
jns
mov
mov
adc
or
orl
xchg
ret
test
shlb
stos
sub
lods
mov
or
xor
xchg
test
xchg
inc
jmp
and
test
ret
ja
xor
push
jne
sbb
stc
cmpps
bound
cmp
pop
pop
inc
mov
push
fs
push
orb
cld
add
jbe
mov
je
pop
jne
roll
outsb
add
cwtl
inc
adc
fistpl
push
ss
jns
jns
test
ret
shll
inc
in
add
ss
pop
adc
add
icebp
data16
leave
or
addr16
sbb
fcmovb
xor
pop
scas
mov
repz
popf
xchg
jne
pop
out
mov
gs
push
add
inc
das
jecxz
pop
push
aaa
xchg
dec
insl
das
sbb
sbb
les
pop
fidivs
sbb
jo
imul
daa
femms
jb
stos
dec
push
jbe
pop
out
nop
in
push
subl
test
pop
loopne
popf
icebp
rorl
jno
jno
mov
lret
ret
pushf
fmuls
lahf
lcall
push
addb
sahf
ds
dec
or
jnp
adc
nop
aam
jo
inc
add
shr
mov
pop
sub
jo
dec
xor
idivb
or
es
push
cmp
sbb
aaa
mov
pop
xlat
add
and
pop
test
cmpsb
xor
sahf
fwait
inc
notb
sub
lods
scas
insb
into
xchg
js
mov
lcall
mov
pushf
test
cwtl
mov
sub
out
nop
cmpsb
outsb
inc
lods
xchg
add
mov
jg
ret
movsl
inc
sti
jns
push
and
std
jmp
push
stos
push
pop
add
cmp
jae
scas
leave
movb
rolb
xchg
popa
mov
in
test
mov
mov
sub
adc
ficoml
mov
lahf
or
mov
lea
mov
push
in
sub
mov
pop
stos
addr16
mov
pop
scas
fs
xchg
imul
adc
or
sub
js
sub
mov
inc
pop
stc
mov
out
push
mov
loopne
mov
mov
adc
push
add
jmp
and
cmp
or
inc
push
cmp
jecxz
cmc
xchg
mov
inc
mov
cmpsb
ja
int
cmpsb
sub
bnd
data16
mov
mov
jae
jns
out
fistl
std
lret
bound
inc
xchg
das
icebp
dec
dec
or
adc
adc
mov
dec
shr
clc
ljmp
test
xor
sbb
lds
mov
icebp
insb
add
dec
shlb
pop
xchg
popf
jnp
pop
dec
lret
jmp
js
mov
adc
packsswb
dec
pop
in
cli
ret
rcrl
test
push
aad
adc
or
stos
push
fimuls
int3
hlt
sahf
mov
pop
movsb
inc
lods
ljmp
adc
lods
xchg
lahf
xchg
push
adc
das
mov
dec
cmpsl
out
or
sub
jno
mov
adc
xorl
push
xchg
dec
fst
ja
mov
hlt
outsl
xor
mov
add
inc
aas
pop
and
mov
mov
mov
xor
insb
jb
ret
jecxz
pop
sub
mov
mov
cmp
jmp
loopne,pt
jb
xchg
int3
xchg
in
dec
insl
shll
mov
icebp
rolb
fwait
pop
push
cmp
push
and
or
arpl
stos
xor
call
adc
fistps
ljmp
fwait
movsb
lods
mov
subl
movsb
enter
push
popf
dec
add
loope
add
cmp
jmp
imull
stos
test
gs
mov
pop
pop
sub
loope
pop
ja
lahf
sub
jle
mov
pop
ja
mov
mov
test
xlat
jmp
inc
push
clc
jl
mov
out
test
mov
inc
xorb
aas
or
es
adc
mov
cmp
rclb
push
out
mov
dec
xchg
das
sub
push
lods
cmovo
pop
ficoml
push
je
sub
mov
psllw
fnsave
les
int
fs
repz
cmpsl
stos
push
push
cmp
push
loopne
sub
mov
sbb
insl
std
jl
cs
clc
xchg
xchg
int
adcl
inc
clc
sarb
push
sbb
and
shr
lock
ret
mov
call
call
xorl
popf
mov
or
xchg
dec
daa
popl
repnz
mov
out
insb
mov
or
mov
cltd
xor
push
cs
add
je
mov
add
mov
mov
sub
icebp
xor
data16
cmp
fistpll
mov
sahf
mov
in
mov
mov
outsb
inc
dec
scas
jae
js
ds
clc
jae
push
mov
test
ret
stos
mov
test
xor
jp
sbb
mov
popa
mov
clc
out
inc
stos
out
or
cmpsl
loopne
add
ja
cmp
lock
push
sbb
push
shlb
add
rorl
xor
add
testl
jle
call
xor
push
jb
test
pop
and
das
jo
xlat
push
xchg
xchg
inc
xchg
jmp
outsb
aam
pop
cmp
lahf
stc
pop
mov
lea
rorl
in
out
xor
ret
js
imul
fildl
push
dec
mov
pop
int
imul
test
add
scas
mov
sub
loope
xor
lea
pop
add
inc
xor
or
push
in
jns
push
or
fsubrp
and
out
push
mov
lock
cli
xchg
push
pop
mov
push
xchg
cli
jmp
fcoml
movsl
fdivrl
sub
or
mov
add
or
in
test
cmp
shr
repnz
or
je
add
mov
bound
xchg
pusha
repz
mov
fistl
jb
cmp
and
xchg
in
pop
lret
mov
and
dec
sbb
pop
cli
insb
jp
les
jnp
xchg
je
repnz
sarl
xchg
test
inc
les
inc
sbb
mov
inc
pushf
jle
jmp
negl
sbb
arpl
jmp
lds
out
adc
add
out
cmp
scas
bound
mov
xor
popf
dec
mov
in
addr16
add
movsl
loop
cld
sbb
push
insl
sub
fsubrl
aaa
lea
orb
or
pop
xor
nop
adc
rclb
xchg
dec
movb
dec
mov
sbb
push
push
arpl
fdivl
dec
imul
push
jmp
sti
xchg
stos
es
xor
ja
dec
lds
scas
leave
inc
push
loope
lret
push
ljmp
push
fcom
outsb
dec
inc
xchg
pop
and
mov
scas
movsl
adc
imul
testb
cmp
jecxz
mov
addr16
inc
mov
fsubp
push
pop
mov
mov
or
lret
outsb
adc
adc
data16
sub
adc
sti
les
mov
fstps
jge
and
sub
dec
out
out
xchg
xchg
sbb
repz
lea
fstl
cmp
mov
sub
cmp
cli
insl
xchg
add
fcomi
loopne
jno
jno
mov
lret
cltd
pop
xchg
jnp
dec
packssdw
testl
orl
mov
cmp
mov
sub
and
cs
xor
int3
repz
test
into
push
and
mov
and
mov
mov
push
jnp
push
adc
or
add
jecxz
les
dec
mov
dec
jmp
outsl
leave
inc
inc
dec
cmp
mov
push
scas
jns
shll
lods
dec
and
jge
pop
push
rolb
dec
pop
test
js
cltd
stos
imul
loope
cwtl
mov
hlt
pusha
dec
mov
sbbb
xor
xchg
pop
rorb
jg
dec
push
mov
out
add
rcr
sarl
jmp
mov
xor
add
pop
repz
call
adc
addr16
adc
addr16
stos
sub
decl
jle
pop
cmp
mov
jmp
pop
inc
lock
fidivrl
in
xchg
mov
cwtl
test
sbbl
adc
incl
cli
rcrl
pushf
pushf
jge
mov
xchg
scas
jp
sbb
cmp
mov
jb
clc
loop
pop
pop
sub
andb
jo
movsl
insb
or
dec
pop
dec
mov
xchg
xor
and
push
jo
dec
sub
call
or
xchg
fwait
shr
adc
in
and
xor
xor
ret
test
ret
xor
adc
sub
stos
cmpb
ficompl
or
dec
xchg
and
dec
push
aad
out
fsubl
pop
xchg
loopne
nop
dec
or
mov
int
shll
dec
in
mov
xlat
or
pushl
aam
rorl
stos
dec
xor
pop
pop
lds
lods
cmp
movsb
add
jns
sti
push
out
add
loopne
lcall
stos
pop
into
xlat
in
sbb
loopne
test
gs
sub
add
pop
inc
fs
lcall
jne
lret
xchg
xorl
mov
arpl
cmpsb
pop
cwtl
dec
sub
jno
das
int
mov
mov
mov
mov
add
mov
out
xchg
rclb
lea
stos
dec
xchg
aaa
pop
enter
xor
sarl
lock
inc
vmwrite
shlb
insl
into
inc
pop
or
sahf
cmpsl
jge
in
aaa
lods
fcmovb
cmovge
dec
mov
jg
inc
int3
scas
test
insl
and
loope
and
out
adc
inc
call
sahf
ljmp
lcall
cmpsl
pop
jno
mov
repz
leave
sti
or
jg
scas
das
testb
int
nop
mov
dec
in
mov
cwtl
test
les
sbb
adc
push
adcl
xchg
mull
push
pop
sub
xchg
rolw
and
in
lea
mov
jo
mov
jmp
adc
mov
popa
jnp
xchg
xor
test
in
lock
outsl
mov
addb
lods
sbb
xlat
inc
xor
jns
add
lahf
pop
imul
loope
or
xchg
sub
movl
ss
stc
inc
inc
or
sub
sbb
dec
data16
dec
bound
add
repnz
pop
xchg
out
sbb
sub
jbe
mov
push
jae
fsts
push
mov
mov
inc
mov
insl
bound
jb
in
or
push
push
xchg
xor
arpl
sub
mov
and
shl
mov
pop
insl
xchg
rcrl
ss
pop
sbb
pusha
in
loopne
ja
frstor
mov
aad
xor
pushf
push
mov
jg
jp
inc
adc
jno
cltd
lods
push
jo
mul
sbb
imul
xor
not
cmp
and
xlat
sti
cmpsl
inc
cmp
cwtl
imul
dec
add
sbb
rclb
loop
cmc
arpl
pop
inc
mov
mov
ret
ds
xchg
inc
sbb
jmp
sarb
and
inc
xchg
push
jbe
sub
or
rcrb
iret
jg
push
mov
add
test
sbbl
and
sub
inc
out
dec
sbb
lea
push
xor
dec
in
outsb
add
mov
fwait
cmpsl
add
add
xchg
xchg
dec
fmull
push
xor
adc
das
neg
or
inc
and
hlt
fcmove
sbb
lret
xchg
mov
mov
fcmovnbe
mov
add
out
loop
frstpm(287
cmp
in
cmp
jnp
sti
cmpsb
ret
out
hlt
scas
adc
add
das
xor
xlat
ja
sub
outsl
mov
mov
fwait
shll
jae
leave
lds
aaa
int
and
das
xchg
inc
xor
cmp
pop
pushf
sub
sub
add
inc
sbb
ret
xlat
fnstenv
push
ljmp
push
mov
jle
xor
and
fsubrl
lds
sub
pop
xor
out
lret
aad
aam
inc
sub
xor
inc
xchg
out
pop
mov
out
pop
fistl
aas
mov
dec
sbb
in
test
ljmp
xchg
pop
arpl
xchg
adc
sbb
in
sbb
mov
imul
cmp
into
inc
je
jbe
inc
movl
inc
divb
lea
sbb
push
stos
in
mov
shll
xor
jmp
std
std
inc
or
or
mov
mov
leave
lds
sbb
sarl
das
push
jb
movsb
and
add
out
addl
cld
xchg
xchg
pop
addb
loop
jmp
inc
addr16
clc
jg
sbb
clc
sub
sti
imul
pop
push
xor
mov
fwait
inc
lods
ror
inc
aad
cmp
loopne
out
or
push
xchg
pop
stos
mov
mov
sti
sub
adcl
pushf
test
sbbb
adc
arpl
xor
lock
xor
dec
and
fwait
xchg
pop
xor
push
imul
jg
outsl
mov
add
pop
leave
inc
sub
inc
out
fcmovnbe
in
lahf
mov
jle
pop
lds
insb
jecxz
jo,pn
lret
sub
adcl
add
rcr
fstpt
dec
and
xor
inc
clc
rorb
test
aas
jecxz
sub
lahf
xor
shll
push
add
gs
push
insb
pop
ret
cmp
in
jo
push
adc
cld
dec
cmp
xchg
outsl
mov
ljmp
cmpsl
adc
push
sarb
movsb
and
dec
xchg
leave
aas
int3
sub
in
sbb
push
xor
aad
aam
mov
in
cli
ret
ficoml
fidivrl
jnp
jo
movsb
pop
xchg
addl
xchg
xor
fucomi
mov
xor
pop
movsb
dec
dec
incl
cmp
inc
cmpsl
popf
sub
dec
frstor
flds
mov
push
sbb
in
mov
aam
dec
fnstenv
sub
and
inc
ret
sbb
or
bound
repnz
mov
inc
push
imul
dec
rol
mov
mov
add
ja
cmp
push
adc
in
jg
insb
lret
mov
xor
mov
mov
dec
js
or
fdivp
arpl
pop
std
gs
std
jmp
sub
les
sahf
call
sbb
sub
ja
pop
pop
leave
inc
dec
mov
push
test
mov
xor
sbb
mov
stc
push
jl
mov
add
xlat
inc
xor
daa
dec
hlt
jo
and
arpl
insl
or
pfmul
mov
sar
lret
sbb
xor
jo
lea
movsb
mov
xor
push
movsb
test
dec
mov
mov
jae
cmp
pop
insl
jmp
imul
cmp
xor
push
test
jnp
lock
xorb
jbe
test
xchg
das
jno
mov
mov
mov
or
mov
inc
or
mov
pop
loope
and
cli
mov
sub
lea
ljmp
xchg
push
or
mov
cmpb
icebp
xlat
stc
jne
mov
push
lcall
std
push
or
push
inc
inc
mov
jnp
and
test
and
decb
iret
pop
pusha
mov
leave
mov
and
fistps
push
ret
push
jecxz
dec
and
jg
lcall
or
add
xor
push
cmpsb
and
sbb
imul
xchg
pusha
lods
jo
xchg
lea
daa
sub
rclb
out
insb
insl
jno
movsb
cld
in
mov
adc
ss
add
rclb
ficompl
xor
imul
ja
cmp
jnp
repz
cmpl
das
pop
inc
out
test
mov
les
inc
push
inc
je
pushf
lock
mov
ror
pop
cmpb
jae
fwait
adc
fdivs
xchg
int3
cmp
sbb
xor
shlb
inc
mov
into
cmp
xor
dec
pop
adc
jmp
dec
imul
arpl
sahf
push
cmp
fwait
iret
lret
dec
jb
jge
dec
pop
lahf
fidivrs
shlb
cmpsb
cmpsb
sub
cmp
cmp
mov
push
inc
push
sub
mov
ja
test
mov
in
push
addr16
mov
enter
imul
push
or
orb
inc
scas
repnz
cmp
or
mov
js
mov
not
or
sub
test
sub
push
xor
mov
pop
shlb
fdivrs
ficompl
mov
into
push
aas
cltd
ds
adc
jl
in
mov
sub
repnz
shlb
fiadds
adc
push
mov
les
insb
pslld
clc
or
lahf
mov
cmp
in
dec
cmp
mov
aaa
aaa
clc
add
call
decl
ret
or
push
lods
xlat
and
pop
sbb
popa
movsl
cmp
sti
pushf
aas
pop
rolb
mov
out
ret
fcomps
jb
sub
inc
int3
loop
adc
icebp
addr16
xorb
push
fcoms
sub
adc
dec
mov
rcl
cmpsl
in
dec
insb
pusha
mov
sbb
pushl
stc
je
fstps
xchg
cmc
pop
xchg
gs
js
xchg
scas
fisubrl
aas
arpl
mov
sbb
pusha
clc
mov
jle
cli
mov
loope
or
jbe
jg
lret
in
add
push
add
sti
dec
repz
jae
inc
rcll
rcl
cmp
mov
je
push
test
push
ja
ret
push
adcb
data16
adc
rcrb
imul
push
int
jbe
sbb
clc
jbe
dec
pop
rclb
and
lock
sub
sahf
test
fwait
cld
jns
jl
sti
jge
push
push
cmp
add
push
cmp
ljmp
sbb
popa
std
xchg
mov
mov
adc
sbb
fidivrs
jno
aad
in
inc
jb
and
ja
divb
xor
adc
jmp
inc
cmpsb
mov
lret
push
leave
andb
xchg
push
cli
sbb
pusha
sub
sbb
dec
push
or
and
cmp
push
das
cmc
inc
cmp
outsl
sub
out
jns
lret
and
out
mov
mov
mov
or
stos
jno
mov
stos
outsb
xor
pop
cwtl
iret
push
div
dec
mov
dec
jns
jb
jl
imul
cmp
dec
ds
or
push
push
xchg
ror
pop
mov
mov
fs
xchg
inc
xor
adc
fimuls
adc
ret
dec
cmp
inc
addr16
mov
sbb
mov
cld
pop
cltd
xchg
in
rcrb
jno
ds
mov
push
or
xchg
pminsw
and
out
call
je
xchg
les
faddl
add
jmp
and
out
adc
xchg
test
je
mov
or
jge
jmp
push
shlb
nop
fistl
sahf
xor
and
ljmp
mov
jge
out
pop
repnz
insl
sahf
cmpb
xchg
sahf
int
or
in
faddl
or
add
and
and
or
jl
test
fcompl
or
xor
pop
stc
cmpb
add
mov
cmp
sub
sub
and
repz
or
sbb
gs
sbb
jbe
das
cld
mov
push
add
adc
sbb
std
jmp
loopne
nop
pop
cmp
in
repnz
bound
rol
or
cmpsb
in
cmp
push
add
pop
sub
pop
scas
fcmovu
mov
into
cmp
lret
call
xor
xchg
imul
mulb
mov
addr16
repz
mov
push
in
cmp
enter
push
jp
xor
cmp
jle
push
adc
arpl
mov
imul
mov
lods
scas
sub
mov
pop
aaa
lret
xchg
push
lret
and
int3
mov
fwait
ret
add
or
inc
mov
add
push
rcll
sub
stc
cltd
xor
or
bound
dec
in
stos
jno
push
int3
push
outsb
imul
clc
add
jg
sahf
nop
cmp
enter
test
inc
std
add
jns
adc
mov
add
shlb
mov
stc
add
jmp
test
jbe
xchg
loop
xor
cmp
lods
bnd
push
cli
dec
out
sbb
jns
push
jae
dec
sub
stos
insl
imul
in
mov
hlt
sbb
sub
pop
out
shll
lods
pusha
cli
out
and
popa
sub
in
dec
shl
in
mov
int3
stos
nop
repz
movsl
xchg
loope
aas
popf
cld
adc
mov
mov
fnsave
mov
lods
imul
inc
cmpsl
inc
jg
inc
sbb
dec
push
leave
push
jo
push
gs
mov
in
cmp
mov
imul
jo
popf
xor
and
xor
out
mov
cwtl
mov
inc
stos
adc
xor
push
cwtl
xor
mov
dec
outsb
sub
aad
jp
sbb
sub
cmp
scas
push
pop
jne
loope
stc
add
jae
mov
adc
inc
xchg
jae
sahf
cmpsb
je
aas
popf
test
insl
sbb
fnstcw
shr
inc
loopne
adcl
push
and
adc
jb
cmp
insb
mov
xchg
pushf
out
das
jnp
pusha
xchg
pop
jne
push
mov
adc
lock
dec
imul
lret
xchg
dec
mov
lcall
mov
jns
mov
bound
mov
mov
xchg
inc
lea
clc
daa
sahf
push
call
push
cmpb
lock
jg
js
or
jg
mov
movsb
fidivs
sub
pop
xor
adc
inc
jg
js
movsb
leave
xchg
cli
push
out
push
test
rclb
cwtl
std
in
jge
rolb
pop
dec
call
and
aam
shr
jns
cs
xor
dec
dec
nop
mov
add
jae
jne
jo
stc
repz
xchg
xchg
sti
rcl
sbb
xchg
not
fidivs
mov
pop
xchg
cs
into
xchg
jmp
inc
imul
pushf
pop
mov
outsb
stos
adc
out
jl
cltd
mov
sub
fiadds
sbbl
mov
cltd
add
add
pop
lds
rcl
test
push
sbb
pop
mov
icebp
stos
or
test
mov
sarl
loop
mov
dec
movsl
fldt
jns
or
out
ret
dec
test
and
push
and
loopne
xchg
bound
aam
push
sbb
cmc
lret
aam
call
out
push
les
sub
mov
xlat
fcoml
push
js
fwait
stc
popf
fisttpl
xacquire
stos
push
and
nop
addr16
aaa
push
repnz
push
lret
jns
jno
jnp
bound
jmp
fisubrs
or
add
in
popa
cmpsb
mov
or
pushf
aam
mov
ds
cmp
andb
jbe
sub
add
leave
pop
adc
sbb
fbld
arpl
push
inc
fwait
sub
sub
add
push
dec
sub
mov
fisubs
xor
out
ret
aas
fcompl
neg
test
add
lods
push
test
ds
in
std
rcrl
fs
mov
mov
lahf
out
or
imul
imul
aam
push
insb
leave
ds
int
std
lcall
dec
pop
out
clc
psrad
dec
adc
mov
movsb
pop
xor
in
subl
inc
mov
adc
mov
dec
je
xchg
sbb
repz
xchg
lea
mov
dec
jno
or
cmp
sub
xchg
lods
lods
mov
xor
pushf
and
repnz
jp
pop
xor
jbe
out
add
les
adc
pop
notb
loope
fsub
bound
mov
jl
ljmp
mov
sub
adc
inc
sbb
push
or
dec
pop
sub
cli
popa
push
mov
jg
cmp
fsts
inc
pop
fisubrl
pop
mov
push
xor
aaa
mov
mov
jmp
mov
js
jb
test
shll
and
lea
rolb
push
iret
mov
mov
xor
out
xchg
insb
daa
outsl
mov
push
pop
in
sar
outsb
mov
int3
inc
inc
nop
insb
pop
fyl2xp1
decb
outsb
ja
insb
cwtl
jo
or
jmp
jmp
sahf
ss
pop
jp
xchg
mov
jg
pop
inc
in
out
xchg
dec
jae
out
inc
adc
das
je
lret
push
mov
xchg
xchg
in
dec
or
cmc
test
inc
js
dec
mov
lds
cltd
imul
and
shl
imul
mov
mov
pusha
cmpsl
mov
lods
leave
gs
push
fs
xor
leave
xchg
xchg
daa
dec
ss
into
xchg
and
xchg
test
cmp
add
dec
push
or
inc
stos
into
in
aas
push
mov
mov
mov
and
enter
jne
inc
fistpl
jecxz
push
std
loope
in
cmpsl
jae
pushl
pusha
fxch
addr16
mov
adc
push
push
fs
call
pop
sub
jne
lret
sub
mov
js
cmp
mov
fsubrl
mov
mov
sbb
inc
int
pop
pop
jg
mov
fisttpl
mov
outsl
xchg
lret
mov
inc
iret
movsb
and
mov
dec
fld
xor
hlt
std
dec
sti
cmp
test
adc
cld
repnz
enter
nop
lock
jp
fwait
inc
repz
and
loop
inc
test
sarb
or
mov
mov
mov
pop
aam
or
adc
jns
fcmovnb
mov
insl
sbb
insl
push
xchg
dec
adc
insl
jle
enter
jl
ret
pop
cmp
pop
add
jns
in
xor
or
inc
push
jl
daa
imul
pop
repnz
out
dec
dec
mov
aam
fdivr
add
pop
lret
daa
dec
scas
xorl
xchg
ja
je
rcrb
sbb
and
sub
ja
xchg
xchg
movsb
cmp
imul
stos
pop
xchg
stc
lret
xchg
movsl
scas
lret
jns
pop
xor
xchg
jno,pt
xor
das
lds
cmpsb
jp
dec
scas
xor
sbb
stos
xor
jl
lock
sub
add
imul
int
or
inc
sub
mov
imul
jl
ds
or
sbb
xchg
loope
orl
loop
inc
fisttpl
movsl
jns
and
add
xchg
xchg
sbb
sahf
jge
ljmp
dec
out
out
mov
pop
mov
and
sub
and
push
pop
mov
add
ss
adc
sbbl
dec
bound
adc
filds
jns
test
push
cmp
lcall
jo
push
jb
jl
stc
xchg
test
repz
pop
notb
ja
adc
push
mov
pop
and
mov
xchg
testb
mov
rclb
fsubrl
or
movb
mov
mov
pop
pop
in
push
leave
xchg
test
push
mov
xchg
stos
lock
mov
sub
call
pop
ja
sti
fs
xor
lods
clc
adc
test
and
addr16
inc
mov
ja
rclb
jne
ds
jmp
xchg
ret
leave
or
out
cmpsb
into
icebp
popa
out
sub
mov
fs
pop
sbb
push
mov
lods
sub
mov
pop
insl
mov
cmp
push
rcl
decb
sbb
ljmp
icebp
pop
lods
sbb
cwtl
int3
out
mov
test
mov
or
jecxz
xchg
mov
mov
push
int
movsb
mov
pop
inc
inc
lods
mov
fsubrl
add
jo
roll
pop
scas
inc
stos
out
out
inc
jle
sbb
inc
lds
pop
cwtl
mov
aam
or
jge
inc
in
jbe
mov
shrl
sub
pop
adc
mov
pop
ljmp
pop
lods
ljmp
inc
fbstp
out
pop
add
dec
adc
xor
sbb
mov
sbb
and
mov
call
adc
sub
fwait
pusha
xor
xor
jnp
xchg
adc
adc
pushf
or
inc
cmp
pop
dec
mov
ljmp
arpl
loope
aad
cwtl
push
and
movsb
sbb
push
mov
jnp
push
movsl
pushf
nop
adc
cwtl
scas
lods
lahf
push
and
xchg
cli
mov
addb
mov
dec
addr16
push
and
xchg
fidivrl
test
xor
mov
and
pop
add
sub
sub
rol
mov
mov
in
push
jne
dec
inc
clc
inc
bound
cs
cmpsl
pop
fs
adc
pop
std
sbb
push
shll
cmp
jb
push
and
int
and
inc
test
stc
xor
jae
in
cmpsb
add
enter
push
cmp
out
cmp
add
loop
xor
sbb
push
sti
mov
push
loop
orl
in
loope
hlt
pop
xchg
sub
les
decl
sub
fs
aas
mov
ss
shl
cmp
popf
sub
sub
adc
lock
jbe
adcb
cmp
sbb
in
aad
fwait
and
add
mulb
outsb
xor
jl
and
lock
ret
leave
ds
xchg
je
nop
gs
test
das
fdivr
mov
sbb
or
xchg
add
je
ss
fisubs
cvttps2pi
sub
pop
rorb
and
daa
mov
sbb
sbb
push
mov
pop
lds
inc
cltd
jg
mov
cmp
jp
rorb
stos
mov
mov
mov
sbb
loope
jne
mov
ret
jno
inc
mov
gs
cltd
cmpsb
sti
jl
rcr
xlat
lock
popa
dec
jns
jle
pop
mov
jecxz
loope
int
mov
sub
xchg
pop
sub
lea
faddl
loop
cmp
test
cld
jl
mov
add
mov
loop
pop
xor
mov
xchg
dec
xchg
xchg
dec
lret
dec
sub
stc
ret
je
lds
lods
cmp
push
out
adc
xchg
push
pop
test
stos
jg
mov
mov
inc
arpl
pushf
dec
or
stos
insb
inc
sbb
notb
repnz
rol
adc
test
iret
jecxz
mov
push
test
adc
xor
dec
fmull
and
cmp
dec
cltd
in
ds
sub
dec
addr16
cmp
xchg
ja
leave
jbe
push
int3
popf
cld
in
pop
in
adc
push
js
insl
into
xchg
cltd
mov
jno
in
popa
cmpb
adc
lahf
sbb
adc
fs
jg
xor
mov
and
sub
lea
jae
bound
inc
cmp
stc
mov
xor
mov
inc
clc
std
xchg
faddl
cs
jle
xchg
lods
lcall
rcrl
and
mov
mov
es
popf
cmp
jl
sbb
xchg
xor
dec
test
xlat
xchg
adc
jecxz
pop
sbb
popf
sbb
out
sub
call
in
testb
pop
push
clc
mov
xlat
adc
dec
jmp
je
jb
ret
dec
sbb
sti
into
nop
sti
sar
test
mov
imul
repnz
or
aad
push
lahf
rorb
mov
jb
pop
pushf
lock
or
add
leave
lret
fxrstor
orl
addr16
popa
lcall
sbb
fadds
pop
jnp
mov
and
sbb
pop
outsl
std
mov
xchg
or
faddl
pop
insb
sub
insl
cwtl
imul
shll
int3
rolb
leave
outsl
mov
outsb
repnz
sub
cmpl
xor
adc
mov
push
push
loop
or
jge
adc
or
shrl
push
mov
mov
sbb
xchg
leave
push
add
xor
test
sbb
xchg
mov
in
adc
push
mov
stos
ljmp
or
sahf
xchg
dec
inc
xchg
push
aad
cs
test
xlat
movsb
or
aaa
loope
cli
sbb
ds
push
and
xchg
inc
mov
and
mov
jae
inc
inc
jno
aas
stos
ja
iret
mov
pop
inc
sti
cs
mov
sub
add
dec
sbb
inc
incl
leave
sbb
fdivs
clc
xor
sbb
imul
cwtl
arpl
mov
outsb
in
lret
pop
xor
mov
pop
sub
arpl
movsb
aas
jae
xlat
repnz
push
in
or
dec
arpl
or
addr16
cmp
xor
jecxz
into
test
dec
hlt
jl
cmp
mov
addr16
std
shlb
orl
sub
test
stc
lods
adcl
mov
sub
push
movsb
or
out
pop
scas
test
jbe
jg
jo
pop
add
jle
inc
leave
scas
jg
mov
fidivrl
add
js
dec
fmul
faddl
pop
cmpsb
xchg
pusha
dec
test
adc
andl
cmp
mov
lock
ljmp
iret
pop
ds
add
stos
mov
stc
xor
aam
xor
arpl
les
rcrb
mov
adc
adc
or
movsb
movsl
adc
xor
enter
js
arpl
ret
jns
push
mov
push
xchg
shll
cmp
mov
jge
in
jp
les
or
aaa
inc
stc
icebp
xor
enter
xor
add
adc
test
cmc
add
xchg
mov
out
pusha
stc
xchg
jle
sbb
xchg
sub
or
outsb
sub
ret
add
sarb
push
inc
mov
mov
or
mov
lret
aam
mov
testb
xor
mov
sbb
repnz
mov
push
test
loopne
inc
sub
rcrb
inc
xchg
and
push
mov
push
sbb
ficoms
std
enter
jno
and
xchg
fs
xchg
popa
dec
mov
movb
add
loopne
pop
in
push
cli
push
ds
lret
call
pop
fwait
jno
lea
xlat
push
push
mov
sbb
out
fwait
mov
ret
arpl
fwait
adc
push
dec
fsubs
out
jbe
sbb
inc
jle
mov
aas
add
scas
ljmp
outsl
lahf
push
push
mov
dec
inc
add
xor
daa
inc
push
shl
sub
mov
mov
xchg
in
stos
inc
sbb
and
popa
cmpsb
push
pop
loopne
lahf
mov
dec
inc
sarl
and
stc
xor
ret
adc
addl
outsb
cmc
ljmp
adc
cmp
mov
push
xor
stos
cmp
mov
lahf
aas
push
mov
or
pushf
mov
push
inc
aam
mov
pusha
xchg
and
or
jae
int
pushf
decb
sub
mov
inc
sub
sub
lods
dec
sbb
pop
orb
cltd
sub
fcmovb
bound
push
xchg
xchg
adc
dec
dec
leave
stos
movsb
mov
push
and
repz
jge
dec
sub
shr
push
scas
test
pop
div
jl
ja
loop
mov
lcall
fs
push
dec
fs
pop
ret
stos
jl
adc
lods
jnp
dec
mov
add
cmpsl
lahf
inc
out
mov
loope
test
push
rcr
or
imul
mov
push
jae
adc
loop
popa
cmp
gs
push
jb
rcll
adc
insb
dec
lea
cwtl
pop
sahf
jne
pushf
out
lods
inc
add
xor
ss
aas
dec
scas
mov
cmp
cs
loop
sub
sar
and
out
scas
push
loopne
xor
sbb
aas
ja
mov
loop
subl
xchg
stos
cmp
sbb
aad
xlat
arpl
sub
and
sub
mov
push
add
push
sub
pop
sar
lods
xorl
inc
mov
fsubl
sahf
aad
mov
inc
xor
xchg
mov
dec
cld
lods
xchg
jne
inc
push
ds
rcr
movsb
popf
repnz
mov
push
inc
fsubrs
pusha
in
sbb
repz
sahf
mov
sbb
inc
add
add
push
daa
divl
je
cs
int3
ret
icebp
sub
and
outsl
into
push
cld
xchg
or
mov
mov
bound
jne
mov
aas
fs
push
ljmp
pop
test
cwtl
filds
mov
lods
and
cmp
jge
dec
push
mov
jns
sbb
inc
js
xorb
test
sbb
aaa
adc
add
nop
dec
fisttps
sbb
jae
jbe
in
ss
sbb
rol
pusha
stos
push
lods
fldcw
mov
cmp
push
dec
aam
ja
aam
fwait
or
sbb
mov
pop
mov
cmp
stos
sbb
int
mov
sbb
clc
gs
arpl
dec
movsb
push
push
cmp
jb
add
flds
cmp
add
xchg
les
les
insb
jmp
jmp
gs
lds
mov
out
js
testl
ljmp
push
fsubl
cmp
mov
aas
insb
inc
fsub
cmpsl
push
cmpsb
dec
das
stos
aam
pushf
cmp
pushf
loopne
imull
lret
push
loopne
ret
push
sub
sbb
stos
sub
in
addb
and
repz
loopne
jno
js
jg
push
rcrl
call
inc
call
jecxz
xchg
clc
inc
popf
pushf
shlb
xchg
leave
jbe
jmp
push
sbb
xlat
in
out
movsb
hlt
fistl
data16
arpl
shrl
cli
mov
loopne
popf
fwait
or
aaa
xor
mov
adc
inc
xchg
imull
repnz
and
out
sbb
lock
push
pop
outsl
xchg
push
xchg
popf
sub
push
in
int
pop
cmp
addr16
fwait
push
dec
lret
xor
mov
aas
add
nop
pop
fisubl
adc
inc
push
mov
cmp
pushf
jb
aam
push
push
add
sub
cli
xchg
mov
jno
cmp
push
jns
inc
iret
xchg
dec
mov
jns
rcr
call
vcomisd
ret
std
mov
sti
add
call
test
jmp
lods
shlb
jmp
sub
pop
jle
std
pop
sub
faddl
jp
or
repz
ljmp
and
out
imulb
add
adc
mov
adc
fldpi
or
popa
push
push
pop
out
adc
push
aaa
in
icebp
loopne
push
add
cltd
mov
sti
adc
sti
mov
mov
or
div
and
lret
xorb
sbb
in
loop
stos
insb
lds
into
sub
negl
dec
jp
mov
or
inc
sbb
gs
add
or
mov
jb
mov
repz
inc
push
jne
cmp
or
in
int3
cmpsl
enter
xchg
imul
out
iret
inc
lds
inc
sub
push
imul
pop
imul
mov
jae
lods
out
stc
ffreep
mov
addr16
add
dec
dec
repnz
andb
popf
pushf
sti
lcall
cmp
stos
jne
fbld
and
mov
adc
stos
push
mov
pop
aad
xchg
out
inc
inc
aam
jmp
popf
movsl
sub
and
dec
xchg
add
jmp
test
mov
mov
dec
add
in
js
cmpsb
cmpsb
pop
push
inc
push
adc
pop
arpl
addr16
ja
hlt
or
mov
or
hlt
pop
lds
in
sub
std
pop
xchg
add
ds
gs
mov
mov
jnp
rcll
cmp
insl
das
adc
fninit
pusha
sub
xor
mov
into
ja
cmp
xchg
add
xchg
jl
push
outsb
push
dec
pop
adc
sub
mov
dec
adc
jns
xor
and
mov
jmp
sahf
out
mov
sbb
dec
and
fdivr
xchg
push
scas
mov
pusha
sub
es
test
mov
mov
mov
sbb
leave
pushf
rcrl
pop
mov
xchg
stos
jnp
sbb
out
xlat
jb
mov
rorl
fnstcw
sub
dec
dec
enter
push
stc
movb
mov
bts
btc
mov
pusha
pushf
sub
jbe
push
call
gs
mov
jo
mov
cmp
ss
orb
pop
lods
lret
cmc
mov
dec
neg
sub
into
pop
je
push
repnz
xor
push
add
sub
es
mov
cmpsl
int3
mov
cmpsb
mov
repz
rcll
pusha
push
fucomi
inc
add
outsb
out
arpl
pop
sub
xchg
add
shr
fisttpl
ds
cwtl
mov
inc
and
push
int3
inc
jge
and
mov
inc
mov
push
sub
mov
in
jbe
mov
inc
sub
fs
std
repz
or
and
xchg
test
cmp
or
pop
pusha
movsl
lcall
mov
mov
push
daa
test
pop
sub
sbb
ficompl
stos
dec
xor
xor
push
jcxz
jg
mov
scas
imul
sbb
push
ficoml
fdivrl
dec
call
pop
in
fstl
mov
into
mov
stos
add
mov
ja
insl
sbb
fwait
cli
push
inc
ja
mov
push
add
lea
pop
pushl
bound
leave
fistpl
cmp
inc
cmp
pop
bound
cmpsl
pop
fwait
mov
add
cmp
push
xor
dec
mov
mov
mov
gs
mov
dec
lret
mov
xchg
push
xchg
xchg
int3
test
int3
inc
fdivl
in
iret
orb
call
scas
rcll
cmpsl
push
add
xor
das
cmpsl
xchg
outsl
sub
jge
xchg
mov
stos
cmpl
setl
cmpsl
out
nop
lret
dec
or
adc
repz
scas
mov
mov
or
mov
jne
cmc
je
adc
pop
push
mov
mov
or
add
fidivrs
outsb
mov
push
cmp
cltd
push
fists
in
mov
mov
xor
ret
mov
mov
in
xchg
sub
out
xor
enter
loopne
cmp
cmp
cli
ret
mov
enter
mov
shll
jb
mov
sbb
sbb
in
jne
lods
sub
in
cmp
push
lods
dec
daa
sbb
jecxz
push
sbb
or
xchg
jo
push
cmp
pop
push
push
add
push
mov
int3
push
sub
sub
stos
and
mov
shl
inc
ret
jae
pop
mov
sbb
testl
push
add
pop
dec
and
stc
push
movsb
out
or
loopne
mov
cmp
scas
pop
adc
test
mov
xchg
aad
add
insl
and
arpl
and
pop
cmpsb
and
repnz
xor
out
cli
jl
lret
mov
jl
popf
fistps
xor
and
xor
ja
sub
es
mov
xor
in
sahf
lock
jno
push
sahf
xchg
push
dec
mov
repnz
clc
mov
imul
cli
lret
loop
push
push
fistpl
test
and
pusha
mov
jmp
sub
mov
cmp
dec
test
xchg
cs
xchg
jne
cmpxchg
xor
mov
cltd
popf
mov
add
cmp
stc
cmp
jns
mov
rcrb
jae
lcall
or
jnp
loope
xor
pushf
xor
dec
mov
push
inc
pop
test
idivl
push
pop
test
mov
sub
movsl
or
mov
push
addr16
push
lods
jbe
mov
jo
test
mov
leave
mov
add
sbb
add
sbb
rorl
add
add
add
pop
icebp
adc
and
sbb
add
add
add
xchg
sub
sbb
loope
pop
add
inc
sbb
jmp
add
add
add
add
adc
cmp
sbb
icebp
mov
add
sbb
inc
inc
sbb
stc
mov
add
mov
sbb
add
add
add
add
pop
sbb
add
mov
add
sbb
pop
inc
sbb
adc
add
add
add
arpl
add
add
mov
add
sbb
add
mov
add
enter
inc
sbb
sub
add
add
add
or
sbb
xor
add
add
add
cmp
adc
test
clc
test
pushl
pushf
mov
pusha
jmp
stc
pushf
add
lea
jae
je
push
add
pusha
lea
jmp
mov
push
dec
sub
cmp
ficomps
mov
stc
jae
mov
iret
mov
rorl
arpl
xlat
int3
lods
loop
rorb
sub
clc
adc
adc
pop
sub
arpl
mov
icebp
pop
lods
js
sub
daa
fdivs
adc
jle
out
dec
repz
add
loope
ret
int
mov
insl
jecxz
scas
movsb
cltd
sbbl
add
sub
push
out
insb
data16
mov
enter
add
fs
jne
jae
jb
add
lods
stos
jecxz
enter
stos
xchg
jbe
mov
cli
add
mov
sti
aam
out
inc
shl
fildl
and
sub
stos
cmp
jne
add
hlt
test
insb
lods
mov
rolb
and
or
push
dec
daa
jne
mov
movsl
enter
fprem
aaa
icebp
add
or
imul
xor
addl
fwait
popf
xchg
jo
cmp
push
mov
pop
jmp
xchg
pop
or
movl
pushf
lea
jmp
inc
mov
mov
mov
pcmpgtw
fstpl
pop
pop
fistl
or
jb
fsubl
in
mov
hlt
icebp
iret
pop
enter
loop
jecxz
inc
nop
xor
mov
in
dec
xchg
xchg
out
sbb
adc
sbb
ret
cld
push
rcl
cmpsl
sbb
orl
icebp
daa
jmp
stc
lods
dec
insl
mov
int3
add
mov
mov
scas
mov
jo
mov
inc
cmp
add
pushf
not
jmp
mov
lods
jmp
movb
push
lea
jne
setb
jl
push
setle
mov
movzbw
bswap
mov
pusha
mov
movzbl
movzbl
pushl
not
lea
movb
jmp
jmp
repnz
xlat
lret
stos
pop
shrl
test
hlt
mov
or
dec
lcall
stos
or
mov
sahf
sahf
sti
sbb
adc
jmp
andl
mov
test
sbb
or
loopne
dec
ret
test
push
pusha
aam
jl
sbb
enter
add
pop
pop
pushf
cmp
pop
dec
sbb
je
xor
or
or
mov
test
add
lahf
xchg
cltd
enter
call
jns
mov
inc
addb
aas
ss
scas
sub
jl
xor
stc
and
fdivl
cmp
pop
or
inc
clc
je
stos
or
addl
add
imul
cmpsl
ja
mov
negb
cmpsb
cmp
test
xor
xlat
jle
mov
jb
gs
das
pop
sbb
test
nop
or
rclb
add
aaa
dec
push
jle
aam
push
out
jecxz
cmpb
push
mov
xor
dec
inc
shll
fidivs
in
sbb
sub
cltd
arpl
xor
mov
mov
sub
pushf
insl
insb
leave
pop
arpl
jmp
xchg
adc
add
insb
test
jnp
mov
mov
lea
test
pop
fdivrl
add
push
mov
cmp
jns
mov
add
mov
out
adc
push
jne
jne
into
sub
push
outsb
stos
mov
jo
mov
shlb
bound
mov
add
fsubl
cmp
sbb
sarl
pop
sbb
jae
ret
dec
aas
mov
aam
push
ret
das
into
int3
or
inc
fwait
xlat
out
mov
inc
ret
lret
sbb
jb
push
aas
in
icebp
push
push
mov
sub
scas
or
and
shl
dec
xchg
dec
push
cmp
or
xor
mov
cwtl
inc
xor
std
loope
and
adc
leave
or
push
cmp
sbb
fstpt
rorb
xor
push
arpl
push
pushaw
test
hlt
ds
xchg
or
push
lahf
cmp
adc
mov
jl
divl
jg
xor
xor
sbb
push
int3
stos
rorb
jno
dec
sbb
jb
xor
cs
pop
sbb
sbb
mov
cmp
mov
movsb
ss
es
and
outsl
out
jne
add
mov
pop
mov
movsbw
bswap
rep
lea
mov
pusha
lods
not
pusha
ror
push
call
pushf
movl
mov
movw
movl
pusha
pusha
lea
jmp
mov
dec
jle
mov
push
ja
mov
leave
rcl
push
xor
lock
insb
jge
add
mov
fistpl
mov
orl
lods
push
or
negb
nop
jle
dec
mov
or
cmp
cli
push
lret
gs
fdivp
or
mov
outsb
push
mov
fucom
pop
outsl
fcoms
xchg
add
mov
test
pop
xchg
add
inc
mov
xorl
add
sub
rcll
mov
mov
sub
stos
jno
in
out
mov
add
pushf
movl
call
adc
insb
loopne
mov
or
push
xchg
pop
xchg
adc
dec
prefetchw
or
daa
sbb
mov
out
ds
dec
cli
mov
jmp
ja
jo
cmc
pusha
leave
xchg
fnstsw
jb
clc
mov
mov
or
out
mov
xor
arpl
ret
xchg
fisubrs
test
mov
je
in
fisubrs
inc
lds
daa
sti
mov
addr16
mov
xor
jae
add
fstpl
movsb
fwait
movsl
popf
test
pop
in
add
addb
cmpsl
add
inc
cmc
cmpb
pusha
jmp
arpl
lahf
add
fs
ret
push
int
lahf
lahf
movsb
adc
and
cmp
xor
lods
rorb
insl
ret
jg
pop
les
mov
mov
idivl
mov
scas
scas
insl
outsb
dec
ds
cwtl
shll
cwtl
rol
or
nop
or
or
mov
imul
fdivl
cmpb
jmp
add
add
out
adc
add
add
inc
cmp
add
or
add
sub
add
add
add
adc
add
add
movsb
sbb
add
add
add
test
add
add
dec
adc
add
add
rol
add
add
add
ficompl
add
add
cmc
push
add
add
add
adc
add
add
xchg
dec
sbb
add
add
mov
sbb
sti
and
sbb
ljmp
add
jecxz
add
add
add
push
or
xchg
iret
outsb
lret
into
iret
pop
sbb
es
ljmp
popa
xchg
jg
arpl
in
arpl
dec
mov
inc
out
sahf
push
mov
test
xchg
push
add
shll
pop
inc
test
fstpl
add
pop
fadds
adc
xchg
cmpsl
add
add
sbbl
dec
mov
outsl
jl
xchg
ljmp
in
cmp
mov
mov
ret
lds
lea
add
adc
test
pop
stos
jp
push
push
adc
sbb
sbb
insb
sub
call
jmp
inc
pavgw
in
sbb
cmp
out
iret
or
or
outsb
dec
rclb
cld
repnz
outsb
push
mov
int3
dec
jl
in
and
mov
jbe
testl
xchg
test
xchg
xchg
xchg
xor
or
xchg
pop
mov
mov
stc
test
and
in
in
loope
outsb
push
int
decl
adc
and
pusha
jmp
lret
and
enter
push
lret
loopne
add
adc
mov
jno
jmp
or
arpl
arpl
xchg
adc
jmp
dec
adc
pop
in
popa
mov
or
rolb
jge
or
orl
loopne
mov
fs
inc
mov
inc
and
out
test
inc
sub
sub
das
fcoms
cmp
into
hlt
dec
movsl
cli
inc
les
dec
xchg
ficoml
pop
stc
or
cld
pop
jle
jae
mov
rorl
outsl
lds
jge
jne
xlat
in
fcoms
jns
xor
notb
pop
push
f2xm1
mov
mov
cs
mov
sub
lcall
fmulp
lret
cmpsl
mov
out
xchg
fstpt
jmp
add
pop
jns
xor
mov
or
pop
mov
adc
push
xchg
pop
push
xchg
push
cli
cltd
inc
movsb
lahf
push
in
dec
cmc
jbe
lret
jns
les
sahf
test
mov
jl
dec
sub
test
xchg
test
orb
add
pushf
lahf
movsbw
mov
sub
cmp
call
mov
xlat
inc
mov
clc
inc
pop
in
jmp
rorb
aaa
sbb
fs
repz
das
xlat
adc
das
inc
jle
xchg
xor
fs
ror
lcall
adc
sbb
aad
ffree
dec
mov
push
cmpsl
mov
sbb
dec
dec
lods
adc
pop
cmp
adc
sbb
dec
jp
bound
fidivs
push
and
xor
in
mov
jb
xor
add
movl
jmp
outsl
insb
gs
jne
xor
cs
insb
add
movl
mov
movl
push
pusha
pusha
pushl
lea
jmp
add
pusha
mov
clc
test
jmp
repz
sbb
xchg
imul
mov
cmp
add
arpl
jl
insl
xchg
mov
movsb
or
cmc
jle
int3
push
or
sub
adc
in
and
push
xchg
rcrb
push
or
mov
out
loop
movsb
loope
adc
cli
and
sub
sti
add
dec
dec
int3
or
daa
lds
test
in
jl
pushf
movl
lea
je
bswap
lea
pushf
call
add
push
push
inc
inc
popa
outsb
arpl
inc
jae
outsb
arpl
jno
gs
add
mov
cld
lea
call
neg
mov
sar
cmc
mov
bt
shl
cmp
test
cmc
add
call
pop
sarb
stos
xchg
mov
inc
add
pop
dec
adc
push
sbb
lahf
cmp
pop
repz
mov
popa
mov
adc
fsubrl
xchg
adc
repnz
add
shl
mov
pop
push
cmp
xchg
push
mov
jmp
sbb
mov
sub
or
fmull
or
sub
rorb
inc
add
rcr
pushf
cmpsl
stos
movsl
pop
pop
add
dec
scas
mov
enter
stos
xchg
jo
cmc
add
cmp
sarl
pushf
movb
into
test
pop
pop
dec
push
sub
push
out
lods
hlt
mov
push
ret
adc
leave
loop
mov
in
in
aad
aad
dec
xchg
sub
mov
mov
ja
push
outsl
in
loope
ja
repnz
push
mov
mov
dec
aam
insl
or
dec
loope
idivb
xchg
mov
pop
lahf
ljmp
mov
mov
jo
inc
push
push
lea
jb
call
jns
jo
cmp
cli
dec
and
lods
movsl
lds
cli
sbb
adc
enter
cmp
xor
xchg
int
stos
xor
es
xor
insl
cltd
xor
movsb
adc
or
filds
lods
dec
dec
jl
stos
dec
sar
jo
jbe
stc
jns
cmc
xlat
adc
xor
jp
mov
test
adc
call
push
movb
lea
jne
shrd
and
ror
aam
xor
not
setl
cmp
mov
cmp
dec
add
dec
inc
setno
jle
mov
jb
test
jmp
call
mov
pushl
call
pushl
popl
pushf
pushf
pushl
ret
push
pusha
jmp
mov
sar
neg
rcl
mov
cmc
stc
bt
cmp
xor
pusha
repnz
jmp
in
inc
cld
lahf
fs
cmc
das
nop
dec
pop
xchg
fstpl
jnp
cs
imul
fs
ds
lahf
scas
aaa
clc
cmp
out
repnz
ja
int3
nop
pop
fucomp
lds
test
in
xchg
pushf
jmp
jno
inc
add
sub
fiadds
mov
dec
out
loopne
mov
or
xchg
dec
aam
lea
loopne
movsl
jnp
cmp
inc
aas
xchg
clc
pusha
movsb
cwtl
lods
in
dec
mov
aam
or
push
dec
lret
or
jo
dec
adc
popa
inc
js
jg
inc
in
jp
mov
adc
ret
and
push
adc
adcl
imul
mov
cmp
cmpb
orl
xlat
xor
test
jle
enter
push
pushf
mov
mov
lea
jmp
call
inc
sub
movsb
jb
mov
inc
das
in
popa
dec
inc
incl
cli
mov
xorb
movsl
sub
mov
imulb
push
mov
repnz
cmp
or
js
and
mov
add
fsubrp
movsb
jg
sub
fidivl
jb
sbbl
ret
imul
sbb
mov
enter
cwtl
jmp
or
sarl
sub
sub
mov
test
adc
out
loopne
adc
clc
push
popf
xchg
daa
movsb
insb
test
mov
stos
dec
add
jg
mov
out
mov
out
lock
pushf
push
loop
adc
mov
lods
and
sub
jns
sbb
pop
int
add
mov
inc
xchg
loop
pop
dec
jg
cmpsb
cmp
add
sub
lods
push
pop
fimull
les
pop
cmp
mov
in
jmp
dec
popl
call
lret
int3
cmp
hlt
int
movsb
hlt
lds
push
adc
push
xchg
fcom
nop
pop
movsb
out
mov
rolb
test
loopne
jno
fs
jae
mov
shl
bswap
jmp
call
inc
outsb
sub
mov
imul
imul
mov
das
push
mov
aam
enter
std
mov
inc
push
mov
hlt
pop
fwait
mov
lds
repz
mov
sub
popa
inc
fsubrs
mov
mov
inc
in
mov
outsb
mov
mov
lcall
jl
mov
repz
adc
mov
inc
inc
xor
stos
xor
roll
sar
or
into
aad
arpl
add
pop
push
cli
in
adc
mov
xchg
aad
xor
jmp
add
mov
jecxz
dec
sub
push
mov
inc
dec
stos
lcall
lahf
iret
adc
dec
aaa
lds
imul
fimuls
xchg
sub
shrb
jmp
incb
sub
test
dec
scas
in
mov
insl
xchg
mov
mov
add
sahf
push
sub
jns
movb
push
dec
pop
mov
in
push
add
or
ret
mov
lods
inc
ret
iret
xchg
fwait
push
push
push
rorb
std
andb
imul
or
pop
mov
adc
test
imul
andb
aaa
pop
mov
xchg
jle
jbe
dec
mov
cmpsl
mov
pop
nop
sub
mov
or
dec
and
and
add
mov
ljmp
jnp
sahf
popf
fidivl
sub
xchg
les
lret
mov
adc
hlt
add
mov
push
pushf
call
lahf
sbb
setno
pushf
lea
call
xchg
cmp
jo
shrb
cli
add
gs
push
sbb
imul
inc
pop
les
dec
mov
std
xor
mov
sarb
ss
push
neg
ret
jae
mov
adc
into
std
pop
ja
and
mov
add
mov
jne
sub
lcall
das
xor
xchg
mov
inc
enter
fsubrs
xchg
or
pop
jecxz
mov
add
pusha
mov
aas
cmp
pusha
call
inc
jne
loop
fistpll
ficompl
pop
ret
pop
adc
pusha
in
popa
pop
sbb
fs
repnz
mov
inc
hlt
daa
push
mov
mov
and
jg
sub
cmp
stc
pop
lcall
je
pop
jno
jg
cwtl
or
mov
in
sbb
test
add
xor
cmp
arpl
cmp
nop
nop
mov
rcrl
int
mov
jg
or
adc
movsb
in
jl
jnp
flds
out
sti
sub
xchg
or
lea
mov
andb
cmc
inc
iret
xor
xchg
cmp
outsb
or
hlt
gs
pop
dec
pop
int
mov
mov
pop
movsb
hlt
and
pop
outsb
push
imul
popf
ss
push
jns
jge
mov
and
mov
repz
ja
cwtl
iret
push
add
dec
xor
pop
mov
jns
out
aas
xor
push
push
jbe
dec
sti
faddl
inc
cli
mov
jecxz
sbb
and
cmpsl
and
jnp
jle
or
or
addr16
or
out
push
and
insl
adc
fistl
testl
shrl
mov
ja
jns
adc
aad
out
cmpsb
sub
push
pop
mov
pusha
and
ficompl
xchg
push
jae
aad
ss
mov
shll
fidivs
fistpl
mov
fiadds
in
movsb
push
inc
cmp
sub
lret
jl
mov
into
push
cs
leave
xchg
pop
out
cmp
jle
dec
or
pop
stos
imul
sub
push
out
cmp
mov
loope
out
xchg
cmc
mov
mov
mov
xchg
or
in
jmp
mov
mov
pop
mov
or
mov
movsb
push
xor
inc
sbb
ja
lahf
mov
in
pop
shrl
movzbl
shll
in
push
mov
inc
shrb
ret
or
loopne
mov
pop
pop
pop
sbb
xchg
pop
xchg
testb
cmpsb
mov
movsb
pop
test
xchg
cmpsb
sar
ret
test
xchg
test
mov
cmp
scas
std
pop
jge
icebp
jnp
mov
or
sbb
cltd
xchg
fdivr
mov
or
push
fdivp
loope
sub
sub
cld
lcall
sbb
mov
add
pop
pop
fwait
std
sarb
or
sbb
jbe
pop
jae
cltd
dec
xchg
lret
fsts
sbb
pushf
pop
mov
out
add
or
mov
push
jne
jp
push
add
in
cwtl
push
movzbl
ret
jl
mov
jns
cmp
out
test
jle
pop
and
sti
mov
lret
pop
pop
test
arpl
negb
or
es
cltd
testb
sub
clc
inc
pop
insl
pop
sub
fs
aam
divb
test
data16
rorl
or
bound
jb
insb
mov
xchg
test
shl
add
jo
push
push
in
aam
mov
xor
ror
mov
mov
sub
lcall
sbb
mov
pop
mov
add
js
bound
lods
insl
mov
subb
lahf
out
outsl
popf
adc
xchg
ldmxcsr
mov
inc
xor
dec
inc
aaa
mov
popf
jg
out
mov
sti
int
inc
jecxz
pop
and
daa
daa
push
mov
inc
xchg
and
imul
test
bound
and
push
or
dec
jge
arpl
xor
icebp
outsb
cmp
mov
mov
mov
add
or
mov
xor
dec
dec
pop
leave
popa
enter
hlt
cmp
in
xchg
loopne
clc
xchg
jns
cltd
sbb
jmp
xchg
dec
loope
or
mov
aaa
lds
dec
inc
push
lock
fcmovu
xchg
push
setno
addr16
test
xchg
pushf
pushf
mov
pushf
lea
call
pusha
movzbw
mov
pusha
movw
xchg
jmp
dec
jns
scas
int3
push
pop
sbb
adc
fst
and
inc
jecxz
mov
mov
and
mov
in
test
xor
sub
push
mov
sbb
leave
ror
or
jbe
out
sbbb
pop
xchg
push
test
xchg
push
cmpsb
push
inc
xor
lods
xor
push
sahf
push
loopne
and
imul
pop
add
cld
cli
mov
test
rorl
mov
xlat
inc
xor
xor
clc
pushf
shl
not
add
shl
shr
rcl
cmp
sub
setne
mov
movb
mov
pushl
call
dec
ret
pop
xchg
ja
xor
in
lods
mov
cmp
jle
cmp
mov
pushf
aad
stos
pop
and
pop
mov
mov
dec
jle
stc
pusha
mov
mov
cmpsl
arpl
insl
mov
jbe
movsb
aaa
ror
dec
jno
enter
pop
sub
pop
sar
fucomp
imul
xchg
xor
dec
pusha
iret
or
push
push
adc
sbb
add
call
xlat
or
test
mov
xlat
lcall
rep
cli
divb
push
clc
rclb
daa
fisubrs
imul
mov
mov
ret
arpl
or
in
scas
jns
mov
xchg
imul
sub
cmpl
pop
sbb
pushf
ret
and
jb
sbb
add
xor
pusha
cld
jae
sub
xchg
or
mov
adc
dec
push
dec
iret
mov
cltd
lahf
push
add
sbb
jo
inc
lret
xchg
fwait
lods
out
fistps
mov
je
mov
lcall
mov
push
pop
dec
add
xor
leave
in
jl
leave
mov
cli
or
in
add
popa
les
ds
xchg
pop
cwtl
add
cmp
mov
pop
xor
lahf
loop
dec
sbb
movb
push
fsts
in
out
stc
cbtw
rolb
dec
inc
pop
filds
xchg
cmp
rolb
test
fs
add
add
sbb
add
add
add
add
add
add
sbb
sbb
and
add
push
sbb
add
add
add
es
sbb
mov
repz
add
sub
stc
lods
les
and
lods
inc
popf
and
inc
pop
jnp
sbb
clc
fsubr
jle
lcall
ret
add
daa
ror
push
rorl
cmpsl
in
leave
iret
jnp
xor
dec
test
addr16
sub
and
lret
push
cmp
pushf
outsb
insb
and
xor
les
push
pop
adc
mov
jbe
sub
adc
jno
faddl
push
popa
movsb
aad
and
mov
shr
mov
inc
dec
adc
shlb
pusha
dec
adc
or
je
ds
mov
nop
cmp
in
gs
sub
dec
dec
jo
jge
in
cmp
push
xor
add
jp
gs
mov
jo
mov
xchg
jns
arpl
lds
adc
xor
data16
popa
movsl
das
outsb
sbb
hlt
adc
add
xor
jmp
out
add
iret
xchg
inc
xchg
jns
add
cwtl
fsubs
sbb
adc
xchg
ljmp
aad
jecxz
dec
mov
lret
jo
gs
lcall
lds
xchg
stc
cltd
xchg
add
arpl
aas
sub
mov
hlt
ds
rclb
scas
jmp
dec
sbb
xchg
jmp
push
cmp
scas
push
rcrb
jne
enter
xchg
dec
nop
loopne
call
ficomps
loop,pt
adc
insb
adc
push
insl
repnz
ret
gs
mov
xchg
pusha
adc
outsb
and
mov
jo
loope
push
adc
xchg
cwtl
jae
stos
mov
and
sbbl
mov
sub
repz
aad
lret
jp
xlat
loope
jbe
test
ljmp
insl
sub
push
pop
sbb
aam
daa
mov
adc
pop
movsb
shll
dec
scas
add
inc
popf
pop
inc
sub
jp
cmpsb
jp
mov
xor
push
pop
ret
movsb
push
movsb
outsb
push
ljmp
addr16
xor
xor
cs
sbb
inc
int3
scas
fstps
cmp
adc
pop
pushf
mov
pop
cmp
mov
adc
and
cmp
stos
into
movsl
mov
sbb
sub
mov
insb
rcrl
jae
xorb
mulb
adc
push
arpl
push
cmpl
fbld
nop
insb
jno
adcb
mulb
mov
pop
push
cli
pop
pop
cmp
xchg
dec
es
add
mov
movsl
mov
movsb
fldt
pop
xor
xor
sbb
lahf
mov
dec
lahf
enter
or
pop
xchg
cli
or
push
jne
mov
bound
out
jne
rol
xchg
xchg
push
jno
cltd
fwait
ljmp
rorb
adcl
pop
loopne
out
inc
mov
es
negb
pop
sub
repnz
jo
inc
pop
loop
cmp
pop
cmc
mov
dec
stc
push
cmp
sarl
mov
into
imul
movsb
add
inc
call
xor
dec
std
push
jne
inc
mov
cwtl
pop
mov
dec
xor
pop
loope
cli
enter
lock
mov
in
insl
mov
mov
sub
aam
enter
gs
mov
repnz
push
adc
mov
mov
roll
xor
xchg
mov
stc
aad
xor
popa
mov
mov
mov
insl
out
clc
repz
dec
jp
outsb
jno
cs
cs
pop
popf
rorl
fwait
sub
sete
sti
pop
mov
jns
xor
in
fiadds
fildll
outsb
inc
repz
fmul
andb
int
mov
adc
or
xor
fildll
and
scas
sub
out
push
test
popf
adc
push
loop
aam
mov
mov
add
stos
lea
stc
xchg
out
mov
cmp
les
dec
aad
stc
mov
or
and
xchg
sub
bound
mov
mov
test
rol
jg
sub
les
cmp
and
loopne
or
dec
mov
in
and
mov
repnz
hlt
pop
pop
jbe
in
adc
mov
rclb
mov
xchg
mov
mov
inc
dec
sub
icebp
into
decb
jle
dec
stc
cmc
xor
sub
rcrl
xchg
sub
sub
pop
jmp
pop
mov
jecxz
sub
cmpsb
pop
pop
js
rclb
mov
bt
adc
cmpsb
leave
sti
mov
jbe
mov
rcll
in
or
je
popa
mov
dec
sbb
cwtl
mov
push
nop
cmp
push
sbb
mov
push
adc
push
sbb
push
insb
outsb
lds
push
outsl
push
stc
dec
mov
and
js
shlb
ja
mov
pop
inc
cld
lret
jno
mov
xchg
push
pop
push
nop
xor
xor
inc
rolb
dec
out
shrl
idivb
sbb
mov
or
lahf
outsb
push
sbb
ret
in
daa
inc
cld
sub
je
inc
sbb
dec
dec
xor
adc
das
test
push
mov
sahf
sbb
sti
test
cmc
fcmovbe
push
dec
push
xor
jne
out
loop
mul
push
repz
test
inc
pop
and
lcall
int
inc
cmp
sar
lea
nop
scas
repz
push
dec
jae
fisubrs
xor
xchg
ds
call
sbb
pop
inc
popa
and
add
mov
pop
mov
mov
aam
inc
cs
insl
cmp
xchg
pop
cld
dec
out
test
xchg
push
inc
and
mov
ss
lea
push
mov
movsb
jbe
in
cmc
xor
shll
sub
sub
inc
sbb
xor
cmovb
cmpl
push
cmp
pop
faddp
nop
rcl
mov
cmpsl
sub
sbb
sbb
jae
pop
push
push
push
or
push
psubd
sti
mov
insb
jl
adc
pop
lock
xchg
arpl
lret
ds
pop
jge
mov
fwait
lods
xor
push
lahf
nop
aad
cmpsb
or
xchg
adcb
enter
fwait
cmp
mov
testl
jp
pop
divl
lahf
jmp
out
and
leave
mov
lea
sti
dec
ficoml
fadd
lds
out
sbbl
xchg
aas
fsubl
movsl
xchg
pop
stos
cmp
xor
xorl
js
and
arpl
adc
fwait
xor
ds
aam
push
loop
sti
cmp
ja
enter
loop
sbbb
mov
stos
jl
nop
cwtl
push
repz
lret
sub
cmp
stos
jb
mov
inc
insl
mov
add
mov
sub
ffree
cmc
mov
roll
mov
mov
mov
xchg
cld
nop
cmpl
scas
ja
mov
test
jle
mov
cltd
cmp
iret
sbb
mov
xor
sub
icebp
std
in
and
jp
pop
dec
fwait
dec
xchg
insl
xchg
mov
outsb
xchg
xor
mov
andl
mov
imul
fistpl
stc
push
pop
push
js
pop
jecxz
and
sbb
les
out
xchg
inc
sbbb
xor
xchg
dec
fs
mov
daa
cmp
outsb
sbb
jo
mov
lahf
pop
lret
sub
cwtl
push
inc
pop
push
outsl
test
push
sbb
and
insl
int
aas
scas
mov
or
arpl
or
mov
iret
sahf
nop
adc
js
pop
mov
insb
pop
insb
mov
inc
mov
mov
mov
inc
sub
xchg
sbb
mov
fistpll
xchg
jb
mov
dec
dec
push
jns
add
clc
pop
cmp
sbb
iret
jge
in
pop
lahf
call
cwtl
pop
dec
xchg
push
aas
push
xor
mov
mov
mov
inc
pop
roll
cmp
lret
sbb
xor
mov
dec
aam
addr16
mov
cli
leave
ror
dec
cld
pop
and
lock
je
inc
fadds
mov
or
xor
daa
cmpsb
push
dec
in
mov
rcrl
and
data16
mov
mov
inc
jb
xchg
mov
out
add
loopne
xchg
in
push
test
dec
sub
imul
stos
test
pop
scas
pop
dec
cmpsl
xchg
mov
out
inc
pop
or
scas
xor
cltd
out
scas
lahf
out
testl
iret
sbb
outsb
lock
cwtl
je
ja
stos
mov
sbb
jnp
jg
loopne
mov
fidivrl
sub
dec
stc
mov
inc
popa
lds
mov
pop
test
dec
sbb
dec
ljmp
pop
ret
flds
ljmp
out
std
mov
or
mov
sub
mov
imul
aaa
xchg
shrl
and
cmc
mov
imul
lods
inc
mov
lret
and
mov
fists
aaa
movsl
push
mov
jb
xchg
adc
hlt
sub
int3
aad
scas
cmp
xor
pop
hlt
scas
jb
push
push
push
andl
test
popa
adc
dec
cmpsl
push
fistl
adc
add
addr16
ja
rol
xchg
sahf
cmc
sub
adc
jne
push
xchg
ljmp
fistl
fisubs
xor
out
movsl
or
xchg
pusha
pop
mov
out
xor
in
je
sub
and
pop
inc
sbb
hlt
pop
arpl
sub
mov
mov
stos
test
addr16
jge
aaa
dec
jno
out
rcr
ja
mov
pop
repz
pop
into
adcl
sub
jb
mov
mov
cmp
mov
lods
lea
popf
push
xor
hlt
cmp
and
xlat
adc
mov
clc
push
subl
filds
iret
mov
cltd
mov
fwait
push
xchg
xchg
sub
in
and
or
mov
jp
push
sbb
mov
fidivrl
call
not
dec
aam
movsb
cmp
pop
mov
or
pop
jo
sub
es
xor
sub
add
cli
adc
adcb
fldl2t
cs
jne
jnp
xor
sbb
or
ja
sub
out
mov
sub
inc
enter
inc
test
jle
adc
mov
mov
andb
lret
lds
shlb
add
sbb
outsb
dec
stc
push
push
lahf
in
icebp
rcr
mov
lea
jb
cmpsl
test
dec
aas
sti
int
dec
sbb
jg
lahf
pop
fistps
mov
mov
lret
adc
xchg
push
iret
push
sahf
sbb
pusha
add
movl
jmp
jl
popf
cmove
aam
mov
repz
ja
lret
cmp
dec
in
xchg
pop
mov
or
lahf
ds
pop
sub
loope
lods
fistpll
fs
add
pop
or
add
add
popa
gs
inc
add
mov
mov
fmulp
jne
mov
cwtl
or
stc
xor
fsubl
jg
fdivs
rcrl
adc
pop
mov
fcomip
mov
jno
xchg
xchg
jg
aaa
mov
cmovnp
sbb
test
sbb
movl
add
jb
cmc
add
test
pushf
sub
call
icebp
lret
cmp
andl
push
adc
pop
out
pop
jl
sub
scas
or
hlt
push
jp
adc
xchg
mov
addb
mov
cmp
test
mov
jno
jns
icebp
fidivl
xchg
fcmovbe
incb
fcoms
adc
inc
mov
fisubrs
lock
test
nop
adc
hlt
in
dec
inc
shll
pop
enter
int
and
call
lods
and
bound
hlt
xor
add
or
cmp
popf
mov
dec
add
mov
mov
leave
ret
cmp
sbb
gs
sbb
dec
mov
pop
shlb
repz
loope
scas
in
fstpl
or
popf
mov
and
mov
aas
xchg
push
mov
mov
mov
je
ffreep
adc
sti
mov
or
mov
adcb
ljmp
shlb
and
outsb
xor
aad
add
pop
call
sub
aaa
bound
int
icebp
sbb
mov
inc
jmpw
mov
inc
rcrb
loope
inc
or
aad
popf
stos
lods
sub
int
test
mov
rorl
mov
sti
decl
stos
stc
sets
jmp
add
jmp
cmp
inc
sbb
sub
popa
stos
je
mov
mov
popw
mov
mov
insl
push
sbb
add
std
and
sbb
lret
pop
cltd
pop
jmp
sub
push
imul
cmp
loope
xor
std
fbstp
aad
jbe
lods
push
and
or
fsubl
mov
daa
xor
ds
imul
in
daa
lods
ja
mov
xchg
lret
cmp
stos
out
jl
mov
pop
test
dec
incb
mov
es
and
mov
pusha
repz
inc
or
jmp
and
xlat
sub
mov
lock
xchg
inc
mov
fsubl
or
js
jnp
les
ljmp
inc
movsl
fsubl
and
xchg
cltd
sbb
stos
cmpsl
imul
call
pushw
dec
std
adc
stc
jg
dec
movl
xor
inc
in
add
pop
xor
rclb
je
test
sbb
shr
and
shlb
loopne
rol
mov
dec
pop
jge
or
out
or
sub
jp
sub
push
add
cmp
mov
mov
dec
test
fistps
sub
jne
mov
add
add
mov
pushl
lea
jmp
push
ficoml
ljmp
fldt
repz
imul
add
push
cmp
push
dec
inc
ret
ret
stos
or
cmpsb
in
mov
inc
test
lahf
xor
add
fstpl
pop
cmp
shl
aaa
xchg
xor
fmulp
out
fisttpll
mov
mov
sbb
mov
mov
add
fdiv
jne
add
add
xchg
xchg
ficoml
stc
cmp
xor
cmpsl
mov
dec
loopne
lcall
jb
pop
mov
aas
gs
add
adc
js
pand
pop
sub
lods
xchg
clc
mov
jge
test
fcompl
push
ss
arpl
jbe
cmp
dec
fsub
movsl
das
jae
jnp
mov
mov
ret
shll
and
xor
cmpb
mov
mov
les
imul
cmp
jbe
outsl
fcmovu
sahf
add
push
aam
cmp
sbb
adc
xor
jo
jl
pop
sti
xorb
scas
xchg
loopne
cmpsb
int
add
mov
xchg
retw
adc
jp
cwtl
adc
mov
neg
push
out
fisubrl
xchg
jno
insb
sahf
mov
lret
enter
lods
fiaddl
lahf
pop
mov
pop
movsl
imul
pop
ja
out
mov
add
or
fbstp
dec
pop
fwait
mov
jae
stc
push
add
lea
jb
push
lea
jmp
jmp
lods
pop
mov
or
jg
pop
fbld
sbb
cmc
icebp
jp
imul
xchg
leave
fdivrl
popa
xor
andb
mov
fistps
adc
jl
in
push
mov
or
push
push
ja
mov
sarl
sub
or
in
arpl
sbb
pushf
loop
jmp
and
inc
cmp
cli
lods
btr
not
rol
ror
jmp
mov
lea
lahf
movzbl
mov
call
pusha
pusha
push
lea
jbe
movsbw
jmp
push
cli
mov
test
add
dec
add
push
iret
mov
dec
lds
push
dec
lds
pop
ret
sub
orl
sub
das
xorl
std
mov
cmp
nop
lea
mov
stc
cmpsl
addl
std
testb
vaddps
xlat
movl
dec
shll
imul
dec
xchg
fdivs
xchg
mov
fmull
mov
dec
push
add
inc
inc
nop
rcll
mov
add
jbe
mov
lds
insb
lahf
add
es
test
aad
dec
in
pop
jnp
xor
and
lds
or
aaa
jecxz
and
cmp
clc
in
xor
xchg
lret
sbb
xchg
popf
push
std
outsl
popf
pop
clc
aas
or
test
jge
or
add
jbe
dec
outsb
push
jb
jo
jb
dec
gs
fs
jno
xlat
cmc
jae
push
mov
out
xchg
push
dec
adc
pop
pop
push
push
sahf
andb
sbb
outsb
js
dec
test
cmp
jnp
out
sbb
hlt
stos
xchg
int3
inc
dec
xor
test
add
lds
push
cmp
cli
ja
mov
cli
shlb
out
out
test
adc
fmuls
cmp
cwtl
ficompl
in
js
js
add
pusha
jmp
dec
out
push
cmc
pop
psubb
adc
insl
insb
je
xor
scas
mov
outsl
iret
ret
out
test
lahf
jnp
add
repnz
sub
pop
push
std
cs
add
sub
push
call
cmp
movsb
in
loope
decl
imul
dec
repz
push
mov
loopne
insb
jg
in
aam
push
mov
out
dec
dec
leave
dec
jle
add
pop
add
notl
mov
adc
movsl
add
push
push
fcompl
lds
adc
int3
das
int3
jp
adcb
xchg
sbb
push
xchg
cs
dec
iret
mov
das
pop
jl
xchg
hlt
mov
xchg
fs
pop
cmp
or
lea
push
test
std
jg
sahf
xchg
das
xor
cltd
dec
jae
sahf
outsb
lret
sbb
sbb
push
cmp
mov
shrl
fisttps
movsb
nop
sbb
pop
xchg
nop
inc
cltd
lock
adc
jg
and
push
daa
add
lcall
and
mov
in
mov
mov
and
mov
jge
mov
and
sbb
mull
mov
pop
jne
cld
test
xchg
imul
inc
jecxz
pop
js
jbe
dec
fistl
aas
fwait
in
dec
jno
xchg
arpl
xor
cmp
int3
cmp
hlt
jae
xor
clc
ret
or
pop
arpl
cs
repz
test
mov
not
add
seta
push
cmp
setae
not
pusha
pop
mov
pushf
lea
jmp
sbb
or
jg
aam
imul
notl
mov
push
nop
mov
dec
cltd
sbb
pop
mov
mov
fiaddl
addl
fnclex
pushf
imul
lds
pushf
imul
sbb
jo
pop
ficompl
dec
mov
push
sahf
loop
std
cmp
jmp
divl
jle
mov
mov
inc
push
pop
adc
add
pushf
movsbw
mov
not
jmp
lea
jne
bswap
push
movb
movzbw
mov
movsbw
bswap
pushf
pop
lea
call
jns
pop
mov
push
xchg
cmp
shrl
sbb
hlt
jl
inc
dec
xchg
dec
jae
dec
and
mov
andb
clc
repnz
pop
inc
cmp
cli
inc
and
leave
jns
cmp
xchg
leave
inc
and
and
outsb
mov
imul
cmp
mov
push
rcr
fs
data16
mov
insl
je
add
test
or
xchg
bswap
mov
setp
xchg
inc
mov
jmp
jns
arpl
repz
mov
andb
pop
pop
and
popf
incl
add
cltd
jae
dec
jne
or
insl
add
mov
mov
bound
add
inc
inc
push
lea
leave
cmp
insb
int3
in
xchg
mov
cmp
jp
into
lahf
add
push
and
lcall
lods
mov
shll
das
outsb
cli
cmpb
add
xchg
add
xor
pop
js
loope
xchg
push
inc
sti
data16
cwtl
test
hlt
push
mov
out
cmpsb
sbb
aam
pop
in
inc
or
mov
mov
lea
gs
lret
xchg
inc
mov
jne
xchg
jle
adc
leave
dec
push
cs
int3
dec
jno
jl
mov
inc
inc
stc
daa
cmp
pop
mov
ljmp
movsl
jmp
stos
out
jns
cwtl
add
call
addr16
fxch
addl
rcll
sub
mov
fdivrl
adc
lods
mov
scas
mov
fs
mov
adc
dec
dec
dec
xchg
je
mov
jnp
jecxz
mov
push
xor
and
pop
popa
jae
mov
rol
repnz
sbb
testb
jnp
pop
push
inc
nop
sub
jecxz
jne
xchg
repnz
sbb
pushf
mov
out
cmc
cli
xor
add
mov
add
mulb
fimull
and
or
cmp
pop
pop
jecxz
fwait
lea
je
push
xor
sahf
mov
pop
mov
mov
add
cmp
jle
mov
sbb
aaa
or
inc
sub
outsl
and
or
xchg
in
mov
pusha
dec
in
add
mov
and
pushl
test
movsb
leave
mov
incb
xchg
lds
shl
jmp
pushf
lea
jae
pushf
clc
pushf
test
add
pushl
push
call
bswap
pop
pusha
mov
pushf
pushl
ret
pushf
lea
call
call
insl
adc
test
scas
xor
ret
xchg
sarl
cmpsb
push
mov
adc
loope
mov
add
pop
push
leave
std
and
adc
gs
push
dec
sub
and
out
in
repnz
xchg
loope
add
pushf
idivl
or
pop
repnz
jp
lret
pop
in
out
jb
cmc
cmp
fcoms
add
movl
movb
lea
jmp
fwait
push
cmp
fldcw
hlt
pop
es
roll
mov
and
mov
mov
inc
mov
fdivrl
push
addl
mov
inc
jecxz
mov
or
dec
outsb
int3
or
cld
push
pminub
pushaw
mov
outsb
push
mov
and
hlt
mov
mov
loopne
out
push
jmp
pop
pop
out
pop
gs
stc
jo
je
add
jmp
mov
movb
sbb
cmp
clc
cmp
pushf
lea
add
cmc
test
clc
bt
push
neg
adc
push
ror
lea
cmc
bt
mov
or
not
sbb
push
pushf
add
mov
call
aad
jmp
adc
out
push
mov
addl
je
dec
or
dec
in
inc
hlt
std
jae
or
outsb
aam
mov
in
rorl
loop
cli
ret
push
pop
xchg
inc
sbb
push
push
aaa
je
adcl
ss
inc
test
ljmp
lds
adc
lret
paddsb
xchg
dec
and
in
call
scas
mov
shrb
iret
and
push
pop
aam
loop
frstor
ss
int3
fwait
adcb
add
in
sbb
into
push
push
sbb
ljmp
mov
or
mov
sub
cmpsb
add
popa
imul
mov
sub
mov
call
rcll
cwtl
loope
aaa
mov
add
push
test
inc
sub
rorb
add
lahf
sbb
inc
push
or
test
push
mov
sub
in
xor
lods
mov
in
test
push
xor
mov
cwtl
pop
lea
and
std
inc
or
push
pusha
pop
push
dec
jne
jnp
dec
call
fildll
cmp
sub
out
aas
mov
dec
push
push
push
sub
test
mov
xor
jl
js
in
rcrb
cs
inc
xchg
inc
imulb
dec
xchg
in
mov
cwtl
push
call
xchg
pushf
mov
jne
mov
push
sbb
in
andl
jp
fcomp
fbld
cmp
jl
in
test
into
fwait
fs
push
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
mov
jmp
in
cltd
push
pop
or
xchg
mov
test
sub
add
mov
sbb
jbe
divl
sti
jnp
mov
ret
mov
test
cmp
lds
out
fs
es
ja
cmp
jno
sar
jle
inc
repnz
rorl
fbld
mov
mov
sub
sbb
mov
in
adc
pop
add
ja
inc
push
test
data16
out
mov
cwtl
and
pop
push
and
loopne
add
out
stos
mov
xor
mov
repnz
stos
cmpsl
xor
test
es
pop
dec
imul
push
xor
in
loop
jmp
stc
mov
pop
jne
lods
pusha
ret
add
daa
jg
das
idiv
pop
add
mov
insl
jnp
xchg
iret
push
icebp
daa
xchg
sti
bound
and
jmp
call
xchg
bound
pop
xchg
pop
lods
push
lret
sti
push
jle
lret
mov
inc
in
xchg
push
rep
sbb
push
adc
ret
sub
mov
inc
dec
add
aaa
cmp
mov
sbb
push
push
mov
lods
out
out
cmp
insl
iret
enter
scas
pusha
in
jno
add
sbb
add
jp
into
mov
push
fwait
and
addr16
inc
add
lods
movb
pusha
clc
ror
pusha
pushf
mov
mov
inc
cmc
clc
xor
pushf
cmc
clc
add
call
adc
xor
je
fstps
and
jl
dec
adc
flds
add
adc
movsl
add
mov
or
iret
mov
ljmp
js
lea
ja
mov
sahf
std
paddq
repz
sbb
push
addl
and
dec
mov
testb
cs
cwtl
pushf
cli
js
filds
cmp
sar
inc
jge
int3
add
add
test
xor
mov
adc
mov
mov
inc
enter
xchg
pusha
pop
pusha
add
or
push
testl
mov
pop
enter
push
aam
mov
push
sub
shrb
jge
xchg
add
pop
aad
pop
sbb
xchg
int
lods
scas
inc
push
or
mov
mov
rclb
and
shl
add
pushf
mov
lea
push
pushf
movb
mov
pusha
call
sub
mov
mov
or
jg
mov
jp
js
jae
mov
popa
fidivl
ficoml
add
test
test
idivl
scas
pop
dec
int3
jl
xchg
data16
xchg
xchg
mov
mov
jle
xchg
insb
sub
jmp
shlb
jnp
mov
inc
adc
pop
sub
add
xchg
clc
jb
std
pcmpeqw
push
repz
aas
mov
push
pop
adc
mov
dec
mov
ljmp
pop
sub
int3
mov
push
dec
jbe
cli
fcomps
jmp
aaa
inc
jecxz
jp
mov
lret
dec
test
out
ja
adc
lcall
sahf
fs
push
xchg
xor
prefetch
gs
add
lea
mull
or
fucomi
icebp
xor
rorl
jnp
aaa
xlat
setbe
insb
dec
xchg
lds
lret
jbe
add
out
in
lcall
aaa
div
xor
mov
mov
adc
mov
push
fwait
pop
in
dec
movsb
insl
sub
sbb
or
call
jmp
lea
call
push
lea
jb
and
clc
movzbl
pushf
mov
bt
shl
mov
add
pushf
pushf
pushf
lea
call
pushf
jmp
into
lods
fstpt
pop
out
sub
push
pop
push
pop
arpl
imul
and
jge
pop
xchg
adcb
cmpb
jl
ss
clc
lret
mov
es
mov
lret
ja
hlt
adc
enter
mov
cmpsl
shl
pop
sub
jg
inc
sbb
mov
sbb
push
sbb
dec
in
test
loop
push
mov
adc
scas
les
push
in
xchg
in
pushf
scas
cltd
fadd
popa
sbb
scas
or
dec
jge
sbb
fldcw
sahf
cltd
xchg
jae
ljmp
dec
fs
aas
adc
cltd
mov
aaa
mov
push
sbb
addl
adc
xchg
push
jg
pop
loope
ss
sub
loop
xchg
idivb
push
push
aam
les
dec
int
int
cs
arpl
mov
je
and
sbb
cmpsl
jge
sub
or
inc
ret
iret
or
sbb
mov
push
push
sbb
cmc
mov
lock
xchg
jae
loop
mov
lds
inc
sub
inc
je
mov
mov
les
sbb
xchg
xchg
imull
mull
add
mov
jl
pushf
mov
lds
sub
mov
cmpsb
pop
mov
inc
inc
add
add
mov
dec
mov
add
add
add
jmp
pop
addl
and
cmp
lea
ret
leave
add
into
add
sub
cmp
xchg
pop
test
add
rcll
xchg
inc
or
adc
fsubr
push
jno
movsl
add
push
aam
xchg
adc
nop
lcall
push
dec
addr16
adc
out
add
jne
or
cwtl
in
sub
mov
xor
sbb
test
xchg
in
clc
and
adc
shl
aaa
int3
loop
xor
jo
push
cmp
jge
cmp
sbb
pushf
loope
or
popf
sub
mov
loope
add
in
aam
pushf
arpl
int3
pop
push
in
lcall
xorl
mov
pop
add
imull
dec
fimull
dec
lea
push
adc
and
arpl
cmp
test
add
mov
pop
lock
mov
jnp
xchg
aad
push
lcall
push
shlb
sub
inc
icebp
mov
fdivrl
sarl
cmp
not
repz
push
test
jge
out
test
jge
fidivl
insb
cmp
fimull
mov
sbb
frstor
xor
mov
jo
lea
xchg
in
std
repz
lret
call
mov
push
clc
adc
push
add
orb
int3
sbb
int3
lea
into
popf
pusha
pusha
not
jmp
add
add
dec
add
mov
add
pop
add
inc
pop
add
add
add
stos
push
into
xchg
adc
sarl
lcall
xor
mov
jmp
lock
sarl
xor
je
xor
sbb
mov
mov
lret
int3
or
mov
cld
mov
stc
adc
repnz
jmp
lret
jmp
js
sub
sbb
xor
dec
push
mov
or
lret
adc
movsl
mov
test
pop
or
mov
movb
pushl
pusha
lea
jmp
lods
rcll
mov
cld
sub
orl
rcll
xchg
pop
mov
mov
cmc
adc
enter
jg
pop
clc
mov
jno
jnp
add
es
pop
rolb
mov
mov
or
fisubs
mov
push
mov
jmp
jg
adc
push
aaa
or
mov
mov
and
add
test
push
insb
xor
pop
lret
sub
mov
and
fistps
movsl
and
or
mov
pop
or
cmc
pop
cmc
outsl
lods
lods
test
inc
add
iret
out
inc
and
mov
push
xor
and
movsl
lock
jecxz
inc
xchg
mov
aad
jns
dec
mov
mov
xor
popa
push
ss
cmc
jp
pop
daa
js
nop
mov
cwtl
pop
aaa
rcl
rcr
xor
xor
lock
mov
fnstcw
jo
lret
fcoml
mov
sti
jmp
sahf
hlt
jae
lea
lret
push
rcll
cld
add
fstpt
lret
dec
jno
cs
push
xchg
into
sbb
xchg
icebp
in
loopne
in
popa
sub
sahf
rcl
pxor
cmc
inc
pop
popf
dec
sub
loope
fidivrl
enter
mov
xor
nop
inc
fldl
push
jae
mull
call
rol
dec
jl
addl
fstpt
hlt
mov
sti
ret
in
addl
push
mov
outsb
jp
cli
pop
add
or
shlb
and
fldenv
fs
mov
in
or
in
aas
in
mov
sbb
loop
and
dec
out
loopne
pop
clc
push
ss
mov
adc
push
fwait
in
fwait
add
xchg
mov
jnp
fldenv
cmp
pop
es
lret
dec
rorb
loopne
or
clc
test
or
repz
or
cmc
ret
push
mov
inc
mov
cmp
bswap
lea
jmp
ret
jl
mov
rclb
ljmp
fdivrl
aas
sub
mov
jle
js
sti
dec
lds
je
xchg
shlb
divl
mov
or
popf
add
call
lea
jae
pusha
mov
push
lea
jmp
lea
jb
jmp
ret
gs
pop
jns
aas
gs
inc
pop
fsubs
test
scas
mov
rolb
mov
jmp
mov
push
insl
add
mov
sbb
inc
setp
inc
jg
push
shrl
sbb
push
scas
inc
mov
sub
testb
lods
and
mov
nop
jns
mov
push
dec
push
out
je
test
sub
incb
fnstsw
push
loope
cli
adc
pop
pop
pop
loope
pop
lods
imulb
roll
test
fisttps
cs
scas
rclb
inc
mov
and
mov
sbb
or
sub
jmp
out
mov
ljmp
push
mov
into
jl
cld
lret
repz
sbb
pop
inc
rcl
test
inc
and
sbb
into
pushf
and
add
fwait
mov
jge
aaa
pop
add
add
stos
sub
gs
test
imul
or
fs
jne
bswap
mov
test
sub
bts
mov
stc
jmp
mov
arpl
and
jns
adc
loopne
clc
sub
dec
arpl
sub
addr16
jo
push
push
or
loopne
pop
sahf
mov
pop
sbb
insl
into
fidivrl
jns
imul
movsl
push
pop
push
imul
jnp
inc
cmp
aam
std
mov
xchg
pop
pop
cmp
pushf
mov
inc
add
cwtl
fldcw
sbb
stc
xchg
xlat
and
test
js
aaa
lock
ss
ljmp
jo
jp
cmp
dec
iret
mov
cwtl
popa
sub
pushf
jle
mov
mov
inc
xchg
push
dec
and
notb
rolb
mov
pop
rorl
stos
mov
xchg
insl
rorb
lcall
inc
out
jb
dec
jns
inc
jge
lahf
rclb
jbe
push
aas
test
je
push
jle
jg
les
mov
add
mov
lea
jne
movsbw
movb
not
push
lea
not
lea
push
call
mov
jmp
jae
jecxz
xor
or
leave
dec
leave
add
xchg
inc
dec
add
pop
jnp
outsl
bound
add
lret
lahf
and
dec
fcomps
jecxz
push
adc
inc
ljmp
pop
mov
fwait
negl
pop
scas
shr
enter
lret
cmp
xorb
add
mov
repnz
xorl
jo
aaa
ds
rol
add
sti
sbb
xchg
xor
cmp
cmp
or
xchg
adc
dec
pop
inc
gs
inc
and
mov
xor
ficoms
sti
mov
jno
xor
bound
test
xchg
jb
daa
mov
pop
out
test
push
les
jne
lea
push
dec
sbb
sbb
mov
sub
fcomip
and
mov
mov
xlat
std
sbb
push
lods
imul
jp
xchg
add
add
cwtl
jne
jmp
mov
mov
add
adc
cmp
ljmp
mov
leave
sub
push
loop
addr16
pop
mov
or
repz
mov
fldt
leave
ror
in
test
js
pop
pop
in
cmp
push
inc
mov
dec
jnp
pop
dec
je
xorb
add
aas
inc
xchg
sar
adcb
frstor
mov
std
mov
xchg
shl
cmc
cmp
pushf
movb
pushl
jmp
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
outsb
and
dec
and
jge
xchg
adc
push
adc
jo
les
xor
push
setp
cmp
ss
jae
fiadds
xchg
clc
cmpsb
shlb
xchg
scas
inc
mov
lds
notl
lret
imul
add
jg
adc
fcoms
test
sub
stc
xor
test
inc
sub
jns
pushf
lea
call
jmp
movl
push
lea
jmp
stos
push
pop
leave
sub
add
adc
mov
iret
dec
rcl
dec
sti
jle
into
das
cld
mov
insl
xlat
and
stos
dec
stos
xor
mov
sub
sahf
lds
xor
out
sti
add
fwait
xchg
add
sub
ss
dec
push
xchg
jl
scas
test
add
loope
test
rcrl
fs
jae
les
mov
lds
push
sarl
cmp
lods
sahf
xchg
xchg
mov
pop
sti
fistpl
push
mov
mov
xor
xor
int3
dec
enter
aam
lahf
lock
pop
inc
and
pop
xor
ss
dec
mov
mov
xchg
mov
jg
stos
xor
das
lahf
jo
cwtl
test
dec
mov
fcompl
cmp
cld
mov
lods
add
inc
in
add
cmp
and
cmp
xor
add
rcrl
jg
mov
xchg
add
cmp
int
rcl
xchg
ficomps
mov
clc
xchg
imul
lcall
xchg
out
cs
push
mov
ss
jnp
icebp
lea
xor
xor
or
hlt
lods
ds
pusha
adc
cld
stos
mov
js
mov
cmp
sbb
xchg
fcomps
jl
out
jae
add
push
push
adc
addl
mov
xchg
dec
aam
sbb
mov
jg
rorb
mov
and
outsl
pusha
or
rcll
add
push
paddq
push
adc
cli
cli
inc
loop
jo
sbb
pop
xchg
push
and
and
outsb
cwtl
call
hlt
jmp
mov
or
cmpsl
out
xchg
mov
pusha
mov
or
std
aam
ss
lods
movsb
arpl
inc
es
test
jb
clc
adc
fstpt
cmp
sbb
test
xchg
shlb
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
and
call
lds
mov
adc
add
inc
or
push
push
xchg
push
fistpl
imul
or
icebp
hlt
mov
mov
insl
mov
xchg
or
and
in
lcall
mov
mov
rol
mov
clc
jg
push
popf
mov
xlat
cmpsl
cmpsl
pushl
mov
mov
mov
push
adc
add
icebp
sahf
movsl
dec
add
xor
fildll
mov
loop
in
cmpsl
and
push
aad
mov
sarb
mov
mov
sub
xchg
cmpsl
ror
leave
lcall
outsl
jo
aas
pushf
sub
movsl
sub
mull
sub
popf
jg
andl
push
jno
xchg
jnp
adc
mov
inc
imul
lret
xchg
push
push
test
test
shrl
movsl
jbe
xchg
fists
jae
push
lahf
fwait
addr16
sub
sub
jmp
sahf
sub
pop
jp
mov
ror
scas
imul
lock
aas
mov
dec
xor
out
in
mov
sub
cwtl
xchg
jnp
or
enter
add
lods
and
cmp
ficomps
out
pop
jmp
push
mov
and
push
dec
ror
dec
sbb
xchg
cmp
cwtl
enter
fwait
sub
add
mov
or
mov
jecxz
imul
push
outsb
jne
sbb
test
iret
adc
adc
clc
add
or
xchg
dec
add
cmp
jno
xchg
adc
mov
leave
sub
pushf
arpl
aad
push
xchg
lcall
push
add
jle
test
jle
inc
movsb
jnp
xor
rcrl
pushf
xlat
mov
xchg
aas
jge
adc
daa
movb
fucomp
xchg
gs
mov
push
jbe
sbb
mov
popf
movsl
call
loopne
scas
xor
and
or
adc
xchg
jne,pt
rorb
ret
fbstp
xchg
shlb
dec
fbstp
jg
ror
stc
add
push
adc
das
sbb
mov
movsl
cmp
sub
loopne
fnstsw
jns
pop
ficompl
mov
dec
inc
xchg
xchg
mov
ljmp
fisubrs
push
sbb
call
sub
flds
push
loop
mov
testb
mov
dec
leave
adc
scas
loope
mov
inc
jle
aaa
inc
or
imul
dec
dec
sbb
les
xchg
lock
cmp
pop
sbb
testb
std
or
push
mov
add
cmp
rcr
jle
push
pop
cmpsl
dec
or
mov
cmp
sbb
jmp
pushf
pusha
int
jae
pop
xor
and
scas
out
sbb
mov
pop
or
jge
inc
stos
into
mov
rorl
inc
dec
or
ret
inc
les
sub
push
outsl
cmp
fsubs
movsb
popa
xor
mov
inc
add
es
in
sbb
enter
inc
out
pop
movsl
sub
fndisi(8087
test
adcl
or
push
mov
pop
lahf
pop
popl
xchg
hlt
sbb
jp
movsl
fldenv
mov
repnz
sub
dec
dec
shrb
imul
stos
int3
ljmp
or
loopne
inc
push
push
les
adc
gs
fucomip
test
popf
fidivrl
xchg
jg
mov
mov
cli
inc
mov
push
scas
xchg
sbb
cld
test
inc
or
jae
sub
stos
shlb
jecxz
sbb
fistl
ljmp
fs
pop
dec
ss
test
test
push
lea
je
xor
mov
mov
bswap
stc
add
test
cmc
sbb
mov
test
test
call
or
mov
lods
lock
es
scas
hlt
clc
mov
mov
lahf
push
shll
fs
mov
cmpsl
pop
aam
ljmp
mov
test
cmp
insb
sbb
insl
fsubs
fwait
pop
movsb
mov
test
loopne
insb
adc
in
call
sahf
adc
mov
int
shl
push
xlat
out
stc
repz
adc
pop
fisttpl
push
mov
outsb
das
jmp
outsl
dec
lret
xchg
gs
add
push
pop
sahf
sub
cld
jp
add
or
sahf
xchg
out
dec
cmpsb
xor
sub
add
outsb
adc
or
jnp
jnp
xchg
pusha
clc
jnp
out
jge
aam
shll
loope
lahf
add
mov
fnstsw
adc
fldt
das
shlb
outsl
lret
ja
ds
test
pusha
jg
push
out
sarl
pop
stos
subb
pusha
pop
fstpl
popa
mov
sti
andb
loope
xor
mov
repz
cld
sub
pop
rcll
sahf
and
pop
adc
xor
inc
dec
mov
push
pop
inc
sbb
aas
pop
test
mov
movsl
or
dec
xor
rorb
push
xor
sbb
aad
clc
cwtl
je
insl
xor
push
cmpl
xor
std
loop
mov
xlat
sub
test
aad
jo
mov
add
sbb
arpl
mov
jae
outsl
add
movw
lea
jne
pushf
mov
pushl
movb
pushl
ret
pushf
pusha
pusha
jmp
jg
cmpsb
pop
mov
jo
leave
rorb
lcall
push
pop
jp
jmp
dec
mov
add
mov
xchg
jae
mov
enter
inc
ja
dec
jp
je
pushf
fnsave
push
dec
jnp
testb
in
fidivl
mov
push
cmpsl
lret
fcompl
lret
sub
jl
cmp
cs
mov
mov
imul
add
sub
cmp
mov
pminub
or
insl
loopne
xchg
or
push
loope
repnz
divb
xor
in
add
mov
pushf
rcr
mov
pusha
cmc
movl
shr
call
pushf
call
popa
xchg
or
lea
das
mov
test
jl
jg
js
cmp
adc
xor
in
loope
xor
les
push
in
pop
jae
lock
fs
pop
fchs
loope
aam
divl
and
pop
cld
or
inc
rorl
pop
xor
pop
mov
jle
mov
mov
cmp
outsb
test
push
or
enter
scas
adc
ss
movsb
out
mov
or
mov
mov
push
imul
xor
test
mov
xchg
stc
pop
jmp
fs
jmp
dec
mov
enter
lock
sub
nop
das
mov
ss
aas
push
sti
cli
jp
cmp
and
dec
dec
and
test
js
push
pop
notl
mov
sbb
xor
ss
mov
cli
pop
icebp
push
mov
in
lcall
cwtl
and
ds
xchg
xchg
aas
push
pusha
push
shll
insl
out
ljmp
enter
pushf
cwtl
sbb
push
add
sbb
cmp
inc
mov
dec
shl
mov
setnp
bswap
sub
add
mov
rdtsc
daa
bt
mov
shr
xor
sub
rcr
and
aaa
daa
seta
mov
test
cmc
push
shl
pushf
jmp
lea
ja
push
jmp
push
cmpb
ficomps
ret
mov
pop
bound
mov
dec
out
mov
jo
aam
aam
pop
mov
xchg
hlt
fstpl
or
mov
clc
mov
rolb
stc
movsl
mov
push
push
adc
jne
and
or
movsb
pushf
mov
jg
stc
inc
or
lods
add
movw
push
movl
pushl
movw
push
call
pusha
lea
ja
stc
imul
stc
call
pusha
movl
pushf
pushl
popl
pushf
pushl
pushf
pushl
ret
xor
and
mov
cmpsl
jns
sub
sub
outsb
push
sbbl
or
mov
xor
aam
jnp
mulb
dec
mov
popf
rorl
ljmp
mov
dec
adc
push
orl
inc
shl
in
movsb
cwtl
lods
aad
sub
cmpsb
or
lret
mov
xchg
insl
pop
fwait
jle
jnp
sub
sub
jp
arpl
data16
and
pop
movsb
sub
in
mov
lret
adc
je
mov
xchg
xchg
out
push
cmpsl
xchg
jne
ja
iret
cmp
fdivrs
xor
adc
movsl
les
es
or
or
dec
or
addr16
push
shll
push
fstpl
movsb
jo
xchg
inc
lds
shlb
cmp
sbb
test
addl
outsb
jecxz
and
cmc
repz
into
clc
or
jb
repz
stos
and
or
sti
inc
cld
ror
sbb
rcl
sahf
mov
add
pushl
adc
jmp
rdtsc
daa
adc
pop
and
btc
pop
not
sub
pop
bswap
sub
xchg
sbb
pop
cmc
dec
stc
mov
pop
xadd
neg
inc
cmp
pop
sbb
add
lea
pushf
movsbw
mov
movb
pusha
pushl
ret
movl
push
mov
lea
jmp
movsbw
jmp
cmp
clc
mov
cmp
clc
stc
cmp
push
call
adc
cmp
xchg
ljmp
and
movsl
call
lcall
mov
fidivrs
fistpll
sti
mov
or
adc
popa
pop
fdivr
icebp
idivl
adc
notl
or
ficoms
fstps
aad
sub
cmp
arpl
bound
xlat
mov
pushf
cmp
lods
pop
lcall
ljmp
or
pop
xor
mov
divb
adc
add
lea
pusha
movb
mov
lea
call
pusha
lea
jb
aam
movzbl
shl
shr
bts
pushf
imul
stc
call
movw
pushl
lea
jae
movsbw
movzbw
call
movsbw
call
dec
pusha
pop
lret
movsb
sahf
mov
call
imul
and
movsl
cwtl
ss
jne
and
sbb
insl
leave
sbb
jl
sub
sub
imul
pop
adc
sahf
lcall
pop
cmpsb
inc
out
xor
sbb
mov
aad
mov
push
cwtl
ljmp
adcb
mov
pushl
pushl
ret
sbb
add
movsb
or
sub
push
push
mov
xchg
rcll
aam
or
hlt
and
pop
fistpll
iret
ffreep
inc
in
and
insl
xchg
ret
out
out
int
rolb
clc
mov
mov
pop
repz
fiadds
xchg
icebp
aad
in
loop
div
adc
mov
cmp
js
addr16
sbb
push
call
fcmovnbe
push
jge
dec
xchg
out
loop
inc
ds
or
fwait
lret
vpackuswb
mov
inc
stos
mov
aaa
jl
mov
std
jg
cli
add
xchg
test
dec
add
mov
ljmp
lcall
in
pop
js
mov
cmp
fisttpll
push
xchg
jne
in
add
mov
jno
xchg
call
cmp
popf
adc
and
arpl
fstpt
cmpsb
outsb
stos
ficoml
aaa
sti
jecxz
pop
or
push
pushf
xchg
push
fbld
add
push
in
sub
add
xchg
xor
lods
movsb
jmp
or
dec
xchg
or
jecxz
cltd
cmp
inc
out
push
push
shrb
add
pop
daa
or
outsb
out
dec
repz
lods
mov
dec
fnsave
or
lds
lods
stos
imul
jp
aaa
jo
mov
inc
pop
xchg
in
movsl
add
xlat
add
jnp
lods
cmp
push
pop
jbe
inc
cmp
lret
adcb
jb
xchg
scas
push
movsl
pop
adc
loop
imul
in
mov
add
cpuid
in
dec
lret
or
mov
mov
jmp
out
repz
ficoms
xchg
xor
sub
lahf
jnp
mov
and
inc
jae
ja
mov
pop
int3
dec
sahf
push
repz
mov
sub
or
pop
xor
rorl
jmp
jg
push
push
push
xor
sbb
loop
shlb
in
jge
or
in
xor
and
popa
mov
or
inc
iret
gs
repnz
rol
sbb
push
mov
xchg
in
push
pushf
stc
push
adc
pop
add
inc
cmp
adc
adc
rorl
jle,pt
mov
gs
xor
xchg
push
cmpsb
add
mov
pushl
pushf
mov
pushf
lea
jmp
stc
imul
clc
bsf
rol
inc
lea
movzbw
push
shrd
not
push
test
shr
mov
bt
shl
movzbw
not
mov
pushf
pusha
pushf
cmp
movw
movb
push
lea
jb
shl
shr
push
movsbl
mov
sar
or
add
xchg
not
pusha
movb
mov
test
xadd
shr
sar
add
lea
cwtl
movzbw
setb
pop
push
not
lea
pusha
call
aaa
aad
dec
insl
push
pop
add
rorl
sbb
dec
inc
and
js
sbb
pushf
push
pop
xchg
push
insl
cmp
push
xchg
and
scas
or
adc
mov
sbb
jle
push
cmp
rcrl
xlat
push
adc
push
ficoms
test
bound
test
iret
out
in
jmp
iret
icebp
icebp
and
mov
push
pop
push
sub
leave
lods
sbb
push
cmpl
imul
cmp
enter
enter
xchg
rcl
aam
fisttpl
out
clc
andb
ret
je
popa
repz
add
xor
insl
sbb
lret
lds
pop
js
test
sub
fldt
popa
in
add
add
adc
out
sub
fcoml
mov
rcrb
imulb
ret
fwait
pop
add
xor
xchg
imul
adc
aaa
divb
push
sub
sub
stos
out
lock
add
mov
shrl
jbe
daa
jb
inc
cwtl
push
popf
popf
jecxz
scas
sub
cmp
cs
insb
les
lock
xlat
sub
lret
xor
dec
aad
dec
testb
push
repnz
outsl
dec
xor
push
sub
jns
fimuls
inc
dec
jb
mov
sti
and
xor
mov
sbb
pop
orl
cwtl
shlb
inc
mov
lahf
xchg
in
jae
cwtl
loope
and
jno
xor
push
xchg
fstps
pop
pop
and
push
lods
mov
push
add
out
xchg
or
hlt
js
sbb
add
or
xchg
ljmp
mov
adcl
xchg
push
flds
xchg
push
xchg
lcall
sub
inc
or
and
sbb
xchg
jge
loop
popf
lods
je
call
xchg
push
aaa
mov
jg
jecxz
out
mov
inc
adc
sbb
pop
in
mov
aad
inc
ficompl
sbb
fwait
and
and
add
add
lea
jle
push
pushf
mov
pushf
pushf
pushf
lea
jmp
jg
cwtl
push
cmpsb
cs
mov
test
movsl
push
iret
xchg
out
push
cmpsl
cwtl
mov
pop
fisubrl
mov
mov
into
sub
push
in
cmp
dec
inc
ud2
ret
out
xchg
pushf
push
push
test
push
cli
aas
xor
movb
push
jne
arpl
cmp
ficompl
adc
lods
gs
test
stc
xlat
add
add
mov
mov
xchg
jbe
cs
mov
iret
insb
sub
sbb
cld
nop
subb
inc
imul
mov
fisttps
sbb
push
or
lea
cmp
pop
push
mov
add
jns
dec
xor
mov
pop
push
fwait
push
movsb
sub
cmpsl
lret
ret
adc
mov
cmp
push
pop
pop
mov
std
pop
dec
or
int
or
rolb
test
add
fs
push
enter
ja
add
adc
aaa
add
pop
pusha
ja
in
or
pop
inc
sbb
jecxz
pop
aam
jns
scas
cmc
jl
sub
xchg
test
cmp
into
shll
sbb
shrb
xlat
ljmp
jbe
dec
testl
mov
pop
dec
andl
pop
mov
pop
loopne
jae
adc
sbb
dec
rclb
pop
xchg
adc
std
insb
cmp
ss
fistl
dec
leave
push
add
repnz
inc
push
test
push
mov
movsb
stos
cmp
ret
adc
pop
cmpsl
mov
fdivrs
add
adc
lret
sub
adc
repnz
int
push
cs
mulb
push
sbb
sbb
sub
dec
addr16
rcr
and
inc
outsb
int
pop
loopne
sti
ja
sbb
pop
sub
aam
loopne
rep
xor
mov
jmp
or
add
xor
test
mov
or
xchg
sub
push
or
js
push
push
addr16
dec
cld
testb
cld
mov
mov
mov
imul
inc
and
fnstsw
std
and
das
mov
enter
imul
sbb
adc
aam
xlat
stos
jae
das
sub
add
cs
daa
test
xchg
xchg
mov
mov
repz
jns
push
out
loopne
inc
xchg
pop
mov
adc
mov
out
stc
jns
mov
pop
add
popa
inc
cld
scas
out
adc
rclb
xchg
pop
pop
xchg
pushf
sbb
mov
mov
xor
add
out
sub
movsb
outsb
sbb
dec
notl
in
sub
ljmp
pop
out
xchg
xor
pop
adc
inc
cmpsb
loope
sbb
mov
fisttps
into
jge,pt
mov
xorl
jl
out
xor
add
int3
xchg
dec
nop
pop
enter
ja
divb
addl
add
pop
mov
call
xor
sar
pop
ret
andl
imul
fnstsw
out
movsb
dec
jnp
sbb
sti
aas
inc
dec
add
mov
pop
pop
in
jnp
push
lods
pusha
cmpsl
test
jae
mov
fstpt
mov
mov
pop
mov
out
nop
xchg
or
and
stc
pop
dec
sub
bound
mov
mov
mov
xor
xchg
mov
mov
repnz
adc
xchg
call
scas
fsts
outsb
aaa
in
add
pop
data16
cmp
je
adc
xchg
xchg
sbb
sbb
inc
xorl
arpl
and
popf
adc
lock
sbb
jns
out
push
xchg
sub
mov
sbb
xchg
lahf
push
enter
push
lahf
dec
addr16
cmp
cmp
sub
jae
sarl
gs
mov
xor
lock
jl
adc
filds
dec
repnz
aaa
mov
sbb
add
jmp
shll
jmp
call
pushf
addr16
cmpsb
mov
push
popa
gs
mov
andnps
iret
mov
jg
jle
jno
imull
icebp
mov
jns
jmp
push
lcall
leave
mov
cmc
push
or
insl
sbb
adc
mov
movsl
fs
push
enter
rcr
mov
aaa
popf
aam
jnp
dec
subl
adc
fcoml
mov
dec
cmp
sub
pop
inc
fnsave
or
xchg
push
pop
xchg
adc
xchg
and
rep
lds
xchg
sbb
inc
loopne
mov
mov
pop
pop
cmp
aam
sbb
popa
out
mov
icebp
in
xchg
add
push
sub
pop
lahf
loop
pop
gs
daa
mov
xchg
fistpll
ret
mov
outsl
stc
iret
cmp
sar
scas
in
das
jbe
fcmovnbe
dec
push
mov
sub
insl
mov
test
daa
pop
in
in
mov
fwait
rcll
push
push
bound
xor
and
xor
imul
imul
xchg
add
outsb
sbb
fcomps
pop
outsl
push
push
xchg
stos
loopne
pop
add
in
movsb
jno
pop
xor
jbe
sbb
lret
xchg
ds
pop
mov
push
lods
push
xor
aam
pop
lret
loopne
mov
pushl
sarl
add
cmc
cmp
jmp
mov
lea
ja
push
sub
bts
shl
setae
stc
lea
add
xor
shrd
test
not
mov
sub
sub
mov
pushf
bt
cmp
repnz
call
ja
call
xchg
ret
xchg
push
int
dec
add
jmp
push
jmp
adc
xchg
mov
cmpsb
jle
jmp
add
sbb
add
xchg
push
jnp
aad
loope
shlb
inc
or
adc
out
out
xor
iret
mov
jo
ja
adc
mov
push
mov
jbe
or
mov
inc
fwait
cmpsl
sub
test
sbb
xchg
mov
repnz
jge
jb
les
adc
enter
inc
into
adc
xor
test
and
pushf
not
rep
call
movsl
push
jle
xchg
hlt
aaa
repnz
in
out
das
mov
xchg
push
iret
outsl
lods
outsb
int3
fisttps
int
les
mov
mov
xor
aas
pushf
arpl
mov
std
xor
in
lcall
cwtl
stos
int
inc
xlat
mov
leave
daa
pop
sbb
sbb
rorb
outsb
negb
in
mov
ret
shrb
fs
pushf
lea
je
push
push
bt
add
call
call
pop
add
mov
or
clc
and
cmpsb
jg
jmp
mov
lret
and
xor
or
mov
dec
cmp
push
push
fnstsw
je
push
sti
push
push
stc
mov
stc
xor
ret
push
sti
mov
pop
nop
dec
dec
dec
inc
les
push
mov
mov
push
adc
loope
add
cs
add
mov
dec
into
insl
cmc
cmc
lds
push
push
rcl
call
pushf
mov
xchg
cmp
inc
add
mov
ljmp
pushf
pop
mov
test
sti
xchg
dec
sub
lahf
fs
adc
call
inc
jle
fildll
nop
push
jbe
outsb
sbb
jp
inc
add
out
mov
scas
cmp
repnz
adc
xchg
sbbb
cmc
mov
inc
ret
xchg
cmpsl
mov
inc
push
idivb
movsb
mov
bound
addr16
push
and
test
push
sub
mov
in
sbb
xor
aaa
ss
lret
fimuls
mov
pop
pop
bound
mov
int
shll
fadds
add
mov
mov
int
mulb
sub
test
movl
jecxz
fistpl
lods
aad
les
sbb
testl
hlt
das
sbb
jne
cmp
pop
xchg
fidivrl
adc
xchg
repz
fcompl
and
mov
sbb
popa
lea
lea
jb
pop
jns
movl
push
lret
fcomp
mov
jb
lea
call
call
pusha
lea
jb
pushf
lea
jmp
pushf
pusha
mov
call
cmp
call
out
dec
xchg
dec
fdivrs
jp
lea
mov
mov
mov
jge
dec
cli
movsl
push
loope
sbb
pushf
vpconflictd
test
pushf
test
mov
ficomps
pop
sbb
insl
icebp
mov
mov
adc
cmpsb
scas
fimuls
add
das
popa
push
clc
daa
xlat
cmp
cli
sub
jo
pop
outsb
lret
mov
fidivs
sub
fisubs
cmc
in
pop
test
cmp
cwtl
mov
and
mov
mov
dec
cmovge
add
ret
cmp
adc
lahf
movsb
fiadds
out
imulb
icebp
aaa
stc
les
sahf
mov
adc
leave
sbb
fcmove
mov
add
insb
or
scas
cld
cmpsl
sbb
xchg
mov
sahf
mov
notl
rol
jns
mov
sti
or
mov
js
fldcw
out
addb
popf
mov
adc
orb
cmp
mov
orb
hlt
xchg
mov
lods
pop
popf
sahf
mov
outsb
insb
test
dec
rclb
xor
test
jg
cltd
cmpl
mov
and
out
lods
je
cmc
in
outsl
sarb
shrb
daa
push
fcmove
mov
cmp
jge
inc
mov
cmp
cmp
mov
fdivl
dec
test
adc
mov
aas
lods
mov
mov
cld
or
ljmp
imul
sub
xchg
mov
cmp
scas
sub
test
mov
cmpb
stc
cld
xchg
adc
fs
push
sub
pop
in
xchg
xchg
mov
cmp
jecxz
xchg
scas
stc
mov
add
jmp
mov
bound
add
push
lds
icebp
jmp
mov
test
outsl
mov
shrb
int3
mov
push
sbb
dec
or
pop
dec
scas
dec
js
ljmp
mov
ds
lahf
clc
into
and
and
aaa
mov
bound
les
popf
cmp
movsb
out
push
mov
sbb
xlat
sbb
adc
pop
inc
fs
test
orl
mov
sbb
lahf
jo
jbe
mov
test
mov
js
mov
xchg
je
js
xchg
ficomps
cmp
dec
sbb
jbe
push
insb
cs
nop
sub
dec
leave
inc
dec
into
jno
lods
adc
sub
xor
mov
lods
aad
std
loop
jne
aas
add
jnp
ss
dec
pushf
fs
gs
xchg
in
fwait
sub
int
aas
cs
pop
js
jae
cmp
jg
loopne
fstpt
xor
dec
push
int3
xchg
bound
test
pop
sub
das
out
xchg
cli
add
cmp
lock
or
lock
xlat
fsubr
add
pop
xchg
sbb
push
pop
adc
js
mov
loope
xor
jmp
xchg
dec
jnp
arpl
or
push
sbb
or
pop
lret
xchg
icebp
mov
cld
cmpsb
jb
jne
cld
xchg
js
xchg
dec
push
int3
inc
xor
aad
xchg
add
rorl
inc
es
fmull
and
mov
in
sub
je
mov
rolb
test
ljmp
call
pushf
call
mov
pushf
pop
mov
movsbw
bswap
xchg
movsbl
mov
bswap
movzbl
bswap
mov
rep
xchg
mov
call
pusha
call
ja
fstp
pop
test
xchg
xchg
aas
insl
mov
pop
int3
idivl
cmp
mov
or
rolb
outsl
xchg
lcall
pushf
divl
outsb
into
gs
jnp
xor
daa
mov
enter
loopne
fstl
scas
insb
out
sub
add
call
inc
mov
jae
mov
xchg
cwtl
loopne
and
gs
aas
push
leave
mov
inc
test
pusha
les
fucomi
and
ret
add
inc
into
xor
repnz
cmp
inc
push
xchg
ret
std
movsl
jo
scas
rcrl
and
in
lret
fistps
xor
push
jmp
mov
pusha
mov
and
push
loopne
out
bound
sub
test
daa
inc
cltd
and
int3
stos
or
leave
je
add
dec
dec
rcpps
cmp
add
or
add
pop
pop
mov
stc
mov
push
ja
stos
movsb
xor
outsl
shlb
call
push
aam
ret
popf
jne
test
fidivrl
es
sbb
cmp
push
cmp
out
sub
leave
push
mov
sarl
subl
or
daa
xor
sub
inc
dec
sahf
test
addb
dec
lds
and
mov
mov
sub
cmp
ficompl
addl
dec
roll
xchg
add
pop
or
mov
hlt
or
ror
insb
mov
mov
stos
mov
outsb
icebp
jnp
inc
cmp
jne
pop
les
pushf
and
lcall
cmp
ret
fnstenv
dec
aad
push
mov
pop
ja
sbb
mov
mov
inc
mov
aad
pop
pop
insl
add
mov
xorl
sub
iret
dec
jg
cmpb
pop
arpl
cmp
stc
mov
sub
js
inc
push
frstor
pop
arpl
hlt
lock
insb
pop
pop
cwtl
and
jmp
jmp
clc
clc
mov
cmp
cmc
pop
cmc
movsb
jns
inc
sahf
cmc
enter
nop
xchg
call
shl
dec
jl
jbe
add
call
sub
add
out
leave
cmp
test
leave
add
lret
pop
fs
add
pop
xchg
lea
jge
mov
nop
push
rcr
push
push
sahf
addr16
mov
jle
xchg
rcl
push
scas
call
jnp,pt
test
mov
mov
movsb
shlb
jp
std
insl
push
sub
je
les
push
scas
adc
daa
adc
cmc
push
ljmp
cs
push
inc
loope
and
push
xchg
orb
sbb
fcompl
aad
xchg
lahf
cmpsb
fiaddl
test
pop
es
xchg
mov
jmp
lahf
xchg
lahf
loopne
movsl
push
push
fs
mov
xchg
pop
pop
popa
sbb
mov
aad
push
mov
xor
xor
jbe
adc
daa
popf
jbe
mov
push
adc
arpl
movsb
jmp
shll
jecxz
aam
or
jbe
adc
les
xor
add
push
addr16
aad
cmc
imul
ja
aas
dec
test
pop
add
hlt
mov
push
cmc
cli
notb
inc
or
lret
push
mov
test
divb
cmp
cmpb
call
xchg
not
not
call
push
jmp
mov
pusha
mov
movzbw
call
mov
push
cmp
test
aam
pushf
fsub
frstor
sbb
push
dec
sub
cmpsb
out
bound
cmp
es
xchg
mov
cmp
sahf
inc
sub
iret
fnstcw
cmc
in
xor
outsb
mov
out
xor
int3
and
dec
mov
lods
ljmp
mov
mov
ret
aaa
leave
adc
shll
inc
popa
outsl
clc
aam
sar
test
mov
fidivrs
rorl
enter
dec
mov
sbb
test
jmp
pushf
mov
test
jmp
pushf
cmc
shl
push
cmp
push
add
call
cmp
pushf
xor
jge
inc
ret
push
rorb
dec
mov
int
mov
mov
jle
mov
in
sbb
int
fwait
pop
popf
fstl
addl
push
push
lret
sub
dec
enter
das
mov
ja
mov
cmp
cmc
call
push
addb
pusha
cwtl
test
into
adc
cmp
adc
outsb
fstpl
inc
mov
in
inc
sbb
out
mov
sub
xchg
adc
scas
in
and
fsubl
repnz
clc
orl
test
add
sub
jne
sub
or
popf
gs
sbb
pop
sbb
in
inc
fwait
sbb
fnstsw
daa
push
or
dec
rclb
mov
pop
and
push
data16
lods
jmp
pop
dec
pop
jb
sub
pop
ljmp
add
ret
or
jnp
fnstcw
jge
loopne
mov
test
jge
sub
push
adc
mov
dec
or
push
sahf
mov
add
jno
fs
cmc
cli
loop
jge
in
movb
mov
add
inc
or
movl
pop
push
mov
sbb
enter
mov
inc
mov
cmpl
test
mov
mov
jecxz
inc
test
mov
insl
push
mov
cmp
sbb
add
pusha
push
cli
out
loope
xor
sbb
xor
shrl
fbstp
out
jl
stc
jnp
inc
aas
xchg
int3
add
add
scas
push
pop
ss
or
cmp
out
addr16
mov
inc
push
test
aad
jp
xchg
ss
pop
jecxz
stos
stos
mov
daa
scas
jmp
cmp
xchg
xchg
dec
push
dec
rcrl
repnz
fwait
push
sub
sbb
cld
ljmp
in
fildl
fs
add
or
xor
dec
sub
cmc
and
or
xchg
xor
and
sarl
add
xchg
cltd
pop
test
lea
je
jmp
bt
add
pusha
lea
mov
lea
call
push
pushl
mov
call
sbb
xor
add
cmpsb
jmp
cmpsb
out
add
jge
je
jecxz
jl
or
add
cwtl
xchg
lock
pop
mov
mov
pushf
adc
sub
xchg
jne
add
outsb
dec
ja
out
inc
sbb
push
jb
dec
sbb
cmpsb
mov
push
xchg
repz
mov
sub
mov
xchg
int
lods
and
lock
icebp
imul
imul
cmp
add
mov
ret
arpl
stos
xor
adc
cmc
jb
xor
hlt
jae
xor
int
mov
pop
jo
mov
xchg
leave
rcrl
sbb
inc
push
push
inc
jb
adc
lods
divb
vxorpd
bound
cld
div
dec
fimull
jp
sbb
sbb
mov
xlat
cmp
inc
fimull
mov
jg
dec
and
in
sar
addl
xor
and
sub
sahf
fistl
sbb
movsl
lds
test
hlt
int
stc
das
in
in
popa
test
sbb
jmp
jle
fisttpll
fiadds
dec
lds
sahf
call
ljmp
sbb
mov
dec
dec
inc
push
les
test
lea
orl
or
xchg
push
ret
push
mov
xor
mov
mov
lods
imul
mov
pop
lret
ja
mov
fisubrl
push
push
stos
arpl
ss
add
pusha
lea
jb
btr
movzbl
shrd
not
shr
movsbw
lea
movzbw
imul
ror
pushf
bsr
bswap
lea
pop
bsf
clc
push
bswap
push
pushf
rcl
dec
stc
mov
pusha
mov
cmc
jmp
jmp
xor
xor
jmp
and
stc
lds
sti
testl
data16
cs
pop
loopne
xchg
or
movsb
pop
popf
cmp
es
cmp
jmp
ja
into
mov
ljmp
xor
cpuid
or
adc
lods
das
nop
daa
mov
xchg
xor
int
mov
icebp
pop
sbb
dec
push
dec
dec
movsb
je
mov
dec
test
pop
out
sub
mov
sub
insl
aaa
std
ret
les
test
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
push
pushf
movb
pushl
lea
jmp
aaa
iret
push
and
mov
nop
xchg
cli
cmp
dec
or
fwait
push
inc
outsb
fwait
inc
out
mov
pop
jp
into
fists
push
xor
add
leave
shlb
in
pop
in
fistpl
outsb
data16
rcrb
push
mov
lret
xchg
xor
inc
jne
sub
or
lahf
adc
mov
mov
mov
mov
pusha
movl
pushf
push
movl
pushf
pushl
push
lea
jmp
iret
cli
inc
jp
adc
mov
fldl
stos
imul
lea
mov
call
aam
dec
jg
xor
ds
xor
addl
fmulp
cs
arpl
sti
in
lcall
pop
dec
vmovshdup
sbb
test
push
into
sub
mov
add
push
sbb
rorb
pop
push
cmp
mulb
mov
popf
arpl
gs
scas
fistps
mov
sub
scas
xor
xor
test
push
jnp
je
cmpb
pop
adc
xchg
xlat
fldln2
push
jg
popf
lcall
adc
rcll
xchg
xor
adc
pandn
les
add
pushf
sbb
sub
adc
dec
nop
dec
rcrl
add
lea
call
test
push
mov
pusha
mov
bt
pusha
test
jmp
jo
and
jne
mov
jge
shlb
mov
rclb
sub
icebp
jb
jle
or
sbb
ret
aas
sub
aaa
jg
mov
pop
rclb
push
mov
imul
and
lahf
add
fstpt
test
scas
imul
mov
sub
cmpsl
xchg
push
push
sbb
call
add
adc
push
xchg
dec
das
add
inc
arpl
leave
imul
scas
cli
jne
inc
cld
mov
jp
push
gs
sbb
das
sbbl
push
mov
xor
jae
imul
sahf
and
and
out
pop
fs
xchg
dec
insl
lods
popf
movb
fistpll
rcrb
xchg
xchg
in
jo
and
bound
sbb
and
mov
pop
push
repz
cs
push
fsubl
cltd
arpl
popf
and
test
xor
fwait
or
sub
xor
mov
mov
add
sarl
aaa
mov
inc
mul
push
mul
es
xor
ror
dec
scas
clc
inc
add
lods
addr16
xor
fstl
shl
mov
xchg
daa
mov
cli
xor
jne
mov
ret
loope
lret
fbld
movsl
cmp
lds
push
pop
or
jg
mov
fsubl
popa
fbld
xor
or
xor
call
pusha
mov
mov
push
pushl
ret
ljmp
das
or
sbb
arpl
outsb
in
stos
adc
mov
xchg
ljmp
and
sub
add
outsl
dec
out
mov
sbb
aam
dec
mov
mov
jmp
pop
insb
push
lret
push
std
sti
jl
mov
aaa
jnp
in
cmp
loop
mov
mov
cmp
pop
fnstenv
out
dec
mov
mov
lock
not
xchg
xchg
std
leave
push
pop
jnp
xchg
and
add
inc
cmp
das
xor
sbb
pop
mov
xor
mov
add
in
mov
jge
jns
cwtl
cltd
mov
lods
ljmp
out
xchg
lds
fistps
stos
add
jmp
inc
mov
cmpsb
out
fnstcw
pop
leave
addr16
iret
lods
stos
scas
sub
xchg
push
ret
add
mulb
je
movsl
xor
test
jp
int3
xchg
movl
aaa
adc
cmp
cmp
sti
cwtl
adc
dec
inc
inc
mov
sbb
loop
in
add
lea
ja
stc
imul
push
jmp
mov
sarl
cs
lret
xchg
pop
push
pop
in
jmp
cwtl
outsb
sarb
adc
lret
mov
jae
icebp
scas
add
cmpsb
mov
ret
aas
xchg
fstpt
fcompl
xlat
imul
int
xor
and
pop
stos
cmp
xchg
stos
je
sahf
jle
sub
lret
cmp
lods
inc
xor
sbb
sub
bound
adc
sub
in
call
ss
cmp
test
sar
add
push
mov
fistps
das
cmp
mov
cltd
mov
popa
inc
mov
pop
inc
inc
sbb
out
fsubr
imul
pop
div
push
ror
jmp
jns
or
sub
xor
hlt
dec
pop
xchg
mov
in
call
push
lret
sub
dec
push
leave
inc
mov
sbb
cltd
shrl
sub
or
ret
hlt
aam
mov
test
gs
mov
stos
repz
jb
ret
mov
loopne
xor
icebp
mov
mov
mov
mov
inc
and
nop
aam
mov
mov
add
xor
xchg
inc
jo
arpl
pop
gs
stos
in
test
inc
daa
ret
dec
cltd
mov
jmp
add
addr16
sbbl
xlat
int
push
xor
je
xor
xor
cwtl
mov
xchg
push
scas
dec
jge
inc
xor
jle
or
xor
fwait
pop
inc
in
rorl
or
shl
add
fdivl
pop
ret
jbe
pushf
cmp
mov
movb
mov
xor
mov
xor
loop
fistpl
xchg
adc
cmp
push
mov
call
mov
inc
jecxz
cmp
sbb
add
cmp
cmpl
out
dec
jne
mov
popf
push
out
jno
add
xor
mov
mov
cmp
js
aas
add
add
sub
scas
dec
mov
adc
or
repz
aas
ja
mov
sbb
cmpsb
out
and
mov
int3
dec
mov
or
clc
push
inc
nop
adc
sbbb
outsb
xchg
lret
sub
jl
mov
arpl
loopne
xor
cmp
push
xor
xchg
daa
aaa
add
cmp
mov
jg
jp
aad
loope
or
xor
jnp
hlt
inc
cmpl
je
ret
test
ja
out
xchg
adc
dec
dec
lret
push
test
pop
pop
pusha
fldl
push
cmp
mov
push
adc
pop
test
fs
add
mov
jg
dec
lock
jne
clc
loope
out
addr16
xor
jbe
into
scas
adc
xor
or
dec
addr16
xchg
cli
lahf
icebp
shrl
push
cwtl
cmc
xor
mov
jmp
inc
cld
inc
int3
sti
mov
add
inc
dec
rorb
xchg
lds
test
pop
int3
into
inc
mov
xchg
cmpsb
lds
push
mov
xchg
sbb
jle
leave
or
iret
jg
lods
jmp
je
sbb
loop
adc
push
in
divl
and
rcll
xlat
mov
mov
lods
out
sbb
pusha
pop
ret
adc
pop
xchg
jbe
lods
in
dec
push
cltd
jle
inc
mov
mov
out
xorl
pop
and
in
mov
outsb
dec
test
js
insl
mov
sbb
mov
add
icebp
lds
add
push
jne
inc
cmp
dec
adc
xchg
push
roll
clc
ss
fisttpll
xchg
sbb
push
rol
pop
pop
or
ds
lds
test
lea
call
jg
sbb
add
lcall
arpl
xchg
shll
dec
xchg
int3
retw
mov
mov
sbb
cmp
mov
rclb
and
test
inc
mov
pushl
bt
cmp
xor
jmp
cmp
pusha
jmp
lcall
dec
pop
lret
push
outsb
outsl
xor
imul
movsl
mov
sub
cltd
jns
mov
popa
imul
lea
aam
ja
mulb
adcl
data16
add
imul
sub
sti
in
aam
mov
add
xchg
dec
and
sbb
popa
stc
sub
ljmp
mov
popf
cmp
pop
dec
shll
ss
jmp
mov
incb
int3
enter
jne
test
ja
and
sti
pop
test
js
or
add
xchg
xchg
mov
adc
xor
and
stos
add
fdecstp
sub
cmpsb
sbb
or
jno
xchg
cli
stos
lea
push
adc
jge
aaa
lock
outsl
mov
orl
andb
jno
fsts
mov
jne
insl
lret
verr
in
movsb
inc
sbb
shll
insl
cltd
lret
insl
enter
mov
daa
jns
xor
scas
mov
lds
loope
test
dec
mov
mulb
and
pop
ds
pop
mov
sub
xchg
pop
jns
aaa
decl
pop
into
xlat
xchg
push
lds
adc
mov
cmp
in
hlt
aad
dec
jnp
sbb
mov
jnp
call
arpl
jecxz
jecxz
shlb
jge
push
test
xchg
dec
or
psllw
mov
ljmp
inc
and
inc
mov
imul
aas
in
inc
roll
and
popf
sub
mov
fs
mov
and
lock
fistpll
fcoms
xchg
dec
fadd
push
inc
test
or
lahf
cmpsl
loope
pop
enter
loopne
fs
icebp
dec
stos
leave
jbe
jle
pop
std
aad
xchg
adc
lods
lds
arpl
cli
ss
outsl
add
mov
cmpl
call
mov
jmp
test
pushf
sub
not
call
ja
outsb
imul
insb
add
inc
and
push
sub
xchg
sti
jmp
sar
or
test
btr
mov
lea
add
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
shlb
and
push
push
bt
cmc
cmp
xor
bt
movb
stc
add
stc
shl
jmp
pushf
bt
cmc
test
push
movw
jmp
lea
jb
pusha
pushf
mov
lea
jmp
push
ljmp
iret
pcmpgtd
in
idiv
push
xchg
outsl
daa
push
test
popa
test
daa
ret
je
pusha
cwtl
out
ret
lret
lcall
lret
out
leave
cld
pop
cmpsb
nop
out
movsl
cld
je
jo
mov
add
pop
add
dec
je
adc
outsb
pushf
mov
xor
jecxz
dec
pop
mov
insb
add
cmp
add
inc
lds
push
adc
pop
pop
fwait
xchg
sbb
inc
push
cmp
out
jmp
test
or
mov
hlt
shrl
outsb
mov
cmp
popl
push
adc
push
xchg
rcrb
mov
xor
imul
mov
fmull
xchg
js
ljmp
sub
cmpsb
adc
cs
in
or
mov
mov
mov
xchg
pop
mov
test
ret
stos
dec
ds
sub
adcl
jl
leave
add
jne
test
cmp
xchg
rcrb
or
arpl
jb
cs
or
pop
dec
leave
in
ss
or
out
je
cmp
nop
xchg
movsl
mov
add
idivb
push
pop
mov
or
mov
mov
aad
popa
mov
mov
mov
xor
mov
fwait
lea
inc
add
hlt
jl
in
lcall
loope
or
loopne
mov
in
ds
icebp
jno
cmp
les
jg
fiadds
test
push
js
jmp
xchg
add
outsl
pusha
les
dec
mov
fnstcw
test
scas
sub
jle
xor
pop
jmp
fistpl
and
dec
dec
sub
shll
add
xchg
xchg
mov
int
cmpsb
pop
xchg
jne
test
or
movsl
imul
mov
fistl
imul
mov
loop
mov
inc
mov
cmc
in
fcmove
push
fmuls
aaa
push
dec
mov
cmc
or
lahf
cmp
fs
xor
add
mov
movl
jb
outsl
dec
idiv
mov
call
pop
mov
ljmp
hlt
rcrb
sbb
sahf
movsb
sub
jo
and
negb
sti
or
xor
aaa
adc
jle
sub
or
aad
xchg
or
mov
push
push
aaa
daa
sti
sub
mov
sarl
ss
sub
inc
sahf
sub
in
mul
jae
jb
add
je
insb
clc
aad
xorl
popa
or
test
fsubp
mov
stos
xor
aaa
xor
int
add
and
in
stos
mov
and
into
cmp
cmp
stos
sahf
js
inc
leave
mov
mov
push
mov
data16
mov
sbb
inc
pop
testl
mov
push
mov
dec
xlat
sahf
sbb
mov
movb
adc
adc
or
sbb
cmp
cs
fs
cmc
mov
xor
push
pop
lds
mov
jne
jnp
jnp
and
jae
cmp
inc
lock
dec
in
xor
xor
addb
stc
pop
xchg
cmpsb
pop
enter
mov
test
jo
mov
repnz
loope
add
xor
and
jp
inc
pop
es
sarb
ja
inc
inc
mov
orb
pop
lahf
jecxz
enter
fildl
enter
cld
idivb
pop
and
sbb
mov
lods
imul
pop
popf
jno
fwait
pop
rcl
leave
std
ljmp
popa
stos
clc
clc
jg
sahf
bound
cmp
adc
insb
call
mov
inc
leave
pop
scas
or
lahf
rcr
inc
or
loop
call
cmp
cmp
xchg
inc
ud2
mov
mov
test
pop
add
ja,pt
les
loope
or
mov
inc
shll
outsl
loope
push
jns
test
pop
aas
xchg
lods
rclb
mov
sti
mov
jge
add
pop
fcoml
data16
fs
imul
mov
loope
ja
out
mov
not
dec
aad
xchg
in
sub
pop
faddl
mov
pushf
mov
push
dec
fs
mov
imul
cmp
popf
int3
adc
dec
int3
add
popa
cmp
test
mov
push
and
faddl
sbb
cltd
stc
jmp
fistpl
aam
rcrl
mov
sahf
in
adc
xchg
dec
jbe
inc
pop
push
insb
xchg
test
add
or
dec
jg
lea
push
cmpb
add
je
push
shrl
stos
push
stos
sbb
mov
imull
xor
mov
cmp
mov
clc
test
add
inc
sbb
les
addr16
jge
mov
xchg
xchg
push
xchg
stos
and
or
in
int3
stc
lret
pop
inc
xchg
xor
jne
out
les
xor
outsl
xchg
sub
sub
cmc
mov
enter
les
rclb
gs
mov
push
or
rcll
cli
cmp
adc
repz
idivl
jnp
jns
mov
sbb
mov
or
cs
push
bound
jle
cmp
jg
mov
shll
lahf
rep
into
popf
test
dec
mov
aad
lods
and
insb
cmp
inc
pusha
add
andb
cmc
rcll
arpl
push
pop
sbb
mov
sbb
push
xor
jno
pop
loopne
push
bound
lds
mov
shl
imul
pop
push
jbe
xchg
call
lret
scas
jmp
out
sub
cmpb
jl
xorl
faddl
jno
sbb
dec
inc
ret
xchg
pop
fstps
aaa
add
jl
stos
push
mov
cmp
rcr
fstpl
pusha
fildll
or
loopne
shll
rcll
in
out
das
sbb
aam
xchg
scas
jecxz
pop
lret
stos
notb
mov
push
mov
mov
cmp
mov
xor
add
sbb
sub
jnp
das
out
xor
cwtl
mov
repz
gs
xchg
in
pop
cld
mov
and
mov
pusha
adc
shl
stos
mov
jecxz
push
cmovle
push
xchg
rcr
pop
pop
mov
add
stos
call
mov
movw
stos
call
pushf
push
pusha
movl
pushf
movl
pusha
mov
movw
movb
lea
jmp
lea
jne
rcr
xchg
movsbw
clc
mov
rcr
sub
movzbl
mov
btr
neg
xor
xchg
mov
xchg
shrd
ror
mov
sar
sar
bsr
rcr
mov
stc
mov
pushf
neg
bsr
mov
stc
rcr
mov
shl
test
sub
lea
mov
clc
daa
mov
btr
sub
lea
call
push
jmp
push
jne
cmpsb
inc
jl
aam
cmpxchg
outsb
mov
jnp
xchg
sub
xor
mov
fildl
rcll
int3
repnz
scas
jg
xor
pop
in
pop
mov
jbe
adc
shll
outsl
or
cmpsb
gs
mov
enter
mov
pop
push
jbe
sbb
pop
lods
pop
in
pushf
or
sbb
test
rcrb
aas
aas
xchg
cmpsb
and
imul
stc
std
sbb
test
ret
outsl
jg
jp
aas
or
bound
mov
ja
cmp
cld
ja
test
cmp
jno
cs
cld
mov
jecxz
xor
push
jg
add
jnp
fucomi
pusha
sbb
jae
aas
std
pusha
push
out
push
into
bnd
jnp
loop
cmp
jl
in
mov
insb
push
cmpl
push
enter
and
mov
jne
xchg
inc
pushf
cmp
push
lret
mov
movsb
stos
add
ja
push
and
in
out
cmp
jg
aaa
idivb
add
inc
pusha
call
cmp
xchg
cmp
add
dec
xchg
push
push
mov
aas
lea
ja
fdecstp
mov
adc
lret
pop
cmp
push
pop
pop
mov
xchg
xor
jg
leave
outsb
stos
cltd
mov
bound
dec
int
or
pop
jp
outsb
aam
mov
inc
shrl
hlt
push
in
inc
lret
lahf
fwait
test
das
jae
xor
mov
cmpl
add
fs
mov
add
out
in
xor
je
addl
into
push
repz
pop
mov
enter
push
fisubl
cwtl
push
lods
and
icebp
fcompl
aaa
outsl
addb
out
insl
les
popa
xor
xchg
repz
dec
movl
adc
addr16
fwait
adc
imul
repnz
inc
jmp
xor
nop
out
sarb
sub
jns
cli
ja
sub
addr16
mov
xchg
mov
jb
lea
movb
mov
out
scas
js
ficomps
dec
push
aam
rclb
jge
inc
dec
push
push
inc
push
xor
cs
dec
dec
add
ds
lret
dec
lahf
push
test
push
and
test
jo
imul
in
sbb
jb
mov
sub
mov
popf
out
repnz
roll
or
mov
ret
ret
bswap
dec
outsl
daa
movb
adc
cmp
vmread
pushf
jnp
out
mov
mov
imul
push
cmp
cmp
inc
imul
and
dec
inc
incb
inc
in
lahf
inc
cwtl
mov
outsl
les
mov
mov
xor
cmp
ds
add
mov
mov
or
sub
sbb
push
divb
sti
out
loopne
xchg
call
and
pop
or
das
in
push
test
inc
xchg
movsb
add
js
xchg
fnstenv
xchg
out
mov
xchg
inc
xchg
fsubs
arpl
ffreep
daa
xor
adc
mov
xor
notb
pusha
mov
inc
repz
jb
ds
lds
adc
xchg
push
push
fsubl
mov
add
mov
aaa
cld
out
or
icebp
incl
std
orl
inc
add
inc
rcll
jbe
inc
cmpsb
adc
iret
int
decl
gs
fistl
pop
push
jbe
mov
enter
int
xorb
jo
jbe
scas
popa
ret
cmp
push
or
std
sub
jb
outsl
fisubs
sub
cmp
pusha
aam
or
aaa
daa
push
sti
sbb
dec
bound
lds
cmp
ds
dec
xchg
nop
xchg
sbb
dec
in
add
lea
call
pushf
pusha
adc
pushf
lea
jb
jmp
push
inc
xor
aaa
push
jmp
inc
cmpl
sbb
test
inc
repnz
int
insb
cmc
jnp
pop
mov
inc
out
fsub
or
in
sub
enter
ja
or
pop
mov
sbb
inc
dec
xchg
fmuls
jns
mov
add
pushf
sub
scas
xor
testb
notb
call
mov
mov
adc
out
mov
or
cmp
adc
jae
xchg
mov
cmp
mov
sbb
cmpsb
and
stos
les
xchg
imul
arpl
jne
repnz
push
movb
cmp
jmp
push
xor
inc
cwtl
jmp
bound
xchg
sarb
mov
mov
xor
or
adc
mov
lcall
pop
ret
shrl
sub
aam
and
incb
testb
std
add
shlb
lret
lret
lret
push
inc
cmpsb
pop
test
mov
cmp
rcll
dec
aaa
jl
or
adc
push
loope
sub
faddl
test
push
push
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
pusha
jmp
jmp
jecxz
add
out
xchg
fmull
xor
nop
int
rcll
dec
or
cltd
jb
or
push
mov
cmp
mov
ret
add
mov
inc
in
jo
xchg
subl
dec
loop
and
cmp
popf
outsl
mov
lahf
aas
nop
jo
push
das
mov
cmp
and
scas
inc
lock
fimull
adc
cld
icebp
xchg
inc
adc
sbb
and
mov
lods
je
scas
movsb
add
xor
jmp
aas
push
sbb
inc
xchg
es
scas
out
clc
inc
incb
jle
lds
pusha
push
push
hlt
ds
cs
fisttps
inc
subl
iret
notl
popa
jmp
ja
push
jl
leave
andb
stos
mov
cwtl
push
and
sbb
lock
sub
in
lea
mov
dec
xchg
not
int3
stos
into
inc
pop
fmul
mov
push
and
mov
xchg
add
push
or
into
ffreep
ja
pop
xchg
lahf
movsl
lock
into
sub
enter
mov
adc
jo
nop
enter
test
inc
xchg
jae
das
pop
sbb
push
mov
mov
int3
mov
jns
or
mov
pop
pop
mov
jnp
aaa
jae
lret
mov
inc
jbe
into
loop
cmp
loop
adc
out
and
and
pop
insb
mov
rorl
add
call
scas
push
leave
rcrl
imul
pop
xchg
xlat
xchg
xlat
fstpl
xchg
orl
adc
idiv
sub
fs
mov
push
les
or
sbb
es
add
dec
pushf
mov
pop
cwtl
cwtl
aam
push
nop
ss
adcl
jne
pushf
jecxz
and
xchg
add
jmp
lea
je
jmp
push
jmp
adc
jae
mov
outsl
sub
je
sti
mov
mov
lcall
test
dec
cmpsb
jle
test
jmp
aad
ret
xchg
fdivr
adc
xchg
loope
jle
mov
cmp
mov
jb
lret
push
fwait
push
lea
add
cmp
sahf
testb
cltd
idivl
push
repnz
lcall
scas
je
cmp
add
rcll
mov
int
xchg
repnz
addr16
lock
sbb
xor
ds
jge
mov
add
andl
inc
pop
andl
test
mov
scas
lahf
enter
mov
mov
mov
sub
add
or
fs
adc
mov
sahf
xchg
adc
sti
jnp
push
mov
mov
xor
stos
roll
cs
daa
ret
inc
push
pop
jnp
mov
fildll
and
es
add
mov
pushf
setnp
not
jmp
pushf
call
jmp
andl
dec
cmp
dec
push
mov
pusha
mov
mov
pop
mov
cmp
and
and
xor
mov
inc
bound
jnp
mov
popf
add
loop
cmp
aas
int
je
mov
inc
push
cmp
sbb
enter
mov
mov
sub
dec
cli
out
repz
lret
mov
cld
mov
add
push
pop
fnstsw
jb
pushl
popl
pushf
pushl
ret
pop
movsbw
movl
movb
pop
lea
pushf
pushf
call
mov
xor
mov
sbb
push
addb
push
int
fsub
cltd
fiadds
dec
jmp
mov
fistl
pop
add
lea
fcom
popa
leave
add
jnp
push
mov
jae
ret
xor
push
add
xor
hlt
mov
push
xchg
lahf
add
dec
xchg
push
cwtl
adc
push
out
in
int
andb
bound
aad
sbb
fbld
hlt
sbb
and
lods
mov
lahf
fs
scas
pop
aad
lea
pop
cld
xchg
and
into
and
ret
aam
mov
push
inc
mov
pop
test
sub
mov
push
es
out
mov
xchg
arpl
xchg
adc
mov
lcall
imull
add
add
mov
call
add
pop
ret
mov
enter
mov
mov
movsb
and
and
mov
jge
cmp
xor
and
mov
adc
pop
and
into
dec
test
aad
cs
lret
add
push
aad
cmc
movb
jp
test
xchg
fstpt
jbe
xchg
mov
mov
add
dec
or
jno
leave
lret
mov
pushf
loopne
call
mov
loopne
xor
inc
jl
fistl
xor
dec
les
fdivrl
push
jmp
jne
in
pop
iret
nop
sbb
ss
jnp
push
fidivrl
push
ss
imul
jg
inc
iret
rclb
or
dec
lods
add
test
pushf
jmp
jmp
push
outsl
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
jne
in
mov
pop
popa
bound
pusha
imul
xor
add
imul
xor
pop
adc
sarb
test
push
mov
mov
movsb
aad
jb
mov
icebp
iret
mov
in
pop
push
pop
dec
inc
fistpl
cmp
push
dec
jmp
mov
rcll
jbe
mov
add
ljmp
inc
divl
push
aaa
imul
subl
mov
mov
inc
mov
enter
cmp
pop
inc
out
xchg
and
lods
lods
dec
lods
inc
cmp
and
fimuls
daa
mov
mov
pop
mov
mov
mov
mov
xor
xor
into
out
mov
imul
sbb
out
icebp
popf
test
adc
jno
xlat
xchg
ret
into
shr
sbb
push
xor
fidivrs
cs
push
and
dec
rcrl
mov
mov
cli
inc
or
pcmpgtd
push
decl
or
pop
and
pushf
lea
push
jmp
lds
cwtl
mov
test
pop
mov
pushl
mov
iret
pusha
in
pop
or
jl
cmc
add
inc
xor
ret
outsl
pop
jb
push
dec
shrl
shlb
push
cmc
mov
hlt
mov
xor
shlb
in
pushf
imul
jo
daa
arpl
movl
mov
xor
or
jecxz
pop
stc
adc
pop
int3
push
fsubl
sub
add
push
pushf
jmp
movsbl
pushf
mov
movw
call
stos
pusha
lea
jmp
pushl
popl
pushf
mov
mov
pushl
ret
dec
repnz
adc
add
jnp
and
jb
mov
jns
test
cmp
mov
adc
out
mov
std
scas
jge
imul
add
sub
push
insb
mov
mov
lock
mov
mov
test
movl
std
leave
popf
cmp
popa
sub
xchg
ret
sub
mov
inc
jle
or
inc
or
add
pop
dec
enter
int
pop
pop
popa
and
xor
mov
add
inc
movsl
sub
or
mov
sub
hlt
cmp
sub
pusha
test
xor
movl
pusha
pusha
mov
lea
jmp
sahf
or
or
xchg
adc
cwtd
loope
jge
pushf
sti
les
dec
sti
add
fnstcw
cmp
dec
or
sub
xor
in
cmpsb
add
int
push
faddl
jae
int3
lea
cmc
cltd
cmc
mov
in
and
and
insl
sub
and
stos
mov
sub
fsubrs
jge,pt
push
enter
rcll
mov
stos
mov
pop
rcl
pop
btr
btr
pop
rcr
ror
and
cmc
pop
and
shl
pop
mov
shld
pop
bsr
add
pushf
movzbl
mov
pusha
pushl
ret
add
rcr
btc
call
and
mov
dec
pop
mov
iret
idiv
push
test
out
in
cmp
js
push
mov
lret
jl
xor
pop
mov
insl
shlb
add
lods
aad
push
xchg
adc
rol
test
cmp
or
roll
pop
enter
xchg
ss
cltd
shr
lock
notl
mov
fs
leave
jge
shlb
stos
mov
aam
xor
push
dec
cmpsl
jecxz
cmp
nop
xchg
int3
fcom
push
lcall
push
add
btr
lea
shr
shrd
rol
mov
bsr
rcl
seta
xchg
pushf
rcl
shr
shld
mov
pusha
mov
call
movl
call
lea
jb
push
pushl
lea
jmp
mov
adc
outsl
insl
mov
push
push
pop
mov
jne
fsubrl
popa
mov
adc
adc
push
leave
push
out
mov
imul
or
lea
sarl
dec
rcll
test
imul
sub
adc
cmpsl
mov
or
sbb
movsl
add
pop
sbb
ljmp
aaa
mov
add
lea
setnp
not
mov
mov
pop
xchg
not
pop
pusha
call
ror
lea
jbe
inc
pusha
bt
xor
cmp
pushf
cmc
add
jmp
jmp
sub
pop
inc
movsb
cli
xor
lret
sub
inc
inc
mov
sub
out
imul
add
xor
or
mov
push
aam
mov
repz
inc
mov
push
lret
rolb
or
in
lahf
xchg
fiadds
lods
xchg
jns
aam
lock
mov
dec
xchg
jno
jp
insl
and
mov
ss
cli
cmp
add
push
cmpsl
and
mov
jg
ficomps
punpcklwd
mov
jecxz
push
stc
lret
dec
int3
dec
out
dec
dec
push
rcl
pushf
sbb
mov
scas
inc
or
cwtl
aas
das
fnstsw
insb
sub
push
sub
pusha
jg
into
cmp
hlt
add
cmpsl
push
dec
add
std
inc
es
add
sbb
push
pop
in
std
icebp
adc
cld
cmp
jnp
add
in
test
fucomi
jmp
and
scas
sbb
test
pop
fsubrp
jbe
in
push
push
pop
mov
rorl
test
outsb
aas
sbb
pop
xchg
cmc
in
movsb
mov
and
push
inc
lret
loope
decl
ret
xor
sub
dec
jl
dec
cmp
or
xor
mov
jl
sti
inc
or
add
lret
and
add
js
mov
enter
mov
mov
ds
sarl
add
mov
es
cmp
push
in
push
pop
loope
or
rcll
push
iret
mov
xchg
pushf
outsb
ds
loope
nop
in
movsb
mov
std
cmp
add
lret
loope
sub
fsts
mov
imul
call
xchg
jmp
mov
lar
fwait
rclb
ret
inc
std
lcall
fcoms
pop
mov
jns
stos
add
adc
daa
pop
xchg
push
xlat
cmpl
mov
jge
mov
and
jbe
pop
ret
sub
rorl
xchg
les
mov
mov
dec
pop
mov
xor
dec
stos
and
stos
sbb
sub
data16
pop
lods
push
or
and
ss
je
rolb
push
dec
dec
cltd
jbe
test
jmp
add
addr16
outsl
jae
bound
popa
insl
add
xchg
pop
cmove
lret
adc
jbe
xchg
or
orl
in
cmp
ds
je
jo
cmp
add
adc
loop
sti
sbb
mov
inc
push
sarl
into
das
idivb
arpl
fcompl
ja
xchg
aad
push
cmp
and
or
pop
adc
movsl
sub
loop
jb
xchg
dec
inc
rcrl
pop
call
add
mov
sbb
int
add
in
mov
mov
mov
sub
cmp
cld
add
add
or
mov
icebp
cltd
stos
mov
aam
sbb
jl
jge
popa
sbb
bnd
mov
pop
push
jae
push
lcall
jno
or
in
lahf
lods
push
inc
iret
aam
out
loop
roll
or
mov
pop
enter
fistl
popf
loope
lods
loope
test
push
pushf
call
or
aas
icebp
es
mov
pushf
xor
jo
test
cmp
inc
jle
mov
inc
std
das
neg
lea
xorl
push
ja
js
dec
imul
dec
cli
mov
lret
mov
pop
gs
cli
adc
inc
jo
sbb
sbb
dec
dec
aas
sbbl
fisubs
aas
or
xchg
js
repnz
jb
jle
push
add
call
jmp
pusha
mov
lea
mov
lea
bswap
pusha
lea
push
pusha
movb
lea
call
pushf
cmp
jmp
leave
popa
sahf
push
add
mov
lcall
inc
and
out
adc
stc
std
enter
popa
cmpxchg
inc
outsl
jns
inc
or
xchg
movsl
negb
orb
clc
push
sbb
jns
sub
iret
and
xchg
push
push
mov
popl
test
ljmp
and
rcll
cltd
hlt
push
in
test
sub
stos
adc
movsb
addl
sbb
pop
and
push
pushf
les
inc
lret
out
fs
add
negl
jo
fistps
cli
cld
mov
adc
fwait
mov
imul
call
inc
repnz
popf
add
push
jne
ds
clc
and
mov
insb
xchg
adc
adc
push
jb
hlt
jl
dec
fisubrl
and
jno
aad
and
mov
jp
xchg
mov
sbb
and
movsl
or
jb
mov
mov
jno
enter
dec
cmpsb
pop
mov
lods
lret
dec
push
xchg
xchg
prefetcht1
imul
test
pusha
movw
mov
pushf
movl
push
movl
pusha
mov
lea
jmp
dec
cmp
roll
sti
sub
lock
gs
insl
cmc
repz
jle,pt
jo
out
iret
pop
xor
movsb
adc
cs
adc
or
and
pop
gs
mov
inc
testl
imull
fwait
jae
jecxz
rolb
mov
mov
lods
xor
jecxz
lods
loop
out
jge
pop
loopne
icebp
push
bound
js
xchg
add
call
out
pop
inc
gs
adc
ds
sbb
sub
mov
in
xor
inc
mov
xchg
mov
dec
fcoml
int3
xchg
pop
sbb
mov
lret
push
ret
xchg
pop
ljmp
push
or
inc
add
push
push
lea
jmp
loope
mov
frstor
cmp
inc
adc
in
mov
dec
jne
testb
dec
xor
sbb
in
push
out
fidivs
inc
jecxz
ja
das
test
in
ret
push
lret
and
sahf
cli
jg
push
xor
fcmovnb
cld
shll
or
push
and
addr16
aam
xor
inc
jb
mov
jle
pop
adc
jmp
xchg
mov
mov
fld
dec
xchg
adc
pusha
jecxz
sbb
test
push
lea
call
push
xchg
mov
pusha
jmp
inc
movsb
pop
into
in
cld
push
add
popa
cwtl
pop
popa
movsb
jo
arpl
jge
pushf
mov
call
add
shll
mov
imul
add
pop
lock
jle
andl
or
roll
sbb
xor
fidivrl
or
or
mov
push
xchg
repz
xchg
dec
test
test
scas
push
xlat
leave
mov
fldt
loopne
jae
cmpsb
aas
imul
loopne
push
lret
loopne
push
push
call
scas
cmp
mov
jge
fiadds
inc
int3
xchg
pop
pop
push
xchg
adc
lcall
inc
int3
fs
or
lods
ret
aas
xchg
es
jo
imul
rcrb
pop
pop
xlat
and
pop
stos
fidivrl
mov
lcall
mov
nop
ret
outsl
dec
int3
popa
push
mov
pop
xor
xchg
rcl
pop
fwait
addr16
fs
in
xor
shrl
add
mov
sub
jb
mov
add
call
sub
jne
ret
nop
mov
and
pop
push
daa
pushf
sub
inc
push
xor
pop
cli
aaa
xchg
hlt
into
mov
rcll
sahf
and
insb
repz
jo
pop
lahf
stos
jnp
popa
fwait
xchg
sbb
mov
pop
sbb
inc
rclb
sub
icebp
adcb
push
cmc
sub
sub
xchg
xor
mov
das
jmp
or
rolb
xchg
pop
pusha
pusha
cs
push
nop
pop
fldenv
push
mov
ds
mov
pop
cmpsl
stos
push
jg
outsb
insl
rcrl
cmp
lcall
imul
add
lods
inc
jl
int3
cmp
jmp
mov
dec
je
test
xor
imul
mov
aad
cmpsl
jne
inc
mov
cld
dec
dec
outsl
popf
leave
add
test
push
movl
pushf
jmp
pusha
pushf
pusha
movl
mov
call
in
mov
int3
push
addr16
inc
cmp
pop
daa
xlat
pop
sbb
mov
scas
xor
jge
jp
mov
in
or
and
mov
pop
xor
lds
sub
jecxz
aam
cli
int3
inc
mov
pop
or
pop
xor
or
jmp
mov
in
test
ja
xchg
imul
imul
xchg
push
leave
xchg
adc
xchg
fwait
pusha
pusha
mov
aaa
sbb
pop
cmp
fwait
stos
scas
or
rcrb
pop
pushf
sbb
fnstsw
fistl
or
or
xlat
aaa
mov
lods
movsb
adc
sbb
scas
sub
add
adc
pop
arpl
data16
sbb
daa
lea
aad
in
cs
in
clc
xchg
test
popa
and
aad
add
adc
sub
std
or
aas
add
int
mov
adc
sahf
add
test
inc
fistps
insl
jno
dec
adc
scas
xor
imul
es
dec
xchg
incl
std
sti
stos
dec
inc
xor
xlat
push
aaa
sbb
mov
scas
push
push
push
lds
rcrl
jle
mov
sub
mov
pop
outsb
outsl
popf
dec
sub
jp
pop
adcb
mov
ret
inc
jge
inc
iret
aas
int3
insb
jle
daa
cmpb
pop
mov
pop
pop
mov
fwait
xchg
pop
push
pop
sbb
insb
xor
jo
add
movl
jmp
add
inc
js
je
jb
arpl
jae
stc
mov
btc
not
mov
btr
sub
sub
xor
mov
rcl
mov
bts
sub
bsf
bts
inc
cmc
and
daa
cwtl
neg
mov
test
push
shl
test
pusha
mov
add
lea
jne
pusha
push
lea
pusha
push
movw
movb
lea
call
call
pusha
movl
movb
pushf
movl
push
lea
jmp
movl
jmp
imul
jp
fidivs
adc
loopne
les
imul
push
mov
inc
sbb
call
test
jne
ljmp
fldcw
and
inc
cmpsb
out
sub
insb
sbb
sbb
adc
call
out
adc
data16
pop
testb
pop
popl
cmpsb
stos
stos
call
shll
adc
mov
clc
add
push
popa
rorb
outsb
sub
pop
or
enter
mov
sbb
and
lcall
cmp
mov
inc
shr
mov
sete
pusha
movsbl
imul
btc
sar
sar
lea
pusha
mov
cmp
btc
add
mov
movsbw
pop
mov
and
shld
shrd
mov
call
int3
popf
jle
pushf
movl
jmp
and
iret
inc
mov
mov
xchg
fstl
pop
jmp
push
outsb
pop
ds
scas
int3
add
jns
mov
dec
inc
ds
jno
lret
inc
ss
and
pop
cs
inc
sub
fdiv
je
sahf
jno
add
or
addr16
fildll
mov
cwtl
mov
jg
rorl
sti
xor
aad
pop
pop
rcll
pop
mov
rcl
mov
popa
in
dec
xchg
mov
inc
lret
mov
add
lea
jne
sar
neg
bts
shl
mov
rcl
mov
ror
shrd
bsf
sub
adc
dec
stc
mov
dec
add
mov
bts
btr
mov
mov
bswap
setle
mov
and
movzbw
not
bt
mov
btr
movsbw
and
bt
mov
xor
sar
sub
neg
bswap
btc
mov
shld
btc
mov
ror
btr
mov
btr
sub
pushf
bsr
adc
and
aas
movl
mov
test
pushf
pushf
shl
cmp
bt
test
add
movb
movb
lea
push
call
lea
mov
push
push
movl
call
pushf
call
aam
stc
in
or
jl
aad
mov
or
lret
stc
in
cld
xor
or
mov
jge
dec
nop
push
xchg
inc
jl
ljmp
jge
mov
subb
mov
dec
inc
fisubs
mov
arpl
popf
cwtl
pop
ret
adcb
cmp
popf
sub
repz
jl
test
addr16
daa
inc
push
sti
mov
mov
xor
cmp
mov
add
sub
enter
mov
inc
xchg
iret
or
mov
out
pop
xchg
jno
loop
sbb
sbb
mov
mov
sub
fistpl
shl
jno
cmpb
cmp
stc
push
sub
or
adc
rclb
cmp
or
add
sub
stos
aaa
mov
popl
pop
push
stc
pushf
mov
jmp
jo
pop
mull
addb
dec
andb
pop
popf
clc
push
dec
pop
adc
movsl
pop
in
mov
test
loope
sbb
movsl
jge
sahf
movsb
xor
dec
rcrl
insl
xor
cmc
je
jecxz
cld
idivl
sub
sbb
jmp
cmp
mov
sbb
pop
push
mov
add
and
sbbl
jmp
fidivrl
cmp
mov
pop
xchg
mov
ret
dec
adc
dec
jb
addl
stos
mov
icebp
pop
push
push
lret
out
inc
rcrl
pop
fs
lret
addr16
arpl
imul
repz
xchg
pop
xchg
push
fstps
leave
add
pushf
pushl
mov
push
movb
movb
movb
lea
jmp
mov
es
xor
data16
lods
mov
mov
mov
loopne
push
pop
rcrb
adc
lds
lock
mov
jo
int3
sti
arpl
pop
mov
or
sbb
mov
cs
imul
popa
scas
jecxz
js
nop
xchg
lcall
push
push
mov
in
test
xor
add
inc
or
push
xlat
daa
fstpt
mov
test
mov
shl
lea
call
pop
ret
les
jp
mov
xor
scas
mov
ret
pusha
in
fildll
loopne
faddl
push
mov
movl
mov
jmp
inc
daa
mov
jp
sub
repnz
pop
mov
push
lods
clc
mov
int3
jge
mov
out
aaa
jnp
and
out
stc
pop
mov
popa
fstps
push
sti
mov
test
xchg
and
cmpsw
test
add
xchg
mov
cmpl
lret
rcl
pop
dec
xchg
xor
out
jl
cmpsb
pop
mov
or
test
fldl
fsts
test
mov
fmull
push
les
mov
test
sbb
jb
test
push
lret
cmp
inc
adc
clc
jge
adcb
out
mov
push
adc
loopne
xchg
mov
mov
dec
xchg
fistl
sbb
ja
sahf
test
sub
pushf
dec
cmp
aad
sub
call
cld
inc
subl
add
adc
movaps
xchg
sbb
jnp
nop
cwtl
mov
xor
add
ja
clc
sub
ret
jae
scas
repz
pop
arpl
push
pusha
test
into
roll
ja
pop
rclb
roll
mov
sub
pop
imul
test
jmp
pop
jbe
or
insl
or
mov
addr16
bound
adc
stos
repnz
test
pushf
pushf
call
js
stos
pop
xchg
dec
xchg
mov
es
cmc
jl
mov
cmp
cmp
scas
call
push
or
pop
cmp
push
push
push
clc
add
sti
ja
sub
repz
fistpl
xlat
scas
bound
test
cwtl
push
fnstsw
or
adc
push
or
jecxz
xchg
pushf
xchg
sbb
gs
jae
cmc
cmc
mov
inc
add
sub
sub
mov
shr
sub
call
stc
pop
ret
inc
bound
popa
jle
mov
sub
cmc
out
shll
mov
dec
lret
shll
outsb
cmp
fwait
mov
xchg
stos
add
shll
iret
pop
addb
xchg
xor
pop
lods
xor
mov
hlt
js
mov
cmp
std
lret
nop
mov
lret
jnp
mov
sub
je
sub
out
lock
clc
jb
arpl
js
out
push
xlat
into
push
std
mov
popa
and
cmp
loope
mov
pusha
iret
fisubl
daa
insb
sub
mov
icebp
add
movl
pusha
push
pushl
lea
jmp
pusha
jmp
push
pushl
lea
jbe
bt
btc
movzbw
sub
mov
btc
bswap
not
add
xor
sub
dec
mov
shl
btc
bswap
clc
add
shr
neg
ror
mov
movl
setae
mov
bt
jmp
or
movsl
dec
loope
ficomps
mov
and
xor
cmp
mov
or
pop
bound
arpl
jb
pop
add
icebp
mov
mov
pusha
pop
fdivs
bound
mov
out
dec
add
andl
dec
cmpsb
scas
inc
pop
iret
inc
inc
loop
lcall
inc
cmp
lahf
and
cmp
popa
outsb
push
jl
push
int3
insb
push
adc
loop
jmp
mov
outsl
imul
add
fidivrl
push
mov
popf
bound
movsl
iret
mov
leave
movsb
repz
xchg
add
test
out
mov
orb
sbb
jno
dec
test
push
shrl
pushf
xor
and
mov
pop
clc
fdivp
xor
mov
inc
popf
int3
shrl
sbbl
pop
push
and
jmp
pushf
repz
and
mov
aad
cmp
mov
sbb
jl
sbb
push
or
add
mov
jae
in
mov
mov
and
mov
fwait
add
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
enter
or
add
pushf
push
lea
call
pusha
add
jmp
lods
push
sahf
int
and
xchg
pop
fwait
cmpsb
in
inc
in
outsb
xor
sahf
and
jae
mov
dec
aas
xchg
adc
xor
adc
and
push
loopne
nop
mov
clc
push
repnz
leave
inc
inc
pop
jle
sub
inc
subb
iret
in
scas
cs
or
xor
mov
xor
or
cltd
mov
out
outsb
push
cmp
shrb
cli
icebp
js,pt
xor
cmc
add
movl
jmp
test
fstpl
push
pop
and
mov
stc
idivb
push
mov
imul
xor
rcll
pop
inc
into
or
add
mov
sbb
push
mov
cltd
jle
or
lret
loopne
mov
rclb
loope
xor
nop
adc
pop
cmc
push
push
mov
and
stos
or
arpl
mov
aaa
or
dec
adc
pushf
fsub
insl
lret
inc
call
sub
int3
inc
stc
int
pop
sbb
push
call
pop
push
rcrl
inc
imul
mov
jne
ret
xor
sbb
xchg
push
clc
jmp
out
pop
cmp
rcrb
in
cltd
or
sarl
jae
sub
jb
or
cwtl
lods
inc
in
mov
icebp
stc
xlat
jae
adc
or
push
int3
int
ficompl
popf
sub
sbb
adc
dec
xor
pop
add
fsts
push
sbb
mov
gs
je
adc
insb
adc
inc
cmp
call
call
pop
and
jecxz
add
sti
mov
and
bound
cli
cmc
adc
lahf
lret
in
mov
mov
bnd
mov
test
das
enter
jnp
aas
mov
sub
andl
pop
add
push
lea
jb
btc
mov
xadd
add
bt
clc
not
or
add
cmp
not
mov
bsf
add
setp
call
mov
test
rcrl
jmp
jne
scas
sub
outsb
mov
jno
mov
lock
dec
rcrb
and
inc
sbb
repz
jge
je
sub
int
adc
enter
mov
inc
jg
jecxz
and
push
mov
imul
cmpsb
ret
inc
outsb
loop
sbb
mov
or
push
fs
in
out
js
jb
mov
test
hlt
into
lea
pop
dec
adc
daa
movsb
lods
xor
les
xchg
sarl
in
cmp
popa
adc
jge
scas
adcl
imul
ljmp
xlat
and
pop
and
cmp
lret
push
mov
lock
test
jp
lahf
cwtl
mov
sub
shrl
adc
pusha
mov
cld
push
arpl
xchg
jmp
testb
sbb
addb
inc
xor
inc
clc
stc
add
cmp
sub
movw
jmp
and
xchg
fidivs
push
push
sbb
sub
out
ror
in
dec
push
pop
cli
dec
mov
sub
std
add
ja
push
jo
or
aas
popa
push
cmc
push
inc
shl
rolb
pushf
xor
repz
xor
dec
jns
scas
push
push
sub
cwtl
jbe
lea
push
aam
dec
sub
dec
test
add
loope
add
nop
cmp
pop
add
lods
mov
incl
jp
inc
or
push
jbe
das
mov
shl
xor
push
sub
fistpll
fimuls
pop
or
pop
xchg
dec
arpl
fidivs
mov
cmp
std
std
add
mov
addr16
fsubrl
push
push
xchg
and
sahf
pop
les
jle
ds
jns
mov
dec
cmp
xchg
imul
mov
cmp
xchg
xchg
pop
fs
pop
and
inc
and
lcall
pop
aas
jns
dec
or
add
arpl
scas
mov
hlt
in
jne
mov
or
push
dec
lods
cmp
mov
scas
icebp
jne
mov
out
sub
pop
sbb
cs
jp
notl
rclb
add
pusha
call
mov
xchg
pusha
xchg
pusha
jmp
int3
cld
add
sub
add
xor
inc
cmp
movsb
pop
adc
gs
fcom
ja
in
jns
les
mov
jmp
js
cmc
jg
jns
int
pop
popf
rcl
je
mov
or
loop
push
cltd
mov
fsts
lahf
lock
add
rorl
popa
sub
cld
sti
mov
clc
clc
xor
add
pop
add
es
xor
gs
call
cli
je
inc
dec
imul
aas
in
andb
sbb
mov
push
or
xchg
jns
cmp
inc
xor
aam
lcall
lret
and
mov
lock
xor
rorb
stos
into
lock
rol
loop
jne
and
xchg
or
fcomps
pop
sub
rorb
sbbb
xor
rorl
lret
mov
and
mov
mov
loop
stc
cmp
insb
mov
cmp
mov
dec
ljmp
out
xor
stc
mov
rorl
and
jb
movsl
dec
cld
inc
push
aaa
or
data16
adc
dec
and
inc
mov
push
dec
xchg
fstps
cmp
adc
xchg
nop
rorl
jno
nop
mull
cmp
inc
or
xchg
nop
dec
sbb
push
push
adc
ret
jle
mov
sbb
sbb
in
or
fmul
lret
mov
mov
mulb
lea
fdivs
mov
jo
jno
add
xchg
inc
rclb
cld
add
lea
call
pushf
adc
push
jmp
test
dec
xchg
mov
xchg
arpl
cmpb
and
into
mov
movsl
sub
in
sub
jnp
mov
in
imul
xchg
out
jecxz
xor
xor
mov
or
stc
cld
inc
or
pushf
mov
lcall
ja
push
sbb
imul
jecxz
popa
cmpsl
mov
jmp
or
addl
dec
das
cmp
inc
and
pushf
lahf
movl
pusha
lea
mov
mov
mov
movl
push
pushf
pushl
popl
pushl
movw
push
mov
pushl
ret
rcll
jnp
iret
insb
mov
out
pop
adc
aad
jl
adc
pushf
sbb
sbb
out
cs
push
jecxz
xor
cmp
lret
sbb
fs
push
push
cltd
in
fwait
push
rcr
mov
ret
scas
pop
inc
in
int3
cli
aaa
shlb
mov
loopne
cmpsb
mov
inc
jp
mov
dec
cmovnp
test
adc
pusha
pushl
lea
jb
test
test
jmp
imul
xchg
roll
movsb
pusha
cmpsl
sub
lret
push
push
mov
sbbb
jmp
or
aas
out
push
ret
adc
mov
sbb
mov
jl
jne
jns
jg
iret
iret
dec
cltd
sbb
add
test
icebp
sbb
andl
sbb
adc
mov
int3
enter
fs
mov
jecxz
xlat
mov
add
inc
fists
mov
out
push
sub
fsubp
movsb
andb
iret
in
lods
pop
ret
adc
ds
cmpsl
pop
sub
sbb
mov
gs
cmp
stos
mov
or
adcb
pop
stc
inc
cmp
cmpsl
and
mull
cmp
fdiv
hlt
adc
outsb
pusha
lock
stos
sub
outsb
je
inc
xor
addl
xor
xchg
rclb
std
clc
ja
xor
shl
cmc
je
lret
xchg
mov
andl
out
jb
aaa
dec
xchg
fcoms
into
cmp
and
sub
sub
lahf
or
in
lcall
mov
int
rcll
sbb
sbb
fwait
lods
mov
stos
jmp
xor
repnz
mov
sub
movsbw
mov
jmp
pushf
pushl
call
movl
btc
xor
mov
sub
call
mov
jle
shll
add
aam
fwait
lret
xlat
sub
jae
cli
sti
xlat
es
cmp
mov
push
scas
dec
pop
add
pusha
jno
xchg
rcl
sti
aas
or
lcall
mov
mov
xchg
inc
xor
inc
mov
mov
scas
cmpb
outsl
mov
pop
ret
imul
lahf
jb
rcrb
sbbl
notb
test
and
and
jne
int
push
outsb
dec
pushf
pop
pop
fcmovnbe
pop
and
mov
out
dec
add
sete
lea
lea
pusha
movzwl
jmp
jp
popf
xchg
icebp
in
xchg
mov
inc
cli
push
sbb
das
outsb
stos
xor
imul
test
cmp
lds
leave
lret
jge
adc
das
ss
js
aad
cmc
lahf
sub
clc
into
xor
je
mov
push
or
sbb
shll
mov
mov
cmp
ja
aam
mov
cld
mov
es
jb
movsl
push
jge
mov
push
sub
out
adc
push
xchg
fisubrs
add
ret
test
iret
xor
nop
les
sbb
fisubs
cmp
jne
or
testb
test
inc
subb
aaa
jns
sbb
ljmp
es
cmpsl
dec
xor
ret
xchg
dec
push
out
out
in
mov
or
imul
adc
lock
xchg
leave
push
mov
cmp
xchg
loopne
fsubs
addr16
jg
jb
jge
shlb
call
pushf
jmp
movl
pushf
pushl
call
jmp
pushf
pushf
mov
push
pushl
lea
jmp
lahf
add
jbe
adc
cmp
idivl
pop
ret
jl
mov
imul
cmp
in
pop
mov
lds
mov
das
add
pop
mov
outsl
cmp
sti
dec
jmp
and
mov
dec
cmpsl
jecxz
add
movl
not
or
cmpb
sub
ljmp
xor
add
dec
pusha
pop
inc
cmp
neg
call
lea
jae
pushf
lea
jmp
sub
add
insl
or
fwait
aad
sub
and
xor
push
inc
out
push
int3
nop
adc
xchg
jp
xchg
aaa
hlt
push
les
sbb
loop
pushf
adc
mov
add
lret
sbb
idivb
mul
or
mov
cld
in
push
test
dec
or
test
lock
lahf
sbb
rolb
sbb
divb
test
xchg
out
jo
inc
roll
mov
push
inc
cmc
add
mov
aad
or
imul
out
inc
hlt
xor
cld
mov
xchg
lock
cmp
or
jg
jge
mov
pushf
imul
lahf
rol
pop
mov
cli
mov
ss
int
push
jae
xor
jl
out
subl
mov
add
cmp
cmp
cwtl
movsbl
bswap
lea
pushl
lea
bswap
mov
pushf
movw
lea
ja
jmp
jmp
repnz
sahf
aad
fdivr
mov
cwtl
mov
insl
out
lock
mov
jns
mov
inc
pop
mov
inc
inc
push
movsb
rcrl
xchg
mov
jge
xlat
pop
nop
dec
lea
clc
sub
sti
mov
cmpb
in
cli
cltd
pop
jo
hlt
lahf
insb
repnz
pause
sub
xor
push
fnstsw
jle
test
ss
mov
adc
lret
in
movsb
lods
out
pop
jl
jl
dec
aad
mov
and
sbb
in
sub
push
add
pop
jne
mov
mov
pop
sbb
pusha
stos
lods
push
cmp
or
pop
mov
jne
mov
shlb
lds
rcll
in
fwait
inc
dec
push
pop
dec
stc
jne
xor
ret
cmp
scas
jmp
adc
pop
lret
jmp
jns
daa
lds
je
mov
or
adc
fsts
push
mov
lret
mov
sub
aaa
xchg
push
fistpl
sbb
ja
int
and
cld
push
push
xor
pushf
pop
push
push
rclb
inc
test
push
jp
push
add
and
cmp
pusha
xchg
ja
dec
mov
nop
xchg
mov
sbb
idivl
std
negl
push
jnp,pt
cltd
js
sbbb
into
xchg
aam
mov
jb
cmp
mov
test
push
jg
je
pushf
add
rcll
jp
idivl
sbb
cmp
and
mov
push
jl
cmp
cmpxchg
incb
add
mov
sti
cltd
mov
mov
pop
xor
xchg
lret
call
std
adc
pop
lcall
iret
xchg
or
test
in
call
push
lods
aad
pop
lds
lahf
cmp
lods
js
insb
clc
mov
sub
mov
movl
push
push
mov
movsb
mov
lahf
jmp
xchg
adc
xlat
enter
fisubl
dec
adc
jo
mov
or
xor
cmp
push
mov
lods
sbb
jmp
or
and
fwait
sub
enter
cli
inc
inc
dec
xchg
adc
jge
test
add
inc
gs
outsl
fs
gs
imul
add
xor
xchg
pusha
jbe
test
mov
inc
or
addl
daa
inc
das
xchg
cmp
negb
cltd
imul
xor
out
jp
ja
cmp
adc
jmp
psubw
lahf
shrl
cmpsb
imul
mov
fwait
bound
jns
leave
push
fisttpll
fwait
jno
aam
movsl
fistpl
and
jns
jne
or
jbe
fcompl
mov
rcl
fbld
xlat
lcall
xchg
ficompl
aam
fs
mov
fadds
test
lea
lea
jb
push
movw
pusha
lea
call
push
push
pushl
pushf
lea
jae
cwtl
lea
pusha
jmp
sub
sbb
jl
lea
sahf
fsts
xchg
cltd
pop
push
mov
sti
or
fsts
orb
jp
repz
dec
inc
andl
test
ss
push
sbb
mov
es
stc
fnstenv
pushf
mov
dec
cmp
pop
mov
fnstenv
cwtl
in
mov
test
call
int
ficoml
fcoms
cli
or
test
push
movl
pushf
push
jmp
psubw
js
push
divl
push
sbb
sbb
outsb
jmp
imul
adcl
lret
pop
sbb
lods
mov
sub
into
mov
pop
mov
mov
sub
push
shrb
add
and
decb
sbb
sub
mul
pop
ja
fcomp
outsb
in
xor
push
adc
outsb
xor
lock
lock
add
mov
jmp
jg
and
sbbl
arpl
arpl
pusha
push
lock
push
xor
ret
imul
fidivrs
jge
xchg
pop
push
push
scas
lods
sub
jmp
insb
int3
or
and
dec
xlat
fisttps
push
and
xlat
add
sbb
xchg
or
or
enter
mov
adc
cmp
pop
cltd
sub
dec
popa
pop
jge
jns
ds
data16
sahf
and
mov
enter
ljmp
and
or
xchg
bt
neg
sub
inc
pushf
shr
not
lea
add
call
call
jae
popa
push
repnz
sbb
cmpl
sub
and
mov
out
sarb
loopne
je
push
es
pop
fiaddl
dec
sub
push
in
jmp
lock
test
xchg
and
lret
pop
outsb
or
mov
or
add
cmpsl
fisttps
arpl
imul
test
xchg
and
in
xor
enter
nop
fldcw
test
rolb
jp
sbb
adc
ss
mov
dec
push
rcr
add
mov
jb
in
rolb
mov
notb
je
insl
cmp
pop
dec
push
jmp
clc
sub
nop
pop
fs
pop
pop
push
push
push
outsb
push
pushf
fs
out
xchg
mov
cld
mov
lods
lock
shr
int
cmpsl
negb
in
ds
sub
sub
in
xor
push
push
push
xchg
jmp
scas
and
pop
and
je
push
call
pop
mov
xor
jl
fucom
inc
sahf
pushf
loopne
and
mov
das
repz
bound
cmp
push
sub
sub
icebp
mov
clc
fdiv
adc
jmp
in
mov
push
je
popf
pop
subl
inc
ja
ret
mov
loop
enter
xor
in
mov
sub
mov
lea
call
inc
cwtl
shlb
xchg
sbb
outsl
xchg
dec
pop
inc
roll
sbb
ficomps
pop
mov
jmp
outsb
insl
insl
cs
insb
add
mov
pushf
inc
ljmp
data16
cmpsl
dec
pop
aaa
inc
cmp
jnp
jo
add
lahf
jns
mov
mov
mov
loope
fstps
fsubrl
lcall
pop
jmp
lcall
or
and
mov
xchg
xor
sub
jecxz
femms
push
push
in
rcll
int
sbb
push
adc
aam
adc
pop
and
xchg
ret
xchg
pop
xchg
jo
mov
mov
lahf
cmpsb
cmpsb
and
test
sbb
cmc
mov
mov
ficomps
jo
loopne
push
lods
xor
clc
cmp
pop
add
scas
rolb
pop
ljmp
or
push
push
push
pop
adc
pop
adc
dec
or
push
jg
mov
sbb
jae
adc
dec
rcll
loopne
mov
adc
pop
push
xchg
jb
jne
lret
jge
sbb
cli
popf
sub
stc
inc
lcall
clc
sub
int3
rolb
iret
cmp
dec
mov
fdivr
stc
xchg
adc
jp
jle
icebp
mov
in
mov
cld
xchg
add
dec
add
test
call
jno
or
adc
cmp
inc
or
cmp
sar
clc
fildl
xchg
lea
rcl
adc
pop
pop
pop
xor
clc
xchg
aas
repz
inc
pop
in
jo
pop
pop
mov
popf
xchg
mov
arpl
xchg
and
rolb
cwtl
or
sbb
ss
add
imul
out
xor
pushf
push
mov
fcoms
loope
add
sbb
jb
adcl
in
sub
inc
shll
setno
sub
jbe
mov
adc
es
xchg
test
push
mov
inc
jge
or
fnstenv
fisubrs
insb
jae
xchg
test
fbstp
lods
jb
sbbl
xchg
test
or
or
jecxz
je
cli
jnp
add
mov
mov
neg
cmp
cwtl
movzbw
not
call
add
daa
ret
or
mov
and
mov
mov
shrl
add
xchg
xor
out
xchg
cmp
add
jmp
and
dec
dec
and
or
enter
sbb
imul
inc
jo
ret
mov
cs
cmp
pop
je
clc
mov
hlt
xchg
push
jl
ljmp
stc
mov
test
test
pushf
pusha
pushl
movw
lea
je
test
cmp
sub
cmp
stc
bt
cmp
pushf
lea
ja
pushf
imul
cmp
add
push
pusha
pushl
push
lea
jmp
sub
aam
test
or
adc
test
int3
push
pop
jle
aam
sub
je
rcll
mov
std
cmp
hlt
inc
gs
jle
sub
sbbb
sub
cld
inc
lods
outsl
adc
add
ret
mov
sahf
and
mov
shl
xchg
aas
iret
cmp
xor
xor
jge
add
sbb
testl
outsb
xchg
in
push
leave
imul
popf
addr16
gs
ret
leave
mov
add
pusha
ds
jp
mov
jns
jmp
add
lea
dec
aad
rcll
sub
xor
xchg
xchg
test
sbb
imul
pop
push
test
in
stc
in
push
cmp
test
pop
frstor
lds
xorl
cld
inc
clc
ficompl
andb
clc
pop
push
sbb
das
adc
mov
lods
jbe
or
lahf
or
movsl
lods
stos
imul
xor
test
add
dec
outsl
arpl
inc
jb
add
and
dec
int3
add
cli
push
fisubs
sub
in
pop
pop
sbb
pop
bound
jne
aam
fidivl
sbb
jnp
fcoml
xor
dec
sbb
aad
inc
jmp
add
and
loop
scas
iret
jae,pn
stos
jbe
sbbb
fstp
cmpsl
stc
into
std
stc
out
pmaxsw
push
sub
cmp
pushf
lret
cs
je
cmp
cld
xchg
inc
outsl
cmc
push
loop
jmp
rcr
sbb
cwtl
rcl
movsl
movsl
test
or
or
jg
popa
adc
xor
mov
pop
arpl
jp
pop
add
je
xchg
xlat
and
sahf
fmull
mov
jge
push
push
jecxz
pop
push
ret
mov
mov
ja
cmp
jae
andb
mov
inc
mov
adc
xor
test
mov
shl
bswap
mov
sbb
mov
btr
push
xor
inc
mov
stc
test
btc
test
mov
bsf
movsbw
mov
cmp
sub
rcr
push
mov
clc
mov
aaa
cmc
mov
aas
test
adc
shrd
sub
sar
lea
and
test
sete
sub
mov
pushf
shl
push
pusha
push
lea
jmp
aam
mov
mov
push
das
adc
ficompl
sbb
sbb
cmpl
mov
add
jbe
sbb
add
stos
mov
pop
and
inc
test
push
jl
adc
ret
and
shll
icebp
das
xchg
rclb
pusha
jg
out
add
push
jb
les
xchg
jo
ret
adc
movsb
add
out
ja
aas
mov
rorl
in
dec
mov
loopne
iret
rcrl
rorb
add
in
stos
lret
pusha
mov
in
jns
jmp
ret
in
imul
push
dec
or
iret
or
dec
enter
jnp
push
mov
int3
fmul
lret
push
jno
xchg
xchg
and
xchg
leave
push
mov
pop
ret
es
dec
vpinsrw
pusha
ds
jno
fwait
mov
or
push
ljmp
gs
cmp
adc
or
lcall
mov
pusha
ficomps
pusha
imul
jmp
cmp
pushl
pusha
cmc
clc
pusha
cmp
push
jmp
push
call
push
pushf
movl
movb
pusha
movb
pushf
lea
jmp
lea
jne
push
pusha
pusha
push
pushl
ret
xor
push
add
xor
xchg
push
bound
fxam
push
es
ret
cmpb
in
insl
push
sti
test
xchg
cmp
shl
mov
push
leave
mov
adc
call
icebp
mov
jb
push
dec
inc
enter
cli
pop
sti
sub
sti
shrl
jne
int3
mov
call
rol
cmp
push
add
add
sahf
mov
cmc
dec
andl
lods
lcall
xchg
dec
adc
and
test
in
sarb
xchg
aaa
inc
sti
push
int3
lods
jg
pop
ror
and
sub
xor
orb
into
or
scas
pop
mov
mov
adc
pop
fwait
out
fstps
jle
mov
repnz
lock
adc
ret
out
jns
jo
sub
sbb
fnstcw
ljmp
mov
dec
sbb
pop
aam
fdivrl
add
aas
xlat
xchg
inc
in
lahf
gs
mov
mov
dec
push
inc
jge
std
cmp
mov
daa
inc
movsl
pushw
push
mov
repz
stos
test
lret
popa
pop
and
out
add
cmc
popa
sahf
xchg
je
jo
cmp
xchg
xchg
adc
xchg
sbb
leave
lret
sub
ja
mulb
mov
call
cmp
negb
notl
xchg
dec
dec
fs
or
mov
outsl
lock
lret
pop
add
fcoms
aad
je
pusha
jg
js
pushf
mov
repz
sahf
in
push
loop
rorb
pop
pop
test
cwtl
int3
outsb
sbb
cmp
sbb
jne
mov
and
jo
test
add
dec
rol
inc
push
lcall
sbb
sub
adc
mov
fwait
mov
add
mov
mov
stc
xchg
push
and
jle
pop
add
movsl
pop
cmp
rcll
sub
ret
jae
sub
xor
pop
orl
stc
cltd
sahf
pop
pop
scas
adc
or
out
adc
loopne
in
and
xchg
repz
sub
mov
sub
popf
addl
imul
sub
mov
add
jne
shl
dec
neg
mov
cmp
jmp
in
orb
jnp
das
stc
jne
dec
xchg
dec
mov
adc
jecxz
or
mov
nop
sub
cmovg
mov
pop
mov
push
mov
divb
outsb
in
add
cmp
jae
lods
mov
adc
outsl
into
inc
mov
ljmp
cs
int3
mov
inc
fidivrl
pop
mov
into
sub
sbb
aas
or
rol
pop
dec
or
add
cmp
inc
push
or
nop
out
or
lock
xor
dec
mov
stos
push
adc
cmp
ffreep
aas
inc
pushf
xor
jge
test
inc
icebp
out
push
add
mov
dec
mov
rolb
fists
jne
inc
add
mov
loope
sub
adc
sbb
sbb
ja
push
test
aam
icebp
nop
cmp
mov
mov
inc
orl
scas
icebp
nop
add
rcr
mov
rcr
sar
not
movsbw
sub
aas
setg
and
das
adc
mov
pushf
shl
bt
movw
jmp
cmp
cltd
adc
adc
cs
scas
lods
stos
out
aaa
iret
push
in
mov
push
cmp
pop
roll
nop
notl
cmp
mov
dec
adc
stos
xchg
pop
testb
push
into
into
add
mov
into
aas
les
bound
and
mov
pop
sbb
int3
mov
push
mov
inc
lahf
call
mov
test
loope
sbb
int
mov
scas
insb
jmp
jg
aad
mov
jp
mov
aaa
aaa
mov
idivb
test
leave
rcrb
push
push
jb
test
pusha
mov
lea
jne
cmp
shr
xor
aaa
bsf
call
cs
or
jb
or
xchg
fcomps
mov
mov
push
sahf
ficoml
les
sub
fsts
push
int
div
mov
add
or
and
loopne
call
pop
jl
xor
sbb
mov
jle
and
sarb
cmp
pop
das
xor
sarb
test
test
jmp
dec
push
xorl
loop
shr
lock
imul
xlat
sbb
movb
cmp
fstpl
xchg
or
lock
iret
push
mov
cwtl
xchg
pop
and
mov
dec
aam
or
mov
mov
movl
xchg
dec
lods
jmp
aam
xchg
andb
rep
js
cwtl
adc
icebp
or
mov
jns
ret
lcall
push
in
setne
lds
dec
mov
sub
into
sub
push
lds
push
sub
aad
push
in
inc
push
into
jbe
aad
das
lahf
pop
jae
dec
jle
adc
bound
pop
fadd
pop
fildll
and
push
in
mov
dec
lea
test
pushf
pop
sub
fisubrl
test
sub
jmp
lock
and
push
aaa
xchg
push
pop
in
pop
cld
sti
mov
cmpsl
rolb
mov
mov
adc
pop
adc
loopne
pop
leave
jmp
push
pop
lret
in
cld
fstpt
rorb
dec
xor
pusha
testb
fisubrl
sub
dec
into
ret
mov
inc
outsb
and
add
mov
mov
cmpsl
dec
adc
mov
stc
ljmp
push
fildll
dec
test
in
xchg
xchg
mov
test
insb
mov
out
call
out
test
push
pop
xchg
sbb
daa
test
lret
cmp
arpl
xor
int
out
mov
jge
xor
aam
pop
pop
xchg
mov
aaa
pop
pop
ret
xchg
xlat
lods
sbb
stos
testl
mov
push
or
addr16
cmp
jbe
add
int3
adc
cmc
add
push
ret
jns
nop
test
clc
mov
inc
inc
mov
imul
cld
sbb
imul
ret
leave
lcall
mov
sub
sbb
cli
int3
lock
sbb
aad
insb
popa
fcoml
repz
xchg
mov
mov
inc
in
loop
push
enter
rcrb
adc
cltd
push
xchg
jb
test
lea
call
pushf
jmp
xchg
pusha
movb
movl
mov
movl
push
movl
pushf
pushf
lea
jmp
sbb
cli
hlt
xchg
pop
push
in
xchg
cmpsb
jg
add
xchg
int3
enter
mov
out
ss
mov
stc
jbe
lds
outsl
aam
adc
pop
cmpsl
aas
int3
jne
int
lret
es
inc
andl
ret
repnz
icebp
pusha
jns
fidivrl
adc
jbe
leave
push
xlat
addr16
test
jns
mov
xchg
jo
adc
sub
or
lea
stos
js
sub
mov
cmc
stc
jg
inc
iret
xchg
inc
add
push
mov
sub
push
push
iret
pop
sbb
dec
iret
add
data16
push
rcl
addr16
push
jno
sbb
aam
filds
into
andb
in
pop
pop
sub
dec
jle
stc
or
cmp
adc
push
popa
movsl
pop
outsl
faddl
xchg
xchg
or
mov
xchg
sbb
clc
std
lea
js
stos
ss
hlt
mov
jns
xor
ds
test
nop
imul
xchg
cs
inc
mov
jo
mov
test
add
fildll
adc
js
sub
dec
outsb
hlt
xchg
xor
test
mov
js
mov
imul
in
lahf
mov
fs
adc
inc
ffreep
xchg
not
or
loope
loopne
orb
mov
mov
dec
inc
add
jns
and
xor
nop
add
pop
rclb
ret
pop
and
jae
ret
es
or
xor
loop
mov
scas
adc
outsb
cmp
mov
outsl
sti
imul
pop
sbb
repz
test
imul
jno
xchg
mov
sub
xchg
push
xchg
sbb
enter
xor
dec
enter
or
jns
dec
inc
lds
dec
mov
imul
jnp
pushf
inc
mov
iret
pushf
imul
lahf
movl
leave
ret
in
mov
out
icebp
sub
mov
pop
push
fisubrs
sub
icebp
jno
mov
ss
frstor
add
mov
out
push
mov
out
sub
stos
movsb
mov
mov
out
mov
sbbb
ret
cmp
inc
push
and
sbb
xchg
movl
push
cld
inc
stos
pop
xor
negl
repz
mov
shll
inc
mov
inc
and
mov
dec
pushf
jl
je
sub
aad
andl
enter
add
pusha
call
cli
push
inc
sub
xor
mov
ret
dec
add
mov
push
sbb
adc
add
mov
lea
dec
dec
seta
shl
add
sar
mov
jmp
sbb
mov
push
lahf
gs
mov
dec
dec
push
or
std
inc
inc
jle
mov
insl
pop
addr16
movsl
outsl
mov
sub
xor
loopne
rcll
dec
push
xchg
dec
fwait
sbb
add
push
jle
stc
fcoms
loopne
push
push
enter
push
push
push
dec
jb
aam
jb
and
addr16
cwtl
cld
push
mov
dec
mov
and
ds
mov
test
test
pop
imul
sar
cmp
push
xchg
lcall
pop
or
adc
inc
xchg
xchg
mov
scas
dec
mov
mov
bound
arpl
clc
inc
pop
mov
fistl
fistpll
pop
pop
dec
mov
int
dec
adc
xchg
iret
xor
test
mov
call
push
outsl
cmp
or
xchg
mov
sub
icebp
cmp
jbe
xchg
push
mov
mov
lahf
jle
lds
pop
inc
in
add
aaa
test
dec
cmp
sti
adc
outsb
adc
push
incb
dec
add
out
cmp
out
iret
imul
xchg
or
jae
nop
xchg
je
cmp
out
ja
mov
mov
sbb
sbb
add
xor
test
bt
clc
cmc
test
seto
mov
jmp
lea
jb
pushf
mov
pushf
lea
jmp
in
sbb
adc
jmp
in
lods
cmp
inc
push
add
ret
pusha
pop
xor
mov
xchg
sbb
inc
inc
movsl
loopne
jmp
add
mov
addl
scas
std
pop
fchs
pop
xchg
mov
inc
nop
mov
jge
xor
je
cwtl
inc
xor
test
jecxz
adc
leave
mov
lahf
cmp
in
push
hlt
lea
push
xchg
fwait
movsb
jecxz
and
cmpsb
repz
clc
fcmovnu
adc
xchg
inc
rcll
fstp
pop
fstpl
test
ret
cmpsb
jp
xchg
lahf
gs
ds
jbe
sub
xchg
push
arpl
xlat
mov
js
and
and
fstp
pushf
xchg
adc
pop
and
lods
cwtl
mov
out
xlat
imull
stc
mov
movsl
popa
sbb
shl
sbb
xchg
xchg
mov
js
sub
popa
js
xchg
add
loopne
cld
je
out
in
popa
ret
push
outsb
xor
inc
inc
ficomps
enter
pop
cmpl
hlt
adc
fmull
adc
cli
shll
push
in
int3
imul
add
mov
cmpsb
or
jmp
imul
mov
adc
cwtl
fildll
push
dec
ss
sahf
adc
outsb
sbb
xorl
divb
cmp
or
fcompl
loope
mov
or
test
pop
ljmp
int
shlb
icebp
mov
mov
xchg
lcall
mov
xor
add
ja
test
inc
bound
dec
stos
aaa
out
mov
push
inc
test
in
cli
ret
cmpb
aaa
pop
cli
jl
inc
loop
mov
inc
xorb
add
sbb
mov
fwait
out
pop
stc
mov
or
lds
xchg
pop
addl
or
add
pusha
pusha
call
cmc
ja
pushf
bt
cmp
pushf
pushf
lea
jae
pushf
cmc
test
jmp
sub
mov
inc
push
sub
mov
aaa
negl
add
test
or
loopne
mov
mov
ret
xchg
push
and
jae
mov
mov
icebp
sbb
outsl
in
mov
xchg
xlat
sbb
nop
xchg
jge
adc
push
fwait
jns
jl
lods
xchg
data16
lods
divl
jae
jns
aaa
inc
mov
add
jae
gs
insb
xor
cs
insb
add
lret
mov
jmp
clc
mov
jl
sbb
xchg
fsubs
add
std
inc
or
fadds
push
jle
out
dec
mov
mov
leave
lret
call
lret
in
loop
sbb
pop
ficoms
subl
push
insl
fdivs
mov
fistpl
pushf
pusha
adcb
sbb
int3
add
pop
mov
cmp
movsl
stos
xchg
bound
add
push
push
cltd
sbb
pop
sub
repz
mov
inc
add
pushl
lea
push
pusha
pushf
jmp
push
in
test
mov
stos
es
jae
lock
aaa
inc
add
scas
cmpl
mov
jg
sarb
ja
cld
dec
lret
mov
int3
ss
push
jbe
cmp
andl
add
ljmp
adc
jb
jge
mov
jl
ret
jmp
out
xchg
jmp
fwait
adc
movsb
push
xchg
jns
sahf
mov
or
cmp
cmp
mov
jo
nop
das
lcall
rclb
insb
mov
mov
aaa
cmc
orb
fdivs
test
pop
setg
mov
mov
push
mov
lods
call
pushf
push
pushf
lea
jne
clc
btc
test
mov
bswap
mov
inc
sub
adc
push
push
mov
sar
or
bswap
mov
cmp
mov
shl
stc
call
push
or
pusha
mov
lea
jne
rol
bsr
mov
bt
cmp
bt
cmp
or
pushf
pushf
lea
je
jmp
lahf
pop
movsbl
lea
jmp
adc
sub
push
insl
jne
add
pusha
and
push
movsb
popa
rolb
les
dec
xchg
mov
inc
pop
nop
in
dec
or
movsb
ficompl
xor
addr16
neg
mov
cmp
ret
mov
pop
popf
jge
leave
sbbl
ret
mov
mov
mov
adc
ret
jg
dec
adc
sbb
inc
add
call
lea
push
pusha
jmp
add
xchg
mov
pop
dec
mov
loope
and
imul
dec
sub
cmc
xor
orb
inc
in
inc
andb
fistl
test
mov
sarl
and
xchg
add
push
enter
fidivrs
mov
adc
sbb
lret
cltd
jnp
sub
xchg
loopne
sahf
inc
stos
scas
aaa
adc
xchg
jne
add
jo
repz
rclb
adc
add
call
mov
pushf
lea
je
jmp
das
nop
push
leave
std
mov
xchg
xor
rep
mov
mov
xor
xchg
in
in
mov
sbb
lahf
stos
mov
jns
leave
je
repz
mov
fcoms
int
jno
or
stos
movsl
das
int
int3
sbb
es
xor
adc
stos
andl
inc
dec
mov
adc
jmp
aas
adc
xlat
xchg
mov
or
cmp
or
cmp
dec
add
fldenv
fldcw
push
inc
dec
std
hlt
mov
fcompl
test
pop
push
addr16
add
mov
pop
mov
push
shll
shlb
scas
jbe
sbbl
jle
mov
stc
jp
fs
scas
les
lcall
jae
lea
adc
dec
or
jg
gs
add
add
and
aam
cmc
jns
mov
add
not
jmp
push
pusha
stos
call
cld
xor
das
push
shlb
xor
std
jge
rorl
mov
cmp
in
xor
shrl
mov
aam
push
or
ja
add
inc
inc
fs
dec
mov
or
cmp
out
ss
hlt
movsb
je
cli
ss
sub
xor
mov
inc
push
mov
xor
lds
lahf
xor
outsl
mov
je
push
stos
xor
xor
add
sub
xchg
sti
into
outsl
dec
push
sbb
mov
inc
aaa
bound
cmc
mov
out
pop
gs
xor
testl
cld
enter
cltd
sbb
and
stos
jmp
and
adc
pushf
fs
cwtl
sub
in
lcall
repnz
stc
jns
sbb
mov
cwtl
stos
lods
adc
mov
adc
inc
xchg
xchg
aam
out
add
loopne
xor
mov
dec
dec
push
outsb
adc
insl
insl
cmp
or
stc
pop
sbb
insb
mov
xchg
sbb
je
insb
mov
ds
cs
push
xor
xchg
cmc
movb
mov
adc
add
push
xchg
mov
insb
add
xchg
pop
fistpl
sbb
insb
mov
sub
sub
push
pushl
jl
testl
pop
xchg
mov
movsb
mov
mov
dec
mov
jbe
call
mov
add
xor
inc
fildl
lcall
mov
sbb
mov
mov
iret
xchg
mov
dec
dec
mov
in
insb
dec
mov
sti
clc
and
nop
iret
ret
inc
mov
in
shll
cmc
scas
daa
imul
push
dec
adc
xchg
mov
movsb
rcr
into
lret
into
aaa
orl
test
out
xchg
xchg
push
adc
pop
adc
mov
stos
daa
xorl
xchg
dec
mov
sbb
lock
mov
imul
cmp
adc
jmp
push
ret
in
mov
inc
dec
movl
lret
lcall
ja
stc
push
sub
mov
mov
ja
or
mov
in
jmp
sbb
jge
or
pop
cltd
cmp
pop
mov
lods
test
cmp
testl
popf
jnp
fs
mov
jns
outsl
insl
pop
or
fwait
gs
push
fimull
push
sub
aam
sbb
xor
push
test
push
adc
mov
mov
xchg
into
jg
in
aaa
pop
push
cmp
lea
and
shll
cli
pushf
adc
in
xor
pop
push
dec
push
int
jg
inc
add
mov
xchg
inc
movsl
jl
out
xchg
and
popa
add
push
mov
sbb
mov
mov
fsubs
rorb
call
mov
call
dec
rol
mov
setno
sbb
bswap
bt
mov
bt
add
call
sub
jmp
sbb
mov
sub
movzww
pushf
call
ror
xchg
mov
btr
shld
add
pushf
not
add
xor
sub
bswap
dec
shr
mov
cmc
shl
stc
stc
clc
shr
bt
or
call
pushf
lea
jb
pushf
pushf
popl
push
pushl
popl
push
pushf
mov
lea
jmp
mov
pushf
pushf
movb
pushf
lea
jmp
cmc
bt
cmc
add
push
push
mov
push
pushf
movl
push
lea
jmp
neg
mov
pusha
cmc
cmc
jmp
sub
bsf
cwtd
mov
bt
mov
push
test
bt
not
pusha
clc
bt
cmp
not
cmc
mov
call
jmp
pushf
popl
pushl
jmp
not
rdtsc
jmp
pushl
popl
pushl
mov
push
lea
jmp
pushf
sub
pusha
pusha
jmp
mov
cmp
pusha
cmp
sub
movl
not
pushf
pushf
push
mov
lea
jmp
pushf
popl
movl
mov
pusha
jmp
jmp
mov
cmc
stc
mov
call
jmp
jmp
call
mov
pushl
push
add
movb
mov
movb
push
lea
jmp
stc
pushl
popf
mov
pushf
pushf
lea
jmp
push
pushf
mov
pushf
pushl
mov
mov
jmp
ror
setae
sar
mov
rdtsc
call
not
sbb
test
mov
movb
add
movl
mov
mov
push
lea
jmp
xor
std
rol
pop
test
jmp
and
lea
ja
pushf
pusha
mov
jmp
bswap
mov
push
add
pushl
pushf
lea
jmp
mov
pushf
pusha
push
lea
jmp
das
mov
rcr
add
shl
mov
pusha
pushl
bt
sub
pushf
shl
mov
push
mov
jmp
cmp
sub
stc
call
clc
rcr
neg
pushl
popl
movw
shrd
dec
not
movl
pop
not
adc
mov
stc
sub
mov
push
pusha
pushf
not
pushf
pushf
mov
lea
jmp
pusha
pushl
popl
pushl
pushf
pushl
lea
jmp
add
jmp
daa
aad
call
pushl
lea
jge
dec
jmp
call
mov
pushl
pushl
call
lea
pusha
mov
setg
cwtl
pop
lea
jns
mov
push
pushf
movb
divl
lea
jl
mov
call
mov
clc
cmp
shld
mov
pusha
add
pushf
jmp
mov
pusha
movb
pushf
lea
jmp
jmp
pusha
push
jmp
pushl
popl
mov
movw
lea
jmp
pushf
pushl
pushf
popl
jmp
mov
pushf
popl
jmp
dec
pusha
btr
pop
ror
movzbw
movb
ror
sar
add
neg
bts
inc
sub
cmp
movzbl
jmp
pusha
sub
je
dec
movzbl
pushf
add
cmp
bt
cmc
bt
xor
jmp
pushf
pusha
mov
push
pushf
pushl
movb
lea
jmp
mov
mov
movw
pushf
popl
push
call
pushf
not
movw
lea
jmp
shr
call
pushf
popl
lea
jge
pusha
movw
pushl
popl
mov
lea
jmp
call
rol
mov
pusha
pushf
add
pushf
mov
call
push
pusha
push
pushf
mov
pushl
push
pushf
movw
mov
pushl
mov
pushf
popl
stc
jmp
push
movl
lea
jb
mov
jmp
push
jmp
ror
test
cmp
stc
add
clc
push
cbtw
stc
pushl
bt
cwtl
cmp
bt
pushf
pushf
sub
pushf
call
movw
call
pushf
mov
push
pushf
movb
lea
jmp
test
stc
movw
sub
push
call
add
pusha
mov
pusha
mov
push
mov
pushf
lea
jmp
lea
jno
movsbl
mov
push
pushf
mov
pusha
jmp
cmp
mov
test
sub
push
pusha
cmc
mov
shl
movw
mov
pusha
mov
jmp
movw
call
xchg
pushf
push
call
movzbw
mov
movzbw
movzbw
mov
pusha
divl
pusha
mov
mov
jmp
push
mov
push
mov
movb
movw
call
jmp
jmp
not
pop
mov
push
lea
jmp
bswap
shl
bt
lea
cmp
test
cmp
push
lea
ja
and
mov
call
pushf
popl
pushf
mov
pushl
popl
pushf
push
pushf
push
lea
jmp
shld
aas
mov
call
popf
pushf
pushl
pusha
movb
lea
jmp
call
mov
push
call
cmp
mov
clc
xchg
btr
adc
mov
and
rol
shrd
rol
mov
ror
cmp
movsbl
call
cmp
shld
pushl
mov
pushf
pushf
popl
jmp
lea
jo
pusha
rep
or
rol
bsf
shr
mov
xor
cmc
mov
add
ja
cmp
popf
pusha
mov
pushl
push
lea
jmp
setg
mov
lea
and
mov
pusha
rcl
mov
sub
jo
pusha
stc
movw
add
pushf
pushf
clc
shld
pushf
pushf
pushf
mov
movw
pushf
pushf
pushf
popl
push
push
push
pushl
popl
pushl
push
lea
jmp
call
ror
mov
neg
mov
test
ror
neg
or
pushl
popl
pushf
stc
rcl
movl
inc
push
mov
stc
lea
jo
cmc
test
sub
jmp
pushl
xor
pusha
movsbw
dec
not
movb
inc
dec
dec
shr
add
rcl
inc
rcr
add
mov
jmp
pushf
movb
mov
jmp
not
movw
lea
jmp
and
pusha
movzbl
jmp
seto
push
movzbw
mov
pusha
mov
call
push
cmp
and
jmp
mov
push
pusha
pushf
mov
lea
jmp
mov
jmp
pushf
movw
call
lea
jne
clc
bsr
btc
mov
cmp
test
push
and
jmp
mov
jmp
jmp
dec
clc
bt
ror
bt
sub
clc
cmp
bt
stc
mov
bt
stc
test
jmp
pushf
not
pushl
pushl
lea
jmp
lea
movb
push
pushf
movw
lea
jmp
push
mov
movl
pushf
lea
jmp
mov
push
mov
call
jmp
movzbl
pusha
bt
clc
stc
sub
pusha
test
cmc
neg
sub
jge
pushf
xor
pushf
call
lea
dec
shld
jmp
jmp
test
movzbl
cmp
cmp
pushf
add
cmc
pushf
jmp
pushl
mov
bt
call
pushl
clc
test
add
pushf
movb
lea
jmp
jmp
pushf
pushf
pushf
mov
jmp
clc
add
pushl
movb
pushf
pushf
popl
jmp
bsr
mov
lea
shl
shl
adc
pushl
popl
lea
bswap
movl
clc
not
sub
dec
mov
test
sub
pushf
not
push
pushf
lea
jmp
pushf
popl
pushf
pushl
popl
mov
pusha
lea
jmp
sbb
bt
mov
adc
neg
jmp
test
push
pushf
sub
pushf
movb
stc
movb
cmpl
pusha
call
bt
inc
add
movzbw
pusha
movzbl
push
movzbw
mov
push
movw
inc
jmp
call
cmp
stc
pushl
stc
push
jmp
clc
jmp
jmp
bts
rcr
pushl
popl
and
bsf
movl
stc
cmc
not
mov
bt
test
jmp
sub
jmp
test
daa
or
mov
clc
rcl
mov
cmc
add
call
mov
movb
movl
push
pushf
pushl
ret
cmc
cmc
mov
clc
push
mov
cmc
mov
movsbw
cmp
mov
btr
mov
shl
test
mov
mov
shld
rcr
pushl
popl
and
lea
movl
shl
mov
pusha
sub
push
movw
lea
jbe
not
pusha
pusha
pushl
lea
jmp
lea
mov
mov
pushl
pushf
lea
jmp
ror
mov
inc
call
mov
mov
pusha
pushf
pushl
lea
jmp
movl
push
pusha
call
mov
pushf
mov
call
movb
jmp
mov
pushf
pushf
movb
pushl
ret
mov
not
add
jp
stc
and
push
call
call
lea
cmc
pushf
jmp
lcall
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
inc
pop
add
pop
add
cmp
pop
inc
pop
add
inc
pop
add
pop
add
dec
pop
add
es
add
pop
add
cs
add
cs
add
es
add
sub
add
es
add
pop
add
sub
and
pop
add
cmp
cwtl
cmp
xor
sub
add
cmp
out
pop
add
pop
add
and
add
add
es
add
cmp
pop
add
xor
xor
add
inc
pop
add
pop
add
and
rolb
and
fidivrs
pop
add
das
pop
add
inc
pop
add
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
pop
add
pop
add
pop
add
and
add
cmp
add
and
mov
add
pop
add
inc
pop
add
inc
pop
add
cs
add
inc
pop
add
add
cmp
cmp
push
inc
pop
add
cmp
nop
and
add
inc
pop
add
inc
pop
add
dec
pop
add
and
sub
imul
add
add
sub
push
and
xor
add
cmp
add
pop
add
es
add
pop
add
pop
add
inc
pop
add
pop
add
and
pop
add
inc
pop
add
sub
add
dec
pop
add
and
add
cmp
pop
add
pop
add
sub
add
add
cmp
pop
add
cmp
pop
add
das
pop
add
cs
add
cmp
xor
add
cs
add
inc
pop
add
cs
add
dec
pop
add
inc
pop
add
cmp
sub
add
inc
pop
add
inc
pop
add
cmp
pop
add
pop
add
add
cmp
jno
pop
add
pop
add
pop
add
cmp
pop
aas
pop
add
pop
add
cs
add
inc
pop
add
es
add
cmp
xor
inc
pop
add
add
xor
sahf
cmp
add
es
add
pop
add
ss
add
inc
pop
add
cmp
sahf
cmp
add
inc
pop
add
add
inc
pop
add
pop
add
pop
add
cmp
inc
inc
pop
add
pop
add
pop
add
pop
add
dec
pop
add
pop
add
pop
add
inc
pop
add
inc
pop
add
es
add
pop
add
add
inc
pop
add
xor
pop
add
inc
pop
add
inc
pop
add
add
pop
add
inc
pop
add
cmp
pop
inc
pop
add
and
pop
add
pop
add
es
add
and
pop
add
pop
add
add
pop
add
aaa
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
cmp
pop
add
dec
pop
add
ss
add
es
add
and
xor
pop
add
das
pop
add
inc
pop
add
cmp
jae
pop
add
cs
add
and
xor
pop
add
inc
pop
add
aaa
pop
add
aaa
pop
add
mov
mov
test
test
bt
mov
shr
mov
shl
shl
shl
push
xor
push
shld
clc
stc
pushl
or
push
and
movl
sub
inc
mov
pusha
test
cmc
sub
pushf
not
pushf
push
pushf
lea
jmp
call
clc
shr
call
call
mov
pusha
clc
add
push
pusha
push
pushf
lea
jmp
cwtl
test
jmp
pushl
pushf
popl
clc
cmp
mov
pushl
pushf
push
mov
call
mov
pusha
jmp
mov
mov
lea
pusha
mov
pusha
mov
push
pushf
lea
jmp
bsf
bsr
mov
pushf
pusha
add
pushf
mov
push
call
mov
pusha
jmp
add
cmc
cld
pushf
cmc
pushl
popf
mov
movw
push
lea
jmp
push
test
lea
jae
sub
jmp
jmp
bt
call
cmp
mov
clc
mov
bt
cmp
cmc
bt
mov
ror
dec
pushf
mov
bt
and
mov
dec
rol
bsf
mov
rcr
bt
call
pushf
mov
movw
push
mov
pushf
pushf
lea
jmp
mov
pushf
mov
movw
mov
jmp
jmp
pusha
call
pusha
call
push
jmp
jmp
not
push
mov
lea
jmp
stc
pusha
pushf
xchg
cmc
call
pushf
mov
push
mov
lea
jmp
push
call
movw
pushf
popl
pushl
cmc
cmp
mov
cmp
cmp
mov
push
clc
call
jmp
call
ror
cmc
rcl
rcl
mov
bt
sbb
shl
stc
mov
cmc
sub
cmp
test
bt
jmp
pusha
mov
pushl
mov
call
pusha
pusha
movb
mov
pushf
pushf
pushf
call
pushl
pusha
mov
mov
pushf
mov
lea
jmp
stc
and
push
call
sub
pushf
not
movw
movw
movl
lea
jmp
pushf
setg
setbe
mov
push
xchg
call
btc
xor
add
rcl
adc
xor
ror
rol
pushf
bswap
and
jmp
pushf
or
mov
mov
stc
cmc
add
mov
lea
jmp
jmp
push
mov
pushf
pushf
popl
jmp
add
pushf
mov
push
mov
pushf
lea
jmp
mov
ror
push
lea
jae
bt
add
pusha
test
cbtw
pusha
jmp
mov
mov
pusha
lea
jmp
mov
pushf
pushf
popl
test
pusha
cmc
mov
jmp
setl
mov
call
call
jmp
pushf
pushf
popl
call
pusha
setge
inc
mov
jmp
mov
call
shrd
movzbl
btc
mov
bt
cmp
add
push
pushf
lea
jmp
pusha
mov
push
mov
push
lea
jmp
inc
push
pop
bsr
mov
pusha
test
pusha
add
movb
lea
jmp
pushl
popl
push
pushf
movw
lea
jmp
call
pushf
mov
pusha
pushf
popl
push
call
pushf
pushl
lea
jne
rcl
bsr
xorb
bswap
mov
call
mov
call
call
jmp
cmc
clc
sub
pushf
pushf
mov
pusha
push
pushl
pushf
mov
pushf
movb
pushf
push
lea
jmp
pushl
lea
lea
jne
pusha
mov
mov
mov
movb
pushl
lea
jmp
movb
pushl
popl
pushf
mov
movl
mov
lea
jmp
pushf
popl
call
call
stc
stc
bt
and
push
mov
pushf
mov
pushf
popl
pusha
pushf
pushf
jmp
shl
pushf
call
mov
jmp
mov
pushf
pushl
pushl
ret
shrd
mov
pushf
test
call
mov
movb
mov
pushl
ret
pushl
pushl
pushl
popl
pushl
lea
jmp
test
bt
mov
stc
push
mov
stc
sub
pushf
lea
jne
jl
test
clc
xor
push
pushf
xchg
call
bswap
mov
dec
ja
sub
mov
jmp
sub
movw
lea
jmp
cmc
bt
mov
jmp
pushl
call
mov
dec
dec
rcr
cmp
neg
rol
ror
sbb
shld
not
movzbw
call
shrd
aam
stc
mov
cmp
shl
jmp
mov
call
sub
push
lea
movb
pushf
jmp
mov
pushf
pushf
call
mov
push
pushf
dec
test
sub
pushf
call
or
jmp
xor
jmp
mov
call
mov
cld
movb
movb
push
cld
jmp
pusha
mov
jmp
shrd
test
clc
aaa
notl
rol
bsr
neg
lahf
mov
call
movzbw
cwtl
mov
bt
cmp
cmp
bt
sub
push
pushl
mov
movb
lea
jmp
stc
mov
clc
test
sub
bt
pusha
jmp
btr
test
clc
bswap
mov
btc
shld
add
call
pushf
mov
call
jmp
mov
mov
pushl
pushf
popl
jmp
neg
bswap
mov
clc
sub
push
call
mov
cmc
push
and
movzbw
call
call
pushf
pushf
popl
cmp
call
cmc
add
mov
clc
add
pushf
push
lea
jmp
mov
bt
mov
bt
jmp
shl
call
mov
push
lea
jmp
clc
sub
jmp
movzbw
pushf
call
add
pusha
mov
pushf
push
lea
jmp
movb
jmp
push
call
jmp
jmp
call
mov
clc
clc
test
or
movw
pushf
pushf
lea
je
bt
stc
stc
xor
call
shl
xor
movsbw
sub
add
adc
xor
btr
rol
dec
shrd
movzbw
and
inc
bts
mov
cmc
sub
pusha
mov
push
pusha
movb
lea
jmp
inc
setl
mov
pusha
cmc
push
sub
push
mov
movb
movl
movb
pushf
lea
jmp
mov
rcr
sar
mov
rol
jmp
pushf
jmp
add
clc
mov
xor
pushf
dec
mov
call
jmp
push
call
cwtl
mov
jne
pushf
mov
push
mov
pusha
jmp
mov
call
push
push
push
not
push
mov
lea
jmp
inc
pushf
decl
mov
lea
jne
push
jmp
test
cmp
xchg
clc
mov
bt
rol
mov
not
movsbw
inc
mov
sub
bsf
sar
pushl
popl
push
pushl
shrd
inc
movl
jmp
mov
mov
bts
pop
bts
mov
rcl
cmc
bsf
mov
mov
neg
dec
pop
shl
mov
bsf
btr
bsf
pop
pushl
popl
pusha
movl
stc
bts
shl
mov
test
sub
push
call
mov
stc
pushf
sub
add
jae
bt
cmp
clc
shr
pushf
push
pusha
mov
jmp
jmp
jmp
mov
jmp
mov
not
pushl
push
pushl
lea
jmp
bt
shl
movsbw
shrd
movzbl
mov
setg
bsr
jmp
mov
dec
or
jmp
bt
pushl
popl
xor
neg
pusha
inc
movl
cmc
sar
rol
mov
mov
pushf
bt
sub
jmp
mov
setns
mov
call
setno
mov
jmp
mov
not
pushf
mov
pushf
lahf
or
movzbl
mov
mov
mov
stc
mov
rol
bsf
bt
mov
not
rcr
mov
mov
clc
not
bsr
mov
btr
mov
shl
shrd
pushl
popf
pushl
pop
pushf
mov
call
pushf
add
jmp
call
pushl
lea
jg
mov
pushf
lea
jmp
sub
pushf
pushf
add
movb
call
cmp
bt
xadd
mov
sub
clc
mov
cmp
stc
call
aas
sbb
push
mov
and
shr
mov
rcl
mov
cmc
pushf
bt
bt
not
stc
call
xchg
clc
movb
stc
sub
cmc
cmc
movb
stc
neg
pusha
xor
stc
ror
stc
cmc
push
sub
push
cwtl
jmp
push
push
rep
test
movw
cld
call
mov
call
pushf
mov
pushf
clc
mov
movb
push
jmp
call
ror
stc
mov
jmp
not
stc
mov
clc
mov
test
call
pusha
pushl
popl
push
lea
jmp
pushf
pushf
mov
push
pushf
lea
jmp
pusha
pusha
push
pushl
popl
movl
push
movl
movw
lea
jmp
push
mov
pushf
mov
clc
pushl
mov
movzbw
bsf
shld
mov
rol
test
mov
movzbw
jmp
xor
bsf
mov
neg
add
not
jmp
call
pushf
popl
bt
mov
jmp
pushf
add
pushf
movb
pushf
jmp
pusha
xchg
mov
cmp
mov
pushf
pushf
stc
add
push
mov
pushf
pushf
shrd
push
jmp
btr
clc
movzbw
mov
shr
rol
jl
adc
mov
push
call
mov
movb
mov
pusha
mov
lea
jmp
jmp
sub
pushf
pushf
not
movw
pushf
movb
push
lea
jmp
and
stc
neg
and
mov
cmp
clc
bt
add
push
pushl
pushf
mov
lea
jmp
lea
je
mov
pusha
push
pushl
lea
jmp
pushl
popl
pusha
pushf
mov
lea
jmp
pushf
mov
mov
movw
pushl
lea
jp
push
push
movb
pushf
popl
call
jmp
pusha
mov
pushf
push
pushf
movb
lea
jmp
jmp
mov
jmp
mov
cmc
shl
stc
mov
neg
bts
rol
mov
xor
mov
or
mov
btr
call
sub
push
pushl
lea
call
call
pushf
push
call
push
not
push
push
lea
jmp
pushf
mov
pusha
pushl
popl
movb
pushf
pushf
lea
jmp
mov
pushl
mov
pusha
lea
jmp
mov
pushf
push
pushf
popl
push
push
pushf
call
push
movb
mov
pusha
pusha
mov
call
lea
aaa
mov
add
sar
shl
shld
mov
pushf
call
call
mov
movb
call
mov
call
rcr
pushl
popl
xor
dec
sub
sar
movl
movsbw
cmp
rcr
mov
call
sub
jmp
shrd
mov
bt
clc
add
pusha
pushf
push
lea
jmp
mov
call
bsr
adc
or
bsr
movzbl
bt
clc
cmc
ror
add
add
xor
pusha
movzbw
not
jmp
bt
mov
cmp
bswap
pusha
clc
pushl
sub
pushf
not
push
dec
clc
pushf
bswap
cmc
sub
test
sub
call
call
pushf
mov
mov
pushf
movb
pusha
lea
jmp
pusha
add
pushf
pushf
cbtw
cmp
pushl
pushf
clc
cwtl
pushl
stc
cmc
stc
sub
mov
pushl
movb
movb
lea
jmp
lahf
movsbw
cwtl
push
cwtl
mov
pusha
push
lea
cpuid
jmp
sub
shld
dec
mov
cmp
inc
push
mov
mov
shl
pushl
shl
cmp
bswap
cmc
push
movsbl
inc
neg
push
mov
pushf
stc
sub
mov
not
mov
pushf
pushf
push
lea
jmp
jmp
jmp
mov
jmp
cmc
dec
movzbl
test
cmc
add
call
pushf
add
jmp
pusha
push
jmp
call
push
clc
sub
call
pushf
movw
mov
push
pusha
push
call
pushl
popl
pushf
mov
mov
lea
jmp
bsr
shr
shl
mov
clc
bt
add
call
pushf
xor
pushf
dec
jmp
bt
mov
cmc
push
clc
pushf
mov
cmp
xchg
movsbw
inc
lea
mov
shld
push
mov
not
sar
mov
sar
pushl
popl
test
bsr
stc
movl
pusha
bt
mov
push
cmc
mov
push
sub
jmp
pushl
xor
call
mov
pushl
popl
pusha
movw
push
mov
lea
jmp
jmp
push
pusha
movw
dec
pusha
jmp
mov
xor
sub
jp
pop
cld
test
clc
popf
pusha
movb
movl
lea
jmp
movsbw
pushf
popl
pushl
call
pushf
call
pushf
pushl
popl
movl
mov
movb
mov
lea
jmp
call
movl
call
lea
jne
bts
mov
clc
bt
and
call
call
pusha
bts
btr
sub
mov
cmp
call
push
mov
pusha
push
jmp
mov
clc
inc
call
pushf
pushf
pushf
popl
jmp
pushf
mov
movb
mov
lea
jmp
movb
mov
pushl
popl
mov
movb
movb
movw
lea
jmp
bsf
mov
btc
not
ror
mov
xor
pushl
popl
cmp
inc
movsbl
movsbw
movl
cmp
shl
call
call
mov
movb
pusha
lea
jmp
jmp
pushf
push
mov
call
inc
call
mov
shrd
mov
or
cmc
mov
shl
add
mov
shrd
pushl
popl
mov
sar
movl
lea
clc
mov
push
stc
pusha
bt
sub
push
not
movl
pushl
lea
jmp
add
add
not
pushf
pushf
movb
pushl
lea
jmp
call
pusha
mov
jmp
not
movb
call
call
pusha
pushl
mov
mov
pushf
pusha
push
mov
pushf
pushf
pushf
popl
bt
clc
test
clc
mov
cmp
mov
mov
cmc
bt
xchg
test
inc
mov
shld
mov
rol
bsf
mov
rcl
add
pushl
popl
or
movl
bswap
sbb
neg
pop
mov
pushl
cmc
call
call
test
test
lea
clc
bt
movw
cmc
xor
stc
cmc
cmc
bt
ror
pushf
stc
sub
push
call
sub
call
pushf
popl
pushf
pusha
mov
pushl
popl
movb
pushf
pushf
lea
jmp
mov
movb
lea
jmp
pushf
neg
call
pushl
pushf
popl
pushf
cmc
mov
cmc
mov
push
test
call
pushf
popl
pushf
pushl
popl
mov
mov
movw
movl
lea
jmp
mov
call
pushl
popl
pushf
lea
jmp
bt
mov
pushf
clc
pushf
sub
stc
shr
pushf
jmp
pushf
popl
call
mov
pushl
pushl
mov
lea
jmp
call
clc
sub
pushf
pusha
call
sub
jmp
pusha
pushl
adc
mov
call
pushl
pushl
mov
push
push
pushf
popl
call
pushf
pusha
jmp
jmp
mov
pushl
pushf
lea
jmp
mov
push
lea
std
push
pusha
mov
jmp
jmp
pusha
pushf
jmp
jmp
sub
stc
test
neg
xor
clc
xor
ror
ror
bswap
sub
setbe
mov
pushf
movb
test
add
push
pusha
push
call
lea
sar
sub
sar
aas
aad
cwtl
lea
cmc
pop
shl
shr
and
rcl
cmc
sub
mov
movsbw
pushf
mov
push
call
pushf
cmp
call
clc
jmp
pushf
pushf
push
pushf
pushf
popl
pushf
push
pushl
popl
mov
lea
jmp
pusha
jmp
push
pushl
pushf
popl
jmp
call
test
mov
dec
movsbw
rcl
mov
rcr
dec
bts
mov
and
mov
jmp
mov
push
movw
pushl
mov
lea
jmp
pusha
mov
pushl
pushl
mov
pushf
lea
jmp
test
sub
pusha
call
bt
and
lea
xchg
mov
test
rol
setg
add
call
pushf
popl
jmp
add
pusha
call
jmp
test
cmc
cmp
pushl
jmp
mov
pushf
lea
pushf
popl
dec
mov
cmp
clc
setne
push
shl
and
xchg
bsr
push
pushf
bsr
xchg
mov
setle
push
shl
push
setne
mov
pushl
shrd
and
neg
push
rcl
lea
mov
clc
pushf
sub
and
not
lea
shrd
btr
bswap
pushf
cmc
lea
lea
or
sar
sub
rol
xadd
mov
ror
rcl
movsbw
shl
mov
lea
sub
add
shl
mov
dec
stc
add
add
jmp
pusha
jmp
ror
bt
bt
sub
pushf
clc
clc
pushl
mov
cmp
clc
pushl
sub
pushf
pushf
mov
pusha
lea
jmp
test
pop
mov
call
call
push
call
add
mov
jmp
mov
mov
movb
lea
jmp
pushf
mov
mov
pushf
pusha
mov
call
mov
pushf
mov
mov
movb
lea
jmp
jmp
mov
call
call
xor
not
bts
mov
rol
call
movb
mov
jmp
jmp
cmp
call
bt
add
stc
jmp
push
pushl
pusha
jmp
pusha
add
pushf
mov
mov
pushf
lea
jmp
pushf
mov
pushf
movb
pushf
popl
call
pusha
pushf
pushl
lea
jne
setae
btc
sub
bts
xorb
pushf
pushf
lea
mov
pushl
pusha
lea
jmp
pushf
popl
pushf
clc
pushf
stc
mov
test
jmp
xor
pushf
pushf
dec
pusha
mov
push
ror
clc
add
pushl
push
clc
cbtw
pushl
pushf
clc
cwtl
call
pushl
popl
movb
pushl
mov
lea
jmp
mov
movw
mov
mov
mov
lea
jmp
pusha
push
mov
call
mov
movb
mov
lea
jmp
pushf
mov
mov
push
pushf
mov
call
