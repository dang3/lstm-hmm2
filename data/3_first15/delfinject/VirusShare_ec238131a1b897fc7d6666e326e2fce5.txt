xchg
lahf
notb
lods
loopne
in
jl
sarb
xchg
sub
ljmp
mov
sub
mov
orl
roll
cmp
sub
imul
cmpl
bound
jmp
pusha
test
out
push
les
xlat
ds
and
adc
scas
push
sub
and
pop
push
jmp
ret
mov
mov
add
stos
push
xorb
mov
sahf
dec
xchg
and
add
repz
push
bnd
lahf
scas
or
ret
scas
sub
in
mov
movsl
stos
in
cmpsl
lret
mov
and
lret
inc
jno
pop
repnz
xlat
cmpsl
loop
inc
xchg
push
enter
dec
int
cli
cmc
add
fwait
xchg
scas
outsb
lock
enter
adc
gs
mov
sbb
sbb
xor
adc
scas
movsb
xor
fnstsw
loop
jmp
lods
inc
sbb
push
jbe
fstpt
jg
cmp
adc
fstpl
add
xchg
pop
ljmp
loope
inc
mov
repz
lcallw
xchg
dec
fcompl
shlb
ljmp
dec
je
mov
mov
loopne
nop
mov
insl
mov
mov
addl
adc
fldt
xorl
lock
inc
pop
loope
sbb
movsb
jle
jl
or
xor
inc
cmc
popa
sbbb
adc
imull
pop
rolb
das
in
jp
sti
loope
popf
cmpsb
xchg
ljmp
sbb
mov
nop
xchg
push
push
dec
sbb
cmpsl
and
fwait
cli
mov
lcall
push
je
and
aam
gs
sbb
push
xchg
add
ds
aad
mov
mov
pop
out
add
xor
sahf
push
shlb
fistpll
mov
in
in
cmp
movsb
mov
mov
movsl
fwait
push
mov
adc
sub
out
inc
lahf
movsl
jmp
pop
xor
outsl
stc
mov
dec
push
dec
scas
jae
xor
xchg
es
aam
mov
dec
aaa
scas
cmp
pop
dec
bound
mov
and
mov
hlt
cltd
push
addr16
xchg
int
jp
xchg
jecxz
es
cmpsl
insl
ljmp
lds
sbbl
push
add
cmc
pop
frstor
inc
xchg
mov
bnd
loope
les
inc
push
cwtl
dec
and
lret
sti
js
testl
pop
in
lahf
cmc
mov
ljmp
int
js
mov
mov
push
mov
add
pop
cs
popf
out
dec
add
lods
repnz
stc
int3
insl
xor
dec
testb
test
aad
rcrb
pushf
adc
rcrl
aam
and
mov
lcall
fs
pop
cmpsb
lcall
and
jp
pop
cmp
cmpl
je
push
cmp
cmpsl
xchg
add
stos
xor
loopne
jbe
arpl
aad
push
mov
xchg
jbe
lahf
in
aaa
daa
out
inc
stos
sti
jo
add
adc
loop
mov
xor
and
pmaddwd
and
not
inc
push
int
fwait
das
fwait
call
or
adc
movsb
sbb
adc
les
out
clc
fwait
aam
lcall
loopne
mov
stos
adc
mov
iret
xchg
mov
outsb
jp
jbe
push
jnp
xlat
and
add
std
arpl
lods
pusha
cmpsb
in
xor
ret
mov
inc
xchg
sbb
popa
mov
pop
push
mov
pop
jl
mov
lds
sbb
ss
lret
pop
icebp
fsub
inc
xor
scas
jbe
adc
xchg
cmp
adc
dec
dec
outsb
shrl
sbb
ret
movsl
sbb
imul
jg
out
fbstp
sub
adc
bound
xor
xor
in
mov
mov
loop
stos
pop
sahf
int
movsb
inc
stc
mov
cmc
fsubrs
std
cmp
push
scas
push
jnp
xchg
std
xchg
das
mov
pushf
or
mov
mov
test
daa
insl
cmp
fistps
stc
mov
xor
jns
sub
insb
jmp
out
cli
xchg
out
mov
jl
adc
stos
mov
push
and
lods
arpl
xor
shlb
cmc
push
outsl
adc
insl
jp
stos
loopne
adc
gs
pop
enter
add
cmp
in
flds
int
add
jecxz
adc
pop
aas
sbbl
xor
lock
js
clc
iret
fyl2xp1
pop
int
or
pop
shlb
gs
mov
xchg
dec
sar
mov
pop
push
push
incl
pop
jp
out
imul
push
hlt
stc
xchg
lds
inc
mov
iret
or
or
jbe
xchg
sub
cltd
sbb
adc
lcall
mov
push
cmp
mov
mov
test
out
xor
ss
sub
clc
push
xor
loopne
adc
push
repz
dec
lds
nop
daa
dec
addr16
ficoml
ror
lahf
inc
mov
test
mov
mov
xchg
call
xchg
sbb
adc
adc
jnp
stc
push
mov
in
aas
lcall
or
dec
int3
in
cmp
and
sbb
sbb
add
lea
cmpsb
and
push
jle
mov
mov
std
mov
in
aad
mov
std
cmp
jge
negb
iret
push
mov
addr16
add
push
inc
in
xlat
test
cmp
pop
outsl
cvtdq2ps
fdivl
xchg
in
lret
in
mov
mov
inc
push
inc
xchg
add
mov
pop
add
in
addr16
out
out
aad
adc
out
mov
xchg
imul
insl
fists
arpl
call
data16
xor
inc
push
add
pop
xor
in
cltd
pushf
mov
outsl
dec
add
xlat
faddp
mov
inc
and
jp
test
loope
cwtl
mov
pop
mov
idiv
mov
xchg
rcrb
adc
xchg
ret
add
dec
sbb
scas
ss
and
jle
pop
and
sti
xchg
sub
clc
sbb
ficoml
mov
data16
enter
push
mov
es
xchg
mov
xor
mov
ss
jnp
jle
adc
stos
icebp
adc
std
adc
nop
push
in
test
push
rcll
out
test
loope
and
adc
mov
fdivs
shl
or
pop
adc
rcl
out
scas
cmp
adc
mov
push
rcl
outsl
cmp
adc
sbb
pusha
cltd
mov
icebp
mov
notl
orb
xchg
in
xchg
rcr
and
in
push
and
xchg
cmp
repz
scas
cmpsb
or
test
call
lds
aas
sbb
scas
arpl
xchg
push
mov
std
mov
pusha
mov
lahf
xchg
mov
ret
add
jo
std
pop
and
imul
call
mov
and
lea
pop
xor
lods
pop
xor
fwait
ret
popf
mov
cmc
jb
das
shl
pop
scas
jmp
inc
adc
mulb
ss
sub
fidivrs
mov
mov
jb
rcrl
adc
cmpsb
or
lret
scas
pop
lea
movsl
xor
mov
xchg
cltd
push
push
xorb
add
and
dec
sub
mov
dec
jecxz
lds
push
jne
jbe
xchg
out
add
je
sub
mov
dec
push
ficomps
and
lods
movsl
lcall
xchg
add
sub
push
lahf
xchg
das
jl
es
roll
out
mov
xor
xor
push
repnz
lds
or
cs
xchg
mov
and
mov
sbb
or
push
add
call
out
jns
sbb
mov
jne
mov
repz
fistps
pop
lods
mov
pop
out
pop
lods
adc
mov
std
jbe
add
addb
gs
test
or
sbb
xchg
adc
sbb
adc
xchg
or
in
and
insl
outsl
push
pop
sbb
jbe
ljmp
in
xchg
lds
mov
pop
fwait
mov
das
push
xor
insl
mov
pop
adc
sub
popf
bound
cltd
adc
jbe
in
or
pop
add
push
rcrl
jb
scas
jl
test
mov
imul
lret
movb
sbb
enter
sub
icebp
pop
mov
and
fs
push
call
mov
mov
xchg
jl
shll
fwait
arpl
sub
sbb
outsl
mov
xlat
aas
imul
inc
aam
decb
mov
test
sbb
pop
and
fcoms
scas
xchg
or
jnp
pop
push
sti
jp
pop
mov
push
and
inc
iret
call
insb
inc
xor
stc
stc
mov
mov
shlb
sbb
hlt
push
inc
or
and
mov
ret
dec
push
cmpsb
xchg
sbb
adc
rcll
mov
insl
out
dec
cmpsb
push
insl
dec
nop
push
nop
sahf
arpl
lea
sar
xchg
and
adc
push
in
pop
fistps
movsb
icebp
out
jmp
sub
stos
aam
les
inc
or
incb
push
sti
mov
adc
add
test
rclb
push
mov
sbb
out
add
fstpt
mov
les
jo
std
or
and
lahf
mov
rorb
out
inc
mov
mov
dec
cmp
jo
jae
mov
inc
mov
mov
lds
test
fsts
inc
out
lret
mov
and
in
jns
adc
pop
mov
data16
fisubl
pop
adc
loope
cwtl
insl
inc
cs
add
adc
mov
faddl
imul
lahf
jl
push
ret
sub
enter
inc
repz
hlt
popf
lds
adc
hlt
repz
ret
stos
jg
mov
sti
mov
int3
inc
mov
xor
jb
xor
stos
mov
iret
xor
and
cmc
es
addr16
jecxz
xchg
dec
pushf
jecxz
test
mov
mov
data16
mov
jp
lcall
adc
push
add
push
cwtl
out
push
in
out
dec
fwait
in
add
scas
ljmp
and
jns
inc
dec
inc
stc
inc
test
mov
push
imul
ret
jae
icebp
flds
dec
lcall
loope
xlat
xchg
loope
mov
jo
xchg
ds
add
sub
inc
shr
test
jl
les
cltd
dec
dec
mov
in
push
inc
pop
cwtl
inc
inc
push
js
dec
adc
mov
sbb
test
fists
rorl
mov
sahf
cmp
imul
mov
ret
push
fsubrs
testl
jl
pop
mov
push
jmp
mov
in
das
gs
adc
test
adc
dec
fisttpll
outsl
repnz
cmp
and
outsl
ret
dec
xor
lahf
sbb
inc
call
int3
xchg
adc
xor
jo
push
jns
pop
mov
mov
cwtl
lock
sbb
mov
or
clc
sbbb
lods
xchg
loopne
sub
add
adc
or
mulb
fld
dec
mov
jmp
lret
cwtl
pop
or
call
sbb
fucom
in
movsl
xor
aad
xchg
add
dec
add
daa
mov
pop
pop
scas
cs
xchg
cli
push
mov
les
loopne
adc
cwtl
or
mov
repz
cmp
cwtl
in
push
sbb
notl
dec
lret
xchg
inc
adc
repz
mov
push
adc
dec
inc
cmp
sbb
dec
loope
sbb
xchg
and
ss
xchg
outsl
fcmovb
jecxz
dec
cwtl
cltd
orb
cmpsb
and
pop
xor
xchg
stc
mov
xchg
push
mov
xchg
repz
mov
xlat
cmp
fdivs
add
lods
scas
or
out
xchg
pushf
and
mov
in
sahf
daa
sbb
cwtl
push
inc
jle
fldenv
in
and
dec
dec
cs
cs
adc
btc
xchg
inc
ret
testb
out
gs
mov
pushw
and
ds
push
push
clc
jns
cmpsl
inc
sbb
pop
outsb
or
ds
clc
add
push
sub
add
test
sub
std
cmp
jbe
lods
fcomi
scas
push
push
out
inc
das
jmp
das
sbbb
fcomi
dec
outsl
shrl
outsb
adc
xor
pop
xchg
pop
mov
jo
test
and
ss
xchg
out
data16
mov
jmp
loope
and
jo
push
lret
xchg
and
pop
fsubrl
idiv
add
pop
cld
popa
mull
aad
into
sbb
lret
jo
bound
repnz
fwait
cltd
mov
ret
loop
xor
xchg
xchg
sub
out
xchg
and
adc
lret
and
out
add
inc
rcrl
repnz
roll
int
xchg
ja
inc
ja
mov
movsl
fs
sbb
xor
cld
in
pop
mov
js
das
cmp
lea
rcll
push
test
fdivrl
aas
mov
divl
add
movsb
sbb
cmp
sbb
jge
ja
sbb
inc
mov
xorl
jmp
in
shlb
xchg
gs
in
movsb
push
lahf
xorb
adc
iret
scas
pop
addr16
imul
and
push
fs
fisubl
mov
add
shl
jp
xor
add
addl
je
repnz
push
cmp
jle
adc
lret
and
add
das
movsl
jmp
mull
stos
push
push
test
jle
js
xor
mov
push
mov
scas
shrl
subl
lods
outsl
push
andl
jg
cwtl
mov
mov
xor
ficompl
stos
jb
adc
cmpsl
mov
push
sbb
fucomi
loopne
adc
ljmp
idivb
jmp
jns
mov
add
loop
inc
popf
push
fistpl
in
xchg
or
scas
sbb
mov
cmp
xor
clc
push
and
xlat
mov
dec
mov
xlat
inc
inc
loope
xlat
xchg
mov
cmp
outsl
sbb
sub
jne
xor
mov
push
pop
xor
inc
mov
mov
out
push
andb
sub
stos
and
fldcw
adc
shlb
shrl
pop
xor
lock
into
push
mov
adc
out
adc
and
ffreep
jae
cli
idiv
scas
push
aad
add
mov
movsl
pop
and
xor
fmul
cltd
outsl
cli
and
pusha
lahf
pop
jmp
jmp
in
dec
cmc
out
inc
mov
xchg
aam
xchg
sub
daa
out
jp
mov
shr
sti
and
lcall
cltd
daa
jg
mov
ss
cmpsl
mov
mov
xor
stc
lahf
cs
ret
sub
push
xchg
aaa
je
data16
jmp
pop
mov
iret
xorl
jbe
scas
shll
rol
aas
pop
fnstcw
dec
add
mov
in
and
insl
push
jns
inc
push
sbb
in
pop
stc
xor
pop
jae
mov
in
cld
mov
loopne
cmp
or
bound
xchg
out
mov
mov
enter
adc
cmc
push
xchg
out
mov
aaa
inc
scas
sbb
mul
mov
fcomps
loop
aas
insl
mov
xchg
sbb
addr16
std
and
jl
add
in
loope
jge
ret
pop
sub
lods
rcrl
pop
inc
out
cwtl
sub
mov
pop
pop
scas
xor
pop
stos
push
fsubr
push
subl
xchg
dec
ja
dec
out
mov
out
cmc
sbbb
rolb
cli
ja
loope
jo
cmp
js
push
in
lret
out
or
lods
jmp
xor
mov
rolb
addb
adc
and
test
stos
or
stc
push
jnp
inc
mov
sbb
rcr
lcall
jecxz
jbe
lahf
xlat
aad
push
mov
xchg
outsb
mov
mov
cmp
inc
int
popa
pop
ss
xor
cmc
aad
xchg
dec
hlt
xchg
push
xor
cmpb
lcall
push
xchg
pop
pop
scas
dec
rclb
nop
cmp
inc
out
cmp
ljmp
ljmp
xor
push
movsl
mov
pop
fdivl
sbb
sub
pushw
or
stos
add
lret
cmp
sbb
hlt
inc
and
dec
dec
fucomp
repnz
fwait
cli
dec
pop
mov
inc
mov
fwait
das
pop
addb
jb
inc
mov
and
cltd
ss
mov
xchg
jnp
out
adc
inc
ret
fidivrs
jns
xchg
push
dec
loopne
mov
mov
scas
cmp
cs
cli
sub
xchg
jb
and
mov
dec
in
add
dec
or
mov
sbb
jmp
sub
pushf
into
lret
in
inc
dec
stos
xchg
dec
mov
stos
and
dec
pushf
fstl
pop
lret
mov
out
and
lcall
mov
and
mov
push
xchg
push
out
push
add
mov
jg
mov
in
aam
js
jle
das
pusha
leave
cs
popf
sub
xchg
ljmp
test
mov
scas
sahf
in
lret
es
orb
xor
pop
stc
xchg
push
xchg
cwtl
rol
sub
pop
stc
xor
push
inc
adc
xchg
sbb
fwait
inc
jp
sbb
push
ds
fisubl
cmp
pop
and
add
cmp
jp
scas
pop
out
in
add
dec
and
sbb
mov
inc
mov
xlat
push
addr16
fistps
test
sti
xchg
inc
lret
inc
cmpsb
xchg
in
sti
stos
icebp
mov
xchg
das
daa
or
mov
test
or
cmp
stc
cmp
call
stos
incb
fcoms
dec
lret
movsl
int
dec
mov
mov
fwait
push
sub
xchg
xchg
jmp
mov
call
sbb
mov
pushf
pop
mov
nop
adc
stos
fwait
cwtl
cli
mov
movsl
cmpsb
lcall
or
push
test
ss
xchg
xorb
add
xchg
mov
cli
adcb
movsl
rcrb
test
andl
rolb
push
aas
roll
xlat
mov
xchg
mov
rclb
xor
sarl
lcall
hlt
push
xchg
insb
sub
lds
cltd
dec
sahf
mov
xchg
rol
jg
adc
or
pop
adc
mov
fwait
cwtl
lock
in
out
jl
sub
rolb
bound
popa
mov
jge
adc
lahf
add
subb
mov
out
sbb
push
insb
sub
and
xchg
jmp
push
je
pop
and
test
popf
xor
cmpsb
int
shl
test
adc
repz
push
outsb
pop
and
cmpsl
push
bound
into
sbb
xchg
add
in
fdivrs
inc
push
or
mov
rolb
sti
adc
or
xor
xchg
cmp
out
daa
mov
jns
sbb
sbb
xchg
repnz
pop
fldt
cmc
insb
cmc
xor
pop
or
push
sbb
mov
inc
fs
adc
mov
jecxz
sbb
jl
xor
xchg
add
dec
or
cmpsl
insb
loopne
loop
loope
dec
loope
fcmovnu
jae
xor
inc
mov
scas
pop
fists
call
or
inc
add
pop
cmpsl
nop
fcmovnu
ljmp
movsb
pop
push
inc
inc
mov
adc
cmp
push
inc
xor
nop
xchg
pop
daa
sub
int3
cs
adc
push
loope
sbb
jp
xchg
cmp
xor
movsl
mov
icebp
arpl
addr16
xor
repz
daa
aas
insl
popf
shrl
and
jl
add
lock
mov
add
insl
or
pop
xchg
loope
int3
jmp
dec
inc
push
dec
push
push
jmp
imul
lahf
cmpsb
sbb
push
int3
cli
sub
mov
ljmp
push
loop
mov
test
push
sti
lods
xor
jp
iret
adc
test
ja
xchg
pinsrw
arpl
andb
xchg
stc
sub
xor
mov
xlat
cltd
mov
xchg
cmc
mov
jle
mov
jecxz
icebp
loope
stos
repnz
cmpsb
mov
fadd
xchg
jns
ja
addr16
dec
pop
dec
inc
jge
mov
negb
push
jo
bound
das
add
inc
mov
daa
dec
je
adc
pop
pop
pushf
data16
mov
mov
sbb
jno
es
rclb
je
pop
mov
cmpb
mov
and
adc
add
lret
loope
add
out
sbb
sbb
dec
movsl
test
push
lods
lret
dec
sarl
in
bound
xchg
ret
lret
inc
into
adc
into
push
clc
loop
mov
jmp
lods
xlat
xchg
push
mov
fcoms
fdiv
fwait
movsl
mov
xchg
sub
int
imul
pop
imul
loope
pushf
mov
fwait
dec
rcl
js
popa
ret
adc
pop
push
inc
aam
push
cltd
pop
xchg
adc
xor
sarl
out
xchg
es
add
stc
repz
outsb
mov
rcll
dec
scas
pop
loop
cmpsb
les
adc
mov
push
cmpsb
pop
adc
dec
mov
imulb
sbb
or
gs
cs
mov
addl
data16
adc
out
mov
out
mov
pop
pusha
rorl
sbb
hlt
xchg
jl
inc
out
mov
aaa
js
loop
jp
out
into
inc
xchg
sub
enter
adcb
loope
xlat
adc
sbb
dec
sbb
in
cmp
sub
movsb
dec
je
pushf
inc
push
adc
mov
pop
pop
mov
pop
nop
xchg
test
je
mov
stos
xchg
dec
mov
in
dec
add
ss
fs
nop
addr16
fidivl
mov
inc
inc
bound
aad
mov
hlt
repz
and
lahf
jno
stos
ret
data16
push
daa
orb
filds
stc
mov
aam
cwtl
and
add
push
mov
sahf
nop
or
in
mov
xchg
adc
data16
xchg
cli
int3
ret
insl
push
mov
call
xchg
mov
push
aam
in
ds
loop
stos
cmpsb
dec
loopne
mov
push
adc
jnp
cltd
adc
mov
mov
movsl
jle
sbb
jb
adc
je
out
and
mov
cli
lret
call
add
lcall
sti
gs
nop
js
lcall
pop
mov
add
icebp
iret
mov
out
stos
push
cltd
decl
repnz
push
adc
add
in
or
out
xchg
lods
sahf
mov
lods
or
insl
push
inc
push
adc
andl
sahf
movsl
jmp
nop
jns
stc
movsb
repz
shll
mov
arpl
mov
adc
in
out
pop
jb
arpl
in
jmp
test
cmpsl
scas
push
in
sbb
out
sbb
xor
rcll
mov
repnz
test
cmpsl
fs
test
sbb
lahf
shr
and
aas
das
into
push
sbb
iret
sub
loopne
sub
xor
and
orb
mov
fcomps
in
push
cmp
mov
xchg
test
ret
push
xchg
bound
out
loop
lods
push
lods
mov
or
sti
pop
sbb
xchg
das
sar
std
cmp
into
cli
push
test
and
jl
mov
inc
dec
xchg
pusha
xchg
push
insb
or
je
aad
icebp
js
fcomip
pop
mov
cltd
sbb
jecxz
sbb
cmpsl
sbb
scas
rdmsr
ret
pop
pop
loopne
or
fildl
fisubs
in
sbb
pop
cmp
mov
xor
dec
mov
iret
xlat
lahf
test
and
dec
pop
xchg
std
mov
movb
std
test
mov
mov
xor
popa
push
lock
sbb
sub
xchg
fwait
icebp
outsl
test
mov
xor
xchg
es
pop
cmp
ret
scas
testb
inc
imul
xchg
dec
leave
ret
sarb
mov
sub
push
movsl
sub
lock
scas
mov
shrb
es
aaa
rcrb
sbb
and
in
ds
sub
push
scas
repz
jecxz
mov
popa
es
jmp
out
scas
and
adc
xchg
pop
and
fildl
not
test
mov
stc
stos
pop
sbb
fld
bsr
btc
sub
fldt
jne
xchg
aad
pusha
lock
pusha
hlt
aad
pusha
call
aad
pusha
loopne
pop
or
cmpsb
sbb
cmc
ljmp
jns
fimull
call
push
cmp
cmpsb
data16
iret
push
inc
push
or
cmpsl
mov
int
sub
push
cmpsb
fadds
and
jmp
fdivrl
lahf
jg
jne
popf
dec
outsb
mov
imul
or
movsb
inc
test
fs
mov
fistl
mov
add
mov
stc
jbe
es
mov
xor
push
in
ds
aas
cli
pop
test
jb
test
scas
gs
rcll
sub
pop
cmp
jge
clc
inc
push
cltd
ret
lods
stc
ljmp
iret
inc
mov
xor
in
jg
ljmp
add
cmpsl
fadds
into
sbb
js
mov
sbb
jecxz
aad
hlt
insb
xor
aaa
pop
fcmovbe
push
xchg
add
out
sub
cld
push
cld
mov
in
dec
popf
xlat
or
out
cmc
add
and
inc
lahf
mov
pop
mov
outsb
add
add
or
dec
lret
fisubrl
subl
inc
lret
repz
in
push
xchg
jecxz
xchg
xchg
or
mov
mov
add
cmpsb
cmp
movsb
div
adc
popa
out
pop
in
mov
pop
mov
cs
or
stos
addr16
cwtl
out
sbbb
sub
and
insl
imul
and
call
push
das
repnz
pop
or
cs
iret
or
pop
and
ss
mov
insb
cmpb
mov
add
push
icebp
lods
add
mov
jmp
sub
mov
xchg
push
xchg
fcmovnb
cmp
bound
sub
inc
mov
xchg
xchg
je
es
adc
mov
mov
pop
adc
pushf
fstpt
sub
test
outsl
imul
jp
in
sbb
mov
sarb
mov
hlt
sub
sbb
jmp
jg
or
add
das
out
or
fmul
jl
and
sub
lock
or
fildll
aaa
pop
sbb
mov
or
mov
push
mov
sbb
das
cmp
pop
cmpsb
inc
out
push
add
dec
clc
mov
scas
fsubrl
mov
cli
cmp
cmc
decl
sub
xchg
dec
fwait
in
inc
jns
dec
rcll
in
xorl
idivl
mov
ret
dec
out
push
xor
mov
sbb
insl
adc
shrl
jns
cmp
pop
add
sbb
lahf
mov
dec
cld
pop
lcall
xchg
incl
pop
imul
sbb
test
inc
sbb
inc
cli
mov
ds
adc
inc
sub
or
call
loopne
mov
cld
fists
inc
aaa
jne
cwtl
xchg
cmpsl
insl
mov
push
insl
sbb
sbb
orb
popf
and
mov
lcall
jecxz
xchg
fxch
movsl
pop
out
cs
fnstenv
in
xchg
sbb
nop
int
idivl
clc
popf
push
scas
test
imul
call
in
adc
push
out
nop
sbb
pop
inc
loop
cmp
add
mov
jle
adc
mov
popa
adc
inc
stos
imul
mov
punpckhdq
pusha
xchg
in
jae
repnz
lds
adcl
push
pusha
rolb
imul
xchg
pop
dec
mov
xchg
sbb
into
inc
fs
jle
adc
sarb
movsl
add
test
dec
lret
movsb
cmp
xchg
or
aaa
xchg
repnz
xchg
xchg
stc
lcall
out
ret
cs
mov
cld
cli
push
push
jp
xchg
das
inc
adc
icebp
mov
cmpsb
xlat
fimuls
lods
in
lcall
push
jp
movsb
adc
mov
pmaxub
addb
mov
fwait
push
add
pop
stos
loopne
xchg
scas
or
adc
popf
pop
cmp
xchg
sbb
call
fwait
inc
xchg
fisttps
es
inc
jmp
popa
push
mov
sti
clc
mov
add
insl
and
xor
out
pop
daa
scas
sbb
sahf
and
sti
and
mov
ja
bnd
jns
mov
push
mov
pop
cmpb
ret
jnp
sub
addr16
lock
jb
pushf
div
int
out
fwait
sub
aaa
imul
test
lret
jns
adc
loope
es
bound
add
cli
xchg
jne
sbb
sbb
cs
imul
scas
push
lcall
xchg
mov
push
xchg
lea
scas
and
stos
stos
xchg
sahf
outsl
int
frstor
push
insl
in
or
aam
movsb
or
jg
movsl
add
cli
cmp
xchg
gs
jnp
adc
fwait
and
cmpsb
movsb
pop
jp
mov
sbb
jp
dec
push
lea
lds
adc
mov
addr16
and
ljmp
mov
mov
dec
jno
fisubrl
xchg
lret
jle
outsb
andl
or
loop
out
inc
shl
adc
mov
lahf
xchg
sub
fisttpl
psllq
lret
dec
mov
lret
aam
mov
inc
or
push
dec
std
sbb
mov
lahf
cmpsl
xchg
xchg
iret
stos
and
add
inc
pop
dec
outsb
push
addr16
aam
xor
int3
cmp
inc
loope
or
ljmp
mov
mov
movsb
mov
cmc
and
jnp
sarb
test
xchg
mov
test
mov
lret
loopne
or
dec
out
push
adc
pop
nop
shll
cs
es
sbb
aas
mov
sbb
subl
add
inc
or
adc
pop
mov
in
dec
fsubl
inc
test
fwait
dec
mov
sbb
lret
xchg
out
mov
pop
add
sbb
sahf
sbb
pop
cwtl
push
stc
jp
fwait
insb
fldl
adc
or
and
ljmp
sub
push
sub
mov
cmp
in
push
scas
cmpsl
jno
pop
fdivrl
jb
aad
inc
in
bound
xchg
jp
inc
fsubp
xor
aam
imul
sub
lcall
xchg
cmp
lods
mov
and
mov
pop
fmuls
inc
and
push
scas
ret
outsl
divb
sbb
cs
xor
sbb
stos
adcb
dec
ret
lcall
inc
inc
sub
mov
mov
enter
pop
mov
push
shll
fwait
int3
test
adc
out
lahf
fbld
dec
imul
repz
clc
cmpsb
mov
loope
mulb
popf
dec
bound
xchg
dec
dec
aad
add
lret
push
aam
sbb
bound
inc
pop
outsb
lahf
rclb
add
sahf
mov
mov
fdivrl
xchg
add
inc
sbb
aad
mov
out
mov
xlat
out
es
mov
adc
jle
xor
and
sahf
xlat
mov
sbb
adc
xor
jns
ret
jmp
pop
loop
jns
sbb
arpl
and
in
mov
fucomp
mov
mov
inc
pop
out
fsubrl
sbb
xchg
add
mov
jecxz
mov
mov
js
rcll
shrl
sbb
stos
movsb
das
outsb
xor
adc
inc
xchg
push
ret
dec
nop
mov
mov
or
jbe
sarb
xchg
inc
addr16
ret
in
aam
sbbl
lcall
in
and
inc
jg
or
mov
xchg
jmp
pop
and
fwait
cmp
mov
in
cs
sub
scas
cltd
jmp
int
call
dec
mov
aam
subl
jmp
mov
and
fcoml
pop
iret
shrl
push
xor
pop
aam
out
and
es
scas
inc
or
sbb
inc
mov
sti
cmp
outsl
jmp
ret
xorb
stc
stc
out
or
test
out
mov
push
movsl
push
lock
shl
cli
enter
add
lahf
cmpsl
jecxz
lods
iret
clc
ficoml
mov
fnstcw
shlb
js
in
push
pop
dec
inc
cmpl
fcompl
sbb
out
in
scas
dec
dec
sbb
xchg
push
loop
push
fldln2
fwait
push
mov
loop
into
outsb
dec
mov
mov
pop
xchg
mov
lcall
pushf
pop
mov
mov
lea
addl
divl
sbb
jg
add
cli
jb
repnz
add
or
fsubrs
mov
addl
in
cwtl
add
insb
xor
ss
dec
fnsave
push
xchg
in
adc
ret
mov
mov
dec
stc
mov
add
lret
in
push
loopne
cmp
mov
dec
ret
add
mov
dec
out
add
lret
ret
sub
testl
xchg
or
cmc
imul
dec
or
rolb
cld
js
inc
push
xchg
pushf
push
inc
mov
inc
outsl
mov
add
cmpb
mul
psrlw
out
in
out
adc
adc
pusha
mov
rcll
dec
mov
cli
mov
loopne
sub
scas
arpl
je
into
pop
testl
repnz
test
test
xor
inc
jge
lods
push
inc
aaa
push
add
push
aaa
jle
sbb
mov
sub
cs
scas
adc
xorb
out
fmul
sub
out
cmp
jns
inc
sbb
jb
fcmovbe
out
pop
mov
out
cwtl
dec
imul
sub
gs
jne
sahf
pop
out
push
fiaddl
into
adc
add
sbb
daa
scas
mov
out
outsl
xchg
pop
in
repz
push
dec
in
or
sti
dec
test
adc
pushfw
ret
mov
mov
push
sbb
adc
fabs
movsl
stos
inc
xchg
jnp
mov
cmp
aas
push
push
test
xchg
push
loop
in
sbb
and
inc
cltd
cmc
cmp
adc
fwait
notl
out
mov
pusha
or
in
sahf
or
adc
sub
pop
add
mov
aas
pop
xchg
xor
inc
in
addr16
cmpl
pushf
mov
sbb
push
ja
lahf
xchg
das
xlat
jge
loopne
popa
test
jnp
arpl
outsl
mov
mov
sub
mov
cmp
sub
test
movsl
int3
fwait
mov
mov
adc
xchg
mov
fxch
push
cltd
mov
pop
push
xchg
mov
inc
shl
sub
mov
mov
cmp
xchg
cmc
cli
lret
push
lahf
push
idivl
xchg
mov
adc
pop
mov
mov
pop
scas
ljmp
popf
inc
fnstenv
cltd
cmp
mov
xor
adc
push
xor
mov
pop
jns
aas
negb
test
sub
shlb
ret
mov
cmp
mov
mov
cli
mov
jmp
xchg
sub
mov
loop
push
fcmovnu
aad
incl
rolb
ds
ljmp
fsts
dec
xchg
lods
cmpsb
arpl
mov
sub
popa
and
fsts
dec
daa
pop
add
in
out
xchg
sbb
aad
aas
in
pushf
push
into
scas
inc
dec
cltd
stos
xchg
sbb
call
jbe
in
sbb
imul
ja
inc
or
xchg
out
inc
xchg
dec
push
push
add
int
xchg
mov
adc
inc
jbe
insl
out
popf
push
mov
lds
pusha
ret
das
aam
testb
mov
cli
mov
pop
pop
clc
mov
arpl
mov
js
movsl
mov
out
pop
inc
add
dec
dec
jnp
lret
fiaddl
daa
subl
out
sbb
cmpsb
jge
jbe
ret
iret
in
fdecstp
sbb
jno
push
pop
test
repz
jns
mov
and
stc
cwtl
adc
xchg
imul
mov
dec
ficomps
or
push
push
dec
sbb
push
lret
fwait
mov
mov
push
lods
pop
gs
lock
or
sbb
push
cmp
sbbl
xchg
imul
jno
xlat
dec
lods
ljmp
fdivrs
and
inc
sbb
push
jno
pop
and
pop
out
mov
adc
aaa
adc
inc
xchg
mov
nop
add
fs
jns
ret
push
lret
aad
mov
cmpsl
mov
jge
shlb
cld
push
cmpsl
push
test
mov
cmp
gs
cmpsb
and
fnstcw
clc
in
pop
out
sbb
daa
push
or
jp
pop
pop
in
insl
in
xor
jns
mov
ljmp
daa
xchg
mov
mov
aaa
jbe
adc
sbb
pop
adc
pop
mov
in
lcall
loop
imulb
movsb
add
les
fs
inc
pop
cmp
jne
test
xchg
jns
frstor
sti
mov
cmp
pushf
xchg
cmp
xor
pop
out
push
push
inc
imull
pop
dec
icebp
add
push
xor
push
imul
sub
sub
sbb
lods
xchg
mov
pop
rorb
inc
push
imul
sarb
test
shlb
and
mov
inc
ret
addr16
aad
push
in
incb
fdivrs
gs
and
std
sub
inc
inc
xchg
gs
xchg
je
les
in
stc
aam
push
xor
lock
lods
imul
jnp
sbb
mov
repz
div
loope
inc
mov
inc
out
js
push
cmp
inc
dec
test
orb
repz
mov
aad
cltd
fnstcw
lcall
bound
adc
cmp
xchg
mov
aaa
cld
sbb
mov
sub
sbb
bound
insl
mov
mov
lret
jg
sub
jae
insl
leave
imulb
inc
inc
sbb
repz
idiv
mov
loope
pop
lds
cmp
pushl
lret
int3
mov
test
cli
jecxz
dec
sub
or
stos
mul
sub
clc
ljmp
xchg
inc
shll
ret
pushf
fmuls
mov
mov
dec
call
push
mov
das
adc
lods
pop
jb
mov
ret
in
mov
mov
fnsetpm(287
cmpsb
pop
dec
and
movsl
mov
in
xlat
sbb
xchg
outsb
in
adc
stos
jbe
jle
js
hlt
mov
movsl
mov
stos
add
xor
adc
mov
push
cmp
and
cltd
lds
stos
out
jg
sahf
or
imul
cmp
addr16
ja
cwtl
add
jmp
stc
cmp
fsubrl
sbb
test
das
test
sti
es
pop
shlb
insl
out
outsb
loopne
test
stc
enter
inc
shl
and
in
int3
pop
xchg
mov
jge
adc
fnstenvs
cli
and
lods
loopne
jb
cmp
out
cwtl
mov
push
pop
mov
loopne
jp
test
cltd
test
movsl
insb
es
test
push
stos
ljmp
test
insb
pop
andl
les
lret
and
out
nop
loope
adc
push
pop
shlb
push
lods
pop
and
mov
push
popa
dec
out
adc
popf
inc
incb
mov
std
gs
cwtl
popf
xchg
in
push
addr16
sahf
and
addr16
xchg
push
stos
and
shr
les
shlb
push
jmp
xchg
inc
loopne
inc
sub
lods
mov
shrl
test
or
push
shl
sti
loop
mov
andl
pusha
jne
scas
mov
pusha
mov
mov
dec
movsb
mov
test
mov
mov
or
inc
sbb
in
cli
cmp
ret
xchg
lods
clc
popa
mov
scas
dec
xlat
push
gs
xor
sti
xchg
jns
add
push
jmp
adc
stc
rolb
mov
adc
mov
je
push
popa
mov
or
rclb
psubw
pop
adc
xchg
stos
insl
ret
fisubs
test
adc
les
or
cltd
jecxz
loop
aas
mov
cmp
push
dec
mov
loopne
insb
push
dec
in
inc
jle
divl
arpl
cld
loopne
or
xor
gs
insb
dec
push
cli
push
jmp
out
jbe
jno
mov
cwtl
xor
inc
mov
pop
mov
daa
mov
cmp
out
das
fisubl
in
pop
xor
scas
fcmove
dec
repz
inc
pop
ja
bnd
sub
ret
cmpsb
scas
outsb
cs
mov
test
xor
mov
daa
out
mov
xchg
push
negl
dec
adc
dec
add
stc
js
sub
out
iret
pop
outsb
repz
daa
mov
mov
loope
aaa
test
cmc
adc
pop
int3
mov
jo
sbb
sub
sbb
test
add
cltd
sar
mov
xor
fwait
ror
pop
and
call
lods
iret
xchg
xor
fistpl
pop
fisubrs
in
das
push
jecxz
xor
lret
sbb
cmpsb
loop
push
jecxz
pop
outsl
out
jae
lds
frstor
xchg
pop
xchg
lret
cmp
mov
or
xor
and
or
mov
push
mov
lods
add
je
mov
sbb
cs
cwtl
jle
fistl
xchg
ror
cli
shrb
testl
aas
aas
pop
stc
mov
ljmp
test
pushf
and
lea
xchg
sbb
lods
icebp
addl
push
jns
call
jecxz
stos
fildl
testb
les
and
pop
sub
movsl
add
cmp
push
fstpl
xchg
mov
cmp
xchg
jge
xor
aam
insl
sub
pop
int
mov
xchg
fnsetpm(287
addl
addb
leave
xor
adc
nop
fs
jp
cli
in
sub
mov
leave
es
mov
subl
je
and
cmc
push
sbb
mov
lret
mov
imul
mov
jae
and
movsb
out
mov
adc
insl
xchg
in
pop
jnp
dec
in
test
pop
pop
xchg
jle
lahf
mulb
lock
jo
std
stos
fsubl
jns
push
mov
sbb
and
add
arpl
add
add
fdivl
out
test
mov
xchg
or
lret
ss
jecxz
loopne
xor
adc
fs
adc
sahf
push
push
push
pop
ja
pop
pop
add
out
add
jecxz
fcomip
lea
jne
add
jns
movntps
or
incl
dec
cs
jne
xchg
ret
test
cli
rcrl
xor
inc
ss
inc
inc
ds
dec
sahf
cmp
dec
sub
int3
pop
js
shl
data16
lea
push
test
adcl
negb
das
sub
sub
filds
imul
mov
pop
loopne
xor
push
fisubl
inc
pop
pusha
sub
mov
lods
pop
sbb
mov
push
fbstp
xor
outsl
inc
idivb
aad
cmp
scas
jecxz
push
mov
mov
shr
shlb
push
ret
subb
push
or
out
sbb
mov
dec
push
sub
jno
clc
icebp
in
push
jmp
rorl
je
rorl
adc
iret
xor
dec
push
addr16
fld
xchg
cld
jbe
mov
shrb
sbb
sbb
call
stos
ja
enter
and
xchg
add
in
push
fmul
pop
jecxz
jae
dec
decl
into
push
scas
je
mov
dec
mov
jp
dec
rclb
jbe
aas
xchg
js
jb
icebp
outsl
jb
add
pop
xor
or
fsts
repnz
loop
pop
clc
shll
add
cvtdq2ps
inc
lock
xorl
cmp
fistpl
pop
dec
je
mov
fisttpl
pop
xor
imul
pop
push
das
sbb
iret
jmp
sti
dec
jnp
add
cmpsb
out
jnp
call
mov
push
cmc
adc
adc
pop
cli
decl
sar
test
xchg
std
decl
cmc
ffree
cltd
lods
mov
cmc
movsb
andb
mov
lcall
mov
and
xor
stos
mov
data16
mov
xchg
push
sbb
int
int
and
pop
imul
out
jno
lahf
xchg
mov
lock
mov
xor
xchg
es
mov
outsb
leave
dec
lcall
roll
pop
add
decb
lahf
sbb
mov
jno
hlt
cmpsb
fidivrl
scas
jae
aam
mov
sub
mov
mov
and
lock
int
icebp
jle
sbb
test
xchg
push
loop
pop
sbb
mov
sub
lods
dec
je
sahf
mov
mov
mov
sbb
add
out
sub
jb
and
mov
pop
test
mov
cmp
nop
rclb
or
scas
mov
std
out
stos
adc
or
xor
scas
jmp
xor
push
ret
pop
xchg
mov
inc
cmpsl
dec
aad
stos
xchg
sbb
mov
pusha
hlt
mov
icebp
in
loop
pop
and
js
cmpsl
pop
xchg
scas
jns
mov
jmp
push
cli
add
in
push
inc
outsl
cmp
jle
pop
add
pop
inc
cmp
cmpsl
mov
sbb
stos
mov
push
arpl
inc
ds
inc
orl
adc
xor
rol
lcall
out
mov
add
popa
push
rclb
adc
cwtl
mov
loopnew
movsl
jmp
adc
sub
daa
clc
add
loopne
sub
out
push
mov
mov
fldcw
xor
pop
cmp
jno
xor
mov
xchg
inc
xchg
and
pop
cmpsb
vmwrite
and
in
jnp
cmc
fwait
inc
push
roll
in
cs
mov
push
jmp
in
fiaddl
shr
mov
in
int
test
inc
pusha
dec
xor
shrb
mov
mov
jnp
sbbb
jmp
add
shl
xchg
cmp
stc
sbb
fwait
cmp
insb
insl
mov
cmc
scas
mov
sub
adc
ret
adc
or
push
or
add
popl
in
popf
push
lahf
dec
jne
aaa
cmp
mov
aad
mov
addb
mov
cmc
cltd
sbbl
clc
jl
mov
sub
jae
icebp
inc
xchg
cmp
xor
divb
sub
xor
test
cmp
pop
add
xchg
cmc
and
xor
inc
mov
inc
push
jp
movsl
sub
fists
mov
adc
xchg
in
lods
xchg
jmp
fstl
shll
lret
sub
pop
out
push
mov
scas
das
imul
sti
out
mov
popf
mov
mov
xchg
xor
pusha
daa
mov
movsb
testb
das
lock
in
jbe
test
pop
adc
notb
inc
pop
out
cmpsl
or
pop
in
es
add
pop
cmc
xchg
cli
push
in
cmpsb
jmp
incl
inc
inc
sysenter
xor
mov
or
test
bound
fwait
jno
adc
mov
xchg
push
outsb
mov
out
mov
pop
test
xor
addr16
pusha
jmpw
aaa
hlt
fwait
out
push
push
mov
imul
iret
jecxz
xor
ss
je
dec
dec
gs
es
push
lcall
hlt
imul
or
mov
dec
xchg
cmp
je
int
cmp
adc
mov
and
push
mov
dec
jp
add
mov
mov
jle
movb
subb
mov
loopne
stc
sub
mov
sbbb
lcall
push
movsb
in
das
sbb
daa
pop
mov
cmp
push
xor
and
mov
cwtl
jae
scas
test
pop
jl
fs
lock
out
xchg
dec
and
jecxz
cld
mov
or
mov
and
jmp
rol
xor
imul
lret
lcall
sub
scas
stos
xchg
mov
sub
mov
xchg
lods
mov
aaa
out
fbld
aam
pop
data16
adc
loope
scas
jnp
sub
xor
xchg
lcall
jb
insb
or
sbb
jbe
jge
mov
sub
cmp
xchg
dec
test
insl
rolb
add
xchg
cmpsb
adc
cmpsl
int3
sub
test
sbb
xchg
jecxz
rep
sub
les
or
fildl
cmp
arpl
ret
mov
popf
test
xor
bound
dec
outsl
xchg
sbb
push
xorb
test
leave
shll
andl
xlat
dec
rol
sub
aad
rorb
dec
mov
and
mov
push
xor
xchg
push
sbb
rcr
adc
es
fnstcw
sub
add
insb
or
adc
mov
mov
aad
xchg
cmc
sub
rcll
jbe
add
sub
pop
xchg
adc
xor
jmp
in
or
inc
xchg
cmpsb
dec
sbb
mov
scas
jae
adc
push
pop
ret
sub
sbb
dec
lret
mov
stos
mov
subl
addr16
sub
push
mov
xorb
xor
lret
daa
ja
or
push
push
pop
sub
mov
test
pop
and
xor
lahf
or
adc
pusha
rolb
test
dec
lret
inc
call
mov
xor
or
dec
loop
xor
sub
cmp
push
testb
dec
mov
insl
push
movsb
jp
shlb
mov
lea
movsb
insl
les
jns
jmp
pop
cmp
mov
sub
ljmp
mov
xchg
int
adcb
orb
push
gs
inc
rorb
push
ss
xor
mov
cmp
pop
mov
ljmp
jmp
incl
sbb
pop
cli
xchg
lcall
mov
fwait
inc
mov
je
out
out
push
mov
cmc
jmp
fsts
fisttpl
cltd
cmpsl
cmp
adc
and
mov
ss
addr16
lret
pusha
loope
rol
push
lret
push
scas
jbe
mov
pop
add
jmp
cwtl
xlat
pop
lahf
add
adc
je
pop
add
mov
xor
loop
mov
mov
int3
cmp
test
insb
pop
stos
ja
or
adc
cli
into
cmpsb
jbe
aaa
pop
lahf
ror
fwait
pop
in
cmp
jno
pop
mov
lahf
iret
pop
inc
les
outsl
mov
pop
sub
jecxz
sbb
sbb
mov
dec
sbb
stc
shlb
jl
fcompl
sti
das
push
das
adc
and
pusha
or
test
inc
insb
ds
shrl
sti
fs
sbb
xor
rcrl
cmpsb
loope
ficoml
cmc
pop
out
cli
sbb
mov
ljmp
fiadds
movsl
add
stos
jp
and
gs
pushf
bt
fildll
in
dec
setp
outsb
je
in
xchg
dec
mov
fiaddl
ret
mov
mov
jb
fldenv
xor
ret
outsl
out
xchg
add
in
out
out
incb
loope
pop
xor
cmp
xchg
or
push
cmp
daa
leave
sti
mov
cltd
xor
xchg
sbb
mov
cmp
bound
adc
pop
or
test
mov
out
mov
addr16
adc
dec
sbb
movl
mov
fwait
cmc
pop
lods
pop
fsubs
rol
movsl
mov
ljmp
hlt
icebp
es
in
in
mov
aaa
mov
mov
lret
fidivrl
stos
rol
sbb
test
sarl
imul
je
leave
dec
sbb
int
add
in
popf
daa
lcall
shll
pop
sbb
das
daa
stos
enter
loop
cs
int
xchg
push
sbb
nop
int3
repnz
ret
out
fwait
dec
mov
jo
add
test
push
out
clc
outsb
inc
in
and
or
mov
push
add
xor
mov
ljmp
mov
rclb
dec
cmp
fistl
popf
data16
aad
ret
pop
inc
add
mov
mov
inc
mov
lock
pop
xlat
negb
ss
rcll
sbb
adc
cmc
ds
sub
lret
je
sbbb
fbstp
jno
xchg
inc
or
xor
or
adc
fldt
adc
xlat
and
adc
pop
scas
xor
sub
repz
cld
pop
push
lea
jecxz
fisttpl
cmp
stos
ljmp
mov
paddsb
xor
icebp
mov
pop
dec
add
mov
pop
cmp
out
int
out
adc
bound
pop
cmp
sub
jle
adc
movsb
fstps
stos
push
sbb
push
or
mov
shl
subb
pop
sub
adc
cmp
into
sub
mov
ret
arpl
cs
xlat
push
iret
xchg
mov
xchg
mov
cmpb
out
jns
or
stc
out
xor
sbb
mov
sbb
and
lahf
in
inc
dec
mov
out
pop
mov
aaa
cltd
push
addb
xchg
add
jbe
loop
pop
push
les
inc
ljmp
add
movsl
pop
loop
cmp
das
jecxz
into
outsl
mov
pushl
xchg
ljmp
mov
pop
pop
xchg
into
xor
adc
scas
adc
xchg
in
cmp
and
out
pop
mull
subb
xchg
dec
imul
cmp
sbb
shl
sub
stc
out
dec
mov
xchg
adc
and
adc
mov
lock
pop
lcall
add
xchg
mov
pop
das
sti
call
sub
add
test
jecxz
jl
jnp
sub
nop
shrl
divl
daa
dec
add
addr16
cltd
push
and
cs
xchg
shl
pop
add
test
call
ss
adc
movsb
or
int3
ljmp
mov
in
fnstsw
sbbl
in
mov
aas
mov
cli
notb
lcall
jae
adc
push
or
les
idiv
fwait
lcall
popf
orb
decb
rcll
cmc
and
pop
das
push
inc
or
xchg
rcl
fsts
sar
push
mov
xchg
push
pop
inc
xchg
and
stos
out
mov
out
in
mov
test
adc
clc
or
push
aas
push
bound
dec
mov
push
sbb
cwtl
add
mov
mov
mov
lods
push
xchg
cltd
ljmp
popa
sbb
ret
xchg
into
scas
hlt
call
mov
mov
loop
xchg
outsb
push
push
sbb
data16
repnz
dec
push
fdivrs
hlt
pusha
xchg
sbb
mov
cmp
movsl
mov
fcmovu
dec
in
push
outsb
icebp
rorb
xchg
out
xchg
sbb
pop
clc
sbb
xchg
dec
ds
dec
dec
fwait
icebp
js
mov
lods
ficompl
dec
adc
call
xor
pop
aad
add
cli
loopne
test
push
test
dec
xchg
sbb
jp
cwtl
and
jp
lds
test
mov
or
out
lahf
xchg
stos
push
pop
mov
sub
add
or
mov
mov
repz
aad
int
ss
lods
adc
dec
mov
mov
mov
sub
add
in
mov
mov
mov
enter
cmc
xor
mov
movsb
divb
or
xor
push
add
jg
cmp
ret
mov
pop
sti
adc
dec
adc
cltd
cs
cmc
shrl
mov
std
in
mov
inc
aad
es
cmp
mov
and
mov
mov
mov
negb
stos
daa
ljmp
adc
cmpb
mov
push
dec
and
or
ds
push
xchg
in
jg
mov
jne
loop
or
arpl
stc
cmp
sub
imul
inc
pop
push
dec
loop
xchg
inc
jmp
cwtl
mov
addr16
cwtl
imul
loope
fisttps
std
into
add
push
enter
popa
mov
or
scas
xchg
imul
jecxz
rcr
pop
outsl
mov
add
popl
ja
mov
mov
and
inc
mov
sbb
scas
outsl
test
sbb
roll
movsl
and
cld
cmc
mov
cli
xchg
mov
xor
xchg
daa
inc
sbb
rclb
xchg
cli
jp
jg
test
cmpsb
xchg
cltd
popf
out
in
fstpl
xchg
mov
mov
int3
push
rorb
cmp
daa
inc
jmp
loop
scas
pop
lahf
aaa
xor
mov
add
inc
cmp
pop
pop
mov
ja
pop
fwait
mov
dec
xchg
shll
sbb
iret
sahf
stos
idivl
adc
clc
rcrl
jmp
pop
lods
dec
filds
mov
lds
jnp
out
fnsave
adc
fwait
inc
adc
jp
inc
into
fldcw
call
pop
mov
ret
aaa
out
lret
scas
outsl
out
aas
imul
cmp
dec
cmp
cmpsb
sahf
sub
pop
int
inc
and
mov
cmp
stc
sub
lds
or
mov
js
adc
shr
push
ret
dec
or
jmp
shrb
rcl
fwait
inc
sbb
lds
mov
cmc
loopne
dec
inc
aam
sbb
mov
add
leave
je
push
or
mov
mov
jg
pop
mov
mulb
cmp
push
jle
fnstsw
test
pop
or
pop
mov
jp
scas
push
sbb
call
xchg
adc
sarl
xor
shlb
adc
dec
inc
push
xchg
loop
xchg
push
aaa
push
ret
or
sahf
insb
out
lahf
pop
and
lods
ret
roll
sbb
and
dec
inc
idivb
jmp
daa
push
inc
xor
ret
push
les
ljmp
sub
lret
mov
arpl
rcrl
sub
mov
mov
mov
leave
xchg
inc
cmp
andl
mov
mov
cld
and
jle
xchg
fwait
lods
jecxz
add
iret
fwait
xorb
push
lret
test
adc
inc
xor
adc
stos
sbb
and
loop
cwtl
out
fwait
bound
mov
stos
test
shl
xchg
data16
addl
jnp
ljmp
inc
xlat
pushl
and
dec
and
outsb
lds
cmp
mov
ja
pop
iret
sub
xor
insb
shlb
out
mov
mov
add
mov
fbld
dec
stos
in
cmpsb
rcrl
pop
pop
sarl
and
push
js
jp
mov
out
xchg
pop
add
fimuls
dec
popf
ss
xchg
daa
xchg
mov
in
in
xchg
lods
shrl
push
arpl
in
repnz
aaa
out
pusha
es
sub
repz
das
inc
stos
addb
or
lahf
xchg
out
xlat
imul
sbb
mov
cli
cmp
xchg
push
pushf
stos
xchg
jb
pop
arpl
and
aam
fisttpll
pop
xchg
jbe
mov
div
xlat
leave
adc
in
sbb
shr
xchg
out
imul
rorb
push
sbb
lds
imull
push
cmpsb
pop
cmp
rcrl
lret
sahf
sarb
rolb
ljmp
sbb
into
in
jns
sbb
fsubl
fucomi
xorl
cmp
negl
gs
je
xchg
xchg
sti
imul
and
neg
pop
into
cmpsl
das
xchg
push
fistpl
sbb
stos
fwait
call
push
and
sub
stc
clc
add
fisubrl
mov
lea
stos
mov
scas
out
adcb
jg
inc
fdivl
add
adc
cli
rcrb
xchg
sbb
mov
dec
sti
mov
ljmp
sub
jne
cwtl
push
iret
dec
fcmovnb
pusha
iret
adc
or
or
fwait
pop
aad
stos
mov
push
mov
pop
mov
xchg
nop
icebp
addr16
mov
mov
jne
and
popa
in
cmpsb
dec
xchg
xor
rcrl
jnp
leave
mov
push
push
cmp
sub
cmpsb
ficoms
inc
add
jnp
mov
cwtl
pop
lods
stos
sbb
jge
or
je
bound
mov
incb
shrb
jb
xorb
orl
and
lock
aaa
xchg
sbb
add
in
and
and
lcall
out
mov
dec
call
mov
test
sbb
or
test
adc
out
adc
inc
divb
into
mov
xchg
jp
jno
add
mov
in
and
fcompl
inc
sub
movsb
out
pushf
pop
sbb
daa
sahf
call
loopne
loope
loopne
adc
imul
loopne
popa
out
loopne
xor
pop
dec
popa
cld
push
jl
xchg
and
bound
hlt
cmc
dec
rcll
scas
inc
insb
jmp
cmp
xchg
pop
or
sti
sbb
ljmp
mov
in
ss
adc
je
outsl
cmc
mov
out
sbb
or
jg
inc
ret
cmp
lret
dec
mov
mov
or
add
rolb
or
stos
sub
mov
sub
mov
popa
imul
xorl
sbb
lret
out
pop
aas
data16
and
pop
in
addr16
xchg
sbb
ret
xchg
outsl
call
push
icebp
and
push
lret
addr16
mov
shrb
loope
xlat
subl
out
xchg
repnz
dec
incb
add
mov
rcr
pop
inc
mov
inc
cltd
test
test
sub
fcmovnb
and
dec
mov
xchg
cli
sub
mov
and
test
shll
jne
add
popa
add
lods
je
test
push
ret
jge
cld
push
push
dec
loope
fsubr
cmc
sub
cmpl
mov
in
xchg
and
aam
adcl
mull
divl
mov
or
data16
dec
popf
mov
rcrl
not
sub
and
sbb
sbb
dec
push
push
fwait
lret
mull
decb
cs
xchg
stc
shrb
mov
xchg
dec
pop
scas
cmp
test
stos
inc
in
in
arpl
roll
daa
ret
inc
mov
xchg
aam
jb
pop
adc
fs
sub
loopne
mov
cs
adc
lods
xor
orl
add
test
xchg
in
bswap
jnp
rcr
mov
cwtl
int3
addr16
or
push
in
xchg
mov
xor
fcmovb
lock
adc
in
mov
dec
test
fsubs
mov
shrw
arpl
test
cmp
xchg
adc
mov
inc
adc
scas
bound
nop
lods
jnp
xchg
aas
gs
push
scas
repnz
je
divl
test
outsl
sbb
add
jecxz
clc
mov
pop
xor
cs
in
cwtl
mov
mov
inc
xor
cmp
shll
and
inc
loope
mov
test
call
add
leave
pop
mov
xor
sub
cli
cs
mov
add
in
mov
in
outsb
arpl
pusha
push
lcall
and
insb
jecxz
push
pop
mov
inc
pop
mov
and
arpl
mov
or
stc
jae
ja
sub
mov
mov
mov
pop
and
inc
mov
test
rclb
pop
push
xlat
pop
push
adc
cs
mov
cli
mov
das
jg
outsb
pop
insb
bound
mov
and
xchg
add
stos
repnz
clc
sbb
dec
mul
push
xlat
into
mov
sub
mov
fidivrs
push
mov
in
pop
out
mov
das
adc
je
mov
movsl
sbb
lds
outsl
cltd
xorl
negl
xchg
repnz
xchg
cltd
fs
int
add
xchg
test
mov
push
mov
fisubl
jp
addr16
jno
cmp
fistpl
mov
mov
xor
out
mov
or
push
xchg
dec
or
psubusw
repz
jns
sbb
xchg
ljmp
push
xor
ret
negl
test
xor
pusha
push
push
in
xor
jmp
repnz
jp
les
xchg
orb
xor
and
rorl
fld
pushf
pushf
shlb
mov
shrl
and
ror
cmpsb
sub
xor
imulb
in
addr16
daa
js
lret
push
cmovns
jne
test
mov
mov
scas
xchg
popa
addb
push
add
dec
jmp
test
cmp
out
sahf
fdivr
or
push
rorl
or
adc
testl
fmulp
jne
out
cmc
addr16
movsb
stos
dec
xchg
cmp
movsl
prefetch
imul
pop
hlt
mov
cmp
push
xchg
in
roll
or
out
sbb
inc
and
inc
jmp
jle
fsubp
lcall
xchg
jo
adc
jnp
mov
rcll
jmp
push
mov
bound
in
jmp
xchg
sbb
std
imull
mov
in
sbb
aaa
ss
enterw
scas
rolb
mov
cmp
xlat
movsb
cli
dec
push
arpl
xor
add
stos
pop
mov
dec
pop
jne
cmp
and
lods
lea
push
pop
xorb
test
add
out
cmp
dec
test
notb
scas
xchg
pop
mov
out
fisubrl
mov
dec
pop
arpl
ret
inc
add
loope
cli
insb
ret
sti
das
jp
je
stc
clc
mov
lahf
add
push
aam
inc
and
inc
xchg
iret
sbb
jmp
xchg
jb
cmpl
in
sbb
push
jbe
xchg
mov
adc
daa
lcall
in
stc
lock
cwtl
leave
push
sbb
or
loop
push
mov
in
lds
push
jo
stc
cwtl
outsl
insb
inc
mov
scas
sub
call
push
movsl
xchg
sarl
adc
aam
cmp
push
xchg
fists
aas
sbb
mov
sbb
mov
roll
mov
movsl
outsl
cmp
mov
xor
xor
aaa
dec
out
jl
dec
cmp
adc
adc
xchg
cmp
xlat
jno
das
jns
mov
push
pop
dec
dec
jmp
xchg
das
ds
rcrl
lcall
mov
sub
cmpsb
ljmp
hlt
mov
int
popf
add
push
shrb
mul
push
xor
sub
xlat
sbb
xor
adc
push
push
loopne
stos
pop
popa
fldt
xor
or
ret
sbbb
ss
mov
mov
test
leave
fistpl
add
movsl
decl
cwtl
mov
inc
add
mov
pop
js
shll
je
mov
int3
rclb
stos
insl
jo
shl
pop
movsb
in
fnstsw
outsb
popf
or
sbb
mov
cltd
jns
push
test
das
iret
in
lods
add
dec
mov
xor
testl
inc
fdivs
cmp
fst
mov
xchg
rcrb
cli
mov
and
call
stos
in
jno
addl
pop
push
jle
or
or
adc
shrb
fists
add
add
xchg
pusha
imul
fldcw
mov
enter
jmp
inc
rclb
jnp
scas
clc
pop
push
mov
stos
or
lcall
fnsave
xor
or
fmuls
fstl
jne
xchg
sbb
xor
ret
shr
ljmp
ja
push
sbbl
fldcw
inc
mov
out
mov
out
push
das
pop
dec
mov
sub
xchg
xlat
adc
pop
test
xchg
mov
jl
movsl
and
imul
scas
pushf
add
mov
xchg
ror
test
inc
popf
lock
xor
push
adc
sub
les
arpl
adc
test
ljmp
push
xchg
in
test
les
data16
xchg
pop
iret
cmp
adc
push
adc
int
jns
dec
push
lret
adc
jge
mov
cmp
rol
neg
push
push
rcr
rcll
pushf
cs
movsb
sbb
xchg
cmc
dec
leave
cli
mov
push
repnz
mov
mov
frstor
xor
les
mov
xchg
daa
fistpl
incb
lcall
orb
hlt
cmp
dec
pop
cmpsb
pushf
and
adc
jecxz
in
mov
jecxz
add
pop
lds
ror
cmpsl
mov
inc
nop
shrb
push
xchg
cmp
adc
xor
dec
fdivr
sub
lea
hlt
jg
or
repnz
add
outsb
call
mov
or
mov
lds
dec
pop
lahf
lcall
inc
stos
pop
or
mov
jnp
movsl
mov
cmp
aam
jne
pop
xor
jle
mov
jge
add
out
xchg
pop
xor
adc
int3
cmp
sar
inc
sbb
jb
loopne
xchg
xor
popa
imul
pop
xorl
mov
xchg
rclb
mov
mov
inc
aaa
inc
je
sub
inc
in
sbb
adc
mov
stc
popf
mov
push
xchg
or
test
imul
sahf
jmp
and
jmp
lcall
and
scas
ljmp
mov
mov
or
jle
stos
add
lods
loop
andl
mov
add
mov
iret
add
add
ljmp
dec
jae
xlat
stos
sub
push
jecxz
pop
bound
and
pushf
ret
sub
repnz
mov
aas
dec
lret
cmc
test
sub
outsl
cmp
outsl
push
mov
cwtl
sub
mov
mov
aam
stos
mov
add
xchg
pop
test
mov
jno
loopne
shlb
shrl
or
pushf
ret
shlb
inc
mov
es
pop
inc
or
dec
int
sahf
cmp
sub
mov
out
lea
out
lret
pop
lahf
sub
loopne
mov
adc
test
sub
es
fidivs
outsb
lcall
push
scas
adc
mov
hlt
push
push
faddl
lods
scas
hlt
jns
stos
pop
add
sbb
mov
inc
jns
es
shlb
push
inc
mov
cmc
sbb
out
xchg
or
cwtl
or
jb
xchg
das
fbstp
int3
sub
cmpsl
call
je
sub
in
daa
ja
mov
divb
lcall
cmp
xchg
das
add
pop
inc
jae
inc
mov
in
pusha
sbbb
mov
pop
imul
test
enter
sub
in
test
fiadds
push
bound
jo
sbb
pop
jns
jge
lcall
push
cltd
aas
loopne
jge
loop
movsb
aaa
pop
xchg
push
xchg
iret
cli
cltd
jmp
jmp
cli
xchg
adc
and
mov
inc
repz
sarb
jge
test
mov
mov
and
outsb
or
insb
and
test
xchg
stos
cwtl
adc
fidivrl
adc
push
imul
fcompl
inc
sti
aas
push
jae
js
fisubrl
pop
rorl
mov
mov
jo,pn
lret
pop
sbb
push
into
addl
pop
and
mov
nop
dec
mov
lahf
inc
in
pop
jne
push
adc
adc
pop
iret
pop
sub
jns
dec
mov
fucom
shrl
or
leave
sbb
push
pop
mov
add
pop
fldt
pusha
loop
mov
mov
ret
in
xor
outsb
dec
mov
mov
and
mov
das
pop
push
pop
sbb
xchg
xor
inc
and
pusha
pop
lea
pusha
out
mov
out
xchg
adc
ljmp
and
adc
pop
lcall
mov
outsl
jbe
xchg
push
xor
mov
loopne
int
jno
stos
clc
cli
repz
jns
pop
das
add
xor
cmpsb
insb
inc
dec
in
xor
insl
hlt
gs
xor
sbb
lahf
add
popa
sbb
imul
push
push
movsb
lock
insl
dec
add
repz
aad
arpl
xchg
icebp
out
out
arpl
sahf
jmp
mov
in
insb
fs
mov
or
xchg
xchg
dec
cltd
inc
ret
fimull
and
xchg
stos
xchg
sbb
inc
bound
dec
je
rorb
dec
xor
les
addb
adc
pop
clc
int3
mov
inc
add
fnstenv
scas
fistl
jb
mov
sub
dec
mov
dec
sbbb
inc
add
mov
fstpl
add
sub
addr16
sbb
lods
mov
push
cwtl
pop
adc
sbb
ret
cmc
lea
xchg
jnp
cmc
cltd
sub
aaa
jns
pop
xor
jne
mov
sahf
fwait
sub
leave
inc
in
stc
cwtl
mov
mov
adc
call
xor
xacquire
scas
pop
xchg
ss
ljmp
repz
push
mov
les
outsl
sub
push
fbld
orb
shll
mov
scas
movl
and
stos
adc
and
aad
dec
in
aam
cmpsb
push
icebp
cmp
fdivrl
add
sbb
xor
push
ss
adc
outsl
push
push
shlb
cmp
sarb
push
push
and
push
loop
mov
movsl
and
pop
mov
lahf
negl
call
cmc
cmp
arpl
pop
push
test
rcll
mov
int
movsl
mov
inc
adc
xchg
in
push
pop
aad
and
sbb
xor
iret
pop
mov
insl
in
pop
inc
lods
dec
test
mov
fstps
mov
sbb
imul
insb
into
scas
stos
mov
iret
mov
and
out
sub
mov
mov
mov
cmc
push
stc
mov
or
xchg
ficomps
push
js
adc
or
cmpb
pop
jns
inc
imul
sbb
cmp
sbb
leave
sbb
ds
cmp
jle
fcmovbe
jb
leave
jle
hlt
cmp
sarl
in
pop
cltd
jbe
test
cmpsb
pusha
push
pop
or
fwait
jl
mov
sbb
insb
das
je
pop
jle
imul
loop
add
lods
scas
xor
mov
add
push
mov
imul
fstl
ds
and
mov
dec
xor
xor
xchg
sub
add
push
std
mov
cmp
lcall
push
ret
ret
add
ja
int3
arpl
cmp
jl
add
jae
cli
sbb
out
xchg
fsubr
sub
lods
xchg
jecxz
mov
fiaddl
icebp
imull
testb
into
push
mov
xorb
xabort
mov
xchg
push
enter
std
or
sbb
clc
mov
ret
ret
xchg
push
adc
lock
xchg
jbe
pop
fs
xorl
int3
shlb
pushf
mov
dec
dec
shll
ja
adc
cwtl
aaa
and
js
mov
imulb
cmp
int3
pop
pop
xchg
and
rcrb
pop
adcb
gs
loop
adc
cs
bound
sti
in
aam
dec
call
push
imul
cmp
aam
pop
inc
pop
cmpsb
push
decl
test
out
or
repnz
dec
lods
mov
fiaddl
mov
adc
add
lods
outsl
fmulp
andb
sbb
scas
out
mov
push
inc
inc
cmp
jg,pn
rolb
iret
mov
push
xlat
jb
inc
cmpsl
lods
xor
xchg
in
xor
mov
lcall
aad
cmpsb
outsl
mov
xchg
xorb
xchg
push
inc
loop
xchg
mov
cmpsb
sbb
mov
lock
sbb
out
pop
lret
js
stos
mov
mov
add
mov
add
mov
inc
sti
mull
bnd
test
xchg
mov
push
test
sbb
cli
pusha
bound
adc
fwait
mov
adc
mov
xchg
dec
repnz
push
cmp
not
aas
in
pop
dec
hlt
lahf
or
push
xchg
pop
add
stos
dec
mov
lock
xchg
mov
pusha
push
sbb
push
out
in
jbe
repz
pop
sub
ret
xorl
cmp
inc
mov
sbb
int3
fnsave
pop
mov
xor
aaa
jb
into
xchg
or
mov
push
sarl
push
or
dec
inc
add
test
mov
mov
jle
filds
cmp
inc
sub
sub
add
add
loope,pn
mov
jge
loope
scas
and
popa
mov
out
jb
mov
xchg
xor
insb
fldt
test
les
clc
icebp
and
mov
sbb
rclb
das
loope
adc
in
cs
ss
sahf
test
subl
lds
jbe
sbb
aam
jb
mov
ss
stos
push
lahf
sbbl
jle
jle
sti
or
shl
into
imull
add
mov
int3
fldl
in
lret
sbb
mov
xchg
or
push
ret
pop
adc
dec
cmp
lods
mov
add
mov
push
add
outsl
adc
pop
dec
in
cmp
testb
scas
and
cmpsb
mov
jle
int
inc
xchg
jbe
xor
cli
cwtl
xor
cmp
mov
in
lcall
mov
mov
divl
outsb
inc
jns
sub
shrb
mov
inc
out
popf
cltd
push
mov
daa
adc
divb
popf
addb
mov
out
add
lods
pop
jnp
lods
xchg
cmp
dec
aas
xchg
push
notl
push
aad
daa
fimull
mov
jge
mov
adc
dec
scas
cltd
jmpw
or
out
subl
xor
lock
pop
andl
in
rcrb
push
adc
insb
ja
fwait
lods
adc
sub
xor
sti
mov
fimuls
mov
test
iret
or
cmp
flds
lods
sbb
mov
sub
popa
fiaddl
jno
add
adc
lods
xor
push
add
push
or
cmp
movsb
sub
ret
inc
rep
pop
movsl
jno
lds
in
fwait
leave
add
fldcw
stc
imul
cs
fstpt
mov
movsb
dec
jp
mov
inc
mov
pushf
mov
jle
jb
test
and
or
xchg
ljmp
insl
addr16
mov
mov
mov
jp
repz
push
aas
imul
shl
xor
jbe
adcl
ljmp
stc
add
xchg
sbb
movsb
filds
outsl
test
cmp
repz
shrb
xchg
sub
hlt
test
jmp
fwait
icebp
outsl
fildl
push
push
push
sub
sarl
push
mov
mov
xchg
int3
cwtl
out
test
sbb
repz
jo
jle
test
ja
cltd
dec
jb
xchg
popa
scas
xchg
pop
ret
jg
test
pop
xchg
mov
push
push
stos
fs
lret
mov
and
lods
cwtl
cli
mov
loop
fistpl
sub
push
fwait
imul
fmuls
loope
ds
ljmp
xchg
adc
dec
jecxz
stos
scas
sbb
shlb
or
adc
mov
dec
adc
fsubrs
sub
mov
sub
mov
sbb
in
sub
mov
ss
and
cmpb
dec
rcll
popf
inc
cli
sub
sbb
mov
inc
outsl
and
xchg
dec
insl
outsb
cld
sbb
mov
mov
push
mov
xor
mov
jmp
add
gs
pushl
jecxz
je
out
inc
ljmp
icebp
cmp
sbb
add
shl
loop
mov
xchg
sahf
mov
xchg
lret
std
mov
cmp
repnz
and
fwait
aad
aaa
pop
mov
or
out
orb
gs
aam
jmp
fcmovb
leave
fsubrl
push
and
cmpsb
cli
mov
sti
sub
sub
adc
lods
rol
mov
add
jp
sbb
repz
dec
sub
adc
sti
adc
xchg
or
cmp
jne
aad
loop
cmc
ftst
dec
sbb
pop
insb
push
in
lods
enter
xchg
fiaddl
je
xlat
scas
in
ljmp
movsl
sbb
xor
addr16
cmc
sti
into
push
pusha
jecxz
out
lods
leave
mov
cmpsb
sub
test
fwait
cmp
ficoml
xor
shlb
mul
cmp
push
sbb
addr16
cli
mov
sbb
sub
les
bound
jle
xchg
test
xchg
cmp
sarl
push
add
jecxz
lret
pop
adc
repnz
shrb
pop
push
and
ret
xor
add
test
cmc
jbe
lahf
add
add
lods
or
sub
orb
add
insb
sarl
mov
push
scas
adc
jns
aaa
and
or
popf
out
add
std
sbb
xchg
xchg
cmp
shr
ds
jp
enter
lock
fs
xor
jecxz
sbbb
sbb
enter
loope
mov
shlb
mov
call
dec
addl
leave
lcall
or
mov
mov
pop
ret
pusha
adc
mov
mov
lcall
xchg
jbe
or
xor
les
jae
mov
out
and
mov
addr16
and
mov
mov
cld
repz
fildl
cmc
mov
bound
mov
or
cmpsb
out
mov
xor
or
stos
shrl
fldt
xchg
push
cmp
mov
stc
jg
aas
sub
mov
mov
mov
divl
xchg
arpl
cmp
ja
not
cmp
adc
mov
ficompl
test
out
pop
push
lea
xor
scas
jmp
xchg
insb
pop
in
int3
mov
mov
pop
ficoml
pop
lcall
neg
or
es
or
add
dec
test
sbb
sub
stos
add
insl
xchg
mov
mov
ret
out
cmc
je
mov
sahf
sub
ja
lds
sahf
mov
add
loopne
inc
iret
or
mov
mov
jb
insl
jle
dec
xchg
loopne
xchg
lret
jg
xchg
push
aad
xchg
stos
outsb
bound
bnd
adc
mov
push
imul
andl
jb
stos
imul
popa
popa
xor
inc
loope
and
mov
sbbb
aaa
pop
mov
and
xchg
and
jne
push
std
push
fnstcw
int
cltd
pushf
sbbl
fisubrl
or
mov
jl
cs
sub
shl
bound
bound
jge
out
lcall
ljmp
lcall
mov
into
add
sbb
xchg
and
lods
push
sub
pusha
mov
cmp
shll
jge
dec
or
negl
sbb
mov
movl
jmp
imul
xchg
iret
lods
pop
dec
call
adc
sbb
in
lock
push
jmp
movsb
push
sbb
jne
mov
xchg
sbb
enter
push
push
out
insb
mov
lahf
in
mov
fisubrl
jns
push
pop
or
aam
or
mov
cli
test
pushl
cmp
stos
add
data16
js
popf
fabs
or
fbld
jns
cmp
shll
imul
sbb
mov
sbb
jne
jno
add
jge
dec
jmp
mov
cmp
mov
sbb
lret
stc
xchg
jae
inc
in
hlt
xchg
stos
iret
loop
jg
pushl
sarb
pop
jge
jnp
mov
pop
fwait
pusha
aad
cltd
add
xor
loop
cltd
mov
jns
add
sbb
add
pop
es
movsl
pop
jns
out
loop
inc
jnp
sbb
sti
push
gs
and
lret
mov
adc
loop
xchg
outsl
aas
insl
das
repnz
jmp
push
sarb
push
fldenv
aas
inc
mov
mov
sbb
mov
loope
inc
mov
inc
push
lahf
pop
or
sub
je
jmp
and
lods
fisttpl
imul
xlat
loope
push
adc
mov
mov
mov
andb
pushf
add
xchg
xor
outsl
cmpsl
xor
sbb
jg
jo
aad
je
movsl
cmpsb
mov
mov
dec
add
jb
lock
movsb
add
test
pop
mov
pop
xchg
ljmp
stos
inc
or
add
jno
mov
push
ret
push
mov
loopne
mov
adc
cmp
into
xor
cmpsb
add
jb
dec
lods
out
xor
pop
test
inc
push
inc
or
add
xchg
mov
sbb
sbb
test
inc
or
cmpsb
mov
das
xchg
adcl
push
scas
jo
in
subl
repnz
fst
jbe
jb
inc
loop
xor
pop
stos
jnp
scas
xchg
and
cli
push
adc
adc
jecxz
stos
outsl
ss
imul
inc
ret
arpl
lods
add
dec
data16
mov
out
mov
clc
shl
ljmp
rorb
xor
xchg
cs
xchg
push
dec
xor
imul
movsl
das
icebp
addl
pusha
push
mov
fs
sbb
inc
pop
leave
lds
das
dec
or
scas
sbb
push
inc
std
push
sarb
and
lods
sar
jbe
mov
mov
stos
aad
dec
add
xchg
nop
in
dec
sbb
add
push
xchg
xor
scas
pop
out
sbb
xor
dec
clc
mov
sbb
or
les
gs
jge
mov
mov
jnp
mov
xchg
and
sub
cmc
clc
les
sbb
add
push
xor
jecxz
mov
test
jno
jb
sub
notl
mov
sub
xor
mov
dec
dec
cs
mov
outsl
jle
sbb
ja
lods
xchg
xchg
push
jne
shlb
movsl
xchg
call
popf
test
ds
aam
mov
test
push
mov
stos
cli
add
ret
xlat
filds
adcl
xorl
sub
mov
bound
cmp
bnd
and
stos
sub
ss
push
jb
mov
adc
cli
sub
test
ljmp
loopne
xor
mov
inc
hlt
sub
ja
lcall
fcmovb
ret
ljmp
addr16
popf
test
dec
out
les
and
pop
mov
mov
dec
inc
sub
ret
hlt
cs
mov
mov
mov
outsl
fsubrl
xlat
xlat
jo
mov
aas
lods
push
adc
aas
jle
jns
push
jae
push
test
lcall
sub
mov
push
mov
mov
outsb
cli
cmp
jnp
shl
mov
leave
int3
sbb
sbb
sub
sbb
cwtl
jb
xor
sub
xor
mov
add
and
add
sub
out
push
push
aaa
stc
xchg
inc
icebp
scas
push
loopne
out
mov
das
adc
out
outsl
repz
push
les
adc
mov
lcall
and
stos
adc
and
lret
cwtl
push
call
fs
aas
daa
movsb
mov
and
xor
dec
es
stos
lcall
daa
fisttpl
inc
pop
lret
pop
lcall
push
mov
mov
jmp
push
lcall
popa
mov
ja
inc
sub
or
jmp
dec
xor
aam
adc
adc
roll
incb
lods
repnz
ret
mov
cmp
stos
ljmp
push
movsb
cwtl
push
mov
fcomps
clc
andb
fldl
mov
rorb
mov
fiadds
add
and
insl
dec
fldcw
insl
fistps
jle
cmp
xchg
repnz
ror
push
in
jecxz
sub
in
mov
adc
lds
popf
jne
fdivrp
rcrb
push
jnp
mov
add
test
dec
insb
xchg
cli
jmp
in
fcoml
push
cmpsl
push
ret
cmc
and
lret
outsl
cmp
lea
stos
outsb
aas
sbbl
int3
push
lds
aas
loope
and
sub
je
movsl
xchg
insl
sbb
push
cli
inc
xchg
in
add
dec
ret
rorl
mov
mov
add
retw
jae
ljmp
pushf
and
mov
arpl
xchg
sub
inc
jp
push
push
sub
xor
fidivl
inc
lret
and
cmc
sub
hlt
mov
ljmp
imul
sub
dec
mov
cltd
mov
shrb
fdivp
mov
add
loopne
jno
jnp
lret
popa
mov
mov
pushf
add
sbb
mov
or
idivl
ljmp
mov
pop
mov
mov
dec
jbe
stos
adc
cmc
mov
cmpsl
mov
and
mov
push
xor
testb
mov
mov
fidivrs
and
test
cmpsb
loopne
out
pop
pop
pop
call
in
aad
faddp
adc
arpl
xor
and
inc
mulb
mov
testl
sbb
loop
add
scas
and
test
movsb
data16
notb
jnp
repnz
mull
popf
inc
pusha
xor
outsl
movsb
push
mov
jbe
pop
imul
mov
mov
out
adc
mov
lcall
mov
xchg
mov
js
jmp
xorl
xchg
in
filds
push
sub
mov
mov
repz
sbb
mov
mov
or
ret
hlt
xor
ror
ja
fimuls
leave
enter
lret
sahf
out
rclb
popa
inc
in
test
mov
hlt
mov
icebp
lahf
xor
in
lret
rolb
gs
testl
mov
js
jae
sub
ficoms
sub
mov
and
out
pop
jns
mov
fucomp
test
lcallw
stos
bswap
scas
mov
sbb
jns
xlat
adc
ja
dec
call
add
ja
xlat
jb
mov
xor
insl
dec
sub
ja
loope
sti
scas
addb
les
pusha
cmpsl
adcb
aas
repnz
scas
hlt
inc
shr
xchg
cmp
add
fnstcw
mov
mov
shll
mov
ror
mov
ds
icebp
lcall
lret
mov
cld
lock
dec
and
shlb
pop
pop
adc
xor
int
mov
add
push
xchg
cmpsl
inc
fldl
sbb
ss
mov
ss
fdivs
xorl
ror
addb
cltd
in
mov
fldenv
ror
lret
test
jp
adc
pushf
cs
out
stos
cmp
mov
jbe
cmp
ds
cmp
push
pop
rclb
repz
mov
lods
xchg
das
out
mov
or
vmwrite
int
xor
jp
xchg
jbe
repnz
add
xchg
aad
xchg
sub
jbe
jle
repz
leave
popf
pushf
bound
stos
jp
je
loop
das
sbb
jmp
sbb
stos
in
leave
fnstenv
pop
xchg
jnp
test
shll
jnp
cli
cmp
and
adc
arpl
cld
je
in
pop
loopne
push
push
cmpsb
loop
daa
mov
and
xchg
jnp
mov
lcall
notb
cs
mov
mov
into
and
mov
jecxz
lock
sbb
les
inc
sbb
imul
dec
cmpl
inc
jl
jae
push
enter
mov
stc
or
sbb
dec
xor
mulb
cwtl
mov
repz
sbb
and
stc
daa
out
and
mov
das
inc
rolb
loop
xchg
xchg
sbb
in
inc
xor
dec
push
cli
lods
lods
out
adc
fisttps
nop
stos
sti
data16
mov
dec
pop
pop
pop
fs
das
mov
sbb
scas
fcomip
pop
lea
lods
iret
dec
sub
pop
outsb
mov
fwait
or
pop
scas
cld
dec
sub
pop
xor
add
loop
push
push
push
xchg
ret
aaa
add
add
ljmp
mov
push
div
jge
xlat
and
jg
icebp
push
xchg
adc
shr
xor
xchg
subl
push
fidivs
movsb
sbb
add
add
outsl
sbb
xor
xor
movsb
jle
movsb
idivb
fwait
out
xor
enter
ja
iret
push
das
outsb
stc
loop
push
sub
in
daa
pop
and
fmuls
mov
std
fldcw
add
test
aaa
mov
jmp
ror
cmpb
jbe
jbe
push
push
bound
in
arpl
add
outsb
add
and
js
repz
cmp
repnz
mov
mov
dec
ret
sbb
sbb
shrl
stc
test
pop
or
mov
pop
outsl
stc
cli
rolb
jbe
add
lcall
push
cli
mov
jns,pt
mov
push
test
mov
fldl
adc
cwtl
mov
addb
cmp
inc
push
xlat
out
xchg
push
and
ljmp
cmp
push
pushf
roll
mov
lock
push
cmp
add
cli
stos
jecxz
adc
sbb
jp
cmpsb
jl
jle
imul
stos
in
pusha
xor
addb
or
outsl
sahf
adc
movsl
cli
lret
mov
das
hlt
adc
cli
cmp
push
and
push
add
mov
xchg
daa
push
mov
dec
and
xchg
test
push
adc
das
xchg
add
rcl
mov
mov
adc
aam
jmp
call
rclb
call
push
xchg
aad
popa
fiadds
mov
adc
inc
hlt
lahf
stos
loopne
inc
test
hlt
cli
mov
pop
in
adc
movsl
xor
pop
push
sub
mul
push
add
and
test
xchg
mov
push
cld
push
cmp
mov
mov
lods
rclb
repnz
push
mov
and
mov
and
cmp
inc
dec
std
mov
sbb
cwtl
mov
aam
aam
xchg
cmpsl
add
hlt
jns
rcl
fldcw
into
inc
add
pop
sbb
inc
mov
out
in
and
sti
or
push
cmpsb
shll
pop
push
sbb
out
cli
fstpt
imul
sbb
test
shll
sbb
in
cs
movsl
sub
aaa
insl
movsl
iret
mov
mov
fisttpl
sti
cmp
dec
aam
add
jne
lret
shll
in
fnsave
outsb
stos
into
inc
push
stc
mov
stos
dec
sub
lahf
imul
mov
ss
pushf
sub
push
in
xorl
cwtl
and
cmpsb
std
dec
pusha
xor
dec
lds
add
insb
fimull
cmpsl
fs
push
mov
jns
xchg
pop
sbb
and
inc
mov
subl
enter
cmp
mov
xor
inc
jae
mov
or
bound
jge
pop
call
mov
jnp
sbb
adc
addb
sbb
hlt
inc
rep
push
call
sti
es
inc
cmp
or
int3
mov
push
pop
sbb
jp
mov
mov
inc
nop
pop
mov
loopne
popf
sbb
pop
mov
mov
mov
adc
pop
imul
leave
xor
mov
push
push
jp
xor
mov
int3
and
add
xchg
dec
cmpsl
pop
ja
mov
xchg
cmp
pushf
adc
in
pop
data16
shll
push
sarb
mov
iret
sbb
rorl
shlb
mov
sbb
outsb
jbe
popf
rcrl
inc
or
mov
cli
js
push
inc
andb
mov
xor
xchg
pop
sbb
cld
or
inc
int
stos
sbb
loope
lcall
push
iret
shl
stc
adc
in
test
push
test
pop
data16
xor
pop
in
pop
adc
lods
add
or
pusha
sbb
std
cmp
inc
dec
rcr
push
jbe
dec
pop
popf
out
stc
sahf
fwait
cmc
scas
into
push
pop
fidivrs
popa
cmp
sbb
pop
dec
hlt
aam
inc
mov
cld
xchg
pop
ds
in
jnp
movsl
xorb
mov
js
jge
inc
mov
inc
dec
dec
add
jo
movsb
sbb
adc
ror
out
mov
roll
aas
insl
adc
jne
fsubrs
rcrl
aas
arpl
jb
adcl
and
out
sti
mulb
xchg
push
imul
movsb
jnp
lods
repnz
pop
out
ret
add
adc
stc
jne
hlt
repz
in
pop
int3
sub
xor
cld
cmove
and
enter
jo
arpl
popf
push
test
jge
push
subb
dec
lret
mov
sbb
lret
mov
xchg
in
push
shll
aaa
mov
sub
add
push
adcl
inc
data16
mov
scas
add
jb
lds
je
aam
jne
jle
mov
enter
push
cli
rcrl
call
insl
mov
add
daa
jmp
push
jge
scas
and
mov
ss
sub
shll
dec
sbbl
inc
out
out
test
pop
aas
andl
pop
push
or
insl
cmc
dec
pop
bound
pop
shr
jo
add
shll
push
mov
adc
rcrl
sbb
aas
sbb
dec
ss
iret
mov
inc
pop
nop
mov
and
jbe
jmp
mov
fadds
xor
ret
mov
or
cwtl
inc
inc
inc
or
inc
mov
rol
ds
pop
subl
sub
and
rorl
rcrl
insb
test
outsb
mov
jecxz
pop
mov
push
je
pop
les
mov
jo
mov
ljmp
jbe
pop
das
dec
jb
mov
pop
loopne
ffreep
pop
pop
hlt
addl
adc
fiaddl
fildll
and
pop
movsl
jg
jns
mov
xchg
sbb
fbstp
imul
mov
js
push
dec
enter
mov
imulb
sub
sbb
out
imul
mov
cmp
insl
mov
pop
push
mov
imul
xchg
leave
mov
jmp
lods
push
cmpb
sbb
xchg
lods
and
push
mov
scas
adc
xchg
sub
cs
push
repnz
xchg
inc
push
mov
iret
roll
scas
push
xor
cmp
pop
enter
mov
out
mov
xor
cli
or
aas
shl
popf
fs
jns
inc
add
in
xor
adc
push
sbb
outsb
cmc
iret
cs
or
inc
nop
jb
pop
push
pusha
push
hlt
cmp
fildll
cltd
lods
bound
ror
jmp
ss
add
andb
xchg
insb
into
mov
inc
pop
ret
ljmp
iret
popa
ret
pop
mull
out
mov
cmp
movsl
xchg
vcvttpd2dq
andl
aas
push
cmp
sub
stc
stc
xchg
xchg
hlt
push
jae
mov
jmp
inc
repz
xchg
and
test
sub
out
sub
repnz
sbb
ss
xchg
push
ds
cltd
sub
mov
xor
mov
repnz
fsubs
mov
inc
daa
test
push
int3
scas
adc
add
jne
and
inc
loop
or
dec
and
shlb
inc
sub
jb
sbb
jbe
jb
data16
mov
inc
pop
iret
push
cmpl
es
lds
test
into
push
add
fcomps
cmp
and
xor
adc
call
sbbb
hlt
cmc
or
out
adc
or
mov
outsb
imul
lea
repnz
mov
test
xchg
add
mov
mov
dec
sbb
push
ret
jae
test
test
xchg
mov
out
push
add
xchg
sbb
hlt
test
jl
out
sbb
loope
mov
sbbl
add
and
mov
sbb
lret
cmp
mov
fisttps
fimull
xor
xchg
xchg
adc
enter
jno
or
test
rcrl
push
aad
lods
aas
cmpb
mov
icebp
fsubrl
pop
push
mov
into
cs
jge
and
addl
add
clc
insb
add
imul
into
sbb
mov
lock
xor
leave
insb
add
jae
pusha
sbb
hlt
sbb
mov
pop
mov
xchg
subb
sub
pop
push
iret
adc
test
dec
lcall
pop
xchg
push
or
loopne
jge
outsl
pop
or
cwtl
rolb
sahf
xchg
rcrl
scas
mov
ds
mov
lock
lcall
ja
adc
add
andl
cli
or
hlt
sub
iret
or
addb
or
stos
shl
xchg
imul
and
push
and
cmc
shll
mov
mov
add
cld
and
cmp
xor
add
jae
push
mov
test
loopne
sbb
test
push
mov
mov
cmp
xorl
int3
xor
adcb
jbe
movl
add
repz
movsb
sbb
mov
mov
sahf
mov
jecxz
xchg
call
inc
cltd
inc
push
gs
cli
sub
call
mov
or
push
pop
fs
hlt
sbb
pop
shlb
pop
loop
bound
test
push
in
or
and
clc
leave
xchg
mov
lea
push
jp
hlt
cltd
push
test
mov
iret
adc
in
pusha
push
push
mov
dec
sbb
call
sub
cmp
sub
pop
cld
jmp
ja
mov
ds
insb
pushf
sbb
mov
data16
xchg
mov
xchg
push
jnp
xor
mov
inc
xlat
ret
stos
push
fwait
jmp
ljmp
rcrb
sbb
insb
mov
jns
jle
sbb
not
popa
push
insl
jmp
mov
mov
push
sarb
lds
cmpsb
aas
icebp
mov
inc
cmpsl
cmp
fistps
cmpb
xor
call
add
imul
mov
sub
add
or
adc
mov
add
outsl
fdivrl
add
lret
je
mov
pop
stos
mov
hlt
xchg
adc
dec
jg
add
xchg
inc
fwait
push
and
in
xchg
adcl
add
mov
arpl
fsts
out
mov
sbb
jecxz
mov
int
dec
jmp
shlb
outsb
xchg
pop
add
inc
hlt
rol
enter
jnp
or
lcall
shll
addr16
push
dec
cwtl
repnz
cmpsb
addb
into
call
pop
out
gs
jbe
lods
xchg
cli
xchg
add
mov
into
inc
mulb
xchg
xor
lods
scas
adc
in
or
js
out
mov
mov
adc
adc
mov
nop
pop
cmp
or
fldenv
enter
sub
lea
call
jbe
mov
cltd
movsl
subb
mov
pop
inc
cmpsb
pusha
and
lock
push
mov
xchg
scas
dec
in
bound
stc
insl
aas
push
lahf
mov
inc
rcll
fdivp
js
clc
sahf
cltd
sub
sbb
es
pusha
sbb
xchg
jno
stc
sbb
lods
mov
pop
pop
xchg
mov
pop
hlt
jl
out
aam
add
and
ret
dec
int3
pop
js
mov
and
sbb
mov
xchg
loope
xchg
pop
mov
mov
dec
fwait
mov
dec
pop
pop
stos
hlt
xchg
inc
loopne
out
lods
leave
rcrb
fldl
ljmp
insb
lods
das
mov
inc
fcompl
imulb
call
fwait
sub
add
or
add
dec
add
lock
in
mov
ret
jge
loope
cltd
jecxz
test
mull
int
mov
push
repz
loopne
ret
popf
into
cltd
push
mov
add
pusha
mov
outsb
sbbl
or
stc
adc
jae
das
mov
insb
add
push
xor
push
mov
ds
jmp
push
aas
fst
cmp
fbstp
in
cltd
adc
loope
push
fwait
orl
arpl
add
xchg
cltd
into
mov
out
cld
inc
ret
dec
mov
mov
pop
data16
out
lcall
xor
sub
fdivs
lock
rolb
push
fwait
scas
inc
clc
call
xor
in
xor
gs
andl
or
fwait
inc
sbb
mov
sbb
cmp
push
xor
cmpsb
xchg
push
in
mov
cld
mov
std
sti
jmp
loop
mov
inc
lds
lea
dec
jbe
xchg
sbb
mov
cmp
call
outsl
dec
idivb
jbe
lds
jne
pop
loopne
and
dec
push
adc
sti
loopne
add
lods
mov
int
jbe,pn
jns
cs
stc
sub
push
push
pushf
ljmp
jne
ja
je
rcll
adc
push
in
fisttpll
cltd
mov
cli
push
shll
or
pop
out
ja
in
mov
and
cmp
add
mov
cwtl
add
aaa
jmp
xor
mov
sbb
push
mov
divb
leave
xchg
fwait
pop
loop
pop
push
or
aaa
fwait
loop
sbb
lock
addb
out
aad
xor
dec
push
mov
in
mov
lods
pop
pop
add
jmp
mov
jb
adc
add
xor
push
xchg
scas
push
push
xchg
xor
or
aaa
lcall
or
push
scas
loopne
lcall
dec
dec
sub
push
jecxz
cmpsb
cmc
mov
call
sub
in
pop
div
cmp
xchg
pop
shll
popa
dec
and
pop
ret
iret
adc
bound
adc
push
ret
inc
adc
cmp
loopne
cmpsl
or
xchg
dec
dec
daa
out
nop
xchg
leave
mov
dec
mov
inc
mov
mov
xchg
adc
and
movsl
pop
and
and
inc
aam
aas
jbe
pop
pop
cwtd
pushl
mov
cwtl
scas
lret
shl
ja
test
xchg
hlt
xor
xchg
add
mov
stos
xor
dec
insb
insl
sub
push
pop
mov
call
inc
cmpl
notl
cwtl
scas
repnz
into
divb
mov
scas
mov
je
lret
jmp
adc
mov
sbb
lret
sbb
out
stc
ret
sbb
stc
mov
fcmovbe
xchg
je
out
xchg
imul
test
or
arpl
adc
scas
mov
push
mov
sbb
arpl
inc
lea
je
mov
out
cwtl
add
dec
or
jne
and
outsl
je
scas
ljmp
pop
out
sbb
pop
xor
loope
je
out
insl
xchg
mov
jo
sbb
pop
test
mov
scas
cmp
mov
push
mov
adc
dec
xchg
in
scas
sbb
sub
out
and
cmp
xchg
push
mov
jmp
fld
mov
popf
inc
lods
or
push
daa
cli
mov
inc
loop
sarb
push
lret
mov
xorl
mov
hlt
shlb
pop
xchg
daa
push
jge
idivl
lods
mov
push
add
imul
sbb
and
dec
xchg
xor
pop
mov
push
ds
decl
sbb
loop
mov
and
scas
dec
or
sbb
js
ljmp
mov
loopne
lock
andl
and
cli
dec
popf
dec
lret
lods
mov
andl
neg
popf
mov
aad
add
add
sbb
ds
lea
xchg
sub
out
cmp
add
push
inc
jmp
inc
scas
in
outsl
sbb
mov
push
xchg
mov
mov
jmp
imul
mov
scas
or
add
aad
or
icebp
clc
fwait
test
scas
daa
scas
dec
cmp
in
push
sub
js
pop
cmpsl
test
push
xchg
sub
jb
stos
iret
lock
sbb
xchg
inc
sbb
adc
push
push
inc
sahf
arpl
lahf
xchg
cli
repnz
mov
cs
mov
fsubl
or
loop
mov
int3
inc
mov
cmp
dec
adc
loopne
jb
in
bnd
repz
fimuls
sub
jns
inc
cmp
push
fldcw
repnz
repz
adc
mov
cli
lret
jns
sub
out
sbb
push
and
xchg
pop
dec
or
jns
cmp
mov
and
std
cld
sub
inc
mov
jbe
and
dec
nop
jbe
mov
adc
xor
scas
and
test
cld
adc
sbb
and
sbb
cmp
fcomi
popa
xor
int
mov
jno
dec
fwait
push
jecxz
sbb
xor
je
mov
fucom
sub
dec
add
jb
arpl
cli
insb
xchg
jecxz
cltd
or
sti
test
fcomps
imul
dec
add
sub
jb
jmp
fisubrl
fwait
or
inc
in
jbe
repnz
xchg
sub
xor
popf
push
rolb
pusha
jmp
dec
dec
pop
jnp
jbe
xchg
pusha
mov
lods
add
fwait
mov
jecxz
hlt
rol
fnstcw
out
jo
sbb
inc
push
js
filds
cmp
scas
test
inc
mov
in
push
test
incb
pop
mov
rorb
or
mov
sub
incl
out
sub
inc
inc
ret
add
mov
xchg
sbb
xchg
pop
pop
mov
adc
rcrb
lods
clc
into
stc
sti
pop
je
jns
pop
fsubrs
cwtl
adcb
adc
and
mov
cmp
add
lock
jge
addl
nop
into
lret
xchg
inc
add
in
xchg
js
xlat
insb
cwtl
test
add
pushl
ret
nop
fnstcw
fwait
outsb
xchg
xor
adc
aaa
into
hlt
outsl
mov
test
sbb
ljmp
das
iret
push
fildl
jnp
bound
fs
mov
dec
xchg
push
push
fisubl
mov
xchg
lds
int3
bound
dec
fwait
test
pop
les
adc
js
jp
add
xchg
shrb
insl
mov
mov
sub
scas
out
mov
mov
and
mov
push
lods
inc
cmpsb
call
jbe
xchg
lcall
ret
or
xchg
sub
es
push
adc
xor
add
and
gs
pop
cmpsb
or
sub
sbb
adc
out
cmpsl
sub
aam
leave
loope
nop
push
dec
arpl
mov
shll
pop
stos
in
sub
movsb
mov
adc
cs
adc
or
outsb
push
std
cmp
bnd
scas
and
push
inc
adc
lods
and
and
jns
push
pop
test
in
cmp
das
mov
mov
out
xchg
mov
cmpl
outsl
xchg
subb
mov
jns
xchg
in
aam
addr16
mov
sbb
sbb
dec
cltd
xchg
sub
pop
lods
out
dec
adc
xchg
jns,pn
stos
stos
pusha
jmp
xor
imul
mov
mov
fs
cwtl
push
inc
pop
imul
test
xor
lahf
loopne
pop
add
or
mov
add
dec
mov
iret
cmp
xor
adc
jmp
xor
push
and
push
mov
call
lret
push
mov
and
sub
ljmp
test
mov
fwait
movsl
pop
in
insl
xor
and
lods
mov
lods
es
mov
xchg
fcoml
jmp
pop
add
test
test
outsl
loop
shrl
hlt
lea
ss
mov
sahf
push
mov
insb
sbb
jle
adc
cmpsb
iret
notb
dec
stos
xor
in
pop
push
add
rcrl
cmp
xchg
mov
aam
or
xor
push
out
sub
jmp
fwait
mov
xlat
push
dec
xchg
mov
fwait
test
scas
jg
insb
xor
leave
xchg
inc
cmp
loope
cmpsb
or
rclb
mov
int
inc
idivb
push
sbb
je
das
rolb
xor
dec
cmp
fisubrl
push
push
lods
shlb
mov
aas
loop
hlt
jmp
mov
out
cs
sbb
xchg
xor
fld
test
xor
in
clc
xor
das
stos
sahf
xchg
out
stc
lcall
or
and
repnz
shl
adc
pop
mov
inc
imul
out
imul
fwait
add
xlat
jecxz
mov
mov
jp
xchg
in
add
shl
mov
sub
imul
mov
rcrl
sbb
push
add
sarl
add
ds
xchg
push
pop
push
pusha
hlt
pop
iret
push
jmp
imul
jno
movl
fdivs
hlt
xor
and
inc
aam
mov
sbb
sbb
pop
adc
push
xor
xchg
mov
or
hlt
shlb
jbe
and
cmp
fldl
jle
lea
ds
dec
rcrb
inc
iret
fldl
popa
repz
and
lret
mov
push
ja
push
add
fnstsw
repnz
sahf
cmp
pop
or
rcrb
sbb
xchg
movsl
sub
mov
jo
jns
push
stos
aaa
out
js
or
repz
cmp
adc
sub
sub
ffreep
mov
dec
out
cmp
add
in
ds
ret
xchg
movsl
mov
aad
mov
test
imul
xchg
mov
lahf
mov
fdivp
in
test
aad
cmp
loope
cmp
mov
xor
sahf
mov
ds
xor
inc
jl
arpl
pop
insl
cwtl
imul
subl
out
sahf
testb
xchg
movsb
cltd
mov
into
dec
js
sti
mov
adc
sahf
mov
pop
inc
mov
jne
notl
cmp
push
xor
jge
jb
dec
mov
loop
add
and
imul
scas
push
les
xor
cs
shlb
cs
sahf
dec
es
in
inc
fcom
mov
pop
jmp
mov
pop
test
jb
xor
aaa
jno
or
adc
aad
daa
in
loope
fcmovbe
or
int3
fldl
ja
jo
lret
mov
fs
sahf
movl
mov
neg
dec
and
orl
xor
cmp
mov
ret
cmp
scas
pop
sub
mov
scas
add
dec
test
and
cmp
fcompl
daa
pop
jmp
xchg
pop
jns
sahf
data16
testl
int3
cld
sub
mov
mov
adc
ret
pop
add
sahf
mov
lret
mov
mov
fsubr
push
cmp
popf
mov
inc
push
lods
jbe
test
and
bound
sub
mov
and
mov
mov
lods
dec
inc
scas
in
xor
and
loopne
push
sbb
repnz
into
sub
cltd
cmc
std
add
in
scas
testb
cmpb
dec
aas
add
or
push
jp
jnp
push
mov
ret
mov
mov
push
int
test
mov
arpl
add
mov
sbbl
lret
xor
xor
mov
mov
bound
adc
cmc
sbb
andb
hlt
out
jo
mov
cmp
shll
jecxz
aam
outsl
mov
mov
cltd
ds
adc
and
inc
sahf
dec
and
inc
dec
mov
mov
cmc
jmp
inc
lea
xchg
fidivl
shlb
pop
rorb
lock
cwtl
out
in
add
mov
mulb
cltd
lcall
lock
hlt
pop
test
or
sahf
call
pushf
out
sbb
xor
mov
ret
xchg
je
addr16
rcrb
out
hlt
lahf
ds
mov
int3
fldcw
jmp
cmp
clc
inc
and
js
gs
bound
mov
loop
add
sbb
std
into
mov
xor
push
or
insb
add
rorl
inc
outsb
fcomps
inc
cmpsl
push
int
vandnps
repz
inc
lcall
lods
jne
icebp
pop
aas
or
adc
mov
mov
adc
in
stc
jmp
xchg
push
mov
fistps
mov
test
mov
add
pop
cld
mov
xchg
test
sub
push
fadd
mov
shlb
into
cmp
pop
shll
lcall
lea
jne
jp
dec
pop
add
mov
cmp
xchg
sahf
and
sti
bound
movsl
aam
sahf
inc
cmpsb
dec
mov
loop
mov
fmuls
ds
mov
pusha
push
lea
mov
jns
lret
sub
outsl
hlt
movb
mov
cmp
ss
push
xchg
xchg
mov
fwait
xor
or
add
xchg
cs
aad
shlb
mov
jbe
push
test
loop
les
lds
popa
das
shll
and
xor
mov
add
lods
mov
xor
mov
popa
add
outsl
dec
inc
in
dec
fsub
cltd
mov
fidivs
mov
pop
cmpl
cmpb
outsl
loopne
inc
xchg
sbb
mov
jmp
das
in
dec
lret
sbb
dec
jge
lret
ljmp
push
scas
xchg
cmp
cltd
pop
mov
jbe
stc
mov
sub
pop
ficoml
es
loop
inc
lret
and
outsl
xchg
sub
mov
xchg
cmc
push
in
lods
aaa
nop
rcll
fldl
clc
insb
es
aas
and
aad
push
jmp
ret
pop
mov
or
stos
fildl
fdivs
shlb
sahf
lods
or
cmp
ja
jmp
sub
lret
cltd
out
jnp
mov
mov
xchg
pop
and
jmp
and
fdivrs
loop
mov
lock
dec
aam
mov
orb
xor
std
xchg
fsubp
sti
jmp
mov
data16
push
mov
fs
or
incb
mov
inc
inc
into
pop
xor
push
sub
add
push
pop
mov
in
lds
inc
sbb
and
or
popl
fstps
loopne
popa
daa
push
orb
enter
imul
clc
cmpsb
adc
test
or
dec
lds
pop
xor
stos
push
std
popa
cld
mov
iret
rolb
dec
cmc
lods
jno
nop
push
shlb
cli
dec
lds
mov
sbb
jno
push
filds
loopne
in
xchg
cwtl
mov
decb
in
xchg
fwait
pop
repz
dec
fwait
rorb
sahf
push
push
imul
push
outsb
mov
lds
aas
adc
cmp
push
inc
in
and
loopne
popa
mov
out
ret
add
xchg
ss
ljmpw
ljmp
pop
cli
mov
jb
mov
daa
adc
test
cmpsl
and
movsb
int3
outsl
dec
inc
mov
mov
jbe
pop
icebp
bound
sub
push
jp
adc
movsl
enter
dec
lcall
xchg
xor
xor
ret
jns
lea
subb
pop
mov
mov
bound
in
sti
addr16
pusha
xchg
sbbb
push
fiadds
fs
mov
jmp
adc
iret
test
lock
push
mov
repnz
shl
xor
ss
mov
cmpsb
inc
test
ljmp
ret
xor
andb
jo
cwtl
cltd
inc
jno
cmp
inc
push
xor
pop
fcmovnu
or
lock
adcb
dec
aad
call
inc
or
iret
adc
je
sbb
aas
mov
repz
jns
movsl
shrl
or
ds
pop
xor
pop
imul
stc
push
adc
repnz
or
adc
or
jmp
and
ret
xchg
inc
add
stos
cltd
cmpsl
sub
pop
jl
cli
stos
fidivl
adc
in
mov
ja
jnp
out
out
pop
mov
pop
aad
xor
js
inc
fildll
idivb
sahf
in
pop
sub
add
xor
ljmp
out
int3
pop
arpl
add
and
aam
lret
dec
adc
pop
push
lahf
push
and
xor
xchg
pop
ficomps
es
fidivrs
das
out
or
push
push
std
cmp
sbb
loop
sbb
fsubp
cli
xchg
inc
push
inc
lock
pop
xchg
or
sub
jae
dec
xchg
adc
pop
dec
sbb
outsl
push
xlat
add
stos
icebp
lock
adc
dec
mov
mov
cmpsl
int3
cmpb
sbb
dec
jl
lcall
roll
das
divb
sub
fwait
pop
sbb
out
or
ret
pop
jnp
push
out
mov
mov
repz
ss
test
mov
cmp
xchg
fs
mov
scas
add
mov
jb
jns
cld
in
mov
pop
jns
mov
cmp
cmp
adc
aad
push
das
mov
mov
rol
push
ljmp
push
test
adc
mov
ja
loop
cli
into
sub
loopne
pushf
insl
pushf
in
mov
rolb
mulb
cmp
enter
jecxz
mov
sbb
jp
addr16
jo
inc
jbe
popa
mov
mov
aaa
ss
rorl
mov
cld
les
orl
outsb
lcall
in
add
test
iret
in
dec
cmp
jo
add
xor
addr16
and
shl
fdivrl
mov
dec
shll
push
fbstp
mov
cmc
inc
push
xchg
gs
jge
repnz
jp
or
insb
data16
xchg
insl
pop
mov
lods
sbb
mov
jecxz
sbb
mov
push
jl
inc
add
sti
lcall
fsts
shlb
dec
ljmp
mov
stos
and
jns
jecxz
adc
xchg
ret
fbld
push
adc
mov
arpl
xchg
sar
jmp
pop
cmp
jo
sub
inc
fcmovu
pop
ret
adc
aas
loopne
mov
mov
test
ret
ja
mov
ja
movsb
aaa
aad
ss
adc
adc
in
xchg
les
xor
shufps
inc
into
xor
and
roll
xchg
cwtl
mov
xor
cmc
sbb
xchg
notl
mov
pop
push
mov
fnstcw
lock
roll
outsl
fcomp
adc
or
mov
cld
cmp
mov
subb
adc
sbb
add
test
cmp
dec
negl
and
xchg
outsb
mov
mov
lahf
jo
incb
loopne
je
mov
pop
shrl
unpckhps
mov
les
int3
jmp
push
data16
cltd
movsl
xchg
shll
adc
cltd
arpl
sub
ja
sbb
mov
out
add
mov
push
push
out
and
cli
int
popa
cmp
pop
inc
add
xchg
xor
pop
adc
push
mov
test
out
loop
aad
xchg
inc
dec
fs
stc
push
test
jg
mov
sahf
mov
xchg
mov
inc
xchg
pop
lret
push
subl
fldcw
int
jbe
push
jmp
shrl
sbb
in
sub
negb
inc
cltd
lods
push
mov
pop
mov
rclb
lods
cli
adcb
xchg
mov
lds
add
pop
add
iret
jbe
ss
xor
jecxz
mov
pmuludq
or
or
call
andb
and
add
sub
cmp
mov
mov
lods
fists
cltd
xor
jmp
dec
fisttpl
in
popl
and
fnsave
into
sbb
lock
cmpsb
adc
in
push
out
and
xchg
mov
and
push
popf
cmp
insb
out
test
addb
ret
cmp
mov
fidivs
test
aas
lods
push
add
cmp
pop
dec
sub
or
sahf
and
add
lods
out
xor
das
xchg
call
stos
adc
ds
push
jno
adc
mov
cltd
ret
jmp
leave
in
ja
les
stos
int
aad
orb
popa
cmp
and
inc
cmpsb
pop
push
sub
xor
dec
add
dec
imul
sub
incl
idivb
xor
out
mov
inc
mov
testb
arpl
popf
mov
loope
xor
sbb
add
jmp
and
add
and
lods
loop
lahf
pop
cltd
jno
pop
push
sti
into
jecxz
mov
mov
pop
and
sub
into
mov
dec
cmc
cmpsl
btr
lea
aaa
outsl
jnp
mov
sbb
adc
cmp
and
pop
xchg
sahf
xor
rcll
gs
in
test
negl
pop
xchg
add
notl
sub
xchg
cmp
ret
cmp
inc
sbb
sub
sar
mov
les
push
adc
push
lock
cwtl
sahf
arpl
cwtl
jg
mov
aas
sahf
adc
push
hlt
sti
int
inc
mov
fwait
mov
faddl
mov
addr16
jg
call
addr16
imul
cmp
sbb
pop
movq
xor
repz
or
lods
mov
int3
lcall
inc
push
test
incl
mov
aas
in
divb
aaa
mov
push
lret
in
adc
pop
mov
mov
mov
arpl
ja
shr
and
xor
cwtl
add
fmuls
outsb
xor
aaa
mov
inc
mov
jge
jnp
ljmp
mov
outsl
push
aaa
push
icebp
sub
xchg
lret
aas
rclb
jg
xchg
aad
inc
jmp
push
loope
das
andl
xchg
jmp
pop
movsb
in
pusha
enter
mov
out
jecxz
push
jecxz
xor
mov
mov
sub
push
xor
pop
adc
dec
dec
jmp
rol
jge
mov
push
xchg
push
fs
sub
vpsllq
mov
gs
mov
push
cmp
mov
pop
ja
jmp
lods
fsubrl
in
xor
and
push
in
test
xchg
dec
subl
fistpll
outsb
lea
insb
xor
sbb
in
mulb
fists
sbb
pusha
subl
ret
fdivl
repz
mov
pop
or
std
insl
xor
mov
loope
jo
paddd
ficomps
ljmp
and
test
jle
es
xor
int3
scas
divl
scas
mov
roll
mov
jmp
sub
rcr
ret
enter
and
xchg
sub
in
adc
inc
add
cwtl
lds
movsl
add
fs
shrl
in
add
or
pop
mov
lret
sbb
in
loop
pushf
jge
sahf
lret
enter
call
cld
lods
dec
add
shrl
outsb
cmp
pop
inc
mov
pop
xchg
mov
lahf
outsb
in
mov
push
pop
mov
outsl
adc
jae
pop
dec
mov
xchg
xor
bound
xchg
xchg
xchg
and
cltd
subl
test
orb
mov
xor
pextrw
bound
or
jne
les
pop
in
xor
aaa
ss
sbb
movsb
into
mov
jbe
adc
mov
push
jns
mov
sbb
mov
pop
data16
stos
movsb
scas
mov
jbe
sbb
add
mov
inc
push
sbb
dec
sub
mov
xor
popf
loopne
pop
mov
cwtl
test
dec
punpcklwd
negb
add
ja
mov
mov
pop
call
movsl
addr16
xlat
inc
push
aam
popl
arpl
mov
mov
mov
shlb
jbe
test
jnp
js
je
aaa
mov
add
xchg
std
inc
in
inc
mov
loop
jle
aad
in
sahf
mov
mov
push
push
nop
inc
outsb
mov
jns
or
fmull
jle
push
inc
and
add
dec
mov
and
and
pushf
fstps
and
mov
pop
daa
mov
push
inc
idivl
xor
rcll
cltd
adc
mov
fdivrp
lock
jns
notb
popl
movsb
addr16
pop
mov
es
sbbb
subl
push
cwtl
arpl
shll
stc
push
mov
jbe
bound
in
test
dec
out
inc
push
jp
pushf
dec
test
push
jne
div
fwait
and
mov
and
rorb
ror
jmp
cltd
adc
jmp
sub
pop
in
leave
cmpsl
push
scas
jmp
push
mov
ror
pop
or
jns
dec
lret
xor
repnz
lret
movsb
pop
pop
cli
insl
pop
sbb
repnz
testl
sarl
mov
add
addr16
divl
cmp
xor
mov
jle
lret
movsl
lods
cmp
imul
loope
xchg
sub
push
xor
dec
mov
and
push
enter
repz
insl
push
outsb
cmp
scas
mov
fpatan
adc
mov
mov
arpl
jecxz
mov
ss
fwait
xchg
xchg
ja
es
pop
sub
and
rorb
inc
ds
cs
lods
mov
leave
ljmp
out
sti
mov
shl
in
pop
xchg
outsb
outsl
jae
mov
cmp
dec
ret
mov
mov
aad
cmpsl
mov
hlt
stc
push
out
inc
iret
ss
jae
pop
loop
in
push
test
jmp
mov
hlt
pushf
out
repz
push
mov
xor
and
cmpsb
mov
andb
sbb
imul
flds
mov
cmp
sahf
xchg
les
movsb
mov
add
jbe
mov
data16
cmpsb
es
out
push
outsl
clc
fiaddl
mov
ljmp
lret
jl
hlt
jne
insl
mov
mov
push
xor
mov
insb
xchg
jecxz
pushf
xchg
in
add
fists
cmpsb
scas
sahf
fs
daa
adc
call
push
fwait
or
xor
outsl
jae
sbbb
andb
mov
aam
jne
sub
test
aaa
stc
xchg
gs
in
adc
mov
shl
mov
ss
dec
dec
mov
outsb
mov
inc
pop
jmp
pop
arpl
dec
mov
insl
xor
cmp
inc
ror
cmp
fisubrl
cwtl
push
test
cmpsl
jmp
or
movsl
mov
rcrb
stc
xor
cmp
adc
je
aad
aaa
xchg
mov
cmpl
cmp
cs
mov
cmp
outsl
int3
xor
stos
inc
dec
movsb
mov
push
popa
nop
jb
in
pop
test
dec
mov
nop
fistpll
add
ret
outsl
xor
xchg
icebp
mov
sub
orl
cmpsb
cmpsb
scas
lock
push
jmp
popf
fstpt
adc
fdivs
js
adc
subb
adc
cmc
dec
fiaddl
in
cli
jno
add
mov
and
sarb
or
dec
and
dec
mov
pcmpeqw
sub
add
hlt
mov
xchg
ret
in
push
lcall
push
leave
stos
fstp
adc
outsl
stos
jne
sbb
rcrl
stc
add
mov
inc
loopne
jns
adc
sbb
mov
das
mov
inc
push
aam
sbb
mov
push
xchg
sbb
xor
outsl
imul
mov
push
sbb
mov
push
js
cmpsl
ds
aad
lahf
ds
dec
mov
mov
sub
out
cmp
mov
lret
arpl
sbb
test
or
adc
frstor
daa
jecxz
mov
mov
dec
xchg
iret
insb
jecxz
jecxz
clc
dec
cmp
les
pop
sub
jp
addb
lcall
inc
arpl
push
jnp
ja
cli
cmpsb
in
mov
xchg
dec
stc
out
lcall
jo
pop
out
lcall
data16
daa
divb
adcl
daa
push
fists
and
mov
mov
out
cli
mov
lods
jp
lret
pop
inc
inc
mov
xchg
or
mov
into
orb
mov
das
adc
adc
ds
fldenv
xchg
adc
jnp
and
cmpsl
popf
xchg
push
pop
adc
sbb
sti
ljmp
popl
add
mov
mov
shrb
dec
mov
sub
subb
and
add
call
cmp
lahf
rcrb
mov
mov
into
imul
repz
adc
pop
out
in
pop
out
xchg
enter
pusha
xor
imul
subl
cmp
nop
out
in
scas
cmc
cmp
in
push
bound
aam
jae
mov
or
inc
movsb
xchg
repz
scas
xor
sub
push
nop
and
mov
out
cmp
mov
fnstsw
out
dec
jg
lret
pop
jnp
adc
jb
add
mov
in
nop
iret
sbbl
lret
bound
xchg
ret
rorb
ja
repz
xchg
xchg
push
and
nop
fisubrs
shl
movsl
push
aam
mov
and
and
push
in
cwtl
mov
xchg
mov
into
mov
stos
sbb
sbb
movl
sub
lods
jb
lock
fldenv
dec
cli
push
xchg
sti
rclb
mov
sub
pop
sbbb
mov
add
push
pop
jns
push
xor
adcl
out
movb
pop
ret
divl
mov
mov
add
subl
ss
xor
dec
mov
mov
scas
ret
int
inc
push
sub
aad
mov
loopne
dec
jle
lods
addr16
iret
mov
setno
cli
lds
push
push
mov
jg
jg
outsb
loopne
mov
stc
sub
pop
mov
rcll
mov
xor
mov
pusha
out
out
aad
testb
adcb
outsl
mov
imul
push
push
std
adc
mov
fwait
loope
ss
pop
xchg
mov
in
push
in
mov
add
outsb
adc
daa
or
dec
pushl
push
mov
push
mov
mov
in
xchg
xchg
roll
or
test
fld
icebp
cli
ss
out
clc
insb
scas
sbbl
cmp
ret
divb
std
cltd
mov
mov
aad
mov
cmc
sbb
orl
jp
lds
loop
xorb
jae
pxor
mov
mov
mov
pop
ret
mov
xor
sub
lcall
pop
repz
dec
xor
pusha
mov
rcrb
push
adc
jmp
idiv
cmc
xchg
out
andb
je
mov
pop
push
scas
or
shr
mov
sbb
loope
xor
xlat
push
push
mov
xlat
jbe
mulb
and
jbe
mov
jns
sbb
sub
inc
lcall
test
je
dec
mov
mov
aas
and
out
jbe
xlat
stos
push
rol
cmp
scas
mulb
mov
div
arpl
cltd
and
arpl
mov
add
mov
lods
jbe,pn
in
loopne
mov
mov
adc
test
push
adc
mov
sbb
pusha
leave
xor
add
frstor
add
jb
add
add
fs
add
add
add
or
add
add
add
add
add
xchg
xchg
xchg
xchg
adc
adc
add
add
add
add
add
add
add
add
insl
imul
inc
or
add
add
xor
xor
xor
xor
xor
xor
add
add
mov
add
add
popa
jo
fs
je
and
je
jb
inc
jo
cs
sahf
movsb
shr
add
add
and
and
and
and
add
add
add
add
sub
add
add
add
jno
jno
cmp
add
add
call
pop
sub
mov
mov
mov
cmpl
je
mov
mov
mov
ret
mov
mov
push
call
push
call
push
call
jmp
add
push
mov
add
pusha
call
pop
sub
mov
movl
mov
inc
mov
cmpl
je
mov
mov
incl
inc
jmp
mov
popa
mov
leave
ret
push
mov
add
pusha
call
pop
sub
lea
mov
movl
mov
rol
mov
inc
mov
cmpl
jne
movl
lea
lea
mov
mov
mov
rcl
mov
rcl
dec
jne
imul
inc
inc
mov
inc
mov
cmp
jne
popa
leave
ret
mov
cmp
jb
cmp
ja
sub
add
jmp
mov
ret
mov
cmp
jne
mov
jmp
mov
ret
mov
cmp
jb
cmp
ja
mov
jmp
mov
ret
mov
test
push
mov
movb
mov
push
push
push
xor
add
movb
movb
mov
mov
mov
test
je
movsbl
push
call
mov
movsbl
push
call
add
test
je
mov
shlb
addb
mov
mov
sub
cmp
ja
or
mov
jmp
mov
sub
cmp
ja
sub
or
mov
cmpb
jne
mov
test
je
movsbl
push
call
add
test
je
add
movb
movb
add
jmp
mov
xor
mov
test
je
movsbl
push
call
add
test
je
mov
add
add
jmp
xor
cmpl
movb
je
test
jle
add
shr
lea
add
mov
mov
mov
mov
add
sub
jne
xor
or
cmp
je
test
jge
mov
mov
add
cmpb
jne
test
jl
test
jl
cmp
mov
jg
mov
sub
mov
test
je
mov
add
cmp
jle
sub
movb
pop
pop
pop
mov
pop
ret
push
mov
add
movl
mov
movl
jmp
cmpb
je
cmpb
jb
cmpb
jbe
cmpb
jb
cmpb
jbe
cmpb
jb
cmpb
jbe
movl
incl
inc
cmpb
jne
mov
mov
mov
cmpl
jne
mov
inc
rep
jmp
jmp
movl
jmp
movl
movl
jmp
shll
mov
shl
add
add
xor
mov
cmp
jb
cmp
ja
sub
jmp
cmp
jb
cmp
ja
sub
add
jmp
cmp
jb
cmp
ja
sub
add
add
incl
cmpl
jb
cmpl
jbe
mov
stos
incl
cmpl
jb
add
cmp
jb
mov
stos
mov
leave
ret
mov
lea
decb
inc
dec
jne
mov
mov
sub
add
icebp
mov
push
add
add
add
mov
add
add
jmp
pop
sbb
jmp
and
mov
add
sbb
add
inc
push
les
jo
push
pop
pop
sub
addr16
icebp
add
adc
stc
addr16
test
lret
xor
cmpb
pop
jbe
adc
cmpb
inc
add
jne
add
add
dec
in
in
nop
push
add
add
test
add
mov
push
add
add
add
mov
add
add
mov
add
add
add
mov
or
jne
mov
add
mov
add
mov
mov
in
or
mov
das
mov
mov
and
add
add
xorl
add
jne
mov
cmp
add
shlb
incl
add
sarb
out
add
add
jl
add
add
in
add
jno
xor
test
xor
cmpb
pop
jne
sub
add
add
in
mov
add
addb
add
jne
in
jmp
add
add
mov
adc
add
adc
add
rol
mov
adc
add
add
pop
sub
cmp
or
or
add
xor
les
add
add
mov
addr16
adc
add
mov
popf
xor
stos
ss
sub
loop
addr16
adc
stc
enter
mov
add
add
ljmp
push
mov
fmuls
nop
mov
xchg
ljmp
sub
mov
xor
ss
call
dec
push
mov
add
add
addr16
mov
mov
sbb
add
mov
fcom
in
into
mov
shll
adc
add
push
xor
sbb
sub
or
and
mov
lret
add
mov
adc
iret
mov
ljmp
nopl
scas
aas
or
enter
cmp
sub
pusha
stc
push
add
test
nop
or
mov
mov
andb
jns
dec
adc
mov
xchg
inc
push
test
mov
lock
cld
cmp
mov
push
jg
enter
xor
sbb
jo
aad
mov
add
dec
cmc
test
push
fldl
in
dec
test
and
lods
push
push
test
sub
insl
mov
stos
pop
inc
rol
data16
xor
mov
xor
inc
xor
and
movsl
and
mov
test
daa
add
jl
mov
adc
and
or
lret
out
mov
push
inc
scas
mov
ret
test
add
add
pop
and
cmp
xchg
lods
sbb
add
rclb
je
rorb
das
push
push
xchg
aaa
jl
test
push
xor
inc
aad
lods
mov
sbb
mov
fwait
gs
test
dec
pop
mov
fwait
inc
push
test
imul
xorl
cmp
mov
and
jmp
and
std
mov
xchg
test
mov
bnd
lods
icebp
sub
mov
xchg
lahf
imul
jo
cmp
mov
sbb
test
dec
pop
js
inc
test
xchg
call
pop
inc
inc
test
fimuls
add
lcall
and
std
mov
int
pop
xor
sbbl
sbb
jmp
push
or
pop
jecxz
movb
je
jns
imul
xor
mov
in
mov
call
push
lods
decl
popa
popf
or
std
mov
cwtl
lret
lea
cmp
fdivl
xchg
call
call
push
lods
rorl
xor
mov
rclb
fsubs
cmp
out
ja
add
dec
inc
dec
inc
pop
lods
cs
test
jno
xor
test
sti
add
xchg
jle
or
mov
fucom
adcl
pop
xor
adc
xorl
call
xor
add
dec
pop
xchg
push
inc
test
xor
add
push
roll
int
pop
xor
sbbb
mov
enter
mov
fistps
lahf
mov
hlt
jg
test
es
add
int
inc
arpl
pop
push
xor
pop
insb
lahf
daa
sbbl
or
xchg
jecxz
fdivr
int3
sti
outsb
xchg
cwtl
push
fs
shr
or
mov
incb
adc
add
les
sub
mov
loopne
scas
pop
mov
lret
dec
dec
pusha
and
push
cmpsb
aam
pop
xor
lcall
clc
pop
iret
or
fisttpl
xchg
aad
mov
pop
insl
loope
pop
scas
mov
aam
inc
pop
lods
dec
inc
test
test
dec
mov
mov
mov
pop
insl
loope
pop
xor
mov
js
aam
cmp
popa
movb
inc
dec
push
add
cmpsl
inc
scas
and
mov
mov
icebp
imul
xor
push
stc
sbb
sbb
pop
inc
subb
fcomi
mov
aam
sub
or
push
push
jmp
adcb
dec
push
xor
iret
loop
lret
int
shl
xchg
icebp
in
mov
rorl
or
lods
push
roll
or
mov
ds
adc
and
aam
int3
shrl
inc
ja
xor
jmp
cs
push
cmp
sub
test
pop
loopne
dec
push
repnz
xor
mov
add
lods
leave
cmp
out
dec
or
fwait
mov
inc
dec
cld
and
push
test
int3
or
xor
mov
inc
mov
nop
sub
add
fcmovne
or
std
mov
ret
mov
pop
pushf
pusha
inc
test
test
loope
rorl
mov
sahf
mov
iret
int3
cmp
inc
shrl
je
xchg
stc
dec
inc
dec
pop
jecxz
imul
add
test
scas
push
test
loope
icebp
cs
mov
adc
in
add
add
lds
mov
aad
mov
push
mov
leave
test
adc
loope
or
lods
decb
and
adc
xor
xor
test
pop
xor
les
mov
push
fcoml
jle
pop
xor
test
mov
pop
fimull
mov
aaa
fldl2e
int3
add
inc
jb
pop
test
xchg
stos
jns
add
icebp
sub
mov
dec
test
xor
loopne
jmp
push
in
sub
pop
xchg
ja
dec
xchg
clc
cmpsb
orl
push
imul
les
fmuls
mov
push
or
mov
rorb
xor
lods
push
mov
jno
rcr
sbb
fstl
out
pop
and
inc
test
ja
int3
cmpsb
hlt
add
inc
fiaddl
xchg
inc
test
sbbb
push
mov
mov
jns
lea
popa
popf
or
int3
push
sub
std
mov
sub
mov
xchg
psllw
inc
pop
xchg
cwtl
push
sarl
lods
shll
jle
or
leave
out
stos
jb
fwait
lods
les
test
fadds
stos
dec
mov
lods
les
fdivs
add
cmpsb
jb
popf
lods
les
xchg
jae
testl
fstpl
add
xchg
dec
pop
xlat
jle
mov
outsl
dec
and
data16
jg
test
es
pop
xor
popf
rolb
xchg
pop
rcrl
pop
adc
or
mov
or
cmpsb
rcl
mov
outsl
test
inc
test
cmpsb
mov
aam
out
dec
inc
inc
test
pop
repz
test
jb
cmp
std
mov
cs
sub
out
testb
rcl
inc
fwait
aam
es
pop
xor
and
mov
pop
nop
lahf
mov
add
jg
popf
fisubrs
std
mov
shl
ret
mov
mov
into
add
cmpsl
or
out
jmp
std
mov
jle
test
fnstenv
push
adc
test
inc
mov
cmp
xchg
cmp
pop
nop
pusha
inc
test
xor
lods
hlt
pop
std
mov
loop
dec
and
xchg
inc
mov
push
xor
inc
out
sub
and
xor
subl
inc
pop
in
dec
inc
test
xor
popf
loopne
std
mov
repz
test
std
mov
fcmovnu
sbb
outsl
lock
aad
inc
iret
aam
xchg
les
inc
mov
pop
scas
jbe
aam
inc
ja
dec
inc
test
inc
and
std
mov
aaa
test
or
les
das
xor
mov
mov
mov
mov
mov
sbb
sahf
faddl
mov
xlat
fwait
lods
les
xor
pop
push
or
mov
mov
lahf
push
roll
stos
sub
call
scas
inc
iret
aam
cmp
shrl
add
push
mov
mov
xor
das
push
test
cli
add
xor
add
out
add
xchg
movsb
jne
dec
fsubrl
mov
add
xor
pop
mov
cmp
sbb
test
scas
push
dec
aam
dec
aam
xor
or
cmp
push
push
cmp
std
mov
notb
dec
aam
std
popf
fnsave
std
mov
add
enter
jo
test
cmp
nop
mov
add
or
mov
test
dec
jecxz
sub
pusha
js
ret
pop
test
cmp
orb
inc
test
mov
leave
jl
push
fwait
lods
les
aam
xorb
xor
mov
adc
shrl
fiadds
dec
aam
pop
leave
icebp
push
std
mov
xor
jle
inc
cltd
mov
push
ret
fwait
lods
les
mov
sub
cmp
icebp
decb
dec
dec
nop
inc
dec
cmp
cmpsl
ret
inc
aam
test
xor
mov
int3
pop
pusha
xor
mov
pop
sbbl
xor
mov
and
xchg
add
imul
push
mov
mov
int3
pop
pop
int3
pop
pusha
xor
mov
pop
sbbl
xor
mov
and
xchg
add
imul
sub
ficoml
ret
xor
xchg
and
cltd
sbb
setge
cs
mov
inc
cs
ror
pop
pop
int3
pop
pusha
xor
mov
pop
sbbl
sub
mov
xor
sub
add
insb
js
pop
xor
and
cmp
xorl
mov
popf
std
mov
inc
cs
ror
pop
pop
int3
pop
pusha
xor
mov
pop
sbbl
xor
loope
clc
decb
xor
mov
das
setge
cs
mov
inc
cs
rol
pop
pop
int3
pop
pusha
xor
mov
pop
sbbl
xor
push
sarl
aaa
into
int
and
cmp
xchg
icebp
fldl
cli
decb
scas
ret
xor
xchg
and
cltd
adc
setge
cs
mov
inc
cs
int3
or
xor
or
pop
and
ljmp
std
mov
lret
mov
push
sarl
cmp
int
and
cmp
pop
mov
mov
xor
int3
inc
popa
scas
icebp
fdivrs
or
or
cmp
xchg
pop
xor
or
das
dec
and
test
loope
inc
popa
scas
xorl
mov
push
fidivl
nop
inc
dec
inc
nop
inc
push
pop
lret
ja
push
xor
and
sub
mov
jns
repnz
jle
jp
mov
stos
std
jge
loope
or
call
hlt
insb
xor
pop
cmc
sbb
push
push
gs
jbe
mov
pushf
adc
mov
scas
push
pop
cmc
jecxz
or
fsts
sbb
lahf
scas
pop
rcrb
lds
xchg
xor
imul
pop
in
or
fsts
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jns
stc
sbb
aas
imul
pop
pop
push
popa
mov
jb
pop
inc
dec
cmp
mov
mov
jp
jno
push
push
sbb
lods
mov
shr
push
jnp
sahf
fldl
push
xchg
xchg
cmp
mov
js
js
push
push
add
stos
lods
jbe
jmp
rorl
aaa
pop
adc
rcrl
loop
inc
add
inc
sbb
jbe
std
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jns
iret
in
add
push
jns
lods
lods
jae
out
jnp
jecxz
adc
add
sub
cld
sbb
jp
aad
das
push
popa
cmpsl
aas
add
pop
addb
and
add
pushf
aas
ja
stc
lcall
adc
lods
stos
aas
add
pop
inc
aaa
cli
or
imul
scas
sub
gs
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
cli
push
mov
dec
pop
push
xchg
mov
xor
rolb
mov
hlt
mov
daa
pop
rclb
jg
aaa
rcr
push
sbb
addr16
dec
or
mov
popf
or
push
in
faddl
pop
rcll
or
pop
adc
movsb
std
jb
aam
jle
hlt
or
xchg
jb
outsl
inc
addr16
ret
je
adc
sbb
push
movsl
lods
jno
repnz
repz
dec
push
stc
xchg
xor
std
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
popa
scas
mov
pop
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
push
cli
in
cmp
xor
mov
and
jp
aam
cmp
pop
xor
in
arpl
cwtl
add
rorl
push
rcll
lock
mov
sub
mov
test
pop
hlt
xor
mov
leave
arpl
sub
pop
jo
leave
sbb
arpl
push
pop
jno
mov
stos
xor
sub
test
pop
imul
mov
xchg
shrl
fldenv
jns
xor
inc
test
pop
imul
mov
outsl
xchg
lock
test
and
xchg
aam
es
pop
xor
movsb
shl
sbb
scas
lds
jmp
rcr
popf
aam
orb
inc
test
gs
xor
mov
pop
xor
in
jp
fwait
add
rorl
push
shr
xor
inc
lock
lods
sub
subb
ds
sub
popf
loopne
decl
pop
in
sub
pop
sbb
inc
test
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
mov
ret
xor
add
popa
lea
or
mov
dec
sahf
or
inc
mov
stos
push
inc
lea
pop
cltd
cwtl
push
shrl
and
in
popa
lock
add
push
rcll
lock
int
push
aam
ljmp
popa
inc
test
adc
push
mov
mov
pop
insb
lahf
cltd
lahf
cltd
cwtl
push
shrl
dec
pop
stos
popa
inc
test
negb
aam
lea
pop
stos
data16
lods
push
stos
std
mov
stos
jns
xchg
add
mov
shl
xor
pop
xor
std
mov
imul
jb
or
cmpsb
inc
sbb
test
mov
in
addr16
add
rorl
push
rcll
mov
lods
jb
cmpsb
jecxz
loop
pop
insb
lahf
lods
jns
vhaddps
cwtl
push
shrl
xlat
add
xchg
or
pop
and
fidivrl
pop
hlt
xor
mov
leave
fs
sub
pusha
pop
std
mov
leave
sub
int3
or
std
mov
call
add
sub
pop
push
popa
inc
test
std
mov
out
aam
lea
pop
and
mov
push
stos
icebp
call
nop
mov
push
pop
pop
test
rolb
xor
pop
sub
std
mov
pop
iret
xor
les
cmp
popf
frstor
pop
je
xor
mov
mov
jnp
test
mov
pop
xor
add
push
cld
push
lods
jbe
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
fiaddl
pushf
cmpsl
push
mov
test
in
push
xor
jnp
test
and
in
fs
add
push
rcll
lock
mov
popf
xor
mov
lds
jecxz
pop
add
pop
out
add
mov
add
test
into
mov
xorl
mov
pushf
mov
push
out
push
test
dec
xchg
sub
pop
or
inc
test
sbb
int3
pop
mov
jg
inc
shrb
rcrl
xchg
pop
xor
mov
add
lcall
inc
sub
mov
pop
in
push
inc
test
scas
lcall
adc
add
mov
aad
pop
lea
lahf
push
push
inc
int3
or
std
mov
xchg
pop
lods
cwtd
jg
inc
pop
pop
pop
xor
std
mov
leave
arpl
sub
pop
jo
leave
sub
out
aam
cmp
sub
test
cs
mov
cmpsb
pop
dec
pop
gs
test
std
mov
fdivl
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
inc
scas
out
popf
into
and
negb
jecxz
sub
pop
test
inc
test
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
push
orb
inc
test
inc
xor
std
add
xchg
inc
outsl
insb
push
inc
test
scas
lcall
or
mov
push
sub
and
mov
hlt
jl
int3
pop
push
xor
mov
pop
xchg
mov
pop
pushf
pop
stos
addr16
call
pop
xor
pop
outsb
xchg
xchg
add
rorb
leave
test
jg
jo
xor
das
arpl
daa
pushf
pop
xor
shll
push
cli
insb
out
imul
sbb
mov
nop
push
fs
out
dec
inc
dec
inc
test
out
aam
pop
or
push
xchg
pop
hlt
xor
mov
leave
arpl
sub
pop
jo
leave
insb
cs
dec
lcall
push
push
movsl
les
test
fadds
xor
cmpsb
shl
cmpsl
mov
loope
mov
mov
flds
xor
pop
cwtl
xor
mov
nop
and
xor
mov
cmp
xchg
loop
fldcw
mov
xor
mov
mov
scas
pop
shrl
int3
or
xor
mov
ret
xor
and
xor
mov
lds
or
mov
aaa
dec
mov
mov
push
out
ret
jbe
loopne
std
mov
mov
insl
xchg
cmpsb
in
jmp
test
jge
jl
shr
xor
cmp
cmp
fldcw
mov
xor
mov
aad
imul
add
cmpsl
cwtl
jbe
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
xor
mov
outsl
sti
jbe
mov
movb
pop
hlt
xor
mov
leave
fs
sub
pusha
pop
std
mov
leave
fdivrp
and
aam
inc
xchg
sub
dec
push
or
mov
insb
xorb
scas
neg
adc
call
popf
fisttpll
or
hlt
xor
mov
leave
jp
mov
pusha
mov
call
pop
imul
les
inc
test
divb
cli
aam
std
popf
loopne
std
mov
mov
int3
mov
inc
je
inc
xchg
mov
ficomps
aam
jge
cmp
es
jmp
push
in
inc
aaa
or
xor
popf
std
mov
sub
les
loopne
mov
add
pop
outsb
and
push
fs
pop
fs
xchg
lods
insb
xchg
lds
insb
lahf
cltd
mov
pop
cwtl
pop
sbb
clc
xor
jnp
dec
mov
test
pop
hlt
xor
mov
leave
data16
xchg
call
pusha
push
std
mov
leave
addr16
les
xor
scas
sbb
or
std
mov
mov
mov
scas
dec
pop
aam
nop
popf
fildll
std
mov
mov
sar
and
aam
lea
lret
xor
xchg
mov
out
sar
mov
pushf
pop
stos
addr16
xchg
add
test
jg
adc
xorl
inc
test
xchg
and
xor
mov
cmp
fldcw
mov
fwait
cmp
jae
xchg
fnstsw
push
sahf
test
jb
cmp
std
mov
popa
cmc
bound
into
cmpsl
je
pop
dec
dec
cs
in
sub
pop
nop
pop
inc
test
cmpsb
cmc
or
sub
add
sub
sbb
test
inc
pop
mov
test
daa
add
mov
test
xor
or
pop
xor
mov
cmp
popf
loop
fldcw
mov
bound
xor
jne
dec
and
inc
test
js
cmpsl
jmp
scas
and
xor
mov
cmp
popf
loop
fldcw
mov
xor
mov
iret
outsl
aad
mov
sub
aam
and
fs
jle
popf
fisubrs
std
mov
mov
lods
jns
lea
inc
mov
popf
or
mov
push
fs
inc
dec
inc
sub
std
xchg
cltd
daa
xchg
stos
cltd
xor
xor
or
std
mov
ret
mov
pop
push
inc
xchg
push
shrl
mov
iret
mov
pop
insb
lahf
cltd
vxorps
xchg
push
fs
jp
ds
roll
rorb
popa
or
test
adc
je
test
sar
test
push
push
movsl
les
push
xor
push
rcr
sar
aam
xchg
add
mov
dec
xchg
cmpsb
fldenv
mov
out
aam
andb
xor
in
fs
add
push
rcll
lock
xchg
sub
cmpsl
mov
pop
xor
jno
out
ljmp
sbb
in
cld
ljmp
xchg
lods
jns
pop
pop
outsb
mov
xchg
push
arpl
es
pop
xor
xchg
jg
test
mov
or
mov
pcmpgtb
sub
inc
sub
std
mov
add
arpl
outsl
cmp
cltd
xchg
sti
arpl
in
or
aad
repz
popf
lods
add
pop
stos
fs
mov
add
dec
sbb
mov
mov
into
xchg
call
loop
push
cwtl
xor
test
out
test
adc
hlt
xor
mov
leave
data16
xchg
call
pusha
pop
std
mov
leave
xchg
test
les
pop
xor
in
addr16
add
rorl
push
shl
xor
inc
outsl
lock
push
fldt
sarl
add
xchg
push
hlt
xor
mov
leave
stos
mov
call
pop
insb
xchg
leave
xor
and
sub
pop
popa
and
in
fs
add
push
rcrl
lock
lods
shll
out
pop
js
inc
test
inc
es
int3
or
std
mov
cltd
shlb
cwtl
add
xchg
daa
mov
pop
dec
ja
inc
inc
test
lea
xor
mov
cmp
loope
fldcw
mov
xor
mov
imul
cwtl
jg
fsubl
std
mov
nop
and
xor
mov
cmp
xchg
loop
fldcw
mov
xor
mov
loope
xlat
shlb
jno
daa
mov
mov
cmp
les
xor
mov
scas
sbb
jle
inc
sub
adcl
inc
fiadds
loope
pop
mov
inc
test
or
mov
mov
mov
push
sbb
jle
inc
sub
mov
into
pop
and
fs
xor
or
ss
mov
pop
xor
in
fs
add
push
rcll
lock
pusha
subl
mov
pop
xor
in
fs
add
push
rcll
lock
sbb
mov
das
xor
outsl
push
test
mov
in
gs
push
rcll
lock
addr16
in
and
pop
lahf
push
fsubrp
mov
jno
xor
fstl
inc
test
xchg
xor
mov
push
xor
mov
or
and
xor
mov
cmpsl
push
test
orb
inc
test
inc
sub
xor
or
call
jb
sub
les
test
roll
cli
mov
pop
mov
jae
popf
loopne
std
mov
push
hlt
xor
mov
leave
gs
test
call
pop
outsb
xchg
leave
ja
loop
sub
std
mov
xor
lret
mov
aam
imul
or
pop
xor
mov
cmp
loope
fldcw
mov
xor
mov
adcl
push
mov
mov
rcrb
push
push
or
jnp
clc
and
mov
push
jae
aam
dec
jo
pop
cmpl
xor
mov
cmp
loope
fldcw
mov
xor
mov
xor
nop
mov
add
xor
and
mov
inc
test
pop
pop
xor
mov
xchg
inc
ja
dec
inc
test
scas
lcall
cmpsb
loope
sub
pushf
pop
xor
xor
iret
add
sub
cmpsb
shlb
push
jns
inc
xchg
jb
adc
add
xor
pop
outsb
xchg
xchg
or
xchg
cmp
subl
push
sbb
jle
inc
sub
rcrb
stos
pop
mov
jle
scas
push
add
sub
ja
push
inc
test
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
push
inc
add
inc
outsl
add
test
scas
xchg
ret
mov
test
loope
jno
out
mov
nop
and
xor
mov
cmp
xchg
loop
fldcw
mov
xor
mov
std
bound
mov
mov
mov
add
cwtl
inc
mov
sub
xlat
mov
pop
sbb
mov
sbb
and
xor
mov
jnp
jne
cwtl
xor
mov
adc
cli
pushf
lret
imul
xchg
push
jns
pop
hlt
xor
mov
leave
arpl
sub
pop
jo
leave
sbb
notb
pop
xor
mov
lods
sbb
dec
inc
sub
test
pop
xchg
ds
or
add
lcall
imul
pop
outsb
and
xchg
popf
fidivs
std
mov
pop
outsb
popa
popf
or
popf
or
xchg
or
dec
fsubrl
pop
daa
cmpsl
mov
add
lcall
inc
sub
mov
loope
mov
and
fwait
aam
outsl
and
and
popa
lea
sub
std
mov
mov
outsb
bound
and
and
mov
add
test
adc
xor
mov
xchg
and
nop
in
push
xor
insb
inc
enter
rorb
inc
inc
test
fiadds
aam
pop
js
inc
test
sbb
out
push
xor
mov
mov
int
pop
sub
mov
jae
test
lods
mov
popf
pop
xor
shll
dec
xchg
add
lcall
pop
and
pop
pop
xor
mov
pop
xor
in
lock
add
rorl
push
rcll
lock
out
cmp
cmp
or
mov
inc
mov
and
aad
aas
mov
iret
pop
xor
addr16
test
std
mov
out
xor
sbb
test
lahf
pop
xor
jecxz
jb
add
xor
pop
cmp
idiv
xchg
sub
popf
loopne
decb
scas
data16
aam
orb
inc
test
scas
pop
xor
add
mov
and
mov
or
mov
lods
sbb
dec
inc
sub
test
ret
lods
imul
inc
call
sbb
sahf
pop
xor
mov
popa
xchg
int
lret
shll
cwtl
fbld
or
and
std
mov
scas
jp
or
nop
mov
mov
add
cwtl
inc
mov
sub
mov
pop
sbb
or
cltd
add
fcmove
add
test
subl
les
loopne
std
add
xor
jnp
test
std
and
xor
mov
ret
aad
lea
into
and
shlb
out
add
cmpsb
dec
xor
mov
pop
xor
in
arpl
cwtl
add
rorl
push
rcll
pop
xor
pop
test
pop
hlt
xor
mov
leave
arpl
sub
pop
jo
leave
cmp
pusha
rolb
xor
jb
dec
roll
sti
inc
popf
or
std
mov
leave
stos
mov
call
pop
insb
xchg
leave
in
cltd
cltd
popf
push
cmpsb
dec
xchg
les
pop
xor
in
fs
add
push
rcll
lock
stos
incb
push
cmpb
rcr
fimull
pop
xor
cmp
pushw
inc
jmp
cmp
in
adc
mov
movsb
add
xchg
pop
add
inc
test
notb
out
aam
std
popf
loopne
std
mov
pop
hlt
xor
mov
leave
data16
xchg
call
pusha
pop
std
mov
leave
sbb
push
xchg
push
xor
iret
cmp
pop
ja
or
or
xor
pop
add
std
mov
xchg
aam
add
mov
test
push
jnp
lds
std
mov
arpl
lds
std
mov
or
arpl
sti
lea
add
test
or
xor
or
std
mov
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
jns
jne
lea
pop
test
mov
cmpsb
test
and
xor
mov
mov
or
cmp
int3
or
std
mov
decb
test
pop
hlt
xor
mov
leave
fs
sub
pusha
push
std
mov
leave
das
push
lods
mov
scas
adc
movsb
int
mov
outsb
bound
fwait
pop
xor
test
xchg
cmpsb
mov
rorl
add
mov
jg
inc
mov
push
cmp
les
hlt
xor
mov
leave
data16
xchg
call
pusha
pop
std
mov
leave
insb
xor
xchg
sub
subl
xor
mov
cmp
popf
loop
fldcw
mov
bound
icebp
fnstenv
movsb
adc
int
jl
ficomps
add
std
mov
decl
cmpsb
test
pop
pop
dec
inc
test
xor
mov
push
sbb
jle
inc
sub
mov
cmpsb
addl
mov
out
push
xor
pop
push
xor
mov
jle
aam
inc
outsl
mov
inc
test
icebp
int3
or
std
mov
loop
aam
es
pop
xor
push
les
jle
cs
mov
imul
mov
mov
fcomi
out
aam
std
mov
sbb
les
loopne
std
add
cmpsb
pop
das
adc
xchg
or
xor
pop
inc
sub
test
scas
mov
aam
dec
outsl
std
lock
test
and
jecxz
sub
ret
mov
jbe
and
xor
mov
cmp
popf
loop
fldcw
mov
xor
mov
cmp
stc
xor
cmp
dec
inc
test
in
pop
xor
add
stos
dec
sub
test
out
add
xor
or
std
mov
sub
sub
dec
test
test
push
pop
xor
mov
pop
xor
in
lock
add
rorl
push
rcll
lock
sbb
daa
loopne
int
popf
jl
notb
orb
inc
test
xchg
pop
xor
and
xor
mov
pop
ss
ds
cmc
popa
push
cmp
fidivrs
fcomi
jbe
aam
std
popf
loopne
decb
xor
mov
leave
fs
sub
pusha
pop
std
mov
leave
frstor
es
fldenv
mov
pop
push
jns
mov
fcomi
sub
loopne
std
mov
in
pop
xor
and
xor
mov
fiadds
imul
sbb
shrl
movsl
xchg
dec
test
test
xchg
pop
xor
popf
loopne
std
mov
not
jmp
sub
popf
loopne
std
mov
rcr
divb
aam
std
popf
loopne
decb
xor
mov
leave
fs
sub
pusha
pop
std
mov
leave
leave
enter
orb
inc
test
std
pop
xor
mov
pop
xor
in
fs
add
push
rcll
lock
push
cld
pop
or
push
and
mov
or
xchg
inc
int3
rcl
es
aam
mov
cwtl
jns
jl
inc
test
or
xor
int3
shrl
inc
pop
mov
test
add
arpl
inc
test
pop
imul
add
ret
push
cmpsb
pop
xor
test
or
neg
adc
push
hlt
xor
mov
leave
stos
mov
call
pop
insb
xchg
leave
mov
cmpb
sbb
aad
divb
aam
std
popf
loopne
rorl
std
and
std
mov
divb
adc
push
cmpsb
xchg
adc
mov
add
das
int3
or
xor
mov
xchg
or
divb
popf
jno
add
scas
std
mov
pop
ja
inc
test
nop
and
xor
mov
cmp
xchg
loop
fldcw
mov
xor
mov
popa
cmp
mov
shr
add
xor
or
add
popf
rorl
mov
and
std
mov
cmp
push
data16
jae
push
sub
and
std
mov
cmpsb
xchg
sbb
xchg
cwtd
jg
inc
cltd
lahf
inc
popa
xchg
incl
push
cmpsb
orb
pop
hlt
xor
mov
leave
fs
sub
pusha
pop
std
mov
leave
lahf
push
out
aam
inc
test
fimuls
pop
xor
inc
test
sbb
pop
mov
std
in
arpl
cwtl
add
rorl
push
rcll
lock
cmp
or
mov
push
dec
in
mov
xchg
aam
dec
pop
int3
sub
shll
cmpsb
jne,pn
test
and
jnp
decl
xchg
sbb
test
lea
cmpsb
std
mov
sti
insb
cltd
cwtl
push
insb
and
cwtl
pop
xor
and
xor
mov
mov
popa
mov
stos
decl
scas
test
bound
add
xchg
inc
mov
inc
sub
adcl
cmp
sub
lahf
pop
xor
jg
or
fisttpl
xor
add
test
cmp
push
pop
add
mov
jl
push
add
les
hlt
xor
mov
leave
arpl
sub
pop
jo
leave
pop
xchg
push
xchg
out
inc
pop
cwtl
xor
test
mov
cmpb
push
shll
mov
in
gs
push
shr
xor
inc
insl
lock
mov
jo
jae
test
aam
dec
pop
xchg
cwtl
dec
test
aas
jle
dec
push
cmp
jbe
lea
xor
mov
cmp
loope
fldcw
mov
fs
add
shrb
in
pop
inc
mov
xor
xchg
cmpsl
or
add
cmp
sub
or
mov
cs
lret
xor
stc
or
lods
jns
cwtl
add
inc
pop
xor
inc
test
scas
test
pop
xor
imul
sub
in
mov
push
hlt
pop
mov
das
xor
mov
in
sbb
pop
push
lds
rcrl
int
loopne
popa
int3
add
xor
mov
ret
mov
pop
pop
xor
mov
jle
aam
dec
pop
xchg
cwtl
dec
test
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
mov
or
add
test
shrb
sub
test
hlt
or
setae
add
nop
and
xor
mov
cmp
xchg
loop
fldcw
mov
lahf
cmp
and
xchg
or
movsb
lods
leave
pop
test
shrb
sub
std
mov
outsl
aam
sub
adc
or
clc
sub
pushl
fmull
mov
sub
pop
or
pop
xor
pop
outsb
and
mov
popf
or
nop
popf
shrb
std
mov
push
shrl
mov
popf
shlb
std
mov
stos
push
inc
es
pop
xor
call
int
mov
push
movsb
mov
cs
test
popf
sub
mov
pop
push
inc
xchg
push
data16
sub
jl
sub
mov
fldl
pop
push
xchg
lcall
mov
dec
pop
insb
xchg
dec
test
loope
leave
out
jp
or
int
pop
xor
mov
lods
sbb
dec
inc
sub
test
mov
sbb
testb
fstl
std
mov
jecxz
test
lcall
xor
mov
leave
fs
sub
pusha
push
std
mov
leave
popa
mov
cmp
lods
cmpsb
jecxz
push
dec
pop
cmpsl
push
test
pcmpeqw
es
pop
xor
gs
inc
xchg
and
lods
fmulp
and
xor
cld
loopne
gs
and
xor
mov
cmp
popf
loop
fldcw
mov
xor
mov
sbb
jae
jle
xorl
add
xchg
inc
rolb
dec
inc
sub
adcb
pop
pop
jo
sub
in
jge
movsl
push
rolb
sub
push
test
je
inc
rcl
into
aam
dec
pop
inc
jb
mov
lds
xor
mov
xor
jecxz
sub
in
push
cld
adc
movl
cwtl
leave
arpl
sub
pop
jo
leave
into
imul
jno
sbb
aam
cmp
xor
inc
test
nop
and
xor
mov
cmp
xchg
loop
fldcw
mov
xor
mov
dec
jp
mov
jae
xorl
mov
mov
movsl
std
or
scas
cmp
jnp
or
int3
cmpl
enter
bound
and
into
pop
xor
add
mov
iret
pusha
test
call
mov
add
cwtl
inc
mov
sub
aad
pop
xor
pop
sbb
cmp
sub
cmp
aam
inc
test
pop
push
ret
test
sti
or
and
in
popa
lock
add
push
rcll
lock
jmp
inc
pop
aam
inc
test
xor
mov
pop
xor
in
arpl
cwtl
add
rorl
push
rcll
lock
cs
xor
and
mov
int
sub
roll
cmp
scas
ja
add
dec
pop
dec
and
arpl
std
mov
sub
push
iret
inc
sub
jmp
mov
loop
and
xor
mov
push
fdivrl
xchg
cwtl
cmpsb
fcomps
jae
shl
popf
loopne
decb
xor
mov
pop
xor
in
fs
add
push
shr
xor
dec
insb
lock
fadds
mov
rcl
lret
sub
ja
inc
inc
test
call
jg
fsubl
std
mov
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
push
jge
loope
pop
adc
inc
test
xor
mov
xchg
xor
ret
xor
or
and
mov
xor
and
and
mov
pop
xor
in
lock
add
rorl
push
rcll
lock
mov
cmpsl
mov
je
xor
mov
add
add
sub
mov
xchg
arpl
xor
and
rcrl
lods
hlt
pop
std
mov
lcall
add
stos
arpl
push
sub
loopne
fstps
jns
pop
and
push
pop
xor
popf
fdivs
std
mov
shll
icebp
cmpsl
mov
add
xchg
inc
rolb
dec
inc
sub
adcb
scas
xchg
cmp
orb
insb
cmpsl
pop
mov
or
push
test
pop
std
mov
mov
xchg
test
ja
push
int
je
xor
mov
push
aam
dec
dec
sub
mov
and
inc
jnp
outsl
add
test
divb
jne
or
mov
mov
mov
push
sbb
jle
inc
sub
mov
pushf
jle
mov
pop
xchg
cs
test
scas
add
aam
ret
xor
push
cwtl
jbe
pop
xor
mov
pop
xor
in
popa
lock
add
push
rcll
lock
js
jg
lcall
xchg
pop
hlt
xor
mov
leave
fs
sub
pusha
push
std
mov
leave
cmpsl
xor
mov
dec
enter
imul
das
int3
pop
add
std
mov
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
cld
dec
pop
pushf
cs
test
inc
xchg
popf
shll
std
mov
mov
or
enter
orb
inc
test
cmp
popf
loopne
cmp
fisubrl
les
ret
xor
or
xor
pop
xor
mov
cmp
fldcw
mov
fwait
cmp
or
mov
cld
cmc
pushw
xor
mov
lea
xor
mov
cmp
loope
fldcw
mov
xor
mov
cmp
cmpsb
mov
dec
sub
mov
loope
sub
and
xchg
lods
les
loopne
ljmp
xor
sbbb
test
jle
ficomps
add
mov
mov
orb
add
xchg
inc
nop
inc
sub
rorl
add
faddl
outsl
pop
mov
pop
hlt
xor
mov
leave
data16
xchg
call
pusha
pop
std
mov
leave
pop
pop
push
xor
xchg
decl
xor
mov
leave
popa
stos
mov
pusha
mov
call
pop
jb
leave
adc
mov
shl
and
sbb
and
data16
xchg
mov
pop
push
xor
mov
inc
mov
push
icebp
cs
mov
mov
test
int3
pop
xchg
xor
mov
and
mov
or
adc
xlat
xorb
idivb
pop
push
xor
mov
sahf
add
sub
sbbl
adc
cmp
sbb
or
xchg
and
lcall
and
negb
push
shrl
cwtl
add
cmpsb
jp
or
std
mov
cwtl
xor
mov
js
xchg
or
push
icebp
jge
mov
xchg
adc
rolb
mov
adcb
mov
pop
sub
test
divb
or
xor
mov
and
mov
mov
or
xor
scas
fld
cmp
mov
mov
xor
mov
cmp
gs
fldcw
mov
popa
inc
pop
ret
inc
jecxz
xchg
push
aaa
cs
std
mov
mov
pop
pop
imul
pop
mov
mov
dec
pop
or
mov
push
bound
mov
stos
mov
pop
cmp
test
fisubrs
popf
cmp
push
test
sub
ret
jbe
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
iret
fbld
fadds
add
insb
cmpsl
mov
add
xchg
inc
mov
inc
sub
adcl
orl
roll
mov
int
es
xor
lods
push
movsl
ret
mov
outsl
pushf
push
inc
test
sub
mov
push
add
in
push
test
dec
pop
mov
test
jp
insb
test
dec
pop
pop
push
inc
test
cli
xchg
aam
cmp
mov
call
dec
pop
inc
icebp
dec
test
ret
outsl
test
mov
push
stc
jns
fistpl
or
xor
adc
aam
dec
pop
imul
push
pop
xor
sbbl
mov
fiadds
aam
dec
ja
popa
inc
test
scas
mov
shrl
scas
jo
aam
cmp
aad
adc
sub
fadd
fimuls
xchg
aam
add
shrb
test
std
mov
into
sahf
std
aam
dec
ja
dec
inc
test
scas
push
xchg
sub
jg
dec
inc
test
and
mov
in
jp
fwait
add
rorl
push
rcll
xchg
mov
ret
sub
pop
test
fiaddl
xor
or
mov
and
mov
inc
jg
xchg
push
sub
js
fwait
sub
push
fcomi
mov
aam
std
popf
fnsave
mov
pop
hlt
xor
mov
leave
popa
stos
mov
pusha
mov
call
pop
jb
leave
xlat
mov
shlb
sub
dec
outsl
in
dec
inc
test
fimuls
aam
int3
dec
out
mov
cmp
les
xor
cmp
inc
test
testb
fstl
lds
mov
push
xchg
mov
inc
test
inc
pop
xor
add
cmpsl
adc
mov
lea
xor
or
std
mov
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
adcl
pop
loopne
add
inc
mov
test
std
mov
add
xchg
pop
hlt
xor
mov
leave
arpl
sub
pop
jo
leave
xor
add
fdivp
xchg
pop
clc
leave
mov
xchg
mov
aam
cmp
jbe
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
add
arpl
rcrb
cs
aam
add
push
and
xchg
add
or
mov
dec
imul
mov
cmp
rorb
aas
push
and
popf
or
int3
push
sub
lahf
lds
pop
xor
mov
lea
inc
xchg
push
cwtd
inc
dec
inc
sub
std
mov
mov
push
shll
es
pop
xor
sbbb
ror
sti
push
popa
push
ljmp
pop
cmp
loope
sti
jno
dec
inc
sub
std
mov
repz
mov
lods
insb
lahf
cltd
pop
stos
jns
xchg
mov
pop
xor
in
gs
push
rcll
lock
jp
pop
jmp
ja
sub
jbe
nop
and
xor
mov
cmp
xchg
loop
fldcw
mov
xor
mov
lret
mov
loopne
cli
add
xchg
pop
hlt
xor
mov
leave
arpl
sub
pop
jo
leave
mov
pushf
lcall
add
cmpsl
mov
mov
push
sbb
jle
inc
sub
mov
inc
das
cmc
dec
shll
mov
add
xchg
inc
mov
inc
sub
adcl
cmp
rcl
ds
sub
ja
sub
test
das
out
cld
push
add
sub
pop
test
xor
adc
test
pop
mov
test
mov
lock
pop
mov
fidivs
adc
dec
ja
inc
inc
test
sub
mov
jmp
addb
push
cmp
or
xor
mov
std
mov
or
xor
jo
inc
test
scas
mov
aam
mov
xor
and
xor
std
mov
pop
xor
in
gs
push
rcll
lock
cmpsl
aaa
or
jnp
mov
mov
pop
xor
in
addr16
add
rorl
push
rcll
lock
jl
push
popa
adc
test
test
cmp
popf
loopne
decb
xor
iret
js
lock
pop
and
xor
adc
fstpt
lcall
pop
xchg
pop
hlt
xor
mov
leave
data16
xchg
call
pusha
pop
std
mov
leave
and
ja
cmpsl
add
cmpsb
inc
cmp
inc
faddl
inc
out
pop
xor
test
inc
test
std
and
xor
mov
testb
or
test
insb
popa
pop
outsb
or
mov
js
rclb
inc
es
pop
xor
add
jne
xor
mov
push
fs
pop
outsb
and
mov
popf
or
popf
or
xchg
sbb
xor
mov
cmp
popf
loop
fldcw
mov
xor
mov
cmpsb
in
and
xor
mov
je
call
aad
daa
xlat
loop
inc
pop
aam
inc
test
ja
xchg
and
std
mov
lea
xor
mov
cmp
loope
fldcw
mov
fs
jecxz
and
xchg
cmpsb
flds
mov
test
and
std
mov
xchg
jmp
sub
mov
mov
pop
xor
in
arpl
cwtl
add
rorl
push
rcll
das
insl
inc
arpl
and
pusha
cmp
cmp
xchg
mov
in
sbb
sub
test
or
inc
test
or
mov
or
jg
or
das
int3
pop
jle
std
mov
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
enter
add
mov
or
mov
jl
jne
mov
test
and
xchg
pop
xor
and
xor
mov
sbb
aad
pop
and
mov
fadds
test
mov
pop
xor
or
xor
pop
or
push
dec
dec
fbld
test
and
mov
pop
jle
and
fildll
jb
lds
flds
or
mov
outsl
or
test
mulb
aam
xorb
inc
pop
xor
mov
pop
xor
in
lock
add
rorl
push
rcll
lock
call
daa
lods
pop
xor
add
and
add
pushf
jle
arpl
das
and
mov
int
and
dec
pop
xor
popf
shrl
std
mov
cld
push
xchg
pop
hlt
xor
mov
leave
data16
xchg
call
pusha
pop
std
mov
leave
inc
enter
clc
xor
mov
in
sub
mov
or
fidivl
xor
and
je
xor
lods
shr
es
pop
xor
dec
xchg
lock
icebp
leave
xchg
pop
xor
test
pop
cmpsb
fcomps
int3
push
push
xor
mov
mov
lret
pusha
and
inc
pop
xor
mov
pop
xor
in
lock
add
rorl
push
shr
xor
dec
outsb
lock
stos
mov
roll
sysexit
test
std
mov
jne
xchg
daa
dec
pop
xor
cmpsb
shll
js
shl
add
mov
add
mov
jb
cmp
pop
hlt
xor
mov
leave
arpl
sub
pop
jo
leave
mov
cmp
xor
les
mov
add
xor
pop
push
xor
mov
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
xlat
fisubs
outsb
or
mov
and
mov
mov
mov
sahf
pop
xor
sahf
adc
cli
loope
jle
and
insb
lahf
daa
lahf
pop
xor
call
mov
push
sti
cwtl
sub
xchg
push
inc
mov
sub
int
leave
cs
insb
jl
test
push
mov
lcall
push
std
add
mov
aad
nop
and
std
mov
mov
or
lahf
lahf
test
shr
inc
and
nop
push
movb
push
out
test
mov
iret
aam
cmpsl
mov
mov
push
sbb
jle
inc
sub
mov
cmp
popa
inc
dec
nop
inc
inc
test
or
mov
in
gs
push
rcll
lock
push
cld
push
add
outsb
int
push
add
push
icebp
pop
std
mov
push
imul
lret
and
enter
dec
addr16
mov
lea
xor
or
fisubrs
ja
sub
test
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
rorb
cmp
fcomip
or
cmp
mov
cmpsb
add
mov
mov
add
mov
add
xchg
inc
pop
inc
sub
rorb
fstpl
add
mov
add
test
xchg
sub
incb
aam
cmpsl
mov
add
cwtl
inc
mov
sub
fmuls
aaa
stos
push
mov
mov
shlb
jne
pop
xor
add
or
pop
xor
jo
inc
test
sbb
test
rolb
cwtl
xor
test
add
xor
inc
sub
les
pop
xor
in
arpl
cwtl
add
rorl
push
shl
xor
dec
imul
das
cmpsb
xchg
and
cmp
aam
dec
pop
shlb
inc
test
jp
sub
jge
pop
xor
fstl
mov
add
mov
lahf
lds
push
xor
mov
inc
mov
scas
fldcw
mov
loopne
rolb
stos
inc
mov
test
leave
add
mov
sub
nop
lods
cli
add
mov
jb
lods
in
pop
xor
mov
pop
xor
in
fs
add
push
rcll
jecxz
add
mov
jg
sbb
xor
pop
int
inc
dec
dec
popa
inc
test
xchg
and
xor
mov
cmp
fldcw
mov
xor
mov
xchg
fwait
hlt
addl
xor
popf
xchg
cmpsl
pop
xor
mov
pop
xor
in
jp
fwait
add
rorl
push
rcll
lock
enter
sbbb
add
xchg
inc
pop
inc
sub
rorb
pop
add
iret
cmpsb
inc
mov
test
add
mov
insb
mov
xchg
add
dec
outsl
pop
push
inc
test
dec
adc
inc
test
cmpsb
ds
aam
jne
ds
loope
inc
fcoml
xchg
mov
mov
shll
lock
test
std
mov
popf
loopne
std
mov
iret
pusha
test
cmp
aam
inc
test
cmp
mov
test
orb
inc
test
int3
add
cmpsb
inc
mov
test
or
sub
cmp
fsubrs
inc
test
fimuls
xchg
aam
dec
pop
mov
test
loope
pop
loope
inc
test
loope
dec
adc
inc
test
out
add
push
in
add
test
add
test
add
shrb
test
std
mov
mov
aam
dec
pop
mov
inc
test
pop
out
sub
mov
ret
xor
mov
jmp
test
call
pop
pusha
test
in
push
out
leave
mov
negb
aam
std
mov
push
test
cmp
fsubrs
inc
test
mov
aam
dec
ja
popa
inc
test
xchg
pop
hlt
xor
mov
leave
arpl
sub
pop
jo
leave
dec
push
in
stos
cwtl
or
mov
mov
lea
out
sbb
and
xor
mov
cmp
fldcw
mov
xor
mov
mov
mov
pop
lock
inc
test
adc
xor
mov
jnp
push
insl
test
pop
outsl
lahf
xchg
add
lock
repz
mov
mov
addb
dec
sub
jmp
faddl
in
add
arpl
sbbb
pop
cmp
pop
std
mov
cwtl
stc
les
sbbl
cwtl
lods
popa
ljmp
add
iret
add
add
pop
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
int3
aam
mov
adc
sub
loopne
sub
rcl
sub
pusha
shrl
xor
sub
pop
shrl
adc
shrl
sbb
shrl
jae
sub
sub
sub
cmc
shrl
pop
shrl
and
shrl
dec
shrl
shrl
adc
sub
arpl
sub
test
sub
into
shrl
cmp
shrl
add
sub
or
sub
pop
shrl
mov
shrl
ja
sub
sub
and
sub
push
shrl
lods
shrl
enter
push
aam
mov
and
sub
and
sub
out
sub
xchg
shrl
repnz
mov
aam
push
popa
aam
lcall
sub
push
shrl
mov
sub
sbb
sub
or
sub
sti
shrl
je
sub
mov
sub
cmpsl
shrl
adc
xchg
push
shrl
ret
inc
adc
shrl
leave
aam
lret
jg
sub
sbb
sub
inc
shrl
aad
sub
rcl
sub
add
shrl
mov
sub
pop
aam
lret
xchg
shrl
sbb
sub
mov
aam
pop
dec
shrl
mov
sub
adc
sub
and
shrl
adc
sub
jmp
sub
dec
shrl
lock
out
sub
dec
shrl
dec
shrl
mov
shrl
push
sub
test
sub
outsb
aam
push
outsl
shrl
mov
shrl
pushf
shrl
repnz
aad
sub
xor
sub
push
shrl
sbb
sub
mov
sub
lret
aam
jo
shrl
and
sub
mov
aam
dec
adc
sub
imul
ficompl
aam
test
shrl
outsb
shrl
imul
sub
push
shrl
dec
shrl
stc
shrl
jecxz
sub
xchg
sub
dec
shrl
shrl
repnz
aam
cmc
push
shrl
jge
sub
xchg
shrl
adc
sub
cmp
shrl
rcl
sub
lods
shrl
xchg
shrl
cmp
sub
add
aam
out
shrl
add
sub
mov
sub
test
sub
push
shrl
inc
shrl
mov
sub
arpl
sub
in
shrl
in
shrl
dec
shrl
adc
sub
adc
sub
xlat
aam
loopne
shrl
mov
sub
push
aam
add
xchg
shrl
push
shrl
lret
jne
shrl
mov
or
mov
or
stos
inc
add
test
or
fistpll
push
js
add
sub
mov
std
mov
decb
imul
add
xor
mov
icebp
sub
mov
vpaddq
mov
call
pop
mov
sbb
decb
loop
or
rcrl
or
sub
nop
and
mov
rorl
jmp
call
pop
xor
pop
adc
add
sub
std
mov
or
insb
xor
mov
mov
pop
xor
inc
sti
in
int
mov
call
sub
je
cltd
adc
fldln2
rorl
std
mov
fisttps
sbb
mov
mov
add
inc
or
pop
xor
mov
push
flds
es
fs
sti
out
xchg
sub
sub
jp
add
bound
xchg
lret
jnp
pop
sub
loope
jl
mov
and
clc
inc
or
pusha
mov
pop
xchg
sbb
add
xchg
jg
popf
mov
rorl
push
xchg
std
movsb
movsl
test
mov
sub
decb
inc
jno
rcrl
pop
icebp
fwait
mov
hlt
jb
pop
pop
jb
shr
mov
adc
data16
sbb
jge
mov
mov
test
das
inc
add
mov
fisttps
sbb
mov
mov
pop
mov
call
pop
stos
jmp
cmp
push
sub
push
ljmp
ret
xor
or
xchg
dec
xor
decl
xor
push
sbb
ret
or
lods
mov
ja
inc
pop
clc
sbb
out
mov
dec
loope
pop
dec
rorl
std
mov
lods
shr
stos
jmp
xchg
std
mov
or
add
test
cld
push
cmc
scas
jae,pn
icebp
sub
jmp
cld
cmc
and
std
mov
inc
loope
add
std
pop
test
frstor
lea
mov
push
loope
rorl
cmp
in
inc
hlt
lahf
mov
call
test
insb
or
pop
xor
xchg
fnstcw
push
shlb
bound
pop
xor
mov
ss
pop
xor
inc
xor
call
inc
lods
sub
ret
and
mov
jle
pusha
xor
mov
pop
rorl
sbb
pop
xor
inc
bound
push
fdivl
std
pop
mov
shr
lahf
jg
inc
mov
mov
lcall
data16
pop
xor
inc
test
call
pop
mov
out
mov
or
push
movsl
into
lret
lock
or
sub
cmp
test
pop
cli
call
lret
icebp
push
sub
xor
inc
repz
fidivrl
add
dec
or
mov
mov
and
std
mov
mov
add
mov
mov
or
sub
pop
jno
xor
jne
fwait
jl
jb,pt
sti
lret
xchg
jg
fs
mov
fisubrl
nop
dec
cmp
insb
cmc
iret
sbb
loope
xor
dec
cmpsb
gs
popf
cmpl
lods
icebp
pop
xor
dec
pop
xor
inc
mov
pop
xor
inc
popa
inc
cmp
adc
lock
test
inc
mov
mov
loope
jge
push
fldln2
rorl
cmp
inc
push
pop
cmpsb
fs
shr
or
adc
xor
nop
inc
sub
pop
mov
mov
mov
add
xorb
dec
sahf
jnp
clc
push
ss
pop
icebp
inc
sbb
sub
mov
or
or
mov
adc
or
sub
jo
jmp
pop
loope
rorl
jle
pusha
xor
mov
jmp
add
jmp
xchg
dec
cs
in
mov
sahf
lahf
pop
xor
adc
dec
flds
pop
ret
fldenv
jge
inc
or
pop
xor
fdivrl
xor
or
sub
shr
mov
es
repnz
xor
mov
push
dec
jbe
or
fbstp
stos
shlb
std
jno
mov
mov
aam
loope
mov
call
pop
sub
stc
call
jg
std
stc
xor
cwtl
inc
or
call
push
jl
xchg
shr
or
and
mov
or
scas
rsm
pop
push
icebp
lods
mov
jl
rorb
mov
insb
xor
or
sub
decb
bound
ret
jne
xor
add
xchg
out
icebp
ds
pop
xchg
mov
cmpsl
cwtl
or
xchg
pop
xor
and
nop
push
xchg
cmp
dec
push
decb
sub
mov
call
loop
ss
pushf
xchg
popf
or
dec
out
jl
cmpsb
aam
pushf
push
xor
mov
test
call
pop
xor
inc
sub
cmpsb
sbb
std
add
dec
jl
and
ret
enter
or
sub
mov
xor
push
pop
jle,pt
mov
push
daa
inc
test
mov
loope
loopne
std
mov
add
adcl
mov
jno
daa
cld
rcll
or
cwtl
inc
mov
mov
push
loope
mov
std
mov
rorl
std
mov
or
xor
xor
sub
jb
pop
xor
call
inc
lods
push
xor
push
inc
push
and
sar
pop
or
mov
dec
add
mov
inc
and
or
icebp
andl
mov
std
add
jne
xchg
add
pop
xchg
sbbb
pop
dec
jle
pusha
xor
mov
iret
daa
pop
xor
cmp
lock
push
rol
clc
jp
inc
adc
xchg
cltd
push
test
sbb
xor
scas
flds
shll
pop
imul
decl
jle
xor
iret
and
shll
xor
push
mov
shr
mov
pop
xor
inc
or
mov
icebp
add
and
mov
mov
push
pop
mov
xchg
jmp
call
jge
push
icebp
cmp
mov
mov
sub
fbstp
mov
out
push
sub
add
es
xor
add
rorl
std
or
mov
hlt
xchg
mov
pop
xor
mov
and
jmp
xor
xor
or
mov
xor
xor
lahf
xchg
xor
add
out
or
xor
adc
or
adcb
loope
fucomi
shll
loope
hlt
sti
std
mov
mov
call
pop
xor
push
fptan
rorl
leave
call
pop
xor
mov
out
dec
mov
add
testb
cmpsb
popa
popa
insl
test
dec
jle
pop
xor
mov
shr
pop
loope
fs
pop
xorb
nop
or
xchg
pop
xor
add
xchg
add
mov
cld
mov
mov
or
jg
pop
xor
mov
push
loope
lcall
push
arpl
cmp
loopne
push
out
hlt
lods
int
pop
xchg
inc
lock
bound
daa
xor
or
shl
ret
jb
push
push
icebp
pushf
lds
xor
inc
popa
es
lods
xor
jb
rolb
fildl
jnp
mov
cs
lods
sbb
sbb
std
mov
xorb
call
and
mov
jl
pushl
in
cltd
ret
adc
or
or
add
dec
es
pop
xor
scas
je
mov
pop
stos
fld1
mov
loope
rcll
ret
xor
xchg
std
mov
sub
std
mov
mov
pusha
fsubr
enter
jle
cltd
mov
mov
aam
dec
mov
add
divb
leave
call
pop
xor
add
xor
jmp
xor
call
pop
sub
add
add
iret
and
mov
and
mov
popf
pop
push
popf
mov
xchg
xchg
dec
pop
xor
mov
lcall
mov
mov
pop
je
std
mov
sub
or
stc
or
or
inc
or
lock
mov
imulb
std
jecxz
mov
arpl
fmuls
shlb
mov
mov
add
es
xor
lret
xor
pop
inc
faddl
out
jmp
mov
inc
adcl
stc
mov
jp
add
scas
flds
dec
xchg
lcall
sarl
fwait
sti
jmp
cmpsb
mov
cmovge
test
call
mull
mov
add
cwtl
mov
aaa
sub
pop
in
xchg
add
sbb
inc
rolb
test
xor
and
sysexit
in
mov
out
and
out
xchg
pushl
jp
ret
cmpsl
pop
xor
and
std
mov
cmp
flds
add
adc
or
xor
mov
test
jmp
aaa
mov
sahf
cmp
sub
mov
lock
rorb
xor
push
jb
and
scas
shll
icebp
pushf
mov
mov
or
sub
pop
rcrb
enter
mov
aaa
cmp
inc
or
pop
xor
inc
test
call
loop
decb
popa
jne
pop
xor
and
in
rorl
or
and
int3
jge
movsb
jne
decb
stos
and
ret
popa
outsl
jle
mov
mov
pop
sbb
xchg
loope
std
push
rorl
nop
jno
xor
mov
dec
lock
mov
mov
or
sub
mov
lcall
or
out
aam
popf
daa
aam
xor
movsb
cmc
cltd
jg
jp
sub
lret
mov
cwtl
and
or
stc
xor
cmpsb
shrl
std
mov
scas
pop
mov
call
aas
dec
jle
pop
xor
mov
jne
dec
pop
xor
mov
xor
mov
call
inc
or
inc
pop
xor
out
dec
les
in
lea
xor
mov
xor
jns
sub
flds
xor
or
mov
inc
lahf
cwtl
jns
pop
stos
shr
xchg
mov
pop
addr16
and
std
mov
in
rorl
movsl
andb
and
jmp
mov
push
icebp
mov
mov
call
imull
xorb
xchg
inc
cmp
sub
fidivl
lds
add
mov
and
std
mov
inc
loopne
test
xchg
add
popl
std
mov
mov
or
lods
shr
push
in
sar
mov
inc
pushf
inc
and
pop
mov
sub
xchg
fsubs
inc
loope
add
std
mov
inc
loope
pop
dec
mov
add
inc
sub
sub
sub
push
dec
es
mov
sub
adc
lds
mov
sub
loopne
pop
xor
and
push
std
mov
xor
enter
cld
pop
mov
cld
mov
fistps
jl
cmp
ret
add
fidivl
movsb
bound
std
mov
data16
clc
inc
test
call
rcll
jle
pusha
xor
mov
lock
std
mov
push
loope
fists
mov
icebp
sub
pop
xor
inc
divb
daa
hlt
mov
jnp
pop
xor
mov
xchg
daa
ror
std
pop
xchg
mov
cmp
and
push
std
mov
sbb
imull
fld1
icebp
fidivl
mov
mov
push
iret
push
subl
xor
mov
add
add
push
ret
pop
sub
and
mov
push
loope
jmp
decb
movsl
call
mov
pop
dec
cltd
add
outsb
leave
sbb
lds
in
test
test
add
or
mov
sub
xor
es
xor
or
aas
and
sub
mov
mov
call
inc
xor
add
dec
xchg
lods
fldlg2
rorl
std
pop
addl
in
jo
xor
and
popa
es
in
std
add
dec
jnp
outsb
add
int
pushw
pop
xor
dec
mov
test
mov
je
mov
mov
loope
je,pt
mov
cmpsb
insb
pop
xor
xor
loopne
cmp
pushf
and
test
call
pop
or
pop
xor
lds
std
mov
add
push
icebp
sbb
mov
mov
or
sub
mov
jbe
xchg
stos
xchg
jecxz
or
ret
pop
xor
fsubr
rorl
mov
bound
call
pop
sahf
movsb
movsb
cmp
mov
add
aas
daa
pusha
mov
ljmp
imul
jno
scas
mov
cwtl
inc
mov
mov
sbb
inc
mov
mov
ret
movsl
lods
insb
xor
call
inc
test
call
test
nop
cmp
xor
pusha
xor
mov
rorl
jmp
mov
jb
xor
mov
or
pop
mov
jge
mov
loopne
ret
ja
xor
push
je
mov
call
pop
stos
xor
cmovge
in
jmp
lcall
ret
sbb
inc
mov
mov
pop
insl
negb
lods
out
popa
es
lods
xor
push
icebp
test
mov
pop
xchg
daa
cmp
dec
cmp
inc
lcall
fldln2
rorl
std
mov
ja
mov
push
fptan
rorl
std
mov
and
roll
dec
or
movsb
shr
or
sub
or
popa
xchg
and
sbb
mov
sbb
push
hlt
aad
mov
call
xchg
mov
fsubrl
xor
add
dec
js
push
jl
pop
icebp
add
or
insb
stc
pushf
loop
mov
test
xor
dec
cltd
add
dec
jl
inc
xor
or
stos
loope
push
insb
jle
stos
das
orl
xor
and
push
pop
std
mov
pop
loope
sbb
sub
rorl
std
pop
cmpl
call
hlt
add
or
flds
inc
fidivl
and
sub
f2xm1
enter
mov
sti
cli
test
call
pop
xor
mov
xor
cmpsb
pop
lock
cmpsb
mov
push
jl
jecxz
lahf
movsb
jb
daa
mov
mov
mov
add
jne
cmp
pop
and
pushf
xchg
xor
sub
mov
xor
bound
inc
mov
mov
and
jno
bound
std
or
sub
jge
insl
imulb
ds
inc
loope
pop
sub
stos
incl
das
std
mov
mov
in
rorl
sub
shr
xchg
mov
pop
inc
pop
xchg
or
or
lcall
loope
pop
sub
out
sub
insl
test
aad
repnz
fnstcw
cld
ret
lds
add
dec
movsl
mull
std
add
movsl
aas
sub
std
and
std
mov
or
inc
test
call
pop
cwtl
jg
pusha
xor
mov
fimuls
sbb
std
mov
mov
mov
xchg
jmp
call
aas
dec
lock
inc
inc
shr
or
mov
test
call
mov
mov
shr
mov
pop
xor
inc
or
sub
xor
pop
xor
or
sub
loope
icebp
dec
push
mov
pop
xorb
sbb
and
pop
loope
mov
std
mov
jmp
test
dec
pop
sbb
xchg
filds
das
jle
lds
xchg
or
std
mov
cwtl
jnp
fiaddl
loop
lret
sub
dec
adc
xchg
and
sub
mov
stos
pop
pop
inc
sub
inc
es
lock
mov
inc
push
or
incl
ret
sub
enter
call
fsubr
rorl
std
mov
jne
mov
jne
add
mov
mov
pop
test
lahf
lcall
std
mov
in
xchg
pop
icebp
jl
or
inc
mov
clc
pop
xor
mov
divl
test
ffree
clc
jno
xor
in
jns
dec
out
popa
mov
outsb
aas
imul
or
shll
call
pop
xor
push
lcall
add
dec
jle
pusha
xor
mov
mov
pusha
or
pop
xor
inc
mov
mov
lock
aam
lahf
js
sahf
cmp
mov
mov
sub
mov
mov
pop
mov
std
fyl2x
dec
movsb
mov
call
pop
xor
and
decb
mov
mov
and
decb
jno
inc
push
xor
or
cmp
dec
fs
cmp
jbe
pop
xor
mov
test
call
pop
xor
add
dec
jle
pusha
xor
mov
sub
jle
pop
xor
mov
sub
std
mov
mov
std
mov
inc
loope
xchg
push
dec
add
add
inc
cmpsl
std
mov
repnz
sub
hlt
inc
popa
mov
clc
inc
mov
mov
jecxz
or
cmp
mov
repnz
cwtl
jg
fimull
add
cs
push
loope
and
test
call
fidivl
inc
pop
or
xor
xor
mov
mov
or
flds
mov
pop
nop
scas
icebp
adc
mov
dec
push
ret
push
rorl
inc
rcrl
es
and
test
mov
adc
repz
xor
je
cmpsb
mov
call
pop
xor
imull
std
mov
pop
loope
dec
mov
mov
add
pop
out
es
std
jae
xchg
cmp
shll
std
mov
pusha
or
fisubl
std
std
mov
repnz
fdiv
add
pop
in
popa
mov
inc
mov
mov
mov
or
or
out
mov
inc
push
cmpsb
arpl
es
repnz
add
or
add
mov
xchg
movsb
pop
mov
add
sub
call
push
adc
addr16
cmpsb
popa
xor
and
push
cmp
ret
in
dec
inc
cmpsb
outsb
sti
imul
std
cmp
lock
cmpsb
data16
pop
xor
mov
jne
pop
push
stc
lret
hlt
sub
mov
pop
shll
sbb
icebp
in
pusha
mov
cmp
ss
addr16
jle
xchg
push
pop
dec
pop
sbb
pop
xor
mov
and
pop
dec
popa
dec
add
pop
rcll
ret
xor
or
sub
xchg
pop
icebp
pop
push
mov
mov
lret
fs
add
and
pop
std
mov
jg
pusha
xor
mov
push
mov
inc
stos
fistps
fwait
jl
pop
sbb
and
mov
sti
push
mov
sub
aas
fidivl
mov
lcall
mov
call
shrl
mov
xor
add
xor
or
pop
xor
inc
popf
inc
mov
add
imull
shr
icebp
cmp
inc
mov
pop
xor
int
xor
xor
pop
mov
push
mov
or
sub
shrl
and
and
popf
fwait
or
sub
out
fidivl
sub
xchg
and
jge
push
test
std
push
out
movd
adc
add
mov
xor
add
dec
addb
shr
rorl
mov
adc
xchg
addr16
pop
xor
inc
bound
hlt
mov
xor
inc
popa
mov
icebp
std
cmp
rorl
jle
pusha
xor
mov
rorl
xchg
mov
pop
addl
test
adc
inc
fld1
xchg
mov
xor
mov
or
pop
xor
xor
push
inc
jl
jg
fidivs
xor
jmp
repnz
decl
push
and
std
or
inc
or
lahf
pop
xor
pusha
push
jmp
cmpsb
data16
loopne
jb
decb
dec
or
mov
mov
pop
lea
movsb
add
xchg
and
std
mov
stos
xchg
pop
xor
es
ret
sub
leave
call
aaa
mov
roll
cmpsl
and
out
std
mov
add
inc
mov
cmpsl
cmp
mov
cmpsb
insb
mov
inc
mov
lret
movsb
or
pop
les
cli
add
mov
jg
and
mov
cmpsb
lcall
scas
popa
mov
mov
xor
and
decb
sub
fxam
xor
adcl
xor
movsb
inc
inc
std
mov
dec
loope
out
decb
es
das
gs
sbb
lds
sahf
rcrl
pushf
aaa
mov
call
pusha
xor
mov
decl
lahf
push
xchg
jecxz
mov
push
xchg
xchg
aam
pop
xor
or
mov
fld1
fucomi
rorl
mov
and
xor
and
std
mov
repnz
sbb
out
popa
xor
test
mov
addr16
popf
mov
call
pop
xor
inc
xchg
jg
pusha
xor
mov
movsl
ss
std
add
dec
ja
pop
xor
pop
pop
bnd
jle
or
mov
dec
pop
xor
mov
lcall
lods
fld1
push
jmp
dec
mov
fldlg2
movsb
out
jle
cmp
icebp
int3
pop
mov
and
std
mov
pop
loope
aas
dec
mov
xor
xor
cmp
std
mov
in
rorl
loopne
bound
leave
jle
xor
das
roll
mov
enter
push
sbb
mov
std
or
inc
or
pop
pop
xor
int3
xor
es
xorb
sti
pop
dec
es
mov
std
cmpsb
shll
std
mov
pminub
lret
std
mov
out
roll
mov
loope
hlt
mov
cli
xchg
pop
xor
inc
fwait
jl
inc
add
pushf
dec
std
mov
out
jp
mov
inc
faddl
sub
or
leave
sti
stc
pop
or
cwtl
or
or
mov
fidivl
add
dec
es
cmpsl
xor
scas
jmp
xor
add
dec
jle
pusha
xor
mov
add
test
push
add
sti
pusha
dec
lock
out
lds
cmp
lds
cmp
lds
cmp
mov
rcll
pop
lcall
jl
decb
in
rcrl
std
mov
in
pop
xor
inc
cli
jmp
out
popa
xor
or
xor
push
and
jns
push
imul
or
add
jg
add
dec
inc
cmc
fwait
jl
push
mov
std
mov
mov
add
xor
or
pop
xor
call
jbe
aas
dec
xorl
mov
inc
loope
xorl
dec
sbb
std
or
sub
lods
pop
bound
popa
mov
and
add
inc
cwtl
inc
mov
push
mov
xor
xor
inc
fistps
mov
or
rorl
enter
adc
mov
fldz
int3
outsl
and
jmp
stc
call
push
clc
shr
or
cmp
flds
cmpsl
pop
xor
lds
pop
cmp
jae
fs
scas
pop
in
or
fsubs
dec
jle
mov
arpl
jbe
repz
push
test
inc
cmp
inc
sub
mov
fistpl
push
push
add
jb
and
push
cs
jmp
and
or
js
jns
xor
pop
xor
mov
mov
pop
pushf
xchg
xor
sub
outsl
jle
mov
test
jle
pop
cmp
pop
out
sbb
lds
aas
mov
mov
mov
mov
in
xor
cli
mov
push
push
test
sbb
test
mov
mov
push
xchg
ljmp
fwait
jns
test
inc
cmp
xor
fldenv
call
popa
sbb
cmpb
xor
movsl
and
shrl
cmp
lock
xchg
mov
cmp
gs
sub
cmp
mov
aad
push
push
adc
push
jle
push
push
test
sbb
into
stos
push
test
pop
cmp
push
lcall
mov
test
in
stos
stos
mov
pop
add
movsl
jecxz
ret
lock
sbb
jle
scas
push
push
jle
xchg
mov
loope
inc
shrl
repz
mov
filds
add
addb
push
aam
sbb
jecxz
and
stc
inc
cmp
jge
js
mov
pop
inc
cltd
pop
roll
xchg
shll
mov
fs
push
or
mov
dec
sbb
call
push
mov
mov
push
push
test
insl
cmp
lcall
call
mov
or
jnp
inc
push
push
addl
aas
jbe
cmp
dec
jge
sbb
push
mov
pop
mov
jnp
pusha
xor
add
xchg
mov
loope
ljmp
xor
mov
push
or
pop
sub
jmp
fistps
sub
nop
push
test
xchg
aaa
stos
fwait
jmp
test
scas
push
mov
add
pop
push
test
dec
cmp
gs
fnstsw
dec
jnp
jae
push
jns
push
push
test
or
outsb
cmp
lock
xlat
iret
pop
jecxz
inc
adc
ja
inc
scas
mov
cmp
cmp
mov
pop
cmp
add
pop
push
test
push
fistl
lea
jg
gs
fdivp
add
mov
hlt
addr16
lock
orl
push
icebp
inc
jge
clc
push
jo
call
mov
psubsb
rorl
jle
test
sub
xchg
pop
aam
adc
arpl
push
dec
dec
push
mov
pop
inc
cmp
sarl
xor
inc
mov
push
test
adc
mov
xor
xchg
mov
pop
push
test
push
mov
inc
daa
call
arpl
xchg
aaa
ror
movsl
dec
mov
push
lock
ljmp
fstps
inc
jp
frstor
mov
dec
imul
or
inc
cmp
mov
in
dec
jp
xchg
or
mov
clc
push
mov
sbb
push
loopne
xor
das
call
xor
push
test
ret
mov
cmp
add
pop
rorl
push
push
test
mov
stos
pushf
int
test
pushf
mov
pop
flds
push
enter
cmp
insl
mov
sub
mov
aad
mov
nop
push
dec
adc
roll
jnp
cmp
or
fistps
add
fsubrl
call
mov
lea
stos
test
push
add
roll
sub
inc
iret
push
pop
call
lea
notl
in
fsubrs
popa
cli
mov
push
xchg
push
push
repz
call
mov
xchg
mov
pop
fsts
sub
ror
sub
cmp
rcrb
add
cmp
add
cmpsb
jl
hlt
add
mov
push
adc
jnp
jmp
pop
fistl
ret
push
push
test
inc
mov
mov
push
push
fwait
jmp
psubsb
mov
inc
mov
sub
inc
popf
pop
roll
inc
add
test
js
jp
jg
sbbl
pop
call
sbb
test
ds
inc
mov
push
test
es
test
mov
lock
cmp
int
push
fucomp
push
mov
mov
insb
xor
outsb
cmp
fwait
or
push
call
lea
push
call
push
cmc
jle
out
push
push
adc
jno
fisubs
xchg
mov
push
test
and
xchg
add
add
xor
movsb
xor
shlb
outsl
aad
sbb
pop
fsubs
push
mov
xor
jge
inc
mov
push
test
sti
and
repnz
mov
inc
lret
xor
addl
cmp
repnz
push
test
fcoml
xor
pop
aam
stc
fisubrs
mov
pop
cmp
add
pop
add
enter
cmp
data16
jg
mov
fdivl
push
ljmp
stos
cli
fstpl
lods
shrb
dec
and
cmp
mov
ror
or
sub
push
sbb
mov
rcrl
cmpsl
lahf
dec
pop
push
cmp
mov
cmp
repz
stos
cmp
test
pop
xchg
mov
inc
pop
out
inc
fwait
pop
xchg
stos
mov
sahf
xor
aam
mov
daa
cmpsl
lea
inc
cmpsb
rcll
jae
cmp
lock
rclb
jmp
mov
jmp
lds
call
mov
xor
push
push
test
adc
int
push
test
and
call
test
push
fildl
push
adc
test
add
test
mov
jle
icebp
push
push
or
aad
mov
inc
adc
jecxz
inc
xchg
pop
shll
cmp
jnp
fimuls
xchg
pop
out
nop
xchg
push
out
push
add
add
movsl
cmp
mov
ret
cmp
mov
repnz
add
cmp
jnp
push
fstps
or
push
test
push
push
test
and
fldl
push
push
rcrb
sti
cmpsl
mov
push
or
push
push
ficoml
stos
or
xor
mov
add
pop
jnp
adcb
ljmp
add
ficompl
jne
add
ljmp
out
pop
rolb
pusha
ret
add
insb
pop
push
push
mov
xor
dec
and
mov
inc
imul
adc
adc
xor
pop
ljmp
add
rorb
mov
add
pop
sub
xor
push
mov
mov
pop
ljmp
jmp
xor
ljmp
and
pop
nop
add
mov
jo
add
imul
sbb
sub
test
add
ss
pop
xor
ljmp
jmp
add
adc
ljmp
cmp
adc
test
add
testb
pop
pop
ljmp
add
sbb
xor
or
mov
ljmp
and
add
add
add
push
cmp
add
ljmp
test
clc
inc
add
test
add
mov
ret
or
or
cmp
cmp
add
scas
push
mov
ljmp
pop
mov
add
add
add
xor
pop
ljmp
and
xor
dec
xor
pop
adc
hlt
mov
adc
add
mov
add
filds
xor
add
ljmp
pop
push
mov
add
mov
add
add
xor
and
in
add
or
add
add
push
mov
ljmp
and
pop
insl
dec
or
and
add
pop
add
pop
ljmp
clc
rorl
popa
and
dec
inc
inc
xor
dec
pop
mov
aam
in
rolb
add
jmp
push
or
jmp
ret
lods
push
or
sub
add
add
add
pop
pop
rolb
pusha
xor
and
adc
mov
add
ljmp
and
push
add
pop
ljmp
mov
jl
cld
pusha
add
mov
insb
mov
add
sti
add
lods
imul
imul
test
add
add
jge
add
add
add
cs
jecxz
add
scas
sub
add
add
sub
add
push
mov
dec
dec
inc
or
and
jbe
testb
shlb
jmp
add
sub
dec
ljmp
add
add
pop
and
push
stos
push
push
mov
sub
pop
add
add
pop
push
mov
add
pop
sub
mov
pushl
mov
add
popl
mov
add
jmp
add
push
mov
add
jmp
pop
pop
push
mov
add
mov
add
add
pop
push
mov
jmp
add
jmp
sub
pop
shr
inc
xor
xor
pop
sub
pop
add
add
sub
push
mov
shl
or
or
dec
neg
sub
add
jmp
sub
mov
push
mov
push
mov
jmp
pushl
pop
jmp
sub
xchg
pop
mov
mov
push
addl
pop
jmp
pushl
mov
jmp
mov
inc
mov
pop
neg
push
mov
xor
add
pop
jmp
mov
sub
add
push
mov
add
sub
xchg
pop
mov
mov
not
push
sub
pop
push
push
mov
sub
neg
add
jmp
pop
add
pop
xchg
pop
push
mov
add
pushl
pop
add
sub
mov
push
pop
add
mov
add
push
mov
pushl
jmp
push
mov
jmp
add
sub
xchg
jmp
add
xor
xor
xor
mov
div
pushw
mov
jmp
add
push
push
mov
add
push
mov
shl
xchg
not
xchg
sub
or
xor
add
pop
add
sub
mov
pushl
mov
jmp
shl
sub
mov
push
mov
push
mov
push
jmp
push
mov
mov
push
mov
sub
sub
pop
jmp
add
mov
add
push
mov
not
shl
and
add
sub
sub
add
add
add
pop
push
pushl
mov
add
popl
mov
jmp
add
push
mov
mov
mov
add
pushl
pop
push
mov
mov
add
add
xchg
pop
push
mov
and
pop
dec
xor
jmp
add
sub
jmp
xor
xor
mov
mov
sub
jmp
xchg
pop
popl
jmp
mov
sub
mov
sub
mov
addl
jmp
mov
push
jmp
push
pop
and
neg
dec
xchg
jmp
lods
xor
push
mov
jmp
not
add
sub
add
add
pop
push
push
jmp
xor
push
mov
inc
jmp
xor
xor
pop
mov
jmp
add
push
mov
jmp
mov
or
dec
jmp
push
pop
push
mov
add
mov
jmp
push
mov
mov
jmp
pop
push
jmp
sub
mov
jmp
mov
mov
push
mov
and
sub
not
shr
push
push
pop
push
mov
and
sub
inc
sub
sub
xor
pop
dec
jmp
push
mov
dec
xor
sub
add
jmp
add
xchg
jmp
inc
shl
add
sub
sub
add
pop
sub
pop
sub
mov
jmp
pop
sub
mov
jmp
lods
push
mov
jmp
xor
mov
xor
jmp
mov
xor
pop
mov
pop
addl
addl
subl
jmp
add
pop
mov
add
push
push
push
pop
jmp
xor
xor
xor
jmp
add
sub
pushl
pushl
jmp
mov
addl
pop
add
jmp
and
pop
or
je
push
mov
jmp
mov
pop
add
shl
push
mov
add
push
notl
pop
xor
xor
pop
xor
sub
mov
mov
add
pop
add
pop
jmp
add
sub
mov
jmp
shr
xor
xor
pop
and
mov
push
mov
add
add
jmp
add
push
jmp
or
or
not
shr
xor
add
pop
xchg
mov
push
mov
jmp
add
sub
xchg
pop
mov
push
jmp
pushl
popf
pop
adc
pushf
jmp
pushl
pop
popl
pop
mov
push
pop
push
jmp
push
mov
mov
push
mov
add
pop
dec
dec
shl
neg
xor
mov
pop
add
add
sub
mov
add
push
mov
jmp
pop
jmp
pop
xor
xor
xor
sub
pop
add
pop
jmp
mov
add
jmp
push
mov
add
push
mov
sub
pop
push
jmp
add
pop
push
mov
not
shr
push
mov
jmp
mov
push
pop
add
sub
xchg
jmp
and
pop
and
dec
jmp
push
jmp
push
mov
mov
add
pop
xor
jmp
push
mov
jmp
sub
or
xor
add
pop
add
sub
add
pushl
pop
add
xor
xor
xor
mov
bt
pushf
jmp
shr
xor
add
jmp
xchg
pop
jmp
pop
add
pop
add
jmp
mov
sub
pop
mov
add
xor
xor
xor
mov
btr
pushf
jmp
sub
mov
mov
or
jmp
sub
mov
push
mov
add
sub
jmp
add
xchg
pop
sub
jmp
subl
sub
push
jmp
mov
mov
pop
add
sub
sub
mov
add
xor
xor
xor
pop
mov
mov
push
mov
mov
add
pop
add
xchg
jmp
pop
push
mov
jmp
push
pop
addl
sub
push
sub
jmp
add
add
jmp
pop
sub
pushl
pushl
jmp
jmp
add
shr
sub
jmp
sub
mov
add
xchg
jmp
push
mov
jmp
neg
shl
push
mov
jmp
pop
or
pop
jmp
push
mov
push
pop
pop
shl
add
shr
jmp
add
pop
push
mov
shl
not
sub
xor
add
mov
add
sub
sub
add
sub
mov
add
xchg
mov
mov
push
pushf
jmp
not
xchg
xchg
xor
jmp
pop
xor
xor
jmp
or
shr
inc
jmp
add
pop
jmp
xor
mov
pop
jmp
mov
xor
pop
pushl
pop
push
push
mov
addl
mov
add
add
add
push
pushl
pop
popl
mov
push
mov
xor
jmp
mov
addl
pop
jmp
add
xchg
pop
push
mov
jmp
mov
add
pop
pushl
pop
push
push
pushl
jmp
mov
or
mov
add
push
mov
xor
pop
jmp
pop
add
mov
mov
add
sub
pop
sub
mov
add
jmp
mov
mov
sub
jmp
pop
add
mov
sub
jmp
pop
neg
xor
sub
pushl
pop
add
push
push
jmp
pop
popl
jmp
add
popl
mov
rorl
pushf
jmp
neg
sub
or
jmp
push
mov
add
sub
xchg
pop
jmp
mov
pop
shl
sub
shr
push
mov
addb
jmp
xor
xor
xor
push
mov
push
jmp
pop
mov
add
jmp
mov
add
push
push
mov
mov
jmp
mov
add
mov
pop
jmp
sub
mov
mov
mov
pop
not
jmp
sub
sub
sub
xor
pop
neg
push
mov
shl
sub
xor
pop
add
pop
push
mov
xor
inc
add
shr
push
jmp
pop
or
jmp
pushl
pop
add
popl
pop
push
mov
jmp
add
add
xor
xor
xor
pop
add
sub
xor
and
pushl
pop
push
mov
push
pop
add
add
xchg
pop
or
je
push
mov
jmp
shl
add
jmp
xor
pop
push
push
jmp
pop
add
push
jmp
xor
jmp
push
push
jmp
xchg
pushl
pop
add
jmp
push
pushl
pop
add
push
mov
not
xchg
jmp
xchg
pop
mov
mov
shl
dec
not
xor
jmp
pushl
mov
add
push
mov
add
push
mov
jmp
pushl
pop
add
push
push
mov
shr
or
jmp
sub
pop
mov
jmp
add
sub
pop
sub
and
mov
add
or
jne
push
mov
jmp
sub
add
push
push
pop
sub
xor
push
jmp
mov
add
add
jmp
pop
push
push
push
pop
and
jmp
xor
add
pop
jmp
xor
xor
jmp
push
mov
mov
add
pop
sub
add
add
jmp
add
pop
xchg
mov
push
mov
jmp
mov
pop
mov
jmp
push
mov
add
pop
xchg
mov
shrl
pushf
jmp
mov
mov
add
jmp
dec
shr
dec
xor
jmp
sub
pop
mov
jmp
xor
xor
pop
popl
mov
test
pushf
jmp
mov
dec
not
push
mov
mov
jmp
pop
inc
xor
sub
jmp
addl
pop
push
mov
add
mov
add
add
xor
xor
xor
mov
jmp
push
mov
add
add
xchg
pop
pop
pushl
mov
jmp
add
sub
sub
add
push
push
mov
mov
pop
sub
add
add
sub
sub
pop
mov
add
add
sub
mov
mov
jmp
pop
mov
addl
pop
push
push
mov
mov
jmp
mov
sub
mov
jmp
sub
add
pop
jmp
xor
xor
jmp
push
push
jmp
pop
push
mov
jmp
add
mov
jmp
pop
sub
add
push
mov
add
sub
sub
pop
sub
sub
add
push
push
push
pop
xor
sub
xor
mov
pop
jmp
sub
mov
pop
jmp
dec
shl
jmp
add
pop
jmp
lods
push
mov
jmp
mov
add
shr
add
sub
mov
add
add
add
push
jmp
xchg
pop
pop
push
jmp
push
push
mov
mov
pop
sub
jmp
neg
xor
add
pop
and
push
mov
add
and
pop
jmp
xor
xor
xor
pop
push
push
pop
push
mov
or
shl
and
add
add
pop
push
mov
shl
push
mov
or
jmp
shl
shr
push
mov
jmp
push
mov
add
add
push
pushl
pop
popl
mov
push
mov
jmp
sub
mov
mov
xor
jmp
mov
inc
sub
mov
pop
add
pop
sub
sub
pop
jmp
addl
pop
push
mov
jmp
mov
jmp
sub
mov
mov
not
sub
mov
mov
sub
sub
add
add
pop
add
pop
add
xchg
pop
mov
push
mov
add
jmp
or
sub
mov
pop
push
pushl
mov
add
jmp
pop
add
sub
pushl
jmp
push
mov
jmp
pop
mov
pop
or
jmp
mov
push
mov
add
pop
add
jmp
mov
jmp
pop
sub
mov
push
mov
mov
pop
not
mov
pop
push
mov
push
mov
xor
sub
mov
mov
mov
pop
pop
jmp
push
mov
not
neg
jmp
pop
xor
pushl
pop
push
mov
sub
mov
jmp
xor
add
pop
sub
push
mov
or
add
shr
add
sub
pop
pop
push
mov
mov
push
mov
add
sub
sub
jmp
mov
add
push
jmp
push
push
mov
mov
xor
pop
jmp
push
sub
jmp
addl
pop
sub
jmp
add
xchg
jmp
mov
jmp
xchg
pop
mov
notb
jmp
and
pop
neg
add
dec
xor
shr
xor
xchg
not
xchg
xor
xor
pushl
pop
add
xor
push
pop
pop
push
jmp
shl
or
add
push
mov
shr
dec
push
jmp
push
jmp
xor
xor
mov
push
push
pop
push
mov
not
add
add
sub
add
add
sub
pop
add
push
pushl
pop
popl
jmp
push
mov
push
mov
jmp
movzbl
mov
push
jmp
push
addl
popl
subl
jmp
add
jmp
sub
mov
add
jmp
mov
xor
xor
jmp
pop
sub
jmp
not
push
sub
mov
pop
pop
push
sub
jmp
pop
jmp
neg
add
sub
pop
add
add
pop
sub
mov
push
push
pop
and
sub
shl
add
mov
pop
push
mov
mov
jmp
xor
jmp
add
and
mov
push
mov
push
mov
add
jmp
push
mov
add
jmp
mov
push
push
mov
push
push
jmp
xor
xor
jmp
mov
mov
dec
push
push
mov
add
or
jmp
push
mov
add
pop
push
mov
shl
or
jmp
add
mov
add
jmp
add
jmp
inc
push
mov
add
xor
sub
add
or
xor
add
pop
shr
or
xor
add
mov
add
sub
add
add
sub
jmp
pop
sub
add
jmp
addl
pop
push
jmp
pop
jmp
xor
xor
pop
cmp
pushf
jmp
xor
pop
add
jmp
neg
xor
mov
pop
xor
pop
add
pop
push
mov
push
push
pop
sub
mov
pop
add
sub
sub
add
sub
jmp
add
mov
jmp
xchg
not
xor
jmp
mov
sub
mov
push
mov
push
jmp
sub
sub
push
mov
add
mov
add
pop
xor
xor
jmp
pop
add
shr
jmp
push
mov
push
push
pushl
pop
jmp
and
add
xor
pop
push
mov
shl
add
jmp
mov
push
mov
sub
mov
mov
jmp
push
mov
add
sub
mov
xchg
jmp
mov
add
add
xchg
pop
decl
pushf
jmp
push
mov
push
mov
add
add
jmp
pop
mov
mov
push
mov
mov
add
sub
jmp
push
pushl
pop
jmp
push
push
jmp
pop
push
mov
add
add
xor
jmp
push
mov
xor
mov
add
sub
mov
push
jmp
add
mov
add
jmp
not
add
add
pop
pop
movzbl
jmp
popa
ret
mov
sub
jmp
push
mov
add
pop
jmp
mov
add
add
xchg
pop
push
mov
add
jmp
push
mov
mov
sub
jmp
xor
and
pop
jmp
add
jmp
add
pop
add
xchg
mov
sub
mov
sub
mov
addl
mov
add
add
push
mov
add
mov
add
xor
xor
xor
jmp
add
push
jmp
and
pop
xor
push
mov
mov
pop
pop
pushw
mov
push
mov
add
add
xchg
pop
xor
mov
push
mov
add
jmp
push
mov
add
jmp
lods
sub
mov
jmp
push
mov
push
mov
addl
pop
push
mov
add
mov
add
add
xchg
pop
mov
add
push
mov
jmp
push
mov
jmp
sub
xchg
pop
mov
mov
add
push
mov
jmp
mov
mov
add
add
pushl
pop
add
movzbl
popl
jmp
mov
add
jmp
push
mov
add
push
mov
sub
jmp
xchg
add
sub
sub
jmp
mov
and
pop
pushw
sub
mov
add
push
jmp
mov
not
jmp
push
mov
pushl
pop
popl
mov
xor
movzbl
lea
push
mov
jmp
push
mov
push
mov
xchg
xchg
jmp
lods
sub
add
jmp
mov
neg
push
jmp
push
mov
addl
jmp
not
add
jmp
add
push
push
push
jmp
mov
sub
and
jmp
negw
pushf
jmp
xor
add
pop
jmp
mov
add
push
push
mov
dec
or
sub
add
sub
mov
mov
sub
sub
add
pop
push
addl
pop
sub
pop
jmp
push
mov
sub
pop
jmp
add
xchg
pop
and
pop
or
shl
pushl
push
jmp
pop
mov
add
sub
jmp
add
push
mov
inc
push
mov
inc
add
add
add
sub
pop
dec
sub
xor
add
pop
push
mov
add
pop
jmp
add
add
jmp
add
pop
jmp
xor
pop
jmp
shl
sub
mov
jmp
add
sub
push
mov
shr
add
xor
pop
jmp
not
xchg
pushl
pop
add
sub
and
push
jmp
shr
xor
jmp
pushl
popf
pop
rcrl
pushf
jmp
mov
push
pop
neg
shr
sub
xor
push
jmp
add
sub
push
mov
add
pop
mov
add
push
pushl
pop
popl
mov
push
popl
push
mov
add
pop
pop
sub
sub
jmp
add
and
mov
jmp
add
push
push
pop
jmp
add
xor
pop
add
sub
sub
pop
pushw
jmp
push
mov
jmp
mov
or
xor
add
dec
sub
add
pop
add
xchg
pop
dec
sub
sub
pop
push
mov
add
sub
xor
xor
jmp
push
push
popl
jmp
add
sub
sub
mov
pushl
pop
popl
pop
jmp
pop
xchg
jmp
dec
xor
and
pop
add
add
sub
push
mov
sub
add
sub
sub
pop
mov
push
mov
push
mov
add
pop
jmp
sub
sub
pop
xchg
mov
shr
xor
push
mov
jmp
push
mov
add
add
jmp
and
jmp
mov
push
pop
push
mov
add
jmp
pushl
mov
jmp
pop
mov
pop
pop
push
mov
jmp
push
pushl
pop
popl
pop
mov
jmp
push
mov
push
mov
add
push
jmp
sub
sub
pop
jmp
sub
add
jmp
pop
xor
mov
pop
push
mov
sub
add
pop
sub
sub
mov
add
and
push
mov
add
or
add
add
pop
jmp
addl
pop
pop
add
pop
shl
shl
push
jmp
sub
add
jmp
push
mov
jmp
shr
xor
mov
pop
jmp
pop
sub
xor
xor
jmp
add
push
mov
add
jmp
pop
pop
sub
sub
mov
add
sub
pop
push
mov
jmp
push
mov
add
add
xchg
mov
add
push
jmp
push
mov
mov
sub
add
pop
add
xchg
jmp
mov
add
push
jmp
add
add
push
mov
sub
pop
mov
add
push
mov
add
pop
push
mov
pushl
mov
add
popl
pop
div
push
push
jmp
sub
sub
add
jmp
mov
add
push
mov
not
and
sub
push
jmp
jmp
sub
xor
xor
xor
pop
mov
mov
sub
jmp
mov
pop
push
sub
mov
mov
mov
pushl
jmp
mov
push
jmp
or
pop
shl
not
neg
add
add
pop
add
sub
push
mov
add
pop
pop
sub
xchg
pop
mov
mov
push
jmp
push
mov
mov
jmp
mov
pop
mov
add
jmp
pop
push
mov
add
pop
add
xchg
mov
sub
add
add
push
mov
xor
add
mov
push
mov
add
add
xchg
jmp
dec
sub
dec
xor
mov
mov
add
push
jmp
mov
push
mov
jmp
push
mov
addl
mov
add
push
jmp
popl
mov
jmp
mov
mov
push
mov
push
push
jmp
sub
jmp
xor
xor
jmp
sub
add
mov
jmp
mov
mov
add
push
mov
add
pop
xchg
jmp
add
jmp
mov
sub
sub
mov
addl
popl
jmp
mov
sub
sub
mov
jmp
mov
push
jmp
add
xor
pushl
pop
add
sub
jmp
push
pop
push
jmp
pop
push
mov
add
sub
xchg
pop
mov
mov
xor
jmp
add
mov
pop
push
mov
or
push
mov
jmp
add
add
sub
pop
sub
add
sub
sub
add
sub
mov
add
sub
sub
add
add
push
mov
add
pop
push
jmp
xor
jmp
sub
add
jmp
pop
xor
push
jmp
push
push
jmp
xor
sub
or
sub
xor
push
mov
mov
pop
add
mov
add
sub
add
add
pop
push
sub
mov
mov
mov
jmp
add
add
sub
pop
xor
pop
sub
sub
add
add
jmp
add
push
mov
push
jmp
pop
xchg
jmp
add
sub
xchg
pop
mov
mov
mov
pushl
jmp
push
mov
and
and
xor
xor
not
sub
sub
add
jmp
add
add
sub
jmp
push
pushl
pop
popl
pop
push
pushl
jmp
pop
push
mov
sub
mov
add
sub
sub
add
add
jmp
mov
push
jmp
popl
mov
mov
jmp
pop
add
jmp
sub
sub
xor
pop
jmp
add
add
jmp
push
mov
jmp
inc
xor
push
notl
pushl
pop
add
not
jmp
popl
push
mov
shl
shl
sub
neg
xor
sub
pop
jmp
sub
push
mov
jmp
mov
sub
pop
inc
sub
xor
inc
sub
jmp
pushl
popf
pop
adc
pushf
jmp
mov
push
mov
add
sub
mov
jmp
mov
mov
add
push
push
mov
mov
pop
mov
pop
pop
mov
add
push
mov
mov
pop
mov
add
jmp
sub
jmp
push
mov
xor
add
jmp
push
mov
sub
pushl
pop
add
add
add
pushl
pop
push
mov
add
add
push
pushl
pop
popl
pop
add
push
jmp
mov
add
pop
not
xor
mov
pop
sub
jmp
add
mov
add
jmp
push
mov
neg
jmp
shr
dec
and
jmp
mov
push
push
jmp
mov
push
mov
or
pop
shr
not
push
mov
add
pop
xor
mov
pop
sub
add
push
push
mov
shr
inc
jmp
add
add
pop
xchg
pop
sub
pushf
jmp
sub
pop
pop
add
xor
mov
pop
add
add
sub
jmp
mov
mov
sub
pushl
pop
push
jmp
sub
add
add
sub
mov
add
pop
push
push
jmp
mov
shr
xor
xor
mov
pop
add
add
mov
push
mov
push
mov
xor
shr
inc
sub
sub
add
pop
add
jmp
sub
push
mov
add
pop
subl
sub
addl
jmp
add
mov
jmp
xchg
jmp
add
push
pushl
mov
jmp
shr
sub
jmp
mov
mov
and
jmp
push
mov
add
sub
mov
push
mov
mov
jmp
mov
add
jmp
and
pop
jmp
mov
subl
add
addl
jmp
push
mov
and
sub
add
mov
pop
shl
or
sub
push
mov
add
neg
shl
shl
xor
or
pop
inc
sub
jmp
pop
add
xor
xor
xor
pop
pushl
pop
jmp
pop
push
mov
mov
add
pop
xchg
mov
push
mov
jmp
add
push
mov
push
push
pop
dec
inc
jmp
mov
add
mov
jmp
push
mov
mov
add
mov
pop
xor
mov
jmp
xchg
pop
mov
mov
not
add
push
push
mov
mov
jmp
add
add
xor
jmp
mov
push
notl
pop
push
mov
mov
sub
mov
add
shr
and
xor
add
mov
pop
add
mov
add
sub
mov
jmp
push
mov
add
mov
jmp
pop
add
xor
xor
xor
mov
shll
jmp
mov
push
push
jmp
add
push
mov
push
mov
push
jmp
push
push
mov
add
jmp
mov
add
jmp
mov
add
sub
mov
jmp
pushl
pushl
pushl
pop
add
add
push
mov
push
push
pop
add
pop
add
xchg
mov
xor
push
push
jmp
mov
xor
neg
dec
push
mov
jmp
xor
mov
add
and
pop
or
je
pushl
xorl
jmp
push
mov
push
mov
shr
and
jmp
push
mov
and
sub
not
dec
inc
add
mov
pop
jmp
add
sub
xchg
pop
mov
push
jmp
pop
std
push
mov
jmp
pop
xchg
pushl
mov
jmp
sub
mov
mov
add
add
xchg
pop
shr
push
mov
jmp
or
pop
not
push
mov
add
mov
add
or
pop
shl
push
mov
sub
sub
add
push
mov
mov
pop
pop
jmp
mov
jmp
pushl
pop
add
push
mov
add
jmp
xor
mov
pushl
pop
add
push
mov
mov
sub
pop
add
addl
pop
mov
sub
mov
mov
add
add
xchg
pop
jmp
add
mov
jmp
and
not
neg
xor
jmp
lods
push
mov
jmp
xor
pop
push
mov
jmp
push
pop
not
add
dec
neg
add
add
jmp
dec
or
jmp
xor
push
mov
xor
and
shl
add
sub
pop
mov
jmp
mov
subl
add
addl
mov
add
pop
push
mov
mov
xor
shl
add
sub
push
mov
mov
sub
pop
add
mov
jmp
mov
shl
dec
and
jmp
sub
and
xor
xor
sub
pop
pop
sub
add
pop
jmp
pop
or
xor
jmp
xor
add
pushl
pop
add
sub
mov
mov
jmp
sub
addl
jmp
mov
push
xorl
mov
push
mov
jmp
pop
add
jmp
mov
push
push
mov
jmp
push
mov
mov
pop
mov
add
add
mov
jmp
mov
sub
pop
jmp
add
pop
jmp
add
add
push
mov
xor
pop
add
add
jmp
mov
add
push
mov
mov
xor
pop
push
jmp
push
mov
mov
add
pop
push
mov
add
mov
add
or
pop
push
mov
sub
pop
push
push
mov
mov
xor
jmp
mov
mov
push
mov
add
pop
jmp
and
xor
mov
jmp
xor
mov
mov
push
mov
sub
xor
add
jmp
mov
pop
mov
xor
pop
add
inc
add
sub
pop
jmp
mov
pop
and
or
jmp
push
push
mov
xchg
not
push
jmp
shr
xor
jmp
or
pop
shl
not
sub
sub
add
add
pop
sub
jmp
mov
sub
jmp
add
pop
pop
jmp
pop
sub
pop
jmp
add
add
pop
sub
jmp
add
jmp
xor
add
mov
add
push
mov
xor
or
jmp
pushl
mov
add
push
push
push
jmp
add
pop
sub
xchg
pop
mov
addl
pushl
jmp
add
sub
pop
add
mov
push
mov
add
push
mov
jmp
add
push
mov
shr
dec
inc
xor
sub
pop
sub
jmp
xor
sub
mov
jmp
mov
jmp
mov
addl
pop
add
push
push
jmp
pop
sub
add
jmp
add
add
add
xchg
mov
sub
mov
mov
add
pop
xor
xor
xor
mov
roll
pushf
jmp
mov
jmp
mov
add
add
jmp
sub
pop
jmp
sub
mov
addl
pushl
pop
add
push
mov
jmp
add
push
jmp
xor
xor
xor
jmp
mov
jmp
dec
sub
shl
xchg
neg
xchg
shr
add
jmp
pop
sub
mov
mov
push
push
mov
mov
pop
sub
pop
add
push
mov
dec
push
mov
xor
pop
add
pop
jmp
sub
pop
add
sub
sub
mov
add
sub
sub
push
jmp
add
mov
add
xchg
pop
push
push
jmp
sub
add
xor
jmp
push
sub
push
mov
addl
popl
sub
mov
jmp
and
shl
push
mov
sub
add
jmp
sub
mov
mov
push
mov
sub
pop
push
jmp
add
sub
mov
push
mov
mov
pop
add
jmp
mov
push
push
mov
add
add
jmp
sub
sub
mov
pushl
mov
add
popl
pop
mov
jmp
mov
add
pop
add
sub
push
jmp
add
add
sub
mov
add
add
add
sub
jmp
push
pop
push
push
push
mov
jmp
xor
sub
sub
jmp
mov
mov
push
mov
xor
add
pop
add
sub
add
add
push
mov
neg
inc
inc
sub
sub
pop
push
mov
jmp
sub
mov
push
push
push
pop
push
mov
mov
sub
and
pop
shr
xor
mov
mov
add
sub
mov
mov
add
jmp
push
negl
pop
jmp
mov
sub
pop
push
jmp
sub
push
mov
add
add
push
jmp
mov
push
push
push
mov
mov
jmp
pop
jmp
pop
add
pop
push
jmp
mov
push
jmp
sub
add
pop
push
push
jmp
mov
sub
pop
jmp
xor
pop
jmp
push
pop
add
push
mov
push
jmp
push
mov
or
sub
jmp
pop
push
mov
xor
pop
sub
mov
jmp
mov
mov
jmp
pushl
mov
add
push
mov
push
mov
add
jmp
popl
mov
add
pushf
jmp
sub
pop
push
negl
pop
sub
push
mov
mov
add
add
push
mov
inc
neg
shl
xor
inc
xor
sub
pop
jmp
add
push
mov
or
shl
add
jmp
push
mov
not
add
jmp
xor
xor
push
mov
jmp
mov
and
push
mov
sub
pop
mov
pop
jmp
mov
push
pop
push
mov
dec
and
sub
xor
add
add
sub
pop
sub
mov
mov
shl
not
sub
add
pop
jmp
pop
mov
push
jmp
push
mov
jmp
lods
push
mov
jmp
add
pop
add
mov
add
add
add
push
sub
jmp
mov
push
mov
push
pop
and
push
mov
jmp
mov
add
pop
xchg
pop
xor
pop
push
mov
sub
add
add
pop
add
push
mov
sub
pop
mov
add
push
jmp
pop
sub
add
mov
push
mov
add
add
xor
xor
xor
pop
add
sub
add
add
sub
mov
add
push
mov
jmp
push
mov
xor
pop
shr
or
or
xor
push
mov
mov
add
pop
sub
push
mov
sub
pop
mov
add
mov
jmp
add
sub
jmp
dec
and
shl
inc
push
mov
sub
pop
xor
mov
add
add
pop
sub
xchg
pop
mov
push
mov
xchg
inc
jmp
shr
add
add
pop
push
mov
pushl
pop
popl
pop
mov
add
push
mov
push
mov
add
add
add
sub
pop
jmp
push
mov
push
push
pop
xor
add
sub
mov
mov
add
sub
add
add
pop
add
push
mov
xor
pop
sub
jmp
mov
push
push
mov
mov
pop
neg
shl
jmp
add
xchg
jmp
push
jmp
add
mov
pop
jmp
add
inc
add
xor
pop
push
mov
jmp
mov
add
jmp
subl
pushl
pushl
mov
add
add
jmp
subl
sub
jmp
push
pushl
pop
popl
jmp
push
mov
sub
pop
sub
pop
sub
push
mov
mov
jmp
push
jmp
sub
xchg
pop
jmp
pop
sub
pushl
pop
add
push
mov
jmp
add
pop
pushl
pop
add
push
push
mov
jmp
sub
sub
push
mov
jmp
mov
xchg
not
push
pushl
pop
popl
pushl
pop
add
push
mov
add
sub
xchg
pop
mov
pushl
pop
popl
jmp
mov
mov
push
pushl
jmp
push
mov
mov
push
push
pushl
jmp
add
sub
jmp
mov
sub
add
add
pop
push
mov
add
pop
xchg
pop
xor
pushl
pop
push
mov
mov
add
push
mov
add
jmp
push
mov
push
push
jmp
push
pushl
pop
popl
mov
mov
push
pushf
jmp
pop
jmp
pop
and
pop
add
push
push
push
push
pop
and
sub
mov
pop
mov
pop
or
sub
push
xchg
not
xchg
jmp
not
inc
inc
add
add
pop
add
sub
mov
mov
sub
pop
pop
push
pushl
pop
popl
mov
mov
push
jmp
sub
add
push
mov
add
pop
mov
add
add
pop
or
pushw
mov
mov
and
pop
sub
mov
push
mov
mov
jmp
mov
add
add
jmp
mov
and
neg
or
jmp
sub
jmp
pop
push
mov
shr
jmp
mov
add
add
push
mov
push
jmp
xor
mov
jmp
mov
push
pop
neg
dec
inc
xor
mov
pop
mov
jmp
mov
push
jmp
pop
shr
xor
add
pop
push
sub
mov
push
pop
xor
push
mov
mov
pop
pop
add
pop
add
sub
push
jmp
push
push
push
mov
neg
xor
jmp
add
sub
pop
push
jmp
pushl
pushl
mov
add
push
sub
jmp
push
mov
push
jmp
mov
xor
jmp
add
jmp
pop
sub
mov
mov
xor
inc
jmp
mov
mov
or
jmp
pop
add
push
mov
jmp
xor
xor
jmp
inc
xor
mov
pop
push
mov
mov
add
jmp
pop
xchg
not
xchg
jmp
pop
pop
add
add
add
sub
sub
pushl
pop
add
push
mov
add
pop
xor
xor
xor
mov
mov
push
jmp
add
sub
xchg
pop
mov
push
jmp
sub
mov
pushl
mov
push
mov
jmp
push
mov
add
pop
xor
pushl
mov
add
jmp
xor
or
inc
push
mov
add
add
sub
jmp
mov
mov
pop
add
sub
sub
pop
and
jmp
sub
mov
mov
push
mov
mov
jmp
mov
mov
jmp
sub
add
add
jmp
pushl
popf
pop
rcll
pushf
jmp
inc
dec
add
sub
jmp
dec
neg
sub
sub
pop
add
add
mov
add
add
jmp
xor
mov
mov
add
xor
not
or
push
mov
not
add
shr
neg
xor
neg
inc
push
mov
xor
pop
and
jmp
push
mov
or
neg
push
mov
sub
pop
add
pop
jmp
mov
xchg
jmp
mov
mov
pop
dec
shl
push
mov
and
shr
xor
xor
xor
and
pop
push
mov
push
mov
add
pop
add
jmp
add
sub
add
add
add
sub
pop
sub
sub
add
jmp
dec
inc
xor
xor
sub
pop
jmp
add
sub
sub
pop
add
mov
add
xchg
mov
push
mov
jmp
or
pop
not
add
push
push
pop
xor
jmp
push
mov
xchg
dec
xchg
and
jmp
mov
not
not
add
add
add
sub
sub
mov
pop
push
push
mov
mov
add
pop
and
neg
push
sub
pop
jmp
sub
mov
sub
mov
push
mov
jmp
mov
mov
mov
add
mov
mov
add
mov
jmp
or
pop
sub
and
push
push
push
mov
add
xor
not
not
add
sub
mov
subl
pop
push
mov
add
pop
jmp
push
mov
xor
pop
add
sub
add
add
sub
mov
add
add
sub
pushl
pop
add
add
xor
xor
xor
mov
jmp
mov
sub
add
add
pushl
pop
jmp
add
or
pop
neg
xor
add
pop
xor
xor
xor
pop
add
mov
add
push
push
mov
dec
or
shr
xor
jmp
mov
pushl
pop
popl
pop
movzbw
pushw
mov
jmp
push
pushf
jmp
pop
addl
sub
subl
jmp
pop
sub
pop
add
pop
pop
push
mov
mov
add
pop
push
mov
shr
xor
and
push
mov
sub
pop
sub
jmp
push
push
pop
or
jmp
pop
push
push
jmp
neg
and
inc
xor
mov
pop
add
mov
add
add
add
push
mov
sub
mov
add
push
mov
sub
sub
add
jmp
pop
sub
pushl
jmp
xchg
or
inc
jmp
addl
pushl
mov
add
add
push
jmp
mov
push
jmp
popl
mov
idiv
sub
mov
jmp
mov
mov
push
mov
shl
neg
jmp
mov
push
mov
notb
jmp
push
mov
mov
and
push
push
jmp
and
pushf
jmp
movzbl
push
mov
jmp
mov
push
mov
or
jmp
popw
jmp
mov
xor
jmp
mov
add
add
pop
jmp
add
sub
mov
mov
add
pop
pop
push
mov
mov
dec
shl
push
push
push
mov
or
add
or
and
or
jmp
pushl
pushl
pop
push
mov
mov
jmp
mov
add
push
push
mov
xor
jmp
mov
push
push
mov
shl
inc
jmp
xor
jmp
not
sub
mov
pop
shl
add
push
mov
jmp
xor
xor
pop
push
mov
sub
mov
addl
pop
push
mov
xor
add
pop
add
xor
xor
xor
mov
push
mov
jmp
push
mov
push
mov
add
add
sub
mov
add
add
sub
pop
add
xchg
mov
mov
add
push
mov
jmp
push
mov
jmp
push
push
mov
mov
mov
push
jmp
push
decl
mov
jmp
sub
mov
push
push
push
pop
and
sub
jmp
mov
push
jmp
mov
push
push
mov
mov
pop
jmp
pushl
pushl
jmp
mov
mov
neg
sub
shl
inc
push
decl
jmp
mov
push
mov
push
pop
and
jmp
mov
sub
jmp
add
popl
jmp
mov
xor
mov
pop
neg
dec
push
mov
jmp
popl
jmp
mov
add
sub
jmp
mov
shl
add
and
dec
xor
add
add
mov
add
jmp
push
mov
mov
pop
jmp
mov
add
not
jmp
add
add
jmp
add
pop
xchg
jmp
add
pushl
mov
jmp
subl
mov
add
jmp
add
push
push
mov
jmp
mov
push
notb
pop
sub
push
jmp
subl
sub
jmp
lods
xor
sub
mov
jmp
mov
sub
pop
xchg
jmp
mov
add
add
push
mov
push
jmp
mov
or
xor
jmp
xor
inc
xchg
push
subl
jmp
add
push
pushl
mov
add
popl
pop
sub
add
add
pushl
pushl
pop
push
mov
add
add
xor
xor
xor
pop
jmp
mov
sub
mov
sub
mov
mov
jmp
push
push
mov
push
push
mov
jmp
add
add
push
mov
jmp
push
mov
not
neg
push
push
pop
pop
jmp
mov
mov
xor
xor
pop
add
add
sub
pop
pop
jmp
pop
jmp
mov
push
mov
push
push
mov
mov
mov
jmp
shl
dec
neg
shl
add
sub
pop
xor
jmp
push
incb
pop
add
sub
mov
pop
add
jmp
mov
push
mov
add
mov
add
push
mov
jmp
sub
add
add
pushl
mov
push
mov
add
add
xchg
mov
push
mov
mov
add
push
mov
add
pop
xchg
mov
jmp
xchg
mov
bts
pushf
jmp
pop
push
jmp
pop
push
mov
mov
jmp
subl
add
addl
jmp
mov
push
mov
jmp
push
notl
pop
or
jmp
push
mov
xor
mov
add
jmp
mov
add
push
mov
add
pop
xchg
pop
push
mov
jmp
mov
push
mov
push
mov
add
pop
push
jmp
sub
mov
mov
add
sub
mov
jmp
push
pop
add
push
mov
xor
xchg
not
xchg
neg
push
mov
sub
xor
inc
shl
not
sub
add
pop
sub
jmp
mov
xor
pop
mov
jmp
push
mov
shl
xor
shr
xchg
jmp
push
push
jmp
mov
sub
pop
push
mov
shl
shl
xor
jmp
sub
xor
pop
add
jmp
push
negl
pop
add
jmp
pop
sub
xchg
pop
mov
mov
push
mov
jmp
push
mov
push
pop
add
add
push
pushl
pop
popl
pop
popl
mov
imul
push
push
jmp
push
mov
push
mov
not
shr
jmp
sub
sub
pop
jmp
pushl
popf
pop
rcrb
pushf
jmp
push
mov
add
add
xchg
pop
push
mov
jmp
pop
add
add
pop
push
mov
push
mov
or
shr
neg
not
push
mov
add
pop
add
pop
add
push
mov
jmp
mov
push
jmp
pushl
mov
jmp
pop
pop
pop
push
mov
sub
pop
sub
add
mov
add
push
pushl
mov
push
mov
push
mov
add
pushl
pop
jmp
pushl
pushl
jmp
add
popl
pop
shl
or
or
sub
mov
mov
sub
pop
add
pushl
pop
add
push
mov
add
pop
xor
xor
jmp
sub
sub
add
add
jmp
sub
xchg
pop
jmp
add
add
xchg
pop
popl
pop
mov
mov
add
pushl
pushl
jmp
pop
xchg
pop
mov
mov
sub
mov
mov
jmp
jmp
push
sub
mov
push
mov
push
jmp
pop
mov
sub
mov
push
mov
add
pop
pushl
pop
add
add
add
xor
xor
xor
pop
xor
xor
xor
jmp
mov
push
mov
add
push
mov
jmp
add
sub
mov
mov
add
sub
sub
pop
jmp
add
jmp
push
sub
mov
mov
mov
add
jmp
push
mov
mov
mov
mov
add
add
push
jmp
mov
mov
push
mov
inc
shr
xor
sub
jmp
xor
pop
mov
push
mov
add
sub
xor
xor
xor
mov
mov
addl
pop
add
add
xor
xor
xor
mov
movzwl
push
mov
jmp
pop
xor
push
mov
jmp
sub
add
pop
jmp
sub
mov
sub
mov
mov
add
jmp
shl
inc
push
mov
add
sub
xchg
pop
mov
mov
xor
pop
add
pop
push
mov
add
pop
xor
xor
xor
jmp
pop
push
jmp
add
sub
add
push
mov
add
pop
push
push
mov
inc
push
mov
xor
sub
xor
not
add
or
add
sub
jmp
add
jmp
add
add
add
jmp
mov
mov
shl
add
push
mov
sub
mov
push
mov
add
add
xchg
pop
push
push
mov
shr
and
xor
inc
jmp
pop
push
mov
sub
pop
push
pushl
mov
jmp
jmp
add
pop
add
xchg
pop
popl
push
push
jmp
mov
push
jmp
add
pushl
pop
jmp
mov
add
jmp
xor
mov
mov
push
mov
add
pop
mov
add
add
add
push
mov
pushl
pop
popl
mov
mul
movzbw
pushw
mov
jmp
push
push
mov
add
jmp
xchg
pop
mov
jmp
mov
add
add
push
push
mov
add
shl
jmp
mov
pop
add
mov
add
xor
xor
xor
pop
push
jmp
push
push
mov
jmp
push
pushl
mov
add
add
push
mov
shl
jmp
xor
xor
jmp
mov
pop
add
jmp
pop
push
mov
add
sub
sub
pop
sub
jmp
and
shr
jmp
pop
sub
jmp
add
xor
or
pop
add
mov
pop
add
pop
add
push
pushl
mov
push
mov
add
add
xchg
pop
popl
mov
jmp
mov
push
mov
push
pop
xor
jmp
inc
shl
not
add
add
mov
add
sub
jmp
add
sub
sub
pop
sub
mov
pushl
mov
jmp
sub
mov
mov
sub
and
add
dec
sub
jmp
add
mov
add
add
jmp
add
pop
jmp
xchg
pop
push
mov
push
mov
add
push
jmp
mov
xor
jmp
pop
mov
add
pop
add
sub
mov
mov
sub
dec
or
sub
shl
xor
add
pop
sub
mov
pushl
pop
popl
jmp
mov
sub
jmp
pop
xor
jmp
mov
mov
add
jmp
push
push
push
jmp
lods
cmpl
je
push
mov
jmp
xchg
push
push
pop
mov
push
jmp
add
sub
xchg
pop
mov
mov
jmp
mov
add
xchg
pop
shlw
pushf
jmp
push
push
pop
sub
push
mov
push
mov
jmp
mov
pop
jmp
mov
sub
pop
mov
pop
xor
mov
sub
jmp
mov
jmp
mov
jmp
sub
mov
push
mov
inc
inc
jmp
add
sub
sub
sub
pop
and
pop
or
je
pushl
addl
jmp
sub
mov
mov
add
sub
xchg
jmp
push
push
mov
mov
push
mov
push
mov
jmp
push
notl
pop
jmp
mov
push
mov
dec
shr
not
jmp
shr
xor
or
sub
jmp
add
add
jmp
pop
and
add
sub
xor
pop
push
push
jmp
sub
mov
jmp
pop
shr
neg
shl
push
mov
or
xor
add
pop
mov
pushl
pop
sub
mov
mov
add
add
xchg
pop
sub
jmp
mov
and
jmp
pop
sub
sub
pop
push
mov
sub
pop
sub
sub
sub
add
push
mov
mov
add
mov
add
push
mov
dec
jmp
push
mov
shl
shr
add
and
pop
push
jmp
add
xor
xor
xor
pop
push
mov
jmp
not
shr
jmp
mov
push
addl
pop
sub
pop
add
shl
add
dec
jmp
pushl
pop
popl
pop
push
mov
add
sub
xchg
pop
mov
mov
push
mov
sub
add
add
sub
pop
push
mov
jmp
push
mov
sub
neg
inc
dec
xor
mov
pop
shr
and
add
push
mov
add
sub
pop
sub
add
pop
push
jmp
xor
push
xchg
sub
mov
xchg
jmp
mov
add
sub
mov
push
mov
jmp
shr
shl
neg
sub
add
pop
mov
pop
sub
sub
add
pop
xor
xor
xor
mov
mov
push
pop
add
push
jmp
mov
push
mov
mov
add
sub
sub
mov
add
add
jmp
push
push
push
popl
addl
mov
jmp
dec
push
mov
jmp
pushl
pushl
jmp
push
push
mov
mov
push
mov
jmp
sub
mov
push
mov
mov
pop
jmp
mov
push
jmp
add
add
jmp
pop
inc
add
jmp
and
pop
xor
jmp
pop
add
pop
add
xchg
pop
add
add
xchg
pop
jmp
push
mov
mov
addl
sub
subl
jmp
mov
idiv
pushw
mov
jmp
xchg
pop
mov
mov
sub
mov
mov
add
jmp
sub
pop
sub
mov
add
sub
mov
pushl
mov
add
popl
pop
mov
mov
add
push
mov
mov
pop
mov
push
jmp
pushl
pop
sub
mov
mov
add
jmp
push
push
pop
add
add
xchg
mov
push
mov
add
pop
add
xor
xor
xor
mov
decb
pushf
jmp
add
add
sub
sub
mov
mov
jmp
mov
addl
pop
jmp
xchg
pop
jmp
pop
mov
add
jmp
mov
push
push
mov
mov
push
jmp
mov
mov
add
mov
xor
pushl
pop
add
jmp
sub
pushl
pop
add
sub
mov
mov
add
add
pop
add
push
mov
shr
sub
sub
pop
pushl
mov
add
add
jmp
pop
sub
add
add
pop
add
sub
pop
jmp
xchg
pop
shr
sub
mov
mov
xor
pop
xor
pushl
pop
push
push
pop
push
mov
not
push
mov
sub
pop
jmp
pop
jmp
xchg
pop
jmp
add
jmp
mov
mov
add
mov
add
push
subl
pop
add
pushl
mov
add
add
mov
pop
shr
not
add
xor
sub
mov
jmp
mov
push
mov
mov
push
subl
jmp
mov
and
pushl
pushl
pop
push
jmp
pop
sub
mov
mov
sub
pop
xchg
pop
jmp
pop
sub
pop
jmp
neg
sub
mov
pop
mov
sub
pop
pushw
subw
sub
addw
pop
xor
add
sub
push
mov
sub
mov
push
mov
jmp
mov
push
jmp
sub
sub
pop
add
jmp
xchg
mov
jmp
push
mov
push
mov
mov
xor
jmp
add
add
pop
jmp
push
mov
shl
or
shl
push
jmp
pop
add
jmp
neg
not
xor
not
sub
sub
pop
sub
sub
push
mov
add
mov
add
mov
push
mov
push
mov
add
pop
jmp
shr
sub
push
mov
mov
push
jmp
pop
xor
pushl
jmp
push
push
jmp
add
pop
jmp
pop
and
mov
push
mov
add
add
xchg
pop
jmp
mov
sub
jmp
pop
jmp
sub
xchg
mov
push
push
popl
addl
popl
jmp
inc
xor
add
jmp
mov
xor
jmp
mov
push
jmp
push
mov
jmp
or
sub
dec
xor
jmp
sub
pop
add
pop
xchg
pop
shr
xor
push
mov
jmp
lods
add
add
jmp
sub
mov
push
mov
push
mov
add
add
xchg
pop
shl
xor
mov
pop
add
mov
push
mov
add
add
xchg
jmp
mov
add
pushf
jmp
neg
and
add
jmp
pop
jmp
pop
jmp
push
mov
mov
jmp
mov
jmp
sub
add
sub
pop
push
mov
add
pop
add
push
mov
add
sub
xchg
pop
mov
mov
sub
pop
add
mov
jmp
sub
sub
push
jmp
push
jmp
mov
subl
add
jmp
xor
inc
push
mov
add
or
sub
shr
jmp
not
xchg
xchg
push
mov
pushl
mov
sub
mov
mov
add
add
xchg
mov
popl
mov
add
sub
mov
jmp
pop
add
push
jmp
push
mov
add
jmp
mov
add
pop
sub
mov
jmp
add
sub
add
jmp
mov
mov
pop
mov
jmp
push
mov
add
jmp
movzbw
push
push
jmp
mov
neg
shr
push
jmp
mov
inc
xor
add
jmp
sub
push
push
jmp
and
xor
add
pop
or
not
xor
or
pop
add
and
xor
push
mov
and
push
mov
neg
inc
xor
and
jmp
shl
sub
add
pop
xor
sub
add
add
pop
sub
jmp
pop
xchg
mov
mov
jmp
push
push
mov
mov
jmp
neg
xor
mov
pop
shl
push
subl
pop
jmp
sub
add
add
pop
sub
xchg
mov
mov
jmp
push
push
pop
jmp
push
pushl
pop
add
shr
add
sub
mov
jmp
push
pop
add
pop
sub
push
jmp
push
mov
jmp
xchg
pop
add
push
mov
mov
shl
push
jmp
add
xchg
pop
push
sub
jmp
mov
pop
mov
mov
push
mov
push
mov
add
pop
jmp
not
xchg
push
push
pop
mov
add
add
jmp
xor
mov
push
mov
add
add
xchg
pop
jmp
add
xchg
jmp
add
pop
push
negb
pop
inc
sub
and
pop
shr
sub
and
sub
sub
add
add
pop
add
push
push
mov
jmp
pop
and
sub
mov
pop
not
shr
inc
jmp
push
push
pop
add
pop
push
jmp
mov
add
add
xchg
pop
xchg
pop
mov
push
mov
mov
xor
pushl
pop
push
mov
add
add
xchg
pop
neg
jmp
mov
add
sub
xchg
pop
mov
jmp
push
mov
xor
pop
xor
or
pop
push
notl
pop
jmp
push
mov
push
mov
sub
mov
jmp
mov
push
mov
mov
pop
pop
push
mov
jmp
xor
or
pop
sub
push
mov
add
pop
sub
sub
jmp
push
pop
push
mov
mov
shl
xor
add
add
sub
pop
push
mov
push
mov
mov
mov
add
sub
sub
mov
jmp
xor
push
mov
notl
jmp
not
xor
xor
xor
pop
push
pushw
pop
jmp
push
mov
mov
add
push
mov
sub
sub
jmp
pop
add
add
xchg
pop
xor
pop
add
push
push
mov
mov
pop
add
mov
mov
sub
mov
mov
add
push
jmp
xorl
mov
add
jmp
not
push
mov
jmp
mov
push
jmp
shl
xor
xor
jmp
mov
push
jmp
popl
pop
jmp
mov
add
pop
addl
jmp
mov
or
pop
xor
neg
push
mov
xor
jmp
mov
push
jmp
xor
pop
jmp
add
sub
mov
mov
sub
pushl
jmp
sub
pop
jmp
sub
sub
mov
add
push
mov
push
mov
sub
pop
add
add
pushl
pop
pop
mov
push
push
mov
addl
mov
jmp
mov
sub
shl
push
push
mov
shr
sub
jmp
jmp
mov
sub
add
pop
push
push
mov
mov
jmp
mov
sub
mov
jmp
xor
or
pop
jmp
add
sub
sub
jmp
pop
neg
not
sub
jmp
pop
push
mov
inc
shr
sub
add
pop
jmp
xchg
not
xchg
jmp
mov
mov
push
mov
push
mov
jmp
mov
push
jmp
mov
shr
sub
dec
add
xor
push
mov
jmp
add
push
mov
jmp
add
sub
push
jmp
mov
sub
pop
xchg
jmp
add
push
push
mov
mov
dec
jmp
push
pop
sub
add
add
mov
push
mov
mov
add
push
mov
sub
add
pop
xchg
mov
xor
xor
xor
mov
jmp
and
push
push
mov
mov
pop
add
mov
add
push
sub
mov
mov
mov
pop
and
xchg
not
xchg
push
mov
jmp
pop
inc
shr
push
mov
xor
pop
sub
jmp
push
mov
mov
add
pop
sub
jmp
push
mov
mov
sub
sub
dec
inc
add
jmp
mov
push
mov
mov
mov
pop
push
mov
mov
pop
pop
push
mov
add
mov
pop
pop
pop
mov
add
pop
jmp
sub
xchg
pop
mov
addl
pop
add
push
jmp
popl
pop
jmp
mov
pop
and
xor
add
add
pop
push
mov
mov
add
sub
mov
add
sub
mov
add
mov
mov
add
push
jmp
sub
sub
add
sub
jmp
mov
add
sub
xchg
pop
mov
jmp
add
not
push
mov
jmp
pop
not
push
jmp
xor
add
add
jmp
add
sub
jmp
mov
sub
jmp
dec
shr
push
mov
jmp
pop
pop
push
jmp
sub
sub
add
pop
push
mov
neg
add
sub
pop
add
pushl
pop
add
push
mov
sub
pop
sub
mov
pushl
jmp
mov
pop
sub
push
mov
sub
push
mov
jmp
dec
shr
dec
jmp
mov
or
shl
jmp
push
push
pop
push
jmp
sub
push
mov
xor
jmp
mov
mov
neg
jmp
push
mov
add
jmp
mov
push
jmp
mov
push
mov
add
jmp
push
mov
xor
xor
jmp
mov
add
add
push
mov
push
push
push
mov
mov
shl
add
mov
mov
add
and
push
mov
and
pop
not
jmp
pop
add
pop
jmp
pushl
pushl
jmp
mov
xor
xor
inc
jmp
pushl
jmp
mov
push
mov
add
add
push
jmp
add
mov
mov
add
and
dec
xor
xor
jmp
xchg
pop
push
mov
jmp
neg
not
sub
jmp
push
mov
add
push
push
mov
jmp
sub
shl
not
xor
mov
pop
sub
mov
add
add
xor
sub
add
add
pop
push
mov
add
push
mov
sub
jmp
add
popl
mov
push
mov
jmp
mov
dec
add
jmp
add
pushl
pop
push
jmp
add
add
xchg
pop
jmp
shr
sub
xor
jmp
mov
add
pop
xchg
pop
push
mov
add
add
mov
add
add
push
mov
inc
xor
sub
pop
push
mov
add
jmp
push
mov
jmp
neg
push
mov
xor
and
pop
add
add
pop
add
jmp
mov
shl
xor
sub
sub
add
jmp
xor
jmp
sub
xchg
pop
mov
mov
add
pop
xchg
mov
pushw
mov
jmp
push
pop
xchg
neg
xchg
inc
jmp
add
add
pop
jmp
mov
push
xorl
pop
jmp
mov
addl
jmp
add
push
jmp
jmp
mov
push
push
pop
sub
shl
not
xor
mov
pop
push
mov
sub
pop
subl
add
addl
addl
pushl
pop
push
jmp
pushl
mov
jmp
pop
add
push
mov
not
shl
xor
sub
add
pop
jmp
pop
push
push
pop
add
add
push
pushl
pop
popl
mov
xor
push
mov
push
mov
add
add
sub
mov
push
jmp
sub
pop
shl
shl
dec
push
addb
sub
subb
mov
add
push
mov
sub
pop
add
pop
add
sub
sub
pop
jmp
not
xor
and
xor
jmp
pop
add
add
jmp
mov
mov
sub
mov
subl
pop
push
mov
jmp
mov
and
pop
shr
shl
push
mov
dec
xor
and
jmp
xor
mov
jmp
neg
neg
add
neg
sub
add
and
pop
add
add
mov
add
shr
sub
mov
push
mov
dec
dec
push
mov
jmp
pop
mov
pop
pushl
pushl
pop
add
sub
mov
push
pop
add
add
xchg
pop
and
pushl
pop
add
or
shl
sub
mov
jmp
add
add
add
add
sub
sub
pop
add
sub
sub
add
push
mov
or
or
xor
xor
xor
xor
sub
pop
jmp
add
add
jmp
xor
xor
mov
mul
sub
mov
jmp
pushl
pop
jmp
push
pushf
jmp
add
jmp
xor
pop
dec
not
jmp
shl
push
mov
shr
dec
push
mov
dec
add
sub
push
mov
neg
sub
xor
mov
add
add
pop
sub
pop
jmp
not
xor
add
pop
sub
pop
movzbl
pushl
push
jmp
xor
not
xor
mov
pop
or
pop
inc
add
xor
add
pop
not
push
mov
sub
xor
xor
add
shl
xor
jmp
push
mov
sub
pop
pushl
pop
add
add
not
push
addl
sub
subl
pop
xor
or
shr
inc
not
xor
sub
jmp
add
sub
jmp
add
add
addl
pop
jmp
push
mov
sub
pop
xchg
mov
mov
push
mov
mov
mov
mov
sub
mov
mov
add
add
xchg
pop
add
pop
jmp
add
pop
jmp
mov
mov
push
mov
push
mov
jmp
mov
not
push
mov
add
sub
xchg
pop
mov
push
pop
dec
push
mov
xor
pop
dec
not
add
dec
push
jmp
add
sub
xor
xor
xor
pop
jmp
push
mov
jmp
add
jmp
sub
add
pop
jmp
mov
add
xchg
pop
push
popl
push
mov
jmp
push
mov
mov
xor
pop
sub
or
add
jmp
mov
addl
pop
push
mov
or
jmp
mov
push
jmp
mov
sub
jmp
xchg
mov
mov
push
sub
mov
push
mov
mov
pop
not
inc
dec
shr
sub
mov
pop
mov
xor
push
mov
jmp
mov
mov
jmp
pop
add
add
push
mov
push
mov
push
pushl
pop
add
sub
mov
mov
sub
pop
mov
pushl
pop
add
sub
jmp
add
xchg
pop
add
push
mov
sub
sub
jmp
xchg
pop
sub
jmp
add
sub
xchg
pop
mov
mov
or
mov
push
mov
jmp
popw
mov
push
jmp
mov
sub
add
add
jmp
add
jmp
pop
pushl
pop
push
jmp
add
sub
xchg
mov
mov
push
jmp
push
mov
dec
and
jmp
push
pop
sub
jmp
pop
sub
mov
add
and
sub
add
pop
push
pushl
jmp
sub
mov
push
mov
jmp
push
mov
push
jmp
pop
add
add
sub
push
mov
sub
mov
jmp
add
pushl
pop
push
jmp
shr
add
add
pop
xor
xor
xor
pop
push
sub
mov
addl
mov
add
add
push
mov
add
pushl
pop
add
jmp
pushl
pop
add
push
mov
push
jmp
push
mov
mov
mov
push
mov
jmp
add
push
push
pop
add
push
jmp
add
and
jmp
mov
push
mov
sub
jmp
add
add
sub
mov
add
xchg
pop
imul
push
pushf
jmp
pop
push
mov
sub
pop
sub
push
mov
add
mov
add
pushl
mov
add
push
mov
add
add
xchg
pop
xor
pushl
jmp
pop
add
jmp
pushl
mov
add
popl
mov
add
or
jne
push
mov
jmp
pop
add
mov
jmp
mov
neg
xor
jmp
add
push
mov
add
xor
or
xor
xor
sub
pop
jmp
sub
push
jmp
mov
push
mov
add
jmp
push
mov
push
mov
add
pop
add
pop
jmp
add
push
mov
add
sub
sub
pop
add
jmp
mov
sub
pop
xchg
pop
mov
mov
push
jmp
add
xchg
jmp
mov
add
sub
pop
jmp
mov
push
pop
add
push
mov
jmp
add
pop
shr
shl
sub
push
mov
add
jmp
shr
shr
add
push
mov
not
neg
dec
jmp
add
push
mov
push
mov
add
jmp
popl
push
mov
add
sub
xchg
pop
mov
jmp
xor
jmp
pushl
mov
jmp
add
mov
jmp
push
mov
xor
or
neg
inc
xor
mov
jmp
xor
sub
mov
push
pop
pop
jmp
push
mov
mov
sub
pop
add
pop
push
mov
add
pop
add
add
push
mov
sub
mov
add
sub
push
mov
jmp
add
add
pop
jmp
mov
sub
shr
dec
shl
dec
xor
mov
jmp
sub
not
sub
dec
shl
sub
add
mov
add
add
add
shr
not
push
mov
or
pop
shr
neg
add
xor
jmp
pop
xor
xor
jmp
xchg
pop
xor
xor
xor
mov
mov
jmp
popl
mov
btc
pushf
jmp
mov
jmp
pop
push
mov
push
pop
sub
jmp
pop
xchg
pop
push
mov
jmp
xor
mov
jmp
add
sub
xchg
pop
jmp
mov
mov
xor
pop
jmp
sub
mov
push
push
pop
xor
jmp
sub
sub
jmp
mov
sub
push
push
popl
addl
popl
addl
pop
sub
mov
mov
add
pop
add
push
pushl
pop
popl
pop
push
mov
jmp
mov
add
add
pop
jmp
pop
add
or
pop
push
push
mov
mov
pop
add
jmp
mov
push
mov
add
add
xchg
pop
push
jmp
mov
mov
pop
push
push
mov
jmp
pop
jmp
and
shr
neg
xor
push
mov
xor
sub
jmp
neg
dec
not
add
push
push
mov
add
mov
pop
add
pop
add
pushl
pop
push
mov
add
add
xchg
pop
jmp
mov
push
mov
add
sub
pop
shl
dec
jmp
sub
push
sub
mov
push
mov
jmp
pushl
jmp
pop
xor
jmp
push
push
jmp
pop
popl
jmp
mov
add
add
jmp
pop
mov
jmp
add
popl
pop
jmp
neg
sub
inc
add
xor
pop
xor
mov
add
and
jmp
pushl
jmp
sub
mov
add
jmp
add
xchg
pop
push
mov
mov
push
mov
xor
push
mov
neg
inc
not
push
mov
xor
sub
pop
add
pop
jmp
mov
jmp
xor
mov
add
push
mov
add
pop
add
push
mov
add
pop
add
sub
push
mov
shl
sub
mov
mov
and
jmp
add
sub
pop
xor
xor
xor
mov
sarb
pushf
jmp
and
push
decl
jmp
mov
add
shl
sub
jmp
add
sub
pushl
pop
add
push
push
jmp
push
push
push
jmp
push
push
popl
push
mov
add
mov
push
jmp
push
mov
add
add
xchg
pop
sub
mov
push
push
mov
add
add
mov
mov
add
add
mov
add
xor
xor
jmp
sub
push
popl
sub
mov
mov
push
mov
jmp
lods
xor
push
mov
jmp
add
add
xchg
pop
push
mov
jmp
push
push
mov
or
shl
add
xor
mov
jmp
add
sub
sub
mov
jmp
pop
add
add
push
jmp
push
mov
jmp
add
add
mov
push
mov
add
add
xchg
pop
push
mov
jmp
push
mov
jmp
add
jmp
sub
pop
push
jmp
popl
sub
mov
jmp
popl
jmp
push
push
mov
push
push
mov
add
pop
pop
sub
pop
xor
pop
add
mov
push
mov
add
add
xchg
mov
jmp
sub
mov
addl
pushl
mov
add
jmp
mov
mul
push
mov
jmp
mov
add
jmp
add
add
jmp
mov
push
mov
neg
sub
not
jmp
popl
pop
jmp
push
pushl
pop
push
mov
push
jmp
inc
sub
push
jmp
mov
mov
inc
push
mov
add
pop
push
mov
mov
jmp
addl
mov
add
jmp
push
pop
xchg
not
xchg
sub
sub
mov
jmp
push
mov
mov
push
mov
mov
jmp
push
mov
push
mov
mov
mov
pop
xor
mov
add
push
mov
mov
pop
mov
push
mov
add
add
xchg
pop
jmp
xor
xor
xor
mov
rorb
pushf
jmp
push
mov
sub
mov
mov
mov
jmp
push
mov
mov
push
mov
sub
pop
add
addl
pop
mov
add
add
push
mov
sub
shr
dec
dec
xor
add
jmp
pushl
pop
jmp
add
xor
xor
xor
pop
mov
push
jmp
mov
push
jmp
sub
pop
pushl
pop
push
mov
mov
push
jmp
push
pushl
pop
popl
pop
mov
addl
jmp
mov
add
pushl
pop
push
mov
push
pop
add
add
xchg
pop
push
mov
shl
push
mov
not
sub
and
pop
jmp
mov
add
shr
inc
jmp
add
push
mov
add
mov
add
mov
xor
jmp
add
push
jmp
add
xchg
pop
xor
mov
add
xor
mov
add
push
mov
jmp
not
inc
add
shr
sub
inc
jmp
pop
add
push
mov
sub
pop
jmp
mov
and
not
add
jmp
pop
push
mov
sub
jmp
or
jne
push
mov
jmp
add
add
jmp
push
mov
shr
jmp
add
xor
mov
pop
add
pop
sub
pop
add
add
jmp
mov
mov
push
push
mov
mov
mov
xor
jmp
push
mov
jmp
xor
xchg
not
jmp
pop
add
add
sub
jmp
push
push
pop
xor
sub
add
add
add
sub
sub
mov
add
xor
sub
sub
sub
add
mov
sub
mov
mov
jmp
mov
add
jmp
mov
mov
push
jmp
mov
push
jmp
mov
sub
jmp
pop
push
mov
inc
sub
shl
jmp
not
push
push
mov
mov
pop
inc
push
mov
mov
pop
pop
sub
add
pop
sub
sub
push
push
mov
mov
jmp
mov
pop
and
jmp
sub
push
mov
jmp
pop
add
pop
push
push
mov
mov
shl
xor
sub
mov
pop
add
pop
xchg
mov
push
mov
add
push
mov
jmp
pop
sub
sub
add
add
add
pushl
mov
jmp
dec
sub
push
mov
jmp
push
mov
or
not
jmp
pushl
jmp
xor
mov
jmp
pop
push
jmp
mov
mov
jmp
pushl
pop
push
mov
add
sub
jmp
mov
sub
pop
jmp
lods
xor
push
push
jmp
and
not
add
add
pushl
pop
add
add
push
push
push
pop
or
inc
sub
mov
pop
sub
pop
pop
push
jmp
popl
mov
shr
xor
sub
mov
jmp
push
pop
jmp
push
mov
mov
add
jmp
mov
add
push
jmp
push
mov
sub
pop
push
pushl
mov
add
jmp
mov
push
jmp
push
pop
add
sub
xchg
pop
jmp
add
jmp
not
neg
shl
jmp
push
mov
sub
add
add
pop
sub
sub
xor
xor
xor
mov
push
mov
add
add
xchg
mov
sub
push
mov
jmp
sub
sub
add
sub
jmp
mov
mov
push
mov
push
pop
jmp
add
push
mov
xor
push
mov
xor
add
pop
add
jmp
mov
sub
mov
push
mov
add
jmp
push
mov
mov
add
pop
or
jmp
sub
shr
jmp
add
xchg
mov
jmp
push
mov
addl
pushl
pop
add
jmp
push
mov
push
jmp
sub
mov
push
mov
dec
xor
jmp
sub
add
pushl
jmp
add
shr
xor
add
pop
mov
add
push
mov
mov
sub
mov
add
dec
push
notl
mov
add
xchg
not
xor
jmp
push
mov
shr
or
sub
add
jmp
mov
mov
xor
push
mov
mov
jmp
mov
push
mov
jmp
add
add
xchg
pop
jmp
pop
push
mov
mov
add
add
xchg
pop
pushl
pushl
jmp
pop
pushl
pushl
jmp
neg
push
mov
jmp
mov
push
jmp
mov
push
push
pop
jmp
push
push
pop
add
sub
xchg
pop
mov
jmp
pop
push
push
jmp
add
sub
xor
xor
xor
pop
jmp
push
mov
jmp
or
jmp
mov
sub
xor
sub
jmp
push
mov
mov
jmp
xor
pop
push
push
jmp
xor
mov
mov
add
subl
sub
addl
mov
jmp
pop
add
push
push
jmp
pop
pushl
mov
jmp
add
push
mov
mov
push
push
push
push
jmp
neg
neg
or
xor
sub
mov
pop
shl
jmp
dec
sub
xor
jmp
sub
not
shr
neg
xor
add
add
sub
pop
push
mov
mov
sub
sub
sub
sub
add
add
add
pop
xor
jmp
sub
push
mov
sub
pop
neg
or
push
push
pop
xor
pop
add
pop
push
mov
push
push
mov
mov
pop
jmp
mov
add
add
sub
jmp
push
mov
mov
jmp
pop
add
xor
push
mov
add
and
pop
jmp
mov
push
mov
mov
jmp
mov
push
jmp
pop
push
jmp
pushl
mov
add
sub
mov
mov
jmp
sub
pop
sub
sub
jmp
sub
sub
pop
add
jmp
mov
push
jmp
mov
add
jmp
pushl
pushl
jmp
push
mov
push
pop
pop
pushl
pop
sub
jmp
push
mov
push
mov
mov
pop
mov
pop
jmp
not
xchg
push
incl
jmp
push
pushf
jmp
mov
mov
shl
neg
add
add
add
sub
jmp
sub
xor
add
pop
sub
add
add
mov
add
add
jmp
mov
push
mov
mov
pop
sub
jmp
and
neg
inc
dec
jmp
or
je
sub
mov
jmp
inc
xchg
xchg
push
sub
jmp
pop
xor
neg
jmp
xor
and
mov
add
add
mov
pop
mov
xor
pop
add
add
sub
pop
push
push
push
pop
shl
add
mov
jmp
add
pop
sub
sub
pop
push
pushl
pop
popl
pop
jmp
add
jmp
mov
sub
mov
mov
mov
xor
jmp
add
and
mov
add
push
push
jmp
mov
add
jmp
mov
push
jmp
mov
push
push
mov
jmp
pushl
pop
add
jmp
pop
sub
mov
add
add
pop
xchg
mov
shlw
pushf
jmp
xor
pop
push
jmp
mov
pop
jmp
mov
add
pop
add
jmp
pop
sub
jmp
push
pushl
pop
push
mov
add
jmp
pop
and
pop
push
sub
pop
push
mov
mov
push
mov
and
pop
add
sub
push
mov
sub
pop
add
add
jmp
pop
add
pop
push
mov
add
pop
sub
push
sub
mov
mov
xor
pop
pop
xor
pushl
mov
add
push
mov
jmp
dec
jmp
pop
pop
sub
jmp
add
sub
mov
jmp
xor
xor
pop
jmp
pop
push
mov
jmp
mov
add
add
push
jmp
and
mov
add
and
push
push
pop
add
jmp
push
pop
push
mov
add
pop
sub
xor
jmp
add
xchg
pop
push
mov
push
mov
push
jmp
mov
and
shl
jmp
xchg
jmp
sub
mov
addl
pushl
pop
add
jmp
push
mov
push
mov
push
mov
jmp
pushl
pushl
jmp
xor
pop
push
addl
pop
sub
pop
and
pop
shr
or
je
sub
mov
jmp
notl
mov
jmp
sub
pushf
jmp
push
mov
add
dec
push
mov
jmp
not
push
jmp
xchg
pop
xor
mov
add
push
mov
jmp
mov
push
push
mov
push
mov
mov
mov
jmp
sub
mov
push
pushl
pop
add
jmp
not
add
sub
sub
pop
sub
add
push
mov
mov
sub
not
push
mov
push
mov
add
pop
sub
xchg
pop
jmp
mov
push
mov
mov
xor
pop
shr
and
xor
add
add
add
sub
push
mov
sub
pop
mov
push
push
pop
jmp
mov
not
add
xor
add
add
jmp
sub
pop
xchg
mov
mov
push
mov
add
jmp
push
pop
push
mov
add
pop
jmp
pop
add
pop
push
pushl
pop
popl
pop
add
add
sub
pop
add
sub
pop
push
push
push
mov
add
sub
jmp
sub
jmp
push
mov
sub
mov
jmp
sub
or
neg
xor
add
pop
add
sub
sub
pop
sub
mov
push
push
mov
mov
sub
pop
mov
pop
add
jmp
pop
push
mov
add
pop
and
mov
add
or
je
pushl
subl
jmp
mov
sub
jmp
add
pop
xchg
jmp
mov
push
mov
add
add
push
jmp
pop
add
xchg
jmp
sub
push
jmp
pop
push
push
jmp
add
add
push
mov
push
mov
jmp
inc
sub
sub
pop
jmp
push
mov
mov
push
xorl
pop
jmp
add
pop
push
mov
add
pop
xchg
mov
jmp
mov
sub
jmp
push
mov
mov
jmp
push
mov
add
shl
jmp
mov
push
mov
add
jmp
pop
push
mov
add
add
sub
mov
add
add
and
add
add
pushl
pop
add
add
xor
xor
xor
mov
jmp
add
jmp
pushl
pop
jmp
add
pop
push
jmp
inc
shr
not
not
xor
xor
pop
add
add
sub
pop
push
mov
push
push
pop
inc
not
sub
push
mov
jmp
sub
add
sub
sub
jmp
pop
add
sub
dec
sub
mov
pop
sub
add
pop
jmp
neg
add
add
mov
add
push
mov
push
jmp
neg
shl
sub
jmp
mov
push
mov
mov
shr
add
jmp
xor
pop
pushl
mov
jmp
add
pushl
jmp
pop
push
popl
addl
pushl
pop
push
mov
add
push
mov
add
pop
xchg
pop
add
add
xor
xor
xor
mov
jmp
mov
push
mov
mov
mov
sub
pop
add
add
sub
pop
shr
push
mov
not
inc
add
sub
not
sub
sub
jmp
inc
jmp
push
push
pop
add
pop
push
push
mov
jmp
xor
pop
mov
popl
pushl
pushl
jmp
mov
push
mov
not
inc
dec
jmp
push
mov
add
jmp
shl
xor
mov
shr
sub
add
dec
add
add
mov
jmp
pop
push
pop
mov
push
mov
push
mov
jmp
mov
push
pop
push
mov
neg
jmp
mov
add
push
push
jmp
push
mov
add
push
mov
dec
jmp
mov
push
jmp
push
mov
add
jmp
xchg
pop
jmp
xchg
pop
popl
mov
mov
jmp
xor
sub
pop
jmp
mov
mov
pop
pop
sub
mov
mov
add
shr
xor
inc
add
sub
mov
push
mov
add
add
xchg
pop
push
jmp
mov
mov
add
jmp
push
mov
sub
and
jmp
lods
push
mov
jmp
pop
mov
add
shl
push
mov
and
pop
jmp
pop
xor
xor
xor
mov
test
pushf
jmp
push
pop
jmp
mov
xor
and
dec
inc
sub
xor
pop
sub
pop
shl
sub
dec
add
push
mov
mov
pop
pop
xor
mov
jmp
mov
mov
push
push
mov
mov
pop
mov
push
mov
inc
xor
sub
sub
mov
add
sub
sub
add
add
pop
jmp
dec
or
sub
jmp
mov
add
sub
add
add
pop
add
sub
push
push
jmp
shr
sub
add
jmp
pop
push
push
jmp
xor
or
jmp
push
pushl
pop
popl
jmp
pushl
pop
popl
mov
mov
movzbw
push
pushf
jmp
mov
pop
neg
add
or
neg
sub
mov
pop
sub
sub
add
add
sub
add
add
pop
push
mov
mov
add
jmp
xchg
mov
add
push
push
mov
push
mov
mov
pop
xor
pop
push
mov
sub
add
add
pop
add
not
xor
jmp
mov
push
push
mov
subl
sub
jmp
mov
jmp
pop
push
push
jmp
mov
pushl
pop
push
mov
push
mov
inc
neg
push
mov
add
add
sub
pop
shr
push
mov
add
pop
add
jmp
sub
xor
pop
sub
sub
add
push
mov
mov
dec
shl
xor
push
negl
mov
add
xor
add
pop
add
mov
jmp
mov
sub
mov
mov
mov
pop
jmp
mov
add
push
jmp
pop
jmp
pop
xor
xor
xor
pop
mov
mov
add
sub
sub
jmp
mov
mov
push
mov
xor
pop
jmp
mov
sub
mov
mov
sub
sub
jmp
mov
push
mov
push
push
push
jmp
push
mov
pushl
pop
popl
pop
incl
pushf
jmp
pop
push
mov
jmp
push
mov
shl
dec
jmp
xor
mov
pop
jmp
negb
pushf
jmp
mov
not
inc
dec
inc
push
jmp
shl
shl
sub
and
and
add
jmp
xchg
mov
jmp
push
mov
push
jmp
push
mov
inc
jmp
mov
mov
sub
pop
jmp
mov
mov
add
push
mov
sub
jmp
xchg
dec
jmp
mov
jmp
push
mov
push
push
mov
mov
jmp
mov
push
push
mov
add
dec
jmp
push
push
push
pop
inc
not
sub
sub
jmp
pop
jmp
sub
pop
or
sub
jmp
xchg
add
push
pop
jmp
pop
pop
push
jmp
pop
push
mov
jmp
xor
xor
pop
push
mov
push
mov
addl
jmp
add
mov
pop
xor
mov
add
add
add
jmp
xchg
add
push
mov
jmp
mov
mov
push
push
pop
dec
not
xor
sub
mov
pop
add
pop
add
mov
add
push
push
jmp
add
jmp
mov
addl
jmp
push
mov
mov
pop
jmp
mov
mov
push
mov
neg
sub
jmp
push
mov
mov
pop
or
shr
jmp
sub
mov
push
mov
mov
pop
jmp
pop
xchg
xchg
push
mov
add
pop
xchg
add
shl
push
mov
xor
add
add
and
pop
add
add
mov
add
jmp
push
pop
sub
mov
sub
mov
jmp
push
mov
add
pop
xchg
pop
sub
sub
pop
xor
jmp
pop
push
jmp
mov
sub
mov
mov
inc
push
mov
sub
jmp
push
mov
push
mov
sub
push
jmp
mov
mov
push
mov
mov
not
jmp
xor
jmp
mov
add
mov
jmp
pop
push
mov
mov
jmp
add
add
add
sub
pop
push
push
jmp
push
addl
jmp
sub
sub
pop
xchg
pop
mov
negl
pop
xor
add
mov
sub
mov
mov
add
add
xchg
pop
push
mov
mov
jmp
add
jmp
pushl
mov
push
jmp
addl
pop
pushl
pop
jmp
xor
not
push
sub
mov
pushl
jmp
mov
xor
mov
mov
add
push
jmp
add
xor
xor
xor
pop
sarl
pushf
jmp
xchg
pop
mov
mov
jmp
xor
xor
push
mov
xchg
not
jmp
mov
push
jmp
inc
and
xor
jmp
mov
add
pop
mov
jmp
mov
mov
jmp
pop
not
inc
jmp
push
pop
add
push
jmp
mov
add
add
sub
jmp
add
pushl
pushl
pop
add
push
sub
mov
addl
pop
push
mov
add
pop
push
mov
add
pop
xchg
mov
movzbl
pushl
sub
mov
jmp
sub
sub
pop
shl
push
push
jmp
mov
push
mov
push
mov
add
jmp
mov
mov
push
pushf
jmp
push
mov
sub
pop
jmp
xor
mov
pushl
pushl
jmp
neg
add
sub
jmp
pop
push
push
mov
mov
add
jmp
mov
add
pop
pushl
jmp
not
add
push
jmp
add
add
pop
add
xor
xor
xor
pop
pop
sub
add
push
mov
mov
sub
add
add
pop
pushl
mov
add
jmp
sub
jmp
add
pop
and
mov
jmp
push
push
mov
jmp
add
mov
add
push
mov
add
pop
and
sub
mov
push
pop
sub
sub
push
mov
add
pop
pop
and
pushl
jmp
or
pop
shl
sub
jmp
popl
pop
pushl
mov
jmp
mov
add
jmp
push
push
pushl
mov
add
add
jmp
push
pop
inc
sub
mov
pop
xor
pop
add
pop
push
mov
mov
add
add
sub
mov
add
xor
xor
xor
jmp
mov
mov
add
jmp
add
sub
pop
push
mov
sub
pop
push
mov
jmp
push
pop
dec
or
jmp
lods
xor
push
mov
jmp
sub
pop
sub
add
mov
push
push
pop
add
add
xor
xor
xor
pop
push
mov
add
pop
xor
xor
xor
jmp
or
not
push
mov
xor
pop
inc
xor
jmp
pushl
mov
jmp
xor
pop
jmp
push
push
jmp
xchg
pop
mov
push
mov
push
mov
xor
add
pop
jmp
push
mov
add
pop
jmp
push
push
mov
push
pop
push
jmp
push
push
mov
add
jmp
or
dec
neg
add
or
pop
xor
add
add
add
sub
pop
add
xor
xor
xor
pop
push
mov
sub
add
jmp
rep
add
push
push
jmp
add
sub
sub
add
push
mov
mov
push
mov
add
pop
shr
sub
push
mov
add
xor
pop
shl
add
add
jmp
mov
add
push
mov
sub
pop
jmp
push
mov
mov
jmp
not
or
shr
shr
add
xor
pop
xor
inc
push
sub
mov
add
push
push
push
push
mov
add
mov
pop
jmp
sub
sub
sub
add
add
pop
sub
mov
jmp
pushl
pushl
pop
add
sub
mov
push
pop
add
add
xor
xor
xor
mov
push
mov
jmp
pop
mov
add
push
mov
jmp
pop
add
sub
sub
pushl
mov
add
add
add
push
mov
push
mov
dec
xor
neg
xor
add
pop
sub
xchg
jmp
mov
sub
mov
add
jmp
pop
shr
or
and
jmp
or
pop
shr
jmp
push
mov
jmp
lods
push
mov
jmp
sub
pop
jmp
mov
add
push
sub
mov
push
jmp
mov
mov
pop
add
push
mov
decl
notl
jmp
add
add
sub
sub
mov
add
xor
movzbl
pushl
jmp
and
jmp
jmp
push
mov
push
push
mov
add
jmp
push
mov
add
jmp
add
mov
add
jmp
pop
push
mov
jmp
xchg
jmp
sub
pop
mov
add
push
mov
not
add
and
push
mov
sub
add
neg
add
add
pop
dec
xor
add
pop
jmp
xor
pop
sub
pop
add
add
sub
sub
sub
add
jmp
add
mov
add
jmp
pop
add
push
mov
shl
push
xchg
dec
jmp
xor
jmp
mov
or
add
add
jmp
pop
push
push
jmp
mov
push
mov
mov
pop
pop
jmp
lods
add
sub
jmp
add
popl
push
mov
jmp
add
sub
xchg
pop
mov
push
jmp
mov
add
pop
add
sub
mov
mov
subl
jmp
sub
push
push
mov
xor
dec
jmp
sub
mov
push
jmp
pop
mov
pushl
pop
push
mov
push
mov
push
mov
xor
pop
sub
add
add
pushl
pop
add
push
mov
add
jmp
sub
pop
sub
add
sub
sub
pop
sub
mov
jmp
push
mov
push
mov
push
mov
jmp
xchg
pop
push
jmp
push
push
pop
push
mov
add
jmp
add
jmp
add
push
mov
push
jmp
mov
push
mov
add
push
mov
jmp
add
pushl
mov
add
push
push
mov
addl
pop
push
push
push
mov
shl
sub
shr
add
and
xor
mov
pop
jmp
sub
add
jmp
xor
pop
sub
mov
add
push
mov
jmp
pushl
pop
popl
pop
mov
addl
jmp
lods
xor
push
sub
jmp
pop
add
add
sub
pushl
mov
add
push
mov
push
mov
add
mov
add
push
mov
add
mov
add
xor
xor
jmp
pushl
pop
add
add
mov
mov
add
push
jmp
push
mov
add
pop
push
mov
pushl
pop
popl
mov
xor
xor
xor
mov
incw
pushf
jmp
subl
mov
push
mov
jmp
xor
sub
pushl
pop
add
mov
add
pushl
push
jmp
add
sub
push
mov
add
pushl
pop
push
mov
add
jmp
xor
pop
or
and
not
sub
xor
push
pop
pop
jmp
add
shr
push
mov
jmp
lods
push
mov
jmp
not
xor
jmp
add
xchg
pop
sub
sub
mov
add
add
mov
add
jmp
add
push
mov
jmp
mov
sub
jmp
add
add
push
jmp
sub
add
pop
sub
jmp
pop
push
push
pop
jmp
xor
xor
xor
mov
push
mov
jmp
add
add
xchg
mov
jmp
sub
add
pop
push
mov
mov
sub
mov
push
mov
add
add
xchg
pop
push
push
mov
mov
xor
mov
add
jmp
pushl
pop
add
push
push
pop
jmp
pop
push
push
mov
jmp
and
mov
jmp
pushl
jmp
pop
push
mov
jmp
mov
sub
jmp
xor
add
add
sub
pushl
pop
push
mov
add
add
jmp
mov
add
pop
add
pop
xor
xor
xor
mov
sarw
pushf
jmp
mov
push
push
popl
jmp
push
mov
push
mov
push
mov
jmp
push
mov
xor
sub
jmp
sub
add
jmp
push
push
popl
push
jmp
add
add
pop
push
jmp
pushl
popf
pop
rclb
pushf
jmp
add
pop
jmp
pushl
popf
pop
rcrw
pushf
jmp
pushl
pop
jmp
xchg
mov
mov
mov
push
mov
push
push
jmp
add
add
xchg
mov
jmp
sub
add
pop
xor
pushl
pop
push
push
jmp
push
mov
push
mov
push
mov
xor
mov
jmp
add
pop
add
xor
xor
xor
mov
or
pushf
jmp
neg
pushw
mov
mov
jmp
pop
pop
add
push
mov
mov
push
mov
add
pop
subl
add
addl
push
push
mov
push
subl
pop
add
pop
jmp
mov
mov
add
sub
pop
push
mov
jmp
mov
mov
push
mov
jmp
mov
mov
sub
pop
push
push
mov
add
jmp
pop
mov
mov
mov
push
mov
sub
pop
add
add
pushl
pop
push
mov
add
add
xchg
pop
add
sub
sub
jmp
mov
add
add
xchg
pop
push
mov
add
jmp
xchg
pop
mov
jmp
mov
jmp
popl
mov
mov
push
jmp
add
xchg
pop
xor
xor
jmp
and
push
push
pop
add
or
push
mov
sub
add
pop
add
pop
mov
pop
neg
add
inc
xor
xor
pop
jmp
mov
sub
mov
mov
add
pop
jmp
pop
add
mov
pop
add
shl
push
notl
pop
inc
push
mov
not
inc
add
and
add
push
mov
xor
push
jmp
mov
sub
add
push
mov
push
mov
inc
jmp
pop
dec
sub
mov
jmp
popl
mov
mov
push
pop
add
pushl
pushl
jmp
and
mov
add
sub
xor
mov
add
push
push
jmp
push
mov
push
pushl
pop
add
jmp
add
push
mov
push
jmp
pop
sub
mov
mov
jmp
push
mov
add
add
xchg
pop
add
mov
push
mov
push
mov
sub
not
push
mov
or
pop
shr
dec
add
jmp
popl
addl
pushl
pop
jmp
pop
sub
xor
jmp
add
pop
push
push
jmp
popl
jmp
neg
xor
sub
jmp
xor
xor
xor
mov
jmp
mov
mov
jmp
push
mov
add
jmp
pop
push
push
jmp
sub
mov
mov
add
push
mov
jmp
mov
inc
dec
dec
push
mov
jmp
add
xor
add
add
jmp
push
mov
add
push
mov
push
jmp
mov
and
neg
xor
add
pop
mov
pop
inc
add
dec
push
mov
and
pop
push
mov
add
pop
neg
xor
jmp
pop
jmp
mov
jmp
shr
sub
add
pop
add
xchg
pop
push
jmp
shl
add
jmp
mov
add
pop
xchg
pop
movzbw
push
mov
jmp
pop
push
pushl
pop
popl
mov
mov
mov
shl
xchg
not
xchg
shr
xor
add
pop
sub
mov
pushl
pushl
pop
jmp
push
mov
xor
push
mov
sub
mov
pop
jmp
inc
push
mov
and
jmp
add
push
pushl
pop
popl
mov
shr
sub
jmp
add
xchg
jmp
push
mov
pushl
mov
jmp
pop
mov
addl
pop
push
mov
add
pop
push
push
pop
push
mov
or
pop
add
xor
add
pop
sub
mov
jmp
add
jmp
add
add
sub
pushl
pop
push
push
pop
jmp
mov
inc
and
neg
xor
sub
pop
add
add
sub
push
mov
add
mov
add
push
mov
add
pop
push
mov
jmp
mov
add
xchg
push
jmp
mov
mov
push
mov
push
push
mov
mov
jmp
pop
jmp
add
mov
add
jmp
pop
sub
pop
xor
xor
xor
mov
mov
movzbw
push
pushf
jmp
pushl
pop
popl
pop
jmp
push
pop
and
mov
push
mov
jmp
mov
add
mov
add
add
push
mov
push
push
pop
not
or
xor
mov
pop
xchg
not
xchg
add
add
pop
jmp
sub
add
pop
push
jmp
mov
push
mov
mov
mov
pop
jmp
add
pop
add
sub
push
mov
shl
shl
and
or
jmp
mov
addl
pop
jmp
xor
push
mov
xor
pop
sub
add
add
pop
sub
jmp
shr
push
mov
jmp
push
mov
shr
shl
jmp
add
xor
jmp
add
add
mov
pop
push
mov
sub
mov
jmp
add
xchg
dec
jmp
pushl
popf
pop
rclw
pushf
jmp
push
mov
add
add
xor
xor
xor
pop
add
push
jmp
push
mov
addl
pushl
pop
push
jmp
mov
inc
not
or
sub
shl
sub
sub
pop
sub
add
pop
sub
add
sub
add
push
mov
add
add
pop
jmp
or
shl
add
jmp
sub
add
pop
mov
jmp
pop
push
mov
push
mov
inc
add
add
or
add
add
pop
inc
inc
and
push
mov
add
neg
inc
add
jmp
mov
push
mov
push
mov
mov
jmp
mov
mov
mov
xor
pop
push
mov
mov
jmp
add
pop
push
push
jmp
pushl
push
jmp
push
mov
xor
jmp
push
mov
push
pop
sub
add
add
pop
jmp
add
add
sub
pushl
mov
add
push
push
jmp
push
mov
add
mov
jmp
xor
mov
mov
jmp
pop
add
sub
pop
add
pop
sub
sub
pop
xchg
jmp
push
mov
sub
pop
jmp
and
xchg
push
jmp
pop
sub
sub
add
pushl
pop
push
push
jmp
add
jmp
mov
pop
and
jmp
dec
xor
add
mov
pop
sub
pop
xchg
jmp
pop
push
mov
add
pop
sub
mov
mov
sub
pop
xor
xor
xor
pop
mov
mov
add
add
xchg
mov
mov
sub
jmp
add
pop
add
sub
sub
add
jmp
pop
add
add
sub
pop
sub
push
pushl
mov
add
jmp
mov
push
jmp
mov
pushl
mov
add
jmp
pushl
pop
push
mov
jmp
add
sub
xchg
pop
mov
mov
jmp
mov
add
xor
xor
xor
pop
or
shl
pushl
push
jmp
add
add
add
sub
jmp
sub
mov
push
mov
push
mov
jmp
add
push
mov
xchg
xor
xor
jmp
push
mov
xor
pop
jmp
mov
sub
mov
mov
sub
add
jmp
mov
add
push
mov
add
sub
pop
xchg
pop
mov
pop
push
pop
pop
mov
add
or
pushl
pop
add
push
mov
jmp
pop
dec
not
xor
jmp
push
mov
add
add
jmp
pop
add
jmp
add
pushl
pop
jmp
add
or
pop
neg
jmp
xchg
pop
push
mov
jmp
sub
pop
shl
jmp
push
push
pop
add
push
push
jmp
add
sub
push
jmp
jmp
xchg
mov
push
push
jmp
pop
xor
xor
xor
pop
push
mov
jmp
mov
add
push
mov
not
push
mov
xor
jmp
sub
mov
jmp
neg
sub
jmp
xchg
mov
jmp
mov
push
mov
jmp
xor
add
pop
push
jmp
add
sub
pushl
pop
push
mov
add
add
xchg
pop
jmp
add
pop
pop
add
jmp
shr
push
mov
add
jmp
xchg
jmp
push
mov
dec
jmp
pop
add
xchg
mov
mov
sub
mov
mov
jmp
mov
sub
pop
xchg
jmp
mov
sub
mov
mov
dec
shl
jmp
mov
mov
dec
push
mov
push
mov
push
jmp
shl
add
sub
pop
add
add
pop
add
push
pushl
jmp
sub
sub
add
pop
add
add
sub
mov
add
push
push
push
pop
and
neg
neg
push
mov
xor
mov
add
jmp
or
sub
dec
add
add
pop
sub
xor
xor
xor
pop
mov
push
mov
add
sub
mov
mov
sub
or
dec
jmp
mov
push
mov
add
pop
push
mov
mov
jmp
mov
add
push
mov
sub
pop
jmp
popl
jmp
mov
mov
pop
jmp
mov
push
pop
jmp
sub
pop
jmp
mov
mov
mov
pop
mov
add
sub
pushl
mov
push
mov
add
add
xchg
pop
push
push
pop
add
add
xchg
jmp
add
add
push
mov
pushl
pop
popl
mov
push
mov
push
mov
dec
xor
add
pop
add
xchg
pop
push
push
jmp
mov
xchg
not
jmp
shl
add
push
subl
pop
add
pop
dec
shl
shr
jmp
mov
xor
add
sub
sub
pop
add
add
pop
add
jmp
sub
sub
pop
sub
add
mov
add
push
push
jmp
xor
sub
mov
pop
sub
pop
sub
push
mov
mov
add
sub
sub
pop
inc
push
mov
sub
add
sub
add
jmp
push
mov
add
shl
inc
or
xor
add
pop
mov
add
sub
mov
mov
add
add
sub
pop
add
xchg
mov
jmp
push
mov
mov
push
mov
add
pop
mov
mov
add
sub
and
pushl
pop
sub
mov
mov
push
mov
add
pop
jmp
mov
mov
add
jmp
neg
xor
mov
pop
sub
pushl
mov
add
push
mov
add
add
push
pushl
pop
popl
pop
popl
addl
jmp
push
pop
not
add
sub
mov
pushl
pop
add
add
pushl
mov
add
add
push
pushl
mov
add
popl
mov
shrb
pushf
jmp
add
popl
jmp
xchg
not
jmp
pop
push
mov
mov
push
mov
jmp
push
pop
jmp
push
mov
add
add
xchg
pop
push
push
jmp
mov
add
sub
jmp
push
mov
add
shl
push
mov
add
pop
sub
mov
mov
xor
pop
add
mov
pop
add
pushl
pop
add
push
jmp
xor
add
jmp
add
pushl
mov
push
push
pop
add
add
xchg
pop
push
mov
mov
add
add
push
pushl
pop
popl
mov
push
jmp
pop
pop
add
push
jmp
mov
or
pop
shl
push
mov
mov
dec
sub
sub
xor
sub
pop
sub
sub
push
mov
not
xor
push
mov
jmp
add
sub
mov
jmp
sub
jmp
push
mov
mov
mov
push
push
jmp
inc
or
sub
sub
jmp
sub
mov
add
mov
pushl
pop
push
push
pop
push
mov
add
mov
add
push
mov
add
pop
xchg
pop
push
mov
jmp
mov
pop
push
jmp
sub
pushl
pop
jmp
add
jmp
mov
sub
pop
sub
add
add
sub
mov
mov
push
notl
pop
dec
or
or
push
mov
add
add
mov
add
jmp
push
mov
add
mov
add
push
jmp
add
add
mov
add
xor
mov
add
push
push
jmp
mov
mov
push
push
mov
mov
jmp
mov
add
jmp
add
pop
sub
xchg
mov
mov
mov
push
push
mov
xor
pop
mov
add
push
mov
xor
pop
pop
and
mov
jmp
mov
push
jmp
add
sub
mov
pushl
pop
popl
pop
incb
pushf
jmp
add
add
sub
pushl
xorl
pop
xor
pushl
mov
add
push
mov
push
mov
add
pop
add
xchg
mov
pushl
pop
jmp
sub
add
pop
jmp
push
push
mov
jmp
push
mov
jmp
pushl
pop
add
sub
mov
push
jmp
pushl
pop
push
jmp
pop
push
push
pop
jmp
add
sub
xchg
pop
mov
push
jmp
push
mov
mov
mov
inc
and
jmp
push
sub
mov
mov
push
mov
jmp
mov
push
push
popl
push
sub
jmp
push
mov
add
pop
movzbl
popw
jmp
pop
push
jmp
mov
pop
shl
push
mov
inc
sub
add
not
and
jmp
mov
push
push
jmp
lods
xor
sub
mov
jmp
mov
pop
push
mov
push
mov
push
mov
jmp
and
shr
push
jmp
jmp
movzbw
push
mov
jmp
push
mov
inc
add
xor
pop
xor
pop
and
xor
jmp
xor
pushf
jmp
mov
jmp
push
mov
mov
pop
jmp
mov
add
pop
jmp
xchg
pop
mov
push
mov
neg
xor
mov
jmp
notl
pushl
pop
add
jmp
pop
add
jmp
mov
push
mov
add
pushl
pop
jmp
mov
push
mov
addl
add
subl
pop
mov
jmp
push
addl
jmp
xor
xor
pop
xor
pop
pushw
mov
jmp
add
xor
sub
jmp
add
add
xchg
jmp
sub
sub
sub
mov
mov
or
jmp
pushl
pushl
jmp
mov
movswl
push
mov
jmp
xor
mov
pop
dec
jmp
add
xchg
pop
add
mov
pop
and
mov
push
mov
jmp
add
sub
xchg
pop
mov
push
jmp
add
sub
mov
pushl
jmp
pop
push
push
pop
push
mov
add
pop
add
xor
xor
xor
pop
push
push
pop
add
add
xchg
mov
jmp
mov
add
add
xchg
mov
push
push
mov
addl
pushl
pop
add
add
sub
mov
mov
add
add
sub
pop
push
jmp
sub
add
mov
add
sub
mov
jmp
add
sub
xchg
mov
jmp
mov
add
pop
push
jmp
pop
push
jmp
mov
dec
xor
sub
mov
mov
or
pop
xor
add
jmp
mov
push
jmp
and
pushl
mov
push
jmp
add
pop
jmp
add
mov
add
jmp
push
mov
mov
add
sub
sub
pushl
pop
add
sub
add
add
push
mov
add
pop
mov
add
add
mov
push
jmp
add
push
mov
jmp
pop
shl
xchg
jmp
push
mov
add
jmp
sub
mov
mov
add
push
mov
jmp
push
mov
add
add
sub
xchg
jmp
inc
add
push
mov
jmp
sub
sub
pop
sub
add
pop
sub
add
add
push
mov
mov
dec
or
dec
push
notl
pop
add
add
pop
jmp
add
push
mov
add
sub
xchg
pop
mov
mov
add
jmp
pop
add
xchg
mov
shlb
pushf
jmp
push
push
mov
and
jmp
push
push
pop
push
mov
mov
sub
mov
jmp
add
pop
add
push
jmp
push
push
mov
add
push
mov
jmp
add
xchg
pop
pushl
jmp
pop
add
push
push
mov
neg
add
mov
jmp
xor
xor
jmp
mov
mov
push
mov
mov
neg
jmp
mov
push
jmp
mov
add
xchg
pop
pushl
pop
push
mov
push
mov
add
sub
add
add
sub
pop
add
xchg
pop
push
mov
jmp
mov
add
push
push
mov
add
jmp
mov
push
pushl
pop
sub
mov
jmp
pop
push
push
mov
mov
pop
add
pop
jmp
mov
xor
add
pop
and
shr
push
mov
jmp
sub
pop
push
push
mov
mov
mov
add
add
pop
push
mov
add
sub
xchg
pop
mov
pushl
pop
popl
mov
jmp
neg
add
add
pop
jmp
pop
add
xchg
mov
push
mov
sub
mov
jmp
mov
add
sub
xchg
jmp
add
push
mov
mov
jmp
sub
mov
push
mov
jmp
push
mov
push
push
push
mov
add
mov
jmp
push
pop
add
pop
jmp
add
add
xchg
mov
sub
mov
push
sub
mov
mov
sub
mov
pop
push
xorl
pop
xor
pop
sub
mov
add
jmp
mov
and
jmp
push
mov
sub
mov
mov
push
jmp
mov
inc
sub
add
pop
not
shl
shl
shl
push
mov
dec
push
notl
pop
or
xor
sub
add
add
pop
jmp
pop
mov
push
mov
xor
xor
mov
pop
jmp
mov
push
pop
sub
mov
push
pop
sub
jmp
add
pop
jmp
mov
mov
push
pop
add
push
mov
shl
jmp
mov
push
jmp
mov
push
mov
add
mov
add
add
xchg
jmp
push
mov
dec
shr
sub
xor
xor
pop
sub
sub
push
push
mov
sub
mov
mov
mov
mov
add
pop
sub
jmp
push
mov
sub
jmp
pop
sub
jmp
pop
push
mov
jmp
lods
add
add
jmp
sub
mov
mov
inc
inc
push
mov
mov
add
pop
sub
pop
sub
pop
add
xor
xor
xor
mov
cmp
pushf
jmp
mov
mov
add
sub
pop
xchg
pop
mov
jmp
add
add
xchg
pop
xchg
pop
shll
pushf
jmp
mov
shl
add
sub
add
pop
add
mov
add
sub
mov
mov
add
mov
add
xchg
pop
idiv
movzbw
push
push
jmp
pop
xchg
pop
mov
jmp
mov
sub
mov
jmp
push
pop
push
mov
and
push
jmp
pop
mov
push
mov
jmp
xor
xor
xor
pop
push
push
mov
pop
mov
pop
pop
neg
shr
neg
push
mov
sub
pop
add
pop
sub
jmp
mov
mov
push
push
pop
push
mov
or
dec
xor
add
pop
push
mov
add
sub
add
add
pop
xchg
pop
jmp
add
push
mov
mov
not
xor
sub
mov
jmp
mov
mov
add
push
mov
push
push
mov
jmp
add
sub
push
jmp
add
push
mov
jmp
mov
and
pushl
pushl
pop
push
jmp
add
sub
pop
push
pushl
mov
add
popl
mov
pushl
pop
jmp
sub
mov
mov
push
mov
add
add
xchg
pop
jmp
mov
sub
mov
push
mov
mov
xor
pop
sub
add
pop
push
mov
and
or
dec
or
sub
xor
add
pop
jmp
pop
pushw
sub
jmp
mov
add
pop
sub
mov
pop
pop
add
jmp
add
sub
mov
jmp
mov
jmp
sub
sub
add
sub
jmp
sub
xor
xor
sub
jmp
neg
inc
not
xor
add
pop
add
sub
pop
mov
pop
sub
push
mov
sub
pop
mov
pop
push
push
mov
jmp
mov
or
sub
add
add
sub
pop
sub
add
add
sub
pushl
pop
add
xor
xor
xor
mov
mov
push
jmp
shlb
pushf
jmp
mov
add
push
mov
jmp
push
mov
add
add
xchg
mov
push
mov
jmp
mov
addl
popl
push
mov
add
pop
pushl
pop
add
push
mov
and
shr
push
mov
sub
sub
neg
not
sub
jmp
or
pushl
jmp
add
push
mov
add
pop
xchg
pop
push
jmp
mov
push
pushl
pop
push
mov
jmp
mov
push
mov
jmp
mov
push
jmp
xor
pop
jmp
push
mov
jmp
xor
jmp
push
mov
mov
add
sub
xor
jmp
add
shr
not
xchg
dec
xchg
shr
xor
jmp
sub
xchg
pop
push
mov
push
mov
shr
push
mov
shl
sub
dec
add
add
sub
add
pop
sub
xor
and
jmp
pop
pop
xor
mov
jmp
lods
push
mov
jmp
push
mov
mov
sub
mov
mov
and
mov
jmp
mov
mov
pop
pop
add
add
sub
pop
jmp
add
sub
xor
xor
xor
mov
mov
mov
jmp
pop
push
push
jmp
push
mov
jmp
push
mov
xor
pop
mov
mov
add
neg
not
and
dec
xor
push
mov
shr
inc
or
sub
xor
pop
mov
jmp
add
sub
jmp
mov
push
mov
add
jmp
add
jmp
mov
sub
pop
xor
jmp
sub
mov
mov
sub
mov
mov
jmp
mov
sub
add
jmp
sub
pushl
pop
jmp
xchg
mov
mov
mov
push
mov
or
sub
jmp
mov
add
jmp
push
mov
push
pushl
pop
add
add
add
jmp
push
mov
add
pop
add
and
pop
shr
xor
xor
xor
jmp
mov
sub
pop
add
neg
add
and
mov
push
mov
add
add
xchg
pop
push
push
mov
mov
pop
and
neg
jmp
add
sub
xchg
pop
mov
push
jmp
pop
mov
mov
jmp
mov
mov
push
mov
mov
shl
jmp
neg
shr
sub
sub
pop
add
push
mov
jmp
sub
mov
push
pop
add
pushl
pop
add
jmp
pushl
pop
popl
mov
and
pushf
jmp
sub
sub
sub
add
pop
sub
add
add
add
pushl
pop
add
sub
push
push
mov
mov
sub
add
add
pop
jmp
pop
jmp
push
mov
push
mov
add
push
mov
add
pop
push
mov
add
pop
xchg
pop
xor
xor
xor
mov
and
pushf
jmp
add
xchg
pop
sub
pushl
pop
add
push
mov
jmp
add
mov
pop
not
push
mov
sub
pop
add
add
mov
push
mov
add
add
xchg
pop
push
mov
pushl
pop
jmp
neg
inc
add
add
sub
sub
pop
pop
xchg
mov
jmp
add
add
jmp
pop
push
push
mov
mov
add
pop
sub
jmp
pop
sub
mov
sub
mov
addl
jmp
pop
sub
add
add
push
mov
jmp
mov
sub
jmp
shl
inc
shl
push
jmp
mov
mov
add
mov
add
xchg
pop
rolb
pushf
jmp
sub
mov
pushl
pop
push
mov
push
mov
jmp
mov
sub
push
mov
xor
pop
jmp
pushl
pushl
jmp
xor
pop
add
add
push
push
push
pop
add
mov
pop
or
or
inc
push
mov
or
pop
sub
add
pop
jmp
mov
sub
mov
mov
add
pop
jmp
pushl
popf
pop
sbb
pushf
jmp
add
xor
jmp
push
mov
add
sub
xor
xor
jmp
push
pop
add
add
xchg
pop
push
mov
jmp
pop
sub
sub
push
jmp
mov
mov
sub
add
add
sub
add
pop
jmp
sub
dec
sub
mov
pushl
mov
add
add
and
pushl
jmp
mov
add
sub
xchg
pop
mov
jmp
pushl
pop
jmp
add
add
xchg
jmp
lods
push
sub
jmp
mov
mov
and
add
xor
sub
sub
add
add
add
mov
add
add
push
mov
pushl
pop
popl
mov
add
push
jmp
xor
pushl
pop
jmp
mov
mov
push
push
pop
sub
jmp
pop
or
mov
add
xchg
push
push
mov
pushl
mov
add
popl
xchg
push
notl
pop
xchg
xchg
pop
xchg
push
jmp
mov
add
sub
xchg
pop
mov
jmp
sub
xchg
pop
xor
jmp
sub
add
pop
xchg
mov
sub
mov
mov
sub
add
add
mov
add
xor
xor
xor
mov
mov
push
jmp
mov
mov
xor
not
shl
xor
push
mov
mov
xor
mov
add
xor
pop
sub
or
add
add
sub
push
mov
jmp
pop
add
sub
xor
xor
xor
jmp
mov
rolw
pushf
jmp
add
ret
jmp
push
mov
sub
pop
add
add
mov
push
push
pop
sub
mov
mov
add
add
pop
add
xchg
pop
add
xor
jmp
push
mov
sub
add
add
sub
add
pushl
pop
push
mov
push
mov
shr
add
inc
add
add
add
pop
add
jmp
mov
add
jmp
push
mov
mov
jmp
mov
push
jmp
pushl
pop
add
push
mov
jmp
pop
push
mov
mov
jmp
mov
jmp
pop
jmp
push
pop
shl
xor
shl
xor
and
pop
jmp
pushl
pushl
jmp
pop
push
mov
and
or
push
jmp
pop
add
mov
pop
sub
add
add
pop
add
mov
jmp
add
sub
mov
xorl
jmp
addl
pop
push
jmp
push
mov
sub
add
push
mov
and
sub
jmp
pop
add
popl
mov
mov
jmp
push
popl
addl
pushl
pop
add
add
add
xor
xor
xor
pop
bswap
push
mov
jmp
xor
pop
mov
push
jmp
mov
push
mov
push
jmp
pop
add
sub
mov
push
mov
mov
add
pop
sub
add
sub
sub
add
pop
xchg
mov
mov
pushl
mov
add
jmp
add
pop
add
jmp
push
mov
add
push
jmp
add
push
mov
mov
jmp
pushl
popf
pop
sbb
pushf
jmp
pop
add
mov
add
add
xchg
pop
push
mov
jmp
mov
push
jmp
mov
pop
xor
mov
jmp
addl
pop
pop
jmp
push
mov
mov
pop
pushl
mov
sub
mov
jmp
not
sub
shr
and
push
mov
add
pop
mov
pop
jmp
and
shl
sub
push
mov
xor
xor
pushl
jmp
sub
jmp
pop
push
jmp
xorl
mov
push
push
jmp
add
xchg
jmp
mov
add
xor
add
add
sub
pop
xchg
pop
add
jmp
mov
push
mov
add
sub
xchg
pop
push
popl
addl
pop
add
push
mov
add
pop
xchg
mov
jmp
pop
sub
mov
mov
add
neg
add
shr
jmp
mov
push
mov
xor
pop
sub
add
add
pushl
pop
push
push
pop
add
add
xchg
mov
add
xchg
mov
push
mov
jmp
xor
xor
jmp
push
push
mov
shl
push
mov
jmp
pop
add
jmp
mov
add
jmp
pop
sub
pop
push
addl
mov
push
mov
add
add
xchg
pop
push
mov
neg
dec
shr
push
mov
mov
xor
jmp
sub
xchg
pop
mov
jmp
mov
push
jmp
pushl
mov
jmp
mov
push
push
pop
add
add
xor
xor
jmp
popl
jmp
sub
sub
mov
add
inc
add
or
add
or
pop
push
mov
push
push
mov
mov
pop
add
mov
add
shr
jmp
mov
addl
pushl
pushl
jmp
sub
mov
push
pop
push
mov
jmp
pop
push
push
mov
mov
xor
mov
push
jmp
mov
xor
mov
add
add
pop
add
add
push
mov
neg
shr
dec
push
mov
sub
pop
sub
pop
sub
add
jmp
pop
shr
push
mov
jmp
mov
push
mov
push
jmp
mov
jmp
mov
mov
pop
pop
sub
mov
push
mov
jmp
pop
push
push
mov
jmp
pushl
pop
popl
pop
push
mov
add
add
jmp
mov
push
mov
and
jmp
xchg
xor
and
sub
xor
sub
add
add
pop
sub
jmp
push
addl
pop
jmp
pop
push
mov
add
sub
xchg
pop
mov
jmp
push
mov
xor
jmp
mov
mov
add
pop
sub
add
add
sub
jmp
mov
add
jmp
add
add
add
push
jmp
pushw
mov
push
mov
push
mov
mov
push
mov
mov
mov
add
pop
pushl
pop
push
push
mov
push
mov
add
jmp
shr
shl
xor
mov
jmp
mov
push
jmp
push
mov
push
mov
mov
xor
jmp
push
notl
jmp
sub
or
xor
add
jmp
add
jmp
or
add
add
add
pop
push
mov
neg
add
add
jmp
pop
pop
sub
jmp
push
mov
mov
add
pop
pushl
pop
push
mov
add
jmp
mov
pop
dec
jmp
add
push
mov
jmp
pop
push
push
push
pop
sub
shl
sub
mov
pop
add
pop
push
mov
pushl
pop
popl
mov
xor
push
push
jmp
push
push
mov
jmp
mov
add
pushl
pop
push
push
jmp
push
mov
and
pop
jmp
mov
add
add
sub
mov
mov
jmp
jmp
add
mov
push
push
jmp
pop
push
mov
push
mov
add
jmp
pop
xor
mov
add
or
pop
push
mov
mov
add
pop
sub
pop
push
mov
add
pop
add
push
mov
sub
jmp
shl
push
mov
add
xor
pop
xor
pop
and
mov
jmp
push
push
mov
mov
jmp
pop
xor
movzbl
mov
push
jmp
pop
add
xor
xor
xor
pop
imul
pushw
mov
jmp
mov
pop
sub
pop
sub
pop
pushl
mov
add
push
jmp
pop
xor
xor
xor
mov
mov
push
jmp
pop
pop
sub
mov
push
push
push
pop
and
sub
mov
pop
mov
xor
pop
sub
add
add
pop
sub
mov
jmp
add
push
mov
add
jmp
pop
dec
sub
xor
jmp
add
xchg
pop
push
mov
push
mov
add
jmp
mov
sub
pop
push
mov
mov
dec
neg
jmp
mov
pushw
mov
mov
pushw
mov
jmp
mov
pop
add
jmp
push
mov
jmp
sub
xchg
pop
jmp
xor
pop
jmp
pushw
jmp
mov
push
mov
add
or
not
shl
or
jmp
lods
sub
add
jmp
neg
neg
push
mov
neg
sub
mov
mov
jmp
mov
add
sub
xchg
pop
mov
jmp
mov
mov
and
add
add
pop
pop
add
push
mov
add
pop
xor
xor
xor
pop
mov
add
push
mov
jmp
add
push
jmp
shl
add
mov
pop
jmp
shr
xor
sub
mov
jmp
pop
mov
jmp
mov
add
pushl
pop
push
mov
jmp
inc
xchg
neg
jmp
mov
xor
pop
sub
pop
sub
pop
xor
movzbl
push
mov
jmp
mov
mov
add
pop
sub
add
add
mov
jmp
push
mov
push
mov
add
pop
push
mov
jmp
pop
add
add
or
shl
pushl
push
jmp
mov
pushl
jmp
mov
pop
add
jmp
add
jmp
mov
sub
pop
mov
mov
sub
mov
mov
jmp
xor
movzbw
push
mov
jmp
push
subl
pop
add
mov
sub
mov
mov
add
push
mov
add
add
sub
pop
sub
mov
pushl
pushl
pop
push
jmp
mov
add
pop
xchg
pop
add
pushf
jmp
xor
not
xchg
xchg
push
mov
push
mov
jmp
pushl
pushl
pop
push
mov
push
jmp
add
pushl
mov
add
push
mov
add
add
jmp
mov
push
jmp
pop
push
mov
jmp
add
pop
push
mov
add
pop
sub
mov
jmp
pushl
pop
jmp
movzbw
push
pushf
jmp
push
mov
mov
add
add
push
push
mov
jmp
push
mov
inc
shl
jmp
add
jmp
pop
add
pop
jmp
add
pop
xor
xor
mov
add
sub
push
jmp
push
mov
add
jmp
xor
pushl
pushl
pop
add
push
jmp
push
mov
mov
pop
push
mov
add
push
jmp
sub
jmp
pop
sub
xchg
pop
mov
push
mov
add
pop
mov
jmp
pop
xchg
pop
mov
jmp
xor
not
push
mov
jmp
and
add
push
jmp
mov
push
mov
add
push
mov
jmp
dec
xchg
not
add
mov
mov
add
sub
jmp
sub
sub
add
add
sub
sub
mov
mov
jmp
inc
xor
jmp
pop
xor
jmp
pop
jmp
pop
jmp
push
mov
jmp
mov
push
mov
mov
sub
pop
jmp
popl
jmp
mov
xor
push
jmp
pop
sub
pop
add
add
mov
add
push
mov
add
pop
xor
xor
xor
mov
push
mov
add
push
mov
add
jmp
shr
sub
and
shl
add
sub
pop
and
pop
xor
jmp
xor
add
pop
sub
jmp
pop
sub
mov
push
jmp
xor
sub
jmp
push
mov
sub
pop
xchg
pop
push
popl
jmp
mov
pop
add
pop
pop
add
push
mov
sub
mov
jmp
and
pop
jmp
pop
add
push
push
jmp
mov
mov
add
push
mov
push
jmp
add
xchg
mov
popl
jmp
sub
jmp
pop
pop
push
mov
jmp
mov
add
pushl
pushl
jmp
add
pop
shl
push
mov
xor
sub
pop
mov
pop
push
mov
shl
add
or
sub
add
pop
add
sub
pop
jmp
not
xchg
sub
mov
push
sub
mov
mov
jmp
pop
not
xchg
dec
xchg
neg
not
add
jmp
mov
mov
xor
mov
add
add
pushl
mov
jmp
or
shl
add
add
jmp
mov
mov
pop
not
add
add
mov
add
jmp
mov
jmp
inc
add
add
pop
push
mov
add
sub
xchg
pop
jmp
negl
pushf
jmp
sub
mov
mov
sub
add
add
pop
push
push
mov
add
add
pop
xor
xor
xor
mov
xor
pushf
jmp
pop
xchg
pop
bt
pushf
jmp
push
mov
jmp
push
pop
and
not
shr
push
jmp
pop
sub
xor
jmp
xchg
mov
mov
mov
add
push
sub
mov
jmp
or
sub
add
mov
pop
sub
add
add
pushl
pop
add
xor
xor
xor
mov
imul
movzbw
push
mov
jmp
mov
push
mov
sub
jmp
pop
add
jmp
sub
pop
push
push
mov
xor
pop
mov
add
push
mov
xor
pop
mov
push
mov
add
push
mov
mov
add
jmp
pushl
pushl
pop
add
jmp
pop
add
pop
xor
xor
xor
pop
jmp
mov
push
jmp
add
push
mov
sub
add
add
pop
xchg
jmp
sub
shl
push
mov
jmp
add
pop
push
mov
shl
shr
add
push
jmp
jmp
add
add
sub
sub
sub
push
mov
and
jmp
mov
push
mov
add
add
xchg
pop
add
mov
pop
jmp
pop
jmp
shr
push
mov
sub
sub
add
pop
sub
add
add
pop
push
mov
sub
add
add
pop
push
pushl
mov
add
jmp
mov
addl
mov
add
jmp
inc
inc
inc
not
jmp
xor
popw
jmp
xor
pop
push
mov
sub
add
add
pop
add
add
sub
add
add
sub
pop
push
mov
add
mov
add
mov
jmp
pop
add
jmp
pop
xor
pushl
pop
jmp
add
add
push
mov
add
add
sub
pop
xchg
mov
push
mov
add
add
xchg
pop
sub
mov
jmp
shr
not
shr
xor
sub
pop
pop
xchg
mov
mov
mov
sub
pushl
mov
add
push
push
pop
push
mov
add
jmp
pushl
pop
push
push
pop
push
mov
mov
jmp
pop
not
sub
add
neg
not
sub
sub
add
add
jmp
push
mov
add
pop
mov
mov
push
mov
add
add
xchg
pop
shl
shl
or
and
shl
add
and
mov
push
jmp
pop
popl
jmp
pop
mov
push
mov
add
push
mov
add
pop
xchg
pop
mov
xor
mov
add
push
push
mov
xor
and
or
jmp
add
not
push
jmp
pop
add
push
mov
add
sub
jmp
sub
mov
pushl
jmp
pop
pushl
pop
sub
jmp
mov
pop
shr
xor
add
mov
mov
add
jmp
push
mov
add
sub
xchg
pop
jmp
pop
and
shr
push
xchg
not
xchg
pop
jmp
pop
push
push
jmp
add
add
xchg
pop
push
push
jmp
pop
add
push
mov
add
pop
push
push
jmp
dec
inc
add
xor
or
add
mov
mov
add
sub
jmp
mov
push
mov
mov
pop
xor
jmp
sub
mov
push
pop
push
mov
jmp
pushl
pop
push
push
pop
push
jmp
mov
pop
add
mov
jmp
lods
xor
push
mov
jmp
sub
mov
mov
neg
jmp
xor
add
pop
push
push
pop
add
pushl
pop
push
mov
add
add
xor
xor
xor
pop
xor
xor
xor
mov
jmp
add
mov
jmp
pop
add
push
mov
not
shr
sub
add
pop
push
jmp
add
push
mov
push
mov
mov
pop
add
jmp
mov
add
add
sub
mov
add
add
sub
mov
add
jmp
push
mov
sub
pop
xor
push
mov
mov
jmp
mov
mov
push
mov
push
mov
jmp
add
xor
xor
xor
mov
add
push
mov
jmp
mov
jmp
mov
mov
add
add
xchg
pop
add
sub
mov
pushl
pushl
pop
sub
mov
push
mov
addl
pop
add
add
xchg
jmp
pushl
mov
sub
mov
mov
push
jmp
xchg
mov
mov
jmp
mov
xchg
not
xchg
shl
sub
shl
inc
jmp
pop
xor
jmp
push
mov
push
pop
push
push
jmp
push
mov
dec
dec
jmp
push
mov
push
jmp
mov
add
add
jmp
mov
push
mov
add
add
xchg
jmp
mov
sub
jmp
push
mov
jmp
pop
neg
dec
push
jmp
mov
push
mov
addl
mov
add
jmp
pushl
pop
add
push
mov
add
jmp
add
pop
push
mov
jmp
mov
push
mov
add
push
push
jmp
pushl
pop
add
xor
pop
and
pushl
pop
push
push
pop
add
add
push
pushl
pop
popl
pop
shr
xor
xor
xor
jmp
push
mov
add
mov
add
mov
push
mov
mov
push
jmp
mov
mov
xchg
not
xchg
and
push
mov
jmp
pushl
pop
jmp
addl
popl
addl
mov
add
push
push
mov
and
xor
neg
and
not
sub
mov
pop
shl
shl
inc
and
add
jmp
mov
sub
pop
xchg
pop
mov
mov
push
jmp
push
mov
sub
pop
sub
mov
mov
dec
jmp
mov
mov
add
xor
pushl
pop
push
mov
jmp
pop
xor
pop
add
jmp
pop
xchg
mov
mov
push
jmp
sub
pushf
jmp
pop
popl
jmp
sub
mov
jmp
pushl
jmp
mov
push
mov
jmp
mov
add
push
mov
jmp
pop
pushl
pop
jmp
pop
push
mov
add
sub
xchg
pop
mov
jmp
mov
not
push
mov
xor
pop
not
shl
jmp
push
mov
add
add
jmp
push
mov
add
sub
shr
not
add
add
sub
push
mov
mov
sub
sub
pop
pop
add
add
sub
add
mov
jmp
pushl
pop
add
shr
push
mov
sub
pop
jmp
pop
popl
pop
add
jmp
xor
xor
xor
xchg
jmp
mov
mov
pop
pop
pop
mov
pop
push
mov
sub
mov
push
mov
inc
inc
xchg
not
xchg
xor
shl
xor
jmp
xchg
pop
rorw
pushf
jmp
push
mov
neg
jmp
mov
add
add
add
xor
xor
xor
pop
and
sub
push
mov
sub
shl
add
push
mov
sub
pop
sub
pop
jmp
pop
push
mov
xor
sub
mov
mov
add
pop
push
mov
add
pop
not
xor
add
add
sub
pop
mov
pop
jmp
mov
push
mov
subl
add
addl
pop
pop
jmp
add
xchg
pop
push
mov
jmp
add
sub
mov
mov
add
pop
sub
mov
pushl
pop
popl
pop
xor
xor
xor
mov
mov
push
pushf
jmp
add
push
pushl
pop
popl
pop
push
mov
not
mov
pop
not
or
add
shl
shr
add
sub
sub
sub
pop
jmp
push
mov
mov
push
mov
add
jmp
sub
sub
add
add
jmp
mov
add
jmp
xor
pop
pop
and
pop
shr
push
mov
jmp
push
mov
mov
inc
and
add
neg
neg
xor
add
pop
push
mov
add
add
sub
mov
add
push
pushl
pop
jmp
add
xor
mov
jmp
mov
not
shr
sub
xor
push
jmp
mov
jmp
add
push
mov
jmp
add
sub
xor
jmp
shr
dec
or
xor
add
pop
push
mov
jmp
xor
mov
xor
pushf
jmp
dec
shl
inc
sub
or
pop
neg
xor
jmp
add
mov
pop
shl
shr
shl
or
sub
sub
pop
mov
mov
add
mov
xor
pop
and
mov
sub
mov
sub
jmp
mov
push
jmp
add
sub
xchg
pop
mov
push
jmp
add
subl
pop
pop
jmp
sub
mov
jmp
mov
mov
dec
neg
xor
sub
add
add
sub
sub
push
mov
inc
shr
sub
neg
neg
add
sub
pop
pop
jmp
push
push
jmp
add
sub
push
mov
sub
mov
mov
inc
dec
sub
push
mov
mov
pop
pop
sub
mov
add
add
mov
push
jmp
xor
shl
inc
inc
and
push
mov
or
jmp
or
or
inc
add
mov
pop
addl
add
subl
pop
mov
push
mov
mov
push
mov
inc
neg
sub
push
mov
jmp
mov
dec
sub
jmp
add
push
mov
jmp
add
mov
pop
sub
mov
mov
sub
mov
jmp
mov
sub
mov
mov
sub
add
pop
add
jmp
push
mov
add
pop
xchg
pop
sub
sub
mov
jmp
mov
mov
pop
xor
pop
xor
sub
pop
add
add
jmp
pop
add
xchg
mov
push
mov
shl
or
sub
add
jmp
mov
push
mov
add
add
xchg
pop
popl
mov
push
mov
or
xor
or
inc
neg
xor
add
pop
add
xor
jmp
pop
add
or
jmp
add
jmp
pushl
pushl
jmp
mov
add
jmp
and
xor
add
pop
add
xchg
pop
push
jmp
sub
mov
mov
dec
jmp
pop
or
pop
shr
push
mov
sub
sub
add
pop
shl
push
push
mov
mov
pop
sub
pop
push
mov
add
jmp
xor
xor
not
xchg
mov
push
mov
mov
jmp
pop
push
push
jmp
shl
neg
shl
add
jmp
mov
add
push
mov
add
pop
xor
xor
xor
mov
jmp
push
mov
jmp
push
mov
jmp
mov
mov
sub
jmp
xor
pop
dec
add
jmp
push
push
mov
push
mov
add
add
xchg
jmp
add
pop
pop
push
push
mov
xchg
dec
jmp
push
push
pop
sub
add
add
mov
add
xor
xor
xor
pop
add
xchg
mov
test
pushf
jmp
mov
mov
mov
mov
add
push
jmp
push
pop
add
sub
xchg
mov
jmp
add
add
mov
jmp
mov
mov
add
add
add
pop
neg
inc
jmp
pop
push
mov
jmp
xor
xor
xor
pushl
pushl
pop
add
sub
jmp
mov
push
jmp
push
mov
mov
shr
push
mov
sub
xchg
jmp
shr
sub
mov
jmp
sub
mov
push
mov
xor
push
notl
pop
jmp
pop
add
pop
push
jmp
mov
pushl
mov
jmp
mov
push
mov
neg
push
notl
jmp
pop
xchg
jmp
sub
addl
subl
jmp
shl
and
push
mov
push
pop
jmp
shr
add
sub
pop
xchg
mov
mov
jmp
add
pop
add
xor
push
push
push
pop
jmp
push
mov
add
push
mov
neg
neg
or
jmp
sub
and
jmp
pop
add
pop
push
mov
sub
pop
xor
jmp
mov
push
jmp
xor
xor
mov
mov
mov
shr
xor
push
jmp
xchg
pop
add
push
pushl
pushl
pop
add
popl
pop
push
mov
push
mov
add
pop
push
mov
add
pop
xchg
jmp
sub
mov
mov
mov
mov
add
jmp
pop
add
xchg
mov
xor
movzbl
cmp
je
pushl
pushl
jmp
add
add
xor
jmp
mov
xor
add
add
pop
push
push
pop
jmp
mov
push
mov
add
push
push
mov
mov
jmp
pushl
mov
jmp
mov
shl
inc
sub
jmp
add
add
add
pop
add
xchg
mov
push
mov
push
mov
add
mov
push
mov
add
add
xchg
pop
add
xchg
jmp
xor
add
pop
add
pushl
pop
add
sub
mov
jmp
push
mov
push
mov
push
pop
jmp
push
mov
xor
pop
jmp
add
xor
jmp
shr
sub
add
sub
mov
pop
add
add
mov
push
mov
add
add
xchg
pop
mov
sub
mov
push
pop
push
jmp
pop
sub
pop
sub
sub
add
push
mov
add
or
jmp
mov
push
push
mov
mov
add
sub
sub
jmp
xor
xor
pop
push
jmp
mov
mov
push
mov
mov
add
jmp
mov
push
push
popl
addl
pop
push
push
jmp
pop
push
mov
add
add
xchg
pop
pushl
jmp
pop
shl
push
mov
or
or
shr
not
sub
xor
jmp
pop
add
add
xchg
pop
add
pop
push
mov
jmp
mov
add
push
push
mov
sub
jmp
add
pop
sub
sub
jmp
add
add
jmp
mov
push
mov
jmp
push
mov
add
sub
pop
push
mov
sub
not
not
or
and
push
mov
mov
sub
pop
sub
sub
add
mov
jmp
and
xor
jmp
add
sub
sub
mov
add
xchg
pop
push
jmp
add
xchg
pop
xor
add
pop
add
push
mov
jmp
popl
mov
mov
jmp
add
sub
mov
push
mov
add
add
xchg
pop
xor
jmp
push
push
mov
mov
jmp
mov
mov
xor
jmp
dec
sub
dec
xor
add
add
pop
sub
jmp
mov
add
push
mov
mov
add
push
mov
jmp
add
sub
xchg
pop
mov
mov
sub
sub
jmp
mov
sub
mov
mov
xor
not
jmp
mov
add
pop
inc
jmp
push
mov
mov
and
add
push
jmp
sub
pop
push
mov
mov
and
neg
neg
dec
add
jmp
sub
mov
pushl
pop
popl
pop
mov
push
jmp
mov
push
jmp
mov
mov
movzbw
push
pushf
jmp
mov
push
mov
or
xor
sub
jmp
pop
add
pushl
mov
add
add
sub
mov
jmp
add
add
xchg
pop
push
mov
push
pop
add
add
push
pushl
pop
popl
mov
push
mov
jmp
sub
add
add
pop
jmp
mov
push
mov
push
push
mov
jmp
xor
add
or
jmp
mov
sub
mov
add
sub
mov
push
mov
mov
add
add
push
pushl
pop
popl
pop
xchg
mov
movsbw
pushw
mov
jmp
neg
push
mov
add
pop
push
mov
not
dec
add
jmp
mov
pushl
pop
popl
pop
shll
pushf
jmp
pop
xchg
pop
add
movzwl
push
push
jmp
push
push
popl
addl
pushl
pushl
jmp
mov
add
pop
xchg
pop
sub
pop
sub
sub
jmp
push
push
pop
shr
jmp
pop
sub
xchg
jmp
add
sub
xchg
pop
mov
push
push
mov
mov
pop
push
mov
mov
pop
pop
sub
mov
mov
mov
pop
pop
jmp
add
sub
xor
xor
xor
mov
mov
jmp
add
add
add
sub
jmp
mov
add
push
mov
jmp
push
mov
add
pop
push
push
jmp
sub
pop
pop
push
mov
jmp
mov
pushw
mov
incb
pop
pushw
jmp
push
mov
sub
pop
xchg
mov
mov
push
mov
mov
mov
xor
mov
sub
mov
mov
add
add
xchg
pop
neg
jmp
sub
push
mov
mov
jmp
push
mov
add
add
jmp
push
pushl
pop
popl
jmp
mov
push
jmp
push
push
mov
mov
add
pop
jmp
pushl
popf
pop
adc
pushf
jmp
pop
push
push
jmp
or
push
mov
add
pop
sub
pop
add
add
sub
push
mov
or
add
and
sub
add
pop
mov
pop
mov
jmp
push
mov
add
push
push
push
mov
mov
pop
mov
pop
xor
xor
add
mov
add
add
xchg
mov
push
pushl
jmp
mov
push
jmp
push
mov
mov
add
push
mov
add
mov
add
xchg
pop
add
pop
push
push
push
pop
and
and
xor
mov
jmp
sub
mov
push
pop
mov
sub
jmp
add
shr
add
jmp
pop
pop
push
mov
jmp
xorl
pop
xor
mov
add
push
push
mov
jmp
and
sub
push
notl
jmp
inc
or
sub
mov
jmp
add
pop
add
xchg
pop
or
je
pushl
pushl
jmp
mov
add
push
jmp
add
pop
add
xchg
mov
shr
push
mov
incl
pop
or
sub
sub
mov
subl
mov
add
push
mov
add
pop
jmp
pushl
mov
add
add
sub
mov
mov
push
push
mov
or
sub
not
sub
mov
pop
add
pop
sub
add
add
jmp
push
pushl
pop
add
add
add
xchg
mov
jmp
add
pushl
pop
jmp
and
and
neg
push
push
pop
or
or
jmp
sub
shr
shr
sub
sub
add
add
pop
jmp
push
mov
inc
shl
shr
add
add
pop
add
xor
xor
xor
pop
dec
inc
push
mov
sub
and
pop
add
jmp
mov
add
pop
push
jmp
push
sub
mov
push
jmp
pop
jmp
mov
mov
jmp
pop
mov
jmp
push
mov
mov
push
pop
pop
jmp
mov
add
jmp
or
shl
push
push
jmp
pop
sub
mov
push
push
pop
xor
xor
jmp
pop
push
push
mov
not
dec
dec
shr
xor
mov
pop
xor
inc
shl
xor
and
mov
add
push
mov
mov
jmp
pushl
pop
add
sub
push
mov
and
or
add
neg
add
sub
pop
sub
add
add
add
push
mov
and
inc
jmp
pushl
jmp
xchg
pop
popl
jmp
push
mov
jmp
add
pop
jmp
sub
sub
sub
add
add
mov
add
push
mov
jmp
push
mov
push
mov
add
sub
jmp
shr
xor
xor
pop
shr
push
mov
sub
sub
add
pushl
pop
add
add
sub
sub
add
sub
pushl
pop
push
jmp
mov
notl
pop
xchg
jmp
mov
push
mov
push
mov
inc
sub
add
jmp
shl
push
mov
shr
dec
dec
not
dec
xor
add
pop
xor
pop
mov
mov
add
or
neg
shr
and
push
jmp
shl
sub
add
pop
add
pop
sub
push
pushl
mov
add
popl
pop
mov
sub
mov
push
mov
xor
xor
neg
jmp
sub
xchg
pop
mov
mov
push
push
mov
jmp
pop
push
mov
push
pop
push
mov
and
neg
xor
or
pop
add
and
sub
sub
sub
add
add
add
pop
jmp
pop
jmp
push
pop
push
mov
not
shr
sub
add
jmp
push
mov
mov
sub
pop
push
mov
mov
jmp
xor
mov
pop
dec
sub
add
pop
add
push
mov
jmp
push
push
pop
jmp
add
jmp
xor
pop
jmp
mov
push
mov
add
sub
xchg
jmp
xor
add
jmp
mov
mov
push
mov
jmp
push
pop
shl
or
not
inc
push
mov
jmp
mov
push
jmp
xchg
pop
mov
push
mov
mov
pop
sub
mov
mov
add
add
pop
sub
push
mov
sub
add
add
xor
pop
jmp
mov
add
pop
xchg
pop
push
push
mov
jmp
mov
push
pop
push
push
mov
jmp
pop
pop
sub
mov
add
not
neg
push
push
mov
push
mov
push
xorl
mov
add
push
mov
xor
pop
pop
jmp
add
popl
mov
imul
push
pushf
jmp
sub
mov
push
mov
jmp
add
add
jmp
mov
sub
add
add
pop
push
mov
mov
jmp
push
mov
sub
mov
mov
sub
add
and
dec
add
sub
add
add
pop
add
push
mov
pushl
pop
popl
pop
jmp
mov
add
jmp
xor
xor
jmp
push
pop
jmp
shr
sub
jmp
add
add
push
jmp
mov
add
add
jmp
mov
pop
add
jmp
mov
add
sub
jmp
push
mov
jmp
mov
jmp
mov
push
pop
jmp
mov
push
push
jmp
mov
mov
jmp
sub
pop
push
mov
add
add
sub
sub
jmp
add
push
push
mov
add
or
add
sub
mov
pop
add
pop
xchg
pop
mov
sub
mov
push
pop
add
sub
jmp
pushl
pop
add
push
mov
jmp
push
mov
mov
jmp
pushl
pop
popl
mov
cmp
pushf
jmp
xor
pop
sub
push
mov
xor
pop
sub
mov
mov
add
sub
dec
add
sub
add
add
pop
add
sub
pushl
jmp
sub
mov
jmp
mov
mov
push
mov
push
push
jmp
add
jmp
push
push
jmp
mov
sub
jmp
pop
mov
jmp
pushl
pushl
jmp
pushl
pop
push
push
pop
add
jmp
addl
pop
sub
pop
jmp
sub
mov
mov
jmp
mov
mov
or
or
jmp
push
mov
add
or
not
push
jmp
pop
push
sub
mov
push
mov
jmp
mov
push
mov
jmp
and
sub
sub
pop
xor
xor
xor
pop
jmp
shl
and
shl
jmp
pop
mov
push
mov
jmp
mov
mov
push
push
pop
xor
push
mov
jmp
pop
add
add
xor
xor
xor
mov
shr
push
mov
jmp
mov
push
mov
mov
push
mov
push
subl
jmp
sub
mov
addl
jmp
and
pop
jmp
mov
add
pop
push
mov
add
pop
xchg
jmp
push
push
push
push
jmp
add
push
mov
jmp
mov
push
push
mov
mov
mov
jmp
push
mov
push
pop
neg
shr
sub
xor
mov
pop
sub
sub
add
add
add
pop
push
mov
sub
pop
push
jmp
not
push
push
mov
mov
pop
not
or
add
xor
xor
sub
pop
push
mov
add
xor
or
mov
add
add
jmp
sub
jmp
pushl
pop
push
mov
add
add
xor
xor
xor
pop
jmp
mov
add
add
push
mov
push
mov
sub
pop
or
xor
and
sub
add
pop
sub
add
add
sub
pop
push
jmp
xor
mov
bts
pushf
jmp
sub
mov
pop
sub
jmp
sub
mov
add
sub
xor
mov
add
add
xor
pop
add
pushl
pop
add
add
xor
xor
xor
mov
pushl
pop
jmp
add
push
mov
jmp
pop
neg
shl
push
jmp
mov
mov
add
add
sub
mov
add
add
sub
push
push
mov
xor
and
shl
add
mov
pop
sub
sub
add
jmp
push
pushl
mov
add
popl
mov
sub
mov
mov
add
sub
xchg
pop
mov
mov
add
add
xor
xor
xor
mov
jmp
pushl
mov
add
push
jmp
mov
pushl
pop
jmp
add
mov
add
sub
mov
push
pop
sub
add
push
mov
xor
sub
add
add
pop
mov
add
xchg
pop
mov
push
jmp
pop
mov
push
mov
push
mov
push
mov
mov
xchg
not
xchg
inc
add
mov
pop
mov
pop
xor
pop
pop
jmp
xchg
pop
and
pop
or
je
push
mov
jmp
mov
push
pop
or
shl
xor
jmp
push
xchg
not
jmp
add
add
pushl
pop
add
and
pop
not
and
push
mov
xor
pop
xor
mov
add
mov
pop
add
push
mov
jmp
mov
add
pushl
pop
push
mov
jmp
push
mov
mov
pop
pop
sub
pop
sub
pop
xor
jmp
mov
sub
jmp
not
add
add
add
add
sub
jmp
pop
add
sub
mov
push
mov
mov
xor
pop
push
mov
shr
xor
sub
mov
add
add
push
mov
not
or
jmp
add
add
mov
add
shr
shl
add
dec
xor
sub
jmp
add
add
pop
jmp
add
add
xchg
pop
or
pushf
jmp
xchg
pop
push
mov
jmp
pushl
pushl
jmp
mov
add
pop
mov
add
add
xor
xor
xor
pop
jmp
push
mov
push
pop
sub
mov
jmp
pop
add
pop
xor
sub
add
add
mov
add
sub
jmp
jmp
pop
pushl
pushl
jmp
pop
push
push
mov
mov
mov
mov
add
push
mov
push
mov
mov
pop
pop
mov
push
mov
add
add
xor
jmp
or
pop
jmp
pop
and
pop
push
jmp
neg
not
sub
xor
pop
mov
pop
push
push
mov
mov
pop
not
and
and
shr
add
add
sub
sub
pop
jmp
add
neg
shl
add
sub
mov
add
sub
push
push
push
mov
mov
pop
mov
pop
sub
mov
mov
add
add
jmp
push
mov
push
mov
push
push
jmp
pop
push
push
mov
add
push
jmp
sub
sub
add
pop
mov
add
and
pushl
pushl
pop
add
push
mov
add
add
xchg
mov
or
shl
push
mov
jmp
push
mov
shl
shr
dec
or
xor
neg
inc
add
push
mov
and
neg
shr
xor
and
pop
or
xor
add
jmp
push
mov
add
neg
jmp
or
sub
xor
pop
jmp
push
pop
dec
jmp
push
addl
jmp
pop
mov
pushl
pop
add
add
add
push
jmp
push
mov
mov
add
push
mov
shl
shr
shr
sub
sub
pop
xor
xor
xor
pop
mov
mov
push
mov
add
jmp
add
add
push
mov
jmp
add
sub
push
pushl
mov
add
jmp
add
push
mov
sub
jmp
push
pop
dec
and
jmp
and
xor
add
pop
pushl
mov
add
add
push
push
jmp
push
mov
inc
neg
shr
shl
xor
push
jmp
mov
sub
mov
mov
push
push
jmp
or
jmp
add
push
mov
not
inc
xor
jmp
pushw
jmp
not
or
dec
push
mov
sub
jmp
mov
mov
push
mov
push
mov
jmp
push
mov
add
add
xchg
mov
jmp
pop
add
sub
mov
jmp
xchg
pop
mov
mov
and
pop
push
push
mov
mov
pop
xor
pop
mov
pop
push
push
pop
pop
not
xchg
jmp
mov
push
jmp
mov
add
jmp
xor
push
mov
jmp
pop
cmp
pop
and
mov
and
mov
add
mov
xchg
loopne
pop
aas
mov
ljmp
pop
mov
mov
pop
dec
loopne
pop
jns
mov
jl
mov
xorl
mov
cmpsl
add
mov
ret
pop
jmp
jmp
pop
fnstenv
mov
inc
cwtl
mov
pop
rorl
cmpsl
popf
mov
insb
int3
mov
dec
jp
pop
arpl
mov
stos
jae
pop
faddp
mov
loopne
mov
jo
mov
out
mov
mov
les
pop
fwait
and
pop
adc
mov
inc
mov
pop
sub
mov
jl
mov
dec
mov
pop
ss
mov
inc
sbb
mov
inc
mov
xor
clc
mov
cltd
or
pop
jmp
mov
sbb
pop
jne
mov
mul
mov
popa
mov
mov
or
mov
fwait
jecxz
pop
lret
pop
push
mov
pop
mov
dec
mov
imul
pop
pushf
mov
mov
or
mov
cmp
pop
ficomps
mov
or
mov
loop
mov
pop
outsb
mov
loopne
mov
mov
mov
sub
mov
pop
mov
sub
orl
pop
and
mov
sbb
mov
or
mov
mov
mov
sahf
sub
mov
cmp
pop
mov
imul
sbb
mov
mov
pop
repnz
pop
cmp
fmuls
pop
hlt
mov
mov
scas
adc
pop
sbb
mov
scas
mov
test
enter
inc
mov
inc
mov
pop
sbb
mov
adc
mov
fbstp
mov
xlat
in
pop
lds
mov
clc
iret
mov
cmp
mov
mov
into
mov
mul
mov
outsb
fisttps
pop
xchg
dec
mov
fistpll
mov
and
pop
lock
pop
push
mov
and
mov
inc
loopne
pop
mov
mov
mov
aad
mov
dec
insb
mov
mov
mov
jae
mov
ret
fwait
mov
add
pop
mov
and
mov
cli
pop
mov
jae
mov
pushf
hlt
mov
pop
orb
bound
mov
sbb
mov
mov
in
mov
sub
mov
popa
out
pop
pop
mov
pop
xlat
cmpsl
mov
mov
mov
pusha
pushf
cld
call
pop
sub
mov
add
cmp
jne
jmp
mov
mov
jmp
add
dec
or
jne
mov
mov
add
mov
xor
lock
jne
lods
xor
push
mov
jmp
pushl
popf
pop
rcll
pushf
jmp
mov
add
push
mov
push
push
jmp
push
mov
push
jmp
mov
push
jmp
pushl
mov
jmp
sub
mov
mov
push
jmp
add
xchg
pop
add
push
mov
push
mov
jmp
add
push
mov
jmp
push
mov
dec
xor
mov
pop
add
pop
jmp
mov
add
or
sub
push
mov
xor
sub
jmp
mov
xor
add
mov
pop
add
mov
add
xor
xor
jmp
mov
add
popl
pop
jmp
and
sub
jmp
add
not
inc
push
push
push
mov
add
jmp
pop
neg
jmp
add
pop
push
mov
add
mov
sub
mov
jmp
pushl
jmp
pop
xchg
pop
push
pushl
mov
add
popl
mov
bts
pushf
jmp
pop
add
sub
jmp
mov
sub
mov
addl
mov
add
jmp
mov
push
mov
add
push
mov
jmp
mov
add
push
jmp
pop
push
mov
sub
jmp
pushl
popf
pop
rclw
pushf
jmp
mov
push
mov
push
jmp
mov
pop
or
pop
push
mov
add
sub
pop
add
push
push
mov
mov
xor
pop
sub
shr
not
sub
add
jmp
push
mov
mov
sub
dec
sub
jmp
push
mov
mov
pop
not
xor
sub
sub
jmp
mov
sub
jmp
sub
xor
jmp
sub
pushl
pop
jmp
add
sub
sub
jmp
sub
mov
mov
xchg
jmp
pop
sub
sub
add
mov
add
add
add
sub
push
jmp
pop
push
mov
jmp
add
pop
sub
sub
jmp
push
mov
not
shl
sub
and
pop
push
jmp
lods
xor
push
mov
jmp
mov
add
add
push
sub
mov
addl
pop
jmp
add
push
push
jmp
add
add
pop
jmp
push
mov
mov
mov
add
mov
add
pop
pushl
pop
jmp
mov
push
mov
addl
mov
push
jmp
add
sub
pop
push
pushl
pop
popl
mov
jmp
mov
push
mov
push
mov
mov
pop
and
jmp
push
mov
add
pop
jmp
sub
sub
sub
sub
add
push
mov
and
xor
add
jmp
mov
add
sub
xchg
pop
mov
push
mov
jmp
add
push
push
pop
jmp
mov
mov
sub
mov
add
push
mov
add
jmp
push
mov
jmp
add
sub
pop
sub
mov
mov
push
notl
pop
xor
sub
add
sub
sub
add
pushl
pop
add
push
pushl
pop
jmp
pushl
mov
jmp
add
pop
jmp
mov
or
not
shr
sub
mov
jmp
pop
sub
sub
pop
xor
xor
xor
pop
mov
xorl
pop
push
mov
add
push
mov
sub
add
push
mov
add
jmp
pushl
pushl
jmp
mov
pop
push
mov
add
pop
add
push
mov
add
sub
sub
mov
add
pushl
pop
add
push
mov
xor
add
jmp
xor
pop
push
mov
jmp
add
pop
xchg
mov
push
mov
jmp
pop
sub
mov
pushl
pop
popl
pop
pushl
pushl
jmp
xor
pushl
mov
add
push
mov
add
add
xchg
pop
jmp
mov
jmp
pop
add
sub
sub
pop
pop
add
push
push
jmp
neg
xor
mov
pop
xor
add
pop
mov
sub
jmp
push
mov
dec
not
not
shr
add
mov
jmp
xchg
pop
sub
mov
mov
add
add
sub
pop
push
jmp
push
mov
add
jmp
push
mov
jmp
mov
add
sub
mov
jmp
mov
push
push
pop
shl
not
jmp
push
pop
add
push
jmp
lods
xor
push
mov
jmp
mov
push
jmp
push
mov
sub
pop
jmp
push
mov
or
jmp
mov
xchg
pop
jmp
add
add
sub
mov
add
xchg
mov
rorl
pushf
jmp
mov
shl
xor
push
mov
sub
jmp
not
xchg
mov
add
push
mov
add
pop
jmp
mov
push
pushl
pop
push
mov
add
add
jmp
mov
push
mov
mov
pop
mov
add
pop
jmp
mov
sub
jmp
add
pop
pushw
mov
jmp
mov
push
jmp
mov
push
mov
sub
mov
mov
jmp
add
add
add
sub
sub
add
mov
add
sub
mov
mov
add
mov
add
xor
xor
xor
mov
pushl
mov
jmp
add
push
mov
or
pop
push
mov
sub
jmp
add
add
xchg
pop
xchg
pop
sub
jmp
pop
push
mov
mov
push
push
jmp
push
mov
push
mov
add
mov
jmp
neg
shl
and
sub
mov
mov
add
addl
add
push
push
push
pop
dec
sub
sub
sub
push
subl
pop
add
jmp
sub
add
add
mov
push
push
pop
add
push
mov
add
pop
xchg
mov
mov
pop
push
push
mov
mov
push
jmp
mov
mov
push
mov
add
sub
jmp
xor
jmp
sub
mov
add
sub
mov
mov
xor
sub
pushl
pop
jmp
sub
pop
xchg
jmp
sub
push
mov
add
pop
pop
sub
mov
mov
add
sub
add
add
sub
pushl
pop
add
xor
xor
xor
mov
jmp
push
mov
add
add
xchg
pop
jmp
add
add
add
sub
sub
pop
jmp
pop
jmp
push
push
mov
add
mov
pop
jmp
push
push
mov
push
mov
shl
jmp
push
pop
push
mov
add
pop
push
mov
add
pop
xchg
pop
push
mov
push
mov
mov
pop
xor
mov
add
jmp
mov
add
jmp
add
pop
xor
xor
xor
mov
mov
push
jmp
add
xchg
pop
push
mov
dec
add
add
and
pop
jmp
mov
mov
pop
add
add
sub
jmp
mov
sub
pop
add
sub
sub
jmp
mov
or
or
push
mov
add
jmp
push
mov
add
xor
not
sub
push
push
jmp
pop
pushl
pop
push
mov
mov
add
add
jmp
sub
add
pop
jmp
mov
push
pop
add
push
mov
jmp
mov
add
sub
push
mov
shl
jmp
push
jmp
pushl
pushl
jmp
pushl
pop
sub
mov
mov
push
jmp
xchg
mov
add
add
add
jmp
mov
add
sub
jmp
mov
jmp
add
jmp
add
xchg
jmp
pushl
pop
push
mov
add
add
xchg
pop
sub
mov
mov
add
push
mov
add
pop
xchg
pop
push
mov
pushl
jmp
push
pop
push
mov
push
mov
push
push
jmp
mov
add
sub
xchg
pop
mov
jmp
pushl
pushl
jmp
push
pushl
pop
popl
pop
mov
push
mov
jmp
add
xor
mov
add
jmp
lods
push
mov
jmp
pop
or
sub
jmp
sub
mov
jmp
xor
xor
xor
push
notl
mov
add
push
push
pop
pop
xor
push
mov
sub
pop
or
xor
add
push
push
jmp
mov
add
push
mov
or
push
jmp
push
pop
mov
sub
mov
add
sub
sub
push
mov
xor
sub
inc
shr
and
add
add
pop
pop
add
sub
jmp
xorl
mov
add
xor
pop
push
incl
mov
add
neg
push
mov
add
mov
push
mov
add
add
xchg
pop
sub
jmp
sub
jmp
sub
pop
mov
push
mov
add
add
xchg
pop
xor
jmp
add
jmp
pushl
popf
pop
sbb
pushf
jmp
add
jmp
pop
push
mov
push
mov
push
mov
mov
pop
sub
pop
add
add
sub
add
pushl
pop
add
xchg
mov
decb
pushf
jmp
pushl
popf
pop
rcrb
pushf
jmp
mov
push
jmp
xor
pop
sub
mov
add
push
mov
push
push
mov
mov
xor
pop
sub
add
add
sub
add
pop
push
mov
jmp
push
push
mov
add
add
push
mov
sub
jmp
add
push
mov
mov
add
mov
add
sub
mov
jmp
pop
add
and
pop
shr
push
mov
jmp
mov
sub
pop
add
push
mov
jmp
push
mov
sub
add
add
addl
pop
pop
mov
add
jmp
push
mov
or
jmp
pop
not
inc
add
and
mov
add
shr
xor
push
mov
jmp
add
sub
xchg
pop
mov
addl
jmp
shl
add
add
pop
and
neg
xor
mov
jmp
push
mov
push
mov
inc
push
jmp
push
mov
xor
xor
xor
not
xchg
mov
add
xor
jmp
mov
sub
jmp
sub
mov
push
pop
push
mov
jmp
push
mov
jmp
sub
add
pop
push
mov
push
pop
pop
pushl
pop
push
mov
add
push
mov
inc
add
or
push
push
mov
jmp
push
mov
and
pop
jmp
mov
add
xor
xor
xor
mov
push
pushl
jmp
sub
mov
add
push
mov
push
mov
mov
sub
mov
add
push
mov
push
mov
mov
pop
or
pop
add
sub
jmp
sub
pop
pop
movzbl
pushl
push
mov
jmp
pop
jmp
push
mov
add
add
xchg
mov
push
mov
jmp
popl
jmp
pop
pushl
pop
jmp
mov
add
add
push
jmp
sub
mov
push
pop
sub
mov
jmp
push
mov
jmp
push
mov
dec
sub
inc
add
or
pop
jmp
add
xor
jmp
mov
and
and
jmp
mov
mov
push
sub
mov
push
pop
xchg
not
xchg
sub
push
push
mov
mov
pop
push
pop
pop
pop
and
jmp
and
pop
push
mov
jmp
mov
push
pop
push
mov
inc
jmp
add
pop
push
mov
jmp
pop
jmp
pushl
jmp
xchg
jmp
pop
add
push
mov
jmp
push
mov
or
shl
jmp
pop
pop
sub
mov
jmp
and
xor
mov
jmp
pop
push
popl
jmp
xchg
jmp
pop
mov
pop
push
jmp
mov
push
jmp
add
mov
add
mov
pop
sub
pop
sub
mov
jmp
push
push
mov
push
mov
add
jmp
add
xchg
mov
xchg
mov
push
push
jmp
pop
push
push
push
pop
shr
inc
dec
sub
mov
jmp
sub
jmp
push
mov
jmp
add
push
mov
add
jmp
mov
mov
push
mov
jmp
or
add
xor
neg
push
mov
sub
pop
jmp
pushl
mov
jmp
inc
shr
push
mov
mov
shl
push
mov
add
pop
push
mov
sub
pop
add
push
mov
mov
push
mov
and
jmp
mov
add
jmp
push
mov
neg
sub
add
xor
xor
pop
add
pushl
pop
add
push
mov
add
mov
sub
mov
push
pop
add
jmp
push
mov
push
mov
mov
sub
jmp
pop
popl
mov
shlb
pushf
jmp
add
add
xchg
pop
mov
sub
pop
add
pop
pushl
pop
add
push
mov
mov
xor
add
mov
add
sub
xor
jmp
mov
add
sub
jmp
xor
add
mov
add
jmp
mov
shr
push
push
mov
add
jmp
pop
add
sub
pushl
pop
sub
mov
mov
add
sub
xchg
pop
mov
push
mov
add
add
add
push
pushl
pop
jmp
mov
xor
neg
inc
inc
dec
add
sub
jmp
sub
mov
jmp
add
add
xchg
pop
xchg
pop
or
je
sub
mov
jmp
sub
pop
sub
add
push
push
jmp
push
mov
add
jmp
push
mov
push
sub
pop
dec
jmp
push
push
pop
jmp
push
mov
shr
or
dec
shl
jmp
mov
push
mov
push
mov
mov
sub
push
mov
push
push
mov
neg
shr
dec
sub
mov
pop
add
pop
inc
jmp
inc
xor
jmp
add
sub
add
add
pushl
pop
push
mov
push
push
mov
mov
add
pop
add
pop
push
mov
add
pop
xchg
jmp
push
mov
push
pushl
pop
push
jmp
sub
jmp
mov
push
jmp
mov
push
mov
neg
jmp
mov
dec
shl
jmp
mov
pop
add
pop
pushw
subb
sub
addb
mov
add
inc
xor
sub
pop
add
push
mov
add
or
shl
or
jmp
mov
add
popl
mov
sub
mov
jmp
push
mov
xor
jmp
push
pushl
jmp
push
mov
push
jmp
push
mov
sub
mov
push
mov
sub
mov
jmp
or
pop
add
add
add
pop
push
pushl
pop
popl
jmp
mov
mov
xor
pop
add
pushl
pop
add
jmp
xchg
push
jmp
pushl
pop
popl
pop
jmp
pushl
pop
add
push
mov
mov
jmp
pop
push
mov
add
add
xchg
pop
push
mov
jmp
add
sub
add
add
jmp
or
push
mov
or
sub
dec
xor
sub
xor
pop
jmp
mov
push
push
mov
jmp
add
sub
xchg
pop
mov
mov
neg
push
mov
add
pop
mov
pushl
pop
add
add
add
sub
mov
push
mov
jmp
add
add
xchg
pop
inc
not
push
mov
mov
xor
pop
sub
add
add
push
mov
sub
pop
mov
add
push
jmp
neg
push
mov
or
sub
xor
pop
xor
shr
xor
jmp
sub
pop
jmp
add
add
sub
mov
push
push
pop
add
jmp
mov
mov
add
jmp
push
jmp
push
jmp
xor
sub
add
add
pop
mov
push
push
pop
push
mov
sub
sub
add
pop
push
mov
add
pop
xchg
pop
jmp
popl
jmp
sub
sub
push
mov
jmp
popl
pop
mov
push
mov
push
mov
push
jmp
neg
add
inc
and
inc
push
mov
and
jmp
xor
jmp
push
mov
push
mov
mov
pop
jmp
add
add
pushl
pop
jmp
push
mov
sub
shl
push
mov
xor
pop
dec
add
add
pop
add
xchg
pop
sub
pushl
pushl
pop
push
mov
jmp
mov
add
push
mov
add
pop
xchg
pop
jmp
pop
add
pop
jmp
mov
push
jmp
shr
push
mov
xor
add
xor
pushl
mov
jmp
pop
mov
push
jmp
mov
pop
sub
not
jmp
add
add
jmp
add
add
jmp
xor
xor
mov
sub
mov
jmp
mov
add
and
mov
push
mov
jmp
add
add
add
push
mov
push
mov
neg
push
mov
shl
neg
inc
sub
sub
pop
add
or
sub
xor
mov
jmp
mov
add
pop
xor
jmp
push
mov
mov
add
push
push
jmp
xor
and
pop
xor
sub
add
pop
xchg
pop
push
jmp
sub
pop
add
push
jmp
mov
pop
mov
pop
jmp
inc
push
mov
push
jmp
sub
pop
jmp
pop
add
push
push
mov
mov
jmp
pop
sub
sub
mov
add
xchg
mov
push
mov
jmp
xor
pop
jmp
add
pop
push
mov
jmp
push
mov
sub
jmp
pushl
pushl
jmp
mov
add
push
notl
pop
push
push
pop
jmp
sub
pop
sub
sub
push
mov
add
shl
sub
add
push
mov
push
sub
mov
add
push
mov
add
pop
not
jmp
push
notl
pop
push
mov
xor
pop
sub
jmp
add
xor
pop
shr
sub
mov
mov
and
sub
neg
and
sub
and
pop
sub
mov
mov
add
sub
mov
push
jmp
add
pushl
pushl
jmp
xor
jmp
sub
dec
shr
xor
mov
pop
add
push
push
pop
push
mov
xor
inc
xor
add
pop
sub
xchg
pop
mov
jmp
and
add
sub
mov
jmp
xor
neg
add
push
jmp
xchg
pop
sub
add
jmp
add
add
jmp
and
pop
shr
add
push
mov
add
mov
add
sub
jmp
mov
pop
shr
xor
jmp
mov
add
add
xchg
pop
push
mov
push
jmp
movzbw
push
mov
jmp
add
jmp
mov
pop
xor
sub
sub
mov
push
mov
add
add
jmp
mov
jmp
mov
push
jmp
push
pushl
pushl
pop
sub
mov
jmp
pop
jmp
add
sub
mov
push
jmp
pop
popl
not
jmp
mov
pop
addl
sub
jmp
push
mov
push
mov
add
push
jmp
or
and
push
jmp
mov
mov
push
mov
add
sub
jmp
shr
dec
sub
add
pop
add
push
mov
jmp
xchg
pop
mov
jmp
add
sub
push
pushl
pop
popl
mov
mov
jmp
inc
add
push
mov
xor
pop
add
mov
push
push
push
mov
add
add
sub
xchg
pop
mov
addl
pop
push
jmp
mov
not
jmp
push
mov
mov
sub
pop
shl
jmp
shr
xor
push
notb
pop
add
sub
mov
jmp
mov
add
push
jmp
popl
mov
jmp
pop
sub
sub
jmp
pop
add
push
mov
add
sub
xchg
mov
mov
mov
jmp
shr
xor
and
pop
push
mov
or
sub
add
pop
push
push
mov
mov
mov
push
mov
add
add
xchg
pop
jmp
mov
sub
mov
push
jmp
add
add
xchg
mov
jmp
sub
mov
jmp
pop
add
pop
push
mov
not
mov
pop
jmp
mov
neg
add
xchg
not
xchg
sub
xor
jmp
lods
push
mov
jmp
add
or
push
push
mov
push
mov
add
not
add
push
push
push
subl
pop
add
mov
pop
mov
pushl
pop
jmp
lods
push
mov
jmp
push
mov
push
mov
mov
pop
jmp
push
mov
add
pushl
jmp
sub
pop
and
sub
jmp
add
pop
add
xchg
mov
xor
mov
add
jmp
inc
add
and
pop
or
or
sub
push
mov
sub
pop
add
add
sub
push
push
mov
mov
add
pop
dec
jmp
mov
jmp
sub
shl
shr
sub
mov
pop
sub
pop
push
pushl
pop
popl
pop
mov
addl
pop
sub
mov
push
mov
push
jmp
mov
push
jmp
mov
mov
jmp
mov
sub
pushf
jmp
push
mov
or
inc
dec
dec
push
mov
mov
shl
not
not
sub
shr
sub
and
pop
add
sub
sub
sub
jmp
mov
push
jmp
add
add
add
sub
sub
mov
add
sub
mov
jmp
pop
add
push
push
pop
push
jmp
mov
add
add
xchg
pop
xor
or
pushl
mov
add
push
push
mov
push
push
pop
add
add
xchg
pop
add
jmp
add
sub
mov
mov
shl
push
mov
push
jmp
btr
pushf
jmp
push
mov
add
jmp
xchg
mov
mov
addl
pop
add
push
mov
jmp
pop
push
popl
push
mov
dec
inc
sub
jmp
add
add
jmp
add
jmp
add
add
mov
add
sub
add
add
pushl
pop
push
push
pop
add
add
push
pushl
pop
popl
pop
sub
xchg
jmp
shr
add
not
shl
push
mov
jmp
mov
add
jmp
mov
pop
push
mov
push
mov
mov
mov
jmp
mov
push
pop
push
mov
mov
add
mov
jmp
push
mov
push
pop
jmp
sub
sub
jmp
push
mov
add
add
xchg
pop
pop
push
mov
jmp
pushl
pop
popl
pop
shrl
pushf
jmp
pushl
popf
pop
adc
pushf
jmp
add
sub
sub
push
mov
add
pop
push
mov
shr
dec
push
mov
push
mov
sub
shr
shl
sub
xor
pop
jmp
sub
mov
mov
jmp
add
sub
sub
add
pop
sub
mov
jmp
push
mov
push
mov
push
push
jmp
shl
add
jmp
sub
sub
add
add
add
pop
add
sub
push
mov
mov
inc
inc
shr
xor
sub
add
pop
mov
sub
mov
jmp
add
push
push
jmp
xor
xor
pop
jmp
pop
mov
mov
push
mov
add
add
xchg
mov
pushl
pop
add
mov
sub
mov
mov
add
add
xor
xor
xor
jmp
push
mov
jmp
and
sub
jmp
sub
mov
mov
sub
jmp
addl
pushl
pop
add
add
push
push
pop
jmp
mov
mov
sub
jmp
add
xchg
mov
sub
jmp
mov
add
add
sub
jmp
mov
sub
push
mov
push
mov
xor
dec
inc
sub
jmp
push
mov
push
mov
jmp
add
pushl
jmp
add
sub
add
jmp
push
pop
xor
mov
pop
dec
push
mov
jmp
push
push
popl
sub
mov
mov
jmp
xor
and
pop
xor
push
mov
or
pop
sub
mov
push
mov
mov
mov
pop
xor
mov
add
xor
xor
sub
jmp
popl
pop
push
mov
jmp
sub
pop
neg
sub
add
sub
pop
xchg
jmp
mov
push
mov
mov
mov
mov
jmp
popl
addl
pop
add
sub
push
pushl
pop
popl
mov
mov
push
pop
add
add
push
mov
pushl
pop
popl
mov
jmp
pop
push
push
jmp
sub
add
sub
push
mov
sub
dec
add
jmp
pop
sub
pop
sub
pop
sub
mov
jmp
pushl
pop
sub
mov
push
mov
jmp
sub
xor
sub
pop
pushl
pop
add
push
mov
jmp
add
xchg
mov
jmp
push
mov
and
or
inc
dec
sub
xor
add
pop
pop
add
mov
pop
xor
pushl
pop
add
mov
pushl
pop
jmp
mov
add
push
push
push
mov
jmp
mul
push
mov
jmp
mov
push
mov
addl
mov
push
jmp
push
mov
mov
add
mov
push
mov
add
jmp
add
add
jmp
mov
jmp
or
xor
jmp
add
sub
xchg
mov
mov
mov
jmp
pop
push
push
mov
mov
pop
mov
pop
pop
pop
jmp
add
push
mov
or
jmp
mov
inc
and
shl
push
push
jmp
push
mov
sub
pop
push
push
pop
and
shr
add
sub
pop
sub
add
add
add
push
mov
sub
mov
mov
jmp
dec
add
sub
mov
mov
inc
sub
sub
jmp
mov
mov
neg
not
push
mov
push
mov
jmp
add
and
pushl
pop
add
or
shl
push
push
jmp
push
pop
push
mov
add
sub
xchg
pop
jmp
mov
push
jmp
push
push
jmp
dec
not
push
mov
xor
pop
dec
xor
jmp
pop
push
mov
and
mov
add
shr
sub
jmp
add
jmp
mov
push
mov
mov
jmp
xor
jmp
add
xchg
jmp
push
mov
and
or
xor
and
jmp
pushl
pushl
pop
add
jmp
mov
push
mov
add
sub
xchg
jmp
pop
push
mov
jmp
neg
add
add
pop
add
push
mov
pushl
pop
popl
jmp
shr
dec
neg
xor
jmp
push
jmp
mov
mov
add
push
jmp
mov
add
sub
push
pushl
pop
jmp
pop
xor
mov
push
jmp
pushl
pop
push
jmp
sub
sub
push
mov
sub
xor
sub
add
add
pop
mov
push
mov
mov
add
push
mov
add
pop
xchg
pop
jmp
push
mov
xor
add
or
add
add
add
pop
xchg
jmp
sub
mov
mov
neg
add
push
jmp
sub
jmp
xchg
mov
mov
pushl
pushl
pop
push
push
pushl
pop
add
push
mov
not
neg
push
mov
sub
shr
shr
neg
jmp
add
mov
jmp
xchg
push
xchg
not
xchg
mov
jmp
sub
xchg
pop
jmp
push
mov
add
jmp
xor
pop
mov
pop
sub
add
add
pop
push
mov
jmp
push
mov
mov
pop
jmp
pop
push
mov
push
jmp
xchg
pop
sub
jmp
xchg
pop
add
neg
jmp
not
xchg
neg
and
sub
dec
push
mov
sub
add
jmp
sub
sub
jmp
push
pushl
pushl
mov
add
push
jmp
or
add
inc
add
jmp
xchg
pop
push
mov
push
mov
add
add
jmp
addl
pop
sub
jmp
mov
pop
mov
jmp
mov
push
mov
mov
pop
pushl
jmp
push
mov
shl
jmp
push
pop
add
push
mov
add
pop
push
jmp
or
sub
add
sub
sub
mov
pop
sub
jmp
add
sub
xchg
pop
mov
push
mov
sub
jmp
push
mov
push
pushl
mov
add
jmp
pop
sub
mov
xchg
not
sub
mov
pushl
jmp
push
push
push
mov
jmp
add
jmp
push
mov
pop
mov
pop
pop
and
pushl
mov
push
push
pop
push
mov
add
mov
add
add
xchg
pop
push
jmp
pop
add
jmp
add
add
jmp
mov
add
jmp
push
mov
mov
push
mov
mov
jmp
sub
mov
add
mov
add
xor
add
pop
push
mov
mov
add
sub
add
add
sub
pop
xchg
mov
push
sub
jmp
push
mov
push
jmp
xor
xor
xchg
xchg
not
xchg
xchg
xchg
jmp
mov
add
sub
xor
xor
xor
jmp
pop
xor
neg
xor
jmp
push
mov
jmp
add
add
jmp
add
xchg
not
xchg
push
push
mov
sub
jmp
push
mov
jmp
add
pop
xchg
pop
or
shl
push
mov
jmp
push
pushl
pop
popl
pop
popl
mov
pushl
mov
jmp
mov
mov
pop
jmp
pushl
pop
jmp
sub
mov
mov
push
push
mov
jmp
add
pop
mov
add
mov
add
push
sub
mov
mov
mov
sub
add
add
pop
sub
pop
neg
dec
push
mov
jmp
sub
add
mov
mov
add
add
pop
xor
pushl
pop
jmp
add
shl
jmp
xor
pushl
jmp
mov
add
mov
add
jmp
pop
add
jmp
or
pop
shr
sub
sub
pop
push
push
jmp
mov
push
mov
xor
sub
shr
inc
sub
mov
pop
jmp
pushl
pop
push
mov
push
push
mov
xor
mov
pop
jmp
pop
sub
mov
mov
jmp
add
add
push
pop
jmp
xor
pop
not
inc
jmp
mov
push
push
pop
add
add
jmp
mov
mov
xor
inc
sub
push
mov
mov
pop
pop
sub
and
pop
push
mov
mov
xor
pop
push
mov
pop
jmp
lods
xor
push
mov
jmp
xor
push
pop
pop
jmp
push
mov
sub
pop
push
mov
jmp
push
pushl
jmp
dec
neg
add
xor
add
pop
push
mov
push
mov
add
pop
sub
push
mov
shr
or
xor
sub
pop
pop
jmp
mov
add
sub
xchg
pop
mov
jmp
lods
xor
push
mov
jmp
sub
add
pop
shr
or
shr
push
mov
jmp
add
add
sub
mov
jmp
add
add
jmp
add
sub
add
add
pop
xor
pushl
pop
add
push
mov
jmp
pushl
jmp
add
pushl
jmp
mov
add
sub
xchg
pop
mov
push
push
jmp
lods
push
mov
jmp
push
mov
add
xor
pushl
mov
jmp
mov
push
pushl
mov
add
push
jmp
sub
pop
add
pop
jmp
push
mov
push
jmp
xchg
jmp
sub
jmp
push
mov
push
jmp
push
mov
sub
pushl
pop
add
pop
push
sub
jmp
mov
mov
sub
sub
jmp
pop
mov
push
push
jmp
inc
jmp
mov
push
mov
shr
push
mov
jmp
push
mov
xor
jmp
dec
sub
shl
push
mov
not
mov
mov
add
sub
jmp
push
mov
addl
pushl
pop
push
jmp
shl
push
subl
jmp
add
sub
push
mov
jmp
add
pop
xchg
jmp
push
push
pop
not
jmp
push
mov
mov
sub
add
add
mov
add
xor
xor
jmp
jmp
add
add
jmp
add
sub
sub
mov
pop
and
push
mov
add
add
push
mov
sub
pop
pop
push
mov
or
and
shr
add
jmp
pushl
pop
push
mov
push
mov
jmp
sub
mov
jmp
xor
pop
xor
mov
pop
xor
push
mov
jmp
pop
sub
pop
jmp
pop
jmp
mov
sub
sub
add
add
mov
add
pushw
mov
jmp
mov
add
jmp
dec
jmp
pop
jmp
sub
mov
add
add
add
add
push
push
pushw
pop
jmp
lods
xor
push
mov
jmp
pushl
pop
add
sub
mov
sub
jmp
pushl
jmp
mov
mov
sub
sub
add
mov
add
add
sub
mov
jmp
add
add
sub
mov
add
xor
mov
add
add
sub
mov
mov
mov
mov
add
mov
push
mov
push
push
mov
jmp
shr
shr
add
mov
pop
mov
xor
add
add
xor
push
mov
or
shl
not
xor
add
push
mov
xor
pop
jmp
not
or
push
push
mov
and
xor
xor
jmp
add
xchg
pop
jmp
push
mov
add
add
jmp
mov
pop
push
mov
push
mov
push
push
jmp
pop
movl
xor
pushl
pop
push
jmp
mov
add
mov
pop
add
add
sub
mov
push
push
jmp
add
jmp
xor
mov
mov
add
add
pop
add
pop
mov
sub
pop
or
pushl
pop
push
push
pop
push
mov
push
mov
jmp
add
xchg
jmp
pop
mov
sub
mov
push
mov
add
push
mov
or
add
push
mov
or
pop
push
mov
sub
mov
add
xor
jmp
sub
mov
push
mov
jmp
sub
sub
sub
add
jmp
xor
jmp
pop
add
xor
xor
xor
mov
mov
push
mov
add
add
push
mov
add
mov
add
xchg
mov
push
mov
jmp
mov
push
mov
push
push
pop
neg
xor
jmp
mov
push
push
jmp
mov
add
add
jmp
pop
pop
jmp
push
push
mov
jmp
add
add
pop
xchg
pop
xor
jmp
and
dec
sub
jmp
push
mov
push
push
mov
shl
jmp
push
mov
or
xor
shl
push
mov
sub
pop
add
jmp
sub
jmp
mov
sub
xor
pop
push
mov
add
pop
add
sub
jmp
and
xor
add
mov
jmp
and
mov
add
jmp
mov
mov
jmp
pushl
pop
popl
pop
jmp
add
push
mov
jmp
pop
or
pop
push
mov
xor
pop
add
pushl
pop
push
mov
add
add
xchg
pop
add
push
push
mov
mov
jmp
mov
add
xor
pushl
pop
add
shr
xor
jmp
neg
or
push
mov
mov
neg
sub
mov
jmp
lods
xor
push
mov
jmp
add
xchg
mov
movzbl
push
mov
jmp
inc
xor
xor
pop
push
mov
add
pop
add
pop
push
mov
sub
add
add
sub
push
mov
not
shl
add
jmp
pop
push
mov
jmp
pop
popl
mov
add
sub
pushf
jmp
push
mov
sub
mov
mov
mov
jmp
xchg
pop
push
mov
jmp
add
push
mov
jmp
pushl
popf
pop
adc
pushf
jmp
and
push
mov
sub
jmp
pop
jmp
pop
push
pushl
jmp
push
push
jmp
push
mov
mov
pop
sub
mov
mov
and
jmp
sub
xor
xor
jmp
push
mov
shl
sub
and
push
jmp
mov
pop
jmp
push
mov
jmp
xor
xor
mov
mov
push
mov
push
mov
sub
inc
inc
inc
sub
sub
add
pop
sub
xchg
pop
mov
push
jmp
pop
pop
xor
jmp
pop
push
mov
add
pop
add
sub
pushl
pop
sub
mov
push
pushl
mov
add
add
add
add
xchg
pop
xor
jmp
not
jmp
pop
shl
jmp
push
pop
push
mov
push
mov
sub
push
jmp
push
mov
jmp
mov
mov
push
push
jmp
and
shr
neg
sub
xor
mov
pop
push
jmp
mov
add
jmp
mov
xor
mov
pop
sub
pushl
jmp
push
xor
xor
xor
push
xor
jmp
xor
pushl
pop
push
jmp
sub
mov
push
mov
add
pop
jmp
pop
push
mov
xchg
inc
xchg
xor
add
pop
add
pop
push
mov
add
pop
sub
mov
pushl
pushl
pop
add
jmp
mov
push
mov
and
dec
xor
add
pop
sub
xchg
pop
mov
mov
add
push
mov
push
mov
sub
mov
add
jmp
push
mov
add
pop
push
mov
push
mov
jmp
pop
add
add
sub
sub
mov
push
mov
add
add
jmp
xor
mov
or
jne
push
push
jmp
xor
xor
xor
mov
add
xor
pushf
jmp
mov
not
neg
jmp
mov
mov
add
sub
xchg
mov
jmp
push
push
pushl
pop
sub
mov
jmp
push
mov
mov
shr
dec
or
jmp
push
mov
add
pop
add
push
mov
push
mov
or
pop
xor
add
add
sub
sub
pop
mov
add
sub
add
jmp
pop
dec
xchg
push
push
mov
mov
pop
jmp
mov
pop
inc
push
mov
xor
xor
pop
shr
or
push
mov
add
pop
add
pop
add
mov
add
push
mov
jmp
push
mov
mov
pop
add
pop
add
sub
pushl
mov
add
add
push
push
mov
mov
sub
pop
sub
add
add
jmp
xchg
pop
sub
mov
jmp
pop
add
xor
xor
xor
mov
add
pushf
jmp
mov
shr
push
jmp
pushl
mov
add
popl
pop
mov
push
push
pop
shl
jmp
mov
mov
push
mov
shl
shl
and
and
and
sub
sub
add
add
pop
push
push
mov
xor
add
push
mov
jmp
push
push
jmp
mov
jmp
add
sub
pushl
pop
add
add
sub
mov
push
mov
sub
mov
addl
pop
add
add
xchg
mov
xchg
pop
rolb
pushf
jmp
push
mov
add
pop
add
add
push
mov
jmp
or
pop
sub
push
jmp
xor
xor
xor
pop
popl
mov
mov
jmp
or
jmp
mov
mov
push
mov
mov
push
jmp
not
shl
jmp
pop
push
mov
pushl
jmp
pop
xchg
mov
jmp
push
mov
push
mov
add
add
sub
mov
add
sub
push
mov
mov
xor
mov
add
add
pushl
pop
add
and
jmp
pushl
pop
jmp
xor
mov
add
sub
push
mov
neg
shr
jmp
mov
push
push
mov
jmp
push
push
mov
add
mov
mov
jmp
add
shr
pushl
push
jmp
mov
push
mov
add
sub
xchg
jmp
mov
add
sub
pop
jmp
lods
xor
push
mov
jmp
push
mov
mov
jmp
sub
jmp
pop
push
mov
jmp
mov
and
xor
push
mov
not
jmp
mov
push
push
push
pop
neg
sub
dec
add
mov
pop
push
mov
push
mov
sub
sub
pop
sub
pop
mov
jmp
add
push
push
push
jmp
mov
add
add
xchg
pop
push
mov
jmp
sub
xchg
mov
mov
sub
mov
push
mov
add
shl
neg
sub
mov
push
mov
add
sub
sub
pop
sub
push
jmp
add
add
xchg
pop
mov
jmp
add
push
mov
pushl
pop
popl
pop
sub
mov
jmp
addl
pushl
mov
add
sub
mov
mov
push
push
mov
mov
xor
pop
add
pop
add
xchg
pop
add
push
mov
jmp
push
push
push
jmp
mov
mov
pop
add
add
push
push
mov
jmp
mov
push
push
popl
push
mov
jmp
push
push
popl
push
mov
subl
jmp
add
add
mov
sub
jmp
mov
push
jmp
shl
sub
mov
pop
jmp
xchg
pop
sub
inc
jmp
subl
sub
sub
jmp
sub
sub
jmp
dec
dec
neg
xor
xor
pop
push
addb
pop
not
pushw
mov
mov
sub
pop
add
mov
add
push
mov
add
jmp
pop
jmp
mov
shl
shl
add
shl
and
sub
sub
not
sub
shr
sub
mov
mov
add
xor
xor
mov
add
xor
pop
jmp
push
mov
jmp
pop
push
mov
push
push
popl
push
mov
jmp
sub
pop
jmp
pop
push
push
mov
add
push
jmp
mov
add
push
mov
mov
sub
pop
xchg
pop
mov
mov
add
pop
push
mov
pushl
pop
popl
mov
pushw
jmp
add
push
mov
push
mov
add
jmp
mov
push
mov
xor
jmp
mov
neg
shr
jmp
mov
addl
mov
add
push
mov
push
mov
jmp
xor
push
pop
pop
jmp
xor
xor
xor
mov
mov
jmp
sub
mov
mov
jmp
add
add
mov
mov
add
pushl
pop
push
push
pop
jmp
mov
push
jmp
mov
add
mov
jmp
mov
shr
xor
jmp
pop
sub
add
add
jmp
mov
shl
inc
neg
sub
xor
pop
push
jmp
shl
or
xor
sub
jmp
pop
add
sub
add
add
sub
add
push
mov
add
neg
push
mov
xor
pop
sub
pop
add
mov
add
add
jmp
addl
pop
add
add
jmp
dec
sub
sub
pop
push
mov
sub
pop
add
add
sub
pop
sub
mov
mov
push
push
mov
add
add
add
jmp
inc
sub
mov
pop
push
mov
xchg
not
jmp
sub
pushl
mov
push
mov
mov
add
push
push
mov
push
mov
inc
add
inc
xor
xor
pop
mov
mov
add
jmp
add
jmp
and
pushl
pushl
pop
add
push
mov
add
jmp
mov
push
pop
push
mov
mov
jmp
add
pop
push
pushl
pop
popl
pop
div
push
mov
jmp
push
mov
sub
sub
jmp
mov
sub
pop
jmp
and
push
mov
xor
add
shl
xor
sub
pop
add
mov
add
push
mov
add
sub
xchg
pop
mov
mov
add
jmp
mov
push
mov
add
add
xchg
pop
add
push
mov
sub
mov
mov
or
pop
not
push
mov
and
pop
shl
jmp
pushl
popf
pop
sbb
pushf
jmp
mov
mov
pop
add
jmp
push
pushl
pop
popl
pop
sub
mov
jmp
and
pop
push
mov
jmp
pop
jmp
mov
add
push
mov
push
pop
jmp
add
xor
xor
xor
mov
decw
pushf
jmp
add
xor
xor
add
jmp
push
mov
add
add
push
mov
jmp
pop
and
sub
sub
pop
mov
push
mov
add
sub
jmp
add
add
sub
jmp
sub
xor
jmp
pop
jmp
add
push
mov
sub
pop
xchg
mov
mov
jmp
push
push
mov
mov
jmp
mov
add
pop
jmp
sub
mov
pop
shl
add
shl
push
mov
dec
dec
add
sub
pop
sub
pop
push
mov
push
subl
pop
add
jmp
mov
pop
jmp
mov
push
jmp
mov
push
jmp
or
xor
sub
mov
add
add
push
mov
jmp
pop
jmp
mov
sub
pop
sub
mov
add
push
mov
jmp
sub
sub
push
sub
jmp
mov
add
sub
xchg
pop
mov
jmp
xchg
mov
xor
jmp
xor
xor
xor
xor
sub
mov
push
pushl
jmp
and
dec
not
or
shl
xor
sub
pop
sub
mov
jmp
mov
add
jmp
mov
push
push
mov
mov
xor
pop
shr
jmp
mov
push
mov
add
sub
xchg
jmp
mov
add
push
pop
mov
add
push
push
mov
dec
push
mov
sub
pop
sub
add
xor
mov
pop
add
sub
jmp
push
pop
add
sub
xor
xor
xor
mov
jmp
or
pop
sub
mov
pop
add
pop
xchg
pop
subl
jmp
xor
xor
mov
push
jmp
push
mov
jmp
mov
push
mov
push
pop
push
jmp
push
mov
push
push
mov
shr
jmp
sub
add
add
pop
shl
shl
push
mov
jmp
pop
mov
sub
jmp
mov
neg
or
shr
jmp
mov
push
jmp
inc
xor
xor
sub
pop
add
mov
add
mov
push
mov
push
pop
add
push
mov
add
pop
xchg
pop
push
jmp
sub
mov
jmp
pop
pop
xor
xor
xor
mov
sarl
pushf
jmp
xor
jmp
xor
push
mov
add
pop
push
mov
add
pop
push
mov
xor
add
pop
add
pop
mov
pop
push
mov
add
jmp
add
xchg
jmp
pop
push
push
mov
add
and
jmp
push
push
pop
push
mov
shr
not
not
jmp
mov
mov
jmp
pop
add
add
push
jmp
mov
idiv
movzbw
push
push
jmp
push
push
mov
add
jmp
pushl
jmp
mov
add
pop
pushl
pushl
pop
add
push
mov
push
mov
add
pop
add
xor
xor
xor
pop
push
mov
sub
jmp
sub
mov
mov
add
add
xchg
pop
or
jne
push
mov
jmp
not
mov
mov
jmp
add
pop
push
pushl
pop
popl
pop
push
mov
jmp
add
push
pushl
pop
popl
pop
add
push
jmp
mov
push
pop
push
mov
add
jmp
shl
xor
jmp
add
jmp
add
add
add
sub
mov
push
mov
push
jmp
mov
sub
jmp
add
jmp
add
mov
add
add
push
pushl
pop
popl
pop
push
sub
jmp
push
jmp
pushl
popf
pop
rcrw
pushf
jmp
mov
add
push
mov
push
mov
jmp
mov
push
pop
push
push
push
jmp
mov
mov
pop
not
mov
pop
neg
xor
sub
pop
jmp
mov
push
jmp
sub
add
jmp
push
mov
push
jmp
mov
mov
mov
mov
jmp
mov
push
mov
sub
add
mov
jmp
mov
sub
mov
push
pop
subl
jmp
pop
jmp
mov
push
mov
push
mov
mov
and
dec
shr
sub
add
pop
add
push
pushl
pop
popl
mov
add
sub
sub
jmp
sub
pop
sub
mov
add
mov
pop
and
pushl
pop
jmp
mov
mov
mov
pop
push
push
mov
mov
jmp
popl
push
mov
mov
sub
mov
add
jmp
mov
jmp
or
and
sub
add
jmp
sub
sub
add
pushl
jmp
add
push
mov
mov
pop
pushl
pop
add
jmp
mov
jmp
add
xor
pop
add
jmp
push
mov
add
pop
xchg
pop
push
push
jmp
mov
not
sub
mov
push
mov
jmp
push
mov
push
mov
add
push
mov
sub
jmp
add
sub
jmp
mov
pop
push
jmp
mov
add
xchg
mov
mov
push
pushf
jmp
pushl
pushl
pop
add
jmp
mov
mov
push
mov
inc
push
mov
push
mov
xor
add
pop
sub
sub
pop
add
mov
push
mov
add
add
jmp
push
mov
sub
pop
or
push
push
mov
jmp
push
mov
push
mov
sub
mov
push
mov
jmp
and
pop
dec
xchg
not
xchg
push
mov
sub
mov
jmp
add
add
mov
add
pop
push
pushl
mov
push
mov
jmp
mov
jmp
add
add
sub
sub
push
mov
sub
pop
jmp
inc
push
jmp
mov
add
push
mov
jmp
push
pop
jmp
push
pop
sub
mov
push
mov
jmp
push
mov
add
jmp
add
push
mov
add
pop
xchg
pop
sub
mov
jmp
add
add
pop
add
mov
add
sub
mov
jmp
push
mov
shr
jmp
sub
add
pop
push
push
mov
dec
or
xor
mov
pop
add
pop
xchg
pop
sub
add
add
mov
push
mov
jmp
neg
sub
sub
add
push
mov
add
pop
pushl
pop
jmp
push
push
pop
jmp
push
mov
not
inc
jmp
add
jmp
mov
push
notl
pop
add
add
mov
add
add
xchg
jmp
sub
mov
mov
mov
jmp
pop
push
mov
jmp
sub
add
pop
sub
sub
sub
add
add
jmp
mov
pop
pop
jmp
mov
add
sub
add
add
push
jmp
mov
push
push
pop
jmp
pushl
pop
push
mov
add
push
mov
push
mov
mov
jmp
push
mov
mov
add
push
mov
jmp
add
jmp
or
inc
inc
add
not
xor
add
pop
jmp
push
popl
addl
popl
addl
pushl
pop
sub
jmp
and
pushl
pop
add
or
je
push
push
jmp
sub
sub
push
push
mov
mov
push
mov
jmp
add
mov
add
jmp
push
mov
add
sub
xchg
pop
mov
mov
jmp
push
jmp
xor
jmp
pop
add
jmp
pushl
pushl
jmp
movzbw
push
pushf
jmp
add
jmp
pop
push
mov
mov
push
push
mov
mov
jmp
mov
add
mov
add
push
mov
pushl
mov
add
popl
mov
add
sub
mov
pushl
pop
popl
mov
pushl
pushl
jmp
pop
add
pop
push
mov
mov
add
pop
xchg
mov
jmp
pop
xor
mov
jmp
add
sub
mov
jmp
pop
jmp
mov
xor
push
mov
jmp
xchg
pop
push
mov
add
pop
add
xor
xor
xor
jmp
add
add
xchg
jmp
sub
sub
pop
push
push
jmp
mov
pop
pop
pop
neg
add
add
pop
push
mov
jmp
mov
or
inc
xor
push
mov
jmp
xor
inc
sub
push
mov
xor
sub
add
add
pop
sub
add
add
sub
pushl
pop
add
sub
mov
mov
sub
jmp
mov
push
jmp
mov
add
push
mov
push
pop
jmp
push
mov
mov
push
mov
sub
pop
add
add
pop
sub
pop
xchg
pop
mov
sub
mov
addl
pop
add
add
jmp
mov
mov
pop
pop
jmp
mov
push
push
pop
jmp
mov
add
pushl
pop
add
push
push
jmp
push
pushf
jmp
xor
pop
jmp
and
shl
add
add
jmp
mov
push
jmp
mov
pop
xor
and
push
mov
add
pop
jmp
add
add
push
mov
sub
pop
pop
push
jmp
pop
popl
mov
shrb
pushf
jmp
pop
mov
jmp
mov
xor
sub
mov
pop
sub
pop
push
mov
add
mov
add
sub
add
add
sub
add
pop
xchg
mov
rep
add
sub
mov
jmp
and
xor
jmp
pop
xor
shl
shr
xor
sub
shl
xor
jmp
add
push
mov
or
shl
sub
xor
add
add
pop
jmp
mov
mov
push
mov
jmp
mov
add
pop
jmp
jmp
sub
add
add
mov
push
mov
add
push
jmp
lods
sub
mov
jmp
sub
sub
sub
add
add
mov
add
add
mov
add
jmp
xor
pop
sub
sub
sub
sub
add
push
jmp
add
push
mov
pop
pop
xor
mov
push
jmp
xor
pushl
jmp
mov
incb
pushf
jmp
push
mov
push
xorl
pop
xor
pop
sub
mov
add
add
shr
shr
not
shr
sub
mov
mov
sub
pop
add
jmp
pushl
mov
add
add
add
xor
xor
xor
mov
movsbw
push
mov
jmp
mov
push
pop
jmp
shl
shl
push
sub
mov
mov
sub
push
mov
add
pop
or
push
mov
add
pop
mov
pop
push
mov
sub
jmp
pop
push
mov
dec
inc
not
sub
sub
add
add
jmp
mov
push
jmp
push
mov
or
add
add
shl
jmp
xor
xor
xor
mov
push
mov
push
mov
jmp
push
mov
mov
mov
push
mov
mov
pop
pop
push
mov
sub
pop
push
sub
mov
addl
pop
add
sub
xchg
jmp
mov
add
jmp
push
mov
jmp
add
add
jmp
add
pop
xchg
mov
movzbl
lea
push
mov
jmp
push
mov
addl
jmp
xor
xor
jmp
and
add
or
pop
dec
add
add
pop
sub
push
mov
push
mov
add
pop
or
pop
push
mov
mov
push
jmp
push
pop
push
mov
xor
sub
jmp
push
mov
addl
add
subl
pop
subl
add
jmp
mov
add
sub
sub
push
mov
jmp
dec
not
xor
add
pop
pop
mov
push
mov
add
jmp
add
popl
mov
incl
pushf
jmp
mov
not
add
shr
dec
add
sub
pop
add
add
jmp
push
mov
jmp
mov
mov
push
push
mov
push
jmp
xchg
pop
pop
xchg
pop
xor
push
mov
jmp
push
mov
jmp
popl
addl
pop
sub
jmp
add
push
mov
push
mov
sub
jmp
shl
jmp
pushl
jmp
sub
mov
jmp
pushl
mov
push
mov
add
add
jmp
add
xchg
pop
popl
jmp
xor
xor
mov
pop
push
mov
mov
or
pop
shl
pushw
mov
mov
or
mov
add
push
mov
not
mov
pop
jmp
mov
add
shl
and
jmp
pop
add
jmp
pushl
mov
jmp
add
mov
add
sub
mov
mov
add
push
push
mov
sub
mov
mov
add
sub
pop
xchg
pop
mov
pushl
pushl
jmp
addl
mov
add
sub
pop
push
push
push
jmp
shr
shr
xor
add
add
mov
add
xor
mov
add
jmp
sub
mov
add
add
pop
push
mov
add
pop
xor
jmp
sub
xchg
pop
mov
jmp
sub
sub
jmp
add
jmp
mov
push
mov
sub
mov
mov
sub
pop
add
add
pop
add
xchg
mov
shr
push
mov
push
notl
mov
push
jmp
push
mov
push
mov
push
mov
sub
add
jmp
xor
xor
mov
or
pushf
jmp
pop
sub
sub
pushl
pop
add
pop
sub
add
jmp
sub
pop
xchg
pop
mov
mov
sub
push
push
mov
shr
shr
and
sub
mov
sub
sub
add
pop
sub
mov
jmp
sub
pop
add
add
sub
push
mov
dec
xor
sub
jmp
sub
mov
add
push
push
mov
push
mov
add
xor
mov
pop
push
mov
add
pop
add
sub
pushl
pop
add
jmp
add
pop
push
mov
add
mov
add
xchg
jmp
pop
add
jmp
mov
add
jmp
mov
add
xor
jmp
add
push
mov
add
add
sub
pop
xchg
mov
and
jmp
push
push
push
mov
jmp
add
sub
mov
push
pop
push
jmp
xor
mov
mov
jmp
pop
jmp
push
push
pop
pop
push
mov
push
mov
or
sub
and
or
xor
and
pop
sub
shr
neg
add
xor
pop
jmp
mov
add
jmp
add
push
mov
push
mov
add
jmp
pushl
pop
add
neg
jmp
xor
add
jmp
add
sub
push
mov
push
mov
mov
xor
jmp
mov
addl
mov
jmp
push
mov
add
push
mov
add
jmp
push
push
pop
add
jmp
add
add
pushl
mov
add
add
push
mov
add
pop
jmp
xor
add
jmp
xchg
jmp
pop
popl
jmp
or
mov
add
push
mov
xor
pop
add
pop
push
jmp
pop
jmp
pop
add
jmp
mov
mov
not
jmp
xchg
mov
mov
mov
push
mov
add
pop
push
mov
dec
neg
inc
shr
shr
xor
add
pop
add
add
push
jmp
sub
add
mov
add
sub
add
push
mov
add
pop
jmp
sub
mov
mov
mov
pop
sub
mov
mov
jmp
add
jmp
add
add
neg
add
sub
mov
mov
add
pop
xor
jmp
add
add
push
mov
dec
and
push
sub
mov
add
inc
xor
sub
pop
pop
push
mov
push
push
mov
mov
jmp
add
push
pushl
pop
popl
pop
jmp
pop
and
jmp
add
mov
add
add
jmp
mov
push
mov
jmp
add
xchg
pop
btr
pushf
jmp
dec
shl
xor
jmp
push
push
popl
push
mov
add
jmp
inc
push
push
pop
jmp
mov
sub
pop
jmp
push
pop
inc
dec
sub
mov
jmp
xorl
pop
xor
jmp
push
pop
xor
push
jmp
push
mov
sub
pop
pop
push
mov
jmp
push
pushl
mov
jmp
add
pushl
pop
add
pop
push
mov
jmp
xor
pop
jmp
add
add
xor
xor
xor
pop
shr
xor
push
mov
jmp
pop
push
jmp
xor
pop
inc
and
shr
push
mov
sub
jmp
neg
shl
shl
jmp
push
mov
jmp
mov
push
jmp
dec
sub
jmp
add
mov
add
and
pushl
mov
add
sub
mov
push
pop
add
push
mov
add
add
sub
pop
xchg
mov
jmp
add
push
mov
push
pop
push
mov
add
jmp
xchg
jmp
sub
push
jmp
mov
mov
add
sub
mov
push
jmp
mov
add
sub
jmp
push
push
pop
push
mov
xchg
not
xchg
jmp
add
jmp
add
dec
sub
push
jmp
mov
push
mov
add
push
push
jmp
xor
xor
jmp
mov
mov
add
jmp
add
add
jmp
add
pop
pop
add
sub
mov
mov
shl
jmp
push
pop
add
jmp
inc
push
push
pop
jmp
push
mov
sub
jmp
mov
div
pushw
mov
jmp
push
mov
push
jmp
popl
jmp
sub
inc
sub
add
jmp
mov
not
mov
jmp
add
sub
xchg
jmp
pop
add
push
mov
push
mov
mov
pop
add
pushl
pop
push
mov
add
add
xchg
pop
push
pushl
pop
popl
jmp
pop
sub
sub
mov
pushl
mov
push
mov
sub
mov
mov
push
push
mov
shl
neg
sub
not
add
mov
pop
jmp
pop
xor
jmp
push
pop
add
jmp
mov
sub
add
add
pop
add
push
mov
jmp
add
pop
push
mov
jmp
sub
add
push
jmp
shl
shl
jmp
push
mov
push
push
jmp
mov
jmp
lods
push
mov
jmp
mov
add
push
jmp
mov
pop
push
jmp
mov
push
pop
push
mov
mov
jmp
add
and
pop
push
jmp
push
mov
mov
mov
pop
push
jmp
add
sub
pop
jmp
mov
mov
add
push
jmp
mov
pushl
mov
add
popl
pop
shlw
pushf
jmp
sub
add
pop
xor
pushl
pop
add
push
push
jmp
xor
sub
mov
add
and
sub
mov
mov
sub
mov
add
push
mov
add
pop
add
add
sub
sub
pop
push
jmp
push
mov
sub
jmp
pop
xchg
mov
jmp
xchg
pop
add
sub
inc
dec
push
mov
and
xor
sub
pop
add
push
mov
shr
add
dec
dec
xor
add
jmp
mov
mov
add
pushl
jmp
add
jmp
pop
push
mov
mov
add
push
jmp
pop
add
pop
jmp
add
push
pushl
pop
popl
pop
movswl
push
push
jmp
pop
xchg
pop
add
sub
pop
xchg
mov
pushl
mov
jmp
add
xchg
jmp
and
or
neg
inc
add
push
pop
pop
add
pop
jmp
mov
not
jmp
add
shr
push
mov
push
mov
mov
dec
jmp
add
push
mov
sub
pop
add
add
push
mov
sub
add
push
mov
mov
add
add
add
sub
push
mov
sub
jmp
mov
sub
push
mov
addl
popl
jmp
xor
add
jmp
mov
add
sub
jmp
mov
mov
mov
add
jmp
pop
xchg
push
notl
jmp
mov
xchg
jmp
mov
jmp
mov
pop
mov
jmp
xor
jmp
addl
add
subl
pop
mov
add
push
push
jmp
mov
sub
jmp
add
add
pop
sub
xor
xor
xor
pop
mov
push
pop
add
push
mov
sub
push
mov
xor
neg
dec
sub
jmp
and
or
xchg
not
xchg
xor
push
mov
jmp
add
push
mov
add
push
mov
xor
sub
jmp
lods
push
mov
jmp
pop
push
mov
add
add
push
jmp
push
mov
inc
dec
jmp
or
push
mov
sub
jmp
mov
push
mov
push
mov
add
jmp
pop
sub
pop
push
mov
add
pop
add
sub
pushl
pop
add
add
xor
xor
xor
mov
imul
push
pushf
jmp
push
push
mov
or
dec
push
mov
xor
jmp
push
mov
mov
mov
add
pushl
pop
add
xor
pushl
mov
push
mov
add
add
xchg
pop
add
mov
add
push
mov
jmp
push
mov
add
pop
add
pop
add
pop
mov
sub
mov
mov
add
add
xchg
mov
add
push
pushl
pushl
pop
jmp
sub
xor
xor
xor
mov
mov
push
pop
jmp
sub
add
add
pop
xor
pop
push
mov
add
sub
add
push
mov
add
add
sub
pop
mov
add
xor
pushl
jmp
push
mov
push
mov
add
mov
add
sub
jmp
pop
add
sub
jmp
mov
add
jmp
pushl
mov
add
add
push
mov
jmp
mov
pop
pushl
pop
jmp
mov
add
add
push
mov
add
mov
add
push
pushl
jmp
and
pop
sub
add
pop
push
push
push
jmp
mov
mov
add
pop
jmp
xor
xor
xor
pop
jmp
sub
jmp
sub
add
mov
pop
add
pop
sub
xor
jmp
pop
inc
push
sub
jmp
mov
add
not
shr
sub
or
pop
xor
xor
shl
or
xor
add
mov
add
sub
push
mov
add
sub
xchg
jmp
popl
addl
pop
push
mov
sub
neg
dec
add
add
pop
push
mov
sub
mov
mov
mov
sub
pop
push
mov
jmp
sub
jmp
mov
push
jmp
pop
push
sub
mov
addl
pop
jmp
mov
push
mov
sub
add
add
pop
add
jmp
mov
popl
mov
push
mov
push
jmp
negb
pushf
jmp
mov
jmp
pop
mov
push
jmp
pop
push
mov
add
add
xchg
pop
pushl
pop
push
mov
add
add
xchg
pop
pushl
pop
push
mov
push
pop
jmp
mov
add
pop
add
xchg
mov
sub
add
push
mov
and
neg
sub
inc
push
mov
add
xor
pop
add
pop
jmp
lods
add
add
jmp
mov
add
sub
push
mov
mov
add
pop
sub
pop
jmp
push
mov
xor
jmp
pop
add
jmp
mov
sub
pop
add
add
sub
mov
push
mov
add
jmp
mov
mov
add
pop
xchg
mov
mov
push
jmp
pushl
mov
add
jmp
mov
pushl
pop
jmp
pop
shl
jmp
mov
pop
push
push
mov
xor
push
mov
jmp
push
mov
push
mov
mov
add
jmp
xor
xor
xor
xor
xor
xor
jmp
dec
sub
mov
pushl
pop
add
addl
sub
jmp
push
push
push
pop
jmp
sub
push
mov
mov
or
shl
sub
sub
pop
and
jmp
push
pop
neg
push
mov
mov
jmp
add
push
mov
mov
push
mov
jmp
popl
jmp
not
push
jmp
push
mov
jmp
push
mov
and
pushl
pop
add
push
mov
or
pop
add
push
addl
mov
add
sub
pop
neg
shr
push
mov
jmp
pop
jmp
mov
pop
push
mov
inc
add
sub
mov
jmp
sub
add
add
push
jmp
mov
push
jmp
add
push
mov
jmp
pop
push
mov
push
jmp
push
mov
dec
push
mov
add
pop
add
and
not
jmp
mov
add
jmp
popl
pop
jmp
pop
not
push
mov
add
pop
jmp
mov
sub
pop
pop
xchg
mov
mov
sub
jmp
add
jmp
push
push
mov
push
subl
pop
jmp
mov
mov
pop
xor
pop
sub
pop
push
push
jmp
mov
push
mov
jmp
xor
pop
push
mov
jmp
mov
not
push
mov
jmp
push
mov
mov
push
pop
pop
add
pop
mov
add
popl
push
mov
or
add
neg
xor
and
add
dec
not
jmp
mov
push
mov
xor
add
pop
jmp
pop
jmp
mov
add
push
mov
add
mov
add
xor
xor
xor
jmp
mov
and
mov
push
push
pop
jmp
lods
add
push
jmp
mov
add
add
xchg
pop
jmp
mov
sub
pop
push
mov
xor
pop
add
mov
add
push
mov
mov
add
add
sub
mov
add
sub
mov
pushl
jmp
add
jmp
pop
mov
mov
add
add
xchg
pop
sub
mov
jmp
pop
jmp
add
push
mov
mov
sub
dec
push
mov
jmp
add
xchg
pop
push
mov
mov
add
pushl
jmp
pushl
mov
jmp
mov
mov
push
mov
mov
neg
jmp
mov
pop
add
sub
jmp
sub
add
jmp
mov
sub
pushl
pop
push
mov
jmp
and
xor
neg
sub
jmp
xchg
mov
jmp
mov
mov
add
jmp
add
mov
sub
mov
mov
add
push
mov
push
push
push
mov
mov
pop
mov
pop
mov
pop
add
pop
xchg
jmp
push
mov
mov
sub
pop
xor
mov
sub
jmp
add
mov
pop
sub
jmp
mov
push
push
mov
jmp
add
push
mov
jmp
mov
jmp
mov
push
mov
mov
dec
add
jmp
pop
push
mov
jmp
pop
push
jmp
jmp
add
sub
xchg
pop
mov
mov
push
mov
mov
push
mov
add
pop
neg
and
and
add
add
and
pop
push
jmp
mov
add
pop
push
mov
push
mov
or
dec
dec
xor
sub
pop
add
add
mov
add
xor
xor
xor
mov
jmp
not
shr
jmp
mov
pop
dec
and
jmp
mov
mov
and
push
sub
mov
add
sub
jmp
mov
push
pushl
pop
add
add
jmp
jmp
sub
pop
push
jmp
push
mov
push
mov
add
add
jmp
sub
mov
jmp
add
pop
jmp
push
mov
jmp
pop
jmp
add
mov
jmp
add
pop
push
mov
xor
shl
neg
xor
push
mov
sub
sub
pop
xor
pop
sub
pop
dec
push
mov
mov
jmp
and
add
xor
add
mov
add
inc
add
sub
sub
pop
add
add
sub
push
mov
shl
shr
or
xor
neg
jmp
pushl
pushl
mov
add
add
push
mov
add
push
mov
neg
push
mov
and
pop
push
mov
sub
pop
add
add
jmp
mov
and
pushl
pop
push
mov
jmp
pop
addl
jmp
add
pop
jmp
xor
push
mov
jmp
mov
push
mov
jmp
mov
push
jmp
add
add
jmp
mov
push
jmp
push
mov
add
push
mov
push
jmp
pop
add
add
xchg
pop
add
xor
sub
mov
jmp
mov
mul
push
mov
jmp
push
subl
pop
add
pop
sub
pop
sub
mov
jmp
sub
pop
sub
push
jmp
add
add
sub
pop
jmp
mov
add
sub
sub
jmp
pop
inc
sub
push
pop
pop
mov
pop
jmp
add
add
add
push
jmp
mov
push
mov
mov
shl
shr
jmp
mov
mov
mov
add
jmp
add
sub
xchg
mov
mov
push
jmp
xchg
pop
add
xor
xor
xor
pop
push
push
jmp
sub
add
add
sub
pop
xor
xor
xor
pop
mov
sub
jmp
push
mov
mov
neg
push
mov
add
or
jmp
mov
mov
add
sub
push
pushl
jmp
mov
push
mov
push
mov
push
jmp
sub
add
pop
jmp
push
mov
jmp
push
pushf
jmp
mov
push
push
push
push
pop
mov
add
jmp
add
sub
sub
add
sub
pop
add
and
mov
add
jmp
sub
pop
sub
sub
add
add
push
mov
not
and
jmp
pop
xor
push
jmp
and
and
xor
add
jmp
pop
jmp
sub
pushl
jmp
mov
add
add
sub
xor
push
mov
dec
jmp
push
push
mov
not
xor
xor
jmp
mov
mov
push
mov
jmp
mov
pushl
pop
popl
mov
push
mov
jmp
dec
xor
and
jmp
pop
add
jmp
mov
pop
pop
pushl
pop
add
shl
sub
mov
jmp
push
xchg
not
xchg
jmp
mov
add
sub
xchg
pop
mov
mov
add
jmp
shl
sub
jmp
xor
xor
jmp
sub
xchg
pop
mov
mov
push
mov
xor
jmp
add
jmp
pop
xor
xor
xor
mov
mov
jmp
push
mov
mov
sub
pop
push
jmp
mov
sub
mov
mov
jmp
mov
push
mov
mov
add
pop
push
mov
mov
add
pop
add
sub
sub
push
push
mov
mov
sub
pop
or
jmp
push
push
push
pop
xor
mov
mov
add
add
pop
jmp
push
mov
push
jmp
sub
jmp
not
shl
push
mov
add
pop
shl
push
push
mov
mov
pop
xor
neg
sub
sub
pop
push
push
mov
shl
jmp
shl
shl
add
sub
pop
add
pop
sub
mov
jmp
push
mov
and
pop
or
push
mov
shr
jmp
mov
add
jmp
xor
mov
xor
movzbl
popw
jmp
inc
shl
jmp
mov
pop
push
jmp
pushw
pop
or
add
and
push
jmp
pop
and
pushl
pop
add
or
je
push
mov
jmp
push
mov
or
xor
sub
sub
mov
push
mov
add
add
xchg
pop
xchg
mov
mov
mov
push
mov
inc
sub
jmp
push
mov
add
add
xchg
pop
push
mov
jmp
add
add
add
push
mov
add
sub
xchg
pop
mov
pushl
pop
popl
mov
mov
add
push
mov
jmp
mov
add
sub
xchg
pop
mov
jmp
pop
mov
jmp
push
pushl
pop
popl
mov
push
mov
add
push
mov
mov
add
pop
push
mov
add
sub
xchg
pop
mov
pushl
jmp
push
sub
jmp
push
mov
add
pop
jmp
pushl
pushl
jmp
pop
or
je
push
mov
jmp
pop
jmp
mov
sub
inc
sub
or
sub
add
sub
sub
pop
add
add
sub
mov
mov
sub
pop
pop
or
add
and
jmp
sub
mov
mov
push
mov
sub
jmp
mov
push
push
mov
addl
popl
jmp
push
pop
push
mov
add
pop
jmp
pop
add
pop
push
mov
mov
push
mov
neg
sub
add
pop
add
push
mov
sub
pop
mov
push
mov
add
jmp
sub
add
mov
add
push
mov
pushl
pop
popl
mov
jmp
push
mov
sub
dec
sub
not
shl
push
mov
add
xor
pop
xor
pop
sub
pushl
pop
add
push
push
push
jmp
mov
add
add
jmp
xor
pop
or
pushl
mov
add
add
not
push
mov
push
push
mov
mov
pop
and
pop
neg
neg
shl
push
jmp
sub
mov
jmp
add
push
mov
jmp
mov
sub
add
add
pushl
addl
jmp
pop
xor
push
mov
add
add
sub
mov
add
mov
pop
xor
pop
push
mov
add
sub
xchg
pop
mov
mov
jmp
mov
inc
add
and
mov
add
or
shl
jmp
xor
xor
jmp
pop
popl
mov
roll
pushf
jmp
mov
sub
add
push
jmp
add
add
xor
xor
xor
pop
push
mov
jmp
mov
dec
shl
and
dec
and
jmp
sub
pop
add
add
pop
xor
xor
xor
mov
pop
jmp
add
push
mov
jmp
sub
mov
addl
pushl
pop
add
jmp
mov
mov
push
mov
shl
not
jmp
add
sub
pop
push
mov
add
pop
xor
xor
xor
jmp
inc
xor
jmp
push
mov
add
sub
mov
push
jmp
pop
push
mov
push
jmp
add
push
mov
add
sub
xchg
pop
mov
mov
push
jmp
add
add
jmp
popl
pop
push
mov
jmp
mov
mov
add
jmp
pushl
jmp
pop
push
sub
mov
mov
mov
mov
add
jmp
xor
pop
push
mov
xor
sub
sub
sub
mov
mov
or
sub
shr
add
shr
sub
add
pop
pop
add
push
jmp
mov
pushl
pop
add
xor
mov
add
pop
jmp
pop
sub
mov
jmp
add
addl
add
subl
pop
jmp
pop
push
mov
inc
push
mov
jmp
push
mov
sub
pop
sub
pop
push
mov
jmp
mov
push
mov
push
mov
add
jmp
incl
pushl
pop
add
sub
sub
pop
add
jmp
add
pop
sub
sub
sub
sub
add
add
add
pushl
jmp
sub
mov
push
mov
mov
xor
jmp
decl
pushf
jmp
shl
xor
add
jmp
mov
sub
pop
pop
push
sub
mov
mov
xchg
neg
xchg
push
push
mov
mov
pop
sub
sub
add
pop
mov
jmp
add
jmp
mov
mov
dec
inc
dec
inc
shr
push
jmp
not
sub
add
pop
mov
mov
add
add
sub
mov
jmp
mov
push
jmp
push
mov
dec
neg
jmp
add
jmp
push
mov
mov
shr
xor
push
mov
sub
pop
add
add
pushl
pop
add
xor
xor
xor
add
add
xor
mov
jmp
xor
xor
xor
jmp
push
push
pop
add
jmp
sub
mov
push
pop
add
sub
jmp
add
add
push
mov
jmp
mov
push
mov
addl
pop
sub
jmp
add
sub
mov
push
mov
add
jmp
mov
push
jmp
mov
add
push
jmp
mov
push
mov
add
shr
shl
xor
add
jmp
dec
shr
add
neg
or
add
shr
add
jmp
add
pop
jmp
xor
pop
mov
mov
push
mov
sub
add
pop
push
push
push
pop
mov
pop
sub
add
add
sub
add
mov
jmp
add
add
mov
mov
jmp
add
add
pop
mov
jmp
xor
push
addl
mov
add
push
mov
sub
pop
pop
jmp
push
mov
mov
jmp
sub
sub
sub
mov
jmp
negw
pushf
jmp
pop
push
push
mov
add
add
jmp
add
xchg
pop
jmp
mov
add
jmp
push
mov
add
add
xchg
pop
pushw
addb
jmp
and
xor
push
jmp
pop
push
popl
addl
jmp
pop
and
inc
push
mov
sub
pop
push
mov
xchg
not
xchg
pop
push
mov
mov
shl
shr
add
add
sub
jmp
mov
add
pop
push
mov
sub
sub
add
jmp
sub
pop
and
pushl
pop
push
push
pop
add
push
jmp
pop
sub
sub
jmp
mov
add
push
mov
incl
pop
push
mov
add
pop
xor
push
mov
sub
sub
add
mov
add
add
add
pop
jmp
push
mov
xor
push
jmp
mov
mov
xor
pop
shl
sub
mov
pop
jmp
add
shl
jmp
mov
mov
push
push
mov
mov
jmp
notl
mov
push
mov
jmp
push
pop
sub
mov
pushl
pop
jmp
push
mov
mov
jmp
push
push
pop
push
sub
mov
jmp
mov
push
mov
jmp
mov
mov
pop
pushl
pop
push
mov
push
mov
add
pop
push
mov
add
sub
xchg
pop
mov
mov
sub
shl
jmp
xor
xchg
not
xchg
push
push
jmp
mov
push
mov
not
jmp
push
mov
add
mov
pop
mov
add
pop
mov
add
jmp
mov
shrw
pushf
jmp
sub
pop
add
add
sub
mov
push
mov
add
add
jmp
pop
xchg
pop
add
add
pop
movzbl
pushl
jmp
pop
add
jmp
xor
xor
xchg
xchg
not
xor
xor
xor
jmp
pop
add
push
jmp
xor
xor
jmp
or
xor
sub
add
add
pop
add
push
mov
sub
jmp
add
jmp
push
mov
sub
sub
add
mov
add
not
sub
mov
push
mov
mov
mov
add
add
sub
sub
pop
push
mov
jmp
pushw
jmp
add
add
push
jmp
add
add
pop
xor
xor
xor
mov
sarw
pushf
jmp
mov
addl
jmp
mov
push
mov
mov
neg
dec
jmp
pop
push
mov
mov
and
xor
add
pop
sub
push
mov
add
sub
xchg
pop
mov
mov
sub
and
and
not
jmp
xor
jmp
or
pop
jmp
sub
pop
mov
pop
neg
neg
xor
xor
mov
add
add
sub
sub
add
add
push
mov
sub
add
push
mov
jmp
push
sub
pop
jmp
mov
jmp
pop
pop
xor
xor
xor
mov
push
mov
jmp
mov
jmp
pop
mov
add
or
jmp
pop
popl
mov
jmp
pop
jmp
popl
pushl
pushl
pop
add
push
push
mov
addl
pop
add
add
xchg
pop
xchg
xor
xor
xor
jmp
add
xchg
jmp
sub
jmp
sub
mov
add
jmp
add
add
jmp
add
add
shr
push
push
pop
add
push
jmp
xchg
mov
dec
shl
push
push
pop
pop
add
xor
xor
xor
push
mov
mov
add
add
sub
pop
and
pushl
jmp
xchg
mov
mov
jmp
or
shr
dec
add
xor
add
pop
or
pop
xor
push
mov
add
mov
push
mov
add
add
push
pushl
pop
jmp
add
push
mov
sub
pop
mov
add
add
push
pushl
jmp
add
pop
sub
mov
mov
add
pop
add
jmp
pushl
pushl
jmp
push
mov
add
xorl
pop
pop
pushl
pop
add
mov
jmp
push
sub
mov
push
mov
mov
xor
mov
jmp
push
mov
push
mov
notl
pop
jmp
xchg
pop
sub
mov
push
pushl
pop
add
add
pushl
mov
add
add
xor
xor
xor
pop
test
pushf
jmp
push
mov
addl
pop
jmp
xor
mov
pop
xor
mov
add
pop
push
mov
xor
jmp
push
push
popl
addl
pop
push
jmp
mov
push
mov
mov
mov
pushl
jmp
xchg
mov
push
mov
sub
mov
push
push
jmp
negl
pushf
jmp
add
add
xchg
pop
mov
add
add
shr
add
sub
jmp
mov
pushl
pop
add
jmp
push
mov
add
pop
add
push
mov
push
push
mov
add
mov
pop
neg
inc
xor
sub
sub
add
pop
add
jmp
mov
push
push
pop
mov
pushl
jmp
pop
xchg
jmp
pop
push
mov
jmp
push
mov
add
mov
push
mov
add
add
xchg
pop
mov
push
push
mov
add
push
mov
sub
pop
xchg
pop
jmp
add
push
jmp
popl
jmp
pop
push
push
pop
push
mov
add
add
pop
add
xchg
pop
pop
add
push
mov
mov
add
pop
xor
xor
jmp
push
pushl
pop
popl
pop
push
mov
or
jmp
push
mov
add
push
pop
mov
jmp
pop
xor
xor
xor
mov
cmp
pushf
jmp
push
push
jmp
test
pushf
jmp
mov
add
push
push
mov
xor
jmp
mov
push
mov
addl
mov
push
jmp
mov
mov
mov
jmp
neg
shr
jmp
push
mov
add
pop
sub
push
mov
sub
jmp
add
add
pop
add
add
sub
sub
push
mov
sub
jmp
sub
sub
push
mov
not
xor
jmp
xor
mov
jmp
pushl
mov
jmp
lods
add
push
jmp
add
sub
xchg
pop
mov
push
jmp
pop
pop
sub
mov
mov
add
sub
shr
inc
sub
inc
push
mov
xor
pop
add
add
sub
mov
push
mov
jmp
add
pushl
pop
push
jmp
sub
sub
pop
pop
xor
xor
xor
pop
sub
mov
jmp
pop
sub
jmp
add
xchg
pop
add
jmp
mov
mov
add
push
mov
add
mov
sub
jmp
pop
push
mov
add
mov
push
push
pop
add
add
jmp
sub
mov
add
push
mov
add
xor
pop
shr
push
mov
sub
pop
and
add
add
add
add
sub
sub
mov
jmp
movzbl
pushl
pushl
jmp
add
pop
add
xchg
pop
pop
sub
mov
push
push
push
mov
sub
not
sub
sub
sub
mov
mov
add
xor
jmp
sub
mov
jmp
mov
push
mov
add
sub
xchg
pop
mov
jmp
add
add
mov
add
jmp
push
mov
jmp
mov
push
jmp
dec
neg
sub
xor
sub
add
add
mov
push
mov
jmp
pop
add
jmp
inc
push
mov
jmp
sub
add
add
pop
movzbl
jmp
popa
ret
push
mov
jmp
add
sub
pop
xor
jmp
mov
add
push
push
mov
push
jmp
movzbw
push
pushf
jmp
push
mov
jmp
mov
add
mov
jmp
add
jmp
pop
sub
add
jmp
push
pop
add
add
xchg
pop
add
mov
add
add
jmp
mov
add
add
jmp
add
pop
jmp
pop
xchg
push
push
pop
pop
sub
not
xor
sub
add
push
mov
shl
inc
and
add
add
mov
push
mov
jmp
add
sub
mov
add
xchg
mov
push
mov
jmp
push
mov
sub
xor
shr
xor
sub
not
jmp
mov
sub
inc
shl
neg
sub
add
add
jmp
pop
popl
mov
push
mov
push
push
mov
or
shl
add
sub
mov
pop
add
mov
add
add
sub
mov
pushl
jmp
mov
add
add
jmp
jmp
add
mov
add
jmp
sub
add
pop
sub
shl
add
add
add
sub
pushl
jmp
sub
add
pop
add
jmp
pop
xchg
pop
mov
pushl
pop
add
mov
add
shl
push
mov
sub
pop
neg
sub
push
mov
shl
sub
sub
jmp
push
push
pop
add
add
xchg
pop
shl
shr
add
xor
mov
mov
push
mov
add
add
push
pushl
pop
popl
jmp
mov
sub
pushf
jmp
sub
add
pop
add
xor
xor
xor
mov
rorw
pushf
jmp
neg
sub
xor
add
pop
sub
add
add
push
mov
shr
not
add
push
mov
and
mov
add
add
xor
sub
jmp
pushl
pop
sub
jmp
add
jmp
popl
mov
rorb
pushf
jmp
mov
mov
sub
add
jmp
pop
sub
jmp
add
sub
push
mov
push
mov
jmp
push
push
pop
push
mov
push
jmp
push
mov
add
jmp
mov
pushl
mov
add
jmp
mov
inc
inc
not
jmp
push
mov
mov
pop
xor
pushl
jmp
add
jmp
sub
mov
mov
add
mov
add
sub
pop
push
pushl
mov
push
mov
add
add
xchg
pop
popl
pop
mov
push
mov
jmp
neg
sub
sub
mov
pop
push
mov
shr
or
add
add
pop
sub
sub
pop
add
push
mov
mov
add
pop
jmp
pop
add
push
mov
push
mov
jmp
mov
mov
add
jmp
xor
pop
push
push
mov
mov
sub
pop
sub
add
jmp
sub
sub
add
jmp
sub
xchg
pop
mov
push
mov
addl
pop
jmp
sub
sub
add
sub
jmp
pop
push
mov
xor
jmp
push
mov
add
pop
xchg
mov
rolw
pushf
jmp
pop
push
push
mov
jmp
mov
add
add
xchg
mov
push
pushl
pop
popl
pop
jmp
mov
mov
add
xor
pushl
pop
add
sub
jmp
mov
add
sub
xor
jmp
mov
xor
pushl
pushl
mov
add
jmp
mov
add
push
mov
push
mov
jmp
push
mov
mov
pop
jmp
xor
pop
sub
not
jmp
neg
push
mov
mov
push
push
push
mov
jmp
pop
xor
pop
and
pushl
pop
add
shr
xor
xor
xor
jmp
add
add
add
jmp
pop
add
push
mov
push
push
jmp
mov
pop
jmp
xchg
pop
add
popl
mov
mov
push
jmp
subl
pushl
jmp
shr
push
jmp
sub
push
jmp
pushl
mov
add
add
shr
dec
not
dec
and
push
notl
mov
add
sub
add
pop
add
xor
xor
xor
mov
jmp
shl
push
push
pop
shr
xor
jmp
push
push
jmp
mov
push
mov
push
mov
sub
jmp
pop
mov
pop
pushl
pop
add
push
mov
jmp
mov
add
add
sub
pop
push
jmp
pop
mov
jmp
pop
push
mov
push
push
mov
push
notl
jmp
xor
xor
xor
jmp
mov
push
mov
xor
jmp
mov
shr
shl
dec
shl
sub
dec
or
push
mov
not
sub
mov
push
mov
mov
xor
pop
sub
mov
add
jmp
push
jmp
mov
mov
push
mov
add
sub
jmp
add
pop
not
jmp
mov
dec
shl
push
push
pop
jmp
push
push
mov
mov
jmp
xor
pop
jmp
add
push
mov
add
pop
pop
pushl
pop
jmp
pop
add
push
mov
push
sub
jmp
inc
xchg
sub
add
sub
mov
add
push
push
jmp
push
mov
jmp
sub
add
add
pop
push
mov
jmp
push
mov
mov
sub
mov
add
sub
push
mov
not
jmp
mov
shr
push
mov
jmp
inc
or
and
jmp
push
mov
jmp
add
jmp
mov
mov
pop
push
mov
add
jmp
and
not
push
mov
sub
pop
add
add
sub
pop
jmp
sub
sub
add
sub
jmp
popl
mov
mov
push
jmp
mov
sub
jmp
mov
xchg
push
mov
push
mov
jmp
pushl
jmp
pop
add
push
mov
shl
dec
sub
add
pop
sub
jmp
addl
mov
add
jmp
pop
add
xor
xor
xor
mov
push
push
jmp
add
pop
jmp
push
pop
add
pop
push
pushl
pop
popl
pop
imul
push
mov
jmp
push
pop
jmp
mov
add
add
jmp
mov
add
push
mov
mov
xor
inc
dec
or
add
push
mov
push
mov
or
not
neg
sub
push
mov
xor
jmp
mov
pop
jmp
push
mov
shl
xor
sub
add
jmp
sub
sub
sub
add
jmp
add
sub
xchg
pop
mov
push
jmp
sub
sub
mov
pushl
jmp
push
mov
jmp
pop
push
mov
add
pop
xor
pop
add
add
sub
jmp
mov
sub
mov
push
mov
push
jmp
sub
pushl
pop
add
xor
xor
xor
mov
mov
push
jmp
popl
push
mov
add
sub
xchg
jmp
mov
push
mov
add
jmp
sub
shl
push
mov
sub
pop
add
mov
add
add
jmp
mov
pop
xor
pushl
pop
add
and
pushl
pop
push
mov
push
mov
add
add
add
sub
sub
pop
sub
mov
jmp
add
xchg
pushl
mov
push
mov
push
mov
jmp
push
pop
sub
mov
pop
xor
mov
add
add
mov
add
xor
mov
push
push
pop
push
mov
push
mov
neg
jmp
push
mov
xor
push
jmp
pushl
popf
pop
adc
pushf
jmp
push
mov
push
mov
add
sub
jmp
shr
not
jmp
pop
push
mov
add
pop
xchg
pop
or
je
sub
mov
jmp
push
mov
jmp
mov
push
jmp
mov
add
add
xchg
pop
sub
inc
push
push
push
pop
xor
mov
pop
sub
pushl
pop
add
xor
mov
add
jmp
add
sub
pop
mov
mov
push
mov
add
jmp
sub
xchg
pop
mov
mov
sub
pop
movzwl
pushw
mov
jmp
push
mov
add
add
xchg
pop
xor
mov
add
and
mov
push
mov
push
mov
add
add
sub
pop
add
xchg
jmp
push
push
push
pop
xor
sub
mov
pop
jmp
add
pop
sub
jmp
mov
add
jmp
xor
xor
jmp
mov
add
push
jmp
add
add
xchg
pop
add
add
add
mov
add
movzbl
popl
jmp
mov
sub
jmp
mov
neg
add
jmp
pop
xchg
mov
push
jmp
subl
jmp
xor
add
jmp
push
mov
sub
sub
pop
add
sub
jmp
push
mov
or
push
subl
sub
addl
pop
jmp
pop
popl
pop
mov
push
push
pop
inc
dec
neg
push
mov
shr
and
dec
sub
add
add
xor
pop
mov
jmp
pushl
pop
popl
pop
push
mov
push
mov
jmp
add
add
jmp
xor
mov
push
jmp
push
pop
add
push
push
mov
jmp
and
shr
and
push
mov
shl
shr
not
not
sub
jmp
addl
sub
subl
mov
add
add
push
mov
add
pop
xor
add
pop
sub
mov
mov
or
pop
push
mov
xor
jmp
inc
shl
add
jmp
shr
push
mov
dec
jmp
pop
add
sub
shr
push
push
pop
push
mov
sub
pop
add
mov
push
mov
push
push
mov
mov
xor
pop
jmp
pop
add
jmp
push
pushf
jmp
mov
push
mov
xor
mov
add
xor
pop
xor
pop
jmp
mov
add
sub
jmp
mov
push
push
push
mov
add
jmp
push
mov
jmp
pop
add
jmp
mov
sub
mov
push
mov
add
add
sub
jmp
popl
sub
mov
mov
push
mov
add
pop
jmp
neg
and
xor
add
pop
add
pop
push
mov
jmp
mov
add
add
xchg
pop
sub
mov
push
jmp
mov
add
pop
push
mov
mov
sub
add
jmp
pushl
popf
pop
sbb
pushf
jmp
mov
push
jmp
lods
cmpl
je
push
mov
jmp
sub
add
push
mov
push
mov
dec
push
jmp
add
xor
xor
xor
mov
mov
mov
push
mov
shl
inc
sub
add
mov
add
and
mov
push
push
mov
add
jmp
xor
xor
xor
mov
push
mov
push
mov
add
add
mov
add
add
push
pushl
pushl
pop
add
popl
pop
imul
push
mov
jmp
mov
sub
jmp
mov
pop
shl
jmp
pushl
jmp
addl
subl
addl
jmp
pushl
pop
popl
mov
mov
push
push
mov
xor
mov
jmp
add
push
mov
sub
and
pop
not
sub
or
pop
push
mov
push
mov
mov
xor
pushl
pop
add
push
notw
jmp
mov
sub
push
mov
and
pop
jmp
push
mov
add
push
mov
mov
add
sub
jmp
mov
add
pop
xchg
pop
push
push
pop
jmp
push
mov
push
push
mov
mov
jmp
pop
push
jmp
pop
add
add
jmp
pop
add
shr
jmp
pop
popl
pop
pushl
pushl
jmp
pop
jmp
mov
xor
pop
pop
jmp
and
push
mov
add
or
push
negl
pop
sub
sub
jmp
pop
push
mov
mov
push
mov
jmp
mov
push
pop
push
mov
sub
jmp
add
sub
push
push
mov
add
jmp
xchg
pop
mov
mov
jmp
mov
add
push
mov
not
xor
add
sub
add
add
pop
xchg
pop
push
mov
mov
add
mov
push
push
pop
jmp
push
pushl
pop
popl
mov
pushl
mov
jmp
add
add
jmp
add
push
mov
push
mov
mov
push
mov
jmp
add
jmp
mov
sub
add
neg
sub
add
pop
sub
jmp
or
add
shr
jmp
xor
xor
xor
pop
shll
pushf
jmp
xor
sub
pop
add
pushl
pop
add
push
mov
jmp
and
add
push
mov
or
pop
neg
sub
add
pop
jmp
pushl
popf
pop
rcrl
pushf
jmp
push
mov
mov
mov
pop
sub
pop
add
mov
push
mov
add
push
mov
add
pop
xchg
mov
push
mov
pushl
jmp
mov
push
jmp
pop
mov
add
push
mov
push
mov
shl
jmp
push
mov
jmp
pop
jmp
sub
pop
xor
xor
xor
mov
mov
notl
pushl
pop
push
push
pop
push
mov
neg
xor
add
sub
add
add
jmp
pop
xchg
pop
jmp
mov
pop
mov
xor
jmp
sub
add
add
add
sub
push
mov
add
and
dec
jmp
xchg
pop
inc
or
xor
add
sub
pop
add
add
sub
add
sub
push
mov
sub
mov
add
push
mov
neg
jmp
and
push
mov
or
add
push
mov
not
inc
push
push
pop
not
xchg
not
xchg
push
incl
pop
inc
add
jmp
mov
add
sub
pushl
pop
push
mov
add
push
mov
jmp
sub
mov
add
jmp
mov
shl
add
add
neg
sub
xor
sub
pop
or
mov
add
and
push
mov
sub
add
pop
push
mov
xor
jmp
sub
pop
jmp
popw
jmp
mov
push
jmp
mov
mov
jmp
mov
push
jmp
mov
add
add
pushl
pop
add
xchg
mov
mov
push
jmp
add
mov
pop
xor
sub
dec
push
mov
add
pop
sub
pop
add
mov
add
xchg
pop
mov
add
mov
sub
jmp
add
push
mov
push
jmp
pop
add
push
pushl
pop
popl
pop
sub
mov
jmp
mov
push
mov
mov
add
add
xchg
mov
push
push
push
pop
shr
xor
mov
pop
add
mov
push
mov
add
jmp
push
mov
not
shr
shr
shr
jmp
mov
xor
jmp
mov
push
mov
add
mov
add
jmp
pop
push
jmp
push
mov
jmp
or
jmp
mov
push
pop
pop
jmp
pop
dec
push
push
mov
push
pop
push
jmp
push
push
mov
jmp
xchg
mov
push
push
pop
add
sub
add
add
sub
pop
push
mov
add
pop
xor
xor
xor
mov
cmp
pushf
jmp
add
dec
add
jmp
add
add
pushl
pop
jmp
push
mov
push
mov
push
mov
jmp
add
xchg
pop
jmp
or
pop
add
mov
mov
add
push
mov
jmp
xchg
pop
push
mov
pushl
pop
popl
mov
mov
push
jmp
push
mov
jmp
pop
shr
shl
jmp
add
xchg
jmp
add
sub
sub
mov
jmp
sub
push
mov
add
jmp
add
xchg
pop
push
push
pop
push
mov
jmp
neg
add
shl
push
mov
add
pop
sub
jmp
pop
not
push
jmp
push
mov
push
mov
mov
pop
neg
sub
push
mov
add
pop
add
push
mov
add
sub
xchg
pop
mov
mov
jmp
pop
mov
pop
jmp
mov
add
sub
sub
push
mov
or
add
not
dec
jmp
pop
sub
mov
push
pop
push
jmp
inc
push
mov
push
mov
mov
sub
pop
xor
add
pop
add
pop
push
mov
sub
mov
mov
push
pop
mov
jmp
add
push
mov
push
push
mov
push
mov
jmp
mov
push
push
pushl
mov
add
jmp
mov
push
pushl
pop
add
add
jmp
mov
push
push
sub
mov
mov
jmp
sub
xor
pop
push
mov
mov
pop
pop
jmp
mov
sub
pop
jmp
add
pop
push
jmp
pushl
jmp
or
pop
jmp
mov
add
pop
add
jmp
pop
shr
sub
mov
mov
push
mov
sub
jmp
add
xor
xor
xor
pop
add
pushl
pop
add
push
mov
jmp
xor
xor
jmp
add
xchg
mov
jmp
add
sub
mov
push
push
mov
add
shr
push
push
mov
mov
pop
sub
xchg
pop
xor
sub
xor
xor
mov
jmp
addl
jmp
xor
push
mov
neg
add
xor
jmp
pop
push
mov
jmp
xor
xor
mov
jmp
mov
add
subl
jmp
neg
push
mov
xor
pop
xor
push
mov
jmp
push
mov
not
add
shr
push
mov
xor
jmp
pop
add
add
pop
xor
pop
add
add
pop
sub
jmp
pushl
mov
jmp
add
xor
add
pop
add
sub
push
mov
add
neg
jmp
push
mov
shl
jmp
mov
sub
jmp
mov
add
add
jmp
or
shl
push
mov
jmp
mov
mov
add
push
jmp
push
mov
add
pop
jmp
push
push
mov
mov
sub
pop
add
pop
jmp
mov
dec
xor
jmp
mov
pushl
jmp
mov
pop
sub
xor
mov
mov
add
push
jmp
push
mov
mov
add
pop
xor
neg
dec
add
add
sub
mov
add
xor
xor
xor
pop
mov
mov
add
pop
jmp
not
xchg
shr
sub
mov
mov
sub
mov
jmp
mov
mov
push
jmp
push
mov
add
pop
add
pop
push
mov
mov
shl
add
push
mov
dec
shr
and
neg
shl
push
mov
xor
jmp
add
mov
add
push
mov
mov
add
mov
add
xor
xor
xor
mov
or
pushf
jmp
mov
mov
push
mov
jmp
push
push
mov
shr
inc
shl
shl
xor
mov
pop
sub
mov
pop
and
or
shr
xor
xor
add
sub
sub
jmp
xchg
pop
mov
push
jmp
push
push
mov
sub
dec
shl
sub
push
jmp
neg
push
mov
sub
pop
and
pop
sub
jmp
mov
jmp
mov
add
pop
push
pushl
mov
add
popl
jmp
mov
jmp
pop
xor
push
mov
mov
pop
pop
sub
mov
add
jmp
push
mov
addl
pop
add
push
jmp
pop
xor
mov
jmp
mov
not
shr
sub
push
mov
jmp
sub
add
sub
sub
mov
add
pop
sub
mov
jmp
mov
mov
xor
pop
jmp
mov
add
push
sub
mov
addl
jmp
mov
jmp
mov
push
mov
push
mov
add
inc
sub
jmp
pop
add
pushl
mov
add
add
xchg
mov
jmp
sub
add
mov
add
push
mov
neg
sub
shl
or
jmp
popl
jmp
add
pop
add
add
sub
pushw
mov
push
mov
xor
jmp
pushl
pushl
pop
push
mov
add
add
xchg
mov
push
mov
add
add
xchg
mov
push
mov
push
mov
add
pop
jmp
add
mov
add
push
jmp
pushl
mov
jmp
mov
push
pushl
pop
jmp
add
mov
add
jmp
add
push
mov
push
mov
add
pop
add
xchg
pop
push
mov
add
mov
add
sub
xor
xor
xor
mov
mov
jmp
mov
dec
sub
xor
xor
inc
jmp
pop
jmp
mov
pop
pop
add
and
mov
add
or
je
pushl
pushl
jmp
mov
sub
mov
push
pop
push
jmp
pop
push
pop
pop
add
pop
xchg
pop
push
mov
add
mov
add
push
pushl
pushl
mov
add
push
mov
add
jmp
sub
add
pop
jmp
decl
pop
dec
push
mov
not
inc
neg
add
sub
jmp
or
not
add
and
jmp
sub
mov
jmp
xor
mov
sub
sub
mov
jmp
pop
jmp
add
add
pop
push
mov
inc
dec
neg
sub
sub
jmp
pushl
pushl
jmp
sub
xor
mov
pop
add
add
push
mov
jmp
mov
push
mov
sub
add
add
pop
shl
push
mov
dec
push
mov
or
pop
add
sub
pop
shr
push
mov
jmp
or
pop
dec
push
mov
push
mov
neg
neg
or
and
sub
push
mov
not
push
push
mov
mov
add
pop
jmp
pop
mov
mov
jmp
sub
jmp
xor
xor
xor
jmp
mov
pop
pop
mov
push
mov
sub
pop
add
sub
jmp
push
mov
mov
pop
push
mov
jmp
mov
add
shr
add
inc
xor
and
pop
shr
dec
sub
add
add
push
mov
mov
add
sub
push
mov
sub
jmp
mov
add
pop
push
mov
mov
sub
pushl
jmp
add
popl
mov
jmp
pop
add
jmp
add
sub
mov
mov
sub
pop
mov
push
jmp
add
shl
xor
xor
xor
sub
mov
notl
jmp
shr
cmp
je
push
push
jmp
xor
jmp
push
push
pop
mov
pushl
pop
jmp
push
mov
mov
shr
shl
dec
jmp
pop
mov
mov
add
mov
add
push
push
jmp
mov
sub
xor
add
pop
sub
sub
push
push
jmp
add
mov
push
mov
add
add
xchg
pop
sub
pop
jmp
push
mov
push
mov
add
pop
sub
push
sub
mov
mov
mov
xor
pop
sub
pop
pop
sub
add
add
sub
jmp
pop
jmp
xor
xor
push
mov
add
pop
mov
pop
xor
xor
add
push
mov
add
sub
sub
xchg
pop
add
add
pop
jmp
push
notb
mov
jmp
sub
mov
add
add
pop
pop
add
add
xor
xor
jmp
movzbw
push
pushf
jmp
push
mov
mov
pop
push
notb
jmp
add
sub
sub
pop
push
mov
jmp
mov
xor
pop
push
push
mov
mov
sub
pop
or
push
mov
add
pop
sub
mov
add
add
push
mov
mov
jmp
pushl
jmp
push
mov
inc
add
or
sub
add
pop
jmp
sub
pop
add
xchg
jmp
pop
xor
xor
sub
jmp
mov
add
sub
sub
jmp
mov
mov
dec
jmp
mul
movzbw
pushw
mov
jmp
add
sub
push
push
mov
add
jmp
sub
push
mov
addl
jmp
mov
add
xchg
pop
shr
xor
push
xchg
jmp
mov
mov
pop
push
mov
add
jmp
pop
mov
pop
jmp
push
mov
jmp
or
shr
xor
add
pop
push
mov
xor
pop
not
pushw
mov
mov
sub
mov
add
sub
mov
sub
mov
push
jmp
mov
mov
dec
push
mov
sub
jmp
pop
and
jmp
mov
add
pop
add
sub
pushl
pop
add
push
push
push
pop
mov
pop
add
pop
sub
mov
push
push
mov
jmp
push
push
mov
dec
jmp
mov
push
pop
jmp
mov
add
inc
jmp
push
mov
mov
sub
add
add
mov
add
push
mov
shl
xor
add
xor
mov
add
push
mov
xor
mov
add
jmp
or
pop
add
jmp
add
sub
pop
sub
sub
mov
push
pop
add
sub
xchg
pop
mov
mov
add
mov
push
mov
add
add
xchg
jmp
push
push
jmp
pop
mov
pop
or
add
or
push
mov
xor
pop
add
pushl
pop
add
add
push
pushl
pushl
pop
push
mov
jmp
add
xor
mov
jmp
sub
shl
jmp
push
push
pop
push
mov
shl
add
add
jmp
push
mov
push
mov
sub
add
jmp
pop
push
mov
sub
jmp
mov
add
add
xchg
mov
add
sub
xchg
jmp
push
push
popl
jmp
jmp
pop
jmp
push
mov
sub
dec
jmp
mov
sub
pop
xchg
mov
mov
sub
mov
push
mov
add
pop
pop
add
push
mov
add
pop
xchg
mov
push
push
jmp
push
mov
jmp
push
push
mov
add
xor
mov
pop
push
mov
or
dec
add
push
push
pop
neg
shl
shr
neg
shr
sub
jmp
xchg
pop
mov
push
jmp
and
pushl
pop
push
mov
push
jmp
pop
jmp
push
mov
jmp
pop
add
jmp
add
add
add
sub
jmp
sub
pop
add
add
sub
pop
mov
add
and
pushl
jmp
mov
pop
sub
push
mov
add
sub
sub
add
sub
pop
push
mov
sub
xor
pop
add
add
sub
pop
add
jmp
push
jmp
push
push
jmp
mov
mov
sub
sub
jmp
mov
push
pop
push
push
pop
shl
add
jmp
pop
add
pushl
pop
add
sub
pop
push
mov
jmp
shr
add
sub
mov
add
push
mov
shl
or
xor
inc
push
mov
neg
sub
sub
pop
add
pop
add
pop
jmp
xchg
mov
mov
popl
pop
push
push
jmp
xor
pop
add
and
xor
add
pop
push
mov
push
push
push
mov
and
neg
dec
or
push
mov
xor
pop
jmp
mov
add
pop
xor
sub
add
sub
sub
pop
add
jmp
sub
push
push
push
jmp
pushl
pop
push
push
pop
add
jmp
mov
bts
pushf
jmp
add
jmp
mov
sub
mov
mov
push
mov
add
pop
add
xchg
jmp
xchg
pop
shl
xchg
jmp
mov
add
jmp
sub
mov
add
sub
mov
pushl
pushl
pop
jmp
mov
push
mov
jmp
add
add
jmp
sub
addl
pop
and
dec
not
inc
xor
jmp
push
mov
sub
mov
mov
shr
neg
add
add
pop
dec
push
push
mov
mov
mov
add
shr
shl
push
mov
jmp
add
push
mov
add
jmp
push
mov
add
jmp
pushl
mov
add
push
mov
push
jmp
pop
sub
add
add
jmp
push
push
push
mov
add
push
jmp
mov
mov
push
mov
push
mov
push
mov
jmp
push
mov
not
add
push
mov
dec
shl
inc
add
xor
pop
sub
mov
push
mov
mov
pop
xor
mov
add
jmp
shr
sub
add
mov
add
sub
jmp
sub
pop
add
sub
sub
add
pop
push
push
jmp
push
mov
add
add
xchg
pop
shr
push
push
jmp
pop
popl
jmp
sub
mov
pop
sub
xor
sub
mov
addl
pop
sub
mov
add
push
mov
sub
sub
mov
add
add
add
pushl
jmp
add
add
mov
add
sub
xor
xor
xor
jmp
pushl
pushl
jmp
sub
and
neg
push
mov
sub
xor
not
jmp
mov
mov
sub
jmp
xchg
jmp
push
mov
add
add
jmp
xor
add
sub
push
mov
xor
sub
pop
pop
add
jmp
push
push
push
pop
sub
mov
jmp
mov
notl
pop
push
mov
sub
and
pop
add
or
xor
sub
mov
mov
push
mov
sub
or
and
xor
add
jmp
push
mov
push
push
mov
push
jmp
add
xor
shl
add
sub
add
add
mov
jmp
pop
sub
mov
jmp
sub
sub
add
pop
sub
jmp
pop
add
push
mov
jmp
mov
push
mov
add
add
xchg
pop
xchg
pop
jmp
mov
push
jmp
sub
or
shl
sub
and
add
mov
pop
jmp
not
shr
dec
and
xor
add
sub
sub
jmp
mov
add
pop
sub
xchg
pop
mov
addl
jmp
shr
sub
sub
jmp
push
mov
dec
inc
push
mov
sub
pop
jmp
popl
pop
imul
push
pushf
jmp
neg
add
jmp
pop
sub
pop
jmp
xor
and
pushl
pop
add
shr
xor
push
push
jmp
mov
add
jmp
pop
sub
push
jmp
sub
pop
xor
xor
xor
mov
mov
mov
jmp
add
mov
jmp
mov
addl
pop
push
push
mov
push
xorl
jmp
mov
sub
not
push
mov
not
jmp
mov
add
mov
add
jmp
sub
sub
add
pop
sub
add
pop
push
push
jmp
sub
pop
jmp
sub
xchg
pop
mov
jmp
mov
jmp
pop
push
mov
add
add
sub
jmp
add
add
pop
sub
pushl
pop
add
push
mov
jmp
add
jmp
pushl
pushl
jmp
add
sub
sub
push
push
mov
mov
sub
sub
push
mov
add
pop
pop
add
sub
sub
neg
add
add
pop
jmp
pushl
pushl
jmp
mov
sub
mov
mov
jmp
jmp
xchg
mov
add
pushl
push
jmp
mov
shr
not
shl
push
mov
jmp
mov
inc
dec
jmp
or
pop
jmp
mov
push
jmp
mov
jmp
xor
pushl
pushl
pop
add
sub
mov
mov
jmp
push
mov
sub
pop
add
add
sub
mov
jmp
neg
and
shr
and
sub
sub
add
add
pop
add
add
sub
push
mov
push
mov
mov
pop
not
neg
inc
jmp
sub
mov
push
mov
mov
mov
jmp
mov
sub
mov
push
pop
add
add
push
pushl
pop
popl
pop
add
add
xchg
mov
idiv
push
mov
jmp
push
mov
neg
neg
not
add
mov
pop
jmp
push
mov
jmp
sub
mov
mov
add
jmp
xor
jmp
push
mov
add
pop
jmp
add
sub
xchg
pop
mov
push
jmp
mov
and
jmp
push
mov
push
jmp
push
mov
jmp
mov
mov
sub
jmp
xchg
jmp
pop
sub
xor
xor
xor
mov
mov
push
jmp
push
mov
jmp
add
mov
push
mov
mov
add
push
mov
jmp
pop
add
push
mov
add
sub
xchg
mov
jmp
mov
pop
jmp
xor
jmp
sub
sub
jmp
mov
add
sub
push
pushl
pop
jmp
movl
addl
sub
pop
push
mov
jmp
mov
push
jmp
push
mov
mov
jmp
sub
subl
pop
mov
sub
mov
mov
add
add
xchg
jmp
sub
push
mov
sub
pop
sub
sub
add
jmp
push
pop
add
add
jmp
push
sub
pushl
pop
add
add
sub
add
add
pop
jmp
xor
mov
add
push
jmp
pop
and
mov
jmp
push
mov
mov
pop
push
notb
pushl
pop
add
sub
mov
mov
xor
pop
sub
mov
add
push
mov
dec
add
jmp
push
pushl
mov
jmp
add
pop
xchg
mov
add
push
mov
jmp
xchg
shl
xor
jmp
pop
sub
add
add
sub
add
sub
mov
mov
neg
push
mov
sub
xor
mov
add
sub
pop
mov
add
xchg
jmp
shl
add
mov
pop
shl
push
push
mov
add
add
pop
add
sub
sub
mov
push
mov
push
mov
add
pop
jmp
pop
add
mov
pop
or
not
neg
shr
shl
sub
add
pop
push
mov
mov
shl
and
shl
shl
sub
xor
jmp
sub
add
pop
xor
pop
push
push
jmp
sub
add
pop
add
jmp
pop
jmp
xor
pop
push
mov
push
pushl
pop
add
jmp
xchg
pop
mov
mov
jmp
popl
pop
push
jmp
mov
mov
pop
pop
mov
pop
pop
xor
push
mov
mov
pop
pop
push
mov
xor
sub
xor
xor
shr
sub
jmp
mov
mov
add
push
mov
or
jmp
add
jmp
sub
pop
pop
jmp
mov
mov
push
mov
jmp
push
mov
sub
pop
xchg
pop
mov
push
jmp
pop
not
and
not
sub
xor
and
pop
not
sub
push
push
push
pop
neg
xor
mov
pop
not
neg
xor
jmp
xor
xor
xor
pop
jmp
add
add
add
sub
push
mov
sub
pop
pop
xchg
jmp
pushl
jmp
add
sub
push
jmp
mov
add
pop
mov
jmp
mov
mov
add
jmp
xor
shr
add
or
mov
add
push
mov
sub
pushl
jmp
incl
pop
sub
inc
jmp
pop
add
or
shl
push
mov
jmp
mov
jmp
pop
push
mov
sub
jmp
push
pushl
mov
add
popl
pop
add
sub
mov
jmp
mov
add
addl
subl
add
push
mov
add
jmp
mov
xchg
not
jmp
pop
mov
pop
push
mov
add
sub
xchg
jmp
pop
subw
jmp
pop
pushl
pop
add
pop
and
pushl
mov
add
push
jmp
xor
mov
mov
push
jmp
mov
push
jmp
mov
sub
mov
mov
shr
dec
jmp
add
jmp
add
pop
add
sub
sub
sub
pop
push
mov
jmp
xor
pop
add
pop
push
mov
add
pop
add
add
jmp
pop
push
xorl
pop
xor
mov
add
add
pushl
pop
add
push
push
mov
mov
pop
shr
dec
push
mov
add
jmp
push
mov
mov
push
mov
or
pop
or
jmp
push
jmp
neg
shr
jmp
mov
pushl
pop
popl
pop
mov
jmp
xor
mov
pop
xor
pop
add
pop
push
mov
sub
mov
add
push
push
pop
add
push
mov
sub
mov
add
jmp
push
mov
mov
add
sub
push
pushl
pop
jmp
add
push
mov
add
jmp
push
pop
add
push
push
pop
jmp
pop
popl
mov
mov
push
pop
push
push
jmp
add
push
pushl
pop
popl
mov
sub
mov
mov
push
mov
add
pop
sub
mov
push
mov
mov
pop
add
pop
jmp
push
mov
add
push
mov
push
mov
sub
add
pushl
pop
push
mov
add
sub
mov
mov
neg
shl
sub
shl
jmp
pop
add
xchg
pop
jmp
sub
jmp
pop
push
mov
add
add
pop
jmp
pop
add
pushl
mov
add
push
mov
add
jmp
mov
shl
and
shl
xor
sub
pop
xor
jmp
shr
sub
shr
dec
add
mov
pop
add
jmp
mov
push
mov
not
xor
add
jmp
xor
push
push
mov
shl
xor
mov
pop
add
add
mov
add
mov
pop
push
xorl
pop
xor
mov
add
add
jmp
mov
sarb
pushf
jmp
xor
jmp
pop
push
mov
push
sub
pop
or
xor
xor
add
jmp
push
mov
or
mov
add
sub
sub
mov
jmp
pop
push
mov
add
and
sub
inc
shl
xor
add
jmp
xor
pop
push
mov
jmp
sub
jmp
add
shr
sub
add
push
mov
sub
pop
push
mov
xor
sub
pop
add
add
mov
add
sub
push
push
push
jmp
push
pushl
pop
popl
mov
shll
pushf
jmp
sub
pop
sub
add
jmp
pop
add
sub
xchg
pop
mov
jmp
xor
add
add
sub
jmp
mov
sub
pop
add
add
pop
push
mov
add
pop
jmp
add
mov
pop
jmp
push
push
pop
jmp
sub
pop
push
mov
jmp
add
jmp
sub
mov
mov
jmp
push
mov
push
jmp
mov
sub
push
popl
addl
mov
jmp
mov
push
mov
dec
and
or
jmp
mov
pop
subl
jmp
add
sub
xchg
pop
mov
push
mov
add
pop
popl
push
mov
add
pop
mov
add
push
mov
add
mov
add
jmp
lods
push
mov
jmp
mov
mov
pop
push
jmp
add
push
push
push
pop
sub
xor
dec
add
mov
pop
push
mov
not
not
xor
sub
pop
add
sub
sub
jmp
push
push
sub
mov
mov
mov
jmp
push
mov
jmp
pushl
pop
jmp
pushl
pop
jmp
add
push
mov
not
jmp
push
mov
push
push
push
push
jmp
push
mov
push
mov
mov
push
jmp
pop
shl
jmp
pop
jmp
push
pop
sub
mov
push
mov
jmp
and
dec
jmp
pop
sub
mov
mov
sub
pop
xor
xor
jmp
mov
addl
sub
push
jmp
not
xchg
inc
push
push
push
mov
add
shl
sub
sub
mov
pop
or
mov
add
push
mov
add
pop
push
jmp
push
push
pop
add
jmp
or
add
mov
mov
jmp
lods
push
push
jmp
mov
add
shl
shr
jmp
push
mov
mov
sub
pop
sub
sub
mov
mov
shl
shr
or
neg
push
mov
xor
pop
sub
pop
add
pop
jmp
add
mov
add
push
mov
jmp
pushl
pop
push
mov
push
pop
add
sub
jmp
mov
add
add
sub
mov
mov
jmp
mov
add
add
xchg
pop
xor
xor
xor
pop
mov
sub
mov
mov
mov
pop
and
shl
not
shl
and
push
jmp
pop
sub
jmp
mov
jmp
add
add
add
push
pushl
pop
popl
pop
sub
mov
jmp
push
mov
add
add
push
pushl
pop
popl
pop
xor
jmp
mov
sub
add
jmp
mov
mov
add
sub
mov
mov
jmp
inc
xchg
not
xor
jmp
pop
push
push
pop
add
add
jmp
pop
add
jmp
mov
push
jmp
mov
push
negl
pop
not
or
jmp
mov
push
jmp
pop
push
mov
push
jmp
xor
xor
jmp
pop
mov
add
push
pushl
mov
add
popl
mov
or
pushf
jmp
mov
sub
mov
push
mov
mov
pop
push
jmp
push
mov
and
pop
shr
not
not
sub
mov
push
mov
sub
mov
pop
dec
not
inc
and
add
sub
add
jmp
push
push
pop
push
mov
xchg
jmp
pop
sub
sub
jmp
inc
dec
not
xor
jmp
add
add
pop
jmp
pushl
pushl
jmp
sub
mov
add
pop
add
xchg
pop
push
mov
mov
jmp
inc
shr
push
mov
mov
sub
mov
pop
push
mov
or
pop
push
mov
add
sub
sub
mov
add
add
pop
jmp
add
add
sub
pushl
jmp
pushl
pop
add
sub
xor
add
mov
pop
sub
mov
jmp
add
add
pop
add
push
mov
xor
xor
xor
sub
mov
push
mov
add
add
xchg
pop
mov
add
add
push
jmp
shr
not
shr
jmp
sub
jmp
not
add
add
pop
xchg
mov
popl
pop
add
push
jmp
mov
sub
mov
addl
pop
push
jmp
add
sub
push
push
push
pop
mov
mov
push
mov
add
sub
xchg
pop
mov
mov
add
add
xchg
pop
sub
jmp
sub
push
push
mov
or
xor
mov
pop
sub
xor
add
pop
add
mov
add
push
mov
sub
inc
and
push
jmp
push
mov
xor
add
pop
not
inc
push
jmp
mov
add
jmp
mov
mov
dec
sub
add
add
pop
push
mov
add
sub
add
mov
push
mov
add
push
mov
shl
or
xor
jmp
sub
or
shr
jmp
xor
push
mov
inc
jmp
push
mov
subb
sub
jmp
add
sub
mov
mov
add
add
sub
pop
xor
xor
xor
pop
and
pushl
mov
add
add
or
shl
pushl
push
jmp
shr
not
xor
add
add
add
sub
push
mov
sub
jmp
addl
add
subl
addl
jmp
push
mov
jmp
push
push
pop
jmp
pop
sub
jmp
mov
sub
pop
pop
xor
mov
add
push
mov
jmp
mov
xor
pop
sub
add
push
mov
mov
jmp
mov
dec
shl
jmp
xchg
push
notl
pop
xchg
push
mov
sub
jmp
lods
sub
push
jmp
pop
push
mov
jmp
push
mov
push
mov
add
pop
add
xchg
jmp
push
pushl
pop
push
mov
add
jmp
add
add
pop
xor
pop
and
pop
or
je
pushl
pushl
jmp
push
mov
mov
xor
pop
add
jmp
pop
shl
push
mov
and
pop
push
mov
or
pop
push
mov
xor
pop
push
mov
xor
mov
add
and
mov
jmp
pop
xor
xor
xor
mov
shll
jmp
push
mov
mov
pop
pop
shl
add
add
pushl
mov
add
add
push
mov
add
add
sub
mov
add
xchg
pop
jmp
not
and
add
addl
push
mov
sub
pop
sub
addl
jmp
pop
jmp
xchg
xchg
push
jmp
push
push
jmp
not
shr
push
decl
mov
add
neg
push
jmp
sub
xor
xor
xor
mov
mov
mov
shr
jmp
mov
push
jmp
addl
pop
jmp
push
pushf
jmp
pop
mov
mov
mov
mov
push
mov
push
jmp
mov
mov
add
jmp
push
mov
mov
push
mov
sub
xor
or
jmp
xchg
mov
push
mov
shr
add
add
pop
sub
sub
mov
mov
sub
pop
mov
push
mov
push
pop
add
add
jmp
mov
push
mov
add
neg
xor
mov
pop
mov
add
add
xor
pop
push
mov
add
pop
sub
xor
dec
pushw
jmp
push
push
push
mov
add
add
mov
pop
add
mov
add
sub
pushl
mov
add
push
mov
push
mov
xor
and
jmp
subl
pop
pushl
pop
add
push
mov
push
jmp
xor
jmp
xor
pop
jmp
pushl
pop
push
mov
mov
push
mov
shl
jmp
shlb
pushf
jmp
pop
sub
sub
add
add
mov
add
add
xchg
mov
jmp
shl
sub
add
pop
xchg
pop
push
mov
push
mov
mov
mov
add
sub
mov
mov
shl
shl
sub
sub
pop
jmp
add
mov
add
xor
xor
xor
mov
and
pushf
jmp
pushl
pop
sub
mov
push
push
jmp
push
mov
sub
mov
mov
neg
jmp
push
mov
add
add
push
pushl
pop
popl
pop
mov
pop
sub
mov
mov
or
and
inc
add
sub
add
add
jmp
pop
jmp
add
push
push
jmp
pop
sub
sub
add
pop
push
mov
not
jmp
mov
jmp
sub
mov
mov
and
sub
mov
jmp
sub
add
jmp
jmp
push
mov
pushl
pop
popl
mov
bt
pushf
jmp
mov
sub
jmp
mov
sub
inc
xor
not
sub
add
add
pop
xchg
pop
push
mov
pop
mov
add
push
mov
push
sub
mov
jmp
pop
xor
xor
xor
mov
push
mov
jmp
add
push
jmp
pop
mov
sub
jmp
pop
jmp
mov
jmp
push
mov
mov
pop
add
sub
mov
push
mov
add
jmp
add
pop
xchg
pop
push
mov
jmp
mov
xor
inc
jmp
shr
sub
sub
add
add
sub
add
pop
xor
xor
jmp
push
mov
push
mov
add
sub
xchg
pop
mov
mov
sub
or
and
add
pushw
mov
mov
xor
pop
mov
mov
jmp
pop
pop
xchg
inc
xchg
inc
sub
mov
jmp
pop
mov
add
push
jmp
add
sub
pop
push
pushl
pop
popl
pop
sub
mov
mov
add
sub
xchg
pop
mov
push
push
pop
sub
mov
jmp
pushw
pop
shl
add
push
notw
jmp
pop
jmp
xchg
pop
jmp
push
mov
shr
neg
xor
add
pop
add
mov
add
push
pushl
mov
sub
mov
mov
push
mov
add
pop
push
jmp
pop
mov
jmp
xor
xor
jmp
or
add
sub
pop
shl
xor
sub
pop
jmp
xchg
pop
push
push
mov
xor
pop
popl
jmp
mov
sub
pop
inc
add
mov
pop
pushw
jmp
and
not
neg
jmp
mov
push
mov
add
pop
add
sub
pushl
jmp
addl
pop
sub
pop
jmp
mov
pop
add
pop
add
push
push
push
jmp
add
mov
pop
jmp
mov
add
xor
jmp
push
mov
jmp
push
pop
inc
dec
jmp
popl
addl
jmp
pop
add
push
push
pop
push
jmp
mov
and
pop
not
push
mov
add
add
sub
pop
add
mov
push
mov
add
add
xchg
mov
push
mov
add
jmp
pop
push
mov
push
mov
add
pop
add
xor
xor
jmp
xchg
pop
push
pushl
pop
popl
mov
or
jne
push
mov
jmp
add
jmp
pop
neg
sub
sub
add
push
mov
add
pop
mov
push
mov
add
add
xchg
pop
push
mov
add
inc
xor
jmp
mov
push
mov
dec
push
mov
sub
pop
mov
pop
sub
pop
add
mov
add
sub
mov
pushl
pop
popl
mov
jmp
mov
mov
pop
xor
jmp
add
push
mov
add
pop
add
sub
pop
push
mov
push
mov
add
pop
add
sub
pop
push
mov
pushl
mov
jmp
push
mov
mov
jmp
pushl
pop
push
mov
push
pop
add
add
jmp
add
sub
pushl
pop
push
mov
mov
add
add
xchg
jmp
sub
mov
mov
add
mov
add
add
pop
jmp
push
mov
mov
jmp
push
pop
sub
mov
mov
add
pop
push
jmp
shl
dec
not
or
jmp
sub
sub
add
pushl
jmp
push
mov
add
pop
pushl
pushl
jmp
mov
mov
pop
add
shl
or
xor
xor
jmp
sub
pop
jmp
pop
mov
push
jmp
pop
sub
sub
mov
add
push
push
jmp
push
pushl
pop
popl
mov
push
mov
jmp
pop
jmp
mov
push
mov
mov
mov
add
mov
xor
mov
add
push
mov
add
add
add
shl
add
sub
pop
sub
add
jmp
sub
add
jmp
mov
sub
pop
neg
shr
sub
add
pop
add
sub
pop
add
sub
mov
push
mov
add
add
xchg
pop
sub
jmp
add
inc
add
add
pop
add
push
pushl
mov
add
jmp
lods
sub
push
jmp
add
pop
add
jmp
mov
push
jmp
push
mov
sub
jmp
pushl
pop
popl
mov
mov
push
pushf
jmp
sub
sub
add
push
mov
inc
add
add
pop
pop
jmp
pop
add
push
mov
jmp
mov
jmp
push
push
pop
add
pop
push
pushl
pop
popl
pop
add
mov
push
push
pushl
pop
add
add
push
mov
add
jmp
push
mov
xchg
not
xchg
mov
mov
add
jmp
sub
xor
mov
jmp
push
mov
mov
jmp
pop
xor
shl
jmp
add
shl
shr
sub
jmp
pop
push
jmp
mov
push
pop
push
mov
sub
jmp
add
push
pushl
mov
add
popl
pop
push
jmp
mov
add
jmp
mov
add
add
xchg
pop
sub
mov
push
jmp
add
pop
push
sub
mov
push
mov
add
push
mov
jmp
shr
push
push
push
pop
shl
shl
or
xor
push
pop
pop
and
mov
add
shl
sub
sub
pop
push
pop
jmp
add
push
mov
mov
jmp
sub
pushl
pop
push
mov
add
add
xchg
pop
sub
push
mov
add
add
inc
shr
xor
add
pop
pop
sub
jmp
push
mov
sub
jmp
add
add
jmp
mov
add
push
mov
sub
mov
add
xchg
jmp
or
xor
mov
pop
jmp
pop
mov
jmp
and
pushl
mov
add
push
mov
jmp
inc
jmp
mov
add
mov
mov
pop
jmp
pop
add
pop
xchg
mov
push
mov
jmp
mov
push
push
mov
mov
mov
jmp
add
add
jmp
popl
mov
sub
mov
jmp
xchg
mov
jmp
pushl
pop
add
jmp
pop
sub
jmp
pushl
pop
add
push
mov
inc
sub
add
shl
sub
add
add
sub
pop
sub
sub
pop
add
add
mov
add
jmp
xchg
mov
push
jmp
mov
and
mov
jmp
add
push
mov
mov
push
mov
xor
dec
jmp
add
pop
add
jmp
sub
push
pushl
pop
popl
mov
mov
mov
jmp
mov
push
mov
mov
push
pushl
jmp
pushl
pop
popl
jmp
add
add
jmp
push
mov
jmp
mov
mov
push
mov
push
mov
jmp
mov
mov
push
mov
shl
push
incl
pop
not
inc
neg
add
add
add
sub
mov
add
sub
mov
mov
sub
jmp
push
mov
jmp
mov
mov
sub
pop
mov
add
add
push
pushl
mov
push
mov
push
mov
add
mov
add
add
xchg
pop
popl
jmp
subl
pop
push
mov
add
pop
mov
push
mov
add
jmp
mov
pop
push
mov
sub
pop
add
add
pop
sub
jmp
and
sub
jmp
mov
sub
mov
addl
pop
push
jmp
push
mov
push
push
mov
shl
jmp
xchg
pop
xor
pop
sub
pop
ret
jmp
add
add
sub
mov
pushl
pop
jmp
mov
xor
jmp
add
and
mov
add
or
shl
push
push
jmp
sub
push
mov
not
xor
push
push
push
jmp
shr
or
add
or
jmp
mov
mov
add
add
xchg
pop
push
mov
jmp
subl
sub
addl
jmp
pop
idiv
sub
mov
jmp
mov
push
mov
sub
mov
push
mov
add
pop
mov
add
add
add
push
mov
add
sub
xchg
pop
mov
pushl
jmp
mov
not
jmp
mov
mov
xor
jmp
push
mov
add
jmp
pop
add
push
mov
xor
add
jmp
push
mov
addl
pop
sub
mov
jmp
add
sub
pop
push
jmp
push
pop
push
mov
jmp
push
mov
sub
mov
jmp
sub
sub
jmp
push
mov
push
mov
xor
mov
pop
sub
jmp
pop
add
jmp
mov
pop
add
sub
sub
mov
add
xor
pushl
pop
add
xor
pop
push
xor
xor
xor
not
xchg
mov
add
jmp
mov
mov
push
mov
jmp
push
mov
mov
pop
push
pop
jmp
mov
push
mov
not
jmp
push
mov
jmp
xchg
pop
mov
mov
jmp
mov
add
sub
xchg
pop
mov
push
mov
jmp
add
sub
pop
pushl
pop
add
sub
mov
jmp
xor
jmp
pop
sub
add
jmp
push
mov
mov
add
sub
xchg
jmp
pop
addl
addl
jmp
pop
jmp
jmp
push
mov
push
mov
jmp
mov
push
jmp
add
sub
jmp
add
add
push
jmp
pop
sub
sub
pop
add
inc
push
mov
or
sub
not
neg
sub
xor
sub
pop
and
push
push
mov
mov
jmp
pushl
mov
add
add
pushl
mov
jmp
sub
jmp
mov
push
push
push
push
mov
jmp
sub
pop
add
add
sub
pushl
pushl
pop
jmp
not
neg
jmp
mov
add
xchg
pop
movzbl
pushl
pushl
jmp
mov
add
add
xchg
pop
shl
sub
mov
jmp
pushl
push
jmp
sub
pop
sub
add
pop
add
sub
dec
shl
or
xor
sub
add
add
pop
sub
mov
mov
mov
pop
pop
jmp
sub
pop
add
jmp
mov
add
add
sub
mov
add
add
sub
sub
pop
add
sub
sub
add
push
mov
sub
pop
pop
sub
sub
jmp
and
sub
mov
negl
mov
add
push
mov
jmp
pop
mov
pop
pushl
pop
add
push
push
jmp
or
pop
jmp
shl
shl
dec
sub
add
pop
sub
xchg
pop
push
popl
addl
popl
addl
mov
push
push
mov
addl
pop
push
jmp
mov
mov
mov
sub
pop
sub
jmp
pushl
pop
add
sub
mov
mov
jmp
add
xor
jmp
push
mov
jmp
pushl
pushl
jmp
pop
mov
add
shl
jmp
pop
sub
add
pushl
jmp
push
mov
add
sub
mov
pop
jmp
mov
pop
add
add
sub
push
mov
sub
pop
pop
push
mov
add
sub
xchg
pop
mov
pushl
pop
popl
pop
jmp
push
mov
push
push
mov
mov
jmp
mov
dec
xor
and
add
sub
pop
mov
add
push
jmp
mov
add
add
mov
add
push
mov
add
or
shr
jmp
mov
push
mov
push
mov
add
jmp
pop
push
jmp
push
push
mov
mov
and
add
jmp
mov
mov
jmp
mov
add
add
sub
mov
mov
add
mov
add
add
push
pushl
pop
popl
mov
xor
pushf
jmp
push
mov
push
mov
mov
pop
jmp
mov
push
push
push
mov
mov
jmp
mov
and
add
jmp
push
mov
add
mov
add
xchg
mov
shr
push
push
jmp
add
add
push
push
mov
mov
pop
sub
sub
pop
jmp
push
push
pop
jmp
mov
push
jmp
sub
push
mov
sub
pop
addl
addl
jmp
sub
pop
push
mov
add
pop
add
std
push
pushl
jmp
xor
jmp
add
sub
push
mov
push
mov
or
sub
sub
pop
push
mov
and
pop
push
mov
add
sub
xchg
mov
mov
jmp
sub
jmp
mov
mov
jmp
pop
pop
sub
add
add
sub
add
push
jmp
mov
push
xchg
not
xor
xor
jmp
lods
push
mov
jmp
push
mov
mov
pop
jmp
mov
inc
inc
pushw
sub
mov
jmp
mov
add
push
mov
jmp
mov
mov
add
jmp
mov
mov
xor
xor
pop
mov
pop
mov
jmp
popl
mov
mov
mov
sub
pop
sub
add
jmp
addl
mov
add
sub
pop
sub
add
add
pushl
pop
push
mov
add
push
mov
add
pop
xchg
mov
xchg
mov
jmp
neg
add
sub
and
pop
or
add
mov
mov
push
mov
add
add
xor
xor
xor
pop
add
pop
shl
sub
jmp
push
push
mov
jmp
sub
sub
pop
add
pop
sub
push
mov
mov
push
push
mov
mov
pop
or
pop
push
notl
pop
push
notl
jmp
add
xor
pop
shl
xor
add
pop
pushl
pop
add
add
push
push
mov
inc
xor
push
mov
or
dec
and
jmp
push
push
pop
shl
push
mov
jmp
mov
push
mov
add
pop
push
jmp
mov
mov
push
mov
jmp
pushl
pop
jmp
sub
add
push
mov
push
mov
push
subl
jmp
push
mov
push
mov
mov
pop
mov
mov
add
add
sub
add
add
sub
mov
add
xor
xor
xor
mov
add
pushf
jmp
pop
mov
mov
push
mov
pop
mov
push
jmp
pushl
pop
popl
pop
test
pushf
jmp
mov
push
jmp
pop
imul
movzbw
pushw
mov
jmp
add
shl
neg
dec
xor
mov
pop
xor
jmp
mov
push
jmp
popl
mov
jmp
popl
jmp
push
mov
add
push
mov
sub
pop
push
mov
pushl
mov
add
popl
pop
mov
mov
xor
pop
push
mov
dec
jmp
xor
mov
push
mov
jmp
xor
push
jmp
push
pushl
pop
add
sub
mov
mov
inc
jmp
add
push
jmp
div
movzbw
pushw
mov
jmp
push
mov
jmp
sub
push
jmp
push
push
mov
add
mov
pop
jmp
push
notl
pop
jmp
pop
add
xor
push
mov
jmp
mov
mov
mov
add
sub
sub
jmp
xchg
jmp
add
jmp
push
mov
add
pop
push
mov
jmp
mov
pop
and
sub
sub
pop
add
push
mov
jmp
pop
push
mov
add
jmp
pop
add
jmp
add
and
shr
jmp
push
mov
add
add
xchg
pop
shr
xor
xor
xor
jmp
mov
sub
jmp
pushl
pop
jmp
pop
add
sub
pop
pop
push
mov
mov
add
pop
jmp
pushl
mov
jmp
push
mov
inc
xor
not
inc
or
add
add
pop
jmp
xchg
push
mov
mov
mov
pop
add
add
jmp
pop
sub
jmp
pop
and
jmp
pop
jmp
sub
add
add
sub
add
add
pop
add
push
jmp
push
mov
inc
jmp
push
mov
push
pop
push
mov
jmp
xor
jmp
add
sub
sub
pop
push
mov
mov
pop
jmp
add
push
mov
add
jmp
add
xchg
pop
add
jmp
pushl
pop
add
jmp
add
sub
pop
jmp
mov
mov
sub
jmp
add
add
mov
mov
add
jmp
mov
push
push
pop
add
add
jmp
pop
push
mov
add
add
xchg
pop
sub
mov
mov
add
add
push
mov
xor
sub
pop
pushl
mov
add
add
jmp
pushl
pop
push
jmp
xchg
mov
push
mov
jmp
add
pop
push
push
mov
mov
pop
add
jmp
sub
pop
pushl
pop
sub
mov
mov
add
add
xchg
jmp
xor
add
add
pop
add
sub
pop
sub
xor
xor
xor
mov
mov
mov
mov
pushl
pop
add
add
push
push
jmp
mov
mov
push
push
jmp
mov
add
push
mov
jmp
push
pop
push
mov
shl
push
sub
pop
not
add
jmp
mov
or
pop
sub
push
mov
push
mov
mov
pop
pop
pop
sub
push
mov
push
mov
add
mov
pop
sub
jmp
pop
push
push
push
pop
add
push
pop
jmp
pop
add
sub
push
pushl
mov
add
popl
jmp
mov
add
jmp
sub
xor
sub
sub
add
add
pop
sub
jmp
mov
push
mov
add
sub
xchg
jmp
push
mov
jmp
push
push
mov
mov
mov
push
push
pop
jmp
mov
push
jmp
push
mov
push
mov
add
pop
jmp
mov
push
mov
jmp
mov
add
sub
mov
jmp
push
jmp
mov
mov
shr
push
push
mov
shl
add
sub
shr
sub
mov
pop
push
push
pop
shr
or
xor
inc
or
jmp
add
add
add
mov
add
xchg
mov
jmp
pop
shl
sub
sub
add
add
pop
add
pop
push
jmp
mov
mov
sub
pop
not
and
sub
shr
sub
add
jmp
add
add
jmp
mov
add
pop
xchg
pop
sub
pop
push
push
jmp
push
mov
add
mov
pop
mov
pop
push
jmp
add
sub
xchg
pop
jmp
add
sub
mov
jmp
mov
push
push
jmp
mov
push
jmp
mov
jmp
add
jmp
push
mov
mov
push
mov
xor
add
pop
shl
sub
jmp
btc
pushf
jmp
mov
mov
add
push
mov
mov
sub
push
push
mov
mov
pop
add
sub
not
push
mov
add
pop
or
sub
jmp
add
jmp
add
sub
mov
mov
jmp
shl
push
push
push
pop
push
mov
or
shl
or
shl
sub
sub
pop
xor
mov
pop
sub
add
add
pop
jmp
sub
mov
mov
push
push
mov
jmp
sub
sub
add
pop
sub
mov
push
mov
mov
add
jmp
push
mov
add
add
xchg
pop
add
pop
mov
pop
jmp
push
push
jmp
pop
push
mov
add
add
xchg
mov
mov
jmp
mov
and
pop
push
jmp
pop
jmp
push
mov
mov
pop
push
mov
xchg
not
jmp
mov
pushl
pop
popl
pop
or
je
push
mov
jmp
add
sub
jmp
sub
mov
mov
sub
pop
push
jmp
mov
shr
push
mov
push
subl
jmp
pop
jmp
push
mov
mov
pop
jmp
xchg
jmp
mov
push
pushl
pop
push
mov
jmp
push
push
mov
add
jmp
add
xchg
pop
popl
mov
bt
pushf
jmp
add
add
xchg
mov
add
pop
push
mov
sub
sub
push
mov
add
pop
mov
add
xor
xor
xor
mov
mov
jmp
pushl
pop
add
push
push
mov
inc
not
jmp
mov
shl
inc
shr
sub
add
mov
pop
add
pop
jmp
pop
sub
pushl
mov
add
sub
mov
push
jmp
or
or
push
mov
xchg
not
xchg
shr
sub
sub
jmp
mov
push
push
pop
sub
sub
mov
mov
jmp
sub
sub
sub
shr
sub
push
incl
pop
jmp
sub
sub
pop
sub
add
sub
push
mov
mov
dec
dec
push
mov
add
pop
push
notl
mov
add
neg
push
jmp
pop
push
mov
push
mov
mov
pop
pop
jmp
mov
add
jmp
pop
add
push
mov
push
push
mov
add
jmp
xor
xor
xor
pop
popl
mov
and
pushf
jmp
mov
jmp
mov
push
mov
jmp
not
push
mov
jmp
mov
add
sub
xchg
pop
mov
jmp
mov
push
pop
jmp
pushl
jmp
mov
shl
xor
jmp
push
mov
add
pop
push
subb
jmp
shr
and
shl
xchg
xchg
not
jmp
push
mov
jmp
xor
pop
add
add
sub
pop
push
mov
add
pop
jmp
pop
add
sub
jmp
xor
mov
pop
and
sub
push
mov
mov
jmp
add
sub
xchg
jmp
push
mov
add
mov
add
pushl
jmp
push
mov
mov
shr
and
push
mov
sub
jmp
pop
mov
jmp
pop
add
jmp
pop
add
push
mov
push
mov
jmp
push
mov
jmp
not
sub
jmp
mov
push
jmp
shr
not
dec
not
jmp
mov
dec
not
neg
jmp
pop
jmp
add
push
sub
mov
jmp
shr
neg
xor
sub
pop
push
push
mov
mov
pop
add
pop
add
add
add
sub
push
mov
and
or
add
jmp
sub
mov
mov
sub
pop
push
mov
add
pop
xor
push
pushl
pop
push
mov
add
add
xchg
pop
add
sub
jmp
mov
neg
add
xor
xor
add
pop
add
sub
sub
jmp
mov
xor
pop
sub
pop
push
pushl
mov
jmp
mov
push
jmp
mov
mov
mov
add
pop
push
push
mov
mov
add
pop
and
not
xor
sub
add
pop
add
sub
pop
xor
jmp
subl
pushl
mov
add
add
add
pop
add
add
sub
sub
sub
mov
add
push
mov
add
pop
add
sub
pushl
jmp
pushw
mov
sub
mov
mov
add
jmp
push
mov
add
jmp
add
pop
dec
neg
push
mov
xor
pop
add
add
push
mov
dec
dec
add
dec
shl
sub
sub
pop
pop
jmp
mov
xchg
push
notl
mov
add
push
sub
jmp
not
dec
add
sub
mov
add
push
subl
mov
add
push
mov
and
shl
neg
add
add
pop
pop
addl
add
jmp
mov
not
add
sub
add
pop
add
xchg
pop
and
jmp
push
mov
add
sub
jmp
push
notl
pop
and
sub
mov
jmp
xor
add
push
mov
neg
inc
neg
inc
sub
sub
xor
pop
xor
mov
add
and
pop
sub
neg
add
add
jmp
xor
pushl
pop
add
xor
pop
push
mov
pop
pushl
jmp
mov
pop
sub
jmp
mov
add
sub
mov
add
pop
shr
sub
sub
xor
pop
push
push
mov
mov
xor
pop
pop
xor
pushl
pop
jmp
pop
pop
push
jmp
xchg
jmp
pop
push
subl
pop
jmp
add
push
mov
jmp
push
mov
sub
push
xorl
pop
xor
pop
sub
pop
xor
xor
xor
mov
mov
mov
add
push
mov
add
pushl
jmp
add
sub
pop
push
mov
pushl
mov
add
popl
mov
jmp
add
push
mov
mov
push
sub
pop
inc
dec
push
notl
pop
sub
add
pop
pushl
pop
push
mov
add
add
jmp
mov
sub
pop
jmp
xchg
pop
add
push
pushl
mov
add
popl
mov
and
pushf
jmp
xor
add
pop
sub
mov
push
mov
xor
jmp
mov
push
mov
xor
add
add
pop
add
xchg
pop
jmp
or
or
add
add
pop
movzbl
cmp
je
pushl
pushl
jmp
mov
jmp
sub
and
jmp
pop
push
push
pop
jmp
pop
sub
xor
jmp
and
sub
not
sub
and
pushl
pop
add
shr
xor
and
push
mov
push
mov
mov
xor
push
mov
neg
add
jmp
sub
add
add
add
add
mov
push
mov
mov
add
push
mov
add
pop
push
pushl
mov
add
popl
mov
add
jmp
xor
mov
jmp
mov
add
pop
add
add
sub
push
mov
mov
add
jmp
sub
pop
sub
mov
mov
neg
jmp
mov
shr
neg
push
mov
sub
pop
or
jmp
push
mov
push
pop
jmp
negl
pop
xchg
neg
jmp
pop
shl
push
mov
mov
add
mov
push
jmp
sub
add
pop
dec
neg
add
add
mov
push
mov
jmp
and
push
push
jmp
xchg
jmp
pop
push
mov
push
mov
or
push
sub
mov
mov
push
mov
mov
pop
mov
add
neg
xor
or
pop
sub
jmp
push
push
mov
jmp
mov
mov
push
jmp
push
mov
mov
jmp
push
mov
add
add
sub
pop
not
add
jmp
mov
sub
jmp
push
mov
jmp
mov
mov
push
push
mov
xor
jmp
sub
pop
sub
jmp
mov
add
push
mov
mov
xor
add
pop
push
mov
mov
mov
add
pushl
pop
add
mov
add
pop
xor
mov
jmp
add
push
mov
add
pop
xchg
pop
not
dec
xor
mov
pop
push
mov
push
notl
pop
shr
xor
sub
pop
jmp
pop
mov
push
mov
jmp
push
pop
push
push
pop
add
push
addl
jmp
push
mov
mov
sub
add
add
sub
add
jmp
mov
add
popl
mov
mov
jmp
and
and
inc
xor
add
pop
push
push
jmp
mov
add
sub
push
mov
and
inc
neg
or
sub
sub
pop
pop
xor
add
pop
sub
sub
add
sub
mov
jmp
push
mov
push
mov
sub
mov
add
add
sub
sub
add
pop
add
add
pop
push
mov
add
add
push
mov
jmp
add
pop
pop
jmp
pop
mov
push
jmp
add
push
sub
jmp
mov
mov
xor
pop
sub
mov
jmp
mov
pop
mov
sub
pop
sub
sub
mov
jmp
add
add
xchg
pop
xor
movzbl
push
mov
jmp
pushl
pop
add
jmp
popl
addl
pop
push
mov
shl
sub
mov
mov
neg
push
mov
sub
pop
xor
add
pop
dec
add
add
pop
jmp
push
push
popl
addl
pop
sub
mov
push
jmp
pop
sub
jmp
sub
xchg
pop
mov
jmp
add
sub
pop
sub
jmp
mov
pop
push
mov
neg
push
mov
shl
or
dec
sub
add
pop
sub
xor
pop
or
shr
add
add
pop
jmp
pop
pushl
pop
push
mov
push
pop
add
jmp
mov
push
mov
jmp
mov
push
jmp
sub
sub
pop
push
mov
xor
dec
shr
xor
sub
jmp
sub
mov
pop
jmp
mov
push
push
pop
add
add
xchg
mov
jmp
mov
mov
sub
jmp
add
add
sub
mov
add
push
mov
add
pop
push
jmp
push
mov
dec
shl
shr
add
push
push
mov
mov
pop
and
inc
inc
sub
not
xor
and
pop
push
mov
jmp
pushl
pushl
jmp
sub
subl
pop
mov
jmp
movzbw
push
mov
jmp
popl
mov
jmp
dec
sub
add
pop
jmp
add
pop
pop
popl
jmp
not
inc
or
xor
jmp
sub
mov
mov
shl
push
mov
add
pop
shr
pushw
mov
mov
sub
sub
add
pop
and
mov
add
push
push
jmp
xor
xor
xor
mov
bswap
push
push
jmp
pop
mov
push
push
mov
add
push
push
jmp
xor
xor
sub
mov
jmp
add
xchg
pop
pop
xor
mov
add
push
mov
jmp
mov
push
mov
add
add
push
jmp
sub
pop
sub
jmp
mov
push
jmp
pushl
pop
sub
mov
mov
push
mov
push
jmp
pushl
pop
add
add
jmp
mov
dec
inc
xor
sub
mov
pop
push
jmp
mov
push
mov
add
add
xor
xor
xor
jmp
add
pop
add
push
mov
add
mov
add
mov
push
mov
push
mov
add
add
sub
pop
add
xchg
pop
sub
jmp
sub
mov
add
xor
add
sub
add
add
sub
pushl
jmp
shr
jmp
addb
pop
mov
add
push
mov
not
not
xor
xor
add
add
pop
sub
pop
add
sub
mov
mov
shr
shr
jmp
pop
push
mov
add
add
xchg
jmp
pushl
pop
add
pushl
jmp
push
mov
push
mov
push
pop
add
push
mov
add
pop
xchg
pop
mov
add
xor
xor
xor
xchg
xor
xor
jmp
mov
push
push
jmp
mov
add
popl
pop
pushl
pushl
jmp
push
pushf
jmp
pop
mov
push
push
jmp
mov
mov
push
mov
sub
or
xor
add
mov
push
mov
add
add
xchg
pop
add
push
pushl
mov
push
mov
jmp
and
add
not
jmp
pop
add
push
pushl
pop
popl
pop
push
push
mov
shl
shl
sub
mov
pop
add
sub
push
mov
sub
sub
jmp
push
pushl
pop
popl
mov
movzwl
push
mov
jmp
push
mov
add
add
xchg
pop
or
je
sub
mov
jmp
mov
add
sub
not
jmp
add
pop
push
mov
sub
pop
xchg
pop
jmp
mov
push
mov
add
add
xchg
pop
add
jmp
add
pushl
pop
pop
push
mov
jmp
mov
push
mov
addl
mov
add
jmp
mov
add
jmp
mov
sub
pop
jmp
mov
push
mov
jmp
push
mov
add
and
pushl
pushl
jmp
mov
push
mov
mov
or
sub
jmp
push
pushl
pop
add
jmp
shl
sub
xor
pop
jmp
mov
mov
jmp
mov
push
mov
jmp
xchg
pop
pop
xchg
mov
movzbw
pushw
mov
jmp
push
pop
or
pushl
pop
push
jmp
pop
add
jmp
add
add
jmp
mov
push
mov
push
push
pop
jmp
pushl
pop
popl
mov
mov
push
jmp
lods
add
add
jmp
sub
pop
xor
mov
add
shr
push
mov
jmp
sub
jmp
neg
add
jmp
sub
pop
pop
add
pop
xchg
mov
push
mov
push
mov
shr
not
add
add
add
sub
pop
push
mov
mov
jmp
add
sub
mov
push
mov
and
xor
mov
jmp
push
mov
jmp
sub
pop
sub
jmp
mov
add
mov
push
mov
push
mov
mov
jmp
push
push
pop
not
jmp
popl
pop
push
mov
jmp
add
sub
mov
mov
shr
xor
add
add
pop
mov
jmp
push
push
pop
push
mov
add
jmp
xchg
pop
push
jmp
mov
pop
and
pushl
jmp
pop
add
push
push
jmp
mov
mov
add
pushl
pop
add
xchg
pop
jmp
pop
push
mov
jmp
pop
or
push
jmp
push
mov
sub
sub
add
pop
jmp
mov
notl
pushl
mov
add
push
push
pushl
pop
add
push
mov
mov
shl
or
shl
add
and
sub
add
add
jmp
push
mov
push
jmp
add
and
jmp
not
sub
jmp
subb
sub
addb
jmp
popl
jmp
mov
push
mov
add
sub
mov
push
mov
jmp
xor
mov
or
shl
sub
mov
jmp
neg
shr
sub
xor
jmp
mov
mov
add
add
pop
sub
pop
push
push
jmp
mov
push
mov
inc
and
xor
add
pop
jmp
xor
pop
pushl
pop
sub
mov
mov
add
add
push
jmp
push
mov
jmp
mov
mov
push
jmp
shl
not
xor
xor
pop
sub
pop
push
mov
jmp
push
mov
neg
jmp
mov
mov
sub
pop
dec
push
jmp
mov
mov
push
mov
add
mov
push
mov
add
add
xchg
pop
add
xchg
pop
push
pushl
mov
add
popl
mov
jmp
mov
inc
push
push
mov
sub
sub
or
dec
shl
xor
mov
pop
xor
pop
add
inc
neg
sub
mov
pop
jmp
push
mov
mov
sub
mov
push
pop
push
jmp
mov
shr
shr
add
shr
push
mov
not
shr
add
inc
shl
sub
add
pop
and
mov
add
xor
sub
add
jmp
shl
or
dec
not
jmp
mov
sub
pop
neg
add
add
pushl
pop
jmp
mov
push
mov
add
sub
add
mov
pop
push
mov
add
pop
add
push
mov
inc
shr
not
xor
sub
pop
jmp
and
add
add
mov
pop
sub
pop
add
add
mov
jmp
push
mov
mov
mov
add
push
jmp
sub
add
jmp
add
add
xor
pop
jmp
add
sub
xchg
jmp
push
push
pop
jmp
sub
push
mov
add
pop
pop
push
mov
jmp
push
mov
push
mov
shr
dec
jmp
mov
mov
push
jmp
sub
push
mov
jmp
add
sub
sub
mov
add
push
mov
jmp
sub
pop
xor
pop
add
mov
add
sub
sub
push
mov
sub
pop
add
push
mov
mov
inc
push
mov
sub
jmp
sub
mov
mov
jmp
mov
shr
shr
push
mov
mov
jmp
or
add
push
mov
and
pop
jmp
mov
mov
add
jmp
push
mov
push
mov
push
addl
mov
push
mov
add
add
xchg
pop
sub
pop
pop
add
sub
sub
push
mov
jmp
add
sub
sub
mov
jmp
push
mov
or
jmp
add
pop
pushw
mov
jmp
push
mov
xor
sub
not
add
add
pop
jmp
xchg
pop
jmp
mov
add
sub
pop
sub
push
mov
xor
jmp
pop
add
add
sub
pushl
mov
add
add
xor
xor
jmp
mov
inc
sub
add
jmp
push
mov
add
shr
add
add
pop
push
mov
jmp
pushl
popf
pop
rclb
pushf
jmp
pop
popl
mov
mov
jmp
pop
popl
pop
xchg
pushl
pop
add
push
mov
jmp
mov
addl
jmp
add
add
pushl
jmp
sub
sub
pop
xchg
pop
mov
mov
add
shr
push
mov
xor
mov
add
add
pop
push
mov
mov
add
pop
jmp
pop
jmp
add
xchg
mov
push
mov
jmp
popa
popf
ret
jmp
shr
sub
xor
push
pop
pop
and
pushl
pop
add
jmp
pushw
mov
jmp
add
sub
jmp
or
and
push
push
push
mov
add
neg
jmp
add
pop
sub
jmp
sub
mov
mov
add
mov
add
sub
sub
mov
add
jmp
add
push
mov
dec
inc
push
mov
sub
jmp
pop
jmp
mov
mov
add
push
mov
push
jmp
and
add
mov
sub
pop
add
or
add
push
push
subl
pop
add
push
mov
pop
mov
add
pop
add
mov
jmp
mov
add
sub
xchg
pop
mov
jmp
mov
add
pop
add
pop
xchg
mov
incw
pushf
jmp
push
pushl
mov
add
push
mov
mov
push
jmp
pop
add
push
mov
push
mov
jmp
pop
mov
addl
pushl
mov
add
push
mov
jmp
add
mov
add
sub
sub
pushw
jmp
push
mov
add
jmp
shr
and
push
mov
xor
pop
push
mov
jmp
xor
jmp
add
add
sub
pop
add
mov
add
push
jmp
pop
add
xor
jmp
push
mov
mov
shr
push
mov
and
xor
jmp
shr
and
sub
sub
add
pop
push
mov
sub
add
jmp
lods
push
mov
jmp
mov
add
sub
add
push
mov
sub
and
shr
not
xor
add
pop
mov
add
add
xor
xor
xor
mov
push
jmp
push
mov
sub
add
jmp
mov
jmp
mov
sub
jmp
push
push
jmp
mov
inc
pushl
sub
jmp
pop
sub
sub
add
add
pop
add
add
add
pop
push
pushl
mov
push
mov
mov
add
add
xchg
mov
popl
jmp
add
jmp
mov
mov
push
mov
or
and
sub
sub
mov
add
push
mov
and
pop
xchg
inc
xchg
xor
and
mov
push
jmp
sub
pushl
pop
add
jmp
add
shr
add
add
add
pop
add
push
mov
xor
or
sub
sub
pop
add
mov
push
mov
push
mov
add
jmp
push
mov
sub
pop
add
add
mov
add
add
sub
jmp
add
sub
pop
jmp
push
mov
jmp
movzbw
push
pushf
jmp
shl
not
shl
jmp
pop
add
pop
xor
xor
xor
pop
push
push
jmp
mov
mov
add
sub
pop
add
pushl
pop
add
mov
jmp
add
mov
pop
jmp
push
pop
mov
xor
pop
push
jmp
mov
add
pop
pushl
pop
push
push
pop
jmp
sub
add
pushl
pop
jmp
push
pushl
mov
add
jmp
mov
mov
jmp
mov
push
pop
add
push
sub
jmp
push
push
mov
shl
dec
shl
push
push
jmp
push
mov
add
jmp
xor
add
pop
pop
xchg
pop
mov
push
pushf
jmp
push
mov
mov
jmp
mov
or
sub
sub
jmp
mov
add
jmp
and
pushl
pushl
pushl
pop
add
jmp
push
push
jmp
push
mov
xor
add
add
pop
push
pop
pop
sub
add
add
pop
push
mov
add
mov
add
push
mov
push
jmp
push
mov
add
pop
push
mov
sub
sub
add
pop
add
add
pop
sub
mov
pushl
pushl
pushl
pop
push
mov
jmp
pushl
jmp
push
mov
and
inc
not
add
xor
pop
not
not
or
add
add
pop
push
mov
push
mov
neg
xor
shl
jmp
add
xor
jmp
xor
mov
pop
add
shl
add
shr
push
push
mov
xor
add
dec
xor
sub
sub
mov
pop
add
add
sub
jmp
add
popl
pop
sub
sub
push
push
jmp
push
mov
add
push
mov
or
dec
push
mov
add
jmp
xchg
mov
shr
push
mov
jmp
mov
mov
push
mov
jmp
pop
pop
xor
xor
xor
mov
pushl
pushl
jmp
pop
xchg
pop
push
jmp
add
sub
pop
add
add
pop
add
xor
xor
xor
jmp
add
jmp
mov
neg
shr
jmp
push
mov
add
add
xchg
pop
pushl
pop
push
mov
add
sub
mov
mov
add
pop
push
pushl
pop
popl
pop
jmp
mov
add
add
sub
pop
push
jmp
and
xor
add
pop
jmp
mov
sub
sub
add
pop
or
not
shl
jmp
add
xchg
xchg
not
jmp
mov
pushw
mov
jmp
pop
jmp
xor
add
add
add
pop
sub
mov
push
jmp
sub
sub
jmp
mov
mov
jmp
sub
pop
sub
push
mov
add
pop
pop
mov
pushl
pop
add
sub
add
add
push
mov
push
push
mov
mov
jmp
add
add
mov
push
jmp
push
push
mov
mov
sub
pop
push
mov
mov
pop
pop
add
pushl
mov
add
add
push
mov
pushl
pop
popl
jmp
push
pushl
pushl
pop
add
add
jmp
mov
xor
pop
jmp
popl
not
xchg
pop
or
push
mov
shl
jmp
push
mov
sub
sub
jmp
add
add
jmp
push
notl
pop
sub
shl
xor
push
mov
jmp
mov
sub
jmp
mov
add
jmp
dec
xor
sub
jmp
addw
pop
jmp
pop
push
mov
jmp
push
mov
shr
shr
add
inc
add
add
mov
pop
mov
pop
mov
add
mov
add
xor
add
mov
push
mov
jmp
shr
xor
push
mov
jmp
pushl
pop
add
pop
jmp
pop
sub
add
add
jmp
pop
add
xchg
pop
push
push
pushl
pop
add
push
push
pop
sub
add
or
shl
inc
sub
add
pop
push
jmp
xor
neg
and
shl
jmp
add
add
xchg
mov
jmp
pop
sub
jmp
pop
add
add
jmp
push
pop
push
jmp
xor
pop
add
sub
sub
add
pop
movzbw
push
mov
jmp
mov
jmp
xor
mov
pop
sub
jmp
pop
xor
pop
jmp
mov
pop
add
pop
add
pop
xor
push
mov
mov
mov
pop
mov
sub
mov
push
mov
addl
pop
push
mov
jmp
pop
push
mov
push
mov
push
mov
mov
jmp
add
pop
xor
xor
pop
xor
pop
xor
movzbl
mov
sub
jmp
add
add
sub
pop
xchg
pop
jmp
sub
jmp
mov
mov
xor
mov
jmp
mov
add
push
mov
push
mov
jmp
mov
add
jmp
pop
dec
push
mov
jmp
add
jmp
pop
add
sub
mov
pushl
pop
popl
pop
push
mov
jmp
pop
jmp
mov
push
push
pop
jmp
add
add
jmp
push
mov
mov
not
add
add
pop
add
mov
push
jmp
mov
push
mov
addl
popl
push
mov
add
jmp
push
push
push
mov
add
and
jmp
pushl
mov
jmp
push
mov
sub
not
xor
add
pop
push
jmp
push
mov
mov
mov
add
push
jmp
sub
pop
sub
jmp
mov
not
add
jmp
pushl
pop
push
mov
add
add
xchg
pop
jmp
mov
pop
mov
jmp
inc
add
jmp
pop
add
jmp
mov
add
add
jmp
sub
sub
push
jmp
push
mov
push
mov
addl
add
jmp
add
push
mov
push
mov
add
dec
neg
jmp
popl
pop
shr
xor
xor
xor
jmp
xor
add
pop
push
jmp
add
push
mov
xchg
not
push
push
pop
pop
not
jmp
mov
add
pop
push
mov
mov
add
pop
xchg
pop
jmp
mov
push
pop
push
push
mov
jmp
pop
add
add
sub
mov
add
sub
add
add
sub
jmp
sub
mov
mov
push
jmp
xor
jmp
add
xchg
pop
subl
push
jmp
neg
add
add
push
mov
xor
pop
sub
pop
add
sub
sub
mov
add
push
sub
mov
push
pop
and
or
jmp
sub
pop
mov
add
xchg
mov
xor
pushf
jmp
mov
add
sub
jmp
mov
push
jmp
push
push
mov
push
mov
mov
pop
mov
jmp
mov
jmp
shr
sub
sub
add
pop
xor
xor
xor
mov
jmp
mov
add
pop
pop
xchg
mov
sub
mov
pushl
mov
push
mov
push
pop
add
sub
mov
mov
add
pop
xchg
jmp
push
mov
sub
pop
xchg
mov
mov
jmp
xchg
pop
jmp
add
shr
shr
shr
push
mov
sub
xor
shr
xor
jmp
mov
add
jmp
pushl
pop
popl
jmp
inc
sub
push
jmp
sub
add
mov
add
xor
xor
xor
mov
mov
jmp
mov
push
mov
sub
mov
mov
mov
add
jmp
mov
add
sub
xchg
pop
mov
jmp
mov
mov
pop
jmp
mov
btc
pushf
jmp
pop
subl
subl
addl
add
push
mov
sub
jmp
mov
pop
or
not
add
or
not
sub
jmp
xchg
pop
push
mov
sub
pop
xor
xor
xor
mov
jmp
add
add
sub
sub
pop
add
sub
push
push
mov
mov
push
mov
mov
sub
sub
add
mov
add
xor
mov
jmp
add
mov
add
push
mov
not
inc
shr
add
push
jmp
xor
mov
mov
jmp
push
mov
jmp
push
mov
xor
xor
xor
xchg
jmp
push
mov
mov
add
mov
add
add
push
pushl
mov
add
popl
mov
and
mov
add
shr
or
je
push
mov
jmp
or
dec
shr
xor
jmp
xchg
pop
dec
push
jmp
mov
jmp
jmp
add
mov
add
pop
push
sub
mov
push
jmp
xor
xor
xor
jmp
push
pushl
jmp
add
pop
mov
xor
pop
xor
and
xor
sub
pop
jmp
pop
add
pop
push
mov
add
pop
sub
mov
pushl
mov
add
popl
pop
popw
pushw
mov
notw
pop
xor
xor
jmp
pop
add
push
mov
jmp
sub
pop
add
add
sub
mov
pop
push
mov
jmp
push
mov
jmp
or
shl
or
push
mov
or
sub
or
add
sub
jmp
push
mov
add
add
xchg
pop
add
push
jmp
mov
jmp
xchg
pop
add
add
add
push
mov
jmp
sub
pop
xchg
pop
jmp
mov
push
mov
add
add
xchg
pop
push
jmp
lods
push
push
jmp
add
pop
add
add
add
push
push
mov
mov
mov
jmp
pop
add
push
mov
push
mov
xor
pop
jmp
subl
pop
sub
mov
push
mov
dec
shl
dec
push
mov
add
sub
xchg
pop
mov
mov
dec
sub
neg
neg
jmp
pop
xor
jmp
mov
mov
xor
pop
sub
pop
add
sub
add
add
jmp
mov
push
jmp
mov
addl
pop
push
mov
shr
jmp
add
popl
jmp
push
mov
mov
add
add
sub
pop
push
mov
jmp
sub
add
mov
add
or
pop
dec
add
sub
mov
jmp
mov
add
pushl
mov
jmp
sub
xchg
pop
jmp
inc
push
mov
sub
jmp
mov
add
pop
push
mov
add
pop
push
jmp
push
mov
addl
jmp
shl
xor
xor
xor
jmp
sub
mov
push
jmp
mov
sub
jmp
pop
push
push
jmp
mov
mov
sub
jmp
push
mov
add
add
xchg
pop
popw
jmp
pop
sub
add
add
pop
push
push
mov
mov
sub
pop
sub
push
mov
push
mov
and
pop
dec
add
add
jmp
sub
pop
xor
xor
jmp
shr
sub
sub
pop
pushl
pushl
pop
add
push
push
jmp
mov
push
mov
add
pop
add
xchg
pop
jmp
pop
sub
add
push
mov
add
add
add
sub
pop
sub
mov
mov
sub
add
add
add
pushl
pushl
pop
add
jmp
add
xor
add
mov
pop
push
mov
mov
sub
sub
add
mov
add
xor
sub
add
pop
sub
pop
push
mov
jmp
add
pop
push
mov
mov
add
pushl
pop
push
mov
add
add
xchg
pop
sub
mov
mov
add
add
sub
mov
jmp
mov
add
jmp
add
add
xchg
pop
jmp
push
push
mov
mov
sub
pop
push
mov
sub
shr
not
xor
xor
pop
add
pop
sub
add
add
sub
pop
jmp
sub
or
sub
jmp
add
inc
sub
add
mov
add
push
mov
add
sub
sub
pop
xchg
mov
mov
push
mov
push
subl
pop
add
jmp
mov
mov
pop
push
mov
mov
mov
push
mov
add
add
xchg
pop
sub
pop
xor
pop
push
push
mov
mov
jmp
xor
sub
pop
pop
sub
mov
add
push
mov
jmp
push
mov
sub
pop
add
mov
add
push
push
push
push
pop
and
shl
sub
mov
mov
add
add
add
push
jmp
xor
sub
jmp
mov
pushl
jmp
mov
sub
jmp
mov
movzbw
push
push
jmp
pop
mov
pop
add
mov
add
or
pop
and
xor
add
add
add
sub
pop
push
mov
sub
pop
push
mov
jmp
add
pop
jmp
mov
push
jmp
shlw
pushf
jmp
inc
push
mov
add
pop
xor
add
add
mov
add
jmp
inc
add
mov
pop
jmp
sub
or
pop
xor
jmp
sub
pop
push
jmp
pushl
pop
push
mov
add
add
xchg
pop
sub
mov
mov
shl
and
xor
push
mov
add
add
sub
pop
or
jmp
push
mov
xor
shr
jmp
sub
jmp
mov
mov
push
push
mov
not
jmp
movsbl
sub
mov
jmp
add
add
jmp
mov
mov
xor
pop
jmp
and
pop
push
mov
jmp
sub
mov
add
jmp
sub
add
pushl
pop
push
mov
push
mov
jmp
add
push
push
jmp
mov
sub
pop
add
pop
push
push
mov
mov
pop
sub
add
push
mov
sub
add
pop
pushl
mov
add
add
jmp
xor
mov
mov
jmp
push
pop
push
push
mov
add
jmp
sub
mov
mov
add
add
pop
mov
add
pushl
mov
jmp
mov
add
add
xchg
pop
movzbl
mov
push
jmp
add
sub
jmp
pop
push
jmp
mov
add
jmp
neg
sub
add
mov
add
mov
mov
add
inc
inc
and
add
sub
add
pushl
pop
add
push
push
mov
mov
jmp
mov
push
jmp
mov
push
jmp
push
pushl
pop
popl
pop
xor
push
mov
push
mov
xor
pushl
mov
add
add
dec
push
mov
dec
shr
not
jmp
pushl
pop
jmp
xchg
pop
sub
add
add
sub
push
mov
add
add
jmp
add
add
pop
jmp
mov
mov
pop
mov
push
mov
add
add
xchg
pop
pushl
mov
add
add
xchg
pop
push
push
mov
push
mov
jmp
xor
xor
xor
mov
jmp
xor
xchg
sub
mov
xchg
xor
jmp
push
mov
addl
mov
push
mov
jmp
sub
mov
push
pop
sub
mov
jmp
xor
xor
jmp
sub
sub
push
mov
add
pop
pop
sub
mov
jmp
sub
add
jmp
add
jmp
add
and
mov
add
sub
sub
pop
sub
sub
mov
mov
push
mov
mov
xor
pop
neg
and
not
push
mov
jmp
xor
not
push
mov
push
mov
jmp
add
mov
push
mov
jmp
mov
push
mov
mov
mov
sub
jmp
xor
jmp
shr
xor
jmp
mov
push
push
pop
push
push
pop
shr
jmp
pop
mov
mov
push
mov
add
add
xchg
pop
mov
push
mov
mov
push
push
push
pop
inc
neg
add
mov
jmp
push
mov
mov
xor
jmp
add
jmp
add
subl
pop
jmp
push
push
mov
add
sub
xchg
jmp
push
mov
sub
jmp
mov
xor
pop
sub
pop
xchg
pop
mov
jmp
mov
add
sub
pop
xor
xor
xor
pop
jmp
mov
push
push
mov
add
xchg
jmp
sub
pushl
pop
push
jmp
sub
neg
push
mov
sub
mov
add
sub
mov
mov
jmp
xchg
mov
push
pushl
pop
popl
mov
mov
push
jmp
pop
add
sub
sub
jmp
add
push
mov
add
pop
xchg
pop
push
push
jmp
push
mov
add
add
xchg
pop
jmp
push
push
pop
sub
sub
shl
xor
sub
shr
shr
xor
add
pop
push
mov
push
pop
push
mov
mov
add
jmp
sub
mov
pop
xor
jmp
add
push
push
mov
push
mov
jmp
sub
pop
jmp
push
subb
mov
add
push
mov
jmp
push
mov
push
mov
mov
sub
jmp
mov
neg
shl
jmp
pop
push
mov
mov
jmp
push
mov
neg
shr
push
mov
xor
mov
jmp
lods
push
mov
jmp
pushl
mov
jmp
addl
add
subl
push
jmp
and
mov
jmp
push
mov
add
add
xchg
pop
jmp
push
pop
sub
sub
add
pop
jmp
mov
mov
add
add
xchg
pop
pushl
pop
push
mov
push
mov
add
add
push
mov
sub
pop
pop
push
mov
jmp
mov
push
mov
add
push
mov
jmp
mov
not
jmp
neg
not
sub
jmp
lods
sub
pushw
jmp
add
add
pop
sub
jmp
sub
add
add
jmp
mov
mov
push
mov
jmp
push
mov
add
push
mov
mov
jmp
pushl
pop
jmp
add
push
push
jmp
xor
add
pop
add
jmp
sub
push
popl
push
mov
sub
jmp
add
and
pushl
pop
add
push
mov
jmp
pop
jmp
mov
push
jmp
pop
shl
xor
add
sub
add
push
mov
add
pop
jmp
add
or
add
sub
jmp
add
push
mov
add
add
sub
mov
add
add
pop
push
mov
push
mov
sub
sub
add
add
add
pop
add
jmp
sub
mov
mov
addl
add
subl
mov
add
jmp
mov
pushl
pop
popl
pop
push
mov
mov
xor
mov
add
mov
pop
add
push
mov
dec
xor
shr
sub
sub
jmp
mov
mov
mov
jmp
add
push
mov
add
add
sub
mov
add
xor
xor
xor
mov
add
pushf
jmp
mov
mov
sub
add
pop
shl
and
add
mov
pop
neg
shl
xor
add
push
mov
add
sub
xchg
pop
mov
jmp
add
sub
add
mov
add
push
mov
add
pop
xchg
jmp
shr
push
mov
jmp
mov
push
popw
pushw
mov
mov
push
mov
sub
mov
add
addw
push
mov
sub
pop
add
pushw
mov
mov
add
jmp
dec
or
xor
sub
jmp
add
add
jmp
not
xchg
push
push
pop
pop
inc
sub
jmp
push
mov
mov
pop
jmp
pushl
pushl
jmp
push
mov
add
mov
jmp
mov
sub
pop
sub
add
pop
sub
mov
jmp
lods
add
push
jmp
sub
mov
mov
and
inc
shr
add
push
jmp
add
add
mov
jmp
dec
xor
add
pop
jmp
mov
push
pop
push
push
mov
jmp
xchg
pop
xor
mov
push
mov
add
sub
xchg
pop
mov
mov
add
add
xor
xor
xor
pop
pushl
pushl
pop
jmp
push
pop
shl
sub
push
push
jmp
sub
push
mov
add
xor
add
pop
pop
push
push
mov
mov
sub
pop
add
pushl
pop
push
mov
add
add
jmp
and
push
mov
jmp
and
shr
add
and
jmp
mov
sub
jmp
pushl
jmp
add
pop
xor
xor
sub
pop
add
add
add
pop
jmp
add
jmp
pop
pop
jmp
pop
push
mov
jmp
pop
add
jmp
add
mov
add
push
jmp
add
jmp
mov
push
jmp
push
mov
subl
sub
addl
pop
jmp
sub
shl
add
jmp
pushl
mov
add
push
mov
add
jmp
mov
sub
neg
not
add
sub
mov
add
jmp
sub
push
popl
push
mov
push
jmp
mov
sub
jmp
pop
jmp
push
jmp
sub
mov
push
mov
addl
pop
jmp
mov
push
mov
jmp
inc
shr
push
sub
mov
mov
shr
shr
jmp
pop
jmp
mov
add
pop
jmp
mov
mov
sub
and
sub
add
add
pop
push
mov
xor
pop
add
pushl
pop
add
add
xor
xor
xor
mov
jmp
add
pop
push
push
mov
mov
jmp
pushl
jmp
xor
xor
xor
mov
push
mov
dec
dec
add
shr
not
sub
sub
mov
add
sub
add
pushl
pop
add
jmp
add
pushl
jmp
xor
xor
jmp
pushl
pop
push
mov
jmp
add
push
jmp
mov
and
pop
sub
add
pop
sub
xchg
pop
mov
push
mov
push
mov
mov
pop
sub
mov
add
sub
mov
jmp
pushl
pushl
jmp
mov
add
jmp
pushl
mov
push
push
pop
add
jmp
add
push
pushl
pushl
pushl
pop
add
add
jmp
sub
add
xor
sub
jmp
push
push
mov
mov
pop
mov
pop
mov
jmp
add
push
push
jmp
not
push
sub
pop
push
push
mov
or
push
sub
pop
push
mov
mov
add
pop
mov
mov
add
xor
add
jmp
and
and
jmp
pop
xor
xor
xor
mov
cmp
pushf
jmp
pop
mov
push
pop
push
push
push
mov
jmp
shr
sub
add
sub
add
add
sub
pop
push
pushl
jmp
mov
sub
xor
sub
xor
xor
add
pop
push
mov
jmp
add
jmp
neg
not
dec
sub
mov
pop
push
notb
jmp
push
mov
push
push
mov
mov
jmp
add
addl
addl
pushl
jmp
add
pop
add
sub
pushl
pop
add
add
xor
xor
jmp
push
mov
jmp
mov
add
push
jmp
xor
xor
xor
jmp
mov
add
pop
jmp
sub
add
pop
sub
mov
mov
add
pop
xor
xor
jmp
mov
push
mov
push
jmp
push
mov
add
jmp
mov
sub
xor
mov
push
mov
add
add
xchg
pop
jmp
push
mov
add
push
mov
shl
jmp
add
pop
jmp
add
pushl
pop
add
push
mov
push
pop
push
mov
sub
pop
add
add
mov
push
mov
add
add
xchg
pop
jmp
push
mov
mov
add
mov
push
jmp
pop
mov
push
mov
mov
add
add
xchg
pop
sub
mov
push
mov
mov
pop
xor
add
sub
add
add
push
jmp
pop
pop
jmp
add
sub
sub
mov
add
push
mov
jmp
pop
pushl
pop
add
add
xchg
mov
or
je
pushl
pushl
jmp
push
push
jmp
push
pop
push
push
pop
push
jmp
sub
mov
mov
push
pop
mov
jmp
push
mov
jmp
push
pop
push
mov
push
mov
jmp
push
mov
sub
pop
add
pop
push
mov
jmp
sub
sub
pop
pop
sub
add
add
sub
sub
sub
jmp
mov
add
mov
add
mov
push
mov
add
push
mov
push
mov
shl
shr
and
add
sub
add
sub
pop
sub
jmp
xchg
not
xchg
jmp
pop
push
mov
mov
mov
pop
pop
mov
pop
pop
push
push
mov
mov
mov
add
mov
pop
pushl
pop
sub
jmp
push
mov
jmp
not
xor
sub
push
mov
or
dec
not
add
neg
push
mov
sub
pop
xor
pop
mov
pop
sub
pop
sub
jmp
mov
pop
pop
jmp
pop
and
push
mov
jmp
xchg
mov
shr
push
push
jmp
sub
or
pop
push
mov
neg
xor
xor
jmp
push
mov
and
sub
add
or
sub
add
pop
xchg
jmp
pop
add
add
push
mov
add
pop
mov
add
xchg
jmp
mov
push
jmp
add
mov
pop
jmp
mov
mov
pop
dec
push
mov
sub
pop
jmp
mov
mov
pop
shr
sub
xor
jmp
mov
add
popl
pop
sub
mov
jmp
mov
push
mov
addl
add
subl
mov
add
jmp
dec
and
or
push
mov
add
pop
sub
jmp
push
mov
or
shl
sub
add
mov
add
add
xor
xor
xor
pop
pushw
mov
mov
add
pop
sub
add
add
jmp
adc
mov
push
push
mov
sub
pop
add
mov
push
stos
mov
mov
sbb
mov
scas
or
mov
sub
mov
dec
sub
pop
mov
mov
inc
or
pop
mov
jnp
pop
or
pop
jbe
mov
andb
pop
mov
lcall
mov
push
mov
cwtl
and
pop
inc
pushf
mov
xchg
or
mov
xchg
stc
mov
xor
pop
ljmp
pop
in
add
mov
add
pop
scas
push
mov
add
mov
pop
xchg
mov
stos
xchg
mov
js
mov
xchg
pop
repz
mov
scas
pop
mov
sbb
mov
shll
mov
sub
pop
pushf
xor
pop
test
mov
mov
mov
mov
mov
add
pop
mov
mov
pop
faddl
mov
mov
xor
pop
in
xchg
mov
mov
pop
and
pop
roll
mov
xchg
cmpsl
mov
es
mov
adc
mov
or
mov
loope
mov
cli
inc
mov
mov
mov
mov
mov
pop
xor
pop
mov
mov
lret
add
pop
arpl
pop
or
pop
std
arpl
pop
out
popa
mov
shlb
push
popa
mov
pop
mov
mov
clc
mov
cmpsb
aas
mov
push
mov
jl
mov
loope
mov
adc
pop
xchg
mov
mov
xor
pop
cmp
mov
pusha
mov
mov
mov
sub
mov
inc
decb
pop
xor
pop
sbb
mov
sub
pop
cwtl
and
pop
imul
pop
pop
inc
mov
out
or
pop
mov
adc
pop
loope
mov
xchg
push
mov
jge
mov
mov
xor
pop
and
mov
xor
mov
dec
sub
pop
cmc
stos
mov
inc
bound
pop
rcrb
pop
sbb
mov
pop
inc
mov
inc
pusha
mov
int3
jge
pop
int
mov
push
inc
mov
cmp
pop
push
inc
mov
push
mov
pop
pop
mov
loopne
mov
push
jae
pop
inc
lcall
clc
mov
pop
lcall
cltd
ja
pop
ret
fwait
mov
ret
std
mov
jb
mov
xchg
mov
fwait
test
pop
pusha
pushf
cld
call
pop
sub
mov
add
cmp
jne
jmp
mov
mov
jmp
add
dec
or
jne
mov
mov
add
mov
xor
lock
jne
lods
xor
push
mov
jmp
shr
or
sub
add
mov
add
add
xchg
mov
xchg
pop
sarb
pushf
jmp
mov
add
sub
xchg
pop
mov
jmp
push
mov
or
not
jmp
mov
add
sub
xchg
pop
mov
jmp
add
pop
sub
push
jmp
mov
pushl
pop
popl
jmp
push
mov
add
add
push
mov
push
mov
jmp
add
popl
pop
popl
jmp
and
sub
or
jmp
mov
mov
sub
pop
push
mov
jmp
add
sub
xchg
pop
mov
mov
or
shr
jmp
sub
push
mov
mov
add
mov
mov
add
mov
add
sub
mov
jmp
push
pop
push
mov
add
sub
jmp
push
mov
mov
pop
mov
pop
pop
and
pushl
pop
add
jmp
lods
xor
push
mov
jmp
add
and
xor
sub
pop
dec
add
sub
add
add
pop
add
xchg
mov
push
mov
jmp
shr
cmp
je
movl
shll
jmp
mov
sub
pop
jmp
add
add
and
pushl
jmp
mov
dec
inc
add
sub
pop
sub
add
add
mov
add
movzbl
jmp
popa
ret
lods
push
mov
jmp
popl
jmp
mov
pushl
pop
jmp
push
mov
mov
pop
mov
pop
xor
pop
jmp
xor
mov
bts
pushf
jmp
push
sub
jmp
push
sub
mov
push
mov
add
jmp
mov
or
pushl
pop
sub
mov
jmp
add
pop
add
jmp
pop
xchg
jmp
push
mov
shl
inc
add
add
jmp
subl
pop
add
mov
push
mov
add
add
jmp
mov
push
notl
mov
add
neg
jmp
push
mov
mov
sub
sub
sub
jmp
xor
shr
push
mov
notl
pop
add
add
jmp
add
sub
and
jmp
sub
pop
add
jmp
pop
xor
pop
xor
sub
push
mov
add
sub
sub
pop
sub
add
add
push
mov
add
pop
pop
add
xchg
jmp
mov
shl
sub
jmp
mov
mov
pop
sub
mov
push
jmp
sub
pop
sub
or
jmp
push
mov
add
add
xchg
pop
sub
mov
jmp
mov
mov
add
jmp
add
push
mov
push
mov
sub
sub
xor
xor
mov
pop
or
pop
sub
or
dec
not
add
sub
pop
add
jmp
add
add
sub
push
push
mov
mov
mov
jmp
mov
pushl
mov
add
popl
mov
xor
pushf
jmp
sub
pop
push
mov
sub
pop
pop
pushl
jmp
push
mov
push
mov
add
add
xchg
pop
jmp
mov
sub
push
mov
sub
xor
jmp
add
pop
add
add
jmp
push
push
mov
jmp
xor
xor
jmp
mov
sub
pop
jmp
mov
mov
add
add
push
mov
not
shr
jmp
push
push
pop
mov
jmp
and
pushl
pop
push
push
mov
addl
pushl
jmp
not
sub
push
mov
sub
xor
xor
add
xor
xor
pop
push
mov
push
mov
add
add
inc
or
add
add
jmp
pop
push
mov
jmp
push
push
mov
push
mov
sub
jmp
shr
add
sub
pop
sub
pop
push
mov
jmp
inc
push
mov
add
jmp
mov
inc
and
jmp
add
jmp
add
push
pushl
jmp
not
push
mov
jmp
xor
inc
shl
sub
jmp
mov
mov
push
mov
dec
not
jmp
mov
sub
jmp
pushl
pop
add
sub
mov
push
jmp
pushl
pop
popl
mov
jmp
pop
pop
and
mov
push
mov
add
add
xchg
pop
or
je
push
push
jmp
push
mov
add
add
jmp
push
pushl
pop
add
add
push
push
mov
jmp
add
pop
add
push
jmp
push
mov
add
sub
mov
mov
jmp
push
pushl
mov
add
jmp
mov
xor
pop
sub
add
push
mov
add
jmp
add
sub
xchg
pop
mov
push
jmp
push
mov
add
jmp
xchg
mov
mov
mov
xor
mov
add
push
push
jmp
add
add
xchg
pop
pop
add
jmp
push
mov
sub
add
inc
shr
jmp
pushl
mov
jmp
mov
sub
jmp
push
mov
sub
pop
sub
mov
pop
pop
and
mov
add
or
je
push
mov
jmp
pop
add
push
mov
jmp
push
push
popl
addl
mov
push
jmp
push
push
mov
mov
sub
mov
jmp
pop
not
add
sub
jmp
xor
xor
pop
add
mov
add
push
mov
jmp
xor
push
mov
push
mov
mov
pop
pop
jmp
add
pop
add
push
mov
inc
dec
xor
sub
xor
sub
pop
pop
push
mov
neg
and
xor
add
sub
pop
jmp
mov
add
push
mov
and
push
mov
add
jmp
pop
add
push
mov
add
add
jmp
lods
sub
mov
jmp
pushl
popf
pop
adc
pushf
jmp
mov
sub
pop
mov
push
push
jmp
mov
pop
pop
add
pop
xchg
mov
bts
pushf
jmp
add
add
pop
sub
xchg
mov
mov
pushl
jmp
pop
xor
dec
sub
jmp
subl
add
addl
subl
jmp
mov
xor
pop
jmp
mov
xor
mov
add
pop
push
jmp
mov
push
mov
add
pop
add
xchg
pop
xchg
pop
and
pushf
jmp
dec
or
xor
add
pop
shr
and
xor
or
pop
sub
add
mov
add
add
xor
xor
xor
pop
push
push
jmp
pop
add
pop
sub
mov
jmp
push
mov
sub
add
add
pop
add
sub
jmp
popw
jmp
mov
add
and
xor
jmp
pushl
mov
jmp
mov
shr
shr
push
mov
sub
mov
add
jmp
dec
add
add
jmp
add
not
xor
push
mov
push
mov
shl
jmp
shl
push
mov
mov
add
and
jmp
shr
sub
and
pop
shr
push
mov
neg
dec
and
shr
shl
sub
or
pop
sub
mov
pop
add
mov
add
jmp
pop
or
pushf
jmp
push
mov
sub
add
push
mov
add
shr
jmp
pushl
popf
pop
rcrw
pushf
jmp
mov
push
push
jmp
mov
add
add
xchg
pop
push
mov
jmp
add
mov
pushl
jmp
mov
push
jmp
not
shr
xor
mov
jmp
push
push
pop
push
mov
sub
jmp
push
push
mov
mov
jmp
mov
add
pushl
pop
push
mov
jmp
pop
add
xchg
jmp
push
mov
addl
pop
add
add
xchg
pop
push
mov
jmp
add
pop
sub
sub
mov
add
xor
xor
jmp
sub
mov
mov
add
jmp
sub
add
mov
add
xchg
pop
mov
addw
jmp
add
sub
sub
mov
add
sub
sub
push
mov
jmp
mov
add
push
mov
add
add
xchg
pop
pushl
pushl
jmp
push
push
mov
add
sub
xchg
jmp
pop
mov
push
pushf
jmp
xor
mov
add
sub
mov
add
push
mov
jmp
shl
shl
sub
xor
jmp
add
push
mov
mov
push
mov
mov
or
jmp
pushl
popf
pop
adc
pushf
jmp
add
add
add
jmp
mov
pop
mov
add
jmp
push
mov
add
push
mov
add
add
pop
pop
pop
pop
push
push
jmp
sub
add
add
pop
jmp
xchg
pop
mov
jmp
mov
mov
pop
add
add
push
jmp
pushl
mov
jmp
push
mov
addl
pop
push
mov
sub
add
jmp
add
pop
push
mov
jmp
sub
mov
pop
sub
mov
jmp
dec
or
dec
neg
jmp
neg
sub
sub
pop
jmp
pop
add
push
mov
push
mov
jmp
push
mov
jmp
pop
xchg
mov
push
sub
jmp
xor
xor
xor
xor
push
xchg
jmp
sub
mov
jmp
add
pop
push
mov
mov
not
xor
shr
jmp
push
mov
mov
jmp
add
pop
push
jmp
push
push
mov
push
mov
mov
jmp
add
push
pushl
pop
jmp
not
xor
add
pop
sub
xchg
pop
mov
jmp
mov
push
pop
add
push
push
jmp
pushl
pop
jmp
xchg
push
mov
shr
sub
sub
sub
add
xor
xor
pop
xor
pushl
pop
push
mov
add
add
xchg
pop
pushl
pushl
jmp
push
mov
add
jmp
push
pushl
pop
add
push
mov
sub
xchg
jmp
push
mov
add
pop
jmp
mov
push
jmp
mov
pop
mov
pop
inc
dec
sub
xor
add
pop
pop
push
mov
mov
pop
pushl
pop
add
jmp
sub
mov
mov
add
push
mov
push
mov
jmp
not
shl
push
mov
sub
pop
add
mov
jmp
pop
popl
mov
idiv
movzbw
pushw
mov
jmp
mov
add
add
xchg
pop
pop
jmp
mov
push
pushl
pop
push
mov
jmp
mov
push
push
mov
jmp
mov
add
sub
pop
jmp
and
and
push
jmp
pushl
mov
add
jmp
mov
push
mov
not
neg
xor
or
pop
jmp
and
shr
push
mov
jmp
sub
mov
mov
push
mov
add
jmp
mov
add
add
jmp
pop
push
push
mov
mov
pop
sub
add
add
pop
xor
xor
xor
mov
or
shl
push
mov
jmp
push
mov
push
push
pop
not
jmp
add
pop
add
push
mov
pushl
mov
push
jmp
dec
add
push
mov
jmp
sub
mov
pop
sub
jmp
xor
xor
pop
mov
mov
push
mov
sub
jmp
pushl
pop
push
push
pop
push
jmp
pushl
pop
push
mov
jmp
add
pushl
mov
add
jmp
mov
sub
mov
jmp
add
push
push
push
popl
addl
jmp
push
mov
sub
jmp
mov
push
push
mov
add
shr
or
add
jmp
mov
add
pop
jmp
or
pop
inc
jmp
push
mov
neg
jmp
sub
mov
jmp
sub
sub
add
add
jmp
add
pop
xchg
mov
add
pushf
jmp
sub
mov
mov
sub
add
push
mov
shl
jmp
add
add
xor
xor
jmp
mov
pop
sub
sub
add
pushl
pop
add
jmp
add
pop
push
jmp
sub
add
add
sub
push
mov
add
dec
jmp
add
pushl
pop
add
neg
push
mov
push
jmp
shr
shr
xor
jmp
add
add
xchg
pop
add
add
sub
add
push
pushl
jmp
not
add
push
jmp
pushl
popf
pop
sbb
pushf
jmp
mov
add
mov
pop
sub
sub
jmp
shr
sub
mov
jmp
push
push
pop
sub
mov
push
jmp
mov
push
mov
push
push
mov
jmp
add
add
xchg
jmp
xor
pop
xor
mov
mov
add
inc
add
or
dec
sub
push
subl
mov
add
add
pop
add
pop
xchg
pop
jmp
pop
pop
dec
jmp
pushl
popf
pop
rcll
pushf
jmp
shr
push
push
jmp
add
add
pop
push
jmp
mov
sub
mov
mov
dec
xor
jmp
mov
mov
add
pop
pop
push
mov
mov
jmp
xor
pop
sub
jmp
add
dec
xor
jmp
pop
add
add
jmp
push
pushf
jmp
mov
add
push
push
mov
push
jmp
mov
mov
push
mov
add
pop
jmp
pop
sub
push
mov
add
sub
xchg
pop
jmp
pop
mov
push
pushl
pop
add
shr
not
jmp
mov
add
add
xor
jmp
sub
mov
push
mov
push
mov
push
mov
jmp
pop
add
sub
jmp
add
push
mov
push
mov
addl
jmp
pop
push
mov
push
jmp
popl
jmp
pushl
pop
push
push
pop
push
jmp
push
pop
push
push
push
pop
jmp
sub
or
mov
jmp
mov
add
mov
add
pushl
pop
jmp
mov
push
mov
dec
xor
mov
jmp
push
pop
push
mov
add
pop
jmp
xor
mov
push
mov
mov
add
add
xchg
mov
push
mov
jmp
shr
sub
sub
jmp
shr
or
sub
add
pop
or
pop
dec
shr
xor
add
pop
xchg
mov
mul
push
mov
jmp
mov
add
pop
add
xchg
pop
not
push
jmp
add
push
mov
shr
xchg
dec
xchg
inc
jmp
add
push
mov
jmp
pop
push
mov
add
sub
xchg
pop
mov
jmp
mov
mov
xor
pop
jmp
xor
xor
xor
xor
push
mov
jmp
push
mov
add
not
inc
and
jmp
push
mov
add
sub
xchg
pop
jmp
mov
push
mov
jmp
mov
push
mov
add
add
push
jmp
mov
add
pop
push
mov
xor
add
pop
jmp
push
mov
not
jmp
mov
add
mov
jmp
mov
jmp
mov
add
shl
jmp
pop
push
pushl
pop
jmp
mov
mov
add
jmp
mov
push
mov
add
pop
pop
jmp
sub
add
add
jmp
add
push
mov
push
mov
add
jmp
shr
push
mov
inc
shl
not
jmp
add
mov
add
add
add
sub
push
mov
jmp
push
mov
mov
jmp
mov
add
push
mov
sub
pop
xchg
pop
jmp
pop
xor
xor
push
mov
jmp
xor
xor
mov
add
push
mov
jmp
push
mov
add
pop
jmp
popl
jmp
push
mov
sub
xchg
mov
add
jmp
pop
popl
mov
push
mov
jmp
pop
sub
push
push
pop
pop
pop
xor
jmp
add
dec
and
sub
jmp
push
push
pop
pop
jmp
pop
xor
or
xor
mov
pop
sub
pushl
jmp
jmp
pushl
pop
jmp
push
mov
add
shl
not
sub
jmp
mov
xor
add
pop
jmp
add
push
mov
sub
pop
xor
xor
xor
jmp
shr
add
mov
pop
not
not
inc
dec
shl
add
mov
pop
shl
neg
add
push
mov
mov
or
shr
xor
jmp
not
xchg
inc
sub
push
mov
add
sub
jmp
mov
push
pop
add
jmp
mov
push
jmp
mov
pop
not
push
mov
add
mov
push
jmp
pop
add
push
mov
add
sub
xor
xor
xor
pop
mov
push
mov
mov
inc
xor
dec
neg
push
mov
xor
jmp
pop
push
push
push
mov
push
push
mov
jmp
sub
mov
mov
jmp
mov
push
mov
push
mov
add
jmp
addl
pop
sub
pop
jmp
sub
or
inc
xor
jmp
mov
mov
push
jmp
mov
add
sub
xchg
pop
mov
pushl
pop
jmp
and
sub
mov
mov
add
mov
xor
mov
add
and
pop
or
je
pushl
pushl
jmp
add
xor
xor
xor
jmp
pop
xchg
pop
jmp
push
push
pop
add
pop
push
mov
or
jmp
lods
xor
push
mov
jmp
add
pop
xor
jmp
mov
push
push
pop
xor
sub
dec
xor
jmp
add
mov
pop
jmp
mov
addl
addl
add
push
mov
jmp
add
add
pop
push
jmp
mov
add
sub
xchg
pop
mov
jmp
shl
add
add
jmp
add
sub
add
sub
add
add
sub
add
sub
add
movzbl
popw
jmp
sub
push
mov
add
jmp
add
or
shl
sub
push
mov
xor
pop
push
mov
sub
pop
add
pop
add
xchg
mov
pushl
mov
jmp
sub
push
mov
mov
add
add
sub
add
jmp
mov
push
jmp
push
mov
shl
push
mov
and
dec
shr
jmp
mov
pushl
pushl
pop
jmp
pushl
pushl
pop
add
add
or
shl
xor
xor
mov
add
push
mov
jmp
mov
sub
add
add
mov
add
push
mov
jmp
mov
pop
add
sub
sub
pushl
mov
add
jmp
push
mov
jmp
push
mov
sub
jmp
mov
push
jmp
jmp
push
pop
pop
jmp
mov
push
mov
jmp
add
sub
add
add
jmp
add
sub
xchg
pop
mov
push
jmp
not
inc
shr
push
push
mov
mov
sub
jmp
pop
sub
or
push
jmp
sub
dec
and
sub
jmp
add
mov
add
push
pushl
pop
popl
pop
shr
xor
xor
xor
jmp
push
sub
mov
mov
neg
add
jmp
add
sub
xchg
pop
mov
sub
jmp
pushl
mov
jmp
mov
add
add
add
jmp
pop
add
add
jmp
mov
push
pop
mov
add
mov
jmp
push
mov
mov
jmp
mov
add
push
mov
jmp
push
pop
push
mov
push
mov
jmp
push
mov
mov
add
jmp
mov
push
mov
shr
xor
inc
jmp
push
push
pop
dec
neg
shr
jmp
mov
push
mov
jmp
pop
add
sub
sub
jmp
xor
mov
mov
jmp
mov
push
jmp
mov
sub
jmp
push
mov
add
jmp
popl
push
push
mov
mov
sub
jmp
or
pop
inc
shr
push
mov
push
mov
and
shr
add
sub
pop
shr
xor
sub
xor
pop
add
pop
sub
jmp
xor
xor
sub
mov
jmp
neg
xor
or
pop
dec
neg
sub
mov
pop
add
add
sub
pop
xchg
pop
add
pushf
jmp
or
pop
push
mov
inc
dec
shl
add
jmp
push
push
jmp
pop
add
xchg
pop
push
mov
jmp
sub
mov
push
mov
push
pop
xor
pop
jmp
inc
shr
not
push
jmp
sub
mov
mov
dec
add
and
jmp
pop
push
mov
mov
push
mov
jmp
mov
mov
mov
mov
push
mov
add
add
jmp
mov
push
pop
push
mov
add
jmp
mov
add
pushl
jmp
add
pop
push
jmp
add
pop
push
pushl
mov
add
popl
pop
decl
pushf
jmp
dec
shl
and
inc
sub
sub
pop
sub
jmp
push
mov
sub
jmp
push
mov
jmp
mov
push
pop
push
mov
push
jmp
push
xorl
pop
xor
mov
add
and
mov
add
or
shl
pushl
push
jmp
mov
add
pop
sub
pop
add
mov
pop
add
pop
push
pushl
pop
popl
pop
mov
sub
jmp
add
xor
xor
xor
jmp
add
add
sub
jmp
xchg
pop
mov
mov
add
sub
sub
pop
xchg
pop
mov
jmp
push
mov
jmp
mov
push
mov
dec
not
push
mov
or
jmp
add
xor
jmp
mov
push
mov
add
pop
push
jmp
sub
sub
add
pop
jmp
add
pop
add
jmp
push
mov
add
jmp
pop
sub
mov
pushl
jmp
xor
pop
add
add
jmp
mov
add
push
mov
sub
pop
jmp
push
mov
mov
add
add
sub
pop
mov
pop
add
pop
xchg
pop
push
mov
jmp
and
sub
add
sub
jmp
mov
add
add
sub
jmp
push
mov
add
pop
add
mov
pop
add
jmp
or
xor
sub
xor
jmp
xor
xor
xor
pop
mov
push
jmp
negb
pushf
jmp
popl
push
push
pop
add
sub
xchg
mov
jmp
not
sub
add
jmp
mov
sub
and
and
sub
add
add
push
jmp
decl
pushl
pushl
pop
add
push
jmp
xor
xor
mov
mov
push
jmp
mov
mov
add
sub
sub
pop
add
mov
pop
mov
xor
mov
add
or
pop
jmp
lods
add
push
jmp
push
pop
shr
dec
sub
mov
pop
shl
jmp
push
pushl
pop
push
mov
add
add
xchg
jmp
mov
add
sub
pop
sub
add
add
add
mov
add
xchg
pop
imul
push
pushf
jmp
mov
sub
mov
addl
pop
push
jmp
mov
push
pop
xor
and
push
jmp
shr
push
mov
mov
shr
sub
push
mov
jmp
inc
dec
or
jmp
sub
xor
mov
push
mov
add
add
push
pushl
pop
popl
pop
push
mov
jmp
add
push
mov
add
pop
add
xchg
pop
xchg
pop
mov
push
jmp
mov
sub
mov
push
pop
add
jmp
add
mov
pop
neg
and
sub
push
mov
jmp
mov
push
mov
jmp
pop
xor
add
jmp
push
mov
add
push
mov
add
jmp
sub
pop
sub
mov
pushl
pop
popl
pop
jmp
push
pop
push
mov
add
neg
shl
shr
jmp
add
pop
push
push
jmp
push
mov
sub
pop
mov
add
xor
xor
xor
pop
mov
jmp
pushl
pushl
jmp
add
xor
movzwl
pushw
mov
jmp
mov
push
mov
sub
sub
add
jmp
push
mov
push
push
mov
mov
jmp
push
mov
add
pop
jmp
add
add
sub
jmp
mov
pop
mov
mov
jmp
add
push
mov
shr
jmp
neg
push
mov
jmp
and
pop
push
sub
pop
sub
mov
mov
jmp
mov
push
jmp
pop
pop
add
jmp
pop
pop
mov
pushl
jmp
mov
add
add
xor
jmp
add
push
pushl
pop
popl
pop
imul
pushw
mov
jmp
push
mov
add
push
push
mov
jmp
xor
inc
or
jmp
inc
sub
add
pop
xchg
pop
push
mov
jmp
mov
push
mov
mov
pop
add
pop
push
jmp
add
push
mov
neg
not
or
xor
add
jmp
pushl
addl
jmp
jmp
push
popl
addl
popl
sub
mov
jmp
push
push
pop
jmp
pop
add
or
push
mov
sub
pop
mov
jmp
add
pop
sub
add
add
sub
pop
add
xor
xor
xor
pop
add
sub
jmp
push
mov
add
jmp
not
sub
sub
sub
jmp
mov
mov
push
mov
sub
add
jmp
mov
push
mov
jmp
dec
shr
sub
add
jmp
mov
pop
pushl
pop
add
push
mov
notl
jmp
pop
sub
add
pop
xchg
mov
push
sub
jmp
or
sub
sub
jmp
xor
mov
mov
add
subl
push
push
mov
jmp
xchg
pop
push
push
jmp
or
push
mov
push
jmp
pop
add
push
jmp
push
mov
push
mov
mov
pop
mov
add
jmp
xor
xor
xchg
not
jmp
sub
pop
add
add
sub
sub
jmp
movzbl
pushl
jmp
mov
pop
and
xor
jmp
add
dec
add
add
pop
push
mov
sub
jmp
add
add
xchg
jmp
mov
add
add
sub
sub
xor
pop
mov
pop
add
pop
sub
mov
jmp
mov
sub
mov
mov
add
pop
jmp
add
push
push
mov
mov
mov
push
mov
jmp
pop
dec
neg
inc
jmp
pop
shl
add
add
add
sub
sub
add
sub
pop
push
mov
jmp
mov
pop
sub
sub
add
push
mov
add
pop
add
pop
xchg
pop
or
shl
push
push
jmp
xchg
pop
add
jmp
pop
or
pushw
mov
mov
add
pop
sub
add
add
sub
pop
push
push
jmp
xchg
pop
mov
mov
push
push
mov
push
jmp
inc
add
xor
and
jmp
mov
pushl
pop
popl
pop
shrw
pushf
jmp
popl
pop
mov
mov
jmp
add
xor
xor
xor
jmp
push
mov
mov
mov
sub
sub
jmp
push
mov
pushl
mov
jmp
mov
push
mov
push
pop
add
jmp
add
add
mov
push
mov
add
add
xchg
pop
xchg
pop
xor
pushf
jmp
mov
shr
inc
sub
sub
mov
pop
or
mov
add
or
push
mov
sub
mov
add
push
mov
sub
pop
xor
jmp
push
pushl
pop
popl
mov
mov
addl
pop
jmp
pop
add
add
push
mov
add
pop
add
jmp
add
xchg
pop
popl
mov
movzbw
push
mov
jmp
add
pop
add
jmp
mov
add
add
sub
push
mov
sub
pop
jmp
mov
mov
push
mov
add
pop
jmp
push
mov
push
mov
sub
inc
jmp
mov
mov
sub
sub
add
sub
jmp
not
xchg
and
neg
jmp
add
mov
pop
push
mov
mov
add
shr
jmp
sub
add
pop
jmp
add
pop
xchg
jmp
push
mov
add
jmp
sub
sub
pop
push
jmp
mov
push
mov
shl
shl
xor
add
pop
jmp
pop
push
mov
jmp
incb
pop
add
mov
pop
not
push
mov
add
mov
add
sub
pop
pop
push
push
jmp
xchg
pop
popl
mov
push
mov
add
add
xchg
pop
pushl
pop
jmp
mov
sub
shl
neg
and
sub
sub
pop
jmp
pushl
pushl
jmp
xor
neg
shr
xor
jmp
pop
push
mov
jmp
mov
sub
sub
push
mov
add
sub
add
jmp
add
pushl
pop
add
movzbl
cmp
je
pushl
mov
jmp
mov
shl
sub
not
jmp
push
push
sub
mov
mov
mov
jmp
mov
mov
add
push
mov
push
jmp
mov
add
sub
push
mov
not
shr
not
sub
add
sub
pop
sub
push
mov
sub
add
add
pop
mov
add
jmp
add
push
mov
mov
add
add
push
push
jmp
add
push
mov
pushl
pop
popl
pop
pushl
jmp
mov
mov
push
mov
push
pop
jmp
add
add
xor
pop
add
pop
sub
push
push
mov
inc
dec
add
mov
pop
shl
neg
sub
add
sub
sub
jmp
pop
push
mov
mov
add
pop
push
mov
jmp
mov
push
mov
jmp
mov
push
mov
add
jmp
pop
push
mov
jmp
push
mov
sub
pop
jmp
push
mov
dec
inc
xor
mov
jmp
mov
dec
add
shr
jmp
push
mov
sub
xchg
mov
add
sub
sub
pop
sub
push
mov
add
mov
add
sub
sub
pop
push
mov
jmp
sub
xor
xor
jmp
sub
sub
mov
add
jmp
xchg
mov
push
mov
push
mov
add
pop
jmp
mov
add
xor
push
mov
dec
shl
sub
jmp
push
mov
pushl
pushl
pop
push
mov
add
jmp
add
add
pop
inc
dec
inc
push
mov
jmp
add
xor
pop
sub
mov
add
push
mov
jmp
push
mov
shr
shr
jmp
xchg
pop
pushl
pop
jmp
xor
mov
add
push
mov
and
pop
xor
xor
pop
push
mov
jmp
pushl
pushl
jmp
pop
push
push
jmp
push
push
mov
mov
xor
pop
jmp
sub
sub
pop
xor
pop
xor
pop
push
push
jmp
mov
push
push
jmp
add
add
sub
push
jmp
mov
not
neg
jmp
pop
push
mov
push
mov
shl
push
push
jmp
pop
pop
sub
jmp
mov
add
sub
mov
push
push
pop
dec
jmp
jmp
push
pop
pop
dec
not
add
or
mov
add
push
mov
sub
pop
pushl
pushl
jmp
jmp
push
pop
push
mov
xor
and
sub
dec
jmp
pop
push
push
pop
jmp
pushl
jmp
pop
push
mov
add
jmp
not
and
add
jmp
mov
add
sub
xchg
mov
mov
jmp
mov
pop
add
sub
sub
pop
add
add
jmp
pop
pop
push
mov
mov
pop
pushl
mov
jmp
sub
subl
pop
dec
add
mov
pop
push
jmp
mov
push
mov
mov
add
add
jmp
push
push
pop
inc
jmp
mov
pop
add
shl
add
xor
pop
xor
or
push
mov
sub
pop
push
subl
mov
add
add
pop
add
sub
jmp
mov
add
not
inc
add
push
mov
shl
jmp
mov
sub
mov
addl
mov
add
jmp
pop
xor
xor
xor
jmp
mov
push
jmp
popl
mov
push
mov
jmp
add
pop
xchg
pop
jmp
mov
add
add
pop
push
push
jmp
sub
xor
pop
add
jmp
add
pop
push
mov
mov
push
subl
pop
jmp
xor
shr
add
sub
jmp
mov
xor
shr
shl
dec
not
jmp
sub
pop
add
add
push
push
mov
sub
sub
dec
or
or
add
mov
pop
sub
push
mov
sub
pop
add
jmp
pop
mov
jmp
mov
mov
pop
sub
pop
push
mov
inc
jmp
mov
dec
add
not
or
xor
add
pop
jmp
push
mov
jmp
mov
push
mov
push
mov
add
jmp
mov
sub
mov
add
add
add
jmp
mov
add
add
push
mov
push
mov
neg
jmp
xor
shr
sub
jmp
pop
mov
jmp
mov
add
add
jmp
add
mov
add
xor
add
mov
mov
add
push
mov
add
pop
add
sub
pop
push
mov
jmp
mov
mov
add
add
jmp
pop
push
mov
jmp
xor
push
mov
jmp
add
and
push
mov
push
mov
sub
pop
jmp
neg
push
decb
pop
xor
mov
mov
add
jmp
pop
popl
jmp
add
pop
add
inc
dec
xor
push
pop
pop
add
pop
xchg
mov
roll
pushf
jmp
and
pop
xor
inc
jmp
mov
mov
sub
mov
add
push
sub
mov
jmp
or
neg
push
mov
xor
pop
add
pop
add
sub
pop
add
xchg
mov
shlw
pushf
jmp
shr
or
dec
dec
add
mov
mov
add
jmp
mov
mov
push
push
push
push
jmp
lods
push
push
jmp
sub
mov
pop
mov
mov
add
sub
pop
xor
mov
add
push
mov
jmp
push
mov
inc
jmp
mov
add
and
pop
jmp
push
mov
shr
shr
add
xor
sub
pop
jmp
pop
add
mov
add
sub
mov
jmp
mov
push
mov
sub
pop
or
jmp
push
mov
mov
add
add
push
pushl
pop
popl
pop
add
push
mov
jmp
pushl
pop
add
popl
mov
mov
push
jmp
pushl
pop
jmp
push
pop
add
push
push
pop
jmp
mov
sub
add
add
pop
add
pop
not
jmp
push
pop
push
mov
shr
push
mov
xor
jmp
add
push
push
jmp
shr
push
xchg
sub
mov
notb
pop
xchg
jmp
push
mov
mov
sub
sub
add
pop
mov
jmp
pushl
pop
popl
pop
jmp
mov
push
pop
push
mov
push
mov
sub
jmp
pop
push
push
mov
push
pop
jmp
add
push
mov
pop
mov
add
push
mov
jmp
xor
push
mov
add
jmp
shr
not
add
jmp
add
add
sub
mov
jmp
mov
pop
and
mov
add
shr
xor
push
mov
jmp
add
pop
xchg
mov
jmp
mov
pop
shl
jmp
add
popl
pop
mov
push
jmp
mov
dec
xor
push
jmp
push
mov
push
jmp
push
pop
push
jmp
mov
add
sub
xchg
pop
mov
jmp
shl
inc
shl
dec
jmp
shl
not
and
xor
add
pop
push
mov
jmp
mov
push
mov
push
push
mov
jmp
pop
xor
xor
xor
mov
mov
mov
add
jmp
mov
add
sub
mov
jmp
mov
add
dec
push
mov
push
jmp
push
mov
push
mov
add
add
jmp
mov
sub
mov
push
mov
addl
jmp
sub
pop
sub
jmp
push
push
pop
push
mov
dec
xor
neg
jmp
mov
push
jmp
mov
xor
mov
add
shr
inc
push
mov
and
pop
shl
xor
add
pop
sub
pop
not
sub
and
pop
shr
xor
xor
xor
jmp
mov
add
pop
add
xor
xor
xor
pop
jmp
pushl
pop
push
mov
mov
add
add
xchg
mov
add
add
jmp
mov
mov
push
mov
mov
add
jmp
pushl
pop
push
jmp
push
mov
push
push
pop
and
jmp
mov
push
push
pop
sub
mov
pop
shr
jmp
mov
mov
add
sub
xchg
pop
jmp
pushl
mov
jmp
pop
mov
push
jmp
xor
push
xchg
not
xchg
pop
jmp
mov
and
push
sub
mov
mov
jmp
push
mov
add
sub
xor
xor
jmp
push
pushl
pop
popl
jmp
mov
push
mov
add
pop
dec
xchg
shl
jmp
xchg
pop
mov
mov
push
notb
pop
push
jmp
push
push
pop
add
sub
xchg
jmp
pop
push
mov
jmp
xor
and
sub
sub
mov
pop
xor
add
jmp
push
pop
and
pushl
pop
push
jmp
add
sub
add
jmp
add
pushl
mov
add
add
push
mov
mov
jmp
xor
mov
add
jmp
sub
push
mov
mov
pop
pop
and
pop
push
mov
mov
add
pop
shr
sub
xchg
dec
xor
xor
xor
push
jmp
mul
movzbw
push
mov
jmp
mov
push
push
mov
mov
add
jmp
add
add
xchg
jmp
push
mov
mov
mov
add
mov
xor
pushl
jmp
push
mov
shr
jmp
xor
xor
xor
mov
and
pushf
jmp
xor
xor
xor
jmp
add
pop
push
mov
shl
add
jmp
add
mov
add
sub
sub
push
push
jmp
mov
shr
or
sub
mov
push
jmp
inc
push
push
push
push
pop
push
mov
jmp
mov
add
push
push
push
mov
dec
neg
jmp
push
mov
sub
jmp
pushl
mov
add
popl
pop
bt
pushf
jmp
push
pop
push
mov
add
add
jmp
and
shl
push
jmp
mov
mov
push
mov
mov
add
jmp
push
mov
sub
add
pop
and
pop
shl
add
add
pop
sub
add
add
sub
pop
sub
add
add
sub
pop
jmp
mov
mov
push
mov
push
push
jmp
add
pop
pop
push
jmp
mov
add
add
popl
mov
push
mov
jmp
pop
xchg
push
xchg
not
push
jmp
push
pop
push
mov
mov
add
pop
push
jmp
mov
push
mov
add
push
mov
jmp
add
mov
push
push
pop
add
add
xchg
pop
push
mov
jmp
add
or
pop
shl
and
push
mov
add
jmp
pop
pop
push
mov
jmp
pop
push
mov
push
mov
sub
pop
add
jmp
sub
pop
xchg
pop
mov
mov
push
mov
add
mov
add
add
xchg
mov
or
pushf
jmp
pushl
mov
add
jmp
mov
sub
jmp
xor
xor
pop
sub
pushf
jmp
pop
sub
pop
push
jmp
sub
and
pop
jmp
mov
push
mov
add
mov
add
jmp
pushl
pop
add
jmp
pop
popl
push
mov
add
pop
pop
push
jmp
add
add
pop
push
mov
add
pop
sub
sub
pop
add
add
sub
add
push
mov
jmp
mov
push
mov
push
incl
pop
jmp
mov
mov
pop
jmp
decl
mov
push
jmp
mov
add
add
jmp
pop
mov
add
shl
push
mov
xor
neg
jmp
popl
mov
mov
push
pushf
jmp
xor
xor
xor
push
mov
jmp
neg
add
add
add
pop
push
mov
add
pop
xchg
pop
imul
push
pushf
jmp
not
neg
add
jmp
add
add
pop
jmp
xchg
pop
add
sub
xchg
pop
mov
mov
jmp
sub
push
mov
mov
sub
add
push
mov
jmp
pushl
pop
sub
mov
mov
push
mov
and
jmp
push
mov
mov
mov
pushl
mov
jmp
pop
add
mov
jmp
mov
jmp
mov
push
pushl
pop
add
add
jmp
add
add
pop
jmp
pop
add
and
add
sub
xor
pop
mov
pop
sub
add
mov
pop
mov
mov
add
and
pop
or
jne
push
mov
jmp
mov
mov
mov
pop
add
pop
pushl
subl
jmp
notl
mov
add
push
mov
push
mov
mov
jmp
mov
movswl
push
mov
jmp
add
mov
add
sub
jmp
sub
push
mov
pop
jmp
xor
mov
test
pushf
jmp
mov
push
jmp
mov
add
sub
xchg
pop
mov
jmp
pop
add
jmp
mov
push
jmp
push
mov
jmp
add
add
sub
jmp
mov
add
add
jmp
mov
push
jmp
sub
pop
xchg
jmp
sub
push
mov
jmp
mov
push
mov
add
add
xchg
pop
pop
push
mov
jmp
push
mov
jmp
and
and
sub
add
jmp
mov
push
jmp
push
mov
addl
mov
add
sub
jmp
mov
mov
xor
mov
pop
add
mov
add
push
pushl
mov
add
popl
pop
rorb
pushf
jmp
pop
add
push
mov
xchg
not
xchg
add
jmp
pop
mov
mov
mov
jmp
push
pushl
pop
popl
pop
add
sub
xchg
pop
mov
push
pushf
jmp
pushl
jmp
mov
add
jmp
add
sub
xor
xor
xor
pop
jmp
push
push
pop
jmp
sub
mov
xorl
mov
add
push
mov
xor
pop
pop
or
je
sub
push
jmp
add
add
xchg
pop
push
mov
add
add
jmp
mov
pop
add
jmp
sub
sub
add
push
sub
mov
mov
shr
xor
or
xor
mov
pop
add
pop
mov
push
jmp
pop
pop
add
push
jmp
negw
pushf
jmp
pop
pop
mov
jmp
pop
push
mov
jmp
push
mov
or
not
push
mov
jmp
add
push
push
jmp
xchg
not
xchg
pop
shl
push
mov
inc
jmp
mov
sub
pop
add
jmp
push
mov
sub
mov
mov
add
jmp
add
pop
sub
xor
jmp
mov
add
sub
mov
mov
xor
jmp
mov
add
push
mov
xor
pop
add
pushl
jmp
mov
mov
add
pop
add
pop
push
pushl
jmp
mov
push
jmp
xchg
mov
shr
xor
push
mov
jmp
and
pop
xor
inc
jmp
pushl
mov
add
push
mov
add
jmp
push
mov
sub
mov
mov
add
jmp
add
xchg
pop
push
jmp
pop
pop
addl
push
mov
sub
pop
sub
jmp
mov
xor
pop
inc
push
mov
or
dec
jmp
push
pushl
pop
popl
pop
jmp
push
mov
add
sub
xchg
pop
jmp
xor
pop
mov
sub
mov
addl
pop
add
jmp
push
pop
add
jmp
push
mov
jmp
dec
xor
xor
jmp
mov
push
push
pop
push
mov
jmp
notb
pop
push
mov
jmp
push
mov
sub
pop
xchg
pop
mov
push
jmp
mov
add
pop
pop
push
push
pop
add
jmp
sub
mov
mov
push
mov
push
jmp
shr
push
mov
sub
jmp
or
shl
add
and
pop
push
mov
sub
pop
xor
pop
mov
pop
add
pop
push
mov
add
mov
add
xchg
jmp
push
push
mov
push
mov
add
jmp
pushl
pushl
jmp
mov
shl
add
add
pop
inc
sub
mov
jmp
sub
sub
sub
jmp
add
add
mov
pop
jmp
or
neg
sub
mov
jmp
xor
xor
xor
pop
jmp
push
mov
or
jmp
xchg
pop
push
jmp
mov
push
mov
xor
not
add
jmp
and
add
sub
sub
pop
inc
xor
add
mov
pop
push
mov
add
sub
pop
sub
add
pop
xchg
pop
mov
jmp
add
sub
xchg
pop
mov
pushl
jmp
sub
pop
push
push
jmp
mov
add
sub
mov
mov
neg
jmp
push
mov
dec
jmp
pop
add
push
mov
add
mov
add
xchg
jmp
mov
mov
sub
mov
pop
xor
jmp
mov
push
push
mov
push
mov
jmp
sub
mov
add
add
add
pop
pushw
jmp
pop
add
pop
xchg
pop
mov
push
jmp
mov
or
neg
push
push
mov
jmp
sub
pushw
jmp
pushl
pop
push
jmp
dec
xchg
push
mov
or
xor
add
pop
add
mov
add
xchg
pop
cmp
pushf
jmp
pop
pop
sub
jmp
mov
dec
not
xchg
push
notl
pop
xchg
jmp
pop
xchg
pop
push
mov
jmp
xor
mov
rorl
pushf
jmp
add
add
mov
add
sub
add
jmp
mov
sub
shr
xor
sub
sub
add
pop
mov
add
xor
shr
add
add
pop
push
push
jmp
mov
pushl
mov
add
popl
mov
shll
pushf
jmp
xor
xor
pop
pushl
pushl
jmp
mov
push
mov
shl
xor
or
xor
xor
sub
pop
add
add
pop
xchg
pop
shr
push
push
jmp
pop
xor
xor
xor
jmp
mov
push
mov
add
add
push
jmp
pop
push
mov
dec
xor
shl
jmp
addl
add
subl
subl
jmp
add
xchg
mov
jmp
mov
add
push
mov
push
push
jmp
pushl
mov
add
sub
mov
push
pop
add
jmp
push
pushl
pop
jmp
add
xor
xor
jmp
pop
push
push
mov
push
mov
add
pop
jmp
add
not
xchg
xor
xor
xor
not
xchg
jmp
mov
sub
mov
pop
neg
not
sub
xor
add
pop
sub
pop
sub
add
sub
pop
add
push
mov
sub
dec
jmp
pop
shl
neg
sub
jmp
mov
not
inc
inc
add
push
mov
sub
pop
add
mov
add
push
mov
jmp
push
mov
add
add
push
mov
jmp
sub
mov
push
pop
shr
add
jmp
mov
push
mov
mov
pop
shl
or
or
jmp
add
sub
pushl
pop
jmp
mov
sub
jmp
add
push
pushl
pop
popl
pop
push
push
jmp
xor
xor
pop
cmp
pushf
jmp
push
mov
add
add
jmp
sub
mov
pop
mov
jmp
dec
push
mov
jmp
mov
push
mov
jmp
add
pop
sub
jmp
subl
pushl
xor
xor
xor
not
jmp
add
popl
mov
jmp
mov
push
mov
jmp
push
pop
push
mov
add
mov
jmp
mov
add
add
xchg
jmp
shr
not
inc
jmp
mov
push
jmp
push
mov
push
pop
add
mov
jmp
push
mov
addl
mov
push
mov
jmp
xor
add
mov
jmp
push
mov
push
mov
xor
dec
not
shr
jmp
xor
or
sub
add
jmp
mov
and
and
or
shr
or
jmp
mov
push
mov
add
pop
mov
mov
push
jmp
push
mov
add
sub
jmp
add
or
sub
xor
pop
shr
xor
mov
jmp
xor
xor
xor
push
push
jmp
push
mov
sub
mov
add
push
mov
not
jmp
sub
pop
jmp
xchg
pop
mov
push
mov
shl
shr
shr
jmp
not
or
sub
sub
jmp
add
mov
add
jmp
pop
mov
pushl
jmp
push
mov
sub
mov
mov
add
jmp
inc
push
mov
xor
jmp
add
pop
add
add
jmp
shr
or
push
mov
not
push
mov
xor
and
pop
shr
shl
add
or
pop
xor
add
pop
pop
add
xchg
jmp
mov
mov
pop
pop
jmp
add
sub
pop
add
jmp
pop
sub
sub
add
add
add
push
mov
sub
mov
add
pop
push
mov
jmp
mov
xor
pop
add
pop
mov
add
xchg
mov
mov
jmp
xchg
mov
add
or
shr
add
add
pop
jmp
mov
add
add
push
pop
pop
add
pop
xchg
pop
decb
pushf
jmp
mov
push
mov
push
mov
mov
jmp
mov
add
push
mov
add
push
jmp
push
pop
pop
push
mov
sub
pop
add
jmp
pop
pop
xor
pushl
pop
push
mov
add
add
xchg
pop
push
sub
jmp
mov
push
push
mov
mov
add
jmp
add
pop
push
mov
jmp
xchg
pop
push
mov
jmp
mov
push
mov
shl
add
shl
jmp
push
pop
not
xor
sub
pop
jmp
add
pop
add
push
jmp
add
push
push
mov
xor
mov
push
mov
jmp
lods
xor
push
push
jmp
xchg
push
mov
sub
jmp
pop
add
pop
push
jmp
sub
mov
pop
jmp
mov
mov
sub
jmp
neg
not
xor
sub
jmp
pushl
pop
popl
mov
jmp
add
sub
sub
add
jmp
add
mov
add
push
jmp
mov
addl
pop
push
mov
add
pop
add
jmp
pop
jmp
mov
add
push
jmp
pushw
mov
jmp
sub
mov
mov
xor
sub
add
add
pop
push
mov
jmp
add
pop
xor
xor
jmp
mov
add
pop
push
jmp
mov
and
push
mov
and
mov
add
sub
jmp
xor
xor
pop
push
mov
sub
pop
or
jmp
xor
xor
xor
pop
jmp
pop
mov
pop
jmp
sub
add
mov
jmp
pushl
pop
popl
mov
sub
pushf
jmp
shr
and
xor
add
mov
add
jmp
pushl
pop
popl
pop
shlb
pushf
jmp
sub
pop
sub
jmp
mov
push
pop
add
mov
mov
add
xor
jmp
pushl
mov
add
add
push
push
jmp
add
pop
push
mov
jmp
mov
mov
push
mov
add
add
xchg
pop
jmp
sub
add
jmp
mov
push
mov
sub
pop
mov
jmp
add
shl
sub
jmp
push
mov
sub
pop
jmp
add
add
add
add
sub
sub
mov
add
xchg
pop
btr
pushf
jmp
xor
push
mov
sub
pop
sub
jmp
push
mov
add
add
pop
sub
jmp
add
pushl
pop
push
jmp
add
sub
xchg
pop
mov
push
jmp
shl
push
mov
sub
pop
add
sub
sub
jmp
push
mov
addl
pop
sub
mov
jmp
mov
push
pop
add
sub
mov
jmp
mov
sub
add
pop
xor
add
add
sub
pop
push
mov
and
inc
sub
add
pop
xor
xor
xor
mov
shrb
pushf
jmp
mov
neg
shr
sub
add
sub
pop
or
jmp
pop
pushl
pop
push
jmp
mov
push
mov
mov
add
pushl
jmp
sub
not
inc
jmp
pop
sub
push
mov
add
add
pop
sub
pop
push
xorl
popl
xorl
pop
pop
jmp
add
push
push
push
pop
inc
xor
mov
jmp
shr
or
push
jmp
add
sub
add
mov
jmp
push
mov
add
add
jmp
push
mov
add
mov
jmp
push
pop
push
push
mov
add
jmp
mov
push
jmp
push
mov
mov
pop
add
add
sub
pop
xchg
pop
div
movzbw
pushw
mov
jmp
mov
push
jmp
mov
mov
add
push
push
push
jmp
sub
mov
xchg
not
xchg
mov
add
xchg
jmp
pop
push
sub
push
popl
push
jmp
add
push
pushl
pop
popl
pop
mov
push
jmp
mov
mov
pop
jmp
pop
push
mov
jmp
push
mov
add
sub
mov
push
jmp
mov
push
mov
sub
pop
add
addl
pushl
jmp
sub
mov
mov
push
mov
push
jmp
and
push
mov
dec
jmp
pop
push
mov
push
mov
shr
jmp
add
pushl
pop
jmp
xchg
pop
mov
mov
jmp
mov
add
pop
jmp
mov
pop
pushl
pop
jmp
push
push
pop
add
inc
or
add
mov
jmp
add
pop
sub
jmp
pop
mov
push
push
pop
push
mov
mov
jmp
push
push
pop
add
push
push
jmp
sub
pop
and
jmp
mov
incl
pushf
jmp
pushl
pop
jmp
pop
add
add
pop
jmp
pop
mov
add
jmp
mov
mov
mov
jmp
not
inc
push
mov
or
pop
shr
add
xor
pop
push
mov
mov
sub
mov
add
add
pop
xor
jmp
add
xchg
pop
xchg
jmp
pop
sub
sub
add
sub
push
mov
jmp
push
pop
push
mov
push
mov
jmp
mov
or
pop
sub
jmp
pop
add
pushl
pushl
pop
add
pushl
pop
sub
mov
mov
add
add
xchg
pop
push
mov
jmp
add
push
mov
inc
inc
dec
sub
mov
jmp
shl
and
inc
add
jmp
mov
push
jmp
mov
push
jmp
push
mov
add
push
mov
push
jmp
mov
push
mov
push
mov
mov
mov
pop
jmp
add
add
xchg
pop
push
mov
jmp
mov
push
mov
add
push
mov
jmp
mov
shl
xchg
jmp
add
add
pop
sub
jmp
add
pop
xor
jmp
add
pop
push
push
push
push
push
pop
jmp
push
push
pop
push
mov
sub
jmp
mov
push
push
pushl
pop
add
jmp
popw
pushw
mov
jmp
and
pop
shr
add
add
pop
push
mov
add
inc
add
and
shr
add
sub
pop
add
add
pop
push
push
jmp
mov
mov
pushl
jmp
mov
add
add
jmp
mov
add
add
jmp
sub
neg
shr
add
jmp
add
sub
xchg
pop
mov
mov
jmp
pushl
pop
jmp
mov
mov
neg
jmp
push
mov
or
jmp
mov
inc
shr
sub
jmp
push
mov
add
jmp
mov
push
mov
mov
pop
xor
pop
push
jmp
not
mov
pop
push
jmp
push
push
pop
jmp
pushl
pushl
jmp
mov
push
jmp
add
add
mov
add
xchg
pop
or
pushf
jmp
pop
push
mov
jmp
push
pop
mov
xor
mov
add
sub
pop
jmp
mov
push
mov
jmp
push
mov
mov
mov
mov
add
jmp
add
mov
add
pushl
jmp
mov
mov
add
pop
not
push
jmp
shr
sub
xor
pop
add
add
mov
pop
or
xor
neg
and
xor
push
mov
xor
pop
add
mov
push
mov
jmp
pushl
mov
jmp
add
push
mov
add
jmp
mov
incw
pushf
jmp
mov
inc
add
xor
sub
or
pop
push
jmp
sub
shr
xor
push
mov
add
pop
and
shr
xor
add
mov
add
add
xchg
mov
mov
jmp
mov
mov
add
xor
jmp
push
mov
add
sub
jmp
pop
add
xchg
pop
jmp
and
pop
not
dec
jmp
mov
popl
pushl
mov
add
add
jmp
push
xorl
pop
xor
mov
push
mov
add
add
xchg
pop
and
pushl
pop
add
or
shl
push
mov
jmp
push
mov
add
add
sub
xchg
jmp
xor
pop
sub
pop
pushw
mov
jmp
sub
mov
push
mov
add
push
mov
or
jmp
and
sub
xor
jmp
sub
addl
subl
pop
jmp
xor
mov
pop
jmp
pop
push
push
mov
push
mov
push
mov
jmp
or
not
add
add
jmp
pop
sub
add
push
jmp
lods
sub
mov
jmp
add
or
dec
add
sub
pop
xor
xor
xor
pop
mov
movzbw
push
pushf
jmp
push
mov
addl
jmp
push
mov
add
pop
mov
pushl
pop
add
jmp
add
add
sub
jmp
xor
shr
xor
mov
pop
sub
shr
add
xor
add
pop
xor
push
mov
add
sub
dec
not
xor
or
pop
jmp
mov
mov
add
add
jmp
pop
sub
pop
jmp
push
mov
not
push
xchg
neg
xchg
mov
jmp
mov
shr
neg
add
add
pop
push
mov
jmp
mov
dec
dec
push
mov
and
pop
or
jmp
pushl
popf
pop
rcrb
pushf
jmp
sub
mov
push
pop
add
sub
mov
mov
jmp
pop
sub
add
jmp
push
mov
mov
pop
xor
shl
xor
or
jmp
mov
push
mov
add
add
add
jmp
add
add
mov
jmp
dec
add
sub
pop
neg
xor
sub
pop
shr
xor
push
mov
add
pop
add
add
push
mov
add
neg
push
jmp
lods
push
push
jmp
add
push
mov
jmp
push
mov
add
pop
pop
sub
jmp
add
add
xchg
pop
and
pop
or
je
push
push
jmp
pop
push
mov
add
push
mov
sub
pop
jmp
push
mov
or
pop
sub
add
pop
sub
jmp
sub
xor
xchg
not
jmp
mov
add
pop
xor
xor
xor
mov
test
pushf
jmp
push
mov
add
sub
push
pushl
jmp
or
dec
xor
jmp
mov
push
mov
add
add
xchg
jmp
mov
mov
shl
jmp
add
pop
add
sub
add
add
pop
pop
sub
add
pop
push
push
jmp
mov
push
mov
mov
pop
pop
dec
inc
jmp
xor
pop
sub
mov
jmp
pop
push
mov
mov
add
push
mov
mov
jmp
lods
xor
push
mov
jmp
dec
add
add
add
sub
pop
and
pushl
jmp
sub
add
add
jmp
xorl
mov
add
push
push
push
jmp
push
mov
xor
pop
add
and
pushl
pop
jmp
mov
add
sub
xchg
pop
mov
jmp
pushl
pop
popl
pop
add
sub
xchg
mov
jmp
add
sub
xor
xor
xor
pop
jmp
pop
add
mov
add
push
push
push
pop
jmp
push
mov
sub
xor
jmp
pop
shr
shl
shl
jmp
push
mov
add
dec
sub
push
jmp
mov
mov
add
sub
sub
pop
jmp
pop
push
mov
jmp
push
pop
add
add
jmp
xor
sub
or
jmp
mov
push
jmp
mov
mov
add
add
jmp
push
mov
add
pop
mov
pop
push
sub
jmp
mov
add
sub
xchg
pop
mov
jmp
add
pop
push
mov
push
mov
mov
mov
jmp
add
push
mov
mov
push
mov
jmp
pop
add
add
pop
jmp
add
pop
xor
xor
jmp
shl
and
add
sub
pop
xchg
mov
mov
jmp
sub
add
add
mov
jmp
mov
sub
xchg
jmp
pop
push
push
mov
push
push
mov
mov
jmp
add
push
mov
mov
pop
pop
xor
sub
jmp
pop
xor
jmp
and
pop
add
push
jmp
push
pushl
mov
jmp
not
shl
shr
push
jmp
add
push
pushl
pushl
jmp
pop
push
sub
jmp
mov
push
jmp
pop
add
pop
sub
jmp
mov
push
pop
push
push
mov
jmp
mov
sub
mov
add
xchg
mov
mov
push
jmp
xchg
pop
push
mov
add
add
xchg
pop
movzwl
push
mov
jmp
mov
mov
mov
jmp
xchg
pop
mov
jmp
push
mov
neg
and
jmp
pop
push
mov
mov
inc
shr
xor
shr
add
xor
add
pop
add
sub
pop
push
mov
jmp
mov
xor
pop
xor
jmp
mov
push
jmp
mov
pushl
pop
add
pushl
pop
push
mov
jmp
mov
and
pushf
jmp
push
push
pop
push
mov
mov
jmp
not
inc
sub
sub
add
add
pop
add
xchg
pop
add
xchg
pop
pushl
mov
jmp
xchg
push
notl
pop
jmp
addl
mov
add
sub
pop
sub
mov
add
add
add
push
mov
jmp
mov
add
sub
mov
push
pop
add
pushl
jmp
push
mov
mov
pop
push
mov
jmp
pop
mov
mov
push
jmp
subl
pop
add
pop
jmp
add
sub
add
add
sub
mov
mov
not
jmp
or
add
sub
jmp
mov
push
pop
push
mov
mov
jmp
pop
inc
xor
jmp
pop
popl
mov
mov
push
jmp
mov
xor
mov
pop
mov
xor
pop
push
jmp
lods
xor
push
mov
jmp
mov
push
jmp
push
push
mov
add
push
mov
jmp
mov
add
add
xchg
jmp
or
pop
add
xor
xor
pop
mov
pop
add
mov
add
push
mov
jmp
add
sub
xor
xor
xor
pop
mov
jmp
add
add
xchg
mov
jmp
sub
sub
pop
add
jmp
mov
mov
pop
jmp
mov
push
mov
jmp
and
xor
not
push
jmp
mov
push
pop
sub
mov
mov
add
pop
jmp
pop
push
mov
add
sub
xchg
pop
mov
jmp
push
sub
mov
mov
push
mov
jmp
add
add
add
jmp
pushl
pushl
jmp
push
push
pop
neg
sub
mov
jmp
mov
mov
add
push
push
push
jmp
mov
pop
sub
add
add
pop
xchg
pop
shr
xor
push
push
jmp
push
mov
inc
jmp
push
mov
push
mov
shr
add
jmp
xor
xor
mov
imul
movzbw
pushw
mov
jmp
push
mov
or
inc
xor
mov
jmp
mov
pop
sub
pop
sub
sub
mov
mov
jmp
sub
add
mov
add
add
pop
add
xor
xor
xor
mov
idiv
push
mov
jmp
add
sub
sub
shr
push
mov
jmp
mov
push
jmp
push
pop
push
push
mov
add
jmp
mov
push
jmp
mov
mov
add
pop
or
push
mov
add
jmp
xchg
pop
sub
jmp
pop
mov
pushl
pop
add
mov
add
push
mov
jmp
not
xchg
push
push
mov
mov
mov
add
jmp
mov
add
not
shl
dec
push
mov
and
add
add
pop
add
sub
sub
sub
push
mov
add
add
pop
add
jmp
pushl
pop
popl
mov
jmp
add
add
push
pushl
pop
popl
mov
or
jne
mov
push
jmp
push
pop
add
push
mov
push
jmp
mov
sub
pop
sub
pop
sub
push
mov
not
shl
push
mov
xor
pop
not
add
add
add
pop
pop
push
mov
jmp
add
push
mov
add
sub
sub
pop
mov
add
push
pushl
pop
popl
pop
or
shl
push
mov
jmp
mov
push
push
mov
push
mov
jmp
dec
push
mov
sub
pushl
pop
add
sub
jmp
add
and
or
dec
jmp
push
mov
mov
shr
inc
not
jmp
xor
mov
pop
add
mov
push
mov
add
jmp
add
pop
sub
xchg
pop
mov
mov
push
jmp
add
push
push
mov
or
xchg
jmp
push
mov
mov
jmp
mov
push
jmp
mov
push
mov
add
add
xchg
pop
sub
add
add
pop
jmp
add
pop
sub
xchg
pop
mov
push
pop
jmp
pop
sub
push
jmp
pop
jmp
mov
add
sub
xchg
mov
mov
jmp
sub
mov
push
mov
subl
add
jmp
pop
pushl
pop
add
jmp
mov
sub
pop
pop
push
mov
push
mov
add
sub
and
xor
sub
pop
add
add
pop
xchg
pop
rolb
pushf
jmp
lods
xor
push
mov
jmp
mov
mov
push
mov
neg
push
jmp
mov
and
sub
jmp
mov
push
mov
mov
push
mov
jmp
add
add
xchg
mov
jmp
push
mov
not
add
jmp
mov
mov
add
push
mov
push
jmp
pop
push
mov
and
push
mov
xor
sub
jmp
push
mov
sub
jmp
mov
btc
pushf
jmp
mov
push
jmp
not
xchg
neg
add
neg
push
mov
add
jmp
xchg
pop
push
mov
add
pop
push
sub
jmp
sub
pop
shl
shr
xor
add
xor
add
mov
add
xor
xor
xor
pop
btr
pushf
jmp
sub
add
add
pop
sub
push
push
push
jmp
add
sub
mov
mov
push
mov
jmp
push
pushl
pop
popl
pop
push
mov
pop
pop
sub
mov
jmp
sub
mov
addl
mov
push
mov
jmp
sub
mov
mov
add
add
push
pushl
pop
popl
pop
jmp
sub
mov
mov
mov
pop
mov
add
add
mov
add
sub
mov
jmp
lods
push
mov
jmp
xor
add
pop
jmp
movzbw
push
push
jmp
pushl
mov
add
jmp
mov
mov
pop
pop
mov
pop
mov
pop
jmp
movzbw
push
pushf
jmp
sub
sub
push
mov
dec
add
sub
pushl
pop
add
jmp
mov
add
pop
jmp
xor
xor
pop
movzbw
sub
mov
jmp
mov
shl
xor
sub
add
add
pop
push
jmp
mov
decw
pushf
jmp
xor
pop
mov
pushl
jmp
add
sub
sub
jmp
xchg
pop
sub
mov
mov
add
add
xor
xor
xor
pop
jmp
add
mov
push
mov
jmp
push
push
mov
add
xor
push
jmp
add
add
sub
sub
push
mov
add
pop
push
mov
shr
inc
xor
sub
pop
pop
push
push
jmp
sub
sub
push
mov
jmp
mov
push
jmp
lods
push
mov
jmp
mov
and
pushl
mov
add
push
jmp
and
pop
neg
neg
jmp
pop
sub
mov
mov
push
mov
jmp
sub
mov
pop
mov
jmp
mov
add
xor
add
pop
xchg
pop
add
add
jmp
mov
xor
dec
dec
dec
dec
sub
mov
pop
sub
pop
sub
add
add
add
mov
add
movzbl
pushl
push
push
jmp
mov
sub
mov
push
mov
add
jmp
xchg
pop
mov
pushl
jmp
pop
and
sub
and
pushl
pop
push
mov
add
add
xchg
pop
or
je
pushl
push
jmp
push
mov
add
push
mov
add
pop
push
jmp
pop
pop
sub
mov
push
push
mov
sub
jmp
mov
push
pop
push
mov
xchg
jmp
mov
push
push
mov
mov
mov
jmp
xor
mov
push
mov
jmp
push
push
mov
push
push
mov
jmp
mov
add
push
jmp
movzbw
pushw
mov
jmp
push
mov
add
sub
mov
push
jmp
add
add
sub
sub
add
sub
pop
push
mov
jmp
mov
add
pop
sub
mov
mov
jmp
mov
add
pop
jmp
mov
and
pop
push
mov
xor
mov
push
mov
push
mov
dec
add
add
pop
add
xchg
pop
push
mov
shr
jmp
mov
inc
add
sub
pop
add
jmp
push
push
mov
mov
add
pop
sub
pop
jmp
pop
or
add
mov
pop
add
mov
push
jmp
mov
add
mov
push
mov
push
jmp
mov
push
jmp
pushl
pop
popl
pop
sub
sub
mov
add
add
add
movzbl
pushw
mov
jmp
sub
xchg
pop
jmp
sub
mov
jmp
pop
xor
mov
pop
jmp
pop
and
mov
push
mov
mov
jmp
pop
add
push
mov
add
push
jmp
mov
push
jmp
push
pop
push
push
pop
not
not
push
jmp
mov
add
push
mov
jmp
add
or
xor
jmp
push
mov
neg
push
mov
xor
pop
mov
pop
xor
add
sub
mov
add
sub
pushl
pop
add
xor
sub
mov
jmp
push
pop
push
mov
push
push
jmp
mov
push
jmp
mov
add
pop
xor
jmp
mov
add
dec
jmp
mov
mov
jmp
add
pop
add
push
pushl
pop
popl
pop
jmp
add
push
mov
push
mov
sub
mov
pop
jmp
or
xor
xor
sub
sub
add
jmp
xchg
not
xchg
jmp
push
mov
add
jmp
pushl
popf
pop
rclb
pushf
jmp
sub
mov
mov
mov
sub
sub
jmp
pop
push
mov
xor
shl
shl
dec
add
jmp
lods
push
mov
jmp
mov
push
jmp
xor
and
pushl
pop
push
mov
push
mov
jmp
pop
sub
mov
add
add
push
mov
add
add
push
mov
sub
pop
mov
add
movzbw
pushw
mov
jmp
mov
push
mov
jmp
mov
add
imul
push
push
jmp
add
add
push
jmp
mov
add
add
jmp
pop
or
shr
neg
push
mov
sub
mov
jmp
and
and
push
mov
jmp
pop
add
add
mov
jmp
xor
xor
xor
pop
jmp
push
push
pop
sub
sub
mov
mov
add
jmp
jmp
mov
mov
push
push
mov
not
jmp
push
mov
mov
shr
inc
sub
xor
push
jmp
push
pop
shl
and
jmp
not
xchg
mov
push
push
pop
add
add
jmp
mov
add
sub
mov
push
push
mov
or
jmp
push
push
jmp
xchg
pop
mov
sub
jmp
mov
push
jmp
add
add
push
pop
pop
and
mov
push
mov
push
pop
add
add
xchg
pop
or
shl
push
mov
jmp
add
sub
xchg
pop
mov
mov
jmp
xchg
pop
push
pushl
jmp
neg
push
mov
jmp
mov
add
sub
push
jmp
popl
jmp
pop
add
add
add
sub
sub
jmp
push
mov
push
push
mov
and
jmp
popl
mov
pushl
pop
jmp
add
mov
pop
shl
jmp
mov
add
sub
xchg
pop
mov
jmp
lods
push
mov
jmp
push
pop
mov
pop
pop
push
mov
and
jmp
sub
mov
mov
add
jmp
pop
shl
push
mov
dec
xor
xor
sub
pop
sub
sub
add
pop
sub
add
add
pop
ret
jmp
mov
add
add
add
sub
push
push
mov
mov
sub
pop
sub
pop
add
jmp
pop
not
push
jmp
mov
xor
mov
add
jmp
mov
push
jmp
push
mov
addl
pop
push
mov
xor
xor
jmp
mov
mov
sub
pop
jmp
sub
add
inc
xor
jmp
jmp
pop
push
push
mov
mov
pushl
jmp
mov
push
jmp
push
push
mov
add
sub
xchg
pop
mov
jmp
mov
shl
sub
jmp
add
push
mov
and
jmp
add
sub
pushl
mov
add
push
mov
add
push
mov
add
pop
push
pushl
pop
popl
pop
push
push
jmp
push
mov
mov
pop
push
push
jmp
mov
push
jmp
push
mov
mov
push
mov
shl
jmp
mov
sub
and
jmp
push
mov
or
jmp
mov
pop
pop
jmp
sub
pop
push
jmp
add
shl
sub
jmp
push
mov
jmp
shl
add
sub
jmp
lods
push
mov
jmp
pop
add
add
jmp
neg
neg
push
mov
shr
and
add
sub
jmp
mov
or
xor
add
pop
pushl
pop
add
sub
mov
jmp
mov
mov
add
mov
add
xchg
pop
add
pushf
jmp
push
mov
add
pop
jmp
or
push
mov
xor
jmp
mov
and
add
and
pushl
pushl
jmp
sub
sub
sub
jmp
mov
pop
inc
xor
jmp
push
mov
mov
add
pop
xor
xor
xor
jmp
push
mov
push
push
mov
neg
jmp
pop
add
pushl
jmp
sub
sub
add
add
pop
sub
sub
mov
jmp
mov
inc
not
push
mov
sub
jmp
push
mov
add
jmp
add
add
push
mov
jmp
mov
add
pop
xor
jmp
sub
and
push
jmp
sub
pop
jmp
mov
add
popl
pop
sarw
pushf
jmp
add
pop
sub
add
jmp
shll
jmp
pop
sub
mov
jmp
add
xchg
pop
pushl
jmp
xor
pushl
pop
push
mov
add
push
mov
add
pop
xchg
pop
push
mov
jmp
pop
add
add
jmp
pushl
mov
add
add
push
push
jmp
sub
mov
mov
push
push
mov
jmp
add
push
sub
mov
mov
mov
jmp
add
push
mov
sub
pop
pushl
subl
pop
add
pop
push
mov
jmp
push
push
pop
add
sub
xchg
jmp
xor
xor
xor
mov
jmp
shr
push
jmp
sub
pop
pushw
mov
jmp
mov
addl
pop
push
mov
push
jmp
mov
push
mov
xor
mov
mov
add
neg
sub
not
or
sub
sub
sub
pop
sub
pop
sub
jmp
xchg
not
push
mov
mov
mov
mov
add
jmp
mov
sub
mov
push
push
mov
jmp
mov
push
jmp
sub
add
pop
add
jmp
pop
add
push
pushl
pop
popl
pop
sub
push
mov
add
mov
add
movzbl
mov
push
jmp
add
sub
xchg
pop
mov
mov
xor
add
jmp
mov
push
push
mov
xor
push
jmp
push
push
pop
xor
jmp
mov
push
mov
shr
add
add
jmp
pop
popl
mov
mov
sub
jmp
xor
xor
pop
sub
mov
jmp
push
mov
add
add
sub
mov
jmp
pop
xor
pop
jmp
mov
mov
push
mov
sub
pop
sub
mov
add
add
and
mov
add
shr
xor
xor
xor
jmp
pop
push
mov
pop
pop
sub
mov
add
jmp
mov
add
push
mov
jmp
add
add
add
jmp
add
or
push
mov
push
pop
xor
pop
jmp
mov
or
dec
inc
push
mov
jmp
pushl
pop
add
add
sub
mov
jmp
push
mov
mov
pop
and
sub
jmp
sub
xor
dec
jmp
mov
mov
sub
mov
jmp
pushl
mov
add
jmp
mov
push
mov
and
pop
not
xor
and
pop
dec
sub
mov
notb
pop
add
xor
pop
xor
movzbl
lea
push
mov
jmp
sub
pop
xchg
mov
mov
mov
and
mov
add
shr
push
mov
jmp
mov
mov
dec
sub
mov
mov
jmp
pop
dec
sub
jmp
shl
xor
push
jmp
push
pushl
mov
jmp
xor
movzbl
popl
jmp
mov
add
add
xchg
jmp
sub
mov
mov
inc
xor
and
jmp
mov
push
mov
push
mov
push
jmp
add
mov
pop
pop
push
mov
jmp
add
pop
mov
push
jmp
add
shr
sub
jmp
sub
pop
add
push
push
mov
jmp
sub
pop
mov
add
movzbl
mov
push
jmp
xor
mov
pop
jmp
and
pop
or
je
pushl
push
jmp
not
dec
sub
jmp
mov
xor
push
mov
mov
pop
pop
add
jmp
add
pop
push
mov
add
mov
add
xchg
pop
push
mov
jmp
mov
push
mov
push
mov
add
pop
add
jmp
pushl
popf
pop
rcrl
pushf
jmp
mov
push
jmp
push
mov
dec
not
xor
sub
mov
mov
jmp
shr
add
xor
mov
jmp
push
mov
shr
shr
add
sub
add
sub
jmp
mov
pop
and
neg
sub
and
xor
or
pop
push
push
push
mov
mov
pop
mov
add
pop
xor
pop
add
jmp
sub
add
mov
add
jmp
push
pop
push
push
push
pop
jmp
add
pop
push
jmp
add
sub
add
add
jmp
push
addl
pop
sub
push
pop
pop
pop
push
mov
jmp
mov
push
pushf
jmp
push
push
pop
jmp
pushl
pushl
jmp
pushl
pop
sub
mov
jmp
add
sub
xchg
pop
mov
push
jmp
mov
add
add
jmp
push
mov
mov
add
mov
add
jmp
mov
push
jmp
pop
push
mov
mov
jmp
dec
or
push
mov
shl
shr
or
shl
jmp
add
mov
pop
sub
mov
push
mov
add
add
xchg
mov
push
mov
jmp
mov
add
push
mov
sub
pop
add
push
jmp
mov
or
pop
push
jmp
mov
mov
push
jmp
push
mov
add
sub
sub
pop
sub
add
mov
add
sub
mov
jmp
push
mov
add
inc
neg
xor
jmp
push
mov
xor
pop
sub
sub
pop
push
jmp
add
add
pop
xchg
pop
push
mov
jmp
mov
push
pop
push
mov
push
jmp
sub
add
add
pop
jmp
sub
push
mov
jmp
not
neg
dec
neg
xor
push
mov
not
jmp
pop
mov
mov
not
push
mov
add
pop
jmp
add
add
xchg
jmp
xchg
mov
xor
pushl
pop
add
push
mov
jmp
add
add
pop
add
jmp
pop
sub
add
add
pop
xchg
mov
mov
sub
jmp
mov
add
pop
xchg
pop
add
xchg
mov
rolw
pushf
jmp
mov
add
sub
xchg
mov
mov
notw
mov
jmp
sub
sub
pop
add
add
mov
add
sub
sub
push
mov
neg
neg
inc
xor
sub
pop
push
mov
jmp
add
xchg
pop
xor
jmp
mov
pop
neg
shr
jmp
shl
or
not
push
mov
shl
sub
add
jmp
push
mov
add
pop
add
xchg
pop
push
jmp
lods
xor
push
push
jmp
shr
and
add
jmp
add
push
mov
jmp
pushl
pop
push
mov
push
mov
add
shr
shr
add
add
add
pop
add
xchg
pop
push
mov
jmp
mov
pop
push
mov
mov
pop
mov
push
jmp
push
push
mov
dec
not
and
jmp
push
mov
mov
pop
or
pushl
jmp
pushl
popf
pop
adc
pushf
jmp
sub
add
add
mov
add
sub
push
push
jmp
mov
xor
pop
not
jmp
mov
pop
pop
add
jmp
mov
shl
dec
push
mov
push
jmp
add
push
mov
mov
sub
add
add
pop
jmp
mov
add
pop
sub
add
jmp
mov
shl
xor
shr
xor
and
add
shr
add
xor
jmp
mov
sub
push
mov
addl
popl
jmp
add
add
xchg
pop
jmp
add
popl
mov
push
mov
jmp
mov
add
sub
mov
jmp
pushl
pop
jmp
xor
xor
xor
mov
mov
push
jmp
pushl
popf
pop
rclw
pushf
jmp
mov
push
jmp
mov
mov
pop
jmp
pop
sub
sub
add
pop
sub
sub
add
push
mov
add
shr
add
add
mov
add
sub
mov
jmp
add
pop
push
sub
jmp
mov
add
push
mov
add
pushl
jmp
mov
add
add
add
xchg
mov
push
push
jmp
popl
mov
bt
pushf
jmp
jmp
mov
mov
mov
jmp
xor
xor
push
mov
jmp
pop
push
push
mov
sub
dec
inc
sub
jmp
mov
sub
mov
pop
sub
sub
add
mov
jmp
pop
add
add
add
jmp
sub
add
pop
mov
jmp
xor
add
mov
jmp
pop
add
add
jmp
push
mov
sub
push
jmp
xchg
mov
push
pushl
pop
popl
pop
mov
push
jmp
mov
pop
push
mov
add
pop
sub
sub
jmp
mov
push
push
popl
addl
mov
jmp
add
sub
pop
add
sub
push
mov
shl
sub
sub
mov
add
push
mov
sub
sub
add
mov
add
push
push
jmp
pop
add
add
jmp
pop
add
pushl
mov
push
mov
add
add
xchg
pop
add
push
mov
jmp
pop
add
push
jmp
pop
pop
add
pop
jmp
sub
mov
add
jmp
pop
push
mov
jmp
add
add
push
pushl
jmp
push
sub
mov
mov
shr
xor
or
sub
jmp
mov
add
sub
mov
push
pop
jmp
jmp
add
push
subl
jmp
xor
pushl
pop
jmp
push
mov
mov
sub
jmp
sub
mov
jmp
add
push
mov
mov
push
mov
jmp
addl
subl
mov
jmp
push
mov
sub
pop
sub
push
jmp
push
pop
pop
push
mov
xchg
jmp
shr
xor
push
jmp
sub
pop
add
jmp
mov
add
add
xor
xor
xor
pop
or
jne
push
mov
jmp
xor
push
notl
jmp
mov
push
mov
not
push
mov
jmp
sub
pop
addl
jmp
pushl
pop
push
mov
add
add
jmp
mov
mov
mov
mov
jmp
push
mov
add
pop
jmp
push
pop
sub
jmp
mov
add
sub
xchg
pop
mov
jmp
push
mov
add
pop
push
mov
jmp
mov
add
add
xchg
jmp
add
xchg
pop
sub
mov
mov
add
pop
xor
sub
add
add
pop
sub
mov
jmp
add
add
pop
sub
add
add
sub
pop
add
pop
xor
xor
xor
pop
or
shl
sub
mov
jmp
push
mov
push
mov
shr
shl
jmp
popl
mov
incb
pushf
jmp
negl
pushf
jmp
mov
sub
pop
jmp
add
push
mov
shr
shl
xor
jmp
mov
push
mov
push
mov
add
jmp
shr
push
push
jmp
mov
add
add
push
mov
push
mov
sub
jmp
mov
push
mov
jmp
xchg
not
jmp
mov
push
pop
add
sub
mov
jmp
mov
push
push
mov
not
shl
jmp
add
mov
add
xchg
dec
push
push
pop
jmp
sub
pop
add
xor
xor
xor
mov
shll
pushf
jmp
mov
pop
pop
add
jmp
mov
add
push
mov
dec
xchg
jmp
push
mov
add
shl
sub
add
pop
push
jmp
sub
mov
mov
jmp
push
mov
add
jmp
mov
push
mov
or
jmp
push
mov
pushl
pop
jmp
pop
add
add
push
mov
or
push
push
jmp
neg
inc
and
not
add
add
pop
sub
pop
add
jmp
pushw
mov
add
popw
push
mov
jmp
add
and
push
mov
shr
shl
shr
push
mov
add
pop
sub
pop
xor
pop
sub
sub
add
mov
add
pushw
mov
jmp
push
mov
mov
or
xor
and
jmp
neg
sub
mov
pop
shl
and
add
dec
jmp
mov
shr
dec
shr
jmp
mov
not
jmp
xchg
pop
movsbw
pushw
mov
jmp
xor
neg
neg
neg
sub
sub
sub
add
add
pop
add
xor
xor
xor
pop
test
pushf
jmp
mov
sub
mov
mov
add
sub
jmp
mov
mov
add
jmp
add
add
pushl
pop
jmp
add
xchg
mov
jmp
mov
pushl
pushl
pop
jmp
mov
mov
add
push
mov
push
jmp
pop
add
push
mov
push
mov
jmp
pop
add
push
pop
mov
add
and
mov
add
shr
push
mov
jmp
push
pushf
jmp
pop
xor
push
mov
jmp
pop
xchg
pop
add
idiv
push
mov
jmp
or
xor
jmp
pushl
pop
jmp
mov
mov
pop
mov
mov
push
jmp
add
pop
pop
add
xchg
mov
mov
push
jmp
pop
push
mov
push
mov
mov
sub
pop
jmp
xor
sub
pop
jmp
dec
sub
add
jmp
add
pop
pushl
jmp
mov
push
jmp
push
mov
inc
or
xor
mov
jmp
pop
sub
pop
mov
jmp
pop
push
subl
pop
add
mov
add
pop
mov
pop
push
mov
jmp
popl
jmp
add
pop
push
mov
pushl
pop
popl
mov
btc
pushf
jmp
add
sub
add
pop
jmp
add
add
sub
sub
push
mov
inc
or
jmp
add
sub
mov
pushl
pop
add
push
mov
jmp
mov
shr
push
mov
and
mov
jmp
mov
push
popl
addl
mov
push
mov
add
jmp
pop
addl
subl
jmp
mov
push
mov
jmp
push
mov
push
mov
add
add
jmp
xor
pop
push
jmp
dec
sub
sub
sub
sub
pop
sub
push
jmp
mov
mov
shr
xor
xor
mov
jmp
xor
xor
xor
pop
jmp
sub
mov
pop
sub
pop
pop
push
mov
jmp
push
mov
or
xor
jmp
pop
pop
and
jmp
pop
add
add
add
jmp
mov
pop
pop
jmp
pushl
pop
add
xchg
jmp
mov
add
sub
xchg
pop
mov
jmp
push
mov
xor
pop
add
pop
add
push
mov
pushl
pop
popl
mov
shlb
pushf
jmp
xor
pop
push
jmp
pop
push
mov
push
mov
add
mov
pop
pop
mov
add
xor
push
mov
jmp
mov
pop
xor
xor
jmp
mov
mov
pop
jmp
add
add
sub
add
jmp
add
xchg
pop
jmp
sub
pop
push
mov
sub
mov
mov
push
jmp
or
dec
and
xor
xor
sub
push
mov
jmp
push
mov
mov
mov
add
add
pop
push
jmp
popl
mov
jmp
pushl
pop
add
jmp
mov
sub
pop
sub
sub
sub
push
mov
jmp
pop
mov
mov
push
pushl
pop
push
mov
jmp
pop
add
add
sub
jmp
mov
push
mov
add
add
xchg
pop
push
jmp
add
popl
mov
bswap
push
mov
jmp
mov
sub
mov
mov
neg
and
jmp
xor
xor
add
jmp
mov
mov
add
mov
add
add
push
mov
jmp
mov
add
std
push
mov
jmp
push
push
jmp
push
mov
mov
jmp
add
pop
sub
jmp
push
push
pop
jmp
push
mov
add
pop
sub
xor
jmp
push
mov
add
and
sub
dec
not
add
xor
mov
add
add
xor
mov
add
xor
movzbl
pushl
mov
jmp
add
push
mov
inc
dec
shr
push
mov
jmp
mov
push
mov
add
push
mov
jmp
add
push
mov
add
sub
xchg
jmp
sub
mov
pop
shl
push
mov
add
and
jmp
add
jmp
mov
mov
push
mov
xor
and
jmp
push
mov
mov
mov
add
push
jmp
addl
mov
push
push
pop
add
add
xchg
jmp
sub
and
neg
sub
sub
pop
sub
add
jmp
and
sub
mov
jmp
xor
xor
pop
add
pop
xor
xor
xor
mov
sub
pushf
jmp
add
sub
pushl
jmp
mov
add
sub
xchg
pop
mov
jmp
not
sub
mov
pop
jmp
pop
sub
pop
sub
addl
addl
mov
add
sub
push
mov
subl
add
addl
pop
jmp
push
push
jmp
inc
xchg
inc
push
sub
mov
jmp
pop
mov
pop
mov
mov
add
push
mov
jmp
mov
pop
mov
pop
jmp
mov
add
add
jmp
pop
add
add
xor
xor
xor
pop
movzbl
push
mov
jmp
pop
pop
add
jmp
mov
xchg
not
jmp
add
mov
add
push
mov
push
mov
sub
jmp
and
shl
or
jmp
popl
not
xchg
mov
jmp
push
mov
inc
jmp
push
push
push
mov
mov
pop
sub
xor
jmp
sub
mov
push
mov
add
pop
pop
push
jmp
push
push
pop
push
mov
sub
jmp
pop
xor
xor
xor
mov
mov
push
jmp
movzbw
push
pushf
jmp
pop
add
pop
sub
mov
jmp
xor
xor
xor
mov
mov
push
jmp
pushl
pop
add
xchg
jmp
mov
sub
mov
jmp
mov
sub
pushl
pop
add
push
push
jmp
add
add
sub
pop
xchg
pop
jmp
pushl
push
jmp
add
sub
xchg
pop
mov
push
jmp
mov
push
jmp
sub
not
neg
jmp
lods
push
mov
jmp
add
xor
add
jmp
add
add
mov
add
push
mov
shl
push
jmp
pop
pop
not
jmp
sub
push
mov
sub
pop
push
mov
add
pop
push
mov
jmp
xchg
mov
add
push
jmp
push
mov
add
add
xchg
pop
add
add
jmp
xor
pop
add
pushl
pop
add
push
pushl
pop
popl
mov
mul
push
mov
jmp
pop
add
mov
add
jmp
jmp
neg
dec
neg
shl
sub
sub
and
pop
sub
or
pop
sub
add
add
sub
add
add
sub
pop
add
sub
jmp
mov
add
push
jmp
pop
not
sub
jmp
mov
push
jmp
add
pop
add
pushl
jmp
mov
add
xor
jmp
mov
push
pop
push
mov
push
jmp
mov
xor
pop
mov
pop
push
notl
mov
jmp
mov
neg
inc
shr
add
push
mov
mov
xor
xor
pushl
pop
add
add
pop
xchg
mov
mov
jmp
mov
add
pop
jmp
sub
mov
mov
add
add
push
pushl
pop
popl
pop
movsbl
push
mov
jmp
mov
or
or
and
inc
inc
xor
add
pop
sub
add
push
mov
add
inc
xor
add
pop
mov
add
sub
jmp
jmp
push
mov
add
add
xchg
pop
jmp
push
push
pop
sub
mov
mov
jmp
mov
add
add
sub
xor
xor
jmp
xchg
pop
sub
sub
jmp
mov
pop
add
mov
push
mov
add
sub
xchg
pop
mov
mov
add
add
xchg
pop
xchg
mov
mov
push
jmp
mov
push
pop
push
mov
sub
jmp
push
mov
mov
pop
and
mov
jmp
xor
pop
mov
jmp
mov
pop
push
push
mov
mov
pop
mov
jmp
shl
push
mov
mov
inc
push
mov
add
jmp
xchg
push
jmp
add
xchg
pop
add
sub
mov
mov
add
jmp
push
mov
mov
sub
pop
add
add
sub
pop
xor
pop
xor
mov
add
push
push
jmp
pushl
pop
push
mov
add
add
xchg
pop
push
mov
jmp
pop
add
push
mov
mov
add
mov
push
jmp
add
xchg
pop
sub
push
push
jmp
shl
or
xor
jmp
add
push
mov
and
jmp
add
sub
xchg
pop
mov
push
jmp
pushl
sub
mov
push
mov
mov
mov
sub
jmp
lods
add
sub
jmp
xchg
pop
sub
jmp
sub
mov
add
jmp
add
sub
pop
add
jmp
add
mov
push
mov
jmp
add
add
xor
xor
xor
pop
push
mov
jmp
sub
push
pushl
mov
add
popl
pop
mov
jmp
push
mov
xor
pushl
mov
add
jmp
add
sub
mov
pushl
jmp
popl
pushl
pop
jmp
mov
dec
add
jmp
push
push
pop
add
dec
not
jmp
mov
add
pushl
pop
sub
mov
jmp
push
mov
not
shr
jmp
push
mov
xor
add
pop
mov
push
mov
jmp
add
sub
push
mov
jmp
pop
push
push
mov
mov
pop
mov
pop
pop
sub
pop
sub
add
add
pop
xor
pop
push
mov
jmp
push
pop
push
mov
sub
or
jmp
add
add
xchg
mov
jmp
jmp
push
mov
add
pop
jmp
add
add
xchg
pop
jmp
pop
add
push
mov
push
mov
jmp
add
add
pushl
pushl
mov
add
push
mov
jmp
mov
push
jmp
push
mov
push
subl
pop
push
jmp
add
mov
pushl
pop
jmp
sub
push
jmp
sub
pop
add
jmp
sub
add
sub
pop
and
mov
add
add
xor
add
pop
push
mov
sub
pop
xchg
mov
mov
jmp
mov
add
push
jmp
and
dec
and
jmp
push
push
pop
jmp
mov
mov
add
pop
xchg
pop
or
je
pushl
pushl
jmp
pop
pop
push
mov
sub
not
inc
add
jmp
sub
sub
pop
push
jmp
addl
push
mov
add
pop
jmp
mov
add
add
push
jmp
add
xchg
mov
pushl
mov
add
push
push
jmp
mov
neg
push
push
mov
mov
add
sub
jmp
mov
xchg
not
xchg
inc
not
xor
shr
jmp
mov
add
pop
sub
pop
sub
sub
add
pop
xor
push
mov
jmp
mov
add
push
mov
sub
add
add
mov
jmp
add
mov
add
xchg
pop
rorw
pushf
jmp
push
mov
pushl
pop
popl
mov
sarl
pushf
jmp
push
mov
sub
xchg
pop
sub
sub
xor
jmp
pushl
pushl
jmp
push
pushl
pop
push
mov
add
add
xchg
jmp
pushl
jmp
pop
push
mov
mov
add
add
push
pushl
pop
popl
pop
push
push
jmp
pop
push
mov
jmp
and
push
mov
jmp
notb
pop
push
jmp
xor
xor
xor
mov
jmp
dec
and
inc
xor
sub
mov
pop
neg
jmp
add
push
mov
neg
jmp
pushw
jmp
mov
xor
pop
jmp
mov
mov
push
mov
sub
add
jmp
mov
add
pop
xor
jmp
mov
add
pop
push
mov
neg
sub
add
jmp
pop
push
push
jmp
sub
pop
add
jmp
xor
push
mov
sub
sub
add
pop
and
pop
shr
xor
sub
mov
jmp
xchg
not
xchg
pushl
mov
add
jmp
mov
add
push
mov
jmp
mov
push
push
mov
mov
pop
jmp
sub
push
mov
sub
jmp
mov
add
add
and
mov
push
mov
add
add
xchg
pop
shr
push
mov
jmp
mov
add
pop
add
jmp
sub
add
sub
or
jmp
push
mov
add
mov
push
mov
push
mov
jmp
mov
sub
pop
jmp
mov
push
jmp
push
mov
sub
mov
jmp
push
mov
xor
jmp
pop
add
sub
sub
jmp
mov
push
mov
push
push
mov
neg
sub
jmp
push
push
mov
xor
neg
push
mov
add
jmp
mov
add
add
add
pushl
mov
jmp
add
push
mov
add
jmp
sub
dec
or
add
jmp
mov
push
jmp
mov
push
mov
push
xchg
not
jmp
shr
not
add
jmp
shl
add
add
pop
jmp
xchg
pop
pushl
pushl
jmp
sub
xor
pop
neg
sub
mov
mov
sub
add
add
pop
dec
push
mov
xor
pop
xor
xor
pop
and
pop
jmp
mov
add
push
mov
push
pop
add
sub
jmp
mov
push
mov
or
xor
sub
jmp
push
mov
add
jmp
mov
add
pop
jmp
xor
xor
pop
push
mov
sub
or
pop
jmp
lods
cmpl
je
push
push
jmp
mov
push
mov
shr
and
push
jmp
pop
add
add
jmp
mov
sub
mov
mov
not
add
jmp
xor
push
mov
sub
jmp
mov
add
pop
add
jmp
pop
add
pop
pushl
mov
add
push
push
jmp
push
mov
dec
not
or
push
mov
shl
jmp
push
mov
add
jmp
add
xor
mov
pop
neg
xor
sub
pop
jmp
mov
dec
push
push
pop
mov
jmp
addl
subl
jmp
xchg
mov
mov
jmp
add
sub
xchg
mov
mov
mov
sub
add
jmp
pushl
jmp
push
push
jmp
push
addl
pop
sub
jmp
mov
add
push
mov
push
mov
jmp
push
mov
xor
jmp
sub
pop
add
pop
add
xchg
pop
add
xor
mov
push
mov
add
add
xchg
pop
xor
movzbl
pushl
push
jmp
xor
xor
xor
mov
mov
push
pushf
jmp
push
push
mov
add
mov
pop
jmp
mov
dec
add
mov
pop
mov
mov
add
jmp
add
pop
xor
jmp
pop
xchg
mov
push
mov
jmp
pop
and
mov
push
jmp
add
dec
add
mov
pop
shl
push
mov
add
add
sub
pop
and
pop
or
je
pushl
push
jmp
push
mov
add
push
push
mov
mov
sub
jmp
mov
push
jmp
mov
push
jmp
push
mov
mov
add
mov
add
jmp
sub
add
pop
jmp
add
xchg
pop
jmp
sub
mov
mov
and
add
push
jmp
pop
mov
add
jmp
add
push
mov
not
inc
shl
xor
sub
mov
add
pop
pop
push
mov
jmp
push
push
push
pop
shl
shr
jmp
pop
add
pop
sub
xchg
pop
mov
push
mov
push
mov
add
mov
add
and
mov
add
jmp
xchg
xor
xor
xor
push
sub
mov
add
sub
xor
xor
pushl
pop
add
push
mov
jmp
add
push
mov
pushl
jmp
pop
xchg
mov
jmp
mov
jmp
sub
sub
pop
xchg
jmp
pop
mov
push
pushl
mov
add
add
add
jmp
add
mov
add
jmp
pop
sub
mov
mov
jmp
mov
add
pop
push
jmp
mov
pop
push
xchg
dec
xor
xor
xor
jmp
mov
push
pop
add
jmp
mov
add
add
push
mov
mov
add
pop
jmp
push
sub
jmp
sub
mov
mov
and
push
addl
jmp
add
pop
push
jmp
mov
push
mov
add
pop
pop
push
mov
jmp
pushl
mov
add
push
push
pop
jmp
xor
pop
mov
mov
add
push
mov
jmp
not
inc
or
add
sub
pop
add
add
jmp
sub
mov
mov
or
sub
xchg
jmp
mov
mov
push
push
mov
push
jmp
push
mov
add
and
pushl
mov
jmp
push
mov
push
mov
neg
add
add
dec
jmp
mov
push
jmp
pop
add
xor
not
push
mov
shr
xor
jmp
push
mov
shr
dec
jmp
add
push
mov
sub
pushl
pop
jmp
mov
sub
mov
mov
or
inc
jmp
pop
shl
push
mov
mov
xor
pop
push
mov
xor
add
shl
add
sub
add
add
pop
add
sub
pop
add
jmp
add
xor
pop
jmp
mov
add
sub
jmp
xchg
pop
mov
negl
mov
add
sub
shl
add
sub
pop
xor
xor
xor
pop
mov
jmp
mov
xor
mov
pop
push
mov
push
mov
jmp
neg
sub
shr
xor
jmp
jmp
dec
sub
add
jmp
push
popl
addl
pushl
pop
add
add
add
jmp
mov
mov
sub
mov
push
pop
push
notl
jmp
push
mov
jmp
lods
push
mov
jmp
pop
inc
push
mov
push
mov
add
sub
jmp
mov
pop
and
mov
push
mov
push
mov
jmp
add
sub
xchg
pop
jmp
push
mov
push
mov
mov
pop
pop
pop
add
pop
xor
xor
xor
mov
push
mov
jmp
mov
sub
jmp
add
push
mov
push
incl
pop
add
shl
jmp
popl
mov
shrl
pushf
jmp
sub
add
pop
xchg
pop
push
popl
addl
jmp
shl
add
and
jmp
shl
inc
dec
jmp
sub
mov
jmp
pushw
push
jmp
pushl
mov
add
jmp
lods
push
mov
jmp
mov
mov
push
push
mov
mov
jmp
lods
sub
mov
jmp
mov
push
mov
sub
or
pop
xor
push
jmp
add
pop
xor
xor
xor
pop
sub
xchg
mov
mov
push
push
jmp
xor
add
pop
jmp
push
mov
sub
mov
mov
add
jmp
xchg
sub
sub
add
pop
push
pushl
mov
add
popl
pop
push
mov
jmp
add
mov
add
jmp
mov
mov
and
shr
jmp
sub
mov
mov
jmp
mov
push
mov
jmp
add
pop
push
sub
jmp
mov
pushl
pop
add
jmp
sub
mov
add
sub
push
push
jmp
add
or
sub
and
jmp
sub
not
inc
push
push
mov
mov
pop
jmp
add
push
mov
jmp
mov
push
jmp
pop
push
mov
jmp
mov
sub
pushl
pop
push
push
jmp
push
mov
add
jmp
push
pushl
mov
jmp
subl
subl
sub
addl
addl
mov
add
push
jmp
sub
mov
jmp
mov
sub
jmp
mov
shr
add
jmp
mov
push
mov
sub
sub
add
jmp
sub
mov
pop
add
mov
sub
mov
mov
jmp
add
add
xor
xor
jmp
sub
push
mov
add
or
pop
neg
neg
not
shl
sub
add
pop
sub
mov
add
push
push
jmp
sub
pop
sub
mov
jmp
mov
mov
push
mov
xor
add
jmp
mov
sub
mov
jmp
mov
pop
mov
sub
jmp
add
pop
xchg
pop
jmp
neg
xor
add
pop
jmp
and
pop
shr
or
je
push
pushl
jmp
pop
mov
pop
add
push
mov
mov
dec
jmp
mov
add
add
sub
jmp
add
sub
pop
sub
mov
mov
sub
add
jmp
push
push
mov
add
sub
xchg
jmp
push
mov
sub
sub
pop
add
pop
push
jmp
mov
add
pop
push
jmp
mov
add
xor
pushf
jmp
mov
mov
add
push
mov
sub
jmp
pop
sub
mov
mov
add
add
jmp
add
shl
or
jmp
popl
pop
xchg
jmp
mov
sub
pop
add
jmp
popl
xorl
pop
push
mov
add
xor
mov
add
pop
popa
popf
ret
jmp
mov
xor
pop
sub
jmp
mov
mov
xor
sub
jmp
shr
dec
sub
jmp
add
push
jmp
xchg
pop
xchg
pop
mov
jmp
mov
pop
pushl
pop
jmp
push
mov
and
push
jmp
mov
sub
jmp
push
pop
sub
jmp
xor
sub
pop
sub
mov
mov
or
sub
jmp
shl
push
mov
add
and
pop
dec
xor
add
pop
add
xor
xor
xor
pop
push
mov
jmp
mov
xor
dec
shr
push
push
jmp
pop
sub
jmp
not
add
push
mov
or
sub
shl
or
jmp
dec
or
xor
xor
mov
pop
shl
push
mov
xor
xor
xor
xor
pop
neg
add
add
pop
push
mov
add
jmp
push
mov
push
mov
add
pop
add
xchg
mov
sub
mov
add
and
mov
add
shr
xor
push
mov
jmp
pop
pushl
mov
jmp
add
pop
add
jmp
mov
push
jmp
push
pop
push
mov
shl
xor
jmp
or
push
mov
add
not
sub
or
pop
push
mov
add
pop
mov
mov
add
shl
push
mov
jmp
push
mov
push
mov
mov
push
jmp
add
add
pop
add
push
pushl
pop
popl
pop
xor
jmp
pop
sub
sub
add
pop
push
mov
mov
add
shr
jmp
add
sub
xchg
mov
mov
push
jmp
or
pop
add
mov
jmp
lods
sub
sub
jmp
mov
push
jmp
mov
add
mov
push
mov
add
add
xchg
pop
pop
jmp
add
sub
push
jmp
mov
or
mov
add
xor
sub
xor
push
jmp
add
push
mov
push
mov
sub
xor
add
jmp
push
mov
not
dec
add
xor
pop
add
jmp
mov
not
not
xor
add
pop
xor
pop
jmp
mov
sub
jmp
xor
xor
xor
mov
jmp
push
pushl
pushl
pop
push
mov
add
add
jmp
mov
add
push
mov
or
not
not
inc
jmp
push
mov
push
pop
or
pop
sub
add
pop
push
mov
add
pop
xchg
pop
mov
push
jmp
inc
xor
or
jmp
lods
push
mov
jmp
lods
xor
push
mov
jmp
pushl
pop
push
jmp
or
sub
push
jmp
push
pop
sub
mov
mov
push
jmp
pop
xor
xor
xor
jmp
pushl
pop
jmp
or
xor
add
push
mov
add
pop
push
jmp
mov
push
jmp
mov
mov
add
push
mov
shr
push
mov
jmp
sub
pushl
pop
push
mov
mov
add
add
xchg
pop
sub
add
push
mov
jmp
add
add
xchg
pop
sub
sub
push
mov
jmp
add
popw
jmp
pushl
pop
add
jmp
mov
or
sub
dec
shl
sub
add
pop
jmp
mov
add
push
mov
jmp
mov
pop
xor
mov
jmp
add
add
sub
jmp
mov
push
mov
jmp
sub
pop
dec
jmp
shl
sub
mov
pop
shr
sub
mov
mov
jmp
sub
push
mov
push
mov
xor
pop
add
pop
xor
add
mov
add
sub
mov
jmp
xchg
pop
push
jmp
pushl
pushl
jmp
addl
pop
mov
add
add
push
mov
mov
jmp
add
or
pop
shr
jmp
sub
add
add
jmp
pop
xor
xor
xor
jmp
pop
xor
add
jmp
add
pop
xchg
mov
cmp
pushf
jmp
push
mov
mov
add
pop
pop
add
push
jmp
mov
push
mov
sub
sub
add
jmp
push
mov
add
xor
sub
push
mov
mov
jmp
xchg
pop
popl
mov
shlw
pushf
jmp
push
mov
push
mov
add
pushl
jmp
mov
add
add
xchg
jmp
pushl
popf
pop
sbb
pushf
jmp
xchg
popl
push
mov
add
pop
push
sub
jmp
push
notl
pop
push
mov
and
pop
not
push
mov
xor
mov
add
rep
add
sub
mov
jmp
mov
push
jmp
xor
pop
mov
pop
mov
pop
xor
mov
add
add
sub
add
add
pop
add
xchg
mov
div
push
mov
jmp
mov
push
mov
add
jmp
sub
sub
sub
pop
dec
shl
sub
push
jmp
push
mov
xor
xor
or
shl
jmp
sub
pop
push
mov
jmp
push
mov
sub
pop
add
pop
push
push
jmp
add
add
push
jmp
mov
neg
neg
push
sub
mov
jmp
push
push
mov
push
mov
xor
jmp
push
mov
sub
jmp
mov
sub
xor
add
push
mov
jmp
mov
add
xor
push
push
mov
jmp
mov
add
add
push
mov
sub
jmp
mov
pop
mov
jmp
add
add
pop
add
xor
xor
xor
pop
push
mov
add
add
push
pushl
pop
popl
pop
pushl
pushl
jmp
mov
push
mov
and
push
mov
jmp
lods
sub
pushw
jmp
xor
pop
mov
push
mov
add
add
sub
jmp
mov
sub
jmp
pop
shl
shl
push
jmp
pop
pop
sub
sub
jmp
pop
add
push
jmp
push
mov
push
mov
mov
pop
jmp
push
push
pop
jmp
lods
push
mov
jmp
sub
sub
add
pop
jmp
add
push
mov
add
pop
xor
mov
push
mov
add
add
xchg
pop
push
mov
jmp
and
push
mov
add
sub
xchg
jmp
sub
mov
add
xchg
mov
mov
push
pushf
jmp
add
pushl
mov
add
push
mov
add
add
jmp
add
neg
shl
push
mov
sub
or
xor
xor
pop
or
xor
sub
mov
add
push
mov
jmp
pop
xchg
push
mov
add
pop
and
mov
add
or
je
push
push
jmp
add
push
push
push
pop
neg
dec
xor
jmp
sub
add
sub
add
add
sub
add
mov
jmp
pop
mov
pop
or
jmp
mov
push
mov
jmp
push
pushl
mov
add
popl
pop
jmp
add
or
xor
mov
jmp
mov
pop
pop
jmp
mov
mov
shl
xor
add
sub
push
mov
dec
sub
sub
pop
mov
add
push
push
jmp
mov
add
sub
xchg
pop
mov
jmp
push
mov
mov
push
mov
add
jmp
push
mov
mov
jmp
add
add
pop
jmp
mov
sub
pop
sub
add
mov
add
push
jmp
pop
push
push
mov
add
push
jmp
mov
pop
xor
pop
push
push
subl
mov
jmp
mov
push
jmp
xor
sub
sub
sub
add
add
pop
xor
neg
add
add
pop
xchg
mov
div
push
mov
jmp
xor
pop
jmp
sub
mov
mov
mov
pop
mov
add
push
jmp
add
pop
sub
jmp
pushl
popf
pop
sbb
pushf
jmp
sub
mov
push
pushl
mov
add
jmp
not
add
xor
add
pop
mov
mov
add
jmp
add
add
xchg
pop
jmp
pop
mov
pop
shl
jmp
pop
sub
pop
jmp
add
sub
add
add
jmp
push
mov
and
add
neg
and
jmp
push
mov
jmp
add
sub
mov
jmp
xor
xor
xor
jmp
push
mov
jmp
push
mov
not
jmp
sub
dec
sub
add
pop
add
pop
push
mov
add
pop
push
pushl
pop
popl
pop
pushl
pushl
jmp
mov
sub
and
pop
push
mov
or
sub
jmp
pop
popl
pop
mov
push
mov
sub
mov
jmp
add
pop
push
jmp
pop
add
push
mov
sub
mov
jmp
mov
add
shl
neg
jmp
mov
sub
mov
sub
mov
mov
jmp
xor
xor
mov
mov
addl
pop
jmp
shr
neg
add
add
jmp
mov
push
jmp
mov
push
mov
xor
not
sub
jmp
pop
push
jmp
mov
sub
pop
sub
add
push
mov
add
jmp
mov
sub
not
add
sub
sub
jmp
push
push
pop
add
neg
sub
add
and
pop
push
mov
mov
neg
shr
shl
sub
xor
pop
sub
add
add
jmp
mov
or
push
jmp
push
mov
push
mov
add
add
jmp
pop
add
mov
add
jmp
add
push
push
mov
push
mov
mov
xor
jmp
not
xchg
add
push
push
mov
add
mov
jmp
sub
mov
pushl
pop
popl
pop
push
mov
jmp
mov
mov
xor
pop
xor
xor
xor
push
jmp
xchg
pop
add
pushl
mov
jmp
push
mov
neg
neg
neg
not
jmp
add
mov
add
jmp
sub
add
add
shr
add
sub
sub
add
pop
xor
xor
xor
pop
mov
jmp
movzbw
push
pushf
jmp
mov
add
sub
sub
jmp
sub
mov
push
mov
push
mov
jmp
push
push
mov
add
push
mov
jmp
sub
sub
pop
sub
pop
add
push
mov
xor
neg
xor
add
pop
push
push
jmp
xchg
inc
xchg
not
add
sub
add
add
jmp
mov
add
pop
xchg
jmp
jmp
movsb
push
pushf
push
push
push
inc
push
xor
cs
insb
add
push
inc
push
dec
xor
cs
insb
add
inc
dec
dec
cs
insb
add
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
or
adc
test
in
cltd
xor
inc
das
mov
popa
mov
loope
jo
xchg
nopl
lods
mov
dec
cmp
pushf
dec
xchg
jae
lcall
jmp
mov
scas
jle
lcall
add
pushf
dec
xchg
rcll
sbb
mov
icebp
mov
into
add
add
fwait
mov
sti
push
adc
imul
lcall
lcall
aaa
inc
add
leave
jnp
mov
dec
push
test
xor
pop
sub
add
lods
pushl
bnd
repnz
sarb
fcomi
call
cmc
aas
xor
js
hlt
mov
stos
mov
fwait
nop
sahf
xchg
mov
pop
xchg
cltd
jmp
xor
xchg
sbb
xchg
in
jo
jb,pn
ficomps
out
gs
mov
or
jmp
jae
add
cwtl
adc
stos
dec
les
rcl
and
dec
arpl
jecxz
cmp
pusha
adc
mov
fs
adc
push
pushf
das
jbe
xor
or
inc
and
into
fcmove
popa
push
push
lar
std
xchg
xchg
in
iret
mov
inc
dec
cmp
shll
les
mov
je
lcall
test
cmp
ss
xchg
or
in
aas
inc
fwait
mov
inc
es
in
sub
mov
sbb
lcall
lcall
push
popf
push
push
adc
outsl
add
adc
ds
lcall
das
xor
and
int
push
dec
inc
push
test
xor
sub
and
adc
xchg
cltd
xor
push
xor
jae
or
add
out
cmp
addl
push
mov
inc
push
aas
fsts
mov
in
xchg
insl
sbb
outsl
je
and
jmp
cli
add
jb
jb
sub
pop
scas
int
push
sti
test
out
data16
inc
adc
push
sarb
jmp
sub
fists
mov
add
inc
fnsave
mov
cwtl
ljmp
or
push
mov
ret
xchg
xchg
pop
dec
icebp
hlt
push
inc
and
add
jae
mov
xchg
xchg
adc
mov
push
fisubl
mov
mov
enter
in
insb
pop
fwait
and
adc
std
dec
and
je
adc
int
mov
fwait
or
cmp
adc
daa
pop
push
mov
test
pusha
out
xchg
jecxz
add
mov
subb
or
add
ljmp
sbb
cs
dec
pop
xorb
jbe
rclb
cmp
sub
push
mov
mov
xchg
xchg
adc
inc
or
xchg
xchg
std
pop
or
lcall
add
push
sub
rcll
fsts
lcall
imul
xchg
jb
mov
mov
adc
mov
ss
hlt
jae
cmp
push
xchg
in
sbb
call
xchg
mov
in
mov
dec
cmp
xor
stos
mov
cltd
xchg
adc
cltd
xchg
pop
fldenv
lahf
mov
je
mov
outsl
fcmove
push
pop
fdiv
jecxz
bound
int
shlb
cmc
cmp
addb
sbb
aas
das
jge
int3
enter
pop
test
idiv
add
insb
fisttpl
push
jbe
lcall
mov
ja
test
popa
xchg
cs
add
jge
inc
or
xchg
cltd
jmp
pop
sbb
aam
mov
or
hlt
stc
or
xor
cmp
orb
sti
cmpsl
inc
push
jmp
out
pusha
lock
into
jle
pop
cmp
xchg
xchg
mov
or
pop
test
xchg
sbb
push
pop
scas
and
in
and
in
notb
fiaddl
cmp
incl
add
cs
pop
fcmovne
fnstcw
iret
inc
xor
inc
ret
add
in
jnp
loopne
movsl
lods
cmp
data16
mov
sbb
popa
movsl
sarl
xchg
in
ds
jle
push
mov
pop
nopl
dec
push
xor
inc
mov
stos
mov
daa
mov
cli
test
xchg
fists
aas
arpl
cli
loopne
hlt
sub
outsl
push
sbb
lcall
xchg
mov
fdiv
ss
mov
mov
pop
push
fnstsw
scas
dec
xor
push
xchg
xchg
push
loopne
insb
cmp
dec
outsl
test
leave
xor
mov
xchg
xchg
add
aaa
lret
mov
rcll
das
punpckldq
add
add
ljmp
adc
dec
and
xor
fldenv
jns
subl
pop
dec
inc
dec
xchg
nop
out
fs
gs
inc
xchg
add
lcall
lcall
and
pusha
stos
stos
outsl
mov
sbb
cmp
add
lret
jo
ds
pop
sub
loop
lds
fnstcw
insl
inc
ret
popa
js
add
jmp
xchg
jno
xchg
xchg
out
inc
push
leave
mov
and
fstpl
xor
das
lods
add
insb
leave
xlat
or
mov
add
ss
push
nop
daa
and
aas
jmp
jle
sbb
sbb
jmp
lods
into
fidivs
cmp
and
or
add
and
lret
pop
mov
in
xchg
xchg
xchg
loopne
aas
xor
shll
jb
mov
and
idivb
dec
inc
adc
lcall
lcall
and
aaa
pop
jp
leave
push
pop
out
sbb
mov
daa
sub
lcall
bound
pop
jne
mov
ja
sti
dec
and
jbe
test
push
pop
and
rcr
daa
jns
int
dec
mov
imul
adc
enter
mov
cmp
insl
imul
and
ljmp
arpl
adc
or
dec
aas
dec
cmp
loopne
dec
pop
dec
out
xor
mov
jl
sbb
dec
mov
lcall
xchg
jb
addb
jl
lret
adc
lods
fcmovbe
fsubrl
inc
inc
push
xchg
ret
xchg
xchg
adc
insl
sti
and
orb
cmpb
imul
xchg
adc
sub
add
push
sbb
push
les
dec
xchg
xchg
ja
and
mov
rcr
and
lret
movzwl
pop
inc
int
scas
push
pop
mov
ds
lcall
jno
mov
ljmp
sub
iret
xchg
xchg
pop
xor
dec
mov
push
leave
pusha
test
ficoms
jle
pop
xchg
xchg
popa
xchg
xchg
mov
aaa
setp
jne
popl
into
dec
inc
sub
inc
dec
push
mov
xor
ljmp
aam
in
push
out
xchg
aaa
cmp
sub
pop
push
sub
aas
push
pop
add
add
ljmp
xor
dec
xchg
xchg
stos
dec
add
cmp
fcoml
setp
aam
popf
lea
dec
lcall
lcall
inc
inc
call
jb
cmp
or
mov
xchg
xchg
mov
imul
pop
push
pop
ds
test
call
scas
dec
enter
add
fwait
and
jae
fs
cmp
addr16
cmp
inc
xchg
and
jno
ror
daa
out
shlb
dec
pop
es
jmp
test
add
ss
lods
push
xchg
lods
ss
or
in
jmp
movsl
divl
xlat
fisubl
es
push
mov
shrl
test
ss
and
fmul
filds
mov
int
iret
lods
mov
movsl
ss
test
roll
fdivrl
xchg
mov
add
add
ljmp
rcr
int
addr16
pop
mov
pop
adc
icebp
xchg
dec
inc
dec
cmp
and
neg
push
push
ret
xchg
xchg
jno
int
ror
mov
adc
lcall
jb
lcall
push
jns
and
jae
xchg
cwtl
and
xchg
mov
je
shrb
fwait
adc
or
and
es
pusha
push
in
pop
dec
push
jle
mov
mov
cmp
fs
int
scas
rolb
ret
aaa
lods
cmpsb
hlt
js,pt
out
daa
imul
push
ljmp
mov
in
cmp
jle
sbb
pop
and
ret
dec
pop
aaa
in
in
fiadds
and
idivb
push
jbe
pop
inc
iret
push
adc
lock
iret
or
xchg
inc
jecxz
mov
call
pop
dec
xchg
mov
cld
push
in
loope
gs
xchg
loop
lock
imul
jmp
pusha
mov
sbb
test
in
xchg
lahf
fldenv
jns
sbb
sbb
lcall
adc
sbb
lcall
and
in
push
aaa
cmp
inc
fwait
pusha
add
or
sbb
sbb
push
inc
and
cmpsl
rcrl
or
or
jge
sub
lcall
or
movsl
stos
stc
sbb
dec
push
inc
adcb
inc
inc
inc
adc
xor
jno
outsl
jg
mov
and
dec
orl
and
aad
and
sti
loopne
and
push
jl
mov
push
inc
mov
inc
dec
push
sarb
and
lret
mov
dec
and
jo
sbb
cmpsb
lods
jno
lcall
cmp
mov
jno
lcall
cmp
rclb
inc
push
ror
popa
imul
stc
and
dec
sarb
pop
mov
lret
int
pop
shll
jecxz
fisubl
push
mov
jle
out
sbb
xchg
repz
fists
xor
movsl
lods
mov
ja
and
mov
and
xchg
iret
adc
and
scas
push
pop
cmpsl
stc
add
dec
xor
adc
sbb
and
inc
int
scas
rol
or
jbe
cld
test
into
ret
mov
xlat
and
cmp
lcall
fimull
mov
sbb
mov
pop
and
shrl
lcall
and
push
cmpsl
lods
fcmovne
jne
movb
and
in
notb
inc
and
aad
mov
mov
dec
mov
test
and
xchg
cmp
clc
out
lock
jge
mov
and
test
xor
inc
or
insl
fnstenv
sub
lcall
lcall
and
lcall
sbb
dec
xchg
nop
mov
push
and
in
out
cmp
shrl
cli
loope
and
pop
in
insl
rclb
in
ds
aad
cmp
inc
mov
inc
pushf
push
or
adc
mov
pop
insb
movsl
scas
or
mov
pop
cwtl
sahf
fcmovnb
dec
cmp
jge
xchg
lea
jns
cltd
dec
pop
scas
lret
rcrl
fldenv
jns
mov
push
adc
mov
rcrb
call
int3
fdivrs
subb
lahf
cmc
cld
push
push
ljmp
mov
mov
es
testl
xor
cmp
mov
rcll
int3
lods
push
scas
mov
jb
sbb
adc
mov
jge
sub
pop
jg
hlt
add
je
out
bound
push
pop
in
sti
xchg
cltd
jecxz
dec
lahf
les
dec
nop
mov
cmp
dec
sub
jne
mov
sbb
test
cltd
xchg
push
cli
ds
and
call
fbstp
jge
inc
sbb
repz
ror
jo
ficoms
ficoms
push
out
pop
out
sbb
pop
adc
es
xor
xchg
sbb
mov
enter
bound
cmpsb
mov
xchg
scas
and
in
cmc
adcb
jmp
ljmp
mov
je
adc
stos
adcl
repnz
mov
rol
aam
mov
test
in
jp
sbb
cwtl
nop
pushf
js,pt
adc
or
pop
push
mov
cmp
imul
sub
push
stos
adcl
pop
fwait
imul
fs
inc
cmp
ljmp
lods
jle
stos
adcl
jno
addb
push
int3
adc
aaa
inc
ret
or
stos
adcl
ds
add
add
xor
addb
or
or
pop
xchg
cltd
jmp
sti
icebp
aas
popa
aaa
aaa
inc
xchg
lea
and
sub
jne
jge
adc
add
sub
xchg
pop
push
mov
add
sub
xchg
pop
mov
push
mov
add
sub
xchg
pop
mov
push
mov
add
mov
mov
add
sub
mov
addl
pop
sub
mov
mov
add
mov
pop
pushl
pop
add
mov
push
mov
add
add
xchg
pop
jmp
cmpsl
rcl
sub
iret
mov
jmp
push
or
mov
shrb
stos
dec
jge
mov
aaa
xchg
rcll
sbb
push
cli
js
xchg
insl
mov
cs
add
jbe
mov
or
js
push
lret
xor
sub
je
adc
sti
push
clc
pop
pop
dec
lods
cmp
sbb
add
mov
inc
push
and
pop
pop
sub
add
mov
sub
mov
mov
mov
xor
jno
call
outsl
lret
inc
add
sbb
ret
addr16
mov
xor
mov
adc
or
sub
mov
dec
dec
dec
jmp
pop
pusha
es
cmp
jne
xor
jmp
lods
std
movnti
mov
mov
adc
bound
jmp
xchg
lods
andb
aas
add
fstl
sbb
adc
mov
mov
jmp
mov
mov
ljmp
ds
mov
mov
mov
cmp
cmp
xchg
mov
mov
cmp
lods
mov
std
push
lock
iret
test
mov
mov
dec
mov
mov
test
ret
mov
rcl
mov
mov
push
mov
mov
xchg
mov
mov
cmpsb
xchg
mov
fdivs
les
iret
xchg
mov
rcll
cli
jge
fldcw
push
jle
cmp
fmul
dec
xchg
test
inc
xor
adc
xor
xchg
mov
or
daa
fs
lret
aad
fs
enter
frstor
fs
jmp
push
push
ror
jo
mov
and
aad
pop
and
into
ja
loopne
pop
pop
aad
fs
ret
and
xchg
jbe
into
jmp
dec
push
lock
push
or
ret
and
xchg
jbe
into
jmp
dec
push
cmc
lret
dec
paddusw
pop
push
mov
call
pop
sbb
jmp
jmp
enter
sarl
out
xchg
test
aad
jle
loope
ja
cmc
jmp
add
ljmp
into
xor
mov
xchg
mov
mov
mov
adc
mov
jae
roll
add
ficoms
mov
mov
push
cmp
dec
cmpsl
push
cmp
mov
xor
imul
xor
scas
sub
add
mov
das
rcll
xor
mov
adc
mov
push
inc
sbb
shr
xchg
mov
fnstenv
shll
push
inc
lods
jae
shr
xchg
pop
mov
xor
imul
xor
scas
sub
add
mov
das
rcll
xor
mov
adc
mov
push
inc
sbb
shr
xchg
mov
fnstenv
shll
push
inc
lods
jae
shr
xchg
pop
mov
xor
imul
xor
scas
sub
add
mov
das
rcll
xor
mov
adc
mov
push
inc
sbb
shr
xchg
mov
fnstenv
shll
push
inc
lods
jae
shr
xchg
pop
mov
xor
imul
xor
scas
sub
add
mov
das
rcll
xor
mov
adc
mov
push
inc
sbb
shr
xchg
mov
fnstenv
shll
push
inc
lods
jae
shr
xchg
pop
mov
xor
imul
xor
scas
sub
add
mov
das
rcll
xor
mov
jns
stos
xor
scas
mov
sub
call
cvtpi2ps
adc
ss
mov
mov
test
mov
mov
add
add
cmp
add
mov
mov
xor
sub
js
jns
stos
xor
scas
mov
sub
fdivs
mov
xor
inc
test
sub
pop
jp
xchg
imul
xchg
mov
jns
xchg
pop
mov
xor
imul
iret
mov
inc
mov
into
dec
mov
add
lds
divb
mov
mov
xchg
mov
das
rcll
xor
mov
xor
cmpsl
push
cmp
jns
xchg
imul
clc
inc
mov
push
mov
and
add
inc
xor
pop
mov
mov
cmp
test
and
inc
mov
bndldx
adc
dec
mov
add
dec
mov
add
js
sub
jae
roll
add
ficoms
mov
mov
push
cmp
cmpsl
push
cmp
and
shr
popa
mov
xor
into
cs
stos
xor
xchg
into
cs
push
pop
inc
xor
inc
test
sub
pop
jp
xchg
imul
xchg
mov
jns
xchg
pop
mov
xor
imul
iret
mov
inc
mov
into
dec
mov
add
lds
divb
mov
mov
xchg
mov
das
rcll
xor
mov
xor
cmpsl
push
cmp
jns
xchg
imul
clc
inc
mov
push
mov
and
add
inc
xor
pop
mov
push
push
cmp
test
and
inc
mov
bndldx
adc
dec
mov
add
dec
mov
add
js
sub
jae
roll
add
ficoms
mov
mov
push
cmp
cmpsl
push
cmp
and
shr
popa
mov
xor
into
cs
stos
xor
xchg
mov
mov
jae
rcll
adc
jae
rcll
cli
sbb
xchg
cmp
mov
push
inc
sbb
shr
xchg
mov
fnstenv
shll
push
inc
lods
jae
shr
xchg
pop
mov
xor
imul
xor
scas
sub
pushf
inc
mov
mov
mov
xor
into
fists
mov
xor
into
cs
push
pop
jl
addb
mov
das
shr
adc
xor
imul
xchg
mov
jns
xchg
mov
test
mov
cmpsl
push
cmp
mov
mov
addb
lret
xchg
cmp
cmp
cmp
test
and
inc
mov
sti
les
stos
mov
lods
jae
sarl
xchg
mov
jns
xchg
mov
dec
mov
add
push
cmpsl
push
cmp
jecxz
xchg
mov
inc
mov
push
jl
daa
xchg
add
xor
fisubrl
inc
push
jge
shr
xchg
mov
sbb
adc
sbb
xchg
cmp
mov
push
inc
sbb
shr
xchg
mov
fnstenv
shll
push
inc
lods
jae
shr
xchg
pop
mov
xor
imul
xor
scas
sub
pushf
inc
mov
mov
mov
xor
into
fists
mov
xor
into
cs
push
pop
inc
xor
inc
test
sub
pop
jp
xchg
imul
xchg
mov
jns
xchg
pop
mov
xor
imul
iret
mov
inc
mov
into
dec
mov
add
lds
divb
mov
mov
xchg
mov
das
rcll
xor
mov
push
inc
neg
sub
inc
lahf
or
rcll
inc
fnstenv
sarl
lods
inc
mov
push
sahf
mov
popf
scas
inc
mov
xor
fisubrl
add
neg
sub
mov
push
mov
rcll
inc
dec
scas
sub
lods
inc
mov
push
iret
lods
cmp
scas
inc
mov
xor
fisubrl
mov
neg
sub
in
mov
fldcw
lods
inc
mov
inc
or
add
mov
inc
mov
sub
mov
aaa
ss
dec
sub
mov
mov
mov
add
mov
std
lock
iret
adc
mov
push
insb
push
out
jb
mov
dec
imul
rol
mov
dec
les
push
adc
sti
mov
pop
xchg
push
test
lret
add
shl
add
inc
xor
mov
leave
test
ljmp
test
and
push
insl
sub
inc
mov
mov
jecxz
jns
in
push
cmp
mov
mov
mov
mov
int3
and
pushf
in
aaa
stos
xor
mov
lret
into
xchg
js
cmp
in
mov
pop
clc
xchg
lahf
mov
shlb
sarl
sahf
mov
xor
cld
movsb
pop
push
insb
adc
clc
or
push
lods
bnd
stc
rolb
sub
test
inc
add
cwtl
push
mov
sbb
dec
cmp
push
dec
cs
stos
push
xchg
mov
repnz
aas
pop
pop
or
faddp
xor
xor
out
fs
sti
cwtl
pop
jbe
sub
add
lock
out
adc
or
mov
in
sahf
add
addr16
daa
clc
add
mov
sbb
rolb
push
inc
jp
jb
into
add
sub
pop
push
into
jo
andb
push
mov
mov
inc
test
inc
mov
dec
push
pop
cmp
xchg
into
mov
insb
push
in
jecxz
orl
pushf
dec
or
mov
xor
add
jbe
nop
cwtl
repz
jns
mov
and
repnz
dec
cmc
fdivrl
or
and
ja
mov
data16
jg
stos
lea
sbb
in
inc
sbbl
cli
cmp
push
loop
sub
std
jge
fdivl
ljmp
and
bound
sbb
mov
xor
adcb
outsb
mov
fbld
les
cmpsl
or
loopne
pop
sub
addr16
fimuls
notl
dec
and
test
mov
iret
lods
lods
lds
pop
xchg
push
and
add
es
outsb
out
mov
mov
icebp
fldcw
lods
add
jnp
and
fwait
push
inc
and
push
push
sbb
pop
mov
xor
pop
leave
push
or
add
push
inc
mov
decb
and
mov
push
shlb
mov
jl
hlt
mov
loopne
nop
cmp
movsb
add
bound
cmp
xlat
mov
add
jbe
cmp
pop
iret
shlb
dec
icebp
inc
test
stos
adc
sub
bound
inc
in
cmp
in
mov
jmp
je
lcall
scas
xchg
and
adc
imul
imul
movsl
cmpsb
and
mov
iret
xor
jae
int
iret
bound
les
mov
in
inc
int
scas
shll
test
ret
xor
mov
mov
in
and
jle
inc
sbb
xchg
xor
in
or
mov
mov
ret
int3
push
mov
mov
or
aam
sahf
add
mov
mov
mov
sub
and
push
mov
inc
leave
clc
cwtl
mov
psubb
jmp
call
xor
scas
add
out
iret
xchg
scas
add
fimull
mov
and
arpl
cmc
in
push
inc
dec
push
sbb
and
sub
sbb
add
mov
or
leave
hlt
and
cwtl
aas
das
xchg
sub
das
call
cmp
and
nop
push
sbb
mov
adc
push
xchg
xchg
in
mov
loop
push
shll
shll
or
sub
mov
mov
push
bound
or
test
push
pop
jmp
cwtl
icebp
cltd
adc
mov
cmp
dec
es
push
sub
mov
stos
shll
inc
divb
arpl
rcrl
push
or
jg
rcrl
das
rcrl
sub
pusha
mov
xor
das
mov
lock
mov
arpl
rcll
rcl
popf
push
dec
stc
in
lret
insb
cli
mov
lock
xor
push
add
push
shl
imul
repnz
shll
and
lret
arpl
fimuls
jmp
pop
fdivr
lods
fdivp
cltd
adc
xor
mov
aam
stos
inc
popa
mov
and
sub
ds
mov
scas
push
push
mov
dec
sbb
and
sub
test
jne
rcrb
push
push
push
addl
enter
test
inc
sub
cmpsl
sbb
test
jle
jae
shll
lret
adc
xor
nop
dec
push
sbb
sbb
mov
jmp
cwtl
icebp
cltd
adc
mov
cmp
dec
es
push
sub
rcl
popf
jp
dec
aad
push
pop
cmp
or
push
sbb
push
shl
imul
cmp
shll
and
inc
scas
cld
out
sbb
xchg
cmc
lahf
test
repnz
sub
adc
xor
inc
sbb
pop
cmpsb
mov
xor
push
adc
xlat
adc
mov
popf
aad
xchg
adc
dec
jb
inc
jbe
call
mov
lock
xor
sbb
pop
pop
repz
aam
lds
lods
mov
and
cmp
shll
iret
mov
popf
into
xor
mov
out
out
shll
pusha
lcall
pushf
push
or
mov
adc
lret
sub
or
sub
fildl
push
adc
test
push
inc
mov
and
sub
add
sub
push
push
sub
add
mov
test
adc
xor
loopne
stc
arpl
sti
cwtl
popf
cs
add
loope
dec
fists
rcl
hlt
sub
pop
dec
mov
inc
cmp
addr16
fldt
stc
jg
pop
psadbw
data16
xlat
xchg
push
pop
std
nop
scas
std
inc
dec
lock
fdivl
in
cmp
dec
rcrb
xchg
push
stos
shll
pop
push
shl
insb
xlat
xor
pop
cmp
shll
cli
mov
clc
sbb
xor
das
scas
adc
dec
push
sbb
or
cmp
inc
cmpsl
adc
scas
push
cmova
dec
js
mov
xor
das
mov
lock
mov
arpl
shrl
jg
xor
fdivrl
push
inc
pop
xor
rcrl
xchg
inc
adc
arpl
shll
arpl
mov
xor
sarl
cmpb
inc
mov
out
add
mov
scas
jae
push
imul
adc
jo
adc
test
sbb
jbe
push
cmp
adc
cmp
pop
or
push
push
dec
outsb
pop
adc
pop
pop
dec
je
or
addr16
mov
call
cmp
daa
bound
sbb
shlb
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
mov
mov
adc
shll
shll
aad
xor
insb
push
push
sbb
rclb
rcrb
imul
mov
repnz
mov
testb
fmuls
inc
scas
hlt
shlb
sarl
xor
outsl
inc
xlat
int3
cmpsl
mov
mov
and
ss
pop
cmpsb
lock
lea
push
or
lods
sbb
std
jnp
xor
lods
jne
or
xor
push
fnstsw
jbe
shl
cmp
or
mov
dec
shrb
pop
jmp
call
cmc
sub
or
lods
iret
scas
pushf
imul
das
lds
sarb
pop
roll
lds
mov
push
sub
rcrl
imul
mov
xor
sbb
rorb
out
mov
and
ss
xor
xchg
loope
scas
dec
push
cld
sub
stc
lods
sbb
inc
lds
test
into
fdivl
mov
pop
cwtl
test
xor
xor
cmp
xor
lret
cmp
shll
shll
fcmovnb
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
jp
fsts
fcompl
daa
xchg
push
jb
adc
push
adc
sbb
jl
push
cmp
push
dec
imul
sbb
ja
push
mov
sbb
shll
shll
sbb
outsb
lahf
dec
cmp
lahf
dec
cmp
lahf
xchg
pop
jl
dec
cmp
lahf
dec
cmp
lahf
dec
cmp
lahf
inc
dec
jle
dec
cmp
lahf
jbe
shll
shll
jmp
xor
shll
xlat
xor
shll
inc
fidivs
shll
shll
shll
shll
shll
test
xor
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
mov
xor
shll
std
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
mov
shll
shlb
shll
shll
jmp
fdivl
fnsave
fidivs
xlat
xor
shlb
shll
shlb
lret
xor
aam
arpl
aad
arpl
xor
iret
xor
enter
leave
xor
lret
mov
arpl
int3
xor
int
arpl
into
xor
mov
imul
xor
insb
xor
test
shll
shll
shlb
shlb
shlb
shlb
shlb
shlb
shlb
shlb
shlb
shlb
shlb
shlb
shlb
shlb
shlb
shlb
shlb
shlb
shlb
fbstp
shlb
fcoml
sar
jno
xorl
dec
xor
mov
fsubl
jo
fdivl
jno
shll
push
insb
xor
sahf
mov
jno
fdivl
arpl
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
stos
shll
shll
testb
jno
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
cmp
inc
addr16
inc
data16
inc
jno
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
shll
into
pushl
bound
push
aaa
arpl
ror
mov
shll
shll
shll
shll
shll
shll
shll
shll
shll
stc
adc
xchg
mov
mov
dec
sub
cltd
jne
shll
xor
jno
stos
shll
stc
adc
jb
addl
subl
shll
scas
shll
in
cmp
sub
jle
lock
jb
addr16
int
add
cmp
outsl
dec
xchg
out
push
dec
xchg
inc
test
inc
ucomiss
mov
leave
mov
shll
mov
xor
fldcw
mov
idivb
pop
fwait
out
mov
mov
shll
inc
or
sub
mov
cmp
adc
push
movsl
aas
das
imul
inc
in
int
roll
sbb
jmp
cwtl
or
xor
mov
hlt
inc
dec
aam
ja
or
cltd
push
sbb
arpl
push
xor
sbb
xor
hlt
stos
or
mov
and
popf
mov
or
jno
mov
jle
sti
inc
xchg
enter
cltd
xchg
cmp
cmp
pop
jle
xchg
or
pop
inc
nop
insl
in
subb
nop
je
mov
xchg
imul
inc
jp
sti
push
popf
mov
cmp
xorl
cmp
pushl
mov
jle
inc
jae
arpl
inc
xchg
push
xchg
mov
mov
nop
cltd
inc
jae
push
xchg
adc
cltd
inc
mov
jle
sti
inc
xchg
cwtl
xchg
xor
jne
mov
popf
dec
ret
push
pop
mov
popf
enter
fstpl
arpl
bound
mov
sbb
mov
adc
pop
sbb
push
pop
sub
xor
xchg
enter
ss
and
push
sbbb
inc
mov
popf
aad
dec
sahf
enter
enter
movsb
inc
xchg
and
inc
sbbb
xchg
loop
arpl
popf
aad
lcall
inc
mov
popf
lds
aad
mov
in
daa
dec
enter
enter
cmc
inc
mov
popf
enter
in
mov
sbb
aad
sbb
jge
lahf
enter
mov
ret
push
pop
mov
popf
enter
stos
fstpl
pop
dec
ljmp
lret
sahf
pop
mov
sbb
ret
lret
icebp
cwtl
popf
aad
pushf
popf
enter
mov
sbb
or
lret
icebp
cwtl
adc
leave
shlb
push
pop
daa
enter
mov
enter
inc
out
mov
inc
mov
sarb
jae
mov
enter
lret
icebp
cwtl
push
pop
mov
sbb
inc
xchg
and
inc
mov
sub
mov
sbb
int3
popf
sbb
jge
pushf
enter
mov
ret
push
pop
mov
popf
enter
fstpl
bound
jb
int
mov
rorb
xchg
cmpsb
popf
enter
lret
icebp
cwtl
push
pop
mov
sbb
inc
xchg
and
inc
mov
fwait
push
pop
mov
shl
jno
mov
enter
lret
icebp
cwtl
push
pop
mov
sbb
inc
xchg
and
inc
mov
mov
enter
sbb
mov
enter
lret
icebp
cwtl
push
pop
mov
sbb
inc
xchg
and
inc
mov
mov
enter
out
sbb
lock
cmpsl
popf
enter
lret
icebp
cwtl
push
pop
mov
sbb
inc
xchg
and
inc
mov
mov
enter
int3
jo
mov
enter
lret
icebp
cwtl
push
pop
mov
sbb
inc
xchg
and
inc
mov
dec
push
pop
mov
rcl
jo
mov
enter
lret
icebp
cwtl
push
pop
mov
sbb
inc
xchg
and
inc
mov
sub
pop
mov
rol
jo
mov
enter
lret
icebp
cwtl
push
pop
mov
sbb
inc
xchg
and
inc
mov
inc
push
pop
mov
shlb
dec
mov
outsl
lret
icebp
cwtl
push
pop
mov
sbb
inc
xchg
and
inc
mov
mov
enter
fdivs
mov
enter
lret
icebp
cwtl
push
pop
mov
sbb
inc
xchg
and
inc
mov
sub
pop
mov
pushf
enter
dec
inc
sbbb
lds
aad
mov
in
out
daa
inc
mov
adc
inc
mov
lcall
mov
xor
inc
mov
popf
enter
movsl
inc
xchg
and
inc
mov
and
add
and
inc
mov
popf
enter
aad
lahf
popf
enter
enter
ret
popf
daa
inc
mov
lcall
xchg
mov
mov
sbb
jl
popf
enter
mov
inc
mov
popf
enter
or
aaa
enter
inc
movsb
mov
inc
mov
insb
lret
icebp
cwtl
popf
aad
lahf
popf
enter
mov
sbb
push
pop
mov
fmull
push
push
cmp
cmp
adcb
out
sbbb
inc
xchg
arpl
inc
orb
adc
xchg
imul
adc
xchg
arpl
xor
xor
mov
in
fmul
cltd
cmp
test
outsb
arpl
mov
cmpb
cmp
incb
arpl
jbe
pop
jp
mov
pop
incl
inc
mov
popf
enter
enter
enter
enter
enter
enter
enter
outsl
adc
fidivrl
mov
popf
enter
arpl
xor
cltd
scas
adc
enter
enter
jne
cmp
push
dec
enter
test
adc
fiaddl
imul
sahf
pop
subb
dec
fiaddl
arpl
xor
test
xor
nop
sub
jnp
lods
dec
push
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
jl
push
outsl
xchg
mov
sub
subb
imul
imul
test
sub
lcall
inc
cltd
inc
test
pop
sti
xor
mov
cmp
arpl
xor
addr16
mov
popf
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
mov
xor
test
jo
clc
inc
xchg
arpl
mov
stc
pop
xchg
pop
sti
pop
cmp
xchg
cmp
test
inc
xchg
arpl
xchg
jo
adc
cmp
shlb
subl
pop
jl
xchg
pop
inc
cltd
movsb
adc
cltd
movsb
adc
xchg
lcall
subb
push
jp
movsb
inc
arpl
cmp
push
incb
cmp
lcall
popf
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
mov
xor
test
jp
sti
xor
jbe
jae
pusha
clc
addl
push
stos
pop
subb
xor
mov
or
test
xor
jbe
inc
movsb
test
xor
cld
cmp
insl
xchg
inc
js
inc
mov
popf
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
mov
sti
pop
jnp
pushl
subb
pop
cmp
jne
cmpl
out
subb
imul
adc
cmp
cltd
xchg
xor
insl
xchg
inc
js
movsb
or
lret
cld
adc
nop
test
cmp
test
cmp
xchg
jo
adc
test
pop
jp
xchg
inc
js
movsb
xor
pop
out
xchg
test
xor
imul
lret
mov
mov
xchg
test
xor
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
test
inc
jnp
mov
mov
popf
enter
mov
sti
inc
jnp
mov
mov
popf
enter
adcb
xorb
popf
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
arpl
xor
pop
cmp
popf
enter
jne
adc
imul
cmp
sti
mov
xchg
arpl
sbb
push
xchg
xor
je
addl
jbe
adc
ja
cmp
cmp
xchg
lcall
jae
xchg
jl,pt
nop
cmp
adcl
xchg
ja
cmp
outsl
in
xchg
jne
adcl
lcall
ficoms
pop
cmp
adcl
xchg
ja
cmp
outsl
in
xchg
jne
adcl
lcall
cmpb
cmp
adcl
xchg
ja
cmp
outsl
in
xchg
jne
adcl
lcall
outsb
arpl
pop
jl
clc
cmp
je
cwtl
pop
jne
adcl
lcall
cmp
insb
xchg
ds
arpl
xor
xchg
or
pushf
and
test
cmp
test
jl
test
jp
movsb
adc
ja
cmp
lcall
jle
movsb
insw
xchg
movsl
pop
lcall
jns
movsb
cmp
pop
pushl
jnp
test
pop
xchg
pop
sti
pop
popf
mov
fisubrs
xchg
dec
cmp
jne
addl
arpl
sbb
jne
sbb
cltd
mov
inc
mov
sahf
cwtl
imul
cmp
sahf
pop
subb
cmp
xor
pop
cld
mov
xchg
mov
mov
mov
push
adcb
xchg
adc
in
xchg
ja
xor
jne
orl
test
xorl
nop
sbb
jbe
mov
popf
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
pop
test
sub
inc
mov
loop
test
xchg
imul
xchg
ja
xor
stc
cmp
lcall
cwtl
popf
enter
jge
insb
jle
in
mov
ficompl
jae
inc
mov
pop
xchg
adc
inc
int3
or
sub
sub
and
leave
fstpl
bound
lcall
jge
popf
enter
int3
in
test
pop
loop
and
cs
mov
cwtl
push
pop
out
mov
inc
adc
sub
mov
mov
out
inc
mov
pop
sbb
push
pop
sub
dec
daa
enter
mov
mov
inc
sbb
pop
sbb
push
pop
sub
dec
pop
enter
mov
enter
test
out
push
mov
mov
mov
mov
pop
inc
movsl
xchg
mov
fsubp
adc
fstpl
int3
mov
cwtl
push
pop
out
mov
inc
adc
sub
mov
mov
out
mov
test
pop
push
mov
dec
ret
push
pop
mov
in
inc
mov
popa
push
pop
sub
dec
pop
enter
mov
push
pop
xchg
mov
jle
popf
enter
push
rcrl
xchg
and
outsl
push
sbb
pop
mov
adc
mov
inc
mov
mov
fcompl
push
pop
mov
adc
mov
inc
mov
mov
push
mov
xorb
popf
enter
xchg
loope
sbb
lock
cmp
outsl
push
sbb
pop
mov
adc
mov
inc
mov
incb
fcompl
push
pop
mov
adc
mov
inc
mov
mov
push
mov
cmp
jb
inc
mov
pop
test
or
inc
int3
ja
popf
enter
mov
inc
mov
in
aad
mov
pop
push
ret
push
pop
pop
pop
push
ret
push
pop
daa
enter
mov
pop
mov
adc
mov
inc
mov
jge
fcompl
mov
divb
int
scas
adc
sbb
insl
push
repnz
fwait
push
pop
and
enter
sbb
into
lea
xorb
mov
push
cmc
fdivrs
jb
int
adc
sub
mov
mov
out
mov
enter
pop
sbb
push
pop
sub
dec
daa
enter
mov
mov
inc
sbb
pop
sbb
push
pop
sub
dec
xchg
sbb
pop
mov
bound
xor
fildl
mov
inc
mov
push
mov
cwtl
mov
dec
cmp
and
push
fwait
push
pop
fisubl
mov
fcompl
add
fstpl
les
sub
adc
pop
sbb
enter
push
or
mov
push
pop
jns
lahf
push
sbb
mov
inc
addb
pop
and
lods
pop
push
enter
or
push
sbb
push
fnsave
fcompl
cmp
fstpl
popf
mov
out
and
pop
and
sti
fstpl
xchg
into
mov
lods
push
loop
cmp
cld
je
or
and
ljmp
sbb
enter
rcrl
mov
int
mov
ss
pop
cltd
mov
push
sbb
push
pop
ds
mov
inc
addb
and
lods
pop
imul
mov
shrl
push
dec
push
lahf
mov
pop
and
sti
fstpl
adc
test
out
push
mov
test
mov
mov
into
lods
jl
mov
stos
ss
es
mov
push
aam
xlat
fstpl
mov
lock
fcmovu
cwtl
mov
sbbb
push
ficomps
cmp
fstpl
mov
mov
sbb
aas
call
add
les
ret
in
mov
lret
cmp
fcmovu
cwtl
xchg
enter
enter
mov
mov
movsl
xor
inc
mov
xchg
add
mov
aas
std
mov
popf
enter
xchg
pop
inc
int3
les
int3
or
pop
js
shl
mov
mov
push
pop
sbb
ret
mov
enter
adc
cmp
cld
add
sub
pop
xchg
enter
enter
addb
mov
mov
movsl
xor
inc
mov
xchg
mov
inc
aaa
adc
test
out
push
mov
test
mov
pop
mov
add
call
push
repnz
fcmovu
cwtl
lcall
out
cmp
push
sbb
mov
idivb
int
incl
sbb
neg
push
enter
mov
push
jg
popf
enter
jne,pn
data16
aaa
leave
pop
out
xchg
arpl
adc
inc
mov
incl
fstpl
mov
jl
popf
enter
cmp
data16
sbb
ficompl
dec
push
pop
xchg
sbb
inc
mov
sbb
in
es
fidivrl
push
pop
push
enter
mov
push
pop
pop
sbb
adc
and
int3
inc
mov
loopne
jnp
or
and
mov
dec
lret
ficompl
dec
push
pop
xchg
lret
mov
inc
cmp
int
sbb
push
fisubl
sub
or
pop
es
mov
fldl
mov
lock
fcmovu
cwtl
xchg
enter
enter
xchg
xor
mov
mov
test
inc
les
mov
pop
lcall
lret
pop
in
aas
popf
mov
inc
addb
pop
and
lods
pop
push
enter
or
or
fnsave
enter
enter
jne
mov
and
inc
push
pop
ds
jae
cmpsb
popf
enter
or
and
lods
pop
push
jo
incl
and
inc
sbb
push
pop
pop
xchg
fisubrs
jg
insl
ljmp
push
pop
adc
pop
sbb
enter
test
out
push
stos
test
rolb
mov
stos
ja
out
or
lock
popf
enter
outsl
repz
fcmovu
cwtl
jge
fstp
adcl
or
jg
popf
enter
scas
fsubrl
sub
mov
cwtl
adcl
push
fidivrl
add
push
pop
inc
push
fisubl
sub
orl
xor
into
rclb
aad
fwait
popf
enter
xorl
call
aaa
mov
arpl
stos
push
sbb
push
pop
cmp
push
movsb
or
std
mov
popf
enter
xchg
pop
inc
int3
les
int3
or
pop
mov
mov
jl
popf
enter
int3
imul
inc
mov
nop
mov
inc
mov
insb
xchg
fstpl
push
std
mov
popf
enter
xchg
adc
inc
int3
or
popf
enter
xchg
pop
mov
test
mov
cmp
pushf
arpl
adc
xlat
xor
inc
mov
sbb
xor
fstps
fistpl
outsb
fistpll
xchg
dec
inc
or
and
sbb
sbb
fstpl
mov
sti
mov
popf
enter
sbb
inc
int3
les
int3
pusha
mov
pop
xlat
fisubrl
xor
inc
mov
push
test
or
fwait
add
scas
cmc
push
mov
aam
mov
pop
movsb
mov
dec
sub
das
sbb
pop
pusha
sbb
push
pop
cmp
sti
fstpl
popf
enter
and
rorl
insl
out
lods
mov
inc
stc
sbb
aas
popf
mov
inc
addb
and
lods
pop
imul
mov
movsl
sbb
cmp
mov
enter
test
out
push
mov
test
mov
pop
pop
dec
ficompl
dec
push
pop
mov
rcl
repz
sub
scas
data16
mov
dec
popf
mov
fcmovb
and
js
pop
aad
mov
rol
popa
sbb
enter
test
out
push
fwait
test
ret
popf
mov
jno
pop
cmp
mov
dec
ret
lock
fcmovu
cwtl
xchg
enter
enter
mov
mov
movsl
inc
enter
jl
push
adc
lret
or
scas
xor
aad
jge
inc
fsubs
xor
push
mov
popf
enter
xor
orb
and
sti
mov
popf
enter
sbb
inc
int3
les
int3
or
pop
fidivrs
fucomip
addb
push
pop
fisubl
mov
jge
popf
enter
xchg
mov
outsb
fldl
xchg
or
mov
lcall
lahf
popf
enter
cmp
adc
pop
sbb
enter
jle
push
push
mov
adc
dec
inc
sbb
sbb
sub
pop
mov
adc
aam
mov
ss
adcb
dec
push
pop
pop
sbb
ret
push
pop
mov
popf
enter
enter
mov
arpl
int3
jle
das
enter
lret
popf
xor
fdiv
ret
inc
mov
lret
aas
pushf
jb
sub
test
out
push
stos
test
sti
inc
mov
pop
push
and
mov
std
mov
fstpt
mov
sahf
enter
addl
movsl
sbb
mov
mov
adc
scas
pop
xor
or
nop
lret
and
dec
or
mov
mov
inc
addb
pop
and
lods
pop
insl
popf
enter
or
jecxz
adc
in
out
jo
push
ret
push
pop
sbb
bound
mov
mov
jae
popf
enter
addr16
ret
icebp
and
jp
sub
movsl
mov
mov
mov
cmp
push
pop
cmp
popf
enter
or
fldcw
pop
je
enter
or
jle
idivl
inc
cmp
mov
push
fstpl
outsb
push
pop
iret
in
int
mov
mov
lock
or
dec
sub
pop
mov
adc
mov
inc
mov
mov
lock
or
cwtl
or
dec
sub
test
enter
and
pop
test
mov
leave
fstpl
adc
hlt
sbb
inc
push
sbb
push
pop
ds
mov
inc
addb
pop
and
lods
pop
outsb
popf
enter
or
daa
dec
ficompl
dec
push
pop
sbb
jle
lret
fstpl
popf
jle
cmpsb
popf
enter
or
and
lods
pop
jne
enter
or
jns
xor
aas
popf
mov
inc
addb
pop
and
lods
pop
outsl
popf
enter
or
clc
shll
fdivl
addr16
out
dec
ficoml
push
pop
pop
enter
mov
push
pop
fistpl
jb
aaa
adc
test
out
push
mov
test
mov
es
sahf
popf
enter
leave
inc
mov
adc
ret
inc
pop
cmp
mov
dec
sub
push
repnz
icebp
cwtl
jae
fdivs
sbb
orw
inc
sbb
mov
bnd
int
sbb
test
cwtl
lcall
lret
fstpl
mov
jle
daa
dec
scas
movsl
mov
enter
daa
push
sbb
aad
add
mov
inc
addb
pop
and
lods
pop
outsl
popf
enter
or
mov
repz
sahf
enter
push
add
movsl
mov
inc
mov
adc
test
out
push
mov
mov
mov
mov
leave
sub
fisubl
mov
jl
popf
enter
mov
aad
ret
gs
pusha
mov
filds
sub
pop
mov
pop
dec
scas
movsl
mov
enter
xlat
mov
jb
push
pop
mov
mov
and
int
pop
mov
push
sbb
push
pop
mov
popf
enter
dec
ret
push
pop
mov
popf
enter
fstpl
mov
inc
xchg
and
inc
mov
inc
push
pop
outsb
pusha
sbb
outsb
lock
lcall
ljmp
pop
xchg
and
mov
mov
jmp
inc
ss
test
out
push
dec
test
sti
inc
mov
sbb
test
mov
jo
pushf
enter
push
fimull
push
pop
xchg
sbb
inc
mov
sub
xchg
or
mov
push
loop
push
push
pop
and
lods
pusha
sbb
enter
enter
xor
jge
int
and
sti
fstpl
dec
push
pop
cmp
cmpb
xor
jle
int
aam
xlat
fstpl
mov
fsubr
shrb
iret
fs
inc
aad
dec
loop
pushf
push
pop
lret
sub
sub
inc
mov
out
xlat
ss
jb
aad
pop
dec
shl
in
xor
push
mov
pushf
push
pop
pop
enter
mov
pop
inc
sbb
incl
popf
das
push
mov
pop
imul
push
fnstcw
add
xchg
adc
dec
fisubrl
popf
mov
inc
addb
and
lods
pop
je
enter
or
and
mov
inc
mov
fsubrs
and
flds
pop
xchg
lret
sbb
mov
fstpl
mov
fstpl
sahf
enter
mov
mov
movsl
xor
inc
mov
sub
pop
cmp
push
sub
popf
enter
enter
enter
dec
cs
pop
xor
xor
xchg
mov
fcompl
in
icebp
cwtl
arpl
bound
test
fmuls
adc
sahf
mov
lock
fcmovu
cwtl
or
std
mov
sbb
push
mov
xor
xorl
jne
jno
test
push
and
sbb
shl
xor
inc
xor
jmp
aaa
stos
inc
adc
sub
popw
fstp
pop
shl
push
aaa
jnp
and
ss
ficoml
xor
cmpb
cmpsb
sbb
sub
push
aaa
rol
jbe
lret
add
rol
jnp
scas
ret
mov
mov
sub
mov
xchg
ret
jmp
sbbl
pop
out
add
cld
outsb
aaa
xlat
jnp
movsl
and
xor
stos
popf
push
cltd
jo
push
aaa
rol
lret
mov
iret
push
aaa
rol
fldcw
xor
sbb
aaa
push
push
and
jmp
pop
aaa
aaa
inc
push
or
jmp
repz
xchg
lods
out
ss
stos
ret
sbb
xlat
out
pop
cmp
insl
les
push
push
ror
sub
sbb
mov
adc
xchg
and
pop
std
loopne
inc
dec
mov
shrb
mov
push
mov
sbb
sub
ret
scas
ret
mov
adc
xor
sub
sub
cmp
cmp
icebp
jp
and
cmp
stos
push
inc
push
push
sub
stos
shll
fistpll
push
mov
aaa
mov
jg
int3
outsl
sti
das
sub
enter
inc
and
fildll
ret
and
icebp
mov
xlat
ret
xor
sbb
cmp
lret
notb
cltd
movsl
pop
shrb
loopne
push
aaa
jnp
push
xor
jp
sbb
mov
mov
rcll
stos
ret
mov
add
pop
and
notb
mov
les
leave
notb
notb
adc
adc
dec
popl
push
icebp
xchg
test
sarb
push
mov
movlps
test
sbb
sbb
movhlps
je
sbb
testb
mov
movlps
div
push
je
sbb
notb
sub
xchg
or
andb
jmp
lods
orb
sub
xchg
or
jns
ret
xor
dec
clc
xchg
or
pop
cmp
push
adc
icebp
xchg
ret
lods
outsl
je
bound
inc
dec
sub
outsl
xchg
ret
je
cmp
test
into
repnz
or
js
or
xchg
xor
fld
jns
insb
popl
std
dec
movsb
mov
inc
jae
or
jnp
mov
fadd
stc
movsl
dec
dec
xchg
mov
ljmp
push
imul
inc
imul
imul
leave
notb
int
scas
sbb
push
mov
dec
icebp
stos
adc
inc
adc
fadd
pushf
or
dec
imul
jns
loop
aaa
imul
push
push
pushf
mov
fimuls
jns
or
bound
jae
scas
das
or
xchg
mov
movsl
push
stos
jbe
xor
mov
jge
enter
leave
idivb
int
pushf
push
and
negb
add
adc
xchg
or
leave
imulb
stc
addl
imul
rcl
jbe
dec
icebp
stos
xor
je
sbb
test
lret
jbe
dec
inc
scas
or
icebp
pop
cli
mov
ljmp
jb
pushf
or
icebp
xchg
gs
mov
jle
leave
notb
nop
int
movlps
ret
lahf
jmp
xchg
or
div
adc
cmp
pop
pop
sub
pop
lret
mov
testb
les
cli
fstpt
and
imul
jo
pushf
pop
push
ret
adc
scas
jb
add
jmp
nop
iret
or
xchg
or
leave
idivb
push
icebp
xchg
mov
cmc
test
push
jne
sbb
notb
or
push
icebp
ja
adc
popa
insl
cmc
push
push
insl
cmc
orb
movsb
add
pop
das
addb
leave
and
and
mov
insb
push
sub
notb
mov
push
out
sbb
push
icebp
xchg
addr16
inc
das
push
push
icebp
xchg
sub
movsb
adc
fwait
push
push
icebp
xchg
push
jl
mov
mov
rcrl
or
call
adc
xchg
cmp
inc
addl
icebp
mov
das
fucom
bswap
movsb
stos
add
shll
test
xchg
nop
sti
icebp
xchg
or
leave
notb
nop
es
adc
stos
icebp
in
icebp
xchg
or
enter
shlb
xchg
or
xchg
dec
xchg
lret
sub
notb
add
mov
xchg
dec
imul
push
dec
xchg
bound
repz
or
jne
mov
xor
xchg
or
jle
pop
adc
mov
sbb
inc
mov
or
push
icebp
cs
push
icebp
xchg
adc
in
add
into
and
outsl
hlt
movhlps
ret
cmp
adc
inc
insl
fwait
or
jo
mov
fucomi
xchg
test
push
cmp
pop
shrb
mov
adc
insl
pushf
cs
outsb
test
or
imul
pusha
insb
sbb
insl
pushf
addr16
inc
das
push
push
icebp
xchg
sub
xchg
adc
fwait
and
xchg
push
jle
lcall
sbb
enter
pop
sub
xchg
or
js
dec
jo
xor
xchg
or
or
nop
mov
rolb
daa
add
add
stos
popa
js
inc
sti
lfs
in
out
mov
mov
popf
or
pop
sbb
daa
add
pop
mov
pushf
aad
cmp
mov
push
nop
loope
adc
stos
icebp
in
icebp
xchg
or
enter
shlb
xchg
or
cwtl
ljmp
lret
daa
xchg
push
icebp
xor
mov
pusha
insb
sub
fnsave
jns
aaa
fsubp
add
mov
sub
xchg
or
xchg
shr
or
bound
js
and
loope
adc
stos
icebp
enter
xchg
or
enter
shlb
xchg
or
mov
in
fistl
mul
dec
icebp
xchg
or
and
mov
fisttpl
sbb
jno
pushf
cmp
mov
sbb
aam
addl
fucomip
mov
mov
xchg
test
add
or
jnp
pop
push
nop
or
je
sbb
test
sbb
ljmp
ret
addr16
movlps
and
lret
sahf
xchg
aam
pushf
test
sbb
notl
add
imul
push
icebp
cli
sbb
jbe
hlt
push
mov
adc
addr16
inc
das
push
push
icebp
xchg
sub
movsb
adc
fwait
and
xchg
push
jl
cmp
inc
push
lock
pushf
cli
or
or
pop
sub
xchg
or
js
dec
jo
xor
xchg
or
xchg
push
jb
xchg
jp
faddp
mov
test
mov
mov
push
mov
addb
push
icebp
lods
pop
lret
mov
jbe
dec
out
or
push
icebp
xchg
xchg
inc
mov
jg
cwtl
or
adc
subl
orl
xlat
mov
push
sbb
push
mov
jo
dec
xor
ljmp
and
and
imul
je
pop
leave
test
mov
xchg
mov
adc
sub
xchg
or
out
inc
ja
loope
movsb
cmpl
mov
adcl
xchg
fucomip
mov
push
inc
das
push
push
icebp
xchg
sub
xchg
adc
fwait
sbb
xchg
push
jle
and
cmp
inc
pushf
in
fsubl
test
xchg
or
mov
lcall
or
cmpsb
xchg
push
icebp
xchg
test
mov
sbb
insl
pushf
test
or
test
adc
push
movsl
call
mov
or
adc
test
leave
divb
or
adc
push
push
insl
cmc
mov
adc
mov
test
loop
je
sbb
notb
add
push
push
add
adc
pusha
test
and
test
dec
icebp
xchg
or
shrl
and
xchg
movl
cmp
xor
or
add
ds
mov
xchg
pop
sub
xchg
or
js
dec
jo
xor
xchg
or
push
in
lea
or
push
icebp
ja
adc
push
dec
insl
cmc
push
push
insl
cmc
lea
adc
subl
sbb
push
icebp
xchg
or
notl
xlat
dec
imul
sub
xchg
or
jns
ret
xor
dec
add
or
jae
xchg
xchg
xchg
or
int3
ljmp
pop
inc
adc
rcrl
or
push
xchg
or
inc
imul
push
icebp
adc
rcrb
or
and
or
push
icebp
pushf
xorb
or
aas
sub
mov
lods
loope
test
icebp
sub
dec
cmp
mov
or
test
xchg
xchg
lods
icebp
xchg
or
sub
adc
sub
or
inc
lds
add
mov
push
dec
inc
in
push
xchg
or
push
icebp
xchg
mov
xchg
or
leave
imulb
dec
push
icebp
xchg
addr16
inc
das
push
push
icebp
xchg
sub
test
fwait
and
xchg
dec
xorb
or
testb
out
and
adc
je
sbb
imulb
or
xchg
in
call
mov
dec
push
push
cwtl
mov
xlat
mov
stos
pop
push
mov
sub
scas
push
pushf
pop
stos
icebp
enter
xchg
or
enter
shlb
xchg
or
jg
jmp
shll
test
xchg
xchg
push
icebp
xchg
or
push
icebp
xchg
or
enter
shlb
xchg
or
lcall
or
notb
nop
lahf
add
adc
dec
pop
inc
pushf
enter
icebp
adc
les
cwtl
xchg
movlps
jo
test
sbb
mov
xchg
xchg
dec
icebp
xchg
or
leave
imulb
or
xchg
das
and
cltd
inc
jo
adc
out
mov
mov
push
adc
mov
sbb
imul
shlb
lahf
jle
mov
sbb
icebp
xchg
leave
or
stc
xchg
mov
sbb
dec
jno
loopne
mov
push
jb
dec
icebp
stos
add
pushf
outsb
sbb
notb
xchg
lcall
xchg
testb
les
leave
mulb
jns
sbb
push
mov
cltd
dec
adc
push
nop
xchg
testb
les
leave
mulb
jns
push
in
push
icebp
jge
sarl
xchg
pop
sub
xchg
or
jns
ret
xor
dec
std
xchg
or
add
mov
cmc
jbe
sub
jo
fnstsw
insl
pushf
push
push
mov
int
xchg
or
inc
imul
enter
subl
push
test
xor
negb
roll
pop
xor
pushf
push
test
fsubrp
xlat
inc
imul
clc
insb
sbb
ret
adc
subl
rcrb
orl
pushf
out
insb
sbb
insl
pushf
pop
les
cli
mov
jb
sbb
leave
imulb
adc
xchg
imul
cs
divb
or
adc
subl
mov
adc
addl
icebp
adc
rcr
lcall
push
outsl
inc
imul
leave
notb
mov
les
or
push
icebp
ja
adc
subl
mov
adc
movl
push
pushf
in
icebp
xchg
or
leave
notb
or
sub
xchg
or
jbe
stos
xor
dec
push
xchg
or
lahf
sub
imul
or
or
adc
push
pop
insl
cmc
push
push
insl
cmc
orb
sub
cmpb
icebp
xchg
or
push
icebp
xchg
or
enter
shlb
xchg
or
les
mov
je
pop
call
leave
notb
or
cmp
popf
mov
or
test
xchg
xchg
push
xchg
or
push
dec
xchg
pop
sub
xchg
or
ja
shll
dec
jo
xor
xchg
or
mull
ret
imulb
mov
push
inc
das
push
push
icebp
xchg
sub
jl
fwait
mov
xchg
dec
xorl
out
adc
sbb
push
icebp
xchg
or
icebp
xchg
or
daa
clc
xchg
or
jns
push
mov
push
jb
dec
icebp
stos
add
pushf
outsb
sbb
notb
xchg
lcall
xchg
testb
les
leave
mulb
jns
sbb
push
mov
cltd
dec
adc
push
nop
xchg
testb
les
leave
mulb
jns
mov
jl
cwtl
or
adc
push
push
insl
cmc
orb
pop
aad
inc
pop
outsb
sub
sub
xchg
or
jae
mov
dec
jo
xor
xchg
or
lahf
iret
or
push
test
mov
xchg
jb
ds
push
xchg
pushf
addr16
dec
xchg
xchg
fisttps
cmp
pushf
jae
repnz
nop
adc
sbb
push
icebp
xchg
or
fisttps
nop
or
adc
lret
add
divb
cmp
divb
cmp
divb
or
push
dec
xchg
arpl
repz
or
jbe
stos
xor
dec
sti
xchg
or
call
outsb
mov
faddp
adc
stos
icebp
int
push
icebp
xchg
or
enter
shlb
xchg
or
iret
mov
push
jae
addr16
inc
das
push
push
icebp
xchg
sub
xchg
adc
fwait
adc
icebp
xchg
push
jle
ljmp
jl
and
sub
xchg
or
ror
add
xchg
cs
into
xor
mov
leave
test
push
or
pop
pusha
imul
lock
push
or
xor
jmp
xor
movlps
and
inc
icebp
mov
or
ja
adc
push
push
insl
cmc
push
push
insl
cmc
orl
cli
push
lret
push
rcrb
or
add
and
lcall
or
lret
filds
lret
sbbb
addr16
inc
das
push
push
icebp
xchg
sub
mov
fwait
and
xchg
dec
xorl
sbb
push
icebp
xchg
or
notl
mov
imul
insb
imul
push
imul
je
xchg
or
push
inc
test
rclb
fwait
dec
pop
dec
xchg
shrl
lret
pushf
bound
lock
or
js
inc
out
sub
mov
push
cwtl
aaa
push
push
movsl
push
sbb
notb
cld
add
or
dec
imul
inc
je
or
push
icebp
xchg
sub
sub
out
sub
add
jae
test
xchg
or
push
icebp
mov
loopne
addr16
cmp
pushf
push
sub
notb
or
dec
imul
sub
sub
imul
cmp
in
mov
or
bound
repz
or
jne
mov
xor
xchg
or
les
lret
popa
or
or
or
adc
push
pop
insl
cmc
push
push
insl
cmc
orb
adc
stos
push
filds
faddl
popf
or
mov
movlps
icebp
stos
sar
or
ljmp
scas
dec
and
test
vmovss
lret
mov
nop
data16
xchg
or
push
icebp
xchg
or
enter
shlb
xchg
or
stos
jnp
jmp
and
adc
insb
xchg
sub
testb
add
stos
mov
inc
ja
or
dec
icebp
xchg
or
das
dec
xchg
ret
xor
ljmp
notl
cmp
imul
aas
insl
pushf
mov
out
dec
pop
pusha
je
or
adc
pusha
sub
xchg
or
jae
mov
dec
jo
xor
xchg
or
mov
test
add
cmc
xchg
or
or
xchg
or
mov
cmpsl
in
adc
sbb
push
icebp
xchg
addr16
inc
das
push
push
icebp
xchg
sub
pushf
adc
fwait
adc
icebp
xchg
push
jg
xor
dec
outsl
jp
pushf
push
sub
notb
fcoml
cmp
pop
stos
icebp
mov
test
enter
icebp
mov
jecxz
stc
sahf
dec
dec
cwtl
cmc
stos
icebp
mov
sub
xchg
or
ds
jno
lock
enter
xor
pushf
gs
icebp
xchg
int
je
or
mulb
lea
adc
enter
leave
mulb
scas
in
movlps
icebp
xchg
or
enter
shlb
xchg
or
rcr
and
int3
xor
lret
aas
imul
dec
icebp
xchg
or
pop
push
insb
rcrb
or
jns
or
sbb
mov
or
xor
push
in
in
or
ret
push
icebp
xchg
lahf
das
repz
adcb
call
inc
addr16
inc
das
push
push
icebp
xchg
sub
xchg
adc
fwait
adc
icebp
xchg
push
jle
imul
stc
loope
pop
push
iret
pop
jne
int
insb
mov
mov
push
mov
dec
icebp
stos
adc
inc
adc
fdivrs
sbb
pushf
mov
fimuls
jns
loop
aaa
imul
push
push
pushf
mov
fimuls
jns
adc
shrb
out
mov
out
xchg
addr16
inc
das
push
push
icebp
xchg
sub
pushf
adc
fwait
pop
push
icebp
xchg
push
jg
mov
add
push
mov
push
inc
das
push
push
icebp
xchg
sub
movsb
adc
fwait
push
push
icebp
xchg
push
jl
popa
movsb
add
imull
or
adc
leave
cwtl
or
adc
push
dec
insl
cmc
push
push
insl
cmc
orl
mov
mov
inc
ja
or
push
adc
adc
cwtl
or
or
mov
rclb
push
pushf
xchg
dec
and
inc
icebp
mov
mov
push
out
sbb
push
icebp
xchg
test
inc
popf
test
sbb
pushf
mov
insb
sbb
pusha
enter
icebp
adc
enter
leave
test
push
inc
das
push
push
icebp
xchg
sub
pushf
adc
fwait
and
xchg
push
jg
frstor
push
pop
lock
insl
pushf
test
fimuls
into
aas
insl
pushf
lea
mov
adc
sarl
xchg
test
xchg
or
aaa
imul
mov
xchg
or
leave
notb
nop
jecxz
adc
sub
xchg
or
std
pop
pop
xchg
insl
outsb
cmpl
arpl
pop
loopne
inc
and
or
ja
adc
push
push
insl
cmc
push
push
insl
cmc
orl
call
test
push
pushf
xchg
aas
leave
mulb
add
jb
or
adc
testb
xchg
and
adc
movsl
push
sbb
notb
dec
imul
iret
or
sbb
push
icebp
xchg
xchg
test
and
mov
cwtl
test
jle
push
icebp
adc
les
add
xchg
or
pop
pop
stos
icebp
leave
in
icebp
xchg
or
enter
shlb
xchg
or
shl
push
adc
push
outsb
mov
push
movsl
push
sbb
idivb
or
adc
test
mov
add
icebp
int
push
icebp
xchg
or
enter
shlb
xchg
or
sub
jmp
or
test
cli
fldt
or
sahf
xchg
xor
xchg
cli
fldt
inc
dec
jle
sar
mov
push
sbb
pushf
in
out
cli
stos
icebp
in
icebp
xchg
or
enter
shlb
xchg
or
push
rorl
or
repz
or
pop
inc
inc
pop
fsubrp
adc
insl
pushf
addr16
inc
das
push
push
icebp
xchg
sub
test
fwait
and
xchg
dec
xorb
and
imul
sub
xchg
or
ja
shll
dec
jo
xor
xchg
or
sahf
or
push
dec
jo
or
mov
mov
nop
push
hlt
movhlps
test
add
dec
icebp
xchg
in
icebp
xchg
or
dec
cmpsb
or
js
xchg
pusha
push
mov
mov
xlat
loopne
pop
cmc
xchg
lods
mov
push
icebp
daa
mov
mov
add
nop
sahf
mov
adc
icebp
xchg
or
enter
shlb
xchg
or
out
out
lods
out
push
or
icebp
xchg
add
fiadds
push
inc
das
push
push
icebp
xchg
sub
jl
fwait
mov
xchg
dec
xorl
xor
mov
or
leave
notb
mov
test
sbb
dec
icebp
xchg
or
leave
testb
jecxz
movhlps
loop
or
push
icebp
ja
adc
popa
insl
cmc
push
push
insl
cmc
orl
les
rolb
inc
icebp
dec
xchg
xchg
push
icebp
xchg
or
dec
insb
sbb
add
push
adc
lahf
addr16
out
adc
push
icebp
xchg
cs
fwait
test
or
imul
ror
bound
dec
icebp
stos
add
pushf
outsb
sbb
notb
xchg
lcall
xchg
testb
les
leave
mulb
jns
sbb
push
mov
cltd
adc
push
nop
xchg
testb
les
leave
mulb
jns
mov
or
ja
adc
push
push
insl
cmc
push
push
insl
cmc
lea
adc
jno
mov
or
push
icebp
ja
adc
subl
orl
jp
jno
pushf
sbb
test
jo
xchg
outsb
push
mov
clc
out
adc
push
icebp
xchg
or
fmulp
mov
push
test
fcomps
xor
mov
push
test
and
dec
icebp
xchg
or
sti
pop
push
out
sbb
pop
stos
icebp
push
mov
mov
sbb
push
icebp
xchg
in
icebp
xchg
or
mov
pop
shrl
insb
sbb
dec
icebp
xchg
or
mov
sbbb
mov
or
push
icebp
xchg
or
enter
shlb
xchg
or
xchg
inc
and
mov
xchg
jl
test
xchg
adc
faddp
and
jnp
movlps
icebp
xchg
or
enter
shlb
xchg
or
fimuls
aam
sub
pop
and
adc
icebp
xchg
or
enter
shlb
xchg
or
dec
pop
subb
pushf
cmpsb
adc
divb
or
adc
push
dec
insl
cmc
push
push
insl
cmc
orl
add
insb
jb
leave
mulb
outsl
adc
adc
and
dec
push
adc
leave
negb
cmc
movlps
xchg
or
shll
test
xchg
xchg
mov
xchg
or
push
or
leave
inc
mov
or
dec
icebp
xchg
mov
adc
xor
test
xchg
or
push
icebp
xchg
mov
inc
cmp
mov
push
icebp
adc
inc
jno
or
push
icebp
xchg
or
xchg
xchg
or
out
ljmp
lods
icebp
pop
in
or
test
test
adc
inc
jne
or
adc
icebp
xchg
or
scas
pop
adc
daa
add
or
add
scas
dec
icebp
mov
dec
mov
push
jb
dec
icebp
stos
add
pushf
outsb
sbb
notb
xchg
lcall
xchg
testb
les
leave
mulb
jns
sbb
push
mov
cltd
pop
push
push
icebp
push
nop
xchg
testb
les
leave
mulb
jns
push
int3
imul
pop
lret
das
leave
notb
int
icebp
enter
xchg
or
enter
shlb
xchg
or
and
or
jb
cli
inc
je
or
push
icebp
xchg
mov
add
enter
xchg
dec
xorb
leave
notb
mov
ror
mov
cmpsl
or
xor
icebp
xchg
bound
sahf
and
ret
icebp
xchg
or
push
icebp
xchg
or
enter
shlb
xchg
or
xor
sbb
lret
sbb
jno
push
leave
xor
lret
or
test
sbb
xchg
nop
xchg
xchg
or
push
data16
xor
out
orps
dec
sub
sarl
or
or
or
adc
popa
insl
cmc
push
push
insl
cmc
orb
sub
dec
pop
pop
jae
test
push
cld
adc
mov
mov
rcrb
orb
and
imul
dec
icebp
xchg
test
pop
pushf
test
add
or
cmp
test
stos
and
icebp
xchg
test
pop
pushf
test
add
adc
cli
add
mov
sub
leave
notb
int
pushf
sahf
sbb
imulb
sub
xchg
addr16
inc
das
push
push
icebp
xchg
sub
mov
fwait
adc
icebp
xchg
dec
xorl
popf
or
sbb
movhlps
je
push
test
mov
dec
imul
pusha
icebp
xchg
or
leave
notb
nop
sar
adc
sarb
xlat
test
push
pushf
in
icebp
xchg
or
and
mov
jne
sub
and
movlps
insl
pushf
addr16
fimuls
xorb
xchg
xchg
cmpsb
lock
or
adc
xchg
nop
push
lock
or
leave
test
sbbl
add
notb
nop
int
movlps
ret
test
dec
mov
test
adc
pop
xor
pushf
push
test
fucomip
xlat
inc
imul
add
ror
cmp
test
scas
insb
outsl
push
pop
cli
addl
imul
stos
or
cli
add
adcb
pop
xor
pushf
dec
test
fsubrp
adc
jbe
test
inc
test
sbb
pop
xor
pushf
dec
test
fsubrp
adc
jbe
test
inc
xchg
insb
rclb
insb
add
xor
pushf
pop
stos
icebp
and
leave
jl
sbb
negb
icebp
xchg
or
push
icebp
xchg
xchg
mov
sbb
pushf
or
push
dec
xchg
addr16
push
sub
stos
icebp
and
xor
adc
push
test
vminss
mov
add
andl
in
movhlps
je
cmp
mulb
push
ret
stc
out
adc
adc
push
xor
xchg
dec
xchg
addr16
push
sub
stos
icebp
and
xor
adc
push
test
shlb
adc
test
leave
divb
sbb
jecxz
movhlps
into
jg
es
push
icebp
xchg
fdivl
add
stc
lods
pop
and
sub
add
jle
adc
pop
addr16
inc
das
push
push
icebp
xchg
sub
test
fwait
pop
push
icebp
xchg
dec
xorb
xchg
push
mov
dec
enter
lcall
in
jp
sub
xchg
or
pushf
int3
into
pushf
cmpsl
pusha
stos
gs
and
push
icebp
xchg
or
leave
idivb
or
push
icebp
xor
push
jle
or
add
xor
mov
movlps
dec
mov
xor
xchg
popf
icebp
xchg
or
push
icebp
xchg
or
enter
shlb
xchg
or
sbb
jae
inc
cmp
pushf
or
je
or
or
or
adc
popa
insl
cmc
push
push
insl
cmc
jle
push
icebp
fstps
or
jae
fstp
shrl
mov
xchg
nop
cmp
in
xchg
or
xchg
scas
pop
inc
dec
inc
ds
lock
or
cli
out
adc
adc
les
test
push
pushf
push
lods
outsb
lcall
divb
or
adc
push
pop
insl
cmc
push
push
insl
cmc
mov
adc
adc
sbb
add
imul
leave
divb
or
adc
push
jns
cmc
push
push
insl
cmc
orl
aad
inc
or
jo
push
stc
jb
cli
inc
jne
or
sub
ror
and
test
xchg
or
sub
xchg
or
jns
ret
xor
dec
add
or
test
or
xchg
or
icebp
xchg
or
push
icebp
push
nop
add
movhlps
sub
sti
or
icebp
and
adc
icebp
xchg
or
leave
cmp
xchg
or
and
mov
sbb
lret
inc
lret
mov
sbb
bound
xchg
or
out
orb
mov
les
mov
xchg
or
push
punpcklbw
add
pop
pop
pop
stos
icebp
int
push
icebp
xchg
or
enter
shlb
xchg
or
xchg
call
dec
jnp
push
pop
scas
cwtl
les
push
icebp
xchg
or
leave
idivb
or
sbb
icebp
fists
incb
lods
jo
or
push
dec
nop
into
fwait
xlat
ret
pop
icebp
push
out
aas
imul
sub
orb
inc
dec
imul
push
icebp
sbb
dec
push
adc
imul
dec
imul
pop
jmp
into
and
notb
or
scas
inc
adc
xchg
push
xacquire
or
mov
or
lods
xchg
or
sub
xchg
or
ja
shll
dec
jo
xor
xchg
or
pop
cmp
out
mov
inc
dec
imul
push
icebp
xchg
sub
pushf
adc
fwait
sbb
xchg
push
jg
jle
cmpsl
xchg
mov
mov
xchg
sub
or
imul
scas
icebp
xchg
or
leave
test
ror
lret
lock
pop
lahf
insl
mov
dec
icebp
xchg
or
mov
icebp
and
iret
and
xchg
pop
sub
xchg
or
jns
ret
xor
dec
add
or
scas
dec
xchg
mov
xchg
or
leave
notb
lea
xchg
or
fisubrs
movlps
mov
dec
icebp
stos
adc
inc
adc
fcomps
or
jb
pushf
mov
fimuls
jns
loop
aaa
imul
push
push
pushf
mov
fimuls
jns
ljmp
or
int
push
ror
cmp
test
xchg
mov
icebp
xchg
or
push
mov
in
push
rclb
mov
cmp
addr16
inc
das
push
push
icebp
xchg
sub
je
fwait
mov
xchg
dec
xorb
xchg
mov
inc
push
jmp
adc
movsl
inc
add
imulb
or
xchg
sbb
push
lea
add
dec
inc
xchg
xchg
dec
icebp
xchg
or
leave
idivb
in
icebp
xchg
or
aad
test
out
sub
test
jl
test
push
out
xor
or
xchg
mov
or
bound
les
nop
out
movlps
imul
push
icebp
popf
lds
repnz
or
ja
loop
imul
imul
outsl
insl
pushf
pop
sub
xchg
or
out
jns
mov
rcrl
push
ljmp
movhlps
int
nop
imul
adc
clc
xchg
or
cmpsb
mov
lret
cli
insl
mov
jmp
push
cmp
movhlps
insb
push
leave
imulb
and
xchg
lahf
jne
push
das
xchg
jge
sbb
shl
fisubrs
in
pushf
test
add
imul
adc
xor
leave
notb
aad
pushf
cs
imulb
push
stos
or
push
icebp
xchg
insl
push
je
or
divb
in
icebp
xchg
or
enter
shlb
xchg
or
inc
jl
inc
leave
notb
jmp
test
leave
imul
mov
stos
icebp
leave
in
icebp
xchg
or
enter
shlb
xchg
or
shrb
mov
aad
jne
or
sbbl
or
scas
dec
movsb
mov
xchg
dec
stos
cmp
jae
cli
adc
xor
nop
dec
icebp
xchg
adc
xchg
aas
and
push
icebp
xchg
or
push
icebp
xchg
or
push
icebp
xchg
or
push
icebp
xchg
or
push
mov
fwait
insl
fbld
stos
subb
stos
cmpsb
dec
ja
cmpsl
push
mov
movsb
push
stos
cmpsb
dec
xchg
pop
movsl
push
mov
lods
or
stos
insb
mov
ja
test
push
stos
xorb
lods
jo
dec
cmpsl
jo
bound
test
scas
sub
scas
dec
mov
cmpsb
data16
imul
test
jno
scas
insb
cmpsl
dec
ja
cmpsb
fs
inc
jmp
sub
jno
ja
mov
adc
popa
subl
sub
jno
scas
imul
ja
cmpsb
popa
sahf
sub
movsl
dec
cmpsl
outsl
cmpsb
push
test
sub
inc
inc
mov
imul
sub
xchg
dec
mov
sub
lods
jmp
dec
test
inc
lret
sub
dec
in
jg
push
into
dec
jno
ja
jno
mov
push
cs
adc
insb
push
xchg
or
ja
jno
ja
lods
jmp
push
cltd
dec
stos
dec
jl
ja
push
adc
dec
in
lret
pop
test
ja
jno
ja
jno
mov
inc
cmpsl
adc
jno
bound
mov
arpl
ja
jno
ja
cltd
or
ja
cltd
or
xchg
or
leave
notb
or
adc
pop
les
leave
test
push
icebp
xchg
lea
notb
nop
cs
adc
subl
stos
icebp
mov
les
leave
test
fildl
pop
xchg
or
pushf
mov
xlat
int3
mov
adc
orl
mov
push
movsl
mov
leave
mulb
lahf
jmp
cmp
mov
icebp
mov
or
xor
ljmp
pusha
popl
jge
pushf
pop
les
addr16
dec
xchg
mov
icebp
pop
xchg
and
inc
mov
adc
test
nop
cs
adc
subl
stos
icebp
mov
les
leave
test
fildl
pop
xchg
or
pushf
mov
xlat
int3
mov
adc
orl
in
imul
mulb
lahf
jmp
cmp
mov
fxch
mov
mov
stos
icebp
adc
sbb
pushf
cli
mov
insb
sbb
jge
pushf
pop
les
addr16
dec
xchg
mov
fsts
dec
inc
and
inc
mov
adc
test
rolb
adc
test
leave
imulb
scas
push
icebp
xchg
mov
jl
test
xchg
xchg
mov
pushf
into
and
notb
or
pusha
imul
push
icebp
adc
lret
mov
xor
pop
push
pushf
mov
addb
jnp
xchg
or
leave
negb
into
test
test
loope
mov
add
inc
adc
enter
vmovss
movhlps
mov
xchg
sbb
mov
xchg
lret
nop
dec
cmp
adc
jl
sbb
je
cwtl
test
fxch
mov
loop
dec
imul
mov
movlps
sbb
mov
adc
insl
pushf
cli
fildl
ljmp
in
mov
add
insl
pushf
cli
fcmovnu
int3
mov
ljmp
cmc
mov
or
insl
pushf
cli
frstpm(287
int3
mov
ljmp
lret
int3
mov
adc
subl
push
test
xor
negb
rcrl
xlat
mov
adc
nop
aaa
and
adc
addl
xor
test
push
out
icebp
xchg
or
push
icebp
xchg
or
push
icebp
xchg
or
push
enter
icebp
mov
je
jnp
push
icebp
xchg
or
jne
pushf
insb
adc
xchg
in
fbld
mov
pop
add
adc
ljmp
mov
pop
add
adc
ljmp
push
icebp
xchg
or
mov
pop
in
fbld
leave
movsb
mov
vmovshdup
push
loope
cli
daa
jmp
or
push
icebp
push
rcll
xchg
or
xchg
daa
fbld
inc
adc
or
push
insl
mov
jae
test
xchg
xchg
aaa
icebp
xchg
or
push
icebp
xchg
xchg
addb
cli
out
sbb
push
fbld
jns
and
insl
mov
lret
and
push
data16
push
test
es
test
push
sub
push
sbb
push
push
push
adc
cmp
pop
adc
sbb
icebp
xchg
xchg
addb
jns
fwait
xor
notb
cli
addl
push
dec
mov
xchg
or
push
push
pushf
inc
imul
adc
imul
mov
push
xchg
xchg
push
xchg
or
leave
notb
push
push
idivb
daa
xchg
and
adc
out
sbb
icebp
xchg
mov
cmpsb
popa
and
out
sub
xchg
or
push
mov
into
ljmp
sbb
icebp
xchg
inc
dec
test
nop
sub
and
dec
ret
xchg
nop
repz
scas
mov
xchg
inc
adc
and
dec
icebp
xchg
or
inc
je
cli
adc
notb
int
mov
xchg
test
iret
mov
push
es
add
into
push
or
sbb
adc
inc
mov
stos
fstpl
lods
mov
push
icebp
repz
fmull
mov
or
adc
sbb
adc
out
sbb
adc
pop
adc
call
icebp
xchg
or
or
push
sub
jg
vmovsldup
les
xor
push
insb
sbb
nop
sbb
test
add
mov
sbb
nop
sbb
adc
les
nop
mov
movlps
ja
or
mov
test
mov
stos
fisubl
icebp
popf
cmp
pop
out
pop
fbld
scas
cmp
push
inc
adc
mov
test
mov
stos
fisubl
and
push
pop
out
pop
fbld
scas
cmp
push
inc
adc
jle
enter
test
in
icebp
xchg
or
int
xchg
or
inc
and
int3
adc
into
push
or
sbb
adc
cmp
or
nop
cmp
dec
pop
nop
xor
movhlps
je
pop
nop
ret
or
adc
cmc
xchg
or
arpl
xchg
or
sub
xchg
lds
divl
icebp
arpl
jo
nop
scas
dec
mov
adc
sbb
and
xchg
or
popa
jo
push
mov
arpl
jo
cmp
jo
mov
inc
cld
mov
scas
push
mov
mov
gs
in
sbb
loop
add
jg
fxch
mov
fists
sub
xchg
or
xor
xchg
push
icebp
xchg
or
sub
xchg
or
inc
fdiv
push
fs
stos
adc
and
cli
add
cmpsl
sbb
data16
fists
loop
subl
stos
subl
test
loop
mov
in
lahf
sub
iret
inc
mov
ret
testl
subl
mov
mov
dec
or
inc
xlat
imul
cmp
mov
fisubrs
jecxz
sub
ret
out
sbb
sub
xchg
jecxz
pop
xor
dec
xorb
out
adc
clc
repnz
or
inc
js
sub
jge
rclb
push
fcmovb
rcl
mov
xchg
pop
fcmovb
test
xor
inc
jmp
fcmovb
lock
or
pop
sub
jo
cmp
ret
cli
ret
sti
inc
jecxz
inc
shll
mov
ret
inc
dec
mov
subl
stos
subl
stos
subl
stos
subl
stos
subl
stos
subl
stos
subl
stos
subl
stos
pop
aaa
pop
stos
andl
roll
pop
mov
fstpt
jns
jge
sbb
das
jge
fstpt
fisubrs
jge
pushf
filds
push
adc
adcl
es
aas
divl
idivb
pop
arpl
cmp
adc
xchg
mov
push
mov
push
imul
ret
add
inc
xchg
mov
xchg
pop
push
negb
lret
dec
dec
xchg
mov
aam
fistps
mov
rcr
add
int3
pop
mov
jle
pop
or
push
arpl
add
int3
jae
cmpsl
add
testb
das
loop
movsl
mov
push
jbe
and
int3
mov
sbbb
int
mov
lea
ret
cwtl
jb
sub
jp
mov
test
dec
aaa
sbb
sub
dec
add
out
imul
sub
sbb
popf
cwtl
ja
inc
xchg
scas
xchg
xchg
outsl
xchg
out
pop
pusha
int3
xchg
jnp
imul
stos
popa
icebp
movq
shrb
idiv
cmp
jb
scas
fs
iret
repnz
sar
lret
out
sub
mov
push
sarb
das
adcl
inc
aam
call
dec
inc
dec
je
cmpsl
dec
arpl
ja
hlt
sbbl
xlat
xchg
pop
push
negb
sub
cmp
test
clc
fldz
dec
mov
insl
addl
fsubrs
or
sbb
cltd
or
int3
mov
loop
lahf
mov
adc
or
cmp
rorb
push
jbe
nop
jle
negl
testb
xor
cmp
sub
movsb
lcall
iret
int
clc
sbb
xchg
lea
mov
loope
push
loopne
sub
jp
mov
mov
jne
cld
inc
in
or
inc
add
cltd
out
test
gs
jl
pusha
sbb
int3
scas
mov
cmp
push
inc
xor
mov
inc
push
jbe
ds
and
sbb
pop
jne
cmp
sub
imul
mov
add
rcll
loopne
in
mov
aad
into
ljmp
mov
orl
push
push
out
sbb
and
int3
jmp
stos
dec
mov
lret
inc
mov
das
loop
mov
mov
int
not
repz
cld
leave
jp
xchg
pop
inc
xor
inc
loopne
pusha
int3
dec
out
fsubl
fsubrl
mov
cli
ret
inc
inc
pop
gs
out
xor
jbe
push
cmp
add
sbb
inc
push
mov
stos
mov
push
dec
adc
repz
pushf
cld
leave
sub
popf
xor
jp
xchg
fildl
pop
stos
addl
nop
fld
cltd
sub
mov
pushf
adcb
mov
mov
xor
shl
lcall
jecxz
leave
and
repz
xor
subb
jno
or
lret
cmp
in
jb
or
push
lea
xor
scas
pop
sbb
shl
push
adc
insb
dec
dec
cmp
dec
sub
enter
xor
fwait
in
fsubs
lret
dec
add
bnd
and
lret
dec
pop
addr16
push
testb
sub
mov
sarb
push
pop
jne
scas
mov
dec
push
mov
scas
mov
pop
inc
jge
push
addr16
jp
stc
push
stos
test
sub
test
loopne
add
outsb
inc
imul
inc
test
fstpt
pop
loop
and
in
and
in
push
xchg
xlat
mov
fwait
enter
lret
cmpsb
ljmp
dec
data16
loop
addl
int3
cli
dec
int
and
outsb
pushl
mov
popa
sub
mov
ret
int3
sub
ret
bound
push
mov
jae
sub
fimull
sahf
lret
popfw
adc
cmp
inc
xor
nop
ja
addr16
push
out
push
push
lahf
push
imulb
mov
jns
xchg
jle
jp
fildll
loop
or
repz
out
dec
les
nop
out
jo
mov
pusha
int3
jbe
incb
sub
push
push
arpl
fnstcw
jo
getsec
cli
fs
fildll
lock
mov
mov
mov
inc
inc
ja
jg
pop
cmp
mov
sub
jno
push
xor
mov
cmp
xor
fcmovbe
aam
pop
mov
call
loope
sbb
xchg
mov
xchg
scas
cltd
lods
jle
xor
cmp
mov
xor
adc
xor
popa
mov
out
stos
mov
xor
adc
push
jne
ss
gs
cmp
les
movsb
mov
pusha
int3
imul
ljmp
repz
sub
js
sub
rolb
push
xchg
ror
mov
pop
scas
fmull
or
sub
xchg
out
andl
rorb
dec
sbbb
sub
jo
pushf
pop
fcoms
xlat
jle
insb
sub
int
int
jns
lods
sub
dec
inc
push
sbb
dec
repnz
cmpsb
xlat
cmc
mov
cli
in
iret
mov
sbb
mov
xchg
ss
fcoml
cmp
add
lret
dec
iret
cmc
mov
call
aam
pop
ja
mov
stos
mov
call
aam
mov
clc
fcoml
cmp
jmp
repz
lret
dec
shr
fwait
inc
xchg
cmpsb
dec
inc
mov
mov
ret
test
iret
mov
mov
push
mov
dec
fildll
test
addr16
jg
dec
and
cs
mov
scas
shlb
xchg
pop
shlb
mov
aas
pop
dec
lret
mov
psubusb
xorl
pop
pop
push
not
les
xchg
jo
add
dec
push
dec
add
dec
sti
push
mov
dec
in
sbb
cmp
outsb
push
adc
and
call
loop
cmpsb
ficomps
xor
lods
mov
fstpl
aaa
ljmp
cmp
rclb
mov
cmp
adc
hlt
cwtl
xor
sti
xchg
loopne
add
imul
idivb
fcmovnu
mov
fstpl
mov
sbb
out
push
lret
stc
imul
add
mov
leave
xor
jns
dec
pop
push
mov
jno
pop
inc
shlb
dec
adc
mov
popa
mov
popa
xchg
rclb
popa
jne
sub
subl
movsl
clc
aad
xlat
inc
sbb
push
and
ss
addl
addr16
pop
cmp
jge
mov
xor
addr16
sti
lahf
or
in
mov
call
je
repnz
mov
sbb
inc
testb
scas
xchg
int3
cwtl
jns
cmp
in
push
or
ljmp
sub
int3
dec
inc
mov
mov
lret
aam
mov
inc
push
lock
cmp
mov
fildll
sub
outsb
pop
xchg
std
inc
pop
enter
jg
cmpl
inc
divb
lods
cmp
mov
loop
add
push
nop
scas
xchg
push
mov
xchg
call
stos
push
aaa
pop
mov
mov
je
ds
packuswb
stc
jno
push
xchg
pop
mov
pop
mov
pop
inc
out
scas
das
fsubrl
push
loop
xor
dec
cmp
fimull
mov
mov
cmp
dec
das
sbb
movsb
push
outsl
test
int3
or
pop
rcrl
jno
push
sub
scas
pop
mov
add
inc
inc
loop
add
mov
pushl
cli
decb
fs
das
loop
push
daa
pop
stos
subl
mov
mov
mov
push
push
pop
stos
subl
cwtl
jg
loop
cld
jae
pop
cmp
cmp
inc
fucomp
lahf
in
sub
clc
inc
fstpl
lahf
scas
push
mov
incl
mov
or
std
jnp
jne
sbb
sub
fucomip
scas
push
mov
andb
arpl
sbb
inc
inc
fcmovnbe
lahf
mov
inc
scas
sub
add
inc
push
jle
pop
out
test
andl
mov
das
jp
fdivrs
fisubrs
jge
add
das
jge
fidivrl
fisubrs
jge
pushf
les
mov
fisubrs
xor
cmp
mov
dec
test
xlat
out
inc
outsl
lods
stos
pop
mov
xchg
add
pop
push
test
repz
add
xor
sub
cli
push
push
testb
jle
rorb
aas
aam
add
lret
dec
sbb
inc
mov
shlb
or
push
es
lods
xchg
and
les
dec
outsb
popa
sub
idivb
sbb
mov
repz
xchg
out
inc
xchg
insb
mov
mov
cmp
sbb
mov
xchg
inc
lds
mov
lds
and
mov
imul
mov
jae
dec
pop
mov
fsubrl
leave
inc
pop
pop
insl
fisttpl
fldt
and
adc
or
shll
hlt
je
or
in
dec
pushl
inc
loop
mov
ljmp
mov
pop
xchg
push
ret
lret
sub
ret
sub
subl
dec
xor
fbstp
fsubrl
sub
fistpll
cs
es
and
iret
sarl
pop
sbb
jp
cmpsb
bound
push
negb
add
es
jb
or
cmpsl
dec
mov
and
xor
hlt
mov
add
mov
sub
jne
imul
jne
pop
out
lea
push
shlb
pop
imul
and
sti
jge
adc
stc
shlb
xchg
in
xchg
push
xor
dec
push
jne
dec
stos
fs
jl
fwait
lods
or
sarl
clc
or
xor
int
sub
xorl
cs
gs
mov
jb
hlt
out
xchg
xchg
cld
mov
bswap
dec
sub
and
mov
sbb
cmc
lret
in
in
cli
pop
jle
stos
subl
mov
loope
mov
sub
mov
lret
dec
push
push
mul
xchg
xchg
push
shrl
sbb
test
insb
pop
xchg
pop
lret
lea
test
sub
jmp
loop
into
inc
je
dec
jle
shlb
fwait
add
fwait
cmp
lret
dec
fldcw
pop
mov
mov
add
call
cwtl
lods
cmp
lret
dec
popa
pop
or
adc
and
iret
adc
sbb
or
sbb
pop
sbb
cs
add
test
std
push
out
push
subl
xor
shll
adc
push
adc
cmp
dec
cs
or
mov
ja
sbb
push
int3
cmp
ja
dec
adc
fstl
mov
es
mov
mov
mulb
adc
incl
push
test
test
mov
testb
mov
fsubs
nop
jecxz
out
arpl
sub
movsb
mov
cmp
aaa
jl
popf
sub
je
lea
sbb
xor
add
inc
cmp
cmp
fdivs
loope
mov
add
pop
out
xchg
push
and
mov
jns
pop
fsubp
push
dec
cmp
mov
jl
dec
test
rcrl
rolb
jle
rcrb
xor
fdivp
jns
jo
fs
mov
dec
ss
cvtps2pd
push
jp
xor
mov
jbe
mov
dec
pop
js,pt
pop
and
xor
sbb
push
xchg
mov
cltd
mov
aaa
pop
mov
fwait
outsl
or
iret
cmp
dec
mov
and
imul
aaa
pop
cwtl
hlt
icebp
ljmp
repnz
ds
cmpl
jns
call
das
loop
icebp
jecxz
movsb
pop
imul
call
pusha
shrb
cs
clc
sahf
jne
jle
dec
ret
sub
in
ret
fistl
jp
inc
pop
mov
mov
cmp
or
mov
aam
imul
fcmovbe
jne
jne
incb
adc
push
xor
dec
sbb
scas
pop
sbb
mov
dec
and
clc
pop
std
imul
addr16
add
data16
in
sub
sbb
jle
add
aam
leave
cmp
xor
push
stos
andl
aam
fs
cmp
add
jno
pop
sbb
xchg
and
mov
jg
jl
pop
adc
push
mov
adc
test
pusha
sbb
aad
sbb
lods
popf
pop
rclb
shlb
in
rolb
ficoms
vprotq
leave
ret
rorb
in
mov
pop
lahf
mov
fsub
dec
cltd
pop
xchg
inc
jecxz
inc
popa
push
inc
ret
cmpsb
sahf
pop
push
xchg
pop
lds
sbbl
cltd
iret
rorl
lret
dec
xchg
sbb
ds
push
out
test
jns
push
jg
repnz
mov
shll
sbb
mov
dec
pop
push
inc
loope
in
xchg
mov
and
ds
mov
add
pop
xchg
push
jecxz
xor
mov
inc
into
in
jno
and
and
adc
mov
cltd
mov
movsl
ljmp
test
pop
ret
fnstcw
sbb
jp
ret
adc
cmp
xor
inc
cmp
lea
test
pop
dec
push
clc
es
cmc
imul
mov
or
orl
adc
in
adc
jecxz
repz
mov
sub
in
inc
mov
inc
fisttps
icebp
or
in
lret
stos
xor
jle
icebp
loop
add
push
adc
mov
js
and
push
fbld
pop
pusha
jecxz
push
inc
or
cmp
add
lret
sbb
pushw
push
mov
fcoms
dec
push
mov
hlt
xor
xor
mov
adc
fldcw
mov
push
lods
repnz
lcall
ret
insl
mov
cmp
mov
in
pop
inc
push
or
mov
fdivrl
mov
lods
jmp
mov
mov
in
mov
mov
pop
popa
mov
arpl
and
flds
mov
xchg
insl
stos
lock
mov
hlt
jmp
test
cltd
add
das
and
adc
out
xchg
mov
lods
iret
push
inc
xor
out
mov
sarl
dec
inc
ret
mov
mov
in
mov
ret
inc
xor
or
outsb
lahf
cwtl
mov
push
cld
into
adc
into
out
clc
inc
test
adc
mov
adc
out
inc
sub
inc
cmp
inc
lret
mov
enter
adc
insl
dec
subb
mov
repz
dec
dec
arpl
in
repz
sub
and
push
dec
cmp
imul
lock
adc
cli
roll
inc
test
jecxz
lcall
arpl
sub
jno
push
sub
jge
pop
divl
cmpsl
outsl
ds
clc
loope
stos
pop
push
test
cmp
adc
inc
add
pop
xor
sar
jp
pusha
inc
xor
out
loop
rclb
fwait
cwtl
popa
fsubrs
mov
cmp
fs
adc
jno
jl
or
dec
dec
call
jbe
fmuls
xor
call
sub
adcb
mov
jb
add
jl
mov
lret
pop
inc
imul
outsb
xchg
in
out
adc
jb
xor
jp
loop
dec
mov
lahf
xchg
xchg
loopne
andl
icebp
leave
adc
dec
pop
lcall
sub
scas
mov
icebp
or
loopne
fidivrl
pop
fwait
jnp
fwait
mov
inc
fists
sbbb
push
inc
pop
rcll
sbb
dec
inc
std
je
iret
push
je
and
xor
sarl
imul
lret
or
sub
pop
xchg
push
xchg
repnz
scas
xor
scas
adc
test
adc
ds
push
dec
mov
or
pop
loope
leave
mov
addr16
gs
into
aas
inc
ljmp
fwait
stc
inc
es
sbb
mov
lret
mov
ret
adc
mov
std
jmp
scas
ds
into
adcl
push
mov
adc
scas
dec
dec
push
xor
xchg
dec
repnz
sahf
jne
dec
dec
mov
das
insb
pushf
push
pop
dec
and
into
adc
scas
dec
dec
mov
jae
dec
mov
stos
dec
lods
sub
pop
scas
movsb
cmpsl
mov
mov
fcmovb
mov
fimull
scas
lods
fnstenv
shll
xor
fmul
loope
fsubs
jno
dec
mov
mov
add
int3
xor
mov
mov
dec
shll
cmp
inc
inc
sub
push
jno
dec
inc
jno
xchg
int3
xor
mov
scas
dec
inc
bound
lea
ffreep
fcmovb
xchg
pop
dec
mov
shll
mov
clc
xchg
jge
adc
clc
inc
test
mov
addr16
popf
sbb
ss
sbb
ss
scas
dec
dec
jmp
ss
mov
or
cmp
cmp
dec
mov
or
mov
jl
add
cmpsb
cltd
xlat
add
xor
shl
insb
mov
dec
mov
mov
cmp
iret
ljmp
mov
cmpsl
xchg
cwtl
ds
inc
test
or
dec
mov
cwtl
lea
scas
sub
xchg
cmp
pop
lods
or
lret
scas
jbe
pop
fst
scas
dec
dec
cmpsb
rorl
addr16
xor
addr16
sbb
fldcw
inc
mov
aaa
sbb
fcmovb
ljmp
repnz
sub
push
stos
xchg
mov
push
dec
outsb
push
pop
xchg
xchg
xor
imul
push
push
outsl
stos
xor
adc
repnz
rcll
leave
jp
imul
in
pop
cmp
call
pop
sbb
inc
sub
mov
adc
les
pop
jle
leave
stos
jae
jle
in
mov
sbb
inc
dec
out
mov
mov
scas
xchg
lret
stos
pusha
cmp
add
push
lds
dec
adc
push
dec
iret
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
dec
sub
adc
les
rorb
ljmp
inc
test
push
les
rcl
jecxz
sub
and
mull
les
rolb
mov
xor
and
imul
test
int
imul
push
mov
xor
and
testl
les
rclb
xor
inc
inc
neg
lods
fxch
scas
mov
repnz
mov
xor
and
idivl
mov
int
lods
les
shlb
pop
mov
xor
pop
inc
inc
testl
gs
out
pop
inc
inc
idivl
in
gs
add
inc
inc
mull
fxch
scas
icebp
les
rcrb
inc
mov
xor
pop
inc
inc
divl
std
les
rcrb
mov
dec
ja
int
or
gs
mov
sbb
int
xor
push
sbb
inc
inc
mull
fxch
scas
inc
lds
rcl
mov
xor
pop
inc
inc
neg
addr16
scas
dec
lds
aad
roll
in
xchg
adc
popa
leave
cmp
mov
idiv
and
dec
pop
addb
push
xor
jb
dec
cmpsl
cmp
lods
jns
cmc
lea
or
dec
adc
shlb
call
outsb
cmpb
jae
mov
mov
pop
xor
mov
leave
sahf
or
sbb
jo
dec
and
push
jg
repnz
jbe
add
imul
sub
cmpsb
or
inc
stc
xor
add
cmp
loop
arpl
cmpsb
fisubrs
cmp
jp
add
movl
fwait
mov
dec
iret
push
or
inc
adc
and
insb
add
and
enter
frstor
add
xor
lds
bound
push
cmp
hlt
sbb
xchg
mov
leave
xlat
jecxz
xchg
lods
xchg
and
mov
mov
es
ja
inc
cmpsl
out
ja
xchg
xor
xchg
push
jbe
xor
push
push
mov
jbe
sub
aaa
test
xchg
mov
je
push
push
cmp
adc
or
ja
sbb
iret
push
xchg
cmp
xor
js
ret
adc
dec
xchg
sub
xor
fnsave
mov
mov
push
jecxz
cmp
test
pop
or
mov
test
hlt
enter
sbb
icebp
aad
and
movsl
in
ret
adc
or
ds
push
leave
xchg
in
adc
mov
cmp
fwait
mov
mov
fldenv
mov
aam
enter
push
jmp
bound
pop
or
mov
adc
jns
mov
sub
jnp
and
fs
dec
or
jbe
imul
pop
imul
pusha
dec
lcall
xor
in
ja
or
out
pop
jno
and
inc
cmpsl
imul
inc
addr16
push
mov
xor
jg
push
mov
cmp
sbb
sub
cwtl
outsl
push
mov
loopne
clc
dec
pushf
int3
es
ds
sub
lret
cwtl
cmp
ja
push
ss
mov
loope
inc
int
mov
xchg
inc
or
imul
int3
push
jmp
stos
sti
bound
jl
mov
pushf
sub
dec
cltd
sbb
mov
or
dec
mov
inc
push
or
in
jns
adc
call
dec
lods
or
xchg
or
inc
mov
stos
icebp
xchg
cmp
xchg
repnz
mov
pop
adc
sub
imul
push
inc
xor
mov
out
sub
pop
inc
dec
cmp
xlat
lods
fs
add
lock
push
push
mov
pushf
xlat
dec
iret
push
or
dec
ret
push
cwtl
out
push
jmp
insl
int3
add
cmp
test
jns
pusha
jae
mov
and
dec
out
adc
and
dec
sbb
and
dec
inc
shll
dec
xchg
in
enter
nop
mov
add
mov
cmpsl
repz
jmp
roll
repnz
inc
lock
mov
ljmp
mov
cmc
mov
in
or
mov
push
cmpsb
add
paddw
aam
mov
or
xchg
pop
inc
mov
shll
out
adc
iret
loop
adc
xchg
dec
fmuls
pop
into
mov
jbe
out
sub
fisubl
shrl
scas
sub
inc
pop
pop
sub
fldpi
sbb
das
xchg
testl
sbb
sub
cld
aad
ret
jne
je
and
pop
sti
lret
ret
repz
je
pop
lahf
or
xchg
jbe
dec
inc
movsl
into
mov
cmpsb
in
movsb
xchg
xchg
jl
popa
sbb
and
add
and
fcomps
xor
mov
ficoms
cmp
pop
jno
das
cmpb
mov
stc
fisubs
mov
adc
pop
add
pop
outsb
mov
mov
pop
mov
fnstcw
mov
jmp
cld
mov
mov
inc
cmp
xchg
jg
repz
loopne
mov
sub
mov
cli
jmp
xchg
sbb
push
sbb
add
mov
lcall
imul
cli
ljmp
icebp
push
jmp
lds
stc
mov
fmuls
mov
mov
jmp
iret
add
je
test
push
aas
aad
add
in
mov
xor
mov
sub
mov
jno
pop
push
mov
mov
and
dec
decb
mov
dec
ljmp
pop
mov
pop
mov
loopne
adc
sbb
pop
imul
add
jnp
cmp
and
lret
cmpsl
mov
push
in
sub
lock
in
leave
or
nop
sub
mov
adc
loopne
xchg
dec
mov
div
insb
xlat
inc
loop
scas
sub
fcompl
dec
add
mov
adc
jo
lahf
and
or
or
xchg
imul
out
push
cmp
gs
movb
int
mov
sbb
inc
xor
stos
pop
aaa
sbb
jmp
pop
adc
lock
jb
cmc
shl
rcl
xchg
scas
and
push
lods
sbb
fistps
jmp
test
rclb
fisttpll
pop
pop
adc
fnstsw
jl
lock
insb
test
mov
pushf
rcr
shl
pop
fcompl
xchg
push
pop
shl
popa
mov
popf
mov
mov
mov
cli
and
push
int
sbb
pop
push
inc
add
push
add
push
push
dec
addr16
cli
je
xor
loop
push
dec
jmp
dec
jmp
add
cmp
lret
xor
shr
add
dec
and
pop
addr16
cmp
cmp
clc
push
cmp
mov
cmp
adc
mov
std
sub
jo
lods
xchg
mov
jp
scas
xor
dec
ret
push
cwtl
out
push
sahf
ds
iret
push
pop
aad
loopne
push
test
mov
pop
data16
mov
sti
loope
in
dec
iret
in
xchg
pop
mov
mov
jecxz
inc
sahf
xchg
add
mov
sahf
shlb
mov
pop
cs
pop
stos
and
aad
fs
in
and
mov
push
sub
xchg
mov
mov
pop
incl
push
mov
xor
shll
loop
dec
jmp
aas
mov
test
icebp
stc
bound
sbb
sub
inc
add
xchg
mov
pop
fsubr
inc
jnp
inc
fstps
outsb
pusha
pop
mov
mov
mov
push
mov
dec
mov
fldt
insl
sbb
adc
cmp
or
fists
cli
jl
iret
ret
mov
pushf
bound
add
imul
xchg
rorb
lea
outsl
les
mov
adc
mov
push
sub
lea
mov
push
lahf
sub
xor
inc
in
or
xchg
mov
dec
in
sub
mov
in
dec
iret
test
call
mov
mov
inc
or
push
adcb
mov
repz
xor
cs
inc
into
jl
mov
sbb
scas
sbb
out
test
sub
push
and
pushf
in
pop
rcr
add
insl
and
fmulp
and
jmp
or
ret
rcr
inc
in
jno
pop
add
adc
pop
mov
cmpsb
js
xor
cwtl
fstps
into
push
sub
sarb
dec
cltd
ficomps
hlt
dec
stos
mov
sub
dec
lea
imul
fsubrl
mov
sub
and
fbstp
fs
andl
sti
pop
adc
inc
shl
lcall
pop
push
inc
push
imul
adc
xchg
bound
jbe
in
aam
sbb
pop
fiaddl
lret
repz
mov
and
xor
ret
test
pop
cmp
leave
lahf
and
scas
mov
and
mov
mov
cmpsl
cmp
stc
mov
push
push
inc
xor
push
lds
imul
jnp
and
adc
bound
std
cmc
lcall
leave
jl
loopne
pop
push
sahf
int
dec
mov
sub
cmp
push
bound
and
es
and
inc
lret
ret
mov
xorb
inc
lret
test
lock
lds
xchg
subl
outsb
xchg
mov
inc
inc
jle
movsl
pop
or
in
pop
inc
xor
movsb
ret
and
xchg
in
xor
pop
push
xchg
cli
xlat
pop
andb
xchg
mov
push
icebp
leave
push
xor
cltd
lea
loopne
xchg
dec
or
test
mov
movsl
jns
xchg
ja
aas
jae
in
add
cmp
outsb
int3
add
incl
or
inc
call
negb
outsb
jns
add
inc
xor
in
cs
xchg
xchg
push
mov
addr16
push
mov
popf
push
xchg
xchg
xchg
xor
movsb
sub
cltd
mov
sbb
ja
jb
adc
cltd
sub
mov
push
test
out
loope
icebp
xchg
jb
pop
xchg
mov
sbb
dec
iret
imul
adc
aaa
sbb
fldenv
sub
ret
mov
xchg
inc
sbb
push
sbb
xchg
adc
or
cmpsb
sar
ffree
jmp
test
movsl
nop
xlat
jl
inc
inc
test
mov
scas
imul
add
xor
ret
loope
xchg
and
dec
add
shl
mov
rorb
mov
mov
or
mov
and
ljmp
lret
push
mov
cmp
iret
push
mov
sub
idiv
lods
adc
lock
jb
loope
push
jl
sbb
in
popa
jne
adc
mov
icebp
sbbb
stos
mov
movsb
lret
mov
adc
or
repnz
loope
adc
mov
adc
jge
sbb
push
jmp
bound
stos
lahf
int
data16
push
mov
iret
loop
imul
jbe
ret
repnz
test
cmpsl
add
mov
sti
add
cmp
push
jnp
ficoms
lahf
jb
push
add
test
add
imul
iret
repnz
mov
iret
push
sub
mov
pop
jl
mov
add
rorl
pop
pusha
lods
push
push
jne
sbb
mov
test
insl
in
aam
pop
setb
mov
jmp
add
cmp
popl
xchg
add
dec
cmp
push
inc
enter
outsl
dec
adc
mov
cs
mov
rcrl
and
push
insb
mov
push
imul
push
or
jmp
out
cld
and
pop
add
out
push
movl
sbb
cmp
sbb
xor
inc
ljmp
in
mov
adc
mov
out
mov
push
sti
ja
lahf
or
iret
xchg
mov
in
icebp
inc
outsb
outsb
mov
movsl
add
in
mov
xor
gs
push
repnz
imul
push
out
mov
ljmp
shrb
outsb
arpl
adc
fistps
pop
sub
ret
jmp
lea
test
stc
sbb
lock
jo
or
mov
shrb
jp
lods
sub
stos
ss
mov
test
movl
add
lret
lods
mov
and
cmp
pop
add
fs
stos
adc
sbb
dec
mov
push
dec
popf
or
mov
nop
jp
std
mov
andl
xchg
pop
inc
dec
push
das
fcmovnbe
scas
jno
loope
push
stc
mov
es
shrl
icebp
cltd
and
dec
nop
es
and
lods
sub
mov
add
and
dec
xchg
lods
pop
jnp
les
scas
and
pop
js
sbb
sub
xchg
jnp
lods
xchg
out
inc
mov
push
xor
stc
push
loop
nop
imul
jmp
sub
dec
inc
xor
jno
stos
pop
movsb
xor
enter
pop
jmp
xchg
jnp
jbe
pop
push
lahf
scas
mov
xchg
jbe
or
cmpsb
and
adc
inc
fisttps
shufps
jle
mov
cli
jmp
lock
push
loope
rcl
jns
mov
pop
cmp
test
dec
ret
push
jecxz
scas
ficoms
sub
mov
jle
mov
mov
dec
enter
jns
mov
push
xor
mov
loop
jle
cmpsl
in
pushf
btc
xlat
cwtl
sbb
or
mov
mov
xor
sub
repz
inc
enter
dec
sub
repz
sub
pop
mov
push
jne
mov
mov
iret
jmp
outsl
and
pop
mov
cmp
xchg
aad
movsl
jne
aaa
in
out
add
sbb
xor
mov
inc
ficomps
mov
bound
jg
es
popf
mov
xchg
dec
mov
gs
cwtl
ja
mov
addb
inc
shl
xchg
and
add
ds
lds
or
inc
lock
gs
mov
mov
data16
push
aam
imul
int3
lea
xor
push
out
sahf
inc
shrl
in
imul
mov
push
sub
fstpl
lods
fisttpl
fisttps
or
and
lret
xchg
ds
addl
sub
daa
js
mov
inc
mov
bound
nop
subl
mov
bound
leave
test
or
push
call
mov
daa
in
stos
out
in
inc
ret
cltd
dec
cmp
cmc
jb
xchg
insb
lret
sbb
sbb
inc
sbb
ret
sbb
adc
adc
dec
inc
sub
jno
xchg
pop
inc
mov
fldcw
pop
icebp
gs
jb
mov
ja
inc
mov
inc
jae
data16
dec
inc
aad
loopne
dec
jne
sub
and
andb
inc
jle
lods
pop
pop
cmp
add
cmp
xchg
out
data16
popa
inc
jmp
in
out
sbbb
pop
scas
xchg
insl
cmp
mov
inc
test
pop
lahf
aaa
les
cmp
das
sbb
inc
add
mov
nop
insb
and
mov
call
loope
sbb
adcb
dec
xor
and
std
cwtl
enter
cmc
aaa
idivb
fdivp
loopne
scas
icebp
inc
and
std
stc
leave
insb
sahf
cmp
mov
aam
lcall
fwait
dec
aaa
sahf
mov
jp
inc
inc
inc
repnz
mov
mov
xchg
pop
inc
sub
mov
or
out
dec
inc
rcll
mov
pop
mov
sbb
loopne
mov
jns
stc
sbb
sub
out
push
imul
sbb
xor
mov
add
mov
in
out
int3
jmp
imul
mov
repnz
push
dec
ficomps
loop
inc
in
cmp
gs
fildl
jmp
jbe
shll
aaa
add
dec
xor
lea
iret
lahf
pop
xchg
fmull
mov
shrb
pop
inc
stos
pop
sub
cltd
out
pop
or
dec
jo
outsb
mov
adc
mov
aaa
dec
fisttpl
cmc
dec
push
jecxz
inc
xor
ds
or
pop
xor
pop
dec
fdivs
movsb
pushf
in
sbb
sbb
adcb
imul
and
scas
xchg
mov
jae
sti
out
adc
mov
inc
xchg
mov
lret
mov
les
push
lds
pop
popa
aam
movl
out
out
les
sbb
movzbl
outsb
fdivl
push
mov
das
dec
es
scas
add
xor
fs
ret
popa
inc
or
cmpb
inc
dec
xchg
pop
or
dec
jno
cmp
jl
les
inc
adc
mov
sub
pop
hlt
sub
adc
aam
xor
sub
bnd
and
test
jo
mov
dec
sbb
xor
mov
xchg
sahf
dec
cltd
inc
inc
add
imul
lret
rcll
mov
jmp
xor
pop
inc
iret
mov
mov
jmp
in
pop
fs
pop
outsb
aad
imull
add
mov
mov
sub
mov
pop
sub
loopne
jmp
sti
mov
push
in
std
push
jle
xor
and
adc
pop
sbb
push
mov
cmpsb
nop
push
ds
cwtl
fbstp
mov
movsl
jne
lcall
gs
mov
repz
sub
add
aam
mov
ljmp
icebp
lods
mov
mov
add
jb
repnz
cmp
gs
cmpsb
mov
jl
aas
or
xchg
fstl
dec
and
mov
sbb
cmp
xlat
nop
jmp
cld
out
pop
mov
cmp
mov
jae
and
hlt
lahf
imulb
decl
inc
xor
loopne
lds
cmp
adc
clc
jmp
aad
iret
push
sahf
or
int3
cmp
mov
xor
cmc
dec
ds
cmp
mov
jmp
sbb
dec
or
push
lock
jle
inc
mov
sub
push
push
pusha
adc
xor
and
or
push
cmpsb
sub
shlb
push
dec
fists
cmp
sti
jo
ret
outsb
lock
or
mov
add
push
aam
push
pop
sub
std
int
push
or
inc
outsb
cmp
lods
mov
icebp
xchg
dec
popf
add
lods
jb
cmp
outsb
sub
scas
pop
test
mov
test
rorb
mov
mov
loopne
sbb
and
or
test
pop
out
lret
sbb
cmpb
lods
cld
mov
pop
clc
sub
cmp
daa
mov
push
pop
iret
repnz
dec
mov
push
add
cmpsl
rcr
dec
jbe
fdivl
cmp
dec
iret
insb
pop
or
adc
jnp
ret
lods
mov
ja
sub
pop
sti
pop
xor
jg
inc
shlb
sub
movb
or
dec
divb
mov
xchg
dec
or
and
jmp
sbb
mov
pop
fistpll
test
fs
cmc
push
jae
jecxz
push
clc
cmc
push
mov
nop
xchg
dec
addr16
pop
fs
mov
ficomps
jmp
jb
add
sub
pop
enter
sub
dec
sbb
mov
gs
jg
or
movsl
push
xor
lock
fimull
sahf
xchg
pop
out
push
jg
jns
mov
xchg
mov
jmp
addl
test
fs
cmp
inc
mov
push
ds
xchg
fs
sub
push
xchg
enter
jbe
xchg
xor
pushf
pop
sarb
stc
into
push
pop
repnz
insl
xor
in
push
sub
bound
shlb
sarb
sbb
movsl
adc
gs
xchg
mov
mov
xchg
call
jb
inc
into
ss
cmc
call
jmp
mov
xchg
daa
jbe
lds
adc
sub
push
das
or
insl
ja
lock
xor
les
dec
sbb
outsl
cmp
jmp
mov
adc
xchg
rorb
icebp
push
xlat
or
xchg
pop
lcall
add
iret
mov
add
sub
les
dec
cmp
xor
movsb
roll
push
push
xor
stc
push
loop
popf
mov
dec
sub
mov
sub
sub
cmpsl
js
push
xchg
iret
and
and
mov
icebp
push
sbb
or
aad
dec
sbb
mov
lods
lea
cli
mov
test
mov
imul
loope
dec
mov
push
loop
fimuls
xlat
mov
mov
sti
push
inc
rorb
in
loop
push
mov
push
movsl
daa
test
inc
and
neg
cmp
insl
dec
shufps
icebp
jne
arpl
mov
push
xchg
mov
cmp
mov
es
setge
mov
fsubs
lahf
in
add
out
xchg
pop
cmp
inc
test
xor
xchg
sub
add
pop
rol
xor
pop
lods
xchg
sub
sbb
aad
adc
and
jecxz
into
addr16
xlat
xchg
aaa
daa
js
adc
mov
jno
ret
adc
jecxz
push
adc
xchg
mov
pop
loopne
ljmp
inc
adc
loope
push
stc
jg
and
lock
jp
xor
ljmp
inc
aam
xor
cmp
lcall
pop
mov
and
pop
xor
mov
xchg
addl
push
adc
in
dec
xor
popa
or
insb
fwait
mov
into
test
push
popf
test
mov
and
arpl
xor
ss
mov
cmpsl
jo
xchg
jns
pop
xor
add
incl
aaa
mov
adc
pop
dec
push
push
xor
mov
xchg
jp
fimull
cs
jns
test
push
inc
fxch
cltd
cmp
ja
clc
xor
stos
add
xlat
fisttps
xor
shlb
jl
or
hlt
rol
xlat
daa
adc
mov
or
or
pushf
xor
in
jnp
xchg
fdivr
inc
add
push
out
cmc
shll
in
push
mov
push
cmp
inc
imul
nop
mov
int
jle
xlat
xchg
mov
xor
mov
add
mov
ja
push
mov
or
xchg
dec
fistpl
mov
mov
ja
mov
rcll
jl
jnp
aad
ret
mov
pop
or
rorl
pop
pusha
lods
faddp
xor
rcll
inc
inc
cmp
xor
ljmp
jp
jle
call
test
loope
sahf
sbb
sub
imul
rcrb
neg
test
pop
fsub
mov
imul
loope
aas
push
push
idiv
fiadds
or
mov
pop
leave
jne
addr16
xor
pop
xor
repnz
divb
pop
jmp
adc
mov
loope
lea
mov
sbb
jge,pn
lret
and
sbb
add
jo
and
push
jp
jp
mov
sub
mov
jl
cmpsb
stc
fbstp
fisubrl
cmpsl
mov
cld
fbstp
sub
lods
mov
leave
xchg
push
lret
fstpl
incb
fdivr
adc
and
sbb
push
sbb
pop
sarl
xchg
jmp
je
cmp
and
cltd
pop
repz
mov
pop
xchg
mov
mov
imul
shrb
xor
cmovno
xchg
cltd
sbb
push
and
xor
repz
aam
mov
mul
or
xlat
out
nop
inc
jne
mov
aaa
push
fildll
les
ljmp
adc
dec
mov
jp
sbb
push
lahf
add
idivb
jb
cmp
lret
jbe
repnz
lea
xor
xchg
mov
pop
jl
pop
cld
lret
aaa
cmp
mov
out
sub
int3
cmp
jb
hlt
repnz
es
sub
iret
mov
mov
adc
aaa
sbb
fstl
scas
das
subl
mov
mov
loopne
xor
push
sub
jae
cmp
ss
inc
stos
adc
subl
pop
inc
sub
pop
scas
xchg
inc
aas
and
mov
mov
insb
dec
mov
int3
movl
out
mov
iret
test
jmp
add
les
imul
xchg
push
pop
push
fwait
mov
cmpsb
idiv
mov
pop
mov
push
jge
into
movq
mov
and
dec
mov
dec
or
cli
in
iret
push
ljmp
ror
aad
cmp
shlb
or
mov
or
push
jmp
adc
push
push
push
outsb
or
sub
inc
imul
and
inc
aam
or
repnz
int
xchg
popf
shr
push
pop
or
cmp
sbb
sub
aas
and
mov
lods
sbb
neg
sub
ja
cmp
pop
mov
adc
add
xchg
movsb
jmp
mov
dec
std
in
mov
and
mov
mov
sub
jg
mov
jno
test
sbb
cmp
pusha
push
lahf
add
pop
lods
xchg
mov
add
roll
stos
ss
cwtl
sbb
xor
and
mov
cmpsb
daa
or
bound
enter
out
dec
scas
test
shrl
aad
jno
push
test
out
loope
icebp
insl
mov
pop
test
imul
fs
mov
push
add
xchg
icebp
inc
cmp
cltd
aaa
into
pop
sbb
loopne
bound
pop
test
pop
dec
cmp
push
cmp
xchg
in
mov
adc
insl
xchg
mov
push
xor
lds
lods
pop
dec
mov
jmp
cs
cmpsb
lea
iret
clc
jmp
fdivl
push
adc
or
insb
loopne
xchg
int
pop
movsb
icebp
ret
and
test
les
ja
aaa
cs
adc
lret
mov
or
dec
mov
mov
ss
mov
inc
stc
sbb
xchg
sbb
jb
mov
sub
je
subl
mov
lret
cmp
sahf
outsb
xor
mov
add
sbb
cmp
jmp
push
loopne
inc
sti
adc
mov
fimuls
push
mov
sub
pop
sub
repz
fs
adc
jae
test
and
outsl
adc
dec
jns
adc
or
aas
clc
sbb
out
dec
jno
or
push
xor
jge
inc
or
cmovl
jne
lock
push
inc
stos
adc
xchg
jle
sub
insb
xlat
pop
loopne
adc
cmc
repnz
and
out
add
loop
cmp
adc
enter
xchg
les
and
jecxz
test
pop
dec
ss
iret
xor
lock
or
adc
jbe
test
inc
es
mov
stc
nop
lods
into
and
lret
sbb
test
add
ficoml
arpl
or
inc
sub
pop
push
movsl
out
inc
pop
pusha
hlt
into
shrb
xchg
sar
fimuls
fldl
add
leave
mov
stc
sbb
push
arpl
cmp
or
mov
fidivl
mov
adc
mov
out
xchg
cmp
pop
cmp
jp
dec
loope
mov
lock
cwtl
in
sub
xchg
arpl
jecxz
fs
add
test
or
fbstp
pusha
mov
out
sub
lret
ljmp
add
dec
mov
mov
inc
fisttps
std
mov
or
aad
xchg
out
ss
popf
lea
shrl
sub
cmp
adc
dec
mov
aam
pop
cmp
jne
iret
inc
sub
js
sbb
sti
mull
adc
inc
mov
ret
outsb
aad
mov
xor
pop
das
cmp
xchg
or
mov
jns
dec
and
xlat
xchg
test
iret
faddl
aam
pop
push
lods
jno
dec
out
pop
sbb
jbe
pushf
mov
popf
test
or
iret
pop
jecxz
adcb
mov
sub
iret
and
add
mov
jmp
xor
fs
into
xchg
push
movsl
xlat
mov
stc
or
sahf
lret
imul
dec
cmp
add
fwait
xchg
add
inc
test
testb
xchg
dec
loope
imul
pop
movntq
inc
ljmp
scas
mov
xchg
movsb
mov
jg
ja
or
push
pop
ljmp
inc
rcrb
mov
mov
xchg
mov
in
xchg
dec
ret
push
cmp
lahf
or
cli
pop
cmc
push
in
xor
inc
jmp
mov
push
push
test
movsb
lret
push
mov
sbb
in
mov
and
mov
je
gs
push
push
inc
add
mov
popa
inc
gs
xor
insb
pop
mov
ljmp
movl
xchg
jmp
mov
sbb
push
push
test
or
out
cs
insl
lcall
push
out
dec
push
mov
jno
lret
and
mov
jmp
mov
cwtl
dec
cmp
movsb
gs
jmp
sub
cmpsl
loope
lahf
fiadds
dec
push
pop
loopne
jmp
test
inc
scas
iret
lds
cmpsl
roll
add
inc
fcomps
cwtl
cld
sub
xorb
sbb
in
scas
mov
inc
daa
xor
or
sbb
sbb
cmp
out
sbb
popf
les
out
shll
mov
scas
sbb
jne
pop
adc
jmp
iret
leave
inc
mov
or
shlb
arpl
pop
icebp
gs
pop
or
test
xor
xchg
cmpl
loope
and
and
or
lret
cmp
pop
mov
and
fcomps
mov
fistpll
daa
mul
pop
lods
jne
inc
mov
inc
stos
mov
movsb
lret
jecxz
jns
jns
imul
cmp
imul
sarb
test
mov
pop
mov
jmp
add
mov
xlat
leave
add
inc
inc
repnz
ret
push
cwtl
out
push
sahf
mov
iret
push
int
imul
pop
xor
mov
std
out
leave
lret
cmc
ljmp
rorb
push
aas
jmp
inc
aam
ja
call
push
inc
aam
mov
bound
je
subb
popa
movsl
lret
std
inc
in
loope
adc
mov
test
cmpsl
xchg
mov
add
or
add
sbbl
inc
repnz
ret
push
cwtl
out
in
out
jae
idivb
mov
lret
fstpl
dec
andl
repnz
add
pop
mov
sbb
mov
ljmp
dec
fcomps
je
sbb
loope
adc
loope
adc
mov
int
sub
cltd
dec
xor
je
movsl
lods
inc
cmp
je
ficompl
bound
dec
dec
lahf
push
arpl
in
cwtl
and
insb
aad
je
lret
pop
xor
nop
outsb
test
jmp
jnp
ficompl
inc
lcall
jbe
mov
fwait
push
cltd
ficomps
cmp
iret
push
sub
lcall
mov
popf
and
and
ret
shr
pop
inc
or
pop
cmpsb
lret
xchg
push
cmp
sub
push
shrl
adcb
or
imul
nop
gs
out
inc
jle
add
jno
scas
pop
sarl
cmpl
cmp
aas
insb
ror
inc
dec
mov
fdiv
xor
push
ja
in
into
outsl
enter
jl
push
das
mov
mov
movsl
in
dec
mov
out
scas
fwait
adc
aad
cmp
pop
xchg
bound
bound
ss
add
fwait
lret
cmp
cmp
pop
mov
jnp
inc
int
mov
call
mov
mov
lds
and
xor
gs
out
xchg
flds
sub
mov
and
js
lods
in
and
cli
hlt
push
repnz
sbbb
mov
fadds
lahf
enter
lcall
stc
pop
jbe
in
test
ds
call
jae
test
popa
out
push
xor
pusha
sbb
stc
ret
fcmovne
and
sub
adc
fisubrs
pop
xor
and
jmp
jnp
mov
movsl
insb
or
popa
das
subb
xchg
jbe
ret
out
sahf
cli
jmp
sarb
lods
stos
std
loope
mov
ficompl
fsub
icebp
push
stos
shrb
xchg
into
outsl
shrb
subl
mov
fidivs
ja
repz
pop
sbb
dec
outsb
dec
or
imul
test
inc
inc
jecxz
push
das
and
fucom
mov
pushf
mov
subl
repz
in
inc
xor
xchg
dec
mov
sbb
fiadds
fcomp
inc
outsb
fstps
push
xor
arpl
stos
jg
fistl
xchg
outsb
mov
push
sub
cwtl
ficoms
idiv
test
jnp
inc
jmp
pop
outsb
mov
jb
cmpl
xor
pop
sub
add
dec
ret
iret
inc
aaa
lret
insl
aam
inc
call
stos
icebp
es
adcl
mov
lret
adc
test
and
inc
aas
sub
icebp
push
out
jl
cltd
and
js
cmp
das
mov
sti
cs
push
loope
imul
sbb
and
dec
mov
inc
sbb
add
push
add
scas
mov
in
add
pushf
int
icebp
xor
dec
bound
xchg
cmp
sahf
das
inc
mov
jb
mov
cwtl
add
inc
or
jge
add
adc
int
cmp
push
sub
push
sub
inc
pop
and
iret
cmpsb
sbb
std
jge
int
xor
add
pop
scas
xchg
sub
push
test
xor
push
cmpb
orl
add
repnz
pop
cwtl
out
test
fwait
push
cs
add
outsl
add
aaa
add
fwait
or
test
std
mov
pop
shl
stos
movsl
into
test
pop
mov
xor
sub
push
mov
jge
nop
fstps
les
cltd
js
repz
fmull
mov
sbb
add
adcl
pop
lret
imulb
sub
push
mov
out
push
in
rorb
repz
fwait
mov
mov
daa
andl
jmp
xchg
push
inc
push
jg
inc
mov
sub
mov
dec
push
push
lock
jmp
mov
es
dec
and
hlt
xor
mov
sub
sub
aad
xchg
dec
xchg
lods
xchg
bound
outsb
arpl
lods
jp
xor
and
adc
ljmp
out
jne
ds
jmp
adc
imul
lret
cwtl
in
jmp
lods
psrlw
faddl
jge
std
sub
push
mov
or
inc
ljmp
pop
leave
xchg
add
ret
popf
out
scas
mov
cwtl
xchg
gs
inc
pop
push
inc
mov
ljmp
xchg
push
ret
adc
mov
ret
out
test
loop
sub
dec
sbb
mov
add
call
mov
sub
das
sahf
fsts
lea
and
xor
fwait
mov
xor
add
incl
mov
adc
dec
addb
adc
ret
push
lock
add
loop
cmpsb
testb
sub
pop
mov
xchg
imul
push
dec
mov
call
and
aaa
out
push
cmp
mov
mov
mov
xchg
je
jp
clc
inc
stos
test
dec
push
jo
sub
ljmp
mov
je
es
ja
sarl
in
xchg
pop
add
rcll
mov
mov
sbb
orb
or
push
ud0
jmp
dec
xchg
ficoms
rorl
push
rclb
subl
lret
mov
call
mov
daa
movsb
cwtl
dec
data16
pusha
pushf
imul
mov
leave
paddsw
mov
and
jl
call
dec
inc
sub
inc
push
sbb
pusha
lcall
xor
push
loop
push
inc
call
push
inc
sbb
add
outsl
loop
jmp
inc
repnz
ret
push
cwtl
out
push
cmp
bound
adc
push
fucomip
gs
clc
xchg
js
call
adc
dec
adcl
sbb
into
adc
mov
imul
xchg
pushf
pop
enter
paddsb
into
outsl
scas
inc
in
mov
arpl
into
push
sub
mov
in
repnz
mov
inc
js
loopne
adc
pop
push
fisubrl
push
mov
negb
inc
out
dec
mov
push
xlat
xor
inc
push
mov
push
fistl
roll
mov
int
dec
xchg
outsl
lods
repnz
movsb
iret
add
dec
sbbb
repz
add
add
mov
inc
push
mov
sub
cmp
mov
aam
and
mov
in
in
iret
add
dec
iret
push
hlt
aam
jbe
mov
dec
arpl
xchg
call
jb
pop
out
xchg
xchg
fs
inc
dec
insb
adcb
jmp
popf
std
mov
in
dec
into
push
sub
daa
dec
mov
push
mov
testb
sub
or
sub
subb
xchg
xchg
cltd
movsl
aas
xchg
xchg
inc
es
or
dec
scas
int
sbb
lret
bound
std
adc
mov
lods
pop
es
outsb
ret
arpl
mov
cmp
sbb
into
push
sub
lret
xchg
pop
add
je
and
jmp
repz
push
fldl
jbe
movsb
lret
mov
lret
push
jae
loopne
adc
and
add
dec
shrb
loopne
adc
or
pop
lods
jne
out
inc
pop
inc
gs
add
xchg
jo
aas
push
lret
insb
roll
dec
mov
loopne
adc
jmp
notl
mov
sub
mov
mov
mov
mov
repz
pusha
mov
ss
jge
sub
arpl
push
fs
xor
sarb
fs
mov
push
adc
jno
sbb
mov
jae
in
leave
push
push
test
cltd
inc
call
push
fs
mov
jp
cltd
jmp
fcmovnb
jle
and
stos
fs
or
lods
movsl
lret
cmc
sbb
imul
lods
ljmp
popf
adc
jbe
or
bound
lret
test
xchg
inc
mov
mov
xor
stc
mov
movsb
jecxz
mov
adc
xchg
mov
jle
sbb
fbld
lret
cmp
into
ja
es
sub
jbe
cmc
cmp
scas
xchg
mov
aas
repz
push
f2xm1
ss
stc
daa
fwait
mov
pop
mov
mov
stos
rorb
pop
in
bound
aas
adcl
add
mov
xchg
popa
cmp
xor
adc
sub
jle
sbb
test
pusha
mov
loopne
ret
lds
jmp
mov
push
ds
mov
xchg
clc
ds
stc
arpl
inc
roll
or
mov
add
stos
bound
fcmove
cwtl
xchg
pop
outsb
ljmp
bswap
pop
cs
inc
in
cli
mov
push
xor
inc
jns
pop
es
xor
sbb
jo
mov
sub
dec
inc
xchg
repz
fdivrl
int3
imull
xlat
sahf
int3
sub
fs
aad
popf
lock
ljmp
outsb
lock
sub
iret
push
sub
out
dec
pusha
cmp
jl
aad
fsubs
adc
sbb
les
jmp
cmp
mov
xchg
jmp
test
xor
std
jmp
fbld
mul
cmpsl
shrb
mov
dec
iret
push
vucomisd
and
adcl
pop
and
push
lahf
insl
xchg
adc
ljmp
mov
sete
add
xor
mov
idiv
mov
sbb
and
ret
and
popf
std
cmp
jb
mov
pop
dec
push
mov
or
roll
pop
gs
ljmp
pop
ret
dec
xchg
push
aam
jo
movsb
and
aaa
pop
dec
xchg
dec
lea
xlat
sarb
cmpl
pop
xor
popf
sub
icebp
dec
jno
cmp
or
mov
fwait
pushl
push
push
cmp
jbe
mov
and
xchg
testl
xchg
ja
sbb
rcrb
outsb
scas
mov
mov
aas
arpl
call
add
adcl
jle
pop
es
mov
scas
daa
arpl
cmp
bound
insl
sub
mov
loopne
mov
in
sub
inc
out
into
mov
and
iret
hlt
xlat
movsb
dec
lcall
movsl
repz
adc
pop
sbb
iret
cmp
pop
mov
daa
pusha
cmpsb
in
iret
in
xor
outsb
mov
mov
mov
jne
mov
xor
shl
fsin
inc
push
adc
fwait
sbb
inc
or
pop
sbb
lods
xchg
adc
jecxz
lcall
hlt
cld
sub
ss
or
push
hlt
je
push
and
bound
imul
jle
sub
xchg
in
inc
fs
insl
push
push
js
std
jmp
jb
push
repz
dec
fldt
mov
icebp
adc
push
cmova
pop
sbb
fcomip
and
ljmp
push
rcrb
sbb
test
dec
insb
cmpb
lock
in
push
sbb
xor
ss
in
enter
and
sbb
orb
adc
cmp
mov
add
aam
stos
bound
sbb
loop
enter
lea
icebp
push
js
mov
push
outsb
rorl
mov
sub
dec
jge
iret
gs
ljmp
jecxz
mov
scas
mov
fwait
xchg
cld
and
inc
mov
pop
popa
xchg
push
std
adc
push
movsl
lret
jp
aas
and
test
rolb
jmp
xchg
push
fs
inc
and
mov
mov
in
bound
cld
or
jmp
xchg
mov
stos
cmp
push
adc
jno
lods
mov
jno
and
les
out
scas
mov
cmpsb
mov
int
jmp
pop
jb
xlat
sub
lret
push
pusha
enter
fldl
or
imul
xchg
dec
add
pushf
xor
fsubl
and
dec
push
sti
ret
aas
ds
rcll
sub
inc
pop
mov
push
mov
aad
adc
movsl
pop
out
cmp
sub
or
xchg
mov
xor
pop
push
mov
inc
stos
fs
jge
inc
dec
ret
movsl
lret
jmp
pop
inc
push
pop
jmp
add
push
test
mov
adc
gs
repnz
jg
in
pop
add
lret
aas
and
add
ljmp
lret
or
testl
and
sbb
lcall
stos
fs
js
dec
out
movsl
lret
sub
mov
push
pop
gs
push
jmp
sbb
mov
mov
push
cmp
mov
in
call
mov
outsl
mov
lret
loope
pop
add
mov
bound
push
push
pop
gs
jge
adc
addr16
dec
lock
gs
cmpsl
sbb
mov
push
daa
mov
mov
ss
ljmp
dec
cmp
iret
mov
jmp
push
cmp
jbe
cmc
inc
call
sub
test
jmp
and
sbb
roll
adc
mov
in
and
mov
fistl
cmp
adc
andl
push
cltd
xlat
dec
iret
push
enter
jne
sub
call
inc
adc
mov
dec
xchg
jecxz
cmc
and
cmp
and
add
pop
mov
in
pmulhuw
push
adc
jo
aad
fs
imul
pop
mov
jle
iret
pop
pushf
cwtl
movsl
in
jp
fmuls
out
aad
int3
jmp
dec
sbb
movsb
ss
jns
pop
adc
les
pop
adc
cmp
psubusw
dec
loope
adc
loopne
adc
cmp
movsl
roll
adc
in
add
xchg
inc
repnz
ret
push
cwtl
out
push
add
push
and
iret
sbb
mov
cltd
ficomps
hlt
dec
mov
inc
call
pop
into
mov
dec
cmpsl
xor
cmp
cmp
mov
pop
js
out
sahf
jb
xchg
inc
or
sbb
lret
xchg
arpl
aam
pop
and
push
pop
andb
mov
mov
mov
add
push
mov
cmp
sbb
out
dec
outsl
gs
in
inc
out
rcll
or
sub
fwait
inc
inc
mov
pop
pop
cs
mov
cmp
stos
aaa
into
mov
loop
fcomps
xor
or
xchg
fcmovu
dec
pop
adc
or
sub
lock
jno
sbb
imul
xchg
inc
xchg
or
cmc
push
xchg
leave
pop
ret
outsb
push
sub
xchg
xchg
fcmovb
sub
pop
lret
test
test
ret
push
xchg
xchg
sahf
push
push
test
pop
bound
inc
out
push
ds
add
mov
cmp
sti
sub
sarb
jg
inc
insb
mov
mov
cli
test
adc
test
sarb
jg
xor
inc
filds
ficoms
arpl
push
adcb
pop
push
mov
dec
cs
xchg
loope
mov
xlat
or
inc
cmp
cmpb
jle
add
sub
dec
push
mov
not
sub
bound
rolb
dec
iret
push
out
shrl
add
push
jmp
mov
mov
outsl
roll
add
xor
sbb
cld
mov
bound
jne
lods
and
sarb
sbb
dec
sbb
divb
sub
and
and
imul
sbb
lahf
in
xor
fnstenv
in
mov
jb
pusha
or
push
mov
inc
pop
push
ljmp
xor
push
add
sub
fdivrs
xor
test
fists
call
lods
stos
std
mov
xchg
jae
fidivl
xor
lock
daa
arpl
imulb
inc
lock
xchg
mov
leave
mov
in
sbb
aas
stc
popf
es
popf
lock
push
xchg
adc
inc
jno
mov
cmp
push
sbb
jmp
jae
adc
adc
outsl
shrl
test
inc
sbb
filds
popl
adc
subl
in
ds
xchg
jae
push
movsb
xchg
or
popa
add
pop
dec
mov
jne
testl
inc
movsb
repnz
aam
cmp
sub
inc
and
cmp
leave
lock
jbe
repz
rcrb
pop
xor
lds
cmp
sbb
cmpsl
push
test
mov
or
and
or
ja
adcb
pop
mov
pushf
xor
test
add
push
addb
inc
std
and
fmull
out
adc
and
and
push
outsb
push
gs
jmp
lahf
add
pop
psllw
push
popf
test
push
cmpsl
arpl
pop
jmp
jb
stos
iret
data16
cmp
aaa
mov
and
push
rclb
or
jmp
xchg
sbb
or
mov
lods
jge
jmp
pop
iret
add
cmp
cmp
mov
flds
adc
xchg
add
dec
cmp
loop
xchg
and
xor
xor
inc
fidivrl
and
push
xor
das
inc
stos
icebp
add
push
pop
repnz
and
add
decb
out
dec
fiadds
dec
js
push
xchg
mov
mov
clc
push
fildll
mov
or
and
sub
dec
adc
addr16
mov
pop
lods
mov
out
push
and
dec
sahf
pushf
ret
mov
push
add
push
sub
push
call
jns
adc
scas
dec
adc
or
push
aaa
xchg
notb
push
jno
fabs
nop
into
or
push
stc
jg
decb
into
and
movb
push
test
xchg
rclb
mov
out
ja
lcall
or
or
out
ret
mov
fidivrs
xor
jecxz
add
mov
fmull
or
xchg
in
mov
lret
mov
push
arpl
mov
push
pop
mov
pop
sub
je
scas
in
pusha
mov
dec
add
rcll
out
aam
inc
or
sbb
push
imul
pop
fldcw
pop
subb
mov
pop
adcb
adc
mov
inc
adc
shrl
mov
fistpll
ljmp
mov
fnsave
cmpsb
push
rolb
arpl
das
andb
pop
aas
jmp
jno
cmp
mov
and
fsubs
mov
insb
inc
stc
push
or
negb
cmp
xchg
jnp
mov
js
mov
popa
sub
adc
test
and
mov
pop
divb
sub
sub
or
fcomi
imul
test
popa
push
gs
pop
cwtl
push
in
and
in
and
jae
gs
lea
sbb
jbe
mov
jmp
pop
ret
movsl
test
pop
lahf
fldt
rcr
shrl
add
jp
xchg
pop
mov
or
mov
add
repz
sub
fldl
pop
addb
push
jg
cmp
in
jno
and
inc
add
fsubrs
in
xchg
mov
lods
adc
push
rcrl
fsubrs
stc
adc
inc
icebp
pop
shlb
fs
popa
fldl
mov
pop
ror
pop
ljmp
mov
addr16
xchg
ret
push
add
lods
insl
icebp
sbb
lret
insl
aad
xchg
aaa
dec
xor
jno
adc
incb
arpl
mov
es
lret
fcompl
fwait
movsb
jecxz
jb
and
lock
scas
adc
scas
rolb
inc
cltd
mov
fsubrl
cmp
iret
push
add
xor
sti
lods
or
adc
mov
imul
adc
mov
loope
and
xchg
outsb
lock
addr16
mov
xchg
dec
mov
add
leave
sbb
in
dec
test
cmp
rol
enter
xchg
mov
mov
push
lret
dec
xlat
es
imul
std
out
std
cmp
mov
mov
cs
fcomps
cmovne
or
dec
sub
or
pop
mov
popa
shl
add
sub
cmpsl
push
arpl
clc
insb
xchg
and
fs
das
cmc
push
xor
dec
out
inc
sub
pop
mov
call
repz
cs
popa
push
fwait
stos
mov
push
ss
xchg
hlt
aas
pop
out
push
cmpsb
stos
jmp
fcoml
lret
cmpsl
leave
mov
lock
and
sub
cmp
adc
pop
iret
push
jbe
icebp
mov
test
shr
movsb
sbb
sbb
add
out
cld
and
xchg
xchg
xchg
shrl
sub
fmull
cmp
aas
and
sbb
jge
mov
push
sbb
test
cmp
nop
jo
mov
mulb
or
and
imul
neg
imul
and
cmpsb
adc
loop
aas
out
repz
cli
jmp
push
stos
lret
cld
cli
jmp
adc
orl
call
loop
das
out
mov
cmp
mov
mov
adc
sbb
hlt
jg
iret
scas
pop
mov
aad
cmp
dec
mov
mov
dec
jae
add
test
xor
les
je
xor
dec
and
int3
sub
into
and
pop
push
aas
call
add
pop
adc
mov
push
ret
cmpsl
mov
int3
pop
insl
aas
shll
jmp
jne
outsl
popf
ret
sbb
out
test
adc
or
dec
divb
repnz
and
xor
dec
iret
add
aam
pop
xor
ja
fimull
jae
jg
jmp
push
fidivs
imul
xchg
mov
dec
inc
xor
jecxz
or
fdivl
jmp
mov
scas
fidivs
std
cwtl
into
into
fmull
mov
notrack
movsl
jno
mov
add
dec
sbb
dec
decl
jp
gs
jecxz
sarb
cmc
and
sbb
mov
jmp
mov
xchg
xchg
repnz
push
and
pop
jnp
outsb
loopne
adc
mov
or
std
fists
jae
and
insb
and
or
jmp
mov
xchg
sub
dec
pushf
cs
or
ffree
push
xchg
adc
sbb
test
mov
outsb
iret
daa
std
cmp
mov
xchg
and
inc
mov
sbb
push
out
lcall
mov
adc
insb
jecxz
adc
cmpsb
icebp
push
popf
mov
stos
out
push
mov
insb
mov
xchg
pminsw
loop
out
flds
xor
call
loopne
lds
test
mov
fldt
inc
lds
movsb
jne
test
out
sbb
in
std
ja
das
pop
mov
adc
int
xorl
jno
inc
imul
cmp
clc
mov
mov
mov
mov
pop
mov
or
addr16
aad
lock
fwait
das
insb
mov
lret
ret
push
sub
repz
insb
lret
push
or
cmpsb
ljmp
mov
sub
test
int3
pop
shll
push
fxch
push
sub
movsl
ror
inc
xor
sbb
leave
push
push
nop
outsl
adc
jae
loop
pop
xchg
jle
mov
mov
lock
aas
int
loopne
push
cmp
sahf
xchg
adc
sar
shrl
pop
sbb
sbb
popa
jbe
cmp
mov
pop
sahf
int
vpsubusb
test
dec
mov
xchg
dec
mov
push
outsb
data16
sbb
sub
int3
xchg
scas
add
loopne
test
push
mov
pusha
test
lret
pusha
fs
push
out
jp
sub
add
popf
xor
pop
dec
and
xor
xchg
sti
or
iret
mov
imul
mov
addr16
dec
push
jmp
insl
fcompl
aam
inc
push
sbb
lret
insl
aam
xor
into
pushf
push
and
fisubrl
es
jmp
pusha
sbb
dec
mov
push
pusha
inc
push
aad
jbe
jmp
and
pushf
cwtl
pop
maskmovq
negl
pop
dec
fsubr
dec
mov
push
pop
jns
lods
add
xchg
shlb
push
imul
fldl
repz
adc
sbb
adc
mov
mov
add
mov
out
or
push
jge
pop
stos
iret
clc
mov
sbb
lock
cld
mov
jecxz
call
mov
rcll
sub
add
aas
xor
xor
mov
mov
push
inc
aam
add
mov
call
fcoms
xchg
pop
xchg
xchg
out
sti
call
lcall
and
aam
inc
stos
rcl
out
fneni(8087
bound
ror
mov
push
xor
mov
add
pop
pushf
cmc
sub
andnps
rclb
lods
pop
dec
cmp
popf
fimull
out
jmp
imul
xor
mov
xchg
or
repz
icebp
push
push
int
fisttpll
xchg
adc
loope
adc
jnp
es
push
and
push
mov
and
dec
jno
aad
adc
xchg
xchg
xchg
cli
sub
pusha
mov
sub
sub
jnp
daa
adc
sub
sahf
repz
out
push
inc
std
and
stos
jnp
mov
xchg
inc
outsb
lcall
cltd
movsl
pop
xchg
pop
jae
addr16
popf
jl
arpl
cli
mov
sub
xchg
cmp
sbb
pop
cmp
xchg
fwait
ljmp
add
jge
pop
out
sti
jb
mov
jge
fimuls
mov
imul
fstpt
push
mov
push
fwait
add
iret
cmpsl
push
stos
scas
fcomps
cmpb
in
sbb
xchg
dec
pop
jp
int3
gs
pop
jl
divb
mov
dec
mov
iret
mov
pop
mov
lret
dec
adc
shr
lods
scas
out
cltd
pop
nop
pop
pop
mov
push
outsb
sbb
cli
imul
addr16
inc
daa
mov
inc
cmp
loopne
dec
cmp
pop
mov
pop
jp
add
dec
xlat
push
jne
sub
arpl
pop
int3
insb
fstl
cmp
sbb
cwtl
xlat
cmp
ret
loopne
por
xchg
lea
addr16
movsb
enter
adc
dec
mov
and
int3
stos
dec
hlt
rolb
or
popf
xchg
cmp
pop
and
faddp
mov
movsl
aas
sbbl
sti
or
push
push
lcall
das
pop
xchg
dec
pusha
adc
inc
int
dec
ja
xchg
out
fmuls
mov
lods
pop
fsubrl
daa
repz
sbb
mov
dec
cltd
jnp
add
jg,pt
outsb
mov
lds
xor
loope
ja
cld
dec
aad
sbb
xchg
or
fists
fstpt
sti
or
inc
rep
ja
jge
xor
push
or
sub
push
mov
push
stos
xchg
inc
mov
fidivrl
je
xor
jmp
fwait
adc
sbb
incb
in
and
cmp
sub
xchg
outsl
mov
add
sbb
incl
add
icebp
xor
jmp
repnz
ret
inc
pop
dec
fcmovnb
xchg
fs
mov
xchg
arpl
fwait
xchg
out
testb
or
into
xchg
xor
xchg
cs
dec
ja
ljmp
jno
fimuls
rcll
dec
icebp
add
adc
outsb
mov
and
jnp
movsl
aad
sub
loop
sbb
icebp
test
flds
orb
inc
daa
mov
mov
lret
repnz
pop
jle
aad
es
inc
jg
add
sub
loop
nop
shlb
and
fwait
incb
xchg
out
dec
das
inc
xchg
xchg
or
cmc
cmpsl
xor
xchg
jae
inc
orb
sar
imul
pop
push
popa
mov
mul
fstps
popf
addr16
movsb
loop
push
or
pop
dec
insl
jno
mov
neg
add
lret
fwait
adc
push
pop
cmp
sbbl
mov
cmpl
mov
call
bound
sbb
lea
loopne
sub
out
mov
xchg
cmp
mov
and
pop
push
std
test
clc
add
mov
cmp
and
lret
mov
hlt
lods
pop
push
imul
xor
aad
sub
jns
ja
in
sub
mov
aam
add
sahf
mov
ficomps
dec
dec
fcomps
scas
jmp
adc
push
adc
jecxz
cmpsb
loop
in
and
mov
test
leave
lcall
pop
mov
fstpl
mov
into
push
pop
out
xchg
std
pop
lret
outsl
cwtl
pop
or
cmp
rcrl
pop
jle
jp
inc
jle
push
addr16
repz
and
insl
ret
leave
xchg
jo
repz
mov
in
cli
fldcw
push
and
dec
into
pop
fwait
xchg
loopne
xchg
push
std
and
dec
test
add
xor
inc
cmp
daa
ds
out
add
adc
xchg
push
fld
mov
repnz
test
pop
xorb
sbb
call
pop
sbb
cmp
test
les
loop
lods
rcrb
das
ljmp
xor
jnp
daa
faddl
stos
or
or
lret
push
push
call
ret
fcoms
cs
mov
pop
adc
call
pusha
gs
adc
push
cmpsl
test
idiv
cmpsl
aam
sub
or
ds
in
les
addr16
popa
xor
mov
xchg
idivl
outsb
mov
mov
lods
xchg
popf
das
stos
fwait
int3
insl
or
mov
jle
lcall
push
push
ljmp
or
mov
sbb
cmp
push
jnp
sbb
not
stos
aad
leave
xchg
ret
rorb
mov
lret
clc
in
or
imul
imul
and
stos
mov
cmpsl
jno
enter
mov
pop
orb
adc
call
mov
mov
xchg
mov
hlt
mov
in
insb
sti
mov
push
stc
daa
into
lret
ret
sub
or
mov
and
mov
pop
cli
imul
or
cwtl
fistpl
cmp
fdiv
xor
movsb
inc
mov
or
mov
lahf
add
in
mov
les
outsl
sub
icebp
mov
and
decb
adc
arpl
jns
ds
cld
iret
or
jo
cli
addl
nop
xchg
jae
mov
jmp
dec
mov
xor
or
stos
dec
add
sbbl
mov
sub
scas
mov
pop
xor
adc
pop
das
test
pop
or
pop
das
pusha
pop
jb
testb
cmp
and
adc
nop
pop
pop
jb
addr16
xor
sbb
add
stos
dec
lods
pop
pop
cmp
jmp
dec
mov
notb
je
push
into
loopne
mov
loopne
cmp
jmp
or
jge
pop
pop
xchg
cmpsl
or
call
adc
out
or
orl
xor
mov
jle
test
xchg
cltd
push
jg
dec
dec
dec
pop
sbb
mov
cltd
mov
in
rol
repnz
cltd
pusha
mov
pop
aam
jns
loope
mov
sti
push
jne
cmp
inc
push
outsl
sub
inc
and
icebp
mov
push
and
lahf
cmp
les
aam
ret
mov
push
test
nop
push
js
cli
ljmp
push
add
imul
mov
mov
mov
xchg
jle
outsl
mov
les
pop
or
mov
sub
pop
adc
cld
js
adcb
int
out
stos
call
pop
jmp
out
pop
jl
scas
punpckhwd
push
out
adc
shr
cmp
add
jns
or
sbb
les
jno
pop
rcl
push
stos
js
cmp
adc
test
jge
fwait
mov
outsb
jmp
mov
int
arpl
push
cmpsb
or
sbb
add
dec
push
stos
fcomi
cmp
push
sahf
jg
jl
dec
ljmp
pop
mov
jnp
out
xor
mov
cmp
cs
or
and
add
cmp
out
aaa
dec
lcall
inc
in
and
std
imul
mov
movsl
pop
dec
in
ret
and
xor
repnz
imull
mov
clc
in
mov
out
insb
and
mull
and
push
push
and
mov
arpl
jo
lret
xlat
popf
push
xchg
cmp
int3
adc
mov
xor
sub
mov
xchg
fdivrl
inc
jnp
inc
bound
sub
loopne
xchg
bswap
sub
loopne
bound
pushf
in
pusha
xchg
test
push
pop
jmp
in
pop
sub
sti
cwtl
add
jnp
sbb
repz
out
mov
adc
jmp
out
data16
cmp
cmpsb
sahf
lret
insb
add
outsb
sti
sub
sub
push
jmp
dec
lds
dec
inc
cmp
fs
lods
cli
dec
popl
push
add
fdivl
or
mov
dec
cmp
mov
push
or
xchg
ds
cmpsb
sbb
xchg
dec
sub
xor
dec
jae
lods
repz
push
scas
icebp
imul
mov
imulb
pop
arpl
jae
jnp
mov
add
push
push
out
mov
add
loop
repz
aad
add
xor
sbb
out
mov
and
adc
ja
xor
pop
xchg
lods
into
or
and
pop
dec
mov
lea
adc
fsubrl
mov
xchg
insb
xchg
data16
enter
jle
jp
mov
xchg
in
xchg
fwait
push
std
and
rol
jnp
sub
rcrb
adc
xor
sbb
outsl
scas
hlt
leave
mov
outsl
mov
dec
jb
xchg
loope
adc
shlb
add
test
push
sub
cs
cli
imul
in
dec
pop
mov
dec
fs
mov
push
add
lret
push
inc
scas
in
lods
int3
shlb
pop
aad
push
aam
cmc
inc
inc
xchg
and
pop
inc
fsubrs
pop
cltd
cs
push
cmp
xor
mov
sahf
repnz
data16
dec
xchg
aad
inc
lods
mov
pop
cmp
insb
mov
pop
test
mov
cmp
xor
sbb
xor
pop
mov
lea
mov
aam
or
lret
dec
and
fbld
andb
xlat
add
aad
mov
std
stos
fwait
int3
insl
or
int3
test
data16
testl
call
leave
scas
aas
xor
mov
adc
pop
jp
push
addb
pop
cmpsl
fwait
sbb
das
pushf
cmp
push
inc
cmp
gs
test
mov
pop
xor
cmpsb
lds
push
push
mov
repnz
stos
inc
or
in
add
rcrb
add
pop
jp
test
sub
sbbl
add
shlb
mov
adc
cmp
lret
ret
dec
scas
mov
inc
jmp
xor
or
pop
jg
push
jp
sbb
pop
mov
jle
les
add
es
pop
add
jle
push
xor
add
jns
pop
cli
pop
test
pusha
and
stos
js
add
push
mov
mov
dec
add
sbbb
inc
jnp
call
lock
xor
and
sbb
stos
push
pop
add
pop
jp
nop
sbb
inc
dec
std
add
fidivl
repz
outsl
add
xchg
xor
fisttpl
leave
add
repnz
sbbl
mov
leave
add
inc
cmpsl
mov
or
xchg
fisubl
push
mov
jp
sbbl
fucom
das
stc
out
sarb
test
fldcw
incl
mov
stc
pop
movsl
stos
cwtl
aas
or
xchg
aas
or
rorb
push
std
push
sub
notl
push
add
ds
sub
push
clc
push
cltd
push
negl
in
imull
push
or
les
inc
mov
gs
notb
in
dec
add
xchg
dec
clc
pop
jmp
push
pop
sbb
add
add
cmp
movntps
decb
in
popa
sti
push
push
inc
mov
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
xchg
aas
or
jnp
stc
lods
xchg
push
or
dec
or
xchg
pop
xor
lock
xchg
cwtl
enter
and
xchg
mov
repnz
jecxz
out
mov
xchg
lea
push
cs
daa
ret
aas
pushl
hlt
aas
or
hlt
sar
lods
xchg
aas
xchg
sub
fldcw
mov
mov
xor
nop
aaa
lcall
shll
add
fcompl
push
movb
loope
or
pop
test
dec
lea
dec
icebp
lods
xchg
aas
dec
bound
mov
mov
outsl
jae
lods
stos
lods
jae
mov
push
xor
pushf
sar
lods
xchg
aas
add
dec
cli
in
das
scas
movsb
gs
mov
repnz
lret
mov
les
scas
xchg
aas
and
xchg
aas
in
dec
pop
pusha
test
mov
lea
dec
hlt
lods
xchg
aas
inc
pop
insl
push
lcall
test
sbb
cltd
sbb
or
xchg
andl
xchg
rolb
xchg
aas
xchg
shrb
addl
sbb
enter
adc
jmp
movl
or
test
sbb
and
xchg
aas
in
dec
pop
pop
test
mov
lea
dec
rep
xchg
aas
dec
pusha
pop
popa
test
mov
sub
movl
cltd
pop
mov
scas
xchg
push
or
dec
or
xchg
pop
cs
mov
xchg
cwtl
enter
aaa
or
xchg
test
and
pop
cmp
es
add
pushf
pusha
sub
inc
stos
xor
pop
lods
push
scas
xchg
aas
or
adc
subb
or
dec
or
xchg
pop
xor
out
mov
xchg
cwtl
enter
cmp
xchg
test
repnz
das
test
sbb
sub
scas
cli
aas
xlat
cwtl
aas
or
mov
lret
push
out
adc
or
jne
daa
lret
xchg
sub
nop
dec
or
xchg
xchg
or
xchg
aas
xchg
mov
jg
cltd
lcall
mov
jg
lods
icebp
jg
cli
pop
and
sbb
mov
sahf
or
mov
pop
add
jns
lcall
xor
cld
mov
push
scas
es
xor
jnp
or
xchg
pop
xor
out
mov
xchg
cwtl
enter
ss
xchg
test
repnz
cmp
stc
aas
xlat
cwtl
aas
or
mov
lret
push
out
adc
or
jne
aas
push
jp
jmp
xchg
aas
adc
xchg
aas
or
cli
aas
aaa
xlat
cwtl
aas
or
mov
lret
mov
out
scas
aas
or
aad
lret
mov
sbb
mov
xchg
mov
dec
or
xchg
pop
xor
jmp
enter
aaa
or
xchg
mov
repnz
pop
icebp
stc
mov
fs
movl
scas
pushf
pop
cld
imul
push
lret
dec
jge
scas
xchg
inc
or
sub
scas
loop
or
pop
arpl
mov
lock
xchg
aas
dec
pop
pop
ds
inc
add
dec
bound
sbb
push
or
pushf
mov
push
mov
pushaw
push
xchg
outsl
mov
mov
or
xlat
sub
das
xlat
sub
movsl
xchg
aas
or
jecxz
fisubrl
inc
fisttpll
adc
xrstors
aam
mov
repnz
movsb
sahf
xchg
aas
or
xchg
mov
shll
sbb
cli
lods
xchg
aas
movsl
cwtl
xchg
aas
or
cmpsl
aad
mov
jge
stc
xchg
loope
sub
pushf
aas
or
filds
pop
out
es
sbb
aas
or
sbb
cmp
pop
xor
xchg
subb
mov
inc
stc
aas
cmp
cwtl
aas
or
mov
lret
jne
mov
test
mov
aas
or
sarb
add
and
out
pop
dec
or
pop
orl
xchg
aas
or
jnp
or
xchg
out
jg
scas
cmpsb
stos
jae
ljmp
jmp
aas
or
and
pop
loope
xor
jmp
fstpl
jns
jle
ja
gs
cmp
sar
lods
xchg
aas
in
fs
mov
cmpb
mov
test
sbb
jle
lea
jmp
js
mov
aas
or
jmp
xor
das
xlat
sub
cmpsl
xchg
aas
or
loop
mov
dec
jp
or
xchg
es
or
push
mov
test
jns
aas
aaa
xlat
cwtl
aas
or
mov
lret
mov
out
cmpsb
aas
or
aad
lret
arpl
movsb
mov
scas
xchg
aas
lcall
xchg
aas
or
hlt
pop
sub
repnz
cmp
lret
or
jecxz
jle
ja
movsb
sbb
jp
or
xchg
and
ja
mov
jmp
pop
test
push
adc
jmp
xor
dec
inc
clc
mov
test
xchg
lods
mov
or
and
xchg
aas
in
arpl
test
dec
lea
dec
imull
pop
sub
add
dec
dec
xchg
mov
dec
or
xchg
pop
xor
jmp
enter
cmp
xchg
mov
repnz
ror
lcall
dec
inc
addr16
jg
scas
loop
or
pop
and
mov
lret
jecxz
xchg
adc
pop
and
pop
sbb
cwtl
popa
pushf
push
imul
dec
aad
movsb
dec
rcl
xchg
push
xor
dec
pop
repz
das
sub
inc
and
mov
xchg
xor
xor
fcoms
into
aam
sbb
xchg
das
jp
xchg
add
or
into
sub
into
aam
out
cwtl
hlt
push
dec
stc
cwtl
dec
adc
cwtl
jecxz
aam
push
and
and
fisttpl
sbb
fs
repnz
xchg
into
in
dec
rcl
xchg
cmp
ljmp
xor
push
dec
mov
lret
jmp
xchg
adc
pop
or
add
pop
jg
sbb
fstl
into
aam
jnp
nop
call
das
and
in
fldl
in
sub
xchg
into
aam
and
sub
xchg
sbb
into
hlt
repnz
or
rclb
jmp
out
xchg
into
sbb
mov
push
cs
xchg
out
push
fcompl
or
cld
mov
iret
xchg
or
push
fsub
daa
mov
xchg
into
dec
jno
xchg
inc
hlt
loop
push
mov
aam
loopne
js
push
mov
rorl
cs
xor
pop
cltd
jmp
in
roll
or
sti
dec
mov
mov
gs
and
xchg
out
cwtl
out
push
sbb
cwtl
dec
adc
cwtl
loope
aam
or
cwtl
mov
andb
sbb
pop
pushf
mov
mov
xchg
into
hlt
in
mov
pop
fldpi
rclb
jmp
in
xchg
into
adc
mov
or
lret
inc
stc
mov
into
pop
sub
loope
pushf
push
mov
dec
aad
push
in
std
pop
pushf
je
pop
pushf
into
aam
push
iret
aam
lret
in
repnz
fsubp
sbb
iret
aam
xor
sub
into
aam
out
cwtl
hlt
push
dec
stc
cwtl
dec
adc
cwtl
in
aam
push
and
cmp
scas
xchg
cmp
adc
push
in
call
sub
cs
pop
xor
xchg
push
pushf
nop
test
and
mov
ljmp
in
sub
gs
iret
xchg
dec
das
pusha
fldpi
idivb
hlt
jo
es
es
daa
das
daa
out
sub
pop
cltd
jmp
aad
scas
rcl
xchg
out
das
pop
and
mov
lret
loop
xchg
adc
pop
sub
inc
popa
pushf
xor
sub
into
aam
out
cwtl
repnz
cmp
cwtl
dec
adc
cwtl
aam
or
cwtl
insl
add
aam
mov
aam
pop
lret
loopne
pop
pop
inc
jno
sub
icebp
adc
in
pop
test
arpl
push
mov
mov
aad
xchg
cwtl
cmp
out
rcl
xchg
out
cs
and
mov
lret
out
xchg
adc
pop
add
fstl
into
aam
dec
iret
aam
mov
ds
sbb
hlt
out
mov
pop
icebp
jmp
push
fldpi
shr
xchg
into
pop
call
cmp
inc
and
aam
es
xor
inc
repnz
into
aam
push
xchg
mov
xor
push
or
push
ret
aad
jl
aad
iret
das
push
xchg
push
mov
mov
sbb
cld
push
faddl
into
and
lret
into
aam
out
cwtl
in
push
adc
cwtl
dec
adc
cwtl
loop
aam
pop
push
cwtl
push
xchg
bound
mov
ss
sbb
mov
xchg
into
cmp
add
fists
into
in
dec
test
xchg
negl
fstl
xchg
dec
mov
sbb
pop
mov
inc
fst
add
les
and
sbb
into
aam
jmp
ljmp
in
and
cs
dec
aad
fldpi
idivb
xchg
sbb
hlt
out
mov
pop
jmp
jmp
out
xchg
into
push
out
fbstp
sbb
mov
dec
aad
call
ljmp
hlt
and
xor
int3
repnz
test
or
out
fdiv
push
push
mov
push
aad
push
push
out
sbb
mull
lret
push
fdiv
push
jecxz
into
xor
jl
pop
sbb
repz
fdiv
sahf
aas
xchg
pop
mov
xchg
into
hlt
in
mov
pop
fldpi
rclb
jmp
in
xchg
into
adc
mov
xor
sbb
xchg
call
or
clc
inc
pop
mov
mov
xchg
cs
adc
fcoms
into
aam
sbb
aam
and
rcrb
jno
testl
into
aam
aaa
pop
mov
jnp
pop
movsb
cmp
push
push
jp
jmp
ljmp
in
and
xor
daa
push
daa
jle
into
aam
mov
xor
push
call
mov
clc
push
daa
movsb
clc
sub
jle
into
aam
jge
push
xchg
pop
fldl
out
pop
sub
in
rcl
xchg
out
sub
mov
lret
in
xchg
pop
lcall
xlat
test
xchg
sbb
hlt
out
mov
pop
jmp
jmp
jmp
into
push
out
pop
aam
daa
push
jb
in
push
fsubl
test
in
iret
cmp
jmp
out
xor
push
inc
mov
lret
jmp
sub
bnd
or
scas
je
arpl
dec
aad
push
dec
aad
pushf
je
popa
lcall
cld
xchg
into
in
dec
enter
cmp
out
rcl
xchg
out
cs
and
mov
lret
ljmp
mov
inc
pop
lea
lret
sbb
in
mov
ljmp
cmc
outsl
js
sub
jge
fcmovnu
add
xchg
cs
pop
push
fnstcw
dec
aad
fldpi
cli
ds
sbb
hlt
out
mov
pop
icebp
jmp
push
fldpi
shr
xchg
into
pop
call
push
mov
xchg
into
push
outsb
mov
mov
push
into
aam
ror
aam
pop
scas
xchg
mov
repnz
push
xchg
mov
mov
ss
add
adc
pop
notb
push
daa
in
fstpl
into
aam
clc
push
daa
movsb
clc
sub
jle
into
aam
mov
jl
out
pop
push
fnstcw
dec
aad
sbb
xor
pop
shll
gs
movsl
movsb
dec
aam
xchg
testl
inc
and
aam
es
xor
inc
repnz
into
aam
push
xchg
cmp
into
loope
lea
cmpl
aam
test
and
xchg
out
jecxz
sub
and
cwtl
popa
pushf
dec
mov
pop
push
aad
or
add
and
int
jmp
dec
push
mov
xlat
inc
jecxz
push
adc
rclb
pop
je
pop
fcoml
out
gs
je
push
repz
push
aad
push
cmp
push
pushf
cmp
sub
xchg
es
iret
out
add
push
sti
test
mov
dec
shlb
subb
lods
or
xor
pop
xor
mov
and
arpl
mov
cmpsl
mov
fidivrs
and
fnsave
sbb
rcrl
sub
xchg
sub
xchg
sbb
hlt
in
mov
pop
loope
rclb
jmp
icebp
xchg
into
adc
sub
sub
cwtl
into
aam
and
fcoms
into
aam
sbb
into
jle
into
aam
add
clc
movsl
adc
pusha
sbb
rcrl
pop
fistl
loop
pushf
cwtl
scas
aas
xchg
sbb
hlt
out
mov
pop
jmp
jmp
in
xchg
into
push
out
push
cmpsl
imul
add
sbb
pop
pushf
lret
movsb
dec
aad
and
into
aam
daa
fisttpll
testb
in
fmul
aam
mov
aam
mov
cli
pop
stc
sarl
push
push
out
push
fdivr
je
aad
scas
rcl
xchg
out
xor
push
dec
mov
lret
jecxz
xchg
adc
pop
hlt
repnz
jne
cmp
out
rcl
xchg
out
cs
and
mov
lret
out
xchg
adc
pop
cwtl
push
add
imul
sahf
test
pop
push
fcoml
jge
into
aam
stos
imul
pop
pop
ljmp
negl
dec
stc
mov
push
fwait
xchg
into
mov
jno
loope
sbb
sub
xor
cs
push
inc
loope
test
in
pop
out
xchg
into
and
xchg
jb
jecxz
xchg
cmpsb
imul
jo
out
dec
jnp
push
sar
sbb
iret
pop
sbb
scas
rcl
xchg
out
xor
push
push
mov
lret
out
xchg
adc
sub
icebp
fstl
into
aam
pop
pop
aad
iret
push
mov
and
or
xchg
mov
cltd
jmp
pop
ret
fsubl
dec
lods
dec
and
cs
sub
loop
pushf
push
push
jle
dec
aad
xchg
cwtl
cmp
jmp
out
xor
push
inc
mov
lret
jmp
sub
loop
jge
xchg
lret
lret
mov
out
fsubl
dec
lods
mov
dec
notb
stc
mov
xchg
pop
repnz
fcoml
aad
xchg
into
fwait
sbb
cwtl
popa
pushf
into
aam
mov
into
inc
sahf
jle
test
cli
sub
pop
xchg
into
aam
mov
aam
and
aam
es
xor
inc
repnz
into
aam
push
xchg
mov
mov
mov
mov
iret
mov
xchg
into
sti
pusha
mov
push
jmp
into
mov
dec
mov
arpl
mov
mov
rcl
je
dec
push
mov
and
dec
popf
lret
and
pop
imul
xchg
into
cmp
push
aam
dec
xchg
mov
inc
mov
adc
xchg
or
jge
sar
int3
and
loop
pop
and
xor
nop
nop
fstl
aad
sahf
pop
pushf
out
and
pop
mov
aam
and
cwtl
into
aam
and
repnz
into
aam
sbb
push
mov
push
fcoml
iret
das
sar
and
mov
xchg
xor
xor
fcoms
into
aam
sbb
fadd
jge
add
clc
pop
cli
cltd
dec
aad
out
int
inc
and
aam
es
xor
inc
repnz
into
aam
push
xchg
jmp
xchg
enter
xlat
pop
pushf
push
push
inc
test
loop
aam
daa
frstor
into
aam
aad
aam
rcrl
pop
scas
jp
push
aaa
das
pop
push
gs
sbb
cmp
jge
into
aam
out
cwtl
hlt
push
dec
stc
cwtl
dec
adc
cwtl
aam
push
and
xchg
sub
push
lcall
xlat
sbb
mov
adc
or
rcll
das
int
bound
int3
push
fdiv
pop
cmp
out
rcl
xchg
out
das
pop
and
mov
lret
jmp
xchg
adc
pop
pop
push
cmp
adc
and
into
aam
daa
pop
xor
push
out
fcompl
das
cmpb
aam
cli
aam
iret
mov
mov
sahf
mov
aad
adc
repnz
fsubp
sbb
into
and
lret
into
aam
out
cwtl
in
push
adc
cwtl
dec
adc
cwtl
aam
pop
push
cwtl
jbe
cwtl
in
aam
aam
pop
fistl
into
aam
pop
xchg
into
shl
sub
push
bound
push
fdiv
pop
mov
xchg
into
push
mov
push
fnstcw
out
cmp
jmp
rcl
xchg
out
xor
push
push
mov
lret
in
xchg
adc
jl
mov
aam
mov
sub
and
not
jmp
pop
enter
and
das
push
int3
repnz
sbb
into
hlt
repnz
or
rclb
jmp
jmp
into
sbb
mov
fstl
jmp
bound
cmpsl
inc
popa
pushf
daa
mov
xchg
into
lahf
mov
jnp
in
into
into
aam
push
pop
sub
dec
aad
xchg
cwtl
call
jge
lret
xor
and
xchg
out
cwtl
out
push
sbb
cwtl
dec
adc
cwtl
aam
or
cwtl
pop
cmpb
mov
aad
sbb
scas
popa
pushf
xor
and
lret
into
aam
out
cwtl
in
push
adc
cwtl
dec
adc
cwtl
loop
aam
pop
push
cwtl
shrl
cmp
into
mov
cli
fsubrs
cwtl
fcomps
clc
rorl
cmp
cmc
mov
aam
aad
xor
stos
inc
and
insl
shl
lret
and
mov
fstpl
into
aam
sub
mov
lret
into
aam
out
cwtl
out
push
and
cwtl
dec
adc
cwtl
in
aam
or
cwtl
out
arpl
shl
ret
mov
xchg
into
pop
inc
jne
stos
and
mov
aad
negl
in
push
fdivr
movb
xchg
into
ds
pop
mov
xchg
into
hlt
in
mov
pop
fldpi
rclb
jmp
in
xchg
into
adc
mov
ficoms
rcrb
sar
hlt
push
pop
fidivrl
mov
push
pop
stc
push
fdivr
and
mov
xchg
xor
xor
fcoms
into
aam
sbb
imul
sub
xor
xchg
into
jecxz
into
into
aam
push
push
dec
pushf
dec
aad
ss
push
sbbl
aad
sbb
pop
pushf
xor
sub
into
aam
out
cwtl
hlt
push
dec
stc
cwtl
dec
adc
cwtl
jecxz
aam
push
and
in
xor
and
push
push
push
jae
aad
xchg
sbb
fcoms
sub
in
rclb
jmp
icebp
xchg
into
sbb
mov
lock
xor
gs
adc
mov
jns
sub
push
cs
mov
imull
int
fdivrl
rcl
xchg
daa
dec
mov
repz
mov
aad
cmc
jns
pusha
push
leave
fistpl
pop
mov
enter
and
ret
pop
fcoml
and
cmpsl
dec
mov
mov
aad
or
pop
pop
cmc
push
fcompl
into
pop
sbb
pop
pushf
into
aam
pop
adc
sbb
cs
repnz
popa
pushf
push
push
add
aad
and
pushf
and
push
aam
pop
hlt
pop
pushf
dec
xchg
loope
push
xchg
into
int
and
cwtl
into
aam
and
repnz
into
aam
sbb
repnz
and
pushf
and
iret
popa
data16
and
cmp
jmp
rcl
xchg
out
xor
push
push
mov
lret
out
xchg
adc
out
and
into
into
aam
push
add
dec
aad
test
into
aam
stos
lret
jae
js
lahf
inc
pop
mov
or
bound
fcoms
fstpl
enter
and
mov
xchg
das
push
sbb
fcoms
into
aam
sbb
add
mov
cmp
mov
aam
mov
cmc
sub
cmp
jmp
out
xor
push
inc
mov
lret
call
sub
jge
out
cmp
xchg
fstpl
into
aam
aad
aam
pop
loopne
cmp
mov
xor
mov
aad
into
leave
push
pop
inc
add
and
aam
push
xchg
inc
notb
lds
sbb
xchg
pop
fmulp
push
fcoml
and
cwtl
into
aam
and
repnz
into
aam
sbb
inc
idivb
into
aam
dec
xor
pop
jmp
pusha
shlb
cmpb
subb
push
pop
pushf
mov
aam
mov
xchg
sarb
jbe
into
es
into
aam
out
cwtl
out
push
and
cwtl
dec
adc
cwtl
fmulp
aam
or
cwtl
or
movsb
dec
iret
aam
mov
loopne
scas
into
aam
sub
cmp
push
lea
repnz
popa
pushf
push
push
inc
jae
aad
sbb
add
xchg
in
adc
test
adc
mov
je
jp
in
imull
lret
push
fdivr
and
cwtl
into
aam
and
repnz
into
aam
sbb
push
ret
xor
pop
mov
mov
xchg
cs
adc
fcoms
into
aam
sbb
imul
aad
xchg
pop
mov
xchg
into
hlt
in
mov
pop
fldpi
rclb
jmp
out
xchg
into
adc
mov
push
icebp
arpl
dec
aad
sbb
into
aam
mov
aam
lods
jmp
sahf
jno
mov
jmp
lcall
cs
xchg
stc
mov
jns
int3
in
push
aad
into
cs
daa
mov
xchg
into
repnz
in
pop
clc
fwait
aaa
adc
imul
mov
cwtl
ss
xor
cs
sub
pop
cltd
jmp
loope
into
and
popa
xor
xor
xchg
add
sub
lcall
int
xchg
into
aam
and
aam
es
xor
inc
repnz
into
aam
push
xchg
cmp
orb
iret
pop
mov
push
fdivr
push
repz
into
ds
sbb
hlt
out
mov
pop
icebp
jmp
push
fldpi
shr
xchg
into
pop
call
xor
adc
xchg
into
pop
lods
rorl
push
lahf
xor
push
pop
fnsetpm(287
sbb
pop
pop
test
sub
sbb
into
aam
into
into
aam
pop
inc
dec
or
cmp
jmp
rcl
xchg
out
xor
push
push
mov
lret
in
xchg
adc
int3
mov
iret
mov
xchg
into
pop
das
addr16
mov
ror
lcall
sub
sbb
sbb
aam
and
push
mov
inc
repz
mov
mov
sbb
sbb
and
mov
xchg
into
ja
mov
test
cmp
xchg
fwait
popa
fldl
out
pop
push
mov
call
inc
dec
mov
cmpsl
lcall
fstl
into
aam
sbb
xor
enter
into
aam
pushf
test
cmc
jp
in
fcompp
stos
inc
ret
xlat
dec
sub
fldpi
sarb
int
adc
ds
fcoml
iret
lcall
rclb
jge
into
aam
cmpsb
xchg
mov
imulw
pop
pop
out
xchg
pop
fdivrl
into
aam
cli
sub
mov
mov
push
jno
mov
dec
in
stos
sbb
cmp
pop
pushf
rclb
mov
aam
daa
enter
xchg
popf
insb
call
inc
std
xor
sbb
and
sbb
into
aam
pop
and
lds
es
pop
cs
and
push
leave
jmp
out
cld
fstpl
into
aam
dec
fcom
xchg
mov
xchg
into
clc
mov
mov
jge
out
sbb
cmp
xchg
es
push
gs
sbb
das
bound
and
aam
loope
fcompl
mov
mov
adc
movsl
inc
push
mov
mov
xchg
sub
adc
into
aam
pop
xchg
jecxz
fcmovnu
cmp
aad
and
mov
xchg
das
push
sbb
fcoms
into
aam
sbb
int
ror
aam
jnp
lds
hlt
fstl
into
aam
pop
sbb
sbb
cmp
mov
mov
xchg
into
dec
and
dec
mov
into
call
cmpsl
cmp
rcrb
cmp
inc
and
aam
es
xor
inc
repnz
into
aam
push
xchg
cmp
and
aas
xchg
xor
es
into
aam
out
cwtl
out
push
and
cwtl
dec
adc
cwtl
loop
aam
or
cwtl
in
lahf
xorl
mov
aam
ljmp
out
fcoml
into
aam
pop
xchg
sbb
pop
xor
xchg
into
sub
pop
sub
ret
mov
add
out
das
notb
push
daa
cmc
daa
das
in
enter
sub
add
xchg
and
out
pop
pop
xor
pusha
cltd
es
push
stos
and
daa
dec
mov
xchg
into
mov
or
in
mov
cmp
sub
push
clc
push
fdivr
push
mov
mov
xchg
sub
adc
into
aam
pop
xchg
bound
into
aam
pop
push
bound
push
imul
dec
aad
push
sub
mov
xchg
into
fnsave
xchg
jmp
stc
mov
into
xor
mov
mov
jb
push
fcompl
iret
pop
pop
mov
dec
sbb
sbb
pop
pop
scas
jecxz
fcompl
iret
xchg
pop
repnz
fcoml
aad
xchg
into
popa
sbb
push
lea
xchg
fcoms
sub
jmp
push
fldpi
shr
xchg
into
push
out
pusha
imul
pop
pushf
push
arpl
dec
aad
and
iret
pop
pushf
addl
fnstenv
jnp
push
stc
mov
addr16
pop
stc
push
rcl
xchg
into
mov
cltd
cmp
test
sbb
stc
and
cmp
popf
pop
shl
sbb
push
cltd
cltd
rorb
xor
xchg
sbb
daa
jmp
pop
xor
adc
in
xor
aam
test
ror
cmpsb
cmp
add
sbb
pop
xor
push
inc
stc
xchg
cmp
lock
xlat
adc
out
xlat
or
out
rcrb
xchg
int
and
lock
sub
push
rcrb
cmp
push
cwtl
cmp
sbb
mov
sets
xor
test
pop
fstps
lret
adc
mov
sub
out
and
mov
and
into
dec
sbb
cmp
rcrb
into
aam
daa
dec
jl
cmp
aaa
xchg
frstor
into
aam
dec
out
xchg
sub
loope
dec
xchg
dec
mov
mov
test
js
mov
push
mov
add
push
sbb
lock
push
mov
mov
into
aam
dec
rcl
xchg
movl
xlat
xchg
into
pop
mov
fmuls
mov
jecxz
jo
aam
sub
dec
or
nop
ss
addr16
pop
mov
xor
mov
ljmp
inc
imul
adc
xchg
imul
jp
xor
dec
and
fisttps
xor
mov
and
cmp
fsubp
dec
and
call
push
pop
mov
aaa
cmp
dec
and
adc
popf
jecxz
inc
out
xor
stos
xchg
mov
push
jmp
and
cmp
fsubp
dec
and
call
push
pop
fs
cmp
aaa
cmp
dec
and
adc
fdivs
mov
mov
mov
fisttps
push
mov
fisttps
push
out
clc
or
ficomps
cmp
dec
and
sub
sbb
fisttps
jbe
or
jns
xor
sbb
xor
fisttps
iret
jle
ljmp
and
mov
lods
push
sti
and
fbstp
aaa
mov
mov
push
dec
push
repnz
sub
dec
and
out
dec
and
ss
rolb
roll
popf
mov
mov
sbb
out
lock
jb
xor
int3
inc
xor
loop
and
mov
lret
or
adc
jmp
cmpsl
nop
push
push
inc
clc
bound
and
mov
and
fildll
mov
daa
sbb
into
pop
sbb
sbb
int
pop
push
pop
aaa
jge
shrl
mov
push
jge
rorb
push
insb
repz
push
test
in
fistl
or
aas
dec
and
mov
fistps
push
adc
cwtl
xor
inc
xchg
sub
dec
and
insl
repz
push
push
mov
insb
fisttps
mov
push
push
and
out
rorl
sti
daa
fisttps
enter
pop
aam
sbb
sbb
jb
push
ret
faddp
mov
sbb
xor
inc
shlb
fisttps
push
mov
outsl
push
mov
xor
mov
out
clc
or
xor
and
mov
and
fildll
jg
cmp
scas
sbb
into
pop
sbb
adc
xchg
sbb
fistps
lds
push
mov
or
insl
adc
repz
jmp
les
fisttps
ss
sbb
mov
dec
mov
xor
mov
push
push
mov
outsl
jge
insb
or
mov
cwtl
xor
inc
xchg
dec
loop
and
fistps
cmp
dec
and
cmp
xchg
adc
fisttps
jp
or
cmp
mov
rcl
push
ljmp
fnstenv
xor
loope
aad
push
inc
cld
insl
es
in
inc
outsl
into
repz
jmp
loope
pop
pop
inc
pop
pop
or
pusha
or
fisubs
lds
test
outsl
jge
xchg
out
xor
repz
ret
xchg
sub
fmuls
sub
pop
fistps
cmp
dec
and
sub
sbb
fisttps
jbe
or
push
xor
fisttps
xchg
fcomi
daa
fldenv
lcall
lret
fisttps
ss
inc
push
mov
dec
mov
xor
mov
loop
cmp
loope
and
call
push
pop
mov
aaa
cmp
dec
and
adc
out
xor
adcb
pop
lret
adc
dec
mov
das
call
inc
insl
mov
dec
mov
xor
mov
inc
aad
out
leave
sbb
lods
dec
adcl
cmp
rorl
xor
sti
outsb
xchg
insb
out
lds
xor
cmp
pop
push
movsb
fimuls
xor
loopne
aaa
xor
push
mov
loope
and
call
push
pop
pop
aaa
cmp
aaa
cmp
dec
and
and
leave
mov
js
and
orl
inc
and
filds
mov
add
xacquire
sarb
push
jge
mov
mov
and
fistps
fwait
repnz
mov
clc
fldl
pop
and
fbld
das
mov
out
call
mov
in
and
dec
and
fildll
cmp
movl
xor
add
and
dec
and
pop
dec
and
filds
fisttps
pop
pop
mov
sti
cmp
dec
and
sbb
inc
sti
pop
fisttps
pop
fistps
cmp
dec
and
cmp
sub
mov
sub
sub
and
arpl
fsubp
dec
and
cmc
int3
fcoms
cli
adc
lret
add
mov
and
pop
out
je
rolb
xor
inc
lds
dec
and
mov
je
jecxz
jns
push
into
or
loop
cmp
fcomip
pop
out
adc
mov
cmp
fsubp
dec
and
call
push
pop
mov
cmp
aaa
cmp
dec
and
push
pop
fadd
jle
inc
int
arpl
xor
sahf
xchg
lret
push
pusha
xchg
outsl
and
ret
xchg
mov
out
clc
or
push
inc
inc
popf
aaa
fisttps
dec
imul
push
mov
les
mov
dec
and
enter
xor
sbb
mov
dec
mov
xor
mov
cmp
push
adc
dec
and
push
mov
xor
mov
and
fildll
cmp
movl
xor
sarb
fdivp
dec
and
rcrl
stos
or
daa
pushf
add
std
push
add
and
fbld
imul
xchg
cmp
cmpsl
sbb
into
pop
sbb
adc
xor
mov
pop
jne
out
cld
mov
and
fisttps
pop
push
fdivl
push
and
dec
and
filds
aaa
fisttps
dec
mov
xor
push
fisttps
xor
insb
rorb
sar
aad
sbb
add
jae
jnp
cld
mov
pop
sbb
jmp
cltd
les
mov
aad
pop
mov
pop
lret
sahf
adc
cmp
dec
and
sub
sbb
fisttps
js
or
and
push
xor
test
std
push
aad
jp
and
sbb
adc
mov
das
call
inc
insl
mov
dec
mov
xor
mov
add
and
jo
pop
fnsave
and
cmp
or
jecxz
push
dec
and
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
fisttps
xor
insb
lret
popf
inc
insb
dec
cmp
pop
lret
fldl
dec
jle
scas
or
imul
xor
cmp
dec
and
pop
push
and
filds
xor
and
daa
push
mov
pop
pusha
push
or
xor
adc
sbb
cmp
iret
mov
das
cli
sbb
mov
pop
lret
adc
dec
mov
jle
sti
push
sbb
sti
jbe
dec
and
popf
xlat
mov
inc
insb
dec
fwait
cmp
lret
fldl
dec
sbb
outsl
into
or
iret
cmp
fidivs
insl
xor
add
cwtl
cld
ror
xor
jp
pop
ret
pop
cmp
fwait
mov
insb
lret
jl
insb
dec
fwait
or
fwait
cmp
cld
and
dec
and
or
int3
es
gs
cmp
adc
stos
lret
sub
cmp
dec
inc
xchg
mov
sti
mov
filds
cmp
dec
and
xchg
jnp
fisttps
insl
aas
inc
xchg
jae
sbb
xor
leave
push
jge
mov
movsl
inc
dec
pop
pop
sbb
rolb
cmp
loopne
pop
mov
aad
faddp
scas
rcll
aad
cmp
pop
and
in
adc
shll
pusha
cmp
lods
fnsave
push
mov
xor
sub
pop
mov
mov
xor
ja
test
xor
sbb
xor
push
adc
jae
or
rolb
and
push
or
and
stc
adc
adc
mov
pop
sub
test
outsl
outsb
test
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
int
mov
push
imul
mov
xchg
mov
xchg
ljmp
cmp
prefetch
mov
or
pop
xchg
call
xchg
mov
mov
xchg
mov
xchg
incb
inc
repnz
mov
cmp
nop
and
jp
and
mov
cmp
pop
xchg
lock
add
pop
jo
mov
xor
faddl
cmc
pusha
test
mov
jmp
pop
imul
and
inc
xchg
push
pop
ljmpw
adc
lock
in
mov
xchg
mov
xchg
push
push
data16
mov
call
xchg
in
mov
dec
pop
mov
cmp
lcall
lock
jmp
cmp
or
push
push
inc
xlat
xchg
mov
or
add
xchg
sub
sub
or
sub
and
xchg
aaa
lcall
and
mov
xchg
lcall
pop
mov
mov
int
sub
jae
inc
test
sub
dec
bnd
inc
sub
and
add
dec
dec
mov
lods
orb
push
std
jbe
xchg
xor
nop
and
add
sbb
jmp
nop
xchg
inc
mov
and
gs
outsb
mov
xchg
mov
or
rorl
add
cmp
jbe
movsl
mov
xor
adc
jmp
pop
cmp
sbb
mov
mov
jle
movsb
ror
sub
decb
movsl
and
bound
mov
loop
or
add
xchg
sub
sub
or
sub
and
xchg
xor
xor
and
cli
pushf
pop
inc
mov
xchg
das
and
jo
sub
bound
aaa
jae
xor
loopne
fiaddl
push
cmp
pop
xchg
in
or
daa
or
inc
mov
fwait
jle
xor
mov
call
pop
add
cmpsb
jnp
jne
mov
jmp
pop
cmp
pop
xchg
call
pop
xchg
jb
rcr
adc
or
add
xchg
sub
sub
or
sub
and
xchg
dec
popf
dec
mov
mov
int
ret
mov
mov
popa
and
repnz
call
nop
and
mov
xchg
push
push
data16
mov
call
xchg
in
xlat
jo
fimuls
icebp
xchg
idiv
icebp
mov
call
enter
mov
icebp
mov
xchg
dec
sub
fisttps
add
xchg
sub
sub
or
sub
and
xchg
dec
popf
dec
sbb
icebp
mov
std
out
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int
mov
push
scas
xlat
and
test
das
xor
cld
shld
cmp
xchg
mov
push
stc
pop
pop
shll
mov
in
add
and
add
out
mov
arpl
mov
mov
xchg
fisttps
add
xchg
sub
sub
or
sub
sub
cltd
dec
movsb
xor
pop
mov
shl
dec
inc
mov
push
mov
xchg
fisttps
add
xchg
sub
sub
or
sub
or
or
lock
mov
inc
push
push
adc
pop
sub
inc
arpl
cmp
or
jmp
or
add
xchg
sub
sub
or
sub
and
xchg
xor
imul
inc
lcall
punpcklwd
mov
xchg
push
push
data16
mov
call
xchg
in
popa
pop
mov
ret
scas
shrl
xchg
mov
lods
int3
aas
mov
movsl
push
add
jmp
xchg
fistl
and
xlat
mov
push
jno
xchg
dec
loope
std
fadds
lds
dec
jo
faddl
cmp
nop
and
std
mov
clts
mov
mov
xchg
push
push
data16
mov
call
xchg
cmc
inc
arpl
or
int
adc
jae
cmp
or
ja
jbe
xchg
sub
sub
or
sub
and
xchg
dec
popf
dec
loopne
pop
jmp
adc
loopne
in
loope
loop
mov
adcl
push
push
jbe
lret
in
jmp
leave
push
mov
pop
xchg
mov
fdivrl
lods
mov
movsl
movsl
push
or
cli
ljmp
pop
cmp
push
jae
lcall
lock
cmp
adc
mov
cmp
cmp
mov
mov
sbb
xchg
xchg
mov
jbe
jbe
push
adc
jmp
stc
or
enter
call
mov
xchg
mov
jge
call
pop
push
cli
sbb
sbb
insb
lock
repz
push
mov
stos
mov
cmp
xlat
or
cld
sbb
ds
pop
fdiv
xor
pop
and
loopne
push
add
xchg
sub
sub
or
sub
and
xchg
xor
in
out
or
test
push
mov
adc
jae
or
mov
xchg
notb
arpl
or
nop
and
int
arpl
testb
pop
xchg
push
addr16
call
mov
mov
xchg
in
movsl
in
push
pop
push
jns
pop
add
mov
or
nop
and
mov
xchg
push
outsb
ds
ss
xchg
cmp
scas
pop
cmc
xchg
mov
int
push
arpl
cmp
or
jmp
or
add
xchg
sub
sub
or
sub
and
xchg
xor
or
nop
and
add
sahf
out
push
push
mov
lcall
and
and
or
push
cld
repnz
jmp
movsl
outsb
cmp
xor
push
mov
cmp
out
xlat
push
sub
outsb
mov
mov
jp
mov
xchg
push
push
outsb
ss
xchg
push
jle
dec
call
repnz
icebp
movswl
mov
adc
mov
xchg
sbb
insb
cwtl
push
lods
jne
adc
incb
push
movsl
std
out
cmp
jae
movsb
mov
xor
adc
jmp
pop
cmp
int
cmp
out
inc
in
mov
sahf
mov
loop
or
add
xchg
sub
sub
or
sub
and
xchg
aaa
lcall
in
loope
loop
xlat
mov
loop
or
lock
lahf
pop
jecxz
pop
xchg
xorl
cmp
xor
pop
movsl
add
sub
data16
bound
dec
repz
lcall
mov
xchg
xchg
lods
mov
pop
leave
dec
jbe
mov
cld
hlt
or
push
push
or
sub
lea
jae
pushf
jl
sbb
xchg
mov
cld
cld
adc
jne
lcall
jnp
std
ljmp
jecxz
cmc
mov
jae
pop
sbb
fisttps
add
xchg
sub
sub
or
sub
and
xchg
dec
cwtl
dec
dec
ljmp
data16
imul
jae
xor
mov
in
mov
add
in
jmp
pop
es
mov
pop
xor
adc
jmp
pop
lret
xorl
mov
cmp
xchg
mov
outsb
mov
xchg
lret
mov
dec
jbe
xchg
mov
jbe
sbb
inc
push
xor
xlat
push
inc
inc
push
inc
repnz
sub
xchg
mov
test
cltd
movsl
push
mov
clc
jmp
lea
push
loopne
jbe
jbe
xchg
sub
sub
or
sub
sub
cwtl
dec
mov
stc
or
jae
je,pt
movsb
ffree
bound
jg
and
mov
xchg
push
outsb
ds
ss
xchg
cmp
xchg
shll
loop
xchg
addr16
jns
dec
repnz
std
mov
mov
dec
jle
push
cmp
or
jmp
pop
scas
cwtl
lahf
loopne
add
or
jns
cmp
jnp
icebp
pushf
in
inc
int
inc
sbb
sarl
mov
orb
pop
ds
setle
jnp
mov
mov
ja
push
fiaddl
aas
inc
jno
in
jmp
mov
mov
pushf
movsw
cmpl
xchg
or
hlt
xchg
mov
dec
repnz
jg
data16
outsl
push
push
xor
jmp
pop
adc
jp
outsl
mov
lea
and
cltd
push
aas
jge
hlt
addr16
push
pop
xchg
mov
xchg
mov
outsb
mov
xchg
lret
mov
dec
jbe
xchg
mov
jbe
cmpsl
or
aas
mov
xchg
mov
mov
add
movsl
adc
arpl
xchg
mov
xchg
push
push
data16
call
mov
mov
xchg
out
inc
std
imul
repnz
xchg
mov
push
daa
or
jns
inc
pusha
pop
clc
mov
negb
mov
jne
call
xlat
push
mov
mov
jl
jge
xchg
sbb
sbbl
and
push
jnp
pop
inc
mov
xchg
iret
lret
dec
dec
loop
mov
add
or
outsb
jne
pop
leave
dec
jbe
aaa
jmp
pop
pop
xor
repz
negb
cmp
mov
cmp
outsb
cld
sbb
adc
or
xchg
lret
xor
jmp
pop
addr16
push
push
cltd
lcall
xlat
and
mov
adcb
jmp
out
mov
xchg
add
mov
dec
jbe
xchg
mov
jnp
das
ret
xchg
jbe
nop
cmp
mov
mov
call
pop
xchg
cmp
addr16
sbb
adc
xor
mov
icebp
out
movsb
jbe
call
pop
xchg
ljmp
jmp
sub
cmp
push
jae
mov
add
repz
lcall
mov
loop
mov
mov
xchg
mov
pop
cmp
idivb
imul
xchg
jp
cmp
mov
pop
in
pop
xchg
outsl
call
pop
cmp
cmp
jmp
adc
lds
lods
xchg
adc
cmpsb
push
jae
pop
mov
in
mov
cmp
xchg
rorb
sub
push
xchg
jbe
jnp
adc
mov
pop
inc
mov
xchg
mov
movsl
js
repnz
push
pop
div
xlat
push
cmp
xor
loop
push
repnz
fsts
lret
sbb
or
mov
xchg
mov
add
in
jmp
pop
es
mov
pop
xor
adc
jmp
pop
lret
xorl
sub
add
xchg
lods
imul
cmp
cmp
imul
popw
testb
xchg
pop
xchg
push
push
data16
call
mov
pop
xchg
out
or
icebp
mov
bnd
loop
or
add
xchg
sub
sub
or
sub
and
xchg
aaa
lcall
push
lods
push
lods
lcall
mov
cmp
or
jmp
fldl
sti
sbb
mov
mov
sub
nop
cld
push
and
pop
xchg
mov
xchg
push
push
outsb
ss
xchg
push
pop
imul
les
pop
cmp
jns
lock
movswl
pop
mov
push
std
jb
pop
xchg
jp
out
push
mov
pop
divb
repnz
push
daa
or
cmpsl
dec
test
jns
or
pop
adc
icebp
adc
nop
and
mov
pop
xor
nop
and
leave
fmuls
inc
mov
xchg
jns
xchg
sti
sub
jle
cmp
mov
lock
sahf
pop
repnz
push
lods
jbe
ds
insb
sub
cmp
jbe
add
xchg
sub
sub
or
sub
and
xchg
mov
pushw
je
xchg
out
jge
in
pusha
dec
call
mov
loop
popa
scas
in
nopl
mov
xchg
ljmp
sub
pop
std
js
pop
arpl
std
push
xchg
mov
addr16
or
add
xchg
sub
sub
or
sub
or
dec
inc
jle
jno
in
rolb
ds
mov
push
or
scas
lret
fisttps
pop
cmc
loop
cmp
lods
jbe
ljmp
jmp
pop
push
jae
push
xor
out
pop
xchg
dec
add
push
orl
jbe
add
in
jmp
pop
es
mov
pop
xor
adc
jmp
pop
lret
xorl
mov
push
bnd
loop
or
add
xchg
sub
sub
or
sub
and
lcall
mov
ja
jmp
cltd
aaa
arpl
cmp
pop
xchg
rorl
aad
cmc
ret
mov
out
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int
mov
nopl
adc
ljmp
pop
xchg
loop
sub
inc
or
jb
push
mov
fimuls
add
xchg
sub
sub
or
sub
and
xchg
xor
dec
xchg
xor
fists
jnp
mov
mov
xor
inc
std
add
or
jmp
or
add
xchg
sub
sub
or
sub
sub
xchg
xor
dec
ja
xchg
in
inc
sub
pop
jns
and
loopne
jbe
jbe
xchg
sub
sub
or
sub
and
xchg
dec
cwtl
dec
jb
push
push
addr16
xchg
sub
lret
pop
nop
and
idivl
or
adc
lods
cmp
or
jmp
pop
pop
mov
inc
mov
jb
pop
mov
push
push
xchg
mov
lcall
addr16
sub
xchg
xor
pop
nop
and
jp
enter
add
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int3
cmp
sti
pop
loopne
push
cltd
or
pushf
jl
call
xlat
mov
jne
xlat
push
cmpb
jmp
pop
push
jne
pushf
pushw
jns
xchg
xchg
ret
shrl
out
ret
xchg
jmp
pop
jbe
jnp
push
jae
pop
add
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int3
cmp
fiadds
es
xchg
add
pop
xchg
negb
imul
push
data16
or
or
pop
nop
and
sub
xchg
xchg
xchg
mov
lods
mov
xor
mov
cmp
xor
mov
cmpsl
lret
icebp
movsb
lds
cmpl
push
mov
or
test
pop
xchg
push
push
data16
call
mov
pop
xchg
out
std
lods
inc
cmp
icebp
mov
xchg
push
xchg
loopne
push
aas
mov
xchg
movsl
xchg
fnsave
mov
mov
std
push
push
std
mov
xchg
shl
leave
pop
orl
pop
cmp
pop
xchg
jmp
pop
xchg
cmp
cmp
pop
xchg
out
movsb
push
sbb
pop
nop
and
pop
jecxz
jmp
sbb
mov
iret
repnz
aaa
aas
std
xor
clc
loopne
mov
call
mov
xchg
mov
xchg
push
push
data16
mov
call
xchg
in
or
inc
roll
add
loope
pushf
push
mov
jmp
mov
je
adc
mov
xchg
repnz
jbe
lret
fadds
mov
loop
outsb
jb
xchg
cmp
and
and
icebp
movswl
call
xor
jmp
pop
ret
cmpsb
add
xchg
dec
insl
test
pop
xchg
push
outsb
ds
ss
xchg
cmp
sti
hlt
adc
and
xor
jno
lret
inc
in
int3
scas
sub
mov
ret
cmp
pop
push
fldl
lods
xor
cmpsb
movsb
pop
aad
adc
push
jae
pop
movsb
rolb
out
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int3
cmp
pop
jae
sbbb
loop
xlat
movsb
out
mov
xchg
mov
jmp
push
leave
out
popa
mov
push
jl
xchg
std
mov
punpcklwd
dec
jmp
jbe
mul
xchg
mov
mov
push
jl
xchg
cld
int3
xlat
mov
jb
xor
fldt
out
pop
xchg
jno
xlat
test
jne
iret
pop
and
loop
pop
cmp
shld
pop
pop
inc
inc
repnz
data16
test
fcmovbe
cli
cmc
roll
push
adc
mov
xchg
lret
mov
dec
jbe
xchg
mov
jbe
mov
cmp
or
jmp
test
std
in
mov
xchg
jmp
add
nop
mov
push
jg
xchg
test
lods
lods
sbb
mov
jmp
pop
cmc
push
xchg
jp
int
mov
push
mov
xchg
push
push
data16
call
mov
mov
xchg
out
pop
and
outsb
xchg
data16
mov
nop
and
popf
and
jae
inc
cld
hlt
mov
jmp
mov
adcb
jmp
out
mov
xchg
add
mov
dec
jbe
xchg
mov
jnp
shl
mov
ja
cmp
in
packuswb
icebp
packuswb
or
jmp
mov
ds
adc
mov
xchg
bound
mov
dec
jbe
xchg
mov
ja
push
mov
loopne
fwait
mov
push
add
call
or
jle
adc
or
push
add
xchg
sub
sub
or
sub
das
or
mov
adc
push
js
add
xlat
mov
add
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int
mov
xchg
cmp
stc
mov
mov
mov
mov
icebp
lret
pop
jecxz
mov
rorb
mov
push
scas
inc
xor
push
pop
add
stos
xorl
xor
push
mov
xchg
in
lea
push
sbb
push
xchg
or
push
jae
or
and
mov
push
out
mov
xchg
push
push
data16
call
mov
mov
xchg
out
xchg
popf
mov
and
mov
jmp
pop
cmp
pop
xchg
rcrl
movsl
frstor
arpl
mov
jmp
or
add
xchg
sub
sub
or
sub
and
xchg
xor
mov
mov
pop
inc
repnz
lods
enter
test
mov
inc
repnz
rorb
jl
cmp
outsb
cld
sbb
outsb
outsb
jbe
repnz
mov
add
jecxz
jmp
pop
es
cmpsb
mov
xor
adc
jmp
pop
pusha
xorl
test
jmp
aad
or
xor
add
test
fcmovnb
pop
nop
and
mov
xchg
push
outsb
ds
ss
xchg
cmp
xchg
cltd
mov
mov
loopne
nop
and
lret
jo
std
mov
jmp
pop
movsl
repz
lahf
cmp
xlat
push
jne
pushf
jl
sbb
ja
repz
jbe
pop
mov
push
aaa
push
push
lcall
test
mov
sbb
mov
add
cmp
jbe
cmp
ja
lock
pop
out
pop
xchg
inc
fildll
inc
mov
or
mov
mov
icebp
packuswb
mov
push
xor
jmp
pop
rcr
xchg
dec
ret
xor
sarl
xor
clc
cmp
jnp
push
jae
adc
jmp
insl
or
in
cmc
lret
scas
push
out
loop
jmp
pop
mov
adc
xor
adc
jmp
pop
popa
je
cmc
add
or
sti
inc
aad
rcrb
in
mov
je
mov
adc
and
inc
mov
icebp
pextrw
imul
pop
adc
out
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int3
cmp
inc
mov
call
dec
jl
cs
inc
mov
pop
xchg
push
push
data16
mov
call
xchg
xchg
fwait
scas
outsb
int
ret
bound
fwait
in
inc
pop
cmp
jbe
push
mov
mov
loop
and
inc
pop
cmp
jbe
xchg
mov
popa
ret
jns
jl
pop
xchg
lock
fsubp
icebp
nop
mov
xchg
sub
dec
add
cmp
jbe
movsl
mov
xor
adc
jmp
pop
cmp
dec
inc
pop
hlt
adc
xchg
popf
neg
xor
fists
scas
cld
sbb
xor
loopne
iret
mov
jmp
or
add
xchg
sub
sub
or
sub
and
xchg
aaa
lcall
push
adc
fidivrs
inc
mov
mov
out
jecxz
jmp
pop
es
cmpsb
mov
xor
adc
jmp
pop
pusha
xorl
mov
arpl
cmp
add
xchg
sub
sub
or
sub
and
xchg
aaa
lcall
imulb
data16
xchg
ljmp
addr16
mov
xchg
jb
xchg
inc
add
xchg
imul
mov
ds
adc
mov
xchg
bound
mov
dec
jbe
xchg
mov
ja
sub
jle
movsl
leave
fcos
mov
out
jne
jmp
pop
xchg
mov
xchg
mov
xchg
add
test
imul
mov
mov
mov
js
shlb
cmp
fwait
aam
jp
or
add
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int3
cmp
cmpl
decb
cmp
jbe
movsl
mov
xor
adc
jmp
pop
cmp
mov
add
xchg
ret
out
xchg
jp
mov
fldl
dec
add
pushf
int
add
adcb
mov
int
ret
bound
fwait
in
inc
pop
cmp
jbe
push
mov
mov
loop
popa
shlb
in
movsb
or
loop
adcl
out
dec
jecxz
pop
mov
loop
popa
jmp
decb
mov
in
movsb
add
cmp
jae
movsb
mov
xor
adc
jmp
pop
cmp
jp
ds
adc
mov
xchg
bound
mov
dec
jbe
xchg
mov
ja
call
movsl
lds
loope
arpl
inc
mov
pop
xchg
push
push
data16
mov
call
xchg
in
shlb
aas
arpl
or
nop
and
nop
mov
xchg
sti
adc
jmp
cltd
jbe
jnp
push
jae
pushf
jbe
cmp
outsb
jae
enter
xlat
movsl
xor
or
popa
cli
mov
out
sbb
cmpsl
mov
in
pushf
jl
jmp
mov
cmp
pop
xchg
push
jbe
and
ret
enter
xlat
mov
mov
movsb
outsb
push
xor
xchg
nop
or
nop
and
mov
xchg
push
addr16
call
mov
pop
xchg
in
int3
xlat
leave
pop
es
in
mov
push
cmp
das
mov
mov
xchg
mov
cmp
or
data16
xchg
jp
cmp
pop
xchg
out
movsb
jbe
jecxz
push
mov
lcall
jp
jbe
jnp
push
jae
movsb
addr16
call
or
jmp
push
push
or
iret
cld
jne
mov
mov
inc
js
xlat
push
push
or
inc
xchg
call
subl
jne
pop
test
jg
xchg
pop
dec
push
push
xchg
aaa
xlat
test
push
adc
call
mov
stos
stos
or
mov
inc
mov
jmp
pop
es
movsb
mov
xor
adc
jmp
pop
cmp
shlb
push
jae
data16
iret
cmp
or
inc
mov
xchg
sbb
jo
fsubl
dec
repnz
or
jmp
movsl
outsb
outsb
inc
hlt
mov
loope
or
out
cmp
jbe
movsl
mov
xor
adc
jmp
pop
cmp
out
push
push
mov
out
cmp
jae
movsb
mov
xor
adc
jmp
pop
cmp
xchg
mov
data16
mov
push
mov
cmp
mov
push
mov
xchg
jp
jbe
lret
loopne
jmp
int
mov
push
push
daa
add
movsb
stc
mov
sub
loop
add
cmpsl
ja
xchg
jl
push
xchg
inc
aaa
icebp
mov
stos
shlb
jmp
add
popf
push
out
mov
xchg
push
push
data16
mov
call
xchg
out
mov
loop
or
add
xchg
sub
sub
or
sub
and
xchg
mov
jmpw
cmp
sarl
jae
push
mov
iret
repz
loop
mov
repnz
test
pop
xchg
push
outsb
ds
ss
xchg
cmp
mov
lods
add
cld
repz
jae
lcall
jbe
in
fcmovne
add
sub
mov
imul
mov
cmp
mov
push
mov
xchg
jp
jbe
lret
jecxz
jmp
int
mov
pop
mov
cld
std
push
xchg
mov
xor
and
mov
adc
mov
xchg
bound
mov
dec
jbe
xchg
mov
ja
ds
adc
xchg
or
mov
xchg
push
push
data16
mov
call
xchg
in
out
pushf
push
sub
ljmp
loop
or
add
xchg
sub
sub
or
sub
and
xchg
dec
popf
dec
pop
and
jno
jns
cmp
mov
pop
sti
mov
xchg
test
in
sub
pop
or
mov
out
pop
xchg
out
lcall
mov
cmp
or
jmp
loope
fidivs
push
fcmovbe
cmp
xor
ja
and
and
jmp
jmp
movsb
xor
sub
or
mov
add
mov
mov
scas
cmc
and
icebp
mov
xchg
daa
lods
sbb
mov
lcall
loope
arpl
xchg
mov
push
mov
xchg
push
dec
jbe
lret
fiadds
mov
test
movsl
std
nop
mov
xchg
lret
lret
and
pop
es
mov
mov
lock
out
cmp
jbe
movsl
mov
xor
adc
jmp
pop
cmp
and
xlat
push
jns
mov
push
cmp
mov
lret
jbe
lods
sahf
push
aad
test
xchg
out
pushf
out
sub
ja
xchg
hlt
popa
into
inc
loope
sti
or
pop
push
jnp
xchg
add
jns
out
pop
mov
cmpb
mov
jp
sbb
cmc
mov
and
mov
mov
icebp
in
xor
add
add
xchg
sub
sub
or
sub
and
xchg
aaa
lcall
sbb
movsl
cwtl
shl
mov
inc
repnz
mov
xchg
stc
pop
lods
div
or
lock
push
pushl
loope
loop
lea
or
mov
push
je
xchg
mov
push
push
jb
xchg
ret
fisttpll
cmp
mov
lods
push
push
xor
jmp
pop
dec
jae
lds
sub
jle
dec
movsl
and
jae
push
arpl
pop
loopne
xchg
mov
loop
or
add
xchg
sub
sub
or
sub
sub
xchg
dec
cwtl
dec
push
pop
jae
jbe
mov
mulb
or
and
jne
bound
xor
daa
or
in
sbb
add
lea
loopne
in
loope
loop
mov
cmp
xchg
mov
outsb
mov
xchg
lret
mov
dec
jbe
xchg
mov
jbe
xor
xchg
add
xchg
cmp
mov
xchg
sub
sti
cld
push
xchg
mov
cmp
lcall
pop
ss
sbb
xchg
loope
outsb
push
sti
fiaddl
push
je
xchg
push
sub
mov
mov
mov
cld
notb
xchg
mov
pop
out
mov
xchg
call
xchg
mov
jmp
pop
addr16
add
inc
push
pop
cld
sub
movsb
pop
daa
arpl
fstpt
xor
push
out
mov
xchg
push
insl
ss
ss
xchg
cmp
in
mov
mov
xchg
push
adc
mov
xchg
lret
mov
dec
jbe
xchg
mov
jbe
jnp
int3
xor
mov
int3
or
fs
sbb
arpl
xchg
push
adc
mov
xchg
lret
mov
dec
jbe
xchg
mov
jbe
loop
dec
mov
test
pop
xchg
push
push
data16
mov
call
xchg
adc
movsl
push
shrl
jl
and
add
cmc
data16
sub
lds
stc
jge
je
lea
orl
jmp
mov
adc
out
mov
xchg
push
addr16
call
mov
pop
xchg
in
mov
jp
imul
ret
loope
arpl
xchg
push
adc
mov
xchg
lret
mov
dec
jbe
xchg
mov
jbe
icebp
add
cmp
push
mov
xchg
mov
push
push
jbe
lret
jecxz
jmp
leave
push
mov
lea
in
mov
adc
mov
xchg
bound
mov
dec
jbe
xchg
mov
ja
rcll
or
mov
push
jge
and
mov
xchg
push
push
data16
call
mov
mov
xchg
out
ret
inc
push
aas
xor
shll
addr16
mov
push
testb
mov
lock
shld
rcll
xchg
int
cmp
adc
jmp
mov
adcl
push
push
jbe
lret
jecxz
jmp
leave
push
mov
pop
mov
mov
mov
add
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int3
cmp
push
nop
inc
negl
sbb
out
lods
pop
out
pop
xchg
and
mov
cmp
jecxz
data16
decb
jmp
cmpsl
addr16
lea
mov
or
add
xchg
sub
sub
or
sub
and
xchg
xor
add
arpl
fstpt
xor
push
out
mov
xchg
push
addr16
call
mov
mov
xchg
in
jge
push
test
lods
xchg
iret
mov
loop
xchg
mov
mov
mov
out
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int
mov
gs
in
popa
push
std
push
pop
or
repz
jo
adc
cmp
lods
movsl
ret
bound
mov
push
jae
fstpt
and
xchg
and
mov
adcb
jmp
out
mov
xchg
push
dec
jbe
lret
loopne
jmp
sarb
mov
or
das
test
stos
test
pushf
out
test
push
sti
bound
lea
das
xlat
mov
cltd
movsb
pop
xor
out
inc
repnz
sbb
pop
repz
pop
repnz
jp
and
mov
pop
mov
lret
mov
push
cmp
punpcklwd
mov
xchg
push
push
outsb
ss
xchg
push
in
ja
cld
or
pop
mov
cmp
xchg
or
jmp
mov
jno
fiadds
xlat
or
mov
xchg
js
xchg
out
push
jae
or
mov
test
movsb
movsl
mov
adc
ret
jo
push
mov
out
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int3
cmp
enter
nop
mov
loop
or
add
xchg
sub
sub
or
sub
and
xchg
xor
dec
lahf
adc
lahf
mov
ds
pop
push
movsb
call
scas
and
mov
in
lods
mov
arpl
test
int3
pop
adc
pop
test
mov
xchg
push
push
outsb
ss
xchg
push
mov
jmp
pop
ja
icebp
mov
cmp
packuswb
flds
adcb
jmp
out
mov
xchg
push
dec
jbe
lret
jecxz
jmp
sarb
je
ja
cmc
and
mov
xchg
mov
adc
or
xchg
out
jnp
lea
mov
dec
inc
ret
mov
mov
add
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int3
cmp
mov
mov
dec
repnz
fisubl
add
xchg
sub
sub
or
sub
sub
cmpsb
dec
and
flds
icebp
pop
fwait
push
adc
lods
loop
sarl
jne
cmp
xchg
jp
jbe
jnp
push
jae
movsb
cmp
lcall
mov
xchg
out
movsb
push
jae
lods
cmp
pop
xchg
jp
xchg
mov
pop
inc
mov
xchg
fisubrs
jmp
mov
lods
mov
mov
xchg
push
push
data16
call
mov
mov
xchg
out
jmp
jg
pop
icebp
or
jnp
jae
and
or
jne
in
fmul
cwtl
and
ljmp
mov
out
in
jmp
pop
es
mov
pop
xor
adc
jmp
pop
lret
xorl
dec
push
ljmp
hlt
lds
push
imulb
and
mov
cmp
mov
push
mov
xchg
jp
jbe
lret
jmp
jmp
int
mov
out
push
cwtl
in
pop
mov
mov
mov
xchg
jp
and
jae
xchg
ljmp
mov
movsb
mov
sbb
cmpsb
pop
decb
mov
arpl
inc
push
out
xor
xchg
dec
jmp
jmp
pop
dec
hlt
shll
mov
mov
mov
mov
mov
adc
mov
add
xchg
sub
sub
or
sub
or
sbb
sub
ljmp
mov
popf
adc
jae
xchg
mov
push
mov
xchg
add
mov
dec
jbe
xchg
mov
jnp
jmp
sarb
out
icebp
pavgb
loope
loop
mov
cmp
mov
push
mov
xchg
jp
jbe
lret
jmp
jmp
int
mov
inc
sbb
cmc
lcall
out
xchg
testb
xchg
cmp
mov
jbe
jnp
xchg
mov
cmp
xchg
xchg
mov
push
jae
mov
sti
cld
push
xchg
mov
mov
ret
loope
arpl
movsl
push
jmp
or
nop
and
mov
xchg
push
outsb
ds
ss
xchg
cmp
or
push
mov
mov
out
cmp
jbe
movsl
mov
xor
adc
jmp
pop
cmp
or
xor
in
movswl
fstpt
icebp
icebp
pavgb
loope
loop
mov
je
adc
mov
xchg
repnz
jbe
lret
fadds
mov
add
cwtl
add
stc
fstps
mov
jnp
lds
shlb
pop
xchg
loop
data16
jl
sbb
leave
dec
jbe
cmp
mov
inc
adc
sarb
inc
mov
or
xor
cmp
mov
jbe
jnp
cmp
xchg
push
adc
lods
aad
or
mov
push
jae
enter
lcall
jnp
jbe
push
jecxz
jmp
insb
pop
mov
stos
and
lock
add
pop
movsb
dec
or
mov
mov
xchg
out
movsb
push
jae
pop
mov
xchg
decl
mov
fisttps
add
xchg
sub
sub
or
sub
and
lcall
repnz
push
mov
add
xchg
sub
sub
or
sub
sub
lahf
dec
lock
out
mov
inc
push
out
icebp
jns
jmp
pop
pop
jb
repnz
pop
repnz
out
jecxz
jmp
pop
es
cmpsb
mov
xor
adc
jmp
pop
pusha
xorl
popa
mov
icebp
shld
adc
mov
cmp
test
pop
xchg
push
push
data16
mov
call
xchg
lea
cld
js
and
jne
xchg
stc
cmpsl
iret
mov
xchg
mov
test
iret
loop
or
lcall
mov
push
out
mov
xchg
je
xchg
cmp
push
jae
enter
xlat
pop
lock
xchg
loop
jl
call
xlat
push
push
jb
xchg
pop
fnstenv
lods
movsl
in
jp
ds
pop
cmp
pop
xchg
jmp
adc
push
and
cli
sarl
pop
xchg
push
inc
mov
outsb
ds
jecxz
mov
jns
movsb
add
in
jmp
pop
es
mov
pop
xor
adc
jmp
pop
lret
xorl
xor
arpl
xchg
mov
push
mov
xchg
push
dec
jbe
lret
jecxz
jmp
sarb
adc
pop
hlt
test
adc
movsl
std
out
cmp
jbe
movsl
mov
xor
adc
jmp
pop
cmp
mov
push
push
je
xchg
sti
sub
push
stos
mov
mov
mov
and
stc
jle
cmp
mov
cltd
lea
jge
mov
dec
maxsd
mov
push
cmp
sqrtps
addb
jmp
repnz
xor
pusha
or
and
xchg
stc
xor
pushf
jl
call
test
jne
xlat
push
cmpl
push
dec
testl
jge
lds
jmp
push
mov
in
icebp
jns
add
xchg
sub
sub
or
sub
and
xchg
aaa
lcall
ja
and
aad
arpl
or
nop
and
loopne
ja
jbe
xchg
sub
sub
or
sub
and
popf
dec
or
jmp
repnz
lcall
movsl
cld
sbb
mov
lcall
jmp
popa
mov
je
adc
mov
xchg
repnz
jbe
lret
filds
mov
sub
ret
cmp
nop
and
popf
xchg
nop
or
nop
and
mov
xchg
push
push
data16
call
mov
mov
xchg
out
cli
cmp
int3
sahf
pop
arpl
notb
mov
repnz
out
loop
jmp
pop
mov
adc
xor
adc
jmp
pop
popa
je
sub
xchg
mov
xchg
and
jae
pop
inc
cli
mov
xchg
mov
imul
xchg
pop
or
cmp
mov
cld
notb
xchg
mov
mov
jnp
pop
mov
out
loop
jmp
pop
mov
adc
xor
adc
jmp
pop
popa
je
mov
cltd
rclb
paddusb
and
jo
pop
xchg
push
adc
xlat
scas
stos
and
fmulp
xchg
or
nop
and
sbb
bound
gs
je
xchg
mov
lods
data16
xchg
mov
mov
lods
data16
lock
jmp
cmpsl
mov
mov
mov
mov
pop
add
cmp
jae
movsb
mov
xor
adc
jmp
pop
cmp
sti
inc
mov
call
scas
push
std
mov
xchg
jle
xchg
cmp
push
xchg
jo
fisttpl
cmc
push
xchg
mov
mov
mov
and
mov
xor
jmp
pop
jl
fistpl
fwait
hlt
or
gs
jmp
xchg
mov
push
push
jbe
lret
in
jmp
leave
push
mov
fcmovnb
push
cld
lahf
add
dec
or
inc
nop
and
mov
xchg
mov
xchg
push
outsb
ds
ss
xchg
cmp
push
mov
or
jbe
and
lock
dec
repnz
data16
xchg
lock
add
icebp
shld
mov
or
mov
and
mov
pop
jmp
pop
sbb
out
mov
xchg
leave
jns
lods
and
movsl
xor
fdivrl
mov
xchg
out
lea
mov
xchg
call
cmp
test
sub
out
ss
xchg
xchg
mov
imul
jbe
xchg
mov
push
mov
inc
cmp
and
or
xchg
in
std
cmovle
lahf
out
scas
push
cmc
int
arpl
stc
lods
push
adc
mov
aam
sar
cmp
push
push
pop
or
je
stos
popaw
jp
ds
adc
mov
xchg
bound
mov
dec
jbe
xchg
mov
ja
int3
or
jo
or
mov
xchg
sub
xchg
ds
mov
shlb
and
xlat
dec
hlt
pop
loopne
jmp
mov
push
je
xchg
xchg
scas
iret
imulb
xchg
dec
or
aaa
pop
out
dec
push
or
push
repnz
xchg
iret
cs
int3
jmp
in
arpl
mov
in
ret
stc
and
push
mov
in
ret
popf
pop
arpl
mov
in
ret
sub
mov
in
ret
cmp
push
mov
in
ret
jmp
mov
in
ret
add
mov
in
ret
xchg
arpl
mov
in
ret
lods
adc
jae
mov
in
ret
leave
aas
arpl
mov
in
ret
add
mov
in
ret
or
arpl
mov
in
ret
cmp
jae
mov
in
ret
and
mov
in
ret
dec
and
push
mov
in
ret
cltd
cmp
push
mov
mov
jp
je
adc
mov
xchg
repnz
jbe
lret
jecxz
jmp
into
push
mov
pop
inc
cld
std
jbe
in
mov
xchg
cmc
inc
dec
bnd
inc
sub
and
add
dec
dec
xchg
jne
xchg
cmp
xchg
xor
stos
outsb
jo
imulb
arpl
lcall
pop
xchg
cmp
xchg
mov
and
gs
outsb
cld
testb
imul
xchg
mov
inc
decl
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int
mov
inc
add
jno
xchg
xor
xchg
dec
add
mov
jmp
pop
cmp
pop
xchg
jmp
jmp
loop
dec
test
mov
xchg
jbe
xchg
icebp
bt
jmp
jnp
jbe
xchg
sub
sub
or
sub
das
or
pop
push
mov
cwtl
mov
lods
data16
testb
mov
push
out
mov
xchg
jmp
or
add
xchg
sub
sub
or
sub
and
xchg
dec
cwtl
dec
shlb
repnz
cmp
inc
sqrtsd
test
arpl
add
fisttps
add
xchg
sub
sub
or
sub
sub
xchg
dec
popf
dec
xor
jne
js
sti
outsl
fnstcw
pop
ret
bound
or
adc
and
mov
xchg
push
outsb
ds
ss
xchg
cmp
jl
xchg
fistpl
and
daa
or
mov
inc
add
lret
dec
incl
adc
jns
dec
mov
push
xlat
xchg
mov
in
add
std
inc
sbb
dec
mov
inc
icebp
or
test
pop
xchg
push
outsb
ds
ss
xchg
cmp
mov
jmp
jbe
call
dec
sarb
xchg
mov
xchg
push
outsb
ds
ss
xchg
cmp
push
aam
or
lods
add
jp
mov
mov
add
or
mov
test
outsl
sbb
out
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int
mov
dec
xor
cld
ljmp
xlat
xchg
mov
aam
ret
push
gs
sbb
mov
jo
stos
cmp
punpckhwd
gs
xor
repz
das
arpl
xchg
mov
push
mov
xchg
add
mov
dec
jbe
xchg
mov
jnp
icebp
push
cmp
int3
push
push
arpl
mov
out
mov
xchg
xor
icebp
mov
xchg
xchg
jle
pop
shll
pop
cltd
insb
mov
xchg
jp
insb
out
mov
add
mov
out
mov
add
cmp
jae
movsb
mov
xor
adc
jmp
pop
cmp
xchg
negb
jns
lods
in
mov
add
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int
mov
xchg
adc
and
jbe
jmp
mov
cmp
xchg
mov
outsb
mov
xchg
lret
mov
dec
jbe
xchg
mov
jbe
stos
fildll
jmp
or
add
xchg
sub
sub
or
sub
and
cmpsb
dec
sub
xlat
dec
idiv
pop
pop
dec
repnz
movsb
hlt
adc
jmp
cmpsl
cmp
pop
xchg
or
mov
xchg
mov
dec
dec
sbbl
push
dec
or
push
xchg
and
mov
xchg
mov
xchg
push
push
outsb
ss
xchg
push
or
jne
xorb
mov
add
xchg
sub
sub
or
sub
and
xchg
aaa
lcall
lds
arpl
mov
mov
inc
ljmp
adc
in
mov
mov
add
cld
xor
push
inc
out
adc
cmc
rclb
or
jmp
xchg
add
rcll
loop
jo,pt
cmp
cmp
lcall
mov
xchg
cmpsl
out
int
out
jp
push
cmpsb
outsb
jne
pushf
pop
aas
mov
xchg
and
movsb
aaa
or
mov
cmp
mov
mov
xchg
push
push
data16
mov
call
xchg
in
xor
in
dec
inc
das
xor
mov
loop
or
out
cmp
jae
movsb
mov
xor
adc
jmp
pop
cmp
test
inc
mov
xchg
fs
jp
test
ljmp
ss
das
aaa
jmp
pop
jno
shr
push
ss
dec
dec
jb
add
adc
js
mov
mov
fisttps
add
xchg
sub
sub
or
sub
or
and
adc
cltd
jecxz
in
or
xchg
mov
push
push
jbe
lret
filds
mov
stos
mov
inc
adc
and
ret
and
out
loop
jmp
pop
mov
adc
xor
adc
jmp
pop
popa
je
xchg
mov
cli
notb
xchg
mov
mov
xchg
jae
xchg
fisttps
add
xchg
sub
sub
or
sub
and
xchg
xor
dec
test
jne
mov
xchg
mov
push
mov
xchg
push
dec
jbe
lret
flds
mov
filds
push
je
xchg
repnz
adc
lods
cmp
pop
xchg
lret
add
jno
rorl
pop
in
pop
xchg
test
arpl
out
xchg
pop
xchg
push
push
data16
mov
call
xchg
in
pusha
mov
push
xor
dec
cmp
jl
sbb
adc
or
add
xchg
sub
sub
or
sub
and
xchg
aaa
lcall
enter
mov
stos
push
mov
add
test
or
test
fidivrl
jae
mov
rcrl
jmp
popa
arpl
mov
jge
jbe
xchg
sub
sub
or
sub
or
imul
mov
dec
pop
push
jge
out
cmp
jbe
movsl
mov
xor
adc
jmp
pop
cmp
inc
xchg
data16
aas
arpl
addr16
idivb
mov
cld
ret
and
mov
iret
jbe
adcb
jmp
out
mov
xchg
push
dec
jbe
lret
jmp
jmp
sarb
inc
mov
out
dec
mov
xlat
movsb
out
mov
xchg
lret
cwtl
fcoml
movsb
cwtl
hlt
mov
cld
lret
rclb
xchg
sbb
jp
ds
adc
mov
xchg
bound
mov
dec
jbe
xchg
mov
ja
pusha
shrl
inc
pop
add
icebp
movd
mov
ja
aam
in
mov
xchg
in
mov
add
loop
jmp
pop
mov
adc
xor
adc
jmp
pop
popa
je
pusha
adc
stos
xchg
fsubs
mov
in
pop
xchg
mov
xchg
push
addr16
call
mov
mov
xchg
in
xchg
xor
xchg
sti
xchg
std
testb
or
cmp
dec
xor
sar
and
aam
dec
xlat
xlat
lret
out
cli
repz
jmp
mov
je
adc
mov
xchg
repnz
jbe
lret
fiadds
mov
aam
xchg
ljmp
lods
mov
mov
imul
mov
mov
cmp
or
jmp
or
add
xchg
sub
sub
or
sub
and
xchg
mov
pop
push
fstpt
out
icebp
verr
stos
add
jecxz
jmp
pop
es
cmpsb
mov
xor
adc
jmp
pop
pusha
xorl
pop
arpl
dec
mov
pop
xchg
push
push
data16
mov
call
xchg
in
sti
ljmp
movsl
aam
les
jmp
mov
test
pop
xchg
push
push
data16
call
mov
pop
xchg
out
pop
jbe
cmp
push
and
push
hlt
xchg
mov
movsb
lods
fisttps
add
xchg
sub
sub
or
sub
and
xchg
xor
xchg
cmp
dec
push
jmp
outsb
movsb
hlt
or
adc
jecxz
xchg
push
adc
mov
xchg
bound
mov
dec
jbe
xchg
mov
ja
and
fcomps
ljmp
adc
lds
addr16
xchg
cmpsb
movsl
lods
loop
xor
nop
and
inc
rcrb
mul
mov
cmp
or
add
xchg
sub
sub
or
sub
or
popa
aaa
sbbb
lods
pop
sub
mov
push
in
pop
xchg
ja
sbbl
mov
fisttps
add
xchg
sub
sub
or
sub
sub
xchg
xor
outsb
add
pop
pop
mov
outsb
insb
push
sub
cmp
dec
push
in
cmp
ret
lods
xchg
xchg
jae
xchg
and
xchg
add
jmp
fadds
stos
add
push
mov
jecxz
mov
push
ret
jmp
pop
fcoml
fs
cmc
addl
or
add
xchg
sub
sub
or
sub
das
or
cltd
jae
test
repnz
xchg
jp
mov
mov
data16
std
jmp
mov
xchg
push
insl
ss
ss
xchg
cmp
data16
aas
arpl
mov
xchg
imul
jmp
push
add
xchg
sub
sub
or
sub
sub
lahf
dec
or
inc
popa
imul
jmp
mov
xor
mov
loope
imul
test
jnp
xchg
mov
jge
jmp
lcall
jnp
push
jae
mov
xchg
mov
jns
les
mov
shll
jp
add
pop
pop
ret
mov
out
cmp
jae
movsb
mov
xor
adc
jmp
pop
cmp
jp
data16
add
in
jmp
pop
es
mov
pop
xor
adc
jmp
pop
lret
xorl
lds
loop
cmp
inc
repnz
push
adc
mov
xchg
repnz
jbe
lret
fiadds
mov
push
mov
cmp
repnz
ds
and
mov
mov
or
push
xor
mov
cmc
ljmp
add
xchg
sub
sub
or
sub
and
xchg
xor
add
fisttps
add
xchg
sub
sub
or
sub
and
xchg
dec
popf
dec
bound
lahf
cmpw
cltd
push
out
mov
xchg
push
addr16
call
mov
pop
xchg
in
int3
xrelease
out
icebp
out
cmp
jbe
movsl
mov
xor
adc
jmp
pop
cmp
push
adc
xorb
mov
xor
push
jmp
or
or
inc
or
popa
outsl
sbb
out
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int
mov
into
xchg
cmp
jns
and
mov
cmp
xchg
inc
inc
mov
jno
in
loop
call
in
pop
push
out
mov
xchg
xor
pop
std
out
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int3
cmp
sub
lock
xor
inc
nop
and
repz
jmp
xor
std
popa
stos
cmp
out
out
jmp
pop
es
stos
mov
xor
adc
jmp
pop
int3
cmp
push
lods
stos
popl
int3
sub
or
jmp
xchg
xor
nop
and
outsb
xlat
or
mov
xchg
push
addr16
call
mov
mov
xchg
in
test
arpl
cmp
mov
aad
ret
and
test
inc
clc
mov
mov
push
inc
mov
loop
inc
xor
jbe
jmp
xchg
or
jb
and
cmp
or
add
xchg
sub
sub
or
sub
sub
xchg
xor
dec
enter
or
dec
outsl
or
sbb
pop
xchg
cmp
xor
jmp
pop
loope
into
icebp
mov
jmp
pop
xor
jae
and
popa
stos
cmp
sysret
dec
mov
mov
fimuls
jmp
stos
dec
js
mov
sub
and
mov
aad
std
popf
push
arpl
dec
jecxz
xchg
outsb
jmp
pop
movsl
mov
mov
out
icebp
out
cmp
jae
movsb
mov
xor
adc
jmp
pop
cmp
subl
fsubl
js
int
inc
mov
icebp
adc
pop
lahf
inc
test
xchg
adc
sarl
ret
jbe
xchg
mov
xchg
push
push
data16
mov
call
xchg
ret
test
pop
xchg
push
outsb
ds
ss
xchg
cmp
cltd
sbb
xchg
test
nop
and
int
arpl
xchg
xchg
pop
xchg
push
push
outsb
ss
xchg
push
iret
mov
stc
mov
cmp
push
xchg
mov
cltd
outsb
je
cmpl
xchg
push
add
cmp
jae
movsb
mov
xor
adc
jmp
pop
cmp
sbb
mov
enter
lds
arpl
jno
rcrl
inc
bound
pushf
sub
pushw
daa
or
push
pushf
jle
pop
mov
inc
adc
pop
out
jo
pop
xchg
call
xlat
mov
cld
sbb
push
out
mov
xchg
mov
ds
pop
jl
call
mov
add
mov
rcrb
add
jecxz
jmp
pop
es
cmpsb
mov
popf
dec
inc
cmp
cmp
inc
sbb
push
ret
lods
addl
sbb
out
mov
xchg
push
fcoml
jae
sub
in
cmpsb
mov
push
ret
sbb
cmc
mov
scas
adc
sbb
fwait
mov
mov
inc
adc
outsb
scas
cmp
in
loop
pop
inc
cli
push
pop
data16
jecxz
xchg
clc
fdiv
or
cltd
xchg
fstpt
cmp
push
mov
cmp
pop
pop
mov
cmp
out
fucomp
in
inc
xor
ret
ljmp
test
mov
lods
cmp
outsb
scas
cmp
loop
cli
push
pop
inc
cli
push
pop
pop
cmp
mov
pop
je
movsb
aad
sub
jmp
hlt
ret
pop
ret
mov
test
fldcw
mov
ret
xchg
jb
pop
imul
dec
retw
and
imul
sar
fildll
pop
adc
add
cld
mov
mov
cmp
out
ljmp
inc
ds
ret
movsl
out
xchg
in
adc
int3
mov
outsb
sar
inc
out
int
in
sbb
cmp
int
test
pop
pop
add
lret
popf
cwtl
lock
pop
ret
mov
test
fldcw
mov
ret
pushf
sbb
cld
scas
lcall
pop
mov
xchg
pop
ret
pop
sbb
cmp
out
shr
hlt
dec
inc
xor
ret
in
out
hlt
hlt
mov
ret
add
ljmp
iret
lds
sbb
cmpsb
outsb
scas
cmp
in
loop
pop
inc
cli
push
pop
pop
cmp
inc
cwtl
cmp
sahf
cmc
adc
into
stos
dec
push
ret
cmp
outsb
shlb
sarl
clc
xchg
fmull
xorb
shlb
xchg
push
xchg
cld
ss
das
pop
pop
mov
cmp
out
fucomp
in
inc
xor
ret
ljmp
dec
pop
ret
cmp
jg
addr16
push
ret
push
ret
jb
daa
fldt
cmp
mov
ret
pop
ret
mov
test
push
sbb
lods
ret
popf
sbb
mov
xor
add
in
js
add
fimuls
sub
mov
ret
nop
push
ret
outsb
ds
sbb
mov
push
xlat
js
sub
push
pop
inc
cli
push
pop
pop
cmp
sub
lea
ret
pop
ret
mov
test
fldcw
mov
ret
pushf
sbb
mov
xchg
sbb
shrl
lea
repz
pop
ret
mov
test
fldcw
mov
ret
pushf
sbb
aam
movsl
ljmp
mov
dec
cvtps2pi
arpl
stos
je
jmp
mov
mov
push
ret
sbb
sbb
mov
ret
sbb
push
imul
lods
mov
pop
add
aaa
jle
pop
pop
mov
cmp
out
fucomp
in
inc
xor
ret
ljmp
and
inc
dec
xchg
lahf
loop
add
out
jmp
push
mov
jle
ret
pop
sbb
cmp
out
shr
hlt
dec
inc
xor
ret
in
out
dec
bound
jae
pop
sub
ds
or
ret
mov
dec
lods
ret
xor
lock
shll
cld
cmp
and
int3
outsl
mov
mov
std
mov
ret
in
xchg
pop
or
xchg
push
cld
push
or
into
mov
fcoml
mov
mov
push
ret
sbb
sbb
mov
ret
sbb
xor
out
add
mov
testl
rorb
ljmp
adc
dec
or
inc
repz
pop
ret
mov
test
push
sbb
movsl
ret
popf
sbb
addl
pop
or
dec
into
stos
fldcw
fsubr
loope
stc
and
xor
fildll
fcoms
das
pop
and
push
ret
loopne
fsubr
in
dec
inc
xor
ret
cmpsl
out
out
inc
outsb
or
dec
push
ret
test
loopne
and
fmull
mov
push
ret
sbb
movsl
mov
scas
adc
sbb
fisubs
cmp
in
fmuls
dec
dec
imul
inc
xchg
roll
out
test
inc
mov
ret
sbb
movsl
mov
scas
adc
sbb
out
fildll
sub
pop
pop
cmc
ss
ret
mov
push
ret
jmp
inc
mov
ret
sbb
jge
scas
mov
mov
ret
sbb
mov
xchg
leave
in
push
inc
pusha
ret
push
jae
mov
ret
dec
cmpsl
test
cmp
push
ret
push
ret
push
mov
dec
push
ret
sub
push
lock
pop
sbb
fldenv
mov
cltd
clc
xchg
popf
into
mov
lock
pop
cmp
dec
cwtl
add
lret
and
int
imulb
or
addr16
xchg
mov
mov
adc
push
and
pusha
gs
insb
fs
stos
pop
shl
mov
xchg
pop
xchg
adc
stc
es
push
jecxz
daa
sbb
neg
cmpsb
lret
mov
outsb
pop
or
push
sub
sarb
xchg
filds
mov
xchg
pop
mov
leave
cmp
xor
xor
dec
dec
mov
pop
ja
mov
xchg
xor
mov
add
and
adc
scas
mov
xchg
push
les
mov
xchg
xor
jecxz
cmpl
xchg
xor
lods
pop
and
pusha
gs
insl
arpl
push
xor
xor
sbb
ret
std
in
loope
std
sub
jns
mov
xchg
mov
pop
pop
sahf
sbb
movsb
ds
rorb
lcall
sbb
push
icebp
sbb
test
pushf
inc
push
push
cmp
or
cmpb
sbb
int
jle
jb
mov
dec
xchg
lea
mov
inc
mov
pop
pushf
fidivs
xchg
xor
adc
xchg
fistl
cli
or
mov
int
or
xchg
fistl
lret
cmp
jbe
mov
add
loopne
scas
roll
lds
ret
pop
loopne
in
fiadds
pop
pop
mov
mov
movsl
pop
test
mov
sbb
push
ret
xor
mov
jae
cld
pusha
sub
ljmp
repz
sbb
xchg
sbb
lds
fsubr
ss
insl
mov
mov
mov
xchg
dec
and
adc
aas
pusha
sbb
mov
insb
xor
and
dec
stos
sbb
mov
jne
aad
and
scas
xor
insb
ss
imul
cmc
cmc
mov
popa
stos
lea
pop
in
inc
inc
pop
loopne
pop
adc
in
mov
stc
je
inc
loop
orl
cmp
cmpsl
xchg
test
jne
and
sub
jae
in
jle
fildll
and
iret
lahf
je
ja
hlt
xor
mov
xor
outsl
push
movsl
or
fcoml
dec
call
jbe
cmp
pop
jne
lock
sub
je
insl
mov
sub
fildl
imul
or
int
and
test
movsl
imul
pmuludq
sbb
jl
sub
mov
jns
sub
pop
dec
jno
mov
inc
scas
sub
sbb
mov
pusha
sbb
pop
mov
cltd
mov
jl
mov
icebp
ret
ljmp
jmp
mov
cmp
popa
mov
or
enter
es
loopne
je
push
ds
ret
cli
iret
cmpsb
ja
loopne
xchg
fucomp
nop
out
mov
rcr
cmp
mov
cmc
fdivs
popa
push
subl
loop
sti
sub
mov
sbb
jae
cld
loopne
outsl
fstps
clc
js
loope
repnz
sbb
popf
xchg
dec
sbb
ljmp
sbb
test
jnp
xchg
or
imul
loopne
mov
hlt
es
push
xor
addr16
mov
out
outsb
push
call
push
ret
adc
dec
mov
das
enter
cmp
xor
sarl
stc
mov
lods
jnp
push
mov
repnz
xor
aas
xchg
mov
mov
popa
pop
pop
sbb
js
pop
pop
pop
stos
pop
fisttps
adc
push
mov
fisubrs
rcll
js
add
sub
dec
push
xchg
or
adc
sbb
mov
xchg
cmp
inc
cwtl
lods
ret
fsubrs
sbb
mov
jecxz
sub
dec
xlat
jne
sbb
shrl
nop
mov
fisubs
hlt
dec
inc
and
inc
push
stos
cmp
jl
cli
or
rcrb
push
mov
lock
addr16
adc
or
adc
fcmovnb
push
mov
adc
cmc
into
or
insl
sbb
cmp
jns
loopne
jae
mov
popa
arpl
insb
aas
sub
ja
aad
loopne
jno
mov
xor
test
vfrczpd
aam
xor
lea
sub
cli
aam
lret
js
addr16
ja
enter
insl
push
and
mov
loop
addl
or
jg
xor
pop
mov
and
aaa
cmp
sbb
sub
movsl
repz
add
push
lock
pop
xchg
sbb
stc
cltd
fcompl
in
insl
add
enter
test
dec
cmpsb
nop
addl
pop
test
imul
popf
lds
pop
jl
dec
test
mov
sub
ljmp
pusha
xor
lret
jg
inc
iret
mov
xlat
xor
jl
jp
push
ret
ss
or
arpl
sub
sbbb
lock
mov
aas
pusha
sbb
add
pop
sti
mov
imul
sub
sbb
dec
ficoms
lock
out
add
shl
stc
sbb
xchg
mov
fistpll
add
or
and
cwtl
in
stos
imulb
out
stos
cmp
xor
popf
xchg
xor
sub
lods
ret
mov
add
xchg
aaa
dec
cmpsl
inc
xchg
scas
mov
das
hlt
clc
mov
mov
inc
pop
fidivs
pop
dec
pop
test
sbb
add
rcrb
or
mov
gs
push
je
hlt
fstpt
cwtl
mov
pop
ret
int
sbb
cs
sbb
fisubrl
adc
and
pop
mov
push
adc
pop
push
pusha
adc
lea
movsb
jbe
adc
aaa
fstpl
imulb
fcoml
or
das
ja
fmul
push
loopne
pop
and
sub
add
xor
fmull
sti
ljmp
pop
outsb
sbb
or
cli
mov
xchg
sbb
lods
adc
repz
sti
addr16
mov
hlt
pop
filds
fisubrl
push
pop
stos
dec
cli
nop
test
and
mov
sbb
push
jp
dec
xchg
repnz
imul
in
and
cmp
in
sarl
mov
dec
mov
clc
inc
pop
push
jb
dec
addr16
adc
pushl
ljmp
icebp
sbb
fs
hlt
fildl
push
repnz
adc
push
adc
je
stc
pop
adc
in
add
lds
rclb
mov
rol
inc
mov
mov
jb
mov
je
or
add
jle
jg
mov
push
and
inc
call
sbb
sbb
jecxz
pop
mov
pop
mov
ret
pop
mov
lock
out
fmuls
xchg
inc
pop
int3
aam
mov
into
xor
lahf
jne
jg
xchg
int
ret
je
xchg
lcall
push
lods
and
sub
notb
cmc
sbb
outsl
lahf
xchg
out
std
pop
dec
fiaddl
adc
jl
outsl
dec
cmp
mov
lar
xor
ficoml
mov
fnsave
stos
shrl
mov
push
push
mov
or
mov
ds
imul
push
push
xor
test
cmp
testl
mov
scas
int
dec
incb
add
aaa
fnsave
dec
mov
mov
call
inc
fdivl
mov
mov
cmc
aam
addr16
pop
and
adc
or
cmp
inc
push
int3
fsubs
push
sub
mov
outsb
cmp
dec
cwtl
jnp
push
jecxz
sub
stc
mov
int
repnz
cmpsl
loopne
jle
push
adc
out
or
aas
jae
jp
lock
sub
inc
mov
popf
lock
sub
xchg
out
xchg
in
xor
push
clc
push
and
in
push
cmc
rcr
leave
cmp
jmp
insl
inc
dec
sbb
outsl
jne
push
loop
mov
mov
imulb
mov
rol
jle
rcr
int3
scas
ret
and
push
bnd
fildl
inc
add
sbb
mov
jp
insl
arpl
cmp
faddl
sub
mov
cli
or
fwait
setge
lods
lret
adc
iret
in
mov
ret
dec
xor
shll
or
pop
rorl
cmp
push
pop
mov
and
mov
in
jge
add
xchg
xor
sub
or
loopne
shlb
inc
sar
jg
sti
mov
imul
insb
lds
mov
cmc
push
ret
mov
scas
cmp
iret
scas
and
jge
mov
mov
xchg
cmp
test
ljmp
inc
rorb
cmp
mov
scas
cmp
push
ret
pop
cltd
into
ljmp
adc
sub
scas
cmp
iret
pop
es
jle
mov
push
ret
pop
ret
iret
scas
and
mov
nop
rcrl
mov
jnp
cli
mov
aam
inc
jbe
mov
cmp
loop
aaa
mov
cltd
stos
jo
dec
add
addps
cwtl
aas
pop
push
das
jb
dec
mov
and
xchg
and
call
mov
subb
jno
ret
pop
ret
mov
test
fldcw
mov
ret
pushf
sbb
outsl
bound
sub
mov
mov
dec
jecxz
faddp
cmp
pop
shll
into
stos
out
jmp
inc
mov
ret
sbb
jge
scas
mov
mov
ret
sbb
inc
arpl
jns
loop
adc
in
mov
push
ret
mov
mov
xorl
lock
pop
ret
mov
test
fldcw
mov
ret
xchg
jb
psubsb
xor
ret
xchg
pop
xchg
out
sbb
loope
lods
mov
ret
push
ret
ljmp
icebp
jae
adc
mov
ret
ss
ret
dec
fildl
cmp
pop
and
push
ret
loopne
fsubr
in
dec
inc
xor
ret
cmpsl
out
aad
pop
inc
adc
out
iret
xchg
stc
sbb
cmpsl
test
or
push
ret
stc
jb
dec
push
ret
lret
or
in
jmp
inc
mov
ret
sbb
jge
scas
mov
mov
ret
sbb
sbb
jns
das
pop
sbb
cmpsb
outsb
scas
cmp
in
loop
pop
inc
cli
push
pop
push
lret
js
addb
std
out
das
pop
aaa
imul
inc
mov
test
dec
aaa
imul
sub
and
int
sbb
jl
scas
cmp
imull
mov
pop
inc
cli
push
pop
data16
sbb
sub
pop
add
dec
push
ret
fldcw
sbbl
cmp
add
add
dec
cmp
aam
ret
ret
pop
ret
mov
test
sbb
movsl
ret
fwait
pop
test
push
add
and
jae
mov
ret
mov
repnz
lahf
jo
inc
mov
mov
mov
ret
je
cli
into
dec
sbb
jl
scas
cmp
imull
mov
pop
inc
cli
push
pop
push
sarl
mov
call
ljmp
mov
dec
es
cmp
push
ret
test
inc
mov
ret
sbb
movsl
mov
scas
adc
sbb
in
mov
rorl
dec
pop
ret
mov
test
push
sbb
stos
ret
popf
sbb
cmp
jmp
pop
ret
or
ljmp
inc
push
arpl
cmp
add
ljmp
inc
mov
lss
pop
lods
jg
dec
jno
ds
aaa
jae
data16
fdivrl
cld
into
dec
sarl
push
mov
cmp
pop
sbb
cmp
out
shr
hlt
dec
inc
xor
ret
in
out
repnz
movsl
shlb
into
dec
ret
push
sbb
test
scas
cmp
jecxz
rclb
inc
cli
push
pop
cmp
aad
cmp
xlat
stc
lea
inc
fdiv
push
cmpsl
sbb
scas
rorl
pop
jno
ret
dec
imul
inc
xchg
mov
ret
shll
fsubrs
add
jnp
outsb
lods
cmp
scas
cs
pop
ret
pop
jmp
cmp
pop
mov
push
js
sub
push
pop
inc
cli
push
pop
pop
cmp
sahf
sbb
push
fldl
cmp
push
rcrl
pushf
ret
roll
cmp
mov
sub
push
ret
pop
dec
ret
jb
mov
leave
jb
fs
sub
jg
mov
dec
push
ret
xor
sub
test
enter
mov
and
ljmp
dec
ret
mov
in
test
inc
mov
ret
sbb
movsl
mov
scas
sbb
cmpsl
sbb
sub
xor
mov
xor
push
or
rorb
xchg
out
jmp
repz
pop
ret
mov
test
push
sbb
lods
ret
cwtl
and
adcl
cmp
pop
ret
mov
test
fldcw
mov
ret
cltd
jno
mov
mov
jae
sbb
mov
push
js
sub
push
pop
inc
cli
push
pop
pop
cmp
mov
adc
into
stos
fcmovnbe
xchg
data16
ret
pop
ret
mov
test
fldcw
mov
ret
xchg
jb
jae
mov
ss
ret
mov
mov
cmp
out
fsubr
in
dec
inc
xor
ret
cmpsl
out
fistps
sub
or
lea
mov
dec
imull
jae
scas
sub
jno
cmp
outsl
mov
jl,pt
scas
cmp
imull
mov
pop
inc
cli
push
pop
pop
cmp
push
pop
js
mov
jae
mov
movsl
out
jmp
outsb
scas
cmp
imull
mov
pop
inc
cli
push
pop
pop
cmp
lret
jno
cmp
mov
mov
mov
mov
dec
push
ret
add
sarb
xor
push
mov
jo
clc
mov
add
cmp
cmp
push
ret
in
imul
add
mov
lods
cmp
outsb
scas
cmp
loop
cli
push
pop
inc
cli
push
pop
pop
cmp
cmpsl
or
fwait
push
push
fdivl
orps
mov
aaa
test
pop
pop
mov
cmp
out
fucomp
in
inc
xor
ret
ljmp
pushf
pop
loopne
jae
lods
out
fisttps
sbb
mov
scas
pop
mov
ret
sbb
pop
mov
pop
sbb
push
ret
imul
fldl2e
les
xor
ret
fucomip
jo
cmp
test
xor
mov
sbb
jne
and
sbb
ret
pop
ret
mov
test
push
sbb
lahf
ret
cwtl
and
cltd
lock
pop
ret
mov
test
push
sbb
stos
ret
cwtl
and
ljmp
rorb
ret
mov
test
fldcw
mov
ret
sbb
test
xor
ljmp
out
in
mov
push
ret
sbb
mov
mov
ret
sbb
pop
add
dec
jb
in
lcall
cmp
or
ja
into
inc
outsb
xor
shlb
or
mov
shl
dec
inc
jo
push
je
cmp
inc
rcl
cmp
mov
push
lea
mov
push
or
inc
aam
ret
mov
dec
fstps
cmp
push
int3
cmovbe
scas
paddsb
aaa
or
aam
stos
jns
mov
sbb
sbb
aam
mov
inc
jb
add
aam
jb
dec
or
inc
aam
insb
out
adc
repnz
cli
mov
imul
dec
notl
push
aaa
mov
mov
push
xor
sbb
in
sbb
int3
xor
aam
psubsw
aaa
or
aam
test
sbb
mov
sbb
sbb
aam
mov
jb,pn
cmp
inc
aam
mov
jge
adc
xor
push
xchg
ret
cli
mov
push
in
adc
pop
outsb
testb
and
aaa
xor
xor
mov
and
stos
cwtl
mov
add
xlat
inc
xor
aam
or
jns
test
jnp
adc
xchg
adc
cs
or
xor
and
and
jo
int3
shlb
xor
cmp
into
lea
adc
mov
mov
arpl
xor
aam
lret
in
mov
int3
push
or
cmp
xchg
xor
arpl
pop
xor
aam
or
jp
lods
mov
xchg
adc
cs
or
jge
pop
sbb
jno
pop
sbb
loop
into
mov
and
mov
leave
xor
jb
cmp
cmpsb
repnz
inc
xchg
adc
xor
pop
xchg
ljmp
imul
dec
call
jno
mov
mov
xor
aaa
xor
xor
xor
pushw
arpl
ss
xor
cmpsl
xor
sar
shrl
pop
jle
dec
insb
jnp
in
in
xor
inc
mov
shl
dec
lods
jae
push
je
cmp
inc
shll
idiv
mov
js
cwtl
cmpl
sub
dec
or
inc
aam
insb
in
push
xchg
lret
cli
mov
pusha
inc
aam
push
in
adc
adc
xor
pop
xchg
cli
mov
cli
mov
arpl
xor
inc
sub
cmp
xor
jl
cmpsl
mov
xchg
adc
sub
xor
test
imul
add
inc
repz
adc
pop
hlt
les
in
imul
or
mov
shr
dec
dec
jo
push
je
cmp
inc
rcll
push
jecxz
xor
cmp
aam
mov
cld
xor
sbb
add
xor
inc
aam
insb
jecxz
pop
xchg
shlb
xor
inc
aam
push
jmp
repz
data16
cwtl
inc
dec
icebp
cmp
aam
or
jb
or
xlat
inc
xor
aam
or
jle
test
xchg
adc
and
xor
xor
in
pop
adc
xchg
pop
mov
adc
xlat
pop
xor
aam
or
jp
lods
mov
xchg
adc
das
aam
or
jge
test
rorb
shlb
xor
aam
popf
cmp
xor
addl
pop
pop
enter
adc
enter
add
xchg
inc
inc
aaa
cmp
xor
insl
mov
jne
cmpxchg
adc
xlat
inc
xor
aam
or
jns
test
jnp
adc
xchg
adc
sub
xor
xor
scas
dec
mov
sbb
mov
outsb
xor
inc
mov
shl
dec
mov
jo
mov
pop
rol
inc
pusha
insl
fmull
ss
xor
fcomps
mov
push
push
lock
xlat
inc
xor
aam
or
jg
cmpsb
mov
xchg
adc
and
xor
xchg
frstor
fs
mov
testb
or
test
pop
jle
sbb
out
popa
sbb
inc
jle
cmpsb
out
dec
xor
mov
int3
scas
xlat
inc
xor
aam
or
jnp
stos
mov
xchg
adc
and
xor
xor
push
sbb
sti
addr16
repnz
fwait
movsb
mov
add
mov
xlat
inc
xor
aam
or
jns
test
jnp
adc
xchg
adc
sub
xor
xor
insl
mov
xchg
jmp
mov
xlat
inc
xor
aam
or
jnp
stos
mov
xchg
adc
sub
xor
xor
mov
aad
mov
adc
lea
int3
mov
addr16
adc
sbb
mov
aam
xor
aam
or
push
sub
mov
jge
adc
xor
push
xchg
ret
cli
mov
imul
push
in
adc
cmp
dec
sbb
adc
mov
dec
lea
sbb
or
cmp
inc
and
xchg
push
popl
add
or
lds
mov
jge
adc
xor
push
xchg
ret
cli
mov
bound
xor
adc
pop
add
push
dec
or
inc
aam
insb
jecxz
pop
xchg
shlb
xor
inc
aam
push
jmp
mov
fwait
mov
shlb
inc
das
pop
popa
ljmp
ret
popa
pop
push
popa
or
push
xlat
cmova
xor
cmp
dec
or
popa
les
aaa
sub
xor
dec
dec
punpckhwd
out
mov
inc
fdivrl
aam
rcll
inc
push
popa
sub
lret
lea
lds
inc
jge
adc
xor
push
xchg
ret
cli
mov
arpl
xor
adc
mov
inc
xchg
adc
xor
pop
xchg
repnz
cli
mov
gs
aam
dec
notl
inc
stc
mov
stos
mov
or
test
int3
xor
aam
lret
mov
pushf
xor
outsb
xor
inc
mov
shl
dec
pop
jo
push
je
cmp
inc
shrl
jg
push
xor
int
mov
mov
or
cmp
fwait
mov
xor
imul
aaa
or
aam
cmpsl
jns
mov
shlb
or
aam
pop
jns
outsb
test
cltd
mov
xor
clc
stos
cwtl
inc
cmpsb
std
ds
or
jp
add
mov
int3
add
dec
aam
jb
dec
or
inc
aam
insb
loope
pop
xchg
loop
xor
cli
mov
gs
aam
push
jmp
sbb
xor
mov
sbb
xchg
cmp
xor
adc
clc
pop
and
std
ret
or
cmp
jge
adc
xor
push
xchg
ret
cli
mov
imul
push
in
adc
jecxz
adc
push
mov
mov
mov
mov
adc
scas
psubsw
aaa
or
aam
test
sbb
mov
sbb
sbb
aam
mov
test
or
push
pop
dec
lea
dec
or
jmp
aam
test
sbb
mov
sbb
sbb
inc
aam
mov
iret
adc
ret
mov
int
or
push
fisttpl
jecxz
cltd
jns
sub
xor
int
mov
imul
or
mov
shl
dec
inc
jo
push
je
cmp
inc
rcrl
out
cli
fmuls
outsl
and
xlat
inc
xor
aam
or
jns
test
jnp
adc
xchg
adc
sub
xor
xor
cwtl
inc
push
mov
lcall
add
xor
aam
scas
testb
ss
call
xchg
inc
aam
insb
in
push
xchg
lret
cli
mov
inc
aam
push
in
adc
jg
mov
jb
dec
or
cmp
shlb
or
mov
shr
dec
dec
jo
push
je
cmp
xor
xchg
inc
shll
outsb
xorb
aam
or
mov
inc
add
xor
mov
sbb
xlat
inc
xor
aam
or
jle
test
xchg
adc
das
aam
or
xor
mov
ret
mov
pop
fwait
test
add
rcl
inc
xor
aam
or
jl
cmpsl
mov
xchg
adc
and
xor
test
enter
gs
cli
xchg
mov
adc
jb
int3
adc
mov
subl
sbb
imul
idivl
inc
aam
insb
out
adc
cli
mov
cli
mov
inc
aam
dec
notb
push
pop
pop
sbbl
mov
or
inc
aam
push
mov
out
movsb
loope,pt
or
aaa
cmp
pop
pop
shlb
or
mov
shr
dec
je
cmp
jo
ret
xor
xchg
inc
shr
popa
sub
aam
cli
rcr
in
xor
sbb
xchg
dec
clc
into
pop
cltd
mov
xchg
cmp
icebp
scas
maskmovq
aaa
or
aam
cmpsl
jns
mov
shlb
or
aam
pop
jns
das
in
out
fstpt
inc
iret
push
cltd
mov
repnz
je
test
lret
mov
dec
int
mov
dec
fisttpll
inc
aam
psadbw
aaa
or
aam
movsb
jns
mov
shlb
or
aam
pop
jns
out
sbb
mov
out
inc
aam
cmp
jmp
push
mov
stc
adc
aam
mov
xchg
adc
xor
pop
xchg
ljmp
addr16
aam
dec
call
mov
in
mov
mov
adc
push
xor
inc
aam
insb
out
adc
repnz
cli
mov
arpl
xor
adc
shl
insl
repnz
jne
daa
ss
jne
inc
aam
paddsw
aaa
or
aam
lods
jns
mov
sbb
pop
or
aam
movsl
jns
xchg
int
mov
std
lret
or
into
outsb
xchg
cmp
aam
test
sti
insl
mov
mov
or
mov
lds
inc
xchg
adc
xor
pop
xchg
ljmp
arpl
xor
adc
push
shlb
or
add
aam
insl
pop
imul
adc
inc
adc
psadbw
aaa
or
aam
movsb
jns
mov
shlb
or
aam
pop
jns
inc
mov
in
and
pop
nop
add
mov
pop
cltd
andl
mov
inc
aam
insb
loope
pop
xchg
loop
xor
cli
mov
imul
push
loope
sub
jnp
mov
mov
mov
aam
mov
jge
adc
xor
push
xchg
ret
cli
mov
push
in
adc
jg
add
movsl
sub
xor
jge
lret
mov
aam
ret
mov
pop
scas
maskmovq
aaa
or
aam
cmpsl
jns
mov
shlb
or
aam
pop
jns
xchg
inc
subb
inc
aam
insb
in
push
xchg
lret
cli
mov
fs
aam
push
in
adc
les
sahf
dec
cltd
adcl
cmp
dec
or
push
stos
inc
pop
in
lock
or
test
popl
add
or
lds
mov
xchg
adc
xor
pop
xchg
ljmp
push
call
sbb
adc
aad
sub
dec
or
aam
or
pusha
mov
inc
adc
fildl
adc
out
in
in
or
stos
out
xchg
cmp
dec
or
xor
xchg
cmp
and
jle
int3
pop
jg
mov
xlat
inc
xor
aam
or
jl
cmpsl
mov
xchg
adc
das
aam
or
test
cmp
mov
add
mov
and
mov
mov
adc
push
cmc
jns
int3
push
mov
test
adc
xor
pop
xchg
cli
mov
cli
mov
push
notb
cwtl
jbe
mov
aam
es
adc
xlat
inc
xor
aam
or
jl
cmpsl
mov
xchg
adc
and
xor
test
and
mov
dec
sbb
xlat
inc
xor
aam
or
jg
cmpsb
mov
xchg
adc
and
xor
xchg
mov
or
pop
inc
aaa
out
add
aam
sub
push
ljmp
and
inc
aam
insb
in
push
xchg
ret
cli
mov
inc
aam
push
in
adc
scas
or
add
mov
cmp
andl
xchg
cmp
mov
cmpsl
dec
aam
push
mov
insl
xchg
cmp
sbb
xchg
cmp
dec
or
cmp
xor
outsb
xor
inc
mov
shl
dec
movsb
jae
push
je
cmp
xor
xchg
pop
shrl
or
addb
outsb
xor
shlb
or
mov
shr
dec
dec
jo
push
je
cmp
inc
roll
pop
xor
push
fisubl
dec
mov
sbb
mov
ss
cmp
dec
or
aam
cmpsb
fdivs
jecxz
iret
push
shll
mov
inc
aam
scas
out
xchg
sbb
xor
lods
push
loope
clc
test
mov
std
cmp
rcl
scas
psubsw
aaa
or
aam
test
sbb
mov
sbb
sbb
aam
mov
jo
and
or
scas
paddusb
push
mov
add
mov
push
xchg
xchg
scas
paddsb
aaa
or
aam
stos
jns
mov
sbb
sbb
aam
mov
out
mov
les
or
test
push
leave
pop
mov
sub
int
or
test
pop
jle
sbb
inc
aam
sbb
inc
jle
pop
testb
jg
shll
inc
jae
adc
pop
jl
incl
sub
inc
in
test
rcl
scas
psubsw
aaa
or
aam
test
sbb
mov
sbb
sbb
aam
mov
mov
lds
int3
xor
add
mov
xlat
pop
xor
aam
or
jne
lods
mov
xchg
adc
sub
xor
into
mov
pop
rorb
push
mov
out
adc
push
mov
mov
xlat
inc
xor
aam
or
jl
cmpsl
mov
xchg
adc
cs
or
test
sahf
ljmp
mov
ret
jg
mov
adc
or
in
xor
aam
push
mov
std
sub
dec
or
cmp
sbb
or
outsb
xor
shlb
or
mov
shr
dec
dec
jo
push
je
cmp
xor
xchg
inc
rcll
mov
inc
aam
aaa
xor
xor
push
out
fldcw
pop
jmp
mov
mov
maskmovq
aaa
or
aam
cmpsl
jns
mov
shlb
or
aam
pop
jns
es
call
ret
xor
jge
insb
lods
pop
test
lods
dec
cmpsl
outsl
push
mov
and
xor
adc
push
xlat
cmova
xor
inc
aam
insb
jecxz
pop
xchg
shlb
xor
inc
aam
push
jmp
mov
xor
inc
aaa
aas
aam
or
mov
arpl
lret
fs
in
fistps
sub
or
outsb
xor
inc
mov
shl
dec
mov
jo
mov
pop
shrl
lock
aam
sub
cmp
lock
lea
and
popl
out
std
jp
dec
or
aam
por
aaa
or
aam
stos
jns
mov
sbb
sbb
aam
mov
iret
out
or
aam
out
aam
imul
xlat
xor
int3
xor
aam
add
add
add
and
pop
mov
addl
inc
push
ret
leave
dec
loope
adc
inc
add
add
mov
push
lea
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
dec
jmp
lea
add
shlb
inc
jns
insl
js
shlb
jno
mov
jmp
mov
int
mov
andl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lea
mov
je
and
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
push
jmp
xchg
das
ss
fisttpll
lcall
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
mov
add
add
push
call
and
pop
mov
addl
inc
push
ret
adc
and
jo
xchg
and
jno
test
mov
mov
movzbl
mov
mov
pusha
sub
xor
popa
sub
mov
shr
push
push
call
and
pop
mov
addl
inc
push
ret
out
xor
outsb
dec
in
pusha
jnp
jle
movswl
popa
mul
mov
sub
xchg
jl
jmp
inc
push
dec
bound
mov
enter
push
fisttps
jl
jp
pop
xchg
push
mov
pop
pushl
pusha
mov
adc
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
into
pop
cmc
and
in
mov
xchg
push
sbb
jno
mov
pop
mov
stc
out
mov
in
sub
cmp
jae
and
movzbl
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ret
lea
push
mov
popf
insl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
mov
shr
mul
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
repz
sub
xor
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
push
inc
xlat
arpl
jnp
cld
pop
sub
js
push
push
call
and
pop
mov
addl
inc
push
ret
add
test
add
stc
add
push
push
call
and
pop
mov
addl
inc
push
ret
insb
inc
std
jp
add
cmp
jbe
mov
mov
mov
test
je
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
jne
mov
sbb
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
pop
or
sub
mov
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
xor
int3
fs
shll
mov
jo
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
mov
inc
in
pop
mov
pusha
mov
jns
mov
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
sahf
pop
cmp
mov
popa
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
movl
cmc
mov
cmpl
jne
incl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
lret
xor
movswl
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
loop
xchg
popf
or
dec
nop
push
push
call
and
pop
mov
addl
inc
push
ret
add
call
sbb
jne
cmpsl
xchg
test
leave
push
mov
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
and
or
add
and
mov
or
push
push
call
and
pop
mov
addl
inc
push
ret
gs
jns
mov
mov
mov
cld
jmp
jg
xchg
int3
pushf
pop
jecxz
sub
add
add
add
and
pop
mov
addl
inc
push
ret
jecxz
and
mov
push
or
pop
push
push
call
and
pop
mov
addl
inc
push
ret
ja
and
testl
ljmp
push
call
and
pop
mov
addl
inc
push
ret
sbb
call
push
cmp
jns
fistpl
or
mov
pop
mov
cmc
jmp
add
add
lea
jl
pusha
mov
mov
popa
push
je
push
jb
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fistl
add
push
mov
pop
push
mov
push
mov
jmp
xchg
mov
popa
inc
outsl
lea
lea
mov
add
call
dec
cwtl
int
jmp
inc
pop
sub
orb
lcall
push
push
push
push
pop
rdtsc
jmp
push
lock
jg
pop
adcb
js
fcompl
pop
push
push
jmp
sub
cwtl
aas
loop
xchg
or
push
push
call
or
lea
mov
call
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
xor
xchg
aaa
jmp
call
pop
sub
mov
cmpl
jbe
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
ss
jg
jo
dec
js
add
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
test
cmpsb
or
jne
push
push
call
and
pop
mov
addl
inc
push
ret
pop
out
scas
cmpsb
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
and
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsl
jp
and
push
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
sarl
lea
add
add
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
jb
push
in
sub
js
mov
movl
jmp
test
sbb
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
lds
andl
and
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
rolb
xchg
cld
into
outsl
test
je
jo
jmp
pop
and
push
or
call
push
push
call
and
pop
mov
addl
inc
push
ret
imul
sbb
push
jg
rdtsc
jmp
es
es
cmp
push
pop
pop
jmp
inc
adc
lods
mov
popa
mov
mov
jmp
call
and
jbe
pusha
aaa
out
xlat
out
jl
mov
or
mov
push
mov
mov
mov
out
adc
in
mov
movzbl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
add
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
jmp
xadd
add
xchg
and
pop
mul
mov
mov
sub
jmp
jno
cmc
inc
xor
push
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
jnp
pop
pop
rdtsc
push
push
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
hlt
ja
inc
jg
outsb
pop
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
insl
or
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
insb
fisubs
add
adc
add
mov
sbb
ret
mov
je
test
aas
or
idiv
pop
in
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
add
int
sub
push
dec
cmp
jae
sub
movzbl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
mov
or
mov
mov
shr
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
mul
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
push
gs
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
dec
jnp
inc
lret
mov
pop
sub
js
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
xchg
inc
cmpl
mov
cmp
jbe
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
roll
mov
add
add
add
and
pop
mov
addl
inc
push
ret
lahf
or
insb
movsb
ja
xchg
add
add
xchg
and
pop
movswl
sub
jb
mov
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
mov
enter
push
movzwl
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
insb
fistpl
mov
push
push
push
pop
pop
pop
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
andl
lea
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
pushf
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
xorb
dec
jmp
jmp
fcoml
xor
add
test
or
add
dec
xor
add
adc
ljmp
fnsave
mov
mov
pushl
movswl
call
push
push
call
and
pop
mov
addl
inc
push
ret
movsl
dec
jae
lods
push
test
push
nop
and
sub
push
push
call
and
pop
mov
addl
inc
push
ret
jl
inc
xor
cs
pop
popa
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
aaa
pushf
mov
mov
jmp
jg
rcll
je
push
mov
mov
mov
jnp
pusha
jge
sub
mov
popa
call
fchs
dec
cmpsl
mov
mov
mov
pop
jg
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
jmp
sub
mov
mov
adc
jmp
add
add
mov
sub
lea
push
push
call
and
pop
mov
addl
inc
push
ret
int3
add
sbb
jmp
adc
pusha
push
push
pusha
popa
rdtsc
jb
pop
pop
je
push
pop
popa
push
push
push
pusha
jmp
int
shll
sti
fbld
sbb
fmul
repz
repz
push
jbe
popa
rdtsc
push
push
pusha
popa
rdtsc
jmp
js
add
mov
insb
sub
cmp
outsb
ficompl
pop
pop
nop
push
sub
push
mov
lea
sub
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmp
popf
popf
adc
jmp
cli
or
cmc
inc
or
pop
popa
pop
mov
mov
mov
push
cld
push
push
jmp
push
clc
rcrb
popf
std
mov
popa
mov
es
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
and
cmc
push
mov
lea
call
mov
in
add
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
ret
dec
stos
and
adc
add
bound
or
xchg
pop
lods
aad
aam
mov
dec
xor
test
add
add
add
and
pop
mov
addl
inc
push
ret
rorb
les
or
add
add
add
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
lock
mov
inc
and
pusha
pusha
pusha
popa
mov
popa
mov
popa
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
fld
cwtl
sub
jecxz
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
iret
aad
adc
mov
add
add
push
call
and
pop
mov
addl
inc
push
ret
jge
pop
cmp
add
mov
or
jne
call
xchg
push
pop
push
les
mov
imul
sbb
or
cli
cmpl
je
pusha
mov
popa
jmp
mov
call
cmpsb
cmp
in
popf
imul
sbb
aad
xchg
pop
sbb
test
imul
jmp
call
fdivr
and
add
add
mov
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
jo
or
lea
or
andl
mov
mov
pusha
add
popa
test
je
jp
call
nop
cwtl
outsl
xchg
pop
jb
push
mov
stc
es
call
push
push
call
and
pop
mov
addl
inc
push
ret
pushl
scas
mov
push
js
call
lahf
xor
cmp
sbb
and
mov
pop
nop
push
push
jnp
push
push
rdtsc
pop
pop
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
pop
push
pusha
jnp
push
push
rdtsc
pop
pop
push
push
push
rdtsc
pop
pop
pop
popa
nop
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
lret
pop
dec
inc
cmp
add
push
call
and
pop
mov
addl
inc
push
ret
xor
sub
out
mov
in
mov
movzbl
push
push
call
and
pop
mov
addl
inc
push
ret
push
les
subl
mov
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
rorb
add
add
and
pop
mov
addl
inc
push
ret
daa
fs
push
mov
jns
mov
pop
mov
shr
push
push
call
and
pop
mov
addl
inc
push
ret
add
add
push
inc
sub
mov
mul
push
push
call
and
pop
mov
addl
inc
push
ret
fidivl
fistl
iret
pushaw
dec
mov
sub
mov
push
ja
pusha
jle
jmp
pop
arpl
aad
das
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lods
mov
js
mov
xor
call
and
pop
mov
addl
inc
push
ret
gs
adc
push
or
cmp
popf
shrl
mov
push
jl
push
pop
pop
movzwl
call
push
push
call
and
pop
mov
addl
inc
push
ret
pop
test
dec
cmc
mov
jo
adc
mov
popa
out
push
push
call
and
pop
mov
addl
inc
push
ret
or
xchg
out
and
mov
in
sub
mov
cmp
jae
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
jge
mov
movzbl
push
push
call
and
pop
mov
addl
inc
push
ret
lds
jne
jno
xor
push
sub
call
pop
pop
jecxz
adc
mov
xchg
dec
out
mov
sbb
pop
mov
movswl
mov
mov
mov
shr
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
bnd
outsl
xchg
push
push
mov
pop
pop
mul
or
sub
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
cmpb
insb
push
pop
cmp
cmp
pop
sub
js
push
push
call
and
pop
mov
addl
inc
push
ret
sbbb
aad
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
imull
pop
xor
xchg
add
add
push
call
and
pop
mov
addl
inc
push
ret
loopne
into
int
shll
sti
mov
mov
mov
test
je
push
push
call
and
pop
mov
addl
inc
push
ret
nop
xchg
mov
icebp
call
push
push
call
and
pop
mov
addl
inc
push
ret
inc
push
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
call
sub
cmp
jbe
call
sbb
ja
inc
aas
insb
adc
mov
popa
pop
jmp
add
cmc
mov
sub
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
fcoml
push
mov
pop
jbe
popa
call
ss
inc
pushf
lock
xor
pop
stc
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
divl
adc
jns
push
rorl
call
and
pop
mov
addl
inc
push
ret
aad
pop
mov
cmpl
jne
mov
incl
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
or
jne
jmp
test
mov
xchg
dec
iret
movsl
ja
sbbl
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
ret
nop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
add
push
decl
pop
adc
jmp
adc
adc
sarl
pop
addl
jmp
or
push
push
call
and
pop
mov
addl
inc
push
ret
dec
push
jb
in
jns
push
push
call
and
pop
mov
addl
inc
push
ret
dec
ss
fucomp
adc
add
aas
iret
mov
iret
cmp
stos
in
xchg
test
pop
mov
pop
push
mov
add
pop
call
xchg
test
fdivr
xchg
leave
fldenv
dec
sahf
mov
pop
sub
push
mov
cmc
pop
push
push
call
and
pop
mov
addl
inc
push
ret
cld
nop
aaa
lahf
push
sti
jg
add
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
push
hlt
mov
adc
adc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
shrb
add
add
add
add
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
inc
mov
dec
scas
cmp
cli
push
jno
push
pusha
popa
pop
mov
mov
jne
sub
push
cmc
push
sub
lea
jmp
stos
inc
pop
ret
cmp
insb
xchg
imul
add
push
push
call
and
pop
mov
addl
inc
push
ret
jne
sub
push
jmp
fildl
fs
stos
push
mov
adc
mov
push
jno
call
sub
addr16
push
adc
test
mov
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
jbe,pn
call
cmc
cltd
call
or
idivb
into
inc
pop
sub
add
mov
fstps
jnp
inc
ljmp
loope
mov
call
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jns
call
sub
cwtl
xor
test
mov
jmp
addr16
mov
inc
jbe
mov
pop
call
leave
inc
dec
ljmp
xchg
jno,pt
pop
call
mov
incl
pusha
jnp
or
jo
jmp
bound
mov
ds
stos
popa
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
aad
sub
lret
mov
sub
xor
add
xchg
add
mov
mov
jmp
inc
shll
cmp
shll
nop
lods
push
outsb
inc
push
mov
dec
dec
shl
jp
jecxz
add
add
push
call
and
pop
mov
addl
inc
push
ret
rcll
mov
xchg
rclb
mov
push
mov
pop
or
jne
jmp
lahf
je
dec
inc
test
repz
je
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
outsl
jo
data16
arpl
pop
jmp
xor
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
sub
add
add
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
scas
mov
add
add
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
pop
mov
andl
or
mov
add
mov
test
je
mov
call
xor
nop
push
jo
jnp
pop
push
jmp
xchg
in
jno
mov
inc
int
dec
inc
sbb
nop
jp
jmp
mov
mov
push
pusha
mov
popa
pop
out
je
movswl
in
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
sub
mov
movzbl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
popf
inc
sbb
push
jmp
mov
and
cli
pop
shr
mov
sbb
mul
jmp
sti
and
sbb
bound
fsubrs
push
call
and
pop
mov
addl
inc
push
ret
add
cltd
jns
clc
push
pusha
jmp
sub
pusha
cmp
test
mov
pusha
pusha
popa
pusha
popa
popa
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lret
aaa
sbb
add
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
xchg
notb
mov
or
add
pop
out
push
push
call
and
pop
mov
addl
inc
push
ret
stc
ljmp
mov
in
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pusha
sar
cmp
jae
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
ljmp
add
subl
mov
mov
mov
mov
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
stc
jmp
or
dec
lret
jge
call
es
mul
push
push
call
and
pop
mov
addl
inc
push
ret
out
pop
addr16
mov
test
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
dec
adc
pop
or
sub
js
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
leave
mov
add
call
cs
xor
sub
pop
cmp
jbe
mov
mov
call
movsb
rolb
fldl
jns
shrl
in
scas
mov
mov
pop
test
je
push
push
call
and
pop
mov
addl
inc
push
ret
pusha
jbe
mov
call
add
mov
pop
mov
sub
sub
cmp
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sbb
or
jmp
jb
adc
add
mov
call
mov
push
aam
pop
int
sarb
hlt
inc
push
daa
mov
pop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
loop
push
adc
test
arpl
xor
add
mov
xor
push
call
sub
repnz
mov
pop
pop
cmpl
jne
pusha
mov
mov
popa
incl
pusha
mov
mov
popa
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
add
push
push
call
and
pop
mov
addl
inc
push
ret
fstl
ficoms
or
mov
mov
movzwl
push
push
call
and
pop
mov
addl
inc
push
ret
nop
sbb
add
int
or
or
mov
adc
push
add
add
mov
add
add
movzwl
mov
sub
popa
jmp
mov
push
mov
scas
cmp
sar
mov
and
pop
jg
jae
push
pop
add
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
lds
pop
push
push
call
and
pop
mov
addl
inc
push
ret
leave
push
add
js
fscale
orl
push
add
add
aaa
movswl
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
sub
inc
mov
mov
mov
jmp
popw
pusha
xor
add
jmp
mov
scas
inc
dec
pop
dec
loopne
xor
mov
pusha
add
jnp
ret
mov
icebp
stc
add
outsb
lds
dec
inc
and
jbe
je
and
ficoms
jmp
loop
dec
mov
lock
mov
push
fisubrl
repnz
leave
nop
ret
jno
addb
jne
mov
dec
daa
sub
nop
or
out
cmp
nopl
lock
stos
pop
dec
pop
loop
sub
or
insl
cmp
js
mov
mov
mov
and
jo
mov
or
cmp
or
xchg
mov
pop
push
mov
lret
mov
shll
sbb
mov
push
or
or
mov
lahf
cmc
std
sqrtps
jns
nop
or
or
ja
scas
sbb
lea
jmp
mov
mov
xchg
mov
mov
xchg
test
addr16
loop
ljmp
arpl
or
mov
dec
push
cmpl
je
lret
and
and
mov
xchg
mov
xchg
xchg
mov
das
and
xchg
mov
icebp
add
cmp
stos
mov
fldcw
jmp
xchg
xchg
xchg
aam
out
adc
test
xchg
xchg
xchg
push
loop
cmp
cmp
mov
add
add
xchg
xor
inc
test
add
xor
in
aas
push
cltd
cld
idiv
add
ss
pusha
lods
mov
into
sbb
cmp
xchg
lahf
in
jnp
xchg
mov
cld
mov
outsb
mov
movsl
jae
xchg
iret
mov
push
clc
dec
and
sub
pop
mov
dec
rorb
mov
add
mov
lea
xchg
fst
and
xchg
cltd
out
add
sbb
xor
pushf
dec
xchg
ret
xchg
xchg
inc
dec
push
test
movsl
repz
mov
jmp
imul
inc
sti
add
adc
adcb
pop
aam
int
mov
adcl
jp
add
jecxz
mov
adc
stos
mov
pop
pop
or
dec
repz
dec
inc
push
mov
xor
scas
movsb
pop
inc
fwait
enter
fwait
repnz
and
test
push
dec
inc
in
adc
dec
inc
fwait
test
or
jbe
test
movsl
lods
cmp
and
ljmp
addb
xchg
jo
into
adc
test
mov
adc
or
out
sub
icebp
popf
xchg
xchg
lahf
xchg
fwait
cmp
pop
pop
xor
dec
fdivs
cli
sbb
add
xchg
xchg
int
pushf
pop
push
dec
fidivs
sbb
push
pop
add
sub
je
lret
in
popf
mov
in
xchg
cs
imul
int3
jbe
loop
ljmp
nop
mov
ficoml
mov
dec
scas
or
and
mov
xor
push
fwait
cmp
mov
mov
daa
mov
xlat
adc
pop
mov
xchg
xchg
out
or
in
push
or
adc
push
xor
xchg
sub
out
pop
sub
push
pop
movsb
inc
sbb
aaa
lods
pop
xor
fcom
fnstcw
iret
inc
xor
inc
mov
loopne
cmpsl
lods
leave
xchg
xchg
sbb
sub
mov
sub
jp
leave
into
inc
xchg
push
jb
daa
sub
pop
mov
dec
mov
cltd
adcl
add
add
ljmp
mov
aad
loopne
ret
xchg
xchg
fistps
out
test
and
jp
lock
les
and
testl
jns
cltd
and
jns
jp
test
and
sbb
scas
call
xchg
ret
xchg
xchg
int3
push
addb
insb
mov
pop
mov
movsb
lcall
fcoml
jg
fcoml
add
sbb
mov
cmpsb
fsubrl
xchg
les
mov
xchg
push
jecxz
popf
cmpb
add
ds
mov
add
lahf
pusha
stos
in
mov
cmc
cmovns
fsubl
jb
adc
in
outsb
icebp
stos
inc
xor
insl
jb
mov
data16
leave
mov
jge
shrl
xchg
fstpt
fsubrl
mov
xchg
pop
lret
jnp
sbb
aam
jecxz
jecxz
lcall
lcall
jns
mov
pop
lcall
add
dec
hlt
jb
and
es
inc
je
dec
inc
push
pushf
mov
daa
pop
or
popf
adc
mov
jmp
aad
pop
fistpl
lcall
cmp
jge
jne
mov
jbe
mov
jnp
push
lcall
out
push
lcall
jne
cmpsb
lods
lock
es
sub
mov
pop
int3
jp
dec
in
jnp
jae
enter
push
lcall
mov
jecxz
lcall
lcall
arpl
arpl
push
jbe
mov
ss
and
mov
add
add
cwtl
idivb
cmp
mov
scas
xchg
xchg
cmc
syscall
xchg
jmp
mov
outsl
in
sub
dec
xchg
mov
lcall
pop
aad
or
lcall
lcall
and
ljmp
loope
stc
icebp
cmp
orb
push
shlb
gs
xchg
jno
lods
movsl
mov
lcall
adc
popa
out
adc
stos
sahf
or
loop
imull
outsl
in
xchg
jecxz
bound
call
pop
nop
inc
mov
cmpsl
xorl
rcrl
add
jecxz
add
jp
xor
imul
loope
push
pop
mov
jo
stos
xchg
adc
push
push
xchg
add
dec
xchg
xchg
mov
stos
xchg
xchg
iret
and
push
cmpsb
neg
ficoml
ror
mov
and
add
rolb
cmp
add
xchg
test
sub
push
negb
push
lcall
pop
add
aaa
insl
popa
pop
push
sbb
lods
outsb
and
push
sahf
jnp
cvtps2pi
std
sarl
nop
fcmove
cmp
nop
pushf
loopne
insb
xchg
pushf
or
or
jno
and
pop
aad
leave
xlat
pop
icebp
or
lcall
in
push
xchg
ret
rcl
mov
roll
xchg
out
pop
cmpsl
pop
movsb
push
ja
jl
sub
mov
stos
rolb
sub
rcr
daa
jns
popa
addr16
adc
aaa
mov
push
pop
pop
pop
adc
out
adcl
ds
jg
pop
in
test
xchg
xchg
fsubrl
inc
dec
pop
iret
adc
pushf
xchg
mov
mov
lret
roll
adc
gs
xor
dec
mov
mov
adc
push
cmpsl
stc
add
data16
into
lret
mov
add
xchg
xor
cmpsb
stos
idivb
ljmp
inc
and
mov
sbb
mov
stos
lods
push
pop
cmp
outsb
xchg
add
xchg
add
push
sbb
mov
and
pop
sti
add
cltd
ficoms
cmp
pusha
lods
out
or
iret
adc
and
mov
ret
xlat
jo
scas
xor
push
in
xchg
lcall
and
cmp
and
inc
icebp
cmp
fnstsw
testb
xor
std
jmp
stc
inc
adc
sub
adc
ror
push
leave
jns
insl
mov
mov
sub
adc
mov
xor
push
pop
stos
ret
push
mov
pop
dec
inc
in
adc
add
fisubl
adc
push
xor
cmp
test
je
and
mov
stc
outsl
lret
shll
jl
stos
das
insb
jle
mov
add
mov
es
lds
inc
dec
jae
or
lds
adc
mov
pop
dec
sub
lds
movb
pushf
dec
xchg
sub
lds
out
fwait
cwtl
lea
push
adc
popa
jno
lods
movsl
pop
push
pop
cmpl
pushl
insb
in
cltd
out
sbb
test
sbb
add
xchg
ljmp
in
pop
jnp
jb
movsl
xor
xchg
inc
lock
push
sbb
cld
or
pop
xchg
cltd
jmp
sti
icebp
aas
popa
aaa
aaa
inc
xchg
lea
and
sub
jne
jge
adc
push
mov
xor
not
sub
inc
xor
add
pop
sub
xchg
pop
push
mov
add
sub
xchg
pop
mov
push
mov
push
mov
not
dec
xor
inc
xor
xor
mov
mov
add
push
mov
add
sub
mov
popl
mov
push
mov
add
add
xchg
pop
pushl
pop
add
jmp
icebp
pusha
pusha
stc
lret
pusha
xchg
mov
mov
loopne
jbe
inc
bound
jge
ror
jo
jge
cmp
and
cli
mov
jl
jnp
pop
cmpb
clc
popf
iret
add
repz
data16
jp
add
mov
cltd
adc
decl
push
mov
mov
and
jmp
stos
test
cld
pop
mov
cs
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sub
and
jne
push
push
call
and
pop
mov
addl
inc
push
ret
sti
inc
add
mov
pop
mov
mov
sub
mov
and
jne
push
push
call
and
pop
mov
addl
inc
push
ret
out
cmpsl
mov
add
jo
mov
popa
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
ljmp
push
call
and
pop
mov
addl
inc
push
ret
xor
icebp
pop
inc
popf
jp
lea
add
add
add
and
pop
mov
addl
inc
push
ret
in
icebp
insb
mov
test
or
pusha
jmp
hlt
xor
mov
imul
xor
and
push
push
call
and
pop
mov
addl
inc
push
ret
fucom
push
fcoml
pop
test
loop
iret
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
insl
cwtl
mov
mov
and
jne
jnp
stc
mov
mov
and
jne
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
test
xchg
in
mov
popa
pusha
mov
sbb
mov
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
jg
pop
mov
add
out
inc
test
scas
xchg
pusha
repnz
mov
shlb
lea
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
ds
push
dec
in
push
mov
jmp
aaa
clc
shll
and
jne
push
push
call
and
pop
mov
addl
inc
push
ret
bound
stc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
loop
mov
and
jne
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
sub
call
jae
xchg
xchg
add
and
sbb
imul
push
mov
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
or
scas
sbb
test
xor
mov
test
add
add
mov
sbb
popf
xor
call
and
pop
mov
addl
inc
push
ret
bound
xor
pusha
jns
sub
popa
pop
and
jne
mov
mov
mov
jbe
jns
xor
and
jne
push
push
call
and
pop
mov
addl
inc
push
ret
mov
ficoms
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
into
rolb
xor
add
push
call
and
pop
mov
addl
inc
push
ret
js
xchg
add
mov
pusha
jmp
xchg
cmp
adc
popa
popa
push
push
call
and
pop
mov
addl
inc
push
ret
push
jmp
popa
popf
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
aam
popf
pop
push
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
and
adc
adc
scas
jmp
aaa
lds
mov
jmp
pusha
mov
test
je
push
pushl
lea
call
mov
mov
shr
push
push
push
push
push
call
jmp
movb
push
pushl
lea
call
mov
lea
push
push
push
push
call
popa
ret
shl
jmp
mov
inc
add
mov
mov
inc
add
mov
add
add
adc
adc
adc
adc
leave
cltd
mov
add
add
add
add
inc
inc
add
inc
add
add
adc
adc
inc
cltd
add
add
mov
adc
add
add
mov
add
mov
add
mov
add
add
mov
add
add
add
mov
mov
mov
mov
add
mov
inc
inc
inc
inc
inc
mov
mov
add
mov
mov
add
orb
mov
mov
mov
cs
add
add
jmp
push
inc
add
push
inc
add
push
add
add
add
add
pop
sub
pusha
movl
cmpw
jne
movl
jmp
lea
push
lea
push
push
push
call
add
and
mov
popa
add
mov
pop
ret
push
mov
push
push
andb
andb
xor
and
cmpl
je
movb
movb
movb
jmp
andb
andb
movb
push
push
push
mov
mov
movzbl
inc
mov
mov
xor
movzbl
push
call
pop
sub
lea
add
cmp
pop
je
inc
cmp
jb
cmp
je
cmp
jne
cmpb
jne
cmpb
movb
jne
movb
movb
jmp
andb
movb
cmp
jne
cmpb
jne
xorb
movb
jmp
mov
mov
dec
cmp
mov
jne
movzbl
inc
mov
movzbl
shr
mov
add
jmp
movzbl
shr
push
call
pop
sub
lea
add
mov
pop
mov
and
mov
shl
shr
test
mov
je
mov
movb
movzbl
inc
mov
mov
mov
mov
and
movzbl
cmp
sete
shr
sub
je
dec
je
dec
jne
cmpb
jne
cmpb
je
movb
addb
push
call
pop
sub
movl
pop
jmp
cmpb
jne
cmpb
je
movb
jmp
cmpb
jne
cmpb
je
movzbl
mov
mov
and
cmp
jne
mov
incb
jmp
cmp
jne
mov
jmp
cmp
jne
movb
decb
je
movzbl
mov
movzbl
mov
mov
incb
decl
mov
mov
jne
mov
and
cmp
jne
cmp
ja
test
jne
cmpb
je
movzbl
jmp
push
pop
mov
mov
mov
mov
and
sub
je
dec
dec
je
and
add
jmp
mov
add
jmp
mov
add
add
mov
decb
test
je
movzbl
inc
mov
movzbl
inc
dec
mov
mov
jne
pop
pop
mov
pop
leave
ret
lea
mov
pusha
mov
js
call
push
jle
xchg
dec
push
mov
scas
call
xchg
cmp
insb
jge
es
pop
pop
mov
mov
cmpl
jne
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
mov
call
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
pop
cld
nop
pusha
mov
mov
popa
mov
mov
jge
sub
call
mov
sub
call
mov
mov
push
mov
pop
call
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lret
xchg
int
ss
movzwl
pusha
movswl
sbb
popa
call
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
call
push
push
call
and
pop
mov
addl
inc
push
ret
loope
mov
mov
add
sbb
xor
xchg
adc
mov
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
flds
push
add
movzwl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
dec
dec
mov
mov
push
mov
mov
call
jbe
mov
mov
mov
call
jne
sub
mov
movswl
call
jmp
xor
fmul
xor
and
iret
add
push
mov
fldenv
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
popf
xlat
inc
xchg
daa
lock
adc
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
pop
rorl
add
push
call
and
pop
mov
addl
inc
push
ret
xchg
jno
enter
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
call
xor
mov
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
pop
lcall
sub
movzbl
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
adcb
mov
sbb
push
add
add
push
call
and
pop
mov
addl
inc
push
ret
hlt
adc
pop
ss
push
push
call
and
pop
mov
addl
inc
push
ret
pop
aas
mov
shr
push
push
call
and
pop
mov
addl
inc
push
ret
and
push
or
fisubl
loop
adc
mov
xchg
push
push
push
jne
rdtsc
jmp
loop
sub
pop
pop
pop
pop
push
pusha
pusha
jmp
adcl
call
clc
push
push
push
rdtsc
pop
pop
popa
pusha
push
pop
jmp
sub
pop
or
push
data16
sbb
xchg
popa
popa
xchg
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
jae
mov
pop
pop
call
scas
pushf
scas
or
add
je
mov
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
rorb
lods
mov
xor
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lret
push
mov
movzwl
lea
push
push
call
and
pop
mov
addl
inc
push
ret
hlt
lds
jnp
or
mov
add
add
add
and
pop
mov
addl
inc
push
ret
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
decl
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
adc
mov
push
call
and
pop
mov
addl
inc
push
ret
cmp
lea
inc
add
add
add
add
and
pop
mov
addl
inc
push
ret
hlt
sti
fbld
xchg
add
mov
add
lea
jnp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
bound
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
leave
add
mov
xor
lea
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
xlat
call
add
cltd
sub
xor
add
xor
mov
sub
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
pushf
adc
or
inc
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
jmp
or
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
adc
aas
mov
push
push
call
and
pop
mov
addl
inc
push
ret
int3
and
inc
add
add
add
add
and
pop
mov
addl
inc
push
ret
popa
js
enter
repnz
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
adc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
push
in
notl
popf
or
rolb
add
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
push
sub
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
insb
lock
add
push
test
push
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
icebp
sbb
mov
push
jmp
in
xchg
pop
sub
out
pop
out
sar
and
add
add
add
and
pop
mov
addl
inc
push
ret
out
mov
cli
mov
push
push
call
and
pop
mov
addl
inc
push
ret
iret
jge
and
lahf
mov
mov
mov
add
cmpl
jne
cmpl
je
push
push
mov
mov
mov
lea
call
pop
pop
cmpl
je
push
push
mov
mov
lea
call
pop
pop
jb
pusha
xor
mov
popa
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
nop
jns
jns
push
push
rdtsc
pop
pop
push
push
push
jno
push
pop
rdtsc
jns
push
pop
pop
pop
nop
or
push
push
push
call
and
pop
mov
addl
inc
push
ret
sub
fwait
jmp
mov
adc
pop
push
or
lea
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
and
jmp
lcall
or
cmc
nop
push
push
jmp
test
js
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
pop
pop
push
jmp
or
or
mov
cmp
push
push
call
and
pop
mov
addl
inc
push
ret
stos
inc
sbb
jne
in
push
mov
call
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
imul
call
and
pop
mov
addl
inc
push
ret
ret
cmpl
jne
mov
cmp
je
mov
pusha
mov
jmp
and
jnp
orl
add
add
add
and
pop
mov
addl
inc
push
ret
mov
xchg
add
jmp
sub
pop
sar
lret
jmp
inc
sub
and
and
dec
xor
ljmp
jmp
aam
sbb
jmp
cwtl
movsb
xchg
pop
popf
dec
inc
jb
mov
cwtl
lret
int3
push
xchg
pushf
pop
pop
pop
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
stos
add
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
push
in
lock
les
xchg
push
sub
imul
pop
mov
nop
push
push
push
push
jnp
rdtsc
jmp
sub
cltd
xchg
cmp
cld
insb
sbb
pop
pop
rdtsc
push
jl
pop
pop
pop
push
push
jnp
jmp
and
testl
int
nop
adc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
add
mov
and
pusha
mov
adc
popa
incl
push
push
call
and
pop
mov
addl
inc
push
ret
jo
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
cmp
pushl
jmp
sub
cmp
push
call
jmp
jle
call
xor
cld
outsl
adc
pop
push
aaa
xor
push
mov
pop
mov
jge
push
add
pop
out
mov
in
mov
cmp
jae
pusha
call
insl
add
push
pop
xor
decl
mov
or
test
jmp
imul
push
loope
pop
and
sbb
sub
mov
mov
mov
mov
mov
mov
shr
or
mul
mov
sub
sbb
mov
or
jmp
call
loop
in
push
imul
pop
dec
inc
cmp
lcall
mov
xor
mov
add
or
sub
add
mov
mov
cmp
jae
jmp
call
shrb
pop
add
mov
add
add
mov
or
and
je
jo
jg
andl
mov
mov
mov
jmp
lea
push
cmc
call
push
push
call
and
pop
mov
addl
inc
push
ret
incb
jne
mov
sub
and
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
aad
movsl
jmp
adc
test
jnp
loope
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
mov
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
dec
jge
mov
sub
mov
lods
xor
shr
add
sub
jne
or
push
push
call
and
pop
mov
addl
inc
push
ret
inc
lcall
mov
or
pusha
jmp
int3
sbb
cmpsl
mov
popa
mov
mov
pusha
xor
xor
popa
mov
adc
push
mov
pop
push
mov
mov
add
mov
mov
shr
add
mov
pop
call
mov
adc
div
aad
jbe
rcrb
mov
dec
daa
sbb
push
call
and
pop
mov
addl
inc
push
ret
popf
xor
cmp
or
xor
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
popf
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
arpl
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
rsqrtps
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
js
sbb
mov
cmpl
je
jge
mov
cmpl
je
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
dec
lds
push
push
call
and
pop
mov
addl
inc
push
ret
sarb
dec
dec
push
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
xchg
shl
xchg
add
add
adc
add
test
test
adc
gs
mov
loope
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xchg
dec
cli
pop
adc
notb
leave
je
push
push
call
and
pop
mov
addl
inc
push
ret
in
or
jno
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
into
lahf
gs
sub
push
xor
or
add
xor
pusha
push
push
rdtsc
pop
pop
jmp
jl
lds
addr16
or
bound
sub
add
add
add
and
pop
mov
addl
inc
push
ret
dec
xor
push
push
push
call
and
pop
mov
addl
inc
push
ret
shrb
js
fistps
push
je
push
pusha
popa
pop
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
push
inc
gs
cld
lret
hlt
clc
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
jp
lock
stos
or
add
cmpsb
bound
or
add
add
push
call
and
pop
mov
addl
inc
push
ret
insb
mov
aad
cmpsl
push
iret
mov
mov
mov
movl
call
sbb
popf
xchg
jno
sbb
pop
mov
mov
add
mov
or
mov
clc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
insb
push
mov
or
add
fdivrl
push
push
push
pop
pop
pop
jns
mov
mov
mov
push
jnp
push
jmp
nop
pop
cs
jl
inc
xor
insb
shr
hlt
pop
mov
movzwl
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
into
fisttpl
cmp
sbb
add
add
pop
addl
pusha
xor
mov
popa
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xor
mov
nop
push
push
jb
pop
pop
push
pusha
jmp
add
add
xchg
cmp
jae
pusha
jmp
cmpsb
mov
popa
popa
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
add
ljmp
mov
pop
movswl
popa
call
mov
adc
popa
push
push
call
and
pop
mov
addl
inc
push
ret
pop
outsl
xchg
orb
or
or
add
mov
test
out
xlat
std
xor
movl
push
push
call
and
pop
mov
addl
inc
push
ret
ret
sbb
mov
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
lods
test
push
jp
and
rcrb
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
and
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
dec
or
out
push
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
stc
jge
sub
popf
ljmp
add
and
adc
xchg
data16
into
dec
lcall
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
dec
or
repnz
pushl
movzwl
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jno
xor
movl
push
push
call
and
pop
mov
addl
inc
push
ret
in
xlat
adc
mov
sbb
mov
xchg
push
jmp
divl
hlt
lds
jnp
or
sub
push
push
push
push
jns
pop
rdtsc
jmp
and
and
test
cmp
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
and
sbbl
adc
add
ljmp
mov
call
movsl
and
jge
es
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
in
mov
pop
push
add
dec
mov
call
xor
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xor
clc
mov
mov
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jae
ret
add
add
add
and
pop
mov
addl
inc
push
ret
test
xchg
jmp
mov
add
popa
mov
xor
lea
jns
jmp
pop
and
std
out
xor
test
xchg
add
add
add
and
pop
mov
addl
inc
push
ret
vmwrite
shl
xor
add
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
into
ja
xor
mov
call
xchg
push
jmp
dec
inc
stos
das
mov
ljmp
pop
push
pusha
jmp
aas
add
sahf
out
fs
inc
mov
push
pop
popa
popa
xchg
mov
jmp
and
cld
push
pop
mov
mov
sub
mov
or
mov
mov
jge
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
adc
dec
jnp
test
sldt
add
aas
pop
movsb
aad
mov
jmp
push
jo
push
push
rdtsc
pop
pop
rdtsc
push
jae
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ss
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
andb
xchg
insl
adc
sub
mov
xor
pushl
add
call
push
push
call
and
pop
mov
addl
inc
push
ret
out
ljmp
jnp
xorl
and
addl
push
call
and
pop
mov
addl
inc
push
ret
dec
int
xchg
xor
movb
mov
call
lods
aad
xlat
testb
push
add
add
popl
add
add
sldt
add
push
push
push
cmp
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
out
popf
jne
mov
movl
push
jmp
test
xor
je
sbb
push
repnz
ljmp
push
call
and
pop
mov
addl
inc
push
ret
std
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
cmp
xor
mov
test
mov
jle
sbb
push
pusha
push
jne
pop
pusha
jge
jmp
fcomi
pop
cwtl
std
or
shlb
push
movzwl
push
push
push
call
and
pop
mov
addl
inc
push
ret
xor
les
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
std
cmp
outsb
cwtl
in
in
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
mov
push
pusha
push
jmp
jae
mov
cmc
inc
out
adc
xchg
out
hlt
jle,pt
jae
push
pop
popa
mov
cmc
push
push
push
call
and
pop
mov
addl
inc
push
ret
std
stos
xchg
pusha
xor
mov
popa
push
push
push
call
and
pop
mov
addl
inc
push
ret
xor
popf
std
add
cmp
add
add
add
and
pop
mov
addl
inc
push
ret
inc
pop
add
arpl
push
mov
mov
movzwl
lea
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
add
add
xchg
je,pn
push
push
sub
adc
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
pop
push
inc
add
icebp
cmc
jmp
dec
xchg
sub
dec
sbb
daa
push
pop
cmp
je
jmp
hlt
iret
sbb
inc
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
orb
addr16
jmp
dec
cmpsl
enter
and
add
add
add
and
pop
mov
addl
inc
push
ret
aaa
ret
cmp
lcall
mov
pusha
jne
or
mov
popa
call
adc
jmp
call
pop
sub
xor
jmp
jp
mov
dec
subb
insl
rcl
push
push
call
and
pop
mov
addl
inc
push
ret
jns
int
test
mov
mov
push
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
rdtsc
jmp
lods
sbb
out
fwait
lret
pop
pop
mov
adc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
unpcklps
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
lahf
jge
xor
add
add
mov
out
jle
jecxz
cmp
mov
incl
mov
push
push
je
xor
pop
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
push
gs
in
xor
test
add
add
pop
call
jmp
pusha
add
mov
popa
mov
mov
out
mov
in
mov
cmp
jae
and
movzbl
mov
mov
call
clc
incb
jo
addr16
add
xchg
add
adc
push
pop
mov
and
shr
mov
mul
mov
sub
mov
mov
jmp
mov
movswl
add
jbe
mov
add
mov
cmp
jae
mov
jmp
pusha
adc
popa
mov
and
je
jns
mov
mov
andl
add
mov
je
movzwl
mov
jmp
lea
xor
push
movswl
call
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
pushf
cmc
fs
imul
jo
mov
sbb
push
push
call
and
pop
mov
addl
inc
push
ret
push
cli
cmp
mov
cld
mov
mov
push
sbb
pop
mov
mov
clc
lods
xor
shr
add
sub
jne
mov
or
push
push
call
and
pop
mov
addl
inc
push
ret
add
imul
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jl
cmp
shlb
popa
mov
call
and
dec
ja
outsb
xchg
insb
sub
lea
mov
pop
mov
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
insl
or
sub
pop
xor
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
push
pushf
inc
int
pusha
mov
jmp
test
inc
inc
lock
movswl
cmpl
je
jmp
fidivs
fildll
add
add
lret
pop
inc
mov
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xor
imul
add
add
movzwl
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
jmp
dec
dec
popa
xor
cmpl
je
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
lock
mov
jge
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
scas
dec
imul
and
xor
mov
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
inc
inc
flds
popf
imul
test
push
call
and
pop
mov
addl
inc
push
ret
pop
cwtl
mov
mov
sub
or
mov
call
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
sub
jno
test
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
sbb
lea
mov
pop
mov
nop
push
jmp
xlat
shll
mov
push
add
add
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
nop
push
and
pop
push
pusha
mov
mov
popa
or
push
push
jo
jmp
push
adc
popa
pusha
lock
push
movsl
lds
pop
addl
call
push
push
call
and
pop
mov
addl
inc
push
ret
rol
and
mov
je
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
push
add
dec
data16
xchg
mov
sbb
add
push
push
call
and
pop
mov
addl
inc
push
ret
push
test
dec
jb
or
add
fadd
es
push
cmp
dec
xor
pop
mov
pusha
mov
popa
movl
pusha
jmp
and
xor
mov
or
add
add
popa
popa
mov
movswl
mov
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aas
lahf
in
cmp
cmp
fimull
push
pusha
jmp
mov
adc
ds
push
pop
push
push
rdtsc
pop
pop
popa
rdtsc
push
push
jge
rdtsc
jnp
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
stos
movsb
and
in
mov
or
call
and
pop
mov
addl
inc
push
ret
cli
cmp
pop
push
mov
rcrl
pop
push
push
jbe
push
push
rdtsc
pop
pop
pop
addl
push
push
call
and
pop
mov
addl
inc
push
ret
leave
jg
test
dec
mov
lahf
or
lea
pusha
add
mov
popa
call
mov
enter
lods
sbb
lcall
lcall
mov
arpl
mov
or
add
fdivrs
pusha
lods
and
add
push
push
call
and
pop
mov
addl
inc
push
ret
hlt
iret
sbb
xchg
push
sbb
call
and
pop
mov
addl
inc
push
ret
into
into
dec
cmp
add
repz
popa
push
push
call
and
pop
mov
addl
inc
push
ret
aam
mov
add
add
aas
movl
push
push
call
and
pop
mov
addl
inc
push
ret
scas
orb
push
add
add
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
sub
std
xor
lods
ss
lods
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
in
push
lea
mov
adc
inc
adc
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
testl
mov
mov
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
es
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
inc
arpl
mov
or
call
and
pop
mov
addl
inc
push
ret
pop
sub
out
pop
out
xchg
leave
sub
call
and
pop
mov
addl
inc
push
ret
jnp
mov
mov
mov
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
test
jmp
sar
cltd
xchg
and
push
pop
add
add
ljmp
xor
xchg
add
add
pop
pop
push
push
push
push
push
push
rdtsc
pop
pop
pop
rdtsc
jmp
dec
addr16
pop
xchg
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
sub
loopne
xlat
and
in
push
mov
pushl
or
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jno
mov
sbb
stc
jmp
cmp
mov
shlb
push
dec
or
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
or
add
add
popf
add
mov
mov
stc
stc
add
and
adc
mov
jmp
adc
scas
xchg
jno
lahf
xchg
orb
jg
movzwl
push
call
mov
sbb
stos
or
xor
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
and
into
sub
or
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
fidivl
jl
push
push
imul
add
add
icebp
jns
testl
or
call
and
pop
mov
addl
inc
push
ret
loop
and
and
xchg
adc
popa
push
pusha
jmp
lret
movsl
mov
jo
add
stos
rcll
push
jmp
push
mov
popf
les
sbb
lahf
xorl
nop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
jge
sub
pushl
sbb
call
mov
cmpl
je
or
push
push
push
jmp
outsb
jecxz
gs
adc
int3
fimuls
xor
popl
add
add
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
sahf
icebp
or
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
in
xchg
push
mov
call
add
pushl
jmp
jo
data16
arpl
hlt
fbld
xchg
jae
jg
call
push
push
call
and
pop
mov
addl
inc
push
ret
scas
sbbl
std
sbb
and
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
nop
xor
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
bound
jmp
adc
imul
adc
test
adc
add
push
push
call
and
pop
mov
addl
inc
push
ret
inc
push
mov
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
push
loopne
js
sub
stc
jmp
jmp
out
or
jb
ficomps
lea
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
mov
push
push
push
jmp
rolb
xchg
cmp
xlat
mov
bound
mov
xor
mov
add
add
rdtsc
pop
pop
pop
pop
mov
jp
mov
push
call
mov
popl
dec
sub
and
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
lahf
fwait
daa
dec
adc
call
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jae
into
loop
mov
adc
pop
add
jno
mov
nop
jmp
fdivs
imull
sbb
mov
push
push
push
pusha
jno
pusha
popa
popa
rdtsc
jmp
jns
arpl
bound
into
sar
jb
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
and
shr
or
push
mov
xor
push
push
push
call
and
pop
mov
addl
inc
push
ret
lock
add
xchg
cmp
add
add
add
and
pop
mov
addl
inc
push
ret
movsb
lock
mov
call
push
xchg
shl
mov
xlat
or
pop
call
mov
jmp
leave
add
lods
pop
cmp
add
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
or
add
or
push
mov
pop
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
push
push
push
call
and
pop
mov
addl
inc
push
ret
sahf
movsl
rol
pop
push
bound
mov
nop
jne
jo
jl
push
pusha
pusha
push
push
rdtsc
pop
pop
jmp
xchg
or
push
popa
pusha
push
push
rdtsc
pop
pop
push
pop
popa
popa
nop
xor
push
mov
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
pop
xchg
pop
sub
jmp
pop
lods
ds
lea
adc
add
call
pop
sub
movzwl
push
sbb
pop
xor
lea
mov
push
push
jbe
push
pop
pop
mov
mov
pushl
movswl
mov
mov
push
jo
sub
pop
incl
jo
pusha
mov
xor
popa
push
push
push
call
and
pop
mov
addl
inc
push
ret
fisttpl
xchg
add
add
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
das
pop
lock
jns
mov
call
jmp
jmp
push
xchg
rolb
cmp
cmp
sub
xchg
cmp
jno
sub
jae
mov
mov
movzbl
add
mov
push
jmp
xchg
add
mov
cltd
mov
in
mov
sub
shr
mul
mov
mov
sub
add
and
mov
or
jmp
or
mov
sub
add
push
or
pop
add
mov
cmp
jae
mov
jmp
jp
push
mov
pop
mov
mov
mov
and
je
jmp
fcomip
pop
or
adc
pop
cmp
movsl
movsl
sbb
pop
decb
pop
mov
and
jmp
lea
mov
jle
sbb
push
jae
or
call
jmp
fiadds
and
lret
add
xor
jmp
xor
mov
xor
movswl
and
mov
cld
push
push
call
and
pop
mov
addl
inc
push
ret
sub
add
add
add
add
pop
mov
lods
xor
shr
add
sub
jne
mov
mov
or
push
push
call
and
pop
mov
addl
inc
push
ret
daa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
jmp
lea
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
repnz
movswl
push
mov
mov
add
mov
mov
shr
add
mov
pop
stc
movswl
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
aas
sub
fdivrs
push
push
call
and
pop
mov
addl
inc
push
ret
std
mov
add
popf
sub
adc
add
aam
ja
movzwl
sub
sbb
push
cmp
pop
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
add
adc
xorl
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
dec
xor
shlb
cmpsl
fldl
add
pop
adc
or
and
xor
push
add
push
call
and
pop
mov
addl
inc
push
ret
lret
dec
xchg
lcall
jle
mov
cmpl
jbe
movswl
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
stos
dec
push
adc
pop
mov
sub
push
call
mov
out
xor
bound
adc
bound
loope
push
push
call
and
pop
mov
addl
inc
push
ret
mov
gs
scas
xor
insl
mov
or
add
mov
sub
or
je
add
mov
sub
xor
mov
push
jmp
clc
sete
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
shr
call
incl
pop
add
or
add
int3
cld
icebp
jecxz
push
fwait
push
jmp
push
loope
iret
call
and
push
push
push
jmp
stos
dec
cmp
das
pop
dec
sbbb
mov
push
lret
ja
xor
rdtsc
pop
pop
pop
pop
pop
mov
jmp
jge
xor
xchg
mov
jno
jmp
mov
adc
sbb
add
add
add
and
pop
mov
addl
inc
push
ret
pop
jo
mov
test
add
xchg
push
pop
push
jnp
inc
or
inc
daa
stos
call
jl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
es
sbb
popf
and
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
enter
or
sub
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
andl
pop
jl
mov
jne
jmp
ljmp
cwtl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adcb
pop
das
and
sbb
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
cli
cmp
pop
push
mov
and
mov
add
xchg
xor
orl
or
andnps
xor
and
jb
scas
jne
xor
push
push
call
and
pop
mov
addl
inc
push
ret
and
lret
sub
add
popl
add
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
insl
dec
repnz
loop
inc
lret
add
push
pusha
jbe
jle
pusha
pusha
popa
push
pop
popa
popa
addl
push
push
call
and
pop
mov
addl
inc
push
ret
rolb
jne
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
hlt
inc
sub
fildll
jmp
cli
fs
inc
icebp
test
xlat
push
xor
out
cmp
push
sbb
call
and
pop
mov
addl
inc
push
ret
cmp
popa
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
fisubrs
movl
push
push
call
and
pop
mov
addl
inc
push
ret
fbstp
xor
aad
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
scas
sahf
stos
jg
popf
sbb
adc
inc
adc
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
push
mov
ds
mov
pop
or
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
mov
pop
cmc
cmpl
jne
movswl
cmpl
je
cmc
xor
pushl
sub
call
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
xor
in
aaa
bound
pop
movl
mov
push
push
push
jg
jmp
xor
jecxz
xor
jbe
rdtsc
jp
push
push
rdtsc
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
push
jmp
add
call
ja
pop
test
mov
aam
mov
call
or
mov
push
mov
pop
mov
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
clc
popa
pop
subl
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sub
pop
add
call
idivb
inc
loopne
rcll
cmp
nop
mov
scas
pop
cld
jmp
adc
add
mov
push
push
push
dec
pop
shll
hlt
sahf
pop
jb
mov
xor
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
cmp
mov
pusha
cld
pusha
popa
popa
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
lret
fs
adc
pop
push
call
xchg
dec
cmp
cmc
pop
pushl
call
lret
add
movsb
repz
sbb
pop
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
inc
insb
sbb
xchg
push
push
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
rdtsc
push
pusha
popa
pop
pop
pop
push
jns
push
push
push
pop
rdtsc
push
pop
pop
pop
xchg
mov
pushl
push
sub
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
call
lcall
pop
mov
jmp
sbb
pop
leave
adc
aam
add
cmpl
je
jnp
mov
xchg
jmp
mov
loopne
test
pop
jnp
dec
push
pusha
jmp
popa
xor
lea
sar
jg
bound
movsb
loop
fistl
addl
popl
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
lods
push
testl
pop
push
push
call
and
pop
mov
addl
inc
push
ret
rcrl
les
mov
call
jmp
inc
mov
and
lea
push
push
call
and
pop
mov
addl
inc
push
ret
in
in
mov
xor
call
jmp
repnz
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
out
jnp
subb
dec
mov
mov
mov
movb
or
movl
or
movzwl
jmp
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
out
aas
xor
mov
lea
mov
push
jmp
push
cmc
sub
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
clc
jo
movswl
push
push
push
call
and
pop
mov
addl
inc
push
ret
dec
aam
mov
mov
lea
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
add
mov
add
push
push
pusha
push
push
rdtsc
pop
pop
push
pop
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jne
rcrb
movsl
push
pusha
mov
mov
popa
mov
push
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
test
fld1
lea
pusha
mov
mov
popa
call
cld
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
test
xor
mov
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
jo
or
add
imul
enter
push
push
call
and
pop
mov
addl
inc
push
ret
lds
jae
add
nop
push
push
jmp
jne
bound
pop
push
xor
adc
add
add
add
inc
popa
popf
cmc
fldt
push
push
je
jmp
mov
mov
movsl
jae
cmp
pop
nop
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
scas
sti
call
xchg
shlb
or
mov
jnp
cmpsl
mov
popf
jne
mov
pop
jmp
call
pop
sub
pusha
jmp
push
jmp
xor
leave
xor
call
cmp
or
mov
pop
popa
pusha
mov
mov
popa
lea
mov
sub
push
push
push
push
pusha
popa
pop
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
pop
pop
mov
jmp
icebp
ffreep
mov
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
ja
pop
lea
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
je
add
rorl
sbb
call
and
pop
mov
addl
inc
push
ret
pop
mov
in
push
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
jo
xchg
add
add
lea
xchg
sub
mov
jmp
jmp
out
push
inc
imul
mov
in
mov
cmp
jae
sbb
mov
movzbl
and
mov
mov
xor
shr
xor
mul
mov
sub
mov
mov
add
jge
mov
jmp
mov
mov
pusha
xor
mov
popa
add
jne
sub
mov
add
mov
mov
cmp
jae
push
mov
pop
jmp
jmp
sbb
lcall
mov
mov
mov
add
mov
and
je
and
andl
pusha
add
mov
popa
mov
and
jmp
jne
daa
mov
cld
pop
cld
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
sub
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
cmp
lea
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
and
cmp
xor
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lods
leave
arpl
xchg
clc
pusha
mov
mov
popa
cld
je
jmp
outsl
sub
jle
testl
push
lock
sub
push
push
call
and
pop
mov
addl
inc
push
ret
pop
arpl
add
push
xor
cli
or
sub
stc
lods
xor
shr
add
sub
jne
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
in
popa
js
mov
or
push
push
call
and
pop
mov
addl
inc
push
ret
adc
scas
enter
inc
mov
mov
pusha
movzwl
xor
popa
add
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
aam
mov
and
push
call
and
pop
mov
addl
inc
push
ret
jne
pop
adc
inc
ret
push
add
pop
movswl
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
ret
mov
pop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jo
fmull
pop
add
add
test
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
into
ja
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
adc
sbb
pop
cmpl
je
mov
cmpl
je
jmp
push
jmp
pop
xchg
test
sbb
xchg
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
imul
and
mov
addl
idivl
lods
dec
and
push
adc
pop
or
je
mov
mov
call
cld
dec
insl
adc
jae
pop
sbb
pop
xor
mov
nop
jmp
xchg
or
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
jmp
jmp
scas
or
add
jno
sub
xor
test
add
add
xchg
add
add
nop
push
mov
push
jge
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
addl
mov
call
mov
mov
sub
jmp
add
mov
mov
movl
je
pusha
mov
sbb
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
outsb
adc
add
jmp
xlat
push
xor
jb
insb
test
inc
mov
jmp
in
xor
imul
add
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xorl
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
iret
push
jmp
push
xchg
out
and
pop
jge
pop
jno
test
loop
or
push
push
call
and
pop
mov
addl
inc
push
ret
jno
lahf
loope
mov
xor
pushl
call
incl
pop
add
mov
add
add
adc
add
std
test
push
call
mov
test
pop
fiaddl
sldt
add
add
in
dec
adc
pusha
ja
push
pop
popa
popa
mov
push
push
push
push
jmp
in
xor
imul
rdtsc
pop
pop
pop
pop
rdtsc
push
jmp
dec
add
mov
imul
pop
pop
mov
push
push
push
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
mov
push
push
pusha
push
push
rdtsc
pop
pop
push
pop
popa
rdtsc
jae
push
pop
pop
pop
pop
adc
lea
call
xor
or
repz
sbb
pusha
jbe
pusha
popa
push
push
pusha
popa
rdtsc
push
push
rdtsc
pop
pop
pop
pop
popa
mov
pusha
pusha
mov
popa
sub
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
adc
outsb
std
mov
xchg
shr
or
jb
adc
fadds
lea
mov
pop
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
loopne
push
or
xorl
add
push
push
call
and
pop
mov
addl
inc
push
ret
ret
stos
pop
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
imul
add
push
call
and
pop
mov
addl
inc
push
ret
shrl
xor
adc
popa
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jg
sbb
mov
cmpl
jne
jmp
out
fbstp
rclb
notl
pop
test
int3
pusha
mov
lea
add
test
add
add
pop
pushl
cld
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
jmp
out
and
fimull
pop
push
push
call
and
pop
mov
addl
inc
push
ret
cs
inc
or
or
add
add
sub
push
jnp
pusha
jno
jne
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
inc
leave
jmp
lcall
pop
push
push
call
and
pop
mov
addl
inc
push
ret
sti
call
or
call
push
push
call
and
pop
mov
addl
inc
push
ret
in
sldt
add
inc
loope
aad
inc
je
scas
adc
lea
mov
mov
mov
jmp
in
fmul
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
jb
je
out
sub
add
cmc
mov
add
mov
lea
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
outsb
fwait
test
add
push
call
and
pop
mov
addl
inc
push
ret
std
scas
inc
sub
pushl
sub
call
mov
xchg
jmp
stos
and
int3
push
pusha
push
pusha
popa
pop
jmp
pop
cmpsb
mov
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
add
and
dec
stc
pushl
mov
jmp
inc
mov
repnz
pusha
adc
call
ret
in
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xchg
fldl
cmpl
je
add
push
pusha
pusha
push
pop
push
pop
popa
jmp
les
inc
fisttpl
mov
cmp
in
fbld
xor
xor
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
movsl
xor
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
mov
js
add
mov
or
call
and
pop
mov
addl
inc
push
ret
cli
cwtl
adc
mov
xor
mov
cmpl
je
mov
mov
movb
push
push
call
and
pop
mov
addl
inc
push
ret
jle
jecxz
rorb
movl
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
stos
outsb
lret
jb
mov
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
push
pop
shlb
push
and
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
sbb
aad
fists
dec
rolb
test
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
adc
push
push
push
pusha
push
push
rdtsc
pop
pop
push
pop
popa
rdtsc
push
jmp
ja
ja
jns
sub
xchg
sbb
push
or
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
rcl
xchg
mov
xlat
pop
and
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
in
arpl
out
jb
add
push
call
and
pop
mov
addl
inc
push
ret
shrb
mov
add
add
sub
mov
pop
lea
pusha
sub
jmp
std
mov
mov
fisubrl
mov
push
adc
sbb
popa
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
ret
insl
std
dec
mov
nop
pusha
push
jbe
pop
push
push
jmp
cwtl
repz
push
cmp
jp
rdtsc
push
pop
pop
pop
popa
push
jmp
mov
or
or
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmp
jl
add
push
call
push
push
call
and
pop
mov
addl
inc
push
ret
sti
xchg
or
mov
lock
push
push
call
and
pop
mov
addl
inc
push
ret
jp,pt
jb
mov
rorl
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
jo
xor
mov
mov
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
and
mov
add
loop
and
adc
add
mov
push
mov
fsubs
std
inc
inc
arpl
rdtsc
pop
pop
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
imul
mov
call
sub
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
dec
gs
inc
imul
pop
push
push
call
and
pop
mov
addl
inc
push
ret
cs
jle
lods
xor
add
call
stc
push
mov
lcall
lea
push
push
call
and
pop
mov
addl
inc
push
ret
stos
sub
push
push
jmp
adc
sbb
outsb
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
mov
mov
adc
add
add
mov
mov
pusha
call
rcll
out
aas
cmpsl
mov
mov
pop
mov
popa
incl
mov
push
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
ds
lret
in
outsb
or
mov
call
jmp
mov
mov
mov
out
mov
in
mov
cmp
jae
ja
jo
or
mov
movzbl
jbe
add
mov
mov
mov
mov
pusha
mov
mov
popa
shr
mul
or
sub
ja
jmp
insb
repnz
and
in
jl
test
dec
jno
rorb
add
add
add
mov
and
add
or
add
push
mov
pop
cmp
jae
mov
jmp
mov
mov
jmp
pop
out
out
aas
xor
loope
je
mov
andl
sub
mov
mov
jmp
lea
or
mov
push
jae
clc
xor
call
push
push
call
and
pop
mov
addl
inc
push
ret
into
xchg
loopne
adc
add
adc
and
dec
mov
lahf
mov
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
daa
xorl
mov
jmp
mov
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
rcl
lret
sub
cld
push
push
call
and
pop
mov
addl
inc
push
ret
rcll
sti
mov
adc
fs
jle
jmp
and
inc
pop
and
cmpsb
cmp
rorb
mov
push
push
call
and
pop
mov
addl
inc
push
ret
stc
fwait
jle
pusha
jmp
xchg
add
xchg
pusha
in
jno
popa
lods
xor
shr
add
sub
jne
xor
jmp
pusha
out
cs
jne
adcl
lods
std
js
push
or
and
mov
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aas
mov
iret
pop
mov
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
in
jb
out
and
sbb
rcrl
jl
mov
add
test
add
add
add
and
pop
mov
addl
inc
push
ret
int3
mov
fisttpl
push
pusha
mov
mov
popa
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
out
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
xor
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
pop
mov
cmpl
je
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
sub
or
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
push
adc
aam
or
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jb
mov
sti
or
je
mov
jmp
cltd
xchg
test
jle
dec
fs
mov
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jge
add
xor
push
push
call
and
pop
mov
addl
inc
push
ret
jge
movsl
movl
add
mov
push
push
jmp
mov
clc
scas
dec
inc
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
mov
push
mov
clc
push
jb
jmp
nop
mov
hlt
push
scas
arpl
jmp
xorl
call
ja
jmp
jl
xchg
rclb
xor
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
das
mov
mov
xor
mov
jl
movswl
movl
push
push
call
and
pop
mov
addl
inc
push
ret
insb
adc
add
stc
mov
mov
or
call
and
pop
mov
addl
inc
push
ret
fs
movzwl
pop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
push
pminub
mov
jnp
jle
sub
mov
cld
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aas
imul
in
sub
mov
xchg
pusha
pusha
push
pop
push
pop
popa
push
jg
pop
popa
push
pusha
jno
jg
pusha
jp
push
push
rdtsc
pop
pop
popa
popa
xchg
stc
mov
pushl
movzwl
call
incl
pop
add
push
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
jmp
push
mov
call
push
add
add
rol
je
jmp
into
jno
cli
shll
sbb
add
push
jmp
lahf
xor
adc
lods
xchg
lahf
loop
cld
in
orl
add
and
hlt
ja
pop
mov
jno
pusha
pusha
popa
pusha
popa
popa
mov
jb
pusha
push
push
rdtsc
pop
pop
push
pop
popa
pop
stc
lea
pusha
mov
mov
popa
nop
jmp
les
rorl
adcb
add
add
fwait
cmpsl
pop
cmp
jns
je
mov
mov
mov
call
xor
popa
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
lods
fldl
pop
pusha
mov
cmpl
je
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
pop
test
xchg
stc
or
pop
sub
popa
mov
or
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
pusha
mov
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
push
stc
in
pop
sub
cmpl
jne
mov
mov
cmpl
je
sub
pusha
sub
cmc
popa
pushl
jns
mov
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
stos
dec
xchg
stos
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
pusha
popf
cld
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
push
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
jae
pop
pop
rdtsc
jmp
jle
jl
dec
stc
jno
sbbl
fstpl
mov
movswl
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
call
add
sbb
jge
idivl
cmp
add
xchg
fnstenv
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
jge
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
aas
adc
jl
mov
add
mov
mov
mov
mov
lea
sub
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
jns
icebp
or
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
sub
push
add
add
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
out
mov
leave
push
mov
ja
call
subl
iret
cld
ljmp
jnp
pop
leave
mov
pop
xchg
jmp
cmp
dec
mov
aas
out
cmp
push
push
push
pop
pop
rdtsc
jmp
enter
dec
mov
movzwl
pushl
call
imul
jecxz
sbb
push
add
add
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
or
adc
add
pop
add
test
add
add
push
pop
push
pop
popa
push
pusha
popa
pop
popa
push
pusha
jmp
ficoms
push
pusha
popa
pop
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
pop
jmp
inc
cmp
lret
push
filds
in
call
push
push
call
and
pop
mov
addl
inc
push
ret
jge
movzwl
pushl
js
call
jmp
out
movsl
mov
mov
add
test
add
add
add
and
pop
mov
addl
inc
push
ret
es
test
mov
push
push
call
and
pop
mov
addl
inc
push
ret
testb
out
fiaddl
jge
mov
mov
movb
push
push
call
and
pop
mov
addl
inc
push
ret
ret
push
adc
test
movl
push
push
call
and
pop
mov
addl
inc
push
ret
iret
ret
mulb
sbb
decl
xchg
add
add
lea
add
add
mov
popf
test
mov
lea
mov
mov
nop
push
push
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
pop
pop
push
push
push
jle
jnp
rdtsc
push
pusha
popa
pop
pop
pop
nop
jmp
add
mov
pop
int3
push
cld
repz
adc
imul
xor
dec
push
push
push
call
and
pop
mov
addl
inc
push
ret
sub
out
inc
push
jmp
fmull
xor
push
gs
xor
popa
fs
test
add
add
add
and
pop
mov
addl
inc
push
ret
pop
jb
imul
data16
jl
mov
rolb
and
rorl
pop
push
pusha
push
pusha
popa
pop
pusha
jo
jo
popa
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sti
inc
pop
mov
repnz
icebp
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
dec
jmp
dec
inc
ja
mov
push
pusha
jmp
movsl
push
lahf
mov
popa
call
cmc
lea
jne
jp
cmc
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lcall
out
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
test
mov
and
pop
cmp
je
movzwl
push
push
push
call
and
pop
mov
addl
inc
push
ret
fmull
addb
add
movzwl
ja
or
nop
jbe
pusha
jmp
pop
mov
imul
inc
pusha
popa
popa
push
push
push
pusha
je
push
pop
popa
rdtsc
push
pusha
popa
pop
pop
pop
nop
xor
call
mov
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
lock
gs
mov
sbb
lret
int3
out
test
add
add
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
popa
in
enter
jmp
aaa
stc
daa
fs
push
mov
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
cmp
jp
mov
pushl
push
movswl
pop
mov
incl
jno
pusha
jo
mov
popa
push
push
push
call
and
pop
mov
addl
inc
push
ret
js
inc
movlps
test
add
add
pop
pushl
call
out
xchg
scas
mov
test
mov
mov
popa
pop
call
jmp
mov
mov
mov
movzwl
out
jne
mov
in
cmp
jae
pusha
mov
mov
popa
movzbl
cld
mov
jmp
mov
jno
xor
sub
sbb
imull
shr
jnp
jmp
nop
int
pop
mov
or
mul
sbb
sub
clc
mov
mov
jmp
mov
mov
jmp
daa
sub
push
aaa
xor
add
jmp
stos
xchg
jle
pop
enter
cld
xchg
stc
push
fldcw
rolb
clc
popa
cmp
jae
adc
jmp
mov
mov
mov
and
je
sub
andl
xor
mov
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
pop
pop
je
mov
mov
push
mov
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
stos
jbe
faddl
cmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
int
mov
push
push
call
and
pop
mov
addl
inc
push
ret
andl
push
and
mov
cld
push
push
call
and
pop
mov
addl
inc
push
ret
push
jne
and
xchg
xchg
sub
add
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
cmpsl
push
mov
pop
xor
mov
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
loope
xchg
inc
int3
cmp
jecxz
mov
add
add
pop
push
push
call
and
pop
mov
addl
inc
push
ret
push
mov
mov
movsl
or
je
mov
mov
mov
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
sub
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fsubs
lret
ja
mov
mov
jmp
aaa
loopne
add
fwait
jb
stos
dec
xchg
stos
push
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
and
pop
add
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
inc
shll
outsb
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
adc
repz
fstl
mov
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
fmull
xor
movsl
add
add
push
call
and
pop
mov
addl
inc
push
ret
inc
jmp
mov
rcrb
sbb
pop
xchg
xor
pop
pusha
mov
movzwl
popa
mov
mov
and
add
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
lods
sub
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
sbb
mov
mov
xor
mov
nop
push
push
push
push
pop
pop
rdtsc
jl
jmp
pop
lods
add
idivl
push
push
pusha
popa
pop
rdtsc
jne
push
pop
pop
pop
nop
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
divl
inc
test
pusha
pusha
popa
push
push
rdtsc
pop
pop
popa
pop
addl
mov
call
jge
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
outsb
mov
add
add
mov
sbb
jo
lea
mov
movl
mov
jge
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
in
mov
pop
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
push
cmpsb
ss
mov
cmc
mov
mov
mov
mov
xchg
pusha
push
push
pop
pop
pusha
push
push
rdtsc
pop
pop
push
pop
popa
popa
push
jge
push
push
jmp
popa
mov
icebp
sub
pop
cmp
leave
jge
hlt
rdtsc
jmp
movsl
mov
or
bound
xchg
cmc
pushl
sbb
call
incl
pop
add
jmp
pop
popf
ret
sub
bound
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
pop
pop
push
jmp
gs
idiv
nop
ljmp
push
sub
in
mov
jmp
jmp
hlt
sti
and
sbb
bound
mov
push
push
push
push
pop
rdtsc
pusha
popa
pop
pop
pop
mov
push
push
pusha
pusha
popa
push
pop
popa
rdtsc
pusha
push
push
rdtsc
pop
pop
jmp
jno
push
outsl
shrb
pop
pop
push
sub
pop
lea
sub
push
jmp
pop
mov
pop
xor
out
fadds
popa
ljmp
call
and
pop
mov
addl
inc
push
ret
shr
or
pop
sub
sub
sub
call
push
xor
pop
jg
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
lock
jp
in
jb
movl
mov
cmpl
je
or
jmp
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
into
add
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
faddl
test
pop
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
push
test
mov
stc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
frstor
sldt
add
lret
mov
adc
stc
fnstcw
lea
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
mov
mov
sub
insb
or
call
and
pop
mov
addl
inc
push
ret
push
mov
dec
ja
and
add
movl
push
push
call
and
pop
mov
addl
inc
push
ret
movsb
aas
sahf
mov
push
je
jle
je
mov
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
mov
add
call
jmp
ss
mov
or
jmp
daa
and
dec
push
mov
inc
xchg
jno
test
mov
mov
mov
mov
jmp
iret
fsubrs
mov
jmp
dec
sbb
ret
add
add
add
and
pop
mov
addl
inc
push
ret
jg
adc
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
divl
push
ljmp
add
push
push
call
and
pop
mov
addl
inc
push
ret
fdivr
xor
push
push
push
call
and
pop
mov
addl
inc
push
ret
aad
test
adc
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
jle
call
xchg
mov
into
push
pop
pop
xchg
jmp
hlt
jbe
mov
adc
fildl
add
add
icebp
pop
cmp
mov
xchg
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
dec
add
adcb
pop
add
test
add
add
mov
add
add
or
add
and
cmc
or
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
mov
pushl
push
pop
call
clc
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
shll
mov
sbb
fbld
mov
add
test
add
jmp
cmp
ret
xchg
out
jmp
mov
loop
inc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
movb
xor
movl
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
aaa
sbb
arpl
and
pop
mov
jmp
mov
call
sbb
dec
sub
lahf
lret
adc
clc
push
xchg
push
stos
mov
pop
jmp
sbb
add
das
or
add
push
xor
fidivl
xchg
or
hlt
test
out
xchg
cmpl
fisubrs
jae
test
inc
xchg
and
clc
inc
mov
decl
lea
pop
in
sub
inc
pop
scas
lret
inc
inc
push
xchg
outsl
in
xchg
mov
xchg
xchg
push
sub
push
pop
mov
cmp
sub
jo
test
in
in
loopne
jl
lea
enter
xchg
inc
adc
fcomps
push
test
push
or
push
push
xlat
dec
mov
sub
loopne
repnz
lea
dec
adc
sbb
pop
push
sub
lds
sub
mov
lret
xchg
xchg
sti
cmp
jns
mov
pop
shll
xchg
xchg
insb
mov
or
xchg
xchg
mov
mov
in
xchg
lahf
sarl
popa
out
adc
adc
popf
xchg
scas
jl
xchg
xchg
arpl
in
xchg
cmp
jbe
loop
dec
inc
dec
or
cmp
sub
xchg
aaa
mov
xchg
xchg
inc
repz
jb
mov
add
cs
sbb
aas
xor
sbb
jnp
xchg
xchg
dec
in
and
mov
xchg
sahf
pop
test
sarl
icebp
stc
push
mov
xchg
xchg
fcmovne
jne
mov
jbe
loop
mov
clc
cmpsb
inc
pop
cld
pop
lahf
loopne
hlt
idivb
dec
daa
sub
pop
gs
add
mov
cmp
or
data16
push
push
add
add
pusha
or
and
mov
loopne
insb
mov
cmp
addr16
xchg
xchg
mov
cmp
movsb
data16
inc
int3
movsb
test
test
jle
cmpsb
negl
ja
daa
jne
rcll
ret
ret
lds
xchg
xor
sahf
xchg
mov
mov
es
xchg
add
arpl
mov
ret
xchg
xchg
inc
repz
rol
xchg
xchg
repnz
inc
cmpsl
insb
mov
lret
ret
cmp
fs
mov
jmp
lods
pop
out
lcall
push
repz
fwait
lea
cmp
and
into
stos
aam
out
sub
push
pop
cmpsb
lods
outsb
in
dec
or
adc
jecxz
int3
imull
test
ret
ret
cld
pop
adc
into
cwtl
jnp
pusha
add
mov
movl
repnz
xchg
xchg
shlb
lcall
fcmove
fldenv
sbb
lds
fwait
mov
iret
lock
stos
cmc
daa
xor
rcl
shll
imul
fidivs
rclb
icebp
jnp
mov
std
test
xchg
leave
imul
or
mov
jb
jge
les
icebp
add
add
sbb
xchg
xchg
test
insl
dec
xchg
pushf
sahf
ljmp
sbb
into
mov
inc
cltd
outsb
push
or
and
fcmovbe
rep
dec
xlat
out
or
mov
fsubrs
movsb
insw
test
mov
sbb
fcmovnbe
ficoms
cld
clc
add
loopne
fistl
data16
arpl
lahf
popf
push
push
adc
cmp
loope
lea
mov
lds
cli
mov
shl
lds
in
adc
cmp
add
int
xchg
xchg
stc
cmp
mov
jmp
test
int3
lds
mov
or
push
pop
mov
in
scas
pop
aaa
cmp
mov
ret
xchg
xchg
xor
inc
xchg
sub
jl
outsl
in
sbb
jge
lret
int3
add
arpl
sbb
cs
dec
pop
cli
dec
daa
sub
loope
sub
xchg
xchg
out
loopne
outsb
and
jle
test
outsb
aam
mov
out
xor
mov
add
in
ljmp
or
jne
mov
jbe
push
adc
jg
outsl
pop
lods
out
or
jne
and
jno
fisttpll
out
cmp
into
int3
fdivrs
push
outsb
mov
cmp
inc
xchg
ret
sub
xchg
scas
inc
dec
pop
cmpb
mov
add
dec
out
inc
lods
adc
cwtl
cmp
fs
xchg
xor
jne
jae
cwtl
push
jnp
movsb
lret
dec
sub
mov
jns
xchg
xchg
mov
imul
mov
cmp
mov
cld
adc
setp
test
repnz
jp
xchg
call
jb
mov
pop
lcall
inc
dec
pop
ss
in
jbe
or
out
inc
int
inc
in
lcall
jns
adc
sahf
xchg
mov
xor
cmp
add
pop
lcall
pop
aaa
sbb
pop
lcall
test
or
loop
dec
les
xor
pandn
pop
lcall
pop
xor
lcall
stos
inc
dec
push
jb
mov
pop
lcall
lods
popa
data16
pop
lcall
pop
or
xor
sahf
je
mov
fcom
fdivrl
outsb
pushw
or
dec
repnz
addl
mov
mov
imul
ljmpw
xor
pop
lcall
sub
push
test
xor
cltd
xchg
xor
mov
push
mov
add
mov
nop
popf
sti
lcall
inc
xchg
and
adc
out
aas
pop
push
lcall
enter
push
cld
testl
inc
fisttpll
push
xchg
pusha
cmpsb
adc
pop
pop
lcall
or
adc
mov
xchg
lcall
xchg
mov
sub
add
push
ror
lret
mov
daa
jne
rcll
ret
and
pop
sti
add
sbb
mov
or
hlt
cmp
adc
pop
scas
pushf
hlt
add
repnz
ss
add
add
ret
xchg
xchg
sbb
xlat
inc
insb
mov
and
sbb
leave
jae
dec
mov
in
pop
scas
jg
ret
xchg
adc
or
mov
lock
mov
xchg
cmp
cmp
and
sub
ja
jg
mov
cmc
pop
xchg
push
dec
inc
popa
inc
aad
xorl
rolb
icebp
adc
mov
cmp
imull
push
cmp
es
call
mov
outsb
push
stos
dec
inc
dec
mov
call
cmove
inc
xchg
and
loop
add
add
mov
sbb
xchg
in
lock
jns
xchg
out
or
jb
jns
xchg
insl
xchg
popf
lahf
cwtl
notb
lcall
push
lcall
push
fcoml
faddp
push
lcall
lret
testl
jl
in
outsl
push
sahf
fsubrs
inc
dec
pop
enter
xor
data16
cltd
shrb
sti
loopne
pop
lcall
popf
mov
adc
mov
addl
enter
mov
stos
ror
dec
xchg
test
arpl
push
push
rorl
xor
jno
adc
jl
lcall
test
push
pop
cmpb
xchg
and
out
jnp
lcall
xchg
mov
adc
adc
jg
xchg
push
xorb
insl
cli
jno
mov
xchg
pop
cwtl
and
pop
push
hlt
decb
dec
mov
xlat
and
movsb
mov
arpl
in
mov
rorl
cli
mov
pop
add
jle
lcall
bnd
sbb
setp
lcall
ret
jmp
int3
mov
mov
push
stc
faddp
xchg
xchg
out
dec
xchg
ret
xchg
xchg
xor
adc
arpl
cmpxchg
dec
push
pushf
or
out
insb
fistl
sub
inc
testb
push
lret
ret
adc
lret
dec
fcmovb
filds
mov
and
push
imul
in
popa
and
orb
lcall
adc
ror
push
dec
in
xchg
cwtl
stos
jnp
popa
and
jl
rolb
push
popa
and
fwait
pop
insl
pop
pushf
pop
scas
jo
pop
mov
cs
sbb
les
mov
cmp
jecxz
xor
test
loop
leave
xchg
jge
sbb
aaa
jb
xchg
notb
or
dec
mov
xor
insb
add
adc
or
sqrtps
xor
lds
cmp
mov
sbb
xor
and
jecxz
xchg
jb
fcompl
mov
mov
xchg
jb
sub
pop
sbb
test
adc
sbb
out
aaa
imul
ljmp
sbb
cs
stc
repz
jp
ret
xchg
xchg
gs
fldcw
rorl
cld
or
pop
xchg
cltd
jmp
sti
icebp
aas
popa
aaa
aaa
inc
xchg
lea
and
sub
jne
jge
adc
add
mov
push
mov
add
sub
xchg
pop
mov
push
mov
add
sub
xchg
pop
mov
push
mov
add
push
mov
add
sub
mov
popl
pushl
pop
add
pushl
pop
add
jmp
mov
mov
mov
add
jmp
dec
sub
sub
roll
adc
inc
and
mov
jp
add
shll
dec
add
stc
sahf
push
jbe
ds
jg
push
and
pop
mov
pop
lea
nop
push
jp
jmp
xchg
aam
loope
mov
push
push
jnp
rdtsc
push
push
rdtsc
pop
pop
pop
pop
push
push
jb
rdtsc
pusha
popa
pop
pop
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
in
cmc
stos
inc
mov
call
in
mov
lret
or
xchg
add
pop
pop
push
sub
push
push
push
call
and
pop
mov
addl
inc
push
ret
rorl
pop
push
push
call
and
pop
mov
addl
inc
push
ret
dec
xor
add
add
add
and
pop
mov
addl
inc
push
ret
inc
and
dec
pop
push
loopne
enter
pusha
push
push
rdtsc
pop
pop
jmp
sub
fdivl
mov
addb
add
push
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jl
scas
pop
lods
adc
mov
mov
popa
push
mov
push
jmp
jnp
fcmovnb
inc
jecxz
imul
cmp
add
add
add
and
pop
mov
addl
inc
push
ret
push
jnp
scas
mov
xlat
mov
xor
call
lea
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
addb
push
call
and
pop
mov
addl
inc
push
ret
hlt
xchg
mov
pop
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
cltd
sub
add
jns
ret
dec
sub
pop
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
jae
mov
push
push
call
cmp
mov
xor
call
sldt
add
or
add
sahf
add
dec
cmp
jb
jmp
out
sbb
addr16
mov
xchg
nop
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
and
mov
xor
call
push
push
call
and
pop
mov
addl
inc
push
ret
scas
mov
mov
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
popa
rclb
or
pop
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
and
inc
into
push
pop
mov
nop
jmp
aad
xlat
mulb
adc
imul
stc
or
adc
pusha
push
push
jmp
mov
fisttpll
xor
addb
add
pop
pop
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
popa
nop
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
inc
lods
push
pop
mov
jmp
loope
aaa
sbb
jae
shrb
mov
mov
jmp
test
daa
fcoms
cltd
and
cmp
test
mov
push
movswl
push
push
push
call
and
pop
mov
addl
inc
push
ret
jg
ljmp
add
pop
pushl
mov
call
jmp
mov
mov
jns
jmp
inc
arpl
scas
cmp
pusha
mov
mov
popa
out
jp
sub
in
jmp
jae
jmp
cmp
shrb
fdivrp
mov
loop
popa
jae
push
call
inc
push
lods
or
lahf
jne
jge
pop
pop
movzbl
jmp
push
xchg
out
sub
and
mov
mov
mov
mov
jle
sbb
shr
movzwl
js
mov
mul
sub
sub
mov
mov
mov
jmp
mov
mov
mov
add
mov
add
mov
cmp
jae
mov
jmp
mov
call
push
sbb
sub
xlat
shlb
sar
call
add
mov
pop
mov
mov
and
je
mov
andl
mov
mov
jmp
lea
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
je
push
fwait
mov
mov
call
jnp
mov
mov
sbb
and
mov
cld
jp
or
sub
pusha
push
mov
pop
mov
popa
mov
sub
lods
xor
shr
add
sub
jne
push
mov
pop
mov
or
jmp
push
xor
sbb
xchg
lea
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jbe
inc
jge
roll
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
in
adc
sbb
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
lock
adc
cmpl
je
mov
jmp
dec
sahf
lahf
jne
out
dec
fwait
mov
add
add
mov
lea
sbb
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
jge
inc
aas
or
cmpl
je
and
cmpl
je
mov
cmpl
jbe
sub
sub
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
jo
sahf
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
aam
jmp
push
add
add
pop
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
pop
or
je
call
push
movsl
pop
push
ret
fildll
enter
push
jae
pop
sbb
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fwait
or
sub
xor
mov
nop
jmp
mov
fstl
in
dec
daa
js
jmp
loopne
jae
daa
jmp
dec
nop
jae
push
sub
push
jmp
lahf
lcall
in
lret
and
jg
dec
fucomip
xorl
jle
pusha
or
mov
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
sub
jns
pop
xchg
subb
js
lea
ja
mov
jmp
adc
mov
jb
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
rolb
sub
add
mov
sub
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
std
out
or
test
adc
pop
cld
mov
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
and
add
xchg
push
push
push
push
push
rdtsc
pop
pop
rdtsc
jnp
pop
pop
pop
push
pusha
je
push
push
rdtsc
pop
pop
push
push
push
pop
rdtsc
jnp
pop
pop
popa
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
fs
mov
ljmp
pushl
call
jo
and
in
add
jnp
or
add
cmp
pushf
out
sbb
xor
jmp
jbe
add
add
add
incl
pop
add
adc
add
out
jmp
and
loopne
pushf
adc
jns
pusha
popa
js
push
push
rdtsc
pop
pop
popa
mov
push
jmp
or
mov
cmp
dec
push
icebp
push
test
mov
orl
add
push
push
ja
rdtsc
pusha
popa
pop
pop
mov
js
jmp
and
jno
dec
mov
pop
mov
lea
jmp
cmp
dec
hlt
add
jnp
inc
ss
add
add
push
push
pop
pop
push
push
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
call
pop
ljmp
jne
mov
inc
testb
pop
call
jg
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
aas
mov
jmp
call
fwait
rol
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
dec
pop
movsl
nop
out
dec
fldl
add
lahf
jge
xor
sub
mov
add
test
add
add
pop
jmp
jmp
jns
mov
xchg
or
or
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
sub
sub
popa
jmp
into
adc
jecxz
and
push
add
sbb
mov
cmpl
jne
and
cmpl
je
xor
pushl
jmp
jg
push
dec
ret
jbe
fisubrs
ds
xchg
leave
sub
call
and
pop
mov
addl
inc
push
ret
ret
rorl
add
add
push
lods
repnz
inc
xor
xchg
call
out
pop
test
pushf
in
xchg
mov
jne
mov
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
stos
or
mov
add
add
push
call
and
pop
mov
addl
inc
push
ret
mov
jns
or
add
inc
clc
jno
fidivl
fistl
pusha
jmp
xchg
inc
adcb
je
out
js
sbb
subl
pop
popa
push
jp
push
push
jb
rdtsc
push
pop
pop
pop
xchg
mov
mov
pushl
mov
call
and
mov
push
add
pop
mov
call
les
sti
ljmp
subl
add
push
push
call
and
pop
mov
addl
inc
push
ret
add
aam
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
faddl
call
cmp
mov
pop
add
push
push
call
and
pop
mov
addl
inc
push
ret
xlat
aas
imul
add
add
call
imul
stos
hlt
lcall
xlat
adc
or
add
sbb
lods
adc
in
pop
daa
bound
pop
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
xchg
xchg
mov
mov
push
sbb
pushl
call
push
push
call
and
pop
mov
addl
inc
push
ret
iret
cmpsl
fwait
scas
jo
mov
push
je
pusha
jmp
jg
dec
mov
repz
jge
push
rdtsc
pop
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
daa
add
pushl
call
push
push
call
and
pop
mov
addl
inc
push
ret
sub
mov
add
pop
add
test
add
mov
xchg
push
push
jno
je
rdtsc
pusha
push
pop
push
push
rdtsc
pop
pop
popa
pop
pop
push
jmp
mov
add
xchg
js
lea
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
and
gs
idiv
mov
or
sub
xor
call
and
pop
mov
addl
inc
push
ret
push
pop
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
inc
stos
and
int3
mov
mov
xor
movb
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
outsl
mov
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
cld
lock
mov
mov
or
mov
add
add
call
and
pop
mov
addl
inc
push
ret
int3
addr16
push
xchg
repnz
mov
cmc
lea
mov
push
push
push
jb
jmp
sub
jp
sbb
mov
and
jb
lret
pusha
push
push
rdtsc
pop
pop
push
pop
popa
pop
pop
mov
mov
add
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
sub
fcomps
lea
push
push
call
and
pop
mov
addl
inc
push
ret
and
insb
fsubl
fmul
movswl
add
call
mov
out
adc
inc
rcrl
mov
dec
push
imul
int
mov
push
jmp
pop
cmp
push
push
dec
mov
xor
add
add
add
and
pop
mov
addl
inc
push
ret
nop
mov
sbb
add
add
mov
pop
fmull
mov
mov
push
call
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
or
shrl
push
call
and
pop
mov
addl
inc
push
ret
aas
mov
ja
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
adc
xchg
mov
popa
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
into
movswl
push
push
push
call
and
pop
mov
addl
inc
push
ret
lahf
fldcw
add
jge
mov
nop
push
push
push
push
rdtsc
pop
pop
pop
pop
push
pusha
jne
jmp
loop
jmp
xchg
add
add
adc
add
clc
inc
mov
mov
xor
ja
mov
or
add
add
add
and
pop
mov
addl
inc
push
ret
lret
and
repz
mov
add
shlb
mov
imul
mov
pop
call
jl
mov
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
mov
outsl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
ja
jnp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
ja
jbe
ss
sub
mov
nop
push
push
jmp
in
mov
dec
or
pushf
push
and
sar
sbbb
movsb
pop
pop
push
push
push
jmp
shlb
push
notb
rdtsc
pusha
push
push
rdtsc
pop
pop
push
pop
popa
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
fmulp
dec
stos
jmp
mov
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmp
push
nop
adc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fnclex
in
insb
jno
incl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
or
mov
jno
xor
push
push
push
call
and
pop
mov
addl
inc
push
ret
or
cld
xor
daa
sub
mov
or
call
jmp
pusha
mov
add
popa
mov
or
out
add
in
cmc
cmp
jae
jmp
sbb
mov
test
dec
movzbl
mov
mov
mov
mov
shr
push
mov
pop
mul
or
sub
mov
jmp
loopne
dec
leave
mov
shll
fistpll
or
add
jb
or
mov
mov
add
and
add
mov
mov
cmp
jae
pusha
mov
jmp
sub
mov
popa
jmp
mov
mov
mov
push
mov
pop
and
je
andl
sub
mov
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
push
xorl
call
and
pop
mov
addl
inc
push
ret
cmp
out
cmc
push
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
gs
cmpl
push
call
and
pop
mov
addl
inc
push
ret
cltd
and
stc
cld
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jg
fs
or
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
paddsw
mov
lods
xor
shr
add
sub
jne
jp
mov
jmp
out
out
mov
fs
dec
mov
mov
add
mov
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ljmp
mov
lea
mov
js
pusha
mov
mov
popa
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
adc
push
push
call
and
pop
mov
addl
inc
push
ret
mov
shlb
cld
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
sbb
je
mov
jmp
jmp
inc
push
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
or
mov
lea
add
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
push
scas
add
cmpl
je
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
testl
arpl
pop
fisttpll
sti
pop
cmpl
jbe
mov
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
inc
dec
mov
cwtl
push
or
mov
xor
add
and
push
push
call
and
pop
mov
addl
inc
push
ret
mov
faddl
icebp
mov
ja
mov
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
repz
or
es
mov
mov
xor
xor
push
pusha
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
push
push
pusha
popa
rdtsc
push
pop
pop
pop
popa
mov
jmp
xchg
jo
rclb
xor
cmp
mov
jbe
call
push
clc
call
popa
push
push
push
call
and
pop
mov
addl
inc
push
ret
lds
jmp
or
dec
xchg
ja
aad
mov
data16
imul
add
add
sldt
add
push
jg
loopne
cmp
sahf
cmp
addl
sub
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
loop
mov
or
add
movsl
adc
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
into
pop
outsb
popf
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
ret
pusha
cmc
inc
or
test
mov
or
add
push
add
add
popf
lds
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
decb
pop
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lods
mov
test
add
call
and
pop
mov
addl
inc
push
ret
push
popf
mov
mov
call
lret
cmp
ret
lahf
xor
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
add
add
add
add
and
pop
mov
addl
inc
push
ret
scas
inc
sub
mov
push
pusha
jno
jmp
fmuls
shrb
xchg
add
add
popa
popa
mov
mov
pushl
call
incl
pop
add
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
js
push
pop
popa
push
pusha
push
jmp
aas
aaa
xor
ljmp
jmp
push
out
xchg
pop
inc
sub
mov
xor
or
add
hlt
xchg
and
popa
mov
jmp
jmp
jl
insl
fs
xchg
mov
push
push
pusha
popa
pop
pop
mov
jnp
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
stos
cmp
cld
push
je
movzwl
lea
push
push
call
and
pop
mov
addl
inc
push
ret
sahf
adc
add
pusha
push
jmp
data16
pop
push
push
pop
pop
popa
mov
jmp
std
inc
out
add
movl
pop
push
push
call
and
pop
mov
addl
inc
push
ret
enter
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
negl
mov
aam
mov
test
add
add
adc
add
add
lods
sbb
stos
leave
pusha
mov
pop
lea
popf
inc
add
pop
popa
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
xor
add
add
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
rorl
cs
imul
adc
add
pop
fs
lahf
xchg
nop
fs
cmp
cwtl
jmp
mov
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
cld
sbb
mov
sub
or
incb
add
push
push
call
and
pop
mov
addl
inc
push
ret
xor
add
xchg
xchg
adc
mov
mov
mov
js
lea
push
push
call
and
pop
mov
addl
inc
push
ret
rorb
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
ret
int3
sub
lods
not
adc
sbb
and
or
sub
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
inc
adc
testb
mov
xchg
push
push
push
push
rdtsc
pop
pop
pop
pop
push
pusha
jne
push
push
rdtsc
pop
pop
js
jmp
mov
jo
jae
push
call
and
pop
mov
addl
inc
push
ret
ds
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
adc
mov
mov
mov
call
call
frstor
xchg
pop
jnp
stos
ret
mov
pop
mov
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
jnp
mov
mov
xor
mov
xor
add
push
push
call
and
pop
mov
addl
inc
push
ret
jle
imul
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
sti
lea
push
push
call
and
pop
mov
addl
inc
push
ret
push
gs
punpckldq
outsl
jae
jge
mov
mov
mov
mov
push
mov
pushl
mov
call
mov
xchg
jmp
in
mov
cli
sub
lahf
arpl
pusha
jae
pusha
popa
popa
jmp
cltd
ds
popf
sub
xchg
jl
add
pushl
push
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
sahf
jb
inc
in
dec
mov
add
cmpl
je
jmp
push
cmp
shl
pop
fstl
lahf
mov
inc
inc
pop
adc
push
jp
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
mov
mov
pushl
adc
call
mov
pushl
mov
call
mov
cmpl
je
jno
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pusha
leave
lahf
mov
pusha
mov
mov
popa
movb
push
push
call
and
pop
mov
addl
inc
push
ret
or
pop
xor
in
call
mov
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
add
add
mov
push
inc
cltd
pop
into
pop
jmp
mov
mov
call
fmuls
add
movswl
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
sar
call
sarl
mov
xor
nop
push
push
jmp
jnp
mov
sti
lock
jp
sbb
pop
add
fstpl
push
je
pusha
jb
jo
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
out
sti
or
les
mov
mov
mov
push
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sbb
and
jmp
int
fsubs
push
shll
dec
aaa
xor
fstp
cmpsl
popa
mov
lea
jle
pusha
mov
mov
popa
add
pusha
call
push
scas
jp
movsl
mov
pop
mov
pop
popa
push
pusha
push
push
pop
pop
push
pusha
popa
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
loop
punpckhbw
sub
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
add
add
lahf
xchg
mov
imulb
push
push
call
and
pop
mov
addl
inc
push
ret
adc
popf
ds
inc
mov
addl
mov
mov
call
jmp
aad
xchg
mov
sub
pop
lea
push
sub
pop
call
push
mov
pop
cmpl
jne
mov
cmp
je
movzwl
push
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
lea
mov
jmp
nop
dec
int3
jg
imul
addl
and
mov
mov
cld
call
pusha
mov
popa
jmp
call
pop
sub
jmp
data16
inc
loop
push
adc
icebp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
es
std
fistl
inc
lock
mov
or
add
adcb
jge
dec
dec
leave
xor
test
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
ret
nop
pusha
push
push
pusha
popa
rdtsc
push
push
rdtsc
pop
pop
pop
pop
push
push
pusha
popa
rdtsc
jnp
pop
pop
popa
push
push
push
jb
pusha
popa
rdtsc
push
push
push
rdtsc
pop
pop
pop
pop
pop
nop
and
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
stc
xor
mov
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
scas
repz
dec
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fs
test
add
mov
pushl
or
call
jmp
mov
mov
or
out
mov
in
mov
cmp
jae
or
movzbl
pusha
sub
add
popa
mov
add
mov
call
outsb
and
and
jmp
and
loopne
jmp
or
push
add
jp
and
jne
shr
js
jbe
jae
mul
sub
sub
xor
mov
push
mov
pop
jmp
or
mov
movswl
add
mov
add
mov
cmp
jae
mov
jmp
mov
sub
mov
and
je
call
fildll
js
scas
sbb
and
cmp
xor
push
dec
pop
andl
sub
mov
mov
jmp
lea
add
and
push
push
push
call
and
pop
mov
addl
inc
push
ret
sub
adc
or
add
bound
outsl
fwait
xchg
sbb
roll
inc
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
xchg
xchg
cmp
movzwl
or
mov
pusha
or
popa
and
sub
cld
cmc
sub
mov
mov
mov
lods
xor
shr
add
sub
jne
and
ja
or
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
xchg
adc
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
adc
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
bound
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
data16
xor
cmpl
je
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
sbb
sbbb
lods
dec
mov
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ss
pop
lret
popf
add
mov
jl
jmp
pop
testl
add
add
dec
cmpl
xor
stos
add
add
lret
cmpsb
mov
mov
add
test
cmpl
jbe
call
cmp
xchg
out
jl
lds
mov
movzwl
pop
mov
pusha
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
push
mov
and
push
push
call
and
pop
mov
addl
inc
push
ret
adc
adc
aas
mov
or
je
mov
push
xor
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
test
pop
pop
xor
movzwl
push
pusha
push
jmp
imul
inc
in
cmp
arpl
lds
mov
add
add
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
popf
push
push
mov
pop
call
incl
pop
add
adc
add
and
sti
les
xchg
sbb
std
pop
mov
js
push
pusha
popa
pop
mov
jg
pusha
pusha
popa
push
push
rdtsc
pop
pop
popa
mov
jmp
sub
mov
leave
lcall
inc
inc
mov
jmp
mov
lea
dec
mov
lret
lods
pop
push
push
call
and
pop
mov
addl
inc
push
ret
push
push
mov
shrl
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
pop
repz
roll
outsl
jmp
inc
iret
jbe
push
in
test
lea
pusha
pusha
xor
add
popa
call
fs
push
push
cmp
pop
popa
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
movl
flds
mov
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
sti
icebp
and
mov
or
sub
decb
pop
push
push
call
and
pop
mov
addl
inc
push
ret
in
popa
xchg
mov
push
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
out
gs
add
call
daa
sub
cld
ljmp
jnp
pop
push
call
sbb
cmp
adc
pop
sub
sub
pop
pop
pusha
mov
jge
mov
popa
mov
jmp
pop
unpckhps
insl
cmp
push
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
push
pusha
popa
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
jp
mov
jo
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
fdivs
out
mov
push
pusha
push
push
pusha
popa
rdtsc
pusha
popa
pop
pop
pusha
push
pop
push
push
rdtsc
pop
pop
popa
popa
xorl
mov
lea
sub
push
ja
jnp
push
pop
mov
mov
call
mov
popa
push
push
call
and
pop
mov
addl
inc
push
ret
pop
lock
and
xor
add
lahf
xlat
mov
cmpl
je
jmp
and
inc
insl
and
rcll
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
fsts
aam
mov
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
pop
jmp
push
and
ljmp
add
sub
pusha
mov
mov
popa
cmpl
jne
mov
pusha
jmp
mov
jg
int
ss
popa
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
movsl
cld
pushl
push
mov
pop
call
jp
stc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
decl
dec
xchg
sbb
mov
movl
jae
pusha
mov
jmp
dec
iret
movsl
ja
and
pusha
jo
jmp
mov
je
cmpsb
sbb
sub
mov
pop
jo
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
popf
jne
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
test
xchg
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
arpl
push
mov
mov
sub
mov
mov
mov
add
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
mov
mov
sub
mov
js
mov
jmp
ss
nop
lock
mov
and
adc
lea
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
push
sub
adc
add
jns
int3
inc
fwait
cmp
xchg
push
pusha
lods
movsl
sub
mov
movswl
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
inc
mov
call
or
sbb
and
jbe
mov
sub
js
lea
push
push
call
and
pop
mov
addl
inc
push
ret
cmpb
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
or
jae
repz
fbstp
pusha
adc
and
popa
push
jge
jmp
mov
inc
jbe
mov
das
pop
add
cmp
and
sldt
add
cmp
sub
jmp
int3
sub
xor
adc
js
lea
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
adc
pop
add
add
out
xor
bound
mov
mov
cmpl
je
mov
push
push
push
push
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sub
repz
mov
mov
or
or
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
add
add
xor
jecxz
sbb
adc
add
lret
lret
add
mov
xor
jmp
adc
xor
sti
xor
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
bound
xchg
inc
or
push
mov
pop
mov
call
mov
cmpl
je
xor
mov
mov
add
movb
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
adc
add
mov
xchg
push
push
inc
fisubs
push
mov
mov
add
dec
or
add
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
call
clc
sbb
je
je
call
in
movsl
insl
call
shrb
or
mov
pop
pop
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
lods
mov
js
out
mov
mov
mov
jmp
jp
out
xor
pop
jb
shlb
add
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
rorb
popf
lods
sub
pop
movswl
nop
ja
push
push
jno
rdtsc
jmp
test
jmp
cltd
int
jns
pop
push
push
pusha
push
pop
push
pop
popa
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
outsl
sub
sldt
add
lcall
rolb
inc
fildl
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
ret
imul
push
movzwl
lea
push
push
call
and
pop
mov
addl
inc
push
ret
in
mov
incl
nop
jnp
push
jmp
in
push
push
push
push
push
pop
pop
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
dec
push
mov
push
mov
push
xor
call
mov
lea
call
push
push
call
and
pop
mov
addl
inc
push
ret
jo
push
leave
pop
mov
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
jb
call
pop
and
mov
faddl
imul
pusha
popa
pop
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
lock
adc
repnz
cmp
push
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
jmp
or
enter
fldenv
inc
loopne
lcall
add
jmp
std
add
lahf
jmp
outsb
jns
push
dec
call
add
add
add
and
pop
mov
addl
inc
push
ret
mov
mull
xchg
rorl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
insl
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
inc
pop
xchg
je
xchg
mov
mov
popa
or
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
dec
and
lret
add
addb
add
add
mov
xor
push
push
push
jmp
mov
icebp
rdtsc
push
push
je
rdtsc
jmp
daa
sub
cld
ljmp
jnp
pop
pop
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
cltd
jp
or
jmp
lods
call
xor
push
add
add
add
add
call
aad
int
fsubs
mov
pop
incl
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
std
inc
stos
mov
outsl
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
test
loope
pop
pushf
out
cmp
pop
xor
call
jmp
jne
add
mov
call
mov
xor
testb
pop
cmp
test
mov
pop
out
mov
in
pusha
mov
mov
popa
cmp
jae
call
insl
ss
cmp
add
add
mov
pop
movzbl
jbe
pusha
mov
jmp
aas
sub
sbb
add
add
pop
mov
jns
mov
call
out
fldcw
sbb
ret
jle
pop
shr
or
mul
push
sub
pop
sub
mov
mov
mov
jmp
mov
mov
xor
push
xor
pop
add
movswl
add
jmp
xchg
in
shrb
mov
xchg
scas
cmc
jne
push
jae
mov
jmp
mov
mov
jmp
xor
mov
sub
loope
je
jg
movzwl
andl
push
mov
pop
jmp
mov
test
shll
add
clc
jmp
lea
mov
push
call
mov
pusha
mov
xor
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
jmp
out
push
fistpl
aas
xchg
xor
pop
and
push
push
call
and
pop
mov
addl
inc
push
ret
pop
push
enter
mov
mov
xchg
lea
mov
mov
jmp
pop
adc
adc
jnp
mov
mov
js
shr
add
sub
jne
xor
push
push
call
and
pop
mov
addl
inc
push
ret
out
dec
fisttps
mov
or
push
push
call
and
pop
mov
addl
inc
push
ret
test
inc
xchg
cld
xchg
out
jo
xor
lea
mov
push
jmp
out
add
ljmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
adc
xor
ret
add
mov
mov
shr
add
mov
pop
jmp
js
mov
hlt
call
in
push
push
call
and
pop
mov
addl
inc
push
ret
mov
cmp
test
add
add
mov
mov
call
test
mov
jns
mov
pop
mov
lea
mov
jmp
mov
xor
cmpl
je
sub
cmpl
je
add
cmpl
jbe
mov
pusha
mov
call
push
aad
cli
sbb
ficomps
fnstcw
and
sub
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
insb
sub
push
lret
mov
push
add
add
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
in
xchg
or
add
mov
pop
mov
outsl
ret
xor
mov
nop
pusha
jmp
int3
and
sub
mov
dec
jnp
mov
or
add
lock
mov
inc
push
pop
popa
popa
push
jmp
inc
lret
loop
rcrb
nop
push
push
call
and
pop
mov
addl
inc
push
ret
xor
pop
mov
push
pusha
clc
stc
popa
mov
call
incl
pop
add
push
push
rdtsc
pop
pop
pop
pusha
jge
jo
popa
popa
push
pusha
push
push
push
rdtsc
pop
pop
pop
push
push
pop
pop
popa
mov
pusha
jnp
push
pop
push
push
je
rdtsc
pusha
popa
pop
pop
popa
mov
jmp
ficoml
movsb
dec
mov
mov
add
mov
add
add
or
sbb
fs
pop
adc
cmp
xchg
add
mov
call
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jne
mov
jmp
push
sub
pop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
sbb
add
push
push
call
and
pop
mov
addl
inc
push
ret
sub
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
push
jo
bswap
and
int
push
mov
mov
mov
clc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
scas
insl
cli
ja
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmpsb
mov
xchg
mov
xchg
jmp
push
aad
mov
push
jl
pusha
popa
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
and
pop
dec
sbbb
mov
mov
or
or
sub
push
push
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
jmp
shlb
sti
mov
add
cmpsl
in
pop
pop
pop
pop
addl
push
push
call
and
pop
mov
addl
inc
push
ret
je
sbb
mov
sub
or
mov
add
add
test
add
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
imul
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
fadd
jb
fsubr
stc
add
mov
popa
mov
movl
mov
cmpl
je
mov
jmp
mov
pop
or
inc
add
add
push
call
and
pop
mov
addl
inc
push
ret
or
popa
push
dec
xor
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
add
stc
mov
pusha
dec
js
jbe
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fstpl
cs
aaa
loope
cmpl
jne
mov
cmpl
je
mov
pushl
mov
mov
call
mov
movswl
mov
je
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
cld
cld
add
mov
out
push
sub
push
pop
rdtsc
jns
pop
pop
rdtsc
jmp
and
dec
lahf
jg
pop
pop
push
jo
jmp
test
mov
jecxz
and
push
add
add
add
and
pop
mov
addl
inc
push
ret
into
inc
loope
jae
xor
xor
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
inc
std
add
cltd
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
and
or
mov
or
call
and
pop
mov
addl
inc
push
ret
aaa
test
mov
mov
adc
push
sub
lea
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
stc
jmp
jns
ljmp
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
pop
sub
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
into
and
test
add
call
pop
adc
sbb
sub
mov
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
ret
push
mov
pusha
mov
jo
or
popa
call
push
jbe
test
push
ss
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
jno
xchg
xchg
or
or
call
and
pop
mov
addl
inc
push
ret
inc
pop
jae
mov
mov
call
mov
push
jmp
sarl
dec
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ja
lods
cs
lret
mov
pop
push
push
mov
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
dec
jno
sti
out
aas
call
push
push
call
and
pop
mov
addl
inc
push
ret
jecxz
sti
bound
popf
cmpl
je
mov
xchg
pusha
jmp
push
jmp
mov
shll
int3
mov
sbb
push
add
add
xchg
add
add
push
push
jmp
cmp
ret
sub
xchg
out
mov
xor
popa
jmp
sahf
push
cpuid
jmp
pop
pop
xchg
mov
pushl
push
mov
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
xor
loopne
dec
pop
or
mov
or
push
push
mov
add
popa
call
add
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
pop
imul
jecxz
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
sbb
movb
push
push
call
and
pop
mov
addl
inc
push
ret
mov
icebp
dec
lods
xor
movswl
jmp
mov
push
lret
lret
insl
aad
mov
and
or
add
pusha
push
mov
pop
mov
popa
jmp
clc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
jno
scas
xchg
pop
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
push
jne
pusha
popa
rdtsc
push
jmp
pop
pushl
and
repnz
add
mov
xor
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
add
push
call
and
pop
mov
addl
inc
push
ret
pop
je
add
push
pop
add
and
addb
add
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
push
sub
ret
pextrw
and
lea
mov
add
ja
mov
nop
push
push
push
jl
pop
rdtsc
push
push
push
pop
rdtsc
push
pop
pop
pop
pop
pop
push
jmp
repnz
dec
mov
negb
nop
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
adc
adc
sbb
lea
add
pop
call
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
roll
pop
add
test
sti
mov
cmp
je
push
push
push
call
and
pop
mov
addl
inc
push
ret
push
in
mov
jmp
cmp
test
push
pusha
push
push
push
pop
rdtsc
jl
pop
pop
pusha
pusha
popa
jle
popa
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
xor
xchg
rorl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jno
jge
jbe
js
or
jmp
call
pop
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
imul
imul
pop
sbb
push
push
push
jmp
stos
xlat
ror
cmpsl
jno
fisttpll
enter
push
pop
sbb
xor
adc
add
sahf
jmp
inc
adc
sbbl
dec
es
popa
popa
pop
pop
mov
jmp
sahf
in
pop
jbe
pushl
sub
mov
mov
xor
incl
jmp
loope
jo
int3
mov
mov
pushl
mov
call
jmp
mov
mov
out
stc
in
sbb
cmp
jae
sub
movzbl
jmp
mov
inc
dec
jmp
negl
mov
movzwl
mov
xor
shr
mov
mul
jns
mov
sub
clc
mov
mov
jmp
mov
mov
mov
add
mov
add
cmp
jae
and
jmp
fwait
dec
cmpsl
and
ds
mov
add
add
mov
mov
jmp
add
sbb
pop
adc
loope
je
pusha
add
jb
and
popa
andl
je
and
mov
push
mov
pop
jmp
lea
call
inc
sbb
add
add
fisttps
or
mov
jnp
pop
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
fs
call
push
push
call
and
pop
mov
addl
inc
push
ret
pop
ljmp
pop
mov
mov
jns
or
mov
and
stc
mov
cld
pusha
sub
mov
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
repnz
sbb
push
push
call
and
pop
mov
addl
inc
push
ret
or
scas
jecxz
mov
sbb
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
push
sahf
xor
fwait
sbb
call
or
push
call
and
pop
mov
addl
inc
push
ret
add
bound
jg
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
xlat
mov
sbb
rorl
add
mov
pop
jmp
ret
mov
repz
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
outsw
fbstp
mov
mov
mov
mov
lea
jp
jge
movzwl
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
data16
out
loopne
or
cmpl
je
jmp
xchg
jae
jg
bound
add
stos
popa
or
sarb
mov
add
test
add
add
pop
cmpl
jbe
mov
pusha
clc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fisttpl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
mov
add
add
dec
aas
inc
pusha
nop
jmp
mov
out
or
je
jne
mov
mov
movzwl
xor
mov
push
pusha
jge
push
push
rdtsc
pop
pop
push
push
jmp
bound
jbe
in
xchg
mov
and
xor
pop
pop
popa
mov
xor
push
mov
push
push
push
push
jne
pop
rdtsc
push
jp
pop
pop
pop
addl
and
call
mov
sbb
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
inc
cmpsb
out
mov
xchg
and
sbb
add
std
dec
push
fwait
gs
xchg
adcl
test
lea
push
push
call
and
pop
mov
addl
inc
push
ret
int3
mov
jbe
adc
loop
cli
movl
push
push
call
and
pop
mov
addl
inc
push
ret
int
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
test
push
mov
mov
mov
mov
mov
push
xor
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
repnz
mov
xchg
jne
jns
push
push
rdtsc
pop
pop
push
push
push
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
rdtsc
pusha
push
push
rdtsc
pop
pop
push
pop
popa
pop
pop
xchg
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
ret
xlat
sbb
or
ret
fsubr
adc
add
jp
dec
rol
fisubrs
ss
mov
addl
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
shl
dec
daa
js
aad
test
add
pop
push
jmp
cmc
imul
mov
jne
insb
daa
and
daa
xchg
popf
test
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
aas
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
je
cmp
je
and
popa
push
push
call
and
pop
mov
addl
inc
push
ret
scas
insb
push
mov
push
ljmp
movl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
je
mov
testb
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
inc
mov
pop
add
add
aam
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
pop
jbe
dec
xor
xor
push
add
add
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
fs
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
imul
pop
call
call
je
cmp
lcall
fidivrs
insb
or
pop
adc
movl
push
push
call
and
pop
mov
addl
inc
push
ret
das
jle
xlat
outsl
push
mov
sub
mov
xchg
pusha
push
push
jb
rdtsc
push
pop
pop
pop
jl
pusha
popa
popa
push
jmp
adc
add
and
mov
dec
xchg
and
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
adc
xchg
dec
mov
call
adc
mov
push
push
mov
pop
pop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
call
add
add
push
call
and
pop
mov
addl
inc
push
ret
push
xor
inc
test
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jb
mov
adc
pop
xor
add
push
push
call
and
pop
mov
addl
inc
push
ret
pop
in
cmp
clc
loop
outsl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
or
popf
mov
lea
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
xchg
and
push
push
push
call
and
pop
mov
addl
inc
push
ret
enter
add
add
popf
inc
test
xchg
pop
add
sub
test
add
mov
pop
mov
pushl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
lret
jmp
jb
aas
xchg
icebp
das
sbb
ds
jmp
xor
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
test
mov
or
add
insl
out
push
mov
js
movl
call
movzwl
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
bound
push
or
xchg
push
jl
jb
pop
push
push
pusha
push
pop
push
pop
popa
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
xor
push
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
call
movzwl
call
jbe
mov
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xor
xchg
xor
add
add
add
and
pop
mov
addl
inc
push
ret
inc
test
mov
add
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
ja
test
fisttpll
inc
jecxz
test
mov
sub
movb
mov
movl
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
pushf
sub
pop
lret
in
mov
mov
lea
jmp
add
ds
lret
jo
sub
lahf
pusha
push
mov
push
push
push
push
push
jnp
rdtsc
pusha
popa
pop
pop
rdtsc
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
pop
pop
mov
xor
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
push
and
lea
call
stos
add
sbb
jbe
cmp
addl
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
sub
ds
nop
jmp
out
pop
insl
out
mov
imul
inc
push
pusha
jmp
push
movsl
pop
push
ret
fildll
enter
push
jae
pop
pusha
push
push
rdtsc
pop
pop
js
popa
popa
nop
mov
push
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
pop
call
pop
adc
divl
cmpsb
jmp
insl
inc
xchg
into
stos
mov
pop
call
sub
lea
push
push
call
and
pop
mov
addl
inc
push
ret
repz
push
das
mov
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
movb
movsl
sbb
call
jnp
mov
rol
mov
sbb
sub
iret
mov
cmp
je
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
mov
add
add
pop
mov
push
pusha
jmp
xlat
xchg
dec
data16
lret
jns
and
xlat
add
add
add
xchg
filds
popa
mov
adc
call
push
push
call
and
pop
mov
addl
inc
push
ret
pushf
fdiv
mov
jne
mov
jmp
call
pop
sub
mov
add
mov
lea
movswl
push
jmp
dec
dec
dec
enter
lock
or
add
jmp
xor
add
push
daa
cs
add
add
mov
add
add
or
add
insb
or
ret
lret
dec
test
sub
pop
cmc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
pop
add
add
cmp
incl
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
or
nop
inc
push
xor
add
xchg
cmpsb
jmp
sub
push
cmp
mov
pushl
mov
call
jmp
mov
mov
call
xor
ljmp
mov
fwait
div
call
sbb
sbb
out
inc
xor
xlat
das
and
pusha
rclb
xchg
fldenv
mov
pop
pop
out
mov
in
pusha
add
mov
popa
cmp
jae
js
mov
movzbl
and
mov
mov
mov
mov
shr
add
mul
jge
stc
sub
sub
mov
call
jno
pushf
xorb
dec
aad
mov
pop
jmp
xor
mov
mov
add
sub
add
sub
cmp
jae
mov
jmp
sbb
mov
jo
sub
and
je
pusha
or
jo
mov
popa
andl
jmp
sbb
mov
jne
push
mov
pusha
and
jbe
mov
popa
jmp
lea
mov
mov
push
mov
call
sub
jl
mov
mov
stc
and
push
and
pop
cld
push
push
call
and
pop
mov
addl
inc
push
ret
insb
dec
push
adc
sub
sub
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xor
add
jne
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
repz
gs
in
ss
fcmovnbe
or
push
dec
jg
cmp
mov
pop
popa
jg
or
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
add
jbe
and
pop
or
push
push
call
and
pop
mov
addl
inc
push
ret
rcl
pop
lret
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
iret
mov
sub
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
int3
das
mov
push
cmpl
je
je
pusha
mov
mov
popa
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jns
in
shrb
xor
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
add
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
and
fisubl
fmuls
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
add
xor
call
loop
jbe
jecxz
mov
mov
js
add
pop
pop
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
mov
or
iret
add
fldcw
push
call
and
pop
mov
addl
inc
push
ret
push
xchg
testl
pop
and
push
push
call
and
pop
mov
addl
inc
push
ret
aad
aad
pusha
mov
or
je
sub
mov
mov
xor
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
jno
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
mov
or
push
jmp
pop
mov
jb
call
incl
pop
add
push
pop
pop
push
push
jns
rdtsc
jo
pop
pop
popa
push
jmp
cmpsb
je
out
js
mov
jno
pusha
push
pop
jmp
fsubl
lret
lds
popa
mov
jmp
mov
fwait
div
add
stos
mov
and
jmp
xor
xchg
repz
popa
sti
cmp
rcrl
sub
pop
pusha
mov
popa
call
js
push
dec
divl
adc
jns
push
shl
xor
add
ds
out
xor
outsb
dec
in
aaa
jl
mov
call
mov
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
or
sar
mov
xor
movl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
nop
push
adc
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
scas
pop
mov
mov
and
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jle
xchg
sbb
pop
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sbb
fisttps
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
jnp
mov
xchg
out
mov
push
push
push
rdtsc
pop
pop
pop
rdtsc
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
into
dec
push
jo
lea
jmp
sub
out
mov
add
cld
cld
add
add
add
add
add
mov
cs
adc
add
pop
sbb
pop
js
inc
jbe
notl
mov
movl
bound
push
call
and
pop
mov
addl
inc
push
ret
dec
stos
mov
popf
imul
js
lea
mov
mov
push
jbe
push
push
jmp
xchg
xchg
nop
dec
xor
push
rdtsc
pop
pop
pop
pop
mov
mov
adc
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
or
ret
sub
mov
add
add
jg
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
in
imul
jle
jnp
mov
jmp
movswl
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
movsl
lret
jnp
inc
ret
push
push
call
and
pop
mov
addl
inc
push
ret
or
sbbl
adc
add
ret
push
stc
add
mov
cmp
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
divb
shlb
inc
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jns
push
fidivrl
pushl
mov
call
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
popf
imul
xor
pop
movzwl
movl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
pop
lcall
and
pusha
pusha
push
pop
jmp
in
push
lcall
xor
cs
add
add
add
adc
add
into
push
orl
aam
and
lea
add
popa
push
push
push
pusha
push
push
rdtsc
pop
pop
push
push
rdtsc
pop
pop
popa
rdtsc
jmp
inc
mov
and
cmp
ds
pop
xchg
jmp
sub
mov
rcr
xchg
popa
cmp
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
loopne
jecxz
lahf
stos
cltd
mov
push
mov
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
out
outsb
je
xchg
push
pop
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
seta
push
insb
mov
orb
clc
mov
mov
mov
xor
or
mov
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
pop
call
add
mov
fimuls
int3
movsl
imul
cmp
push
push
call
and
pop
mov
addl
inc
push
ret
incl
mov
xor
lea
jmp
sbb
push
mov
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
add
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
or
xchg
stos
shrb
mov
call
pusha
mov
jp
jmp
shll
mov
mov
xchg
xchg
nop
aas
stos
xchg
popa
xchg
push
push
push
pusha
popa
rdtsc
push
pop
pop
pop
pop
push
pusha
jb
jmp
xchg
data16
test
mov
lds
scas
push
push
push
push
rdtsc
pop
pop
rdtsc
pusha
popa
pop
pop
popa
xchg
or
pushl
jle
jmp
es
dec
or
push
cltd
leave
push
push
jns
xchg
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cld
push
and
and
lea
pop
add
test
add
adc
push
jl
jmp
xacquire
cmc
nop
xchg
add
pop
cmp
xor
and
add
add
add
and
pop
mov
addl
inc
push
ret
lods
add
insb
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
movsb
push
test
xor
pop
jmp
jo
mov
and
popa
mov
call
add
pushl
jg
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
xor
sub
add
cmpl
je
sbb
mov
mov
movb
push
push
call
and
pop
mov
addl
inc
push
ret
adcb
sub
popf
clc
sbb
test
mov
add
add
mov
jmp
jmp
aaa
cmp
dec
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fistps
pop
sub
call
mov
clc
iret
fcmovb
xchg
xor
jp
lea
sub
inc
and
inc
mov
nop
jmp
dec
cmp
adc
jne
in
mov
rclb
push
push
push
push
push
rdtsc
pop
pop
rdtsc
jmp
xchg
bound
dec
pop
repnz
pop
rdtsc
push
jp
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
fistpll
imul
push
mov
stc
push
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
iret
data16
or
mov
lea
jge
jmp
in
xchg
lret
aaa
lock
movsl
rol
pop
push
add
add
nop
jmp
push
xchg
mov
or
shll
dec
inc
push
jp
push
push
push
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
call
push
sbb
add
jp
call
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
add
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sub
test
mov
push
push
call
and
pop
mov
addl
inc
push
ret
gs
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
ja
xchg
xrelease
xchg
pop
stos
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
aas
or
jbe
jmp
or
mov
mov
fs
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
cmc
push
jo
sub
nop
push
jae
push
pop
pop
push
push
push
push
push
jp
rdtsc
push
push
rdtsc
pop
pop
pop
pop
rdtsc
jmp
jecxz
into
out
push
js
pop
nop
sub
call
mov
jmp
call
pop
sub
sub
stc
lea
jmp
testb
mov
inc
mov
jb
jecxz
and
test
add
add
pop
pusha
popa
popa
mov
call
shll
mov
push
mov
add
add
mov
insl
xchg
outsl
inc
hlt
push
mov
pop
pop
cmc
pushl
jnp
mov
mov
mov
add
cmc
incl
push
push
call
and
pop
mov
addl
inc
push
ret
xor
jl
insl
fs
push
or
test
add
add
mov
or
add
add
add
or
mov
cmc
out
jmp
xchg
inc
cld
or
sub
sub
xchg
pop
add
imul
add
add
jmp
jbe
or
jge
cmp
sub
mov
movswl
mov
mov
shr
mul
mov
mov
sub
mov
mov
mov
jmp
pusha
stc
or
popa
mov
push
and
pop
add
add
add
sub
cmp
jae
sub
jmp
mov
mov
mov
movswl
mov
and
je
or
andl
movswl
mov
cld
jmp
lea
pusha
add
js
movswl
popa
push
movzwl
or
call
jmp
inc
sbb
lods
lock
mov
jne
add
adc
and
mov
cld
adc
mov
sub
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
ds
sub
ret
add
sub
jne
cld
mov
mov
or
cld
mov
mov
jmp
repz
pop
fs
test
or
mov
sbb
add
call
and
pop
mov
addl
inc
push
ret
cs
jl
inc
mov
pusha
mov
add
popa
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
sub
fisubrl
push
call
and
pop
mov
addl
inc
push
ret
lods
push
jg
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
and
popf
or
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
adc
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
test
data16
nop
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
ja
pusha
mov
push
or
pop
popa
cmpl
je
mov
cmpl
je
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
shlb
mov
pusha
mov
mov
jmp
add
fdivrp
pop
and
push
pop
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
sub
xlat
jp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
pop
jle
jno
mov
popa
xor
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
add
nop
jmp
jl
sti
imul
jnp
xchg
jb
pop
sbb
jmp
scas
int3
sub
jb
mov
loope
out
scas
popf
sub
shrl
rdtsc
push
push
push
push
rdtsc
pop
pop
rdtsc
push
pop
pop
pop
pop
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
dec
adc
arpl
xchg
call
incl
pop
add
xchg
add
add
or
add
adc
fs
pop
ret
ja
cmp
sub
pusha
pusha
popa
pusha
popa
popa
pop
mov
push
jmp
loopne
sbb
imull
roll
sarl
pop
add
add
int3
out
mov
jmp
mov
xchg
mov
mov
inc
jl
inc
sbbb
sub
mov
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
add
call
out
and
rcr
push
mov
mov
jne
pop
jne
jmp
mov
mov
call
push
cli
mov
addr16
pop
movl
movzwl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
push
out
mov
jg
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ficompl
mov
movswl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
adc
cmpsb
addr16
and
push
filds
leave
jnp
test
clc
pop
mov
adc
push
jmp
stc
icebp
push
mov
fsubrl
ret
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
sub
int
mov
or
call
and
pop
mov
addl
inc
push
ret
stc
mov
add
add
add
add
test
add
add
or
sub
loopne
cmp
add
leave
repz
pusha
jne
pusha
popa
push
pusha
popa
pop
popa
mov
push
jmp
call
out
std
leave
push
xchg
xchg
pop
mov
push
pusha
push
pop
jge
popa
pop
mov
push
push
push
jmp
cmp
nop
sbb
sub
xor
popa
push
pop
popa
pop
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
out
and
cmp
test
lea
push
push
call
and
pop
mov
addl
inc
push
ret
add
xchg
repnz
es
cmp
push
mov
pop
sub
push
pusha
push
ja
pop
jb
jmp
loope
stos
fcoml
pop
pusha
into
dec
and
sub
mov
popa
mov
xor
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
call
cmp
sub
popa
push
push
call
and
pop
mov
addl
inc
push
ret
mov
dec
ljmp
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
and
or
cmpl
je
stc
jmp
jmp
test
sahf
cmpsl
pusha
xchg
fisttps
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
jle
xor
mov
mov
cmpl
jne
and
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
gs
mov
push
lds
jne
mov
sub
pushl
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
adc
mov
jno
mov
mov
call
xchg
jge
mov
sub
subb
push
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
adcl
dec
sbb
push
pusha
pusha
push
push
rdtsc
pop
pop
pusha
popa
popa
push
jge
pop
popa
mov
or
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
mov
loop
xchg
add
add
pop
pusha
mov
sub
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
test
add
js
adc
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
add
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jle
test
iret
mov
jmp
arpl
push
cmp
adc
mov
popf
sbb
cmc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
inc
jb
push
mov
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
es
int
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
or
jmp
cmpsl
divb
jnp
fs
xchg
xor
mov
popa
lea
push
push
call
and
pop
mov
addl
inc
push
ret
ja
lcall
movsb
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
out
lcall
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
clc
and
jnp
call
mov
push
jle
push
push
ja
rdtsc
pusha
popa
pop
pop
mov
mov
pushl
sub
call
call
push
arpl
aad
mov
pop
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
add
pushf
mov
pop
call
icebp
ljmp
cmp
push
call
and
pop
mov
addl
inc
push
ret
out
inc
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
inc
out
xor
xchg
insl
adc
push
call
and
pop
mov
addl
inc
push
ret
lock
mov
or
call
and
pop
mov
addl
inc
push
ret
cltd
sbb
subl
pop
call
sub
cmpl
je
call
nop
rcrl
mov
sub
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
leave
notb
rorl
mov
movb
push
push
call
and
pop
mov
addl
inc
push
ret
dec
clc
xor
movl
push
push
call
and
pop
mov
addl
inc
push
ret
addr16
mov
mov
jmp
jo
jno
jmp
or
aas
lods
ficompl
adc
inc
add
mov
mov
lea
mov
push
jl
push
push
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
hlt
jns
mov
add
add
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
popa
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
add
lret
test
add
add
add
and
pop
mov
addl
inc
push
ret
insb
in
adc
jo
xor
je
movswl
add
push
push
call
and
pop
mov
addl
inc
push
ret
test
jnp
push
push
push
jo
jge
rdtsc
jmp
and
pop
cltd
lcallw
mov
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lret
adc
or
add
fnstenv
rclb
cwtl
stos
test
push
call
and
pop
mov
addl
inc
push
ret
jl
mov
push
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
outsb
gs
bswap
mulb
popf
in
push
mov
lea
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
pop
sub
or
mov
rcrl
test
out
insb
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
and
sbb
les
xchg
add
add
mov
add
add
push
mov
nop
jae
pusha
jmp
or
lock
popa
popa
push
push
pusha
jno
jmp
jmp
divb
push
movb
sbb
popa
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
and
sbb
xchg
rorl
mov
call
sbbl
fdivs
jns
xchg
in
cmpsl
or
xchg
sbb
mov
or
popa
pop
jmp
call
pop
sub
call
jns
xlat
or
adc
add
mov
in
mov
adc
pop
pop
pop
push
push
call
and
pop
mov
addl
inc
push
ret
cltd
stos
ret
movzwl
lea
push
push
call
and
pop
mov
addl
inc
push
ret
or
leave
add
mov
mov
nop
pusha
pusha
pusha
popa
push
push
rdtsc
pop
pop
popa
jmp
ds
jl
sti
lret
sbb
xchg
add
add
push
push
jmp
idiv
addr16
lds
outsb
ljmp
add
add
pop
pop
popa
nop
push
push
call
and
pop
mov
addl
inc
push
ret
frstor
fsubs
add
add
push
push
call
and
pop
mov
addl
inc
push
ret
xor
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
shrb
or
or
mov
incl
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
push
pushf
inc
int
push
push
push
call
and
pop
mov
addl
inc
push
ret
inc
jbe
dec
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
out
jbe
cmc
mov
call
jmp
jmp
lods
leave
and
and
and
sahf
dec
push
mov
add
sbb
out
mov
in
or
pusha
jmp
out
sbb
mov
popa
cmp
jae
mov
movzbl
mov
mov
push
adc
pop
mov
or
shr
push
jae
mov
pop
mul
mov
sub
sub
jmp
mov
xchg
cmc
and
add
je
call
data16
xchg
pop
lea
add
add
pop
adc
mov
call
adc
push
loope
aaa
push
xchg
testl
pop
pop
add
or
add
mov
cmp
jae
call
sbb
push
and
shrb
jecxz
mov
add
add
addb
add
pop
jmp
mov
mov
mov
and
je
add
mov
andl
movswl
mov
cmc
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
aas
push
push
push
call
and
pop
mov
addl
inc
push
ret
pop
subb
sbb
call
push
push
call
and
pop
mov
addl
inc
push
ret
inc
pushf
adc
or
inc
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
int3
mov
pusha
and
xor
popa
and
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
aas
add
dec
dec
jmp
and
mov
jp
cmp
or
mov
jbe
jae
cld
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
mov
add
mov
mov
adc
sub
push
push
or
pop
pop
lods
xor
shr
add
sub
jne
call
movsl
xor
in
fstl
mov
pop
pop
jmp
es
pop
je
or
mov
mov
push
mov
pop
mov
mov
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
inc
cmp
cli
mov
call
pushf
gs
push
int3
jp
lcall
iret
dec
into
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
out
mov
mov
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
dec
testb
sahf
jge
loope
add
add
add
and
pop
mov
addl
inc
push
ret
mov
sbb
sub
inc
cmpl
je
cmpl
je
pusha
xor
call
jmp
divb
push
movb
sbb
jmp
out
mov
leave
push
push
push
cmp
pop
popa
or
cmpl
jbe
je
mov
jle
pusha
mov
call
stc
repnz
jmp
xchg
jnp
adcl
negb
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
dec
inc
hlt
dec
cmp
loope
xor
or
je
mov
push
pop
mov
sub
mov
xor
sbb
nop
jmp
mov
pusha
lahf
push
jmp
mov
mov
nop
mov
push
mov
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
mov
push
pusha
push
jns
pop
jmp
jno
push
imul
pop
shrb
sub
cld
popa
addl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
in
call
cmpl
cmp
adc
pop
pop
call
push
push
call
and
pop
mov
addl
inc
push
ret
adc
adc
add
imul
inc
out
pushf
mov
add
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
or
pusha
mov
mov
popa
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
pop
cmp
stc
jno
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
cmpsb
cmp
lea
add
add
add
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
and
sub
mov
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
leave
mov
dec
xchg
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sahf
shlb
outsb
mov
in
jns
pusha
pusha
popa
jmp
mov
dec
shlb
bound
es
push
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
lods
nop
mov
or
call
and
pop
mov
addl
inc
push
ret
xor
outsb
ja
xor
call
incl
pop
add
jmp
test
test
rdtsc
push
push
push
rdtsc
pop
pop
pop
pop
pop
push
jnp
jmp
addb
sbb
inc
xchg
and
push
shl
subb
push
push
jmp
pop
ds
fwait
rdtsc
push
je
pop
pop
pop
mov
jmp
add
jle
daa
push
lock
mov
ja
pusha
jp
pusha
popa
popa
pop
jmp
mov
mov
das
xchg
out
mov
jne
test
lea
push
push
call
and
pop
mov
addl
inc
push
ret
fcomps
xchg
xchg
jae
clc
nop
pusha
jo
push
push
rdtsc
pop
pop
pusha
jo
pusha
popa
popa
popa
push
jne
jmp
out
jecxz
imul
repz
test
add
add
add
and
pop
mov
addl
inc
push
ret
fsts
outsb
pusha
jp
mov
call
movzwl
pusha
jmp
add
dec
or
xor
fstpt
mov
popa
popa
push
push
call
and
pop
mov
addl
inc
push
ret
arpl
test
add
add
push
call
and
pop
mov
addl
inc
push
ret
cltd
scas
mov
js
lea
add
test
add
add
popf
rcll
pop
jmp
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
ljmp
lea
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
pop
xor
cmpl
jne
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
lock
push
inc
loop
xor
dec
pushl
pusha
jmp
mov
xchg
mov
mov
inc
jl
inc
orb
clc
popa
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
pop
sbb
movl
mov
xchg
jl
jmp
cmp
jmp
je
pop
push
push
push
pusha
pusha
popa
jns
popa
rdtsc
pusha
pusha
popa
push
pop
popa
pop
pop
xchg
adc
pushl
jmp
mov
mov
or
pop
call
mov
mov
jmp
loop
jbe
cmp
orl
add
orl
decb
add
push
call
and
pop
mov
addl
inc
push
ret
sub
dec
mov
mov
add
adc
mov
mov
mov
lea
mov
mov
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
push
or
add
mov
sub
shl
xchg
mov
or
call
and
pop
mov
addl
inc
push
ret
jo
inc
push
push
xchg
adc
xchg
rorl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
fwait
ret
mov
add
add
stc
incl
sbb
gs
mov
cltd
out
mov
mov
popa
push
jne
push
push
pusha
popa
rdtsc
jae
pop
pop
mov
and
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
pop
xor
mov
mov
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
and
push
add
add
lret
rcrb
lcall
and
pop
push
jo
jno
push
push
rdtsc
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
ljmp
mov
pop
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
shlb
sub
mov
call
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
loop
loope
xor
xchg
xor
in
sub
and
jbe
add
push
push
call
and
pop
mov
addl
inc
push
ret
xor
or
movsb
cmp
test
jno
ss
cmp
mov
jmp
push
sbb
lret
add
int3
sub
lahf
movb
push
push
call
and
pop
mov
addl
inc
push
ret
into
sbb
or
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
imul
movsl
adc
decl
mov
mov
mov
lea
mov
push
push
pusha
push
push
rdtsc
pop
pop
jmp
hlt
mov
add
cmp
mov
and
adc
xor
add
push
call
and
pop
mov
addl
inc
push
ret
mov
cmp
lods
xor
xor
push
jae
and
lea
push
push
call
and
pop
mov
addl
inc
push
ret
adc
lcall
add
add
imul
cmp
and
sti
inc
pop
mov
repnz
icebp
mov
pop
add
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
mov
push
push
jbe
pusha
popa
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cs
xchg
outsl
nop
inc
mov
push
push
push
call
and
pop
mov
addl
inc
push
ret
testl
mov
push
xor
call
call
pop
mov
outsl
ret
imul
mov
pop
xor
lea
jl
jns
mov
call
mov
cmpl
jne
sbb
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
in
push
mov
add
xor
and
out
pusha
push
sub
or
push
je
push
mov
pop
push
jmp
adc
xchg
dec
aam
push
dec
push
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
jl
xchg
repz
out
mov
call
jg
sub
mov
jmp
call
pop
sub
mov
and
lea
mov
nop
jmp
or
adc
lods
in
jns
cmp
push
push
push
je
rdtsc
jmp
jb
cmp
test
mov
sbbb
or
pop
nop
push
push
call
and
pop
mov
addl
inc
push
ret
insl
pop
fistpll
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
ljmp
cmp
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
rcrl
and
orb
sbb
call
and
pop
mov
addl
inc
push
ret
inc
test
hlt
jmp
aad
jns
lret
pushf
mov
decl
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
subl
int
js
std
mov
push
stos
mov
testb
mov
mov
jmp
mov
mov
out
mov
mov
in
or
cmp
jae
mov
movzbl
mov
mov
pusha
adc
mov
popa
mov
sub
shr
mov
mul
call
xor
inc
mov
pop
sub
mov
mov
movzwl
jmp
adc
xor
mov
mov
add
mov
add
mov
cmp
jae
mov
jmp
mov
mov
jmp
mov
jno
ljmp
in
xor
sbb
add
mov
andl
mov
mov
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
adc
push
push
call
and
pop
mov
addl
inc
push
ret
je
mov
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
push
loope
aam
stc
mov
push
push
call
and
pop
mov
addl
inc
push
ret
fs
pop
xchg
dec
cli
mov
and
jmp
or
aad
lock
pop
mov
cld
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbbb
or
dec
xor
add
add
push
call
and
pop
mov
addl
inc
push
ret
mov
aam
xchg
push
test
mov
lods
xor
shr
add
sub
jne
mov
push
push
call
and
pop
mov
addl
inc
push
ret
ja
int3
add
or
push
push
call
and
pop
mov
addl
inc
push
ret
aaa
xor
lods
xor
and
xchg
lea
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
and
cld
jmp
or
pusha
fimuls
or
jb
lds
jns
mov
push
push
call
and
pop
mov
addl
inc
push
ret
enter
cmp
mov
pusha
mov
mov
popa
add
popa
push
mov
mov
add
mov
mov
shr
add
mov
pop
push
push
call
and
pop
mov
addl
inc
push
ret
dec
jg
mov
add
add
add
add
and
pop
mov
addl
inc
push
ret
shlb
push
test
add
add
pop
call
xorb
adc
xchg
sti
fidivs
sub
ficomps
mov
add
test
add
mov
mov
add
lea
call
dec
lret
fidivl
icebp
flds
pop
mov
jmp
push
push
call
and
pop
mov
addl
inc
push
ret
loop
inc
dec
aas
shlb
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
lock
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
add
sub
inc
mov
mov
cmpl
jbe
jmp
in
ret
pop
ficoms
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
sub
xchg
fmull
push
je
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
jo
pop
sub
xchg
push
sub
pop
and
stc
or
je
call
cmp
inc
add
sub
sub
mov
mov
xor
js
nop
jge
jmp
pop
lret
rcrb
lcall
push
jmp
push
sub
xor
add
add
and
pop
mov
addl
inc
push
ret
shrb
mov
add
add
adc
add
loop
xor
cmpsb
mov
loopne
ja
cmp
sbb
fwait
cmp
call
incl
pop
add
jmp
adcl
push
push
rdtsc
pop
pop
rdtsc
push
push
rdtsc
pop
pop
pop
pop
popa
push
push
push
push
push
rdtsc
pop
pop
pop
pop
mov
push
push
push
jmp
push
lods
dec
gs
stc
stc
rdtsc
push
push
rdtsc
pop
pop
pop
pop
pop
mov
push
push
jmp
xchg
int3
xor
mov
ljmp
rdtsc
pusha
js
pusha
popa
popa
pop
pop
mov
pusha
jmp
gs
es
lcall
add
push
xchg
lea
rdtsc
pop
pop
pop
pop
popa
pop
push
push
call
and
pop
mov
addl
inc
push
ret
nop
mov
cltd
add
pop
call
or
mov
call
es
loop
mov
xchg
add
add
jmp
jg
mov
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
jo
mov
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
pop
mov
mov
add
add
xchg
pushf
shl
mov
mov
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xor
dec
mov
jmp
xor
push
pop
mov
jge
dec
ret
jmp
repnz
mov
push
outsb
xchg
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
add
add
mov
or
xor
rorl
call
incl
pop
add
addl
add
pusha
push
pop
push
pop
popa
push
push
jae
jne
pop
mov
push
jbe
push
pop
pop
mov
pusha
push
push
push
push
rdtsc
pop
pop
rdtsc
jge
pop
pop
js
push
pop
popa
mov
pusha
push
push
je
rdtsc
push
push
rdtsc
pop
pop
pop
pop
jl
push
pop
popa
pop
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
enter
add
xor
lea
push
push
call
and
pop
mov
addl
inc
push
ret
int
js
nop
leave
pusha
push
mov
pop
mov
popa
jmp
xlat
adc
push
add
add
xor
push
mov
dec
dec
shl
push
push
pusha
jl
jmp
cmp
xor
nop
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
add
pop
jo
xor
lahf
xchg
popa
jle
push
adc
pop
movl
push
push
call
and
pop
mov
addl
inc
push
ret
xor
rolb
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
xor
sub
call
dec
pop
mov
cltd
add
add
add
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
scas
push
push
call
and
pop
mov
addl
inc
push
ret
jns
xchg
mov
add
cmpl
jne
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
pop
or
jbe
mov
pushl
jns
mov
call
adc
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
xor
mov
xchg
push
pusha
pusha
popa
jns
popa
pop
push
pusha
jne
jge
push
push
jmp
in
dec
jecxz
lret
add
clts
lea
xor
pop
pop
popa
xchg
jmp
jmp
sub
test
mov
mov
or
call
and
pop
mov
addl
inc
push
ret
xchg
jge
mov
jmp
rol
push
mov
sbb
stos
dec
dec
call
push
push
call
and
pop
mov
addl
inc
push
ret
es
xor
add
mov
or
call
and
pop
mov
addl
inc
push
ret
in
mov
jae
mov
mov
xor
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
push
ret
rcrb
addl
add
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jge
call
mov
add
add
or
mov
pop
mov
push
mov
pop
lea
mov
adc
push
jmp
lret
and
push
inc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
icebp
cwtl
push
push
xchg
rorl
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
mov
adc
jmp
push
xchg
js
add
rcl
call
or
xchg
push
push
push
push
pop
rdtsc
push
pop
pop
pop
pop
push
pusha
push
push
push
rdtsc
pop
pop
pop
jmp
dec
sbb
xchg
sub
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
into
sub
mov
mov
popa
call
push
push
call
and
pop
mov
addl
inc
push
ret
idivl
mov
push
mov
pusha
mov
pusha
mov
sub
popa
popa
cmpl
je
mov
push
pusha
jmp
daa
nop
enter
and
cwtl
ret
jmp
or
and
aad
test
inc
dec
mov
xor
push
push
call
and
pop
mov
addl
inc
push
ret
dec
inc
out
inc
mov
stc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
movsl
mov
call
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
mov
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
loop
mov
movsl
or
call
jmp
xor
fs
repnz
je
push
push
call
and
pop
mov
addl
inc
push
ret
mov
test
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jl
xchg
rclb
movb
mov
movl
mov
jmp
sub
mov
push
push
call
and
pop
mov
addl
inc
push
ret
es
add
mov
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
jp
and
bound
xlat
xchg
mov
add
add
push
rdtsc
pop
pop
je
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jl
add
sub
mov
push
jmp
jb
scas
jne
push
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
mov
mov
push
add
add
pop
jmp
push
mov
cmp
add
or
add
leave
js
xchg
arpl
mov
add
cmp
xchg
cmp
add
add
add
and
pop
mov
addl
inc
push
ret
mov
leave
nop
mov
lea
push
push
call
and
pop
mov
addl
inc
push
ret
hlt
pusha
jge
sbb
ja
mov
popa
call
mov
cmpl
jne
mov
mov
cmp
je
push
push
call
and
pop
mov
addl
inc
push
ret
add
int3
sub
lahf
push
mov
mov
push
jmp
lret
inc
jnp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
std
dec
xorl
xchg
cld
call
push
push
call
and
pop
mov
addl
inc
push
ret
lods
mov
add
jmp
inc
xchg
cld
xchg
out
jo
jnp
or
pop
jmp
call
pop
sub
push
push
call
and
pop
mov
addl
inc
push
ret
fists
mov
repnz
aaa
and
imul
pop
push
push
call
and
pop
mov
addl
inc
push
ret
dec
cmpsl
insb
sbb
jb
jmp
lahf
push
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
outsl
fs
push
push
call
and
pop
mov
addl
inc
push
ret
dec
lods
gs
jo
or
add
mov
bound
add
and
and
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
incl
sub
push
push
push
call
and
pop
mov
addl
inc
push
ret
push
jns
pop
popa
jmp
sbb
adc
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
loope
cmc
mov
sub
mov
jmp
mov
mov
mov
out
mov
in
movzwl
cmp
jae
sub
movzbl
mov
mov
cmc
mov
jns
mov
shr
mov
jmp
pop
stos
data16
insl
dec
mov
jmp
xor
inc
bound
add
out
mov
and
mov
jle
xor
mov
pusha
mov
mov
popa
jmp
jle
mov
mov
add
add
sub
add
sub
cmp
jae
mov
jmp
add
jmp
je
out
ret
mov
xor
and
je
mov
andl
and
mov
push
add
pop
jmp
lea
push
push
call
and
pop
mov
addl
inc
push
ret
xchg
dec
arpl
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sub
xor
jmp
inc
shrl
loopne
call
push
push
call
and
pop
mov
addl
inc
push
ret
jmp
lock
add
add
repz
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sub
pop
and
push
push
call
and
pop
mov
addl
inc
push
ret
jl
lret
mov
add
add
pop
mov
popa
mov
cld
push
push
call
and
pop
mov
addl
inc
push
ret
adc
call
mov
sub
mov
mov
sub
push
push
call
and
pop
mov
addl
inc
push
ret
adc
sldt
add
cmpsl
stc
aaa
ds
jmp
mov
lods
xor
shr
add
sub
jne
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
dec
movswl
push
push
call
and
pop
mov
addl
inc
push
ret
ret
mov
jl
xchg
and
or
push
push
call
and
pop
mov
addl
inc
push
ret
lret
orl
lret
pop
dec
inc
cmp
lcall
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
xchg
pop
fsubl
test
adc
add
mov
mov
jle
shl
mov
popf
add
cli
leave
jno
mov
push
push
call
and
pop
mov
addl
inc
push
ret
call
add
add
and
push
mov
mov
add
mov
mov
shr
add
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jno
and
mov
mov
xchg
sub
fiadds
pop
add
test
add
push
push
call
and
pop
mov
addl
inc
push
ret
lcall
mov
call
ds
repnz
loope
call
imul
cltd
mov
pop
pop
lea
jmp
mov
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
out
cmpl
je
push
push
call
and
pop
mov
addl
inc
push
ret
push
ret
rcrb
lcall
cltd
jne
push
jg
fs
in
into
out
mov
cmpl
jbe
push
push
call
and
pop
mov
addl
inc
push
ret
shl
push
mov
pop
pusha
push
push
call
and
pop
mov
addl
inc
push
ret
fucom
xchg
movswl
mov
mov
mov
and
mov
mov
or
je
push
push
call
and
pop
mov
addl
inc
push
ret
fstpt
mov
xor
add
xor
push
push
call
and
pop
mov
addl
inc
push
ret
mov
push
push
push
pusha
pusha
popa
jmp
cmpsb
mov
sub
mov
bound
popa
rdtsc
push
pusha
popa
pop
pop
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
pop
mov
orl
or
add
mov
mov
dec
jno
and
add
add
or
push
mov
in
test
push
sbb
loop
fs
mov
lret
adc
cmc
sub
or
add
xchg
insl
mov
jg
cmp
mov
pop
push
push
push
call
and
pop
mov
addl
inc
push
ret
mov
sub
xchg
in
push
push
push
push
jmp
incl
sbb
pusha
popa
pop
pop
rdtsc
pusha
pusha
popa
pusha
popa
popa
pop
pop
xorl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
xchg
push
sbb
call
and
pop
mov
addl
inc
push
ret
outsl
std
dec
xorl
sub
or
xor
add
push
push
call
and
pop
mov
addl
inc
push
ret
in
and
add
add
xor
int3
fisttps
or
mov
jnp
xchg
jp
pop
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
dec
les
mov
movl
push
push
call
and
pop
mov
addl
inc
push
ret
pop
fists
adc
add
adc
ret
mov
pop
mov
push
push
call
and
pop
mov
addl
inc
push
ret
out
push
xor
mov
mov
pusha
add
adc
popa
mov
push
push
call
and
pop
mov
addl
inc
push
ret
outsb
notl
mov
xchg
shl
popf
or
mov
je
jmp
into
mov
out
and
cmp
and
adc
fmuls
pop
mov
mov
mov
xchg
push
jmp
into
lds
div
pop
push
push
push
push
push
jmp
aad
push
nop
fsts
stc
jo
mov
jb
jge
xor
rdtsc
pop
pop
pop
pop
rdtsc
push
push
jo
rdtsc
push
pop
pop
pop
pop
pop
xchg
push
push
call
and
pop
mov
addl
inc
push
ret
cmp
mov
fnsave
or
in
daa
push
push
jnp
jge
pop
addl
adc
push
pop
lea
push
push
call
and
pop
mov
addl
inc
push
ret
fstpt
mov
nop
push
push
jge
jge
rdtsc
jmp
ret
sbb
push
jmp
xchg
mov
jno
adc
rcll
nop
movswl
movswl
call
push
push
call
and
pop
mov
addl
inc
push
ret
add
jg
aad
inc
pop
xchg
mov
popa
pusha
adc
popa
movl
mov
clc
cmpl
je
jl
and
jmp
mov
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
xor
add
shr
xor
add
pop
sub
jne
jmp
push
shr
sub
xor
pop
sub
xor
sub
jne
jmp
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
jge
in
mov
call
sub
test
xchg
loope
sbb
push
inc
push
mov
push
push
mov
pop
ja
mov
cmpl
jne
push
push
call
and
pop
mov
addl
inc
push
ret
adc
and
aad
cmpl
je
add
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adcb
add
add
sbb
add
jmp
jle
adc
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
enter
pushf
mov
push
push
call
and
pop
mov
addl
inc
push
ret
sbb
jp
movl
push
push
call
and
pop
mov
addl
inc
push
ret
mov
movsl
push
insb
fldcw
add
fistpl
pop
pop
xchg
iret
je
mov
push
pusha
push
push
pusha
popa
rdtsc
push
pop
pop
pop
push
jmp
pop
jge
add
pop
repz
mov
push
push
call
and
pop
mov
addl
inc
push
ret
or
cmp
or
pushl
mov
call
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
cwtl
inc
icebp
dec
lods
xor
and
jge
test
mov
add
sub
add
add
push
call
and
pop
mov
addl
inc
push
ret
fstp
mov
repz
enter
add
add
xorb
out
xchg
rcr
xchg
lea
mov
push
push
call
and
pop
mov
addl
inc
push
ret
push
sub
xor
push
inc
loop
push
mov
pop
or
add
or
mov
push
push
call
and
pop
mov
addl
inc
push
ret
mov
adc
cli
clc
cmp
popa
mov
cmp
popl
add
add
add
add
mov
add
push
push
call
and
pop
mov
addl
inc
push
ret
or
mov
pushl
sub
call
push
push
call
and
pop
mov
addl
inc
push
ret
xor
stc
or
push
add
add
pusha
popa
rdtsc
jnp
pop
pop
push
jg
jl
jmp
inc
xor
je
mov
cmpsb
arpl
xchg
push
mov
pop
jmp
test
stos
cli
jnp
fmull
shl
stos
and
mov
or
add
adc
push
call
and
pop
mov
addl
inc
push
ret
cwtl
push
add
popa
mov
cmpl
je
add
xchg
jne
push
push
push
push
rdtsc
pop
pop
rdtsc
jne
pop
pop
push
jmp
insl
mov
cmc
or
mov
pop
pushl
push
push
call
and
pop
mov
addl
inc
push
ret
or
aam
lock
xchg
int
mov
call
pushl
call
fwait
jnp
mov
inc
pushf
mov
sub
call
mov
cmpl
je
push
jo
ja
pop
mov
mov
sub
movb
push
push
call
and
pop
mov
addl
inc
push
ret
inc
mov
jnp
inc
jge
jle
pusha
add
jl
popa
mov
popa
movl
mov
jmp
mov
mov
push
push
call
and
pop
mov
addl
inc
push
ret
jno
jb
pop
imul
mov
sub
add
mov
sub
lea
push
pushl
mov
call
pop
sub
and
cmpw
jne
movzwl
add
cmpl
je
sub
jmp
mov
mov
add
movzwl
mov
mov
mov
add
mov
add
mov
add
mov
popl
add
jmp
push
mov
subl
pop
xor
ret
cmpl
je
movb
push
pushl
lea
call
push
call
mov
mov
call
pop
pop
mov
pop
jnp
mov
add
mov
sub
jbe
mov
clc
add
mov
xor
push
call
fucomi
xchg
shrl
adc
fldt
sub
fiadds
pop
xor
movzwl
mov
mov
sub
sub
mov
cmp
jne
and
mov
stos
mov
pop
inc
fdiv
inc
stos
cli
and
hlt
push
ds
scas
out
inc
stos
cwtl
sbb
call
push
jmp
ss
out
mov
mov
fldt
and
sbb
fdivp
out
ret
out
push
stos
pop
std
sbb
mov
stos
stos
repz
lret
mov
repnz
stos
mov
adc
repnz
stos
cli
sub
pop
cs
stos
lcall
sahf
imulb
dec
stos
inc
and
aas
and
ret
mov
out
dec
std
or
cwtl
xchg
sub
cli
adc
inc
fdiv
inc
stos
cli
and
pop
cs
stos
xchg
sbb
inc
or
call
aad
in
cmp
pop
into
mov
xor
lods
iret
jg
std
mov
lock
loop
shrb
sbb
insb
jb
lahf
mov
adc
cmp
adc
lahf
leave
daa
mov
fdivs
sti
int
jns
notl
mov
inc
push
xchg
cmpsb
cmpsl
or
ljmp
pop
rcr
cli
addr16
lret
or
sub
jl
andl
pop
fmul
and
sub
and
in
call
jns
cmp
cwtl
stos
mov
repnz
push
movsb
sub
in
cmp
or
ja
inc
in
mov
jecxz
out
xchg
les
ja
and
cmp
sbb
data16
daa
jl
mov
mov
xor
adcb
inc
sbb
test
pop
lock
jl
lock
out
cmp
inc
pop
sub
or
sahf
js
in
sbb
inc
out
out
xorb
subb
inc
jecxz
mov
rcll
les
ja
es
or
and
testl
ds
and
pop
gs
dec
ret
xorb
pop
mov
inc
and
aad
xorb
pop
loop
or
out
in
mov
jnp
aam
fs
xchg
cmpsl
daa
jecxz
scas
daa
inc
adc
lcall
aas
and
cmp
out
andb
repnz
mov
fcomps
fwait
add
add
and
inc
mov
cmp
mov
sub
xchg
pop
inc
iret
out
sbb
lcall
iret
movl
movsl
jo
pusha
dec
les
lods
das
inc
lcall
adc
mov
sub
mov
dec
mov
mov
lcall
enter
enter
cmp
adc
enter
ds
movsl
rcr
imul
testl
enter
es
ds
sbb
mov
sbb
enter
fmuls
add
push
lods
dec
fnsave
pusha
jo
movsb
dec
sti
out
pop
repnz
mov
xchg
xchg
arpl
push
les
les
mov
popa
ds
pop
subl
pop
fnsave
dec
fnsave
fbstp
lods
lds
lods
fisubs
int
add
into
shl
pop
mov
iret
into
shl
cli
divl
push
inc
push
repnz
sbb
push
inc
ds
dec
push
icebp
adc
dec
lds
pusha
add
inc
sub
int3
mov
or
push
test
push
enter
clc
mov
mov
icebp
inc
dec
ret
ljmp
add
movsb
sub
or
inc
cmp
xchg
dec
inc
hlt
outsb
mov
test
daa
leave
fadds
cltd
inc
test
pop
cltd
ret
mov
lds
jae
inc
test
mov
mov
dec
xor
ljmp
test
mov
cmp
dec
in
mov
adc
test
xlat
ss
mov
dec
in
mov
adcl
ss
outsb
mov
test
jns,pn
subl
inc
test
call
inc
mov
fstpt
cmp
jno
fwait
stos
sbb
iret
rorb
movb
mov
insl
sbb
mov
push
leave
mov
dec
mov
or
mov
inc
movsl
js
fdivs
call
dec
dec
push
fld
sbb
lds
ljmp
jmp
mov
lret
scas
fwait
inc
aas
fbstp
pop
fldt
fs
pusha
mov
mov
sbb
test
inc
mov
les
pop
adc
es
mov
pop
sbb
adc
aas
rorl
scas
cmp
mov
ret
adc
push
xchg
aam
add
adc
adc
scas
int
lea
lea
dec
es
repnz
fldcw
jbe
cmp
lea
cmp
mov
push
xchg
arpl
add
xchg
dec
es
repnz
jbe,pn
cmp
lea
xor
mov
add
xchg
inc
mov
mov
out
addr16
icebp
ja
insl
inc
repnz
call
inc
xor
cwtl
ljmp
fsubr
into
sub
test
rcrl
lock
enter
data16
notb
push
push
lahf
lods
fildl
outsl
sar
push
jo
inc
dec
inc
das
cmp
xchg
cs
xchg
bound
pop
aas
dec
sbb
fcmove
push
insb
adc
fisubrl
fisubrl
fisubrl
aas
push
sbb
ficompl
xor
jl
out
xlat
adc
push
imul
lock
jecxz
sbb
add
push
sbb
cmp
cmp
mov
xchg
push
cltd
add
mov
mov
repnz
jmp
fadd
sub
xchg
pop
pop
movsb
data16
icebp
ja
push
dec
push
rolb
shll
mov
rcrl
pop
sbb
adc
les
je
jecxz
dec
mov
sub
sub
popa
jne
sbb
fsubrs
fwait
sbb
lea
in
imul
stos
dec
push
ljmp
ficompl
out
xor
in
adc
fisubl
inc
xlat
popa
cld
loope
addr16
lret
xchg
outsb
xchg
call
sub
gs
addr16
and
push
out
shll
imul
sub
loopne
popa
pop
cs
repz
nop
jecxz
jne
adc
mov
push
scas
subb
xor
inc
push
dec
or
and
andb
repnz
mov
arpl
jl
jmp
movsl
shrd
inc
push
shlb
pop
cli
lds
xchg
loop
mov
xchg
push
cmp
push
in
and
xchg
mov
mov
and
testl
scas
ficomps
and
jbe
mov
cmp
pop
inc
pop
shll
adc
adc
lods
adc
pop
sub
dec
and
adc
fcmove
mov
mov
mov
pop
mov
bound
dec
aam
dec
rorl
lret
stc
push
cmpsl
jns
fidivrl
xchg
fmull
sub
imul
lret
push
test
aam
int3
popa
shrl
rcrb
addl
xor
xchg
decl
jae
stos
psllw
mov
push
sbb
lret
and
pop
cmp
adc
test
test
sbb
add
setne
fadd
lds
inc
call
xor
jo
into
shlb
add
sbb
rorl
xchg
addr16
push
xchg
jmp
inc
bound
adc
mov
cmc
out
mov
sub
lods
and
hlt
cwtl
popf
mov
mov
xlat
dec
inc
rcrl
mov
aas
int3
sbb
in
out
imul
push
inc
dec
mov
data16
mov
jmp
clc
icebp
or
js
or
popf
push
fs
mov
mov
sbb
popa
test
dec
and
mov
pushf
mov
jnp
out
loop
into
insb
fsubp
sub
in
jae
repz
push
adc
sarl
out
sahf
mov
ljmp
shlb
in
flds
mov
adc
adc
cwtl
sbb
jbe
xor
jecxz
ds
bound
pop
mov
xorps
shl
ljmp
push
orps
jmp
xchg
in
cmpsl
stos
inc
popf
aaa
das
add
test
add
in
mov
je
adc
aas
mov
add
arpl
ret
test
jmp
mov
data16
shl
or
es
jmp
and
jns
xchg
lock
mov
sbb
pop
stos
lcall
icebp
pushf
and
es
daa
sub
mov
lret
adc
sahf
jp
repz
adc
mov
push
and
dec
test
push
fisubrl
std
nop
in
jae
adc
dec
shrl
repz
setae
pop
dec
lahf
dec
jbe
dec
xor
cli
jae
dec
xor
rcl
cmovl
ss
hlt
jl
pop
sbb
fcmovbe
es
pop
test
mov
mov
jg
popa
ss
mov
ss
jns
rorb
repnz
jmp
imul
dec
pop
push
rorb
and
cmp
push
ret
test
inc
movsb
and
sbb
leave
pop
and
jno
out
dec
xlat
imul
in
call
mov
adc
fcmovb
cmc
jmp
fnstsw
mov
pop
into
popf
jne
test
repz
in
xorb
ret
divl
dec
popf
and
xchg
pop
in
jb
adc
fildll
cmp
inc
cld
fisttps
pop
mov
sbb
in
out
aam
inc
orb
notb
std
fisubl
and
iret
in
xchg
dec
std
adc
clc
pop
dec
shlb
movsb
mov
mov
dec
shlb
rorb
mov
adcb
pop
xchg
jge
add
sub
push
and
add
hlt
cmp
imul
je
fisubrl
cli
mov
mov
lea
movsl
hlt
xchg
sub
xchg
aam
mov
aaa
xchg
xorb
mov
test
cmp
xchg
mov
jae
inc
push
adc
xor
repz
shlb
cmp
bnd
adc
xchg
shrl
movl
push
mov
cmpsb
js
in
xchg
adc
ljmp
lea
out
shlb
push
add
nop
jg
sbb
add
inc
push
jle
add
mov
mov
pop
mov
cld
repnz
push
lea
push
outsb
or
and
stos
dec
insb
push
pusha
pushf
inc
sub
stos
inc
cltd
mov
sub
pop
mov
pop
mov
xchg
pop
sarb
mov
xchg
xchg
loop
push
push
cs
dec
mov
or
cmp
shr
inc
mov
jmp
mov
push
fisubl
sub
mov
add
les
add
fsub
sub
cwtl
xchg
lret
and
dec
fstl
or
dec
aas
xchg
add
adc
mov
cs
mov
dec
ret
jbe
inc
insb
push
push
sbb
stc
push
sbb
loope
mov
test
xchg
push
mov
roll
test
and
cwtl
rclb
add
jb
enter
xor
imul
leave
and
imul
sahf
psllw
cmpsl
rcll
or
nop
mov
pushl
xor
add
andl
int3
push
push
lock
jmp
cmp
xchg
aas
and
insb
adc
adc
orb
icebp
push
jmp
mov
mov
scas
pop
cmp
ljmp
iret
in
dec
push
and
xorb
sbb
das
ja
loope
les
loope
js
cmp
mov
cmpsl
dec
push
mov
nop
dec
push
inc
dec
sbb
mov
loope
push
cmp
test
aas
pop
mov
gs
fs
inc
cmp
mov
or
xlat
loope
out
icebp
ljmp
xorb
add
loop
fcom
sbb
pop
out
cs
rcrl
pop
movb
mov
or
mov
sahf
inc
cmp
repz
mov
cmp
mov
sub
adc
mov
add
lret
and
test
mov
cmp
inc
lods
dec
repz
subl
jmp
mov
mov
fidivrl
test
sbb
ss
push
imul
xchg
insl
add
idiv
and
bound
idivb
dec
and
pop
pop
lahf
ret
mov
cmpsb
dec
pop
push
mov
mov
lret
and
lahf
inc
push
xlat
lea
and
in
fs
cwtl
adc
xor
push
cs
pop
push
xlat
jno
adc
aaa
push
imul
jg
ljmp
mov
ds
sub
stc
je
push
push
dec
ljmp
sbb
and
push
adc
jle
bound
decb
cmp
jl
out
std
lea
mov
insb
pop
rorl
cmpsl
cmpsb
test
leave
std
or
js
loop
imul
rcll
jo
cmp
push
shll
stc
jl
jp
push
shr
les
ret
cmp
or
popa
dec
cmp
adc
mov
mov
in
push
andl
or
fcomip
dec
faddl
repnz
dec
ljmp
call
inc
sbb
adc
xchg
and
push
sar
rcrb
lcall
and
in
sub
cmpsl
add
sub
sti
lea
adc
jbe
or
mov
lahf
xchg
xchg
mov
sarb
hlt
into
xchg
mov
inc
xchg
popf
ljmp
rorl
cmc
push
push
test
das
cwtl
mov
scas
or
in
fwait
adc
mov
xor
je
push
lea
das
aas
push
adcl
pop
xchg
scas
arpl
xchg
mov
ror
mov
fimull
sub
ljmp
pusha
sbb
incl
jo
pop
sbbb
push
cmp
insb
add
int3
das
mov
aad
ret
add
mov
rorb
iret
push
loopne
jp
inc
lods
imul
pop
addl
and
out
xor
mov
or
cs
stos
sahf
js
sti
aaa
enter
sahf
xor
fldt
xlat
leave
pop
jae
fnstcw
pop
push
neg
mov
test
adc
andb
inc
jecxz
mov
addl
pop
clc
mov
or
fmuls
push
and
dec
sarb
in
xor
arpl
pop
int3
adc
inc
cmp
aad
lcall
insb
xchg
rcrl
cmp
cmp
jo
pop
in
in
push
pop
inc
lock
cwtl
xor
pop
jae
xor
jp
stc
adcb
ret
add
or
out
outsl
xchg
aam
add
or
insb
adc
out
jo
cltd
fstl
sbb
mov
mov
pop
nop
adc
fcmovu
rorb
push
lock
aas
sub
xor
mov
dec
adc
fcompl
lods
adc
xor
pop
test
or
and
push
mov
cli
and
es
repnz
mov
into
xor
shlb
idiv
inc
hlt
sub
mov
sub
test
push
pop
adc
and
stos
shl
lret
rorl
pop
test
pushf
pop
sbb
int
adc
jg
jne
imul
jb
mov
leave
xor
insb
add
adc
fcmovu
shlb
insl
adc
fisubrl
pop
scas
stos
add
aas
adc
fcmove
popa
xchg
push
popa
or
icebp
cmp
xchg
push
fisubrl
add
ja
mov
pop
dec
mov
mov
outsb
cmp
into
mov
cmp
aas
lcall
sub
stos
movsb
insb
imul
test
push
ficompl
loop
sbb
pop
popa
mov
pop
jbe
out
aad
aaa
cltd
sti
xchg
push
fs
or
adc
fbstp
cltd
mov
in
sub
mov
pusha
pop
mov
fidivl
fisubrl
lock
mov
hlt
pusha
arpl
pop
aas
sbb
adc
lahf
push
fwait
or
xchg
inc
rolb
sbb
shrb
inc
dec
sbb
fidivl
mov
sbb
mov
xchg
hlt
gs
stc
popl
mov
out
push
mov
inc
mov
les
pop
sbbl
dec
lret
pop
dec
lret
pop
dec
lret
pop
dec
lret
pop
dec
lret
pop
dec
lret
pop
dec
lret
pop
dec
lret
pop
dec
lret
pop
dec
lret
push
xchg
lret
data16
dec
push
enter
jo
lea
jne
xchg
dec
mov
aas
icebp
xchg
inc
pop
sbb
lahf
loop
push
addl
shll
cmpsl
sbb
mov
dec
test
cmpb
mov
notb
popa
rorb
gs
imul
sarl
arpl
fdivrl
aaa
stc
shll
xlat
lea
enter
mov
dec
je
or
push
cmp
pop
mov
mov
push
addl
cmpsl
inc
ja
sub
iret
jmp
jmp
and
sbb
or
dec
in
jb
lret
loop
pop
pop
sub
mov
int3
xor
aaa
xchg
jno
loop
cmc
pushl
repz
mov
test
mov
pop
dec
cmp
movsb
in
pop
jo
add
es
xor
mov
pop
push
stos
lahf
ds
mov
iret
test
and
roll
mov
jbe
loope
jge
into
les
ret
xchg
orl
push
stos
mov
fistps
mov
and
sub
cwtl
cwtl
cwtl
adc
dec
sbb
iret
dec
in
xchg
push
add
xor
divl
ss
pop
dec
lret
push
mov
xlat
aam
adc
mov
into
outsl
aad
push
cmp
movsb
sarl
xchg
mov
lcall
add
mov
adc
xchg
lods
sub
xor
sbb
notl
sbb
into
pop
jle
lods
es
cwtl
pop
aad
jnp
pop
out
xchg
aaa
lret
movsl
lcall
mov
push
out
in
xor
jecxz
mov
in
and
inc
sub
or
lret
insl
fldl
mov
and
lcall
xchg
or
and
xor
dec
xchg
dec
pop
cmp
add
nop
adc
neg
inc
mov
repnz
rorb
insb
dec
xchg
sub
and
cmp
sar
cmpb
xor
fwait
repz
iret
movsb
mov
mov
wbinvd
sarl
add
ret
mov
and
or
push
movsl
adc
fldenv
jnp
mov
test
movsl
in
xchg
or
pop
xchg
or
or
pushf
dec
stc
hlt
enter
adc
repz
lcall
stc
cmc
sahf
xor
test
mov
push
mov
mov
jg
iret
idiv
add
jp
repz
cmpsb
xchg
lret
sbb
dec
xchg
push
pop
addr16
mov
cld
mov
jmp
cmpsb
jge
outsb
js
dec
lret
mov
inc
es
sbb
int
push
push
inc
arpl
enter
pop
dec
xlat
shlb
fmuls
fs
pop
xchg
in
fimuls
mov
pop
jb
inc
ret
cwtl
iret
test
in
cmp
aam
int3
sbb
sbb
add
pusha
jo
cmp
mov
out
cltd
push
imul
leave
jns
js
decl
lret
pop
mov
xchg
sbb
cmp
in
sti
mov
imul
pop
fsubl
lods
enter
movsb
lcall
repnz
lods
enter
push
cmp
mov
lahf
pop
into
rcll
shrl
mov
cmc
sub
xor
adc
mov
ss
test
in
mov
clc
flds
es
pop
add
sub
in
push
pop
stos
cmp
call
and
or
or
outsb
adc
mov
fcom
or
dec
stos
popa
jmp
push
jno
dec
lret
jbe
mov
adc
movsl
lods
ljmp
popf
mov
xorl
xor
out
loop
scas
add
pop
add
nop
cmp
in
movsb
aad
mov
xchg
int
mov
in
stc
adc
fs
scas
jg
jle
mov
hlt
dec
adc
ret
push
and
add
push
popf
cli
adc
mov
rorl
popf
popa
push
mov
fidivrs
je
or
ljmp
and
fisttps
aas
sbb
mov
test
dec
lret
or
jge
jbe
adc
sbb
mov
movsb
test
mov
ss
fnstenv
sub
scas
add
or
rclb
or
icebp
lods
inc
scas
add
pop
add
inc
cmp
xchg
cwtl
lret
pop
aam
int
or
sbb
cwtl
lret
loop
add
aas
jge
pop
add
testl
dec
pop
sub
cmpsl
mov
fsubs
jg
adc
aas
icebp
ljmp
mov
mov
or
cmpsb
fwait
mov
push
stos
lahf
insl
or
in
clc
or
jne
stos
imul
imul
pop
mov
inc
fmul
data16
inc
flds
push
jbe
scas
ret
mov
push
lret
lods
sbb
dec
xchg
inc
dec
dec
lahf
nop
fcom
mov
sarb
xchg
test
arpl
sub
xorb
jne
mov
out
mov
jp
fdivl
fs
xchg
xlat
lcall
and
or
stos
lock
pop
imul
adc
add
data16
push
ret
dec
rcrl
inc
cltd
pop
cmpsl
out
mov
out
fcomps
push
js
lcall
mov
js
subl
popf
push
imul
xchg
adc
lret
or
inc
push
jg
mov
test
mov
jnp
xchg
or
mov
test
bt
sbb
movb
testb
hlt
push
and
xor
lods
dec
jecxz
sarb
cmp
aad
sbb
sbb
lret
sbb
add
ror
outsb
repnz
pop
xchg
add
ljmp
imul
jns
lods
idivl
lret
dec
shll
insb
test
mov
and
movsb
in
push
fcmovbe
daa
mov
scas
mov
mov
mov
lret
out
dec
xlat
flds
cmc
lret
pop
dec
push
and
test
in
rolb
rcl
leave
out
push
mov
lds
adc
xor
or
addl
mov
inc
fldln2
imul
xor
adc
mov
mov
pop
loope
jp
cld
repz
shll
mov
push
lods
add
mov
pop
bound
imulb
mov
out
cmp
rclb
rol
cmpsb
in
mov
mov
clc
mov
fidivl
mov
out
add
int
ficompl
jae
sahf
mov
pop
sbb
outsb
xor
xchg
std
shlb
mov
test
jle
push
lret
dec
pop
xorl
sbb
out
push
inc
mov
jp
mov
inc
rcr
rclb
sub
addr16
mov
sub
notb
xor
mov
outsl
repz
jb
insb
mov
sbb
cmp
outsl
push
gs
jle
rcll
mov
in
dec
dec
xchg
int3
mov
insl
and
sub
pop
mov
and
mov
shrb
stos
pop
mov
int
out
fwait
jl
in
rolb
int3
push
testl
iret
or
leave
dec
ja
icebp
or
add
mov
xlat
pop
test
pop
xchg
push
es
cs
mov
pushf
inc
fs
scas
push
or
sbb
adc
outsb
cmp
shrl
sbb
addr16
cwtl
movsl
and
jmp
icebp
add
and
mov
push
mov
aam
ja
rclb
xchg
fbstp
sub
or
vmovaps
mov
iret
es
fldenv
mov
iret
add
or
mov
and
ds
pop
inc
imul
pop
mov
pop
gs
push
push
arpl
fimuls
movl
mov
mov
nop
pop
lea
cmpsb
xor
daa
mov
insl
dec
lret
data16
jmp
jb
xchg
push
hlt
rcl
pusha
sbb
lret
jmp
into
lret
dec
aaa
fwait
inc
dec
pop
fwait
inc
pop
dec
daa
fwait
inc
dec
cwtl
lock
sahf
mov
shll
into
lcall
lret
data16
das
out
faddp
dec
nop
lea
data16
das
mov
out
inc
dec
insl
dec
lret
pushfw
mov
pop
dec
rolb
add
mov
push
push
mov
push
xor
pop
xchg
in
fsubp
cmp
sbbb
dec
lret
data16
adc
xchg
jmp
jno
or
imul
pushf
sbb
pop
dec
mov
push
pop
dec
lret
cmp
outsl
sbb
lret
push
arpl
inc
add
in
mov
outsl
cmp
push
pushf
loop
xchg
push
xor
jge
dec
lret
iret
adc
inc
pop
and
fdiv
sbb
pushw
mov
fsubrl
adc
outsb
cltd
std
fnstcw
push
cwtl
rol
leave
aad
pushf
push
roll
pop
icebp
pop
loopne
loopne
pop
mov
pop
mov
pop
rol
pop
daa
aas
outsl
je
ja
lcall
inc
cltd
das
ja
pop
inc
adc
loope
jg
cmpsb
cs
inc
xchg
loopne
mov
sbb
shrb
push
mov
fwait
pmullw
sub
scas
add
shrb
push
mov
fwait
pmullw
mov
scas
add
shrb
push
mov
fwait
pmullw
imul
shrb
push
mov
fwait
pmullw
imul
shrb
push
mov
fwait
pmullw
cmpb
loope
jg
cmpsb
cs
inc
xchg
inc
adc
loope
jg
cmpsb
cs
inc
xchg
mov
xchg
stos
shll
les
cmpsb
cs
inc
xchg
inc
adc
loope
jg
cmpsb
cs
inc
xchg
ja
and
push
mov
push
mov
mov
je
das
xchg
push
dec
mov
adc
mov
das
mov
dec
mov
cmpsl
lret
clc
push
scas
test
inc
lcall
ret
int
div
nop
test
adc
ja
nop
cmpb
xchg
xor
or
movsl
fsubl
in
fsubl
pop
xchg
xor
add
jl
sbb
mov
out
jmp
shrb
xchg
cwtl
fsubrp
imul
shlb
ja
nop
cmpb
xchg
xor
or
movsl
fsubl
in
fsubl
pop
xchg
xor
add
mov
test
sub
xor
je
mov
pop
push
test
les
ja
ret
xchg
xchg
shrl
ret
fists
outsb
cmp
rcl
push
cwtl
int3
test
mov
data16
xor
je
mov
pop
push
test
lret
je
xchg
xchg
mov
pop
jbe
dec
leave
pop
lods
fwait
jnp
jle
pop
push
mov
adc
jo
jne
ja
and
push
bound
xlat
push
pop
ret
lret
jb
xlat
push
hlt
mov
js
rcl
push
enter
lret
je
xlat
push
pusha
mov
nop
je
xlat
loop
push
sldt
enter
xlat
xchg
leave
sbb
xchg
je
push
pusha
push
mov
xlat
xchg
sub
jge
jmp
rcl
stos
les
je
dec
lret
jo
or
push
mov
xlat
xchg
pop
mov
loope
ret
pop
mov
loop
ret
repz
rcrl
push
test
jne
xlat
in
movsb
adc
add
xchg
je
clc
jg
int3
leave
add
xchg
je
pop
xor
ret
je
xlat
xchg
je
xlat
xchg
je
xlat
xchg
je
xlat
xchg
je
xlat
xchg
je
xlat
xchg
je
xlat
xchg
je
xlat
xchg
je
xlat
xchg
je
xlat
xchg
je
xlat
xchg
je
loop
lahf
ret
push
push
xchg
sub
and
and
mov
call
sbb
movsl
divb
outsb
test
or
xlat
test
mov
mov
nop
ret
ficomps
push
inc
hlt
inc
cmp
adc
rorl
xchg
popa
xor
cmp
out
test
repnz
mov
sub
adc
popa
pop
inc
pop
loopnew
pop
repz
std
mov
push
enter
inc
push
push
out
push
dec
sbb
sub
sahf
jno
iret
inc
lods
mov
int3
jne
sti
daa
mov
sub
loopne
shlb
xor
push
pop
xchg
movsb
test
dec
sub
adcl
iret
sub
in
or
sti
cmpsl
adcb
cmp
mov
mov
adc
bound
leave
movsl
cmpsl
mov
into
mov
adcl
cmpsb
mov
lret
sbb
out
or
into
pusha
leave
shll
std
push
nop
jp
push
xor
push
iret
movsb
ja
push
das
adcl
mov
sub
adcl
mov
test
push
dec
xchg
pop
pop
nop
xchg
dec
mov
pusha
leave
and
ds
adcl
cmc
sahf
daa
es
popf
bound
jo
jne
fwait
pop
pop
push
cmp
sub
mov
aad
fs
cwtl
and
push
fsts
iret
sbb
ret
je
xlat
shl
imul
xor
popa
mov
inc
cmp
pop
addr16
dec
push
push
popa
fisubl
cmp
add
addb
jae
add
and
mov
out
xorb
int3
fs
pop
cmpsl
and
loop
jne
aad
push
mov
adc
adcb
add
mov
je
fadds
cmpsl
and
push
push
addr16
mov
fsubrs
inc
addl
jne
ret
mov
rclb
insl
mov
sub
inc
and
xor
insb
xchg
scas
sbb
jno
insb
xchg
mov
cmp
mov
fwait
rclb
add
dec
testl
pusha
cwtl
fnsave
jns
fnsave
dec
cmpsb
push
xor
push
jecxz
push
test
cmp
mov
jns
cmp
adc
xchg
inc
mov
mov
imul
push
aas
add
jl
movsb
or
lock
pop
xchg
fimull
adc
js
mov
inc
mov
push
xchg
pop
push
push
dec
ret
sbb
push
stc
in
std
mov
lret
mov
icebp
push
xchg
lds
and
scas
sub
loop
or
push
xchg
push
dec
out
test
mov
cld
dec
loop
enter
dec
xor
pop
lds
pop
mov
push
add
mov
adc
fnsetpm(287
and
leave
cmp
lcall
mov
xchg
out
mov
cmp
jns
cmp
sbb
js
pop
cs
fcomps
add
pop
scas
cmp
pop
dec
and
lds
xchg
mov
jmp
mov
popf
fs
mov
ljmp
and
mov
les
repz
push
xor
mov
stos
sub
or
in
push
push
fs
jae
daa
ljmp
xor
enter
ljmp
jg
inc
movsb
cltd
int3
cmp
nop
adcb
jno
jge
popa
pop
add
adc
sub
add
scas
cld
arpl
out
popa
pop
movsb
push
lcall
pop
notl
or
push
jns
mov
dec
cmp
jae
mov
cmp
pusha
lock
cmc
cmp
nop
xlat
adc
fcompl
arpl
jmp
icebp
ja
cmpsb
jg
shlb
leave
cmpsl
mov
aaa
orb
cmp
jge
dec
out
js
and
mov
adc
push
outsl
stc
int
and
mov
push
fxch
ljmp
movb
jne
inc
lods
ret
fdiv
es
push
leave
iret
xor
mov
cmc
clc
cltd
ja
or
pop
test
push
dec
cmpsb
push
mov
xor
sub
dec
push
pop
cmpsl
nop
and
jbe
mov
cld
dec
loopne
stos
xchg
out
idivl
xor
push
popa
leave
inc
lds
dec
insb
sub
fdivrs
mov
popa
pop
ss
sub
cmp
dec
pop
inc
int3
aas
popa
pop
mov
fucom
repnz
pusha
push
push
mov
push
adcl
pop
xchg
test
movsb
lock
jecxz
outsb
inc
out
mov
pop
stc
and
inc
popa
les
xor
aam
jno
pop
xchg
lret
into
dec
mov
or
pop
dec
push
addl
push
pop
int
xchg
int
sbb
notl
sub
sbb
and
add
pop
inc
mov
jno
add
jl
mov
sahf
inc
pop
cwtl
push
mov
cltd
xor
out
mov
and
cmp
repnz
or
call
popf
inc
jecxz
jno
arpl
fstps
sub
jbe
aam
cmp
adc
xchg
jns
mov
push
dec
sub
jne
xchg
popf
ret
push
pop
xchg
stos
cmp
scas
mov
scas
dec
addr16
pusha
icebp
and
mov
mov
ffreep
mov
bound
jl
pop
mov
insl
nop
xor
sbb
pop
js
sbb
repz
sti
enter
popa
jne
xor
xchg
outsl
mov
std
les
insl
ds
add
mov
dec
xor
mov
xchg
cwtl
pop
out
pop
jl
dec
incb
fildl
mov
cmp
push
hlt
out
pop
imul
mov
jl
jne
rclb
fisubl
mov
inc
xor
mov
rol
and
or
imul
bound
pop
fisttps
mov
xor
rorb
aam
adc
stc
xor
xchg
movsl
fsubl
or
popl
mov
in
pop
leave
push
add
lods
add
insb
lods
or
adc
scas
pop
out
cmp
roll
rcrl
cmpsl
lret
icebp
cmc
xchg
mov
or
lds
rorl
roll
gs
iretw
pop
imul
sub
imul
mov
adc
pop
dec
mov
mov
ret
xchg
mov
test
bound
sub
lock
mov
cmp
dec
push
lods
jmp
lock
mov
testb
fs
adc
push
sub
xor
addb
mov
cmpsb
outsb
xor
mov
and
xor
cmpsb
ret
xor
sbb
movb
leave
mov
or
xlat
xchg
or
pop
xor
js
push
jecxz
imul
insl
mov
xlat
lret
jno
rcrl
inc
testl
lcall
out
xchg
adc
fistps
sbb
test
xor
test
xorb
les
add
mov
mov
loopne
test
mov
cld
mov
hlt
je
mov
jle
push
mov
or
xor
sub
xorl
pop
push
inc
pop
int3
push
mov
lret
jl
add
out
mov
cltd
push
adc
repnz
lods
cmp
add
mov
ficoml
mov
pusha
call
imul
jae
movsb
je
out
inc
inc
fists
or
jge
pop
add
dec
mov
or
sub
sbb
js
in
sahf
loopne
sub
movsb
fs
pop
xchg
into
js
lock
aam
jno
pusha
pushl
rcrl
shld
and
movsb
pop
jmp
repnz
leave
pop
insb
call
outsb
test
add
std
rcr
push
aaa
jg
pop
push
imul
and
xchg
fwait
out
rcll
mov
add
cmp
mov
aas
lea
loop
insl
mov
sub
push
shrb
iret
outsb
add
idivl
add
test
jnp
arpl
adcb
fdivrp
mov
or
fists
fwait
mov
mov
sbb
call
adc
hlt
xchg
roll
rorb
ret
dec
inc
lret
sub
xlat
pop
sbb
xor
clc
popa
push
adc
mov
xor
mov
or
enter
ret
fstpt
sbb
jnp
sbb
dec
push
sub
sahf
stc
sar
aam
test
jae
es
add
jne
jbe
cmp
jo
xchg
ljmp
enter
in
or
cltd
pop
mov
xlat
jmp
push
int
sahf
push
mov
xor
lret
jmp
mov
pop
cmpsb
jbe
popa
jecxz,pt
xchg
xchg
aad
inc
adc
aaa
jno
xor
pop
dec
dec
sub
xlat
loop
cmpsl
stos
pop
not
mov
push
ja
in
aad
xchg
je
fldcw
mov
sub
mov
rcl
xchg
je
adc
dec
push
push
pop
add
rcll
xor
dec
lods
sub
sbb
test
imul
push
int3
dec
cs
or
lret
stos
lcall
test
cmpsl
add
cli
push
loope
pop
ds
jae
clc
mov
lret
imul
jb
aam
std
pushf
int3
sbb
imul
cmp
mov
jae
popa
std
jle
iret
into
push
aad
cltd
sub
adc
into
inc
jne
and
aaa
pushf
cld
ror
push
bound
dec
push
push
cmp
imul
pop
pusha
push
push
dec
jp
es
lds
inc
sbb
loop
ja
mov
mov
push
pop
lds
int3
fstpt
add
aad
cltd
je
xchg
pop
int3
adc
iret
xor
mov
mov
add
inc
dec
mov
push
pusha
loop
xlat
loopne
out
xchg
sub
rcrl
add
xchg
je
lods
sub
das
jmp
jmp
fstpt
jecxz
ret
jg
cmc
jmp
mov
xlat
xchg
ds
jae
xlat
xchg
push
fdivr
into
sub
imul
mov
xchg
pop
and
push
imul
in
test
push
xchg
jns
cmpsb
add
ret
xlat
xchg
je
data16
jns
scas
cmc
or
add
xchg
je
outsl
sub
gs
mov
out
pop
movsl
and
in
sbb
aas
xchg
ds
jae
xlat
xchg
push
sbb
lret
sub
lods
imul
mov
xchg
push
and
insb
dec
fistpl
and
fistpll
dec
stos
ltr
xlat
scas
adc
xchg
mov
xor
adc
ds
pushf
cmpsl
outsl
mov
lds
clc
inc
dec
daa
mov
lcall
add
mov
pop
clc
icebp
lret
into
jmp
loop
enter
pop
clc
and
fwait
decb
sbb
mov
pushf
aam
add
aad
push
leave
into
cmp
sbb
ret
mov
nop
xchg
shl
icebp
sub
inc
mov
in
aad
leave
test
dec
cmp
pop
pop
js
arpl
xorl
enter
ror
hlt
pop
in
add
or
pop
inc
adc
loope
roll
inc
inc
gs
mov
mov
rclb
mov
fadd
mov
into
cmp
mov
cmp
mov
jl
out
dec
push
cltd
mov
out
xchg
sub
inc
mov
into
cwtl
in
add
test
aam
sbb
cmp
fbstp
mov
push
inc
rcrb
iret
stos
addr16
dec
or
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
push
xchg
clc
sub
jmp
dec
xchg
mov
stos
repz
insb
push
and
mov
pop
jmp
clc
dec
xchg
add
dec
push
mov
mov
xchg
or
js
fmul
xchg
mov
jae
daa
test
addb
cli
mov
mov
xchg
fbld
ss
sbb
dec
add
ss
mov
fcmovnu
xor
jno
add
lret
call
cmp
xor
jecxz
lock
lahf
std
lret
push
inc
test
or
sbb
xchg
mov
pop
sub
aaa
aaa
dec
fstps
xor
out
xor
je
icebp
dec
cli
pop
call
and
push
xchg
ror
lods
push
repz
mov
sub
in
dec
leave
cld
push
hlt
jo
leave
sub
mov
lret
out
or
lea
data16
sub
xor
dec
inc
lret
mov
pushf
aam
test
in
cltd
cmp
leave
in
inc
lret
push
and
mul
aaa
popf
rclb
stc
mov
inc
ljmp
sub
imul
mov
mov
out
xchg
arpl
lret
mov
xchg
stc
repnz
js
jl
movsb
adcl
ss
add
rcl
enter
adc
into
and
mov
daa
mov
mov
mov
loopne
dec
loop
mov
dec
loop
notl
stos
stos
lea
dec
cmpsl
mov
dec
rcl
jmp
mov
cmp
xchg
pop
lcall
sbb
invd
xor
outsb
pop
mov
mov
in
sub
adc
fincstp
movsb
mov
scas
sbb
cli
into
mov
fnstcw
popa
add
sub
add
jno
enter
aas
fistl
xchg
aaa
loope
push
xchg
clc
or
cmp
movsb
mov
aas
xor
add
dec
addl
adc
repz
adc
mov
or
shrb
sarb
sahf
pop
or
cmp
mov
xor
mov
and
fnstcw
ss
sbb
or
xlat
mov
adcb
pop
sub
out
add
or
dec
mov
negb
xchg
ja
out
xor
in
inc
fdivrs
clc
jmp
and
js
push
fcoml
sahf
pop
or
int
pop
jecxz
pushf
xchg
out
adc
jle
mov
scas
movsl
mov
adc
mov
push
call
and
sbb
sub
out
in
jecxz
out
mov
pop
lahf
xchg
popa
inc
loop
cltd
cmp
aam
pop
flds
cmp
insb
es
jae
xchg
inc
pop
in
mov
sbb
inc
and
sbb
xorb
movsb
sbbb
inc
dec
jl
jp
xlat
jbe
add
inc
sidtl
ja
inc
in
not
insb
cmpsb
addr16
lahf
sar
fldl
ds
int3
jp
dec
xchg
lea
mov
sbb
add
jecxz
jl
aad
sub
lret
ficompl
mov
xor
pop
aad
cmp
dec
mov
lcall
sbb
shl
test
aaa
pusha
cli
push
sub
xchg
adc
push
mov
sub
lret
mov
mov
aas
jne
lret
cltd
inc
nop
sub
outsl
mov
out
xchg
jg
testl
jne
data16
sub
js
adc
ficomps
fcom
ficoml
lods
push
cmp
sbbb
fldcw
xlat
enter
rcll
ret
or
aad
inc
mov
mov
inc
fistpll
cli
scas
scas
cltd
adc
test
jp
ss
mov
and
icebp
cli
clc
in
cli
jmp
inc
outsl
push
les
inc
push
cmp
cmp
lods
cmp
ror
lock
cmp
sbb
jbe
sbb
dec
icebp
sub
mov
lret
cmc
xchg
movsb
bnd
ret
arpl
dec
push
in
sbbl
sbb
std
adc
bnd
bound
push
test
jns
mov
inc
dec
call
cmp
cmpsb
repnz
xchg
insl
xor
push
push
dec
lods
scas
adc
pop
cmp
subb
sub
ss
pop
out
add
icebp
das
aaa
mov
in
lcall
adc
push
mov
ss
es
mov
repnz
jb
sbb
add
adc
scas
inc
add
aam
fisubrl
fisubs
fildl
mov
out
adc
push
or
inc
pop
sub
inc
pop
outsb
or
leave
mov
jns
jmp
xlat
out
mov
gs
fldcw
movsb
repnz
fs
push
test
lcall
pop
and
mov
stc
test
push
cmp
aam
mov
pop
nop
pop
mov
adc
leave
scas
scas
inc
sub
jge
icebp
jmp
cmp
push
jle
icebp
and
cmp
rcrb
outsb
xor
dec
add
lcall
pop
loopne
push
xchg
lods
fincstp
movsb
mov
aas
xor
dec
scas
std
pop
int3
mov
lahf
shrl
sub
dec
inc
lret
into
sti
sahf
xchg
out
xchg
rcr
jmp
rcr
shr
ljmp
js
icebp
or
lahf
std
lret
nop
xchg
xchg
pop
lcall
enter
aad
loopne
cltd
int3
pop
out
jp
sub
or
in
pop
pop
jl
cmp
in
adc
pop
pause
aad
lods
test
jl
clc
stos
insl
cwtl
movsl
clc
mov
in
and
clc
inc
dec
sub
out
sbb
faddp
nop
das
push
mov
js
out
ret
sub
jae
jge
sbb
arpl
cmp
das
test
push
loope
jmp
movsl
repnz
adc
sbb
inc
or
test
cmp
cltd
mov
insl
fwait
pop
xor
and
xor
push
ds
adc
and
xchg
dec
push
or
or
stos
or
leave
add
mov
cli
jmp
imul
pop
jne
cmp
jg
test
push
ret
enter
js
push
addr16
out
or
dec
faddl
inc
add
movsb
and
sub
or
leave
call
test
cmp
movsl
loop
insb
arpl
sub
cmp
xor
adc
bnd
push
mov
jo
negl
mov
popf
sub
jb
divb
fadd
jno
sub
lret
jg
lods
std
scas
mov
fists
leave
cld
jo
cmp
dec
sbb
inc
push
lret
imulb
push
add
sbb
std
outsl
jnp
xor
inc
jp
clc
cmp
test
cmp
sub
sbb
and
push
and
out
mov
pop
fcomi
icebp
dec
cmp
fldl
pop
jl
lea
mov
or
push
adc
aam
pop
jp
ja
in
jne
jl
dec
mov
xlat
int
inc
out
push
addr16
fldz
in
jp
xor
inc
pop
jle
push
daa
mov
pop
xor
mov
dec
sbb
inc
push
push
mov
adc
or
jg
int
adc
ljmp
xchg
fdivrs
pop
clc
scas
jle
jns
mov
stos
sbbl
add
js
dec
mov
sbb
pop
jecxz
adc
test
in
push
or
leave
add
loope
cmp
mov
movsl
mov
adc
fisubs
repnz
cmp
adc
aaa
push
out
js
dec
and
xor
jle
cli
loope
rcr
je
ljmp
movsb
arpl
mov
stc
in
sub
cmp
and
aad
sub
fisttps
pshufw
push
dec
sbb
das
jns
fmul
cs
jo
mov
lret
push
test
aas
jbe
std
repz
cmp
cmp
cmp
aas
pop
hlt
lret
int3
inc
ret
call
testb
adc
cmp
enter
inc
add
leave
cmp
cmp
mov
dec
nop
aad
xchg
sub
movsb
lahf
out
or
cmp
repnz
jo
aaa
lcall
pop
xchg
cld
daa
jg
push
loope
lods
or
sti
lds
sub
push
lea
adc
xchg
push
insb
cmpsb
adc
adc
pop
lods
cld
push
jg
inc
pop
inc
fidivrs
loopne
dec
mov
imulb
sti
aad
ds
dec
dec
out
fildll
pop
int3
in
popf
dec
push
es
jne
dec
sbb
inc
insb
pop
push
xchg
arpl
xlat
cmpsl
inc
mov
shrb
mov
jns
daa
xor
inc
lods
and
jle
fsubrl
hlt
mov
aad
test
dec
sbb
lret
mov
inc
jmp
mov
cmc
push
out
mov
pop
mov
mov
sub
xor
popf
dec
inc
add
cmpsl
pusha
test
inc
pushf
cmp
fsts
insb
inc
lret
outsb
push
es
pop
imul
cs
dec
in
push
xor
add
loop
lcall
mov
stc
cmp
loope
xor
mov
fwait
dec
ljmp
pusha
xchg
movsl
cld
mov
jno
xchg
pop
push
jb
fisttps
fidivrs
pop
inc
xchg
cmp
popl
imul
xor
iret
adc
dec
push
lock
sub
aaa
out
inc
loop
cli
adc
jmp
sub
div
insb
lret
pop
mov
or
into
mov
pop
repz
in
fistl
mov
test
jne
rolb
outsb
fildl
xlat
jns
mov
fidivrs
push
fwait
cltd
das
push
ds
pop
jo
mov
inc
push
xchg
mov
mov
js
fwait
jp
or
lods
inc
xor
pop
mov
jg
movsb
mov
xchg
imul
stos
ficomps
popa
dec
js
cmp
sahf
pop
cs
sub
pop
ljmp
sub
or
dec
insb
jbe
mov
lea
jge
cmp
xor
popa
pop
inc
shrb
aas
jp
clc
sub
xchg
test
cmp
leave
stos
decb
test
inc
popf
adc
loope
jno
loopne
adc
test
into
rcr
enter
ja
fcomi
std
lret
sbb
ss
push
add
sbb
mov
mov
dec
ss
adc
fcoms
dec
add
xchg
cmp
mov
clc
xchg
inc
and
jl
das
fistpll
jp
mov
call
jns
jne
sub
xchg
insl
jge
clc
and
into
mov
iret
adc
in
fwait
cmpsb
aaa
in
inc
das
jae
or
mov
mov
in
popf
daa
sub
cmpb
fildl
xchg
mov
jns
out
or
dec
cld
pop
mov
push
xchg
ror
sub
sub
sbb
subb
pop
lcall
out
xchg
andl
push
ret
push
mov
daa
jecxz
and
mov
lret
lcall
loope
push
fadds
adc
bnd
push
addb
cmp
add
adc
ror
sahf
mov
gs
insb
push
xchg
lods
pop
jecxz
or
jmp
jle
stos
sub
xchg
xchg
pop
xchg
fs
or
mov
movsb
mov
mov
fwait
sahf
sbb
xor
xor
xchg
xchg
jmp
rcll
repz
adc
mov
or
rclb
adc
dec
icebp
cmp
cmc
icebp
insl
dec
mov
repnz
mov
pop
sbb
pop
mov
add
mov
mov
stos
sarl
lcall
scas
adc
out
gs
sbb
clc
push
inc
xchg
mov
jmp
and
scas
fwait
add
out
sbb
pop
rcl
in
dec
xor
pop
xlat
sub
outsl
sbb
sbb
fistpll
mov
dec
pop
mov
out
insb
shr
loope
pop
jecxz
sub
loop
jg
mov
movb
shrb
sbb
dec
pop
xchg
adc
mov
adc
inc
fisubl
push
lods
data16
pop
or
mov
pop
mov
adc
sub
insl
jle
daa
mov
clc
js
xchg
cli
xchg
xchg
add
bound
xor
in
mov
pop
add
cmpsl
lret
cs
outsl
and
mov
shrb
fs
out
sub
and
pop
jecxz
mov
flds
push
push
cmp
jae
sub
cmp
mov
dec
adc
loop
sbb
dec
push
test
jmp
stos
xchg
cmpl
nop
xor
sub
mov
sarl
dec
dec
and
leave
xor
sti
mov
out
in
and
cmp
setae
xor
cmpsl
ror
push
push
mov
sub
jae
movsb
inc
xchg
cltd
jecxz
push
xor
pop
jne
data16
xchg
and
xlat
or
out
jb
push
dec
sbb
std
loope
leave
mov
lods
bound
movsl
repnz
inc
outsb
jb
dec
movsl
repnz
fwait
lds
and
push
and
ret
mov
mov
outsb
enter
pushf
movsb
mov
pop
test
js
pop
std
mov
icebp
lret
andb
mov
nop
repz
xor
rorb
adc
scas
imul
inc
mov
bound
push
out
ficoms
adc
dec
and
mov
mov
inc
dec
hlt
sbb
cmp
jno
or
aam
iret
stos
fs
xor
jg
fnsave
leave
xchg
or
pusha
fstl
pop
and
ja
xchg
inc
sbb
out
outsl
mov
sahf
pop
ss
fsts
insl
fwait
pop
xor
in
cmp
stc
and
add
or
cmp
inc
pushf
sbb
add
sbb
jg
cmp
lret
sbb
lret
or
adc
mov
sub
add
push
cmpsl
jle
jae
push
jb
push
std
divb
dec
sbb
je
scas
insb
cmp
and
sub
dec
xor
fwait
cmp
popf
scas
mov
fstps
test
fwait
xchg
jge
mov
mov
cmp
orl
pusha
out
clc
push
divb
dec
in
mov
addl
xor
shrb
ss
ret
cld
cltd
sbb
push
xchg
insb
pop
cld
or
push
test
lods
orl
add
sub
xor
jno
shlb
mov
mov
mov
or
jmp
roll
lret
sub
shrl
in
ror
jnp
cmpsl
cvtpi2ps
jge
shl
push
in
test
les
pop
insl
inc
sbbb
loopne
cmpsl
stos
test
in
in
fistpl
xchg
lahf
out
out
mov
repnz
or
xchg
push
dec
insb
cld
mov
jo
imul
imul
and
mov
rcl
fcoms
and
jp
repnz
jne
or
lahf
mov
push
insb
fdivr
repz
mov
sbb
maxps
jae
movsb
repnz
add
dec
daa
xor
pop
mov
mov
ret
xchg
pop
or
fistps
fists
pop
imul
dec
pop
mov
aad
xor
in
xchg
mov
pop
dec
push
push
popl
or
xor
cli
mov
and
dec
cmpsl
lods
fwait
popf
mov
mov
leave
jmp
mov
leave
int3
movl
adc
ret
iret
aaa
or
xchg
dec
add
jg
repnz
addr16
scas
sub
dec
jae
cmp
and
add
test
adc
movsb
mov
insb
pop
and
lahf
jbe
fs
movsb
push
push
mov
pop
push
pmullw
mov
dec
leave
sbb
outsl
out
ljmp
fdivrs
mov
arpl
icebp
icebp
xchg
movsl
setno
jns
dec
jle
fcomp
loope
cmp
loopne
jle
sub
jb
mov
cli
cmp
cmp
push
dec
mov
dec
jo
dec
adc
jl
repnz
push
and
lods
out
fadds
les
sub
aaa
jle
in
mov
xchg
ds
jnp
fildll
fsub
inc
shrb
adc
pop
mov
fs
pop
stos
xor
push
lcall
jno
int3
enter
aad
inc
mov
cmp
test
push
fcoml
sahf
pop
or
add
lret
int
loop
jp
fisubs
shll
aam
add
lahf
push
fldcw
nop
test
test
add
scas
mov
testl
mov
push
hlt
cmpsl
push
fmull
mov
lods
xchg
and
pop
xchg
ficomps
lcall
lret
sub
data16
mov
pop
mov
push
shrl
cmpl
ror
fwait
cs
mov
movsb
repnz
push
jge
add
dec
cmc
scas
stos
pushf
shlb
repnz
loopne
push
sbb
mov
outsb
loope
repz
mov
cmpsl
and
rorb
or
pop
scas
test
dec
ljmp
xchg
icebp
out
or
and
xchg
xor
test
negb
cmp
pop
je
push
pop
clc
cmp
sar
das
cmpsl
sbb
jns
dec
mov
xchg
orb
push
mov
push
loope
out
leave
out
add
mov
mov
in
xor
pop
scas
and
data16
ret
pop
js
and
pop
add
inc
cli
adc
and
mov
out
jnp
pop
mov
inc
ljmp
sbb
or
vpmaxsw
dec
popf
scas
xor
mov
repnz
fs
or
sub
mov
std
imul
sub
add
aad
fmuls
inc
jno
std
and
add
jo
sbb
push
shrb
test
setno
mov
ficoms
pop
dec
mov
dec
inc
sub
stos
lock
sbb
ret
sbbb
aam
shufps
add
dec
insb
pusha
in
jl
lock
adc
mov
rcll
inc
repnz
sbb
mov
and
sub
aam
xchg
dec
xchg
test
rcl
pop
jne
repnz
mov
cmpsb
pop
and
push
jbe
in
pop
mov
aam
and
lcall
pop
lahf
xchg
movsl
out
fadd
pop
movsb
cmpsl
jmp
dec
aaa
in
rcrl
js
push
xchg
mov
aad
js
ljmp
or
rorb
movsl
add
je
ret
and
shll
sub
fwait
xor
xchg
fcomps
and
repnz
or
int
je
dec
sbb
out
insl
clc
dec
mov
pop
xor
push
ficoml
ljmp
jno
in
jno
mov
aad
pop
pop
int3
into
test
clc
dec
ficoms
in
dec
shrb
xor
dec
shll
jo
int
add
add
push
xchg
push
stos
movsb
mov
add
jo
cmp
xchg
test
inc
enter
lret
outsb
inc
add
pop
loope
popa
aad
hlt
mov
loop
clc
mov
dec
fs
repz
push
and
jo
dec
xor
cmpsb
daa
shr
lods
insl
jb
xor
repz
cmp
add
adc
jg
dec
outsl
or
xchg
clc
push
xchg
adc
push
pop
and
push
fs
push
xchg
inc
push
movsb
mov
or
push
xchg
clc
push
es
dec
imul
clc
notl
add
sub
clc
push
out
movsl
mov
stc
push
std
xor
push
push
add
push
mov
movsb
fsub
aas
jp
in
hlt
push
sti
mov
or
sbb
mov
das
ror
test
clc
jne
mov
aas
scas
push
in
mov
in
jge
clc
xchg
int3
mov
xorl
adc
add
jno
mov
out
pusha
push
sub
int3
jns,pt
sbb
inc
jl
fdivs
mov
pop
mulb
sahf
fwait
aaa
test
cmp
iret
mov
aam
iret
or
dec
xor
cmp
clc
movlps
je
mov
xchg
in
fdivr
push
hlt
cltd
inc
loopne
or
fadds
jbe
iret
mov
mov
or
std
inc
pop
insb
dec
loopne
or
stc
insb
jmp
aad
adc
imul
or
hlt
mov
loopne
or
mov
xlat
mov
test
or
roll
out
push
clc
aad
orb
push
insb
fs
in
jmp
cli
paddd
fs
in
jmp
subl
push
jge
shlb
in
jmp
sub
push
and
jmp
pusha
fbstp
out
stc
clc
arpl
and
orb
xchg
jecxz
stc
push
hlt
mov
mov
stc
insb
es
imul
cmpsb
mov
fwait
xor
cmc
hlt
nop
rcr
test
imul
jge
mov
xor
lods
fistl
rolb
or
clc
xor
pop
stos
jne
cmpl
popf
sbb
aad
outsl
xchg
ss
pop
xchg
daa
sub
or
dec
jecxz
leave
test
arpl
xchg
test
iret
insl
movl
xchg
bound
jle
dec
mov
lret
jecxz
sub
mov
mov
into
shrl
xor
notb
fistpll
notb
rcrl
scas
mov
inc
push
test
ficoms
loopne
dec
fstl
push
ds
add
int
out
hlt
sbb
sbb
fcompl
lea
mov
cld
fbstp
popa
stos
sti
jae
xchg
jge
jno,pt
ljmp
lods
aaa
mov
fcompl
mov
xor
addr16
dec
mov
dec
add
xor
push
cmp
out
mov
add
mov
sub
mov
xor
pop
daa
and
inc
movsb
mov
bound
xor
nop
daa
negb
in
ljmp
mov
mov
jnp
push
jbe
xchg
sti
dec
mov
dec
and
xor
inc
jbe
mov
jle
mov
pop
pop
add
mov
mov
adc
mov
nop
mov
mov
jecxz
es
xchg
imul
aam
loopne
add
xor
jle
test
lock
and
cmp
sbbb
dec
mov
out
gs
sbb
jbe
xchg
in
push
pop
adc
mov
iret
lds
rcrb
out
test
xor
dec
pushl
sbb
scas
ja
hlt
mov
sbb
outsb
push
mov
popa
sbb
test
cmpsl
ja
loop
sub
movsl
int3
dec
sbb
mov
cmp
aaa
sbb
aas
xchg
les
lods
sbb
es
and
aad
cmp
movsl
lods
mov
mov
mov
sub
movsl
sbb
iret
mov
in
adc
pop
pop
movsl
or
mov
sbb
mov
sbb
mov
sbb
lcall
test
popf
movsb
xchg
add
dec
mov
fildll
test
and
movsb
jns
mov
push
cmp
xlat
jp
mov
mov
cld
sarl
and
or
ret
xchg
movzwl
adc
aas
mov
lcall
lea
sub
mov
vmovdqu
stos
aam
mov
pop
mov
ficomps
test
popf
movsb
cmp
jne
pop
sahf
movsb
gs
movsl
or
and
mov
dec
fnstenv
movsb
lods
test
movsl
mov
scas
dec
xor
insl
mov
pop
cltd
or
lahf
xchg
movsb
inc
lea
and
and
sahf
movsb
xchg
fdivr
jmp
mov
mov
or
cmp
inc
ja
pop
sahf
movsb
xor
xchg
lahf
lea
mov
pop
in
mov
cld
lods
sbb
cmp
push
test
mov
add
lods
test
insl
xor
push
movsl
xor
and
inc
cmp
movsb
xlat
test
cltd
mov
jo
movsb
lods
sbb
cmp
sub
and
mov
out
lods
sbb
into
orl
add
ret
ficomps
stos
adc
mov
divb
scas
repz
mov
lock
and
daa
pop
inc
in
xchg
add
lods
sbb
into
subl
xor
stos
sbb
ja
or
pop
mov
sbb
push
xchg
je
sbb
pop
insl
sub
add
cltd
pop
mov
pop
pop
sbb
scas
dec
roll
movsb
mov
sub
movsb
mov
sub
movsb
mov
sub
hlt
lods
sbb
jbe
dec
jbe
ud0
cltd
fwait
or
sahf
sahf
sbb
stos
sbb
jecxz
sbb
scas
mov
insl
xor
mov
push
push
jno
fwait
enter
cmp
fmulp
xlat
mov
sbb
pop
dec
xchg
adc
and
adc
jg
ds
loopne
das
mov
hlt
ja
sub
mov
test
aaa
add
pusha
mov
pushf
adc
dec
movsl
mov
sbb
outsb
xchg
lret
das
shrl
push
push
xor
or
and
adc
lods
sbb
out
sub
adc
fsubrl
lcall
adc
mov
mov
jno
xchg
subl
jecxz
xchg
dec
fwait
dec
lods
push
data16
lods
test
adc
lods
sbb
roll
sbb
pushf
movsl
inc
xlat
fwait
adc
adc
inc
xor
adc
fadds
cld
mov
cmp
out
rcl
lret
add
fcoml
lret
cmpsb
push
mov
cmp
loope
cmpl
lds
aas
subl
montmul
cmpsb
inc
and
jmp
test
xchg
mov
mov
jnp
inc
mov
popf
movsl
inc
mov
push
mov
push
push
les
out
add
scas
ja
pop
clc
cs
movsl
inc
and
jno
mov
push
inc
mov
jg
push
mov
mov
xchg
xchg
mov
sbb
jns
nop
addr16
popa
mov
mov
mov
mov
das
add
mov
lcall
sahf
xchg
mov
fsubl
cmp
pop
mov
std
mov
add
outsb
xchg
les
mov
fnstcw
xor
leave
scas
cwtl
jbe
inc
out
lcall
adc
mov
in
dec
shrb
mov
aaa
add
imul
into
popa
jno
lcall
xchg
adc
push
sub
or
outsl
dec
ja
dec
mov
lock
aam
mov
stc
push
jge
push
lds
mov
dec
pop
jp
outsl
sahf
ljmp
dec
mov
add
and
in
loope
pop
notl
js
xor
dec
adc
xchg
incl
repnz
push
js
sbb
mov
add
xchg
les
add
cmp
int
jg
dec
push
or
push
iret
or
lahf
add
or
dec
fistpl
sub
cmp
adcb
aad
adc
test
or
cmpl
negb
iret
or
adc
cmp
iret
or
dec
adc
pushf
push
in
ja
pop
sbb
or
std
aas
cmp
loop
sub
sbb
or
test
inc
and
xor
lock
scas
dec
or
iret
lods
and
fmuls
dec
sbb
lods
das
lahf
pop
push
out
in
rcrl
pop
pop
out
jge
mov
mov
rcrl
and
mov
add
outsb
and
or
ror
jle
movsl
stc
cmp
popa
mov
sbb
push
and
jmp
jb
lahf
hlt
mov
sbb
out
les
lret
sub
lods
jb
mov
mov
jb
dec
sahf
outsl
pop
aam
push
mov
and
fidivrs
outsl
pop
aam
les
jp
push
ljmpw
adc
cmp
xchg
aad
jb
dec
sahf
outsl
pop
aam
add
iret
cmp
and
cmp
jb
aam
test
push
mov
ljmp
repnz
pop
aam
dec
outsb
push
shlb
aad
fbstp
test
mov
cmpsl
out
jle
ret
stc
cmp
lret
mov
arpl
outsl
adc
jb
stc
repz
ret
loopne
push
xchg
push
in
test
xchg
or
jmp
stc
cmp
push
test
sbb
adc
jmp
jb
inc
jg
jl
adc
cld
sbb
test
mov
fwait
sub
cltd
xchg
scas
pop
repnz
rcll
lea
call
lret
test
loop
or
repz
setl
pop
mov
xor
push
dec
loopne
add
cmpsl
mov
outsb
mov
add
sub
sbb
lods
orl
xchg
addb
xor
int3
sub
enter
sub
sub
daa
stos
pushf
sub
cmc
fldcw
jbe
mov
outsl
cwtl
popa
ret
lods
cltd
leave
jb
adc
xchg
and
lret
and
jmp
xchg
fwait
mov
mov
jno
daa
push
stos
xchg
fwait
aaa
mov
jbe
mov
jbe
lock
mov
pop
rcr
sbb
daa
cmpsl
inc
es
sbb
sbb
icebp
loope
hlt
mov
xchg
and
pop
stos
outsb
sub
loopne
xchg
mov
lods
cmp
in
std
or
mov
fdivl
jecxz
pushf
inc
mov
dec
lds
addr16
lods
in
inc
lods
in
inc
lods
in
inc
lods
in
inc
lods
in
inc
lods
in
inc
lods
in
inc
lods
in
inc
mov
outsb
inc
lods
adc
mov
int3
xchg
pop
mov
insb
add
xchg
call
cltd
pusha
outsl
pop
cltd
imul
push
xchg
lds
int3
pop
pop
int3
xchg
in
stos
jmp
push
lcall
mov
movsb
imul
lcall
mov
mov
test
add
in
inc
and
icebp
mov
aam
xchg
popa
mov
int3
xchg
add
xor
repz
mov
rcrb
xchg
or
stc
lret
mov
stos
loopne
jecxz
inc
cmpsb
pop
push
xor
in
mov
mov
shr
adc
test
movsb
pop
inc
lods
shl
sub
and
pop
dec
jb
sub
lcall
lods
in
xor
cltd
sti
out
lret
movsb
mov
push
mov
push
inc
lods
sub
dec
stc
xor
daa
push
mov
addr16
pop
mov
test
mov
cld
iret
cmp
xchg
pop
aaa
pop
je
test
or
ret
adc
daa
mov
lds
push
aas
lods
in
pop
lret
cmp
jle
daa
adc
push
gs
push
sbb
push
aaa
dec
jno
movsl
push
pop
adc
xor
jmp
shl
sub
lods
in
push
in
addr16
repnz
mov
add
jmp
es
and
es
and
je
inc
lods
fcomps
iret
jle
mov
cli
push
mov
pop
inc
xchg
je
fs
popf
sbbl
aas
mov
rep
lods
inc
mov
neg
shll
sbb
lods
in
pop
and
int
pushf
mov
mov
iret
orb
jl
jnp
or
movsl
push
test
sub
fisttpll
popa
mov
into
pop
ja
push
lods
inc
mov
mov
sub
and
in
jo
aad
repz
inc
push
out
xor
push
filds
xor
or
cltd
int3
inc
pop
push
mov
out
je
insb
dec
jo
pop
push
jmp
repnz
xchg
outsl
mov
inc
sub
ret
into
inc
out
cmp
jno
hlt
xchg
into
inc
aam
cmp
add
and
lods
sub
push
or
or
into
inc
out
cmp
adc
mov
xchg
into
inc
mov
add
cli
mov
ret
xor
sub
ja
stos
xor
push
cs
add
int3
inc
pop
push
push
ds
mov
popf
cmpsl
fsubrl
rcrb
push
jmp
inc
xor
pop
adc
sbb
rol
inc
mov
bound
push
and
into
adc
fdivr
sub
scas
push
popa
rcrb
cmpsl
adc
pop
dec
push
data16
inc
daa
mov
mov
pop
mov
pop
cmp
imulb
adc
push
scas
sub
fdivr
adc
xor
in
test
mov
test
lcall
xor
add
ret
push
mov
and
clc
cmp
les
cs
inc
gs
mov
mov
mov
mov
mov
fsub
sbb
sbb
jae
push
loopne
in
pop
inc
and
int
cltd
add
in
add
aas
sbb
imul
movsl
aam
sets
lret
or
scas
je
or
fucom
out
lods
scas
std
leave
push
pop
add
xchg
push
xchg
fistpll
jb
popf
dec
loope
push
and
dec
mov
arpl
sahf
xchg
push
mov
or
call
adc
and
pop
jae
cld
test
inc
inc
xchg
push
mov
sbb
inc
cwtl
popa
or
jp
xor
testb
aas
inc
mov
pop
jmp
int
inc
sbb
pop
inc
sbb
push
inc
mov
arpl
inc
sbb
sub
jns
cmp
ret
iret
int3
sbb
test
ljmp
aas
loopne
inc
adc
rcr
xor
ret
cmpl
xor
rclb
push
movsb
pop
rcrb
sub
aas
inc
mov
dec
adc
arpl
xor
pop
inc
sbb
pop
inc
sbb
push
inc
mov
data16
adc
inc
sub
mov
dec
sbb
je
mov
cmpl
cmp
in
scas
xchg
addr16
jmp
and
xchg
fs
fprem
jmp
data16
fdiv
dec
in
jnp
repz
movsl
lret
add
mov
icebp
jg
sub
decb
cmpsl
dec
repnz
or
scas
pop
sub
test
sub
xor
movsb
inc
dec
and
pop
dec
ss
cli
lret
dec
imul
and
cmc
jmp
pop
in
pop
adc
add
testb
int
lds
adc
add
inc
adc
shll
push
iret
iret
jecxz
iret
add
adc
push
enter
push
test
adcb
iret
aaa
jnp
mov
into
add
adc
jns
xlat
dec
aaa
movsb
ljmp
pop
aam
nop
pop
jo
push
xchg
jo
fxch
add
xor
and
jmp
rolb
iret
outsl
aaa
and
jo
gs
ljmp
lods
ss
push
pop
fimull
sub
cs
jae
dec
notl
int
push
xor
push
cmp
push
adc
data16
loop
mov
mov
xor
shrl
in
mov
jnp
ljmp
cmpsb
inc
sbb
pop
sbbb
adc
insb
jo
cmp
cmp
xorl
and
mov
or
pop
jecxz
inc
mov
push
fidivs
jp
xchg
mov
pop
xor
dec
fsubr
pop
push
pop
sbb
or
jae
mov
imul
xchg
jo
out
pop
mov
xor
adc
xor
mov
scas
insl
inc
arpl
fdivrs
and
inc
mov
inc
xor
adc
es
mov
fsubrl
cs
aas
call
pop
fwait
movsl
jno
shlb
push
pop
lds
xchg
xor
sbb
in
shlb
xchg
push
mov
cmp
sub
mov
loopne
inc
mov
dec
pop
pop
xor
and
mov
popf
and
mov
mov
lcall
lcall
xor
fsubrl
in
loopne
add
push
mov
cmp
xchg
popa
popf
dec
and
adc
sarb
nop
xchg
mov
adc
cmpsb
dec
movsl
movsl
dec
insb
ds
xchg
and
in
divb
sbb
and
out
push
dec
movsl
sub
push
test
int
repnz
jno
flds
push
movsl
mov
imul
pop
and
push
mov
sub
popf
and
rclb
or
cltd
popf
or
out
sti
adc
jg
cmp
mov
dec
xchg
fsub
jbe
mov
daa
pop
xchg
add
rolb
mov
inc
xchg
gs
sbb
pop
loop
jne
inc
mov
add
push
jle
and
shll
cmc
mov
addr16
ret
sub
shrb
jo
fldt
shlb
pop
xchg
add
in
popf
sbb
jns
lds
jl,pt
aam
lahf
xchg
push
inc
popa
dec
mov
icebp
and
cmp
aas
mov
je
xchg
ja
arpl
push
mov
and
xchg
imul
jo
adc
flds
mov
adc
sub
xor
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
es
pop
inc
push
out
jecxz
xor
xor
jo
jp
push
repnz
pop
rcl
test
fistl
aaa
mov
add
cmpsb
call
pop
ret
cld
out
dec
and
inc
je
and
ja
mov
adc
adc
jnp
lock
mov
xor
shl
and
nop
shl
and
nop
shl
and
nop
shl
and
nop
shl
lcall
mov
scas
aad
dec
aad
sub
pop
in
pop
cmp
popa
aam
cwtl
jb
stos
mov
and
add
mov
dec
aad
mulb
mov
pop
in
pushl
scas
les
dec
aad
rorb
inc
add
shrl
aad
orb
inc
add
shrl
aad
fs
in
stos
mov
bound
add
shrl
aad
dec
fwait
lahf
cmpsb
mov
movl
scas
les
dec
aad
int3
inc
add
mov
dec
aad
out
stc
fisubrs
add
ret
sub
dec
aad
pop
inc
in
stos
mov
cmp
mov
dec
aad
cltd
sub
stos
mov
and
mov
dec
aad
sub
cmpsb
mov
and
ss
xor
inc
and
xor
mov
and
jge
addl
sarl
sub
adc
mov
int3
stc
jge
jmp
jne
imul
cmp
mov
add
loope
fisubrl
fstpt
push
push
push
popa
orb
loopne
test
rcl
cmp
mov
imul
notl
lds
aam
arpl
es
cs
mov
arpl
jns
mov
lret
cmp
mov
adc
lret
outsl
xor
xor
test
sbb
mov
or
pop
scas
cmp
lret
call
imul
xchg
push
sub
or
sbb
lds
repz
jbe
lret
xchg
icebp
mov
inc
fwait
pshufw
push
scas
xchg
adc
out
push
sub
rcrl
in
mov
repnz
jo
xor
jmp
and
js
adc
call
clc
stos
mov
rorl
pusha
jp
addl
mov
pop
aas
dec
add
cltd
ret
inc
mov
xchg
hlt
gs
aas
adc
in
lods
popf
inc
inc
cmp
aaa
mov
sub
jae
fisubl
jg
popa
dec
inc
shrl
xlat
in
cmc
pop
fildll
add
dec
notl
pop
cmp
ss
mov
cmp
mov
pop
pmaddwd
in
fidivrl
adc
je
imull
xor
rcll
mov
gs
imul
mov
mov
andl
cmp
jg
adc
add
xor
sbb
das
or
push
cmp
xlat
jge
xor
jnp
xlat
mov
lcall
add
scas
dec
cltd
in
cmp
xchg
xchg
rclb
push
sub
jb
outsl
inc
into
daa
mov
xchg
xor
frstor
fsubs
push
pusha
fistps
test
cmpsl
in
cmp
fimuls
xor
pmaddwd
add
mov
lods
aas
fistpll
dec
jmp
ljmp
outsb
rcrl
negb
push
dec
out
sub
jp
nop
in
stc
fcoms
outsb
arpl
pusha
xchg
dec
and
shlb
dec
pop
lds
sub
mov
xchg
fistpl
stc
bound
mov
dec
adc
jno
push
mov
cmp
xor
mov
orl
aas
es
jmp
lcall
sti
xchg
mov
and
pop
cltd
lods
out
popf
xchg
scas
sbb
cli
imul
xor
push
or
mov
icebp
mov
out
sbb
fcoml
jmp
fcoml
mov
int3
mov
or
sub
adc
ljmp
rcll
in
out
push
pop
ljmp
mov
pop
lret
outsl
add
leave
outsl
jge
jmp
cmpsl
and
shll
cmp
adc
iret
cltd
xor
push
iret
mov
shll
ja
fsubr
sub
das
outsl
xor
add
scas
fiadds
jl
repnz
cltd
js
dec
jns
cmpsl
fcomps
dec
push
out
mov
push
sbb
add
aam
adc
cwtl
clc
cltd
mov
jns
inc
push
mov
enter
fs
xchg
jnp
mov
xor
mov
out
add
dec
adc
xorb
mov
addr16
pop
pop
in
jo
pop
cli
shll
inc
sub
cwtl
mov
or
sub
add
mov
cmp
outsb
or
xlat
inc
adc
jge
das
bound
sbb
xchg
incb
fnstcw
arpl
push
insl
loope
jo
mov
inc
gs
and
adc
sahf
jbe
adc
cmpsb
imul
jae
cmp
sub
mov
iret
mov
xlat
lds
ss
clc
pushf
pop
xchg
into
ret
stc
jns
fld
fst
fwait
stc
bound
or
call
push
xlat
lds
gs
sahf
mov
cmp
sub
repnz
imul
mov
fs
std
hlt
cmp
pop
jge
test
inc
setae
nop
icebp
std
movsl
daa
mov
inc
hlt
movb
nop
or
sub
orl
fsubrs
mov
lahf
add
rol
fcmovnbe
cs
add
jo
test
cmp
push
xchg
xchg
pop
sub
mov
dec
xchg
jns
inc
lds
loopne
pop
bound
test
push
dec
lock
aam
inc
outsb
hlt
mov
fisubl
cwtl
cwtl
mov
adc
mov
or
lahf
push
lds
add
scas
mov
loope
in
repz
sahf
loop
pop
mov
loopne
pop
test
cmp
stos
test
adc
subb
pop
add
mov
push
and
sbb
cmp
cli
sub
sub
add
sub
push
clc
fstp
notl
sbb
or
xchg
cs
xor
sub
sub
sti
into
push
sub
inc
shlb
mov
cmp
movsb
pushf
inc
xor
fisubl
aas
mov
xor
into
psubb
test
cmp
lahf
xchg
imul
addr16
cmpsb
sbb
enter
or
adc
mov
pop
cmp
jmp
inc
fbstp
sub
nop
inc
sbb
adcb
mov
stos
dec
popa
mov
inc
mov
jecxz
mov
and
push
xor
lds
out
shll
cmp
jg
push
cmc
in
xchg
cwtl
mov
mov
xchg
stos
lahf
mov
jge
pop
clc
sbb
lret
ja
out
xor
jecxz
loopne
int3
cmp
and
adc
mov
rorl
mov
dec
add
lds
mov
xor
popa
cs
add
xor
adc
cmp
in
orl
movsb
sbb
or
sub
fisubrl
sub
inc
clc
hlt
fs
pop
dec
mov
pop
add
in
jl
rcll
stos
scas
icebp
cmp
sbb
test
inc
insb
push
xor
out
sub
jp
sbb
xchg
or
dec
mov
inc
cmpsb
enter
test
mov
call
jne
scas
push
adc
jg
int
scas
adc
gs
daa
stos
xchg
pop
adc
dec
ds
mov
dec
mov
nop
cmp
loope
cld
fadd
inc
jg
ss
pop
sbbl
adc
cmpsb
aam
hlt
adc
mov
mov
adc
sbb
jno
or
pop
cmc
and
or
fwait
xor
push
push
fwait
jbe
mov
cmc
and
ljmp
mov
add
call
lea
push
test
push
xor
or
imull
idiv
hlt
dec
stos
add
filds
mov
add
out
loop
fists
pop
cmc
shll
shrl
mov
jge
or
inc
add
add
jge
xchg
cmp
int3
inc
test
lret
push
cmp
stos
adc
pop
out
stos
mov
push
xor
cmp
jmp
inc
fbstp
sub
nop
inc
sbb
adcb
mov
stos
dec
popa
mov
adc
std
test
mov
push
std
pop
cmc
jne
jecxz
les
jo
push
fldt
adc
cmp
inc
inc
sub
or
adc
jmp
dec
negb
jmp
jmp
push
add
dec
sub
scas
int
scas
mov
sbb
cmp
ss
clc
and
inc
sahf
cmp
out
les
gs
je
jl
out
or
addr16
nop
cli
test
lahf
imul
imul
out
cli
jg
dec
sbb
rcl
das
out
ja
ficomps
push
sarb
dec
push
imul
sub
xchg
mov
inc
into
dec
sbb
dec
pop
add
lcall
mov
ficompl
sbb
movnti
pop
lahf
add
cmp
sbb
mov
cmp
pop
inc
in
ret
out
or
xlat
push
scas
frstor
cltd
sub
fdivl
jmp
mov
pop
push
sbb
cmc
xchg
mov
dec
in
pop
bound
push
cs
pop
incl
mov
lods
cltd
xchg
jae
jl
cmp
inc
mov
dec
mov
sub
loop
dec
and
xor
mov
adc
in
inc
aaa
and
adc
add
pop
rol
cltd
dec
rcrb
jno
es
test
lods
and
fs
dec
loope
aas
lret
in
or
and
inc
jl
xor
movsl
sahf
movsb
mov
mov
jl
stc
rcrl
add
lods
dec
inc
cmc
lods
mov
sub
sar
mov
std
jecxz
lea
aad
jbe
sbbl
push
push
sub
shll
jo
data16
ds
shrl
xchg
adc
or
std
mov
fnstsw
dec
out
dec
and
in
adcl
roll
enter
add
sbb
mov
into
loop
dec
repnz
cmp
add
insb
cwtl
sbb
inc
scas
add
dec
arpl
ja
stc
std
push
std
jnp
gs
orl
ds
es
mov
mov
ja
cwtl
lds
pusha
xchg
outsb
dec
cltd
lahf
das
jecxz
outsb
cs
cmp
in
and
push
mov
rolb
push
push
aas
shlb
xchg
jnp
test
in
cmp
mov
pop
and
roll
jae
jg
or
aam
enter
je
mov
sti
gs
jg
mov
outsb
lcall
aaa
loope
xchg
and
inc
jbe
sbbb
lret
push
int
lods
sub
movsl
or
mov
daa
pushf
fsubr
mov
adc
cwtl
imul
jmp
adc
push
sahf
scas
pop
add
lcall
into
push
ds
add
movsl
stos
rcl
mov
test
insl
pop
xor
stos
in
pop
mov
sub
test
iret
ffreep
aaa
dec
add
pop
out
lret
xorb
sbb
or
insl
inc
mov
pop
jo
imul
shlb
lcall
lret
dec
adc
ret
mov
sbb
push
cmc
mov
icebp
push
jmp
lods
pushf
pop
pop
test
cmp
cmp
std
pop
in
lods
push
jl
ret
push
out
lods
dec
fsubrl
mov
scas
mov
pop
cmp
jmp
push
pop
push
fiadds
ret
ret
in
jne
lods
insl
dec
jbe
call
xchg
arpl
sub
adc
iret
cmpsl
shll
jb
test
jp
cmpsb
mov
lahf
and
xchg
push
movsb
cmp
or
push
lds
lret
push
out
cmp
push
sub
mov
hlt
mov
popa
pusha
cmpl
clc
icebp
enter
repz
mov
cltd
adc
or
xchg
fldcw
test
in
ljmp
mov
push
and
dec
lret
into
sub
std
ret
pop
idivb
dec
test
jp
ret
lret
mov
push
jo
fmul
mov
insb
cwtl
rcl
clc
shl
mov
sbb
cmp
fstpt
out
out
das
jl
add
in
stc
adc
inc
and
cld
xchg
lahf
and
mov
xlat
jno
push
inc
test
jle
popf
adc
shlb
repnz
movsb
xchg
jle
into
lods
add
rclb
mov
push
mov
xchg
fldt
cmp
loop
and
push
ret
adc
sbb
ds
mov
pop
adc
fst
mov
mov
xchg
daa
mov
jmp
popf
sbb
lret
lods
pop
les
jge
fstps
cltd
jnp
insb
xor
sbb
mov
fisttpl
inc
push
shrb
mov
psubb
pushf
and
repz
test
inc
pop
incb
call
jae
clc
sti
mov
mov
cmp
and
and
fidivs
adc
push
cld
sbb
adc
out
cli
movsb
fstpl
bound
out
sbb
mov
sbb
mov
lahf
xor
jle
push
mov
mov
test
sub
das
dec
sar
pop
xlat
mov
subl
adcl
roll
mov
mov
inc
cmc
pop
xor
hlt
test
or
xor
mov
enter
dec
dec
push
icebp
jae
movl
test
outsb
cmpsb
adc
jb
lock
cltd
fs
stos
xchg
cmpsl
andl
or
sub
mov
xchg
inc
aas
sbb
notb
xor
mov
out
sub
movsl
je
sbb
cltd
jmp
xchg
icebp
js
sub
loopne
lcall
sub
in
movsb
push
addr16
pop
addb
xchg
mov
xor
scas
push
or
inc
push
aas
push
loope
cmc
xchg
lods
push
test
adc
pushf
pusha
mov
and
pusha
cmpl
cmp
cmc
xlat
mov
andb
mov
fdivrs
xchg
push
iret
fwait
mov
inc
jno
lahf
mov
adc
imul
pop
dec
call
mov
ds
lcall
xor
inc
sub
test
andb
mov
add
or
scas
mov
out
cmp
lahf
or
add
adc
lods
dec
daa
cmp
pop
outsb
jge
or
sub
movsb
outsl
inc
stos
dec
bound
or
sub
fdivr
call
pop
inc
jo
mov
gs
pop
cli
nop
fsubs
cltd
les
sub
mov
call
out
xchg
or
out
inc
iret
push
mov
sub
add
hlt
fisttpll
and
pop
adc
or
jno
inc
lods
sbb
mov
imul
mov
xchg
ja
adcb
sahf
mov
xchg
test
jl
push
loopne
jecxz
in
lods
dec
push
mov
jmp
mov
cwtl
xchg
cmp
scas
fdivrl
pop
aad
mov
fnstsw
js
inc
xor
cld
and
push
scas
sub
roll
ljmp
mov
fadds
pop
rcrl
aad
mov
cmp
mov
cmpb
testl
adc
push
jne
mov
xor
jnp
and
mov
int3
sahf
in
jp
icebp
lds
je
insl
xor
fcoml
inc
push
movsl
xchg
mov
cmp
es
mov
dec
repnz
jno
jb
cmp
push
push
mov
loope
and
shl
pusha
inc
pop
std
outsl
xlat
cmp
fisubl
jmp
rorb
iret
xchg
inc
je
int
cs
filds
jmp
sbb
cmpsl
dec
fucomip
add
fbld
jmp
adcb
xchg
int
pop
scas
pop
push
std
xchg
scas
add
in
jge
ret
divl
fs
in
mov
daa
ds
pushf
fdivrp
mov
inc
aam
andb
jns
push
sbb
mov
push
mov
gs
fs
xchg
ficoml
data16
daa
movsl
cmp
call
pop
loopne
mov
xor
dec
xor
mov
jne
push
mov
mov
arpl
lock
fs
xor
cmp
inc
movsl
push
xchg
imul
xchg
and
mov
fwait
fs
adc
xchg
movaps
cmpsl
sbb
aas
mulb
das
dec
lods
push
inc
imul
add
pop
scas
adc
lods
bnd
sub
or
inc
push
jae
xor
jae
mov
imul
mov
imul
sbb
xor
adc
std
dec
je
mov
sti
sti
mov
xchg
hlt
int
xor
cmpsl
mov
mov
hlt
shlb
jle
push
leave
cmp
add
in
popf
mov
cmp
rcr
lret
dec
sahf
and
jb
push
pop
iret
jns
or
loopne
xlat
adc
arpl
dec
sub
adc
sub
das
lahf
xchg
xchg
rep
xchg
outsb
movsl
jbe
jb
adc
daa
adc
pop
add
lock
sub
xor
fwait
xchg
add
sbb
sbb
jbe
lret
filds
and
push
xchg
cmpsb
pop
jmp
pop
ss
test
pop
fidivrl
test
ds
push
xchg
or
es
int
add
scas
sbb
mov
fldl
pushw
push
push
mov
outsb
shll
xchg
push
sbb
or
shlb
pop
cmp
push
mov
fwait
cmpsb
movsb
inc
inc
imul
add
in
stc
jl
hlt
mov
inc
cmp
bound
dec
bound
mov
pop
lods
insl
notb
mov
inc
dec
outsb
leave
inc
dec
add
mov
jl
jb
mov
mov
inc
lods
inc
mov
and
fildl
or
out
cli
xchg
sahf
mov
lock
dec
andb
rorb
xor
cmpsl
and
mov
jo
out
jo
cmp
adc
adc
popa
or
cmpsb
sub
pop
out
xor
or
test
inc
mov
scas
pop
aaa
addl
or
pop
sahf
stc
jl
std
pop
xor
xchg
lds
stc
sub
mov
xor
shll
jl
dec
adcl
adc
pop
cs
fs
sub
or
xchg
and
mov
xchg
and
shll
sbb
scas
sub
sub
je
mov
scas
dec
gs
imul
pop
xor
xor
jo
aam
in
mov
or
push
cmpsl
mov
add
sub
iret
push
ret
adc
adc
add
stos
dec
enter
es
out
scas
or
mov
inc
xor
pop
sbb
mov
dec
fs
xlat
cmp
sbb
or
das
fildll
xchg
lret
fcomip
dec
sbb
mov
cmp
jmp
out
xor
inc
xor
sarl
mov
mov
dec
cmc
inc
pop
xor
in
cmpsl
xchg
dec
gs
out
push
sbb
adc
mul
ljmp
push
fildl
repnz
pop
loopne
je
test
aad
mov
aas
out
into
je
stos
xchg
or
in
mov
sbb
jns
sahf
out
xor
push
xchg
lahf
dec
iret
or
xchg
shlb
sahf
push
jmp
pop
pusha
xchg
imul
mov
inc
pop
inc
mov
add
bound
add
mov
pop
adc
xchg
inc
nop
jo
cmp
cs
scas
movb
and
xor
iret
fwait
dec
lods
les
push
jb
out
inc
lods
inc
adc
push
roll
xchg
sub
sti
push
push
pop
push
dec
test
loope
aad
jb
mov
mov
fsubs
adc
push
lea
xchg
iret
mov
aam
daa
xchg
sbb
stos
shrb
aaa
sahf
or
push
in
mov
leave
fs
jne
inc
sub
or
push
mov
aaa
scas
ss
sbb
xchg
iret
imul
jb
and
and
popa
sub
ds
adc
jns
or
xchg
and
repz
sub
popf
jl
fnstenv
mov
loop
pop
test
mov
pop
sbb
mov
sub
xchg
icebp
loop
movsl
dec
sub
ja
sbb
lret
cmc
hlt
push
sar
scas
fisttps
sbb
scas
sbb
mov
sbb
pop
hlt
into
sbb
pop
ja
cmp
inc
inc
ficoml
aaa
xchg
aam
fimuls
mov
add
icebp
aaa
gs
pop
push
ds
adc
mov
mov
mov
pop
daa
mov
mov
aas
icebp
shrl
lret
jp,pt
fs
jne
cmpsl
lcall
pop
out
push
push
outsl
fidivrl
scas
test
mov
test
cld
lods
pop
lods
pusha
jle
in
cmp
inc
jnp
jo
cmp
dec
outsb
cmp
scas
push
mov
cmp
xor
pop
pop
mov
ret
scas
mov
lods
sub
sub
xchg
sbb
leave
inc
mov
adc
jge
and
jo
cmpsb
aas
push
fcoms
ret
in
aas
ss
test
push
inc
jae
cmp
sub
cmpl
outsb
inc
rcrl
loopne
fidivs
lret
mov
xchg
lcall
sarb
push
sti
jbe
or
and
ds
loopne
pop
mov
clc
jmp
and
call
insl
inc
imul
pop
leave
cmpsb
enter
jnp
iret
rcrb
shll
sub
inc
les
dec
dec
aaa
or
xor
adc
pushf
andl
stc
xor
inc
shrd
fcoml
lock
lods
pop
cmpsb
icebp
int3
pop
cmp
andb
out
lcall
ret
mov
or
sub
fidivl
ja
or
addr16
loope
sub
or
sbb
pop
push
sahf
lahf
adc
pusha
adc
cmp
pop
mov
jbe
movl
jle
xor
and
sbb
imull
inc
orl
pop
adc
cmp
and
add
pop
jb
mov
scas
out
jmp
mov
loope
ja
xchg
int
or
repz
sbb
enter
out
jns
mov
inc
frstor
or
lods
mov
test
enter
cmp
lock
cmp
repz
jns
adc
mov
cmp
cmp
cltd
mov
push
in
inc
push
mov
lret
imul
cmp
cmp
pop
push
adc
inc
mov
mov
adc
xchg
loope
ja
or
lret
inc
aas
inc
sub
into
sub
xor
sbb
xor
icebp
mov
mov
mov
jno
sbb
scas
push
cmp
cld
mov
shll
jbe
sub
fcomip
ljmp
pop
insl
clc
mov
or
inc
js
dec
test
xor
mov
js
fisubs
out
push
xor
rorl
sbb
add
and
out
xor
icebp
sub
fisttps
ljmp
pop
sub
lods
jge
loopne
sub
jo
outsb
out
lds
mov
push
fisttps
cmp
mov
rolb
ja
lahf
cmc
pop
sub
add
jnp
adc
fucomi
cs
inc
lahf
mov
repz
arpl
jne
add
dec
sub
imul
adc
jmp
or
xor
dec
mov
loopne
pop
cmp
xor
xlat
das
cmp
dec
sub
push
mov
rorb
stc
or
outsl
push
in
push
or
imul
dec
cwtl
out
dec
jl
cmc
pop
inc
cmp
push
xchg
mov
mov
mov
xor
insb
xchg
sub
adc
mov
ret
addl
mov
pop
cmpsb
pop
add
fists
add
pop
jl
mov
daa
pop
pusha
or
cmp
sbb
daa
inc
mov
daa
jbe
mov
ja
mov
adcb
arpl
cmp
test
mov
repz
and
lret
loope
notb
out
or
push
arpl
dec
inc
inc
shrl
das
xor
xor
sbbw
mov
lcall
sbb
lcall
sti
pop
adc
xchg
and
push
insl
ret
rcrl
popl
shr
test
std
fs
mov
mov
jl
and
fisttpl
scas
stos
push
in
cmp
push
scas
data16
or
popf
xchg
lahf
or
repz
xorb
mov
shrl
ljmp
leave
sbb
loope
xchg
rol
into
sarl
adc
inc
jno
inc
push
scas
cld
mov
push
dec
popl
lahf
xchg
inc
pop
lahf
out
lock
stc
dec
enter
lret
sbb
not
xor
adc
sti
mov
jnp
inc
add
scas
mov
lret
sbb
pushf
inc
xor
fcompl
stos
cmpl
pop
imul
aad
cs
and
shl
cmp
scas
lods
ljmp
stos
sub
or
cmp
sbb
insl
push
push
jge,pn
jge
xor
inc
sub
cli
jp
cmp
popa
sub
pop
jo
mulb
mov
cmp
lahf
lock
jb
or
pop
lds
cli
out
mov
lret
sub
jmp
xchg
fdivr
dec
mov
fucom
and
test
in
and
icebp
in
jbe
stc
test
dec
add
xor
sub
icebp
fdivrl
hlt
inc
shrl
inc
adc
data16
sar
jnp
mov
arpl
imul
sti
mov
cli
and
mov
xchg
lahf
mov
xchg
pop
or
xor
test
les
dec
jb
xlat
jbe
push
loop
mov
mov
das
jns
in
push
fistps
push
fimuls
outsb
or
sub
mov
stos
in
lcall
and
pop
stos
int
cli
add
jae
loope
xchg
or
popf
dec
ficoms
mov
mov
jae
sbb
push
scas
sub
mov
adc
mov
jno
movsb
lcall
inc
test
pusha
xor
inc
stc
into
jp
mov
cmpsb
sahf
cmpsb
xchg
mov
cmpsb
push
in
insb
sarl
icebp
sahf
push
mov
cmpsb
movsl
icebp
xor
jno
daa
sbb
movsl
outsl
or
inc
scas
int3
into
cmp
mov
sbb
sub
xchg
loopne
out
jno
cmp
fisubrl
jne
addl
imul
ljmp
ljmp
les
and
push
pop
cmp
daa
insl
dec
imul
inc
push
push
push
xlat
repnz
movsl
ja
xchg
xlat
xor
pop
add
inc
add
lcall
cmpsl
dec
xchg
adcl
cmp
and
nop
cmpsl
mov
mov
adc
mov
fidivl
sbb
mov
dec
mov
adc
idivl
sub
ret
xchg
push
enter
adc
rcrb
push
push
xlat
mov
sbbl
loope
out
inc
dec
mov
xor
ss
xchg
jp
adc
and
pop
div
stos
ror
ror
fdivs
lea
sub
int3
pop
scas
or
cwtl
pop
sbb
lds
cmp
jb
pop
cmp
xchg
pop
in
fsubs
into
lods
mov
xchg
xor
int
iret
sbb
in
mov
hlt
aaa
ror
lahf
js
mov
scas
shlb
cltd
enter
popa
xchg
jle
mov
xor
addb
or
fisttps
imul
push
and
subl
les
pop
lcall
inc
mov
adc
in
ficompl
xlat
scas
push
orb
aam
outsb
cmp
sub
or
mov
ret
xchg
daa
ds
int
cmpsb
ljmp
popa
enter
pop
aas
shlb
xchg
adcb
in
and
shrb
dec
mov
mov
xor
data16
xchg
repz
aad
mov
and
in
shlb
lcall
adc
incb
xor
sbb
out
rolb
cmp
adc
scas
dec
lock
lahf
lock
fildl
repz
mov
push
mul
aam
ret
mov
jge
and
inc
push
js
mov
sub
jae,pn
mov
adc
cmp
fs
jo
stos
mov
mov
scas
scas
xchg
mov
icebp
fdivr
cmpb
dec
push
adc
add
adc
cli
hlt
xor
nop
in
mov
and
scas
dec
lock
mov
mov
mov
cmpsb
fsubrl
pop
or
test
cmp
ret
mov
loopne
cltd
pop
sbb
mov
push
in
ret
cmp
pop
dec
sub
mov
mov
sub
idivb
lahf
lock
stos
sub
push
fbstp
inc
ret
pop
lret
add
in
xchg
js
sbb
xlat
stos
xchg
mov
sti
das
sbb
mov
sub
adc
mov
adc
mov
jb
enter
aas
bound
mov
mov
lds
sub
fstps
stos
inc
cld
inc
mov
pop
fmull
mov
jg
dec
sub
test
popa
outsl
cld
inc
dec
inc
sub
out
ljmp
sbb
shlb
cli
cmpsb
or
idivl
push
push
cltd
not
push
lea
xchg
push
stos
cmpsl
or
idivl
inc
ret
cmp
jl
shll
adc
hlt
cltd
sub
jp
xchg
stos
pop
sub
popl
and
fwait
cmp
data16
xchg
xlat
rcl
sub
add
push
and
inc
push
lods
mov
ds
mov
add
adc
cli
add
pusha
mov
dec
inc
pusha
rcrb
mov
push
mov
scas
add
pop
lcall
mull
fwait
dec
mov
adc
data16
rorl
int
insl
xlat
pop
popa
pop
stos
xchg
adc
ss
cwtl
sub
push
sbb
loop
adc
cwtl
push
add
cmp
in
paddq
repz
jno
xor
loope
add
bound
in
les
test
mov
iret
inc
push
mov
pop
cmp
leave
sahf
pop
rcrb
adc
rclb
int
mov
jno
nop
or
enter
or
mov
popa
les
aas
lds
sub
in
adc
cmp
push
sbb
sbb
add
add
jo
das
and
sti
or
jge
das
rclb
cmpsl
lret
repnz
cmpsl
xchg
ret
outsl
xlat
lea
je
js
xchg
inc
pop
dec
stos
pop
xchg
mov
test
push
sbbb
nop
add
or
xchg
adc
jne
xor
cmpsl
adcb
aad
jl
dec
push
in
mulps
fs
pop
xor
jle
inc
push
insb
adc
insb
push
adc
mov
push
cld
push
pop
lret
cmpsl
xchg
pop
jne
out
gs
in
mov
loope
mov
push
popf
aad
and
cmpsb
lret
ss
outsl
pop
xchg
sub
mov
enter
jbe
insl
push
and
cmpsl
jnp
and
out
nop
and
je
dec
aad
cmp
push
fmuls
xchg
fs
add
mov
fadd
mov
das
cltd
sub
xchg
popf
aaa
sbb
icebp
movsb
xor
aas
dec
cmp
aad
sub
mov
sbb
push
data16
add
mov
call
mov
xchg
push
xor
imul
in
addr16
lcall
fsubrs
cmc
out
js
or
sub
and
scas
sahf
js
sub
inc
gs
and
jp
mov
idivb
icebp
wbinvd
push
test
pop
sti
pop
vmovupd
enter
mov
pop
fadd
outsl
movsl
pushf
popa
or
ficomps
arpl
sub
push
jns
cli
ljmp
dec
mov
xchg
jg
lahf
inc
push
dec
jge
mov
dec
sub
sarl
jg
mov
jo
daa
stos
pop
adc
adc
xchg
arpl
jmp
loopne
ret
xor
inc
jge
cwtl
outsl
pop
shl
pop
adcb
dec
adc
jecxz
pop
lea
ss
imul
aam
std
push
cld
les
adcb
sub
scas
xor
inc
je
pop
ficomps
xchg
test
push
clc
fisubrl
pop
or
cli
mov
jb
cli
popl
mov
cmp
pop
imul
andl
sahf
push
jo
pop
in
xor
pop
cmp
pop
in
xchg
and
ss
rcl
clc
pop
mov
idivb
incl
popf
inc
and
iret
mov
or
fdivrp
in
mov
mov
ss
outsb
xchg
ss
mov
jbe
pushf
test
push
sub
push
mov
js
jle
cmp
push
push
in
daa
cmp
or
xchg
pop
stos
addr16
ss
repnz
fdivs
shll
and
ret
cltd
add
jmp
pop
stos
and
mov
lds
stos
mov
das
and
dec
lsl
sbb
sbb
jg
add
pop
imul
jle
cli
ret
iret
lret
push
cmp
test
xlat
sub
ss
hlt
inc
jle
mov
lds
test
cmp
test
or
les
cli
mov
adc
xchg
xchg
mov
rcrl
push
popf
aas
int3
push
aam
and
push
stos
jp
xchg
ret
sbb
adc
repz
xor
xchg
xor
pop
push
dec
mov
lock
xchg
cltd
push
pushf
addr16
int3
insl
jmp
loop
jno
hlt
xchg
hlt
out
pop
cmpsb
mov
jg
inc
push
xchg
xor
xchg
rclb
lret
repz
loope
rol
insb
mov
nop
movsl
mov
dec
scas
outsb
xchg
mov
xchg
hlt
xchg
out
cmp
inc
jb
int3
jb
push
divb
add
push
in
ret
xchg
in
in
jl
inc
testl
lcall
lods
jmp
jno
mov
pop
ss
rclb
sti
pop
xor
loope
pop
bound
cwtl
and
cmpsl
outsb
adc
pop
xor
pop
movsl
cmp
shr
pop
xchg
test
xor
aam
cmp
mov
insl
movsb
imul
mov
or
mov
aas
cmp
fs
ds
out
sub
aad
repz
pushf
sbb
test
fst
jae
xor
cmp
adc
and
pop
arpl
stc
push
in
and
shrl
sub
cltd
mov
cmp
jp
jge
push
cmpsl
push
ret
pop
push
lea
idivl
nop
mov
dec
fwait
mov
inc
movsl
mov
rcrl
xchg
in
adc
add
xchg
cmpsb
loope
arpl
pop
xor
dec
clc
xor
pop
jl
jbe
and
int3
insl
xor
dec
xchg
xchg
inc
shrl
imul
icebp
test
xor
mov
push
pop
inc
sbb
jnp
mov
xchg
and
sub
mov
push
adc
push
out
shll
popl
mov
and
arpl
jecxz
popf
popf
or
xchg
mov
arpl
jge
rcrb
mov
pop
shll
dec
clc
xchg
mov
inc
enter
iret
shrl
std
cld
fcmovu
ret
or
xor
movsb
sbb
inc
aaa
shrl
adc
dec
fsub
js
mov
xchg
sbb
insl
sbb
xorl
pop
test
cmp
sub
cmp
cmpsb
fisubs
arpl
cmp
arpl
fdivs
xchg
push
cmpsl
push
pop
lcall
adc
or
orb
not
xor
lods
sbb
loopne
jle
jns
jnp
out
adc
divl
jnp
je
push
scas
scas
xor
fisttps
in
cmp
iret
jecxz
add
sbb
movsb
and
daa
mov
mov
in
dec
add
cld
sub
dec
dec
shr
loopne
jo
dec
or
xchg
sarl
push
or
sub
cltd
push
push
xorb
dec
iret
mov
fmuls
mov
cmp
sub
es
loopne
inc
arpl
and
or
dec
jne
pop
jle
pop
and
push
fnstsw
mov
fwait
mov
push
gs
inc
jmp
inc
imul
mov
pop
inc
mov
jo
inc
mov
test
pop
out
int
call
xchg
aam
jge
lods
cmp
adc
ficoml
mov
pop
incl
outsb
loopne
andl
pop
cltd
fidivl
jo
cmp
cmpsl
sbb
sub
mov
adc
or
cld
pop
and
out
mov
call
and
sbb
imul
pop
outsb
lods
sarb
std
pop
sub
sbb
dec
and
data16
sahf
shrl
addr16
icebp
dec
daa
and
inc
cmp
mov
cmpsb
or
adc
dec
pop
daa
cmp
mov
push
jae
bound
jae
sarl
push
imul
inc
les
mov
aad
mov
sbb
fucomp
fstpt
ret
and
xchg
addl
push
inc
mov
aad
mov
xor
pop
int
ret
mov
and
pusha
scas
out
push
push
pop
mov
pop
loope
clc
jns
dec
lds
inc
inc
xchg
test
sbb
jns
mull
xchg
icebp
pop
push
fldcw
push
dec
push
fsubrs
call
and
ja
lock
enter
pop
lds
mov
pop
or
adc
aas
scas
in
dec
loope
push
dec
lret
aam
mov
mov
mov
sub
dec
and
mov
scas
dec
or
shrb
sbb
jno
shll
mov
mov
push
int
mov
loop
shll
mov
jnp
mov
cmp
jnp
hlt
adc
push
lods
int
sub
cmp
mov
adc
loope
test
addb
push
enter
push
cmp
in
xchg
ljmp
in
push
cmp
inc
hlt
loopne
and
jl
enter
sbb
or
aaa
mov
sahf
or
xchg
fsubrs
inc
adc
mov
sbb
arpl
iret
lock
mov
js
mov
fsts
lds
mov
mov
sub
cmpsb
adc
std
dec
loop
lods
pop
push
dec
jb
aad
mov
arpl
xchg
outsb
sub
pop
idivl
add
push
bound
cmp
sub
orl
fstps
mov
xchg
adc
clc
mov
repnz
in
es
fnstenv
add
lock
int3
ljmp
nop
out
roll
mov
int
xchg
jne
sub
cmp
push
fisubrl
cmc
das
jnp
cs
jne
mov
xor
cmp
dec
ja
outsl
movsb
xor
sbb
mov
test
sarl
pop
pop
mov
push
mov
lds
fldl
add
cs
mov
negb
insl
sub
jae
xchg
pop
test
adc
mov
stos
xchg
or
sbb
inc
pop
mov
sub
dec
fwait
mov
aas
pop
and
outsb
orl
jp
ss
leave
roll
xor
bound
addr16
add
cs
sub
push
jge
into
call
popf
xchg
dec
scas
int3
xchg
jle
dec
aam
js
popf
rorb
xchg
out
lahf
sbb
mov
ja
lahf
shlb
pusha
mov
pop
in
adc
adc
inc
stc
sub
leave
xchg
fwait
xor
in
dec
loope
mov
mov
or
in
cwtl
mov
outsl
outsb
stc
jecxz
int3
int3
hlt
inc
fdivrs
sub
fstpl
fsubrs
cmp
sub
inc
fcomps
jecxz
sahf
xor
cmp
shrb
adc
sbb
loope
xlat
pop
mov
jo
push
ljmpw
inc
fisttps
shrl
je
pop
xlat
bound
mov
adcl
cmpsb
repnz
ljmp
clc
repz
dec
mov
out
scas
mov
mov
data16
ds
xchg
mov
xor
scas
xchg
pushf
jmp
mov
adcl
xor
into
jne
clc
pusha
or
adc
jbe
ret
idiv
or
inc
jle
out
sub
pop
pop
aaa
inc
pop
xor
jge
and
add
mov
or
ret
sub
xchg
jno
xor
mov
movsl
out
dec
sbb
mov
mov
imul
gs
in
cmc
push
jno
pop
out
fstl
and
mov
loop
popf
addr16
ret
lcall
cld
mov
out
ja
jbe
insl
dec
pcmpeqw
hlt
cld
icebp
in
jno
add
xor
cs
or
jne
cmpsb
cmpsl
add
inc
aaa
addr16
mov
test
stos
mov
daa
out
xchg
and
pop
out
or
aam
out
popf
push
into
sbb
popf
mov
mov
fisttps
lds
push
mov
push
or
dec
xchg
xchg
out
add
testl
inc
sub
cltd
loopne
testl
in
xor
cmp
cld
mov
test
push
push
jl
pop
orb
sbb
ja
sahf
lcall
add
cmp
jl
out
sub
fwait
push
popf
and
mov
scas
push
add
mov
jnp
and
cmp
sti
int3
pushf
cmp
sbb
shlb
shrl
mov
xor
mov
test
pop
mov
scas
movb
add
lock
shll
cmpsl
push
fwait
mov
xchg
mov
xchg
push
sahf
loopne
fucomp
inc
sub
mov
cli
mov
insb
cmpsb
xor
vpaddsw
mov
push
cmp
jns
mov
xlat
mov
in
ja
or
out
jns
xchg
lods
xchg
lods
lock
cli
lock
imul
test
pop
jns
xchg
inc
icebp
jp
xchg
idiv
bound
aaa
fs
dec
mov
movsb
cld
or
and
xor
adc
push
leave
lock
test
mov
inc
jne
cmp
jne
inc
imul
sbb
lcall
xchg
pop
imul
outsb
jns
mov
mov
xchg
mov
inc
xor
dec
out
pop
cmpsb
jmp
mov
out
mov
xchg
mov
push
jo
pop
rep
rcl
and
adcb
jb,pt
add
mov
lock
fimuls
or
cmp
xor
push
dec
sub
xchg
ljmp
outsb
out
add
movsl
jo
stc
cmpsb
push
in
pushl
test
push
aam
ret
clc
push
in
popf
pusha
jae
pop
mov
push
movsb
fnsave
outsb
jl
xlat
fdiv
aaa
outsl
adcl
inc
dec
fdivl
repnz
push
and
arpl
dec
and
insb
and
outsb
sbb
fdivrs
aaa
push
mov
test
inc
je
stc
iret
cmp
dec
in
aad
les
test
jbe
mov
adc
gs
lret
dec
cmp
out
loope
call
xchg
pushf
xchg
in
jo
loop
in
outsb
adcl
imul
sarb
int
xorb
ljmp
jmp
jno
add
mov
inc
push
or
jbe
push
test
xor
lret
mov
jne
xchg
pop
or
push
cmp
cltd
mov
fidivl
push
dec
xchg
mov
movsb
ljmp
dec
jg
xor
sahf
shl
aam
pop
sbb
scas
sahf
xchg
push
xor
imulb
pop
jno
stos
sbb
fstpt
jae
xchg
xchg
imul
sti
insb
fwait
push
cmp
xchg
push
or
sbb
mov
test
lock
and
lea
push
sarl
or
popa
xor
mov
addr16
pop
xchg
addl
xor
xor
notb
fidivrs
jb
pop
jae
ja
cmc
xor
mov
lea
jo
inc
aas
sti
shlb
inc
push
mov
xor
out
mov
adc
leave
jns
push
adc
xor
popf
add
and
jno
push
push
fdivs
out
mov
push
fwait
mov
aam
dec
mov
mov
stos
ljmp
fstpt
loope
mov
xchg
dec
lock
lret
cmp
lods
nop
insb
mov
inc
aam
xchg
int3
or
stos
testl
adc
xlat
imul
inc
pop
shrb
pop
stos
scas
stc
imul
lods
xchg
stos
sub
aas
jg
nop
repz
adc
mov
xor
mov
sbb
stc
lret
enter
shrl
loope
pop
jecxz
sbb
jmp
cmpsl
fwait
enter
mov
mov
pop
inc
aas
and
push
test
les
jle
jne
xchg
loopne
mov
xor
pop
add
cltd
inc
push
add
and
fidivrs
sbb
ds
cwtl
xor
add
jne
hlt
mov
sub
push
iret
xor
jmp
mov
pop
mov
inc
aas
scas
push
pop
xchg
lcall
outsb
dec
mov
lods
xor
lock
lods
or
out
rcr
and
movsl
add
dec
add
push
fistpl
dec
adc
iret
mov
mov
pop
pop
test
mov
pop
js
cs
testl
sahf
sub
mov
mov
popa
and
ds
in
push
loopne
iret
xlat
pop
lcall
jbe
mov
push
ja
insb
loopne
pop
js
xchg
mov
xchg
sahf
les
mov
jae
test
xchg
push
cld
arpl
stos
fsubp
and
dec
xlat
and
adc
mov
push
aam
inc
arpl
pushf
mov
insl
push
or
add
sub
psubusb
sbb
leavew
sub
dec
mov
fsub
fwait
push
cli
xor
ret
pop
push
pop
fcom
imul
jo
neg
outsb
adcl
add
adc
mov
mov
mov
cld
pusha
adcb
repnz
cmp
jne
xor
mov
and
sbb
push
es
ret
enter
pop
push
dec
in
icebp
je
test
xchg
dec
pop
cli
cmpsl
jnp
rcrb
pop
adcl
push
lahf
inc
jge
sbb
fcomps
ljmp
sbbb
neg
outsb
adcl
xchg
xor
xchg
pop
dec
sub
je
adc
pop
outsl
adcl
aas
sub
add
mov
jecxz
pop
js
xchg
add
leave
clc
jge
fbld
sub
inc
mov
loopne
divb
jnp
fmull
popf
jg
mov
pusha
cwtl
xor
arpl
aad
pop
xchg
loope
sub
out
add
fwait
mov
mov
mov
ds
repz
cmpb
and
pop
fs
into
jmp
dec
jb
sub
lahf
or
adc
cmp
push
push
cmp
jecxz
xchg
sbb
sub
inc
dec
scas
sub
inc
insb
pop
imul
xlat
add
add
push
aam
inc
repz
pop
stc
xor
sub
jmp
jbe
mov
movsl
xchg
out
mov
mov
fdiv
mov
jno
fisttps
ja
mov
add
and
cmp
pop
rcr
sub
outsb
add
xor
cmp
bound
pop
xchg
fisttpll
mov
push
lret
dec
repnz
int
cmpsb
daa
out
popa
jne
jecxz
sub
or
lret
add
mov
fsub
ljmp
pop
sbb
and
add
cmc
aas
add
push
shrb
xchg
jns
jae
mov
jo
pop
fs
ljmp
shll
dec
dec
add
lahf
call
ljmp
xchg
mov
or
sbb
pop
mov
sbb
mov
out
stos
inc
repnz
cmc
xchg
cmp
js
stc
sbb
adc
enter
fsubrs
mov
dec
cmpsb
adc
cmp
cltd
mov
loopne
lods
sbb
pushf
dec
jb
adc
push
cmp
cli
jmp
add
aas
sbb
pusha
cmp
or
mov
mov
mov
int3
lea
jae
rorl
pop
xchg
cmp
fucomi
movsl
mov
fwait
inc
aam
dec
sbb
subb
popa
mov
lock
sahf
daa
test
std
js
push
jo
loope
test
mov
add
push
cli
mov
mov
mov
je
divb
mov
clc
popa
mov
pop
rcll
or
pushf
fcomps
sti
sti
dec
mov
aaa
push
dec
shlb
mov
and
or
inc
sbb
inc
in
ljmp
and
aam
iret
outsl
fbstp
add
popf
int3
dec
xchg
or
mov
xor
push
out
shll
popf
jmp
cmp
dec
or
mov
loope
dec
or
dec
jo
mov
pop
xor
shld
inc
and
testl
and
fwait
pop
rcr
pop
jp
and
and
mov
jns
lret
lods
jmp
shr
fidivrs
cmp
sub
loop
bound
mov
test
pop
pop
inc
adc
mov
add
arpl
enter
in
fstl
adc
popa
in
mov
je
mov
and
int
mov
lods
mov
ljmp
jg
cmp
lods
dec
cli
js
and
iret
pop
push
scas
fsubrl
int3
mov
xor
push
and
push
shrb
loope
pop
pop
sarb
push
sar
mov
loopne
pop
cli
mov
and
les
mov
cmp
arpl
outsb
pushf
xchg
jecxz
cli
bound
push
and
fwait
dec
mov
add
dec
jmp
in
pop
das
loopne
lods
je
xor
xor
adc
or
dec
mov
scas
gs
das
sub
in
mov
clc
inc
addl
cmpsl
pop
ja
in
js
test
ja
out
mov
lea
and
mov
daa
adc
cmpsl
xor
fidivs
xchg
call
das
xchg
loope
or
push
clc
fnstcw
sub
sbb
adc
loopne
or
cld
int
xchg
sub
outsb
adc
mov
or
jl
fcoms
out
cmc
sub
out
sar
sahf
scas
data16
clc
lock
rcrl
shll
fnstcw
in
cli
mov
jbe
mov
adc
xor
test
cltd
cmp
mov
fs
int
mov
add
scas
lahf
call
out
inc
lret
addb
pop
mov
and
aad
insl
xchg
jnp
cmp
dec
insb
mov
or
jg
mov
push
mov
pusha
repz
stc
int
jno
add
orb
xlat
jecxz
outsl
push
nop
lods
stos
adc
push
test
in
adc
in
cld
mov
das
mov
jle
mov
in
mov
add
sbb
add
push
clc
or
and
sub
sub
pushf
mov
cmp
adc
mov
mov
out
mov
inc
stc
adc
rcl
stos
cmp
add
mov
push
add
fldl
dec
aaa
adc
outsb
xchg
inc
subl
cs
aam
cmp
shll
mov
ret
notl
out
cmp
jg
outsb
bound
jmp
bound
insl
xor
imul
dec
add
xor
repz
and
jnp
mov
dec
sbb
fs
lods
insl
push
jns
mov
cs
adc
mov
cmpb
cmpsl
or
push
add
and
aaa
mov
shr
test
xchg
add
fwait
mov
cmp
push
and
sbb
pop
test
cmpb
push
dec
fidivrl
jnp
dec
inc
mov
in
xor
imul
loop
stc
mov
test
ds
jge
dec
dec
jns
mov
shl
pop
shll
sbbl
xor
sti
add
xor
movsl
pop
cwtl
mov
add
dec
stc
jbe
jp
test
xor
xchg
fstl
pop
jns
lock
add
jl
xor
sbb
xor
fdivs
inc
sbb
push
xor
pushf
fiadds
inc
leave
xchg
les
imul
std
xor
sarl
stos
mov
inc
fs
loope
pop
xchg
pop
xchg
inc
adc
call
or
fwait
aad
cmp
add
push
cmpsb
add
std
push
jnp
aaa
inc
cmpsb
sub
jecxz
aaa
inc
cmpsb
jo
pop
lret
jle
cmp
sti
push
ret
or
fwait
aad
sti
sbb
in
cmp
sbb
and
and
sbb
or
fwait
aad
stos
and
imul
scas
in
cmp
sub
jmp
shll
cmp
add
inc
int
test
stc
out
or
lock
int3
fucomip
aam
mov
sbb
icebp
rcl
int3
mov
lds
fcompl
and
xlat
aam
mov
push
fsubr
out
inc
hlt
cmp
push
mov
cmp
stc
or
mov
mov
fwait
aad
out
fsubr
mov
ljmp
fwait
aad
pop
mov
fwait
mov
cmp
mov
aad
pop
cmpsl
push
and
adc
aad
fdivrl
data16
int
inc
sbb
inc
pop
fidivl
add
pushf
mov
insl
hlt
int3
in
mov
cmp
add
jmp
pop
cmpsl
jne
jbe
in
pop
mov
and
pop
adc
adc
call
or
lcall
bound
fdivs
cmpsb
les
add
das
mov
imul
or
loopne
mov
push
stc
addl
jecxz
les
pop
pop
cld
sar
adc
adc
mov
repnz
push
pop
push
xor
shrl
lcall
adc
sub
xor
pop
jle
fadds
push
aam
inc
jnp
rorb
ss
adc
inc
subb
fdivs
inc
jle
js
hlt
jecxz
fidivs
shlb
cmp
cs
iret
jmp
jge
mov
xchg
in
or
xor
aaa
incb
sub
lret
ja
aad
in
dec
dec
mov
lret
aaa
inc
fwait
repz
negl
inc
fwait
cmc
dec
add
in
test
mov
cmp
mov
inc
inc
fwait
xchg
icebp
add
test
ficompl
xchg
xor
add
nop
jle
and
pop
xor
adc
jns
or
mov
aam
je
or
jmp
adc
pop
aam
inc
fwait
cmc
sbb
out
movsl
adc
pop
inc
inc
fwait
cmp
add
add
mov
cs
or
pop
add
xor
int
adc
dec
xchg
repz
pop
push
jp
add
nop
xchg
add
mov
cmp
sub
enter
es
test
mov
arpl
sub
js
xchg
sbb
push
jnp
aam
cmpsl
outsb
adc
repnz
adc
pop
jmp
dec
adc
jmp
cmp
in
aaa
and
in
aaa
and
in
aaa
and
in
aaa
and
in
aaa
mov
repnz
and
dec
loope
and
into
xor
add
addl
xor
mov
push
fdivr
mov
inc
pop
mov
dec
leave
sbb
cltd
push
js
and
or
pusha
mov
leave
mov
aad
aas
pop
lret
hlt
jae
push
mov
push
test
cmpsb
jnp
adc
cmpsl
sbb
insb
cmpsl
shrl
push
ja
cmp
lea
adc
add
test
mov
stos
repz
and
jo
lret
sti
popl
pop
repnz
sti
jno
rcrl
movsl
imul
push
push
push
and
in
inc
pushf
icebp
mov
mov
into
cmpsl
stos
lret
dec
sbb
sub
mov
push
test
hlt
add
pop
scas
push
mov
sbb
mov
daa
int3
ljmp
call
setge
imul
jno
push
std
pop
sub
lods
test
push
xor
js
fcom
push
adc
popa
dec
jo
dec
sbb
xor
nop
jb
es
sbbl
arpl
in
fs
inc
jns
popf
mov
cmp
cli
xor
mov
repz
cmp
fwait
push
or
int
out
mov
push
mov
pop
in
aaa
and
mov
dec
movsl
cmpsl
mov
leave
je
ret
xor
push
mov
cld
mov
add
push
xor
pop
xchg
or
push
in
pop
xrelease
daa
sub
jne
fisubrl
pop
xchg
adc
and
in
rol
xchg
stos
jmp
jne
xlat
dec
xchg
jmp
mov
push
add
outsb
push
pop
push
pusha
inc
lods
jns
mov
pop
xchg
xor
jno
ss
mov
out
cmp
xchg
add
loop
dec
sub
and
jnp
jp
roll
inc
pushf
cmp
aaa
scas
pop
mul
sbb
sbb
mov
push
fcomp
aas
sar
aam
pop
jg
popf
aam
test
sarb
lds
cmp
cmp
or
mov
cmc
add
lods
and
bnd
xor
and
jnp
lret
fcmovbe
mov
mov
xor
scas
icebp
enter
add
fcomps
je
jecxz
daa
cmpsb
sbb
nop
jmp
imul
xchg
push
pop
repnz
mov
stos
jmp
fisttps
fcomp
cmp
xor
push
xor
xlat
dec
cli
xor
imul
mov
pop
dec
repnz
shlb
cmpsl
sub
es
sub
das
and
lods
inc
adc
loopne
cmc
pusha
je
xchg
std
jne
std
std
ljmp
dec
lods
je
ret
sub
mov
cmp
movsl
mov
adc
or
add
mov
dec
std
pop
sub
mov
xchg
pop
cmp
imull
je
dec
popf
ljmp
loope
inc
in
iret
fwait
inc
scas
inc
xchg
lret
out
popa
lock
popf
dec
and
out
jne
and
jge
mov
scas
mov
lea
pop
lock
fsubl
sub
sbb
adc
dec
je
mov
mov
push
inc
sarl
push
inc
xchg
fldt
inc
xchg
lret
jg
add
pop
fdivrs
pop
or
dec
aad
push
pusha
sub
jecxz
stc
je
insb
inc
popa
mov
adc
arpl
hlt
shll
aas
ret
mov
outsb
pop
or
sub
sub
and
mov
jp
push
push
pusha
jg
xor
cli
popf
sub
stos
mov
je
push
dec
or
mov
pop
int
push
insb
in
sahf
mov
out
js
push
in
inc
pop
std
cmpsb
jmp
je
in
aaa
sub
jmp
jnp
cmc
lods
bound
cmp
fdivrl
sub
inc
test
jmp
lahf
icebp
xchg
lock
jl
push
lret
jno
stos
ret
loopne
pop
lds
inc
inc
xchg
push
subl
push
xchg
dec
jg
pop
test
nop
leave
int3
cmp
cli
mov
ret
stc
xchg
push
out
lds
lret
sub
rcl
decb
clc
ljmp
pop
sbb
push
xchg
out
ror
arpl
mov
addr16
std
add
mov
pop
pop
pop
insb
and
adc
clc
xchg
add
mov
mov
push
cmp
out
jno
sub
xchg
ret
je
push
mov
sahf
and
xchg
xor
ret
nop
fldl
mov
cmp
cld
fs
push
jnp
nop
inc
shll
rcll
sbb
xor
loop
mov
iret
lods
and
int3
push
sahf
std
jns
out
notb
push
xchg
pop
mov
jecxz
xchg
cmpsb
sahf
out
mov
rolb
sbb
jp
push
lret
mov
or
cli
mov
mov
pop
xchg
jnp
jnp
testb
mov
and
les
icebp
push
les
into
mov
jne
pop
fisubrl
push
pop
mov
jbe
movb
jns
aad
inc
andl
rol
jl
xchg
and
jmp
adc
clc
and
fstl
je
cmp
push
enter
sbb
or
orb
dec
cmp
push
add
adc
arpl
push
fstl
movsl
inc
cs
sub
lds
xchg
xchg
leave
mov
pop
xor
cmpsb
adc
xchg
test
cmp
movsb
push
pop
dec
cmp
xchg
push
cmpsb
mov
and
cltd
popf
bound
mov
or
jae
in
cmp
fadd
jnp
xor
inc
frstor
movsl
cmp
shlb
dec
repz
xor
and
or
or
mov
pop
pop
setge
push
add
notl
lods
add
add
jae
je
xlat
inc
sub
fld
in
ja
lahf
sub
cmp
aaa
js
and
pop
mov
rcll
mov
mov
pop
insb
movsl
xchg
cmp
jmp
cli
fdivl
mov
cmc
iret
sbb
lock
call
pop
aas
ficomps
xor
sbb
je
mov
or
insb
push
arpl
xchg
imul
push
xchg
jns
daa
inc
scas
mov
mov
in
daa
pusha
and
fidivl
test
insb
push
dec
mov
fldt
testl
outsl
cmc
xchg
loope
push
jns
sarl
ljmp
test
xchg
repz
addr16
ja
rcll
rcr
mov
jl
mov
lods
stos
addb
les
scas
dec
jge
movsb
push
stos
data16
cwtl
flds
cmpsb
sbb
push
dec
nop
rcll
sbb
adc
mov
mov
pop
mov
cmp
mov
aad
and
test
add
arpl
xchg
pop
mov
adc
cld
hlt
scas
jb
mov
push
jnp
arpl
xchg
sahf
pop
cli
lahf
mov
mov
sete
xchg
sub
adc
je
test
xor
inc
push
shll
insb
je
enter
loope
fnsave
and
iret
gs
add
rorb
ret
push
ja
pop
mov
sbb
fsubs
stc
ret
cld
and
and
and
addl
jno
scas
into
loop
mov
or
lea
adc
jnp
inc
dec
mov
js
loop
in
ljmp
inc
repnz
sub
sub
xor
stos
mov
mov
popf
push
repnz
xchg
daa
sub
nop
stos
loop
jne
pop
imull
xlat
mov
jne
pop
add
lret
mov
adc
hlt
cmp
call
pop
pusha
cmp
adc
jne
adc
shl
or
mov
push
cmp
cmp
add
xor
repz
cli
xor
les
es
push
mov
push
out
mov
lods
cmp
push
push
xor
pop
sub
lahf
into
mov
imul
add
lret
xchg
repnz
pop
cmp
sub
dec
lods
mov
pop
psubusw
hlt
stos
out
xor
jae
inc
cmp
insl
dec
or
inc
cmp
imul
in
xchg
ret
xchg
ss
cmc
adc
dec
es
mov
and
pushf
xchg
nop
in
cs
fldl
adc
test
fwait
daa
ljmp
add
mov
in
cmp
std
shr
sub
ja
or
add
sbb
sbb
add
mov
pop
adc
jg
data16
stos
fwait
mov
daa
stos
jae
je
push
lock
dec
mov
cmpl
ljmp
lds
popf
das
into
lods
rorb
xorl
ljmp
and
dec
mov
xor
sbb
out
dec
xor
ljmp
pushf
adc
xor
dec
es
and
push
das
and
sbb
or
mov
sub
sub
cwtl
outsl
mov
dec
xchg
add
lods
lcall
subl
or
sbb
shl
sbb
in
mov
std
js
xchg
sub
movsl
dec
das
enter
scas
std
fmuls
int
repz
fists
sub
les
test
jmp
push
sub
fisttps
loop
fmull
into
inc
and
rolb
imul
imul
mov
decl
dec
mov
or
mov
add
push
fisttpl
mov
sub
loopne
in
jmp
jle
rcrb
or
sub
orb
daa
or
mov
add
push
fildl
and
cmpsl
loop
out
jae
jb
lahf
xchg
test
ljmp
daa
ljmp
and
lock
push
cmpsl
scas
daa
ljmp
inc
sbb
dec
sahf
xchg
ljmp
ljmp
and
dec
mov
rol
bound
jae
inc
push
inc
pop
aas
out
ja
mov
imul
sbb
mov
ja
mov
pusha
outsl
mov
push
sub
or
daa
or
js
shrl
fimuls
daa
pop
jbe
sahf
xor
imul
or
ja
jl
xchg
add
aaa
leave
outsl
cmp
push
divb
arpl
inc
fisubrl
pop
xor
mov
mov
sbb
xchg
cli
push
jg
xchg
jg
and
push
jge
lea
fs
ret
sahf
es
in
cmp
push
cld
add
mov
jae
in
mov
add
pop
fcompl
in
fiaddl
xchg
leave
mov
xor
fildll
sti
or
rclb
adc
imull
out
sub
inc
out
lret
and
cmpsl
daa
dec
out
rcrl
pop
out
mov
add
or
jb
adc
es
push
xchg
lahf
fs
jp
and
or
shrb
xchg
testb
inc
mov
pop
andb
loopne
and
xchg
sti
mov
xchg
mov
movsb
and
fs
rcrl
pop
fsubr
fisubs
insl
sbb
and
push
movsb
filds
jp
mov
push
nop
lds
movsl
insl
cmp
xchg
mulb
data16
xor
enter
push
xchg
rcrb
inc
xchg
inc
and
push
imul
jl
xchg
rcrb
sbb
fstl
out
cmp
adc
scas
xchg
mov
push
xlat
and
push
dec
pop
cmp
push
cs
push
sub
std
out
mov
aad
pop
std
subl
or
gs
pop
cs
and
cs
and
cs
and
adc
lock
pop
mov
sbb
xchg
ucomiss
xchg
pop
cmpsl
movsl
sbb
lea
cs
cmp
outsb
mov
std
mov
sbb
fimull
cs
or
adc
adc
or
pushf
push
inc
add
cmp
push
xor
mov
int
lea
adc
aam
pop
and
sub
adc
add
add
xchg
fwait
mov
call
and
cmp
fcmovbe
arpl
rcrl
mov
jno
nop
das
xor
sub
mov
cld
inc
sbb
or
cld
lods
dec
push
pushf
sbb
jg
push
andl
mov
cmp
es
scas
mov
cs
clc
adc
rcr
ficomps
mov
pusha
mov
scas
clc
adc
push
sbb
cwtl
ret
pushf
add
scas
sbb
enter
popf
inc
cmp
cld
push
pop
pop
mov
jae
pop
xor
add
xchg
xlat
je
inc
xchg
in
cmpsb
popa
xchg
aas
push
arpl
inc
popl
xchg
sub
xchg
cwtl
mov
je
and
aad
add
aam
mov
dec
ror
jns
and
jmp
jne
in
subb
pop
insb
popf
loope
mov
jmp
dec
mov
lret
ds
movsl
fldt
or
push
lss
notb
jns
dec
lret
jge
sub
mov
call
outsl
cld
ret
pop
sahf
mov
dec
cmp
stos
lods
idivb
inc
addr16
sub
push
das
fwait
scas
fwait
xchg
cmp
pushf
mulb
dec
lods
sub
xor
fdivp
or
shl
push
mov
out
clc
jmp
sbb
sti
pop
mov
add
lret
pop
xorl
jecxz
push
jo
cld
cmp
jle
jmp
pop
loopne
leave
clc
cmpsl
shlb
pop
cmp
sbb
mov
aaa
sti
subl
je
lods
push
or
pop
jge
inc
in
push
inc
mov
xchg
out
scas
lods
repz
sub
cwtl
dec
dec
add
xlat
and
clc
stos
jg
div
adc
clc
adc
inc
andps
fmull
xchg
mov
bound
mov
nop
cmp
pusha
adc
sahf
out
mov
ljmp
test
add
repz
inc
inc
stc
adc
xor
scas
int3
dec
xchg
aas
jo
pop
push
pop
push
push
nop
push
xchg
aam
xlat
test
cmp
pushf
js
fistl
or
push
mov
mov
jg
push
clc
aam
rol
jo
jb
lods
adc
xor
lds
push
jge
mov
loope
movsl
adcl
sub
add
dec
xchg
pusha
insb
xlat
adc
into
jle
mov
sbb
xchg
test
shll
aas
in
ffreep
cmp
imul
fnsetpm(287
adc
test
fistl
lahf
lcall
push
mov
mov
dec
adc
mov
push
dec
lods
add
and
push
mov
add
lods
scas
and
stos
jge
mov
cli
in
mov
cli
pop
loope
mov
inc
adc
xchg
mov
dec
pop
mov
xchg
nop
xlat
ret
rcrb
jmp
rolb
sub
xor
mov
and
fsubl
sub
xchg
cmp
add
inc
jp
sbb
pushf
ffreep
inc
dec
testb
adc
add
sub
sub
inc
cmp
test
rclb
fdivr
pusha
xor
fidivrl
gs
test
imul
xor
jle
loop
xchg
or
sub
mov
jno
insl
fnstcw
sbb
testb
pushf
jns
lods
in
mov
in
ss
jns
jge
push
add
test
out
enter
pop
test
mov
call
je
scas
xchg
adc
clc
dec
mov
sub
loope
push
push
mov
or
enter
inc
xchg
adc
clc
and
mov
sbb
out
insl
pop
ss
sbb
push
hlt
xor
aad
jb
mov
add
or
sub
pop
push
cmp
and
popl
test
jns
clc
stos
mov
xchg
fidivrl
pusha
and
push
pusha
mov
push
adc
mov
in
mov
fldenv
jmp
xchg
adc
bound
xchg
mov
mov
leave
inc
enter
push
repnz
iret
out
xchg
lret
cmp
insl
or
pop
lds
jae
shlb
and
in
in
cli
pusha
add
fcmovu
lock
pop
cli
scas
inc
mov
loope
push
pop
mov
push
pushf
jmp
lods
mov
mov
inc
fstpt
sbb
xchg
arpl
and
out
cs
sbb
add
sar
hlt
nop
pop
or
lret
sar
and
push
hlt
gs
jns
mov
pop
xchg
icebp
or
dec
fmulp
adc
fcompl
fs
adc
stos
jg
stos
enter
in
outsl
ja
ret
rcrl
mov
daa
mov
mov
popa
test
sub
jl
pop
shll
popl
lods
sti
out
mov
and
ja
dec
shlb
das
loop
mov
or
aaa
sahf
jle
stos
imul
sub
inc
push
mov
or
pop
cltd
outsl
pop
sbb
into
fimull
stos
pop
xchg
mov
jnp
imul
pop
jo
insl
push
fwait
and
notl
and
aas
jmp
out
xor
ja
cmp
fwait
xor
cld
xor
jge
xchg
shr
inc
test
jp
aaa
fninit
xor
aam
mov
icebp
xchg
adc
ror
test
repz
iret
scas
es
mov
add
fldcw
ds
cmpsb
jmp
mov
insl
push
lods
mov
inc
mov
and
cmc
or
aas
repz
inc
jo
movsb
jns
cmp
rcr
imul
sub
or
sub
inc
in
fnstsw
pop
push
js
inc
xchg
fsubs
outsb
dec
nop
jae
fwait
or
cld
or
add
mov
dec
mov
insb
pusha
xchg
imul
mov
inc
mov
cmp
and
sub
mov
ss
arpl
sbb
mov
js
popl
jae
jg
lret
add
lds
mov
cmp
push
or
mov
iret
arpl
bound
adc
add
inc
push
ljmp
jl
lcall
mov
faddl
stc
xor
out
aas
or
xor
and
cmp
mov
pusha
mov
sub
rol
push
add
rolb
push
ss
jae
test
cmp
push
pop
jecxz
or
and
movsl
stc
daa
push
dec
inc
xchg
pop
jecxz
jb
lret
movsl
mov
jo
xchg
mov
imul
xor
cmp
and
out
stc
and
das
ret
xchg
lock
adc
jp
cmp
xor
jge
pop
adc
mov
cmp
jb
test
xor
push
call
lret
and
mov
mov
mov
bound
jae
into
ljmp
mov
push
jne
jmp
ficompl
push
rolb
and
mov
push
jl
dec
fwait
jb
test
imul
stos
xor
xor
push
repnz
cmp
and
leave
and
pop
fiaddl
push
lock
pop
jmp
xorb
mov
bnd
fisttps
out
push
imul
cli
and
xor
loope
xor
cwtl
lods
lods
aas
data16
cmp
ds
jbe
inc
movsb
pop
in
cmc
jae
shl
out
sub
jp
repz
jns
leave
stc
roll
repnz
xlat
jno
or
not
repnz
xor
outsl
jp
and
movsb
popa
ss
filds
mov
jne
add
into
pop
and
jmp
sub
cmp
sub
jno
adc
popa
cltd
sub
inc
and
sbb
loop
mov
mov
in
rolb
stos
mov
cmp
rcll
and
and
test
fisubl
push
adc
lcall
jae
dec
frstor
jg
jl
cmp
jbe
xchg
inc
cmc
mov
and
lods
rcrb
roll
ljmp
dec
cli
jecxz
inc
pop
adc
rorb
push
sbb
bndldx
or
sar
sarl
test
jg
push
xchg
jne
outsb
ljmp
out
cmc
pop
clc
lret
mov
jle,pt
jns
into
xchg
xchg
aaa
test
fdivl
cmp
int
frstor
sub
ljmp
xor
roll
adc
repz
or
decl
jo
push
stc
pop
pushl
jmp
popf
mov
jg
sub
clc
or
xor
inc
inc
loop
or
neg
incl
repz
mov
je
ja
cltd
cs
xchg
cmp
push
push
cmp
xor
testl
fwait
out
call
jle
cltd
xor
sub
lock
shrb
bound
push
in
xchg
shrb
das
popa
arpl
aas
mov
test
adc
xor
dec
mov
loope
sub
sahf
mov
pop
mov
scas
loope
cmp
mov
hlt
nop
lds
fidivrs
scas
sub
push
push
shlb
xlat
das
je
mov
or
lret
mov
inc
cmp
fnstenv
pushf
rcrb
ljmp
shlb
dec
fwait
push
pop
int3
in
xor
fucomi
mov
fmull
push
jno
pop
lods
mov
inc
lea
rol
mov
adc
jnp
andl
mov
and
insl
jno
mov
adc
adc
cs
mov
cmc
mov
add
pusha
cmp
or
lock
mov
push
gs
lret
imul
stc
ret
arpl
and
insb
testl
pop
dec
dec
into
imul
test
xor
leave
mov
dec
loop
fadd
bound
jno
loopne
xchg
inc
stos
jl
inc
sbbl
nop
xchg
outsl
ljmp
fistps
mov
fildll
mov
loop
push
lock
add
ljmp
sub
mov
xor
jmp
jnp
mov
fs
repnz
lcall
mov
sahf
xor
clc
sahf
xor
clc
sahf
xor
clc
sahf
xor
clc
sahf
xor
clc
adc
pushf
clc
sahf
leave
lods
sbb
sbb
push
test
ret
push
aad
mov
and
scas
in
cmpsl
mov
popa
cmpb
out
cwtl
divb
adc
inc
repz
xchg
adc
repz
add
ds
lea
pop
push
push
pusha
xor
sub
lret
cmp
cwtl
cmp
xor
xor
adc
lods
cmc
xor
loope
fucom
push
xchg
pop
xor
imul
xchg
in
mov
dec
jmp
repz
sbb
ljmp
lret
sbb
aas
xlat
lahf
cmpsb
idivb
inc
lret
scas
pop
inc
int
jne
fstpt
or
jp
int3
pop
push
ja
push
jmp
xchg
push
or
and
stos
xor
adc
inc
jg
cmp
jmp
mov
imul
in
add
jns
or
incb
jl
push
sar
popf
repz
sub
inc
cmp
pop
or
mov
cmpsl
in
popf
rolb
dec
sub
pop
fisubl
push
and
mov
push
insb
cmp
mov
push
mov
sub
gs
and
mov
ss
ret
into
in
loopne
neg
addr16
and
and
cs
out
fwait
lahf
insb
sub
cli
shlb
shrl
jns
scas
popf
sbb
hlt
xor
mov
sbb
pusha
and
les
or
frstors
push
je
sbb
out
enter
mov
pushl
aaa
mov
pop
mov
in
or
push
fwait
pop
movsl
fildll
int3
cld
or
xor
sbb
int3
xor
ud1
xchg
lret
cmp
inc
pop
push
fdivr
add
shlb
push
insb
pop
fldt
push
cli
mov
leave
jp
insl
mov
cmpsl
jle
cmpsb
stos
and
fildl
es
cmp
dec
pop
imulb
or
add
xchg
mov
and
dec
imul
push
xor
dec
scas
adc
inc
test
lret
xorb
lea
mov
pushf
mov
mov
sti
inc
je
push
icebp
call
xor
inc
xchg
mov
std
imul
dec
inc
cld
loop
mov
shrl
in
fldenv
shr
or
bound
in
cmp
xchg
pop
mov
movb
add
lret
out
xchg
test
call
addl
outsl
add
sub
fcom
js
shlb
rol
fstl
fimull
push
inc
sahf
pusha
cmpsb
lock
shrb
loop
and
in
push
xor
andb
jb
rorl
adc
cli
shlb
jg
and
test
add
jae
add
xor
mov
fldt
loop
xchg
sub
sbb
jl
inc
sbb
push
inc
mov
psubusb
dec
inc
lahf
pop
xor
dec
jl
lods
in
mov
add
add
nop
pop
add
call
idivl
rorb
sahf
and
cmpsb
inc
xchg
sub
sarl
pusha
add
sub
sbb
jae
cmpsl
adc
dec
push
mov
cmp
sbb
or
fcmovb
sahf
inc
cld
rcl
in
popf
lods
movsl
and
add
sub
out
xchg
fists
sub
pop
push
xorl
imul
sub
jo
fisubl
loope
xchg
inc
adc
pavgw
push
or
popa
iret
xrelease
mov
xchg
dec
inc
stos
mov
mov
mov
sub
loope
fcompl
fwait
std
mov
inc
cmp
xchg
test
add
inc
int
mov
xchg
jp
fs
inc
jl
fwait
stc
cmp
xchg
xchg
jecxz
xchg
insb
jbe
push
push
sbb
cmp
cmp
inc
xor
ja
pop
jp
femms
call
push
stc
adc
lahf
xor
ret
and
pop
ja
cmp
dec
adc
hlt
fdivl
incl
inc
sbb
in
repz
into
and
cmpsb
mov
and
imul
mov
sbb
icebp
jns
cli
mov
gs
ljmp
rolb
mov
aad
jl
push
hlt
sbb
inc
loope
in
adc
int
ret
jl
iret
ljmp
fwait
cmpsl
fimuls
inc
sti
ret
xchg
mov
mov
jmp
into
adc
sbbl
fildl
pop
scas
mov
inc
cmp
sbb
mov
push
fs
dec
arpl
xor
subl
aaa
sbb
das
cwtl
pop
and
in
push
xchg
jmp
jno
xor
je
mov
adc
stos
sub
inc
push
sbb
inc
mov
mov
jb
fwait
outsb
push
pop
das
push
dec
inc
pop
lods
adc
cwtl
outsb
xchg
mov
push
ja
cmpsb
add
dec
daa
shrb
mov
je
into
stos
fdivrl
push
pop
das
push
decl
pop
shrb
imul
push
test
sti
pushf
in
ficoml
fdivrl
out
inc
in
enter
inc
xor
mov
sarb
or
movsb
outsl
ret
sbb
adc
in
mov
inc
xlat
divb
or
sub
xor
ret
adc
sub
push
rcll
mov
std
outsb
fcmovnbe
pusha
pop
mov
and
mov
ror
fdiv
pop
cmp
pop
call
sub
shlb
lea
sbb
jbe
push
and
adc
insl
lods
fcoms
and
pop
mov
jge
sub
sbb
inc
jns
jb
ss
adc
cmp
mov
rolb
inc
fs
jmp
hlt
adc
shlb
ret
aaa
add
ds
jmp
shll
imul
stc
imul
inc
or
hlt
movsb
lret
sub
jmp
dec
mov
je
jo
arpl
jge
mov
lods
sarl
test
mov
and
cmpsl
adc
dec
ss
pop
pop
cmpsb
inc
add
dec
pop
cli
cwtl
mov
pop
xchg
dec
fidivrs
sbb
mov
and
cwtl
pop
test
mov
and
lods
arpl
mov
ss
loopne
loopne
cmp
jbe
inc
add
dec
inc
int3
in
daa
xor
insb
gs
and
fucomi
int
sbb
pop
movsl
sub
icebp
mov
out
cs
jne
pop
mov
gs
fidivs
mov
loope
mov
jmp
and
cltd
cltd
mov
inc
jge
xor
lret
dec
cmp
mov
mov
or
mov
push
jnp
add
adc
sub
cs
push
fildll
mov
dec
mov
sub
add
das
mov
or
cmp
cmpsb
enter
clc
pop
in
ljmp
into
pushw
or
test
xor
xchg
cmp
cmp
or
jecxz
lret
mov
mov
mov
pop
ss
sarl
leave
mov
and
rcrb
mov
scas
sub
push
mov
xor
shl
fs
fwait
push
mov
inc
and
xor
mov
fistps
xchg
pushf
sbb
ss
pushf
cmp
ret
xor
xor
pop
int3
nop
outsl
outsl
das
inc
lock
in
int
sbb
in
xchg
push
fwait
adc
cld
insl
push
jmp
sti
insl
pop
inc
mov
imul
and
mov
es
dec
mov
dec
cltd
adc
mov
inc
lock
cmc
outsl
adc
js
scas
jo
xchg
sbb
cmpsb
cltd
xor
aas
das
cmpsb
xchg
mov
cmp
fmull
test
pop
pop
das
addb
or
sub
push
out
push
je
lea
notl
ret
loop
and
mov
mov
xlat
and
dec
or
aaa
sub
stc
sub
mov
loope
dec
inc
scas
jl
mov
arpl
xchg
or
cltd
sbb
cwtl
cld
mov
cld
out
stos
mov
sti
push
movsl
mov
fidivrs
and
push
adc
call
aaa
sub
sarb
adcl
and
stos
sbb
sub
dec
push
add
dec
aaa
cmp
and
lret
aaa
stos
mulb
jbe
loop
push
sbb
and
out
jae
lcall
xchg
inc
sbb
stc
dec
aaa
dec
mov
repnz
std
out
insb
decb
sub
push
cmp
dec
mov
ja
cmpl
fwait
cmp
xor
sbb
movsb
or
sbb
cli
loopne
movsb
aas
or
mov
jnp
cltd
push
xor
out
adc
scas
rcll
mov
mov
or
aam
jno
add
fyl2x
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
add
adc
ja
sbb
xchg
inc
sbb
test
cmp
call
inc
testl
dec
fnsave
int3
popf
in
add
xlat
orl
sbb
iret
add
std
xor
mov
push
cmc
fwait
ss
sbb
cli
add
clc
js
jle
shrl
les
int3
jnp
and
pop
arpl
lea
push
aaa
out
add
dec
jbe
inc
mov
inc
sbb
or
cmp
aaa
inc
cmp
sahf
inc
dec
inc
push
outsb
or
negb
in
imul
call
dec
pop
rorl
jl
cli
jo
xor
xchg
jne
leave
xor
lea
mov
add
test
js
in
push
scas
dec
mov
int3
mov
sbbb
shl
lret
pop
pusha
mov
push
xchg
in
sbb
mov
xchg
mov
ja
and
fisubrs
push
jbe
lods
sbb
imulb
jbe
fldcw
mov
insb
scas
or
sbb
fmulp
stc
cmp
lret
adc
pop
mov
sbb
cld
fsubrl
pop
dec
pop
rcrb
mov
xor
cmp
dec
arpl
sbb
jbe
hlt
mov
ljmp
inc
test
and
test
add
or
jle
test
or
pushf
or
cmpsl
sbb
dec
int
lahf
sub
xlat
insl
ds
mov
int3
insb
add
cs
pop
and
gs
out
cld
std
and
les
out
xchg
icebp
inc
mov
adc
ljmp
cmpsl
mov
inc
scas
jle
push
jg
inc
sbb
leave
xchg
ret
popa
jmp
push
xchg
imul
subl
add
ret
nop
gs
jbe
pop
dec
mov
mov
imul
adc
sub
scas
imul
mov
icebp
mov
shrl
fldt
mov
mov
mov
insw
jo
imul
popf
push
arpl
add
xchg
push
mov
scas
out
data16
xchg
push
es
mov
jb
test
and
and
imul
sbb
mov
xor
insl
lds
neg
lea
fs
mov
icebp
cmp
mov
test
cld
cltd
dec
and
insl
bound
pop
cmp
adc
in
in
mov
cmp
scas
push
popf
mov
stc
sub
mov
sbb
jcxz
mov
mov
adc
mov
jmp
imul
fidivrs
rol
xchg
jb
dec
pop
call
push
mov
push
pop
sbb
or
aam
mov
xor
ds
mov
mov
push
out
gs
int3
cmp
mov
mov
lods
lock
pop
pushl
popf
xor
lods
lods
addr16
mov
adc
mov
push
cmp
or
xor
inc
pushf
jbe
xchg
jle
mov
push
icebp
xchg
shll
mov
sub
int3
incb
into
mov
stos
pop
sbb
dec
fidivs
test
push
enter
dec
pop
hlt
add
in
xor
pop
stos
inc
enter
xor
add
loop
insb
cmpl
popf
rorl
or
adcl
test
cmp
sub
sbb
mov
cli
andb
jmp
pop
out
or
push
xor
jo
ret
inc
add
add
add
call
and
mov
mov
and
sub
xchg
adc
inc
mov
and
out
pop
cli
ret
shl
out
mov
mov
dec
imul
dec
xchg
pop
clc
ja
cmp
mov
ror
clc
ss
jnp
aas
mov
mov
dec
ret
sbb
int
mov
push
dec
aad
fisubrs
push
enter
icebp
rcrb
icebp
mov
in
es
push
test
mov
dec
jnp
decb
in
imull
inc
rcr
adc
cmpxchg
cmp
test
mov
arpl
fldt
leave
test
pop
jg
mov
ja
in
sbb
add
test
daa
mov
sub
aas
pop
out
add
outsb
and
sti
dec
stos
inc
imul
inc
insl
out
add
jp
pop
in
js
clc
jb
imulb
mov
sti
rorb
arpl
sbb
pop
je
xchg
fwait
xor
cmp
and
rorb
outsl
dec
push
xlat
fdiv
mov
xchg
xchg
jne
pop
lahf
add
push
xchg
or
leave
out
pusha
daa
inc
sbb
mov
xlat
aam
fs
movswl
pop
imul
jmp
data16
jmp
or
ds
push
imul
sub
stos
imul
ret
dec
mov
mov
add
jnp
cmpsl
gs
pop
jb
mov
aam
sahf
add
lret
ret
xor
mov
orb
cmp
pop
mov
xor
in
add
std
ret
jg
in
or
cmp
dec
ret
repnz
xor
scas
repz
and
sti
mov
roll
fsubr
mov
mov
mov
inc
mov
cmp
daa
mov
ljmp
pop
pushl
cmp
add
and
add
mov
es
in
adc
imul
or
lods
jg
push
mov
inc
mov
inc
pop
ret
clc
repz
sbb
shr
add
bnd
mov
icebp
and
imul
cwtl
dec
gs
shr
aam
insb
jmp
cld
mov
out
movaps
mov
pop
lea
loopne
dec
pop
lret
popf
pop
shr
mov
push
cmp
cmp
bnd
cltd
subb
jp
sahf
add
in
inc
xchg
sub
push
push
or
xlat
inc
mov
sti
jbe
hlt
test
loop
inc
push
push
and
popf
enter
lret
add
pop
push
inc
rclb
lods
jge
lods
iret
loopne
dec
je
sti
int3
pop
gs
je
cmp
jbe
sub
mov
adc
cmp
dec
push
inc
mov
push
jecxz
jae
adc
and
push
ret
add
pop
push
or
mov
in
nop
cmp
cmp
add
cwtl
and
sub
push
test
sbb
push
leave
cmp
add
pop
in
add
pop
push
test
sbb
pop
xor
das
inc
inc
sub
xchg
in
cwtl
add
cs
push
add
jecxz
dec
mov
mov
shrl
push
add
add
push
sbb
add
mov
jmp
xorb
lock
fdivrp
cld
subl
xor
mov
imul
jne
imul
pop
and
add
inc
enter
xor
call
cmp
mov
jae
insl
mov
loope
subb
scas
lret
int
lret
dec
in
orb
xor
jp
push
jno
filds
push
lret
orl
pushf
in
cs
sub
push
fidivrs
test
test
pop
push
push
outsl
pop
or
inc
lods
mov
mov
clts
add
rol
sbb
pushf
out
or
mov
sub
mov
cmc
or
add
sub
jne
inc
cwtl
xor
fsubl
xlat
test
stos
xchg
cmc
pusha
adc
mov
jl
gs
lret
xor
fldcw
pop
push
xchg
or
jmp
daa
or
mov
movsb
dec
adc
int3
dec
cwtl
and
add
push
add
add
or
push
scas
lret
cmpsb
dec
fadd
pop
cmpsl
outsb
pop
loopne
xchg
add
sub
movsb
bound
ret
aas
adc
es
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
push
aad
pminsw
ret
add
test
orb
pop
test
in
add
test
call
rolb
aad
js
fiadds
mov
mov
jnp
pop
std
xor
or
iret
jnp
test
inc
subl
mov
pusha
aad
mov
pop
aad
mov
dec
sarb
or
add
test
orb
pop
test
fdivrp
mov
aas
xor
in
std
add
in
aad
mov
icebp
pop
add
adcb
subb
pminsw
add
pop
push
add
inc
cmc
push
or
pop
cmpsl
xchg
add
push
sarb
or
add
insb
leave
add
loope
mov
lods
or
add
shrb
lods
pop
aad
mov
shl
mov
and
scas
push
pushf
push
push
add
pop
aas
test
push
pop
cmpsl
in
repnz
and
scas
push
pushf
push
jg
add
lods
push
fldcw
subb
or
xor
push
iret
or
mov
or
add
aad
jbe
adc
cmp
jnp
jg
jmp
subb
mov
add
cli
mov
jmp
push
pop
shlb
inc
add
mov
lock
cmpsl
loope
test
fstp
aad
mov
popa
pop
pop
cmpsl
jg
and
subb
mov
pop
add
pop
test
insb
push
add
inc
cmc
fwait
mov
mov
add
mov
jnp
pop
std
int3
mov
hlt
iret
jnp
test
inc
subl
mov
or
subl
sub
mov
push
test
pop
pop
jbe
add
jmp
out
and
pop
pusha
je
insl
push
add
mov
xlat
subb
push
sarb
mov
inc
fldl
ljmp
sub
add
icebp
pop
pop
cmpsl
jg
sti
add
lds
xchg
fists
add
insb
mov
mov
rolb
cmp
mov
add
lret
mov
je
and
loope
mov
push
test
jle
cmpsl
inc
inc
mov
test
sbb
out
mov
aas
push
pop
aad
mov
subb
leave
dec
push
mov
das
xlat
cmp
fadd
subb
or
mov
addl
pushf
jo
pusha
test
push
jg
pop
aad
cmp
loop
add
insb
dec
add
add
mov
out
jg
pop
aad
mov
add
mov
xlat
lret
test
push
fnstcw
push
aad
mov
into
in
cmp
aad
mov
out
adcb
jg
pop
aad
cmp
mov
mov
add
add
mov
les
cmpsl
dec
pop
or
into
push
lcall
lret
push
mov
dec
xchg
mov
add
mov
rolb
cmp
jno
cmp
jno
subb
mov
test
push
pop
cmp
or
add
subb
pminsw
push
loop
aad
es
add
or
add
ljmp
mov
or
pop
or
aad
xchg
xor
subb
mov
sarb
push
aad
mov
mov
jle
fwait
jp
push
shlb
jge
data16
jg
xlat
cmp
clc
aad
mov
into
in
cmp
aad
mov
or
es
add
or
add
push
ret
xchg
add
add
jge
mov
ds
jp
or
mov
jg
test
bound
inc
jb
insb
iret
add
add
mov
push
pusha
jb
add
mov
or
add
jp
mov
pusha
push
pop
cmpsl
mov
push
pop
cmpsl
call
add
pusha
push
pop
cmpsl
loope
add
pop
pusha
je
insl
push
add
sahf
xchg
mov
push
daa
push
or
subb
aas
and
add
inc
mov
or
jle
iret
xlat
sarb
stc
aad
mov
imul
in
cmp
pop
jp
mov
jle
sub
jnp
aad
add
cmc
fwait
mov
mov
add
pop
test
inc
xchg
mov
sub
and
scas
push
pushf
sahf
test
js
insl
add
rcl
add
jle
mov
cmpsl
or
add
ja
cmpb
fnstcw
cmpsb
rolb
mov
add
mov
into
jl
cmp
rolb
mov
imul
mov
xchg
mov
ljmp
and
into
je
cmp
aad
mov
out
jg
pop
aad
cmp
push
sarb
pop
aad
jle
sbbl
lea
or
adcl
aad
cmp
rcl
mov
insb
adc
mov
cmpsl
dec
pop
or
into
push
lcall
lret
push
mov
dec
xchg
mov
add
mov
rolb
cmp
jno
cmp
jno
subb
mov
test
push
pop
cmp
or
add
subb
pminsw
push
arpl
aad
add
ret
ljmp
test
testl
shl
addb
es
add
or
add
ljmp
mov
or
push
test
cmpl
fnstcw
les
cmpsl
push
aad
mov
or
add
mov
iret
aad
cmp
inc
mov
or
addb
jge
es
add
or
loope
add
les
cmpsl
jg
into
hlt
and
add
or
add
push
pop
cmp
fnstsw
jp
mov
sahf
imul
xchg
orb
sbb
inc
and
movsb
ret
add
rcrb
add
mov
xchg
add
add
add
data16
pop
or
mov
out
jp
mov
mov
mov
das
push
ret
call
mov
inc
xchg
xor
push
mov
mov
fucom
push
pminsw
insl
push
add
pop
add
shl
xlat
push
jl
xor
call
add
or
add
leave
pushf
imul
test
lret
jne
or
add
aad
es
add
jmp
test
pop
aad
push
lods
jno
fucomip
aad
cmp
aad
mov
add
mov
or
add
adc
add
and
push
xchg
repz
or
jle
imull
add
jg
xlat
es
call
pushf
stc
pop
aad
add
fsts
add
mov
pop
fnstenv
test
cs
popf
mov
or
push
out
pop
dec
sbbl
lret
xchg
repz
or
inc
xor
mov
shlb
mov
push
jp
push
shlb
inc
inc
lds
ljmp
fwait
mov
mov
sub
test
or
pop
cmpsl
xchg
lcall
pop
aad
add
pusha
jno
fistps
ret
subb
mov
call
add
xor
push
cmpsl
push
jl
mov
and
call
add
or
nop
test
cmp
push
cmpsl
cmp
flds
subb
or
or
jg
or
add
clc
aad
mov
shrb
mov
loopne
test
lods
in
sarb
or
add
lds
subb
mov
jmp
dec
and
pop
inc
mov
lcall
add
mov
popf
mov
add
mov
xor
mov
shlb
mov
push
jp
push
shlb
inc
inc
fldl
ljmp
push
stc
ljmp
mov
not
jp
or
add
jno
mov
or
add
jno
mov
or
add
jle
cmpsl
inc
inc
mov
test
cmc
fwait
mov
mov
subb
icebp
rcrl
insl
push
add
aad
cmp
mov
add
loope
test
mov
or
add
mov
add
or
mov
test
rclb
in
sarb
or
add
lds
subb
mov
jmp
dec
and
pop
inc
mov
lcall
add
mov
popf
mov
add
mov
xor
mov
shlb
mov
push
jp
push
shlb
add
jno
jl
add
and
scas
push
pushf
ss
add
insl
mov
pminsw
fwait
es
aad
add
lods
les
mov
add
dec
rolb
mov
add
mov
or
add
in
aad
mov
or
xor
testl
mov
adc
mov
scas
xchg
xor
jge
mov
frstor
pminsw
pop
or
sti
push
ljmp
add
lds
pop
aas
test
inc
xchg
repz
hlt
pop
add
pop
iret
push
test
pusha
dec
mov
pop
add
insb
bsr
ljmp
cmp
addps
mov
cmp
jg
xor
jl
push
fstpt
mov
aad
xrelease
sub
test
add
mov
test
lods
int3
lea
aad
push
shlb
push
test
sub
mov
aad
xrelease
sub
sub
push
shlb
repz
push
jl
xchg
pop
cmp
pop
cmpsl
roll
jg
ja
add
insb
push
aad
ljmp
push
insb
push
cli
add
or
jge
pop
inc
mov
mov
jnp
pop
std
ret
cmp
cmpsl
test
inc
subl
push
ljmp
mov
cmp
hlt
add
adc
hlt
add
mov
mov
mov
xchg
push
fadd
subb
or
mov
add
xchg
test
add
add
js
ljmp
or
add
add
mov
negb
in
fadds
mov
rolb
cwtl
add
mov
sarl
sub
addb
pushf
orl
fwait
cmp
fbld
pop
inc
ss
inc
push
cmp
in
add
test
jnp
pop
aad
and
test
mov
mov
pushf
aad
mov
andb
cmpsl
subb
cmpsl
pop
aad
sub
cmpsl
jg
jbe
ucomiss
inc
xchg
ret
out
or
cmp
inc
or
mov
sbb
pop
mov
inc
movsb
out
lret
aad
mov
rcrb
movsb
fld
fmull
je
adc
pop
and
cmp
inc
or
lcall
lahf
xchg
gs
or
lods
in
cwtl
cmp
adc
sub
rcrb
negb
cmp
daa
pop
gs
aam
add
add
popa
fcmove
ds
dec
daa
pop
gs
pop
es
xor
and
pop
gs
pop
mov
mov
aaa
mov
sahf
mov
and
xchg
and
pop
inc
jecxz
loope
dec
jmp
lahf
push
fs
dec
frstor
and
sti
mov
mov
je
adc
and
cmp
or
lcall
xchg
lea
push
mov
xor
xor
pop
cmp
and
pop
fsubl
push
dec
icebp
mov
shl
lcall
cli
decb
dec
cwtl
xor
in
in
push
mov
push
pop
mov
sar
inc
xchg
gs
sbb
mov
nop
lods
jne
sub
jne
and
mov
in
pop
insl
aad
adcl
dec
push
clc
push
pop
js
arpl
stos
hlt
and
pop
jp
jg
call
xor
fnsave
jnp,pt
je
scas
mov
dec
adc
mov
jo
notl
sbb
xor
pop
idivl
gs
daa
mull
in
mov
push
lods
sbb
sub
push
xchg
mov
int3
sahf
aam
int3
adc
stc
sub
mov
push
xor
fistl
cmc
bound
fisttps
inc
pushf
jo
add
test
ljmp
in
lcall
mov
out
and
xchg
popf
pop
mov
mov
int3
data16
int3
adc
sub
lcall
in
imul
std
and
fisttps
pop
scas
gs
pandn
mov
jo
push
ss
enter
mov
jne
mov
int3
call
cs
out
movsb
sbb
ficoml
loope
xchg
movsb
andl
xchg
aas
aad
mov
in
faddp
out
sub
ljmp
xor
inc
addr16
pop
add
aad
mov
outsl
testb
out
loope
push
das
inc
stc
dec
lcall
in
jecxz
out
adc
jne
stc
pop
cld
xchg
addr16
roll
test
fistps
lock
test
inc
loopne
push
data16
out
data16
or
adc
nop
add
or
sbb
incb
mov
ret
sbb
jmp
sbb
mov
mov
sub
jae
xchg
cmp
test
sub
add
subb
push
jne
test
aad
jo
subb
lret
jbe
addr16
sahf
xchg
xor
sbb
incb
je
push
adc
jg
nop
add
subb
out
sub
in
andb
sbb
aam
test
mov
adc
mov
mov
sub
mov
add
add
aam
add
add
imul
addr16
mov
cmpb
cmpsb
fldenv
out
xchg
xor
mov
sbb
xchg
outsb
pop
mov
mov
es
sub
sbb
aaa
lds
push
and
imul
add
xchg
imul
bnd
sti
mov
aaa
jnp
adc
push
add
pusha
out
sbb
sbb
or
jp
cmpsl
inc
pop
pop
inc
adc
out
data16
sub
push
xor
adc
out
repnz
pushf
nop
or
sub
sbb
sub
mov
push
push
insl
out
inc
push
repnz
or
sub
test
pop
mov
mov
sti
lods
mov
into
push
xchg
insl
or
sub
mov
push
push
insl
out
inc
push
out
adc
les
pop
or
call
test
push
in
pusha
lock
mov
xchg
into
fdivl
jbe
jno
insl
cmp
stos
and
mov
repnz
jge
push
sub
daa
repz
mov
into
aam
sbb
imul
xchg
sbb
gs
insl
mov
jnp
mov
gs
jae
mov
jb
xchg
scas
inc
leave
pop
scas
aam
ret
iret
in
inc
jle
mov
test
out
cwtl
jns
push
add
mov
xor
leave
leave
scas
lods
inc
mov
imul
mov
xor
cli
es
fs
adc
mov
or
scas
js
dec
andl
push
add
xor
cs
repnz
xchg
xor
xlat
jb
xor
xor
sub
out
sbb
loop
js
dec
mov
adc
sub
filds
push
loopne
or
xchg
pop
fsubl
push
push
out
sub
aam
fdivrl
add
xchg
cmp
movsl
fcmovnb
fnstenv
mov
pop
xchg
sbb
test
int3
push
not
inc
adc
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
clc
out
add
mov
daa
mov
jno
adc
imul
daa
mov
mov
xor
das
mov
loopne
in
sub
sbb
jl
jo
cmpsb
dec
int
out
add
in
popf
bnd
jmp
mov
pop
scas
loope
into
dec
jns
out
ret
push
test
pop
xchg
popf
sub
in
pushf
mov
jl
and
push
out
lods
mov
pop
lea
shr
clc
mov
scas
or
sub
fsubrl
out
and
loope
fbld
out
test
jno
bound
enter
sub
pop
sub
mov
lret
jg
stc
rclb
bound
and
mov
int3
add
es
add
adc
cltd
pop
sbb
xchg
cs
stos
or
inc
dec
shr
jae
pushf
fadd
inc
and
dec
out
and
in
or
cmp
daa
xor
sbb
in
mov
and
jmp
xchg
and
pop
push
xchg
mov
mul
jae
mov
xchg
test
movsl
les
les
mov
mov
out
pop
push
cld
mov
push
mov
outsl
test
adc
test
mov
mov
stos
dec
in
xchg
dec
les
xor
jmp
stos
rclb
or
leave
pop
test
loop
and
jo
or
mov
bound
test
movsl
sarb
js
xchg
inc
pusha
dec
cmpsl
xor
sbb
lods
insb
mov
jmp
leave
in
jge
cmp
lcall
and
mov
shll
popf
xchg
pop
mov
mov
xchg
or
pushl
sti
imul
pop
adc
pop
jo
adc
sbb
out
stc
clc
mov
mov
add
popf
sub
loopne
jp
pop
loope
adc
in
sahf
xor
ret
inc
iret
lahf
mov
lds
clc
jp
into
int
sub
mov
out
les
sub
jg
dec
cmp
lret
sub
push
mov
ror
push
sbb
xor
cli
cmc
in
sti
mov
ja
mov
movsl
mov
bnd
jecxz
sub
mov
jnp
pop
outsb
sbbb
mov
addl
add
cmp
push
das
shr
cmp
in
or
mov
mov
adc
iret
sbb
jnp
sbb
push
jb
add
adc
inc
shrl
rorl
imul
das
or
je
inc
mov
es
or
push
ja
cmpb
stc
add
xchg
ja
das
inc
jnp
mov
sbb
imul
iret
cld
fdivs
push
cmp
mov
lret
and
sbbl
ret
int
popf
cmp
je
mov
xor
icebp
ret
outsb
add
negl
insl
arpl
jmp
mov
aam
mov
push
xchg
cli
xchg
dec
aaa
jecxz
mov
adc
cmp
loopne
jno
roll
jmp
je
pusha
call
scas
mov
cmp
push
das
mov
scas
xlat
mov
pop
pop
xchg
cwtl
dec
inc
sbb
sbb
ret
add
push
nop
sbb
jb,pt
push
push
sbbl
xor
lahf
das
add
in
fistpl
dec
or
inc
pop
xchg
push
stos
fisubs
data16
shll
test
dec
sbb
call
sub
xchg
cmc
xor
push
jmp
mov
fdiv
inc
mov
mov
cld
pop
jecxz
outsl
std
push
dec
xchg
nop
adc
cmpsb
loop
jbe
push
pop
bound
push
jp
sarl
in
mov
dec
xchg
sbb
aaa
mov
and
xor
fildl
mov
daa
sti
xor
lret
sub
psubd
popf
mov
fs
data16
jo
aas
fdivrl
movsl
test
xchg
insl
mov
jmp
daa
dec
jl
lcall
aad
pop
in
rorb
push
stos
add
pop
ds
cltd
popf
push
in
mov
jo
rorl
sbb
push
xchg
dec
rcll
rorb
leave
orb
xor
xchg
mov
jb
out
inc
cli
call
push
lods
mov
adc
lcall
flds
lock
loope
and
aaa
mov
and
lea
sahf
stos
dec
loopne
sahf
fstpl
in
fldt
pop
inc
cmpsb
imul
mov
bound
jns
push
push
leave
dec
rcrb
adc
adc
xchg
mov
jno
mov
and
xchg
xchg
jg
out
fwait
lea
xor
call
scas
roll
cmp
or
jae
insb
pop
fisubl
aam
rcrb
mov
add
icebp
inc
stos
test
jmp
loopne
mov
mov
popa
mov
out
pop
push
aad
scas
popa
in
mov
pop
sub
jo
cmp
add
and
cmp
add
adc
imull
push
aas
test
and
pop
loope
aaa
outsb
xchg
arpl
push
negb
mov
jl
test
mov
xchg
orb
lea
mov
adc
inc
xchg
orb
sub
inc
hlt
mov
adc
xchg
xor
fldenv
push
mov
rcll
orl
fisubl
ljmp
std
add
mov
mov
les
das
test
cmpb
out
loopne
add
jo
dec
jnp
or
es
dec
lahf
mov
leave
jb
lcall
sbb
sub
push
ret
sbb
jmp
add
dec
arpl
popa
leave
adc
xchg
leave
ljmp
leave
ljmp
mov
sub
fiaddl
mov
idiv
inc
movsb
adc
and
pop
shrl
sub
ret
add
lea
jb
lock
loope
std
cmp
imul
pop
jne
pop
addb
push
testb
xchg
addl
jbe
lahf
das
cmp
lret
fldenv
mov
add
push
iret
in
imul
mov
sub
mov
xchg
xchg
sbb
xchg
inc
fnsave
inc
dec
inc
movsb
inc
jbe
in
xor
addl
jb
lea
js
test
mov
inc
aad
xor
mov
sti
xchg
scas
or
push
mov
mov
repz
lock
cmp
jnp
mov
inc
mov
gs
sbb
pop
popf
xor
into
sub
out
jb
jno
mov
jg
mov
int
add
mov
mov
mov
dec
lds
cmp
pop
push
mov
jp
add
cmp
mov
or
aaa
mov
int
mov
cs
je
push
mov
dec
fidivrl
mov
push
sub
movsl
cs
and
mov
or
xchg
add
xor
fdivrl
sti
xor
shrl
and
jg
scas
pop
sarl
rclb
mov
or
xorl
xchg
out
cld
cmp
jmp
push
pop
sub
inc
int3
mov
inc
inc
add
pop
jmp
subl
mov
mov
scas
or
push
rcr
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
imul
sbb
xor
stos
ljmp
je
mov
ret
mov
xor
cmp
jno
rol
sbb
xor
stos
ljmp
je
fiaddl
ret
mov
xor
loope
mov
ret
mov
xor
int
mov
ret
mov
xor
stos
fldcw
je
je
loopne
ret
mov
xor
stos
je
je
inc
jg
mov
incl
jl
out
loope
test
jge
adc
hlt
pop
rcll
mov
insl
cmp
stc
fstps
sub
scas
mov
es
mov
fwait
sbb
lret
inc
leave
cs
fadds
aam
scas
cmpxchg
cmp
xor
ljmp
or
inc
add
jne
popf
mov
sbb
push
cli
lods
cmpsl
cld
mov
lahf
mov
adc
lds
push
loope
jge
je
pop
xchg
ja
inc
sub
mov
nop
enter
arpl
push
mov
dec
inc
or
mov
xor
fidivl
pushf
cmp
cs
pop
cmpsl
cmp
jne
fadds
leave
mov
mov
out
add
loop
aas
add
mull
leave
lcall
mov
bound
into
sub
add
xchg
and
mov
pop
movsb
ds
popa
js
mov
sub
loopne
popf
inc
cs
aaa
adc
dec
xlat
mov
push
rorb
mov
ss
lock
rclb
jl
and
cmp
cmp
jmp
cltd
shlb
lea
and
iret
mov
mov
repz
shll
sbb
adc
je
rol
fst
xlat
and
insl
or
decl
mov
imul
adc
fcoml
rorl
push
sub
int3
icebp
dec
or
popa
std
adc
lret
sub
gs
mov
inc
lcall
dec
loope
pop
movsb
lds
shr
pop
or
mov
add
pop
or
and
fildll
xchg
xor
mov
push
cmpsb
ljmp
fs
inc
or
ja
outsb
push
mov
jae
sahf
xor
xchg
pop
cltd
fcoms
outsl
mov
outsl
clc
std
dec
imul
xor
xlat
dec
lahf
jle
sarl
lods
mov
sub
ljmp
sub
pop
jg
xchg
mov
jle
daa
inc
xchg
inc
xchg
push
fstps
popa
lea
adc
fsubs
xchg
cmp
pop
daa
xchg
pop
xlat
call
dec
xchg
push
fisttpl
shrb
movsb
mov
ljmp
adc
lret
rorb
into
shrl
fisttps
sarb
cltd
mov
mov
addl
neg
push
cmc
jnp
jle
insb
mov
xor
loop
aam
inc
shrb
mov
test
out
mov
xchg
dec
loop
lahf
mov
add
lock
mov
dec
lahf
push
lret
push
cmpb
add
dec
pop
imul
bound
push
mov
cmc
loopne
loop
push
dec
xchg
inc
push
cmp
or
inc
aas
lods
cltd
pop
out
pop
loope
jb
jno
scas
scas
cwtl
ljmp
mov
push
pop
shll
fisubrl
cli
pop
cmc
leave
loop
mov
lahf
hlt
cmp
leave
sbb
mov
xchg
xchg
sub
push
shlb
add
or
out
rcrb
repz
leave
or
popl
insl
jo
outsb
scas
and
lret
pop
xor
scas
push
addr16
jae
lret
xchg
lea
xor
jbe
cli
jb
rcl
sub
lcall
mov
ds
cmp
add
adc
add
xor
inc
aad
sbb
icebp
jnp
pop
imulb
xchg
pop
lods
repnz
mov
xchg
daa
stos
jl
lock
jge
sbb
popl
xor
mov
lock
xchg
lret
fmuls
mov
push
push
mov
mov
lods
add
call
adc
mov
mov
in
xchg
dec
xor
pop
mov
xor
cmpsl
push
mov
mov
mov
and
jns
out
loopne
mov
in
mov
into
ds
repz
or
sbb
repnz
mov
xchg
xchg
cmpsl
clc
mov
cmp
clc
dec
aas
into
cs
and
adc
pop
imul
mov
outsb
movsb
jle
jno
test
mov
mov
mov
xor
xchg
xchg
lds
jbe
aad
int3
and
mov
xchg
loop
addr16
jae
jns
leave
lcall
je
or
push
jmp
movsl
inc
xor
lret
in
je
mov
inc
and
xchg
rcrl
cmp
jns
mov
sub
push
shrl
add
xchg
fmuls
mov
ljmp
ret
mov
sbb
jns
fists
or
mov
add
fucomip
and
cmp
add
dec
dec
dec
rcl
sub
pop
sbb
mov
jns
adc
sub
ljmp
scas
scas
mov
cli
inc
adc
ror
cld
rclb
xchg
jp
out
lea
sub
pop
or
fsts
mul
push
mov
pop
hlt
dec
lahf
subb
orb
lock
sub
mov
push
push
mov
mov
mov
push
or
loop
cmp
jbe
sub
mov
pushw
or
pop
lret
xor
leave
jns
or
xor
je
pop
pop
dec
or
xchg
xchg
out
mov
pop
mov
jg
sbb
dec
cmp
int3
cmpsl
sub
in
xor
mov
ja
adc
mov
test
cwtl
stc
testl
daa
lds
xchg
in
xchg
mov
jmp
mov
iret
jmp
push
add
rclb
jg
and
dec
int
das
jp
loope
jno
xchg
int3
dec
lret
push
dec
orl
push
sarl
jecxz
xor
ds
dec
in
xchg
loopne
shrl
push
pop
addl
ficompl
push
das
adc
ja
repnz
cwtl
or
or
loop
cmp
sbb
loope
mov
sti
adc
dec
or
in
jnp
loope
mov
aad
push
sub
nop
out
cmp
int3
aam
loop
iret
std
daa
xchg
stos
mov
lret
xchg
gs
repnz
lahf
mov
lret
inc
lret
inc
mov
cs
sub
inc
sub
mov
pop
jge,pt
cwtl
inc
cltd
in
xchg
mov
sub
ficompl
pop
js
cmpsl
mov
data16
js
pop
outsl
fistps
fistpl
inc
clc
add
mov
ret
push
out
aaa
inc
sub
lods
inc
into
call
call
push
pop
xchg
shr
push
inc
cli
and
lock
mov
mov
gs
clc
add
ja
push
add
inc
nop
cmpsb
xor
in
pop
xchg
shr
faddl
mov
sub
push
and
xchg
pop
std
add
xchg
push
mov
xchg
sbb
inc
loope
mov
pop
cli
xchg
js
ds
es
int3
cwtl
xchg
aad
inc
push
ret
cltd
jnp
leave
pop
pop
dec
js
add
in
xchg
test
mov
jnp
mov
roll
mov
jge
in
pop
aad
fstl
inc
sbb
pop
orl
add
push
sbb
sub
gs
loopne
lret
roll
mov
adcl
fidivrl
fdivl
xor
or
xor
dec
xchg
popf
lahf
loop
aam
and
int
into
outsb
pushf
sub
fnstsw
imul
movsl
xchg
fistl
scas
dec
xchg
fstpl
sub
imul
int
sbb
and
pop
xor
aad
sahf
fldcw
ret
hlt
or
rclb
mov
sub
nop
jno
mov
jbe
xor
mov
mov
cmp
cmp
xor
or
ljmp
sub
in
scas
lahf
cmpsb
lea
jmpw
sub
dec
and
insl
imul
jmp
mov
aam
mov
in
dec
mov
xrelease
and
lock
or
pop
dec
or
lcall
jno
or
arpl
ss
data16
test
dec
mov
pushf
inc
dec
mov
lea
shl
daa
fnstsw
jg
xchg
and
outsl
mov
imul
mov
mul
mov
pop
cmp
ss
or
imul
je
insl
cmp
aad
andl
or
fbstp
int3
dec
xorl
mov
sub
test
insb
jb
cmp
adc
repnz
push
jbe
and
sbb
mov
das
aam
mov
sbb
popf
popf
in
xchg
ljmp
pop
lds
adc
xchg
popf
clc
and
dec
lcall
in
lret
daa
shlb
lock
stc
sbbl
mov
mov
test
in
aam
and
xor
repz
jno
lock
ret
aaa
ljmp
lea
mov
mov
mov
in
mov
jno
call
pop
lock
repnz
jecxz
daa
inc
mov
popa
lret
aam
ds
test
lods
inc
negl
add
cmpsl
mul
mov
xlat
and
mov
lahf
push
lock
mov
push
adc
push
or
sub
cmp
lcall
repz
mov
out
xchg
loop
xor
sbb
add
sub
cld
mov
loope
pop
add
loope
jnp
popl
test
ret
dec
jb
imul
jge
and
repnz
out
push
mov
and
daa
sbb
out
sub
pop
aad
dec
hlt
jp
push
test
in
cmp
add
fwait
mov
sbb
icebp
bound
sbb
push
out
jl
in
and
inc
call
notb
cmp
ss
xlat
and
mov
jle
daa
fmull
add
andb
je
jmp
daa
jle
in
mov
pop
mov
fnstcw
call
adc
dec
or
shl
pusha
mov
pop
aad
mov
or
push
cmp
or
rclb
fld
inc
in
or
pop
fnsave
pop
aad
loope
loopne
cld
push
in
or
nop
jne
clc
icebp
incb
dec
push
subl
daa
les
inc
push
cmpsb
dec
xor
stos
es
or
pop
adc
xorl
pop
iret
inc
and
xor
push
mov
xchg
sarb
pop
mov
push
push
push
aas
mov
sbb
mov
ror
dec
xor
andb
and
push
xor
mov
rolw
lock
xor
hlt
ljmp
fwait
stos
push
out
jmp
xor
fstps
mov
sti
and
inc
pushf
add
sbb
nop
or
xor
addr16
jno
xchg
add
mov
roll
sbb
test
arpl
sbb
shl
xchg
xor
push
jb
and
out
ljmp
pop
aad
sbbl
and
pop
mov
aad
loope
mov
jo
inc
bound
adc
scas
gs
mov
push
mov
lea
pop
pop
sub
xchg
sub
insl
iret
sub
mulb
push
mov
jge
xor
mov
add
test
lods
mov
scas
xchg
jnp
lcall
nop
rolb
xorb
inc
lahf
pop
rcr
inc
xor
push
cld
andl
decl
scas
out
mov
mov
push
cmc
leave
inc
mov
fsubrs
negl
mov
rclb
mov
mov
lods
adc
out
push
out
mov
push
lods
pop
lds
jle
call
pop
sub
push
sub
adc
loopne
xchg
repnz
push
in
xchg
je
dec
out
sbb
call
adc
rcrb
cmp
or
lret
xchg
lret
mov
std
or
or
sub
cmpsb
xlat
mov
pop
mov
adc
xchg
lods
adc
lock
out
sbb
jl
push
sbb
mov
aaa
mov
push
nop
stos
out
out
nop
out
iret
jmp
in
cmp
jne
in
inc
jmp
popf
lock
mov
ja
pop
rcl
ret
icebp
push
cmpsb
dec
xchg
clc
repz
pusha
and
xor
scas
xchg
ljmp
adc
mov
divl
bound
cmc
daa
sub
js
pop
ja
lcall
dec
adc
lods
xchg
jle
xor
mov
mov
add
adc
test
shll
cmp
mov
push
sbb
test
jle
mov
sbb
xchg
cld
dec
sub
lods
inc
pop
fwait
mov
and
push
out
ficoms
xchg
xor
pop
push
or
cmpsl
sbbl
sub
arpl
mov
les
popa
mov
xor
push
xor
inc
and
mov
adc
xchg
inc
adc
sub
js
add
xchg
aaa
into
jp
pop
jle
cmp
sbb
mov
xchg
loop
popl
xchg
xchg
jb
fwait
xchg
hlt
scas
sub
mov
lcall
dec
add
js
xchg
jo
inc
jne
lea
cmp
jb
fidivs
sub
xor
sbb
mov
add
fisttpl
in
xor
stos
fildl
out
pop
push
lea
lret
ret
daa
lods
and
stos
nop
lods
iret
mov
imul
mov
stos
ljmp
jne
and
fnstsw
adc
bound
cs
out
mov
cmpsl
repnz
inc
push
subl
jne
push
nop
fstl
pop
fadds
subl
jae
xchg
adc
sbb
cmp
lret
jp
rolb
mov
jp
les
add
sub
dec
lock
stos
and
test
adc
mov
xchg
dec
lret
mov
mov
xor
in
mov
insb
sbb
ret
popf
cmp
or
das
cmova
pop
shrl
testb
cs
add
and
cli
sub
roll
popf
mov
outsl
insb
out
in
scas
aaa
pop
aas
sarb
adc
ret
sbb
mov
sbb
xchg
mov
lock
ljmp
push
and
mov
bound
ss
icebp
es
std
leave
mov
pop
mov
push
lods
fdivrl
add
xor
dec
inc
xlat
mov
data16
divl
mov
jle
push
push
inc
imulb
add
test
in
pop
icebp
xchg
fsubrs
xor
movhps
scas
dec
add
adc
test
push
lea
inc
mov
xchg
js
lds
sbb
push
xchg
mov
xchg
adc
push
dec
icebp
and
sbb
mov
add
cmp
aad
dec
sub
dec
ret
adc
aaa
adc
sti
cmp
sub
jmp
cmp
scas
push
iret
mov
mov
inc
fucomi
popa
mov
dec
pop
pop
fstl
dec
inc
lods
sub
push
push
andl
jg
cmpsl
sub
ficompl
sub
pop
lahf
cmp
push
dec
jg
leave
pop
mov
pop
mov
and
or
xchg
out
jecxz
arpl
mov
pusha
inc
scas
adc
add
lret
ficoms
gs
stc
mov
jnp
lahf
aaa
jp
sub
adc
mov
imul
sub
bound
mov
out
mov
dec
or
ds
out
and
faddp
mov
cltd
add
sub
leave
jne
inc
or
rcrb
dec
aad
sahf
mov
mov
inc
aas
lods
or
loop
xchg
fidivl
push
mov
mov
dec
push
inc
sub
mov
sub
adc
cmpsl
mov
aas
xchg
or
push
inc
or
dec
add
lock
ds
vmovups
cmpl
pop
fsubs
mov
imul
jbe
stos
mov
mov
imul
mov
insl
or
lcall
and
push
xor
xor
incb
jle
sub
lods
psadbw
mov
out
sub
add
cs
jae
lds
and
push
jp
lods
pushf
aas
clc
pop
insl
test
mov
push
xor
movsl
adc
ret
fsubrl
cmp
in
mov
outsl
daa
lods
in
sub
sahf
scas
or
jne
mov
jecxz
and
mov
fcoml
out
sbb
aaa
pop
popa
cwtl
in
dec
mov
dec
lds
mov
xchg
cmpsl
bound
sbb
pusha
lahf
ljmp
mov
adc
pop
ret
xor
jmp
pop
lahf
scas
cmp
shrl
and
xor
lcall
fstpl
stos
lea
inc
inc
pushf
aas
xchg
mov
push
cmpsb
ja
idivl
mov
pop
mov
xchg
ds
xchg
out
mov
jle
cmp
pushf
dec
shl
lea
js
xor
pop
sti
mov
mov
addr16
sbb
cli
xchg
cmp
sarl
aas
aaa
js
mov
notb
das
sub
sbb
lods
mov
lods
mov
add
pop
subl
mov
add
pop
je
xchg
dec
lods
jmp
sub
andl
jle
repnz
ja
sub
mov
push
xchg
aas
mov
sub
hlt
dec
fwait
jno
ds
enter
andb
outsl
rorb
in
push
mov
dec
xchg
sub
test
aad
loop
jo
arpl
lods
adc
dec
outsl
pusha
fcmovnb
xor
jo
inc
sbb
mov
inc
lret
push
xchg
dec
pop
test
push
ljmp
shlb
cmp
jg
lahf
dec
push
dec
adc
daa
shl
out
mov
ret
and
pop
xchg
push
mov
jne
lahf
std
pop
gs
mov
inc
or
js
xor
xchg
lods
xchg
out
or
inc
adc
mov
lea
adc
pop
fdivrp
fs
pusha
test
roll
test
cmc
sbb
int3
sub
call
and
fisttpll
add
scas
adc
mov
jae
js
mov
in
add
mov
les
sub
cltd
jl
stc
mov
lret
cli
dec
pop
aas
flds
pop
inc
repz
mov
inc
cmp
loopne
arpl
loop
mov
cwtl
add
imul
in
mov
repz
fwait
iret
cmp
mov
lds
adc
cmpsb
pop
lcall
push
dec
mov
and
push
push
dec
cwtl
lods
adc
sbb
sub
mov
lock
enter
je
sbb
jo
jecxz
orl
jno
sbb
cs
inc
mov
pop
rol
adc
or
xchg
jecxz
xor
push
icebp
add
test
loopne
jne
pop
outsl
shlb
lea
mov
push
ss
push
jmp
sti
mov
mov
cmp
inc
pop
bound
sub
movsb
mov
shll
vmovddup
sub
pop
add
mov
addr16
je
rcll
cmpsb
xor
pop
xchg
in
xchg
dec
sar
mov
lods
rcll
movb
js
cltd
mov
xchg
xor
test
inc
stc
mov
jb
jl
lds
adc
into
aaa
add
xchg
aaa
sahf
out
inc
lcall
inc
mov
xchg
aaa
mov
sbb
dec
repz
loopne
or
mov
arpl
imulb
fidivrs
add
or
dec
adc
push
sarl
add
popa
jmp
hlt
dec
adc
push
pop
scas
pop
cwtl
mov
aad
rep
jge
int3
hlt
in
ret
mov
mov
je
sbb
popl
and
popa
jecxz
iret
jb
mov
nop
push
or
or
cmp
and
ja
lods
jmp
repz
sub
mov
ljmp
jle
pusha
sub
pop
int3
mov
jecxz
xor
pop
jns
jge
std
scas
in
mov
mov
rcl
std
lds
ljmp
movsl
inc
jb
clc
push
leave
pusha
mov
aaa
mov
test
and
repz
leave
pusha
mov
or
adc
mov
sbb
aam
dec
adc
mov
push
js
jno
mov
lods
cmp
sbb
int3
push
push
xchg
cmp
jb
jl
leave
push
jnp
nop
xchg
in
insl
add
repz
adc
cmp
faddl
pop
add
cli
out
jle
sti
mov
pop
pop
mov
hlt
pop
cmc
cmc
adc
xchg
mov
nop
xor
dec
fisubl
cmp
outsb
shl
mov
add
cli
in
dec
and
dec
mov
sub
lds
insb
inc
pop
sbb
add
scas
cli
lahf
test
push
mov
add
jo
insl
cmp
iret
or
test
sbb
mov
inc
data16
loopne
lret
add
pop
mov
cs
addl
or
enter
into
imulb
fidivrs
dec
xchg
xor
dec
lret
rclb
mov
adc
cmpsw
imul
pop
or
ret
test
ljmp
je
icebp
ja
test
pop
push
test
sub
inc
out
ljmp
sub
cmc
dec
lods
or
xchg
gs
fadd
mov
xchg
xlat
push
pop
mov
hlt
xchg
mov
or
insb
push
pop
shrb
mov
jae
mov
mov
das
outsb
hlt
dec
sarl
pop
sub
and
mov
repz
sarl
mov
daa
ljmp
add
push
cmp
push
enter
mov
pop
mov
mov
pop
ss
decb
jecxz
xor
or
fisttps
dec
dec
cmp
mov
add
jmp
xchg
mov
outsb
ret
pop
mov
push
inc
jg
cld
and
insb
out
sti
sbb
in
dec
xchg
dec
mov
push
stc
or
cmp
inc
lods
push
stos
sub
cmc
mov
jge
dec
mov
push
mov
jp
mov
rcrb
arpl
push
nop
xor
xchg
pop
xor
mov
cmpsl
xor
sbb
xchg
movsb
cmp
inc
adc
cli
mov
or
xchg
inc
sub
scas
inc
in
push
and
scas
insl
bound
shrl
test
rcll
fdivrl
adc
mov
jbe
lea
loop
fsub
sub
stos
mov
sbb
cltd
into
rolb
xchg
stc
xor
xor
or
aas
data16
jp
sbb
or
jo
mov
scas
xchg
test
iret
cmp
xchg
loope
sbb
lock
jae
ss
jns
mov
mov
cmp
es
xchg
sub
stos
xor
in
adc
mov
sub
negb
rclb
adc
pop
mov
repz
add
add
or
pop
ss
adc
in
mov
insl
insl
hlt
dec
stos
adc
add
sbb
or
cmp
dec
int3
inc
pop
ret
bnd
icebp
dec
jmp
cmp
fildl
adc
add
xchg
jns
jge
stos
lds
outsb
push
ret
mov
out
ljmp
ljmp
xor
stos
pop
addl
push
xchg
sbbl
ficoms
xlat
mov
xchg
loope
sbb
sbb
dec
xchg
dec
jge
loopne
mov
ficoms
jbe
stos
cmpl
mov
cli
jne
xor
mul
inc
dec
dec
jae
add
xor
adc
sub
jno
sahf
pop
xchg
ljmp
xchg
cwtl
ror
test
ss
clc
ret
aam
ret
loop
jle
repnz
jno
sbb
jo
pop
mov
push
aas
xchg
mov
pop
sbb
mov
add
add
push
aad
hlt
sbb
aaa
or
push
lret
outsb
mov
fisubs
xor
cmc
repnz
lahf
pop
mov
xchg
aaa
cmpsb
cmp
subl
mov
int
mov
xchg
mov
aaa
inc
mov
dec
mov
xor
bound
clc
push
ljmp
jbe
lods
stos
xor
dec
scas
push
das
xchg
in
hlt
ljmp
pop
adc
cmp
push
loopne
dec
xchg
es
mov
ljmp
push
and
test
sub
iret
insb
sahf
fiadds
rclb
mov
xor
adc
jbe
addr16
pop
test
xchg
in
test
sub
arpl
and
push
ljmp
push
lock
outsb
scas
outsl
out
es
xor
jbe
xor
xlat
mov
lds
cmp
rclb
jae
mov
popf
stos
push
lahf
addr16
leave
fdivl
pusha
in
fwait
xor
mov
mov
inc
jns
cmc
fldcw
mov
shl
cwtl
adc
ss
bound
push
push
or
fwait
scas
sti
fmull
xchg
inc
xchg
stos
pop
or
sbb
rcrb
bound
pop
dec
out
sbb
inc
add
jae
dec
adc
jg
push
shr
push
pop
mov
movswl
jae,pn
xor
sub
iret
ficoml
out
sbb
jno
jnp
orl
es
sub
push
push
inc
pop
xor
dec
aaa
lret
push
mov
fisttpll
mov
push
xchg
jp
pop
add
sbb
mov
jmp
dec
mov
pusha
push
jmp
xchg
push
xorb
jb
das
clc
jb
out
ficoml
out
sbb
jno
xlat
sbb
cwtl
push
add
push
inc
es
push
inc
sahf
loope
mov
jge
push
inc
pop
mov
pop
sbb
sahf
out
repz
repnz
mov
popf
data16
inc
pop
leave
cmpsl
leave
mov
les
dec
push
ret
outsl
je
lret
fsub
aad
ljmp
add
mov
jmp
in
jg
sti
jns
cmp
addl
clc
add
xor
cld
and
dec
sbb
jp
cmp
jle
popf
int3
lea
call
adcl
cmp
and
jecxz
lret
pop
ljmp
in
sbb
cld
arpl
clc
cmp
sbb
push
jmp
mov
data16
mov
in
movsl
cmp
cwtl
cmp
ja
adc
sbb
mov
cmp
cltd
test
data16
and
jb
dec
mov
int
push
iret
pop
out
or
add
pushf
add
mov
mov
xchg
ds
movsl
std
push
repnz
push
or
push
adc
test
inc
ljmp
lea
and
push
aad
rolb
loope
jmp
xlat
sub
pusha
sti
hlt
inc
pop
pop
mov
in
sarl
fnstcw
mov
mov
pop
xor
lcall
xor
pop
dec
add
insb
xor
ss
std
jmp
mov
push
pop
push
mov
xorl
dec
orb
mov
scas
dec
sbb
mov
out
inc
mov
out
ljmp
lock
in
cld
mov
mov
sar
and
and
das
cld
fcomi
iret
xlat
out
shlb
and
es
or
js
push
sub
fisubrl
mov
mov
pop
sbb
or
mov
push
mov
dec
int3
pop
repnz
xor
js
xor
insl
movsb
xor
js
out
outsb
sbb
dec
jo
call
lret
js
ss
sub
out
xor
jle
xlat
adc
ds
xor
js
cltd
fcom
stos
or
std
mov
pop
sub
dec
jecxz
loop
jecxz
mov
dec
shlb
jne
xor
out
adc
cli
add
fwait
xor
push
jns
mov
ljmp
adc
sbb
mov
mov
lds
adc
lcall
mov
in
dec
cmpsb
or
jmp
shrl
jl
xchg
loop
push
push
pop
cmp
mov
cmp
outsl
test
cmp
test
dec
movsb
sbb
test
add
or
sti
int3
loope
pop
movsl
jmp
inc
int
iret
pop
mov
js
mov
mov
incb
dec
movsl
mov
adc
lods
cmp
ljmp
loop
in
pop
mov
scas
outsb
ja
mov
in
sub
mov
adc
lods
sub
mov
xor
or
and
out
mov
out
adc
in
mov
pop
cmpb
movsb
bound
les
jl
xor
cmp
loop
xchg
pop
rolb
out
ss
mov
lods
stos
xor
mov
aam
mov
mov
in
mov
cmc
xchg
les
outsb
mov
add
leave
or
leave
add
fildl
mov
pop
mov
or
adc
sub
xchg
shlb
iret
mov
cld
repz
mov
pop
notl
push
iret
arpl
cmpsb
lcall
sbb
dec
nop
lret
dec
nop
test
dec
mov
pop
mov
adc
mov
leave
add
sbb
xchg
imul
leave
add
mov
sbb
fwait
stos
repnz
xchg
add
jo
fdivl
in
mov
daa
imul
mov
out
js
mov
iret
mov
push
xchg
pop
push
mov
inc
stos
mov
fmull
push
cld
jne
addr16
sarb
repz
pushf
xchg
inc
jns
lahf
stc
pushf
faddl
roll
push
lea
fst
jnp
movsl
outsb
andb
lea
call
xor
mov
xorb
aas
loop
add
cmpsl
lret
ljmp
xchg
jno
mov
fmull
stc
leave
jae
pop
add
lods
or
push
mov
pop
jmp
into
xor
outsb
adc
sbb
mov
rcll
repz
jne
push
xchg
xchg
iret
xchg
insl
gs
sub
and
mov
stc
pushf
fsub
scas
repnz
mov
stc
pushf
adc
call
dec
xchg
das
pop
jb
xchg
jp
xor
popf
sbb
jns
and
or
jg
jbe
inc
dec
std
shlb
pop
or
mov
push
push
pusha
popf
mov
mov
sbb
push
loopne
mov
dec
adc
sbbb
sub
push
dec
repnz
push
mov
mov
cmp
mov
fs
out
push
mov
push
dec
fdivrs
or
arpl
mov
in
xorl
sbb
aam
push
pop
aam
sub
test
leave
sbb
das
xor
sahf
mov
aad
sub
mov
pop
cmp
arpl
jle
call
leave
orl
and
rclb
cwtl
and
out
push
adc
mov
xchg
pop
push
xchg
leave
and
xor
and
xor
andb
cmp
pop
stos
pop
stos
aaa
sahf
test
mov
sahf
inc
fadd
jmp
sbb
xchg
pusha
stos
pop
or
mov
pop
jecxz
cmp
loope
arpl
sub
mov
aad
dec
inc
mov
mov
xor
mov
mov
imul
aas
aam
xchg
inc
cmp
sub
cmp
movsl
xor
fwait
loope
enter
sbb
shrb
adc
inc
dec
xchg
inc
addr16
fstps
andb
fs
mov
je
mov
mov
fincstp
mov
scas
std
push
std
xchg
xchg
mov
pop
cli
sarl
cmp
mov
int
arpl
mov
lods
pusha
mov
mov
outsl
mov
ret
mov
jmp
sub
lret
stos
faddl
xchg
pop
push
dec
faddl
stos
sub
bound
out
mov
fsubr
in
pop
sti
div
mov
xchg
mov
ljmp
cld
pop
xor
mov
inc
out
pop
push
popf
cmp
jmp
js
cmpb
mov
into
pop
cmp
push
mov
pop
in
ljmp
mov
js
cwtl
int3
sar
cmp
addr16
xor
adc
ja
stos
jne
bound
inc
stos
mov
and
mov
adc
xor
push
mov
inc
pop
mov
jo
and
jno
mov
out
mov
push
lea
fcmovb
cli
scas
adc
test
or
in
add
mov
and
cld
inc
mov
jns
sbb
stos
adcl
push
jo
imul
sbb
adc
cmp
jae
pop
mov
mov
cmp
orl
adc
push
leave
lock
out
mov
scas
mov
jb
loope
sbb
mov
das
repnz
push
inc
adc
cmc
std
testl
inc
inc
inc
add
jp
mov
sub
adc
pushf
divb
dec
xchg
pop
aas
and
adc
mov
sti
xchg
movsb
inc
cwtl
mov
loopne
movsb
adc
repnz
jg
xchg
addb
xor
imul
jp
int3
or
jp
or
inc
pop
inc
dec
std
adc
cmp
mov
int3
jge
divb
cmp
pusha
rcl
stos
push
test
fstp
ljmp
loope
in
ljmp
dec
addr16
cmp
xchg
sbb
nop
cmc
cmp
dec
aad
mov
pop
movsb
lods
jp
cmp
push
adc
mov
dec
xor
push
repnz
sub
out
cmp
jmp
dec
pop
or
dec
mov
push
or
loope
sahf
loopne
mov
cld
and
xchg
push
loop
or
mov
push
push
mov
loop
xor
pushf
cmp
add
enter
data16
cwtl
xor
or
xor
aad
sarl
push
mov
mov
sub
out
rorb
xchg
mov
rolb
movsb
xchg
loop
or
mov
pop
mov
loope
or
xor
out
cmp
loop
xor
or
cmpsb
sub
mov
cmp
xchg
jmp
adc
iret
mov
mov
xor
and
mov
repnz
mov
inc
add
aad
mov
loop
or
stos
and
mov
rcll
repz
push
popf
push
outsl
lock
les
mov
push
xor
xchg
inc
lock
push
inc
mov
mov
loop
aas
ljmp
test
loop
sbbl
inc
insl
adc
and
jmp
pushf
xchg
xchg
jae
loope
or
sti
pop
dec
push
lahf
les
push
mov
dec
bound
inc
scas
loopne
push
gs
out
jnp
js
or
pushf
stos
data16
movsb
mov
push
cmpsb
mov
or
dec
push
or
in
enter
out
xor
mov
fs
mov
fs
mov
fs
mov
fs
mov
adc
mov
out
mov
into
push
ss
outsl
loopne
stos
xchg
fs
sbb
dec
ficompl
push
test
mov
orl
stos
mov
leave
stos
mov
imul
cmp
pop
mov
add
mov
cmp
adc
out
push
stos
popaw
push
jno
adc
scas
xor
adc
daa
cmpsb
out
les
test
xchg
ja
fs
ds
fiaddl
lds
mov
and
aad
test
imul
popf
les
ss
scas
ja
in
in
test
test
lahf
fwait
aad
inc
test
lods
out
sbb
push
xor
dec
jbe
stos
gs
add
mov
sbb
push
scas
sub
sbb
test
dec
and
pop
outsl
leave
mov
or
inc
mov
mov
mov
or
imul
xor
add
int
xchg
pusha
stos
lods
imul
mov
cmp
and
mov
xlat
sbb
cmpsl
mov
xchg
sbb
and
mov
pop
and
outsb
push
dec
cwtl
sbb
adc
push
cmpsl
in
xlat
add
sti
test
or
mov
loope
mov
lahf
and
imul
in
scas
xor
cld
push
pop
insl
mov
adc
and
add
sbb
xor
or
aaa
push
lock
cmpb
dec
xchg
stos
or
lcall
data16
cmp
in
mov
pop
sbb
inc
setno
and
testl
cs
xlat
ds
adc
mov
sub
adcl
fcomi
fwait
sahf
cli
cmc
fists
popa
test
lahf
movsb
xor
es
cmpsb
sbb
inc
and
pop
dec
sbb
pop
lret
sti
jbe
pop
andb
adc
inc
je
cwtl
mov
inc
daa
jo
adc
mov
or
mov
je
and
int3
in
mov
pop
lods
les
sub
lret
call
xor
sbb
push
sub
mov
lahf
and
in
push
mov
mov
push
sbb
jle
dec
and
fdivrs
mov
and
out
inc
mov
insb
test
or
xchg
inc
js
stos
pop
in
cmp
xor
xchg
mov
ret
mov
enter
mov
dec
fiaddl
lock
test
mulb
xor
push
stos
imul
jbe
in
push
sbb
xlat
rolb
mov
int3
inc
iret
daa
cmp
addr16
xchg
jmp
adc
mov
add
addr16
sub
rcll
and
mov
jecxz
das
cmp
ret
sti
jno
xor
mov
xor
das
push
inc
mov
adc
test
or
push
bound
xchg
in
std
mov
sbb
inc
inc
xlat
push
lret
and
out
test
pop
aaa
fs
cmp
xchg
mov
jecxz
pop
int3
lods
lcall
xor
sbb
xchg
or
mov
filds
mov
ljmp
into
or
je
int
adc
mov
fdiv
or
and
outsl
dec
pusha
push
les
jae
fnstcw
loope
and
mov
lods
sub
jg
jnp
lret
inc
sub
pop
icebp
push
xor
or
fnsave
or
jo
mov
and
pushf
jbe
int3
test
dec
jbe
out
ror
fcomps
xchg
xor
popa
into
cmp
shlb
or
testb
leave
aam
and
addl
shl
dec
mov
pop
sub
jle
je
es
lcall
in
mov
jo
add
mov
jle
jecxz
push
fstps
js
out
inc
push
std
sbb
pop
lea
movsl
pusha
inc
fisttps
cmp
xchg
movsl
mov
jb
mov
cmp
inc
mov
pop
sbb
repz
sub
ret
mov
lahf
mov
xchg
fwait
in
out
or
mov
mov
mov
mov
jle
in
mov
pop
pop
std
aam
pop
xor
push
jb
jle
sbb
pop
push
cld
shr
movsl
ret
loop
jbe
add
cmp
das
pop
fistl
mov
dec
cltd
push
icebp
loopne
push
cli
loope
fcoml
sbb
and
mov
xor
jo
popf
dec
or
mov
adc
test
fsubrs
or
mov
jmp
push
lret
pop
jp
xlat
sub
call
arpl
add
push
fbld
xchg
idivb
xchg
stc
inc
xchg
pop
xor
ret
mov
mov
arpl
jg
outsb
jae
test
xor
xor
mov
fists
lock
decb
adc
pop
enter
daa
xorb
insl
dec
mov
psubusb
cmp
stc
enter
add
ret
mov
pop
pop
daa
out
xchg
iret
mov
subb
in
movsl
mov
cltd
cmp
jns
mov
dec
movsb
ret
inc
fmul
mov
jae
call
lock
icebp
mov
pop
mov
adc
sti
ss
mov
enter
pop
sahf
mov
in
dec
sub
dec
imul
shl
les
sub
sbb
inc
int
jmp
out
push
mov
add
xor
insb
lods
lock
and
punpckhdq
push
jp
nop
jns
jns
test
mov
movsb
jae
mov
push
mov
sbb
xchg
loop
lods
imul
sbb
sahf
mov
pop
xor
or
jae
xchg
int3
adc
aam
adc
sti
pop
and
cmp
jge
mov
add
cs
mov
xlat
inc
ds
sbb
out
cmp
shlb
mov
iret
fcomps
adc
and
out
adcb
orl
xchg
push
xchg
fcoms
ja
mov
std
cmp
stos
aad
test
fdivrl
ss
push
shr
ljmp
push
pop
dec
jnp
popf
sbb
or
adc
or
insl
push
decb
mov
cli
lret
int3
movb
mov
xstore-rng
cmpsl
inc
in
mov
dec
icebp
scas
add
cmp
sub
sub
pop
push
sti
les
jo
bound
jbe
sbbl
testl
ret
hlt
sub
shl
in
mov
fnstsw
cmp
inc
sbb
lods
aas
aas
cmp
in
addb
testl
xlat
jmp
pop
es
inc
mov
mov
xchg
ds
aam
iret
inc
fs
mov
sub
nop
stos
add
and
xchg
cwtl
rcr
xchg
rcrl
aas
lock
mov
bound
dec
push
cmp
push
xor
lds
cmp
pop
loop
cmp
imul
push
and
in
cmp
lds
bound
add
adc
lahf
inc
out
loop
mov
dec
push
jg
or
fldt
jge
rclb
push
out
arpl
ret
leave
jo
jmp
xchg
icebp
xchg
push
fs
hlt
xchg
movsb
test
icebp
sub
jne
pushf
or
mov
movsb
stos
xor
subl
dec
and
jne
jge
sbb
clc
loope
inc
stc
xor
push
hlt
xchg
fs
out
pop
dec
sub
xlat
add
adc
add
cmpsl
aas
ljmp
jns
test
pop
pop
cwtl
in
fimuls
mov
popf
rorl
dec
cs
movsb
in
and
in
dec
movsb
mov
dec
xchg
lret
and
lock
loopne
hlt
push
movsb
rcll
mov
dec
dec
out
xchg
sbb
dec
clc
imul
ss
mov
dec
and
push
icebp
es
sbb
or
xor
out
pushf
mov
add
fxch
add
dec
jnp
aas
push
fucom
sub
decl
xor
dec
aaa
inc
and
fisttpll
stos
push
sbb
mov
imul
in
or
mov
loop
movsb
jle
xor
movsl
mov
mov
mov
insb
ret
imul
sub
decb
cmp
dec
call
jmp
and
test
dec
push
mov
xor
dec
jne
jnp
test
stc
add
cmp
ljmp
cld
pop
dec
mov
or
mov
lds
inc
out
and
mov
stos
dec
sbb
add
adc
adc
sub
into
jecxz
xchg
insb
lds
xor
idivl
sbb
jg
gs
push
sub
pop
adc
push
iret
cmpsb
xor
pop
fadd
call
mov
and
jge
aaa
jb
scas
jecxz
repnz
push
lods
stc
xor
bound
and
ds
adc
mov
sbb
out
pop
adc
std
in
lods
xor
mov
ss
rcrb
inc
adc
dec
ja
mull
in
mov
je
sbb
push
sbb
cmpb
mov
jb
xchg
or
push
sub
imul
sbb
mov
cld
xchg
cmpsl
ffree
mov
jae
cmp
pop
das
mov
sbb
xchg
xor
subps
inc
stc
inc
ljmp
lret
pop
push
in
lcall
sub
xchg
sub
js
ljmp
push
jecxz
aaa
test
pop
jb
mov
fisubs
dec
lahf
fs
add
jne
xchg
mov
outsl
sbb
pusha
xor
cmpsb
sbb
test
xor
adcb
js
dec
fwait
and
xchg
xchg
jbe
lock
mov
mov
cwtl
lret
mov
or
cmp
pop
xor
dec
dec
in
lcall
movsl
mov
std
mov
mov
enter
pop
jae
call
and
xchg
dec
std
divl
xchg
sahf
and
jbe
test
dec
test
ret
mov
mov
jne
loope
sub
cmp
test
fimuls
cmpsl
lock
pop
cmp
test
sub
leave
mov
enter
fnstsw
lds
and
mov
adc
shrl
cmc
jge
and
adc
inc
incb
mov
int3
pop
pop
or
jl
cmpsl
push
mov
add
inc
adc
sarl
xchg
cli
dec
movsb
xor
test
mov
add
jl
test
inc
das
mov
ss
mov
xchg
add
movsb
mov
xchg
nop
cmpsb
xor
jecxz
inc
clc
add
xchg
inc
dec
inc
mov
mov
negl
sub
mov
in
negl
cmp
fwait
mov
hlt
loopne
lret
in
lock
adc
inc
mov
pop
jmp
dec
out
pop
add
or
dec
jb
jo
pop
das
loop
ss
pushf
adc
or
sub
dec
add
and
out
inc
mov
push
int3
mov
cmpsb
dec
jmp
inc
xchg
mov
inc
lret
sbb
js
jnp
call
mov
mov
mov
les
mov
adc
enter
pusha
lea
sbbb
enter
cmp
decb
mov
mov
mov
mov
mov
xor
cmpsl
out
stc
sbb
cmpsb
push
iret
ja
mov
test
push
push
and
jmp
sbb
insl
push
aaa
enter
dec
mov
out
mov
mov
xchg
les
arpl
into
rcrl
pushf
pop
imul
enter
js
sete
push
push
call
or
add
enter
out
fisttps
jns
or
test
and
sti
xor
mov
addl
insb
mov
lods
inc
xlat
jge
dec
push
sbb
pusha
out
nop
push
cltd
divl
jns
lods
cmp
inc
and
push
inc
loopne
movsb
int3
ficoms
insl
push
fisttpll
clc
mov
fwait
jno
decl
popa
icebp
mov
xor
imul
dec
lcall
jne
insl
icebp
fs
mov
in
dec
movsb
in
aaa
dec
mov
je
sbb
jno
lcall
ret
sbb
mov
adc
fst
dec
adc
daa
pop
mov
xchg
bound
clc
adc
xor
pop
ss
mov
jb
inc
faddp
daa
xchg
sbbl
aas
mov
adc
loop
rcr
xchg
dec
in
adc
jecxz
sub
xchg
and
sbb
adc
out
xchg
jecxz
or
stc
es
sbb
lcall
aas
xor
or
xchg
testl
ret
pop
fnsave
rcrb
out
cmp
bound
rolb
loopne
jns
sbb
sub
cmp
push
rcrl
mov
jne
mov
mov
subl
aad
in
dec
or
xchg
movsb
test
mov
rcr
imul
inc
fisubrl
add
pop
test
and
out
fisttpll
jo
movsl
ja
lret
add
in
lods
and
xor
sbb
jp
jae
mov
mov
xor
mov
adc
decb
pop
sub
rcl
daa
rcl
and
cmp
xlat
jbe
bnd
jge
mov
cmpsb
lea
mov
mov
sub
loop
mov
sbb
fdivrs
cmp
mov
and
inc
sbb
push
push
movsb
dec
push
daa
xlat
push
fwait
jno
decl
popa
out
and
divl
addr16
xchg
xor
sub
es
arpl
ljmp
xor
push
mov
outsl
sbb
mov
pop
lsl
jmp
inc
jmp
cmp
loope
out
pop
repz
xor
xorl
sbb
mov
and
cmpsl
sub
cld
subl
js
pop
sub
mov
test
jg
loope
aas
stc
jge
push
decb
jge
in
lods
lret
xor
stc
fadd
mov
hlt
insb
test
sub
jecxz
loope
clc
inc
xchg
mov
int3
pop
pop
or
sub
sti
mov
aaa
pushf
mov
pop
mov
xchg
jmp
mov
xor
mov
dec
insb
mov
pushf
push
arpl
in
pop
dec
movsb
ret
in
movsl
rcr
xor
in
fstpl
pop
ret
mov
and
int
mov
mov
sub
cli
lret
std
mov
xor
insl
pop
test
or
sbb
and
mov
adc
jmp
adc
mov
add
cmpb
push
movsb
cmp
aam
shl
dec
loopne
int3
inc
fwait
inc
in
xor
in
push
lods
jo
add
mov
mov
pop
jp
data16
call
sarl
mov
pop
iret
add
imul
mov
out
jo
pop
les
xor
addb
int
sbb
mov
fdivs
sahf
repnz
dec
xchg
mov
cltd
lea
inc
movq
fs
lds
pop
out
bound
xchg
inc
shrl
adc
jg
cmp
cmp
xor
inc
scas
sub
jl
and
stc
sbb
cmc
push
or
clc
or
mov
sub
lods
rorl
fptan
and
shrb
or
pop
int3
jnp
mov
fnstsw
inc
inc
xchg
mov
push
lret
xchg
shll
loop
mov
in
jp
mov
rclb
mov
fwait
icebp
push
test
orb
lret
repnz
insl
addb
testl
adc
dec
pop
loop
test
data16
shl
subb
clc
xchg
xchg
cmc
jne
stos
icebp
sub
std
sbb
in
popf
je
scas
stos
mov
dec
fs
jge
es
jns
loope
in
push
add
fwait
jno
testl
loop
add
out
in
cmp
sbb
cmovnp
nop
mov
outsl
adc
cli
sub
fcomps
imul
and
push
cmp
pop
ror
ret
adc
fistl
jmp
mov
xchg
jge
jnp
push
sahf
je
adc
dec
in
sub
movl
out
inc
test
aad
and
frstor
cmp
xor
jne
outsl
out
pusha
cmp
pop
data16
jp
pushf
stc
icebp
add
cmc
fninit
inc
or
nop
inc
push
adc
mov
test
mov
mov
push
inc
hlt
xor
filds
lock
popa
or
bound
inc
aaa
rep
pop
mov
inc
pop
outsb
jns
movsb
in
ja
out
push
and
call
push
icebp
stos
sub
icebp
sub
arpl
ljmp
dec
mov
scas
pop
xchg
loop
add
adc
add
bnd
scas
jno
ret
add
in
mov
mov
add
lcall
mov
jecxz
pop
mov
inc
jno
xchg
or
jle
paddd
loopne
fbld
cmpb
hlt
rcl
outsb
outsl
jmp
sbb
xchg
or
mov
or
fisttps
mov
fistpll
pop
sbb
pop
outsl
mov
lret
or
mov
rolb
in
lea
push
in
mov
adc
mov
cmp
jp
mov
xchg
mov
enter
scas
mov
cs
xchg
adc
pop
mov
push
imul
aam
push
fmuls
setae
mov
jo
mov
add
jo
bound
xchg
out
push
and
fmull
push
ror
pop
addb
pop
push
add
add
icebp
mov
pop
cmp
xor
sbb
les
mov
idivl
xchg
push
mov
mov
mov
pop
push
cmpsb
push
jge
les
xchg
push
out
adc
xor
mov
push
in
imull
mov
jo
clc
popf
imull
adc
shll
nop
icebp
scas
xchg
cmpsb
or
mov
divl
adc
push
nop
mov
sub
dec
out
testb
sbb
pop
sbb
adc
rclb
adc
pop
lock
movsl
fwait
mov
scas
xor
ja
dec
mov
enter
xchg
jnp
cmp
stos
out
add
aas
sbb
pop
jmp
add
xchg
inc
fwait
stos
loope
xor
adc
xchg
and
mov
out
xchg
sub
dec
in
movsb
or
sub
mov
ss
mov
sub
mov
xchg
orl
push
cmp
cmp
nop/reserved
xchg
push
lcall
cmp
sbb
lods
sub
sub
add
mov
imul
mov
xchg
test
add
dec
cmp
aam
push
push
out
push
pop
add
fwait
movsl
lea
mov
movb
xor
jne
adc
xchg
add
xor
jnp
addl
and
mov
mov
jmp
stos
fstps
mov
mov
mov
mov
cmp
mov
xor
insb
or
jae
hlt
lcall
jnp
jbe
pop
aaa
dec
imull
cmpb
push
and
mov
out
mov
jae
ret
iret
dec
fisttps
xorl
inc
pushl
or
pop
sub
enter
mov
jge
pop
jae
adc
jb
cwtl
int3
sbb
sbb
inc
push
stos
lods
repnz
loope
lods
cmp
repnz
mov
and
int
xchg
lods
sub
pusha
sub
arpl
inc
int
push
inc
sub
xor
pop
shl
jp
xchg
testb
int
adc
andb
cs
test
cmp
adc
cmp
enter
mov
push
xor
fld
leave
xchg
mov
movsb
int
cli
aad
cmp
push
pop
ds
mov
iret
inc
testb
leave
adc
fwait
mov
add
dec
fcmovbe
leave
adc
pop
daa
aam
mov
dec
mov
loope
aas
sbb
pop
mov
sub
sbb
jno
push
ficomps
testb
xor
pop
icebp
fiaddl
ja
jbe
xor
mov
leave
adc
adc
mov
movsl
dec
stc
inc
fldl
sbb
std
mov
push
jae
shrl
mov
cwtl
mov
aas
ret
bound
mov
pushf
int
in
call
jo
mov
test
cli
in
aas
rorb
xchg
out
sbb
hlt
ja
cmovns
ja
or
mov
dec
mov
add
push
mov
test
dec
fists
test
stos
pop
or
mov
inc
popa
jo
in
jg
bound
stc
jp
and
add
adc
add
sbb
adc
loope
pop
or
pushf
loopne
mov
pop
stos
stos
jg
nop
xor
lock
cli
jp
sbb
daa
mov
stos
xchg
xchg
pop
aaa
lods
inc
xchg
push
ss
aaa
mov
popw
ljmp
fwait
add
sub
inc
rcr
or
jno
push
sbb
jmp
mov
pusha
push
jp
out
int
rorb
jp
test
or
inc
xor
add
imul
mov
out
jne
push
jp
out
stc
jp
insl
push
jae
sub
mov
pop
loopne
lahf
jno
daa
jnp
mov
sub
xchg
jg
xchg
jb
push
stos
shrl
cmpsl
es
aas
sub
dec
mov
into
inc
cmp
fsubrs
xchg
adc
xchg
jnp
fisubl
popl
cli
cmpsb
lret
fsubl
cmp
adc
pop
jbe
bound
pop
sbb
std
or
shl
or
into
rol
mov
ret
add
pop
inc
inc
imul
push
subb
pop
push
adc
push
das
and
mov
jge
cld
cmp
dec
popf
mov
dec
xchg
aad
mov
pop
jle
dec
nop
jle
add
out
daa
add
outsb
xor
or
pop
xchg
lret
xor
mov
inc
aam
adc
lods
xor
js
xor
or
cwtl
or
pop
aad
push
lock
lcall
test
daa
add
push
xor
pop
xorl
pop
into
adc
shlb
jae
ret
sbb
cmp
xor
repz
test
sbb
push
xor
loopne
aas
xor
dec
nop
mov
cld
xchg
push
lds
ja
xchg
xchg
sti
lods
xchg
xchg
test
popf
out
cmp
cmpsb
sbb
dec
sar
mov
aaa
xor
cmp
outsl
jno
push
ljmp
subb
adc
mov
lods
loopne
ss
js
pushf
or
sbb
xchg
push
sbb
in
jmp
inc
gs
and
in
jnp
cld
adc
pop
sbb
movsl
loope
repnz
add
repnz
outsb
mul
xchg
push
or
lcall
push
adc
leave
shl
push
xor
rcpps
sbb
cli
or
xchg
out
push
cltd
das
fs
xchg
call
add
cmp
fcoms
sbb
xchg
pop
ret
xchg
ss
aad
jecxz
rcrl
les
jge
mov
adc
push
xchg
in
sub
dec
cmp
cmp
xchg
insl
dec
cmp
dec
in
cmp
dec
in
cmp
dec
ljmp
call
hlt
sub
lds
lret
clc
clc
fwait
and
outsl
xor
jb
loope
popf
daa
mov
adc
push
cmpsb
aas
icebp
sahf
mov
clc
cmp
lahf
rcrl
or
cltd
lahf
or
stc
loop
nop
stos
stc
leave
js
fs
ficompl
ds
aas
cs
enter
test
lret
push
cmp
cmp
mov
pushf
movsl
iret
pop
push
mov
test
aam
arpl
test
xchg
les
fmuls
inc
inc
ds
addb
xchg
xchg
rolb
fstpt
inc
pop
sub
pushl
inc
stos
xchg
adc
pop
push
mov
shlb
or
es
cmpsb
stc
inc
ja
aaa
negb
addl
gs
insb
xor
rcrb
repnz
xor
stc
inc
ja
adc
inc
dec
mov
mov
add
repnz
cmp
jl
je
stc
std
xchg
stc
jmp
les
xchg
outsb
pop
cmp
pop
dec
cmp
fdiv
mov
iret
les
push
jl
push
xchg
jl
jno
xor
lds
mov
or
sbb
int3
imul
adc
lods
dec
sbb
mov
push
fsqrt
sahf
in
lods
and
in
bnd
mov
ljmp
out
and
fisttps
fsts
pop
dec
dec
in
cmp
mov
xchg
js
cli
mov
movntq
dec
les
outsl
ret
ljmp
pop
filds
sub
movsl
stos
xchg
xchg
add
sbb
int
inc
inc
mov
in
sub
mov
jae
add
pop
adc
pop
je
push
mov
dec
imulb
out
xchg
add
sub
sbb
in
inc
xor
in
cmp
subl
mov
es
push
adc
cmp
andl
iret
js
mov
fnstenv
leave
and
inc
fwait
xchg
or
nop
pop
dec
jns
xchg
jecxz
xchg
push
call
sub
push
mov
jo
push
movsl
jns
push
push
mov
jno
xor
adc
shrl
pusha
xor
popf
add
sbb
cmp
sbb
fmull
jg
inc
xchg
pop
pop
lock
xlat
testl
push
dec
popa
lds
pop
nopl
leave
fs
xchg
sub
repz
sbb
sub
loop
pop
and
rcrl
lock
imul
test
pop
pop
push
xchg
add
jb
or
and
jge
sub
and
sbb
cwtl
dec
cltd
dec
sbb
js
inc
sarb
outsl
dec
jo
daa
mov
iret
xor
adc
mov
out
out
ss
xchg
mov
push
inc
das
adc
arpl
sbb
shrl
pop
lods
mov
pop
sub
xchg
dec
or
aas
aad
movsb
ljmp
andl
in
out
sahf
out
hlt
and
aad
idivb
insl
sub
scas
jns
aas
push
outsb
sbb
js
nop
pop
enter
push
lret
lret
test
jo
sbb
xchg
lods
popf
movsl
pop
notl
inc
lret
popa
or
pushf
mov
jge
subb
in
testl
rol
dec
pusha
dec
in
cmp
xchg
sbb
repz
mov
jbe
cmp
xchg
push
insb
mov
and
mov
add
inc
xchg
fcoms
sub
add
pushf
insl
adc
movsl
icebp
jl
roll
outsb
or
ffree
inc
jp
push
es
pop
adc
aam
add
insl
jae
les
sbb
xchg
pushf
fiadds
and
sub
xor
push
fsqrt
in
stc
add
jmp
sahf
in
inc
xchg
mov
hlt
nop
pushf
dec
sub
mov
cli
jg
int3
xchg
ret
and
repz
aas
icebp
sahf
mov
clc
fucomip
call
pop
and
fs
lods
addr16
push
int3
aaa
loop
mov
pop
jnp
in
dec
loopne
lock
imul
data16
and
xor
ffree
sbb
dec
setp
lock
aam
jno
test
and
jne
neg
add
jmp
mov
push
jae
outsb
jp
out
cmp
in
ds
mov
mov
push
xchg
dec
jle
push
jae
in
shrb
and
jp
xlat
xchg
push
test
pop
mov
inc
inc
repz
xchg
jle
out
insl
jae
xchg
mov
xorl
mov
cmc
pop
dec
loopne
outsb
pop
push
fnsave
xor
inc
mov
dec
mov
lds
gs
mov
mov
rcr
push
and
or
mov
pop
fsubl
dec
ss
push
cmp
int
push
mov
mov
jge
xchg
sahf
pop
lret
subb
sar
adc
xchg
cmpsl
push
add
hlt
sub
jecxz
push
rorb
pop
mov
jae
bnd
xchg
pop
mov
mov
cltd
sub
push
repnz
dec
dec
dec
gs
stos
cmp
mov
call
pop
pop
stc
sbb
adc
testl
jg
dec
sbb
insl
rolb
push
insl
mov
mov
imul
gs
inc
adc
jb
cmc
inc
mov
ret
pop
shll
out
mov
jp
add
cmp
adc
stos
jae
mov
cmp
pusha
andb
mov
repz
test
mov
sarb
outsb
cmp
push
lods
sub
adc
sub
add
jecxz
add
lds
mov
xor
xor
mov
rorl
ror
fwait
ljmp
out
mov
addl
mov
xor
pusha
loopne
bound
scas
ss
cmp
or
ja
mov
mov
pop
inc
and
xchg
fwait
jge
push
mov
cmp
rolb
mov
xchg
outsb
add
mov
inc
fstpt
insb
gs
mov
sbb
xor
ficoml
inc
xchg
xchg
mov
push
dec
ret
and
mov
test
in
sbb
es
hlt
pop
test
iret
mov
dec
jo
mov
and
sub
scas
popf
cmp
movsl
sti
adc
mov
cmp
outsl
xor
leave
aas
cmp
inc
call
sahf
push
ss
jae
jne
in
iret
inc
lods
sbb
sar
loopne
push
cmp
mov
xchg
fwait
notb
hlt
mov
leave
pop
push
inc
push
stos
dec
lds
test
into
sbb
mov
int
jns
ss
jns
cli
jbe
mov
aam
aam
popf
fldenv
cmpsl
shlb
out
mov
jl
xchg
sar
cs
sub
sub
jp
jg
ret
xor
repnz
test
dec
push
add
fs
or
call
cmp
xchg
fisubrs
jne
in
out
daa
add
adc
sub
xchg
fwait
ret
out
enter
xor
inc
popa
inc
out
pusha
jae
jecxz
ror
xchg
dec
subb
rcr
mov
fwait
sub
movsl
mov
inc
dec
jbe
aas
jo
rcll
fwait
pop
cltd
cmp
pop
push
idivl
mov
faddl
ret
fisttpl
add
adcb
xchg
aam
sub
das
sub
push
orl
inc
in
orb
dec
clc
lea
mov
imul
jecxz
test
xlat
nop
ficoms
stos
hlt
popl
adc
cmc
pop
inc
out
sbb
rolb
stos
ss
dec
int
out
jns
jmp
xchg
pusha
xchg
xor
rdpmc
jns
cmp
enter
mov
outsl
jno
push
xchg
fsubs
js
subb
bnd
inc
int
mov
out
adc
je
sar
jmp
add
lock
in
test
cmp
xchg
pop
push
insb
aad
push
lahf
jnp
cld
sub
test
jo
or
icebp
popf
stos
mov
and
out
cmp
cmp
push
jg
mov
mov
jge
scas
dec
mov
mov
cmp
shll
and
inc
aas
mov
mov
cmp
imul
jb
jne
sbb
xchg
ss
fdivr
jb
jge
lret
xor
iret
jb
jae
cmpsb
cmp
jno
mov
jae
js
add
and
adc
ds
aad
or
shll
pusha
sbb
dec
mov
mov
leave
std
add
pop
out
lods
dec
push
jmp
repz
aaa
lds
jo
pop
daa
or
mov
cmp
dec
cmp
sbb
fnsave
inc
push
in
divb
int
pop
paddw
xchg
inc
xchg
out
jl
pop
dec
mov
out
mov
data16
aam
out
cmp
cmp
jmp
das
mov
dec
in
test
cltd
es
sub
lahf
mov
cmp
mov
lahf
stos
aad
inc
test
sbb
test
pusha
push
add
push
rorb
add
mov
dec
push
stc
jno
loop
lahf
pusha
dec
mov
ret
je
cmp
outsb
test
insl
dec
in
leave
loopne
mov
ret
push
sub
sahf
subb
shlb
or
out
aaa
push
xchg
cmpsb
dec
dec
dec
aas
stos
push
adc
daa
cmp
int3
push
fwait
mov
adc
shrb
test
push
fsubr
pop
stos
add
cmpsl
adc
mov
pusha
outsl
push
inc
stos
add
or
incl
and
sub
sub
fs
push
out
in
adc
outsl
sub
cmpsb
stc
in
lds
imul
sbb
in
sub
repnz
or
insb
push
mov
daa
dec
push
mov
mov
cwtl
jle
mov
int3
mov
dec
pop
out
insl
bound
jo
arpl
fwait
xlat
mov
aaa
scas
cmpsb
xchg
and
push
mov
add
rorl
cmp
pop
call
shl
cmpsl
repz
in
lods
mov
icebp
int
lcall
mov
adc
jbe
fsubs
test
bound
fadd
fadds
hlt
das
bound
pop
dec
cmp
orl
xlat
push
pop
xor
cli
stc
jmp
adc
xchg
lea
xlat
iret
pop
int3
std
cwtl
pusha
sub
push
mov
adc
fidivrl
jl
dec
shlb
inc
leave
xor
sbb
das
adc
lock
fcompl
gs
in
push
inc
test
gs
add
xchg
and
push
lods
inc
test
pop
mov
xchg
test
adc
loope
mov
fisubrl
xchg
aad
lods
adc
mov
push
dec
js
sbb
das
bound
jno
maxps
bound
test
hlt
add
mov
lods
mov
jo
and
mov
shrb
out
gs
std
test
mov
push
loop
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
out
fsubl
loop
cmp
pop
imul
lcall
adc
rorb
sub
jo
pop
mov
outsl
test
mov
enter
imul
add
mov
mov
in
cs
loop
scas
xchg
adc
lret
aam
inc
aas
sub
shll
mov
fidivrs
jnp
movsb
fsubrl
adc
int
cmp
or
jmp
cmp
sub
add
push
xor
andb
aaa
sbb
rcl
aam
cmc
cltd
test
jnp
vmaxsd
add
xor
mov
adc
jmp
jbe
sub
hlt
pop
ljmp
rcrl
pop
bound
xchg
push
stos
insl
pop
lret
stc
dec
stos
insb
cmpsb
int3
fwait
cmp
cmpb
popa
jg
sbb
xor
xchg
jb
inc
fs
jl
sahf
jnp
out
jae
andl
mov
dec
push
inc
add
mov
rorl
addr16
test
test
fiadds
insl
jb
loopne
jge
mov
cmp
outsl
add
loopne
jl
sbb
jge
xor
xchg
ja
out
rcl
test
jle
cmp
pop
push
pop
add
rcrl
sbb
rorl
aam
sti
test
jecxz,pt
push
iret
scas
dec
sub
popf
dec
movsl
xchg
xchg
cs
and
not
cwtl
cmp
sub
mov
xlat
mov
xchg
mov
ljmp
aam
mov
mov
cs
push
rcrb
xor
xor
jbe
call
push
or
arpl
pop
js
imul
mov
arpl
inc
mov
enter
mov
repz
inc
lock
push
lods
into
sbb
aad
mov
lods
pop
pop
in
data16
pop
pop
inc
dec
xchg
int3
testl
sbb
sub
mov
mov
or
mov
add
out
xor
rdtsc
inc
cltd
test
lahf
xchg
lret
daa
push
pusha
sahf
test
ret
pop
daa
ljmp
inc
stos
lcall
scas
mov
aaa
lret
adc
outsl
xchg
call
cs
jecxz
add
faddp
adc
mov
ret
adc
stc
sbb
fwait
sub
pop
push
into
into
enter
test
pop
and
popf
cmpsb
inc
cltd
fildl
addl
in
into
arpl
scas
add
mov
pop
pop
mov
pop
dec
mov
pop
sbb
xchg
push
lcall
ret
stc
pop
add
fbstp
mov
or
xchg
sti
mov
lods
or
test
add
test
and
sub
adc
addr16
adc
in
scas
fmull
loopne
add
sbb
fistl
shlb
inc
addr16
jb
cmp
ss
cwtl
std
xor
je
lock
mov
bound
bound
fdivp
push
xchg
das
dec
cmp
shrl
dec
sti
mov
sub
js
repnz
stc
fldt
fldenv
imul
mov
out
daa
pusha
dec
push
popf
in
cmp
into
push
insl
fsubrl
stc
test
stc
arpl
aaa
in
pop
in
push
loope
rcrl
orl
clc
pop
mov
pop
jge
dec
inc
fstl
jo
jns
jne
rcr
mov
stc
movsb
sbb
rcll
iret
ss
mov
sbb
sub
ja
mov
add
mov
sbb
mov
out
arpl
mov
fadd
dec
mov
mov
loop
pop
fs
cmpsl
inc
dec
and
sub
push
dec
xor
sub
jmp
inc
pop
mov
sub
js
sbb
cmp
outsl
inc
aad
imul
adc
popa
sub
mov
push
mov
sub
xchg
push
cmp
jo
or
imul
xchg
movsb
test
stc
pop
mov
jp
sub
mov
and
push
mov
mov
out
jge,pt
or
mov
outsb
mov
dec
int
stc
xchg
ret
sbb
nop
xchg
push
rcrb
orl
scas
aaa
test
popa
push
pop
aas
push
outsl
daa
inc
lret
in
lods
gs
xchg
xchg
and
add
mov
test
rol
dec
ja
or
les
mov
cwtl
inc
inc
rorl
fsubs
jne
pop
sbb
fadds
enter
arpl
xchg
sub
cltd
in
adc
imulb
pop
dec
jle
and
mov
cli
or
add
jo
cmp
xlat
xlat
je
pop
xchg
dec
and
stos
clc
xor
fldl
jne
push
cltd
mov
jg
loop
push
jecxz
sbb
leave
dec
dec
out
outsl
lret
push
and
pushf
ret
int3
mov
dec
jp
push
orl
jge
jnp
notb
cmc
std
gs
lea
fldt
lods
stos
xlat
lods
shrb
mov
int
adc
notb
repnz
dec
arpl
push
add
and
test
and
inc
aas
ds
mov
aaa
mull
outsl
or
jno
fdivr
iret
and
aas
call
mov
ss
jne
jmp
mov
repz
adc
dec
mov
pop
cmp
mov
out
lods
push
daa
xchg
adcb
cli
xchg
push
xchg
rcll
bnd
cmp
incb
jg
lds
dec
cmpsb
inc
and
data16
out
cwtl
es
mov
pop
or
xchg
push
add
cmpb
push
mov
jmp
call
cmp
add
insl
rcrb
jnp
add
fstpt
mov
adc
fs
inc
mov
xchg
jb
cmp
sbb
jle
mov
sarb
in
xchg
andb
add
ljmp
rclb
adc
js
pop
ljmp
imulb
mov
dec
dec
lret
repz
xchg
jge
push
xlat
xor
hlt
movsl
jmp
mov
push
call
push
mov
gs
adc
mov
dec
pop
pushf
mov
out
jb
jge
and
fidivs
xchg
roll
iret
cltd
aad
cltd
cmpb
shr
pop
adc
ds
pop
push
js
adc
cs
divl
aas
sbb
insl
imul
popa
xchg
or
lock
pop
or
xchg
inc
jl
int3
mov
fst
movsl
or
inc
sub
mov
shl
clc
pop
add
jb
bound
cmp
fimuls
mov
add
dec
mov
sbb
bound
into
test
inc
shll
je
lret
mov
jl
in
push
decb
push
adc
fwait
pop
repnz
shl
in
dec
jns
fidivrl
xchg
repnz
jo
adc
xchg
int
mov
and
add
jbe
stc
and
dec
scas
imul
pop
push
nop
insb
popf
lods
cmp
pop
out
arpl
les
jl
jg
test
xor
push
test
popf
adcb
pushf
jns
mov
lahf
imul
cmc
outsb
fidivs
cwtl
imul
dec
jnp
sbb
cli
mov
shl
mov
pop
mov
adc
roll
mov
mov
xchg
mov
push
mov
mov
xchg
insl
imulb
pushf
inc
sarb
mov
pop
pop
pusha
ficoms
mov
cmpsb
xor
imul
ss
mov
jo
xchg
or
int3
mov
fstpt
mov
loop
push
pop
gs
movsl
pop
push
mov
nop
jge
jmp
sbb
es
mov
sub
mov
movsb
fs
test
pushf
lret
scas
aaa
inc
inc
xchg
xchg
andb
jb
push
pop
test
test
loop
lcall
inc
cmp
push
pop
std
cmc
stos
imulb
mov
movsl
pop
mov
lods
out
sub
adc
or
xor
push
pop
adc
out
scas
lods
jg
lock
sub
subb
jb
dec
xor
xchg
jle
out
test
enter
add
nop
int
mov
int
stos
and
mov
xor
in
dec
loopne
inc
nop
adc
cltd
push
out
loopne
pop
shlb
mov
mov
pop
pop
ljmp
dec
out
cmpsl
pushf
mov
sub
outsl
and
push
movsb
cmp
mov
dec
push
leave
and
loop
nop
stos
mov
fucomi
and
lea
enter
push
cld
loop
adc
ret
popf
sub
mov
cltd
test
xchg
mov
xchg
xchg
mov
inc
in
inc
insl
and
push
inc
les
insb
out
push
fidivl
xchg
add
push
or
jge
popf
mov
into
repz
and
mov
fldt
pop
lret
push
jg
jl
fistl
add
addr16
mov
push
jmp
les
xor
or
jae
ljmp
ret
cmc
add
dec
addb
call
loopne
or
fistpl
and
ret
xchg
cmpsl
mov
aam
sti
je
mov
les
andl
push
lcall
xor
aam
adc
mov
push
adc
in
jns
pop
shll
mov
cmp
jl
fldt
pop
push
ret
fldt
or
add
dec
faddp
scas
daa
adc
push
inc
aam
insl
xorb
sqrtps
push
leave
addr16
jo
les
xor
push
inc
cmp
fidivs
and
jae
pop
dec
mov
push
push
mov
mov
mov
mov
test
add
mov
js
mov
pop
dec
mov
cmp
push
in
mov
shll
je
sub
mov
lds
cmc
loope
sarb
clc
mov
aad
add
loope
pushf
mov
pop
mov
insb
xor
push
inc
inc
popf
fsubr
inc
push
add
out
push
and
js
popf
sub
mov
popa
movsl
and
sbb
adc
rcrb
sbb
cmpsb
sbb
lds
inc
mov
rcll
out
push
in
pop
xor
cmp
ljmp
fucomi
dec
mov
hlt
mov
jno
dec
pop
mov
pop
xchg
mov
shr
inc
dec
inc
lods
sbb
shr
jnp
movsl
cmc
lods
dec
sbb
pop
roll
jae
std
in
sbb
xchg
in
xchg
pop
and
out
push
inc
dec
xor
push
scas
add
jnp
std
cmc
lods
dec
push
dec
dec
roll
popa
je
in
sbb
xchg
mov
pop
and
dec
adc
sbb
shr
jnp
popa
rep
dec
in
pop
roll
fnstenv
in
mov
pop
cmpsl
nop
pop
and
out
push
inc
dec
xor
sub
out
fnstcw
das
hlt
lods
dec
pop
lcall
jno
in
mov
adc
enter
push
imul
dec
mov
fiadds
sbb
mov
pop
inc
push
je
ret
sub
jmp
cmc
shr
int3
mov
mov
fildl
or
jbe
jecxz
mov
setbe
es
and
insl
jg
cld
leave
lret
lds
hlt
sub
out
orl
lods
das
addr16
push
scas
pop
hlt
xchg
pop
stos
int3
sbb
push
add
decl
lahf
sbb
dec
dec
pop
push
scas
and
std
mov
sub
in
lods
xchg
rolb
fsubrl
mov
sub
jle
pushl
mov
fsub
add
mov
add
push
pop
xchg
jne
dec
inc
sub
xchg
jecxz
mulb
pushl
xlat
sub
xchg
mov
xchg
sbb
inc
add
aas
jnp
xchg
ss
andl
shr
pop
mov
mov
mov
push
pop
push
cmp
mov
xor
xlat
pusha
jne
inc
daa
repnz
xor
xchg
pop
push
je
jbe
add
push
jb
and
cmp
push
cmpsl
sbb
add
sub
pop
pop
popa
stos
inc
icebp
push
scas
lahf
rol
cmp
daa
cmp
repz
cmp
cmp
sbb
lods
mov
mov
inc
scas
cs
fwait
in
out
lcall
fidivrs
shrb
push
in
lds
scas
add
add
daa
cmove
jecxz
mov
iret
nop
jl
stos
and
iret
mov
mov
pop
xchg
in
inc
and
push
daa
mov
stc
adcb
lods
ss
test
lret
xor
or
push
shlb
loope
out
xchg
ss
iret
data16
filds
mov
sub
data16
dec
out
cmc
dec
out
cmc
dec
out
cmc
dec
out
cmc
dec
out
cmc
dec
out
cmc
dec
out
cmc
dec
out
cmc
dec
out
cmc
dec
out
cmc
dec
out
cmc
dec
out
mov
cmp
adc
lret
out
dec
inc
push
rcr
lea
pop
lods
push
lret
bound
je
out
test
add
cmp
jnp
in
ja
xlat
sbb
cmp
dec
jb
push
dec
push
push
add
orb
jo
ss
daa
outsl
pusha
adc
add
lods
push
push
aaa
jns
cmpsb
ljmp
dec
adc
imul
or
lock
add
mov
xchg
push
lcall
sub
mov
dec
sub
les
daa
out
mov
and
daa
sbb
ss
out
xor
sbb
jo
loop
lods
dec
sub
std
mov
cli
adc
sub
dec
dec
jae
dec
mov
xlat
aas
push
into
es
cltd
add
push
mov
andl
negl
jno
push
loopne
or
inc
cmp
int3
lahf
pop
cmp
movsl
cltd
cltd
mov
test
lds
push
dec
push
fnstcw
fs
hlt
ja
inc
lret
nop
mov
adc
mov
sbb
pop
xchg
movsl
lods
lock
loope
out
sbb
lock
jle
mov
fisttps
adc
inc
sahf
aad
or
jb
add
arpl
jp
and
rorb
jecxz
clc
mov
fildll
outsl
push
and
add
repnz
push
les
inc
push
add
fdecstp
inc
fcomps
gs
jp
in
mov
and
fwait
out
ret
movsl
or
aam
lahf
add
shll
or
push
lock
jmp
add
cmp
in
fsubl
into
es
adc
sbb
insb
push
push
adc
icebp
stos
pop
lods
dec
movsb
orl
mov
xchg
in
dec
imul
xor
insb
mov
adc
jp
pop
xchg
and
shrb
movsl
out
inc
fs
imul
adc
pop
and
push
lods
add
negl
divb
dec
out
cmp
mov
xor
rcrl
cltd
sbb
push
mov
repz
adc
cmpl
lock
nop
faddl
lods
mov
adc
addb
push
mov
jmp
or
ret
clc
push
mov
outsl
adc
push
mov
pop
cmp
pop
mov
dec
dec
xchg
inc
arpl
mov
js
mov
cwtl
push
decl
cltd
lock
insb
xchg
fmuls
cmp
stc
mov
jmp
es
fisubs
push
sub
dec
sbb
pop
jp
xor
push
cmp
inc
sub
jns
and
sysret
loopne
push
pop
hlt
sub
add
add
xchg
iret
xor
out
xchg
cmpsl
mov
mov
out
int
add
mov
add
icebp
fistps
cmpsl
dec
in
repz
add
jle
rolb
cmp
movsl
int3
push
or
and
inc
lret
cmpsl
sbb
cld
mov
mull
pop
inc
xorb
and
bound
jge
cmp
xor
and
jg
dec
hlt
scas
push
movsl
cmpsl
movb
imul
adc
push
fwait
mov
mov
cmpsl
or
addr16
in
fcoml
lret
push
andl
lahf
and
xchg
fidivrl
in
push
adc
aaa
clc
andb
pushl
mov
jle
push
stos
lods
and
lea
inc
fisubrs
xchg
and
pop
mov
and
sub
xor
sti
mov
pop
push
pop
in
lods
and
mov
push
mov
cmp
sti
sub
decl
jb
mov
mov
push
inc
in
add
in
mov
popf
mov
mov
out
pusha
popf
mov
mov
push
nop
push
adc
pop
and
mov
repnz
cmpsb
sti
cld
jne
cmc
dec
arpl
mov
jl
pushl
push
pop
inc
add
lods
and
lea
decb
xchg
or
mov
test
pop
add
adcl
sbb
mov
mov
movsl
or
inc
or
xor
mov
popa
roll
data16
cltd
jg
dec
lds
adcb
aaa
and
stos
stc
jg,pn
dec
jno
cltd
imul
cwtl
mov
stos
rcrb
fwait
push
sub
jg
xor
mov
enter
mov
mov
xorb
mov
ljmp
jle
xor
xor
fldenv
je
dec
icebp
in
cvtps2pi
aaa
sbb
cli
iret
xor
sahf
cmc
std
and
lret
add
das
clc
int3
subb
mov
mov
imul
call
out
cmp
test
ja
push
xchg
mov
int
xor
mov
les
lret
adc
pop
adc
cmp
jae
les
sbb
lea
int
addr16
push
ret
fs
jns
and
arpl
push
cmpsb
in
dec
call
int
pop
and
subl
cmp
sarb
fbstp
bt
pop
mov
imul
arpl
shrb
out
pop
push
cli
inc
pop
jl
add
enter
jg
dec
push
clc
ret
mov
jne
xor
int
fstl
mov
decb
pop
push
dec
mov
scas
fisubrl
lods
xchg
pop
dec
mov
rorb
lret
cmp
out
xchg
daa
sub
add
inc
mov
xorb
pop
push
jne,pt
jbe
sahf
rcrl
mov
push
and
mulb
and
imul
mov
mov
imul
xchg
push
out
mov
and
jge
sub
imul
not
out
mov
js
test
ret
testb
in
push
sub
mov
jbe
subl
jbe
movsl
mov
ds
aam
xor
pop
sbb
add
sub
stos
sub
pop
sub
std
inc
push
sbb
adc
out
test
xor
ret
xchg
lods
mov
jb
movsb
nop
lret
int
pop
clc
add
leave
and
push
int3
inc
jecxz
push
cmp
cmpsb
or
push
push
sarl
fs
nop
cmpb
and
loope
je
loop
cmp
xor
or
sub
add
in
popa
dec
sub
dec
cwtl
test
dec
sbb
mov
insb
sti
cmp
hlt
dec
pmullw
sbb
or
fsubl
inc
popl
adc
mov
dec
popa
dec
or
sub
push
push
sti
add
add
inc
cmp
loop
adc
inc
xchg
fisubs
shll
inc
imul
sbb
aad
dec
dec
push
adc
out
jo
ret
cmp
outsl
xchg
sub
imul
sub
inc
pop
xchg
arpl
cli
div
ret
ds
adc
adc
in
xor
enter
mov
clc
add
fiaddl
movsb
pop
aas
mov
mov
xchg
shl
adc
addr16
pop
mov
call
popa
push
int
xor
stc
mov
cmp
stc
adc
ja
push
popa
jecxz
mov
xchg
pop
xor
addr16
imul
mov
sahf
sbb
mov
dec
mov
icebp
loop
mov
insl
cmp
adc
enter
mov
int3
sarb
inc
adc
jge
sbb
sub
mov
dec
hlt
insb
sti
and
rcl
enter
insl
push
jno
dec
jl
insb
inc
paddsw
int3
inc
mov
imulb
xchg
mov
mov
push
sti
les
xchg
xlat
inc
sbb
adc
adc
cli
nop
test
mov
sub
daa
ret
lds
mov
mov
jo
ja
adcl
fmull
int3
mov
sbb
ljmp
call
xchg
jns
add
pusha
notl
das
cmp
cmpsl
lea
mov
sub
mov
std
shlb
int3
fbstp
pop
les
repnz
mov
jp
jmp
mov
loopne
mov
stc
jno
ss
xor
pushf
xor
ret
out
mov
xchg
lret
mov
add
adc
mov
int
pop
mov
test
movsl
jg
and
push
and
test
mov
jp
jno
push
fdivrl
outsl
sub
mov
jbe
test
xchg
mov
mov
addb
add
cmpsl
mov
xchg
hlt
cmp
movsb
sub
mov
sub
jno
repnz
les
mov
or
mov
xchg
pop
cmp
in
or
xor
out
loopne
pop
fsubs
or
dec
xchg
les
jmp
stos
sub
cld
mov
push
mov
pop
mov
cmp
pop
pop
and
pop
add
add
push
and
mov
mov
add
sbb
orl
push
and
mov
xor
pop
movsb
mov
push
and
loop
and
loop
and
loop
cmp
and
nop
push
movsb
mov
push
and
loop
and
loop
and
loop
cmp
loop
and
push
and
sub
cmp
xchg
and
loop
and
loop
and
loop
and
mov
mov
add
xlat
daa
repz
pop
and
lea
dec
push
pop
and
mov
add
and
inc
pop
movsb
or
lahf
pop
movsb
add
and
pop
pop
movsb
dec
push
pop
and
lahf
pop
movsb
mov
xor
cmpsb
pop
movsb
mov
push
and
mov
mov
add
lds
add
push
and
mov
aad
pop
and
pop
pop
and
loop
and
loop
and
loop
and
mov
mov
add
lds
add
push
and
mov
adc
xor
movsl
pop
and
loop
and
loop
and
loop
and
mov
mov
add
lds
add
push
and
pop
pop
and
push
xor
loop
and
loop
and
loop
and
mov
mov
add
lds
add
push
and
pop
pop
and
divl
and
lahf
pop
and
loop
and
loop
and
loop
and
mov
mov
add
lds
add
push
and
pop
pop
and
cli
xor
loop
and
loop
and
loop
and
mov
mov
add
lds
add
push
and
movsl
pop
and
xchg
push
and
scas
pop
and
loop
and
loop
and
loop
and
mov
mov
add
lds
add
push
and
dec
pop
and
int3
push
and
dec
xor
loop
and
loop
and
loop
and
loop
and
loop
and
lea
fldenv
pop
movsb
mov
push
and
loop
and
loop
and
loop
cmp
loop
and
inc
pop
and
int3
push
and
mov
add
push
and
loop
and
mov
and
lea
cmp
and
sbb
cwtl
and
test
and
mov
stos
push
imul
loopne
add
pop
mov
imull
or
cmp
mov
or
mov
xchg
push
and
sub
outsb
xchg
std
xor
or
cmp
and
sbb
out
mov
fstps
and
xchg
mov
ljmp
mov
push
fnstsw
ljmp
mov
lods
dec
insl
mov
cmc
add
xor
mul
scas
xor
sti
jne
push
mov
mov
xor
daa
shr
ss
nop
add
xorb
fmuls
in
adc
and
pushf
pop
xor
cmc
into
xchg
xchg
int3
ret
in
jns
cmpsb
pop
xchg
sub
dec
xor
push
int
push
pop
lahf
inc
jp
sbb
mov
into
lds
xsavec
sub
xchg
fisubl
jecxz
cmp
xor
xor
loopne
test
out
repz
mov
sub
mov
sbb
push
and
hlt
xchg
jns
lret
stos
jno
ljmp
pop
stc
jmp
jb
rolb
fwait
push
sub
adc
sbb
es
mov
out
pop
imul
or
hlt
aam
mov
pop
push
jns,pt
inc
adc
pop
cmp
loope
scas
aaa
xor
ror
mov
dec
lea
notb
or
push
gs
lahf
inc
mov
dec
mov
sahf
lahf
addr16
imul
scas
aaa
ret
mov
notb
lds
add
inc
imul
inc
test
push
jle
add
je
xchg
shll
push
cmp
fs
cmp
daa
lcall
cmp
add
lahf
inc
lret
ret
jp
sbb
lea
inc
lds
pushf
mull
cwtl
call
xchg
or
scas
dec
mov
sub
mov
sbb
fsts
mov
lods
out
jge
repz
aad
aam
stc
mov
dec
xchg
push
adc
jl
ds
out
or
push
mov
pusha
pop
clc
and
arpl
addr16
out
xchg
add
orb
cmp
sbb
icebp
mov
mov
outsl
shl
sbb
loopne
lret
into
shrb
lods
addr16
and
add
mov
cld
jge,pt
push
cld
mov
mull
lcall
pop
cmc
adc
and
shrl
inc
xchg
xchg
enter
jecxz
sub
mulb
push
int3
aas
lcall
xchg
ljmp
add
or
ds
or
unpcklps
cmpl
push
roll
stc
mov
test
xlat
push
sub
cmp
in
pop
mov
or
pop
push
cli
jl
or
mov
aas
into
sbb
outsb
xor
cmp
insl
sub
leavew
hlt
out
repnz
jae
sub
inc
insb
cmp
ret
pushf
and
cmc
outsb
dec
setnp
lahf
and
mov
sub
cmp
cmp
ret
pushf
and
cmc
outsb
dec
hlt
sbb
rcrl
movsl
mov
push
hlt
out
pop
rcr
daa
mov
inc
push
add
pop
add
jae
dec
out
mov
fisubl
je
shll
je
addr16
sahf
mov
sbb
mov
bound
inc
ljmp
push
push
cmp
stc
dec
cmp
jnp
insl
iret
inc
mov
jecxz
mov
hlt
out
or
push
daa
stos
mov
or
nop
push
lahf
mov
xchg
scas
ja
or
loopne
out
aad
rcr
daa
mov
or
fdivr
es
pop
add
jae
xchg
aaa
push
xor
je
js
cli
jp
push
jne
push
xchg
xor
out
xorl
xchg
jmp
test
xor
pop
iret
jge
outsb
clc
pop
push
sub
sahf
adc
xchg
mov
pop
sub
xor
pop
iret
pop
ret
addl
and
jmp
addr16
mov
out
jb
sub
xor
cmp
insl
sub
leavew
hlt
out
repnz
jae
sub
ljmp
lock
outsb
dec
setnp
lahf
and
mov
sub
cmp
cmp
ret
pushf
and
cmc
outsb
dec
hlt
sbb
rcrl
ret
adc
or
push
repz
or
lret
fcmovnbe
xor
add
aam
push
ret
insb
push
push
das
add
sahf
push
imul
mov
inc
rcrl
hlt
out
adc
pop
shll
stos
push
daa
pop
nop
scas
imul
repnz
lock
cmp
push
cmp
sbb
pop
pop
sub
mov
out
mov
mov
push
movsl
xor
cmpsb
sub
mulb
or
dec
sub
fdivrl
xor
imul
mov
sahf
jns
mov
shl
imul
pop
pop
sub
dec
push
mov
jp
sahf
add
movsl
aaa
push
cmp
jle
dec
push
xchg
xor
out
xorl
xchg
jmp
jecxz
and
pop
iret
jge
outsb
clc
pop
push
sub
sahf
adc
xchg
mov
lock
jecxz
and
pop
iret
pop
ret
addl
lods
add
cs
pop
cwtl
jbe
sbb
popf
bound
cmc
ja
mov
sub
sbb
adc
rorb
jb
inc
lock
push
adc
dec
and
int3
mov
hlt
and
mov
mov
cmp
addr16
sahf
mov
push
popa
mov
cld
adc
outsb
push
std
pop
push
sahf
cmp
mov
mov
pop
jmp
add
jge
cltd
sub
inc
test
mov
hlt
lcall
mov
stc
je
addr16
sbb
fs
popl
pop
add
call
mov
in
dec
mov
test
inc
in
mov
or
daa
adc
adc
push
mov
pop
push
imul
imul
insb
jle
sub
sub
addr16
lcall
mov
mov
push
in
fmul
popa
mov
cmp
and
out
pop
or
push
lea
test
push
ljmp
jge
pop
pop
jecxz
leave
addr16
xchg
push
aad
mov
and
push
hlt
cltd
mov
add
pop
ret
int
push
js
sbbb
repnz
pop
test
cmp
xlat
daa
inc
push
sbb
cmpsb
outsb
add
adc
mov
int
loope
mov
pop
jo
jle
lock
dec
push
xor
jmp
insl
pop
icebp
test
xchg
into
data16
xchg
fwait
rcl
dec
filds
add
leave
pop
lcall
inc
ret
sub
arpl
scas
jb
jne
xchg
inc
mov
cli
sbb
cwtl
dec
push
or
cmp
mov
inc
pop
pop
mov
pop
jnp
shl
lcall
push
cs
xor
hlt
pop
push
movsb
lods
sarb
pop
out
rcr
push
scas
and
ja
mov
jg
fisubs
outsl
xorb
fstps
sub
out
jl
push
sti
pop
push
dec
and
push
jmp
lahf
pop
sbb
jnp
nop
int3
sub
jmp
rorl
add
fsts
insl
pusha
lds
and
push
je
pop
cmpsb
aam
insl
or
mov
cmp
xchg
push
mov
mov
fwait
mov
jmp
loope,pt
ret
loop
push
cmp
loope
adc
in
rcr
mov
out
xor
mov
or
pop
push
mov
imul
jg
out
adc
jbe
jg
lds
loope
and
mov
mov
je
insl
out
repz
je
emms
xchg
jmp
fbld
sti
arpl
out
sub
dec
jae
adc
imul
add
and
fs
shr
js
sti
pop
xor
test
pop
xor
cmpsl
dec
xchg
inc
pusha
insb
mov
and
dec
mov
repz
enter
and
jb
cmp
sub
in
cmp
imul
ret
pop
push
jg
shlb
mov
mov
sub
sub
mov
lret
inc
test
mov
xlat
dec
movsb
cmp
notl
cmpsb
leave
dec
shr
enter
fwait
xchg
jge
enter
jg
rcrb
cld
xor
push
cmp
mov
xchg
cltd
or
ss
add
xchg
test
movsl
arpl
loope
lahf
pushf
adc
lret
push
cmp
dec
cmp
in
ret
pop
and
lahf
xchg
add
aad
loope
shlb
rcrb
jb
cmpsb
clc
shlb
mov
cmc
sub
rcrb
cmpsb
xchg
enter
dec
lock
int3
inc
sar
sti
pop
jecxz
mov
mov
sbb
loopne
mov
push
ret
repnz
pop
pop
adc
mov
enter
out
out
clc
in
add
inc
mov
sbb
movsl
pop
aam
jl
clc
fsubrs
mov
or
pop
jb
jnp
sub
fimuls
push
gs
lret
sub
xor
push
aas
adc
call
adcl
inc
fisubrs
xor
add
ja
fs
mov
add
or
and
scas
in
jo
dec
in
or
adc
xchg
sub
inc
add
mov
jb
jl
or
xchg
pop
popw
sub
fldt
push
and
xchg
xchg
jne
inc
push
in
stc
jp
mov
test
push
sti
pop
mov
ljmp
loop
push
mov
andb
mov
push
fisubl
cmp
sub
clc
lret
sub
movsl
inc
movsl
aam
scas
push
sti
jp
fs
xlat
dec
jl
xchg
subl
in
jmp
mov
dec
popf
pop
adc
stos
jae
cmp
mov
mov
jl
cmpsb
xchg
inc
popf
aad
and
push
stc
adc
push
in
cmp
adc
scas
jns
jb
psubusw
movsb
scas
adc
shl
mov
arpl
push
inc
pusha
mov
jecxz
mov
mov
sub
sbb
cmc
rorb
lret
js
pop
pusha
lcall
mov
daa
inc
mov
repz
les
xchg
jge
push
xchg
xchg
sub
clc
jo
cli
repz
sub
loope
xlat
ljmp
and
lods
cli
jno
je
jg
cmp
sti
pop
push
mov
adc
inc
xchg
iret
sbb
adc
je
call
in
mov
arpl
mov
mov
popa
cmp
or
ret
jo
or
pop
adc
mov
push
out
and
dec
aad
or
div
leave
push
cmc
mov
or
cld
mov
in
adc
xor
push
std
adc
sub
aad
cmpsb
pop
dec
shrl
fdivs
or
cli
mov
pusha
andl
mov
mov
aad
mov
push
sbb
psraw
xchg
cmp
cmp
adc
aad
jae
leave
sti
pop
sbb
fwait
mov
add
push
and
jecxz
sti
inc
pop
add
addl
ljmp
dec
mov
mov
inc
mov
out
mov
aas
repz
rol
je
pusha
stos
cmp
jmp
in
sti
push
or
add
dec
movl
dec
movzwl
dec
popa
in
mov
push
lea
pop
inc
sbb
addr16
mov
mov
cmp
hlt
cmp
insb
cmpsb
negb
xchg
fcmovnbe
fidivl
or
jne
not
ss
ret
jg
mov
pop
mov
xor
mov
add
xor
lcall
dec
sub
call
pop
and
xchg
fsubr
into
test
xchg
sub
fsubrs
adc
add
adcb
pusha
or
sar
in
and
push
rolb
in
test
inc
push
movsb
enter
mov
pop
pop
xchg
xchg
mov
xor
loop
arpl
sar
test
or
btc
loope
das
in
test
push
pop
mov
cmp
mov
jnp
bound
enter
dec
outsb
xchg
punpckldq
andl
jo
adc
mov
or
inc
incl
shlb
pop
cmp
pop
in
pop
out
lods
sahf
or
pop
loop
mov
cmpsb
mov
stos
adcb
cmp
outsb
dec
pop
clc
inc
pop
enter
les
call
push
loopne
ret
in
js
stos
cmpsb
repnz
push
imul
mov
mov
pop
jmp
rcrb
pop
ficomps
ror
mov
xor
push
xchg
mov
movsl
push
push
ljmp
scas
mov
fisubrl
js
ds
insb
data16
and
jbe
js
icebp
push
sub
dec
stc
mov
xor
loopne
xor
xchg
mov
cs
jp
aas
mov
cmp
inc
xchg
xor
and
cmpsl
gs
and
adc
sti
mov
test
cwtl
inc
inc
arpl
daa
push
mov
add
sub
es
bound
mov
lret
xchg
inc
stos
inc
xchg
push
ds
mov
mov
pop
cld
lret
inc
test
icebp
sbb
out
call
or
push
sub
adcb
cmpsb
pop
xor
pop
pop
pop
cmp
jb
mov
pop
pop
pop
pop
inc
sbb
pusha
jo
pop
cld
cltd
mov
fnsave
repz
shll
pop
pop
or
pop
push
add
aaa
mov
pop
pop
frndint
mov
jmp
lods
fistpl
pop
mov
movsb
aaa
pop
cli
inc
rorb
pop
scas
jle
shrb
hlt
mov
xlat
dec
movsb
cmp
sbb
frstor
lret
xchg
sbb
js
inc
add
and
mov
jns
push
mov
mov
les
pop
in
loop
cmp
sub
mov
xchg
ja
add
ja
or
outsl
cmp
in
popa
mov
les
aad
bound
mov
xchg
jmp
add
aad
nop
or
adc
xchg
dec
jne
in
icebp
sub
xchg
inc
jmp
imul
les
jmp
fldl
and
enter
std
and
rcr
xchg
push
dec
and
das
inc
and
shl
and
jge
rcrb
pop
ja
jne
daa
inc
rorl
mov
jnp
pop
push
and
mov
xchg
int3
inc
sub
inc
out
adc
inc
scas
cli
mov
jo
pop
lock
sbb
pop
dec
xlat
pop
xchg
lret
push
jge
fisubrs
sbb
inc
lcall
push
aad
aaa
inc
cli
push
test
inc
cld
push
adc
mov
movsb
inc
xor
cmp
mov
mov
sbb
sbbl
push
xor
cmp
mov
lret
ficomps
mov
insb
mov
or
xor
inc
cwtl
cmp
in
mov
insb
xlat
fists
mov
test
gs
inc
dec
xlat
frstor
and
divl
scas
sub
lcall
sbb
xchg
cmp
jne
jl
push
cmovae
fnstcw
and
out
in
xor
arpl
push
or
pmulhuw
fdivr
out
pop
pop
sahf
arpl
stos
mov
and
sbb
dec
icebp
cmp
loopne
das
rcr
cmp
mov
shlb
and
enter
aad
sub
sarb
add
cmp
inc
pop
mov
pmulhuw
das
pop
xchg
push
inc
lret
add
lea
dec
inc
push
loope
mov
cwtl
cmp
lods
adc
mov
lods
jne
pushf
xchg
insb
mov
aam
fidivl
mov
dec
ficomps
and
sbbb
repz
fwait
pop
jo
push
hlt
xor
jne
idivb
pushf
or
inc
pop
mov
scas
nop
or
cld
fldt
int
or
stc
push
repz
push
cmp
cmp
sub
dec
mov
scas
jb
push
mov
dec
push
jb
adc
lds
cmpsb
gs
call
lock
idiv
sbbl
cwtl
rclb
outsb
pop
clc
and
mov
pushw
pop
jae
push
hlt
cwtl
sub
jno
aas
jnp
xor
repnz
xchg
ret
sub
push
jno
push
aad
hlt
in
fiaddl
cmp
call
frstor
cmpsl
sarl
stos
fxtract
xchg
testb
mov
adc
push
aas
insb
push
jle
cmpsl
push
push
jg
xchg
outsl
jne
stos
pop
pop
lods
dec
sub
cmp
aad
cmpsb
dec
insl
scas
fsubrp
in
mov
sub
pop
je
pop
in
fsubrl
ss
les
lret
in
popa
or
sbb
jmp
out
cs
sbb
js
jnp
jns
mov
mov
mov
loop
sub
xchg
xchg
jb
mov
das
dec
sbb
not
cli
adc
jg
dec
cltd
or
jno
mov
push
push
rolb
imul
daa
fstp
mov
and
xor
js
push
xchg
push
inc
inc
push
xchg
cmp
hlt
sahf
cwtl
stc
xchg
mov
ljmp
icebp
push
xchg
int3
push
inc
in
test
pop
arpl
xchg
idivb
jmp
mov
fisttpll
dec
push
push
imul
mov
add
mov
xlat
pop
imul
fxtract
daa
xchg
sti
xor
ljmp
lret
sub
jne
clc
imul
xor
mul
cmp
fmuls
sbb
std
mov
dec
pop
adc
jb
xchg
cli
lret
loope
add
jecxz
lods
dec
inc
imul
and
and
mov
inc
orl
mov
sub
clc
out
leave
jp
aad
out
stos
mov
sub
push
rolb
loopne
cld
mov
cmp
pushf
movsl
daa
fistpl
or
in
movsl
sbb
jl
lock
xchg
pop
jnp
xor
fmull
jge
push
gs
mov
mov
add
je
push
cld
or
ljmp
sub
dec
insl
out
lea
loope
orb
add
imul
hlt
xchg
inc
cltd
jg
popa
cmp
jns
dec
test
imul
mov
pop
adc
arpl
push
jmp
or
fwait
mov
dec
sub
rorb
jg
out
insl
add
sti
adc
fisttps
cwtl
ficoms
leave
sub
ja
mov
sub
jnp
aas
pop
jle
add
inc
adc
or
icebp
stos
fdivl
push
pop
push
sbb
dec
stc
imul
repz
and
js
jae
mov
cmp
rorb
xchg
sti
movsl
push
push
int3
xor
fistpl
loop
jae
int
jmp
es
adc
cmp
rcrl
add
arpl
push
shlb
test
push
mov
aad
add
lcall
enter
push
sbb
pusha
sbb
pop
lods
sarl
push
cmpsl
adc
gs
push
outsb
int3
inc
pop
cmc
mov
sub
fxtract
addr16
pusha
lcall
shlb
jnp
or
imul
jno
jge
repnz
cltd
inc
jno
dec
jl
adc
push
and
mov
daa
movsl
pop
ss
xor
and
jmp
jbe
orb
les
pop
out
call
push
dec
cmp
and
aas
pop
lea
xorl
cmpsl
lock
outsl
outsb
pop
aas
push
pop
rcrl
mov
int
out
mov
jne
sub
fimuls
jns
xchg
std
mov
fld
or
aam
sbb
into
jnp
or
jnp
inc
jb
iret
outsl
ret
mov
test
iret
or
sbb
negl
mov
sbb
cwtl
in
imul
out
jmp
dec
ret
in
in
pop
out
daa
sub
mov
cmp
int
decb
in
shrb
jecxz
dec
fists
adc
scas
shrb
mov
bound
lock
lea
arpl
imul
movsl
push
in
push
popf
jmp
lea
and
and
pop
fimuls
cs
sub
ja
xchg
arpl
add
pushf
insb
jecxz
or
out
jg
lahf
stc
fwait
int
in
aam
fucomp
out
sbb
sbb
fcompl
jno
cmp
inc
adc
mov
rcr
push
pop
mov
or
mov
jbe
xchg
test
fisubl
sti
ss
ror
mov
mov
out
add
loopne
cmp
hlt
mov
mov
rcrl
cmp
xor
mov
mov
addb
cmp
jne
push
pop
call
andl
mov
imul
mov
pop
xlat
pusha
popf
popf
repnz
push
stc
stc
lahf
or
xchg
jge
mov
xchg
aas
orl
cmpsl
aas
clc
pop
mov
push
test
lret
dec
dec
in
sbb
or
dec
cld
dec
jge
pop
xor
dec
adcl
mov
mov
ss
out
imul
mov
cmp
sub
pop
mov
negl
mov
mov
fyl2xp1
scas
jp
xchg
adc
test
loopne
jnp
jmp
sbb
sbb
stc
lcall
push
inc
and
lahf
dec
add
push
andl
ja
mov
stc
lret
pop
or
and
push
cmp
in
ss
cmp
mov
mov
mov
add
push
and
sahf
inc
fnstsw
xchg
push
add
jae
dec
fsincos
push
xchg
jmp
fsubrs
and
idivl
push
mov
in
jmp
fldcw
add
dec
in
aas
xor
arpl
inc
sbb
cmpl
push
cli
rcrl
sbbl
lods
jns
sub
std
jmp
cld
and
mov
lods
mov
or
ret
mov
pushf
pop
cld
inc
lret
sub
pop
js
sbb
icebp
sub
xchg
sub
push
pop
fisttpll
sub
pop
pop
push
fs
aas
and
test
inc
sbb
sbb
pushl
nop
mov
mov
test
sub
test
repz
adc
push
lret
out
in
pop
sub
sahf
out
xchg
add
add
mov
or
add
xchg
sub
ret
call
add
and
stos
xchg
and
cld
pop
arpl
add
adc
rcl
imull
adc
mov
adc
add
or
adc
dec
adc
mov
or
mov
sub
sbb
jno
mov
test
mov
cltd
sahf
jno
add
loop
scas
mov
cmp
pushf
and
iret
in
inc
ss
sar
mov
mov
jg
or
mov
inc
sbb
mov
add
fwait
cli
inc
xchg
sbb
std
cmpsb
sub
mov
or
adc
fcmovb
xchg
dec
inc
mov
sbb
paddd
or
jae
cmpsl
xor
pop
pop
inc
sub
sub
out
adc
cs
shll
inc
xchg
cltd
jae
aad
pop
push
insb
mov
scas
divb
ror
sub
jmp
or
mov
push
je
add
sbb
pusha
out
mov
mov
lock
out
lock
or
es
cld
cwtl
jl
das
adc
cmpsb
adc
out
imul
pop
fnstsw
cmp
push
arpl
rcrl
jge
fs
out
xor
in
aad
jbe
dec
dec
mov
pop
gs
popl
add
jp
js
in
out
sbb
lods
rcrb
sub
outsl
push
jg
adc
ja
mov
pop
fbld
nop
pop
mov
cli
jg
mov
xor
mov
pop
imul
repnz
jmp
push
fisttps
loop
lret
add
cs
xlat
std
jmp
cmpsl
popa
mov
push
andl
dec
ja
fsts
jae
aaa
outsl
fidivl
ret
xor
test
adc
mov
sbb
mulb
idivl
xchg
pusha
xor
jp
rorl
nop
dec
pop
scas
mov
xor
mov
pop
mov
and
sub
lret
js
scas
xchg
sub
cmp
sbb
xlat
xchg
lock
sbb
divl
sti
mov
addr16
les
iret
aaa
daa
cwtl
jg
xor
cltd
adc
js
movsl
in
lods
cmp
cmp
test
outsb
jbe
loope
in
add
jnp
stos
xor
dec
adc
mov
cmp
pop
fiaddl
mov
cld
stc
aad
scas
repnz
jl
lret
jg
aas
iret
mov
test
mov
cmp
inc
inc
xchg
cli
push
inc
xor
add
xorl
leave
push
cmpsl
pop
add
inc
mov
push
cltd
or
dec
arpl
push
xor
int
loope
enter
fs
sub
push
test
outsb
inc
push
pop
mov
push
lock
iret
mov
push
out
lds
or
dec
fnstcw
inc
mov
mov
addb
stos
hlt
push
js
xchg
dec
mov
out
stos
cmp
push
cwtl
es
mov
fs
call
and
xor
inc
outsb
and
loop
in
xor
scas
mov
mov
into
fmulp
mov
sti
mov
scas
mov
repnz
jns
mov
sub
mov
xchg
jl
push
cltd
shll
stos
outsl
adc
imull
xchg
pop
addr16
rcl
rcrl
les
hlt
jp
std
mov
push
pop
cmpsb
jo
mov
mov
xor
cmp
mov
scas
mov
jmp
sub
mov
data16
mov
add
cmp
mov
scas
mov
jmp
sub
mov
pop
adc
xchg
cmp
jno
getsec
jl
aas
push
xor
fld
sub
loope
imul
jns
push
dec
rol
movsl
pop
int
ret
jl
jp
jb
loope
or
rorl
fidivrl
roll
jo
icebp
pop
mov
mov
mov
out
dec
xor
or
insb
ret
fst
jg
lock
shrb
jbe
test
jp
and
and
mov
adc
popa
bound
and
fsubs
xor
jge
mov
fcompl
jecxz
fsts
lea
stos
push
mov
dec
inc
xchg
cmp
addl
and
mov
movl
mov
mov
ret
push
inc
roll
cmpb
ret
fwait
xchg
cld
inc
sbb
add
xchg
cmp
pushf
jmp
adc
dec
bound
loope
xchg
cmc
mov
cli
push
fcmovnb
mov
xchg
cmp
cltd
push
loop
mov
test
fstps
js
shr
aas
or
mov
in
inc
addb
or
mov
icebp
or
lock
shll
pop
sub
bound
xlat
test
or
dec
andl
add
add
dec
push
lods
movsb
mov
pop
fistpll
inc
or
out
ss
dec
or
xchg
imul
push
or
push
push
cmp
cmpl
ficoml
mov
add
mov
popf
ret
iret
rcrl
fmull
mov
outsb
fcompl
bound
enter
jg
adc
std
inc
aaa
mov
mov
and
dec
xchg
xor
push
mov
inc
mov
cmp
sbb
leave
ljmp
push
aaa
mov
aam
xchg
addr16
lret
jge
nop
mov
xchg
push
or
iret
pushf
out
push
pop
add
int3
pop
insl
mov
and
fdivrl
dec
mov
lods
lret
mov
dec
mov
lret
call
ds
jmp
jne
ret
push
ror
ficoms
add
les
fidivrl
dec
mov
andb
ss
out
and
mov
sub
jg
mov
add
mov
pop
dec
fstpl
inc
dec
pushf
mov
out
jo
arpl
xor
and
insb
push
shll
pop
sarb
sbb
pop
dec
punpcklwd
fucomp
inc
testb
add
shll
inc
mov
bound
cmp
fwait
pop
clc
add
xlat
mov
pushf
cmp
pusha
cmpsl
add
outsl
sub
pushf
cmp
int
shll
or
out
rcrl
loope
xor
lea
into
movsl
int
sbb
stos
mov
jmp
pushf
or
fidivrl
push
dec
add
adc
adc
das
pop
cmpsl
negb
push
push
pop
test
push
jp
xor
push
cs
jo
filds
cli
mov
and
jnp
cmp
jo
xchg
in
pop
lds
pop
inc
rolb
bound
cmp
adc
sub
adc
sarl
addr16
movsl
sbb
stos
lcall
sub
inc
arpl
loopne
xchg
sahf
pop
xor
jp
add
push
dec
mov
repnz
aad
pop
loopne
or
mov
lahf
enter
aas
rcll
sbb
or
dec
pusha
ja
xor
lds
fidivrl
sub
enter
lret
xor
mov
int3
jp
xchg
jmp
mov
sub
dec
adc
xchg
leave
cmp
fnsave
les
mov
ljmp
loope
ficomps
fdivr
sub
pop
sbb
sbb
pop
sbb
push
pslld
jb
and
sub
mov
subl
add
push
and
imul
adc
sahf
inc
call
cltd
xor
bswap
cmpsb
xor
outsb
movsb
scas
lret
in
jbe
fnstenv
mov
and
mov
data16
push
ss
sbb
lds
es
sbb
push
fidivrs
les
cmp
pop
call
sti
mov
arpl
fstpt
jnp
cmp
test
outsl
outsl
cmp
ret
push
dec
push
mov
push
movsl
fcom
pop
or
fisubl
shll
inc
sbb
xchg
dec
xchg
inc
fists
cs
add
in
mov
cwtl
push
pusha
push
bndldx
sub
mov
add
dec
cmp
out
cmpsl
js
adc
hlt
int
sbb
fs
ljmp
fldenv
dec
out
xchg
mov
pusha
adc
pop
lret
call
out
dec
fs
sub
lods
stc
mov
push
sbb
icebp
imul
and
adcl
stos
xchg
scas
xchg
mov
test
cmp
mov
dec
mov
inc
nop
dec
sub
mov
push
iret
hlt
xchg
int
insl
scas
gs
inc
idiv
pushf
lret
cltd
lret
jmp
lret
mov
dec
jge
mov
sbb
pop
pop
test
out
pop
pushf
push
pop
cli
outsl
adc
push
push
xor
xchg
fwait
sbb
pop
pop
mov
jmp
or
rorl
cmc
or
addr16
push
mov
jno
loopne
pop
cli
or
mov
inc
jg
mov
orl
jmp
bound
cmpsl
pop
popf
lock
xchg
insl
into
mov
sbb
pop
dec
lret
es
lods
shlb
sub
testb
int3
lret
jno
iret
and
testb
test
mulb
mov
cmp
mov
adc
jno
mov
fldl
in
outsb
fwait
xchg
lods
jp
shl
add
jge
sbb
xchg
mov
mov
cmp
icebp
shrb
jno
adc
into
popf
xchg
dec
push
stos
in
loope
ror
gs
rolb
aaa
xchg
ja
add
xor
inc
pop
stos
scas
push
sub
in
test
js
xchg
push
out
test
mov
out
xchg
mov
cmp
add
cmpsl
mov
jb
push
add
lret
jp
cmpsb
mov
sub
push
inc
das
icebp
sub
push
outsl
sub
fcmovnb
clc
rorb
sub
je
cmc
dec
mov
or
mov
or
lret
mov
arpl
mov
xorl
xor
jg
gs
and
cltd
inc
mov
and
mov
pop
repnz
xchg
out
add
das
xor
pop
repnz
lcall
add
aam
fyl2xp1
jle
adc
imul
jl
ljmp
rorb
cmp
clc
jecxz
bound
inc
or
je
ficoms
roll
sub
mov
mov
cmp
adc
cld
test
and
mov
je
jge
xlat
das
cs
jae
or
mov
out
stos
std
inc
testl
gs
jmp
scas
xchg
jbe
jo
sbb
lods
rcll
cmp
insb
xchg
push
jge
xlat
push
add
add
fcomip
mov
idiv
push
test
arpl
inc
testl
xor
test
or
fucompp
mov
aad
cwtl
adc
xor
cmpsb
mov
mov
repnz
shl
pop
scas
or
lret
cld
arpl
lods
iret
jle
xor
push
jo
cmp
adc
adc
clc
pop
lea
test
add
subb
in
cmp
or
jns
mov
push
outsl
and
sub
stos
ret
xlat
cwtl
adc
mov
and
stc
jmp
mov
pop
xor
mov
sub
sbb
repnz
add
sub
sbb
or
xchg
cld
jecxz
push
pop
mov
jae
dec
clc
pop
lea
data16
mov
or
lods
mov
pop
cmp
idivl
pop
and
das
or
out
mov
xchg
loop
imul
leave
int3
cmp
pop
cmp
and
push
dec
cld
in
xor
jmp
sbb
arpl
testb
daa
push
jno
dec
pop
xchg
in
pop
mov
mov
cltd
nop
cmpsb
sarb
xor
sbb
shl
fisttpl
loopne
jns
xchg
jnp
cmp
mov
pop
fs
pop
cmpsb
andl
inc
bound
pop
movsb
movsl
scas
xchg
mov
mov
mov
jno
dec
repnz
movsb
pop
or
mull
mov
int3
pop
es
push
jne
cli
jbe
add
xor
test
movsb
pop
pop
ja
clc
cmp
faddp
stos
xor
push
adc
jno
enter
xor
push
dec
aas
daa
xchg
xchg
repz
cmpsl
gs
xchg
test
std
mov
sbbl
dec
cmp
mov
mov
fldl2t
dec
in
jno
in
mov
outsb
test
pop
jno
cli
ret
or
push
mov
adc
mov
xcrypt-ctr
cmpsl
pop
loope
setge
mov
negl
inc
mov
pop
dec
mov
in
sbb
jge
icebp
nop
pop
add
nop
mov
dec
and
sbb
addl
cmp
and
shll
add
arpl
xor
cwtl
cs
data16
sbb
pop
mov
filds
pop
insb
mov
outsl
ss
test
sbb
ret
mov
movsl
ljmp
aam
jle
aas
jg
je
dec
jnp
jae
aas
incl
cmpsl
lds
cmpl
fldenv
pop
icebp
aaa
bound
jg
icebp
pop
pop
inc
mov
fmull
das
ja
fdivrp
mov
stos
mov
xchg
add
stos
sub
add
xor
mov
cwtl
mov
arpl
and
js
out
stos
sub
call
aas
mov
xorb
int
sub
inc
jne
leave
mov
orb
xor
mov
pop
sbb
gs
add
mov
and
push
cld
xchg
pop
insl
ja
pop
test
icebp
es
pop
sbb
jae
fimull
and
cwtl
xor
fistps
pop
push
mov
popa
mov
and
mov
test
outsl
hlt
lcall
stos
imul
push
outsl
xor
pusha
xchg
out
shll
xchg
jns
push
repz
xchg
ret
lods
adc
shlb
mov
mov
push
cs
push
inc
push
jle
mov
arpl
cmpsl
xor
je
push
repz
ja
sarb
lock
fcompp
push
sub
stos
sbb
jae
xlat
roll
fmul
sbb
lahf
jge
stc
ffree
je
leave
cwtl
jge
jmp
xchg
fcoms
mov
jns
push
mov
pop
movsl
adc
mov
pop
pop
push
inc
sbb
or
add
mov
stos
dec
cmc
mov
mov
mov
adc
std
int3
pop
sar
sub
sub
dec
xchg
daa
rcr
pop
mov
icebp
rcrl
inc
nop
or
xchg
imul
ss
mov
cld
jnp
loop
dec
fucompp
pop
fcomps
test
inc
jg
lods
arpl
push
xor
jg
rclb
arpl
xor
pop
stos
cmpsl
sub
push
jno
sub
push
xchg
push
add
jmp
lret
cmp
stos
sbb
cwtl
cmp
in
movsl
repz
inc
push
out
frstor
dec
repz
call
aaa
sbb
xlat
inc
fsubl
rorb
aaa
push
mov
mov
xchg
into
pop
scas
lods
lcall
or
or
into
jb
fwait
mov
loopne
mov
popf
cmp
jp
imulb
pop
insl
sub
jp
jg
jp
add
shl
pop
fs
fisubrs
dec
out
jmp
aaa
shlb
cmp
scas
ret
popf
sub
xor
xor
call
xchg
inc
add
ss
mov
fdivs
fwait
mov
and
xchg
fwait
cmp
pop
aaa
or
stc
dec
add
add
sub
jmp
ret
jae
or
adc
ja
or
mov
arpl
mov
adc
mov
stc
movsl
adcl
pusha
bound
cmp
xchg
pusha
into
arpl
mov
imul
je
out
loopne
sub
sub
mov
aas
aad
insl
lahf
adc
adc
sarl
xor
lds
push
and
popa
jmp
cmpsl
mov
loopne
fdivp
adc
adc
adc
sub
or
cmp
push
dec
test
or
push
fildl
int3
jle
xchg
addb
lret
push
into
pusha
loop
add
xor
xor
ret
lods
xchg
or
ss
stc
lcall
mov
loope
push
outsl
add
add
fwait
divb
push
push
jbe
xchg
cltd
out
sarb
es
jnp
sbb
adc
std
push
out
pop
iret
lods
mov
popf
ljmp
fadds
jg
sbb
cs
and
mov
dec
push
lods
sub
push
or
sbb
dec
xchg
insl
daa
push
jae
out
fsubrl
sahf
or
jmp
jo
fmuls
in
lahf
or
sub
and
outsl
mov
and
sub
outsb
popf
add
enter
adc
ret
clc
cld
scas
push
gs
dec
sbb
sbb
xor
push
insl
add
dec
mov
add
sub
mov
mov
gs
pop
jmp
cmpsb
mov
jl
adc
push
inc
adc
or
adcb
in
or
pop
xor
xchg
hlt
add
pop
xchg
cmp
inc
mov
and
out
inc
mov
jp
aas
mov
jmp
out
scas
pop
ljmp
mov
xor
dec
push
push
adc
pop
fistpll
test
lahf
gs
xchg
test
ds
sbb
adc
aaa
pusha
std
xchg
cmp
xlat
mov
mov
out
sbb
fdivs
test
addr16
mov
enter
jmp
or
popf
ret
push
cmc
enter
xchg
xchg
push
or
sbb
pop
insl
pop
loope
mov
push
jecxz
lds
mov
rorb
mov
push
andl
loopne
insl
daa
pmaxsw
fwait
xor
mov
and
shrb
js
jb
shrl
push
dec
sbb
insl
jbe
push
fcoml
daa
sub
and
in
sar
mov
inc
xor
inc
repz
int3
jnp
or
xchg
das
in
mov
dec
jg
fs
and
dec
mov
mov
add
xchg
dec
cmp
test
loop
orb
gs
mov
pop
imul
sub
inc
or
pushf
push
cli
jge
mov
sub
dec
jnp
cltd
xchg
push
es
icebp
loop
ret
and
xchg
xchg
aas
in
ret
and
add
jge
and
movsl
fisttpl
jns
nop
movsb
jl
xchg
sbb
fisubl
adc
push
jbe
test
and
lods
data16
cltd
sbb
or
cmp
test
jl
subl
pop
imul
xor
dec
cmpsb
out
dec
push
popf
addr16
iret
and
fmul
sbb
imul
ds
aas
repnz
xor
jo
xchg
in
cmp
lea
jmp
repz
jge
xor
jl
mov
out
lods
xchg
and
inc
stc
cmp
push
xor
mov
mov
mul
push
test
push
cmp
out
jle
sbb
sub
cltd
cmp
add
clc
pop
lahf
ret
scas
cmp
inc
xchg
mov
mov
out
mov
aas
in
dec
dec
daa
arpl
and
sbb
or
jns
or
push
aaa
sub
and
outsl
jbe
mov
sub
pusha
mov
test
push
test
xchg
hlt
mov
leave
mov
xlat
outsb
scas
out
pop
outsl
jns
xlat
outsb
mov
pop
faddl
pop
filds
movsb
mov
jg
inc
mov
xchg
ja
cmp
adc
shlb
inc
push
adc
ret
inc
sti
xchg
push
aaa
sub
jo
fidivrl
adc
ds
xor
data16
cmp
inc
testl
outsb
gs
mov
xchg
out
push
outsb
imulb
adc
mov
adc
bound
in
xchg
daa
pop
push
cmpl
aad
outsb
ss
mov
mov
cmpb
mov
in
aaa
sub
mov
or
lret
xlat
dec
fsubrl
into
ret
repz
movsl
jb
lods
sub
sub
mov
cld
or
leave
std
cs
mov
cld
push
sub
fwait
push
push
dec
and
push
lods
imul
rclb
adc
pop
dec
scas
add
jno
push
push
lcall
lret
stc
sub
fcom
xchg
mov
xchg
arpl
sti
add
mov
stc
sub
jmp
mov
mov
aad
xor
in
sub
pop
mov
sub
sbb
jns
or
mov
xor
divb
fcomi
sbb
ss
sub
ffree
insl
daa
out
add
pop
rorb
negb
mov
sub
aaa
sub
sub
xor
sbb
pop
mov
test
push
fmuls
cwtl
jge
sub
mov
jno
bound
or
mov
into
popa
popa
cmpsl
push
outsb
daa
inc
xchg
leave
imul
iret
imul
stc
sub
adc
cmp
push
jo
test
int
test
mov
adc
mov
stos
xchg
sbb
and
sbb
enter
ret
repz
test
push
repnz
sbb
in
bound
fistpl
add
clc
repnz
or
jp
rcrb
ret
leave
outsl
dec
lds
xor
jae
stc
adc
mov
insl
sub
inc
ret
clts
cmp
mov
sbb
in
mov
inc
xchg
sbb
jns
cs
or
cli
fstp
insl
push
xchg
adc
outsl
cmp
mov
clc
push
cmovo
mov
dec
js
mov
cltd
inc
fimull
cmpsb
jecxz
or
es
cli
aam
lods
dec
daa
xor
fdivr
sbb
outsb
rcl
call
push
sbb
jno
inc
sbb
int
test
incb
call
ds
add
xchg
cmp
leave
jae
and
enter
jmp
cmp
fstps
sub
bound
jmp
and
out
cmp
push
xor
push
adc
and
outsb
jle
movb
or
add
insl
sbb
loop,pt
mov
icebp
daa
outsb
sbb
popf
aaa
mov
rcll
sub
add
sbb
jb
sbb
inc
xor
pop
cmp
mov
loopne
out
lea
inc
lret
mov
jge
ror
push
addr16
int
dec
call
push
mov
aas
cmp
mov
test
xor
sbb
sar
movsl
lret
in
dec
mov
out
dec
push
xor
std
nop
push
push
mov
fwait
dec
test
loopne
adc
pop
and
push
data16
shlb
dec
cmpsb
pop
data16
notb
push
add
mov
xor
sbb
xchg
push
mov
inc
pop
dec
inc
cmp
jbe
gs
cs
xor
lods
xor
pop
or
cs
add
aam
cli
xor
push
mov
push
jmp
aaa
loope
sbb
roll
sub
inc
mov
or
mov
flds
sbb
out
or
mov
push
cmc
inc
movsl
mov
cwtl
xchg
mov
xchg
in
mov
mov
imulb
insb
mov
xchg
movsb
cld
adc
inc
or
push
ret
or
xor
cmpb
cmp
mov
cmpsl
mov
repnz
cmpsl
rorb
adc
sbb
mov
dec
jmp
fildll
push
xchg
fimuls
xor
inc
js
outsb
scas
sbb
cmp
mov
sbb
xor
dec
dec
cmc
mov
loopne
or
mov
sbb
xor
adc
xchg
aaa
sbb
data16
imul
sub
ficoml
mov
cmp
mov
dec
mov
les
push
mov
mov
repz
imul
or
out
xor
cmp
faddp
and
pop
xchg
outsb
out
push
sub
shr
inc
or
int
sar
faddl
test
lea
push
cmpl
jbe
jmp
fincstp
out
fimull
cmp
dec
cmp
pop
test
data16
test
jnp
insl
sahf
inc
jp
mov
test
iret
and
adc
shrl
mov
mov
ret
push
scas
mov
mov
stc
outsb
int3
or
out
hlt
jp
jl
dec
cmpsl
add
sti
out
or
lcallw
sub
mov
dec
push
out
jnp
icebp
shl
mov
mov
mov
sbb
clc
mov
nop
jge
xor
and
mov
xlat
lahf
mov
sbb
test
test
xorl
add
scas
push
xor
dec
cs
jns
push
mov
and
add
add
in
mov
out
scas
pop
dec
andb
mov
repnz
pop
mov
push
dec
cld
adc
pusha
ds
outsb
les
popa
in
test
in
adc
adc
pop
in
sbb
dec
push
mov
jns
mov
fdivl
xchg
imul
mov
and
bndstx
fucomip
loope
cmp
int3
dec
imul
movsb
dec
out
fstl
aas
stos
lock
add
pop
loopne
xchg
jle
cli
addb
push
cmp
fbld
jecxz
mov
jo
sbb
and
adc
in
or
arpl
imul
or
shl
mov
out
rcrb
or
decb
loopne
outsb
cmp
iret
xor
mov
jg
push
jmp
inc
mov
push
sbb
sbb
mov
jb
out
xchg
lahf
xchg
das
pop
aad
rorl
sbb
inc
jmp
aaa
add
and
aam
into
pop
addb
int
add
adc
or
repz
xchg
jmp
sbb
ficomps
lret
mov
mov
mov
rcrb
cmc
sub
push
mov
out
inc
dec
insb
popa
ret
vpshlq
mov
add
lret
imul
mov
mov
mov
sarl
outsb
pushf
jmp
ds
gs
outsb
or
mov
das
jae
sbb
sub
xor
sub
mov
mov
mov
test
sub
add
fnsave
push
jnp,pt
jmp
ret
cld
out
mov
mov
fstp
cmp
pop
daa
sbb
cmp
cmp
repz
pop
jae
inc
mov
lods
mov
mov
cmp
and
xchg
sbb
cmpsl
ds
int
push
xor
arpl
mov
cmpsl
jge
and
dec
repz
imul
fildl
das
out
mov
jae
adc
sahf
push
cmp
mov
aaa
dec
mov
cmp
out
iret
adc
or
mov
mov
aam
xchg
bound
orl
xor
adc
sarb
lret
lcall
scas
cld
cmpsl
mov
jb
mov
add
inc
in
inc
out
subb
arpl
mov
test
iret
pop
pop
sub
xchg
sbb
enter
xor
cmp
add
sbb
out
dec
add
rorb
fmul
pop
cmc
adc
cli
loopne
jmp
mov
stc
nop
dec
lcall
incb
adc
aam
mov
push
mov
cwtl
idivl
arpl
push
xchg
loop
and
dec
add
popa
and
mov
add
inc
rcrl
and
lea
pop
gs
movsb
movsl
mov
cli
mov
std
mov
cmp
push
sarb
sub
sbb
mov
adc
lock
mov
or
jge
mov
mov
stos
cmp
cmp
jno
cltd
pop
xchg
sbb
and
out
lea
leave
mov
aad
push
mov
arpl
push
jns
pushf
inc
lds
cmc
stos
sti
xor
xchg
inc
mov
hlt
fidivrs
lods
mov
jns
dec
mov
aas
xor
inc
sub
xchg
push
and
pop
pop
push
dec
jg
popf
loope
clc
popa
test
cmpsl
lahf
inc
int
mov
mov
test
lahf
stc
xchg
mov
cmp
dec
push
mov
icebp
cwtl
loop
mov
inc
or
sbb
fdivp
xchg
mov
sbb
shrl
icebp
arpl
out
jne
add
shll
mov
jnp
push
sbb
and
mov
les
fwait
xorb
pop
out
cmp
mov
sti
stc
insl
lods
sbb
ljmp
pop
cmpsb
or
adc
mov
or
inc
or
jae
imul
dec
in
add
sbb
insl
mov
or
outsb
and
outsb
xor
sbb
cltd
js
sub
arpl
sub
mov
enter
xchg
sar
test
sub
je
push
mov
mov
push
mov
mov
cld
cmc
int
ficoml
mov
pop
cmc
mov
outsl
cmp
xor
mov
in
sub
add
orb
pop
mov
and
add
iret
das
mov
hlt
jl
adc
xchg
aad
inc
sub
iret
movsl
jno
cwtl
jb
addr16
out
or
push
std
leave
push
bound
push
pop
and
leave
out
lock
mov
lods
sub
jg
imul
mov
pop
lods
sub
push
pop
enter
test
jmp
arpl
addl
pop
push
mov
add
jo
nop
dec
pop
popa
add
pop
lods
ds
mov
and
mov
xchg
jge
sbb
xchg
test
adc
xchg
inc
cmp
pushf
cmovl
test
adc
xor
mov
sahf
add
fwait
dec
xchg
sarl
mov
mov
adc
sbb
outsb
adc
insl
pusha
loope
adc
test
lds
pop
cmpsb
push
data16
dec
sub
sub
call
les
jge
mov
lret
push
mov
aad
sub
into
fildll
mov
je
pop
loopne
inc
arpl
cmc
sbb
pop
pop
ret
sub
dec
std
pop
iret
pop
push
pop
in
fs
es
push
xchg
rclb
push
nop
mov
pop
shrl
js
add
dec
jmp
adc
xchg
test
in
mov
sarl
pop
inc
adc
imul
push
jmp
mull
sbb
pop
repnz
jae
lahf
mov
cmpsb
xlat
addr16
aas
xchg
mov
clc
outsb
movsb
adc
jge
shll
popf
dec
imul
outsl
adc
mov
cltd
dec
mov
stos
mov
mov
inc
mov
jl
hlt
jno
inc
adc
popf
mov
mov
lea
pop
sub
cmp
lahf
test
lods
dec
mov
aas
in
lret
pop
es
sahf
push
cmp
ret
ljmp
in
aaa
mov
cmp
lret
jae
fsubr
fcomps
mov
lcall
pop
inc
xchg
ds
lods
lods
test
cmp
mov
sbb
sbb
ss
insl
arpl
lret
sbb
ss
add
fadds
cmp
out
adc
lret
push
pushl
cmp
jmp
subps
mov
lret
mov
repz
pushl
push
cmp
daa
loope
fcoml
jg
sbb
pushl
cmpxchg
cmc
inc
stos
sub
pop
adc
test
sar
insb
and
pushl
outsl
adc
aam
subb
pop
loope
shr
mov
enter
xchg
add
xchg
cmp
lods
int3
loopne
clc
lret
mov
bound
sahf
and
movsb
jns
xchg
les
sbb
sbb
push
sub
gs
and
jecxz
mov
xchg
push
sbb
cli
add
xor
jb
sti
dec
sub
or
in
mov
mov
inc
shl
sbb
push
das
jae
call
xor
in
mov
sub
sbbb
jns
pop
insb
aaa
mov
mov
pop
inc
leave
sub
mov
jnp
inc
push
cs
pop
bnd
test
xor
mov
mov
cmpsl
lods
iret
push
pop
clc
push
xchg
or
ja
mov
or
lcall
outsl
fwait
setnp
movsl
jae
dec
lret
push
cltd
jge
leave
lods
fcoms
jge
ja
xlat
inc
cmp
lods
or
sub
mov
outsb
flds
jmp
gs
int
jecxz
mov
outsb
imul
aam
push
jge
in
cmp
fsubp
pop
jg
pop
mov
fs
or
ret
pop
xor
inc
dec
movsb
arpl
test
jge
mov
fcoms
lahf
mov
xor
repnz
jae
push
add
int3
pop
lds
cmpsl
mov
fwait
scas
push
jle
shrb
dec
pop
mov
adc
lcall
lcall
adc
js
cmpsb
divl
sub
int
xchg
push
lcall
lahf
push
xchg
int3
xor
lahf
pop
mov
scas
mov
inc
cmc
push
add
cld
xchg
mov
scas
adc
iret
popf
bound
push
out
sbb
mov
push
dec
call
roll
fildl
xchg
cmc
out
inc
sbbb
subl
ret
and
loope
icebp
leave
lock
arpl
out
and
shll
add
xor
pop
and
xchg
imulb
enter
dec
mov
xchg
icebp
sbb
nop
ljmp
fcomps
loop
dec
push
jg
pop
sbb
inc
cmc
dec
and
or
clc
sti
xor
fdivrl
popa
push
pop
mov
popa
out
aaa
ljmp
or
orl
cs
sbb
cltd
or
std
jle
and
pop
sbbb
adc
xchg
and
cmp
mov
xchg
imul
lahf
or
sbb
cmp
sbb
scas
jp
pop
fs
xlat
cmp
sub
loopne
call
cmpsb
inc
sub
scas
xchg
push
mov
enter
sub
les
mov
scas
fsubl
jge
jmp
cmp
mov
xor
out
cmc
loop
jecxz
pop
mov
mov
js
insb
sub
mov
arpl
cmp
mov
cmp
push
jnp
xchg
mov
sub
mov
xchg
xor
inc
mov
sub
adc
mov
or
jns
mov
movsb
mov
ficompl
sbb
mov
ja
les
add
cmp
hlt
inc
enter
imul
inc
push
xchg
lock
jbe
stc
sbb
mov
xor
fdiv
test
inc
mov
icebp
enter
mov
mov
xor
cmc
mov
out
mov
or
loopne
cltd
sub
inc
adc
or
leave
movb
shll
out
or
add
mov
adc
fisttpll
xor
leave
popf
mov
das
out
add
pop
add
cmovno
lods
xor
lret
out
adc
arpl
mov
hlt
jecxz
adc
stc
inc
xchg
dec
fcomps
mov
out
push
orl
xor
cmp
inc
xchg
pop
stos
les
repz
lock
adc
pop
shlb
push
mov
subb
adc
pop
ret
jecxz
loopne
fisubl
data16
mov
xchg
iret
sub
jmp
adc
sub
cli
or
and
dec
push
mov
cli
jno
pop
rcll
or
jns
mov
add
rcrb
rorl
xor
rorl
es
xorl
imul
jnp
rcrl
sub
fwait
icebp
lock
sti
xor
pop
sbb
lds
clc
inc
pop
ljmp
adc
or
sbb
aas
std
jo
scas
inc
ljmp
std
mov
add
fildl
sbb
in
fsubl
mov
insb
popf
ret
mov
ja
jb
sub
pusha
mov
jle
or
adc
fyl2x
pop
add
pop
into
ffreep
mov
mov
popf
mov
mov
in
fldt
lock
mov
xchg
and
jg
or
js
out
pop
retw
mov
jle
rorb
sub
cmp
aas
adc
mov
sub
sbb
repnz
xchg
xchg
adc
inc
push
stos
clc
pop
mulb
dec
push
pop
lods
mov
out
pop
xor
xchg
ss
les
add
in
rolb
mov
dec
push
les
insl
incl
xchg
mov
andl
adc
pop
push
repz
xchg
xor
in
xchg
adc
test
lcall
sub
push
jb
or
ret
shlb
jb
xchg
fs
or
sub
movsb
dec
xchg
or
negb
int
sub
in
sbb
push
fs
in
loopne
pop
rcrl
pusha
xchg
int3
popa
lahf
sbbl
pop
inc
add
cmpsb
mov
add
ljmp
jnp
mov
rorl
outsl
pop
lcall
stos
sahf
popl
mov
clc
jmp
cmp
adc
mov
push
mov
test
or
insl
icebp
xor
pop
mov
xchg
fcomps
xlat
ret
mov
pop
sbb
mov
xor
stos
jp
jp
xchg
jae
lock
sbb
xchg
sbb
xchg
jmp
test
fiaddl
lahf
lods
xchg
sbb
sbb
fs
mov
adc
jp
sbb
bound
xchg
xchg
sbb
xchg
xchg
sbb
xchg
xchg
sbb
adc
pop
sub
adc
pop
shll
inc
hlt
push
mov
cmp
in
dec
inc
lcall
dec
rorl
sub
xchg
mov
pop
inc
mov
sub
leave
cmc
lods
mov
push
iret
cwtl
cli
subl
jbe
lret
test
lahf
lock
cmpsb
push
mov
es
push
inc
adc
cli
jnp
stos
mov
fnstcw
in
or
scas
jo
rcpps
sub
sahf
mov
xor
jnp
pop
sahf
inc
outsb
cmp
adc
inc
aas
xchg
lods
scas
ret
cmp
rorl
xchg
ffreep
sub
arpl
inc
outsb
xchg
pop
pop
or
mov
stos
dec
js
pushf
cli
movsb
scas
lods
addr16
jne
pop
xchg
inc
setp
scas
sbb
pop
test
cld
dec
xor
push
add
push
sub
inc
and
outsb
dec
je
in
mov
inc
dec
fistps
or
fwait
das
pmaxsw
mov
mov
dec
loopne
scas
cmp
jns
add
pushf
xor
push
lea
cs
cld
je
pop
xchg
jl
mov
stos
lahf
add
fcomps
push
lds
jp
lods
cmpsb
push
lcall
stos
sub
in
add
xlat
pop
shl
xor
aaa
mov
jecxz
sti
lcall
pop
inc
in
imul
aaa
stos
pop
inc
test
pop
jb
cmp
adc
inc
inc
dec
pushf
jno,pn
pop
pop
inc
mov
jl
xor
mov
add
into
lods
push
inc
loopne
out
fisubrl
enter
out
aas
mov
push
mov
jnp
push
jb
dec
push
push
jg
test
lds
mov
fidivl
nop
mov
cmp
pusha
fmull
rorb
aaa
outsl
scas
mov
cli
push
adc
dec
sarl
out
jge
gs
adc
jne
sbb
jg
idivb
scas
and
les
push
fwait
cld
mov
bound
pop
mov
and
arpl
test
loop
jbe
sbb
push
dec
jne
adc
mov
push
inc
loopne
hlt
or
sbb
shll
xor
dec
mov
ljmp
cmpsl
jecxz
and
push
mov
je,pn
mov
and
xor
popf
pop
inc
cmp
sbb
in
or
dec
loopne
test
insl
lods
push
in
add
aad
repz
cmp
test
enter
jae
testl
imul
pushf
dec
jne
add
adc
cld
imul
sbb
sub
jbe
xlat
push
xchg
add
inc
aad
xchg
movsl
push
push
xchg
rcrl
popf
testl
push
add
or
rcrl
push
add
addr16
pop
mov
mov
adc
jbe
and
lods
sub
aam
cli
jmp
cmp
pop
sub
or
push
xor
cmp
and
sbb
mov
jge
leave
cmp
cmp
lret
out
outsl
mov
xchg
or
outsl
ds
repnz
push
mov
aas
xchg
and
rcrl
pop
shll
xor
mov
in
mov
repz
fmull
clc
cmp
out
ficoms
inc
pop
ja
dec
jp
or
outsb
call
out
rorl
cld
sub
and
add
ret
sbb
sub
or
pop
movsl
inc
mov
mov
bound
dec
cmpsb
push
mov
lock
ja
jns
dec
sub
push
ljmp
ds
mov
jl
fsubr
and
or
adc
xchg
in
lds
daa
ja
xchg
lds
xor
enter
inc
bswap
pop
std
jle
cld
dec
frstor
icebp
or
into
jnp
mov
mov
mov
sub
scas
mov
push
leave
xchg
movsl
and
add
das
mov
jnp
xlat
test
cltd
or
cli
das
mov
lcall
aad
mov
cmpsl
add
mov
movsl
inc
repz
cmpsl
in
sbb
notb
cli
ljmp
cs
inc
mov
les
mov
les
push
scas
repnz
arpl
sbb
lods
adc
cs
add
push
mov
and
out
into
or
xchg
xor
loop
arpl
xor
and
push
test
mov
jb
ror
fistpl
test
shr
pop
in
fmull
nop
ss
comiss
pushf
icebp
pop
ds
dec
rcll
push
cmovns
pop
and
and
mov
push
loop
adc
data16
jmp
aam
push
movsl
xchg
fcomip
stos
or
lret
push
ret
push
lods
mov
lret
add
mov
add
hlt
jp
mov
sar
and
xchg
jecxz
test
scas
mov
cltd
adc
ficoml
fnsave
push
mov
push
jl
scas
mov
iret
xchg
ret
jp
imul
cs
xor
iret
xchg
sbb
mov
xchg
outsb
ret
dec
mov
jne
notb
xchg
les
lret
inc
xor
aam
arpl
adc
xchg
xchg
mov
dec
pop
or
dec
mov
mov
sub
mov
mov
negl
les
in
add
push
out
adc
add
ds
addr16
enter
mov
xchg
movsl
inc
ljmp
xor
mov
push
mov
xor
sarb
dec
das
mov
pop
fs
push
mov
xor
mov
jecxz
cmpsl
inc
inc
mov
push
ficompl
sar
push
mov
sbb
call
and
iret
aaa
mov
xchg
call
ds
push
or
adc
sbb
sub
inc
push
es
ljmp
enter
outsb
popa
sub
std
xor
fsubrp
jb
xor
int3
push
and
loope
xor
xchg
pop
gs
jo
push
cmp
jle
mov
inc
into
je
int3
or
push
mov
xchg
or
mov
ds
out
mov
adc
pop
fadd
mov
inc
xor
jns
mov
add
adc
imul
sub
gs
xor
ret
sbb
xchg
add
xor
mov
pop
push
add
cli
sahf
into
jge
jecxz
in
cmp
movsl
add
cmp
dec
daa
cmp
imul
mov
scas
popf
mov
adc
push
loop
jae
pop
push
fbld
imull
mov
mov
mov
xchg
loopne
jno
jg
in
lock
out
cmp
adc
pop
das
adc
mov
inc
jns
fs
nop
push
sub
fistpll
sbb
fcomps
or
cwtl
sbb
push
pop
shlb
fxch
push
rol
addr16
imul
cmp
lds
pcmpeqw
out
ja
repnz
js
out
jno
out
cwtl
mov
and
ds
inc
jns
mov
mov
push
lods
jb
scas
in
push
sbb
push
stc
mov
fistps
inc
push
xlat
adc
cmp
pop
daa
lcall
cltd
mov
xchg
fdivrl
fidivrl
or
lds
add
add
aam
xchg
pushf
ror
add
mov
mov
lret
pop
icebp
push
incl
cmp
mov
in
popf
lcall
int3
out
imul
sbb
les
cmp
sbb
hlt
jle
mov
std
push
popl
and
mov
pop
inc
int
dec
scas
sub
das
jno
loop
adc
ss
popf
pop
inc
cltd
icebp
aad
js
stc
push
mov
and
push
sti
adc
test
rcll
in
jle
pop
insb
stos
mov
pop
pop
and
popa
stc
jnp
and
inc
xchg
inc
add
cmpsb
push
int
js
pop
loope
cmc
sub
mov
mov
xchg
repnz
call
test
ljmp
xlat
es
and
pop
ss
int
push
loopne
sub
inc
insb
fadd
jp
push
faddl
add
lahf
mov
push
aad
repnz
mov
pop
xor
push
cmp
cwtl
dec
std
movsl
inc
pop
xchg
cmp
jle
aas
push
and
jecxz
xchg
inc
sbb
xchg
popa
pop
mov
jle
daa
add
inc
push
jo
xchg
push
push
fsts
pop
dec
popf
fistpll
cmpsl
xchg
daa
and
add
mov
xlat
jl
test
fisttps
ja
push
push
jle
xchg
sbb
cmpb
add
push
add
movsb
ja
cmc
daa
mov
popa
mov
addl
shll
mov
and
enter
data16
loope
sub
mov
das
jle
cmp
ret
shrb
xchg
int
pushf
adc
mov
push
mov
xorl
out
xchg
inc
test
sub
xlat
adc
xor
fisttps
jg
pop
sub
mov
fldcw
push
sbb
pusha
and
adc
lcallw
and
xchg
sbb
inc
mov
jge
cmp
dec
test
push
mov
mov
or
inc
stos
out
or
mov
popf
shrl
or
cmpsb
sahf
push
xor
and
push
adc
ss
ret
daa
cwtl
dec
add
sub
push
faddl
cli
lcall
and
push
pop
and
sahf
dec
mov
sbb
aas
mov
sub
insb
jl
stos
and
dec
ljmp
repnz
out
push
fistl
cmp
popf
mov
sub
pop
lods
and
pop
mov
mov
and
xor
sbb
or
aaa
stos
mov
jp
sub
and
and
nop
loope
dec
loopne
int3
subl
negl
orl
mov
cld
dec
loopne
add
xor
pop
push
mov
mov
in
call
mov
and
dec
add
js,pn
push
jg
ss
jl
pop
cmp
ret
cmpsl
add
mov
into
xchg
mov
lea
or
ss
push
andb
jo
cli
push
pop
cli
lahf
xor
or
add
add
fwait
mov
pushf
test
movsb
and
rclb
outsl
mov
rolb
dec
imul
xchg
gs
and
or
mov
inc
push
inc
insb
dec
push
mov
push
roll
fstp
call
jne
daa
push
fbstp
add
clc
inc
mov
pop
cli
or
xor
pop
lcall
mov
shrl
or
shrb
fbstp
dec
lock
insb
arpl
push
imul
fwait
add
ficomps
imul
push
loopne
stc
xor
insl
pop
lcall
inc
mov
cmpsl
sub
pop
cld
call
cwtl
inc
sbb
mov
inc
add
push
scas
in
cmp
inc
iret
data16
int3
lret
or
lods
je
push
aam
cli
fwait
loope
out
ds
lea
bound
in
sbb
dec
loop
mov
int
add
daa
cld
xchg
test
xor
leave
insb
cmp
dec
shrb
or
pop
push
push
mov
int3
lret
rcl
mov
pushl
arpl
mov
xchg
testl
push
sti
jp
mov
dec
ret
pop
js
mov
mov
test
rolb
loopne
sub
ret
insb
outsl
and
les
sub
arpl
test
cs
jg
push
and
add
out
mov
lods
inc
push
idiv
add
push
sahf
adc
xchg
movsl
imul
mov
or
movsb
push
inc
push
rcrl
and
loopne
dec
mov
mov
jge
js
and
dec
push
inc
push
mov
imul
adc
inc
sbb
mul
xchg
push
xor
adc
cmpsb
sahf
xor
mov
aad
out
fdivrl
pop
cli
or
das
jae
js
xor
cmp
mov
cltd
hlt
inc
dec
fwait
js
lgs
movsb
rcrb
shr
lret
adc
pop
addr16
int
sahf
es
pop
lahf
aas
xchg
ficomps
sahf
stos
adc
cmpsb
fists
xor
mov
fdivrp
test
jge
movsb
mov
add
pop
call
sub
push
rorb
loop
add
repz
rcrb
add
adc
xlat
push
ret
lods
cld
pop
cmp
mov
lock
xor
xchg
xchg
addl
das
lahf
fisttpl
and
ret
imul
cmpsb
imul
out
xchg
popa
and
icebp
mov
loope
adc
push
mov
push
cld
popf
roll
pop
push
cmp
fldl
imul
push
out
in
cmp
jb
in
scas
and
out
lods
iret
adc
jnp
aad
push
cs
out
push
mov
movsl
mov
incl
push
xlat
in
test
or
adc
test
jno
mov
popa
stc
popa
xchg
xchg
xor
cmp
aam
cmpb
xor
sbb
dec
add
cmp
dec
and
xchg
cmp
push
cmp
mov
ret
aad
inc
adc
ljmp
out
das
shlb
mov
xchg
xlat
jnp
cmc
jg
mov
dec
jg
sub
jmp
ret
sti
lock
lock
sahf
pop
mov
ljmp
sbb
jle
sbb
sbb
sti
mov
fdivl
or
add
jp
out
and
mov
xor
jge
insl
in
xor
repnz
pop
add
pop
pop
mov
fbstp
sbb
ret
xchg
inc
push
sbb
adc
xor
fsubl
or
xchg
iret
fisttpll
push
insl
vminps
ljmp
iret
pop
jg
ret
or
ljmp
cmp
clc
popf
inc
mov
pusha
mov
mov
dec
addr16
push
dec
daa
inc
ja
xor
pop
cmp
mov
jecxz
push
sarb
xchg
or
inc
fidivs
shll
xchg
int3
jno
out
insb
mov
imul
inc
pop
hlt
lock
int3
cmp
mov
jp
mov
push
addr16
push
aad
in
add
push
sbb
scas
out
imul
or
cmp
and
adc
sarb
out
lea
fs
jmp
mov
stos
cmp
pop
xchg
mov
mov
mov
mov
into
dec
push
out
sub
pop
outsl
popa
je
mov
dec
jnp
sbb
sub
cmpsl
jno
int
stos
sbb
bound
cld
insl
dec
cmc
in
ss
pop
inc
int
jae
xchg
shl
ljmp
sbb
and
jmp
xorb
sbb
into
gs
cmp
xchg
das
and
jge
fdiv
inc
xchg
inc
sbb
iret
add
pop
sbb
mov
shr
aas
shlb
and
adc
sti
push
jne
fsubrp
mov
inc
mov
cs
jmp
filds
xchg
mov
pop
add
adc
push
xchg
test
push
jg
cmp
push
dec
jecxz
sbb
adc
popf
push
out
add
push
es
ljmp
mov
add
mov
push
mov
divl
adc
fiadds
push
aas
dec
fnsave
js
imul
outsl
or
cwtl
enter
gs
repz
scas
scas
jge
into
add
andl
add
ljmp
cltd
push
cs
loop
add
or
push
pop
mov
scas
pop
out
pop
cmp
rorl
pop
xchg
lods
xchg
test
cmp
pop
stc
jbe
int3
call
adc
push
inc
out
dec
ljmp
and
call
cmp
into
xchg
and
fcomps
lods
or
mov
inc
mov
add
shrl
pop
pop
lds
daa
adc
xchg
bound
xor
mov
push
inc
js
fisubrs
mov
mov
ds
add
push
push
aaa
das
popa
inc
cld
adc
mov
popa
add
pop
pop
dec
dec
pusha
inc
mov
xchg
push
aas
jp
pop
dec
pusha
inc
stos
in
data16
aam
out
fwait
or
ret
je
inc
cmpb
gs
imul
rclb
add
nop
and
or
dec
add
inc
xor
jecxz
dec
add
sarl
xchg
or
data16
cltd
jbe
inc
pop
xor
filds
pop
mov
jb
xchg
andb
jl
add
push
xchg
in
lods
xchg
fdivrl
ror
lods
jmp
rcll
imul
negl
xor
lret
and
mov
xor
rcll
sbb
inc
and
push
fisttps
pop
fcoml
fwait
or
or
loope
mov
or
test
or
pop
mov
int3
popa
test
mov
pop
mov
dec
jmp
sub
pop
loope
push
push
sub
xchg
fcoml
mov
dec
fcoml
rorl
adc
bound
jg
push
jecxz
dec
pushf
es
adc
xchg
mov
adc
dec
lret
push
or
adc
cmc
mov
xor
add
dec
jb
and
mov
adc
fadd
mov
mov
jo
or
jmp
push
sbb
push
icebp
adc
out
outsb
dec
xchg
les
dec
icebp
adc
ror
jo
lock
js
inc
jle
jg
pop
inc
mov
mov
daa
inc
pushf
adc
xchg
fucomp
sahf
decb
mov
outsl
dec
test
pop
adc
jl
sbb
xorl
pop
push
pop
js
mov
lock
adc
cld
popf
pop
leave
jmp
xchg
ds
fnstenv
inc
mov
sbb
jle
bound
dec
fcmove
jle
xchg
push
push
mov
les
jg
sbbb
ljmp
lds
adc
mov
dec
scas
sub
das
jno
rorb
jle
arpl
icebp
out
xor
jno
add
mov
jle
les
out
test
add
inc
in
ja
lods
ret
add
cmc
lods
and
imul
fstpl
jle
and
out
out
nop
icebp
adc
dec
fcoms
adc
mov
bound
call
and
mov
jbe
jo
push
adc
pop
iret
push
movsl
dec
jecxz
outsb
add
jg
les
arpl
insb
in
stos
hlt
cmp
gs
sub
popf
sub
cmp
inc
mov
imul
inc
call
or
bound
test
push
fistl
push
fldenv
scas
in
lds
xchg
push
call
dec
mov
mov
sub
gs
or
pop
adc
xor
adc
inc
shrl
scas
xor
adc
mov
loopne
mov
aas
dec
mov
loopne
xchg
in
das
mov
loopne
xchg
lret
xchg
mov
mov
mov
lea
and
add
mov
out
sub
adc
cmc
shl
sbb
shll
sarl
aas
push
and
jecxz
xchg
test
mov
and
inc
mov
pop
pop
xor
imul
sahf
dec
test
test
inc
lahf
lahf
xchg
mov
push
bound
cli
inc
pop
movq
lahf
lds
lock
rolb
mull
aam
xlat
or
inc
clc
add
out
cmp
subb
fcmovb
insb
in
and
lds
popa
iret
inc
mov
ret
sbb
mov
adc
xchg
mov
insl
daa
call
aaa
rclb
inc
lahf
int
push
ljmp
adc
mov
popa
jbe
inc
and
mov
sub
push
dec
push
scas
sbb
sub
out
jo
jmp
jl
and
lret
mov
sub
add
xlat
jo
inc
pop
cmp
sbb
addr16
xchg
out
push
inc
rcl
push
test
hlt
sbb
sub
mov
jmp
sub
inc
inc
add
xor
shll
bnd
int3
or
movsl
mov
cmpsb
xlat
cmp
es
inc
cmp
bound
mov
cs
outsl
cmpsl
and
push
insl
inc
or
adc
mov
mov
dec
sub
std
divl
mov
leave
mov
pop
fisttpl
xor
mov
and
dec
xchg
sub
cmpsb
lret
mov
inc
data16
movsb
jmp
loopne
push
fnstcw
xor
daa
into
repz
mov
xchg
aas
mov
imul
je
addr16
push
pop
nop
mov
inc
fnsave
popa
idivb
rcrl
and
push
ret
mov
shll
push
mov
mov
push
dec
out
pop
stos
xorl
lret
sub
cmp
mov
nop
and
gs
cmp
ljmp
mov
lret
xor
inc
jns
cmpsl
push
inc
insb
push
cmp
jbe
adc
mov
mov
jns
mov
jo
and
fwait
xor
cwtl
pop
push
loope
pop
ljmp
push
fcomps
cli
test
jmp
inc
xor
cmpsb
adcb
movsl
ret
testb
inc
sub
cs
inc
inc
mov
dec
pop
add
mov
xchg
jae
push
insb
js
test
jae
xchg
and
jae
inc
hlt
das
push
mov
lea
lret
inc
sbb
jg
mov
push
push
inc
stos
push
mov
fisttpll
test
xorb
movsl
mov
xchg
jl
sbb
sti
leave
sbb
rcrb
xchg
adc
add
bound
popa
add
or
sbb
adc
and
je
popa
js
jno
mov
push
xlat
aas
xchg
filds
aas
jne
test
outsl
mov
and
mov
std
in
out
lds
xchg
jae
or
pop
inc
mov
and
test
mov
scas
add
sub
subb
xchg
xor
fwait
or
push
pop
cli
adc
insb
adc
xchg
adc
add
aad
xchg
movsl
pop
sbb
sub
lret
mov
scas
sbb
add
sbb
std
icebp
cli
add
or
loop
mov
mov
data16
test
inc
mov
fdivrl
inc
ds
pusha
sbb
pop
cmp
sbb
add
jnp
mov
aad
sub
mov
or
sahf
dec
jge
push
xlat
fstpt
dec
mov
repnz
ds
repnz
adc
rcrl
xchg
dec
test
rol
add
jl
movsl
btc
or
imul
lods
or
stc
sti
and
cltd
mov
test
mov
enter
inc
cmp
and
sbb
mov
stc
jb
add
daa
lock
sub
stc
cltd
data16
mov
cs
pop
faddl
mov
lock
fldl
inc
mov
cmp
mov
and
sbb
add
popf
out
bound
mov
or
js
imul
cmp
xchg
add
lret
inc
mov
mov
jge
fisubs
pop
or
fbld
push
cs
leave
daa
sbbl
test
lret
xor
mov
lcall
fdivrs
sbb
sub
icebp
imul
mov
mov
pop
fistpll
mov
dec
jecxz
adc
jmp
or
add
inc
or
add
add
push
arpl
aam
add
jo
push
fstpl
loope
jecxz
xor
das
jg
shl
sbb
repz
imul
cmp
cmp
mov
out
cwtl
jle
sti
orb
jae
and
push
jge
mov
xchg
loopne
ljmp
das
mov
fnstsw
pop
inc
in
push
adc
jno
dec
jae
push
cmp
or
nop
arpl
ss
xchg
add
cwtl
repnz
jae
call
js
jge
xor
outsb
cmpsl
mov
jg
xchg
jmp
jp
jp
adc
xchg
jmp
and
mov
jle
jecxz
inc
or
lock
jae
mov
jne
sub
push
and
sahf
xchg
addr16
nop
sub
cld
push
inc
mov
mov
shlb
adc
mov
clc
nop
xchg
pusha
pop
lcall
fnstenv
push
sbb
xor
jecxz
das
mov
movsb
loopne
out
aam
ja
cmp
fucomp
push
js
jae
stos
ss
xchg
xor
and
sbb
add
lcall
mov
ds
movsl
xor
dec
inc
xor
lock
mov
mov
cltd
dec
cmc
outsl
aam
fldcw
lret
jmp
addr16
daa
mov
adc
in
aam
jg
cmp
outsl
adc
sbb
push
mov
cltd
test
inc
mov
dec
ss
adc
fisubrs
aas
xlat
in
pop
fsubrl
lahf
jge
mov
call
mov
adcl
out
sub
push
das
hlt
iret
push
popa
imul
mov
outsl
fildll
mov
je
loope
inc
lods
jb
xchg
fildll
lret
or
pushf
insl
cmp
dec
cmp
addr16
call
mov
fmul
cmpsb
jb
xchg
add
jnp
and
dec
sbb
or
enter
lret
pop
cmp
ret
movsb
lods
and
out
out
icebp
or
js
bound
xchg
and
adc
test
jne
push
pop
mov
push
aaa
hlt
lret
mov
out
inc
xlat
scas
enter
inc
push
sbb
negl
mov
cwtl
cli
incl
es
and
jae
mov
and
pop
dec
xchg
pop
xchg
adc
mov
loope
add
jae
cmp
inc
push
inc
jp
pop
out
sub
mov
or
xchg
add
or
icebp
daa
xor
push
fdiv
int
clc
les
pop
insb
scas
js
jnp
fwait
inc
insb
xchg
jmp
jmp
mov
cmp
mov
xlat
fs
push
pusha
repnz
xor
xor
lods
push
lods
dec
bound
ljmp
mov
jmp
aas
aaa
sbb
arpl
ljmp
aaa
movsb
xchg
xor
shrb
movsl
fmuls
sbb
pop
out
lea
call
lret
jmp
mulb
push
mov
cltd
adc
test
dec
call
ljmp
mov
testl
fld
fsubrs
xchg
jo
mov
mov
xlat
and
mov
imul
dec
push
loopne
inc
loopne
push
ss
mov
push
scas
js
shll
cwtl
dec
mov
into
inc
ljmp
mov
cmc
sahf
mov
in
pop
loop
ds
xor
test
adc
repnz
incl
and
roll
test
adc
lock
xlat
and
mov
aaa
jmp
mov
push
adc
int
out
xlat
and
data16
sub
jns
jmp
dec
adc
mov
jno
sahf
fwait
push
mov
in
xor
loope
sub
push
scas
insl
jmp
stos
cmp
push
sub
jle
xor
inc
not
arpl
jl
cld
xor
clc
cmpsb
cmp
inc
jne
cmp
pop
sbb
push
cmpsb
pusha
push
adcb
mov
adc
inc
icebp
test
cmp
pop
cmp
cmpsb
mov
sub
jnp
inc
or
cmp
cmp
cli
outsl
add
cmp
ja
loopne
pop
pop
movsb
mov
ljmp
iret
push
repnz
bound
pop
cmp
xlat
addr16
sbb
xchg
mov
out
pop
jmp
cmp
lods
dec
push
sbb
subb
xor
out
push
addr16
inc
jle
xor
xor
inc
ja
sar
sub
jns
in
jo
popf
lcall
insb
js
into
out
sbb
addl
rol
jnp
das
dec
lcall
cmp
sahf
xchg
addr16
mov
cwtl
outsl
test
iret
cltd
cmp
aaa
sahf
pop
pop
out
xor
sub
pop
adc
xchg
cmp
cmp
mov
add
sbb
pop
mov
dec
and
pop
push
pop
cmp
mov
mov
mov
sahf
lcall
jp
sahf
mov
mov
ja
mov
ret
sti
shll
in
jo
popf
lcall
xor
mov
pushf
or
inc
out
jnp
rorl
rol
loope
mov
loopne
jmp
pop
je
mov
or
mov
les
mov
xor
sti
sbb
iret
or
cwtl
jle
test
inc
movsl
add
sahf
fildl
dec
jae
ds
shl
repnz
pop
aad
pop
mov
pusha
sub
jns
jae
and
push
jl
stos
movsb
dec
pusha
xor
rclb
int3
fcomps
fsubs
lods
into
xchg
inc
mov
mov
mov
adc
int3
pop
jbe
adc
or
dec
dec
mov
rcrl
sgdtl
sub
repz
lret
mov
push
push
jmp
ljmp
inc
jp
pop
decl
loopne
cltd
insb
leave
mov
add
dec
insl
ss
int
sbb
sub
adc
lds
mov
fnstsw
dec
in
insb
dec
pop
call
mov
movsl
sbb
pusha
cmc
mov
add
sbb
jns
xchg
mov
pop
in
dec
sbb
inc
shll
ret
xor
clc
jns
jae
pushf
in
xor
nop
pushf
sbb
dec
sbb
mov
mov
sbb
fmuls
adc
xchg
imul
aad
in
add
and
add
inc
pop
inc
adc
dec
ja
test
xor
in
in
mov
shrl
jmp
or
repnz
pop
dec
imul
xchg
int3
sbbl
pop
sbb
xchg
mov
dec
insl
mov
adc
es
sbb
fsts
and
sub
adc
jo
pushl
add
mov
jbe
mov
inc
pushf
data16
daa
fldt
cmp
es
call
adc
mov
sub
pop
inc
js
enter
push
adc
dec
fisttpll
or
cmp
mov
pushf
cmp
sbb
fldcw
jecxz
push
mov
aam
push
es
pushf
jmp
inc
pop
cs
fucom
mov
fldenv
cli
sahf
inc
sbb
in
inc
mov
sub
cwtl
aaa
inc
repz
shll
rol
sbb
dec
push
fadd
lods
lds
enter
push
xor
out
jno
shll
adc
movsb
or
fldcw
les
mov
fwait
pop
cmp
xchg
cmc
mov
fldcw
dec
int
sbb
push
sti
jns
es
in
adc
adc
inc
test
cmpl
mov
mov
in
and
inc
lods
jns
stc
stos
pop
daa
xorb
pop
lds
test
aad
fwait
in
inc
lcall
mov
adc
int3
xchg
mov
and
xchg
stos
sub
jle
cwtd
sub
das
dec
or
lds
inc
adc
push
adc
or
faddl
xchg
pop
mov
test
outsl
shrb
dec
xchg
mov
nop
rclb
mov
xchg
iret
cmp
aam
mov
insl
mov
adc
pushf
lods
cld
adc
xchg
sbb
add
cli
inc
outsl
outsl
mov
mov
sbb
sbb
push
loopne
and
pop
dec
mov
and
rclb
or
lea
fsubp
add
xlat
stos
movsl
in
sub
cmpb
js
push
sub
jbe
adc
into
inc
cli
mov
mov
dec
fadds
es
es
mov
xchg
cmp
pop
outsl
mov
pushf
lret
jmp
mov
mov
icebp
pop
mov
ss
int3
mov
xlat
xchg
add
xor
fdivl
adc
push
sbb
pop
mov
pushf
test
xlat
addr16
jns
inc
jl
xor
sti
cli
xor
push
ret
add
dec
nop
iret
je
pusha
jg
sbb
rcrl
mov
or
inc
cmp
lcall
fcompl
jo
cmc
iret
sub
dec
orb
imul
and
jnp
aas
inc
cltd
cltd
ret
mov
xor
jl
mov
stos
in
jbe
jae
mov
lea
ja
mov
adc
testb
aam
cmpsb
std
jmp
in
jbe
or
mov
xchg
xor
add
lret
outsl
negb
push
in
adc
icebp
lds
inc
cltd
mov
pushf
je
xchg
jecxz
call
stc
mov
inc
pop
aad
bnd
sub
pop
shl
js
xor
add
test
std
mov
push
mov
in
mov
dec
lock
add
daa
clc
mov
dec
scas
push
ljmp
pop
inc
cs
xchg
pop
ret
cmovle
xor
fsts
rorl
pop
ja
cmp
and
pop
adc
jns
pusha
std
mov
push
mov
ja
inc
sbbb
or
cmp
dec
mov
nop
movsb
mov
xor
cmpsl
cltd
sarb
mov
ljmp
jp
mov
sub
pop
ret
add
push
mov
add
and
dec
pop
enter
xor
xchg
fs
inc
cmpsl
xlat
lcall
dec
orb
mov
lock
cmp
cmp
je
out
xchg
sbb
ficompl
cwtl
scas
sub
rol
pop
dec
lret
ret
adc
push
movsb
adc
xchg
nop
xchg
mov
les
xchg
dec
ficompl
pop
repnz
idivb
daa
push
or
cld
hlt
push
imul
and
fsubr
test
xor
outsl
xor
inc
test
outsb
cmp
aam
xor
push
adc
std
mov
iretw
cmovle
jbe
fcmovu
ret
aaa
out
dec
xor
lock
push
outsb
mov
mov
xorb
out
cmp
adc
jge
pop
loop
sbb
loop
cwtl
in
outsb
test
hlt
push
inc
stos
mov
push
imul
or
push
imul
add
out
adc
dec
adc
mov
add
fldl
pushf
or
stos
sbb
movsl
mov
dec
mov
mov
aas
int3
inc
add
push
mov
aaa
cmp
xchg
dec
aaa
out
lret
andl
xchg
iret
xlat
imull
call
push
ss
pushf
cmp
shr
icebp
jno
cmp
int3
insb
dec
pushf
cmp
sbb
aad
xor
sub
inc
scas
inc
push
sub
pushl
lods
jbe
fs
sbb
sbb
jo
stc
sub
les
mov
aad
int
mov
loope
pushf
cmp
adc
imul
lock
or
mov
cmp
decl
add
mov
mov
push
mov
dec
stos
test
fsubrp
fs
inc
shl
nop
daa
jbe
cmp
inc
dec
sub
mov
or
cmp
push
mov
arpl
sahf
jl
jb
xor
mov
bound
ss
or
fstps
xchg
mov
mov
xchg
inc
cmc
push
inc
push
hlt
sub
bnd
outsb
mov
xor
pop
imul
xor
pop
andb
mov
data16
iret
inc
mov
push
pop
mov
outsl
sbb
inc
fwait
adc
sub
or
mov
xlat
or
loope
jle
mov
mov
fs
test
cmp
sbb
push
mov
jmp
pop
or
xchg
fisttpll
insb
cli
adc
out
ljmp
in
aaa
mov
xchg
in
fdivrs
dec
int3
imul
lahf
dec
dec
mov
fnstenv
jnp
jmp
clc
xchg
repz
sub
divb
sti
sbb
addr16
ret
insl
or
and
xchg
lds
add
aas
jo
push
xchg
dec
arpl
dec
cmp
push
add
jb
mov
insb
int
mov
cmp
dec
imul
mov
popf
xchg
scas
icebp
mov
outsl
ja
or
push
push
mov
or
or
mov
mov
mov
jnp
sahf
mov
mov
dec
je
add
shlb
cwtl
shll
cld
mov
mov
jl
rsm
in
xor
xor
mov
mov
mov
and
mov
add
add
cmpsb
es
mov
cwtl
xor
stos
ror
fisubl
lds
pop
pop
mov
ja
jl
dec
enter
dec
mov
pop
mov
inc
nop
into
sbb
cmp
fmuls
movsb
push
cmp
jl
push
xchg
jbe
jl
cmp
mov
je
daa
dec
push
mov
jmp
dec
fisttps
push
sbb
lcall
dec
mov
mov
jo
adc
lock
cmp
pop
dec
push
jae
js
imul
insl
lcall
sarb
mov
popa
fs
popa
frstor
jle
out
call
sub
fcomp
fistpll
add
push
pop
jmp
xchg
or
mov
mov
xchg
test
imul
add
push
sbb
xchg
aaa
out
cmp
dec
push
mov
movsl
sub
pop
mov
cmp
lahf
or
jb
push
inc
mov
pop
adc
and
push
add
pushf
mov
lds
js
sbb
lea
fldcw
scas
popf
subb
sbb
loopne
std
sub
cmp
scas
jl
cld
ss
jbe
jl
xor
andl
inc
stos
xor
push
lea
daa
inc
mov
sahf
stos
cmp
scas
addl
stos
int3
mov
insb
xchg
mov
adc
push
imul
shr
in
push
xor
mov
sub
push
and
xorl
lods
hlt
movsl
cltd
mov
add
jecxz
std
in
add
cmc
and
sub
mov
out
dec
mov
mul
inc
dec
out
pop
stc
lock
dec
mov
mov
mov
imul
sub
js
mov
and
std
in
arpl
out
sti
ret
loopne
nop
icebp
push
lret
movsl
push
fwait
popf
les
push
inc
jns
out
movsl
push
sbbl
xorb
and
or
mov
xor
ficompl
inc
rolb
push
and
or
inc
je
xor
in
enter
xor
lock
push
dec
test
jecxz
jl
sub
mov
push
or
negb
roll
pusha
sub
xor
sub
aam
adc
push
add
push
or
and
imul
stc
mov
mov
fs
jns
xor
cld
sbb
rorb
xor
mov
or
mov
cmpsl
sub
std
lods
cmp
pop
mov
xor
sub
push
popf
fisttpll
aam
pop
decb
lret
mov
dec
xlat
mov
push
or
inc
inc
ret
roll
sahf
sub
out
mov
push
aam
sub
loope
rorl
aam
mov
inc
cmp
xor
push
jo
or
mov
push
or
mov
or
mov
ret
sub
std
cs
pop
sub
stos
movsb
xor
ja
add
repz
jp
mov
test
pop
dec
stos
add
test
pushf
xchg
or
mov
test
sbb
sbb
sahf
aam
rolb
adc
xchg
mov
add
data16
push
push
std
popl
adc
fmuls
aam
pop
mov
push
ds
mov
sarl
jle
pop
shll
inc
hlt
jne
out
ss
lods
push
dec
xor
fwait
and
cmp
jae
xor
sub
and
mov
pop
aam
sub
or
and
jnp
dec
mov
stos
dec
sub
sbb
iret
or
xor
xchg
and
fimull
aam
mov
xor
aam
pop
movsb
xor
daa
in
push
pushf
std
xor
xchg
and
mov
icebp
mov
inc
cmp
mov
orl
in
repz
sub
jmp
inc
dec
loop
add
test
or
mov
dec
outsl
lret
xchg
dec
mov
loop
dec
mov
or
mov
sub
sbb
xchg
xor
stc
or
cmp
sbb
les
lret
lret
call
xchg
out
sbb
in
mov
js
je
repz
jo
lock
out
sbb
cmc
popa
pop
insb
pop
mov
mov
arpl
add
in
mov
mov
xor
push
jo
lock
out
pop
insb
cmc
popa
pop
insb
mov
mov
shlb
mov
pop
and
push
je
lock
jmp
int
adc
add
test
lock
cli
pop
jbe
das
dec
and
stos
jmp
cltd
cwtl
mov
sti
xchg
jne
fldt
lock
test
jmp
test
add
sub
enter
mov
sti
roll
adc
adc
imul
xor
mov
int3
aad
pop
xor
and
shll
sbb
out
bound
nop
push
cmc
cmpsb
cmp
push
xchg
adc
mov
mov
xchg
add
adc
mov
jbe
dec
jmp
outsl
sub
sub
cmc
imul
or
cld
mov
sub
icebp
cltd
and
mov
jl
lret
pusha
dec
jl,pt
loop
aad
or
cld
ss
lods
sbb
lock
or
cld
ss
lods
sbb
sbb
enter
ss
lods
sbb
xchg
jns
or
cld
ss
lods
sbb
pop
outsl
in
or
cld
ss
lods
sbb
or
shrl
xchg
and
fstpt
sbb
mov
in
or
cld
ss
lods
sbb
cwtl
jnp
or
cld
ss
lods
sbb
jnp
in
or
jl
ljmp
lods
sbb
enter
addl
jl,pt
ljmp
lods
sbb
cltd
and
or
jl
ljmp
lods
sbb
push
cld
in
or
jl
ljmp
lods
sbb
das
scas
in
or
jl
ljmp
lods
sbb
adc
in
or
jl
ljmp
lods
sbb
shrl
inc
jl,pt
ljmp
lods
sbb
in
in
or
jl
ljmp
lods
sbb
xchg
fsubr
or
jl
ljmp
lods
sbb
enter
addl
jl,pt
ljmp
lods
sbb
cld
mov
or
jl
ljmp
lods
sbb
sub
adc
ljmp
lods
sbb
dec
push
loop
andl
ljmp
lods
sbb
loop
add
inc
jl,pt
ljmp
lods
sbb
xchg
or
jl
ljmp
lods
sbb
lret
pop
loop
addl
inc
jl,pt
ljmp
lods
sbb
mov
or
jl
ljmp
lods
sbb
mov
loop
addl
jl,pt
ljmp
lods
sbb
cs
loop
andl
jl,pt
ljmp
lods
sbb
push
or
jl
ljmp
lods
sbb
adc
jecxz
andl
ljmp
lods
sbb
push
jecxz
add
inc
jl,pt
ljmp
lods
sbb
outsb
int
or
jl
ljmp
lods
sbb
nop
mov
or
jl
ljmp
lods
sbb
xchg
in
jecxz
andl
inc
jl,pt
ljmp
lods
sbb
int3
cmc
jecxz
addl
jl,pt
ljmp
lods
sbb
into
jne
or
jl
ljmp
lods
sbb
add
mov
addl
ljmp
ss
lods
sbb
ja
mov
andl
ljmp
lods
sbb
mov
add
inc
jl,pt
ljmp
lods
sbb
iret
test
inc
jl,pt
ljmp
lods
sbb
js
or
jl
ljmp
lods
sbb
jnp
mov
andl
inc
jl,pt
ljmp
lods
sbb
iret
mov
mov
ljmp
lods
sbb
sub
sbb
mov
xorl
xchg
and
fstpt
sbb
push
mov
inc
jl,pt
ljmp
lods
sbb
jno
mov
add
inc
jl,pt
ljmp
lods
sbb
add
or
jl
ljmp
lods
sbb
sub
sbb
int3
jb
or
jl
ljmp
lods
sbb
adc
inc
jl,pt
ljmp
lods
sbb
xor
mov
andl
jl,pt
ljmp
lods
sbb
sub
sbb
into
and
inc
jl,pt
ljmp
lods
sbb
and
mov
add
inc
jl,pt
ljmp
lods
sbb
mov
mov
and
inc
jl,pt
ljmp
lods
sbb
sub
sbb
js
mov
andl
dec
jl,pt
ljmp
lods
sbb
xchg
nop
mov
addl
jl,pt
ljmp
lods
sbb
mov
popa
pop
dec
jl,pt
ljmp
lods
sbb
dec
vfrczpd
jl,pt
ljmp
lods
sbb
sub
sbb
mov
rcr
jl,pt
ljmp
lods
sbb
repz
jl,pt
ljmp
lods
sbb
popf
push
blsfill
inc
jl,pt
ljmp
lods
sbb
or
roll
jl
ljmp
lods
sbb
and
rorb
jl
ljmp
lods
sbb
xor
sub
jl
ljmp
lods
sbb
xor
mov
addl
ljmp
lods
sbb
xor
andl
ljmp
lods
sbb
push
dec
mov
add
inc
jl,pt
ljmp
lods
sbb
ficoms
or
jl
ljmp
lods
sbb
adc
mov
addl
dec
jl,pt
ljmp
lods
sbb
xor
or
jl
ljmp
lods
sbb
cmpsl
push
mov
addl
jl,pt
ljmp
lods
sbb
or
jl
ljmp
lods
sbb
mov
addl
ljmp
lods
sbb
lcall
dec
jl,pt
ljmp
lods
sbb
cmc
cmp
dec
jl,pt
ljmp
lods
sbb
push
mov
xchg
jl
ljmp
lods
sbb
daa
addr16
addl
dec
jl,pt
ljmp
lods
sbb
scas
sahf
mov
andl
dec
jl,pt
ljmp
lods
sbb
rclb
orb
ss
lods
sbb
sbb
fwait
dec
jl,pt
ljmp
lods
sbb
jg
mov
addl
ljmp
lods
sbb
inc
rorl
jl,pt
ljmp
lods
sbb
mov
roll
and
fstpt
sbb
mov
and
dec
jl,pt
ljmp
lods
sbb
lods
scas
mov
addl
dec
jl,pt
ljmp
lods
sbb
dec
inc
mov
andl
dec
jl,pt
ljmp
lods
sbb
mov
mov
addl
jl,pt
ljmp
lods
sbb
dec
pop
mov
andl
jl,pt
ljmp
lods
sbb
repz
mov
addl
ljmp
lods
sbb
sbb
or
jl
ljmp
lods
sbb
sti
add
dec
jl,pt
ljmp
lods
sbb
inc
add
dec
jl,pt
ljmp
lods
sbb
xchg
test
dec
jl,pt
ljmp
lods
sbb
popa
pop
mov
andl
dec
jl,pt
ljmp
lods
sbb
ficompl
or
jl
ljmp
lods
sbb
sub
sbb
mov
cmpl
ljmp
lods
sbb
adc
mov
andl
ljmp
lods
sbb
cmc
aam
or
jl
ljmp
lods
sbb
and
fisttpll
jl
ljmp
lods
sbb
pop
fbstp
dec
jl,pt
ljmp
lods
sbb
sub
sbb
xchg
xor
pop
jl,pt
ljmp
lods
sbb
sub
sbb
js
mov
addl
ljmp
lods
sbb
add
or
jl
ljmp
lods
sbb
push
cmp
pop
jl,pt
ljmp
lods
sbb
daa
insb
mov
and
pop
jl,pt
ljmp
lods
sbb
int
mov
addl
pop
ds
ss
lods
sbb
mov
and
pop
ds
ss
lods
sbb
in
mov
addl
ds
ss
lods
sbb
pop
shll
pop
ds
ss
lods
sbb
sub
sbb
clc
push
mov
andl
ljmp
lods
sbb
pushf
out
mov
add
gs
ss
lods
sbb
sub
sbb
jl,pt
inc
jl,pt
push
jl,pt
jb
test
fildll
stos
mov
adc
bound
mov
and
xchg
push
nop
inc
mov
mov
ret
call
or
inc
repz
jnp
faddp
cmp
test
leave
xor
test
int3
popf
aaa
mov
xor
pop
hlt
or
in
cmpsl
fwait
sbb
shrl
psubw
popf
inc
jl,pt
push
out
out
pop
ret
sbb
push
call
ret
xchg
int
fwait
add
ret
xchg
int
fcoml
inc
push
repz
inc
jl,pt
out
orb
mov
push
movb
repnz
imul
or
outsb
aas
fstpt
ficoms
dec
pop
jb
fcom
xchg
lods
in
dec
push
xchg
sahf
jge
and
shrl
pop
mov
xorb
andb
dec
divps
mov
mov
cmp
sbb
clc
push
jbe
shll
shr
loopne
in
push
pop
jb
stos
inc
inc
int3
xlat
add
pop
test
loopne
mov
outsb
mov
jg
jae
int3
in
ds
fists
test
in
push
ja
aad
pushf
fists
divps
ljmp
sar
fimull
insl
loopne
call
pushf
out
je
pop
fldl
sbbb
push
shlb
pop
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
lret
aas
ds
mov
lds
and
or
pop
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
imul
mov
adc
pop
dec
pusha
bound
adc
lods
dec
dec
mov
repnz
jo
addr16
xchg
dec
mov
sahf
out
jns
mov
dec
lods
dec
dec
mov
repnz
je
jo
addr16
ja
adc
and
jo
mov
mov
dec
lea
push
rol
or
dec
sbb
or
sar
mov
sti
pop
ret
cmp
cmpsb
inc
push
or
data16
xor
lcall
pop
mov
mov
rcl
jg
retw
dec
fst
cmp
dec
loopne
lods
data16
mov
mov
dec
push
insb
pop
fidivrl
sti
pop
push
mov
data16
xor
stos
leave
aas
data16
xor
push
push
mov
mov
mov
aas
mov
mov
lret
xlat
jo
data16
daa
and
jo
mov
popf
dec
adc
sarl
mov
lret
xlat
jo
data16
and
jo
negl
rorl
xor
mov
test
movsl
ds
dec
or
rol
or
adc
cmp
dec
loopne
cwtl
ds
or
movsl
ds
dec
or
rol
or
push
lret
dec
loopne
cwtl
data16
mov
aas
data16
dec
or
rol
or
inc
push
push
cwtl
ds
mull
ljmp
push
outsb
dec
push
jnp
rorb
xor
mov
icebp
mov
aas
data16
dec
or
rol
or
fidivs
dec
loopne
cwtl
data16
add
jb
ds
dec
loope
rol
or
jns,pt
rorb
xor
inc
dec
mov
aas
data16
dec
or
rol
or
ficoml
rorb
xor
test
icebp
mov
aas
data16
dec
or
rol
or
jbe
cmp
dec
loopne
lcall
icebp
xor
dec
push
out
lea
or
mov
sahf
mov
mov
lret
xlat
jo
data16
mull
jo
mov
popf
dec
add
icebp
or
dec
mov
lret
xlat
jo
data16
xor
jo
mov
popf
dec
jbe
in
mov
mov
lret
xlat
jo
data16
mov
jo
mov
popf
dec
fwait
divb
mov
mov
lret
xlat
jo
data16
or
jo
mov
fwait
dec
lahf
mov
jns
icebp
or
dec
mov
lret
xlat
jo
data16
pop
and
jo
mov
cwtl
dec
cmp
or
dec
mov
lret
xlat
jo
data16
fbld
jo
mov
cwtl
dec
daa
xor
or
dec
mov
lret
xlat
jo
data16
jo
mov
cwtl
dec
loope
int
mov
mov
lret
xlat
jo
data16
xlat
and
jo
mov
cwtl
dec
iret
add
mov
or
dec
mov
lret
xlat
jo
data16
adc
jo
xchg
dec
mov
push
xchg
pop
jo
dec
loopne
cwtl
ds
jns
repz
aas
data16
dec
or
rol
or
stos
lret
dec
loopne
cwtl
ds
in
mov
icebp
mov
aas
data16
dec
or
rol
or
dec
lret
dec
loopne
cwtl
xor
popf
sbb
shl
aas
data16
dec
or
rol
or
push
lret
dec
loopne
cwtl
ds
pop
mov
mov
aas
data16
dec
or
rol
or
ss
cmp
dec
loopne
cwtl
ds
pop
cli
shl
aas
data16
dec
or
rol
or
push
lret
dec
loopne
cwtl
xor
mov
mov
aas
data16
dec
or
rol
or
fcmove
cmp
dec
loopne
cwtl
ds
imul
mov
aas
data16
dec
or
rol
or
ds
xor
mov
or
dec
shll
shll
fidivs
and
daa
ficoml
mov
jo
cs
dec
mov
sti
inc
cs
and
xchg
mov
adc
xor
daa
ficoml
mov
jo
cs
dec
mov
sti
inc
les
xchg
mov
pop
adc
cmp
ficoml
mov
jo
cs
dec
mov
sti
inc
shlb
mov
mov
ficoml
mov
jo
cs
dec
mov
sti
inc
cs
lret
shll
fidivrs
jnp
cmp
ficoml
mov
jo
cs
dec
mov
sti
inc
cs
and
xchg
mov
test
adc
out
dec
mov
sti
inc
mov
xchg
mov
cmp
aaa
pusha
ficoml
mov
jo
cs
dec
mov
sti
inc
mov
xchg
jmp
loop
mov
mov
dec
push
repz
cmp
pop
push
mov
data16
xor
ds
out
push
pop
lcall
shlb
loopne
mov
data16
xor
shlb
mov
push
iret
mov
pop
jo
mov
cwtl
dec
rolb
sub
mov
lret
xlat
jo
data16
iret
cmp
jo
mov
pushf
dec
mov
icebp
or
dec
mov
lret
xlat
jo
data16
lret
cmp
jo
mov
pushf
dec
mov
test
mov
mov
lret
xlat
jo
data16
cmp
jo
xchg
dec
mov
push
negl
rorl
xor
mov
dec
dec
shl
aas
data16
dec
or
rol
or
mov
loopne
cwtl
xor
jno
lock
aas
data16
dec
or
rol
or
mov
cmp
dec
loopne
cwtl
xor
jne
ljmp
dec
or
rol
or
sahf
aam
rorl
xor
sbb
xchg
icebp
mov
aas
data16
dec
or
rol
or
mov
loopne
cwtl
ds
iret
pop
push
shl
aas
data16
dec
or
rol
or
cmpsb
aad
rorl
xor
mov
mov
aas
data16
dec
or
rol
or
ljmp
cwtl
ds
imul
pop
or
icebp
mov
aas
data16
dec
or
rol
or
xchg
aam
rorl
xor
xor
mov
aas
data16
dec
or
rol
or
mov
cmp
dec
loopne
cwtl
data16
sbb
pop
shl
aas
data16
dec
or
rol
or
xchg
aam
rorl
xor
xchg
sub
in
icebp
mov
aas
data16
dec
or
rol
or
sbb
cmp
dec
loopne
cwtl
data16
mov
aas
data16
dec
or
rol
or
inc
push
push
cwtl
ds
mov
hlt
shl
aas
data16
dec
or
rol
or
jle
cmp
dec
loopne
cwtl
ds
mov
mov
aas
data16
dec
or
rol
or
add
cmp
dec
loopne
cwtl
ds
and
aas
data16
dec
or
rol
or
push
lret
cmp
dec
loopne
cwtl
ds
aaa
jnp
shl
aas
data16
dec
or
rol
or
lret
rorl
xor
add
fstl
shl
aas
data16
dec
or
rol
or
aad
rorl
xor
repz
mov
aas
data16
dec
or
rol
or
pop
aam
rorl
xor
and
dec
pop
shl
aas
data16
dec
or
rol
or
cs
cmp
dec
loopne
cwtl
ds
jnp
adc
icebp
mov
aas
data16
dec
or
rol
or
mov
loopne
cwtl
ds
out
sub
icebp
mov
aas
data16
dec
or
rol
or
or
cmp
dec
loopne
cwtl
ds
mov
mov
aas
data16
dec
or
rol
or
inc
aam
rorl
xor
or
icebp
mov
aas
data16
dec
or
rol
or
inc
aam
rorl
xor
jae
jle
shl
aas
data16
dec
or
rol
or
out
aam
rorl
xor
cmc
xchg
enter
mov
aas
data16
dec
or
rol
or
repnz
rorl
xor
pushl
in
icebp
mov
aas
data16
dec
or
rol
or
not
cmp
shll
shll
dec
jo
rcrl
sbb
je
shlb
loopne
lods
ds
dec
frstpm(287
cmp
rorb
iret
fistps
aam
mov
mov
pop
dec
rol
rcrl
dec
repnz
push
scas
ds
xchg
ficomps
aam
mov
rorl
rcrl
dec
out
pop
push
sarl
imul
shlb
lock
retw
push
es
sarb
cs
aas
imul
dec
or
dec
shll
pop
outsb
dec
loop
push
shll
ret
lret
test
aas
jmp
outsb
aaa
scas
ficoms
icebp
mov
jo
rclb
mov
jo
mov
jo
push
fimuls
mov
outsb
loopne
pop
dec
dec
push
mov
jne
mov
jo
stc
mov
inc
dec
mov
lret
shlb
addr16
fistps
pop
xor
ljmp
sub
xchg
outsb
loopne
call
adc
jbe
jne
dec
mov
into
into
add
test
mov
lea
xor
dec
popa
shl
sarb
imul
push
aas
dec
dec
mov
jo
loope
notb
mov
repnz
sub
jo
mov
shll
shll
mov
jo
xchg
cld
mov
lret
ss
data16
shl
lcall
push
jo
pop
jo
cs
pop
dec
mov
shll
aam
shll
call
mov
mov
rolb
arpl
nop
aas
pop
cmc
rsqrtps
or
mov
dec
dec
ss
ja
lock
mov
shll
pop
jo
mov
pop
jo
dec
loopne
lods
ds
shll
xchg
sub
push
pop
mov
movsl
inc
rcrb
pop
mov
cli
outsb
cli
cli
popa
push
mov
jo
push
cmp
mov
lret
js
or
shll
pop
jo
xor
dec
dec
xchg
je
mov
sub
mov
and
daa
cmp
push
and
pop
mov
pop
mov
and
pop
dec
shll
pop
lret
js
add
push
shll
pop
jo
xor
dec
dec
xchg
je
mov
repnz
mov
jo
mov
and
imul
cs
out
dec
mov
dec
fmull
scas
mov
iret
jo
dec
loopne
and
data16
mov
imul
cmp
stc
xor
in
shll
dec
push
shll
pop
push
shll
lret
cmp
mov
enter
jo
stc
arpl
dec
mov
shll
jnp
repz
jo
cs
cmp
mov
movl
inc
outsb
inc
loop
push
and
data16
cs
mov
shll
pop
jmp
inc
jb
push
inc
mov
rcrb
stc
inc
mov
push
stc
inc
pop
push
dec
cmp
cmp
mov
cmp
cmp
jo
cmp
es
jl
mov
aas
mov
shll
pop
stc
fistps
les
loope
jnp
es
dec
mov
inc
dec
mov
push
sub
cs
dec
mov
sub
pop
iret
ja
shll
push
pop
mov
aaa
dec
shll
pop
jo
dec
fs
test
mov
outsb
cli
fst
cmp
dec
popa
and
fmuls
les
aad
shll
scas
jo
xor
mov
lret
hlt
mov
pop
jo
bsf
imul
iret
pushf
mov
jo
dec
add
inc
push
mov
jo
cli
rorl
sbb
mov
loop
push
jns
pop
jo
es
dec
mov
leave
or
mov
repnz
mov
jo
gs
hlt
mov
pop
jo
es
jl
mov
leave
or
shll
iret
jo
repnz
xchg
jl
mov
cltd
into
mov
push
inc
stc
cmp
rolb
xor
jle
shlb
pop
jo
cs
dec
mov
lret
jo
cs
mov
lret
mov
jo
andb
mov
mov
cltd
leave
or
shll
daa
xchg
dec
into
pop
push
mov
icebp
xor
push
push
ret
mov
jo
xchg
jl
mov
dec
mov
loopne
pop
daa
and
daa
cmp
shr
mov
insb
shlb
push
xchg
cld
mov
push
mov
loopne
and
mov
loopne
clc
sub
mov
daa
cmp
mov
in
shlb
int
shll
pop
imul
jnp
mov
jo
data16
mov
lret
shll
pavgb
and
dec
push
mov
sarl
dec
enter
jp
and
mov
shll
clc
je
mov
cmp
mov
jo
mov
imul
jnp
add
jo
data16
mov
lret
shll
pavgb
and
mov
sarl
push
lds
xor
adc
mov
shll
inc
out
dec
mov
cmp
mov
jo
mov
imul
jnp
adc
jo
data16
mov
lret
xlat
jo
cmovl
lret
not
out
jnp
test
jge
mov
inc
neg
jge
cmc
aad
aaa
vunpckhps
not
repz
jnp
aam
jge
mov
sub
aad
sub
aad
mov
dec
sarb
lret
not
out
jnp
js
jge
mov
cs
repz
mov
inc
pusha
sarb
mov
repnz
cmp
out
insl
lret
repnz
ficompl
jmp
dec
les
lret
not
out
jnp
push
bnd
mov
inc
neg
jge
repnz
das
insl
loopne
notl
mov
dec
out
repnz
das
icebp
rcrl
add
out
insl
lret
repnz
fistpl
jmp
dec
mov
lret
not
out
jnp
sub
jge
mov
inc
neg
jge
repnz
das
insl
sbb
notl
mov
fdivrl
repz
pop
insl
lock
fdivrl
repnz
das
insl
pop
repnz
mov
dec
out
repnz
das
jmp
scas
jp
arpl
mov
repnz
cli
pop
out
dec
dec
xor
lret
not
out
jnp
sar
jge
mov
inc
neg
jge
repnz
das
insl
nop
notl
mov
dec
sub
push
loope
lahf
mov
fdivrl
repnz
das
insl
push
adc
notl
mov
dec
out
repnz
das
test
scas
jp
pop
out
insl
mov
push
xor
pop
out
decl
mov
aad
das
lods
iret
sahf
mov
scas
jp
pop
out
insl
lret
repnz
sub
dec
dec
sbb
lret
not
out
jnp
sbb
jge
mov
inc
neg
jge
cmc
aad
aaa
vunpckhps
not
repz
jnp
mov
pop
insl
aam
inc
neg
jge
cmc
aad
aaa
vunpckhps
not
repz
jnp
push
mov
lret
insl
fsubrl
mov
aad
das
insl
enter
xchg
insb
loope,pn
test
mov
aad
das
inc
aad
mov
scas
jp
pop
out
insl
lret
repnz
fstpl
jmp
dec
add
lret
not
out
jnp
sub
jge
mov
inc
neg
jge
repnz
das
insl
aam
sub
xchg
insb
rcrl
mov
dec
out
repnz
das
mov
sahf
mov
scas
jp
jns
out
insl
lret
repnz
icebp
pop
out
dec
dec
hlt
jp
lret
not
out
jnp
inc
mov
lret
insl
adc
neg
jge
repnz
das
insl
mov
notl
mov
dec
out
repnz
das
or
sahf
mov
scas
jp
pop
out
insl
test
mov
push
andb
pop
out
decl
mov
aad
push
and
jp
repnz
das
insl
js
notl
mov
dec
add
repnz
push
jno
test
cmpsb
cmc
aad
aaa
lds
repz
aad
mov
dec
je
jp
mov
inc
neg
jge
cmc
aad
aaa
lds
inc
not
repz
jae
mov
jge
out
jbe
out
repnz
loopne
out
dec
dec
fs
lret
sub
out
jae
pushf
inc
lret
insl
aam
mov
push
xorb
pop
out
decl
mov
aad
das
std
out
mov
scas
jp
pop
out
insl
test
mov
push
andb
pop
out
decl
mov
aad
push
and
jp
repnz
das
insl
insb
lret
xchg
insb
sbbl
mov
aad
push
jno
test
cmpsb
cmc
aad
aaa
lds
repz
aad
mov
dec
test
insl
shrb
repnz
das
insl
sbb
sub
xchg
insb
cs
pop
test
mov
aad
das
std
in
sahf
mov
scas
jp
jns
out
insl
lret
repnz
negb
jmp
dec
mov
xor
jnp
aam
jge
mov
inc
neg
jge
repnz
das
insl
mov
insb
cs
dec
out
repnz
das
jns
sahf
mov
mov
out
repnz
fmull
add
cs
scas
lahf
mov
dec
lret
aad
cs
push
mov
shrl
sti
pop
out
insl
mov
mov
cmp
rcrb
scas
sbb
jp
cmc
aad
das
pop
scas
cmp
adc
fnstcw
out
repnz
das
insl
jl
sub
repnz
rorb
add
popa
test
fdivrl
repnz
sub
repnz
push
add
cs
test
dec
cmc
mov
aad
cs
test
dec
clc
mov
aad
jns
add
mov
lcall
xor
aad
mov
inc
dec
inc
lret
jbe
out
repnz
push
add
ror
mov
mov
out
repnz
jns
pop
out
repnz
mov
sti
pushf
lahf
lds
in
les
xorl
sarl
repnz
ss
lock
aaa
sub
out
jnp
out
add
and
mov
cmpsb
mov
test
push
ficomps
mov
repnz
lods
dec
int3
out
repnz
add
xor
sbb
repnz
fisttpl
add
xor
sahf
mov
dec
int3
aad
lret
repnz
sub
push
pusha
mov
mov
int3
out
repnz
mov
aad
test
push
xor
cmp
les
jno
loope
lahf
mov
fs
sub
inc
cmpb
int
lret
shll
mov
dec
loopne
repnz
push
xchg
test
jp
cmc
aad
xchg
xor
fistl
mov
cwtl
jle
repnz
sub
testl
inc
testl
scas
repnz
mov
aad
mov
dec
in
les
std
mov
or
cmp
lret
sti
adc
out
xchg
shl
mov
push
daa
mov
mov
pusha
and
out
mov
aad
das
cmp
repnz
shll
les
aas
insl
pop
and
add
jl
lsl
sub
mov
jge
lcall
sub
into
idivl
js
lcall
cmp
push
jo
jno
out
mov
pop
out
daa
aas
js
lcall
push
jne
sub
jg
inc
mov
fistl
mov
mov
fdivrl
cmc
aad
das
insl
js
negl
jge
icebp
pop
out
mov
js
cmc
aad
das
insl
add
sub
sarb
icebp
pop
out
insl
cwtl
loop
div
mov
repnz
das
mov
out
jo
mov
jp
stc
xor
mov
andb
aad
negb
lcall
jp
inc
jle
out
mov
dec
inc
lods
jp
jno
cmp
sahf
mov
add
in
out
cmp
icebp
mull
mov
dec
ret
lret
leave
push
andb
in
mov
cmp
mov
jnp
xchg
mov
lret
or
stc
mov
aad
mov
aad
scas
mov
jge
repnz
imul
inc
test
cmpb
out
decl
mov
aad
push
insb
pop
test
cmc
aad
rcrl
testl
out
xchg
repnz
mov
aad
jae
into
fstpt
adc
push
xchg
std
jge
jno
push
or
mov
cmp
mov
lret
push
sarl
cmc
aad
xor
and
sarb
cmc
aad
imul
out
repnz
cmp
jp
push
and
add
xor
jae
cld
aad
lret
jbe
stc
mov
dec
add
xor
mov
push
cmp
repnz
jnp
repz
repnz
jnp
bnd
mov
adc
out
jae
iret
jge
out
insl
xlat
out
repnz
in
out
insl
push
xorb
pop
out
decl
mov
aad
mov
aad
aaa
lds
bound
aad
sub
aad
mov
fs
inc
jg
inc
xorb
lods
jbe
out
repnz
es
xchg
test
mov
push
sbb
pop
out
decl
mov
aad
sahf
shrd
dec
jnp
xchg
std
jge
mov
inc
not
out
repnz
mov
aad
scas
stos
sarb
repnz
mov
aad
mov
add
mov
repnz
test
xlat
cmc
aad
ds
dec
rclb
aad
aaa
lds
bound
aad
sub
aad
mov
fs
inc
jg
inc
cmpb
das
insl
cwtl
loop
negl
cmp
lcall
mov
aad
mov
or
fdivl
xchg
mov
lret
sub
aad
sub
aad
mov
aam
mov
jae
sarl
sbb
testl
imul
sub
aad
mov
mov
sahf
mov
inc
movsb
clc
jge
out
insl
int
mov
adc
mov
aad
aaa
mov
jno
mov
sahf
mov
fimull
fmull
icebp
pusha
mov
aad
das
jne
stc
idivl
sbb
jne
bound
dec
add
cmp
out
repnz
pop
notb
out
repnz
xor
mov
mov
iret
stc
mov
cmp
sub
lret
repz
mov
sub
mov
sub
out
dec
mov
out
dec
shl
cmpsl
add
xor
lret
out
dec
mov
scas
faddl
lock
or
lock
lret
out
dec
xor
fcoml
mov
dec
cmp
nop
popa
scas
fmull
dec
pop
lods
jbe
stc
mov
push
dec
push
out
pop
out
mov
aaa
mov
ficompl
mov
add
add
cmp
push
aam
jle
out
mov
dec
in
enter
jae
dec
iret
mov
aad
cs
jl
push
insb
pop
scas
sahf
in
sahf
mov
dec
insb
jle
inc
andl
subl
mov
cmp
fcompl
xor
cmc
aad
push
notl
or
cmp
int3
notl
cmp
inc
subl
aaa
in
aad
mov
test
mov
push
js
arpl
push
cmp
repz
out
movsl
mov
out
repnz
mov
aad
imull
loopne
ja
aas
jo
arpl
push
jnp
repnz
sub
aad
sub
imulb
test
lahf
add
push
test
std
pop
out
jnp
sbb
fimull
sbb
aad
sahf
mov
dec
sub
aad
sahf
mov
push
std
mov
aad
je
aad
imul
out
repnz
imull
enter
aad
lods
repnz
sub
testl
cmp
add
decl
mov
aad
lods
decl
mov
aad
decw
mov
aad
mov
dec
fdivl
jl
out
xchg
sti
jns
jne
jge
lsl
mov
cmpsl
in
out
out
jnp
out
or
push
xor
aad
mov
and
xor
push
rorl
leave
push
stos
int
dec
test
push
add
aad
ss
lods
insl
xor
fmull
icebp
push
add
add
fwait
hlt
jbe
push
and
xchg
sti
jns
test
jp
repnz
adc
fdivrl
cmc
aad
adc
aad
adc
aad
adc
aad
adc
out
sub
aaa
inc
lret
repnz
bnd
or
or
xchg
add
push
ficomps
das
pop
loopne
sub
cmp
xor
test
lods
je
out
repnz
lods
dec
inc
scas
fmull
pop
and
fwait
int
dec
push
or
sahf
and
shll
shll
xor
std
mov
scas
fdivl
lret
repnz
mov
aas
repz
cli
aad
mov
and
mov
lock
movsb
mov
aad
iret
mov
pop
out
pop
loopne
sub
push
andb
xchg
mov
aad
mov
repnz
mov
push
add
aad
imul
inc
test
and
shlb
repnz
mov
xchg
jle
cmc
aad
ss
add
mov
call
aas
mov
dec
or
lret
loope
lahf
mov
inc
lock
lret
jbe
out
repnz
lods
je
out
repnz
lods
dec
in
inc
fmull
xchg
ja
pop
push
repz
inc
lods
cld
or
mov
sahf
fs
push
dec
xchg
aad
out
insl
aam
cs
cmp
ja
push
cmp
fmull
xchg
ja
pop
ds
mov
push
mov
push
cmp
aaa
mov
push
fisttps
stc
lods
inc
test
and
mov
out
jp
or
lret
loope
lahf
mov
push
xor
pop
out
decl
mov
aad
mov
repnz
mov
repnz
sahf
shll
inc
lret
rcll
repnz
xor
lret
repnz
cmp
push
cmp
fmull
push
andb
lcall
mov
mov
push
fsubrl
sbb
sub
jl
jns
fs
mov
mov
or
fdivl
lret
repnz
mov
aas
repz
cli
aad
mov
and
mov
lock
movsb
mov
aad
iret
mov
pop
out
pop
loopne
sub
repnz
cs
test
mov
and
lods
xor
push
icebp
mov
aad
mov
repnz
orb
or
jmp
sbb
sub
adc
repnz
pop
out
vcvtpd2dqy
test
scas
fmull
push
ss
aad
mov
and
sub
add
xor
mov
repz
fimull
add
xor
aad
mov
lret
repnz
repnz
das
mov
push
clc
lcallw
pop
std
inc
pop
mov
dec
in
repnz
cmp
sti
adc
aad
adc
aad
adc
out
mov
aad
or
sbb
outsl
pushf
mov
add
hlt
push
xor
aam
mov
dec
lods
fdivrl
cmc
aad
or
scas
push
decl
mov
aad
xor
add
mov
repnz
data16
je
sub
aad
mov
dec
lods
fsubrl
aad
or
scas
xlat
decb
mov
aad
das
mov
pusha
and
out
mov
pop
lods
inc
imull
daa
js
test
fdivr
dec
lock
aad
ljmp
jp
cmc
aad
cmp
lret
repnz
or
int3
mov
aad
mov
aad
mov
aad
mov
aam
mov
repnz
mov
aad
stos
repnz
cmpsl
test
pop
out
mov
jge
repnz
sub
mov
out
push
sarb
repnz
sub
dec
push
mov
jbe
stc
mov
rcll
or
mov
sarl
inc
stc
mov
sarl
mov
push
addb
clc
mov
aad
dec
repnz
adc
out
mov
aad
or
sbb
rcrl
stc
mov
outsl
pushf
repnz
add
hlt
push
xor
aam
mov
dec
pop
fdivrl
cmc
aad
or
scas
adc
dec
adc
xor
add
mov
outsl
data16
push
out
push
sarb
repnz
or
scas
xlat
decb
mov
aad
ret
out
xchg
sarb
repnz
or
inc
lods
insl
aam
mov
push
mov
push
decl
mov
aad
mov
aad
mov
aad
mov
cmp
aad
lret
add
subl
jo
xchg
sarl
mov
mov
jne
inc
rcrl
lret
jb
std
rcrb
lret
mov
sub
ss
jb
mov
daa
jl
lsl
inc
not
repz
aad
mov
dec
push
and
inc
sbbl
data16
jae
sarl
sbb
pop
out
repnz
stc
mov
aam
sahf
sub
pop
or
jge
mov
lret
out
repnz
into
fistps
rcrl
sub
push
subb
push
sub
xor
push
jae
dec
inc
lret
jbe
stc
mov
mov
push
cmp
pop
out
cmp
push
jo
cmp
push
jl
add
dec
push
jg
jne
adc
mov
sub
in
sbb
push
leave
leave
stos
mov
xchg
mov
je
xchg
pushf
lret
pop
pop
sahf
mov
push
inc
sahf
lret
jae
clc
cmpsl
test
imul
adc
dec
test
jge
insb
mov
out
mulb
mov
sbb
mov
outsl
pop
adc
push
jo
fistpl
iret
mov
sub
jne
inc
inc
lret
out
test
lds
xor
leave
leave
stos
mov
xchg
mov
jp
jb
imul
loopne
not
mov
and
mov
push
js
aam
out
gs
pop
sub
or
cmp
push
add
pop
out
xchg
xchg
pop
lret
mov
push
js
aam
out
gs
xor
testl
lcall
repnz
aad
cmp
leave
jns
sub
sub
cmp
insl
shrl
jne
pop
sub
jae
add
mov
ja
push
mov
leave
dec
mov
mov
mov
rcrb
stos
clc
pop
out
fsubrl
sub
adc
push
repnz
out
adc
dec
imull
not
out
repnz
fdivrl
cli
divl
add
out
repnz
ja
push
in
lret
mov
mov
mov
push
roll
out
nop
jmp
sub
sbb
sahf
int
out
minps
jge
cld
mov
cld
repnz
aad
divb
leave
jns
sub
sub
add
cmp
fmull
sbb
inc
jle
rcrb
cmpsl
mov
push
lahf
int3
jns
cmp
mov
add
xor
adc
pop
push
stc
mov
cmp
and
pop
jl
frstor
fs
pcmpeqw
pop
out
je
inc
mov
push
scas
mov
pushf
fwait
xor
cmp
popf
sahf
or
sbb
cmp
mov
adc
leave
inc
js
loope
xchg
fcmovu
cmp
inc
loope
js
xlat
or
lock
jmp
pop
xchg
test
inc
js
push
inc
lods
ret
aad
xorl
mov
bound
int3
int
mov
jecxz
adc
mov
lea
pop
pop
rorb
pop
xchg
inc
push
add
ret
aad
repz
adc
test
icebp
stos
aad
aam
test
mov
jb
leave
inc
js
loope
pop
sub
dec
js
xor
jnp
testl
jnp
xor
xchg
leave
data16
les
ljmp
leavew
repz
add
pop
int3
pop
xlat
jmp
jmp
setno
sarl
jb
fsubs
sbb
adc
push
mov
sbb
dec
dec
fucomip
les
lahf
add
pop
add
push
jmp
fdivs
fbld
pop
fwait
or
mov
mov
or
into
pop
pop
and
pop
sahf
fsubs
pop
push
xchg
sbb
xlat
movsb
push
xchg
rcrl
push
movsb
jmp
push
fsubr
xchg
fcomps
fdivrl
xchg
xor
mov
fsubs
cmpl
mov
push
xchg
xor
and
xchg
dec
inc
daa
add
hlt
mov
sbb
xlat
movsb
pop
xchg
mov
sbb
add
movsb
shlb
pop
and
pop
sahf
fsubs
add
jl
cmpsl
sbb
xlat
mov
dec
dec
fbld
sbb
lea
movsb
jmp
fsubs
xchg
fsubs
xchg
fsubs
xchg
fsubs
xchg
fsubs
sahf
fdivrs
arpl
inc
movsb
sbb
aas
pop
dec
filds
push
outsl
cmc
mov
pop
xor
pop
push
and
cli
ficoms
dec
push
push
enter
pop
fdivl
fldl
xchg
or
jae
xchg
push
js
ljmp
pusha
int3
add
fstps
lea
push
xchg
dec
push
cmp
push
jle,pt
mov
shl
cmpsl
adc
xorb
and
sub
xchg
xchg
scas
in
inc
pop
xor
out
mov
jno
mov
sub
or
xor
daa
mov
out
inc
out
hlt
dec
loop
jbe
test
fdivrp
out
mov
mov
dec
and
lahf
sarl
pop
sahf
fsubrs
gs
xchg
xor
xchg
sbb
jo
jne
push
int
jb
add
adc
sti
lret
jae
sbb
cmp
fsubl
dec
adc
scas
ret
cmp
std
arpl
lahf
jg
int3
das
ljmp
inc
mov
aam
cmc
cmc
test
push
aad
cmp
mov
mov
jg
sub
scas
ja
outsb
movsl
out
cwtd
or
icebp
pop
mov
sub
pop
pushl
jge
cmp
ret
pop
fists
xchg
cli
mov
fdivl
xor
ja
add
lods
rorb
add
push
repz
lret
lods
in
pusha
lods
and
mull
sub
xchg
inc
push
mov
int3
test
ss
rolb
data16
sub
cmp
jmp
pop
or
hlt
jg
push
outsb
sbb
ljmp
arpl
cmp
insl
mov
insl
in
mov
inc
bswap
jnp
jge
icebp
mov
insb
loope
xchg
fnstenv
adc
sarb
rol
movsl
adc
adc
ret
pushf
popa
inc
push
cs
int3
inc
mov
aad
xor
mov
inc
dec
aam
out
insb
push
dec
add
call
insl
lds
cmp
mov
out
jmp
pop
sub
add
ss
xchg
mov
std
fsubl
mov
jg
inc
xchg
stos
xor
dec
push
sahf
fdivs
sbb
cmp
mov
fidivrs
sbb
push
adc
jg
or
out
xor
xchg
popa
cmpxchg
jno
pop
inc
cld
cmp
addl
mov
jnp
inc
pushf
addr16
push
dec
mov
fmull
test
arpl
and
jge
jl
push
push
sub
movsb
jle
movl
and
ljmp
insl
ljmp
lahf
cmpsl
xor
pop
cmpsb
pop
dec
dec
xchg
jno
mov
add
repz
push
repnz
fsubl
xchg
jnp
test
push
mov
sbb
outsb
loop
push
mov
fistps
push
decb
movsb
dec
orl
mov
cmc
stos
sub
add
ret
ds
hlt
es
add
jl
inc
es
cmpsb
xchg
mov
out
xor
icebp
outsl
loopnew
sub
fisubrl
xchg
movsl
jge
out
test
fisttps
xchg
or
shll
test
xchg
fsubrs
xchg
add
xor
rolb
out
jp
dec
inc
adc
incb
xchg
arpl
pop
dec
xchg
rorb
dec
stos
sahf
fxch
jne
xchg
lcall
into
or
call
xchg
cmpsb
lcall
cmp
dec
jne
sbb
jmp
ja
shrb
cld
lret
jmp
mov
addr16
dec
mov
out
pop
sahf
fadds
fwait
fwait
cmp
imull
testl
adc
mov
push
in
lea
or
aas
mov
std
mov
imul
cmp
xchg
and
xchg
pop
pushf
jbe
loop,pn
ja
dec
dec
hlt
dec
pop
pop
xor
lds
scas
inc
leave
jmp
incb
cld
std
mov
scas
add
jbe
lock
add
jmp
fistpl
das
imul
cmp
sahf
inc
mov
das
push
loopne
cld
call
enter
add
cmp
adc
in
sbb
xchg
mov
lcall
xchg
icebp
ret
mov
sbb
and
movd
les
mov
clc
insl
and
xor
inc
cmc
inc
cmp
sti
inc
js
cmpsb
jg
fistl
sub
aad
mov
fisubrl
lcall
enter
xor
xchg
push
xor
mov
fs
or
test
arpl
mov
and
mov
sub
jp
add
inc
push
mov
push
call
pop
dec
or
pop
fstpl
xchg
lcall
mov
jg
std
aam
lods
test
movsb
mov
jmp
push
or
mov
cld
adc
scas
stc
out
lret
cmp
fnsave
cmpsl
adc
subb
add
loop
out
repnz
lret
push
jns
sub
fwait
sub
pusha
data16
sti
mov
inc
dec
mov
outsl
xor
cmpb
mov
pop
aam
ror
cmp
lret
ljmp
sti
add
sbb
fst
mov
jns
aam
movsl
mov
xchg
push
push
out
xchg
stos
imul
dec
mov
clc
mov
jno
push
inc
out
and
mov
push
pop
push
dec
cwtl
insb
pop
xchg
sbb
cmp
dec
or
das
mov
xchg
pop
or
xor
rcr
jp
push
dec
movsb
mov
or
add
imul
pop
push
shr
outsl
in
add
xchg
popf
cmpl
movsb
mov
mov
push
js
leave
jno
test
cld
pop
rclb
cld
push
call
pop
scas
xlat
push
cmpsl
ljmp
insb
jecxz
cmc
test
jne
mov
adcl
pop
in
inc
mov
out
das
adc
inc
dec
xchg
data16
loope
pop
dec
sub
add
jns
fimuls
pusha
scas
or
pop
out
gs
scas
aaa
sbb
xor
jno
add
mov
inc
test
div
xchg
loope
push
ss
loope
clc
or
fisttpl
jae
in
pop
aaa
test
dec
add
jl
and
push
xor
sub
mov
cmp
add
jle
add
push
fldenv
jle
add
movsl
repz
add
mov
push
lea
xor
imul
cmp
and
sub
clc
dec
jo
icebp
cmp
lds
jmp
leave
fsubs
sahf
fsubs
loop
ljmp
jne
push
fisubl
fidivrl
jp
lods
and
or
and
inc
int3
imul
lods
movsl
pop
sarl
fcomps
stc
push
cmpsb
jg
cmp
fwait
es
cmpsb
sbb
sbb
jg
inc
sahf
cmpsl
adc
das
stc
dec
cmp
sbb
cwtl
out
out
nop
in
sbb
sti
call
and
mov
mov
jmp
fmuls
movsb
dec
imulb
loop
cmp
sub
cmp
mov
popa
mov
daa
dec
cli
inc
sahf
xor
lret
xchg
cmpsl
fiadds
add
adc
dec
in
ror
stos
fnstenv
test
iret
cmp
stc
and
adc
and
sbb
scas
adc
test
mov
pop
mov
jmp
fadds
pusha
or
test
add
test
adc
and
push
cwtl
mov
cmp
jmp
or
sbb
cmp
add
sahf
fsubs
adc
fcoms
and
loop
loope
aam
out
call
std
fnstcw
sbb
daa
lods
sahf
cmp
or
in
jle
mov
adc
stos
pop
test
jmp
jno
cmp
leave
pop
jg
fmull
sbb
daa
test
loop
or
fnstcw
mov
and
pop
mov
clc
fnstcw
stc
xor
insl
call
fsubp
add
xor
push
scas
or
call
pushf
or
add
or
add
out
mov
ljmp
mov
dec
adc
xchg
dec
orl
scas
dec
cmpsb
faddp
jmp
push
std
js
jmp
sbb
mov
fisubrs
sbb
and
repz
mov
cs
and
push
pushf
loop
adc
ja
out
loopne
xrelease
mov
in
add
dec
imul
sub
fcomip
dec
mov
into
mov
xor
dec
imul
xor
dec
imul
xor
dec
imul
xor
adc
movsb
add
out
hlt
push
imul
mov
xor
xchg
loopne
add
push
imul
popf
push
in
loope
add
cmc
push
imul
jno
in
loope
aas
movsl
add
mov
xor
sub
push
in
loope
cmp
push
imul
fsts
xor
pop
into
movsb
add
dec
cmc
push
imul
lods
push
in
sbb
pop
xchg
jns
add
fs
push
mov
mov
in
jmp
push
imul
mov
shrb
arpl
mov
ficomps
cmp
pop
clc
pop
cld
notb
out
mov
shrb
repnz
mov
lods
cs
and
fsubl
xorl
loope
push
push
cmp
mov
leave
cmp
xor
xor
xchg
pop
xchg
jnp
sub
inc
ss
aaa
push
xlat
push
out
mov
pop
mov
cwtl
and
mov
cmp
and
ret
rorb
inc
repz
int3
xchg
jae
shlb
repz
insl
imul
add
loop
fcmovnb
xor
outsb
dec
xchg
sbb
ja
fsubp
roll
and
dec
push
jecxz
jl
insl
int
xchg
pop
pop
imul
and
mov
lcall
sti
scas
cmp
cltd
lea
mov
add
xorl
sub
outsl
cmpsl
inc
in
lcall
or
pop
les
ffreep
sbbb
mov
out
incl
adc
mov
mov
mov
adc
cltd
insl
mov
or
xlat
out
jns
or
and
push
je
and
xor
imul
insl
mov
out
ss
fld
out
sarl
movsb
sar
jp
inc
orl
add
jp
inc
jmp
adc
popa
mov
insb
mov
shll
or
dec
cmp
rcrb
and
das
and
sbb
cltd
clc
hlt
mov
in
pop
loop
push
test
add
push
repz
fprem
adc
jle
jae
aam
stos
mov
andl
mov
cmpsb
add
lcall
sahf
jmp
mov
cmp
stos
ret
push
and
rcrl
add
std
xchg
mov
les
push
xlat
test
pop
inc
lea
add
xchg
jnp
lret
pop
jg
push
mov
mov
xchg
jmp
pop
pop
mov
inc
xchg
push
mov
in
and
aas
cmc
dec
cwtl
in
xor
dec
test
lcall
negl
popf
sahf
and
cmp
shlb
sar
inc
in
and
jns
dec
jge
cmpsl
scas
divl
es
or
add
or
lods
ficomps
int3
aam
add
dec
jbe,pt
int3
push
and
les
ljmp
fwait
or
imul
jmp
xor
add
push
or
add
daa
outsb
cmpsl
inc
and
pop
xchg
add
xor
sbb
mov
mov
jp
cmp
push
fstl
sbbl
mov
pushf
push
jle
lret
jp
inc
nop
push
fmull
sub
imul
add
les
lret
scas
out
out
sahf
fistl
xchg
pop
mov
push
lret
sbb
inc
jp
stc
xlat
cld
xchg
cmp
push
gs
dec
pop
xchg
mov
add
push
mov
push
addr16
les
cmpsl
dec
sti
out
push
add
cmp
pop
outsl
adc
sahf
les
aas
push
jo
mov
sbb
xchg
data16
pop
and
std
call
pop
cmpsb
repnz
cmpb
popf
xchg
or
mov
push
imul
sub
cmpb
mov
dec
aaa
inc
ss
jae
je
mov
fmulp
call
push
xchg
push
imul
jno
push
stc
pushf
popf
ja
leave
out
jmp
inc
jno
xchg
dec
std
xchg
or
popf
out
sbb
push
add
xchg
add
adc
in
xchg
icebp
bound
fucomp
pop
cmp
movsl
std
addr16
push
cltd
dec
cmp
jae
dec
cmp
insl
xchg
inc
jmp
je
sub
lds
in
sbb
mov
rcrl
outsb
scas
mov
arpl
cmp
mov
mov
stos
sub
call
jmp
test
mov
mov
imul
xchg
add
idiv
adc
ror
les
or
lret
mov
dec
pushf
mov
pop
int3
jp
lea
jp
stc
adc
add
push
jg
adc
repnz
mov
push
test
push
jbe
jae
cmpsb
mov
jmp
or
gs
mov
hlt
rol
inc
gs
cwtl
xchg
out
mov
mov
jb
aaa
loope
pusha
enter
mov
lock
aaa
xor
push
out
pop
inc
leave
mov
mov
aaa
dec
sbb
js
sahf
pushf
outsl
ljmp
cmp
ljmp
sub
mov
jge
fld
mov
jnp
in
adc
mov
jae
jae,pt
stos
mov
xor
imul
outsb
xor
push
mov
fdiv
ficomps
mov
jno
xor
lcall
test
popf
jne
and
pop
out
test
pop
es
jno
das
cld
movsb
xchg
mov
insb
mov
xchg
jnp
adcb
jmp
inc
rolb
jns
outsb
jle
cwtl
cmp
lea
add
inc
xchg
lahf
pop
jg
cmp
scas
loop
fsubl
xchg
sti
inc
pop
repnz
fnsave
xor
and
sbb
in
enter
xchg
and
add
into
xchg
jnp
and
repnz
nop
repnz
mov
gs
das
jo
cmpsl
fidivs
xchg
jnp
and
dec
sbb
jb
fsubrs
xchg
test
and
int
and
mov
stc
out
sbb
pop
jb
mov
inc
add
adc
test
mov
add
cmp
mov
pop
mov
outsl
pop
cld
scas
jne
je
jbe
xor
ljmp
addr16
xchg
mov
mov
sti
movb
mov
loopne
mov
jecxz
jne
movsl
cmpsb
or
push
push
stc
and
jp
movsb
lret
jg
and
push
stc
cwtl
dec
sbb
imul
adc
mov
cmp
mov
mov
mov
mov
sbb
lods
mov
in
fnstenv
adc
sbb
imul
out
xchg
and
xor
lock
call
and
mov
popa
sti
dec
mov
xchg
loopne
lret
stos
aaa
inc
jno
out
and
adc
jnp
fildl
dec
jbe
imul
xchg
lret
js
lcall
push
sbb
ljmp
pop
leave
and
loopne
ret
cmp
jmp
xor
mov
les
shll
js
in
lock
pop
jmp
fcmovnb
ljmp
mov
add
xchg
xlat
inc
push
repz
fs
add
int
push
imul
mov
push
fdiv
push
iret
int3
ja
imul
cmpsb
les
sbb
pop
lret
push
lds
aaa
sbb
sub
mov
movsb
sub
xlat
imul
pop
inc
cwtl
setle
and
hlt
push
int3
or
imul
call
out
pop
xor
mov
add
fwait
jno
jbe
push
arpl
sbb
mov
mov
movsb
xor
enter
in
jnp
mov
pop
pop
xor
lock
jo
add
mov
shl
ds
or
mov
mov
ja
add
insb
shlb
imul
mov
and
cmp
cld
test
sar
xlat
sub
sahf
jle
mov
aad
xorb
dec
adc
fnstenv
sbb
mov
xor
sti
pop
js
pop
add
adc
cmp
cld
hlt
sub
insb
pusha
scas
and
outsb
pushf
lods
in
mov
incb
in
jns
int
jne
or
in
dec
pop
mov
or
push
push
mov
sahf
outsb
or
les
sub
dec
and
mov
in
dec
cld
mov
pop
shlb
inc
add
inc
fcmovnb
rclb
fsubl
lea
mov
jge
fwait
hlt
fidivrs
xchg
pop
or
jmp
shlb
rcr
notb
imul
nop
pop
lret
mov
ficoms
jecxz
subl
or
rcrb
xor
xchg
mov
push
ja
or
mov
sub
jmp
inc
pop
nop
repnz
pop
int3
sub
testb
mov
les
adc
out
ss
out
dec
xor
loop
lds
and
jo
pop
lcall
dec
clc
out
sbb
lea
es
dec
cli
imul
and
sub
push
dec
inc
and
lock
mov
imul
mov
push
sub
push
push
pop
push
mov
pop
orl
inc
adc
aam
sti
or
repz
pop
int3
xor
or
mov
jecxz
ds
scas
mov
pushf
jnp
xor
mov
xor
mov
lahf
fbstp
fnstsw
je
or
mov
sub
cmp
pop
int
cli
sahf
xor
scas
and
ljmp
push
lds
out
in
into
xchg
mov
daa
mov
fsubr
inc
aaa
pusha
lods
jo
and
test
stc
inc
rcl
jns
pushl
or
sahf
mov
cwtl
jno
inc
pop
push
insl
testb
ficompl
and
pushf
sbb
rcrl
std
or
test
mov
clc
aaa
cmc
xor
inc
fsts
cmpsl
test
jle
or
xchg
aas
pop
es
popa
or
stos
mov
shlb
rcrb
ds
inc
pusha
aaa
stc
fstps
call
movsl
mov
add
iret
pop
jp
mov
add
lahf
hlt
ds
lret
aam
inc
int
dec
cld
mov
sti
push
es
in
mov
rorl
dec
inc
insl
movb
stos
fidivl
xor
inc
pop
rcll
int3
jb
mov
mov
push
leave
outsl
lds
pop
movsb
loop
adc
mov
mov
aas
mov
lcall
das
popa
xchg
or
mov
and
and
adc
mulb
sbb
and
xor
in
into
push
test
divb
ss
stc
rcrl
roll
sbb
xchg
jnp
add
loop
sbb
scas
gs
ljmp
jbe
and
xor
stc
out
jno
les
in
xor
fcmovu
mov
ret
ds
sub
sbb
aas
inc
pop
bound
jae
jae
outsl
lock
test
enter
jl
iret
pop
loopne
xchg
pop
and
xchg
adc
notb
or
xor
xchg
aad
and
inc
fmuls
push
xchg
sub
leave
fadd
inc
adc
es
adc
aas
mov
aas
test
push
insl
insl
xor
repz
sub
dec
loopne,pn
les
cmp
dec
test
mov
fistpl
xlat
cmp
cmp
int
or
fsubrl
popf
sti
xchg
cli
push
push
jecxz
mov
movsb
inc
push
jl
push
push
cltd
mov
ds
pushf
mov
and
cli
das
outsl
mov
adc
mov
enter
xchg
std
xchg
stc
adc
les
call
xchg
lods
call
dec
or
js
loope
aam
aaa
push
cld
mov
jnp
xor
in
test
mov
fiadds
xor
outsb
lcall
lock
mul
mull
pop
and
cmp
sbb
mov
in
into
sbb
jo
push
repz
mov
fwait
enter
dec
or
sbb
add
inc
mov
daa
inc
andb
out
lea
fistl
rcr
push
or
clc
fdivrl
mov
add
mov
mov
xchg
lahf
incb
cmp
gs
pushf
or
jecxz
dec
scas
fildll
sbb
sbb
mov
sub
dec
incb
jmp
ds
addr16
sbb
inc
xchg
and
clc
push
xchg
ror
xor
mov
mov
pusha
sub
xorb
les
add
lods
adc
enter
lods
push
jo
dec
xor
sbb
sub
rclb
xchg
inc
mov
jl
fsub
xchg
mov
pop
xor
sbb
and
hlt
cld
xchg
cmp
mov
out
inc
lods
stos
gs
mulb
ret
fildl
mov
cli
dec
or
mov
adc
pop
cli
cwtl
or
mov
lods
jge
pushf
push
sub
dec
add
cmpsl
mov
lret
fwait
out
mov
das
push
int
pop
jl
or
mov
sbb
icebp
mov
cmp
add
test
lcall
pop
dec
lock
adc
call
int3
aad
addl
jnp
jbe
es
sub
or
imul
dec
push
push
icebp
loop
push
mov
loope
iret
fisttpl
lds
outsb
inc
call
push
mov
mov
imul
mov
imul
mov
out
lret
pop
mov
inc
push
sti
lods
lcall
stos
mov
aam
incl
inc
push
jmp
dec
in
xchg
aam
jge
xlat
ljmp
mov
xchg
jecxz
inc
aas
and
repnz
sbb
xchg
cmp
insl
testl
push
fldcw
stc
shrb
jae
call
xor
repz
mov
xchg
mov
adc
inc
jae
js
cmpsl
test
repnz
push
loopne
and
imul
push
xchg
mov
ljmp
mov
jo
xchg
push
sbb
int
fstpt
in
in
jle
fadd
push
stos
pop
mov
mov
pushf
jnp
xchg
jnp
jnp
insl
pop
loop
or
and
jns
in
xchg
sbb
adc
out
dec
and
cmp
test
repz
sub
call
add
jne
scas
fwait
or
jg
xor
sbb
jmp
xchg
hlt
cmpsb
jne
jns
shrl
imul
jmp
mov
ljmp
std
xor
mov
push
stc
mov
jmp
out
js
pop
das
cmp
mov
lea
mov
out
push
ljmp
sub
xchg
jae
and
mov
ljmp
mov
sub
xchg
push
bound
mov
xchg
pop
cmp
ret
mov
in
test
xor
sbb
mov
jecxz
adc
xchg
and
mov
aad
jl
ljmp
fs
mov
sbb
adc
push
mov
shl
cltd
imul
lds
test
inc
xchg
cmp
dec
pop
xor
pushf
mov
scas
adc
cmp
mov
xchg
xchg
mov
adc
or
xlat
es
and
std
xchg
enter
mov
or
xchg
add
jg
fldenv
push
insl
bound
mov
push
cwtl
mov
mov
sbb
das
sbb
ror
push
inc
cmp
xchg
setg
rolb
gs
mov
jp
sbb
jle
lods
jb
cld
stos
sbb
cwtl
notb
jno
hlt
dec
pcmpgtd
ret
js
dec
xor
mov
mov
mov
std
enter
dec
sbbb
clc
and
lahf
nop
sub
enter
lods
call
mov
jae
push
ljmp
sbb
jg
nop
movsb
cmp
dec
pavgb
aaa
inc
in
ret
mov
cmpsb
fildll
das
fs
rorl
push
arpl
out
fs
call
dec
and
pop
jp
adc
imul
mov
jg
inc
imul
fimull
sbb
out
pop
pop
orb
fdivl
stc
pop
mov
in
int3
adc
out
popf
push
and
xchg
test
pusha
inc
and
adc
dec
sbb
jo
cmp
orb
iret
jno
or
imul
orb
xor
cmpsl
or
lods
lea
xchg
xchg
mov
dec
imul
popa
jns
dec
in
inc
mov
mov
lea
push
test
in
rol
dec
xchg
push
sahf
iret
xor
xchg
dec
sub
lcall
cmpsb
jb
push
pop
mov
gs
xor
lret
add
and
fwait
pop
mov
insb
push
imul
mov
jo
or
es
pop
lret
sti
cs
inc
sub
loop
sbb
adc
add
dec
hlt
inc
inc
rorl
mov
repnz
xor
sub
adc
sbb
mov
rcrb
dec
mov
push
orb
arpl
pop
push
bound
dec
scas
inc
adc
movsb
xchg
mov
aas
mov
push
lcall
jmp
xor
loopne
out
rcll
and
jge
movsl
rolb
and
daa
stos
lret
movsl
lock
jae
push
sub
push
fmull
sbb
lds
mov
cli
sbb
mov
or
sbb
cmp
mov
imul
std
push
xchg
test
out
fdivr
mov
sti
adc
lds
and
mov
lahf
mov
mov
inc
jbe
incl
pop
xchg
jecxz
and
xor
jg
ljmp
jbe
in
fsubrl
movsb
insl
mov
std
rcll
leave
dec
mov
push
clc
jb
xchg
mov
cltd
imul
xchg
pop
cs
pop
lods
lds
jno
xchg
jl
push
cmpsb
add
and
ds
inc
xor
call
mov
sub
call
fildl
pop
dec
pop
in
mov
push
and
mov
mov
sbb
les
fmull
or
outsl
add
add
ds
sbb
in
xchg
mov
dec
adc
adc
jae
in
cltd
jae
mov
push
shll
rorb
lock
dec
sub
or
stc
loopne
sub
ret
les
xchg
jae
mov
sbb
jg
inc
lret
and
and
ljmp
cmp
dec
cmp
xchg
shlb
sub
xor
push
bound
pushf
insl
push
push
shlb
dec
pop
xchg
test
int3
xor
insl
adc
adc
inc
cwtl
fmul
scas
ret
enter
and
jp
test
push
add
xchg
add
inc
and
inc
mov
ret
and
xchg
out
sbb
pop
xchg
jnp
xchg
mov
icebp
xchg
jnp
clc
push
ljmp
pop
rclb
scas
xchg
cli
fldl
inc
adc
aas
orb
cmp
xor
jno
or
push
inc
insl
fcmovne
rclb
adc
ret
pop
mov
arpl
sahf
mov
fwait
out
inc
add
push
or
push
icebp
sti
scas
mov
push
mov
jmp
jbe
jmp
cld
xor
es
outsl
and
push
jns
dec
outsb
icebp
push
mov
push
hlt
sub
jl
mov
jne
and
pop
push
or
dec
adc
or
and
push
icebp
into
nopl
cmpsl
cwtl
movsb
enter
pusha
pop
pop
cmp
sar
scas
das
stos
iret
pop
aam
lret
loop
mov
jle
xchg
dec
mov
jmp
add
and
sbb
push
mov
int3
popa
sbb
stos
repnz
test
adc
roll
or
fldcw
dec
mov
add
mov
or
je
jnp
ljmp
dec
xchg
xor
mov
dec
push
pop
std
sbb
fcmovne
lock
jo
and
orb
out
insl
ret
push
mov
push
out
ja
ss
push
int
add
or
int
stos
mov
std
sarb
das
inc
add
xchg
mov
aas
lea
mov
in
arpl
sahf
pop
jmp
add
ljmp
bound
fstpl
add
pop
mov
and
iret
mov
add
push
push
mov
in
push
dec
push
mov
nopl
inc
cli
sbb
or
jle
and
testl
imul
fcmovnbe
mov
mov
pop
mov
add
lahf
subl
jg
ret
test
cltd
imul
cmpsb
xchg
xchg
dec
jno
shll
cmp
mov
jmp
lock
scas
xlat
pushf
lahf
mov
leave
jno
inc
popa
cmpsb
scas
cli
inc
jmp
push
cmpsb
lea
dec
and
add
cwtl
ja
xchg
mov
xchg
int
loop
aas
cs
js
adc
mov
into
jae
pop
sbb
clc
icebp
sub
int
add
push
lea
jp
ja
jb
in
add
sub
jp
push
mov
andb
sbb
lods
bt
jnp
sub
sbbl
dec
dec
nop
in
cmp
lret
cmp
scas
mov
les
ficoms
pop
jp
fwait
add
push
data16
or
mov
cmpsl
loop
pop
out
in
xor
rorl
jmp
xor
ds
push
mov
jbe
mov
mov
nop
dec
jbe
cmp
xor
push
popf
mov
in
movsb
outsb
add
lods
loope
xor
aam
vpaddq
sbb
unpckhps
xor
mov
cmp
sub
hlt
ficomps
cmp
fadds
pop
pop
fs
push
mov
es
and
sub
adc
insl
bound
sbb
add
lea
jnp
mov
sbb
push
cmp
and
inc
dec
in
flds
jle
insb
sbb
inc
dec
push
mov
mov
push
xchg
push
ss
dec
jge
push
jne
adc
dec
adc
call
cmp
pcmpeqd
jl
rcrb
ss
testl
sub
push
sub
jo
push
shr
lahf
xchg
lcall
test
data16
sub
or
adc
push
stos
cli
pushf
loop
lret
aad
shlb
mov
xchg
addl
test
pop
fisubrs
addr16
push
jns
out
sahf
xlat
and
sub
xor
decb
mov
lret
xor
adc
sahf
fbld
and
add
pop
scas
outsl
testb
push
mov
lods
push
cmpl
je
pusha
rcr
les
ret
ss
push
jb
orl
idivl
push
and
mov
push
and
stc
jno
and
push
sbb
testb
dec
fisubl
inc
dec
adc
inc
call
rorb
stc
nop
mov
js
sub
dec
lock
mov
mov
mov
loop
lds
and
pop
xchg
jnp
bound
xchg
addl
add
jecxz
in
sbb
cltd
loop
dec
and
xchg
jnp
leave
lods
repnz
jbe
test
fnsave
inc
xchg
outsl
mov
scas
daa
gs
jl
mov
and
pop
xchg
dec
or
and
jmp
inc
lods
or
enter
test
mov
rol
test
sub
jns
pop
insl
cmp
sbb
nop
mov
mov
out
das
mov
insb
lock
jp
jecxz
imul
jnp
popa
into
insb
ss
lock
std
or
push
mov
and
daa
je
push
ret
push
arpl
dec
push
data16
sbb
xor
movsb
flds
jmp
cmp
int3
push
lods
fdivrl
xor
xor
push
xorl
idivl
jle
out
leave
inc
add
cmpsl
mov
xchg
in
hlt
adc
push
push
shr
pop
movsl
jne
mov
xor
fldl
pop
or
pushf
xor
loop
add
jg
jno
xchg
pop
das
js
movsl
or
pop
aas
dec
fiadds
sub
lods
out
ret
adc
jmp
xchg
insl
addr16
ja
imul
sub
pushl
ja
out
int3
lea
jmp
scas
ret
sti
scas
out
push
xchg
ds
mov
mov
pop
test
lds
out
mov
popa
cmc
xchg
xchg
vpsubd
popf
cmp
sti
scas
push
pop
push
or
mov
out
jns
scas
dec
mov
jg
shlb
xchg
ds
clc
insl
jns
sti
scas
adc
jp
mov
loope
in
push
in
mov
mov
loop
sti
scas
inc
jl
mov
add
xchg
shlb
test
dec
cmpsb
movsl
repnz
dec
push
jnp
and
mov
pop
push
dec
pop
push
xchg
dec
imul
xor
lret
pop
lock
ret
mov
pop
pop
jae
adc
adc
and
mov
lods
loope
adc
adc
xor
std
popf
sub
sub
mov
mov
inc
inc
xchg
jnp
ljmp
mov
repz
cli
xchg
jnp
das
pusha
jns
les
sbb
ja
mov
or
mov
mov
jno
mov
push
ret
cmp
xor
add
fisubrs
xchg
test
in
mov
icebp
int
cli
lods
pop
mov
sbb
in
lahf
xchg
sbb
in
mov
jnp
popf
or
xlat
dec
rcrl
jno
inc
addr16
dec
mov
orb
int
inc
push
loop
fwait
sbb
pop
xchg
jnp
pop
fistl
xchg
adc
js
ret
mov
sub
hlt
faddl
inc
imul
inc
addr16
push
ja
xchg
in
mov
insb
xor
popa
in
inc
xlat
xchg
cmp
pop
mov
mov
imul
lahf
push
push
mov
jge
popa
mov
mov
push
imul
xlat
push
hlt
adc
mov
jg
cmc
jae
lds
aam
adc
push
ret
xchg
xor
scas
jnp
cmp
mov
leave
cmp
scas
sbb
lock
je
int3
push
mov
out
insb
sbbb
sbb
clc
inc
mov
adc
pop
inc
pop
xchg
popa
jge
inc
mov
cwtl
data16
inc
and
fsubrs
rcl
test
xor
jmp
int3
stos
lds
mov
dec
mul
add
shlb
or
imul
xorb
cmp
or
mov
in
push
into
pop
pusha
pop
inc
or
adc
or
sub
jle
cltd
mov
pop
jl
jne
jnp
pushfw
mov
stc
scas
dec
sti
xor
outsb
data16
addr16
fmuls
mov
cltd
int
fmuls
push
mov
and
jle
sti
in
scas
xchg
xlat
test
fstps
push
jmp
xor
push
mov
popl
mov
lds
and
xchg
ja
scas
jp
mov
jbe
adc
mov
shrl
add
les
xlat
pushf
sub
jmp
jb
js
adc
rcrb
push
pop
bound
xchg
mov
cmp
daa
je
push
fadds
nop
aaa
fdivs
hlt
mov
pop
cli
jne
pop
dec
xchg
jnp
dec
xcrypt-ctr
cmpsl
sbb
add
jns
lahf
and
sub
mov
lock
dec
enter
adc
sbb
cmp
mov
lret
imul
add
mov
xchg
jno
dec
mov
mov
test
adc
mov
lea
add
jae
hlt
test
rcl
sahf
lods
pop
test
sarl
sti
nop
push
adc
imul
xchg
jge
sbb
and
int
xor
je
sub
lods
icebp
in
pop
lea
insb
inc
sbb
adc
scas
fcmove
negl
xchg
inc
movsl
lahf
jb
stc
aad
or
xlat
dec
mov
fs
or
mov
js
imul
jns
in
aaa
xor
mov
lea
sbb
rolb
int
rcrl
rorb
jg
inc
dec
and
pop
inc
adc
mov
pop
daa
pop
push
adc
fsubrp
jp
out
xchg
sbb
cmpsl
mov
out
adc
dec
imul
aad
insl
aaa
xor
dec
imul
dec
imul
adc
aam
in
adc
sub
mov
pop
add
rcll
push
mov
push
outsb
dec
scas
out
imul
xor
and
test
aad
insl
aaa
xor
dec
imul
inc
xor
in
ds
jno
cmp
aad
pop
ret
rcrb
sub
push
mov
mov
lret
js
sbb
and
jp
or
jb
jns
jbe
sbb
mov
jecxz
add
and
xor
ficoml
aaa
xor
dec
faddl
enter
push
ficoml
lods
sbb
jno
rolb
pop
mov
sahf
dec
es
pop
push
or
std
fmull
out
leave
jl
cmp
pop
clc
lods
cmp
iret
mov
dec
and
xlat
in
mov
mov
fwait
mov
xchg
inc
ret
ffree
lods
mov
cli
or
mov
and
int3
push
sahf
sahf
out
cmp
mov
in
stos
loopne
cli
testl
fmuls
or
jo
cmpsl
pop
cmp
fidivrs
insl
stc
add
or
das
sbb
dec
cmp
fs
adc
mov
or
in
sbb
aam
std
cmp
mov
lods
ljmp
ret
mov
pop
mov
aas
ret
sub
lcall
mov
subb
cmp
and
sbb
ja
jecxz
dec
addl
mov
push
mov
mov
in
cmp
ret
xlat
in
cmp
andb
or
dec
add
push
mov
jecxz
mov
insl
arpl
outsl
cli
fbld
out
mov
ss
cs
movsb
les
int
pop
lds
or
dec
cmp
ret
arpl
pushf
jmp
push
rcr
jg
hlt
xchg
sbb
les
and
imul
push
xor
mov
faddp
dec
scas
jns
int3
mov
adcb
stos
out
cwtl
jecxz
inc
pop
xchg
clc
scas
xor
les
pop
add
mov
fiaddl
loop
mov
mov
ja
push
dec
mov
pop
int3
inc
and
lock
adc
adc
xchg
jnp
shll
pop
bound
cmpsl
test
jno
inc
xor
dec
mov
test
push
adc
mov
je
adc
mov
lods
idivl
dec
jae
bnd
push
xor
pop
out
cmp
dec
push
hlt
mov
aam
jnp
mov
rol
cmpsl
les
xchg
mov
xchg
jnp
cmp
pop
out
inc
adc
push
jb
push
jmp
in
ficoms
jb
dec
adcl
idivb
mov
dec
fadd
js
ds
mov
std
mov
leave
cmp
into
popf
rclb
mov
cli
xlat
cli
xor
mov
jmp
loop
xchg
jnp
repnz
push
inc
sarb
push
les
out
inc
fsts
fadd
movsl
xchg
fs
pop
pop
mov
sub
out
orl
push
mov
and
sarl
test
inc
xchg
jp
scas
jecxz
xchg
jo
sbb
dec
add
lds
clc
loopne
stos
subb
scas
mov
fcmovnb
fimuls
scas
mov
jno
les
out
cmp
mov
rol
inc
adc
adc
xor
cld
std
fs
insl
and
and
out
pushf
nop
arpl
xchg
iret
leave
imul
out
mov
out
jmp
xchg
mov
push
pop
loope
dec
lods
xor
xor
mov
push
into
sbb
dec
push
push
outsb
clc
pop
jle
pushl
out
fnsave
sbb
sub
scas
je
iret
mov
add
mov
mov
xor
rclb
or
test
or
mov
xchg
push
popa
ret
push
dec
lcall
xor
cld
cs
jecxz
or
addps
cmp
xor
cli
cltd
sbb
sarb
lds
ret
fldenv
adc
fcomip
sub
jae
mul
ss
cmp
xor
mov
or
or
mov
pop
fmull
or
pop
js
pop
shrb
cmp
xchg
jo
and
data16
scas
sub
mov
sbb
sbb
sub
sub
dec
mov
adc
pop
push
lds
sbb
les
pop
add
in
and
mov
lea
ljmp
pop
sbb
lods
xchg
std
js
or
mov
lds
xor
stos
xchg
ljmp
sub
cmpsl
and
sub
leave
jnp
adc
inc
mov
and
xchg
mov
pusha
cmp
push
cmp
or
push
push
das
shrb
push
gs
jg
fucomp
jnp
xor
jnp
je
xchg
mov
jmp
sbb
in
and
push
fcmovnu
repnz
daa
mov
cltd
shl
mov
pop
sub
movsb
mov
scas
divb
jecxz
loop
adc
sub
dec
out
cld
cs
aas
std
or
mov
mov
stos
dec
repnz
mov
sbb
mov
dec
cmpl
rolb
xchg
cmp
cmovno
push
jmp
ret
stc
vpsubw
std
jmp
clc
ret
push
stos
outsl
push
and
stos
data16
insb
xchg
lods
xchg
jns
cs
bound
xlat
ljmp
mov
rolb
adc
mov
jle
jmp
sahf
jle
imul
jno
test
xchg
hlt
xor
fisttpl
mov
je
ret
dec
or
jns
and
xor
jae
pop
test
add
mov
les
iret
cld
adcb
fildll
sub
jg
add
sub
xor
fistpl
loopne
lods
sbb
sbb
decb
outsl
xchg
xchg
sbb
add
pushf
sub
stos
in
into
fcoml
into
and
fidivl
mov
push
out
testl
fldcw
or
pop
mov
or
add
ljmp
scas
in
mov
lock
icebp
cmp
push
stc
inc
jmp
dec
popf
sub
lcall
incl
ficomps
andl
sub
xor
imul
pop
mov
push
sub
cmp
mov
lds
adc
xchg
ud0
add
and
mov
ja
nop
pushf
out
adc
add
les
cli
movb
jmp
mov
mov
add
sti
ss
aas
dec
ss
enter
incl
and
jno
pop
into
jnp
adc
lods
daa
dec
dec
sub
out
mov
fadds
sbb
or
xchg
dec
xchg
jnp
adc
jecxz
or
xchg
fadd
jno
call
in
cmp
in
push
in
bound
lahf
mov
dec
imul
dec
sbb
jnp
jns
inc
call
xchg
fimull
jo
out
push
or
popa
sub
push
xor
jmp
jmp
loop
call
jno
popf
push
dec
mov
testb
mov
in
icebp
cmp
mov
adc
mov
mov
adc
jecxz
jle
cmp
sub
cld
aam
mov
inc
idiv
lcall
call
dec
out
mov
mov
je
pop
jno
lock
sbb
insl
pop
dec
cli
push
es
cmp
mov
sbb
cmp
and
in
in
xor
pop
sub
jp
mov
addr16
mov
std
adc
push
add
add
sub
ret
les
add
cmp
and
arpl
repnz
test
xchg
out
xchg
mov
ss
push
dec
and
loopne
cmpsb
outsb
mov
lds
mov
jae
push
out
incl
or
outsb
mov
push
cs
pop
sbb
jge
mov
sbb
mov
and
outsl
fisubrl
cmp
cld
sub
bound
in
arpl
loopne
xchg
add
cld
xchg
sarb
pushf
cmp
sub
loope
andb
les
xchg
out
je
push
in
and
insb
leave
mov
gs
shl
sarl
testb
sbb
testl
bnd
ja
hlt
repz
rcr
fnstsw
adc
addr16
dec
sahf
movsl
inc
bound
adc
fldenv
shll
dec
cld
pop
loop
es
imul
mov
das
inc
subl
aaa
mov
inc
sbb
mov
popf
xor
cmpsl
test
push
mov
push
aam
pusha
hlt
lahf
pop
fs
sub
in
lahf
sti
mov
dec
imul
sbb
shl
fwait
mov
mov
out
inc
aas
mov
in
cs
repnz
push
sub
pop
test
addl
mov
imul
cmpb
pushf
push
jae
fstpt
pushf
subb
arpl
mov
icebp
push
imull
adc
sbb
xor
xchg
sub
add
pushf
sbb
jecxz
sbb
mov
pushf
sbb
pop
xchg
xor
test
ljmp
xlat
imul
mov
xchg
lock
sbb
mov
lods
repz
daa
outsb
dec
in
fcomps
ljmp
sbb
adc
pushf
push
outsl
cmp
push
sbb
xchg
or
outsl
adc
pushf
or
jno
xchg
adc
mov
xchg
mov
popf
addr16
ja
xor
sub
jbe
xchg
xor
dec
cltd
dec
int3
test
push
in
pushf
push
mov
in
pushf
push
sbb
lcall
out
pop
std
adc
int
mov
pushf
push
inc
and
push
outsl
jecxz
and
lahf
jle
push
aam
jmp
sbb
xchg
jne
add
push
rcll
adc
cwtl
sbb
negb
pop
sti
shrl
fildll
xchg
push
test
pop
cmp
imul
ljmp
sub
insl
pop
dec
adc
mov
out
jg
scas
ja
push
loope
aam
in
pushf
push
test
mov
inc
push
fisubrl
loope
mov
push
enter
or
in
pushf
push
repz
std
pop
sub
loopne
lds
dec
and
andb
add
and
pop
and
pop
das
dec
xor
dec
and
inc
bnd
cwtl
pop
push
xor
jmp
dec
sub
lods
cmp
add
scas
nop
idivl
add
sub
dec
push
push
psrlq
je
mov
subb
add
sahf
js
repnz
pusha
dec
inc
fnstcw
jmp
in
mov
or
dec
test
push
dec
mov
inc
pushf
je
jecxz,pt
ja
sub
xlat
mov
xchg
pop
jmp
jecxz
jmp
sub
xlat
lahf
cltd
adc
stos
sbb
into
push
inc
mov
push
ficoml
mov
and
mov
sub
xlat
mov
mov
pop
jecxz
jmp
sub
xlat
cwtl
sahf
adc
and
pop
in
in
dec
add
lods
mov
rcr
sub
out
xlat
or
sub
sub
fucomp
and
xchg
pushf
xchg
mov
mov
push
fisubrl
xlat
je
into
nop
out
cld
push
push
test
nop
out
cld
dec
push
leave
push
sar
dec
int3
loopne
ficompl
stos
and
jb
and
int
roll
test
cli
dec
push
ja
or
or
sbb
sub
insb
and
frstor
pusha
popf
call
and
frstor
pusha
mov
and
frstor
pusha
mov
and
frstor
pusha
mov
and
frstor
pusha
mov
and
rcl
and
mov
rorb
cmp
fistps
push
push
sub
jle,pn
repz
mov
sbb
add
cmp
mov
push
lcall
add
imull
rolb
pusha
outsl
gs
dec
xchg
hlt
jno
test
jne
in
mov
add
adc
xchg
hlt
jo
push
add
xor
test
fldenv
scas
cmp
xor
mov
xchg
pop
inc
pop
sti
inc
insb
pop
sub
cmp
adc
movsl
inc
insl
pushf
push
dec
cmp
jge
cli
xor
es
imul
push
dec
scas
mov
inc
movsl
add
hlt
in
mov
popf
push
and
sbb
cmp
mov
xchg
pop
imul
daa
rorb
mov
or
mov
fwait
or
sbb
es
sbb
xor
mov
fisttpll
cmc
mov
scas
or
sub
ds
cmp
xchg
push
and
sub
repz
or
xlat
in
shll
jmp
outsl
enter
push
dec
push
push
loop
out
bound
fsubs
fmuls
or
xchg
in
sar
or
jg
pop
push
aaa
and
sub
mov
sub
orl
mov
insb
loopne
fldt
mov
mov
xchg
shlb
sub
orb
aaa
mov
sbb
pop
mov
dec
adc
or
sbb
mov
test
mov
sub
in
stos
fdiv
cmp
fs
stc
mov
xlat
movsb
cmpsl
lods
shll
xor
mov
mov
lahf
test
addb
mov
or
sub
dec
inc
or
mov
arpl
cmp
adc
cmc
mov
mulps
or
pop
shrl
xchg
jne
cs
jb
sbb
outsb
xchg
js
sub
mov
or
mov
outsl
mov
pop
out
adc
mov
lods
fcomps
rcll
imul
pushf
and
fsts
leave
dec
mov
out
imul
repz
ret
rcr
rorb
es
out
fildll
call
sub
dec
lods
cmp
or
daa
xchg
add
pop
int3
shl
sti
jge
sbbb
pop
jnp
and
xchg
or
push
add
ss
ja
and
mov
les
scas
pop
sub
cmp
xchg
push
rorb
inc
cmpsl
imul
jno
pop
es
cmc
pushf
push
shlb
sub
leave
cltd
inc
inc
xor
jo
jo
lock
jnp
pusha
shlb
pop
pop
es
je
inc
mov
test
mov
mov
mov
mov
cmpsl
rcl
pop
pop
es
andb
xorl
add
inc
pop
out
xchg
sbb
fiaddl
ss
mov
aaa
pop
mov
sub
push
push
pop
data16
cmp
movsb
sub
cmovo
push
or
lahf
mov
cmp
es
sbb
adc
leave
sti
or
sti
or
das
cmpsb
mov
lret
sbb
or
in
adc
call
insl
mov
es
mov
das
imul
orl
add
pusha
enter
lock
stos
popa
lahf
push
cmp
divb
std
dec
cld
int3
push
xor
dec
sub
les
mov
fisubrs
dec
xchg
mov
lea
fwait
cmp
push
sub
jmp
imul
lds
xlat
xor
fbld
jnp
leave
lcall
fwait
shrb
sbb
pop
ficoms
pop
xchg
cmc
enter
sbb
cli
sbb
out
stos
pop
sti
fwait
mov
repz
mov
cwtl
fsubrs
sub
cmp
lcall
and
std
popf
pop
sub
mov
out
pop
es
scas
loop
fcom
mov
dec
and
mov
stos
sti
loope
adc
cmp
sbb
pop
mov
ds
xor
push
ljmp
xor
sbb
mov
in
cwtl
xchg
fidivrl
or
lds
or
imul
popa
dec
xor
adc
inc
in
push
jge
and
lods
sahf
ret
bound
adc
in
cwtl
test
jg
mov
xor
push
or
loop
pop
cli
fcmove
jge
push
jo
cmc
and
ret
add
jns
push
xchg
xor
mov
gs
lods
jo
hlt
jne
rcrb
mov
cld
and
and
push
mov
mov
das
ljmp
xchg
xchg
mov
inc
sbb
scas
xchg
push
std
daa
mov
mov
pop
adc
mov
repnz
adc
mov
jle
insb
mov
imul
lcall
loop
imul
aad
adc
stc
jp
lahf
lea
ljmp
dec
and
cmpsl
xchg
imul
aas
scas
lds
jno
je
adc
jl
enter
cmp
hlt
fstl
mov
ss
add
rcrl
mov
call
mov
pop
mov
xchg
lret
adc
pushf
dec
int
xor
or
int3
xor
inc
mov
cwtl
xchg
fists
cmp
cmp
test
popa
cmp
mov
or
testl
and
popf
pop
ljmp
jne
in
mov
sub
mov
pusha
jp
push
call
mov
push
mov
cli
xchg
fs
xchg
sahf
and
mov
xchg
iret
lea
lret
dec
or
aaa
mov
int3
dec
inc
clc
push
lret
nop
cli
outsl
fcompl
addb
jns
in
sbb
mov
push
pop
in
dec
mov
dec
sahf
pop
leave
mov
push
mov
cmp
cli
push
dec
add
in
sub
xchg
jl
enter
cld
or
pushf
jp
sub
scas
imul
cmpsl
test
cmpsl
test
gs
sahf
mov
inc
arpl
hlt
gs
test
xor
xchg
aaa
aad
adc
cltd
movsb
scas
shrl
test
inc
dec
inc
shr
jne
movsb
imul
stc
fs
in
dec
add
test
aam
cs
xor
adc
jnp
jecxz
push
mov
mov
test
fs
clc
add
lods
faddl
sub
je
mov
std
sti
cmc
or
jb
movsb
inc
and
repz
push
lahf
jbe
daa
push
cmc
pop
loope
shll
fstpt
push
or
inc
dec
in
cmp
leave
pop
inc
sbb
jno
fidivrs
cmp
pop
insb
or
mov
xor
mov
cld
mov
hlt
shlb
sbb
add
outsl
push
mov
inc
inc
insb
hlt
das
mov
loop
rorl
inc
inc
in
push
cmpsl
add
cwtl
out
sbb
push
adcl
cmp
sahf
jnp
xchg
sahf
aas
mov
int3
dec
xlat
into
jae
or
xchg
sahf
xchg
push
std
daa
scas
push
mov
sbb
pop
mov
and
sbbb
addr16
mov
mov
sub
push
xchg
mov
out
mov
insl
mov
adcb
sar
movsl
inc
dec
outsb
loop
in
mov
test
sub
inc
xor
mov
sub
roll
pusha
negb
fiadds
and
adc
inc
in
and
and
fs
add
mov
mov
xchg
sahf
fwait
xchg
shlb
rcll
icebp
les
jg
jae
lds
jae
sbb
fadds
mov
outsb
sub
xchg
dec
cmp
push
cmpb
jecxz
xchg
test
xor
push
mov
adc
enter
push
xchg
inc
push
mov
fldt
sahf
imul
push
mov
jb
push
mov
outsl
fldcw
popa
mov
pop
sbb
sbb
jl
xchg
inc
pop
xor
sub
and
leave
push
xchg
cld
mov
sbb
dec
push
mov
inc
adc
mov
dec
mov
sbb
repnz
repz
cld
push
insl
aad
call
lock
lods
int
sti
arpl
inc
xchg
push
xchg
sbb
ljmp
call
mov
adc
sub
and
es
cs
insl
push
aas
fcoms
jecxz
mov
sarl
cltd
xchg
mov
mov
jl
jae
test
push
addr16
add
xor
clc
shll
sbb
mov
sbb
jmp
sbb
mov
mov
fldenv
das
xchg
fldl
sti
xchg
add
mov
xchg
std
add
mov
in
jno
fstps
das
lret
xor
adc
push
imul
es
in
xchg
cmp
mov
jno
sbbb
int3
mov
pop
add
das
sbb
fstps
mov
test
add
cmc
sbb
loopne
and
pop
sbb
std
jmp
faddl
das
fsqrt
sub
xor
xchg
cltd
xor
or
xchg
mov
pop
cmp
shll
ret
pushf
cmp
jnp
push
and
das
xor
incl
mov
in
daa
in
iret
or
xor
push
out
fldcw
scas
sbb
dec
lock
xchg
std
sub
sub
scas
xorl
mov
pushf
and
sahf
xlat
test
adc
xor
push
movsl
aaa
sbb
jg
mov
hlt
xor
test
andb
test
not
mov
add
cmp
push
fcmovnu
mov
cmp
xchg
adc
fisttpl
mov
xchg
cmp
sbb
icebp
xchg
andb
add
repz
cli
sbb
mov
pop
pop
int
cli
sbb
xlat
mov
cmp
fists
mov
adc
xchg
repz
cli
sbb
mov
pop
jl
pop
pop
fimull
pop
pop
xchg
dec
push
ja
mov
out
sbb
xchg
adc
sarb
out
pop
cwtl
sbb
xchg
sarl
fidivs
mov
mov
cmp
push
jl
jbe
ds
aaa
pop
jo
roll
xor
inc
sbb
fs
aad
negb
cmc
inc
push
pop
mov
xchg
out
in
movsb
lock
aas
jg
negl
adc
sti
jge
and
mov
jecxz
fildll
cmp
mov
jle
mov
jle
mov
cmpsl
mov
add
stc
imul
lods
jmp
push
xchg
fisttpll
addr16
lret
cmp
insl
stc
mov
mov
add
xchg
or
sub
cmp
insl
stc
mov
mov
xchg
hlt
fsub
jle
mov
push
xor
cld
lahf
or
cld
lahf
ss
mov
cmp
jge
out
repnz
mov
mov
mov
cmpsb
gs
sbb
notl
fdivs
jle
pop
adc
insb
iret
mov
out
mov
push
stos
adc
dec
cmp
lret
fstpt
jle
xlat
les
insl
push
and
push
popa
and
mov
push
les
xchg
aaa
fwait
test
jmp
cmc
mov
push
adc
cmp
in
mov
mov
jle
lcall
and
sti
iret
jns
jo
cmp
dec
cmp
fstpt
jle
xlat
pop
les
insl
mov
lock
popa
and
cltd
cmp
adc
fstpl
sub
popf
xchg
icebp
movsl
sti
sbb
jg
or
inc
test
mov
dec
repz
outsb
sbb
add
int3
fdivrs
jle
repz
adc
push
hlt
mov
clc
or
push
call
mov
pop
mov
ss
cmp
das
je
inc
jbe
shlb
cld
lahf
dec
cmpl
mov
hlt
bound
test
push
dec
mov
jle
jp
pop
jnp
xor
cmpsl
mov
dec
or
cmc
mov
sub
mov
mov
sbb
loope
clc
cwtl
pop
loope
scas
pop
addr16
jle
loop
or
cmp
push
cmc
cmp
jge
mov
imull
fdivrs
inc
adc
in
jge
mov
or
lcall
xor
leave
xor
add
cmp
filds
adc
inc
dec
iret
shrb
movsb
movsl
sti
dec
or
or
outsb
sbb
imul
cmc
mov
lcall
cmpl
dec
or
enter
cmc
mov
inc
cmp
xor
push
cmp
int3
mov
mov
cmp
rcr
andl
data16
insb
repnz
inc
adc
mov
push
sbb
ljmp
mov
mov
or
repnz
mov
imull
inc
addl
mov
clc
sbbb
div
in
jl
mov
cmp
xchg
outsl
les
add
test
add
cmp
ss
pop
cmpsb
and
lahf
or
cld
lahf
cmp
mov
adc
xchg
dec
mov
incb
data16
jle
loop
pop
movsb
gs
xor
ret
sbb
test
stc
mov
cmpsb
popf
fnstcw
cmpsl
sti
popa
sbb
cmp
pop
jae
cmp
aaa
jg
imul
mov
fiaddl
dec
dec
fsubrs
movsb
inc
in
pop
insb
iret
adc
sub
outsb
or
cmp
stos
sbb
inc
push
xchg
mov
shll
out
movsl
sti
dec
or
loop
xchg
sti
inc
cmp
lret
fstpt
jle
xlat
les
insl
push
and
push
popa
and
cmp
adc
dec
in
sbb
pop
inc
push
mov
or
fnstsw
mov
test
fsub
jle
mov
push
xor
cld
lahf
or
cld
lahf
xor
mov
cmp
insb
lahf
aaa
loopne
sub
push
jecxz
jg
mov
aam
orb
push
xchg
pop
sahf
jge
mov
cmp
sbb
insb
iret
push
mov
mov
cmc
scas
push
add
adc
cmp
icebp
jge
mov
or
shl
jg
mov
cmpsl
aam
test
mov
xchg
xor
into
aam
mov
push
or
hlt
push
mov
dec
scas
push
push
sub
mov
mov
cmp
test
mov
mov
loope
and
imul
push
jmp
cmc
mov
push
fwait
jle
mov
mov
test
mov
mov
pusha
in
nop
cmpsb
push
add
mov
cmpsl
rorb
add
mulb
mov
out
mov
inc
xor
mov
test
pop
jmp
cmp
test
add
jle
mov
push
cmp
lahf
or
cld
lahf
and
mov
dec
sbbl
jns
not
add
repnz
cmp
push
nop
add
adc
or
enter
cmc
lds
sbb
adc
sbb
mov
cmp
push
push
fiadds
mov
pop
sarb
jle
int3
mov
add
xor
or
mov
out
roll
out
int3
lea
fimuls
pop
out
cli
mov
fimuls
add
cld
push
xchg
je
cmp
sti
sub
testl
sarb
cmc
mov
push
sbbl
or
cld
lahf
ss
mov
adc
xchg
mov
test
mov
pop
out
mov
std
imulb
inc
xorl
cmp
cmp
sub
mov
ljmp
ljmp
mov
hlt
mov
jle
jecxz
loop
jle
pop
sbbl
data16
mov
inc
and
cmp
xor
divl
cmp
pop
mov
test
push
jecxz
cmc
mov
push
aaa
xchg
pop
cmpsb
cmp
lahf
or
cld
lahf
push
hlt
mov
aas
jg
stos
xor
mov
xchg
pusha
pusha
lcall
xchg
mov
add
movsl
sti
inc
cmp
int3
fstpt
jle
xlat
push
les
popa
and
fnstsw
jle
testl
ret
into
xchg
rolb
dec
mov
push
mov
inc
push
xchg
push
add
cmp
cwtl
add
mov
jne
cmc
mov
ret
or
out
push
xchg
cmc
pop
addr16
leave
mov
fsubrl
fdivrs
inc
adc
xchg
jge
mov
sbb
gs
jle
iret
cmp
dec
hlt
loop
test
mov
in
movsl
sti
push
mov
push
ret
imul
or
ds
xor
lcall
xchg
cmc
mov
push
cmp
lahf
or
cld
lahf
and
mov
dec
sbbl
mov
test
inc
daa
dec
mov
cmp
push
cli
hlt
push
sbb
clc
mov
cld
rcll
push
and
pop
fcomps
ljmp
inc
push
xchg
mov
aad
dec
mov
dec
push
aaa
mov
jge
mov
jmp
adc
cmp
in
jge
mov
loope
test
pop
jmp
cmpl
mov
dec
mov
dec
cmp
mov
push
cmp
push
cmpsb
xor
lahf
or
cld
lahf
cmp
mov
test
in
lods
dec
inc
int3
jge
mov
hlt
mov
or
lock
dec
sbb
xchg
inc
mov
in
int3
shl
cmp
sub
loop
xor
gs
int3
insl
jno
into
sti
or
xchg
cmp
push
ds
jge
mov
ljmp
cmp
icebp
jge
mov
loop
xor
lret
out
push
hlt
mov
rcll
add
cmpsb
xchg
jmp
cmp
pop
ljmp
fidivrs
ljmp
inc
icebp
push
iret
pop
into
leave
sarl
jle
mov
mov
outsb
and
ljmp
enter
cmc
jno
ss
aam
xor
or
add
cs
sbb
push
inc
mov
mov
dec
loope
scas
push
and
repz
stos
fstl
push
cmc
cmp
outsb
jle
add
je
insb
iret
push
mov
mov
lock
pop
add
adc
cmp
xchg
jge
mov
call
mov
loope
insl
fdivrs
jle
xor
mov
int
sbb
clc
cmp
iret
cmp
push
add
dec
mov
lret
jle
push
mov
jnp
cli
xchg
xchg
xlat
sbb
and
hlt
mov
mov
xor
test
mov
loopne
hlt
mov
sbb
pop
cmpb
cmc
add
jbe
inc
lds
dec
dec
mov
cmp
sbb
cmp
jb
inc
cmp
cmp
fscale
xchg
inc
into
inc
mov
add
mov
jns
lret
jle
popa
jmp
add
xor
or
ljmp
cmc
push
xchg
hlt
mov
jle
dec
mov
int3
stos
sarl
jo
mov
xchg
insb
xchg
push
iret
data16
mov
gs
jge
iret
push
test
mov
imull
fdivrs
inc
adc
xchg
jge
mov
or
jns
scas
pusha
pop
and
push
dec
fnclex
mov
sub
insb
xchg
dec
pop
jecxz
adcb
add
mov
cmp
inc
xor
insb
iret
lods
sbbb
outsl
out
insb
xchg
cmc
mov
push
xor
cld
lahf
or
cld
lahf
dec
hlt
mov
cmp
dec
push
fbld
sahf
jmp
pop
in
push
xchg
sti
aad
jle
insb
add
or
mov
pop
jg
mov
call
dec
outsl
jge
daa
insb
iret
cmp
mov
movsb
xor
testb
gs
popa
addr16
add
fisttpl
rolb
dec
hlt
sub
or
cmc
mov
pusha
testb
gs
cli
addr16
jns
cmp
leave
inc
pop
addr16
leave
mov
imull
fdivrs
inc
adc
in
jge
mov
or
push
testl
rclb
mov
cmpsb
cmp
add
cmpl
add
push
dec
std
movsl
or
loopne
fstpt
jle
xlat
les
insl
push
and
push
popa
and
sarl
jle
adc
xlat
mov
lods
inc
add
sti
add
dec
mov
cmp
add
fildll
aas
xorl
cmp
cmp
pop
cld
cmp
push
lock
iret
fs
hlt
mov
jg
leave
mov
lock
pop
add
adc
cmp
xchg
jge
mov
call
jb
scas
jae
fndisi(8087
cld
jo
add
cmp
mov
adc
jb
hlt
add
jle
mov
push
cmp
lahf
or
cld
lahf
xor
sbbb
pop
data16
jle
dec
jne
jle
inc
cmpsl
sti
inc
cmp
fstpt
jle
xlat
pop
les
insl
mov
lock
popa
and
cltd
cmp
adc
jg
inc
adc
insb
iret
add
and
mov
mov
cwtl
dec
push
adc
mov
cli
jns
lret
dec
inc
mov
cmp
cmpsl
xor
push
ror
lods
loop
jns
dec
and
sub
in
jnp
sub
insl
xlat
repz
hlt
cld
jl
xchg
fsubr
out
lock
fildl
sbb
mov
mov
inc
inc
dec
or
pop
je
jmp
push
dec
mov
outsl
sub
xlat
jae
lea
imul
xchg
push
in
inc
xor
out
stos
stos
fwait
adcl
lahf
pop
je
stos
sti
jo
movsb
jae
out
fs
push
hlt
lret
inc
and
js
leave
mov
pop
dec
or
loopne
xlat
jae
dec
adc
mov
icebp
scas
dec
lret
and
les
repnz
js
movsb
jae
jns
or
in
stos
push
adc
mov
cmpsl
sbb
rclb
fsubp
aad
adc
sbb
bound
dec
push
jl
outsb
movsl
jae
sbb
jae
aaa
lea
cmp
adc
jae
in
xlat
jae
mov
jae
push
fldenv
lret
mov
jbe
in
rcll
out
push
push
adc
stos
push
ja
rorl
sub
dec
out
push
fs
rorl
jno
lcall
mov
xlat
xchg
and
xlat
xchg
and
xlat
xchg
dec
popa
jae
and
pop
insl
hlt
arpl
lret
pop
xor
into
add
iret
scas
pop
mov
das
xor
push
sub
add
in
pop
fcomip
xchg
dec
jmp
adc
daa
add
or
imul
cs
cmp
mov
sarl
push
xor
stos
pop
outsb
sbb
sbb
adc
repnz
push
cli
jge
jno
or
add
xchg
fimull
aas
jl
dec
ret
adc
mov
mov
popa
push
stos
cmp
sahf
mov
add
pop
and
out
xlat
cwtl
bound
or
push
push
lret
xchg
and
je
cmp
int3
jecxz
push
add
loope
and
sub
mov
xchg
jo
sti
mov
adc
in
and
jmp
ds
fiaddl
test
mov
call
pop
pop
andl
insb
fwait
loope
mov
mov
xchg
add
cld
stos
ja
les
fadds
dec
pop
shlb
loop
lret
push
jl
pop
loope
int3
shlb
inc
fstps
mov
jg
out
push
andl
jecxz
pop
mov
and
inc
popf
mov
mov
jge
test
hlt
mull
fcomps
hlt
push
xchg
pushf
repnz
mov
and
adc
shlb
sbb
push
dec
add
dec
call
ljmp
sub
nop
aas
pop
jb
lret
push
push
repz
call
movsb
add
fcompl
cmp
pop
out
sbb
mov
shr
xorl
mov
mov
lock
push
pop
pop
mov
xchg
popa
aas
gs
cmp
cmpsl
push
cmc
xor
jl
lahf
inc
lds
jo
mov
lahf
imul
pushf
aam
adc
cwtl
mov
outsb
lock
notl
mov
enter
outsl
pusha
xor
out
push
mov
dec
hlt
fnsave
pop
aad
pushf
mov
bound
mov
testl
decb
inc
xchg
aam
shll
mov
jnp
hlt
cmpl
fldcw
jnp
xchg
mov
xlat
push
lods
mov
jnp
fstpl
mov
rcll
dec
xor
and
sahf
jns
jno
push
iret
and
or
movsb
bound
mov
cmp
mov
pop
fimuls
xor
and
push
or
mov
imul
out
mov
in
mov
ret
pop
stos
lcall
jb
jge
ret
fwait
add
sbb
test
in
jns
loopne
into
mov
cmp
shl
jmp
add
in
push
fiadds
movsb
xchg
and
and
out
sbb
push
xchg
push
jbe
and
cmp
fldenv
fcoms
cmpsl
cmp
fucom
lahf
cld
xor
pop
gs
xlat
shlb
cld
aas
out
pop
lcall
sahf
repz
cld
and
pop
gs
xchg
mov
or
sub
push
push
stos
add
in
ds
idivl
and
rcll
push
push
fldl2e
lahf
sahf
lret
push
mov
mov
into
jnp
lea
mov
out
cwtl
mov
sub
adc
inc
jmp
xchg
push
push
jp
mov
sub
ja
and
adc
cmp
or
addr16
xor
adc
mov
inc
mov
out
test
sti
loope
adc
sub
push
or
test
test
in
cld
leave
repnz
fists
addl
fnsave
call
repnz
pusha
inc
push
pop
mov
pop
ss
mov
lahf
inc
xor
sub
mov
xlat
data16
dec
in
mov
rcll
push
push
inc
or
lret
add
push
ss
sbbb
xor
mov
fcompl
mov
in
rol
push
sahf
out
push
or
repz
outsl
je
mov
mov
lods
push
shl
jge
out
popl
rcl
dec
fstps
mov
ret
and
adc
adc
adc
call
xchg
aas
and
loop
ret
adc
lock
lods
add
inc
shlb
add
or
arpl
popa
outsb
mov
sub
cltd
icebp
pushf
cmp
out
lods
add
inc
test
xor
mov
out
push
pop
repnz
or
bound
arpl
lret
mov
and
sbb
and
mov
rcr
aas
rorb
orb
decb
inc
dec
cwtl
jbe
pop
icebp
cli
mov
movsb
sub
pop
fists
das
aad
and
shr
test
and
jno
lods
outsb
push
push
je
fsubrs
test
testl
push
ret
xlat
xchg
iret
in
or
lret
adc
cmovo
add
sbb
fsubp
pop
les
cmp
pop
and
push
aas
fidivs
outsb
aad
push
mov
mov
pop
adc
adc
and
aaa
mov
mov
gs
test
dec
mov
mov
subl
adc
dec
in
xor
add
inc
ljmp
pushf
push
int
stc
xchg
hlt
jb
adc
addl
flds
mov
out
lahf
in
mov
jno
adc
inc
mov
rclb
mov
aam
mov
ret
inc
icebp
pop
jnp
push
ficompl
gs
dec
jb
pop
inc
pop
mov
lods
push
push
mov
jo
out
dec
fwait
in
xchg
sahf
lret
xlat
xchg
sub
js
movsl
in
gs
mov
cmp
pop
cmp
xchg
and
cli
into
fmul
mov
ljmp
pop
or
sbb
sti
addl
xchg
xor
lahf
cmc
shll
mov
mov
xor
sti
rolb
bound
mov
push
push
xor
loop
neg
insb
into
jmp
cli
cmpsl
bound
mov
into
push
and
leave
hlt
jle
push
sub
ds
jg
lahf
aam
sbb
push
stos
and
sbb
jb
icebp
aaa
ljmp
adc
and
es
mov
dec
push
pop
xchg
aaa
mov
xchg
mov
movsl
xchg
int3
notl
xor
call
and
cmp
addl
jmp
add
lods
jnp
mov
jp
pop
leave
fwait
and
push
push
mov
sbb
cmp
inc
jmp
ja
or
pop
and
push
and
and
push
cmpsl
jl
in
jo
push
dec
mov
scas
pop
cmpsb
mov
stc
push
sub
cld
mov
mov
pop
jg
dec
and
pop
sbb
movsl
in
adcb
insl
scas
inc
cmp
xor
mov
inc
sti
imul
ss
cltd
loop
int
out
movsb
fsts
stos
or
ret
inc
lar
mull
es
hlt
adc
ret
xor
sbb
cmp
lock
adc
jp
jno
lcall
and
test
gs
inc
in
jb
fsubrs
sahf
dec
add
call
pop
sbb
inc
pop
adcl
sub
pop
and
je
mov
lahf
ja
mov
dec
loope
outsb
dec
out
mov
pop
fimuls
adc
popf
adc
push
pop
fiaddl
dec
inc
jnp
fldenv
test
xchg
int3
push
int3
xchg
je
dec
mov
fmul
sub
sub
or
push
or
inc
pop
les
fs
dec
sahf
push
adc
fisubl
dec
mov
rorl
and
sub
sbb
lods
loop
cltd
fnstenv
rorb
jb
push
push
into
jg
mov
shll
push
repnz
sbb
push
adc
leave
int
dec
jp
xchg
lcall
es
inc
stos
push
add
dec
ja
mov
add
cmp
je
mov
mov
test
scas
xor
aaa
mov
fcoms
fucom
std
insb
add
cltd
in
test
cli
jl
push
add
mov
out
insb
aad
scas
or
sbb
popa
pusha
mov
sahf
lahf
cmp
push
out
mov
push
mov
mov
add
daa
bound
pop
sahf
dec
dec
push
aam
jne
and
lds
clc
shr
pop
outsb
fcomp
lds
sbb
mov
push
sub
aam
cld
or
sbb
and
inc
daa
mov
mov
xlat
xchg
insb
test
mov
mov
cmpsb
add
fsts
leave
push
adc
pop
add
mov
xchg
and
mov
mov
sbb
lea
pop
and
and
sbb
aad
cmpsb
stos
or
lods
test
jmp
mov
sub
xchg
std
test
int3
cmpsb
scas
cli
fmul
pop
jae
dec
sub
ss
xchg
push
mov
mov
xor
ja
fwait
jecxz
clc
imul
adc
adcl
lods
pop
xchg
add
inc
movzwl
leave
dec
pop
std
and
pop
jmp
stos
in
inc
cmc
push
sub
ss
popa
fisttps
mov
insl
push
pop
inc
popa
sub
das
fildl
pop
add
test
cmc
test
xor
out
fidivl
cmc
es
mov
and
je
testb
dec
pop
aaa
ret
xor
mov
pop
and
enter
js
or
je
enter
test
mov
jbe
enter
popa
mov
dec
fucomi
mov
rcrl
into
pop
sub
dec
dec
fldt
imulb
hlt
add
lret
dec
fisttpl
pop
add
orb
popf
pop
add
test
cmc
outsb
mov
xchg
xor
add
ficomps
adc
push
adc
mov
pop
clc
add
out
mov
xchg
repz
loopne
testb
mov
insb
dec
hlt
adcb
pop
jne
fs
ds
out
cmpb
cltd
mov
repz
loopne
testb
mov
movsb
cmp
hlt
jbe
or
andb
data16
xlat
mov
lods
sarl
mov
adc
lret
jns
out
mov
test
popa
out
inc
shll
jb
sahf
adc
movsl
int
scas
jae
cld
adc
sbb
sub
jg
mov
fs
imul
lods
xor
rorb
jecxz
inc
xchg
mov
pop
and
inc
in
push
ret
pop
ret
dec
push
loope
cs
adcb
mov
jg
push
jp
iret
add
cld
lods
mov
lret
vpsubw
mov
or
sbbb
mov
adc
fiadds
mov
add
push
jl
xor
es
add
and
push
inc
sub
sub
xchg
mov
lret
mov
les
xor
pop
adc
jmp
addr16
icebp
addl
pusha
sti
cld
imul
add
adcl
dec
jnp
arpl
mov
scas
jge
dec
pop
push
jp
mov
repz
mov
xchg
leave
pop
xchg
fstpl
and
push
add
into
mov
stos
jno
mov
or
cwtl
jle
push
mov
inc
mov
lods
xor
sbb
data16
fiaddl
push
js
test
mov
or
fs
xor
add
jbe
dec
aam
fisttps
mov
pop
jae
xor
insl
dec
add
pop
adc
loope
pop
jbe
loope
flds
or
stos
mov
dec
sub
or
mov
je
or
int3
sub
ds
insl
pop
inc
mov
mov
int
jbe
cmp
mov
add
lcall
lret
xchg
nop
aad
add
gs
mov
inc
loope
push
push
mov
mov
dec
dec
sub
dec
pop
cmp
adc
mov
inc
xor
inc
and
test
cmovo
ja
and
fcmovnbe
in
push
pop
ljmp
cld
xchg
or
insb
daa
arpl
fmuls
ja
aaa
bound
push
pop
inc
lods
rorw
sbb
loop
lods
js
clc
ja
or
xchg
sbb
arpl
in
repz
cmp
add
ret
sahf
push
adc
jbe
inc
pop
mov
inc
jle
pop
mov
lods
mov
cld
adc
insl
push
icebp
sub
jnp
lret
inc
xchg
dec
ljmp
test
mov
pop
cltd
xor
jge
fstp
bound
mov
aaa
push
rorl
and
ss
push
js
push
out
pop
push
pop
dec
or
mov
mov
cld
std
int
fs
cmp
lahf
mov
es
mov
addr16
loop
out
lds
test
pushf
movsb
and
jbe
pop
pop
ds
mov
out
repnz
inc
fldl
int3
or
cmp
xor
and
fisttpl
faddl
adc
pop
or
pop
xor
lcall
push
clc
pop
push
das
push
mov
das
mov
jp
pusha
insl
inc
push
and
mov
xchg
push
mov
stos
lods
mov
popf
push
repz
addb
jo
shl
push
daa
ret
xchg
nop
bsf
push
dec
fldl
ljmp
add
clc
in
pusha
repz
inc
mov
fs
adc
jge
sqrtps
adc
pop
jbe
or
imul
decb
fistps
pop
add
imull
fs
and
or
stc
sarb
and
ljmp
push
sub
call
pusha
push
loop
or
sbb
popf
xchg
sub
dec
ljmp
loope
mov
push
xchg
rcrl
mov
pop
out
xchg
call
addb
fisubs
pop
adcb
int3
hlt
subl
sbb
out
pop
lahf
sub
popf
scas
iret
xor
out
dec
mov
int
mov
test
push
ds
mov
sbb
pop
xchg
icebp
sub
xor
dec
mov
push
sbb
lods
inc
mov
loope
dec
cmp
dec
aas
push
mov
rcrl
mov
into
inc
xchg
cld
inc
fisttpl
in
loop
and
rcrb
xor
xchg
push
jmp
add
stos
sti
xrelease
popf
and
pop
test
xor
movsl
scas
iret
push
cmc
test
cmp
mov
int
jl
test
mov
adc
insl
xchg
test
arpl
mov
aam
mov
imul
bound
arpl
lea
fisttps
inc
sub
lcall
cld
inc
ljmp
stc
insl
ror
jp
sub
es
pop
in
repnz
daa
rcll
push
pop
addl
cld
or
fidivrl
jmp
xchg
jae
roll
jle
pop
jne
test
cwtl
xor
popa
insl
fadd
in
sub
mov
push
inc
icebp
rcl
push
adc
inc
xchg
mov
movsb
sarb
mov
clc
int3
imul
and
pop
mov
mov
icebp
cmc
pop
adc
sbb
pop
cld
inc
sahf
shrl
out
ret
and
dec
std
inc
inc
test
sub
xchg
in
sub
mov
roll
add
fbld
jo
clc
xchg
jo
outsl
fidivl
popa
sub
and
pop
shll
fisubrs
xchg
aam
xor
bound
inc
add
pop
dec
fidivs
sbb
daa
lds
imul
mov
pusha
jmp
testl
int3
test
into
stos
inc
adc
cmp
repz
dec
notl
imul
insb
fisubl
mov
addb
inc
add
mov
ljmp
xchg
sub
leave
push
jp
sbb
cli
cmpsb
or
mov
adc
sarb
insb
movsb
xchg
sub
xchg
test
push
out
and
notrack
or
ret
movsl
pop
leave
xchg
sub
iret
inc
loopne
cmp
jb
arpl
push
pop
sti
adc
jecxz
xchg
push
inc
sbb
and
rorl
pushf
jg
scas
insb
addr16
cmc
gs
imul
push
cmpsl
xchg
sub
imul
adc
mov
pop
mov
sub
or
sub
pop
pusha
sbbb
dec
jecxz
jp
call
nop
fwait
loope
ss
and
inc
mov
dec
xchg
popf
xor
inc
subl
mov
outsb
pop
mov
inc
outsb
clc
inc
cmp
push
mov
mov
and
inc
cld
cmpsb
hlt
inc
fsubrl
stc
andb
in
enter
test
repz
xchg
mov
cmpsl
and
mov
insb
push
lods
inc
cmpsl
ret
dec
int
cmp
andl
sbb
movsl
aaa
xor
test
clc
xor
xchg
sbb
adc
call
pop
ljmp
jecxz
ret
xchg
push
decl
add
pop
aaa
push
and
inc
rorl
inc
pop
inc
pop
jo
inc
jge
cmp
jp
sub
addr16
popf
addl
les
adc
sbb
lret
stc
fmuls
rorb
das
push
incl
inc
into
sahf
mov
scas
loope
and
xchg
xchg
cmc
jo
mov
fsubr
fstps
xor
pmaxsw
sti
mov
mov
and
push
arpl
lock
dec
cmp
stos
insl
inc
push
in
lahf
lret
inc
cld
adc
mov
jmp
inc
push
dec
cmc
jge
push
cmp
in
cmpsl
xchg
sub
arpl
ds
cld
inc
cs
addr16
jae
or
push
stos
ret
pop
lahf
sub
shll
add
xchg
outsb
inc
and
xor
xlat
out
decl
arpl
push
inc
cld
adc
aam
mov
lret
pop
repz
xchg
dec
sub
jge
push
out
dec
jno
clc
lahf
repz
outsb
inc
add
inc
clc
inc
or
mov
mov
leave
ss
pop
hlt
loop
or
push
mov
cmp
push
xchg
push
bound
dec
cmpl
les
push
test
push
rcrl
in
lcall
cld
sbb
addr16
xchg
scas
xlat
fdiv
decl
in
sub
inc
gs
push
bound
movsb
test
sar
jg
js
mov
jns
xchg
jns
cmpb
inc
nop
rorb
loopne
dec
inc
les
inc
push
push
jge
inc
jp
dec
ret
pop
inc
cld
adc
and
insl
lcall
add
add
and
fsubrp
out
iret
push
push
dec
aas
or
dec
imul
pop
stc
adcb
cld
ljmp
mov
cwtl
in
subb
jmp
sti
inc
mov
push
inc
mov
adc
jne
scas
cwtl
ret
xchg
push
or
push
test
mov
in
sbb
mov
mov
jp
mov
insl
stos
pop
inc
movsl
dec
popa
cmpsl
mov
add
xchg
lea
ljmp
cld
xlat
in
mov
jl
or
pop
ds
fsub
outsb
or
dec
push
aas
push
movsb
add
out
shlb
xor
jno
inc
dec
pop
movl
add
jbe
jnp
fimull
sub
adc
mov
aas
push
dec
cld
mov
inc
call
aaa
mov
repz
xchg
sub
outsl
xchg
jo
cmc
scas
stc
cs
mov
movl
dec
test
repnz
andb
gs
fmuls
push
sbb
xchg
mov
mull
mov
pusha
pop
push
mov
pop
in
cmp
jp
lock
lea
pop
sarb
mulb
lret
xchg
and
aad
cld
xchg
or
aad
jbe
test
out
jo
fs
jmp
xchg
xchg
enter
lods
sub
aaa
pop
xchg
push
push
dec
data16
mov
cmp
imul
mov
imulb
xchg
loop
out
mov
mov
sahf
inc
pusha
incb
inc
cld
jg
mov
mov
lds
aad
cld
xchg
pop
addr16
adc
jmp
jg
repnz
sub
and
lds
popa
mov
mov
sub
fs
mov
fcoms
dec
pop
les
inc
cld
adc
pop
mov
pushf
or
inc
cld
push
stc
ret
xchg
and
loopne
das
sbb
jb
aad
push
push
xor
and
aad
cmp
sbb
shl
bound
adc
in
lods
sbb
jp
inc
mov
lret
mov
cld
adc
mov
and
arpl
pushf
push
or
inc
cld
adc
jecxz
rolb
adc
dec
mov
lret
inc
dec
stos
push
mov
add
pop
test
or
jle
dec
adc
adc
ret
in
add
add
inc
cld
lods
loope
cld
adc
aaa
rorb
adc
inc
cld
stos
sub
xor
jg
rorb
lcall
sub
or
lods
rorb
inc
jnp
addl
pop
test
push
add
jbe
pop
mov
xchg
jmp
cmp
adc
inc
mov
aad
cld
cmp
xor
adc
pop
jne
bound
call
push
mov
cld
adc
push
icebp
fsts
push
jmp
sub
sub
cmp
loopne
xchg
popa
sahf
cmpsb
lea
lods
pop
jl
mov
inc
cld
stos
imul
aad
jle
aad
cld
push
fs
mov
xor
mov
inc
cld
xchg
testb
cwtl
sbb
hlt
pop
outsl
adc
push
scas
ljmp
insb
fs
jp
push
adc
rclb
adc
inc
pop
mov
push
ret
cmpsl
push
sti
out
lods
cmpsl
lods
inc
cld
adc
cmc
popa
inc
pop
mov
mov
mov
jns
jecxz
xchg
insl
popa
imul
stos
out
and
insl
mov
stos
pop
loop
xchg
insl
popa
lret
subb
sub
rorl
popa
cmp
iret
inc
inc
stos
pushf
jmp
ret
test
sub
popa
jnp
nop
int3
add
sub
mov
jnp
mov
leave
sub
popa
jnp
adc
imul
shrb
push
jnp
add
jbe
jns
push
sbb
movsb
xchg
xor
adc
xchg
mov
outsb
popa
jnp
incl
bound
outsl
in
or
ret
pusha
test
or
popa
jnp
push
xorl
popa
ss
mov
push
xorb
insl
sbb
dec
jbe
jge
aas
fcmovnbe
inc
loop
xor
inc
dec
lock
jb
sti
mov
fucom
and
and
fs
mov
testl
aas
xchg
xchg
xchg
insl
popa
jecxz
adc
cmpsl
or
pop
xchg
insl
popa
dec
subl
mov
lret
imull
jne
in
ror
jns
insb
jmp
sub
lds
sub
pop
cmp
aaa
or
jnp
push
mov
jp
rorb
insl
popa
jnp
mov
mov
pop
jbe
xchg
int3
jecxz
xchg
insl
popa
inc
lret
adc
jge
dec
pusha
test
xchg
loop
insl
popa
jnp
jg
cmpsl
pop
lret
jbe
jmp
push
fdivs
popa
fadd
xchg
sub
addr16
jnp
cmp
icebp
das
pop
sbb
aam
arpl
pop
std
int3
sub
flds
jnp
insl
loop
xchg
insl
popa
mov
sbb
xor
repz
cmp
test
scas
out
inc
dec
and
popa
jnp
xchg
ret
xlat
inc
ljmp
stos
add
test
pop
in
pop
jnp
insl
jb
and
jnp
jne,pn
add
rolb
lret
outsb
dec
mov
jnp
in
shrl
rclb
aas
and
push
jnp
popf
mov
rcll
inc
jae
xchg
pop
jnp
insl
pop
icebp
jmp
mov
dec
mov
sbb
add
outsl
sbb
test
loopne
pop
push
xor
xchg
sub
ljmp
inc
mov
cmp
jnp
dec
mov
in
cmp
pop
adc
push
gs
cwtl
sub
or
dec
fisubrl
mov
and
subb
mov
repnz
pop
subl
pop
lcall
lret
popf
sbb
xchg
repz
push
push
mov
jmp
lock
pop
lret
push
sub
and
xchg
insl
repnz
insb
push
jae
sub
das
mov
andl
or
pushf
xchg
pop
and
rcll
nop
xor
mov
jnp
out
popa
sub
mov
cmp
pushf
fisubl
adc
inc
stos
btc
mov
jnp
insl
sub
xchg
pop
les
iret
ficoms
insl
popa
jnp
or
dec
lock
rcrl
test
roll
mov
fwait
or
insl
fisubl
stos
shrb
push
rorl
addr16
pop
mov
test
sub
arpl
and
xor
insl
popa
dec
mov
jnp
dec
xchg
xchg
movsb
mov
pop
xor
or
lock
lcall
imul
jns
mov
xchg
fwait
gs
jae
insl
mov
ds
mov
jp
mov
jnp
ljmp
inc
mov
dec
cmp
or
dec
xchg
je
jnp
insl
je
pop
and
sub
dec
std
rorl
jnp
insl
popa
jnp
out
pop
jnp
insl
loope
jns
sub
xchg
insl
movups
jp
push
or
push
xchg
dec
pop
mov
scas
pop
sub
insl
popa
jnp
in
push
mov
pop
mov
int
adc
mov
xchg
push
mov
add
xchg
insl
popa
fistpl
xchg
pop
jnp
insl
fidivrl
or
mov
sub
sahf
int3
mov
js,pt
std
pushf
call
or
push
mov
sahf
or
popa
push
iret
inc
xor
jo
xchg
sbb
cmpsb
xlat
jecxz
out
divl
in
outsb
popa
jnp
insb
popa
jnp
xor
xchg
push
push
or
ret
pushf
pop
fiaddl
shlb
push
insl
sbbb
jnp
insl
ljmp
cld
inc
dec
and
je
out
cmp
or
insl
popa
and
loope
xchg
mov
xor
andb
mov
scas
mov
jmp
mov
sti
xchg
insl
popa
or
jmp
xchg
cmp
inc
mov
out
test
mov
enter
popa
jnp
and
daa
fs
jnp
xchg
jl
int3
push
out
cld
add
sarl
dec
xor
jg
add
nop
xchg
insl
popa
ret
adc
mov
sub
xor
jb
add
xor
mov
icebp
xor
enter
mov
test
or
jnp
insl
dec
rcrb
inc
lret
inc
xchg
mov
pop
and
push
jnp
insl
enter
popa
jnp
shl
lea
neg
dec
ret
cmp
movsl
mov
xchg
jnp
insl
jno
out
in
fs
nop
xchg
insl
popa
cmc
inc
push
int
dec
pop
popf
lcall
push
arpl
inc
ret
mov
and
and
jnp
jl
movsl
repnz
push
popf
or
dec
pop
cmpsb
faddl
cmc
mov
out
inc
js
inc
xor
and
popa
jnp
dec
popa
jnp
mov
andl
fcmovnb
gs
jnp
cmpsb
inc
iret
rolb
xchg
insl
popa
pop
mov
inc
sub
into
or
xchg
xor
xchg
insl
popa
jnp
jnp
roll
mov
rcrb
insl
popa
jnp
push
mov
loope
lods
movsl
xchg
aaa
fidivl
sub
mov
lock
popa
sti
sub
pop
in
xchg
jnp
insl
fstl
fistpl
rcrl
popa
jnp
mov
out
mov
inc
jp
mov
jnp
insl
mov
mov
pop
lahf
adc
add
sbb
add
fcomps
scas
mul
pusha
lahf
rcll
leave
pop
aam
jp
insl
enter
pop
xchg
dec
out
push
or
add
insl
popa
jnp
push
test
ja
cwtl
loopne
xchg
mov
and
jnp
and
xchg
and
mov
rorl
dec
lea
jnp
sub
fdivl
imul
pop
cmp
sub
shlb
xchg
lods
jo
pusha
sbb
out
and
popa
jnp
dec
popa
jnp
or
sahf
clc
xchg
or
xchg
xor
insl
popa
jae
insb
popa
jnp
sub
outsl
mov
subl
test
int
adc
enter
roll
add
dec
mov
fidivrl
adc
mov
jnp
outsb
jne
inc
sub
sub
push
dec
cmc
lods
mov
add
clc
xchg
insl
popa
jnp
ret
pushf
add
ret
lods
push
mov
jnp
dec
jg
cli
loopne
mov
in
sub
insl
jmp
xor
repz
aaa
ficompl
cld
xor
xchg
insl
popa
jnp
rorb
gs
insb
mov
cmp
pop
xor
xchg
insl
icebp
dec
popf
subb
out
je
insl
popa
mov
cmp
aam
cmp
mov
xor
mov
popa
sub
sbb
sbb
mov
bound
popa
jnp
into
mov
sahf
dec
xchg
imul
stos
out
or
push
cmp
xchg
sbb
dec
in
outsl
dec
arpl
jge
push
and
and
jmp
inc
clc
adc
cmpsl
xchg
mov
and
dec
and
dec
push
push
sbbb
mov
xor
popa
add
sub
mov
inc
jp
mov
xor
test
out
push
cltd
jns
mov
adcl
mov
jns
outsb
cmp
add
jns
je
cmp
sti
mov
int
mov
fs
lahf
orb
dec
rcll
dec
clc
sub
sub
push
mov
mov
adc
das
adcb
cmovae
mov
xchg
in
les
cmpsl
fdivrs
ret
lds
aad
loopne
rolb
cmpsl
paddb
and
enter
out
inc
jnp
xchg
fiaddl
scas
jns
inc
lds
dec
fcmove
and
and
add
pop
ds
add
sbbl
sbb
xlat
scas
lahf
jns
cmp
cmp
mov
fs
lahf
addb
jmp
add
xchg
lock
out
jb
sbb
mov
dec
movb
fisubrl
ret
sbb
and
icebp
ficoms
ret
jecxz
cmp
les
and
lahf
out
mov
mov
stos
aaa
out
adc
test
jmp
lahf
jns
shr
ss
cld
je
jmp
cmp
dec
inc
mov
aas
sub
inc
rol
push
sub
mov
and
int
ds
mov
xor
mov
incl
mov
outsb
mov
xor
sar
lahf
jns
xchg
pusha
sti
mov
test
xor
fcmovb
pop
xlat
popa
jb
push
jl
out
add
jns
mov
pop
and
jno
jnp
stos
sti
scas
pop
inc
xlat
dec
flds
jle
orl
outsl
out
pop
mov
jns
push
scas
lds
jns
ds
push
fcmovnb
stc
sbb
cmpsb
sbb
and
mov
sbb
ja
outsb
mov
pop
sahf
cmp
js
mov
int3
lahf
jns
je
mov
xor
outsb
neg
push
inc
jp
mov
adc
cmpsl
popf
jnp
cs
pop
mov
jns
mov
ret
fsubs
fs
and
scas
pop
lock
lahf
jns
push
xor
mov
fstpt
xor
cmp
and
push
xchg
pop
mov
lahf
pop
inc
out
fnstcw
pop
pop
jns
mov
cmp
sahf
int3
push
repnz
jns
mov
xor
jp
sub
shlb
pop
mov
jns
pop
xchg
mov
jns
lods
scas
xchg
clc
mov
and
cmp
pop
cmpsl
pmuludq
bsr
mov
lahf
imul
lahf
jns
push
push
in
push
jae
fistpll
and
inc
sbb
fnstenv
cld
icebp
or
cmp
jle
dec
pop
jl
test
and
fildl
test
popf
add
push
jns
mov
inc
add
jmp
jnp
mov
jns
loope
lock
push
jns
mov
insb
inc
and
out
stos
fwait
or
movsb
add
lahf
jns
dec
daa
jno
int3
pop
jns
mov
stc
mov
cmpsl
sbbl
lock
sub
das
xchg
xchg
or
lahf
pop
out
mov
orb
mov
cmpb
mov
jns
das
fstps
mov
cmpsl
popf
scas
adc
out
scas
adc
inc
sysret
jp
mov
stc
outsl
mov
loope
adc
add
out
negb
push
and
into
or
hlt
xchg
lods
sub
push
jns
movsl
mov
dec
jmp
lahf
jns
test
dec
sbb
std
jp
jmp
mov
ss
lahf
hlt
mov
cmpsb
in
ret
fimuls
and
and
mov
fidivl
add
out
inc
scas
stos
push
inc
mov
lock
icebp
pop
outsb
ror
lahf
jns
int3
outsl
mov
sahf
mov
mov
scas
lahf
jns
sahf
sub
and
fdivrs
mov
mov
enter
and
lahf
mov
xor
js
cmpsl
xchg
jnp
mov
aaa
insl
stc
adc
jmp
jo
and
mov
jp
mov
into
fisubl
xchg
mov
jecxz
pop
cwtl
adc
adc
xchg
cld
mov
jns
movsl
and
notb
test
pop
mov
jns
cmpsb
xchg
jl
pop
mov
leave
xor
test
lahf
jns
das
jl
mov
add
or
movsb
jmp
scas
lahf
jns
out
pop
imul
movsl
ret
adc
nop
inc
pusha
push
pop
and
lahf
sahf
adc
xchg
sub
int3
out
out
xor
xchg
and
lahf
cmp
addb
stc
mov
nop
and
lahf
out
repz
pop
nop
repnz
adc
inc
dec
push
mov
jns
add
negl
add
inc
aam
and
cmp
cmp
scas
stc
mov
lahf
jns
mov
dec
fbld
insl
int
mov
sub
cli
or
aam
sti
mov
les
mov
dec
and
mov
add
mov
jnp
lods
mov
lods
jbe
shrl
mov
jns
cmp
shll
cli
out
mov
jne
xchg
and
lahf
push
mov
adc
sbb
add
inc
dec
cmpsb
outsl
adc
scas
lahf
jns
mov
repnz
lret
nop
mov
loopne
in
cmc
icebp
push
push
push
inc
xlat
sbb
lret
mov
fs
lahf
orb
lahf
dec
or
pop
add
jl
mov
xchg
hlt
jp
cmc
jg
push
in
push
ret
addl
pop
mov
jns
pop
std
out
shl
sub
icebp
and
nop
es
xor
sbb
and
lahf
int
xor
cmp
or
jp
je
cmp
sti
mov
or
and
mov
icebp
int3
lahf
jns
xlat
popw
mov
cmpsb
mov
and
add
sub
xchg
or
mov
adc
arpl
les
das
cmp
popf
das
mov
lahf
jns
orb
imul
mov
loope
sub
daa
lahf
adcl
aas
and
mov
in
push
inc
adc
scas
sub
sub
sub
lods
push
pusha
jecxz
scas
and
jp
fcomps
int
mov
cmp
jmp
movsb
adc
dec
dec
sub
mov
jns
push
and
dec
pop
cmp
jp
dec
mov
gs
fucomip
outsl
adc
jns
das
xchg
mov
lahf
jns
cmp
insl
outsl
mov
jns
int
jns
mov
out
roll
sub
or
test
insl
icebp
mov
jns
push
add
cmp
adc
scas
mov
pop
dec
sbb
out
ret
push
dec
pop
mov
mov
jns
sbb
push
pop
mov
jns
imul
leave
fnstenv
test
cmp
jbe
mov
pop
push
popa
in
lds
aam
jl
xlat
js
aam
icebp
insl
subl
sub
jno
cmp
stos
jp
enter
mov
loope
out
cmp
and
and
and
sbb
xor
add
mov
fldt
jg
push
dec
pop
mov
jns
sbb
out
dec
test
sbb
movsl
punpckhbw
mov
test
mov
dec
mov
decb
push
jae
pop
add
dec
and
cmp
cmpsb
scas
lahf
jns
mov
lahf
jns
nop
cli
icebp
mov
jns
push
shlb
repnz
push
sbb
jo
sahf
sahf
adcl
addl
mov
sbb
add
in
sbb
lods
in
pop
icebp
cmpsb
push
jns
int3
lahf
jns
dec
xchg
fsubr
add
mov
jne
mov
inc
in
pop
sbb
dec
dec
arpl
fidivs
sarl
xchg
sub
xor
out
xor
mov
lds
inc
in
push
mov
loope
aaa
mov
mov
lods
bound
bound
jge
inc
jmp
pop
cmp
data16
pop
and
test
fistl
jns
sbb
jge
inc
xor
xchg
fildl
mov
insb
push
div
and
shl
fcmovbe
sbb
add
loop
dec
shl
test
xchg
push
dec
dec
ljmp
imul
das
pop
out
xchg
xor
sar
pop
pop
in
sbbl
push
loop
cld
dec
mov
push
adc
test
mov
lret
jb
xchg
jecxz
shl
add
out
push
push
adc
push
ret
int3
inc
or
lahf
in
jne
xchg
inc
in
xor
in
cmp
popl
fisubl
xchg
ficoml
cmp
icebp
jne
xchg
pop
inc
push
fbstp
sar
sbb
sbb
shl
add
xor
addr16
ret
push
inc
scas
add
ret
lds
xor
out
jecxz
je
lret
pop
loope
add
loope
test
jb
jle
xchg
xchg
xlat
jmp
push
fcomps
rcrl
fildll
cmp
pop
loopne
shl
cld
fiaddl
add
inc
mov
shl
or
jecxz
add
add
out
andl
and
xchg
pop
pop
int
orl
cmp
dec
daa
sbb
xor
loop
inc
dec
xchg
push
lahf
movsl
fwait
cli
xchg
or
or
mov
loope
cmp
adcb
sub
imul
ljmp
repnz
fidivs
mov
and
xchg
dec
shl
ret
sub
loop
xchg
jne
movsb
rcll
xor
out
cmp
cmc
mov
cmpsb
lret
add
nop
pop
dec
cmp
or
out
loopne
mov
jne
dec
daa
sbb
xor
fiaddl
xchg
lahf
add
sti
imul
stc
pop
cmpsb
xchg
xor
fstpt
fs
ljmp
imulb
fbstp
sar
adc
adcb
aam
add
add
out
dec
pusha
call
mov
dec
shl
mov
bound
xor
mov
js
scas
pusha
jbe
lods
incl
xchg
and
push
mov
fidivs
shl
mov
xchg
jle
loopne
push
xchg
xor
mov
sahf
xlat
xor
out
xor
adc
repnz
cs
push
adc
stos
or
aas
repnz
shr
adc
iret
push
fmull
xchg
sbb
arpl
out
cmp
out
xor
pop
and
lea
and
jp
xor
or
mov
loop
xchg
pop
loope
shl
push
or
mov
out
fs
cmpsl
jl
lahf
jge
or
inc
shl
pop
xchg
push
loope
shl
add
xchg
push
jmp
shl
test
dec
loope
sbb
mov
loopne
fidivs
mov
div
dec
es
jmp
xor
dec
jl
inc
loope
xor
push
cmpl
mov
fidivs
test
outsb
test
or
leave
scas
dec
imul
or
xor
addr16
fs
mov
shl
ds
sub
ret
dec
imul
je
aas
shrb
adc
inc
mov
push
pop
shl
add
sahf
daa
stos
fisttpl
outsl
fwait
mov
leave
in
mov
rclb
repnz
call
mov
out
out
xor
push
add
loopne
js
sahf
inc
add
leave
insb
sbb
sub
dec
push
aas
or
jo
test
into
and
mov
shl
fstps
dec
shll
and
inc
das
and
test
fidivs
dec
push
mov
cmp
jae
push
xor
xchg
inc
fwait
dec
dec
mov
movsb
mov
pop
jnp
sbb
testb
dec
mov
cmp
out
and
in
lcall
arpl
out
and
mov
fstl
xor
fidivs
shl
mov
push
pop
xorl
push
adc
dec
sbb
icebp
cmpl
ficompl
add
mov
out
out
xor
into
jge
cli
insb
and
sub
jbe
inc
pop
add
sbb
sar
jmp
es
mov
ljmp
loopne
fidivs
sbb
mov
xor
cmp
pop
nop
mov
mov
fimull
fidivs
mov
dec
mov
or
std
cmp
mov
jl
xor
repnz
push
das
mov
jns
es
gs
scas
ljmp
mov
adc
mov
xchg
data16
fidivl
jmp
shl
out
xchg
xchg
jle
inc
loope
xor
lea
hlt
iret
stos
jno
jl
dec
pusha
call
cmp
repz
fwait
or
out
ljmp
push
mov
out
dec
and
fsts
fiaddl
adc
sbb
fstpt
out
out
out
xor
stc
popl
sbb
mov
out
jmp
and
xchg
mov
xor
inc
lahf
push
xor
inc
sbb
rorl
pop
xchg
adc
adc
shl
jg
xor
enter
sub
or
dec
xor
loop
mov
out
xchg
negl
mov
shr
mov
and
rcl
mov
and
sbb
xor
mul
stc
xchg
pop
fbstp
shl
mov
dec
test
add
aad
pop
sub
movl
es
inc
add
xor
cmp
xor
shl
pop
adc
iret
fwait
jg
sbb
mov
jns
xor
out
and
lock
les
test
inc
nop
jecxz
fisubl
call
mov
pushf
scas
dec
rcl
mov
popa
aad
punpcklwd
sar
xchg
std
xchg
sub
cmc
dec
cmp
xor
jne
cwtl
push
add
out
out
xor
mov
mov
sti
jge
test
lock
cmpsl
out
xor
adc
repnz
cs
push
adc
stos
cmp
or
gs
add
mov
push
dec
and
test
fidivs
lret
xchg
outsl
mov
mov
out
xor
out
movl
inc
les
cmpsl
pushf
stos
fisttpl
jb
mov
push
inc
cmp
add
stc
nop
mov
fidivs
mov
out
xor
rcll
cmc
adc
rcrb
data16
cmc
shrb
dec
add
mov
xchg
add
out
ret
inc
inc
inc
scas
scas
fimuls
or
push
cmp
pop
xchg
fcoml
lahf
pop
mov
test
mov
mov
cmp
lods
in
fidivs
xchg
add
popf
xor
rorl
shl
int3
mov
fisttpl
lcall
outsl
lods
jne
push
mov
add
xor
mov
in
fidivs
test
push
xor
out
jns
fistpl
pop
fs
cmp
out
jne
mov
cmp
jg
adc
mul
fwait
or
out
pop
cmp
sbb
xor
fs
dec
sub
jb
movsl
lcall
pusha
mov
std
lcall
bound
pop
inc
xchg
mov
add
xchg
push
fnsave
roll
repnz
or
out
repz
scas
xor
out
andb
xor
popa
pop
es
icebp
jno
int3
sub
cmc
pushf
cli
fwait
ss
loop
mov
and
xor
fs
loop
push
aaa
popf
outsl
shll
add
fidivs
sbb
clc
ret
sbb
cwtl
repnz
mov
xchg
int3
ja
sub
data16
mov
fs
shl
xchg
cmp
insl
shll
or
cmc
rclb
dec
sbb
adc
fbstp
shll
adc
fs
in
cmp
loop
jp
hlt
dec
jno
inc
imul
fbstp
shl
dec
inc
adc
xor
jne
test
movsb
mov
xor
out
mov
cltd
jb
out
mov
fbstp
shrl
xor
out
xor
aam
daa
adc
xor
jne
sbb
mov
lret
sub
mov
fidivs
lahf
aas
jmp
shr
fcompl
cmc
jns
mov
push
inc
out
les
jne
ja
loope
xor
insb
mov
aas
fdivrl
mov
in
fmul
jge
lcall
sub
jp
push
sbb
inc
sbb
shrl
or
or
xchg
mov
xchg
add
mov
sbb
idiv
inc
xor
shrl
sti
mov
xsaveopt
shl
les
jns
xchg
pop
outsb
stc
inc
std
dec
jo
jbe
out
inc
fistpll
inc
lret
bound
sbb
popf
push
shl
dec
es
xor
add
lret
in
fidivs
xor
mov
adc
push
jns
sub
xchg
dec
fcomps
aam
cmp
xor
out
push
cmp
push
idiv
jns
scas
pop
rorl
mov
pop
cmp
in
dec
sub
xor
out
cwtl
test
jp
xchg
xorl
shl
push
push
daa
popf
int
aam
mov
dec
jnp
adc
mov
shl
cmpsb
ja
in
lds
pop
out
mov
or
fucomp
or
int3
rorl
sbb
xchg
insb
lret
cmp
ret
and
jp
in
mov
add
xor
pop
dec
push
cltd
xchg
push
or
mov
xor
out
xor
iret
test
sbb
and
popa
addl
jp
lcall
adc
xor
enter
out
push
sbbl
rol
leave
scas
fnstenv
shl
out
and
sub
mov
mov
fidivrl
out
dec
jl
fisubl
out
mov
sbb
xchg
adc
dec
and
in
xor
xor
cmp
fdivrs
mov
ljmp
mov
shl
std
and
push
jecxz
fimuls
jecxz
aas
out
out
fidivs
mov
xchg
ds
cmp
sahf
jae
mov
ficomps
outsl
adc
test
jg
out
xor
call
js
mov
lock
mov
mov
mov
lcall
hlt
sub
fs
ret
sbb
cmp
dec
mov
push
adc
mov
adc
dec
add
rorb
mov
dec
inc
pop
decb
sbb
loope
mov
inc
mov
shl
push
add
dec
mov
call
ret
mov
dec
mov
movsl
fldl
shr
hlt
in
push
xchg
xor
cwtl
pushf
shrl
test
mov
inc
lret
insl
or
sbb
cmc
dec
ret
out
inc
out
ret
inc
aad
add
in
push
and
in
test
add
sub
scas
inc
les
sarb
ja
jp
pop
in
shl
adc
leave
xchg
dec
ss
xchg
xchg
inc
or
pusha
pop
cld
jno
popa
push
xchg
sub
cmp
test
in
mov
mov
test
push
iret
cmpsl
lahf
enter
add
iret
test
fidivs
test
fbstp
shl
cmp
or
iret
arpl
data16
xor
out
push
dec
ja
pop
jno
and
lock
negl
out
dec
adc
lahf
jge
jle
test
loope
shl
jl
pop
lods
dec
shl
orb
fbstp
shrl
dec
scas
push
sbb
pop
xchg
loopne
scas
push
adc
shl
daa
pushf
push
mov
dec
fwait
or
leave
xchg
mov
dec
shl
dec
sbb
mov
shl
cmpb
jb
fnstcw
jns
jle
inc
cwtl
fwait
jp
jno
pop
pop
jmp
jns
pushf
rorb
or
adc
cltd
cmp
out
cmp
repz
fisttps
sbbl
lret
shlb
insl
inc
jmp
xor
mov
sub
or
mov
ss
lods
xchg
out
test
out
xor
cmp
xor
loope
fidivs
adc
xchg
mov
loopne
fidivs
mov
jp
aas
inc
xor
xor
test
xchg
cmp
add
xor
out
lret
fidivs
test
fbstp
shl
jno
jmp
xor
fdivs
sbb
or
lods
push
repz
test
fwait
mov
lods
fidivrl
pmullw
add
jl
popa
inc
roll
xor
push
xor
sbb
mov
lahf
mov
inc
xor
shl
push
jl
pop
push
popa
shll
jg
mov
fdivrl
bound
pushf
mov
pushf
fistpl
shl
ret
and
push
fwait
jmp
out
shrb
xor
test
ret
and
mov
or
stos
pop
pop
add
pushf
jp
loop
daa
icebp
pop
fs
jmp
movsb
shll
outsb
mov
push
cmp
scas
push
fistps
dec
pusha
xor
jne
dec
xchg
bound
les
xchg
push
fwait
rclb
adcl
pop
mov
out
cmp
dec
imul
xchg
ja
fistpl
dec
es
outsb
dec
lock
mov
adc
fs
cmc
fcmovnb
repnz
pop
fwait
xchg
mov
mov
es
orl
xchg
movsb
sbb
xchg
int3
and
mov
fadd
lcall
leave
scas
outsb
xor
out
xor
repnz
mov
shl
and
mov
dec
xor
fstpt
xchg
push
inc
and
leave
dec
sub
data16
test
nop
pop
xchg
test
mov
jns
add
int3
or
hlt
ja
mov
sbb
xor
shl
add
out
dec
cmp
fidivs
shll
or
cltd
das
shl
dec
xor
jne
cltd
dec
pop
inc
cli
inc
cmp
xor
leave
test
xor
lahf
pop
inc
aas
fdivl
mov
jg
out
xor
adc
xor
out
gs
push
xor
xchg
test
mov
mov
or
sub
add
loop
pop
pop
mov
pusha
mov
mov
divb
sub
insb
les
iret
pusha
pop
imul
scas
inc
pop
rcrb
and
push
lea
xor
cmp
xor
mov
test
add
cwtl
or
mov
pop
xor
out
into
in
fidivs
mov
cmp
jb
loop
cmp
out
xor
jae
adc
sub
pop
and
or
sub
cltd
push
xor
out
mov
je
out
arpl
sbb
fidivs
test
fnstenv
roll
xor
out
xor
daa
mov
stos
sub
push
in
mov
mov
fidivs
dec
in
or
fs
andb
mov
fcmovne
fwait
xchg
sti
popf
push
fmulp
push
pop
cltd
in
fwait
out
mov
mov
fistl
dec
daa
call
jg
dec
sbb
sbb
rcl
rolb
shl
lcall
test
mov
sbb
shl
inc
movl
sbb
shl
loope
pushf
aas
xadd
pop
xchg
push
sub
test
out
xor
push
lea
pop
mov
clc
rcrl
in
pop
mov
std
add
add
push
inc
sti
push
repnz
pop
xchg
lcall
xor
out
xor
cmp
shll
push
xor
xchg
test
mov
xchg
in
mov
sub
or
cmp
les
xor
xor
rcll
sbb
pop
xchg
enter
mov
ljmp
js
negl
mov
rcll
shrb
or
xchg
imul
mov
jmp
notl
out
sub
repnz
sub
out
xor
sarb
push
sub
ds
mov
pop
scas
pusha
loop
loop
or
sbb
cli
push
mov
xor
out
scas
daa
jg
and
or
inc
mov
js
and
cmp
ret
fs
cs
sbb
out
xor
inc
dec
dec
xor
addr16
cmp
dec
sbb
ret
sti
and
jecxz
xchg
jno
add
jmp
sub
xor
xchg
mov
orb
cli
xchg
or
adc
movsl
push
mov
pop
pop
push
or
loope
sub
out
mov
fidivrl
or
adc
xchg
dec
shl
addb
push
xor
out
and
addl
popf
mov
shl
xchg
aad
xor
in
nop
ret
mov
cmp
mov
sti
dec
push
sbbb
fistpl
adc
fbstp
rcl
jb
sti
push
dec
mov
mov
adc
movsb
xor
les
lret
lea
xor
jle
xor
mov
shl
dec
lock
xorl
iret
test
fdivr
adc
xchg
jcxz
scas
xlat
out
out
xor
out
pop
pop
mov
lcall
xorl
out
pop
mov
mov
dec
divl
out
stos
mov
fidivs
pop
push
sub
mov
sbb
jp
dec
pop
jbe
jp
in
movsl
inc
lock
xor
int3
add
shll
or
mov
jne
mov
sarl
mov
fdivrl
test
add
lret
das
jecxz
cmp
movsb
jl
cmp
les
call
jne
icebp
popf
inc
jmp
movsb
sbb
jecxz
sbb
dec
inc
mov
aaa
notl
add
xor
out
sbb
mov
int3
outsb
push
jb
jae
sub
cmp
inc
dec
pusha
das
fbstp
rorl
xor
out
or
mov
lea
cmp
cli
inc
pop
fbstp
shll
push
ret
movsl
fdivrl
mov
hlt
mov
cmp
mov
fisttpll
jae
scas
push
outsb
test
popw
into
sbb
or
xor
aam
or
shl
icebp
push
adc
std
insl
xor
nop
or
xchg
adc
xor
jo
push
xor
jge
xor
fisubl
inc
jg
mov
xchg
mov
out
negb
out
inc
adc
dec
mov
mov
add
iret
arpl
dec
jo
and
inc
jmp
pop
test
dec
jnp
inc
jmp
pop
mov
arpl
xor
dec
aad
test
loopne
cmpsl
out
xor
rcll
inc
xor
test
mov
jp
mov
scas
scas
push
lcall
sbb
or
xor
mov
lods
outsl
imul
adc
fidivs
inc
das
pop
mov
stos
push
xor
mov
out
xor
out
xor
loop
mov
mov
movsl
or
inc
push
fbstp
shr
dec
in
jb
mov
clc
mov
aam
mov
mov
fidivs
inc
sbb
shrl
shll
mov
mov
mov
aad
cltd
xchg
inc
xor
mov
push
inc
xchg
mov
inc
and
mov
out
jle
cmpsb
out
xor
ror
push
test
push
insb
and
je
ss
mov
pop
push
mov
dec
movsb
cli
pop
adc
mov
rorl
dec
shl
jne
daa
or
push
test
add
xchg
lahf
mov
shl
int
or
into
shrb
sbb
int
xor
roll
mov
push
out
sbb
test
shll
mov
mov
push
loope
int3
inc
ljmp
add
lea
sub
xor
jp
popf
mov
cmpsl
xlat
mov
iretw
leave
bound
adc
xor
mov
add
scas
loope
xchg
mov
shl
push
rcrb
outsb
dec
and
out
sbb
mov
pop
lret
mov
fisttps
fidivs
shll
xor
cmp
dec
mov
mov
adc
and
scas
jmp
cmpsb
fimuls
rorl
mov
shl
shll
and
jp
daa
dec
clc
mov
pop
inc
sbb
rol
ret
inc
into
test
xor
out
xor
popf
or
mov
add
mov
mov
or
xchg
mov
test
mov
adc
shl
adc
push
aam
xor
fwait
jne
cmc
in
out
out
xor
scas
push
pop
push
sub
inc
neg
pop
cmp
xorl
fs
mov
add
out
xor
je
xor
cld
shll
cs
scas
fdivrs
fsubp
fidivs
mov
jp
movsb
mov
xor
out
in
sub
cmp
mov
rcrb
mov
adc
fidivrs
aas
stos
dec
sbb
out
in
xor
fsubl
xor
push
dec
push
dec
enter
out
xor
loope
fnsave
es
xor
jg
fs
cmp
ja
xchg
xlat
mov
jne
sub
xchg
cltd
mov
pop
xor
out
pop
adc
es
std
mov
cmp
shl
lods
mov
fidivs
jp
mov
jmp
pop
mov
inc
inc
rol
xchg
dec
aam
or
jno
jl
js
adc
mov
sbb
cmpsb
adc
jecxz
jno
cmp
cmp
pop
pop
push
addr16
loop
shl
cmp
cmp
dec
nop
cmc
xor
lret
cmp
jg
popf
divl
xor
cmp
bound
push
rcrl
push
cmpl
fstl
leave
scas
jb
and
or
fsubp
fidivs
test
outsb
xor
shll
sbb
mov
xor
roll
les
or
stos
test
fidivs
xor
aas
push
mov
jbe
leave
or
sbb
shl
cmc
fnstenv
or
pop
mov
mov
mov
notl
out
xchg
push
xlat
mov
aad
sbb
shl
imul
or
mov
jge
dec
jnp
pop
sarb
mov
jecxz
fidivs
mov
data16
hlt
test
cmp
adcb
leave
bound
outsb
cmp
inc
xor
push
test
adc
clc
jg
dec
mov
or
cmpsl
adc
test
push
int
in
je
lret
add
movsb
pushf
jp
test
jg
mov
cmc
push
xor
fidivs
shll
mov
fidivrl
sbb
xchg
ja
xchg
add
out
push
mov
sbb
in
cltd
sbb
fisttpl
mov
out
stos
in
fidivs
sbb
push
les
jbe
xchg
cli
popf
mov
xor
fstl
mov
fs
xchg
sbb
xlat
xor
out
xor
dec
sub
jb
xchg
cmpl
cmp
push
xchg
scas
fbstp
shl
in
fidivs
adc
or
mov
xchg
xlat
in
add
dec
push
out
test
dec
ret
push
mov
shlb
xor
fbstp
sar
mov
mov
jmp
imul
mov
dec
shl
mov
add
xor
roll
arpl
xor
or
out
test
pop
repnz
je
sahf
lahf
xor
cltd
dec
sub
out
leave
scas
fidivl
mov
fidivs
dec
sbb
rcrl
inc
mov
jno
cmp
mov
adc
pop
or
fcoml
dec
cltd
popf
shll
in
fidivs
push
jle
add
pop
scas
movsb
jne
mov
out
xor
mov
mov
out
xor
out
dec
gs
fbstp
shl
dec
shl
out
cmp
ret
xchg
insb
and
out
cmp
lcall
shrl
fnstsw
jbe
int
push
mov
loopne
fidivs
insb
cmpsb
fsts
jne
test
scas
xlat
fimull
movsb
or
leave
xchg
mov
fwait
inc
jmp
xor
pop
xor
lahf
imul
stos
scas
mov
xor
out
mov
jbe
popf
or
shl
or
aaa
fldcw
std
stos
xor
out
xor
arpl
cltd
push
ljmp
jno
mov
adc
xor
out
xor
sub
ja
jne
out
xchg
repz
pop
adc
push
addr16
data16
xor
out
xor
add
mov
mov
aam
and
in
xor
xchg
push
arpl
pop
cmp
sti
dec
push
out
xchg
lcall
mov
mov
jne
jge
pop
in
shl
dec
fs
xor
inc
mov
mov
adc
cs
test
out
xor
xlat
sub
push
push
pop
xlat
mov
in
fidivs
fs
jg
cmp
push
int
cmp
xor
pop
sbbb
add
stos
fwait
sti
lea
fistpl
and
or
push
outsb
hlt
ret
sub
mov
and
push
gs
push
rep
outsl
int
mov
mov
jne
cmp
cmp
xchg
mov
mov
xor
jmp
outsl
cmp
mov
shl
push
dec
fnstsw
xchg
dec
mov
and
insb
test
sbb
inc
inc
jmp
aaa
jns
pop
ret
out
cmp
insb
vdivsd
mov
xchg
add
out
ret
sbb
mov
loopne
fidivs
pop
and
fcmovnbe
mov
fsubp
fidivs
test
jb
in
fidivs
add
test
adcl
sub
fwait
xor
out
xor
push
sysenter
test
jge
mov
xor
out
aad
cwtl
sbb
rcrb
clc
es
sub
jo
xor
ror
clc
std
enter
ljmp
call
mov
fbstp
rorl
sbb
jg
bound
fbstp
rcll
dec
sbb
xor
inc
test
mov
mov
daa
pop
repnz
push
dec
movl
mov
push
xor
out
add
sti
incl
mov
shl
inc
shlb
inc
ret
inc
idiv
sbb
add
or
mov
add
lret
inc
stc
loop
jl
out
cmp
out
xor
cmc
push
jo
out
leave
push
push
pop
xchg
lcall
shl
in
xchg
cmp
add
xor
out
int3
loopne
fidivs
adc
gs
scas
outsl
shlb
jg
in
jns
fcmovbe
addr16
rolb
push
dec
imul
fidivs
test
loope
shl
insl
inc
sbb
roll
add
mov
sbb
xor
inc
test
leave
dec
stos
aam
ljmp
cmpsl
iret
sub
insb
push
out
movsl
pop
mov
xchg
cmp
iret
sub
xor
cwtl
aaa
jbe
xor
in
test
daa
cmc
xchg
addr16
shl
dec
cmp
and
push
inc
test
xchg
lea
push
and
or
push
jg
inc
adc
xor
jne
dec
loope
test
sub
movsl
push
fwait
jl
test
stos
dec
shl
cmp
out
data16
sti
call
subb
xchg
dec
dec
popf
or
adc
pop
pop
push
addb
int
sbb
add
aaa
xor
pop
push
sahf
arpl
add
pop
push
lahf
lret
push
push
xchg
arpl
fdivs
sbb
sub
jle
push
add
scas
testl
adc
dec
or
inc
cmpsb
fs
mov
mov
aam
jl
testl
adc
pop
jp
jno
xorb
daa
mov
mov
or
xchg
or
add
push
and
jns
rorb
xor
pop
push
mov
mov
mov
add
ds
cltd
jmp
xor
inc
in
int3
add
adc
push
mov
adc
popa
mov
pop
jo
loop
or
popf
push
add
or
xor
in
mov
sbb
ret
popf
aaa
pop
loopne
xchg
adc
adcl
jl
gs
xchg
xchg
movsb
xchg
cld
xchg
mov
pop
pop
outsl
add
jae
push
jle
ljmp
push
movsbl
loopne
mov
testb
sbb
or
xchg
mov
pop
cmc
jmp
aaa
push
or
jecxz
test
xor
cmc
and
mov
pop
push
inc
inc
aam
sub
int3
stos
sbbl
mov
add
push
mov
push
push
add
ret
ret
cmpsl
or
xor
push
add
int
sub
js
dec
sbb
or
mov
push
cltd
xor
ds
pop
push
pop
add
mov
out
fdivs
dec
repz
incl
sbb
add
mov
mov
lahf
lret
pop
push
or
loop
and
addr16
call
ret
addr16
and
insl
inc
push
shlb
cwtl
mov
adc
pop
mov
test
add
es
add
sahf
xchg
mov
pop
in
sub
dec
popa
movsl
add
cld
nop
mov
pop
add
clc
push
push
inc
aas
xor
arpl
and
loopne
pop
push
and
push
inc
or
outsb
inc
fsubrl
dec
pop
addr16
filds
push
xor
push
push
jno
sub
mov
add
mov
mov
mov
sbb
xor
mov
jbe
mov
outsl
mov
addl
movsl
or
mov
jns
dec
cmpl
mov
pop
repnz
test
lds
ljmp
pop
push
adc
test
arpl
jo
jns
lcall
or
ljmp
aam
jnp
mov
dec
sbb
in
rorb
popf
outsb
std
gs
pop
cli
mov
pop
into
xor
sbb
push
fstpl
mov
inc
sub
xor
in
icebp
sub
mov
std
ret
imul
sub
sub
data16
popa
inc
inc
push
test
std
nop
mov
pop
adc
pop
inc
jg
movsl
jmp
in
xchg
pop
sbb
push
mov
add
arpl
cmpsb
out
lret
fsubrl
pushl
xor
insl
clc
test
mov
pop
and
or
fists
in
sub
rclb
pop
push
popa
xor
aam
ffreep
xlat
shlb
dec
mov
jbe
xor
fisubrs
pusha
cld
aaa
mov
pop
nop
fisubs
sbb
mov
or
sahf
out
dec
ret
xor
cltd
push
aas
mov
xchg
aad
xchg
sub
mov
push
call
repz
mov
std
push
fdivrp
and
inc
in
jg
sub
jle
push
in
sub
stc
ja
loopne
mov
std
dec
nop
fstps
decl
pop
push
adc
test
add
jge
pusha
mov
icebp
mov
enter
pop
push
ret
enter
into
popa
das
mov
push
imul
pop
push
fistps
push
xor
loop
xor
add
divb
das
pop
xor
mov
testl
pop
inc
dec
cwtl
in
lock
sbb
or
mov
push
push
add
ljmp
aam
sbb
push
inc
push
and
lret
add
push
mov
pop
push
add
or
mov
insl
sarb
adc
sub
sbb
push
jecxz
push
cmc
inc
repz
aad
jge
and
push
or
jno
or
xor
mov
rcl
mov
fstpt
mov
pop
xor
popf
jg
shrl
inc
ss
notb
inc
shr
out
dec
adc
pop
push
je
jecxz
pop
fldenv
out
and
std
jg
mov
lret
inc
std
aam
jno
cli
jp
push
pop
push
cmp
negb
or
xchg
sbbl
pop
cmc
popa
mov
fs
movsb
sub
popf
fistl
and
mov
push
stos
loopne
test
cld
mov
lods
xchg
mov
mov
mov
jle
push
add
fstp
adc
icebp
mov
xchg
or
mov
pop
add
mov
dec
les
aam
into
sub
adc
push
mov
sub
cmp
mov
fsub
mov
xor
pusha
push
daa
fisubs
int
xchg
xor
mov
push
fs
fwait
mov
pop
pop
aad
sarl
sti
sti
das
in
loopne
cmpsl
sbb
mov
pop
stos
aaa
push
mov
cmpsb
add
xor
decl
add
pushf
fs
std
nop
mov
pop
sub
sahf
sbb
loopne
add
jmp
outsb
push
add
lods
popf
mov
mov
mov
and
mov
pop
pop
push
adc
or
sar
jecxz
sub
ss
push
pop
loopne
adc
js
shrb
dec
push
xchg
push
adc
mov
jno
pop
push
fadds
sub
into
or
dec
loope
mov
add
fucomp
pop
sahf
and
add
xor
loope
nop
lahf
dec
inc
adc
dec
clc
pop
rolb
xorl
jnp
mov
push
dec
fcomps
jl
cmp
jmp
sbb
aam
and
in
jne
sbb
push
mov
outsb
jbe
add
sub
movsb
insb
xor
sub
mov
mov
push
insl
mov
out
sbbb
pop
or
mov
fs
pop
std
nop
mov
pop
data16
lea
lock
or
add
pop
cmp
ss
push
call
fnstenv
cwtl
xor
cmp
inc
xchg
push
xor
inc
push
mov
loope
cltd
sub
and
mov
pop
push
lret
nop
outsl
mov
mov
add
aaa
dec
push
pop
push
addr16
mov
pop
push
loopne
xchg
adc
mov
mov
pop
faddp
sahf
push
push
add
in
mov
pop
pop
push
movsb
xchg
jge
loop
movsl
jp
sbb
mov
pop
dec
and
icebp
mov
mov
fdivl
jo
fimuls
aad
xchg
dec
cld
inc
neg
xchg
jne
cld
and
inc
in
adc
das
inc
pop
cmp
jbe
in
arpl
ss
adc
bound
pop
call
mov
fcomi
enter
push
add
push
ja
imul
sub
in
pop
insb
test
ja
mov
imul
jle
push
add
icebp
ds
aam
roll
fsubrp
and
jo
sub
fcmovne
loopne
cwtl
or
mov
in
cmp
scas
xor
adc
xor
pop
push
pop
lahf
cmp
add
push
int3
inc
gs
mov
pushf
scas
adc
push
mov
add
add
cs
or
cld
jne
cmp
sbb
outsb
and
into
push
shrb
add
ret
clc
mov
out
pop
xor
mov
mov
xchg
out
fdivrl
push
add
sbb
icebp
push
subb
mov
push
mov
push
mov
data16
notl
add
and
std
cmp
pop
and
jo
gs
fincstp
jae
fiadds
jmp
addb
sub
std
lock
dec
xor
loop
pop
push
sbb
in
inc
ficomps
test
xchg
push
sub
push
mov
and
add
nop
mov
pop
mov
scas
push
loope
ret
or
filds
inc
shr
push
js
xchg
and
mov
push
cmpsl
xor
adc
daa
push
adc
mov
and
sub
mov
sub
or
bound
push
pop
push
test
or
xchg
into
dec
jecxz
dec
pop
xor
xor
xchg
dec
pop
cmp
out
push
inc
xchg
mov
pop
aaa
dec
cmp
xor
inc
jmp
cmp
aas
mov
jp
add
out
sub
lea
push
ss
pushf
lcall
lock
notl
dec
xchg
xchg
icebp
mov
add
inc
insl
mov
pop
ret
pop
push
std
sbb
mov
test
add
push
int
adc
mov
inc
loope
jle
in
leave
mov
in
jle
shrl
mov
add
push
jns
cmp
mov
cmp
push
pop
aad
mov
pop
pusha
dec
sbb
add
pop
cmpb
jae
mov
push
cmp
and
push
pop
jno
pop
pop
push
mov
std
cmp
mov
test
sub
dec
in
cmpsl
insb
frstor
push
add
movq
push
sahf
push
push
add
or
call
pop
pop
loop,pt
test
stos
lock
lds
adc
pop
push
xchg
xchg
adc
pop
outsb
push
and
std
sub
repnz
test
aaa
pushf
push
pop
cld
mov
pop
mov
int3
mov
imul
int3
out
inc
arpl
push
or
xchg
mov
and
addr16
cmc
xor
inc
or
push
lea
mov
rol
add
int
or
xchg
mov
pop
dec
neg
ret
adc
in
mov
push
fisubl
cwtl
cld
inc
push
adc
push
xor
pop
int
inc
jp
push
popa
test
push
and
movd
mov
xor
pop
sbbl
inc
decb
jns
push
push
pusha
xor
sub
push
or
or
fyl2x
mov
adc
aaa
mov
pop
fisubl
adc
fs
nop
cli
jl
in
fistps
mov
cwtl
les
stc
out
xor
mov
es
add
in
xor
xlat
sub
jo
pop
sbb
stos
cld
pop
jp
adc
add
cs
lea
mov
movaps
sbb
add
push
repnz
aas
loop
or
data16
lock
ds
inc
xchg
mov
pop
in
std
sub
aad
jmp
and
add
std
xchg
mov
pop
cli
inc
push
xchg
bound
insb
std
mov
pop
movsl
es
push
mov
push
popa
cld
mov
frstor
ljmp
mov
mov
add
push
int3
push
cmc
cmp
popa
pusha
imul
sub
mov
inc
adc
fistpl
mov
push
inc
lret
push
add
or
xchg
data16
mov
pop
imul
mov
push
dec
outsl
popf
iret
mov
mov
nop
mov
pop
xor
movsb
and
or
fs
ret
int
xor
push
pop
cmp
inc
bound
dec
loopne
xor
pushf
xchg
cwtl
mov
xor
pop
push
mov
repnz
pop
xchg
in
push
inc
leave
jg
push
add
test
xor
call
adc
cld
pop
cs
xchg
ret
cmpsb
or
pop
lock
push
movsb
adc
mov
scas
or
sbb
mov
pop
test
add
popf
sub
xchg
mov
pop
adc
call
sub
add
push
add
cmc
push
xor
dec
cmpsl
jle
push
add
fs
adc
cmp
jmp
xor
mov
fisubs
push
or
fbld
and
scas
sub
test
xchg
scas
insl
repz
hlt
lods
fs
xor
pop
push
rdmsr
mov
pop
fnsave
mov
pop
push
add
fcoms
push
pop
push
int
insb
cmp
pop
xlat
sahf
jecxz
cs
push
adcl
data16
mov
into
sti
cmp
leave
inc
ret
subb
pop
push
jne
sub
jge
mov
and
or
xchg
fwait
movsb
pop
jg
test
dec
mov
or
sbb
push
add
inc
jno
cmp
fsubl
xchg
fildl
pop
mov
xchg
jne
push
pop
in
sbb
jg
push
add
fbstp
mov
xchg
imul
pop
push
mov
adc
xor
das
movsl
pop
cld
nop
mov
pop
jge
jb
jb
push
popf
push
sarl
push
or
movsb
lods
pop
xchg
movsb
repnz
inc
jno
rolb
mov
out
movsb
or
jae
inc
js
das
or
repnz
xchg
and
fwait
push
mov
jno
xchg
movsb
repnz
adc
shll
sub
fsubrs
pop
and
iret
mov
pop
xchg
movsb
arpl
daa
cltd
or
mov
movsb
bnd
xlat
sub
out
mov
ret
nop
ja
mov
xchg
movsb
mov
jo
jle
adc
fnstenv
or
jae
test
lcall
inc
hlt
mov
in
dec
pop
xchg
movsb
jmp
sbbl
mov
movsl
repnz
jb
sti
cltd
arpl
dec
lcall
stos
aas
int3
sub
push
and
addl
add
shrb
movsb
mov
fs
inc
out
mov
mov
test
fdiv
xlat
mov
repnz
icebp
mov
xor
ds
aad
sub
iret
cmp
push
xor
lcall
lret
insb
inc
sarb
ret
push
or
sahf
or
adc
call
cmc
mov
gs
jno
adc
xor
in
sub
popf
hlt
icebp
pop
xchg
into
ss
add
pop
and
jp
sbb
xchg
movsb
bnd
in
inc
pop
xchg
movsb
mov
pop
cmp
test
dec
pop
xchg
movsb
inc
pop
movsl
repnz
xchg
mov
loope
cmp
repnz
loope
lea
adc
xor
cmp
and
lods
jne
push
call
xor
jne
outsb
inc
loopne
js
pop
test
dec
aad
dec
sbb
fucomp
into
mull
movsl
repnz
stos
sbbl
mov
cmp
inc
test
cli
cmp
ret
mov
ds
cmp
sti
pop
xchg
movsb
pop
test
or
mov
add
repnz
push
into
lret
add
ficoml
icebp
mov
jl
into
cmp
mov
movsl
repnz
mov
xor
outsb
aam
xchg
dec
inc
test
sbb
cmp
mov
fcoml
sub
mov
repnz
pushf
fcoml
jmp
sbb
mov
int3
fidivrs
xchg
fiadds
xchg
sub
xor
sbb
or
xchg
lret
sarb
push
pop
lahf
push
ficoml
push
sar
xchg
lcall
jb
pop
icebp
fiaddl
mov
loopne
mov
popa
js
mov
xchg
fcmovnu
mov
loopne
xchg
or
pushf
adc
clc
or
xchg
mov
mov
aas
inc
imul
dec
out
xlat
shll
lcall
inc
mov
in
ds
mov
mov
jne
popa
stos
negl
in
push
and
push
data16
adc
fiadds
xchg
dec
jno
lcall
pop
je
in
push
mov
ljmp
cld
in
or
sub
sbb
push
faddl
and
xchg
stos
cmc
fdiv
je
mov
mov
test
lahf
pop
clc
cmp
gs
xor
fwait
das
aaa
rclb
icebp
fists
mov
gs
orl
pop
int3
daa
es
lret
stc
fucompp
btc
rcll
pushl
inc
mov
adc
sbb
or
outsl
dec
mov
mov
pusha
adc
mov
and
dec
int3
ss
fucompp
in
hlt
xor
fisttpl
dec
and
xchg
fcmovnu
int3
xchg
loopne
xor
push
sub
xlat
pop
dec
and
mov
shrl
and
push
mov
ret
mov
pop
inc
jae
rcr
mov
rclb
repz
pop
fcomp
sarl
loopne
mov
and
fcoms
out
movsb
and
mov
mov
jg
bound
movb
xchg
loopne
xchg
mov
inc
fidivl
pop
data16
int3
xchg
loopne
xor
adc
loope
mov
adc
cmp
inc
and
loop
and
and
cmp
inc
mov
xor
push
rcll
aad
test
push
mov
fistpl
push
dec
pop
leave
ljmp
xchg
loopne
dec
xchg
fistpll
inc
loope
mov
rolb
arpl
loopne
mov
xchg
mov
mov
call
or
dec
xchg
sbb
dec
jne
mov
xchg
loopne
jo
push
cld
popa
jo
shlb
sarb
jne
jp
es
scas
mov
insb
jb
stc
or
xchg
push
iret
cmp
or
lahf
loope
cmp
adcl
inc
mov
lods
push
push
iret
cmpsl
inc
pop
fmuls
cli
in
push
mov
xchg
in
dec
sarb
or
pop
mov
lcall
xchg
lcall
enter
icebp
push
pop
mov
jecxz
sbb
leave
xchg
lcall
cmpsb
shll
iret
inc
add
test
push
inc
addl
lcall
aaa
scas
sub
rcrb
push
les
and
je
dec
cmpsb
lcall
fisubl
jp
jmp
and
lahf
cmp
mov
lcall
cmp
mov
push
fucom
aad
or
decb
or
loop
je
dec
cmpsb
lcall
jg
test
scas
and
fcmovb
test
lcall
cmpsb
daa
fucom
jae
and
or
test
mov
sbb
ret
push
les
xor
lds
cmp
cmp
dec
and
dec
scas
ss
and
mov
and
ror
cmpsb
xchg
sub
inc
cltd
test
sub
mov
das
sbb
fidivl
cwtl
setbe
dec
mov
mov
push
dec
sti
push
xchg
inc
mov
int3
dec
les
popf
mov
sub
cmovns
outsb
pusha
das
outsb
or
push
dec
cmpsb
or
sub
push
jle
mov
dec
cmpsb
pusha
pop
sub
cmp
jecxz
enter
lds
and
lcall
ret
push
nop
pop
pop
inc
xor
push
aam
popa
outsl
scas
pop
cmp
sbb
insb
jge
inc
pop
adc
push
push
jns
dec
mov
sbb
fxtract
shrb
mov
cmp
push
dec
cmpsb
xchg
push
jp
sub
mov
lds
cmpsb
arpl
in
xchg
imulb
fs
das
addr16
mov
cltd
xchg
sbb
push
dec
cmpsb
xchg
cltd
inc
cmpsb
lcall
add
xchg
test
inc
cwtl
sbb
xchg
cmp
mov
aaa
dec
sti
cmc
add
fstpt
rorb
xor
pop
sbb
lcall
es
aaa
int3
fs
loope
push
mov
cmpsb
lcall
cmpsb
in
cwtl
push
cmp
push
dec
cmpsb
hlt
or
xchg
xchg
imul
leave
mov
mov
push
dec
cmpsb
mov
sbb
cmp
sbb
pop
jns
inc
push
int3
mov
sbb
mov
or
cmpsl
popa
or
cld
fsubrs
adc
inc
int3
mov
lahf
sbb
xchg
adc
dec
cmpsb
lcall
clc
les
inc
cmpsb
lcall
insl
mulb
cmpsb
xor
jmp
xchg
lcall
mov
insb
push
adc
int3
and
fisttpl
hlt
cmpsb
mov
in
addr16
sub
movsb
lcall
cmpsb
lcall
xchg
lcall
cld
sub
cmp
or
cmp
leave
mov
pop
outsb
in
jbe
xchg
push
add
in
cmp
mov
outsl
jb
push
es
in
cwtl
add
les
das
and
and
dec
and
cmp
adc
shrl
and
xchg
push
dec
cmpsb
cmp
push
movsb
jae
inc
xor
in
sbb
and
xor
sbb
sub
jnp
test
and
inc
aam
movsl
std
std
test
rclb
dec
and
sahf
dec
cmpsb
lcall
jno
pushf
cld
cmp
push
dec
cmpsb
cmp
inc
mov
lcall
sub
mov
test
xchg
cmovge
lcall
sahf
das
push
xor
mov
dec
cwtl
lcall
jbe
cwtl
repz
and
push
dec
cmpsb
xchg
sub
movsl
sarl
imul
dec
cmpsb
lcall
es
mov
inc
inc
push
je
push
jnp
shlb
test
cmpsb
arpl
test
adc
lea
lcall
lds
cmpsb
lcall
rcrb
mov
iret
or
inc
lret
push
arpl
addr16
sub
lcall
xchg
call
pushaw
add
fimull
pop
insb
ss
push
and
test
or
push
insb
jg
pop
cmpsl
fidivrl
clc
lds
push
in
sub
dec
cmpsb
lcall
push
xchg
xor
lea
dec
cmpsb
std
jo
movaps
jno
pushf
pop
mov
mov
cmp
stc
cli
fsubrl
shrl
inc
lcall
or
xchg
cltd
dec
cmpsb
lcall
cmpsb
lcall
lds
cmpsb
lcall
mov
fndisi(8087
mov
lret
mov
dec
cmpsb
pop
push
pop
lds
lea
push
dec
cmpsb
aam
or
data16
mov
rorb
and
mov
xchg
lcall
pop
outsb
adc
dec
sub
jl
nop
jno
lds
dec
cmpsb
lcall
dec
in
lock
mov
jae
dec
cmpsb
lcall
mov
leave
call
and
adc
lcall
mov
lcall
insl
pop
arpl
cmpsb
lcall
mov
outsl
pop
fbld
loope
and
and
data16
dec
stos
mov
adc
inc
int
lcall
cli
fidivrs
insl
stos
sbb
negb
in
cli
roll
sub
ret
imul
jae
ret
push
inc
xor
mov
jle
fwait
cli
dec
and
cli
inc
fldcw
dec
pop
icebp
sysret
aad
or
sbb
cmc
inc
repz
jecxz
lahf
push
lock
and
dec
adc
lcall
fs
dec
fsubr
cli
mov
lret
inc
push
dec
nop
cmp
jmp
push
inc
in
cli
push
fsubs
cmc
and
jmp
push
fmuls
popf
jnp
movsl
adc
in
cli
addr16
cmpsb
xlat
or
add
es
sbb
jo
push
loopne
push
fsubr
cli
repz
inc
insl
cli
push
mov
sub
mul
push
inc
ror
xchg
mov
outsl
sbb
mov
notl
in
cli
int
notb
dec
fsubr
cli
test
fwait
sub
push
outsb
int3
jmp
xchg
rcl
pushf
jecxz
pop
std
sub
es
gs
mov
cli
push
pop
and
icebp
lea
adc
in
cli
mov
adc
outsb
xchg
push
in
cli
lock
sub
adc
sahf
push
fistps
pop
pushf
imul
addr16
push
fsubr
add
fdivrs
xchg
or
mov
xchg
push
stos
mov
ds
outsb
push
fsubr
xor
mov
add
data16
fsubr
xchg
mov
mov
jnp
and
popa
movsb
lahf
test
stc
js
mov
xchg
push
xor
arpl
push
fsubr
cli
rcll
mov
mov
in
cli
push
out
mov
aad
lcall
pusha
xor
lds
add
popf
lcall
add
hlt
adc
in
cli
push
rolb
repz
fidivl
mov
cmp
rorl
push
pop
and
fcmovnb
in
cli
push
es
shl
lcall
add
and
cli
push
fsub
jp
fsubr
cli
cli
dec
adc
mov
lahf
mov
fdivrp
push
fdivs
mov
mov
out
mov
add
icebp
mov
cmp
pop
cmp
cli
push
inc
add
push
mov
mov
cmp
int
cli
push
out
cld
cmp
fistps
push
jns
es
mov
ret
insl
fmull
push
xor
dec
int3
push
jo
div
xor
ljmp
mov
fsubr
adc
in
cli
je
cld
stc
decl
pop
mov
sar
dec
in
loope
sti
dec
repz
sbb
into
in
cli
push
sar
movsb
int3
jl
push
mov
call
icebp
cltd
xor
insl
push
fsubr
push
xor
lahf
push
inc
ljmp
outsb
adc
push
pop
in
cli
push
fdiv
test
push
fmuls
cli
push
fmuls
xchg
imul
adc
jg
je
xchg
int
xchg
mov
arpl
stos
jge
cmp
imul
or
repnz
pop
and
jl
aaa
xchg
sbb
xchg
dec
mov
aaa
je
insl
cli
push
mov
push
inc
dec
ss
and
test
sbb
lahf
jle
call
test
lock
fsubr
cli
imul
cli
push
leave
sarl
push
xor
fsubr
jge
jl
cltd
mov
pop
test
cmp
arpl
std
sbb
xchg
imul
push
adc
cli
sbb
je
in
nop
cmp
dec
jnp
add
push
insl
push
fsubr
pop
fidivrl
inc
xor
loop
mov
inc
out
adc
in
cli
mov
mov
lods
xor
pop
mov
mov
push
fdivrs
add
daa
cmp
into
shll
inc
in
cli
push
fdivs
inc
fsubr
cli
mov
loopne
dec
xlat
cmp
cld
cwtl
xchg
mov
xchg
xlat
fs
pop
xor
pop
pop
insl
fcmovne
in
cli
push
mov
ja
ds
insl
adc
push
push
hlt
dec
adc
in
cli
sti
and
push
jbe
rcr
mov
dec
movsb
jmp
pop
fsubr
cli
jns
outsl
stos
mov
fsqrt
push
fdivrs
lahf
pop
in
enter
scas
sub
cmc
add
fs
rcrl
imul
inc
enter
fiaddl
insb
push
fsubr
pop
cmpl
mov
mov
inc
es
cli
push
cmc
dec
ja
scas
iret
cs
pop
sbb
int3
vpsubd
mov
mov
cli
push
fsubrs
push
xchg
mov
push
cld
cmp
cli
push
fadds
jl
push
cmp
es
shlb
in
push
fsubr
cli
push
pop
lock
shrl
insl
stos
add
mov
enter
xlat
cmp
jg
cmp
xchg
repnz
hlt
push
adc
push
das
lea
add
push
xchg
pushf
lods
ret
jp
inc
lea
push
fsubrs
dec
int3
pop
inc
hlt
cmp
xchg
shrl
in
cli
push
add
lock
testl
out
hlt
std
or
hlt
and
ljmp
mov
loopne
push
fsubr
cli
aam
repnz
rcrl
mov
ret
fs
push
cmp
pop
fidivrs
and
add
inc
inc
pop
push
push
scas
imul
push
fsubr
cli
outsl
in
std
dec
sbb
xor
xchg
dec
shll
sbb
out
push
fsub
cmc
push
fsubr
cli
cli
push
aas
mov
inc
in
cli
push
fsubrs
enter
push
fsubr
cli
sbb
rcr
cmp
int3
cmpsb
dec
nop
ret
arpl
imul
js
test
enter
push
add
cli
and
outsb
add
add
inc
mov
pop
gs
cltd
pop
rol
jmp
std
xor
push
paddd
pop
sar
push
fadds
xchg
mov
adc
test
jg
adc
insl
stos
xlat
xchg
insl
int3
cli
push
call
in
cli
push
and
les
insb
sub
jl,pt
cli
mov
push
fdiv
insl
into
cli
push
ljmp
aam
push
insl
into
in
cli
push
xor
nop
mov
push
fsubr
xchg
roll
cmpsb
imul
in
cli
xor
jb
fsubr
fwait
cli
fcoms
loopne
adc
cli
mov
mov
popa
or
insb
jns
fsubr
insl
mov
mov
xchg
xchg
outsb
xor
loopne
push
fsubr
cli
aam
shl
bound
stos
sbb
nop
cmpsb
inc
cmp
dec
notb
arpl
cli
push
fmul
xchg
push
aam
jmp
inc
mov
movhps
push
dec
xor
test
xor
sbb
cmp
imul
xorb
sbb
jl
mov
or
test
push
hlt
push
sub
add
outsb
or
xchg
rclb
mov
cli
push
fdivs
mov
inc
cmpsb
fwait
add
inc
nop
pushf
cmc
or
outsl
push
fsubr
adc
adc
push
clc
out
ret
dec
daa
fwait
cmpsb
add
push
fcoms
rcrb
push
add
sbb
insb
sti
pop
add
pusha
mov
cltd
mov
xchg
into
and
pop
jmp
push
fcomps
incb
addr16
push
fsubr
adc
in
cli
dec
js
add
cli
mov
iret
adc
lahf
ret
jns
jo
sti
cmp
popf
mov
cli
cmp
cmc
aaa
push
imul
add
jb
mov
adc
cmp
icebp
mov
imul
adc
inc
push
icebp
movl
loope
xchg
push
pop
and
pop
fsubr
cli
je
jecxz
in
mov
cmpsl
sub
push
xchg
shrl
fsqrt
push
fsubrs
xchg
stos
es
movsl
out
loopne
and
mov
xor
aaa
cmp
mov
aam
lods
jnp
call
mov
add
sub
add
mov
vpsubd
xchg
aam
aaa
mov
cmp
cli
loop
sbb
add
ret
loopne
push
fsubr
cli
repz
mov
fwait
pop
sbb
sub
insl
or
inc
mov
lcall
in
mulb
push
lods
adc
std
dec
cmp
nop
in
adc
add
test
pop
add
mov
pop
mov
rol
daa
mov
add
mov
aaa
loopne
xchg
outsb
adc
jnp
adc
dec
fsubr
cli
movsl
sub
jae
sbb
and
push
fdivs
dec
mov
stos
sbb
lea
shl
out
push
fsubr
cli
push
pop
sub
cli
push
adc
lcall
cmp
hlt
aaa
fwait
add
cmp
hlt
xor
out
push
fsubr
cli
add
nop
insl
fsubr
cli
push
pop
sub
loopne
loope
pushf
sahf
and
pop
fsubr
cli
dec
push
mov
inc
outsb
adc
mov
in
pop
fsubr
cli
cmp
and
push
inc
jmp
shrl
cli
mov
loopne
xchg
es
push
fmuls
or
push
adc
aad
dec
add
icebp
bound
lea
paddb
insb
leave
in
cli
push
push
inc
add
inc
insl
cld
cmp
add
xor
outsb
loopne
pop
fsubr
cli
cli
push
add
fsubr
xchg
jmp
mov
xchg
add
lcall
xlat
orl
in
ljmp
cltd
pop
rol
jnp
xlat
pop
test
xchg
mov
call
sub
aad
loope
cmpsb
mov
icebp
dec
push
outsl
push
fsubr
sub
push
loopne
jmp
arpl
push
fsubr
insl
fcmovnb
in
cli
push
outsb
sbb
xchg
inc
fldt
ljmp
sarb
sbb
test
or
jns
fsubr
xchg
int
add
data16
jae
jbe
aas
mov
sbb
and
cli
push
imul
sarl
pushf
push
inc
out
push
fsubrs
sbb
std
cmpsb
int
push
jo
fsubr
jmp
mov
xor
jp
add
sbb
xchg
roll
hlt
incl
adc
push
fsubr
add
and
push
jae
fsubr
cmp
pop
add
or
mov
insl
into
in
cli
push
data16
push
fsubr
lcall
cmpsl
mov
pop
es
repz
pushf
pop
and
test
fsubr
inc
icebp
lds
push
fsubr
insl
fld
in
cli
push
pop
jne
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
inc
add
inc
add
add
add
add
add
add
add
sbb
add
add
add
add
add
data16
data16
data16
data16
data16
data16
data16
data16
add
xchg
pop
pop
xchg
pop
pop
xchg
pop
pop
xchg
pop
pop
xchg
pop
pop
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
data16
add
xchg
pop
pop
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
test
data16
add
xchg
pop
pop
int3
leave
lret
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
shrb
shrb
lret
push
push
data16
add
cwtl
addr16
leave
lret
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
shrb
shrb
push
push
data16
add
cwtl
addr16
leave
lret
jmp
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
shrb
lret
push
push
data16
add
cwtl
addr16
aad
jmp
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
shrb
push
push
data16
add
cwtl
addr16
aad
jmp
jmp
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
lret
push
push
data16
add
cwtl
addr16
aad
jmp
jmp
jmp
loop
std
xlat
mov
xlat
mov
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
test
test
test
test
std
shrb
shrb
lret
push
push
data16
add
cwtl
addr16
aad
jmp
jmp
sarl
jp
sarl
jle
mov
test
test
mov
leave
mov
mov
vpunpckldq
std
vpcmpeqd
xchg
movsl
movsl
xchg
xchg
hlt
lret
movsl
std
shrb
xlat
mov
lret
push
push
data16
add
movsl
jae
aad
aad
jmp
mov
mov
test
mov
mov
mov
mov
xchg
mov
mov
je
cmc
je
cmc
outsb
sar
mov
cmpsb
adcb
jne
cmpsb
jb
shrb
xlat
mov
lret
pop
pop
data16
add
movsl
jae
aad
aad
jmp
ret
xchg
xchg
mov
mov
mov
mov
xchg
cmpsb
adcb
xchg
cmpsb
adcb
mov
test
mov
xorl
sar
je
cmc
mov
mov
mov
jb
xlat
mov
shrb
mov
xchg
pop
pop
data16
add
movsl
jae
aad
aad
repz
xchg
mov
adcb
mov
jne
adcb
xchg
cmpsb
adcb
leave
mov
jns
stc
jp
jp
jp
incl
jmp
test
xchg
cwtl
mov
adcb
mov
xlat
mov
xlat
mov
mov
xchg
pop
pop
data16
add
cmpsl
js
aad
aad
repz
xchg
test
adcb
xchg
mov
mov
push
js
cmpsb
adcb
cmpsb
xchg
test
cwtl
mov
mov
jnp
jmp
in
xorl
xchg
movsl
cmpsb
adcb
xchg
fisubl
std
xlat
mov
xlat
mov
mov
xchg
pop
pop
data16
add
cmpsl
js
aad
aad
repz
cwtl
mov
test
test
addr16
push
push
mov
push
mov
push
js
mov
orl
lcall
stc
test
stc
test
stc
sbb
xorl
test
test
xlat
mov
xlat
mov
xlat
mov
mov
xchg
pop
pop
data16
add
cmpsl
js
aad
aad
repz
cwtl
mov
xchg
lods
mov
mov
push
mov
push
mov
cmpsb
orl
mov
jmp
fptan
test
stc
test
stc
test
stc
test
stc
jp
jns
stc
mov
fisubl
std
xlat
mov
xlat
mov
mov
xchg
pop
pop
data16
add
mov
je
aad
std
repz
cwtl
mov
mov
mov
mov
xor
cmp
mov
mov
mov
jnp
jmp
fptan
mov
incb
stc
xorl
mov
cmpsb
js
xlat
mov
xlat
mov
xlat
mov
mov
cwtl
data16
add
mov
je
aad
std
repz
cwtl
mov
mov
mov
mov
ja
bound
jae
les
les
les
les
jno
shll
shll
shll
shll
xlat
sbb
sbb
jbe
xlat
sbbl
mov
xlat
mov
xlat
mov
ret
std
mov
cwtl
data16
add
mov
je
aad
std
repz
test
jae
les
les
les
les
lea
cmp
inc
arpl
dec
bound
mov
gs
shll
shll
sarl
jmp
fptan
mov
incb
xlat
je
enter
jae
les
mov
xlat
mov
xlat
mov
ret
std
mov
cwtl
data16
add
mov
je
out
std
repz
test
imul
lret
sub
push
and
arpl
dec
ja
add
xchg
aad
xchg
aad
xchg
aad
xchg
fistpl
je
cmc
je
cmc
test
stc
test
stc
jbe
out
popf
shrl
lret
imul
std
xlat
mov
ret
std
mov
cwtl
data16
add
mov
je
out
std
cld
cli
std
repz
shll
shll
rcrl
ret
dec
and
jo
pop
mov
fistpl
fistpl
fistpl
fistpl
fistpl
ljmp
test
stc
test
stc
test
stc
fs
bound
gs
rcr
test
loop
loop
cli
lret
mov
cwtl
data16
add
mov
je
out
std
cld
cli
std
cld
cli
jbe
xlat
pop
xchg
fistpl
fistpl
pop
mov
dec
sub
xchg
mov
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
cmpsl
ljmp
jns
stc
pop
mov
pop
cmpsl
ljmp
pop
xchg
fistpl
fcmovnu
test
loop
loop
cli
lret
test
cwtl
data16
add
ret
out
in
cld
cli
std
cld
cli
imul
xchg
out
inc
arpl
cmp
cmp
pop
xchg
out
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
dec
mov
test
stc
pop
mov
pop
cmpsl
ljmp
dec
xchg
out
xchg
out
xchg
fcmovnu
test
loop
loop
cli
lret
test
cwtl
data16
add
ret
out
in
cld
cli
std
cld
cli
imul
xchg
clc
sub
push
sub
push
sub
jo
push
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
dec
mov
vpunpckldq
std
push
test
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
dec
xchg
out
test
loop
loop
cli
lret
test
cwtl
data16
add
ret
out
in
cld
cli
std
cld
cli
sub
cmpsl
or
sub
push
sub
push
sub
xchg
aaa
test
daa
mov
xor
and
and
daa
push
out
pusha
in
pusha
in
push
out
push
out
push
out
push
out
dec
fldenv
dec
fstps
cmp
loop
cli
lret
test
movsl
jae
data16
add
leave
fwait
and
in
cld
cli
std
cld
cli
sub
cltd
add
adc
push
sub
push
daa
push
or
adc
mov
xor
and
and
daa
push
out
push
out
push
out
push
out
push
out
dec
fldenv
dec
fstps
enter
loop
loop
cli
lret
test
movsl
jae
data16
add
leave
fwait
and
in
cld
cli
std
cld
cli
sub
cltd
add
daa
xor
xor
xor
daa
push
and
sbb
sbb
sbb
fldenv
push
out
push
out
push
out
push
out
push
out
push
out
push
out
dec
fstps
ror
fwait
cmp
loop
cli
lret
test
cmpsl
js
data16
add
leave
fwait
and
in
cld
cli
std
cld
cli
dec
ja
daa
push
out
push
out
dec
ja
inc
arpl
xchg
jae
ss
cmp
cs
in
dec
fldenv
dec
fldenv
push
out
pusha
in
cmp
xchg
clc
inc
xchg
clc
inc
xchg
clc
cmp
daa
push
out
push
out
dec
fstps
cmp
loop
cli
lret
test
cmpsl
js
data16
add
leave
fwait
and
in
cld
cli
std
cld
cli
push
xchg
xor
xor
xor
xor
sbb
ss
cmp
inc
mov
inc
xchg
clc
dec
mov
pop
mov
pop
mov
vpunpckldq
std
jecxz
sti
lcall
vmulpd
cs
in
pusha
in
cmpsl
xchg
jmp
cli
lret
test
cmpsl
js
data16
add
fisubl
std
cld
cli
std
cld
cli
push
xchg
xor
xor
cs
in
inc
arpl
outsb
aam
jae
cmp
inc
mov
inc
xchg
clc
dec
mov
pop
mov
pop
mov
aam
std
cld
cli
jecxz
sti
vpunpckldq
std
pop
mov
pop
mov
push
test
dec
mov
jmp
cli
lret
test
cmpsl
js
data16
add
fsubrs
std
cld
cli
std
cld
cli
push
xchg
xor
xor
xor
xor
xor
ss
cmp
inc
mov
inc
xchg
clc
dec
mov
pop
mov
pop
mov
vpunpckldq
std
stos
loop
jns
stc
vpunpckldq
std
pop
mov
pop
mov
push
test
dec
mov
jmp
cli
lret
test
cmpsl
js
data16
add
fsubrs
std
cld
cli
std
cld
cli
push
xchg
xor
xor
xor
daa
push
xor
ss
cmp
inc
xchg
clc
dec
mov
push
test
pop
mov
pop
mov
vpunpckldq
std
vpunpckldq
std
pop
mov
pop
mov
push
test
push
test
dec
mov
jmp
cli
lret
test
cmpsl
js
data16
add
fsubrs
std
cld
cli
std
cld
cli
xchg
std
xor
xor
xor
xor
xor
xor
ss
cmp
inc
xchg
clc
inc
xchg
clc
dec
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
push
test
dec
mov
lret
cmpsl
xchg
jmp
cli
lret
mov
data16
add
fsubrs
std
cld
cli
std
cld
cli
nop
mov
xor
xor
xor
xor
xor
ss
cmp
inc
mov
inc
xchg
clc
dec
mov
push
test
pop
mov
pop
mov
pop
mov
fs
je
stc
je
stc
je
stc
nop
mov
loop
jmp
cli
lret
mov
data16
add
fsubrs
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
repnz
jmp
repz
repz
repz
jmp
jmp
jmp
jmp
sti
pushf
pushf
lods
cmpb
data16
add
in
mov
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
repz
repz
jmp
jmp
jmp
cli
lret
pushf
pushf
lods
cmpb
data16
add
in
mov
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
repz
repz
mov
std
mov
std
mov
std
test
std
test
std
test
jmp
data16
add
in
mov
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
repz
orb
mov
mov
jge
jp
cwtl
data16
add
jmp
nop
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
repz
mov
cmc
popl
cmc
popl
cmc
popl
fnstenv
fnstenv
mov
data16
add
mov
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
js
test
std
test
std
test
std
test
aam
dec
data16
jmp
nop
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
shrb
mov
std
test
aam
dec
data16
add
add
xchg
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
js
std
xlat
mov
mov
aam
dec
data16
add
test
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
xlat
mov
mov
data16
add
xchg
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
mov
je
loop
fisubl
add
test
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
repnz
jmp
in
jmp
in
jmp
test
mov
data16
add
add
xchg
std
xlat
mov
xlat
mov
xlat
mov
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
call
cmpsl
call
cmpsl
in
mov
mov
mov
aad
cwtl
aad
cwtl
aad
cwtl
lret
cmpsl
xchg
lret
cmpsl
xchg
lret
cmpsl
xchg
lret
cmpsl
xchg
lret
cmpsl
xchg
lret
cmpsl
xchg
mov
je
xchg
xchg
add
incl
add
incl
add
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
add
and
add
add
add
sbb
add
